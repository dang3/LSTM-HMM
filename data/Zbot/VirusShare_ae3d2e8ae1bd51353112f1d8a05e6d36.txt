xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
xor
xor
xor
xor
xor
xor
xor
xor
in
sub
push
push
push
mov
mov
mov
mov
mov
mov
lea
mov
sub
inc
lea
mov
lea
lea
or
shr
add
lea
lea
shr
add
movl
sub
lea
mov
xor
lea
shr
lea
shl
inc
lea
lea
or
mov
xor
add
mov
mov
lea
push
call
xor
mov
xor
mov
shr
xor
add
lea
dec
add
mov
mov
lea
push
call
sub
sub
sub
mov
add
mov
mov
mov
push
call
and
sub
dec
lea
add
mov
mov
lea
push
call
mov
or
movl
jmp
mov
add
mov
cmpl
jge
xor
dec
inc
lea
lea
xor
sub
mul
dec
shl
lea
mov
mov
lea
lea
and
jmp
cmpl
je
mov
shl
mov
shr
xor
mov
xor
add
mov
shr
and
mov
add
mov
sub
mov
or
or
mov
dec
xor
lea
xor
lea
shl
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
add
shl
lea
lea
xor
dec
dec
lea
jmp
mov
add
mov
mov
shl
mov
shr
xor
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
lea
jmp
or
or
add
lea
inc
lea
sub
sub
sub
dec
dec
lea
sub
movl
jmp
mov
add
mov
cmpl
jge
add
mov
lea
lea
shl
and
lea
or
lea
dec
add
lea
jmp
mov
xor
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
sub
xor
inc
add
add
xor
sub
shr
lea
jmp
movl
jmp
mov
add
mov
cmpl
jge
sub
lea
mov
dec
mov
lea
shr
lea
shl
sub
lea
lea
mul
lea
shr
inc
lea
mov
sub
shl
jmp
lea
shr
add
sub
inc
inc
lea
lea
inc
or
movl
jmp
mov
add
mov
cmpl
jge
xor
mul
lea
xor
add
shr
lea
shl
lea
lea
and
jmp
movl
jmp
mov
add
mov
cmpl
jge
lea
inc
shl
lea
xor
add
lea
dec
add
or
sub
lea
inc
lea
jmp
mov
add
shr
mov
mov
and
mov
mov
sub
mov
jmp
lea
add
lea
shr
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
dec
shl
and
lea
and
lea
dec
shr
shr
dec
shl
shr
shr
lea
or
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
mov
cmpl
jae
movl
add
jmp
mov
mov
mov
mov
shl
movl
jmp
mov
add
mov
cmpl
jge
xor
lea
add
add
lea
and
mov
and
shr
shr
lea
lea
lea
shr
or
lea
jmp
mov
mov
mov
mov
shl
sub
lea
push
push
push
push
push
push
call
and
cmp
je
ret
push
push
push
push
call
or
mov
je
mov
and
mov
mov
mov
mov
mov
add
mov
push
push
mov
mov
push
push
call
mov
movl
movl
mov
mov
push
call
and
add
movl
movl
movl
movl
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
lea
inc
mov
add
lea
lea
lea
or
dec
inc
mov
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
add
xor
lea
xor
add
add
lea
or
mul
shl
add
lea
lea
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
movl
jmp
mov
add
mov
cmpl
jge
shr
add
mov
shr
xor
dec
and
sub
jmp
cmpl
jne
mov
mov
push
call
sub
mov
mov
push
push
push
call
sub
add
xor
mov
mov
push
call
and
add
and
xor
or
mov
mov
push
call
and
sub
xor
mov
mov
lea
push
call
mov
mov
push
call
mov
mov
push
call
xor
xor
and
mov
mov
push
call
sub
mov
xor
add
mov
or
mov
mov
push
call
xor
xor
or
mov
mov
lea
push
call
and
mov
add
mov
add
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
shl
lea
lea
lea
shl
inc
shl
lea
shr
sub
and
dec
inc
dec
lea
sub
mul
add
and
inc
jmp
jmp
mov
mov
jmp
mov
add
mov
mov
cmpl
jne
mov
cmpl
jne
jmp
jmp
movl
movl
movl
movl
mov
mov
sub
shr
sub
shl
lea
shl
lea
mul
xor
or
dec
and
xor
mul
mov
shr
mov
xor
add
xor
dec
mov
sub
lea
shl
mov
lea
lea
sub
mul
lea
sub
lea
dec
movl
jmp
mov
add
mov
cmpl
jge
xor
mov
lea
lea
lea
sub
add
shl
dec
add
jmp
movl
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
xor
lea
shr
add
lea
lea
mul
lea
lea
lea
shl
or
shr
shl
add
and
mov
mul
sub
movl
jmp
mov
add
mov
cmpl
jge
shr
shr
lea
and
shr
add
mul
shl
inc
lea
lea
lea
shl
shl
and
jmp
mov
push
lea
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
dec
jmp
and
sub
lea
mov
add
mul
dec
shr
lea
and
xor
lea
movl
jmp
mov
add
mov
cmpl
jge
lea
add
shl
lea
lea
inc
jmp
sub
add
shr
lea
lea
xor
shr
and
sub
sub
mov
mov
mov
shl
dec
and
inc
lea
shr
jmp
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
cmpl
jae
movl
mov
jmp
movl
jmp
mov
add
mov
mov
cmp
jae
and
dec
shr
or
shl
lea
sub
add
sub
lea
or
xor
lea
mov
inc
xor
sub
sub
xor
lea
lea
inc
mov
add
sub
mov
cmpl
jne
mov
add
sub
mov
mov
mov
lea
mov
shr
lea
shl
mov
lea
xor
mov
lea
xor
lea
or
xor
or
sub
shr
add
movl
jmp
mov
add
mov
cmpl
jge
shl
add
lea
add
mov
shr
xor
inc
shr
lea
mov
lea
shr
shl
dec
lea
add
jmp
mov
add
sub
mov
cmpl
jne
mov
add
sub
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
and
add
lea
shr
sub
add
lea
mov
shl
xor
sub
lea
xor
mul
jmp
movl
jmp
mov
add
mov
cmpl
jge
sub
lea
lea
or
lea
lea
jmp
jmp
sub
add
xor
mov
mov
push
call
sub
add
mov
add
sub
mov
xor
mov
sub
add
mov
mov
sub
add
add
sub
mov
mov
sub
add
sub
mov
mov
sub
mov
movl
movl
mov
cmp
jae
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jge
mov
movzwl
sar
cmp
jne
mov
mov
add
mov
movzwl
and
mov
add
mov
movzwl
and
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
push
call
mov
sub
movl
mov
add
sub
add
sub
mov
mov
cmpl
je
mov
mov
push
call
mov
xor
mov
mov
add
sub
add
sub
push
call
mov
or
add
or
mov
mov
push
push
push
call
cmpl
je
mov
cmpl
je
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmpl
je
mov
mov
and
je
mov
mov
and
movzwl
push
mov
push
call
mov
mov
mov
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
and
add
mov
mov
lea
push
call
or
or
and
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
je
movl
or
jmp
movl
jmp
mov
add
mov
cmpl
jge
xor
inc
mov
lea
lea
lea
dec
lea
shl
shr
add
lea
shr
lea
jmp
mov
mov
shr
lea
mov
lea
lea
dec
xor
add
lea
inc
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
shr
add
dec
shr
sub
xor
lea
and
or
or
mov
inc
shl
sub
or
lea
mul
jmp
add
and
xor
lea
lea
inc
lea
shl
add
lea
lea
shl
shl
call
movl
jmp
mov
add
mov
cmpl
jge
mul
sub
and
lea
sub
shr
jmp
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
xor
push
mov
xor
mov
push
call
pop
pop
test
je
inc
inc
push
xor
mov
push
call
pop
pop
test
jne
mov
push
push
push
call
add
mov
mov
fwait
mov
lea
add
and
call
mov
mov
mov
fwait
jmp
xor
inc
ret
mov
call
mov
lea
push
call
pop
mov
test
jne
movl
fwait
orl
fldl
jmp
xor
inc
orl
inc
push
pushl
push
call
push
call
add
fstpl
test
je
push
call
pop
fldl
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
and
inc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
arpl
inc
add
inc
add
inc
add
inc
add
es
add
es
add
es
add
es
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jl
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
sub
xor
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
push
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
inc
jmp
push
push
push
call
pop
push
push
call
fldl
add
pop
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
mov
mov
mov
xor
cmp
je
cmp
je
inc
inc
dec
jne
cmp
je
cmp
jne
sub
sar
inc
pop
ret
mov
pop
ret
push
mov
sub
mov
push
push
push
mov
xor
xor
cmp
mov
mov
je
mov
cmp
jne
xor
jmp
cmp
jne
cmp
jbe
mov
cmpw
ja
mov
mov
mov
inc
inc
test
je
inc
cmp
jb
jmp
cmpl
jne
cmp
jbe
mov
mov
cmp
je
inc
inc
dec
jne
cmp
je
cmp
jne
sub
sar
inc
mov
mov
lea
push
push
push
push
push
pushl
push
pushl
call
cmp
je
cmp
jne
cmp
jne
jmp
lea
push
push
push
push
mov
push
pushl
push
pushl
call
mov
cmp
je
cmp
jne
lea
jmp
cmp
jne
call
cmp
je
movl
or
mov
pop
pop
pop
call
leave
ret
lea
push
push
pushl
lea
push
push
pushl
push
pushl
call
cmp
mov
je
cmp
jne
lea
cmp
ja
xor
cmp
jle
mov
cmp
mov
mov
je
inc
inc
cmp
jl
addl
cmp
jb
mov
jmp
cmp
jne
pushl
call
pop
jmp
lea
push
push
push
push
push
pushl
push
pushl
call
cmp
je
cmp
jne
dec
jmp
push
mov
push
cmpw
je
cmpw
jae
movzwl
mov
mov
jmp
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
xor
jmp
mov
movzwl
movzwl
and
leave
ret
jmp
ret
mov
mov
movl
movl
movl
movl
mov
ret
mov
mov
mov
ret
call
call
cmpl
mov
je
call
fnclex
ret
int3
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
xor
push
push
push
push
pushl
mov
lea
push
lea
push
xor
call
mov
add
test
je
mov
mov
mov
jmp
lea
push
lea
push
call
test
pop
pop
jne
cmp
jne
mov
test
jne
cmp
jne
or
mov
mov
mov
sub
pop
mov
mov
mov
mov
mov
mov
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
ret
mov
ret
mov
mov
movzwl
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
mov
mov
inc
inc
test
jne
sub
sar
dec
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
push
push
call
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
cmp
je
cmp
je
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
jne
xor
jmp
mov
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
andl
orl
xor
inc
mov
xor
cmp
jne
push
push
call
pop
pop
mov
cmp
je
mov
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
andl
orl
xor
inc
mov
xor
cmp
jne
lea
push
call
pop
mov
cmp
je
mov
cmp
jne
mov
mov
mov
add
mov
lea
orw
orw
push
push
pushl
pushl
pushl
call
mov
cmpw
je
cmpw
jne
push
pushl
pushl
call
add
jmp
andl
cmpl
je
pushl
call
pop
xor
cmp
je
pushl
call
pop
mov
lea
call
ret
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
movsbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
push
mov
jmp
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
pop
ret
mov
fldl
fcompl
fnstsw
test
jne
xor
inc
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
mov
cmpb
push
push
push
je
mov
mov
xor
test
setg
xor
cmpl
mov
sete
mov
add
mov
call
jmp
mov
pushl
pushl
call
mov
mov
push
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
add
cmpl
mov
jne
movb
inc
test
jle
lea
mov
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmpl
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
cltd
push
pop
idiv
add
mov
inc
cmp
jl
cltd
push
pop
idiv
add
mov
add
mov
pop
pop
pop
pop
ret
pushl
movb
pushl
pushl
pushl
call
add
movb
ret
cmpb
push
mov
push
push
push
je
mov
cmp
mov
jne
xor
cmpl
sete
add
add
mov
movb
movb
jmp
mov
pushl
pushl
call
mov
mov
add
push
push
xor
cmpl
sete
add
push
call
add
cmpl
mov
jne
movb
lea
mov
xor
inc
test
jg
mov
call
movb
inc
jmp
add
cmpl
jle
mov
call
mov
mov
mov
inc
test
jge
neg
cmpb
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
pop
pop
pop
mov
pop
ret
pushl
movb
pushl
pushl
call
add
movb
ret
push
mov
push
push
mov
push
pushl
pushl
call
mov
mov
dec
mov
xor
cmpl
push
sete
push
mov
add
mov
push
call
mov
mov
add
dec
cmp
mov
setl
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
mov
push
pushl
movb
push
call
add
jmp
pushl
movb
push
pushl
push
call
add
pop
pop
movb
pop
pop
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
test
jne
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
xor
inc
ret
xor
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
fs
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
fs
add
gs
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
gs
add
inc
add
inc
add
gs
add
gs
add
gs
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
gs
add
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
pop
cltd
idiv
push
pop
sub
or
shl
mov
not
test
je
xor
ret
cmpl
jne
inc
cmp
jl
xor
inc
ret
mov
push
push
push
pop
cltd
idiv
mov
mov
lea
push
push
pop
sub
xor
inc
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
ret
push
mov
push
andl
push
push
push
mov
dec
push
lea
pop
cltd
idiv
push
pop
sub
xor
inc
mov
shl
mov
mov
test
je
lea
push
push
call
test
pop
pop
jne
push
pushl
call
pop
pop
mov
mov
or
mov
shl
push
pop
and
inc
cmp
jge
lea
sub
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
pop
sub
push
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
xor
mov
cmpl
jne
inc
cmp
jl
xor
inc
ret
xor
ret
push
mov
sub
mov
push
push
push
push
pop
cltd
mov
idiv
mov
or
mov
mov
shl
mov
xor
sub
not
mov
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
push
pop
mov
sub
lea
cmp
jl
mov
mov
jmp
andl
dec
sub
test
jge
pop
pop
pop
leave
ret
push
mov
sub
mov
movzwl
push
push
mov
push
mov
and
mov
mov
mov
mov
movzwl
shl
and
sub
cmp
mov
lea
mov
push
jne
xor
call
test
pop
jne
lea
stos
stos
stos
push
pop
jmp
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
xor
lea
stos
stos
stos
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
pushl
jl
xor
lea
stos
stos
stos
orb
lea
push
call
mov
add
pop
xor
pop
inc
jmp
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
mov
andl
xor
mov
push
push
push
mov
and
mov
mov
mov
mov
movzwl
shl
mov
lea
push
and
mov
call
test
pop
pop
je
mov
inc
jmp
mov
cmp
jne
movl
mov
or
mov
mov
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
xor
xor
push
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
je
dec
jmp
push
pop
movl
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
jmp
decl
mov
inc
cmp
je
cmp
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
cmpl
jae
incl
mov
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
movzbl
jle
push
push
call
pop
xor
pop
inc
jmp
mov
movzbl
and
test
je
mov
jmp
cmp
lea
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
jmp
mov
inc
cmp
je
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
je
mov
jmp
cmpl
je
movsbl
sub
lea
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
pop
dec
cmp
jne
jmp
movl
xor
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
mov
inc
jmp
mov
cmpl
mov
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
jmp
decl
incl
dec
cmpb
je
lea
push
pushl
lea
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jg
cmp
jl
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
movl
jmp
xor
mov
mov
xor
movl
jmp
movl
xor
xor
xor
xor
mov
or
pop
mov
mov
mov
mov
mov
mov
pop
pop
call
leave
ret
or
imul
imul
imul
insb
inc
add
insb
inc
add
insl
inc
add
insb
inc
add
add
inc
add
insl
inc
add
in
sub
mov
push
mov
xor
push
push
push
pushl
lea
pushl
pushl
push
call
pushl
mov
lea
push
call
add
cmp
jne
or
mov
mov
pop
call
leave
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
pop
pop
ret
mov
mov
mov
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
mov
add
ret
push
mov
push
push
cmpl
push
mov
push
push
je
cmpl
je
cmp
jbe
xor
mov
inc
cmp
jae
cmp
jle
push
push
call
pop
pop
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
push
mov
mov
mov
push
mov
test
push
mov
push
lea
movb
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
test
movb
jl
cmpb
jl
jmp
movb
dec
cmpb
je
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
xor
mov
push
push
push
mov
mov
mov
mov
shr
and
and
mov
mov
mov
movzwl
and
test
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
or
mov
shl
test
mov
mov
jne
mov
mov
mov
shl
shr
or
add
add
test
mov
mov
je
mov
or
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
push
call
pop
pop
push
push
push
sub
lea
mov
movsl
movsl
movsw
call
mov
mov
movsbl
mov
movswl
mov
add
movl
mov
call
pop
pop
leave
ret
push
call
pop
ret
push
mov
fninit
call
test
je
mov
testl
je
andl
movl
pop
ret
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
push
movzwl
push
mov
mov
and
push
mov
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
test
pop
pop
pop
je
or
ret
xor
test
je
inc
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
push
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
test
pop
je
or
ret
mov
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
ret
push
fstsw
pushl
call
pop
pop
ret
push
fnstsw
fnclex
pushl
call
pop
pop
ret
push
mov
push
push
fstcw
mov
call
mov
mov
not
and
mov
and
or
call
mov
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
mov
push
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
mov
pop
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
mov
mov
add
push
mov
shr
mov
lea
or
mov
mov
shr
shl
or
pop
mov
mov
pop
ret
mov
mov
mov
push
push
mov
mov
shr
shl
or
mov
mov
shl
shr
or
shr
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
mov
mov
cmp
push
push
movl
mov
mov
mov
jbe
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
movsbl
andl
andl
mov
lea
push
push
call
add
incl
decl
jne
xor
cmp
jne
mov
mov
addl
mov
shr
mov
mov
mov
shr
shl
or
shl
cmp
mov
mov
je
mov
mov
jmp
push
call
addl
pop
test
je
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
xor
xor
mov
push
mov
mov
mov
mov
mov
mov
push
mov
mov
and
xor
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
xor
test
jne
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
mov
mov
lea
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
cmpw
pop
jg
cmpw
jg
addl
cmpw
jge
mov
neg
movzwl
add
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
mov
mov
mov
mov
mov
or
mov
jmp
neg
sbb
andl
and
add
andl
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
xor
sub
cmp
mov
je
jge
negl
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
sarl
and
add
cmp
je
lea
lea
cmpw
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
mov
pop
call
leave
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
jmp
push
push
push
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
sub
mov
mov
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
test
mov
jne
test
jne
cmp
je
cmp
jne
mov
cmp
movw
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
movb
andl
pop
pop
jmp
push
lea
push
call
movb
jmp
movzwl
mov
imul
andw
mov
shr
shr
lea
imul
lea
mov
mov
sar
movswl
neg
push
push
lea
push
mov
mov
call
add
cmpw
jb
lea
push
lea
push
inc
call
pop
pop
testb
mov
mov
je
movswl
add
test
jg
movb
jmp
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
test
lea
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
add
add
incl
decl
mov
movb
jne
mov
dec
mov
dec
cmp
lea
jl
jmp
cmpb
jne
movb
dec
cmp
jae
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
movb
mov
mov
pop
pop
pop
call
leave
ret
cmpb
jne
dec
cmp
jae
cmp
jae
movb
andw
xor
movb
movb
movb
inc
jmp
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pusha
lahf
add
jb
add
test
add
lods
lahf
add
mov
lahf
add
fcompl
add
clc
lahf
add
push
mov
add
add
add
mov
add
test
add
cwtl
mov
add
jb
add
pop
mov
add
inc
mov
add
or
add
and
add
inc
mov
add
pop
mov
add
test
add
mov
mov
add
fsubs
add
hlt
mov
add
mov
add
pop
mov
add
mov
add
lods
mov
add
enter
mov
add
hlt
mov
add
sbb
add
adc
add
add
add
add
mov
mov
add
jo
add
pusha
mov
add
add
add
in
add
mov
add
add
ljmp
inc
add
add
add
lcall
sub
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
dec
cmp
add
cmp
add
add
add
decl
cmp
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
js
inc
add
add
add
add
call
push
inc
add
incl
push
inc
add
push
inc
add
xor
xor
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
decl
inc
add
inc
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
jmp
inc
add
inc
add
add
add
incl
jbe
add
add
add
decl
jg
add
inc
add
incl
jge
add
call
jge
add
jge
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
dec
add
add
inc
add
popf
inc
add
add
add
push
add
dec
sahf
add
mov
add
xor
add
add
add
inc
mov
add
cmp
add
add
add
mov
add
in
nop
add
push
lahf
add
add
add
pusha
lahf
add
jb
add
test
add
lods
lahf
add
mov
lahf
add
fcompl
add
clc
lahf
add
push
mov
add
add
add
mov
add
test
add
cwtl
mov
add
jb
add
pop
mov
add
inc
mov
add
or
add
and
add
inc
mov
add
pop
mov
add
test
add
mov
mov
add
fsubs
add
hlt
mov
add
mov
add
pop
mov
add
mov
add
lods
mov
add
enter
mov
add
hlt
mov
add
sbb
add
adc
add
add
add
add
mov
mov
add
jo
add
pusha
mov
add
add
add
in
add
mov
add
add
popa
insb
imul
add
gs
jb
arpl
fs
jae
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
inc
add
jp
outsl
push
gs
jne
arpl
add
add
outsb
fs
insb
outsl
jae
add
push
jns
je
insl
dec
outsb
outsw
add
jb
jo
outsb
push
add
add
outsl
bound
push
imul
push
imul
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aaa
add
je
outsb
jne
je
je
add
push
push
inc
push
xor
cs
insb
add
pop
add
je
imul
inc
add
push
gs
popa
arpl
gs
inc
add
or
inc
gs
popa
jbe
inc
imul
add
add
fs
gs
inc
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
insl
fs
xor
cs
insb
add
sub
push
je
dec
jo
outsb
inc
jae
outsb
arpl
imul
inc
imul
jns
gs
xor
push
je
dec
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
xor
cs
insb
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
gs
imul
or
dec
gs
jo
jb
add
scas
add
imul
jae
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
add
popa
jo
insb
insb
outsl
arpl
jns
push
imul
jb
je
arpl
jnp
push
imul
jne
jb
add
imul
popa
jae
inc
jb
outsl
jb
add
gs
push
dec
jne
je
inc
jns
add
gs
imul
je
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
add
popa
jo
gs
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
push
je
imul
inc
add
mov
inc
gs
je
imul
push
add
lret
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
dec
jne
je
inc
jns
gs
outsl
push
imul
adc
dec
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
outsl
arpl
gs
outsb
outsw
inc
add
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
.byte
outsb
addr16
add
add
enter
in
dec
inc
add
bound
inc
sub
enter
lret
pop
add
add
mov
inc
add
add
add
add
add
add
add
repz
add
add
jns
push
add
add
add
add
scas
add
add
add
nop
add
add
add
jb
fs
add
fiadds
das
add
add
mov
pop
add
add
add
movl
or
sbb
dec
add
add
add
jae
mov
add
add
inc
add
add
add
add
add
add
mov
outsl
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
dec
add
add
add
inc
add
add
add
add
addl
sbb
push
add
add
jne
mov
das
add
pop
add
add
add
mov
int
outsb
add
lods
add
sahf
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
daa
add
add
add
add
inc
add
jnp
pushf
add
add
add
and
repz
push
add
jecxz
inc
add
add
add
fiadds
movsb
add
add
add
add
add
cmp
add
in
add
add
in
dec
add
jne
or
sub
lldt
pop
add
add
add
add
popa
add
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
incb
cmp
add
add
add
iret
add
jns
add
add
scas
add
add
add
add
add
add
add
add
mov
lcall
add
add
xor
add
mov
dec
add
add
dec
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
jp
mov
add
add
add
pop
add
add
dec
add
cltd
add
add
add
in
adc
data16
add
loopne
dec
add
add
add
add
dec
add
jge
cmpsb
add
faddl
into
add
add
mov
clc
add
dec
add
add
add
test
dec
add
add
add
add
add
add
aad
xor
cli
add
add
add
ret
add
add
add
add
xor
add
add
add
dec
add
add
add
add
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
lret
add
movb
add
add
add
add
test
std
add
add
cmp
add
add
scas
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
xchg
add
cmp
mov
cmp
xchg
add
add
add
add
add
add
add
dec
add
lock
add
add
add
add
rolb
roll
jl
inc
add
add
add
add
add
cltd
add
add
add
add
add
add
add
push
add
add
add
add
sub
add
add
add
add
add
xor
icebp
add
add
and
push
add
add
xor
add
add
push
add
lock
add
add
add
add
cmp
fldl
jl
mov
add
add
add
pop
add
jo
sbb
adc
call
add
add
add
add
add
sbb
fadds
fiadds
cmp
or
lods
add
add
testl
jae
popl
imul
add
add
inc
add
mov
testl
add
sbb
xlat
add
add
add
add
or
sbb
movsb
add
add
add
test
add
add
add
add
add
add
add
xor
add
scas
add
push
add
xchg
add
add
add
xor
nop
add
jns
stos
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
testb
add
add
add
add
add
add
add
dec
add
popl
fildl
mov
ljmp
add
pusha
add
out
test
popa
add
add
adc
roll
mov
pop
add
add
loope
mov
rolb
cmp
add
rolb
push
add
add
add
test
add
add
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
insl
add
addl
xor
lds
adc
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
dec
add
add
add
pusha
add
add
lldt
mov
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
jmp
ljmp
add
add
add
add
add
add
add
and
adc
mov
pop
add
int
rolb
jmp
add
add
add
add
int3
add
add
add
add
add
add
add
add
or
and
add
add
push
jbe
cmp
cmp
xor
popf
add
add
add
dec
add
je
les
arpl
mov
add
xor
pop
add
add
add
add
add
add
add
incb
mov
insb
add
add
add
add
add
add
add
push
add
add
add
addl
add
add
add
sti
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
fwait
add
add
icebp
add
add
add
add
add
add
jb
out
add
add
add
add
or
icebp
add
inc
add
add
add
add
add
add
add
add
add
rolb
adc
lods
add
add
ret
add
add
add
add
lcall
add
add
test
mov
jb
inc
out
push
adc
xchg
sub
xor
cltd
cmpsb
dec
mov
or
fst
mov
dec
jbe
dec
addl
cmp
and
lock
and
and
sub
mov
shll
ret
adc
jecxz
lret
add
fidivs
repz
in
push
xchg
pusha
xchg
das
jno
push
fidivl
mov
out
sahf
sub
push
push
jmp
xlat
daa
or
xor
pop
movl
inc
dec
fwait
test
fisubrs
sbb
or
out
xchg
out
inc
jnp
adc
in
mov
and
xor
adc
icebp
jl
pop
movsb
xor
pop
jno
lret
ror
imulb
fiadds
mov
imul
mov
movsl
fadds
push
jecxz
in
push
cmc
leave
stos
inc
jecxz
dec
incb
dec
push
dec
cs
mov
jmp
push
imul
movsb
insl
stc
jne
xchg
es
cmp
and
xchg
xchg
fisttpll
mov
xor
sbb
jmp
xor
mov
call
hlt
xchg
push
inc
push
push
shlb
dec
jnp
bnd
adc
std
push
rcrb
or
lds
xchg
sbb
cmp
add
out
and
out
out
or
hlt
insb
adc
xor
dec
shrl
lret
lock
loopne
or
mov
loop
lods
mov
or
outsb
in
push
cmp
fwait
sti
jmp
mov
out
bound
iret
mov
mov
setb
xchg
dec
outsl
rcl
mov
popf
mov
sub
push
adc
cmp
sub
loope
cmp
movsl
pop
scas
pop
cltd
rcrl
xchg
add
cmp
or
dec
push
xchg
inc
pop
loop
pop
xchg
stos
gs
sbb
test
popa
popl
inc
out
cli
not
in
dec
dec
hlt
xchg
fwait
mov
jl
lret
cmp
pop
mov
xchg
and
jmp
add
push
cld
sbb
mov
testl
loopne
add
int3
test
test
stc
push
jae
push
dec
data16
aam
push
fisttpll
in
loope
in
imul
jmp
dec
in
push
aad
fmull
xchg
mov
xchg
cli
test
test
sub
add
xor
sub
jno
ret
jb
push
lret
mov
jge
xor
scas
sarl
push
leave
sub
cld
les
adc
pmulhw
and
cmp
pop
jecxz
decb
pop
cmp
mov
mov
scas
aas
mov
xchg
dec
xor
sahf
int3
or
push
fstps
mov
addr16
addr16
mov
js
subb
das
xchg
xor
xchg
dec
rclb
adc
xchg
sub
pushf
mov
sub
aam
dec
aam
aam
xlat
cmpsl
dec
in
rorl
inc
xor
into
test
push
ja
aad
notb
add
xchg
pop
aad
add
add
ja
or
cld
call
je
xor
inc
jno
cmc
pop
fldt
push
lock
inc
cmp
cmp
shlb
hlt
mov
and
aaa
dec
and
jno
push
leave
cwtl
ds
xor
popf
mov
mov
push
cs
mov
adc
inc
xchg
bound
movsl
enter
jl
dec
mov
je
mov
adc
fsubl
jmp
roll
stc
gs
xchg
leave
decl
adc
push
shr
pop
jle
outsb
repnz
mov
sub
in
or
cmpb
hlt
out
sbb
sub
push
lds
int3
add
lret
leave
mov
push
insl
cmpb
loop
fiaddl
or
push
aad
xchg
out
push
lds
lret
cmp
repnz
addr16
or
xor
jne
mul
xchg
popf
loope
jnp
mov
pop
fisttpll
lahf
pop
adc
sub
fnsave
push
mov
out
mov
mov
outsb
mov
sub
movsl
bound
push
and
stos
gs
cmp
mov
int3
out
mov
push
inc
jb
mov
xchg
fildl
std
es
leave
xor
clc
sbb
scas
lret
clc
mov
adc
bound
fimull
cmpsl
mov
lret
and
stos
pop
inc
and
and
sub
adc
push
mov
sub
in
push
into
icebp
lea
add
int3
and
mov
addr16
pop
mov
cld
adc
sti
and
dec
jl
dec
leave
xor
push
lcall
es
pop
std
and
int3
dec
inc
pop
cwtl
iret
sti
test
pop
or
fisttpl
fsin
mov
es
loope
pop
mov
jns
cld
jge
stos
mov
push
xchg
add
shr
pop
xchg
sub
negl
scas
bound
into
jbe
cmp
mov
les
outsl
sbb
out
mov
adc
pop
cli
xchg
lock
ds
js
pop
pop
mov
fwait
pop
sub
enter
jo
fidivrs
xlat
lret
rolb
mull
int3
xchg
inc
cmc
or
mov
mov
test
insb
shlb
mov
xchg
and
push
xchg
adc
xchg
mov
add
fs
fildl
loop
push
fisttps
rol
icebp
push
mov
xor
pop
add
cmova
scas
lods
pushl
mov
jecxz
sub
mov
int3
fidivs
test
pop
test
and
movsl
loope
pop
sbb
je
fsubl
sbb
out
out
pop
pop
in
push
push
push
adc
sub
mov
test
das
into
fimull
jmp
or
pop
pop
jbe
adc
sub
cmc
mov
mov
pop
cmc
mov
hlt
mov
aam
test
xor
jge
adc
jecxz
add
sub
dec
stc
or
push
hlt
jl
jae
ret
sub
sbb
aad
int3
movsl
fsubr
cmp
push
xchg
data16
leave
push
cmp
ja
cmp
aam
stos
mov
inc
rolb
dec
mov
jae
sti
lds
call
xchg
inc
xchg
imul
jns
arpl
dec
pusha
push
mov
pop
bound
dec
xor
out
sub
scas
das
mov
mov
jge
inc
scas
jg
and
jp
popa
sub
xchg
push
sahf
jl,pt
pop
inc
sub
std
xchg
mov
jnp
sbb
push
jae
enter
imul
push
cmp
pop
repz
xchg
inc
std
mov
or
xor
jmp
mov
notl
ss
jmp
sahf
loope
mov
adc
push
mov
mov
pop
aam
mov
std
shl
push
loop
stos
jl
inc
gs
fsts
fucom
lds
stc
sti
dec
xlat
sub
jecxz
sub
adc
dec
xlat
pop
loop
jle
fcomp
jp
inc
clc
mov
and
adc
jle
cmp
add
pop
dec
data16
lods
pop
scas
int3
fs
mov
call
mov
add
pop
cld
orl
xor
mov
jae
lahf
cmp
inc
cmp
dec
test
sbb
xchg
pop
test
lret
mov
cmovl
add
push
add
xchg
aas
and
mov
das
fs
xor
add
shll
xor
imul
mov
dec
mov
jge
push
ror
pop
roll
sub
call
ja
in
ljmp
push
pop
jmp
jmp
mov
ret
mov
cmp
stos
repz
mov
fists
inc
test
add
test
ss
jmp
sub
repnz
mov
sar
cmpsb
nop
in
fmulp
dec
in
aaa
mov
mov
push
jo
lret
lods
add
and
sbbl
adc
push
bswap
sbb
into
jl
loope
ljmp
xor
mov
test
mov
push
xor
std
popa
pop
les
or
sbb
mov
shlb
daa
mov
or
push
pop
shrb
pushf
cmp
xchg
add
dec
in
sub
pop
xor
jne
mov
push
iret
mov
or
dec
lds
xchg
outsl
stc
scas
shl
iret
cmp
ljmp
inc
mov
paddd
push
repz
mov
pushf
mov
testb
in
pop
sahf
sub
ljmp
movb
xor
sbb
or
xchg
mov
repnz
mov
mov
sbb
pop
and
shll
lcall
xor
adc
lahf
jae
push
adc
stos
push
or
lods
jo
mov
int3
jb
loop
xor
repz
mov
mov
pusha
mov
loopne
mov
es
or
fcoml
xchg
push
sbb
imul
insl
repz
sbb
or
xchg
mov
jl
push
test
or
xor
daa
ret
xor
or
mov
test
add
into
jbe
mov
fwait
roll
add
inc
jno
or
stos
add
mov
pop
test
fimuls
repz
dec
dec
lods
adc
or
into
add
cmp
popl
cmpsl
cli
lret
sahf
scas
cmp
clc
sub
decb
xchg
outsl
fwait
or
jge
mov
insl
xor
pop
jnp
inc
fwait
sbb
and
lahf
pand
shl
pop
arpl
xchg
xor
pop
pop
int3
adc
mov
cwtl
or
xchg
mov
aaa
lock
movl
cli
test
int
sub
push
das
xchg
into
pop
lods
imul
cmp
adc
pop
in
test
fwait
cld
out
cmp
pushf
inc
sbb
leave
jnp
adc
addr16
sbb
int3
cmpsb
mov
sbb
jb
sub
and
mov
cmpsl
std
dec
sub
stos
mov
fists
xchg
insb
pop
sti
fildl
pop
loopne
mov
dec
mov
aad
adc
or
test
xchg
mov
into
enter
sbb
sar
mov
out
jmp
mov
mov
test
cli
adc
dec
xchg
mov
push
inc
sbb
xor
icebp
aas
stos
les
mov
sub
lods
mov
ja
xor
int
loop
cmpsl
outsb
pop
sbb
stos
mov
pop
push
enter
inc
cmp
das
fldpi
inc
mov
and
enter
xor
dec
and
fwait
xlat
orl
pop
lahf
bound
loop
lock
sub
and
icebp
sbb
push
fwait
lret
lods
loop
dec
fildll
inc
cld
nop
jp
push
dec
add
pop
push
xchg
insl
cmc
idiv
fs
adcl
in
test
lds
sub
call
arpl
jg
inc
insl
jle
cmp
mov
pop
xchg
cmp
cwtl
popa
shl
stos
in
pop
sub
leave
and
and
shrb
pop
jne
xlat
sub
xchg
cmc
in
mov
and
adc
nop
sbb
sahf
jg
push
push
bound
orl
aaa
shld
scas
add
or
call
test
and
mov
cmpsl
cmc
xchg
outsb
mov
fadds
andl
popa
push
ret
cmp
cmc
mov
push
je
xorb
sub
out
aas
hlt
jp
mov
mov
mov
cmp
jl
pop
and
stc
sbb
xchg
ret
cs
pop
sbb
mov
addr16
push
fstl
xchg
jbe
sbb
andl
push
loopne
out
addr16
jp
add
out
gs
les
iret
mov
arpl
or
jo
out
dec
addl
std
bound
jo
pop
xor
push
in
or
jno
dec
push
add
inc
xchg
add
sub
icebp
ja
pop
pop
or
jno
sbb
jno
bound
pop
pop
nop
icebp
fwait
or
fsubrp
ret
push
shrb
jae
mov
jne
mov
pusha
push
lock
xor
ret
jecxz
aaa
mov
adc
xlat
ret
push
arpl
jle
out
test
jmp
fwait
inc
and
inc
in
inc
jo
jg
ja
fwait
and
ja
ret
lret
jle
stc
inc
mov
je
out
stos
jb
push
dec
adc
pop
popf
cmpsl
shlb
add
xor
sbb
fwait
sahf
outsb
aas
fnsave
out
mov
repz
pop
pop
jmp
inc
sbb
insl
int3
cld
mov
mov
repz
stc
cmpl
mov
xor
dec
inc
sub
pop
int3
inc
bound
scas
pop
clc
mov
lret
mov
fsts
cltd
imul
imul
out
mov
inc
scas
xchg
mov
imul
out
ficomps
adc
clc
insb
push
push
enter
in
jnp
shr
fcmovnbe
and
and
and
mov
out
das
in
shlb
add
aas
dec
repz
sbb
jl
sub
lahf
in
shr
xor
xor
lret
aad
pop
mov
ds
or
lea
jge
cmp
and
jbe
jle
push
xchg
push
sub
arpl
or
lcall
mov
loopne
sbb
sub
fisubl
cld
mov
lcall
int
pop
aam
es
xchg
out
xchg
sub
xchg
push
gs
fdivr
mov
xchg
mov
pushf
pop
push
ret
cmp
jmp
mov
adcb
inc
mov
movsb
hlt
push
add
sarb
repnz
movsl
clc
dec
je
decb
and
push
mov
xchg
sub
xor
mov
jl
pop
into
xor
add
imul
push
js
jl
daa
test
inc
xchg
shrl
popf
dec
lret
cltd
mov
pop
in
cmpsb
pusha
jecxz
lock
mov
loop
mov
incb
mov
dec
push
xchg
push
lret
out
mov
data16
cli
in
cs
inc
xchg
pop
dec
sbbb
pop
cs
mov
out
push
push
cwtl
outsl
lret
and
cmp
cmp
orb
subb
ud0
es
jne
movsl
dec
in
xchg
mov
sub
push
int
inc
sbb
ja
addr16
pop
or
loopne
sbb
xor
mov
xor
cmp
mov
lahf
iret
push
cmpsb
push
and
lret
xchg
and
push
pusha
xchg
and
in
ljmp
add
int
roll
jge
and
int
stc
popa
mov
inc
les
fiadds
and
jb
ret
hlt
push
lahf
fiadds
out
inc
stos
xchg
jecxz
jle
mov
inc
jae
sub
repz
sub
xor
fistl
movsb
sarl
sub
sbb
jb
es
popa
pushf
push
pop
push
mov
das
in
popa
jle
add
pop
mov
xchg
push
pushf
cli
fnsave
mov
push
loop
push
add
hlt
cmpsl
sbb
sbb
fimull
cmp
sbb
divl
cmp
cld
scas
sbb
clc
xor
jmp
xchg
mov
cmp
fmull
out
loop
xchg
mov
push
pop
in
cs
enter
pop
xor
cmpb
add
rcrl
mov
fnstcw
sbb
cwtl
and
loopne
pop
push
xor
imul
add
in
push
jle
lcall
dec
xchg
jne
fwait
mov
insl
dec
fbld
ja
xlat
push
push
imul
dec
push
fxch
push
lahf
icebp
or
mov
push
inc
push
jo
ds
mov
push
shlb
push
leave
and
or
adc
and
and
sbb
or
add
icebp
in
mov
ffreep
and
addr16
fstps
push
inc
addr16
mov
xchg
lods
fsubrl
jge
movb
pop
ficoms
orb
push
jo
fidivl
hlt
frstor
icebp
mov
xor
push
ds
sahf
mov
scas
dec
mov
or
sub
xor
sahf
mov
orl
mov
pop
outsb
fcmovnu
or
pop
sub
mov
mov
inc
jnp
nop
mov
shll
es
sbb
loopne
pop
cmpsl
les
or
add
and
cs
faddl
adc
adc
xchg
add
xor
fsubp
push
cld
sub
aad
pop
mov
pop
and
pop
lds
andb
addr16
in
das
clc
in
icebp
jmp
inc
jo
fptan
jg
gs
std
lret
pop
lret
aas
add
jnp
aam
faddl
inc
xchg
mov
fsubrp
cmp
inc
call
outsb
mov
jle
cmp
scas
mov
lret
xor
in
push
inc
ljmp
sbb
jmp
fwait
sbb
cmp
jb
addr16
lahf
sub
push
cmp
and
cli
push
insb
cmpsb
in
dec
mov
sbb
in
push
pop
add
stos
xor
inc
out
out
inc
hlt
mov
adc
mov
xor
fs
inc
das
xor
repnz
add
and
hlt
imul
inc
clc
and
dec
pop
xorb
cmpsb
or
and
dec
sbb
dec
mov
ja
pop
add
sbb
ficoml
push
ficomps
inc
aam
and
add
xor
mov
cmc
addb
mov
dec
aad
fcomip
cmp
hlt
jge
movsb
mov
test
stc
xor
cmp
enter
fimull
mov
mov
stc
sub
popa
imul
push
cmp
and
fsubrl
dec
jecxz
into
sbb
mov
lret
jo
les
jl
divb
fst
mov
xchg
icebp
out
in
jge
push
and
jne
std
jecxz
cwtl
iret
pop
add
add
inc
lock
in
insl
push
sub
mov
xlat
lods
mov
es
cld
sbb
rcrb
mov
add
icebp
insl
jge
mov
push
imul
mov
mov
aas
push
add
nop
pop
loope
shr
enter
add
mov
hlt
ja
aam
pop
loop
lahf
out
stc
mov
stos
outsb
cltd
mov
in
icebp
add
mov
fildll
sbb
add
icebp
ja
outsl
mov
pop
fistps
aam
das
in
mov
rorb
push
mov
cmp
es
loopne
adc
test
scas
aas
jge
mov
xchg
imul
or
mov
pusha
idivb
mov
inc
jmp
xor
repnz
or
lock
xchg
rorb
movb
jg
mov
repnz
mov
or
jl
outsb
fldt
sub
incl
push
adc
cmp
decb
xor
mov
stc
jmp
in
jge
adc
mov
jg
mov
gs
out
loope
fists
pop
outsl
mov
jae
xor
or
inc
ret
and
mov
cmp
adc
inc
xchg
adc
push
xchg
sub
adc
cmpsl
stos
sti
push
adc
mov
pop
repz
and
fldcw
sahf
stos
cmp
nop
int
cld
lret
pop
int
sub
stc
stos
jnp
sub
out
jmp
push
pop
repz
imulb
cmp
movsb
mov
int
bound
and
jno
mov
nop
xor
pop
jmp
adc
dec
mov
push
xor
adcl
push
test
mov
jg
pop
lods
sub
and
in
rcrb
adc
adc
mov
es
je
jmp
push
jl
xor
insb
nop
push
sub
std
scas
mov
xlat
xor
frstor
and
cwtl
cs
lods
cld
fistpl
lahf
pusha
cmp
es
adc
jns
cmp
jp
lds
dec
pop
ds
pop
iret
lds
ljmp
fcomi
imul
xchg
and
fimull
push
or
push
enter
push
jb
loopne
jb
add
sub
xlat
push
lods
or
fwait
sti
int3
or
test
pop
es
xchg
out
test
lds
jnp
jb
inc
or
ds
lcall
xor
jp
lods
mov
and
or
inc
mov
fsub
ret
mov
test
pop
xor
iret
scas
stos
outsl
or
stc
add
jno
lock
sbb
dec
add
into
cld
jge
adc
jecxz
or
jae
pop
add
pop
test
and
inc
xor
cld
inc
jno
add
mov
xor
loop
add
sbb
fimuls
push
subl
lock
outsb
dec
push
xchg
test
test
sarb
or
fcoml
std
je
aas
xlat
cmp
jne
sub
ret
sbb
sub
inc
jl
adc
movsb
adc
lea
jle
adc
iret
adc
cmp
rcrl
jnp
lea
mov
and
pop
xchg
mov
add
xchg
imul
mov
sbb
sub
bswap
jae
outsl
cmpsl
outsb
and
in
or
adc
loope
fidivs
inc
pop
lea
enter
lods
mov
and
stc
in
pop
aad
in
dec
push
cs
adc
stos
adc
mov
aam
add
xor
cli
push
cli
call
fists
or
mov
fld
aaa
sbb
repz
or
mov
or
mov
inc
mov
jmp
outsb
add
in
adc
fcmovbe
popf
adc
pop
xor
pop
adc
fdivrs
sub
in
or
in
adc
add
push
lods
mov
mov
jbe
and
mov
push
xchg
mulb
inc
lods
testb
jbe
and
ja
xlat
out
outsb
push
stos
cmp
std
aaa
sub
mov
or
jmp
sbb
cmp
sub
or
movl
xor
gs
loope
leave
mov
popf
push
or
xchg
popf
in
pop
sub
fwait
sbb
add
add
stos
jb
nop
movsb
jae
xchg
add
push
adc
out
add
in
mov
adc
notb
int
adc
inc
popf
pop
jp
outsl
jp
sbb
rcl
ret
add
out
mov
sahf
push
mov
mov
leave
subl
lods
dec
or
jo
mov
xlat
jns
mov
pop
jp
or
cmpb
mov
dec
xlat
xchg
out
dec
lock
jle
xchg
cmc
es
nop
cld
cmp
in
pop
cmpsl
loop
test
mov
mov
xchg
mov
jg,pn
into
andnps
dec
cmp
aaa
in
inc
pop
pop
shlb
mov
jle
mov
pusha
cwtl
imul
add
mov
xchg
or
movsl
jmp
add
in
mov
fcomi
jne
pusha
xor
in
loope
mov
pop
mov
lods
shlb
mov
gs
dec
int3
out
xchg
lret
sti
pop
pop
jo
add
inc
out
add
cmp
or
mov
stos
and
inc
jle
xchg
sub
addr16
dec
cmp
add
and
icebp
adc
mov
inc
daa
gs
out
xor
lahf
lds
mov
pop
insb
and
push
xor
icebp
jnp
cwtl
enter
out
in
inc
repz
mov
sbb
dec
mov
push
mov
outsb
fwait
cmc
jbe
cmpsl
outsb
out
ljmp
dec
clc
add
repnz
test
add
pusha
popa
dec
xchg
ficomps
fs
xor
inc
test
insb
ret
jno
shlb
out
mov
pusha
push
insb
pop
test
sbb
jp
into
xor
xchg
stos
mov
sbb
cmp
aaa
enter
lods
stos
jecxz
mov
das
cmp
add
xchg
ret
dec
das
popf
xchg
xchg
sub
rcr
jae
cmp
lea
int
mov
dec
sbb
std
sti
test
pop
push
movsb
jmp
mov
xchg
test
sub
xchg
inc
or
dec
ffree
outsl
push
imul
jo
cmp
jg
aaa
push
mov
pop
cmp
jg,pt
dec
lods
xchg
jno
mov
int3
scas
xchg
fdivrl
cli
out
repz
inc
and
dec
jl
scas
nop
xchg
jle
mov
fnstcw
lcall
mov
mov
cmp
xchg
pop
lds
ds
push
jmp
aas
bnd
stc
pop
push
sub
lods
pop
xchg
mov
push
leave
call
rcrb
pop
cmp
xor
or
out
lds
stos
lods
das
loop
insl
mov
jl
and
pop
mov
xchg
cmp
popa
push
dec
fnstenv
jns
lds
leave
cmp
cmpl
imul
dec
or
pmaxsw
sbb
or
dec
out
cs
nop
sbb
mov
push
std
push
pop
push
mov
jnp
mov
cwtl
sti
dec
sub
cmpsl
push
adc
mov
rcr
xor
daa
decb
push
ds
cmc
sub
adc
sarb
push
cltd
pop
movsb
call
hlt
and
dec
mov
fs
cmp
stc
mov
mov
fdivrp
mov
inc
add
lret
mov
gs
and
lods
push
pop
pop
gs
in
pop
fimuls
inc
shll
pop
ljmp
rcrl
lds
mov
push
adc
jle
sti
arpl
lock
nop
dec
xchg
xorb
push
or
push
and
dec
clc
inc
rcrb
mov
mov
test
insb
lds
fildll
clc
clc
jp
xor
xor
dec
es
inc
loope
xchg
mov
dec
push
fmull
cmp
lret
pop
inc
out
fnstsw
push
dec
scas
imul
pusha
fcmovb
repz
jo
mov
loope
mov
call
sub
pop
cmp
sti
jmp
xchg
int
mov
js
sbb
xchg
ljmp
pop
ret
shlb
mov
test
xor
int
xchg
or
out
push
mov
pop
xchg
lock
loope
dec
outsl
icebp
adc
mov
fcompl
mov
repnz
add
dec
xor
ret
jle
inc
or
adc
pop
loopne
pop
push
jnp
inc
in
pusha
and
loope
cmpsl
cmp
add
ffreep
mov
and
jge
test
cmp
push
mov
test
fs
sbb
loopne
push
mov
push
cmpsl
mov
rcrl
and
or
stos
dec
mov
sub
movsb
inc
mov
arpl
and
movsl
and
mov
in
mov
mov
or
ds
test
pusha
jecxz
loopne
and
icebp
sarl
xchg
xsave
jb
lock
js
xor
sbb
inc
loope
sbb
push
inc
lcall
mov
out
jmp
or
mov
jb
cmc
pop
xchg
mov
dec
sbb
pop
pop
iret
hlt
xchg
loopne
inc
dec
cmpsb
push
pop
call
shrb
fnstenv
ss
and
xchg
inc
and
pop
adc
add
mov
fldenv
lahf
out
or
add
jbe
lahf
dec
inc
je
pop
sbb
jecxz
xchg
sbb
lds
in
imul
outsb
mov
jmp
add
sub
out
in
je
add
jp
cmc
and
mov
iret
adc
shl
xor
jb
lahf
dec
adc
mov
xor
mov
jmp
push
in
into
out
in
dec
jb
pushf
jp
aad
xchg
test
or
aam
cmpsl
pusha
lahf
lea
lcall
and
pop
jge
mov
imul
dec
mov
xor
aam
fldcw
pop
adc
jg
shrb
push
push
cmpsw
xchg
fists
outsb
and
mov
jle
add
or
adc
pop
xchg
or
pop
push
jge
mov
xor
and
jne
lcall
out
movsl
mov
mov
cmp
jne
mov
int
mov
mov
hlt
repz
push
cli
ljmp
cmpsb
jg
inc
sahf
inc
or
xor
push
adcb
xor
bound
mov
pop
cs
pop
les
xchg
jno
mov
mov
mov
mov
xchg
mov
push
movsl
sbb
int3
repz
int
test
push
in
xchg
pop
inc
push
sub
push
hlt
push
pop
cmp
dec
dec
mov
sub
enter
add
inc
pop
mov
adc
lods
lods
sub
cmc
push
or
shll
in
movsb
js
jbe
mov
xor
inc
mov
outsb
sbb
aas
adc
mov
stos
or
adc
or
fs
in
rclb
movsb
sahf
mov
mov
cmpsl
push
adc
push
dec
ljmp
insb
dec
iret
imul
cmpsl
xchg
addr16
mov
ficomps
inc
and
std
jl
dec
dec
mov
and
inc
sub
hlt
outsb
push
lahf
mov
push
pop
xchg
aaa
mov
sbb
xor
push
jne
mov
in
xor
cmp
pop
and
inc
add
mov
lcall
xor
push
cmp
dec
xor
outsb
andl
or
loope
xor
add
test
lds
mov
cmp
sub
loopne
movsl
cmp
inc
add
or
cld
mov
mov
lcall
xchg
sbb
test
lds
pop
jb
mov
sub
ss
testb
stc
mov
shll
ss
sub
in
push
in
adc
pop
mov
xor
pop
not
or
mov
mov
push
sbb
or
aas
roll
sbb
jg
icebp
ds
cmp
inc
dec
and
out
push
arpl
push
cmp
xlat
mov
addr16
movsb
jge
dec
out
mov
xor
arpl
jecxz
inc
dec
rorl
sahf
lods
lods
nop
cmp
imul
push
inc
dec
fisubs
fiadds
sti
xchg
imul
xchg
add
push
rcl
xor
xor
pop
shl
sarb
pop
pop
sbb
mov
repz
icebp
adc
jae
loope
stos
ror
pop
fiadds
push
enter
out
cwtl
fdivrl
divl
xor
jmp
push
insb
mov
jecxz
jmp
sub
mov
shr
stos
mov
cmp
out
scas
jne
mov
imull
outsl
lcall
xlat
adc
mov
ja
movsl
cmp
test
roll
cmc
ret
dec
cld
dec
nop
push
or
mov
lret
int
sub
iret
roll
lods
xchg
and
sahf
mov
popa
jmp
mov
xor
rorl
rcll
xchg
mov
repnz
cmpsb
andb
cwtl
out
pop
hlt
cli
mov
add
cltd
das
insb
xchg
daa
rcll
sbb
sub
in
stos
enter
xorb
mov
mov
in
or
dec
cs
jne
xchg
mov
sub
push
addr16
pushf
faddl
lret
repz
mov
push
test
jecxz
stos
mov
fimull
rclb
bound
sub
xchg
fildl
ss
or
mov
mov
pop
xchg
fsubl
popf
pop
pushf
pusha
mov
hlt
sub
inc
xchg
add
jne
add
into
cmp
ss
lret
jmp
nop
adc
mov
jecxz
mov
arpl
imul
roll
adc
mov
or
pop
xor
test
lret
sahf
data16
daa
cmp
pop
adcl
lods
cli
xchg
jmp
nop
sbb
pop
out
jne
test
xchg
xor
cli
xchg
test
cmp
jmp
push
pop
bnd
outsl
xchg
inc
lock
push
daa
lock
lock
or
pop
or
out
push
xchg
pushf
icebp
data16
sub
out
repnz
outsb
mov
inc
cld
js
lods
stc
mov
xchg
sbb
mulb
outsb
xchg
fstpl
gs
mov
sub
addr16
orb
push
pushf
xor
pop
cli
push
divb
xchg
fs
movsl
lods
icebp
mov
dec
sub
popf
dec
fisubrl
sahf
push
nop
and
daa
call
dec
mov
jge
adc
cld
mov
pop
mov
fs
mov
lods
stos
and
and
aad
xchg
add
vmovlps
cmpsl
repnz
and
test
pop
mov
xchg
int3
sbb
ret
and
mov
jb
das
xor
out
jmp
mov
insl
test
xchg
fwait
in
imul
push
mov
adc
mov
ret
cmc
pop
add
ja
into
cltd
in
jl
dec
lods
lret
or
pushf
and
insl
in
lds
dec
pop
mov
testl
jne
mov
insb
adc
insl
lods
inc
add
jo
scas
jmp
jno
and
jg
jp
mov
movsb
ds
jge
inc
notl
inc
test
mov
push
add
testb
mov
xchg
add
aad
sub
jno
cltd
lcall
mov
in
mov
into
sub
mov
fdivr
enter
scas
fisubrs
ja
push
lea
dec
out
mov
mov
jg
cmp
add
jne
xor
push
and
mov
outsl
mov
inc
movsb
outsl
stos
push
fldt
aas
ret
jbe
jb
inc
stos
leave
sub
xchg
xchg
popa
lea
jne
mov
push
cmpsl
test
mov
lcall
aad
outsb
hlt
and
iret
sbb
rcr
shrb
push
cli
pop
fwait
xor
pop
hlt
xchg
data16
cmp
stc
inc
cmc
inc
xchg
jmp
mov
popf
ret
shll
sub
mov
mov
iret
mov
inc
cmp
adc
jecxz
push
rol
data16
xor
dec
push
adc
and
and
sbb
sbb
add
or
sub
addr16
inc
test
or
pop
insl
lods
arpl
cmp
cmp
pop
andnps
repz
cmp
jmp
inc
push
add
scas
int
outsl
sub
push
mov
add
mov
mov
xchg
xor
mov
jecxz
pop
in
ret
push
movsl
mov
sub
and
fildll
bnd
mov
lods
out
clc
jl
sahf
push
mov
pop
sahf
sbbl
mov
stos
jmp
insb
fdivrl
mov
cmpsl
jbe
pop
sbb
incb
push
andb
popf
insl
outsb
push
mov
loope
cmp
dec
xor
mov
cmpsb
mov
sub
cs
testb
xchg
mov
push
sbb
cltd
loop
jp
inc
fwait
dec
lock
popa
sbb
mov
sahf
sbb
jb
and
lods
scas
insb
push
lds
pop
push
rcrb
mov
push
lcall
mov
lret
pop
pop
std
mov
in
sahf
pop
sbb
iret
mov
mov
and
stc
push
mov
mov
jbe,pn
inc
leave
jle
or
sbb
js
pop
sub
stos
add
mov
das
inc
mov
lods
and
or
cmp
outsl
dec
add
mov
adc
pop
mov
pusha
rcrb
mov
xchg
imulb
push
xor
imul
lea
push
push
pop
cmp
fadd
mov
jmp
xchg
insl
out
and
add
out
pop
nop
sti
sub
xor
in
hlt
jno
out
lret
pushf
or
dec
loopne
cmpsb
jo
or
out
cld
int3
lock
sub
lods
in
mov
pop
mov
ret
mov
inc
or
clc
or
lods
jl
insb
pop
push
mov
mov
push
jae
push
pushf
ljmp
sub
push
incl
outsb
rcrl
shl
lcall
fs
scas
daa
loopne
pop
xor
int3
mov
cmp
or
sbb
loop
je
data16
xchg
clc
std
add
xchg
iret
gs
std
jae
cmp
xor
scas
xor
cli
dec
ss
and
es
fistpll
sbb
add
fs
or
sbb
or
push
rclb
cmc
sub
inc
jp
xchg
adc
cmp
lcall
jge
das
push
in
sbb
call
mov
in
or
pop
ret
jno
mov
cltd
mov
jae
movsb
sarb
shlb
or
in
mov
lods
mov
ljmp
mov
adc
cmp
int3
ret
hlt
lret
call
in
push
xchg
mov
push
xor
sub
cltd
ja
sbb
push
rcrb
pusha
inc
rorb
test
pop
jb
fldcw
xor
repz
ljmp
lock
or
gs
inc
in
adc
jno
imul
popa
jmp
mov
icebp
pop
jbe
jae
inc
mov
cltd
push
sbb
lea
hlt
xchg
xor
push
xor
inc
mov
std
jb
imul
stos
call
inc
imul
and
jns
pop
lea
cmpsl
jb
or
xchg
popf
xchg
sbbl
iret
xchg
hlt
sub
pop
ret
test
clc
out
not
mov
movlps
pop
mov
xor
fiaddl
mov
adc
mov
cmpsl
arpl
out
fsubs
add
inc
and
out
shll
push
ljmp
jge
xchg
cmp
aaa
inc
lea
mov
ljmp
jmp
jo
test
lcall
les
add
inc
stos
flds
repz
ss
xchg
pop
inc
mov
loope
jg
push
pop
cmp
push
out
aad
lret
test
leave
fnstcw
xchg
inc
adc
dec
sub
rep
sarl
cltd
jns
or
jo
ffree
mov
cwtl
cmp
mov
adc
xor
xchg
mov
inc
dec
xor
dec
aas
fisttpll
lahf
xor
test
imul
inc
aam
in
std
test
cltd
sub
scas
dec
pop
shl
pop
popf
mov
sar
mov
mov
and
push
into
adc
jl
popa
mov
pop
aaa
cmp
stos
cmp
xchg
inc
push
add
es
sahf
nop
gs
mov
xchg
xor
aaa
push
in
mov
mov
mov
xor
push
aaa
pop
inc
push
adc
xchg
mov
std
aaa
inc
imul
sub
pop
movsl
flds
test
fimuls
jp
test
and
stc
jg
and
lret
fwait
adc
cmp
xchg
movsl
pop
mov
stos
dec
mov
fidivrl
mov
out
dec
std
sbb
jmp
pop
push
int3
cmp
fisttps
xor
xor
mov
push
push
lret
dec
ret
push
jno
inc
push
jmp
rclb
inc
mov
xorb
xchg
mov
xor
lret
push
insl
mov
fistps
ljmp
inc
jb
les
aam
shll
push
das
repnz
int3
xchg
lds
sbb
daa
adc
mov
pop
sbb
mov
daa
mov
lock
or
icebp
mov
fisubrl
xchg
int
ljmp
mov
mov
xlat
mov
shl
pop
ficoml
mov
dec
pusha
int
pop
in
mov
sub
popa
rcl
mov
adc
in
shrl
jo
decb
loop
sbb
test
fwait
loopne
or
or
cld
nop
imul
out
push
test
leave
shrl
jle
inc
pop
test
sti
jle
fwait
test
push
push
das
xchg
cld
and
mov
in
inc
jbe
shr
mov
or
push
in
mov
shlb
mov
pusha
outsl
mov
push
ret
pop
dec
dec
imul
mov
xchg
test
cmp
pop
cmp
xchg
or
dec
sub
shlb
insb
fsubrs
inc
jge
aaa
sub
add
jl
pop
push
icebp
push
or
lods
jae
sub
hlt
pop
or
pop
test
mov
repnz
dec
add
mov
cmpsb
jo
sbb
jb
and
mov
and
ss
pop
dec
adc
dec
add
ret
aam
pop
cmpb
mov
mov
pop
fidivl
aas
ljmp
add
les
xchg
push
lcall
jmp
das
lea
xor
pop
add
xabort
movsl
sub
and
sub
sti
mov
ror
es
int
pop
xchg
lods
in
xchg
push
popf
ret
test
in
icebp
cmpsl
sub
add
popa
outsl
pop
bound
lret
mov
xor
ror
mov
cmpl
fiaddl
sbb
mov
sbb
jge
push
aad
movsl
dec
jnp
lcall
out
fs
sahf
out
adc
inc
loope
inc
xchg
enter
lret
push
push
mov
inc
push
add
jmp
loope
push
or
cld
hlt
dec
sbb
inc
aaa
inc
movsl
aaa
cmp
cmc
cld
rolb
or
mov
mov
pop
cltd
repnz
scas
dec
sub
push
cmp
int
sub
clc
jmp
jb
mov
int
mov
mov
mov
or
lock
je
aad
stc
cmpsb
xchg
stc
pop
jnp
fimull
sbb
mov
mov
neg
xchg
jns
jl
inc
sub
jl
lret
push
sub
xchg
imul
sarl
insl
ret
cmp
in
aaa
pop
fwait
repz
gs
sub
fidivrl
je
stos
pop
cmp
lods
jae
ret
inc
js
inc
sbb
mov
sub
xor
les
or
das
ret
stos
ffreep
imul
xchg
inc
or
cmp
mov
xchg
mov
adc
xchg
add
xor
rorb
mov
insl
add
mov
xlat
bound
clc
ret
pop
push
mov
out
imul
popa
xorb
mov
xchg
rol
insb
in
push
inc
push
cmpsb
test
push
jg
cld
nop
add
into
cmp
fs
call
rolb
loop
in
xor
inc
jp
jge
adc
lahf
push
push
mov
or
sbb
pop
adc
popf
cld
rclb
cwtl
jl
int
movsl
push
test
sahf
test
rcr
lea
fcomp
fwait
or
mov
in
enter
xchg
subl
or
pushl
push
test
loop
int3
xchg
inc
loope
jne
leave
rolb
xor
int
stc
dec
fneni(8087
jmp
sub
les
mov
shrb
push
sub
push
sbb
jnp
js
sub
pop
imul
out
pop
pop
inc
inc
subl
shll
je
je
xchg
clc
repz
fists
xor
inc
jnp
cwtl
popf
repz
jbe
mov
lods
in
clc
or
push
sti
inc
push
xlat
sub
ljmp
jle
pop
lods
cwtl
stos
xchg
sub
fisubrs
jle
add
repnz
adc
ret
dec
or
sbb
sarb
or
roll
pop
aad
pop
sub
adc
stc
dec
test
mov
jg
mov
push
pop
mov
sub
aad
sti
stos
popa
out
mov
into
xchg
jg
jo
or
mov
fldenv
dec
inc
rolb
cmpsl
sub
xorl
jg
std
fidivs
push
negb
cld
jae
fbld
filds
ffree
les
in
cld
stc
and
inc
lahf
jge
add
xor
pop
jg
aad
scas
jle
sbb
push
shlb
bound
push
pop
sub
pop
xchg
dec
ret
push
xchg
data16
sub
dec
outsb
shlb
sbb
int
ljmp
adc
lcall
add
inc
dec
mov
inc
enter
fidivs
xchg
or
xchg
fimull
mov
dec
xchg
les
lea
das
push
pop
jnp
xchg
adc
mov
xor
xchg
add
sub
sarb
inc
dec
scas
repnz
or
push
fbstp
call
shl
mov
add
jecxz
test
stc
jge
xchg
gs
mov
inc
rorl
dec
iret
pop
jne
outsl
push
push
inc
jo
add
rcrb
test
mov
push
jo
mov
ljmp
dec
xor
push
mov
pop
stc
loop
daa
stos
mov
push
stos
insb
push
add
sarl
filds
xchg
mov
cmp
pop
cltd
cmp
imul
jno
cmp
dec
orl
sub
and
loopne
lods
icebp
pop
adc
push
in
mov
inc
xchg
mov
loop
sahf
add
lcall
sbb
sub
mov
xchg
outsb
stos
mov
cltd
pushf
dec
cld
setp
fucomip
je
push
imul
inc
pop
gs
lods
dec
out
popf
insl
pop
cmc
dec
jnp
dec
jnp
jl
jmp
lahf
sbb
int
cmpsl
mov
mov
sub
pushl
aaa
mov
inc
add
mov
add
xchg
xlat
faddl
jge
cmp
stos
and
jl
lret
movsl
jne
repz
fsub
fdivrs
test
movsb
cmp
arpl
xor
jae
aas
mov
xchg
in
cwtl
daa
stc
aad
repnz
mov
mov
movsb
insl
lods
dec
and
lret
mov
insl
aaa
pushf
rcpps
add
fwait
in
mov
push
cs
in
lret
inc
mov
cmp
call
mov
jb
out
dec
jo
lcall
sub
call
push
inc
jmp
cli
sbb
dec
popf
and
add
cmp
ljmp
adc
sbb
add
xchg
sti
aas
dec
mov
and
push
inc
push
popa
insl
inc
imul
hlt
push
pop
js
cmovl
push
add
je
cmpb
add
jp
sub
daa
sbb
lret
push
inc
jp
rcll
imul
adc
sub
mov
sub
mov
mov
pop
and
into
cmp
xor
add
mov
test
outsb
mov
add
stos
push
insb
fcoms
pushf
xor
out
mov
inc
loope
out
push
or
inc
inc
xor
ret
mov
inc
mov
rorl
es
pop
and
push
and
jns
xor
out
inc
mov
arpl
push
ja
repz
dec
das
xchg
xor
inc
ret
sahf
sub
pusha
xchg
je
imul
mov
cmp
add
fldl
lods
fidivs
xchg
dec
or
dec
sbb
xor
bound
inc
test
push
push
dec
sbb
add
popf
dec
test
mov
mov
lahf
pop
sbb
das
loopnew
mov
mov
mov
cmp
rol
mov
mov
mov
jl
scas
pop
js
adc
rolb
add
xlat
mov
jns
pand
pop
or
test
daa
ljmp
int3
popl
sub
pop
push
cwtl
pop
sub
jb
bound
xchg
shl
rorl
cmpsb
into
add
das
mov
or
pushf
repnz
test
call
sub
jmp
scas
push
xchg
sbb
sti
hlt
push
push
jl
mov
lret
cltd
cld
pop
inc
inc
pop
xchg
mov
dec
sub
inc
sub
testb
pop
movsb
loope
fsubrl
inc
pop
xor
xor
lods
add
jmp
xor
lock
aaa
mov
insb
mov
dec
xchg
in
add
mov
js
xchg
add
xchg
iret
cld
add
xchg
inc
insl
and
int
data16
dec
clc
data16
pop
mov
push
pop
dec
mov
stos
test
popf
jmp
ljmp
test
xchg
sub
push
push
push
stos
test
je
test
and
jge
repnz
or
cltd
ja
iret
mov
cmp
inc
fildl
mov
xchg
and
outsl
pop
mov
sbb
ficompl
insb
xchg
dec
jg
cld
xor
adc
pop
andl
xchg
and
jecxz
xorl
sub
loope
pop
in
sbb
xchg
movsl
or
xorb
pushf
cmp
or
jecxz
loopne
flds
fidivrs
mov
lock
fisttpll
rclb
dec
pop
mov
loop
movsb
jle
rorb
fsubs
jns
aaa
xor
out
adc
insb
sbb
mov
mov
or
inc
jae
adc
xchg
push
fnstcw
leave
add
sub
inc
mov
mov
xorl
sbb
cmpsl
testb
mov
mov
fstl
incl
or
rol
dec
sbb
sti
push
stc
inc
pop
mov
mov
pop
push
call
adc
popf
jecxz
mov
outsl
push
enter
sub
cli
mov
ds
jno
repz
divb
jmp
insb
mov
addr16
es
xor
lret
push
es
add
mov
cli
loope
inc
xchg
sub
movb
fistl
aad
jns
adc
cwtl
cltd
inc
mov
sbb
shll
push
stos
xor
cltd
cmc
push
add
mov
push
adc
cmp
sbb
add
dec
clc
or
pop
data16
repnz
push
jb
mov
fistl
mov
push
fucomp
inc
fistps
fldl
xlat
cmp
jecxz
push
add
add
adc
insb
pop
filds
lods
rorb
daa
sti
bound
inc
jl
xchg
out
xor
in
loop
shll
add
lcall
and
aad
pop
lret
add
scas
rcll
add
sbb
sbb
push
add
cld
data16
dec
out
cmpsb
sub
fiaddl
xchg
push
mov
aam
sti
cli
push
and
push
cmp
lods
mov
inc
cmp
loope
mov
aam
cmpsb
mov
and
in
mov
rcr
cmp
inc
pop
pop
sub
call
pop
sarb
cmp
sbb
add
out
pusha
pop
sub
xchg
pusha
loope
shlb
push
cwtl
or
pushf
jl
iret
addr16
icebp
mov
push
pop
mov
jmp
adc
jno
lods
lret
push
pop
cwtl
fstpl
ss
mov
jmp
pop
aaa
adc
push
xchg
xorl
add
dec
inc
jb
and
lock
mov
es
cmp
das
bound
mov
inc
cmp
or
ja
or
mov
dec
jge
cwtl
fcomps
loope
dec
xor
es
idiv
jnp
mov
or
adc
inc
cwtl
xchg
mov
cmpb
jg
inc
jno
sbb
in
jnp
sbb
ds
rcrl
dec
mov
lods
push
cmpsl
test
dec
sub
adc
lahf
pop
repnz
jns
pop
mov
fwait
cltd
adc
lock
mov
mov
fisubl
adc
xor
cld
in
je
push
cmp
out
dec
popa
inc
push
lea
insb
daa
and
mov
inc
mov
addr16
enter
data16
mov
xlat
jbe
push
xorl
lcall
jo
popf
or
pop
pop
xor
lcall
iret
hlt
xor
aas
int
sbb
rorb
lahf
movl
or
cmp
jl
sub
adc
pop
jmp
ljmp
nop
int3
dec
mov
inc
xor
pop
lahf
test
sbb
icebp
sub
repz
insl
shll
mov
insl
xchg
jo
mov
dec
mov
or
push
arpl
ja
jnp
imul
sbb
mov
fisubrl
popa
add
push
in
icebp
out
push
mov
jmp
mov
repz
fs
aas
and
mov
pop
cltd
push
push
aas
or
sti
aam
sarb
mov
dec
xchg
adc
push
test
push
out
push
mov
test
out
rcrb
xchg
mov
sbb
fistpl
loope
xlat
pushf
mov
mov
pop
ljmp
pop
mov
or
cmpsb
cmc
sub
pusha
rolb
push
and
xchg
push
lea
push
jne
fisubrs
out
or
int
std
leave
sti
ror
mov
mov
add
aaa
add
shr
imulb
and
mov
push
jl
repnz
insb
imul
push
lea
inc
test
and
sbb
push
add
lock
fs
pop
stc
cltd
leave
push
aaa
lahf
sbb
and
jo
int
mov
xchg
jle
mov
cmp
mov
stos
icebp
jb
cmpsl
leave
int3
add
lock
xchg
test
sbb
pop
ja
cmp
cmp
scas
or
outsb
cli
addr16
push
aas
mov
fisubrl
les
dec
mov
outsl
dec
fistl
movsb
nop
inc
fs
pop
lahf
push
test
mov
cmpsl
nop
test
data16
cwtl
outsl
jp
fmuls
pop
shr
adc
out
ficompl
push
inc
dec
push
add
jmp
pop
mov
cmp
push
dec
sbb
lods
or
inc
dec
jmp
mov
imul
add
push
shlb
xor
je
insb
lea
xor
xchg
cmpsb
rorl
cmp
ss
jb
je
jge
and
nop
jbe
dec
shrl
adc
jae
xchg
xor
movsb
add
jo
cwtl
adc
stc
ds
cmp
movsb
cmp
jl
flds
imul
les
out
fwait
mov
cmc
aad
pop
and
pop
int3
dec
movsl
jno
fscale
imul
repnz
inc
sti
cwtl
pop
subb
mov
aaa
jno
mov
loopne
imul
jne
inc
sbb
jge
call
adc
xor
scas
mov
setl
dec
call
subb
loopne
shlb
add
sub
fmull
in
aad
jae
jmp
xor
scas
sub
lods
stos
push
imul
push
jmp
dec
xor
and
daa
outsw
adc
shl
lahf
xchg
mov
sbb
fwait
xchg
fcompl
call
push
mov
addr16
sub
mov
repnz
add
mov
and
jl
cmp
addb
push
repnz
lods
adc
adc
lods
cmp
sarb
jmp
or
push
jp
and
fisttpll
cltd
pop
xor
gs
fistl
xor
inc
push
sbb
mov
sub
adc
mov
imul
mov
sbb
out
pop
and
fstl
movsl
pushf
sti
or
lock
in
sbb
subb
add
popa
cmp
mov
or
adc
imul
or
add
fcomps
clc
js
mov
cs
fwait
sbb
sub
push
shl
filds
fcmovnu
mov
xchg
loop
lahf
pop
fmull
sub
popa
push
repnz
xchg
push
add
jmp
js
adc
xor
adc
out
jecxz
and
ss
push
mov
cltd
inc
push
jo
mov
dec
mov
ret
sub
and
mov
adc
in
scas
cmp
ss
cmp
mov
pop
jno
movsb
inc
out
pop
addb
inc
inc
loope
push
sbb
adc
in
mov
cmp
popf
xchg
jl
ja
mov
sub
jns
cmp
aas
cmp
stos
jmp
lods
fcmovbe
push
cmp
mov
add
cmpsb
mov
fcoms
xchg
pop
mov
or
jns
mov
adc
cs
adc
cli
push
pushf
gs
xchg
or
inc
rcll
sbb
icebp
cmp
repz
gs
pushf
mov
int3
test
jns
mov
rolb
lret
sti
inc
inc
xchg
faddp
adcl
out
fcoml
fsubs
imul
jle
cli
mov
pmuludq
sbb
lock
and
sub
call
inc
test
mov
pushf
lea
hlt
sbb
cld
lods
aad
ds
test
fucomip
sahf
repz
fbld
rolb
pop
fistpll
loop
xor
jg
lods
xor
popa
xchg
jl
pop
xor
sar
mov
dec
std
dec
cwtl
adc
addr16
jnp
mov
int3
sbb
ds
mov
ds
sbb
jnp
sbb
xchg
jbe
xchg
ret
outsb
jle
repz
cmp
fsubs
jp
push
rol
test
fcoml
scas
lret
insl
mov
add
mov
notb
test
cmp
div
insb
mov
or
insl
imul
mov
aaa
aas
adc
jge
and
les
pop
xor
fldcw
pop
pop
mov
sub
add
lahf
out
xchg
scas
inc
xchg
jae
call
rolb
arpl
xor
or
jae
lods
std
les
xchg
push
and
sbb
test
hlt
push
je
cmp
jnp
push
std
aaa
adc
mov
push
ret
aad
ljmp
push
sub
popf
mov
and
mov
jl
sti
cmp
or
pop
mov
int3
ret
rorl
mov
into
inc
testb
je
mov
mov
loop
fsubs
fisttpl
mov
adc
mov
int
cmp
sub
fsubl
or
jae
cmpsb
sbb
ss
loopne
js
dec
mov
cmovs
gs
decl
sub
aas
inc
xchg
std
pushf
loope
add
add
lahf
movb
das
jns
sbb
rclb
xor
pop
aas
lret
inc
and
test
or
sub
test
lds
lods
xchg
push
mov
cwtl
fs
in
orl
mov
test
es
inc
inc
cmp
mov
adcb
fldenv
xchg
test
sbb
push
mov
jns
cld
jb
add
imul
and
outsl
inc
xchg
xor
pop
mov
xchg
das
daa
inc
xchg
shll
mov
loop
sub
sub
pop
movsb
imull
or
cmp
xchg
inc
out
dec
lret
sbb
data16
jle
fadd
pop
xchg
push
add
negb
mov
je
sahf
jg
lret
mov
iret
jmp
int3
push
dec
addr16
mov
iret
push
pop
ret
subb
lods
mov
or
add
faddp
fiaddl
cmpsb
add
xchg
cmp
mov
ja
fs
add
inc
pop
inc
in
or
add
dec
lods
lods
cmp
cld
adc
movsl
lret
cli
add
cltd
mov
mov
xchg
push
or
mov
lods
push
js
or
shl
insl
call
rolb
add
loop
lcall
ljmp
mov
ljmp
xchg
push
repnz
rcll
lahf
jne
xor
push
std
popa
mov
js
xchg
shrb
adc
pop
dec
sbb
jle
popa
jmp
mov
jle
add
int3
push
mov
cmp
lods
cmpl
mov
or
lret
test
sub
jl
or
jo
nop
xor
rorl
mov
in
xor
push
mov
xchg
lret
xor
fwait
xlat
pushf
or
dec
pop
bound
aas
pop
ljmp
fsubrs
mov
movsl
out
xor
sbbl
sbb
test
push
loop
sahf
add
test
fisubs
cmp
out
bound
xchg
out
jle
sti
xchg
cmp
xchg
hlt
cmpsl
pop
mov
int3
mov
mov
push
push
push
adc
jo
mov
imul
aad
clc
push
fiadds
rorb
pushf
xchg
icebp
push
pop
adc
mov
or
or
ret
mov
fmuls
pop
es
test
sbb
aaa
nop
adc
lods
xchg
lods
negb
sub
popf
xor
shr
mov
out
add
cli
mov
adc
push
insb
cmpsl
je
sbb
mov
lret
insl
fnstenv
stc
and
xchg
sub
icebp
outsl
mov
xchg
pop
xchg
lock
mov
ds
pop
push
inc
stc
dec
popa
int
or
mov
push
testl
fcoms
cmpsb
dec
xor
xor
pop
xchg
fldenv
movsb
mov
mov
pop
dec
data16
jb
adc
bound
xchg
std
pop
pop
out
xor
mov
addb
into
xorl
mul
pop
and
hlt
sub
xchg
clc
in
cmpsl
les
jno
push
call
aaa
repz
mov
std
dec
add
movsl
xor
ds
inc
mov
add
out
aad
adc
int
or
adc
sbb
ja
jmp
es
notl
ss
or
aad
push
jo
xor
fldenv
scas
fdivl
fstpl
sub
lahf
testl
mov
xlat
or
push
sub
jae
movsl
jae
xor
nop
xor
fs
cmp
xchg
pop
mov
pushf
xchg
outsl
dec
push
rorl
out
scas
loopne
sub
cmpb
ret
cs
rorl
push
add
jae
inc
mov
add
push
in
jne
jmp
cmp
je
ficompl
pop
mov
and
pop
mov
sarb
test
add
mov
repz
out
ret
call
in
insl
inc
lods
sub
push
xchg
mov
cmp
lea
fcmovbe
pushf
loopne
fwait
das
rorl
js
lret
mov
shl
cmc
fcmovnb
nop
clc
test
insl
pop
or
mov
movsl
xor
scas
pushf
mov
jo
loopne
mov
ss
pop
inc
jb
dec
repz
xchg
pop
cmc
mov
xchg
mov
cli
mov
cld
add
fisttpl
mov
dec
mov
sub
dec
or
push
mov
test
jae
in
dec
mov
mov
call
or
pop
dec
add
push
mov
mov
ret
xchg
xchg
cmpsb
int
adc
adc
dec
cmpsl
and
pop
movsl
inc
lods
test
fst
mov
adc
jmp
jb
out
clc
ds
mov
jl
jb
lds
jnp
sahf
mov
adc
sub
xchg
xchg
mov
and
bound
mov
out
sub
push
aad
ds
cs
orb
outsl
mov
scas
test
test
mov
adc
test
or
shlb
jge
filds
dec
push
out
fsubp
add
adc
mov
sub
cs
inc
sub
mov
neg
sbb
rclb
xor
add
xchg
fnstsw
int3
jmp
xor
xor
fwait
and
inc
mov
out
sbb
dec
xchg
adc
and
fsubs
xchg
dec
int
jbe
jbe
inc
xchg
push
or
les
int3
pop
shr
bnd
sbb
call
xor
ljmp
push
outsb
sub
mov
or
cmp
addr16
jb
sbb
std
bound
fmull
pop
ss
pop
les
jne
lret
xchg
cld
cmpsb
xchg
jp
mov
mov
mov
mov
push
inc
jo
adc
adc
push
dec
pop
mov
mov
out
in
repnz
cli
lret
imul
xor
pop
dec
fcoml
adc
inc
stos
aas
imul
push
inc
pop
sti
mov
cs
mov
and
mov
mov
notb
xorl
sahf
cli
gs
rcrl
or
aad
jecxz
jl
or
mov
ja
ds
in
lods
adc
aam
call
and
mov
mov
push
test
in
and
xchg
dec
cmc
pusha
daa
jno
rcrl
sub
or
mov
sub
les
mov
add
xor
pop
mov
pop
cmpsl
or
cli
dec
pop
in
pop
movsb
sbb
stc
icebp
cmc
pop
push
movsb
imul
in
mov
dec
xchg
or
daa
push
lcall
push
aam
mov
in
les
mov
or
dec
inc
cwtl
and
into
loop
push
das
mov
mov
fwait
mov
mov
and
pushf
outsb
pop
cli
mov
pushf
mov
mov
mov
int3
add
call
mov
sti
fmul
xchg
adc
iret
ret
inc
sub
lock
das
cmp
lods
adc
roll
jl
xchg
push
jb
mov
out
cmp
xchg
insl
mov
mov
mov
inc
adc
aaa
les
and
inc
outsl
popf
and
rorl
leave
mov
and
push
out
out
sub
dec
das
jnp
mov
push
dec
pop
test
nop
or
bswap
subl
add
inc
fidivl
sub
or
cli
lods
mov
fucom
mov
or
incb
mov
lods
or
jbe
mov
adc
fisubrs
adc
sbb
ror
sub
pop
jp
jg
cmc
adcb
push
icebp
movsb
aad
mov
sbb
mov
repz
pop
xlat
arpl
and
les
pop
nop
faddp
jmp
lret
bound
lahf
pushf
jb
jb
scas
test
xchg
pusha
sub
pop
cmp
lds
xor
inc
jle
icebp
add
icebp
popa
jle
mov
lods
or
xor
out
adc
add
nop
and
test
hlt
dec
mov
flds
test
xchg
adcb
and
cwtl
xchg
ja
notl
or
gs
fidivrs
cltd
adc
mov
int3
pop
mov
testl
loope
and
not
int3
leave
dec
int3
sub
pop
inc
jle
dec
xlat
jne
adcb
sub
imul
shll
lret
cmp
adc
iret
jbe
movsl
out
or
inc
pop
mov
fwait
dec
stos
jno
in
dec
xor
mov
pop
fsubl
add
push
sbb
in
xor
inc
jno
out
dec
imul
cmp
call
sbb
cld
sbb
in
cmp
pop
mov
lea
sub
pop
loopne
mov
outsl
lods
add
mov
jp
push
sbb
xchg
int
mov
out
subl
jg
dec
insl
repnz
cld
rcll
inc
test
inc
inc
ret
inc
sub
dec
pop
stc
adc
inc
mov
mov
xchg
jno
js
push
lock
jg
stc
push
arpl
mov
pop
inc
mov
add
xor
or
out
je
push
jp
cwtl
mov
stc
dec
out
lock
nop
sti
push
fistpll
and
jle
jno
adc
cmpsb
lcall
outsb
hlt
pushf
repnz
push
xchg
das
sbb
mov
test
divps
movsl
push
jae
or
xchg
xchg
fcoml
sub
iret
mov
xchg
pop
adc
js
movsb
inc
movsl
xor
pop
mov
outsl
outsl
mov
pop
xchg
loop
inc
adc
bound
pop
cmp
fdivrs
lcall
shll
xlat
popa
jbe
jl
sub
or
ljmp
pop
shrb
sbb
es
daa
cmpsb
jbe
mov
push
bound
in
sbb
addr16
lsl
add
add
subl
ret
bswap
std
dec
imul
mov
aaa
mov
movsb
repz
cmp
std
mov
sub
xchg
pop
sub
push
add
xchg
das
inc
adcl
ds
faddl
loopne
lds
mov
or
push
push
icebp
pop
pop
jle
pop
lret
loope
pop
aam
cli
adc
or
ds
jo
mov
lahf
dec
mov
jo
scas
sub
jnp
and
lcall
jge
push
xor
jge
pop
xor
out
sub
sbb
mov
inc
call
sbb
nop
rcrl
and
sub
dec
add
hlt
and
lcall
mov
mov
or
and
cs
and
insl
pop
mov
je
or
cmp
pushf
fldlg2
jp
fsts
cmp
das
dec
syscall
xchg
xchg
mov
clc
aas
push
xor
rclb
lock
fstpt
ljmp
mov
in
mov
mov
std
jne
in
mov
pushf
jae
shlb
mov
je
aaa
push
lcall
out
inc
out
and
ret
sub
add
mov
push
orb
popa
jae
inc
stc
ja
sti
rcrl
imul
jmp
lahf
loop
clc
dec
pop
dec
adc
inc
ljmp
dec
adc
add
sahf
sbb
test
dec
dec
jo
mov
pop
mov
sahf
leave
inc
clc
mov
sbb
push
mov
stc
iret
in
fcoms
mov
mov
repz
and
push
cmp
data16
lret
loopne
pushf
pop
jns
push
inc
aad
ret
mov
add
mov
mov
nop
jecxz
add
ss
test
cld
or
lods
jge
xchg
scas
xchg
dec
into
push
lret
mov
dec
and
lret
icebp
sbb
push
or
mov
mov
xlat
popf
mov
hlt
jmp
mov
xor
rep
testl
icebp
mov
xchg
xor
fisubrs
das
test
pop
enter
enter
add
mov
jg
xchg
aad
in
pop
mov
or
push
imul
popf
mov
getsec
out
jae
and
pop
dec
xchg
push
mov
xor
xchg
sub
or
sub
or
fbld
ret
jno
imul
push
in
jo
sbb
inc
loopne
xchg
pop
cs
add
lods
adc
adc
pop
push
xchg
mov
mov
lret
scas
lods
call
pop
dec
fcoms
aaa
fisttpl
jbe
lods
and
sub
jo
idivl
fisttpl
cmp
sub
or
movsl
out
ficoml
adc
int
mov
je
adc
faddp
mov
mov
sub
lahf
mov
mov
sahf
cli
pop
mov
mov
enter
in
pop
sti
lea
mov
inc
xchg
and
or
xor
add
jae
pop
fnsave
out
xchg
dec
jp
or
push
fcomip
ret
and
outsl
int
xchg
push
fistps
sbb
outsb
sub
imul
adc
mov
inc
lods
adc
lock
and
outsb
es
push
stos
mov
sub
scas
out
test
jg
insl
in
push
cmp
push
dec
and
cmp
mov
std
push
mov
pushf
mov
push
xchg
sub
addr16
dec
xor
je
xchg
or
or
ficomps
ja
push
inc
push
mov
mov
test
jmp
jne
xor
push
or
mov
imul
insb
sub
icebp
repnz
xchg
ret
add
dec
cmp
xchg
pop
xchg
dec
data16
jae
rorb
dec
lods
inc
mov
fcoml
subb
sub
xchg
scas
call
sbb
stos
bound
shrl
adc
pop
sub
popf
mov
loope
pop
and
add
ljmp
sbb
add
and
push
mov
das
pop
leave
fcom
dec
add
scas
push
pop
call
xchg
add
jo
cltd
lods
rsm
ret
xchg
mov
sbb
pushf
add
add
xor
ja
sub
xchg
adc
sti
icebp
xor
mov
gs
and
sub
cmp
sbb
outsb
stos
cmpsl
xchg
xor
inc
dec
dec
mov
pop
mov
push
mov
jb
shlb
cltd
xchg
aad
sti
dec
jae
xchg
out
jb
jae
inc
js
loopnew
aam
dec
push
jmp
sub
rol
rorl
test
mov
mov
in
mov
ret
pop
cmc
lea
or
lahf
icebp
and
leave
xor
push
int
ret
and
mov
test
sbb
add
inc
pop
xlat
mov
fs
int
mov
pushf
jne
inc
test
scas
push
pop
in
cmpsl
js
add
scas
inc
xchg
mov
xorb
adc
add
adcb
sub
jecxz
popa
sti
mov
sti
gs
test
ss
add
cmp
ljmp
and
and
push
fidivl
sbb
arpl
out
out
add
cltd
mov
dec
cmp
jnp
jecxz
dec
jp
in
or
xchg
in
add
shlb
jle
cmp
or
sti
fidivs
imul
mov
mov
mov
mov
lret
push
pusha
aad
loop
test
ljmp
in
test
sarl
inc
iret
cld
adc
mov
sub
cld
lock
popa
in
and
fstpt
mov
out
add
sbb
pop
mov
ljmp
push
add
cld
xchg
lcall
inc
imul
pop
mov
pop
xchg
rorl
cmp
fiaddl
in
nop
movsb
pop
cmp
dec
or
xchg
jg
test
shr
popa
push
jno
sbb
fists
or
es
fmuls
fiadds
iret
jno
pop
sbb
cld
out
mov
lea
ljmp
lods
jmp
pop
aad
cmp
jmp
fnstenv
stos
call
push
test
xchg
inc
outsl
mov
sub
mov
add
enter
inc
push
stos
daa
out
fnstenv
lds
testl
jb
lret
push
aaa
jnp
insl
movsb
mov
fnstcw
les
into
sbbl
aas
xlat
es
jo
mov
pop
cmp
stc
mov
mov
pop
and
cltd
push
sub
mov
jo
stos
inc
scas
popa
push
pop
xchg
rorl
addl
out
imul
fcomi
mov
and
mov
push
add
xchg
mov
add
aas
sub
xchg
jle
mov
push
push
fsubp
cltd
xor
inc
sbb
out
test
movsb
dec
push
lock
xchg
xor
daa
leave
pop
pop
push
cs
jnp
jge
dec
sub
div
lea
cmp
sbb
cmp
stc
icebp
push
mov
insb
das
dec
dec
mov
jge
jne
int3
dec
mov
outsb
push
bound
sub
xchg
dec
daa
addb
jecxz
dec
fsub
shr
pop
jl
outsb
loop
push
xorb
push
sub
cmp
pushf
je
and
in
push
pop
dec
iret
push
loop
dec
add
inc
lods
je
pop
jle
loopne
addl
jg
iret
inc
pusha
mov
mov
rorl
mov
and
mov
cmp
mov
push
sbb
shlb
xchg
repnz
fisttps
dec
sub
inc
sub
pop
cmpsl
test
add
sub
jp
je
and
add
nop
lea
or
imul
loopne
ret
xchg
jmp
push
cmc
or
icebp
pop
repz
fldenv
mov
fs
mov
insb
add
imul
mov
outsl
jnp
and
into
and
push
dec
and
inc
inc
pop
fcomi
cmp
in
push
icebp
mov
sbb
adc
stc
pop
fwait
adc
ljmp
jnp
gs
xor
and
adc
movsb
and
dec
pop
xchg
sub
stos
adc
mov
fsubr
lds
lods
sbb
lcall
lods
xlat
push
ret
jle
insb
jmp
ficomps
insl
pop
xor
test
lcall
xchg
stos
lret
inc
cmp
mov
xchg
mov
sub
push
inc
xor
stos
pop
and
adc
call
jno
pop
sti
cmp
add
pop
fstpl
or
movsb
sub
mov
jg
lods
inc
mov
or
sbb
insb
dec
jmp
jle
cmp
xor
test
mov
sbb
icebp
push
in
xor
mov
jmp
adc
dec
imul
ss
fimuls
lock
xchg
adc
xor
mov
jmp
ljmp
push
cmp
xchg
pop
mov
or
outsb
or
jb
cmc
rcl
repnz
mov
mov
pop
cmc
arpl
std
daa
jle
xlat
mov
dec
adc
lds
loopne
xchg
lret
or
stc
inc
pop
popf
repnz
pop
pop
cld
ljmp
cltd
jne
mov
inc
add
fwait
xor
int
push
xor
call
and
push
mov
leave
sub
pop
mov
jl
into
pushf
lds
nop
mov
cwtl
xchg
xchg
fmulp
in
sbb
jl
fisttpll
push
scas
jmp
sub
out
insl
xor
insl
inc
mov
imul
mov
arpl
mov
dec
addr16
pop
sti
mov
cs
inc
int3
push
sub
push
push
das
mov
pop
lcall
add
aaa
mov
clc
rorl
in
pop
ja
addb
ljmp
xchg
jae
sbb
stos
xchg
ja
sub
pop
pop
pushf
daa
outsl
outsl
nop
and
push
mov
repnz
int
movsl
pusha
mov
into
pop
push
mov
insb
xchg
mov
shl
out
pop
fisttpl
addr16
or
mov
mov
add
or
ficoms
lds
popa
push
jmp
inc
add
push
push
mov
xchg
and
or
hlt
add
repnz
or
jne
inc
jno
ja
mov
xchg
ror
push
pop
jp
out
mov
repnz
neg
jl
fldl
ljmp
into
leave
mov
xlat
jmp
mov
push
call
adc
mov
mov
mov
mov
pushf
arpl
mov
loopne
mov
cmc
lods
adc
inc
fmuls
insb
fstpl
aad
xchg
and
add
or
mov
push
push
adc
adc
adc
ljmp
push
int
jb
movsl
xchg
dec
pop
jl
imull
leave
cmp
in
aaa
mov
or
cmp
sub
sub
mov
andl
or
dec
mov
xor
bound
jnp
dec
shl
jae
mov
cmp
cmc
mov
pop
mov
cwtl
fwait
sub
add
pop
inc
outsb
xor
leave
dec
adc
sbb
adc
jl
roll
lret
sbb
xchg
and
lds
cmp
xor
pop
test
sub
xchg
and
lods
pop
shll
sti
xorl
inc
jns
addr16
ret
inc
cmc
roll
fisttps
out
hlt
cld
scas
inc
lcall
es
lods
cmp
xchg
sbb
mov
sbb
je
mov
pop
jno
mov
imul
arpl
fcomps
into
jno
jmp
add
mov
xlat
pusha
scas
xor
call
push
jbe
out
je
mov
mov
pop
movsb
mov
inc
dec
mov
xor
and
daa
movsl
push
and
les
mov
mov
and
pop
mov
mov
mov
push
test
stc
ret
mov
push
repnz
stc
fimull
repz
rcrb
addr16
divb
dec
test
loopne
sub
cld
jg
mov
xor
mov
push
ljmp
imul
outsl
cmpsb
dec
mov
dec
mov
aam
sti
dec
sbb
xor
ljmp
dec
jle
dec
xchg
ja
jg
mov
hlt
or
rol
lcall
lret
pop
jbe
aas
xor
mov
pop
pop
icebp
dec
mov
mov
push
or
push
orb
xchg
lea
jge
insb
dec
cmpsl
pop
negb
shll
enter
in
pop
mov
jnp
popf
jae
add
fnsave
inc
test
add
pop
insl
sub
or
rol
xor
subl
test
fstp
push
xchg
jge
inc
inc
xchg
fcomps
mov
shll
orb
add
dec
lret
roll
int
mov
inc
or
jmp
decb
xchg
pop
lahf
xchg
sub
nop
jne
scas
xor
sbb
inc
add
cmpsl
aam
pop
inc
mov
push
insb
inc
sbb
inc
adc
std
push
shr
cld
jae
js
not
dec
int3
imul
call
add
aad
jle
cs
xchg
dec
cmp
dec
mov
cmp
or
and
add
lahf
fbld
sbb
shll
jl
add
and
call
pop
mov
push
in
or
hlt
test
stos
lahf
mov
js
sub
pop
iret
mov
ret
push
jnp
cltd
sub
pop
pop
inc
push
jle
test
pop
stos
dec
loope
lock
aaa
dec
add
aam
test
jae
xor
and
lock
enter
nop
test
sub
lock
ds
jns
cld
test
jle
rcll
jne,pn
mov
xor
or
mov
mov
dec
xchg
push
hlt
mov
psubusb
xchg
and
je
jbe
call
inc
mov
pop
int3
iret
dec
pop
divl
push
insb
not
sub
lods
xor
inc
mov
jns
add
push
and
cmp
push
xor
das
and
shll
mov
adc
inc
ficompl
loope
mov
xor
mov
jp
fwait
xor
or
lret
jb
leave
jl
cltd
scas
lea
scas
lret
xor
lock
push
imulb
sub
adc
stos
shll
xchg
jmp
pop
mov
pop
sub
xor
jae
cmp
pop
cmpsb
icebp
jno
movl
jb
push
mull
dec
mov
mov
daa
cmpl
enter
mov
mov
call
inc
rolb
mov
aad
jecxz
cltd
out
jns
lret
pop
pop
sub
aad
in
movb
cmc
gs
xchg
adc
repnz
sub
outsb
push
insl
repnz
jg
or
cmp
loopne
pop
mov
mov
adc
add
imul
test
or
cmp
jl
sbb
mov
add
cli
adc
and
mov
rclb
sub
xlat
xlat
shll
repnz
jnp
pop
inc
mov
or
inc
or
ss
mov
stos
push
andb
jbe
and
loop
xchg
mov
cmc
negl
mov
ror
mov
das
arpl
in
cmpsl
jp
jbe
pop
arpl
js
jp
jmp
js
clc
or
lds
sub
or
imul
xor
adc
cs
fstpt
or
push
inc
and
jb
pop
ret
push
or
scas
sbb
mov
fwait
jbe
xchg
sti
lods
inc
loop
shl
dec
mov
cmpsb
adc
test
ret
imul
add
lods
in
adc
mov
and
repnz
pushf
dec
xlat
adc
stos
imul
xor
jae
sbb
add
inc
das
int3
cmpsl
pop
pushf
pop
xchg
xchg
in
xor
in
sub
cltd
jge
cmp
xchg
in
outsb
out
out
add
xor
pop
mov
lea
int3
das
adcl
and
arpl
push
sbb
int
fst
jecxz
pushf
mov
xchg
ds
aas
xchg
sarb
rcll
push
add
xchg
icebp
mov
or
mov
inc
dec
mov
inc
xor
pop
jg
cmp
ss
fildl
test
imul
mov
push
xor
pop
pop
xor
test
lret
add
pop
cli
pop
add
sub
add
push
mov
xchg
fadds
out
mov
sub
fistps
adc
mov
mov
enter
out
out
dec
clc
nop
or
aad
test
outsb
pop
aad
xchg
push
and
mov
mov
adc
std
jae
cmc
pusha
jne
lods
dec
bound
data16
sti
jmp
les
inc
xchg
xlat
leave
xor
out
mov
ds
inc
cmpb
scas
cmpsb
pop
adc
lods
sti
fs
xor
mov
sbb
push
push
mov
insl
xchg
pushf
jbe
stos
jle
out
cmp
lret
rcrb
mov
cmc
test
push
ds
or
push
sbb
fimuls
sbb
stos
push
int3
lahf
xchg
mov
ljmp
or
xor
popl
push
mov
loop
mov
aaa
push
insb
xor
fcomip
add
mov
sbb
std
mov
lret
repnz
hlt
mov
jb
addb
gs
adc
jle
or
sbb
push
stos
add
scas
in
test
mov
test
or
fidivl
push
mov
xchg
outsb
fists
pop
incb
cmpsl
or
cld
and
cwtl
sub
xchg
xor
jbe
adc
jno
lret
shlb
adc
mov
mov
push
sbb
jge
cs
gs
fs
fwait
aas
shll
mov
sti
popf
aas
les
repnz
js
std
dec
cmp
out
sub
mov
or
sbb
fdecstp
aad
xor
cli
scas
lods
or
xchg
cmpsl
and
jle
mov
mov
push
lea
iret
ss
add
dec
cli
push
inc
xchg
cmp
stos
fmull
in
mov
add
ret
icebp
push
int3
add
mov
push
jmp
xorl
cmpb
xor
mov
into
pop
pop
lea
adc
ljmp
insb
sti
stos
in
insb
shr
movsb
test
push
bound
dec
jg
es
shll
and
add
mov
mov
xchg
inc
inc
mov
imul
adc
xorl
inc
sar
xchg
jp
lods
out
aam
mov
inc
int3
cs
test
xchg
push
lods
push
gs
inc
int
loope
pop
inc
xor
orb
outsb
jge
mov
stc
out
inc
xor
add
push
cmpsb
in
inc
sbb
mov
sbb
jnp
xchg
pushl
mov
ret
add
ret
add
jp
or
movb
inc
shrb
inc
add
sti
mov
cmp
jbe
mov
dec
mov
repz
sti
popa
sub
sub
ljmp
roll
loop
jg
pop
jge
push
jmp
gs
or
adc
push
data16
cmc
xorb
jmp
rolb
in
das
inc
sub
pop
sub
clc
pop
sarb
scas
adc
add
out
in
add
loopne
adc
test
jbe
dec
pop
jg
aam
adc
stos
dec
push
aad
mov
leave
xchg
push
lahf
imul
sub
in
xchg
dec
or
push
or
inc
sahf
push
add
repnz
sub
xchg
pop
pop
test
adc
daa
in
enter
dec
in
ja
incb
or
jne
or
push
or
test
xor
cmpsb
cmp
idiv
loope
adc
div
push
movsl
sbb
inc
sub
push
xchg
inc
mov
scas
into
dec
icebp
adc
dec
mov
add
jne
xor
stos
push
mov
sub
popa
lret
push
mov
je
rcrb
jg
cmpb
stos
jnp
movsb
repz
aam
xor
mov
push
aam
sub
cltd
mov
xor
imul
clc
cmp
push
xor
cmp
add
adc
sub
popa
outsb
test
rclb
dec
fucomip
loop
daa
pop
pop
pop
fiaddl
fnstsw
push
inc
pop
sbbl
mov
jno
sbb
pop
mov
cmp
xchg
xor
push
mov
js
fcmovb
repz
mov
push
add
lds
aas
xchg
cwtl
mov
jecxz
adc
mov
sub
rol
dec
adc
fs
xchg
movsb
test
lds
inc
test
jp
jle
and
nop
cmp
insw
sub
push
test
ja
xchg
mov
stc
ret
cld
jg
cmovns
aad
in
negb
push
jp
ja
popf
jle
ja
jg
pop
jns
bound
pop
pop
fcoms
in
sar
mov
test
iret
inc
fidivs
xor
add
sbb
or
cmp
add
xchg
or
stc
fwait
pop
push
in
cmpsl
std
jmp
sbb
insb
out
jo
and
adc
das
inc
push
xor
mov
lods
xorl
xchg
and
push
fidivrl
lods
and
jg
movsl
fsubl
adc
mov
xchg
roll
fucomi
or
insl
lret
sub
les
shlb
fldl
ds
mov
xor
imulb
inc
clc
inc
in
xchg
push
movsl
or
mov
stos
xor
push
lods
or
imul
inc
add
addr16
add
cmp
pop
mov
out
enter
cmp
xchg
insl
cmc
mov
neg
push
mov
es
cltd
pop
adc
lret
ds
test
cld
pop
jp
xchg
pop
sbb
sbb
adc
decl
sub
pop
das
adc
mov
mov
push
cmp
jmp
loopne
sti
push
sub
jmp
inc
movsl
das
es
xchg
sarb
cwtl
inc
pop
mov
push
mov
dec
mov
loop
xchg
jnp
test
adc
je
jo
jg
fldl
gs
xchg
std
sub
cmp
inc
aam
add
bound
cmc
xchg
cmpl
push
sbb
cmc
and
cmp
out
inc
push
mov
in
jecxz
pop
push
xor
faddl
cmp
scas
mov
jnp
stos
scas
cmp
lcall
es
dec
mov
adc
dec
sbb
mov
insb
outsl
icebp
or
and
loop
sub
adc
xor
or
stc
and
data16
cmp
jmp
out
les
sub
popf
outsl
outsl
or
test
roll
xchg
nop
addr16
sahf
dec
movl
xchg
fimuls
mov
push
mov
icebp
sub
fidivl
lock
push
cmc
mov
pop
in
in
sub
int
fisttpl
leave
sti
mov
bound
push
call
les
push
lret
into
lahf
scas
dec
insb
cmp
test
test
rclb
ja
pop
ds
xchg
loope
mov
jmp
lret
jnp
mov
cmp
mov
adcb
out
pop
xor
hlt
mov
cmpsb
cltd
push
mov
addr16
sbb
xor
jbe
mov
adc
subb
push
std
test
ss
faddp
push
in
clc
in
into
push
mov
mov
sbb
movsb
and
xor
pushl
push
push
das
xlat
jmp
ja
mov
je
test
cs
aad
call
xor
jp
jle
lret
aad
push
out
filds
cmpsb
adc
fst
aas
stos
shll
ss
andb
sub
mov
xchg
in
jae
jno
push
mov
mov
pop
stos
sbb
ljmp
sbb
push
subl
push
int3
in
ljmp
fisubs
int3
pop
jmp
arpl
pop
dec
mov
xlat
sbb
push
mov
mov
ret
push
aad
js
stc
cli
inc
inc
cmpsb
pop
mov
iret
xchg
test
mul
push
int
stos
mov
adc
iret
bound
mov
fcoms
sub
dec
pop
nop
inc
cmpsl
pushf
add
fsubs
aaa
mov
adc
js
pop
imulb
jbe
lahf
les
out
inc
add
ret
cltd
popa
cmp
and
mov
icebp
sub
sub
jg
cmc
sub
jg
fistpll
dec
xchg
cmp
inc
outsb
lods
cmc
xchg
lea
ret
popf
jns
fdivr
xchg
ret
popa
cmpsb
mov
xor
dec
mov
out
pushf
sbb
xchg
push
jno
clc
orb
add
pusha
mov
in
es
stc
pop
push
push
mov
adc
add
out
sub
jno
push
sbb
inc
movsl
push
scas
stc
test
inc
decl
mov
cmp
mov
mov
incb
xor
jl
daa
repz
pop
dec
mov
sahf
repnz
pop
xor
sbb
mov
or
cmp
adc
mov
out
adc
rcrb
cltd
add
ret
dec
mov
ja
in
adc
mov
loopne
nop
adc
xlat
imul
popa
aam
mov
call
adc
mov
cmpsl
sbb
jmp
push
mov
subb
loop
push
aas
sbb
leave
mov
pop
sbb
dec
lcall
movsl
cmp
dec
add
nop
fists
popf
pop
inc
mov
loop
xor
dec
sub
orb
push
not
and
jl
cld
loop
jl
jle
pop
xor
xor
push
mov
jp
sub
fcoms
sti
cmpsl
jnp
icebp
les
inc
xor
push
mov
add
mov
and
mov
fsts
add
pop
stos
jl
les
pusha
pop
sbb
test
dec
pusha
lods
shlb
inc
mov
mov
inc
dec
aad
sbb
mov
bound
int3
add
scas
add
add
jle
sub
not
jmp
adc
cmp
imul
loopne
negl
xchg
data16
add
ror
sbb
mov
inc
shlb
cmc
pop
pop
pop
xor
mov
or
fildll
dec
repz
adc
or
ds
jbe
cli
jp
mov
inc
xchg
decb
scas
rolb
pushf
icebp
mov
fwait
into
clc
cmp
shrl
ficoms
decl
sub
xchg
daa
cmp
sub
sbb
mov
mov
push
dec
adc
and
sub
or
inc
shrl
xlat
pop
adc
mov
mov
and
mov
das
mov
into
insl
xchg
dec
xor
push
sub
cmpsb
xor
jecxz
fwait
jbe
pushf
sub
jb
mov
lahf
loop
mov
mov
and
dec
cld
aas
inc
das
sar
push
imul
es
pop
cmpsb
call
in
outsl
jecxz
iret
jmp
add
and
xor
pop
mov
cmp
inc
test
mov
mov
xor
add
jl
push
addr16
inc
jno
js
xor
adc
mov
or
push
push
fst
lds
mov
icebp
in
lds
movsb
fimull
jne
dec
push
xchg
xchg
push
fcmovu
loope
xlat
cmp
enter
pop
lods
lcall
pop
hlt
nop
dec
scas
dec
into
inc
add
mov
xor
push
gs
scas
cmpsl
hlt
call
sub
jne
shrb
scas
push
mov
or
cmp
mov
in
in
out
clc
and
sub
mov
and
popa
int3
lret
fldenv
xchg
inc
or
ja
lods
add
adc
and
dec
and
xchg
test
pop
stos
mov
roll
xchg
pusha
popa
testb
inc
ret
mov
push
adc
rorb
es
dec
mov
movsbl
xor
pop
sbb
cwtl
mov
push
xorb
jno
lret
mov
in
add
ss
xchg
jae
xor
orb
cmp
xchg
cmp
inc
imul
jecxz
notb
sub
movsb
or
jg
in
ljmp
xchg
lods
mov
addr16
xlat
and
pop
repz
xchg
hlt
add
iret
inc
in
mov
pop
jno
pop
pop
jns
mov
imul
and
xor
ret
loop
xchg
add
push
sub
mov
sarl
xchg
out
mov
push
lods
pop
nop
int3
in
loop
push
lea
xor
fstpl
pop
ss
dec
mov
sub
jecxz
jp
out
aad
sbb
pop
jp
push
pusha
mov
je
in
jle
jl
adc
lock
mov
dec
mov
mov
inc
scas
push
push
rorb
mov
popa
lods
add
in
sti
jl
les
aam
popa
xchg
cmpsl
clc
ret
dec
jmp
lds
or
test
stos
sub
es
das
pop
sub
dec
mov
lret
mov
fimull
push
sbb
ret
out
fcoml
insb
xlat
add
lret
icebp
sub
stos
xor
stc
out
inc
inc
sbbb
test
xchg
pshufw
sti
xlat
pop
lret
iret
repz
push
and
sub
arpl
pop
sub
sub
sbb
sub
push
lret
out
fwait
dec
lret
subb
scas
mov
push
arpl
and
jnp
and
into
les
dec
shr
ret
and
xchg
cmc
add
nop
loope
into
sti
sbb
insb
inc
inc
sub
inc
mov
or
sbb
inc
dec
cld
aas
mov
in
fwait
push
dec
popf
lahf
rcr
iret
push
jge
sub
jno
jmp
les
test
pusha
push
mov
arpl
lods
cltd
cmp
imul
loop
mov
inc
xchg
push
mov
pop
mov
addr16
mov
ss
xchg
je
mov
jp
repnz
mov
mov
loope
and
inc
call
push
jp
and
push
andb
insb
or
xchg
add
push
jns
xor
sbb
out
mov
add
out
bound
dec
lods
loope
out
jae
push
sbb
leave
and
xor
sbb
xor
xchg
outsb
in
sbb
insb
aas
clc
or
mov
fstl
test
ror
xchg
cmp
cmp
xchg
sub
jecxz
xchg
mov
pop
cmpsl
jo
jp
dec
adc
cmp
hlt
dec
daa
out
cmp
inc
shll
addr16
int3
arpl
jmp
aas
int3
and
ljmp
aaa
repnz
mov
sub
and
call
mov
cmpsb
loopne
rol
and
dec
lret
mov
out
mov
mov
add
lret
xchg
jb
and
add
nop
imul
daa
daa
pop
xor
dec
dec
in
aaa
inc
sbb
repnz
and
cmpsl
mov
andl
popa
jno
mov
add
cmp
mov
dec
cmc
dec
fwait
mov
adc
sbb
test
popa
xor
scas
pop
fwait
sbb
sahf
dec
mov
jbe
mov
insl
movsb
cs
xchg
xchg
mov
sbb
or
es
mov
add
in
xchg
jmp
jle
add
dec
pop
movsb
fisubrl
xor
mov
outsb
cmp
call
inc
xor
sahf
stos
xchg
pop
out
or
das
dec
imul
pop
pushf
push
sbb
mov
cmc
jae
cmp
imul
test
dec
jp
cmp
lds
xchg
out
jns
test
dec
nop
loop
sub
or
cld
jo
repnz
inc
push
aad
adc
jmp
in
push
sbb
mov
daa
mov
addb
xchg
ljmp
dec
sub
mov
sahf
mov
lock
and
push
adc
jmp
xor
xchg
nop
mov
push
dec
rorl
lcall
cmp
push
sbb
dec
fiadds
fwait
or
mov
and
aad
les
lret
xchg
je
orb
shr
nop
aaa
jns
pop
adc
jo
fsubl
call
push
cmpsl
cmc
xchg
imul
mov
ficoml
pop
mov
mov
lcall
mov
imull
into
loopne
lahf
mov
cs
dec
out
sub
pop
lods
xor
addr16
dec
jg
mov
lods
pop
lods
and
cltd
mov
push
stos
and
js
mov
repnz
inc
pop
pop
daa
jnp
daa
mov
lahf
dec
fdivs
pop
pop
mov
leave
stc
shr
test
push
jns
push
popa
sbb
ret
aad
sub
aas
jecxz
pop
fstpt
dec
sub
test
adc
insl
repz
jmp
imul
push
inc
mov
xor
add
cwtl
xchg
fsubrs
cmp
push
cs
sub
mov
aam
inc
rolb
mov
lds
fstps
sbb
mov
jmp
sub
inc
jmp
add
mov
clc
pop
cmove
cmpsb
ss
lock
or
jbe
imul
push
xchg
sub
ret
jo
movsl
inc
mov
loop
jno
inc
xchg
loope
scas
loope
mov
xchg
movsl
mov
and
xchg
popa
and
lods
sub
mov
and
enter
xchg
imul
lods
loop
push
sbbb
inc
call
jp
int
cs
int
aad
push
mov
sbb
test
lret
cmp
repz
mov
imul
jbe
fsubs
ret
sti
outsb
mov
mov
add
xchg
mov
imul
cmpsb
loopne
push
lds
cld
fnstsw
or
fmull
cmp
nop
sub
pop
shll
fsubrs
sti
or
mov
loop
aas
mov
popf
push
int
sub
sbb
pushf
imul
addr16
or
hlt
adc
mov
mov
ja
je
adc
rcrb
mov
scas
sub
add
cwtl
or
pop
push
or
ss
fldcw
or
mov
or
test
leave
cmp
push
push
shr
pop
lock
neg
cmpb
roll
rcl
les
dec
inc
out
push
pop
mov
out
cli
push
lods
mov
cmp
fs
addr16
or
daa
push
arpl
and
adc
adc
sbb
jp
jne
leave
inc
jns
cwtl
arpl
sbbb
dec
cld
or
pop
pop
inc
mov
dec
dec
insb
mov
out
sub
ss
jge
adc
fistps
sbb
pop
repnz
ret
dec
sbb
inc
sbb
cmp
xor
mov
imul
jnp
inc
jmp
lds
mov
mov
jle
mov
sbb
sbb
xchg
jno
das
sub
pop
subb
outsl
rcrl
pop
adc
fists
lcall
xchg
push
mov
lret
jae
cmc
xchg
jp
dec
mov
shlb
cli
nop
mov
clc
jb
fwait
push
ss
mov
out
xchg
lock
mul
test
sbb
pop
add
add
push
fxch
xchg
push
ds
mov
mov
ret
cmp
xlat
shl
insb
mov
push
xchg
repnz
faddl
lcall
in
loope
and
xchg
loop
insb
push
imul
lea
or
fs
icebp
lock
outsb
icebp
lock
add
fcompl
adc
jl
xlat
jp
xchg
cmp
fisubl
ss
clc
sbb
add
and
fcoml
std
xchg
push
pusha
imul
jae
sti
mov
fwait
xchg
add
out
xrelease
mov
lret
sbb
jle
inc
mov
pop
cmc
push
test
dec
andl
inc
fists
and
lods
rorb
push
xchg
inc
mov
inc
mov
jg
inc
push
cmpb
jae
xchg
xorb
fiaddl
mov
arpl
sub
sub
dec
cmp
mov
fsubl
enter
addr16
or
testb
in
stos
mov
cmpsb
movsl
orb
int3
es
daa
stos
pop
mov
add
jbe
pop
mov
and
ffree
test
xor
outsb
and
or
xor
jnp
loop
stc
rol
push
pop
jbe
xchg
orb
dec
xor
inc
fidivrl
xor
sahf
xchg
xchg
push
push
and
inc
lret
addr16
sarb
push
bound
test
mov
test
xchg
sub
shll
mov
pushf
mull
cmp
aam
xorb
movsl
sbb
or
or
push
out
and
xchg
mov
cmp
adc
mov
push
sbb
adcl
add
dec
nop
sbb
jne
xor
ret
lea
mov
cmpsl
push
not
in
jne
and
jnp
xchg
fsubp
scas
out
pop
dec
xchg
scas
testb
stc
dec
mov
je
mov
xchg
mov
movsb
jge
mov
inc
push
nop
add
and
test
mov
mov
cmp
or
cmpb
sub
pop
xor
mov
add
andb
sbb
je
dec
nop
aad
push
mov
and
popa
ds
and
or
rcl
sub
imul
aad
mov
mov
loopne
test
repnz
movsl
jb
bound
sbb
push
in
icebp
pop
pushf
cmp
mov
pop
mov
rcll
mov
adc
add
mov
icebp
je
flds
cmp
movsl
xchg
lcall
xchg
add
in
lcall
push
xor
adc
call
adc
jle
aaa
pop
popa
lcall
int
outsb
pop
shll
xor
or
lea
sbb
cmp
in
out
xor
sarl
inc
adcl
sbb
into
pop
ficomps
xor
stos
dec
push
int
scas
pop
xchg
push
push
in
dec
dec
sub
cmpsl
shlb
mov
lahf
inc
sti
mov
cmp
mov
and
xchg
push
xchg
fucom
mov
fidivl
or
adc
sub
fisubrs
pop
cmp
dec
iret
cmc
and
fdivs
xlat
mov
or
dec
mov
or
add
mov
mov
jge
xchg
int3
fldt
cmp
dec
adc
aas
dec
data16
jecxz
push
push
cmpsb
or
cld
add
std
loop
cld
sub
cmpsb
xchg
fists
pop
rol
mov
xchg
or
rcr
xchg
lret
call
push
imul
pop
pop
add
or
jle
mov
sbb
xor
imul
iret
sahf
adc
outsb
ljmp
loope
and
std
add
ret
fs
cmp
xchg
adc
dec
push
push
out
push
push
mov
out
adc
push
jbe
jne
dec
in
lret
mov
aaa
mov
js
jb
incb
sbb
rorb
test
push
fwait
xchg
cmpsl
sbb
bound
jbe
and
push
lock
xchg
jo
stos
xchg
rclb
xchg
lds
pop
out
mull
pop
ret
mov
xor
dec
pop
pusha
aad
push
lods
cmp
ss
rclb
mov
leave
sub
arpl
ja
jge
mov
sbb
movsb
aas
jmp
xchg
rorb
lcall
mov
imul
inc
inc
mov
xor
jp
iret
cmp
xchg
xor
sbb
aad
and
fidivrl
scas
jmp
or
add
fidivrs
test
fidivl
fstps
push
sbb
dec
ljmp
jns
fs
pop
repz
dec
xchg
sbb
mov
push
push
mov
xchg
push
leave
out
mov
dec
pop
sbb
sahf
mov
adc
les
setbe
push
mov
mov
daa
jns
neg
fwait
xor
mov
repz
mov
or
sahf
lock
inc
dec
add
shll
inc
or
pop
dec
out
push
loopne
gs
mull
orl
scas
cmp
out
cltd
rcll
and
cmpsl
dec
dec
lret
aaa
push
mov
je
setno
pop
call
xchg
jnp
sub
adcb
mov
mov
cmpsb
cmp
popf
fldcw
inc
mov
stc
or
adc
out
sahf
push
mov
movsl
inc
jnp
dec
sbb
inc
shld
inc
dec
pop
add
pop
loope
sar
repz
insl
mov
sahf
xor
cwtl
dec
lods
inc
nop
stc
cmp
sbb
test
pusha
xor
xor
mov
xchg
aas
xor
jmp
cmp
mov
aaa
mov
stos
rcrl
xchg
inc
arpl
outsl
xchg
push
sub
jecxz
pop
pushf
push
or
sub
add
fsts
mov
sub
lds
bound
mov
es
pop
popa
int
mov
xor
pop
dec
push
out
pop
pop
xor
push
cs
jo
sub
test
and
jge
adcb
mov
aad
imul
sbb
mov
mov
test
test
push
dec
push
hlt
loop
mov
aam
movsl
mov
cmp
sti
gs
ljmp
lret
and
or
roll
daa
or
leave
orl
cli
mov
pop
sbb
and
inc
push
adc
xor
mov
pop
iret
pop
inc
cmp
push
add
push
les
adc
xorl
and
adc
inc
popa
std
mov
fbstp
push
cmc
fnstenv
sub
rorb
data16
inc
inc
jp
outsl
fs
mov
dec
loop
pop
repnz
add
sbb
faddl
jmp
stos
push
fcomps
xor
sub
int3
imul
mov
dec
or
sbb
pop
dec
or
popf
data16
jne
fmull
or
nop
jns
ljmp
fcompl
jmp
dec
mov
xchg
mov
lret
push
xchg
or
pop
add
mov
out
into
mov
add
inc
inc
daa
cwtl
mov
xor
sbb
lahf
ljmp
jge
stos
in
inc
sahf
jg
push
clc
xchg
fistpll
xor
inc
dec
adcl
jge
push
cld
adc
sahf
push
jle
mov
adc
xchg
int
add
dec
fwait
adc
cmp
dec
jmp
mov
ret
inc
cmp
xor
mov
or
xchg
outsb
pop
fsin
sub
dec
imul
sub
jno
push
loop
lds
cmc
dec
divl
push
les
mov
leave
cmc
or
push
sub
out
push
or
xchg
xchg
jo
and
or
sub
ljmp
shll
dec
mov
or
outsl
push
out
popa
inc
outsb
into
add
cld
icebp
inc
sub
and
push
cmc
fs
pop
and
mov
xor
mov
aad
pop
push
pushf
mov
mov
daa
and
mov
cld
lods
into
sub
push
jmp
icebp
lods
movsb
add
aam
dec
jne
out
aad
fwait
inc
dec
mov
or
xchg
inc
clc
sbb
jne
jg
lcall
cmpsl
fldenv
adc
call
add
pushf
fwait
jo
xor
pop
adc
cs
shll
loopne
push
and
mov
inc
loop
mov
mov
pop
and
cmc
test
js
into
lahf
or
and
andl
shll
cmp
jp
jecxz
mov
outsb
imul
sub
jne
dec
fnstsw
pop
mov
mov
dec
into
hlt
lahf
push
push
shll
movl
rorl
pop
cmp
enter
sahf
pushf
nop
mov
xor
jne
cmp
xchg
out
stos
xchg
stos
stc
sub
jbe,pn
jns
stos
mov
das
adcb
cmpsl
ljmp
push
dec
es
incl
cmp
inc
xchg
push
mov
xor
je
shll
cwtl
inc
outsb
pop
in
ret
push
sub
gs
jb
xor
pop
pushf
and
faddl
test
xchg
adc
fcoml
je
add
sbb
mov
push
outsb
ss
jl
in
fisttpl
lahf
pop
jo,pn
out
std
or
push
xlat
loope
addl
jb
jae
insb
lcall
cld
fbstp
fnsave
cmpsl
push
xor
cli
popf
pusha
shrl
mov
jae
sahf
fldcw
jns
ljmp
jns
mov
push
fdivs
pop
out
data16
int3
sahf
jns
shl
sbb
out
in
test
xchg
jno
ljmp
ljmp
dec
jne
mov
shl
cli
mov
dec
bound
scas
test
jecxz
mov
loope
js
xchg
adc
imul
out
push
mov
sbb
adc
mov
ss
lea
sbb
adc
popa
ja
aaa
mov
or
cmc
scas
jbe
cmc
rorb
outsb
shl
stos
fimull
mov
mov
mov
imul
pushf
test
xchg
in
data16
cli
daa
mov
mov
adc
adc
fs
jl
mov
or
mov
fstl
clc
jmp
jns
loope
repnz
ss
xchg
cmp
sbb
xor
les
into
cmc
das
clc
fstps
repz
fnsave
mov
mov
sahf
btc
pop
scas
das
sub
lcall
popa
das
xchg
jno
inc
sbb
cmp
and
lods
pop
jg
cmc
rolb
cs
cmc
fldl
lret
mov
xchg
outsl
jae
push
xor
mov
cmpsl
fcmovnb
mov
add
scas
testb
movsl
ljmp
das
mov
pusha
push
mov
or
aaa
mov
inc
test
and
ss
fcmovbe
leave
sub
setno
sub
xchg
imul
fisttps
inc
lret
repz
stos
in
or
inc
mov
cmpsl
jo
pop
or
adc
sub
rcrb
xchg
push
jle,pt
xor
jb
enter
lea
adc
ss
jge
das
dec
pop
cmpsb
loop
push
xchg
pop
dec
dec
andl
and
xor
ljmp
test
push
cmc
cmp
aad
cmc
lock
stos
xor
push
adc
ja
lds
cmpsl
dec
xchg
gs
and
push
fildl
movsl
mov
mov
xchg
and
sub
ds
in
popf
test
xor
xchg
and
es
mov
out
loop
mov
in
sub
in
enter
mov
push
and
dec
and
mov
test
adc
movb
shrb
pop
cmp
inc
xlat
xchg
lret
add
fcoml
jo
lcall
adc
sub
stos
je
popf
inc
sahf
jmp
cmp
rcr
mov
out
andl
cmp
fldt
push
in
loopne
fstl
pop
mov
les
scas
adc
dec
lods
popf
loope
fsubr
jg
je
sub
fldt
aam
mov
adc
xchg
cmpsb
scas
ficoml
dec
daa
sbb
call
inc
jno
jecxz
int3
in
ss
sbb
sub
jnp
jmp
into
sbb
adcl
cltd
pop
pop
pop
rcl
cmp
inc
inc
jle
movsl
insb
adc
out
fstpl
dec
popf
inc
cmc
mov
mov
testl
sbb
push
pushf
movsb
and
or
ficompl
sub
dec
sarb
inc
out
mov
sahf
rcrb
fwait
dec
mov
les
mov
cli
leave
cs
push
mov
jecxz
cli
push
push
arpl
dec
outsb
xor
mov
jle
out
adc
ret
pushf
into
adc
loopne
fidivrl
jo
arpl
jo
rcrb
adc
push
fmuls
imul
or
cmp
outsl
lock
dec
scas
pusha
adc
add
es
les
repnz
sbb
fstps
jle
rorl
sbb
out
dec
rcr
mov
cmp
or
sbb
mov
les
xor
sbb
add
cmpsl
or
popa
fnstcw
add
into
sub
or
out
or
mov
lcall
cmpsb
dec
jo
pop
pop
sahf
mov
mov
or
dec
or
jns
dec
movsl
or
addr16
cli
pop
adc
mov
cli
sbb
in
mov
pop
call
mov
dec
inc
pushf
pop
insb
xlat
aad
dec
dec
jge
jg
jnp
and
push
push
mov
mov
nop
or
mov
mov
xchg
js
pushf
lcall
cmpl
cmp
push
test
pop
in
jae
lds
push
shll
mov
fsts
xchg
sti
mov
ficoms
mov
mov
dec
dec
out
mov
cmp
pop
push
es
fs
jo
dec
and
push
cmp
in
clc
and
fisubl
adc
pop
pusha
cmp
sbbb
cltd
in
push
dec
jp
xlat
mov
inc
test
jns
mov
sub
mov
dec
cmpsl
push
xchg
adc
inc
pop
pusha
add
and
adc
hlt
lods
jnp
push
xlat
aad
fimull
dec
gs
lock
xchg
int
push
mov
mov
pusha
xor
aaa
sub
mov
cmp
insb
or
mov
addb
sbb
sbb
pop
cmp
lahf
push
scas
loop
shl
imul
arpl
lds
jg
and
or
int
ds
push
adc
aad
addr16
push
mov
cmpsb
stos
in
adc
into
xchg
pusha
sub
cmp
addr16
push
lods
or
mov
jge
insb
ljmp
xor
add
add
pop
dec
adc
pop
jbe
xchg
shl
add
iret
int
push
pop
or
xlat
dec
ja
scas
or
loopne
ljmp
jnp
nop
testb
cmp
cmp
test
pushf
jo
xlat
addr16
cmc
inc
std
jo
loope
scas
lods
fxam
xor
into
mov
sbb
cmpl
test
loope
xchg
push
addr16
out
fidivrs
hlt
inc
or
sub
inc
lahf
jnp
mov
repnz
faddp
adc
hlt
movsb
fstpl
fiaddl
jmp
mov
and
and
lds
push
ja
dec
mov
xchg
or
mov
fsub
inc
fcoms
sub
loopne
repnz
loopne
push
sbb
push
jno
in
movb
ret
stc
cmp
push
cs
sahf
lret
sbb
dec
in
dec
cmp
inc
mov
lret
call
sti
je
sarb
sbb
stos
and
lods
aam
sarb
adc
imul
adc
xchg
faddp
das
daa
cmp
xor
add
jg
inc
cmp
std
lret
or
je
fsubp
mov
int3
mov
jnp
sbb
fs
hlt
std
cld
mov
mov
and
add
dec
sbb
sbb
imul
and
popf
out
xlat
dec
pop
fs
mov
out
pop
in
mov
imul
in
ljmp
sub
mov
and
sbbl
mov
stos
les
movl
hlt
out
ja
icebp
inc
nop
mov
pop
xlat
xor
out
scas
sub
inc
shll
sub
outsl
mov
inc
xchg
pop
lods
push
mov
out
pop
rcll
xchg
pop
fwait
popa
shlb
inc
dec
mov
jmp
xchg
adc
add
push
lds
pop
out
mov
add
or
and
pop
pop
adc
cltd
test
pop
push
in
mov
pop
cld
pop
test
mov
loop
lock
inc
xchg
ljmp
outsl
mov
cli
xlat
sub
or
mov
or
and
stos
jno
xchg
sahf
test
push
and
xchg
mov
inc
out
cmp
mov
rep
sti
jae
add
imul
fldenv
pop
fsts
sti
movsb
push
inc
imul
dec
jbe
mov
push
ljmp
ret
cmp
dec
lret
imul
clc
sub
and
and
arpl
adc
pop
jg
out
arpl
scas
insb
jno
inc
dec
in
cmpsb
sbb
pop
jne
sbb
adc
lahf
pop
xchg
repz
in
mov
mov
cmpsb
jg
test
sub
loopne
xor
jo
lcall
js
add
xchg
adc
jle
leave
inc
cltd
mov
cltd
xorb
aad
mov
xor
adc
sti
imul
and
mov
out
cwtl
addl
movsb
les
xchg
in
mov
cltd
fmull
inc
sti
sub
mov
imul
and
sarl
loop
and
jo
pop
pop
push
js
push
pop
stos
rclb
mov
imul
push
outsb
adc
add
dec
add
and
sub
lret
jl
xchg
cwtl
subl
inc
or
aas
cmp
add
pop
fs
lock
jle
inc
scas
mov
movsb
movlhps
jb
mov
dec
repnz
test
mov
into
ljmp
mov
mov
jnp
and
add
dec
clc
pop
cmp
sub
cltd
mov
incb
add
stos
out
dec
xor
and
xor
int3
lods
insb
insl
lret
addr16
cltd
jg
push
mov
lahf
pop
into
jb
idivl
pusha
xchg
xchg
mov
lea
outsl
pop
ret
or
fwait
jbe
jae
pushf
adc
sub
mov
sbb
shlb
in
rcrl
nop
pop
sbb
std
jo
aas
dec
xor
push
xor
inc
add
fdivrs
mov
gs
inc
sub
xchg
or
inc
push
pop
in
mov
lcall
cmpsb
popf
pop
jmp
stos
push
pop
loop
lods
pop
mov
xchg
daa
xlat
pop
sbb
lret
dec
les
jg
cmp
mov
adc
adc
xor
mov
sbb
cmp
xchg
or
movsl
popa
dec
popf
mov
pushf
xor
int3
mov
leave
inc
sbb
lea
pop
subb
scas
fwait
dec
inc
inc
jg
pop
outsl
sub
lea
xchg
and
ja
sbb
repz
mov
pushl
shlb
cmp
cli
out
sub
es
pop
or
add
or
and
test
out
incl
hlt
cmp
pop
loop
cmp
dec
xlat
idiv
in
jg
xchg
icebp
xor
daa
add
loope
or
inc
xor
sbb
xchg
xchg
push
inc
xchg
jmp
and
std
or
inc
xor
sub
mov
lcall
jnp
orl
xlat
ja
pop
repz
shll
pusha
gs
inc
dec
inc
xchg
fildl
sub
scas
and
sbb
ds
jbe
sbb
test
out
dec
push
inc
sarb
adc
push
jl
add
loope
mov
xchg
pusha
add
mov
mov
jnp
mov
mov
push
inc
push
jae
lret
jno
nop
decl
and
fstps
std
out
sbb
or
mov
cs
jp
and
jae
pop
pop
scas
ficoml
pushf
xchg
addr16
or
movsl
pop
mov
hlt
inc
gs
lock
ds
pop
jg
test
icebp
add
add
adc
dec
sti
les
sub
sbb
in
ljmp
rorb
fidivl
mov
rorb
xlat
jns
mov
adc
mov
push
fcompl
dec
inc
xor
xchg
out
sub
in
mov
out
lea
sahf
ljmp
lea
insl
rorb
push
stos
cli
sbb
rorb
jl
out
ja
loopne
xor
mov
movsl
mov
pushf
in
xor
into
in
int3
sahf
mov
int3
cmp
or
xlat
jmp
jne
scas
shlb
addr16
mov
and
in
sub
pop
das
adc
cmp
jg
sbb
xchg
lahf
insb
pushf
push
xchg
add
int3
or
inc
es
mov
push
xchg
mov
pop
mov
mov
imul
add
cwtl
enter
movsl
rolb
add
js
je
sub
ret
in
dec
shll
mul
push
pusha
hlt
pop
or
push
daa
adc
add
fdivrl
pusha
sub
stos
or
adc
test
cmpsl
outsb
dec
and
imul
sub
mov
sarb
xchg
shrb
sub
jl
mov
dec
inc
jmp
xor
inc
fmuls
fsubr
inc
xlat
adc
test
out
fxch
inc
add
pop
mov
push
adc
nop
stc
das
cwtl
nop
mov
aam
cs
cwtl
xchg
sbb
leave
mov
inc
mov
xchg
cs
jg
andb
lods
xor
xor
aas
adc
fwait
cmc
mov
lds
push
ret
xor
push
icebp
mov
jbe
push
add
dec
xchg
iret
js
bndstx
xor
cmp
bound
scas
jge
sub
dec
fistpl
pandn
shl
sub
repnz
mov
je
mov
mov
mov
push
jmp
in
cmp
mov
jmp
mov
adc
xchg
cmp
inc
fisubl
dec
cld
cmpsb
rorb
decl
into
testl
sbb
pop
jg
cmpb
jg
sub
add
push
das
inc
jg
push
sbb
mov
add
lock
andb
jp
mov
int3
xchg
cmp
dec
inc
adc
subb
shlb
add
pushf
lahf
mov
xchg
addr16
adc
xchg
test
add
jge
adc
mov
out
mov
inc
xchg
stc
pop
mov
aas
jge
xchg
xlat
fucomp
cwtl
out
sbb
xchg
iret
or
push
loopne
sub
sbb
sub
fs
xor
mov
pop
test
mov
dec
xchg
inc
cmpsb
in
lret
pop
test
push
and
lcall
imul
mov
pusha
adc
repnz
xchg
push
in
cmpsb
mov
sub
inc
push
test
mov
mov
insb
mov
cmp
loope
and
mov
popa
leave
fs
mov
js
lcall
int3
cmp
push
testb
in
jno
test
insb
clc
sub
and
jmp
in
lcall
dec
inc
mov
and
andps
ret
mov
sub
cs
and
fidivrs
cmpsl
mov
lock
dec
sub
pop
xor
js
sub
inc
pop
push
test
mov
test
inc
ds
push
cwtl
push
pop
js
addr16
push
scas
inc
mov
sbb
in
movsl
lret
sbb
jnp
push
or
cltd
cmp
cmc
aaa
out
dec
je
jo
aam
cmp
push
mov
mov
cld
inc
js
push
rolb
in
decl
pop
mov
push
mov
push
loope
push
jae
nop
in
call
loop
jp
aaa
fwait
sub
jg
loop
sahf
push
mov
jno
dec
xlat
inc
jns
xor
mov
je
shl
adc
pushf
mov
mov
cmpsb
pop
pop
lret
lods
mov
xchg
lahf
mov
call
xchg
shl
shll
and
and
or
movsb
pop
pop
ds
lcall
std
int3
cwtl
jle
mov
movsb
das
mov
repnz
sbb
cld
rcll
xchg
lcall
stc
in
adcl
in
push
and
inc
mov
sub
push
repnz
push
out
icebp
push
and
imul
pop
out
cs
or
push
push
mov
dec
xlat
jo
xchg
scas
sbb
xchg
pushf
xchg
inc
sbb
std
fisttps
sub
scas
push
pop
cmc
popf
lcall
cltd
pusha
fisubl
mov
mov
sahf
xor
push
jne
mov
mov
mov
enter
sub
aas
push
lret
out
scas
out
cmc
daa
movsb
ljmp
push
or
pop
popa
push
push
ds
addl
ss
dec
imul
ljmp
mov
jne
xor
movsb
das
pop
aas
inc
adc
hlt
adc
mov
stos
imul
pop
ja
stc
cld
jns
test
xchg
dec
sbb
dec
push
das
ja
into
sub
xor
and
xor
jmp
fidivrs
stos
fnstcw
dec
imull
push
mov
dec
in
insl
xchg
sub
jge
enter
or
cwtl
cmc
push
pop
and
out
pop
push
ficomps
add
push
pop
jbe
add
and
or
or
in
jns
out
pop
pushf
xchg
and
sub
loopne
out
add
repnz
xchg
fdivs
mov
mov
mov
arpl
rcrl
pop
jno
mov
add
xor
xchg
push
and
loopne
mov
pop
test
jb
stos
mov
jbe
movsb
cmp
jo
pushf
xchg
out
mov
mov
xor
rcrb
inc
test
fdivs
arpl
mov
in
out
add
xchg
mov
adc
sbb
push
sbb
xor
test
and
rclb
std
xlat
mov
or
pop
dec
add
lcall
pop
lret
out
in
rorl
lret
fmuls
add
pop
jle
shll
push
fiaddl
add
sarl
icebp
push
pop
xchg
dec
test
inc
dec
pusha
pop
movsl
ficoml
dec
inc
lods
daa
lea
jbe
cld
lret
or
aam
ss
std
cmpsl
adc
lahf
sbb
cmp
adc
into
subb
pop
or
push
scas
test
jo
or
or
add
jmp
das
daa
or
leave
or
sbb
iret
xchg
into
inc
inc
loope
jo
sbbb
cs
lock
es
stc
inc
pusha
in
js
jo
jmp
push
push
pusha
xor
mov
sub
ljmp
push
cmpsl
push
dec
lahf
xchg
cs
mov
out
pusha
and
lret
fisubrs
lcall
pop
imull
push
in
mov
add
lret
ljmp
xor
mov
imulb
and
jbe
or
sarl
data16
shl
divb
in
lret
data16
push
pop
cmp
cmpsl
and
xlat
insb
call
add
jmp
push
sbb
sub
loope
out
mov
ss
pop
imul
cli
fmuls
in
scas
xchg
aas
daa
jle
push
out
mov
or
test
jne
and
enter
sbb
cs
jo
xchg
sbbb
adc
rcll
pop
leave
xchg
mov
sbb
cmpsl
fldt
xchg
rolb
xchg
and
lahf
popf
mov
jecxz
in
adc
pop
outsb
sbb
scas
lds
daa
push
and
mov
cltd
aad
lret
jb
jns
xchg
in
fcmovnbe
jbe
js
imul
lds
jbe
push
cli
jle
call
fisubs
cmpsl
jb
add
std
insb
cmp
add
or
xchg
leave
adc
or
xchg
push
int
repz
in
jne
inc
or
rcll
mov
cli
push
cwtl
in
inc
sub
jo
popf
repnz
ljmp
dec
pop
or
lea
inc
push
jle
idivl
push
sahf
mov
imul
sbb
stc
xchg
jge
stos
dec
xchg
std
out
sbb
inc
inc
and
frstor
mov
fistl
out
xor
push
lret
jbe
inc
jno
addr16
xor
lods
loope
inc
pusha
pop
aaa
rcrb
insb
je
inc
fs
pop
jne
sub
out
sbb
jb
mov
pop
xchg
mov
jo
push
bnd
xor
cmp
and
sahf
je
cmp
dec
pop
dec
lret
xor
mov
sub
cmp
sub
push
into
test
rol
add
adc
int
xchg
in
shrl
adc
mov
sbb
jle
sbb
lea
gs
xor
stc
fdivrl
out
shl
xchg
stc
mov
inc
cwtl
test
sub
rcll
in
jp
pop
or
jae
loope
lea
je
aad
std
movsl
mov
jg
dec
test
cmp
lahf
dec
ljmp
xchg
popf
sarb
outsl
aaa
into
sbb
push
sbb
out
rolb
pop
inc
jno
imul
test
mov
jne
loopne
dec
adc
dec
dec
xchg
mov
xchg
cld
mov
lret
rclb
xor
icebp
mov
inc
rolb
sub
das
xchg
lret
push
pop
sbb
outsb
add
dec
insl
sbb
mov
outsb
rcll
imul
sbb
dec
inc
fcoml
cmp
fsts
rcll
jge
ret
and
ss
scas
hlt
arpl
jle
push
pop
xchg
into
jne
aad
push
aas
movsb
imul
mov
cmp
xor
adcl
pop
push
imul
push
mov
fmull
sbb
mov
mov
test
push
xchg
and
fldcw
nop
push
loope
stos
stc
mov
imul
outsl
or
cmp
mov
push
push
xchg
xchg
push
cwtl
cmpsb
sbb
adc
pop
fldenv
in
popf
cmp
out
lock
jb
cmc
outsl
popa
sbb
push
pop
sahf
aad
adc
push
jae
push
and
std
enter
xchg
add
mov
or
ficomps
addr16
call
and
mov
dec
xchg
jae
bound
mov
push
or
adc
aaa
adc
sbb
imul
das
repz
repz
ds
inc
call
out
loopne
xor
jge
clc
loope
or
jmp
sbb
adc
lea
or
sub
mov
mov
in
jle
push
bound
scas
adc
out
push
xor
jno
sub
lret
bound
repnz
sti
negb
inc
clc
fcoml
hlt
sti
aas
mov
cmc
je
inc
jno,pt
test
xor
mov
adc
jmp
cmp
jl
jo
sbb
lcall
mov
xchg
cltd
mov
out
mov
test
leave
or
out
push
xor
sbb
cmpsb
jg
into
in
leave
mov
inc
pushf
inc
out
pop
pop
jle
dec
lcall
ret
jb
andl
popa
pop
jl
adc
test
adc
lods
mov
jecxz
movsb
ja
and
dec
cmp
dec
pop
pop
sbb
rcr
jnp
jmp
test
add
int
insb
cwtl
roll
test
inc
lea
jp
xchg
mov
mov
dec
out
push
jle
adc
cmp
repz
pop
dec
xlat
inc
sub
mov
mov
mov
sub
dec
out
mov
xor
into
jl
scas
add
fmul
and
pop
xchg
bound
out
xadd
mov
add
jb
arpl
or
shl
xor
cmc
pop
mov
dec
xor
jg
cmp
hlt
cmp
adcl
mov
adc
push
jge
insl
dec
xchg
xchg
mov
mov
push
cmp
mov
mov
sarl
adc
in
iret
mov
and
jno
mov
mov
ficoms
imul
dec
in
push
pop
jl
lods
arpl
push
popa
out
nop
cmp
cmp
aas
add
or
xchg
pop
lds
sub
dec
sbb
push
enter
dec
xchg
or
mov
and
loopne
pop
jp
cld
in
cwtl
sti
imul
pop
arpl
xlat
push
push
sbb
std
pop
hlt
nop
fwait
jne
or
sbb
inc
add
mov
cmp
mov
mov
or
jle
enter
pop
int3
shl
mov
data16
jg
mov
sub
xchg
cmp
and
xchg
stc
stos
leave
call
dec
xor
ljmp
int
lods
pop
cmpsl
push
push
xchg
ljmp
sbb
mov
jg
jo
test
ja
rolb
into
or
mov
mov
gs
cmp
inc
xor
xor
stc
jbe
lock
test
xchg
dec
push
push
and
cmp
push
ljmp
mov
cmp
dec
xchg
pop
rolb
shlb
mov
xor
lock
jecxz
pop
mov
xchg
or
mov
fcompl
test
jne
pusha
filds
fsincos
push
dec
in
inc
sbb
bound
or
cs
je
enter
lea
insl
icebp
dec
mov
adc
adc
loope
js
jns
fists
jmp
insl
sbb
push
sbb
add
pop
cmp
lret
mov
push
and
and
test
jb
arpl
cmp
ret
dec
mov
xor
lock
int
fsubr
jbe
mov
xchg
cld
movsb
addl
pop
xchg
pop
sahf
dec
orl
mov
movsl
dec
clc
loope
sbb
movsb
add
sbb
lock
in
lods
mov
mov
and
cwtl
fwait
sbb
push
insb
mov
mov
cmp
stc
test
pop
mov
gs
out
sub
insl
xor
xchg
nop
jns
clc
mov
jecxz
or
insb
xchg
enter
loope
mov
lods
sti
test
imul
adc
and
cmp
out
dec
test
gs
in
punpckhwd
xor
pusha
aas
aaa
lds
push
jg
jmp
shll
aad
repz
inc
cmp
dec
das
insl
in
lods
mov
loop
dec
in
cmp
push
mov
jns
add
ljmp
dec
xchg
mov
cmpsb
mov
mov
xor
sub
fisubl
cs
fistpl
inc
jmp
pop
in
jmpw
cmp
push
inc
test
pop
inc
cs
out
xchg
jo
jecxz
shl
fcomi
inc
insl
pop
adc
pushf
fs
out
aaa
leave
jb
cli
adcl
xchg
arpl
sub
add
push
mov
dec
psraw
xchg
sub
test
xlat
in
std
pop
lds
idivl
cmp
pusha
mov
inc
cmpsb
adc
ficoml
sti
adc
mov
lret
lret
and
or
dec
mov
mov
lret
in
or
decb
loop
out
pop
adc
pushf
jnp
pop
mov
cld
push
jmp
inc
shl
mov
scas
loopne
int
or
shll
mov
jmp
test
mov
daa
fldl
mov
push
cmp
scas
dec
and
sub
loope
fiaddl
dec
gs
fldcw
dec
mov
test
in
pop
jmp
push
xor
outsb
push
iret
jb
into
imul
jns
bound
insb
add
or
test
sub
push
and
cmp
out
cmpsb
sbb
popa
dec
imul
cmp
mov
shll
pop
pop
sub
in
outsb
sbb
insl
push
ret
adc
sbb
xchg
sarb
inc
fcoms
push
jecxz
xor
xchg
or
fcmovb
iret
icebp
and
cmp
xchg
cmp
jae
push
movsl
push
mov
repz
inc
mov
jg
fdivs
push
cmc
aad
jmp
jl
negb
add
in
push
test
sub
inc
lods
call
imul
xchg
fistpll
mov
pusha
push
fimull
mov
cmpsl
insb
pop
mov
mov
dec
inc
int
or
adcb
test
arpl
and
les
lahf
stos
scas
jge
sarl
test
das
imul
shll
pop
mov
roll
aaa
or
xor
sub
xchg
lods
or
adc
xor
ljmp
inc
lcall
mov
adc
into
sub
lods
pusha
mov
jnp
inc
xchg
stc
jle
sbbb
out
pusha
into
out
imull
mov
dec
pop
add
daa
mov
test
jns
testl
xor
adc
jnp
xchg
inc
stos
mov
inc
insl
cmp
pop
xor
or
repnz
inc
mov
popf
cs
or
push
je
mov
cmp
jp
mov
and
cmp
and
xchg
push
jns
sub
mov
xchg
outsl
push
shrl
jo
sti
inc
orb
xchg
test
sbb
mov
xchg
inc
andb
and
aam
repnz
ret
stos
xor
call
clc
mov
push
cwtl
add
push
fs
outsb
or
in
mov
call
lcall
aaa
ja
clc
stos
mov
cmpsb
jnp
inc
sub
test
and
aas
in
mov
aam
mov
mov
dec
cs
cs
push
mov
andl
std
jl
fistps
bound
aam
xor
push
fildl
push
divb
push
pop
in
sub
icebp
xor
int
mov
push
pop
fchs
sbbb
ljmp
mov
xor
mov
dec
jmp
fsubrl
xor
adc
or
cmp
into
fadds
add
mov
adc
adc
push
outsb
xchg
std
pop
dec
mov
xor
mov
cs
fsubs
jo
dec
mov
sub
push
mov
xchg
andb
ror
imul
dec
addb
lret
jae
fisubrl
inc
cli
sti
pusha
jae
or
inc
and
jmp
add
clc
aaa
fisttpll
dec
adc
dec
jno
es
pop
mov
outsl
lret
or
push
xlat
out
scas
lods
lret
aaa
lea
rclb
and
cwtl
sbb
outsb
outsb
stos
jecxz
push
or
push
pop
jge
das
clc
sahf
push
and
pop
fs
stos
dec
xlat
data16
lahf
jns
pop
sarl
test
rcll
imul
inc
pop
sti
push
stos
mov
shlb
mov
aam
outsl
sub
int
or
inc
dec
inc
cmp
int
lcall
mov
fcomps
push
cs
push
push
inc
dec
mov
loope
xchg
leave
pop
ja
or
push
cltd
mov
xchg
push
pushf
fdivr
outsb
add
das
pop
popa
into
jp
jae
popa
adc
push
imul
mov
fldln2
aas
test
inc
push
pushf
gs
mov
cmp
movb
sub
out
cmp
enter
cmp
in
xor
and
sub
add
jp
lret
jecxz
inc
xchg
adc
mov
pop
push
insl
insb
sbb
test
iret
xchg
pop
fneni(8087
arpl
daa
sub
loope
lret
mov
jns
push
mov
lea
dec
jo
int3
dec
test
xchg
push
adc
or
popf
pop
popa
into
dec
scas
mov
aas
lock
rclb
popf
popa
in
cs
xchg
or
scas
cli
adc
xchg
pop
cwtl
gs
jo,pt
insl
xchg
aas
or
fiadds
rcll
push
jbe
lret
mov
lea
flds
pop
cmpsl
scas
js,pn
test
insl
or
and
loope,pt
adc
es
rcr
lcall
or
sub
push
aas
and
mov
mov
mov
enter
mov
jnp
iret
call
out
aaa
cmp
xchg
aas
lods
movsl
ja
or
sub
int
pop
mov
and
shll
jmp
aaa
mov
and
mov
jne
fs
sub
or
jp
jle
add
sub
lds
ret
aas
sub
inc
xlat
fwait
enter
mov
sub
mov
jae
shll
xor
xor
aaa
fsub
add
push
push
pop
dec
sarb
inc
lods
fstpt
mov
mov
sub
in
xor
cmp
push
pop
repnz
je
mov
pop
xor
sub
in
mov
inc
jg
cmpsl
xchg
enter
fs
outsl
mov
nop
repnz
inc
fdivrl
daa
dec
jge,pt
repz
dec
fucomi
push
mov
push
je
xchg
add
xor
inc
mov
sti
nop
jne
ja
mov
jl
iret
lods
xchg
dec
add
sbb
test
xor
cmp
mov
inc
jl
mov
scas
jle
jl
cli
inc
pop
ja
fistpll
mov
mov
jb
and
fcompl
sbb
stos
cmp
out
aaa
je
push
fcmovu
sub
xchg
je
pushf
imul
test
clc
mov
orl
mov
pop
jmp
adc
ficompl
sarb
push
and
je
andb
jecxz
mov
in
outsl
xchg
cltd
or
ret
ret
leave
int3
das
mov
dec
jnp
dec
out
sbb
je
mov
jae
jae
inc
negb
add
std
xor
mov
std
std
ret
data16
mov
das
dec
test
inc
and
mov
mov
mov
xorl
xor
loop
cs
jo
loopne
mov
lret
pop
push
push
sub
mov
daa
rorl
gs
mov
test
xor
test
add
in
dec
stc
jbe
stos
lds
pop
sbb
xor
mov
out
pop
or
jnp
sub
adc
dec
mov
jne
xchg
mov
repnz
inc
test
cmpsl
aad
test
mov
sti
mov
ret
in
pop
insl
cmpsb
jg
rorb
scas
and
fstps
dec
mov
fdivs
cmp
nop
xorl
rcrb
and
sub
or
sub
pop
push
jb
hlt
in
mov
sub
adc
cmpsb
ret
js
push
and
mov
add
sub
repnz
inc
dec
jmp
repz
adc
jae
xor
leave
insl
movsl
scas
dec
scas
insb
icebp
loop
imul
mov
xchg
stos
outsb
lahf
shll
jb
iret
adc
sub
gs
jns
sub
imul
cmp
jne
or
jecxz
test
into
pusha
imul
lret
mov
pop
add
mov
loopne
xor
jecxz
jne
int3
test
cmp
sti
popa
pop
insl
outsl
xor
jmp
pop
push
mov
loope
repz
jb
sar
jle
scas
xchg
arpl
sbb
cmp
and
and
ret
aam
pushf
jle
fwait
rol
adc
shl
xor
mov
mov
sti
into
mov
pop
jns
fcompl
inc
sub
or
cwtl
out
movsb
xchg
add
aaa
cltd
lods
movsb
mov
jbe
insb
aam
pusha
clc
push
into
fsubl
sahf
and
sbb
sub
add
add
call
repz
idivb
out
ds
in
xor
push
dec
mov
stc
xchg
test
mov
cmp
sti
ror
mov
dec
inc
inc
adc
mov
dec
mov
stc
loopne
sahf
mov
dec
push
mul
push
in
push
pop
je
mov
ret
jecxz
xor
bound
cli
push
in
cmp
mov
push
ret
sbb
lret
adc
bound
rcr
mov
xchg
cmp
cmp
std
push
je
mov
xchg
rcr
orb
xchg
int3
pop
mov
fbld
push
add
out
enter
pop
mov
aas
ret
and
stos
sarl
arpl
fs
pop
jl
in
in
push
mov
imul
movsl
adcl
sub
ljmp
pop
cmpsb
xchg
lcall
loopne
or
jmp
cmp
jg
dec
push
push
push
pop
imul
loope
arpl
popl
jb
ljmp
mov
cltd
call
jl
fadds
sbbl
bound
mov
leave
cmp
add
int3
or
cli
xchg
mov
and
testb
popa
or
loop
jb
sub
rolb
or
in
decb
push
jmp
lock
or
sbb
sub
stos
divb
add
int3
out
inc
movsl
add
dec
push
in
jmp
cmp
xchg
lods
lahf
lock
mov
scas
cs
mov
fstl
ret
adc
add
mov
push
loopne
xor
mov
enter
daa
lods
pop
ss
ljmp
or
adc
jno
aad
mov
gs
jmp
mov
dec
rclb
je
push
xor
outsb
mov
dec
mov
dec
mull
xor
imul
and
mov
and
push
and
adc
cmp
clc
rclb
mov
scas
leave
and
sti
add
sarl
cld
out
mov
pusha
adc
adc
inc
imul
sub
enter
mov
pop
data16
pusha
cwtl
mov
jo
or
and
jns
movsl
insb
xor
pop
cld
add
ss
mov
outsl
lahf
dec
push
jo
in
lods
in
add
mov
mov
enter
pop
xor
sbb
adc
imul
mov
lea
pop
mov
inc
fisubrl
cs
and
inc
xchg
pushf
out
jecxz
push
and
je
rclb
add
repnz
and
push
mov
sbbl
pop
popf
sbb
outsb
mov
les
mov
inc
pop
mov
into
cmp
ret
ret
insb
add
cmp
dec
add
and
xlat
and
mov
cmpsb
lahf
sub
inc
cmpsl
cmp
ja
jo
cmp
jmp
ret
or
test
cmp
fwait
mov
pop
je
dec
insb
stc
sub
ror
movsl
dec
popa
iret
sahf
xchg
mov
test
test
jg
cld
pop
jmp
lock
mov
rolb
dec
loope,pt
das
add
pop
pop
push
jns
cmp
jmp
pop
aam
mov
cmp
dec
mov
insl
imul
cli
dec
stos
aad
push
push
xchg
notb
dec
sahf
sti
rorl
in
shlb
push
data16
mov
jg
sub
lcall
cmpl
loopne
sub
lcall
into
jge
inc
pop
mov
jg
std
mov
lea
push
and
hlt
outsb
adc
rolb
sbb
das
cmc
jnp,pn
sub
mov
cmp
stos
and
in
sub
lds
popa
pop
mov
lods
nop
lock
mov
repz
les
xor
dec
pop
in
fcoml
push
xor
mov
nop
pop
add
xchg
adc
arpl
inc
addb
sti
dec
notb
dec
sbb
mov
cmpsb
add
push
inc
xchg
mov
sarl
mov
pop
adc
gs
js
les
pop
out
mov
pop
add
jle
pop
out
or
movsb
sub
and
pop
mov
inc
mov
mov
stc
push
repnz
xor
pop
clc
ret
mov
add
rorl
xor
mov
pop
stc
movsl
repz
mov
sbb
or
xchg
mov
mov
mov
imul
mov
jne
ficoml
mov
pop
loopne
movsb
jg
std
jmp
mov
out
xlat
pop
sbb
cmpsl
dec
fs
adc
xor
lahf
and
push
call
addr16
mov
push
jecxz
rclb
cld
hlt
jge
push
mov
sbb
dec
iret
cltd
pop
xchg
xchg
ret
jge
fwait
in
or
push
test
ror
repnz
movsl
scas
out
lds
insl
in
lret
je
dec
fwait
dec
or
ljmp
xor
popf
mov
pop
sbb
into
fs
cmp
mov
sbbb
testb
and
call
xchg
mov
ret
int3
or
mov
dec
rolb
int3
jnp
sti
out
jecxz
add
lahf
mov
repz
jbe
mov
dec
pop
adc
dec
outsb
fs
jmp
ss
pushf
imull
ss
mov
not
in
pop
jo
push
cmp
and
popf
jbe
insl
push
pop
add
mov
push
in
inc
push
out
pop
nop
mov
cltd
mov
jmp
hlt
idivl
sub
and
xlat
adc
enter
xchg
or
nop
pop
pop
push
xor
sub
jl
jl
pushf
xchg
cmp
pop
lret
push
ljmp
xorb
xchg
enter
cmp
aad
inc
ror
jmp
inc
gs
dec
loop
lahf
cmp
xchg
jbe
cld
inc
mull
fdivs
pop
dec
lods
xor
test
in
push
clc
pop
xchg
push
dec
or
mov
mov
loopne
jl
arpl
push
imul
popa
sub
aas
mov
and
stc
pop
shl
or
loope
push
mov
xchg
xchg
mov
sub
repz
adc
ja
fstpt
scas
int
stos
js
orl
inc
and
test
int3
push
mov
inc
or
adc
add
out
mov
outsb
mov
test
inc
les
pop
in
mov
jg
sub
xchg
cmp
mov
insl
jns
imul
ja
popa
cmc
add
shrl
push
pop
cwtl
jb
pop
popf
sub
xor
sahf
mov
jno
add
mov
mov
cmp
aam
ja
dec
es
lahf
pop
mov
adc
test
nop
mov
and
jb
and
lds
pop
or
icebp
sbb
sbb
jbe
popa
dec
pusha
cs
sbb
cmpsb
push
jle
cmp
and
jp
sub
xchg
mov
or
mov
xchg
aam
andb
jmp
repz
das
xlat
cmp
xor
jmp
addr16
mov
or
adc
imul
pop
mov
mov
and
add
adc
push
push
sbb
inc
and
mov
push
faddl
icebp
stos
add
pop
out
cmp
jle
dec
xchg
jb
fwait
push
test
mov
cmp
cmp
fwait
lods
lods
jge
push
andb
inc
push
scas
mov
flds
in
popf
pop
dec
jg
xchg
lea
xchg
int
sbb
loope
dec
pop
pop
fs
incb
adc
adc
and
out
sub
cmp
inc
leave
xor
push
aaa
hlt
movl
xor
inc
jl
popa
mov
mov
sbb
push
mov
and
lods
sbb
or
lock
es
mov
inc
dec
test
and
or
movsl
adc
xorb
or
mov
aas
and
fsubrs
and
stos
loop
test
xchg
mov
push
stos
mov
shrl
std
sarb
dec
cwtl
pop
pop
add
into
sbb
shrb
dec
pop
mov
sbb
jns
adc
xchg
xor
aad
dec
test
or
andb
push
mov
xchg
push
pop
fistl
or
aad
ljmp
loop
jb
sarl
pushf
pop
sar
mov
loopne
pop
outsl
out
das
lds
loope
xchg
cwtl
xor
mov
dec
and
xlat
loopne
rol
jns
pop
or
pop
movsb
sub
mov
fstpt
xor
cltd
pop
inc
or
mov
ficomps
push
xor
mov
push
incl
sub
shrb
loope
or
popa
mov
mov
adc
into
pop
and
hlt
pop
arpl
mov
lock
xchg
push
mov
test
test
icebp
aam
cmp
sahf
mov
inc
jmp
sub
adc
cli
lahf
lahf
cmpsb
loop
test
inc
mov
sbbl
fstpt
shll
or
fstl
and
test
data16
adc
ljmp
popa
jge
gs
movsb
movsb
and
rolb
add
push
lock
mov
jne
loopne
mov
icebp
sub
mov
xchg
andb
inc
lea
cmp
pop
movsb
insb
lret
sti
insb
repz
mov
push
in
sub
pop
xchg
hlt
add
add
push
or
jl
fcomps
shll
arpl
cmp
push
cli
mov
sbb
pop
dec
fisubs
mov
and
and
cmpb
jp
pop
out
lcall
out
lahf
pop
pop
int
subb
add
rclb
jecxz
adc
in
js
dec
xchg
jne
xchg
jno
cmp
adc
xor
jns
call
aam
push
xchg
sar
xor
negb
mov
into
hlt
ljmp
pop
clc
scas
aam
jecxz
or
jp
xchg
aam
fs
or
fwait
xchg
sub
std
mov
pop
inc
jecxz
dec
loop
insb
cli
call
push
cmp
decl
ret
repz
shrb
xor
iret
mov
faddl
mov
xor
stc
ret
test
ss
cmpsb
in
push
movsb
je
cmpsl
fisttps
inc
je
cwtl
decl
icebp
jb
mov
and
out
out
lock
movsl
sub
loop
int
aad
loop
les
xlat
add
sub
mov
push
cli
mov
cmp
in
add
push
or
mov
js
icebp
and
mov
popa
sarl
cmpsl
std
pop
sub
xor
push
in
inc
icebp
jg
shlb
sub
loopne
pop
cmp
movsl
in
cmp
and
add
dec
test
data16
jae
in
orl
sbb
inc
out
out
lds
inc
mov
lock
push
mov
orb
lock
dec
sbb
cli
pop
mov
das
mov
outsl
cmp
sbb
mov
inc
lret
popa
out
decb
lret
or
dec
or
stc
hlt
in
push
mov
mov
aam
pop
jno
iret
out
fldenv
mov
cltd
cmc
js
data16
push
push
ljmp
xor
push
jg
imul
xchg
adc
ret
xchg
rcl
ret
mov
jle
rolb
leave
add
lods
fadds
sbb
cmp
jmp
leave
shll
fwait
clc
dec
dec
xchg
loopne
ds
stos
xor
xor
loopne
dec
or
pop
dec
mov
movsb
mov
sub
sti
jno
rcll
ja
mov
mov
les
push
shll
fsubrp
mov
pop
fmuls
pop
cmp
jo
lret
and
push
cmp
push
lock
sub
adc
pop
sbb
jae
mov
pop
in
push
inc
inc
test
mov
adc
int
push
xor
jnp
enter
sbb
mov
xor
inc
pop
sub
jecxz
xchg
xor
loopne
adc
add
fists
movb
add
popa
mov
sub
insl
iret
arpl
mov
jecxz
inc
arpl
fistps
sub
insb
jge
into
inc
or
mov
adc
jecxz
fistpll
stos
loop
mov
sub
jae
ljmp
ljmp
and
fsubrl
dec
sub
int3
pusha
add
fs
out
scas
iret
inc
movsb
sbb
insb
push
int
mov
xor
adc
mov
in
cmovo
aad
mov
xchg
ja
fnsave
insl
xchg
test
jle
data16
cmp
xor
pushf
roll
add
and
mov
pusha
and
push
mov
mov
test
mov
stos
mov
dec
insb
idivl
inc
sbb
stc
sbb
cmp
push
jo
movsb
fbld
mov
out
dec
mov
jmp
cmp
dec
jnp
push
aas
cwtl
fcompl
and
les
adc
lods
xchg
imul
pop
jne
mov
pop
inc
xchg
pop
mov
dec
enter
leave
popf
mov
lea
jmp
shll
fisubrs
jg
cmp
inc
scas
and
in
scas
dec
stos
xor
mov
jle
ds
ljmp
and
sbb
xor
stc
in
negl
rclb
and
mov
xchg
loope
in
and
or
or
stos
push
inc
popf
adc
mov
stos
arpl
cmp
mov
loopne
jmp
dec
push
sub
jae
xor
sbb
and
sbb
aaa
push
or
cmpsl
out
pop
mov
rolb
bound
mov
fbld
insl
jg
pop
jp
xchg
das
xor
or
jnp
leave
lds
stc
sbb
add
addr16
inc
nop
loopne
frstor
jmp
xchg
fisubl
mov
int
call
je
push
xor
sbb
push
cli
mov
loope
fs
adc
sub
cmpsl
test
fstl
mov
xchg
inc
dec
inc
dec
or
push
test
pop
in
scas
adc
push
adcb
push
xchg
xchg
or
in
sti
subl
push
pop
dec
adc
push
out
xor
pop
xchg
popf
fsts
mov
ja
clc
add
bound
and
push
mov
add
sub
clc
mov
icebp
test
jmp
int3
mov
in
sub
mov
mov
sbb
pop
or
imul
jecxz
lret
mov
stos
dec
push
test
inc
fwait
leave
aad
pop
loop
sbb
inc
lret
dec
in
and
in
lock
sar
inc
push
leave
mov
and
dec
aam
push
lcall
cmpsl
loopne
jmp
lea
clc
adc
mov
inc
mov
test
imul
icebp
addr16
je
xchg
cmp
loope
jae
jmp
out
xor
rcrb
add
adc
inc
js
stc
pop
pop
nop
mov
jae
jle
shrb
js
inc
imull
sti
xchg
inc
jo
and
dec
push
or
fwait
enter
outsl
push
mov
je
loop
push
pop
lock
loop
test
in
pop
aas
faddl
mov
out
mov
clc
push
rorb
leave
cmp
ja
scas
divb
adc
outsl
and
sbb
ja
jmp
dec
or
push
jge
cs
cmpsb
adc
inc
jmp
mov
push
ficoml
jg
mov
and
lods
mov
lcall
test
xchg
mov
test
loop
in
aam
dec
andb
pop
mov
jecxz
pop
popf
out
mov
popf
aad
push
push
cmpsb
ljmp
enter
fst
mov
sbb
xrelease
es
aad
idivl
jl
in
or
xchg
pop
subb
xor
or
pop
loopne
cld
mov
add
inc
inc
cmc
add
mov
std
lcall
jbe
movsb
inc
aaa
loopne
jl
push
cld
adc
sbb
xorl
xchg
sub
mov
jg
push
sahf
adc
push
jg
lock
imul
pop
loop
les
dec
fildl
mov
inc
sub
push
repz
pop
insl
sub
lock
scas
shll
pop
push
inc
push
push
jo
popf
imul
lret
mov
mov
xor
ret
inc
push
mov
stos
pop
xchg
dec
out
popf
jl
push
shlb
call
sbb
sbb
jo
xchg
in
xchg
rcrl
pushl
lret
cmp
mov
pop
sbb
xor
mov
adcb
loopne
mov
xlat
sub
popf
pop
or
outsb
inc
push
sub
es
insb
paddd
sar
icebp
pop
scas
lods
dec
int3
daa
adc
shll
ljmp
or
and
push
push
cmp
pushl
lock
stos
pushf
xlat
pop
and
mov
jg
insb
xor
lods
jb
pop
inc
jbe
pusha
sbb
xchg
xchg
lahf
xchg
mov
add
dec
pushf
sbb
mov
sahf
bound
jmp
add
jo
nop
repz
mov
jge
and
popf
add
bound
mov
lret
sbb
mov
pop
lds
lds
dec
icebp
xchg
shll
mov
push
push
inc
in
mov
rorl
adc
orl
inc
and
lret
or
xor
shrl
imul
in
sub
hlt
or
fadd
lds
jecxz
sbb
or
push
dec
xor
ret
insb
sti
or
je
push
adc
out
out
pop
dec
jmp
cbtw
dec
mov
mov
in
clc
pop
sub
gs
pop
xor
test
cmpsb
in
pop
pusha
fnstcw
dec
xor
popa
mov
fldl2t
cltd
cli
in
sarb
out
mov
addr16
mov
mov
hlt
cld
shrl
adcb
fisubs
imul
insl
popl
stos
and
shr
mov
jle
pushl
subl
xchg
rol
cwtl
int3
icebp
xchg
dec
sbb
add
shll
pop
add
imul
popl
add
lock
cmp
mov
mov
aad
dec
lret
jp
ja
mov
lahf
adc
fs
imul
and
ss
dec
adc
lahf
mov
pop
dec
xchg
mov
xor
jecxz
and
scas
push
pop
mov
and
idivl
and
push
or
xchg
mov
iret
cld
imull
popf
ss
dec
nop
mov
ret
push
mov
mov
pusha
push
mov
jg
fwait
mov
pop
mov
fsubs
adc
fnstcw
test
or
js
imul
push
cmp
std
xor
outsb
pushf
ljmp
sbb
rclb
hlt
push
mov
int3
mov
xchg
push
in
aam
inc
out
scas
push
neg
sbb
in
push
add
push
aaa
fbstp
dec
add
in
sub
sub
inc
cmpsl
mov
or
push
loopne
pavgw
and
xlat
xchg
pop
mov
popf
jg
fcompl
repz
mov
pop
sbbb
and
mov
mov
jne
loopne
repnz
mov
pop
pop
cmp
cmp
xchg
push
mov
mov
pop
pop
pushf
mov
push
mov
repz
pop
xchg
scas
add
fwait
jne
lock
dec
mov
pop
or
mov
fdivrs
xchg
pop
pushf
mov
je
adc
cmp
movsl
iret
jmp
inc
adc
int3
test
cmpsb
lea
repz
xchg
inc
loop
push
ja
inc
jmp
push
mov
jb
jno
mov
xorb
mov
cmp
fnsave
mov
pop
fsubr
dec
xchg
cmpl
inc
jns
mov
xor
or
lret
sahf
stos
rclb
sbb
pusha
aam
ret
mov
mov
pop
pushl
adc
or
lret
stos
aaa
xchg
jp
call
push
orl
sti
cwtl
testb
mov
xor
out
imul
push
and
jge
and
fldenv
push
mov
mov
sub
outsl
stc
lods
sub
aas
cmp
stos
popa
test
lods
cmp
push
dec
mov
mov
in
jae
xor
lahf
or
jp
and
pop
je
adc
addr16
popa
xor
mov
inc
int
mov
mov
mov
mov
orb
loope
lods
shll
adc
push
jae
sbb
add
push
in
fimuls
subl
xlat
mov
popa
dec
push
sbb
jg
ljmp
ds
xor
xchg
add
and
lcall
push
jno
pop
add
shll
fsubrs
xchg
sti
push
ja
add
sub
gs
gs
or
lock
dec
ret
mov
popf
psubd
cmp
mov
cmp
push
pop
push
fistpl
js
sub
jno
mov
repnz
cmp
enter
pop
fdivl
dec
mov
push
adc
out
scas
int
mov
aaa
jmp
js
aad
adc
in
loop
mov
cmp
das
imul
movl
push
mov
pop
and
out
adc
adc
fdivs
data16
pop
into
aad
mov
mov
pop
mov
push
inc
mov
add
insb
ja
mov
mov
mov
test
adc
xchg
js
sub
fcmovb
inc
arpl
js
xchg
mov
clc
add
outsb
add
push
rorl
jmp
xor
jge
iret
enter
and
jb
push
inc
jnp
xchg
or
mov
add
jecxz
subb
pop
popa
sbb
fs
and
movsb
mov
pop
test
adc
cmp
stos
dec
loop
lret
push
push
pop
push
out
stc
repz
addr16
in
filds
data16
test
and
pop
pop
test
out
push
push
xchg
outsb
mov
loope
rcrb
sahf
jle
cmp
pusha
push
dec
push
push
roll
ficompl
xlat
adcb
inc
cmpsl
cmp
or
aam
movb
les
decl
push
mov
mov
lds
out
mov
xchg
sub
mov
cltd
lret
aam
inc
fwait
push
mov
int
lods
shrl
sub
pop
das
xor
adc
adc
mov
insl
or
aas
and
or
xor
mov
xor
cmpsb
mov
fiaddl
add
movsl
sub
mov
in
sbb
jg
sbb
cld
sub
pop
push
jno
iret
mov
cmc
push
cmpsl
push
icebp
sub
fbld
mov
test
pop
xor
in
movsl
or
inc
pop
xchg
div
adc
adc
jg
shrl
or
popf
pusha
mov
insb
lcall
jne
xchg
adc
cmp
push
pop
push
fldt
repnz
gs
lcall
inc
shr
xor
je
mov
cmpl
mov
push
sub
inc
mov
push
add
cmpsb
add
adc
hlt
inc
addr16
es
cmp
jmp
roll
outsl
je
fstps
aad
xor
pop
pop
mov
adc
ljmp
dec
test
push
test
inc
test
xor
mov
cmc
xchg
xchg
mov
push
hlt
mov
mov
stc
sbb
push
pop
sbb
adc
into
adc
dec
jecxz
inc
repnz
and
hlt
loope
inc
cmpl
call
jmp
jge
xor
push
mov
sub
shlb
clc
shr
mov
repnz
bound
popa
jecxz
lods
jbe
push
xor
scas
aaa
mov
xchg
pop
sarl
mov
mov
dec
test
push
jno
ret
and
lret
cltd
fs
mov
adc
xor
loopne
jo
or
cmp
mov
cmp
add
lods
jae
xor
sub
add
mov
mov
imul
adc
pop
sbb
jnp
pop
push
orl
fisttpl
jne
mov
outsl
loopne
mov
adc
xchg
add
stos
in
sub
pushf
xchg
mov
mov
adc
jnp
bswap
clc
adc
out
hlt
clc
popa
out
lret
xor
dec
pop
arpl
clc
pop
cmpsb
pushl
jne
ret
or
fcoms
ja
imul
xchg
out
and
jge
testb
gs
cmc
mov
daa
sbb
and
sahf
xor
nop
and
dec
mov
je
cmp
xchg
out
fidivl
or
pop
loop
pop
pop
imul
and
cltd
cmp
adc
push
or
cs
sub
out
fcmovnb
jo
enter
decb
dec
test
jae
mov
fcomps
or
push
xchg
js
or
mov
sarb
and
mov
insb
xchg
fidivrl
aaa
cmp
loope
fs
sbb
mov
fldl
or
pushf
sbb
out
adc
test
jecxz
xor
pusha
das
arpl
cmp
sbb
mov
out
mov
lea
enter
add
popf
test
xor
jno
mov
push
xchg
cmp
jle
iret
lods
jp
js
push
lahf
in
in
mov
ret
xchg
adc
ret
je
in
xchg
cmp
xchg
add
mov
xchg
stos
add
imul
sbb
sbb
push
fsts
cs
shll
xor
adc
sbb
out
ds
sbb
jg
faddl
cmpsb
test
jl
xor
rcr
test
sbb
xchg
and
cmp
mov
std
faddp
xchg
or
lods
cli
push
pop
popf
cmc
ja
stc
and
inc
inc
rorl
mov
xor
pop
inc
mov
push
movsb
ja
stos
adc
out
dec
repnz
cwtl
out
out
fadds
imul
inc
movsl
subb
aaa
sarl
dec
enter
xchg
jp
aas
mov
jae
or
imul
inc
xchg
xchg
cmp
notl
xor
pop
js
loop
test
repnz
pop
xor
mov
les
je
cld
xor
xor
ja
inc
mov
outsl
sbb
stos
rcll
cmp
mov
in
push
gs
xchg
push
mov
push
fld
shlb
inc
cmp
xor
test
ret
mov
adc
cwtl
xor
jecxz
addb
lcall
fildl
xlat
xchg
xchg
or
test
cli
cmp
cmc
add
mov
sub
mov
jecxz
mov
outsl
mov
cmp
gs
mov
dec
mov
push
subb
mov
sbbl
jmp
dec
sub
lcall
pop
push
adc
incb
es
mov
movsl
inc
es
mov
and
shrb
lods
pop
rclb
xor
decb
fdivrl
fmuls
inc
mov
push
movsb
xorl
jg
pop
pop
sbb
cmp
mov
mov
pinsrw
out
out
xor
add
jb
dec
push
sub
ljmp
pop
bound
pop
rcrb
int
scas
mov
and
xor
loope
arpl
popa
mov
stc
scas
dec
add
out
stc
sbb
ret
pop
dec
notl
ljmp
les
ret
mov
fcmovne
rcll
in
add
mov
pop
jle
push
ds
xor
inc
inc
ds
lret
fstl
rcrb
fadd
push
cwtl
cmpsb
stos
mov
imull
cmp
insb
sbb
push
pop
out
add
fsubrl
ret
and
js
sbb
or
and
hlt
shlb
stos
mov
cwtl
push
xor
repnz
sbb
clc
cli
shlb
movsb
add
sub
xor
jb
cwtl
outsb
insl
rorb
fs
xor
push
adc
lea
dec
add
adc
std
cmpl
add
test
lods
das
adc
and
sbb
loop
test
sub
pop
in
loope
push
mov
add
into
xchg
and
pop
in
lods
xchg
stos
insl
mov
aam
cmpsl
loop
mov
mov
fnsave
jns
mov
sbb
and
xchg
leave
fwait
loope
fs
sahf
mov
cmp
mov
mov
out
ret
pusha
inc
push
pop
idiv
daa
push
daa
adc
cmp
das
sbb
xchg
into
or
ret
and
mov
inc
lahf
les
rcll
xor
loope
mov
mov
xor
cmp
mov
push
insb
stos
mov
cli
mov
fsubl
inc
sub
push
mov
clc
push
xor
xrelease
movsb
lret
dec
jbe
fs
sub
mov
insl
imulb
cld
mov
negb
ret
mov
das
xchg
mov
push
sbb
xchg
popf
dec
mov
popa
jnp
icebp
add
dec
fsts
mov
in
jge
bound
imul
jmp
pop
stos
jl
jecxz
mov
cmp
sub
push
outsb
dec
mov
subl
mov
adc
daa
add
mov
xchg
xchg
clc
fwait
pop
hlt
cmp
push
je
outsb
xchg
arpl
hlt
push
out
mov
xor
add
xchg
fcomi
sub
inc
jo
pop
mov
in
or
fildl
lret
adc
dec
pushf
scas
or
movsb
ret
and
lret
jmp
loopne
outsl
jp
lods
adcl
pop
mov
xchg
popa
repnz
sti
aas
push
fdivrp
xor
pop
aas
sbb
sub
jmp
xchg
dec
jmp
dec
add
xor
in
cmpl
outsl
push
cmp
or
adc
mov
pop
push
dec
insl
cli
sbb
imul
mov
xor
aaa
mov
mov
fsts
in
out
sti
ja
lods
dec
sbb
push
addr16
mov
lret
xchg
mov
adc
icebp
movb
ret
jne
jmp
pop
push
aaa
dec
adc
push
lods
xor
add
and
pop
fiadds
lods
lods
jnp
decb
ret
stc
not
lcall
out
jecxz
xchg
or
neg
lcall
dec
push
dec
shrb
add
lea
or
lret
aas
pushf
test
pusha
jnp
push
adc
xor
pop
in
pop
stos
sti
fs
push
and
dec
cmp
add
mov
jecxz
int3
mov
sub
and
out
dec
in
sbb
mov
adc
ss
sub
mov
mov
lods
ror
sar
addr16
mov
int3
leave
imulb
into
xorl
mov
test
fiadds
fnstcw
add
arpl
push
inc
jmp
adc
push
loopne
cwtl
cld
sub
call
xchg
in
and
std
jb
pop
pushf
cmp
gs
xor
sub
lods
push
sbb
sbb
pop
movsl
icebp
test
pop
mov
inc
cmp
dec
cmp
or
sbb
iret
aaa
ljmp
or
or
adc
push
xchg
dec
jnp
stos
mov
adc
roll
inc
aas
rcr
mov
scas
xchg
std
inc
lock
mov
fdiv
insl
imul
dec
mov
pop
mov
adc
dec
and
mov
inc
push
in
push
out
jnp
push
inc
sub
insb
xchg
test
xor
clc
mov
mov
mov
lods
mov
xchg
cmp
clc
dec
add
or
sub
into
or
xlat
popa
cmp
test
adc
or
push
sbb
shlb
and
stc
enter
jmp
sub
and
repz
pop
sbb
adc
std
cwtl
mov
dec
inc
ja
pop
daa
lahf
jbe
in
ljmp
fiadds
pop
or
mov
lods
push
inc
clc
pop
cs
sahf
xor
loop
imul
push
fisubrl
jo
insl
loop
push
dec
jns
mov
pusha
and
jmp
xchg
aam
dec
cmp
and
loop
les
xlat
dec
mov
dec
xchg
add
nop
jge
dec
rclw
ja
dec
das
aad
das
and
lret
dec
push
pop
mov
cs
xor
adc
mov
sub
jmp
adc
cwtl
call
dec
inc
xchg
xor
xor
mov
fildl
loopne
popf
mov
jae
mov
fistl
outsb
sub
iret
cmpsl
lcall
or
cwtl
fidivs
xchg
inc
xlat
hlt
sbb
cltd
repnz
adc
ret
aas
mov
mov
cmpsb
cmpl
mov
jmp
dec
or
vmovsldup
shrb
out
xchg
cmp
mov
add
adc
loop
xlat
inc
dec
outsl
lret
es
leave
mov
sub
mov
mov
push
pop
sub
xchg
jg
movsl
sbb
adc
mov
or
mov
or
cmp
pop
in
cli
mul
mov
inc
cmc
pop
push
sbb
outsb
or
xor
fcmovbe
pop
les
xchg
dec
jo
in
inc
inc
inc
jl
adc
int3
lahf
in
popf
scas
in
in
enter
pop
cwtl
jo
pop
imul
pop
clc
insb
in
inc
addr16
outsb
inc
and
fs
or
and
bound
out
ds
or
fildll
jmp
pop
inc
adc
adc
push
inc
cmp
mov
aad
fidivl
push
add
mov
or
pop
fmull
sti
sarl
jo
pushf
les
push
lods
inc
lahf
scas
cmc
mov
jp
add
push
cmp
inc
push
jne
xchg
into
jae
xchg
add
xor
sub
xor
popa
gs
or
xchg
dec
jge
sbb
and
rorb
pop
popa
fs
mov
outsb
push
insb
fs
les
dec
inc
or
or
xor
cltd
mov
pop
popf
cmp
scas
pop
cs
fdivl
xchg
sbb
add
add
pushf
jmp
sahf
es
cmp
fldcw
push
test
and
sub
psadbw
mov
cmp
push
pop
outsl
lds
add
fs
repz
movsl
test
js
dec
hlt
push
jnp
xchg
outsb
and
test
add
push
mov
andl
dec
and
push
fidivl
adc
and
dec
sbb
je
and
clc
loop
xchg
mov
sub
roll
adc
or
js
repz
add
jl
lahf
scas
or
lds
lret
sub
push
sbb
icebp
jnp
mov
arpl
mov
xchg
mov
pop
lcall
xor
mov
cmpsl
test
xor
sarb
jne
aam
idivl
std
js
in
popf
cmp
out
inc
inc
jbe
fdivrs
loopne
mov
inc
jecxz
bound
sbb
into
sub
out
xchg
sbb
negb
pop
scas
in
or
and
push
popa
push
inc
xchg
test
inc
cwtl
outsl
mov
pop
call
test
aad
dec
mov
das
and
test
dec
outsl
push
or
enter
mov
pop
icebp
ss
jle
mov
push
or
dec
insb
loopne
cmc
sahf
xor
popa
fimull
fistpll
aad
pop
mov
lahf
out
xor
clc
mov
stos
inc
jbe
add
or
adc
xchg
pop
or
xchg
xchg
and
cmp
movd
bound
jg
jl
cmpb
xchg
jne
movsl
imulb
loope
jle
jge
and
outsl
inc
call
aas
mov
cld
mov
in
push
inc
fwait
push
cmp
lret
scas
mov
inc
das
out
mov
add
pop
add
daa
aam
inc
int3
or
xchg
cltd
mov
out
push
jl
sub
pushl
cmp
xor
inc
mov
pop
adc
imul
sar
pop
add
mov
ficomps
mul
sub
shrl
mov
popa
push
or
push
mov
xchg
xchg
int3
out
ljmp
lds
jae
xchg
fwait
add
mov
in
dec
mov
jmp
mov
pushf
int
jne
push
jle
inc
pop
pop
jp
xor
imul
sbb
outsb
hlt
dec
or
pop
pop
enter
mov
sbb
xchg
mov
lea
out
push
cld
std
xchg
and
push
cmpsl
xor
nop
jne
adc
call
popf
and
add
xlat
mov
loope
fwait
in
adc
out
inc
in
movsb
adc
dec
std
nop
aas
stc
mov
pop
incl
cmp
xor
pop
jae
int3
xor
js
subl
xor
das
stos
adc
mov
aas
mov
lock
test
sbb
out
fst
ret
mov
aas
cmp
das
add
or
push
jae
pop
mov
into
jg
fcmovbe
mov
lds
lea
jl
in
mov
test
sub
rclb
or
ja
scas
xchg
mov
test
xor
pop
cmpsl
mov
sbb
jae
dec
daa
out
xchg
jmp
nop
fstl
lds
nop
mov
push
mov
icebp
fst
xchg
inc
push
mov
fadd
or
bound
xor
mov
push
sbb
cli
out
aas
dec
rcrb
or
adc
sub
movsl
dec
jl
xchg
sbb
and
fists
in
lea
fs
cltd
xor
cld
ja
lds
mov
sub
cmpsl
adc
cmp
cmc
js
jg
xlat
call
jmp
cwtl
jl
fdivs
call
sub
out
xchg
pop
mov
and
xor
aas
add
ret
mov
adc
or
mov
jbe
insb
or
pop
fwait
ror
xor
lock
fst
fisttpll
or
xchg
mov
popf
repnz
loope
subl
inc
adc
xor
out
push
mov
adc
scas
and
loope
sub
pop
cmpsl
mov
push
bound
cwtl
imul
mov
mov
and
cs
xchg
mov
arpl
jne
pop
mov
push
popf
pop
enter
sbb
push
rcr
push
inc
fucomip
jo
cmpl
xchg
or
cmc
inc
test
push
stos
inc
imul
and
sub
adc
and
data16
stos
xchg
fcom
mov
jae
mov
cmp
andb
inc
push
jecxz
shlb
rcll
or
and
imul
lcall
jbe
mov
es
inc
jns
mov
xchg
mov
nop
call
bound
sbb
loopne
cmp
and
fmuls
cs
sbb
jo
mov
les
imul
call
dec
push
mov
fmull
rorb
lea
cmp
mov
repz
mov
stos
adc
pop
push
mov
xchg
in
add
xchg
cmp
xchg
inc
xchg
xchg
adc
pop
mov
xor
xchg
pop
inc
inc
cltd
lods
mov
cmp
mov
or
mul
xor
aam
mov
xchg
cltd
fmulp
cmp
adc
adc
mov
sbb
lods
push
or
cmp
jo
jle
add
sub
add
xchg
dec
mov
mov
lock
mov
dec
mov
aas
adc
mov
ret
jbe
add
das
bound
cmp
cmpb
xchg
shlb
js
aas
in
pop
pop
mov
xor
loop
cmp
xchg
add
xchg
adc
setb
out
es
and
lahf
dec
adc
mov
addb
in
mov
mov
adc
aas
ficompl
das
mov
push
lcall
cmc
sub
outsl
xchg
sbb
std
lahf
lock
or
lahf
mov
pop
dec
lea
shlb
inc
or
push
ljmp
ja
addr16
fwait
jne
inc
cmp
pop
xchg
push
aam
jae
cli
aam
outsl
inc
test
xor
ja
push
inc
sbb
add
push
lds
or
call
sbb
shrb
pop
mov
lahf
pop
jns
adc
scas
sbb
xchg
mov
pop
dec
inc
sbb
lods
nop
adc
mov
test
or
pop
int
mov
nop
outsb
stos
popa
add
inc
and
or
adc
out
sub
cmp
adc
and
or
lods
out
loop
repz
popf
pusha
sbb
pushf
out
pushf
jnp
adc
fldcw
in
add
fsubrs
daa
out
ficomps
sub
shrl
mov
lods
aaa
insl
jp
loop
xchg
dec
mov
adcb
icebp
lods
jmp
stos
adc
or
adcl
rcrl
push
sub
or
add
lret
xchg
jns
aam
sbb
sub
push
xchg
int
push
andl
dec
in
lods
sbb
bound
or
outsl
xchg
mov
jle
adc
cmc
loop
mov
scas
mov
jmp
test
pop
or
and
fwait
and
clc
or
cmp
stos
and
adc
in
xor
xor
ret
jnp
pop
jl
in
mov
das
cli
imul
lcall
inc
hlt
mov
in
pop
js
jp
mov
pop
test
sub
dec
mov
arpl
lock
sbb
push
sahf
lea
jo
inc
jb
cli
aas
ljmp
pop
ss
arpl
rolb
stos
or
aaa
out
push
xchg
mov
and
stos
jns
outsl
outsb
in
stc
mov
cmp
jp
sub
outsl
addr16
out
test
jo
push
inc
ja
cmp
mov
test
pop
pop
lods
mov
fcmove
mov
stos
cmp
loope
xchg
loop
fadds
iret
xorb
mov
sub
xchg
lea
ds
into
push
das
inc
mov
jge
fsubs
ror
repnz
shll
sub
xchg
enter
stc
add
stos
das
push
out
pop
dec
or
dec
lret
mov
jns
into
or
loope
mov
out
push
imulb
fs
pop
shll
jmp
mov
fucomip
cli
jecxz
mov
repz
cmp
dec
mov
mov
negl
lds
xor
pop
xor
xchg
push
mov
aaa
push
mov
movsl
stc
sub
cld
mov
shrl
inc
mov
push
cmp
cwtl
mov
mov
and
pop
cmp
je
out
jecxz
xchg
add
inc
dec
sub
sbb
inc
ret
mov
daa
dec
andl
mov
xor
call
ljmp
addb
scas
lods
fs
icebp
sar
arpl
add
in
cmp
mov
add
pop
cmp
xchg
mov
sub
jg
call
or
int
test
lods
xor
jb
xor
jnp
push
in
sbb
or
mov
mov
out
loope
mov
xchg
push
mov
cmp
cwtl
movsl
ss
cmp
mov
inc
orl
jnp
adc
cld
ror
push
mov
pop
inc
lea
mov
enter
mov
xchg
cmp
leave
inc
daa
negl
cmp
fwait
lock
imul
jnp
cli
xor
incl
hlt
ds
xchg
or
push
cmp
cmp
mov
negl
xor
sub
cmc
lret
cwtl
mov
jnp
pop
out
pop
shlb
jge
popf
pop
jmp
orb
gs
xchg
repnz
sub
mov
or
test
adc
mov
xor
ds
add
addl
shrl
scas
stos
imul
lods
dec
mov
repnz
or
mov
jg
pop
paddb
testl
lcall
mov
jp
adcl
rolb
sub
ljmp
jmp
xchg
pop
repz
test
jecxz
xchg
adc
leave
push
mov
mov
or
or
cmp
mov
cmp
in
or
jne
rcll
call
repz
fdivr
aas
push
mov
jge
dec
lods
pop
ret
xchg
add
iret
or
adc
cmp
lea
lods
out
rcl
hlt
dec
insb
jp
jp
movsb
cmp
pop
addb
rorl
incl
adc
mov
fiaddl
mov
push
sub
bound
idivl
fldl
arpl
mov
test
adc
out
in
add
cmp
mov
sub
shrb
pusha
in
pop
sarb
fcomps
bound
and
dec
pop
fadds
repz
pop
in
adc
add
rcll
sbb
in
adc
shl
xchg
out
lock
aaa
and
flds
mov
punpckhdq
paddusw
inc
stos
shlb
stos
insl
and
jae
enter
stos
fwait
mov
xor
shlb
sub
mov
scas
stos
mov
add
jbe
mov
push
mov
push
int3
jnp
daa
shrl
in
cld
pop
xchg
cmp
cltd
test
jp
push
sti
fstp
nop
pop
fldl
scas
insl
jp
or
adc
sub
mov
lds
lret
dec
clc
in
test
gs
jno
push
clc
lret
pop
add
and
shll
and
dec
iret
fsubl
ret
orb
push
pop
lret
pop
das
in
adc
es
mov
sbb
cmpsl
mov
loope
xchg
daa
xchg
sub
cmp
sbb
lods
inc
add
pop
dec
repz
cmp
jbe
movsb
mov
pop
aam
fdivr
repnz
addr16
xor
jbe
or
cltd
xchg
shlb
jge
or
push
loope
test
insb
jno
lea
fisttpll
insl
mov
and
in
push
mov
stos
mov
xor
or
mov
mov
adc
mov
clc
shrl
xchg
cmpl
test
push
fisubl
loop
cmp
jl
xor
mov
pop
sub
mov
sbb
daa
into
pusha
nop
popa
test
sarb
cmpl
dec
push
enter
in
fadds
lods
std
cs
aad
push
pop
push
jo
lock
pop
xor
pop
mov
sub
loope
cld
repz
xchg
mov
cltd
push
in
loope
jo
and
push
lods
push
pop
push
jae
mov
scas
add
lds
inc
cmpsb
ret
and
add
dec
sbb
jne
and
in
pop
mov
xor
pop
aam
dec
add
lcall
ret
push
pop
push
sbb
sub
fcompl
inc
mov
movsl
test
fst
and
int
pop
add
and
aas
jne
out
sbb
das
popa
je
push
rcr
or
fucomp
mov
mov
fidivrl
mov
push
shll
in
jne
js
pop
push
dec
into
rorb
enter
int3
sarb
xor
xchg
jns
mov
jb
push
mov
add
daa
mov
nop
in
push
sub
or
jecxz
pop
lea
xor
insb
fnstcw
test
pop
mov
push
js
negb
jno
sbb
imul
loopne
cmp
mov
cmpsl
cmpsb
inc
and
mov
or
test
mov
push
sub
mov
mov
in
mov
push
das
sub
ljmp
mov
outsb
xchg
mov
pop
inc
or
daa
mov
lods
iret
add
pop
mov
lahf
pop
xchg
sbb
xor
mov
mov
jp
sbb
mov
mov
jp
adc
jg
int
and
testb
push
int
sarb
adc
inc
cmpsl
out
xchg
xchg
pop
testb
test
push
pusha
mov
aas
or
jnp
nop
or
mov
cmp
dec
leave
sahf
xchg
addr16
cs
or
sti
cmpsl
cltd
adc
lahf
mov
xchg
enter
mov
int
enter
imul
jno
arpl
arpl
mov
lcall
into
sbb
sbb
adc
sub
inc
sbb
lahf
push
dec
in
ds
lock
shlb
mov
ret
in
out
lea
mov
xor
and
int
sub
xchg
mov
cs
pushf
cmp
nop
stc
xor
xrelease
add
inc
push
mov
daa
ss
mov
bnd
repz
sub
ss
nop
cmpsl
xchg
in
cmp
or
mov
push
lret
push
in
or
daa
out
imul
sub
mov
je
popa
inc
mov
stos
loop
std
lds
xor
pop
gs
sbb
push
and
jno
int3
lcall
cmc
adc
dec
sub
inc
xor
lcall
or
pop
std
inc
loope
dec
addr16
sub
or
sub
pop
xorb
sbb
inc
aaa
lret
es
outsb
cmp
sub
fidivl
fisubs
leave
sub
hlt
inc
jecxz
in
imul
and
jge
enter
in
sub
cmp
stos
js
in
add
mov
incl
mov
orl
movsb
fistpl
pop
ss
or
push
sti
in
popa
imul
cmc
push
dec
adc
mov
cmp
xchg
inc
loopne
xchg
repnz
cwtl
in
in
add
cmp
push
aas
fwait
pop
test
mov
jbe
int3
sub
sbb
lock
dec
inc
mov
scas
sbb
xor
rol
popa
in
xchg
hlt
daa
jecxz
mov
jmp
aad
mov
mov
rcl
rcll
inc
out
xchg
data16
call
push
pop
leave
sbb
inc
xchg
test
stos
icebp
shll
ja
mov
cmp
xchg
add
pop
jle
adc
fsubrs
leave
sub
xor
sub
adc
adc
fstpt
sub
sti
cmp
negb
aas
and
jl
fs
into
call
movsl
sbb
cwtl
addl
lcall
dec
loope
js
fwait
call
fistpll
mov
hlt
sbb
jl
add
loope
mov
int3
xlat
rcl
or
xor
push
jl
subb
subl
jo
sbb
pop
dec
mov
adc
fs
xchg
mov
lods
sbb
rcrw
pusha
rcl
in
push
sbb
add
and
cmp
push
repz
hlt
sbb
dec
mov
push
xchg
fs
or
cmc
in
push
push
pop
or
pop
jns
jl
adc
pop
push
pop
adc
mov
scas
jae
dec
mov
jns
mov
inc
popf
mov
scas
adc
sti
shl
pop
decl
push
loope
movsb
sbb
ret
mov
adc
mov
sbb
out
mov
xchg
stc
adc
notb
cmp
sbb
add
stos
inc
jno
jle
jo
cmp
pusha
xor
inc
lods
cmp
inc
test
cmp
mov
jmp
loopne
aaa
ret
and
xchg
ss
jo
mov
fnsave
jb
icebp
dec
jle
lret
cwtl
mov
pop
les
imul
inc
xor
xchg
sti
inc
push
push
subl
fsubl
je
int3
sub
pop
sub
push
inc
lahf
fcoms
inc
js
test
das
cmpsb
jae
pop
jnp
mov
std
lds
cmp
adc
xchg
xchg
push
in
sti
call
lahf
inc
pop
in
add
cmc
push
xchg
adc
or
sbb
dec
loope
ds
movsl
fiaddl
push
push
sbb
xor
push
mov
jo
jne
add
fs
cmp
pop
iret
mov
jle
mov
sub
mov
loope
dec
gs
dec
fisttps
and
cmp
mov
dec
in
pop
mov
scas
mov
outsl
js
add
stc
adc
mov
in
imull
fsubrl
push
cmp
xor
in
push
and
xchg
pop
xchg
insb
sbb
in
pop
mov
jns
sarl
dec
or
pop
fs
adc
sbb
test
addr16
jle
jns
mov
fnsave
add
xor
nop
mov
jb
pop
add
movsl
push
dec
mov
pusha
cwtl
dec
sahf
mov
ret
xor
test
mov
fdivrl
push
xchg
jmp
jbe
pop
divl
lods
data16
insl
jnp
pushf
and
cli
pop
jnp
cmp
inc
shr
and
or
rcll
push
add
test
rcrl
sub
xchg
sbb
jmp
sbbb
mov
push
les
push
jne
mov
xchg
sbb
lods
push
and
mov
xchg
mov
pushf
jnp
adc
xchg
xor
xor
jle
stc
lods
mov
pop
inc
stos
sub
stos
xchg
cltd
mov
or
cmpsl
mov
fistl
in
outsl
push
dec
insl
mov
imul
les
push
ret
insl
fcmove
jbe
xchg
xchg
dec
mov
movsb
imul
js
jmp
cltd
ret
lock
push
rcrb
cmp
adc
mov
adc
xor
pushf
mov
je
or
ljmp
out
inc
insl
cmp
out
xchg
mov
outsl
cmp
xor
jp
push
dec
mov
pop
cmc
adc
adc
sbb
mov
xchg
sub
xor
and
orl
int
sub
sar
xchg
cmp
inc
pop
mov
es
mov
pop
xor
movsl
aad
out
push
cmc
adc
dec
jb
xor
loope
inc
shrl
jle
or
scas
inc
in
outsb
loope
jno
lret
cli
sbb
sbb
pushf
repz
jl
fcomi
jb
or
cmp
aas
add
push
xorl
cmp
or
jo
and
add
lahf
popa
xor
push
aad
mulb
xor
jle
and
test
addr16
les
repnz
mov
mov
mov
jns
dec
mov
scas
pushf
jmp
cltd
or
les
and
sbb
pop
mov
data16
push
in
push
xor
jmp
mov
xlat
push
jns
je
jbe
mov
daa
test
out
cmp
sub
loopne
fldenv
imul
les
cmp
lock
inc
shlb
dec
ljmp
push
lahf
xor
bound
cmpsl
idivb
dec
lods
and
orl
mov
xchg
push
je
mov
add
daa
adc
mov
add
xchg
xor
add
loop
xor
sbb
mov
inc
cs
hlt
inc
pand
jecxz
xchg
test
inc
adcb
push
adc
mov
sub
int3
inc
aad
xor
mov
movsl
sbb
outsb
push
xor
mov
push
fstps
push
and
test
lock
sbb
jb
loopne
int3
xlat
scas
in
hlt
inc
pop
int
push
add
jmp
pusha
jno
and
pop
mov
mov
mov
insl
mov
mov
data16
aas
repz
lea
pusha
jb
push
cmp
xor
push
pop
xor
pop
mov
xchg
xchg
mov
adc
pop
enter
aad
mov
into
or
pop
cmpsb
mov
shlb
fs
xlat
jne
sahf
mov
jne
imulb
cmp
sbbb
aad
jne
inc
cmp
fcoml
test
add
xlat
mov
mov
add
cmc
dec
inc
xchg
mov
scas
or
push
push
jb
lock
inc
test
or
mov
incl
pop
in
in
call
fstpl
mov
inc
shl
jae
mov
lret
cli
leave
imul
jnp
push
repnz
insb
jno
cmpsl
push
loop
data16
and
outsl
push
and
mov
lds
iret
jg
stc
js
push
ret
in
call
cmpsb
cli
rorb
stc
out
jg
pop
lods
dec
cltd
sbb
fmull
scas
cmp
xor
std
xchg
ffree
outsb
aaa
adc
and
es
sbbl
das
pop
adc
push
repnz
jns
inc
and
ret
call
mov
inc
xchg
or
xlat
pop
scas
lret
dec
clc
arpl
mov
cmc
cmpsb
pop
ja
push
out
into
adc
jae
nop
pop
outsb
pop
ds
adc
ret
leave
outsl
scas
adc
lahf
lods
pop
sahf
push
mov
data16
ret
xchg
scas
cld
das
dec
xchg
movsb
in
mov
and
mov
lcall
test
std
je,pt
scas
arpl
jno
inc
mov
fidivl
push
adc
xchg
outsb
mov
add
sub
cmpsb
outsb
push
mov
mov
adcl
test
enter
jno
popf
movsl
jp
add
cs
push
stos
imul
sub
inc
push
outsl
fdivrp
xchg
pop
sbb
insl
push
sbb
jae
and
in
push
add
lcall
xchg
cmp
inc
xchg
sub
jbe
push
js
sahf
add
lcall
int
mov
push
pusha
add
dec
xchg
cmc
mov
sbb
xchg
sbb
mov
shrb
pusha
xor
js
pop
xor
and
mov
add
push
xor
outsb
mov
hlt
pop
fmull
fistps
inc
cmp
mov
xor
mov
mull
pop
xlat
or
cmp
sahf
xchg
ret
repz
icebp
mov
rclb
jmp
cli
data16
add
loop
cbtw
ret
dec
cmpsb
les
xorb
gs
mov
or
icebp
cs
outsl
xchg
cmp
fisubrs
outsb
lock
loop
adc
dec
bound
jl
xchg
adc
test
movsb
std
aad
aas
mov
sub
jp
loop
mov
testl
push
xor
sub
arpl
inc
jno
ljmp
int
stos
and
mov
xlat
retw
mov
push
repnz
sahf
ds
or
and
sahf
cmp
mov
pop
sbb
pop
stc
xor
cmp
cmp
and
jno
push
cmp
pop
in
aas
ret
xchg
adc
test
add
push
shl
adc
add
push
pusha
mov
cmp
cmp
xlat
jmp
gs
inc
add
and
and
and
dec
push
ja
adc
arpl
imulb
push
mov
dec
mov
cmp
fdivl
test
xchg
out
mov
jo
push
aas
lahf
int3
pop
cmc
fsubs
orl
insl
stos
pop
in
insl
outsl
sbb
mov
and
popf
popf
sti
inc
adc
jle
dec
pop
pop
in
in
mov
daa
pusha
cmp
adc
pushf
repnz
xor
imul
mov
rcrb
rcll
push
sub
testl
fdivs
mov
mov
clc
xchg
inc
sbb
mov
cmpl
jge
mov
repnz
sub
or
pop
xor
mov
je
mov
ret
cmp
notl
fstpl
repz
jecxz
cltd
fiadds
jae
pop
adc
add
lods
ret
iret
and
inc
std
outsl
test
lods
jge
xchg
ss
dec
sbb
mov
rclb
stos
sbbl
add
in
in
adc
subl
movsb
int
insb
rorl
or
jbe
inc
out
dec
xchg
popa
fwait
movsl
out
cld
mov
rcll
test
sbb
imul
lret
inc
or
cltd
mov
mov
push
mov
lods
ljmp
or
push
mov
dec
shr
lds
cmp
mov
pop
cmp
fadd
lea
jo
fcomps
cmc
mov
mov
test
jae
push
mov
stos
push
lock
in
mov
out
mov
dec
cltd
sbb
sti
testb
fistps
inc
addr16
popf
add
mov
sbb
dec
sbb
sub
enter
icebp
test
sub
or
sbb
sarl
ret
mov
or
jg
lods
mov
ret
push
aad
stc
decl
pop
lods
ror
mov
sub
or
mov
pop
mov
add
adc
fdivrs
test
mov
je
cmpsl
pusha
sub
or
xor
ds
pop
divl
ret
and
xchg
shlb
ds
fidivrl
jle
mov
int
sbb
bound
push
mov
inc
push
fldcw
rorb
xchg
repnz
xchg
call
jae
stos
cld
pop
test
mov
pop
cld
push
xchg
cmc
push
jp
sub
sbbl
sbb
adc
jge
jecxz
fidivs
push
add
pop
mov
sysexit
mov
pop
and
ret
sub
lods
jnp
jns
push
cmc
mov
repnz
test
loopne
sub
pop
repnz
cld
pop
push
jo
mov
fidivrs
mov
ret
dec
mov
sti
add
idivb
sbb
orb
aad
add
inc
rcll
mov
fucomp
jle
cmp
mov
subb
sbb
cmc
xchg
adc
out
leave
xor
sbb
jne
movd
jne
adc
push
push
jmp
cltd
add
cmpsl
xchg
jno
dec
into
jge
adc
push
mov
sub
outsb
cmp
imul
jecxz
bound
clc
lea
decl
pop
xor
aas
sub
add
mov
jecxz
pop
mov
outsb
mov
xor
xchg
dec
aad
xchg
fdivrl
lods
iret
xchg
insb
adc
pop
cmp
dec
sub
dec
cmpsl
xchg
cmc
jbe
outsl
mov
loop
mov
orl
jp
dec
mov
inc
rcrb
sub
test
test
cmc
cmp
aaa
cld
pop
pop
dec
gs
pop
mov
mov
pop
bound
test
sbb
jae
ret
pop
ljmp
xor
cld
sti
scas
mov
repnz
jp
xlat
scas
xchg
xchg
jno
inc
jnp
xlat
cmp
lock
rolb
pop
xchg
dec
jo
incl
xchg
popa
mov
shl
jg
mov
call
pop
push
pop
adc
mov
out
mov
insb
mov
jg
jne
xchg
push
push
lock
add
xchg
loope
scas
add
push
aad
insl
les
test
rcll
dec
jbe
in
inc
imul
loop
mov
mov
pop
out
xchg
add
sarl
jecxz
xchg
mov
jb
andb
flds
jae
hlt
gs
pushf
jp
pop
sarl
loope
in
mov
pop
incw
bound
or
dec
jb
add
push
dec
pop
notl
push
jb
inc
daa
mov
das
test
add
sarb
ljmp
call
mov
stc
in
cli
mov
xchg
mov
lret
leave
fwait
popa
xor
call
in
std
jl
sub
push
inc
mov
test
push
jbe
adc
clc
xor
dec
in
je
cld
lock
pop
scas
lahf
xor
mov
add
sarl
shll
xlat
out
aaa
rcl
push
ret
pop
mov
xor
hlt
insb
cmpsl
icebp
data16
jge
inc
mov
inc
and
cli
xchg
dec
aas
call
fsubrs
addl
jo
dec
pop
and
sub
xchg
out
adc
or
or
fidivrs
or
xchg
sub
jnp
out
dec
data16
clc
es
jbe
jecxz
jo
jg
cmp
and
and
sbbl
inc
std
jle
ret
mov
in
xchg
lods
jl
push
mov
inc
sahf
ja
je
cld
ljmp
push
mov
add
imul
out
stos
sahf
dec
movsb
adc
dec
push
push
pusha
loopne
cmpsb
mov
in
xchg
dec
mov
and
sbb
lods
daa
sbbb
xchg
mov
xor
or
add
dec
or
cmp
cmpsb
ja
or
cltd
insb
xchg
ljmp
mov
sbb
test
decl
fmuls
out
scas
cltd
cwtl
sti
mov
imul
nop
add
push
cmc
fpatan
pop
push
jne
arpl
sbb
jmp
xchg
lret
out
scas
inc
icebp
sbb
lret
pop
fsubl
jae
jp
pushf
jmp
mov
push
jb
aam
js
jl
mov
add
lret
imul
inc
cld
xor
mov
mov
in
push
inc
fldl2t
or
cld
adc
xor
inc
ss
ss
mov
mov
sarl
imul
push
jge
dec
add
sbb
pop
das
mov
icebp
or
mov
dec
mov
lods
js
dec
mov
mov
imul
loope
in
and
gs
jp
or
movsb
lahf
jmp
sbb
mov
jmp
fsubrs
and
dec
stos
mov
xor
mov
jecxz
lret
aad
adc
adc
cwtl
fdivrl
daa
repz
stos
push
mov
sbb
inc
inc
xchg
jno
push
ret
aaa
sub
sub
push
addps
in
mov
pop
sti
ret
add
and
sub
xlat
or
jp
movsb
pop
insb
mov
movsl
sti
repnz
sarl
dec
int3
and
adc
mov
xchg
and
fistl
dec
adc
mov
hlt
mov
mov
fcmovu
inc
sahf
pop
or
cld
push
aam
jae
ljmp
loop
out
in
pop
mov
sbb
pop
call
lret
xor
jno
sbb
data16
and
int
xchg
clc
pushf
test
pop
xchg
pop
fwait
sub
xchg
out
jmp
in
and
cld
and
jns
inc
and
push
test
add
dec
into
push
fsubr
test
xor
popf
dec
lods
push
ljmp
enter
jg
cmp
inc
or
add
jp
pop
cmp
orb
shll
int
es
sbb
fwait
dec
push
cs
roll
push
in
arpl
xchg
push
push
push
ljmp
test
or
jp
and
bound
sbb
pop
fadd
mov
sub
rclb
dec
mov
adc
ret
fisttpl
loope
inc
shlb
lods
jb
xor
xchg
cmp
add
add
gs
hlt
aas
cld
pop
xlat
cs
adc
ret
pop
sbb
inc
cmp
inc
repz
gs
cmp
pop
enter
and
out
hlt
jecxz
sbb
dec
out
aaa
in
adc
push
scas
xor
sub
adc
cli
test
xchg
fs
insl
and
int3
mov
jbe
dec
mov
movsl
cmp
jnp
and
xor
pop
cs
cld
sub
clc
jo
lahf
mov
dec
stc
jb
dec
and
loopne
aam
mov
orl
adc
aam
arpl
js
das
je
mov
js
js
mov
data16
cld
or
daa
test
sub
xchg
shrl
and
adc
cs
xor
scas
fildll
pop
mov
adc
push
inc
and
push
nop
out
out
fs
and
push
out
out
loope
add
jecxz
mov
push
cwtl
sbb
adc
and
inc
call
sub
sbb
mov
xchg
ret
xor
mov
dec
lret
and
sbb
xchg
clc
rorb
idivl
and
inc
xor
mov
xchg
or
xchg
fbld
mov
mov
dec
ficoml
inc
lcall
or
jb
push
cltd
repz
dec
ja
ljmp
inc
dec
arpl
iret
push
add
sarb
cmc
popl
xor
and
fistl
out
mov
daa
jb
sub
push
ljmp
ret
dec
repz
mov
lret
cmp
xor
jle
adcb
sub
pop
and
jecxz
icebp
hlt
dec
jbe
popa
push
and
or
mov
adc
mov
std
sbbl
bound
es
push
or
inc
js
mov
jbe
adc
aaa
mov
mov
rcl
push
ja
fnstsw
cmp
ud1
and
sbb
jmp
xchg
mov
mov
sbb
loopne
cmpsl
xchg
push
je
pop
add
add
sbbb
fists
and
rcll
pop
push
sub
mov
ss
inc
and
ss
shl
mov
les
pop
mov
mov
dec
inc
cmp
or
call
dec
pop
or
lret
cmp
jb
sbb
insb
data16
scas
jbe
call
in
popf
jg
or
push
push
inc
pusha
movsl
xor
outsb
and
add
out
ret
lahf
sbb
scas
dec
inc
test
jae
ljmp
shl
aam
sbb
jl
sub
stos
mov
or
mov
bound
jns
and
sub
push
or
and
sub
scas
push
xor
loope
pop
popa
xchg
imul
idivl
pop
push
movsl
andb
pop
outsl
cmp
lock
sbb
test
ds
pop
push
add
mov
jle
push
mull
repnz
push
mov
jge
into
jp
jnp
enter
in
enter
xchg
jmp
or
xor
int
popf
sub
pop
mov
and
jg
add
mov
mov
lahf
adc
and
orb
sti
xor
ja
xchg
cmc
loopne
adc
sahf
push
ror
cmpl
sub
testb
adc
je
xor
jmp
inc
test
ds
or
jne
lock
dec
push
mov
lahf
enter
stos
dec
adc
icebp
pushf
lods
inc
insb
fiadds
ljmp
dec
out
test
test
jl
sahf
test
subl
sti
pop
adc
aaa
mov
mov
rcl
push
ja
fnstsw
cmp
outsb
jmp
stos
xchg
daa
out
jb
neg
push
sahf
loopne
cld
adc
push
bound
ss
mov
negl
jae
orb
loope
and
inc
pop
jmp
push
sub
add
sub
xchg
icebp
and
pusha
mov
stos
dec
movsl
push
inc
pop
adc
int
mov
lds
fwait
enter
sbb
push
adc
loop
loopne
data16
and
or
mov
lods
cmpsb
pop
sbb
inc
test
mov
scas
push
sub
or
mov
loope
loopne
insb
push
and
cmp
std
sub
jge
mov
test
inc
xchg
shll
and
mov
cmpl
cmpsb
add
jns
cld
mov
iret
mov
jne
mov
sbb
lods
mov
es
mov
adc
repnz
daa
sti
push
and
mov
jmp
ret
popl
divl
sbb
add
sbb
arpl
xor
fistpl
rcrb
pop
mov
lcall
sub
mov
popa
or
mov
insl
dec
es
icebp
or
sbb
dec
fisubrl
out
mov
sub
int
pusha
xor
jl
mov
scas
xor
shl
mov
inc
stos
mov
idiv
ret
lods
stos
stos
hlt
fidivrl
dec
mov
mov
push
mov
or
in
out
out
jb
neg
push
orb
inc
jp
mov
adc
in
push
sbb
xor
insl
call
add
movsl
sub
cltd
jo
lock
xor
and
push
mov
stc
mov
out
loope
adc
inc
inc
scas
out
xchg
call
adc
movsb
xor
test
xor
cld
pop
jp
out
sub
jmp
int
jl
int
inc
pop
lcall
sbb
lods
leave
mov
sbb
test
mov
fs
jg
addr16
lock
and
inc
addr16
inc
cs
or
xchg
insb
or
inc
fwait
mov
push
fcomps
or
push
push
mov
gs
stos
or
idiv
pop
push
or
ds
mov
dec
inc
es
fnstsw
add
cmpb
add
or
jge
pushf
inc
aas
sar
jle
xchg
add
or
mov
insl
push
sbb
insb
stc
jbe
or
in
add
popa
adc
sbb
cvtpi2ps
push
cmpsl
inc
xor
stos
call
rcr
gs
sahf
mov
adc
cs
std
push
in
std
inc
and
xchg
mov
notl
inc
push
mov
idivb
dec
mov
les
mov
nop
in
mov
push
cmpsl
nop
push
add
aam
or
repz
mov
orl
jge
fdivs
pushf
inc
push
mov
push
clc
addr16
inc
fidivs
inc
push
aas
xchg
inc
sub
push
sbb
cmovnp
insl
or
jne
cmp
int
mov
inc
add
add
dec
loope
inc
leave
fidivl
jb
fs
adc
pop
mov
adc
dec
sbb
pop
cmp
vstmxcsr
pop
loopne
mov
xorl
push
scas
jae
out
scas
pop
dec
repnz
jle
aam
ret
sahf
pop
add
pop
scas
push
mov
in
or
adc
cmc
cmc
push
int3
mov
push
out
jae
ja
popa
fbld
icebp
lret
arpl
xor
rorl
je
mov
stos
stos
hlt
jne
mov
std
adc
loope
pop
mov
pop
arpl
mov
inc
cmp
jno
push
in
jns
stc
ret
mov
out
or
jns
mov
xchg
loop
movsl
insb
sub
les
jae
fbld
in
inc
cmp
fsubs
pop
stos
mov
or
idiv
jb
pop
jnp
jp
fiadds
gs
mov
mov
movhps
test
dec
pop
cmpsb
jp
mov
std
mov
dec
mov
cmpsl
sbb
mov
sbb
test
insl
sti
in
popf
jg
or
push
push
call
cmp
push
add
out
ret
lahf
sbb
scas
xor
add
push
pop
shl
aam
pushf
jo
addr16
mov
das
inc
test
xor
rolb
fidivs
inc
pushf
xor
test
push
jae
mov
xor
mov
push
mov
xor
cwtl
dec
out
sarb
jno
push
roll
mov
std
adc
loope
pop
mov
pop
sbb
pop
add
sub
cmpsl
loopne
mov
out
mov
pop
imul
and
add
xor
out
jecxz
mov
fbld
in
inc
cmp
cmp
inc
adc
in
rorb
push
in
shr
adc
mov
inc
lea
and
dec
pop
add
jmp
inc
mov
add
lcall
sub
std
and
push
test
fs
add
pop
nopl
mul
push
jne,pt
mov
cwtl
dec
adc
mov
mov
int3
lods
xchg
fs
ja
clc
loope
mov
mov
in
sbb
lret
mov
js
test
adc
in
dec
and
subps
addl
add
ljmp
pop
mov
xorb
pop
int
sub
fisubl
icebp
or
test
das
inc
cmp
pop
sub
jecxz
subb
bnd
xchg
aaa
ret
push
mov
ss
int3
mov
xchg
testl
mov
and
mov
pop
sbb
inc
rcr
push
ja
fnstsw
cmp
ret
std
lcall
mov
pop
mov
data16
test
fidivs
lahf
inc
mov
jmp
inc
dec
clc
dec
out
mov
test
lret
aaa
int3
cwtl
lahf
mov
mov
and
cli
and
mov
sbb
xor
inc
cli
in
mov
orl
adc
insb
pop
jge
test
subb
jmp
mov
cmp
lcall
pop
dec
sub
xchg
cmpsb
jp
test
clc
push
cmpsb
test
sbb
loop
jge
dec
mov
xchg
in
inc
cmp
cmp
inc
adc
in
or
pop
rclb
pop
je
out
jg
outsb
popa
sub
and
mov
jge
cld
mov
cmpsb
jp
mov
std
mov
popa
les
gs
jns
shll
push
lods
shll
dec
xor
mov
adcl
sti
leave
push
sub
mov
popa
inc
inc
test
pop
mov
mov
lock
add
les
outsl
stc
pop
xor
fwait
mov
lods
testb
mov
mov
add
shlb
andl
ret
mov
out
adc
clc
xchg
mov
sub
icebp
sarb
test
lds
popf
cmp
add
and
test
subl
sti
pop
popf
or
sbb
add
insl
mov
adc
in
or
pop
pop
rcrb
mov
outsb
popa
sub
or
lcall
pop
jecxz
pop
sub
adc
or
mov
bound
jecxz
aas
xor
sbb
or
add
xor
add
lret
dec
test
subl
sti
pop
adc
aaa
mov
lds
int3
lods
xchg
fs
ja
clc
loope
mov
jg
cld
movsl
movsl
or
inc
mov
sti
js
add
cmp
mov
mov
int3
jge
cmovg
push
mull
test
mov
jmp
and
popf
inc
orl
sub
sub
mov
pop
adc
sbb
test
repnz
jns
mov
ret
psadbw
jge
adc
stos
xchg
out
jbe
mov
rcrb
xor
mov
inc
pop
pusha
mov
fs
inc
xor
rclb
and
int3
testl
pop
lods
pop
ss
and
lods
inc
xor
out
sbb
inc
aad
ret
clc
dec
xchg
mov
sti
sub
and
add
and
in
test
lea
cmp
in
mov
mov
sbb
icebp
daa
out
clc
push
adc
mov
mov
fdiv
mov
jns
imul
jae
xchg
pop
lahf
dec
or
loope
scas
sbb
mov
je
or
loopne
pop
lret
dec
xlat
jbe
out
pop
xchg
add
add
in
or
popf
mov
push
jbe
pop
imulb
sarb
mov
push
sti
loop
mov
pusha
pop
orb
ljmp
jns
std
jo
scas
ror
loope
xchg
movsb
xchg
and
inc
cmp
dec
jmp
add
int
stos
jo
ja
xchg
push
out
push
scas
fimull
int3
adc
dec
imul
mulb
mov
icebp
and
xor
lahf
xchg
das
rcll
jne
adc
add
pop
jns
sbb
mul
cmp
inc
mov
mov
mov
sub
sbb
add
mov
or
mov
xchg
sbb
jae
outsl
test
cmpsb
cmp
jo
mov
stc
ret
test
popf
xor
addr16
ficomps
mov
adc
jo
test
lea
outsl
cs
rorl
xchg
push
push
fildl
mov
pop
fistl
stc
out
into
add
add
loope
mov
fs
inc
imul
test
mov
stc
in
cmp
loope
xor
push
out
adc
xchg
bound
sub
or
ret
repnz
lds
mov
dec
and
xchg
cmpsb
jecxz
mov
adc
adc
adc
mov
mov
pop
addl
in
add
pop
fsubrs
dec
nop
pop
xchg
loop
xchg
in
sahf
inc
mov
dec
sbb
aas
mov
and
mov
sbb
rorb
push
pop
mov
pop
jle
or
adc
out
mov
cmp
and
aas
add
dec
pop
jo
add
sbb
inc
mov
jmp
fildll
mov
ret
nop
shlb
sbb
xor
pop
pop
jo
into
notl
test
scas
xor
jp
or
xchg
sbb
int
xchg
int
leave
scas
xchg
push
jge
ret
insl
lret
dec
jp
flds
push
shl
pop
cmpsb
mov
outsl
rclb
mov
rol
popf
movsl
mov
xor
pop
and
ret
mov
pop
shr
cmp
jo
jns
lcall
push
jnp
inc
leave
mov
mov
aad
fucomip
xchg
xchg
inc
sub
cli
daa
xchg
ret
incb
adc
sbb
push
decb
scas
roll
adc
out
jns
enter
push
insl
outsl
jge
imul
fbstp
xlat
jge
lret
cmpsl
sub
or
lea
jns
leave
fisttpl
decb
xor
pop
mov
mov
inc
sbb
cmpsb
jne
in
xchg
mov
or
cld
inc
mov
xchg
data16
lret
fcmovnbe
xlat
cwtl
lret
xor
mov
shlb
xor
popf
jl
jnp
cmpsl
scas
movsl
push
movsl
pusha
ja
adc
fnstcw
dec
scas
cmpsb
xchg
xchg
mov
js
cmp
jge
fbld
push
add
bound
adc
sbb
lods
shll
lock
clc
mull
jbe
cld
rcrl
das
and
xchg
add
ljmp
mov
mov
xchg
and
jg
xlat
push
in
add
fsubrs
inc
rorl
addb
repnz
push
mov
jge
or
flds
lret
paddusb
insb
iret
loope
xchg
pop
cltd
test
sbb
mov
into
loope
mov
push
dec
subb
loop
decb
mov
push
jnp
xor
shl
cwtl
int
pop
inc
fwait
loop
push
xchg
jne
popa
sbb
sbb
mov
out
and
add
jno
inc
pop
add
dec
xor
adc
pop
jge
shrl
sub
adc
mov
or
jl
outsb
push
jnp
xlat
in
push
nop
sbb
push
or
cmp
dec
sbb
xor
mov
pop
mov
pop
sbb
out
jmp
ljmp
bound
into
adc
pop
push
adc
repnz
push
lods
test
icebp
mov
in
jp
cmp
out
jo
cs
cmc
inc
mov
repz
mov
mov
mov
loopne
sti
sbb
cmpsl
dec
sbb
or
cs
adc
mov
xchg
mov
je
mov
add
and
rcll
shlb
xchg
das
inc
sbb
sbb
fcmovb
dec
push
ficomps
enter
stc
lahf
sub
pop
aas
fbld
data16
movaps
arpl
fwait
mov
bound
and
jne
mov
add
xor
push
aad
cltd
call
lahf
movsl
push
inc
mov
ret
xchg
cmpsl
adc
ret
jns
push
js
jno
jl
loop
xor
cmpsb
cwtl
lods
adc
daa
mov
inc
inc
push
jg
inc
inc
sub
inc
insb
scas
cmpl
iret
pop
lods
int
icebp
mov
popl
lods
sub
mov
or
std
gs
scas
stos
dec
sub
out
dec
lods
cmp
ficompl
lahf
inc
jecxz
aam
lock
push
adcl
sbb
shrb
cmc
stos
pop
aaa
sub
sarl
and
bsr
ss
js
popa
mov
rcrb
xchg
sbbl
pop
mov
out
mov
sub
adc
push
adc
cmp
das
lret
rcll
mov
call
xlat
mov
call
and
dec
lret
sbb
sbb
movsb
pop
add
jne
popa
sbb
mov
mov
xor
mov
xchg
add
jns
mov
lret
sbb
aas
push
push
bound
mov
cmp
mov
addr16
or
out
and
pop
inc
mov
mov
mov
xor
jp
fiadds
fistps
add
int
leave
scas
xchg
push
jge
ret
insl
shrl
je
mov
pop
shrl
mov
addr16
sbb
imul
sti
fdivrl
push
jnp
dec
loopne
sahf
out
dec
loope
dec
xchg
add
es
repz
lahf
mov
add
lgs
dec
jmp
popa
add
mov
xor
xchg
xchg
dec
jbe
frstor
rclb
mov
loope
push
test
out
enter
cwtl
fcomps
leave
pop
test
mov
sub
lret
cmp
mov
pop
test
out
sahf
push
test
sub
stc
loope
inc
outsl
push
adc
sub
mov
push
cs
pop
icebp
push
dec
out
repnz
icebp
mov
shlb
ljmp
sbbl
hlt
adc
mov
push
add
inc
sub
hlt
mov
adc
aas
into
mov
ret
xchg
jne
call
aad
sbb
out
out
jae
or
outsl
mov
divb
ret
mov
fcmovnbe
stc
lret
xor
es
mov
arpl
fisttpll
inc
xchg
fidivrs
leave
jg
ret
loop
sub
cmpsb
jp
pop
icebp
jecxz
xorb
add
adc
xchg
mov
fisubl
ljmp
test
and
test
xchg
or
test
dec
xchg
lds
arpl
cli
sbb
sti
in
push
rclb
mov
inc
adc
push
mov
xchg
fwait
inc
push
cmp
in
pop
and
sub
add
bnd
loope
sub
sbb
ret
xchg
xchg
lcall
call
sub
mov
dec
les
mov
adc
repz
mov
pop
fs
dec
jb
adc
insb
cltd
in
push
lds
fisubl
mov
xchg
inc
sub
and
pop
push
xchg
add
inc
pop
mov
aaa
ja
frstor
pop
outsb
adc
out
pushf
dec
gs
xchg
in
loope
jge
sahf
xchg
arpl
jns
dec
push
mov
std
push
outsl
jle
js
or
jne
push
scas
gs
xchg
movsb
imulb
call
pop
pop
jecxz
push
and
jecxz
and
lret
sbb
sbb
xor
and
test
dec
iret
iret
sub
and
pop
cmpl
repz
dec
negb
jp
cmp
lea
mov
loope
daa
fnstsw
mov
dec
fldpi
in
mov
xchg
sub
dec
or
dec
cmp
sbb
jb
stos
and
sbb
repz
je
pop
inc
in
ja
mov
mov
imul
std
insl
and
iret
in
popa
ja
daa
js
popf
xchg
add
rcl
adc
nop
ss
adc
inc
popf
dec
and
nop
repz
jl
fildl
movsl
jge
popf
mov
dec
mov
pop
xor
sub
jge
sbb
iret
ret
push
xchg
cmpb
sbb
sub
in
js
pop
pushf
fsubs
out
rorl
pop
xor
loope
xchg
jmp
js
shrl
cmpsl
dec
lods
pop
inc
bnd
pop
inc
movsl
into
adc
test
sbb
das
xchg
or
jns
adc
dec
loop
cmpsb
xor
cmpsb
push
mov
fildl
inc
xchg
mov
bound
jno
xlat
sub
sub
mov
xchg
fnstenv
jmp
pop
lahf
push
mov
test
add
sbb
fldcw
dec
lods
aad
leave
mov
adc
fs
xchg
movb
popf
ss
pop
dec
ficoml
cltd
mov
push
jge
jmp
call
mov
clc
add
bound
int3
mov
mov
dec
xor
pop
sbb
dec
ljmp
scas
adc
push
cltd
push
xlat
outsb
mov
aad
pop
loope
pop
xchg
pop
sbb
or
les
inc
data16
int3
call
inc
mov
jbe
xchg
pop
lret
jb
ret
push
mov
sbb
mov
push
sbb
mov
test
and
mov
or
pop
stc
nop
and
ficoms
mov
cmp
sub
or
jne
adc
int3
mov
adc
xchg
loopne
test
dec
or
cmp
ror
cli
std
xor
pop
cld
add
rcl
sub
sbb
mov
mov
jb
mov
fs
sub
fldt
push
sbb
inc
leave
dec
pop
inc
inc
sti
ds
fldt
hlt
pusha
fists
cmp
mov
jg
inc
rclb
sti
add
push
je
or
jae
add
and
push
push
insb
mov
inc
pop
enter
and
inc
gs
in
out
sub
jo
jno
int3
movsl
push
adc
jne
push
into
mov
mov
lret
jl
mov
jg
adcl
rorb
lcall
dec
add
pusha
mov
shr
xor
jp
into
mov
mov
out
rorb
jno
fldl
out
aaa
out
xchg
ja
jns
xor
pop
loope
or
testl
push
seta
sbb
nop
jecxz
mov
scas
cmp
sub
cmp
jb
mov
sahf
inc
lcall
scas
cltd
sub
repz
aas
jge
xor
mov
jg
push
adc
lds
lret
xor
pop
jmp
pop
push
or
or
into
loope
xor
in
sub
or
lahf
pop
in
nop
aaa
mov
cli
xchg
imul
mov
or
iret
in
sbb
mov
jmp
cmp
and
popf
sub
adc
mov
in
es
mov
es
ja
adc
loopne
inc
lahf
mov
outsb
mov
cmp
xlat
push
xor
mov
dec
loop
jno
cmp
aas
add
push
xor
push
and
shr
pop
ja
pop
outsl
pop
add
or
jmp
mov
and
pop
decl
in
xchg
repz
sub
aad
out
mov
in
es
dec
out
mov
mov
in
es
mov
es
popf
cmpl
icebp
loop
xlat
cltd
das
jnp
ret
das
add
ret
cmp
roll
inc
js
scas
mov
pop
test
lds
push
fisttpl
or
push
mov
stos
cmpsl
push
adc
dec
loop
jecxz
std
stos
inc
xchg
and
adc
jae
mov
adc
scas
scas
xor
out
aaa
jp
lret
mov
push
dec
pop
sub
xor
movsl
xor
or
pusha
mov
ds
rcrl
mov
inc
std
in
xchg
push
inc
sub
sbb
xchg
xchg
push
sbb
stos
push
pop
cltd
add
add
xor
mov
mov
mov
popa
lods
sbb
fucomp
and
xor
lret
int3
andb
inc
sbb
popf
push
or
dec
test
inc
lcall
and
dec
jo
jmp
sub
stos
and
test
or
popa
and
inc
fwait
in
es
mov
es
mov
es
nop
mov
lea
push
inc
fwait
in
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
daa
sti
cwtl
push
xchg
xor
call
push
mov
roll
pushf
ljmp
mov
inc
mov
pop
inc
into
je
pop
negb
push
xchg
test
or
jle
in
test
test
pop
mov
sub
jl
pop
roll
add
leave
mov
mov
testb
adc
add
mov
mov
mov
inc
test
orl
mov
jb
aas
jp
fadd
loope
shll
mov
fidivl
cmp
stos
or
fwait
in
es
mov
es
mov
es
add
add
sub
add
add
add
add
jae
add
and
inc
add
xor
fidivl
inc
add
add
add
add
add
xchg
inc
add
add
add
add
adcb
call
add
add
add
mov
add
push
add
add
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
add
insb
xchg
inc
add
add
inc
xchg
inc
add
xchg
inc
add
add
mov
add
jl
inc
add
add
insb
xchg
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
dec
inc
add
cwtl
inc
add
add
add
add
add
add
add
add
add
inc
mov
jns
add
jns
add
jns
add
jns
add
jns
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
add
add
add
add
addb
add
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
add
add
call
add
add
add
add
add
addb
add
add
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
push
add
push
add
add
add
add
pop
add
call
add
add
add
add
pop
add
sub
add
push
pop
add
inc
pop
add
and
add
cwtl
pop
add
adc
add
sub
add
xor
add
pusha
add
add
add
cmp
cmp
pop
nop
mov
add
add
add
add
adc
xor
xor
add
and
xor
and
and
adc
and
adc
and
and
add
add
add
and
and
adc
xor
adc
and
and
and
add
xor
add
and
xor
xor
xor
and
add
add
add
and
add
adc
adc
and
adc
adc
adc
adc
adc
add
add
and
xor
adc
adc
adc
add
adc
adc
and
adc
xor
and
add
add
xor
and
xor
add
xor
adc
add
add
and
xor
add
adc
adc
adc
adc
and
add
add
xor
add
add
xor
and
and
add
add
adc
and
and
adc
and
xor
xor
xor
xor
adc
adc
xor
and
adc
xor
add
and
xor
and
and
and
adc
and
xor
adc
adc
xor
add
adc
adc
adc
add
add
and
and
and
and
add
adc
add
adc
and
add
add
xor
and
xor
xor
adc
add
and
and
add
adc
add
and
add
xor
and
and
add
xor
adc
and
and
and
add
adc
add
xor
xor
add
and
xor
xor
adc
and
adc
adc
and
adc
adc
adc
adc
xor
adc
xor
adc
xor
add
adc
xor
xor
and
and
add
and
add
adc
and
adc
and
and
add
adc
adc
and
add
add
xor
add
xor
xor
add
add
add
and
adc
add
adc
and
adc
xor
and
xor
and
xor
adc
add
add
and
adc
and
add
adc
and
and
xor
add
add
add
add
xor
adc
adc
adc
adc
xor
adc
xor
and
xor
adc
and
add
adc
adc
add
xor
add
adc
and
adc
adc
add
add
add
xor
and
add
and
adc
and
and
add
adc
adc
adc
adc
add
adc
xor
xor
add
add
and
xor
add
xor
add
add
add
add
xor
xor
and
and
adc
add
adc
adc
add
adc
add
xor
add
xor
add
xor
and
xor
and
adc
xor
xor
add
add
and
add
add
add
xor
and
adc
add
xor
xor
add
xor
add
add
add
add
add
add
add
add
mov
xlat
add
add
add
adc
add
adc
add
add
adc
adc
adc
add
add
add
adc
adc
adc
add
add
add
adc
adc
add
adc
add
add
adc
add
adc
add
adc
add
add
adc
add
adc
adc
adc
adc
add
add
adc
add
adc
adc
add
add
adc
adc
add
adc
add
adc
add
add
adc
add
adc
adc
adc
add
adc
add
adc
adc
adc
add
adc
adc
add
adc
adc
adc
adc
adc
add
adc
adc
adc
add
adc
add
add
adc
adc
add
adc
add
adc
adc
add
add
add
adc
adc
adc
adc
adc
add
adc
add
add
adc
add
add
adc
add
adc
add
add
adc
add
adc
adc
adc
add
adc
add
adc
add
add
add
adc
adc
adc
add
add
add
add
add
adc
add
add
add
adc
add
adc
adc
add
add
add
adc
adc
adc
add
adc
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
adc
adc
add
add
adc
adc
add
add
add
add
add
add
add
adc
adc
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
add
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
add
add
adc
add
adc
adc
add
add
adc
add
adc
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
adc
add
adc
add
add
adc
adc
adc
add
add
add
add
mov
adc
pop
incb
das
addl
ja
fldt
xchg
icebp
addl
and
lock
mov
pop
loope
dec
fdivrp
mov
aaa
xor
pop
test
adcl
and
shl
aaa
fildl
dec
mov
loopne
add
mov
cmc
icebp
jo
jnp
pop
iret
mov
xchg
xchg
push
xchg
pusha
jp
adc
je
push
bound
mov
inc
push
imul
add
add
jle
lods
bswap
aam
add
leave
push
scas
jmp
add
jo
pop
cmp
cmp
add
fcomps
add
pop
push
or
cmp
add
jecxz
imull
add
loopne
mull
or
mov
and
xchg
pop
xor
add
push
add
jb
jbe
sub
mov
add
push
mov
std
aas
push
add
mov
mov
loop
add
mov
add
sbb
xchg
aam
scas
add
sub
add
and
add
inc
add
add
add
mov
xlat
add
add
add
adc
add
adc
add
add
adc
adc
adc
add
add
add
adc
adc
adc
add
add
add
adc
adc
add
adc
add
add
adc
add
adc
add
adc
add
add
adc
add
adc
adc
adc
adc
add
add
adc
add
adc
adc
add
add
adc
adc
add
adc
add
adc
add
add
adc
add
adc
adc
adc
add
adc
add
adc
adc
adc
add
adc
adc
add
adc
adc
adc
adc
adc
add
adc
adc
adc
add
adc
add
add
adc
adc
add
adc
add
adc
adc
add
add
add
adc
adc
adc
adc
adc
add
adc
add
add
adc
add
add
adc
add
adc
add
add
adc
add
adc
adc
adc
add
adc
add
adc
add
add
add
adc
adc
adc
add
add
add
add
add
adc
add
add
add
adc
add
adc
adc
add
add
add
adc
adc
adc
add
adc
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
adc
adc
add
add
adc
adc
add
add
add
add
add
add
add
adc
adc
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
add
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
add
add
adc
add
adc
adc
add
add
adc
add
adc
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
adc
add
adc
add
add
adc
adc
adc
add
add
add
add
mov
adc
pop
incb
das
addl
ja
fldt
xchg
icebp
addl
and
lock
mov
pop
loope
dec
fdivrp
mov
aaa
xor
pop
test
adcl
and
shl
aaa
fildl
dec
mov
loopne
add
mov
cmc
icebp
jo
jnp
pop
iret
mov
xchg
xchg
push
xchg
pusha
jp
adc
je
push
bound
mov
add
add
xor
adc
add
add
push
add
and
add
add
call
add
add
add
add
add
add
outsb
add
add
add
je
add
orb
addb
add
add
add
add
push
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
outsb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
jo
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
outsb
add
add
add
jbe
imul
and
data16
jb
and
dec
add
je
ja
popa
add
add
add
outsl
add
outsb
add
add
jae
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
jo
arpl
insb
add
add
je
add
add
add
add
add
add
add
add
cmp
sub
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
inc
add
inc
add
push
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
and
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
outsb
adc
insl
outsl
sbb
