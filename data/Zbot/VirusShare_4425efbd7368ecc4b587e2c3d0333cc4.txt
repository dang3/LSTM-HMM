mov
add
mov
push
add
inc
movsl
inc
add
sbb
push
movsb
mov
int
hlt
mov
mov
add
movl
push
int3
leave
ret
pop
inc
inc
fsubs
std
fldt
hlt
jbe
jae
and
cld
ja
fildll
inc
xorb
pushf
incl
call
add
and
xchg
idivl
dec
or
ret
xor
dec
push
jg
jmp
outsb
push
dec
add
pop
enter
adc
xchg
sub
xchg
push
std
ljmp
add
test
dec
aam
bound
add
push
dec
mov
xor
xor
xchg
push
sbb
ss
adc
cmp
dec
and
repz
add
mov
push
push
jne
mov
dec
mov
or
rolb
mov
shll
push
push
mov
push
pusha
add
cld
lahf
or
pop
adc
xorl
mov
lock
int3
push
xchg
xor
iret
xchg
xchg
fs
jb
sub
test
out
imulb
je
push
mov
test
or
leave
push
int
or
addr16
pop
push
lea
divl
push
push
jne
push
cli
lock
adc
dec
sbb
popa
ja
fildll
push
inc
jle
and
push
inc
add
adc
fscale
lock
xor
dec
gs
popf
jl
fiadds
adc
cmp
fstpl
enter
adc
mov
xchg
xchg
js
mov
push
sti
bound
xor
xchg
dec
xchg
or
dec
push
test
scas
fnstcw
test
inc
test
fcoms
inc
imul
ficoml
xchg
loopne
push
inc
add
hlt
xor
xor
dec
xor
pop
je
outsb
inc
dec
mov
je
dec
dec
jg
mov
jge
push
mov
or
popf
ljmp
fwait
outsl
shlb
add
push
in
xor
jo
addr16
sbb
pop
movsb
js
dec
imul
outsl
es
mov
jns
popa
inc
cmp
sub
nop
dec
cwtl
test
enter
sub
xchg
inc
push
cmp
nop
jb
mov
add
insb
cmp
pop
push
pop
cld
mov
jle
sahf
mov
js
fisttps
mov
cmp
xchg
lret
in
enter
xchg
sub
cwtl
inc
test
js
sub
mov
fistl
add
aaa
push
and
lds
ret
inc
hlt
int3
stos
movsb
dec
outsb
adc
add
xor
cmp
mov
jecxz
add
lret
cwtl
sbbl
addr16
cmp
cmp
pusha
xor
mov
lds
sbb
add
push
xacquire
test
das
dec
in
and
mov
push
jecxz
out
xchg
imul
xor
cmp
std
mov
clc
dec
jno
popf
jg
mov
add
and
ja
xor
xor
dec
adc
dec
or
lock
inc
xor
pop
mov
pop
fmuls
cld
and
leave
or
arpl
sti
lahf
mov
inc
jbe
xor
jnp
addr16
outsb
andb
fstpt
adc
mov
mov
mov
and
mov
out
mov
jb
mov
jo
mov
dec
cmp
mov
fnstenv
adc
popa
xchg
lahf
cmc
inc
fs
add
inc
jns
inc
jl
push
lea
push
dec
cmp
xor
push
mov
mov
push
mov
les
sarb
push
js
cmc
rorb
fsincos
and
imul
or
insb
insb
inc
push
xor
mov
jecxz
subl
lea
hlt
mov
imul
adc
les
sbb
sub
in
mov
inc
xor
or
std
aad
jne
sub
mov
dec
xor
dec
ss
bound
lock
or
mov
mov
mov
push
cmovle
inc
dec
xor
es
or
sbb
daa
cs
mov
mov
out
ss
sarl
fsubs
cltd
fs
cmp
jmp
and
jo
push
push
push
xchg
cmp
inc
push
inc
lock
decb
ds
dec
lret
andl
fs
mov
lock
jns
ret
mov
loopne
je
lahf
push
lods
movsl
pop
jnp
inc
add
xlat
sbb
icebp
pop
clc
test
fdivs
dec
dec
pop
int3
xor
dec
cwtl
outsl
imul
loop
jno
cwtl
or
decb
sti
cmc
mov
jb
mov
or
rorb
in
aas
dec
pushf
pop
inc
inc
pop
dec
xor
and
mov
push
arpl
rolb
jne
cltd
add
adc
xor
cmpsb
xor
xor
dec
in
ret
jge
sub
fcompl
inc
pop
test
hlt
inc
test
pop
mov
mov
xor
xchg
fdivrs
push
mov
jbe
or
mov
sti
add
enter
popa
cwtl
orl
insb
push
imul
outsb
sbb
jbe
and
xchg
aas
and
mov
mov
add
jae
jno
push
in
and
push
outsb
fimull
add
xchg
flds
lods
or
mov
in
pop
nop
nop
mov
fs
or
repz
testl
test
insl
jl
inc
pusha
pop
les
dec
inc
sub
lea
push
mov
jl
out
and
add
push
leave
bound
add
mov
or
push
data16
mov
imul
push
add
jg
test
icebp
mov
xor
insb
mov
dec
mov
js
jge
add
rclb
scas
imul
xchg
loope
scas
addr16
pop
popa
bound
enter
xlat
lcall
push
outsb
ficoml
mov
repnz
push
mov
arpl
dec
dec
testl
xrelease
popa
add
fneni(8087
mov
jno
add
jno
adcl
nop
mov
mov
sbb
pop
cli
outsb
arpl
dec
or
fistpll
cmp
js
addr16
mov
mov
movsb
or
mov
push
adc
sti
pop
add
or
je
xor
test
popf
sub
fadds
sbb
hlt
std
push
sub
jo
jmp
popf
aaa
int3
push
xlat
push
daa
aas
mov
inc
jmp
push
fists
dec
nop
lods
add
call
js
out
push
push
push
aaa
jne
sbb
scas
out
imul
push
adc
and
xor
push
fsin
mov
push
in
push
daa
push
push
push
push
sub
imul
aam
or
sbb
xor
or
push
xlat
call
loope
scas
sbb
push
push
enter
cli
pop
push
pop
mov
inc
in
fwait
std
jge
and
or
push
mov
xchg
cmp
clc
shll
fisubrl
icebp
mov
repnz
adc
in
daa
add
push
repnz
adc
outsb
subl
aad
test
rorb
js
push
pop
ret
in
in
fimull
notb
dec
stos
cwtl
clc
dec
push
sahf
add
pop
push
push
add
fcomip
mov
cld
or
sub
outsl
lods
std
out
jne,pt
add
xor
xor
dec
repnz
xlat
fdivl
xchg
ss
add
push
pop
sub
repnz
xor
sbb
jne
jmp
ret
mov
mov
divl
push
sub
dec
pop
pop
mov
or
dec
pop
pop
ret
cmpsb
cltd
jnp
testb
fmulp
cmp
inc
popa
jae
ja
inc
repnz
adc
lahf
inc
addr16
stos
pop
out
push
jns
mov
insb
das
xorl
mov
pop
imul
into
nop
push
mov
cmp
jg
into
lret
inc
ret
cmpsl
mov
iret
mov
inc
dec
iret
imul
jg
repnz
loopne
stc
out
fstpt
je
in
mov
inc
pop
jae
int
and
and
cmp
fiadds
xchg
aas
adc
out
fimuls
clc
loope
inc
cmpsb
mov
ja
testb
jae
es
je
sub
push
lcall
ss
or
stc
mov
loope
test
xchg
adc
in
mov
push
inc
fstpt
out
loop
ret
es
dec
cmp
pop
jnp
out
call
xorl
mov
dec
pusha
pop
or
mov
xacquire
call
or
jge
sbb
add
mulb
add
mov
xchg
lret
sbb
mov
inc
cli
inc
xor
xchg
add
mull
sbb
call
xor
loope
ja
inc
jg
fs
and
arpl
addr16
dec
andl
lock
stc
imul
xchg
stos
push
or
fsubp
lret
xchg
cmp
jnp
fcoml
sbb
call
cmp
inc
dec
hlt
out
out
call
xchg
movsb
repz
xchg
lds
push
cmpl
scas
stos
js
mov
mov
adc
or
js
and
pop
in
xor
outsb
jmp
aas
add
mov
movsb
jo
cmp
dec
cmp
lea
push
xor
jl
xor
mov
inc
out
add
out
inc
add
jp
lret
call
xchg
sbb
sarb
fdivrs
pop
aam
dec
out
in
cmpsb
fists
or
int
xchg
dec
and
dec
cmpsb
push
add
sub
fsub
icebp
fsubrl
add
mov
inc
xchg
imul
or
mov
lock
rorb
aad
xchg
data16
nop
push
jne
fnsave
mov
pop
mov
pop
popa
fldt
call
jne
xor
out
aaa
jecxz
sarl
mov
push
adcl
sbb
mov
jo
enter
into
cltd
or
push
xchg
ja
mov
ror
aaa
js
mov
es
jg
ret
sub
sbb
cmc
push
pop
clc
sbb
outsl
bound
into
jmp
pop
lds
mov
cmp
pop
xchg
fsubrp
jle
cmp
lret
jecxz
loopne
ror
jp
les
or
ret
inc
xchg
imul
ljmp
mov
add
cmp
inc
pop
xchg
xor
popa
roll
xor
sub
mov
sub
pop
jecxz
hlt
pop
mov
xchg
inc
insb
int3
loopne
mov
push
cwtl
int
mov
add
sbb
call
push
je
or
repz
out
xchg
sbb
adc
sarb
and
add
pop
call
jnp
mov
sub
mov
test
mov
or
push
mov
mov
inc
jae
or
retw
fidivs
inc
jle
cmp
dec
js
and
loope
leave
stc
add
mov
shlb
cmp
lret
sbb
mov
xchg
jmp
inc
jle
push
out
lock
pusha
adc
sub
sbb
insl
ja
or
call
shl
in
add
cmp
xchg
movsb
and
icebp
ret
inc
push
fsubrl
mov
jecxz
xchg
push
call
lods
divl
jae
mov
aaa
inc
dec
pop
data16
pop
loope
clc
cmpsl
movsl
mov
ret
and
mov
dec
cwtl
jmp
mov
inc
xorb
and
int3
pop
mov
xchg
or
test
mov
fwait
xor
out
add
sub
clc
ret
push
xor
das
push
dec
xor
int3
jl
pop
icebp
enter
xchg
loop
sub
sbb
call
or
ret
xlat
jne
call
es
adc
jnp
sbb
sar
out
xchg
pop
outsb
clc
fwait
outsb
js
fwait
or
popa
add
xlat
or
mov
lds
mov
movsl
adc
outsb
mov
jg
inc
aaa
pop
add
and
xchg
cs
xchg
leave
stc
or
jmpw
test
dec
and
mov
in
subl
pop
mov
js
push
inc
pusha
shlb
into
cwtl
fsubrp
add
stc
std
bnd
cmp
mov
pusha
stc
lock
pop
and
inc
arpl
fadd
adc
pop
pop
inc
arpl
ljmp
jbe
dec
call
ss
outsl
mulb
xor
mov
fistl
mov
fdivl
jnp
ret
mov
shrb
pop
xor
adc
call
mov
pop
repz
dec
cmpsl
or
pusha
in
out
hlt
ljmp
sarl
cmp
nop
lret
pop
rorl
ljmp
pop
add
jg
or
imul
push
call
pop
sub
outsl
icebp
inc
lods
scas
psrld
stc
push
fwait
ret
dec
inc
fdivs
lock
in
jbe
sbb
adc
lods
movsb
pop
push
sbb
repnz
mov
popa
and
pop
mov
push
xchg
cwtl
xor
pop
lcall
rorb
mov
jb
scas
sub
iret
and
clc
xchg
movsb
push
mov
test
cwtl
and
in
lds
push
dec
scas
ds
clc
mov
push
jae
add
pop
divl
call
rorb
lods
and
fwait
inc
scas
fucomi
dec
repnz
adc
fwait
adc
push
daa
lods
mov
xor
jg
mov
dec
scas
ret
sub
xor
adc
mov
data16
in
out
cwtl
xor
out
icebp
add
jns
inc
inc
and
rorb
jmp
fidivs
cwtl
movsb
nop
lea
call
cmc
add
clc
std
loop
sbb
ss
call
int
imul
adc
xchg
ficomps
clc
in
mov
jo
repnz
lds
das
sti
push
pop
jns
push
mov
inc
aad
nop
jp
dec
pop
loopne
ret
ss
sar
jle
sarl
addr16
jns
dec
shrl
adcb
push
lods
ss
lahf
les
outsl
outsb
pop
pop
or
call
add
sbb
xor
mov
sub
mov
or
cmp
xor
jne
bound
pusha
jae
bound
or
sbb
add
insl
adcb
data16
push
daa
mov
call
and
xchg
mov
cwtl
mov
sub
xor
out
push
inc
sub
rcr
ret
cmp
mov
sub
data16
xor
sbb
fidivrs
mov
imul
sbb
hlt
and
push
jmp
cmp
sbb
pop
into
jno
and
ret
push
subl
inc
scas
adc
xor
int
or
arpl
scas
loopne
mov
or
pop
dec
fwait
push
mov
fdivl
push
fdivrs
mov
and
icebp
fwait
adc
xchg
xor
call
sbb
lcall
inc
mov
imul
add
sbb
jnp
adcb
test
das
mov
fwait
dec
inc
inc
xor
mov
add
lock
add
or
mov
mov
pop
or
aaa
and
clc
pop
xchg
and
call
sub
sbb
inc
insl
or
jae
sbbl
adcl
jle
in
mov
sub
stc
mov
push
lock
pop
lods
pop
or
lahf
add
inc
jle
mov
loopne
es
int3
in
mov
es
call
sbb
popa
idivb
sbb
mov
xchg
fidivs
outsb
pusha
mov
mov
lock
and
cmpb
pop
or
cmp
mov
adc
sbb
andl
cltd
test
sbb
jecxz
or
int
clc
clc
and
dec
popa
xor
xor
lods
pop
movsl
das
int
sbb
or
or
mov
or
cli
mov
jne
popf
movsb
aaa
mov
cmp
adc
ret
lea
jp
call
lock
inc
push
dec
lcall
decl
push
fdivs
les
or
call
test
mov
cmp
js
xchg
or
fistpl
mov
add
pop
lcall
pop
mov
fidivrl
outsb
adc
shrb
dec
jo
mov
sub
sub
mov
loop
pop
aaa
jl
ljmp
add
mov
shll
ret
das
or
bound
sub
push
mov
jecxz
sbb
aam
push
int3
call
int
add
mov
xor
push
push
adc
mov
cmp
xor
xchg
and
add
add
ljmp
mov
sub
rolb
mov
pop
lock
mov
pop
sub
outsl
and
ja
mov
sub
decl
add
jmp
pusha
or
xchg
mov
ja
fwait
test
xchg
mov
cmp
and
fiadds
push
pop
jnp
cwtl
inc
scas
cs
jo
das
ds
gs
das
dec
aas
push
test
inc
jmp
xor
mov
jp
push
push
cmp
ret
sub
dec
mov
lds
bound
or
inc
or
nop
mov
xor
inc
add
dec
cwtl
add
subl
inc
in
push
pop
mov
xchg
movsb
test
sbb
xchg
test
adc
aaa
mov
cmc
ficomps
adc
movsb
adc
test
xchg
dec
lods
test
jb
mov
mov
fsubl
or
bound
cmp
dec
int3
fdivl
dec
clc
mov
popa
push
inc
mov
or
pop
jle
fistps
out
call
jae
pop
inc
scas
test
fnstenv
add
cmp
mov
lret
inc
jp
fcoms
aas
es
mov
pop
cld
or
ret
adc
adc
enter
clc
add
cmp
or
push
adc
lcall
add
pop
pop
ret
or
jns
xchg
call
mov
test
mov
cmpsb
or
movsb
divl
clc
add
push
in
sbb
push
fxch
push
dec
fldenv
fistpll
lods
in
cmp
mov
int3
mov
cld
jg
call
inc
mov
call
adc
fnstcw
out
jno
js
fstl
push
inc
cmp
lahf
shlb
outsl
push
orl
data16
orb
xchg
dec
push
or
movsb
push
pop
subb
lock
push
call
int3
cmp
or
pusha
insb
iret
dec
adc
inc
cwtl
inc
dec
jmp
push
mov
xor
call
movsb
mov
movsb
sbb
out
loope
std
cmp
adcb
ljmp
call
inc
frstor
mov
es
movsb
inc
aas
or
mov
jle
stos
mull
cwtl
fdivrs
and
lods
test
fwait
adc
xchg
cmp
dec
stos
and
or
mov
mov
adc
push
movsl
mov
xor
dec
mov
jae
dec
xor
jnp
cwtl
iret
mov
and
bsr
ss
mov
push
mov
sub
lahf
test
aas
xchg
cmp
mov
ret
inc
lods
dec
sub
push
ljmp
shlb
imul
and
add
adc
mov
mov
fldt
pop
mov
int
sub
rorl
jecxz
xchg
scas
cmc
jl
bound
push
mov
add
or
push
adc
fwait
push
es
adc
dec
jp
call
add
or
fs
mov
mov
mov
mov
mov
mov
mov
hlt
fistps
fld
stc
ret
jno
pop
pop
ret
testb
mov
xor
jg
add
mov
mov
lret
sub
mov
mov
cmp
inc
inc
add
sbb
adc
jg
or
lcall
sub
aaa
jecxz
loop
out
add
mov
cld
xor
daa
inc
jo
bound
xchg
inc
ja
rcrb
adc
push
jl
xchg
icebp
adc
imul
aaa
xor
mov
push
les
pop
xchg
gs
add
hlt
mov
mov
fs
sub
bound
sub
jns
pop
shr
inc
test
cmc
and
mov
pop
arpl
mov
data16
bound
stc
push
adc
fdivrl
dec
pop
cmp
add
push
enter
ret
pop
pusha
je
xor
push
imul
pop
xlat
pop
movsb
pop
mov
add
cmp
mov
xchg
ficomps
mov
movzbl
imul
mov
mov
jae
pop
jbe
dec
nopl
mov
or
call
adc
inc
icebp
push
push
addr16
out
adc
sarb
sbb
xchg
cs
push
or
adc
adc
or
arpl
mov
aaa
lock
fwait
and
cmp
cwtl
or
mov
cmp
mov
jb
sbb
jb
int3
mov
xor
mov
or
lcall
popa
push
xchg
add
mov
movsl
scas
cmp
xor
ret
loopne
movb
dec
aas
xchg
push
fwait
lock
out
scas
inc
call
dec
js
xor
cmp
mov
cmpb
jo
rorb
faddp
jbe
pop
test
sbb
fwait
mov
loopne
and
xchg
popa
lds
lret
or
divb
xor
push
mov
enter
xor
repnz
lock
fwait
xor
add
lret
lds
pop
lret
add
xor
xchg
pop
xor
mov
adc
xor
addr16
or
or
stos
popa
icebp
data16
test
rorb
or
xlat
pop
call
mov
sbb
pop
lea
mov
xor
push
lret
ret
or
jno
and
sub
adc
and
adc
pop
inc
popa
push
sbb
xchg
mov
dec
stc
cmp
addb
dec
ljmp
cwtl
xor
jbe
fucomip
loop
jae
dec
test
inc
push
clc
or
inc
sbb
fnstenv
popa
mov
roll
pop
in
dec
sub
or
add
hlt
in
sarb
lret
mov
or
mov
sub
push
div
sbb
inc
out
dec
les
jp
pop
inc
pop
or
xor
repnz
addb
iret
sub
xchg
cmp
push
in
imul
arpl
dec
lds
lret
cmp
mov
sbb
sub
adc
xor
shll
fcmovne
imul
scas
jbe
call
sbbb
jp
xor
int
pop
dec
pop
mov
fs
sbb
pop
leave
test
cwtl
lds
mov
mov
shlb
arpl
pop
clc
ret
into
cmp
inc
cmpl
mov
call
fldenv
stos
and
inc
mov
scas
sahf
push
mov
flds
mov
mov
mov
test
jne
scas
leave
and
ficoml
push
fildl
jb
popa
out
fisubs
out
repnz
clc
sbb
dec
loop
push
cmc
and
out
add
test
sbbl
ret
cmp
aad
inc
fiadds
ret
mov
dec
sub
sbb
pop
adc
sub
into
addr16
lret
call
xor
repnz
sahf
fwait
icebp
scas
loopne
mov
mov
and
xor
cs
and
and
pop
mov
lcall
or
int
push
push
sub
xor
pushf
sahf
popa
mull
push
or
mov
xchg
mov
or
mov
fwait
inc
das
idivb
mov
mulb
pop
js
cmp
push
xchg
nop
enter
lock
decl
mov
or
pusha
ret
mov
or
xor
dec
mov
adc
inc
push
mov
call
adc
pushf
xor
lock
xchg
sbb
int3
dec
aad
cld
jns
jnp
add
pop
aaa
mov
mov
inc
clc
or
inc
insb
inc
cs
push
fldl
mov
out
jne
call
or
pop
dec
add
bound
lcall
pop
cli
fbstp
inc
outsb
push
inc
add
cs
add
rorb
adc
pusha
cmc
xchg
ficomps
xor
cmc
add
mov
es
and
jnp
ss
mov
xchg
adc
mov
inc
jle
in
int
dec
push
mov
ffree
mov
mull
addl
ja
mov
or
mov
cmc
mov
or
stc
pop
movsb
and
push
les
adc
jg
lcall
and
adc
pop
mov
popa
add
jmp
adc
mov
pusha
jecxz
notb
mov
jbe
ja
mov
mov
add
loope
mov
and
inc
out
shrb
xchg
inc
push
lock
pop
xor
ret
inc
mov
sub
add
call
hlt
and
test
xor
xor
lds
mov
xchg
or
or
pusha
push
xor
test
fwait
int
or
mov
outsb
js
mov
jne
xor
dec
loop
fmull
add
fbld
xor
sbb
in
pusha
int3
xor
xchg
loope
aas
jno
pop
mov
ja
push
ret
test
shrb
mov
dec
jbe
mov
enter
ret
call
inc
add
add
rorb
cli
push
leave
lock
enter
lods
movsb
sbb
test
mov
dec
xchg
cmp
mov
outsl
mov
pop
cmp
mov
cmovle
xchg
xor
jae
and
test
push
mov
iret
xorb
jp
sub
lcall
adc
push
xchg
jno
inc
cltd
add
call
imul
push
cmc
push
or
and
les
pop
fcmove
cvtps2pi
imul
mov
inc
cmpsl
leave
or
mov
out
or
in
lds
add
push
cld
test
xchg
das
mov
sbb
aad
popa
bound
stos
xchg
addr16
jb
pop
push
call
sub
popa
push
xor
xor
jae
mov
dec
pop
fdivrp
push
scas
enter
mov
les
mov
dec
cmp
shll
jb
pop
jne
int
pop
aaa
jnp
or
shlb
int3
xchg
add
test
jnp
or
pop
jns
cli
movb
fwait
add
sub
push
inc
int3
test
xchg
add
ret
lcall
inc
jl
ljmp
test
call
mov
mov
lcall
add
dec
leave
ljmp
jae
lcall
mov
mov
icebp
es
push
adc
mov
dec
aam
repnz
xchg
loop
jle
aad
and
cmpsb
push
push
xchg
jp
xchg
cmp
xchg
sbb
inc
adc
mov
push
aas
sub
ret
add
pusha
inc
adc
mov
sub
add
mov
mov
test
mov
hlt
xor
sub
rcll
rolb
lahf
jae
add
inc
flds
inc
adc
push
add
push
into
sti
je
bound
xor
adc
loopne
mov
mov
arpl
arpl
test
dec
pop
pop
leave
mov
lock
mov
push
xchg
imul
push
xchg
push
adc
sub
mull
push
pushl
inc
cwtl
shrl
adc
dec
or
or
sar
mov
lret
cmpsb
inc
mov
ljmp
call
dec
hlt
stc
dec
add
stos
dec
enter
push
mov
mov
inc
and
clc
lock
loopne
lods
mov
dec
inc
xor
icebp
pop
xor
stos
pop
pop
mov
xchg
dec
cwtl
mov
outsl
push
jg
dec
loop
pushl
xor
rcrl
lds
xchg
outsl
add
and
xlat
push
fnsave
mov
dec
sbb
test
mov
dec
test
dec
and
mov
js
sub
fdivrs
or
mov
mov
cmp
lahf
xor
outsl
fwait
lds
lret
clc
mov
mov
push
andb
sub
push
sbb
ds
cmp
sub
addr16
adcb
mov
out
into
mov
xchg
lcall
pop
jnp
inc
aad
and
pop
jb
into
mov
js
cmp
call
and
mov
repnz
and
insb
push
adc
testb
lods
jp
and
push
inc
push
jp
call
or
test
arpl
movsb
inc
push
ret
imul
decl
ja
mov
xor
insl
in
jp
dec
push
jbe
fisubrs
xchg
shlb
ret
jb
mov
adc
int
in
aam
pop
add
xor
call
xchg
or
fstpt
xchg
dec
xchg
xchg
cmpsb
mov
jl
mov
add
pop
dec
je
mov
mov
outsb
cmpsb
aas
aas
xchg
les
roll
push
out
and
ss
clc
adc
shlb
dec
or
add
push
mov
jb
cmp
inc
xchg
bound
loope
iret
cmpsl
xor
movsb
sbb
push
jl
jg
push
and
mov
es
cs
jp
fists
push
xor
adc
add
mov
dec
adc
mov
fnsave
dec
dec
les
jae
sub
sbb
aas
enter
inc
insb
sbb
pop
es
jae
cld
das
or
add
loope
add
mov
sbb
push
insb
movsb
stc
movsl
jb
stc
and
fwait
xor
xchg
pop
mov
xor
pop
ja
and
pop
shrl
outsl
sub
push
adc
mov
lds
in
inc
icebp
adc
leave
sbb
and
ds
fsubrl
scas
adc
dec
stos
or
mov
and
sbb
in
pop
mov
or
mov
repz
add
test
inc
test
jae
adc
or
push
cmp
inc
add
or
or
adc
or
out
add
dec
adcl
mov
in
sub
jg
sub
negl
stos
xchg
cmpsb
jle
out
jle
int3
add
mov
dec
orl
nop
aam
add
push
idivl
mov
jg
test
jmp
fwait
cmp
outsb
add
into
mov
scas
add
jae
fwait
in
cwtl
test
lds
inc
pop
add
sbb
pop
test
dec
leave
ret
aaa
fcompl
jno
push
movsb
push
in
mov
and
add
bound
test
pop
outsl
cmp
add
jae
mov
and
outsl
inc
sbb
lock
xor
sub
add
adc
clc
push
in
sarl
add
test
mov
jle
pop
bound
mov
jecxz
adc
fidivrs
xchg
and
movsl
xchg
pusha
mov
lret
add
push
std
loope
sbb
or
dec
jns
outsb
ja
bnd
lea
push
popl
mov
add
adc
fwait
pop
jno
inc
mov
add
mov
push
jl
out
lds
or
lock
cmova
dec
movntps
ret
add
add
add
or
and
fs
mov
sbb
or
jge
sbb
mov
in
mov
jae
lea
scas
outsl
test
mov
push
lock
lds
push
das
sbb
xchg
push
stos
fcomip
fidivrs
aaa
jecxz
ss
dec
add
out
mov
insb
lahf
lea
iret
mov
xchg
push
outsl
out
adc
ds
pushf
fs
je
orb
loopne
gs
push
outsl
testl
imul
mov
adc
pop
shrb
arpl
mov
es
push
aad
mov
push
lea
fs
iret
push
inc
faddl
jbe
or
sub
imul
outsb
pop
jns
ja
add
add
mov
mov
in
push
insb
inc
movsb
inc
sbb
jne
icebp
pop
lods
mov
cmp
lds
movb
or
les
add
gs
adc
in
dec
mov
mov
push
lea
ja
mov
add
push
dec
add
xor
push
fisttps
in
cwtl
rolb
movd
neg
and
lds
pushf
aam
add
sti
mov
or
ja
subl
xchg
std
xchg
add
shlb
idivl
test
sub
bswap
in
dec
add
mov
sbb
mov
sbb
std
lock
cltd
fwait
xor
sub
jnp
or
and
add
adc
cmp
mov
nop
insl
dec
dec
shll
inc
shrb
inc
and
lret
jecxz
mov
sub
test
mov
adc
sbb
mov
lock
ret
mov
and
rolb
cli
jecxz
inc
add
sub
cmp
aam
pop
fisubrs
sub
dec
fcoms
push
push
mov
jmp
rolb
ss
fwait
xor
icebp
mov
push
jp
mov
mov
mov
das
lea
xchg
lods
cmp
andb
sbbl
push
inc
data16
push
mov
arpl
lahf
add
or
push
clc
xor
adc
and
loope
rolb
sbb
jnp
lcall
dec
and
or
nop
ficomps
or
push
add
sar
aam
mov
popf
push
mov
pop
jae
nop
in
push
clc
sbb
jae
andl
sbb
jnp
fwait
or
out
adc
add
sbb
movsb
cmpsl
or
fisubl
int
xor
vrcpps
ds
add
add
inc
jl
pop
ja
stc
std
js
or
or
ret
jl
push
insl
in
push
pop
loope
loope
jns
push
imul
or
sbb
std
mov
jae
test
mov
sub
adc
xchg
xor
pop
add
nop
in
push
dec
rolb
fwait
push
xchg
insl
inc
data16
xchg
and
mov
out
mov
test
das
push
inc
jb
maskmovq
mull
jo
inc
lret
adc
movsb
ja
scas
and
es
cmp
inc
mov
jbe
clc
ds
stos
fucomp
mov
push
outsb
test
push
mov
mov
pushf
xchg
mov
push
inc
arpl
inc
mov
cmpsl
loope
mov
test
je
loop
xor
cld
lcall
aam
fiaddl
clc
les
cmp
mov
in
mov
push
mov
pop
dec
addl
jae
mov
sub
in
int3
test
push
push
ja
inc
dec
lea
or
int3
lds
js
mov
jno
das
ret
sub
jmp
mov
addl
push
inc
stos
scas
mov
push
push
push
ss
mov
aam
fmuls
nop
mov
xor
fdivs
cld
push
imul
bound
mov
test
jmp
sbb
mov
lds
add
add
sbb
cmp
es
mov
outsl
xchg
nop
or
push
inc
or
adc
jno
dec
cmp
sbb
movsl
cmp
sbbl
aaa
jle
call
popf
jne
add
mov
jecxz
or
lcall
sbb
jnp
jbe
mov
pop
fimuls
sub
cmp
ficomps
and
xchg
or
call
pushf
cmc
adc
cld
clc
ds
pop
rcll
mov
imul
mov
sbb
xor
push
mov
jmp
adc
sub
xchg
or
adc
and
pusha
pop
push
jno
outsb
inc
jl
fsub
dec
pop
sti
ljmp
sbb
test
orl
orl
les
subl
dec
and
dec
cwtl
inc
xlat
pop
dec
jp
fiadds
imul
test
sub
shr
insb
loop
push
add
ret
loop
mov
rorl
andl
fnstenv
cmpb
cmp
fisubl
shrb
mov
jl
rcll
push
fwait
xor
adc
bound
lahf
and
xchg
movsb
sbb
pusha
sbb
and
jg
cmpl
or
orl
adc
push
push
dec
gs
das
sub
test
add
or
lret
stos
dec
cltd
dec
push
or
jge
popa
add
or
js
cwtl
adc
mov
jbe
stos
jns
rclb
js
addr16
mov
out
in
ror
add
xor
jmp
movsb
jnp
xchg
cmp
or
cmp
pop
pop
fsubl
inc
xor
push
adc
mov
daa
aad
fmull
jnp
mov
jmp
push
in
xchg
stos
fcoms
mov
sub
mov
xchg
dec
jb
lret
insl
and
dec
adc
cwtl
fistl
in
sahf
cs
mov
fildl
lods
out
or
mov
fcoml
adc
jbe
in
xchg
fsubs
push
in
out
lock
inc
je
stos
addl
outsl
pop
mov
xor
mov
add
xor
xor
outsb
push
pcmpgtb
cmp
adc
loopne
fs
fwait
int
jbe
cwtl
jns
bound
cwtl
or
jmp
lahf
push
adc
scas
and
and
inc
les
add
sbbl
sbb
cmp
ja
adc
fildll
addl
lret
dec
cmpsb
jo
jge
mov
mov
es
dec
pop
push
sbb
cwtl
mov
lahf
adc
mov
jmp
fdivrl
cmp
sbb
xor
adc
cs
adc
je
cmp
daa
mov
pusha
movsb
pop
mov
lahf
and
and
cmpb
xchg
mov
test
and
mov
outsl
fwait
jno
hlt
cmpsb
add
mov
filds
cmp
add
fwait
push
add
xchg
or
clc
inc
jne
mov
aam
mov
or
mov
pop
pop
cmp
dec
fsubl
dec
shl
in
jle
mov
xor
fdivrl
pop
adc
xorl
fdivs
pusha
xchg
fwait
inc
pop
fsubrs
dec
js
mov
pop
pop
cld
test
add
push
dec
cmp
inc
mov
pushf
sbb
fs
jo
push
adc
fisubs
mov
shll
xchg
lcall
dec
mov
repz
xchg
js
jp
cmp
in
mov
jo
push
insb
clc
leave
lahf
sub
dec
xor
dec
push
movsl
or
ret
clc
imul
inc
dec
pusha
xchg
jnp
fnstenv
add
fwait
push
in
push
mov
jp
and
push
pop
xor
mov
dec
sub
ret
cmc
insb
mov
jns
lods
push
data16
xor
inc
je
push
leave
cwtl
loop
pop
cmp
call
ss
xor
iret
inc
dec
or
cs
je
xchg
fwait
sbbl
jecxz
stos
mov
lds
xor
mov
int
adc
adc
cld
roll
fld
es
sbb
mov
popf
arpl
faddp
lods
mov
push
lcall
mov
xchg
mov
iret
leave
and
sub
jp
and
outsb
iret
dec
scas
fldenv
xchg
bound
adc
jmp
call
test
inc
jle
fs
sbb
in
push
test
rcll
out
pop
lahf
xor
push
cld
pusha
lods
xor
jns
dec
add
mov
mov
iret
push
pop
jnp
dec
lods
mov
cwtl
add
nop
or
cmp
bound
adc
xor
adc
icebp
push
pop
cmpsb
mov
je
jne
in
dec
lods
into
jg
lret
bound
mov
ss
jne
push
cmp
add
dec
mov
les
mov
adc
push
mov
fistl
dec
cmc
mov
aam
addb
bound
pop
xchg
jns
imul
inc
clc
mov
or
in
lock
xchg
xor
mov
cld
inc
cwtl
mov
mov
dec
cwtl
loope
push
insl
insb
xor
rolb
fisubs
jbe
xchg
pop
sub
popa
xchg
inc
out
mov
enter
js
push
sbb
jl
push
inc
pop
cmp
cmp
inc
inc
imul
mov
imul
inc
iret
jb
sbb
add
enter
int3
es
jp
push
jp
jnp
adc
loope
or
ret
aas
mov
push
jno
mov
xchg
sub
andl
pop
lock
shl
sub
inc
mov
cli
mov
lahf
js
add
pushf
add
and
sarl
test
mov
dec
js
ss
clc
mov
push
sbb
and
pop
cld
or
xchg
orl
and
xchg
outsl
ja
jb
js
mov
imul
cmp
dec
les
add
fsubr
or
mov
sub
inc
push
push
sub
outsw
imulb
add
inc
dec
cmpsl
mov
insl
mov
js
cmc
loopne
jne
loopne
dec
std
or
addl
mov
mov
rorl
push
leave
rorl
data16
mov
cwtl
inc
stos
pop
lods
push
inc
sub
cs
mov
pop
mov
outsl
dec
dec
leave
jp
xchg
dec
inc
in
jecxz
out
mov
and
shlb
mov
push
push
movsb
dec
dec
and
mov
jo
loop
jecxz
les
and
loop
out
add
ret
sub
xchg
inc
imul
mov
push
arpl
and
push
fcmovb
dec
push
scas
sub
repz
push
mov
xchg
mov
arpl
jo
inc
xor
lret
andl
mov
push
testl
push
dec
push
dec
test
inc
xchg
inc
dec
aaa
add
and
mov
jns
dec
je
cld
lock
test
sub
sbb
outsb
inc
push
in
in
stos
lods
adc
dec
cmp
add
inc
add
cwtl
icebp
cmp
push
mov
sar
jns
pop
das
inc
sub
cmp
sub
test
jbe
push
jg
mov
or
ljmp
mov
pushl
decb
mov
push
dec
mov
lea
mov
pop
sub
mov
xor
push
sbb
sub
lods
idivl
int
push
adc
into
push
outsl
inc
cmc
dec
dec
push
inc
mov
push
add
xchg
hlt
push
popa
xchg
cwtl
dec
jb
mov
imul
mov
push
xor
pop
add
test
push
gs
cmp
and
fs
ret
popa
dec
mov
lahf
jns
mov
jge
jbe
mov
xchg
adc
sub
addl
and
or
dec
je
imul
or
jae
adc
stc
jne
stc
pop
mov
add
mov
loopne
loope
sub
add
shrb
in
loop
lret
or
mov
leave
jg
mov
xor
cmp
adc
xor
jbe
xor
cmpsl
mov
xchg
pop
sbb
pop
xor
adcb
adcb
mov
jnp
inc
mov
add
add
xor
sbb
inc
outsl
push
adc
cmp
les
mov
nop
push
sub
push
push
cli
push
pop
movsl
adc
pop
pushf
mov
sub
mov
lcall
xchg
and
mov
test
data16
or
xor
sub
nop
inc
scas
cld
add
js
xor
push
clc
jae
pop
dec
push
shlb
cmp
aaa
sub
dec
cmp
push
ret
dec
push
or
adcl
lock
enter
outsb
adc
data16
hlt
test
jnp
mov
xchg
les
call
inc
or
stos
fs
inc
ror
int
int
pop
int
mov
add
push
adc
push
push
cs
xchg
addr16
xchg
jbe
lea
or
repnz
jno
mov
adc
dec
int3
aad
cld
pusha
inc
adc
mov
or
inc
lods
pop
outsl
xor
mov
or
insb
xor
fs
incl
fimull
push
add
and
imul
xor
mov
dec
pusha
out
negb
xchg
fwait
scas
adc
aam
xchg
mov
sub
xor
jnp
cmpsb
dec
dec
js
cs
outsl
imul
aas
push
ss
test
inc
test
call
mov
push
aas
push
mov
lahf
fwait
push
lahf
aam
or
stos
push
xchg
jp
add
xor
mov
push
mov
cmp
fldl
scas
sub
das
mov
mov
dec
xor
jb
ds
pop
cli
push
in
aad
aad
pop
adc
push
push
test
roll
push
jo
cwtl
push
dec
test
push
gs
xor
sbb
xchg
lods
dec
add
jne
cmp
xor
insb
xor
ja
push
mov
dec
push
pop
jb
enter
sbb
std
lahf
insb
lock
imul
jb
sbb
imul
in
mov
add
test
pop
sub
in
ret
jnp
sub
test
add
sbb
bound
sbb
sti
nop
mov
mov
neg
or
movsb
pop
xchg
or
mov
or
fs
outsb
cmp
xchg
mov
mov
test
aam
xchg
aas
mov
popa
add
stos
frstor
mov
or
fwait
mov
cmp
dec
cwtl
lock
sarl
ds
fwait
imull
dec
sub
mov
out
cli
jg
adc
or
inc
jo
jo
sbb
sbbl
push
mov
jbe
andb
mov
arpl
xor
mov
push
outsl
add
adc
add
stos
adc
jbe
rclb
mov
cs
inc
dec
fmuls
mov
jno
pop
movsl
outsl
push
dec
loopne
test
iret
sbb
lcall
mov
jge
outsb
repnz
adc
dec
inc
mov
add
mov
cmpsb
sbb
dec
jg
push
test
fsubr
or
js
test
dec
and
mov
xchg
adc
and
es
es
dec
jns
xor
push
cmc
jnp
push
daa
jl
test
inc
mov
fisubrs
sti
xlat
sbb
mov
jae
and
and
add
dec
inc
and
ljmp
lock
ds
in
dec
test
and
jle
pushf
dec
jno
adc
xchg
mov
mov
addr16
popa
xchg
jnp
popa
push
adc
sub
sbb
std
sub
lock
insb
outsl
sbb
cmp
ja
imul
ja
inc
arpl
xchg
or
pop
lods
xor
pop
and
popa
cmpsl
dec
outsb
test
iret
mov
pusha
dec
xchg
pop
xchg
push
cmc
data16
loope
sbb
push
lods
cmp
addl
mulps
enterw
outsl
cltd
int3
inc
xor
js
incl
sbb
xor
roll
repnz
and
in
mov
xor
dec
lock
push
bound
push
mov
add
lods
adcb
movsb
push
and
xor
sbb
leave
dec
mov
arpl
push
pushf
mov
cs
iret
loop
rcrb
in
test
lds
sbb
xorb
dec
mov
pop
mov
ret
inc
sub
stc
movsb
mov
sbb
xor
fisubl
sbb
out
dec
dec
or
js
sub
jle
js
aaa
test
add
in
lret
daa
lds
js
cmpb
insb
fdivs
or
mov
push
sahf
jge
xor
push
mov
test
data16
pop
mov
hlt
roll
mov
mov
and
mov
and
rcll
in
inc
pop
scas
mov
aaa
fs
lea
pop
push
xchg
sbb
data16
imul
clc
cmp
mov
rolb
call
pushf
cmp
mov
pop
int3
dec
mov
add
mov
lds
or
mov
int3
es
mov
sbb
add
stos
pop
mov
mov
mov
sahf
jno
lods
xchg
jo
and
dec
dec
xchg
inc
mov
push
mov
xchg
jnp
movsl
add
sub
push
add
fisubrs
outsb
xor
pop
sbb
sub
in
mov
push
ss
inc
andl
test
mov
cmp
and
add
aaa
push
dec
mov
decb
jl
test
jae
cs
imul
out
push
mov
cmp
xor
lds
mov
mov
cmp
mov
divl
jbe
xchg
pop
jl
imul
addb
lock
test
lds
inc
adc
fbstp
pop
mov
push
mov
mov
test
sbb
xorb
mov
int
inc
push
sarl
jge
adc
cld
mov
scas
dec
sbb
sub
sbbl
dec
mov
cmp
push
jns
or
mov
mov
dec
shlb
pop
adc
add
les
jp
xchg
aad
mov
test
inc
adc
lret
jno
pop
nop
lods
jge
mov
and
add
in
inc
rol
ljmp
sub
fwait
leave
and
lds
mov
shlb
cmpsb
or
xor
xor
rorl
int3
sub
jmp
push
jns
mov
dec
xchg
or
or
mov
push
sbb
int
ds
pusha
push
xor
sub
test
xor
ljmp
bound
push
daa
inc
std
xlat
jle
mov
push
pop
loopne
push
rcll
inc
add
scas
xor
dec
and
pusha
xlat
adc
sbb
aaa
lahf
pop
fmuls
push
inc
or
sahf
pop
shr
test
hlt
add
inc
mov
je
lods
aam
lcall
adc
inc
xchg
pop
cmc
or
dec
push
or
inc
int
lds
icebp
or
shrl
jmp
dec
cwtl
inc
xchg
mov
int3
addb
outsl
xchg
mov
mov
mov
pop
leave
add
mov
adc
push
pop
je
jb
add
ret
inc
inc
mov
xchg
rcll
mov
js
mov
mov
inc
inc
jmp
cwtl
adc
inc
mov
sbb
pop
nop
les
or
cmc
data16
jle
clc
push
je
mov
enter
sbb
add
insl
push
ret
add
push
mov
adc
ds
dec
dec
enter
xor
jns
dec
xchg
es
and
insb
inc
xchg
dec
shlb
inc
or
shlb
dec
pop
lret
call
cmp
xchg
push
xor
or
sub
imul
add
movsl
hlt
int3
fimull
imul
push
int
insb
push
mov
pop
movsb
sbb
cwtl
dec
ljmp
stos
pop
test
dec
scas
mov
arpl
stos
inc
jns
xchg
xchg
lea
bound
xchg
cmp
cmc
in
aam
cld
inc
sbb
ljmp
dec
push
sbbb
push
inc
dec
sub
or
xor
ljmp
setns
lcall
mov
add
rol
sub
xor
neg
ror
xor
inc
dec
mov
sub
lock
jp
sub
xor
inc
sub
dec
adc
cmp
push
push
push
test
add
aad
xchg
adc
fsubr
lahf
arpl
dec
inc
je
cmp
mov
aad
xor
cmc
es
mov
add
adc
mov
cmpl
pop
or
pop
mov
rolb
cmpsb
sbb
data16
push
movsb
insb
adc
bound
cmpsl
negl
clc
pop
or
js
test
imul
or
das
mov
popa
es
insb
mov
rorl
and
jl
push
add
push
inc
ficoms
adc
xor
dec
cmp
arpl
dec
lods
cmp
pop
loope
push
mov
fistpll
jle
add
dec
add
sbb
dec
mov
dec
push
dec
dec
jp
jne
ss
add
xor
inc
stos
nop
sub
lds
cmpsl
mov
push
cs
insb
iret
sbbl
rcrb
jbe
sbb
xchg
rcll
jo
repnz
dec
jle
xor
xor
dec
nop
in
push
xor
inc
cmp
sub
data16
jp
adc
cmpsl
push
fisubs
ss
es
push
mov
mov
xchg
mov
mov
xor
mov
in
pop
sbb
add
pop
imul
fsubl
fnstsw
sahf
movsb
dec
jns
arpl
push
nop
mov
int3
xchg
leave
aaa
sbb
xchg
sub
add
mov
mov
and
pop
dec
mov
hlt
xor
or
popl
fildl
sete
lret
cmp
mov
dec
dec
dec
imul
int3
in
mov
mov
addb
sub
data16
rcll
mov
cwtl
xor
and
dec
shlb
bound
cmc
adc
lcall
jo
rcll
ss
stc
bound
pop
sub
dec
xchg
lods
inc
nop
fidivrs
dec
mov
push
stos
lds
push
nop
adc
sbb
es
add
sbb
rcll
mov
in
adc
js
push
fmuls
outsl
push
pop
insl
or
les
andl
dec
les
mov
add
setbe
jae
cmc
sbb
or
test
xor
jmp
cmpsl
call
cmp
js
fistl
popf
dec
inc
test
imul
shll
xor
pop
add
test
add
in
sbb
movsb
or
add
popf
cmpsl
bound
pushf
jo
int3
fs
mov
je
xlat
pop
push
jp
fisubl
ret
inc
adc
and
adc
adc
ds
jnp
pusha
xchg
sbb
xor
mov
je
mov
jae
jno
shll
pusha
lods
andl
mov
jb
aaa
outsl
arpl
or
xor
pop
adc
int3
mov
arpl
sub
lods
xchg
mulb
push
out
sbb
popa
sbb
testl
push
rcll
iret
add
jns
push
mov
mov
push
je
subl
aam
jp
shlb
jo
push
dec
jle
lods
inc
jb
imul
outsl
das
jns
sbb
jnp
les
aam
out
cmp
mov
mov
ficoms
pushf
xor
mov
pop
in
jb
cmp
jne
dec
fadds
jg
push
pop
xor
popa
rclb
outsl
mov
mov
addb
pop
dec
lcall
mov
fs
in
add
xchg
mov
fwait
icebp
pop
pop
fimull
dec
rol
xchg
sbb
xchg
sbb
push
mov
into
inc
mov
push
ljmp
scas
dec
add
push
dec
mov
jne
or
cmpl
cmp
sbb
inc
dec
outsb
fmull
mov
push
adc
fs
pusha
push
das
push
insl
leave
lahf
xor
dec
int3
jbe
dec
ret
fwait
xor
cmp
mov
ror
or
add
cld
bound
sbb
mov
mov
leave
mov
insl
loope
shlb
out
jo
aam
movsl
mov
inc
or
test
movsl
sbb
mov
push
jbe
adc
icebp
jbe
jg
mov
inc
jp
pop
fistl
fiaddl
fstpl
inc
xor
daa
or
movsb
fldenv
jno
testb
stos
sahf
or
jne
rcll
test
mov
dec
int3
push
dec
jge
xchg
outsb
jge
imul
dec
dec
lahf
jne
es
jb
or
mov
sub
xor
mov
mov
xor
push
mov
xchg
xchg
mov
mov
daa
xchg
pop
shlb
push
jo
mov
adc
add
mov
adc
fwait
jnp
xchg
adc
push
insb
int3
dec
mov
adcb
inc
and
add
jns
or
gs
ss
outsb
add
data16
mov
inc
shl
push
shll
xor
movsb
popf
adc
dec
mov
and
daa
aaa
add
mov
cmp
adc
pusha
push
push
add
xchg
pop
xor
adc
adc
test
bound
cltd
xchg
xchg
pop
cwtl
add
sbb
push
popa
sbb
mov
inc
pop
pop
mov
xlat
bound
mov
adc
sbb
add
mov
mov
and
lods
xor
and
jne
sbb
pusha
push
or
dec
add
dec
push
inc
xchg
test
dec
mov
mov
aaa
dec
enter
es
mov
fwait
test
mov
test
add
aas
mov
popf
or
jp
push
inc
push
or
inc
nop
or
mov
js
loop
push
outsb
xchg
iret
push
mov
push
push
stos
push
fldcw
lods
inc
test
lods
fdivrs
pushf
sbb
aad
pusha
inc
sub
fwait
add
es
xchg
pop
cmp
mov
daa
dec
std
jl
push
clc
add
insl
clc
pop
hlt
dec
xor
popa
xor
jbe
xor
inc
push
push
pop
ljmp
test
add
movsl
cmp
push
xor
in
lds
stos
push
test
test
push
rclb
inc
sbb
adc
mov
subb
daa
enter
mov
xor
cmp
pop
je
add
sbb
mov
arpl
dec
xor
jge
test
daa
add
or
xor
inc
cwtl
xor
pushf
pop
nop
mov
arpl
sbb
out
xchg
inc
gs
gs
rorl
test
ficoml
std
mov
or
insl
jae
jmp
push
push
xor
cltd
repnz
cmp
test
or
dec
xchg
xor
bound
inc
dec
or
jg
inc
addb
xchg
js
and
outsl
push
les
lods
adc
pop
insl
mov
cmp
cmp
imul
fwait
les
adc
xor
and
fsubrp
int
adc
mov
adc
stos
subb
leave
arpl
addr16
jbe
xchg
mov
cwtl
movsb
popa
push
mov
andl
sub
mov
push
sbb
aad
push
aaa
mull
adc
adc
and
pop
xor
cmc
and
hlt
mov
inc
jne
imul
js
test
and
mov
push
mov
ret
subl
jb
test
bound
aaa
ljmp
mov
xor
mov
sbbl
or
sbb
repz
lds
fiadds
data16
mov
inc
xchg
or
es
in
cmc
adc
aas
push
mov
cmpl
lods
pop
pop
jne
xchg
inc
in
add
ss
pop
push
cmp
mov
out
addr16
aaa
lods
pop
sarl
out
lds
push
scas
dec
movsl
pop
push
cmc
bound
js
pop
scas
test
push
test
pusha
dec
mov
jg
push
pop
xchg
jbe
cwtl
jno
ja
and
jo
cmp
pushf
imul
shlb
mov
pop
cltd
insl
push
mov
ret
mov
dec
jecxz
mov
mov
xor
push
adc
gs
inc
sarb
sarb
ja
add
call
lods
push
cmp
fadds
dec
lock
mov
mov
call
mov
sbb
pop
outsl
pop
enter
nop
leave
pushf
jbe
ds
movsb
xchg
aam
jae
mov
add
ficomps
test
push
xchg
pusha
pop
xor
lods
or
mov
lret
dec
das
add
add
add
icebp
adc
push
xchg
aas
xchg
pop
sbb
push
push
sub
mov
popf
or
add
hlt
add
mov
adc
int
adc
mov
or
loopne
pop
xor
iret
and
inc
cmp
sbb
pop
jb
sbb
mov
std
and
push
push
addr16
push
push
sbb
push
push
pop
int
pop
rol
pop
mov
cli
push
adc
shll
sbb
adc
pusha
adc
js
mov
lret
loop
adc
or
aas
push
cmp
sbb
lock
loopne
dec
dec
inc
inc
jo
js
push
mov
shrb
mov
test
ja
jl
add
testb
sbb
inc
lods
push
andl
dec
add
insl
and
movsb
pop
test
push
adc
xchg
repnz
arpl
and
int3
hlt
cwtl
jnp
aas
adc
jo
ljmp
in
shll
jne
xchg
aaa
xor
incb
inc
ja
or
jmp
pop
std
adc
mov
and
and
loopne
shll
cmpsl
xchg
sub
push
fcoms
mov
andl
adc
int3
bound
js
shlb
imul
adc
mov
cmp
dec
sub
sbb
and
outsb
pop
sbb
mov
je
jbe
inc
int3
lcall
cwtl
aaa
imul
je
or
xor
xor
idiv
sub
loopne
sub
gs
je
pop
xchg
roll
push
xchg
inc
pop
sarb
adc
clc
dec
mov
push
adc
pop
fsubs
cltd
mov
cmc
sbb
lods
mov
mov
add
out
lock
or
inc
daa
lock
insb
or
sub
mov
pop
pusha
movsl
pop
pusha
loopne
xor
insb
es
orl
pop
inc
ja
cmpsl
fmull
lods
lcall
or
push
add
or
adc
xor
loope
mov
roll
and
lock
fbstp
jns
rcrl
mov
and
clc
inc
dec
je
aaa
pop
insb
jmp
push
cwtl
mov
push
sub
out
mov
out
data16
or
and
pusha
xor
out
add
pop
ljmp
dec
loop
mov
es
mov
xor
mov
repz
loopne
addb
scas
incl
pop
aam
pop
out
pop
test
adc
lock
fstpt
sahf
lret
jecxz
pop
and
xchg
push
sub
push
adc
cwtl
fdivrs
gs
aad
add
bound
jl
cmp
aaa
add
jae
inc
pop
pop
shlb
jo
imul
outsl
shlb
xchg
sahf
pop
dec
xchg
rolb
or
les
gs
faddl
in
int
lock
imul
daa
int
xchg
bound
fsubrl
lahf
and
add
nop
cmp
lds
mov
xchg
xor
mov
adc
aaa
clc
add
testb
cmpsb
decl
jb
fiadds
dec
mov
fisttps
andb
loopne
add
int3
push
shlb
mov
pop
jg
or
insl
cs
mov
add
ss
addr16
data16
xchg
inc
jecxz
movsb
imul
dec
push
and
jg
les
push
pop
lahf
nop
icebp
mov
mov
icebp
sbb
mov
add
pop
adc
loop
add
movb
or
fstpt
mov
sbb
inc
mov
dec
cld
mov
push
inc
dec
sbb
mov
add
push
pop
push
lods
sub
jg
incl
shrl
inc
sub
cmp
mov
mov
xor
hlt
add
aam
inc
aaa
mov
mov
and
mov
cmp
std
dec
mov
outsl
call
adc
sarl
or
mov
insb
and
cmp
add
xor
inc
or
mov
add
xorl
add
inc
pushl
xchg
fiaddl
outsb
nop
inc
pop
sbb
cltd
add
lret
jg
xor
out
filds
fcmovnu
fwait
xchg
shr
sub
push
add
add
sbb
jmp
dec
mov
xor
in
add
mov
incl
mov
cmc
xchg
jecxz
lds
pushf
add
fnsave
arpl
fnstsw
sti
mov
push
out
imul
in
es
xor
pop
mov
outsl
adc
jmp
arpl
and
stos
xchg
lock
sbb
outsb
add
or
insl
xor
dec
sahf
adc
mov
add
int3
sbb
stc
cltd
lret
neg
adc
sub
push
enter
fs
xor
divb
cld
mov
or
loop
dec
mov
popf
mov
nop
sbb
inc
js
in
cwtl
pusha
outsb
add
mov
mov
sarb
mov
dec
or
add
push
mov
dec
out
inc
push
jg
mov
les
xor
clc
in
inc
in
xor
jno
xor
dec
popl
pushl
inc
add
inc
inc
leave
out
lock
movb
nop
xchg
mov
mov
jle
cmp
loop
add
cmpsl
stos
data16
pusha
jle
cwtl
or
inc
mov
inc
call
mov
xchg
leavew
pushf
push
pop
mov
add
pop
int
add
and
pop
incl
inc
mov
mov
and
inc
daa
test
inc
push
test
jg
sub
mov
add
jp
lods
loope
inc
imul
jg
mov
add
adc
andb
fidivl
jle
jnp
bound
sbb
jo
or
pop
enter
xor
xchg
cli
mov
jg
mov
mov
test
push
or
jbe
loope
adc
adcb
test
pop
cli
dec
add
or
and
mov
jg
mov
pusha
mov
adc
adc
add
fiadds
aas
inc
inc
push
clc
int
movsb
out
inc
imul
mov
daa
add
out
adc
adc
es
mov
in
dec
and
sbb
mov
hlt
mov
add
add
outsl
mov
jl
adc
xor
inc
iret
ja
sub
ss
scas
push
clc
dec
lock
inc
loope
cld
fistl
repnz
jbe
cmp
or
in
not
jg
test
mov
pop
push
xor
outsl
fdivs
pop
xchg
mov
pop
add
outsl
mov
jge
lret
mov
std
lds
cltd
and
lock
fldt
mov
inc
aas
xchg
aam
out
or
or
in
inc
adc
or
rolb
aad
pop
jp
sahf
dec
inc
fs
stos
adc
add
or
push
adc
push
mov
je
repnz
mov
inc
pop
rolb
sub
sbb
idiv
lods
aam
mov
jp
jmp
pop
adc
pop
add
sbb
pop
loop
dec
sbb
xor
mov
mov
pop
pop
xchg
mov
decl
push
mov
add
ds
mov
dec
shl
jg
fldl
push
retw
mov
inc
mov
inc
cmpsb
fcmovne
inc
out
pop
dec
stos
adc
movl
sbb
scas
cvtps2pd
add
les
mov
mov
jle
and
sbb
out
fisubl
add
inc
xor
dec
xor
push
jne
int
outsl
cmp
lret
loop
jp
lock
sbb
pop
cs
loopne
sub
sbb
sti
fistpll
lret
imul
cld
push
jmp
pop
ja
cmp
imul
addr16
mov
icebp
inc
es
sbb
or
or
mov
sbb
pop
mov
cld
pop
daa
sub
cmp
pop
mov
outsl
std
rolb
jns
dec
mov
popl
sbb
push
leave
inc
xor
inc
sub
or
fucomi
fistps
push
or
sub
pop
jle
inc
dec
xor
jg
aam
dec
repnz
orl
insb
jb
mov
jmp
and
data16
cld
mov
ljmp
dec
push
inc
mov
adc
cld
in
dec
pop
adc
add
hlt
adc
pop
cmp
push
mov
movsl
fstpt
adc
rcr
pop
inc
cmpb
push
adc
dec
mov
aad
push
cltd
add
sbb
lea
aas
cmp
pop
test
shrl
nop
dec
test
push
sbb
dec
xlat
sbb
fabs
add
insl
mov
add
xchg
xchg
stc
je
jle
arpl
inc
jmp
add
in
imulb
int3
rcl
testb
jg
test
fnstenv
addr16
or
fldl
xchg
and
pop
sti
mov
sub
jg
insb
add
cli
lods
leave
mov
adc
xchg
mov
jnp
test
fwait
repnz
add
add
popl
mov
rcl
mov
subl
mov
fildl
sbb
xchg
popf
hlt
cs
fbstp
sub
fwait
adc
call
mov
jae
sarb
das
adc
cmpsb
inc
sub
pushl
test
mov
lods
xor
lods
inc
cltd
ret
testb
scas
and
cmp
lahf
subb
mov
call
mov
dec
pop
stos
xor
arpl
into
mov
ffreep
idivb
inc
jnp
xor
mov
mov
cmp
lds
es
aaa
push
popa
outsb
fmul
fidivs
fsubrl
les
nop
rorl
jecxz
add
les
inc
mov
aad
pop
scas
and
add
pop
mov
lock
cmp
mov
mov
cmp
lcall
loopne
fldt
in
mov
mov
fildll
inc
add
sbb
xchg
loope
cmp
cmp
pushf
sqrtps
add
push
popf
add
cmc
js
dec
addl
outsl
xchg
push
pop
sub
pop
mov
pop
lcall
jnp
mov
push
cltd
and
jno
rcrb
fistpll
mov
test
es
mov
popl
mov
in
jno
loope
repz
mov
push
loope
mov
mov
jecxz
mov
mov
js
les
mov
xchg
mov
pop
scas
add
sti
mov
mov
int
je
push
loope
pop
rdpmc
sbb
jnp
ds
pusha
stos
addr16
iret
xchg
loopne
jo
in
jno
adc
add
sti
adc
filds
pop
pop
ror
cltd
xchg
fistpll
push
xlat
mov
imul
aaa
fidivrs
in
mov
mov
xchg
and
adc
pop
lahf
adc
je
les
test
insb
dec
mov
loope
addr16
mov
ficoms
xor
cmp
inc
xchg
loope
dec
push
jnp
mov
add
push
aas
mov
daa
adc
add
arpl
xchg
or
push
addl
stos
stos
jno
or
mov
bound
rclb
out
mov
mov
fdivr
jbe
inc
push
push
or
scas
pop
dec
inc
movsb
nop
ds
add
pop
iret
dec
lret
xchg
dec
sub
ret
outsl
insb
jmp
jle
aam
mov
push
xor
jg
add
cmp
lea
je
sub
push
stc
inc
std
imul
fldl
fnsave
sbb
mov
in
out
ret
ljmp
inc
mov
jo
out
add
jb
test
cs
mov
out
cmpsb
jo
mov
inc
test
sub
jnp
or
test
xchg
xor
mov
add
dec
call
push
xchg
mov
stos
adc
mov
je
and
sarb
imul
mov
pushf
push
add
adc
lock
pushl
push
lcall
popf
rcr
jo
mov
sti
mov
pusha
rorl
push
mov
dec
pop
loopne
mov
pop
mov
lret
xchg
cmp
fcmovu
mov
inc
popa
mov
lret
sbb
mov
add
aam
rcll
inc
jo
sub
xor
add
sbb
and
ror
mov
jg
push
xchg
add
repz
jmp
sbb
cli
incl
ret
fisttps
inc
cmp
jle
in
pop
fs
fucom
add
xchg
add
pop
cli
jns
add
icebp
cmc
sbb
cltd
push
and
aas
js
ret
outsl
mov
pop
rcll
into
pop
shrb
mov
int3
out
push
inc
lods
dec
push
lea
pusha
mov
inc
xor
mov
pop
fistps
dec
enter
pop
mov
insl
mov
push
iret
and
cli
mov
jecxz
mov
stos
cmpsl
push
push
mov
jle
mov
inc
adc
lods
cltd
inc
loop
mov
inc
lahf
push
inc
lock
push
mov
decl
cltd
jle
les
push
cwtl
sbb
dec
fimull
fcmovb
outsb
in
lret
popl
aaa
js
fcomps
xlat
or
cld
lock
js
lods
sub
or
test
jmp
mov
or
lods
jnp
mov
adc
xor
out
ret
dec
mov
loopne
mov
cmp
es
push
dec
std
mov
inc
xchg
fs
add
cmpsb
cwtl
hlt
cs
push
fbld
or
mov
outsl
outsl
mov
inc
scas
cmpb
inc
pop
add
mov
test
adc
push
lock
insl
lock
lods
xorl
adc
das
cmp
jb
inc
jecxz
or
pop
and
xor
jecxz
imulb
sub
mov
fildl
jle
lods
les
pusha
loope
sbb
out
xchg
clc
and
test
lret
mov
and
std
add
push
push
jg
push
pop
stos
roll
loope
shlb
inc
mov
xor
not
outsl
mov
add
pop
xchg
jmp
fldt
cmp
mov
xchg
add
and
cmpsb
js
jl
enter
sbb
mov
stos
stc
pushf
clc
pop
fs
mov
jecxz
jns
movsb
add
sub
jne
in
mov
xor
andl
mov
cmpsl
cmp
out
outsl
jne
hlt
test
and
dec
pop
das
repnz
sbb
lock
test
xor
fiadds
push
dec
xchg
je
mov
test
sub
lcall
fadds
pop
adc
inc
popa
jle
mov
or
mov
inc
je
xchg
insb
addr16
xor
arpl
sbb
pop
lcall
test
out
cmc
dec
cmp
lcall
jle
popaw
push
xor
outsl
adc
cmc
out
sbb
mov
push
stos
sbb
or
imul
mov
jnp
inc
xchg
mov
in
repz
out
sahf
inc
daa
enter
jecxz
cmp
inc
pop
adc
pusha
jno
outsl
mov
lcall
cwtl
and
mov
xor
cmp
adc
xchg
decb
cmp
push
sub
stos
adc
jmp
jg
inc
mov
pop
push
xchg
mov
stos
cld
adc
movsl
inc
sbb
push
cli
push
rcr
lcall
mov
in
mov
aad
mov
push
mov
jmp
ret
movsl
adc
dec
rcr
outsb
fisubrs
movsl
mov
aam
imul
xor
lock
or
and
sbb
shl
shlb
sbb
jle
add
adc
jg
inc
inc
mov
into
and
inc
pop
das
jge
push
jns
dec
jb
clc
dec
sbb
arpl
aad
imul
daa
and
test
jnp
inc
pop
loopne
inc
and
cwtl
rorb
pop
sub
or
push
imul
jmp
outsl
jg
sti
fistps
xchg
cmp
sahf
pop
notb
bound
jbe
fcmovnb
push
xchg
clc
jle
mov
jno
les
aam
mov
scas
sub
loopne
and
mov
fildll
lret
rcrl
mov
add
inc
pop
add
loope
dec
xor
test
into
add
push
lods
aaa
ret
outsl
mov
push
out
jge
pop
loop
dec
ret
mov
dec
add
mov
xchg
fwait
adc
mov
out
movsb
pop
or
push
loop
incb
and
sub
mov
lret
jge
add
jecxz
inc
test
mov
push
and
nop
mov
out
fisttps
jmp
mov
stos
add
pusha
xor
pop
sbb
pop
add
xchg
scas
xchg
out
xchg
mov
mov
sbbb
fildll
adc
testb
or
jbe
sbb
mov
sbbb
sbbb
adc
pop
sub
adc
into
mov
ss
dec
loopne,pt
adc
mov
xor
sub
fistps
sti
jnp
shr
pop
lods
mov
push
dec
insl
das
fdivrl
icebp
add
xchg
and
pop
mov
push
mov
mov
aad
lret
pop
notl
add
fiaddl
jns
fisttps
adc
xlat
xchg
addb
xchg
xabort
inc
ja
sti
lods
testb
aam
sahf
rclb
mov
jle
add
push
xchg
and
sti
inc
jmp
imul
imul
decl
in
shll
clc
push
mov
mov
repz
or
jecxz
cmp
sbb
mov
das
loope
leave
adcb
xchg
mov
icebp
or
ss
enter
cmp
loopne
lods
pop
fimull
in
dec
pop
adc
ret
int3
lret
sbb
test
incb
xchg
jns
ret
jnp
test
add
sarl
das
lods
sbb
jl
inc
jge
push
leave
or
mov
lds
ret
sub
adc
mov
inc
dec
xchg
aas
jg
shlb
ljmp
cmc
das
js
fdivrp
sbb
jecxz
push
ss
jmp
pop
pop
jo
mov
pop
ds
or
lds
xor
mov
xchg
inc
jl
mov
mov
inc
mov
add
outsb
inc
jecxz
mov
mov
xchg
pop
sbb
loop
test
add
adc
pop
cli
mov
mov
bound
call
inc
lods
fistpll
lods
jle
addr16
dec
dec
xchg
add
in
or
sub
or
xor
pop
adc
push
sub
aaa
imul
mov
shl
or
jle
mov
nop
dec
mov
inc
pop
dec
pop
or
fs
dec
inc
aam
sub
ss
xchg
sbb
aam
or
addb
je
or
fcoml
pop
mov
pop
test
or
pop
decb
add
cmp
call
and
call
pop
push
ficomps
mov
push
mov
jo
or
mov
loope
cmc
in
and
add
js
outsl
sbb
sahf
jmp
mov
or
cmpsb
leave
pop
out
cmp
mov
mov
mov
outsb
bound
mov
pop
sub
lods
decl
sub
sbb
mov
push
pushf
sbb
xor
jno
loopne
add
clc
sub
popf
cld
adc
mov
lods
nop
cmp
negb
adc
pop
push
push
or
mov
je
das
fs
nop
shll
push
scas
test
or
lods
mov
adcb
test
insl
inc
mov
pop
popf
in
jge
adc
lret
inc
and
mov
leave
or
jbe
xchg
or
add
bound
push
push
xchg
push
push
dec
scas
sub
push
sub
mov
mov
cli
mov
sub
mov
mov
fyl2x
xor
sub
ret
sub
scas
popf
jge
push
orb
pop
test
inc
popa
add
or
xor
sub
mov
inc
cmpsl
ficomps
fcmovnu
ljmp
pop
cli
mov
lods
inc
notl
add
add
sarb
mov
mov
test
fistpl
fnstenv
inc
sbbb
aaa
mov
jl
mov
push
int3
and
insl
je
in
dec
pop
jae
xor
mov
insb
xor
cmp
jb
jbe
int3
lret
adc
fldt
mov
popf
and
xchg
and
push
mov
outsl
ret
sub
xor
sbb
sub
adcl
mov
call
bound
jns
or
ret
xchg
mov
les
mov
into
dec
adc
and
adc
adc
cmp
out
scas
mov
xchg
and
pop
js
sub
adc
adc
mov
nop
out
cwtl
movsl
mov
dec
data16
mov
mov
mov
fsubl
jo
jne
dec
cmp
fildl
sbb
cmp
mov
flds
push
mov
jg
mov
cmp
dec
xchg
and
inc
mov
cmp
cmc
ss
in
ljmp
int3
mov
pop
lret
dec
cmpsl
xchg
std
rclb
push
fwait
ss
adc
xchg
adc
loop
lret
test
or
out
cli
jbe
mov
leave
mov
pusha
sub
sbb
or
pop
sub
mov
xor
sub
fistpl
adc
xchg
pop
insl
sbb
jp
mov
push
mov
fdivr
and
mov
cld
or
pop
push
imul
ret
imul
xor
in
jno
dec
addr16
repz
adc
aaa
push
in
ret
inc
mov
test
dec
dec
sahf
aaa
sub
rorl
mov
into
insl
xor
nop
adc
push
int
aaa
sbb
scas
sbb
sti
mov
aad
sbb
addr16
ret
xchg
rolb
or
push
scas
and
xor
mov
lahf
outsb
enter
outsl
call
iret
inc
imul
push
inc
scas
sub
scas
les
pop
loopne
ficomps
mov
std
xchg
mov
divb
dec
ljmp
adc
xor
scas
incl
fdivl
imul
sub
xchg
push
sbb
jne
add
sbb
pop
nop
xor
xchg
push
idivb
mov
nopl
or
out
addl
mov
jge
xlat
adc
outsb
das
push
pusha
in
ja
jp
imul
jle
outsl
lea
aas
add
cmp
cmp
rclb
push
or
ljmp
js
pop
inc
and
mov
mov
add
mov
mov
test
mov
pop
cmp
inc
mov
addl
lods
add
sbb
sub
bound
pop
adc
ficoms
aad
adc
mov
pop
mov
mov
std
and
insl
lea
arpl
pop
cwtl
frstor
mov
aad
aaa
pop
mov
mov
pusha
xchg
push
xor
pop
xchg
push
test
jl
mov
data16
dec
aam
add
imul
and
stos
mov
sbbl
mov
push
pop
mov
in
filds
jl
testl
dec
mov
pusha
or
xchg
shlb
faddl
push
jns
hlt
mov
push
mov
pop
xor
xchg
leave
add
or
scas
je
xlat
push
pop
mov
filds
cmpsb
test
ret
insl
mov
push
shll
movsb
inc
arpl
loope
pop
mov
scas
in
inc
out
adc
lods
or
vmovhpd
xor
imul
push
xor
mov
jo
adc
outsb
xchg
pop
scas
sub
sti
and
lods
mov
add
pusha
call
or
or
data16
jl
sti
in
inc
jl
lret
out
jo
xchg
dec
push
ret
jne
xchg
fcomp
loopne
fucomi
xchg
mov
add
pop
sti
mov
call
mov
icebp
mov
test
test
jno
test
jg
cltd
popf
testb
or
xor
jle
push
jl
xor
cmc
mov
and
fadds
movsb
rol
add
inc
xor
push
sub
mov
shll
push
mov
mov
inc
loope
cmpsb
mov
xchg
adc
push
insl
loop
sub
jne
stos
inc
fadd
in
mov
aaa
fdivrs
mov
push
inc
inc
stc
call
addb
out
pusha
xchg
inc
or
add
add
pop
push
ret
mov
mov
loop
lds
jecxz
jns
cwtl
mov
addl
and
push
clc
and
popa
xor
lcall
dec
lea
movsb
sbb
mov
adcl
or
jmp
xchg
mov
push
mov
std
das
sbb
or
cmpsl
fidivl
inc
inc
push
adc
push
or
jg
mov
push
fbstp
mov
sub
add
jb
jl
outsl
shl
sub
xor
mov
sti
das
nop
mov
xchg
pop
dec
mov
push
cmp
incl
sub
add
add
and
jl
pop
sbb
arpl
and
clc
push
sub
sti
mov
sbb
xchg
mov
mov
loopne
push
and
dec
in
loope
pop
mov
adc
aas
test
cmp
adc
mov
test
lds
add
insl
xor
dec
aaa
cli
insl
sbb
cwtl
xchg
cmp
adc
add
jae
mov
lahf
mov
pop
repnz
int
add
sbb
xorl
inc
jmp
jp
daa
ds
lcall
jne
dec
sbb
test
aad
bound
decb
fdivr
nop
mov
xchg
mov
jnp
inc
xorb
mov
dec
sbb
mov
mov
cmp
pop
or
mov
inc
jl
push
mov
sub
or
mov
cltd
jg
or
push
mov
imul
fs
xor
jne
push
or
mov
cmpsb
push
push
dec
jecxz
sub
push
clc
sub
fistpl
jb
out
mov
dec
mov
stc
lock
push
cld
push
pop
lret
mov
and
push
mov
push
jle
push
adc
lods
xchg
icebp
adc
repnz
es
xor
xchg
andl
mov
ja
rcll
ja
mov
stos
lods
aaa
out
and
inc
gs
push
testb
pop
add
les
and
ljmp
dec
push
sbb
stc
test
mov
sbb
adc
mov
lea
xchg
jg
cs
mov
jb
and
stc
ljmp
or
stos
sti
and
pop
movsl
push
test
dec
mov
idivl
shl
fistpl
xor
cmp
mov
jne
and
and
mov
aam
dec
loopne
scas
arpl
lods
cmc
int3
mul
sub
cmp
test
test
lea
outsl
out
push
ljmp
mov
outsl
icebp
push
sbb
insb
fsubrs
add
and
ret
scas
mov
cmpsb
mov
insl
imul
insl
insl
stos
mov
test
cmp
pop
jle
dec
push
shll
rorl
sub
mov
fistpl
scas
decb
fstps
mov
aam
mov
test
mov
shrb
inc
dec
inc
test
dec
sbb
mov
out
dec
insl
ret
jge
dec
jae
cmp
in
lea
jae
rolb
push
mov
aaa
clc
test
dec
inc
add
add
cmp
xor
mov
loope
pop
aad
and
jmp
push
clc
outsl
cmp
mov
add
mov
inc
sub
jecxz
mov
in
loop
xchg
insb
inc
sub
loop
cmp
mov
sub
add
lock
dec
rcll
push
sub
xor
je
mov
cmp
add
pop
clc
ret
sub
and
or
xchg
js
or
repz
sqrtps
push
dec
mov
and
mov
xchg
lcall
and
rcll
jecxz
leave
mov
mov
add
scas
outsl
insl
pop
das
adc
jmp
je
and
daa
or
mov
loopne
addb
lea
ja
inc
adc
fldenv
jge
aas
add
inc
pop
mov
lods
xchg
pop
xor
or
adc
pop
pop
ljmp
and
fwait
mov
pop
xchg
shrb
std
imul
mov
ror
rorb
ja
loope
stos
cli
lods
xchg
in
or
mov
repnz
loopne
sub
in
mul
mov
pop
pop
jl
jmp
and
cmp
xchg
jg
scas
dec
andl
clc
mov
rolb
or
jecxz
cs
add
enter
push
jp
inc
adc
xor
dec
std
mov
push
mov
pop
cwtl
out
insb
enter
push
lcall
and
bound
sub
mov
outsl
and
movsl
and
pop
hlt
cmp
mov
lds
inc
dec
insl
mov
shlb
popf
push
pop
mov
adc
jecxz
cmpsb
leave
icebp
addb
add
clc
ret
cmp
scas
pop
add
jmp
xor
push
add
cltd
mov
jg
or
pop
loope
or
add
cmpsl
mov
cli
outsl
gs
jecxz
js
inc
jmp
lods
or
repnz
mov
jl
scas
mov
shr
movsl
int
mov
clc
mov
adcl
cmc
sub
xchg
jle
rolb
out
aas
aam
sub
pushl
mov
call
ret
loopne
in
adc
mov
loop
xchg
push
push
jno
mov
arpl
ljmp
adc
fistpl
rclb
mov
xor
pop
aaa
out
aam
jbe
daa
cltd
hlt
andl
jl
fistpl
lock
mov
or
in
add
pushf
cmp
mov
mov
jmp
mov
cmp
in
push
sbb
test
add
inc
pop
dec
test
lods
repnz
sti
inc
fucomi
call
das
sbb
cwtl
mov
adc
push
stos
and
mov
mov
shl
punpckldq
and
in
and
lcall
ljmp
repz
jmp
mov
mov
movsb
jl
jg
aad
sub
dec
icebp
mov
cld
pop
test
lods
dec
aas
inc
clc
push
fnstcw
cmpsb
imul
push
mov
dec
lds
gs
push
push
rorb
dec
and
mov
pop
dec
lods
lcall
icebp
cmc
adc
movsl
cmp
jl
fiaddl
lock
xchg
outsb
lcall
push
fs
cli
dec
call
mov
cs
enter
hlt
mov
mov
sbbb
in
fiaddl
mov
sbb
das
lock
icebp
in
mov
jle
add
inc
cmp
enter
xchg
ds
das
mov
or
negb
push
cli
es
and
adc
pop
adc
incl
mov
pop
movsb
cmpsl
and
int3
rorl
cld
incl
xchg
jmp
mov
xchg
popf
jo
jge
lock
xchg
test
mov
cld
mov
mov
outsl
icebp
test
pop
push
sti
cmp
inc
add
mov
mov
lock
loopne
mov
out
adc
cld
sbb
stos
shll
mov
cmp
sub
add
in
rclb
sbb
push
insl
dec
aaa
mov
cmovno
lods
pop
bound
sub
adc
jo
daa
mov
or
sub
pop
jp
in
setp
fwait
jbe
pop
mov
loope
ds
mulb
nop
outsb
mov
aaa
mov
rcl
mov
ret
adc
lret
sub
hlt
push
mov
adc
mov
mov
imul
mov
shr
mov
insb
aam
mov
and
dec
inc
inc
and
pop
xor
jg
jne
aaa
push
mov
in
sub
scas
sub
inc
sti
das
cld
push
jecxz
idivb
fstpl
aad
int3
and
sub
pop
clc
push
jg
sbb
inc
mov
add
add
cli
mov
aam
push
xorl
mov
mov
xchg
sbb
nop
pusha
outsb
adc
loopne
lock
inc
loope
ret
dec
repz
jmp
in
notb
icebp
imul
xlat
negl
mov
push
cmp
std
xchg
xchg
jg
lock
push
mov
cmp
pop
fmul
pop
loop
mov
xor
into
subl
ret
push
in
and
mov
sbb
rcrl
jle
jns
add
dec
stos
mov
daa
add
sub
sarb
inc
jno
inc
test
push
fsubrl
adc
cli
test
scas
push
adc
data16
inc
popf
lcall
fwait
mov
and
xor
movl
mov
clc
pop
sbb
cld
xchg
and
mov
sar
pop
loop
ds
insb
lds
sub
sub
insb
adc
adc
mov
pop
jecxz
sbb
mov
in
dec
test
dec
sub
scas
lret
cs
adcb
lcall
cmp
es
fs
push
pop
add
jge
adc
les
xorl
lds
test
lcall
scas
push
push
aad
mov
aad
daa
inc
dec
outsl
sbb
stos
addr16
push
xchg
jbe
into
adc
push
jl
fistl
adc
aaa
ss
jle
bound
inc
lds
insl
pop
cmp
adc
lret
gs
adc
aas
lcall
decl
lds
mov
jbe
push
bound
lods
xchg
fbld
mov
sub
inc
xor
pop
jp
mov
dec
lret
xor
inc
insl
and
jbe
jmp
stos
sbb
rclb
and
push
push
mov
das
xor
popa
pop
and
addl
xchg
push
add
dec
pop
sub
fsubr
test
fnsave
decb
mov
sub
mov
repnz
push
sbb
jae
daa
fisubrl
rcll
stos
pop
lahf
loopne
jg
ret
cli
cli
mov
data16
pop
push
addr16
sub
or
ror
ss
rcll
outsl
fists
scas
stc
bound
dec
cli
lods
inc
cmp
fmull
jno
std
cmp
ss
addr16
add
lods
add
xchg
inc
mov
mov
mov
outsl
lock
jno
mov
dec
ficompl
out
loopne
mov
lret
xchg
in
mov
loopne
xchg
push
xchg
and
fwait
sti
mov
in
adc
pop
or
add
sbb
pop
stos
sub
or
pop
sbbl
push
or
pop
add
jns
nop
sub
loope
or
jnp
nop
jns
inc
pop
xchg
xchg
sub
mov
jle
test
aaa
orb
out
xchg
lahf
fsubs
ljmp
or
movsl
addr16
jae
adc
or
sbb
push
xor
inc
sub
rcr
fbstp
or
mov
mov
cmp
fidivrs
jmp
jp
inc
jo
add
sub
mov
add
test
sub
dec
fwait
movsb
sub
mov
lahf
icebp
or
cmpl
mov
mov
stos
fisubrs
addl
jbe
subl
int
cmp
bnd
mov
mov
or
jp
cmp
sbb
sarb
movsb
add
inc
push
sbb
jl
sbb
push
out
mov
jb
addb
shll
fbstp
cli
filds
adcb
fadds
push
adc
sub
in
add
inc
cmc
ljmp
aaa
xchg
fidivrs
dec
xor
mov
into
cwtl
das
mov
sub
mov
jg
sbb
adc
loope
jmp
and
popf
es
fmuls
outsl
insb
jne
jbe
in
pushf
or
loope
sub
lea
imul
pop
out
cmp
hlt
mov
stos
fistl
mov
jle
lods
push
pushl
add
daa
mov
in
out
sub
ret
mov
mov
push
incl
mov
lds
jg
dec
jmp
lahf
inc
js
lock
lock
lahf
fs
mov
rol
fstpt
pop
jg
add
mov
pop
aas
mov
adc
adcb
insb
subl
xor
or
ret
push
sbb
lock
adc
cmp
mov
adc
repz
sbb
nop
mov
fimull
sbb
or
or
mov
lcall
inc
and
cld
push
mov
dec
les
mov
pusha
movsb
mov
bound
mov
inc
inc
jns
lods
push
jl
xchg
out
rcll
rolb
mov
push
daa
jns
stos
cmp
dec
hlt
push
hlt
jmp
adc
outsb
pop
cmp
sub
pop
lcall
jge
lods
push
and
sar
rcl
dec
rol
in
mov
iret
lock
inc
push
dec
jl
push
decl
rcll
lock
clc
jecxz
fisubrs
add
dec
xchg
sbb
cld
bnd
pop
mov
ret
sub
jge
in
dec
mov
xor
or
rclb
add
lahf
jp
dec
xchg
outsb
mov
xor
adc
loopne
mov
mov
push
sub
add
in
push
add
fisubs
and
lods
outsb
push
stos
xchg
mov
push
mov
decb
test
outsl
mov
out
nop
idiv
test
ljmp
rep
mulb
push
movsb
mov
mov
out
mov
inc
clc
fistps
into
lahf
lea
push
and
inc
sti
fucomip
jns
cs
or
sub
mov
mov
dec
xchg
inc
lahf
divl
or
xchg
pop
sub
cs
push
mov
cmpsl
enter
fistpl
das
repnz
aam
pop
jmp
xchg
ss
push
sbb
sbb
xchg
mov
mov
or
pop
adcb
insb
outsb
xchg
rolb
adc
push
or
insl
stos
pop
dec
cmp
push
sbbl
sub
adc
mov
xchg
push
std
loop
xchg
and
cmp
mov
sbb
es
dec
lcall
add
xchg
int3
adc
adc
pop
stos
ds
lret
rcrb
adc
nop
fcmovnb
pop
pop
lock
add
jl
fucomip
push
fsubs
inc
test
pop
mov
insl
jecxz
fcomps
loopne
mull
mov
sar
and
or
lcall
mov
inc
pop
lahf
sbb
sti
or
sub
mov
mov
repnz
testb
mov
std
nop
sub
aam
or
dec
inc
and
pop
loopne
xor
sub
adc
jmp
jle
push
sbb
lret
add
or
push
fsubp
xchg
xor
insl
aas
add
jmp
inc
fmull
fisttpll
dec
pop
push
inc
sbb
or
popf
je
or
adc
decb
test
xor
pop
outsl
rcll
in
dec
mov
sbb
aas
rclb
lock
loope
clc
inc
fcmovnu
xchg
movsb
dec
or
in
ss
jp
ljmp
aaa
inc
ss
push
das
movsb
pop
pop
fmulp
rcrb
sahf
arpl
shr
orb
scas
fildll
fs
aam
cmp
xor
test
shll
pop
push
sub
sbb
icebp
daa
sub
lods
scas
pop
fldl
pusha
jne
shlb
cli
xor
loopne
in
jl
mov
cmp
add
push
les
mov
jg
loope
push
xchg
mov
repnz
pop
sub
lods
lods
ljmp
sahf
and
jle
test
xchg
and
add
sbb
ljmp
xor
mov
push
jo
cmp
or
or
aam
mov
out
mov
mov
or
lock
in
lds
dec
bound
add
icebp
call
add
sbb
popa
clc
hlt
testb
roll
std
loop
das
nop
popa
add
sub
xchg
xor
mov
fldcw
outsl
fmull
ds
inc
ljmp
inc
push
lods
add
and
cmp
adc
adc
mov
inc
sbb
add
sar
and
xlat
push
pop
sub
aad
call
jno
call
cli
pop
dec
xor
loopne
jp
shr
mov
call
inc
scas
mov
or
add
inc
stos
xor
js
stos
jg
in
mov
prefetcht1
stos
pop
shl
sbb
loopne
adc
into
pushf
fsubrp
push
subb
mov
xchg
add
ret
pop
popa
mov
xor
add
data16
cmp
pushf
bound
mov
bound
sbb
fdivs
std
fistps
pop
sub
test
adc
dec
push
sbb
pop
insb
or
mov
add
divb
jb
stos
test
sarl
roll
xor
xor
call
and
pop
sbb
pop
jne
inc
mov
cmc
dec
in
push
add
insl
jecxz
ret
or
lods
pusha
add
mov
stos
test
lret
pop
xchg
jbe
push
inc
and
in
insb
test
jo
fildl
out
sbb
jecxz
mov
mov
test
jl
sbb
aam
adc
mov
pop
inc
ja
push
dec
sbb
add
and
ljmp
pop
in
jmp
mov
and
int
rcrb
pop
fs
xchg
or
xor
xchg
adc
notl
test
push
mov
push
push
cmpsb
add
and
push
and
sbbl
es
in
sbb
xlat
aaa
outsl
fdivl
cltd
jnp
adc
outsb
adc
in
cwtl
inc
imul
ror
xchg
ljmp
cmp
sahf
or
jp
leave
or
icebp
inc
insb
dec
mov
test
mov
adc
cmp
test
jo
mov
aad
dec
mov
inc
xor
add
adc
xchg
lea
mov
jo
lcall
mov
mov
inc
mov
push
in
inc
add
movsl
les
cmp
mov
push
dec
movsl
movsl
cli
sub
insb
push
sub
insl
jo
or
push
mov
or
out
repz
mov
inc
das
xor
and
push
imul
inc
cld
sub
scas
imul
add
fisttps
jae
aad
pop
out
loop
call
lea
pop
xchg
je
repnz
fistpl
xchg
int3
aam
mov
sbbl
mov
dec
mov
movsb
cmc
sub
cmp
popl
loope
or
or
clc
mov
insl
add
popa
test
cmp
inc
ret
or
xor
jle
cmp
push
or
out
outsb
decl
sarb
sbb
sbb
or
inc
and
sarl
mov
dec
adc
pop
jb
das
mov
jae
fsubs
fistl
mov
mov
std
lods
mov
lods
pop
push
mov
push
pop
out
fbstp
jecxz
xorb
push
ds
and
jne
mov
movsl
ja
add
cmp
cli
fisttps
xlat
xor
add
lods
push
jns
je
hlt
in
lods
js
pop
stos
lds
xchg
mov
mov
fisubrs
inc
inc
rclb
das
je
or
pop
cmpsb
mov
aad
add
and
mov
test
add
push
mov
pop
jecxz
xor
inc
xchg
sbb
ret
test
movsl
rorb
stos
mov
push
in
das
push
loopne
push
mov
mov
pop
inc
lods
push
cmp
clc
push
sub
sub
add
mov
ja
adc
es
push
das
jp
dec
icebp
inc
test
xor
sti
mov
mov
daa
out
adc
push
push
loopne
fildl
xlat
mov
outsl
ss
lcall
add
in
push
pcmpeqw
out
xor
push
jbe
aaa
clc
inc
lock
call
push
out
push
and
insb
pop
loopne
ljmp
data16
push
ret
test
sbb
mov
fwait
mov
les
into
inc
stos
test
jb
lods
push
ret
decl
cld
roll
fucomi
sub
test
nop
addb
das
icebp
inc
mov
gs
inc
xlat
pushf
mov
inc
lds
add
sub
sbb
mov
inc
pushf
xchg
xorb
push
cld
aaa
dec
and
shl
fs
pop
cltd
or
lds
and
pusha
cwtl
imul
mov
js
and
fsub
jmp
scas
or
stos
loope
movsb
sti
mov
pop
mov
clc
xchg
out
and
push
push
outsb
rorb
lods
inc
jl
repnz
aad
inc
lret
test
hlt
out
shll
scas
xor
add
loopne
fisttpll
jl
popl
das
dec
xchg
in
pop
in
js
inc
les
scas
jne
cli
jg
iret
xorl
cs
xor
jmp
cmc
inc
ret
insb
cmc
je
icebp
movsl
cmp
jmp
and
lods
sub
fiaddl
mov
in
jg
jno
dec
fwait
xor
test
fdivl
mov
push
adc
pop
cli
fisttpl
std
add
sbb
stos
add
test
push
aaa
loopne
jp
mov
add
mov
dec
por
sti
jl
dec
xchg
sbb
pop
dec
and
leave
loopne
lret
or
cmc
push
enter
push
mov
jae
dec
and
or
loop
cmpb
push
scas
inc
lahf
lcall
push
loopne
pop
ljmp
lret
lahf
fists
fsubrs
ret
push
hlt
jmp
cmp
lret
outsl
aam
xor
push
mov
inc
out
inc
jns
fnstsw
xor
mov
test
pop
mov
jnp
cltd
mov
xor
dec
add
daa
and
or
add
iret
jae
dec
mov
xor
sbb
and
aam
rorb
mov
mov
xchg
ret
mov
addr16
xchg
dec
pop
js
pop
mov
repz
add
jnp
call
aas
jmp
cwtl
loop
pop
jno
cld
insl
iret
add
cltd
cwtl
ljmp
adc
sbb
lahf
stos
cwtl
mov
aaa
cmp
rolb
test
cltd
add
test
dec
movsl
outsb
mov
xchg
mov
mov
mov
std
movsl
jle
testb
or
add
imulb
dec
push
outsl
xchg
sbb
insl
std
mov
in
es
push
mov
lds
push
out
lods
adc
jbe
insl
mov
sbb
push
les
mov
out
scas
lahf
push
xor
stc
push
mov
fcom
push
sbb
xchg
or
scas
jmp
xchg
dec
cld
jle
dec
jp
xchg
xchg
adc
cltd
lea
sub
movsl
aas
push
add
mov
jecxz
cmpsl
xchg
ret
or
add
inc
sub
rorb
mov
or
and
pop
icebp
xchg
out
jne
xlat
fisttps
decl
add
add
or
clc
out
push
mov
in
and
test
mov
xorb
movsl
mov
data16
mov
and
mov
and
pop
adc
fwait
andl
popa
pop
sarl
cld
xchg
ss
or
sbb
arpl
decb
fwait
or
xchg
int3
mov
mov
gs
add
ja
test
mov
fistpl
xorl
jno
pop
sub
mov
dec
pop
daa
test
lods
dec
xchg
fs
push
test
cltd
addr16
popw
jp
lods
add
xor
xor
mov
loope
das
xchg
mov
jns
pop
pop
mov
mov
add
scas
pop
push
add
loopne
clc
and
lock
jl
and
sub
into
cmc
jle
testl
dec
cmc
xchg
xor
add
and
push
xor
or
gs
shlb
xchg
rclb
aam
inc
cmc
mov
cld
inc
cmovae
je
mov
dec
clc
ret
pushf
repnz
sbbl
pushl
aam
sbb
mov
push
dec
pushl
adc
fs
cltd
sbb
jecxz
sub
jmp
pop
lea
mov
or
cmpsl
push
mov
inc
mov
adc
add
std
pop
bound
mov
mov
inc
mov
adc
aam
bound
push
outsl
loopne
subb
icebp
enter
adc
int
cli
pushf
jle
in
lea
daa
ss
shrl
push
aaa
int3
add
ss
mov
out
call
mov
inc
mov
xchg
out
add
pop
or
xchg
xlat
adc
notb
mov
cltd
xchg
cltd
int3
adc
inc
lods
in
hlt
stc
imul
mov
jge
cmc
mov
fstpt
inc
fbld
xchg
xchg
enter
fistps
addl
or
aas
ret
jmp
test
mov
test
shll
cld
inc
aaa
pop
pop
push
insl
mov
sub
sub
loope
mov
inc
pop
adc
test
outsl
jg
push
jb
mov
and
or
incl
or
push
popa
imul
mov
sub
pop
ret
mov
mov
cmc
into
ffree
movsl
or
icebp
push
mov
in
ret
add
sbbl
std
add
mov
data16
xchg
sarl
add
pop
push
outsl
movsb
cmp
fwait
loopne
arpl
dec
pop
mov
add
sbb
mov
aad
jg
jbe
movups
jle
sahf
out
out
inc
mov
icebp
enter
cli
adc
push
clc
push
push
xchg
and
sub
pop
ficomps
sbb
je
xlat
push
pop
fcompl
pop
xor
mov
xor
icebp
movsl
mov
daa
adc
pushf
pop
dec
add
jge
sbb
outsb
add
jge
mov
sbb
ja
les
popf
jmp
scas
mov
jo
lock
cmp
aam
cld
outsl
jo
pop
add
or
mov
pop
inc
inc
lret
push
clc
mov
cltd
jno
mov
and
movsl
nop
mov
and
in
lea
jnp
dec
out
jge
es
ljmp
dec
jne
jne
cltd
stc
cli
mov
andl
push
adc
adc
out
mov
scas
les
pusha
add
sub
stos
insb
cli
mov
mov
or
subl
into
or
mov
cmpsb
cmpsl
bound
add
mov
mov
dec
std
sub
jmp
leave
clc
pop
adc
pop
add
adc
loopne
adc
frstor
xchg
jle
ret
jp
adc
testb
call
xchg
and
in
inc
dec
loope
fmul
fcmovbe
arpl
inc
sti
sub
inc
jbe
pop
call
adc
daa
push
sbb
mov
mov
and
sub
sub
insb
sbb
cwtl
dec
icebp
or
jo
js
fs
pusha
jmp
mov
out
jge
imul
add
cmp
notb
mov
es
push
pop
mov
imul
loope
ret
and
jecxz
xorl
sahf
insl
das
data16
clc
fistps
ja
add
mov
insl
leave
push
add
in
lea
loop
mov
je
lret
loopne
xchg
clc
xchg
in
popa
fisubs
mov
add
mov
mov
scas
cld
mov
lods
lods
lock
xor
pop
pop
pop
call
test
cmpsb
sti
lret
jne
arpl
mov
mov
cmp
outsl
xor
add
nop
aaa
pop
jbe
mov
shl
sub
and
pop
and
subb
shrl
xchg
push
and
sti
mov
mov
aad
test
test
popf
lret
mov
mov
xor
mov
ja
inc
adc
scas
mov
inc
std
repnz
mov
mov
cwtl
pop
cltd
pushf
push
call
sub
cs
test
lods
inc
jnp
imul
nop
push
xor
adc
inc
js
adc
xor
rclb
mov
adc
rcrl
inc
lods
loop
icebp
jg
movsl
lods
pop
and
das
in
std
les
ret
jno
pop
or
jb
insb
add
ret
shll
mov
mov
ljmp
bound
ljmp
das
insl
and
es
mov
dec
inc
aaa
push
push
cmc
jae
jl
std
xchg
mov
mov
jne
xchg
push
fdivs
scas
mov
je
imul
std
mov
test
ret
mov
xor
pop
nop
dec
mov
in
mov
aad
shll
pop
xor
sub
rcrb
dec
and
iret
pop
xlat
movsl
ljmp
sbb
movsl
push
enter
repnz
mov
imul
aad
shr
and
fiaddl
dec
mov
out
sub
xchg
je
aas
call
aaa
mov
pop
push
pop
lcall
inc
lcall
clc
int3
icebp
clc
inc
mov
leave
push
mov
jg
push
icebp
out
mov
xor
mov
inc
push
iret
mov
rcrl
insb
cmc
movsb
addr16
push
dec
pop
loop
loope
push
fisttps
sbb
lods
cmpsl
fstl
xchg
jmp
xchg
imul
push
or
jb
test
pop
les
mov
dec
in
in
pop
mov
mov
faddl
sti
sub
or
loopne
enter
inc
mov
cltd
bound
call
push
xchg
push
rorl
addb
mov
fdivs
or
fistl
inc
cmp
xor
pushf
cltd
mov
push
and
shrb
nop
sti
sbb
insl
push
mov
sub
mov
insl
cmp
in
and
clc
stos
aaa
and
fmuls
inc
addl
pop
push
dec
stos
inc
add
push
cli
inc
outsl
and
scas
adc
movl
aaa
insb
mov
xchg
rcrb
dec
xchg
adcb
xchg
add
cmc
inc
dec
das
mov
pop
pop
fcmovb
inc
insb
mov
aad
mov
mov
das
jl
cmc
cwtl
addb
jge
in
cltd
mov
enter
push
mov
imul
adc
outsb
jno
adc
hlt
fnstenv
push
std
lods
in
xchg
icebp
aaa
push
addr16
rorl
xor
mov
fstps
fdivs
cltd
inc
and
cmp
fisubrs
decl
jmp
xchg
mov
pop
jl
out
mov
leave
cmp
adc
faddl
cmp
add
xchg
test
push
cmp
add
adc
push
or
mov
arpl
sbb
and
shlb
lods
mov
shl
inc
xor
cmc
or
pop
jecxz
out
enter
add
inc
sbb
fistps
mov
pop
cs
adc
mov
rolb
add
cmc
dec
inc
sbb
sbb
sbb
rolb
jo
jae
pop
push
cld
popa
imul
les
add
pop
mov
xor
sbb
adc
clc
pop
sahf
scas
loop
jne
mov
sub
push
test
pop
push
lahf
adc
inc
sbb
sub
sbb
mov
push
iret
shl
xor
or
rcrb
push
test
popa
adc
mov
movsl
daa
add
push
push
add
sbb
mov
jmp
out
xchg
and
adc
or
pop
mov
sub
mov
aad
add
in
sub
mov
mov
gs
jp
mov
jns
dec
xchg
push
push
adc
mov
hlt
lock
xlat
dec
xchg
dec
inc
sub
jbe
sti
das
cld
sub
rol
clc
pop
dec
cmpsb
dec
popa
jecxz
repz
pop
orw
push
int3
orb
mov
xchg
dec
push
dec
sbbb
or
out
inc
cli
movsl
sbb
mov
ja
inc
sbb
xchg
lcall
cmp
or
nop
xor
and
pop
hlt
jo
imull
sub
add
sti
dec
popa
loope
mov
mov
std
iret
lret
loope
lds
mov
push
mov
movsb
or
bound
inc
cmp
fldt
adc
mov
sub
repz
fisubrl
xchg
js
and
mov
mov
push
adc
inc
repnz
add
xor
in
notb
dec
mov
adc
mov
outsb
cmp
mov
fdivrs
mov
pop
jne
fnstsw
add
xchg
leave
xchg
jbe
inc
jg
sbb
add
inc
adc
and
icebp
movsl
mov
cmpsb
cwtl
sbbl
outsb
popf
sbb
mov
pop
dec
das
sbb
test
mov
sbb
adc
jne
loope
mov
adc
pop
xchg
gs
leave
dec
je
outsl
adc
sub
call
add
mov
ret
adc
int
mov
dec
mov
hlt
lcall
mov
cmp
sbb
es
ret
pop
insb
inc
pop
fisubrl
js
aas
sub
je
clc
dec
or
in
add
adcb
icebp
sbb
repnz
pop
xor
shll
clc
push
adc
inc
push
sbb
mov
test
jo
adc
loopne
xor
xor
pop
dec
aam
inc
dec
inc
sbb
add
and
ret
and
dec
add
add
test
outsl
mov
add
add
lds
jo
iret
inc
push
push
sub
push
xor
jg
fisubrl
pop
jb
sbb
jg
daa
out
mov
out
push
sub
sbb
imulb
cmpl
notl
or
insl
pop
fsts
xor
inc
andl
push
pop
sbb
loop
mov
add
test
mov
sub
cmp
rolb
andl
sub
shlb
ss
pop
adc
rcrl
js
and
push
xor
mov
mov
ret
dec
loopne
pop
sub
std
xchg
loopne
jns
mov
push
or
inc
push
fs
ja
push
add
inc
dec
roll
xchg
dec
inc
mov
mov
inc
pop
cmc
cli
and
dec
imul
mov
and
pop
pop
and
aaa
xchg
aam
jmp
loopne
fnsave
es
movsb
int
jp
fistl
movsb
mov
sub
or
mov
inc
sub
cmpsl
push
mov
lock
push
pop
jp
add
push
movsl
sarl
push
dec
mov
or
lock
push
push
xchg
not
mull
jmp
pop
add
mov
ret
xor
xchg
mov
xchg
aam
xchg
cmpb
push
icebp
outsl
mov
add
mov
outsl
sub
push
add
movsb
mov
nop
loop
add
or
rcrl
adc
mov
fistpll
arpl
and
ljmp
subb
or
add
mov
inc
and
sub
jbe
mov
mov
cmp
test
cmp
rol
cwtl
cmpsl
outsl
insl
add
pop
xor
mov
inc
sbb
adc
ss
adc
or
and
test
sar
adc
sbb
cwtl
inc
mov
lret
pop
test
cmpsb
pop
stos
pop
adcb
fwait
jge
js
clc
ja
insl
pop
pop
nop
sbb
mov
mov
push
movsl
inc
push
orb
outsb
dec
inc
sbb
subl
xchg
mov
in
xorb
adc
push
iret
enter
mov
incl
push
movsb
test
dec
adc
orb
jne
hlt
jle
sbb
mov
je
lods
jp
in
hlt
push
ret
int3
mov
sub
fs
add
mov
clc
inc
or
cmpsb
inc
mov
mov
and
mov
jne
ret
fists
enter
inc
or
daa
test
rcrb
loop
sub
clc
mov
ret
mov
xchg
add
jbe
or
xchg
fadd
js
and
jp
pop
shrb
pop
pop
jbe
mov
dec
sub
dec
stos
and
and
mov
dec
loopne
insb
cld
push
je
cmpl
push
sub
test
adc
push
lea
mov
rcrl
mov
test
test
xor
sbb
js
push
sub
mov
insb
dec
xchg
bound
out
adc
push
and
dec
ficoms
bound
imul
sbb
stos
pop
and
push
cmp
lds
jb
inc
push
pushf
jl
jmp
sahf
xchg
mov
fildll
stos
mov
movsl
xchg
aad
andl
sbb
add
jp
dec
mov
or
adc
dec
rorl
addr16
les
mov
mov
jecxz
pop
and
mov
adc
mov
jno
sahf
xor
insl
test
push
cmp
pop
mov
dec
xorb
cs
pusha
push
push
cmc
add
loope
dec
lahf
push
out
jle
and
sub
and
sub
xchg
movsl
xor
out
inc
dec
ja
sub
xor
jmp
mov
outsl
xchg
cli
rorb
xor
pop
xchg
aam
push
mov
add
cs
in
das
and
and
dec
iret
fldcw
pushl
cmp
jge
add
adc
sub
add
pop
es
out
mov
push
mov
ljmp
jne
pop
push
cmp
loopne
jecxz
in
movsl
lods
jge
or
xor
or
inc
pushl
xchg
pop
out
scas
int
test
push
add
ficoml
cld
inc
mov
jge
sbb
movsl
mov
jecxz
push
push
cmp
adc
int
or
or
mov
rcll
mov
enter
lcall
enter
popf
int3
xchg
pop
inc
in
stos
inc
sub
pop
adc
outsb
test
cmp
sahf
mov
push
daa
mov
mov
add
dec
and
stos
mov
dec
add
pop
push
push
leave
daa
popa
pushf
lcall
sbb
rcrb
xchg
movsb
mov
insl
stos
cli
movsl
das
mov
out
xchg
es
and
push
xor
add
inc
dec
roll
pusha
xor
test
xchg
mov
mov
jg
inc
jo
or
dec
mov
dec
mov
jae
sub
icebp
fmulp
push
pop
loop
imul
jl
pop
jle
fmuls
divl
jp
pop
aas
aam
mov
sub
call
inc
push
sub
imulb
js
jno
mov
subl
fidivrs
jmp
jo
dec
fcmove
mov
push
or
or
adc
pop
loopne
stc
xchg
push
inc
hlt
xchg
gs
clc
int
icebp
fidivrs
mov
add
inc
into
fbstp
sub
sbb
lods
pop
rcrb
fnsave
inc
aas
fdivrs
xorl
pop
dec
pop
mov
repz
sar
in
pop
push
insl
jnp
inc
lret
xor
sub
cmpb
sub
subb
stos
sti
mov
test
pop
push
cmpsb
jp
cltd
and
movsb
add
mov
sar
int3
lcall
fimuls
mov
lods
mov
dec
push
jle
das
std
mov
ret
movsb
iret
sahf
subb
stos
push
or
adc
in
les
orb
jne
popf
icebp
push
fisubrl
jno
or
dec
mov
push
je
jmp
mov
pop
cli
push
adc
fcmovnu
outsl
orl
jne
sub
outsb
xlat
ja
push
jno
xlat
test
icebp
js
fsubrs
shrb
cmpsb
push
xorb
pop
loop
sub
mov
lea
sarl
clc
pop
mov
js
jle
mov
ss
push
inc
push
mov
bound
xchg
mov
mov
add
or
ja
in
xchg
lock
inc
sub
in
stc
xchg
outsb
insb
jbe
inc
mov
or
mov
dec
mov
popa
xor
rcrb
adc
lods
pop
and
mov
scas
jnp
out
lods
inc
sbbb
mov
pop
and
andl
pop
cmc
and
repnz
mov
fcmovnb
rcrl
add
and
add
cmpsl
mov
std
fistps
cmp
pop
cwtl
in
mov
xorb
int3
lock
cli
mov
daa
xchg
mov
and
js
jecxz
es
add
cmp
test
mov
push
loope
mov
push
mov
sbb
push
pop
fs
je
icebp
push
popa
mov
add
mov
pop
sbb
pop
mov
fstp
ret
aam
lret
das
xchg
hlt
xchg
mov
xor
add
mov
xchg
daa
inc
outsb
push
dec
repnz
das
add
xchg
test
nop
cmc
xchg
fisubrl
jg
lods
mov
cmp
xor
fiaddl
sub
sbb
xor
int3
orb
loopne
movsl
add
mov
push
add
sti
loop
fbstp
adc
sbb
ljmp
fistps
jns
loope
mov
cmpl
mov
mov
bound
fxch
inc
lods
push
testl
and
jo
mov
xchg
out
push
insl
mov
pop
rcll
sub
inc
outsl
call
add
mov
imul
jle
stc
xor
xor
hlt
inc
lods
adc
adc
into
mov
clc
sbb
fdivs
xor
mov
cld
outsl
mov
lock
push
mov
push
jb
xchg
adc
fildll
pop
add
imul
scas
mov
rorb
push
cmp
les
lods
rclb
xor
add
ss
cmp
xchg
call
int3
loopne
pop
add
je
dec
mov
push
cs
cmp
xor
sbb
jp
and
cmpsl
mov
jl
test
adc
cmp
fcoml
fs
scas
addb
sbb
scas
lea
adc
loopne
fldt
sbb
dec
nop
popf
mov
fistpll
mov
movsb
ret
adc
or
inc
fnstsw
pusha
xchg
mov
shll
mov
out
adc
inc
les
icebp
and
mov
mov
test
dec
lock
pusha
jno
mov
out
lods
aaa
mov
mov
aas
mov
cmpsl
cltd
mov
push
pop
scas
insb
cltd
and
xchg
in
push
inc
inc
ret
pop
add
pop
out
out
xlat
mov
loopne
gs
pusha
jl
jo,pn
mov
jae
lods
imul
or
or
icebp
mov
divb
cmpsl
fbstp
mov
jle
adc
push
outsl
insb
add
mov
loopne
inc
loopne
lahf
sub
inc
pop
mov
add
loope
dec
sar
lcall
push
jp
testb
push
cmpsl
test
movsl
pop
lods
scas
jns
ret
cmp
loop
xor
mov
push
add
or
je
popf
dec
sbb
fwait
cmpsl
fsubrs
cmp
mov
repnz
ljmp
cmp
outsl
leave
movsl
sub
add
mov
das
and
inc
cmpsl
sbb
aad
daa
test
pop
sub
inc
addr16
movsb
xor
insl
lahf
fmuls
ds
shr
popa
inc
outsl
mov
mov
inc
imul
rcrl
lahf
sub
or
push
adc
push
insl
push
jp,pn
movsl
fcom
and
add
sbb
pop
mov
sbb
in
addl
xchg
pop
lret
inc
jmp
xchg
addr16
and
out
inc
movsl
pop
push
or
adc
add
mov
add
cltd
and
ds
cwtl
and
mov
mov
daa
pop
mov
sbb
das
enter
or
icebp
movsb
ja
add
icebp
sub
loopne
and
fbstp
and
test
jnp
mov
inc
inc
pop
push
push
subl
mov
ljmp
push
in
or
outsl
pusha
jns
mov
add
mov
dec
js
cmc
jo
movb
pop
shl
mov
pop
mov
aam
mov
cwtl
cmpsw
add
std
mov
mov
fdivrl
clc
sbb
add
or
or
aam
fiaddl
inc
pop
jge
outsb
push
adc
cmp
pushl
inc
adc
enter
sub
push
repnz
out
cmp
xchg
or
es
popf
add
lods
lea
mov
push
or
push
fbld
adc
pop
sbb
stc
jb
orl
icebp
cld
addr16
aas
push
jmp
xor
push
mov
push
push
mov
push
dec
test
and
in
aam
or
push
or
lds
xchg
cmpsb
out
mov
je
xchg
or
or
jb
adcl
mov
cmpsb
jecxz
ret
dec
pop
pop
jp
mov
dec
ret
fsubs
cmc
movsb
mov
pop
sarb
cmpsl
inc
std
add
mov
rorb
iret
pop
mov
test
mov
pop
push
mov
mov
out
pop
or
push
mov
lret
shrl
and
mov
mov
mov
ljmp
ljmp
mov
lock
jnp
inc
jg
cmp
les
adc
dec
aam
jge
test
and
cli
roll
xchg
mov
mov
push
add
sbb
fildl
inc
sahf
sub
pop
in
jecxz
or
add
lea
lret
adc
mov
push
pushf
rcll
mov
lret
pushf
xor
pop
cmp
repz
sahf
and
push
bound
mov
xor
shrb
movsl
sub
cmp
aaa
xchg
sbb
inc
fiaddl
and
add
push
or
test
add
jb
call
inc
ret
cmpsl
add
xorb
pop
imul
inc
insb
movsb
enter
adc
adc
pop
add
sti
or
lea
movsl
xorl
dec
or
test
cmp
fcomip
cmpsb
push
inc
mov
jbe
xlat
xor
aas
mov
and
in
or
lea
push
mov
aaa
loopne
xchg
pop
scas
add
add
cmp
imul
pop
pop
leave
in
mov
das
jg
inc
sub
xchg
mov
and
dec
xchg
mov
sbb
xor
clc
std
dec
cmc
push
arpl
xchg
out
ret
add
xchg
mov
add
push
push
popa
jmp
pop
mov
das
adc
in
hlt
fildll
and
pop
mov
jecxz
xchg
xchg
mov
adc
and
or
scas
xor
adc
rcll
cli
push
and
push
add
ds
or
je
jb
mov
popa
mov
dec
cli
mov
loope
pop
js
loope
dec
sbb
and
jne
movsl
push
js
push
mov
sub
cmp
fistps
or
or
cwtl
jmp
test
rcr
fisubl
movsl
inc
cmp
int
inc
test
mov
add
mov
push
push
fisubrs
loope
and
sbb
push
or
test
jbe
inc
lods
rcll
cs
jg
pop
lock
adc
dec
jno
jecxz
loope
cmp
sub
inc
sub
fildl
int
cmp
or
mov
jae
pop
js
mov
shll
in
dec
push
gs
aaa
clc
mov
rorb
ret
and
idivb
outsb
mov
and
dec
rolb
mov
into
insb
jg
pushf
lock
pop
cli
mov
add
ljmp
add
pop
xor
mov
cmpsb
scas
loopne
jle
enter
fildl
stc
mov
pop
push
xor
fimull
jae
jg
mov
or
nop
jmp
fbld
scas
fistpll
pop
cwtl
cwtl
insl
jp
ss
push
sub
pop
movb
and
push
ss
imul
je
fdivrp
test
std
subl
jecxz
js
push
mov
sbb
mov
cmp
and
pop
inc
aaa
dec
fisttpl
cmp
mov
add
cmpsb
push
jl
roll
test
div
add
sbb
and
push
jnp
mov
stos
imul
pop
addb
shr
loop
mov
icebp
or
xor
and
lods
mov
mov
inc
and
stc
pushf
imul
cwtl
es
jo
mov
and
mov
and
lahf
add
in
xor
add
mov
rolb
jmp
pop
fildll
fsubrs
inc
data16
loopne
add
jmp
adc
mov
pop
enter
add
scas
push
pusha
cmp
mov
test
mov
jno
adc
cmp
push
leave
fdivr
mov
xchg
dec
sub
movl
fistl
push
cmc
mov
data16
add
orl
pop
nop
xchg
jecxz
pushf
outsb
or
decl
dec
pop
mov
inc
flds
int3
fsubl
pop
leave
cmp
mov
xchg
and
jg
hlt
outsb
xor
mov
jns
jnp
sub
sbb
ds
iret
mov
scas
push
jle
push
shll
test
xor
push
je
ret
mov
jbe
js
pop
or
sbb
clc
rcrl
add
loope
es
push
sub
cmp
mov
add
fmulp
xor
sti
jno
mov
add
fcmovnb
cli
outsl
mov
adc
jecxz
cld
in
add
stos
outsl
add
jp
test
andb
xchg
add
inc
push
mov
stos
xchg
jne
push
sub
in
inc
dec
sub
loopne
jecxz
mov
mov
mov
and
push
xor
xchg
xchg
test
fistpl
in
add
sti
sbb
mov
clc
cmpsb
mov
xchg
jle
out
add
cltd
or
fldl
add
mov
loope
es
push
or
jp
stos
lods
nop
push
into
roll
pop
pop
mov
cmp
sbb
clc
push
xchg
stos
out
jl
dec
cltd
sbb
mov
xchg
aam
fcomps
and
and
cmc
xchg
sbb
xor
fdivs
fstpt
sub
xchg
push
lret
insb
out
fstpt
loopne
dec
dec
or
mov
fucomi
sub
mov
sub
pop
jecxz
pop
mov
enter
mov
pop
lcall
mov
dec
mov
pop
sbb
cwtl
pop
call
insl
sub
pushf
sub
jg
adc
shll
jo
jp
dec
add
pop
js
les
push
cmp
xor
mov
iret
push
mov
inc
xor
inc
jae
xchg
testl
insb
adc
sahf
mov
sti
imul
lods
aaa
pop
movsl
out
test
outsl
call
imul
cmp
add
xchg
ljmp
mov
mov
enter
hlt
les
mov
jp
push
arpl
movsl
fistpl
push
shlb
pop
inc
aaa
out
pop
ljmp
inc
xchg
xlat
jb
xchg
pop
add
pop
or
and
mov
pop
sub
adcb
jecxz
aad
mov
sti
cmp
stc
outsl
movsb
dec
dec
repz
inc
subb
sub
push
aas
xor
and
cmc
xor
jl
sar
lock
add
jle
lock
or
xor
dec
jmp
pop
loopne
js
mov
jg
stos
dec
testb
js
adc
adc
add
pop
push
fwait
jg
movsl
shrl
pop
call
mov
ljmp
scas
add
jnp
addb
push
xor
mov
in
mov
insb
aam
test
jae
sub
enter
or
sub
inc
pop
sbbb
lret
mov
pop
dec
cli
fidivs
out
or
mov
add
mov
add
inc
call
xchg
sub
add
xor
rcll
loopne
js
mov
mov
arpl
jns
xor
bound
out
mov
and
or
sub
push
lea
mov
jge
sub
das
cld
das
mov
pusha
add
xchg
jmp
ds
loop
add
or
mov
je
addl
stos
mov
mov
push
xchg
dec
icebp
inc
lcall
mov
mov
rcrb
push
jno
cmpsl
fidivs
inc
dec
dec
xchg
xor
cmpsb
push
fistpll
push
lahf
adc
or
cmp
imul
ja
cmc
aaa
fistps
ds
sub
xchg
pop
jle
loope
shrb
jl
cmp
add
cmp
pop
jmp
or
or
or
rcll
push
test
mov
movsb
push
clc
or
mov
add
idivl
lret
jp
mov
mov
nop
outsb
adc
inc
fcoml
mov
cmp
fbld
fadds
jge
cmp
cld
mov
sbb
sub
pop
je
dec
sbb
aad
push
mov
adc
fnstenv
daa
mov
xchg
cmpsl
loop
jmp
stos
js
in
jle
lcall
adc
jo
pop
das
les
xchg
add
inc
ret
rorb
and
shll
fildll
popf
xor
pop
test
pop
icebp
and
fidivrl
divl
stos
dec
test
pushf
cli
cwtl
xchg
repz
xchg
call
popf
mov
cmpsb
push
mov
fs
mov
inc
mov
ljmp
in
je
lock
add
inc
pop
fsubs
ret
into
fdivrp
inc
mov
add
push
cmp
sub
or
dec
fistpl
aaa
pop
lcall
jo
leave
mov
sub
sbb
sub
repz
adc
clc
js
mov
aaa
lea
xchg
jb
push
push
jge
mov
or
mov
insl
fdivrs
and
and
mov
dec
aaa
mov
and
std
decl
aaa
dec
ss
xor
sti
nop
adc
lea
add
pop
mov
call
mov
dec
fsubrl
inc
mov
dec
xor
bound
fimull
out
sub
mov
loope
fcmovne
subl
ror
insb
sbb
adc
dec
xchg
les
pusha
lret
jns
jne
mov
nop
lock
aaa
fimuls
lahf
call
ret
cmc
and
ret
and
mov
pop
stos
cmc
jae
push
pusha
popf
sbb
loopne
and
add
fsubrs
xchg
test
jg
andl
pushf
xor
gs
stos
jns
dec
sub
mov
out
mulb
fwait
and
cld
imul
movsl
pop
xchg
imul
and
adc
xchg
or
jmp
insl
sti
test
gs
sub
mov
xchg
adc
sbb
xchg
mov
mov
inc
shll
cld
and
and
stc
outsl
mov
push
mov
mov
enter
push
jno
xor
pop
xchg
mov
fwait
outsb
mov
stos
push
push
loop
mov
enter
stos
hlt
lcall
out
stc
cli
daa
sti
inc
or
in
mov
and
jg
stc
xor
mov
call
stc
je
movsl
in
xor
insb
mov
inc
or
pop
mov
inc
ficompl
pop
sahf
cmpb
insb
test
pop
ret
jmp
pop
dec
adc
ret
repnz
cmp
addr16
or
icebp
lock
test
dec
fcmovb
fsubs
shlb
or
sti
xor
inc
and
dec
sti
mov
xchg
idivb
mov
jg
data16
test
out
or
orl
inc
mov
stc
push
lea
inc
sbb
nop
add
jmp
mov
test
sbb
or
xorl
and
adc
dec
and
xchg
shlb
fucomip
dec
repnz
pop
push
xlat
push
aad
rorl
mov
inc
push
stos
push
or
inc
in
std
test
pop
mov
das
jmp
pop
sub
scas
xor
cld
push
adc
enter
fabs
sbb
inc
and
add
or
loop
jp
inc
xchg
es
test
das
nop
shlb
test
mov
out
mov
add
sub
inc
call
pop
sarb
add
push
orb
stc
arpl
pop
inc
or
pop
aaa
and
sbb
in
fcompl
adc
aam
adc
push
jle
xor
fidivs
sub
push
pop
and
dec
or
sub
or
or
outsb
lds
and
bound
icebp
push
push
pop
aad
and
fwait
or
dec
and
add
inc
jno
jbe
fisttpll
imul
jmp
push
aas
dec
adc
pop
cld
mov
popa
push
pushf
push
and
rcrl
outsl
or
fldt
movsl
stc
jmp
inc
and
mov
add
imul
roll
mov
dec
sub
cmp
das
push
jns
mov
mov
or
push
jl
stc
and
dec
jmp
inc
cmc
dec
xor
call
daa
das
rclb
adc
lret
bound
decl
fidivrs
and
out
pop
add
mov
mov
mov
lea
aas
lock
mov
pop
lret
imul
jge
stos
sahf
repz
sub
mov
pop
push
sbb
add
push
in
test
mov
pop
adc
fisubrl
jo
cmp
aam
dec
add
aaa
test
das
idivl
mov
xor
or
clc
cwtl
test
repnz
fildl
sti
inc
jbe
add
inc
add
outsl
fbld
mov
fadds
and
xchg
pop
fwait
add
mov
and
mov
bound
pop
clc
es
dec
xor
incl
je
push
add
flds
incb
insl
out
mov
bt
jmp
les
sbb
inc
mov
dec
stc
or
xchg
enter
mov
and
mov
imul
bound
and
ljmp
or
xlat
mov
cmp
push
push
loope
push
pop
mov
xor
sti
mov
sarl
arpl
es
jg
push
sub
out
cmp
mov
sub
ljmp
mov
and
popf
push
and
shrl
jecxz
in
add
add
outsl
cmp
pop
pop
clc
sbb
add
jo
mov
mov
mov
inc
pop
jmp
std
cli
or
jecxz
addr16
inc
mov
mov
hlt
in
add
das
push
sbb
push
lahf
enter
mov
cmpsl
in
xor
stc
mov
shrb
mov
jge
jl
fmuls
enter
jne
push
imul
in
pop
push
movsl
jg
adc
or
or
in
cltd
mov
je
popf
xchg
scas
xor
mov
push
adc
add
fwait
data16
rcl
lcall
fdivr
and
arpl
filds
out
mov
dec
or
imull
andb
nop
addb
mov
fcmovnb
pop
push
mov
ret
sub
cmpsb
sbb
jo
insl
cmp
into
mov
sti
pop
sub
mov
mov
or
in
loopne
repz
sbb
push
hlt
push
mov
add
ret
cmp
sub
loopne
lcall
shl
lock
icebp
inc
mov
loope
fidivrl
test
and
or
or
pop
aaa
sub
lds
call
inc
ljmp
sub
lds
cwtl
aad
mov
sbb
adc
xchg
test
loopne
shr
das
push
sub
and
xchg
pop
clc
out
clc
or
xor
repz
and
rcll
icebp
add
push
add
cli
pop
loop
std
lds
dec
mov
mov
ljmp
inc
xchg
sub
outsl
adc
pop
int3
outsb
ret
mov
mov
inc
adc
and
inc
adc
sbb
adc
and
push
dec
mov
inc
jge
in
insl
in
movsb
push
cs
call
fwait
loop
add
sub
add
jbe
sub
cmp
fbstp
in
push
mov
or
and
js
aaa
pop
cld
sub
xor
mov
cmp
jo
loopne
adc
dec
pop
pusha
xchg
push
mov
pop
mov
inc
inc
stc
aam
add
cmp
push
jmp
add
pop
lds
push
adcl
xchg
push
enter
aaa
mov
cmp
pop
test
inc
fsubrs
cmpsl
push
mov
sub
sbb
dec
fs
push
xchg
or
pop
sub
push
and
jne
or
mov
loope
mov
and
jp
pop
add
adc
dec
shlb
pop
xchg
or
cli
and
mov
mov
nop
pop
mov
or
das
xchg
add
mov
int3
sbb
sub
and
scas
add
and
mov
xchg
in
jb
sbb
xorb
bound
clc
pop
stos
loop
loope
jge
cli
dec
dec
mov
lods
mov
cmp
enter
add
and
ljmp
mov
les
mov
or
and
dec
addr16
lods
jg
cmc
in
lea
insl
insl
sbb
push
loope
addr16
cwtl
jae
mov
cmp
mov
mov
sbb
lea
cmp
pop
loop
movb
mov
xchg
push
dec
inc
inc
mov
aaa
fcmovb
push
add
sub
fwait
mov
bound
xchg
mov
push
mov
das
push
das
dec
mov
cmp
mov
sarl
mov
or
js
cmp
ret
mov
and
adc
loop
jl
or
addb
ds
roll
insb
stos
pop
pop
orl
inc
mov
js
loopne
cld
sarb
mov
leave
sbb
sub
out
cmp
xor
loop
mov
mov
ljmp
lods
mov
inc
jnp
repz
arpl
add
inc
lock
int
inc
jo
dec
mov
test
jmp
mov
jle
hlt
push
loope
dec
xorl
and
add
test
sub
movsl
add
insl
shll
cmpsb
aaa
data16
shrl
into
ret
out
or
ds
sbb
std
xchg
ret
outsl
add
leave
adc
fisubrl
pop
jb
jns
mov
cmp
out
lods
cmovp
ror
lea
mov
clc
inc
mov
ja
push
push
mov
repnz
fmull
adc
call
icebp
mov
rorb
or
mov
sub
or
ljmp
add
sbb
lret
jp
dec
adc
add
xor
andl
pop
push
inc
loopne
mov
and
adc
mov
cmp
xor
ljmp
in
sub
dec
test
or
sbb
sbb
mov
and
mov
jb
mov
sbb
lea
dec
mov
pop
sub
movsl
xor
call
repnz
adc
fwait
pop
ljmp
scas
sub
xchg
inc
xchg
les
xchg
sbb
adc
hlt
or
or
test
xor
jmp
mov
fs
xor
jg
fists
adc
xor
pop
stc
call
test
in
fimuls
mov
xchg
or
sbb
mov
fisttpl
bound
or
jle
add
and
pop
inc
push
mov
bound
sbb
pop
pop
mov
ja
inc
orb
ss
jns
arpl
aas
ljmp
push
popl
and
arpl
and
pop
mov
test
lock
fadds
cmp
adc
push
add
and
das
dec
movsb
sbb
push
mov
aad
mov
cli
fistl
bound
jp
xchg
pushf
xchg
incb
filds
and
adc
push
xorb
clc
jp
push
mov
xor
jmp
faddl
xor
hlt
inc
lds
push
test
nop
adc
lret
test
jb
imul
add
cmp
loopne
pop
xchg
in
ret
arpl
cmp
mov
sub
xchg
sti
ja
mov
mov
mov
movsl
int
mov
push
mov
pop
pop
dec
xor
fbstp
push
or
imul
scas
and
repnz
or
add
pop
or
jno
sahf
xor
sbb
out
add
cmc
imul
js
shrb
lcall
in
addb
xchg
mov
fadd
shrb
pop
mov
mov
push
mov
ds
movl
sahf
xor
inc
bound
and
xchg
pop
mov
xchg
repnz
in
jge
adc
xchg
xchg
lcall
flds
ret
and
mov
fstpl
or
lret
dec
inc
xchg
pop
push
mov
fs
jmp
ss
xor
push
xchg
fcoml
add
lea
inc
cmp
jge
adc
aas
mov
xor
aam
shrb
or
mov
mov
fdivl
and
mov
mov
cli
lea
sub
adc
cmpsb
mov
jmp
shrb
add
cmp
call
stos
dec
push
adc
ja
das
jmp
mov
mov
xor
mov
jb
cltd
sbb
rorl
mov
adc
test
mov
mov
adc
jp
aad
adc
repnz
mov
scas
adc
pop
or
pop
inc
iret
or
popf
mov
xlat
mov
shll
inc
mov
sahf
adc
or
sub
decl
inc
mov
mov
ret
test
ret
jae
jg
aam
in
push
scas
pop
xor
adc
je
cmpsb
lret
rcr
fmuls
fisubrl
daa
push
imul
pop
repnz
jmp
mov
inc
and
sub
lods
pop
mov
inc
ret
lahf
and
mov
loopne
das
jl
and
adc
sub
leave
pop
sbb
pop
sub
orb
inc
xchg
les
ret
enter
jmp
dec
jecxz
lock
insl
dec
and
sub
xchg
pop
popa
push
push
mov
dec
pop
filds
mov
insl
fstpl
or
hlt
cmp
adc
movsl
jg,pn
es
shlb
push
jmp
scas
pop
mov
mov
push
add
lahf
neg
loope
pop
jns
dec
inc
shll
mov
test
es
jno
jg
movl
fs
inc
jmp
cs
lds
and
add
jb
and
call
mov
jl
pushf
mov
mov
pop
sub
outsb
insl
je
or
or
test
lret
inc
incl
or
push
mov
ret
adc
add
jnp
fidivl
and
insb
out
out
mov
jl
and
ljmp
dec
cmp
subb
and
mov
sbb
inc
dec
nop
cmpsl
and
sbb
stos
aaa
bound
add
inc
mov
popa
mov
nop
push
ja
sbbb
imul
pop
stc
insb
push
add
jne
cltd
out
push
data16
ljmp
adc
cld
sbb
pop
aad
in
inc
ror
mov
pop
push
push
ficomps
adc
xchg
outsb
dec
mov
movsb
rolb
lret
pop
cs
cli
adc
cli
cmp
inc
loope
aas
or
and
mov
mov
add
inc
mov
lahf
sbb
test
push
mov
stos
and
add
jne
mov
out
lcall
lea
add
cmp
inc
mov
pushf
dec
mov
push
xor
add
int3
sbbl
test
and
xchg
mov
or
add
sbb
mov
mov
xchg
inc
mov
imul
ja
push
inc
orb
lods
inc
dec
decl
mov
add
pop
jmp
cmpsb
outsl
inc
adc
cmc
std
sbbl
pop
sub
or
movsl
fcmovb
mov
mov
add
pop
addr16
mov
pop
jb
jbe
xchg
cmp
sub
or
mov
push
push
sbb
xchg
fdivl
xchg
dec
mov
icebp
jle
inc
pop
adc
add
fmuls
dec
pop
mov
das
fdivrl
jno
insb
popa
add
add
jns
pop
fs
push
mov
stc
out
or
loope
xor
mov
lds
int
scas
fists
mov
fs
add
mov
cmp
adc
pop
fiadds
lret
lods
xchg
mov
or
push
cmp
mov
aaa
enter
ror
add
sbb
jnp
loope
mov
mov
out
xor
clc
mov
das
insb
outsl
dec
mov
inc
aam
add
in
sar
cmc
clc
aam
push
cltd
push
and
cs
adc
or
or
cmp
xchg
add
daa
repnz
out
movsl
inc
push
insb
cli
jmp
push
and
pushf
xor
jo
adc
cmc
push
outsb
cmp
outsl
or
pusha
enter
push
dec
loopne
push
cli
aad
mov
mov
pop
and
pop
jns
in
xor
sub
aaa
adc
xor
mov
or
test
cwtl
or
mov
jo
inc
ret
inc
inc
mov
pop
and
int
adc
pusha
add
aam
in
inc
xchg
or
je
jb
adc
mov
sbb
movups
pushf
daa
inc
repnz
add
mov
xor
lahf
in
ljmp
xchg
push
hlt
cld
mov
mov
jg
jmp
scas
ret
dec
push
fs
push
jne
orb
inc
ret
pushf
adc
into
insb
xorb
xor
pop
enter
js
cmp
dec
sbbb
inc
lret
xchg
out
cmpsb
mov
sahf
das
fists
inc
sub
xchg
add
call
mov
daa
inc
std
insl
mov
or
add
lock
ret
mov
adc
xchg
dec
inc
test
aam
clc
adc
or
dec
cli
enter
inc
out
jmp
mov
mov
cmc
ljmp
sub
fildl
mov
shl
fistps
or
lock
cs
mov
xor
lahf
mov
lods
hlt
push
ss
push
xchg
loopne
mov
jge
sbb
pop
repnz
mov
inc
ret
lea
shll
daa
mov
mov
mov
push
lock
sbb
and
aas
jo
sbb
or
int3
out
mov
std
call
xlat
mov
ds
mov
pop
stos
pusha
cmp
jmp
lock
lods
inc
push
jmp
add
stc
aad
stos
mov
add
mov
js
inc
xchg
or
cmp
cltd
loope
mov
xor
and
add
popf
sti
aas
adc
popa
xor
mov
daa
insb
jne
add
loopne
insl
add
or
cmpl
add
jecxz
add
pop
and
sar
add
cmpsb
fnsetpm(287
or
mov
flds
push
ret
mov
mov
xor
mov
adc
mov
and
or
lcall
xchg
cmp
pushf
sarl
into
jo
pop
push
lahf
mov
movsl
incl
enter
negl
xadd
rorb
lods
push
add
mov
jecxz
inc
or
mov
lods
scas
xchg
xor
inc
pop
and
jle
ret
push
mov
lods
sub
pop
push
mov
and
pop
jb
std
sbb
in
inc
loop
loopne
aaa
xchg
fstpt
inc
inc
scas
clc
int3
popf
mov
mov
mov
fistl
test
outsb
push
arpl
dec
lods
andb
lds
pusha
cld
xor
xlat
mov
pop
add
mov
or
add
cli
push
call
xchg
inc
test
pop
pop
adc
mov
aaa
push
dec
pop
outsb
dec
inc
or
mov
push
mov
sbb
sbbl
flds
and
inc
mov
std
dec
adc
mov
lds
js
mov
cltd
and
jl
xchg
out
lods
xchg
xchg
pop
jbe
pop
fadds
pop
cld
pop
fdivrl
inc
and
pop
lret
push
cmp
mov
xchg
mov
lea
or
lahf
out
mov
ret
shrb
or
imulb
add
mov
push
mov
in
push
std
add
es
cmc
cmp
xor
dec
mov
cmpb
fmul
addr16
fstpt
insl
xor
es
or
das
push
shrd
jg
adc
or
imul
leave
loop
xchg
in
mov
adc
push
stos
mov
or
push
and
jle
push
adc
ss
rcrb
add
js
addr16
clc
mov
xchg
pop
mov
inc
imul
insb
roll
scas
add
push
dec
mov
lods
pop
add
call
shlb
test
cltd
shl
sbb
fisubs
fcoms
mov
and
jl
filds
xchg
sbb
xchg
mov
xor
xlat
cmp
fnsave
cmp
cmpl
push
sub
dec
dec
addr16
loop
adc
or
aam
jl
insl
fldt
das
push
lea
pusha
test
cmp
and
mov
outsl
or
xor
mov
xor
adc
fidivrs
imul
pop
inc
out
push
jo
xlat
sbb
or
fildll
loop
lahf
stos
pop
pop
jne
and
mov
dec
movsb
and
outsl
icebp
xchg
adc
leave
roll
and
in
cli
arpl
add
xchg
call
pushf
xchg
pop
fbstp
test
xchg
les
fidivl
clc
pushf
lock
les
in
daa
jns
aaa
xorb
add
pop
insl
inc
or
mov
pop
ss
jge
pop
cmc
mov
hlt
pop
aas
mov
rolb
mov
int
mov
inc
pop
insb
test
or
or
out
sub
push
imul
mov
mov
call
test
dec
loope
sub
js
lods
fsubs
imul
lock
inc
xchg
adc
mov
movsl
push
into
adc
sbb
adc
clc
incl
sarl
iret
mov
rcrb
and
sbb
mov
insl
mov
arpl
icebp
rcrb
test
inc
sub
fbld
imul
inc
inc
out
lods
addb
push
mov
xor
pushf
jecxz
mov
push
add
andl
lock
outsb
cld
mov
add
test
outsl
mov
push
inc
lods
xchg
stos
mov
xchg
mov
add
je
add
clts
orl
data16
dec
mov
dec
mov
call
jne
and
test
xchg
inc
push
jmp
xchg
adc
lcall
sub
push
aaa
std
push
enter
sub
or
scas
lea
fdiv
sbb
add
mov
dec
and
inc
jmp
je
and
mov
into
and
sub
int
mov
mov
cmpsb
cmp
inc
or
adc
sub
ja
leave
or
jns
sbb
jge
inc
cmpsl
add
mov
inc
fildl
loope
das
fs
ja
in
pop
xchg
and
push
or
jmp
dec
fldl
mov
in
add
or
cmp
mov
es
mov
ds
dec
fldl
lods
outsb
lds
pop
jmp
inc
fcomip
xchg
xor
mov
or
xor
dec
es
into
inc
xchg
loop
sub
jo
push
cld
adc
test
movsb
and
vpavgb
scas
cmpsl
add
incl
pop
sti
js
or
push
mov
loop
js
and
rol
jg
mov
add
sbb
xor
push
outsl
sahf
fwait
fstpt
pop
loope
or
dec
rclb
sub
mov
imul
mov
out
mov
sub
movl
icebp
test
roll
shrl
in
xor
jp
mov
loope
aaa
adc
or
jg
inc
aas
mov
jo
mov
testl
jle
dec
loopne
xor
fdivr
in
stos
fiaddl
out
dec
jae
popf
in
mov
and
dec
mov
mov
test
clc
xor
add
push
xor
mov
add
ljmp
fcoms
or
jge
test
shrl
scas
push
std
mov
push
adcl
daa
inc
adc
int3
outsb
outsl
xchg
mov
pop
pop
add
sbb
rcrb
shrl
jmp
jge
jne
js
shrb
mov
enter
clc
pop
or
add
adcb
test
xchg
sarb
mov
outsb
xor
rclb
lds
rorl
pop
movsl
jb
fcmovnu
pusha
clc
add
push
mov
bound
pop
xor
js
scas
mov
pop
jl
aaa
sub
mov
fmul
lahf
std
xchg
pusha
ret
das
push
pushf
inc
popa
mov
in
rcrl
push
mov
xchg
movsb
sbb
or
jl
cmc
dec
jg
add
les
movups
jg
push
out
mov
cmp
ficoml
inc
lds
notb
fimull
es
in
mov
scas
mov
jle
cltd
popa
cmp
pop
ljmp
and
inc
leave
jmp
adc
mov
rcrb
movsb
adc
add
insl
fdivrs
std
das
mov
in
sbb
add
add
in
sti
lock
scas
pusha
loop
inc
mov
pusha
test
inc
imul
lods
mov
stos
sar
ljmp
add
adc
inc
and
insl
test
add
mov
add
fst
add
pop
xlat
mov
push
cwtl
add
les
pop
in
dec
nop
bound
cmp
adc
andb
and
mov
mov
jl
sbb
add
and
and
sbb
repz
cli
pop
rcrb
cmp
cmp
outsl
adc
lret
insl
pusha
mov
xchg
nop
cmp
mov
movsb
decb
or
jbe
mov
adc
scas
mov
add
repz
mov
mov
mov
or
data16
adc
fcoms
dec
xchg
mov
aad
ss
pop
jmp
test
jne
cld
pop
jbe
or
mov
daa
mov
test
pop
cmp
jnp
pop
shll
adc
mov
mov
jg
xor
inc
jle
jbe
pop
jge
fidivl
fldl
cmp
sbb
xchg
sub
clc
push
mov
mov
dec
add
scas
or
pop
mov
mov
fmull
and
adc
arpl
sub
fwait
rcr
lods
xchg
mov
cmp
xor
xchg
decb
sbb
inc
outsb
or
dec
pop
sub
mov
adc
push
rolb
hlt
call
jl
xor
cmpb
xor
xchg
push
fnstsw
fstpt
sahf
out
xchg
jl
mov
das
inc
adc
mov
or
ret
in
cmp
into
outsb
lea
jo
bound
fs
push
aaa
add
pushf
jp
mov
dec
lcall
xchg
push
jl
push
sbb
jp
or
fcomps
jmp
fdivl
popf
jmp
sbb
mov
lcall
push
lcall
ljmp
mov
jle
aam
dec
imul
dec
mov
iret
out
in
aad
out
fs
mov
push
pop
add
dec
xchg
fildll
sbb
xchg
dec
hlt
and
dec
stc
mov
and
sub
xlat
outsb
cmp
xor
xor
and
es
sub
call
xor
mov
push
or
sub
jns
sti
divb
inc
add
xchg
arpl
test
je
mov
add
adc
push
xor
inc
push
mov
icebp
dec
dec
lahf
ds
xor
aas
imul
scas
ret
shrl
std
mov
xor
lahf
mov
movsb
mov
ficomps
mov
xchg
mov
jg
pusha
mov
pushf
and
jae
inc
movsl
cmp
add
mov
out
mov
xchg
fwait
loopne
sbb
mov
add
cli
add
repnz
pop
xchg
sub
lods
pop
test
and
inc
dec
add
inc
xlat
push
scas
jb
test
cmp
xchg
and
cmp
jle
adc
cs
arpl
addb
and
sub
sbb
fucomi
ret
sub
adc
bound
add
adc
pop
mov
imul
cmp
pop
popa
mov
cltd
push
pusha
ljmp
push
std
dec
movl
call
mov
lock
jle
fsub
mov
out
sub
inc
jg
mov
xchg
testb
push
inc
xchg
fistl
sbb
dec
outsb
add
out
add
add
lods
mov
insb
rcll
lret
mov
mov
mov
or
pushf
dec
xor
loope
add
adc
push
outsl
xor
fisttpll
xor
insl
add
in
mov
das
xor
rcll
imulb
pop
pop
inc
mov
cmp
mov
dec
pop
mov
fsts
or
push
outsb
insl
pop
js
adc
jmp
add
add
mov
inc
xchg
lods
pop
in
bound
mov
xchg
sub
and
or
ds
jmp
sbb
mov
and
mov
in
outsl
inc
pop
clc
ret
cmp
xchg
mov
movsl
fisttpl
sti
xchg
mov
cmp
fisttpl
in
pop
push
mov
adc
ret
in
add
or
mov
mov
adc
mov
jge
lods
sub
mov
dec
movq
test
jmp
mov
enter
xchg
or
sbbb
add
mov
fisttps
jp
ret
and
ljmp
add
pop
or
or
aaa
add
les
jo
sub
les
add
mov
mov
adc
lcall
divb
push
imul
loopne
or
loopne
push
ds
ficompl
cmpsb
mov
mov
and
mov
inc
and
add
mov
adc
cmp
rclb
inc
fucomi
lods
inc
sub
fldt
nop
inc
push
sub
mov
jmp
mov
loopne
mov
pop
loopne
dec
add
fdivrs
aad
daa
outsb
je
xchg
dec
push
jmp
add
sub
pop
inc
mov
aam
push
dec
push
dec
mov
call
mov
pusha
mov
icebp
outsb
xchg
and
mov
mov
loope
pusha
jb
mov
lods
jecxz
lcall
dec
cmpl
push
jle
es
sub
jge
punpckldq
dec
aad
fcmovnb
out
in
fs
adc
shlb
fidivrl
enter
ss
sub
idivb
add
sbb
fimull
fcmovnb
aam
in
stos
lods
mov
roll
fstl
outsl
cmc
sbb
stos
jge
ret
clc
arpl
lock
mov
lea
jb
rclb
jg
mov
loopne
inc
sub
movb
pushl
xor
and
sub
mov
movb
mov
mov
add
jg
outsb
sub
jmp
push
mov
adc
push
repz
not
das
mov
mov
insb
pop
decb
jge
rcll
insl
imul
rclb
pop
jb
fwait
dec
aaa
test
mov
mov
sbb
icebp
xchg
xor
xor
sub
rorl
test
aam
pop
pop
add
movsb
aam
xchg
mov
shll
sbb
out
pop
fidivs
jmp
orl
or
inc
dec
jmp
ret
or
inc
or
adc
insl
mov
into
data16
adc
call
mov
clc
pusha
mov
mov
in
pop
mov
add
nop
rcrl
jo
lcall
je
jbe
out
mov
sub
jle
test
int3
loopne
adc
push
fnsave
inc
popl
mov
pop
push
or
mov
mov
fnstsw
subb
lods
lret
cmp
das
xorl
cs
inc
sahf
in
sub
inc
jo
xchg
outsl
xchg
js
dec
sub
movsb
xor
icebp
shrl
nop
pop
pop
scas
cs
mov
or
hlt
sub
pushf
fistl
ds
outsl
imulb
jae
inc
mov
mov
leave
loopne
data16
push
stos
inc
addl
aad
rolb
decb
sub
jmp
push
jmp
movsb
shlb
mov
outsl
out
sbb
xor
ljmp
pusha
and
pop
andb
fiaddl
ret
shll
mov
xor
mov
or
sub
pop
icebp
fnstenv
or
or
imul
ret
pop
xchg
mov
xchg
mov
test
or
inc
inc
leave
mov
cmp
decl
jo
mov
push
pop
mov
leave
ljmp
jle
js
clc
ret
pop
cmp
push
repz
stos
mov
in
or
lods
and
lcall
inc
addl
insl
aam
mov
mov
push
clc
mov
enter
mov
jbe
adc
clc
push
addr16
stos
jmp
sub
xchg
sub
aam
mov
mov
cmp
fisubs
push
dec
pushf
ret
outsb
mov
sbbl
and
adc
js
jae
or
mov
push
mov
loope
jge
cld
fsubs
jge
rolb
mov
cmc
iret
cld
out
push
add
mov
cmc
sub
mov
push
xchg
xor
call
push
rorb
inc
or
mov
in
pop
sbb
add
jl
aad
loop
dec
or
ja
js
xchg
or
lahf
out
frstor
xor
push
sub
testb
mov
sub
mov
fists
pop
loop
adc
rorb
ja
lods
popf
add
and
repnz
bound
nop
mov
push
js
fldt
cmp
xchg
push
pop
xor
adc
xchg
repnz
sub
or
mov
pusha
test
data16
mov
aas
jp
jns
dec
sbb
bound
rcrl
in
sub
pop
loopne
shll
aam
mov
scas
hlt
push
or
data16
jnp
lea
mov
mov
cltd
and
push
sub
mov
out
bound
ret
dec
mov
inc
inc
popf
pop
mov
bound
push
sahf
inc
cmp
sar
xchg
pop
sti
jle
mov
inc
mov
add
xchg
fcompl
jo
and
clc
pusha
and
sub
mov
mov
mov
sarb
add
sbb
dec
imul
mov
push
mov
mov
push
push
sahf
pop
loopne
mov
add
into
leave
xor
jnp
inc
aaa
cmp
sbb
push
popa
pop
mov
xor
inc
inc
lods
or
sbb
and
test
jg
push
ss
pop
xorb
movsl
pushf
dec
add
jbe
ja
stos
jecxz
in
xlat
inc
insb
sbb
pop
add
jae
add
call
fs
mov
pop
cmc
lds
mov
filds
mov
add
imul
outsl
gs
or
xor
out
and
xlat
lret
jmp
inc
mov
aas
mov
push
mov
or
dec
mov
or
pop
lock
xor
cld
push
dec
or
sbb
imul
in
mov
das
bound
pop
sbb
lods
cmp
mov
inc
subl
or
xchg
mov
inc
loope
and
outsb
push
ja,pn
push
clc
ljmp
push
pop
xchg
out
inc
nop
jb
pop
add
xchg
xchg
cmp
aas
sub
pop
popf
cld
jmp
mov
pusha
cmp
xor
cwtl
test
scas
loopne
loopew
dec
or
mov
lahf
imul
clc
dec
sar
xchg
cmp
mov
hlt
adcl
test
mov
insb
std
dec
decl
push
and
cmpsl
inc
out
and
jg
outsl
scas
rcl
stos
in
in
add
jnp
fmull
stc
fsts
mov
jno
push
mov
mov
inc
mov
adc
pop
mov
or
mov
xchg
fcomip
mov
ja
and
inc
mov
ret
xlat
adc
and
sub
cwtl
push
xor
and
add
add
stos
push
cld
mov
das
adc
or
or
lods
push
xor
mov
push
and
out
mov
pop
aaa
ret
xorb
and
jae
xor
int3
in
shl
les
mov
push
or
sbb
jge
jbe
jle
mov
ja
aad
pop
and
xor
dec
mov
sbb
or
cmp
mov
mov
ss
rcl
rcrb
jg
out
ret
sub
inc
loop
and
inc
mov
pop
insb
sbb
test
je
insb
aaa
adc
out
xor
out
outsl
push
cli
jmp
mov
dec
xor
std
dec
sub
mov
pop
orb
xor
add
sti
dec
cld
not
adc
jmp
outsl
add
xor
in
decb
out
dec
cmp
xchg
in
cmc
cli
mov
loopne
dec
dec
rorb
mov
inc
ds
lcall
icebp
inc
mov
repz
pusha
mov
outsb
std
orl
scas
lret
mov
out
mov
mov
negb
fistps
jp
sub
mov
stos
fadds
je
sbb
add
in
xchg
pop
nop
faddp
pop
clc
fildl
xchg
test
inc
lret
jge
clc
mov
adc
adc
lret
inc
jmp
ret
lcall
add
outsb
outsl
mov
adc
in
popa
pushl
sub
pop
mov
mov
adc
out
mov
xchg
pop
adc
xor
aas
jl
cmc
das
mov
sub
jle
adc
inc
and
xchg
test
lods
ret
and
je
dec
das
lds
pop
in
lret
iret
cmpsb
mov
pop
jmp
pop
or
jle
arpl
stc
addb
push
out
mov
imul
jge
lahf
inc
mov
test
pop
jno
cvtpi2ps
jne
adc
xchg
inc
dec
add
cmpsb
and
adc
sbb
sub
shlb
mov
push
dec
and
lret
sar
cld
add
das
gs
sub
mov
add
roll
loopne
sub
dec
mov
jecxz
xor
decl
mov
xor
add
insb
mov
es
add
cmp
add
ret
shrb
hlt
jecxz
iret
ret
and
popa
cmpsb
push
or
fbld
fisubrl
xor
jo
sub
lea
mov
jne
add
inc
je
sbb
cwtl
sbb
dec
pop
push
lods
cmc
push
pop
lods
icebp
push
movsl
stos
xor
cli
and
adc
dec
clc
mov
aam
testl
adc
fadds
call
loopne
inc
bound
pop
jbe
or
jp
jbe
jo
nop
push
jl
mov
push
push
ficompl
xchg
mov
pop
aad
dec
xchg
mov
mov
outsb
fbld
jns
imul
outsb
push
xor
adc
sbb
cmpsb
leave
jb
repnz
int
inc
mov
pop
add
xor
cli
cmpb
push
mov
inc
or
scas
fstl
loope
in
mov
jg
mov
add
cmp
and
adc
repnz
ds
sbbb
add
cmc
shlb
loop
loope
mov
mov
loope
xor
pop
xor
lock
sub
pop
mov
sahf
push
cld
mov
mov
xor
mov
pop
pop
sub
aam
lea
lret
pop
outsb
stos
xor
in
lea
std
lret
repnz
sub
outsb
shlb
pop
jmp
sbb
inc
mov
push
inc
sbb
mov
call
push
mov
mov
stos
outsl
sub
movsl
inc
push
mov
push
decl
outsl
pop
add
push
ficomps
je
fldt
aam
mov
dec
jle
addr16
fbstp
and
mov
sbb
xchg
xchg
mov
or
inc
inc
and
nop
test
sar
gs
shr
adc
inc
stos
std
sar
js
xor
or
cli
sub
icebp
lcall
jo
pop
cmpsl
mov
cmc
mov
mov
pop
pop
xor
subb
movsb
mulb
mov
lcall
aas
jg
push
mov
xor
ljmp
or
pop
xor
adc
mov
mov
gs
lret
inc
jno
sbb
mov
out
fidivrl
out
cld
or
inc
jle
sbb
repnz
decl
addl
sbb
insb
mov
pop
mov
sub
cmp
mov
aam
mov
pop
push
je
xor
sub
subb
and
pop
push
fucomip
lcall
call
xor
inc
fidivl
das
jno
jo
gs
fldt
sbb
out
rolb
adcb
test
out
pushf
pop
outsb
sub
jmp
mov
or
sbb
and
mov
push
jmp
jecxz
pop
pop
jnp
jl
test
push
or
xchg
xchg
sbb
push
mov
or
in
fs
mov
in
or
jns
loope
inc
mov
lock
lds
adc
fwait
dec
jae
push
mov
incl
or
gs
jb
or
sub
bound
stc
ds
outsl
loop
inc
les
roll
repz
je
daa
decb
sti
outsl
test
outsl
mov
in
repnz
inc
outsl
mov
sub
inc
ljmp
mov
sbb
repz
xchg
xchg
gs
in
mov
inc
mov
mov
clc
sbb
jo
inc
cmp
aaa
hlt
xchg
ds
cmp
mov
adc
mov
pushl
adc
enter
lock
movsb
xchg
repz
push
mov
sub
jmp
cmp
inc
sbb
stos
push
mov
xor
push
test
jae
mov
push
xchg
xor
mov
lea
sbb
and
pop
adc
xchg
sub
push
xchg
xchg
push
js
cmc
pop
cmc
aam
adc
mov
inc
call
sbb
cmp
sbb
pop
xor
or
add
nop
dec
add
jo
dec
add
push
aad
mov
cmp
cli
cmc
add
sub
mov
push
cld
incl
lret
incb
pusha
orb
cwtl
call
clc
inc
mov
add
xchg
mov
lret
lock
add
mov
adc
jp
fwait
push
mov
sbb
jb
rcr
xchg
dec
cmp
jb
scas
xchg
lock
cwtl
or
lcall
mov
sbb
out
sub
mov
ss
xchg
aad
loopne
xchg
jle
mov
mov
mov
or
mov
mov
sbb
mov
pop
mov
and
sbb
adc
imul
inc
pop
inc
rorb
jle
and
in
ss
jp
loope
rolb
gs
loop
loopne
repz
pop
cmpb
xor
pop
aas
lods
adc
test
mov
in
lods
or
js
xor
jmp
lock
mov
inc
xchg
and
inc
es
add
ljmp
shll
insl
clc
or
adc
dec
jne
add
jne
mov
incl
mov
lret
push
cmp
mov
sbb
pop
add
icebp
and
mov
cmp
xor
int3
jge
cli
or
mov
scas
dec
inc
int
in
push
sub
adc
fisubrl
sbb
fidivs
mov
sub
pop
imul
jle
xorl
pop
xor
mov
push
cmp
jp
mov
pop
ljmp
xor
in
lcall
sub
arpl
dec
dec
sub
push
mov
mov
daa
lea
inc
dec
adc
mov
dec
cmc
addl
fcmovnu
xchg
sub
stos
sub
add
lock
outsl
push
lret
cmp
daa
shrb
shl
imul
jns
in
jg
imul
das
inc
xchg
push
int
lcall
ficompl
pop
popf
sbbb
loopne
or
jle
in
jae
xchg
mov
adc
lock
adc
mov
daa
mov
testb
sbb
pop
shr
pop
mov
scas
push
sti
dec
dec
push
dec
rolb
add
dec
mov
mov
dec
pop
push
icebp
loopne
mov
mov
ret
xchg
stos
rorl
and
mov
ffree
das
das
das
xor
ret
rclb
je
xor
inc
xchg
popa
loopne
mov
out
push
mov
ja
or
lea
out
xor
jle
add
lock
popa
ret
das
push
testb
loop
loope
lds
push
icebp
out
pop
jb
xchg
scas
es
mov
rcl
in
pop
add
outsb
add
ja
inc
or
mov
mov
add
xchg
cltd
xor
inc
xlat
ja
mov
andb
mov
mov
ret
lods
test
and
fimuls
leave
xchg
loopne
cmpsb
jb
and
test
jl
mov
fistps
jle
adc
jno
dec
add
lds
cli
push
xor
add
popa
and
ret
xchg
ret
call
xchg
out
bound
std
and
cmc
push
sbb
xchg
xchg
aas
bound
cmp
sbb
sti
lea
inc
es
test
cmp
push
xor
dec
aas
lock
xor
in
imul
pop
push
inc
cmc
adc
or
outsl
rcrb
push
sbb
ss
xor
jmp
call
repz
add
lea
push
add
mov
mov
dec
std
test
ficompl
inc
add
cmp
pop
cwtl
mov
orl
jecxz
ftst
inc
sub
adc
lds
mov
dec
mov
lock
icebp
orb
sbb
in
jae
mov
test
and
push
jg
movsl
push
rorl
lea
push
mov
pop
dec
dec
add
mov
cld
cmp
jmp
and
insb
scas
orb
fisttps
or
sub
dec
clc
mov
mov
xor
mov
pop
mov
cld
icebp
fcomps
dec
xchg
pop
pop
adc
sbb
call
and
mov
js
mov
fidivl
js
fistpl
mov
mov
popa
aad
mov
mov
fldcw
inc
or
inc
cmp
dec
rcr
cmp
xor
pop
cmpsb
test
jb
in
inc
dec
incb
stos
mov
jle
dec
mov
in
push
adc
add
cmc
std
lods
mov
mov
cwtl
stos
jmp
or
js
sub
pop
dec
xor
mov
lret
jo
and
or
inc
cld
mov
lret
xchg
jl
lahf
pop
ds
mov
adc
mov
add
test
mov
add
rorb
adcl
lea
es
fs
or
mov
mov
filds
popa
inc
in
add
dec
nop
sti
aas
mov
test
repnz
or
sbb
mov
inc
and
sub
sbb
push
and
jnp
inc
pop
js
lret
mov
or
fnstsw
aaa
int3
lahf
or
fs
test
sti
outsl
or
xchg
xchg
loopne
push
add
or
das
jl,pt
out
or
lods
push
push
in
jge
sbb
mov
fstpt
jbe
fs
adc
xor
scas
mov
mov
lret
popl
clc
pop
cmp
pop
sbb
aad
lock
add
daa
inc
inc
fistl
insb
add
icebp
sti
inc
sbb
and
fdivs
in
sbb
pop
nop
xor
and
and
mov
and
pop
mov
outsl
xchg
xchg
fisttpll
dec
lds
jns
data16
sbb
mov
or
bound
mov
and
adc
mov
das
sbb
ss
mov
xchg
inc
in
in
sub
mov
scas
fdiv
and
cld
stc
lods
xchg
ljmp
and
xchg
xchg
aad
pop
hlt
push
cmp
jmp
popa
fsubrs
lret
fidivl
pop
and
shlb
out
lods
fdivrl
adc
arpl
jne
pop
dec
addb
es
jae
sub
cmpsb
rolb
jge
imul
fcomip
or
and
lods
fwait
jnp
jg
enter
inc
sbb
sbb
xor
push
jns
test
mov
fnsave
add
sahf
push
mov
pop
fs
inc
lret
add
push
xchg
jmp
das
insl
lds
mov
or
incl
inc
sbb
push
add
out
jns
addl
int3
xchg
sbb
xchg
cmp
mov
jge
hlt
pop
test
aas
cmp
jge
rcrb
mov
jb
rcr
mov
sbb
imul
dec
or
notb
mov
jge
xchg
adc
jge
lahf
adcl
cmp
xchg
cmp
aaa
imul
dec
rcrb
insb
pusha
mov
ret
cmp
test
lods
inc
or
and
or
insl
andl
cs
cltd
xor
mulb
xchg
dec
dec
iret
xchg
add
cmc
push
xor
jle
fs
popa
adc
sbb
jle
andb
mov
fcomip
dec
in
cmp
insb
jne
and
jle
stos
push
add
repnz
push
sbb
fiadds
gs
mov
jno
jns
jge
loopne
notb
int3
xchg
adc
dec
lret
xchg
xorb
inc
add
mov
out
cmpsb
jo
adc
sbb
mov
mov
push
aas
insl
pop
nop
dec
fldenv
shlb
les
or
xor
pop
cmp
xor
xchg
adc
js
sub
mov
std
pop
aaa
outsb
mov
addr16
xor
and
adc
pop
clc
cmp
mov
and
das
jns
push
mov
filds
add
xor
loop
and
or
incl
loopne
and
icebp
icebp
cmp
jb
xor
ret
mov
aam
adc
mov
xor
cmp
popa
add
loop
aaa
sub
xor
js
pushf
mov
xlat
fs
pusha
sbb
sub
xor
mov
lcall
cmpsb
imull
cmc
pop
lret
jle
clc
inc
sbb
or
dec
adc
dec
fistl
hlt
ljmp
arpl
ja
jo
xchg
jge
sub
fidivl
adc
sub
mov
jns
xor
test
xchg
imul
and
loopne
fiaddl
lea
cli
jae
in
sahf
xchg
arpl
dec
fldt
pop
push
jge
lock
mov
add
subb
aaa
roll
push
ja
cli
xchg
test
aas
ss
sub
dec
popf
je
xchg
lret
negb
sarl
cli
popa
pop
sub
push
mov
adc
pop
sub
inc
push
stos
mov
enter
pop
in
pop
fstp
sbbb
sbbl
jbe
add
out
and
sahf
adc
jne
pop
jp
bswap
insl
xor
inc
fsubs
call
sbb
pushf
or
roll
push
cmp
lds
repz
push
loope
in
pop
sub
cmp
inc
jmp
test
call
mov
aaa
ret
movsl
inc
das
cmp
pop
aaa
xchg
pop
jmp
mov
sub
sar
cmp
push
sbb
dec
pop
pop
inc
pop
les
in
pop
push
push
mov
ret
movsb
adc
movsl
pop
mov
cwtl
adc
mov
adc
push
fcmove
jae
jbe
cmpsl
pop
add
in
outsl
mov
out
test
cltd
sub
cli
push
clc
inc
shlb
push
pusha
mov
push
mov
adc
cmc
add
mov
lds
ja
jle
adc
jns
mov
mov
xchg
dec
inc
ja
push
popa
cmp
inc
mov
adc
cmp
ds
inc
dec
add
mov
xor
push
es
decl
js
mov
add
add
rclb
jg
shl
push
fnsave
mov
pop
js
mov
jno
clc
mov
mov
inc
movsb
fistl
pushf
dec
mov
push
test
test
inc
jge
cmp
or
decb
insl
inc
sub
mov
and
test
cmpsb
shlb
inc
add
leave
jecxz
adc
aaa
inc
cltd
push
daa
push
pop
inc
mov
cmpsl
cld
das
adc
pusha
xchg
cmovb
pushf
and
adc
inc
int
das
add
lds
stos
or
dec
and
bound
lds
inc
push
push
loope
adc
mov
mov
xor
int3
jl
sti
cmpsl
lds
test
xchg
or
add
fstp
mov
dec
inc
aad
inc
cld
and
insl
push
popa
je
and
cltd
mov
push
loope
dec
jle
jno
ja
lret
ficomps
daa
out
cwtl
mov
mov
sub
in
adcb
notl
test
leave
mov
inc
adc
loop
mov
ret
add
xchg
sahf
or
enter
test
ljmp
loop
sbb
mov
push
or
push
mov
fidivrs
sub
rcrl
inc
pop
mov
add
push
cmp
pusha
insl
jns
sub
jmp
inc
decb
shlb
divb
mov
outsb
int3
mov
mov
push
cmp
mov
aaa
push
pop
std
cmp
inc
inc
int3
cmpsb
jnp
aaa
fcmovbe
scas
jne
cmc
and
out
jge
sahf
xchg
or
or
ret
jb
add
fstl
rcrb
jbe
enter
add
cmpsl
pop
cld
mov
lock
or
movsl
ja
outsl
inc
mov
sbb
movsl
cmp
incl
pop
jno
and
popa
shl
inc
stos
insb
orl
addb
pop
out
shrb
fistps
inc
mov
lcall
daa
es
xchg
lahf
popa
imul
icebp
push
pop
sarl
push
sbb
jle
iret
cmp
mov
dec
push
sbb
mov
sub
fdivr
not
dec
mov
sahf
push
add
sbb
jbe
xchg
jmp
dec
std
lods
mov
dec
shrb
and
dec
leave
or
insl
lds
pusha
push
push
sub
cmpsl
lcall
inc
idivl
jmp
or
leave
test
and
xlat
xor
add
add
mov
cmpsb
jno
arpl
mov
mov
pop
orl
mov
outsl
test
add
add
push
mov
inc
insb
add
add
sti
add
adc
adc
ja
push
das
sbb
shr
sbb
adc
lds
and
sub
test
inc
inc
adc
cmp
cld
adc
sub
fldt
mov
sbb
inc
es
movsb
rolb
fstpl
loop
xor
pause
xor
arpl
jle
call
clc
jg
fcmovu
fcomps
leave
movsl
xor
aaa
add
sbb
sub
jle
and
fnstsw
add
push
and
push
sub
pop
cmovo
push
stc
popa
popa
pop
push
pop
clc
popf
and
in
xchg
bound
cmp
and
shl
adc
dec
pop
and
call
leave
pop
jg
out
pop
and
mov
adcl
jbe
jbe
mov
cmp
add
fs
fxch
popa
sub
fcom
push
add
add
in
fbstp
mov
inc
push
std
nop
sbb
mov
cmp
test
lds
inc
fs
incb
lods
mov
inc
inc
test
mov
les
xchg
pop
arpl
test
adc
rcrb
clc
pop
mov
mov
stc
imul
repz
jne
data16
outsl
fstpt
cwtl
push
in
mov
adc
sub
dec
mov
sbb
pusha
lock
call
cmp
subb
test
add
mov
push
dec
inc
pop
mov
jne
pop
ficompl
pop
fdivs
push
data16
lock
aaa
mov
push
repnz
sahf
outsb
xchg
call
xchg
xor
mov
mov
push
loope
jnp
icebp
test
shll
adc
dec
loopne
bound
repz
cmc
dec
jge
or
jmp
cwtl
jbe
outsb
mov
sbb
pop
insl
call
mov
mov
test
sbb
dec
mov
cli
push
mov
lods
sub
push
fstpt
clc
adc
cmpsl
cmpsl
dec
xchg
mov
test
or
mov
add
sbb
fstpt
test
xor
xchg
cs
out
xchg
int3
fstl
clc
filds
sbb
aaa
adc
xchg
adc
shl
notb
dec
rcll
pop
adc
cmp
adc
scas
dec
jmp
cmp
sub
dec
and
pop
and
loope
mov
fwait
cmp
adc
add
nop
int
cld
out
lock
inc
pop
addb
in
mov
jne
clc
movsl
leave
scas
repz
sbb
mov
add
mov
sbb
pop
les
ret
popf
pop
and
push
loope
mov
cli
call
sbb
push
cld
pop
jp
push
outsl
and
pusha
sub
dec
cmpsb
xchg
jo
jle
inc
out
mov
push
add
call
inc
mov
fwait
fs
sub
call
jp
cmp
xlat
adc
xchg
pop
sub
sbb
aad
jl
clc
mov
mov
stos
sub
push
mov
rcl
outsl
push
jg
arpl
jmp
fcomip
shlb
sbb
dec
stc
inc
int3
ss
pusha
outsb
test
jg
pusha
notb
shll
shlb
push
iret
jne
mov
inc
shlb
add
push
lock
andb
inc
arpl
mov
hlt
cli
add
out
mov
mov
les
sub
cmp
push
stos
jle
cmc
or
inc
pop
loop
xor
test
cmp
pop
test
xchg
int
lahf
clc
add
add
xchg
xor
or
add
movsl
push
subl
lea
add
push
jo
mov
or
lock
add
add
mov
popa
adc
aaa
jl
sbb
mov
js
inc
or
mov
aas
out
push
xor
push
aad
mov
out
rcll
pop
loop
sbb
jo
xor
xchg
jne
mov
jle
sub
xchg
leave
loop
cmp
dec
mov
insl
sbb
xchg
push
xor
push
pushw
jmp
and
les
cmpl
call
pop
sbb
shr
cmpb
scas
incl
movsl
ljmp
dec
cli
call
jmp
clc
in
add
and
xor
call
mov
xchg
push
or
aas
repz
mov
fs
js
mov
jb
testb
mov
std
dec
xor
cmp
out
or
inc
xor
add
add
jbe
xor
mov
xor
adc
mov
and
mov
or
iret
xchg
lods
adc
fimuls
and
xchg
push
jne
pop
aaa
sbb
adc
aas
xor
sub
add
nop
fcomp
mov
lret
aaa
int3
mov
in
push
loop
mov
outsb
and
mov
mov
mov
jg
stc
mov
push
outsl
pop
push
mov
jg
or
push
test
adc
jecxz
cmc
push
in
dec
xor
mov
scas
sbb
stos
outsb
cmp
dec
adc
ret
dec
push
faddl
fidivrs
clc
ljmp
das
inc
clc
div
and
and
pop
mov
repz
dec
ret
mov
imul
pushf
pushf
ret
scas
jl
adc
xchg
mov
lret
xchg
push
add
repz
in
outsb
push
jg
sub
idivb
push
fiadds
imul
test
mov
cs
cltd
jbe
jg
xor
inc
nop
fimull
mov
mov
incb
lret
jns
ret
stc
sbb
repnz
push
or
add
aaa
xor
clc
cmpl
push
outsl
mov
sub
sub
push
imul
cmp
or
jbe
and
testb
jo
scas
cmp
cmpsl
pop
add
ja
in
xor
mov
push
loop
fildll
test
xlat
popa
mov
push
jge
insb
test
nop
jnp
lea
ja
test
push
mov
daa
and
sub
add
or
ret
xlat
xor
pop
add
mov
adc
dec
add
pop
adc
cmp
push
pop
fcomps
xor
jno
fists
and
cmp
sub
mov
or
fisubrl
dec
loope
mov
pusha
push
es
aam
jle
dec
adc
and
cmpsl
lea
xorl
dec
outsl
mov
push
mov
nop
pop
and
add
mov
push
pop
cmp
mov
aad
sbb
stc
pop
sbb
pusha
jge
mov
adc
std
lock
in
mov
das
je
inc
rorl
pop
add
ljmp
aaa
xor
leave
pop
sub
mov
cltd
aas
test
gs
push
pusha
or
push
jo
xchg
mov
add
or
filds
or
xchg
cmp
lahf
add
pop
push
xor
jmp
pusha
ret
jg
add
add
push
sahf
test
lcall
push
data16
xchg
adc
inc
lcall
aaa
push
jge
jmp
mov
lret
loope
jmp
aad
pop
popa
mov
fs
ljmp
xchg
jo
negl
jmp
rcrb
push
pop
xor
or
adc
inc
mov
imul
sub
inc
mov
outsl
or
and
xor
aaa
or
les
inc
or
je
imul
inc
mov
pusha
stc
pushf
fisubs
test
loopne
stos
adc
jnp
dec
insb
mov
and
adc
test
push
das
sbb
cli
push
mov
ljmp
fisubl
pop
pop
call
mov
sub
filds
mov
dec
inc
cltd
sub
jo
clc
mov
inc
js
inc
stos
pop
push
out
filds
adc
int3
imul
mov
mov
and
mov
test
insl
cwtl
scas
dec
add
push
inc
stc
nop
cmp
mov
adc
subb
cmp
stos
bound
nop
mov
pop
in
addl
test
mov
les
fs
and
mov
xchg
test
xchg
call
call
test
mov
rolb
mov
or
add
cmpsl
mov
sbb
loopne
shlb
jl
xchg
imul
dec
sbb
call
jbe
dec
jg
jge
testl
cmp
sbb
inc
addl
js
cli
add
sti
xor
mov
imul
or
xor
inc
sub
dec
adc
insb
pop
rorb
and
int3
cwtl
xor
lcall
mov
adc
xor
and
push
popf
dec
add
shr
fists
pop
mov
jl
pop
push
push
sahf
je
mov
ret
mov
inc
rclb
orl
loop
pusha
je
or
sbb
iret
jl
ljmp
addr16
add
jecxz
push
dec
test
inc
outsl
sub
xchg
and
or
sub
inc
jl
movsb
in
mov
mov
std
leave
mov
clc
push
push
mov
test
xor
fadds
xor
mov
pop
gs
imul
or
pop
adc
pop
add
test
in
ficomps
fs
jne
mov
jo
les
push
incl
imul
lods
fstp
bound
ljmp
xchg
scas
pop
jle
ljmp
fimull
jg
iret
adc
cli
arpl
push
add
div
mov
xchg
js
stos
insb
mov
mov
das
daa
mov
pop
dec
sub
sub
inc
icebp
pop
repnz
adc
sub
cmp
loopne
jmp
inc
xchg
and
adc
rcr
mov
cmp
inc
mov
rcrb
loopne
dec
mov
xchg
jle
enter
pop
mov
outsl
lahf
jnp
clc
scas
adc
cmp
int
outsl
xchg
mov
xor
mov
push
add
fimuls
mov
mov
lea
sub
cmpsb
sbb
xchg
pop
pop
or
arpl
push
mov
aaa
mov
xchg
sar
xchg
sub
mov
outsb
aas
imul
ss
cld
test
push
pop
daa
jnp
decb
xor
mov
inc
movsl
inc
jmp
xchg
fdivrs
popf
insl
ljmp
jp
xchg
sti
arpl
rorl
outsl
inc
repnz
jae
mov
mov
bound
sbb
js
pop
lea
addr16
stos
pop
sbb
sbb
push
jle
cmp
test
int3
lds
jg
add
out
xchg
sbb
add
add
call
lret
repz
add
add
aaa
inc
sbb
or
xchg
and
lcall
aam
push
dec
xchg
push
ljmp
adc
mov
cld
add
sbb
mov
fisubrl
push
mov
ja
mov
add
in
outsb
push
mov
cmp
test
add
sub
add
mov
pop
jae
pop
push
xor
lea
iret
stc
lods
roll
and
push
imul
jb
add
pop
repnz
pop
mov
inc
mov
add
xor
shll
gs
fadd
arpl
jbe
je
mov
cmpsb
push
cmp
push
sbb
mov
pop
add
xchg
std
inc
add
pop
sbb
dec
adc
les
mov
cmpsl
test
or
inc
pop
lods
test
ret
ret
push
dec
jnp
xlat
cmp
mov
adc
bound
enter
push
push
xchg
add
xlat
sbb
or
xor
sub
mov
out
pop
cwtl
insl
imul
inc
shrw
lds
out
inc
cmp
outsl
das
cltd
addr16
stc
cli
inc
test
inc
out
sub
data16
lret
fdivl
hlt
dec
add
hlt
out
cmp
push
xor
lret
cmpl
notl
mov
les
jl
dec
addr16
fstl
or
cs
add
and
nop
and
decl
jmp
push
xor
fcoms
or
sub
and
or
test
adc
loop
cs
mov
int3
mov
push
je
cmpsb
mov
out
out
lods
fwait
je
jb
jo
outsl
jae
fwait
cmp
rolb
enter
int
out
mov
add
jl
inc
push
pop
into
or
sub
dec
jle
testl
movl
or
add
xor
stos
fiaddl
xor
adc
xchg
cs
pusha
sbb
movsl
outsl
sarb
push
inc
pusha
outsb
daa
adc
out
push
fisubrs
jo
mov
inc
outsl
pop
cltd
push
flds
sub
xchg
pop
pusha
adc
ds
in
out
ret
adc
outsl
cld
lea
add
pop
mov
es
outsl
lds
sbb
add
inc
adcb
loop
js
mov
fs
add
sub
mov
repz
faddp
pop
dec
mov
imul
test
cmpl
pop
jp
mov
adc
sub
jg
fsubp
mov
mov
inc
mov
sub
daa
mov
je
adc
mov
mov
or
movsl
rol
mov
jb
push
mov
sub
pop
and
jle
adc
repz
add
call
mov
sbb
filds
roll
add
out
arpl
mov
sbb
and
mov
pop
adc
jecxz
movsl
lea
pusha
outsb
daa
jb
sub
outsb
mov
mov
or
push
pop
mov
out
or
push
sar
push
and
inc
add
cld
push
push
xor
test
adc
cmpsl
fst
push
fildl
mov
or
dec
or
fstpl
arpl
pop
xchg
roll
adc
or
cld
loopne
pop
into
enter
iret
and
aaa
add
mov
or
dec
sbb
mov
aaa
cmp
push
and
movsl
xor
adc
scas
pop
ds
and
jg
inc
movsb
mov
inc
sbb
cmp
mov
andb
ficomps
mov
filds
clc
scas
mov
sbb
jmp
test
scas
mov
pop
cwtl
sub
rorb
fsubrs
pop
ret
daa
pop
mov
dec
mov
jl
sbb
insl
mov
fs
add
push
icebp
pop
pusha
mov
rcl
push
mov
shl
testb
pop
and
adc
das
mov
mov
add
xchg
inc
push
add
mov
loope
mov
add
popa
inc
xchg
mov
sub
mov
popf
mov
lock
sbb
fidivl
lahf
sub
outsb
rolb
add
imul
mov
fbld
mov
dec
lcall
pop
cmc
sbb
shrl
inc
insl
mov
add
mov
mov
shlb
push
dec
mov
mov
xor
loop
in
cmpb
js
xor
push
stos
insl
fcoml
iret
sub
call
and
add
scas
mov
les
pop
jecxz
pop
std
pop
push
jne
popa
mov
pop
mov
insb
adc
adc
add
or
ret
mov
inc
jo
fidivrl
icebp
fldt
insl
cs
mov
jne
ljmp
pop
sbb
mov
aad
lcall
insb
dec
mov
arpl
xor
outsl
fldt
jb
int3
fistpl
mov
icebp
sbb
in
xor
lods
mov
inc
fidivs
push
jb
push
push
loopne
cwtl
sub
add
jg
and
mov
aaa
test
and
xchg
add
or
push
movsl
mov
jo
jge
sub
mov
inc
mov
pop
js
inc
push
adc
dec
repz
cld
fwait
push
jge
and
push
push
lret
xchg
in
pop
pop
push
mov
add
insl
pop
insl
cmc
dec
dec
lock
mov
xor
or
testb
inc
incl
je
addr16
mov
das
icebp
decl
cmc
xor
mov
shl
cli
inc
loop
sbbl
rclb
call
pusha
mov
popa
loopne
test
pop
cmp
sti
test
je
rcll
enter
imul
adc
sub
outsl
jge
dec
or
push
and
mov
fbstp
sti
mov
lret
js
add
cmpsb
push
xor
adcl
pop
js
rorl
push
and
or
bound
cmp
lcall
jle
dec
jle
inc
lods
lret
sub
scas
push
or
mov
jbe
dec
or
cli
add
xchg
pop
imul
mov
nop
imul
and
and
xchg
pop
inc
notl
push
mov
mov
push
dec
add
nop
inc
mul
jne
and
pushw
loope
icebp
ss
mov
ljmp
jne
insb
cltd
inc
fcmovne
xor
adc
movsl
outsb
inc
or
shrb
faddp
xor
dec
sub
mull
lcall
inc
jmp
inc
loopne
mov
hlt
fldt
mov
adcl
jecxz
js
xor
clc
loope
stos
sbb
movsb
push
fcoms
and
jo
push
mov
das
lcall
jecxz
mov
or
out
mov
xor
clc
test
cli
mov
or
mov
dec
dec
add
mov
push
call
mov
inc
and
in
aad
sub
orl
fidivrl
adc
sub
xor
add
icebp
in
add
sbb
ror
out
sub
pop
mov
xchg
ficompl
loope
add
ljmp
adc
test
inc
xor
sti
or
mov
pushf
sbb
push
mov
adc
fsubs
outsl
test
jp
pop
xchg
sbb
sub
or
aaa
xor
jg
mov
adc
add
fldcw
xor
xchg
push
and
daa
xchg
outsb
add
aas
fisttpll
and
pop
jo
daa
sub
dec
sbb
mov
xlat
xchg
ffreep
pop
outsl
movsl
add
pop
cwtl
in
xchg
pop
mov
and
hlt
push
cmc
pop
mov
cmpsb
aam
xor
or
pop
test
fisttpl
movsb
xor
push
insl
xchg
cmp
test
add
mov
out
lret
sti
icebp
mov
aad
sub
or
outsb
inc
xor
ret
add
jae
mov
jle
pop
in
xchg
sub
les
lcall
adc
add
add
incl
cmp
pop
je
movsl
call
shrl
outsl
clc
repnz
pop
xchg
dec
xchg
adcl
pop
mov
jne
xchg
sub
jle
or
mov
lock
pusha
jecxz
outsb
xchg
dec
outsl
xor
mov
mov
xor
jne
cmpb
and
jns
xor
cmp
rclb
in
xor
shlb
test
jg
and
leave
jmp
inc
mov
aaa
add
jg
sti
cs
andb
sarb
mov
sbb
inc
into
nop
mov
mov
xor
stos
lea
js
push
xlat
pop
lea
in
and
daa
inc
jg
xor
cltd
test
pop
movsl
mov
mov
xor
aad
cmc
outsl
jne
and
xchg
sbb
mov
inc
fidivrl
mov
inc
ss
adc
push
loop
inc
call
inc
sti
out
fiadds
mov
pushl
mov
ja
roll
cli
inc
adc
out
sti
add
sbb
inc
les
pop
jg
rorl
adc
mov
out
movsb
xor
pop
push
dec
dec
and
cwtl
test
pop
aaa
decb
daa
test
adc
and
outsb
dec
fildll
cld
imul
inc
or
push
popf
hlt
pusha
adc
adc
mov
fbld
cmpb
and
cmp
or
xchg
pushf
js
jl
clc
mov
inc
sbb
in
cmc
lods
adc
int
jns
pop
aaa
lods
push
dec
mov
enter
bsr
dec
fistps
js
mov
in
jle
nop
add
pop
jecxz
mov
pop
incl
add
orb
dec
cmc
xchg
sub
lea
cmpsb
pushf
inc
and
aad
sub
pushf
xchg
jmp
lea
ficompl
sbb
mov
xchg
iret
xchg
inc
mov
jo
push
mov
out
push
pop
mov
movsl
or
mov
dec
push
pop
mov
mov
sbb
mov
pop
or
xchg
and
shl
lods
data16
sub
dec
adc
test
ret
inc
and
int3
mov
mov
loopne
rcrb
cmp
cmp
and
sti
and
mov
or
mov
lods
test
mov
stos
sbb
test
pushf
inc
adc
addr16
push
or
fwait
loopne
aad
fs
inc
fnstsw
test
test
add
cmp
cmp
in
imulb
add
movsl
jg
jb
and
jge
movsb
push
pop
or
test
pop
pop
xlat
das
and
hlt
push
idiv
cltd
or
ror
in
cmc
add
add
add
in
pushf
mov
std
jg
sbb
lcall
ret
inc
mov
arpl
movsl
mov
sbb
in
negb
lea
push
add
mov
outsb
adc
inc
dec
stos
and
push
jb
or
adc
mov
dec
cmp
xor
xchg
and
flds
xchg
sbb
insl
test
or
test
je
mov
xchg
clc
mov
pop
xor
pop
sbb
xchg
xchg
inc
pop
gs
sarb
pop
push
enter
lods
sub
mov
bound
jp
xchg
mov
repnz
sub
dec
push
insb
xlat
mov
xchg
or
mov
push
cli
push
js
jle,pt
mov
mov
mov
dec
jge
push
add
cld
into
jae
std
mov
sub
jmp
stos
push
dec
sbb
dec
inc
xor
pop
and
test
pop
inc
dec
push
lods
outsb
mov
push
mov
loopne
ja
mov
cmp
cmp
jg
lea
lock
negb
sarl
pop
mov
xor
xchg
push
dec
aad
outsl
jo
and
test
out
or
movl
into
jg
sbb
dec
mov
dec
popa
cmpl
lods
cltd
add
and
cmc
pusha
and
hlt
nop
dec
ret
mov
fnstsw
jbe
xchg
dec
xchg
fildl
and
cli
out
icebp
pop
sub
mov
lods
sub
out
push
mov
fimull
cli
test
or
insb
add
push
dec
adc
push
ret
pop
rorb
xchg
mov
call
jns
pop
mov
insb
sbb
push
fldenv
ret
aaa
or
sub
ja
fildll
movsb
jmp
sub
or
jle
lcall
or
inc
mov
in
sahf
cli
add
add
jg
inc
pushf
mov
daa
adc
inc
inc
jb
ja
mov
or
into
dec
mov
test
inc
je
pop
xor
cltd
ljmp
test
ret
fmuls
outsl
jo
gs
pop
hlt
sub
lock
cs
inc
inc
test
jne
ret
lcall
sbb
orl
lea
mov
dec
fstpt
and
mov
dec
push
dec
mov
dec
xchg
pop
jp
idivb
fs
clc
addr16
gs
xor
push
xor
sub
adc
inc
stc
call
and
test
jne
outsl
decb
daa
subl
push
lea
adc
add
arpl
das
icebp
mov
imul
push
xchg
in
inc
jmp
sub
pop
jp
lea
stos
lods
add
incl
fs
mov
lea
push
das
adc
and
mov
pushl
call
pop
or
es
and
dec
add
push
push
aas
jmp
dec
pop
andps
or
inc
mov
rolb
mov
lcall
int
xor
adc
inc
add
or
adc
inc
stos
dec
sti
mov
shrl
mov
bound
mov
dec
popa
xor
mov
loopne
dec
daa
pop
or
push
inc
hlt
sbb
stos
xchg
mov
pop
incl
xor
or
fsubs
or
and
sbb
mov
inc
jns
adc
push
sbb
ficoml
rcl
in
mov
cs
mov
in
insl
pop
or
into
mov
xor
dec
outsl
pop
jmp
mov
xorl
sbb
jb
jp
pop
call
test
orl
jns
int
and
push
inc
popf
fildll
sbbl
adc
mov
mov
sbb
das
and
in
mov
rclb
dec
pop
ljmp
cmc
and
sub
cmp
loope
clc
ss
stos
jbe
xor
push
out
pop
lock
pop
jp
lret
cli
dec
nop
lds
fisubrl
mov
lahf
add
insb
push
xchg
push
jne
xchg
and
stos
andb
std
inc
mov
sub
inc
pusha
and
bound
push
stc
ja
aam
icebp
lods
and
xor
insl
mov
out
shrl
sbb
sub
push
add
inc
and
adc
sarb
xchg
cmpsb
mov
mov
adc
pushf
int3
xchg
les
pushl
sub
mov
push
dec
loope
int3
jge
clc
pop
pop
jle
push
ja
fadds
aam
ret
das
je
popf
jb
lods
push
cmp
orl
pop
jmp
inc
or
mov
sub
pop
popa
add
sub
shl
clc
or
dec
aam
push
lret
not
outsl
sub
ficoms
notl
out
pop
push
cld
cli
cwtl
fsub
jecxz
pop
aaa
push
jecxz
jg
mov
cmp
sbb
lret
xchg
add
xor
pop
and
popa
das
fs
xor
test
sub
mov
out
sub
movsl
sub
pop
scas
jo
pop
scas
and
mov
cli
xchg
mov
sub
outsl
mov
sub
pop
int3
dec
rclb
dec
test
mov
fs
sahf
adc
sti
call
ljmp
addr16
sbb
inc
loopne
add
lcall
gs
adc
adc
dec
rcrb
jns
sub
call
fistpl
shlb
clc
add
push
cmc
sar
push
outsb
sbbl
in
adc
push
mov
mov
in
in
adcb
dec
or
push
jne
cwtl
mov
std
pop
or
inc
andl
je
lea
or
and
xor
insb
dec
test
inc
sub
inc
mov
push
test
shrb
or
addl
jmp
pop
add
push
pusha
cmp
cmp
push
inc
into
pop
sti
cli
push
js
mov
cmp
cmp
icebp
movsl
in
cmovl
loop
jg
sbb
cmc
push
loop
lds
push
jae
push
mov
pop
add
jmp
sbb
xchg
xchg
add
xchg
mov
mov
jne
lea
or
sbb
mov
add
mov
mov
cmp
inc
sti
js
roll
aam
test
shlb
cmp
jne
sub
in
clc
ret
inc
fwait
dec
add
pop
decl
outsl
push
jmp
lea
aas
fcompl
call
sub
mov
bound
dec
lcall
pop
mov
cmp
dec
xor
fsqrt
push
in
repnz
out
mov
iret
and
popf
test
or
jnp
js
call
cmp
pop
clc
mov
fucom
inc
or
or
sbb
xchg
xchg
mov
stos
pop
xchg
add
test
mov
sbb
mov
ret
rorb
sbb
cld
aad
mov
add
out
sahf
mov
incl
mov
mov
mov
add
lods
lcall
or
rdmsr
out
inc
mov
pop
or
dec
push
inc
and
and
mov
adc
loope
jl
xchg
cs
test
rclb
clc
push
fucom
inc
jb
xchg
xor
pop
enter
push
cmp
xor
sub
add
push
or
jl
in
lock
xchg
int
mov
sar
int3
lahf
xor
outsb
push
sub
and
hlt
movsl
push
mov
and
dec
loop
std
sub
xchg
dec
and
aad
test
sbb
imul
adc
pop
test
popf
and
sub
fucompp
dec
mov
cmovs
mov
cld
jg
dec
add
mov
add
add
mov
add
or
inc
popf
ljmp
mov
sub
xchg
dec
push
js
push
xchg
mov
std
cld
adc
nop
dec
fisubrs
mov
loop
and
jmp
jo
ss
sbb
scas
sub
xor
lods
pop
xor
or
aad
xchg
das
stos
push
mov
rcrb
aaa
mov
call
mov
loop
subl
mov
rol
mov
sbb
push
dec
adc
fidivrl
subb
daa
mov
js
xchg
movsl
das
scas
push
arpl
pop
xchg
sub
jg,pt
fisttpl
or
mov
mov
leave
jno
test
imul
test
shlb
inc
lea
add
mov
sbb
jmp
aam
filds
inc
mov
adc
add
cmp
out
mov
gs
scas
mov
outsb
pop
mov
xchg
add
cmc
or
movsb
ret
sbbb
push
js,pn
shrl
or
je
fisubl
jge
or
mov
pop
stos
and
out
fildll
jno
sti
inc
mov
lea
mov
add
sub
jge
adc
fistl
push
sub
jno
jb
xor
movsl
fists
sbb
test
jl
inc
mov
xchg
sbbb
mov
das
dec
push
cmp
popa
pop
mov
movsl
add
bound
cmp
and
mov
lret
or
pop
mov
dec
std
push
es
ret
cld
push
scas
add
mov
jp
add
lods
aam
sub
xchg
push
jno
sbb
stos
scas
adc
outsl
inc
mov
or
ss
jmp
push
iret
add
movsb
xchg
push
pop
fildl
xchg
inc
xchg
inc
sbb
lea
push
cmpb
push
xchg
ljmp
fdivl
test
xchg
pop
mov
aas
mov
loope
pop
les
lods
lret
fld
push
jg
mov
sub
in
cmp
inc
cmp
test
push
xor
jne
test
mov
js
sbb
mov
data16
shll
or
stos
mov
lods
mov
and
inc
adc
hlt
xor
mov
push
and
sbb
adc
movsl
out
insl
insb
adc
jnp
fisubrs
fiadds
sbb
inc
ret
pop
js
sbb
test
aaa
aaa
mov
dec
mov
pop
stos
fnstenv
dec
nop
pusha
add
outsl
lock
nop
jb
sub
xorb
aas
dec
mov
cs
loopne
out
lods
inc
xor
cmc
inc
mov
mov
fstpt
push
mov
mov
movsl
fwait
or
movsb
sbb
out
outsb
mov
xchg
jmp
mov
outsl
arpl
adc
xor
adc
mov
lods
push
hlt
aaa
lock
sbb
adc
push
scas
pop
jmp
adc
dec
xchg
iret
scas
iret
pusha
or
cmpsb
mov
cmpb
sbb
cmc
push
or
jmp
add
fsub
cmp
lock
fidivs
int
xor
push
or
pop
insl
cli
lods
sub
push
test
iret
adc
mov
int
push
hlt
bound
movsl
andl
ds
clc
lods
or
decb
leave
and
or
sbb
cmp
idivl
flds
je
outsl
xor
inc
lods
addb
and
sarb
xchg
cli
cmpsb
inc
add
das
inc
int
mov
mov
mov
insl
push
mov
daa
xchg
jg
sub
xor
clc
and
rorl
cmp
or
and
and
sbb
inc
clc
mov
push
mov
es
lret
scas
inc
shlb
inc
push
mov
clc
or
std
push
jg
shlb
faddl
fucomp
int
popa
fs
lods
stos
jae
inc
inc
fadds
decl
pop
jno
mov
jns
or
aam
pop
shll
jmp
aaa
mov
push
sbb
in
pop
and
mov
cmp
js
loope
outsl
rolb
inc
xchg
or
lea
push
dec
rorb
inc
ljmp
add
add
push
test
out
lods
fdivr
inc
xchg
fiaddl
daa
and
enter
insb
bound
call
jnp
enter
iret
push
aaa
push
sub
adc
push
jne
sbb
adc
xor
and
in
rcll
nop
fdivs
push
push
add
inc
dec
out
cmp
mov
mov
dec
inc
dec
jo
push
mov
out
clc
int3
in
test
add
in
sbb
mov
icebp
sub
push
shr
xchg
and
adc
push
in
pop
cmp
adc
pop
ficoms
cmp
pslld
sti
push
cmp
aas
rorb
add
jmp
add
fsub
dec
jns
in
inc
paddd
outsl
dec
jmp
fldcw
and
xchg
mov
mov
movsb
mov
mov
cli
lods
test
adc
mov
sub
jecxz
pop
pop
clc
in
mov
dec
inc
ret
inc
sbb
sbbl
in
and
xchg
mov
sbb
addl
in
sub
mov
aam
mov
xchg
clc
cltd
mov
lahf
ficompl
in
dec
out
mov
pop
mov
mov
ja
cld
jp
addb
dec
mov
xor
inc
cwtl
jle
adcl
out
gs
hlt
inc
jne
test
mov
or
dec
lods
jl
inc
lods
mov
stc
sbb
jmp
cli
adc
cmp
mov
mov
sarl
mov
les
jmp
and
imul
stos
mov
pop
in
jg
lods
js
clc
or
pop
jmp
lods
mov
cmp
jl
test
mov
xor
mov
dec
mov
xorps
push
add
fcmovnbe
repz
imul
mov
test
jno
xchg
add
sbb
andl
out
daa
or
fbstp
jecxz
lds
and
lods
jp
push
mov
or
js
cmp
pop
or
aaa
sbb
lea
mov
sub
mov
cmc
bound
mov
shl
inc
js
cmp
fistps
xchg
pop
into
bt
out
jnp
add
xor
sbb
adc
and
sbb
clc
notb
mov
xchg
mov
cli
push
xchg
push
add
pop
push
xor
inc
cs
push
ljmp
lea
loopne
mov
leave
mov
rcrb
inc
imul
sbb
add
fnstcw
push
fiaddl
pop
or
xchg
in
cwtl
sub
sahf
hlt
mov
sub
add
sbb
push
push
add
rcrl
outsb
aad
cli
sub
ret
mov
push
mov
cmpsb
add
fimuls
pop
add
sbb
outsl
lock
jecxz
scas
pop
jae
jae
movb
insb
insb
aaa
inc
fnop
test
dec
imul
mov
inc
es
dec
mov
mov
sbb
nop
addr16
int3
ljmp
mov
or
dec
testl
push
or
iret
adc
movsl
shlb
arpl
icebp
push
cmpb
mov
outsb
repnz
sbb
rclb
push
lret
pop
mov
lcall
sub
aaa
or
pushf
cld
xorb
sub
andb
xorl
pop
xchg
jmp
int3
or
mov
shll
or
cwtl
or
push
outsl
add
daa
xchg
lret
mov
jg
lods
popl
outsb
test
sti
mov
push
and
pop
dec
push
pop
push
call
outsl
cmp
mov
fwait
dec
sbb
lds
mov
push
sub
or
mov
push
mov
cltd
popf
and
or
ret
inc
out
fistpll
xchg
in
push
sub
rcrl
dec
adc
pusha
sbb
call
mov
cmp
movsb
rolb
sub
sbb
aad
mov
jo
push
inc
or
cld
sbb
xchg
pop
mov
pop
and
or
dec
jb
inc
les
lock
mov
xchg
add
dec
and
pop
stos
ljmp
xor
inc
enter
dec
jg
subl
movsl
into
sbb
stc
ret
xchg
cli
pop
cs
push
xchg
add
addr16
add
jecxz
mov
lret
adc
ss
ss
test
fadd
pop
test
dec
clc
lds
ret
test
in
push
fisubl
push
sbb
xlat
fs
or
mov
xor
push
ja
add
lock
mov
mov
add
fiaddl
cld
loop
int3
dec
add
dec
mov
hlt
or
add
les
cltd
xor
out
sbb
mov
insb
or
test
jbe
sbb
xchg
inc
test
or
scas
imul
jmp
xchg
lahf
mov
call
mov
movsl
jp
xchg
pop
mov
aad
push
ror
pop
xor
lock
mov
dec
add
mov
out
add
negb
push
mov
into
test
imul
add
insl
cmc
jle
sbb
into
add
cmp
xor
inc
or
addr16
lds
push
push
mov
mov
in
jle
cs
sub
pusha
bound
sub
push
inc
mov
xchg
pushf
fistl
xchg
test
lods
outsb
mov
es
stos
jmp
push
dec
push
stos
push
jmp
mov
add
aas
push
int3
and
ljmp
sarl
pop
jns
clc
sub
sbb
test
jno
pushf
sbb
and
sbbl
or
push
rorb
shll
jmp
int
daa
scas
hlt
mov
jno
fcom
xchg
outsl
repz
lret
sbb
mul
rcrb
sub
fcmove
sahf
outsb
sbb
add
inc
push
dec
jb
xor
pop
push
mov
mov
fdivl
mov
aam
inc
jns
je
cmp
inc
jb
mov
nop
dec
flds
loop
ss
and
xor
fiadds
jl
mov
std
out
les
les
inc
nop
hlt
sub
cld
jg
adc
js
adc
and
shl
rorb
cmc
inc
lea
or
xchg
aaa
lods
mov
cmpb
test
cwtl
hlt
lea
dec
dec
addr16
stos
mov
ja
push
faddl
mov
pop
std
jg
inc
je
push
in
push
inc
inc
loopne
xor
dec
or
stos
sahf
adc
outsb
lock
mov
shrb
sti
sub
sbb
mov
xor
dec
cmp
mov
in
dec
cmp
in
adc
rclb
cs
xchg
mov
add
cmp
addl
xor
lds
in
loope
mov
into
xchg
adc
jecxz
adc
lahf
cmp
cmc
or
jns
call
add
pop
or
push
or
pop
pop
push
mov
rol
pop
je
aas
add
mov
jbe
inc
mov
mov
cmp
enter
add
nop
out
push
mov
cli
clc
pop
mov
mov
and
nop
or
push
pop
fsubr
rolb
rclb
pop
jne
jecxz
fimuls
stc
xchg
test
push
xchg
jp
xor
testl
aaa
and
cmp
mov
cmpsb
add
cmp
jbe
pop
pop
pushl
mov
stos
or
in
jp
add
dec
push
rorl
or
xchg
push
pop
das
and
jbe
push
cwtl
push
fcmovbe
sbb
cmp
stos
mov
or
test
mov
or
enter
mov
in
movsl
cs
or
fbld
frstor
loope
cli
pop
cld
lcall
push
js
cmp
mov
outsb
sbb
mov
add
test
adc
lret
jecxz
rcr
mov
mov
cld
mov
jg
aaa
cld
cmpsl
dec
push
xchg
rolb
shll
imul
mov
dec
repnz
inc
xchg
push
shlb
mov
icebp
pop
add
pop
push
cs
xor
js
inc
jo
outsl
shlb
ret
jp
frstor
pop
jl
stos
jo
sub
divps
hlt
sbb
clc
sbb
pop
jne
and
testl
cmp
jecxz,pn
sub
pop
or
in
loopne
rorb
pop
mov
pop
fs
aas
jp
lock
jmp
cmp
nop
nop
icebp
in
mov
add
xchg
cmp
roll
clc
movsb
arpl
push
outsl
inc
and
scas
and
loopne
aaa
sub
xor
xchg
mov
mov
mov
and
mov
push
fnstenv
out
inc
enter
jg
movsl
xor
pop
push
adc
sub
and
imul
sahf
or
inc
mov
dec
adc
mov
push
outsl
insl
add
int
lods
popa
lds
adc
arpl
lock
insb
xchg
loop
out
bound
cltd
jg
lahf
aam
out
incb
iret
int3
inc
cmp
dec
test
jge
ret
mov
add
jb
mov
flds
mov
adc
pop
dec
fs
add
cmp
pop
fstpl
mov
shr
or
pop
sub
cmp
xorb
pusha
jmp
mov
inc
mov
and
clc
fnstsw
pop
pop
lods
lock
loop
cmp
add
bound
cltd
add
andb
add
mov
sbb
out
push
mov
aam
addl
arpl
sbb
jno
scas
cmpsl
sbb
in
pusha
push
ljmp
shll
mov
test
shll
std
push
test
in
push
mov
adc
sbb
xlat
xchg
fdivrs
mov
cs
jno
inc
gs
inc
jl
mov
mov
adc
hlt
lods
ret
jo
and
sahf
sub
cmpsl
popa
push
test
outsl
inc
add
sub
xchg
stos
jbe
mov
mov
or
dec
sub
cmpsl
insl
and
aas
mov
mov
mov
push
cmc
and
cs
ss
jb
mov
lods
faddp
jle
cmc
add
aam
inc
pop
outsb
xlat
js
popa
pop
dec
lods
sbb
loop
xor
cmc
sub
jb
pop
adc
stos
sbb
jg
ret
mov
add
aam
shrb
pop
aad
mov
jae
aaa
stos
adc
mov
mov
sarb
addr16
std
testb
adc
add
dec
xor
test
mov
xor
jmp
lds
sbb
dec
mov
loopne
pusha
and
mov
sbb
and
sbb
ja
add
gs
enter
pop
lcall
cmp
xorl
jg
inc
clc
fbstp
jnp
or
push
jbe
or
cld
dec
daa
mov
jl
rcr
pop
jle
inc
je
pop
stos
cmp
lea
aas
rorl
dec
int3
mov
mov
shrb
loop
pusha
aas
mov
add
mov
adc
insl
enter
inc
lods
and
das
icebp
push
imull
mov
or
or
sbb
sti
pop
xchg
push
sub
fimuls
jmp
mov
out
pop
subb
cld
fiaddl
mov
mov
adc
pop
add
dec
push
cmp
mov
push
pop
xchg
mov
int3
pusha
sti
mov
inc
out
adc
lea
mov
sub
outsl
jne
test
test
mov
ja
iret
inc
dec
pop
xor
push
ja
mov
mov
inc
rcr
or
inc
inc
mov
scas
mov
dec
call
sarb
bound
mov
subb
or
mov
or
adc
fisubrs
inc
in
rorl
pop
mov
mov
fiadds
int3
mov
xchg
dec
inc
outsl
xor
cmpsl
xor
or
mov
ljmp
inc
loop
out
nop
aad
ss
dec
sbb
push
pusha
adc
pop
fstl
jl
in
lea
imul
outsb
jl
rcl
outsl
pop
testl
mov
push
scas
arpl
stos
pop
test
cld
ja
pop
pop
outsl
pop
inc
outsl
xchg
std
or
leave
or
orb
xor
sub
aad
into
push
imul
stc
xor
rclb
pop
mov
add
in
sbb
mov
ret
shlb
adc
dec
js
fcmovnbe
outsl
mov
out
cld
cmp
pop
loop
sti
push
adcb
out
or
cmc
xlat
test
les
or
aaa
xor
jnp
test
fninit
repz
movsl
mov
ja
popf
inc
sbb
in
dec
ficomps
sbb
or
into
in
dec
pop
fwait
lods
jg
jmp
mov
scas
inc
add
and
xchg
jp
icebp
and
inc
roll
sbb
inc
push
scas
inc
insl
ffreep
cmc
popl
mov
jl
mov
shl
xor
and
les
xor
inc
fs
jns
push
and
fidivs
data16
mov
pusha
loop
and
push
push
jne
dec
insb
lock
sarb
pop
adc
cmc
mov
adc
lds
ds
jge
ror
mov
jo
sahf
mov
ss
cltd
jnp
xor
jecxz
sbb
push
mov
add
inc
ja
fld
dec
pop
loopne
aaa
pusha
outsb
test
sti
push
pusha
inc
or
insb
sbb
push
fstp
push
aad
adc
aaa
adc
and
mov
sub
insl
pushf
and
sub
push
jnp
movsb
and
or
mov
inc
xchg
adc
jb
adc
pop
xor
js
sbb
push
aaa
in
and
rcr
jg
mov
dec
push
mov
mov
inc
jle
adc
xor
sub
cmp
pop
mov
loop
and
sbb
call
leave
or
mov
movb
or
popf
add
imul
inc
mov
cmovb
mov
adc
mov
leave
icebp
shlb
rcrb
push
dec
sar
sbb
xchg
jo
push
add
add
in
cld
outsl
dec
mov
push
inc
sbb
test
and
pop
jmp
add
call
out
outsb
adc
jo
repz
enter
adc
xchg
push
sbb
cltd
fildl
xor
sub
inc
sub
popa
mov
inc
stos
not
dec
pop
mov
sbb
in
shlb
sahf
popf
hlt
push
fwait
outsb
mov
cmc
mov
adc
cmp
adc
lahf
mov
dec
movsb
mov
fistpll
insb
and
sbb
jo
inc
lret
xchg
add
das
add
mov
mov
and
outsl
add
adc
mov
mov
mov
sbb
sti
incl
pop
xor
test
out
aaa
xchg
xchg
popa
sbb
adc
out
mov
xchg
cli
inc
clc
aam
test
and
xchg
popa
loope
sbb
in
icebp
ljmp
lods
mov
movsl
ret
and
sbb
stos
lahf
sti
movsb
cmc
test
dec
inc
cs
mov
cwtl
adc
adc
aaa
inc
dec
repnz
fisubrl
push
xlat
cmp
cld
ss
mov
cmp
nop
push
sbb
rolb
pop
shl
cmp
sar
int
jl
loop
dec
roll
add
mov
mov
sbb
adc
fwait
lock
sahf
adc
mov
sbb
xor
fildll
xor
jl
add
jb
dec
push
inc
mov
popa
or
xchg
out
mov
cmp
dec
xchg
jge
lret
adc
mov
loop
push
dec
jmp
das
mov
insl
in
xor
or
sbb
pop
jo
pop
loopne
pop
int
inc
aaa
test
and
inc
pusha
das
and
xchg
outsb
pop
mov
test
sbbl
negl
outsl
pop
loop
sub
and
pushf
ss
inc
stc
or
in
leave
pop
jp
and
push
mov
fildll
sub
fs
add
test
jne
insl
and
loopne
bound
and
adc
mov
mov
push
add
imull
mov
test
mov
fstpt
or
jmp
mov
dec
aaa
push
rcll
loop
mov
cltd
push
mov
push
push
pop
sbb
jnp
sbb
aaa
inc
insl
aad
bound
sbb
dec
or
mov
aad
cli
pop
decl
les
inc
cmp
jae
or
mov
xlat
sti
or
aad
ja
shr
add
mov
mov
fisubl
sahf
inc
jecxz
lea
cwtl
shrb
mov
cld
fcomip
cs
mov
stos
add
push
mov
lods
cmpb
xorb
jmp
dec
leave
dec
jecxz
dec
pop
imulb
ljmp
and
push
adc
loope
mov
or
add
sbb
cli
inc
cld
lahf
and
aaa
mov
mov
cwtl
xor
fisubl
pop
pop
test
arpl
in
ret
sti
call
dec
into
jp
sub
mov
or
pop
jmp
ss
lret
sub
in
xor
jo
xchg
or
xor
mov
fidivl
cmpsb
xor
fdiv
cmp
mov
jb
inc
ret
push
inc
test
mov
pop
inc
pop
mov
sub
add
inc
jle
mov
adc
lret
xor
loopne
stc
fnstenv
xor
test
jge
push
inc
aaa
xchg
cltd
add
jbe
call
mov
add
push
cld
aaa
push
stc
cli
or
fwait
shlb
loopne
pop
lods
mov
aam
outsl
aaa
js
mov
and
add
push
pop
adcb
lcall
cmp
mov
and
mov
fidivrs
xchg
sub
icebp
mov
jle
cmp
loopne
stos
out
push
rorl
test
mov
ds
sti
mov
or
outsl
sbb
adc
mov
or
movsl
hlt
ds
mov
out
xchg
mov
or
mov
or
xchg
cltd
inc
jmp
push
test
aam
push
out
pop
push
inc
xchg
or
or
and
inc
jo
lahf
data16
decl
jecxz
pop
adc
push
fisttps
add
nop
pop
movsl
pop
xlat
mov
pop
xor
jecxz
loop
sbb
mov
das
mov
popf
adc
jmp
adc
push
adc
mov
jecxz
sub
inc
jbe
inc
rcrb
push
mov
xchg
cmpsb
dec
shll
insl
add
pop
sub
mov
mov
lea
cmp
data16
cmpsb
sbb
add
in
nop
sti
inc
insl
loope
loopne
mov
cmpsb
adc
popf
and
push
lret
inc
cwtl
stos
je
inc
ja
inc
fs
xchg
sbb
sub
push
insl
inc
lret
sub
add
add
push
mov
sub
icebp
loopne
or
fisubl
add
dec
dec
in
fimuls
sbb
add
cmp
sbb
push
scas
fs
push
add
or
or
xchg
and
test
clc
and
push
mov
fmull
insb
lcall
testb
testb
and
sub
adc
loopne
mov
in
nop
dec
jno
subl
lock
lret
mov
fdivrl
add
lods
mov
lock
es
pop
aaa
adc
inc
inc
jb
mov
xor
xchg
sbb
mov
sbb
push
jge
stc
lock
movsl
sbbb
icebp
add
jo
mov
pop
shll
xchg
daa
xor
jl
cli
rclb
shrl
lea
lcall
push
in
dec
mov
mov
in
out
push
mov
mov
xchg
or
dec
sahf
ljmp
lcall
xlat
lods
std
outsl
adc
adc
jbe
adc
push
lds
ret
call
pop
push
and
arpl
outsl
fsubrl
js
xor
scas
jno
stos
or
ficoms
ret
sbb
mov
xchg
aam
ret
mov
and
lods
ffreep
mov
insl
inc
scas
cltd
icebp
dec
inc
jb
mov
mov
lcall
test
or
pop
mov
lahf
pop
push
or
inc
xchg
shrl
sub
push
bound
rcrb
pop
inc
cmpsl
add
mov
lock
xchg
cmp
mov
push
pop
clc
lgs
in
out
int3
mov
aad
mov
and
movb
mov
mov
fisubrl
add
xlat
pop
ss
lods
xchg
and
icebp
leave
mov
dec
fists
inc
mov
nop
enter
pop
jb
push
pop
sub
fdivl
push
sbb
mov
call
xchg
xchg
inc
sbb
mov
dec
inc
push
fisubl
decb
out
sbb
cmp
pop
call
insl
add
dec
daa
pop
push
jecxz
mov
pop
add
pop
sbb
leave
movb
mov
adc
loopne
and
out
jle
lea
add
sbb
cmp
shrl
push
aad
push
mov
js
sbb
divl
push
cmp
mov
in
mov
dec
sub
mov
ljmp
add
jg
cli
or
sti
push
mov
fstl
push
fdivr
ret
rcrl
add
outsl
cmpsb
stos
push
mov
pop
sbb
in
lods
lea
pushl
push
lcall
inc
dec
sub
push
lods
push
sbbl
outsb
shrb
fcmovb
xchg
jle
xor
push
mov
icebp
lods
cmc
in
es
sub
inc
movl
rorl
pop
cmpsb
dec
pop
sub
mov
pop
and
outsb
pusha
mov
popa
xchg
and
dec
hlt
inc
xor
fs
jge
push
inc
std
mov
push
repnz
push
fldl
outsb
andb
sub
sub
cmc
test
push
mov
and
les
mov
adc
rclb
inc
cld
out
fbld
lds
mov
jnp
aaa
sub
sub
outsl
in
popa
jecxz
mov
jg
incl
dec
jle
daa
mov
mov
enter
jecxz
out
or
lahf
push
dec
and
xor
dec
mov
test
add
popa
sbb
rclb
add
mov
jg
movl
pop
pop
sbb
sub
fs
call
dec
aam
lods
cmpsl
test
pop
mov
and
pop
ds
xor
cmpb
clc
repnz
xlat
mov
xchg
stos
int3
loope
push
clc
pop
and
add
loopne
push
or
jno
fistl
movsb
and
pushf
arpl
add
fmull
xchg
sub
and
mov
clc
inc
andl
aas
xchg
inc
lds
and
and
dec
std
clc
dec
xchg
mov
sbb
in
xchg
addl
and
pop
and
sub
sbb
daa
faddl
dec
adc
ret
test
and
and
mov
punpckldq
push
fucomi
jl
jb
mov
fdiv
dec
push
push
adc
push
pop
inc
push
cltd
test
add
push
adc
cmp
pop
adc
decl
mov
lods
mov
and
xorb
lock
cmp
clc
push
scas
jp
or
std
push
mov
mov
inc
lret
cwtl
pop
jmp
push
call
mov
and
push
pop
mov
pop
insb
or
fldl
enter
cmp
cs
sbb
sub
cmp
mov
jbe
pop
mov
cli
mov
das
adc
shl
in
add
pop
and
adc
mov
lods
mov
lods
unpckhps
aad
mov
mov
fisubrl
and
lods
ret
adc
dec
js
add
push
xlat
cld
jb
inc
repz
dec
fimuls
fwait
pop
movsb
jecxz
xor
sbb
rorb
sub
fsubr
imul
insl
pop
jbe
pop
mov
xchg
push
fildll
jg
cmc
rorl
jbe
call
sbb
push
adc
test
inc
lods
imul
adc
arpl
das
jo
push
ja
mov
fsub
mov
lods
shlb
mov
out
lock
mov
clc
mov
aad
xor
ret
insl
mov
psrlq
ret
mov
scas
arpl
inc
mov
sbb
scas
lret
push
jl
shl
fisttps
mov
pushl
push
xor
sbb
movsb
mov
and
inc
mov
mov
pusha
inc
notl
cmc
pop
xor
repnz
mov
cltd
or
fdivr
das
xchg
loope
mov
or
dec
setp
push
add
test
out
dec
jb
pop
loopne
add
sub
repnz
outsb
mov
adc
jg
test
cmc
test
test
xorb
inc
lds
push
in
cmpsb
xchg
fmuls
mov
or
or
outsb
fcompl
mov
jg
loopne
repnz
loopne
mov
fst
movsb
jl,pn
es
push
mov
mov
sbb
xor
sub
and
insb
add
negl
fisubl
mov
dec
adc
call
movsb
mov
mov
xor
into
js
mov
mov
pop
lret
lret
decb
cmc
xchg
lcall
lock
aam
fisubs
and
cmp
adc
clc
ret
test
fnstsw
or
stos
or
decl
fwait
in
adc
add
push
jmp
pusha
or
pop
cltd
sti
mov
mov
mov
cmp
outsl
repz
mov
mov
das
sbb
xchg
gs
adc
rcl
scas
mov
push
out
xor
inc
mov
gs
into
jecxz
and
lcall
cmp
mov
push
sub
mov
sbb
xchg
test
fwait
mov
pop
mov
cmpsl
jns
rcl
add
cli
push
icebp
lret
add
push
je
addr16
mov
fsubrs
push
popa
icebp
mov
mov
xorb
inc
jns
cld
inc
aas
in
sub
dec
enter
pop
jg
aaa
aas
add
les
fs
push
sbb
sbb
mov
pop
ss
push
ljmp
aam
pop
xor
xor
adc
pop
insb
sub
mov
push
cwtl
hlt
xchg
sbb
notl
fidivrs
mov
in
sub
fistpll
outsl
das
mov
dec
and
bound
add
jb
decl
xchg
imul
pop
and
xor
and
pop
push
sbbb
shll
pushf
fwait
je
cwtl
loope
jge
loopne
insb
mov
int3
pop
mov
push
mov
dec
test
pop
fwait
dec
xchg
pop
sub
pop
cmp
mov
or
pop
nop
pop
and
xor
push
inc
int
ds
push
cli
fadds
adc
xor
pop
lea
push
jns
xchg
xchg
adc
xchg
clc
jg
insl
dec
mov
xchg
sbbl
push
sbb
push
fdivl
mov
sbb
and
ja
shlb
mov
inc
fnstenv
imul
pop
jae
testb
loopne
pop
bound
jns
clc
or
pop
inc
push
iret
decl
xor
push
dec
fs
ss
addr16
icebp
mov
bound
clc
aad
xor
mov
frstor
mov
inc
cmp
cwtl
cmpb
cli
out
jbe
loopne
jmp
inc
or
iret
mov
subb
lods
jnp
ds
int
and
sbb
sbb
add
rorl
insl
sbb
adcb
rolb
sar
lcall
aas
inc
cwtl
loop
mov
push
jno
fwait
mov
lret
icebp
insl
jmp
sub
lret
sub
mov
ja
ds
ret
das
repz
jmp
pushf
jb
add
fnsave
fsubs
nop
rcrb
mov
add
repz
filds
aam
cs
cmp
fsubs
aam
ss
push
cmp
std
sbb
mov
inc
add
inc
cmc
loope
mov
push
sbb
xchg
inc
movsl
scas
aam
out
push
imul
pop
add
sarb
add
add
outsb
mov
ret
loope
push
sub
inc
icebp
sub
in
ss
sub
insl
jle
movsl
and
data16
mov
test
bound
jmp
hlt
push
test
jb
or
jl
ret
imul
cmp
mov
jae
or
test
xchg
add
fwait
aas
mov
or
lock
pop
or
rorl
ret
lods
mov
and
cs
adc
movsl
test
mov
mov
push
mov
jno
and
mov
imul
xchg
sti
push
inc
push
pop
push
outsb
mov
add
mov
insb
out
jecxz
inc
mov
cmp
mov
aaa
pop
sub
fnstcw
mov
cmp
jb
sti
or
push
cmp
repz
inc
mov
repnz
fldt
adc
in
into
lcall
leave
ss
sub
gs
add
adc
fisubrs
add
jne
push
divb
fstl
sarb
outsb
fwait
or
test
pop
dec
jno
lcall
adc
mov
dec
xlat
test
cli
in
aam
add
data16
fistl
lods
pop
jg
push
imul
sbb
cmp
gs
stos
push
fidivl
test
fadds
xorb
ret
mov
add
mov
sahf
clc
add
adc
lods
movsl
ja
inc
je
pop
mov
jmp
sub
test
cmc
or
stos
sub
cmpsl
lret
fdiv
loopne
stos
outsl
incl
add
das
les
pop
ss
mov
sbb
jl
mov
lock
push
out
mov
push
push
inc
sub
jmp
rolb
adcb
scas
mov
mov
ror
push
jmp
test
ret
in
js
push
dec
popf
nop
xchg
pop
fsubl
mov
xor
adc
aam
xor
repz
incl
inc
adc
cmpsb
xchg
mov
push
or
inc
repnz
js
add
mov
movsb
inc
in
nop
cmp
cs
aaa
clc
test
pop
and
scas
xor
adc
or
sub
jle
rcr
push
push
add
inc
and
fstpt
ja
inc
mov
adc
out
shll
std
je
aam
ljmp
loopne
test
gs
xlat
and
iret
dec
jno
jo
lea
push
sub
pushf
cld
ja
push
loopne
or
or
push
das
pusha
mov
jge
mov
fcoml
pushf
icebp
sub
push
cwtl
mov
pop
insl
mov
xor
fcomip
fmulp
xchg
inc
jno
clts
mov
ja
inc
lds
xchg
jbe
pop
push
scas
mov
sbb
cltd
mov
pop
clc
dec
fnstsw
out
and
xor
mov
fistps
das
sub
cmp
add
aas
mov
call
pop
add
fdivs
add
fcoml
adcl
leave
loop
xchg
dec
fistps
or
and
xchg
int3
lahf
inc
mov
jl
pop
xchg
seto
mov
bound
movsb
enter
xchg
jp
pop
sub
movsl
test
mov
sbb
xchg
mov
mov
out
test
jl
push
into
incl
push
stc
xchg
xlat
mov
or
xor
call
xor
ror
add
and
mov
pop
sahf
xchg
repnz
fildl
test
pop
or
jo
fnop
dec
nop
mov
xlat
xchg
mov
pushl
lret
icebp
data16
movsb
adc
int
inc
push
mov
ljmp
cmpsb
cmpb
jne
pop
dec
nop
movsb
addb
cmpsl
pop
in
adc
dec
imul
mov
daa
nop
mov
pusha
addl
add
negl
pop
or
jg
and
xor
addb
cmc
bound
sbbl
inc
fisubrs
xchg
stos
mov
sub
arpl
xchg
int
ret
xor
jo
ja
fnstsw
test
mov
cltd
ret
int3
mov
or
test
xorb
add
add
jae
cs
aaa
sub
adc
jb
mov
or
cs
xchg
sbb
mov
fistpll
jno
das
dec
dec
or
dec
cmp
subb
mov
mov
sub
nop
sahf
adc
roll
jge
inc
adc
inc
mov
dec
in
mov
xor
clc
mov
stos
sub
xchg
mov
cmc
std
fwait
mov
cmpsb
jp
mov
lcall
je
shr
push
add
and
xchg
out
cmp
lock
das
mov
mov
in
aad
cmp
mov
aaa
sbbb
in
mov
rolb
mov
or
imul
lret
ds
into
sub
mov
push
insb
shrb
enter
popf
mov
incl
mov
dec
mov
rolb
cmc
daa
xor
sbb
or
or
sub
fs
leave
outsl
add
mov
adc
mov
dec
lea
adc
adc
xor
loopne
aas
icebp
or
xchg
mov
jecxz
or
outsb
ljmp
imul
sbb
lea
rcll
sub
fcmovne
fcoml
fdiv
stc
mov
pop
cwtl
and
and
add
iret
jae
outsl
mov
sarl
in
call
mov
fstl
mov
ljmp
movsl
sbb
nop
in
icebp
aaa
mov
mov
das
call
es
mov
lods
and
call
adc
aad
cld
pop
xchg
movsl
je
sub
inc
adc
dec
push
dec
mov
inc
loope
inc
dec
repz
or
loopne
mov
xor
jo
or
mov
repz
pop
xor
push
outsl
and
add
jb
push
add
add
push
and
ljmp
fidivs
pop
sbb
adc
or
jg
roll
pop
fimuls
ss
jns
mov
std
dec
ror
shr
cld
sbb
nop
daa
push
inc
mov
sbb
jg
xchg
call
ja
pop
add
mov
movsb
pop
mov
pop
loopne
cmp
ficoml
pop
in
sbb
xchg
fiadds
cmpsb
jo
jb
leave
mov
mov
push
jg
mov
cs
dec
aad
in
shr
jge
jl
push
in
aas
mov
es
jg
movsl
mov
jmp
outsl
jl
add
mov
test
xchg
lcall
push
add
rorl
or
inc
ret
push
lahf
xchg
add
inc
xor
sub
sub
std
aad
inc
shlb
insb
out
loopne
scas
cmpsl
push
scas
out
mov
stos
repz
jns
mov
pop
or
and
das
inc
and
mov
je
mov
add
jg
pusha
pop
ret
andb
inc
add
push
lret
add
or
inc
xor
mov
in
mov
fcmovnb
cmp
sub
div
call
in
pop
xchg
lahf
mov
dec
jg
xor
dec
in
sbb
push
lds
xor
ss
aaa
hlt
inc
mov
adc
fmul
loope
add
jp
in
xor
mov
cmpsb
sbb
movsl
or
sub
dec
mov
push
xor
mov
push
inc
mov
addr16
lahf
jp
imul
sub
out
loop
xor
enter
popa
adc
int
mov
add
fstl
pop
call
sub
clc
aad
dec
sbb
mov
dec
push
ret
mov
loopne
inc
push
jp
mov
jle
pop
adc
add
mov
xlat
pop
popf
data16
adc
push
gs
or
push
xor
imul
adcb
pushl
scas
flds
dec
gs
sbb
pop
and
pop
shrb
int3
jl
rcrl
lods
out
in
lcall
mov
outsb
push
and
dec
test
fdivs
movsl
mov
cmpsb
int3
nop
jno
mov
stos
mov
ljmp
dec
cltd
push
rcrl
adc
add
mov
xor
xchg
repz
outsl
fldl
jecxz
ljmp
push
add
mov
xchg
jecxz
inc
addl
inc
jno
jno
iret
mov
mov
xor
lcall
ffree
popa
cmp
add
fmul
pop
clc
sarl
jmp
insb
dec
std
iret
mov
jb,pn
movsl
out
add
ret
jmp
adc
xor
mov
pop
sbb
loope
in
sti
xchg
sub
jne
dec
or
mov
inc
pushf
adc
push
xchg
js
or
adc
mov
cmp
add
cmp
stos
jno
lock
movsb
and
clc
jl,pn
fistpl
jo
aas
push
adc
icebp
loopne
mov
or
fisubrs
lock
add
test
inc
or
test
ret
dec
pushf
out
xchg
push
aam
adc
push
test
pop
lret
ficomps
xor
jbe
incb
or
cmp
insl
scas
insl
cmc
outsl
test
test
pop
test
fwait
add
adc
cltd
add
roll
icebp
mov
adc
clc
mov
jg
add
inc
and
inc
inc
xchg
jns
jne
mov
xor
and
xor
orl
movsl
mov
and
popf
cmpsb
inc
mov
sbb
push
pop
push
adc
cmp
or
push
fdivr
push
aam
fnstcw
mov
mov
clc
push
and
mov
xor
mov
push
loopne
mov
ja
ficompl
call
bnd
xor
cmp
loopne
add
and
loopne
test
jne
rclb
enter
pop
push
sub
inc
xor
into
push
jle
call
xchg
lcall
call
lret
or
and
icebp
lea
shrl
jecxz
ss
pop
bound
pop
mov
les
les
inc
fcomp
jmp
xor
scas
fsubrp
xor
push
icebp
push
mov
xchg
stc
pop
xchg
xlat
fcoml
sbb
ffreep
ja
jo
mov
test
fstpl
add
repnz
or
push
mov
add
mov
test
mov
xchg
sbb
fcompl
ret
pop
sbb
jns
iret
lods
mov
sti
jae
and
mov
testl
dec
xor
movl
xchg
test
outsl
pop
pop
fisubrs
adc
and
pushf
jge
xchg
jns
lock
xor
test
pop
int3
fildll
jmp
out
sysexit
adc
push
xor
fisttps
mov
sub
and
lcall
cmp
pop
icebp
pop
xchg
aaa
mov
ja
lods
cli
adc
add
ja
pop
dec
sbb
rclb
push
outsl
cld
sbb
mov
add
icebp
push
xchg
daa
pop
sahf
mov
add
loopne
pop
sub
loopne
mov
sub
dec
subb
pop
stos
pop
push
jbe
mov
adc
sub
mov
mov
ret
int3
fiadds
das
add
daa
sbb
out
sbb
dec
xchg
lds
fcoms
fcmovb
adc
or
or
or
pushf
mov
dec
inc
inc
lods
xchg
push
jl
incl
xchg
sti
cmp
bound
loop
lods
mov
lea
cwtl
movsb
outsb
stos
test
push
push
lret
xor
dec
aam
jl
push
inc
push
xchg
mov
pop
inc
jl
jb
mov
add
fstpl
pop
cs
nop
dec
push
add
mov
mov
icebp
pushf
xor
add
pop
les
push
xchg
mov
xchg
icebp
popf
and
add
jmp
insb
out
aaa
les
mov
mov
loop
add
je
mov
sbb
jno
pop
call
inc
aaa
bound
in
lds
jae
dec
push
loop
jp
adc
mov
insl
cmc
mov
or
cmp
jmp
and
movb
mov
add
jae
xorl
cmp
xor
mov
add
fldt
insl
cld
das
jl
xchg
hlt
fnstenv
enterw
xchg
aad
lock
push
jg
sahf
sbb
mov
dec
insl
push
std
or
add
add
stc
inc
and
sbbl
popf
xchg
movsl
outsl
ja
test
notl
and
inc
or
xchg
popa
test
inc
lea
cld
rcrb
lds
fbstp
add
pop
test
incb
cltd
and
test
mov
sti
and
stos
adc
and
pusha
cmp
push
pop
pop
and
das
mov
sbb
lock
push
xchg
shll
xchg
jle
xlat
lods
mov
jb
call
sub
shr
mov
loope
shll
pop
xor
cmp
xor
or
mov
dec
pop
mov
mov
push
inc
adc
aam
ljmp
jae
es
dec
add
xchg
jp
imul
push
sub
ljmp
pushf
xchg
enter
hlt
jp
les
cmp
add
icebp
jle
rolb
je
or
mov
test
mov
test
mov
push
mov
lret
outsb
sub
mov
sub
cmp
sub
inc
lret
xchg
cmpsl
mov
cld
outsb
mov
cli
outsl
cmpsb
inc
xor
pop
push
sub
jne
mov
scas
test
push
arpl
adc
mul
inc
insb
test
jns
js
pop
popf
frstor
std
jno
and
iret
cmpsb
pop
inc
mov
mov
add
xor
add
mov
or
cmc
aaa
mov
or
movsl
stos
out
xor
rclb
xchg
or
inc
and
adc
xor
sbb
ljmp
outsl
outsl
sbb
pusha
cmpsb
stos
popf
xchg
and
and
nop
sbb
lret
jmp
notb
mul
enter
lock
inc
dec
push
jb
mov
mov
cmp
aaa
aas
pop
out
sbb
test
cmpsl
jecxz
jp
add
push
mull
mov
movl
inc
xchg
inc
mov
mov
shlb
pusha
sarb
popf
sub
js
xor
or
test
fsubr
sub
lods
cltd
xchg
mov
jg
mov
sbb
or
loopne
inc
jmp
adc
bnd
fidivs
notb
push
mov
loopne
push
stc
arpl
ret
js
mov
sub
hlt
shlb
test
lods
jmp
pop
loop
js
xor
cmp
stos
cmp
addl
mov
mov
shll
mov
add
mov
or
add
mov
dec
xor
mov
hlt
jo
adc
jle
mov
hlt
push
mov
fldl
mov
fcomps
mov
out
dec
sbb
mov
lahf
mov
jl
outsl
xchg
shll
loope
xor
ja
mov
cs
add
mov
and
mov
jg
xor
mov
or
or
fisttpl
cmpl
outsl
mov
lods
mov
add
push
outsl
adc
xchg
sahf
cwtl
outsl
mov
xorl
adc
cmpsb
mov
mov
dec
sbb
push
fisubl
pusha
ds
and
add
add
jmp
subb
das
jno
push
jo
mov
mov
push
xchg
adcl
out
out
push
sub
dec
popf
call
outsb
shlb
xor
xor
loope
adc
andl
in
pop
and
test
popa
jp
mov
jmp
out
clc
add
sar
adc
inc
pop
sbb
cli
mov
adc
mov
add
imul
xchg
or
lods
mov
je
xchg
outsl
add
push
shrb
mov
jecxz
in
test
mov
aad
sub
jbe
scas
shlb
push
pop
loopne
data16
lds
scas
icebp
orl
push
stos
lock
mov
mov
adc
mov
fs
push
cmpl
jmp
lods
dec
lea
xchg
mov
mov
and
in
lock
sbb
xor
into
cmpsb
fdiv
push
movsl
sarb
movzbl
leave
cs
call
data16
iret
jb
adc
sar
scas
rcrb
cld
inc
push
repnz
and
add
lret
sub
jle
adc
and
addb
xorl
in
ffree
add
fwait
xchg
pusha
and
sbb
rorb
xor
loop
adc
mov
pop
sbbb
in
shll
testl
fistpl
add
gs
js
xlat
push
push
test
ljmp
adc
mov
std
mov
mov
pop
mov
adc
mov
es
andl
pop
outsl
jl
mov
sub
cs
push
es
pop
cli
clc
adc
aaa
fstps
jbe
lcall
inc
fistpll
jns
aas
outsb
mov
inc
stos
pop
arpl
mov
pop
mov
jae
inc
or
fidivl
aam
loopne
repz
imul
adc
sbb
mov
hlt
in
and
ret
dec
push
pop
aam
sub
int
pop
mov
out
dec
daa
jno
push
push
push
call
mov
mov
push
xorb
push
and
cmpl
popf
std
adc
mov
add
mov
and
roll
and
sub
adc
rol
lds
sti
mov
aam
inc
inc
outsb
and
push
add
cltd
push
decl
cwtl
filds
and
decl
jno
fcmovnu
das
sub
mov
mov
inc
into
jle
test
jecxz
xchg
data16
out
mov
dec
aam
jl
roll
pop
cli
sbb
push
addr16
push
loopne
mov
push
mov
insl
scas
xor
jmp
enter
pop
test
popa
push
leave
in
jmp
jae
or
sar
rcrb
das
das
mov
mov
xor
outsb
rclb
xchg
jle
or
add
mov
sbb
loop
add
xchg
dec
loope
adcl
fcmovnu
adc
lcall
pop
mov
test
add
add
inc
xchg
mov
pop
outsl
outsl
aam
insl
aas
test
sub
pop
inc
pop
adc
shlb
test
js
inc
ficompl
lahf
sbb
rorl
xor
outsl
arpl
mov
and
inc
mov
shrl
xor
pop
ljmp
inc
notl
cmc
pop
mov
nop
fwait
jb
or
or
test
inc
sub
add
push
adc
xor
add
call
xor
or
jbe
mov
xchg
mul
jbe
lds
dec
ret
call
shrb
fxch
or
aaa
mov
fisttpl
add
sbb
cmp
test
fiaddl
sbb
scas
jbe
dec
cld
jg
pop
jns
jmp
iret
roll
adc
mov
mov
andb
mov
shlb
fsubr
pop
jp
lahf
dec
sub
push
movsb
and
call
cmp
aaa
pop
dec
mov
jae
fnsave
cs
dec
cmpsl
xchg
add
sub
mov
rcll
lea
movsl
in
xchg
sbb
mov
and
rcl
cmp
pop
scas
push
stos
in
xchg
jmp
les
shlb
jmp
test
sbb
lods
aam
add
or
lahf
add
push
cmc
sub
ret
pusha
sub
jecxz
sti
pop
cli
jne
or
inc
mov
enter
in
sub
mov
push
push
sbb
hlt
inc
or
mov
test
mov
or
cmp
mov
jecxz
ret
xchg
cmpsl
ljmp
mov
lea
push
repnz
call
push
scas
mov
dec
rcll
push
movsb
add
sub
lea
insl
sbb
xchg
sarl
inc
mov
andb
mov
test
cs
adc
inc
xchg
lcall
cmp
lock
or
addr16
add
sbb
dec
jno
sub
inc
sbb
or
idiv
inc
cli
or
sub
or
mov
aas
push
outsl
pop
mov
ss
xchg
outsl
xor
bound
ds
jnp
jge
push
stos
sti
test
ret
push
mov
negb
fsubs
int3
repz
sbb
adc
cli
xchg
js
mov
into
sbb
xchg
stc
and
sbb
pop
pushf
sbb
xchg
add
jg
test
out
or
mov
mov
call
xchg
fistpl
or
or
jg
lret
mov
shrl
inc
mov
es
mov
mov
cmp
inc
pop
shll
add
popf
in
imul
pop
mov
cmp
outsb
sbb
in
idivb
mov
scas
cmpsb
push
pop
add
sub
imul
xchg
pop
jo
lcall
sbbb
dec
xchg
push
enter
sbb
mov
dec
es
aas
inc
rcrb
jno
mov
pop
arpl
in
mov
dec
jae
mov
add
subl
and
mov
jle
aam
bound
inc
ja
sbb
lea
call
or
pop
cli
popa
jbe
pop
dec
pop
dec
cmp
clc
xor
pop
fstps
cmpsb
jp
lret
inc
jmp
sbb
mov
fwait
or
inc
xchg
fidivrs
das
cmp
dec
popf
loopne
xchg
les
dec
lea
or
bound
dec
pusha
mov
mov
sub
pop
sahf
sti
xchg
popa
outsb
or
push
fistl
in
mov
frstor
imul
cmpb
jg
add
sbb
cmpsb
imul
add
clc
mov
cmpsb
inc
sub
std
sbb
jns
xor
icebp
movsl
lods
iret
test
and
rcrb
push
fld
or
push
cwtl
ljmp
inc
decl
popl
movsb
sub
and
out
loopne
mov
dec
icebp
pusha
out
xchg
sbb
jge
adc
call
cmp
adc
sbb
in
inc
loopne
sbb
push
and
pop
leave
pusha
ficomps
xchg
xor
mov
aas
dec
les
cmc
mov
sbb
out
popf
insl
sbb
call
jecxz
add
push
inc
fsubp
adc
adc
adc
fisttpl
fwait
stc
mov
mov
aam
inc
push
in
psubusb
jle
sar
fadds
loopne
or
adc
lods
pop
js
xor
js
sub
aam
sbb
pop
aam
aam
outsl
push
and
and
pop
loop
jge
test
mov
iret
inc
and
mov
xor
decl
daa
xchg
ja
jne
loop
cmpsb
adc
mov
xchg
ret
je
cltd
xor
sbb
mov
dec
daa
pop
shr
push
jecxz
std
fisttps
mov
movsl
mov
addb
inc
mov
popa
push
xor
sub
stos
mov
xor
fs
loopne
ljmp
xchg
pop
push
xor
rorl
lds
cmp
mov
push
test
pop
mov
jp
mov
cli
icebp
inc
push
outsl
aam
inc
add
mov
sub
pop
xor
fsubrl
cmc
or
mov
push
inc
nop
cmp
mov
add
pause
or
cs
ljmp
mov
inc
inc
fdivs
loopne
std
push
xor
push
fbld
hlt
fnsave
aad
sub
cmpl
mov
or
mov
sbb
cld
push
inc
add
loopne
push
or
or
sti
push
ja
mov
pop
and
lea
cmp
lret
push
inc
lods
or
mov
xlat
xlat
or
cmpb
and
mov
hlt
adc
adc
push
aam
fwait
mov
test
mov
into
xchg
ret
addl
data16
sahf
fisubrs
fistpll
arpl
daa
lock
clc
lea
pop
sbb
notw
inc
pusha
dec
aas
stos
outsl
add
test
and
jecxz
fisttpll
inc
inc
mov
adc
xor
push
cmp
pop
inc
das
inc
fdivrl
mov
mov
jo
pop
xorl
push
or
ret
mov
dec
adc
cmp
cmpsl
mov
cld
mov
or
push
jns
pop
imul
cltd
popa
out
sbb
outsl
inc
in
mov
inc
loope
push
cmpsb
repz
pop
outsl
das
hlt
ja
enter
dec
or
push
push
add
sub
fucomp
and
pop
roll
test
fidivrs
out
icebp
push
mov
movsb
lcall
push
jbe
movsl
outsb
push
je
mov
or
adc
arpl
imul
js
adc
mull
push
dec
sub
cmp
das
adc
wrmsr
sbb
add
add
loopne
cmc
push
aad
adc
mov
adc
cmpsb
jnp
fisttpl
leave
push
add
add
inc
ret
pop
arpl
xchg
push
loopne
inc
popa
outsl
cmp
sub
sub
insb
sbb
pop
xor
mov
sbb
loopne
sbb
xchg
sub
mov
add
fistpll
insl
or
cltd
loope
push
lock
jbe
push
negb
aad
cmp
or
jp
gs
pop
lods
int
jmp
popf
loop
jne
clc
or
inc
pushf
out
adc
sbb
test
lcall
lds
jmp
stos
pushf
sub
mov
pop
pusha
or
mov
xor
pop
adc
mov
push
or
addr16
mov
aad
pop
clc
mov
lock
jecxz
adc
stos
add
call
lret
push
jne
lea
mov
in
repz
add
adc
lahf
cmp
pop
icebp
fadd
movsl
xchg
or
mov
dec
imul
mov
imul
out
pop
jbe
pop
ds
adc
call
sbb
sub
outsl
cmp
or
fstl
mov
adc
addb
enter
push
imul
adc
fmul
enter
pusha
imul
arpl
pop
xchg
or
lods
ss
imul
mov
dec
rcll
xchg
lahf
ret
movb
add
outsl
dec
in
pop
jo
push
popa
dec
mov
enter
fdivl
mov
sbb
shrb
repz
xchg
into
stc
jmp
xchg
in
push
push
in
icebp
pop
test
call
push
sahf
aaa
push
mov
fs
push
fisttps
xchg
pusha
in
xchg
mov
fsts
pop
pop
mov
and
roll
or
stc
xor
popa
shlb
nop
xor
repnz
stos
xor
das
sti
sbb
jb
adc
insl
cld
ljmp
or
xchg
and
push
out
pop
or
pop
push
pop
ljmp
push
in
stos
inc
mov
adc
outsb
sub
or
stc
incb
in
das
rol
lcall
mov
dec
mov
addl
ljmp
lcall
hlt
rorl
mov
xchg
loopne
or
add
imul
xchg
and
outsb
or
lret
in
sbb
xor
sub
pop
test
pop
and
rclb
and
inc
cltd
stos
and
stos
jb
movsl
rcll
dec
cld
push
aaa
out
pop
mov
stos
fwait
or
adc
mov
jmp
insb
add
insl
nopl
lods
add
sti
ds
cmpsl
push
jle
or
mov
bswap
dec
and
sub
or
pop
mov
arpl
push
sbb
jge
mov
in
out
push
lahf
arpl
lea
xor
mov
sbb
cld
mov
pop
add
cmpsb
pop
pop
dec
sub
mov
sbb
outsb
enter
sub
pop
or
outsl
push
mov
adc
xor
outsl
aam
mov
bound
add
jb
cmp
rorb
outsl
call
pop
add
or
movsl
jle
dec
shrl
xchg
mov
xchg
sbb
cmp
fimuls
sbb
adc
mov
dec
fmulp
fstpt
ljmp
popl
sbb
jge
decl
mov
fimull
adc
cmpsl
mov
out
cmp
imul
lea
aaa
sbb
xchg
mov
addr16
or
jp
divps
push
sahf
inc
push
sti
mov
andl
sbb
sti
das
mov
into
ja
repz
loopne
add
loop
jle
les
mov
jle
mov
mov
dec
loope
push
add
cmp
jnp
cmp
sbb
sbb
push
dec
xchg
xchg
into
push
pop
outsb
push
inc
call
jle
mov
cli
and
jne
stos
pop
lds
call
mov
adc
or
test
icebp
add
aad
ljmp
fs
int3
push
cmpb
sbb
jl
inc
inc
mov
cli
xchg
mov
shrb
add
push
jle
mov
push
clc
divb
call
adc
add
xlat
ret
clc
mov
smsw
ljmp
les
cld
hlt
xchg
dec
movsb
push
pop
loopne
ljmp
add
jg
add
add
insl
pusha
inc
mov
mov
add
jmp
mov
sub
sub
cld
and
rorb
sarb
add
xchg
faddl
mov
dec
add
dec
mov
bound
pushf
ficomps
xchg
add
stos
mov
imul
cmp
in
leave
add
sbb
push
push
sti
lret
sub
pop
arpl
out
imul
hlt
fwait
lahf
fdivrs
shll
sub
add
mov
dec
push
test
std
loope
decb
xchg
xchg
mov
mov
insb
dec
loope
xchg
mov
ljmp
filds
xchg
mov
icebp
mov
call
dec
pushf
sbbl
push
icebp
sbb
scas
dec
test
test
xchg
mov
xchg
adc
pop
mov
xor
es
or
dec
insb
jl
loop
jo
ret
sbb
jge
test
sub
or
popa
add
out
and
add
ss
lret
inc
sbb
hlt
xchg
test
in
mov
data16
adc
adc
lcallw
in
popa
adc
or
je
inc
loope
adc
test
stos
mov
or
adc
and
push
push
pop
sarl
movsl
jmp
mov
aam
xchg
in
push
ficoms
push
dec
popf
jne
add
in
test
dec
push
dec
nop
lret
push
loopne
add
xchg
lods
pop
jmp
sbb
inc
das
push
mov
add
leave
mov
or
test
or
lret
mov
test
js
negl
add
mov
fwait
dec
in
mov
imul
xchg
mov
and
mov
mov
hlt
daa
bound
cmpb
sbb
jmp
loope
add
inc
push
mov
xchg
leave
xor
jae
mov
jge
or
loope
jge
and
add
ficoms
mov
push
movsb
orl
dec
insb
ror
push
push
stos
testb
sbb
les
mov
test
cmp
push
dec
pop
fiaddl
ja
jo
or
xchg
ret
sbb
mov
mov
push
fwait
inc
cmp
push
push
push
cmc
in
jecxz
call
mov
xchg
mov
outsb
pop
mov
xor
xchg
sub
aas
fiadds
dec
pop
fadds
xchg
push
and
cmpsb
ljmp
pop
lret
fiaddl
decb
mov
outsb
push
subl
scas
sbb
adc
push
outsb
xchg
mov
stos
push
cmp
cmp
dec
mov
lock
adcl
dec
es
shl
lock
xor
mov
mov
aas
aaa
outsb
cmc
or
faddl
fstps
fcmovbe
jno
xor
mov
pop
clc
rorb
mov
mov
xchg
fsubs
fsubrs
inc
pop
loopne
mov
adc
or
push
nop
leave
cli
jmp
call
je
add
adc
rclb
and
jge
pop
push
icebp
sti
lock
js
jae
loop
xor
and
outsl
xchg
outsl
inc
lods
clc
lods
sahf
xor
sti
ss
or
pop
aad
sbb
add
lret
in
into
ret
clc
adcl
out
mov
into
les
lahf
mov
cld
sub
push
push
push
icebp
sub
sahf
add
push
notb
push
cmp
xor
or
iret
add
xchg
xor
sbb
jne
sbb
mov
inc
call
out
bound
popf
adc
mov
lret
pop
push
insb
sub
xor
enter
adc
aam
mov
push
js
aas
je
mov
outsb
cli
add
cmp
mov
aaa
inc
loope
mov
scas
repnz
mov
pop
dec
dec
in
imul
xor
orl
or
cmc
orl
mulb
pop
or
mov
mov
inc
inc
and
pushf
and
or
iret
mov
mov
inc
or
scas
dec
outsb
ds
push
outsb
icebp
movsl
mov
mov
fadds
stos
lods
out
sbbb
test
test
hlt
pushf
adc
mov
test
add
orl
movsl
jmp
loope
mov
and
pop
cmp
xor
das
aad
scas
mov
mov
or
add
int3
push
pop
adc
inc
dec
and
inc
and
inc
int
in
or
push
jp
je
arpl
nop
roll
mov
lods
add
inc
ret
dec
pop
lds
mov
sahf
push
pop
inc
xor
std
jg
push
mov
sub
dec
outsl
ret
mov
push
or
mov
mov
loopne
stos
int3
mov
cs
loopne
push
popa
push
add
stos
and
push
int3
mov
mov
fiadds
mov
push
enter
and
inc
mov
into
rcl
push
loope
mov
mov
in
dec
sbb
loopne
mov
cwtl
in
incl
subl
cs
out
test
pop
sbb
xlat
sbb
aaa
or
divl
and
ljmp
fildl
jo
cmp
popf
mov
test
add
mov
es
loope
in
jg
lods
pop
xor
mov
popf
sti
or
push
enter
jmp
dec
scas
mov
dec
popf
push
or
pop
mov
test
shll
xchg
repz
push
icebp
imul
pop
sub
add
mov
cmp
pop
mov
mov
mov
xchg
inc
push
pop
in
sbb
incb
jnp
push
test
mov
mov
lds
jo
sbb
mov
xor
sbb
add
outsb
xchg
dec
icebp
insb
sbb
mov
adc
xchg
lret
lret
jg
pop
mov
negl
mov
push
test
push
pcmpgtd
xchg
add
mov
push
loope
cs
mov
scas
dec
sti
out
xor
mov
out
inc
neg
lods
dec
adc
cs
and
or
jle,pn
loope
adc
cmpb
lea
add
addb
fs
jg
inc
xchg
mov
pop
pop
test
jae
mov
jecxz
mov
outsb
inc
adc
sbb
es
mov
inc
aam
enter
push
loope
sbb
lods
inc
mov
push
sub
in
jg
jns
popa
pop
add
xchg
mov
fstpt
push
gs
jo
mov
data16
aam
lcall
sahf
jge
adc
xchg
push
enter
jo
lret
pop
or
loopne
xor
in
or
mov
jno
add
fs
xchg
pop
push
int3
dec
repz
bound
push
adc
call
fists
ret
or
test
pop
bound
or
and
sahf
pop
sahf
inc
sbb
mov
loopne
test
mov
clc
int3
and
xchg
imul
sub
cli
and
xchg
lcall
jg
adc
push
fistpll
mov
xchg
dec
cmp
inc
fadds
cwtl
inc
sbb
add
sahf
sbb
cmp
adc
incl
xchg
pop
or
dec
mov
inc
popf
dec
movsl
mov
cmp
sbbb
cmp
push
and
mov
mov
mov
add
mov
jp
push
fucom
xchg
adc
leave
adc
pushf
ret
cltd
jbe
and
fiadds
adc
add
ret
popa
inc
je
cltd
cmp
ret
mov
lock
mov
or
mov
cmpsl
std
or
mov
cltd
stc
lods
xchg
adc
adc
inc
and
outsl
in
push
jbe
imul
pop
or
mov
je
inc
stc
adc
fwait
ljmp
rcrb
push
jp
adc
sbb
push
jbe
sti
pop
sbb
shll
imul
pushf
add
mov
sub
out
call
inc
aad
nop
out
xorl
and
dec
cld
pop
mov
dec
fdivs
push
andb
in
inc
sub
pusha
inc
fisubrl
std
xor
lock
push
rcrl
jo
clc
fcmovnbe
push
sub
mov
pop
jb
jno
jmp
pop
pop
inc
in
pop
clc
aas
mov
pop
jno
dec
lcall
push
jb
jb
jmp
lea
jl
cmpsb
or
pop
push
adc
mov
mov
negb
mov
push
cltd
mov
sbb
je
fiaddl
outsb
fildll
dec
xchg
mov
or
jl
jmp
int
aam
inc
pop
ficompl
lds
pop
das
shl
mov
mov
or
jecxz
fwait
or
das
lcall
mov
adc
sti
jecxz
cs
orb
adc
andb
enter
or
and
add
jg
cmc
jae
lret
jbe
jo
and
addr16
add
pop
and
mov
mov
pop
xchg
or
pop
sarl
leave
push
rcrb
cs
das
dec
cli
pop
in
scas
cltd
movsl
push
mov
or
call
dec
negb
outsb
jg
sbb
cmp
pop
sub
push
add
dec
js
xor
bound
lock
xchg
push
or
push
cltd
ljmp
adc
lea
out
shrl
mov
mov
adc
js
ds
int3
add
inc
fistpll
pop
xchg
rcll
xlat
pop
movsl
cmp
out
fcomps
cltd
pusha
mov
lods
out
push
lods
in
fcomi
arpl
xor
jg
out
lock
xchg
or
lcall
or
cmp
shlb
in
aaa
hlt
sarb
shl
inc
dec
lea
or
das
jle
sbb
call
mov
or
mov
dec
adc
inc
dec
cmc
outsl
ret
mov
sar
mov
aam
xchg
jp
pop
xor
add
push
add
cli
cli
fs
mov
xor
sub
lods
sbb
rcl
xlat
icebp
lcall
pop
fidivl
daa
jno
call
xorb
sbb
mov
inc
cmp
xchg
ds
or
shll
popa
mov
aas
mov
xor
or
mov
xor
fcmovnu
mov
sbb
test
adc
jns
cli
out
pop
daa
fwait
adc
pushl
lret
mov
mov
test
rorb
insl
add
jg
cs
mov
add
ljmp
mov
pop
jmp
add
sbb
xor
or
jg
add
sahf
cltd
lahf
in
sarb
or
xchg
loope
mov
cmc
in
insl
sub
loop
jl
bound
mov
ljmp
sbb
add
adcl
jle
das
shrb
out
mov
sahf
ror
test
imul
call
loope
test
aaa
call
dec
mov
cli
mov
jne
adc
or
and
out
and
pop
pushl
and
into
fistps
mov
push
push
mov
outsl
in
mov
and
adc
fbld
rorl
aad
mov
shl
ja
sub
mov
cld
out
outsb
cwtl
jle
stos
and
rcll
lcall
movsl
fsubrs
sbb
xor
xor
push
add
or
and
xchg
popf
push
jecxz
stc
xor
fbstp
ret
test
or
dec
xor
inc
cmp
push
clc
ja
ja
pushf
add
push
les
sbb
pop
jge
iret
push
xchg
dec
xchg
fwait
sbb
aad
sti
test
ret
dec
pop
dec
mov
rcrb
push
test
sub
cli
mov
pop
pop
sub
mov
adc
mov
rorb
inc
cwtl
out
mov
sti
pop
lods
or
and
outsb
pop
mov
mov
lods
aaa
push
orl
movsb
add
aam
loop
sub
sub
stc
mov
pusha
lds
aad
and
adcb
inc
sbb
and
cwtl
add
imul
aam
mov
cs
xchg
insl
sub
jg
mov
loop
sbb
sti
push
jg
sbb
or
lods
jbe
data16
sub
rcl
inc
test
dec
inc
call
ljmp
insb
nop
cmp
mov
jecxz
std
pop
std
loope
jbe
insl
scas
add
sbb
decb
imul
addr16
lahf
adc
addl
or
jmp
repnz
jg
xchg
in
mov
pop
mov
idivb
pop
mov
push
mov
jp
in
popa
sarb
add
out
or
aam
inc
lds
cmpsb
fidivrl
idiv
es
push
das
jne
or
inc
push
fistpl
and
mov
or
lsl
cmp
pop
gs
jecxz
movsl
ficoml
inc
add
push
fisttps
popf
push
mov
jne
fnstcw
test
cvttps2pi
cmpsb
stos
shl
add
jle
sub
in
mov
push
or
cltd
scas
loope
mov
enter
loopne
and
fdivp
int
jno
test
pop
adc
sub
pusha
pushw
jo
inc
mov
movsb
fidivrl
inc
add
xlat
and
mov
test
push
shlb
movb
or
shlb
or
inc
cld
lret
ja
inc
adc
jns
test
cmpsb
pop
dec
ds
pop
mov
mov
js
loopne
shlb
mov
in
pop
outsl
out
mov
jp
dec
xlat
push
pop
dec
push
mov
sbb
dec
aas
mov
push
jmp
or
scas
mov
and
lods
jbe
xor
bound
jno
pop
addb
repnz
in
xor
push
pop
jbe
xchg
jge
mov
add
sbb
idivl
das
push
mov
push
das
push
or
fbstp
lock
mov
stos
add
jp
fdiv
test
jmp
adc
subl
inc
add
pop
bound
lods
punpcklbw
mov
lods
sub
mov
push
jmp
lret
lock
mov
mov
cmp
xchg
add
stos
jl
sub
jb
dec
aam
pop
cmc
loopne
push
pop
mov
jo
or
push
test
out
out
cmp
leave
ficoms
or
shlb
hlt
das
mov
ss
andl
dec
xlat
arpl
sub
mov
test
sub
rclb
lcall
inc
fsubr
pop
jmp
xchg
lea
xlat
ss
inc
fnstcw
dec
mov
cmp
fcom
sbb
mov
add
andb
sbb
mul
add
or
dec
xor
xchg
lds
fisttps
mov
aam
add
xchg
xchg
test
xor
add
xchg
adc
mov
inc
push
mov
popf
insb
pusha
mov
je
jne
push
pop
cmp
call
clc
je
jo,pn
iret
push
mov
test
test
add
dec
lea
inc
movb
outsl
dec
xchg
cmp
sub
das
push
sub
lret
and
mov
pop
xor
push
insb
inc
aad
lahf
or
icebp
ficoms
inc
data16
lahf
into
inc
pop
insb
mov
leave
inc
rolb
cmpsb
sbb
aad
fiaddl
mov
pushf
test
or
sbb
rolb
push
mov
mov
mov
orb
push
lret
mov
mov
sub
nop
cmpsl
mov
mov
inc
mov
out
test
stos
mov
dec
add
insl
lock
add
and
add
dec
call
and
out
or
ljmp
push
mov
dec
push
rcr
cmpsb
mov
and
std
xor
mov
dec
cmpsl
push
dec
xor
adcb
cmp
ret
inc
adc
cmpsl
in
mov
popa
aas
insl
push
mov
lds
sub
and
stos
jae
shll
lahf
frstor
les
mov
xchg
inc
flds
cmpl
outsl
cli
aaa
fiaddl
push
fwait
ss
std
clc
or
sub
sbb
jns
jnp
xlat
push
lcall
or
sahf
and
sbb
dec
adc
lret
fisubs
arpl
inc
add
sti
rcrl
ret
xchg
xor
aam
mov
xchg
loop
lods
mov
shll
or
and
faddl
xchg
push
jge
imul
imul
adcl
and
mov
sbb
imul
xor
mov
fistpll
mov
movl
mov
or
loop
in
mov
dec
jl
icebp
lods
mov
mov
jnp
mov
mov
sub
inc
xor
xchg
xlat
gs
mov
dec
es
lcall
sbb
cmp
movsl
loop
int
xchg
inc
adc
adc
or
push
dec
icebp
in
xchg
bnd
test
mov
adc
jecxz
outsb
inc
inc
pusha
out
jbe
dec
add
ret
or
push
daa
adc
push
xchg
sbb
lret
test
jmp
mov
shll
outsl
jno
imul
jae
sbb
mov
mov
xchg
fmuls
les
and
pusha
pop
shlb
cmp
or
out
cli
call
std
jecxz
jge
lahf
movsb
lret
xchg
xor
fwait
inc
mov
ljmp
sub
arpl
shrb
loopne
out
or
jno
adc
cmc
adc
les
dec
leave
push
icebp
pusha
test
pop
mov
push
xchg
lods
sub
mov
xorl
xchg
insl
add
jecxz
incl
fistpll
jmp
or
movsb
pop
jle
jmp
rcl
add
aam
sbb
je
or
mov
test
mov
fbld
dec
sahf
inc
cs
test
test
loop
jp
shrb
scas
xchg
add
fmuls
lret
outsl
mov
ret
lods
mov
mov
jb
andl
pop
add
mov
hlt
sbb
sub
pushf
push
testb
mov
popa
mov
loopne
sub
movsl
clc
ja
add
call
mov
or
mov
cmp
aad
ss
mov
fldt
adc
ja
jle
jmp
push
filds
pop
lock
fistpl
cmpsb
into
xlat
neg
iret
les
push
add
das
rolb
lret
out
xor
fdivrp
xchg
adc
mov
jb
or
call
adc
aam
adc
test
add
jnp
sbb
inc
movsl
out
mov
enter
sbb
adc
loop
adc
mov
stos
push
push
loopne
and
lcall
push
sub
sbb
jg
stos
adc
xchg
mov
mov
mov
add
dec
daa
sbb
incl
mov
clc
or
call
inc
outsl
fwait
sub
push
adc
or
adc
movsl
cld
ffree
inc
test
push
mov
rolb
sub
lock
cmp
or
aad
aad
clc
cmp
dec
inc
jl
pop
push
cmp
insl
gs
jno
add
mov
cmpsl
cmp
movsl
das
cld
in
add
sbb
int3
cmpsl
add
loopne
cmp
out
mov
push
fs
fstpt
pop
stc
and
inc
aaa
add
adc
fistps
dec
pushf
nop
and
fdivs
and
stc
es
outsl
rorb
test
clc
std
aam
fucomp
jle
xchg
adc
cmpb
fmul
mov
adc
push
dec
xor
cmc
mov
mov
movsl
es
mov
lods
cmp
adc
in
out
jbe
push
das
add
or
mov
and
sbb
xorb
push
test
cmpsl
mov
js
shr
mov
xchg
shrb
imul
jo
cltd
arpl
add
roll
pop
add
test
adcl
scas
cmpsb
pop
loopne
pop
add
cmpsl
daa
and
push
cmpsb
mov
mov
adc
cli
fistpll
xchg
push
pop
inc
and
xor
outsl
cmp
xchg
or
cmp
mov
pop
fmull
adc
adc
or
outsb
xchg
add
icebp
pusha
inc
incb
ja
fbld
cmp
push
scas
ficoml
lods
xchg
incb
push
fadds
daa
xorl
adc
inc
icebp
shrb
push
jne
ret
mov
sarl
mov
cmpb
push
push
lret
pop
out
or
rorl
fnstsw
loop
sub
cmp
outsb
jae
hlt
aaa
mov
jns
add
mov
loop
call
pop
jg
aad
jne
test
and
fmuls
call
and
cmp
sub
mov
inc
js
cmp
sbb
lds
je
jecxz
xlat
es
rolb
and
std
mov
dec
mov
and
or
fdivrs
lea
jge
pop
mov
inc
xchg
lock
mov
jp
pop
pop
stos
add
lock
dec
sub
imul
pusha
xchg
flds
add
clc
pop
mov
inc
fiaddl
pop
cwtl
fsubrs
fcmovnu
call
divl
bound
mov
cmp
inc
dec
jge
fs
jns
roll
scas
mov
inc
and
jl
dec
jge
mov
push
ja
jnp
and
adc
ret
movsl
push
pop
icebp
pop
sub
popf
xchg
mov
mov
cmp
push
lea
sbbb
jno,pn
aam
outsb
rorb
fisubs
test
es
add
push
inc
dec
mov
pusha
shlb
xchg
mov
push
test
push
out
das
mov
push
jo
loopne
inc
rolb
jg
add
jl
adc
mov
jb
fisttps
shrb
sbb
dec
inc
jl
lods
jbe
adc
add
dec
xorl
insb
lahf
ss
cmpsb
clc
mov
pop
lea
test
mov
lods
add
mov
movsb
dec
mov
dec
mov
adc
es
jne
or
and
mov
push
xchg
mov
and
cmp
in
push
adc
jge
pusha
push
push
ret
or
imul
je
pop
adc
xchg
jle
dec
andb
les
and
cli
test
dec
jg
inc
push
lea
push
cmp
add
sar
mov
cmp
in
bswap
imul
and
mov
inc
lods
jl
ret
je
leave
cmp
cmp
jnp
std
sub
pop
test
adc
pushf
test
fsubrp
inc
xor
dec
adc
fcompl
adc
cmp
test
gs
ljmp
in
outsl
sbb
jge,pn
lcall
lods
pop
mov
cld
pop
inc
add
and
xor
cld
mov
ja
fcmovb
pop
jmp
ja
shr
jmp
jne
sub
mov
cld
jg
jge
lcall
mov
sbb
repnz
and
pop
insb
test
andl
in
push
push
lds
mov
bound
and
add
dec
orl
mov
adc
and
xor
or
add
hlt
inc
xor
pop
pushl
xchg
or
push
pusha
shll
sub
outsl
hlt
pop
inc
out
sub
push
test
mov
mov
stos
mov
cli
add
arpl
cmp
js
testl
sbb
mov
fcom
pop
je
sti
cmp
jecxz
mov
pop
enter
int3
out
and
push
and
mov
sbbl
and
jmp
adc
mov
inc
inc
lret
loopne
mov
into
add
inc
into
movsl
sbb
add
pushf
int
es
in
or
stc
sbb
cmp
notb
add
std
loopne
lods
pop
ljmp
pop
jo
push
incb
jmp
in
add
mov
aas
loopne
mov
inc
rorb
pushf
xor
dec
adc
and
or
sar
cmpsl
cmp
je
mov
fucomip
add
iret
mov
adc
and
mov
aaa
std
or
mov
subb
out
aaa
cmp
outsb
push
mov
pop
adc
cmpb
ljmp
nop
fiaddl
mov
rolb
mov
mov
and
mov
pop
or
adc
mov
outsb
sti
xchg
fiadds
mov
sbb
mov
addr16
insl
fistl
xor
aam
push
ret
xchg
inc
notb
cmp
pop
pop
das
add
pop
mov
pushf
and
ss
jnp
inc
jae
sbb
xor
dec
pop
add
xchg
adc
hlt
fcomip
mov
std
jecxz
into
mov
bound
inc
or
cmp
adc
adc
cli
fisubs
in
push
cmp
push
arpl
test
rcrb
adc
sbb
mov
pop
push
jno
jmp
push
mov
sti
bound
in
xchg
xor
in
sub
xchg
jnp
test
adc
push
cmp
mov
cs
xorl
xor
fbld
add
daa
leave
pop
sbb
add
and
mov
pop
rorb
adc
sub
in
pop
imul
sub
pop
pop
std
mov
push
punpckldq
cmpb
ret
inc
les
insb
insb
push
dec
mov
testb
dec
out
fildll
jle
push
push
inc
pop
into
int3
sub
mov
lock
push
clc
jmp
mov
pop
and
sbb
add
cmpsb
pop
cltd
ss
pop
push
push
fadds
adc
cmp
shlb
sub
jnp
fpatan
xor
and
repnz
clc
into
and
mov
xor
mov
mov
test
sub
add
or
xor
pop
std
in
mov
pop
jge
sub
enter
movsl
sbb
mov
out
pop
push
and
push
aam
and
test
push
inc
pop
cmp
ret
addr16
mov
push
or
add
inc
push
sub
mov
insb
mov
and
push
xchg
adc
inc
mov
data16
mov
mov
insl
jg
jg
jne
icebp
sub
mov
mov
pop
pop
jmp
pop
insl
scas
call
push
pusha
lock
jns
inc
add
outsb
lret
adc
push
mov
and
or
fnsave
hlt
or
stc
fcoms
enter
cmpsb
sub
or
mov
shrb
push
or
pop
cmp
mov
push
out
dec
and
mov
stc
mov
into
std
in
sbb
repz
add
and
inc
xchg
inc
push
jns
leave
add
cmpsb
mov
mov
adc
fistps
mov
sub
jp
das
std
xor
jmp
xor
mov
sti
outsb
mov
xor
xchg
mov
jno
mov
icebp
dec
add
ret
scas
cmpsl
add
shl
push
xchg
pop
addl
out
adc
or
testb
push
rcrb
add
push
xor
rcl
inc
out
adc
outsl
das
cmp
rcl
add
mov
fst
rolb
clc
je
jne
mov
out
sub
push
enter
add
xor
iret
aad
out
push
ficomps
xlat
sbb
aam
xchg
stc
fldcw
std
inc
push
incb
jmp
mov
jnp
out
and
int
xchg
and
mov
iret
ljmp
inc
sub
and
insb
mov
lods
mov
xchg
add
popf
mov
test
fmull
test
dec
mov
ja
lret
pop
orb
mov
rol
add
ret
fmuls
pop
or
jmp
mov
jns
repz
pop
mov
push
sbb
lods
lods
xor
and
mov
cmp
icebp
cmp
mov
sbb
xchg
fdivrl
pop
es
cli
dec
fadds
add
jae
aad
push
in
stos
jge
imul
jg
movsl
scas
add
leave
cmp
inc
push
test
test
lods
mov
push
pop
insb
add
jno
push
test
test
subb
mov
dec
lods
and
dec
sbb
mov
xchg
test
sbb
aad
pop
fs
sub
dec
lds
mov
mov
lcall
jo
repz
xchg
pop
push
mov
pop
hlt
fucomp
and
jmp
daa
cmpsl
and
and
cmpsb
enter
xor
mov
sub
jg
dec
sub
mov
in
sbb
andb
movsb
xor
push
adc
pop
or
cmp
push
mov
outsb
loopne
xchg
test
sub
dec
fbstp
loope
addb
xchg
dec
adcb
or
ljmp
je
hlt
mov
ss
pop
push
mov
xchg
pop
push
std
pushf
ret
nop
shlb
lret
das
inc
movsl
pop
mov
rcll
inc
mov
shrb
dec
repz
aam
add
stos
mov
adc
mov
jo
repnz
pop
out
out
bound
push
and
xchg
call
push
lds
pop
add
xchg
imul
inc
pop
clc
outsl
sbb
mov
add
stos
aaa
jg
jle
cmc
negl
cmp
cli
aam
dec
cmp
outsl
fdiv
filds
mov
adcb
xchg
sti
mov
pop
push
pop
adc
lret
data16
xchg
mov
sbb
lods
lcall
add
or
int
add
lret
or
mov
add
add
xor
rclb
pop
inc
mov
add
inc
mov
rcrb
sarl
sub
js
mov
fnstsw
pop
mov
jg
xor
loope
test
loop
inc
mov
ss
rclb
mov
jle
adc
jge
movsb
andl
enter
pusha
inc
dec
push
push
mov
and
sbb
cltd
das
add
xchg
mov
mov
aad
inc
mov
lock
and
pop
adc
cmpb
sbb
mov
pop
sub
dec
or
inc
jp
je
jno
fisubrs
fidivrs
cmp
arpl
aaa
xchg
loopne
cmp
dec
add
cmp
cltd
aad
cld
pop
call
insl
pop
int
mov
fcmovb
xchg
icebp
jp
xchg
jne
icebp
jg
je
or
mov
hlt
pop
inc
fidivrl
lret
lahf
repz
div
or
sarl
shll
mov
pop
leave
dec
mov
xchg
pop
mov
loopne
dec
adc
sub
movsl
adc
dec
add
add
jge
jne
loope
lahf
shrb
mov
rclb
and
test
push
sbb
jp
xor
mov
repnz
jg
lea
jecxz
popa
inc
push
mov
outsb
sbb
outsl
pop
mov
cs
adc
cmp
aam
adcl
dec
rorl
or
in
dec
mov
rcll
clc
out
mov
iret
pop
mov
pop
add
adc
cmp
mov
cmpsl
xchg
insb
test
mov
scas
jno
add
mov
adc
mov
pop
mov
fidivrs
mov
cmpsb
mov
ljmp
mov
pop
fisubl
iret
and
insb
cli
push
out
or
lds
enter
add
xchg
cmc
stos
dec
imul
push
inc
mov
mov
mov
xor
mov
xchg
outsl
xchg
xchg
or
mov
pop
hlt
add
mov
cmp
out
mov
shlb
mov
insb
fistl
cli
das
xchg
aaa
inc
js
push
addl
mov
into
jnp
rolb
std
enter
in
dec
mov
lahf
fs
in
inc
stos
mov
adc
mov
inc
cmc
inc
outsl
jmp
dec
mov
test
xor
jnp
mov
fidivrl
int3
es
popa
icebp
adc
insb
ljmp
mov
pop
sbb
mov
mov
aam
setle
in
rorl
into
or
cwtl
sub
call
lahf
sti
mov
cmp
push
xchg
adc
jg
inc
repz
pop
mull
sub
xor
jmp
in
hlt
pop
xchg
rcrb
shrb
or
pop
daa
mov
mov
jns
xchg
jle
mov
or
mov
hlt
and
gs
push
ss
pop
clc
sub
pop
fildll
pop
insl
mov
xchg
push
cltd
mov
lahf
addr16
fisubrs
add
mov
xor
arpl
pop
inc
jnp
sbb
test
and
cmp
mov
pop
and
sbb
sub
int3
and
xchg
cwtl
cld
mov
sub
lahf
and
add
pop
filds
mov
xor
adc
mov
pop
mulb
repnz
rcrb
sbb
cmp
cmp
lret
adc
jb
pop
gs
sbb
inc
push
or
xor
pop
xor
jp
jle
mov
inc
push
fstl
icebp
mov
sbb
subb
and
push
fimuls
imul
cmpsb
outsl
pop
fdivr
ret
dec
insl
dec
clc
inc
and
fldenv
sbb
loopne
ficomps
scas
mov
ret
clc
inc
shrb
fnsetpm(287
and
push
out
inc
and
lock
mov
adc
scas
lcall
and
dec
and
dec
das
bound
mov
mov
mov
xchg
xchg
xchg
inc
pop
insb
cli
sub
addr16
lock
out
pusha
mull
rolb
sbb
or
inc
std
outsb
push
nop
add
mov
mov
adc
outsl
lock
xor
clc
sbb
or
fucomi
fildll
and
xor
mov
push
je
jno
sbb
clc
cmp
adc
pop
sarl
push
stos
sub
aas
testb
push
sub
mov
dec
mov
movsl
test
icebp
movsl
xor
mov
xchg
fidivl
pop
push
push
inc
push
repnz
fs
ficoml
mov
enter
in
out
mov
and
sti
push
out
pop
mov
sahf
and
adc
arpl
lcall
xor
into
orl
adc
testl
inc
fdivrs
jb
dec
aad
push
xor
pusha
mov
inc
add
or
mov
push
iret
cmpb
jp
adc
ja
pop
inc
les
aaa
mov
push
push
lea
inc
mov
fs
xor
nop
ja
add
mov
dec
adc
adc
pop
mov
clc
push
stc
in
popa
lock
in
push
dec
mov
cli
jecxz
in
and
mov
out
inc
icebp
push
and
mov
and
sub
bound
clc
in
das
rcrl
mov
out
or
push
decb
mov
mov
xor
das
shl
inc
cld
inc
push
es
cli
jne
repz
ljmp
cld
add
xor
jno
cmpsl
or
test
mov
inc
lea
mov
rolb
fdivs
nop
mov
mov
cmp
cmp
fldt
mov
jb
mov
or
out
lcall
xchg
cmp
and
pop
sbb
mov
nop
test
hlt
push
shlb
jle
jg
add
rol
xor
repz
dec
cmp
test
mov
movb
stos
cmp
outsl
test
clc
cmp
sbb
xchg
leave
rolb
in
dec
mov
inc
fdivl
roll
mov
pop
add
dec
inc
shll
mov
aaa
mov
sbb
cmp
or
fidivl
shll
mov
add
loopne
add
idiv
mov
inc
xchg
xor
sub
jns
das
dec
push
jecxz
scas
pop
icebp
inc
lods
sbb
arpl
ret
ljmp
pop
mov
jecxz
inc
xchg
sbb
push
add
cmp
jecxz
das
jge
popf
sbb
frstor
or
mov
clc
mov
orl
inc
dec
out
pop
mov
push
aas
mov
dec
ljmp
sbb
and
nop
daa
gs
mov
test
cmp
sbb
add
sub
fimuls
add
shlb
nop
push
clc
lods
call
jb
jecxz
sub
sbb
mov
xor
movsl
pushf
pop
stc
out
xor
push
mov
dec
cmp
insl
add
ja
jmp
add
rolb
sub
iret
sbb
mov
cs
add
dec
enter
aaa
std
movsb
pop
shlb
aaa
and
pop
scas
or
dec
jecxz
loopne
addr16
arpl
imul
sub
add
les
ficomps
pop
sub
xchg
cmc
pop
shl
push
stc
sub
addr16
adc
hlt
inc
jmp
in
add
add
adc
xlat
pop
adc
mov
add
dec
inc
sub
ficompl
shlb
cmp
in
repnz
lods
out
or
imul
push
xor
jne
add
pusha
add
lods
icebp
mov
into
cltd
xchg
xor
push
and
aaa
push
and
pop
inc
push
xor
mov
xor
aam
add
fs
shll
add
xchg
pop
dec
roll
xlat
es
jmp
cmc
test
roll
daa
push
fldt
inc
in
ret
or
xchg
fsubp
xchg
outsb
jl
xchg
jbe
adcb
lock
das
xchg
mov
pop
in
lcall
filds
or
es
add
xlat
pop
and
and
sub
in
clc
out
shrl
or
mov
aaa
or
mov
inc
jnp
xchg
push
subb
push
cmp
or
inc
addr16
xchg
adc
push
push
jl
arpl
pop
mov
daa
or
mov
and
add
arpl
aam
aas
ss
test
mov
sbb
add
or
int3
mov
mov
or
push
outsl
and
mov
pop
outsb
movsb
push
mov
xchg
push
mov
lds
mov
push
sbb
ljmp
fwait
test
sti
xlat
popa
cmpsl
add
cwtl
pop
out
outsb
incl
dec
das
or
loopne
xor
jb
test
push
ss
push
scas
mov
popf
mov
push
dec
push
idivl
and
js
jle
jecxz
divl
int3
inc
and
xor
add
aad
add
pusha
pop
mov
mov
cs
add
imul
cs
adc
xlat
xor
add
push
iret
sahf
pop
sbb
ljmp
xor
xchg
mov
mov
inc
mov
or
inc
stos
add
les
bound
sbb
aad
push
pop
mov
fsubrs
aaa
fistpll
pusha
out
outsl
mov
adc
aaa
and
xor
call
cli
dec
clc
test
imul
movsb
into
push
adc
pop
loopne
subb
push
jae
hlt
ds
movsb
pop
test
pop
popa
inc
int
mov
sub
lds
dec
pop
fwait
inc
push
cmp
movsl
xchg
push
xor
iret
pushf
call
push
dec
sbb
ret
mov
mov
ja
push
fiadds
cmpsb
lcall
or
cld
xchg
pushf
adc
subb
scas
sub
pusha
aam
loopne
inc
imul
mov
stc
fwait
or
fimuls
pop
cli
jg
add
pop
push
push
jmp
jecxz
jle
pop
sar
mov
add
in
cmp
inc
popa
mov
jo
lods
daa
cmp
xchg
mov
and
scas
out
jp
add
adcl
pop
orl
loopne
ficoml
ss
cmp
daa
sub
mov
shlb
repnz
jl
rcrb
nop
mov
test
mov
xor
mov
repz
jecxz
add
and
add
cmp
mov
mov
xchg
xchg
push
or
jnp
mov
popa
xchg
push
sbb
dec
lcall
mov
aam
inc
lods
mov
xchg
test
imul
and
xor
push
das
push
mov
adc
xchg
js
insl
repnz
jbe
adc
cmpsl
out
mov
or
rcrb
pop
movsl
aaa
cli
pop
sub
repz
pop
mov
mov
les
sbb
decb
xlat
mov
lea
pushf
test
sub
in
fisttpl
inc
push
mov
fildll
add
xor
scas
mov
decb
jne
inc
jp
jle
and
imul
adc
pop
mov
xor
cmpsb
cmp
loopne
jbe
push
fstl
pop
stos
add
pop
mov
out
into
clc
into
sbb
mov
add
cmc
sub
pop
fsubs
or
xchg
adc
xor
rol
outsl
push
mov
sub
sbb
pop
mov
stos
mov
jbe
sub
mov
or
sbb
outsl
push
sub
jl
aam
xor
outsb
pushf
test
mov
mov
adc
clc
les
cmpb
add
pushf
mov
popf
mov
cmp
mov
loope
inc
xchg
cmp
inc
outsl
add
cmp
xchg
orl
divb
sub
inc
cld
cld
pop
or
pusha
and
mov
xchg
pop
hlt
add
les
data16
mov
scas
rcll
int3
dec
xchg
ret
loop
jmp
push
xor
or
pop
sub
sarb
in
jp
xchg
push
data16
inc
call
add
push
xlat
mov
test
jecxz
jl
mov
xchg
jns
push
mov
adc
push
adc
jo
jge
std
cmp
or
jbe
inc
pop
mov
adc
ljmp
inc
enter
xor
hlt
fldt
jno
fs
inc
adc
push
inc
pusha
fdivrl
jecxz
adc
out
sub
pop
dec
pop
in
shrb
xor
inc
push
rorl
sbb
enter
xchg
clc
add
adc
pop
pop
xlat
mul
fists
mov
negl
test
enter
or
mov
pop
ret
popf
cmpb
push
xor
push
cmc
fcomi
cmpsb
sub
push
push
popa
push
jbe
push
pop
xor
lods
sub
daa
and
call
mov
mov
test
xor
js
incl
cmc
pop
xchg
add
bound
cmp
adc
mov
lods
dec
ret
inc
lcall
jg
mov
cmc
pusha
int3
mov
shr
jg
sub
pusha
mov
dec
add
decb
push
sub
loop
into
mov
pop
sarl
fldt
dec
mov
ret
or
cli
decl
test
sahf
arpl
and
adc
dec
inc
xchg
add
test
cmp
xchg
push
test
imul
mov
or
dec
aas
mov
dec
push
and
push
mov
dec
gs
ret
dec
inc
mov
mov
pusha
xorl
xor
inc
sub
sarb
fldcw
and
dec
clc
and
inc
jne
sub
iret
gs
jge
xor
cli
outsl
lock
lcall
or
ljmp
test
ss
mov
pusha
fcmovnu
add
cmp
xor
addr16
bound
xlat
lea
popa
adc
mov
enter
jp
pop
rcll
add
xlat
lock
inc
and
jge
popa
pop
add
inc
push
rcrb
dec
dec
xchg
dec
jb
xor
movsb
cwtl
dec
lret
mov
incb
push
add
pop
pusha
stc
push
js
push
and
lods
mov
ret
pop
or
mov
pop
inc
jns
sub
rclb
pop
movl
scas
andb
mov
sbb
sub
adc
cli
xchg
adcb
xor
popa
cltd
adc
mov
mov
cmc
dec
push
mov
or
into
jle
ljmp
nop
test
push
or
movb
xchg
aas
sub
mov
inc
movsl
push
shl
into
pop
test
sbb
and
andb
push
mov
push
bound
fstl
push
sub
xor
rcl
pop
mov
pop
sub
rcrb
mov
inc
and
cmpsl
xchg
and
sub
push
jno
lds
sub
js
inc
loope
lret
call
in
ret
and
mov
add
cmp
andb
sub
push
out
add
adc
xchg
cmp
outsl
decl
mov
pushf
adc
test
imull
rclb
ja
out
lea
push
dec
flds
sub
popf
lahf
call
pusha
xchg
clc
fisttpll
aam
and
pop
movsl
int
xlat
loopne
insb
mov
loopne
inc
inc
or
outsl
enter
aaa
push
mov
pop
loop
outsl
push
fidivrl
xchg
stos
jne
sub
lods
scas
mov
cmp
pop
mov
loope
adc
rorb
inc
daa
mov
sbb
xlat
cmp
inc
mov
and
and
ret
imul
lds
imul
mov
mov
call
xor
jle
mov
mov
out
lahf
loopne
jecxz
xor
xor
push
andb
jg
mov
xchg
into
sbb
adc
fidivrs
inc
repz
mov
es
loope
mov
inc
lret
xchg
or
or
cs
shl
mov
or
sahf
xchg
sbb
adcb
les
in
pop
and
pop
xor
pop
add
ret
push
pop
add
out
mov
pop
add
cmc
inc
and
into
inc
and
leave
adc
and
and
lea
jmp
ljmp
insl
lcall
aad
lds
adcl
fildll
jle
cmpl
rep
cmp
mov
dec
mov
icebp
icebp
dec
and
xchg
lock
jne
xchg
mov
jge
in
movsl
push
mov
fadds
je
or
add
mov
mov
jns
and
icebp
mov
ror
cmp
daa
jg
pop
xor
xor
sub
mov
jg
jge
jbe
fsts
pop
sub
add
sub
and
push
lcall
shrl
cmp
ret
xor
lea
inc
mov
shlb
mov
jp
mov
hlt
push
ja
pop
out
movsb
shlb
or
add
push
lods
xor
das
test
mov
lret
push
pop
xchg
jp
test
mov
js
or
jne
pop
add
js
leave
adc
das
roll
adc
gs
mov
pop
mov
hlt
outsl
ja
jg
enter
dec
add
in
aad
out
add
sbb
dec
fldenv
pop
pop
in
dec
rorl
in
inc
lods
ljmp
sbb
fiaddl
xor
sbb
rol
push
icebp
cmp
dec
jb
fiadds
rorl
push
roll
lods
push
and
xor
movsl
mov
pop
cmp
inc
nop
mov
push
cmp
push
data16
shrl
stos
sbb
shrl
lock
loope
mov
mov
mov
add
push
or
adc
jb
fidivs
jbe
bound
mov
mov
insb
dec
pop
mov
cmpl
cwtl
push
xlat
mov
add
xorl
lds
dec
push
mov
adc
inc
and
out
add
pop
or
imul
push
inc
cli
outsl
jl
je
mul
loopne
stc
push
or
repnz
push
pop
mov
jo
push
movsb
xchg
cltd
adc
lea
and
hlt
push
push
sbb
inc
push
cmc
mov
xor
lahf
mov
data16
xor
mov
popa
or
mov
xchg
inc
jge
fiaddl
pop
and
mov
mov
cmpsl
dec
add
mov
int
pxor
lret
popa
call
shll
push
fiaddl
cmpb
repz
mov
jmp
or
mov
adc
mov
into
lds
dec
aad
mov
das
pop
adc
dec
data16
dec
inc
stos
add
repnz
mov
fcmovnb
aas
mov
call
cmp
jg
out
pop
or
mov
jg
pop
inc
pop
repnz
xchg
data16
or
push
xchg
mov
loope
and
mov
cs
dec
mov
and
xor
mov
adc
cld
aaa
int
adc
nop
or
mov
pop
ljmp
ret
lods
test
dec
xchg
inc
pop
push
call
mov
cmc
sub
aas
and
sbb
add
stos
dec
inc
scas
stos
inc
clc
mov
pop
hlt
nop
pop
pop
pop
sbb
out
outsl
adc
shlb
les
cmpl
les
fnsave
das
daa
mov
fistps
bound
add
mov
mov
xchg
push
fbstp
xchg
xchg
adc
cmp
mov
cmp
in
sbb
mov
mov
inc
mov
pop
sbb
sub
pop
lods
pop
dec
inc
add
pop
js
ljmp
repz
rolb
dec
xchg
movsb
jo
mov
adc
cli
xor
pushf
aas
lahf
js
loop
mov
xor
pop
bound
and
add
sub
jbe
repnz
push
inc
sbb
cmp
cld
jne
jne
sti
das
xchg
push
sub
mov
jns
add
jle
jno
xchg
mov
add
decb
dec
sub
inc
jno
in
adc
pop
movsl
sahf
pop
shll
fcoml
ret
dec
and
sub
mov
dec
xchg
xlat
and
cs
adc
subl
adc
adc
call
pop
ljmp
es
sub
js
icebp
ret
adc
out
jno
mov
std
pop
in
outsb
mov
mov
or
fs
loopne
call
push
scas
sub
test
add
pop
mov
push
xchg
mov
xchg
add
aas
xchg
loopne
jae
pop
stos
xor
jecxz
sbb
mov
mov
push
shrb
aad
jne
daa
es
push
pusha
sahf
dec
cltd
mov
das
pop
lods
mov
lea
in
cmp
stos
sbb
xlat
rcr
cli
lcall
aad
pop
mov
inc
adc
pop
mov
cmp
mov
sti
xchg
xchg
push
or
clc
lret
add
dec
cli
add
inc
mov
xor
hlt
fbld
clc
jno
iret
jmp
pop
fistps
push
insl
imul
mov
pop
mov
jecxz
mov
cmp
adc
add
sbb
or
repz
fbstp
jbe
in
xchg
dec
and
out
sbbb
nop
cwtl
push
sbbl
adc
imul
orl
negb
xorb
clc
mov
add
mov
orb
mov
outsb
inc
pop
pop
mov
jb
jo
inc
lcall
and
sub
jp
push
inc
cmp
pop
sbb
mov
inc
shr
inc
imul
mov
mov
scas
adc
or
mov
pushf
in
call
insl
push
push
mov
addl
or
inc
testb
push
in
jbe
fdivrs
cmp
sti
mov
pop
das
xchg
cli
test
and
shll
push
loopne
mov
xchg
mov
add
mov
inc
mov
inc
mov
push
mov
push
dec
mov
daa
push
icebp
pop
pushf
mov
fstpl
sub
int3
add
fisubrl
dec
sbb
push
or
or
xchg
cs
inc
aaa
dec
shll
andl
lret
inc
mov
pop
lahf
mov
int3
gs
inc
cmc
sarb
pushf
xchg
pop
xchg
sarb
inc
add
push
insb
popa
xchg
fisttpl
call
shll
icebp
inc
mov
add
mov
and
cmpb
and
fstps
clc
cs
pop
out
add
stc
popf
or
sub
and
lds
adc
jp
inc
pop
clc
test
adc
cli
xor
imul
nop
dec
pop
ffreep
dec
jl
pop
inc
imul
push
xor
aad
sarb
daa
test
inc
loop
push
cld
add
call
xchg
les
sub
jl
lret
xlat
aam
pop
jmp
inc
bound
movsl
pop
sahf
hlt
mov
testb
adcl
int3
xchg
jg
scas
pop
push
negb
mov
add
add
loope
sub
clc
lcall
orb
testl
xchg
add
leave
or
aaa
push
pop
subb
nop
sbb
cmpsb
clc
imul
inc
and
lods
or
jb
outsb
mov
xchg
js
sub
stos
jbe
push
lods
cmc
inc
cmp
dec
loopne
adc
mov
cmp
xor
adc
add
dec
inc
pop
int
mov
mov
sbbb
jg
dec
sub
in
dec
stc
xchg
clc
cs
jg
xchg
aad
mov
andl
fsubrl
sbb
pop
cld
fists
mov
into
sub
adc
icebp
out
or
adc
jnp
pop
mov
sahf
mov
lock
inc
mov
rcr
cmp
js
adc
fwait
mov
push
inc
movsb
imull
push
or
aam
xlat
pusha
test
cmc
jge
mov
xchg
jbe
jmp
xchg
ja
cli
pop
andb
adc
in
add
ds
jb
sbb
jle
cmpl
mov
mov
jne
imul
cmp
sbb
and
in
jg
divl
mov
jo
xchg
sub
push
movsl
stos
or
sub
sbb
aaa
sub
stos
into
pop
and
les
fnstsw
pop
clc
inc
mov
push
push
adc
sub
test
fwait
sbb
add
jl
cli
pop
pop
addb
test
mov
dec
add
orb
aaa
fsubrl
add
ja
test
loopne
mov
pop
sbbb
outsl
ljmp
shr
loop
xchg
call
inc
sti
fwait
dec
mov
lods
dec
nop
out
leave
or
adc
test
push
pop
pop
outsb
nop
movsb
xchg
adc
push
imul
fadd
push
rcll
add
loop
push
inc
push
and
scas
rclb
sbbb
insl
mov
push
add
jno
mov
pop
gs
adc
add
mov
sub
pop
andb
jle
add
xor
movb
push
movsl
pop
stos
add
lahf
inc
pop
outsl
call
loop
mov
push
and
push
shlb
mov
ss
arpl
xchg
cmp
loop
mov
fsubp
cmp
xchg
mov
stos
in
sub
adc
inc
test
jg
fcomip
cmpsl
inc
xlat
dec
movsb
jnp
and
mov
out
shlb
mov
arpl
adc
ss
pop
sub
and
xchg
std
jl
lret
sub
mov
fistl
mov
dec
ret
xchg
or
mov
jb
fsubrs
push
xlat
cld
dec
pop
push
dec
xchg
popa
lret
pop
scas
or
jns
repnz
and
sub
xchg
or
jle
loope
mov
fstl
cmc
push
push
xchg
push
xor
mov
mov
ret
pop
imul
sub
push
xor
fists
scas
push
inc
push
aaa
add
movsb
mov
scas
outsb
mov
sub
xor
outsl
mov
mov
aas
test
push
pop
push
ficoms
fisubrs
mov
add
addl
mov
push
not
cmp
cmp
mov
test
mov
ljmp
aaa
add
out
jle
dec
ja
xchg
cld
mov
ret
pop
pop
flds
repnz
movsb
lods
mov
adc
in
loope
stc
push
xor
mov
mov
fwait
xchg
pop
jae
stos
ror
ficoml
rolb
xchg
inc
stos
add
xor
mov
xor
fisttps
push
xchg
mov
add
lods
pop
and
rcll
xchg
stos
xor
cmp
xor
loop
pop
sub
mov
pop
mov
push
lds
outsb
aaa
inc
es
jecxz
push
mov
inc
xchg
lds
push
xchg
or
movsb
mov
xchg
mov
push
add
add
mov
es
popf
adcb
ja
adc
subb
sub
cmc
add
pusha
pop
push
adc
cmc
push
fwait
out
icebp
mov
inc
mov
mov
xchg
pop
sub
mov
pushf
and
mov
sub
or
xchg
xchg
iret
out
mov
cld
sbb
and
push
scas
test
dec
xchg
push
mov
sbb
lret
adc
mov
xorb
pop
aad
rcr
push
or
and
pop
pop
aam
pusha
xor
shrl
je
dec
out
xchg
or
das
add
enter
push
adc
and
sub
jle
sbb
ffree
inc
adc
insb
and
fucomip
enter
or
loopne
cmc
lea
imul
lods
shll
xchg
into
lods
adc
xor
mov
scas
sbb
or
loop
or
shlb
inc
mov
loop
roll
or
xchg
das
pop
lds
lds
test
outsb
mov
das
xchg
and
inc
cmp
fcomi
add
ret
adc
jmp
addr16
sbb
cld
sub
cmp
add
lods
ljmp
cmc
push
ret
shl
fistpl
and
add
js
mov
dec
or
add
inc
mov
cli
inc
lock
popa
push
clc
pushf
xor
pop
cmpb
mov
pop
sbb
sub
stos
inc
mov
ret
dec
jne
add
pop
mov
cmp
int3
ljmp
mov
popa
cmp
push
test
in
or
gs
add
pop
cmp
roll
sar
sarl
pop
or
movsl
into
push
add
mov
inc
cld
lock
bound
lock
subl
cmp
add
test
out
icebp
aaa
pusha
mov
in
std
push
outsl
call
outsb
shrb
pop
dec
aas
adc
adc
and
inc
insb
clc
xchg
cmp
popa
ret
xor
dec
movsl
sbbl
loopne
leave
aad
das
jg
xchg
sti
cmpsb
decb
aad
aad
jne
or
add
loope,pn
inc
push
pop
xor
sub
mov
cmp
pop
mov
dec
outsl
push
adc
aam
or
pop
xor
jnp
pop
mov
mov
sbb
iret
dec
ljmp
cmc
cmp
inc
jmp
int
icebp
mov
std
and
sbb
cmc
mov
pop
mov
dec
notb
ret
nop
jl
fwait
nop
or
les
paddq
outsl
fstpt
inc
inc
jno
push
nop
mulb
popa
or
push
adc
or
pop
cli
and
mov
mov
daa
stos
in
in
jle
movb
sti
jnp
mov
cmc
sbb
lcall
xorl
leave
lahf
test
popa
add
adc
dec
mov
pop
dec
outsl
jg
mov
jle
insb
pop
xchg
fisttpl
test
sbb
movsl
or
ret
aam
adc
aam
gs
addr16
add
fcomi
push
pop
xchg
add
lds
adc
faddl
pop
sahf
jo
pop
or
test
das
cmp
and
jno
ljmp
push
movsl
adc
adc
push
xchg
loopne
lods
ljmp
push
loope
add
enter
int3
stc
and
mov
add
andl
push
pop
xor
decl
push
das
shll
cwtl
pop
lds
fcomps
mov
scas
sbb
pop
fwait
add
sbb
sub
int3
inc
add
and
sbb
xchg
jb
repnz
in
clc
les
push
fisubl
sub
shll
jmp
push
aad
cmp
sub
and
jge
inc
mov
and
pop
xor
xchg
mov
xchg
adc
test
push
ret
cmp
sbb
pop
fcomps
in
imull
xor
loop
jno
insl
js
inc
addl
test
lahf
int
and
mov
outsl
dec
sbb
jbe
xor
push
stos
and
std
jecxz
clc
add
add
inc
mov
jg
and
clc
leave
and
add
inc
mul
dec
pop
xor
sbb
mov
fnstenv
mov
jmp
push
sbb
push
imul
xor
mov
sub
mov
in
push
inc
cmpl
ja
jmp
clc
nop
mov
mov
adc
fisttpl
or
cmpsl
je
xchg
andl
shr
mov
push
dec
pop
dec
fsubs
cltd
pop
sbb
dec
lds
push
movsl
lret
test
fstl
ret
out
add
adc
fwait
jle
aaa
andb
inc
lods
ret
pop
push
push
sarb
jp
rcrl
mov
adc
inc
popa
mulb
lods
in
outsl
adc
repz
mov
es
pusha
fwait
inc
add
test
push
or
xor
cmp
fdivs
push
cmpsl
nop
mov
decl
inc
cmp
dec
sahf
push
mov
test
xor
sbb
mov
xor
clc
pop
mov
add
add
shlb
push
aad
mov
rorl
out
mov
cmp
xor
mov
mov
lret
fadds
sbb
and
xor
add
xchg
icebp
mov
loope
xor
fsubs
mov
sbb
sbb
mov
mov
test
xchg
push
and
clc
les
scas
pop
mov
rorb
and
mov
invd
rcll
decl
adc
sub
test
cs
pop
bound
and
mov
icebp
push
mov
cmp
into
jb
jp
add
aaa
xchg
lds
lcall
sbb
xchg
test
mov
lret
pop
rcll
sarb
jg
lods
aad
in
mov
mov
int
jmp
mov
movsb
aas
jns
fildll
jmp
stc
movsl
dec
or
and
pop
dec
dec
and
or
adc
test
dec
push
sarl
adc
xor
outsb
inc
out
adc
add
adc
inc
pop
mov
fcoml
ret
add
or
cmp
orb
ret
and
je
sbb
add
out
jb
test
mov
xchg
cmp
pop
icebp
cmc
jle
and
sub
outsl
cmc
adc
js
or
ja
push
cmc
dec
outsl
inc
and
imul
push
test
in
xchg
push
cmp
inc
std
mov
jns
sbb
mov
xchg
inc
or
push
mov
sbb
mov
jb
dec
mov
rorb
call
sub
out
xchg
dec
lcall
test
divb
push
push
push
ss
cs
in
imul
cmp
pop
jne
or
sbb
sbb
add
test
adc
fbld
jle
adc
jmp
mov
xchg
popa
pop
xchg
negb
xchg
mov
daa
aam
outsl
and
mov
sbb
sbb
outsb
mov
adc
insl
out
je
psubd
and
iret
test
cmp
pusha
jmp
adc
xchg
xor
pushl
fcomps
push
int
cmp
loop
outsb
or
lods
push
jg
push
sub
mov
fimuls
fmuls
lods
lret
sub
or
push
test
js
and
push
test
pop
insb
mov
sahf
insb
adc
or
inc
add
lods
mov
sbb
nop
les
loop
cld
dec
adc
popa
add
test
in
dec
fdivrl
pop
inc
pop
aad
decl
cmpl
not
cmpsb
jo
les
inc
push
js
pop
cmpsl
loope
mov
bound
test
mov
fisttpll
imul
in
inc
jp
add
xchg
or
scas
loopne
adc
push
push
jae
dec
popa
test
mov
lret
gs
mov
shlb
cltd
test
das
jl
gs
mov
xchg
aam
or
mov
fmull
sub
or
fadds
sahf
mov
outsl
add
inc
and
sbb
cmp
pop
push
inc
or
mov
sbbb
push
jb
dec
mov
sbb
jg
and
xor
retw
outsb
aaa
inc
outsl
mov
pop
xchg
xlat
mov
ds
mov
mov
mov
push
lock
les
adc
dec
bound
and
push
push
sbb
jp
push
mov
pushf
mov
je
stos
or
fucomip
pop
sub
jns
cmp
mov
cld
imul
cltd
jge
test
loopne
stos
or
cwtl
loop
xchg
push
pop
xlat
lods
pop
outsl
add
js
jno
inc
sbb
arpl
ficompl
inc
clc
mov
jbe
mov
push
mov
cmp
or
and
cmp
lods
stc
dec
dec
push
sub
rorl
or
add
out
push
mov
movsl
mov
jno
scas
push
or
adc
lret
xchg
imul
or
sbb
js
jno
imul
mov
mov
adcl
mov
stc
lea
sub
imul
jo
das
mov
fldt
xor
mov
mov
cmp
or
mov
mov
test
cmc
test
mov
xor
cmp
into
aad
ljmp
aaa
lcall
mov
ret
loope
inc
shrl
mov
mov
loop
outsl
jmp
add
shlb
imul
mov
scas
adc
push
nop
xor
leave
xor
pop
push
lods
lahf
lea
and
add
pop
fwait
inc
outsb
shlb
mov
mov
adc
mov
test
imul
sbb
push
repz
mov
pusha
lret
cmc
jns
add
sub
lcall
jmp
scas
cli
and
sub
loopne
add
cld
pop
mov
fcmovu
cli
lcall
loopne
fldt
xor
gs
je
add
sbb
aaa
add
xlat
inc
loop
mov
stos
stos
add
fs
sub
inc
mov
mov
push
mov
pushf
loopne
cld
or
cmp
or
mov
stos
movsl
cli
add
dec
lds
ret
mov
add
inc
loope
mov
aaa
xor
sub
sub
add
sbb
mov
mov
add
and
shll
cli
mov
das
mov
out
call
xor
mov
arpl
jle
add
ss
sbb
pop
add
adc
pop
test
xor
pop
cltd
or
mov
leave
sbb
pop
mov
cwtl
cs
out
mov
xchg
aas
adcb
in
in
sbb
mov
stos
xor
loope
mov
mov
xor
jb
int
arpl
push
sbb
push
cmpsl
inc
push
mov
in
mov
insb
push
adc
or
pop
mov
or
fsubs
aad
fdivrs
outsl
jecxz
adc
jmp
decb
sub
pop
insl
mov
jge
lods
int
mov
push
hlt
fidivrl
push
jns
ret
add
and
popf
push
mov
fisttpl
rcr
mov
pop
pushaw
push
xor
mov
sbb
sar
insb
xlat
out
pusha
pop
mov
mov
lahf
inc
sub
mov
and
dec
out
pop
lret
sub
ljmp
pop
loope
xchg
push
pop
popa
or
xchg
xchg
in
adc
add
cmp
add
bound
and
jnp
sub
roll
xor
popa
cwtl
mov
cli
pop
ljmp
inc
lods
cmp
dec
jns
faddl
sub
jae
sbb
push
cli
jecxz
inc
ljmp
sbbl
jl,pn
sub
dec
insl
lock
fstpl
nop
and
fldl
cmpsb
pop
dec
jno
stos
int3
in
incb
out
mov
add
mov
outsl
adc
or
jecxz
lcall
add
rcll
outsl
sub
divl
or
inc
clc
das
mov
lds
xchg
xor
or
mov
cmc
jb
mov
mov
push
popa
orl
sbb
jg
add
jmp
lock
insb
lods
and
or
mov
movsl
add
addl
fsubrp
js
add
pop
out
into
movsb
cmpsl
aad
ret
call
sub
sbb
pop
xlat
xchg
lret
mov
mov
jecxz
shll
cmp
stos
imul
push
adc
mov
shr
aaa
xor
add
dec
adc
jl
int3
lods
mov
imul
mov
inc
inc
movsb
fisttpll
sub
jns
xchg
out
push
push
adc
pop
push
outsl
shr
arpl
mov
das
cmc
outsl
mov
mov
inc
scas
jle
sti
jecxz
popf
ret
icebp
pusha
out
jbe
repz
mov
push
movsb
xchg
loopne
inc
mov
fwait
leave
pushf
push
nop
imul
push
add
popf
inc
cs
sahf
inc
out
pushl
ficoml
mov
dec
sub
add
mov
std
movsb
aad
loopne
push
push
lret
or
pop
pop
mov
int3
repnz
jecxz
adc
push
sub
lahf
nop
xchg
decb
mov
jl
in
push
lock
popa
push
mov
aaa
mov
aad
jge
and
mov
mov
xchg
push
lods
clc
shr
mov
das
inc
jmp
mov
roll
leave
dec
mov
sbb
or
jmp
add
out
cs
jl
aad
jmp
adcb
inc
pop
outsb
pop
push
jnp
push
lcall
fsubrl
nop
ficoml
add
je
xor
pop
ljmp
subl
mov
insl
stos
push
sti
test
pop
out
sbb
addl
fidivs
push
mov
pusha
lock
pop
xchg
cmp
lret
cli
pop
sub
decl
add
imul
jmp
mov
clc
mov
rclb
xchg
push
in
insb
jb
mov
sbb
loop
and
rcrl
popa
nop
pop
mov
jg
add
xor
jns
cmp
pop
ds
or
sbb
pop
fnstsw
leave
and
push
adc
cs
cmpsb
mov
std
aam
pop
adc
mov
push
sub
dec
and
clc
js
aad
cmpsb
dec
fcoms
ret
shlb
movsb
and
sbb
inc
mov
or
js
stos
xchg
aam
inc
xor
add
hlt
outsl
cmp
shll
addb
xchg
fucom
pushl
mov
mov
add
sub
rclb
jbe
sarl
iret
hlt
jp
mov
jecxz
out
xorb
in
pop
jo
inc
pop
xchg
push
aad
lock
cmp
cli
pop
inc
dec
push
add
imulb
pushf
dec
pop
fadd
mov
xor
popa
cmpsb
adcl
adc
jne
push
mov
imull
xchg
arpl
repz
mov
adcb
inc
push
mov
mov
mov
and
jnp
dec
pop
pop
sbb
mov
out
popa
data16
sbb
leave
push
push
ljmp
push
pop
mov
adc
mov
pop
mov
push
sbb
je
gs
mov
pop
sub
hlt
cwtl
in
sbb
stc
stc
mov
xchg
adc
sbb
jmp
xchg
and
cmp
push
cmp
pop
push
dec
enter
push
rorl
cmpsb
sub
sub
dec
jl
dec
nop
mov
test
fdivrl
sbb
mov
enter
mov
test
and
aad
sbb
fsts
rclb
dec
leave
stc
sti
or
mov
xor
push
mov
dec
rorb
hlt
mov
fmul
flds
mov
adc
push
sbb
decl
pop
iret
loopne
mov
repz
mov
mov
push
mov
sbb
stos
add
push
or
lcall
addb
mov
insb
loop
mov
mov
push
inc
jbe
xchg
inc
jo
movsb
and
loopne
enter
pushf
lahf
mov
dec
push
popf
add
test
lods
jle
clc
das
mov
sbb
adc
js
je
mov
xchg
ret
add
or
xchg
lds
inc
sub
and
push
nop
lds
inc
aam
call
or
ljmp
mov
dec
mov
mov
les
cld
sbb
les
dec
jg
or
sub
orb
pop
push
shlb
inc
push
scas
jno
dec
inc
sbb
push
adc
push
std
fwait
pop
aaa
mov
jp,pn
inc
aas
movl
add
dec
inc
sub
cld
push
xor
xchg
dec
scas
push
mov
or
jo
aas
pushf
xchg
dec
cs
outsl
insl
outsl
sub
in
mov
jno
int3
add
das
xchg
imul
int3
das
mov
arpl
push
outsl
ret
pop
lods
and
insb
cmpsl
cwtl
cltd
xchg
shrl
push
mov
xor
xor
xor
inc
pop
or
cmpsl
cmp
dec
push
mov
xchg
insl
mov
test
pop
fdivrs
stos
adc
xchg
sbb
jge
or
pushf
and
test
add
bound
lret
pop
or
mov
js
push
jbe
fucomi
call
test
cmp
das
add
xor
imul
pop
xchg
dec
int
loop
inc
pusha
inc
cltd
push
in
add
mov
rol
xchg
mov
lret
and
test
pop
pop
out
lcall
mov
aam
dec
jae
cmp
or
mov
aad
inc
fbstp
adc
enter
aad
popf
sbb
clc
in
pop
pop
jg
ret
subl
push
popa
data16
jno
daa
ret
xchg
aad
xchg
outsb
jg
mov
adc
and
push
pop
out
icebp
imul
lea
xchg
mov
outsb
adc
adcb
and
adc
stos
cwtl
push
out
loope
adc
inc
lock
push
je
adc
mov
es
loope
lea
xchg
scas
test
mov
mov
ror
in
mov
inc
testl
ds
adc
es
pop
cli
inc
push
fistl
int
test
inc
jg
jmp
add
insl
dec
test
repnz
lea
push
xlat
pusha
and
sbb
es
inc
or
jns
cld
inc
mov
mov
jge
das
dec
or
or
add
and
pop
js
sbb
or
jge
das
fsubl
clc
sub
bound
and
fwait
addr16
mov
loop
ljmp
es
inc
sbb
ss
pop
mov
push
sbb
das
sub
and
pushf
cmp
push
stc
push
push
pop
icebp
push
inc
mov
mov
fstpl
add
out
gs
push
sub
stos
adc
fisttpl
test
andl
aad
icebp
lods
pop
testl
imul
jle
leave
inc
cmpsl
add
and
mov
mov
jo
pop
test
ret
sbb
mov
daa
push
outsl
test
mov
scas
gs
in
mov
adc
inc
fildll
sub
add
mov
mov
adcb
push
jmp
shll
xchg
clc
adc
mov
test
pop
outsl
mov
aaa
or
xchg
pusha
push
cwtl
add
xor
add
dec
ljmp
andl
sub
cwtl
or
hlt
mov
std
jmp
sbb
pop
lds
repz
adc
xchg
xlat
shrl
fadd
mov
dec
sbb
adc
pop
mov
lods
das
inc
xor
loopne
mov
arpl
test
mov
adc
test
mov
out
decl
pop
mov
jno
imul
mov
icebp
xchg
add
xlat
add
inc
sub
mov
out
adc
cmp
gs
movsl
pop
mov
jg
adc
ret
lds
inc
test
ret
fs
mov
std
idivb
jno
stos
lahf
or
mov
jb
ljmp
pop
jge
mov
iret
enter
das
mov
in
jmp
cwtl
mov
dec
lods
lret
mov
inc
inc
shlb
mov
mov
fadds
or
popaw
outsl
in
aam
enter
fnstcw
add
ret
xor
jmp
aad
xor
orb
jl
xchg
imul
pop
inc
adc
popl
daa
pop
adc
clc
adc
out
mov
xchg
fisubrs
imul
mov
jbe
ret
sbb
jp
push
int3
sbb
mov
xchg
mov
pop
add
adc
jne
scas
push
lock
xor
push
pop
mov
inc
cmovno
imul
je
outsl
xchg
mov
add
fiadds
jg
enter
mov
lcall
test
cmp
rclb
jnp
cmp
inc
sub
ss
sbb
or
add
es
pop
mov
xchg
in
pop
in
dec
jnp
lret
mov
mov
movl
push
repnz
mov
test
leave
mov
cli
add
jno
add
and
inc
inc
daa
xchg
clc
mov
into
mov
adc
imul
popf
jne
aam
or
jns
or
mov
sbb
je
sub
stos
push
jge
nop
fwait
ret
add
fwait
stc
or
call
add
fcmovu
stos
cmc
push
and
xor
ja
adc
es
add
out
or
inc
mov
subl
xor
scas
add
decl
lods
inc
jmp
xchg
scas
roll
test
xchg
into
fisubl
incb
pop
ret
fwait
and
mov
push
xorb
outsl
fmuls
inc
lds
jmp
jnp
addr16
push
cltd
mov
pop
mov
emms
test
xchg
sbb
adcb
inc
adc
inc
adc
rorb
inc
or
mov
and
repnz
pop
flds
arpl
inc
adc
jae
lock
imul
sbb
imul
aaa
cld
fstpt
inc
inc
ljmp
mov
imul
test
in
add
sar
lret
mov
add
out
xor
xchg
lahf
sub
movsl
push
pop
add
icebp
popf
push
adc
jp
sub
dec
cmpsl
or
repz
sub
and
inc
push
rcrl
mov
out
mov
cmp
mov
push
das
sub
and
mov
aam
sub
dec
into
fcompl
sar
add
out
clc
push
push
rep
nop
push
jno
xchg
fisttpll
sbb
adc
inc
jno
movsb
fcomp
aam
insb
outsl
cmpsb
sahf
je
movsb
mov
mov
dec
or
mov
fists
jge
ret
pop
cwtl
jmp
add
mov
not
mov
cmp
fsubrs
pushl
mov
pop
mov
es
jae
inc
sbb
shll
add
adc
lock
andb
xor
orl
mov
repz
sbb
mov
sbb
inc
adc
fnstcw
pushf
add
fists
jg
lcall
les
out
or
into
call
cmc
xchg
lock
inc
hlt
setl
incl
fcoms
add
inc
dec
fstpl
adc
out
pop
test
inc
test
imul
inc
pop
or
lock
sub
jl
inc
test
pop
mov
xor
inc
fs
rclb
pop
push
add
pop
mov
push
add
xor
mov
mov
ret
in
test
shrl
ret
inc
movsl
outsl
hlt
push
insl
xor
push
add
xchg
outsb
outsl
dec
movsl
push
insl
inc
and
in
mov
push
imul
push
mov
mov
mov
inc
fbld
mov
xchg
scas
stos
imul
cmp
mov
lock
and
mov
repz
fisubrs
push
dec
mov
out
jbe
repnz
xchg
into
mov
scas
cmp
xor
xor
dec
xor
inc
sti
test
in
mov
xor
pop
mov
push
pop
jnp
test
loope
xchg
inc
push
or
add
sti
inc
out
das
sbb
sbb
sar
dec
shrl
jle
in
adc
and
sbb
ret
push
jne
xor
pop
mov
mov
sbb
mov
inc
inc
jbe
xor
sbbl
mov
mov
mov
bound
add
rclb
mov
test
ret
or
sbbb
sbb
mov
pop
add
filds
jmp
lcall
cld
pop
mov
mov
je
xchg
xorb
fimuls
and
and
lods
fldt
into
pop
or
fistl
pop
repnz
ret
fbld
push
and
lea
mov
sbb
and
cld
push
insb
cld
adc
and
loope
xchg
insb
and
pop
push
jb
clc
pop
ds
adc
sahf
pop
mov
xchg
jbe
decb
xchg
or
and
mov
outsb
lods
inc
cmc
notb
pop
mov
and
xor
cmp
ds
std
das
xor
mov
dec
dec
test
sbbb
cs
add
ds
ret
je
out
mov
cmpb
push
adc
pop
sub
push
lods
mov
mov
add
ret
filds
or
imul
mov
and
aam
loopne
jp
stos
test
test
das
pop
and
int3
lcall
out
xlat
imul
or
add
ds
jg
xor
xchg
pop
push
or
aaa
jbe
add
push
or
pop
call
pusha
mov
cmp
xlat
dec
loop
cli
push
das
mov
add
inc
popa
add
pop
nop
out
jecxz
dec
jecxz
sub
stos
jbe
clc
mov
and
lret
cmc
jp
sti
push
push
lcall
clc
ds
and
hlt
mov
xor
ficoml
mov
mov
cmp
push
push
and
cmp
fistpll
jmp
subb
rcr
cmp
adc
aam
and
and
das
push
xor
add
xchg
push
or
jecxz
push
mov
cwtl
out
clc
sub
out
jbe
and
dec
les
stos
std
stc
sub
cmpsl
ss
call
inc
lret
push
sbb
shrl
call
mov
inc
in
sub
sbb
jne
push
or
lock
jns
or
and
mov
sub
dec
test
mov
fstl
pop
mov
dec
pop
pop
jecxz
fbstp
div
adc
pop
mov
sub
sbb
in
movsl
push
push
ss
mov
sbbl
or
dec
xchg
cmp
adc
pop
pop
insb
add
xchg
inc
add
and
aad
mov
pop
cs
mov
pop
clc
or
fimull
in
adc
faddl
push
cs
and
ljmp
dec
pop
out
stos
adc
aaa
add
je
adc
movsb
and
enter
dec
icebp
call
cmp
imul
xor
jno
adc
jbe
hlt
cs
inc
adc
mov
pop
jcxz
push
push
cltd
subl
push
cmpsb
mov
and
rcrb
es
adc
sahf
aaa
stos
rcrb
shll
cmp
push
jecxz
aaa
lahf
mov
arpl
imul
jns
lods
inc
in
mov
inc
sub
jns
loopne
push
loopne
aaa
cwtl
jmp
dec
call
inc
hlt
test
into
std
dec
mov
sub
stos
pop
push
in
andb
dec
xchg
or
rcrb
mov
xchg
in
fiaddl
aas
cld
dec
icebp
sbb
ljmp
fs
or
jle
mov
mov
scas
cwtl
and
or
xor
dec
mov
inc
cmp
cs
jo
mov
or
stos
push
imul
imul
add
movsl
lock
fimull
inc
dec
sub
jns
adcb
cmp
aad
push
adc
pop
imul
and
sbb
inc
ljmp
mov
push
sbb
insl
jno
mov
out
stos
pop
sub
popf
sbb
mov
xchg
or
imul
mov
adc
mov
repz
dec
pop
and
icebp
mov
mov
adc
cltd
loop
push
cs
cmp
cs
gs
fidivrs
adc
sbb
je
pop
popl
test
add
mov
pop
andb
ljmp
xor
mov
test
in
inc
jnp
cs
add
testb
xlat
stos
inc
call
jbe
mov
lock
pop
add
mov
je
test
pop
inc
jg
mov
movl
mov
mov
mov
add
cmp
das
aad
pop
xorb
rolb
jp
fildll
add
nop
cmp
cli
push
adc
xchg
fiaddl
pop
fistl
mov
scas
add
mov
das
mov
and
xsha1
cmpsb
lea
mov
pop
adc
push
fbld
push
mov
xor
cmpsl
mov
aad
push
jo
and
dec
daa
dec
je
mov
add
into
dec
mov
or
jmp
mov
push
fsub
rorb
ja
shlb
xorl
in
imulb
push
sbbb
aad
inc
outsl
xor
xlat
mov
insl
mov
loop
cmp
iret
cld
test
push
pop
ljmp
xorl
dec
sbb
insb
insl
dec
or
lret
inc
add
push
mov
cmpl
fiaddl
enter
jmp
out
xor
das
adc
aaa
mov
jno
sbb
in
sbb
inc
test
sahf
or
loop
mov
sub
dec
scas
sbb
fsubl
adc
aaa
das
or
cmp
jle
or
mov
test
lods
test
cmp
push
sub
pop
adcb
cli
fistpll
sub
lahf
jle
mov
js
cmp
cmp
das
aam
xlat
xor
rol
and
dec
mov
bound
xchg
lods
aam
pop
adc
sbb
adc
aad
jecxz
jbe
mov
inc
cmpsl
jecxz
out
nop
sbb
pop
mov
fwait
test
arpl
push
gs
sbb
hlt
cld
ds
xor
adc
js
jecxz
mov
clc
cmpsl
pop
mov
ljmp
pop
mov
xchg
repnz
xchg
jecxz
inc
insb
or
mov
mov
daa
ss
mov
clc
orl
xchg
pop
test
sbb
and
pop
xor
or
mov
push
pop
mov
dec
and
mov
repnz
jbe
cmpsl
and
mov
inc
test
mov
andl
dec
xchg
mov
dec
je
push
arpl
mov
arpl
push
jecxz
or
adc
jno
fidivs
sbb
shll
lock
push
jmp
cmpsb
jnp
mov
outsl
cmpsb
add
mov
mov
pop
outsl
mov
and
sahf
cmpsb
mov
clc
xchg
popf
add
add
dec
fdivr
and
stos
add
stos
inc
int3
mov
cmp
mov
xor
or
xchg
mov
push
xchg
pusha
dec
add
bound
hlt
or
fs
in
or
rclb
add
ret
inc
xor
mov
mov
lcall
mov
sbb
sarb
test
aad
xchg
inc
xchg
jle
aaa
cmp
iret
into
mov
sbb
lods
test
add
jg
pop
lods
pop
mov
int
stos
push
loopne
sbb
js
les
insb
sbb
mov
hlt
lcall
mov
ds
jge
mov
push
flds
push
xchg
mov
sbb
icebp
neg
fcomps
adc
notl
and
xor
mov
sub
outsb
lret
pushf
adc
lock
cmp
enter
mov
int3
test
add
rorb
insl
insl
push
adc
mov
mov
jp
sbb
repnz
or
mov
sub
adc
jle
mov
mov
cmp
xchg
mov
jbe
push
jnp
subb
addr16
sub
add
loopne
aas
js
mov
push
jmp
lds
xchg
pop
fiaddl
dec
lods
je
sub
and
stos
lods
rorl
mov
clc
stc
push
adc
sub
mov
sbb
inc
cmc
pop
mov
fildll
cltd
jle
jne
push
sub
sbb
adc
mov
add
dec
jecxz
nop
enter
dec
push
into
cmp
sub
sub
mov
lea
cmp
das
inc
rolb
jb
lret
movsb
jmp
adc
pop
lock
mov
arpl
ret
test
xor
lock
xchg
inc
sahf
cmp
sarb
and
mov
xor
addr16
popa
adc
insb
jmp
pop
mov
add
cmp
testl
mov
or
bound
in
dec
jl
out
cli
inc
cmc
mov
shll
out
fadd
add
mov
mov
das
es
mov
mov
add
int
fwait
push
out
inc
pop
sub
push
or
push
jne
das
and
inc
pop
popf
pop
subb
gs
jp
test
mov
dec
push
push
mov
and
jno
lahf
add
insb
dec
add
scas
movsl
insl
jmp
les
movsb
pop
sub
cmp
in
mov
ljmp
mov
push
push
inc
add
mov
xor
mov
mov
js
in
cltd
pop
adc
mov
sub
adc
popa
lds
mov
rcrl
fisttpl
cmp
aaa
ror
repnz
test
inc
setge
inc
es
dec
inc
sub
outsb
or
leave
je
aam
sbb
adcl
les
push
xor
push
rcrl
push
adc
outsl
push
jle
loopne
ficoml
dec
pop
test
mov
pop
xlat
mov
cmp
push
dec
pushf
and
cmc
sbb
add
or
xor
and
pop
fisubl
movsb
xchg
add
stc
mov
stos
mov
fwait
mov
xor
mov
aad
sbb
cld
xchg
mov
pushl
mov
add
aaa
push
jp
fistpll
push
mov
jns
jmp
mov
cld
lods
stos
inc
cmp
dec
test
addr16
popa
das
mov
ror
sahf
push
add
mov
pop
sub
je
lock
or
push
loop
test
mov
push
and
adc
cld
ret
sbb
movl
or
orb
pop
movl
add
dec
dec
pushf
aas
fimuls
jge
xchg
push
test
mov
das
inc
ja
add
cltd
inc
fldl
out
mov
jg
xchg
popa
push
inc
fs
sub
insl
leave
add
outsb
aam
lcall
or
mov
insl
jecxz
insl
jae
or
mov
adc
loopne
insl
outsl
sbb
xor
or
pop
or
test
inc
push
push
stos
cmc
outsl
pop
fisubrs
mov
mov
sarl
mov
mov
incl
inc
and
mov
in
jns
aam
push
lret
dec
lcall
pop
loop
mov
mov
inc
cld
add
xor
sahf
add
jmp
mov
add
fistl
push
push
iret
pop
or
sub
scas
adc
test
sub
sub
sub
and
xchg
adc
shrl
push
and
ljmp
dec
incl
or
mov
sti
mov
frstor
jae
push
inc
jmp
or
pop
sbb
inc
test
adc
mov
test
fildll
adc
loop
add
gs
cmc
stos
in
mov
mov
pop
ljmp
bound
in
aaa
push
pop
push
test
ja
push
mov
jo
loop
shll
sub
popf
xor
cmp
testb
aaa
mov
cmp
push
xchg
or
pop
jecxz
jb
xchg
sub
orl
std
and
jecxz
out
and
inc
pop
pop
fs
sbb
sbb
sub
inc
gs
aas
or
adc
add
scas
movsl
mov
mov
insl
inc
jo
dec
lds
sahf
les
push
mov
dec
jmp
sbbl
ljmp
push
lds
mov
in
popf
stos
add
mov
adc
and
pop
sbb
loop
pop
xor
adc
or
sbb
xor
clc
pop
dec
xchg
sbb
mov
jae
xor
mov
hlt
hlt
push
in
xchg
jnp
sub
xchg
mov
add
stc
ja
pop
or
push
gs
and
adc
or
pop
arpl
push
popa
mov
or
push
or
jns
mov
stos
adc
inc
repz
decb
std
ja,pn
xchg
jns
and
xor
mov
dec
add
mov
popf
push
inc
cmc
push
jne
dec
movsl
movsl
push
cwtl
int3
mov
cmp
xchg
xchg
imul
cmc
fists
adc
fiaddl
mov
jle
ja
lds
pop
xchg
imul
into
mov
loopne
hlt
jbe
inc
nop
std
orl
enter
insl
adc
cmpsl
mov
push
pop
mov
les
lcall
test
cld
push
dec
mov
pop
inc
mov
mov
cmp
xor
mov
call
test
or
int
inc
push
call
testb
in
xor
pop
cmpsl
xchg
stos
dec
lds
and
add
pop
push
js
push
bound
mov
push
sub
sub
jne
popa
push
sub
adc
cmpsb
sbb
icebp
aam
jg
mov
jns
and
roll
push
aam
push
mov
cld
cmpsb
sub
dec
xorl
inc
push
xchg
dec
shlb
test
mov
xchg
push
pushl
add
pop
cmp
cmp
jmp
jmp
sub
pop
sbb
or
ljmp
cltd
push
in
out
mov
cwtl
lret
sub
xor
lods
loopne
insl
and
jns
xor
adc
jecxz
cltd
ret
shlb
mov
mov
scas
and
mov
pop
sar
adc
sbb
fcoms
nop
stc
dec
or
push
stc
mov
stos
mov
lods
clc
push
jno
add
sbb
movsl
incl
pop
add
testb
mov
cmc
mov
hlt
insb
push
jg
add
jge
jge
outsl
insb
icebp
mov
or
arpl
pop
jo
add
xor
push
insb
or
aad
loop
mov
mov
lds
mov
loopne
lds
dec
push
pop
sbbb
mov
or
nop
enter
inc
pop
mov
and
sahf
call
js
decl
shrl
addb
xor
fisttpl
js
outsl
fcmovu
or
mov
pop
test
lods
mov
inc
jnp
mov
gs
inc
cld
add
cmp
push
sbb
test
xchg
mov
mov
scas
jns
dec
and
hlt
aaa
dec
repnz
repz
clc
pop
in
mov
or
lods
sarb
pop
mov
sbb
loopne
mov
push
cmpsb
lds
ss
cwtl
jecxz
movsl
inc
lods
inc
test
outsb
insb
cld
dec
add
aas
dec
and
jmp
jmp
cmp
clc
mov
in
sbb
or
cmc
dec
cld
outsl
adc
aaa
fildl
pop
mov
jae
add
fcomp
mov
dec
cld
jl
mov
dec
rorb
mov
sub
pop
clc
pop
or
aaa
pushf
xchg
adcl
out
fdivr
movsl
mov
add
mov
add
lcall
nop
lcall
mov
mov
and
fwait
stos
and
cli
add
mov
or
xor
sbb
ret
pop
sub
mov
je
mov
mov
stos
dec
scas
or
sub
in
or
add
pop
sahf
icebp
sahf
fidivs
loope
mov
adc
in
and
adc
sti
sbb
sbb
sub
mov
pop
mov
jl
mov
subl
push
mov
test
aam
dec
jge
xor
mov
aad
ljmp
sub
push
mov
sub
movsb
and
mov
gs
xchg
popa
rcl
shrb
push
es
outsl
adc
lods
das
mov
inc
mov
negb
filds
roll
push
inc
mov
push
test
or
xorl
xchg
xor
dec
mov
cmp
add
ret
sbb
adc
adc
cwtl
ret
push
imul
push
fstps
ret
mov
fistpll
adc
bound
stos
das
hlt
pop
xchg
xchg
aad
pop
mov
push
jmp
dec
clc
outsl
cld
push
movl
arpl
cwtl
mov
ficoml
add
sbb
cli
pop
push
xchg
pop
fxch
add
imul
sbb
jmp
xchg
xor
cld
mov
adc
into
mov
cli
pop
test
mov
push
into
xchg
mov
adc
cld
mov
in
mov
inc
das
xor
aaa
xor
xor
lahf
or
push
ret
fcomps
loopne
mov
pop
in
mov
insl
test
mov
or
das
mov
inc
mov
dec
jae
outsl
clc
push
and
inc
andb
lds
jno
leave
jo
aaa
cmc
cwtl
jmp
inc
leave
or
fdivrl
je
sub
mov
jecxz
mov
push
push
fisttpl
or
inc
call
jno
jns
inc
rol
lock
loop
divb
jg
icebp
fidivl
inc
cmp
shlb
push
xor
xor
push
sbb
scas
cmpsb
or
inc
mov
inc
adc
jge
inc
movsb
ret
jnp
sub
je
jp
ret
stos
loope,pn
pusha
lret
imul
adc
jp
subb
in
arpl
lret
push
lcall
mov
iret
push
or
jecxz
repnz
sub
mov
cmpsl
adc
pop
pushf
push
mov
sti
mov
outsb
sbb
or
xchg
jmp
jo
and
cmpsb
mov
mov
sbb
mov
jle
cmpsb
xorl
fstl
inc
test
sbb
sti
inc
sub
aas
insb
fbstp
lods
jg
mov
jmp
cs
fwait
push
enter
xchg
test
in
xor
lea
fsubrs
dec
cmp
lods
cmp
dec
add
insl
ljmp
lock
mov
inc
and
fs
ja
movsl
popf
mov
adc
ljmp
jb
xchg
seto
or
pop
pop
pop
mov
dec
mov
insl
fistpl
in
or
sub
pop
xchg
outsl
mov
fldt
mov
movl
jbe
mov
add
jecxz
fwait
sub
sub
dec
inc
adc
fsubr
and
cmc
fstps
test
aas
adc
dec
and
stc
add
mov
push
lods
out
mov
inc
sub
push
shl
mov
dec
mov
roll
lods
jmp
mov
adc
inc
stos
rolb
rol
outsb
pop
sub
mov
push
add
aas
mov
scas
jge
xchg
or
in
dec
inc
xor
call
adc
inc
inc
nop
std
inc
popa
xor
das
aam
inc
out
fsts
repz
clc
lods
call
dec
or
pop
mov
bound
aaa
jg
add
xchg
ss
mov
je
cmpsl
ljmp
movsb
mov
xlat
xor
lea
mov
xchg
add
outsl
ficompl
mov
stos
repz
add
mov
sbb
or
sub
insb
aad
mov
fldt
out
roll
testl
lret
ss
and
sahf
sub
dec
iret
cs
and
in
enter
lock
mov
mov
or
loope
scas
sub
xchg
adc
aaa
adc
push
cmp
push
insb
out
dec
jl
mov
hlt
xor
add
out
arpl
scas
rcrl
inc
add
call
xchg
cli
jb
cwtl
divb
es
stos
dec
push
add
fidivs
mov
sub
andl
iret
loop
xchg
ss
bound
adc
push
mov
dec
out
jg
movsb
sbb
dec
push
aaa
dec
les
jge
mov
xchg
repz
movsl
sub
push
pop
mov
lods
divb
pusha
ss
dec
lcall
adc
hlt
and
fnstenv
and
mov
pop
inc
mov
mov
pop
and
test
stc
pop
mov
fildll
mov
mov
mov
outsb
js
adc
inc
inc
pop
push
pushaw
xchg
fsubl
and
lock
aad
ljmp
fs
hlt
ffreep
adc
ficompl
jmp
es
mov
ljmp
adc
adc
mov
out
fwait
or
and
sbb
and
andb
cld
fidivrl
adc
addr16
dec
iret
inc
fstpl
inc
sbb
scas
outsb
cwtl
add
pop
clc
pop
mov
lcall
clc
lcall
push
pcmpeqw
lcall
inc
mov
mov
jns
xor
xchg
call
pop
call
adc
imul
lea
push
sub
push
inc
xchg
in
mov
nop
out
mov
xchg
lea
cwtl
insb
pusha
xchg
cmp
xchg
or
aaa
sub
pop
and
dec
jg
inc
lods
push
call
xor
pop
add
lea
mov
mov
loope
push
xor
pop
add
jbe
cwtl
push
mov
pop
inc
mov
and
repz
fmull
mov
fdivl
clc
mov
mov
and
inc
int3
push
mov
cs
sbb
mov
ja
dec
xor
add
out
sub
lock
add
mov
lods
jecxz
xchg
scas
mov
outsl
sub
cmp
sti
rorb
mov
pop
fcmovnb
pop
outsl
pop
mov
sub
mov
add
xor
or
cmp
jmp
fistl
in
nop
xlat
jae
fisubs
mov
add
lret
popf
xchg
push
add
call
add
lea
in
and
pop
mov
clc
cmp
xor
pusha
xchg
mov
sbb
mov
mov
pop
stos
mov
in
lock
xor
lret
and
aad
adc
lea
lock
adc
and
and
pop
sub
out
xchg
mov
adc
sbb
cmp
sbb
sub
test
push
and
outsl
jno
pop
xchg
adc
fmull
xlat
xchg
outsl
cmc
push
icebp
dec
dec
sbb
lods
xchg
add
aad
lods
sub
bound
shll
aaa
sub
or
into
dec
mov
shl
stos
jne
movl
jecxz
movsb
add
pop
jg
movsl
loopne
mov
pusha
adc
test
jmp
mov
or
out
mov
stos
sub
in
push
sbb
xchg
lods
sbb
dec
hlt
cltd
xor
xor
aaa
ds
aam
sbb
lock
pop
punpcklbw
loope
jbe
sti
loope
add
orb
xor
fistps
pop
push
or
loopne
aas
data16
rcll
mov
repnz
sbb
or
mov
sahf
push
cmp
sub
das
push
and
mov
call
or
scas
fidivrl
sub
mov
mov
adc
add
ds
pop
sub
out
push
les
call
sbb
cmc
xchg
mov
je
out
gs
push
in
das
data16
ret
sbb
sbb
or
in
bound
mov
mov
movsl
mov
cmc
push
xchg
and
mov
lea
ss
push
mov
filds
in
pop
lods
jmp
mov
incl
jbe
inc
enter
mov
mov
push
std
out
add
adc
jmp
popf
out
push
ret
lds
mov
push
jg
loop
push
push
add
mov
sub
mov
andb
decl
sbb
jb
ret
mov
xchg
mov
mov
popa
cmp
mov
xchg
inc
or
adc
loope
sbb
lods
outsl
lds
inc
cld
pop
repnz
jecxz
mov
stc
jbe
or
jecxz
stos
adc
in
andb
mov
xchg
ret
imul
rcll
push
cmp
dec
hlt
adc
mov
jne
push
mov
cs
push
push
test
mov
decl
ljmp
lret
push
jo
lods
scas
sahf
clc
aas
lods
sub
pushf
or
and
subb
testb
fisubs
incl
in
ret
ljmp
shrb
inc
inc
rol
idivb
or
push
popf
cmp
inc
les
cmpsb
add
fisubs
mov
out
mov
adc
lock
adc
pop
xor
cwtl
sbb
scas
test
add
adc
xor
stos
mov
stos
adc
xor
movsl
and
sbb
push
dec
stos
mov
mov
pop
mov
sbb
mov
aad
dec
ret
jge
popf
sbb
fnsave
pop
rolb
sbb
or
aas
or
pop
fimuls
loopne
or
dec
in
xchg
lret
and
das
add
imul
iret
inc
pop
pop
outsl
out
ja
push
cs
sub
rcrb
sbb
and
pop
xor
ret
jl
cmp
stc
or
je
push
es
adc
or
cli
ret
pop
cli
jg
sarb
inc
in
hlt
mov
cld
fwait
loopne
fmuls
push
add
pop
mov
aaa
sub
inc
or
inc
mov
jecxz
clc
inc
and
movsl
push
push
cltd
inc
aaa
sbb
and
jbe
outsb
xlat
push
sub
mov
dec
in
pop
fdivr
pusha
add
dec
inc
inc
mov
popf
adc
push
fwait
xor
outsb
stos
jecxz
pop
ficomps
xchg
and
cmpsl
cmp
pusha
out
imul
push
mov
add
push
xor
test
push
sti
fimull
sub
mov
aaa
cmc
dec
bound
push
xchg
in
adc
mov
dec
cmp
aad
rolb
rclb
or
sub
test
add
lret
mov
push
data16
and
jp
xchg
scas
ja
add
in
sar
adcl
jecxz
pop
ja
jecxz
or
xor
cmp
scas
sub
push
stos
inc
es
mov
loope
lods
fldenv
jno
add
push
mov
mov
gs
cmp
cmpsb
mov
mov
jno
pushl
xchg
lock
cwtl
cld
bound
pop
or
aad
push
call
data16
xchg
cmpsb
and
addl
pop
jp
jg
push
sbb
out
add
mov
lock
mov
xchg
push
cmp
and
test
jge
and
adc
adc
inc
pop
cmc
and
sub
xchg
add
inc
ja
icebp
xchg
cmpw
and
cli
ficoml
aaa
xchg
sub
sub
cmp
mov
scas
dec
xchg
addb
push
mov
out
jp
test
sti
lods
jecxz
es
mov
cld
pop
cmp
add
cmp
pop
push
push
fnstsw
lock
outsl
cld
dec
add
or
loope
adc
add
out
std
xchg
std
inc
jo
cli
inc
lea
movsb
inc
push
mov
dec
fwait
push
sahf
jmp
enter
inc
icebp
das
fs
inc
fisubrl
ror
add
push
sub
mov
add
push
add
inc
lea
mov
incl
ljmp
xrelease
repz
push
or
add
push
cli
mov
mov
inc
push
shll
pop
xor
pop
gs
arpl
mov
push
ja
adc
jb
ds
mov
cs
or
rorl
add
lea
sub
or
cmp
xchg
jecxz
fbld
add
int3
sub
inc
fdivl
cmpb
pop
inc
adc
shrl
js
pop
into
out
xor
xor
jne
push
adc
adc
mov
in
cltd
das
dec
sbb
pop
mov
outsl
sbb
xchg
ret
sub
add
cmp
pop
or
test
mov
sub
sbb
pop
mov
pop
mov
and
aaa
idivb
imul
lcall
push
mov
add
dec
clc
mov
xchg
call
mov
popf
in
popf
dec
and
imul
movsl
push
sti
jle
or
icebp
or
add
jo
nop
rcr
sub
jmp
or
jg
adc
adc
stc
sbb
xor
dec
pop
dec
lcall
cmp
dec
mov
and
sbb
lret
fisubrl
pop
or
adc
bound
rcrl
mov
pop
cli
fucomip
adcl
xlat
test
xor
arpl
dec
nop
gs
sbb
call
pop
insl
orl
or
clc
mov
push
xor
arpl
or
cli
xor
inc
scas
arpl
cli
xchg
mov
or
jg
adc
test
push
fsubs
lock
mov
imul
test
mov
ja
sti
imul
call
sub
cmp
mov
pop
mov
mov
dec
pusha
dec
ljmp
std
and
jl
shlb
mov
ss
add
outsl
push
sbb
xchg
cmp
orb
addr16
jne,pn
decl
cmp
int3
lret
loop
dec
push
mov
pop
sub
push
dec
into
aad
stos
jle
push
ljmp
sub
pop
add
aas
lock
ja
mov
cmpsb
pop
inc
insl
pop
adc
in
inc
rcl
or
cs
stos
or
pop
pop
cli
push
cmp
mov
xchg
je
pop
lcall
insb
lret
adc
shll
xor
loope
ret
les
jge
and
mov
mov
dec
add
and
push
stos
push
sti
and
dec
xchg
fsubs
add
sbb
mov
pop
ret
movups
outsl
lods
lahf
idivb
mov
jne
icebp
cltd
inc
aaa
and
stos
std
lods
roll
lret
inc
pop
xchg
cmp
add
sbb
jle
xchg
incl
sbbl
mov
scas
ret
mov
sub
mov
lock
xor
test
icebp
inc
stc
jns
lcall
sbb
repz
inc
mov
push
jle
add
push
mov
scas
inc
sub
outsb
insb
imul
test
dec
inc
xor
adc
pop
jle
decl
clc
in
mov
jo
test
push
mov
adc
in
movsb
insl
push
or
lock
cld
in
andl
mov
cwtl
add
insb
xor
xchg
rorl
ret
ja
fst
loope,pt
mov
imul
jne
sahf
jl
jecxz
pushl
or
lods
mov
mov
stc
pop
xor
orl
xorb
xchg
adc
lea
repz
cmp
or
and
addr16
ss
xchg
mov
jmp
push
je
fs
inc
subl
inc
hlt
mov
mov
xchg
and
sbb
cld
call
mov
jecxz
dec
inc
mov
adc
or
pop
cs
inc
outsl
jge
loop
push
mov
mov
ljmp
std
xor
add
fdivs
add
rorl
cwtl
movsl
loopne
inc
sbb
addl
push
push
adc
bound
xchg
push
loopne
outsb
mov
fildll
push
mov
je
inc
daa
xlat
pop
jae
out
push
div
je
dec
mov
inc
sahf
inc
bound
lea
and
add
ja
hlt
mov
addr16
mov
hlt
enter
add
xchg
cwtl
lods
add
add
fdivrp
add
inc
addl
aaa
sbb
fstpl
xchg
and
ret
icebp
dec
push
sbb
mov
not
imulb
movsb
fwait
cld
jl
inc
mov
clc
mov
mov
pop
int
mov
adc
int
nop
aaa
sbb
aas
push
das
shll
gs
lea
mov
or
and
mov
icebp
subb
xchg
movsb
pop
pop
xchg
in
pop
jg
sub
inc
cmp
andb
mov
inc
stos
dec
mov
or
adc
or
in
push
std
adc
lea
adc
sub
lock
sbb
inc
pop
sarl
mov
mov
decl
xor
and
inc
loop
in
jae
add
pop
or
icebp
pop
sbb
jecxz
jp
repnz
dec
xchg
ja
jne
clc
push
push
sbb
adc
or
test
adc
outsl
mov
sbb
cmp
repz
jmp
outsl
outsl
jb
mov
mov
aam
sbb
fs
cli
out
ss
sti
lock
sahf
xlat
out
and
push
test
bound
fcomp
add
sbb
jnp
std
das
mov
sub
ss
adc
jnp
scas
popf
test
add
cli
fisttps
mov
mov
xor
xchg
sbb
mov
out
cmp
out
pop
scas
outsb
fdivl
inc
sub
jle
pop
and
sbb
dec
lret
hlt
push
xchg
mov
jo
adc
and
push
hlt
mov
test
jbe
xor
cli
or
push
add
or
jb
arpl
repnz
and
cmpsb
ja
push
jbe
hlt
sbb
cli
xor
and
mov
pop
das
or
add
or
and
or
ss
mov
and
xchg
dec
or
jne
sub
lret
xor
cmc
fwait
pop
push
shrb
xor
sub
push
add
mov
mov
lods
in
push
push
xor
pop
jle
push
mov
aad
add
fsub
test
inc
mov
cmp
push
and
cwtl
dec
pop
das
cld
ret
cmpsl
clc
push
inc
fisubrs
out
sub
cmp
ret
cmp
add
lock
xor
xlat
enter
orl
popa
addb
or
mov
add
addb
out
jo
pop
sbb
jge
add
out
cmpl
ret
stos
push
and
jnp
call
mov
je
lcall
adc
ds
add
jbe
insl
loop
jl
xchg
dec
mov
test
test
xor
imul
cmp
xor
dec
rcll
stos
jnp
inc
popf
lret
sbb
dec
jbe
inc
shr
or
or
sbb
add
test
out
iret
popa
or
push
push
mov
js
das
stos
imul
push
mov
xchg
add
das
mov
fimuls
jecxz,pt
pop
inc
sub
arpl
popa
push
mov
cli
aaa
icebp
fmull
es
mov
dec
inc
and
adc
mov
aaa
jbe
and
sbb
cmc
sub
xor
imul
subb
mov
mov
and
xchg
mov
push
shr
out
add
dec
mov
or
int3
sbb
pusha
pop
mov
dec
adc
jbe
push
adc
inc
insb
fistpl
cltd
dec
scas
sub
mov
lods
sub
mov
add
sahf
mov
sahf
xchg
rol
mov
je
xchg
push
adc
xchg
mov
std
test
lods
pop
adc
xor
mov
xchg
movsb
add
inc
imulb
adc
roll
xchg
cmp
fisttps
dec
sbb
mov
add
call
and
and
xchg
cs
leave
divb
push
xor
and
insl
insl
lea
mov
xor
fists
ret
inc
fisubrl
or
sbb
mov
mov
call
add
sub
xchg
lea
les
sbb
int3
addr16
fistps
pop
pop
adc
sbb
sahf
inc
xor
sbb
popa
in
mov
inc
lea
jb
or
popa
fs
push
pusha
arpl
dec
data16
mov
adc
and
inc
mov
scas
shrb
loop
jle
or
ror
inc
roll
cmp
scas
pusha
mov
stos
mov
xor
push
jbe
jno
incl
out
jo
jns
stc
cmp
mov
cli
xchg
xchg
fsubr
add
and
mov
xor
aaa
mov
aam
mov
push
fcmovnu
push
cmpsl
mov
mov
jecxz
aad
mov
inc
sbb
mov
add
shl
and
cltd
arpl
dec
mov
and
add
lcall
subl
xchg
xor
test
out
sub
sub
sbb
sbb
sbb
sahf
adcb
rorl
fsubrl
hlt
sbb
mov
or
lea
adc
mov
sub
test
iret
add
adc
sbb
fcoms
inc
sbb
insl
mov
clc
nop
sbb
or
aaa
shrb
jmp
fs
cmc
dec
adcb
pop
sbbb
je
and
jnp
clc
dec
les
sub
rorb
pop
orl
lret
jle
sbb
mov
xchg
lds
mov
lahf
in
mov
mov
jne
lret
mov
mov
popa
sub
repnz
adc
outsb
jecxz
pop
add
xchg
xchg
daa
or
xchg
pop
inc
push
pop
and
push
aas
sub
cmp
clc
adc
push
dec
sbb
sbb
loopne
pop
pop
andb
loope
iret
aaa
sbb
xchg
pop
int3
in
xchg
fildl
scas
mov
inc
jmp
clc
stos
fsubl
lret
inc
mov
stc
dec
inc
lods
outsb
fnstsw
hlt
shlb
dec
push
jl
lods
mov
mov
cwtl
insb
cmpsb
push
inc
and
push
xchg
push
nop
and
mov
lea
mov
ficoml
push
xor
or
mov
fdivrl
add
ret
popf
icebp
jne
mov
test
inc
test
sub
xchg
push
push
mov
fimull
cmpsl
mov
push
add
xlat
clc
scas
or
mov
and
or
bound
lcall
mov
pop
ljmp
outsb
push
pop
xchg
cmp
jae
push
das
inc
inc
inc
dec
enter
int3
out
or
xlat
fmull
test
jecxz
mov
push
lret
mov
stos
mov
and
add
cmp
sub
ret
mov
jg
shll
and
pop
mov
ljmp
cmc
pop
mov
sub
adc
stc
ja
mov
push
popa
data16
fistps
mov
in
fmuls
jbe
push
sub
xchg
popf
not
jecxz
cmp
testb
lahf
enter
jbe
adc
adc
sbb
lock
jmp
inc
lds
roll
rorb
sbb
faddl
pushl
rcll
dec
and
lods
jl
inc
imull
sub
jl
outsl
pop
push
sbb
leave
mov
mov
mov
jp
mov
push
sub
pop
push
addb
pop
mov
aad
inc
rcr
daa
inc
fwait
sbb
pusha
in
or
ret
notb
mov
cmp
dec
inc
jmp
push
inc
pop
sub
add
subb
in
jecxz
fsts
dec
pop
and
pop
push
cmp
jmp
es
sub
rol
sahf
shl
sub
add
sbb
sar
xchg
xchg
dec
xor
xchg
mov
fcmovu
clc
out
cs
aas
inc
test
jne
inc
dec
pusha
movsw
mov
xor
sbb
ljmp
pop
pop
loop
mov
mov
jle
mov
push
rorb
loopne
or
lods
or
enter
cli
mov
dec
int3
lods
add
mov
adc
mov
cwtl
sbbb
sub
mov
mov
jo
xor
ret
lahf
mov
aaa
mov
sbb
cld
or
xchg
and
pop
loop
push
jl
push
fistpll
add
arpl
add
or
push
insl
insl
imul
lods
clc
test
add
sbb
xchg
mov
push
shrl
or
icebp
jmp
rolb
pop
dec
daa
dec
and
mov
and
cmp
pop
movsb
pushw
inc
mov
mov
outsl
loopne
cli
sub
fwait
dec
jne
push
popa
mov
sahf
xor
mov
push
sub
lcall
jmp
mov
fwait
mov
adc
xor
incl
lods
jne
adc
xor
ret
fadds
out
movsl
inc
adc
push
push
imul
gs
add
jb
rcrl
push
sbb
hlt
jae
daa
dec
ljmp
inc
mov
ftst
rclb
into
je
or
adc
xor
add
adc
or
das
mov
call
inc
sub
push
je
jnp
push
daa
lods
xchg
sbb
jg
mov
subl
lea
lock
or
adc
mov
pop
or
xor
lds
mov
lods
mov
mov
lret
mov
mov
lds
xchg
jle
lock
mov
enter
inc
outsb
push
add
lcall
pop
mov
mov
cmp
notb
push
into
mov
add
and
jb
pushf
mov
sub
lods
pop
insl
adc
hlt
icebp
fs
fdivl
and
bound
aam
lahf
add
dec
mov
mov
ja
mov
rclb
out
xlat
pop
add
adc
fistpll
mov
mov
fsubs
inc
mov
dec
and
sub
cld
divb
ret
mov
pop
cmp
cmp
pop
add
and
in
lods
test
xlat
addb
fsts
or
sbb
lret
fbld
sbb
adc
lock
in
leave
sbb
push
rclb
dec
inc
sub
and
pop
pop
cmp
cmp
inc
sbb
int3
inc
push
jnp
jne
add
push
icebp
pop
test
hlt
inc
das
push
mov
cmp
xchg
adc
outsb
or
ljmp
repz
mov
fdivrs
and
push
add
je
mov
subb
jg
ret
je
xor
sahf
mov
sti
nop
xchg
ss
lods
cmp
push
adc
sahf
cltd
test
dec
push
lahf
out
ds
sub
pop
ss
popa
sbb
insl
test
pusha
nop
mov
ljmp
xor
repz
jbe
std
repnz
cmp
jg
xchg
mov
icebp
sbbl
mov
or
adc
cmp
imull
addl
push
xor
push
clc
sbb
movsb
add
add
int3
lods
and
aaa
test
mov
push
inc
mov
pushl
pop
loopne
ss
enter
rolb
mov
add
sub
in
and
mov
inc
sbb
and
cmp
incl
sbb
add
inc
cmp
xchg
xchg
pop
loopne
xlat
push
movsb
push
xchg
out
pop
enter
inc
add
mov
js
mov
popl
jnp
insl
add
mov
ds
xchg
mov
shrl
mov
push
loope
cs
jg
outsl
or
pop
inc
or
cwtl
xchg
lea
repnz
aam
pop
ja
rorl
mov
dec
arpl
movhps
xchg
xchg
adc
push
push
inc
icebp
outsl
loopne
imull
jle
fmul
inc
pop
rclb
sti
js
add
xchg
push
inc
inc
pop
xchg
fsubr
call
je
add
mov
adc
ja
dec
gs
mov
or
add
insb
mov
andl
sub
push
push
inc
inc
or
inc
daa
add
cmp
insb
xchg
fisubrl
inc
adc
or
mov
mov
sub
jp
repnz
std
pop
cmp
push
insl
mov
mov
lahf
mov
add
xor
fistps
add
bound
add
sub
idivl
and
mov
inc
cmp
and
dec
mov
mov
cmp
popa
adc
mov
jl
jg
xor
push
sub
jmp
cld
rcl
mov
in
insl
loope
loopne
add
sbb
or
sbb
sbb
cmp
hlt
notb
ret
cmp
mov
or
inc
inc
push
mov
sbb
jo
pop
pop
icebp
sbb
movsl
notb
mul
outsb
lret
rcl
stos
mov
jno
inc
sbb
lock
cs
xor
adc
cmpsb
and
cld
and
push
or
pop
sarb
adc
adc
push
sbb
ljmp
inc
mov
fstps
mov
adc
xor
fdivrp
repnz
push
sbb
outsl
aaa
call
out
push
lods
xor
add
xchg
xor
popf
mov
mov
mov
fwait
jns
adc
mov
ja
out
and
sub
je
xchg
sbb
inc
xor
or
adc
push
xor
das
push
je
or
lret
xchg
scas
in
inc
test
cmp
movsb
imul
cmpsl
icebp
cmp
add
aaa
push
js
es
pushf
dec
adc
inc
jmp
cmovle
adc
fsubr
add
scas
mov
shrl
outsl
pop
cmpsb
outsl
scas
and
jecxz
cmpsl
adc
jo
mov
xlat
rol
lds
dec
add
call
jle
xchg
mov
lock
add
hlt
popa
mov
dec
insl
les
mov
and
inc
push
imull
cmp
or
inc
jecxz
std
inc
sub
decl
add
pop
loop
adc
pop
cli
lods
inc
mov
es
xchg
sub
adc
aaa
outsb
cld
adc
icebp
inc
push
in
outsl
xchg
sbb
pop
mov
ret
mov
push
insl
stos
bound
xchg
jp
mov
sbb
ret
inc
mov
test
jle
jg
mov
pop
pop
test
mov
mov
cmpsb
and
pop
mov
fcompl
jb
outsb
out
loopne
fcomi
das
lret
dec
loop
repz
leave
repnz
aad
nop
mov
inc
jge
lods
adc
push
mov
adc
jl
lcall
xchg
lock
cli
ss
scas
inc
mov
ds
lock
mov
loop
lods
mov
shr
pop
sub
sub
in
imul
hlt
jg
mov
jbe
mov
adc
mov
mov
ficoms
inc
cmpsb
lods
push
mov
xchg
lea
and
int
adc
adc
sub
lea
js
xor
mov
pop
cs
pushl
filds
inc
jne
rclb
call
push
lcall
inc
cli
cmp
push
or
outsb
sbb
inc
insl
es
cmc
and
cmp
cmpl
test
xor
cmp
sbb
fisubrl
into
cmpsl
stos
ret
repnz
shl
imulb
icebp
mov
cld
pop
test
cs
or
sbb
cmpsl
ja
push
xor
xor
push
cmp
cmp
incl
and
lods
add
pop
or
pop
fisttpl
test
mov
inc
adc
adc
push
dec
sbb
jge
inc
mov
mov
push
mov
add
ds
std
outsl
sar
cwtl
inc
xchg
jl
mov
test
clc
mov
jge
jecxz
or
loopne
and
js
hlt
popa
adc
out
mov
jg
lods
sub
cmp
ljmp
adc
pushf
xor
gs
mov
lea
inc
ss
and
sub
sbb
mov
adc
shl
in
fidivs
or
jecxz
test
pop
mov
out
xor
mov
out
test
fninit
xor
jno
leave
out
leave
lcall
pusha
cmp
icebp
gs
addr16
loope
lods
push
loopne
sti
fisubrl
clc
adc
ret
mov
mov
or
mov
scas
mov
xchg
pop
jl
xor
push
push
cli
rorl
mov
cld
add
fisubl
push
cltd
pushf
imul
icebp
pop
pop
test
leave
test
mov
mov
cmp
std
push
fs
out
pop
fldt
bound
sub
pop
push
sti
dec
sub
popa
dec
insl
cmp
outsl
js
testb
es
add
cvtdq2ps
aam
jecxz
nop
sti
faddp
dec
in
push
ficompl
loope
mov
inc
call
inc
rcr
test
xor
lahf
cltd
sti
adc
add
mov
jp
in
or
sub
imul
rorl
popf
jle
xor
xor
mov
adc
mov
and
push
mov
rcl
sbb
xchg
cltd
and
mov
andb
jns
imul
movsl
outsl
adc
or
mov
cmp
add
fsubr
and
cwtl
mov
int3
mov
loop
mov
loopne
insb
fucomp
inc
or
loopne
sbb
popa
js
sub
std
arpl
adc
sub
addr16
and
adcb
dec
and
mov
movsb
lock
xor
cld
adc
xchg
cmpsb
clc
subb
ja
sahf
lea
mov
xchg
lds
cmp
shl
push
mov
call
inc
xchg
sub
mov
or
ret
mov
xor
sub
pop
push
lock
mov
dec
clc
add
mov
pop
xchg
fs
xchg
jle
adc
pop
lcall
sbb
add
pop
arpl
lret
push
pop
cmp
jo
stos
mov
scas
xchg
mov
inc
rcr
push
mov
rcrb
or
lods
pusha
cmp
mov
mov
cmp
repz
add
mov
xor
or
hlt
xchg
rorl
mov
shll
pop
fisubl
inc
mov
inc
inc
inc
adc
add
pop
sub
sti
xchg
add
leave
cli
incl
cwtl
dec
je
std
out
xlat
jo
cmpsb
dec
push
xchg
lock
push
cmc
sub
adc
jmp
mov
jmp
frstpm(287
arpl
stos
cld
sub
cli
popf
sub
cmp
mov
rcll
rcrb
add
test
shlb
out
in
mov
inc
out
mov
rcrl
cmc
inc
mov
lea
hlt
sbb
in
mov
lea
and
inc
mov
jmp
sub
pusha
mov
mov
pop
fistl
push
pop
pop
test
xor
or
ljmp
mov
ret
cltd
sbb
dec
roll
mov
ljmp
hlt
jo
xchg
jno
push
ret
add
mov
push
outsl
jo
in
mov
mov
dec
mov
gs
mov
outsl
jne
dec
sbb
stc
mov
imul
lods
and
sub
dec
shl
cmp
push
mov
lcall
iret
scas
lea
sbb
xchg
hlt
sub
adc
xchg
mov
mov
adc
xchg
outsl
aam
mov
outsb
jle
and
push
add
mov
fldcw
adc
cmp
sub
test
add
pop
in
enter
fadd
loop
xchg
push
adc
ret
xchg
ja
jb
ss
sub
hlt
push
xor
push
mov
cmp
pop
jp
xlat
xor
and
mov
bound
pop
inc
or
sub
cmp
lods
push
inc
call
or
cltd
inc
out
das
mov
lock
mov
or
fs
inc
jmp
add
inc
jecxz
stos
mov
cmp
cli
xlat
fiaddl
or
fistpll
cmp
pop
ds
jle
dec
loop
push
mov
and
inc
sbbb
sbb
mov
bound
inc
xor
jno
das
cli
andb
js
push
addr16
add
sub
inc
fucomp
je
lods
or
aam
sub
cmp
out
ret
mov
clc
push
popa
mov
imull
or
aaa
fs
sbb
out
hlt
pusha
in
inc
hlt
xchg
ret
pop
aaa
iret
xchg
test
mov
mov
movsb
jle
jno
std
lods
push
xchg
jae
aad
mov
std
push
mov
sbbl
incl
push
aaa
inc
lock
imull
jb
adc
add
test
cmp
mov
ret
into
std
in
out
inc
sub
fs
mov
cld
filds
push
pop
jmp
mov
xor
and
inc
pop
pop
sbbb
inc
inc
loop
sub
push
dec
add
sub
je
js
pop
lea
arpl
sbb
rcl
adc
xchg
inc
clc
xchg
mov
and
mov
jae
mov
mov
xorb
pop
sub
sub
das
cmpsb
mov
pop
popa
ljmp
sub
mov
aaa
push
incl
sbb
push
loop
les
rcl
or
rorb
lods
push
andb
shrl
aaa
fld1
mov
lret
inc
dec
push
lods
leave
mov
and
and
and
jno
gs
int
mov
addb
adc
scas
mov
jg
jmp
or
shrl
inc
mov
sbb
adc
adc
or
ret
push
pop
addps
clc
mov
push
add
aam
xor
orl
cmp
cmpsb
jmp
je
mov
add
ret
pop
mov
dec
jle
jecxz
pop
dec
inc
int3
mov
and
xchg
lahf
inc
add
jnp
xchg
mov
mov
jl
fmuls
test
aad
ljmp
cmp
lcall
les
insl
inc
call
and
xlat
dec
mov
dec
clc
mov
das
sub
xchg
pop
pop
out
sbb
jnp
cld
add
mov
xchg
jg
loopne
dec
les
jb
pop
mov
or
outsl
cli
jb
repz
dec
es
adc
sub
sbb
fistpll
xor
stos
push
or
adc
adc
es
xchg
xor
loope
mov
addr16
and
rorb
xor
insl
sub
jbe
fucomi
add
xchg
push
mov
push
test
or
sbb
sbb
movsb
jae
insl
aad
call
fisttps
ss
out
mov
mov
enter
scas
add
push
mov
mov
or
add
fsubrl
fstl
or
outsl
or
cli
sbb
cmpsb
outsb
cld
jg
add
and
mov
fiadds
add
add
sbb
das
add
add
ljmp
or
cmc
jl
movsb
filds
int
dec
jl
xlat
out
push
hlt
ficoml
cmpsb
mov
cmp
pop
mov
jg
dec
cmp
test
mov
jno
lcall
into
push
pop
cmp
pop
and
cmpsl
loope
push
cli
jle
subb
addb
dec
sub
jns
ret
addl
or
cld
inc
and
or
jns
lea
push
je
lret
mov
jne
xor
jl
cli
and
daa
inc
pop
inc
ret
and
js
sbb
add
out
movsl
sub
lahf
xor
xor
add
sahf
cmp
mov
xchg
push
dec
jge
or
ljmp
jmp
mov
cmp
lds
sbbl
mov
push
xor
pop
pusha
mov
xor
sahf
dec
out
pop
jno
subb
push
in
fidivrl
out
rolb
sub
inc
sbb
les
jbe
mov
int
xor
rcl
movsl
mov
cmpsb
or
lock
addr16
aaa
into
push
or
outsl
pusha
test
push
ret
xchg
jns
jge
adc
lret
test
pusha
test
mov
aaa
jo
mov
adc
sbb
rcll
lds
mov
call
inc
in
and
jo
insb
add
jp
sbb
js
es
repz
stos
or
roll
mov
mov
mov
cltd
pop
pushf
bound
outsb
mov
cld
sbb
mov
js
xlat
and
push
add
mov
jbe
movsb
fisubl
neg
mov
into
ret
rcrb
test
loop
in
cmp
mov
jp
cmp
test
pop
lea
idivb
inc
inc
loopne
in
aam
je
idivb
push
mov
cs
mov
sbb
idivb
aad
or
mov
lahf
ljmp
inc
inc
add
mov
fldt
fists
sahf
dec
cwtl
addr16
hlt
out
cmp
in
icebp
pushl
dec
test
add
adc
xor
int
sbb
add
jl
mov
push
loop
bound
pop
loopne
outsl
adc
addb
mov
sub
int
insl
std
xor
xor
push
jp
sarl
mov
movsl
rorb
out
pop
inc
es
add
push
sub
ljmp
pop
sub
rorb
stos
mov
aad
into
stc
loope
push
imul
or
scas
xor
push
xchg
xor
jae
jl
outsl
filds
rcrb
xor
cwtl
ljmp
or
mov
lods
inc
ret
xlat
ja
loopne
fisttps
mov
xchg
inc
xor
mov
mov
inc
push
inc
push
rcll
loope
fidivrs
sbb
pop
push
jl
cmp
pusha
mov
fsubr
or
xchg
push
dec
shlb
filds
iretw
popf
cmp
outsl
pushl
ss
cmp
loopne
mov
cli
xchg
push
push
rcll
pop
jo
out
xor
call
xor
pop
jecxz
lock
bound
jmp
les
mov
lret
mov
mov
int
setne
std
sbb
pop
outsb
iret
nop
xorl
jg
test
mov
sub
push
dec
mov
mov
or
out
gs
jp
repnz
pop
popf
mov
ljmp
jg
or
and
push
cli
mov
sub
pop
sbbb
dec
frstor
aaa
mov
pusha
push
insl
aaa
ds
cwtl
push
sub
add
mov
pop
movsl
cmp
add
lret
push
cmpsl
dec
fiaddl
or
icebp
aaa
clc
xor
mov
sahf
jo
js
pop
test
mov
xchg
out
mov
aad
xor
add
out
mov
sti
out
aaa
loope
and
inc
pop
jp
ficompl
push
adc
cli
in
and
mov
pop
pop
and
push
or
inc
mov
add
inc
xchg
lock
xor
mov
or
stos
test
lret
pop
aas
jmp
push
std
mulb
sub
enter
enter
ja
outsl
cld
cwtl
std
add
fsubrs
sarb
cmpsb
add
int3
sbb
jb
sbb
mov
adc
aam
mov
in
call
dec
mov
mov
in
mov
outsb
sub
add
push
pop
pop
sub
push
mov
sub
jge
lea
or
pop
push
add
pop
ljmp
add
repz
adc
fadd
int3
fidivrl
jo
subl
scas
adc
fsub
or
inc
xchg
sub
hlt
icebp
mov
mov
js
out
mov
sarb
fs
repnz
pop
or
cmpb
mov
adc
into
scas
pop
or
lret
fildl
in
mov
cmp
sbb
mov
incl
push
fiadds
sub
pop
or
jo
dec
inc
inc
sti
cmc
pop
xchg
jg
xchg
push
dec
mov
cld
push
cli
aaa
push
mov
pushf
std
xchg
add
inc
imul
add
outsl
je
add
rcrl
dec
sub
sub
data16
test
mov
pop
mov
mov
out
rclb
aam
out
add
hlt
mov
pop
loop
mov
decb
pop
notl
cmpl
mov
adc
icebp
sbb
cli
imul
adc
mov
mov
imul
sub
jbe
je
pop
and
push
mov
push
pop
mov
mov
cmp
cli
xor
aad
imul
ret
jne
dec
inc
cwtl
ficoml
daa
lock
pop
mov
rcll
mov
adc
and
lock
mov
mov
push
lcall
pop
or
scas
rolb
jnp
pop
adc
push
testb
stos
push
ds
push
imul
push
stos
jge
add
rcrl
mov
mov
sbbl
loop
or
in
mov
cmc
sbb
mov
adc
imul
ret
cmc
imul
out
aam
mov
inc
scas
gs
fistpll
adc
xchg
mov
dec
inc
popa
test
rorl
call
ret
or
xor
adc
add
das
inc
cs
dec
movb
adc
cmp
sbb
push
cmp
jle
xchg
stc
out
inc
cmp
xor
in
mov
pop
clc
sub
dec
test
add
clc
or
popa
test
add
push
pop
or
add
push
pusha
sahf
sbb
sub
sbb
push
loope
mov
pop
mov
push
lcall
cmp
inc
rcrl
leave
stos
and
pop
fsts
pop
fcmovbe
fildl
pushf
out
clc
ljmp
js
adcl
cmp
push
jmp
into
sahf
inc
call
ljmp
pusha
mov
fwait
out
lds
inc
iret
pop
cli
add
jle
and
jle
jecxz
adc
adc
adc
mov
xor
mov
mov
cmpb
sub
test
inc
scas
sub
mov
movsb
ja
les
ja
pop
lcall
sbb
daa
adc
and
mov
push
sahf
adc
mov
add
push
data16
sbb
sbb
std
outsl
shlb
in
cld
pop
inc
sbb
and
in
mov
ret
lods
fldl
insl
inc
mov
pop
pop
mulb
or
inc
lods
pop
test
pop
into
ds
mov
mov
mov
fdivrs
dec
mov
clc
jp
mov
pop
outsb
scas
loop
mov
or
fisubl
adc
clc
xchg
push
lret
sub
jge
add
pop
dec
ret
xchg
mov
mov
lds
jo
lock
int
rolb
daa
push
fildl
hlt
push
pop
inc
hlt
cs
sbb
lods
and
mov
sbb
dec
xchg
adc
mov
stos
movsb
push
and
mov
mov
mov
and
sbb
xchg
pop
ret
cld
mov
dec
jo
mov
jbe
sub
xor
stc
inc
jp
sub
pop
sub
enter
cld
mov
test
leave
cs
jmp
lret
fwait
pop
push
push
addl
jne
sbb
test
imul
mov
or
pushw
mov
add
jl
jg
sbb
in
lret
mov
test
nop
jecxz
pop
dec
rorb
adc
push
addr16
mov
incb
mov
and
or
or
push
fisttps
mov
fdiv
inc
addl
and
add
sub
hlt
inc
insb
mov
subb
fwait
lret
mov
out
fdivs
adc
dec
inc
push
sub
or
push
loopne
mov
lahf
push
dec
or
pop
in
add
jle
in
jno
mov
add
inc
add
add
pop
xor
or
mov
sbb
outsl
pop
fimuls
xor
call
xchg
xchg
push
xchg
jo
icebp
test
and
fistps
add
push
pop
mov
cli
or
aas
enter
fwait
cmpl
xchg
stos
dec
sarb
test
or
push
sbb
add
add
pop
insb
mov
lods
inc
outsl
mov
fsub
call
dec
xor
mov
adc
movsl
ljmp
mov
xchg
clc
jbe
add
jge
dec
jo
push
movsl
movb
in
pushf
ljmp
adc
pop
aaa
dec
jg
lds
lods
inc
dec
ret
xchg
in
insl
lea
adc
and
sar
imull
cs
daa
sub
lea
xor
mov
les
test
add
push
into
xchg
ret
test
dec
sbb
xor
xor
out
xor
mov
aas
or
pop
fcmovbe
inc
test
adc
push
repz
xor
sub
inc
repnz
in
push
addl
xchg
ret
in
xchg
mov
or
int
xor
fcomps
les
fcoms
push
es
cmpsb
mov
pop
pop
adc
imul
aad
ljmp
outsb
add
dec
push
inc
pop
jp
add
mov
sub
sub
stos
pop
xchg
push
in
outsb
fistps
jecxz
xor
xor
mov
cli
adc
fdivs
outsb
cmpl
and
fisubrs
ja
insl
push
fwait
xchg
adc
adc
pushf
mov
ss
cwtl
sbb
dec
loope
in
pusha
inc
int3
jae
adc
add
call
push
dec
addr16
and
test
test
lock
pop
inc
orb
dec
stos
xor
aaa
push
push
loope
add
inc
xchg
ret
pop
lock
rclb
pop
xchg
adc
roll
push
push
mov
or
lock
adc
aam
pop
mov
mov
mov
pop
push
jo
gs
push
fdivr
add
lods
stos
incb
mov
push
sub
lcall
push
dec
je
das
gs
jl
sub
out
jnp
leave
je
add
jmp
int3
mov
push
mov
dec
shrb
xchg
popa
cmp
sub
movsb
xchg
int3
mov
mov
mov
pop
subb
lods
dec
xor
or
xchg
sti
int3
je
das
mov
test
clc
inc
gs
inc
jns
clc
outsl
fidivrl
jbe
mov
cmpsl
ret
mov
sub
and
fisubrs
and
notb
and
sbb
outsl
adc
pop
idiv
lods
adc
mov
fstpt
push
in
int3
out
ret
inc
jle
call
cli
addb
inc
out
data16
hlt
inc
test
pop
leave
mov
ljmp
inc
mov
jg
sub
sbb
add
sub
push
push
or
fwait
mov
loopne
inc
mov
or
dec
fstp
inc
add
mov
lock
sbb
inc
xchg
rcrb
sbb
jae
cmp
jns
das
insl
dec
inc
mov
mov
cmc
outsl
mov
and
mov
adc
inc
jge
shrl
mov
mov
sub
sahf
xchg
adc
sbb
stos
ror
and
cld
push
push
mov
sbb
sti
inc
and
jle
mov
adc
cmp
mov
xchg
scas
bound
or
push
addr16
rcr
jg
push
jmp
inc
push
popf
popa
or
inc
pop
rol
fistpll
lahf
dec
arpl
loopne
pop
mov
sub
adc
jne
aaa
mov
or
or
sbb
dec
test
imulb
push
ret
xchg
std
xchg
movsb
out
mov
push
xchg
mov
lret
pushf
add
mov
sbb
add
lea
mov
sub
cmp
and
mov
mov
roll
out
cld
add
filds
mov
mov
cmpsb
dec
test
loop
insb
xor
dec
and
stos
iret
xor
inc
mov
loopne
mov
mov
int3
in
subl
xchg
mov
pop
xchg
stos
xchg
leave
sti
subb
loopne
xlat
mov
xchg
sarb
push
loope
xchg
fucomip
mov
sar
mov
pusha
arpl
mov
mov
add
jecxz
mov
in
adc
cli
aaa
inc
xor
loop
pop
jns
into
nop
mov
sti
outsl
xor
negb
lock
and
stos
movsl
jle
mov
or
mov
lcall
cmpsb
push
and
loope
and
mov
and
push
in
jns
ret
inc
push
mov
std
inc
lods
cmp
subb
pusha
mov
push
enter
lods
or
dec
fidivrl
stos
es
jo
mov
jp
into
jge
jg
pop
enter
xor
stos
or
add
cltd
clc
outsl
sbb
sub
cld
cwtl
pushf
pop
pop
inc
push
mov
inc
loope
and
insl
jl
pop
aam
mov
sbb
sti
or
adc
lcall
or
mov
jb
stos
add
mov
cmp
les
in
inc
xor
test
adc
push
icebp
push
mov
fwait
push
inc
sbb
dec
aaa
clc
push
fbld
leave
bound
scas
jno
movsl
jle
test
sub
ljmp
ja
int
and
push
das
adc
lock
xchg
add
mov
push
into
push
cmp
sub
repz
jecxz
push
outsl
mov
jbe
adc
cmp
and
xchg
jecxz
lahf
add
lea
mov
shrb
pop
cld
dec
xchg
pop
fsubl
stos
and
add
sbb
insl
mov
negl
xchg
pop
int3
test
orl
fadds
mov
pop
fadds
je
adc
mov
rolb
loopne
dec
xor
xchg
push
mov
hlt
push
jno
and
jp
and
hlt
push
loope
mov
cmpl
imul
pop
pusha
cmp
ja
adc
fwait
nop
test
jns
lret
movlhps
inc
je
mov
cmc
repnz
mov
sbb
inc
aam
xor
sbb
popa
jbe
jbe
cmp
xchg
xor
and
push
bswap
icebp
dec
inc
js
jnp
mov
icebp
jns
loopne
or
xchg
repz
push
add
jns
and
cmc
lea
int3
jecxz
and
stos
push
loopne
xchg
xor
adcb
in
data16
fisttpll
mov
fdivl
cmpsl
xor
jg
xlat
mov
xor
ret
mov
ret
inc
dec
loope
sahf
negl
cld
incl
xor
push
iret
add
mov
lahf
das
mov
push
iret
pop
sti
inc
divl
fdivrs
or
push
ss
pop
push
mov
out
mov
push
add
int3
daa
and
jg
jmp
mov
sbb
sbb
mov
rolb
or
imul
sbb
inc
es
repz
mov
sub
shl
inc
xor
mov
mov
push
mov
ss
mov
cmp
std
test
cmc
iret
adc
sub
sbb
sub
cmp
pop
hlt
dec
sbb
cmp
imul
scas
stos
inc
or
xor
adc
out
rcrl
xor
cwtl
xchg
mov
lea
pop
mov
sub
add
call
ljmp
jmp
inc
xchg
mov
xor
out
pop
add
cli
repz
shrl
mov
push
or
loopne
xchg
clc
pushl
add
in
ret
dec
scas
je
int
sbbb
jb
jp
insl
adc
or
xor
cmpsb
dec
sub
out
jge
sbb
fistps
adc
shrb
push
adc
inc
or
push
imul
fimuls
cmp
jno
dec
mov
cmp
pop
scas
mov
mov
push
cmp
or
jbe
test
dec
jbe
push
and
test
mov
pop
fldl
mov
mov
jnp
mov
outsl
syscall
cmp
jae
inc
insl
push
loope
push
mov
call
cmp
mov
fsts
hlt
adcl
push
test
test
aaa
dec
aam
xchg
and
lretw
ror
pushl
mov
xchg
mov
mov
mov
push
pop
js
shll
das
push
fldl
jae
or
or
jbe
outsl
mov
and
incl
ffreep
inc
mov
push
push
scas
or
daa
das
mov
lcall
lock
jg
push
cli
xor
cltd
jns
dec
test
cmp
les
mov
xchg
movsl
jmp
bound
pop
aaa
cmp
pop
xchg
aas
stc
add
and
call
roll
xor
fstpt
in
add
ret
mov
jl
rorb
es
adc
sub
test
insb
dec
mov
in
js
rolb
and
lods
lss
adc
push
push
add
das
inc
scas
int3
mov
fucomp
pop
jne
pop
inc
cltd
pop
add
or
mov
xor
push
dec
daa
add
xchg
sub
ret
into
sbb
repz
cld
sbb
pop
jbe
fiaddl
pusha
mov
add
push
icebp
lcall
in
repz
jl
je
fistpll
js
xor
and
pop
adc
rcl
icebp
loopne
push
outsl
cld
pop
out
dec
test
pop
add
popa
pop
mov
fstpl
jle
adc
add
cmpl
fcmove
mov
inc
or
imul
sbb
adc
cmp
out
jne
push
test
repz
dec
fdivr
sub
test
add
rcll
bts
dec
adcl
cld
sbbb
nop
stos
int
pop
or
mov
nop
cmp
cmpsb
lds
jecxz
repnz
jmp
test
fmull
xor
mov
outsl
sbb
faddl
pop
ljmp
and
pop
or
es
cmp
jp
movsb
or
dec
aam
cltd
add
or
inc
popf
mov
xor
out
fisubrs
mov
cltd
add
push
call
icebp
mov
ds
movsl
sub
mov
or
loope
adc
inc
jb
int3
pop
test
xor
jb
repz
fnstsw
xchg
and
lods
inc
dec
jg
inc
cmc
cwtl
fsubl
call
pop
push
mov
mov
fsubp
lea
cmc
push
clc
push
test
push
lret
inc
leave
rclb
jecxz
mov
lret
pop
push
mov
add
mov
test
sbb
jno
jbe
mov
adc
dec
addr16
pop
pop
loopne
fs
sbb
adc
add
and
adc
add
mov
pop
aas
fwait
sbb
mov
sbb
xor
icebp
xchg
iret
dec
hlt
out
mov
push
inc
adc
div
cmp
push
ja
add
stos
fdivrs
push
lcall
mov
inc
mov
cmpsl
pop
js
shr
cmp
ret
push
mov
leave
outsb
lret
call
test
aaa
lret
inc
xchg
rcrb
jge
xchg
jge
mov
scas
ljmp
xchg
in
or
pop
lods
popa
inc
jmp
sub
add
xchg
or
xor
enter
andl
les
lea
cmp
pop
rcl
mov
jb
fcompl
push
in
xchg
aas
addr16
js
addr16
push
push
and
push
add
loop
jne
add
or
pop
addb
js
pop
in
add
push
mov
xor
sti
push
fs
aas
push
mov
dec
mov
and
adc
test
push
inc
and
push
test
sub
in
enter
dec
jnp
inc
hlt
addb
rclb
jne
adc
sbb
lods
cmc
dec
pop
xor
sub
push
or
in
ja
shr
push
test
in
mov
insl
sub
aad
sbb
or
mov
sbb
shlb
lahf
mov
mov
add
cmpl
mov
sub
decl
or
mov
pop
xor
cmpsb
punpcklwd
arpl
inc
mov
add
sub
lock
xchg
jmp
mov
xor
jno
push
mov
adc
add
fisttpl
mov
popa
scas
jge
add
add
clc
inc
shll
dec
push
into
and
jg
subl
inc
inc
mov
pop
mov
xchg
sbbl
jle
and
pop
out
xchg
in
mov
stos
inc
fcomps
enter
aad
mov
outsl
sub
jae
aas
mov
jmp
mov
lcall
js
mov
add
add
push
add
lock
lock
xor
mov
das
sbb
dec
ja
sub
cli
dec
out
enter
clc
jg
ret
cmp
mov
dec
outsb
add
or
xchg
cmc
imul
mov
mov
jns
dec
gs
inc
aaa
dec
inc
xlat
mov
jo
mov
cmc
insb
jne
xchg
sub
inc
in
dec
dec
sbb
sbb
cmc
mov
fbstp
sbbl
mov
inc
add
icebp
lods
add
sbb
cmp
adc
sbb
out
xor
mov
test
ret
movsl
fsin
jp
or
iret
insb
out
stos
or
mov
adc
add
sub
mov
std
jne
sbb
das
lock
aas
in
cmp
or
inc
adc
fildll
sub
outsl
push
or
int
out
test
xchg
sar
inc
or
push
jl
jp
ret
sub
cmp
out
leave
sbb
cli
adc
int
movsl
test
pop
call
lods
jg
and
lret
rcrb
cs
mov
mov
data16
mov
lods
mov
xchg
mov
push
mov
dec
clc
ja,pn
sbb
stos
cmp
fsubr
out
cli
movsl
pop
mov
dec
aas
shrl
jecxz
mov
and
ret
mov
std
shrb
je
dec
test
call
push
pop
sbb
push
lods
adc
dec
daa
mov
xor
and
add
xor
pusha
pop
jge
xor
int
dec
push
push
int
xchg
test
sub
in
lcall
insb
pop
xchg
inc
test
push
xchg
xchg
mov
jmp
adcb
into
mov
dec
sub
mov
add
shll
fisttpll
pusha
adc
mov
add
incl
inc
mov
mov
add
setne
mov
mov
inc
push
cli
fs
adc
lock
xlat
sub
sbb
xor
ret
adc
adcb
mov
xlat
push
xor
pop
out
fidivrl
jnp
cmpsb
mov
adcb
ret
clc
out
or
lea
add
in
test
mov
into
dec
or
shr
enter
and
cmp
add
sbb
lret
and
sbb
dec
mov
orb
scas
jnp
stc
call
mov
inc
cmc
fcmovnbe
cli
stos
cli
outsl
sub
pop
or
add
nop
mov
or
pop
xchg
sahf
cmp
jg
fdivrp
leave
mov
xor
mov
in
or
sti
add
dec
sbbb
ret
mov
ss
xlat
push
cmp
jle
sub
hlt
bound
xchg
mov
inc
lahf
imulb
inc
pushf
jp
test
stos
push
mov
mov
dec
jb
mov
push
addr16
or
outsl
fisttpl
ret
jp
add
inc
dec
xor
xchg
out
or
cld
out
xor
adc
cmpsb
ds
inc
cld
testb
add
jge
and
mov
cli
test
negl
mov
push
mov
lods
push
push
dec
clc
inc
dec
adcb
mov
inc
arpl
sbb
sub
xchg
jg
pop
adc
lret
mov
scas
pop
pop
sbb
shr
rcr
mov
rcll
lret
out
sub
inc
lret
sbb
or
inc
out
fwait
lcall
test
call
nop
adc
gs
cltd
clc
mov
clc
mov
je
jp
xchg
dec
push
inc
lcall
call
cli
adc
lcall
enter
xor
push
cmc
test
mov
in
pop
in
adc
popf
in
push
push
push
loop
sub
mov
lahf
lods
or
fiadds
outsl
rol
shr
mov
dec
or
mov
addb
cs
andl
jbe
mov
test
ret
aam
mov
imul
inc
pop
stos
ljmp
mov
ja
sti
mov
sar
out
mov
inc
or
jo
dec
stos
xchg
popa
and
call
or
mov
sbb
daa
xor
pop
fisttps
mov
pop
pop
or
xor
or
sahf
add
shrl
lidtl
mov
sub
sub
insb
adc
or
jne
pop
adcb
dec
repnz
sbbl
loop
push
xor
inc
pop
mov
test
xorb
add
test
and
push
dec
enter
fistps
loope
push
lcall
dec
test
and
sbb
lock
add
pop
sub
pop
sarl
jg
inc
mov
xchg
inc
cmc
adc
fwait
xor
in
push
pop
adc
mul
je
push
cld
mov
mov
add
in
xchg
pop
mov
pusha
fs
insl
adc
push
mov
hlt
andb
lods
mov
adc
sub
sub
pop
push
imull
mov
xchg
push
sbb
mov
cld
hlt
outsl
or
mov
js
test
mov
imul
or
lea
call
les
mov
sub
scas
xchg
sbb
mov
ljmp
and
rorl
std
mov
lea
subb
mov
lcall
test
roll
add
jns
aad
mov
das
aam
mov
dec
test
out
pop
add
push
std
jle
mov
scas
inc
pop
and
dec
pop
dec
js
test
repnz
out
cwtl
push
cmp
pop
sbbb
jbe
jb
and
jb
shrl
fdivl
aas
lea
push
xor
call
add
sbb
inc
lcall
ds
movsl
test
pop
sub
inc
jae
clc
outsl
jno
daa
pop
aaa
cmpl
scas
xchg
outsb
insl
outsl
mov
mov
aam
scas
xlat
push
mov
mov
sub
cmp
call
dec
dec
ret
push
add
aas
inc
cs
adc
fisubl
mov
shlb
fwait
loop
jae
fnstcw
subl
pop
or
fistl
xchg
push
test
pop
mov
jb
test
pop
outsl
lock
jg
lret
jp
push
xchg
sub
jnp
aam
mov
jge
add
std
push
or
xchg
gs
xchg
cmpsb
or
jne
lock
js
inc
or
mov
lcall
sub
inc
jbe
das
lock
pop
xor
and
and
stos
leave
mov
jecxz
mov
pop
add
pop
mov
test
ja
lret
add
lds
call
sub
push
pusha
cs
xor
and
or
movsl
and
scas
sbb
fildl
sub
je
scas
dec
sbb
xchg
loope
rclb
movsl
insl
cwtl
jl
jae
cli
pop
lea
iret
rcrl
ss
mov
pusha
or
pusha
test
adcl
mov
add
or
jg
dec
mov
leave
rcrl
add
mov
outsl
mov
jp
dec
notb
xor
or
adc
lods
add
lds
sub
jnp
decl
rorb
sub
dec
pop
clc
push
mov
inc
int3
in
pop
pop
scas
mov
xor
mov
js
or
pop
insb
rcl
adc
mov
outsl
movsl
insl
imul
leave
es
lret
out
xchg
pop
mov
xchg
arpl
pusha
push
incl
push
adcl
lock
dec
je
add
pop
jno
test
adc
test
dec
sub
imul
and
addb
sbbb
rorl
pop
decl
mov
pop
mov
rcrl
clc
rcrl
jl
inc
add
pop
dec
xor
popa
mov
adc
add
adc
xor
push
add
inc
xor
mov
or
push
cmp
lret
push
int3
pop
cltd
clc
sarb
fstpt
loopne
cmp
inc
cmp
ficoms
ret
inc
adc
inc
pop
sti
outsl
mov
scas
add
lods
jmp
add
pop
imul
mov
sbbb
nop
push
jge
pop
jae
add
jmp
aad
inc
sbb
shll
push
xorb
jbe
test
or
pushf
je
sbb
ds
cmp
inc
decl
rcll
pop
mov
xlat
es
test
in
lods
mov
mov
jecxz
clc
adc
jbe
movsl
mov
xchg
nop
aam
nop
loope
dec
fists
insl
in
aad
adcb
jle
xor
adc
mov
push
popf
adc
and
sub
jecxz
mov
outsb
bound
outsb
inc
jno
xchg
xor
fbstp
mull
fimull
xor
add
xchg
imul
daa
fildll
cmpsl
mov
cmpsl
xor
and
mov
rorl
popa
sub
mov
jbe
cmc
and
mov
sub
pop
and
adc
insb
pop
lock
inc
nop
je
push
push
stc
pop
mov
mov
mov
cltd
dec
lods
outsb
cmc
in
imul
push
int
xor
clc
in
in
or
lock
pop
pusha
movsb
arpl
mov
mov
or
es
xchg
pop
sub
std
dec
adc
mov
mov
add
jnp
outsl
into
rcll
jg
add
jl
xchg
out
pop
lcall
call
psrlw
jp
fidivs
pop
stos
enter
pop
ss
add
adc
js
nop
cmpsb
aad
lret
jb
xlat
mov
out
dec
stos
pop
add
ljmp
int
and
rorb
adc
push
push
ds
rol
aad
cs
shl
lods
mov
push
loopne
arpl
mov
sbb
js
and
pushl
in
pushf
dec
pop
or
lret
adc
and
das
fwait
or
movsl
lret
xchg
lods
and
push
outsl
jno
jg
cmp
movsb
push
push
sub
push
or
jmp
shlb
test
lods
xchg
cmp
sub
test
je
cmp
rcl
sub
lcall
outsl
negl
sbbl
dec
adc
add
mov
mov
cli
mov
xchg
push
sti
add
adc
in
sbb
pop
fisubl
add
cmc
mov
add
pop
pop
fistps
ljmp
jae
xchg
jb
rorl
mov
inc
mov
mov
lahf
jge
clc
cmpl
and
xor
cmp
push
sahf
inc
inc
movsl
jmp
cmpsb
fcmovne
add
xchg
sub
mov
mov
cmpsb
inc
add
ret
call
roll
mov
sub
test
add
ljmp
dec
cmp
xchg
dec
push
mov
sub
sub
mov
sub
sbb
in
push
aad
push
insl
or
adc
ffreep
xor
dec
outsb
mov
inc
inc
add
adc
outsb
pop
pop
adcl
fisttpl
aad
aaa
stos
movsb
filds
mov
sub
cmpsl
push
sbb
cltd
mov
pop
xor
popa
mov
call
mov
outsl
add
das
mov
sbb
hlt
les
nop
aas
movsb
pop
rorl
aaa
clc
test
dec
adc
or
xchg
stos
inc
pop
cli
pop
jecxz
sbbl
dec
das
in
mov
cmp
lock
outsb
inc
and
fisubs
inc
std
or
adc
loopne
es
aad
lea
sub
mov
mov
or
out
lret
push
dec
movsl
pop
adc
mov
cmp
aam
dec
lahf
or
mov
inc
mov
iret
and
ljmp
pop
pushf
mov
lcall
test
inc
lock
addr16
jg
mov
cmpb
dec
xor
aas
dec
faddl
jecxz
xlat
sar
push
pop
fcmovnbe
inc
and
xchg
push
xchg
sub
push
rol
and
sbb
jge
push
push
incb
jns
loop
sbb
mov
enter
push
pop
call
or
mov
jb
and
int
xor
mov
push
inc
shll
inc
test
cltd
push
and
mov
fistpll
loopne
jge
mov
scas
sbb
push
imul
les
test
inc
insl
popf
jb
int
test
mov
xchg
lods
push
sub
mov
and
sbbb
mov
mov
mov
jae
lods
add
add
jl
xchg
mov
and
cmp
negb
pop
push
cs
test
and
mov
rclb
outsl
repnz
sbb
scas
mov
push
hlt
jmp
push
fildl
xchg
inc
dec
loopne
jl
out
loopne
in
or
shr
mov
pop
and
push
popa
sbb
aaa
andb
xor
out
loopne
mov
dec
ja
js
xlat
mov
outsl
pop
fyl2x
cmpsl
add
jno
add
fidivrl
data16
test
push
je
push
dec
das
cmpb
sti
pop
insb
adc
add
jge
dec
ljmp
lret
inc
push
aaa
pop
xor
leave
out
push
push
jl
or
sub
popf
xorl
sbb
ljmp
das
shll
mov
insb
or
jnp
jae
and
mov
sbb
ret
filds
xchg
mov
lea
loop
jae
in
xchg
mov
and
sub
jle
ficoms
pop
ss
sub
mov
add
ret
push
enter
jl
dec
popf
cwtl
adc
iret
sbb
xor
mov
push
adc
push
push
or
push
sbb
mov
xor
fildll
xor
shr
insb
repnz
push
lret
lods
inc
or
mov
loopne
aaa
xchg
cmp
mov
pop
icebp
fldt
xchg
inc
fstpt
dec
pop
sbbl
or
lahf
scas
ret
icebp
fwait
stos
loop
imul
inc
enter
aam
push
mov
imul
movsl
shlb
sbb
les
mov
scas
sbb
push
pop
or
sti
jle
pop
inc
add
imull
lahf
mov
push
xor
pop
mov
loop
fistps
sarb
adc
add
adcb
fwait
inc
cld
add
inc
xor
push
or
ds
scas
mov
sub
stc
mov
test
pop
sub
call
adc
insl
call
xor
adc
sub
add
sbb
imul
insb
sub
mov
sbb
add
mov
dec
das
xchg
test
ss
pop
jo
sub
sahf
mov
adc
mov
out
nop
push
push
insl
mov
jmp
adc
mov
pop
scas
insb
stos
fnstenv
popa
insb
fstp
sub
push
lods
add
adc
shrl
stos
das
ret
jae
sub
loop
cmp
or
movsl
or
mov
pop
cmp
push
pop
add
out
inc
mov
mov
and
addr16
lock
or
dec
push
movsb
mov
data16
adc
add
sub
js
je
testl
xchg
mov
sbb
aaa
daa
and
xchg
insl
add
aaa
sbb
pop
sahf
mov
jmp
lret
jmp
rcl
add
fdivl
aaa
push
or
push
push
insb
imul
ret
outsb
loopne
movsl
das
and
enter
sbb
pop
sbb
sti
ljmp
gs
mov
or
mov
loope
sbb
adc
dec
jne
sbb
insb
in
and
jne
std
mov
popl
std
cmp
or
or
outsl
jge
add
jns
scas
mov
les
jg
jo
lea
xorb
vcomisd
fcoml
jbe
add
mov
sti
fisttpl
dec
inc
or
addr16
pop
add
push
scas
cmpb
lds
cltd
and
inc
xchg
jo
jbe
mov
pop
and
pop
mov
icebp
rorb
aas
idivl
testl
loope
xchg
out
inc
cld
xchg
mov
mov
ja
mov
aaa
mov
inc
jbe
sbb
das
adc
push
test
jmp
xchg
mov
mov
pusha
mov
fsubs
leave
std
push
xlat
and
mov
push
in
cmc
jbe
jno
xorl
inc
pop
adc
lock
or
outsl
jg
add
stos
cmp
rorl
pop
adc
sbb
mov
jl
test
and
pop
ds
and
notb
jl
and
inc
iret
push
lea
jp
rolb
push
insl
lods
dec
sbb
add
ret
mov
xchg
add
add
imul
push
adc
inc
adc
ret
mov
clc
push
inc
negb
movsb
lret
or
inc
cld
inc
jmp
pop
xorb
outsl
and
push
jg
mov
mov
xchg
mov
jnp
lock
add
inc
data16
sub
subb
outsl
in
mov
or
push
fcmovbe
filds
xchg
andl
or
sub
shl
xchg
jp
insb
call
ret
add
clc
sub
push
andb
inc
xor
xor
movsb
sbb
mov
push
loop
cs
xacquire
outsl
push
sbb
or
add
les
lods
jbe
mov
and
test
imul
pop
inc
or
hlt
mov
mov
jecxz
sahf
mov
mov
mov
sbb
inc
or
pusha
rcr
lods
cwtl
pop
pop
jge
test
dec
repnz
out
cmp
insb
or
inc
inc
push
pusha
push
dec
in
sbb
imul
rcrb
insb
mov
push
roll
mov
inc
dec
outsl
mov
push
and
into
fcmovu
dec
aam
xor
xor
sub
pop
mov
in
inc
pop
xor
les
dec
in
mov
add
nop
mov
lea
cs
and
aad
inc
arpl
and
xor
dec
shl
movsb
das
inc
lea
add
into
sub
sbb
lea
mov
xor
popa
add
inc
and
ljmp
lods
fdivrp
xor
sub
cmp
or
loopne
iret
insl
dec
fs
mov
das
cld
mov
gs
adc
dec
out
loop,pt
pop
mov
adc
and
flds
cmp
lret
clc
or
jecxz
dec
loop
xchg
mov
test
jmp
and
jg
inc
mov
mov
xor
or
cmpb
fcoms
pop
mov
or
pop
xchg
sub
mov
mov
and
inc
int
xor
repz
dec
pop
cs
cmpl
push
int
cmpxchg
inc
jo
mov
shl
call
pop
or
cmp
xor
sbb
adc
inc
mov
mov
adc
les
fldl
jg
fbstp
pop
push
sbb
push
mov
push
dec
mov
push
cwtl
test
and
ss
and
imul
jbe
add
pop
ret
scas
inc
push
xchg
mov
add
mov
ljmp
test
cmpsb
and
cld
test
addr16
call
addr16
mov
ds
xorl
repnz
mov
mov
stc
mov
add
cld
cmp
push
and
outsl
xor
xchg
mov
je
in
or
cmp
das
pop
loop
adc
sbbb
sub
in
push
stos
outsb
push
sbb
and
stc
fs
cmp
pushf
or
insb
sbb
loop
or
js
add
pop
mov
sub
jo
xchg
adc
and
stos
clc
inc
jge
iret
cmovb
rcrl
xor
gs
test
inc
inc
ds
sbb
mov
cmp
in
add
mov
adcb
mov
xchg
ss
pop
call
dec
jbe
mov
das
in
mov
xor
add
push
daa
imul
add
aaa
xor
push
je
scas
jle
cmp
nop
notl
scas
mov
int
add
pushl
orb
push
pop
push
add
jg
mov
pop
mov
testl
je
iret
mull
clc
or
loopne
outsb
fmull
add
cli
jp
inc
mov
adc
add
mov
xchg
js
test
adc
nop
mov
lret
in
insl
out
jnp
lods
not
mov
pushf
mov
rcrb
inc
push
push
adc
add
jg
aas
mov
push
subl
inc
jmp
out
mov
adc
mov
jns
adc
gs
cmp
and
movsl
sub
lds
test
addl
mov
shrl
xchg
lods
subb
or
xor
mov
leave
inc
adcb
adc
out
wrmsr
xchg
mov
inc
addb
xlat
aas
lock
inc
test
xor
xchg
and
les
inc
xor
cwtl
add
pop
out
test
inc
inc
je
pop
or
rcl
mov
adcb
jnp
mov
sbb
inc
inc
cmp
clc
das
stc
pop
cltd
xor
jmp
lcall
in
repnz
pushf
xchg
dec
add
adc
pusha
push
inc
xchg
pop
add
pop
rcll
jnp
test
cmp
int3
and
add
fnstsw
and
jnp
cmp
dec
lds
aaa
pop
add
mov
jb
mov
cld
les
inc
add
add
push
jne
sub
push
lock
jo
sub
inc
mov
and
push
jg
clc
jno
mov
in
fldt
mov
cli
cmpsl
sub
cld
repnz
mov
sub
inc
push
das
leave
loope
call
inc
cmc
inc
dec
movb
cli
mov
add
sbb
je
mov
std
fldl
mov
cmpsl
mov
add
addb
dec
andl
es
sbbb
sbb
jl
movsl
and
hlt
jmp
andb
mov
mov
push
push
nop
xchg
ret
lods
jle
rolb
movsl
mov
mov
stc
push
and
pop
inc
fdivl
sub
push
arpl
jae
sbbb
dec
pop
cltd
push
jl
mov
cld
jg
std
pushf
push
stos
and
and
mov
mov
push
pop
xchg
fldt
xlat
mov
jp
imul
repz
dec
das
sub
pop
inc
inc
les
inc
in
lcall
sub
xor
jp
push
popa
int
mov
mov
repnz
call
push
push
sbb
dec
loopne
in
jno
adc
add
and
inc
add
pop
push
inc
xor
xor
xor
xor
inc
add
shrb
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
adc
or
add
dec
gs
jo
mov
jb
jns
outsl
popa
fs
imul
or
ljmp
popa
outsb
fs
gs
js
gs
imul
gs
dec
outsb
lods
std
fiadds
insb
outsl
arpl
arpl
insl
adc
arpl
xchg
inc
push
dec
sub
push
inc
dec
pop
mov
inc
jb
jb
gs
gs
fidivl
pop
inc
ds
dec
sbb
imul
daa
inc
fs
cmovae
pop
sti
outsb
cmp
insb
mov
insl
jo
push
cmp
jnp
add
jae
dec
mov
enter
dec
outsl
fs
sbb
popa
mov
outsl
pop
ret
imul
gs
or
pop
jle
pop
xchg
arpl
sbb
jb
jne
insb
cmpb
ljmp
notl
insl
insl
test
ret
xchg
rcl
or
insb
and
outsl
imul
jo
outsw
push
fldl2e
mov
push
ret
cs
inc
push
pop
fildl
jae
and
push
jne
jns
xor
push
jb
xor
out
aam
inc
inc
gs
loope
adc
popa
sub
adcb
and
dec
cwtl
mov
push
push
sbb
cmpsb
dec
ss
mov
ss
adc
or
mov
out
inc
jns
push
imul
or
mov
xchg
add
and
dec
outsb
sbb
pop
pop
fsubrs
dec
and
pop
xchg
xor
sub
pop
or
inc
sbb
add
mov
jns
jbe
xchg
or
push
popa
xor
inc
jo
fistl
cmovg
cmp
and
xchg
lods
mov
ja
add
lods
adc
sub
imul
mov
lea
jp
push
mov
cmpsb
pop
movsl
ret
inc
lcall
push
inc
jbe
cmp
in
fidivl
cmp
lret
xchg
shlb
inc
xchg
xchg
xor
xchg
mov
add
cmp
addb
xchg
jnp
jecxz
add
outsl
dec
cmp
jmp
out
sub
or
push
dec
cmp
fcomps
test
or
sbb
insl
in
jo
movb
clc
inc
arpl
idivl
adc
xchg
pop
pop
inc
jmp
inc
mov
fs
inc
xlat
inc
gs
loopne
add
pop
push
mov
mov
inc
popa
arpl
push
outsl
insb
or
dec
sub
xchg
xor
dec
inc
inc
fsubrs
pop
sbb
test
popf
out
xor
push
sub
and
imul
jb
cs
insb
adc
aaa
sti
and
test
adc
and
lock
push
std
movsb
jecxz
test
push
push
add
jne
cmp
push
xor
jno
fsubrl
addr16
adc
adc
fxch
cmp
dec
sbb
mov
test
push
or
and
inc
int
ret
push
mov
push
or
push
lea
mov
inc
pop
lods
dec
push
or
scas
dec
sbb
push
nop
push
mov
ret
pop
scas
sbb
ror
dec
pop
pop
enter
mov
xchg
mov
push
add
add
mov
sub
adc
jne
int3
add
inc
nop
add
mov
inc
or
pop
mov
inc
add
inc
mov
lods
sub
add
mov
mov
xchg
inc
hlt
inc
lods
les
fidivl
rorl
adc
jae
arpl
loope
xor
mov
push
sahf
daa
mov
add
jae
and
mov
sub
inc
mov
fcomps
cwtl
sub
test
dec
outsl
je
jns
mov
clc
dec
arpl
push
mov
int
mov
or
popa
sub
add
test
jb
jbe
mov
mov
lods
inc
bound
lret
stos
push
push
divb
or
or
ret
test
sub
icebp
fimull
movsb
and
sbb
lcall
ss
lds
inc
and
dec
or
xchg
mov
js
dec
mov
das
fiaddl
pop
fadds
mov
xchg
push
shrl
arpl
pop
xor
ret
inc
lods
mov
mov
xchg
mov
lods
movsb
lahf
pop
test
sbb
xor
clc
jnp
fadd
xchg
push
fnstenv
loop
and
sub
movb
mov
sub
insl
xor
jne
dec
outsl
jbe
push
fs
ret
cwtl
pop
dec
mov
test
push
insl
cmpsl
sbb
jle
inc
mov
bound
inc
sbb
es
subl
mov
inc
insb
addr16
mull
jmp
push
gs
fcomps
data16
push
sbbl
insl
shrl
outsl
addr16
outsl
js
test
push
gs
mov
jae
dec
inc
pusha
and
adc
pop
shrl
add
pop
push
push
rcr
fisubrs
mov
insl
or
jae
push
or
xor
dec
pop
es
push
fcomps
fdivrl
inc
sub
ret
js
jns
pop
dec
mov
cmpsl
arpl
sub
lcall
ficoml
cmp
mov
jnp
inc
jle
clc
xor
mov
test
inc
loopne
leave
test
and
inc
cmc
insb
outsb
stos
push
or
add
into
lret
inc
fadds
xchg
inc
ret
jnp
dec
or
push
push
mov
nop
sti
push
outsb
outsb
jae
adc
sbb
jae
popa
je
sbb
lods
imul
rorl
add
daa
jp
inc
rorb
shll
sbb
inc
sub
inc
mov
fs
xchg
lea
roll
lret
push
jae
call
fsubs
push
negb
cmp
push
jnp
test
gs
sbb
mov
and
dec
adc
and
push
jne
int
xor
jbe
sbb
add
jne
jbe
add
mov
adc
ret
inc
xchg
les
cmp
arpl
inc
enter
inc
gs
mov
cmpsb
test
push
inc
insb
pop
sbb
insb
outsb
xchg
jp
sub
sub
add
aas
jae
dec
add
pop
cld
jno
add
add
add
add
or
mov
add
fistps
or
inc
or
pop
add
push
add
jbe
push
jnp
add
push
xor
pop
fistpl
push
push
add
and
mov
cmp
negl
push
pop
jl
jecxz
js
sbb
mov
cs
ja
pop
test
sti
in
movsb
daa
testl
jb,pn
xor
inc
pop
mov
sub
mov
daa
jae
out
cmpsb
imul
mov
filds
lods
pop
leave
cmp
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
push
add
add
add
adcb
add
push
add
add
add
add
add
add
add
add
add
sbb
add
add
call
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
rolb
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
sub
jae
sbb
inc
add
add
sbb
aas
add
add
add
add
add
add
add
fadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
aaa
add
add
inc
add
add
add
sbb
add
inc
add
insl
add
add
je
jae
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
inc
add
add
dec
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
dec
add
outsb
add
add
insl
add
outsb
add
add
outsl
add
jae
outsl
add
add
add
add
sbb
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
aaa
add
add
add
add
add
aaa
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
cmp
data16
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
mov
pop
add
aam
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addr16
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
jb
addr16
imul
push
gs
arpl
ja
rcrl
or
stos
inc
ss
jbe
mov
in
insb
sbb
out
fstpl
mov
sub
cltd
dec
or
lods
inc
aad
xor
mov
cmp
cmpsb
dec
sub
or
movsl
xchg
lock
push
insb
xchg
int3
inc
cmpl
mov
mov
mov
test
sub
test
add
mov
clc
inc
mov
dec
jo
adc
cmpsl
lret
pop
mov
cwtl
shll
sbb
xor
es
dec
mov
loope
sbb
xlat
das
sub
ficoms
rorl
repz
cmp
jecxz
pop
stos
and
loope
imul
sbb
arpl
inc
sbb
enter
lahf
add
pop
jb
mov
idivl
xchg
out
fnsave
adc
movsl
pushf
cli
inc
xlat
xchg
inc
shl
jae
jle
mov
in
jb
dec
push
cltd
dec
sti
mov
and
add
ret
into
jg
jno
aas
jnp
and
mov
pop
fwait
jg
fcomip
out
lods
pop
movsb
ljmp
jmp
and
pop
insb
lods
or
push
daa
or
add
jne
mov
loop,pt
sahf
mov
mov
sahf
mov
bound
push
enter
and
lcall
sub
cmp
jmp
nop
add
pop
nop
mov
test
cmpsl
into
pop
fistl
gs
pop
shlb
mov
fisubrl
test
mov
int3
adc
jmp
sub
negl
mov
jb
repnz
push
mov
leave
push
testb
add
repz
mov
repz
loop
xor
daa
