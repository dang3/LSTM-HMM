push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
add
add
mov
lea
push
pushl
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
lea
push
subl
lea
push
subl
lea
push
jmp
jmp
call
movl
add
lea
popl
mov
mov
mov
mov
xor
push
pop
xor
mov
lea
dec
lea
mov
lea
popl
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
jmp
ret
mov
push
call
push
pop
sub
cmp
jb
add
cmpb
je
add
cmpb
je
add
add
mov
cmp
ja
mov
sub
jne
push
pop
jae
mov
dec
loop
ret
fldl
pushf
and
add
and
add
and
add
add
fisubl
add
movsb
and
add
and
add
add
into
and
add
and
add
and
add
and
add
add
mov
add
mov
add
sub
add
sbb
add
push
and
add
add
add
and
add
add
add
sbb
add
add
add
sbb
add
call
and
add
add
and
add
add
mov
add
push
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
pop
and
add
add
ds
add
add
add
dec
and
add
and
add
add
fisubl
add
movsb
and
add
and
add
add
into
and
add
and
add
and
add
and
add
add
mov
add
mov
add
sub
add
sbb
add
push
and
add
add
add
and
add
add
add
sbb
add
add
add
sbb
add
call
and
add
add
and
add
add
mov
add
push
and
add
and
add
and
add
add
add
inc
jbe
outsb
je
add
inc
outsl
insl
insl
popa
outsb
fs
imul
inc
outsl
jo
inc
imul
gs
jne
jb
outsb
je
imul
jns
add
dec
add
insb
outsb
push
add
xlat
add
je
imul
bound
gs
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
insb
jae
jb
jo
inc
add
data16
je
je
dec
popa
outsb
fs
add
rolb
dec
gs
jo
gs
jb
jns
dec
add
je
jb
arpl
jae
gs
jo
add
popa
je
push
imul
dec
gs
jo
jb
popa
je
add
add
add
mov
jo
outsb
fs
push
add
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
gs
outsl
outsb
jae
insb
gs
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
jecxz
inc
imul
arpl
insl
gs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
dec
inc
dec
xor
cs
insb
add
push
add
arpl
imul
outsb
fs
jb
arpl
add
add
je
jne
je
insl
push
gs
dec
jne
dec
popa
outsb
fs
gs
js
lldt
arpl
outsl
insl
bound
outsl
js
outsb
fs
jb
arpl
or
push
push
outsb
fs
jb
arpl
dec
push
inc
push
inc
inc
dec
push
cs
insb
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
inc
push
add
addr16
imul
mov
push
push
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
push
dec
inc
gs
imul
push
jo
arpl
add
add
addr16
arpl
jo
inc
imul
dec
inc
jb
add
sbb
insb
imul
outsl
outsb
add
add
push
outsb
jb
imul
jb
gs
lods
add
gs
insb
inc
bound
je
add
add
addr16
jne
jb
inc
imul
inc
js
jb
arpl
outsl
outsb
inc
add
push
dec
inc
dec
dec
xor
cs
insb
insl
jae
je
imul
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
sbbb
add
js
add
add
add
add
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
lock
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
xor
add
add
add
add
add
add
add
data16
adc
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
movsl
pop
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jl
lods
stos
lods
add
cmpsl
push
mov
mov
mov
ret
ret
stos
lret
leave
lret
int
rcl
in
rcl
shl
rcl
iret
hlt
int3
int3
int
mov
out
mov
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
rcl
cld
fcom
fdivr
xlat
fcom
xlat
xlat
aam
rcl
iret
dec
int
aam
aad
rcl
sar
vfmsub231sd
mov
iret
movsb
movsb
movsb
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
scas
scas
sbb
mov
jnp
mov
sar
vpaddd
leave
lret
call
ror
aam
aam
fcomp
call
xlat
call
aam
dec
into
into
dec
into
int
aad
dec
int3
int
rol
mov
mov
scas
std
cmpsb
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
leave
dec
int
call
rcl
call
xlat
fdivr
fcom
call
aam
dec
int
dec
lret
int
into
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
imul
push
imul
pop
fs
cmp
sbb
sub
sbb
xor
cmp
cmp
cmp
and
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
leave
enter
sar
aad
aad
aad
call
rcl
dec
leave
inc
ret
mov
mov
ljmp
movsl
movsb
sahf
sahf
popf
xchg
cwtl
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jle
jnp
jg
jle
jo
jo
bound
mov
cmp
inc
inc
mov
outsb
outsb
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
leave
dec
enter
ret
ret
mov
mov
ljmp
mov
cltd
call
xchg
xchg
cwtl
xchg
fwait
lcall
aas
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
pusha
nop
mov
incb
jp
jnp
jp
jo
outsl
out
addr16
fdivs
jae
jg
jg
jns
jns
gs
inc
cmp
pop
pop
sbb
adc
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
nop
nop
incl
addb
xchg
xchg
xchg
mov
mov
cwtl
mov
jp
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
mov
addl
mov
mov
jle
jno
jno
jae
je
jg
jg
addb
xchg
pushw
cmp
cmp
and
and
cmp
movsl
mov
test
lods
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
stos
test
mov
cltd
fwait
xchg
xchg
xchg
incl
jle
js
jp
jns
jnp
mov
xchg
mov
scas
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
cmpsb
movsb
out
mov
call
addb
mov
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
pop
pop
pop
push
or
inc
inc
dec
insb
insb
imul
test
fwait
fistps
fwait
cltd
stc
nop
std
mov
mov
mov
mov
nop
mov
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
cmpsl
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
pushf
popf
std
movsl
mov
mov
in
nop
in
test
push
jne
push
or
inc
or
or
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
nop
xchg
std
lea
call
sahf
mov
ljmp
stos
cmpsl
pushl
lods
sahf
mov
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
popf
lcall
mov
mov
decl
xchg
xchg
sahf
pushf
popf
mov
stos
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
bound
jne
outsl
je
jl
jg
test
mov
mov
notl
lea
lcall
xchg
mov
mov
mov
mov
jg
mov
mov
mov
jne
mov
sub
mov
mov
mov
mov
mov
movsl
movsb
add
mov
pop
adc
mov
mov
decl
nop
xchg
call
xchg
xchg
call
xchg
cltd
lcall
sahf
mov
movsb
std
movsb
mov
fwait
out
mov
les
xchg
fwait
in
xchg
cwtl
out
xchg
mov
stc
xchg
mov
std
xchg
jg
fwait
jge
sahf
jnp
jmp
inc
pushl
push
pushl
pusha
adc
lods
pop
ud0
pop
or
mov
inc
mov
mov
test
and
add
add
mov
pop
adc
mov
mov
call
xchg
xchg
lcall
popf
pushf
lcall
sahf
pushf
lcall
xchg
cwtl
decl
xchg
xchg
call
xchg
lcall
pushf
lcall
xchg
xchg
jp
xchg
jno
cwtl
imul
fs
cltd
pop
sub
popf
push
push
sahf
push
sbb
movsl
pop
adc
cmpsl
pop
adc
test
adc
lods
pop
adc
stos
pop
adc
scas
pop
adc
mov
adc
mov
adc
mov
adc
inc
lods
lcall
lods
lods
scas
mov
movsb
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
cwtl
call
popf
pushf
jmp
movsl
movsb
jmp
mov
call
mov
decl
cmpb
jg
fwait
jns
xchg
imul
pusha
notrack
dec
push
call
inc
or
xchg
inc
push
call
add
lahf
dec
pop
ljmp
bound
pushl
gs
pushl
push
and
mov
jo
mov
lods
xchg
mov
scas
scas
mov
mov
movsb
movsb
add
pop
pop
adc
mov
ljmp
cwtl
lcall
movsl
mov
ljmp
test
ljmp
fwait
popf
call
jno
decl
cmp
mov
decl
push
incl
cmp
decl
cmp
call
inc
add
cltd
inc
add
lahf
dec
add
cmpsl
push
or
mov
push
pushl
jno
mov
ja
inc
jbe
inc
jp
dec
jp
dec
jnp
dec
xchg
test
mov
lret
movsl
dec
mov
mov
add
add
add
lods
movsl
movsb
add
push
adc
stos
test
lcall
mov
stos
ljmp
lods
lods
pushl
scas
lods
jmp
jge
decl
inc
or
xchg
incl
cmp
xorb
incl
add
xchg
add
mov
add
xchg
inc
add
cltd
inc
add
mov
dec
add
lods
pop
adc
mov
jp
inc
cmpb
enter
lret
dec
test
call
mov
call
mov
rorb
inc
dec
stos
mov
ret
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
movsb
mov
lcall
test
ljmp
mov
pushl
mov
mov
mov
lods
stos
stos
lcall
push
and
xchg
decl
inc
adc
mov
incl
cmp
decl
ds
nop
ds
xchg
inc
add
sahf
inc
add
mov
dec
add
lods
push
add
mov
sbb
dec
mov
int
inc
call
lea
rorl
dec
fcoms
dec
fistl
call
scas
test
enter
mov
mov
movsb
movsl
mov
or
add
add
add
add
dec
dec
adc
jns
mov
stos
cmpsl
jmp
stos
stos
pushl
mov
pushl
mov
mov
scas
mov
movsb
xchg
mov
pop
cmp
lea
decl
dec
sbb
mov
decl
inc
or
mov
call
inc
add
popf
inc
add
mov
dec
add
test
add
mov
push
inc
jb
dec
mov
xchg
push
fcoms
push
fcompl
pop
jmp
sahf
pop
jmp
lahf
pop
jmp
mov
pop
call
mov
dec
ret
mov
test
jne
lahf
sahf
or
xchg
xchg
xchg
add
adc
je
mov
cmpsb
mov
ljmp
mov
pushl
mov
mov
pushl
xchg
call
push
and
xchg
push
and
xchg
push
and
xchg
push
and
xchg
dec
sbb
popl
call
inc
add
lcall
jmp
push
add
mov
add
mov
jle
call
cltd
pop
fstps
arpl
loopne
arpl
in
gs
test
call
lods
push
jmp
mov
dec
les
in
cmpsl
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
outsl
jp
xchg
xchg
call
lahf
popf
fwait
ljmp
mov
pushl
mov
mov
mov
movsb
mov
call
das
lcall
pop
daa
call
inc
or
xchg
inc
add
fwait
inc
add
mov
dec
add
lods
push
add
mov
add
mov
add
shrl
rorl
push
jmp
lods
outsl
jmp
lods
jno
jmp
mov
in
mov
out
mov
out
mov
out
mov
jmp
mov
mov
repnz
test
sahf
lahf
sahf
pop
sahf
mov
add
add
add
jle
jg
cmp
adc
push
nop
mov
cltd
lcall
mov
mov
mov
mov
mov
mov
mov
mov
stos
cmpsb
lcall
pop
xor
sahf
fs
lcall
gs
lcall
lcall
dec
add
mov
dec
add
mov
add
mov
add
mov
outsl
sbb
ficompl
ja
jmp
mov
jmp
cmp
mov
cmp
mov
xchg
repz
cmp
mov
mov
mov
test
popf
daa
sahf
lahf
lahf
add
add
add
arpl
cmp
cmp
pop
pop
pop
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
rol
mov
mov
lahf
subl
cmp
movsl
insb
inc
jmp
cmp
fwait
push
pop
call
inc
add
movsl
dec
add
stos
push
add
scas
push
add
mov
add
mov
arpl
sarl
fisubs
xchg
in
mov
mov
lock
repnz
push
enter
xchg
push
lret
stc
in
rorl
mov
clc
stos
lods
lods
mov
pushf
pushf
xor
popf
popf
add
add
add
inc
inc
add
xor
push
inc
dec
inc
jb
pop
push
in
imul
nop
pushl
mov
mov
inc
ret
ret
inc
ret
mov
jle
sahf
push
jmp
jbe
jmp
dec
adc
fwait
inc
add
mov
dec
add
lods
push
add
mov
add
mov
pop
add
enter
mov
jmp
mov
in
les
push
lret
hlt
lret
cmc
int
push
int3
fwait
push
into
sahf
sti
iret
popf
cld
rcrb
push
lret
loopne
mov
enter
mov
mov
sahf
lahf
lahf
aas
xchg
xchg
nop
add
add
add
xor
add
cs
cmp
dec
dec
jecxz
arpl
nop
mov
mov
mov
mov
sar
inc
inc
mov
mov
sahf
outsl
dec
ljmp
jp
jmp
dec
or
popf
dec
add
movsl
dec
add
stos
push
add
mov
add
mov
popa
add
enter
shll
ficoms
push
into
mov
push
shlb
sti
xlat
cmpsl
cli
cmpsb
cld
test
fsubrl
std
xlat
test
not
popf
jmp
sarb
std
mov
mov
lahf
sahf
mov
add
cltd
cltd
add
add
add
xor
es
inc
inc
inc
bound
pop
xlat
jne
jno
mov
mov
ret
mov
ret
ret
inc
leave
inc
ret
mov
xchg
jmp
jge
ljmp
push
sbb
pushf
dec
add
movsl
dec
add
lods
push
add
mov
add
mov
popa
add
into
push
add
loopne
adc
in
cmpsl
pop
push
into
popf
cli
fldcw
cli
fdivs
std
fidivs
loope
loopne
std
in
cld
loope
push
xlat
movsl
jmp
shll
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
ss
outsl
mov
vpsubusb
aad
jmp
aam
not
rcl
std
lret
dec
lret
lret
dec
lret
lret
dec
lret
mov
mov
ljmp
outsb
lcall
dec
add
lods
push
add
mov
add
mov
fs
shrb
call
imul
loopne
add
ljmp
cld
xlat
lods
std
loopne
cld
fidivrs
cld
loop
in
cld
jecxz
std
in
jmp
sar
out
push
fbstp
call
ror
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
or
mov
pop
out
jmp
test
in
leave
loopne
fcmovnu
fdiv
aad
xlat
std
int3
iret
sar
mov
test
lods
jl
ljmp
dec
add
cmpsl
dec
add
mov
add
mov
bound
dec
data16
aam
add
fnsave
jmp
jbe
in
xchg
xor
stc
les
loop
in
out
jmp
jmp
jmp
jmp
std
in
lret
in
in
fidivl
mov
mov
xchg
adc
add
add
std
incb
std
incb
std
std
add
repz
in
out
pop
jmp
out
sub
in
out
dec
jmp
call
ljmp
fcmovu
jmp
mov
jo
test
cmp
movsl
push
adc
ljmp
push
add
mov
arpl
dec
data16
insl
add
fbstp
jmp
mov
mov
std
call
into
jmp
in
int
std
in
int3
in
int3
out
sar
out
sar
push
sar
std
icebp
sar
cld
call
mov
inc
ret
cmpsl
cmpsb
cmpsl
mov
xchg
xchg
add
add
add
std
add
incl
div
clc
add
repnz
repz
out
icebp
icebp
pop
in
out
icebp
cmp
out
out
pop
loope
lds
jb
mov
dec
add
ljmp
add
shlb
enter
shrb
fldt
jmp
jno
in
xchg
push
scas
pop
cli
fnstenv
jmp
std
ljmp
std
icebp
sar
lock
out
xlat
std
lock
std
repnz
repnz
std
repz
out
sar
repnz
jmp
dec
leave
lret
stos
test
and
xchg
xchg
add
incb
clc
cld
add
sti
cli
add
cmc
testl
sarb
negb
dec
add
cmpsl
dec
add
lods
push
add
mov
arpl
dec
data16
shrl
fsubrl
jmp
jns
out
mov
clc
mov
ret
in
fdivr
push
out
std
repnz
std
repnz
cmc
fdivr
push
repz
cmc
fdivrp
push
std
hlt
loopne
std
out
sar
repz
jmp
loope
call
ror
clc
lods
stos
lods
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
fsub
add
rol
mov
xchg
jnp
lcall
ljmp
push
add
mov
arpl
dec
data16
aad
add
fidivs
jmp
xchg
sub
sti
lret
cld
jmp
fdivrp
repnz
std
repnz
repnz
icebp
std
out
cld
in
aam
cld
in
sar
cli
jmp
clc
jmp
lret
push
in
out
fdivrl
call
fcom
sti
mov
mov
fwait
fwait
fwait
cmp
lcall
mov
rcl
add
ret
sarb
jmp
pusha
sub
lahf
dec
add
stos
push
add
mov
add
mov
fs
iret
imul
jmp
jno
call
lcall
sti
in
cld
out
cli
in
stc
loop
push
loopne
push
loopne
push
fnstsw
out
fnstsw
jmp
fcmovnb
std
call
faddp
imul
jecxz
cmc
loopne
mov
mov
xchg
add
add
add
int
mov
mov
xchg
loopne
jmpw
push
add
mov
add
mov
bound
dec
imul
shrl
fidivrl
jmp
sbbb
call
mov
mov
ljmp
std
loope
scas
cld
fmulp
mov
fmul
mov
lock
mov
in
leave
fsubp
fnop
shl
fst
out
fnsave
icebp
lock
popf
call
lret
lret
push
lods
stos
lods
adc
test
cmpsb
add
mov
ret
mov
lahf
aam
jb
popf
push
sbb
cmpsb
pop
sbb
mov
cs
mov
addb
mov
leave
cwtl
gs
scas
mov
rol
test
rol
mov
aad
mov
lret
ret
rcl
leave
mov
ror
mov
aad
jg
fcmovu
jb
fsubp
gs
in
out
call
xor
div
mulb
repnz
or
mov
into
add
add
add
roll
roll
mov
test
test
mov
mov
cwtl
and
mov
xchg
sarb
stos
mov
mov
mov
mov
lret
ror
int3
addr16
iret
push
iret
iret
rorl
inc
rcl
xor
fcomp
daa
fcomp
fistpl
ficoms
jecxz
out
out
in
pop
in
out
repnz
clc
cli
add
std
incl
std
std
add
incb
mov
mov
mov
mov
scas
lods
xchg
mov
mov
mov
mov
ret
ret
ret
xor
lret
int
int3
into
shlb
rcl
aam
iret
rcl
adc
rcl
or
aam
push
rcl
flds
xlat
faddl
xlat
fcmovnu
add
loop
add
out
add
lret
add
incl
mov
mov
add
ret
mov
mov
mov
push
rol
or
mov
add
lret
lret
add
aam
add
aad
add
add
aam
add
xlat
fiadds
fcmovnbe
fiaddl
fsubp
loope
fstp
loopne
in
call
add
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
ucomiss
pusha
xor
popa
adcl
push
xchg
sub
sub
addr16
sub
test
into
or
dec
in
test
and
ret
or
movsb
jae
shlb
push
out
notb
xchg
dec
push
cmp
ret
mov
loope
inc
adc
push
xchg
arpl
xchg
mov
movsb
out
cmp
cmp
sub
cmp
icebp
mov
loope
lods
js
fisubrs
sub
xor
dec
test
cmp
ret
stc
lock
stc
loopne
sub
movsl
jle
xchg
jle
sub
rcrb
dec
loope
repnz
and
jne
pop
out
jne
xchg
enter
sbb
xchg
sub
mov
outsl
nop
loopne
ret
addr16
xchg
adc
aaa
sbb
push
mov
sarl
fistpl
or
dec
fisttps
sub
shrb
out
add
lock
cmp
popa
sub
mov
mov
sub
push
int3
inc
fdivr
aaa
rcrl
pusha
idivl
fbstp
nop
jle
ret
xchg
or
xchg
cs
cs
pusha
aaa
mov
imul
pop
out
add
out
add
addr16
and
cwtl
xchg
sub
lret
mov
std
push
leave
pusha
mov
fbstp
stos
out
fdivl
xchg
movsb
push
and
clc
cmpsb
aas
xlat
sbb
hlt
sub
push
lahf
dec
jnp
jl
fidivs
pop
cltd
xor
mov
dec
jecxz
mov
ss
lods
inc
into
push
hlt
mov
stos
adc
je
sbb
mov
in
sbb
push
in
dec
inc
jbe
jb
jae
mov
ret
xchg
sub
out
dec
sbb
mov
dec
cmp
aas
mov
xchg
cmpsb
cmp
sbb
cmp
movsl
insb
ss
push
mov
idivl
jmp
xor
pop
repz
xor
adc
ret
hlt
fdivrl
dec
dec
das
fdivl
xor
fs
sbb
test
movsl
cmp
mov
jmp
insb
ret
pop
sahf
pop
xchg
cmp
movsl
jle
adc
push
inc
lods
add
jne
jmp
mov
jmp
inc
fadds
mov
cmp
cmc
jge
daa
mov
out
loop
fwait
xor
jbe
xor
push
xchg
sub
stos
mov
faddl
mov
shlb
xchg
adc
and
enter
mov
push
sub
daa
mov
mov
fisttps
std
int3
xor
sbb
xchg
pop
mov
fxam
jl
xchg
rclb
add
sbb
mov
insb
sarl
add
pop
hlt
push
loopne
iret
adc
adc
leave
cltd
xor
test
sbb
dec
dec
xlat
xchg
sub
jo
insl
mov
ret
hlt
mov
jge
gs
push
adc
add
enter
mov
in
jne
mov
aas
movl
xchg
sbb
dec
mov
inc
in
sbbl
push
leave
pusha
cmp
out
mov
rclb
add
jne
and
ljmp
mov
mov
cmp
mov
jge
es
out
loope
fwait
xor
jbe
xor
mov
sub
test
cmc
mov
shlb
xchg
adc
and
or
aam
dec
out
cmc
sub
mov
mov
fimuls
std
iret
outsl
push
fs
inc
and
jo
jae
leave
pusha
or
adc
int
popf
xor
jmp
stc
nop
mov
push
jmp
shr
orb
les
sub
test
adc
in
andl
or
addr16
pop
fstpt
adc
push
in
add
pop
push
fsts
push
jbe
cli
mov
rcrl
idivb
pop
scas
push
jp
inc
int
inc
sti
push
xlat
outsb
dec
mov
cmp
push
aas
mov
pop
les
mov
mov
lea
cmpsb
cmp
aad
mov
into
xor
push
push
in
orl
dec
inc
stos
in
test
push
push
mov
lret
add
mov
mov
jnp
sbb
cltd
sub
stc
nop
or
xchg
sub
sbb
mov
or
in
xorl
shrl
out
or
adc
mov
sbb
push
or
clc
aaa
sbb
mov
in
mov
and
es
and
push
repnz
push
add
sbb
jp
shll
cmp
and
imul
jp
sti
cli
add
sub
ss
clc
shlb
ret
lcall
xor
arpl
inc
mov
je
and
call
arpl
mov
inc
call
cmp
pop
insl
imull
shll
testb
lock
and
cld
or
imul
js
in
cld
push
addr16
sahf
xor
xor
mov
out
dec
fistps
add
jg
push
scas
inc
mov
out
xchg
fcmove
pop
adc
pop
out
aaa
xor
push
addr16
sbb
lea
mov
fsubrs
js
sub
ds
dec
push
jnp
mov
stos
fwait
nop
daa
ror
fdivl
icebp
sahf
xor
push
std
loop
xor
test
aaa
and
mov
xor
mov
aaa
and
ret
fs
xor
lahf
ss
les
sbb
dec
in
xlat
mov
mov
dec
sti
sbbb
xlat
xchg
sub
imulb
and
das
xlat
stos
inc
push
clc
adc
push
imul
andl
add
iret
dec
in
iret
data16
lds
sti
mov
mov
sub
or
and
jno
sti
jecxz
sub
inc
fildl
hlt
push
call
dec
icebp
call
add
jne
das
sbb
jne
clc
xlat
outsb
sub
test
daa
and
jae
add
jg
iret
and
adc
popa
pop
mov
ss
dec
out
cmp
adc
rclb
push
lods
ss
cmp
loop
scas
pop
or
add
iret
data16
lahf
xchg
sub
leave
int
sti
out
mov
sbb
cmp
dec
xor
data16
mov
mov
daa
call
or
and
push
jmp
jns
sbb
leave
jle
sti
aam
sub
jg
dec
dec
and
lcall
dec
in
sti
jp
xor
mov
lea
ja
scas
xor
fidivl
add
fdivl
dec
push
out
pop
testl
fucomip
lret
sti
mov
xor
leave
pusha
mov
xchg
sub
flds
push
sti
add
pusha
pop
sbbl
mov
rolb
popf
pop
divl
mov
dec
xchg
sub
xchg
mov
jecxz
ds
std
mov
sub
and
pop
dec
in
test
mov
loopne
push
cli
jmp
cmp
mov
sti
xchg
loopne
dec
loope
add
pop
pop
push
mov
jns
lds
iret
dec
jecxz
adc
lret
incb
or
sahf
mov
dec
in
icebp
mov
or
jecxz
insl
cli
xchg
fwait
pusha
dec
jecxz
mov
cmpsb
cmp
xor
pop
das
mov
les
dec
cmpsb
sub
cli
adc
dec
aaa
dec
jg
lea
xchg
adc
leave
mov
loop
sbb
push
out
and
loopne
imul
mov
stos
mov
insl
lsl
pop
dec
in
lea
dec
scas
inc
or
push
popf
and
in
add
cmp
popf
mov
xchg
mov
int
pop
jmp
shrl
sbb
aas
dec
xor
push
imul
pushf
xchg
out
fnstcw
push
or
mov
cwtl
push
push
and
mov
ret
inc
fprem
push
pop
hlt
cmp
xor
test
outsl
lret
bound
mov
sbb
push
jp
cmp
xor
inc
push
xor
xchg
pop
pushf
stos
mov
or
addr16
cmp
fwait
xor
sahf
xor
jle
dec
in
mov
add
sub
movsb
cmp
fsubp
jge
pushf
mov
scas
push
in
je
jl
cmp
gs
into
jne
sbb
popa
and
icebp
fadd
jno
cmp
ja
je
pmulhw
adc
mov
rcl
cmpsb
sbb
int3
mov
dec
stos
test
and
lods
adc
add
xor
push
outsl
inc
cmpsb
arpl
scas
lea
movb
mov
cmpps
cmp
dec
popa
lahf
pop
test
lds
aaa
add
out
lds
pop
adc
jmp
mov
mov
fidivs
mov
sbb
popa
mov
inc
mov
cmp
lcall
lret
sub
hlt
adc
neg
cmp
ss
mov
dec
mov
pop
xor
dec
mov
xchg
cmp
jbe
push
lds
test
aam
ss
stc
jno
fisubs
push
fmull
scas
iret
mov
orl
push
mov
xor
add
mov
pop
loop
jo
fwait
pop
xor
mov
mov
pushf
mull
mov
mov
roll
push
int3
jg
loopne
in
and
xchg
pop
jno
inc
mov
or
jg
test
pop
fistps
cmpsl
or
mov
ret
imul
mov
lret
inc
cmp
fsubr
ret
lock
mov
adc
hlt
stos
outsb
lods
es
sub
aam
mov
test
dec
jl
adcb
out
pop
adc
hlt
ds
dec
int3
fisttpl
push
add
stos
push
jmp
inc
xchg
leave
cmp
lods
sbb
mov
sbb
fcmovnbe
aas
lds
das
or
inc
mov
inc
out
rcl
stos
add
insb
cwtl
test
lahf
ror
ss
std
cmp
sub
xor
in
pop
push
mov
mov
adc
icebp
js
testl
lods
mov
and
into
pushf
add
fpatan
jns
nop
mov
scas
push
lret
incl
js
push
ret
es
nop
lret
dec
leave
inc
lods
add
or
mov
ja
jb
sbb
and
xchg
les
jbe
bnd
loopne
jo
inc
adc
dec
out
jo
push
jmp
dec
sbb
push
shrb
repnz
cmp
pushf
int
inc
mov
daa
out
jo
dec
jl
mov
imul
inc
out
in
stos
insl
inc
fnsave
xchg
insl
mov
jne
outsl
cmpsl
inc
iret
xchg
xor
addr16
push
cs
push
pop
scas
mov
sbb
xchg
push
adc
push
fimuls
pop
push
in
and
fisttpl
ret
add
sub
dec
mov
repnz
xor
test
test
dec
jle
mov
inc
lahf
insl
shll
pop
jbe
sbb
lcall
fnstcw
push
cmpsl
cli
xchg
shll
lds
cmp
call
or
dec
ds
rol
push
and
push
aaa
lret
mov
or
sub
popf
mov
push
ljmp
inc
fdivrs
call
popa
clc
dec
mov
out
or
aam
fwait
xor
int3
test
mov
xor
in
fistpll
add
push
out
sub
adc
nop
test
xor
std
pop
sub
test
jl
xchg
pop
mov
out
in
inc
or
mov
mov
fstl
test
loope
cmc
sub
das
mov
pop
repz
adc
ds
and
iret
test
mov
fcmovnb
pop
test
test
nop
push
xor
cmpl
adc
arpl
inc
mov
mov
cmp
shrl
and
icebp
mov
fldcw
cmpsb
lahf
test
pop
jb
sub
insb
cld
sbb
adc
push
fldenv
mov
in
inc
fistpl
cmpsl
ds
adcb
lds
outsb
add
shr
mov
xchg
cli
add
push
and
push
push
ds
daa
testb
shlb
std
gs
inc
fisubrl
test
mov
shlb
pop
les
sub
and
sbb
xor
fidivl
mov
mov
sub
out
in
cmp
fisttps
and
repz
dec
sbb
cmp
call
stos
pop
outsl
push
sbb
mov
add
iret
xchg
sbb
in
dec
fidivl
push
or
inc
jns
stos
push
add
movsb
mov
les
cmpsb
cmp
stos
cmp
pop
dec
ret
outsb
add
xchg
lret
jle
add
cmpsb
dec
push
mov
ret
into
fwait
cmp
mov
testb
lret
and
adc
cmp
dec
jecxz
jno
dec
xchg
iret
push
movsl
mov
mov
jb
icebp
mov
cmpsb
cmp
leave
mov
sub
cltd
cli
dec
pop
out
test
adc
into
leave
xor
cmp
xchg
sub
mov
dec
xchg
push
push
fwait
xor
mov
test
pop
mov
mov
mov
out
hlt
dec
filds
xchg
mov
sub
inc
pop
adc
mov
inc
fisubl
clc
rorl
push
jbe
jg
cmpsl
lahf
fidivs
rcrl
xchg
pop
jae
inc
pop
jno
mov
jno
pop
movsl
mov
shrl
out
inc
fisttpll
add
mov
and
push
and
pop
ds
cmpsl
mov
repz
mov
adc
lret
leave
push
sti
xchg
jl
cmpsb
cmp
test
inc
in
cmp
push
push
iret
pushw
jl
in
pushf
and
xchg
xorl
xchg
sub
imul
pop
xor
push
in
jmp
into
gs
or
in
test
mov
sbb
icebp
fnstenv
int
sbb
addr16
push
jmp
sub
xchg
jl
jb
in
xchg
sbb
aaa
lea
sarb
pusha
scas
inc
push
pop
push
out
out
jge
lods
or
adcb
movsb
cmp
or
daa
les
mov
mov
filds
xchg
in
arpl
jmp
add
aad
push
mov
repz
jp
push
mov
push
push
fcmovu
jae
orb
pop
xchg
sub
jbe
jo
cld
mov
fs
testl
or
xchg
ret
and
lret
sbb
pushf
jg
call
mov
dec
fbld
lea
push
lods
inc
cmpsl
and
pop
ror
popa
and
call
push
aam
push
popf
mov
fdivl
add
cs
fsts
mov
push
in
jecxz
jg
dec
or
or
popa
mov
mov
movsl
cmp
fldenv
pop
fs
pop
imul
xlat
aas
out
xchg
incl
cwtl
xor
or
mov
les
ret
cmp
lock
mov
ja
pop
jns
divl
movsb
cmp
cwtl
das
dec
xchg
ret
fs
cmpsl
xchg
iret
sub
aam
sub
test
inc
repnz
or
adc
sub
adc
lds
pop
out
xchg
cltd
dec
jecxz
mov
jge
cs
movsl
cmp
dec
fwait
xor
leave
mov
imul
test
lea
fstl
lret
ret
shl
xor
sbb
ss
out
js
cltd
jae
add
cmc
jnp
and
rcrl
stos
inc
mov
ror
pop
das
iret
lock
rorl
jle
add
or
and
adc
js,pt
iret
mov
loopne
jmp
decb
out
pop
push
and
addr16
jne
cmp
mov
or
jbe
out
ret
xchg
inc
push
pop
lock
push
mov
imul
mov
rcrl
sbb
or
stc
jb
sub
movsb
mov
loopne
or
jne
es
lret
lret
mul
or
ljmp
adcb
mov
and
ret
dec
cmpsl
jbe,pt
stos
inc
mov
lds
leave
pusha
movsl
add
jnp
into
out
jp
add
scas
jg
mov
leave
adc
jmp
xor
lods
pop
pop
hlt
movsl
lret
arpl
out
jnp
and
sbbb
dec
cltd
xor
mov
mov
mov
aad
or
iret
xchg
repz
leave
adc
cli
adc
xor
mov
ret
lock
mov
push
fsubp
fsubrs
clc
xchg
sub
jbe
popf
dec
dec
mov
sahf
popa
and
repz
inc
fcmove
add
xchg
popa
clc
xor
push
outsl
push
cmp
sub
sub
and
inc
dec
loope
adc
ljmp
fnsave
xchg
or
or
adc
sub
movsl
mov
xchg
sti
lcall
xor
jb
pop
pop
sub
mov
lret
dec
loopne
push
push
roll
jnp
lret
jecxz
jmp
cmp
pop
sahf
dec
imul
mov
mov
lret
xchg
or
push
call
mov
int3
cmp
and
mov
out
mov
dec
andl
dec
rcll
and
mov
test
rcl
hlt
add
out
xchg
pop
out
movsb
imul
sbb
xchg
cmp
fadds
mov
in
sub
mov
mov
int3
into
gs
mov
in
andl
dec
mov
iret
data16
sarb
iret
mov
push
in
jb
or
pop
pop
sub
xchg
cmp
fiadds
dec
scas
inc
push
sub
cld
cmp
arpl
push
sbbl
adc
adc
mov
mov
jle
aaa
into
cmp
push
push
in
xchg
mov
sbb
xor
pop
testl
mov
xor
add
push
call
out
mov
push
out
or
roll
scas
pop
out
popa
lods
inc
cmp
lret
inc
mov
jg
ljmp
add
lret
sub
mov
push
addl
idivl
fbld
lcall
inc
out
dec
sbb
push
imul
imul
add
stc
pop
or
lea
pop
jmp
push
incb
sbb
xchg
sub
mov
jne
in
mov
test
int3
sbb
ljmp
cmpsl
cmp
mov
popf
pop
sub
inc
mov
popa
clc
xlat
adc
adc
xchg
xor
loop
mov
lcall
sbb
add
rorl
push
in
bound
mov
cmp
mov
jle
jo
xor
ret
addb
adc
iret
stos
loop
adc
push
repnz
aaa
sbb
scas
cmpsb
int
cmp
shlb
repz
mov
mov
fcompl
mov
cmp
movsl
aam
jle
mov
cmp
push
jae
jp
and
loop
adc
and
add
outsb
in
mov
cmp
pop
lds
negl
rorl
and
sbb
push
jbe
in
xchg
mov
out
jb
repz
push
cld
leave
rcrb
xchg
jle
mov
cmp
xchg
pop
popa
pop
lret
lcall
adc
jnp
dec
mov
loope
push
lea
loope
jge
les
push
lock
xor
dec
insl
ret
jo
fnsave
push
mov
add
dec
add
enter
out
xchg
mov
fs
adc
sub
sub
out
outsb
mov
and
cmpsb
int3
add
shlb
mov
pop
out
insl
xchg
sbb
sbb
add
cmp
scas
aad
js
insl
dec
add
cmp
xor
stos
rcll
js
cwtl
mov
lahf
mov
mov
imul
mov
cli
fstl
pop
pop
in
xchg
cmpsb
shll
std
mov
sub
pop
repz
ja
mov
dec
push
push
fldcw
mov
dec
test
rcrb
bound
les
bound
decb
push
jbe
adc
jl
add
sub
int3
dec
adc
jl
aas
sbb
lea
mov
or
dec
inc
xchg
pusha
iret
repnz
movsl
xchg
popa
lods
inc
fs
test
and
dec
cli
cmp
mov
mov
inc
cwtl
out
sub
faddl
int3
push
arpl
push
lcall
mov
ret
dec
iret
pop
mov
ret
xchg
int
aas
inc
inc
rcrl
xchg
mov
addr16
cltd
arpl
aaa
pop
daa
and
sbb
dec
mov
dec
in
jnp
call
fwait
mov
mov
dec
mov
sub
push
je
and
hlt
das
dec
mov
lds
lea
test
dec
or
lea
out
jo
gs
xchg
fnsave
add
out
adc
pslld
aad
inc
mov
lods
sbbb
mov
push
and
xchg
sti
popa
sub
mov
add
fcoms
hlt
cli
pop
in
push
push
inc
inc
xchg
jge
cmpsb
sbb
mov
mov
mov
les
rol
or
dec
push
ja
test
lea
cs
and
and
mov
mov
and
lods
or
mov
shrb
dec
inc
pop
sub
and
pop
shl
pop
push
lahf
mulb
jne
jb
cmp
xchg
or
popa
mov
xor
push
imul
mov
lods
jbe
push
repz
pop
idivl
stos
in
sbb
fsubs
insb
cs
xchg
js
mov
cmp
into
pop
cmp
xchg
decl
lods
cltd
or
cmp
add
add
inc
das
dec
jg
data16
or
add
xchg
testl
lret
test
mov
jo
mov
out
hlt
adc
cli
shll
sub
leave
and
aad
add
int3
sub
sub
ja
ds
mov
fwait
sbb
mov
inc
in
rcll
nop
daa
add
dec
call
xchg
push
icebp
jno
in
out
mov
jo
pop
aam
add
out
rcrb
hlt
pop
ds
push
shll
fs
pop
mov
inc
and
jno
js
fwait
rcrb
fcmovb
iret
inc
pop
mov
xchg
aaa
push
movb
push
sbb
in
jae
mov
std
stos
push
xchg
into
push
push
mov
inc
or
pop
push
push
and
cmp
mov
sbb
pop
cmp
pusha
sub
addr16
sub
push
enter
shlb
jae
gs
sarb
popa
inc
adc
stc
xchg
subb
sub
cmpsb
mov
enter
fst
mov
int3
xor
daa
inc
gs
out
xchg
dec
ret
jge
ja
mov
and
jb
jge
lret
js
and
hlt
sahf
outsb
out
push
aam
mov
lods
pop
inc
test
repz
dec
lea
out
mov
dec
inc
in
fs
out
jl
scas
jb
push
or
js
shl
cmp
dec
shl
sub
stos
cmpsl
mov
add
sub
cmp
xor
dec
dec
outsb
inc
pop
aam
out
sbb
push
fdiv
mov
popl
push
fcomps
dec
jmp
pop
popf
pop
imulb
push
or
mov
push
out
loop
fsubl
orl
arpl
loope
add
rcl
roll
lahf
dec
cmp
lahf
xor
mov
mov
lods
sub
shrl
cmpsb
mov
xor
mov
dec
push
aam
mov
test
call
inc
mov
adc
adc
mov
cmc
sub
adc
adc
and
lea
sbb
push
xor
inc
jp
testl
stc
andb
test
mov
in
das
mov
dec
push
adc
repz
pop
fldcw
into
inc
mov
movsb
cmp
dec
arpl
xchg
sbb
jp
movsb
fisubrs
mov
sbbb
xchg
or
dec
je
out
mov
fnstsw
fmuls
or
int3
sub
mov
inc
dec
jge
jp
loop
daa
xor
insl
inc
paddq
push
leave
into
fwait
rcll
notb
mov
pop
pop
pop
jp
mov
loopne
cmp
icebp
or
and
dec
adc
add
mov
xor
xchg
fstps
mov
hlt
mov
sub
add
loopne
cmpsl
inc
mov
fs
jmp
ljmp
push
xor
push
cmp
push
sub
jns
outsb
movsb
gs
and
fs
adc
xor
rclb
dec
sbb
insb
mov
mov
lret
mulb
pop
pop
mov
mov
mov
cmc
in
xorl
out
dec
inc
jg
ss
jp
mov
dec
jb
pop
lods
popf
pop
out
add
nop
add
cmp
jge
test
mov
add
pop
loopne
loopne
add
dec
repz
push
popf
jl
lds
add
mov
leave
mov
jmp
cld
out
and
dec
push
adc
test
pop
mov
jmp
jne
idivl
mov
lea
mov
stos
sub
sub
mov
dec
and
jo
imul
pop
cmp
daa
cmp
iret
fcoml
pushf
cmpsb
int
int3
incb
sbbb
xor
mov
enter
cwtl
xor
mov
push
mov
or
push
gs
pop
sbb
push
in
out
insl
in
xor
popa
insb
outsb
or
lahf
cmp
or
test
sub
add
jb
insb
jbe
mov
jns
into
jbe
addb
and
outsb
adc
mov
mov
cmpsb
mov
dec
jno
int
mov
and
xorl
clc
pop
dec
inc
xorl
cmc
mov
stos
repz
sub
pop
dec
xor
stos
addl
lret
dec
push
rolb
push
and
cmpsb
shll
lods
push
mov
push
push
add
push
mov
and
and
mov
push
ds
mov
into
sbb
test
inc
lret
int3
push
fst
les
cmpsb
orl
sub
std
negl
pop
test
cmp
lods
jle
shll
mov
rolb
mov
in
push
push
lock
lods
pop
push
imul
repnz
xchg
hlt
xor
cmpl
aaa
inc
imul
push
fsts
shlb
frstor
cmp
cmp
inc
mov
fsubl
add
xchg
xor
jle
push
mov
cltd
xchg
jbe
loopne
jp
dec
pop
mov
push
imul
popa
out
xchg
xchg
inc
cltd
fadd
pop
scas
cli
movsl
jno
sbb
mov
mov
int
dec
mov
xchg
dec
mov
out
add
shrb
sbb
cwtl
lret
push
lcall
stc
cmp
outsw
int
pop
inc
mov
xlat
add
insl
sahf
or
call
iret
cmp
push
movsb
test
push
pop
and
mov
add
loop
daa
ds
fs
pusha
push
push
mov
repnz
dec
mov
pop
test
dec
mov
push
and
jne
mov
cwtl
data16
nop
jl
cmp
aaa
lods
and
jp
stc
push
xchg
cltd
or
iret
xchg
xor
sub
mov
into
test
ja
lods
sbb
xor
dec
sub
ficompl
mov
jg
lahf
aas
mov
insb
rcrl
mov
call
ficomps
in
or
leave
dec
adc
in
in
sub
les
ljmp
cld
inc
sbb
cli
cmp
popa
push
sub
add
adc
add
xor
cltd
call
pop
in
mov
or
pop
fwait
in
dec
adc
inc
lock
xor
sub
fwait
lahf
jge
arpl
insl
scas
rolb
and
test
test
fldz
xor
out
cli
mov
push
lahf
imul
lahf
pushf
imul
pop
cmpl
call
scas
cmp
jb
outsb
push
sbb
mov
sub
ret
add
push
jge
sub
mov
shr
lock
das
movsb
push
js
pop
lea
jecxz
xchg
mov
lret
sti
repz
inc
jge
cmp
dec
mov
pop
lods
and
xchg
xlat
jecxz
cmovbe
jmp
rolb
xlat
cmp
frstor
add
shrb
push
loope
jo
hlt
sbb
jb
imul
dec
dec
mov
pushf
sbb
jnp
jnp
mov
mov
sbb
sbb
or
sbb
jne
pop
jnp
jmp
push
push
adc
popa
or
in
adc
add
in
cmp
mov
loopne
gs
push
mov
and
cwtl
push
rcrl
daa
push
xor
jnp
data16
mov
xchg
mov
leave
inc
out
repnz
xor
mov
bnd
roll
xor
iret
jns
fists
fwait
jg
sbb
jge
pop
pop
out
push
sarb
xor
pop
xlat
ret
xchg
clc
jmp
jge
imul
mov
push
lahf
sar
push
scas
push
sub
out
dec
rorb
pop
leave
mov
cltd
mov
mov
fs
out
test
leave
sbb
inc
lods
lea
addb
lcall
add
sub
cltd
call
out
mov
es
jle
fists
or
insb
sbb
xor
push
xchg
dec
das
daa
repz
insb
loopne
cmpsb
jb
adc
je
cmp
jle
scas
pextrw
or
lahf
add
roll
idivl
lds
jle
rolb
jb
stos
ss
mov
enter
sbb
sti
ficompl
dec
or
repz
andb
call
or
jecxz
popa
test
sbb
daa
std
push
into
lret
adc
or
or
pop
cmp
lods
xlat
out
or
repnz
ror
pop
addr16
leave
fcomi
or
xor
xor
fs
arpl
scas
jne
in
xor
pop
fwait
jmp
sbb
pusha
lcall
cmc
inc
mov
shlb
daa
pop
mov
repz
cmp
leave
and
jae
jecxz
call
test
jo
fistpll
mov
mov
jg
in
rolb
movsl
sub
or
pop
icebp
stc
or
fidivl
mov
mov
jl
into
push
xor
outsl
fisubrs
iret
or
shl
testb
cmpsl
mull
mov
or
xchg
jne
mov
mov
cld
cmpb
sbb
out
jb
mov
aas
jle
mov
sbb
mov
arpl
mov
inc
mov
fs
cmc
xorl
sbb
outsb
push
fsub
mov
adc
push
sub
dec
rcrb
mov
inc
outsl
in
jl
push
dec
jns
div
fs
push
mov
adc
arpl
in
mov
jecxz
xor
insl
and
and
fsubr
add
out
std
xor
cwtl
inc
lret
mov
xlat
pop
stc
xchg
prefetcht1
sub
jns
mov
adc
scas
out
and
adc
push
mov
lods
xchg
add
nop
lock
mov
and
inc
jge
outsb
mov
xor
outsl
nop
ror
xlat
nop
pop
dec
inc
clc
dec
iret
nop
movsl
pop
mov
sahf
sbb
mov
dec
push
idivl
daa
clc
dec
dec
mov
push
cmp
and
pop
daa
inc
mov
jae
sbb
ficomps
negl
dec
fwait
in
jl
iret
lock
add
ret
adc
lock
in
mov
cmp
aas
xchg
aaa
xor
test
testb
fstl
push
in
lret
and
sub
add
shlb
hlt
jns
jg
push
loop
in
sar
stos
adc
icebp
push
add
into
out
jbe
jle
or
sbb
pusha
aad
cmp
and
mov
xchg
out
pop
loope
adc
xor
or
imul
in
sub
push
cmpsl
fwait
lods
mov
sbb
push
fidivl
push
mov
ss
jnp
testl
pushf
mov
andb
call
test
inc
pop
dec
aad
dec
mov
and
fnstcw
and
pusha
mov
jns
iret
insb
mov
adc
pusha
lcall
sahf
in
xor
xorl
arpl
sub
nop
aaa
dec
xor
and
xchg
fld
ljmp
cmpsl
hlt
mov
pusha
frstor
popa
fildl
push
dec
push
cltd
xor
imul
xchg
hlt
sbb
addr16
out
or
aaa
dec
fs
fisttpl
xchg
xchg
lahf
adc
decb
sbb
rorb
jne
sub
daa
aas
or
push
addr16
aas
jl
push
sbb
loop
mov
in
jae
loopne
xchg
jecxz
roll
pop
shll
mov
adc
cmp
mov
lds
mov
sub
scas
rcr
popa
mov
clc
add
cli
sbb
mov
cld
push
iret
sub
or
mov
cmp
ffree
cmp
jmp
test
pop
jp
lcall
cmc
bound
jbe
push
test
addr16
xor
jecxz
push
frstor
xor
push
out
pop
aam
and
call
loopne
lcall
in
or
iret
jno
push
xor
push
mov
mov
add
jne
mov
xor
and
inc
ja
jmp
out
cmp
cmp
repz
push
xlat
test
adcb
sub
sbb
std
pop
dec
nop
out
shll
sbb
aad
xchg
and
je
dec
gs
leave
or
push
mov
mov
cmp
fst
fstps
insb
xchg
test
or
mov
adc
lds
jp
in
cmp
ficoml
out
mov
imulb
adc
fst
xor
add
iret
or
xor
negl
les
fisubrl
cmp
inc
shrl
push
out
push
jmp
stc
mov
and
rclb
mov
and
flds
outsl
cmpsb
mov
xor
pop
xchg
mov
jne
sub
mov
sbb
ret
mov
jne
nop
rorb
xchg
push
icebp
das
sbb
inc
insb
sbb
cwtl
sbb
sbb
push
add
dec
adc
insb
ret
jne
movsl
popf
les
sbb
ret
lock
es
fnstsw
out
cmc
add
mov
jbe
mov
xor
sub
ret
mov
xchg
cmp
fidivl
sbb
test
fs
ret
scas
push
imul
popf
outsl
xor
sbb
cmp
sub
movsb
mov
fiaddl
inc
cmp
fstl
call
pcmpgtb
xor
jno
inc
adc
inc
fwait
stos
test
lods
lods
fnstenv
aad
jae
push
adc
inc
push
and
int3
loop
aad
push
push
pushf
xchg
nop
lods
addr16
stc
xchg
push
bound
mov
faddl
pop
call
and
lahf
xor
outsb
orl
or
pop
aaa
not
add
shrd
ds
sub
fs
add
in
lock
das
pop
or
sub
jecxz
dec
mov
lcall
cmp
mov
dec
mov
jae
jnp
pop
push
mov
or
push
jb
lds
dec
loope
stos
fistps
mov
lock
xor
mov
out
aam
pop
aas
inc
dec
mov
bnd
dec
mov
adc
sbbl
cmp
data16
faddp
sbb
lret
lret
fmul
scas
or
mov
dec
test
test
ret
sahf
nop
inc
or
cmpb
fmull
and
fmull
jo
rcll
repnz
dec
ds
add
sub
mov
inc
xchg
ss
and
lock
xor
testl
sbb
push
inc
cld
pop
adc
jge
lods
iret
or
xchg
cli
sbb
and
neg
sti
lock
push
lcall
outsl
pop
clc
imul
pop
or
loope
adc
push
xor
push
xor
xor
sub
mov
fdivp
dec
pop
push
sub
inc
ret
orl
scas
mov
fwait
push
push
popf
cmp
add
lds
das
inc
ret
sbb
in
jne
dec
movsb
into
push
fsts
aas
popf
inc
cmc
lods
addr16
and
cmp
icebp
scas
pushl
neg
push
jmp
mov
popa
jle
cltd
xchg
cmpb
inc
ja
xchg
add
popf
imulb
or
dec
daa
popa
lret
sti
mov
outsb
pop
es
xchg
gs
psubd
mov
out
test
movsb
arpl
sar
sub
inc
insl
out
mov
adc
ss
pop
fldl
jle
ljmp
dec
fcomps
out
dec
shll
fs
hlt
out
stos
test
mov
int3
pop
pop
jmp
movsb
inc
or
jmp
or
cmp
test
sub
mov
sbb
imul
movsl
subb
lcall
jne
dec
fidivs
sub
es
adc
cltd
inc
pop
sbb
push
inc
out
mov
xchg
pop
stos
and
mov
je
xchg
sbb
dec
addr16
jecxz
sub
pop
xlat
jb
iret
bnd
mov
stc
mov
loopne
push
jo
xor
xor
add
gs
scas
mov
movsb
fsubrl
out
in
leave
sub
into
jl
mov
pop
xor
fistps
cmp
or
stos
lea
lds
mov
aad
loope
aas
fcmovne
sub
add
loop
or
and
mov
lds
jbe
xor
scas
mov
mov
sbb
sarb
xchg
gs
out
ja
lahf
inc
and
mov
das
arpl
lcall
mov
adc
and
push
movsl
fimuls
and
int
fadds
repz
int
jp
out
shll
hlt
push
xor
mov
fwait
loop
inc
mov
into
out
push
fidivrs
int
enter
fisttpll
hlt
aam
ds
andb
push
cmpsl
dec
sbb
cld
inc
in
push
mov
scas
fucompp
adc
and
jo
lods
sbb
inc
sbb
xor
xor
lret
ss
test
jecxz
cmp
int
mov
lret
or
js
or
adc
and
mov
pop
mov
loope
inc
mull
dec
dec
push
scas
xchg
orl
add
nop
out
sti
mov
mov
and
aad
movsl
dec
jle
push
fabs
imul
sbbl
les
jbe
adc
leave
xor
dec
cmp
sbb
incb
dec
loope
pusha
xchg
push
test
into
adc
mov
xorl
aad
push
frstor
cld
jne
jp
jg
sub
scas
fdivrl
and
data16
add
push
jmp
dec
in
insb
inc
imul
add
push
push
cld
mov
adc
xor
mov
shrb
push
sahf
dec
xchg
cmp
push
xor
lahf
xchg
jecxz
lock
js
cs
add
je
mov
adc
or
and
mov
push
loop
sbb
dec
and
lret
test
in
outsl
stos
cld
cmp
sahf
stc
fimuls
lods
clc
sub
ljmp
stc
pop
xor
stos
js
xchg
push
cmpsb
mov
jns
pop
inc
inc
dec
jns
cltd
mov
and
pop
mov
add
sbb
roll
mov
pushl
xchg
addr16
pop
or
xchg
dec
je
in
cmp
fst
int
sbbl
stc
jno
jne
loop
mov
and
push
mov
pop
push
push
sti
sahf
iret
leave
pop
loop
and
dec
je
cmpsb
out
loop
inc
popa
dec
inc
push
dec
xor
jl
lods
mov
mov
xchg
xor
push
mov
mov
sub
test
mov
les
js
and
loopne
pop
mov
outsl
lods
mov
fists
lea
push
adc
stos
sub
and
jnp
sub
add
mov
and
mov
loope
fcmovnbe
cli
stc
test
push
or
cmc
jp
dec
jne
cmpsb
and
push
mov
sbbb
mov
int
xchg
cmpsl
fdiv
in
ret
in
lcall
ja
lret
mov
mov
mov
jge
adc
xchg
xchg
lret
pop
in
sub
les
xor
or
or
pusha
bound
outsb
push
add
jo
pop
clc
arpl
mov
cmp
xor
inc
dec
mov
popa
mov
inc
xchg
addb
cmp
mov
into
icebp
dec
faddl
sub
push
jb
inc
test
xor
xor
sub
iret
lock
sub
ljmp
int3
mov
lods
dec
gs
ja
mov
mov
jno
hlt
xchg
or
stos
jecxz
sub
outsb
push
fisubl
sbb
je
sub
in
mov
sub
add
jns
call
insl
push
mov
jle
jg,pn
fcomp
cmp
push
mov
sub
dec
mov
xchg
jge
push
add
inc
sub
xor
fstp
and
mov
or
in
pop
pop
lods
mov
dec
addb
cmp
dec
add
pop
mov
xor
push
jno
popa
test
xchg
mov
push
sub
filds
jecxz,pt
popa
xor
test
mov
mov
jne
int
xor
push
nop
inc
dec
push
mov
movsl
stc
add
push
pop
ss
aad
dec
fwait
loop
sbb
loop
mov
pop
and
inc
int
add
ret
pop
inc
es
ljmp
repz
ret
mov
sarb
je
popf
ljmp
and
ljmp
adc
loop
loopne
xchg
sub
jae
jns
pop
cmp
rorb
imul
pop
repz
lret
inc
inc
in
lock
imul
int3
mov
push
sahf
cmp
inc
xor
dec
je
or
sbb
stc
popl
js
sub
push
arpl
xchg
cs
mov
adc
ja
addr16
repz
mov
ljmp
les
and
das
mov
call
mov
cmpsl
jmp
adc
or
or
shlb
mov
mov
cmp
sub
sub
sbb
mov
insb
xchg
das
inc
stos
cmp
cld
aaa
xchg
push
sti
fnstcw
lds
jmp
push
stos
jge
cld
sub
dec
call
mov
out
cmp
jge
insl
inc
mov
xor
cmpsb
ret
xor
adc
imul
popa
add
rcrb
cmp
addps
ret
jo
int3
cs
dec
popl
imul
add
pop
ficoml
push
mov
outsb
sbb
cltd
pushw
add
sti
mov
mov
movntps
data16
movsl
pop
xchg
movsl
out
push
push
hlt
or
enter
and
inc
mov
in
mov
popf
pop
movsb
xchg
and
out
push
mov
popf
mov
mov
in
loopne
dec
lcall
xchg
lcall
nop
sub
stos
arpl
push
jns
ds
push
or
shr
mov
sti
scas
adc
popa
jg
pop
outsl
lahf
jge
mov
xor
out
cli
cli
dec
cwtl
aas
sti
and
xchg
cmc
push
mov
xchg
pop
push
dec
repnz
mov
mov
adc
or
xchg
stc
pop
setae
sub
pop
cltd
test
pop
mov
fistl
xor
neg
stos
ja
push
ss
int
shl
inc
mov
sti
cs
jmp
es
add
mov
mov
gs
das
lods
mov
adc
push
dec
inc
mov
pop
popf
aam
mov
insl
xchg
nop
aad
andb
pop
test
add
push
push
out
adc
orl
lds
insl
fisubrl
mov
mov
sbb
pop
cmpl
push
jecxz
aam
stos
test
and
orl
adc
ret
adc
jae
sub
in
jmp
mov
repnz
mov
inc
jecxz
xchg
cmp
iret
mov
mov
cs
dec
xchg
test
and
popf
xor
movsl
sarb
adc
mov
in
jno
cli
sub
das
inc
testl
cmp
pop
cmpsl
inc
push
fisttpl
mov
mov
cmc
setg
ds
orb
movb
add
inc
sbb
lds
or
pop
adc
xor
mov
mov
inc
clc
mov
insl
push
mov
loope
push
es
mov
or
stos
mov
dec
shrb
je
insb
pop
sbbb
xor
loope
pop
xchg
leave
push
testl
mov
sbb
add
shrl
inc
pop
mov
jbe
dec
or
addr16
pop
insl
aaa
js
divb
cmp
fists
fdivs
sti
loopne
lcall
cmp
dec
pushw
lret
sbb
pop
xchg
mov
imul
ss
push
shll
and
loope
xor
das
enter
sub
negl
xor
not
jne
mov
mov
dec
js
subl
ss
mulb
pop
scas
sbb
jge
mov
fcompl
ljmp
jno
adc
fsubrs
xor
cmc
mov
mov
lods
pop
fmul
fs
jl
int3
lods
das
in
test
push
in
incl
jbe
push
aam
les
es
ficoms
stos
inc
stc
js
clc
test
lret
cld
insl
in
test
rorb
add
xor
pop
pop
add
inc
fisubs
ret
gs
hlt
jns
lea
int3
adc
std
push
xor
dec
mov
push
jmp
inc
ret
hlt
popa
add
sub
and
lcall
push
mov
testl
xchg
cld
cltd
xor
mov
lret
in
rcrl
dec
loopne
mov
jb
mov
add
lods
mov
fiadds
mov
pushl
ror
push
shrl
in
pop
lock
ja,pt
jo
sub
sub
dec
pop
sahf
dec
loop
cmp
push
and
push
jne
or
cmp
xor
pop
sbb
dec
loope
cmp
je
adc
into
gs
testl
fcoms
mov
and
jle
sub
dec
leave
cwtl
das
repz
hlt
in
outsl
testl
jecxz
fidivs
add
out
movsb
pop
cmc
fstpl
mov
sub
lds
and
sub
sahf
xor
jbe
push
movsl
sbb
fidivs
loop
pop
sbb
xchg
loopnew
cmc
sbb
out
fs
and
xchg
mov
das
rclb
mov
sbb
sub
cwtl
das
add
fdivl
loope
cmc
sbb
xchg
cmpsl
cmp
xchg
gs
xchg
jne
adc
dec
loope
icebp
sbb
mov
cmp
lock
sarl
sahf
xor
xchg
cmp
mov
out
test
jne
adc
sbb
insb
xlat
outsb
xchg
cmp
fs
pop
icebp
test
jns
adc
mov
outsb
fsubrs
cmp
dec
jecxz
push
mov
add
nop
fists
or
sub
push
mov
sti
xchg
scas
push
repnz
fidivl
popa
das
lcall
xchg
sub
add
inc
fucomi
pop
sub
mov
xchg
sub
test
pop
mov
hlt
add
mov
cli
jae
and
sbbl
jle
mov
data16
lods
inc
imul
in
mov
mov
inc
adc
add
and
inc
pop
cmc
jg
nop
daa
adc
jmp
imul
inc
push
ljmp
xchg
sub
pop
std
aas
es
fsubs
je
add
add
gs
jge
scas
cmpsb
dec
outsl
push
jb
imul
int
mov
pop
out
lret
bound
jle
inc
test
push
lods
leave
loopne
repz
dec
ficomps
mov
jo
xchg
stos
sub
or
stos
push
cmpsb
cmp
hlt
jb
int3
lods
push
pop
mov
int
mov
lods
push
testb
jb
fsubrl
testb
pop
xchg
jecxz
jne
stos
add
cmp
mov
test
loopne
or
or
mov
dec
in
add
lds
movsl
push
in
fstpl
xchg
into
gs
xchg
sub
repz
sub
dec
in
dec
sahf
xor
sub
push
movsl
jae
push
mov
xchg
test
cmp
mov
dec
in
mov
aad
aaa
gs
outsl
shl
mov
jle,pn
pop
jmp
cmp
jnp
or
ss
in
lds
add
pop
ss
in
push
movsl
adc
xor
testb
push
xor
cmp
dec
loopne
pop
cmc
mov
cmpsb
jb
loope
mov
mov
fimuls
or
cmp
test
push
movsl
lods
repnz
stc
dec
testb
xchg
inc
fmul
popa
pop
out
cltd
lock
dec
sbbl
ds
jbe
ret
pusha
pop
cmc
lcall
sbb
inc
ss
or
mov
fwait
or
in
lea
mov
imul
inc
sub
jp
popa
clc
ss
testb
in
add
movsb
mov
or
daa
mov
or
mov
sbb
and
testb
aad
rorb
testb
jnp
adc
jbe
mov
xchg
sub
clc
cmp
xor
popf
push
cmp
xchg
or
cmp
pop
push
lods
mov
fs
stos
or
fnsave
inc
fldcw
or
xchg
aas
dec
push
pop
cltd
sahf
sbbb
mov
les
adc
insl
imul
mov
roll
or
pop
out
push
add
push
ljmp
adc
dec
pop
das
movb
ficomps
rorb
mov
push
call
or
xor
mov
inc
call
or
jp
sti
out
test
pusha
repz
mov
das
aam
sub
cmp
push
in
and
stc
mov
push
jns
jae
loope
xchg
sub
add
dec
sub
inc
nop
dec
lret
mov
jbe
mov
jmp
movsl
sub
dec
sub
jl
sub
repnz
idivb
leave
xor
andb
pop
inc
in
cmp
push
aad
mov
inc
cmp
pop
aam
test
fsubrl
scas
add
aam
jmp
lods
xlat
notl
jno
and
leave
ret
je
imulb
movb
jp
mov
dec
cwtl
insb
clc
fildll
in
jl
adc
mov
arpl
sti
mov
mov
sahf
mov
mov
add
sub
adcl
and
dec
jae
je
inc
fcomip
fwait
mov
out
pop
ljmp
scas
cmp
push
ret
incl
pusha
push
cld
mov
xor
lcall
sbb
stos
pusha
push
lock
rolb
leave
dec
aas
mov
bound
fstps
mov
jmp
decb
jno
dec
or
je
fwait
orb
scas
jne
jmp
and
push
xchg
push
xor
les
inc
add
shll
cmp
pop
push
insb
jge
outsb
lret
push
neg
stc
jp
or
call
mov
imul
mov
fsts
repz
xor
dec
xchg
and
xchg
mov
movsl
push
fucomp
cmc
test
call
and
jnp
add
lds
test
sbb
pop
ficoml
sub
addr16
test
mov
ficomps
iret
imul
imul
test
lds
das
leave
cld
fdivr
jnp
add
or
mov
dec
call
pushf
fidivrl
mov
insl
pop
dec
push
aas
mov
sahf
jp
int
movsb
aad
jmp
push
loope
pop
lret
adc
mov
aas
xchg
mov
mov
cmpsl
sub
shlb
inc
xor
jge
add
iret
xchg
ljmp
clc
jge
sbb
lea
js
fwait
pop
outsb
mov
mov
lret
adc
mov
xor
es
stos
push
mov
int3
push
cmpl
loope
loopne
inc
jmp
sbb
int
flds
or
push
fstps
movsl
or
sub
pop
sahf
idivl
cmp
mov
cmp
mov
xlat
gs
mov
int3
loopne
add
xor
das
int
dec
dec
out
sbb
mov
fimull
xchg
mov
sub
pop
loope
je
imul
mov
ret
or
sub
test
arpl
test
rorl
stc
mov
jle
xor
push
fwait
xor
stos
mov
cmp
das
jmp
pop
sbb
fsubrs
movsb
push
movsl
aad
ljmp
in
scas
push
dec
fs
jp
ds
fwait
outsb
add
mov
xchg
je
mov
bound
push
popf
mov
ss
movsb
cmp
cmp
mov
sbb
repnz
loopne
cmpsl
adc
mov
les
jne
test
mov
clc
add
lret
sti
sub
dec
jge
push
scas
outsb
jnp
mov
ret
hlt
and
cmova
sbb
lret
sti
mov
inc
fmuls
shrl
insl
pop
negb
mov
adc
mov
pushf
xor
sub
push
mov
dec
loop
cmc
fsubrs
shrb
pop
inc
icebp
mov
jg
push
mov
movsb
cmp
mov
cmp
inc
cli
in
xor
addr16
popa
adc
fistps
mov
call
loopne
sbb
movsl
inc
sub
ret
cmp
movsl
mov
int3
dec
loopne
out
push
adc
je
mov
ss
jmp
push
xor
test
fs
fdivl
cltd
sti
xchg
lret
fidivrs
mov
xor
jne
cmp
shlb
add
ljmp
mov
mov
inc
fmull
sti
xchg
fbstp
jmp
aam
dec
pop
sub
fcomps
aam
lcall
cltd
fadd
insl
add
decb
cmpsb
sbb
ds
pop
mov
in
repnz
inc
pop
mov
in
push
clc
es
in
test
rcrl
or
jge,pn
mov
mov
js
addr16
movsb
cmp
push
and
lods
ret
shl
shll
out
ret
xchg
ja
lock
mov
paddw
call
mov
into
fwait
mov
xchg
pop
or
inc
ds
sbb
mov
mov
aad
mov
and
int3
inc
imul
out
sbb
dec
adc
dec
jmp
cmc
sbb
add
stos
div
sbb
jmp
cld
xor
mov
push
jnp
xchg
cltd
xor
mov
dec
sub
jne
cmp
aam
popf
lds
xchg
mov
mov
scas
in
ret
push
stc
nop
xchg
adc
sub
nop
daa
fwait
enter
fidivl
pop
mov
int
lock
xchg
sub
in
mov
mov
dec
lds
mov
scas
inc
es
jecxz
loopne
ja
ss
test
repnz
stos
mov
mov
pusha
mov
push
and
int
xchg
fdivl
in
pop
out
sbb
cmpsb
jp
fnstcw
icebp
mov
test
mov
lret
dec
sbb
push
cli
repz
xchg
and
imul
push
pop
mov
sbb
adc
loop
xchg
insb
pop
sahf
movsl
in
adcl
xchg
sub
daa
and
popf
adc
sub
sbb
push
in
loop
data16
push
fwait
ja
int3
xchg
fs
add
cltd
xor
push
mov
test
popa
clc
lods
fnsave
stc
and
lock
enter
jae
cld
test
mov
pop
push
jae
xorl
std
test
loopne
insl
stos
pop
repz
repz
popa
clc
push
icebp
sbb
lock
dec
stc
cmp
rep
lahf
imul
test
movsl
cmp
pop
pop
lock
cmpsl
ds
mov
cli
loop
inc
adc
push
jmp
lods
jecxz
fucomip
popa
clc
fldt
test
and
mov
lret
mov
mov
pop
repnz
data16
mov
rclb
ret
das
out
popa
repz
in
mov
dec
push
dec
jecxz
cmc
movsl
cmp
mov
testb
lods
gs
fnstsw
stc
insb
push
dec
jecxz
and
gs
mov
jbe
pop
ret
dec
loopne
cmpsb
in
fadd
data16
mov
mov
xchg
mov
fsubrs
and
dec
sbbl
sub
jp
shll
into
add
pop
jo
pop
lock
jae
aaa
gs
jae
push
popf
xor
cltd
dec
out
dec
scas
inc
jge
xor
jns
cmp
stos
ret
cmc
test
es
dec
dec
sub
add
ret
nop
daa
ss
gs
pushl
addr16
mov
inc
imul
inc
adc
idiv
scas
inc
das
idivl
jmp
in
jecxz
fbstp
dec
nop
mov
lahf
lds
int
or
jg
and
out
push
jns
inc
imul
adc
imul
or
mov
testl
xor
rep
add
jecxz
or
push
loop
pop
aam
inc
frstor
sbb
js
fisttpl
or
scas
inc
mov
mov
test
shll
inc
cmpsb
insb
mov
pop
sub
push
pop
push
stos
inc
dec
jecxz
imul
cld
xchg
fdivrp
lods
inc
out
addr16
lods
xchg
out
test
iret
sbb
dec
sbb
or
lret
mov
shlb
fbstp
shrl
and
xchg
push
xlat
mov
leave
in
sbb
cmpsb
inc
fcomp
jle
inc
jo
dec
loope
fs
sbb
xchg
sbb
fbld
stos
inc
jg
ret
pop
mov
pop
int
lea
aas
gs
pop
adc
test
or
cmp
cs
je
aad
sahf
push
loope
sub
mov
fsubrs
xchg
aas
in
xor
jge
mov
fsts
push
xchg
cwtl
das
fstpt
in
jno
fnstenv
or
xchg
and
xchg
sub
add
aam
mov
jno
xchg
movsl
aam
test
adcb
dec
cmpl
cmp
push
out
in
inc
es
jmp
jbe
mov
fsubrl
sbb
cmp
sub
fwait
pop
push
out
jnp
or
inc
push
mov
mov
xchg
sub
fisttps
rcr
mov
jo
test
addr16
outsb
xchg
mov
adc
push
dec
or
jnp
rcrl
inc
fidivs
into
dec
loopne
inc
add
ljmp
and
mov
mov
push
jge
xchg
cmp
or
in
ret
hlt
lock
cmp
mov
inc
pop
icebp
js
add
xor
lea
lret
xchg
cs
mov
xlat
and
shlb
inc
shrl
xlat
jg
leave
push
xchg
inc
or
aad
stc
adc
repz
add
mov
in
dec
jecxz
call
xchg
leave
or
into
jnp
mov
movsl
jp
mov
pop
nop
sahf
mov
adc
daa
pop
and
xchg
in
xchg
pop
fsubs
mov
loope
lahf
ss
aaa
into
lret
jge
mov
cmpsb
insl
cwtl
das
pop
pop
jae
nop
lea
mov
pop
std
xchg
sub
jecxz
dec
adc
or
fsubp
xchg
sub
addr16
xchg
cwtl
sbb
mov
push
int3
xchg
sub
mov
push
out
cs
sub
mov
mov
pop
push
xchg
sub
sbb
enter
xchg
sub
jo
popa
mov
pop
mov
sub
mov
fs
sbb
dec
cmp
sub
scas
sbb
pop
ror
popa
add
mov
sbb
mov
inc
inc
xlat
jne
je
stos
push
push
ljmp
jge
sub
or
rcll
hlt
mov
push
cwtl
aad
or
xchg
stos
pop
xor
dec
push
push
lods
xchg
cmp
jo
insb
add
or
cmp
push
call
cmc
call
xchg
rcrb
stos
mov
push
stos
leave
in
test
mov
std
xchg
jb
xor
mov
mov
inc
fincstp
and
adc
jns
shrb
push
push
in
test
mov
outsb
outsl
cld
xchg
popa
pop
lcall
icebp
mov
and
fidivs
inc
mov
jmp
test
scas
xchg
and
push
subb
pop
rcrl
data16
jnp
or
aaa
incb
out
shlb
fs
lods
inc
out
in
fcom
cwtl
fbstp
sbb
mov
pusha
sbb
sub
fistps
fcmovnb
pop
int
jns
jecxz
inc
fldl
les
push
stos
mov
into
es
iret
data16
add
sbb
dec
push
lods
inc
js
inc
frstor
jl
insl
fmull
push
jno
dec
arpl
sub
sbb
xchg
mov
add
mov
cmp
rclb
scas
inc
lods
loope
imul
stos
rcrl
lods
inc
andb
cltd
ret
cmp
pushf
push
mov
inc
sub
pop
sahf
and
or
shlb
ss
popf
dec
in
mov
push
test
push
xchg
sub
mov
mov
dec
push
int
inc
hlt
clc
daa
sbbl
hlt
loopne
mov
clc
shrb
stos
xor
fucomi
push
mov
fs
cmc
xchg
in
shrl
xor
xchg
orl
push
or
adc
movsb
sub
aad
xchg
sbb
dec
loopne
pusha
xchg
sub
jp
ret
pop
or
imul
inc
rcrl
push
movsl
cs
fbstp
sub
rcrl
xchg
sbb
cmp
ja
add
xchg
cs
loop
notb
mov
test
jle
imul
sahf
ss
fdivrl
cmpsl
mov
shrl
test
xchg
mov
inc
fisttpll
pop
stos
or
sub
adc
jl
out
test
into
jno
cld
outsb
mov
pushf
sbb
imul
mov
lcall
addr16
pop
adc
inc
mov
enter
movsb
xchg
add
xor
sub
in
outsb
add
ss
and
push
push
inc
sub
dec
enter
movsb
cmp
mov
ret
cmc
add
and
fimuls
movsl
adc
inc
xlat
fsubrl
sbb
jmp
lret
adc
pop
lock
xchg
cs
jo
adc
mov
xor
loopne
push
cmp
xchg
fsubrl
cwtl
pop
clc
dec
and
push
or
add
dec
loop
inc
das
xor
cmp
test
mov
mov
lea
sub
ret
pop
push
adc
jo
inc
pop
xor
jg
lret
std
cmp
mov
stos
pop
mov
inc
adc
dec
or
pop
repz
push
in
stc
and
cmpb
cmpsb
fwait
xor
dec
lcall
cmp
add
fbstp
inc
cld
xchg
xor
icebp
mov
xor
cmpsb
movsb
fistpl
mov
test
fcomps
mov
int3
out
dec
jecxz
mov
test
inc
push
adc
xchg
sub
mov
push
out
mov
pop
or
iret
or
pop
aas
mov
cwtl
call
xchg
or
and
inc
fsubrl
push
inc
fiadds
aas
pop
out
jo
sti
xchg
in
or
cmp
inc
fsub
ret
xchg
sub
jecxz
pmullw
lods
inc
mov
jo
leave
testb
mov
push
mov
aas
sbb
mov
inc
dec
out
ret
sbb
aas
mov
lahf
sub
mov
cli
sub
pop
mov
test
dec
enter
mov
xchg
lret
bound
lds
cwtl
mov
add
lret
adc
and
sbb
sbb
cmp
xor
dec
int3
push
in
decb
ja
mov
inc
cltd
xor
cmpsl
loopne,pt
mov
cmp
fidivs
add
xchg
dec
jl
cmpsl
ja,pt
inc
fnstenv
xchg
jecxz
or
jl
xchg
call
mov
mov
sbbl
jge
in
dec
push
iret
data16
pop
insb
roll
repnz
mov
mov
xchg
inc
inc
fdivl
pusha
notl
adc
inc
daa
inc
fistpl
stos
pop
scas
sbb
test
or
imul
jecxz
aam
ret
pushf
rclb
lods
inc
in
shrb
adc
cld
xchg
test
push
lods
outsl
pop
dec
out
sbb
rorb
cmp
insb
repnz
ljmp
jge
mov
jmp
ljmp
pop
daa
adc
mov
test
sbb
add
popa
mov
sarb
mov
jmp
sbb
nop
mov
push
ljmp
ds
dec
xchg
sub
adc
cmpb
iret
iret
add
cld
xchg
jns
add
sti
xchg
or
in
jg
fsubrl
pop
inc
fimuls
xor
bound
push
xchg
cmc
mov
js
imul
sbb
push
fimull
sti
cmp
xchg
cmp
scas
stos
add
sub
adc
dec
hlt
cmp
fildll
dec
out
mov
sbbl
xchg
xchg
mov
mov
push
in
ret
test
and
fisttps
push
in
cmc
and
push
mov
sbb
xchg
push
out
insl
in
scas
inc
sbb
jns
dec
in
add
mov
cld
sti
xchg
push
push
push
out
test
cmc
jmp
xchg
aaa
into
mov
dec
in
dec
adc
loopne
jae
push
jecxz
out
insl
xor
sub
mov
scas
inc
or
inc
fnstsw
mov
jmp
mov
pop
and
mov
decb
leave
lretw
add
dec
mov
aaa
and
jbe
sub
cmp
xchg
rcrl
jb
mov
jl
jp
aam
enter
push
xchg
mov
pop
adc
or
in
cmpl
in
aas
es
jg
sbb
xchg
sub
and
mov
or
pop
aad
or
jl
testl
inc
xor
mov
aam
push
fcomps
or
adcb
mov
pop
in
or
iret
mov
lods
inc
stos
inc
dec
loope
push
out
xchg
xchg
xor
inc
xchg
sub
or
cmpb
sarl
lds
imul
xor
adc
fcoms
stos
leave
push
xchg
sub
inc
mov
ljmp
cld
xchg
xor
add
cwtl
subl
rorb
jl
xor
xchg
out
xchg
iret
sbbl
imulb
and
sbb
mov
sub
das
adc
test
sti
xchg
jle
mov
push
or
lods
cmp
inc
ret
repz
enter
icebp
mov
inc
je
jns
mov
lods
add
add
int
dec
pushl
enter
jb
add
xchg
mov
mov
scas
aas
insb
insb
add
cmp
stc
popf
cmp
push
adcl
add
jg
mov
scas
or
pop
and
mov
mov
rcl
es
jp
push
lods
sbb
cltd
xor
inc
mov
jb
and
cmp
lock
pop
push
mov
andl
es
scas
pop
mov
push
addr16
aaa
dec
nop
daa
cmp
xor
mov
mov
loop
xchg
movsl
cmp
xor
mov
pop
test
jns
jecxz
imul
adc
xchg
es
xor
cwtl
cmp
sub
adc
lds
xchg
sub
insl
leave
insl
add
push
shrl
dec
out
icebp
sti
andb
mov
mov
and
movsl
mov
push
fsubp
enter
mov
fbstp
insb
sbbl
sub
lds
ficompl
push
pop
adc
xorb
out
mov
sti
xchg
int
rcrl
adc
lods
inc
push
xchg
mov
jno
enter
mov
cmp
mov
pushf
inc
add
gs
dec
leave
pusha
jl
inc
xlat
jmp
in
xchg
sub
into
push
movsl
add
jle
nop
mov
push
call
mov
nop
daa
jns
cmp
mov
insl
aaa
xchg
insl
pop
jo
and
loop
and
dec
in
ficoms
setae
adc
dec
sbbl
cmp
dec
mov
sbbb
dec
fnstenv
dec
js
cmp
repz
insl
add
loope
movsb
adc
jne
fildll
outsl
push
nop
xchg
sbb
adc
xor
mov
insb
add
stos
je
sbb
jno
cmp
imul
rcrl
les
push
es
xchg
sub
add
dec
ss
into
add
daa
dec
mov
pop
lock
adc
add
pop
mov
pop
icebp
xchg
dec
jge
jle
nop
daa
pop
or
cld
cwtl
ret
ret
stos
lea
int3
arpl
cs
lahf
jp
popf
stos
scas
mov
and
lahf
xchg
add
or
hlt
sbb
dec
adc
jge
and
inc
fwait
xor
test
sub
mov
pop
sub
loope
aam
sti
xchg
jb
add
movb
ja
aaa
int
cwtl
inc
fcmove
cmp
jmp
push
xchg
outsl
add
jno
mov
adc
xor
pop
adc
loopne
gs
orl
add
mov
fstps
mov
jg
ret
cmp
stc
pop
cmp
mov
decb
pop
repz
push
mov
lds
jg
pop
dec
popf
scas
inc
into
imul
xchg
mov
jl
andb
lods
push
adc
mov
cmp
mov
ret
mov
xor
dec
roll
in
mov
sub
and
out
test
mov
jb
lods
negl
pop
dec
inc
test
sub
jge
push
xchg
jo
das
push
jmp
cmp
rcl
xchg
dec
sbb
push
adc
dec
stc
leave
dec
inc
xor
mov
push
xchg
pop
les
pop
mov
pusha
mov
int
or
cmp
xchg
xchg
push
or
xchg
sub
add
mov
in
ds
pop
cmp
pop
mov
out
scas
addb
inc
dec
jecxz
lods
arpl
fimull
adc
icebp
jge
loopne
inc
lea
xchg
adc
cmp
pop
cmpsl
jle
inc
sahf
mov
call
push
int
data16
cs
aaa
into
cmp
decl
sbb
fldt
or
aas
out
inc
call
dec
sti
push
std
and
cmovns
sbb
scas
mov
pop
int
insl
mov
test
jb
jle
pop
inc
mov
mov
jp
dec
enter
movsl
fcmovnbe
iret
filds
xor
call
popl
fcomp
sar
out
or
push
das
pop
and
sub
fwait
lods
sub
cmp
aas
inc
ret
sbb
stos
sbb
inc
xlat
aaa
or
pusha
xor
jns
sbb
xchg
pop
out
cmp
outsl
test
cltd
xor
lds
lods
loope
out
fidivrl
jnp
push
hlt
mov
xor
jecxz
cli
dec
dec
push
inc
out
lea
inc
sub
ja
cmpb
lock
or
cmpsb
inc
sub
test
or
lcall
cmp
adc
mov
mov
add
lahf
and
sbb
rcll
xor
and
mov
out
gs
int
in
mov
shr
mov
adc
inc
jne
dec
mov
inc
xchg
orl
movsb
pop
push
xchg
movsl
lahf
stos
pusha
not
hlt
stos
push
scas
ror
pop
jmp
cld
jns
in
adc
adc
stos
imul
cmp
or
fistpll
jno
imul
xchg
jg
lds
mov
mov
insb
in
ret
aad
sub
cmc
sub
add
sbb
adc
repz
ss
inc
push
es
sub
dec
inc
fdivl
xor
xchg
cmpsl
cmp
xchg
cld
jae
push
mov
push
sub
out
stos
dec
loop
or
push
ds
imul
xchg
dec
xchg
xorl
lret
mov
popa
loop
cmpsb
cmp
xor
push
pop
sahf
xchg
loop
xor
add
fldenv
stc
sub
cmp
sub
pop
jg
pop
icebp
jp
sahf
xor
xchg
dec
push
jmp
jmp
or
and
inc
lods
inc
js
clc
jecxz
lret
cmp
jmp
jmp
push
lods
rorl
cmp
pop
sub
shll
insb
std
dec
ret
pop
loop
sbb
xor
push
add
clc
test
ja
sub
pop
cltd
sbb
and
popf
or
pop
lock
lret
lret
shlb
sub
push
mov
mov
add
jp
jno
iret
mov
ret
push
in
hlt
cmpsb
pop
jp
sub
stc
pop
stc
add
sub
push
mov
cwtl
das
jle
popf
xor
mov
mov
rolb
mov
adcb
hlt
cmc
mov
rcrb
stos
jns
mov
dec
int3
js
jno
out
iret
data16
testl
push
xchg
or
mov
shr
jne
enter
jo
mov
shll
hlt
adc
jbe
seta
jnp
js
jbe
push
xchg
stos
icebp
jp
movsl
xchg
sbb
sbb
pop
cmp
pop
push
stos
jne
mov
shll
filds
mov
pop
ds
jnp
or
into
nop
daa
add
scas
inc
push
negb
arpl
enter
pushf
aam
into
sbb
mov
and
mov
jae
inc
fdiv
xchg
cs
fs
inc
out
jecxz
sbbb
cmp
push
mov
pop
mov
fisubs
je
xor
pop
arpl
loop
mov
sbb
or
iret
mov
push
mov
stos
push
in
fstpt
shrl
pop
icebp
decl
sub
mov
xchg
movsl
cmc
into
test
cmpsb
mov
mov
daa
mov
das
cmp
mov
aas
pusha
cmp
or
push
jl
loope
push
std
xor
or
push
sub
sbb
inc
and
cld
xchg
pop
sbb
sbb
dec
xor
sti
daa
push
or
sarb
pop
add
shrl
std
mov
xor
mov
push
push
sub
je
das
fnstenv
jge
xchg
scas
xor
mov
sbb
pop
and
into
push
sub
lret
push
in
cmpsb
jp
call
stc
int3
outsl
push
sbb
and
lahf
jb
inc
movsb
ror
repnz
notl
in
test
jmp
mov
pushf
mov
and
fistpll
cmove
inc
pop
data16
lea
stc
xchg
scas
test
loopne
adcb
inc
imul
mov
pop
cmp
xchg
pusha
ss
push
dec
dec
adc
cmp
push
mov
popa
xor
jmp
jns
push
and
lahf
cmpsl
inc
push
mov
xor
mov
loope
xor
std
cltd
loopne
push
inc
popa
inc
in
test
jb
fnstsw
aad
int
push
cld
dec
dec
xor
jmp
pop
inc
mov
sub
stos
popf
stc
test
sbb
fcomps
cmp
dec
stc
sahf
xor
lahf
dec
mov
or
lahf
fidivl
adc
and
mov
cltd
inc
push
lods
jbe
iret
data16
xchg
xor
enter
aas
jmp
or
xchg
cmp
insl
mov
shl
mov
ss
inc
adc
decb
stos
test
xchg
jg
std
mov
popf
or
rcrl
and
pop
movsb
fbstp
jg
fnstenv
shlb
pop
imul
lods
cmp
rolb
out
jo
xchg
int
ret
cmp
mov
adcb
adc
mov
out
inc
xlat
adc
out
iret
sbb
jo
add
sahf
xor
movl
or
je
xchg
scas
inc
lds
jbe
fisttpll
lahf
add
xorl
popf
xor
mov
test
xchg
mov
and
cmc
dec
pop
hlt
cmp
add
jmp
sbb
pop
mov
stc
roll
cmp
notb
inc
flds
mov
sti
out
cmp
xchg
stos
mov
cltd
in
mov
mov
insb
shrb
hlt
mov
mov
lahf
ss
stc
in
pop
out
or
enter
clc
fwait
scas
push
mov
mov
in
addl
insb
add
xchg
int3
arpl
push
fcomps
or
xchg
inc
fld
mov
cli
ficoml
add
inc
mov
pusha
mull
int
push
or
shll
add
inc
shll
addr16
pop
xchg
xor
leave
jns
adc
xor
testb
ficompl
mov
xchg
ret
cli
mov
aas
and
jb
faddl
ss
pop
sub
dec
xchg
mov
aam
xlat
or
add
cmc
outsb
fwait
repnz
popf
xor
xlat
loopne
adc
adc
int
mov
mov
mov
cmovns
cmp
aaa
into
dec
aam
out
imull
push
pop
lods
sbbb
sbbb
cmc
adc
cltd
xlat
cmpsb
out
test
int
sti
cmc
cmp
stos
stos
ss
lret
xor
mov
gs
test
lds
icebp
loop
jecxz
inc
in
out
test
cwtl
xchg
or
sahf
xor
and
rclb
xchg
sub
pop
mov
orl
jns
gs
sbb
jp
inc
popf
and
xchg
add
dec
and
inc
push
popf
aaa
stc
addr16
sbb
pop
dec
xchg
cwtl
into
insb
mov
push
or
sti
xchg
repnz
xor
int
jne
test
xchg
sub
cmpsb
hlt
mov
lods
test
cmp
push
fmul
sub
mov
fbstp
rcrb
loope
jecxz
add
xchg
ja
pop
bnd
pop
repz
mov
pushf
dec
stos
inc
jns
out
das
sub
push
push
mov
inc
dec
arpl
in
ja
jo
adcb
sti
loope
clc
adc
and
push
mov
out
xor
inc
fs
xor
ret
pop
mov
std
std
xchg
sub
sbbb
je
mov
insl
hlt
or
add
pop
scas
xchg
shl
mov
pushf
jg
lret
dec
cmp
cmc
mov
rcrl
xchg
sub
outsl
cmp
pusha
aad
rorb
xlat
outsb
lret
rolb
test
ljmp
adc
or
cmp
mov
fistps
mov
fldt
add
mov
in
inc
faddp
add
mov
hlt
xchg
pop
cmc
or
push
fwait
jl
add
mov
xchg
cs
dec
xchg
sub
popa
and
aas
jae
mov
mov
pop
xchg
out
sbb
mov
fnstenv
push
ret
pop
mov
daa
mov
pop
shrl
cld
dec
loop
in
aaa
xlat
lret
mov
cli
clc
adc
mov
or
jnp
cmc
mov
cmp
jle
das
sub
mov
rol
mov
shlb
aad
inc
mov
sbbb
jle
sub
dec
push
popf
jge
dec
jecxz
sbb
mov
xchg
out
xor
pop
mov
les
mov
pop
idivb
sub
sbb
ds
inc
fistpl
cld
sbbl
fimull
and
cltd
mov
mov
insb
xor
push
mov
mov
ficoml
stos
lret
gs
cmc
in
lret
cwtl
pop
mov
mov
cld
int
dec
jecxz
jo
sbbb
push
xorl
and
mov
fcomi
mov
lock
popl
out
cltd
xor
cmpsb
and
je
or
lods
xchg
dec
loopne
push
jb
xchg
ljmp
mov
mov
sbb
mov
lods
inc
push
add
mov
addb
insb
pop
dec
loopne
adc
push
sbb
pop
scas
sub
js
scas
leave
xor
not
js
ret
not
jecxz
xor
jne
hlt
mov
dec
dec
loop
or
jp
popa
clc
pop
fwait
jbe
or
das
pop
mov
iret
and
movsb
mov
arpl
rcl
aam
lds
mov
out
or
jp
mov
jge
or
lahf
jge
jl
push
lahf
adc
fbstp
aad
mov
les
test
xor
aas
enter
or
aas
jmp
out
arpl
mov
push
xchg
sub
adc
call
sub
xchg
stos
inc
mov
lret
in
pop
in
mov
aaa
cmp
lock
adc
addl
stc
nop
push
dec
pop
xorl
fwait
test
pushf
xor
leave
ljmp
faddl
pop
mov
pop
xchg
je
movsb
cmp
sti
xchg
pop
icebp
mov
and
leave
movsb
cmp
mov
ljmp
jg
pop
test
std
xchg
push
push
lds
xor
xchg
mov
push
xor
repz
ret
pop
and
lds
in
scas
push
xor
inc
dec
sbb
pop
adc
gs
jns
loopne
stc
call
repnz
push
fs
popl
sbb
xchg
inc
inc
fnsave
aas
aam
push
push
jb
inc
sti
mov
add
adc
outsb
mov
cwtl
das
add
inc
ficoml
mov
adc
xor
lahf
insb
inc
jbe
cmp
dec
loop
xlat
cmp
push
insl
mov
pop
cmpsl
mov
lods
icebp
jae
rclb
dec
loop
movsb
mov
hlt
pop
cmp
ljmp
loopne
fimuls
aam
mov
jo
ja
rolb
fistps
push
ficomps
add
js
sub
frstpm(287
push
fcomps
push
xchg
push
mov
jecxz
mov
outsb
loop
sbb
fadds
xor
inc
mov
sub
inc
xor
adc
cltd
lahf
scas
xorl
cmp
mov
cmp
mov
leave
sbb
scas
mov
fldl
leave
movsl
repz
hlt
cmp
pop
sahf
mov
push
mov
js
jl
arpl
movsb
lcall
mov
testb
imul
mov
imul
cmp
pop
pop
cltd
cmc
int
lret
or
packsswb
stos
pushf
test
test
ljmp
mov
pop
sahf
arpl
les
test
fnstcw
mov
test
es
notl
sub
stos
inc
pop
jne
testl
dec
call
jbe
mov
les
mov
sbb
lds
sbb
cmp
call
add
push
push
mov
push
loopne
jb
inc
jmp
inc
add
insb
xor
xchg
stc
out
mov
xchg
scas
sbb
stc
imul
push
js
xor
mov
mov
data16
mov
lcall
movsb
pop
inc
inc
inc
cmpsl
xrelease
jno
pop
test
dec
xor
dec
sub
mov
mov
and
lret
jl
jnp
sar
and
inc
push
add
add
cmp
test
jns
arpl
inc
int
ret
jo
cmp
mov
daa
ja
js
ret
push
dec
xchg
ret
fldt
or
mov
inc
int
ds
xor
jecxz
and
cmp
mov
inc
xchg
sbb
mov
aaa
pop
xor
push
movsl
adc
shrl
int
add
shll
sbb
out
jbe
lret
int3
jmp
ljmp
push
out
dec
data16
test
fistpl
and
dec
lcall
int3
insl
or
push
xor
mov
add
or
push
fdivrs
lret
nop
sub
pop
mov
shrb
mov
pushf
push
mov
jo
jbe
mov
icebp
mov
addl
lahf
cmp
aam
mov
hlt
sbb
lods
pop
loop
fsubs
mov
pop
incb
sbb
push
sahf
xchg
and
xchg
cmp
jb
or
popa
out
and
out
in
jge
leave
in
xchg
sbb
test
or
data16
faddl
mov
sbb
decl
loop
jle
mov
pop
xchg
jns
sbb
lcall
and
jno
scas
les
sbb
xor
jge
jmp
idivb
cmp
inc
pop
int3
xchg
aad
lret
push
filds
fs
jmp
imulb
push
jp
adcb
test
xchg
cmp
sub
jl
mov
outsl
cmc
popaw
or
and
stos
or
jle
out
dec
scas
int
aas
movsb
fidivrl
or
data16
jg
jne
lds
mov
loope
sub
push
sub
sbbl
scas
fnstenv
xchg
ja
clc
popa
sbb
xchg
mov
mov
jne
repz
pop
push
das
rcrl
loopne
test
hlt
jmp
pop
cmc
push
movb
cmp
xchg
leave
xchg
cmp
xor
mov
scas
imul
push
movsl
add
in
or
jae
and
jg
cmp
jecxz
ss
push
clc
in
aad
push
negl
add
mov
fisubrl
test
aam
sub
mov
fisubs
aad
xchg
aaa
in
aam
inc
repnz
pop
in
mov
mov
lock
jg
and
bnd
out
inc
in
xor
stc
sub
faddl
push
ds
or
nop
aas
loop
sbb
mov
ret
iret
dec
enter
mov
rcll
bound
mov
mov
into
push
xor
sub
test
jg
xchg
orps
xor
mov
pushf
or
divb
scas
dec
push
inc
add
xchg
xor
mov
mov
dec
rcr
or
mov
xchg
icebp
pop
xchg
pop
daa
push
fdivs
push
add
dec
inc
mov
jns
mov
sub
mov
cmp
test
xchg
pop
sub
idivb
mov
pop
xor
inc
or
sub
movsb
sub
ret
sub
aas
push
sub
shlb
mov
or
into
bound
les
lcall
sub
mov
lds
jecxz
pop
push
push
pop
mov
fcmovu
leave
or
xchg
pop
clc
pop
out
push
xchg
inc
adc
cmp
and
adc
cmp
mov
jne
in
arpl
test
out
sbb
cmpb
bound
pop
mov
jno
or
shrb
adc
pop
test
push
mov
std
cltd
pop
pop
and
mov
ss
xchg
pop
leave
jnp
lcall
insl
out
sub
pop
inc
adc
push
and
sbb
arpl
adcl
stos
pushf
or
jle
outsb
ljmp
insl
out
pop
pop
stc
fs
push
inc
and
inc
sub
pop
sub
sbb
push
mov
mov
out
sar
test
mov
out
pop
push
jge
inc
fisttpl
and
and
cltd
push
mov
sbb
mov
mov
pop
dec
and
push
add
nop
push
add
loope
push
scas
lret
mov
add
test
sarb
push
jno
jp
xor
inc
outsl
sbb
jae
icebp
lahf
dec
iret
xchg
mov
mov
mov
mov
push
shlb
pop
data16
mov
fs
outsb
adc
or
cmp
and
loop
jmp
movsb
cmc
movsl
out
das
sbb
pop
inc
mov
mov
add
jns
test
insl
mov
xor
fldt
or
les
jecxz
fnsave
push
mov
cmpsl
xchg
mov
push
test
js
repz
or
mov
test
scas
pop
outsl
outsb
iret
icebp
mov
inc
jp
cli
hlt
push
mov
mov
dec
repnz
dec
inc
add
mov
ret
out
daa
xchg
out
mov
hlt
adc
sub
test
fidivs
push
push
adcb
cltd
add
sub
push
mov
imul
inc
shlb
xchg
stos
mov
cwtl
pop
jbe
sub
ljmp
add
pop
xor
push
xchg
mov
dec
sbb
mov
sub
in
lods
or
xor
repz
jg
fdivs
repz
add
sbb
add
xchg
adc
cmp
in
icebp
nop
pop
lcall
jmp
call
pop
fwait
xchg
dec
ret
jmp
dec
cwtl
and
push
mov
arpl
mov
les
mov
dec
loop
lahf
adc
xchg
pushf
xor
mov
out
xor
stos
bound
xor
inc
cmp
mov
out
push
cli
xchg
inc
push
mov
xorb
mov
and
mov
and
sbb
push
and
bound
ja
sub
mov
clc
mov
popf
mov
xchg
popl
out
jmp
and
into
xor
pop
lock
movsb
mov
cli
xchg
imul
jecxz
mov
sbb
scas
fwait
cmp
test
movsb
idivl
sbb
stos
fwait
gs
and
and
roll
jne
inc
xchg
je
push
cli
xor
lds
jmp
lret
jo
mov
loopne
xchg
or
shrl
shrl
imul
adc
jge
xchg
mov
fidivl
stos
mov
or
das
cli
xchg
xchg
dec
loopne
push
mov
push
out
cltd
xor
pop
inc
fstpt
adc
sbbl
dec
test
pop
sbb
and
in
jns
movsb
imul
mov
outsb
mov
popa
sbb
mov
ja
loop
jno
dec
add
es
mov
pop
std
xchg
lea
pop
mov
ljmp
xchg
push
push
insb
pusha
stos
xor
sub
test
in
dec
adc
jae
insb
je
sahf
jo
pushf
mov
adc
jno
cltd
in
or
inc
fucom
push
nop
daa
inc
out
mov
xchg
and
xchg
fidivl
loop
or
iret
xorb
fs
test
mov
jl
shrl
xchg
data16
adc
hlt
mov
mov
or
into
roll
cmp
clc
adc
mov
mov
jecxz
fildl
push
popf
sub
dec
insl
add
adc
jno
pop
mov
loope
cwtl
lret
ss
add
jmp
xchg
outsb
fidivl
add
lahf
jae
or
imul
sub
stc
jnp
push
ljmp
or
and
sbb
mov
push
push
jae
mov
mov
sub
jle
push
leave
pusha
inc
push
repz
cli
xchg
subb
sahf
dec
or
loope
lods
xchg
adc
insl
lcall
sbbl
jbe
icebp
lds
loope
shrl
ret
add
mov
in
inc
cwtl
add
sub
pop
fnsave
push
inc
adc
dec
pop
inc
andl
sub
jmp
mov
hlt
adc
pop
cwtl
ljmp
add
and
or
cwtl
je
inc
in
jae
sti
inc
roll
mov
mov
adc
push
shlb
stos
push
loope
mov
cmp
mov
inc
leave
pusha
js
jge
add
jb
clc
fs
movsb
test
dec
xor
jg
push
stos
adc
fstpt
pop
bound
pop
sbbb
add
rol
pop
ret
mov
xchg
loop
mov
pushf
rcrl
int3
loop
inc
lods
push
rcll
mov
fnstenv
rclb
shrl
jae
or
xchg
xchg
xlat
dec
repz
test
jg
jno
mov
mull
mov
in
imul
negl
xchg
or
sub
jecxz,pt
outsl
lsl
cmp
test
mov
sti
xchg
flds
add
repnz
ret
or
lods
inc
and
inc
cmc
mov
jge
scas
insl
mov
fcoml
jo
cltd
lret
push
pop
testb
sub
sbb
jns
int
out
xchg
rcrb
mov
bnd
xor
sbb
dec
jno
and
xor
and
test
add
out
or
pop
mov
repnz
mov
bound
insb
pop
out
test
les
mov
jmp
adc
shlb
dec
and
pop
xchg
sub
or
sbb
out
filds
andl
or
xchg
popf
mov
or
dec
jle
out
fwait
mov
test
jl
test
test
aas
nop
ja
adc
bound
shlb
and
bound
mov
xchg
insb
cld
repnz
ret
gs
cmp
lahf
dec
ja
jg
aas
es
cs
pusha
xor
push
data16
push
or
jns
clc
loop
hlt
xlat
add
add
out
inc
mov
shrb
sbb
stos
vminsd
outsb
mov
sub
mov
jnp
sub
setl
xchg
sub
cli
jecxz
sub
dec
mov
push
bound
cld
jge
xchg
mov
sbb
mov
or
scas
cmp
add
jns
xlat
repz
mov
stos
std
pop
dec
pusha
xchg
repnz
and
mov
sbb
stos
test
loopne
push
test
cwtl
mov
outsb
out
push
xor
push
adc
sub
out
fadds
adc
ja
adc
mov
and
mov
lret
stos
push
arpl
cmp
dec
xchg
or
shrl
lret
imul
shll
jge
mov
jne
rcr
jle
jmp
sub
insl
xor
cmpsl
int
test
dec
outsl
jns
cmp
pop
out
jae
mov
lret
rcr
fdivrs
sbb
dec
cmp
jnp
push
mov
sub
mov
mov
sub
mov
lock
aas
sub
push
sub
int3
ss
cmp
pop
lds
and
jno
push
adc
addb
lcall
and
pop
or
mov
sahf
bound
jge
pop
loop
test
shlb
aas
and
inc
mov
pop
hlt
aas
inc
xor
inc
sbb
rolb
add
out
test
mov
mov
out
sub
mov
loope
clc
mov
sub
in
sub
enter
inc
inc
cmp
xchg
imul
cmp
jbe
movsl
push
xchg
or
add
cs
clc
mov
rep
es
ljmp
sub
in
and
rcrb
sbb
or
and
pop
push
adc
mov
sbb
shll
mov
loopne
mov
in
mulb
lods
sbb
and
adc
dec
jnp
arpl
pop
cltd
arpl
push
or
sbb
lcall
mov
cwtl
aas
pop
rol
pop
into
daa
add
call
ficoml
or
cli
xchg
mov
jl
in
or
mov
sbbb
cmp
shl
mov
sarb
and
pop
jp
dec
pop
sub
sbbl
pop
mov
arpl
pop
popa
and
xor
pop
addr16
push
inc
pop
pop
mov
push
push
popf
andb
fisubrs
inc
out
xchg
or
dec
repnz
cs
cwtl
xor
sub
xchg
sub
push
int3
arpl
faddl
sbb
mov
test
inc
fistpl
out
add
mov
repnz
shlb
ss
mov
mov
rorl
mov
xlat
sbb
scas
jno
push
out
and
je
clc
pusha
jnp
mov
js
jge
dec
push
cmp
cmp
je
ja
je
lahf
lret
loopne
mov
sub
mov
icebp
out
and
pop
cmp
fmuls
outsb
cmp
mov
mov
jle
fsubrl
xchg
in
sub
mov
or
call
pop
push
mov
inc
xlat
dec
fcmovu
pop
divb
fisubrl
fisubl
and
pop
imul
jb
pop
sub
imul
subb
push
push
sbb
dec
pop
repz
pop
lahf
adcb
xchg
jl
push
sti
inc
imul
jbe
pushf
mov
lock
pop
xor
jl
fistpll
add
repnz
negb
fs
in
pop
sbb
lahf
lds
push
and
xor
lret
in
xor
in
ja
push
jbe
inc
jp
scas
scas
sub
sti
lahf
xchg
iret
lods
adc
pop
mov
inc
movsl
imul
pop
inc
jae
inc
sub
clc
xchg
and
stos
pop
mov
push
lret
pop
fisttpl
in
sub
loop
outsl
push
or
jge
clc
call
pop
mov
dec
fistps
adc
mov
lock
mov
add
pushf
mov
fisttps
sahf
mov
in
out
hlt
lock
add
cmpsb
fidivl
sbb
repnz
cmp
sbb
ljmp
cwtl
add
call
jle
mov
lcall
leave
in
xorb
lcall
call
xchg
repnz
inc
std
cltd
in
cmc
rcll
dec
btr
push
add
in
cmc
adc
out
cmpsl
clc
arpl
sbb
adc
mov
sti
jo
and
sub
cmpsb
xchg
and
mov
push
mov
add
xchg
dec
out
in
mov
and
in
hlt
pop
stc
sub
and
fsubr
movsl
cmpsl
adc
jge
cmp
fs
cmc
sbb
sub
movsb
mov
jl
or
rcrl
loop
pop
and
das
and
xor
jl
ret
xor
shlb
add
rcr
jns
in
xlat
and
cld
sub
nopl
pop
adc
hlt
or
ss
sub
test
std
and
fwait
test
pop
in
popa
push
xor
mov
repnz
outsl
jne
repz
and
cmpsb
jp
mov
xor
push
cmp
lds
inc
pusha
mov
jl
mov
rcrl
outsl
in
shrl
xchg
mov
and
sbb
sti
inc
push
in
jb
sub
insl
dec
std
inc
jae
mov
xchg
data16
mov
or
sub
in
repz
andb
mov
xlat
outsb
jo
xchg
mov
aad
out
pop
stos
add
into
fs
andb
adc
daa
jle
rcr
sub
mov
cmpsl
mov
andl
out
pop
fcmovnbe
mov
pop
and
mov
pusha
inc
test
lcall
leave
cs
incl
mov
and
insl
incl
scas
mov
sub
popa
xchg
sub
adc
adc
xchg
inc
aam
stos
jne
adc
es
push
adc
call
outsb
ds
fcomps
inc
mov
and
cmp
jecxz
addr16
and
mov
pop
in
lds
add
inc
inc
sub
shrl
mov
add
lahf
sub
mov
mov
mov
pop
inc
adcl
push
in
xchg
stos
push
dec
mov
iret
xchg
mov
rcr
push
adc
ja
pop
xchg
mov
orl
sub
xchg
mov
ret
and
or
mov
aad
out
popa
cmp
ret
add
adc
and
repnz
das
bound
add
sbb
iret
push
popa
addr16
xchg
ds
mov
or
popl
mov
in
mov
stos
xchg
pushf
sub
or
mov
and
inc
mov
adcl
out
test
inc
rcll
fdivs
mov
and
xor
sbb
push
xchg
mov
sbb
adc
or
sub
and
push
push
push
out
mov
sub
jbe
inc
mov
rol
mov
push
dec
shll
sub
mov
notb
ljmp
mov
fadds
cwtl
repz
daa
leave
xor
ljmp
out
pop
jnp
push
pop
mov
xchg
scas
call
or
scas
insb
xor
jp
cltd
repz
sbb
dec
sti
sbb
cli
jo
dec
loopne
jae
dec
mov
data16
lret
fs
stc
mov
adc
mov
lcall
dec
insl
gs
cmp
sbb
xlat
jg
popa
leave
mov
sbb
cs
mov
mov
jno
sahf
fldcw
sbb
or
inc
sbb
test
addb
xchg
dec
lret
dec
mov
std
in
jb
xchg
adc
ficoml
test
test
sbb
insl
gs
mov
addr16
xchg
pop
cmpsb
push
jbe
outsb
fld
popf
into
gs
jp
imul
xchg
push
inc
sti
mov
cltd
xor
jo
stc
stos
scas
rclb
mov
out
data16
pusha
inc
rcll
cmpl
lcall
pop
add
std
test
jle,pt
cmp
faddl
inc
les
cmc
bound
lret
mov
insb
call
sti
hlt
mov
dec
shrl
in
imul
aam
ret
pop
inc
cmc
lea
pop
testl
push
leave
int3
int
mov
or
jbe
mov
sub
dec
std
out
mov
fidivs
fimuls
std
xchg
inc
pushl
and
in
rcr
pop
aaa
dec
xor
mov
mov
xor
stos
popa
stc
test
in
jns
xchg
lods
cmpsl
movsl
pop
ds
cs
sub
imul
jg
gs
ljmp
mov
bound
mov
shl
inc
pop
pop
test
in
mov
ljmp
cmp
movsl
insb
imulb
stos
in
fnstenv
xchg
inc
mov
jmp
push
sbb
or
inc
cmp
xor
les
xchg
mov
push
and
mov
outsl
sbb
inc
mov
imul
in
cmpb
pop
aaa
lea
cli
shr
int3
dec
xchg
shrl
ss
in
mov
adc
les
pop
or
cmpsb
dec
divb
fwait
testl
imul
mov
pop
stc
push
adc
out
test
jg
stos
add
out
pop
stos
mov
xchg
pop
dec
push
sub
stc
gs
pop
push
push
jno
or
sbb
and
insb
in
sub
aaa
adc
inc
and
bound
notb
jmp
into
inc
cmpsb
mov
push
adc
negb
out
shll
imul
push
pop
push
xor
sbbl
popa
push
dec
dec
mov
nop
fwait
test
mov
test
in
mov
mov
int3
mov
inc
jno
andb
ljmp
aad
out
mov
jle
or
test
pop
daa
int3
sahf
and
out
pop
jns
lahf
stos
jnp
mov
enter
adc
xchg
mov
repnz
cmp
cld
jno
lret
stc
leave
mov
dec
loop
js
xor
stc
or
out
pop
fs
insb
sbb
cmp
push
into
mov
jl
lcall
cmp
xchg
mov
adcb
inc
imul
dec
fdiv
mov
xlat
adc
gs
pop
jbe
and
mov
jl
mov
iret
mov
shlb
and
cmp
shll
fdivs
cwtl
rorb
insb
pop
arpl
pusha
jo
stos
dec
xchg
xor
ja
dec
dec
stos
push
or
xchg
mov
rolb
fstpt
fists
adc
jle
arpl
stos
inc
cmc
outsl
mov
cld
icebp
je
push
ficoml
cmp
js
push
xor
lret
jmp
push
xchg
jb
out
mov
fistpl
push
jb
adcl
mov
jp
cmpsl
mov
fs
xor
shlb
imul
fcmovb
arpl
sbb
xchg
sahf
sahf
ret
jge
sub
mov
iret
test
es
xchg
lcall
push
enter
add
es
es
mov
pop
shlb
fnstsw
cli
xor
jns
adc
dec
mov
xor
jmp
jl
popf
xchg
sub
rorb
cmp
das
and
or
xchg
mov
mov
cs
push
adc
ffree
inc
push
xchg
sub
in
cmp
mov
into
push
fcomp
icebp
sub
jp
ds
sub
push
popl
jge
call
lret
es
mov
cli
cmp
clc
jns
out
dec
sub
pusha
call
rorb
daa
xchg
leave
fucomip
sub
jl
mov
js
mov
push
or
scas
negb
ljmp
xor
es
xor
push
xchg
fdiv
dec
jmp
stc
nop
fidivs
and
add
in
subl
or
in
mov
int
in
push
cs
es
ljmp
mov
loop
push
lea
fistpll
mov
ljmp
ljmp
jmp
mov
or
mov
xor
mov
rclb
xor
and
out
add
inc
jl
mov
lret
les
xor
loop
and
std
xchg
mov
pop
mov
mov
test
sbb
popa
sarb
jle
or
sbb
lds
dec
dec
mov
xor
mov
ret
stos
cmpsb
popf
lahf
cltd
mov
dec
fwait
shrl
test
jmp
scas
push
stc
nop
adc
lret
dec
jnp
xor
dec
je
and
inc
adc
mov
cltd
mov
roll
xchg
sti
std
xchg
pop
mov
ja
pop
es
mov
out
lds
lods
mov
cli
popa
xchg
jns
and
fisttpll
es
xchg
jmp
xchg
pop
and
jge
xchg
outsb
imul
cld
mov
xor
mov
sbbl
inc
or
ss
pop
repnz
sbb
iret
mov
cwtl
das
push
aam
mov
sub
sbb
gs
push
mov
enter
push
xor
push
lea
sbbb
repnz
mov
dec
lret
bound
sbb
push
jmp
push
xor
inc
in
sub
mov
add
sbbl
insl
js
mov
ret
stc
rcr
mov
fidivrl
out
push
mov
mov
stos
xor
mov
add
xorl
cmp
cltd
sub
adc
mov
gs
xchg
jl
clc
popl
pop
out
adc
pop
notb
xor
pop
iret
cmp
shrl
inc
fdivrs
sub
mov
inc
fdivr
fsubs
out
cmp
lods
mov
gs
ret
inc
sbb
gs
ffree
xchg
sbb
aas
lock
leave
jns
cmp
test
lret
inc
fcmovne
inc
or
mov
dec
loop
xor
lock
int3
xor
push
pop
scas
xchg
test
inc
lds
xchg
popf
jge
mov
or
shrl
pusha
or
loope
sub
popa
mov
adc
les
inc
jnp
mov
mull
sub
xor
shrb
push
or
pop
push
pop
outsl
push
mov
mov
gs
mov
mov
lods
inc
insl
shrb
pop
pop
aas
push
xchg
jno
lods
scas
movb
mov
mov
dec
into
enter
loopne
push
fucomp
lds
fadd
es
adc
stc
inc
adc
testl
hlt
cmpsb
push
ret
jge
stos
inc
int3
mov
rorl
shrl
jcxz
sub
jno
xchg
cmp
popa
popa
in
mov
xchg
dec
outsl
rcrb
xchg
insl
ret
and
cmc
xor
cltd
test
cld
js
mov
mov
fdivl
arpl
inc
sahf
addl
test
rep
subb
test
pop
cmpsb
pop
xchg
push
int
mov
mov
adc
xchg
xchg
xchg
xor
mov
sbb
movsl
out
sub
mov
sbbb
pop
ffreep
out
test
fnsave
int
pop
xchg
call
sub
sbb
test
enter
scas
inc
outsl
cltd
out
or
cs
lcall
mov
sbb
dec
cmp
shlb
insl
xchg
sarw
cli
jne
jns
cmpsb
hlt
lret
xlat
cmpsb
or
xor
mov
cmp
mov
stc
aam
add
push
clc
or
adc
cwtl
lods
test
and
jmp
pop
dec
mov
dec
push
shl
xchg
in
adc
pop
subl
xchg
or
loop
flds
ljmp
inc
fdivs
inc
fsubrp
xchg
cmp
adc
aas
mov
sbb
hlt
dec
sahf
xor
mov
std
xchg
adc
out
loope
mov
mov
mov
cmpsb
jnp
lret
mov
adc
cmp
push
out
shr
push
out
loopne
mov
xor
int
sub
test
iret
push
push
mov
cs
xchg
rorl
js
mov
inc
adc
mov
das
mov
mov
adc
xchg
xchg
jle
inc
inc
mov
push
jle
inc
dec
push
mov
pushaw
andb
mov
xorl
test
out
repz
int3
mov
ret
inc
fiadds
scas
fldcw
popf
sahf
cli
jmp
ret
xor
loop
lock
and
clc
sbb
ret
mov
les
push
movsb
mov
adcl
in
fcompl
mov
sbb
enter
fwait
lret
clc
xor
jno
das
loope
jg
orb
fisttps
loopne
push
aam
lea
adc
jmp
dec
in
mov
add
cmp
mov
pop
pop
cs
sub
jno
ss
sub
jg
es
and
data16
faddl
push
pop
std
adc
dec
ljmp
cmp
loopne
pop
pop
hlt
mov
pop
hlt
shl
stos
adc
jnp
stc
xor
cmpsl
inc
sbb
xorb
movsl
xchg
xchg
jp
sub
pop
or
cmp
jo
and
jecxz
out
fmull
lods
aam
repnz
les
mov
cmpsl
jns
mov
orl
xorl
xchg
mov
lods
and
mov
test
sub
xor
enter
pop
clc
sub
std
adc
ss
pop
mov
jle
jo
inc
lods
xchg
lahf
xchg
rol
mov
repnz
pause
lea
pop
scas
jg
into
mov
push
lods
popf
scas
jb
loope
push
lods
add
shrb
and
ja
mov
fldt
imul
adc
insb
bnd
iret
lea
adc
jmp
into
je
jo
in
xchg
lds
push
ljmp
popa
and
lods
xsha1
cmpsb
into
push
and
dec
out
sub
fldenv
ret
pusha
divl
jae
fwait
call
sbb
adc
adc
xchg
movsb
sub
aad
cmp
in
add
movsb
aaa
cmc
add
in
sub
nop
and
das
jmp
in
imul
pushf
push
mov
lods
sbb
mov
clc
hlt
xor
jmp
out
icebp
loop
shll
clc
xor
lret
push
xlat
mov
aas
sub
scas
jae
insl
fimull
mov
inc
in
shlb
add
mov
xchg
mov
cltd
xor
das
jecxz
popa
cmp
xchg
imul
mov
push
fistpll
iret
adc
xor
lea
push
enter
lea
int
out
pop
lock
test
adc
es
pop
xchg
lea
test
add
test
mov
xchg
pop
or
mov
pop
mov
mull
test
pop
adc
negl
mov
mov
sub
cwtl
aas
xchg
pop
mov
out
mov
and
add
rcrb
xor
enter
stc
lret
push
rcrb
mov
push
inc
sbb
imul
and
xor
shrb
ljmp
jmp
rcrb
xchg
in
nop
daa
movsb
sbb
push
lds
cmp
xchg
jo
ds
xchg
sbbb
das
inc
fadds
hlt
mov
and
xor
push
push
pop
repz
andb
icebp
and
or
push
jne
or
xchg
sub
push
outsb
xchg
sub
jae
adc
jnp
insl
sti
xchg
jg
nop
daa
out
imul
or
and
cmp
insb
ror
repz
or
add
sbbb
push
loope
test
xchg
or
int
xchg
or
nop
nop
mov
cmc
scas
mov
cli
xchg
and
sbb
add
and
push
sahf
cmp
int
mov
cmpsb
lock
mulb
movsb
cmp
fsubr
xchg
gs
nop
call
int3
arpl
stc
inc
fsubr
push
mov
lahf
arpl
icebp
mov
xor
mov
and
xchg
icebp
das
jecxz
or
jns
in
popf
xor
stc
dec
in
popa
inc
ficoms
std
xchg
test
lret
or
popf
push
sbb
adc
sub
dec
loop
cmp
mov
adc
aaa
into
xchg
or
in
push
in
mov
in
adc
sahf
imul
icebp
bound
cmp
pop
jmp
arpl
jne
mov
nop
daa
test
cmc
mov
leave
shlb
punpckhwd
inc
sti
nop
daa
int3
std
xchg
dec
in
shlb
imul
add
jae
mov
insb
add
xchg
sub
je
xchg
shrl
jb
lds
xchg
sub
lahf
sbb
cmp
push
fsincos
cs
rclb
cmp
mov
mov
push
sub
out
mov
pop
adc
sub
xchg
icebp
cmpsl
lods
inc
add
mov
and
repnz
rcrl
and
xchg
stos
aas
dec
loop
int3
sbb
xchg
or
fistpll
fidivs
in
enter
push
cli
xchg
inc
ljmp
mov
fdivp
mov
pop
mov
outsb
push
js
inc
iret
data16
bound
popf
aas
push
nop
daa
imul
jo
pop
lds
es
jecxz
sbb
popf
xor
xor
jbe
cmpsb
out
fcoms
xchg
fs
xchg
sub
test
fucom
fbstp
out
xor
lcall
sub
daa
push
mov
xor
iret
ds
mov
sub
push
xor
inc
jo
hlt
mov
stos
inc
es
ret
push
inc
rcrl
dec
loope
lcall
cmp
pop
pop
icebp
jae
in
mov
out
loope
insl
add
add
xor
movsb
cmp
xchg
sub
cmp
mov
or
push
xchg
aaa
cmc
mov
mov
or
xchg
sub
and
mov
aad
in
loop
push
pop
pop
xrelease
add
fistl
pusha
imull
dec
jle
xorl
pushf
xor
mov
mov
fcoml
outsl
jnp
mov
popa
pushf
testb
out
adc
fadd
mov
idiv
xor
cs
out
sbb
es
xor
cmp
sub
cs
out
aam
inc
push
add
or
jl
mov
insl
movsl
mov
xchg
add
push
adc
fistps
add
mov
sbb
out
inc
stos
inc
or
imul
push
aam
iret
loopne
out
lock
movsb
movsb
jae
nop
daa
int
cmp
dec
pop
mov
add
iret
xor
mov
push
sahf
ret
sbb
jne
rolb
fisttpl
pop
sbb
pop
sub
pop
dec
out
fs
imul
aas
inc
in
jl
in
js
xchg
push
insb
lret
enter
dec
adc
cmp
cltd
or
xchg
sbb
mov
push
loope
lods
push
popf
movsb
cmp
pushf
ret
push
dec
xchg
mov
push
out
lods
rorl
scas
xor
out
lds
das
and
mov
addb
add
scas
and
cmp
out
or
dec
loopne
sahf
ret
addr16
js
or
fdivl
mov
jge
lods
mov
lahf
stos
je
cmp
sbb
adc
inc
aad
xchg
pop
and
test
cld
pusha
repz
test
or
adc
es
insl
add
add
cli
andl
test
or
arpl
pop
sbb
sub
decl
jecxz
pop
sub
jg
xchg
and
dec
dec
push
orl
xor
or
out
hlt
sbb
mov
adc
out
cld
sub
sahf
repnz
mov
js
sub
negb
lock
add
ds
fwait
ss
push
divb
push
jg
cmp
pusha
mov
sbb
popa
jnp
dec
call
push
inc
pop
inc
bound
ret
idivb
arpl
push
cmp
xor
icebp
or
push
pushf
xor
jecxz
push
cltd
push
jmp
test
xchg
daa
inc
dec
mov
jg
repz
mov
imul
jmp
lods
scas
inc
xlat
and
inc
push
and
popa
mov
inc
filds
push
loope
adc
mov
xchg
cmp
push
gs
sti
faddl
cmpsb
arpl
and
jns
mov
fdivrs
pop
xor
push
hlt
cmp
jo
sbb
or
clc
mov
lea
arpl
cmp
sub
sbb
or
adc
or
push
mov
mov
dec
lret
lret
dec
popf
rcrl
test
test
pop
lahf
cmpsl
add
inc
fwait
iret
and
inc
popf
xlat
call
and
sub
cmp
add
test
subb
imul
cmp
dec
and
test
popf
cmpsl
ds
dec
ret
sub
dec
cld
xchg
mov
scas
and
stos
xchg
inc
pop
call
in
ss
movsl
xor
sub
lret
sub
mov
xchg
mov
pop
bnd
dec
std
int3
dec
lea
pop
mov
or
fwait
mov
adc
cmp
jmp
or
jae
dec
cmp
dec
fdivs
bound
ret
cmc
dec
in
mov
push
in
test
in
imulb
xor
rcl
jl
ljmp
or
daa
mov
and
mov
int3
das
inc
imulb
adc
pop
add
push
cmp
loopne
hlt
outsl
inc
cs
fidivrs
jae
mov
mov
fstl
or
mov
add
jns
sbb
xor
fistpl
loope
iret
andb
mov
mov
psrad
enter
sti
dec
movsb
clc
aaa
dec
cmp
int
rcrl
inc
jbe
pop
adc
push
adc
sarb
add
inc
fcomi
or
ds
push
jb
inc
cmp
lahf
mov
cmpsl
xchg
mov
push
jl
jno
mov
mov
sbb
sub
add
sub
push
orb
cli
xchg
mov
loopne
stos
aam
jne
es
scas
mov
sub
loop
test
cmpsl
sbb
jb
mov
mov
jmp
outsl
xor
jmp
scas
ljmp
std
jle
pop
mov
sbb
mov
or
jbe
leave
int3
xor
xchg
mov
push
rol
pop
mov
sbb
xchg
mov
push
in
fstpt
shl
or
mov
lds
xor
in
push
add
xchg
mov
push
test
rcr
outsl
test
arpl
mov
mov
and
mov
push
dec
imull
andl
pop
mov
out
sbb
push
pop
pop
cmc
xor
mov
scas
jge
out
xchg
adc
mov
addb
repz
outsl
seta
mov
jecxz
mov
in
pop
stos
iret
push
adc
jle
inc
cmp
inc
lret
xchg
testb
inc
and
add
cltd
jge
dec
repnz
in
pop
add
out
add
outsl
mov
out
adc
adc
pop
insl
xchg
sbbl
nop
outsl
adc
ficompl
mov
mov
out
dec
mov
or
pop
push
out
and
push
fsubrl
add
xchg
fldenv
enter
mov
and
jne
fcoml
jae
leave
int
push
sahf
jg
xchg
into
lea
into
mov
inc
push
ss
pop
jg
je
cmp
jl
in
shll
aas
scas
enter
iret
shlb
shrb
inc
sahf
push
jae
icebp
movsl
mov
pop
ja
or
sbb
jbe
lret
or
je
add
cmp
call
add
xlat
outsb
out
outsb
aad
les
imul
dec
addl
xchg
fcomps
adc
jge
imulb
ja
push
sub
cmp
push
and
adc
sub
rcrb
cwtl
pop
pop
subl
sbb
popf
push
xor
je
mov
push
insb
or
cmpsb
adc
mov
test
push
mov
loop
or
cmp
js
fnstenv
lods
sub
shld
dec
lods
cmp
jp
add
adc
jmp
addr16
push
outsl
sub
test
mov
int
lea
xlat
sti
mov
or
js
pop
hlt
in
sbb
ja
or
cli
dec
sbb
int3
cmp
jmp
movsb
sbb
sub
pushl
pushf
ret
pop
xor
pop
and
mov
push
xor
cmp
pushf
enter
jle
dec
sub
pop
arpl
xchg
sarb
cmp
mov
pop
loope
mov
push
xchg
dec
add
mov
sahf
inc
lods
iret
cwtl
jg
dec
inc
lods
push
push
call
cwtl
jp
movhlps
sbb
adc
movsb
inc
xchg
push
cli
push
rol
lret
enter
loope
mov
mov
xor
int3
fcomi
sub
jns
inc
sahf
ret
pop
jno
fnstenv
sub
pop
imul
mov
lcall
push
cli
xchg
sbb
dec
pop
leave
xor
sub
and
jb
repz
and
pop
loope
mov
cmp
lods
push
sub
sbb
stos
mov
push
lods
test
jle
shll
cli
jne
rclb
push
dec
movsb
mov
clc
sbb
notb
cmp
in
nop
mov
adc
sub
mov
in
int
mulb
xor
out
decl
push
push
xchg
scas
iret
daa
pop
ljmp
popf
cmp
dec
outsb
mov
sub
in
lret
cld
push
xchg
sub
repz
xchg
and
mov
adc
sbb
pop
pop
cmp
mov
jle
push
push
lock
inc
mov
dec
loop
leave
fxch
out
out
or
mov
cmc
inc
or
movsb
xor
push
jmp
sbb
js
pop
cltd
cld
adc
addr16
std
loop
scas
lret
jae
pop
dec
in
fwait
dec
das
sub
pop
pop
addl
sbb
bound
lods
push
jge
lret
dec
std
xchg
jnp
cmpsl
clc
push
push
cmpsb
cmp
shrl
cmp
xchg
int
lock
ds
cmp
dec
loop
stc
adc
pop
cmp
les
inc
rcrl
mov
loop
popa
adc
sbbb
inc
jecxz
test
jg
hlt
cld
mov
stos
sbb
out
dec
lret
jle
or
xchg
movsb
pop
push
jmp
push
lods
xor
incb
pop
iret
or
add
popa
ja
jecxz
test
pushf
fnsetpm(287
dec
lods
fidivrs
arpl
dec
adc
push
inc
lret
pop
mov
adc
xor
or
shll
stc
xorb
pop
lock
ss
add
adc
in
pop
cmp
mov
aam
test
xchg
fisubl
sbb
jbe
inc
cmp
mov
add
stos
push
lcall
mov
mov
xchg
fmul
std
ret
or
clc
mov
pop
ret
fistps
and
xchg
jo
aaa
popf
pop
mov
xlat
xor
xor
fldpi
orb
leave
mov
lock
adcl
or
movups
or
lret
adc
mov
or
dec
xor
ret
sbb
nop
mov
mov
int
fdivl
push
pop
addr16
jne
push
jae
and
cmpsb
cmp
mov
xchg
insb
cs
inc
add
stc
scas
sub
in
daa
inc
mov
into
cmpsl
fnstenv
jbe
pop
aad
mov
adc
cmp
add
jmp
jne
cmpsb
cmpsb
mov
inc
sub
pop
test
jg
leave
xchg
movq
jnp
jge
xchg
das
ljmp
adc
jns
fidivs
add
push
les
jge
mov
xor
aas
push
stos
imul
or
in
xchg
push
jg
pop
mov
adc
cmp
adc
cmovb
fnsave
push
push
pop
andb
ss
cmp
icebp
imul
inc
mov
rcrl
pop
xchg
sub
sub
pop
inc
xor
inc
sti
data16
sub
dec
fidivl
xchg
mov
sub
jae
add
fwait
ret
mov
in
mov
fs
inc
data16
test
add
lret
push
dec
movsb
push
rclb
push
xlat
data16
jg
inc
inc
add
sbb
dec
pushf
rcl
pop
fldenv
cmp
push
push
xchg
mov
pop
lock
xchg
je
test
xchg
fbld
stos
pop
cltd
and
dec
std
test
call
inc
int3
inc
outsb
mov
adc
mov
lea
xor
movsl
jo
ss
xor
fistl
dec
scas
cmp
or
insb
dec
push
sbb
in
shl
enter
fs
cmp
cmpsl
mov
push
xor
jne
xor
mov
aad
lcall
in
mov
sbb
jno
xor
jo
jne
aam
andb
xor
pop
repz
in
cmp
das
push
cmp
int
mov
shrb
sub
and
mov
cltd
arpl
enter
stos
cwtl
xor
or
adc
mov
pop
inc
arpl
scas
call
int3
mov
lods
nop
imul
out
and
lcall
std
outsb
lds
jb
cmpsl
mov
mov
lds
cs
jmp
inc
test
adc
mov
or
sti
sti
sub
jg
out
fdivs
jl
add
mov
adc
fwait
pop
jno
dec
aaa
sbb
adc
sub
scas
push
mov
orl
adc
mov
movsb
bound
add
lea
xchg
jns
imul
aad
mov
mov
push
sub
pop
adc
jl
orl
ret
pop
xor
out
adc
cli
or
add
xor
add
xchg
pop
mov
shll
inc
pushf
seto
pusha
jb
cmp
mov
sub
test
fdivrl
push
fbstp
fwait
sub
notb
test
push
sbb
leave
fwait
stos
push
insl
sub
lret
inc
sbb
std
call
pop
divb
out
lods
adc
cwtl
into
int3
push
or
outsb
leave
int
jno
dec
mov
mov
sbb
jg
lds
and
es
push
mov
pop
repz
mov
lahf
mov
xchg
sbb
ret
pushf
xor
sub
inc
cmc
cmp
sti
insl
sbb
mov
push
pop
mov
out
stos
sahf
jmp
test
jb
sbb
cwtl
andb
inc
lcall
inc
sub
push
aad
call
pushf
mov
mov
push
les
stos
ficoml
xchg
testb
imul
or
int3
jge
adcl
test
xchg
scas
cs
adc
mov
mov
push
mov
nop
out
test
sbb
jmp
and
cld
jl
or
lds
sub
or
ret
dec
je
pop
jecxz
xor
fs
enter
push
push
cmpsl
adc
or
into
xor
mov
cmp
jle
push
inc
mov
jne
cmp
orb
imulb
fisttps
ret
inc
adc
push
je
lods
mov
in
mov
cmp
xchg
add
sbb
mov
xor
pop
das
cmpsb
mov
sub
mov
rorl
stos
xor
faddp
das
inc
dec
pop
lods
in
sarb
push
ljmp
lock
into
dec
pop
push
aaa
fwait
lock
xor
cmp
mov
push
out
lods
ds
out
jle
push
push
sub
test
inc
fs
out
test
out
in
out
rol
aas
cmp
out
loopne
mov
or
inc
and
xlat
sbb
jne
mov
adc
jle
dec
push
lock
pop
sti
stos
dec
mull
bound
sbbl
push
push
push
inc
mov
inc
jmp
lock
cltd
test
inc
call
es
cmpsb
inc
pop
cmpsl
leave
xchg
stos
cs
and
and
addr16
insb
dec
mov
mov
shr
sbb
mov
pop
rclb
fs
xor
push
mov
cwtl
xor
pop
scas
pop
add
sub
push
ja
push
pop
xor
shlb
dec
mov
daa
inc
push
sarl
insl
and
add
mov
fcomps
repnz
and
mov
xchg
mov
dec
fldenv
jge
dec
pop
cwtl
movsb
testb
daa
mov
pop
cltd
push
pushf
fstpt
stos
insl
mov
lret
in
scas
mov
push
push
push
enter
sub
js
xor
out
push
mov
js
mov
add
out
cli
cmp
mov
inc
icebp
xchg
mov
lcall
lods
add
stos
nop
inc
popl
loopne
mov
lock
mov
ret
imul
push
sub
pop
mov
out
insl
rclb
push
pop
cmp
mov
ficompl
push
pop
jb
pop
lods
dec
lcall
data16
out
scas
rcll
xchg
adc
add
or
mov
mov
jo
mov
notl
jbe
shll
mov
cmpsl
push
add
and
or
cmpsl
ret
data16
cmp
cmp
add
pop
shlb
dec
out
lcall
sbb
mov
in
jecxz
xor
ud1
push
jmp
xor
cmp
or
jo
pop
sub
xlat
and
lods
lea
xchg
add
cmp
loop
xchg
fisubrs
adc
xchg
and
xor
cmpb
mov
daa
leave
push
xchg
call
fs
aad
fstl
xor
pop
mov
mov
or
lcall
repz
sbb
jae
frstor
or
adc
xlat
roll
in
aam
jge
movsl
mov
in
cmp
aas
pop
add
in
mov
cmp
cs
add
mov
ficoml
xlat
sub
jle
cmp
push
and
push
test
xchg
add
mov
loopne
andl
jns
mov
ja
imul
movsl
ja
xchg
movb
mov
sbb
mov
cld
jae
out
daa
jmp
test
stos
in
push
mov
fisubs
lds
xor
and
loope
ja
xchg
mov
stc
cmc
sbb
cli
lods
mov
insl
mov
mov
nop
or
in
mov
sbb
add
jne
cli
arpl
movsb
and
in
adc
addr16
xor
mov
mov
pop
loopne,pt
adc
test
test
jns
jg
imul
nop
pop
add
add
mov
mov
icebp
movsb
and
sub
in
xchg
jns
fdivrs
dec
mov
fistps
xchg
test
test
gs
roll
jbe
cmpl
ljmp
push
cmpsl
ljmp
mov
jb
enter
mov
ficoms
lahf
das
mov
popa
mov
adc
jge
xor
jns
xchg
adc
xchg
mov
xor
ficoml
pushf
mov
dec
lcall
sbb
inc
pop
cmc
fstps
lods
and
jbe
scas
mov
clc
cwtl
sbbl
xor
ds
adc
fwait
call
push
in
dec
dec
fiadds
cli
repnz
push
add
sahf
adc
inc
jecxz
jo
fwait
aas
mov
push
inc
sbb
fisubrs
mov
add
cmp
cli
int3
adc
fs
fisubrl
into
inc
int3
jbe
lock
pushf
outsl
cmpl
dec
cmp
push
pop
mov
pop
inc
xor
jmp
add
shrb
aad
out
int
add
sahf
mov
xchg
js
push
test
mov
fsubl
xor
mov
mov
push
insb
cmpsb
lea
sub
sbb
cld
xchg
gs
adc
inc
gs
ficoms
vmwrite
sahf
stos
xor
cmpsl
inc
and
push
enter
pop
ret
jae
xchg
mulb
mov
xchg
and
lret
cmp
xor
cmp
sti
adc
and
pop
stos
repz
mov
fwait
popl
xchg
movsb
inc
fstpl
in
std
jg
mov
dec
shlb
addr16
push
mov
sub
or
or
add
inc
ficomps
xor
ficompl
dec
loopne
sub
pop
popa
ljmp
hlt
icebp
sbb
rcrl
mov
xchg
jle
pusha
lock
fsubp
xchg
mov
movl
movsl
push
clc
clc
jmp
inc
push
mov
arpl
sbb
dec
loope
add
cltd
mov
fisubl
fcmovnb
in
mov
mov
xor
rcll
add
mov
in
adc
pop
cmpsl
dec
adc
test
fdivr
fidivs
jbe
outsb
xor
lods
je
loopne
sbb
mov
fnstcw
push
and
and
cli
adc
inc
cmpsb
add
fsubs
mov
push
jne
or
cmp
stc
sub
pop
add
in
mov
rorl
out
jecxz
arpl
pushf
add
lods
out
fisttpl
lock
push
xor
aaa
jg
push
mov
jb
movsl
ds
xchg
add
dec
in
push
das
in
repnz
stos
outsb
xor
js
jnp
sarl
jge
incb
jge
pop
std
cld
mov
sbb
mov
jnp
mov
aas
sti
inc
shr
ret
mov
ficoms
arpl
movsb
jo
xor
inc
sbb
add
push
jae
xor
cltd
xorl
test
scas
pop
sub
sub
inc
bswap
testb
cltd
mov
xor
mov
lahf
cld
fcomps
mov
insb
std
cmp
mov
subb
pop
xchg
popa
int
sbb
jmp
jnp
xlat
dec
push
lcall
popf
out
pop
imul
cltd
add
mov
push
and
adc
sti
and
and
lret
bound
fisttps
lods
jne
xor
loop
xor
loopne
repz
aam
xchg
pop
push
repz
sbb
xchg
test
adc
jo
mov
rorb
sub
push
in
je
xor
cmp
jae
add
pop
repz
sub
das
dec
mov
movsb
popf
int3
insl
add
cmp
and
jae
and
icebp
cmpsl
mov
sbb
sbb
shl
fdivl
lea
test
insl
loopne
sub
daa
jp
sub
lar
loop
xchg
jno
cmpsl
testl
or
mov
loope
int
jecxz
cwtl
out
icebp
mov
mov
ss
psadbw
jle
std
es
pushf
out
popf
scas
adc
sti
xchg
daa
adc
movl
insl
cmp
xor
pop
jmp
mov
loope
xor
enter
push
data16
cwtl
je
sbb
pop
sbb
and
cmp
xchg
xchg
mov
jl
sub
vmovupd
aam
xor
xor
addb
lar
ficoml
sub
lahf
xchg
mov
sbb
scas
inc
test
push
movsl
rclb
mov
repz
sub
sub
xor
aaa
arpl
mov
dec
push
add
xchg
les
pushf
sbbl
insl
sahf
add
pop
pop
ss
mov
xor
popa
outsb
push
divl
jb
jecxz
ret
subl
movsl
or
dec
adc
jge
fs
mov
push
and
push
inc
inc
mov
ficomps
lea
aam
sbb
push
mov
xor
outsb
xchg
and
mov
cld
xchg
inc
bound
lahf
sbb
cwtl
cs
cmp
mov
jno
inc
fstpt
pop
fisubrl
enter
shlb
inc
dec
jp
sbb
sub
pop
cmc
imul
nop
repz
sub
adc
push
xchg
dec
loopne
push
inc
and
mov
fstp
xor
insl
rorl
jns
mov
inc
popf
jno
frstor
into
inc
hlt
pop
sub
dec
out
dec
out
repnz
sbb
insb
ret
jge
fs
out
sahf
fisttpl
addr16
out
xchg
fisubrs
int
gs
mov
into
xchg
and
pop
jbe
inc
pop
adc
jo
aam
in
jb
adc
or
pop
jb
mov
jo
nop
push
cwtl
sbb
repz
inc
outsb
loopne
mov
test
jbe
aas
mov
iret
lret
stc
sti
pop
shlb
sub
push
in
insl
pop
dec
add
loopne
testb
outsl
inc
cmp
add
mov
inc
and
lea
push
jmp
sbb
shl
add
inc
jns
inc
mov
ret
sbb
movsl
pop
sbb
ss
popa
pop
cmc
pushf
cwtl
cmc
inc
inc
mov
jmp
lods
cli
aad
rorl
and
ret
cmpsl
or
loope
xchg
sub
xlat
sub
cmp
sub
lea
repz
and
lea
sahf
add
enter
cmp
ja
sbb
inc
cmpb
test
imul
stc
mov
fxtract
add
mov
mov
cmp
xchg
mov
lods
popf
jmp
aad
ficoms
stos
in
scas
leave
test
mov
mov
mov
mov
pop
cli
push
mov
sbb
inc
out
push
lods
dec
cmp
add
iret
mov
jns
fdivl
sub
sub
xchg
add
xchg
push
xchg
in
sti
lea
fidivl
and
add
setge
or
hlt
jnp
cli
nop
sarl
and
fisttpl
fndisi(8087
and
mov
loope
mov
js
jbe
rclb
aad
shrb
ret
icebp
add
cmp
pop
sub
data16
bound
jo
sub
pop
inc
data16
lret
xor
add
dec
pop
cmc
jns
xchg
dec
and
cmp
dec
pop
stos
int
jl
mov
or
dec
add
jp
test
out
xchg
clc
pushf
stos
mov
movsb
push
je
jge
jmp
adc
xchg
and
int
cmp
cmp
pop
jae
outsl
add
pop
ds
mov
iret
mov
les
cmpl
not
xchg
sbb
popf
or
orl
jb
pop
jge
lret
imul
xor
mov
stos
jge
clc
or
call
mov
std
loop
jp
mov
sti
shlb
cwtl
xor
push
lds
cs
pusha
pusha
mov
cmp
jo
daa
push
sbb
repnz
pop
fmulp
add
jns
fnstsw
ja
cwtl
repnz
cmpsl
lcall
push
call
xchg
sub
pushf
hlt
cwtl
cmpsb
sbb
sub
pop
cmp
mov
cmp
inc
push
into
setns
xchg
mov
push
repz
push
das
sbbb
mov
shlb
or
repnz
mov
scas
inc
inc
stos
sbbb
jmp
mov
inc
js
and
push
fwait
inc
in
fs
adc
frstor
js
and
and
mov
inc
gs
dec
xchg
xorw
fiaddl
fnstcw
add
mov
mov
jecxz
pop
push
cmp
shrb
dec
dec
ficoml
or
pop
sahf
and
and
jae
lret
sar
or
mov
mov
mov
fcmovnb
jb
pop
movsb
loope
fmuls
fnstenv
jecxz
and
je
jno
fsubp
and
xor
xor
stos
les
jae
push
nop
daa
subl
push
and
nop
fildll
lods
inc
popa
add
repz
push
shlb
or
test
ret
sub
mov
add
pop
lret
rcll
xchg
test
fsubrs
cmpsb
sbb
mov
sub
out
faddp
inc
jg
jbe
push
lods
cmp
dec
pop
pop
pop
ret
sahf
lahf
shrb
mov
iret
out
jns
loope
xchg
inc
or
scas
push
jb
adc
pusha
inc
jae
nop
movsl
jmp
add
pop
push
jp
mov
int
sahf
addl
imul
lret
fs
mov
filds
pop
insl
clc
sbb
loopne
fidivl
sub
adc
clc
and
cmp
inc
js
inc
pop
pop
push
jb
jns
xor
or
lds
pop
lret
cmp
sti
inc
adc
add
test
push
std
lods
xlat
ds
outsl
push
flds
ja
leave
inc
leave
lcall
js
lret
jg
push
stc
xor
loopne
fiaddl
sbb
in
loopne
or
cmp
jp
mov
les
and
mov
adc
sarb
push
or
mov
mov
xchg
scas
push
sarb
je
fistpl
insl
test
rclb
jge
pop
idivb
mov
or
js
jp
inc
sbb
dec
dec
data16
xor
clc
or
sbb
cs
adc
inc
arpl
jo
jmp
ja
adc
loop
in
mov
sbb
xor
ljmp
mov
pop
loopne
jnp
sub
xor
les
and
fwait
sub
enter
mov
nop
jb
pmulhuw
loope
adc
gs
mov
mov
mov
nop
mov
xchg
shlb
mov
cmp
add
rcl
ret
or
aad
nop
test
pop
sahf
and
xor
push
push
fiadds
or
inc
xor
add
insl
lds
lret
xor
xlat
dec
ror
push
adc
jo
das
mov
xchg
pop
jno
or
insb
pop
outsl
lds
sub
or
jbe
aas
shll
jle
pop
hlt
or
push
outsb
pop
sub
insl
add
mov
push
sbb
scas
leave
fnop
imul
inc
je
pop
iret
out
add
mov
aas
push
sbbb
xchg
mov
sbb
mov
push
out
dec
andl
lahf
std
mov
adc
cmp
xor
and
adcb
and
aam
lds
sub
rorl
mov
mov
les
sub
pop
xchg
test
sahf
loopne
and
jl
lock
andl
fidivl
scas
movl
in
mov
ret
repz
sbb
push
out
sarl
lret
shlb
pop
fidivrl
cmpsl
or
in
push
and
jb
dec
sti
add
jne
push
push
rcrl
lret
fildll
in
bound
xor
fst
daa
addr16
loopne
pop
mov
xchg
jge
adc
imul
adc
lcall
aas
inc
or
push
jmp
mov
jb
test
stc
popa
insl
and
rorb
popa
sbbl
lods
pop
addl
xchg
dec
mov
test
mov
pop
or
cmp
add
push
jecxz
insb
lcall
loop
cmp
mov
lcall
jnp
sbb
jo
dec
adc
in
sbb
outsl
mov
out
stos
fdivrs
jno
fs
filds
add
orl
and
cmpl
mov
mov
insl
popf
or
adc
mov
outsl
pop
jne
arpl
inc
test
push
into
fisttpl
test
push
into
lcall
aaa
out
repz
push
push
movsb
aas
adc
sub
sub
inc
rcll
or
cs
jl
or
add
call
or
mov
xchg
sub
movb
mul
xor
sbb
mov
jbe
cltd
xchg
in
sub
int3
popa
idivl
push
jle
insl
jmp
movsl
or
scas
jle
mov
push
ss
xchg
sbb
movsl
xchg
pop
in
mov
xchg
jnp
lock
mov
jmp
in
jno
mov
shrl
mov
lds
sbb
out
test
adc
cltd
pusha
gs
fstpl
inc
je
jnp
rol
leave
pushf
adcb
ret
push
pop
jmp
andb
shrl
pop
sahf
xor
or
bound
or
mov
cld
pop
into
fsubrp
mov
adc
xlat
mov
pop
sbb
sbb
sarb
xchg
sti
or
sbb
imul
int
mov
repnz
gs
scas
sub
into
mov
pusha
ljmp
call
cmp
sbbb
call
push
fstps
mov
aas
mov
nop
jmp
jnp
xchg
ljmp
dec
adc
shrl
or
movsl
out
add
add
mov
aad
pop
nop
popf
adcb
lret
cmp
inc
lea
cmp
adc
pop
stos
mov
inc
into
test
or
addr16
xor
rcr
test
xor
dec
mov
pop
ret
jp
mov
repz
out
xchg
cmp
add
xchg
sub
jmp
push
push
loopne
in
lret
jns
xchg
push
in
loopne
and
jno
test
insl
movsl
mov
addl
rcll
int3
sti
std
jb
sub
sbb
dec
jecxz
push
mov
inc
push
fdivrl
scas
incl
nop
or
pop
sub
stos
cmp
xchg
dec
add
mov
cmpb
mov
mov
add
js
bound
mov
out
lret
in
sub
dec
ja
adc
adc
icebp
cmp
call
cmc
arpl
sbb
dec
mov
lret
xor
jmp
mov
fwait
dec
xchg
int3
xlat
inc
lret
shl
push
rcr
movsb
popa
icebp
daa
in
cmp
out
imul
xchg
mulb
jne
xchg
arpl
xchg
or
push
hlt
jo
notl
sub
adc
icebp
fmuls
cmc
dec
add
sub
mov
sbb
dec
std
cltd
xor
nop
xchg
addr16
push
int3
xor
mov
jmp
dec
in
pop
cmpsb
and
iret
push
lods
arpl
lea
push
or
or
xor
outsl
add
add
adc
mov
push
ret
and
adc
add
in
orl
or
mov
sub
lock
iret
add
push
jo
cmpsb
out
xchg
arpl
gs
xchg
cmpsl
cmp
scas
cs
pop
or
lea
mov
mov
jp
sub
es
dec
and
je
nop
daa
out
sub
xor
vcvttss2si
inc
xchg
leave
loopne
jb
cmp
jge
push
shl
aaa
fchs
inc
jmp
cmp
inc
pop
inc
sbb
bound
addr16
mov
in
push
sbb
loope
or
test
inc
fdivrl
bound
cmp
dec
mov
outsl
jb
xchg
push
pusha
add
sbb
xlat
push
out
or
mov
add
jno
jle
dec
movsb
pushf
bound
adc
or
jecxz
stc
push
jnp
outsb
pushl
into
and
add
mov
push
imul
sbb
enter
xchg
fs
popa
shlb
incl
mov
push
jbe
xchg
stc
nop
insb
les
xchg
inc
mov
es
sbb
out
je,pn
fmull
sbbl
jp
mov
xchg
mov
inc
pushf
into
dec
push
cmp
icebp
test
or
pop
arpl
push
xchg
inc
adc
jge
push
testb
mov
sub
push
test
test
rorb
jmp
mov
xchg
jge
jbe
mov
or
fstpl
rol
mov
mov
insb
dec
dec
aas
aas
and
pop
pop
loopne
dec
add
jl
or
cmp
jne
outsb
push
or
dec
mov
divl
test
nop
mov
roll
scas
es
js
or
cli
int
xorl
push
scas
fisttpll
xor
xor
fldenv
int
adc
fldenv
andl
aad
pusha
stc
sbb
jo
push
mov
popa
jns
cmp
sbb
data16
jno
xchg
push
push
repnz
mov
shl
mov
mov
or
xor
jnp
sub
aad
insb
sub
mov
mov
cmpsl
jo
pop
cli
loop
or
pop
data16
sbb
sub
enter
scas
jmp
ds
adc
sub
es
push
mov
sbb
aaa
into
add
fwait
cld
cli
cmpsl
dec
push
pop
mov
pop
xor
fsub
cmc
test
daa
push
popa
or
push
testl
xchg
cmp
bound
fistpl
lahf
and
nop
rclb
mov
push
aam
lock
les
ljmp
pop
pop
push
pop
xchg
jae
or
repz
pop
sahf
xchg
loopne
subb
cmc
shrl
jl
inc
jnp
lds
in
or
sahf
sahf
dec
xchg
jle
mov
into
and
adc
addr16
mov
mov
sbb
push
icebp
xchg
leave
movsb
inc
loopne
sub
test
xor
push
pop
inc
jno
ss
out
addr16
and
hlt
sbb
and
fimull
lret
and
out
and
jmp
mov
lds
mov
jne
push
fnstsw
lock
and
imul
rorb
add
jbe
stos
pop
hlt
faddl
sub
movsl
es
test
cmp
xchg
in
dec
mov
ret
lahf
mov
jecxz
adc
mov
pop
repz
sarb
mov
sub
scas
sarl
mov
fistpl
fnstenv
jae
xchg
btr
sub
in
ret
inc
sbbb
pop
out
inc
std
sbbb
xor
mov
cmp
pop
test
mov
mov
jmp
stc
nop
xchg
cmpsl
out
es
fidivs
pop
xchg
xchg
and
mov
adc
inc
xchg
cmp
out
fsubrl
xor
mov
lret
into
cs
sub
rol
fcoms
aam
rcrl
pop
js
xor
sub
aas
aad
aaa
xchg
jo
pop
int
xchg
mov
dec
dec
pusha
clc
push
add
imul
ret
pop
jge
stos
adc
dec
loope
pop
movsl
and
xchg
lods
xchg
arpl
cmp
sbb
js
pop
icebp
lea
dec
lds
xchg
sub
fnstenv
in
shll
jae
and
sbbb
fmull
sub
insb
mov
mov
fisttpll
xor
xchg
inc
fldenv
sbb
dec
jge
addl
pop
movsl
cmp
pusha
popf
sub
cs
jno
and
xchg
mov
shl
push
mov
mov
gs
dec
and
dec
dec
loopne
decb
xor
adc
inc
push
call
ret
les
push
jno
or
hlt
lods
push
pusha
dec
cmp
out
lahf
adc
fisubs
clts
fisttpll
push
xchg
in
lret
adc
jecxz
push
adc
cmp
lock
adc
ret
lods
jle
fwait
and
or
ret
and
push
test
jne,pn
jmp
fcoml
cmp
out
int
jecxz
xchg
mov
jne
or
push
jbe
mov
or
mov
int3
repz
cwtl
mov
call
daa
iret
mov
les
push
xor
cld
outsb
fwait
sub
lahf
and
dec
lods
xor
js
jl
adc
popf
jo
mov
hlt
cmp
mov
fiadds
jmp
adc
xchg
seto
into
ret
cmc
mov
data16
cmp
pop
scas
popf
jbe
out
jg
addb
fnstsw
movsb
push
jne
sahf
fldl
xchg
jg
addr16
in
sbb
add
hlt
or
scas
nop
lret
or
imul
into
jae
add
pop
addb
add
jmp
ljmp
mov
arpl
nop
test
sbbl
inc
push
test
cmp
dec
sub
jle
jno
aam
adc
xchg
inc
cmp
fwait
cltd
lret
sti
ljmp
and
dec
arpl
mov
mov
rorb
push
in
cmp
test
jge
in
test
xor
push
dec
mov
add
xchg
pushf
test
pop
mov
pop
sbb
lods
inc
cmpsb
jbe
push
pop
lret
lret
jns
add
xlat
jne
jno
movsl
popf
stos
and
addl
pop
pop
inc
adc
xor
push
data16
cmpb
nop
out
fcoms
push
mov
xor
lods
inc
pop
push
pop
bound
xlat
mov
fwait
xchg
xor
mov
mov
pop
ret
mov
dec
rolb
jecxz
sbb
lahf
mov
and
in
cwtl
std
dec
sub
mov
adc
jg
pop
lds
and
sbb
or
and
dec
mov
adc
jmp
jecxz
pop
adc
pop
pop
mov
cmp
pop
push
lock
pop
mov
adc
enter
decl
cmpsb
add
mov
and
jb
mov
out
int3
xor
scas
into
jb
or
js
mov
mov
pop
jbe
mov
jle
mov
mov
icebp
stos
jle
fstpt
sub
add
cmpsl
mov
out
jnp
in
jne
outsb
rcll
mov
push
lret
jb
cmpsl
cld
sub
addr16
dec
jnp
dec
lret
and
lods
lahf
sbb
mulb
dec
adc
xchg
lds
cltd
clc
fmul
or
lret
mov
fildl
or
and
inc
mov
xor
pushf
inc
inc
test
sahf
fldenv
dec
dec
cmp
add
cmp
cmp
movsb
mov
in
mov
lds
mov
cmp
dec
loopne
jnp
mov
mov
jmp
inc
mov
mov
fisubrl
stos
and
mov
xchg
push
push
popf
clc
sti
pop
sahf
sbb
in
lock
aad
xchg
iret
les
cmp
xchg
sub
loop
push
mov
js
inc
add
pop
mov
jae
sti
pop
out
xchg
push
leave
adc
pop
cs
xor
xchg
fldenvs
fcmovnbe
outsb
loope
test
push
pop
push
jge
insl
das
xchg
mov
sar
push
iret
test
lret
push
lds
jns
and
mov
inc
fmul
mov
xor
jns
push
loop
loop
iret
add
mov
arpl
sbb
xchg
loope
arpl
mov
int
in
push
jno
lea
test
pop
fistpl
push
jb
lods
sahf
push
and
jg
mov
sbbb
fnstcw
cld
mov
loopne
out
repz
shl
mov
fsubrs
in
or
xor
out
icebp
jbe
test
dec
xchg
js
add
fld
jg
push
or
inc
dec
xchg
outsb
repnz
shrb
test
std
fidivs
mov
xor
mov
adc
dec
cli
popf
mov
ds
mov
fs
push
cmp
mov
imul
fs
insb
js
jns
and
adc
fisttpll
data16
add
lock
pop
xchg
pop
cmc
les
xchg
dec
jl
mov
in
xchg
out
insb
add
sub
and
jp
stos
outsl
movsb
test
xchg
inc
mov
sbb
jge
sbb
mov
cmc
dec
or
mov
jb
cmp
sarb
inc
loope
adcb
push
cld
adc
movsl
ds
hlt
dec
add
int
jo
jle
and
xor
dec
js
aaa
call
or
sbb
negl
dec
dec
orb
dec
mov
clc
dec
fistpll
in
xlat
and
enter
cmpsb
xchg
xor
ljmp
xchg
mov
dec
aas
inc
fbstp
hlt
mov
std
pop
in
jle
or
push
pop
inc
sbb
sub
and
push
pop
sub
dec
in
xchg
dec
call
jb
scas
sub
xorl
dec
loope
mov
add
loop
push
scas
mov
fcmovnbe
in
push
add
jmp
out
xor
pop
ljmp
stc
pusha
clc
popa
clc
jmp
mov
movsb
xchg
in
insb
pop
mov
cmpsl
aad
loope
out
lds
dec
dec
jecxz
add
mov
imul
add
sub
movb
lods
icebp
mov
xlat
out
and
pop
insb
xor
insl
les
and
jb
xchg
dec
dec
sbb
xchg
dec
or
xor
inc
sbb
std
or
cmp
sahf
sub
xor
cmp
mov
movsl
or
jbe
and
jbe
popa
xor
or
cltd
dec
mov
js
adc
mov
test
ficoms
fisubrl
movsb
fwait
sti
and
add
cmpsl
inc
adc
test
sub
icebp
cmc
dec
stc
add
and
popa
mov
cmp
lcall
les
lods
inc
std
jmp
cs
cmp
arpl
dec
fidivl
popa
jns
mov
xor
mov
inc
mov
shl
cmp
insb
or
mov
or
xchg
daa
add
xchg
call
aaa
mov
mov
jae
adc
push
xor
inc
call
lods
xchg
in
jns
mov
int
or
lock
scas
call
shrb
test
or
out
jns
in
xor
jbe
pop
add
mov
xor
mov
mov
and
and
stos
xlat
pop
pop
push
push
div
xchg
addr16
inc
pop
push
xchg
out
test
sub
movsl
insb
xchg
fmull
cmpsb
xor
lahf
pop
add
xchg
lods
pop
or
xchg
xor
cld
lock
cli
mov
xor
cmp
inc
add
lods
in
lret
xor
lcall
pop
insl
sbb
nop
sub
mov
scas
inc
inc
rsm
inc
mov
int3
xchg
jb
push
fwait
mov
xchg
das
aad
push
lods
fwait
mov
call
xor
mov
sti
xchg
enter
das
ljmp
loopne
ss
adc
call
push
hlt
std
pop
and
lret
and
in
add
inc
fbstp
sub
xchg
lea
sbb
push
addb
ret
push
or
movsl
mov
subl
ret
aam
dec
push
in
xchg
mov
push
jae
movntps
xchg
jno
jge
ds
outsl
xor
dec
add
stos
xor
mov
push
xor
pop
cli
adc
lea
roll
jno
push
lds
ja
add
mov
push
sahf
xor
mov
inc
cmpsl
cmp
jne
clc
mov
cmp
adc
push
fdivrl
fsubl
fsubs
jbe
dec
pop
mov
out
jecxz
pushf
cmp
in
jno
aam
xchg
sbb
pop
repz
lock
inc
jp
repnz
les
pop
sub
lea
mov
lock
dec
push
adc
outsb
subl
enter
mov
gs
sbb
adc
jae
xchg
jl
or
sub
enter
shr
aad
repz
or
fucomip
dec
sbb
xchg
lcall
sub
push
aad
cmpl
jb
mov
mov
sarl
aaa
mov
jecxz
stos
in
add
add
mov
mov
adc
test
cmp
fsts
pop
div
scas
mov
jl
add
pop
sahf
jl
loopne
lea
push
in
jle
adc
je
xlat
mov
mov
aam
xlat
mov
inc
test
bound
or
int
jbe
sbb
pop
jp
lods
add
cmp
add
lret
hlt
lcall
adc
out
test
sub
sub
or
inc
mov
jmp
ficomps
repz
xor
xchg
dec
outsl
dec
fmull
xor
jbe
icebp
mov
push
movsb
xchg
inc
call
or
lds
xchg
dec
cmp
cld
test
inc
lcall
inc
cmp
inc
xchg
shlb
test
add
and
fsubs
xor
cli
pushf
xchg
mov
inc
jge
std
cltd
mov
sbb
sbb
inc
mov
mov
or
cmp
xorb
lds
fadds
sbb
adc
out
fcomps
jns
push
push
mov
addr16
ds
jge
out
cmp
or
es
fldt
sub
push
fisttps
addr16
jl
cwtl
je
mov
adc
pop
dec
xor
jae
pop
adc
jbe
sbb
mov
jp
lods
cmp
mov
inc
push
es
lds
push
mov
cmp
fldcw
sbb
out
add
adc
push
mov
fldl
in
inc
mov
mov
aas
rolb
push
and
jne
aam
lods
cmp
mov
dec
rolb
add
sbb
jne
adc
divl
pushf
inc
cmc
push
test
movsl
and
sub
push
pop
adc
pushf
daa
outsl
test
sbb
push
repnz
fwait
pop
sbb
sbb
and
pusha
mulb
int3
mov
jb
inc
loop
fcompl
add
bound
push
jbe
sub
jp
xor
mov
mov
push
mov
mov
xlat
mov
xchg
and
minps
sbbb
pop
out
jp
mov
adc
lods
mov
test
lret
dec
xchg
pop
jge
call
dec
iret
adc
int3
mov
dec
push
mov
jg
rol
cltd
push
lret
sbb
loopne,pt
pop
negb
xchg
add
pushf
fwait
xchg
pop
or
outsb
aam
xchg
add
push
in
andl
aad
xchg
sub
sbbl
scas
xchg
pop
enter
inc
mov
int
out
or
xor
cli
cltd
jne
in
pop
and
push
movsl
lret
cmp
cmp
xor
xchg
incl
mov
push
mov
push
cmp
mov
call
adc
mov
movsl
imul
lds
les
lret
pop
xchg
cmp
adc
das
cmpsb
test
or
stos
out
mov
aas
sti
xchg
insl
repnz
int
out
stos
xchg
jns
addr16
popa
lret
add
sub
pop
aaa
and
scas
orl
dec
lock
push
xchg
orb
aaa
aad
sub
test
mov
test
jb
movsl
testb
daa
pop
loopne
xchg
inc
jmp
fdiv
or
dec
pop
mov
xchg
js
aaa
mov
and
insb
cmp
cmpsl
inc
insb
jle
out
lds
inc
cmp
pop
and
adc
mov
mull
cmpsl
jno,pt
add
fsubrs
xor
pop
stos
push
push
add
fstpl
cmp
adc
mov
dec
popf
sbbl
daa
testb
nop
gs
dec
stc
ret
pop
inc
insb
mov
sbb
and
fidivs
shlb
xchg
aad
lret
jns
jmp
sbb
and
shll
adc
lods
sub
push
lods
cltd
or
cli
adcb
jle
xor
lret
jmp
mov
out
pop
and
xchg
xlat
sub
sti
in
add
test
or
pusha
or
xor
enter
adc
xchg
shlb
jo
rol
add
in
repz
and
movsb
int3
jo
aas
adc
out
test
mov
fidivl
lret
jns
push
fldt
fldt
out
sub
aas
test
fwait
mov
sbb
sbb
rorb
mov
mov
xor
inc
mov
mov
in
clc
popf
push
add
mov
dec
ljmp
test
fidivrl
push
mov
test
push
inc
std
arpl
rcll
fadd
jge
ljmp
pop
lock
scas
add
inc
nop
and
sub
insb
int3
jb
jns
fisttpl
add
cs
and
pushf
mov
loopne
lods
lea
lock
scas
jae
and
ljmp
or
cmp
xor
inc
inc
sub
mov
repnz
mov
imul
or
xor
cmc
push
out
lods
notl
fisttps
jg
aad
sbb
mov
mov
rcrb
sub
sbb
loopne
mov
stos
mov
pop
lea
nop
jae
mov
fucomip
dec
pushf
ret
mov
mov
pop
flds
dec
jo
mov
leave
out
inc
jbe
cmp
push
mov
mov
stos
shl
adc
das
arpl
les
lret
jl
sbb
inc
scas
imul
add
bound
out
xor
or
in
test
repnz
idivl
mov
mov
loope
add
dec
in
lods
lcall
ljmp
cli
jle
outsb
cmp
xlat
push
rol
and
ret
repz
push
inc
cmpsl
out
adc
mov
push
push
push
stc
cmp
sub
nop
sbb
lahf
jecxz
negl
mov
xor
dec
jmp
inc
ftst
sub
icebp
push
call
adc
inc
or
adc
add
call
pop
aas
stc
shr
sub
imul
add
test
rcl
fsts
or
xor
add
adc
xchg
adc
inc
lock
lret
xor
inc
stc
lcall
inc
mov
cs
or
lods
mov
push
mov
adc
roll
jge
movsl
lret
mov
push
and
arpl
or
fcmovnu
and
cld
xor
xor
sub
jge
lea
aas
ja
add
cwtl
sub
out
sbbl
or
sbb
and
cltd
and
mov
adc
mov
and
sbb
and
cltd
sbb
fbstp
xor
push
rclb
lods
jnp
pop
aas
push
mov
inc
out
and
movsb
arpl
sub
push
das
jbe
sti
jb
fwait
xchg
or
pop
xchg
adc
jae
test
cmpsl
jno
inc
xchg
movsb
mov
call
in
sbb
mov
je
sbb
or
mov
and
mov
xor
pop
sahf
lods
mov
jecxz
add
xchg
dec
sbb
fnsave
mov
sbb
mov
sbb
push
in
dec
lret
dec
adc
jmp
pop
or
jne
lcall
shl
jmp
stc
push
sbb
or
lods
inc
sti
cmp
popa
shl
movsb
pop
fdivrs
xchg
call
call
xor
xchg
push
mov
bound
test
std
xchg
sbb
test
loop
jbe
mov
std
cltd
and
imul
in
adc
adc
jmp
js
test
out
xchg
mov
inc
into
and
cli
sbbl
xchg
out
call
int
jbe
dec
push
je
popa
xchg
sbb
pop
push
int
loop
inc
lahf
pop
xorl
pop
cmc
sbb
cmpsl
ss
mov
push
mull
pop
dec
movsl
xor
jnp
test
test
xor
les
bound
mov
ja
subb
or
iret
fucom
jnp
pop
ja
push
xor
lods
iret
fmull
icebp
or
jb
mov
xor
lds
mull
scas
pop
push
mov
sub
cmpsl
adc
dec
testl
inc
cmpsb
mov
push
sub
insl
pop
mov
adc
jbe,pn
outsb
jp
push
add
mov
mov
das
clc
ficoml
sub
sub
mov
jb
xchg
mov
inc
insb
ljmp
nop
dec
mov
test
mov
jns
sbb
push
add
jmp
xor
mov
in
insl
insl
in
scas
xorl
or
in
jg
sti
xchg
mov
push
jle
xchg
xor
leave
int
and
inc
xchg
jb
call
ja
cmp
pop
test
dec
sub
sub
popa
ds
push
pushf
leave
dec
adc
idivb
aad
inc
test
cmp
pop
cmp
dec
xchg
rcl
jo
add
inc
push
roll
dec
sti
test
xchg
imulb
ret
jle
xor
add
jnp
stos
jge
test
inc
cmc
loopne
addr16
sbb
mov
mov
sub
and
ds
pop
sub
sub
push
js
mov
sub
mov
pop
es
dec
or
fs
iret
mov
dec
fnstcw
push
jo
in
pusha
jp
into
ret
data16
lds
je
mov
pop
shll
inc
push
jnp
mov
lcall
add
jnp
mov
test
and
mov
pop
scas
dec
loope
stc
je
mov
fisubrl
iret
xlat
test
out
mov
sbb
inc
pop
push
hlt
mov
pop
int3
pop
popa
push
adc
jmp
mov
outsl
fdivs
lods
push
in
shrb
xor
inc
repz
mov
loope
std
setl
xor
or
cmp
pop
mov
add
jb
das
sbb
es
out
cmp
mov
mov
inc
insl
xor
and
fistps
int
jns
dec
inc
push
inc
aas
into
out
cmpsb
cmp
mov
inc
in
push
loop
sbb
jp
sbb
mov
or
cmp
push
stos
flds
push
icebp
mov
jns
and
imul
xlat
sbb
cmpsb
ja
jnp
pusha
sbb
mov
adcb
rorl
pop
mov
stos
mov
fdiv
pop
xchg
es
sub
adc
clc
xchg
sbb
push
std
push
mov
pusha
dec
sub
jl
xor
add
sbb
push
fcoml
inc
lret
xchg
fidivrs
sbb
or
pop
pop
sbb
loopne
push
pop
pop
lds
rclb
clc
mov
int3
sarl
xchg
dec
insb
mov
push
fistpll
in
mov
lahf
call
das
mov
movaps
call
andl
gs
jl
cmp
icebp
pusha
mull
rcrl
pushf
lods
mov
call
sub
fdivrs
xchg
add
stos
xor
rcrl
sub
dec
lahf
repz
aam
sub
cli
pushf
inc
jno
mov
add
push
in
testl
push
outsb
adc
nop
add
sbb
cltd
outsl
dec
inc
loope
mov
icebp
aas
and
dec
es
xlat
jge
lds
inc
jno
cmpsl
mov
sti
push
push
aam
shrb
pop
cmc
cmp
imul
push
cli
ds
test
mov
clc
push
addb
adc
xor
arpl
repz
push
push
repnz
cmp
dec
add
enter
loopne
cmpb
iret
outsl
mov
push
sarb
and
fldt
mov
mov
and
stc
hlt
gs
xchg
ja
push
mov
xchg
outsb
pushf
arpl
push
gs
pushf
dec
and
stos
inc
ljmp
sahf
or
xchg
gs
in
cwtl
mov
lock
and
call
fiadds
subb
ficoml
out
pusha
clc
hlt
add
lds
andb
cmpsl
mov
jno
jns
push
push
jg
mov
dec
out
jge
push
mov
mov
ja
lods
dec
imul
push
sub
fwait
add
insl
adc
imul
lods
dec
lret
cmp
xor
dec
in
sahf
push
push
lds
pop
lods
cmp
inc
cmc
pop
jae
mov
jmp
sub
push
pop
mov
cld
adc
lds
sbb
imul
nop
stos
mov
jnp
test
inc
xor
xor
sbb
repz
fdivrl
nop
adc
pop
sub
mov
test
sbb
mov
sbb
pop
loopw
jne
sbb
jmp
movsb
xor
jo
pop
insb
ja
push
push
xchg
sbb
ret
xlat
fdivs
out
daa
xchg
cltd
int3
jg
iret
imul
int
inc
inc
xor
cmpsl
cltd
imul
test
outsb
mov
sub
mov
cld
dec
imul
xcrypt-ctr
cmpsl
push
lea
lahf
push
mov
mov
mov
xchg
test
cmp
or
jg
mov
sbbl
bound
ds
rorl
pop
dec
or
sub
cwtl
xchg
test
sar
inc
pop
shlb
inc
mov
repz
mov
dec
adc
xchg
inc
insb
cmp
enter
pop
jge
jnp
es
pusha
push
movsl
inc
fstp
mov
adc
in
xchg
popa
and
ljmp
out
xchg
push
jmp
call
pop
push
pop
icebp
stos
arpl
add
je
ja
leave
movsb
je,pt
mov
mov
xor
js
mov
sbb
xchg
and
dec
sbb
push
pop
mov
data16
sub
fisubrs
ss
lea
aad
insb
and
pop
or
xchg
shlb
loope,pn
adc
addr16
clc
cmp
add
loop
rolb
add
adc
cmpsb
add
fadds
fwait
or
aam
mov
insb
lock
cmp
lret
loop
ret
mov
arpl
jb
js
dec
sub
add
push
cmpsl
xchg
dec
cmp
mov
lahf
shrb
sbb
pop
xchg
rcr
inc
imul
scas
mov
push
add
vaesdec
leave
cs
push
sti
dec
push
sarl
movsl
inc
mov
sub
mov
mov
movb
pop
xlat
out
aas
and
hlt
xchg
icebp
mov
or
cmp
sbb
mov
and
or
and
jg
outsl
cmp
mov
sbb
xchg
add
cwtl
cmp
leave
sbb
push
xchg
sti
push
aam
jnp
movsb
inc
xor
jae
pop
scas
call
test
and
push
popf
cmc
mov
addr16
or
in
push
xchg
sub
stos
fwait
add
mov
jmp
mov
jo
arpl
push
sub
fsubrs
xchg
xchg
lods
fsubrl
in
ret
sub
test
dec
mov
imul
in
stos
pop
cmp
popf
cli
mov
or
pop
imul
repz
sub
xchg
pshufw
out
movsl
adc
jg,pn
scas
xchg
inc
mov
pop
int
dec
popa
push
scas
shlb
pop
gs
adc
out
aad
jmp
popf
xor
or
ljmp
or
lock
nop
pushf
aam
in
data16
pop
dec
push
arpl
cwtl
frndint
fidivl
mov
pop
push
cltd
mov
mov
pop
mov
loope
sub
push
xchg
in
push
aad
and
out
pop
fwait
dec
pop
pushf
cmc
jne
xor
ss
inc
xor
lahf
or
jecxz
xor
jb
jmp
stc
imul
cwtl
mov
adc
pop
bound
push
xchg
mov
idivl
and
leave
push
ret
sbb
xor
pusha
test
mov
xchg
push
add
test
mov
pop
jle
cs
inc
push
adc
int
mov
dec
hlt
mov
xchg
xchg
lret
fld
and
pop
cli
sbb
sub
push
int3
xor
call
dec
sti
movsb
pop
ret
aam
shr
and
adc
cwtl
mov
xchg
sub
xchg
mov
add
outsl
jecxz
ret
push
and
or
loop
movsl
lds
cwtl
fisubrl
inc
dec
mov
push
das
mov
outsb
pop
loopne
dec
loopne
loop
repnz
pop
push
sub
jbe
lcall
xchg
cmpsb
mov
add
sbb
jno
pop
mov
subb
xor
xlat
add
das
pop
jl
fimuls
es
mov
clc
dec
outsl
popa
outsb
sbb
iret
decb
nop
clc
movsl
aam
cmp
add
cmp
cmp
icebp
push
push
adc
pushl
repnz
adc
mov
sbb
pop
aam
or
daa
fdivrs
inc
mov
shll
push
mov
imul
sbbl
mov
or
or
cs
xor
shlb
push
xchg
sub
adc
or
cwtl
fnstenv
outsl
inc
sahf
jo
sub
xor
aad
xchg
nop
jbe
jb
sbb
add
ljmp
test
mov
shl
mov
mov
nop
cmp
insb
mov
movsl
loop
fsub
cltd
gs
sub
xchg
frstor
mov
lcall
and
mov
sti
jb
pop
mov
shrl
repz
xchg
adc
jg
mov
sub
mov
leave
cli
addr16
daa
pop
pop
addl
ret
cmpsb
jo
mov
ret
pushf
lret
push
mov
mov
xchg
cmpb
jl
je
dec
lret
push
adc
icebp
sbb
xor
mov
insl
sahf
mov
pop
jecxz
mov
js
test
adc
lret
cmpsb
push
and
test
aaa
outsb
mov
adc
cltd
frstor
mov
ror
fists
jb
rorb
icebp
cmp
jecxz
jmp
add
mov
shrl
xchg
cmp
sahf
adc
incl
pop
xor
call
pop
fisttps
and
pusha
inc
sub
cmp
pop
push
repz
rclb
movsb
sub
or
les
jo
xchg
out
pop
aaa
cwtl
push
test
jno
imul
add
xchg
xchg
loop
inc
mov
push
call
sarl
imul
mov
mov
int3
loopne
data16
lcall
jmp
mov
ljmp
cmp
and
dec
lods
imul
out
xchg
and
sti
push
xchg
inc
pop
repnz
mov
pop
mov
cli
dec
dec
adc
cmp
pop
jbe
fisubrl
mov
mov
jge
aas
jb
lock
movsl
lock
xchg
mov
in
fstl
lods
dec
pop
dec
jle
out
cmp
ss
nop
inc
fidivrs
fisubs
lret
shlb
fisttpll
push
loop
mov
or
jle
stc
icebp
sbb
add
sub
mov
xchg
divb
leave
push
lods
cli
jne
repnz
mov
rcr
repz
ja
pop
addr16
clc
add
xchg
sub
dec
es
cmc
leave
loopne
sub
mov
lahf
dec
scas
jmp
test
ret
lahf
ss
pop
imul
mov
xchg
insb
mov
hlt
lcall
xor
imul
push
xor
fsubl
sub
or
movsl
pushf
js
sbb
or
ret
nop
inc
popa
cld
adc
pop
scas
push
jecxz
push
mov
sbb
push
cmp
enter
mov
rcrl
push
xchg
mov
xchg
sub
mov
mov
or
cmp
jecxz
jnp
stc
into
fwait
repz
jbe
xlat
jl
aad
inc
jo
mov
mov
mov
fsubrs
inc
inc
adc
lock
dec
lods
fwait
xchg
sub
mov
adc
hlt
mov
leave
sbb
jo
cmpsb
inc
loop
mov
imul
adc
and
enter
adc
fildl
sbb
stos
scas
jnp
aas
add
mov
push
cmp
sub
arpl
aad
loop
call
xor
or
pop
cmp
ljmp
add
add
mov
test
inc
std
xchg
jbe
sub
call
mov
mov
push
mov
les
movsl
dec
in
pushf
pop
lock
sub
pop
mov
outsl
mov
dec
insb
sbb
xchg
sub
jge
add
sar
mov
fwait
jecxz
inc
pusha
popa
dec
lahf
fs
stos
xor
test
sub
jg
stos
or
je
test
and
je
filds
xlat
and
or
sbb
mov
movsb
int3
cmp
cmpsl
stos
and
inc
icebp
inc
dec
cmc
test
test
sbb
mov
mov
cmp
popa
mov
inc
sbb
test
mov
or
xchg
xchg
push
push
xor
pop
pushl
cmp
add
pusha
out
xchg
cmc
gs
and
in
and
adc
into
cmp
mov
cmp
sbb
js
ljmp
push
or
jmp
fistpl
in
les
jo
xor
mov
mov
push
filds
jle
mov
ficoml
mov
xlat
sbb
pop
xor
mov
mov
test
jle
xchg
cmpsb
iret
fldcw
mov
test
sub
test
sub
sarl
lods
inc
inc
sahf
jmp
sbb
cwtl
or
std
outsl
pop
inc
rclb
imul
mov
push
dec
xchg
cmp
mov
xchg
sbb
inc
lods
inc
adc
mov
call
inc
notl
in
mov
mov
test
leave
rorl
movsl
add
lahf
push
or
cmpsb
mov
ds
add
lds
outsl
pop
and
aas
dec
pop
adc
cmp
stos
cmp
fwait
mov
imul
add
imul
push
aad
lds
xchg
adc
outsl
mov
mov
cmovge
jg
pop
ljmp
cmc
push
mov
adc
pop
cwtl
xchg
lea
mov
fistps
sub
std
xor
xchg
push
lahf
push
sbbb
movsl
ret
mov
inc
aam
inc
mov
xor
enter
out
sub
adc
sbb
mov
loopne
mov
out
insb
test
das
cwtl
jnp
mov
out
and
mov
fmull
xchg
jmp
mov
mov
jp
mov
push
movsl
xor
fcompl
notb
jne
lret
test
imull
cwtl
ficoms
mov
bound
shld
out
push
ret
sub
insb
mov
dec
lahf
mov
adc
push
and
repz
cmp
mov
push
mov
mov
arpl
jno
or
sub
xor
inc
jno
add
inc
inc
cld
xchg
xchg
or
cmp
in
inc
hlt
inc
dec
mov
imul
inc
add
pop
or
or
aam
mov
aas
mov
arpl
insl
xchg
pop
fs
ret
sbb
lods
popa
bound
mov
sub
pop
pop
mov
mov
out
stos
call
sbb
xor
or
sub
ja
add
out
jbe
add
xor
push
xchg
leave
jne
push
in
ja
jae
pop
test
jmp
and
mov
lods
pop
fldenv
xor
js
mov
xchg
scas
push
sbb
mov
pop
adc
inc
xchg
jl
fs
bnd
cltd
call
popf
jmp
movsl
dec
aaa
mov
mov
fstps
mov
lcall
repnz
and
or
fisubrl
movsb
repnz
cmp
mov
dec
pop
adc
adc
imul
adc
movsl
shlb
pop
mov
in
inc
insb
add
int3
decb
stc
dec
push
push
add
mov
mov
pcmpeqw
out
xor
fsubs
jno
lods
xchg
adc
fucomp
add
mov
sub
lret
add
in
mov
shrl
jg
fsubr
fwait
jl
and
dec
lcall
scas
lds
sbb
dec
cmp
insb
fnsave
push
aaa
into
nop
xchg
pusha
jb
jns
jp
mov
jo
mov
pop
xchg
outsb
ljmp
jo
jno
roll
leave
push
gs
mov
mov
lret
out
cwtl
lea
in
fiadds
lods
fs
loopne
daa
lret
loop
daa
mov
xor
inc
inc
loop
push
popf
adc
inc
mov
repz
pop
fimull
or
add
loopne
dec
cwtl
pushf
cli
mov
mov
pushf
aad
mov
test
dec
filds
dec
and
xchg
add
movsb
jne
int
mov
iret
dec
jp
mov
ficomps
jb
cmp
push
call
and
rcr
sti
int
into
out
sub
push
lret
icebp
imul
adc
hlt
je
mov
out
sar
sub
cwtl
jae
jg
and
push
fsubrp
jns
notl
cwtl
cmp
dec
hlt
jecxz
mov
es
push
xchg
mov
pop
xchg
xor
aam
jns
or
lods
enter
fs
lock
push
adc
ds
inc
scas
std
mov
add
push
shrb
mov
js
add
jmp
fldcw
cmp
pusha
jecxz
call
xor
cld
dec
bnd
rcr
repnz
cmp
fsub
add
cmp
add
sbb
aas
pop
xchg
pop
xor
ss
in
add
fstps
inc
ds
lods
pop
lods
push
mov
fstps
pop
in
das
lea
inc
std
or
pop
mov
fists
adc
ss
inc
sub
lahf
pop
gs
or
xor
mov
jmp
pop
xlat
outsb
push
and
lds
subl
cmpsb
jle
outsb
sub
addr16
lahf
lea
or
gs
pop
scas
nop
dec
sbb
rorl
pop
dec
adc
call
fwait
cld
inc
lret
jae
adc
ja
test
pop
push
push
incb
arpl
dec
sbb
pop
add
ds
outsb
sbb
mov
into
cmp
lods
imul
mov
xchg
or
fwait
sahf
xor
ret
cmp
or
inc
sbb
cmp
inc
add
outsb
not
push
mov
mov
add
and
lods
subl
sub
and
sbb
xchg
mov
xor
fcoms
ss
ss
xchg
cmp
push
cld
iret
sub
mov
rcr
fildl
mov
and
pop
dec
loop
sbb
cwtl
inc
ss
sub
xor
out
mov
ret
lret
add
movsl
and
fdivrs
or
jp
mov
or
stc
test
dec
and
popa
jg
shrl
push
jp
cmpsb
pop
dec
pop
ret
punpcklbw
or
daa
add
idivb
sahf
sub
cmp
outsb
xchg
ficompl
popa
lahf
mov
cmpsl
mov
fstl
cld
shll
xor
inc
andb
std
xchg
dec
xlat
jne
adc
xchg
xchg
in
mov
scas
nop
mov
add
dec
push
cmpsb
inc
xchg
pop
loop
mov
sbb
rorl
cmp
out
adc
jecxz
dec
cmp
lods
mov
es
arpl
cmp
push
daa
cmp
cmc
push
iret
jbe
push
aad
adc
scas
jb
popf
sbbb
xor
mov
xchg
stc
nop
enter
fisubrs
mov
add
jnp
inc
jno
fildl
ret
add
test
pop
xchg
jb
scas
adc
xor
xor
ss
sbb
push
adc
cmp
jl
orl
adc
push
jg
jns
dec
fimull
push
outsb
dec
push
pop
gs
mov
pop
aad
imul
sbb
ljmp
int3
push
push
cmpsb
jge
xchg
scas
push
inc
insb
jo
call
stos
int
inc
xor
jecxz
xor
add
jp
loope
test
mov
dec
imul
cmp
adc
jge
adc
mov
es
bound
lds
cmp
mov
pop
pop
fwait
mov
popl
and
push
push
fsts
push
decl
sub
sbb
pop
dec
cmp
aas
sub
rorb
fs
dec
inc
cs
rclb
fwait
test
fcmovnb
imul
ljmp
dec
aas
dec
pop
add
scas
call
jmp
sahf
xor
imul
loopne
mov
popa
mov
dec
idivl
fisubrl
adc
in
lcall
popa
cmc
or
out
shrb
iret
test
mov
inc
add
aad
dec
inc
ret
pop
cmc
push
pop
jl
out
jecxz
lret
pop
add
push
and
inc
add
iret
mov
sub
out
mov
je
addl
je
out
xchg
pusha
mov
or
shrl
cvttps2pi
fwait
cmpsl
outsb
jecxz
xchg
jmp
jge
int3
sub
xchg
pusha
aas
test
fsubl
add
inc
mov
ljmp
outsb
inc
cmp
push
and
xor
push
mov
int3
ficompl
fcoms
jmp
sbb
scas
andl
mov
xor
jecxz
push
dec
xor
and
mov
sub
dec
mov
add
movb
mov
lcall
dec
jo
in
std
sbb
xchg
out
mov
xor
xlat
test
pop
ret
fs
jne
pop
mov
roll
and
push
nop
xchg
cmc
dec
rcll
or
icebp
lods
aas
dec
fs
test
sub
lods
in
mov
popf
and
dec
sbb
cld
pusha
xlat
push
xchg
lea
hlt
daa
push
adc
gs
aas
and
cmp
inc
int
ja
mov
cmp
inc
fcomip
dec
lahf
call
xchg
dec
xchg
jo
or
push
jbe
mov
sar
cli
loopne
inc
lods
ret
rcrb
imul
jge
pop
cmp
or
sahf
in
les
mov
push
push
icebp
pop
jae
xor
or
add
jo
push
insl
push
lcall
push
lods
or
daa
lock
sub
sarl
and
daa
fldenv
xchg
lds
aas
divl
ds
incb
push
test
lret
out
roll
add
mov
push
xor
jg
xchg
mov
inc
push
loope
cmpsb
into
add
xor
insl
mov
pusha
adc
cmp
js
stos
push
outsb
adc
pop
cmc
ja
aad
sub
sbb
dec
pop
and
pop
xor
mov
cmpsb
popf
push
mov
std
fsubrl
test
push
jno
test
mov
or
in
push
rep
sbb
push
push
mov
pushf
ljmp
sbb
cltd
repz
outsl
lcall
inc
cmc
je
leave
popa
xor
in
imul
sbb
mov
sbb
mov
mov
and
inc
std
cmp
inc
out
push
dec
mov
aaa
dec
pop
xchg
inc
data16
cmp
adc
ret
imul
repz
jns
mov
int3
mov
or
inc
jmp
movsl
xchg
xor
shrl
loope
bnd
call
xor
adc
mov
cli
insl
pop
arpl
jmp
rolb
dec
and
sti
or
ret
aas
dec
clc
jl
arpl
mov
xor
rorb
inc
test
adc
cmpsl
movsb
or
movsb
out
xchg
mov
fbstp
jnp
incb
outsl
jns
pop
fadds
out
divl
sbb
fdiv
cmp
lods
lock
movsb
scas
inc
push
mov
push
call
negl
arpl
shll
sub
imul
shrb
dec
lcall
add
pop
pop
inc
test
inc
cmp
imul
mov
push
leave
mov
cmp
add
inc
mov
add
dec
push
mov
add
mov
dec
shll
jns
mov
dec
jecxz
pop
repnz
mov
cmpsb
sbb
ds
shlb
sub
lahf
adc
ret
jle
lock
mov
scas
push
push
sbb
pushf
lret
xchg
sbb
dec
sub
lock
ficompl
mov
cmpsl
push
or
test
or
xchg
int
pusha
negl
add
movsl
popf
hlt
icebp
sbb
stos
pop
adc
enter
ja
xor
push
scas
inc
xor
testl
jb
push
popf
mov
in
mov
sub
mov
add
test
mov
jbe
ljmp
pop
ficoml
sbb
pop
lea
jecxz
sbb
sub
jecxz
push
lods
divl
arpl
into
fnsave
sbb
jno
mov
and
jne
push
add
movsl
mov
pop
call
ftst
jnp
out
insl
lds
fwait
mov
push
add
and
add
stos
and
cltd
stos
imul
pop
movsb
pusha
pop
fldt
lods
inc
mov
jbe
add
pushf
dec
or
mov
test
and
add
push
xchg
nop
xor
push
aaa
lret
je
std
jo
outsb
stc
adc
cmp
js
leave
and
adc
sarl
insb
stc
popf
ret
mov
jmp
inc
and
iret
and
pop
dec
add
daa
shll
xchg
xchg
and
nop
stc
aaa
add
test
lcall
xlat
insl
loopne
or
sar
hlt
js
test
and
add
js
loopne
inc
cwtl
adc
lret
xor
pop
vcvtps2pd
faddl
sbb
std
push
rclb
leave
mov
pop
outsb
sbb
or
lcall
and
mov
out
mov
stos
dec
int
xor
shlb
adc
scas
mov
mov
sbb
mov
mov
js
adc
lret
lret
repz
lods
sub
sbb
negl
inc
fldenv
mov
push
stos
xor
iret
inc
mov
cmc
jle
sub
cs
xchg
sbb
es
pop
push
addr16
jg
inc
lcall
clc
jne
sub
lcall
pop
fsubrs
jo
popa
enter
pushf
push
inc
int3
jg
rclb
add
icebp
and
add
mov
jg
fdivl
mov
pushf
dec
jo
ret
loop
daa
add
aad
push
iret
pushl
mull
addr16
pop
mov
inc
fwait
in
cmc
xchg
push
idivl
enter
pop
adc
cmpb
and
stos
add
mov
pushf
std
and
enter
mov
inc
into
fnsave
jl
call
test
in
int
inc
mov
pop
ficomps
mov
mov
mov
stc
ror
cs
jns
mov
in
out
jns
sub
add
push
cmp
lea
cmc
xchg
cmp
mov
sahf
ret
mov
xchg
sub
aaa
das
sub
xchg
mov
jmp
push
sbb
sbb
rcll
cmp
sub
jp
cmc
ss
cwtl
and
ja
mov
mov
jb
out
mov
daa
icebp
pop
outsl
mov
scas
cmp
or
enter
and
sub
cmp
fs
mov
xchg
loop
fistpl
insl
jno
mov
push
call
and
nop
loope
mov
inc
data16
inc
sbb
int
xchg
mov
pop
mov
sbb
lock
mov
sbb
push
pop
in
addr16
sbb
push
data16
fsubl
jno
jbe
xchg
das
lock
ds
cmpsb
jp
pusha
idivl
and
xchg
in
fisubl
fisubrl
mov
iret
lods
aas
mov
xchg
ret
push
cmp
cmp
rol
and
stos
push
mov
xor
mov
sahf
ss
inc
push
roll
mov
push
ja
fnop
pop
mov
lock
push
push
loop
sarl
xor
ret
and
xor
and
dec
push
sbb
add
aas
mov
pop
adc
xchg
xor
mov
mov
xor
jb
push
jo
mov
push
push
inc
ljmp
adc
clc
push
stc
cmpsb
loope
fs
push
mov
loop
sub
push
mov
dec
pop
je
lahf
push
sbb
aaa
stos
je
jmp
cltd
je
jecxz
push
sub
sbb
insb
fistpll
fcoms
popf
mov
xor
fsubrs
ja
enter
sbb
pop
loope
or
imul
mov
mov
gs
push
aam
scas
and
xchg
inc
ss
lret
pusha
je
fildll
in
inc
sub
push
sbb
ss
jno
xor
bound
aam
push
jmp
xchg
dec
jo
cmp
daa
lcall
or
jecxz
sar
xor
insb
xchg
in
hlt
cmpsl
jp
and
ret
pop
push
add
pop
aad
sub
inc
fs
mov
pop
orb
dec
push
in
cmp
cmp
repnz
test
jmp
mov
repz
aad
or
sbb
push
in
push
dec
xchg
pop
repnz
lret
sahf
mov
and
cwtl
xchg
xor
adc
cmpb
pop
mov
jns
lahf
and
daa
dec
enter
cli
mov
lret
sti
gs
or
mov
pop
sahf
push
and
sub
imul
push
fsts
xor
shrl
pop
imul
enter
sbb
popf
outsb
mov
fstl
fcoms
dec
mov
test
or
mov
push
push
mov
insb
add
and
cmp
xchg
in
push
or
xchg
xchg
sub
mov
aaa
iret
push
jmp
rorl
loope
popf
lret
ljmpw
lahf
push
fadds
adc
sbb
xorl
cmc
int3
sbb
cltd
mov
jns
push
and
mov
inc
stos
sbb
pop
adc
xchg
sbb
bound
icebp
adc
sbb
inc
dec
dec
xor
cmp
dec
out
cs
or
aad
fcomps
dec
ficomps
fcmovne
je
push
aaa
loope
imul
mov
mov
mov
dec
xchg
xchg
mov
call
sbbl
out
nop
xchg
xchg
popa
call
mov
pop
in
mov
cmpsl
cmp
cmp
out
rorb
mov
dec
add
add
notb
call
nop
aas
insl
outsb
jecxz
clc
daa
add
mov
and
sbb
test
sub
jno
aad
outsb
test
cmpsb
inc
cmp
inc
inc
mov
scas
sbb
xchg
ret
jl
arpl
xlat
sahf
mov
push
mov
cmp
je
mov
and
call
out
inc
mov
or
insl
test
push
add
mov
insb
jecxz
xchg
jle
adc
mov
movsl
inc
mov
cmp
mov
push
std
cmp
xor
sbb
jo
sbb
pop
mov
xchg
ss
cmc
xorb
loope
add
andb
sbb
cs
fstl
out
test
into
mov
dec
jno
mov
sbb
cmpb
popf
xchg
imul
lods
and
push
xor
jge
push
mov
inc
lock
mov
test
push
dec
jecxz
xor
out
adc
call
sub
fsts
or
es
in
lds
shlb
lods
dec
push
ds
insl
fs
jp
fbld
push
pushf
xor
loop
addl
sub
into
sbb
je
aam
push
push
jne
jge
pop
dec
inc
mov
jmp
scas
lcall
bnd
add
push
adc
daa
lcall
scas
mov
inc
xlat
adc
fs
xchg
pop
pop
jmp
xchg
mov
or
inc
adc
mov
and
sub
pushf
push
inc
mov
sub
fwait
or
mov
pop
repnz
test
xchg
loope
nop
xlat
cmp
out
test
mov
and
mov
loope
rcrl
jnp
daa
leave
jp
xchg
sub
mov
addl
jmp
mov
or
rcrl
ja
aaa
jae
je
add
sub
pop
and
mov
ret
add
or
sbb
sub
jle
adc
sub
push
bound
bound
pusha
sub
cmp
mov
pop
or
mov
mov
xchg
mov
fisubrl
fisubrs
dec
adc
enter
testb
sub
mov
push
lret
bound
bound
outsl
aaa
jmp
out
jb
andb
mov
in
dec
mov
lahf
cs
pop
mov
mov
sbb
ret
dec
and
in
ds
test
push
mov
mov
inc
out
mov
mov
jg
xor
bound
aad
push
inc
and
sub
stos
lahf
lock
adc
mov
std
push
lcall
xlat
bound
and
xor
pop
movsl
dec
mov
in
xchg
aad
shlb
les
cmpsb
jno
out
test
daa
pop
repz
imul
mov
sub
cli
adc
aas
fwait
dec
shrb
inc
mov
cmc
outsl
icebp
adc
add
iret
out
pop
sub
into
inc
pop
jne
jae
hlt
adc
nop
mov
fistpl
scas
insl
mov
push
ss
mov
xor
stc
lods
mov
pop
jo
in
lods
xchg
in
fnstcw
popa
test
push
xlat
std
adc
and
sbb
cs
stc
dec
mov
fsubr
sahf
or
sbb
mov
addr16
imul
sbb
shll
push
test
add
jmp
mov
mov
and
push
repnz
pusha
iret
dec
cwtl
in
inc
insb
add
xor
cwtl
jns
loopne
mov
add
ret
sub
notb
lock
push
fwait
out
mov
in
mov
cmp
gs
pop
loope
dec
mov
shrb
sbb
fcomps
arpl
insl
lea
ficoms
push
cli
cwtl
xor
cs
add
fdivl
fsubr
dec
or
cmp
popl
sbb
je
aas
lahf
dec
rcll
movsl
adcb
xlat
add
push
fistpl
pusha
jnp
mov
jnp
int
ljmp
mov
ficoml
incl
jbe
aad
adc
dec
jg
clc
in
out
lcall
mov
push
lret
into
je
jl
inc
xchg
dec
fstpl
cltd
and
xchg
dec
scas
pop
jae
dec
rorb
insb
cmpsl
dec
dec
loopne
enter
mov
lahf
jb
cli
cmpxchg
inc
stc
nop
xor
enter
push
inc
inc
mov
push
out
xchg
aaa
cmc
dec
or
jnp
jge
iret
mov
mov
inc
imul
add
out
sub
shrl
pop
dec
push
mov
fnstcw
pop
outsb
in
or
cmp
js
rclb
or
or
jp
add
iret
movsl
jp
push
scas
sub
jns
and
outsl
cld
pop
add
icebp
mov
cwtl
xor
add
inc
dec
pop
mov
fs
clc
int3
ret
inc
push
pop
xor
mov
int
push
scas
inc
inc
sti
dec
push
lock
int
lret
popa
jmp
push
adc
nop
in
in
jnp
bound
jae
mov
lds
sbb
sbb
jo
jae
or
mov
push
aas
cmp
pusha
fwait
lock
daa
hlt
push
aad
divb
dec
dec
xor
push
in
sti
in
mov
add
sbb
popa
hlt
daa
jle
dec
repz
push
jne
push
iret
and
adc
inc
inc
mov
xchg
out
dec
dec
inc
loopne
das
out
inc
mov
adcb
cmp
dec
data16
pushf
lret
pop
mov
out
fucomp
scas
addb
jo
out
xchg
xchg
sub
icebp
scas
inc
and
jb
out
andl
sbb
dec
and
inc
cmp
fidivl
pushf
push
dec
scas
lods
mov
addr16
sub
mov
adc
pop
lret
pop
xchg
leave
jg
inc
leave
push
lock
fcmovb
dec
arpl
fmull
rcrl
mov
cld
fisttpl
mov
add
or
cmpsl
and
push
dec
clc
and
push
fucom
stos
fisttpll
shll
jmp
push
ja
enter
test
mov
push
sub
pop
pop
outsb
mov
test
js
mov
sbb
ret
jl
call
push
cs
add
aaa
jbe
jmp
std
dec
sar
push
outsb
daa
scas
xor
lock
test
add
inc
push
shlb
dec
xor
mov
cwtl
inc
shrb
mov
add
cmp
push
sbb
loop
push
mov
aad
pop
es
decb
adc
add
mov
aam
outsb
fwait
loope
scas
nop
jecxz
and
das
lods
cwtl
addl
xor
adc
andb
in
movsl
jnp
daa
gs
sub
cli
dec
push
mov
es
push
fs
clc
xchg
test
fnsave
mov
cmpsb
std
lods
xchg
clc
lcall
inc
mov
lods
xchg
add
clc
pop
xorb
fsubr
cmp
push
and
out
sti
xchg
imul
rcrb
jge
mov
movsl
jp
lods
and
adc
inc
lods
mov
sbb
jo
xor
in
icebp
js
cmp
adc
jp
outsl
fistpl
push
cmp
loop
mov
push
mov
nop
cs
cmp
dec
add
pop
mov
cmp
pop
push
cmp
jno
lods
in
test
lret
loope
lds
sbb
jle
inc
out
mov
aaa
add
add
test
in
adc
adc
mov
arpl
sub
push
and
ret
inc
pop
jae
xchg
movsb
pop
push
ljmp
jb
push
imulb
hlt
xlat
push
sbb
mov
adc
std
mov
push
iret
dec
std
in
jno
daa
xchg
std
pusha
jo
aam
adc
pop
shrl
xor
lea
out
loope
popf
or
add
popf
scas
adc
add
out
pop
push
outsl
stos
iret
scas
mov
cmp
fadd
fs
rclb
inc
pop
xchg
shrl
pop
fs
sbb
ret
data16
mov
je
jo
push
fwait
jge
fisubl
xchg
jp
shll
mov
cmp
cld
shlb
ljmp
shl
imul
lock
cmp
push
in
mov
push
loop
insl
inc
cld
call
sub
dec
push
jmp
xorb
es
xor
cli
dec
loope
jbe
xor
adc
pop
push
stos
fidivs
mov
fucomp
adc
jae
insb
jmp
mov
push
and
rcrl
cli
pop
jg
mov
aas
fmuls
mov
or
mov
ret
adc
dec
cmpsl
fdivrl
push
add
es
loop
jmp
xor
imul
inc
sbb
popa
sahf
stos
push
sbb
outsl
jb
cmp
aad
aas
stc
dec
in
rcl
jg
cmp
rcrb
add
add
in
cwtl
ja
inc
add
xchg
sub
cmc
orl
mov
int3
pop
ja
xchg
cmp
shl
lret
pop
xor
cmp
add
lds
dec
and
push
imul
mov
cltd
xlat
push
lock
mov
cmpl
clc
pop
jge
inc
scas
jp
dec
lods
out
xchg
sub
pop
cwtl
fucom
movsl
and
xor
jae
jle
jmp
aaa
dec
inc
rolb
bound
in
int
ss
jo
adc
push
mov
mov
xchg
cmp
or
pushf
aam
mov
shll
data16
stos
imul
insb
sbb
cli
xchg
jle
cmpsb
mov
adc
or
insl
mov
lods
out
scas
push
rclb
mov
xchg
out
int
and
ljmp
daa
xchg
pop
fdivl
outsb
dec
aad
push
call
or
adcl
popa
aas
fisubrs
scas
push
xlat
push
cmp
lds
push
jmp
repnz
ljmp
mov
push
test
incb
cmpsb
roll
insl
push
jae
jne
idivl
pusha
jg
pop
repnz
daa
mov
rorb
cltd
dec
pop
lret
sub
in
adc
jno
jns
mov
mov
inc
mov
mov
stc
enter
imul
faddl
and
sbb
xchg
lahf
loop
mov
dec
mov
xor
aaa
cmpsb
ja
push
inc
or
cltd
inc
push
cs
xchg
scas
cmp
ret
adc
adc
inc
ret
nop
add
cmp
mov
xor
cld
xchg
sub
es
dec
sbb
repnz
cmpsl
faddl
jecxz
jmp
dec
pop
lock
test
outsl
pop
aam
mov
sub
int
and
jl
loopne
leave
sti
mov
sub
mov
stos
in
jle
int3
es
jbe
loope
add
mov
rcrb
push
sub
rcl
and
mov
test
loopew
push
mov
les
cwtl
sahf
in
adc
into
nop
pushf
pop
fadd
fnstenv
push
cmp
fisttps
clc
jp
inc
sti
ficompl
addr16
mov
dec
cli
sub
rclb
mov
adc
loop
xor
xor
lret
cld
dec
xchg
dec
mov
and
icebp
adc
jge
push
pop
loopne
inc
push
inc
out
ret
mov
lahf
fsubl
sub
adc
jge
stc
stos
inc
daa
nop
lods
aas
out
ds
rol
dec
mov
loopne
sub
sbb
push
aaa
lret
add
jle
inc
lret
push
aam
push
sar
inc
mov
mov
sub
ret
imul
jnp
cmp
or
iret
jo
adc
push
add
pop
cs
addr16
repnz
je
insb
inc
leave
lods
xchg
pop
in
call
rol
data16
push
in
mov
pop
fadds
lahf
push
pop
fwait
sub
test
aas
or
cmp
dec
dec
or
fwait
xchg
and
not
data16
jl
pushl
aad
jle
mov
jb
scas
push
repz
xor
dec
shrb
mov
pop
mov
scas
inc
fmuls
test
xchg
adc
ret
hlt
aas
jle
dec
shr
cmp
lods
cmp
pop
cld
in
dec
insl
mov
bndstx
mov
fisttpl
inc
sbb
and
stc
sbb
inc
pop
cmp
adc
mov
pop
pop
add
pop
ds
mov
shrb
sub
xchg
mov
btr
jecxz
les
lcall
dec
pop
scas
lahf
jle
enter
dec
or
enter
dec
and
mov
xchg
mov
adc
nop
push
daa
jl
fwait
cld
cmp
aad
lods
fdivp
cmpsl
ds
popa
mov
not
pop
repnz
mov
out
inc
jo
jb
xchg
sub
cmp
pop
jbe
jb
pop
jmp
loopne
sbbl
lea
cmp
icebp
add
cmp
mov
jno
std
cmp
or
fadd
repz
push
ds
aaa
dec
lcall
mov
addr16
cmp
add
mov
fwait
dec
mov
sbb
jne
mov
sub
cli
test
sbb
mov
adc
loopne
movsb
adc
push
addr16
pop
test
call
xor
imul
jo
shlb
sub
pop
push
inc
std
cltd
test
xor
or
into
sub
pop
push
cwtl
in
push
add
jg
popf
pusha
mov
lahf
jnp
in
lds
add
int3
mov
push
iret
out
pop
sub
push
push
mov
dec
mov
in
enter
mov
mov
or
clc
add
adc
sub
jp
shlb
and
mov
jb
push
mov
cmp
inc
pop
inc
lret
jbe
jno
insl
push
xchg
lahf
icebp
repz
arpl
sbb
lcall
sbb
xchg
sarl
movsl
out
push
dec
fdivrs
sub
mov
xor
cmpsb
xchg
lahf
push
mov
bound
loopne
bound
mov
xor
gs
out
lahf
mov
inc
bound
fnstsw
dec
outsb
jne
mov
iret
push
pop
pop
adc
inc
jns
clc
mov
jo
add
in
and
inc
pop
ret
sbb
xor
shrl
and
xor
inc
insl
repnz
adc
loop
push
mov
jns
arpl
inc
cmpsb
mov
lock
cmc
outsl
shrl
adc
sub
scas
gs
lcall
sbb
sarb
adc
data16
sti
movsl
xchg
out
dec
pop
aaa
xor
fwait
insl
push
arpl
inc
insl
sbb
dec
lods
xor
adc
in
sub
mov
xor
das
mov
add
push
in
call
cmc
adc
cmp
jecxz
jo
adc
inc
xor
lret
and
push
dec
xchg
sub
cs
add
out
pop
shlb
adc
xchg
stos
add
jle
into
fdivrl
cmp
popa
sbb
push
and
fwait
adc
dec
std
fdivrl
push
pop
fstps
roll
jne
and
xchg
pop
imul
aam
pop
sahf
sti
pop
inc
ficoms
ds
cmp
adc
jne
xor
jne
test
push
push
mov
dec
cmpsl
sbb
sahf
or
inc
repnz
std
sbb
rorb
shlb
aad
add
in
out
rorl
xchg
jns
adc
sbb
cmc
dec
mov
fldenv
pop
int3
lea
adc
mov
fidivrl
lcall
imul
in
push
es
adc
les
mov
lahf
push
sahf
mov
or
push
mov
mov
std
test
inc
xchg
lods
jge
push
cmp
xchg
test
sbb
pusha
mov
les
xor
mov
scas
mov
ss
xchg
fdivrl
fisubrl
add
lock
or
int
mov
enter
pop
xchg
andl
and
pop
mov
aas
addl
pop
sub
lods
sbb
pop
add
movsl
stc
aam
daa
mov
fimuls
sub
movsl
fstl
movsl
sarb
fdivs
stc
or
lahf
lods
insl
fs
mov
bound
cltd
dec
sub
into
fbld
mov
pop
mov
fsubp
xchg
stc
mov
xlat
rcll
jge
sbb
call
pushf
je
shrb
sub
push
and
or
je
adcl
ss
jo
jb
xchg
xorb
push
mov
arpl
nop
jno
test
js
repz
cmpsl
cmp
subl
rol
loopne
ret
iret
mov
cmp
loop
dec
xchg
repnz
inc
fidivrl
jmp
sbb
lcall
pop
jne
in
inc
stos
or
popf
sbbb
fcomp
or
push
pop
iret
subb
outsl
push
fbstp
fidivl
pop
sbb
iret
jns
push
loop
cwtl
imul
fmul
sbb
add
mov
push
sarb
outsb
hlt
xchg
pop
ja
xor
jp
mov
xchg
sbb
sub
adc
or
dec
jge
push
lds
popf
test
sbb
scas
test
xchg
push
std
je
stos
sub
adc
jge
lcall
mov
ret
jp
int
jmp
ja
inc
mov
xchg
and
insb
cmp
mov
add
jmp
out
into
cmp
dec
adc
mov
lcall
inc
sub
mov
in
in
icebp
xchg
shl
mov
dec
mov
pop
pop
push
xor
jl
stos
pop
and
cmp
js
mov
jecxz
xchg
cltd
dec
cmp
and
pop
popf
mov
push
dec
cmp
and
fiaddl
jae
out
clc
ja
cli
inc
test
push
fmull
dec
mov
inc
ja
fldl2t
mov
shlb
or
mov
push
jmp
mov
jb
pop
mov
loope
cmc
bound
push
sub
cmpsb
nop
in
pushf
sahf
nop
loopne
inc
cmpsl
aas
loop
lea
cmp
rclb
or
jle
inc
clc
jge
cld
lcall
push
mov
mov
cltd
in
inc
ljmp
out
cmpsl
push
dec
dec
fstpt
imul
mov
clc
xor
sub
sbbl
jnp
scas
xor
mov
mov
cmc
inc
lret
shrb
fidivrs
aas
fidivl
rcll
mov
cwtl
test
dec
repnz
xchg
pop
outsb
mov
jge
mov
ja
addr16
xchg
push
jnp
pop
lret
sub
shll
int3
arpl
fs
popf
addr16
stc
sub
jp
pop
and
pop
loop
pop
test
stos
xor
call
mov
inc
lds
fldl
arpl
and
dec
in
insb
add
cmp
dec
jmp
icebp
movsl
xor
mov
cmp
arpl
or
in
cs
mov
ret
lahf
imul
movsl
sub
mov
jns
loop
jle
mov
mov
lcall
stos
push
mov
inc
mov
add
data16
jne
xchg
sub
icebp
sub
pushl
jb
out
jg
inc
cmp
add
mov
push
popl
add
mov
sbbb
out
call
jno
cmp
ds
mov
popa
das
roll
inc
or
push
mov
loopne
pusha
rolb
lods
fdivrl
icebp
sub
jno
cmp
enter
push
cmpsl
loop
adc
insb
arpl
cmp
xchg
mov
mov
pop
shrb
fcoms
shlb
movsl
and
push
daa
out
daa
jns
sub
je
mov
adc
mov
pop
sbb
fsubrs
shrl
jns
pop
jle
pop
mov
aam
cltd
pop
push
out
sbb
adc
ficompl
neg
outsl
sub
insl
sbb
jne
xor
mov
sbb
lret
cmp
inc
push
insl
in
sub
pop
inc
sub
sahf
addb
adc
loopne
sub
push
test
data16
jecxz
icebp
sbb
dec
lds
insb
icebp
test
add
sbb
fsubp
or
sarl
fs
mov
sbb
xchg
arpl
adc
sub
inc
jp
jo
and
mov
popl
push
test
cmpsb
addl
mov
fdivrs
outsb
lret
push
sub
call
aam
mov
add
dec
push
inc
xchg
popf
aam
adc
mov
dec
aaa
inc
aas
insb
mov
jno
push
jmp
cltd
sub
and
xchg
xchg
and
pusha
push
pop
fdivr
xor
mov
stos
imul
adc
fbstp
shl
aaa
or
arpl
dec
popf
mov
xchg
out
dec
adc
pop
adc
ret
test
jb
fwait
lods
out
movsb
hlt
mov
xchg
or
push
imul
jmp
das
jne
shlb
sti
jns
pop
lods
mov
pop
dec
clc
xor
fsubrl
xor
push
jle
je
ret
lea
or
loopne
sub
mov
xor
ret
repz
jle
xchg
not
leave
or
push
cmc
push
fbstp
lahf
inc
hlt
in
pop
adc
push
or
cld
dec
leave
adc
sti
jbe,pn
sbb
add
xor
inc
in
enter
ljmp
lock
dec
cltd
sbb
cmp
jmp
js
ljmp
mov
and
and
shll
fbld
rol
jae
sti
cmp
push
mov
push
pop
pop
insl
aad
mov
cmp
mov
aam
insl
sub
sub
adc
inc
div
push
inc
repnz
sub
lcall
xor
aad
int3
arpl
call
outsb
stc
xchg
ljmp
in
loope
xor
fsubl
aam
push
jno
pop
xchg
push
shr
addb
sahf
lods
xor
out
inc
push
fldcw
mov
inc
mov
in
pop
enter
push
outsl
xchg
dec
out
loope
push
mov
add
pop
pop
stc
nop
mov
ljmp
insb
scas
movsb
or
mov
and
enter
ror
or
dec
mov
inc
cmp
cmc
pop
repnz
mov
rcrb
enter
push
aas
xor
inc
pushf
repnz
add
push
fsubrl
mov
clc
jmp
push
std
jg
inc
test
push
loop
lea
xor
test
loopne
outsl
or
inc
xor
negl
insl
aaa
sti
aad
adc
out
ja
scas
movsb
xchg
jae
cmpsb
sbb
daa
bswap
sbb
out
inc
sub
mov
cmc
jns
mov
adc
stos
cs
sti
pop
imul
aam
adc
pop
stos
mov
jnp
jae
or
nop
xor
loopne
pop
adc
pop
ljmp
insl
cltd
test
pop
int3
fucomip
repz
loop
inc
das
shll
cmp
push
and
std
outsb
outsb
jecxz
adcl
adc
scas
pop
mov
sub
pop
pop
sbb
rcrb
fxch
out
jge
or
dec
nop
lods
pop
out
scas
pop
dec
in
repz
cld
gs
push
sub
test
adc
inc
dec
aaa
xchg
lahf
pop
sub
pop
sbbb
xchg
je
jbe
fwait
aaa
add
fs
mov
mov
addr16
pop
out
adc
idivb
jcxz
in
push
test
mov
sti
adc
sbb
xchg
in
push
shlb
lock
push
aad
xor
scas
fisubl
sbbl
add
xchg
mov
jns
imul
das
in
mov
xchg
js
xlat
mov
sbb
or
out
dec
iret
jb
iret
dec
loope
sbb
pop
lods
push
ret
pop
cwtl
ret
dec
mov
ss
stos
xor
mov
dec
aam
sbbl
xor
mov
mov
dec
dec
ret
sub
shll
iret
inc
cs
js
pop
mov
inc
sahf
inc
mov
mov
outsl
jno
mov
leavew
xor
adc
insb
inc
mov
cltd
sub
lea
mov
sbb
fs
sub
push
sbbb
fidivrl
mov
mov
mov
aad
cltd
pop
push
jmp
mov
adc
aas
clc
and
and
pop
pop
jae
and
mull
adc
xor
push
dec
pop
sarb
adc
inc
loop
pop
imul
cmp
jg
mov
cmp
mov
xchg
mov
jb
add
outsl
lds
pop
scas
hlt
xchg
sub
les
sbb
mov
or
es
inc
fs
nop
inc
lods
adc
fs
fnsave
pop
fisubs
jae
outsl
cmp
push
cltd
mov
mov
nop
sbb
xchg
push
cmp
pushf
jae
mov
je
sbb
aad
xchg
push
addr16
jnp
mov
aad
mov
psubsw
push
xchg
jmp
sbbb
sub
and
imul
aas
mov
inc
jne
popa
fcoms
xchg
push
scas
pop
popf
pop
jmp
xor
ret
ds
bnd
movsb
fwait
mov
daa
leave
mov
in
imul
movsb
jge
push
mov
sub
in
fwait
inc
icebp
or
mov
mov
fwait
inc
popa
mov
adc
inc
and
xchg
sbb
in
jg
sbb
sti
cld
enter
les
aas
dec
loope
out
movsb
das
cmpsb
jmp
mov
dec
mov
sub
outsl
mov
mov
sbb
in
mov
sarb
dec
mov
lahf
pop
cmp
outsl
push
mov
jbe
mov
das
out
sub
mov
call
mov
push
insl
scas
aaa
add
adc
aad
mov
sub
shll
ret
loop
xor
rcrl
xor
fwait
mov
dec
push
call
add
lcall
insb
xor
stos
xor
sbb
mov
fwait
push
jg
or
adc
jmp
frstor
pop
test
add
adc
xor
mov
pop
fs
mov
fsubs
or
jo
pop
add
xchg
mov
fwait
xlat
div
addr16
repz
imulb
leave
cmp
lret
test
push
or
loopne
jmp
sbb
stc
dec
fiadds
popl
mov
insl
push
insl
insl
mov
test
cmp
imul
movsb
dec
icebp
iret
push
push
mov
pop
inc
cli
sahf
inc
sbb
jg
sub
mov
outsb
loope
cmp
xorb
daa
xlat
sbb
dec
repz
movsb
iret
daa
cwtl
loop
mov
mov
inc
shrl
rcl
movsl
or
aaa
fs
adc
cltd
lcall
ja
ja
insb
mov
cld
dec
aam
pop
and
sarl
ljmp
outsl
je
xlat
inc
mov
jns
jo
dec
mov
in
lods
xchg
pop
fnsave
mov
pushf
icebp
scas
bound
arpl
repnz
dec
inc
call
or
xor
lds
sti
cmp
sbb
in
fsts
iret
xchg
in
sub
mov
test
int3
pop
mov
adc
mov
lods
les
pop
scas
mov
aas
mov
frstor
test
adc
adc
cmp
mov
and
enter
in
mov
lea
imul
js
xor
add
aas
jg
fs
push
push
xor
cmp
cmpsl
sub
lret
sbbl
mov
ret
dec
push
jl
popa
std
into
cld
xchg
stos
adc
gs
pushf
inc
xchg
iret
jg
test
push
fwait
mov
or
jno
das
jae
sbb
add
scas
adc
hlt
mov
icebp
ja
fcompp
pop
lret
insl
dec
pop
mov
mov
lods
or
pop
fstps
inc
scas
rcll
lcall
popa
fsubrl
cmp
mov
addb
enter
test
cmc
cmp
cmpsb
dec
loop
loope
pop
mov
pop
frstor
push
jae
test
cli
aas
xlat
ss
push
pusha
pop
imul
mov
outsb
stc
mov
sbb
or
jge
jns
sbb
call
push
das
orl
and
inc
push
inc
jge
into
and
fiaddl
xchg
gs
out
sarl
scas
mov
decl
rcl
in
adc
sub
loopne
in
lcall
xor
imul
mov
in
xchg
cmpsb
lock
gs
mov
adc
adc
call
mov
ljmp
lods
lea
add
sbbb
test
and
jg
ret
enter
es
loopne
jo
scas
mov
sar
inc
jbe
fmulp
data16
call
mov
stos
mov
in
xor
testb
mov
inc
aam
negl
xchg
sub
cwtl
repnz
xlat
mov
mov
scas
push
jle
dec
jecxz
cmc
inc
clc
mov
push
pop
push
outsl
loop
lds
and
hlt
test
js
pop
mov
in
pop
pop
testb
mov
jg
mov
das
push
jnp
xorl
mov
shlb
out
shl
pushl
rclb
out
inc
jb
mov
stos
shr
push
push
inc
xchg
add
into
popa
int
cmpsl
test
mov
hlt
jne
fs
arpl
cmpsl
test
mov
push
push
pushf
pop
jge
or
mov
das
sahf
cmp
movd
les
iret
cmpsb
out
rcll
xor
xchg
push
enter
xchg
or
push
xchg
lods
stc
cmpl
dec
adc
out
das
pop
ja
outsl
adc
mov
jge
fists
cmp
add
xchg
iret
sub
stos
mov
sbb
addr16
xchg
test
inc
lcall
lods
ret
rcrb
and
jle
std
lret
arpl
adc
addr16
test
xchg
mov
leave
dec
pop
dec
push
loopne
js
popf
sub
popf
lret
push
lds
mov
sbbb
mov
jns
push
jmp
mov
outsl
cmc
nop
pop
ret
divl
insb
xchg
hlt
test
ljmp
mov
xor
jae
xor
and
nop
out
inc
inc
fsubrl
lret
and
pop
mov
or
cmp
mov
mov
push
aaa
push
lods
or
pop
or
jge
inc
cltd
sbb
int3
jnp
stos
mov
mov
nop
push
fstpt
cld
xchg
cmp
mov
lret
addr16
cmp
jae
pop
cmp
jbe
lods
gs
fisubs
or
mov
fadd
xchg
pop
movsb
add
fnsave
adc
sbb
ret
dec
addb
scas
xlat
int
ret
push
repz
dec
or
das
jg
nop
inc
push
jl
push
movsl
jg
repz
mov
insb
cltd
inc
gs
insl
pop
hlt
mov
mov
mov
sbb
pop
movsb
push
xchg
data16
xchg
jg
inc
cmp
cmp
fwait
push
inc
xchg
inc
fs
xlat
scas
xchg
mov
sbb
clc
jns
aas
sub
out
popa
loopne
mov
and
inc
push
mov
cmpsb
xchg
lcall
lcall
pop
mov
sar
cmp
data16
dec
sbb
in
xor
xchg
mov
testl
outsb
dec
xchg
mov
mov
subb
mov
insb
lock
adc
test
lret
movsl
lsl
inc
add
pop
ja
rorl
ss
cmpsl
daa
mov
jnp
sbbl
rorb
xchg
push
and
jmp
std
push
das
cmpl
pop
ja
sbb
adc
decb
push
mov
push
mov
roll
repnz
cmp
inc
adc
adc
es
mov
or
out
sbb
sbb
pop
sbb
cmpsb
imul
pop
ljmp
push
or
or
xchg
xchg
mov
lods
sub
loopne
jns
mov
cmp
loope
in
jo
cwtl
pop
lret
jb
and
inc
jno
jbe
cmpsb
sub
adc
inc
fcmovu
dec
cmc
push
stos
sbbl
push
sbb
leave
sbb
loop
insl
xlat
rcr
in
insl
adc
mov
fldl
jb
faddl
aad
mov
and
daa
in
add
lret
int3
mov
jno
loope,pn
enter
jne
fs
dec
cld
jno
stc
and
inc
add
mov
mov
ljmp
data16
outsb
lock
fsubs
ret
pop
fdivr
inc
lcall
out
arpl
sahf
sub
into
dec
mov
xchg
or
divl
in
out
adc
rorl
jmp
test
sub
push
add
fildll
outsb
adc
sub
mov
mov
jmp
sub
inc
jno
push
pusha
movsl
fwait
sub
dec
or
mov
push
inc
push
and
xor
xlat
loop
hlt
jecxz
and
fsubr
jo
add
cmp
cli
icebp
ret
push
pop
push
xchg
popf
add
gs
ljmp
lea
cmp
popa
cmc
mov
shl
sbb
pusha
scas
mov
adc
fnstsw
in
fwait
sbb
mov
cwtl
pop
push
lahf
shll
into
vpsadbw
cmc
jg
push
jne
mov
push
or
negb
pop
pusha
add
jg
inc
int3
int3
ss
push
cmpsb
pop
out
push
inc
inc
fidivl
jo
mov
je
pop
jbe
xchg
scas
out
imulb
inc
pop
jbe
imul
and
dec
cmp
add
enter
in
jae
inc
rcr
cmpsl
add
inc
or
pop
in
outsl
jle
sbb
sub
stos
loope
fsubl
fwait
mov
imul
mov
jmp
mov
push
jg
push
dec
repnz
sti
jge
sarl
pop
ljmp
and
mov
jg
or
add
mov
pop
dec
mov
fsubrs
rcll
daa
push
fnstsw
movsb
cmp
leave
or
sub
sub
imul
int3
xor
xlat
arpl
mov
jne
push
mov
leave
les
jo
mov
roll
enter
vmread
into
enter
sub
inc
pop
jecxz
sub
gs
outsb
fildl
mov
mov
sub
lret
popl
cmp
test
cltd
pop
insl
add
pusha
push
mov
add
test
popf
add
push
les
jbe
mov
or
inc
testl
fldenv
push
xlat
jnp
or
rcrb
and
negl
xor
jb
cmp
and
push
pop
mov
adc
sahf
test
push
sub
jle
mov
out
idivl
aad
cltd
test
addr16
lods
adc
in
push
repnz
jo
std
cmp
xor
outsl
adc
and
jo
pop
xchg
lcall
sub
jg
xchg
cltd
movsb
cli
scas
jge
in
or
pop
lock
adc
mov
gs
sbb
ret
lcall
jecxz
and
and
aad
push
ss
inc
push
cwtl
mov
pushf
popa
icebp
or
mov
mov
addr16
or
es
xor
cmp
xchg
cmc
lret
push
jmp
and
jmp
push
rolb
popf
jg
inc
dec
add
std
leave
cmc
mov
mov
std
push
pop
and
pop
xchg
scas
fistpl
pusha
ret
hlt
xchg
es
repnz
ret
adc
fs
sbb
jl
xor
sbb
jg
iret
aad
clc
mov
test
scas
scas
test
cltd
pop
add
lea
aaa
leave
clc
fs
xchg
cmpsl
ds
mov
lds
sub
mov
sbb
sub
outsl
mov
fs
ret
mov
add
scas
xchg
mov
dec
ja
sub
pushf
icebp
dec
stos
cmp
jb
rcrb
xchg
push
in
pop
xchg
mov
adc
push
add
sahf
out
cld
adc
or
movsl
xchg
mov
fiaddl
sar
pop
jb
pop
sbb
pop
xchg
mov
mov
sti
loope
sahf
push
add
or
fildl
or
jge
mov
les
xor
into
xor
add
or
iret
call
jge
mov
loop
adc
test
icebp
fcompl
xor
rcl
mov
or
sbb
dec
push
jnp
mov
pop
jg
loop
xor
xlat
icebp
and
mov
mov
jne
cmp
pop
add
mov
inc
mov
push
mov
mov
mov
xlat
xor
pop
xchg
dec
xchg
pop
pushf
shr
lods
pop
adc
xor
mov
lret
inc
and
cmpsl
fdivl
mov
or
dec
push
or
je
call
push
aad
rorb
and
movsb
add
ja
idivl
xchg
and
add
test
dec
nop
mov
mov
shll
cld
xchg
pop
addr16
xchg
ret
repnz
das
fsts
push
pop
cmp
pop
xor
popa
dec
test
cmpl
push
scas
mov
fbld
cmp
add
cwtl
dec
insl
inc
popf
adc
cmpl
mov
sbb
mov
mov
loop
sub
mov
adc
dec
adc
cmp
aam
insl
pushf
mov
push
fsts
inc
inc
sbb
popa
push
push
int3
pop
mov
push
cmpsl
mov
insl
out
scas
dec
shl
ret
sub
push
sub
loopne
inc
loope
adc
jl
jecxz
add
jno
daa
mov
add
mov
cld
xchg
pusha
aam
xlat
add
sbb
dec
mov
push
movsb
jmp
mov
adc
jne
pushf
xchg
scas
cmpsb
push
je
pop
mov
or
aad
adc
movsl
pop
jae
scas
fs
stos
enter
arpl
data16
cmp
push
stos
shl
xor
push
ja
out
xor
adc
push
dec
fcmovnb
pop
or
push
add
pop
pop
movsl
in
xchg
pop
cmp
adc
in
ds
into
mov
xchg
imul
mov
xor
hlt
cmp
icebp
pop
push
sub
adc
movsl
lret
sub
mov
and
sbb
cmp
cmc
mov
cmp
ljmp
icebp
sub
pop
inc
gs
fisubs
mov
movsb
xlat
push
or
das
dec
cmp
mov
sbb
mov
bound
out
mov
or
add
xor
adc
cmp
mov
shl
mov
dec
repnz
incb
cmp
cltd
std
cmp
mov
xorps
cmp
cld
or
xor
clc
mov
push
icebp
pop
xorl
mov
add
rorl
push
pop
cmp
fdivrs
ret
mov
push
cmc
xor
cmp
mov
shll
push
notb
lods
jle
sub
loop
mov
fdivrl
into
fsts
push
xchg
jae
insb
fistps
dec
fistpll
push
out
hlt
sub
fists
gs
mov
sbb
mov
mov
test
iret
sysenter
adc
push
inc
pop
in
mov
jb
mov
pop
aam
pop
pop
aaa
mov
add
repnz
xor
test
mov
pop
lret
in
lea
cwtl
pop
sbb
stos
push
popf
xchg
hlt
mov
ret
sbb
pusha
cltd
mov
dec
mov
jbe
inc
xor
pop
repnz
int
jmp
fwait
jmp
mov
adc
or
js
mov
inc
inc
xor
leave
pusha
jne
mov
push
into
push
jae
scas
andb
lret
fmuls
loopne
rcr
scas
shrb
or
inc
fdivl
mov
push
push
rcl
ljmp
push
cltd
popf
mov
out
orl
mov
mov
xorl
or
inc
clc
push
lods
inc
pop
sti
xor
mov
cmp
loopne
cmpsb
fdiv
pop
or
daa
lods
std
mov
repz
ss
sub
sub
orl
clc
mov
and
sbb
adc
ret
xor
call
fs
mov
cmp
popf
adc
mov
and
pop
inc
add
scas
sub
pop
push
fbld
outsb
shl
stos
daa
add
mov
outsl
cmpsl
sbb
pop
int
mov
cmpsl
or
sub
and
ss
and
push
cmp
mov
aam
adc
xor
lds
adc
fwait
add
dec
sbb
mov
inc
aas
out
mov
call
in
clc
xchg
insl
inc
xchg
lcall
jo
roll
dec
sub
push
dec
clc
inc
fs
jo
jecxz
fwait
sti
mov
cmc
xor
adc
add
ljmp
and
je
xor
jae
push
call
dec
inc
or
fs
jb
in
nop
out
sbb
xchg
jmp
sbb
sub
lds
xchg
xor
lds
ficomps
lea
das
add
pop
xor
jecxz
lods
mov
inc
push
push
xor
mov
mov
imul
mov
jo,pt
mov
push
pushf
mov
jne
mov
jo
ss
adc
jbe
pop
repz
ret
pop
ss
mov
into
insb
or
stos
daa
lock
xor
mov
pop
insl
sbb
xor
fistl
cmp
mov
idivb
sbb
ret
sbb
sbb
sub
xchg
or
jno
jle
lahf
ficomps
sub
xlat
out
adc
fisubrs
call
ss
shlb
xor
insb
jmp
loopne
rcll
cwtl
das
mov
sub
xchg
and
push
cmp
sbb
dec
stc
cmp
data16
mov
or
imul
mov
das
int
pop
or
cmp
les
push
fwait
mov
sbb
jmp
outsb
into
cmp
and
xchg
xchg
mov
popf
nop
lret
jae
adc
ja
lock
loope
bound
jnp
test
jno
cld
ret
cmpsl
stos
xchg
cmp
lock
mov
out
rorl
insb
int
adc
or
lcall
cwtl
sub
mov
dec
cmc
out
sbb
mov
pop
pop
movsb
call
or
jecxz
ret
inc
test
stc
in
ja
xchg
mov
add
aad
dec
cli
popf
lock
outsl
mov
loope
imul
hlt
loope
jecxz
ret
sub
add
sub
push
lcall
cmpsb
subb
sbb
movsb
mov
je
pop
out
stc
rorb
je
xlat
movsl
ret
sbbl
xor
inc
gs
lahf
sbb
mov
outsb
mov
hlt
sbb
call
pop
cmp
scas
loop
mov
push
scas
push
fcoml
push
out
lods
sti
test
add
loop
sbbl
ss
push
dec
lcall
xor
jge
and
cld
insl
sbb
cmp
sub
mov
jae
cmp
into
int
add
mov
enter
push
or
into
adc
mov
lret
test
ja
pop
push
addr16
xor
cmp
xor
ret
das
shrb
pop
loopne
fidivs
in
call
or
push
xorb
inc
mov
cmp
jno
aaa
jbe
xchg
int
les
jo
push
mov
shl
fadds
mov
into
inc
sbb
xchg
or
shlb
lret
pop
aad
cmp
test
dec
jno
stos
scas
insl
rclb
mov
xor
xchg
mov
xchg
xchg
sub
sarl
mov
mov
aam
xor
into
xchg
scas
fnstenv
and
push
mov
fsubr
test
and
jl
jb
mov
add
mov
adc
insb
jns
sub
fwait
repz
adc
jle
movsb
cmp
jmp
and
call
sub
outsl
push
mov
jne
mov
fnstenv
inc
lock
addr16
cmp
aas
or
popf
mov
fsubrs
enter
stos
imul
adc
add
or
test
cwtl
test
adc
mov
cltd
mov
mov
pop
sub
js
fsub
xchg
pop
fwait
lods
xchg
cs
in
pop
xchg
addr16
adc
shlb
push
ja
pop
xor
or
pop
jno
jns
lcall
and
sub
inc
xlat
xor
sub
fisubl
inc
xor
pop
pop
and
jge
cltd
pop
leave
mov
dec
add
pop
jmp
pop
push
test
or
pop
cld
xchg
mov
sub
test
jno
pusha
mov
pop
cmp
sbb
scas
pop
fs
stos
dec
lahf
data16
out
lret
sub
mov
out
sbbl
jns
fists
imul
add
adc
mov
xchg
cmp
add
pop
dec
divb
stc
ret
xor
jle
cld
xlat
push
xchg
sub
sti
cmp
stos
mov
jg
mov
sbb
jnp
scas
xchg
shll
scas
dec
mov
xchg
xorl
iret
add
inc
jno
lods
dec
xor
push
arpl
fprem1
into
adc
add
pop
ret
jge
orl
in
out
pop
jmp
fs
fstpl
xchg
fnstenv
dec
ljmp
xor
lahf
inc
std
nop
lods
push
xchg
es
push
repz
jle
sub
sbb
hlt
push
xor
fists
jns
inc
outsb
cmp
mov
cmc
imul
rcrl
mov
xor
jno
scas
sar
sub
inc
lods
xor
add
jge
sub
fnstenv
out
hlt
xchg
notl
xor
xchg
xchg
xor
mov
or
out
js
push
mov
ljmp
insl
or
cmp
jbe
xchg
hlt
xchg
stc
ljmp
fwait
push
dec
repz
or
int3
pop
int
push
jp
xchg
push
ret
subl
ret
pop
aam
mov
xor
mov
mov
cltd
mov
pop
call
adc
std
sahf
push
jnp
and
sbb
dec
push
jns
nop
pop
das
loopne
ja
addl
fs
jbe
mov
push
xchg
out
xchg
sub
insl
jg
hlt
mov
mov
ret
pop
mov
pop
out
jns
jb
in
repz
stos
fnstsw
jmp
add
mov
cli
xchg
loopne
inc
shl
std
pop
mov
dec
or
push
imul
xchg
or
fimull
push
xchg
bound
jmp
cltd
dec
fbld
or
mov
int
in
fwait
adc
xchg
scas
out
push
in
mov
mov
push
pop
mov
jge
add
stos
ror
mov
and
pop
lods
pop
lret
dec
inc
out
data16
cmp
insb
adc
pop
dec
xor
test
divl
jbe
pop
or
orl
or
push
repnz
pop
dec
adc
cltd
pusha
pop
push
ret
insl
xor
jae
mov
mov
or
xchg
cmp
ja
pop
inc
test
sbb
sbb
pop
jecxz
push
sbb
mov
xchg
push
and
pop
stos
je
cmpsb
xor
fbstp
sub
scas
inc
popf
jo
lea
adc
jo
add
xchg
lret
data16
pop
or
lret
out
and
repnz
xchg
mov
ljmp
or
jl
or
cmpsl
inc
sbb
aaa
mov
dec
pop
jnp
and
repnz
adc
sbb
jmp
mov
jl
loopne
inc
fadd
cmpb
inc
pop
mov
ljmp
sbb
sub
lret
lock
jmp
push
and
mov
adc
cltd
pusha
testl
imul
pusha
pop
cmp
jne
dec
aam
adc
hlt
outsl
or
mov
mov
sbb
popa
into
lock
imul
xlat
jne
pop
daa
in
xchg
dec
loopne
call
and
cmp
out
pop
adc
push
add
cmpsl
fildll
aam
mov
cmc
adc
mov
push
xchg
inc
xchg
sahf
and
inc
push
mov
mov
ss
xor
sbb
fldl
mov
sahf
mov
lea
popa
stos
nop
mov
int3
addr16
fdivs
lea
dec
mov
out
hlt
or
pop
aad
sub
mov
or
dec
push
xchg
fcomip
mov
sub
inc
cmp
cli
ret
fwait
push
outsb
sbb
mov
shlb
mov
test
in
mov
xchg
or
adc
ret
or
loopne
push
sub
and
lds
sub
sbb
enter
mov
gs
test
in
push
or
js
dec
adc
das
bound
scas
jno
or
mov
xlat
in
adc
xor
lahf
push
outsb
cli
dec
cmp
jl
int3
mov
gs
jmp
test
xor
aam
inc
pop
stos
mov
push
mov
mov
lds
loopne
sbb
xor
cmp
sub
out
gs
lods
pop
adc
pop
and
adc
inc
jl
outsb
sbbb
pop
lods
cmp
cmpsl
mov
cmpb
lods
mov
add
cmpsb
adc
and
mov
jbe
inc
xlat
push
ja
pop
test
jl
in
pop
inc
pop
adc
jmp
in
test
leavew
inc
push
rol
xor
push
test
orl
pop
pop
stos
pop
dec
cmpsb
mov
push
cmp
mov
dec
idivl
or
or
std
xchg
sub
les
mov
mov
rcl
sub
add
pop
test
push
sbbb
xchg
sub
test
in
lds
gs
cltd
test
shrl
out
push
pop
repz
jnp
and
add
mov
add
imul
cmp
mov
or
es
je
icebp
pushf
outsl
lods
in
ficoms
mov
xor
xor
in
sbb
mov
dec
rcrb
int3
cmp
out
push
add
frstor
push
pop
or
pop
lret
cld
lcall
jne
lcall
and
into
jne
call
stos
push
xchg
popa
push
lods
int
inc
sbb
insl
into
push
fcompl
jge
icebp
cld
jg
pop
or
push
in
aas
sti
and
cld
bound
hlt
mov
enter
sub
pop
add
inc
cmpsl
or
mov
insb
fxch
stos
les
ja
pop
ja
mov
es
push
ret
movsb
jmp
repnz
mull
mov
xor
enter
outsb
dec
pop
xchg
sub
jl
fiadds
sbb
add
sahf
movsb
xor
out
out
xchg
xor
shlb
arpl
dec
dec
push
push
jl
sbbb
xchg
fldt
int3
xchg
pslld
sbb
pusha
or
or
and
add
pop
jo
stos
pop
and
fnstsw
mov
inc
movsl
ds
ffree
in
mov
mov
and
sbb
cmpsb
repnz
cmp
adc
mov
addr16
add
dec
cmp
aaa
int
les
imul
in
call
mov
ss
pop
pop
arpl
shrb
fs
mov
addr16
andl
ljmp
out
ljmp
jge
mov
clc
jae
xor
clc
and
mov
loop
sub
iret
jbe
pop
mov
in
adc
divl
jne
push
dec
xchg
jge
and
push
adc
jo
cmp
mov
shlb
push
daa
cmp
orb
jb
repz
sub
mov
or
jp
not
ds
aaa
or
mov
mov
xlat
cmpsl
jl
int
lds
insb
inc
xor
cmpsb
lods
sbbb
rclb
das
adc
adcl
jnp
add
push
push
in
mov
mov
rcr
xchg
insb
mov
daa
add
cmp
lahf
xlat
xor
push
test
aam
jo
out
das
ret
in
stos
xchg
lds
jl
fldcw
mov
inc
sub
leave
and
int3
in
ret
push
or
aaa
mov
push
mov
outsl
stc
movsl
or
call
xlat
push
xor
jl
out
lods
pop
push
popf
xor
aaa
add
lret
lods
jp
insl
fisubrl
lret
xor
cld
pop
pop
repz
shrl
test
xchg
daa
lcall
inc
fcoml
sarb
lret
ficomps
and
sub
movsb
test
pop
leave
xlat
bound
dec
mov
out
xor
sbb
addr16
shrb
jl
sub
push
mov
sahf
aad
and
fs
cmpsl
nop
push
xchg
mov
cmp
ds
stos
ja
xchg
mov
push
mov
aaa
or
test
jnp
push
pop
xor
dec
xchg
xchg
cmp
jmp
addb
mov
and
loop
jns
inc
sahf
mov
cmpsb
dec
dec
sub
sub
iret
std
xchg
inc
xlat
out
movsl
sub
ret
aam
dec
sub
ljmp
and
and
mov
cli
push
jo,pt
sbb
pusha
fcoml
mov
iret
loop
adc
lret
imul
fmull
pop
daa
ja
and
stc
dec
aam
inc
sbb
sar
inc
cwtl
pusha
xor
pusha
pop
lahf
xorl
bound
pop
xor
cmp
aam
push
inc
pop
pop
imul
sbb
lcall
pop
out
divb
ljmp
popf
arpl
cld
jp
push
icebp
and
dec
inc
icebp
mov
out
sub
pop
mov
mov
js
negb
mov
sahf
divl
shl
fsubrs
es
jge
int3
mov
cmp
shl
mov
movsl
jno
test
sub
into
int
mov
shlb
mov
or
pop
dec
mov
push
mov
push
out
sarb
jbe
mov
sbb
jp
and
cmc
adc
xor
arpl
lods
in
cmc
ror
pop
and
xor
test
sti
mov
icebp
rcrb
daa
daa
bound
into
lret
sarl
sbb
pushf
dec
fidivs
xchg
out
xor
ret
inc
test
stc
enter
add
das
popf
fisttpll
gs
mov
sub
jg
sbb
add
dec
and
mov
xor
mov
repz
fwait
rol
xchg
sub
hlt
push
jmp
mov
push
lods
dec
fidivrs
addr16
lods
rcrb
mov
aad
loopne
add
outsl
mov
js
mov
outsl
mov
repnz
mov
icebp
inc
jle
hlt
sbb
and
int
std
aad
cmpsb
sub
rcrl
dec
std
lods
in
jge
iret
jl
popa
bound
xchg
int3
add
mov
ror
lret
jo
je
test
lret
negb
and
ds
lcall
fcompl
dec
popa
sbb
xor
add
aaa
dec
pop
iret
out
imul
xchg
test
fucomp
cld
mov
pop
push
mov
out
aas
push
mov
fistpl
mov
cmpsb
push
sub
inc
push
cmp
mov
xchg
popf
inc
push
mov
dec
ss
jnp
movsb
cmp
cmp
jnp
nop
imulb
in
movsl
in
adc
pop
mov
iret
aad
push
xchg
mov
test
lods
jo
xchg
ja
icebp
inc
out
sahf
andb
add
cmp
rolb
jbe
addr16
rcrl
push
mov
cmp
pop
dec
cmp
loop
mov
fidivrl
pop
out
cltd
add
cmp
popa
insb
sub
pop
inc
or
pop
cmp
add
inc
mov
jnp
inc
xor
in
call
inc
ret
ret
imul
rcll
call
js
icebp
movsl
xor
dec
shr
pushf
ret
jnp
fdiv
mov
fst
pop
sub
movsl
push
cmp
notl
rol
cli
mov
sub
and
push
pop
cmpsl
lods
es
pop
lahf
sub
sarb
pop
xchg
fst
call
fdivl
jae
pop
scas
leave
iret
push
add
jb
jmp
dec
add
mov
test
mov
xor
jb
lods
jge
add
xor
push
adcb
sbb
ret
sbb
in
add
mov
xchg
out
mov
dec
xlat
mov
ja
adc
mov
sbb
ret
inc
sub
cs
push
fstps
cld
lcall
cwtl
notl
jb
cmpsb
xchg
xlat
mov
push
in
sub
add
dec
stos
repz
out
in
ds
cmp
mov
aaa
jmp
lds
jle
adc
int
sbb
popf
mov
imul
mov
out
jmp
lods
adc
popf
decl
aaa
into
cmp
lahf
data16
push
call
aaa
mov
jg
inc
pop
cld
pop
or
call
in
test
jge
dec
sub
inc
pop
mov
out
adc
cmpl
jbe
cmp
fbstp
push
adc
insb
or
mov
xor
das
or
mov
pop
push
push
cwtl
test
cmc
push
insl
jns
out
stos
dec
sahf
lods
fwait
scas
sub
out
xchg
cmpsl
adc
pop
ja
imul
stos
sbb
dec
je
lea
jne
fnstsw
leave
test
pop
mov
mov
pop
cwtl
fwait
je
xchg
mov
cmc
scas
xor
test
pop
mov
mov
test
dec
xchg
cwtl
movsb
insl
mov
es
fdivrs
dec
sbb
push
adc
divl
or
dec
test
movsl
xor
cmp
addb
mov
fisubrs
test
cmp
push
popf
dec
adc
ficoms
cli
xchg
lods
dec
fisubrl
cli
cmc
movsl
fsubp
fwait
repnz
inc
loope
sti
into
or
jbe
cwtl
inc
sbb
fucomp
pushf
push
loopne
test
sbb
add
das
inc
cmc
sub
lea
pop
ljmp
pop
mov
sub
pop
fidivrl
jmp
add
sbb
repz
cmpsb
lock
add
leave
mov
seto
test
dec
imul
or
jg
lea
test
fnsave
and
xor
int3
sub
shr
and
mov
pop
xchg
lds
xor
enter
mov
fcomi
dec
jb
dec
pusha
pop
mov
cmp
adc
neg
jo
mov
testl
imul
imul
popl
loopne
push
jmp
jno
sbbl
lock
insl
and
hlt
scas
imul
mov
test
pop
ds
scas
xor
mov
and
out
push
addb
mov
loope
jl
sub
jne
cmp
arpl
outsl
cmpsb
lock
std
lret
xchg
or
loopne
sahf
add
test
nop
xchg
stos
mov
div
loop
mov
inc
aas
into
add
add
pop
add
adc
inc
call
push
sbb
push
daa
ds
inc
mov
incl
rcll
into
pop
dec
ret
repnz
sub
xchg
aas
stc
add
mov
mov
fbstp
loopne
jmp
adc
xchg
clc
mov
test
icebp
fnsave
mov
cmp
je
aas
sub
in
fdivrl
ror
mov
out
movsl
mov
cld
and
adc
pop
cmp
jne
or
dec
aaa
ljmp
mov
rclb
pop
pusha
rorb
jle
lret
mov
dec
icebp
adc
mov
inc
mov
insl
faddl
hlt
mov
push
sbb
xchg
jl
mov
mov
rorl
fbstp
stos
pop
stos
pop
inc
std
cs
gs
in
mov
fistpl
orb
dec
cmpsb
in
stc
pop
cli
sub
or
cwtl
lret
and
lock
or
stos
lahf
cs
or
out
ror
add
pop
mov
fcom
mov
xchg
sbb
ficoml
cli
sbb
sarb
imul
cmp
cmp
repz
pop
adc
sbb
pop
mov
test
dec
sbb
xor
mov
xchg
lahf
leave
fnop
add
icebp
mov
les
les
gs
icebp
movsl
pop
sbb
or
push
cmp
mov
fldcw
mov
stc
cmp
mov
cmp
inc
fwait
jle
mov
test
aam
sbb
and
pop
dec
cmp
mov
fidivrs
or
or
mov
clc
cpuid
mov
sarl
sbbb
mov
addr16
insb
cmp
jp
aam
bound
stc
inc
mov
out
or
adc
int
cmp
add
jo
pop
and
add
mov
mov
or
in
mov
fnstenv
jo
adc
fldcw
or
mov
mov
fdiv
xchg
sub
les
mov
stc
cmc
fs
sbb
sbbl
mov
lret
mov
pop
pop
xor
cltd
sub
add
jae
repnz
or
jns
inc
pop
fucomp
mov
clc
push
xchg
fs
lret
psubsw
sbb
jmp
bound
inc
loop
mov
out
push
sbb
adc
adc
pop
je
add
loopne
outsb
arpl
aad
shrb
inc
mov
cmp
mov
dec
xor
popa
daa
cmp
or
psrlw
xor
aad
lahf
push
inc
pop
push
mov
fistpl
xor
in
jo
inc
outsl
inc
test
lcall
mov
repnz
in
inc
iret
sarb
repnz
pop
push
aas
dec
dec
xchg
push
pop
adc
hlt
push
icebp
xchg
cmp
repz
add
insb
dec
pop
mov
lods
sbb
jb
loop
lahf
out
iret
nop
nop
in
mov
shll
fcompl
pusha
inc
pop
xor
mov
dec
sbb
xor
mov
mov
add
mov
loopne
jge
xor
imul
pop
mov
jge
dec
add
jmp
jmp
insb
std
outsl
ljmp
sti
sahf
sub
sbb
aad
cmc
jmp
out
outsb
test
movsl
mov
xchg
scas
test
js
sbb
insl
gs
mov
mov
cmc
sbb
mov
loopne
sub
xlat
mov
mov
fnstsw
and
mov
jns
fisubrl
or
adcb
sbb
mov
fists
mov
arpl
or
xor
stc
push
fistps
fistpl
addb
je
mov
sti
jb
imul
aas
lret
mull
je
mov
call
and
pop
push
test
push
bound
push
or
mov
adc
minps
in
lahf
daa
jecxz
jl
test
lea
push
xchg
scas
mov
xchg
push
inc
sub
jae
aad
mov
mov
mov
insb
mov
dec
or
std
xor
out
in
inc
or
cli
loope
shlb
adc
pop
out
xchg
cmc
outsl
mov
mov
mov
jg
out
mov
sbb
cmp
push
addr16
mov
lds
push
add
dec
repz
mov
fistpl
push
push
mov
mov
cs
imul
or
flds
outsb
insl
sbb
xchg
hlt
pop
push
in
push
cmp
sarl
jno
shll
jle
test
test
dec
sbb
jp
xchg
inc
add
fstl
sbb
rcrb
nop
daa
repz
xor
push
mov
mov
aaa
repz
fadds
or
cmp
mov
add
repz
lret
pop
loop
and
jb
les
xchg
lds
jmp
hlt
hlt
mov
adc
lock
ds
add
call
subb
sub
pushf
push
ljmp
call
test
jbe
test
dec
dec
stos
push
xor
aam
xchg
lret
jg
adc
mov
fcompl
pop
xor
mov
shrb
leave
push
imul
filds
xchg
or
pop
sahf
mov
mov
jmp
jl
pop
mov
gs
xlat
xchg
sub
pop
add
jle
xchg
call
shlb
push
int3
jb
jns
push
in
or
in
pop
out
test
pop
mov
rcr
in
add
cmpsb
or
movsl
xor
ja
loop
stc
adc
push
cld
inc
pop
sbb
lods
inc
xchg
insl
fwait
in
pop
addr16
inc
int
mov
mov
cmp
outsb
fsub
jns
push
jo
xor
sub
sbb
adc
push
sub
sub
xchg
pop
int3
bound
loopne
xchg
mov
cwtl
out
xchg
mov
loop
jmp
insb
ret
xor
hlt
add
fidivrs
pop
js
aas
je
outsb
das
popa
leave
pusha
push
pop
mov
xchg
xorl
mov
fwait
and
xchg
stos
xor
pop
icebp
mov
int
iret
aam
fs
leave
test
inc
push
add
adc
insb
mov
or
aas
push
xchg
pusha
sbbb
cmpsl
dec
mov
jae
push
or
out
add
nop
jnp
cmpsb
mov
and
mov
jle
and
jne
movsb
or
into
push
mov
dec
mov
ret
fwait
and
xchg
push
or
cmp
push
mov
inc
sar
mov
dec
rclb
clc
rcrl
sub
test
mov
repnz
add
xlat
ret
lret
cmp
pop
sahf
sbbl
aam
adc
sub
jne
push
fidivrl
fyl2x
sub
adcb
adcl
xor
inc
test
sarl
pop
out
dec
ljmp
cmp
and
mov
push
or
inc
push
test
sar
or
pop
leave
jo
in
hlt
sbb
inc
sbb
ljmp
ds
mov
imul
insb
xchg
push
mov
sbb
ret
jns
adc
and
push
cltd
test
fisubrs
es
jbe
cmp
js
fsubrl
aad
xor
mov
cmp
cmp
rcrb
pop
pop
icebp
dec
insb
fldl
sti
sbbl
dec
pop
out
lret
dec
add
push
fucomi
push
xorb
jmp
int3
pop
lret
and
adc
inc
xor
scas
bound
xchg
mov
add
pop
mov
xchg
xchg
jle
out
inc
in
enter
jg
mov
ret
les
inc
lretw
push
adc
fld
or
fldl
xchg
imul
aam
mov
imul
fwait
lods
push
or
cs
imul
dec
fistpl
je
mov
jmp
lds
test
cmc
scas
insb
in
mov
or
lds
or
aad
sahf
xor
out
nop
mov
push
jb
add
or
imul
lods
mov
cmp
aas
cmp
lods
xchg
xchg
scas
test
std
inc
repz
ja
pop
sahf
fildll
call
fisubl
scas
enter
insb
pop
xlat
pop
mov
adc
paddusw
mov
adcl
jle
xor
pop
enter
xchg
decl
xchg
push
fwait
jge
sbb
in
sub
std
jb
adc
mov
xchg
xor
push
cmp
std
push
repnz
cmc
and
jl
xor
jl
jp
mov
vpmadcsswd
fdivrs
mov
mov
popf
xchg
lret
xorl
jg
int3
xor
xchg
popf
mov
adc
clc
rcl
mov
pop
push
out
mov
stos
cmp
sub
loope
in
mov
add
sub
lds
in
jo
and
sbb
cld
inc
xchg
pop
add
add
mov
fidivl
clc
mov
stos
mov
fistl
push
adc
lret
mov
mov
xchg
and
or
or
and
cmc
jb
mov
lea
add
scas
jge
mov
dec
sbb
scas
loop
fs
clc
adc
idivb
iret
mov
in
das
mov
sbb
inc
fs
add
lods
xor
jae
pop
fisubl
mov
sbb
add
int
and
cmpsl
cmc
jne
xchg
xor
lahf
sahf
cmp
out
jae
add
sbb
stos
cli
mov
leave
stc
or
leave
ret
lcall
inc
cwtl
mov
fisttpll
pop
stos
sbb
add
jl
jmp
lahf
pop
pop
xchg
mov
add
xor
sbbb
bound
mov
lcall
pop
loopw
pop
mov
sti
mov
fstpl
adc
add
cs
scas
and
dec
push
shlb
sti
lea
xor
out
mulb
add
jb
adc
mov
enter
inc
ljmp
ljmp
push
dec
inc
es
sbb
js
mov
push
mov
out
loope
xchg
test
dec
inc
inc
test
jmp
daa
push
into
iret
add
std
gs
mov
cmp
jns
icebp
push
cwtl
loop
js
inc
add
cmp
pop
adc
fisttpl
fldcw
mov
lret
mov
cld
or
adc
je
mulb
mov
push
fimuls
and
pop
scas
mov
lods
adc
xchg
fcompl
imull
cld
es
adc
aas
into
stos
insl
inc
push
push
out
pop
sbbl
xchg
sbb
aas
push
inc
sti
aad
push
sti
add
ret
out
jnp
enter
mov
aad
jb
aad
nop
daa
sarb
and
in
clc
xchg
aam
outsb
shl
adc
inc
adc
xchg
push
pop
push
iret
arpl
mov
push
into
dec
mov
jmp
push
add
test
dec
dec
jo
out
jmp
sbb
xchg
xchg
adc
bnd
mov
lea
pop
insl
repz
push
stos
mov
pop
std
mov
sti
call
or
add
pop
and
repnz
jnp
in
sub
roll
or
mov
sarb
mov
mov
ja
popa
jecxz
rcrl
mov
pop
and
mov
lock
cmp
inc
pop
jo
jle
pop
movsl
addb
test
sbb
fadds
cmp
shrb
or
nop
imul
hlt
mov
mov
dec
pop
xor
xor
push
adc
mov
dec
fbld
dec
or
mov
ds
cwtl
sbbl
xor
push
add
hlt
xchg
mov
das
and
cltd
and
pop
sarb
sarl
inc
pusha
jmp
out
mov
cmp
or
les
test
outsl
pop
dec
out
clc
jl
mov
mov
jno
addr16
cltd
lock
pop
lret
mov
in
clc
in
fstps
lret
dec
pop
in
popa
jne
xchg
popf
xor
cmp
aaa
jae
fisttpl
dec
in
cmp
into
cmpsb
cmpsl
repnz
pop
icebp
or
mov
pop
xor
fwait
gs
xchg
test
push
mov
push
sbbl
and
sbb
mov
stos
push
pop
cmp
jne
cmp
jno
data16
mov
popa
and
cltd
xchg
xchg
push
repz
dec
mov
int
sarl
shlb
pushf
sub
mov
stos
mov
sti
jb
mov
rcll
inc
scas
jle
push
cmp
outsb
sar
repz
dec
mov
addr16
rorl
das
es
out
sbb
push
cmp
pop
loop
cmp
imul
test
int
xchg
call
adc
loope
xchg
inc
stc
mov
jp
cmp
rcrb
test
dec
dec
es
xor
pop
push
call
mov
in
nop
cmpsl
outsb
icebp
mov
fcom
mov
jb
aam
sbb
cmp
in
cli
inc
push
sub
aas
lret
mov
xchg
mov
in
adc
out
fwait
insb
jg
dec
imul
test
pop
sbb
cmpsb
push
mov
fwait
or
test
push
mov
push
add
out
push
fsubrs
sbb
mov
cmp
xor
ret
xor
mov
scas
mov
inc
mov
sub
pop
aam
mov
xchg
es
mov
mov
aaa
jp
in
leave
cmp
cli
xchg
out
xchg
sahf
cmp
insb
cmp
out
mov
mov
xor
pop
xchg
in
fs
mov
insl
stc
rep
lods
xchg
mov
push
cmpsb
pop
mov
sub
dec
mov
dec
int3
scas
cli
test
rol
lods
pop
adc
mov
mov
addr16
cmp
and
jbe
rcrl
pop
mov
test
push
mov
loop
std
shl
or
cmp
mov
sbb
push
jnp,pn
sbb
out
insl
jle
pop
ret
insl
add
xor
dec
cmpsb
sbb
dec
or
cmp
jmp
cli
dec
mov
pop
paddsw
lcall
mov
mov
cmp
imul
lds
cltd
outsl
loopne
repz
and
outsb
in
push
pushf
pop
dec
outsb
loopne
repnz
mov
clc
imul
popa
test
popa
in
mov
addr16
leave
dec
pusha
cmp
out
fstps
mov
xchg
sub
lcall
int3
cli
mov
mov
loopne
inc
jecxz
in
pop
fwait
adcl
out
loope
add
repnz
lods
inc
mov
pusha
shrl
icebp
mov
mov
xchg
addps
mov
paddsb
mov
mov
pusha
lret
jbe
mov
sbbl
or
stos
and
lcall
pusha
addb
movb
pop
pop
push
add
imul
addr16
cmpsb
sub
xchg
lcall
adc
out
outsl
push
jb
or
xor
cs
arpl
dec
push
aad
cmp
mov
das
call
mov
sarb
frstor
push
adc
pusha
add
shld
rol
out
in
addl
xorb
pop
push
push
sub
xor
inc
dec
xor
test
xlat
xchg
clc
or
inc
pushf
dec
inc
test
data16
and
roll
jno
pop
adc
cmp
fdivrs
jp
xor
filds
loop
push
cld
inc
xor
dec
mov
pushf
fisubs
inc
mov
cld
mul
sbb
pop
ja
ja
xor
push
loop
mov
out
mov
scas
mov
outsl
lods
xchg
shll
mov
rclb
faddl
and
imul
mov
mov
xchg
cs
cli
xor
add
jl
xlat
inc
popf
icebp
fsubr
jg
cmp
in
sahf
push
and
std
repz
inc
and
addr16
mov
mov
ds
add
ret
sub
rcrl
dec
pop
and
lahf
mov
sahf
mov
ss
loope
sub
cmpsb
loop
nop
mov
sub
and
pop
sbb
jp
xor
int3
add
sub
sahf
fisttpll
jb
jecxz
cmp
sub
iret
aam
jle
adc
jmp
add
popf
js
popf
jo
inc
movb
clc
sahf
cmp
fidivrs
cmp
das
ret
jecxz
mov
pushf
xor
mov
ds
inc
in
imul
xchg
or
test
adcl
mov
and
and
icebp
fldl
jae
popf
cld
add
sbb
ret
mov
xorl
es
fstpt
adc
push
nop
push
frstor
je
or
xor
iret
fisubl
or
pop
mov
xchg
and
jo
push
repz
mov
dec
fildl
fnsave
mov
sahf
in
mov
cmp
sbb
mov
aaa
adc
inc
or
test
out
imul
lods
pop
or
inc
outsl
xor
fisubs
test
fsubl
testl
fsqrt
sbb
mov
movl
or
imul
test
mov
subl
out
xor
leave
loope
xlat
mov
push
mov
xchg
pop
dec
cmp
mov
out
mov
ss
fs
mov
das
rorb
mov
mov
ja
pop
repz
aaa
push
ds
repz
stos
pop
or
add
xor
xor
cmpb
ret
ficoml
scas
fistpl
sub
out
popa
lods
dec
scas
stos
jmp
cmp
jl
pop
and
mov
lock
mov
mov
jmp
hlt
mov
mov
lret
pop
xchg
lret
and
gs
ds
jae
jl
dec
push
lcall
sub
mov
push
or
inc
js
out
mov
inc
push
add
pop
and
jae
lret
xor
sub
ret
nop
mov
dec
cvtps2pd
xchg
imul
or
cwtl
out
lret
and
call
insb
mov
sbb
lret
mov
pushw
mov
cmc
out
loop
push
adc
mov
push
pop
test
repz
mov
mov
lods
std
outsl
fcmovnbe
mov
or
cmp
nop
push
loope
jl
pop
aas
xor
scas
dec
stos
and
dec
push
cmovl
push
in
add
popa
add
pop
out
sti
cmp
sub
mov
call
fcompp
scas
std
std
loope
inc
sbb
xor
fldt
or
out
dec
fcmovnb
xchg
jne
stos
ret
dec
xchg
sbb
insb
icebp
sahf
movsb
jmp
das
sbb
pop
jmp
dec
add
push
cmc
jno
mov
add
xchg
decl
lcall
cs
jmp
xchg
mov
mov
out
cmp
scas
ret
lret
movsl
icebp
add
xchg
dec
jl
sarl
pop
dec
icebp
pop
adc
ja
mov
leave
jl
sub
jmp
inc
imul
sub
fadds
push
mov
sbb
aam
cmc
jg
push
pop
jp
stos
mov
adc
add
fiadds
insl
mov
push
out
push
mov
push
out
xor
add
sub
sti
dec
cmp
mov
fsubrs
popa
fmull
mov
xor
fxch
ret
iret
or
adc
mov
jmp
iret
sub
and
sti
add
jo
push
stos
push
nop
stos
push
pop
cmp
leave
outsl
jbe
lods
cmpsl
nop
push
repnz
sbbb
cmpsl
fidivrl
add
push
or
daa
cmp
inc
sbb
xchg
mov
cmpsb
fcmovb
and
and
and
fwait
push
mov
dec
jmp
push
and
push
psubusb
add
test
sub
or
and
add
xor
cld
or
enter
dec
aad
nop
jg
das
sub
jecxz
mov
mov
dec
lahf
or
cmp
pop
arpl
pop
in
sbb
dec
xchg
pop
adc
rclb
fadds
add
sbb
mov
outsb
add
shl
cwtl
and
ljmp
cmp
dec
mov
das
fsubrl
mov
in
pop
fs
ret
aam
xchg
fld
pop
push
test
loop
dec
jp
mov
out
xchg
loope
insl
mov
jl
incb
sub
pop
sub
dec
and
and
cmpsb
ret
ja
and
mov
push
imul
pushf
scas
stos
sbb
ficomps
pop
xchg
clc
dec
fildll
outsl
lahf
adc
mov
push
mov
movsb
dec
shl
lds
fisttpll
shrb
popa
call
cmpsb
stc
je
dec
in
xchg
jo
enter
pop
ret
jno
pop
daa
int3
fimuls
les
arpl
pop
inc
fs
cltd
lds
jnp
sbb
lods
add
aad
xchg
pop
cmp
sbb
add
add
adc
repz
aam
pop
xchg
ja
and
and
aas
dec
js
outsl
idivl
push
cmp
dec
sbb
push
pop
dec
jl
sub
out
xchg
dec
dec
inc
add
int3
lret
xchg
clc
cli
mov
pop
inc
lahf
jle
dec
addr16
inc
outsb
sbb
cwtl
push
push
and
sbb
das
rorb
les
lahf
idivl
sbb
in
lds
imul
mov
xor
jb
jne
mov
mov
xchg
pop
cmc
dec
mov
sub
pop
pop
mov
xor
push
int3
jp
jb
imul
xor
adc
cmp
aas
push
lods
movsl
and
sar
sbb
cmpsl
mov
or
ja
mov
mov
shll
adc
xchg
call
sbb
enter
imul
add
push
les
js
stos
in
xchg
test
iret
pop
sub
fwait
pop
xor
mov
jmp
mov
jb
xchg
add
add
push
sbb
mov
subl
jge
xchg
mov
pop
xor
mov
adc
xor
or
std
mov
or
in
xor
pop
stos
ret
cs
fcomps
ret
ret
jae
rorb
jno
sub
and
aaa
lret
xchg
aad
nop
fnstenv
inc
lock
push
pop
repz
pop
and
inc
test
adc
pop
sub
hlt
dec
pop
sub
pop
cmp
lret
shll
xlat
sub
xchg
sub
das
cs
cmp
jl
jg
add
and
sti
adc
sub
cmc
int
xchg
inc
call
inc
lods
mov
pop
xor
insb
pop
enter
cmp
cmp
stc
adc
lock
mov
lcall
out
ja
mov
cld
mov
pop
aam
mov
popa
jp
out
cmpsb
dec
pusha
repnz
mov
xchg
lcall
cmpsb
cmpsb
inc
fimuls
jge
sahf
or
mov
out
lea
pop
or
pop
pop
hlt
ja
mov
mov
xlat
push
mov
jbe
or
xor
bound
call
hlt
pop
dec
pop
aas
adc
xor
adc
xor
adc
lods
jo
inc
call
sbb
mov
dec
jmp
sbb
rorl
push
out
inc
hlt
inc
push
push
mov
mov
jmp
std
xchg
insb
cmp
cmp
inc
mov
stc
addr16
adc
fs
inc
data16
pop
lcall
and
sub
out
jns
lds
jge
adc
ret
or
loope
sbb
mov
sbb
sub
pusha
and
sbb
push
lods
xchg
dec
pop
roll
loope
pushf
cli
and
dec
dec
mov
lahf
cmp
jmp
fistpl
pop
mov
mov
jp
or
std
inc
mov
outsl
push
inc
jno
mov
divb
jecxz
mov
in
pop
pop
cwtl
sub
mov
add
cmp
add
or
jl
in
iret
imul
icebp
mov
inc
push
dec
popf
movsb
fisttpll
loop
cltd
imul
mov
and
mov
lcall
add
sbb
pop
jg
pop
aam
fildl
adc
fucomip
add
jle
sbb
ret
cmp
ljmp
shlb
cld
push
out
cs
pushf
daa
inc
lds
aad
mov
pushl
sbb
mov
gs
fimull
cwtl
or
js
loopne
mov
fstp
repnz
inc
std
adc
nop
daa
popa
lahf
int3
dec
loop
cs
addl
dec
shll
or
push
xor
push
decl
sbb
jo
call
mov
cmp
fdivp
js
cltd
fs
js
out
imul
pop
jbe
iret
jge
in
ficoms
daa
cmp
mov
enter
jecxz
fwait
add
mov
sub
ss
push
call
mov
sbb
xchg
sub
add
jae
jmp
es
add
dec
in
and
mov
es
fistpll
mov
fucom
testl
and
aam
pop
ss
xchg
stos
push
push
jmp
pop
ret
rcll
loop
divl
popf
mov
xchg
out
mov
or
paddw
or
push
mov
cmc
fstpt
mov
loope
cmp
scas
repnz
sbb
add
inc
lahf
jg
nop
les
xlat
ja
mov
addr16
cmp
cs
add
mov
pop
sti
mov
xlat
mov
mov
push
pop
pop
out
jmp
dec
jmp
jle
lahf
jbe
dec
or
cld
push
adc
pop
sub
or
mov
sub
ja
popa
loop
sbb
test
jmp
into
xchg
jb
jo
mov
aas
cmp
mov
push
hlt
ss
test
adc
lock
lods
inc
icebp
cwtl
xchg
lods
jmp
out
dec
pop
ljmp
dec
dec
cmpsb
mov
push
xor
seta
xor
bound
into
mov
fcoml
repnz
jno
call
call
das
loop
ljmp
movsb
dec
js
dec
int3
add
pop
mov
mov
out
sahf
and
mov
add
cmpsl
lcall
sti
sub
ljmp
fwait
dec
inc
ss
rclb
dec
sub
aas
repz
aam
push
add
mov
movsl
and
jg
inc
mov
mov
pop
lods
push
mov
ret
xor
xchg
imul
cmp
insl
fwait
testb
insb
or
mov
xchg
cmpsl
ljmp
pop
lret
push
mov
aad
sbbl
clc
dec
fisubs
xor
mov
xchg
add
cmp
xchg
pop
ds
inc
es
imul
cmp
adc
lret
orb
inc
outsl
addb
sub
fildll
pusha
pushf
test
pop
cmc
jnp
adc
cmp
fnsave
test
roll
xlat
ja
inc
cltd
into
jecxz
xor
xor
xor
sbb
jle
cmp
add
mov
stc
fidivrl
jl
jae
lcall
add
inc
pop
shrb
pop
mov
jmp
add
jg
mov
fcoml
shll
popf
inc
xchg
mov
mov
cmp
sbb
jae
adcl
sub
sbb
out
js
lods
inc
add
test
jecxz
push
and
jecxz
hlt
inc
faddl
mov
int
vpsubsw
repz
fs
mov
sub
lock
mov
stos
lcall
mov
fwait
outsb
inc
mov
rol
mov
mov
mov
mov
lcall
faddl
loop
dec
stos
xlat
repz
lock
lea
mov
jg
cmp
rorb
or
push
lret
fimull
push
fldenv
call
push
bound
lcall
and
xchg
or
xor
incb
test
mov
jl
adc
or
stc
scas
jg
test
out
push
stc
dec
and
push
and
or
scas
jnp
mov
mov
shll
ret
out
popa
fldenv
mov
inc
dec
and
testl
stos
jl
xchg
xchg
call
frstor
dec
andb
test
jmp
push
cmp
jecxz
imul
sbb
mov
das
push
xor
or
fdivs
push
pop
pop
ret
inc
jns
dec
xor
aaa
stos
jo
in
sti
jmp
pop
inc
push
inc
add
ret
mov
xchg
pop
inc
dec
mov
movsl
lds
push
inc
adc
mov
loope
cmp
sbb
adc
sbb
iret
and
imul
and
sbb
repnz
jecxz
popa
aas
clc
aaa
xchg
adc
ds
xor
mov
jo
insl
aad
and
into
inc
stc
or
add
add
lcall
shlb
repz
fnstsw
sub
adc
in
enter
jle
lods
and
adc
and
xor
push
dec
enter
fidivrl
fsubl
mov
push
popa
ret
adc
stos
dec
and
fsts
and
xchg
adc
and
inc
aam
stos
cmp
jb
inc
scas
or
lret
inc
and
lcall
icebp
jmp
mov
push
cmp
ljmp
push
decl
jg
in
xchg
outsl
or
fimull
inc
xor
push
mov
xor
mov
cmp
pop
out
mov
push
push
xor
jno
pop
roll
cmp
and
xor
ss
sub
les
or
arpl
insl
ficoms
mov
test
xchg
inc
loope
cmpl
or
xor
pop
mov
cwtl
inc
push
out
loopne
cmp
lcall
ffree
aam
pop
out
push
imul
inc
jecxz
lods
clc
imul
jmp
clc
ret
fisubrs
xchg
mov
jl
xor
jp
mov
dec
xchg
stc
rcll
data16
pop
idiv
cmpsl
aaa
ss
out
enter
adc
dec
adc
mov
mov
cwtl
xchg
add
or
aad
and
out
aas
dec
mov
add
sub
pop
jb
jns
sub
cmp
in
dec
in
fwait
sbb
jp
xor
insb
cli
pop
push
shrl
sbb
aam
or
ljmp
sbb
aas
inc
pop
ja
jecxz
xchg
adc
adc
les
adc
inc
es
xchg
pop
mov
mov
daa
addr16
and
popf
or
push
xchg
sub
xor
mov
insb
push
into
rclb
rol
cmc
xchg
aad
pop
ss
sbb
push
jns
lret
leave
popa
mov
mov
call
sar
jno
jnp
loopne
mov
mov
xchg
adcl
out
jns
xor
mov
test
lret
stos
push
sub
mov
pop
lea
das
or
sub
rcl
sub
loopne
mov
jb
loope
addr16
hlt
dec
inc
jne
pop
inc
pop
sub
cmc
decb
in
and
sar
mov
shlb
enter
or
mov
repz
cli
stos
pop
loopne
or
or
sub
pop
sbb
sub
push
testb
adc
inc
bound
fwait
hlt
mov
fistpll
pop
push
pop
ljmp
testb
addb
popa
push
inc
shlb
test
adc
push
arpl
data16
test
icebp
lock
inc
sbb
sarb
rol
pop
push
xor
xchg
pop
xor
xchg
cmpsb
out
repnz
popf
ds
pushf
cmp
aam
insb
addl
call
cmp
jne
dec
stc
sub
sbb
mov
add
cmpsb
sbb
sbb
and
push
push
sub
pop
jno
leave
int
stos
das
stos
lods
sti
leave
lods
les
jecxz
into
dec
mov
insb
jae
cmp
mov
push
push
inc
pop
movsb
int3
into
push
les
incl
xor
jecxz
adc
pusha
cmp
pusha
fcomip
xchg
and
sub
jne
test
aam
mov
push
lret
cmpsb
lcall
sbb
or
enter
dec
mov
push
aad
iret
xchg
mov
sti
push
xlat
out
call
cwtl
bound
movsb
loop
mov
pop
xchg
or
les
jnp
mov
imul
inc
arpl
or
movsl
mov
cmp
inc
jno
stc
ss
scas
fisttps
fbld
push
push
xor
les
push
in
push
pop
jnp
call
std
loop
jnp,pn
popa
mov
jmp
fsubrs
push
sbb
enter
icebp
pop
adc
sbb
je
xor
xchg
stos
cmp
inc
mov
test
xor
cmpsl
push
icebp
cwtl
imul
sbb
jecxz
push
dec
mov
mov
mov
iret
xchg
repnz
xor
fs
out
mov
loope
adc
jb
imul
js
lea
pop
or
mov
or
cmp
inc
icebp
jmp
jle
enter
pop
mov
sbb
adc
leave
jbe
mov
and
inc
int
jp
es
mov
mov
sbb
stos
daa
adc
lods
adc
stos
inc
add
std
xchg
bound
mov
cltd
fistpll
push
mov
sub
add
pop
dec
daa
dec
mov
movsl
aaa
int3
aam
sti
inc
push
sbbb
pop
push
popf
sbb
out
and
sub
inc
sub
mov
fwait
inc
xchg
icebp
cmp
outsb
inc
les
push
fwait
jne
mov
stc
imul
push
outsl
icebp
sub
ficoms
xor
mov
xchg
in
fdivr
add
cmpsl
sbb
jl
fs
adcl
mov
jp
cmp
dec
fisttps
mov
popf
icebp
cld
mov
xchg
cli
bound
roll
loop
aaa
outsb
cld
jp
sub
mov
mov
push
inc
fildl
lahf
loop
xchg
mov
into
pop
pop
sarl
cmpsb
in
jmp
ret
psllw
mov
xchg
adc
addb
aam
xchg
sbb
cltd
stc
mov
int
sbb
adc
movsl
push
or
jp
repnz
cmp
mov
push
sarb
mov
std
pop
lods
subl
sub
cmp
ds
inc
orl
int3
sbb
pop
pop
ficoml
leave
xchg
rcl
add
push
push
push
or
cwtd
xor
pop
in
orl
xor
popa
out
gs
or
add
pop
push
movsl
mov
out
lock
fs
sti
adc
cmp
imulb
sub
dec
and
jo
movsl
xchg
mov
mov
fs
push
aaa
mov
ror
lahf
lods
mov
inc
pop
sub
jl
xor
xchg
xchg
cs
jg
mulb
inc
mov
inc
icebp
lods
pop
ljmp
and
inc
push
out
call
xor
mov
cltd
fisttpl
or
add
and
ret
cltd
sbb
mov
or
imull
add
jnp
cld
in
mov
mov
clc
xchg
and
fwait
pop
mov
cmp
cmp
jbe
test
mov
sub
jb
xor
inc
ja
mov
test
push
push
mov
pusha
notb
stos
jbe
shrb
jmp
inc
cmpsb
inc
inc
add
shlb
dec
jecxz
push
dec
push
xorl
movsb
stc
mov
fiaddl
push
cwtl
sbb
cld
movsl
scas
inc
adc
sbb
insl
popf
xor
or
push
and
lods
ljmp
out
push
push
or
mov
mov
pop
inc
cltd
out
adc
push
push
adc
int3
or
cmpsl
out
mov
jp
push
data16
sbb
adc
cmp
dec
mov
repz
adc
dec
mov
adc
scas
orl
mov
push
mov
pop
dec
push
xlat
pushf
cli
pop
jle
inc
add
dec
movsb
icebp
mov
test
dec
mov
add
ljmp
cmp
jle
jmp
arpl
dec
sahf
push
mov
inc
rclb
pop
int3
pop
and
addr16
xchg
push
pop
cmc
imul
add
out
bound
ss
mov
loopne
mull
nop
daa
mov
arpl
in
loope
xchg
push
loopne
das
sbb
jb
imul
jmp
adc
adc
cmp
addb
xor
pusha
mov
adc
add
jle
dec
mov
imul
lret
and
notl
inc
pop
lods
adc
dec
loop
orb
sarl
lods
testl
cmp
mov
mov
add
jge
cmpsb
les
stos
pop
jg
inc
or
jge
or
push
fisttpl
stc
in
sub
sub
divl
push
ds
fimuls
pop
imul
cmc
shlb
cmp
dec
lods
sbb
and
pop
scas
inc
ds
test
fwait
or
hlt
adc
mov
dec
jbe
sbb
outsl
sub
imul
add
dec
cmp
negl
cmova
test
fcompl
rcrb
inc
inc
pop
mov
in
test
jmp
adc
xor
into
lret
sbb
pop
adc
push
pop
outsl
popa
mov
iret
mov
daa
out
out
and
cmp
addr16
xor
sub
cs
pop
xlat
pop
inc
add
dec
dec
mov
adc
jecxz
jmp
repz
dec
fwait
in
jb
mov
and
xchg
inc
aaa
push
pushf
jno
pop
mov
xchg
and
lret
mov
cs
inc
sub
cld
and
out
xor
or
jp
rorb
inc
push
cmp
push
xchg
insl
in
je
fs
ret
push
mov
repz
leave
aad
das
inc
or
lret
mov
jne
dec
lods
pop
lods
mov
lcall
loop
out
xchg
ds
imul
jge
insl
dec
mov
movl
mov
call
cmpsb
and
xchg
xchg
mov
adc
cmpsl
xchg
jae
out
xor
push
fistpl
pushf
sbb
insb
aam
jns
sbb
orb
jp
out
add
sub
cmp
fwait
stos
faddl
and
inc
sbb
sbb
pop
adc
mov
nop
cmpsl
or
sub
popa
pop
push
stc
xchg
adc
jo
mov
pop
and
rolb
push
and
cld
test
call
push
inc
cltd
pop
dec
dec
fs
imull
fldl
stos
xlat
xchg
hlt
es
mulb
je
jl
and
mov
lea
addr16
and
or
push
in
addl
aas
add
pop
mov
xchg
push
cmp
pusha
rcrb
pusha
fdivl
or
clc
aas
out
mov
mov
jl
aaa
pop
xorb
xor
aaa
pop
xchg
data16
xchg
aaa
into
xor
push
fsts
xchg
dec
jl
add
inc
cmpsb
sbb
mov
adc
xchg
add
push
mov
adc
cwtl
dec
add
out
test
jne
mov
adc
lods
push
jle
dec
add
arpl
adc
js
cmp
test
arpl
fs
outsb
cmc
inc
leave
data16
sbb
dec
scas
mov
add
cmp
mov
inc
pop
cmp
pop
cli
stos
mov
dec
dec
mov
stos
dec
js
dec
mov
xlat
loope
pop
xlat
jg
mov
js
shr
add
jno
iret
cmpb
mov
fiadds
xor
in
or
mov
int
and
or
mov
jb
test
and
movsl
cmp
cmpsl
push
mov
pop
sbb
mov
mov
push
mov
arpl
aas
sbb
mov
fstpl
jae
add
scas
or
fsubs
or
decl
pop
add
inc
sub
cwtl
out
and
call
sbb
cmp
sahf
clc
push
divb
mov
cld
and
sbb
data16
jl
mov
xor
in
frstpm(287
cs
mov
loop
in
adc
xchg
inc
mov
dec
pusha
dec
test
les
cmp
push
lahf
test
sbb
push
in
push
sahf
mov
adc
clc
dec
pop
cmpb
cwtl
ret
cs
xor
std
outsb
jb
add
repnz
sbb
mov
in
sub
insb
pop
ss
call
lahf
int
mov
mov
mov
pop
pusha
cmpsb
cmp
add
test
adc
dec
movsb
mov
incb
push
cmp
mov
popf
pusha
and
pop
adc
mov
repnz
cmpsb
mov
push
aas
push
cmc
call
in
xchg
cmp
ret
sbb
push
fcoms
pop
mov
outsb
loop
push
fidivrl
push
jae
out
mov
push
in
xchg
dec
fimuls
scas
sbb
fadds
fisubrl
mov
into
faddl
or
dec
or
pop
fcomps
outsb
test
call
adc
std
push
pushf
sub
movsl
mov
sbb
arpl
pop
push
popf
push
mov
jle
movsb
mov
jp
divb
xchg
cli
pushf
cltd
dec
rorl
mov
jb
loop
shl
mov
push
in
cs
jae
or
out
std
shll
push
inc
in
xchg
lret
clc
call
fsubr
lahf
in
test
movsl
inc
pop
repnz
jne
xchg
jb
jle
clc
fwait
cmp
sbb
push
fimuls
jl
sbb
push
into
add
jae
push
movsl
mov
ljmp
lock
pushf
shll
pop
lds
test
imul
pop
in
inc
fdivrs
movsb
nop
daa
pop
addb
leave
pusha
add
test
pop
mov
and
rorb
inc
xlat
push
dec
scas
inc
inc
push
fs
inc
inc
loope
cmp
repz
jae
scas
arpl
rclb
jns
push
out
repnz
cmc
inc
rorb
mov
mov
call
pop
sub
lea
sbb
jae
add
or
aas
sub
iret
adc
add
sti
mov
pop
cmc
jae
popf
xor
xor
lods
inc
push
lock
inc
or
sbb
add
mov
jnp
imul
xor
adc
dec
pop
ds
xchg
push
or
arpl
dec
xchg
lret
lock
jns
popf
xchg
loope
pop
mov
xor
pusha
add
cmpsb
leave
pop
inc
std
outsb
out
dec
decb
adc
mov
movsl
das
fmull
lahf
daa
and
pushf
xchg
or
cli
ret
and
mov
das
mov
and
mov
pop
xor
repz
jp
cli
dec
dec
cmpsb
out
push
insb
movsb
cli
rcrb
test
out
and
in
cmpsl
adc
and
out
mov
fcmovbe
cmpsl
addl
fildll
xlat
lods
in
mov
inc
lcall
sbb
sbb
or
pop
js
loopne
cmpb
ss
inc
add
leave
sti
adc
pop
hlt
pop
popf
cmp
inc
mov
mov
movsl
xor
add
pop
mov
jns
repnz
xor
leave
or
sub
add
stos
or
fnstcw
lahf
mov
fnsave
mov
int
sub
push
test
mov
sub
imul
jnp
dec
pop
jg
stos
bound
int
add
aas
mov
mov
das
xchg
sti
insl
lcall
popa
nop
mov
out
jae
adc
push
push
jp
xor
loope
lods
or
ret
sbb
ljmp
in
xor
lcall
jmp
adc
or
repnz
inc
fucomi
stos
or
sbb
or
jmp
lods
inc
aad
and
mov
jmp
mov
aam
jle
popa
cld
push
mov
mov
or
xor
mov
xchg
mov
mov
and
jge
mov
adc
in
jmp
addl
cmp
ds
fmuls
shlb
lret
sub
sub
int
fbstp
inc
dec
pop
mov
inc
mov
add
push
mov
push
xlat
add
jge
mov
sbb
pusha
sarl
cmpsl
jo
filds
sub
add
ret
mov
mov
dec
xchg
leave
mov
aam
outsl
pop
adc
mov
pop
shll
cmp
cmp
fstpl
scas
pop
lods
test
pusha
rcrb
shl
idiv
adc
aaa
fucomip
xor
pop
mov
fldcw
fists
xor
mov
sbb
pusha
sbb
aas
repz
cmpsb
stos
pusha
sub
inc
sub
fnstsw
imul
fldcw
out
adc
sub
or
lret
xorb
xchg
movl
xchg
pop
sub
cmc
jg
add
jnp
pop
inc
mov
cmp
xchg
aad
psrlq
imul
mov
stos
fmuls
cli
xchg
cmp
test
xchg
jb
in
inc
pushf
out
and
addb
lock
data16
push
repz
lcall
push
lret
pushf
xchg
fsubrl
jecxz
pop
flds
lret
push
iret
inc
fwait
or
fistl
pop
mov
jl
mov
fnsave
jns
mov
lds
loopne
movsl
sub
sar
lahf
sbb
rcrl
mov
vaddps
jge
inc
fisubrs
inc
lods
and
cmp
daa
pop
mov
jmp
inc
push
xchg
lcall
mov
push
mov
icebp
js
xchg
cs
adc
push
add
push
sti
and
mov
inc
sbb
xlat
xor
sub
sti
inc
push
aaa
std
lock
popf
pop
sarb
push
repnz
ljmp
insb
nopl
ss
mov
pop
cmp
xor
sub
aad
cwtl
sub
ss
pushf
cmpsl
push
cmp
mov
arpl
mov
push
popf
push
inc
psadbw
jmp
add
test
inc
out
dec
dec
lea
out
cmpb
sbb
jp
dec
pop
and
shrw
cwtl
stos
scas
xor
inc
imul
out
xor
mov
addl
lahf
xor
out
xor
iret
das
sbb
iret
dec
dec
sbb
sbb
dec
pop
lock
aas
add
adcb
and
shll
in
pop
imul
cmc
xor
and
jo
xor
arpl
add
insb
and
xchg
mov
mov
mov
dec
pop
in
lods
ds
pop
lcall
xchg
mov
pop
and
jnp
scas
add
dec
imul
arpl
mov
jnp
adc
cld
arpl
jne
stos
xor
insl
jge
out
dec
jle
int
pop
js
or
jne
sbb
mov
fidivl
fistps
push
xchg
rcl
mov
lods
out
rcrl
dec
add
bnd
subl
or
xor
push
es
cmp
and
and
pop
push
hlt
int
xchg
sub
leave
cmpl
and
mov
jo
and
push
popa
add
outsl
pop
jne
mov
into
mov
inc
adc
int3
xor
xchg
mulb
adc
xchg
add
addl
sbb
ficoms
mov
imul
xor
jge
es
pop
lret
jnp
out
cmp
inc
call
mov
ja
nop
jmp
pop
test
xchg
add
xor
xlat
test
dec
xor
and
in
cmp
jae
mov
sbb
scas
scas
test
mov
mov
clc
addl
push
push
repz
cmp
test
jb
data16
lea
mov
inc
addr16
call
push
jae
adc
dec
out
xor
filds
or
xchg
arpl
add
mov
jecxz
ret
or
subl
out
arpl
xor
mov
push
sub
jbe
ljmp
adc
cmpsb
mov
push
cmp
ret
mov
shll
enter
lahf
push
lods
stos
xchg
push
stos
aad
stc
mov
or
popw
sbb
mov
popa
inc
xchg
in
test
mov
adc
xlat
dec
fmuls
jmp
cmpsl
xchg
cwtl
iret
sbb
or
adc
lds
cmp
sbb
sarb
iret
sub
mov
loope
into
dec
dec
cld
sub
mov
outsb
push
jmp
sub
or
adc
nop
pop
jnp
xorl
sbb
add
inc
inc
and
cmp
pop
ljmp
xchg
aam
jno
aas
repnz
icebp
rcrl
mov
push
cmpsl
pop
jmp
push
jecxz
ficomps
daa
sbb
add
jno
enter
faddl
aas
mov
cmpsb
jge
pop
mov
lret
and
pop
cltd
adc
aaa
pusha
fsubs
psllq
adc
js
sub
shrl
sbb
xchg
adc
xchg
sbb
pop
and
push
jmp
fiaddl
mov
fsubrs
cwtl
popf
call
fwait
ror
or
and
arpl
jo
sub
adc
xchg
insl
mov
fwait
inc
and
jmp
in
scas
mov
dec
in
jmp
push
mov
stos
or
mov
aam
adcb
lcall
inc
push
roll
xor
mov
pop
pop
jae
daa
adc
sub
nop
divb
pop
dec
rcll
nop
loopne
sub
jo
fwait
cs
push
leave
popa
lahf
js
xor
out
popa
xor
xchg
sti
xchg
pop
or
push
xchg
lods
jb
dec
dec
pop
lock
in
pop
push
adc
pop
icebp
arpl
out
pop
push
notb
pop
pushf
popf
jno
add
pop
vcvtdq2ps
stos
enter
pop
or
aaa
jmp
push
test
loopne
adcl
arpl
push
and
cmp
icebp
xchg
sub
add
sbb
jb
cmpsb
cwtl
iret
shl
add
cmp
jp
stos
and
into
enter
push
les
cwtl
cmp
ret
orl
stos
push
add
int
inc
xor
sbb
test
mov
arpl
xor
in
je
loop
stos
lods
jmp
scas
or
test
dec
faddl
and
sub
dec
shrb
stc
mov
mov
sbb
hlt
jne
enter
add
aam
sbb
inc
les
js
pop
ror
mov
pop
or
pop
xor
cmp
xchg
test
lret
lock
or
into
in
xor
sahf
xor
loop
cmp
and
out
xor
inc
add
inc
lods
jns
stos
ljmp
inc
les
lock
inc
dec
ja
or
xchg
and
jbe
inc
enter
jmp
adcl
fcmovu
dec
dec
mov
in
fildll
bound
sti
xchg
or
dec
xor
in
and
push
sbbb
adc
pop
fsubs
lods
inc
pop
popa
iret
loope
hlt
dec
pop
and
test
dec
dec
scas
mov
add
xor
in
fdivp
call
stc
mov
jo
sbb
inc
inc
mov
or
mov
cpuid
mov
xchg
lods
pop
xor
mov
jmp
or
xchg
push
pop
lret
dec
xlat
xlat
inc
mov
dec
or
test
popf
scas
pusha
jmp
add
dec
adc
mov
and
test
cli
je
mov
sbb
inc
in
mov
mov
addr16
test
mov
icebp
sub
dec
ds
fisubrl
sbb
or
shrb
and
mov
cwtl
addr16
int
jmp
ret
cmpsl
aam
ds
jecxz
fisubl
std
call
xor
push
popa
sub
jo
out
sub
je
or
xor
adc
hlt
xor
arpl
cmc
lahf
add
test
loopne
test
clc
lret
cmp
adc
inc
lret
int3
and
in
fs
mov
sbb
sbbb
add
ret
ret
call
and
pop
dec
ror
push
stos
mov
mov
in
lods
lcall
push
xchg
push
sub
sbb
daa
dec
dec
add
mov
scas
aaa
cltd
sarw
jg
and
mov
xchg
js
mov
pop
mov
popa
pop
add
push
or
hlt
mov
dec
loope
jp
pop
xor
in
adc
hlt
stos
jl
ss
inc
xor
cs
push
or
ljmp
xchg
sub
or
dec
sarb
xchg
push
cmpsl
adc
stos
ret
in
inc
mov
loopne
push
and
fsubrl
xor
xchg
nop
mov
xor
lret
jp
into
xchg
push
cs
test
movsl
mov
add
push
xchg
fxch
add
ret
sbb
je
cmp
lds
aad
mov
pop
mov
in
lea
shlb
push
inc
or
scas
sbb
gs
pop
repz
je
stos
fisubrl
cld
push
cmc
jmp
push
push
test
ja
andl
loope
adc
push
sahf
push
push
add
ja
cli
sub
out
sbb
pusha
add
and
bound
stos
movsb
inc
stc
adc
icebp
xchg
xor
push
pop
xor
mov
mov
arpl
jmp
mov
cwtl
and
pop
mov
sar
imulb
int
and
pop
cmpsl
jae
in
xchg
pop
lds
adc
xor
sub
adc
sub
andl
pop
mov
shlb
ja
jecxz
dec
les
mov
xorl
adc
mov
mov
dec
nop
push
movsl
pop
paddq
add
mov
stc
inc
and
repnz
inc
mov
test
seto
ja
pop
cmpsl
imul
movb
pop
inc
pop
mov
pop
int3
test
in
xor
push
popa
push
pusha
cwtl
sub
sbb
sub
pop
loopne
xlat
arpl
sub
jl,pt
mov
jnp
fadds
adc
jbe
mov
mov
popa
or
xchg
out
lret
ret
cmp
jmp
jbe
jmp
or
sarl
scas
lret
push
cmc
sub
fdivs
je
fs
jle
fstp
mov
pop
cmp
mov
jo
inc
cmpsb
int
adc
jo
mov
xor
cmpsl
cld
push
mov
sbb
in
jb
jbe
nop
ja
lret
pop
xchg
push
mov
cmp
ret
pop
mov
sub
adc
loop
cmpsb
xor
sbb
data16
pop
pop
or
std
nop
push
push
out
dec
inc
shrb
inc
fwait
fs
in
int
add
mov
lret
les
push
leave
test
jle
fs
xchg
in
into
dec
pop
repz
stos
cmp
sbb
stc
mov
ljmp
mov
add
ret
in
and
and
cmpb
jmp
into
mov
add
or
cli
dec
shlb
sbb
mov
addr16
cltd
std
xchg
mov
setp
xchg
in
call
pop
lods
inc
cmp
push
out
pop
pop
jmp
in
cmp
or
scas
inc
mov
testl
out
loopne
pop
inc
ss
fwait
nop
hlt
leave
push
cmp
fsub
mov
cmp
lret
daa
mov
or
outsl
add
push
out
fwait
aaa
in
fwait
in
mov
ss
and
xor
sahf
aas
dec
jecxz
int
cmp
xchg
xchg
ja
pop
into
sub
insb
shlb
xchg
loopne
pop
xchg
push
mov
lods
data16
pop
in
xor
call
xor
repnz
and
stc
or
dec
fs
mov
mov
jmp
jae
ret
cmpsb
mov
mov
fistps
or
mov
inc
push
dec
or
pop
daa
fwait
arpl
repz
outsl
jle
sub
add
roll
pop
mov
mov
xchg
pushw
add
pop
push
sar
ret
jle
inc
lock
sarb
test
dec
sbb
dec
jle
sahf
mov
mov
js
or
inc
pop
aas
ret
pop
sarl
ss
shlb
and
dec
cmpxchg
xlat
pop
adc
notl
push
out
cmp
in
test
cmpb
sbb
addr16
mull
call
or
daa
cmp
je
or
pop
or
sub
lds
scas
out
xchg
subl
stc
pop
add
ljmpw
mov
mov
ret
add
outsb
or
push
dec
fsubrs
and
sbb
dec
arpl
repz
clc
rcrl
loop
clc
sub
std
xlat
sbb
xchg
sbb
cmp
mov
leave
cwtl
out
in
adc
pop
in
arpl
pop
fidivrl
filds
pop
shrb
add
outsb
vdivpd
faddl
stos
in
push
js
lret
hlt
lcall
outsl
jae
scas
pop
add
push
dec
adc
dec
lea
ds
xchg
xlat
out
pop
aas
xchg
sahf
dec
adc
cmp
cmpsl
jge
xchg
clc
dec
push
ffreep
sub
mov
pop
mov
or
lret
inc
arpl
popa
lret
inc
test
fistpll
mov
pop
and
dec
jmp
aas
dec
in
outsb
inc
imul
or
add
xchg
pop
cmp
cli
pop
jecxz
fiadds
mov
pop
xchg
jbe
cmpb
jl
push
jb
data16
jno
cmp
mov
in
rcll
sub
pushf
fldcw
xchg
or
movsl
cmp
mov
ret
pop
push
fdivr
dec
bound
xor
add
rcrl
add
es
call
into
add
lcall
clc
jno
fs
adc
mov
pop
sub
test
loope
push
mov
loop
mulb
pop
push
arpl
movsb
jbe
jl
ja
xor
lea
mov
mov
jecxz
xor
xor
out
cmp
mov
dec
or
dec
sahf
cmp
push
mov
mov
xor
push
pushf
cli
add
mov
sbb
clc
xchg
int3
hlt
push
gs
sub
pop
rcr
pop
jns
xchg
and
outsl
sub
mov
mov
xor
push
sahf
lods
lods
pop
test
js
or
addr16
push
xchg
fxch
push
ja
cmpsl
lds
jl,pn
xor
jno
cmc
or
xor
xor
std
pop
rcr
rcll
outsl
jo
inc
stos
sbb
sub
test
out
mov
jecxz
daa
sbb
inc
mov
cltd
fs
xor
icebp
pop
call
cmp
scas
jnp
dec
mov
stos
mov
fmull
or
ret
into
xor
mov
mov
insl
icebp
inc
aad
out
sub
cmp
int
sbb
adc
jbe
lret
dec
and
fdivrs
inc
push
jno
push
ror
sbb
icebp
xlat
mov
mov
loope
in
xor
dec
cmp
mov
js
sbb
xor
push
mov
xor
jp
fidivs
sub
incl
filds
inc
das
sub
adc
sub
jg
sbb
cmp
mov
cmpsl
sar
ret
pop
sub
xchg
xor
ss
imull
aaa
iret
iret
jb
adc
or
cmpsb
sub
jg
inc
jecxz
repnz
push
adc
push
pop
mov
pushf
sub
jbe
in
test
xor
or
cs
sub
cmp
sbb
mov
cmp
daa
imul
in
cmp
jl
sub
aas
inc
and
add
mov
fiaddl
dec
mov
pop
push
in
das
push
stc
cmp
jnp
adc
xor
std
push
inc
shr
dec
add
jl
or
inc
mov
add
call
add
xor
inc
sub
jns
adc
mov
jo
frstor
imul
data16
scas
dec
out
mov
fdivl
minps
adc
add
push
mov
xlat
outsb
fmull
mov
jns
jle
pop
imul
aas
loope
push
popf
xchg
push
mov
inc
xchg
leave
sarb
add
int
popa
mov
ja
int
fstpt
shlb
push
xor
repnz
mov
inc
adc
repz
hlt
push
adc
sub
test
cmp
dec
pop
cltd
inc
or
rclb
out
xor
push
repz
push
sbb
test
add
push
aad
jae
mov
pop
cmp
mov
pop
xor
nop
das
mov
cmp
stos
mov
fidivrl
das
push
popa
pop
push
push
mov
fmulp
jg
popf
xor
enter
inc
inc
sbb
mov
jmp
push
mov
dec
aaa
fcomp
and
test
outsb
aaa
clc
cli
stos
movsb
pop
mov
fldenv
pop
frstor
les
mov
cmp
aam
xchg
cmc
mov
movsb
pop
cmp
imulb
xchg
test
in
aaa
iret
lret
nop
adc
sub
add
xorl
fwait
int3
mov
fldpi
movsb
popf
xor
mov
sahf
imul
jp
mov
cmp
mov
ret
pop
sbb
push
loop
into
outsb
jo
fnstcw
pusha
sti
stos
sbb
sbb
testl
ret
cmp
ljmp
sbb
mov
xchg
aad
xchg
cmpsl
js
or
add
jp
aad
mov
dec
pop
jns
fwait
and
mov
gs
and
dec
dec
cmp
cwtl
xor
mov
mov
mov
sub
fs
lret
mov
pop
dec
cmpl
mov
sbb
cmp
jae
ds
add
inc
push
push
sub
dec
fidivs
leave
push
add
lcall
stos
call
xchg
cltd
fldcw
gs
sbb
fwait
in
adc
filds
push
leave
insl
in
std
mov
pop
imul
insl
sbb
imul
adc
fadds
test
mov
mov
aas
shrl
sbb
add
leave
aaa
jle
dec
xor
cmp
int3
cs
icebp
mov
fs
sub
scas
sbb
mov
sbb
jmp
pop
mov
pop
jb
jnp
fadd
xor
aam
ss
leave
ljmp
scas
jg
xchg
out
jnp
fildl
popf
sti
mov
add
push
out
mov
cltd
mov
add
jns
fadd
push
pop
mov
or
xor
adc
sbb
dec
mov
cwtl
rcr
repz
std
sbb
push
xchg
shrl
in
xchg
ss
arpl
xchg
and
push
push
sahf
jne
les
aam
jg
pop
lods
lahf
push
scas
call
or
cltd
pop
out
int
and
inc
pop
xor
jno
xlat
lahf
xchg
xchg
and
test
repz
cmpsl
outsb
mov
lretw
cmp
insb
jle
push
xor
icebp
sbb
lret
cltd
cwtl
xchg
mov
cmp
sbb
adcb
andb
std
mov
in
pop
or
in
cmp
xor
and
mov
aas
lds
adc
in
add
out
movsl
xchg
pop
testb
mov
push
ljmp
and
mov
popf
jecxz
xlat
mov
pop
adc
mov
mov
jno
sahf
lret
pop
aad
jecxz
and
rol
jo
nop
daa
enter
aad
xor
push
arpl
dec
adc
xor
xchg
stc
sub
inc
jle
add
rorl
testl
pop
push
dec
fisttpll
dec
and
mov
mov
shll
cmc
lock
inc
push
push
jl
test
adc
arpl
fdivp
shr
inc
fstps
hlt
pop
repnz
mov
cltd
jno
subl
push
out
mov
jns
xchg
mov
jns
sub
movsb
fdivl
ds
jnp
mov
mov
fldt
arpl
sbb
aas
cmp
movb
lret
mov
or
js
imul
fwait
xor
or
mov
lahf
jb
stos
add
xchg
es
inc
add
cmp
test
push
lods
outsl
mulb
inc
sbb
testl
repnz
lea
mov
jnp
aaa
das
pop
repz
pop
adc
fs
pop
repnz
dec
stos
xchg
cmp
rclb
rol
aaa
inc
cmpb
xchg
aam
int3
ja
fsubrl
sbb
cmp
jns
jp
out
or
ljmp
iret
in
std
insl
aam
push
insl
lods
clc
inc
cmp
rcrb
push
push
lcall
sahf
loop
inc
hlt
loopne
add
divps
xor
xor
pop
or
sahf
iret
pusha
sbb
jp
mov
pop
roll
fbld
and
inc
xor
cmpl
sbb
lea
outsl
popa
and
out
or
cmpsl
ret
dec
pushf
dec
aas
mov
hlt
out
mov
inc
insl
in
faddl
loop
xorb
jae
enter
aam
push
jae
or
inc
lret
cs
cmpsb
fdiv
mov
inc
test
jno
fbstp
inc
xchg
std
jmp
or
dec
inc
jecxz
pop
aaa
ficoml
lahf
dec
push
iret
dec
arpl
je
ljmp
sub
das
fisubl
stos
arpl
pop
push
and
cld
int
inc
clc
stc
push
cmp
bound
faddl
fcoms
ljmp
rclb
mov
cld
mov
imul
insl
jae
jp
xchg
add
pushf
add
popf
inc
divl
push
mov
xor
mov
add
dec
arpl
cmp
mov
push
call
filds
mov
inc
pop
inc
mov
movsl
ret
outsl
ret
std
or
insl
es
dec
fcomip
jb
dec
jecxz
xchg
pop
cmp
out
js
push
add
call
or
in
or
test
test
and
pop
and
pop
jbe
lret
xchg
loope
xchg
lods
sub
call
int
sbb
mov
in
jns
aad
insb
sbb
adc
pop
xchg
mov
sbb
lea
lods
ret
pop
or
ja
push
out
hlt
mov
dec
and
ret
js
dec
xor
outsb
inc
mov
sbb
push
decl
scas
dec
pop
test
cs
inc
enter
cmpsb
mov
fdivrl
push
jle
pop
icebp
adc
js
xor
add
inc
fmuls
lea
out
push
dec
pop
mov
inc
bnd
dec
jo
xchg
mov
sti
fnstenv
mov
idivl
repz
or
fsubs
psubusw
call
jne
push
in
jnp
loop
sbb
sarb
xchg
sub
rclb
enter
sub
sub
lcall
dec
div
dec
xor
dec
xchg
push
mov
lcall
dec
jecxz
mov
jg
stos
fdivrs
pop
inc
push
lods
je
test
jae
dec
lcall
loope
rclb
dec
mov
lret
addr16
or
orb
dec
je
cmp
arpl
sub
or
sarb
outsb
loope
jns
mov
jnp
daa
jns
scas
mov
ret
lret
shr
cld
mov
or
stos
mov
fsubl
cmp
xlat
add
jge
icebp
adc
jo
jmp
mov
jmp
ror
cmp
sub
into
aas
stos
jmp
cmpsl
xor
bswap
fidivrl
into
push
push
pop
fs
divb
stc
fs
pop
jb
or
mov
add
arpl
pop
dec
addr16
dec
jecxz
xchg
xor
xchg
out
cmpsl
and
fstps
jmp
popa
decb
dec
ss
xchg
add
rcrb
xorl
cli
ja
mov
lahf
inc
sbbl
dec
cs
pop
pusha
outsl
xor
sbb
and
add
jo
pop
insb
xchg
pop
sbb
imul
xor
lret
mov
dec
or
pop
mov
pop
lcall
dec
enter
fwait
mov
mov
shlb
bound
aaa
ljmp
pusha
popf
scas
mov
fld
insl
arpl
cmp
add
xchg
dec
push
dec
jbe
mov
jno
xchg
mov
push
pop
inc
dec
sub
sar
iret
add
mov
mov
daa
imul
mov
adc
jb
mov
test
cmpsl
dec
or
dec
out
sub
push
sbb
and
dec
sbb
shll
mov
push
imul
cmpsl
cmp
into
loop
sbb
cmp
test
test
jmp
and
lcall
loope
dec
test
xlat
repz
cmpsb
in
xchg
cmp
ret
test
dec
call
jmp
test
into
add
mov
xchg
sub
cmp
mov
dec
pop
mov
rcll
jp
mov
ds
pushl
call
jb
jmp
scas
dec
in
lds
aam
insl
and
push
mov
jg
mov
or
mov
push
push
test
pusha
mov
lret
lds
sbb
dec
jnp
bound
push
add
mov
jl
inc
adc
fs
xchg
add
push
mov
out
je
incl
cmp
mov
xchg
sub
mov
imul
imul
roll
jg
mov
cli
or
fadds
stos
shll
pop
in
mov
and
fistpl
mov
ja
and
mov
mov
hlt
dec
cmpsl
or
repnz
adc
pop
cmp
push
out
xor
xchg
sub
in
mov
div
bound
shl
or
fwait
push
jg
jne
mov
jno
movsb
es
xor
push
xor
inc
call
or
sbb
aaa
pop
repnz
lret
loop
mov
adc
push
popa
je
mov
ret
xchg
call
repz
push
mov
outsl
test
mov
jae
pop
dec
shlb
mov
or
out
in
push
push
sti
sbb
sbb
call
or
pop
xor
adcb
push
xchg
fidivrs
out
test
mov
jbe
scas
and
mov
push
jp
xor
out
mov
fsubr
jge
test
jge
divl
sahf
hlt
ds
imul
aad
sbb
jns
push
in
jno
sbb
rol
rsm
adc
fs
sub
mov
dec
cmpsl
les
adc
and
sti
movd
pop
xchg
jp
faddl
out
es
pop
sub
inc
aam
loope
lods
jg
add
xchg
hlt
or
xor
fldenv
ret
xchg
ret
mov
mov
inc
mov
push
outsl
arpl
mov
xchg
push
les
mov
cmp
xor
pop
jp,pt
in
fcomps
jle
adc
xchg
fisttps
lret
dec
mov
out
js
sub
push
mov
movsb
dec
dec
aam
adc
rcrb
add
pop
imul
and
sbb
dec
mov
add
jmp
add
adc
xlat
push
jmp
cmc
iret
dec
scas
mov
mov
incl
ja
sub
aam
lea
es
pop
aas
cwtl
xlat
mov
sbb
and
cld
and
inc
insl
out
sahf
data16
xorb
leave
pop
xchg
scas
imul
enter
sub
and
sbb
push
mov
push
lcall
push
or
cmp
ret
outsb
cwtl
repz
popf
mov
lcall
test
repnz
orl
and
jg
inc
xchg
mov
out
or
mov
push
dec
add
xchg
xchg
dec
loop
int3
jg
mov
sub
mov
js
pop
lods
inc
cmp
int3
fidivrs
repz
ds
icebp
jne
cmp
loop
ljmp
dec
add
adc
push
fstl
xchg
aad
adc
fdivr
cmp
or
hlt
gs
mov
ret
mov
lahf
xchg
cmc
inc
mov
iret
fmul
std
xchg
pushl
shr
jo
sbb
or
mov
lock
loopne
inc
in
mov
push
mov
outsl
pop
jge
mov
fidivrl
push
or
cwtl
out
popf
cmp
and
lea
dec
push
and
xor
mov
sub
mov
pop
xor
inc
ficomps
adc
hlt
xchg
cltd
add
xor
out
adc
sbb
icebp
mov
push
ljmp
adc
in
or
and
ja
jbe
sbb
in
retw
dec
in
fwait
ljmp
out
test
rorl
mov
scas
adc
into
ss
jne
adc
mov
les
popa
jecxz
push
mov
leave
jno
push
jne
inc
rclb
mov
mov
and
addr16
in
dec
cmp
mov
pop
scas
sub
test
mov
rcl
divb
stc
or
mov
in
mov
or
pop
xlat
fimuls
jp
sahf
xor
mov
xchg
pop
aad
jbe
mov
push
dec
std
or
mov
fnstsw
mov
xor
adc
mov
outsb
sub
out
ljmp
pop
and
pop
mov
pop
cmp
adc
push
xchg
dec
mov
xlat
mov
xor
mov
pop
cmpsb
sbb
inc
sti
rcr
pusha
gs
filds
inc
dec
in
hlt
subb
fwait
arpl
dec
add
icebp
rep
and
lods
outsl
pop
dec
mov
sarb
cmc
movl
push
mov
lock
mov
sbb
test
test
adcb
lods
mov
fidivrs
daa
xor
enter
adc
outsb
lret
call
mov
push
pop
mov
shl
je
inc
cmpsb
pop
cmpsl
dec
sbb
mov
arpl
jo
sahf
addr16
fsubl
outsb
shll
outsb
mov
popf
or
mov
cli
filds
iret
mov
pusha
out
cld
inc
fldcw
mov
in
movsl
fwait
scas
out
imul
adc
jno
mov
xor
pop
mov
call
cmpsb
mov
mov
adc
push
mov
and
xchg
sbb
fsubrs
jge
and
iret
jo
pop
mov
popa
dec
bound
les
mov
sbb
dec
pushf
ja
xor
loop
push
and
cltd
call
jne
repnz
imul
ja
cmp
add
xor
loopne
aaa
cmpsl
out
jae
mov
pop
and
outsb
repnz
imul
addl
shrb
addr16
outsb
std
int3
push
xchg
jae
lahf
hlt
mov
aaa
jne
dec
repnz
out
inc
fs
mov
negl
xor
pop
jns
add
scas
adc
adcb
stos
sub
cltd
fsubs
fwait
out
or
pop
les
xor
iret
mov
sub
xlat
enter
lcall
sahf
mov
mov
mov
mov
inc
sub
jmp
cmp
clc
in
sub
sbb
ror
xchg
stc
sub
pop
cs
aad
adc
add
mov
jbe
xor
push
push
inc
mov
shll
or
pop
pop
push
mov
test
lock
add
pop
negb
cwtl
or
jle
dec
imul
mov
mov
and
sub
das
sbb
xlat
push
nop
xchg
leave
in
dec
fcmovne
stos
ds
fisubrs
fucomip
icebp
push
and
inc
imul
xor
fcomip
insb
sub
mov
out
daa
hlt
xchg
rcr
xor
pop
cmpsb
sbb
and
jae
out
mov
ljmp
in
fcoms
push
stos
pop
movsb
sub
sub
ffreep
test
xor
into
repz
mov
push
aam
cmp
push
aad
ss
cmp
cmc
lea
push
mov
sarl
aaa
jp
fstpt
dec
lods
adc
push
jge
mov
fldenv
shll
or
inc
fidivs
xchg
add
mov
rorl
popa
fcompl
cwtl
int3
mov
mov
inc
xor
aas
dec
or
mov
xchg
push
cmp
int3
dec
bound
lods
into
jo
push
jg
fidivrl
aam
mov
jle
or
repz
mov
mov
outsl
cli
push
push
sbbb
mov
lret
xor
in
pop
mov
push
inc
in
testl
push
popa
push
mov
or
mov
fimuls
aas
into
and
sbb
sub
and
addl
pop
dec
stc
ds
popa
jecxz
scas
dec
push
sahf
fdivrl
xor
clc
inc
mov
addr16
xor
dec
mov
push
loop
dec
dec
mov
fs
insl
dec
push
jge
ds
lahf
xlat
pop
xchg
rcr
mov
add
push
imul
mov
cmp
pop
mov
orl
out
fsts
push
cmp
sbb
push
out
push
adc
or
adc
hlt
or
sarl
add
jo
outsl
push
jne
stos
mov
jl
jl
mov
xchg
ss
daa
adc
fs
mov
aaa
sub
loop
jbe
loopne
nop
mov
push
loope
and
js
adc
inc
inc
mov
xchg
push
fstpt
sub
pop
xchg
mov
mov
or
in
mov
mov
bound
push
inc
fisttps
ljmp
test
push
jbe
aam
pusha
or
scas
sub
shr
fistl
sbb
adc
in
cwtl
imul
sub
scas
fnstsw
fldenv
es
sbb
sub
aas
mov
nop
dec
jp
out
out
pop
fcmovb
xlat
add
cmp
sbb
xchg
add
repz
shr
fwait
stc
shrl
xchg
pop
mov
sbbl
dec
xor
jl
sbb
mov
js
pop
or
pop
fldt
pop
mov
or
test
ret
sbb
xor
cmp
nop
in
das
mov
add
dec
mov
je
movl
xor
sbbl
mov
insl
ss
xchg
pop
lret
mov
sbb
mov
fisttps
scas
negb
jne
fidivrs
sbb
lods
mov
bound
adcl
pop
cmc
mov
shlb
popa
push
fnstcw
das
testb
jb
pop
add
fwait
stos
cmp
mov
pop
adc
sub
cltd
dec
stc
cltd
push
out
call
add
icebp
emms
and
je
push
test
cmp
fcoms
ljmp
inc
repz
mov
aas
test
call
and
mov
adc
cmp
ret
push
xchg
clc
cld
loopne
dec
xor
mov
aad
adc
loop
roll
dec
mov
lea
inc
mov
js
jmp
sub
jno
cmp
sbb
xchg
adcl
jbe
add
xor
pop
movsl
cwtl
decb
cmpsl
out
ja
and
cli
icebp
xchg
xchg
jo
push
data16
mov
addr16
jmp
xor
lock
jns
lret
movsl
nop
add
jnp
int
mov
stos
pop
ss
test
pop
cmc
fxch
rep
int
jl
mov
in
sbb
mov
lcall
push
mov
or
test
jne
push
push
adcb
js
mov
ficomps
fdivrs
insb
xlat
fsubl
dec
and
outsb
add
mov
and
dec
pop
test
daa
pop
xor
xor
jp
add
xchg
aam
out
push
sbb
ja
movsbl
jno
xchg
in
cmp
clc
sub
cmp
scas
subb
fsts
mov
pop
inc
pop
test
adc
mov
cs
pop
pusha
mov
xchg
addr16
jno
add
data16
js
dec
add
push
test
or
cmp
bound
xchg
lock
dec
adc
xchg
pop
push
sahf
or
int3
loopne
xchg
imul
roll
test
mov
jne
data16
arpl
push
cmpb
hlt
pop
mov
jl
add
shl
sub
outsl
mov
inc
flds
mov
xlat
call
jle
mov
push
ljmp
jno
jecxz
outsl
loop
sti
scas
lods
xchg
gs
into
ss
sub
mov
mov
testb
cmpsb
imul
jecxz
adcb
and
nop
in
sub
fnstsw
jl
push
mov
fbld
call
cmc
jo
push
sub
loope
mov
test
xchg
dec
mov
mov
mov
jmp
stos
xor
sbb
lret
inc
add
scas
lret
pop
lea
mov
mov
loopne
sti
dec
xchg
fldpi
mov
mov
jo
jbe
xchg
sub
jae
pop
push
jae
xchg
mov
pop
adc
cmp
call
orl
je
pop
cmp
lcall
fdivrp
jbe
mov
lock
jmp
ret
ss
pushf
inc
mov
in
cmp
sub
in
xchg
push
les
adc
call
jno
dec
xchg
xchg
cs
in
popa
mov
bound
fldenv
push
das
inc
test
xlat
icebp
push
lret
and
cltd
test
xor
push
gs
loope
std
pop
cwtl
jnp
push
loop
iret
mov
stc
push
mov
cltd
loopne
bound
cmpsb
mov
movsb
mov
icebp
mov
lret
movsb
pop
mov
fcoms
sub
dec
test
jp
orl
push
lret
jle
and
push
repz
and
scas
mov
sub
xchg
mov
dec
stos
mov
sub
and
cmpsb
xchg
xchg
dec
add
push
xchg
pushf
mov
xor
jmp
sahf
sbb
xchg
push
rcll
call
fistps
dec
push
inc
std
sti
insb
into
in
sbb
push
jl
sub
xchg
lods
jp
cmp
dec
fsubs
and
loope
dec
loope
and
imul
in
in
inc
fmuls
lret
inc
pop
mov
call
dec
out
inc
popf
inc
fwait
loope
xor
je
lea
mov
inc
jecxz
sbb
imul
cmp
lcall
add
std
push
hlt
jo
sub
cld
sbbl
xor
push
xchg
mov
aam
out
and
lods
or
push
scas
sarl
xor
jnp
xchg
push
push
cmpb
pop
push
pop
and
mov
jne
adc
stc
outsl
cwtl
xor
pop
ds
xchg
mov
inc
data16
pop
js
mov
inc
mov
inc
testb
or
add
out
lret
xchg
pop
mov
mov
hlt
jbe
mov
pop
js
sbb
mull
xchg
jo
sub
or
dec
push
aas
push
in
push
dec
sub
or
dec
scas
aaa
dec
pop
jb
jmp
cmp
jne
sbb
out
nop
loop
xchg
jecxz
into
sar
xchg
xor
jns
outsl
daa
ret
nop
stos
test
test
shrl
cmp
fwait
lds
addr16
inc
out
and
mov
pop
mulb
mov
mov
jnp
clc
mov
jnp
into
jo
push
sarl
into
mov
mov
pop
inc
aaa
push
mov
mov
sub
not
fdiv
cmp
push
push
dec
adc
xor
xor
lcall
pop
dec
arpl
add
test
push
pop
andb
rcrl
push
add
js
fs
inc
and
lcall
mov
xchg
pop
mov
xchg
sti
sahf
cwtl
out
in
orb
pop
imull
aad
daa
repnz
mov
pop
call
or
jmp
mov
add
xchg
cmp
ret
adc
mov
xchg
ret
fsubl
hlt
push
push
mov
pop
ss
in
pop
fcoms
int
sarb
push
imul
mov
lcall
insb
jno
stc
or
push
shrb
dec
mov
mov
lret
adc
xor
jp
pop
dec
dec
enter
sti
in
ret
xchg
add
mov
fisttps
imul
test
sbb
pop
jle
or
push
push
mov
xchg
xor
jecxz
push
add
in
push
mov
ds
fs
jne,pt
cmpsl
stos
mov
in
rcl
dec
mov
xchg
ret
stos
mov
push
in
js
jb
mov
roll
mov
pop
xor
jl
pop
sub
jecxz
jp
sbb
sbb
mov
sbb
and
jae
pushf
inc
aam
decb
data16
fwait
xor
cmp
mov
xchg
and
faddl
pop
je
dec
mov
mov
call
jmp
adc
int3
out
test
and
lea
and
pop
dec
xchg
xchg
pop
sbb
outsb
fisubrs
adc
push
push
sub
enter
jmp
xor
cmp
mov
dec
xor
lods
pop
sub
push
clc
xor
clc
inc
into
xchg
aam
push
inc
mov
mov
stos
push
arpl
jo
lret
sbb
inc
ja
jne
das
cmp
ror
fdivr
ror
fldenv
pop
lds
out
xchg
push
lock
nop
test
insl
jge
pop
push
cmpsl
fs
mov
imul
or
adc
or
mov
adc
lret
outsb
test
pusha
cmpsb
add
mov
jne
xchg
xchg
test
fdivl
popf
pop
loope
mov
inc
push
daa
into
jge
jbe
add
adc
jbe,pn
cmp
xchg
arpl
repnz
mov
mov
lret
jns
mov
into
dec
push
lret
adc
sub
in
mov
inc
adc
or
dec
mov
jns
mov
adc
aaa
xchg
ds
iret
and
sub
sub
mov
xlat
xchg
mov
dec
xchg
aaa
xlat
jbe
dec
shll
gs
lahf
ljmp
hlt
mov
outsb
out
adc
dec
cmp
xchg
fcomi
mov
ja
dec
lods
push
call
in
jbe
push
cmp
daa
lds
xor
loopne
mov
fwait
xor
mov
push
imull
add
pop
out
test
xor
mov
xchg
imul
jbe
hlt
imul
adc
inc
xchg
push
add
push
repz
in
ja
sbb
and
jmp
lock
and
iret
shr
and
sub
mov
cmp
inc
popf
pinsrw
mov
and
subl
mov
push
pop
out
adc
push
shrl
shrl
fadds
js
mov
fsubr
add
or
push
js
jb
out
adc
pop
pop
nop
mov
arpl
test
arpl
xchg
adc
xor
xchg
push
negb
or
fmul
rcrl
lahf
je
call
in
jns
xchg
mov
mov
pop
inc
out
pop
sub
push
jno
jl
or
enter
lret
xchg
sub
mov
adc
adc
pop
add
mov
stos
dec
inc
enter
pop
jno
dec
popa
pop
mov
and
test
mov
mov
insb
xorb
insl
jge
cmpb
mov
mov
adc
data16
pop
and
mov
lds
mov
fildll
push
jle
cmp
push
jo
and
mov
ljmp
ja
popa
or
loop
inc
sbb
mov
shrb
dec
push
jno
xchg
add
dec
cwtl
rcrb
sbb
int3
call
int3
pop
rclb
push
jne
add
mov
scas
add
adc
cmp
out
push
mov
cld
mov
roll
adcl
fcmove
pop
daa
or
out
popa
fadd
shl
xor
dec
push
inc
test
insb
in
cltd
xor
lret
push
pop
inc
push
mov
aas
insl
pop
jecxz
add
mov
xlat
outsl
push
ret
mov
loop
test
sti
xor
fbstp
repnz
shll
loopne
in
jmp
arpl
push
aaa
push
jg
mov
dec
aad
xorl
sbb
dec
push
lcall
imul
mov
push
sti
inc
mov
adc
xor
push
arpl
push
cmpsl
mov
add
fsubrl
jle
iret
mov
inc
push
sub
adc
test
cmc
popa
mov
push
jo
out
leave
aas
xchg
or
fiaddl
shrl
outsl
pusha
jnp
pop
cmp
and
xchg
cmp
inc
xlat
imul
jae
mov
adc
in
jp
aaa
jnp
xchg
lea
cltd
enter
lahf
sbb
test
jg
fnstcw
int
adc
sbb
das
xchg
cmc
dec
data16
loop
andl
push
sub
cltd
add
inc
fxch
sub
mov
insb
test
dec
loopne
cmc
adc
fistpll
dec
lahf
cmp
or
push
es
ret
test
inc
mov
popa
es
pop
xorps
xor
push
bnd
inc
ja
cli
mov
jne
sbb
insl
push
insb
xchg
out
hlt
aaa
mov
push
jmp
pop
pop
sub
mov
pop
data16
mov
std
cmpsl
stos
jbe
fisttpll
add
into
in
mov
bound
loope
mov
adc
jmp
adc
mov
addr16
add
arpl
mov
in
icebp
adc
pop
inc
mov
stos
out
adc
stos
inc
adc
adc
test
in
aas
fyl2xp1
nop
sub
adc
add
jno
jecxz
in
jne
xchg
cmpsl
ja
inc
cs
cs
xor
jno
add
inc
fstpt
test
xchg
stc
xchg
aas
pop
notb
ss
shlb
mov
loope
notb
dec
adc
shll
enter
insb
dec
repnz
out
outsb
mov
outsl
les
pop
leave
movsl
ret
bound
inc
fistpl
mov
xchg
sub
mov
cltd
inc
xchg
xchg
stos
xor
or
insl
or
mov
ret
jnp
xchg
mov
mov
in
xor
cmpsb
jae
sarb
pop
push
imul
clc
push
mov
cmpsb
insb
or
pushf
cmc
addb
int3
rcrl
loope
imul
enter
cli
imul
mov
into
enter
dec
in
adc
iret
es
pop
sub
cwtl
in
test
lea
call
fucomp
cltd
inc
cmpsl
movsb
cmp
popa
adc
cmp
imul
divl
insb
adc
jae
int
sarl
imul
mov
adc
pop
pop
or
jns
cmp
jle
dec
cltd
jae
lods
ret
xchg
cmp
int
xlat
cmc
test
adc
pop
xor
pop
repz
bound
dec
jp
jg
pop
xor
xchg
cwtl
stos
mov
inc
add
inc
orb
fcoml
inc
xlat
in
cmpsb
xchg
jle
push
pop
push
clc
mov
test
and
mov
mov
or
repnz
push
sbb
jle
lock
add
jle
imul
out
inc
call
lret
cmp
insl
push
adc
leave
fdivl
jmp
xchg
pop
push
push
sub
in
cmp
loop
mov
lret
insb
pop
insl
fildl
mov
mov
fidivrs
jg
int
mov
mov
cltd
mov
adc
lds
mov
sbb
fmulp
data16
imul
xorl
xor
popl
outsl
jge
loopne
dec
pop
and
mov
add
cmpsl
xchg
xchg
cwtl
lods
out
fstpt
ss
bound
jae
sub
iret
repz
js
insb
lret
icebp
pushl
sbb
dec
push
xchg
dec
jns
div
mov
add
dec
mov
pop
mov
js
adc
shrb
ss
add
sbb
jecxz
and
lahf
stos
and
xor
and
lcall
cmpsb
roll
mov
insl
ljmp
mov
xor
in
cmp
xor
cmp
jb
daa
mov
xchg
cld
push
or
aas
sahf
xor
push
lock
xlat
xchg
insb
mov
rclb
scas
pushl
cwtl
repz
sub
cmp
xor
mov
dec
and
and
aam
xor
rorb
push
lret
aaa
adc
es
mov
lcall
xchg
out
insl
xor
xor
push
and
dec
les
les
jns
mov
pop
cmpsb
sub
mov
mov
inc
xchg
mov
pop
sub
lods
xor
lds
adc
ret
arpl
mov
inc
or
xchg
sbb
or
stos
imul
subb
inc
push
push
adc
sbb
cld
push
and
push
fsubr
inc
mov
adc
in
sbbl
int3
xchg
fwait
xor
mov
mov
das
ljmp
inc
inc
lcall
and
xchg
dec
lcall
mov
out
lds
push
mov
repz
leave
mov
bound
sub
xor
flds
or
dec
pop
sub
ja
add
les
data16
cmp
sbbb
dec
add
jb
jg
jg
dec
or
test
sub
xchg
jl
dec
xor
pop
js
add
ja
fcoml
sub
mov
ja
and
mov
xchg
int3
dec
scas
adc
jb
mov
push
add
cmpsb
dec
in
cmp
jno
pop
cs
and
mov
adc
xchg
mov
sbb
dec
shlb
add
sahf
js
test
inc
je
les
mov
stos
aad
clc
fsubrs
cli
mov
dec
add
lea
lock
daa
testb
sbb
xor
push
sub
xlat
and
xor
fisubrs
and
pop
xchg
in
sub
aam
lods
das
push
mov
push
sahf
outsl
pop
in
pop
mov
out
cmpsl
mov
add
jb
push
rep
xorb
loopne
test
inc
out
gs
daa
mov
mov
xchg
mov
pop
fwait
out
cld
int3
xorb
or
jns
adc
dec
push
mov
and
in
lods
lock
xchg
lea
in
test
insl
jg
push
in
sbb
xchg
pop
loopne
mov
cmp
push
xchg
test
iret
adc
mov
jecxz
inc
xchg
dec
fisubrs
ret
insb
lods
mov
mov
data16
out
ja
inc
push
ficompl
mov
and
in
call
mov
pusha
xchg
mov
inc
or
jae
add
jg
adc
call
sbb
xchg
xchg
add
in
dec
sub
sub
shll
sahf
sub
mov
sbb
xchg
aas
push
push
bound
fsubs
lret
mov
stos
int
gs
aam
jae
jmp
aad
addr16
ss
loope
pop
test
pushf
cmp
in
pop
adc
cmp
jo
cwtl
lret
andb
rcll
mov
js
dec
lret
bound
jl
jae
jb
pop
aam
fdivs
mov
popf
fidivrl
add
add
pop
test
les
inc
or
xor
pop
testb
cli
xchg
xor
jno
aas
bound
pop
testl
add
loop
jnp
sbb
mov
and
insb
mov
test
xchg
div
or
mov
das
repz
inc
push
movsb
jecxz
push
into
lods
adcl
pop
popf
mov
mov
inc
es
sub
loope
out
adc
js
fdivr
ret
scas
sbb
out
loope
jae
inc
pusha
jle
xchg
pop
data16
dec
lds
loopne
mov
cs
outsl
pop
or
mov
pop
or
fisttpl
shrl
push
fnstsw
inc
lods
std
sbb
pusha
outsl
mov
jge
out
dec
decb
xchg
jecxz
cmc
mov
pop
sub
cmpsl
mov
mov
jb
insb
scas
mov
jmp
shr
jle
and
adc
push
adc
sub
pop
mov
sti
fwait
ret
push
jo
jmp
pusha
sbb
lds
lods
std
pop
mov
xlat
leave
int
ja
mov
mov
imul
pusha
sbb
shll
add
mov
cltd
mov
stos
and
lock
lret
in
lcall
push
mov
xor
sbb
push
or
in
insb
dec
push
andnps
or
push
scas
mov
out
hlt
loop
adc
dec
cmc
xorb
ror
or
mov
jne
aam
push
push
test
xchg
or
out
adc
repnz
sub
imul
add
pop
and
out
xchg
pushf
xor
rorb
leave
test
push
leave
pop
push
inc
mov
jnp
pop
add
xor
test
or
rcll
push
in
jp
pop
push
inc
mov
sub
push
xor
pop
jno
inc
jne
repz
push
pavgb
sahf
push
adc
lods
dec
mov
daa
or
xor
adc
dec
loop
jns
adc
das
xor
or
std
sti
push
xchg
jmp
or
dec
xor
out
sub
add
fdiv
push
dec
mov
push
mov
mov
mov
mov
pop
jae
or
cs
mov
popa
into
pop
mov
adc
add
pop
fstl
push
xchg
pusha
mov
std
cmp
outsl
stos
fsubl
add
imul
pop
pop
int
lea
jb
mov
aaa
rorl
bound
push
mov
sbb
inc
inc
push
adc
jl
jae
sahf
aaa
jmp
push
arpl
shr
ret
sti
mov
add
sub
pop
lds
ss
xchg
add
sahf
gs
sbb
js
push
push
pop
clc
push
jnp
or
rcrl
xchg
inc
mov
aas
push
mov
mov
jno
rcr
repnz
repnz
clc
xchg
sbbl
loope
out
adc
jp
sub
cwtl
mov
cmp
jb
cs
das
mov
into
push
mov
mov
out
mov
out
push
rolb
ljmp
dec
andl
mov
jae
cmp
lods
out
pop
and
and
pop
add
in
je
daa
cmpsb
aad
js
out
lods
mov
outsl
sub
push
xlat
mov
bound
cs
lods
fldcw
lcall
push
mov
adc
cli
add
lds
push
and
ret
adc
xor
pop
and
fs
mov
cmp
sarl
iret
add
cmc
mov
push
mov
int3
loopne
jno
mov
rolb
movsb
mov
push
ret
bound
in
sti
dec
and
push
insl
add
insl
jle
or
pop
xchg
fidivrl
lock
mov
add
pop
mov
sbb
mulb
xor
cmc
mov
ret
pop
lcall
sub
scas
int
mov
dec
and
push
outsl
insb
js
inc
lea
out
fidivrl
sub
fiadds
arpl
daa
mov
pop
fwait
xor
icebp
loop
in
mov
repnz
dec
xlat
pusha
inc
xchg
or
scas
xorl
pop
push
mov
lds
mov
stos
xor
je
or
ja
notb
enter
pusha
or
mov
aam
jle
pop
jns
and
out
cmp
add
pop
movsb
in
pusha
adc
sti
int
orb
out
cld
dec
cmp
mov
lea
test
clc
es
xchg
mov
lahf
fld
loope
int
push
adc
fadd
mov
pop
push
adc
or
jg
mov
sbb
mov
aam
mov
pop
out
scas
mov
call
mov
popf
out
call
xchg
popa
sub
push
cmp
test
mov
add
add
and
pop
xor
into
insl
jl
sub
push
lret
pop
dec
incb
xchg
xor
std
inc
out
ljmp
pop
repz
mov
and
mov
mov
xor
sub
push
mov
test
sar
pop
iret
and
jmp
adc
mov
xchg
lods
pop
test
mov
xchg
dec
subb
pushf
cmpsl
out
fnstcw
jp
cmp
pusha
add
push
scas
in
into
lea
bound
jmp
pop
ficoml
add
pop
xor
cwtl
rdtsc
sbbb
cli
dec
shl
cli
pusha
pop
add
dec
rorl
loop
repnz
and
xchg
test
les
inc
sar
add
das
mov
push
imul
xor
sbb
icebp
je
cs
cli
imul
mov
int
subb
test
aaa
sahf
and
sti
dec
aad
add
xor
testb
or
out
xchg
enter
dec
in
cwtl
push
iret
sbb
mov
cmpl
rolb
jne
mov
lcall
jbe
aaa
ret
adc
repz
xor
clc
inc
jne
cmpl
push
iret
mov
ret
xchg
push
lahf
addb
mov
filds
arpl
push
push
mov
sbb
push
shlb
inc
in
lahf
sub
push
popf
mov
push
inc
adc
sbbl
sub
push
pop
pop
lock
icebp
pop
jge
ja
rcrl
xor
jae
arpl
into
enter
mov
scas
pop
inc
or
sti
stos
mov
adcl
xor
cwtl
data16
pop
jg
fwait
je
int
fiaddl
imul
popa
movsl
cmc
mov
loope
pop
push
inc
shl
aaa
pop
fsubrp
sbb
out
in
fmuls
sbb
jmp
adc
rcll
sahf
add
out
ja
cmp
shl
mov
adc
shl
and
test
push
mov
sbb
popa
adc
into
sbb
lock
mov
ds
cmp
xlat
lock
in
std
adc
ss
mov
movsb
mov
bound
rolb
sbb
sub
jp
arpl
icebp
mov
or
sub
out
or
jbe
adc
aam
lahf
test
sbb
sbb
fucomip
cmp
jns
shll
xchg
popl
shll
cmpl
push
push
and
pop
xchg
xor
inc
outsl
jb
mov
jno
jle
jb
in
adc
push
adcb
fcoml
sub
outsb
add
fnstenv
in
or
xor
sbb
xchg
popa
cli
loope
xchg
adc
mov
ret
push
scas
call
xor
shll
xchg
scas
mov
push
outsl
mov
ja
mov
aad
mov
imul
pop
int3
mov
jecxz
aas
mov
mov
lods
mov
imul
pop
loope
test
sti
xchg
xor
mov
mov
and
into
fwait
lds
mov
gs
aam
das
cli
repnz
adc
fstpt
push
daa
enter
add
shll
xchg
and
dec
inc
adc
lahf
ss
or
mov
dec
pop
roll
insl
mov
imul
add
loopne
fcompl
mov
dec
std
xor
aad
lock
fwait
sti
jge
rclb
outsb
jne
fmull
add
and
mov
test
fildl
jnp
inc
or
cmp
xchg
push
je
imul
jl
in
test
and
in
jg
inc
int
add
push
lcall
and
xchg
sub
lcall
and
xor
cmpsb
pop
scas
in
xchg
inc
or
inc
int3
sarl
lods
fstpt
fstpt
sub
out
push
mov
fidivrl
lret
sbb
push
dec
inc
or
mov
lock
leave
imul
xchg
lock
xor
out
mov
js
jg
add
cmpsl
mov
lret
rcrb
loope
inc
push
fidivrs
iret
iret
fs
testb
repz
or
or
dec
lcall
and
das
jnp
adc
aam
sub
dec
fistpll
ja
inc
cli
fstl
sbb
out
xchg
test
ret
data16
in
xchg
clc
sahf
in
pop
and
ds
sub
cmpsl
test
xchg
ds
pop
cmp
dec
lahf
jecxz
mov
xor
pop
pop
out
cli
xchg
fsubrs
outsb
inc
cli
cltd
xor
fistps
jae
push
mov
cmp
add
aad
xlat
pop
ja
mov
in
popf
or
sub
fs
mov
push
push
aas
mov
push
mov
pop
push
ss
mov
testb
ret
inc
mov
xor
jg
jno
into
gs
test
adc
pop
ficomps
arpl
stc
jbe
adc
inc
lcall
scas
icebp
pusha
sahf
test
daa
divl
jp
or
cmp
mov
pop
inc
push
addr16
xchg
je
fstl
jge
shl
dec
int3
mov
lods
std
in
fwait
jmp
xchg
dec
in
dec
and
iret
lret
adc
repz
jmp
xor
mov
adc
jp
xor
andb
jns
mov
sub
mov
loope
jns
mov
cmc
int3
jns
lret
mov
and
sub
aaa
fnstenv
fucomp
dec
ljmp
lea
sub
popa
sub
shld
lret
ljmp
push
shrl
outsb
jns
inc
mov
aaa
xchg
cld
arpl
jg
dec
jbe
fs
mov
mov
cli
lods
mov
outsb
dec
mov
cmp
jb
pop
add
fidivrs
push
loopne
aad
sbb
inc
add
mov
push
jge
xchg
pop
mov
ret
mov
sbb
jmp
jnp
mov
nop
jmp
ja
shrb
jno
mov
das
sti
sbb
rolb
mov
int
or
mov
les
xlat
inc
cmpsb
pop
hlt
clc
jmp
sub
add
sbb
sbb
and
test
push
insl
loope
movsl
pop
loope
xor
pop
in
xor
mov
adc
and
or
lods
arpl
sti
pop
inc
pusha
fimull
sbbl
pop
repnz
popl
aaa
mov
dec
aam
mov
jp
jbe
push
dec
jecxz
roll
push
ret
mov
push
ret
fnstcw
stos
movsb
arpl
cmp
shrb
aas
call
and
sti
mov
hlt
dec
jb
adc
rorl
xor
test
xchg
icebp
push
jmp
jecxz
iret
loopne
sub
ror
mov
xchg
fwait
aad
mov
pop
sbb
sbbb
enter
dec
int
dec
add
std
jmp
fcomi
jnp
dec
xor
repz
cmp
push
push
push
jge
pop
mov
movsb
add
dec
xchg
loopne
enter
sub
dec
adc
subb
fs
sar
inc
mov
arpl
mov
sub
inc
fstl
ss
aaa
mov
movsl
adc
mov
adc
hlt
lret
cmpsl
or
mov
inc
dec
mov
push
add
dec
push
out
out
in
add
pop
jle
xchg
xchg
adc
sub
ret
or
add
cltd
mov
lret
pop
sbb
enter
sbb
mov
cli
or
fsts
sbb
sahf
outsb
mov
sub
js,pt
push
sub
inc
inc
dec
fsubrl
clc
cmp
adc
fisubs
adc
mov
mov
jo
and
and
in
pop
inc
fnstcw
dec
push
or
into
lahf
push
sbb
jp
pop
sub
fnstcw
inc
stc
loop
gs
mov
xor
hlt
imul
imulb
lret
push
and
iret
or
mov
adc
rorb
mov
xchg
or
subb
cmc
lea
xchg
cmp
movsb
jb
jmp
cmp
xchg
adc
ret
push
xchg
xchg
add
icebp
test
gs
mov
sbb
inc
dec
adc
sbb
push
push
jno
push
mov
stc
cmc
or
icebp
sub
lods
mov
int3
roll
jbe
jbe
dec
xchg
stos
inc
leave
adc
enter
lret
jno
call
jb
adc
pop
push
popf
lea
jae
xchg
push
push
ds
jb
xlat
movsb
es
pop
fstl
or
fisubrl
cwtl
sub
and
shr
push
sbb
add
xor
cli
jne
or
jne
lock
dec
scas
cld
enter
or
mov
jo
scas
lods
inc
fwait
stos
xorl
shrl
mov
icebp
mov
and
pop
pop
rorl
divb
push
add
xchg
popa
pop
repz
rclb
pushf
xchg
sub
xchg
push
lods
ret
push
mov
pop
lret
div
cld
mov
xchg
cmpsl
cmp
push
out
lret
pusha
pop
out
out
pop
loope
aas
adc
dec
pusha
or
sarl
xchg
ret
data16
push
dec
and
jle
js
cmp
aad
push
add
cmc
ds
mov
fdiv
testb
mov
xor
mov
inc
or
adc
sbb
jne
loope
lahf
and
pop
xchg
push
in
setb
push
daa
sub
fadd
sti
mov
int
lcall
loope
jae
jecxz
shrd
push
or
sbb
das
cmpsl
fs
repnz
jmp
and
xor
mov
mov
add
cltd
or
loope
pop
push
dec
mov
fstpt
push
popa
scas
dec
mov
and
sub
mov
lcall
adcl
mov
sbb
pop
notb
and
arpl
mov
xchg
jmp
jp
into
mov
shrb
adc
mov
outsl
mov
pusha
popf
and
inc
fs
jae
gs
cmc
imul
ljmp
jne
das
xor
dec
cmp
sbb
jg
inc
addr16
sti
lea
das
push
sbb
insb
leave
aaa
pop
clc
lea
mov
les
jmp
cmp
mov
push
xor
cmp
and
js
jo
icebp
inc
insb
adc
rcll
cltd
aam
mov
mov
ja
add
push
jb
test
xchg
imul
mov
ret
popf
sbb
jo
jge
cmp
jge
popf
ret
pop
cmp
pop
sub
mov
jae
dec
mov
fdivp
rcrb
nop
aad
dec
push
sub
mov
iret
enter
insl
sbb
nop
es
dec
cmp
in
movsb
es
push
jne
stos
in
pslld
xor
cltd
dec
sub
es
ss
int
adc
inc
sub
fdivl
rorl
inc
movb
push
mov
fcmovnu
popa
loope
scas
inc
divb
int3
loopne
leave
out
sahf
std
fdivl
in
pushf
aas
push
hlt
mov
test
xchg
mov
das
ret
pop
fwait
mov
subl
push
rcrl
jle
fistps
gs
sub
aad
pop
das
mov
dec
pop
xor
inc
xchg
and
subl
orl
lret
jmp
out
cmp
outsl
sbb
shr
addl
or
dec
cmp
lret
into
mov
pop
xchg
loop
mov
cmpsb
orl
xchg
ljmp
rorl
stc
push
or
inc
pop
test
mov
dec
out
rclb
pop
xor
xlat
mov
mov
or
mov
test
rcrb
popa
ret
xor
std
sub
cmpsl
cmc
push
adc
fisubrl
dec
rorb
orl
xchg
xchg
stos
inc
lds
leave
pusha
lahf
ja
iret
pop
mov
sbb
iret
adc
push
pop
mov
mov
add
dec
arpl
add
push
cmp
mov
jae
sub
mov
repz
mov
mov
out
in
sbb
jmp
mov
cmp
cltd
cmp
mov
sbb
shrb
sahf
mov
xchg
mov
in
bnd
mov
sti
fwait
add
jle
stos
jmp
test
scas
lea
shlb
enter
loopne
mov
xor
adc
mov
fisttpll
call
push
shll
mov
pop
jne
rcll
sti
rol
jno
imul
movsb
repnz
outsl
inc
cltd
scas
mov
and
hlt
add
or
push
popf
adc
movsl
or
movsl
lods
mov
pop
adc
cwtl
iret
jmp
bound
add
cmpsl
dec
add
js
push
or
xor
pop
data16
mov
out
xor
repz
cltd
cmp
xor
jno
adc
cli
adc
test
mov
mov
popf
fs
lcall
push
dec
xchg
in
incb
and
xchg
mov
cmpsl
loop
call
cmp
xchg
mov
in
sbb
push
stc
je
adc
and
mov
add
pop
push
and
cmp
pop
sbb
xor
repz
lods
in
mov
push
lahf
jge
out
xor
sub
lods
fsubl
mov
mov
scas
mov
cmp
jmp
dec
mov
imul
mov
inc
cmp
jecxz
cli
and
movsb
sub
mov
xchg
in
or
dec
adc
movsl
fwait
pop
pushf
mov
dec
loop
add
mov
cmp
sub
pusha
add
mov
fs
inc
jo
cmp
nop
lds
inc
ret
outsb
data16
jecxz
les
fisubrs
inc
mov
pop
cs
insb
aas
ret
je
and
xor
ds
stos
cs
push
jo
sub
pop
jb
mov
sahf
int3
mov
pop
pop
and
vunpcklpd
mov
movsb
pop
dec
pop
pop
aaa
jo
mov
pop
ljmp
clc
inc
mov
mov
movsb
movsl
fisubs
icebp
insl
clc
push
and
adc
xchg
mov
repz
out
nop
cmp
add
mov
mov
daa
rorl
stc
pop
repz
call
repz
cmpsl
sub
pop
jecxz
jmp
cld
add
and
icebp
sub
insl
loopne
mov
mov
jb
mov
add
lods
repnz
pop
pop
or
mov
test
inc
push
push
pushl
lods
aaa
and
icebp
cmp
std
jl
dec
cmp
stc
mov
ret
stos
iret
or
jl
or
jb
sahf
clc
scas
mov
leave
hlt
je
arpl
mov
xor
mov
cmpsl
push
gs
xor
jle
xchg
enter
push
adc
xchg
test
aam
xchg
out
cmc
sub
in
loope
lret
int
cmp
lods
stc
icebp
enter
jae
movsl
cmp
ja
lret
cmp
xchg
inc
sbb
push
mov
cli
and
adc
mov
sbb
mov
pop
out
mov
arpl
jo
aas
bound
sbb
sbb
sub
jns
sahf
dec
adc
push
or
xlat
sub
lahf
shl
mov
gs
xor
mov
enter
dec
sbb
sub
std
mov
cli
aad
fsubr
movsl
rol
jnp
inc
push
push
aad
dec
divl
or
jp
adc
fidivl
daa
std
test
adc
or
sub
pop
arpl
and
inc
sbb
cmpsl
mov
aam
std
mov
dec
or
xor
sbb
mov
popf
xchg
mov
les
dec
jae
xchg
ud1
jp
sbb
nop
cmp
arpl
mov
je
xchg
pop
mov
arpl
jo
repz
sub
adc
xchg
daa
adc
das
push
mov
pop
stos
or
mov
inc
or
adc
lret
pushf
cmp
jb
mov
inc
lods
mov
jg
sahf
mov
jmp
das
lock
out
movsb
addr16
fidivrs
sub
sub
scas
mov
aaa
test
ret
out
ja
icebp
cmp
shrb
leave
inc
adc
loop
or
ret
cmp
cmp
repnz
aaa
mov
push
sub
jno
cmovne
movsb
mov
aad
jl
lret
imulb
pop
mov
push
add
cmc
cmpl
or
xor
scas
xor
jne
loopne
xlat
lcall
pop
std
imul
rcrl
mov
ds
add
ret
mov
ss
std
arpl
lods
int
lahf
addr16
cmp
das
out
notb
mov
cmpsb
ficompl
rorl
cs
push
popf
sub
xchg
les
idivb
loopne
repnz
out
test
into
lea
outsb
and
loopne
loopne
gs
iret
and
push
jp
movsb
and
pushf
xor
enter
sub
add
cltd
dec
dec
jecxz
xchg
mov
out
aam
mov
inc
jno
jbe
cmp
mov
fnstsw
xchg
inc
or
sub
aas
push
sub
mov
cmp
xor
mov
cmp
add
shll
mov
add
insb
adc
xchg
out
js
mov
add
testl
ja
stc
add
fs
xchg
data16
pop
mov
mov
bound
cwtl
add
xor
les
pop
and
dec
mov
das
daa
out
mov
xchg
mov
lcall
inc
push
in
xchg
js
rcrb
add
lods
out
dec
push
mov
bound
mov
movsb
pop
lahf
inc
das
fidivs
mov
or
mov
ss
xchg
in
jbe
ljmp
pusha
rcrl
cmp
mov
add
mov
mov
aas
dec
fsubrl
dec
or
sti
mov
add
push
xchg
test
outsl
jle
push
inc
sarl
ret
jl
mov
pop
mov
xchg
sub
push
lahf
imul
jmp
sub
and
test
das
or
lea
and
leave
cmc
mov
out
or
mov
xchg
push
adc
mov
les
adc
ljmp
es
cld
fwait
cmp
repnz
xchg
xchg
iret
sub
insl
fucomi
or
xchg
adc
pusha
inc
and
xchg
mov
in
mov
je
test
jecxz
dec
fninit
mov
aam
and
in
lea
pop
rol
les
jge
cmp
adc
popf
test
mov
and
xor
sub
inc
lcall
add
sarl
out
pop
std
xchg
rorb
fildll
fstpt
gs
mov
test
dec
rolb
cltd
pop
sub
jae
pop
movsl
adc
ret
push
mov
or
imul
jg
insl
dec
push
jmp
jle
daa
push
xchg
sub
mov
push
pop
popa
or
dec
adc
aas
je
sarb
and
mov
pusha
test
mov
jb
dec
pop
inc
mov
lahf
add
or
sarb
pushf
jb
arpl
cmp
cmp
out
subl
xchg
adc
cmp
push
adc
pop
jge
inc
push
xor
add
lret
int3
ds
insl
pop
dec
pushf
pop
cmp
loop
lock
adc
xor
movsb
repnz
fcomps
insl
sbb
leave
pop
xchg
shll
sbb
mov
in
mov
pop
je
cmp
jg
pop
push
jp
or
sbb
inc
jne
adc
pop
cmp
lahf
test
push
push
addl
jae
sbb
adc
xorb
lcall
inc
xchg
xorl
xchg
mov
jns
mov
daa
mov
pop
sub
std
jno
movsl
ds
xchg
inc
sbb
push
cmp
nop
mov
and
sub
jg
inc
loopne
bound
iret
mov
psrld
and
dec
adc
add
mov
inc
cmc
xchg
stc
mov
fstl
mov
and
inc
push
cmpsl
jle
inc
dec
or
cmpsb
nop
mov
jne
pop
out
leave
mov
mov
push
xor
fisubs
pop
mov
xor
adc
cli
inc
xchg
fisubl
ret
lock
push
adc
and
and
mov
rorl
and
sub
sbb
mov
mov
std
sti
and
fwait
nop
stc
cli
lea
out
xor
mov
pop
daa
mov
push
sbb
ficompl
ja
cli
cltd
lret
cmp
cmp
andl
sub
in
test
xchg
xchg
lret
nop
mov
cmpsl
insl
rcrb
les
xchg
push
lods
sbb
cmpl
adc
cwtl
sbbl
push
jo
dec
je
repz
mov
pop
cmpsl
mov
cmp
add
jno
sub
les
jnp
cmpsb
jmp
dec
fwait
jmp
xchg
sub
and
mov
lods
shlb
mov
mov
pop
es
in
in
push
xor
cli
xchg
and
insb
pop
cwtl
dec
ficoms
push
jecxz
pop
enter
jb
cli
mov
sbb
push
js
nop
shlb
fwait
inc
enter
fildll
pop
test
mov
sub
dec
mov
push
imul
push
sub
add
or
and
movsl
icebp
mov
fstl
lret
fidivrs
call
fistpl
sbb
xchg
add
cld
mov
je
pop
xor
cltd
andl
imul
in
add
ret
dec
out
and
enter
lret
sub
jbe
mov
xchg
or
stc
sub
pop
and
in
sahf
mov
inc
xlat
jle
notl
sub
add
out
add
js
cli
xchg
add
sbb
je
push
push
lcall
adc
add
lcall
mov
jmp
scas
cmp
dec
movsb
cmpb
inc
test
pop
enter
inc
inc
sbb
mov
repz
nop
push
pop
in
roll
lods
imul
les
mov
pop
jbe
lret
movsb
push
das
cmp
addr16
movsl
inc
scas
cs
jmp
popa
sub
mov
jno
xchg
mov
mov
ljmp
out
xchg
mov
push
xor
jno
mov
imul
in
xor
push
mov
out
test
aaa
or
mov
or
dec
es
xchg
in
negl
inc
in
add
lret
flds
mov
fiaddl
insl
sti
cmp
inc
lret
lds
clc
mov
cmp
lahf
xchg
int3
sub
push
cwtl
jnp
sub
inc
cmpb
add
sahf
mov
std
cld
stos
jno
xchg
cwtl
andl
cmp
push
insl
loope
pop
gs
sbb
ljmp
scas
aad
ret
fstpl
or
mov
je
in
adc
sub
mov
imull
jno
cmpsl
mov
pusha
sub
ljmp
js
cmp
dec
lcall
sbb
rcrl
inc
jb
cmp
cmp
in
mov
lds
outsb
int3
mov
rolb
inc
lds
push
orl
and
arpl
pop
mov
push
add
movsl
xor
fsubrs
push
jl
mov
xor
add
lret
stos
mov
xlat
mov
imul
sarb
pop
fsubl
test
jp
or
pop
or
mov
mov
fisubrs
push
lret
xor
inc
adc
xor
js
scas
cltd
mov
dec
or
bound
or
and
dec
jns
fidivrl
fidivl
dec
and
mov
or
imul
cmp
repnz
leave
push
sub
lods
jp
pop
neg
call
cmp
jae
mov
xor
enter
jmp
negl
inc
xlat
icebp
testl
push
idivb
testl
sbb
add
dec
mov
es
scas
ja
pushf
push
or
push
stos
push
adc
pop
jbe
jge
xor
mov
aam
leave
mov
mov
sub
mov
dec
dec
pop
rclb
mov
dec
add
jbe
mov
mov
fst
imul
mov
loopne
les
add
push
mov
fwait
data16
pop
jo
mov
mov
in
push
mov
jge
fmuls
in
fistl
or
incl
insl
and
xchg
mov
push
call
mov
sarb
xor
inc
imul
cmp
xlat
dec
dec
adc
mov
jb
daa
icebp
outsl
ret
pop
out
jbe
insl
rolb
rorl
imul
jl
das
dec
stos
jmp
pop
cmpsl
sbb
cbtw
xor
adc
ljmp
repz
rorb
icebp
into
mov
xchg
stos
adc
icebp
inc
or
lahf
popa
fistl
adc
jge
and
sbb
leave
loope
leave
andl
xchg
movsb
push
push
xchg
mov
add
mov
inc
jbe
jge
push
inc
rolb
fcmove
adc
dec
inc
scas
repz
in
rclb
inc
adc
push
clc
arpl
sbb
scas
fisttps
bound
loope
pop
pop
and
add
add
mov
aas
outsl
cltd
popl
std
pusha
mov
cmpsl
cli
cltd
push
lock
adc
loop
dec
loopne
mov
push
mov
mov
out
js
insb
sub
repz
inc
pop
push
stos
inc
push
mov
mov
nop
daa
cltd
insl
stc
mov
xchg
add
pushf
fadd
sarb
lret
lds
int
inc
mov
xor
sub
rol
fisubrs
xchg
test
mov
shll
sbb
test
jp
movsl
push
pushf
or
add
mov
mov
and
mov
iret
jnp
aam
dec
xchg
inc
scas
adc
call
push
test
pop
mulb
dec
ret
push
jle
cmp
dec
fs
pop
dec
roll
fiadds
shl
adc
fidivrs
sbb
push
popf
xor
bndstx
pop
cmpsl
dec
or
int
arpl
mov
push
dec
into
push
inc
sti
test
and
mov
push
call
lods
lahf
outsl
out
fnstenv
and
jb
sti
xchg
and
push
sahf
push
je
and
pushf
lods
cli
lahf
outsb
mov
ret
jb
lret
sbb
pop
mov
jo
sarb
jo
into
jo
into
fisubs
inc
into
and
cmp
pop
xor
rorl
dec
pop
test
xlat
push
insb
ret
mov
in
dec
adc
mov
xchg
cmp
dec
incb
inc
xchg
cmp
rcrb
inc
push
std
and
ss
enter
sub
push
inc
lds
xor
add
add
push
mov
orb
bound
fmull
cmpb
stos
mov
inc
call
dec
dec
outsl
push
jle
xchg
inc
jo
lea
setae
cmp
jae
and
push
xchg
or
xchg
imul
push
jbe
repnz
outsb
stos
xor
repz
lock
and
int3
mov
push
test
ja
imul
lods
out
gs
enter
adc
sbb
out
add
shrb
jbe
das
cwtl
pop
adc
ljmp
pop
or
jb
movsb
enter
lea
cmp
movsb
jle
mov
add
jne
jmp
ds
scas
or
stos
xlat
adcl
xlat
xor
bound
or
jle
shr
mov
mov
mov
imul
fwait
cmp
jmp
repnz
sub
mov
into
add
and
cmc
mov
loope
adc
aad
add
and
lods
jmp
cmp
jne
mov
dec
dec
xchg
cli
loope
add
dec
aas
cmp
mov
or
xchg
mov
lret
xor
fimull
test
pop
jb
and
scas
repz
cmp
ss
cli
or
ljmp
mov
or
js
mov
shrl
sbb
add
cmp
insb
insb
or
scas
int
leave
and
je
jecxz
mov
sahf
out
nop
daa
lods
mov
insb
arpl
out
insl
lahf
stos
sahf
dec
dec
pop
mov
outsb
sbb
push
inc
in
loope
int
test
arpl
mov
jl
lahf
jg
jecxz
int3
push
cltd
xor
inc
mov
stc
sbbb
cmp
in
jbe
rcr
and
sbb
test
push
pop
mov
or
fsts
sub
add
xor
cmpsl
ds
adc
mov
pop
cmp
push
mov
mov
aad
lods
sub
jg
xchg
lcall
mov
xchg
or
xchg
pop
stc
dec
inc
lahf
push
xor
fstpt
pop
and
and
insl
ret
xchg
add
outsb
inc
lods
jp
out
icebp
dec
shrl
xor
popa
xor
sub
jge
dec
out
jl
mov
in
js
jo
mov
fdivs
jnp
and
inc
or
jae
push
aas
sub
inc
fidivl
xor
addr16
das
push
jmp
dec
ffreep
hlt
jle
fsub
add
outsl
mov
pop
adc
out
pop
and
xchg
jle
or
loopne
inc
adc
push
inc
push
aaa
mov
push
adc
fldl2t
outsb
js
ret
cs
push
and
sub
adc
sub
and
insb
fnstenv
jo
arpl
hlt
mov
mov
pop
scas
std
sti
inc
out
stos
movsb
pop
rol
out
or
mov
mov
xchg
aam
add
cs
cmp
icebp
xchg
arpl
sub
mov
dec
stc
call
call
mov
add
shll
and
pop
mov
lcall
loope
bound
xchg
push
nop
pushf
jg
push
cmp
std
jbe
insb
js
and
ret
push
inc
sbb
data16
out
divl
sub
pop
movsb
jns
jmp
int3
mov
jle
inc
mov
jecxz
jbe
xor
inc
push
aam
adc
daa
lcall
stc
sub
mov
push
enter
stc
pop
aad
into
or
movsl
cmp
cwtl
mov
and
out
test
movsb
aas
mov
mov
sbb
ss
cmpsb
out
js
ret
pop
cmc
fcmove
sbb
jne
sub
fwait
scas
icebp
int
and
adc
push
and
addr16
add
pop
pop
es
insb
imul
add
test
fs
and
decl
mov
outsl
push
insb
jbe
sbb
mov
xchg
jo
xchg
ds
sbb
pop
nop
xlat
and
lcall
jecxz
enter
test
pop
mov
adc
loopne
mov
pop
andl
xor
rorb
addr16
dec
jns
push
mov
dec
out
xchg
loop
es
xchg
or
cmovle
cmpsb
mov
xchg
dec
cmp
in
aad
xchg
fmuls
fwait
jne
jmp
in
cmp
lcall
xor
lret
sub
xchg
xchg
out
lods
pusha
enter
shll
ret
lret
jg
mov
pushf
in
push
push
lahf
out
sti
and
aad
sub
pop
push
imul
repnz
xchg
sub
pop
mov
scas
popf
es
ja
cmp
mov
mov
push
add
in
inc
jnp
loope
cmpl
xchg
sub
pop
add
lahf
sub
xchg
sub
xchg
shll
jno
add
xor
lds
scas
idivb
fs
push
inc
xchg
daa
data16
in
push
mov
int3
xor
addb
jne
mov
xchg
movsb
lock
pop
jge
clc
scas
js
icebp
lods
lret
xor
push
out
test
mov
movsb
in
stos
mov
testl
jnp
jnp
leave
mov
dec
pop
push
xchg
xor
and
jo
ss
jne
sub
mov
mov
cmpsb
fsubrl
pop
push
movsb
rclb
and
ss
out
jle
nop
jg
xor
out
mov
push
or
push
mov
into
pop
clc
dec
in
push
lcall
outsl
dec
fsts
sub
inc
and
sbb
out
fidivl
adc
xorb
xor
lds
mov
mov
sbb
shrl
clc
xorb
jecxz
mov
cltd
mov
insl
cmp
ja
jo
mov
sarl
jo
mov
ds
insb
dec
popa
xchg
jb
xor
loopne
gs
and
ss
pop
movsl
xchg
cmp
jmp
in
cld
repnz
idivb
adc
rorl
icebp
dec
shrl
mov
push
push
add
aam
roll
sub
arpl
jg
mov
shrb
int
cli
gs
pop
and
pop
orl
xor
and
pop
test
leave
shlb
xchg
js
scas
ficoml
add
xchg
movsb
gs
addr16
in
cmpl
xchg
je
lods
jo
pop
pop
jg
mov
adc
mov
xchg
or
in
mov
shrl
inc
pushf
test
push
aas
sbb
lcall
pop
and
push
pop
cmpsl
loop
ficomps
popf
push
mov
popf
xor
sti
icebp
mov
popf
ds
into
push
mov
mov
or
nop
stos
out
push
out
mov
jno
lret
bound
xchg
dec
dec
lds
cmp
adc
scas
icebp
divl
or
push
jb
push
pop
loopne
inc
jle
repnz
push
lds
inc
cmpsl
lcall
xchg
repz
into
xchg
cmpsb
mov
sub
jp
inc
xchg
mov
xchg
pop
rorb
mov
ret
push
jmp
cli
or
xchg
jno
dec
xor
jmp
and
fimull
dec
outsb
push
mov
xchg
mov
xchg
sbb
inc
test
sub
stos
xchg
je
pop
add
and
prefetch
pop
mov
sbb
jbe
add
ds
mov
pop
insl
adc
cwtl
cmpsb
jp
pop
mov
fldenv
sbb
mov
or
std
sub
cli
mov
push
mov
in
jmp
mov
lods
cmpsb
ds
pop
test
push
cmpsb
cmc
or
adc
insb
sbb
push
insb
cmpsl
cli
xor
xor
xor
cld
dec
mov
jbe
scas
push
test
sbb
dec
xor
xor
subl
repz
cmp
mov
cvtps2pd
inc
movsl
mov
adc
std
cli
push
faddl
lock
xor
push
sbb
xor
add
pop
jecxz
and
dec
dec
test
and
repz
lock
add
jne
and
mov
scas
jle
xchg
out
mov
ret
jno
jns
or
aaa
mov
add
aam
and
sbb
lds
mov
leave
test
scas
sbb
push
xor
jle
imul
mov
negl
push
inc
jmp
cmpsl
xchg
jp
jmp
push
sub
mov
negl
xchg
jmp
push
lret
shll
push
mov
mov
and
aaa
cli
inc
mov
cmp
leave
jge
insl
test
xor
inc
push
jg
clc
call
sahf
xor
xchg
inc
mov
outsb
subl
das
fisubl
data16
mov
or
jns
adc
add
adc
insl
enter
adc
mov
cmp
adc
xor
loopne
mov
into
mov
pop
mov
pusha
jo
stos
jg
ja
sar
or
incb
mov
or
jge
jnp
cmp
mov
in
cmp
pop
add
xor
imul
notl
mov
sub
cld
inc
push
in
pop
icebp
mov
push
cmp
ljmp
in
stc
cmp
icebp
imul
icebp
popa
pop
cmp
arpl
aad
add
and
popa
js,pn
dec
lea
hlt
adc
jl
push
loope
hlt
lock
add
cmpsb
push
add
and
pop
and
pop
mov
inc
int
sarl
mov
ret
sahf
lret
jnp
out
loopne
jmp
movsl
mov
dec
imulb
loop
cmp
sub
and
or
and
xor
add
and
jmp
xor
jnp
icebp
in
cmp
shll
xorl
dec
arpl
jp
orl
testb
push
xchg
add
jp
xchg
dec
test
mov
sbb
out
cltd
loop
arpl
rcll
adc
fidivs
test
mov
jp
mov
sbb
cmp
mov
mov
or
mov
or
adc
mov
cmp
push
mov
arpl
push
fimull
mov
leave
mov
dec
out
lds
stos
xor
je
mov
dec
xchg
cmp
rol
mov
xor
mov
add
scas
test
cmp
xor
sub
mov
dec
inc
mov
aam
xchg
push
mov
add
testb
push
imul
jg
dec
popf
decb
in
jecxz
ds
fwait
push
out
lds
leave
movsl
cli
ljmp
dec
pop
pop
outsb
jbe
push
outsl
add
pop
mov
push
add
pop
repz
cmc
pop
leave
lahf
ret
fwait
cmpsl
lahf
dec
and
add
mov
in
fiadds
push
mov
pop
icebp
jl
es
insb
cmp
adc
lea
push
aam
mov
movsb
sbb
push
jmp
test
dec
shrl
cmp
mov
or
mov
mov
add
jne
cmp
ss
in
push
jl
push
sub
mov
push
add
test
ljmp
popa
shl
clc
cltd
sahf
pop
xor
cmp
movsb
pop
movsl
ja
xchg
fs
data16
mov
popf
les
shll
mov
jb
mov
int3
push
mov
dec
outsl
movsb
cld
shlb
dec
mov
in
lahf
sbb
imul
and
sbb
addl
push
mov
add
push
xor
xchg
fucomip
mov
out
pop
fdivs
lahf
xor
push
clc
inc
aad
scas
and
jg
or
xchg
addr16
nop
or
in
lret
loope
mov
or
add
pop
popf
or
shll
pop
pusha
push
add
fstps
nopl
shrl
mov
dec
mov
jne
mov
aaa
pop
lahf
cwtl
repnz
adc
das
ljmp
stos
aad
fs
out
imul
imul
pop
cltd
cmpsl
push
jno
or
dec
js
inc
insl
xchg
in
repnz
jne
inc
es
aas
fistpll
mov
xchg
rolb
ret
inc
mov
test
mov
ds
mov
jae
in
mov
mov
rclb
mov
and
loope
pop
ljmp
cmpsb
clc
push
inc
xor
lret
pushf
pop
sbb
lea
sub
cmpsl
mov
jmp
fchs
sbb
dec
mov
cwtl
das
in
push
repnz
ret
and
cmpsb
insl
jge
cwtl
inc
decb
pop
roll
dec
adc
inc
fistpl
dec
data16
test
and
les
mov
adc
movsb
in
ret
pop
lahf
int
dec
mov
ljmp
cwtl
xchg
mov
xlat
fucom
dec
sbb
cmp
pop
subl
orb
in
sbb
xchg
jl
insl
stos
inc
fnsave
fbstp
fcmovnu
sub
fiadds
add
das
cmp
pop
or
push
test
lds
sbb
imul
fisubrl
hlt
push
shlb
sbb
movb
dec
int3
sbb
cmp
loop
sarl
rolb
xchg
mov
loope
popl
and
shrb
jmp
cltd
sub
sahf
mov
push
outsb
addr16
and
leave
iret
jb
jmp
pop
ja
xchg
in
mov
xor
pop
cmpsb
push
addr16
fnstenv
stos
lea
nopl
push
xchg
shll
push
mov
enter
out
andb
imul
int
mov
mov
lds
adc
mov
into
in
inc
jae
add
jno
hlt
gs
rorb
jle
pop
mov
out
ss
xlat
cmpsb
adc
fdivr
out
sub
lock
mov
lds
sub
mov
es
in
aad
add
sbb
inc
shll
in
leave
adc
imul
mov
rorl
pop
je
xchg
and
aas
adc
imul
mov
sbb
sub
jecxz
daa
outsl
dec
inc
mov
test
adc
inc
popa
and
push
sbb
cmpsb
cwtl
les
icebp
add
fsubs
mov
jns
and
out
adc
and
fildl
in
mov
jecxz
rclb
fiadds
push
in
pop
jne
mov
scas
inc
and
out
popa
mov
int3
xor
push
in
sbb
mov
iret
or
mov
pop
dec
test
sahf
jg
test
ret
mov
arpl
jg
shrl
cmp
mov
fistps
ss
jbe
mov
ficoms
mov
scas
fldt
cmp
lock
bound
pop
mov
adc
pop
fs
jno
popa
mov
or
sub
push
and
inc
cwtl
jne
cmc
jns
add
cmp
mov
pop
hlt
add
data16
sub
inc
add
mov
adc
inc
call
or
or
sub
push
nop
add
mov
mov
scas
outsl
add
push
mov
ljmp
outsl
test
enter
sub
push
ret
sub
sbb
pop
es
cmp
mov
aad
testb
xchg
jecxz
sbb
xchg
inc
in
mov
mov
jno
icebp
das
cltd
popaw
mov
and
rcrb
lret
sub
mov
xor
popa
dec
lahf
out
lock
push
cli
jns
lret
call
cmp
xchg
sar
pop
into
push
jmp
ret
rol
cmp
sti
xor
icebp
and
cmp
cmc
cwtl
mov
mov
shrb
fst
jbe
jge
sub
cmp
mov
xor
cmp
inc
ret
insb
push
lea
cli
sti
lret
push
insl
mov
fcomi
int3
fisubrs
das
mov
daa
or
adc
jno
mov
fldenv
xchg
and
das
inc
cmp
xor
and
std
into
jb
loope
push
roll
shll
pop
lock
add
sbb
aam
jo
mov
leave
pop
stos
out
ret
pop
adc
js
and
push
mov
repz
mov
pop
insl
into
dec
adc
mov
xor
dec
es
aad
mov
stc
mov
push
inc
cmp
mov
outsl
sub
mov
mov
mov
aaa
nop
mov
mov
les
inc
jle
mov
lea
repz
jns
dec
or
lcall
imul
xchg
lods
enter
push
outsb
testb
scas
dec
cmp
or
mov
xchg
dec
push
enter
xor
inc
xchg
das
pop
mov
sbb
std
jbe
add
inc
js
movsl
shlb
pop
push
push
cmpsb
jp
test
push
incl
scas
jb
mov
lret
aam
jnp
sbbb
loop
inc
cmp
pop
scas
jge
insb
mov
xchg
sub
push
dec
mov
sbbl
sub
stos
pop
imul
leave
dec
jns
out
jbe
xor
jmp
shll
imul
dec
pop
dec
inc
adc
in
cmp
xorb
je
push
adc
xchg
ret
sti
sbb
scas
in
sbb
push
shrl
push
adc
iret
mov
into
enter
push
mov
mov
xor
jbe
and
jbe
dec
xor
inc
pop
adc
jns
inc
or
lahf
push
clc
pop
xor
lret
out
jg
adc
mov
sub
cmpsb
mov
inc
roll
inc
dec
inc
cwtl
loop
rclb
stos
sbb
mov
jbe
notb
flds
push
jne
dec
out
notb
popa
mov
cmc
mov
into
pop
push
js
or
xchg
popw
xlat
popa
call
or
xchg
cs
push
xchg
scas
int
jns
mov
xor
movsl
push
std
jmp
test
scas
mov
and
sbb
add
sbb
adc
jnp
shl
popa
jb
push
or
cmp
mov
dec
out
loope
push
push
xor
test
adcl
xchg
add
jne
xchg
mov
add
out
lret
sbb
xchg
lcall
xchg
ljmp
pop
mov
xchg
lcall
or
inc
fistl
clc
adc
icebp
bound
fisubs
int
jmp
dec
inc
inc
xor
icebp
ret
pop
mov
push
xchg
add
dec
decb
lock
lret
jmp
in
lahf
push
mov
cmp
imul
in
sub
aaa
fidivrl
or
outsl
add
push
or
jecxz
lahf
dec
in
lds
ss
inc
daa
lock
and
sub
mov
cltd
test
xor
imull
cld
ja
or
push
add
aas
adc
pop
and
dec
movsb
seto
mov
outsb
fs
ret
cmpsl
dec
mov
and
cli
pushf
jg
sbb
dec
push
jl
mov
bound
cli
xchg
cvtdq2ps
sbb
or
orb
xor
push
push
out
rcr
out
jmp
mov
sub
pushf
mov
ret
inc
sub
icebp
lcall
es
popf
es
mov
andl
loope
mov
jne
in
and
cmp
negb
push
or
xor
xlat
addr16
or
lcall
and
leave
sarb
lea
mov
mov
add
imul
mov
and
mov
clc
push
outsl
and
sbb
das
mov
pop
repnz
fwait
dec
cmp
lock
or
sbb
and
movntps
and
mov
fldl
and
cmp
pop
ljmp
lds
xchg
add
pop
or
test
es
mov
cli
xchg
imul
out
int
fildl
es
test
outsb
rep
inc
scas
xor
sub
stc
mov
jmp
outsl
inc
inc
ja
aaa
in
mov
add
fiaddl
add
leave
xchg
mov
jo
or
cmp
fnop
mov
aaa
xor
movsl
ds
xchg
outsl
mov
cmc
adc
or
mov
test
mov
mov
pop
cmpsb
push
mov
movsb
in
ss
jl
jno
cmpb
pop
fcoms
gs
jmp
pushf
mov
mov
push
aam
xchg
adc
jg
repz
call
jae
fisttpll
mov
test
stos
add
loop
pop
dec
push
sti
jnp
pushf
sub
and
mov
jne
out
repz
aas
inc
sbb
rcrl
ret
push
dec
arpl
xor
cmp
jnp
push
sub
lcall
in
mov
into
das
pusha
pop
movsb
dec
xchg
xchg
push
adc
outsl
jae
test
jb
pop
push
and
pusha
arpl
stos
inc
testb
mov
and
in
movsl
dec
push
aad
out
mov
repz
out
insl
rclb
adc
cwtl
movsb
aas
mov
inc
fndisi(8087
popa
fwait
je
bnd
ss
and
sub
mov
dec
in
shl
sarl
call
xchg
sub
aas
scas
stos
or
add
push
sub
fiadds
mov
popa
frstor
xchg
jmp
sub
leave
sub
std
cmpsb
stos
sbb
lods
dec
xor
jne
pop
jp
and
fwait
jecxz
inc
cmc
xchg
push
aas
lock
lock
loope
add
dec
cmpsl
dec
test
add
imul
mov
bound
jae
ret
enter
cli
test
aas
cmp
repz
dec
mov
pop
es
pushf
push
leave
xchg
ljmp
movsl
cmp
popa
and
ja
jmp
call
arpl
push
xor
and
test
pop
fsubs
push
xor
or
sub
xchg
pop
mov
inc
rcl
add
push
pop
add
gs
lcall
icebp
jo
addr16
cmpsl
sbb
mov
fcmovbe
mov
add
jae
jp
test
cmpb
out
lret
cmpsl
lock
xor
cmc
push
add
inc
repz
push
in
pop
shlb
mov
dec
popf
inc
sti
add
pop
or
mov
call
inc
xchg
add
adc
xlat
sarb
dec
sub
cmc
lods
cmp
add
jnp
adc
movsb
inc
xor
push
jmp
fsub
jo
and
push
fucomip
aaa
fidivl
daa
xor
ss
adc
xor
aad
loop
jnp
daa
test
lahf
mov
jbe
mov
movsl
mov
xchg
fisttps
xchg
in
popf
pop
xchg
decl
mov
push
mov
pop
mov
push
sub
test
mov
cli
add
push
inc
xchg
outsb
xchg
stos
data16
cmc
or
stos
nop
daa
aam
ds
repnz
push
les
xor
jmp
imul
sub
roll
mov
jnp
jge
inc
mov
sbb
jbe
stos
arpl
inc
loopne
mov
jb
hlt
mov
push
cwtl
in
arpl
inc
into
pusha
test
call
stos
pop
inc
test
adc
scas
inc
sbb
ret
jns
cld
nop
pop
mov
xlat
mov
or
mov
xchg
xor
lods
mov
test
push
jae
pop
lods
pop
xchg
xchg
notl
sub
or
outsl
dec
xchg
sub
int3
and
push
scas
push
repz
adc
dec
jmp
mov
pop
and
jne
mov
add
fistl
decl
lods
scas
inc
sbb
insb
ds
add
sbb
or
mov
cmp
jecxz
rclb
xchg
add
push
test
cmp
pop
mov
cltd
lcall
sub
aaa
out
cli
push
mov
mov
outsl
gs
lahf
sti
jo
xchg
sbb
jnp
out
add
dec
lock
cmp
in
scas
ret
decl
cmc
shlb
mov
rol
add
xchg
push
jne,pt
fbld
inc
xchg
cmp
cmp
sub
push
movsb
ljmp
aaa
fsubl
mov
cmp
lahf
dec
mov
sub
insb
mov
out
mov
cmp
or
inc
xchg
mov
and
test
mov
lds
pop
add
pop
cmp
mov
fcoms
mov
aad
lret
sbb
pop
nop
pushf
pop
push
movsb
repnz
cmp
sub
push
lods
mov
dec
xor
jl
jp
fwait
xor
imul
pop
cli
pop
add
or
std
sarl
adc
dec
dec
dec
jmp
dec
push
xor
inc
mov
insl
cmc
add
popa
pushl
clc
loop
pushf
dec
sub
mov
sub
inc
cmpsb
adc
orl
outsl
add
mov
dec
lods
dec
loope
sarb
add
pop
mov
jg
mov
stc
pop
xor
xor
dec
jmp
mov
lahf
gs
inc
and
jnp
inc
in
loopne
js
xlat
mov
popl
popa
pop
lahf
gs
xor
ja
in
mov
shll
jnp
adc
mov
xchg
mov
notl
xchg
and
mov
outsb
shrb
popa
mov
das
les
sub
add
mov
aas
popa
push
aam
push
lods
cld
dec
xor
push
mov
je
cmp
jae
rcl
pop
ret
jg
cmc
jnp
arpl
sbb
orb
cld
xor
loop
movsb
aaa
aas
mov
or
addl
jne
push
in
mov
or
cmp
loopne
mov
mov
cld
in
inc
sbb
inc
lret
push
insw
mov
test
or
jmp
inc
repnz
pop
jo
xchg
xchg
int
sbb
lds
imul
popf
jle
cmpsl
jmp
cmp
mov
xchg
add
pop
insl
sahf
repnz
in
repnz
and
fdiv
mov
xsha256
cmpsb
push
sbb
mov
push
inc
shlb
sahf
pop
ljmp
push
lods
int3
push
mov
push
and
adc
xchg
xchg
sub
test
ja
in
jl
mov
out
out
dec
lock
mov
inc
pushf
xchg
stc
into
enter
adc
outsb
cltd
shlb
mov
or
lds
add
xchg
mov
arpl
and
sti
loopne
ss
dec
sub
ret
movsl
sub
push
inc
cmpsb
loop
pop
pushf
jp
push
pop
scas
add
out
mov
pusha
xor
jmp
or
cmp
push
int3
fistpll
loopne
je
inc
pop
dec
jbe
add
sbb
mov
add
jbe
mov
dec
mov
add
in
adc
sbb
aam
shlb
inc
xlat
jo
add
lcall
mov
push
lcall
gs
cmpsl
enter
mov
insb
cmpl
add
movsb
repz
dec
cmpsl
testl
popl
pop
rol
popa
inc
jg
xor
popf
sbb
sub
or
xor
rolb
stos
mov
jno
push
and
jnp
jno
insl
jge
out
mov
les
mov
mov
cmp
pop
xchg
mov
stos
insb
cli
fwait
sub
and
jl
int
jmp
inc
cmpsl
push
lock
cmovbe
rcl
jae
stos
jmp
lret
pop
or
push
decb
or
mov
das
jp
insl
jle
dec
jmp
test
push
and
dec
adcl
fstl
mov
adc
lods
imulb
inc
fdiv
sbb
stc
loop
outsl
enter
jo
pop
cli
push
sub
aas
repnz
in
jbe
push
cwtl
lds
nop
xchg
mov
movsb
repnz
out
cmc
inc
xor
sub
mov
daa
mov
pop
shr
mov
rcl
push
mov
and
cmpsb
sbbl
in
mov
notl
pushf
cmp
mov
loope
mov
add
pop
movsl
inc
rcr
call
sub
pop
push
je
xlat
jmp
mov
test
loopne
lcall
test
std
jecxz
dec
add
sahf
mov
shlb
test
dec
rorb
mov
leave
int
insb
cmp
scas
xchg
pop
hlt
stos
cwtl
adc
mov
sub
cld
inc
mov
call
xchg
and
mov
mov
clc
sbb
or
sbb
dec
dec
cmp
in
fmull
sub
adc
xor
and
or
inc
pop
push
jl
das
stos
inc
pop
test
jne
pop
push
decb
xor
dec
loope
xchg
stc
adc
in
lods
adc
pop
cmp
inc
push
jne
lock
and
push
push
addl
fwait
mov
sub
mov
sbb
sahf
add
mov
mov
sub
ljmp
inc
fisubrl
mov
icebp
enter
das
push
out
movsb
mov
mov
or
mov
fsubr
mov
push
add
mov
mov
das
cmp
xchg
mov
popf
cmc
adc
pop
je
push
jmp
test
fwait
mov
inc
fidivrl
es
mov
mov
inc
jl
call
loop
ds
ret
mov
ffree
fucomi
repz
sub
pop
push
lods
mov
aad
xchg
sub
ret
or
sbb
push
mov
mov
mov
mov
and
js
fs
nop
lods
xor
pop
jno
jl
jmp
jge
test
jae
xchg
call
inc
jae
lret
xchg
movsl
mov
aaa
cld
mov
sbb
or
sbb
jbe
ret
mov
sbb
ja
fwait
sti
and
jne
push
push
loopne
leave
icebp
cmpl
popl
fisttps
js
test
cltd
out
jns
std
xchg
repnz
aam
push
cwtl
and
mov
push
jb
sbb
cmp
repnz
adc
push
inc
sub
lock
xchg
cld
mov
add
add
movzbl
cltd
je
mov
inc
in
mov
xchg
adc
mov
mov
and
aaa
mov
idivb
adc
loop
cmp
rcll
sbb
mov
or
xchg
xor
mov
mov
fldt
adc
mov
cltd
adc
mov
adc
into
or
js
xor
out
or
push
pop
and
push
lcall
dec
mov
int
adc
pop
cmpsl
jge
das
mov
sub
cmc
mov
pop
lret
xor
sub
sti
dec
mov
or
scas
pop
push
adc
xor
xor
jns
fs
mov
cmp
sbb
sbb
mov
daa
shlb
xchg
pop
add
out
test
incb
or
fists
fsubrl
movsl
sbb
push
mov
sahf
sub
xchg
jno
sub
push
rcr
hlt
jno
adc
fwait
lock
fdivl
outsl
lds
dec
inc
mov
inc
cmp
ret
pop
das
in
mov
pop
sbb
adc
out
inc
cmp
mov
jno
pop
pop
push
insb
sub
mov
fs
mov
jo
jge
jp
movsb
sahf
lods
mov
mov
pop
jmp
into
arpl
lcall
inc
rcrl
inc
push
insb
sub
xchg
pop
ret
pop
ficoms
push
cmp
mov
cmp
and
fwait
mov
jne
mov
dec
sub
test
cltd
cmpsb
pop
testb
mov
xor
sbb
mov
int
sub
test
lret
mov
or
jnp
inc
std
fs
out
test
repnz
lcall
addr16
xchg
in
xlat
jmp
mov
sub
nop
push
cs
loopne
dec
sbb
bound
xor
dec
inc
and
out
ds
out
scas
sbb
lahf
cmp
cmp
xchg
in
mov
ja
fnstenv
dec
jns
jg
aad
xor
add
test
stos
mov
mov
out
ja
aam
mov
fcom
pop
imul
shll
add
mov
addr16
setns
rcl
pushf
lea
ret
mov
icebp
lds
push
int3
push
jmp
mov
lock
or
inc
addr16
xor
aaa
mov
cmp
jl
or
into
and
inc
sub
out
sbb
dec
adc
xor
fsts
mov
xor
popa
pop
pop
jg
rorb
sarb
add
cmp
or
scas
xchg
dec
add
fsts
push
pop
sbbb
cmpsb
jmp
mov
cli
mov
adc
mov
pushf
out
shlb
push
xchg
jbe
repz
mov
cmp
mull
test
lods
sbb
xor
and
inc
stos
push
int
inc
lret
imul
pop
rcrl
mov
adc
jns
add
xor
icebp
push
enter
sbb
movsl
pop
arpl
pop
repnz
fldt
stos
mov
xorl
xor
jno
pop
out
cld
xor
and
and
sub
ja
sbb
xchg
lahf
ja
xchg
push
loope
and
inc
cmpsb
lea
dec
lcall
jecxz
outsb
adc
inc
ret
and
add
sbb
insl
int3
adc
sub
cs
aam
insl
inc
es
jmp
dec
shll
push
jmp
cmp
rclb
fbstp
out
insb
jae
xchg
sub
push
mov
sbb
and
cmpsl
mov
mul
enter
inc
mov
mov
aaa
into
xchg
cmpsb
daa
out
mov
test
pop
push
movsl
dec
dec
je
aaa
out
pop
sub
orl
dec
in
lcall
pop
fcomi
mov
call
fcmovb
in
and
sub
cmpl
inc
mov
in
inc
dec
sub
fwait
xlat
cld
and
mov
mov
lret
and
adc
or
add
enter
lret
xor
hlt
notl
dec
dec
mov
jl
jns
in
push
inc
or
xor
cmpsl
lds
out
std
mov
adc
nop
or
sbb
addr16
imul
test
mov
and
lock
pop
es
rcll
out
pop
outsl
mov
dec
mov
out
sub
lahf
mov
rclb
mov
shrb
repz
popa
pop
test
scas
aam
push
mov
je
xor
adc
lret
test
cltd
jne
fs
mov
dec
and
jl
lock
nop
jo
jg
je
fistl
sbb
jb
clc
mov
inc
xchg
test
inc
mov
mov
clc
cs
inc
xor
scas
push
scas
mov
es
mov
or
adc
add
pop
in
push
sub
cmp
cld
push
cmpsl
into
cmc
mov
cmpb
cmpsb
add
xchg
cmpsl
sub
dec
jns
outsl
enter
push
insb
pop
adc
aaa
iret
xor
nop
add
andb
nop
jno
xchg
sub
or
mov
cmp
pop
pushl
mov
jae
loop
cmp
dec
sub
enter
mov
push
fs
adc
dec
jle
push
pop
mov
pop
ficomps
sti
fdivl
es
mov
aad
add
and
add
sub
ss
pop
std
sub
aas
fnstcw
mov
nop
loopne
js
cmp
pop
jle
in
or
inc
andb
mov
pushf
scas
dec
popf
sbb
xchg
jmp
int3
push
inc
mov
icebp
lahf
pop
repnz
pop
pop
cmp
sbb
add
mov
call
dec
scas
sbb
js
push
lret
popa
insl
sbbb
add
xchg
cmp
push
sub
mov
pusha
cmp
cmp
in
dec
out
dec
pop
ljmp
add
dec
aas
in
call
loopne
or
fwait
lock
aaa
adc
jg
fcmovnb
xor
mov
push
out
insb
dec
and
ss
data16
jo
fs
xchg
int3
divl
repz
sbb
int
pusha
lret
dec
cld
push
fwait
dec
push
push
jne
mov
push
pop
mov
xor
data16
in
loop
mov
mov
repz
clc
outsb
mov
sbb
xor
cmp
sbb
push
jne
xor
xchg
lahf
or
stc
xchg
cmpsb
sbb
xchg
es
sbb
stos
adc
cmp
xor
pop
adc
mov
adc
jl
scas
mov
stos
fisubs
jge
or
bound
sbb
mov
cmpsb
leave
scas
cmp
pop
push
or
mov
mov
sub
ret
nop
cltd
das
add
mov
xor
dec
lcall
scas
mov
cmp
int3
pushf
or
sbb
sbb
loopne
mov
cs
push
pop
add
repz
and
push
xor
call
xchg
out
sahf
daa
pop
stc
test
mov
cmp
jmp
mov
movsl
xchg
fldenv
pushf
add
das
xorb
adc
inc
stos
sbb
icebp
test
aas
mov
shll
pop
cmp
icebp
out
push
fdiv
pop
pop
jo
xor
jo
cmp
jne
push
daa
or
jle
js
movsb
adcl
sbb
outsl
scas
pop
mov
or
mov
addb
rcr
add
mov
jmp
mov
lods
mov
ljmp
add
mov
jecxz
fmull
shr
mov
cmpsl
mov
aas
mov
xor
push
xchg
test
rorl
leave
pop
scas
mov
jae
jnp
xor
js
push
stos
sbb
and
cmpsb
test
and
ret
xor
dec
fxch
js
pop
lret
pushf
jp
cmpsb
sahf
movsl
xchg
jp
ret
movsl
hlt
shll
xchg
nop
xlat
xchg
ja
lcall
mov
and
clc
rcrl
fstpt
insl
std
pop
mov
das
cmp
mov
dec
cmp
fdivrl
cwtl
ja
int3
shlb
sarb
mov
test
call
out
es
pop
cmp
or
lret
in
aad
jmp
push
sti
stos
leave
movsl
xor
and
xorb
imul
gs
aas
out
stc
outsl
push
out
sahf
inc
insb
cmp
loopne
shl
sub
push
lods
cmc
inc
lds
loop
add
pop
inc
gs
out
std
mov
setae
sub
test
mov
fisubs
push
jecxz
and
xor
movsl
sbb
sub
bound
xchg
fcmove
das
shrb
sbb
iret
out
pop
sbb
mov
scas
rolb
imul
clc
adc
jg
cmc
sub
jl
clc
fisubl
dec
push
pop
hlt
jb
stos
jp
sarl
popl
movb
cmpsb
imul
lods
mov
mov
outsb
add
mul
addr16
cli
and
push
mov
push
gs
mov
cmpsl
pushf
dec
add
mov
jo
mul
adc
aad
sbb
inc
cmpsb
outsb
mov
xor
icebp
mov
pop
outsb
gs
iret
jecxz
bound
dec
dec
push
outsb
mov
repz
clc
or
lock
test
js
dec
push
movsb
ret
mov
lods
inc
leave
int
sbb
add
sbbb
fimuls
arpl
push
fisttps
pop
push
fstpt
jo
mov
lret
sub
out
ljmp
inc
mov
in
mov
pop
fcmovnb
xchg
lods
push
cmp
and
xlat
xchg
add
mov
xchg
test
jmp
mov
lcall
movaps
inc
cmp
or
sbb
push
lret
out
xchg
pop
xor
mov
cltd
and
mov
xchg
xchg
sarl
xlat
cltd
iret
xchg
out
scas
bnd
movsl
dec
xorb
pop
aas
push
inc
out
cmp
jno
pop
add
adc
pop
fldl
mov
repz
lahf
adc
sub
sbb
cmc
jnp
faddl
cmp
jge
std
out
xor
push
stc
bound
sbb
push
inc
push
shrl
into
dec
stc
push
inc
mov
int
jecxz
push
inc
push
lods
mov
dec
xor
xchg
sub
add
cmpsb
in
push
dec
dec
and
popf
arpl
mov
test
paddsb
clc
adc
pop
xchg
das
sahf
mov
push
and
sub
test
fsubrs
lahf
scas
insl
das
jo
jb
push
out
mov
mov
dec
cmpsl
mov
sar
xchg
mov
pop
push
sbb
xchg
iret
xchg
mov
out
out
loope
pop
dec
insl
sub
or
xchg
mov
sub
cmc
add
pop
cwtl
sbb
jl
mov
ja
xor
cmpsl
fistpll
and
add
lcall
pop
and
addr16
sbb
mov
mov
scas
add
xor
sarl
mov
xchg
repnz
mov
xchg
movsl
ds
add
push
mov
push
aaa
mov
in
stos
jae
jne
notb
stos
mov
xchg
das
jecxz
loopne
mov
ret
add
lret
out
cli
test
cmp
imul
scas
repz
mov
iret
pop
outsb
aam
in
pop
cmp
xchg
addb
stc
testb
int
xor
pop
mov
jnp
js
scas
mov
jge
sbb
hlt
jae
jmp
pop
cmpsl
adc
test
mov
enter
ret
mov
push
jmp
or
mov
or
ja
push
std
or
push
mov
iret
sbb
orl
xor
sub
pop
aad
scas
fstpl
mov
push
lods
hlt
sub
lea
out
inc
add
push
mov
or
in
popf
fcomps
ss
inc
aas
sub
inc
push
pop
std
ja
test
je
imulb
loop
pop
cmp
scas
mov
in
js
movsl
and
xchg
cmp
xor
test
sti
or
sub
lea
int3
sbb
call
add
les
dec
adc
cs
fwait
pop
and
add
sbb
sbb
adc
in
shll
shr
test
mov
dec
pop
mov
rorb
add
cmp
ds
enter
insb
add
and
leave
mov
shlb
pop
push
imul
js
das
dec
iret
fstpt
in
mov
mov
mov
loopne
popa
cmp
call
push
mov
pop
lock
aam
stc
mov
ja
int
insb
mov
fcomps
and
loopne
hlt
cmp
outsl
xlat
in
mov
popf
add
xchg
test
ds
daa
jl
sbb
negb
std
add
inc
xchg
xchg
test
das
mov
dec
call
cmp
outsl
add
pop
outsb
bound
mov
repnz
ret
rep
mov
jo
add
or
xlat
cmp
sub
jae
leave
sub
inc
out
mov
cs
popf
int3
jp,pt
fs
imul
mov
adc
mov
jg
jnp
pop
lahf
inc
mov
sub
rolb
cld
daa
xor
mov
inc
mov
pop
decl
inc
dec
xor
lock
jl
lret
fwait
pop
mov
fs
pop
call
mov
daa
inc
nop
xor
push
pop
mov
addr16
pushf
jo
jl,pt
int3
repnz
pop
xor
loopne
inc
in
lcall
fisttpl
shlb
jns
stos
mov
lcall
and
add
xor
movsl
std
xor
pusha
mov
subl
mov
xchg
test
fs
enter
gs
jmp
stc
sbb
dec
sbb
fcompl
mov
fbstp
stc
fidivrs
lcall
bound
pop
inc
push
shlb
popa
sbb
add
push
add
rorb
jg
js
push
sub
sbb
jmp
mov
jp
sbb
leave
outsb
out
or
lahf
adc
test
and
stos
scas
cld
pop
loopne
adc
test
mov
in
sbb
cmpsl
arpl
into
mov
stos
fsubs
or
cmpl
fs
rorb
lds
push
pop
adc
aaa
shlb
mov
add
xor
cltd
test
insb
cltd
insb
add
lea
lcall
and
inc
pop
clc
inc
inc
dec
pop
cmp
cmp
pop
push
popf
xchg
scas
pop
sbb
fdivl
cli
sahf
pusha
mov
inc
testl
fsubrs
mov
dec
dec
add
loopne
sub
aas
mov
addr16
shll
cmp
mov
xor
mov
lret
inc
sub
xchg
adc
aam
mov
ja
mov
ss
pop
lock
push
imul
pop
out
popf
xchg
or
int
mov
cmp
mov
cli
jae
bswap
mov
je
imulb
repnz
inc
ret
gs
add
add
outsb
cltd
adc
pop
sub
xchg
add
lods
xchg
and
fwait
jae
pop
scas
jbe
clc
test
sbb
push
adc
xchg
mov
push
dec
pop
icebp
xchg
nop
mov
mull
ret
cmpsb
mov
not
les
call
out
xchg
push
stc
xchg
hlt
aam
pop
aaa
mov
add
in
cltd
and
sub
fdivs
push
or
cwtl
outsl
dec
xchg
dec
xor
xchg
mov
dec
movsl
mov
and
and
and
fcmovu
les
out
test
dec
aad
into
push
inc
mov
test
push
call
mov
aas
dec
out
shll
mov
mov
subl
pop
adc
cmp
icebp
pop
movsl
fs
mov
jp
sbb
add
fwait
jnp
clc
push
scas
mov
movsl
add
sub
addr16
sbb
or
or
movsb
sbb
stc
je
dec
lret
pop
mov
lcall
outsb
xchg
mov
add
lods
jp
fists
orb
cmp
jnp
movsb
fwait
ss
rorl
popa
and
mov
xchg
jecxz
inc
dec
test
and
mov
out
lds
in
cmp
into
xorl
sbbl
decl
dec
shll
jmp
mov
and
es
ljmp
pushf
addr16
adc
xchg
lea
mov
rcr
sarl
push
push
cmp
mov
mov
xlat
jnp
dec
and
icebp
xchg
daa
inc
cmc
repnz
enter
and
sti
mov
pop
pop
adc
jno
lods
shrb
xchg
push
mov
test
ja
int3
in
nop
xor
roll
hlt
out
dec
mov
jae
xor
sbb
enter
in
and
add
or
push
loop
jmp
or
fbstp
pop
cmp
bound
push
pusha
sub
ja
adc
cmc
je
push
cmpsb
pushfw
ret
cmpl
or
ret
cs
xchg
popa
mov
push
rep
push
fs
and
aaa
and
mov
add
and
call
loopne,pt
dec
add
cmc
iret
xor
xor
add
test
mov
insb
push
push
aad
movsb
cmp
incb
or
xor
inc
loop
loope
or
lods
pusha
push
repz
iret
push
in
popf
dec
repnz
cmc
xor
popf
push
stc
or
test
lret
push
fcoml
xchg
fdivp
scas
rep
xchg
pop
cli
or
sub
sbb
dec
popf
outsl
clc
mov
call
popf
sub
loopne
or
mov
adc
es
adc
movsl
pusha
jnp
repz
and
andl
push
jb
or
push
jae
in
push
pushf
xchg
pushf
lds
in
lret
sub
test
mov
pop
bound
xchg
std
test
in
or
dec
fldl
jge
shrb
lock
mov
xor
fwait
adc
inc
dec
loopne
push
cmp
lar
pop
xor
in
jecxz
out
into
adc
mov
test
fstps
adcb
sbb
inc
and
mov
rclb
mov
das
mov
lea
pop
or
adc
xor
or
stos
push
mov
pop
xor
adc
dec
jp
call
mov
out
sbb
stc
xor
out
push
xchg
add
dec
pop
sahf
jp
xchg
sbb
call
movsl
decb
mov
aaa
fldcw
mov
sbb
xor
stos
imul
pop
xchg
icebp
cmp
ret
mov
pop
frstor
push
ds
xchg
mov
pushf
lock
cmc
out
xor
jl
iret
movsb
and
jge
push
sub
mov
push
or
mov
lret
sub
pop
add
jecxz
jp
mov
cmpsb
mov
mov
jmp
sahf
lcall
adc
sahf
test
test
out
mov
and
jb
out
lods
fistl
cmpsl
out
ret
iret
pop
mov
add
sub
leave
jge
int
sub
insl
hlt
out
and
adc
mov
ds
iret
decw
jno
insb
push
push
mov
clc
sub
pop
mov
dec
ja
push
ret
cmc
fists
je
add
adc
mov
pop
stc
inc
call
addr16
inc
aas
aam
xchg
cmp
pop
repnz
add
add
in
dec
pop
icebp
push
add
into
xor
jge
mov
cltd
xor
lock
mov
push
mov
dec
cmp
sub
mov
cltd
mov
jge
mov
cmpsb
or
cs
sbb
mov
push
mov
cmp
ds
aas
push
xchg
mov
aad
mov
dec
mov
pop
xor
jbe
jo
stos
inc
scas
cmp
leave
in
sahf
jg
rcrb
and
jmp
mov
sti
or
jmp
and
rorb
mov
xor
push
repnz
ret
ret
cld
es
subl
lock
inc
loope
outsb
adc
test
dec
dec
xor
jle
jge
push
push
and
nop
call
or
add
ja
subb
push
ja
repnz
mov
xchg
aas
sarl
mov
loope
iret
pop
dec
aas
jnp
jno
fbstp
xchg
xchg
lods
push
in
std
xchg
push
jne
lret
out
mov
loop
push
stc
xchg
dec
xor
mov
or
inc
jno
cmp
scas
xchg
jns
sub
stos
loop
xchg
mov
add
sarl
loop
outsb
cmp
jecxz
cmp
xlat
or
js
fs
gs
dec
cmc
mov
push
mov
dec
mov
mov
ja
subl
xchg
inc
cmp
xchg
lret
push
test
jne
testl
imul
fwait
mov
sbbl
xchg
xor
push
sub
push
sub
jle
testl
and
pop
sbb
add
mov
xchg
xchg
mov
lock
aad
lds
and
enter
adc
inc
pop
mov
clc
subl
jmp
lret
fs
cld
lret
pop
pushf
stc
mov
jp
push
push
rorb
pop
jbe
dec
mov
iret
cmc
pmaddwd
or
xchg
mov
mov
scas
inc
paddq
jge
arpl
pop
jmp
adc
mov
test
loopne
pop
push
cmpsb
push
call
and
into
iret
gs
iret
fbstp
in
addl
jo
loopne
xor
sbb
ds
hlt
dec
cmc
popa
cmp
insb
cmp
js
or
movsl
lods
es
lods
inc
loopne
mov
add
mov
lods
xchg
xchg
fnstcw
add
nop
test
aam
sbbb
or
les
lods
inc
pop
pop
push
fnsave
ds
and
stos
adc
outsl
add
clc
push
or
daa
cmpsb
int
imul
xor
pop
or
out
inc
stos
and
fstpt
lock
lret
pushf
cmpsb
mov
mov
imul
add
into
gs
je
pop
sub
xchg
jg
ret
jl
stos
pop
sbb
movsl
inc
lcall
leave
xchg
ljmp
pop
cmpsb
mov
loop
pop
movsb
cmp
cmp
xchg
cmp
pop
imul
adc
adc
dec
cmpsl
test
mov
js
jp
cmpsl
insb
add
lret
in
or
cmp
inc
test
movsb
mov
aaa
int
imul
insb
test
or
pop
xchg
xor
clc
addr16
push
mov
sbb
mov
rcll
push
in
clc
cmp
andl
subb
push
xlat
in
pop
and
sbb
adc
mov
push
call
cmp
cmp
xor
imul
inc
aam
jne
js
xchg
stos
ret
clc
insl
jnp
sbb
dec
loope
es
lock
fisttps
ficompl
je
sarl
jbe
orl
fdivs
sti
sbb
mov
js
adc
ficoms
jecxz
pop
and
jns
stos
ret
shlb
or
push
mov
inc
test
cmp
out
push
fnstenv
icebp
dec
push
gs
and
mov
xchg
cmp
xchg
push
cmpsb
dec
adc
cmp
and
adc
cwtl
add
mov
clc
dec
notl
bnd
test
mov
mov
je
sub
aas
mov
pop
fucomp
dec
movsb
adcb
mov
lret
and
push
das
ljmp
jl
sbbb
mov
add
fucomip
pop
loope
popf
jb
add
push
cmp
sbb
xchg
stos
mov
and
outsb
sti
cmp
add
cltd
pop
aas
leave
add
cmp
gs
cs
scas
pop
pop
iret
dec
mov
mov
xchg
fmuls
stos
push
minps
cmp
decb
lahf
xor
pushf
popa
jbe
dec
mov
mov
push
and
ret
hlt
scas
test
cwtl
call
test
or
punpcklwd
stos
and
sti
push
fiaddl
adc
cmp
ljmp
lea
sbb
sub
and
sub
sarl
out
lock
add
insb
mov
ret
hlt
add
jp
push
xor
add
and
lock
and
bound
loop
popa
int3
dec
aad
dec
in
lods
push
xor
inc
leave
push
pushf
aam
ljmp
lret
outsl
sbb
stos
outsl
cmp
dec
dec
stos
push
cmp
sub
pop
lock
je
mov
jmp
aas
push
int3
xor
icebp
push
inc
out
push
jge
push
add
fistps
sub
das
add
xchg
mov
shlb
icebp
adc
std
cmpsb
dec
aaa
push
in
fcomps
nop
loope
and
push
clc
in
shll
addr16
movsb
mov
rcll
sbb
ds
inc
jno
cmc
insb
cmp
dec
pop
lcall
sti
cmp
adcl
lea
fxch
xor
out
test
mov
scas
in
mov
inc
rol
ljmp
aaa
xchg
mov
sahf
es
dec
and
add
mov
das
mov
popf
loope
fisttpll
mov
dec
mov
insl
pop
mov
insl
in
aaa
ret
lock
jno
adc
jns
out
sbb
incl
cmpsb
adc
and
lcall
push
dec
jno
xchg
jl,pn
xchg
pusha
cmp
pop
mov
mov
pop
sub
xchg
inc
mov
aaa
ror
int
orb
fchs
pop
movsb
adc
sarb
out
xchg
cmc
mov
sub
dec
mov
push
aaa
add
test
je
adc
adc
push
pop
cmp
loop
jecxz
jno
inc
pop
scas
inc
sbb
xchg
push
insb
les
ljmp
aas
add
jb
test
and
vpshufd
popf
jns
cmpsb
rorb
andb
sarl
popf
cmpb
adc
or
xor
data16
cs
dec
dec
mov
sub
hlt
jge
adcb
jnp
push
imulb
push
xlat
jno
int
hlt
pop
dec
cmpsl
outsl
int
mov
pop
mov
testb
popf
lods
sahf
xor
xor
sbb
jl
cmp
mov
paddusw
sub
xor
cmp
xor
call
cmp
or
pop
mov
mov
inc
or
cmp
shrl
dec
jecxz
int
test
adc
push
sbb
or
pop
mov
adc
sub
xchg
scas
push
dec
decl
jb
cmc
mov
push
and
scas
add
mov
sahf
repnz
push
aas
bound
dec
and
fsub
in
or
sahf
je
je
xor
pop
les
fildll
xchg
or
stos
mov
pop
fldenv
nop
aad
in
adc
nop
stos
inc
adc
idiv
sub
sub
sbb
adc
add
mov
fwait
int
fbstp
mov
adc
aas
fsub
addr16
aad
lret
dec
cld
xchg
jle
pop
out
movsl
xchg
sbb
mov
mov
aad
lret
ret
ja
rorb
dec
dec
mov
in
stc
xchg
cmp
mov
xlat
cmp
pop
out
fcoms
int
jg
xor
fucomi
jns
cli
jne
adc
in
jno
add
mov
jmp
hlt
or
mov
ret
push
xor
mov
adc
inc
lcall
aam
fwait
inc
scas
jbe
shll
dec
cld
lcall
sbbb
dec
jae
into
gs
xchg
rorl
popa
cmp
adc
xchg
aas
adc
clc
adc
lret
rol
mov
ja
leave
and
pop
lcall
dec
loop
push
sbb
push
cmp
cmp
mov
xor
pop
scas
add
sahf
in
mov
fldl
push
push
cld
into
mov
mov
adc
imul
in
mov
dec
into
inc
push
sahf
fwait
and
pop
xchg
cmp
ja
add
ljmp
dec
add
ja
dec
lahf
xorb
adc
pop
jne
rcrb
loop
lahf
ss
gs
test
inc
sahf
dec
push
es
scas
mov
mov
out
stos
xchg
dec
es
mov
jbe
dec
mov
xor
mov
lret
dec
sub
sahf
cmp
scas
clc
ljmp
fnstsw
or
mov
out
jno
lret
xor
or
in
ljmp
mov
dec
fdivrp
jo
push
das
dec
fdivl
xor
stc
mov
cmp
stc
nop
scas
pop
push
ror
in
das
push
sub
pop
cld
out
cmp
sub
sub
and
xor
jns
pop
pop
push
nop
inc
les
xchg
xor
sahf
and
mov
xchg
dec
imul
and
mov
cltd
icebp
sbb
dec
dec
jecxz
gs
push
xchg
test
push
pop
out
dec
mov
mov
push
out
push
mov
push
jmp
sbb
fsubrs
sbb
loopne
mov
mov
pop
ficoml
and
push
ss
mov
fbld
xor
mov
subb
sbb
xor
imul
sbb
lock
cmp
cwtl
jae
ret
sub
pushf
sbb
ljmp
mov
cld
mov
out
fcomip
lods
add
dec
lea
push
inc
jecxz
xor
fistps
mov
or
lds
bound
test
pop
push
pushf
mov
scas
addl
lods
or
fwait
cmpsl
or
aad
in
movsb
rorl
xor
mov
xor
mov
lds
pop
add
sub
sbb
dec
mov
pop
lcall
out
or
dec
stos
in
dec
add
sub
hlt
orb
or
das
mov
push
lock
push
and
cltd
xor
mov
sahf
and
adc
xorb
aas
sbb
pop
and
mov
outsl
jl
cmpsl
insl
sahf
dec
stos
repnz
mov
int3
outsb
push
sbb
pusha
xchg
cmpsl
cmp
shlb
nop
push
cmp
adc
subb
ds
cs
clc
cltd
add
xor
xchg
ficomps
jl
scas
push
and
push
add
aad
hlt
lcall
outsl
fwait
popf
pop
in
cmp
mov
jae
mov
push
stos
sub
push
add
push
data16
pop
test
in
inc
es
jmp
mov
sub
ljmp
jp
je
inc
xchg
xchg
dec
cmp
cmp
cmp
and
clc
test
scas
inc
add
ret
mov
into
das
xchg
push
cmp
out
jb
pop
data16
es
adc
sub
ds
les
xchg
dec
mov
pinsrw
or
outsb
out
add
adc
inc
stos
fiaddl
cs
std
or
repz
add
pop
test
push
fidivs
xchg
daa
lock
scas
push
xchg
pop
ret
xlat
rcrb
jb
test
sub
pop
lods
jge
out
popf
add
out
jmp
mov
loope
or
notl
xorl
adc
scas
jbe
mov
dec
inc
pusha
dec
inc
jmp
mov
pushf
pop
mov
inc
into
pop
jne
mov
hlt
loop
jo
and
xchg
mov
das
dec
mov
xor
aam
ja
pop
test
xchg
push
repnz
pop
js
mov
jbe
pop
xchg
dec
loop
mov
data16
push
mov
cmp
leave
and
push
add
rcll
aad
jp
lds
mov
cmpsl
icebp
xor
pop
add
mov
scas
add
mov
push
mov
notb
or
jp
mov
inc
cmp
and
ficompl
dec
sbb
inc
mov
mov
xlat
fimull
pushf
fs
js
outsl
aad
mov
jmp
addr16
cmpsb
or
adc
iret
aad
or
sbb
insw
scas
gs
ret
imul
xlat
push
push
pop
sub
shl
mov
or
int3
cmpsb
dec
in
lock
shrb
jge
push
cltd
adc
jnp
lahf
lahf
xlat
xor
add
cli
xor
mov
push
cmp
aas
into
cltd
pop
aaa
push
push
pop
sahf
push
sub
pop
fnstenv
ds
mov
mov
mov
xchg
mov
fistpll
dec
or
movsl
in
icebp
pop
ja
sub
and
insl
jg
outsb
cmp
nop
out
push
inc
hlt
mov
mov
leave
push
cltd
cli
daa
pop
cmp
rcrb
test
int
pop
int
lret
popf
insb
scas
sub
sbb
mov
iret
lock
jmp
jle
jmp
idivb
addr16
sarl
xchg
pop
adc
and
test
dec
cltd
push
adc
testl
lods
cmpsb
arpl
pop
jmp
test
mov
in
rorb
xchg
cmp
cmc
inc
xor
jmp
adc
popf
stos
pop
mov
nop
mov
lret
mov
push
imul
push
out
cmp
push
inc
xlat
aas
jge
cld
cmp
pop
inc
xchg
or
mov
fcoms
rcrl
nop
subl
push
call
cmp
mov
les
push
sbb
int
testb
outsl
adc
lods
outsb
ss
dec
push
dec
pop
cmp
and
or
xor
lret
cmpsl
mov
push
lcall
push
jbe
int3
sub
aad
stc
fs
mov
lcall
sbb
enter
ret
lods
stos
adcl
and
xor
clc
jbe
inc
pop
adc
xlat
mov
mov
sub
mov
mov
and
cltd
mov
xor
movsl
addr16
pop
negb
test
sti
adc
imul
pop
push
shll
adc
xchg
inc
fildll
insl
sub
pop
mov
out
mov
xor
outsl
jo
lea
pop
dec
sbb
jae
sub
aam
stc
mov
xchg
sbb
inc
jae
pop
xor
inc
mov
inc
add
push
xor
cltd
scas
loopne
lock
clc
cmc
jecxz
cmp
insb
jmp
mov
fs
inc
dec
lret
inc
aaa
mov
sbb
mov
cmp
mov
xor
jp
pop
sub
adc
hlt
aad
xor
mov
stc
imul
ficoml
cltd
orl
jle
fistpll
test
cmp
xchg
jecxz
pushf
mov
and
insl
add
subl
in
scas
push
data16
fsubr
clc
pop
xor
ret
inc
mov
sbb
decb
shlb
aas
ljmp
rolb
xor
loope
inc
adc
stos
push
mov
inc
push
sbb
push
sub
pop
ret
and
insb
ss
outsl
pop
pop
mov
adcl
test
shrb
ja
pop
repz
ja
mov
xor
cmp
shrb
push
sub
mov
imul
das
arpl
stos
jle
lock
pop
adc
and
dec
jp
mov
dec
sarb
push
cmpsb
jno
xchg
add
fdivrl
outsl
push
lds
mov
pop
push
jbe
ljmp
push
sub
dec
adc
mov
sti
test
ja
pop
pop
cmpsb
int3
push
mov
out
inc
push
sub
and
out
test
hlt
push
xchg
scas
inc
cmc
fisttpl
mov
stos
ficoml
xor
mov
ds
dec
movsl
fwait
xchg
das
repnz
pop
inc
rcl
lahf
inc
mov
mov
adc
fidivs
addb
push
lcall
push
jmp
roll
jbe
sbbl
push
mov
push
repz
shrl
and
sub
sub
sbb
xor
imul
dec
add
cmp
daa
insb
xor
popf
push
mov
cmpsb
jmp
push
cld
dec
mov
ret
inc
cmpb
and
mov
jns
mov
ss
xchg
lcall
gs
xchg
in
and
xchg
jo
cs
jmp
push
call
inc
xchg
mov
stos
cmp
in
add
sub
addr16
repz
mov
mov
xlat
nop
push
movsb
repnz
or
into
dec
and
jbe
test
push
inc
jecxz
int3
sbb
dec
orl
and
push
pushf
mov
lods
jbe
mov
push
gs
ret
jnp
push
lcall
mov
jl
loop
cld
rcr
xchg
test
xchg
xchg
mov
aas
fcomps
jle
lea
inc
stos
scas
lret
inc
pop
xor
stos
push
mov
les
mov
jecxz
xor
movsb
inc
adc
xchg
outsb
cwtl
and
pop
sti
fdivp
lret
mov
outsb
push
sub
call
cli
mov
jno
addl
nop
daa
add
jge
and
push
sbb
and
test
imul
pop
and
pop
pop
or
cmp
fdivl
pop
sub
cmpsb
je
les
pop
dec
push
mov
adcw
andl
js
xor
push
adc
xchg
mov
out
faddl
testb
ss
es
popa
xor
jno
mov
cli
xchg
lods
adc
imul
xchg
push
int3
xchg
imull
ficoml
inc
sub
mov
test
inc
loop,pn
xlat
dec
pop
test
insb
push
push
xchg
sub
cmp
popa
mov
xchg
mov
mov
and
cmp
add
hlt
add
push
js
cmp
dec
ds
or
mov
jne
scas
mov
pop
sub
fmull
lock
incl
loop
pop
je
test
push
int
push
test
addl
loopne
int3
mov
shll
jbe
insb
and
mov
das
jp
rcll
stc
fisubs
jns
push
sub
stc
xchg
cs
shrb
aam
std
insl
ret
lock
mov
shl
mov
in
je
enter
sahf
mov
imulb
fcomps
sub
cmp
daa
dec
in
jnp
out
popf
xor
pop
push
fisttpl
jp
jbe
xlat
cs
add
test
lret
mov
inc
sub
cltd
test
xchg
sti
je
sub
rorl
mov
pushf
push
push
sbb
mov
sarl
mov
cwtl
fcomi
aaa
dec
cmp
inc
xchg
outsl
adc
pop
cmp
mov
outsl
shll
aam
or
fadds
cmp
xlat
icebp
gs
dec
mull
push
iret
inc
ret
repnz
fs
jns
jle
addr16
pop
sbb
std
xor
mull
or
cmp
push
push
or
aam
adc
jg
and
mov
out
bound
lret
jbe
sbb
adc
cmp
negb
mov
fisubl
mov
push
inc
das
cmp
fwait
pop
cmc
xor
cmp
ja
jl
mov
xor
insb
add
jnp
or
jmp
jmp
icebp
or
pop
adc
push
fdivrl
mov
int
pusha
scas
xor
cmp
shrb
je
and
sub
sbb
leave
les
and
jmp
cwtl
in
add
and
mov
sti
mov
aaa
cltd
into
pop
enter
lret
call
out
sti
daa
push
mov
jecxz
pusha
mov
or
pop
xlat
movsl
or
mov
outsl
xchg
out
push
ret
insl
xor
pop
cld
sbb
xor
mov
jmp
les
push
imul
in
push
fs
cli
aam
ljmp
repnz
push
xor
cmp
mov
dec
jmp
shl
mov
fimuls
mov
addr16
out
push
popa
xor
sbb
and
mov
adc
popa
mov
stc
test
pop
cmpsb
lods
lock
mov
push
sub
add
cli
or
and
test
ds
xchg
mov
je
mov
mov
xchg
pop
jbe
rol
pop
add
inc
js
push
mov
push
push
aas
ficoml
cmp
xor
xor
jg
dec
mov
sahf
jae
push
movsl
cmp
out
push
sub
xchg
mov
popf
lret
xchg
add
dec
pop
movsl
push
xchg
test
mov
fimuls
nop
loopne
lahf
jnp
mov
cmp
xor
cmp
jb
sub
mov
adc
and
mov
fdiv
fmull
pop
fnstenv
lahf
shl
icebp
pusha
mov
icebp
movsl
mov
push
xor
call
fisttpl
jbe
popa
clc
insl
aas
pop
call
mov
fcmovnu
mov
sarb
xor
cs
ss
popf
sbb
imul
xor
movsl
push
sahf
mov
add
jo
pushl
mov
push
pop
repz
mov
idivl
ficoml
das
mov
push
rorb
sub
adc
mov
ret
pop
xchg
jp
pop
nopl
pop
in
jne
aam
pop
jb
jno
cmc
xlat
mov
push
out
mov
pusha
fsubrl
add
jbe
xor
movsl
and
shlb
enter
lods
arpl
sahf
jne
xor
aas
test
push
popf
add
xor
mov
pop
xchg
cs
sbb
jbe
fdivl
inc
sahf
iret
orb
mov
push
add
dec
in
scas
lods
adc
xchg
sub
inc
shl
mov
test
xchg
pop
outsb
cli
xorb
mov
pop
shrl
lret
jl
fcmovb
das
cmpl
insl
ljmp
or
mov
add
mov
or
adc
mov
dec
arpl
fistpll
pop
aas
lcall
and
lret
dec
bound
inc
je
pop
add
xor
push
aaa
sbb
and
push
in
test
das
dec
in
cli
repz
dec
mov
bound
jp
add
fistps
stos
jne
lret
fnsave
mov
inc
push
sub
fwait
jb
ror
rcr
add
mov
sub
fistpl
and
lcall
subl
mov
push
mov
sar
hlt
and
adc
mov
jnp
mov
inc
pushf
xchg
push
xchg
push
je
xchg
andb
cmp
adc
les
mov
out
in
popf
fstp
jne
rorb
inc
ja
stc
or
popa
xor
push
pop
inc
add
mov
fisubrl
adc
push
inc
xchg
out
stos
add
and
fdivl
jo
mov
push
fstpt
int
fs
cmpsb
fistl
pcmpeqd
fsubr
lds
mov
mov
mov
test
sbb
das
negb
cld
adcl
dec
aaa
cmpsb
data16
lret
imul
lods
pop
inc
push
jmp
lods
leave
jmp
lret
sub
sub
cmp
xchg
out
test
lods
lds
adc
mov
mov
ljmp
popf
fs
push
cmp
mov
test
mov
stos
aam
sub
fs
add
add
mov
mov
cmp
adc
movsb
inc
pop
mov
shrl
mov
adc
lahf
ss
shll
xchg
scas
stos
dec
dec
push
jno
inc
aaa
push
or
jmp
xchg
mov
dec
lea
movsb
and
sbb
mov
ret
cmp
pop
mov
pop
cld
inc
out
or
push
dec
xor
ret
out
lea
inc
or
pop
addr16
cmpsb
adc
and
std
cltd
push
mov
shlb
adc
sub
xlat
sahf
or
mov
or
push
xor
jns
push
icebp
mov
mov
fistps
xor
push
inc
pop
xchg
dec
jmp
filds
lea
sub
mov
int3
mov
fnsave
mov
add
rcll
cmp
xor
or
stc
adc
aaa
mov
out
in
push
clc
movsb
in
mov
xor
enter
xor
test
test
sbb
xchg
mov
sub
and
out
and
in
ret
inc
push
ret
and
mov
fidivrs
leave
sub
dec
dec
popf
and
mov
dec
test
outsb
lcall
adc
aad
int
cs
push
push
mov
mov
ror
cli
or
clc
aas
and
cmp
mov
and
scas
sub
jne
sub
bound
incl
or
dec
mov
clc
fs
jmp
dec
dec
call
std
xchg
movsl
sahf
jns
loop
pop
add
fnstenvs
dec
pop
xor
push
out
inc
in
add
cltd
loope
daa
and
pop
xchg
or
mov
cltd
and
and
xor
cmp
adc
mov
stc
out
adc
in
andb
dec
sti
push
cmc
enter
or
xchg
dec
sbb
fcmovb
imul
jb
test
notb
ljmp
std
in
arpl
mov
in
out
xlat
and
cmpxchg
jo
xchg
loop
rcrl
sbb
push
xchg
pop
mov
jne
das
jp
jo
call
sbb
and
insl
js
loopne
bound
outsl
rol
or
xor
jge
jmp
mov
mov
push
push
mov
in
cmpsb
ret
push
stos
push
mov
xor
daa
mov
test
xchg
or
and
lea
out
push
popf
aam
inc
lods
push
push
fildll
pop
push
inc
fsubrs
test
pop
sarb
mov
cmp
aas
fwait
or
pop
pop
push
push
push
or
cmc
int3
jp
mov
aam
flds
inc
lds
imul
aas
mov
pop
ret
push
and
fldt
fsubr
mov
fistpll
mov
mov
fldl
ret
pop
mov
mov
loopne
rorl
jg
pop
xchg
shr
adc
and
rcrl
dec
sbb
or
cmp
fld
push
in
int3
fwait
mov
push
inc
adc
pop
icebp
in
xor
pop
out
fstpt
iret
into
xchg
or
cwtl
sub
bound
int
or
loopne
out
jg
in
cmp
push
shl
clc
or
cmpsl
fwait
xor
and
data16
xchg
lcall
add
pushf
je
sti
call
jle
aas
push
test
pusha
mov
xchg
jno
inc
cmpsl
imul
jne
shll
imul
mov
jnp
and
dec
int
push
push
mov
lock
call
add
push
out
and
fldt
jmp
sub
mov
lcall
inc
lods
call
cpuid
dec
push
das
adc
and
xchg
mov
mov
scas
jae
add
and
cwtl
jge
ljmp
rclb
rorl
mov
addl
arpl
sub
iret
clc
jge
cmp
pushf
bound
fistpl
push
scas
adc
xchg
fucomp
out
xchg
stos
adc
leave
xor
push
sub
add
cmpsl
xchg
iret
adc
aam
sbb
jl
adc
imul
push
and
jne
call
or
arpl
into
pushf
subps
push
dec
pop
mov
mov
jp
std
mov
xchg
pusha
loopne
xchg
mov
jno
xchg
fwait
add
push
and
leave
adc
ret
test
lret
xor
mov
std
or
jp
pop
adc
mov
mov
mov
cmpsb
sbb
xchg
push
cltd
out
push
sub
xchg
mov
xchg
out
xchg
stos
sub
aas
and
cmc
int3
xchg
ja
cmp
jmp
loope
jge
rorl
mov
xor
cmp
loope
mov
insb
mov
pop
add
push
sarb
mov
xchg
andb
std
jmp
nop
pusha
fnstsw
add
dec
arpl
lock
sub
stos
pop
adc
rolb
imul
je
ss
pushf
aas
inc
cmpsl
in
pushf
and
cmp
jno
fs
addr16
mov
fwait
sbbl
jmp
adc
xor
gs
insl
cs
sbb
jbe
insl
mov
xchg
icebp
sbb
xchg
sahf
jb
scas
xor
lock
inc
in
sbb
adc
les
insb
jecxz
daa
enter
adc
enter
fstpl
or
pop
xchg
cmp
cmp
add
shrl
mov
sbb
pop
pusha
in
les
adc
vshufps
imul
jg
rdmsr
xlat
sub
popf
popl
xchg
jg
scas
inc
push
outsb
ljmp
cwtl
inc
xchg
inc
fcoms
lods
movsb
cli
pop
xor
mov
std
rcll
adc
adc
je
js
pop
xchg
imul
jne
in
das
dec
in
int
int3
mov
and
pop
mov
cld
jg
jg
sub
xchg
orb
and
add
pop
mov
ljmp
outsb
sti
lods
into
aam
daa
add
dec
insb
dec
jns
inc
mov
add
mov
inc
aas
std
rorl
mov
filds
xchg
mov
pop
jg
inc
mov
pushl
icebp
ret
sub
xchg
xchg
mov
cwtl
data16
jl
scas
out
pop
ljmp
or
and
dec
push
jbe
jge
subb
out
adc
rcr
rcl
add
ja
cs
jbe
pop
jl
add
push
jns
mov
sbb
or
mulb
dec
decl
or
jl
sahf
cli
inc
xchg
inc
or
dec
push
insb
add
xchg
mov
cmpsb
cmp
mov
adc
in
dec
sbb
push
out
pop
mov
jne
and
push
lods
or
jl
lret
scas
pop
stc
or
pop
addr16
loop
mov
dec
jg
sub
aaa
inc
arpl
loop
or
dec
fstl
lock
out
push
aad
ja
sub
test
psllw
dec
dec
mov
or
cli
daa
cmp
fwait
bound
jmp
dec
pop
cwtl
jmp
pushf
sbb
int
out
cmp
pop
xor
into
cmp
repnz
mov
dec
lods
insl
push
jl
cli
mov
mov
jl,pt
cltd
or
rclb
push
arpl
jnp
and
movsb
mov
test
push
hlt
jb
out
addr16
add
pushf
jbe
fwait
xchg
and
sbb
adc
or
xchg
arpl
dec
jo
and
cmpsb
push
dec
mov
mov
inc
jmp
push
or
rol
dec
inc
fs
push
fsubp
iret
fnclex
shll
ss
or
sub
mov
push
inc
xor
shr
out
pop
loope
adc
scas
cmp
jle
jge
dec
addl
fidivrs
nop
scas
xor
xchg
xor
fdivl
outsb
jle
loopne
xor
inc
cwtl
stos
lock
mov
cltd
push
aaa
xchg
mov
inc
fmull
pusha
jl
roll
in
insb
xor
hlt
push
inc
cmp
mov
mov
subl
arpl
sbb
jmp
cmp
fdiv
repz
mov
adc
xor
pop
mov
lahf
lea
ljmp
jle
sub
sbb
xor
xchg
stos
xchg
cmp
sahf
push
out
xchg
nop
push
imul
in
mov
inc
iret
imulb
and
xchg
mov
and
xchg
lcall
out
mov
push
push
inc
bound
lds
push
push
out
fimull
sbb
insl
sbb
jb
dec
les
fsubrs
jne
and
leave
sar
adc
mov
mov
out
int
pop
fbstp
aam
aam
mov
pop
daa
xor
mov
shr
std
pop
push
mov
iret
int
pop
mov
sub
push
lcall
sahf
jno
pop
repnz
aaa
adc
jp
ret
es
and
adc
shrb
xchg
hlt
into
les
repnz
cmp
loop
inc
sahf
inc
pop
popa
outsb
es
std
insb
push
nop
lds
push
push
popa
movsb
mov
xor
inc
orl
test
js
test
cmp
xchg
add
out
jo
sbb
lock
test
mov
popa
mov
sub
iret
adc
pop
mov
lods
pop
ret
sahf
icebp
cmp
out
pop
pop
loope
adc
roll
imul
fucomi
and
jns
xchg
and
mov
jle
test
data16
sti
mov
jno
mov
orl
icebp
mov
arpl
addr16
add
xacquire
pop
cmpsb
or
sbb
or
jp
mov
mov
cmp
les
imul
hlt
jmp
adc
jnp
jae
adc
pop
addr16
mov
int
sahf
and
cmp
outsb
call
or
xchg
xchg
rorl
or
or
fwait
sub
xchg
jmp
dec
and
sti
popa
fildll
je
ljmp
xchg
mov
mov
xlat
lret
bound
call
cwtl
inc
test
cmp
push
mov
in
dec
popf
ja
lods
push
mov
pushf
mov
out
jbe
mov
cmc
mov
popa
xchg
jle
int3
jne
push
mov
cmp
roll
cmpsl
dec
aad
cmp
iret
push
sub
cmp
lret
inc
sub
ljmp
popa
pushl
lret
cmp
rcrl
lcall
pop
mov
ret
jnp
filds
sbb
fadd
pop
adc
adc
xchg
sarl
sub
popa
fwait
add
aam
pop
dec
outsl
into
je
add
sub
or
and
push
and
test
sub
in
outsl
xchg
or
test
jnp
insb
adc
and
mov
cmp
je
adc
xor
lods
push
fidivl
or
jge
jg
jecxz
fists
add
cmp
data16
pushf
loope
inc
dec
dec
divb
out
rcrl
dec
nop
jmp
xor
ss
xchg
xlat
outsb
ret
andb
push
cmc
mov
push
das
mov
inc
xlat
popa
dec
out
icebp
pop
pop
cmc
xorl
push
orb
aas
push
mov
push
popf
cli
in
js
mov
jge
push
je
dec
xor
dec
out
dec
loopne
cmp
popa
imul
popf
inc
xchg
in
clc
mov
fbstp
or
mov
faddl
pop
sub
adc
inc
lahf
ss
outsl
sar
pop
jnp
cwtl
inc
addr16
jl
cmp
cs
push
into
or
jo
scas
xlat
not
xchg
mov
inc
out
movsl
adc
imul
ret
movsl
mov
or
dec
in
dec
jno
jmp
shlb
pop
xchg
repz
ds
or
popf
pushf
jp
decb
nop
jl
jne
int
jns
jl
xchg
mov
ret
gs
ljmp
test
pop
xor
xor
std
loop
push
pushf
imul
jle
lods
pop
jae
jb
or
xchg
or
dec
imul
mull
cmp
in
test
mov
push
mov
sbb
fs
enter
xor
cld
inc
add
sarl
push
push
jmp
lret
aam
xchg
mov
jmp
roll
push
jmp
test
das
stos
cs
call
outsb
rcll
insb
add
mov
movl
nop
sbb
cld
jnp
push
imul
jnp
push
sub
shlb
and
loopne
movsb
jns
es
cmpsl
out
xchg
out
int3
and
aaa
jb
shll
push
jmp
orl
sbb
sbb
mov
fistl
xor
jge
or
xlat
and
push
xchg
adc
add
iret
mov
mov
loopne
mov
ret
push
adc
add
imulb
mov
or
insb
jle
test
mov
and
jae
cmp
mov
repnz
insl
mov
test
sbb
jecxz
cmc
aas
adc
call
push
jbe
pop
dec
pop
test
mov
call
loope
push
push
inc
out
xchg
packsswb
xor
pop
xchg
ret
jp
pop
insb
stos
jmp
out
lret
xchg
pop
into
loopne
clc
cmc
mov
cli
and
mov
cmpsl
ret
mov
add
inc
jbe
mov
push
push
sbb
scas
movsl
inc
add
fldenv
inc
mov
idivl
adc
pushf
arpl
jnp
inc
popf
int
in
arpl
insb
add
outsl
outsb
mov
imul
ja
pop
lods
or
mov
iret
lahf
testl
or
sub
out
adc
loop
jb,pt
inc
out
add
aaa
aaa
das
add
jp
mov
mov
jns
xchg
rol
repz
inc
adc
js
popl
sti
sub
sti
xchg
xor
sahf
sub
in
daa
loope
out
popf
stos
inc
mov
es
cwtl
leave
xchg
inc
cmp
xchg
mov
jb
int
add
cmpsl
mov
mov
not
test
sub
stos
sub
jne
mov
ret
lods
je
mov
addl
mov
cmp
stos
inc
out
push
call
mov
clc
pop
scas
sub
cs
cld
icebp
jne
in
sub
adc
mov
setl
jno
lcall
xor
mov
lds
xor
aad
adc
mov
cmpsl
out
out
cmc
sahf
xor
cmpsl
add
xchg
lods
testb
mov
lret
out
es
adc
jge
pop
scas
ljmp
out
out
call
adc
pop
mov
xor
mov
pop
inc
popf
ds
xchg
pusha
test
sahf
shll
cmp
js
lea
fistpll
add
pop
aaa
clc
jge
adc
punpckhdq
sti
mov
adc
xchg
jle
mov
xlat
hlt
push
xor
jbe
add
mov
adc
mov
xor
adc
jmp
sub
push
lcall
cmpl
int
cmp
fwait
mov
fisubs
mov
mov
and
out
fadds
sbb
in
mov
cltd
adc
inc
mov
push
jbe
inc
lock
das
add
aad
push
or
adc
jo
or
gs
ljmp
movsb
addl
gs
adc
mov
add
pop
enter
std
inc
pop
lods
data16
jae
in
sub
mov
call
ljmp
cmpsb
insl
andb
adc
and
pop
lds
ss
mov
insl
jae
mov
pop
ret
mov
shlb
cmp
mov
shlb
test
mov
mov
pop
add
mov
mov
dec
push
push
test
jno
fs
jbe
inc
xchg
call
dec
jmp
push
shrl
sub
aas
jle
decb
mov
lock
dec
mov
push
pop
pushl
pop
mov
xchg
adc
daa
and
mov
sti
inc
inc
stc
insl
pushf
jnp
sbb
test
outsb
mov
mov
mov
xchg
xchg
mov
lret
pop
or
xchg
push
inc
jl
movsb
push
sub
mov
push
inc
sti
fwait
loop
cmp
rorb
pop
lret
dec
xor
mov
mov
imul
hlt
sub
faddl
lcall
xchg
mov
and
push
nop
bound
jmp
or
inc
xchg
fidivrs
roll
pop
test
ja
pop
mov
mov
rol
jecxz
jmp
mov
hlt
jbe
add
sbb
pushf
fidivrl
cmc
lods
fsubs
and
inc
xorl
pop
xlat
mov
mov
jo
out
pusha
adc
jle
fnstcw
test
push
adc
push
int3
scas
mov
loopne
aad
cmp
add
jbe
add
mov
jbe
mov
xor
inc
js
jno
pushf
mov
gs
cmp
adc
xlat
mov
aas
outsl
push
mov
cmpsb
push
and
mov
in
mov
mov
push
roll
icebp
mov
fs
mov
cmp
mov
in
std
pop
ss
dec
bound
ljmp
push
push
or
loopne
pop
outsb
xor
mov
clc
data16
outsl
dec
shl
push
stos
movsb
cs
insl
mov
push
xor
dec
movsb
push
push
insl
push
xor
mov
ja
insb
ret
fnstcw
loop
test
mov
getsec
cmp
dec
adc
mov
push
ret
xor
mov
jnp
hlt
js
or
lret
fldcw
cmp
rorl
pop
mov
mov
pop
push
push
cmp
add
jnp
ret
cld
add
mov
adc
mov
imul
add
push
xchg
jae
orb
ja
loope
mov
pop
jbe
lock
push
adc
sub
jnp
mov
or
push
xor
pop
stc
rorl
inc
loop
mov
nop
lcall
std
xchg
pop
scas
add
lods
loop
mov
adc
sub
add
dec
sbb
jge
cwtl
test
pop
rcl
fs
loopne
repz
stc
sbb
test
lcall
mov
jbe
push
iret
pop
mov
jmp
pop
hlt
cmp
pop
jnp
dec
cltd
lods
push
outsl
fwait
cmc
mov
fidivs
xor
sbb
or
andl
fildll
test
adc
pop
push
mov
and
fwait
loope
and
mov
ret
push
xor
pop
mov
lcall
sbb
std
cs
mov
inc
ja
cmp
jmp
push
mov
fimull
adc
fwait
push
sbb
pop
mov
cmp
insl
bswap
mov
push
dec
and
lahf
jle
cmp
mov
mov
lods
andb
sub
test
lret
adc
popa
clc
std
mov
jg
lock
repz
sbb
push
aam
fmul
pop
mov
mov
dec
xchg
orb
xchg
arpl
add
stos
inc
mov
jno
mov
pop
add
rcrb
hlt
mov
jnp
out
daa
inc
jbe
lock
mov
fldenv
xorl
mov
xchg
sub
push
xchg
add
push
sbb
xor
movsl
mov
lret
test
testl
pop
das
inc
push
mov
imul
inc
or
add
sub
mov
mov
mov
int3
jae
iret
loop
repnz
dec
std
sub
xor
pop
pop
loop
jle
cmp
sub
jo
jl
int
jns
adc
daa
jl
repz
or
and
add
hlt
push
lods
cld
xchg
les
lock
push
push
dec
pusha
xlat
fs
jl
mov
js
mov
inc
push
sub
fnstcw
aas
aad
push
and
shrl
jb
adc
add
pop
shlb
in
push
repz
loopne
enter
jle
aas
push
xor
mov
inc
xor
mov
mov
push
xor
push
sub
es
lds
ret
cmp
pop
dec
xor
inc
int
push
xchg
arpl
xchg
cmp
sbb
sbb
pushf
shl
daa
clc
addr16
outsl
ret
arpl
mov
mov
addr16
ficoms
lea
stos
into
out
jle
xchg
mov
mov
jle
pop
fidivs
dec
push
rclb
cmp
fldenv
jbe
lret
enter
push
out
mov
pop
and
in
data16
inc
inc
mov
call
subb
dec
or
dec
dec
mov
sub
sub
dec
enter
fs
or
fisttpl
das
xchg
in
imul
adcb
sbb
mov
add
leave
sub
sahf
cltd
lcallw
divl
pop
loopne
fists
arpl
sub
jecxz
je
sbbl
ljmp
xor
mov
inc
add
popa
sub
out
lret
int
aas
sub
sbb
je
add
pop
stc
push
and
adc
int3
sub
in
cmp
sub
mov
xor
jp
sub
leave
push
add
sub
push
adc
cwtl
sub
add
in
adc
pop
sub
pop
jecxz
cmp
in
in
popf
and
leave
mov
pop
pop
push
insl
mov
fsubs
add
out
test
jp
stos
fimull
ja
mov
xchg
pop
sbb
sbb
sbb
aas
add
or
jne
or
and
xchg
addr16
andb
lret
mov
mov
push
mov
ret
testl
lahf
push
sbb
imul
jns
xor
xchg
je
fadds
add
dec
gs
and
fidivrs
pop
fistl
hlt
fldcw
jbe
das
jbe
and
out
dec
hlt
addr16
mov
out
into
mov
pop
cmpsl
loop
pop
idivb
aad
jg
cmp
jg
loopne
test
dec
mov
insb
jecxz
sbb
popa
xor
aas
out
and
inc
lods
mov
jae
aas
cmpsb
shrl
cmp
sbb
xchg
leave
fistpl
sub
push
dec
lock
cld
and
add
out
xchg
and
jecxz
pop
inc
aaa
add
sarl
mov
lods
daa
cmp
mov
inc
test
adc
jp
jle
mov
fwait
bound
ret
and
jb
aam
in
sbb
pop
push
cmpsl
xor
das
jae
out
test
rcll
pop
adc
rorl
scas
arpl
fists
push
stos
inc
mov
xor
ret
fdivrl
rclb
scas
xor
push
aaa
push
insl
or
popf
hlt
xchg
sbb
mov
xor
pusha
mov
cmp
pushf
mov
xor
push
sub
lds
incl
pop
icebp
dec
jnp
jno
mov
pushf
sbb
sbbb
mov
mov
ficoms
gs
out
cmp
mov
fstps
test
push
leave
ljmp
lods
push
cli
test
rcrb
ljmp
jge
jp
sub
inc
mov
mov
pop
fdivrl
jmp
and
jp
fimull
inc
mov
out
xchg
add
cmp
imul
out
add
pop
sub
mov
rorl
data16
jle
mov
clc
int3
loop
iret
add
dec
insb
in
div
inc
dec
adc
arpl
sahf
xor
popa
rorb
adc
jbe
insl
test
hlt
mov
insl
inc
mov
xor
pusha
imull
fistpl
mov
pop
cmp
addr16
cmp
data16
jae
sti
jbe
lods
test
fnstcw
nop
imul
lcall
outsb
out
xchg
push
or
ret
ret
insl
mov
lret
or
and
test
test
das
mov
pop
repnz
rorl
cmpb
adc
xchg
or
push
mov
fldt
daa
or
push
scas
jns
fsubl
push
sbb
add
cmp
out
testb
jae
mov
mov
stos
mov
and
mov
sub
test
loope
imul
mov
xor
jg
lahf
xchg
jae
iret
scas
call
inc
ret
sbb
dec
dec
aaa
xor
cmp
jge
jbe
pop
xor
fdivs
nop
dec
lods
fidivrl
push
nop
push
cmpsl
outsl
ja
jl
faddl
dec
or
repnz
xchg
mov
aam
xlat
lret
out
ss
outsl
inc
test
xchg
and
ss
pop
push
cli
fs
and
and
xchg
cld
inc
out
les
in
stos
call
jg
mov
cmp
pushf
xchg
jmp
paddsw
sahf
ja
jge
ds
fimull
test
bound
mov
push
inc
sub
push
paddusb
adc
in
notl
cmp
or
mov
aaa
xchg
testl
jl
cmp
movl
jae
xchg
add
jg
mov
sbb
mov
jge
inc
push
jecxz
adc
cld
xor
fisubl
lock
push
adc
and
test
adc
sbb
sar
pushf
pop
push
inc
into
lds
jmp
repnz
insl
jge
rcrl
xchg
push
xchg
push
jmp
xlat
mov
xchg
jecxz
push
cwtl
cmovle
adc
negl
pop
pop
test
mov
mov
in
pop
jnp
fldenv
es
jmp
and
pop
pushf
xchg
dec
aad
jne
lahf
movsb
xchg
imull
adc
inc
push
pop
orl
popa
cmp
add
mov
cmp
imul
jmp
outsb
mov
mov
mov
scas
fisubs
xor
or
xchg
adc
cmc
movsl
fs
add
popa
arpl
xor
es
and
push
adcb
repnz
in
xchg
mov
scas
add
es
xor
mov
push
pop
adc
stc
mov
add
xchg
sbbl
dec
xlat
sub
leave
xchg
add
pop
das
cmc
ret
int3
adc
popl
cmp
popa
push
add
mov
imul
pop
repnz
test
xor
push
punpckhdq
or
push
ret
into
dec
pop
in
jne
aam
cmp
mov
in
shlb
loop
cmp
add
mov
xchg
xlat
call
les
lcall
int
and
and
cmp
cmp
scas
adcb
pop
mov
or
sbb
mov
xlat
outsb
xchg
stos
add
vmwrite
insb
out
lock
mov
js
andl
out
sub
stos
mov
popa
ret
jge
fnstcw
sub
push
cmp
sbb
sub
push
pop
andl
mov
jbe
mov
mov
or
addb
ss
mov
push
pushf
cli
stos
aaa
fbstp
dec
mov
arpl
pusha
imul
cltd
dec
lock
sub
insl
fisttpl
call
rol
sub
or
jmp
iret
xchg
or
out
adc
or
fcompl
jp
andb
fwait
outsb
push
sbb
test
cltd
adc
xchg
mov
dec
loop
push
mov
mov
pushf
pop
pop
xor
fldl2e
in
sbb
inc
or
jge
mov
xchg
mov
jno
sbbb
out
fmull
jb
cmp
repnz
pusha
and
push
pop
test
pop
cmpsl
and
lods
enter
pop
sbb
int
rcrl
xchg
lea
mov
inc
out
and
xchg
sbb
jl
or
lea
and
pop
lods
jl
dec
scas
or
push
lods
sbb
pop
lds
dec
add
mov
movsb
stc
pop
jge
ja
pusha
test
aam
mov
js
cmpsb
arpl
xor
clc
mov
push
cltd
std
or
mov
dec
jnp
dec
inc
sub
push
divb
test
daa
lcall
adc
add
mov
movsl
lods
imul
sbb
dec
pusha
test
mov
mov
pop
insb
arpl
fs
test
ret
sbb
in
aad
xor
lret
jae
out
lds
dec
sbb
mov
inc
popa
and
pop
je
mov
xlat
sbb
jecxz
out
cmp
scas
lds
das
mov
idivl
xchg
out
mov
int3
mov
push
add
dec
lods
mov
clc
ds
rol
adc
shl
sub
cmp
dec
incl
fisubrl
xchg
hlt
fmull
or
sbb
lea
and
push
or
jnp
call
xchg
mov
jo
leave
mov
adc
scas
xchg
cmc
icebp
lret
popa
mov
lods
mov
fcmovne
insb
ret
pushf
mov
or
and
mov
cwtl
add
xor
aaa
push
pop
cmp
jmp
cmp
in
in
sub
mov
pop
std
aam
sbb
rcr
mov
mov
das
cmpsb
and
fcoms
inc
xor
scas
imul
mov
cltd
lock
sbbl
push
inc
js
push
jmp
push
dec
jo
jle
in
push
nop
jae
not
call
fdivp
ds
in
test
out
cmpsb
jae
mov
pop
clc
je
icebp
xchg
pop
js
enter
repz
fwait
mov
test
mov
mov
xchg
xchg
jl
rcr
in
adcl
xchg
and
jge
add
push
ljmp
mov
sub
std
pop
call
add
mov
lcall
xor
jno
mov
inc
mov
test
push
fisttpl
sarl
popf
nop
and
clc
push
sbb
xor
xchg
xor
pusha
fsts
cs
lret
mov
sbb
pop
orl
andb
push
fisttpl
sti
inc
push
fidivrs
mov
cmp
inc
mov
fwait
subb
mov
mov
aam
pop
aaa
and
jnp
test
in
add
jno
shlb
adc
out
arpl
cmpsl
pop
cld
lea
xor
ud0
jp
and
scas
inc
fdivrl
fdiv
jg
cld
data16
sub
push
stc
scas
sub
popf
add
cmpsb
cmp
call
jb
scas
lret
scas
loop
adcb
jp
leave
test
sbb
ret
hlt
cmovl
repnz
adcl
enter
adc
xchg
pop
pop
call
add
inc
stc
aad
das
cmp
push
jge
sub
lods
repz
aam
roll
inc
sbb
je
xor
into
movsb
mov
pop
js
mov
out
scas
mov
data16
sub
loopne
sbb
shll
les
xchg
lret
int
mov
push
mov
mov
cmpsl
out
cmpl
addl
jae
pop
or
mov
dec
mov
into
jl
inc
jecxz
sbb
dec
cmp
mov
out
inc
sti
inc
addl
mov
push
pop
ljmp
int3
lods
jb
fstpl
xchg
mov
leave
fs
cwtl
dec
mov
fwait
ja
sbb
popf
cmp
shll
fisubrs
or
jb
mov
cmpsl
fs
mov
and
jno
int
cmpsb
ja
mov
int
push
rorl
jle
xor
pop
leave
xor
movsb
cmpsb
xor
cmp
jp
loope
adc
push
scas
mov
add
jge
lret
shll
sbb
inc
hlt
addr16
and
cli
and
inc
jge
fildll
xor
push
mov
jg
and
xor
roll
pop
cltd
push
mov
sub
out
aam
jmp
scas
dec
repz
or
adc
rcr
out
mov
inc
lea
mov
jmp
sbb
outsb
loope
adc
fdiv
mov
das
adc
push
mov
dec
ss
jns
mov
movsl
xchg
mov
inc
mov
scas
jno
push
mov
inc
cmp
jae
fcomps
out
test
dec
insl
loope
pop
inc
cmc
mov
lods
mov
lods
mov
adc
jp
fisubrl
dec
in
mov
iret
addb
enter
pop
mov
pushl
pop
je
into
xchg
sub
dec
stos
add
cs
sarb
mov
out
adc
divl
mov
in
hlt
inc
lods
jmp
and
and
push
adc
inc
xor
jecxz
cmpsb
pushf
sbb
lods
mov
aad
movsl
add
fwait
out
mov
imul
pop
cmp
test
mov
jo
insb
xor
mov
adc
mov
int
repnz
mov
dec
les
jle
dec
loope
xchg
repnz
push
push
out
xchg
and
push
cwtl
stos
test
scas
aas
jle
filds
sarl
inc
xor
repz
mov
shlb
jmp
or
insl
into
bound
mov
ds
imul
lahf
mov
xchg
inc
adc
sti
xchg
xor
data16
adc
loop
dec
shrb
jo
roll
cmpsb
pop
mov
mov
rcr
add
sbb
xchg
dec
lock
imul
imul
push
insl
loopne
dec
xor
stos
xchg
movsb
and
mov
test
stos
test
jbe
push
sbb
dec
pop
in
lock
loopne
xchg
pop
mov
cmp
cmp
xor
cmpsb
cmp
movsl
dec
or
popa
cmp
inc
outsb
pop
inc
les
arpl
stc
or
or
push
and
add
les
xchg
sub
push
xor
in
icebp
mov
push
sub
cmpsb
pop
out
sbb
inc
sarb
outsb
lock
imul
or
cltd
mov
sbb
mov
out
add
daa
shl
es
out
es
inc
cmc
out
push
xor
sbb
jne
cs
test
int
push
push
dec
mov
lock
lahf
lods
add
mov
xor
jl
push
adc
lahf
sar
jno
push
call
mov
mov
icebp
int
enter
push
cs
pusha
jno
adc
or
fnstsw
aad
jns
mov
inc
adc
inc
cmp
bound
out
or
mov
sbb
lds
mov
push
lock
outsl
and
decb
push
jo
js
iret
data16
lcall
inc
out
jmp
aaa
xchg
pop
push
stos
outsl
xor
cmpsb
enter
pop
arpl
into
mov
mov
sahf
imul
cmp
ja
shrb
or
pop
cs
lods
add
sub
inc
fnstenv
sub
xor
lds
rorb
popa
mov
scas
adc
or
push
ljmp
or
push
dec
mov
push
aad
outsl
das
call
es
pusha
sub
lods
cmp
mov
add
or
pushf
mov
inc
fsubrl
jae
mov
adc
sbb
add
daa
out
push
pusha
and
fwait
loopne
sub
sub
mov
xchg
xor
ficompl
cmpsl
sti
nop
inc
and
mov
rcl
push
js
test
push
xchg
sbb
out
push
push
sarl
test
inc
call
add
and
cmp
mov
insl
and
popf
int3
fisttpll
pop
cmpsb
lret
sub
nop
daa
dec
lcall
sti
mov
shll
add
jne
sub
mov
sbb
inc
pop
pop
xchg
push
and
mov
js
mov
jns
sub
jg
cltd
mov
arpl
push
and
clc
xorl
jb
leave
inc
and
pop
sbb
out
loop
xor
xchg
iret
mov
gs
push
leave
movq
jl
lret
pop
sbb
jns
insb
sub
mov
cmpsl
repz
popf
pop
jns
ja
lret
test
lock
jo
std
push
cmp
push
add
xchg
xchg
inc
dec
test
and
or
or
push
jb
lock
scas
dec
mov
push
into
insb
in
push
xor
daa
xchg
add
loope
ret
push
jo
es
sbb
xor
mov
test
jp
fmull
jno
out
jge
mov
or
mov
sub
shll
adc
dec
mov
inc
imul
add
add
clc
daa
cmpsb
stc
sbb
pop
jne
xchg
jo
sbb
add
mov
adc
mov
fcmovne
xchg
add
xor
sbb
push
sbb
aaa
out
std
mov
or
rcrb
movsb
or
lea
push
xor
sbb
push
adc
mov
mov
cmp
divb
mov
mov
xlat
xchg
in
or
clc
shlb
pop
cld
push
jb
enter
xor
js
cmc
sub
xchg
sbb
dec
pop
jns
push
mov
jg
popfw
dec
subl
jb
fdivrl
call
sbb
das
pop
mov
out
andl
xor
imul
pop
pop
mov
pop
jae
nop
lcall
adc
fwait
jbe
test
fnstenv
jmp
mov
push
push
sbb
lcall
sbb
sbb
outsb
or
movsb
push
movsl
mov
punpckhbw
push
cvtps2pi
stos
arpl
cwtl
js
enter
lcall
stos
mov
jmp
shlb
sub
xchg
push
lds
scas
cmpl
popa
std
xor
mov
mov
sub
jb
dec
std
cmp
mov
fidivrs
push
mov
push
jb
jl
icebp
imul
jae
into
xchg
mov
out
int
xor
sbb
adc
shl
stos
enter
dec
cmp
frstor
les
mov
lret
dec
or
and
movsb
jmp
mov
test
xor
push
adc
xchg
sub
icebp
cmpsb
mov
xor
sbbl
mov
stos
shlb
pop
inc
arpl
movsb
out
add
mov
dec
insb
sbb
xor
int
test
and
fisubrl
or
es
mov
nop
pop
sub
inc
sarl
outsb
xor
ljmp
dec
push
movsl
lcall
adc
outsb
mov
xor
push
in
andb
fs
addr16
push
insl
aas
add
in
adc
rolb
sahf
mov
add
pop
add
loope
jne
cwtl
aas
imul
addr16
gs
push
ljmp
jb
push
int3
fbstp
loop
pop
fcomps
fnsave
or
pop
movsl
scas
cmp
sub
mov
call
into
mov
cmpsb
insb
pushf
dec
push
dec
and
test
jg
test
pop
cwtl
movsb
ja
sti
or
pop
add
js
jle
mov
lods
in
out
jmp
gs
jp
cld
cmp
dec
lret
test
xchg
add
jl
cmp
push
inc
arpl
xchg
int3
popf
push
lret
pop
or
in
jg
mov
push
push
aaa
pop
ret
sub
in
pop
cmp
lds
sbb
icebp
cli
cmp
mov
mov
push
xor
dec
mov
jle
popf
jnp
inc
movsl
add
sbb
inc
mov
or
testl
and
pop
popf
hlt
sahf
in
ljmp
ja
fwait
test
lret
and
nop
daa
fs
jnp
lods
scas
pop
pop
push
or
or
xchg
push
insl
insl
ja
jg
faddl
or
das
outsb
inc
frstor
sar
lret
sbb
jmp
scas
mov
push
fadds
subl
lock
sub
mov
imul
add
jbe
adcl
dec
xlat
add
xor
jecxz
dec
adc
jno
sub
sbb
insl
xchg
mov
cmpsb
jno
fists
jg
xchg
push
icebp
mov
xchg
pop
cmpsb
pushf
inc
orl
pop
mov
adc
pop
repz
xor
ds
jmp
stos
cmp
fmull
fs
ja
lahf
cmp
ds
add
adc
dec
pop
or
mov
insl
outsl
inc
test
mov
inc
insb
lret
decl
push
lret
lret
cmc
mov
andb
mov
adc
sbb
xor
loopne
and
mov
pop
lock
push
out
mov
dec
addr16
add
insb
add
fidivs
jp
mov
icebp
inc
inc
fs
popl
pop
nop
jmp
lods
lods
imul
fidivl
sub
cltd
lea
repnz
jp
xlat
mov
lds
mov
push
scas
pop
xchg
daa
jbe
testl
sahf
adc
jle
imul
rcrb
push
aad
inc
inc
scas
lock
scas
inc
fisubrs
fwait
mov
fiaddl
jge
enter
repnz
popf
cmp
das
and
in
xchg
jnp
or
mov
dec
out
fidivrs
imul
call
outsl
push
pop
mov
fsubl
cmp
loopne
fldt
jns
inc
inc
cmp
divb
insb
sarl
xchg
jge
repz
xchg
clc
pop
jno
mov
insb
ret
cmp
test
retw
arpl
mov
mov
sbb
sub
stos
xor
mov
mov
scas
cmpsl
jle
das
lcall
decb
lods
and
lret
jle
lret
in
test
cmp
push
dec
dec
fdivrl
gs
adc
fs
jno
imul
in
ficoms
jle
les
rclb
fimull
out
test
and
jl
adc
inc
fwait
add
icebp
mov
ljmp
add
adc
incb
xchg
test
ss
pop
out
adc
jg
icebp
lods
cld
cmpsl
ds
adc
outsl
mov
lds
and
repz
subb
pop
push
xor
test
dec
ss
dec
add
dec
rcll
jmp
lea
add
sub
std
test
shlb
jecxz
outsb
loope
mov
cmc
pop
repz
out
jp
adc
loope
inc
inc
or
cltd
add
sub
jno
fs
jle
fsts
pop
bt
mov
sbb
cmp
mov
insb
scas
fldcw
dec
dec
repz
dec
loop
stos
mov
mov
lods
ljmp
es
mov
shrb
cld
jns
add
iret
push
add
imul
sbb
cltd
push
imul
xor
and
outsb
or
ret
adc
xor
in
dec
popa
aam
dec
adc
fwait
mov
out
and
jno
outsb
cmp
mov
cltd
or
mov
xor
sub
cmc
adc
mov
movsb
pop
mov
push
stos
add
cmp
mov
fidivl
sbb
ret
push
pop
mov
cwtl
sti
sti
cmpsb
push
fsubl
gs
fisubrl
add
or
cli
aam
inc
mov
jns
call
mov
push
jmp
stos
cmp
cltd
sbb
iret
in
jo
mov
fsubrl
mov
sub
aam
pushf
mov
or
cmp
stos
inc
arpl
or
xchg
test
xor
add
sahf
xor
lea
imul
repnz
into
es
inc
adc
aas
cmp
sbb
pop
movsb
orb
jp
sbb
mov
out
mov
nop
add
jnp
fists
push
xor
aad
pop
push
cli
pop
jl
rclb
adcb
inc
push
loope
jb
testb
mov
sbbl
lds
mov
add
cmp
xor
xchg
ds
cmp
in
push
sub
dec
xchg
cmp
xchg
xor
pop
cmp
mov
add
lds
sub
jno
fsubrs
inc
ret
rol
daa
dec
push
sbb
sbbl
mov
shlb
cwtl
push
dec
mov
int3
out
test
adc
call
adc
test
mov
out
gs
sbb
cmp
mov
mov
xor
ss
xor
call
mov
adc
dec
push
or
cmpsl
cmp
sub
cmc
mov
push
fsub
mov
cli
lcall
adc
sbb
mov
loopne
mov
xor
mov
xor
ljmp
add
pop
jae
sub
and
sti
insl
and
pop
pop
push
mov
ret
data16
mov
xchg
jne
lods
in
rorl
fisttpl
xchg
stos
ficompl
mov
test
inc
into
mov
in
adc
jae
jg
or
mov
sub
je
clc
movsl
add
aam
aas
ret
and
repz
adc
pop
mov
cld
aad
cmp
in
jnp
pop
xor
enter
lods
xchg
xchg
test
push
push
inc
mov
leave
pop
lock
or
adc
loopne
int3
fsubr
mov
jmp
out
and
sti
mov
mov
lods
inc
pop
mov
jmp
jmp
cmc
push
shr
movsl
inc
pushf
pop
lods
push
ss
aas
push
stos
test
sbb
dec
out
decb
mov
lea
dec
xchg
cmp
cmp
insl
inc
push
or
pop
xchg
xor
adc
mov
ficoms
mov
int3
cmp
test
icebp
add
push
enter
adc
push
push
js
inc
sbbl
scas
loop
fdivr
pop
push
push
dec
push
push
mov
dec
inc
adc
ds
out
pop
call
rcl
imul
mov
add
jl
bound
xchg
push
sub
iret
ret
jnp
in
fisttpll
fisttpl
add
outsl
rcr
adc
sti
mov
adc
scas
xchg
inc
popaw
lock
call
push
xchg
add
sbbl
cli
sbbb
sub
xchg
push
jmp
je
mov
movsb
xchg
test
popf
andl
dec
clc
add
jb
pop
aaa
fldl
nop
test
adcb
pop
xchg
lcall
pop
pop
outsb
dec
insb
mov
jp
adc
daa
pop
add
outsb
inc
push
mov
xchg
outsb
int3
jl
movsl
lds
xchg
cmpsl
mov
out
cld
scas
pop
dec
mov
hlt
sub
and
les
insb
test
test
test
iret
xchg
cmp
neg
jno
icebp
mov
movsb
lock
iret
cmpsb
jl
mov
pop
and
shll
aas
in
pop
insb
xor
cmpxchg8b
enter
loop
mov
lock
push
rorl
jnp
vpshuflw
jae
push
inc
cmc
lea
popl
sbb
ja
mov
ret
aad
mov
dec
gs
cmp
adc
or
andb
dec
pop
decl
out
jno
lahf
ss
push
mov
add
add
icebp
inc
test
insb
mov
cs
sub
dec
test
bound
xor
cmp
std
iret
and
test
ret
dec
rcl
pop
push
lds
mov
xor
addl
mov
call
test
imul
adc
adc
ret
pushf
fistpl
pop
movsb
ja
out
jecxz
int3
jne
xchg
shrl
dec
out
sbb
ds
outsl
pop
or
sub
cmpsb
dec
pop
pop
push
sub
repnz
ret
xchg
jmp
inc
cmp
or
shl
mov
fiaddl
movsb
xchg
stc
or
mov
fs
pusha
pop
repnz
pop
adc
fbstp
sub
data16
aas
ret
hlt
mov
push
jmp
jge
aad
out
jb
inc
pop
or
adc
or
je
repz
scas
dec
adc
rolb
add
xor
addr16
adc
push
mov
scas
es
subb
inc
ret
leave
addr16
cli
loop
or
fsubrs
out
repnz
mov
add
shrb
xchg
pop
jecxz
and
stc
dec
sbb
and
pop
fsubrs
adc
movsl
das
je
cmpsb
movsl
dec
insb
orb
shlb
xchg
xchg
or
sbb
ja
adc
mov
cmp
add
pop
bound
js
rcr
insb
pop
mov
inc
dec
mov
das
in
repnz
push
test
jnp
popf
repnz
or
jbe
sbb
adc
pop
stos
cmp
push
cmp
mov
push
cmc
jae
cmpsl
sbb
xor
mov
push
mov
ret
loop
or
sbb
gs
push
fnstenv
or
xchg
loopne
push
and
inc
daa
data16
out
cmpsl
int3
fadds
and
cmp
inc
jge
jne
dec
inc
xor
test
xchg
push
add
leave
push
and
int
pop
jmp
cmp
pusha
gs
sarl
inc
lods
lret
addb
mov
out
push
add
in
lahf
ja
scas
dec
in
aas
ret
inc
jl
mov
xchg
test
xchg
out
pop
repz
and
fimull
jle
jp,pn
jg
push
enter
loop
test
into
js
rcrl
and
mov
xor
stos
sbb
adc
in
inc
daa
mov
into
gs
outsl
pushf
pop
jmp
and
xchg
cmp
scas
cmpsl
clc
mov
sbb
dec
sbb
mov
xor
stc
jmp
test
clc
add
xchg
fisubs
scas
cmp
jne
push
sub
fcoml
xor
adc
fwait
push
pop
inc
sbb
ret
or
jnp
and
add
and
xor
push
push
sbb
sbb
into
sub
jb
mov
add
lods
and
cli
movsl
into
inc
pop
movsb
out
mov
cmpsb
and
sub
mov
xor
mov
lods
aad
fsubrp
mov
xchg
pop
mov
leave
sub
xor
ficompl
mov
fiadds
adc
test
dec
mov
jno
cs
cmp
leave
test
jg
jnp
and
lcall
and
stos
push
xor
and
les
mov
sbb
mov
mov
fisttps
mov
in
das
xor
nop
fisubl
xchg
push
popf
insl
fsubrs
mov
ljmp
and
push
pusha
scas
push
inc
sbb
movsl
fmulp
je
cli
dec
cmp
sub
dec
scas
sbb
adc
jmp
cmp
xor
enter
in
inc
xchg
test
and
pop
int3
loope
loop
leave
aas
push
insl
jno
outsl
jns
lahf
xor
roll
lcall
mov
push
popl
add
rcrl
lods
int3
rclb
out
pop
mov
int
sub
fadds
add
adc
mov
stos
push
push
or
pop
dec
cmp
mov
lret
pop
xlat
inc
gs
sbb
jbe
xchg
push
bound
mov
in
in
mov
cwtl
or
lock
or
iret
and
lahf
ss
pop
sahf
lret
jecxz
sarl
mov
pushf
jl
and
xor
mov
cmc
mov
scas
jb
push
xchg
jnp
lods
std
cltd
xorl
lcall
add
add
xrelease
cmpsl
out
lds
repnz
popa
add
push
pushf
cmp
cmp
dec
xchg
ret
push
iret
xchg
inc
jecxz
xchg
sahf
shl
xlat
dec
dec
std
mov
cmp
cli
ret
lahf
mov
mov
nop
jnp
and
leave
push
sahf
cmp
repnz
push
fstps
jle
and
or
sar
mov
jecxz
push
inc
push
or
aam
int3
inc
dec
jns
sub
jno
push
cltd
outsb
inc
enter
inc
cmpl
rcrb
xor
xchg
inc
out
out
pop
and
gs
dec
cmc
pop
std
sub
pop
lcall
push
mov
or
outsl
xor
out
push
fnsave
xchg
iret
ss
inc
xorb
or
rcr
es
cmp
mov
aas
out
pop
pop
mov
pop
repz
cmc
stc
adc
cmpl
sbbb
add
sbb
mov
cmp
test
inc
push
pop
mov
mov
and
stc
jns
jb
loope
arpl
cld
test
inc
dec
add
xchg
aad
sbb
sahf
xor
mov
mov
stos
out
pop
mov
sbb
and
pop
xchg
push
push
jl
dec
jae
lods
pop
cmp
pop
mov
mov
leave
mov
adc
mov
test
mov
repz
es
lds
hlt
jae
add
adc
aaa
in
stos
jecxz
mov
mov
xchg
adc
cmp
das
dec
mov
repz
test
negb
test
data16
xlat
out
data16
bound
add
jnp
or
jns
cmpsb
adc
fcoml
jb
add
cmp
xchg
jecxz
sti
xchg
ret
mov
shl
cmp
ret
sub
sarb
jb
mov
das
sub
cs
jnp
repz
pop
addr16
adc
inc
movsl
pop
lret
notb
inc
ret
pop
scas
std
popa
fsubrp
scas
cli
jb
pop
dec
movsb
inc
cmpsl
pusha
adc
adc
js
mov
pushl
mov
xor
js
mov
or
das
das
stos
pop
fdivl
and
out
hlt
mov
and
insb
pop
negb
cs
in
fisttps
push
iret
and
cmp
mov
and
in
mov
dec
and
push
xchg
lret
loope
or
or
pop
and
or
xchg
daa
mov
hlt
pop
frstor
pop
cmp
fbstp
loop
stos
testb
sbb
cmp
and
push
pop
sti
and
cs
and
xchg
enter
xor
mov
xor
add
testb
ss
or
cli
ss
adc
cmp
sub
inc
jecxz
movsb
xor
or
and
and
push
movsl
cmp
xchg
xchg
push
mov
data16
cmpb
mov
aam
lret
fsubrs
mov
dec
cmp
pusha
xor
push
loope
out
pop
mov
mov
dec
cmc
sub
push
cli
pusha
jo
xchg
jmp
rorb
add
lds
bound
fabs
push
jae
into
roll
jo
ret
jmp
xor
lret
icebp
test
mov
xchg
test
push
sti
add
cld
push
and
lret
sbb
dec
leave
xchg
orb
neg
mov
pop
pop
imul
mov
adcl
cmp
icebp
xor
cltd
sbbl
sbb
cltd
imul
push
fistpl
call
adcb
push
xchg
test
xor
repz
and
jl
cmp
cwtl
iret
lahf
bound
push
test
ss
pop
cwtl
mov
xchg
push
xor
sti
adc
aam
pop
ss
mov
mov
test
out
dec
pusha
adc
add
jmp
je
pop
cmpl
xchg
lahf
and
dec
mov
sbb
aas
in
push
je
clc
out
xchg
ret
cmp
cmp
mov
mov
test
insb
dec
mov
add
pop
push
fwait
mov
out
add
mov
bound
mov
addr16
add
push
fst
jne
into
mov
xchg
out
pop
jmp
mov
xor
or
lods
test
repnz
xor
cmp
xchg
cld
push
stos
mov
aad
push
mov
sarl
sti
lea
ret
inc
stos
pop
jl
int3
push
repnz
lods
add
pop
xor
scas
test
outsb
adc
add
and
mov
adc
xchg
inc
pop
sub
pop
sahf
subb
jecxz
sbb
vcvtpd2psy
mov
scas
push
jns
je
fidivl
ljmp
jno
pop
adc
mov
test
dec
push
fucomip
les
xor
ds
repnz
xchg
lret
adc
push
icebp
movsl
sbb
out
sarb
jp
jg
sbb
xchg
sbb
scas
dec
add
xchg
jp
cs
pop
gs
push
adc
cs
fisubs
loopne
inc
xchg
dec
xor
jle
out
popa
or
pop
add
cmp
pop
leave
dec
adc
and
xor
adc
push
test
xor
das
aad
movsl
stos
mov
mov
in
cmpsl
mov
dec
lods
ficoms
aas
adc
int3
loope
les
dec
loopne
adc
sub
outsl
ret
sbbb
insl
sbb
push
popf
push
cld
int3
dec
cmp
and
test
enter
adc
xchg
mov
and
add
inc
cmc
sarb
cmpl
and
sbb
dec
sbb
cmc
push
xor
rcl
cli
cltd
cmpsb
add
sub
rcrb
pop
xor
adc
movsl
cmp
push
mov
mov
mov
loop
jmp
mov
ret
cmp
ret
sub
xor
sbb
gs
cmp
dec
jne,pt
dec
sub
arpl
cltd
cli
or
jecxz
jns
pop
fwait
cld
enter
sub
out
add
shll
cmp
ds
pusha
cmovl
xchg
lea
movsb
out
mov
xor
inc
in
push
xlat
jbe
dec
cli
mov
push
push
sbb
into
arpl
fdivrl
xor
mov
sub
lods
mov
lds
outsb
push
mov
das
mov
shll
loopne
mov
lods
in
inc
dec
xchg
int
outsb
mov
adc
jmp
sahf
xor
int3
arpl
in
xor
popf
adc
aas
gs
jbe
xchg
xlat
repz
cltd
inc
pop
cmp
sbb
push
rorb
cs
loopne
mov
rol
sbbb
dec
repnz
jg
and
mov
aam
xchg
out
cmpsl
pop
push
mov
test
mov
jno
xor
mov
cmp
out
int3
arpl
jno
sub
xor
cltd
mov
adc
cmp
ret
add
mov
cs
jo
push
mov
xchg
rol
cmp
jecxz
jg
inc
sub
mov
cld
xchg
cmp
movsl
mov
es
adc
mov
push
sbb
ljmp
and
dec
mov
fnsave
rol
dec
test
xlat
add
popf
mov
cmc
sahf
cmpsl
outsl
mov
mov
cmp
call
mov
shlb
mov
lods
imul
out
push
les
pop
out
push
xlat
dec
cwtl
lea
sub
mov
and
shll
jb
mov
and
jb
out
xchg
cli
enter
push
shll
imul
xor
ds
lds
xchg
out
arpl
mov
pop
daa
inc
mov
jp
sub
leave
jg
mov
sbb
pop
loopne
push
addr16
loopne
into
cltd
or
in
jmp
pop
mov
mov
mov
stc
xlat
imul
xor
inc
ljmp
inc
in
aad
push
mov
adc
imul
stos
cmp
sbb
cmp
shlb
dec
repz
in
and
push
inc
clc
cmp
fsubr
dec
adc
push
mov
xchg
sub
lock
stc
out
inc
fsubrs
push
out
xor
jbe
ds
sbb
enter
mov
jns
cmc
or
push
dec
or
lds
data16
adc
cltd
jecxz
xchg
pop
daa
jb
cwtl
cmp
cmp
add
imulb
stc
jp
movsb
add
imul
lcall
adc
mov
repz
scas
in
and
jecxz
popa
jg
fucom
push
xchg
cmpsl
ja
testl
dec
dec
pop
xchg
rorl
loope
mov
xor
out
push
mov
inc
shrl
movsb
xchg
push
adc
call
cmp
outsl
mov
push
or
or
jmp
add
adcl
or
std
sti
or
leave
mov
inc
sbb
mov
xor
inc
stc
mov
ljmp
shll
popa
mov
das
add
cmpsl
dec
subb
mov
mov
xchg
subb
subl
setp
das
or
or
mov
jmp
pushf
adc
mov
or
data16
pop
pop
sub
mov
adc
mov
xorl
xchg
scas
out
and
pop
dec
out
sbbb
and
decb
lock
sub
and
lahf
in
cmp
int3
xchg
ljmp
insb
push
or
cmp
mov
inc
movsb
jg
cmp
repz
or
add
xchg
mov
pop
inc
jno
pop
adc
sub
jno
pop
aam
sbb
jg
mov
imul
leave
mov
jecxz
addr16
fldz
je
stc
mov
call
loop
aas
push
lock
push
adc
push
popa
mov
mov
push
jmp
in
cmp
imul
loopne
arpl
mov
fadds
jae
and
xor
xchg
sub
mov
shl
ljmp
data16
fiaddl
popf
xor
and
popa
and
pop
in
xlat
aad
lcall
push
subl
push
sbb
loopne
pop
cmc
fsts
insl
sbb
sub
pop
loopne
dec
or
mov
hlt
loopne
pop
adc
push
push
xor
xchg
mov
inc
insl
push
icebp
pop
imul
or
mov
mov
and
iret
push
scas
pusha
stos
push
int3
mov
lods
lcall
stc
jmp
stc
mov
aam
xlat
mov
repz
pop
jecxz
inc
cmc
adc
add
movsl
shrl
push
adcl
hlt
pop
jno
addr16
popl
fstl
jb
sarl
out
add
mov
pop
je
out
shll
sbbl
or
das
adc
mov
xchg
dec
jecxz
xchg
xor
cmovno
xor
adc
data16
sbbb
push
push
sbb
cmp
and
mov
cmp
xchg
jno
push
out
js
data16
mov
das
adc
stc
xorps
sbb
mov
cmp
inc
or
ret
push
shrb
jns
sub
mov
mov
test
mov
stc
pop
push
sbb
shrb
int3
lods
jg
out
xchg
push
sub
and
sbb
int
cmp
mov
ror
pop
lea
mov
xor
jbe
adc
mov
clc
clc
js
cmp
mov
sbb
xor
jbe
mov
out
cltd
imul
ljmp
xchg
cmp
xchg
xchg
mov
add
cltd
sub
test
inc
leave
sub
addr16
out
push
pop
pop
inc
jo
sarl
pop
sbb
hlt
cmp
in
in
mov
lcall
aaa
sbb
mov
nop
repz
mov
add
jmp
jmp
pushf
xor
jge
sub
push
mov
popa
xor
push
cmp
mov
scas
sub
xorl
fsts
xlat
mov
popa
and
jg
mov
mov
fistpll
jbe
out
jne
pop
sub
and
push
add
mov
or
xorb
mov
sbb
mov
adc
adc
jno
xor
push
cwtl
incb
movsl
call
cli
stos
jnp
jae
imul
mov
xor
xor
shll
xlat
cltd
adc
push
jle
cmp
adc
add
cli
xchg
pop
jne
pop
sub
lret
je
xchg
int
andl
test
mov
and
inc
pop
filds
in
sahf
push
jle
leave
imul
lret
data16
adc
push
mov
jns
cmp
dec
fnstcw
rcrl
xlat
and
popl
scas
pop
sub
and
lods
mov
dec
fldenv
pop
xchg
mov
inc
js
aas
mov
lods
les
xor
jle
add
sbbb
loop
adc
insl
inc
mov
pop
movsl
xchg
xchg
pop
or
mov
loop
mov
lret
repnz
xor
inc
sbb
mov
push
sar
jg
ret
mov
jne
add
inc
aam
mov
mov
adc
shl
cmpb
pop
ja
jae
jl
push
mov
jg
mov
pop
add
and
pusha
mov
xchg
push
pop
das
adc
mov
sahf
push
scas
inc
mov
mov
ffreep
rcl
ret
cmp
dec
repnz
inc
outsb
jnp
sti
xchg
add
repnz
rol
test
lock
dec
incl
adc
adc
pop
das
mov
push
add
jmp
arpl
jns
sbbl
dec
push
rolb
inc
fisubrs
sti
and
xchg
sub
sbb
mov
lock
call
inc
ljmp
rcrl
mov
xchg
fnsave
out
jle
inc
stc
popf
cld
stos
fldenv
clc
incl
fidivl
xor
fsubl
cli
sub
cli
mov
daa
outsl
inc
xchg
add
sbb
movsb
imul
sub
outsb
rorb
insb
pop
and
and
adc
push
rclb
push
sti
mov
and
sbb
and
pop
je
or
inc
out
notl
xchg
insl
inc
sub
fsubrl
push
stos
jbe
test
fidivl
cmp
cmpsb
inc
fnstsw
mov
sub
pusha
test
inc
gs
jmp
mov
push
cmc
xor
mov
jl
pop
scas
lods
cmp
jnp
mov
out
iret
pop
cmp
push
aam
cmp
pop
movsb
repnz
dec
sbb
mulb
mov
xchg
in
xlat
outsb
rorb
cmp
lock
sarl
push
dec
and
xchg
cld
outsl
sbb
and
in
jecxz
dec
mov
adc
out
adc
aaa
mov
call
daa
mov
mov
adc
pop
lret
pop
jne
mov
in
pop
cmp
xchg
mov
popa
movsb
push
adc
cmp
cmp
jb
xchg
sub
mov
jmp
push
movsl
sbb
dec
aam
clc
pusha
sar
mul
mov
and
mov
push
add
inc
aad
jns
frstor
sbb
enter
aas
sub
push
lods
popf
mov
cld
aaa
sbb
add
pop
mov
lea
cmp
mov
iret
sbb
incb
xchg
ja
or
and
push
push
sti
dec
mov
xchg
shl
js
insl
imul
xor
and
ret
out
fwait
adc
shll
hlt
adc
sbb
bound
xchg
cmp
sub
lahf
notl
in
bound
aad
fdivl
imul
or
inc
xlat
mov
pop
cmc
jo
or
dec
dec
and
and
or
adc
add
das
test
orl
mov
and
xchg
data16
sub
sarl
enter
sbb
cmp
mov
or
dec
sbb
test
scas
stc
je
out
inc
ljmp
imul
fsubr
fs
mov
dec
jbe
rcrb
xchg
roll
ja
repz
xchg
xor
mov
je
outsb
cmc
icebp
lods
xor
imul
jecxz
cwtl
call
cli
leave
scas
pop
xchg
aas
pushf
or
push
push
int3
adc
sti
push
ljmp
sub
cmp
scas
out
out
pop
mov
push
test
jns
push
mov
push
aaa
xor
xor
or
mov
dec
std
xchg
inc
ror
enter
outsb
cmp
add
add
les
daa
arpl
cmpsb
xchg
add
addl
or
jb
xchg
and
xor
inc
or
cmp
pop
popa
adc
xlat
mov
cmp
mov
xchg
add
sub
sub
jae
pop
or
mov
cmpb
sub
pop
pop
push
push
or
int3
test
and
adc
dec
fsub
std
rcr
dec
into
stc
dec
xor
sub
int
sbb
jbe
lock
rcrb
fld1
lods
clc
pop
ja
pop
dec
daa
jle
shl
test
cmc
fisubrs
mov
mov
mov
xor
pop
mov
sbb
incb
and
ret
push
cmp
jp
pop
cmpsl
pop
outsb
xchg
xor
mov
jp
addr16
adc
mov
out
test
mov
fisttps
xor
mov
adcl
xchg
loop
mov
sub
pop
rol
ja
les
push
add
fdivrl
mov
cld
inc
mov
mov
push
xor
out
xor
popf
shl
push
aaa
or
or
mov
insl
pop
int
decl
in
xchg
adc
pop
and
gs
jns
push
inc
imul
sbb
jmp
cmp
lahf
lods
enter
mov
ret
dec
pop
sahf
or
pop
push
stc
dec
mov
aad
shll
lret
das
lock
pop
das
mov
inc
adc
fadds
inc
pop
in
inc
mov
ljmp
cmp
xchg
pushf
mov
push
aas
je
outsb
add
push
xchg
mov
inc
mov
pop
mov
sbb
rcl
add
dec
dec
jmp
rcrl
dec
andb
jnp
inc
xor
addr16
push
jl
adc
je
insb
or
xor
cli
movsl
iret
mov
mov
push
cmp
or
mov
pop
in
push
sarl
into
fidivrl
test
cmp
pop
into
mov
gs
addr16
add
or
popl
nop
push
jmp
popa
das
push
fisttpll
test
inc
imul
fwait
ss
cwtd
mov
test
shrb
lret
arpl
push
cmpsl
jle
pop
lret
and
cmc
out
enter
test
fldt
shll
sbb
mov
repz
in
push
stos
xchg
dec
dec
pop
dec
mov
mov
pop
movb
jp
hlt
addr16
sbb
scas
sarb
mov
push
fdivr
jmp
sub
mov
cmpsl
sub
outsb
fwait
shrl
cmp
subb
jne
mov
filds
adc
out
mov
sbb
mov
add
pop
sub
cmp
jae
xor
mov
cmpl
call
mov
cmp
cmp
fdivr
adc
pop
push
jb
mov
fidivrs
loopne
adc
fidivl
lahf
pop
cs
pop
dec
push
insb
mov
cmpsb
int3
lcall
xor
push
pop
jae
into
negl
sub
shlb
ja
aas
push
push
out
int
cltd
mov
outsb
popf
cli
inc
fwait
or
outsl
push
daa
daa
hlt
test
jb
add
add
divl
test
and
mov
push
sub
cwtl
jb
sub
xor
ret
ret
hlt
xchg
fbld
adc
stos
inc
dec
or
add
fwait
imul
mov
int3
mov
add
jmp
fwait
lods
shll
rcrl
loop
and
xor
mov
dec
dec
jecxz
in
and
dec
dec
dec
in
je
inc
sarl
pusha
jl
lds
rorl
leave
addb
fsts
data16
lret
jno
fcmovnu
jo
aam
inc
stos
pop
dec
outsl
ja
roll
bound
pop
imul
les
mov
pop
call
fldenv
cmp
test
sub
icebp
add
fs
cld
gs
lcall
cmovbe
jmp
imul
ret
jns
sub
mov
push
into
sub
ret
mov
ljmp
or
dec
mov
mov
mov
movsb
iret
cmp
subb
jns
mov
fwait
daa
xchg
pop
sbb
push
js
lds
sbb
mov
int
gs
icebp
jb
jecxz,pn
jp
sahf
roll
loopne
dec
mov
and
dec
xchg
sub
cmp
or
int
add
into
sbbb
push
sbb
rcll
xchg
jns
ljmp
dec
stc
push
jbe
jo
test
xchg
lret
or
inc
mulb
js
xor
ret
and
xchg
adc
icebp
shlb
push
xchg
leave
aaa
mov
stc
mov
add
aaa
out
lea
gs
sti
je
pminub
xor
ss
add
iret
jbe
cltd
cld
mov
lret
test
cmp
pop
add
and
add
aas
xchg
add
adc
in
mov
enter
jecxz
test
sub
aad
movsl
rolb
fwait
add
inc
bnd
jmp
fcompl
lock
and
int
rol
jne
and
mov
mov
cmc
push
testb
or
and
push
xor
js
sbbl
jne
fiaddl
mov
sbb
or
mov
shld
sub
ja
loopne
imul
xchg
jbe
jl
enter
mov
cmp
iret
rcl
pop
les
add
dec
loope
and
hlt
mov
push
jno
test
addb
leave
inc
sbb
jp
push
mov
cmpsl
adc
addr16
xor
xchg
stos
inc
ja
negb
dec
test
scas
mov
out
push
fdivs
mov
push
or
in
jge
clc
cmpb
into
dec
pop
dec
xor
jp
aad
mov
cmpsl
pop
adc
data16
add
mov
xchg
loop
test
std
mov
mov
jbe
out
insb
hlt
mov
outsl
arpl
lcall
jne
idivb
xor
sub
push
sbb
mov
cmp
cltd
rcrl
push
mov
lcall
adc
mov
xchg
xchg
stos
daa
cmp
sbb
jl
cmpl
stos
add
mov
add
inc
fnsave
idivl
aam
fs
fcomip
xor
popa
testb
mov
adcl
xchg
lods
jl
ljmp
into
jne
ja
adc
jne
xor
pop
rclb
stos
and
jns
sahf
out
iret
loopne
pushf
jbe
stos
mov
sarl
jecxz
jp
jns
lea
add
push
and
jno
movl
jle
push
mov
in
cs
dec
cmc
and
sub
roll
insl
push
aas
sub
repnz
mov
or
testl
mov
repz
divl
ja
ds
sub
popa
outsb
dec
push
in
insb
cmpsl
popf
out
lret
pop
mov
lods
and
stos
fidivrl
cmp
dec
adc
add
push
test
and
xchg
andb
rol
ss
jg
sub
fimull
xchg
movsb
add
adc
sub
xor
xchg
and
stos
daa
inc
popa
or
cmc
frstor
jns
ljmp
or
cli
aas
ret
aaa
mov
xchg
fistpll
nopl
add
pop
jge
push
fadds
add
mov
aaa
cld
sub
std
pop
pop
xchg
enter
sahf
inc
xchg
ret
outsl
lea
aaa
add
pop
xor
pop
push
fisttps
es
test
pushf
mov
dec
test
ret
jnp
and
fwait
mov
repz
jae
aam
xchg
call
push
lahf
jae
ljmp
loope
xchg
jb
push
pop
xor
pop
shl
jl
clc
loopne
inc
mov
pop
jg
sbb
inc
leave
add
add
fiadds
push
mov
cmp
xlat
mov
mov
mov
xchg
int
cmp
mov
fwait
jmp
and
mov
xchg
lock
xor
cli
mov
cmp
xchg
movsb
jmp
pop
enter
cmc
mov
mov
bnd
rolb
icebp
mov
add
loopne
inc
rorb
shll
fsubrl
lcall
or
or
xchg
dec
subb
dec
push
mov
ret
inc
and
sbbb
sub
repz
movsl
icebp
xchg
sbb
push
lcall
mov
mov
mov
jns
mov
mov
sbb
fisubs
jns
dec
xor
sti
and
cmp
lret
fsubrl
cwtl
int3
xor
shrb
adc
ss
imul
sbb
hlt
mov
stc
add
mov
int
cmp
mov
mov
and
inc
push
ds
add
add
inc
push
dec
pop
dec
sahf
or
xlat
mov
arpl
shlb
into
mov
push
lcall
push
push
cwtl
loope
mov
xor
or
mov
pop
mov
xor
mov
jae
jo
jmp
xor
push
and
or
popf
fs
pusha
push
stos
sbb
jbe
pop
das
adc
scas
lods
imul
inc
push
sti
mov
arpl
test
mov
mov
lret
jb
outsb
jp
sbb
repz
add
or
das
fdivl
jb
jo
ret
jmp
loopne
sbb
jo
pop
es
ljmp
cli
xor
lock
in
leave
adc
jne
and
or
js
xchg
xor
jmp
pusha
jb
fcompl
mov
sbb
xor
clc
ds
lcall
out
lcall
jb
push
lods
lahf
xchg
ret
pushf
rorl
ret
dec
push
pusha
clc
mov
sbb
loop
stos
cmp
pop
ds
inc
pop
lea
cmpsb
lret
sub
in
push
insb
pop
repz
arpl
xchg
adcb
mov
shll
sub
insb
inc
out
push
dec
fnstcw
pop
out
ss
mov
push
lcall
in
aas
xor
mov
ret
call
fmull
mov
test
xchg
sbb
int3
js
mov
hlt
in
std
cmc
xchg
or
aaa
call
inc
sti
hlt
xchg
in
push
or
push
sub
xchg
call
mov
xor
lods
push
repnz
adc
xchg
stos
jns
sbb
fisubs
sub
pop
push
das
test
lock
sbb
fsts
or
push
push
test
std
mov
mov
xchg
mov
sub
and
sahf
mov
dec
pushf
rcl
and
dec
add
testb
stc
sarl
pop
rol
push
repz
push
aas
xor
adc
in
dec
sub
push
sub
ss
push
sbb
xorb
sub
paddb
outsl
add
push
lret
cmpsl
in
push
and
xchg
mov
outsl
mov
fidivrs
push
mov
pop
xor
sub
xor
jecxz
xchg
xchg
dec
mov
les
adc
stos
dec
mov
sbb
push
push
sub
add
or
jmp
in
pop
shll
data16
es
je
shlb
xor
sarb
ja
pop
sub
fbstp
mov
fdivrl
mov
mov
mov
mov
movsl
loope
in
and
mov
cmp
pop
pop
out
popa
xchg
imul
orb
enter
push
insb
imul
test
ficoms
mov
mov
pushl
mov
clc
mov
cmp
or
outsl
xchg
pop
and
sub
pop
sbb
dec
lret
lahf
xchg
sbb
xchg
mov
fisttpl
out
loop
cmp
sub
pop
roll
xlat
lcall
cmp
jmp
or
addr16
popf
xor
mov
vmovdqa
lahf
lea
adcb
push
jge
mov
arpl
dec
push
sbb
and
sub
std
adc
das
dec
out
subl
xchg
js
call
in
adc
xor
addr16
ljmp
lea
out
push
mulb
adc
notb
into
inc
jb
adc
in
xlat
mov
or
bound
cmp
mov
mov
movsl
pop
shl
shrl
jl
mov
int3
out
mov
cmp
pop
mov
push
icebp
cmp
add
mov
inc
or
push
sub
jo
adc
pop
adc
aam
movsb
sub
push
jns
mov
sub
adc
pop
add
cmp
cmp
xor
and
xor
mov
push
push
push
pushf
mov
xchg
aad
ret
dec
cli
jno
mov
pushf
testl
inc
xchg
pop
orl
xor
push
add
mov
sbb
mov
je
jo
xor
sti
xchg
xor
les
push
sbb
cmp
push
jg
sbb
mov
push
cmp
sub
xor
xchg
mov
fnstcw
orl
and
pop
sbb
xchg
aam
repz
pop
testb
call
in
push
cmp
jbe
jae
and
jmp
adc
shlb
fiaddl
mov
push
rcll
push
test
popf
loopne
xor
xlat
sbb
sbb
repnz
dec
pop
inc
lcall
stos
xchg
jnp
push
mov
or
addl
test
fldl
out
xchg
inc
loop
and
into
orl
pop
cmp
dec
add
pop
cmpsb
dec
aam
in
pop
loop
enter
or
push
mov
fld
pop
fnsave
xor
aaa
fiaddl
movsl
sbb
dec
xchg
in
clc
call
jmp
ss
xor
or
cmp
sahf
push
mov
ret
sbbl
jmp
push
test
pop
popa
xor
xor
push
inc
mov
ret
int3
filds
sub
mov
test
mull
test
lret
pop
sub
lods
icebp
out
and
jae
mov
rolb
jae
lock
scas
lret
cld
je
enter
out
push
mov
stos
jbe
sub
pop
jle
adc
scas
mov
clc
push
rorb
pop
nop
dec
dec
pusha
mov
movb
dec
rol
xlat
fwait
sti
mov
lea
repnz
pop
jnp
ja
out
sub
jg
jge
and
testl
sbb
adc
pop
jae
pop
arpl
js
iret
fnstcw
daa
or
cmp
scas
jns
ljmp
fs
repnz
jne
fldenv
add
adc
ret
pop
popf
fyl2x
ret
dec
mov
stos
or
movsb
mov
fstpl
fiaddl
fadds
push
sub
xor
push
mov
lret
pop
pop
xor
cmp
cmp
clc
dec
cwtl
pop
pop
xor
add
adc
mov
xor
xchg
xor
imul
arpl
cmp
loopne
pop
movl
or
mov
inc
movsb
cmp
ja
adc
inc
test
dec
test
test
dec
out
arpl
gs
xchg
pop
clc
push
and
in
push
fiaddl
hlt
mov
je
xchg
and
mov
push
dec
jne
testb
pop
ss
sti
shll
pop
lahf
push
cltd
std
das
test
lea
push
push
mov
lods
jmp
xchg
stos
orl
xor
xchg
arpl
pop
lret
stos
les
loopnew
lods
lret
add
mov
cmp
inc
arpl
sahf
int
push
inc
notl
xor
pushf
or
cli
shlb
pop
out
xor
loopne
jp
popf
adc
add
xchg
jae
adc
xor
or
adc
clc
mov
xchg
pop
adc
dec
mov
add
dec
mov
ja
int3
aam
arpl
add
push
and
push
cmpsl
xchg
mov
xchg
pop
outsb
sub
scas
in
or
aas
mov
cld
xchg
sub
and
popa
loop
scas
dec
pop
cmp
dec
jge
shrl
cmp
stos
sub
adc
and
xor
add
mov
add
adc
lds
jno
arpl
jnp
jno
shl
imul
mov
sbb
dec
inc
mov
insb
mov
pop
imul
xchg
pop
addr16
mov
push
es
ja
or
cmp
jmp
lret
mov
xchg
es
das
jmp
mov
ret
sub
test
jbe
xchg
std
leave
cltd
je
inc
xor
cld
adc
or
xor
and
pushf
xor
mov
mov
repz
mov
add
jno
scas
aad
xchg
jp
ja
repz
pop
mov
pop
loope
nop
aad
and
cmp
scas
bound
xchg
jnp
inc
cmp
popa
call
lret
call
sbb
push
mov
sahf
xchg
loope
shll
rolb
dec
jmp
pop
loop
mov
out
sbb
cld
or
xlat
popa
mov
cmp
test
lret
push
push
xorb
push
imul
in
add
cmpsb
pop
arpl
int3
sbb
outsl
mov
pop
xor
mov
inc
arpl
insl
xchg
inc
inc
mov
push
inc
sub
push
mov
and
mov
cmp
jbe
es
sbb
outsb
cmp
mov
jb
xor
lcall
js
ss
int3
jno
cmc
sahf
jmp
xor
jge
mov
cmp
fnstenv
jns
inc
and
imul
fisttps
add
sub
pushl
mov
jp
mov
out
fstps
shl
adc
jge
cmp
adc
jb
adc
adc
stos
sub
stos
mov
ljmp
push
mov
fstpl
out
arpl
xchg
mov
cmpsl
js
lret
lock
rorl
sbb
adc
jl
call
addr16
add
mov
mov
in
pop
sbb
bound
call
imul
jecxz
jne
mov
icebp
insb
ret
xor
lods
js
add
mov
push
inc
ret
rcrb
push
or
sbbl
dec
adc
push
cmp
subb
xchg
jo
or
mov
add
sub
rcrl
ss
add
scas
sbb
mov
inc
and
ret
repz
mov
push
mov
movsb
icebp
pop
test
push
dec
push
icebp
rcll
ret
loop
xlat
pushf
out
jecxz
sbb
aas
decl
push
mov
sbb
bound
adcl
cmp
mov
movsb
mov
out
sbb
mov
inc
cmp
shll
xchg
lret
shlb
xchg
loop
dec
lret
hlt
adc
imul
out
sub
pop
in
stos
aam
mov
mov
fsubrl
jns
mov
cmc
test
jbe
arpl
data16
std
inc
push
mov
outsl
lods
cmp
shrl
adc
jp
mov
mov
sbb
cld
shll
jns
ja
adc
push
lods
arpl
add
push
sub
cmp
cli
push
loop
ficomps
dec
fiaddl
mov
rorb
cmpsb
jecxz
xchg
adc
add
push
mov
cld
sbb
addl
push
sub
xchg
push
aas
jp
mov
test
fs
sarb
jg
sbb
jge
es
adc
push
push
mov
inc
lods
cmp
inc
rcll
outsb
loope
rcrl
shll
mov
out
adc
test
and
das
test
pop
add
stc
in
sarb
push
push
insl
sahf
gs
iret
int
loope
pop
push
inc
jae
dec
lahf
sub
inc
pop
lock
add
sti
rcll
adc
scas
lea
leave
bound
mov
nop
in
arpl
lahf
or
leave
sub
fwait
in
icebp
mov
pop
enter
sub
xor
cmp
pop
outsb
push
sbb
arpl
fdivl
frstor
mov
push
cwtl
xor
mov
sub
faddl
sub
pop
or
imul
jg
rcrb
mov
push
sbb
mov
cmp
pop
loope
cmp
mov
jecxz
ret
add
pop
imul
out
jmp
add
mull
pop
or
addb
pop
push
aad
bsf
pushfw
xchg
out
sub
push
stos
push
scas
push
je
push
dec
adc
ss
push
adc
inc
mov
dec
pop
xchg
or
fistpll
scas
mov
call
mov
cmpl
fcomps
and
addb
test
mov
sahf
insl
fs
sahf
mov
mov
pusha
pop
lods
repnz
mov
push
mov
xor
movsb
int
fmull
scas
inc
inc
inc
pusha
lret
aas
imul
movsl
pop
jno
dec
pop
insb
mov
movsl
sub
fnsave
mov
outsb
hlt
or
sub
cmp
adc
enter
pop
cmc
and
iret
jl
sbb
pop
cmp
ret
mov
icebp
jecxz
mov
repz
dec
push
sub
nop
daa
ficoms
jmp
or
add
mov
cwtl
mov
pusha
das
fdivl
lret
nop
add
pop
xchg
xor
loop
lds
add
xor
lret
bound
adc
lods
pop
notl
mov
lcall
mov
in
jae
push
imul
pop
cmpsl
jge
lods
mov
xchg
cwtl
adc
lods
lahf
xor
lds
ret
fsts
cmpsb
sbb
jne
adcb
xlat
mov
loopne
inc
insb
flds
adc
inc
and
xchg
lcall
fsub
jns
out
push
adc
roll
add
add
ljmp
lock
shlb
and
xchg
push
add
xor
cs
call
shr
stc
adc
jge
push
xor
jmp
ds
mov
mov
mov
dec
adc
popf
mov
ja
and
jne
xchg
lret
and
push
push
adc
loope
aaa
icebp
mov
out
inc
aas
std
dec
adc
sbb
call
xchg
ds
add
dec
ljmp
shlb
stos
mov
fcoms
out
jb
cmc
sbb
stos
popl
and
insl
adc
jbe
inc
test
and
inc
in
cltd
push
inc
mov
mov
sub
je
ds
add
repz
in
push
andl
sub
pusha
shr
test
lahf
sahf
fnsave
cmp
loope
sti
cli
xchg
sub
sahf
xor
rorb
dec
mov
notl
filds
xchg
mov
sahf
mov
dec
ss
mov
mov
fld
xchg
inc
xorl
mov
shlb
out
nop
fwait
push
out
pop
fstpt
sbb
in
sarb
ret
mov
in
jnp
xchg
popa
lcall
jns
lock
fwait
pop
in
jle
in
dec
mov
mov
rcll
dec
push
jnp
xchg
jg
andb
fwait
xchg
mov
rclb
rcll
cmp
mov
xlat
sbb
xchg
mov
push
jl
push
jle
mov
movsb
and
loop
daa
add
xchg
pop
leave
inc
testl
aad
adc
or
lea
and
imul
ror
pop
pop
jmp
loopne
movsl
add
inc
ljmp
xchg
ffree
add
adc
pop
mov
push
cmc
push
lahf
add
sub
cmp
mov
sbb
dec
fldenv
hlt
fucomip
in
jb
inc
loop
jo
cmp
mov
inc
addr16
pop
cltd
push
lods
inc
fstps
pushf
xor
nop
jl
mov
movsb
imul
push
in
add
jne
sbb
jae
mov
sbb
cltd
pop
sub
dec
popf
dec
xchg
mov
sti
inc
sbb
mov
push
cs
add
sub
add
add
adc
jge
adc
data16
insb
lcall
cmp
dec
push
push
pop
scas
in
insb
rcrb
inc
arpl
pop
mov
mov
mov
lret
jb
pop
in
xchg
sbb
outsl
cmp
imull
sub
outsl
cmp
sub
movsb
pop
imul
xor
inc
pop
sub
sub
pop
int
add
adc
or
out
inc
mov
cmp
movsb
ret
jecxz
sbb
add
test
xchg
sub
sub
mov
jg
mov
jp
mov
int3
pop
push
in
adc
mov
fcmovbe
fucom
stc
add
jle
test
movsl
jmp
fwait
daa
outsb
pusha
xor
mov
or
sarl
mov
mov
inc
or
repnz
in
pop
jle
pop
stc
sub
ja
fisubrl
lods
fucomp
rcr
sbb
or
cmp
rcr
inc
fmul
xchg
mov
fnsave
push
adc
test
enter
in
or
pop
jne
scas
pop
pop
and
dec
jnp
cld
mov
pop
xor
inc
sbb
mov
mov
ficomps
movl
orb
pop
je
add
pushf
mov
add
pop
push
aad
movsl
dec
into
leave
cmpb
fsts
or
popa
cmp
aam
mov
int
call
iret
sbb
int
xor
mov
movsl
jecxz
mov
ljmp
pushaw
fistl
mov
lock
js
ds
int
xchg
push
cmp
or
arpl
mov
pop
icebp
mov
pop
js
mov
xchg
ljmp
lcall
stc
notb
sbb
arpl
jns
lret
arpl
mul
sbb
and
inc
push
into
cs
test
rcl
call
and
push
lods
mov
pop
xor
mov
rcr
out
enter
loop
cmp
out
cmp
cmp
and
out
mov
lds
stos
and
test
jmp
xor
jae
movsb
mov
push
mov
movsb
in
pop
push
mov
adc
bound
pop
stos
pop
mov
js
add
out
rcll
dec
inc
fdivl
ret
sti
clc
movsb
pop
scas
xchg
mov
into
inc
or
jmp
push
sbb
mov
push
out
cmc
in
movsb
test
mov
lcall
int3
mov
stos
mov
insl
lret
dec
and
pop
push
out
inc
ret
outsl
outsl
inc
test
negb
ss
out
pop
mov
addb
sti
dec
pop
movsb
dec
clc
pop
fwait
or
and
jno
outsb
mov
push
testb
xlat
adc
or
adcl
test
mov
push
hlt
mov
xchg
mov
mov
call
or
hlt
push
xchg
sub
add
sahf
jb
lods
jg
xchg
and
add
push
popa
testl
mov
pop
popf
or
das
adc
jo
popl
movsl
stos
cmp
outsb
es
aaa
push
jecxz
dec
shrb
lahf
stos
rcll
pop
outsl
arpl
out
lcall
test
sti
push
imul
repz
sbb
lahf
adc
sbb
cli
xchg
stos
lds
or
call
loopne
lret
ret
popf
push
call
push
outsl
push
test
outsl
int
mov
ficompl
add
mov
pop
popf
into
gs
push
in
pop
sbb
inc
test
dec
xor
xor
cld
pusha
cltd
sub
pushf
stos
xchg
into
adc
sub
push
movsl
test
sub
aaa
stos
xchg
sub
mov
inc
push
shlb
pop
mov
mov
in
test
add
es
mov
cld
xchg
adc
mov
cltd
inc
sbb
daa
mov
jl
arpl
insb
xor
mov
pop
mov
imul
int3
sti
in
leavew
mov
adc
add
mov
scas
push
std
xchg
inc
push
adc
cmp
sbb
aaa
lods
stos
mov
fsin
add
xor
and
jle
fwait
xor
and
dec
popf
or
inc
sub
test
inc
mov
jmp
in
fidivrl
movsb
insb
sti
xchg
aad
cmp
jnp
xchg
enter
out
sub
leave
xlat
mov
andl
mov
movsb
jo
mov
aad
ja
enter
lret
or
pop
out
stos
jle
shlb
xchg
loope
cli
cmp
into
xchg
sbb
xor
shll
das
test
or
test
cwtl
ret
lret
push
adc
mov
jne
in
mov
jmp
cmp
and
pop
cli
dec
pop
adc
fildll
push
mov
nop
xor
mov
xchg
bndldx
cmc
jnp
cmpsb
insb
push
jbe
out
jne
jp
lret
adc
mov
hlt
cmc
lods
test
pop
push
es
hlt
nop
mov
inc
icebp
pop
dec
push
aaa
int
mov
and
push
je
add
ja
mov
mov
mov
sub
pop
lret
aaa
push
cld
cmc
sbb
cld
into
aaa
std
cmp
mov
and
leave
ret
fbstp
and
xchg
pop
cli
jecxz
add
inc
or
mov
dec
out
iret
jbe
ds
xor
mov
inc
lods
mov
ret
xor
push
jne
pushf
jb
cmp
mov
push
clc
dec
loop
xlat
int
sub
jge
xor
jmp
insl
cmp
jp
ljmp
jecxz
mov
aam
dec
mov
fcmovnbe
loope
cli
inc
jge
push
mov
sbb
sub
pop
addr16
mov
loopne
movsl
aad
loopne
loopnew,pt
into
insl
xchg
hlt
mov
xchg
xchg
test
push
xor
mov
push
xor
imul
push
int3
repz
rclb
into
inc
or
addr16
pushf
sbb
mov
call
jp
gs
and
cmp
jno
scas
jbe
pop
jb
jle
stc
leave
nop
inc
repz
adc
mov
add
sahf
jno
push
cli
shrb
pop
pop
mov
inc
lock
arpl
shll
mov
mov
mov
into
jae
xchg
sahf
mov
or
xchg
cs
xchg
pusha
mov
add
pop
cs
lock
sahf
jns
pop
stos
mov
inc
fsubrl
cld
gs
stc
mov
cmpsl
push
pop
mov
or
incb
dec
pop
aas
stos
rcr
mov
lock
mov
fnstenv
xchg
xor
pop
push
jns
cmp
pop
insb
mov
insb
dec
lahf
mul
aaa
inc
cwtl
jno
popl
xor
jg
outsl
and
inc
dec
nop
jle
sub
bound
xor
pop
movsl
in
out
inc
int
mov
ja
or
push
out
xchg
mov
and
pop
fisttps
mov
sub
sub
in
ljmp
xchg
dec
hlt
mov
or
mov
aad
stc
push
outsb
test
mov
sbb
cmpsl
divb
inc
mov
fisubl
fidivrl
imul
dec
or
das
fnstcw
xchg
addr16
adc
popf
out
mov
stos
loope
sbb
incl
push
sahf
mov
mov
aad
notl
add
cmp
gs
and
sub
jmp
popf
or
iret
jge
and
in
imul
daa
inc
dec
icebp
dec
jmp
or
cli
cmp
stc
popl
inc
pop
stos
mov
add
xchg
hlt
lret
push
sub
push
call
pop
push
xchg
in
out
js
imulb
sub
call
or
xor
test
int
push
pop
cwtl
das
mov
push
jno
sbb
rolb
inc
fbld
cmc
dec
pop
nop
lock
pop
xor
and
cmp
ds
xlat
mov
fstps
mov
es
aad
inc
inc
push
nop
jne
sbbb
leave
insb
aas
sbb
pop
or
or
cli
or
add
test
jno
sahf
sub
std
mov
cwtl
das
mov
imul
inc
imul
adc
mov
xchg
mov
or
and
cmpl
push
scas
sbb
fmuls
cmp
data16
insl
roll
jne
popf
fs
iret
mov
scas
cs
fimull
and
jb
jg
dec
rclb
ja
hlt
test
or
push
cmpsb
popa
inc
stc
test
mov
arpl
jnp
mov
pop
xchg
jecxz
xor
jb
dec
sub
out
fcmovb
or
fwait
cmp
and
lret
push
adc
jns
or
mull
or
shlb
xor
rorl
in
insl
xor
les
xchg
cmpb
cmpsb
test
and
movsb
fsubs
push
adc
mov
fnsave
mov
sub
outsl
mov
mov
jmp
shrl
ja
dec
stos
hlt
data16
mov
or
aad
sbb
inc
mov
and
mov
dec
scas
movsb
repnz
add
cmc
xchg
add
enter
xlat
jge
cli
dec
aaa
shl
lcall
pop
jle
xchg
pop
mov
push
test
jle
jne
sub
adc
lret
decb
pop
call
sub
adc
or
out
jge
adc
or
repz
inc
mov
pop
or
les
jns
sbb
dec
enter
outsl
jnp
dec
pop
lret
out
push
inc
lahf
aad
mov
mov
in
loop
xor
jecxz
xor
xlat
xchg
mov
outsb
movsl
sub
pop
jae
scas
lret
jge
nop
mov
fnstenv
mov
adc
push
mov
jg
or
pop
mov
stos
inc
lods
sbb
imul
ret
loopne
jecxz
and
clc
push
aad
in
sub
imul
mov
loopne
int
icebp
adc
add
xor
add
adcl
lods
inc
shlb
cmc
cmp
dec
cld
lcall
in
add
jp
scas
inc
stos
xchg
inc
imul
xchg
scas
or
imul
sub
lds
sbb
cmp
mov
dec
addr16
cltd
xchg
movsl
in
mov
mov
lahf
hlt
je
sub
arpl
scas
lcall
push
dec
pop
es
ljmp
sub
addr16
jl
mov
jae
test
adcb
shll
xor
xor
loop
mov
sub
mov
outsb
out
mov
mov
adc
mov
jmp
push
add
push
pop
dec
sbb
sub
mov
pop
cmp
lods
bound
cmp
insb
ljmp
jno
cmc
loope
js
mov
pop
jno
in
cs
mov
adc
cmpsl
movsl
inc
adc
jb
push
fdivrl
ljmp
sub
insl
rcrl
jmp
insl
dec
xor
jg
iret
int
mov
out
push
mov
push
mov
rep
inc
mov
adc
lods
pop
decb
or
mov
add
leave
xlat
pop
push
push
repz
fwait
sbb
ret
out
xchg
and
sub
mov
mov
outsl
cmpsl
dec
jge
mov
pop
enter
add
out
push
pop
jmp
xchg
jmp
call
sbb
adc
daa
jb
leave
scas
or
xor
bound
jl
call
sub
add
call
leave
push
ss
insl
jo
cmp
push
in
add
adc
mov
cmp
ficoml
push
cmpsb
enter
cmpsl
std
mov
imul
out
jno
and
out
cmpb
sarl
inc
jne
cmpsl
mov
enter
insl
sbbb
mov
mov
stc
fdivl
push
imul
stos
jmp
inc
cs
adc
jle
mov
loope
daa
sub
jo
jl
insb
scas
jp
cmp
dec
xor
aas
xchg
cmpsl
ds
fst
cmp
sbb
dec
adcl
rcrl
hlt
scas
shrb
lcall
xor
inc
xor
adc
leave
mov
jecxz
outsl
dec
xchg
adc
js
out
xor
in
aad
push
lds
jecxz
mov
push
and
in
setg
mov
ficompl
jmp
call
subl
lret
rorb
fwait
sub
inc
xchg
aam
scas
jo
cmp
ret
and
sbb
mov
into
adc
mov
fs
inc
out
xchg
fs
pop
dec
sbb
enter
gs
aas
push
mov
ret
sbb
fsubs
addr16
jp
repnz
imul
xor
aam
push
insb
cwtl
cmc
call
mov
ficompl
stc
mov
jl
icebp
sbb
mov
insl
mov
fdivrl
xchg
push
cmp
jnp
cld
fisubrl
insl
xchg
jmp
pop
ljmp
ss
add
rolb
sub
stos
int3
sub
shll
aaa
fidivs
or
les
add
or
in
dec
adc
pop
test
mov
dec
faddl
lret
xchg
mov
dec
mov
test
lcallw
jne
xchg
cmp
aaa
or
cmp
cmp
push
neg
cmc
dec
dec
out
inc
lahf
movsl
dec
mov
ja
leave
lcall
sbb
mov
mov
add
cmpsb
push
lock
test
dec
loopne
das
popa
call
leave
mov
pop
mov
fsubp
inc
mov
out
insl
xchg
test
and
lock
idivb
imul
sti
sbb
jmp
add
dec
inc
mov
nop
repz
add
addr16
sbb
sub
mov
fwait
sub
and
ja
pop
scas
push
nop
jb
in
lods
pop
jno
cmp
jge
mov
sti
mov
pop
mov
lgs
in
push
xor
imul
add
pop
imul
out
adc
repnz
cmp
dec
mov
movsl
in
aad
loope
int3
mov
push
jle
and
adc
push
cmp
ss
clc
mov
mov
ret
or
icebp
xchg
dec
into
fidivrs
xor
cmc
cmp
pushf
and
inc
inc
mov
lock
fnstenv
xchg
and
or
fcomps
jl
adc
pop
out
mov
outsl
ljmp
lea
adc
sbb
sub
mov
popaw
mov
insl
and
sbbl
mov
lret
mov
ret
jo
outsl
mov
sahf
addl
out
add
mov
mov
sub
test
adc
lahf
add
inc
jbe
push
add
je
dec
fidivl
push
and
pop
sbb
std
aas
or
xchg
outsl
mov
cmp
sbb
dec
ja
es
and
lds
movsb
pop
sub
lods
add
add
jmp
xchg
mov
mov
dec
aaa
scas
outsb
shrb
and
jne
lods
frstor
pop
shl
push
sub
cmp
xor
push
pop
sbb
outsl
cmp
push
push
pop
pop
fisttpll
lret
enter
pop
cmpsl
mov
mulb
xlat
sbb
imul
xor
fwait
push
jne
insl
cmpsb
xor
adc
repz
pop
test
or
icebp
jle
jge
adc
jge
not
addr16
or
imul
fcomip
mov
mov
mov
neg
repnz
mov
dec
push
in
mov
shll
and
and
test
mov
or
mov
es
repz
test
ds
mov
jle
mov
xor
rcrl
cmp
loope
push
stos
jp
push
pop
fnsave
xchg
mov
pushf
push
and
dec
clc
push
sub
jmp
mov
inc
cli
pusha
xchg
xor
sti
adc
sub
push
ljmp
jle
enter
inc
push
orb
popf
mov
rcl
loopne
sbb
test
ret
sbb
mov
sbb
shl
mov
in
sub
loope
popf
lods
into
push
inc
jecxz
push
in
das
addb
inc
mov
movsb
mov
bound
or
lea
mov
imul
xchg
dec
ret
mov
insb
or
pop
movsb
sti
jbe
hlt
add
mov
ret
jl
into
bswap
mov
xor
xchg
insl
mov
mov
lock
inc
cwtl
sub
out
pop
adcb
mov
mov
rcll
fnstenv
dec
mov
cmp
testl
xchg
cmpsb
jge
ret
jl
sbb
dec
push
arpl
ret
outsb
loope
or
xor
scas
dec
or
jge
repz
pusha
addr16
cltd
jmp
test
xlat
scas
cmpsb
lods
and
pop
mulb
and
push
in
sti
jmp
mov
shll
push
and
and
push
push
jo
xchg
xlat
cmp
pop
mov
xor
push
xor
mov
push
xor
and
cmp
pop
pusha
orb
fidivs
aas
cmpsl
sbb
sub
pusha
inc
scas
xchg
dec
mov
aad
lods
shlb
xchg
xchg
dec
mov
hlt
mov
cmp
loop
fisubs
aaa
in
nop
mov
fistl
xor
jecxz
cmp
outsl
or
ret
and
dec
mov
jno
out
aas
sub
inc
aam
inc
mov
cmp
sbb
popf
fsubs
insb
adc
xchg
test
xorl
mov
sbb
push
or
mov
stc
inc
ret
loopne
sub
push
sarb
lahf
cld
jnp
add
dec
mov
repz
enter
fimull
mov
loop
gs
int3
js
mov
jno
dec
pop
idivb
jecxz
push
lcall
mov
pop
inc
push
icebp
movsb
nop
ss
jmp
lret
cmp
negb
das
sub
cmc
push
cs
xlat
jb
mov
test
mov
cmp
ficoms
sbbb
cwtl
icebp
adc
aad
adc
ja
adc
mov
xor
je
add
mov
jle
movntq
and
cli
nop
out
add
sbb
jg
mov
pop
shlb
mov
stc
in
xchg
scas
mov
mov
andl
add
imul
cmp
fldl
out
sbbl
call
inc
test
mov
push
xor
std
mov
xchg
dec
push
xchg
jnp
push
or
fisubl
inc
xchg
mov
fstenv
stc
arpl
and
les
pop
cmp
repz
shrb
sub
sbbb
das
mov
mov
mov
mov
test
mov
mov
in
mov
xor
daa
lods
xchg
fildl
dec
and
mov
push
sbbl
add
push
add
inc
sbb
repnz
jns
push
or
cmp
jl
loop
xlat
aad
js
cmc
xor
push
ja
cwtl
out
sbbb
int
cmp
push
iret
es
aaa
dec
jle
jl
push
xchg
jae
mov
ret
add
je
icebp
dec
add
dec
inc
sbb
mov
ret
pop
jo
xchg
sahf
xor
rclb
jecxz
adc
cld
mov
jle
dec
jl
test
lods
call
xor
xchg
jp
jnp
cli
or
mov
pop
stos
fs
mov
stos
mov
jnp
dec
bound
dec
or
je
sub
jnp
adc
nop
int3
jbe
mov
and
ret
mov
ret
lods
ds
scas
shrl
mov
mov
cmp
repz
daa
cmp
imul
jge
push
rcrl
jg
mov
inc
fwait
sbb
jmp
les
inc
adc
add
out
xor
fs
push
repz
xor
shll
mov
inc
leave
jmp
movhps
push
popf
insb
xor
sub
push
sub
sbb
lea
adc
push
stos
roll
cmpsb
std
stos
dec
lods
inc
test
idivb
mov
out
xchg
data16
mov
int
test
subl
mov
insl
lahf
jae
in
rorl
out
mov
jecxz
mov
cli
outsl
jp
xchg
jg
dec
ds
into
ss
sub
or
mov
pushf
lcall
jp
data16
dec
hlt
dec
fwait
inc
jecxz
xlat
lea
std
lock
das
daa
arpl
dec
xchg
sub
jl
pushf
movsb
and
xchg
and
dec
add
into
pop
mov
push
cmc
std
aam
jno
daa
addr16
sbb
scas
cmp
rclb
aad
push
mov
or
jnp,pn
andb
push
sub
sub
cmpsl
jle
xor
inc
and
dec
mov
sub
add
inc
in
pusha
adc
add
push
in
test
andb
enter
popf
xor
add
xor
and
aaa
imul
xor
mov
mov
mov
mov
outsb
mov
add
je
sbb
fwait
loopne
sti
dec
xchg
enter
mov
or
hlt
inc
xchg
mov
adc
lahf
insl
sbb
aad
jns
cwtl
es
pop
mov
stos
shr
test
packuswb
iret
and
sub
test
mov
or
test
insl
jle
dec
test
scas
or
pop
filds
outsb
push
outsb
sbbb
mov
mov
or
jns
loope
rcrb
mov
addr16
push
test
mov
add
in
pop
outsb
adc
mov
sahf
dec
xor
pop
mov
ret
loope
mov
push
jmp
addl
in
aaa
mov
pop
ret
popa
add
jne
pop
cld
data16
sub
aam
sub
mov
outsl
mov
and
call
cmp
jnp
shrb
pop
lods
cmp
mov
inc
idivl
push
adc
mov
int
test
rcll
xchg
sbb
xor
sarb
mov
pop
cmpsb
std
dec
faddp
inc
fidivl
in
shlb
push
lock
add
pop
leave
mov
addr16
fsubrs
add
jae
cwtl
jne
fildll
lock
rcrl
jp
or
stos
dec
jmp
out
sti
add
pop
lea
mov
mov
mov
pop
jns
push
insb
jbe
jae
pop
pusha
xlat
scas
icebp
iret
fisubrl
or
cmp
les
enter
xchg
dec
popa
dec
sbb
stc
dec
cmp
pop
jecxz
subb
ret
daa
sbb
pop
das
mov
sbb
in
icebp
insb
mov
aam
pop
stos
mov
rorl
in
loop
cmp
mov
hlt
das
inc
ja
xchg
les
and
mov
add
repz
sbb
push
clc
ret
stc
hlt
jecxz
mov
lea
mov
mov
arpl
mov
adcb
push
and
dec
push
xor
jl
xchg
sub
push
in
dec
jecxz
pop
in
mov
ret
add
sub
fistpll
adc
icebp
int3
push
cs
enter
cmp
loope
imul
push
or
dec
xor
dec
inc
push
out
fdivrl
sub
jmp
int3
mov
and
mov
out
pop
rcll
dec
iret
loop
dec
decl
enter
dec
into
pop
out
sub
add
ljmp
mov
pop
jge
xor
adc
pop
je
movsl
mov
pusha
sti
dec
sbb
pop
icebp
xchg
fs
mov
ljmp
imul
add
or
mov
outsl
xchg
data16
fdivp
push
inc
push
and
rorl
fcompl
cmp
rol
test
es
lods
dec
arpl
and
pushf
sub
fwait
jle
xchg
sahf
xor
daa
fwait
xor
pop
cmp
loopne
rorl
jmp
jl
rcl
aas
and
aam
jge
popf
ja
xabort
cltd
js
cwtl
jp
or
mov
lea
es
xor
sub
xor
sub
push
push
jne
out
cmpsl
jmp
lds
aaa
stos
lret
lret
xchg
dec
fdivs
out
addb
xchg
xor
ret
mov
outsl
add
cltd
jb
mov
inc
lds
inc
movsb
or
icebp
xchg
ds
loop
into
push
stos
inc
test
fisttpl
lods
int
test
scas
and
out
sahf
jo
mov
or
cmpsl
aas
cmc
je
fidivrl
aad
icebp
adc
imul
jne
dec
fldcw
xchg
cmp
pushl
adc
sub
loop
repnz
divb
sbb
int
sbb
mov
mov
or
add
inc
out
rorl
lock
cmp
fiaddl
movsb
xor
jmp
fidivrl
inc
mov
pop
fcoml
pop
or
outsl
add
int3
inc
pushf
jbe
push
xor
outsb
adc
rcr
xchg
das
jns
nop
and
jne
and
in
xchg
mov
or
js
in
sub
fisubrs
cmp
xchg
push
gs
cmp
xor
sbbb
ja
dec
ljmp
insb
outsl
sbb
shrb
cmc
jp
rcll
fidivs
in
pop
popa
jg
xchg
push
data16
sbb
leave
jl
iret
scas
mov
adc
push
adc
jge
aad
stc
push
add
rorb
dec
in
add
insl
test
cmp
in
mov
pop
jb
sub
ds
xchg
add
push
ja
sub
push
mov
cmc
stos
daa
dec
in
dec
jl
fistpll
cld
icebp
insb
sarb
lea
fisttpl
adcl
mov
enter
inc
gs
sbb
in
xchg
popa
enter
je
insl
ret
mov
int3
arpl
stos
push
cmc
and
mov
pop
mov
mov
cmpsl
fisubl
inc
out
stc
mov
test
xor
inc
sbb
jns
scas
or
aas
adc
rolb
pop
mov
or
add
test
test
sbb
lds
fmuls
push
out
leave
dec
add
mov
loope
pop
push
add
out
nop
insb
push
add
lea
lock
stc
shll
dec
pushf
sub
and
pop
and
nop
pop
repz
idivl
push
cmp
mov
fldl
inc
stos
in
inc
daa
and
sbb
inc
lret
xlat
mov
std
nop
ljmp
mov
fnstsw
outsl
push
mov
xor
in
xor
add
mov
and
repnz
ret
lcall
mov
or
stc
popf
and
xchg
cs
fbstp
xor
sbb
cli
and
push
jecxz
sbb
fnstsw
stc
xor
sub
icebp
mov
stc
popf
cmp
sub
jl
and
pop
cmp
fbstp
mov
or
test
pop
stos
mov
add
sbb
cmp
xchg
mov
inc
and
imul
sub
jle
add
pushl
mov
dec
jl
ss
inc
hlt
addr16
pop
push
pop
popa
flds
xchg
lock
repnz
dec
pop
in
or
xor
cmp
in
add
sbb
imul
push
cmp
in
or
push
mov
lea
xor
loopne
xor
mov
cmpsl
jo
cmpsb
xchg
dec
xchg
cs
dec
mov
shlb
pop
cmpsl
pusha
pop
mov
pop
mul
jmp
add
data16
mov
sub
dec
loope
dec
loope
in
push
add
mov
jge
add
mov
mov
imul
push
pop
dec
mov
lahf
pop
inc
mov
stos
xchg
ja
dec
loop
mov
mov
push
pop
adc
inc
inc
stc
pop
xchg
mov
cmc
mov
add
hlt
dec
and
jmp
je,pn
ljmp
pop
out
add
xchg
adc
lret
mov
cmc
jecxz
das
add
jl
lds
mov
scas
adc
dec
pop
mov
outsb
push
js
gs
in
jo
jle
mov
mov
mov
xchg
pop
xchg
mov
pop
ja
aad
fsts
lods
aaa
stos
and
pop
dec
popf
jae
fsubl
out
xor
or
es
and
mov
out
mov
inc
jnp
sub
bound
pop
push
cmpsl
je
sub
pop
hlt
mov
cli
mov
lods
jo
jg
xchg
mov
int
stos
push
mov
enter
sbb
sbb
sub
rcrb
movsb
jnp
lahf
sbb
fidivs
lods
push
mov
mov
ror
jae
jecxz
xor
adc
jns
mov
ljmp
mov
sub
and
inc
push
enter
incl
test
push
adc
or
lods
jg
mov
mov
mov
cmp
xchg
dec
out
mov
add
cmp
sahf
mov
mov
movsl
fstpl
rolb
in
pop
pop
xchg
mov
pop
scas
in
cmc
pop
push
ret
outsb
and
sbb
lods
inc
aam
push
xor
cmc
lret
mov
pusha
shr
jg
xchg
mov
pop
xacquire
jns
mov
mov
inc
mov
and
mov
mov
das
in
push
icebp
dec
pushl
sbb
cmc
sbb
or
in
fnstcw
or
jb
mov
lds
mov
rclb
in
daa
fimuls
sub
sbb
jmp
sbb
mov
xchg
sbb
es
stos
ret
leave
std
xchg
sti
jecxz
pusha
dec
dec
cmpsb
cmp
sub
push
inc
icebp
pop
mov
xor
jle
cmp
imul
aam
into
cmp
pop
and
pop
pop
inc
cld
inc
repnz
out
lahf
imul
add
stos
xor
pushf
jg
sbb
and
pop
repnz
fsub
testl
xchg
pop
cmp
adc
lahf
in
es
rcrb
jno
xor
push
dec
in
push
mov
push
movsl
lret
and
push
in
sub
loope
pop
sbbb
sub
stos
mov
cli
xchg
push
shl
fimuls
std
lods
lea
cmpsl
sbb
mov
sahf
imul
pop
xor
imul
xchg
in
inc
in
ret
dec
hlt
add
nop
daa
sub
jmp
imulb
cmp
lods
mov
inc
mov
mov
xor
jge
mov
aaa
insl
add
sbb
and
sarb
inc
mov
xor
jmp
push
ljmp
mov
inc
xchg
arpl
inc
push
pop
inc
shlb
or
dec
jmp
jl
loop
or
cmp
mov
or
lret
xor
inc
lods
push
in
fsubl
outsl
adc
jae
stos
ss
sbb
lods
mov
insb
jle
jl
lret
stc
fdivl
leave
or
out
pop
in
jl
xchg
mov
out
inc
or
mov
filds
es
test
es
dec
xor
sub
dec
lahf
adcl
jnp
sahf
popa
xor
ss
arpl
stos
sub
dec
outsl
std
and
adc
mov
orl
mov
lock
shlb
mov
je
cmp
sub
and
jbe
lods
and
xchg
mov
faddl
ret
cmp
jecxz
push
ljmp
jno
inc
xor
pop
mov
fiaddl
xchg
dec
ds
div
pop
ds
xchg
popa
fcompl
sub
addl
movsb
adc
fiadds
movb
in
push
jne
jnp
mov
dec
movsb
push
mov
xchg
ud0
inc
loop
add
clc
xor
jg
test
lret
popf
xor
and
dec
pop
and
push
or
pop
out
data16
or
test
icebp
sbb
jecxz
and
mov
addr16
iret
fisttpll
movsb
jae
arpl
sbb
cmp
mov
aad
add
out
xor
popf
xor
cli
mov
inc
aaa
mov
mov
fcmovne
dec
push
sub
fdivrl
mov
sahf
mov
popa
ljmp
out
mov
cli
xchg
repnz
ret
push
ljmp
andb
mov
jne
cli
je
aaa
shrl
mov
scas
sti
jne
jmp
lret
mov
fidivrl
shl
pop
xor
cmp
notb
adc
popa
test
pop
insb
cmp
cmp
call
js
mov
mov
test
ja
mov
sbb
mov
dec
divl
out
test
inc
jne
add
mov
jl
mov
gs
int
es
mov
sub
mov
pushf
jle
daa
mov
daa
push
inc
faddl
cmp
adc
lods
stc
xor
sub
pop
cmp
les
leave
dec
bswap
fsubr
insb
jle
dec
mov
ret
ljmp
imul
out
or
xlat
mov
push
lret
sbb
push
fldl
jmp
mov
mov
xchg
movsb
shl
mov
push
xchg
mov
lret
jo
jno
ss
jns
sbb
push
negl
push
add
enter
in
cltd
scas
mov
outsl
ficoms
scas
unpckhps
jg
pop
xor
mull
jno
stos
xchg
cmc
scas
lods
xchg
and
fwait
xor
out
into
pop
dec
mov
cltd
clc
sahf
lret
repz
cmp
jecxz
adc
xor
aam
mov
push
mov
or
or
push
je
mov
dec
push
addr16
movsb
mov
mov
sbb
push
call
jecxz
jb
out
repz
xor
hlt
mov
jp
stos
push
aam
pop
inc
jne
jb
movsl
icebp
pop
xchg
popa
idiv
mov
jg
jg
xchg
sub
dec
cmp
mov
jnp
pop
fwait
pop
outsb
rcrl
sub
mov
sub
movsb
add
sbbl
xor
jmp
add
in
push
xlat
test
pop
or
outsl
sahf
test
adc
mov
xor
jb
int
fwait
pop
cltd
stc
adc
jmp
clc
cmp
lahf
mov
repnz
fsubs
sub
and
fwait
sarl
shrb
sub
fwait
sbb
movsb
push
cmp
xchg
mov
add
fdivp
xor
jnp
dec
in
cmpsb
dec
js
les
jg
dec
loop
inc
data16
imul
mov
fistps
jnp
inc
mov
xor
cmp
xor
es
and
fwait
mov
inc
outsl
xor
std
sub
sbb
testb
and
pusha
scas
inc
insl
pop
jmp
arpl
add
lods
lock
cmc
lahf
shrb
cmp
dec
dec
or
jle
mov
add
mov
pop
or
inc
mov
pop
mov
adc
scas
icebp
aam
sarl
ficompl
push
xchg
call
icebp
mov
test
sub
dec
dec
mov
sbb
dec
ret
repz
pop
cmpsl
clc
movsb
test
leave
mov
jnp
push
mov
call
push
ss
cli
je
xchg
cmpsl
push
xor
sbb
clc
push
popa
add
pushf
mov
cld
lcall
in
out
rclb
add
into
xchg
sub
and
stos
push
aas
cli
jne
aaa
testl
sbb
pop
mov
push
sub
scas
shrb
ret
xchg
mov
xlat
ss
push
sbb
push
in
stos
mov
pop
adc
pop
sbb
hlt
dec
dec
out
out
sbb
aaa
fisubrs
aam
scas
push
mov
fsubrs
pusha
jo
bound
sbb
adc
mov
out
popa
movsb
lret
or
test
cmp
adc
nop
daa
cltd
divl
inc
mov
push
fwait
sti
fldl
add
and
push
mov
mov
fdivp
mov
shl
xchg
adc
or
add
stos
sbb
xor
jle
bound
sahf
pop
leave
add
mov
insl
sbb
pop
repz
fisttpll
adc
jp
mov
loopne
sbb
sbb
movsb
sarl
pop
xor
shrl
imul
lock
mov
jnp
imul
adc
sar
dec
movsb
loope
in
mov
nop
and
cs
lods
add
jg
data16
push
push
insl
pop
arpl
sbb
pop
dec
xchg
test
jle
push
test
movsb
les
cltd
test
mov
mov
lret
and
adc
xor
xor
mov
mov
cmp
push
jne
loop
out
daa
lcall
pop
divb
enter
mov
sbbl
jb
imul
lret
jb
pop
cmp
mov
icebp
jg
sub
mov
push
cs
cmp
xchg
rol
inc
dec
jp
imul
sbb
pop
lock
pop
or
fsubr
gs
mov
incb
stos
pop
cmc
fsubl
sub
mov
insl
andl
jne
pop
test
aam
std
xchg
dec
test
sbb
push
mov
sti
fldl
sbb
cmp
adcl
imul
je
mov
adcb
xor
call
adc
in
clc
int
jno
xchg
xor
les
lcall
cmpxchg
xor
add
sbb
add
dec
in
roll
or
lods
fnsave
scas
jns
repnz
add
aaa
xor
jno
pop
fucomip
adc
adc
inc
pop
shr
dec
push
xor
sbb
sub
arpl
cli
jne
or
mov
push
or
cld
xchg
sub
sbb
incb
popf
mov
inc
pop
add
mov
pop
jmp
aam
lea
gs
setns
jge
in
movsb
fimuls
loope
jne
push
mov
hlt
push
movsl
sub
rcrb
roll
ss
cltd
insl
int3
mov
rclb
flds
adc
add
inc
mov
or
dec
lds
insl
add
lret
mov
cmp
test
push
push
pop
out
inc
in
out
xchg
clc
sbb
adc
push
popf
enter
mov
inc
push
call
mov
inc
aam
xor
mov
adc
mov
push
repz
sar
xchg
ret
adc
repnz
ja
jbe
xlat
gs
enter
std
fsubp
cmc
mov
xchg
add
or
enter
cmp
shll
and
jbe
cmp
test
push
aaa
into
inc
pop
int3
arpl
loopne
loop
mov
ljmp
data16
adc
lret
dec
jo
pop
lock
cld
or
fdivl
sub
in
test
stc
nop
out
outsb
lds
adc
popa
add
jns
ljmp
shr
aas
adcb
iret
xchg
sub
mov
out
out
mov
adc
push
mov
sbb
adc
or
add
shl
cmpsb
and
add
adc
pop
push
repnz
dec
cwtl
test
sub
pushf
mov
das
pop
push
mov
cmp
add
rcrl
dec
mov
or
xchg
add
xor
ret
mov
int
cmpsb
sarb
popf
inc
pushf
xor
dec
loop
shrb
and
xchg
shrl
pop
test
aas
inc
add
adc
test
je
icebp
push
jmp
inc
popa
or
mov
std
xchg
jbe
ds
in
cmpsl
fadds
and
or
out
out
fwait
xor
ja
push
addr16
mov
pop
stc
mov
in
fadds
lret
jle
std
insl
fwait
pop
lock
cld
xchg
in
shr
add
xchg
sub
mov
and
adc
bound
gs
xchg
stc
in
in
dec
cmp
push
imul
jmp
call
jae
cld
bound
shrb
scas
add
push
outsl
icebp
mov
dec
jge
add
push
mov
mov
bound
mov
xchg
bt
xlat
into
into
lea
lret
xor
cmpsl
or
aas
dec
mov
cmpsb
sbb
mov
mov
imul
daa
mov
or
or
push
out
push
and
in
insb
fstl
sbb
js
mov
mov
mov
fcoml
xor
shr
jg
call
aas
mov
arpl
add
lods
inc
popf
dec
mov
push
movsl
adc
adc
xchg
xchg
addr16
mov
dec
xchg
jmp
xor
push
sbb
sub
adcl
xor
ficompl
push
das
cwtl
inc
lret
lds
jae
out
mov
mov
sbb
add
es
pop
lods
cltd
pop
jmp
ds
enter
pop
lahf
cmc
xchg
and
shrl
rcrl
jae
or
test
in
or
outsl
sar
xchg
enter
scas
cmp
dec
sbb
jnp
push
dec
and
imul
js
call
sbb
jno
imul
daa
xor
or
adc
inc
inc
mov
lret
ret
mov
adc
shlb
adc
andl
and
and
pop
mov
inc
psrad
add
xor
push
sahf
sub
adc
jae
ja
lahf
ss
cwtl
add
lret
sbb
inc
insl
or
sbb
repz
mov
push
jno
or
xor
test
dec
and
hlt
adc
loop
push
adc
lcall
test
and
dec
xchg
jmp
jb
add
pop
sub
das
pop
cmp
add
sbb
mov
dec
mov
pop
enter
inc
data16
out
mov
int3
push
jle
adc
push
outsl
push
subl
and
gs
and
xor
ret
sbb
lds
lret
jmp
sbb
mov
cmp
fnsave
pop
fadds
inc
out
loopne
and
mov
lahf
jb
pusha
jae
sub
ljmp
inc
jl
out
je
mov
ss
jmp
push
sbb
ds
test
jne
adc
lods
push
out
fldl
mov
incb
mov
xchg
inc
fisubrs
mov
call
cld
and
xor
out
ret
mov
mov
mov
jge
mov
out
lds
mov
jnp
xor
outsb
or
test
cmpsb
sub
cltd
add
push
and
js
adc
sahf
insl
addl
cmp
dec
mov
stos
data16
adc
jmp
test
fbld
std
mov
adc
push
sti
pop
subl
sbbb
ja
jnp
in
leave
pushl
pop
jb
shlb
out
adc
jns
jbe
adc
push
pop
or
jnp
jp
data16
jne
pushf
xchg
aaa
cli
or
and
orl
hlt
leave
mov
xor
jnp
pop
jb
or
popl
push
xor
add
cmp
movsl
repz
mov
cli
and
xor
stos
inc
outsl
adc
jl
stos
lea
or
mov
movsl
in
cmp
sti
inc
stc
mov
test
rcrl
stos
aad
arpl
pop
lret
inc
fidivrl
mov
fsubs
lahf
test
inc
sbb
push
shlb
int3
fidivs
xchg
mov
js
push
xchg
ja
sbb
push
jno
arpl
jb
stos
mov
sub
mov
dec
jmp
int3
cmpsb
outsl
cmpsl
aas
dec
mov
adc
loop
cmp
mov
sbb
cmp
lods
orb
icebp
movsb
shrl
popa
incb
test
xchg
mov
cmp
rcrl
sbb
mov
pop
mov
dec
out
jnp
lods
inc
das
sub
aas
je
divl
repz
xlat
add
pop
lods
mov
loopne
sbb
sub
mov
mov
sub
shl
sti
push
popf
cmpsl
or
push
or
xor
jne
xor
loop
xchg
dec
daa
lret
fmull
fisttpll
mov
sbb
inc
mov
dec
push
xchg
les
dec
pop
sub
or
shll
shrb
sbb
repz
jnp
mov
sub
jle
sbb
fwait
mov
fimuls
add
push
in
dec
and
lahf
xor
out
inc
sbbb
jge
testl
daa
into
sahf
or
out
scas
mov
popf
push
jg
xchg
lahf
jo
xchg
mov
adc
shrb
negl
or
rcll
int
pusha
icebp
mov
sbb
adc
xorl
mov
dec
aad
jp
jle
mov
fstpl
out
pop
cmpsl
mov
daa
pushf
mov
mov
xor
inc
lea
fidivs
shll
push
sub
iret
pop
jns
lahf
mov
lret
nop
test
mov
add
pop
sarb
cmp
xlat
or
and
mov
push
stos
mov
ret
loop
and
lods
out
nop
push
or
imul
fwait
lods
xchg
add
addr16
xchg
mov
sbb
mov
sub
and
mov
xchg
mov
jle
and
mov
mov
ret
push
test
fldcw
shr
mov
repnz
pop
xchg
aas
rorl
test
and
insl
mov
dec
aaa
cmpsl
and
pushf
jle,pt
test
mov
and
push
add
je
into
mov
ror
adc
andl
icebp
xchg
jge
mov
or
push
aam
sti
push
fldt
push
out
inc
fisubs
sub
ds
fimuls
fcmovne
out
std
cld
nop
pop
fcmovne
or
ds
inc
psadbw
add
mov
pop
out
xchg
lock
dec
jbe
add
repnz
pushf
cli
adc
mov
and
or
mov
sub
fcmovb
mov
dec
dec
lods
jl
iret
mov
fidivs
push
inc
dec
add
cld
lcall
jne
scas
inc
xor
nop
sti
movsb
cmp
int
push
fs
xchg
cmpsl
add
gs
xchg
mov
add
test
add
stc
mov
sbb
pop
pop
jg
sti
lods
ss
sbb
dec
push
inc
test
nop
hlt
outsl
push
aad
mov
push
movl
popa
popf
lods
mov
int3
mov
and
push
jbe
call
imul
mov
lahf
jle
sbb
xchg
inc
add
data16
cmc
shlb
jl
iret
push
out
pop
cmp
mov
fistpl
xor
mov
nop
hlt
inc
inc
add
aam
pop
insl
icebp
jo
jne
stc
aaa
ret
shrb
imul
adc
xchg
nop
cs
pop
popa
mov
lret
fwait
jle
rolb
add
loope
mov
and
in
push
fmulp
mov
lahf
push
inc
dec
in
pop
ret
xchg
and
inc
add
lahf
cmp
add
enter
fwait
outsb
repz
test
fwait
xor
push
ficomps
icebp
mov
hlt
pop
jbe
add
push
sub
mov
mov
push
cmp
out
mov
adc
mov
lcall
dec
int3
daa
notl
mov
jb
xor
sbb
inc
hlt
jb
mov
sub
in
lock
dec
outsl
cmc
insb
jge
imull
shlb
and
inc
xor
xchg
sti
xchg
out
lahf
push
xchg
outsb
sbb
ret
and
inc
push
in
mov
mov
iret
fstpt
mov
cli
adc
mov
rolb
divl
add
popa
sbb
fcompl
cld
cmpsl
ds
mov
lds
lcall
inc
fdiv
stos
add
jl
push
add
scas
add
mov
push
mov
cwtl
std
add
mov
into
jne
leave
lea
mov
jo
sti
mov
loope
scas
dec
ret
mov
xor
pop
cmp
test
xchg
mov
mov
leave
jae
popf
xor
push
shll
decl
sbb
and
push
clc
roll
pop
mov
lea
mov
cmp
aaa
fisubrl
push
dec
cltd
ret
ss
lahf
and
mov
mov
cmp
sub
sbb
movsb
mov
inc
data16
mov
cwtl
mov
sbb
or
lods
adc
pxor
mov
adc
popa
sahf
cmp
andl
sarb
jae
inc
push
pop
pop
lods
jmp
ja
subl
pop
ficompl
mov
cmp
cmp
mov
mov
cli
cmpsl
outsb
add
mov
popa
aad
dec
rcr
jno
push
push
scas
jns
jae
xor
sbb
cmp
push
fbstp
or
add
sub
jmp
push
jo
dec
push
mov
lock
jp
les
imul
cmp
inc
sbb
into
xor
cmp
in
sub
cs
lret
subl
or
into
jge
dec
mov
pop
vrsqrtps
pop
dec
jbe
outsl
xor
add
mov
mov
sbb
repnz
add
mov
pop
pop
repz
leave
or
mov
fisubs
mov
add
cmp
cmp
rclb
cltd
pop
icebp
fidivrl
dec
pushf
iret
xor
sub
or
mov
mov
fs
xor
inc
sahf
outsb
loope
ss
inc
sub
lods
adc
mov
cmp
jns
decb
xchg
xor
push
mov
adc
insl
ljmp
inc
loope
jno
mov
xchg
std
and
popl
xor
xchg
lods
movsb
repnz
outsl
pop
mov
xchg
nop
jns
add
or
dec
sub
mov
jnp
leave
add
pop
jo
mov
sub
fisubl
int3
fidivs
cmc
dec
and
jb
dec
std
rol
push
mov
mov
mov
inc
out
sbb
xchg
or
push
push
pop
jno
push
pop
ss
outsb
sub
stos
popl
mov
mov
hlt
movsl
cmpsb
stos
jns
outsb
sub
nop
mov
mov
pop
data16
mov
scas
fldcw
push
inc
std
lods
out
pop
cmp
aam
push
mov
rcll
mov
sub
in
jp
xchg
mov
push
or
ficomps
push
jae
mov
add
rorb
inc
cmp
cmp
push
je
mov
or
les
xlat
adc
sub
pop
sbb
push
aaa
pop
lods
and
insb
push
gs
bound
dec
and
aas
js
mov
in
subb
lods
sahf
inc
push
rorb
sbb
inc
test
imul
pop
pop
lock
xchg
lcall
jmp
mov
xchg
pop
push
je
in
push
push
xorb
aad
inc
pushf
bound
fiaddl
xor
push
std
jg
sbb
push
mov
lods
shlb
shll
cli
push
fcoml
fbld
lea
mov
xor
add
mov
leave
pushf
pop
leave
fistpll
mov
pop
das
movsl
xchg
mov
push
jge
scas
inc
fimuls
shlb
inc
push
ds
pusha
sbb
push
or
jg
jge
pop
push
push
xlat
push
jge
movl
xor
sub
leave
rcll
lret
movsb
pop
filds
mov
add
inc
add
or
rcrb
jl
pop
add
mov
vrndscalesd
aaa
cli
into
sub
xchg
in
mov
in
test
aam
jbe
or
cmc
nop
cld
inc
roll
mov
lahf
into
mov
push
shr
daa
sbb
sub
pop
adc
push
fisttpll
cmp
jge
xchg
sub
pop
jae
fildll
push
test
add
xor
out
xchg
imul
cmp
and
adc
jge
test
mov
sbb
mov
imul
je
mov
insb
sub
out
mov
dec
sarb
and
out
lret
jbe
lods
push
fcmove
into
mov
pop
dec
dec
cmp
add
fidivrs
push
sti
push
xchg
mov
idivl
jae
rcrl
cli
add
and
loop
and
sub
xchg
aam
test
das
ds
loopne
dec
loop
out
shl
pop
xor
push
movsl
cmp
add
sbb
in
into
enter
loopne
jmp
enter
int
jne
pop
inc
stos
ds
mov
dec
int3
lods
mov
mov
hlt
dec
push
add
xorb
mov
test
es
sbb
sbbb
or
es
or
mov
dec
inc
aas
out
mov
arpl
pop
dec
add
je
andb
mov
pusha
jmp
pushf
xchg
mov
sbb
pop
shll
mov
sub
icebp
lds
mov
inc
mov
sbb
or
sbb
mov
in
push
push
imul
andb
es
aaa
xchg
push
sbb
jle
scas
jle
loopne
pop
push
sbb
test
int
sub
in
stos
and
jp
sti
xor
push
push
lret
vphaddwq
adc
jmp
mov
jae
and
shrb
sbb
icebp
push
pop
jns,pt
jno
out
out
xchg
xchg
xor
into
inc
sti
xor
lods
out
jle
int
dec
inc
add
xchg
inc
je
jbe
movsl
in
xchg
xchg
xor
push
mov
out
mov
lods
mov
pop
icebp
inc
sub
int3
push
add
pop
les
jge
mov
testl
add
daa
mov
insb
add
repnz
mov
movsl
mov
movsb
test
xlat
cmp
pop
dec
cmp
xor
bound
fsubs
and
pop
movsb
mov
xor
rcr
xchg
cltd
push
cltd
xor
add
mov
fs
test
mov
adc
mov
lret
mov
imul
outsl
lds
jae
fnsave
aam
cli
push
xchg
fisttps
jmp
lret
and
call
negl
xchg
lea
sbb
mov
lret
cmc
ja
xchg
in
je
add
cwtl
addr16
sbb
xor
sbb
fists
xor
cli
ja
xor
rcrb
int
inc
mov
mov
stos
rorl
push
push
nop
mov
jns
outsl
pusha
clc
push
lods
push
add
jo
xor
lcall
mov
fs
lods
and
shrl
and
sahf
xchg
testb
sbb
mov
rcrb
mov
popf
pop
test
lock
mov
jnp
inc
std
pop
icebp
jae
and
sbb
in
push
js
lret
cld
jg
hlt
pusha
sbb
sub
cs
fwait
xchg
mov
js
test
testl
out
sub
aaa
leave
ljmp
jno
push
push
cli
jne
shll
push
je
dec
cli
addl
cld
xchg
sbb
dec
in
adc
icebp
push
inc
mov
std
xchg
sub
mov
and
ljmp
scas
xor
decb
jmp
and
mov
push
ss
push
mov
clc
lds
cli
xchg
addr16
rorl
outsl
out
jo
mov
lret
mov
jg
xor
mov
mov
aad
cwtl
cmp
nop
push
pop
inc
or
add
testb
shrl
inc
mov
pusha
xchg
fs
xor
add
mov
popf
push
jmp
jae
inc
xor
inc
int3
lcall
push
scas
and
insb
sbb
mov
fidivrs
push
mov
xchg
es
fdivrl
cmp
imul
jo
orb
ret
clc
inc
loopne
ds
mov
adc
sub
mov
fnstcw
popa
inc
xor
sti
mov
jnp
les
sbb
fnstsw
push
or
sub
jl
js
pop
xor
xchg
cmp
aaa
dec
cmp
or
inc
inc
popa
imul
lds
push
aam
mov
aad
pusha
fwait
arpl
pop
outsb
mov
nop
cli
test
inc
out
in
or
jo
test
aad
in
adcb
iret
push
pushf
sub
push
repnz
dec
mov
dec
in
add
cmp
fmuls
jns
lret
sbb
or
push
int
mov
cltd
cmp
dec
cmc
pushf
lods
sbb
pop
out
fimuls
popa
pop
or
jl
mov
adc
outsl
push
pop
testb
sahf
popf
repz
jge
jo
mov
fst
mov
inc
pop
movsl
sti
inc
insl
insl
adc
and
sar
movsb
jecxz
xor
mov
imul
dec
fistpl
cmp
inc
mov
test
js
dec
and
push
filds
sbb
push
aad
out
adc
add
xchg
in
jp
mov
test
mov
fucomip
mov
addl
pop
sti
in
lods
jmp
jns
popf
ljmp
fwait
insl
cltd
mov
cmpsb
xchg
int3
es
jp
or
xchg
in
popf
sub
add
iret
xlat
xor
adc
sti
adc
insl
inc
xchg
js
mov
repz
fnstcw
mov
pusha
loope
les
add
xor
push
mov
add
fucomp
fnstenv
push
test
das
pcmpgtb
movsb
repnz
xor
divb
dec
sub
mov
outsl
clc
sub
lcall
pop
std
sub
cmpsl
push
in
mov
lret
mov
cmp
jbe
fnsave
into
and
mov
pushf
xor
jecxz
mov
aas
ret
jp
in
cld
movsl
mov
lods
mov
pop
stos
jge
inc
test
inc
inc
loopne
mov
mov
mov
or
add
xlat
pop
rorl
inc
in
enter
mov
adc
leave
dec
xorb
dec
mov
xor
hlt
fwait
mov
aas
dec
sub
imul
inc
aam
pusha
xchg
in
cmp
pop
lret
insl
xor
stos
cmp
inc
mov
xchg
jmp
mov
xchg
xchg
cmpsl
imul
mov
stc
pop
jp
mov
inc
pop
sbbb
cwtl
loopne
mov
pop
imul
lret
popf
jmp
test
mov
imul
lods
xor
int3
push
or
mov
shl
adc
adc
and
lods
cmp
sub
push
repz
cmc
jg
and
inc
inc
xor
sub
dec
and
cli
xorb
cltd
pop
test
and
mov
xchg
xchg
sbb
notl
call
dec
testb
xor
xor
inc
sbb
out
movb
test
daa
outsl
es
test
ret
pop
scas
xchg
jae
cmp
data16
rclb
fbld
cli
cltd
lret
jmp
std
mov
adc
mov
inc
test
push
mov
or
out
scas
pop
test
mov
mov
sub
lock
outsb
out
lret
mov
imul
hlt
mov
lds
nop
sub
dec
popa
ret
shrl
sbb
adc
xlat
mov
pusha
loopne
mov
xlat
push
mov
jmp
fsts
sub
pop
addr16
pop
mov
lret
jge
sbb
out
aaa
sub
jno
dec
in
xchg
sahf
mov
lret
add
test
sub
roll
add
mov
jnp
insb
lcall
pop
je
xor
outsl
loop
arpl
icebp
je
movsb
add
cwtl
or
leave
scas
test
push
std
xchg
in
cmpsl
jb
inc
popa
sbb
jns
push
push
les
add
movsb
andb
xorl
adc
mov
fidivrs
cwtl
addl
mov
lds
loop
mov
xor
xchg
jp
lods
jmp
fistps
clc
cmpsb
pop
bound
popf
jp
movsb
cmp
inc
movb
scas
xor
leave
pop
sbbb
mov
inc
popa
mov
mov
imul
shl
pop
lret
aam
hlt
or
inc
cmp
push
cmp
popf
outsl
push
jno
imul
xchg
pop
sub
mov
fs
sbb
pop
mov
push
mov
cmp
testl
or
inc
leave
mov
pop
xchg
sub
adc
pushf
cli
sub
add
in
das
and
pop
cmpsl
inc
push
leave
push
jg
mov
jmp
mov
or
adc
cmp
or
jno
xchg
hlt
mov
add
push
mov
clc
jno
ret
push
mov
sub
pop
mov
add
jb
in
aas
adc
mov
dec
cwtl
pop
andl
pop
cmc
aaa
pusha
out
xchg
mov
pop
aas
stc
mov
das
pop
mov
ja
into
test
clc
scas
nop
fnsave
dec
add
jo
xchg
enter
jmp
lret
xor
pusha
mov
and
and
jle
push
dec
jae
push
outsb
fwait
jle
jnp
test
inc
jne
mov
push
push
js
repnz
daa
mov
push
xor
dec
les
or
push
pop
insb
cli
mov
shrl
add
sub
imul
xor
jno
pop
xor
and
sbb
insb
add
dec
mov
jb
adc
leave
xor
lods
ljmp
es
jns
addr16
xor
out
bound
lret
rcr
mov
mov
aaa
add
notb
push
mov
mov
cmc
fsts
mov
bnd
rcrb
out
mov
xchg
mov
push
jle
jb
mov
sub
hlt
sbb
push
mov
or
ss
xchg
jo
sub
mov
dec
out
sub
pop
cmp
fs
and
sub
andb
jae
push
sub
mov
mov
xlat
xchg
add
mov
es
adc
inc
aas
lret
pop
in
gs
arpl
test
cltd
std
jmp
outsl
notl
and
push
cli
cli
movb
movsb
or
mov
jb
dec
pushf
or
stc
popf
nopl
imul
mov
xor
xchg
dec
xor
inc
fdivp
leave
jecxz
sbb
mov
sub
filds
ljmp
unpckhps
mov
add
push
or
mov
xor
cmp
jmp
fidivl
or
lds
or
pop
popf
add
lret
dec
gs
mov
add
into
rolb
cmc
js
cmpsl
ds
cltd
test
out
cmc
adcb
adc
inc
add
sub
arpl
dec
mov
push
in
movsb
inc
testl
pop
imul
push
fmull
add
arpl
or
mov
insb
add
mov
testb
fistps
cmp
pusha
imul
insb
mov
mov
jp
es
notl
sub
in
outsl
into
xor
inc
stos
cmp
xor
arpl
mov
jnp
xchg
sbb
xor
xor
inc
fcomi
movsl
cmp
jnp
cmpsb
pop
repnz
cmp
push
cli
inc
cmp
push
push
xchg
fcmovnb
pop
or
ficompl
or
dec
gs
dec
mov
inc
sub
hlt
pop
inc
dec
dec
mov
aad
jle
dec
notl
outsl
iret
xor
jl
test
insb
shll
cmp
mov
jmp
out
sbb
sub
jns
ror
movsl
data16
add
sub
movsb
sbb
daa
dec
push
out
jns
xlat
aaa
in
dec
jne
aaa
cmpl
mov
rcrl
pop
mov
lds
or
jecxz
out
dec
mov
das
ss
adc
sub
sbb
xchg
pop
es
iret
fisubrl
sub
lea
sbb
push
adc
sub
xor
stos
xor
dec
stos
mov
add
adc
sbb
mov
shrl
xlat
mov
inc
push
getsec
jnp
push
add
divl
rcrl
xchg
pop
fidivl
shll
bnd
push
cmpl
out
mov
ret
pop
in
fadd
inc
cmp
dec
fcompl
inc
rcrl
out
xor
sbb
insl
and
xchg
jno
pop
sahf
sbb
jo
in
out
push
call
in
sbb
or
insl
add
lea
ret
mov
xchg
rcll
mov
mov
dec
inc
pusha
jl
jge
push
xchg
mov
les
mov
inc
and
add
mov
inc
sbb
fisubs
dec
mov
int3
arpl
inc
push
inc
lock
inc
fldl
sbb
scas
cmpsb
test
lcall
cld
decb
lret
xor
out
inc
stc
aaa
inc
stc
cmpsb
jae
jg
cmpb
and
mov
fldenv
icebp
leave
jns
das
outsl
cltd
cmp
pop
sbb
mov
dec
inc
dec
mov
popa
bound
insb
call
data16
out
pop
mulb
mov
daa
outsb
xchg
jge
mov
bound
pop
shrb
mov
push
imul
xor
shll
sbb
arpl
jns
mov
mulb
jo
dec
xchg
dec
mov
aaa
rorl
pop
daa
int
shl
in
mov
inc
xor
xor
or
jo
gs
jb
jle
adc
ja
es
dec
push
fnsave
mov
pop
lods
lds
gs
jle
xchg
mov
cmpsb
jnp
ficomps
scas
std
or
mov
test
push
or
sbb
push
lds
pop
fildl
fldcw
xor
push
xchg
pop
pushf
and
je
test
mov
out
jb
sub
test
mov
lock
mov
add
dec
lds
movsb
pop
out
inc
lret
dec
dec
filds
fcmovbe
rcrl
lock
call
adc
adcl
mov
sub
ja
adc
popf
cmc
les
daa
inc
pop
push
cmp
fadd
aad
mov
imul
xor
pop
mov
test
mov
aas
in
xor
insb
jmp
stos
clc
mull
mov
lods
repz
out
sti
inc
cmpsl
ficoml
or
xchg
ret
pop
mov
jb
inc
lea
jo
shrl
xor
ds
mov
cs
push
mov
imul
dec
insl
outsl
cmp
lret
xchg
fs
adc
lret
xchg
repnz
cmp
ljmp
jne
push
aam
repz
and
adc
std
push
mov
mov
sbb
in
mov
rorb
mov
jg
imul
mul
subl
popf
popa
in
js
test
rcrb
xlat
cmp
sub
in
jp
xchg
pop
stos
push
ficoms
and
push
sbb
imul
ljmp
loop
nop
xchg
test
popf
sub
js
jle
pop
sub
jle
repnz
xchg
push
mov
repnz
imull
adcl
push
or
repnz
gs
lds
lds
or
loopne
call
into
jge
or
xchg
xor
in
push
push
sub
mov
cmp
inc
scas
xor
jbe
xchg
cmp
or
adc
jle
lret
data16
and
mov
sbb
mov
sub
dec
and
mov
xlat
lods
clc
out
shr
inc
sub
ljmp
sub
popf
add
jle
lahf
inc
filds
push
out
scas
push
xor
ja
xchg
mov
ret
movsb
push
sub
call
decl
div
lods
cmp
adc
into
pop
fidivrl
lcall
inc
dec
jno
js
in
jbe
ja
adc
stos
lret
xor
dec
inc
mov
cmp
xor
cmpb
sbb
hlt
cli
mov
or
jmp
repz
cmpsl
into
cmp
jp,pn
xlat
popf
mov
mov
fwait
push
insb
xchg
push
xor
sbb
push
push
add
lret
xor
data16
jae
mov
sbb
push
xchg
and
or
imul
testb
jl
fisubrl
pop
xor
or
mov
cmp
jno
mov
scas
bound
jns
xor
jbe
inc
pusha
fsts
pop
fnstenv
pusha
mov
bound
inc
in
in
insl
jge
push
shr
adc
enter
fstl
add
fidivs
lret
movl
xor
jmp
stc
sarb
xor
pop
cmp
scas
cmc
adc
ljmp
push
fiaddl
jne
fmuls
inc
test
dec
jmp
mov
adc
jg
into
enter
push
pop
mov
mov
andl
pushf
pop
lahf
notl
rorb
decl
ljmp
out
popa
cwtl
xchg
mov
dec
jmp
orb
jp
movsb
stos
mov
mov
lods
imul
int3
dec
add
cltd
jne
das
xchg
leave
fisttpll
por
sbb
push
and
inc
outsb
inc
mulb
and
push
pop
dec
scas
dec
bound
ljmp
inc
pop
ffree
gs
add
adc
test
aas
psubsb
scas
sbb
push
jmp
aaa
pop
mov
dec
jle
mov
into
push
nop
bound
les
or
jmp
ja
mov
cwtl
out
cwtl
mov
ret
es
mov
jno
mov
adc
sbb
dec
push
call
stos
mov
push
cwtl
das
nop
fs
pop
mov
add
mov
jbe
rorl
cmp
out
inc
int3
inc
push
movsl
les
dec
and
pop
push
push
or
jg
fmull
adc
and
sbb
pop
imulb
faddl
add
inc
arpl
jne
inc
pop
dec
das
shlb
dec
ret
mov
sub
aam
fstpt
cmc
pop
stc
es
xchg
and
sub
sub
gs
cld
jge
add
add
pop
test
dec
mov
je
fistpll
and
jnp
out
push
int
bnd
rcrb
mulb
dec
xor
rcll
mov
mov
gs
dec
mov
loope
push
fdiv
adc
and
js
idivb
out
lret
add
cmc
mov
mov
or
sbb
xchg
pop
jmp
stc
xchg
add
xchg
sub
cs
popf
pop
mov
out
pushf
jo
ret
mov
fsts
clc
xor
fwait
push
in
jns
ds
popf
fildl
xchg
in
int
mov
mov
mov
imul
lahf
pop
mov
xchg
adc
sahf
stos
xchg
fstp
jle
push
mov
or
push
cmp
loope
jno
mov
inc
scas
push
or
mov
adcb
jle
and
cmp
cmc
push
pop
jo
leave
sub
cmp
cmp
and
xor
add
in
in
inc
xchg
adc
lret
lcall
ljmp
xchg
add
out
das
movsb
cmp
das
jl
push
ss
stc
add
dec
dec
dec
xor
jne
jbe
pop
mov
dec
jecxz
jle
fstpl
mov
stc
stos
insl
pop
mov
iret
adc
push
adc
jl
sbb
or
dec
xlat
jns
sahf
pop
push
loope
xor
call
outsl
hlt
add
mov
insl
pop
cld
pop
push
test
ja
inc
arpl
popf
call
or
mov
jbe
sahf
cs
push
adc
aaa
lods
leave
int3
sbb
or
std
mov
mov
sarl
enter
xor
in
mov
movsb
repnz
or
je
and
clc
push
negl
xor
pop
fsubp
enter
inc
in
aad
adc
mov
adc
and
ds
repz
push
popf
insl
sub
jmp
lret
sbb
sbb
cld
popa
popa
out
test
ja
test
popa
or
and
pop
push
jl
outsb
jp
dec
or
push
popf
loop
pop
sub
cmp
cs
test
sub
mov
cmp
icebp
test
and
cmpsb
dec
lods
sti
es
shrl
inc
xchg
in
mov
and
sub
xor
fwait
dec
adc
imul
pusha
ds
lods
call
cmp
mov
pop
test
fmul
xor
imul
adc
or
add
adc
cwtl
lods
xor
pop
je
push
scas
xchg
sbb
xlat
loopne
inc
adc
addr16
out
adc
mov
and
cli
test
leave
jno
lock
fildll
dec
dec
xchg
xchg
mov
or
je
sub
out
and
enter
sbb
sbb
das
dec
mov
iret
js
call
mov
sbb
cmp
mov
sahf
mov
mov
push
mov
adc
or
pop
popa
es
inc
mov
or
push
popa
jb
inc
out
mov
xchg
or
data16
das
push
in
notl
aas
xor
xor
fstl
xchg
pop
inc
xlat
sub
pop
add
xor
andl
push
push
jnp
or
cmp
adcl
pop
pushf
jae
imul
jb
bound
or
decb
ds
repnz
jns
clc
xchg
movsb
cmp
xor
icebp
repnz
inc
xlat
mov
call
add
test
lcall
or
scas
inc
inc
push
xchg
push
jb
and
xchg
adc
pop
notb
and
pop
sahf
xor
std
cltd
shlb
xchg
pop
adc
sarb
out
fstp
jne
sar
popf
and
mov
adc
rorl
shr
leave
jnp
jl
arpl
jg
xchg
repnz
add
sub
xchg
dec
mov
clc
push
xlat
insl
inc
test
aas
adc
iret
mov
roll
mov
push
shlb
sti
adc
push
pop
pop
cmp
sub
xchg
fs
shlb
xchg
xor
dec
popf
sub
negl
out
stos
loop
sub
fmull
mov
mov
xor
and
add
xor
sbb
mov
outsl
add
mov
fwait
or
cmpl
dec
icebp
xchg
sub
mov
mov
cwtl
mov
push
jb
push
pop
cmp
mov
pop
push
call
dec
lods
jo
sbb
lds
stos
sub
fcmovne
dec
stos
ret
movsl
mov
push
and
test
inc
add
mov
dec
push
mov
dec
mov
pop
repnz
pop
loop
sbb
ds
out
mov
leave
int3
ficoms
mov
ret
and
jge
lods
ffree
xchg
sbb
mov
sbb
aas
cltd
repz
pop
dec
pop
fwait
neg
mov
mov
mov
push
xlat
adc
pop
and
cmp
jge
hlt
scas
dec
mov
aad
lods
mov
filds
popf
decl
movsb
idiv
inc
fisttpl
or
cmp
jl
and
sbb
and
and
cwtl
fxch
decl
scas
xchg
aam
out
sub
sbb
pop
repnz
xor
cs
sub
dec
inc
jmp
repz
int
movsl
inc
insb
fdivl
jmp
jne
xlat
fcoms
andb
outsl
jnp
in
lds
adc
push
push
push
arpl
xorl
loopne
and
fldenv
adc
inc
adc
jne
push
push
or
rolb
loop
rorl
xor
mov
pop
daa
or
scas
cmc
int
push
int3
shrl
mov
pop
icebp
cmp
pop
out
adc
cmp
insl
pop
imull
push
sbb
cmp
shlb
jbe
dec
cmp
imulb
and
sub
fistpl
mov
jne
mov
fcoms
adc
subb
push
mov
in
jbe
stos
jno
sbb
ret
jbe
test
fstpt
ljmp
rep
test
jp
mov
les
pusha
cs
sbb
int
jge
addb
outsb
jle
scas
testl
lea
mov
cld
cmc
mov
cld
or
les
inc
push
and
or
imul
out
inc
inc
pop
aas
rcll
leave
pusha
test
mov
aaa
push
inc
leave
add
pop
hlt
push
je
imul
divl
pop
mov
out
mov
aaa
add
dec
or
fildl
out
sbb
xchg
repnz
push
clc
jo
mov
or
scas
xchg
sbb
cwtl
out
or
or
xchg
jns
push
test
lds
jmp
loop
push
push
popf
adcb
lahf
or
and
push
xchg
lahf
adc
call
iret
fnstsw
nop
fucomp
mov
and
jecxz
jno
pop
jecxz
mov
lea
mov
stc
test
jno
cmp
cli
jge
jp
dec
ja
xlat
sarb
push
in
jo
cmp
xor
sub
mov
std
mov
mov
fidivrl
mov
dec
lds
mov
jbe
sti
sub
fstl
out
pop
sbb
mov
test
mov
fmuls
lret
dec
aas
xchg
push
stos
inc
or
leave
push
or
testl
jmp
sub
sub
sbb
mov
out
xchg
das
lds
push
add
xchg
inc
dec
mov
sbb
inc
jge
insb
dec
scas
mov
mov
fisubrs
push
cli
clc
in
popa
cltd
sbb
mov
je
sbb
and
dec
repnz
add
jo
aad
inc
xchg
or
dec
sub
andb
dec
dec
mov
testl
cli
movsl
cmp
aam
inc
int3
lock
mov
addr16
lods
cmpsb
loope
ret
xor
mov
dec
fdivr
pop
in
sti
xlat
mov
stos
lods
mov
mov
adc
push
in
aad
cmp
adc
inc
push
add
outsl
xor
iret
push
or
pusha
fsubrl
in
aam
dec
addr16
gs
and
push
lret
out
stos
daa
adc
int3
xor
xor
and
repz
pop
lock
xchg
jns
test
cld
xorb
sti
push
mov
jmp
cmp
test
loop
dec
xlat
cmp
pop
lahf
or
pop
in
mov
cmp
push
das
lret
pshufw
lahf
mov
pop
shrl
lcall
and
push
mov
mov
inc
test
std
test
push
scas
test
fbstp
or
adc
vpcmpeqd
inc
dec
sub
ret
push
fcompl
loop
enter
adc
adc
shrl
lds
jp
nop
adc
sub
mov
mov
jne
iret
add
cmpsl
pop
dec
jmp
jbe
xor
xchg
dec
mov
aas
dec
aad
aam
inc
lret
pop
adc
imul
call
mov
pop
pop
ljmp
push
sub
sub
rcr
das
leave
add
or
sub
test
out
push
mov
jo
add
pop
es
pop
sti
fwait
btr
xor
insb
sbb
repz
clc
cmp
dec
mov
std
adc
cmpsl
enter
clc
cli
pop
jmp
sbb
rorl
movntq
push
nop
daa
je
and
shlb
inc
test
fucomp
adc
in
lahf
or
xchg
loop
call
nop
adc
in
pop
jecxz
pop
adc
or
xlat
cmp
fwait
cli
in
loope
loope
mov
cmp
add
das
js
cmp
jnp
in
pop
jnp
cmpb
enter
xchg
pop
fwait
push
cmp
push
ljmp
inc
inc
imul
loop
or
fwait
mov
push
pop
call
xchg
inc
mov
mov
or
sbb
sub
push
pop
test
inc
jmp
aaa
enter
cmp
addb
insb
inc
cltd
cld
bswap
mov
ss
rorb
and
inc
ja
ljmp
gs
mov
mov
testb
jo
jmp
inc
repz
pop
adc
cmp
jmp
cltd
pop
push
int
sti
testb
cld
add
addb
fnstsw
int
int
insl
out
fs
dec
mov
and
inc
test
insl
jp
ja
ds
mov
lret
andb
add
inc
pusha
mov
fchs
roll
movsb
inc
pusha
xlat
fdivl
sbb
into
sub
repz
shlb
cmp
negb
aam
add
adc
push
xchg
arpl
daa
sub
adcl
insl
mov
js
test
hlt
xchg
xchg
int
lods
mov
xchg
xchg
jp
cmp
dec
fwait
cltd
mov
outsl
inc
xlat
mov
inc
pop
icebp
mov
cmpb
imul
push
outsb
jnp
adc
jo
xor
jns
cmp
stc
mov
cmp
jle
push
repnz
fidivl
insl
cli
aas
dec
ficomps
sub
lea
repz
add
das
aam
insb
adc
iret
or
and
add
jns
stos
out
push
das
mov
iret
lret
cmpsb
and
insl
xchg
adc
inc
add
lret
cmpsb
andb
test
fcompl
test
out
or
jno
stos
xchg
mov
mov
and
cmc
xchg
sub
cmpsl
cmp
aam
xor
sub
xor
dec
push
je
add
xor
stos
jbe
std
ds
and
or
movsl
sahf
xlat
cmc
mov
mov
push
jb
xor
pop
jno
cmp
cmpsl
pushf
cwtl
xchg
sbb
fmulp
pop
push
fwait
and
and
push
mov
add
jo
jns
lds
es
imul
cltd
out
shlb
out
cmp
mov
scas
test
dec
or
ja
iret
cs
pop
ficompl
pop
xlat
pop
jnp
mov
repnz
add
loop
pop
mov
push
mov
or
test
lods
pop
out
add
fstcw
scas
aas
pop
pop
mov
popf
mov
adc
add
xor
jl
popa
ficompl
pop
in
sahf
jns
mov
out
mov
stc
iret
fisttpll
fildl
push
or
jno
cmp
pop
xchg
test
loopne
sbb
xor
addr16
dec
stc
adc
shrl
cmp
negl
fcomps
popf
cmp
add
clc
and
in
dec
gs
jecxz
leave
fs
fldlg2
stos
push
push
movups
enter
inc
je
jns
sub
sub
lahf
ss
es
xchg
loopne
je
pop
aam
shll
rcll
cmp
shlb
cltd
xchg
pop
sarb
mov
jg
pop
jno
arpl
cmp
jns
or
xor
jg
test
xor
cmp
fnstsw
ja
je
inc
jae
mov
fstl
xor
jb
xchg
xchg
dec
call
insb
xchg
sbb
ja
rorb
mov
inc
push
or
and
pop
push
cmc
ret
aaa
jecxz
push
dec
add
les
pop
inc
in
ds
fnstenv
pop
mov
add
jo
and
ss
lahf
hlt
mov
pop
add
dec
bound
dec
test
mov
jno
mov
or
sub
cmp
lock
repz
adc
or
jbe
jmp
xchg
mov
pop
clc
or
loopne
pop
popa
clc
mov
jg
jmp
or
pop
int3
outsb
sub
je
rcrb
inc
scas
es
dec
test
lret
sarb
jp
mov
or
fildll
mov
cwtl
mov
out
and
call
test
mov
stos
lods
sub
repz
pusha
mov
jno
shrb
data16
daa
mov
pop
sahf
or
lcall
in
test
cs
in
xor
int3
sub
adcb
or
adc
inc
xor
add
ljmp
daa
repnz
push
lods
mov
mov
xor
add
aas
push
test
sbb
add
jmp
adc
mov
popa
icebp
mov
and
adc
xor
mov
cmpsl
sbb
dec
dec
cmp
lods
test
les
add
inc
push
add
fisubrs
dec
enter
insl
mov
jmp
jb
imul
mov
push
lret
or
sahf
lods
enter
lea
lock
mov
clc
adc
inc
or
push
mov
jnp
xor
std
cltd
push
filds
test
outsb
icebp
stos
xchg
and
dec
pusha
das
sbb
int3
push
mov
fdivrl
shrb
xor
jmp
mov
mov
add
je
je
adc
int3
xchg
pmulhw
inc
hlt
gs
loope
xchg
and
add
pop
adc
sub
bound
mov
js
sbb
xchg
add
mov
jae
cmp
mov
fisubs
shr
arpl
jo
xor
gs
lods
mov
lock
mov
movsl
lds
or
push
lds
pop
jle
dec
add
xchg
xor
jmp
out
fidivrs
or
loope
xchg
fistl
sbb
rcll
test
scas
sbb
loope
iret
and
lods
lea
insb
aad
pop
mov
pop
leave
cmp
push
cwtl
imul
ds
outsl
ljmp
and
dec
xor
mov
cmpsl
es
sub
idivl
push
push
inc
lahf
shlb
rcr
imul
test
and
or
fisubs
movsl
sub
mov
jl
lock
and
cwtl
outsl
insb
sarb
mov
push
negl
sub
cltd
aam
mov
pop
cmpsb
imul
ret
mov
mov
xor
dec
mov
mov
int3
pushl
lods
lcall
cmpsl
loopne
mov
fidivrs
popf
pop
push
fst
fcmove
fs
jecxz
xchg
sub
mov
enter
pop
mov
pop
repnz
push
or
or
mov
pushf
insb
cmc
leave
lret
mov
mov
jb
inc
and
jne
fwait
test
jl
push
jge
movsl
or
addr16
imul
pop
rcll
mov
hlt
loope
fidivs
jns
js
insl
ds
addr16
insl
stc
dec
nop
outsb
daa
in
dec
cwtl
pop
mov
pop
aaa
test
jecxz
adc
push
hlt
lret
clc
and
fbstp
push
in
jmp
fildll
mov
inc
jecxz
add
pop
mov
push
in
imul
cmpb
testl
cs
push
mov
push
inc
inc
push
inc
test
jg
lcall
inc
gs
stos
lret
xchg
ret
mov
fisttps
xchg
pop
scas
add
dec
pop
jb
xor
push
adc
push
add
pop
lea
mov
leave
xor
ficoms
es
or
inc
in
xor
and
sub
inc
jnp
cmp
mov
shrl
push
lods
fs
mov
neg
shrl
pop
xor
movsb
outsl
mov
cmpb
das
rcll
inc
xchg
lods
pop
jmp
daa
sbb
push
mov
mov
mov
add
pop
or
jb
pop
cmp
cmpb
pop
jg
xchg
sub
pop
mov
dec
movsl
jmp
movsb
shl
push
rorb
mov
sbb
outsl
pop
xor
mov
jecxz
clc
xor
out
ret
cmpsb
sbb
insb
popf
adc
xchg
arpl
jns
and
xchg
sub
out
in
jmp
das
ret
pushf
dec
pop
jl
dec
loopne
push
inc
pop
xchg
or
in
dec
pop
test
imul
loopne
push
push
iret
fistpl
mov
push
lret
sti
mov
cmp
or
aaa
lret
push
decb
ljmp
jg
pop
xlat
xor
gs
call
inc
lods
subl
stc
push
sbb
out
insb
std
mov
out
rol
sub
push
cmc
pop
or
lods
jp
dec
addl
icebp
mov
jp
sub
nop
mov
inc
xor
popa
test
shlb
imul
or
or
test
dec
mov
scas
jno
in
sbb
pop
and
sbb
in
ret
sbb
mov
mov
dec
addr16
pop
movsl
cmp
mov
sub
mov
clc
jl
lds
pop
dec
aaa
in
jg
dec
push
mov
pop
loop
pop
pop
stos
add
scas
cmp
adc
mov
add
dec
aad
in
and
out
dec
mov
dec
pop
mov
test
sbb
mov
mov
or
push
dec
cmpsb
sarb
cmpsb
cmp
ss
mov
mov
push
push
sbb
mov
test
and
pop
sub
mov
leave
jg
push
popf
inc
fstps
sub
cmp
into
pop
mov
mov
faddl
push
fs
je
cld
dec
sub
dec
addr16
jg
fidivrl
and
cmp
mov
jecxz
and
shr
push
fcom
cmp
and
mov
mov
outsb
das
cmp
pop
out
cmpsl
sub
aad
pop
xchg
daa
mov
fsubrl
mov
test
jge
dec
mov
jl
fsubrs
lcall
xchg
test
fidivrl
and
jp
pop
insb
ret
mov
push
xor
jb
fsubs
pop
jae
in
xlat
ljmp
sti
jl
and
rolb
movsb
les
in
hlt
mov
add
in
dec
rorb
mov
pop
cwtl
dec
dec
mov
adcb
jnp
jne
cmp
mov
daa
pop
inc
push
pop
adc
push
xchg
dec
add
jg
and
mov
xchg
xor
fdiv
xlat
loop
into
int3
movsl
inc
push
mov
insl
loopne
adc
clc
cltd
push
jg
sarl
loope
pop
cltd
mov
shlb
cmp
aad
mov
inc
adc
int3
popa
and
xchg
daa
fwait
orb
or
jae
sbb
fisttpl
dec
cli
adc
or
mov
test
mov
adc
pop
cmc
out
push
sbb
pop
dec
rcrb
ss
mov
insl
inc
xorb
bound
hlt
cmp
loop
cmp
inc
cmpsb
jl
push
enter
push
lret
int3
jns
push
and
fisttps
int3
scas
add
push
xor
out
jns
sbb
add
and
jecxz
inc
adc
orl
mov
or
add
imul
test
lret
out
inc
fcompl
movq
sub
jmp
mov
or
sete
adc
xchg
push
je
pushf
and
les
mov
int
mov
or
adc
pop
dec
loop
lret
xor
movsb
pop
pop
test
jns
adc
sub
dec
nop
lods
aam
mov
popa
das
push
xor
nop
pusha
mov
xchg
mov
in
sti
add
mov
and
lods
adc
sub
inc
lods
sub
mov
pop
push
adc
outsb
insl
lds
mov
leave
pop
ret
loop
rcl
outsb
rcrb
loopne
negb
in
mov
mov
stos
jae
sahf
jg
lret
jno
out
ficoml
test
cmp
stc
push
xor
jns
mov
pushf
scas
jle
loopne
fucomp
shlb
inc
push
cmp
mov
movsl
fnstcw
cmp
outsb
cwtl
lcall
sbb
push
xor
sbb
pop
dec
push
push
or
scas
notb
push
xchg
cmp
inc
push
jnp
mov
lods
lds
inc
and
cmp
jbe
popa
lahf
daa
xchg
int3
call
cmc
cmc
sbb
adc
fmull
cmc
fidivl
push
daa
mov
aaa
fidivrs
out
add
xor
scas
cmp
dec
imull
cmp
cwtl
push
xor
cmp
int3
lret
bound
push
or
cmc
sbb
jnp
mov
jle
and
adc
in
das
xchg
sub
pop
pop
add
lret
out
rclb
shrl
insl
rcr
cmp
sub
insb
cli
stc
mov
mov
mov
mov
not
in
int3
adc
mov
xchg
loopne
cs
xchg
mov
jp
jl
enter
in
iret
mov
xor
ds
fisubrl
cmovnp
sbb
sub
es
lods
inc
and
adc
mov
sub
fs
sbb
push
or
or
mov
mov
sub
das
into
aam
notl
push
outsb
rcrb
cmp
lea
ljmp
ljmp
sahf
ret
sbb
xchg
roll
sub
mov
subl
lahf
movsb
pop
movsb
pop
mov
xor
mov
xchg
insb
mov
icebp
jp
in
pop
cmpb
jo
xchg
push
inc
pop
inc
in
stos
pop
pop
outsb
push
pushl
in
mov
dec
jne
dec
mov
pop
fs
inc
and
std
jo
jbe
int
pop
addb
data16
inc
ljmp
jg
or
inc
divb
lcall
ljmp
into
incl
adc
sbb
movsb
insl
add
fisttps
sub
sar
outsl
xchg
outsl
jle
test
inc
mov
mov
das
repz
sub
pop
clc
ljmp
push
call
ss
shrb
icebp
and
lahf
xor
les
rcrb
cmpl
jg
mov
sar
mov
mov
pop
push
sub
out
stos
inc
int
adc
sub
addr16
and
xchg
cmpsl
xlat
push
jle
add
out
outsb
sub
call
inc
jge
rcrl
lret
jp
inc
and
ljmp
mov
and
jno
ljmp
push
pop
mov
and
mov
scas
jne
inc
jmp
and
subb
xchg
sbb
push
push
jno
push
aas
outsl
ret
adc
mov
int
pop
lods
inc
int
pop
loopne
mov
sub
stos
inc
insl
ja
aas
jns
popf
xchg
push
xlat
in
pushf
push
add
sar
call
mov
dec
jge
dec
push
jbe
adc
lds
faddp
js
insb
mov
leave
xlat
fiaddl
pop
je
pop
test
add
lcall
fsubrs
cmpsb
dec
dec
cmc
int3
push
out
popf
mov
jbe
mov
push
enter
pop
je
xor
mov
mov
mov
aaa
dec
add
inc
orl
inc
inc
call
and
cmp
inc
and
in
movsb
pop
mov
mov
int3
jns
xchg
jo
scas
cltd
push
mov
stos
xchg
clc
pusha
dec
jle
cmc
cmp
and
add
stos
fcmovnu
xchg
cmp
jmp
fisttpll
les
add
fisubrl
sbb
das
das
push
sbb
xchg
pop
int3
iret
dec
sahf
sbb
shll
sbb
popa
ljmp
mov
shrl
mov
add
ss
andl
xchg
shlb
lock
or
pop
xor
subl
ljmp
out
mov
dec
mov
aam
inc
or
in
xchg
dec
mov
lods
xor
add
lock
cmp
imulb
jl
or
int
test
cmp
mov
fnstsw
out
cmp
repnz
into
inc
mov
lret
lds
or
mov
jle
mov
push
mov
stos
insl
lret
and
lock
dec
loop
fnstsw
push
mov
icebp
adc
push
inc
push
mov
sbb
sub
cmp
fs
xchg
out
and
push
push
mov
cmc
xor
out
outsl
mov
mov
or
mov
sbb
out
mov
sbb
sub
lea
std
fsubrl
dec
mov
or
dec
inc
fstpt
xor
aam
push
inc
or
or
popa
sub
rcr
jecxz
test
cmpxchg
cli
rorl
push
ds
xor
mov
aaa
cmp
ds
jns
and
push
in
xlat
or
out
shl
mov
ds
pop
out
mov
sub
shrb
iret
subps
xor
xchg
push
fldcw
loopne
and
xor
mov
insb
cli
rcrl
xchg
ret
push
fbstp
test
sar
mov
push
xor
or
adc
imul
out
loope
cwtl
pop
es
mov
out
test
decb
cmp
hlt
adc
push
jno
dec
jecxz
pop
leave
xor
fisttpll
js
stos
std
jns
sbb
pushf
cmpsl
jnp
xor
icebp
and
push
in
pop
lock
js
insb
mov
lret
out
xor
dec
addb
rcll
aad
shll
push
cli
fwait
sti
fisttps
stos
fs
pop
mov
sub
pop
xorb
mov
dec
add
decb
cmc
cwtl
dec
and
push
das
adc
mov
jp
dec
fistpll
aaa
mov
sbb
hlt
xor
sbb
or
cs
or
addr16
mov
jle
std
add
inc
fcomps
fildl
sub
dec
popa
jmp
jns
push
shrl
loop
adc
out
lcall
in
ret
cwtl
fidivs
cltd
lahf
lods
aam
adc
out
inc
scas
jno
push
outsb
mov
push
nop
pushl
lret
outsl
fwait
sti
xchg
int
mov
and
mov
fiadds
fwait
jmp
decl
hlt
sub
mov
and
loop
loope
lret
into
dec
cmc
push
es
or
mov
hlt
pop
push
push
xchg
movsl
ret
jg
pop
push
add
cli
outsl
adc
ja
imul
add
out
jb
sub
lahf
sub
sbb
dec
cmp
icebp
leave
pop
lcall
dec
sbb
test
stos
int3
push
xrelease
cmp
mov
or
hlt
ret
mov
addb
pop
out
stos
and
mov
test
into
aas
mov
xor
pop
or
pop
out
xlat
daa
xor
cmpl
inc
dec
and
adc
std
mov
popf
cmp
xchg
xor
dec
icebp
push
push
stc
push
sub
cmp
mov
jbe
mov
cmp
xchg
in
ljmp
and
or
jo
mov
dec
call
add
int
pop
cwtl
add
sti
cltd
xor
movsb
call
xchg
shlb
add
mov
pop
jnp
mov
sarb
add
addr16
lret
cmp
xor
cli
lock
pop
xchg
stc
inc
push
or
test
sbb
sbb
mov
lods
add
outsb
cmp
mov
aam
jle
das
out
jl
mov
pop
xlat
or
stc
add
outsl
push
insb
or
add
pop
pop
jb
lahf
inc
adc
mov
lea
fimull
jnp
pop
inc
arpl
sub
loopne
fstl
sbb
sbb
sbb
mov
ret
sub
lds
lret
rol
shlb
shrl
int
jbe
inc
imul
pop
ret
sub
pop
xchg
scas
nop
js
scas
jnp
icebp
mov
push
test
outsb
add
out
int3
cmp
cs
inc
repz
sbb
out
in
les
movsb
bnd
pop
ja
cmp
push
cmp
lret
dec
cmp
inc
sarb
add
cmp
pop
inc
mov
push
iret
ret
inc
cli
push
outsl
and
imul
push
pushf
mov
inc
ja
sarl
lcall
or
repnz
add
cmp
into
add
add
or
or
loopne
jne
dec
mov
loope,pt
fistpll
stc
out
aas
lock
out
aad
mov
pop
ds
jge
ljmp
repnz
aad
ret
mov
add
hlt
roll
add
add
mov
push
nop
sub
mov
lods
pop
lods
les
mov
pop
ret
sub
aam
scas
jb
dec
in
dec
hlt
fldenv
aad
cmpsl
dec
arpl
data16
test
outsb
out
pushf
add
adc
jo
enter
aas
push
push
fcoms
push
cmp
incb
add
dec
rolb
mov
adc
mov
jne
shlb
ljmp
repnz
gs
pop
jmp
or
lods
push
mov
add
aad
pop
cmp
push
frstor
leave
push
pop
testb
js
or
fildl
push
or
cmpsl
cmp
jle
xchg
xchg
and
push
lcall
pop
in
jecxz
sub
rcr
lahf
adc
in
mov
or
jbe
sub
push
push
test
or
loopne
pop
shll
lods
pop
mov
fwait
xchg
movsl
adc
call
mov
sub
cmp
outsl
daa
mov
push
popf
sarb
push
xchg
xorb
call
sbb
push
inc
xchg
popf
je
sbbb
dec
stc
rcll
in
inc
fiaddl
dec
sub
add
jle
ss
dec
fwait
inc
fcom
mov
in
sbb
mov
cmpsb
fnstsw
cmp
xlat
xchg
outsb
mov
ss
out
pop
lahf
imul
aas
adc
cmp
xchg
into
test
mov
mov
add
insb
mov
mov
scas
cmp
mov
fistpl
sbb
mov
mov
mov
shrl
jne
subb
cmp
lock
lods
cmp
mov
repnz
imul
cld
dec
dec
ss
out
mov
push
popf
gs
mov
test
adc
test
xchg
jo
js
in
sub
cmp
je
dec
js
mov
scas
subb
scas
aas
add
movsb
inc
sbb
jns
inc
pop
je
ljmp
mov
jmp
mov
roll
push
xchg
fcoml
add
fidivl
imul
ja
adc
push
push
jns
in
add
mov
outsl
dec
fnstcw
mov
sbb
ss
push
lea
fwait
je
inc
stos
and
push
jbe
adc
mov
mov
push
subl
xor
lret
or
pop
es
cmp
jb
ds
and
test
dec
out
adc
sti
insl
sub
cmpsb
and
sub
cmpsb
pop
add
outsb
xor
inc
sub
call
es
in
hlt
mov
mov
out
shl
scas
pop
jno
cmp
dec
mov
mov
std
loope
mov
pop
push
pushf
stos
repz
pusha
sbb
insl
mov
fmuls
jbe
dec
mov
sarb
adc
cmpl
mov
in
push
mov
fcmovnu
int3
or
rcl
adc
mov
mov
mov
jbe
in
je
add
pop
stos
inc
push
movsb
ja
lea
das
jecxz
fldt
sub
push
or
ret
hlt
rcl
push
sub
popa
loopne
mov
scas
pushl
stc
mov
jb
fs
arpl
xor
divl
mov
mov
scas
xchg
pop
mov
int
clc
idivb
xchg
fists
cmp
and
lods
js
and
jecxz
in
mov
lods
add
pushf
pop
xor
gs
cltd
std
lock
cld
ja
cwtl
repnz
aad
mov
xchg
lret
push
js
xchg
je
mov
sbb
test
xlat
insb
cmpsl
leave
mov
sti
enter
jl
andps
mov
push
fildll
ret
sbb
mov
add
ja
in
cmp
add
testb
inc
das
add
stos
xor
push
push
mov
cli
insb
and
imul
mov
out
inc
push
mov
mov
aad
mov
pop
movsb
mov
adc
cmp
sub
in
push
dec
loope
mov
outsb
in
jmp
xor
jmp
mov
nop
test
out
aad
hlt
add
aaa
stos
popf
jge
push
sub
stc
pop
inc
popf
or
xor
pop
inc
out
lret
push
cmp
mov
pop
cmp
cmp
scas
out
dec
push
pop
adc
dec
cmp
call
xchg
fbstp
mov
xchg
adc
stc
mov
fldl
mov
int3
arpl
lods
xchg
aam
jmp
loop
add
bound
xchg
jb
adc
xchg
enter
push
ljmp
std
jge
inc
dec
or
pushf
repz
sbb
daa
jge
shrb
push
int
xor
and
add
dec
jmp
out
push
sub
into
mov
ret
or
les
xchg
jmp
loopne
inc
es
outsb
sub
andb
mov
jp
xchg
add
int3
pop
sti
clc
jnp
ss
enter
lods
arpl
mov
and
dec
mov
call
aam
subl
inc
adc
pop
push
mov
push
jl
jge
aam
fcmovnb
mov
sbb
dec
sti
push
push
les
lret
or
js
jnp
call
cld
shr
nop
sbb
add
jae
push
push
mov
fistl
xlat
outsl
mov
iret
data16
jno
adc
push
aas
pop
icebp
out
mov
adc
jns
pop
ret
out
pusha
pop
pop
rorl
inc
sbb
dec
ja
and
or
daa
xlat
mov
test
pop
pop
and
sarb
stos
mov
mov
cmp
movl
mov
js
mov
mov
mov
daa
mov
loop
enter
test
xlat
jne
mov
pop
xlat
xchg
sub
rcrl
fldcw
xor
xchg
or
imul
mov
sahf
bound
jp
andl
popf
mov
std
test
add
xor
lds
stos
cmc
adc
std
xor
fnstenv
or
and
aaa
xchg
sub
jno
add
es
lock
add
stc
popf
cmp
pusha
gs
mov
jno
testb
jl
addr16
enter
cmpsl
xorb
push
mov
flds
pop
xchg
mov
test
push
sti
push
mov
fsts
mov
push
sarl
nop
dec
push
sbb
jl
int
shl
jle
dec
inc
xlat
jg
push
sub
iret
orl
push
mov
inc
imul
xchg
dec
dec
jne
scas
mov
sub
mov
jnp
and
add
mov
out
push
inc
inc
cmp
inc
loop
push
cmp
lods
aad
std
ret
inc
test
and
xor
xchg
xor
cs
xchg
xchg
popf
fwait
int
mov
add
jl
xchg
loopne
mov
jle
push
outsl
dec
add
cmp
mov
ficomps
adc
sub
sub
les
add
clc
jecxz
movsb
scas
dec
add
lea
jb
enter
push
fdivp
adc
pop
testb
aas
xor
movsl
sbbb
cmpb
pop
sub
inc
lret
jb
dec
push
push
inc
dec
xchg
jle
cwtl
addr16
repnz
xchg
jle
jns
test
cltd
sub
in
xchg
adc
popa
cmp
xchg
push
mov
jb
insl
loopne
and
add
std
inc
push
lods
ljmp
xchg
mov
or
lahf
fdivrs
sbb
or
xor
adcl
dec
mov
std
jmp
or
xor
xlat
jns
pop
jb
push
out
push
data16
or
into
enter
mov
pop
fidivrs
xor
outsb
mov
cmp
jg
mov
and
mov
cmp
sub
lfs
adc
jo
aas
mov
xchg
inc
cld
or
cmp
pop
repz
in
test
fnstcw
inc
adc
sti
sbb
andb
movsl
lods
andb
adc
jge
shll
dec
loopne
adc
divl
push
shrb
pop
lret
test
mov
sbb
out
lds
xchg
mov
ret
mov
aad
insl
or
jo
push
jne
sti
fwait
sti
mov
and
lds
adc
adc
je
adc
testl
sbb
jmp
or
push
ljmp
mov
cli
outsb
and
das
dec
pop
sbb
out
repz
das
xchg
jb
dec
nop
fnsave
call
cld
or
push
into
in
xchg
nop
fcmove
int3
jg
add
adc
sbb
mov
add
mov
clc
and
push
pop
daa
mov
mov
or
sub
loop
mov
sub
fyl2x
sub
mov
test
or
out
mov
push
rcrl
mov
xor
aaa
mov
ss
gs
push
jmp
mov
xor
jbe
adc
dec
push
out
scas
mov
dec
xor
jne
add
lock
dec
es
push
push
ss
mov
pop
pcmpgtb
or
push
push
popf
inc
pop
mov
jmp
imul
je
jl
out
in
push
xor
xchg
rclb
jne
inc
cmpsl
call
fsubrp
mov
cmpsb
xor
pushf
xor
fldl
insl
imul
xor
mov
push
dec
rcrb
notl
in
packuswb
cmpsl
dec
and
sbb
and
fdiv
xor
aas
mov
pop
cmp
sbb
imul
add
cmp
mov
scas
inc
movsl
adc
int3
test
inc
adc
push
out
das
add
xchg
push
mov
cmpsl
aas
gs
mov
cmc
fcoml
xlat
mov
out
jecxz
mov
cmp
gs
sbb
pop
icebp
in
aas
movsb
repz
lcall
add
xor
and
scas
addb
xchg
pop
xlat
insb
imul
sbb
push
jno
out
xchg
pop
mov
sarl
enter
int
dec
xchg
or
pop
dec
adc
movsl
mov
pop
adc
push
test
cmp
jbe
pop
xor
gs
jl
popa
jge
pop
movsl
inc
hlt
mov
and
in
leave
xchg
adc
jbe
add
inc
xchg
cmp
fstpl
cltd
xor
pop
adc
sub
pop
rorb
icebp
jl
repz
adc
pop
outsl
icebp
icebp
sub
lea
int
push
jmp
imul
arpl
push
jne
push
lods
jnp
sub
leave
test
push
xor
jnp
pushf
test
inc
push
jbe
mov
sub
movsb
pmuludq
lods
mov
xchg
mov
xlat
dec
lods
ljmp
push
out
cmove
jo
cmpsb
gs
fs
fildll
cmp
insb
dec
fiadds
out
pop
cli
pop
les
scas
and
test
inc
daa
stos
ret
pop
fcmovne
ljmp
ja
xlat
das
scas
repz
fidivs
je
jmp
es
jmp
push
adc
shr
imul
idivb
mov
ret
dec
sbb
incl
push
xchg
mov
int
arpl
push
push
xor
cwtl
push
lods
xchg
clc
int3
or
push
dec
or
or
jne
pop
dec
or
icebp
mov
mov
add
push
cmpsl
daa
outsl
or
iret
jle
or
pop
rcrb
test
and
jb
pop
jmp
iret
aas
stc
nop
dec
insb
jp
sahf
outsb
sbb
jg
out
sti
mov
mov
cmp
in
sbbl
stos
test
stc
inc
xchg
cmpsl
mov
mov
outsb
in
sahf
popf
iret
jmp
data16
fs
jg
push
lods
pop
add
inc
fistpl
cmpsb
push
xor
xlat
push
rcrl
add
lea
xchg
fstps
dec
in
jl
or
fldenv
mov
flds
and
push
or
std
cmp
inc
push
and
jae
mov
push
or
mov
jno
idivb
pusha
clc
in
insb
jb
adc
adcb
out
mov
ret
aas
mov
jl
ds
push
push
fldcw
xor
fs
imul
or
lds
dec
call
insl
lods
outsb
popf
push
scas
shl
pop
xor
lods
arpl
subl
push
stos
sub
push
imul
cmpsb
pop
mov
aam
js
pop
movsl
rep
sbb
scas
dec
lock
inc
shll
cmp
adc
lods
cmp
stos
subb
adc
test
mov
push
popf
mov
mov
repz
cmp
pop
std
subb
xchg
mov
inc
pop
addr16
add
in
jae
in
pop
sub
int3
inc
rcll
fidivs
jno
nop
ja
mov
mov
jmp
cld
mov
xchg
hlt
push
lahf
div
stos
mov
inc
sbb
xchg
pop
cli
push
cmc
fs
lods
je
adc
mov
or
cmp
movsb
cmp
and
xor
push
cltd
in
or
mull
dec
popl
jmp
aaa
push
adc
dec
cmpl
add
push
movsb
mov
cld
lcall
in
ret
test
into
sbb
test
jne
roll
popf
testl
vmulsd
mov
imul
lods
push
adc
jbe
loop
adc
mov
sahf
mov
sbb
mov
push
arpl
mov
std
add
test
push
dec
mov
or
movsl
jb
pop
rcrb
lahf
cmp
sub
xor
add
es
loop
out
add
jnp
mov
or
notb
pusha
mov
call
gs
jb
cmp
xchg
ljmp
and
mov
xchg
sahf
xor
addl
std
xchg
xor
mov
jnp
punpckldq
inc
xlat
jb
fstl
jno
inc
pusha
scas
jbe
dec
jmp
sbb
lds
sbb
iret
shl
in
dec
loop
clc
xor
jae
lcall
pop
addr16
fbld
adcl
pop
test
jo
inc
push
cltd
cli
test
sub
pop
cs
xorb
inc
test
sub
stos
mov
lret
jge
hlt
mov
sub
jecxz
mov
shlb
into
cmc
fdivl
mov
push
in
movsb
xchg
jno
sub
icebp
outsl
cmp
fstpl
repnz
ret
insl
add
push
icebp
cmp
cmpsl
dec
mov
mov
mov
in
stos
stos
test
cmp
out
dec
jne
sbb
xor
mov
inc
cli
xchg
pop
call
mov
idivl
mov
out
and
outsl
movsl
sub
xchg
xor
push
push
jmp
nop
cli
push
jbe
pop
loope
push
shll
in
mov
cmpsl
lahf
jo
ret
fs
inc
push
enter
mov
fs
xor
adcb
sub
orl
sub
or
lret
data16
idivl
or
inc
mov
cmp
or
outsb
mov
and
jns
aad
rolb
or
orl
xor
add
sahf
lock
or
in
adc
inc
cld
inc
cld
sahf
and
add
out
cmp
lock
dec
inc
or
jb
mov
adc
jo
clc
cmp
in
in
leave
test
orl
lds
jo
sarl
insb
clc
cmc
push
jl
shll
push
and
bound
shll
sbb
and
xchg
xor
lods
ljmp
out
es
in
test
movsl
push
es
sbb
out
xchg
adc
ja
sbb
inc
test
inc
push
pop
arpl
jae
xor
stos
ljmp
cwtl
and
imul
lret
insl
div
add
es
mov
xchg
adc
mov
mov
and
mov
mov
cli
or
sbb
int3
jp
ljmp
and
cmpsb
pop
sub
pop
jnp
stc
and
or
add
jmp
xor
repz
mov
and
fsts
push
adc
pop
pop
out
adcl
out
or
push
dec
sbb
shl
mov
xchg
jne
and
xor
insl
movsl
push
add
hlt
aas
sahf
and
dec
adc
inc
mov
adc
jnp
dec
and
sub
mov
adc
jnp
push
jns
or
xchg
mov
shl
mov
ja
fnstsw
aam
int
mov
insb
popa
xchg
icebp
adc
out
add
mov
dec
lock
shrl
cmp
sahf
jecxz
pop
cmpb
push
sbb
pop
repz
push
in
lcall
sbb
inc
sub
insb
scas
mov
jmp
or
repnz
fistl
aam
jb
jbe
xchg
dec
call
shll
push
xchg
fdivl
dec
bound
fcmove
jmp
xor
out
mov
cmpsl
and
lds
int3
or
ds
fwait
hlt
cmp
jo
icebp
data16
xor
cmp
add
pop
cltd
in
mov
ds
ja
aam
inc
and
test
in
lcall
sar
xchg
add
scas
dec
dec
andl
sbb
xor
jb
ljmp
dec
pop
lret
sbb
jns
mov
jns
adc
popf
insl
gs
xchg
mov
fwait
into
scas
or
test
std
test
das
mov
add
push
loop
ltr
inc
scas
jecxz
sub
int
js
xchg
dec
jecxz
sbbl
sti
push
inc
jmp
jne
or
mov
mov
add
out
jae
loope
xor
jmp
test
push
cmp
fwait
sbb
jne
push
mov
sbb
shll
add
inc
out
and
in
aas
jnp
arpl
mov
dec
add
sbbb
mov
and
ja
pop
cltd
dec
out
cmpsl
loope
mov
pop
dec
jns
sbb
loope
jns
push
clc
popl
fcomps
sub
sub
and
ljmp
call
pop
mov
fs
jne
sahf
jno
lods
and
movsb
or
inc
fsubrl
mov
pop
loop
adc
pop
out
xchg
adc
pop
lock
push
lds
divl
mov
cmp
negl
lahf
add
stc
addr16
int3
mov
loopne
int
cmp
cmpsl
mov
jo
or
pop
sti
lahf
pusha
and
sub
mov
clc
cmp
cmp
pop
cmc
jae
mov
mov
lahf
jo
pop
pop
mov
pop
mov
movsl
cld
jns
dec
addl
jge
mov
and
out
push
mov
mov
jl
and
xor
and
adc
mov
dec
ss
inc
xor
push
or
push
test
ljmp
sbb
mov
mov
xchg
cmpsl
mov
add
mov
cmpl
pop
out
lods
inc
fstl
cs
leave
leave
jg
inc
call
sub
or
add
mov
inc
inc
adc
xor
jns
aam
popa
sbb
cwtl
test
gs
mov
lods
inc
pusha
arpl
pop
repnz
fisttps
xchg
std
mov
mov
add
add
hlt
jo
ss
test
mov
aad
js
jmp
test
cld
pop
js
loopne
dec
orl
mov
out
shll
sbb
test
inc
sbb
loop
cmpsl
sti
dec
and
movsb
pop
add
add
sbbb
mov
fisubrl
mov
aam
sbb
stos
pushf
cli
rcll
fisttpll
lcall
sbb
int3
and
inc
push
jmp
push
cltd
and
int3
sub
inc
pop
imul
jne
adc
lcall
sbb
fst
xchg
xchg
sub
movsl
scas
sbbb
daa
jae
roll
mov
push
xor
mov
enter
add
out
dec
mov
cmpsb
call
iret
jbe
int
cmp
mov
xchg
out
in
sbb
push
inc
sbb
stos
lahf
jb
loope
icebp
test
xchg
jns
int3
cmc
mov
aam
sbb
jl
je
int
sbb
sbbb
lds
xor
cmp
xchg
aaa
pop
and
push
aaa
adc
jmp
out
adcl
clc
jb
arpl
add
shrl
adc
imul
popf
scas
in
std
xor
inc
repnz
sbb
fnstsw
inc
inc
lahf
std
lahf
das
mov
inc
sti
sarb
movsb
cmp
es
fiadds
push
incl
mov
dec
sub
lcall
xor
test
xor
outsl
mov
popl
add
sbb
adc
xor
aaa
stos
fdecstp
jnp
dec
mov
ds
or
mov
and
fs
cld
movsl
mov
cli
aad
mov
or
sub
test
in
dec
fbld
jbe
xchg
inc
sbb
subl
mov
call
mov
mov
imul
aaa
mov
in
xchg
xor
jae
xchg
rcrl
fdivl
dec
pop
aaa
pop
js,pt
pop
xchg
test
testl
push
mov
push
mov
mov
mov
or
jbe
jecxz
xlat
and
out
sub
imul
daa
xchg
mov
popa
iret
xor
adc
mov
inc
adc
mov
and
test
and
or
aas
add
call
mov
mov
pop
stc
idivb
dec
fnstenv
out
jae
and
add
lea
sahf
add
jmp
andb
cmpsl
sub
xchg
enter
test
inc
ja
hlt
testb
push
xchg
test
je
sbb
into
pop
andl
jg
aaa
mov
dec
fistl
addr16
data16
bswap
xlat
and
shlb
mov
imul
push
lea
mov
cmc
lahf
xchg
pop
rcr
xchg
ret
mov
popf
in
add
jge
jmp
or
lahf
mov
std
mov
and
inc
icebp
mov
mov
push
sbb
mov
xchg
pop
das
cmp
or
inc
adc
idivl
sub
lea
les
andl
dec
sahf
mov
loop
test
sarb
jne
je
sbb
fistps
push
aaa
or
lods
cld
arpl
jmp
cmp
mov
jp
test
mov
push
jp
imul
adc
and
and
or
mov
idivb
popa
sub
fistpl
sbb
cmp
xchg
pop
push
or
iret
push
ljmp
es
adc
andl
push
insl
add
cli
clc
dec
loopne
or
mov
xchg
add
cltd
test
imul
lcall
shl
inc
xchg
xor
ljmp
sub
repnz
xchg
push
jge
xchg
into
popw
es
insb
mov
dec
cmp
sbb
or
or
sub
lea
int
negb
lea
outsb
adc
xor
mov
cmpsb
xchg
shll
mov
pop
xor
mov
sti
in
lods
sbb
cmp
out
xchg
pop
repz
push
out
test
mov
aaa
inc
cmc
ja
jmp
addl
xor
rorl
incl
jl
cwtl
gs
bswap
ja
inc
popf
loopne
test
aaa
push
lea
test
loop
in
decl
cltd
in
mov
dec
rcll
lock
lds
in
push
iret
dec
shll
je
push
sahf
int
dec
pop
adc
dec
lahf
sub
aas
mov
cmpsb
cmc
add
cmc
mov
push
imul
sbb
imul
rorl
jmp
hlt
lcall
sar
or
loope
mov
and
cs
jo
add
jne
out
insb
pop
bnd
push
je
dec
or
popf
xchg
test
and
aam
sbbb
mov
jo
pop
push
int3
popa
divl
jmp
out
sub
adc
push
pop
xor
adcb
sub
lea
sbb
mov
add
in
xorl
add
jp
push
lods
xor
bound
xchg
movsl
sbb
cmpl
fiaddl
loopne
xor
mov
add
ret
sub
bound
cmp
iret
and
popa
lods
sbb
mov
js
call
scas
ljmp
ljmp
mov
stos
jmp
xchg
mov
hlt
shlb
movsl
adcl
push
sub
jae
lcall
icebp
call
fisttps
lock
cmpsb
mov
xchg
pop
movsb
icebp
jge
repnz
cs
jp
stc
imul
ret
ror
test
test
cmpsb
out
outsl
jnp
cmc
das
jge
adc
mov
repnz
ss
int3
xchg
faddl
or
jnp
sbb
lods
cli
pop
mov
cltd
pop
xlat
fdivp
ds
aas
mov
out
inc
es
mov
arpl
dec
popf
dec
mov
jns
mov
lea
lods
mov
cmpsb
notb
mov
push
scas
inc
xchg
cmpsb
lock
and
push
jmp
add
adcl
cmovbe
xchg
push
mov
adc
mov
ljmp
and
ret
pop
jne
pop
push
mov
dec
cmpsl
call
fstpt
sbb
aam
cmp
repz
jp
mov
fucomp
test
imul
call
les
push
data16
inc
nop
inc
fiaddl
fdiv
dec
das
add
lods
sub
popa
jecxz
gs
shlb
fwait
fs
xchg
outsl
iret
lret
xchg
out
mov
xlat
adc
sbb
movsl
aam
fisubl
test
dec
jbe
mull
in
idivb
push
out
std
aaa
dec
adc
adc
xor
or
pop
jns
mov
lcall
in
mov
inc
in
xchg
adc
pop
bound
ret
movsb
push
push
pop
sbb
dec
in
mov
jmp
movsl
and
imul
sub
pop
push
mov
je
shl
mov
dec
in
jo
cmp
jo
subl
hlt
ss
sbb
bound
pushf
xor
sub
fstpt
lahf
loope
lret
lret
mov
xchg
rcl
loope
sti
in
mov
add
orl
mulb
aam
das
fdivs
lret
mov
and
push
dec
xchg
insl
sarb
push
rorb
xlat
mov
ret
out
dec
mov
out
inc
and
mov
imulb
xchg
jge
mov
or
clc
inc
fisttps
sbb
enter
stos
fisubs
mov
jns
inc
es
push
fidivrs
cltd
jne
js
xchg
or
lods
adc
sbb
into
int
hlt
shlb
pusha
add
cs
les
rcl
sub
imul
loopne
sbb
mov
inc
cmp
ret
pop
push
xchg
notb
js
cld
shll
std
pop
adc
sub
lret
aad
mov
std
and
js
mov
in
xchg
inc
ljmp
ficompl
cld
maskmovq
negl
and
pop
ret
jns
inc
mov
jno
ljmp
pushf
and
incb
push
sti
hlt
mov
out
inc
sbb
xor
aas
inc
mov
mov
sbb
xor
push
sbb
cmp
cmc
mov
sub
mov
nop
sarb
mov
lret
data16
push
ret
push
xor
mov
jno
pop
xor
enter
adc
iret
or
xor
ror
out
mov
mov
es
fsubs
sbbb
jg
icebp
aaa
pop
out
pop
xchg
hlt
in
cmp
mov
xchg
jbe
pop
gs
test
bswap
and
lret
insb
aaa
pop
ret
hlt
inc
dec
mov
fs
pop
cli
test
ss
sbb
sar
gs
les
lock
cmp
loop
inc
add
jne
mov
fwait
int3
lret
dec
cmp
bound
inc
pop
pop
jmp
aam
movhps
xor
push
in
jle
clc
iret
std
mov
inc
inc
popf
or
test
pop
mov
cwtl
call
mov
pusha
sub
mov
pushf
mov
test
cmp
mov
xor
push
fwait
sub
jmp
ljmp
in
xor
ss
rcrb
pop
pop
loope
cmp
mov
add
adc
imul
bound
sbb
lret
imul
push
and
mov
out
in
cmp
pop
nop
xchg
or
negl
mulb
push
sbb
rcl
aad
enter
mov
push
aaa
push
lods
inc
test
mov
out
xor
ja
cmp
in
add
adc
xchg
aas
push
insl
and
mov
pusha
popa
adcl
shlb
add
push
insb
imul
add
mov
xchg
and
pop
cmp
mov
cmp
sbb
push
jae
cmp
push
fdivs
js
inc
shll
data16
cwtl
lret
js
mov
bound
xchg
sub
test
mov
push
mov
mov
and
das
pusha
push
scas
fisttpll
xor
jmp
push
cmp
enter
pop
lret
xchg
add
sbb
rolb
sub
data16
pop
lods
pop
ficompl
mov
mov
out
lret
mov
addr16
pop
das
mov
jno
pop
arpl
jmp
movsb
dec
xchg
pop
cmpsl
push
fnstcw
mov
test
mov
sbb
popa
andb
add
cs
mov
sahf
sub
cmp
fildll
and
fidivl
dec
bound
popa
mov
mov
xor
pop
cmpsb
push
lcall
dec
cmp
hlt
dec
aad
jge
adc
dec
int
nop
dec
adc
lock
lds
out
inc
hlt
mov
pop
cmp
jnp
or
in
and
lds
jns
pop
in
dec
or
aad
stos
inc
stos
jns
jo
sbb
les
add
idivb
mov
fadd
fstpl
sti
or
lds
mov
int3
fiaddl
out
inc
pushf
repz
mov
cmp
insb
mov
mov
push
shrb
xlat
adc
jmp
es
out
mov
faddl
xchg
movsl
mov
push
mov
cltd
mov
dec
fnstsw
movq
jp
sub
dec
mov
arpl
loop
xchg
or
mov
iret
leave
sbb
daa
mov
out
xor
fcomi
sti
sub
dec
scas
jb
pop
addr16
test
in
push
sbb
popl
nop
mov
test
inc
cmp
rcl
fildll
sarl
push
aad
sti
addr16
ss
test
mov
add
mov
cmpsl
enter
das
outsb
lds
dec
dec
pop
jle
cmp
or
rorb
loope
mov
pusha
addb
aas
xor
dec
push
ja
push
and
push
push
testb
call
mov
add
xchg
cmc
sbb
sbbl
add
mov
cmp
in
mov
jns
xor
sub
out
cmc
pop
inc
xchg
arpl
push
out
cmpsb
imul
data16
pop
outsb
add
jmp
je
fimull
imul
push
out
int
sbb
inc
cwtl
pop
mov
jge
inc
push
loopne
into
xor
shlb
aam
xchg
inc
test
push
mull
xor
out
push
fnstenv
ss
mov
push
outsl
scas
rorb
inc
bound
popf
notb
and
cmp
add
icebp
or
adcl
lock
cmpsb
in
jecxz
mov
ja
pop
add
add
dec
and
dec
aas
inc
add
data16
adc
jnp
sbb
cmp
sbb
rol
in
sub
bound
jbe
ljmp
sub
and
out
inc
emms
mov
and
mov
sub
push
leave
mov
inc
insl
loopne
aad
mov
sbb
cmp
xchg
daa
xlat
rcll
xor
mov
push
cmp
pop
lods
nop
lea
push
sbb
dec
and
adc
int3
fmulp
bswap
pop
mov
pop
jp
jg
or
push
js
mov
cmpsl
xor
stos
out
in
xlat
lods
mov
cwtl
xor
test
dec
mov
mov
fisubrs
mov
leave
or
dec
fchs
std
xchg
adc
pop
mov
fstp
lds
mov
pusha
mov
mov
push
ffreep
lret
jb
mov
dec
xor
xchg
test
fistl
sbb
stos
loop
ds
pusha
pop
sar
xchg
jbe
xchg
cwtl
sub
lcall
pop
mov
jle
pusha
mov
test
dec
in
pop
gs
in
mov
insl
inc
push
mov
push
mov
mov
mov
mov
or
xor
in
ljmp
and
decl
repnz
mov
push
aad
lock
adc
dec
bound
ja
nop
dec
sub
aad
enter
lds
mov
fdecstp
lods
cli
lods
rcrb
cmp
fisttps
cmpsb
roll
jb
pop
pop
fisttpl
mov
inc
jmp
sbb
cmp
stc
mov
mov
inc
mov
out
xchg
mov
mov
cmp
cmp
fwait
pop
push
and
mov
jno
xchg
pop
push
clc
push
popf
ret
dec
ds
js
jmp
xchg
or
or
icebp
sub
cmc
fiaddl
aaa
sub
test
cmovle
sbb
mov
lcall
cs
int3
push
mov
xchg
jne,pn
test
adc
into
xchg
xor
mov
clc
or
cmp
sahf
inc
rolb
not
in
xchg
jnp
call
test
enter
xor
jl
les
cli
ret
test
xchg
movsl
inc
aam
add
pop
cmp
dec
fbld
mov
push
xchg
push
pop
stc
push
jmp
sbb
xchg
mov
cmp
mov
xchg
adc
incl
sub
cs
pushl
lcall
jns
lds
jnp
push
ja
int
add
cld
test
pushf
xchg
pop
mov
mov
imul
data16
aas
ds
je
pushf
pop
pop
adc
mov
cmp
cs
mov
pop
sub
dec
aad
adcl
add
mov
scas
fs
pop
das
cmp
mov
jmp
mov
lock
scas
mov
adc
cmp
sahf
mov
pop
and
xchg
enter
sub
lods
lcall
movsl
mov
pop
test
pop
fwait
adc
cld
cmc
adc
cltd
xor
popa
or
daa
cmp
pop
insb
jg
cmp
lods
jg
pop
pop
in
popa
mov
call
xchg
cwtl
popa
mov
add
ds
xchg
mov
fstps
repz
inc
inc
mov
test
inc
daa
cli
stc
iret
jmp
sbb
add
bound
cmp
les
push
fimuls
fmul
jge
or
fildl
cmp
xchg
cmpb
pop
push
push
les
sub
out
inc
loopne
inc
and
mov
adc
mov
mov
insl
pop
hlt
stos
add
jnp
out
push
push
add
push
imul
sarl
lds
lret
mov
mov
jge
les
jl
sub
xchg
or
insb
jg
mov
ret
repz
imull
imul
sti
mov
mov
push
xor
fcompl
dec
adc
dec
movsl
int3
jnp
cs
sbb
xchg
loopne
cmp
movsb
pop
xchg
push
dec
ficoms
add
movsl
daa
adc
fsubrl
rcll
pop
insl
decl
mov
arpl
pusha
pop
outsl
or
pop
cmc
scas
and
sub
stos
mov
add
or
mov
cmpsb
push
ljmp
and
jns
cmp
cltd
gs
and
jae
pop
fidivl
dec
xor
pop
push
add
mov
out
sbb
flds
lret
lret
push
out
int
add
sbb
push
and
outsb
in
loope
in
leave
cli
cwtl
push
inc
push
outsl
je
adc
popf
jno
test
fcmove
xor
xor
push
adc
xchg
fisubrs
in
jbe
jb
sub
pop
sub
and
and
jnp
pop
mov
add
jno
gs
out
leave
xor
test
stos
notl
push
mov
int
pop
scas
push
inc
test
movsb
pop
addr16
xchg
repz
dec
pop
cmp
dec
es
jmp
lea
jns
enter
insb
sub
fists
add
ds
sub
dec
or
fcomps
test
sbb
push
icebp
mov
fnsave
jns
mov
test
pop
and
mov
dec
xor
dec
enter
fmuls
or
sbb
mov
hlt
xchg
xor
dec
push
mov
adc
pop
add
sahf
sbb
fwait
lret
or
sti
jne
rorl
pop
hlt
jnp
xor
inc
pusha
divl
and
inc
ds
fsubp
icebp
adc
rorl
cwtd
nop
jge
stos
daa
xchg
out
stos
mov
lret
mov
sar
js
aaa
loopne
dec
lods
add
mov
aaa
or
insl
cmpsb
shll
js
jmp
jecxz
or
mov
sbb
inc
pop
mov
dec
cld
or
imul
sub
ds
es
fwait
lret
stos
or
testl
fs
or
inc
fsubs
lret
pushf
inc
pop
adc
xchg
or
and
and
loop
lahf
dec
inc
das
jnp
inc
sbb
mov
cmp
jns
dec
in
pop
pop
mov
popa
out
dec
pop
xchg
or
loope
jp
int3
fs
lds
test
shrb
dec
fidivl
mov
call
nop
sbb
jge
inc
cmpsl
fidivrl
outsb
pop
cmp
lcall
cltd
sti
dec
stos
fcomip
and
push
adc
xchg
sub
sub
dec
and
push
push
add
rol
fs
pop
dec
lods
mov
push
rcl
cmp
lret
sub
pop
and
das
jo
and
mov
iret
cli
mov
paddusw
cmpsb
push
xor
pop
daa
sub
dec
add
or
push
test
orl
and
lret
add
fwait
in
jo
or
loop
cmp
xchg
insb
rorl
nop
imul
mov
jmp
into
daa
mov
add
ljmp
call
jle
pop
in
pop
mov
or
rolb
shr
xor
adc
push
mov
ljmp
shlb
mov
test
push
shll
xor
pop
pop
arpl
cli
push
in
mov
lds
je
sub
cs
inc
sahf
mov
cmpsl
scas
jge
cmpl
pop
fsubrs
sub
je
insb
imulb
cld
xchg
or
cld
sbb
cmp
lods
sahf
stos
and
jp
nop
lds
mov
imul
sub
imul
mov
mov
jg
mov
cmp
push
push
in
or
xor
mov
mov
push
xchg
fidivs
push
push
imul
hlt
xor
inc
pop
sbb
sbb
imul
gs
and
loopne
fscale
xchg
ret
ret
mov
scas
movsb
scas
in
int3
ja
adc
xchg
and
loopne
cmp
ja
pop
imul
sub
insb
dec
dec
mov
sbb
hlt
pop
cmp
xor
bound
sub
push
fs
std
loop
mov
enter
lods
pop
xchg
lret
ret
aas
xor
insl
push
pop
cmp
mov
pop
dec
subl
scas
and
cld
ret
das
mov
adc
arpl
pop
xor
add
inc
xchg
dec
cmp
in
repnz
mov
in
jb
or
pop
push
cmp
push
rorb
inc
shll
mov
sbb
into
mov
loopne
movsl
ljmp
loope
cmpsl
mov
mov
ss
insl
loopne
mov
ja
arpl
push
cmp
in
cmp
xchg
dec
aaa
mov
sub
push
test
xor
xchg
pop
pushf
fs
jg
dec
fdivs
pop
shrb
sub
lods
jmp
xchg
outsb
add
ret
mov
flds
mov
out
int
xchg
mov
mov
cmp
in
cmp
fldt
or
xchg
sub
pop
sub
je
add
shl
and
dec
imul
mov
test
es
cli
or
mov
sahf
sbb
insl
jge
xchg
or
jecxz
shrb
adc
icebp
rcr
out
jns
scas
aad
dec
pop
lods
lock
fcmovb
dec
push
sbb
cltd
jl
hlt
inc
xchg
shrl
push
jns
cltd
arpl
jle
xor
gs
call
mov
or
xchg
dec
dec
add
adc
fists
push
xor
hlt
cmp
aaa
xchg
sbb
repz
sarb
xchg
add
sub
jb
fucomip
jmp
pop
cmc
add
jl
adc
dec
loope
push
inc
xor
mov
push
pop
outsl
ljmp
mull
xchg
mov
cmpsb
cmp
inc
pusha
int
sbb
ds
outsb
bound
inc
push
dec
sar
int3
sub
cmpsb
mov
jbe
in
mov
test
xor
mov
idivb
insl
sub
dec
iret
mov
sub
loopne
test
fwait
outsl
mull
sbb
mov
les
jecxz
jnp
movb
inc
pop
xchg
xor
xchg
aas
push
not
inc
out
and
xor
add
xchg
cmp
xchg
mov
fcomi
leave
sbb
enter
scas
jmp
nop
dec
cmp
rclb
repnz
fimull
sub
insb
dec
ret
jle
adc
and
pop
adc
nop
xor
pop
jb
inc
mov
mov
clc
mov
pop
adc
pop
sbb
adc
lock
es
lahf
ss
push
ljmp
orl
scas
mov
mov
mov
dec
mov
cmpl
mov
fidivrs
out
inc
leave
inc
leave
insl
and
mov
push
pop
lret
adc
rolb
imul
mov
or
stos
jbe
adc
xchg
mov
pop
divb
inc
rcl
insb
jns
mov
mov
and
ret
mov
xor
insb
repz
mov
jp
adc
insb
arpl
cmpsb
ret
sbb
lcall
and
aam
stos
in
out
ret
outsl
and
cld
cmpsl
mov
je
mov
sti
mov
jle
jle
add
bound
jge
subl
push
mov
sub
inc
js
dec
out
es
push
xlat
rclb
outsb
jp
out
fbld
adc
mov
dec
pop
movsl
dec
pop
and
call
cmp
test
movsl
sbb
dec
popf
out
sub
movsb
xor
mov
aad
cmp
loopne
sub
aam
aas
sbb
and
push
lcall
sti
arpl
cltd
stc
pop
push
mov
mov
push
mov
pop
sbb
push
shl
insl
cmp
lods
xor
sub
out
popa
sub
in
fcoms
sarb
fadd
mov
dec
in
jecxz
aaa
decb
jo
fisubrs
jl
lret
movsl
cmpsb
in
adc
cld
adc
jno
cltd
and
enter
mov
xchg
repz
scas
loop
scas
jecxz
outsl
fidivrl
fidivrl
sbb
jle
or
and
xchg
xchg
shr
add
pop
jl
das
sub
xor
arpl
sbbl
add
ljmp
inc
jmp
outsl
fidivs
out
in
clc
leave
mov
dec
enter
outsl
or
ja
pop
pushf
jmp
cwtl
fidivl
adc
adc
adc
jb
fdivrl
lods
mov
push
add
les
jb
xor
test
shrb
cs
es
aaa
sbb
faddp
adcb
add
fldenv
dec
sbb
clc
adc
ja
pop
testb
jge
mov
in
xor
mov
adcb
lods
pusha
or
popf
lds
jmp
push
pop
js
mov
fstps
shll
mov
push
int3
vpunpckldq
inc
inc
dec
or
jg
iret
add
lds
cmp
mov
xor
dec
and
xchg
outsb
sarl
shlb
mov
or
popa
cld
cmp
cltd
std
pop
mov
icebp
fistpll
movsb
push
das
fists
ret
push
inc
cmpsl
dec
adc
cmc
std
lock
out
es
das
xchg
xchg
add
sbb
jb
cmp
cmc
inc
jae
mov
xor
adc
fsubs
cmpl
in
cmpsl
push
into
or
add
fwait
test
ja
inc
fisubl
cltd
movsb
inc
aad
fisttpll
arpl
ret
ds
sti
xchg
fmulp
into
cs
jl
addr16
mov
pop
ss
aam
add
push
ss
loop
cltd
jg
ss
aaa
add
cmp
out
jg
adc
xor
jmp
inc
les
lods
js
dec
inc
mov
jg
and
jno
fsub
rolb
jno
xchg
xchg
rolb
out
data16
enter
cmp
ja
and
xchg
push
in
int3
mov
push
mov
mov
sbb
into
inc
mov
imul
cmp
lea
cmp
test
add
lret
cld
clc
adc
or
jg
sahf
js
repnz
or
dec
mov
mov
mov
add
jle
icebp
leave
pop
sub
ljmp
stc
mov
push
push
sbb
sbb
flds
in
fnstcw
adc
ret
inc
sbb
mov
aad
jg
pop
mov
das
bound
jb
jb
ss
xchg
inc
in
fcomps
imul
cli
es
jg
repnz
mov
dec
adc
loop
jp
mov
add
xor
shl
jge
add
pop
mov
or
aad
cmp
and
jle
rcl
cmp
loope
lret
dec
cmpsb
imul
rcl
aaa
popa
out
loopne
dec
lcall
shrb
outsb
jne
and
mov
sbb
scas
out
adc
fs
and
jmp
aad
out
out
icebp
sbb
mov
and
xor
pushl
xor
mov
pop
dec
insl
fldcw
test
orl
out
rorb
pusha
mov
or
outsb
push
adcl
fstpt
es
mov
mov
data16
dec
inc
lea
mov
into
jnp
outsl
mov
ljmp
dec
and
ljmp
pushf
pop
int
les
mov
negl
add
jl
jae
in
lea
jbe
sbb
xor
cmp
jmp
or
mov
out
adc
cmp
cli
push
repz
pop
jo
fisubrs
mov
adc
xor
mov
scas
jle
xchg
les
test
lret
jmp
and
or
sub
pop
lahf
add
or
adc
dec
xchg
add
pop
repz
dec
bound
add
adc
dec
xor
push
out
lods
popa
clc
ficoms
es
adc
ret
aam
xor
cmpl
popa
add
imul
arpl
push
push
xchg
mov
xchg
in
in
sbb
sahf
loop
and
mov
test
loop
sbb
aam
xchg
and
je
das
mov
lret
mov
mov
push
sub
or
ret
lret
dec
pop
xor
xor
out
adcl
in
movsb
add
and
sti
inc
and
out
jle
outsl
testl
dec
movsl
pop
adc
xor
pop
or
sbb
jne
mov
imul
and
sub
das
stc
or
dec
pusha
fisubrs
rcr
rcll
lock
int
aas
push
push
decb
lret
mov
jne
movsb
outsb
mov
icebp
jge
adc
push
divl
dec
fsts
rorl
xchg
mov
push
mov
insb
and
xor
or
xchg
mov
cli
pop
stos
dec
add
les
loop
fstl
jl
dec
push
xor
flds
xlat
repz
xor
vpshufd
mov
outsb
pop
sbb
cmp
imul
push
xor
xchg
inc
pushf
sbb
push
inc
leave
fldl
out
sbb
sub
sub
pop
in
aam
fbstp
mov
leave
daa
jb
adc
sbb
pop
mov
mov
mulb
add
std
and
lds
mov
add
push
xchg
repnz
jp
push
mov
xchg
js
fmul
mov
or
cld
lcall
jne
icebp
add
xchg
enter
push
shlb
xchg
mov
cmpsl
or
jmp
and
fidivrl
sub
mov
ljmp
dec
ret
dec
xor
cmp
or
addb
mov
fildll
inc
pop
push
cmp
jl
inc
and
add
add
adcb
call
mov
dec
jge
repz
popl
xlat
inc
shll
xchg
pop
sbb
add
adc
addr16
loopne
push
popf
mov
std
cmp
jo
cmpsl
into
pop
cmp
loope
pop
ds
mov
cmpb
dec
movsb
adc
sub
adc
scas
add
fimuls
adcl
insb
dec
aam
pop
pop
popf
pop
jb
inc
fs
dec
pop
ret
cwtl
mov
dec
adc
cli
push
imul
lds
bound
adcb
mov
inc
dec
and
xor
sahf
lea
push
lret
sub
xchg
inc
push
and
dec
cmp
into
ss
push
adc
jl
mov
push
push
push
pop
sbb
scas
setno
jb
or
bswap
je
bound
aad
sbb
hlt
jge
cmp
repz
cmpsb
stos
sbb
mov
push
insl
ja
mov
in
rcrl
test
dec
pop
sub
lret
sarb
jns
test
pop
add
sub
nop
in
nop
xchg
rolb
divb
fiaddl
je
rolb
inc
mov
subb
push
imul
fstpl
mov
hlt
add
mov
jmp
lock
lods
stos
std
fwait
sub
adcl
outsl
ss
pop
lods
jae
daa
fisttpll
sbb
adc
shrl
xchg
cmpsl
cs
mov
pop
stos
lret
adc
fisttpl
cld
adc
add
mov
addr16
inc
mov
add
push
adcb
adc
xchg
dec
dec
popa
jbe
call
push
sbb
popf
cmpsl
add
aas
fisttpll
push
mov
inc
fbld
pop
sub
loop
sbb
sbb
push
call
mov
pop
pushf
movsl
adc
cmp
mov
imul
call
and
leave
cmp
sarl
pop
adc
mov
fcoml
jecxz
inc
sbb
push
inc
mov
pop
pop
sub
cltd
add
inc
test
adc
cmp
repz
cmp
dec
push
inc
mov
out
push
mov
xor
imul
fldenv
add
ss
leave
xchg
les
clc
cltd
scas
popf
repz
je
cli
jne
mov
pop
ficoml
pop
mov
pop
in
push
pop
adc
divb
cltd
ljmp
cld
add
xchg
popf
xlat
pop
mov
mov
shll
push
jg
sbb
arpl
pusha
or
mov
jno
fiadds
call
and
jno
lret
push
xchg
cmp
xchg
insl
lods
lods
dec
add
jmp
or
cmp
mov
push
and
lret
xchg
movsb
pop
sub
int
cmc
das
jne
rcll
mov
rclb
mov
cmp
jo
pop
sub
add
and
arpl
jae
arpl
aam
mov
rorl
sbb
pop
xchg
stos
xlat
scas
push
pop
stc
repnz
jle
loope
dec
imul
mov
xor
xlat
pop
fisttpll
xlat
xorl
popa
out
fdiv
adc
xorl
push
jg
outsl
adcl
enter
xor
xor
push
shr
fidivrl
mov
fistpl
xchg
lock
or
jle
outsb
and
sarb
add
in
pop
in
int3
das
nop
imul
les
outsb
rorl
rorb
bound
sbb
push
add
jnp
fisubl
cmpsb
dec
movsl
adc
lods
ret
xor
dec
cmp
gs
enter
jne
jge
mov
push
push
call
jg
mov
sbb
loope
mov
push
cmp
sub
adc
hlt
in
xchg
jge
fisubs
out
and
xor
mov
add
mov
xchg
add
xchg
sbb
xor
outsl
stos
inc
mov
inc
xchg
arpl
les
sbb
loop
lock
aaa
sbb
inc
rcr
pusha
jl
repz
inc
shlb
je
inc
push
jmp
xlat
sbbl
fwait
pop
in
aaa
into
test
lret
or
push
fiaddl
push
lods
sub
pop
loope
pusha
fldcw
mov
xlat
lret
fwait
xchg
sbb
cmp
jecxz
ret
scas
fisubrs
fwait
mov
adc
cmpsl
or
sahf
push
jmp
pop
ret
cli
fldt
dec
cltd
lock
sbb
mov
push
or
daa
add
push
xor
shr
inc
xor
dec
or
fdivr
loope
dec
adc
mov
iret
fcoml
popa
cld
lods
lods
dec
pop
sub
or
mov
and
in
lcall
jno
js
int3
cmpsl
gs
into
pop
jge
push
mov
lods
jo
push
xor
dec
sti
fdivrl
and
jb
fstpl
cli
xchg
pop
mov
rcll
outsb
inc
pop
sub
insl
dec
inc
rolb
loopne
cmc
adc
jmp
or
dec
pop
test
mov
mov
xchg
cmp
jp
xlat
lods
mov
std
out
xchg
daa
inc
loopne
das
mov
xor
mov
and
stos
and
add
rorb
push
sub
ds
cmp
cmc
mov
or
jp
jo
in
push
repz
lods
inc
sarb
xchg
jge
dec
dec
sbb
lahf
shlb
sbb
and
jbe
sub
loopne
testl
cmc
lcall
sub
sub
lock
mov
jnp
lret
dec
jnp
iret
mov
xchg
sub
imul
pop
or
lret
call
outsb
sarb
mov
jns
les
add
lahf
lds
inc
pop
dec
cs
xlat
xchg
movsb
jecxz
stos
ret
inc
or
loopne
mull
rol
scas
inc
fwait
jmp
pop
sub
int
xor
xchg
jo
sbbl
fs
xor
mov
mov
xor
cmp
aam
jg
dec
push
mov
ret
dec
adc
jp
xchg
sbb
nop
lods
cmp
xchg
jecxz
enter
nop
fisubrs
repnz
push
push
fdivr
dec
push
leave
pop
add
stos
enter
jmp
xchg
out
mov
and
mov
rcrl
lds
notb
aaa
mov
xlat
sub
pushf
cmp
cmp
sbb
push
sbb
inc
sub
test
xlat
push
fs
jbe
jnp
jnp
in
icebp
test
lods
sub
ret
sub
sub
std
mov
sub
rol
clc
xchg
dec
stos
mov
jp
adc
add
repz
cli
addr16
fnstcw
lea
mov
pop
push
push
jge
scas
sahf
aad
ret
test
in
or
sub
dec
js
add
push
pop
repz
in
and
test
arpl
lcall
and
jo
mov
sbb
xor
flds
jg
xor
inc
pop
popl
xor
push
sub
int3
mov
xor
gs
into
call
orl
add
inc
fucomip
addl
cmp
adc
or
inc
pop
cmpsb
in
mov
sti
mov
fldenv
popf
sbb
xor
cli
sbb
mov
cmp
cmp
mov
rcl
movsl
xchg
xor
inc
cmp
cmp
dec
cmpsb
sub
pop
add
sarb
jmp
data16
add
xchg
dec
xchg
sbbl
dec
pop
outsb
dec
aam
inc
mov
xor
arpl
xchg
dec
das
addr16
xchg
jle
pop
cmp
and
pop
int
mov
out
cmp
data16
pop
jg
call
shr
mov
push
aad
out
dec
fdivrs
jg,pt
neg
popa
mov
sbbb
nop
pop
out
push
loopne
mov
lea
and
adc
popa
mov
lea
shrl
or
xchg
loope
ret
lds
js
fsubl
pop
or
cmpsb
lahf
pusha
mov
je
int3
dec
mov
jle
ljmp
mov
inc
mov
cwtl
push
xchg
pop
xor
outsl
mov
dec
mov
scas
stos
lock
out
repnz
sbbb
sub
pop
xorl
dec
cmpsb
xlat
sbb
mov
les
xchg
lret
cs
arpl
cmp
adc
lods
in
push
ss
mov
mov
jns
test
mov
or
fwait
inc
sub
jl
rcrl
pop
xchg
iret
gs
int3
mov
ljmp
pop
and
lahf
jecxz
inc
out
adc
les
fldl
mov
in
insl
pop
rorb
rcrb
mov
or
movd
cld
loopne
cmp
adc
jecxz
and
sbb
arpl
adcl
jp
vpminsw
mov
ss
push
lds
imul
cmp
lds
pop
flds
inc
fidivrl
push
fucomi
jo
pop
cli
aas
jns
mov
aad
cmp
cmp
dec
js
nop
daa
dec
ss
xchg
outsl
scas
call
pop
shll
mov
xor
sbb
jg
lret
push
adc
aas
add
dec
mov
mov
jne
outsb
adcl
sbb
js
in
mov
sub
mov
pop
fwait
stos
inc
repnz
sub
mov
int3
mov
push
mov
arpl
lds
call
pop
xor
ret
mov
lret
lea
mov
hlt
outsb
add
insl
inc
pop
push
sub
xor
push
dec
mov
cltd
mov
push
mov
lret
adc
pop
inc
dec
add
cmp
mov
dec
shrl
add
call
imul
pop
loope
pop
sbbl
cmp
fs
int
inc
push
fisubs
push
stos
data16
pop
xor
leave
cmpsb
movsb
fistps
push
imul
or
fistpll
and
imul
sti
pop
imulb
roll
jmp
jge
std
or
mov
cltd
mov
push
inc
xor
mov
popf
hlt
es
pop
testb
jge
js,pn
jo
cwtl
pop
jo
outsl
mov
and
cmp
das
sbbl
inc
in
inc
xchg
cltd
xchg
lods
aas
sahf
mov
jae
cmp
jae
jns
mov
pop
ss
fistl
int3
jno
scas
call
data16
test
mov
add
push
inc
test
imul
xor
dec
inc
mov
loopne
dec
pop
testb
lcall
icebp
and
cli
xchg
out
cld
stos
test
sbb
lods
ljmp
inc
idiv
mov
out
pop
or
mov
adc
dec
lahf
cmc
and
lea
ret
mov
fidivrl
push
push
or
inc
test
cmp
arpl
js
cmp
inc
cmpsl
mov
mov
push
pop
xor
xor
sbb
xchg
insl
insb
sti
xchg
adc
xchg
repnz
clc
xor
add
xchg
ljmp
shlb
sar
lock
mov
test
inc
pusha
int3
je
aad
inc
and
inc
test
pop
rclb
cmp
icebp
fidivrs
push
adc
jmp
cltd
xor
sbb
adc
leave
js
lock
mov
cmp
sbb
sti
mov
mov
mov
xchg
ret
outsl
outsb
push
push
bound
pop
lcall
mov
sbb
jle
add
and
out
xchg
sti
push
data16
pop
and
andb
inc
out
cwtl
add
or
sahf
sbb
sbb
mov
dec
ljmp
dec
mov
ret
call
inc
inc
popa
ljmp
pusha
movsb
add
inc
jne
inc
call
and
cmp
push
sahf
mov
dec
es
mov
lret
jo
mov
mov
cmp
add
sbb
mov
imul
imul
sub
das
mov
xchg
fistl
cmp
lods
adc
fs
pop
mov
xor
ror
jno
out
inc
adc
and
mov
js
inc
jl
out
xchg
loopne
jmp
mov
pop
jno
jecxz
inc
sbb
add
testb
pop
xchg
icebp
jmp
pop
lods
popf
cld
jne
sub
xchg
daa
jo
fdivl
lahf
fs
fsub
cmp
bnd
sahf
push
jle
lret
lret
clc
lahf
cltd
jo
xor
testl
flds
lret
into
fnstenv
jbe
or
ss
aaa
aam
inc
dec
xor
dec
jg
jecxz
rorl
lods
jnp
dec
ljmp
push
lods
xchg
xor
mov
adc
jae
mov
js
and
push
lcall
insl
lret
or
pushf
mul
imul
inc
jecxz
cli
inc
add
imul
mov
paddsb
adc
sub
jge
xor
adc
jb
push
mov
fnstcw
roll
inc
xor
insb
out
pop
pop
rorl
imul
jno
or
enter
push
mov
push
fs
xlat
cmpsb
or
jbe
cltd
dec
scas
shrl
out
xchg
adc
test
inc
push
shl
fld
jmp
or
lods
mov
dec
jno
lret
push
mov
lods
aam
mov
or
std
xchg
sbb
sbb
push
mov
es
loopne
inc
xchg
dec
mov
shll
cmp
add
aad
out
xchg
jmp
loope
mov
subb
push
push
jnp
ret
jl
les
ret
pop
test
jbe
pop
loope
out
mov
lea
xor
sub
dec
cltd
jo
cmp
mov
out
inc
andb
shlb
repnz
adc
dec
mov
push
fnstsw
ret
fucomip
hlt
lar
dec
dec
pop
mov
cs
dec
gs
xorb
mov
adc
push
add
icebp
mov
rorb
xchg
xor
or
inc
in
mov
cli
xchg
stos
imul
stos
lock
mov
push
xor
mov
mov
enter
mov
sub
sub
xor
xchg
fs
cmpsb
cmp
ret
les
in
adc
pop
les
cmpsb
out
xor
into
gs
int
aad
int3
xbegin
faddl
and
mov
ja
pop
sahf
mov
pop
loopne
scas
pushf
movl
test
pushf
xchg
ror
xchg
mov
out
adc
sti
dec
cmpsb
icebp
push
xor
inc
cmp
pop
sbb
mov
cmp
arpl
sub
xchg
jl
fidivs
movsl
cmp
cli
lcall
fadd
sbb
xchg
mov
subb
dec
cmc
repz
inc
call
in
ljmp
or
xchg
push
add
bound
jns
sti
ljmp
in
xor
mov
std
adc
ljmp
sub
leave
xor
std
push
pop
xchg
ds
sbb
cmp
push
outsl
adc
inc
aas
adcl
and
rcrb
lods
test
dec
mov
pushl
add
insl
vrcpss
cmpsb
loop
mov
sub
xchg
sahf
inc
mov
add
in
inc
addr16
lret
jns
int3
es
push
test
and
test
jb
out
jne
pusha
push
jbe
lds
cmp
dec
cmpsb
bnd
sbb
sub
mov
sub
lret
mov
sub
pop
stos
ret
xor
pop
test
test
mov
out
adc
pop
jecxz
pop
push
aam
xchg
std
int
loopne
and
jbe
push
ja,pn
cmpsl
out
test
or
cmpsb
push
or
les
xchg
inc
insb
push
pop
sub
shr
rcrl
popa
and
mov
iret
loopne
in
push
inc
test
xchg
inc
adc
bound
outsl
shlb
aaa
mov
pop
sub
idivb
cmp
xor
mov
dec
fldl
stos
push
bound
scas
cld
mov
arpl
adc
arpl
ss
push
pop
xchg
mov
les
inc
cmp
mov
rcpps
xor
ljmp
xor
adc
inc
mov
mov
add
aas
push
nop
cmp
hlt
imul
aas
inc
adc
shll
pop
xchg
cmc
jnp
jl
xchg
andl
mov
add
mov
sub
iret
outsl
hlt
mov
jnp
mov
xor
push
or
cli
jge
xchg
sti
mov
inc
or
lods
jp
dec
hlt
xlat
mov
xchg
call
cmpsl
mov
jb
pushl
enter
inc
fldl
xor
out
test
inc
fcmovu
inc
loope
push
movsl
mov
push
in
cli
cmpsw
jecxz
and
rclb
push
jmp
mov
lock
in
adc
cmp
mov
icebp
and
cmpsb
and
and
fscale
inc
insl
stc
jmp
mov
pusha
les
je
mov
into
xchg
inc
shll
sub
fadds
inc
iret
fsubrs
mov
mov
and
shrl
xlat
in
push
dec
mov
jg
mov
dec
stos
and
xor
jg
jecxz
jno
xor
jmp
ljmp
pop
movsb
addr16
jae
mull
jne
mov
ja
inc
imul
xchg
cmp
pop
aas
mov
add
adc
xchg
andb
mov
mov
or
fdivl
pushf
mov
cmpsb
push
stos
hlt
test
push
fisttpll
ret
jae
pop
mov
xchg
push
or
mov
adc
ja
jl
outsb
pop
mov
andl
popf
dec
outsl
loop
flds
mov
add
or
jmp
out
jecxz
xchg
sub
stos
int
stos
popf
hlt
pusha
daa
mov
sbb
mov
sub
adc
inc
jae
mov
cmp
jg
shrl
add
sbb
mov
repz
push
loop
pop
in
orb
repz
pop
aaa
sahf
dec
add
mov
dec
call
call
add
cmpb
pop
jge
push
mov
push
ss
xor
xchg
imul
cmpsb
dec
mov
loopne
jo
outsb
les
mov
leave
outsb
test
shl
shrb
or
mov
out
xchg
dec
xchg
mov
xor
add
or
xchg
lret
mov
fsts
mov
lret
lods
fucomip
mov
mov
fisttpll
and
lcall
cs
fst
and
xor
xor
sbb
sub
jl
jne
lods
bound
xor
popa
mov
mov
or
js
xchg
or
nop
shrb
in
xorb
loop
cmp
les
in
cwtl
and
cmpsl
mov
xor
out
out
mov
movl
pop
inc
sbb
lds
xorb
aas
addr16
adc
sbb
xor
add
loop
test
xchg
adc
outsb
cltd
js
inc
cmpsb
imull
pop
ret
sbb
adc
adc
in
jns
test
in
mov
mov
adcl
cld
imul
sti
nop
je
mov
xor
pop
scas
cmp
dec
dec
mov
mov
mov
inc
ljmp
loopne
cmp
jl
inc
adc
cli
or
movsl
addb
cmp
movsl
ljmp
imul
ljmp
lret
fcmovnu
bound
rcrb
dec
mov
jmp
rcrl
sub
xor
hlt
mov
jmp
mov
pop
push
inc
in
mov
jp
jp
sbb
testl
repz
sub
movsl
mov
or
mov
stc
les
xor
cmp
jecxz
mov
into
jae
add
out
push
or
inc
mov
and
fsts
in
or
int3
std
mov
rcll
pop
out
mov
adc
and
data16
jle
mov
sub
jns
inc
pop
adc
jb,pn
xchg
mov
cs
mov
in
cmpsl
jmp
ss
mov
fdivs
mov
loop
pop
jns
fbld
shrl
xchg
pop
dec
cmp
push
insb
xor
fcmovne
xor
cmc
inc
fldenv
or
mov
push
mov
cmp
mov
ret
jle
jge
pop
arpl
fs
xor
cmc
sbb
lret
fmul
mov
loope
lahf
cwtl
leave
sub
jge
push
fcoms
int
std
fnstenv
mov
dec
test
mov
jl
ret
push
push
mov
mov
jnp
ds
or
cmp
xor
shll
jge
adc
call
push
xlat
dec
sub
push
dec
jae
sahf
daa
pop
mov
add
es
pop
pusha
cmpsl
inc
daa
xor
cmp
push
mov
leave
test
jp
jb
sbb
sbb
cmp
addps
bound
pushf
cmp
jecxz
xchg
pop
xchg
cmp
iret
jle
mov
lahf
mov
push
in
mov
imul
xchg
subl
repz
fisubrs
mov
xor
mov
or
jmp
lret
cltd
jmp
mov
out
stos
pusha
push
lock
cmp
out
pop
cmp
vaddsubps
mov
loop
push
mov
popa
xor
sub
sbb
mov
inc
fistps
and
mov
lcall
or
cmp
in
shl
int
loop
or
push
add
or
xchg
mov
push
and
cmp
pop
int
xor
aam
out
mov
jno
push
movsl
sbb
inc
sub
jno
cmpsl
add
lahf
dec
ds
adc
pop
ret
xor
or
jecxz
mov
loope
rcl
ljmp
sub
into
mov
pop
jmp
aaa
xchg
dec
inc
and
fistpll
fwait
or
fnstcw
jns
cmp
jecxz
xor
aaa
jl
cld
adc
stos
inc
sbb
mov
jge
inc
mov
jmp
mov
inc
into
les
inc
mov
stos
xor
out
popa
out
add
push
cs
push
pop
ret
pop
shlb
in
fnstenv
mov
mov
inc
fists
outsb
sub
ss
mov
mov
fsubs
mov
ss
fdivr
xchg
gs
push
nop
into
pushf
test
mov
popf
sbb
insb
mov
cmp
jle
inc
ljmp
xor
cmp
aad
and
arpl
shlb
xchg
pop
xor
scas
notb
and
inc
adc
mov
jg
push
icebp
lock
add
mov
sub
imul
lods
jmp
xchg
dec
imul
jge
pop
icebp
push
mov
js
std
testl
loope
mov
cmp
out
mov
in
loopne
dec
inc
arpl
loopne
cmp
and
jg
sbb
pop
sahf
fisubs
into
call
enter
sbb
ffree
insb
repz
pop
jmp
mov
rcr
in
add
or
mov
lea
or
mov
jmp
and
xchg
mov
jns
movsb
xor
jle
xchg
scas
insb
mov
out
cs
xlat
outsb
add
xlat
sbb
sbb
aad
loope
rcrl
fbstp
inc
sbbl
lea
or
inc
stos
pushf
pop
jg
fs
and
pop
mov
sbb
aas
cmp
pop
into
outsb
outsl
adc
insb
xor
scas
stos
jbe
xchg
in
push
jae
xor
fsubr
xchg
mov
dec
inc
push
outsl
sahf
and
testb
lcall
shlb
add
hlt
push
gs
sbb
xchg
sub
movsl
inc
out
stos
sub
pop
or
mov
fptan
test
sub
insb
mov
mov
aas
push
add
mov
mov
in
pop
imul
mov
pop
sub
int3
mov
divb
jge
xchg
sub
mov
outsl
inc
sbb
test
ja
xchg
stos
outsb
sti
decb
lret
jno
jbe
push
shll
out
push
mov
imul
or
sub
fistl
mov
fildll
imul
imul
adc
loopne
stos
sahf
sub
fcmove
mov
adc
sbb
mov
jp
xchg
in
iret
cmpsb
jnp
xchg
daa
cmp
mov
je
pop
xor
dec
jae
pop
ret
cltd
xchg
cmpsl
repnz
jge
or
aas
push
jnp
cmp
sub
sti
mov
adcl
aad
sub
and
rorb
orl
dec
into
push
dec
loop
mov
sub
add
in
in
nop
push
loope
lcall
nop
mov
hlt
jecxz
push
push
jne
xchg
xor
ficoms
push
sbb
scas
insl
outsb
mov
xchg
xchg
sub
mov
jbe
aas
pushl
std
xchg
insl
bound
add
push
pop
xchg
mov
sarl
sub
sbb
dec
test
imul
adc
push
push
cmp
jl
addl
cltd
adc
in
cs
outsb
push
cmp
xor
cmp
dec
xor
add
fsubrs
out
out
lcall
inc
xchg
xor
xor
inc
std
mov
mov
sub
lods
push
lahf
stc
nop
shll
fwait
mov
mov
mov
xchg
jge
fnstenv
aaa
mov
mov
out
and
movsl
or
dec
xchg
push
sub
mov
adcl
xorb
push
jmp
ds
mov
add
xchg
xchg
insb
mov
movl
aaa
and
adc
addr16
xor
cld
std
pop
iret
push
aam
mov
insl
adc
mov
inc
sub
mov
jnp
pop
sbb
jg
sub
insl
bound
fs
pushf
dec
dec
push
push
or
push
loop
test
sahf
outsl
jmp
cmp
imulb
jecxz
movsb
dec
fcmovne
mov
call
rol
push
test
jge
jne
dec
mov
stc
shll
pop
sbb
cwtl
and
push
ja
paddusb
pop
jnp
loopne
ficoms
jno
inc
add
pop
lret
xor
pop
nop
cmp
cmpsb
jnp
and
xchg
or
shll
pop
sub
push
xlat
decl
std
cmp
sbbl
loopne
dec
addr16
scas
shll
lret
iret
mov
adc
fiadds
jns
sbb
sbb
mov
xorb
fwait
jnp
dec
pop
lahf
mov
hlt
lahf
stos
aam
stos
out
cmpb
pop
xchg
in
add
js
push
out
sbb
adc
xlat
int3
push
dec
sbb
movsb
xchg
sti
fwait
test
jl
inc
js
xor
in
test
mov
jg
pop
sub
sub
sbb
clc
dec
loopne
mov
shll
mov
ja
idivb
mov
inc
popa
jl
cmc
mov
je
mov
fldcw
shl
lods
cmc
enter
pop
fs
push
jne
xor
pusha
xchg
icebp
mov
jmp
xchg
jecxz
dec
mov
add
xchg
aas
cmpsb
adc
jno
push
pop
lods
sub
test
xlat
jae
sbb
sbb
dec
xor
iret
mov
mov
pop
mov
add
pop
ds
adc
das
shrb
lods
mov
popf
adc
sub
bound
rolb
lods
test
in
clc
inc
xor
dec
rorb
js
icebp
rolb
xor
fsubl
ret
lahf
mov
dec
mov
scas
pushf
mov
mov
xchg
add
mov
and
pop
dec
je
jae
cmp
inc
pop
push
inc
je
jno
int3
mov
pusha
or
jns
into
push
dec
fidivs
addr16
scas
adc
test
decb
push
outsb
sbb
jns
shl
insb
fmulp
int
or
xchg
fucom
fstpt
push
and
push
pop
mov
xchg
mov
push
fsubrl
pop
sub
inc
mov
add
sbb
fisubl
pop
adc
orb
scas
rorl
movsb
bound
jle
in
xor
shr
inc
inc
filds
fwait
and
dec
inc
in
mov
testb
mov
xchg
test
jno
fs
lcall
push
fdivs
sub
adc
out
insb
sbb
mov
sub
xor
dec
aam
negl
sbb
sbb
int3
jmp
sbbb
xchg
pop
mov
in
mov
mov
xor
test
daa
add
shlb
push
dec
aad
sbb
repnz
in
nop
push
jmp
and
ficomps
iret
shrb
cmc
mov
inc
clc
lock
out
mov
repz
ss
dec
sahf
stc
mov
jo
add
sbb
xchg
cmpsb
aas
add
jo
mov
movsl
loop
testb
jmp
push
dec
push
or
mov
pushf
mov
mov
inc
cwtl
fcoml
add
pop
cmpsb
daa
movsb
xor
into
shl
pop
xchg
cmp
cmp
std
pop
mov
inc
jne
pop
sar
leave
mov
cltd
dec
mov
out
daa
cmc
popf
fnsave
sub
adc
cmp
push
bound
pop
insb
ret
push
inc
je
mov
mov
enter
mov
cld
rorl
mov
das
mov
jg
shll
ss
cmp
jnp
jle
mov
or
test
dec
push
sbb
mov
ja
inc
and
loopne
xchg
xchg
mov
les
jne
sub
into
inc
jne
adc
repz
pop
enter
push
add
popa
cwtl
sbbl
or
cmpsl
loop
in
mov
pop
ror
out
stos
add
ja
sahf
clc
lret
dec
xchg
push
mov
decl
and
or
incb
ljmp
pop
sahf
inc
mov
and
cmp
push
stos
outsb
inc
sub
cwtl
stos
enter
inc
loope
in
pop
adc
cmc
idiv
adc
ficomps
test
test
rorl
jge
push
jmp
xor
add
int
xor
rorl
mov
xor
ljmp
cmpl
jge
xchg
or
test
add
sbbb
cmp
lret
jmp
call
aad
and
in
pop
pop
jo
jne
push
repz
imulb
addb
adc
fiadds
out
int
out
mov
insl
add
jnp
movsb
fsubs
ficompl
mov
shll
rclb
cwtl
das
jbe
pop
out
mov
fwait
loop
xlat
and
cmp
cmpb
pop
loopne
lock
add
cmp
popf
lcall
mov
flds
pop
hlt
mov
pusha
xor
adc
jbe
and
add
mov
xor
mov
or
cmp
xlat
repz
and
adc
mov
in
ljmp
xchg
sbb
cmpsb
popf
cmpsl
fdiv
or
inc
imul
ror
je
pop
stos
inc
test
jnp
std
adc
mov
xchg
in
out
xor
ret
ret
lret
dec
fisubl
lods
fstpt
shll
mov
fisubrl
insl
sti
pop
lret
cmp
addr16
fwait
sti
call
mov
xor
cmp
mov
enter
daa
add
push
fcoms
xchg
or
mov
or
jno
adc
adc
das
cmp
mov
stos
daa
in
or
fbld
leave
cmpsb
ret
or
add
push
xchg
movsl
mov
addl
mov
xchg
ss
jmpw
addr16
popf
ljmp
mov
or
sub
sti
sub
ljmp
push
mov
cmp
inc
pop
cmc
mov
cltd
negl
outsb
or
mov
push
outsl
aaa
stos
aaa
adc
add
pushf
mov
fwait
sub
push
ja
lcall
fidivl
jmp
cmp
mov
push
cli
xchg
sub
rorb
xchg
jp
mov
loope
loope
jecxz
repnz
dec
pop
loope
sbb
cli
or
lods
insb
pop
jne
or
sub
idiv
lea
xchg
in
inc
push
mov
call
mov
fucomip
xchg
dec
inc
inc
add
sahf
adc
cmp
int
std
or
negb
cld
lock
mov
mov
inc
xchg
sub
loope
gs
outsb
repnz
stc
imul
jp
rcll
or
jg
xor
mov
pusha
ljmp
pushf
test
in
std
in
inc
jbe
rorl
mov
cmpsb
pusha
pop
add
stos
push
pop
fsubrl
mov
mov
xor
fcomp
xor
stc
dec
cmp
xchg
mov
call
scas
push
icebp
sbb
iret
dec
dec
mov
cmp
shrl
mov
push
loop
cld
push
popf
mov
stos
insl
andl
and
movsb
pusha
lea
dec
fs
push
push
fwait
inc
sub
jb,pt
xchg
push
inc
pop
aaa
xchg
stos
rorb
icebp
dec
in
sub
cwtl
addb
cld
cmpsl
jnp
aad
add
xor
pop
pop
repz
mov
or
enter
or
test
js
pop
andb
jp
mov
pop
adc
xchg
cwtl
dec
sahf
xor
jns
aaa
mov
test
test
ds
lods
aas
mov
mov
adc
cmpsb
cld
nop
lcall
cmp
dec
and
stos
js
lods
jmp
adc
popf
ljmp
ljmp
dec
les
in
sbb
nop
xchg
mov
loopne
scas
push
fxch
mov
daa
mov
add
movsb
sahf
test
jl
cmpsb
js
sub
fldcw
cmp
fiadds
insl
insl
xchg
lods
ret
mov
pop
push
mov
jl
rcrl
insb
add
xor
fisubrs
lods
ficompl
xchg
lods
add
sbb
mov
jnp
insb
aam
push
mov
ss
xchg
scas
aas
sub
mov
popa
cmp
clc
lret
rol
popa
sub
xor
arpl
pop
push
nop
pop
outsl
shrl
jae
mov
cmp
pop
repnz
or
pop
lret
xchg
jns
scas
jno
add
mov
add
cmp
and
add
popf
fdivs
mov
dec
leave
pop
xor
dec
jnp
mov
out
mov
sbb
mov
popa
pushf
push
inc
loope
lods
dec
and
jp
push
add
inc
fimuls
or
mov
pop
rol
push
sbb
mov
je
movsb
cmp
ljmp
push
popf
or
insb
popf
insw
inc
les
je
je
shrb
mov
jmp
cmp
pop
push
test
cmpsb
cmc
movsl
xchg
adc
fldcw
sub
push
or
add
fucom
pop
call
test
mov
mov
imul
xchg
divl
push
loope
aad
jb
dec
and
cwtl
test
enter
mov
outsb
jno
cmp
mov
cld
mov
push
shl
orl
cmp
adc
mov
jb
sarb
gs
adc
xor
loope
ficoml
dec
inc
pop
jg
mov
enter
add
pop
cmp
pop
pop
push
loop
sub
aam
jns
fnsave
xchg
in
enter
jbe
bound
sub
movsl
mov
adc
jns
mov
xchg
lret
xchg
pusha
stos
xchg
repz
xor
mov
adc
and
or
mov
push
aad
or
pop
jge
leave
fstps
sub
mov
pop
test
cmp
push
mov
pop
sbb
mov
dec
mov
hlt
aad
dec
dec
mov
jg
lea
mov
xchg
testb
test
jne
pop
xor
add
mov
push
out
inc
lret
pop
and
ror
sbb
out
push
mov
popf
stc
movsb
adc
dec
movsl
mov
sarl
ljmp
ss
sub
aas
add
shrb
dec
mov
insb
pop
pop
xor
leave
dec
arpl
nop
push
mov
push
imul
jge
ljmp
aad
dec
mov
mov
in
sahf
arpl
dec
inc
outsl
inc
cld
xor
or
stc
mov
xchg
cmpxchg
fisubs
dec
xor
cmpsb
sub
fildll
adc
adc
mov
fwait
loopne
repnz
push
movsb
shrb
dec
mov
test
jl
sbbl
adc
outsb
repz
xlat
push
jne
jne
xor
push
aas
in
jae
cmp
cs
adc
adc
xchg
mov
dec
add
jp
push
xlat
ljmp
out
shlb
lods
xchg
fnstenv
in
jb
fs
pop
and
test
jg
or
adc
testb
jle
xor
jns
or
inc
sbb
ret
arpl
jmp
int
pop
jle
pop
in
jecxz
lods
stc
fidivrl
mov
mov
add
mov
push
clc
pop
xor
inc
mov
mulb
xor
in
push
fs
jo
push
test
xor
aaa
mov
push
cwtl
sarl
cmp
sub
insl
cs
sbb
jle
mov
jge
sub
mov
out
mov
lret
lods
mov
cmp
cmp
mov
testl
insl
loopne
sbb
adcl
mov
out
imul
cmp
orl
cli
and
es
push
or
jmp
rcrb
shl
xor
lcall
jecxz
mov
add
and
lods
stc
mov
es
adc
scas
mov
out
faddl
rcrl
mov
adc
inc
aaa
rorl
arpl
sub
cwtl
adc
dec
sarb
fadd
fwait
pop
int
sub
lds
dec
outsl
test
jnp
cmp
dec
dec
shrb
cmp
push
push
mov
fxch
out
jp
xchg
icebp
scas
lcall
icebp
popa
add
mov
gs
adc
ss
cmpsb
xor
lea
adc
nop
cs
aaa
dec
in
jmp
outsl
mov
cmp
jp
xor
cmp
mov
dec
es
fildll
icebp
movsl
sbb
into
nop
push
arpl
push
push
jno
mov
dec
pusha
pop
fmul
movsb
mov
push
sbb
jno
test
dec
and
cmp
out
sub
fisttpl
or
lahf
mov
ffree
mov
shrl
mov
repz
inc
xlat
or
sbb
xor
mov
subb
jno
mov
lret
leave
adc
fcomps
pop
lea
xor
ljmp
jno
or
and
and
sub
push
arpl
lcall
mov
ss
adc
cld
xchg
mov
add
popl
and
mov
or
inc
xlat
or
cwtl
sub
cmc
mov
notb
push
cmp
cmpsb
xchg
out
dec
loope
xchg
mov
jmp
mov
pop
or
and
sarb
bound
sbb
imul
inc
or
sub
lods
mov
shlb
std
inc
mov
ss
sahf
test
out
add
lods
push
cmpsl
push
pop
aam
mov
out
cs
jne
lods
push
int
test
shlb
push
imul
ss
push
xor
sub
push
aaa
clc
test
mov
sbb
cli
lahf
popf
cmp
jno
jle
mov
pop
mov
jge
arpl
mov
push
mov
xchg
mov
xor
ret
cmp
jo
leave
push
cmp
cmp
hlt
mov
sti
jle
or
data16
xchg
pop
stos
daa
dec
add
lahf
xor
inc
adc
push
push
sbb
add
xor
sbb
ja
dec
cs
inc
jle
popf
jmp
mov
xchg
ja
cltd
andb
fwait
ret
inc
frstor
mov
push
push
jle
out
cs
mov
andl
or
inc
mov
ss
fidivl
xchg
mov
popa
rcl
xchg
jl
or
sub
loope
adc
jnp
lods
inc
push
mov
dec
shrl
aam
mov
hlt
jle
lods
push
pop
pop
and
adc
stos
mov
sub
fdivs
xlat
pop
jno
xchg
adc
mov
sbb
es
mov
lods
inc
jo
xchg
pop
sbb
sub
int3
mov
mov
push
iret
frstor
xor
sbb
jmp
adc
ja
insl
int
popf
or
lcall
mov
lds
shlb
mov
sbb
shlb
call
and
cmp
jns
adc
cmovne
xchg
lret
es
push
lock
inc
add
dec
ret
fistl
pop
push
int
or
sbb
dec
and
outsl
frstor
inc
xchg
sub
ljmp
movsl
mov
inc
xchg
sbb
push
inc
cmpsb
fdivl
ret
mov
push
das
mov
adc
mov
into
and
fimull
loopne
iret
pop
lods
inc
inc
arpl
cmp
stos
mov
lock
ja
lcall
mov
out
fbld
aam
rep
sub
sbbb
into
mov
push
push
in
add
fidivrl
icebp
and
mov
nop
inc
inc
mov
outsb
addr16
movsb
xor
test
add
ja
syscall
sbb
mov
jecxz
insb
jno
loopne
lea
out
aaa
hlt
daa
aam
pushf
dec
or
jb
cmpsb
xlat
mov
pop
inc
lods
in
outsb
std
jge
adcl
data16
jl
sbbl
xchg
xor
cmp
mov
lods
subb
sbb
ds
jg
ljmp
test
dec
ret
fs
loop
sub
inc
inc
into
gs
adc
dec
adc
xlat
xchg
push
mov
scas
jecxz
out
mov
fdivl
subb
sahf
xor
aas
push
cmp
sub
add
sub
or
les
popf
ds
ret
xlat
dec
out
dec
mov
std
std
les
adc
and
or
cmp
inc
stc
jns
jge
inc
sti
fwait
in
in
repnz
add
popf
xchg
pop
cmp
jge
push
scas
les
xchg
rcl
idivb
ss
mov
sub
add
or
rclb
rcll
shrb
test
loope
and
mov
sbbb
push
push
push
dec
ss
ss
int
push
add
cwtl
mov
and
xlat
inc
fsubl
mov
inc
xor
fwait
adc
icebp
lcall
push
cmp
imul
popa
and
xor
arpl
jbe
xor
aas
push
xchg
jmp
jg
lss
outsb
add
imulb
pop
push
enter
xchg
sbb
mov
gs
lret
orb
mov
in
imul
stos
inc
out
test
dec
and
hlt
testl
or
sbb
mov
out
adc
mov
pop
pop
fwait
push
das
sbb
mov
add
outsb
pop
je
cmp
push
push
mov
sub
adc
mov
xchg
out
inc
scas
dec
aam
jae
out
xor
adc
arpl
cmp
push
cmp
fmuls
es
or
aaa
lret
data16
inc
jae
int3
dec
arpl
add
jmp
cmp
mov
dec
mov
push
pop
sbb
mov
mov
jecxz
jno
adc
sbb
mov
js
icebp
mov
push
xchg
adc
push
movsl
icebp
adc
jge
idiv
adc
sbb
pop
cli
popa
xor
mov
arpl
jns
pusha
enter
in
lea
cltd
std
pushf
adc
ret
std
lea
push
lret
mov
out
push
mov
bnd
stc
lea
cmp
sbb
mov
outsb
or
and
pop
ret
mov
dec
xor
sub
out
cmp
push
aas
xchg
mov
push
xchg
jno
icebp
out
das
ret
ja
sti
pop
ljmp
nop
in
pushl
cmp
testl
int
push
stos
mov
dec
popa
or
out
sub
int
adc
test
aad
rolb
repz
xor
test
ljmp
out
pushf
xchg
insl
pop
das
and
mov
and
adc
push
or
iret
cli
or
add
add
lods
stos
hlt
mov
and
mov
jmp
fstpl
aad
stos
popl
sahf
cmp
mov
xchg
dec
into
enter
mov
mov
push
mov
insb
aad
push
nop
mov
mov
nop
cld
inc
sahf
push
rcl
xor
inc
push
dec
mov
out
xor
mov
test
lock
xchg
pop
or
and
cld
and
fwait
mov
hlt
xchg
and
test
mov
sub
pop
cmp
hlt
bound
iret
ds
js
push
inc
add
popf
stos
or
sahf
or
test
pop
jnp
aaa
stc
arpl
fs
push
adc
lret
xor
ja
push
lcall
or
rol
adcb
cwtl
xchg
test
jo
adc
stos
fs
jbe
cmpsl
out
xor
sub
xchg
pop
push
cmc
bound
xchg
int3
xchg
lods
mov
sti
push
in
ficoml
movsl
mov
inc
out
xor
mov
push
call
mov
or
outsb
or
or
mov
daa
jle
push
or
sbb
jns
jns
push
daa
sub
mov
jns
jl
in
lods
sahf
inc
dec
pop
inc
je
lock
cmp
bound
xchg
in
push
daa
int3
xchg
sbb
dec
pop
pop
icebp
loop
outsb
mov
js
push
sbb
sbb
jb
mov
div
shlb
jno
pop
cs
out
sbb
adc
cmpsl
add
js
cwtl
das
jle
cmp
sahf
lahf
mov
adc
mov
dec
and
loope
in
shrb
jle
and
icebp
movsl
adc
push
jmp
mov
push
add
xchg
lods
sbb
pusha
shlb
lds
jns
rorl
sbb
jmp
push
test
inc
and
bound
mov
aas
adc
adc
idivl
add
daa
lret
jns
mov
inc
or
ret
das
sbb
repnz
jo
and
lods
fnstsw
arpl
sbb
add
roll
cmp
aas
loop
pop
push
jmp
pop
divl
pop
loop
data16
dec
jecxz
inc
mov
push
mov
mov
pop
fldcw
cmc
addps
leave
jae
mov
add
mov
pop
rorb
data16
rolb
shll
inc
sbb
add
lods
and
inc
dec
mov
jno
outsb
out
shll
mov
dec
pop
mov
enter
dec
mov
cltd
adc
xor
xorb
cmc
hlt
js
stos
ljmp
push
mov
call
jp
aad
std
shll
push
sti
pop
add
stos
adc
aam
das
ja
in
sahf
push
orl
push
fsubs
sub
inc
cmp
jae
mov
mov
shll
call
fldcw
xor
aam
push
das
jmp
and
stc
xchg
lea
movsl
xor
or
push
sub
test
inc
pop
jecxz
adc
pop
cld
mov
push
shrb
inc
int3
icebp
mov
dec
lcall
in
in
push
dec
shl
test
decl
xchg
lea
mov
pushf
jo
iret
sbb
bound
cmp
fnstsw
call
or
fidivs
orl
cmp
sbb
fldenv
inc
or
sahf
out
fdiv
jnp
mov
mov
jb
and
jge
or
mov
pop
cmp
data16
cmpsb
cmp
jl
inc
fwait
push
xlat
push
arpl
xor
jp
push
sub
and
dec
int
cmp
xchg
inc
xchg
and
push
call
aad
ljmp
jb
insb
movsb
or
daa
adc
xor
mov
pusha
xchg
arpl
loop
adc
je
cmpsb
movsl
dec
pop
sub
imul
fcompl
push
fmuls
in
repnz
in
cmpsl
fidivrs
mov
cwtl
inc
fildll
cmpsb
xchg
in
push
stos
dec
or
je
out
aas
xchg
cmpsl
ds
pop
fwait
ud2
jmp
xchg
sub
jge
enter
out
fcoms
push
out
cli
mov
outsl
call
lret
vpmovsxbd
jb
cmc
movsb
inc
popf
jo
jl
notl
sub
rcll
jb
or
xchg
cmc
push
movl
push
leave
pop
jg
sbb
and
pop
lret
push
sub
inc
pop
pop
xchg
pop
iret
imul
cs
pushf
das
jge
xor
pop
ljmp
jnp
mov
mov
test
xchg
in
mov
insb
and
mov
imul
or
add
dec
inc
or
cld
push
sbb
push
xor
pop
cmp
pusha
loope
inc
stos
pop
aad
sbb
aad
push
cmp
xlat
pop
fimuls
daa
repz
je
nop
xchg
cmc
test
shlb
cmp
ds
mov
mov
out
inc
pop
xchg
in
das
xchg
cli
inc
pop
es
movsl
lds
pop
xor
lret
lock
lret
pop
std
les
in
incl
adc
push
cmp
sub
fsubl
add
xchg
push
or
lret
sahf
pop
ja
push
in
mov
lods
scas
inc
and
loopne
andb
mov
aaa
aaa
xchg
jp
rcll
ud2
shr
push
pushf
cs
inc
popa
push
cltd
stos
push
mov
pop
mov
inc
out
sti
and
movl
repz
inc
pop
inc
ja
call
xchg
inc
stos
mov
dec
neg
adc
add
aam
ss
test
push
shrb
repz
rcrl
jg
rol
pop
and
cmp
or
inc
scas
push
shlb
into
sub
data16
adc
jbe
cmp
dec
adc
repz
scas
ljmp
cmp
jbe
shlb
dec
jp
arpl
movsl
add
jp
mov
test
popa
add
mov
xlat
dec
adc
and
and
loope
push
adc
cli
xchg
xor
ja
push
lods
pop
sbb
cmpsl
dec
clc
mov
cld
or
pop
and
sti
lahf
lods
sub
fs
testl
mov
cmpsl
add
sub
inc
clc
aaa
mov
jl
pushf
mov
rcrl
cli
or
cmp
mov
mov
fsubs
jmp
jae
push
das
cmp
ds
dec
inc
test
popf
clc
jb
bound
outsl
add
mov
shll
scas
lret
out
inc
daa
ljmp
adc
das
xchg
ja
mov
mov
es
addr16
push
aaa
lret
and
movsl
stc
push
aaa
in
jns
inc
xchg
fstps
adc
mov
xor
cmp
inc
pop
adcl
sahf
push
jno
mov
pop
mov
push
jne
or
insl
lcall
dec
lods
js
das
sahf
adc
mov
jb
cs
pop
inc
notl
jecxz
fisubl
mov
cmp
test
repnz
ljmp
push
jmp
mov
adc
inc
into
cmp
gs
in
jns
stc
pusha
sub
pusha
imul
mov
roll
lret
lock
and
mov
add
loope
std
adc
dec
fnstcw
xor
add
scas
and
fcomps
sbb
push
pop
cmp
pop
sub
lret
lea
js
push
cmc
sbb
sti
push
pop
imul
xchg
ds
ds
push
out
mov
pusha
and
xchg
lret
enter
jge
pop
dec
inc
dec
das
jg
popa
imull
rcrb
or
iret
add
das
es
gs
push
add
popf
call
jmp
inc
pop
sbb
push
addr16
xor
popf
lcall
jge
fisubrs
fsubrs
inc
es
repz
inc
dec
sahf
jbe
dec
ja
aam
pop
into
je
repnz
lcall
enter
sbb
stos
mov
cmp
cmc
adc
scas
inc
iret
and
and
adc
fwait
stos
cmc
sub
scas
fcoms
dec
inc
std
ss
add
fidivs
inc
dec
xlat
sbb
push
call
push
mov
sbb
mov
mov
es
gs
es
jge
sbb
jnp
ret
sbb
sub
loop
lcall
or
negl
xchg
dec
in
dec
xchg
add
inc
fsubrl
mov
mulb
fldcw
dec
mov
lea
idivb
arpl
sbb
pop
repz
push
cltd
icebp
mov
cwtl
cmc
outsb
popa
int
lahf
and
test
and
sbb
and
jnp
add
test
out
repz
cld
xchg
cmc
xor
adc
sub
addl
and
call
sub
mov
jno
push
mov
sahf
stos
jecxz
push
xchg
jmp
hlt
mov
mov
sar
mov
popf
push
dec
int3
push
arpl
mov
iret
adc
shrb
mov
into
push
fsubr
cmc
mov
jle
jp
push
adc
mov
fcompl
ljmp
jno
inc
arpl
adc
je
sahf
scas
mov
xor
mov
xchg
frstor
mov
and
jne
and
loop
jmp
xor
lret
sahf
cmc
imull
adc
push
adc
jmp
lret
clflush
cmp
scas
out
mov
sub
mov
push
xlat
and
and
cli
push
in
dec
mov
shrb
mov
mov
sar
jle
xlat
sbb
jnp
mov
pop
and
out
pop
je
lods
cmpsl
aad
ds
cmc
adc
push
loope
push
xchg
dec
xor
cmc
jne
bound
rcll
cld
lcall
in
dec
fcompl
negl
scas
sub
filds
les
push
fidivrl
and
inc
add
mov
and
cmp
push
inc
iret
jno
aam
fmulp
sub
jp
jmp
push
rorl
mov
fbstp
pop
icebp
dec
outsb
jl
and
scas
mov
mov
xchg
outsb
pop
into
jecxz
ja
add
repz
lods
icebp
adc
adcb
aas
in
and
jbe
mov
fbstp
pop
imul
js
mov
in
out
cmc
mov
je
sbb
mov
movsl
cmp
shll
inc
inc
fldenv
sahf
sti
test
les
nop
push
push
sub
mov
imul
lcall
jbe
stos
outsb
dec
sub
xchg
mov
xor
lods
xlat
push
pop
leave
lods
xchg
xor
jbe
sub
sbb
in
mov
pop
sbb
cltd
cmp
jmp
push
push
sub
fnstenv
mov
stos
mov
or
nop
daa
jecxz
cmc
sbb
sub
lods
std
leave
adc
add
pop
adc
pop
sbb
pop
xor
bound
mov
mov
test
pop
test
push
adc
popa
andl
jbe
in
sarl
mov
andb
xor
gs
jl
or
testb
push
stos
dec
repz
int
in
adc
outsb
aad
repz
dec
cli
push
sbb
outsl
push
add
mov
and
push
adc
jae
fbstp
subl
adc
outsb
in
and
fucom
loopne
sub
mov
hlt
lret
mov
ret
sub
xchg
mov
jg
mov
rcr
mov
sub
js
xchg
jo
cmc
pop
stos
mov
scas
insb
push
and
movsl
inc
insb
or
test
jb
cmp
js
sti
stc
push
rorb
sub
push
sub
repz
mov
dec
mov
cmpsb
mov
xor
scas
jbe
push
ds
test
mov
xchg
or
pop
and
xor
fcom
leave
cmp
jecxz
mov
out
daa
push
pop
repnz
mov
outsl
mov
repnz
pop
arpl
addl
push
jns
fisttpl
sub
imul
mov
pop
leave
cs
scas
pop
jae
sub
dec
or
clc
mov
jne
ljmp
or
nop
inc
aam
dec
jecxz
test
jg
inc
lods
jo
mov
aam
mov
and
mov
pop
dec
je
iret
cmpsl
sub
add
cmpsl
decb
jbe
sub
cmc
lods
inc
cmp
xor
scas
inc
push
sub
mov
testl
jo
dec
push
add
bound
nop
fists
inc
cmp
push
arpl
inc
mov
jle
mov
shrb
jecxz
cmp
insl
jns
pop
out
hlt
mov
fcoms
or
jbe
jmp
lahf
aaa
fcomi
imul
xchg
jp
hlt
sub
test
lret
and
call
shrl
movsb
cmp
xor
push
dec
in
pop
adc
sbb
fimuls
cltd
scas
int
test
out
mov
push
jmp
inc
repnz
jb
jge
mov
xchg
pop
fiaddl
cld
jnp
jl
push
jmp
pop
lock
fs
add
or
mov
sub
dec
sbbl
test
lahf
fdivp
movups
sarb
or
cmp
adc
ss
ljmp
fistpll
movsl
xchg
imul
shl
xchg
inc
jno
es
lcall
add
push
jbe
dec
or
js
sub
mov
fstl
add
sbb
divl
imull
in
cmp
rol
sub
div
ror
jne
inc
xchg
shr
sub
scas
stos
test
leave
adc
ss
lods
lock
aas
mov
insb
divb
adc
mov
in
outsl
jmp
inc
out
add
push
je
mov
insb
rolb
sub
imul
adc
jne
cld
and
mov
mov
fsubl
aaa
sub
dec
mov
fldenv
fcoml
jnp
sub
adcl
push
mov
jge
shll
sbb
sbb
les
mov
mov
test
aam
aaa
push
inc
dec
mov
jne
add
dec
jecxz
jl,pt
lcall
mov
inc
loopne
sbb
pop
push
in
jbe
imul
pop
inc
sbb
movsl
xor
push
sub
test
cmp
add
stos
mov
cmpsb
jg
rcrb
dec
mov
rcrb
cld
mov
sbb
icebp
adc
popf
idivl
inc
xor
mov
jmp
jbe
dec
sahf
test
ds
and
adc
pusha
das
cld
cmc
jp
mov
mov
scas
add
sub
stc
xchg
push
mov
pusha
adc
subb
sub
push
aaa
or
xchg
std
inc
sbb
pop
xchg
add
divl
and
sub
sub
jmp
roll
in
enter
mov
dec
lret
pop
outsb
xchg
dec
loop
notb
enter
xor
or
insl
push
mov
push
mov
pop
fs
insb
xor
jle
mov
mov
pusha
std
push
sbb
mov
rorl
loopne
sub
push
push
into
loop
mov
in
push
pop
imul
cmpsl
cmp
nop
dec
rcrl
mov
icebp
imul
push
fcoml
and
in
adcb
push
xchg
stos
jl
loop
cmpsl
in
mov
sub
xor
iret
or
jne
lea
mov
sarl
sub
xchg
sub
xchg
sbb
cmp
outsb
jmp
jecxz
adc
jbe
sti
addr16
sub
mov
xchg
push
xor
dec
test
jb
ljmp
jno
or
mov
jp
scas
and
icebp
sbb
lret
dec
lods
add
popf
sbbb
cmc
cmp
shld
scas
cmc
mov
neg
xchg
mov
std
or
cmp
into
imul
mov
loop
push
pop
ret
enter
sub
push
test
add
push
orl
xlat
and
mov
fmuls
fisttps
jnp
xor
xchg
add
mov
shl
imull
push
pushf
sbb
lret
adc
mov
test
pusha
stos
cwtl
inc
mov
jns
mov
lods
cs
or
xchg
xor
movsb
jecxz
popa
add
jo
outsl
out
cmp
lods
push
sub
jmp
cli
fisubs
out
inc
pop
mov
movsb
in
sbbb
in
jno
shlb
or
xor
or
pop
xor
pop
pushf
jg
inc
test
adc
inc
jmp
je
xchg
addl
cmp
insb
xchg
dec
insl
mov
mov
or
or
jle
fdiv
test
push
cmpsl
outsb
jle
mov
pop
aaa
sahf
or
dec
icebp
sub
rcll
ljmp
mov
jno
xor
shrl
cmp
fildl
cmp
add
aam
mov
ret
das
sub
scas
mov
cmp
push
in
jp
xor
xchg
jae
cmp
cmpsl
ds
pop
outsl
xchg
std
out
cmp
pop
sbb
dec
xor
iret
push
adc
testb
notl
aam
push
xchg
scas
pop
pop
pop
hlt
mov
mov
les
sbbl
in
push
mov
and
js
imul
test
inc
push
xlat
in
js
mov
stos
int
dec
in
sbb
inc
mov
daa
imul
cmp
cmpsl
sahf
mov
fisttps
cmpsb
cli
repz
ljmp
xchg
xchg
xor
cmp
insb
jo
xlat
mov
aad
das
inc
xchg
push
xor
mov
sub
int3
rolb
adc
push
test
arpl
fisubs
bsf
xchg
loop
add
pop
lea
dec
pop
popf
inc
gs
inc
and
adc
hlt
cmp
repnz
adc
pushf
cmp
push
jg
sbb
repnz
rcr
imul
out
or
loop
cmc
aas
flds
jmp
scas
dec
xchg
mov
and
xchg
ret
ds
aas
pop
call
xchg
pop
icebp
xchg
and
cmpl
sbbl
int
mov
outsl
jne
dec
dec
adc
dec
jg
cmp
xor
dec
sbb
lds
scas
repnz
outsl
test
cltd
add
or
rorb
shrl
movsl
mov
fwait
pop
jnp
pop
and
jmp
outsl
les
xchg
push
xchg
fisubl
fs
mov
add
mov
fsubrl
cmp
pop
mov
je
lea
gs
out
shl
mov
cli
sar
imul
movsb
push
add
fdivrs
xor
push
movsl
push
push
fs
enter
sbb
cmc
sbb
push
mov
inc
pop
sub
mov
cmc
xchg
int
xchg
push
mov
sbb
std
fs
and
mov
orl
xchg
push
dec
sbb
ds
sub
lcall
and
cld
xchg
pop
outsb
cwtl
or
mov
dec
or
xor
jbe
ss
inc
mov
or
leave
je
sub
fwait
pop
inc
jmp
dec
or
mov
push
mov
imul
jl
jg
jmp
cmpsb
xor
sbb
out
movsb
cmp
mov
ret
jae
jae
dec
fstl
or
outsb
loope
loopne
adc
and
sub
sbb
leave
cld
push
inc
and
cmp
mov
push
inc
cmpb
testl
out
xchg
sbbl
stos
mov
cmp
out
jge
jecxz
adc
add
xlat
bound
and
inc
and
shlb
fcoms
sub
mov
ljmp
mov
push
sub
icebp
fistpll
mov
xchg
div
or
mov
push
xchg
add
adc
inc
pop
sbb
push
dec
shll
mov
mov
ret
aaa
dec
das
push
xchg
imul
push
jle
pop
mov
lahf
push
pushf
dec
dec
int3
lods
pop
mov
cmp
lcall
das
stos
sub
aam
adc
in
xor
xchg
cmp
int
in
mov
push
xor
in
jne
mov
sub
xor
out
test
mov
fnsave
push
movsl
mov
add
daa
mov
lods
mov
shl
frstor
sbb
outsb
pop
sub
cmc
xchg
mov
les
movsb
add
xchg
or
sahf
mov
popa
cmc
jl
pop
lock
repz
adc
jnp
dec
sbb
fildll
dec
out
xchg
ud0
cmpsl
sarl
adc
cltd
outsb
pop
pop
add
sti
hlt
fnsave
dec
data16
push
jno
or
jmp
mov
xchg
jno
jmp
fcoms
call
sub
inc
std
xchg
je
mov
jae
sbb
pop
xor
pop
mov
sub
cli
add
push
push
mov
je
xor
push
and
cld
sbb
adc
lahf
ficompl
adc
les
cli
scas
xchg
mull
push
inc
cwtl
por
sti
push
cmpsb
jnp
pusha
aaa
mov
stos
sets
pop
cmp
mov
scas
sbb
xchg
mov
push
jl
in
ret
adc
inc
inc
pop
loopne
fisttps
ret
xor
sub
inc
inc
clc
inc
or
iret
or
sbb
data16
icebp
jmp
into
ljmp
insl
outsb
push
dec
fs
and
lods
dec
and
or
jno
mov
mov
cld
add
adcl
or
sub
mov
add
mov
mov
rclb
add
pushf
pop
inc
mov
sub
pop
lahf
call
xchg
sub
mov
adc
lret
call
negb
testl
add
dec
mov
xchg
fmul
and
sti
mov
jne
fmuls
pop
adc
dec
jecxz
fidivrl
dec
inc
mov
mov
xchg
fs
test
pop
and
adc
jb
pop
sbb
and
adc
sarl
cmp
rcll
add
mov
addr16
pop
idiv
out
sbb
adcb
test
scas
or
shrb
xchg
mov
test
jnp
sub
js
adc
hlt
sbb
push
arpl
push
repnz
mov
andl
enter
mov
sub
jnp
dec
sbb
adc
cmp
pop
sub
xchg
stc
cmp
ljmp
inc
xor
dec
rcrl
fnstenv
xor
cmp
lret
mov
pushf
pop
decl
jl
mov
jae
xor
sub
jge
xchg
mov
inc
mov
lret
leave
je
mov
sti
ljmp
pop
mov
push
shrl
jle
inc
pushf
dec
repnz
repnz
loop
cmp
popf
lea
lea
mov
pop
push
in
std
aas
jp
inc
sub
dec
jp
rcrb
pushf
xchg
sub
fs
addr16
shll
pop
jne
ret
xchg
sbbl
jmp
jnp
std
mov
leave
cmp
stc
push
jmp
or
fwait
jbe
out
xor
or
jbe
push
mov
jo
cmpsl
fwait
shl
jnp
mov
bound
insb
jle
pop
mov
cmpb
sbb
pop
loope
push
stos
fistl
test
sub
xchg
inc
or
std
cmpsl
push
out
adc
jbe
imul
dec
pusha
sub
or
lea
fwait
stos
fisttpll
push
testb
sub
lcall
cwtl
sub
lret
ret
push
xor
jge
scas
daa
cmp
mov
sub
cmpsl
push
xchg
inc
in
push
cli
cs
testb
insl
adc
push
pop
or
aaa
xor
add
mov
xor
fwait
mov
negl
mov
jecxz
inc
out
ret
in
aam
das
or
mov
mov
in
inc
push
cmpsb
xchg
mov
dec
xchg
daa
nop
daa
lds
fisubs
jl
cmp
mov
mov
mov
inc
sub
aaa
jne
shrl
pop
inc
testl
xor
cmpsl
sub
enter
cmp
insl
push
pop
out
dec
mov
lock
mov
or
xor
call
cmpl
inc
out
mov
mov
in
lods
rsqrtps
addb
pushf
inc
cltd
dec
adc
or
sub
jge
in
in
sahf
aad
push
leave
scas
lock
jge
sbb
push
aaa
xchg
adc
mov
scas
add
and
cld
les
leave
push
and
jnp
and
push
and
xchg
sub
repz
outsl
sub
mov
pop
nop
pop
mov
int
jge
mov
add
mov
jl
push
rcrl
add
cmpsl
dec
mov
or
jno
movsl
aaa
or
out
jns
sub
inc
dec
popf
mov
test
jo
jmp
cmp
cmpsl
sub
fsts
repnz
or
or
imull
scas
push
sarl
add
add
adc
xor
lahf
and
mov
test
lret
fidivrl
loop
sti
push
or
into
jge
add
or
add
je
inc
or
cmp
bound
loopne
clc
test
xchg
mov
pop
mov
inc
xchg
pop
inc
arpl
scas
inc
jne
cmp
test
pop
adc
or
xchg
sub
pop
sub
das
out
imul
aaa
mov
jecxz
insb
xchg
in
xor
imul
inc
jno
sub
ret
cwtl
fdivrl
lds
jle
inc
icebp
mov
sub
cld
cwtl
dec
in
mov
xchg
push
dec
sbb
ds
aas
lock
push
jg
imul
xchg
cmp
or
mov
inc
xchg
out
push
jp
or
inc
dec
mov
mov
or
mov
imull
stos
jbe
or
lds
cmpsb
lods
out
outsb
xchg
shll
adc
jl
push
fisubrs
leave
sti
mov
and
out
sbb
dec
push
rorl
push
inc
push
fiadds
lock
xor
push
and
inc
fimuls
dec
pop
and
jp
push
lahf
orb
sub
insl
mov
jmp
in
popf
inc
fbstp
adc
fidivl
ja
mov
jg
imul
xor
outsl
repnz
loope
push
pushf
popl
andl
dec
arpl
pop
inc
xlat
xchg
xor
xchg
outsl
adcl
jg
sahf
subb
in
mov
jb
cmp
lret
xchg
push
cmp
push
daa
mov
loope
scas
cmp
mov
fst
repz
inc
les
in
xor
xchg
jle
inc
bound
mov
mov
setp
xchg
push
movsb
jbe
imul
stos
inc
mov
stc
push
fmuls
mov
int
sahf
lods
loopne
cmp
sarb
add
mov
dec
scas
sti
test
or
notl
clc
insl
fcomip
push
sbb
clc
das
int3
outsl
inc
test
and
sub
add
jp
adc
mov
sahf
fcomip
pop
pushf
and
ljmp
idivb
aas
dec
mov
add
adc
mov
push
xor
fstpl
or
and
sub
and
push
cwtl
daa
push
dec
fucomip
scas
scas
in
data16
out
mov
in
mov
mov
pop
arpl
aam
sub
mov
sbb
loopne
movsb
push
repnz
xor
arpl
sti
inc
in
pop
adc
cs
addb
xlat
pop
sub
test
dec
fidivl
lea
inc
pop
sbb
shlb
sub
fnsave
mov
leave
adc
imul
push
inc
pop
mov
fsubp
mov
gs
jmp
jno
sub
inc
jmp
adc
jno
dec
ror
lahf
subb
inc
and
xor
push
mov
daa
add
sbb
fstps
or
xor
and
dec
rcrl
dec
das
mov
inc
lods
ja
lcall
je
out
mov
cltd
notl
montmul
cmpsb
inc
add
pop
add
xchg
jecxz
or
push
inc
cli
pop
and
mov
inc
daa
mov
inc
cwtl
inc
push
leave
popa
nop
push
rcrb
xlat
jno
adc
out
das
sahf
push
mov
push
in
mov
mov
lods
sbbl
or
adc
repnz
ss
jl
stos
arpl
mov
enter
sbbl
clc
xchg
pop
notb
neg
in
addr16
add
add
mov
mov
xor
mov
or
fsubp
add
jecxz
xchg
notl
jg
inc
jae
inc
or
mov
inc
pop
scas
cli
ret
mov
lret
testb
loope
push
jo
sbbb
xorb
jp
pop
inc
pop
out
jns
and
cmp
mov
movsl
sti
ret
imul
mov
lret
push
push
jge
and
in
mov
loop
sbb
repnz
and
loop
mov
add
sbb
pop
xlat
imul
and
sbb
lcall
aas
jo
lods
test
mov
test
out
adc
dec
out
pop
cmc
and
mov
jle
xchg
mov
loopne
jp
ret
jnp
xchg
and
adc
jle
andb
cmp
mov
sub
cmc
mov
repz
sarl
cmpl
mov
inc
insb
cmp
popf
add
sbb
push
xor
testl
loop
jns
test
push
lods
inc
negb
mov
loope
adc
jo,pt
jle
popa
jg
dec
shll
xchg
xor
test
push
outsb
and
negl
popa
mov
jp
lods
ret
sbb
cmp
inc
stc
fwait
popa
sub
ds
ljmp
mov
aad
dec
aam
sbb
push
stos
dec
jecxz
js
and
popa
mov
rol
ret
in
mov
sub
pop
pop
stos
dec
pop
in
pop
stc
aam
es
sbb
push
sub
aam
ss
lds
xchg
cltd
cmpsl
ret
inc
dec
mov
adc
mov
out
inc
call
sbbb
push
jmp
int3
fsub
add
mov
movsb
or
jecxz
adc
mov
sbb
test
cld
add
mov
fisttps
sarl
add
pop
jo
inc
rolb
test
push
fimull
jno
je
nop
stos
aaa
jg
jp
fs
das
pop
shlb
mov
daa
ds
push
orl
pushl
lcall
xchg
cwtl
mov
inc
fstp
pop
cwtl
movsl
add
gs
xor
rcl
flds
mov
mov
out
ja
pop
loop
mov
aas
cltd
lcall
ds
add
scas
mov
pop
fnstcw
imull
pusha
adcl
loopne
inc
pop
mov
mov
test
pop
dec
xlat
js
adc
push
test
adc
jle,pt
and
dec
test
push
pop
insl
andl
lcall
lret
pusha
jp
jnp
fsubl
and
cmpsl
fxch
jae
add
sub
mov
in
aam
xchg
sbb
sbbl
lret
fldcw
sub
push
popa
sbb
pop
cld
cs
insl
sti
mov
sub
push
push
dec
shrl
xorb
xor
lahf
neg
pop
lea
into
cmpsl
xor
and
add
lret
fisubs
roll
dec
mov
notl
movsl
int3
lret
mov
fnstcw
xorl
lods
clc
aam
ds
push
xorl
lea
push
adc
fwait
jbe
filds
pop
pop
fbstp
sub
aad
aad
xor
push
cmp
cli
sbb
lods
daa
mov
mov
insl
dec
cs
pop
mov
pop
insl
repz
stos
pop
iret
orb
cli
xlat
pop
xor
in
mov
xchg
cld
sub
dec
vpunpcklqdq
shlb
insl
sub
inc
loope
daa
std
enter
cmp
icebp
mov
push
jg
in
in
mov
sbb
movsb
sub
or
push
push
mov
xchg
roll
arpl
test
push
test
jns
test
mov
mov
lahf
xchg
dec
pop
js
lahf
sub
sub
in
enter
and
stos
sbb
xlat
lret
pop
lret
repz
jp
fwait
mov
cmp
xchg
push
int3
faddp
lods
push
mov
mov
jmp
or
and
mov
sub
or
enter
out
mov
xchg
xchg
adc
sbb
les
lcall
loopne
call
test
scas
aad
repnz
idivb
dec
xchg
insl
add
mov
xor
pop
movsl
imul
jnp
bound
pop
rorb
add
rclb
cmp
xor
push
push
stos
syscall
es
cmp
lods
je
mov
cmp
bsr
sub
push
adc
testb
outsl
movsb
jo
xchg
adc
inc
repz
outsl
adc
mov
cmp
or
jb
movsb
push
ret
mov
aas
dec
stos
jno
dec
jl
vpshaq
in
leave
cld
inc
je
xor
inc
mov
push
fiaddl
test
jno
and
cmpsl
popf
dec
and
add
aam
or
mov
imul
lcall
cmp
cmc
mov
mov
sbb
adc
mov
loope
movsl
shr
xor
push
mov
fs
test
jae
loop
adc
popf
ret
stc
test
dec
adc
repnz
inc
loope
cwtl
mov
ja
pusha
sar
inc
adc
ss
jne
mov
iret
sbb
sbb
sub
shll
pop
imul
adc
xchg
push
push
shlb
ss
inc
lret
mov
cmp
dec
pushf
cmp
xchg
lock
sarl
ret
xchg
sub
test
push
xchg
xorb
repnz
ret
pop
jmp
sbb
das
pop
cmc
pusha
dec
cltd
std
xor
out
popf
aaa
dec
adc
sbbb
adc
adc
es
in
pop
call
pop
mov
xor
mov
sbb
testb
aaa
into
jb
xor
bound
push
loope
pop
add
xor
xchg
pop
call
adc
mov
es
cwtl
adc
add
sbb
lea
pop
in
aam
fnop
call
test
mov
mov
sub
shrl
push
lock
adc
inc
stos
cmp
stc
ret
pop
sbb
loope
out
jecxz
or
add
fbstp
test
pop
icebp
cmp
dec
out
cli
test
mov
push
repz
push
fdivrs
sbb
mov
mov
popa
add
inc
fadds
push
lods
dec
jecxz
clc
adc
out
xor
mov
add
jle
or
add
scas
add
cld
mov
jl
add
adc
mov
xchg
out
inc
push
pop
jb
dec
rcrl
gs
repnz
xor
adc
inc
cmpl
fldl
xchg
mov
insb
call
leave
mov
inc
mov
out
push
popf
cmp
or
sbb
movsl
dec
out
push
lcall
jg
pop
xchg
push
popf
dec
in
in
jmp
shr
sbb
cwtl
fs
cmp
movsl
scas
cmp
sbb
into
mov
cmp
cli
imul
inc
lcall
lcall
movsl
test
mov
int3
mov
push
je
dec
rcrl
sbb
dec
add
jbe
jno
jnp
add
rcrl
test
stos
cmc
adc
or
cli
mov
loopne
sbb
fwait
bound
mov
call
or
outsl
addb
xchg
jecxz
mov
pop
pushf
rolb
or
andl
cltd
mov
dec
pusha
mov
jae
mov
out
mov
push
sbb
xchg
add
push
cmp
insl
lock
inc
pop
mov
cmpsb
jl
mov
jne
pop
inc
loopne
mov
sahf
adcl
mov
sub
add
push
int
mov
lods
jmp
and
int
jmp
rclb
dec
lock
enter
jo
and
ja
dec
test
sbb
fbld
sahf
jae
xorb
ja
cltd
arpl
movsb
mov
push
xchg
stos
inc
jg
das
scas
push
icebp
dec
rcr
xchg
or
in
sbb
sbb
xchg
adc
add
push
ljmp
mov
mov
mov
pop
cmp
rcll
fiaddl
and
sti
mov
jmp
push
adc
xchg
sub
jae
test
ja
adc
int3
adc
dec
add
fucomi
or
sub
sahf
cld
sub
test
dec
aad
dec
arpl
cmp
mov
xchg
or
shl
into
sbb
xlat
xchg
mov
add
sbb
sub
mov
or
sbb
aaa
cmp
adc
fnstsw
sbb
jnp
cltd
lret
outsb
add
int3
imul
push
in
push
cmp
mov
dec
jo
test
bound
jne
leave
xor
push
shlb
pop
js
popf
jbe,pn
add
or
pop
add
loopne
arpl
push
popf
mov
dec
dec
cs
and
or
cs
cwtl
sbb
inc
dec
push
ds
xor
add
mov
push
repz
and
pop
pop
pop
testl
arpl
nop
lods
test
xor
jns
jno,pt
lods
inc
clc
and
or
mov
pop
lcall
sbb
dec
jo
insl
ja
lahf
shr
inc
mov
jecxz
push
faddl
jnp
cmpsb
cs
and
shr
pop
sbb
inc
insl
cmp
push
insl
cmp
mov
xchg
push
loope
inc
dec
int
fisubl
xchg
test
push
call
ds
push
test
leave
xchg
mov
ds
or
into
movsb
ja
mov
out
pusha
jae
scas
sub
test
adc
mov
mov
lcall
mov
push
insl
xchg
jne
pusha
cmpsl
cwtl
xchg
cli
push
dec
out
xor
insb
dec
out
pop
xor
test
and
iret
lods
xchg
or
aas
jno
jp
pop
lods
xchg
ljmp
loop
ja
inc
push
dec
push
cs
roll
jbe
ja
jle
push
std
stos
jl
fcomip
push
in
and
lcall
sub
orl
xor
cmp
test
rclb
aaa
rorb
filds
cld
imul
and
add
mov
leave
popa
gs
jae
or
cmp
mov
add
dec
ljmp
adc
pop
push
or
mov
mov
jmp
in
movl
in
push
fisubs
lret
jg
jmp
add
dec
decb
mov
adc
jb
lds
dec
dec
enter
push
jnp
mov
pop
int3
or
shll
arpl
outsb
mov
out
and
xchg
lahf
mov
xchg
push
out
cltd
sub
out
mov
stos
and
mov
pushf
ja
test
mov
pop
dec
out
jne
out
aam
add
inc
daa
loop
les
fidivl
fisubrl
dec
dec
and
push
or
dec
insb
enter
int
mov
nop
mull
out
push
jbe
jbe
adc
iret
aas
gs
inc
dec
loope
xor
or
mov
popl
add
mov
fistpll
mov
mov
jo
push
or
xchg
lds
fwait
scas
mov
fst
insb
push
dec
push
loope
mov
jl
call
push
mov
xor
mov
and
cs
inc
push
in
fnstcw
mov
adc
mov
test
pop
repnz
adc
pop
adc
inc
cmp
arpl
mov
popf
int
lcall
mov
sub
mov
and
and
jg
fidivs
daa
pop
sub
pop
pop
test
jne
sti
fisubrs
nop
pop
in
jl
or
lods
jnp
leave
xchg
lea
mov
bound
adc
pop
mov
movsl
or
mov
cltd
push
jne
fxch
and
sub
pop
cmpsl
push
inc
sbb
jns
mov
decl
xchg
pop
xchg
inc
inc
fsubs
inc
cwtl
xchg
ret
fisubrl
repz
outsl
xor
add
inc
test
push
pop
sbbl
call
adc
adc
sbb
xchg
and
xor
pop
out
mov
jge
lods
pop
lock
lods
call
inc
push
jmp
or
mov
push
cmpb
repz
ret
mov
sbb
inc
mov
inc
inc
dec
aas
imull
cmpsl
cmp
mov
and
cmp
rclb
inc
repz
repnz
repnz
aaa
pusha
mov
int3
stc
sbb
adc
add
cmc
pop
fs
xchg
xchg
mov
inc
mov
xor
int3
or
jae
sbb
mov
int3
addr16
add
add
cmpl
dec
ret
or
arpl
aas
or
int
js
ffree
fwait
push
mov
in
popa
xchg
push
or
mov
repz
adc
pop
lods
xchg
and
shll
fldl2e
push
xorb
popa
xchg
xchg
sbb
lcall
sbb
lahf
mov
pop
add
cltd
stos
mov
adc
adc
shll
pop
inc
mov
mov
cltd
scas
adc
andb
clc
cli
push
sub
xor
inc
cmp
jo
adc
or
mov
cmpb
mov
cld
pop
push
loopne
push
cmp
and
mov
jg
jnp
rcr
fwait
test
out
lds
ja
push
xor
cltd
fsubrs
dec
test
jl
out
inc
mov
lcall
cwtl
sbbb
cmp
jecxz
push
inc
push
mov
jp
in
sbb
movb
jge
cmpsb
notl
xchg
ficoml
push
in
pop
xchg
das
movsb
add
jge
push
movsb
sbb
cmpsl
and
shrb
ja
jae
cmpsl
dec
or
mov
scas
in
add
xor
dec
outsb
jnp
sbbl
pushf
cmc
mov
aaa
or
jo
push
outsl
mov
iret
xchg
ret
addr16
lret
pop
es
rcrb
cmpsb
in
in
mov
sbbb
rorl
outsb
jo
and
add
sub
dec
test
xchg
das
cmp
jno
call
push
xor
inc
ret
ret
and
dec
or
scas
xchg
sub
mov
xchg
or
hlt
call
mov
sub
cltd
out
shll
stos
rolb
rclb
jp
cmp
jne
cmpsb
sub
xchg
jl
xor
imul
repnz
loop
cltd
imul
push
pop
cltd
stos
ja
lahf
cmp
sti
outsb
addb
rolb
ljmp
push
lret
addr16
mov
pop
pop
or
out
inc
pop
imul
cmp
mov
mov
push
or
add
addl
loop
mov
fcomi
iret
mov
push
ret
rorb
rcrl
pop
inc
shrl
sub
mov
sbb
fidivrl
xchg
lods
fwait
popa
clc
int3
hlt
and
movsb
cld
inc
adc
mov
jecxz
xchg
lods
add
testb
insb
adc
aaa
inc
popf
xor
jno
push
inc
mov
outsb
js
pushf
scas
dec
test
add
inc
andb
out
test
jno
bound
icebp
arpl
add
mov
dec
lods
inc
pop
inc
std
xchg
movsl
xchg
xor
mov
xor
popf
jl
xor
jb
lret
popf
mov
inc
sbb
and
sub
pop
jg
mov
pop
ds
dec
into
fcompl
cmpsl
enter
push
fs
hlt
cltd
cmp
in
inc
pusha
xchg
lret
jae
mov
pop
inc
jge
sti
das
add
mov
ret
bound
jno
mov
push
test
jg
cmp
push
xchg
icebp
mov
add
mov
push
lret
jle
into
enter
jp
or
outsb
insl
adc
repz
pop
push
in
nop
cwtl
int
mov
sub
les
pushf
scas
shl
add
sub
inc
push
cmpsl
push
outsl
push
adc
pop
rep
mov
mov
hlt
xor
adc
sbb
aad
and
xchg
push
ds
or
jne
sub
pop
mov
loop
add
das
sbb
ret
jne
jg
xchg
ljmp
jno
or
xchg
mov
sub
xchg
add
jb
out
sahf
in
mov
jne
add
mov
and
int3
iret
lcall
mov
sub
cmpsb
shl
jns
test
mov
in
sub
mov
mov
jno
fnstenv
xchg
out
xchg
inc
adc
cmp
mov
rorl
adc
in
mov
test
xor
pop
adc
push
outsb
cmp
pop
lahf
daa
push
das
andl
xlat
lods
movsb
das
inc
xchg
or
xorb
std
xchg
mov
dec
adc
aas
adc
insb
aas
sub
stos
cmp
and
mov
fldl
fcmovbe
lcall
cmp
icebp
push
pop
aam
xchg
outsl
sub
pop
nop
sbb
dec
xor
test
icebp
int
push
mov
shlb
cmpb
inc
out
stos
pusha
push
fnstsw
pop
cs
aaa
push
stos
enter
iret
pop
mov
xor
mov
cmpsb
sbb
mov
mov
pop
sub
mov
mov
push
sub
sbb
data16
jbe
inc
int3
pop
out
mov
ss
fs
dec
add
and
jle
sbb
and
jmp
and
pop
stos
xchg
cli
pop
adc
loop
jg
data16
xchg
jge
in
in
jl
mov
sub
mov
ds
leave
popa
dec
push
mov
stos
push
xchg
cs
cmpsl
jl
pop
jne
mov
xchg
mov
movsb
les
sbb
sbb
and
mov
and
xor
test
push
cmp
lods
mov
push
jne
xchg
leave
shrl
out
lods
and
mov
pop
rcrl
mov
loop
or
cmp
push
push
jmp
fbld
dec
mov
pop
mov
pop
seta
arpl
imul
xor
adc
push
sarb
insl
mov
orl
popa
mov
xchg
mov
pop
mov
pop
movsl
lahf
mov
in
sub
cmp
add
adc
popf
outsb
add
mov
int
mov
adc
out
mov
mov
add
jmp
dec
jo
mov
outsb
add
lods
cwtl
mov
push
inc
aam
fidivs
orb
and
test
gs
pop
lahf
lods
push
push
mov
mov
sbb
inc
sti
cmp
subb
xchg
js
ss
push
jge
loope
fcoms
xchg
jae
call
push
mov
das
outsb
mov
cltd
hlt
push
jns
xlat
insl
sbb
lret
hlt
push
std
shlb
lea
fwait
mov
into
std
outsb
test
lock
aaa
and
sbbl
repnz
mov
inc
jae
lahf
dec
or
sti
inc
loope
or
gs
and
jge
sbb
test
addb
or
andb
mov
mov
jecxz
test
loope
xor
iret
mov
push
cli
int
jp
scas
inc
pusha
rolb
inc
and
mov
dec
cmp
and
xchg
push
add
push
dec
push
jne
leave
sbb
add
into
insb
sub
scas
sbb
sti
cmp
movsb
or
data16
push
push
jb
dec
std
dec
cmc
pop
add
ds
jmp
add
sbb
add
out
negl
xor
and
daa
adc
out
jnp
sub
sahf
mov
fxam
mov
mov
pop
cmp
in
popa
out
cmp
es
cmc
or
or
xor
push
dec
adc
inc
out
mov
imulb
adc
in
cli
or
xor
in
inc
or
pop
xor
in
or
test
data16
addr16
pop
loopne
add
addr16
mov
pop
fwait
xlat
jg
sub
popf
stos
insl
xchg
shrl
push
xchg
jae
sbb
mov
mov
sbb
add
movsl
repz
cmp
xchg
test
lret
cmp
sbb
jno
popa
inc
pusha
mov
mov
sub
out
xchg
inc
sub
sbb
stos
pop
das
inc
mov
andb
mov
sub
aas
fcomps
or
in
xchg
sub
ds
jecxz
mov
aam
sarb
ds
push
cmpsb
sub
dec
jle
pop
mov
dec
loope
into
in
cli
clc
push
or
jmp
aaa
fidivs
sbb
pushf
pop
sti
push
or
in
fimull
shl
call
sbb
mov
dec
shrb
sub
push
movsl
fwait
lock
mov
movsb
repz
mov
xchg
sub
popf
addl
stc
inc
arpl
xchg
xor
dec
push
lods
cmp
jg
inc
daa
cmp
out
and
xor
pop
mov
push
loopne
mov
push
repz
xlat
in
gs
xor
out
add
jo
push
or
cmpsl
sub
jle
add
inc
fsubl
loop
stc
pop
arpl
xlat
daa
xchg
pusha
hlt
jge
imul
add
add
jo
daa
fldenv
call
jge
in
sti
inc
xchg
repz
adc
inc
std
lock
adc
push
aas
or
sbb
ss
das
dec
sbb
je
jo
aam
mov
cli
outsl
movsl
cmp
xlat
nop
imul
lock
test
jecxz
push
leave
pop
xlat
outsb
xchg
cmc
mov
sbb
xchg
dec
cmp
mov
sub
xor
push
jg
dec
leave
test
jle
mov
aas
adc
pusha
xchg
xchg
lods
outsl
jle
jmp
sbbb
adc
push
add
add
mov
jno
int
out
sub
push
fidivrl
xor
icebp
mov
sti
into
enter
hlt
mov
cltd
xor
or
inc
int3
mov
roll
xorl
repz
out
mov
scas
push
call
lret
cltd
lret
bound
ss
lret
mov
ds
scas
stos
dec
in
sub
into
cltd
fsubrp
or
push
jmp
mov
outsl
std
or
and
pop
lock
in
sbbl
pop
outsl
and
jnp
pop
repz
push
push
in
mov
cld
js
cltd
insb
jnp
inc
push
outsb
add
fistps
mov
sub
add
ret
sti
fistl
xor
mov
repnz
or
jb
test
arpl
pop
jle
dec
leave
mov
mov
and
inc
dec
call
sub
sub
dec
loop
fdivr
cwtl
pop
mov
out
mov
iret
cli
cld
addr16
push
sbb
xchg
mov
mov
sbb
jl
inc
ret
and
add
cmp
in
cltd
mov
cltd
test
paddsw
xchg
jg
fisubs
xchg
test
scas
pushf
out
sub
xchg
push
jp
adc
dec
test
sbb
aam
xchg
and
subb
mov
or
mov
sti
push
mov
aad
adc
mov
hlt
mov
fsts
sub
sbb
loope
xchg
repz
cmp
daa
out
mov
push
mov
push
jb
pop
xchg
add
or
sahf
cmc
sbb
pushf
sub
mov
stos
test
lea
ret
pop
ljmp
mov
aad
inc
and
add
add
xchg
mov
cmp
push
les
in
mov
push
aaa
sbb
cmp
mov
hlt
jge
mov
les
std
adc
andb
push
mov
dec
test
mov
and
dec
xlat
test
jg
inc
xchg
aaa
fs
xor
pop
mov
mov
cmp
adc
outsb
hlt
or
cmpsl
sbb
std
in
das
out
xor
stos
stc
iret
cltd
ret
push
sbb
mov
mov
or
ljmp
push
dec
stc
cmp
cli
ss
adc
cmp
insb
stc
push
sbb
imul
jmp
aas
xchg
add
add
add
fbld
or
pop
jle
out
dec
js
xor
mov
ja
stc
scas
inc
jmp
dec
out
xor
insl
add
mov
mov
lods
jno
out
mov
xor
rolb
into
enter
jmp
mov
inc
push
jecxz
or
sbbl
jl
push
stc
xor
and
pop
insl
jle
in
ss
rcll
mov
jno
mov
and
outsb
hlt
and
divb
in
cmp
and
push
mov
faddp
jbe
pop
test
fisttps
test
std
cltd
xchg
scas
sbb
pushf
xor
arpl
cmc
inc
fisubs
xchg
and
ss
cmpsl
add
repnz
cli
lret
loop
sub
es
xor
pushf
inc
lock
pushf
dec
loop
mov
and
mov
pop
and
mov
jae
push
fdivrl
sub
cli
addl
fmull
dec
repz
inc
or
mov
fcoml
mov
subb
xchg
movsb
cmc
adc
pop
je
fnstenv
jnp
stos
movsb
cld
lahf
ss
in
ds
xchg
mov
rol
std
mov
stos
inc
xor
sahf
jne
enter
xchg
scas
sbb
cmpsl
out
sub
hlt
repz
push
aad
mov
and
lea
jp
and
mov
mov
jo
add
pop
push
shll
mov
jecxz
pop
push
adc
outsb
push
in
xor
and
add
scas
out
shll
popa
stos
mov
add
pop
add
or
int3
pop
xor
cmp
bound
xchg
inc
inc
mov
xchg
jl
std
or
iret
sbb
lahf
pop
ljmp
add
add
sub
jecxz
sub
jne
cmp
xorb
or
push
cld
sbb
cmp
cmc
cld
mov
mulps
push
shrl
xchg
in
dec
push
jmp
pop
add
dec
fistpll
cmp
ljmp
popf
and
ss
pop
add
mov
push
inc
leave
inc
fcoms
or
mov
fcompl
mov
insl
jbe
loopne
aaa
xchg
cmp
and
mov
out
push
mov
sbb
jae
sub
outsb
lods
jecxz
mov
les
adc
push
and
xor
loop
jae
jae
inc
imul
nop
out
xchg
mov
int3
inc
dec
pop
mov
mov
jl
aad
push
es
in
icebp
mov
aam
sbbl
lods
dec
aad
push
loope
sti
pop
and
frstor
rcr
jmp
inc
cmp
ljmp
mov
add
std
je
fldenv
enter
push
jmp
fldt
and
loopne
jmp
mov
jg
enter
or
mov
xchg
sub
shlb
outsb
jmp
loope
or
cmp
inc
cmp
arpl
mov
aam
fimull
add
cmpsb
popf
mov
pop
mov
add
loopne
xor
and
insb
cld
push
loop
dec
pop
xchg
pop
out
mov
or
fcomi
sbbl
sub
pop
adc
fbstp
clc
loop
loopne
cmp
adcb
push
ds
dec
fisubs
ljmp
ljmp
pop
sub
test
pop
repnz
jp
sar
jecxz
loopne
or
push
pop
imul
cmp
icebp
fstpt
push
dec
cld
sarl
adc
mov
or
cmpsl
inc
movsb
jae
xchg
mov
or
js
mov
fbstp
mov
xchg
mov
pop
cmp
repz
or
xchg
in
fists
or
in
fbstp
pushf
adc
icebp
jno
sbb
push
pushf
or
add
rclb
or
scas
movsb
push
aaa
cli
push
int
sub
repnz
shrl
into
xchg
lret
faddl
nop
or
gs
call
inc
push
push
in
clc
jbe
pop
jno
rolb
pop
rcll
push
or
cmpsb
rclb
test
and
popf
or
adc
cmp
fimull
mov
mov
and
lret
scas
es
and
in
pop
inc
ret
leave
movsl
mov
pop
inc
popa
ffreep
mov
sarl
pop
daa
repz
ss
mov
aaa
cmp
jmp
dec
lret
sbb
das
add
sub
mov
dec
daa
jae
sub
mov
js
xchg
sarl
rcll
daa
icebp
and
sub
mov
out
fidivs
inc
fs
icebp
sub
adc
in
xchg
icebp
sbb
xor
outsl
les
jb
push
sahf
add
push
and
mov
scas
cmp
sbb
sub
arpl
sbb
andb
mov
dec
inc
jmp
mov
pop
xchg
in
hlt
not
jb
xchg
jb
lock
inc
add
add
pop
psubsw
icebp
in
fs
mov
movsl
mov
cmp
mov
pop
and
inc
in
outsb
fs
or
sub
js
or
adc
mov
leave
mov
xor
push
out
pop
ja
andnps
push
subl
xchg
rep
fnsave
pop
jne
push
clc
mov
repz
sbb
into
bound
or
das
cltd
sub
or
cmp
sbb
shrb
pusha
icebp
jg
ss
test
mov
fbstp
out
xor
scas
sub
in
push
fcoml
adc
dec
popa
dec
scas
scas
shrl
ljmp
sub
or
xchg
ja
lods
insb
jecxz
sahf
int
addr16
inc
pop
mov
mov
je
inc
inc
xchg
or
dec
xlat
lcall
sub
jmp
mov
movsb
jo
je
aaa
push
testb
mov
insb
sub
xor
or
dec
mov
aam
pop
adcb
cs
ret
pop
in
xchg
adc
cmp
das
dec
add
sub
mov
cs
inc
fs
loope
stos
mov
sbb
test
push
cmp
repz
xchg
scas
or
xchg
in
repnz
push
dec
out
ficoms
adc
mov
or
or
mov
jb
jmp
call
jecxz
add
add
jo
ds
outsl
dec
dec
test
jnp
fsubrl
pushf
stos
jmp
cmp
pop
sahf
fwait
add
jl
sub
ljmp
shrb
fldl
movsb
pop
cmc
aad
sub
std
dec
gs
xchg
xchg
sbb
js
fsubs
negb
mov
stos
cmp
test
cmpl
adc
int3
das
aas
push
loope
dec
pop
cltd
add
xchg
fmull
sbb
jl
lcall
stos
mov
xchg
push
scas
ficompl
lahf
lds
bound
dec
sbb
xlat
add
lret
fwait
test
incb
icebp
and
test
aam
jno
cmpsl
mov
int3
dec
loop
pusha
jg
sbb
ss
cs
jl
testl
loopne
pop
test
xchg
mov
stos
lods
jne
mov
xchg
and
std
xor
test
push
adc
sub
das
fdivr
loopne
add
mov
fsubrl
das
das
adc
inc
pop
sbb
movsl
xchg
pop
inc
aas
push
aas
sub
pop
sub
cmp
cltd
stos
jge
sbb
jle
or
lods
sbb
dec
int
call
repz
dec
sarl
shrb
mov
push
fdecstp
in
lcall
repnz
jge
jecxz
adc
mov
hlt
adc
mov
sbb
mov
jle
jns
or
aaa
incb
adc
rol
fsub
mov
pop
mov
enter
rcr
add
fldl
pop
shl
mov
pop
mov
and
sahf
xlat
dec
xchg
outsl
inc
ret
mov
xor
pushf
insl
stos
push
pop
inc
add
loopne
ficoml
add
cltd
flds
sahf
add
mov
xlat
lods
iret
data16
mov
cmp
out
mov
rcll
mov
das
mov
dec
int
in
rcll
sub
mov
jb
dec
cmpsl
jecxz
pop
leave
pushl
lcall
mov
xor
push
xchg
xchg
scas
mov
shll
pop
dec
pop
adcl
hlt
andb
or
cs
cmpsl
or
stc
push
mov
inc
push
insb
add
popf
test
xlat
cmpxchg
shll
stos
je
xsha1
cmpsb
int3
or
jns
arpl
xchg
nop
sub
mov
jnp
loopne
sbbl
sbb
sbb
cmp
adc
or
push
inc
dec
nop
mov
icebp
jbe
adc
icebp
and
mov
dec
in
inc
cmp
call
shl
pop
xor
mov
add
in
fisubl
xlat
in
subl
shll
lcall
push
iret
cs
movsb
mov
push
in
add
and
sub
dec
inc
push
sbb
dec
nop
pop
inc
lds
mov
mov
mov
push
lds
into
pop
sub
aas
icebp
frstor
aam
les
xor
and
out
pop
movsl
outsl
push
xlat
imul
mov
adc
out
sub
jp
mov
lret
js
loope
sbb
data16
test
sbb
sub
popa
pushf
in
lds
dec
cld
stos
int
xchg
mov
mov
insl
add
pusha
scas
ljmp
adc
inc
int
jb
inc
cmp
dec
cmpsb
cmp
add
mov
push
out
mov
adc
leave
or
fists
repnz
nop
xlat
sub
popf
xor
mov
push
push
cmc
or
adc
loop
push
mov
fdiv
adc
mov
or
stos
push
das
scas
cmp
mov
orl
mov
adc
lds
adc
fiadds
pop
jecxz
push
fbld
xlat
push
adc
fists
xor
mov
ficoml
push
sbb
push
gs
aam
cmc
add
popa
mov
imul
in
inc
and
sbb
or
mov
ss
rol
testl
push
jno
shl
inc
pop
sbb
test
ret
push
xchg
sub
cmc
mov
in
lcall
sub
es
lahf
sub
push
jge
jbe
jo
imul
jae
outsl
je
xor
xchg
subl
push
test
sbb
fsubrl
or
xchg
rorl
jnp
mov
sbb
pop
pcmpgtb
cmpsb
sbb
sub
and
aad
jle
das
das
sbb
mov
cmc
adc
movsb
xor
mov
pop
clc
notl
test
fsubrs
pop
push
popf
cmp
divb
fistpl
subl
fists
pop
outsb
cs
sub
clc
sub
push
pop
pcmpgtw
and
push
sbb
push
or
sub
pop
aam
mov
mov
mov
loop
aad
jl
outsb
jl
popf
popf
stos
inc
leave
rclb
popf
mov
pop
pop
movsb
push
aam
dec
ss
dec
sahf
mov
dec
adc
or
jmp
test
mov
shrb
scas
sbb
push
jbe
push
test
and
mull
lods
rclb
push
mov
out
pop
es
daa
or
xor
data16
inc
scas
aas
push
pop
inc
test
ja
outsl
push
dec
test
mov
leave
mov
fnstenv
arpl
jb
mov
adc
call
xchg
loop
sub
cmpsl
xchg
or
inc
pop
and
pop
aaa
jmp
sahf
adc
adc
or
push
jmp
ja
lock
mov
and
outsl
jmp
xchg
loop
andb
add
es
test
pop
cmp
not
mov
imul
cmp
scas
clc
icebp
or
adc
cmpsl
push
push
ljmp
jno
adc
testl
scas
lods
stos
ret
push
fidivs
addl
and
rol
stos
lods
jp
adc
jmp
or
into
out
leave
dec
inc
fldl
addr16
leave
in
movsl
mov
and
out
ljmp
push
ljmp
cmc
mov
ret
xlat
negb
inc
inc
pop
ret
mov
adcl
xorb
or
btr
jecxz
cmc
test
loopne
xor
popa
daa
jge
inc
jbe
in
mov
loope
outsl
xor
cmpsl
xchg
pop
add
gs
ret
push
inc
insl
orl
pop
movsb
hlt
aaa
or
xchg
mov
cmp
add
sub
test
mov
jno
or
outsl
jnp
sub
js
popa
mov
push
dec
lock
pop
mov
fisttpll
lods
xorb
sti
xor
add
pop
je
test
dec
pushf
pop
cltd
xchg
loopne
mov
mov
cmpsb
dec
int3
shlb
imul
mov
push
sbb
call
or
sub
data16
jns
cmp
lea
incb
or
bound
fwait
mov
mov
inc
mov
and
adc
mov
or
and
fimull
sbb
mov
jb
subb
jo
inc
test
int3
mov
ja
mov
pop
or
and
dec
push
aaa
xor
adc
inc
adc
ss
dec
outsb
sub
jge
jmp
gs
jmp
xchg
sahf
mov
subb
cmp
or
ja
test
mov
sbb
cmp
daa
mov
pop
out
bound
push
je
add
adc
cmp
mov
sub
movsl
adc
dec
fwait
lcall
fidivs
insb
mov
js
int3
push
iret
adc
push
out
and
fldlg2
daa
or
or
call
sbb
adc
push
mov
add
mov
call
cld
xchg
xor
and
and
jnp
hlt
sub
jns
fildll
xchg
xor
mov
filds
sbb
aam
add
sbb
shlb
inc
out
decb
shrb
xchg
adc
inc
mov
std
js
out
cmp
jg
cwtl
mov
xchg
sbb
xchg
cmp
push
in
cmpl
fidivs
mov
mov
pop
or
dec
aas
jl
in
cmpsb
insl
shrb
xor
cmc
mov
sti
xchg
mov
push
inc
loopne
sub
jbe
loopne
jns
stos
add
xor
xchg
jecxz
mov
dec
ja
cmpb
test
cmp
xchg
ret
icebp
xchg
mov
xchg
lock
adc
jne
sub
fnsave
dec
fcomps
test
pop
jmp
xlat
outsb
gs
mov
ret
mov
xor
cli
lock
lods
das
and
push
pop
xchg
mov
and
lret
orl
jecxz
cs
dec
loop
loop
in
insb
and
iret
repz
dec
insl
jg
mov
pop
ret
xchg
mov
inc
clc
inc
pop
insl
add
mov
dec
cmp
imul
push
jmp
pop
add
cmpsl
xchg
lret
mov
enter
cmp
or
cwtl
and
jo
lods
xor
sbb
lods
enter
into
bound
mov
lds
cmpsl
add
pop
out
sbb
jnp
and
push
cld
fsubl
xor
ja
movsb
or
imul
add
add
and
adc
aaa
dec
mov
lea
pop
mov
jnp
jbe
outsb
ds
inc
inc
and
cmp
lret
and
push
insb
in
iret
fiadds
filds
cmp
lret
and
pop
aam
sub
outsl
js
push
push
cmpsb
aaa
into
xlat
or
lods
clc
push
cmpb
flds
int3
xor
std
sbb
jmp
popa
jecxz
ja
adc
in
mov
mov
add
aaa
imul
jg
mov
adc
jge
repnz
lret
inc
dec
loopne
divb
mov
adc
out
jo
or
inc
xchg
hlt
rolb
xor
sbb
push
js
push
pushf
insb
imul
jno
ss
add
or
cmpsb
jb
in
xchg
pop
test
sahf
sub
xor
jl
inc
ljmp
and
aam
push
movsl
sbb
mov
mov
and
mov
mov
nop
addr16
push
mov
cli
cltd
push
stos
lahf
mov
sub
add
mov
loope
mov
int
push
mov
je
sti
lcall
repnz
fwait
add
and
jo
push
add
inc
lock
lods
je
cltd
repz
testb
clc
mov
jb
mov
push
pusha
or
sub
xchg
pop
xor
sbb
sti
fiadds
lret
addr16
sbb
in
jb
push
xor
xor
and
pop
faddl
aaa
mul
mov
add
mov
sub
aaa
push
hlt
lcall
frstor
push
add
inc
lahf
data16
xor
movsb
jg
test
adcb
mov
add
xchg
jp
and
fiadds
jb
or
and
xlat
inc
popa
cmc
imul
ds
jge
mov
sti
cmp
inc
gs
xchg
movsl
mov
aad
xor
hlt
in
imul
js
xor
xchg
or
lret
push
mov
push
out
aas
bound
daa
xlat
pusha
jbe
xchg
std
mov
rorl
pushf
icebp
mov
cmp
sbb
test
jl
mov
es
cmp
cmp
cmp
adc
dec
xor
ss
scas
mov
mov
adc
cld
loopne
je
cs
test
or
lds
sbb
adc
test
cs
lods
bound
sti
sub
enter
or
mov
iret
sahf
stos
pop
and
cld
dec
inc
test
mov
aaa
xchg
mov
repz
jecxz
gs
push
jo
cmpsb
jne
mov
sbbb
mov
ret
xlat
inc
pop
inc
cli
loopne
sub
xchg
sub
arpl
mov
pop
add
idivl
loop
in
faddl
mov
xchg
imul
adc
lods
inc
sub
lret
fsubl
mov
inc
xchg
lea
dec
gs
inc
and
push
mov
mov
loopne
push
lea
and
dec
sub
and
mov
inc
aad
fxtract
or
pusha
mov
xor
push
stos
inc
or
push
add
jl
pusha
pop
out
xchg
call
std
adc
or
xor
mov
push
out
pop
xor
bound
fcmovnb
and
daa
and
inc
fiadds
inc
scas
push
dec
test
out
imul
pop
jmp
or
mov
cmpsb
mov
leave
jg
xor
lahf
add
dec
outsl
push
insb
mov
jg
les
pusha
loope
push
lds
idivb
and
mov
adc
or
pop
test
xchg
mov
sub
and
aaa
jg
add
jle
mov
inc
push
adc
or
mov
push
xchg
sbb
mov
cmc
adc
adcb
sti
hlt
pop
rcr
in
cmp
inc
sbb
aas
push
mov
movsl
ds
stos
cltd
std
sbb
mov
cmp
xor
popf
cs
jmp
icebp
xor
jns
cwtl
push
outsl
inc
ret
pusha
mov
icebp
xchg
arpl
sbb
lods
test
test
or
mov
int
dec
fwait
and
xchg
pop
icebp
pop
mov
js
xchg
xor
mov
movsb
or
fsubrp
sbb
xchg
xor
aad
sbbl
dec
scas
push
and
jns
testb
ds
mov
inc
test
cmc
and
xchg
cwtl
mov
repz
loop
cmpsl
mov
movsl
push
jmp
call
jg
popa
mov
xor
imul
sbb
push
imul
insl
nop
cmpsb
sub
mov
fbstp
shl
pop
cwtl
jge
jge
push
sahf
pop
testb
movsl
movsb
mov
loopne
sarb
clc
mov
ljmp
or
push
adc
in
scas
stc
repz
into
dec
pusha
mov
cltd
jp
fld1
cs
arpl
lds
cmp
pop
add
cmp
dec
lret
jo
mov
add
outsb
out
stos
daa
pop
fildll
aad
pop
sahf
cmp
out
sub
mov
push
jbe
mov
out
xor
sub
mov
and
cs
icebp
mov
inc
xchg
loopne
aaa
mov
call
xchg
mov
mov
addr16
ss
stc
dec
xchg
daa
xchg
add
jp
cmpsb
es
xchg
pop
push
imul
mov
push
inc
cmc
sarb
push
or
cmp
call
push
and
pushl
push
cmpsb
ljmp
add
dec
inc
lds
popf
xchg
out
lods
push
pop
xchg
and
jnp
insl
imul
lret
cs
mov
fsts
test
ret
dec
mov
mov
fidivl
sahf
mov
aam
int
push
push
repnz
mov
mov
fstpl
stos
in
push
aam
mov
mov
dec
in
leave
divb
ret
and
das
pop
adc
fsubr
lods
jmp
std
xchg
xor
add
jmp
or
inc
or
sub
insl
add
sub
mov
cli
xchg
subl
mov
adc
out
mov
icebp
idivb
push
mov
ss
pop
mov
jmp
xor
cmp
mov
lahf
pusha
or
insl
jbe
add
push
gs
shrl
test
adc
adc
add
stos
pop
xchg
inc
jmp
cli
xchg
inc
fldl
and
xchg
addr16
int3
repz
les
sbbb
dec
outsb
sub
mov
push
cs
pop
cmp
mov
ret
imul
cmp
pop
insl
cmp
jecxz
mov
lds
push
adc
leave
popa
add
sub
dec
bt
xchg
mov
mov
jmp
popa
or
adc
andb
mov
jg
push
jge
fimuls
fdiv
and
shr
testl
jecxz
dec
lods
test
fisubrs
arpl
jb
sub
test
push
out
mov
sub
loop
movsl
mov
jmp
lret
leave
testl
or
pushf
jno
pop
popf
lcall
stos
mov
adc
test
pop
add
out
std
movsl
pop
sbb
ror
stc
push
call
mov
outsl
std
mov
and
mov
cmp
fs
movsl
and
or
inc
cmp
mov
mov
addr16
add
setge
aad
mov
mov
push
mov
pusha
xor
xchg
mov
push
jb
xchg
xor
call
jnp
sbb
lret
lods
inc
mov
dec
cli
xchg
mov
sbb
aaa
sub
push
mov
mov
xchg
mov
push
jmp
sarb
dec
push
fbstp
push
test
dec
cmp
mov
ret
sarl
out
pop
mov
dec
mov
repz
sbb
adc
sbb
mov
ret
cld
mov
lret
andb
xchg
pop
leave
sub
push
pop
in
sub
pop
xor
sbb
roll
mov
lcall
mov
leave
or
gs
sub
sub
cld
xchg
jnp
pop
jo
sub
mov
in
cmp
cmp
or
dec
sbb
adc
aas
je
xchg
xor
arpl
mov
mov
leave
push
rolb
std
in
sbb
sub
lcall
sbb
mov
idivb
fldcw
jno
dec
dec
arpl
clc
mov
or
xor
adc
inc
call
xchg
jecxz
aad
ja
sub
cld
fcomi
and
mov
dec
inc
test
push
sbb
mov
aas
or
fimuls
stos
or
mov
sub
cld
int
les
out
test
mov
scas
jle
repnz
in
xchg
mov
addr16
or
aam
xor
sahf
clc
jnp
jg
mov
jge
dec
mov
xchg
pop
negb
mov
push
jle
xchg
pop
insb
xchg
and
pushf
nop
xlat
sbb
sti
jg
cltd
data16
xchg
int3
lcallw
mov
movl
mov
xlat
aaa
xchg
imul
push
pusha
int
mov
push
jg
dec
popa
repz
and
push
add
int
adc
push
in
mov
sar
decl
int3
jecxz
mov
fwait
sub
and
mov
pop
loope
or
mov
xor
pop
mov
add
bt
jle
in
out
lock
insl
rcr
addr16
pop
sar
push
cwtl
jns
sbb
pop
inc
add
push
fldenv
insl
and
cmpsl
mov
lcall
and
sbb
and
enter
or
dec
mov
daa
rcrl
inc
cmpsl
cmp
mov
pop
xor
sbb
add
mov
fistpll
fwait
push
inc
xlat
xor
movsb
ds
pop
fbld
imul
xorl
xchg
int3
jge
sbb
in
lods
inc
sbb
pop
xor
adc
push
ds
or
fisubrl
jno
movsl
fs
mov
out
mov
jmp
out
hlt
addb
cmp
repz
cmp
pop
scas
push
or
ss
and
adc
leave
dec
sbb
jecxz
cmpsl
xchg
hlt
mov
dec
mov
and
sub
inc
adc
cmp
fidivl
notl
mov
cmpsb
out
pop
sub
sti
cmp
fwait
jle
fcoms
dec
lock
arpl
fucomp
sub
jle
popa
push
test
pop
pop
and
hlt
dec
cmp
jns
jae
imull
shl
mov
es
jns
out
pop
scas
or
push
jle
ja
gs
loopne
sub
mov
mov
sbb
enter
add
sarl
pop
popf
jmp
adc
dec
lahf
push
dec
xorl
icebp
pop
leave
pusha
inc
popf
aas
pop
les
lcall
mov
adc
movsb
inc
lods
lock
fcomps
and
adc
jb
mov
out
outsl
fsub
test
mov
outsl
adc
push
dec
pop
testb
add
dec
or
imul
pop
aad
mov
jae
lea
bound
adc
adc
xor
mov
rolb
adc
xchg
out
test
pusha
testl
pop
sbb
pop
addr16
lcall
mov
xor
xlat
ljmp
mov
push
jo
adc
insb
test
dec
lock
xor
cmp
push
fistpl
orl
push
sub
and
call
sbb
jge
or
xchg
data16
push
shlb
dec
scas
inc
mov
fildll
xchg
imul
mov
push
movsl
cltd
pmuludq
jmp
adc
cmp
pop
pop
repz
xor
aaa
mov
sub
push
mov
hlt
xor
xchg
sub
rcrl
add
lret
xchg
sub
mov
repz
dec
xor
jne
xchg
sub
mov
repz
pop
xor
es
sub
dec
mov
lock
xor
cmc
add
mov
add
sbb
push
out
sbb
popa
jmp
shll
negb
and
xor
adc
lret
es
jnp
loope
mov
push
into
in
push
data16
aad
or
jp
inc
mov
shlb
loop
mov
jmp
jg
push
fwait
add
jne
fs
and
jp
sbb
and
inc
popa
loope
push
mov
in
sti
lods
fcmovnbe
mov
cmp
dec
pop
ds
popf
and
test
xor
mov
sub
push
scas
pop
cli
and
clc
addl
aas
stos
xchg
repnz
sub
push
in
les
clc
shrb
or
sub
mov
adc
pop
inc
xchg
cmp
add
pop
repz
aas
mov
roll
mov
mov
sub
push
ljmp
push
in
xlat
aas
mov
insb
clc
bound
push
fdivs
fiadds
jl
push
xor
pop
gs
xchg
add
data16
dec
shrl
jp
stos
in
stc
out
js
nop
sub
aam
sbb
insb
mov
jmp
cmp
lock
repz
cmpsb
mov
mov
add
das
out
test
arpl
fsubrs
inc
jb
dec
shll
jne
pop
into
addl
adc
icebp
jne
push
add
das
xlat
aad
js
popf
xor
pop
fildl
add
sbbb
pop
ljmpw
sbb
dec
scas
lds
into
hlt
push
dec
or
pop
adc
xchg
mov
xchg
and
xchg
add
mov
inc
loope
mov
push
dec
inc
leavew
cli
mov
jne
aas
cmp
dec
enter
jmp
push
jge
sub
mov
loope
or
xchg
rcrb
mov
vsqrtpd
mulb
push
sahf
movsl
dec
push
or
push
add
jmp
jbe
ret
xor
cmp
cmp
test
jne
testl
addr16
sahf
in
stos
inc
lret
push
jecxz
jmp
mov
dec
bound
cltd
push
in
lret
cld
xchg
cmpsl
out
mov
xchg
or
pop
xchg
pop
pop
les
mov
movsl
loop
xchg
rcrb
aad
fs
and
cmc
sti
and
cli
inc
pop
out
mov
in
lds
out
xchg
loopne
dec
adc
xchg
jmp
les
test
nop
cmpsl
and
test
xchg
popa
fsubrl
push
lahf
or
xchg
sbb
push
dec
hlt
push
movsl
and
inc
movsb
adc
pop
xor
jmp
aas
fwait
insl
rol
ret
test
movsb
or
sub
movl
ja
fidivl
fisttpll
leave
fidivl
inc
cmpb
rolb
or
stos
lock
mov
ja
xchg
xor
push
and
inc
cld
push
movsl
addr16
dec
push
push
insb
mov
shl
jne
lea
or
mul
add
add
or
push
imul
cmpsl
xchg
fwait
data16
into
mov
fsubl
leave
jl
ljmp
imul
stos
jmp
sub
sbbb
add
std
sub
xchg
mov
mov
jbe
xorb
nop
mov
jecxz
xor
jmp
push
fisubrs
push
jle
mov
notb
inc
lretw
sbb
dec
sub
std
mov
jo
in
pop
adcl
lock
pop
ljmp
pushf
xor
adc
dec
xor
cmpsb
or
xchg
sub
repz
lds
inc
pop
out
mov
sahf
pop
fimuls
jbe
xor
lock
icebp
fwait
xchg
cwtl
imul
push
decl
push
mov
fidivs
lret
mov
out
add
jge
lods
sahf
in
cli
lret
lret
out
testl
mov
sbb
icebp
xchg
leave
xchg
je
ljmp
xor
mov
jb
inc
xchg
leave
mov
test
sub
pop
shl
push
pop
mov
loopne
rcrl
dec
out
bound
xchg
pushf
repz
push
mov
push
insb
sub
xor
adc
pop
pop
hlt
dec
out
push
sbb
jno
inc
jbe
and
loopne
lea
add
test
popa
int3
pop
fcomp
ret
or
cmpsl
lock
fmuls
cmp
dec
loopne
js
pop
scas
pop
lcall
cmp
jne
pop
cmp
shrl
dec
dec
jp
add
fninit
les
std
andl
cmp
sti
xchg
cli
or
pop
fbld
xor
nop
cmp
push
test
cmpsb
pop
push
sub
ret
sbb
pop
xchg
push
sbb
test
cmpsl
sub
cmpsl
mov
xor
aaa
or
aaa
clc
das
xor
cmc
inc
cli
loop
mov
mov
divl
in
sbb
or
pop
test
sti
rcrl
push
aas
stos
dec
or
inc
add
push
jg
add
shr
xchg
push
dec
jl
adc
out
lahf
les
pop
xchg
inc
mov
lret
lret
cld
xchg
std
in
mov
xchg
jge
lret
or
sahf
sbb
gs
out
and
inc
jo
std
lods
ja
repnz
xchg
and
sub
fldl
jmp
mov
lods
enter
iret
in
mov
sbb
das
in
cmp
prefetch
shl
dec
shlb
inc
mov
jae
sub
mov
dec
cmpsl
fiaddl
mov
mov
cltd
jecxz
inc
push
and
xchg
in
push
lock
mov
fnsave
sahf
in
pop
xchg
inc
or
mov
xchg
scas
addr16
enter
loope
test
cltd
insb
pxor
stos
cmp
cltd
lcall
sbb
lret
lea
das
fs
push
xchg
and
adc
fdivs
pop
mov
or
pop
gs
xchg
orb
cmpsl
adc
sub
xchg
inc
and
sbb
push
jg
add
in
push
push
nop
dec
test
popf
aas
movsl
scas
cmp
jmp
cmp
enter
and
mov
and
or
sbb
movsl
pop
sbb
xchg
jnp,pn
mov
jl
ja
subl
xor
dec
scas
jb
mov
fcomi
popf
icebp
xchg
push
sub
sbb
xor
push
pop
mov
add
pusha
repnz
push
enter
mov
mov
cwtl
push
sbb
push
mov
outsb
adc
lods
leave
and
pusha
inc
data16
daa
or
mov
sub
pop
in
pop
rcrb
dec
push
in
hlt
xchg
pop
scas
pmaddwd
popa
adc
or
sub
bound
dec
cmpsb
insl
cmp
push
data16
cmp
push
inc
jmp
inc
inc
xlat
data16
sbb
adc
xor
inc
aam
cli
mov
xor
xor
pop
jo
mov
arpl
cmp
es
sub
push
shll
mov
xorb
rclb
dec
and
icebp
cmpsl
sub
int
push
test
fimull
mov
ljmp
and
out
data16
lahf
jbe
jbe
sbb
lahf
aam
dec
adc
jnp
push
pop
add
add
inc
add
das
fwait
mov
testb
jmp
shll
push
and
stc
xchg
lds
cmpsb
cmp
popf
loope
pop
adc
aaa
subb
fstpt
lahf
popa
out
and
fwait
cld
lret
jo
cltd
imul
push
xchg
rcll
or
ret
dec
jae
jecxz
mov
out
jge
mov
es
and
inc
add
test
ja
xor
rcrl
adc
mov
mov
adc
jbe
nop
dec
xchg
dec
push
stos
in
call
notb
sti
scas
cmp
push
test
lea
loop
enter
inc
lock
sti
mov
adc
ret
xchg
mov
mov
dec
iret
popf
test
or
shrb
cmpl
mov
sbb
les
loope
imul
mov
adc
shl
mov
andl
lret
sbb
mov
mov
mov
push
cmp
xchg
mov
xchg
inc
mov
addr16
xchg
mov
shll
out
ret
pop
sbb
ss
jg
loope
jne
out
rclb
les
jge
jecxz
push
mov
add
and
test
pop
mov
enter
pop
adcb
daa
and
call
mov
inc
mov
insl
xchg
decb
movsl
in
test
rclb
cmp
in
xchg
scas
scas
movsb
mov
jo
clc
sahf
aad
adc
movsb
jno
test
mov
sarl
xor
hlt
lods
test
rolb
add
xlat
cmc
aaa
and
faddl
test
or
sti
ja
and
sahf
xchg
lods
cwtl
hlt
mov
mov
adc
push
in
scas
sbb
jnp
mov
ret
into
jl
sbb
movsb
adc
mov
daa
cmc
add
cmp
xlat
hlt
test
mov
fdivl
xor
adc
sti
insb
ret
sbb
pop
imul
mov
or
iret
xor
inc
outsb
out
jge
in
mov
aad
mov
inc
adc
int
or
mov
imul
jns
fwait
stos
ja
test
cmpps
int3
das
inc
ja
cs
mov
jle
jl
rol
inc
dec
jl
clc
ffreep
aad
es
popa
sbb
in
cltd
add
jo
xor
inc
outsb
push
add
xchg
jno
insl
mov
pushf
data16
xor
out
out
jge
inc
push
loop
pop
out
or
inc
sbb
lock
enter
mov
icebp
xchg
movsl
push
sbb
int
xchg
jecxz
ret
mov
jg
dec
or
out
xor
xor
pop
and
adc
or
pop
out
xchg
mov
inc
insb
stos
std
shrl
mov
sahf
icebp
int
cmp
in
inc
sbb
adc
fsubl
pop
in
adc
cltd
sub
aam
sahf
and
testb
adcl
out
addl
xchg
cmp
rcrb
mov
or
mov
cmp
xchg
cmpsb
mov
ror
pop
or
leave
push
mov
xlat
adc
cltd
lods
or
add
lcall
int
xchg
in
jb
lds
fstpl
sbb
mov
lods
sub
jbe
jns
pop
and
cmp
xchg
leave
je
daa
aaa
int
call
or
and
mov
mov
leave
pop
addr16
int
or
and
or
adcb
sub
popa
leave
daa
lea
das
dec
lret
lret
mov
mov
fiaddl
fldcw
cmpb
lea
or
or
add
inc
loop
or
push
clc
and
and
je
cwtl
mov
dec
call
add
xor
testl
nop
enter
xchg
add
jmp
and
nop
sti
lock
andl
pop
fs
cmp
clc
movsl
or
lods
cmp
lods
insb
rclb
pop
cltd
std
pop
mov
xor
ret
hlt
out
pushf
cltd
cmp
pop
mov
ss
notl
ja
sub
jge
adc
in
cmpl
push
stos
iret
das
in
idivb
cld
add
adc
bound
xlat
mov
cwtl
mov
adc
jp
ret
clc
mov
movb
dec
lods
repnz
adc
inc
xlat
xchg
es
stos
leave
f2xm1
loop
cmp
or
lea
repnz
push
aaa
push
in
pop
jecxz
lods
or
push
stos
lahf
fsubl
sti
rcrl
cvtdq2ps
push
in
inc
dec
loop
lea
pop
sbbb
jnp
xchg
sbb
cmpsb
adc
sti
and
das
push
hlt
lret
popa
inc
sbb
inc
arpl
hlt
icebp
fisubrs
mov
fsubrs
mov
xlat
testb
insl
scas
sub
aaa
aad
stc
mov
rcrl
add
pop
cltd
shrl
not
sbbb
enter
add
lret
inc
pop
dec
aam
subb
pusha
js
cld
xchg
test
cmc
aas
pop
add
cmp
cwtl
xor
xchg
xchg
out
lcall
inc
sti
push
cld
lahf
inc
push
cld
cwtl
xor
push
pusha
daa
scas
scas
cld
outsb
add
in
in
inc
mov
and
out
ljmp
out
cmp
sub
inc
cmp
jno
insl
push
mov
mov
jle
scas
mov
fnstcw
mov
jno
mov
sub
cwtl
sbb
loope,pt
gs
test
adcb
movsl
xor
out
jo
xor
jo
pop
daa
xor
stc
sub
popf
jg
inc
cmc
sbb
in
rcll
mov
push
push
mov
stos
jbe
or
mov
xchg
and
fnsave
adc
sub
or
jge
mov
inc
inc
jnp
inc
push
dec
test
lret
jb
xchg
push
sub
daa
pushf
fs
lcall
in
xchg
jg
inc
pop
mov
cmp
cwtl
sti
mov
rcrl
sbbl
mov
mov
sahf
fcoml
pop
push
lods
add
movsl
jnp
lods
xlat
ret
ret
andb
test
in
jmp
and
jns
mov
dec
inc
addr16
pop
sub
popa
aad
inc
lcall
sub
mov
dec
inc
pop
mov
add
sbb
xlat
mov
loop
ret
das
enter
ljmp
insl
jge
and
add
mov
jne
dec
xchg
push
jne
adc
push
insl
pop
jae
cli
in
fneni(8087
es
scas
cmp
xchg
stos
add
les
insl
cmc
sbb
inc
mov
adc
mov
or
xchg
add
or
shrl
in
fidivs
test
inc
xchg
in
push
jbe
lods
xchg
and
popf
or
push
xlat
movb
insl
shll
mov
mov
in
ret
push
mulb
jb
pop
dec
and
inc
repnz
dec
popf
lods
lret
out
test
into
and
call
and
lret
sarb
sbb
mov
mov
arpl
hlt
lahf
orl
out
out
sub
sbb
mov
pop
or
xchg
dec
iret
test
xor
dec
iret
lods
cmp
sbb
xchg
adc
xchg
jbe
pop
mov
cmc
sub
fadds
int3
lret
dec
pop
pushw
fs
and
xchg
stc
lods
dec
incl
mov
orb
rcrb
int
daa
xchg
arpl
iret
mov
in
test
add
xor
xor
lea
aas
call
orb
mov
cmpsb
dec
pop
xchg
testl
cmp
adc
out
and
push
or
mov
out
jmp
pusha
add
mov
push
gs
movl
cli
aam
jbe
xchg
inc
fcmovnb
jl
lock
into
sub
push
call
push
popa
ljmp
inc
icebp
mov
sub
push
icebp
sbb
subl
lcall
imul
cs
lods
lods
jmp
clc
sub
push
test
stos
in
xchg
lcall
insl
fdivs
push
xchg
sub
xchg
lods
mov
aad
lds
dec
xchg
test
push
lcall
in
kmovw
div
dec
cmp
xchg
out
push
add
mov
shlb
pop
sub
inc
pushf
loop
hlt
add
dec
dec
sti
lea
push
or
add
mov
cmp
and
inc
lods
add
adc
xlat
mov
cmpsl
out
push
inc
inc
jp
jge
test
sbb
roll
aaa
pop
daa
sub
repz
push
adc
jmp
push
aaa
jmp
mov
inc
enter
sti
xchg
pop
rcrb
sub
jp
ja
xor
jmp
mov
cs
xor
arpl
sub
fwait
aam
jmp
lret
adc
enter
imul
ret
addr16
push
adc
icebp
cmp
jle
xchg
mov
lret
into
sub
movl
std
or
aad
scas
adc
mov
and
push
cld
stos
mov
sbb
mov
sbb
adc
dec
push
out
mov
pop
add
shlb
cltd
std
jb
jp
push
mov
dec
fxch
or
lea
int3
fsubr
repnz
xchg
movsb
sbb
xchg
jno
adc
imul
jge
loop
sbb
cld
sub
sub
std
nop
pop
add
pop
mov
adc
and
xchg
insl
mov
inc
lcall
adc
test
mov
es
stc
movsl
cmp
inc
cwtl
lcall
inc
mov
aad
cli
and
adc
cmpsl
dec
ss
dec
lahf
insb
xlat
add
repz
sbb
repnz
xor
lret
lret
pop
mov
pop
stos
ret
outsb
jmp
adc
xchg
addr16
nop
mov
or
sarb
ds
stos
pop
or
iret
shll
test
outsl
dec
inc
imul
aad
out
or
addb
fs
push
je
xlat
mov
das
cmp
sbb
xor
sub
mov
mov
inc
dec
ret
mov
inc
dec
stos
mov
xor
lret
aas
sti
pop
pop
adc
mov
sbb
in
adc
xor
pop
repnz
das
das
clc
sarl
add
cmp
addr16
pop
ret
mov
mov
adc
lret
dec
clc
lret
fsts
xor
xchg
call
xor
sbbb
push
sti
test
stos
dec
fistps
subl
lods
sub
push
aam
sbb
aad
mov
nop
imul
pop
mov
push
int
les
sar
dec
enter
push
icebp
aas
aam
fisttps
mov
icebp
cs
test
sub
add
push
pop
test
jl
push
ss
xorl
imull
imul
repnz
aad
shrl
lods
cmpsb
push
call
clc
xchg
outsl
cli
gs
rorl
jne
xchg
hlt
mov
mov
jae
fcmovnu
outsl
roll
mov
mov
inc
insl
xor
mov
and
or
dec
popf
and
sti
xor
pop
sbb
inc
pop
cmp
in
xchg
xchg
mov
ss
sub
loop
pop
test
or
icebp
mov
mov
cmp
jl
sarl
inc
inc
fs
push
pop
in
inc
mov
mov
mov
sbb
loope
shrb
int3
adc
mov
pop
xchg
sbb
movsb
test
push
sbb
inc
xor
xchg
jo
es
jne
mov
lock
sbb
push
pop
and
and
aas
cmp
dec
lods
cs
outsl
jge
ja
notb
lds
lret
aaa
jmp
mov
xchg
mov
or
outsl
out
inc
sbb
jno
lods
xchg
mov
sbb
mov
fwait
out
movsb
sahf
in
orl
or
decb
jne
push
jle
mov
adc
pop
bound
pop
pusha
push
jmp
out
ss
outsl
js
adc
nop
add
push
fnstsw
push
jmp
inc
pop
push
sbb
push
lock
inc
add
sub
inc
push
pushf
push
dec
dec
ja
idivb
dec
into
mov
xor
or
dec
xlat
inc
push
ja
push
cmp
sub
mov
inc
fsubrl
push
lea
and
notl
or
mov
pop
out
and
mov
shll
pop
shrl
mov
stos
push
loope
aaa
sbb
push
ljmp
sub
or
leave
int3
mov
lea
or
xchg
sbb
jns
mov
shrb
iret
pop
insb
inc
push
fists
movsl
xor
adc
inc
push
inc
push
sub
pop
test
jno
dec
mov
and
test
test
add
add
mov
fistpl
xor
inc
lea
xchg
add
or
mov
call
rcrl
jle
orl
push
test
fdivs
inc
xchg
pop
and
iret
mov
or
jno
cmpsb
icebp
or
mov
mov
aas
add
lea
jl
inc
scas
mov
out
adc
jne
popf
sarb
push
mov
push
dec
rcr
xchg
and
adc
dec
jl
mov
inc
enter
push
xchg
xor
fdivs
pop
adc
bound
cmpsl
pop
neg
sbb
or
jge
imul
sub
cmp
lcall
and
add
jmp
in
stc
inc
icebp
pop
lret
lret
cwtl
pop
movsl
push
lret
add
inc
push
push
out
ret
pop
leave
gs
mov
loopne
mov
inc
pop
insb
aaa
enter
xchg
and
in
and
xchg
xchg
pop
mov
ret
imul
xchg
ss
outsb
dec
dec
call
dec
xor
in
mov
or
shlb
mov
popf
enter
xchg
mov
sub
xor
cli
jp
paddq
cli
nop
call
add
mov
rcrb
cmp
es
in
jbe
dec
aas
clc
shlb
jge
aas
xchg
lock
cmp
xorb
and
ljmp
out
push
and
dec
imul
or
leave
pop
push
test
inc
ret
test
inc
pop
mul
cmp
cmp
ret
std
xchg
cmc
test
push
pop
pop
cmp
ret
sbb
push
jle
cmp
jo
jecxz
aas
ljmp
rorl
mov
lcall
jle
imull
jno
arpl
push
cmp
pop
scas
adc
aam
fnstenv
sub
sbbl
or
lret
mov
faddp
push
adc
iret
and
push
inc
lock
or
pop
dec
xchg
aas
movsb
pop
mov
pusha
sbb
rorl
addr16
pop
and
je
iret
data16
inc
mov
in
test
movsb
aad
or
cli
je
sub
xchg
add
hlt
jnp
out
or
in
imul
data16
cmpsl
add
push
push
and
rorl
lret
xor
mov
xor
fistl
push
mov
fnstenv
call
jo
mov
negl
mov
mov
ret
ss
jecxz
std
shrb
jae
pusha
repz
sarb
lock
repz
orb
mov
std
xchg
jbe
and
fdivrl
push
mov
fdivl
mov
mov
scas
sub
xor
fs
lea
mov
mov
jp
loopne
aam
loop
cwtl
pop
xor
xchg
pop
mov
mov
jle
mov
or
sarl
into
mov
pop
jle
cld
xchg
inc
lahf
loop
shll
mov
cmc
sbb
movsb
cmp
fdiv
mov
and
inc
test
jne
fdivl
xchg
jns
lods
pop
icebp
fst
add
sub
pop
loop
mov
add
or
cmp
push
jg
fnsave
fnsave
sti
xchg
jbe
out
sub
add
xchg
xor
mov
scas
andl
testb
add
lods
xor
pusha
mov
aas
cmpsb
test
mov
pop
stc
ja
add
pop
lock
xor
out
xchg
mov
into
mov
xlat
icebp
mov
outsl
push
xchg
push
mov
push
mov
and
jno
inc
cmpsl
push
sbb
aaa
aad
pop
or
push
in
push
sub
or
push
in
mov
jno
sti
mov
les
lea
test
mov
and
push
mov
inc
xor
fnstenv
inc
add
adcb
xlat
jmp
iret
pushw
cmp
in
test
montmul
cmpsb
rorl
les
loopne
xchg
xor
cmp
xor
pop
bound
dec
loopne
fldcw
mov
sub
ds
sub
popa
sbbb
mov
imul
sarb
ret
pop
push
jns
fisubrl
lret
montmul
cmpsb
add
out
stc
and
add
test
insl
lahf
int3
outsl
push
cli
mov
sbb
inc
insl
pusha
negl
mov
testl
cmp
ret
in
mov
cmp
fdivrp
adc
lock
pop
or
mov
test
mov
sbb
scas
push
testl
stos
dec
xchg
sub
stos
inc
sub
and
fdivl
dec
and
pop
xchg
sub
subl
or
insl
insl
xchg
sub
jl
mov
outsb
insb
ljmp
jle
lahf
scas
cmp
push
inc
fldenv
jle
scas
scas
cmp
repz
jle
jne
cmp
lds
jne
pop
test
jno
arpl
popa
cmpsl
mov
loop
stos
xor
imul
jp
jno
shll
jg
xchg
scas
mov
into
gs
jne
test
bnd
iret
stos
sub
xchg
icebp
ja
jno
xor
fs
aaa
lods
mov
inc
cmp
mov
sti
xchg
ljmp
cwtl
subb
mov
sbb
mov
addb
in
imul
lcall
sbb
imul
stos
push
pushf
xor
fld
pop
clts
ljmp
push
inc
fldl
mov
and
xor
inc
push
push
dec
loope
jae
sbb
lret
add
xor
and
movsb
cmp
pop
icebp
jae
xchg
sub
jne
gs
sub
mov
test
jae
xor
jp
push
stos
xchg
stos
inc
leave
jb
xlat
mov
jns
das
lods
xchg
xchg
sub
ja
shll
xorb
mov
push
movsl
ret
lods
popf
pop
es
mov
arpl
xchg
pop
ds
mov
ret
mov
pop
cmp
nop
nop
mov
lds
mov
sub
mov
shll
xchg
pop
xor
mov
push
leave
pop
push
lods
mov
mov
xchg
movsb
cmp
fwait
sahf
xor
mov
iret
adcl
sbb
adcl
inc
lahf
ret
cltd
sbb
mov
das
nop
popf
sbb
mov
imul
mov
and
mov
adc
insl
add
ds
insb
push
stos
inc
xchg
sbb
or
xor
popa
mov
xchg
adc
in
insb
add
and
pop
push
int3
arpl
stos
ljmp
or
nop
ds
or
and
jbe
hlt
stc
mov
das
adc
leave
pusha
xchg
mov
fdivs
daa
mov
inc
dec
jns
jp
sahf
xor
lret
imul
pop
add
jbe
jns
mov
leave
pusha
out
cmp
pop
add
adc
aas
nop
lea
inc
out
aam
insb
add
cmp
repz
fnsave
jne
stos
mov
inc
jmp
or
mov
push
add
mov
ret
clc
std
and
dec
dec
out
jp
mov
lahf
pushf
push
lret
add
in
inc
fistpl
push
push
out
cmp
add
mov
rclb
mov
jbe
sub
pop
pop
xchg
xchg
jb
frstor
int3
outsb
add
aaa
pop
lahf
ss
pop
adc
pushf
mov
ret
pop
out
hlt
pop
and
dec
loope
inc
in
je
sbb
mov
lods
ret
fucomp
and
movsl
daa
aas
xor
je
xchg
iret
enterw
jecxz
push
sbb
xchg
cs
xor
f2xm1
jg
sbb
mov
dec
in
loopne
jl
add
aam
push
cmp
test
jp
loope
mov
xor
pusha
mov
xchg
je
repz
ret
hlt
or
cmp
pop
add
nop
push
cld
xchg
out
stc
adc
or
cmp
je
push
mov
push
fbld
testl
jae
cld
xchg
lahf
pop
scas
int3
mov
cltd
xor
testb
fs
push
out
mov
add
cltd
inc
xchg
sub
push
call
shrb
cmp
mov
ret
sub
test
inc
push
mov
xor
and
lods
push
jmp
dec
lods
inc
jp
loop
and
lret
inc
xchg
jp
mov
pop
lds
jae
or
xchg
lods
jo
ja
push
inc
test
test
inc
divl
sbb
test
xlat
inc
lock
sbb
int3
arpl
popf
sbb
xchg
mov
jmp
movsl
scas
outsl
mov
ffreep
jp
cmp
dec
sarl
push
das
dec
das
imul
ds
xor
cmpsb
cmp
hlt
ds
and
aad
imul
mov
sbb
inc
incl
sbb
mov
cmp
push
aad
test
push
mov
pushf
xchg
xchg
popf
mov
adc
pop
jne
outsb
mov
xchg
adc
sub
sbbb
sbb
pop
fwait
cwtl
imull
and
cmp
and
pushf
or
jg
pushf
jg
xor
xchg
lahf
xchg
mov
jbe
inc
jns
enter
cmp
dec
mov
fidivrs
adc
jmp
fdiv
ss
fnsave
push
mov
imul
mov
or
jae
rolb
cmp
lds
mov
out
jnp
test
jp
lahf
add
imul
sbb
scas
add
cwtl
ljmp
cmpsb
or
push
mov
sbb
cli
insl
xchg
push
rolb
sti
dec
sbb
inc
mov
insb
inc
popa
lods
push
sub
cmpb
xchg
lahf
cmpsb
lea
or
sbb
ror
mov
std
loop
in
hlt
fisttps
lret
icebp
and
mov
into
ds
adc
cmpsb
xchg
adc
and
push
call
push
dec
and
push
push
movb
and
jg
sub
jbe
xchg
sub
sub
xchg
imul
repnz
or
pop
add
icebp
insb
inc
leave
cmp
or
fdivs
push
roll
js
mov
add
cwtl
inc
dec
lahf
push
push
pop
int3
jno
ja
pop
and
imul
inc
jle
cmp
sub
rorb
adc
add
jbe
scas
popw
or
or
testb
inc
and
push
cmc
xor
es
sti
mov
movsb
push
sbb
scas
mov
lret
push
mov
in
add
aas
jmp
dec
in
fidivs
std
ds
jae
mov
rcll
scas
add
pusha
pushf
movsl
and
stc
test
jo
lcall
out
inc
loop
sub
cmp
loopne
out
jnp
int
test
push
add
in
and
icebp
jge
sbb
jnp
and
test
out
out
movsl
adc
add
add
mov
frstor
mov
faddl
out
pop
stos
mov
cmp
jnp
pop
out
push
push
xchg
imul
xchg
jno
inc
mov
pusha
lock
leave
and
mov
add
cltd
fsubrs
push
daa
jmp
fsubl
dec
lds
loop
inc
mov
sub
out
outsl
inc
mov
adc
push
stos
test
dec
mov
mov
cmp
sti
sarb
shll
inc
lret
mov
aaa
neg
repz
mov
scas
or
adc
pop
mov
pushf
repnz
adc
out
adcl
dec
lahf
xchg
cmp
adc
and
addr16
aas
adc
idivb
movl
cmp
pop
mov
add
cmp
pop
xor
mov
testb
xlat
xchg
jno
data16
cmp
out
pop
mov
test
test
int
jo
push
shrd
fwait
mov
outsb
pop
rorb
cwtl
inc
dec
cmp
push
popa
pop
ljmp
adc
push
pop
popf
testb
test
fwait
jns
xor
push
enter
cmp
sbb
add
lret
lock
movsb
ds
aaa
push
cwtl
dec
mov
mov
outsl
jo
cmp
gs
std
cmpsl
cmp
cmp
icebp
jne
mov
inc
cmpsl
int
mov
mov
in
pop
mov
sbb
push
filds
adc
cmpsb
fistl
loope
scas
nop
daa
loope
sbb
lds
sti
xor
in
adc
xchg
or
data16
jae
dec
rorl
cmp
mov
mov
cld
mov
cmpl
loopne
mov
pop
cmp
pop
in
insl
test
out
xor
mov
adc
in
pop
xor
mov
aaa
inc
rolb
test
xor
test
jg
scas
mov
testl
adc
jno
testl
xchg
or
mov
inc
into
fldt
or
out
fiaddl
jbe
fists
or
pushf
sti
and
rolb
dec
fdivrl
rorb
sub
jb
mov
xor
jge
or
jl
pop
and
pop
clc
xchg
xchg
out
mov
jge
mov
push
jle
rolb
or
out
cmp
sbb
push
add
ret
stc
xor
cmp
scas
das
std
das
jp
shld
push
imul
add
mov
add
insl
mov
in
push
push
push
movsb
fidivs
inc
dec
shlb
cmp
sub
out
mov
cli
add
cmp
pop
ror
jbe
sahf
inc
leave
inc
mov
pusha
stos
pop
repnz
andl
mov
cmp
cmc
sbb
inc
fiaddl
imul
sti
xor
cli
outsl
push
or
push
sub
mov
xor
daa
cwtl
jg
pop
cmp
fisttpll
fwait
mov
adc
xor
jne
xchg
inc
aas
je
xor
jg
push
dec
jnp
divb
pop
mov
mov
jmp
lods
movsb
pop
and
adc
test
jb
jg
jo
punpckhwd
mov
movsb
sbbb
rcl
imul
repnz
enter
hlt
into
sbb
fnstsw
cld
and
stos
pushf
cmp
in
cmp
xor
push
lret
ja
data16
inc
mov
addr16
mov
je
pop
int
cmp
scas
mov
inc
ret
push
out
mov
daa
clc
xor
sbb
push
mov
je
lods
pop
shll
lahf
xchg
cltd
inc
lret
gs
fnstcw
enter
fwait
mov
repz
flds
shr
lock
fsubl
jmp
in
adc
ss
rorb
mov
ds
xchg
fbstp
movsb
and
stc
out
pushl
fisttpll
leave
dec
cmp
test
loope
mov
push
cmp
insb
mov
xchg
add
sbb
test
xor
jae
jmp
sub
mov
push
js
mov
xchg
int3
and
mov
adc
jp
ret
test
shll
in
or
jnp
add
out
xorb
fs
cmp
popl
inc
lods
dec
mov
push
mov
lret
and
popa
das
loope
in
test
inc
push
loope
push
pop
and
bound
std
xchg
pop
orl
sub
iret
outsl
jnp
loop
pusha
xor
cmp
test
pop
sub
jo
xchg
movsl
mov
mov
cltd
dec
roll
xchg
inc
test
lock
mov
adc
adcb
cmpsl
sbb
jge
xchg
jge
dec
dec
rcll
dec
cmpsb
jne
out
aaa
in
pop
les
mov
sbb
in
xlat
outsb
or
jg
lret
cs
sbb
adc
mov
pop
test
lret
fldenv
pop
in
jle
leave
pop
inc
mov
jecxz
pop
scas
mov
sub
fadds
dec
in
in
push
mov
fiaddl
push
mov
mov
xchg
scas
xchg
pushf
xchg
pop
jg
mov
out
mov
mov
cmpsb
repnz
out
jnp
sbb
cltd
pop
bnd
movsb
roll
negl
cmpsl
and
and
out
dec
mov
mov
push
call
mov
mov
pop
jo
loopne
sbb
xchg
iret
push
xor
in
sbb
push
cld
xor
out
lret
cmp
cmp
fmuls
add
mov
mov
aam
add
lahf
inc
add
mov
cmp
mov
addr16
arpl
lea
mov
pop
fimuls
xchg
mov
test
out
sarb
out
jbe
pushf
movsb
fimull
adc
scas
fsubrl
loop
stos
cwtl
xor
or
and
fildl
xchg
outsl
sarb
xor
leave
add
faddl
add
or
adc
push
call
or
insb
xor
enter
std
arpl
inc
fstl
pop
and
cmp
jmp
loopne
hlt
sub
dec
cld
push
cmc
mov
sbb
push
mov
sbb
mov
fdivrl
push
into
sbb
or
or
out
xor
adc
cmp
mov
notl
in
dec
lock
jp
ja
inc
add
pop
and
mov
test
push
dec
call
push
stos
pop
popf
sub
js
xchg
popl
add
xor
inc
mov
push
push
iret
les
test
hlt
and
jge
sbb
sbb
outsl
lcall
push
cmpsl
pop
pop
push
mov
push
scas
jne
or
lods
sub
push
movsb
add
mov
repz
in
pop
rcll
rcl
cmp
mov
in
push
adc
jae
sti
inc
repz
jg
dec
adc
push
cmpsl
inc
fcoml
jmp
test
inc
sahf
mov
mov
xchg
mov
cli
pop
cmc
jl
mov
in
insl
push
enter
mov
mov
pop
repz
pop
cmp
out
mov
outsb
mov
loope
imul
and
cmp
shrb
or
xchg
cmp
in
pop
jecxz
pop
shl
test
sub
aam
pop
add
clc
addl
shl
repz
into
adc
jecxz
add
xor
sbbl
jno
xchg
outsb
sub
incb
inc
lret
add
mov
rolb
or
mov
mov
in
aas
insb
lods
mov
flds
add
lods
inc
fsubrp
inc
mov
sahf
les
fcompl
inc
fimull
or
imul
adc
rcrl
pop
repz
mov
lea
icebp
sub
dec
mov
jne
pop
icebp
lcall
ret
or
sub
rclb
inc
mov
inc
leave
lds
mov
jnp
inc
adc
popf
cmp
sub
mov
pop
push
imul
lcall
pusha
jno
not
orl
mov
push
sub
sbb
fmuls
xchg
jl
lret
xchg
jp
add
xor
lcall
iret
fwait
mov
xor
jae
insb
add
or
push
sahf
jl
sbb
scas
pop
mov
xlat
insb
push
shl
ds
scas
roll
dec
mov
dec
cmpsb
mov
dec
xchg
decb
xchg
bound
mov
lds
sbb
mov
jmp
jb
or
mov
cmp
arpl
dec
dec
outsb
add
dec
cltd
cltd
mov
inc
add
push
mov
xor
cmp
jns
or
jp
repnz
cltd
shrb
int
mov
jg
lret
mov
nop
adc
dec
mov
add
data16
inc
jecxz
lret
mov
sub
cmp
inc
int3
jl
or
inc
test
inc
add
js
pop
shl
xor
std
repnz
sbb
je
and
xor
addb
jbe
mov
popa
negl
adc
xchg
inc
fwait
xchg
mov
sub
jg
dec
lret
xchg
xor
sbb
sarl
fisubl
xor
cmp
dec
arpl
sub
add
in
mov
cld
pop
xchg
fsubl
test
add
loop
popa
movsb
rorl
rcr
fmull
fxch
cmp
test
in
es
fcoms
adc
stc
push
mov
add
push
mov
sbb
bound
and
popa
pop
adc
rcrl
sbb
xor
in
ss
test
punpcklbw
lods
sbbl
icebp
or
ljmp
imul
mov
adc
xchg
popa
stc
and
add
test
lahf
in
sub
push
sahf
mov
adc
stos
outsb
lock
jo
out
xor
pop
cmc
mov
cmp
mov
jmp
pop
enter
fnstsw
fistpll
add
mov
stc
neg
out
inc
fsubs
stos
pop
ljmp
dec
jle
add
mov
call
lods
xchg
lods
adc
lods
mov
sbb
test
ljmp
fimuls
mov
sbb
ja
mov
push
sbb
stos
jle
scas
dec
out
or
incb
ffree
call
testb
shrl
mov
lcall
std
jl
mov
cli
into
sbb
sub
add
push
out
push
lret
popf
outsl
xor
sub
jbe
fmuls
dec
cltd
sbbb
push
dec
push
das
sarb
pop
mov
push
cwtl
jg,pn
pusha
lock
arpl
orl
adc
xlat
pop
iret
jecxz
pop
jmp
test
and
xchg
add
or
xchg
ja
les
stos
ja
pusha
mov
xchg
and
jmp
in
jo
mov
sub
in
sub
jo
sbb
pop
and
mov
add
pop
arpl
inc
dec
in
xor
adc
add
sbb
mov
dec
mov
xchg
lret
or
adc
cli
add
call
add
clc
mov
ljmp
push
shr
xor
test
cld
pop
in
sbb
out
in
mov
sub
adc
ss
xlat
mov
sbb
jl
nop
repnz
push
mov
mov
gs
dec
sub
inc
nop
push
xor
outsb
push
fwait
jp
sub
push
je
xchg
pop
mov
ret
call
mov
pop
movsl
out
les
or
xchg
adc
sbb
and
testl
out
jnp
push
mov
and
cld
adc
jmp
aam
sbb
fidivs
xor
cmp
lods
fs
xor
and
out
mov
lcall
mov
das
adc
xchg
jl
mov
mov
xchg
xchg
push
lret
fwait
jno
xchg
lret
clc
inc
ljmp
push
insb
cmp
jg
add
mov
adc
in
pop
add
mov
ret
mov
and
jmp
and
loope,pt
xchg
fidivs
adc
in
sub
sbb
sub
or
out
or
fmuls
xorl
pop
out
fdivl
mov
xor
mov
inc
sti
dec
addr16
xchg
sub
dec
pop
xchg
test
or
xchg
pop
gs
inc
xchg
push
sub
and
push
cmp
or
hlt
sbb
addr16
and
xor
lret
push
xchg
and
inc
dec
enter
inc
lods
pop
cmp
mov
cmpb
xchg
xchg
int3
jne
loopne
lret
mov
adc
ret
jle
mov
fdivl
sbb
cmp
arpl
rcrl
rcll
xchg
inc
adc
xchg
mov
pop
jb
xchg
nop
pop
xchg
icebp
ss
dec
les
out
xor
push
mov
add
inc
xchg
mov
out
xor
sub
mov
fcmove
popa
stos
aaa
lock
test
fsubrl
mov
jmp
jbe
adc
popf
add
xor
loop
dec
shr
push
iret
lret
shll
mov
add
dec
es
cmovne
lock
push
mov
out
pop
into
lret
mov
mov
fdivl
fcmovnbe
or
scas
rolb
lock
jp
movsl
xor
adc
sahf
xor
xor
xchg
pop
insb
scas
lods
repnz
ss
and
xlat
mov
sbb
mov
sub
or
ds
in
xor
lahf
fs
into
dec
into
inc
push
int3
aas
adc
fistpl
xor
mov
push
xor
sub
mov
adc
mov
sub
arpl
jmp
rcrb
xchg
jnp
ds
aas
xchg
movsl
bound
add
jp
jb
test
jae
fs
js
pop
cs
movsl
jnp
leave
imul
repnz
cmp
sbb
push
add
out
cmpsl
mov
mov
cmc
divb
sub
push
lahf
mov
in
daa
cs
es
xor
adc
dec
jns
dec
xchg
pop
xchg
mov
lods
outsl
xchg
inc
insl
add
mov
fisubrl
mov
stos
pop
cmp
aad
fnstenv
pop
cmp
out
std
pop
loope
dec
iret
mov
out
dec
fimull
lahf
lea
pop
cmpsb
cmp
add
test
sbb
dec
mov
orl
call
lret
aad
dec
jecxz
mov
xor
mov
cmpsb
jae
adc
out
psrld
nop
dec
fdiv
ss
pop
jnp
aas
int
pop
xor
mov
push
aas
into
ja
divl
int
fbld
jmp
fcmovnbe
dec
loope
ss
add
aaa
mov
call
add
push
sbb
mov
jmp
push
mov
popa
test
loop
insb
jecxz
push
sarb
cmpsb
imul
or
outsb
cmpl
icebp
cmp
mov
cmp
pop
and
xchg
mov
or
pop
ret
cmpsb
es
inc
and
stos
jne
cld
pop
scas
lret
pop
xchg
jmp
loopne
mov
lahf
lods
adc
nop
stos
lods
syscall
add
jge
xlat
test
pop
adc
dec
out
xor
inc
sahf
outsb
cmp
dec
pushf
xchg
sbb
out
push
sahf
out
pop
xchg
lret
add
push
cltd
mov
aad
jmp
inc
sbb
jno
cmp
enter
in
movsb
subb
adcb
out
jge
daa
cmp
sarl
xchg
imul
cs
cwtl
jmp
cmp
lret
lods
rclb
loope
cmpsl
mov
mov
int3
ret
loope
inc
leave
jnp
pop
mov
lods
sbbl
int
jnp
mov
movsl
arpl
pushf
stc
int
xchg
adc
mov
iret
xchg
cmpb
popf
sbb
xchg
addr16
or
and
fiaddl
divb
jns
cmpsl
ds
inc
and
xchg
js
jo
push
ss
faddl
outsb
cli
aas
cmp
lea
outsb
loope
popa
push
xchg
jle
sbbb
jo
ja
in
mov
sbb
ss
and
stos
mov
sub
jmp
test
add
xor
test
call
jno
inc
shrl
sub
mov
in
adc
in
js
inc
pop
lret
xlat
push
lods
orl
mov
add
mov
mov
test
mov
clc
adc
pop
inc
mov
mov
xchg
adc
dec
dec
orl
push
shlb
mov
jg
pushf
xchg
mov
je
fmull
dec
push
lods
ja
stc
inc
ret
fnstenv
fistpl
insl
mov
lods
jl
adc
jo
mov
ljmp
or
mull
pop
mov
xchg
aas
sub
jnp
xchg
mov
and
jecxz
xchg
insl
add
xchg
push
sbb
lret
xchg
xor
pop
ret
mov
repz
mov
mov
ret
push
cmp
sbb
dec
shrb
jo
mov
xchg
mov
addb
imul
hlt
push
addb
mov
adc
add
mov
sub
jp
jae
nop
out
sbb
iret
movsl
cmp
jp
das
dec
stc
pop
rol
leave
popa
pop
in
lret
lds
sub
loope
sbb
ret
adc
int
xchg
aaa
xor
je,pn
push
sarb
in
pop
jnp
lock
ss
jnp
adc
mov
sbb
aad
mov
in
roll
imul
aad
fcomps
xchg
fidivl
in
clc
dec
mov
and
dec
jp
mov
xor
push
cmp
mov
fs
push
rorl
and
jae
inc
lds
sub
nop
adc
jno
xor
test
xchg
push
sbb
inc
leave
and
push
pushf
bound
inc
cmp
jns
jg
stos
inc
sub
jb
popf
mov
ficomps
cmpl
or
test
cld
jno
cs
cmpl
das
ds
lret
bound
pusha
dec
in
dec
jmp
add
fwait
pop
sahf
int3
add
and
aas
mov
inc
fidivl
pop
ficoms
in
xor
jg
push
push
add
imul
ds
fcompp
jo
dec
pop
repz
testl
mov
cwtl
das
and
xor
or
dec
jne
push
call
enter
lods
jmp
lea
cmp
stos
inc
push
cs
leave
pusha
cmpsl
loope
jecxz
leave
out
sti
xor
gs
popf
dec
xchg
mov
or
inc
fptan
sub
pop
pop
adc
inc
jg
jns
gs
xchg
rolb
xchg
add
push
mov
or
push
jbe,pt
shll
enter
mov
in
jns
dec
add
xchg
cs
push
xor
dec
repnz
aam
inc
sti
jno
sub
dec
cmpb
inc
rorl
cmp
pop
dec
in
inc
jmp
add
lcall
ss
and
aas
mov
inc
fisubrl
pop
fstl
in
xor
jg
adc
ss
xor
movsb
and
mov
sbb
jno
in
cmp
testl
out
cs
pop
mov
shl
repz
push
adc
xchg
inc
jb
sbb
inc
push
test
jne
fdivrs
xchg
sub
add
mov
cmp
fdivrs
mov
es
inc
fmul
inc
xchg
jns,pn
arpl
and
sbbb
mov
repnz
cltd
xor
mov
fdivrs
cmp
les
mov
imul
hlt
data16
and
inc
test
xchg
cmpsl
lds
lds
mov
cmc
scas
mov
pop
in
jl
add
loopne
cmp
pop
mov
push
push
je
and
stos
addl
sub
pop
pop
int3
out
inc
or
adc
pusha
ss
xor
fnsave
add
test
mov
aaa
lods
sbb
inc
xchg
out
fisubl
xchg
outsb
sbbb
mov
fmull
int
mov
lahf
in
lea
sti
or
cmp
lods
cld
adc
mov
ret
or
inc
or
gs
mov
adc
dec
das
inc
test
out
fadd
xchg
insl
push
jmp
xchg
cmp
rcr
insb
icebp
push
in
out
jno
pop
int3
jp
push
inc
xchg
movsl
inc
test
test
inc
cmp
dec
lds
call
jo
mov
js
insb
icebp
pop
sti
and
jmp
cld
das
mov
ds
iret
adc
mov
sbb
cwtl
pop
cmp
test
sbb
lret
cmp
sahf
jae
adc
in
jo
dec
aaa
in
mov
pop
popf
test
ret
xor
jl
inc
inc
fsts
and
xchg
sbb
loopne
xor
cwtl
jmp
pop
inc
and
imul
adc
xorl
fstpl
scas
xchg
pop
stc
xchg
dec
adc
xchg
shrl
cltd
cmp
cs
ret
stos
xor
dec
outsb
pop
jge
add
lret
sbb
jg
iret
ja
jg
cmp
mov
mov
sub
shl
mov
xorl
lcall
and
fisttps
test
push
sti
pop
repnz
into
cli
out
push
xchg
ss
mov
ja
scas
mov
mov
test
sti
rolb
jle
mov
xchg
mov
rcll
push
xor
mov
jl
xchg
mov
sub
fwait
lret
dec
xchg
adc
xor
shll
and
fnstsw
or
shll
mov
pop
jbe
mov
lret
test
add
hlt
jl
mov
inc
loopne
in
adc
lock
dec
decl
clc
mull
insb
jno
scas
call
xor
stos
add
push
into
mov
insb
pop
sbb
inc
pop
lods
jecxz
movsl
xchg
sub
add
adcb
out
mov
xor
or
jge
daa
lret
bound
add
popa
je
xor
push
fsubrs
js
add
mov
in
lcall
sub
loop
fs
testb
pushf
mov
push
ljmp
or
cld
xchg
mov
hlt
mov
icebp
mov
jecxz
insl
adc
push
out
jbe
mov
adc
insl
add
popa
mov
and
aad
je
gs
push
ja
push
sbb
orl
pop
repz
or
xor
cltd
xor
mov
mov
sarb
push
std
pop
loop
lret
cld
xor
sub
dec
in
addr16
push
mov
adc
xchg
xchg
roll
xor
sub
bound
mov
sahf
aaa
mov
jg
rcll
sbb
stos
cmpsb
das
adc
push
cmpsl
dec
fidivrl
mov
outsb
out
nop
out
xchg
jae
fldcw
stos
outsb
test
into
mov
mov
negl
adc
mov
insb
aaa
fdivs
movsb
in
sub
pop
test
mov
les
fisttps
popf
out
mov
insb
mov
test
lahf
lea
data16
ljmp
daa
test
pop
and
ret
jnp
fnstcw
inc
or
imul
xor
std
cmp
jns
loopne
add
loop
sti
bound
loopne
add
sarb
aas
push
xchg
xor
xchg
inc
xchg
aaa
sti
lock
sbb
dec
imul
in
push
fidivl
push
xchg
dec
inc
or
xorl
mov
dec
mov
push
ds
sbb
pop
int
dec
mov
mov
into
and
adc
inc
movsl
inc
and
push
das
test
inc
mov
mov
jnp
mov
inc
movsb
sub
and
test
push
and
and
adc
test
and
scas
lahf
xor
inc
cmp
and
test
test
mov
rorl
pop
movsb
sub
and
es
into
or
mov
mov
fistps
ret
sahf
inc
xor
jge
scas
and
or
pop
add
jmp
pop
mov
cmp
xchg
cmp
xor
sti
dec
sub
cs
cmp
inc
pop
leave
scas
xchg
xchg
aaa
or
pop
ljmp
jle
push
sbb
lock
push
dec
push
xor
leave
xchg
and
xor
jle
adc
inc
in
aad
xchg
jo
call
add
jne
dec
adc
cmp
dec
adc
in
push
mov
mov
xor
lcall
xchg
bswap
cmpsl
xor
jle
mov
sub
out
enter
sub
cmp
cli
cmp
dec
or
pop
mov
xchg
jbe
jb
loop
push
test
test
push
add
adc
dec
add
inc
adc
pop
or
jmp
repnz
sub
adc
xor
sub
mov
push
repnz
add
addr16
leave
xchg
jg
adc
adc
pop
mov
push
sbb
aaa
or
adcb
enter
inc
push
sub
mov
lea
movsl
ss
cmp
fs
dec
or
sub
cmp
mov
movsb
dec
push
inc
sbb
lcall
int
cli
inc
adc
and
pop
data16
cmp
jle
xchg
cmp
push
mull
jbe
jg
or
dec
sbb
add
push
pop
jmp
movsb
addr16
leave
mov
out
imul
fdivrl
adc
lret
or
fwait
dec
or
or
jo
stos
fsubrl
or
ljmp
int3
mov
and
or
mulb
jae
sub
pop
jo
adc
or
jo
rclb
les
pop
dec
or
mov
sub
insb
dec
or
jmp
cmpl
fisttps
dec
loop
inc
adc
mov
into
mov
arpl
jp
fnsave
push
adc
rol
rclb
dec
inc
adc
push
lahf
loopne
sub
xor
mov
incb
in
sub
loope
ret
dec
repz
mov
sbb
mov
lret
xor
inc
push
insb
cs
pop
sub
popa
cmc
ret
lret
icebp
push
mov
push
and
push
test
xlat
jle
flds
xlat
xchg
movsl
cmp
mov
mov
movb
fadds
int3
std
pop
nop
ds
jmp
notl
mov
push
cld
dec
sub
cmpsl
pop
imul
and
in
ds
pop
notl
sbb
les
dec
jb
iret
dec
dec
ficomps
mov
or
stos
inc
dec
xor
out
xlat
inc
adc
dec
mov
dec
mulb
mov
xchg
lcall
sbb
test
loope
cmp
jo
lods
sub
imul
repz
and
push
pop
lds
std
fidivs
cmpsb
mov
mov
fs
pop
push
mov
pop
push
out
or
fdivrs
pop
xor
fwait
cmp
mov
std
in
ret
add
push
sbb
add
pusha
sbb
push
xor
out
and
mov
mov
fiadds
xor
lods
and
xchg
mov
add
js
js
add
push
incl
fimull
rorb
jle
dec
pop
std
std
rorl
jne
pop
lcall
mov
cltd
cmp
xchg
fdivrl
inc
pop
divl
or
push
jno
push
xchg
add
mov
les
daa
mov
sbb
shlb
ret
or
mov
call
fdivrs
in
aam
rorb
mov
notl
ret
testl
push
add
loope
or
cwtl
fwait
call
negb
outsb
repnz
in
jl
stc
arpl
jnp
lea
out
fiaddl
scas
dec
int
inc
mov
jns
xor
push
outsl
daa
sbb
xor
fmul
xchg
cmp
jnp
sub
aad
cld
cmp
dec
pusha
sub
sbb
dec
add
aad
mov
push
cli
or
or
fstpl
mov
xchg
and
les
xchg
aad
movsl
stos
sub
mov
cmp
push
push
aas
mov
xor
push
pop
testl
lcall
push
add
pop
mov
lea
je
aas
inc
xchg
inc
shlb
mov
stos
cs
js
sarl
in
push
lods
sub
lahf
xor
rcrb
sahf
mov
inc
imul
jne
xor
push
xor
stos
mov
imul
dec
mov
loope
sub
mov
iret
mov
lods
test
xor
push
cwtl
outsl
jmp
fldcw
push
add
leave
jg
nop
insl
adc
pop
stc
push
xlat
xchg
mov
movsb
adc
mov
adc
loop
and
fimuls
popa
negb
cltd
and
adc
imul
sub
adc
loope
lods
hlt
bound
fdivrl
cltd
gs
lret
cwtl
pop
jmp
jb
lea
cwtl
fwait
aam
add
negl
jnp
fidivrs
stos
gs
mov
orl
cltd
aas
push
popf
push
stc
movb
out
sbb
shrb
dec
aaa
subb
es
jo
out
jecxz
shrl
mov
stos
iret
mov
push
xchg
test
cmp
shlb
stc
push
sar
pop
push
rcll
rcrl
mov
mov
stos
sub
cmp
or
lods
lret
sti
into
fs
in
orl
pop
add
cld
push
clc
sub
out
cmp
pop
aam
mov
sahf
xchg
jb
je
shll
popf
imul
repnz
push
add
mov
mov
mov
fidivrs
jmp
and
mov
stos
scas
xor
arpl
das
xchg
lods
xor
pop
ljmp
rolb
mov
mov
dec
or
lds
adc
and
mov
mov
dec
adc
lret
add
ficoms
cwtl
hlt
cmp
outsl
pop
out
mov
sbb
add
sub
jmp
pushf
cmp
aad
lret
pusha
sbb
jne
ja
inc
mov
mull
lods
jecxz
inc
jns
call
adc
scas
jp
pop
roll
pusha
loop
es
xchg
sarl
outsl
jmp
or
xchg
add
lahf
or
xchg
ss
jmp
lahf
in
das
fwait
ds
sbb
jo
push
pushf
mov
mov
movsb
pop
rclb
mov
sti
jge
stos
scas
sbb
repz
mov
and
sbb
rclb
dec
lcall
lahf
push
decb
filds
inc
xlat
xchg
cmp
out
push
xchg
inc
pop
out
or
push
out
sbb
inc
notb
lret
xchg
xor
outsb
dec
scas
or
loope
cmp
sub
mov
xor
ret
sub
aaa
loope
pop
or
pop
sahf
push
in
aas
ret
and
rcr
xor
scas
adc
imul
mov
cmpsl
pop
mov
sbb
xchg
imul
jb
and
and
push
jne
mov
pop
fs
insl
adc
dec
xchg
cmp
pop
ds
mov
test
imul
xor
daa
mov
xor
or
inc
addr16
jae
iret
pop
data16
adc
and
mov
test
or
std
mov
jb
imul
outsb
jl
push
call
fnsave
cmp
xchg
xchg
ja
and
sub
mov
mov
ss
sub
jbe
popf
inc
dec
fs
std
fwait
movsb
xor
ds
rcrl
fbld
repz
pop
pop
add
xchg
aad
cmp
xchg
inc
addr16
dec
or
jl
inc
push
out
fstpt
lea
dec
iret
and
lods
push
adc
fidivs
jb
out
sahf
pushf
dec
or
ret
pop
cli
mov
sarb
pop
adc
cmp
ja
insb
jle
insb
sarb
daa
jbe
lretw
nop
adc
loope
jp
insl
idivb
push
int3
pusha
insb
insb
out
repz
aad
out
loope
int
lahf
mov
out
outsl
ss
ja
and
data16
pop
cli
shlb
or
inc
lret
cld
fs
add
scas
xor
mov
adc
mov
jmp
sub
sub
jge
mov
loope
insl
mov
xchg
shrb
int
imul
mov
popa
sbb
sahf
dec
or
add
sbbl
and
nopl
stos
pop
push
popa
testb
and
or
jbe
addr16
jmp
outsb
add
mov
mov
push
xor
xchg
mov
sahf
inc
ret
test
movsl
cmp
push
std
outsl
repz
cld
inc
out
mov
cmpsb
dec
adc
fiaddl
and
nop
movsl
sub
adc
pop
add
inc
out
jno
mov
lcall
je
roll
lret
mov
dec
adc
lret
mov
jbe
ror
daa
in
jne
pop
lds
into
roll
aam
sarb
push
mov
sub
in
pop
cli
jno
in
outsb
out
imul
mov
mov
cwtl
cmp
add
push
popf
adcl
xor
xor
sbb
andb
add
push
push
cmp
dec
adc
lcall
lods
sub
loope
les
test
push
out
mov
jp
call
aaa
cwtl
fs
xchg
push
mov
decb
inc
xchg
xchg
inc
cs
xchg
mov
mov
movsb
les
insl
popf
sbb
mov
cmp
cli
out
and
pop
cli
es
dec
mov
sbb
xchg
out
pop
add
lods
xor
vmwrite
or
inc
jge
push
cld
gs
xor
dec
jg
push
test
pop
mov
add
call
ret
pop
lds
nop
ja
movsb
inc
lds
add
dec
adc
jns
xchg
ds
mov
in
pop
enter
fcomip
mov
icebp
call
push
mov
push
dec
adc
lds
xlat
mov
movsb
sub
xchg
inc
imul
in
ds
test
arpl
je
mov
pop
jo
pop
fldl
dec
or
into
mov
push
or
nop
inc
outsl
push
xor
sub
pop
insl
lods
sub
adc
fwait
jns
fwait
add
or
jecxz
ss
xchg
inc
inc
sub
movsb
fwait
xchg
inc
sub
dec
or
cmpsl
ds
js
fidivrs
push
call
fiadds
filds
clc
js
push
push
jmp
icebp
pop
xor
es
pushl
test
and
jp
sbb
fcmovnb
outsl
push
add
sbb
sti
shrb
adc
jo
movsb
ss
test
popa
stc
pop
arpl
xchg
inc
dec
push
hlt
data16
cwtl
test
dec
movsb
shlb
jecxz
sbb
enter
test
test
jo
cltd
jns
bswap
dec
push
adc
clc
nop
insb
jmp
mov
cmpsl
sub
push
pop
clc
or
sub
lahf
push
add
clc
ret
mov
nop
jns
cmp
lods
push
mov
test
and
sbb
hlt
popa
cld
inc
in
imul
adc
rorl
push
lods
sub
fnstenv
stos
adc
mov
cltd
test
mov
sub
inc
scas
sub
loope
dec
insb
add
push
mov
movsl
mov
ja
mov
or
sar
arpl
mov
jns
js,pn
test
jo
xchg
xchg
inc
cmp
clc
push
and
test
mov
insl
imul
and
lcall
and
mov
imul
push
les
sbb
inc
arpl
push
lret
sbb
insl
negb
xor
arpl
out
cmc
cmp
es
aaa
addr16
pop
lock
mov
test
jmp
cmp
pusha
push
cli
sbb
dec
out
je
sbb
mov
test
movsb
cmc
rcrb
andb
rcl
or
xor
lods
xor
and
mov
dec
es
popf
sahf
in
fadd
mov
cmp
cld
daa
mov
or
inc
fcoml
cs
xor
cld
stos
and
mov
mov
mov
lret
push
jge
and
xchg
cmp
andl
jg
xchg
out
fdivrl
cli
imul
push
jns
adc
lret
fildl
mov
lods
imul
test
lcall
popf
push
mov
jo
test
insl
mov
inc
cmpsl
xor
sbb
pop
or
xchg
push
inc
xor
je
sbb
out
xor
mov
je
fneni(8087
jle
jno
std
shrb
outsl
loopne
dec
adc
dec
pop
xchg
sarb
loope
jmp
inc
lods
sub
stos
out
outsb
lock
fnstsw
cmp
push
arpl
cltd
dec
push
sub
pop
lahf
inc
cli
pop
hlt
lds
push
mov
mov
xchg
inc
dec
fxch
lea
xor
lahf
jbe
cmpsl
das
or
jmp
push
adc
sub
enter
mov
test
stos
xor
aad
not
out
push
ret
add
sub
cmp
cmpsb
sti
add
clc
and
and
iret
jne
shl
sbb
scas
inc
icebp
movsl
sub
mov
xchg
cmp
or
or
ja
mov
jno
and
scas
pop
std
xchg
mov
shlb
xchg
mov
pop
sbb
add
jge
lock
fs
push
lods
notl
mov
sbb
inc
roll
loope
push
stc
or
xor
add
mov
ret
lea
gs
cwtl
inc
jl
out
outsl
enter
adc
mov
arpl
push
add
mov
xchg
aas
lock
inc
out
jnp
and
cwtl
das
testl
movsb
cli
dec
orl
mov
mov
fildl
sbb
dec
jecxz
fsubr
lods
xor
aad
xchg
lds
das
adc
mov
lods
flds
inc
sbb
sub
or
mov
lods
mov
leave
lea
lret
mov
sarb
sub
xchg
inc
or
js
pop
stos
sub
les
popf
cmpsb
popa
and
xchg
shlb
mov
loope
mov
addr16
xchg
jns
call
repz
aam
lock
inc
cmc
pop
adcb
add
bnd
das
lock
inc
dec
sub
push
xchg
dec
pop
aaa
pop
cmp
cmp
orl
sbb
cwtl
push
mov
stos
sub
mov
xor
rcr
ret
or
inc
or
pop
sbb
or
pop
sarl
sub
xchg
rcr
test
cmpsl
gs
outsb
sub
mov
stos
jmp
and
xchg
outsb
hlt
sub
stos
xor
cmp
xlat
cld
cmp
test
scas
and
lods
xor
enter
xor
mov
out
inc
in
push
cli
fyl2x
lods
xor
pop
add
dec
jmp
int3
xchg
add
arpl
push
jo
sbb
fcoml
push
lret
into
std
push
sbb
xchg
jmp
or
inc
or
imul
mov
pop
clc
jecxz
pop
stc
outsb
cld
cmc
arpl
dec
pop
inc
jbe
xchg
push
fwait
and
shlb
jecxz
push
mov
sub
xlat
outsb
xchg
mov
outsl
ffreep
mov
pop
mov
jns
mov
mov
lea
ret
sbb
mov
adc
or
push
add
push
xchg
stos
jecxz
dec
xlat
mov
pop
icebp
cmp
cwtl
aas
test
mov
inc
or
mov
push
mov
jle
mov
addr16
lcall
and
jmp
loope
jae
pop
add
arpl
cmpsl
inc
inc
jecxz
insb
xchg
pop
add
lods
divl
mov
mov
adc
mov
jl
inc
test
inc
orl
inc
imul
dec
inc
or
fimuls
outsb
in
inc
pop
test
add
xchg
push
cmp
insb
jmp
or
xchg
add
jno
pop
lcall
stc
bswap
sbb
int3
mov
inc
insl
jmp
inc
push
add
movsb
rclb
repnz
in
jp
inc
mov
cmpsl
stc
pop
push
movsl
jg
scas
pop
adcb
fnsetpm(287
je
jb
add
jnp
sbbl
xor
into
ja
ljmp
das
les
movsl
xor
nop
roll
std
mov
call
jbe
in
out
jbe
pop
mov
push
pop
dec
mov
cmp
faddl
mov
orb
jl
fs
pusha
jmp
js
aas
jnp
push
clc
mov
out
clc
mov
gs
cs
pop
dec
mov
dec
fidivrl
sub
sbb
mov
mov
xor
test
popf
je
fstps
enter
dec
ja
test
push
mov
sbb
inc
dec
or
or
xchg
inc
add
jge
cmp
cs
in
push
pop
adc
and
inc
adc
inc
mov
dec
popf
sub
pop
sbb
jbe
clc
jns
ja
sbb
xchg
jno
inc
pop
andl
divl
cmpsb
and
daa
jo
xchg
imull
das
imul
xor
js
sbb
mov
outsb
iret
mov
stc
rclb
xchg
push
shlb
mov
xchg
push
out
ret
outsl
adc
xchg
arpl
xchg
lahf
push
faddl
and
push
clc
shll
pop
lods
sbb
imul
adc
test
mov
in
sub
mov
pop
cli
jge
jecxz
or
sbb
jmp
sti
adc
aam
lahf
enter
rcrl
in
push
out
mov
mov
fdivl
push
or
add
repz
dec
adc
loop
rcll
push
fcomps
xor
inc
out
push
test
jne
xor
mov
and
movl
ds
jg
cmpsl
sub
push
mov
mov
adc
pop
sahf
sbbl
mov
arpl
ficoml
xchg
pop
fsub
imul
xchg
cmp
sbb
xchg
je
inc
pop
cli
jle
xor
in
mov
cs
icebp
pop
add
mov
jp
popf
sarl
addr16
pop
sbb
in
inc
dec
push
fcoml
sub
or
mov
mov
fidivrl
rcl
fwait
mov
and
jne
push
inc
sub
pop
loope
jb
jle
mov
lea
rorl
out
mov
mov
mov
aad
jb
jl
add
jnp
sbb
push
mov
stos
mov
cmp
insl
jmp
and
cltd
iret
arpl
imul
sahf
cmp
insl
in
cmpsl
dec
sub
int
cs
shll
mov
mov
mov
fstpt
nop
movsb
xor
fbstp
mov
pop
and
adc
push
pop
add
fidivrl
movsb
mov
clc
popa
xchg
mov
xchg
jmp
iret
mov
dec
and
jns
shrb
mov
movsl
xor
sub
in
shl
out
lret
add
mov
push
mov
fnsave
in
loop
jmp
mov
xchg
out
pop
or
test
mov
push
cli
mov
mov
outsl
inc
dec
data16
adc
inc
in
sub
xor
jecxz
shll
hlt
loope
inc
dec
push
xlat
xchg
push
mov
sub
inc
lods
ss
and
movsb
and
inc
int
adc
arpl
or
das
add
and
lret
aas
cld
jge
leave
xor
cltd
bound
dec
int3
dec
sahf
cli
pop
inc
imul
cld
mov
scas
imul
sbb
adc
or
mov
adc
data16
jo
out
dec
fs
pop
push
mov
je
inc
fs
mov
ja
daa
and
aaa
ss
aam
repz
mov
mov
mov
xchg
fstpt
add
mov
js
mov
mov
mov
dec
push
lret
dec
mov
inc
pop
or
fidivrl
adc
push
mov
movsb
mov
dec
or
inc
sahf
aaa
or
push
or
dec
mov
adc
adc
in
jp
jge
pop
dec
jecxz
lret
je
hlt
loopne
out
in
in
std
test
int
ss
sbb
xor
fwait
inc
lods
test
es
jne
mov
push
stos
xor
mov
je
test
out
sarb
std
inc
adc
shll
xchg
scas
sub
cmpsb
repnz
les
pop
sti
daa
sbb
and
loope
jne
push
sub
xor
mov
inc
adc
stos
dec
or
loopne
add
out
xchg
inc
inc
pop
add
in
ds
inc
pop
jg
and
loop
pushf
inc
xchg
hlt
filds
loop
dec
fmul
aam
in
lods
ss
outsl
repz
xor
adc
xchg
imul
lret
fsubrs
xchg
pop
lea
add
jecxz
adc
scas
xor
and
cmpsl
ss
inc
adc
jo
push
cmp
mov
and
hlt
push
out
mov
cmpsb
xor
outsl
jmp
sbbb
jmp
leave
mov
icebp
mov
fwait
mov
add
call
idivl
rep
mov
out
in
inc
add
dec
hlt
cmp
test
int
sub
icebp
jbe
adc
lcall
in
test
pop
mov
into
or
data16
js
lock
orb
xchg
cmp
cmpsl
jne
mov
stos
mov
push
cld
stos
rclb
xor
sbb
xlat
mull
stos
jp
fldl
mov
out
jb
cmpsl
adc
sub
cmp
xchg
jae
es
add
push
stc
rcrl
dec
imul
cmp
xlat
sarl
dec
mov
jl
or
shlb
sbb
gs
pop
jle
lods
dec
xchg
arpl
mov
push
add
jo
push
push
lret
roll
lock
pusha
and
pushf
xor
inc
out
jne
jnp
gs
jno
push
imul
xchg
pop
gs
mov
jns
shll
adc
or
lret
add
fdivrl
cmpsb
xor
cld
or
out
or
stos
xchg
int
andb
arpl
xchg
inc
fs
jns
jp
sub
addr16
fisttpll
mov
push
clc
leave
mov
movsl
mov
fcom
sbbb
cli
int3
xchg
mov
push
clc
mov
pop
call
ret
mov
movsb
sub
inc
or
leave
mov
push
loopne
cmp
ljmp
mov
cmpsl
and
sbb
lods
pop
roll
jmp
testl
mov
adc
into
aam
xor
jno
sub
aas
std
pop
add
iret
cmp
sbb
add
shlb
jle
ss
adc
insb
out
rcl
std
pusha
inc
or
insb
test
mov
mov
add
fiaddl
jge
rorl
fstpl
fimuls
pop
fildll
jbe
das
or
sbb
dec
je
jl
xor
lea
xchg
jg
lock
mov
jo
jmp
sub
gs
or
and
orl
push
inc
pop
jle
call
and
cmp
inc
add
and
fadds
dec
mov
arpl
lcall
jmp
pop
icebp
gs
nop
push
stos
or
mov
addl
pop
jbe
jns
cmpsl
jne,pn
test
jmp
xor
mov
enter
pop
leave
in
dec
or
stos
daa
pusha
sbb
hlt
popf
test
lret
icebp
rclb
pop
sahf
inc
mov
pmulhw
bound
mov
adc
inc
aam
or
sbb
xor
pop
addr16
pop
add
jae
in
scas
jl,pt
xor
cmp
push
decb
out
sub
sub
loope
negl
jae
daa
test
lret
ja
adc
pop
push
mov
sbb
push
je
fidivrl
rolb
or
movsl
es
adc
mov
cmp
jb
fdivrl
push
das
enter
call
cmc
jno
jp
cmp
in
mov
and
cmp
lret
sub
data16
arpl
jo
mov
mov
adcb
rorl
shl
popa
rcrl
insb
add
movsb
cmp
xor
jbe
jne
sub
xchg
cmp
ds
adc
lret
aam
push
dec
mov
cmp
out
fidivrl
xor
pop
js
xchg
cmp
stos
das
xorb
push
cmp
mov
inc
xchg
jne
out
rol
adc
sub
call
cltd
lret
or
repnz
cmp
sbb
push
sub
rorl
test
sbb
ret
push
rclb
lret
lcall
xchg
sbbl
mov
fdivrs
push
outsb
int
ljmp
xchg
cmp
adc
mov
dec
psubw
mov
lods
lret
in
dec
fstps
push
ret
mov
pop
fildl
mov
stos
xor
inc
sub
ret
adc
into
xchg
cmp
out
sarb
cld
lods
xor
push
ret
dec
adc
mov
cmpsb
daa
pop
mov
in
jb
inc
mov
loopne
test
sbb
fwait
cmp
or
fwait
cli
sub
sti
or
pop
push
in
mov
shl
hlt
out
sbb
mov
jg
outsb
jmp
sar
inc
loope
outsl
call
adc
xchg
jl
enter
sbb
xor
es
push
cmp
push
mov
stos
xor
mov
repnz
jo
xchg
cmp
arpl
sti
idivl
shl
iret
mov
lock
out
xchg
xor
or
dec
sub
popa
dec
xchg
dec
push
or
scas
sub
push
push
ret
push
iret
xchg
dec
mov
enter
lret
jmp
outsl
out
negb
mov
es
mov
subb
jecxz
or
mov
pop
add
mov
lcall
flds
xchg
or
jb
inc
and
dec
lcall
xchg
scas
sub
stc
iret
sub
or
fisttps
or
adc
addr16
jecxz
mov
int3
arpl
test
adc
pop
movsl
sub
imul
mov
cmp
push
ret
mov
test
addr16
mov
sub
push
jl
mov
dec
loope
enter
push
notl
ljmp
stos
mov
sbb
xor
jnp
sub
ret
shl
notl
pop
loop
and
jns
sbb
dec
cmc
pop
ror
xchg
inc
pop
sbb
dec
xchg
push
enter
stc
lods
adc
out
dec
push
lds
jo
out
jnp
fbld
adc
orl
std
jae
push
shlb
insl
add
adc
dec
adc
and
push
xchg
sbb
scas
mov
and
xchg
hlt
pusha
fistpl
or
call
xchg
and
pusha
das
jbe
jne
aas
out
sarb
push
sbb
sub
xchg
mov
or
scas
mov
mov
iret
mov
out
mov
ds
and
mov
xchg
inc
mov
or
ds
sti
push
and
xchg
aas
paddsw
jae
xchg
popa
repz
sahf
aaa
mov
and
xor
mov
cmpsb
das
push
mov
orb
cmc
push
mov
sub
push
adcb
mov
aad
jno
sub
and
das
frstor
mov
lods
sub
rolb
mov
mov
lods
sub
test
push
out
negl
stc
fildl
inc
inc
xor
push
sub
add
jl
add
push
and
cmp
rcrl
mov
mov
mov
shll
inc
or
sub
push
imul
popa
repz
adc
loope
cmpsb
xor
push
std
sbb
leave
xchg
add
push
in
orl
or
and
sub
ja
inc
fldl
mov
lds
hlt
sbbb
cmp
mov
add
lcall
adc
fdivl
cmpsb
cmp
jae
les
xchg
sbb
push
out
int
xor
xchg
popa
cmp
sbbb
mov
jb
mov
fists
icebp
pop
xor
bts
xchg
sub
or
mov
push
sub
lahf
pop
jae
push
jge
mov
clc
iret
inc
fildl
sbb
cmpsl
dec
and
push
insb
lds
mov
sahf
xor
inc
sbb
and
mov
ds
or
pop
cmp
sbb
mov
xchg
scas
add
out
and
cmp
test
sub
scas
scas
inc
loopne
jnp
sub
into
gs
cltd
xor
addl
or
and
sub
jbe
inc
fnstsw
adc
shr
das
sbb
sbbb
cmp
in
inc
mov
add
cwtl
mov
and
in
fdivl
xor
cli
xchg
jno
lds
sbb
or
das
add
push
mov
mov
fstl
repnz
xor
adc
lret
xchg
cs
ljmp
sub
lahf
pop
jb
imul
mov
int
sbb
test
pop
arpl
push
push
fwait
jno
sbb
les
add
mov
and
mov
aas
out
cli
xchg
out
pop
pop
cmp
sbb
mov
into
xchg
lods
add
in
and
cmp
sbbb
mov
mov
fcomip
jnp
daa
add
xor
xor
in
test
cmpsl
or
and
sub
sub
mov
fidivrs
adc
iret
out
sbb
sbbl
cmp
imul
mov
mov
fisttps
je
xor
xchg
jo
lds
sbb
or
aaa
into
adc
ss
in
addr16
mov
mov
mov
fcoml
repnz
das
scas
inc
popa
jbe
adc
leave
xchg
cs
aad
addb
mov
dec
sub
mov
mov
ret
repnz
int3
inc
fdivr
push
adc
dec
push
sbbb
mov
mov
add
push
mov
and
mov
aas
in
sti
xchg
out
add
sbb
mov
iret
xchg
stos
add
in
and
cmp
sbbb
mov
mov
fdivp
jnp
and
inc
cltd
xor
out
test
cmpsb
or
xlat
in
aad
push
stc
sub
sub
mov
dec
fistpll
test
popf
data16
into
in
push
lock
and
dec
in
inc
mov
add
mov
pminsw
jne
xor
xchg
outsl
test
pop
mov
sbb
or
cmp
adc
add
data16
mov
xchg
iret
cmp
sub
cs
pusha
je
adc
xchg
cs
aam
addl
mov
dec
daa
or
mov
shl
repz
inc
adc
test
sbb
das
xchg
outsl
sbbl
mov
mov
add
mov
lcall
xchg
in
add
pop
xor
push
in
mov
rclb
mov
out
jecxz
and
aaa
dec
aas
jle
xchg
sub
stos
mov
jnp
and
shlb
inc
cltd
xor
out
test
or
jmp
insb
sbb
aas
repz
dec
fistpll
adc
int
das
adc
aaa
dec
in
inc
mov
add
fmull
jne
xor
xchg
outsb
add
mov
sbb
or
cmp
adc
add
gs
mov
xchg
into
cmp
sub
and
sub
inc
pop
jae
adc
cwtl
das
clc
shr
addl
dec
dec
and
aad
lahf
ja
mov
repnz
inc
adc
test
dec
gs
xchg
insl
sbbl
mov
in
shlb
cmp
rclb
mov
mov
jne
scas
test
xchg
jmp
enter
sbb
xchg
rorb
mov
out
loope
and
xor
push
xchg
sub
test
jl
and
shlb
inc
lcall
xchg
mov
mov
sbb
sub
daa
ds
mov
dec
fistpll
adc
lret
jecxz
adc
test
pop
ss
in
inc
mov
add
fisttpl
jne
das
test
popa
cmp
xchg
insb
add
mov
sbb
pop
loopne
iret
adc
add
arpl
mov
test
int
aad
xlat
xchg
sub
and
push
sub
adc
cltd
xor
shr
addl
mov
mov
sahf
jne
mov
icebp
movl
inc
sbb
dec
fs
xchg
imul
out
mov
add
inc
pop
mov
lea
xchg
scas
stos
inc
loopne
cld
xchg
jmp
or
mov
push
out
xchg
lea
push
out
and
xor
fdivrs
sub
cmpsl
mov
jge
and
shlb
inc
fwait
xor
out
test
mov
xlat
outsb
sbb
sub
and
inc
dec
fbstp
adc
leave
loop
enter
sbb
mov
add
xchg
rclb
mov
or
fidivs
cs
xchg
push
pop
mov
sbb
push
fidivrs
iret
movaps
lcall
and
mov
aas
std
aad
sub
pop
pop
cmc
push
sub
adc
les
addl
mov
mov
popf
jae
mov
lock
notb
adc
inc
pop
gs
dec
arpl
leave
xchg
imul
cmp
pop
outsl
push
cmp
rclb
lea
fidivs
lods
stos
inc
fbstp
lret
or
mov
push
call
rorb
lods
push
out
and
sub
jne
xor
fnstcw
sub
mov
xlat
out
jle
and
iret
sub
xor
in
test
mov
mov
sbb
sub
and
inc
fidivs
adc
rcll
leave
adc
sbbl
xor
mov
add
rcr
and
fnsave
stos
inc
pusha
ss
xchg
push
mov
mov
aam
jge
fdivl
into
or
cs
in
pop
jp
mov
mov
inc
xlat
std
rcll
notb
scas
inc
pop
jno
adc
jns
fs
les
cmp
mov
mov
pushf
jno
mov
out
ret
inc
adc
cld
inc
bound
lret
sbbl
mov
call
in
push
jo
cmp
mov
xchg
lods
lods
inc
fidivs
lret
pop
sbb
test
rorb
stos
push
out
fdiv
and
sub
jne
xor
fnstcw
xchg
sub
movsb
mov
out
jle
and
iret
data16
xor
test
mov
mov
sbb
sub
and
lea
inc
fidivs
stos
rclb
leave
adc
sbbl
xor
out
cmp
add
rcr
and
loop
je
sub
sti
xchg
addr16
mov
sbb
add
daa
add
pop
sub
and
mov
inc
xlat
cld
rclb
testb
inc
push
jo
adc
js
fs
ret
fwait
xor
lret
jmp
std
push
mov
mov
fwait
jo
mov
out
ret
repz
lods
inc
adc
cld
inc
popa
xor
xchg
sbbw
mov
call
jmp
jo
aaa
or
push
ds
mov
xchg
stos
lods
inc
fnsave
lret
push
sbb
sbbl
mov
out
fcomi
and
daa
std
jne
das
dec
inc
fnstcw
xchg
sub
mov
jle
pop
test
xor
in
test
push
popf
or
sbb
sub
and
testb
mov
mov
loopne
leave
adc
sbbl
xor
cmp
add
mov
loope
je
sub
inc
pop
xor
xchg
data16
pop
mov
sbb
add
aaa
into
or
add
push
sub
in
pop
js
mov
mov
inc
xlat
sti
rcll
testb
inc
push
outsl
jge
mov
ret
hlt
lret
cld
adc
or
lcall
in
roll
push
adc
cld
inc
pusha
xor
xchg
sbbl
mov
call
ljmp
push
cmp
pop
fidivs
stos
lods
inc
fdivl
lret
add
call
rorb
test
and
es
jne
cs
inc
fnstcw
xchg
sub
mov
jle
push
test
sub
xor
in
test
mov
mov
sbb
sub
and
testb
lea
mov
fbstp
leave
adc
sbbl
xor
arpl
mov
add
mov
loopne
je
sub
xchg
gs
pop
mov
sbb
add
aaa
into
or
push
in
pop
ja
mov
scas
leave
inc
xlat
cli
rclb
testb
inc
push
outsb
jge
mov
rcrl
sti
adc
push
inc
sbb
mov
cltd
outsb
sub
in
rolb
or
gs
inc
pop
xor
nop
sbbl
mov
call
jmp
or
push
cmp
mov
lret
add
mov
dec
call
rolb
test
out
fxtract
and
and
inc
inc
fnstcw
xchg
sub
mov
jle
sbb
aas
pushf
xor
in
test
mov
mov
pop
out
sub
pop
cmp
lea
inc
fidivs
adc
mov
fidivs
leave
pmulhw
out
cmp
add
mov
je
sub
xchg
fs
pop
scas
test
mov
shl
jge
fdivs
into
or
fwait
push
sub
pop
jbe
mov
scas
enter
iret
xchg
sub
sbb
dec
and
adc
jne
cmpsl
rcrb
cli
adc
mov
cwtl
insl
sub
jmp
inc
or
lods
cmp
pop
xor
arpl
call
call
or
push
cmp
and
mov
cld
xchg
loope
lret
add
mov
dec
call
rolb
cmpsl
push
out
fdiv
and
and
jne
sub
inc
fnstenv
xchg
sub
pusha
test
ljmp
es
xor
in
test
mov
mov
push
in
sub
push
cmp
lea
inc
fidivs
adc
mov
fnsave
leave
push
in
sbb
xor
popa
aaa
mov
add
mov
je
sub
xchg
arpl
scas
test
mov
iret
out
add
aaa
into
or
add
push
sub
pop
jne
mov
lods
movl
add
pop
testb
inc
push
insb
jge
sahf
je
cmpsb
mov
jmp
stc
adc
mov
xchg
insb
sub
ljmp
lods
cmp
gs
inc
pop
xor
mov
sbb
mov
pop
xor
rclb
mov
lea
cld
xchg
loopne
lret
add
mov
dec
call
rolb
cmpsb
push
out
xlat
repnz
and
jne
sub
fnstenv
xchg
sub
pusha
test
jmp
iret
and
xor
in
test
mov
mov
adc
aaa
testb
mov
mov
fdivl
leave
or
das
push
out
mov
add
mov
fstp
je
sub
xchg
bound
pop
lods
sbbl
mov
out
add
aaa
into
pop
and
push
sub
pop
je
mov
lods
movb
int
sub
sbb
dec
and
adc
jae
movsl
mov
in
cmp
mov
mov
xchg
imul
pushf
mov
call
or
std
inc
pop
xor
mov
sbb
mov
cmp
ljmp
xor
rcrl
lea
pop
fbstp
movsl
stos
inc
xlat
scas
std
xchg
loopne
leave
pusha
sub
sbb
xor
jle
push
cmp
test
pop
out
xlat
lock
sub
fdivs
sub
pop
test
mov
shl
jge
sbb
shlb
cmp
test
mov
mov
adc
sub
sbb
ds
fildll
adc
rcr
enter
sbb
mov
add
mov
push
mov
fstp
jne
es
xchg
bound
pop
stos
sbbl
mov
in
aad
iret
push
and
push
daa
push
in
pop
jb
mov
stos
les
cmc
int3
xchg
sub
push
pop
testb
dec
push
push
iret
data16
mov
in
test
push
mov
mov
xchg
push
rcrl
dec
fucomip
pop
adc
aas
pop
xor
mov
sbb
stos
push
call
in
outsl
push
das
pop
ret
push
lea
pop
loopne
mov
xchg
fcomip
leave
pusha
sub
sbb
jle
push
cmp
test
lock
out
and
sub
fdivs
xchg
sub
xchg
pop
test
mov
shl
jge
pop
repnz
cmp
xchg
mov
movsb
leave
outsb
adc
sub
sbb
cmc
mov
dec
loopne
xchg
stos
mov
addr16
fdivs
enter
sbb
sub
pop
xor
insl
add
mov
pop
mov
jbe
and
inc
push
das
std
xchg
popa
ja
pop
test
lret
cld
aam
rolb
es
out
push
jo
mov
stos
ret
repz
xchg
sub
adc
testb
dec
push
data16
cwtl
jno
addr16
xor
out
test
or
push
ds
or
outsl
xchg
imul
in
dec
loopne
add
push
lret
xchg
fidivl
outsl
push
sub
dec
lea
pop
loope
mov
call
add
mov
inc
out
jns
cmp
sbbl
icebp
aad
and
sub
inc
fdivs
xchg
sub
ret
dec
iret
jecxz
adc
icebp
shrb
aaa
fwait
xor
lock
mov
movsl
enter
pminsw
sbb
cmc
mov
dec
loope
test
stos
mov
push
enter
sbb
pop
xor
cmp
insl
add
xchg
pop
mov
fneni(8087
ja
and
xchg
pusha
jne
pop
cmpsl
sbbl
cli
sarl
roll
add
dec
and
and
test
lret
cld
adc
inc
sbb
jge
xchg
jo
push
jmp
or
movsl
inc
pop
fsubrs
push
testb
add
add
push
xor
xchg
push
xchg
cmpsl
push
call
in
outsl
push
sub
les
dec
lea
pop
loop
mov
add
and
push
mov
inc
out
js
cmp
sbbb
icebp
aam
and
sub
inc
fsubrs
xchg
sub
rcrl
adc
shrb
ss
xor
lock
mov
movsl
outsb
push
jmp
cmc
mov
dec
loope
adcl
mov
push
enter
sbb
pop
xor
lods
xchg
pop
mov
fchs
ja
and
xchg
pop
je
pop
cmpsb
jg
mov
out
stc
sarl
roll
sbb
out
push
insl
and
cmpsl
mov
xchg
sub
adc
inc
sbb
adc
mov
shr
repz
movsl
inc
pop
fnstenv
data16
xchg
scas
testl
xor
imul
test
push
cmpsb
push
jmp
loop
jo
sub
pop
ss
mov
mov
add
and
push
mov
inc
call
roll
mov
and
sbb
js
es
xchg
sub
rcrb
adc
and
lock
mov
movsl
outsl
or
das
testb
adcb
mov
mov
fiadds
out
xor
stos
test
pop
mov
mov
xlat
loopne
or
stos
inc
push
sub
xchg
pop
jae
pusha
movsl
jge
mov
out
clc
iret
cmp
add
push
popf
dec
and
push
insb
and
popf
jae
or
out
xchg
sub
adc
inc
sbb
push
xchg
insb
shrl
mov
xor
mov
mov
movsl
inc
pop
fidivl
fs
xchg
scas
clc
loopne
dec
loope
add
scas
xor
imul
test
push
lea
movsl
cmp
divl
sub
les
dec
es
loop
xchg
add
and
push
mov
inc
jmp
sarl
pop
sahf
enter
shr
and
cmp
fisubrl
xchg
sub
mov
loopne
push
adc
shrb
xor
xor
aas
lock
mov
movsl
ret
fcmovu
jo
in
ret
push
testl
mov
push
lret
xchg
push
das
movsb
cmp
outsl
xchg
test
gs
jp
test
push
pop
idivl
pusha
insb
insl
lcall
xchg
inc
repnz
data16
ja
in
sbb
cmp
ds
orl
jg
lret
lahf
filds
fs
jne
jno
test
inc
test
ficompl
add
data16
addb
fldenv
out
mov
dec
out
iret
cmc
rcr
or
push
cmp
dec
loope
test
sub
lret
cmp
adc
fstps
ljmp
mov
xor
or
sub
xor
jl
fucom
aam
out
mov
out
mov
sub
imul
mov
pop
dec
fld
push
lods
dec
mov
dec
lock
fnsave
push
mov
inc
jle
repz
mov
xor
fwait
xchg
decl
mov
aad
fisttpl
test
shrb
cmp
fstps
movsl
sar
insl
xor
dec
mov
cmc
mov
in
incl
pushf
ret
fsubrp
aaa
mov
mov
push
xchg
adc
insl
mov
dec
mov
xchg
in
add
dec
fst
pop
cld
mov
push
push
icebp
dec
insb
mov
add
push
xchg
xor
mov
jb
mov
jg
in
sub
lods
and
mov
or
sti
or
aad
dec
dec
sub
movl
rclb
lock
loopne
sti
mov
sub
pop
dec
flds
loop
xchg
sub
in
nop
clc
sub
xor
in
fbstp
jns
add
scas
pop
js
pop
push
fisttpl
push
cmp
sbb
xor
mov
add
pop
ret
dec
test
mov
jb
jp
mov
mov
adc
fadd
aas
data16
sahf
icebp
jne
xor
mov
clc
add
jns
xor
mov
adc
cmpsb
pop
xchg
mov
movb
or
iret
push
add
jg
mov
mov
mov
insl
lcall
and
adc
in
pop
sbb
hlt
std
in
dec
idivl
sbb
std
in
clc
movlps
cmpl
add
cwtl
or
andl
or
ljmp
out
scas
fdivp
push
jo
inc
out
xor
cli
jmp
add
cli
in
std
ds
aad
add
mov
dec
clc
iret
pushf
pop
pop
scas
push
sub
sub
inc
xor
lret
jnp
mov
mov
and
sub
iret
cmpsl
int3
or
cld
addr16
jecxz
out
add
popa
incb
js
jb
data16
jmp
repz
lahf
mov
and
xor
sbb
mov
ds
cwtl
sarl
push
rep
push
mov
in
or
ja
jno
bt
rcrb
sub
iret
shll
sbb
sbb
or
dec
push
ds
pop
dec
or
testl
dec
das
mov
cmp
les
shlb
or
test
xor
mov
push
or
and
fidivs
push
stos
enter
stos
aaa
push
lods
and
cmp
stos
pop
pop
fstpt
outsb
lahf
data16
psubsw
out
mov
shrl
push
sbb
jg
gs
in
mov
add
mov
jmp
jae
out
adc
cmp
mov
jne
in
scas
fisubl
push
hlt
sbb
cmp
dec
mov
enter
mov
add
lret
xchg
in
lds
out
insl
lods
mov
add
pop
imul
inc
xlat
mov
sarb
adc
int3
test
pop
mov
ds
mov
jae
cld
dec
cmp
cmp
das
inc
or
mov
sbb
dec
ds
and
outsb
rcll
cltd
sti
add
xor
cltd
mov
nop
sarl
xchg
jns
call
pop
jne
aaa
and
int3
mov
dec
ss
mov
stos
stos
ljmp
test
sub
xor
fcmovbe
in
lods
rcrb
stos
pop
mull
mov
mov
mov
cmp
sbbl
es
shll
dec
lock
dec
out
adc
movsl
mov
adc
loopne
in
outsb
mov
or
xchg
dec
mov
mov
mov
xchg
mov
sub
push
je
push
mov
mov
das
clc
cld
and
in
mov
notl
jne
rcrl
insb
push
loope
add
jo
fwait
xor
sti
frstor
pop
or
dec
hlt
adc
sar
or
mov
mov
lret
or
nop
mov
jp
mov
lcall
sti
cmp
adc
xor
add
popf
push
xchg
bound
cld
mov
dec
testb
or
out
idivb
stos
loopne
sbb
xor
push
xor
and
int3
xchg
xor
and
xchg
push
cmp
outsb
or
cmp
test
mov
mov
cmpsb
mov
xorl
xor
cmp
pop
dec
ret
sti
jbe
mov
jecxz
pop
movsb
or
and
repz
das
sbbl
jnp
outsl
mov
xchg
jl
mov
shll
xchg
loop
mov
gs
je
and
out
sub
or
sbb
lcall
call
sbb
fistl
std
xor
sub
jns
out
push
jmp
arpl
in
adc
nop
inc
das
sub
sti
movsb
push
test
push
notl
sti
lahf
js
gs
arpl
shrb
ret
mov
cmp
jb
mov
jg
jp
sub
lock
bound
rol
subb
jge
insl
rclb
inc
shlb
aad
mov
loopne
xchg
jne
jne
mulb
fisubs
rclb
pop
cmp
repnz
mov
push
cmp
filds
xchg
enter
xchg
imul
and
push
push
pop
pop
cmp
loop
lods
mov
bound
aaa
mov
mov
jne
sarl
out
fnstcw
or
mov
pusha
in
outsb
ficomps
adc
pop
leave
in
mov
sub
es
arpl
sub
cmp
dec
hlt
inc
push
sbb
sbbb
jge
call
mov
mov
ret
pop
inc
sub
pop
inc
push
negb
pop
and
sub
je
dec
js
mov
cwtl
rorl
jo
addr16
daa
add
push
dec
test
ja
push
pop
adc
inc
cmp
jb
lcall
inc
arpl
mov
les
fidivs
or
iret
and
leave
and
jnp
stos
add
xor
stos
imul
push
ficomps
mov
jnp
lcall
push
mov
cmp
pop
mov
scas
push
jno
push
pushf
ds
test
sti
adc
mov
enter
jae
and
add
cmp
repnz
movsl
mov
push
pop
cmpsl
add
or
or
adc
inc
mov
fists
scas
push
push
mov
mov
in
or
cwtl
hlt
adc
or
cmp
pop
pop
fimuls
fsubrs
testl
xor
test
push
adc
rolb
cltd
dec
pop
xchg
dec
cwtl
sub
jns
jae
test
std
xchg
outsb
int3
push
iret
js
into
mov
mov
popa
mov
mov
sub
pusha
pop
ljmp
xchg
push
cmp
pop
lds
pop
ret
movsl
fisttpl
repz
roll
or
and
mov
mull
int
out
cltd
or
lods
or
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
in
movq
inc
jmp
lcall
jecxz
push
cmp
adc
mov
cmp
fildl
bound
jns
adc
std
ja
dec
jg
lret
stc
xlat
xor
stos
mov
lret
in
cmpsl
call
push
test
mov
add
dec
je
push
lahf
les
mov
cmpsb
pop
and
add
ljmp
adc
in
xchg
out
