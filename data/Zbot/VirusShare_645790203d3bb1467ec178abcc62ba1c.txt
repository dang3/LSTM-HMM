push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
mov
mov
mov
add
mov
mov
push
mov
push
call
xor
jmp
mov
imul
mov
mov
shl
mov
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
xor
jmp
push
push
mov
push
call
lea
push
mov
push
call
mov
push
call
push
mov
push
call
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
xor
jmp
push
push
mov
neg
push
push
mov
push
call
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
mov
add
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
movl
movl
movl
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
xor
jmp
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
push
push
call
mov
push
push
call
push
push
push
push
push
push
push
call
mov
movl
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
mov
add
mov
popa
pushl
xor
dec
jne
ret
xor
je
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
mov
mov
call
mov
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
add
add
xor
add
xor
add
jb
add
data16
data16
add
add
gs
jo
outsb
dec
gs
add
add
add
dec
add
outsb
add
add
xor
cmp
cmp
xor
xor
cmp
inc
add
sub
add
add
sub
add
add
add
add
sub
add
add
add
cmp
aaa
add
add
add
add
pop
add
imul
push
add
add
add
pop
add
add
add
jae
jns
jae
je
add
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
add
add
add
add
add
add
nop
xor
xor
xor
add
push
add
add
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
push
aas
and
gs
bound
popf
aas
test
adc
xor
add
test
push
xor
xor
leave
xor
bound
mov
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
dec
xor
xor
inc
xor
jg
xchg
xor
fdivs
shlb
xor
xor
xor
xor
jnp
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
xor
xorb
xor
adc
repz
out
ss
adc
sub
ss
xor
push
xor
testb
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
inc
add
outsl
arpl
gs
gs
add
outsb
popa
sub
jb
jae
inc
dec
inc
add
xor
sub
jb
jae
inc
cs
add
cmp
or
insb
sbb
outsb
adc
inc
testb
add
arpl
fisubl
add
jno
jb
pop
je
testb
add
add
iret
outsb
outsl
shll
movsb
arpl
cltd
jb
inc
testb
add
fs
xchg
dec
popa
outsb
lcall
add
add
add
inc
add
add
and
inc
add
add
and
inc
add
inc
add
add
cmp
and
arpl
gs
and
outsb
popa
cmp
jb
jae
inc
add
add
aas
add
frstor
outsb
shrl
adc
insb
testb
add
jno
arpl
je
shrb
lret
arpl
fwait
je
add
je
mov
mov
ja
add
pop
insb
inc
bound
arpl
add
add
jb
arpl
inc
bound
arpl
add
add
imul
push
imul
add
sub
pop
insl
add
jb
and
push
add
je
adc
popaw
jo
insl
insb
outsl
aad
add
frstor
outsb
fldt
or
insb
testb
add
imul
outsl
dec
gs
jo
add
add
add
movsb
pop
add
jmp
add
imul
add
imul
add
imul
add
imul
add
add
add
jmp
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
div
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
testb
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
cltd
mov
add
dec
mov
jmp
cmc
add
leave
cli
incb
loop
push
add
xchg
std
call
cmc
add
andb
add
xchg
std
call
add
add
sti
add
in
cmc
jmp
cmc
add
in
cmc
call
mov
add
popa
stc
jmp
cmc
add
add
add
dec
std
ltr
or
lcall
std
decl
std
lcall
std
ljmp
cmpsl
add
imul
decl
std
filds
add
add
add
add
add
add
add
add
fists
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
imul
adc
notb
add
imul
add
imul
add
imul
add
imul
add
imul
add
idivb
add
test
add
add
imul
adc
imul
mov
jmp
jmp
add
testb
add
pusha
popa
dec
dec
add
negb
add
jmp
or
imul
lret
add
jmp
add
imul
add
imulb
add
mov
jno
loop
bound
testb
sub
add
adc
add
daa
testb
shl
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
add
add
jmp
mov
add
adc
add
aad
add
mov
lret
add
aas
lret
add
push
lret
add
arpl
add
jae
add
scas
lret
add
lret
add
mov
add
add
mov
cmc
add
mov
cmc
add
mov
cmc
add
mov
cmc
add
mov
add
add
add
mov
cmc
add
cmc
add
mov
cmc
add
mov
cmc
add
cmc
add
add
add
ret
sbb
ret
cmp
shl
pop
ret
xor
ret
jmp
shl
add
mov
decl
push
decl
add
add
pushl
ljmp
aaa
mov
ss
incl
aaa
push
ss
ljmp
incl
cmc
add
jno
call
push
ljmp
lcall
push
lcall
call
std
cmp
std
jmp
std
mov
mov
std
fiadds
add
xchg
std
call
mov
add
cmpsl
mov
add
jmp
add
xlat
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
cltd
mov
add
imul
add
mov
add
test
mov
add
mov
add
std
pushf
add
shll
add
mov
add
pop
mov
testb
add
cmp
add
aaa
mov
testb
notb
add
lahf
mov
divb
mov
testb
add
lds
add
lds
add
pop
mov
idivb
add
xorl
add
add
or
add
cmp
add
xor
aad
testb
divb
add
icebp
lods
add
aad
add
cmc
lods
add
out
lods
add
add
stos
cmc
add
stos
cmc
add
cmc
add
cmc
add
cmc
add
stos
cmc
add
cmc
add
stos
cmc
add
test
cmc
add
test
add
add
add
lods
cmc
add
lods
cmc
add
lods
cmc
add
cmc
add
cmc
add
lods
cmc
add
lods
cmc
add
lods
cmc
add
lods
cmc
add
lods
cmc
add
mov
add
lods
cmc
add
lods
cmc
add
sub
add
sbbl
add
add
inc
mov
add
bound
add
pop
add
icebp
add
add
add
dec
add
out
pop
add
xchg
inc
add
mov
add
cmpsl
inc
add
inc
test
add
add
pop
test
add
add
iret
mov
add
mov
add
addb
out
add
out
pusha
add
aaa
imul
aas
arpl
add
add
cmp
add
dec
add
dec
inc
add
add
add
dec
mov
add
add
add
add
add
cmp
add
movzwl
add
add
add
rolb
add
rolb
add
roll
add
add
adcb
add
pop
add
add
cmpsl
add
addr16
add
test
add
add
fwait
test
add
cmpsl
add
pop
test
add
add
adc
add
add
add
stos
add
negb
mov
add
push
mov
add
dec
mov
add
dec
mov
add
and
add
sti
mov
add
mov
add
mov
mov
add
movsl
mov
add
flds
add
xchg
add
xchg
mov
neg
add
idiv
rolb
jmp
roll
or
add
and
add
pop
roll
add
cmc
add
cmc
add
cmc
add
cmc
add
cmc
add
shl
sti
mov
cmc
add
mov
cmc
add
shl
sub
cmc
add
shl
dec
shl
repz
cmc
add
shl
jae
add
add
add
cmc
add
cmc
add
shl
mov
cmc
add
cmc
add
shl
add
cmc
add
shl
stos
shl
lahf
shl
mov
cmc
add
pop
xor
ljmp
lcall
aaa
mov
mov
js
lcall
mov
jmp
mov
decl
call
add
add
jmp
mov
decl
push
mov
lcall
mov
call
ljmp
pushl
pushl
incl
cmp
incl
xor
call
cmp
pushl
lcall
xor
incl
decl
add
sbb
add
ffree
add
mov
les
add
les
add
add
cmp
add
dec
lds
add
add
popa
lds
add
add
les
add
les
add
mov
add
test
test
add
daa
stos
add
sti
test
add
insl
stos
add
pop
stos
add
add
add
les
add
les
add
add
imul
ret
add
add
add
idiv
ret
scas
ret
xchg
ret
xlat
add
divb
add
test
add
popf
aad
neg
add
test
add
fcmovnbe
add
jmp
add
not
add
xchg
roll
testb
add
pop
roll
divb
aam
notb
aam
div
roll
idiv
roll
not
roll
mul
mov
add
stc
mov
add
add
testb
imulb
mov
add
add
cmc
add
cmc
add
add
add
mov
add
add
sub
testb
mov
add
add
sub
testb
mov
cmc
add
add
cmpb
sub
testb
add
orb
testb
testb
mov
testb
mov
testb
add
addb
mov
add
addl
push
add
jmp
inc
add
orl
add
sub
add
and
add
add
adc
add
sbb
add
or
movl
add
add
add
add
sbb
movsl
add
jmp
popa
add
inc
pop
add
dec
pop
add
adc
add
dec
add
xlat
dec
add
testl
add
dec
add
add
add
xorl
out
xor
cmp
lahf
div
dec
jp
adc
push
push
sub
sbb
add
mov
pop
dec
mov
dec
cwtl
mov
aad
repz
clc
icebp
inc
cmp
addr16
or
and
insb
pop
mov
fsubrp
xor
xchg
jno
push
pushf
xor
add
adc
je
pusha
xor
adc
je
pusha
test
pop
arpl
mov
add
jg
loop
push
daa
push
fwait
sub
dec
add
add
imull
out
sub
frstor
jge
and
sub
pop
xchg
mov
out
sbb
hlt
cmp
dec
repz
xor
ja
or
mov
push
mov
mov
movsl
cli
fs
sub
xchg
lahf
and
std
jge
sbb
dec
lock
fdivs
add
add
add
adc
lea
arpl
jae
adc
shrb
push
in
popf
in
out
jo
adc
notb
jae
jecxz
ret
adc
lods
jle
imul
notb
jo
inc
mov
mov
dec
notb
outsb
popf
in
outsb
jo
adc
notb
add
sbb
pop
jae
push
push
notb
add
cmp
mov
dec
mov
add
sbb
xchg
inc
lea
adc
add
cs
js
std
lahf
xchg
inc
insl
push
rclb
mov
add
scas
js
gs
sbb
pop
rclb
xchg
mov
in
in
jbe
xor
xchg
dec
movsb
mov
or
add
add
jp
fimull
iret
adc
add
scas
outsl
jns
loopne,pn
les
iret
adc
adc
jge
lods
mov
mov
add
inc
jge
add
adc
cwtl
add
and
add
adc
add
adc
add
adc
add
pusha
mov
inc
add
add
ljmp
cmpsl
push
dec
addr16
out
rclb
mov
movsl
std
pushl
call
add
mov
push
gs
add
in
ds
mulb
jns
adc
xor
pop
mov
add
insb
jecxz
out
shl
dec
lret
add
adc
sahf
cmp
rolb
add
pop
push
mov
xor
push
cmp
mov
ss
mov
sbb
inc
mov
pop
xchg
cmp
mov
int3
mov
out
add
push
les
push
dec
mov
mov
pop
dec
std
incl
movsb
add
test
scas
push
xchg
xor
out
xchg
lret
cs
jmp
incb
add
xor
in
repnz
add
add
xor
in
add
add
add
add
mov
in
lock
add
add
cld
mov
in
add
add
add
add
mov
icebp
add
add
add
add
mov
icebp
add
add
jbe
dec
add
add
testb
add
add
add
add
add
add
hlt
add
jmp
add
or
inc
add
cmc
add
jmp
stc
add
jmp
std
lock
std
push
add
clc
call
std
adc
jmp
clc
or
jmp
std
and
jmp
in
add
jmp
std
inc
add
cli
loopne
stc
clc
push
add
in
cmp
jmp
cli
jo
fiaddl
add
clc
sbb
jmp
std
sbb
jmp
clc
out
call
fisttps
sub
fisttps
or
iret
or
add
pop
add
lahf
or
mov
pop
sub
pop
or
pop
or
or
add
and
pop
or
add
add
add
test
pop
or
or
or
pop
add
or
pop
or
push
add
or
or
fisttps
add
flds
pop
mul
or
or
out
mov
mul
or
out
clc
not
add
mul
or
out
adc
mov
mov
mul
or
add
mul
or
mul
or
neg
add
mul
or
out
and
out
movsb
mul
or
mul
or
mul
or
not
add
mul
or
out
sbb
out
xchg
idivb
or
add
or
jmp
add
add
or
or
jmp
or
add
or
or
add
cmp
jmp
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
jmp
or
add
add
add
or
add
or
add
repnz
add
std
pop
add
std
sbb
jmp
add
add
mov
call
std
sub
jmp
in
or
jmp
std
dec
add
repnz
dec
cmc
add
jmp
std
icebp
call
in
jg
fcomi
sti
call
std
adc
jmp
hlt
push
add
std
popa
add
std
and
jmp
in
add
jmp
std
inc
add
repnz
stc
add
add
add
jmp
pop
pop
sbb
xchg
add
cmp
filds
jns
filds
cmp
iret
or
adc
filds
imul
iret
or
or
lahf
push
mov
lahf
push
dec
add
incl
add
push
adc
add
jne
pop
push
xor
add
or
add
add
add
and
add
add
add
push
inc
add
or
add
mul
or
out
sbb
idivb
or
out
cmp
not
add
mul
or
out
sub
mul
or
mul
or
out
cli
not
add
mul
or
add
mul
or
divb
and
out
jae
out
xor
out
neg
add
mul
or
out
and
out
cmpsb
mul
or
mul
or
mov
jmp
add
add
or
add
or
fldl
xor
add
or
add
add
add
or
jmp
or
add
or
add
or
jmp
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
call
in
aas
add
in
out
stc
testb
jmp
in
idiv
call
add
add
jbe
arpl
jmp
in
pop
add
in
mov
sti
idiv
call
in
daa
add
in
xchg
add
std
pop
add
std
xchg
jmp
ljmp
jmp
in
lock
in
push
add
jo
call
in
adc
jmp
push
or
jmp
dec
or
add
mov
pop
or
add
or
add
add
add
add
add
or
add
add
add
xlat
cmp
fisttps
js
iret
or
add
add
adc
fisttps
push
add
add
or
lahf
or
add
xlat
add
lahf
or
or
mov
xlat
sub
add
add
je
dec
or
dec
add
decb
out
fs
or
out
test
mul
or
out
jmp
mul
or
or
out
cltd
divb
or
or
out
fdecstp
fsin
push
mul
or
or
out
mov
mul
or
add
mul
or
or
not
cld
add
out
push
mul
or
imulb
and
out
jb
add
or
jmp
cld
cld
add
or
add
or
jmp
or
add
or
or
stc
cld
lock
or
jmp
cld
xor
jmp
or
add
sbb
jmp
cld
in
jmp
or
jmp
or
add
or
or
jmp
cld
repnz
or
add
or
add
or
add
fisubrl
add
in
dec
add
in
or
jmp
dec
add
jmp
in
sbb
jmp
std
cli
call
in
cmp
jmp
add
add
in
stc
or
add
in
xor
jmp
cld
jne
fucomp
pop
add
in
push
add
in
adc
jmp
lret
call
in
and
jmp
std
add
jmp
popf
inc
add
xchg
aam
dec
std
add
jmp
xlat
adc
dec
xlat
addb
push
pop
add
jo
dec
xlat
xor
pop
aam
dec
push
or
dec
xlat
pusha
add
and
pop
aam
add
xlat
add
addb
xlat
inc
add
aam
add
push
push
add
xlat
pop
add
xlat
sbb
xchg
add
pop
cmp
iret
js
iret
cmp
rolb
into
pop
adc
iret
push
add
or
mov
dec
add
xlat
or
add
mul
sti
push
mul
sti
adc
mov
add
mov
sub
out
je
out
xor
out
lret
or
mul
sti
and
out
stos
mul
sti
add
out
test
out
inc
mul
cld
ljmp
sti
pop
mul
sti
sbb
out
lcall
sti
jl
out
cmp
out
aad
pop
mul
sti
insb
add
add
out
sub
out
mov
mul
sti
mov
add
sti
inc
add
cli
mov
stc
or
add
sti
and
jmp
sti
xor
fimull
adc
add
sti
add
jmp
or
add
sti
aam
jmp
cli
push
add
sti
hlt
add
sti
je
jmp
cli
adc
stc
or
add
sti
pushf
add
sti
add
add
jmp
or
add
sti
or
jmp
or
add
sti
dec
add
sti
faddl
jmp
jmp
popf
jnp
jmp
mov
add
out
add
add
insl
idiv
sub
adc
jmp
dec
pop
add
dec
mov
call
sub
add
sub
add
sbb
xchg
jmp
or
add
out
stc
call
in
out
call
out
arpl
jmp
int
add
int3
scas
add
out
jmp
call
lahf
lret
add
lret
push
add
lret
dec
add
clc
add
cmp
add
add
adc
add
ds
add
inc
clc
add
clc
inc
add
add
clc
add
inc
clc
add
push
clc
and
dec
clc
add
cmp
clc
add
adc
addb
clc
push
add
add
addb
stc
sbb
aam
add
mov
stc
add
sar
pusha
add
stc
add
or
iret
or
cmc
stos
or
imulb
or
add
add
mov
add
into
or
notb
or
test
adc
leave
add
test
pop
not
add
mul
add
not
add
neg
add
mul
add
imulb
add
not
add
not
add
not
add
not
add
not
add
not
add
not
add
neg
add
neg
add
neg
add
neg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
loope
out
push
jecxz
std
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
ljmp
add
cmc
add
in
add
in
cmc
add
in
add
out
cmc
add
out
add
out
cmc
add
out
add
icebp
cmc
add
icebp
cmc
add
loopne
add
loopne
add
repz
add
repz
add
loop
add
loop
add
cmc
cmc
add
in
add
add
add
in
add
fdiv
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
add
dec
dec
dec
dec
lcall
decl
lcall
incl
add
add
add
add
add
add
or
mov
or
xchg
add
add
add
add
add
add
add
or
xor
pop
add
add
add
incl
add
incl
add
xchg
add
notb
add
divb
or
mov
or
xor
add
testb
testb
testb
or
add
add
test
or
int
or
dec
add
negb
add
imul
add
imulb
or
cmp
add
idiv
add
idivb
or
or
add
idivb
add
test
or
dec
add
testb
add
add
out
add
add
add
incb
out
add
add
add
incb
incl
out
add
out
add
add
add
add
add
incb
testl
out
add
out
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
out
add
add
add
div
clc
ljmp
clc
jmp
cmc
clc
jmp
clc
jmp
repnz
incl
cli
clc
incl
cmc
clc
incl
clc
push
cmc
clc
pushl
clc
pushl
repnz
pushl
repnz
pushl
clc
push
cmc
clc
out
cmc
clc
ljmp
clc
lcall
cli
clc
lcall
cli
clc
decl
add
add
clc
aas
cli
clc
mov
cli
clc
jg
clc
ljmp
cli
clc
ljmp
ss
add
add
add
add
add
add
add
add
add
cld
pop
add
or
ret
add
add
add
add
add
or
jb
or
loop
or
bound
or
loop
or
add
add
add
add
add
add
std
pop
add
std
pop
add
std
pop
add
pop
add
cld
pop
add
cld
pop
add
or
or
xchg
add
idivb
or
int3
add
notb
test
or
lret
testb
testb
imulb
or
push
or
ljmp
add
add
ljmp
imulb
add
imulb
add
or
dec
add
test
or
lret
not
add
not
add
mulb
or
bound
notb
add
notb
add
or
mov
rolb
out
add
add
add
incl
inc
add
add
add
add
add
incl
addb
add
add
add
add
add
incl
jb
out
add
add
add
add
add
add
add
add
add
add
add
incl
push
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
scas
repnz
movsl
cmc
idiv
int
add
cmc
idiv
decl
idiv
inc
cmc
idiv
or
cmc
idiv
repnz
test
idiv
std
cmc
idiv
cmc
hlt
stc
jge
stc
pushl
stc
lcall
hlt
stc
lcall
cmc
stc
stc
call
hlt
stc
lcall
stc
call
stc
jge
stc
pushl
stc
std
cmc
stc
push
hlt
stc
push
cmc
stc
in
add
add
stc
jmp
stc
lcall
stc
jmp
std
or
and
or
nop
add
add
or
and
or
inc
decl
add
decb
add
std
or
add
or
jo
or
cmp
add
cld
or
lock
add
or
push
decl
add
decb
add
decl
add
decb
add
decl
add
decb
inc
add
add
decl
add
or
adc
or
cmp
add
incl
add
std
push
add
stc
add
idivb
add
imulb
add
test
pop
testb
pop
not
add
notb
add
test
pop
testb
pop
mul
add
mulb
add
notb
add
not
add
negb
add
add
add
mov
add
imulb
pop
test
pop
testb
or
push
add
notb
add
divb
add
divb
or
testb
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
icebp
sti
add
cli
add
loope
clc
pop
loope
clc
pop
lock
add
testl
jecxz
testb
jmp
or
add
or
sti
testb
repnz
or
ljmp
repnz
cmc
or
icebp
hlt
or
jmp
or
or
icebp
or
fucomp
or
cmc
add
or
lock
or
in
clc
or
or
add
add
lcall
push
cltd
adc
push
imul
push
push
pop
adc
push
cmp
push
push
dec
adc
push
pop
adc
push
pop
adc
push
sbb
push
push
sub
push
push
sbb
push
push
sbb
push
push
cmp
push
push
or
push
push
sbb
push
push
sbb
prefetcht1
psubsb
psubusb
psubusb
adc
bswap
adc
psubusb
sldt
add
adc
sets
push
adc
sets
pfrcpit1
adc
jmp
mov
psubw
add
out
adc
adc
mov
adc
add
push
pop
loope
push
pop
jmp
rcrl
sbb
add
push
add
mov
sbb
mov
sbb
mov
sbb
sbb
add
add
rcrl
sbb
sbb
or
sbb
cld
mov
sbb
mov
sbb
mov
sbb
sbb
fst
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
ficompl
and
sbb
cmc
pop
cli
sbb
pop
repnz
pop
ljmp
pop
ficompl
adc
std
pop
add
in
pop
repnz
pop
ljmp
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
aam
sbb
int3
sbb
cld
sbb
in
sbb
sbb
in
push
pop
icebp
add
add
pop
or
out
or
in
or
faddl
or
idiv
push
push
out
repnz
adc
add
adc
clc
add
adc
pop
adc
sti
out
adc
out
adc
out
adc
loope
adc
or
adc
or
adc
add
adc
push
leave
push
push
push
test
add
test
adc
pop
pop
test
pop
pop
test
pop
pop
cmpsl
sbb
sbb
sbb
negl
sbb
sbb
sbb
sbb
inc
sbb
sbb
sbb
push
sbb
sbb
pop
sbb
inc
pop
sbb
notb
sbb
notb
sbb
es
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
and
sbb
sbb
push
sbb
cmc
push
sbb
add
add
scas
sbb
in
scas
sbb
in
lahf
sbb
fcompl
sbb
or
lcall
sbb
sbb
std
scas
sbb
in
scas
sbb
in
sahf
sbb
fstpl
add
imulb
add
mulb
add
mulb
add
mov
add
negb
add
imulb
add
add
add
mov
add
mov
add
test
add
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
testb
jmp
lock
jmp
testl
add
icebp
add
jmp
fldl
add
xchg
mov
jmp
aad
add
cmc
add
ja
add
add
add
or
inc
and
cltd
shlb
es
rcrl
sbb
fdivrl
mov
loopne
sbb
jb
insb
out
outsl
jle
sbb
js
jp
or
adc
add
in
mov
test
enter
popa
daa
aam
adc
roll
pop
and
std
add
add
int3
mov
add
jmp
push
cli
add
or
pop
adc
dec
repz
pusha
aad
repnz
nop
enter
aaa
or
movsl
and
xchg
mov
popa
lret
mov
lods
cmp
xlat
xor
pop
filds
call
fdivl
cmp
add
cmpsl
sub
shlb
rolb
add
mov
scas
mov
lret
mov
mov
mov
jnp
push
mov
fimull
std
stos
or
aaa
outsl
inc
push
mov
out
dec
cmp
add
jecxz
pop
rcll
aad
and
out
outsb
mov
test
mov
into
or
insb
or
fwait
push
pop
xor
push
add
test
add
xchg
xchg
call
push
popf
sub
and
xchg
jge
add
mov
xchg
lock
pusha
negl
sub
add
lods
mov
push
jl
mov
sbb
and
cmp
test
inc
inc
pop
push
dec
sti
jl
cmp
hlt
lods
int
pusha
dec
dec
push
xchg
add
add
hlt
push
rolb
scas
sub
inc
lods
filds
in
cs
arpl
cmp
add
add
inc
scas
or
aad
sti
dec
inc
mov
or
int3
sub
jbe
and
test
pop
into
out
pop
jno
xlat
sub
pop
shlb
fisubrs
insb
loop,pn
add
inc
je
dec
fnstcw
leave
je
in
push
add
lcall
outsl
je
sub
ljmp
fiaddl
add
jae
and
gs
and
xchg
jp
mov
or
scas
mov
jge
cmp
jb
push
jno
push
imul
push
cmpb
add
mov
outsb
test
stos
rorb
jecxz
frstor
int
stc
out
mov
pop
lret
pusha
mull
jno
shll
lea
dec
outsb
adc
mov
aas
add
mov
imulb
or
push
sbb
mov
call
data16
pusha
inc
or
test
loopne
imul
add
mov
jo
sub
dec
shrl
insb
mov
or
cmpsb
cmp
popf
pusha
or
add
mov
mov
test
mov
popf
sub
mov
shlb
xchg
mov
fisubrs
mov
pusha
push
scas
nop
insl
hlt
inc
std
or
add
cs
pop
idiv
push
add
add
sahf
xchg
fbld
add
pusha
add
addb
inc
popf
pop
mov
sub
jp
cmpsb
and
ja
mov
stos
dec
cmp
sbb
out
mov
sbb
sti
sbb
xchg
sbb
cmp
sbb
xchg
movsl
in
pusha
call
add
add
leave
popf
xchg
inc
sub
idiv
xchg
cmpsl
idiv
and
xor
daa
dec
ret
ds
iret
scas
lods
stos
lret
xor
inc
mov
xchg
je
movsb
xchg
es
insb
xor
dec
je
arpl
ja
mov
push
insl
and
ffreep
mov
adc
fsubs
pop
adc
mov
sti
pop
jmp
add
add
pop
push
enter
daa
push
mov
ja
ret
add
sub
cmc
add
test
push
sbb
fstp
xor
sub
insb
fs
imul
nop
xchg
inc
dec
push
xor
enter
shll
sbb
lods
cli
out
lods
mov
roll
xchg
fcoms
cmc
repz
add
dec
inc
out
popa
add
scas
cs
pop
mov
adc
cwtl
sbb
jns
add
dec
add
adc
aas
ja
stos
adc
mov
aam
add
idivb
call
lahf
cmpb
test
addr16
aam
pop
incb
sbb
popa
pop
fwait
ret
mov
push
scas
jo
add
test
sbb
fildll
sub
aad
push
std
cld
jmp
in
stc
inc
sbb
mov
imul
sub
int3
xchg
sbb
adc
outsl
lahf
loope
jle
add
shrl
loop
sub
and
add
mov
mov
xor
cltd
outsb
fidivrs
lret
call
add
push
adc
outsl
in
xchg
call
jne
cmp
xchg
jae
loopne
sub
sub
and
mov
pop
aaa
cmp
pop
xchg
bound
decb
iret
fcomps
cmp
mov
xor
movsl
das
sbb
jns
inc
pop
mov
dec
add
add
add
and
jl
push
push
test
dec
dec
mov
jnp
or
xor
insl
sub
inc
out
mov
jne
lahf
dec
movsb
testl
shlb
and
lahf
lret
push
sub
negl
mov
push
dec
cmp
push
flds
add
mov
cs
push
test
incb
mov
rcl
mov
mov
addl
lcall
cmpsb
test
jns
cmp
cwtl
and
pop
mov
out
scas
adc
or
fsubrs
scas
shll
repz
hlt
imul
inc
ja
enter
sbb
mov
add
add
add
daa
inc
jno
sbb
push
lea
xchg
mov
sub
add
xor
daa
add
add
mulb
repnz
scas
insl
or
test
hlt
mov
mov
mov
gs
xchg
flds
inc
jg
mov
rcrb
cmp
cmp
push
or
cld
flds
add
push
mov
add
test
mull
rep
mov
shrl
ret
arpl
ficoml
mov
call
jbe
dec
mov
add
sti
pusha
outsb
fsubrp
jne
cltd
out
fstl
icebp
cmc
cli
inc
int3
or
mov
sbb
daa
xchg
jno
and
insb
mov
movsl
push
into
xor
xchg
mov
loopne
jb
xor
lea
jge
das
dec
aad
in
out
push
lods
jmp
repnz
jmp
sub
sub
mov
subb
adc
insl
popf
xchg
add
shl
push
in
ret
cmp
sbbb
xlat
inc
and
into
in
lahf
dec
mov
add
fbld
jnp
out
mov
sub
js
popw
cmp
sub
xor
xchg
mov
insb
into
aad
jne
inc
adc
inc
cmc
mull
push
cmpsb
in
adc
ljmp
in
insb
dec
icebp
movsb
push
cmp
leave
cltd
mov
mov
lods
ror
mov
adc
lds
mov
xor
jo
adc
imul
cld
pop
xchg
or
inc
cmp
lds
xchg
inc
testl
jbe
mov
pop
pop
and
pop
std
incl
ret
mov
inc
add
inc
or
hlt
ret
lret
push
pop
fmuls
xchg
push
enter
subl
add
xchg
ret
push
sbb
in
xchg
fmuls
add
inc
pop
or
or
or
mov
mov
lock
and
enter
outsl
imul
aaa
mov
add
dec
cmp
lds
jecxz
repz
ljmp
jp
cli
inc
dec
cs
xlat
mov
xor
or
add
or
cltd
inc
or
in
mov
repz
adc
out
pushf
jmp
cwtl
pop
sbb
adc
into
xchg
movb
sbb
repz
sahf
pop
fldl
fldl
dec
and
and
push
in
loopne
loop
mov
loopne
mov
loope
jo
fucomi
leave
pop
fldt
std
rcr
cmp
add
add
sub
inc
aam
mov
sub
sub
xor
mov
clc
xor
sub
das
ret
cs
mov
sub
mov
push
enter
outsb
lods
daa
ljmp
movb
mov
cld
jns
lods
mov
insb
data16
insl
cmpsl
mov
outsb
nop
push
outsb
add
add
add
push
daa
lock
mov
loope
push
bound
pop
adc
iret
cmp
pusha
cwtl
mov
pop
gs
nopl
loop
insb
adc
dec
neg
or
lock
dec
addb
dec
cmc
adc
dec
and
dec
jnp
dec
dec
test
mov
jg
inc
jle
incl
pop
in
aas
inc
pop
movb
mov
add
and
sub
icebp
push
clc
add
push
mov
jne
mov
push
push
ret
add
cmp
idivb
ljmp
pop
rclb
pop
or
movsb
pop
mov
pop
mov
outsl
pop
or
pop
xor
enter
add
loop
and
arpl
cmp
je
out
add
sbb
cmp
adc
jecxz
or
mov
sbb
jl
rdtsc
out
stos
fldl
imul
pop
rcl
ficompl
xchg
rclb
push
leave
mov
sub
mov
int
pop
scas
bound
ret
out
xchg
dec
inc
xchg
or
loopne
lea
movsb
dec
add
add
inc
js
imul
lods
jp
sub
mov
jno
pop
test
sub
les
loope
mov
mov
mov
lret
and
push
pop
xchg
sar
mov
rclb
xor
iret
cmp
adc
stc
movsl
inc
mov
pop
fisubrl
mov
jb
bound
je
pop
roll
add
add
mov
das
sub
mov
stos
push
jo
add
ss
push
mov
lea
nop
xlat
inc
sbb
popl
push
pop
pop
xchg
inc
test
ficoms
sub
and
mov
cmpsb
popf
or
out
sub
sbb
scas
lcall
add
xor
mov
fwait
hlt
lea
jns
popl
pop
aas
mov
std
mov
xchg
dec
sub
sbbb
lds
lret
test
insl
or
dec
stos
lahf
test
add
stc
gs
imul
mov
scas
xchg
lods
sub
repnz
lods
daa
jge
cmpsl
sbb
cmpsb
add
add
out
movsb
ficomps
mull
inc
popa
jl
push
mov
mov
movsb
add
mov
roll
mov
dec
btr
fmuls
mov
mov
and
mov
mov
pop
mov
notb
sub
add
pushf
icebp
jno
in
jp
imul
imul
cmpl
or
cwtl
mov
sub
popa
lods
je
push
mov
repz
pop
cmp
inc
je
movsb
fidivrs
fwait
lods
xor
les
sbb
jb
or
into
mov
and
jecxz
pop
movsb
leave
aas
mov
add
add
lods
iret
fsubrl
jae
add
xor
dec
fmull
xlat
jo
popa
mov
cmp
sub
push
sbb
out
faddl
js
xchg
iret
test
sbb
mov
jo
xchg
mov
jns
jmp
pop
outsl
repz
xor
mov
inc
cltd
dec
fwait
or
dec
rcl
pop
cmp
cmp
jg
add
add
and
stos
in
ss
les
aad
pop
aad
sub
arpl
and
out
iret
cs
mov
jnp
xchg
adc
lea
aam
cmc
lcall
std
xor
pop
popa
mov
popf
lret
icebp
pop
mov
mov
or
in
stos
imul
insb
push
ret
add
add
imul
xor
ret
dec
jmp
push
jae
mov
popa
sub
cmp
inc
pop
xchg
mov
out
es
add
mov
push
add
add
add
insl
mov
insb
lea
movsl
xor
andl
sahf
insl
xchg
dec
ja
cmp
lcall
fcoml
mov
pop
clc
or
add
xor
dec
push
push
iret
icebp
cmpsb
xor
xchg
cmp
inc
mov
repnz
test
jno
scas
dec
leave
iret
cmp
arpl
aas
imul
shrl
push
mov
mov
in
shl
pop
pop
jle
dec
cli
sbb
div
mov
scas
aaa
loopne
inc
cmp
out
cmp
call
ss
add
add
push
pop
and
insl
mov
mov
hlt
sti
jmp
and
xchg
mov
stos
xor
sub
in
fidivrs
push
data16
in
add
push
mov
les
xor
xchg
ret
or
cmp
imul
cmc
mov
push
and
xor
popf
jl
loope
int
cld
mov
add
add
sbb
insl
shrl
subl
cmp
pop
dec
jle
cmpl
in
cli
fmull
sbb
aam
adc
cmp
mov
rolb
popf
loop
mov
shlb
mov
xchg
rolb
sub
in
mov
gs
xchg
ret
fildll
out
cmc
jb
add
add
ljmp
cmc
mov
insb
lock
inc
dec
insl
sub
add
ret
hlt
push
pusha
inc
adc
jb
lods
bswap
or
clc
out
push
cmp
std
sub
mov
xchg
into
je
aas
fcoml
mov
fs
or
clc
mov
outsb
inc
ret
lret
loop
sahf
fs
shlb
pop
add
add
nop
sbb
lret
ja
jbe
xchg
bound
cmp
jo
xor
sahf
add
nop
loopne
pop
cmpsl
xor
adc
aas
add
addl
mov
pop
cmp
call
icebp
incb
aam
mov
or
jle
inc
jg
lcall
cld
mov
loope
lret
push
sbb
loope
cwtl
adc
mov
cmpsl
dec
push
in
lret
or
ret
mov
test
and
scas
lahf
ss
dec
icebp
gs
adc
add
rorl
xor
mov
push
cltd
jmp
shll
out
fildl
add
popl
insb
mov
dec
leave
or
sbb
sar
add
divb
xor
or
and
insb
stos
sub
nop/reserved
movsl
jecxz
and
les
mov
jmp
jle
push
dec
sbb
add
pop
repz
push
out
add
jp
inc
dec
gs
add
add
mov
mov
lcall
mov
sar
outsb
das
lds
roll
jae
aas
movsl
fldl
lret
add
mov
insb
or
mov
sub
leave
popf
sub
ss
mov
dec
and
mov
incl
mov
or
pop
fwait
sub
and
lea
inc
add
add
add
xor
lds
aad
iret
mov
stos
cmp
mov
xor
enter
pop
dec
mov
cltd
mov
lock
sahf
scas
cmpb
icebp
mov
and
pop
adc
adc
adc
stos
push
pop
out
lahf
addl
popa
and
push
pusha
lock
jge
out
add
dec
pop
xchg
pushf
movsl
shll
enter
cltd
xor
cltd
add
xchg
sbb
jmp
mov
pop
loope
xchg
jns
pop
add
jmp
pusha
bound
das
fsubrs
xchg
xchg
in
std
movsb
jnp
add
ret
push
mov
inc
jmp
ljmp
sbb
dec
add
add
push
jl
adc
dec
gs
xor
and
cmp
je
cmp
loop
dec
movsl
inc
push
pop
xchg
xlat
imul
dec
fs
sti
imul
sub
mov
and
mov
bound
mov
gs
add
xor
jl
xlat
add
mov
or
push
push
pop
and
sub
gs
sbb
jmp
and
imul
leave
pop
pop
mov
adc
lods
test
jo
cmp
ja
pop
pop
or
cld
pop
adcl
push
mov
stos
dec
loop
or
rorb
mov
dec
add
mov
loopne
lret
bnd
mov
roll
dec
imul
or
jbe
add
add
imul
gs
out
movsb
sub
mov
jle
dec
imul
enter
lock
push
mov
or
int
fnstcw
mov
and
push
dec
lcall
js
aas
scas
xchg
test
sarl
das
add
mov
sub
sar
xor
add
out
jle
testl
notb
pusha
xchg
adc
mov
fcomps
sub
sbb
push
mov
jg
int3
fisubrl
movsl
stc
or
or
ljmp
pop
fdivrs
adc
ss
popf
es
xchg
xchg
cmpsl
je
ret
xor
mov
ret
sbb
std
add
add
mov
add
ficoml
test
lods
pop
test
call
subb
subb
sub
cmp
pop
mov
mov
arpl
and
rcl
pop
pop
loop
pop
push
mov
enter
push
das
push
int
inc
es
test
ja
divl
pop
out
imul
add
inc
or
lret
or
popf
jmp
fldt
roll
into
inc
testb
mov
dec
pop
add
push
mov
inc
sub
xchg
mull
push
or
sbb
mov
jp
push
push
mov
or
stos
cmp
orb
orb
loop
iret
dec
mov
push
repnz
ret
push
xchg
add
add
mov
mov
repz
push
gs
mov
filds
lods
addr16
jbe
jp
dec
scas
pop
sbb
hlt
in
and
mov
mov
xchg
add
or
cmc
lret
add
testb
out
out
mov
loopne
mov
imul
cmp
cs
jp
inc
push
or
mov
add
add
std
jae
push
xchg
loop
and
in
cmp
es
mov
shll
push
cwtl
cmc
add
inc
mov
imul
sub
lahf
jmp
nop
fisubrl
add
sub
sbb
mov
fisubrs
lcall
pop
cmpsl
cmc
loop
rolb
mov
add
jge
cmpsb
add
out
inc
test
cmp
xor
pop
stos
and
or
imul
mov
out
repnz
stc
sub
rcl
insb
mov
xlat
repnz
loopne
mov
add
xor
mov
shll
out
pusha
xor
push
dec
sti
fistpll
mov
jns
xor
jns
add
add
sbb
push
sub
cli
dec
add
fldl
xchg
xlat
sbb
mov
add
andl
ret
lds
in
cmpsl
mov
roll
sbb
dec
loope
bound
and
and
aas
ds
push
xchg
adcl
adc
add
and
sub
xchg
imulb
or
or
mov
popa
test
std
adc
mov
loop
pop
jge
imul
pop
adc
or
pop
mov
xchg
cwtl
je
push
mov
lahf
adc
data16
xlat
icebp
dec
std
xchg
test
loopne
jae
iret
fsubs
icebp
adcb
cld
mov
popa
cmp
bound
sub
into
js
mov
inc
popa
movsb
cld
sbb
movsb
icebp
sub
loop
mov
inc
add
sub
iret
dec
movsl
mov
xor
sbb
xchg
jns
mov
icebp
dec
pop
dec
stos
or
rol
roll
pop
cli
out
pop
sbb
fstps
js
sahf
mov
cmpsl
xchg
lcall
ret
add
jl
sub
ret
inc
adc
ret
aaa
sbbl
roll
dec
add
pop
jmp
jl
add
insl
sub
adc
mov
cmp
frstor
fstpl
nop
loop
adc
rcrb
pop
shrl
adc
push
and
xor
xchg
pop
lea
inc
add
add
dec
jmp
gs
scas
imul
and
or
sbb
cmp
mov
sub
dec
mov
mov
sub
and
in
sub
movsb
fnstcw
rorb
lea
imul
xorl
jnp
daa
imul
or
cmpl
sti
nop
and
add
add
push
adc
xor
jbe
xchg
out
loopne
outsb
call
xorl
fidivl
dec
in
pop
out
testb
out
push
test
rorl
or
jo
xchg
cmp
fsubl
imul
xchg
les
xchg
inc
sbb
test
add
stc
rorb
lret
sbb
les
adc
repz
add
stc
cmpsb
jnp
icebp
xchg
mov
xor
in
sbb
xor
and
push
dec
popa
movsb
dec
add
jle
mov
mov
sub
jno
movsb
add
addr16
inc
push
or
sbb
ret
cmp
loope
cmc
xor
dec
nop
fists
mov
fs
sub
fwait
jnp
sbb
add
push
or
mov
lea
push
shlb
dec
fsubl
mov
jge
leave
mov
mov
inc
add
xor
rorl
push
and
mov
shll
cld
fwait
dec
mov
pusha
nop
jae
sub
push
jmp
lds
jmp
add
add
out
cld
push
lods
out
xor
in
jbe
dec
in
or
hlt
inc
dec
fidivs
jae
in
loope,pn
add
fisttpl
push
repz
or
fnstcw
cmp
in
cmpl
sub
scas
sti
stos
shrl
fwait
add
test
add
xchg
enter
fadd
fisubs
faddl
add
xor
adc
outsl
shll
ljmp
popf
dec
shl
loopne,pt
sahf
aam
ret
mov
adc
cmp
ja
or
clc
xor
sbb
push
push
dec
push
outsl
add
push
ret
ss
fwait
test
into
sarb
mov
dec
imul
xchg
add
mov
sub
mov
fisttpll
add
lods
and
jnp
bound
adc
hlt
ficomps
push
jns
inc
out
or
repz
inc
sub
ret
and
lcall
sarb
negl
xor
mov
dec
sub
push
fwait
inc
imulb
cmp
call
roll
push
add
add
lcall
stos
cld
inc
test
stc
mov
mov
adc
paddsb
mov
cmp
mov
sbb
fdivs
pop
xlat
sub
add
imul
lock
rclb
pop
movsl
arpl
out
sub
add
test
pop
das
sarb
leave
push
sub
inc
and
mov
and
sub
jp
cmp
push
xor
negl
push
dec
mov
je
lret
mov
inc
call
cltd
mov
les
mov
lcall
push
mov
add
fsts
or
cld
orb
cmpsl
dec
or
or
push
cmpsl
add
cmp
push
jae
imul
sbb
add
sarb
mov
push
arpl
adc
in
popa
jns
xchg
dec
lret
mov
cmpsl
dec
lock
movl
mov
sub
pop
sbb
mov
jne
add
add
cltd
dec
pop
xor
jg
jbe
and
cmp
jg
mov
pop
jecxz
int
repnz
push
add
js
push
aam
loop
jmp
xor
shrb
call
out
jae
fdivs
pop
loope
add
pop
into
xor
push
mov
std
adc
add
push
sbb
push
xchg
aas
dec
dec
aam
int3
dec
adc
push
push
andb
lret
scas
test
or
jnp
push
mov
icebp
sbb
push
je
add
rcrl
flds
mov
xchg
mov
push
cld
mov
fadds
es
sub
push
popf
add
cmpb
add
add
add
sbb
adc
jle
xchg
xor
add
jg
mov
and
iret
pop
stc
or
loope
adc
nopl
dec
adc
dec
je
dec
and
push
fmull
push
sbb
daa
adc
int3
mov
add
push
pop
movsb
repz
inc
popa
inc
and
push
ljmp
add
mov
test
xchg
jle
ds
popf
out
mov
ja
xchg
fst
mov
and
test
bsr
ljmp
arpl
mov
or
cltd
aas
ret
push
inc
test
hlt
cmp
cmpsl
lds
mov
sub
sbb
cli
jg
add
add
pushl
mov
adc
ficompl
int3
in
jmp
push
sbb
cli
mov
out
adc
mov
jno
or
jl
cmp
dec
add
mov
popa
fs
cmc
xchg
and
mov
mov
clc
xor
adc
std
xlat
sahf
sbbl
adc
inc
jns
xchg
add
add
enter
lods
fsubl
inc
sub
out
and
cld
in
adc
sti
fcomps
sahf
and
jbe
inc
iret
lret
daa
jle
leave
scas
ss
ds
xchg
enter
addr16
mov
shlb
push
aaa
imul
out
loop
call
xchg
mov
nop
dec
pop
or
sub
mov
jbe
add
add
out
xlat
or
jg
clc
mov
aad
xor
insl
mov
outsb
negb
inc
cmpsb
jge
mov
rol
fsubl
mov
out
sbb
push
jg,pn
repz
ret
jns
popl
push
pop
rorl
aas
scas
mov
mov
into
pop
cmp
test
add
stc
movsl
incl
xlat
inc
pusha
jb
movsb
jo
inc
and
cmpl
out
sar
xchg
and
lock
testl
sbb
iret
mov
out
xchg
imul
incl
mov
and
out
sbb
xchg
or
inc
fisttpll
outsb
mov
lock
rcll
add
sahf
jp
clc
je
and
out
das
rorl
enter
jnp
das
pop
rcrl
mov
daa
mov
int3
es
add
je
mov
ret
xor
leave
nop
roll
aas
push
pushf
mov
xor
jmp
ss
or
dec
jle
push
add
add
cwtl
and
testl
shl
sti
and
and
dec
cmc
inc
jb
push
scas
fidivrl
lods
lret
mov
mov
dec
pop
scas
and
pop
aad
sub
insb
adc
or
push
fwait
aam
movsl
jns
imul
add
or
hlt
jnp
or
insl
push
add
add
add
mov
hlt
dec
dec
lods
and
aad
adc
out
xchg
fstps
pop
dec
lods
cs
add
and
xchg
pop
sbb
sub
jns
popf
xchg
xchg
repnz
repnz
imul
pusha
lock
rorb
sbb
mov
aaa
inc
add
and
add
out
popa
push
in
sar
popa
push
push
add
mov
rcr
mov
mov
je
dec
insb
les
cmp
test
push
loope
xlat
adc
cmp
scas
mov
mov
movsl
jbe
xor
ret
dec
stc
add
mov
scas
cmp
lock
icebp
aam
sbb
dec
movsb
adc
fwait
into
in
lock
add
add
test
fidivs
jns
test
and
xchg
xchg
jge
fistps
mov
push
mov
push
push
add
jg
iret
sub
cwtl
outsl
insb
mov
lgs
aas
xor
dec
fmuls
push
les
fs
dec
push
mov
add
add
cwtl
lds
xchg
les
vpmacsdqh
dec
aas
sti
mov
jg
fcomp
test
outsb
scas
and
sbb
jmp
fimull
clc
xor
push
xor
scas
addb
out
mov
jp
add
push
xor
outsl
jmp
adc
aad
pop
sub
add
add
mov
loopne
xor
popf
bound
add
cmp
dec
fsubrs
cwtl
jb
cwtl
adc
cmpsb
and
stc
dec
jp
pop
fists
ljmp
add
cmc
or
lock
or
loop
add
add
cmc
sldt
cli
pop
add
repnz
sbb
cmp
add
jb
add
add
loop
lea
add
lahf
add
add
add
add
add
add
adc
ds
add
adc
dec
add
add
add
adc
sbb
add
adc
dec
add
add
adc
add
add
push
add
add
add
or
add
add
scas
add
add
std
pusha
add
roll
push
add
add
push
adc
push
ret
add
push
add
jns
adc
jns
adc
pop
add
negb
adc
pop
add
testb
divb
imulb
push
divb
pop
divb
sbb
pusha
add
mulb
sbb
push
add
testb
add
add
cld
add
mulb
jmp
jno
test
jae
cli
and
sti
repz
add
lock
and
and
in
inc
lock
in
and
in
push
jecxz
call
jmp
pop
xor
add
add
add
xorl
test
jmp
jle
sbb
shll
add
add
testb
xor
shrl
testb
sub
cmp
add
xor
shll
and
cmpl
add
add
jmp
or
sti
popa
icebp
jne
pop
or
loope
add
jmp
cmc
add
dec
repnz
lcall
bnd
add
in
dec
repnz
sbb
dec
cmp
shrb
add
add
add
cmp
fs
inc
dec
push
jmp
push
les
mov
dec
icebp
fs
cmc
mov
cmc
in
fprem1
xor
iret
cmc
fdivr
test
in
call
cmpsb
outsl
push
outsl
pusha
es
pop
pop
bound
outsl
std
cld
and
sub
and
add
add
add
add
cld
and
in
cld
and
cld
and
fdivr
jmp
jno
jb
pop
jne
repz
fs
jecxz
inc
outsb
jno
jno
stc
pop
outsb
arpl
outsl
in
imul
je
pop
js
cmp
jb
pop
insb
gs
fs
insb
cmp
add
add
add
add
add
test
insb
add
add
cmc
add
idivb
fisttps
jge
imul
push
jae
push
or
or
ja
xlat
out
pop
adc
icebp
and
mov
loopne
test
xor
fbld
or
adc
push
or
push
pop
or
std
out
and
and
ja
or
divb
add
idiv
add
pop
add
mulb
add
dec
add
mov
add
imulb
add
add
add
add
add
add
xor
jmp
insb
xor
cmc
imul
xchg
ljmp
push
ljmp
or
cmpsl
mov
ljmp
and
or
cmpsb
ljmp
cmp
cmpsl
mov
test
add
dec
test
rorl
cmpsl
mov
jmp
sub
mov
daa
mov
jmp
daa
mov
ljmp
dec
loop
sbb
adc
dec
xchg
ja
or
ja
sbb
ja
test
ja
xor
nop
ja
dec
jns
test
loope
mov
loope
adc
ja
add
add
jbe
mov
loope
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
bndstx
jmp
and
add
sub
xor
cmp
aaa
daa
and
add
std
lcall
pop
popa
arpl
gs
imul
jne
jae
imul
add
add
jns
filds
pop
aas
fs
arpl
push
imul
jae
jae
ja
ja
pop
jns
jecxz
jle
lahf
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
negb
add
pop
add
negb
add
pop
add
negb
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
cmpsb
jo
orl
jo
imul
outsl
call
outsl
incl
add
dec
add
inc
outsl
pop
jo
outsl
push
jo
outsl
dec
jo
outsl
jmp
push
lock
loope
adc
jo
outsl
es
in
cld
jmp
jmp
outsb
push
jo
outsb
push
jo
outsb
outsl
fldcw
outsl
shrl
outsl
leave
outsb
out
in
cld
jmp
call
outsb
into
outsl
test
outsb
mov
outsl
xchg
outsb
scas
outsl
mov
add
add
testb
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadds
add
into
add
add
fiadds
add
into
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
add
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
testb
add
jmp
push
clc
add
cli
push
fdivr
add
add
sti
fcoms
add
aad
call
pop
int
loopne
or
adc
add
sbb
pop
std
push
rcrb
stc
xor
das
cmc
ss
int3
daa
in
shrb
loop
filds
pop
jl
push
fidivrl
addr16
je
dec
bnd
dec
mov
and
dec
in
fiadds
loop
fstpl
cmp
adc
cmp
add
add
out
xor
or
pushl
fwait
call
jle
jae
andl
xchg
jbe
pop
fistpll
pop
orl
push
jnp
fwait
dec
outsl
mov
test
cmpsl
orl
scas
mov
inc
mov
jno
cmpsl
mov
sub
inc
and
aaa
lret
sbb
inc
dec
rcll
add
add
push
xlat
adc
inc
fisttpl
push
pop
jecxz
push
arpl
rorl
mov
pop
hlt
icebp
repz
lock
testl
std
decl
add
pop
push
insb
or
inc
push
adc
sub
push
pop
daa
cld
sbb
xor
sbb
and
pop
es
testl
cs
pop
xor
xor
xor
aaa
add
add
sbb
cmp
sbb
aas
dec
fs
arpl
gs
imul
insl
jno
dec
jno
ja
push
jns
jae
pop
pop
das
inc
inc
inc
mov
dec
sub
rcll
push
iret
push
and
lret
pop
std
adc
addb
loop
mov
jbe
imul
mov
add
add
xchg
push
jle
cmpsb
push
sbbb
dec
ljmp
inc
repnz
mov
cmp
inc
ret
aas
mov
cmp
lods
add
push
shlb
adc
popf
cmc
inc
ficomps
arpl
pop
nop
pop
rcrl
mov
jb
jae
outsb
subb
jl
lods
data16
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
add
add
add
jmp
sbb
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
shll
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
xchg
gs
jmp
cmc
add
jmp
cmc
add
jmp
add
add
call
pop
decw
push
data16
filds
add
filds
add
iret
add
add
add
add
fdivrp
dec
fdivrp
ljmp
add
add
add
add
add
add
add
clc
dec
add
js
add
add
add
dec
add
add
add
cwtl
fdivrp
lcall
add
sgdtl
add
add
sbbb
add
pop
add
add
add
add
add
add
add
filds
add
negb
add
pop
add
negb
add
pop
add
negb
add
pop
add
negb
add
flds
add
flds
xor
pop
sbb
inc
pop
sbb
dec
pop
add
pop
add
jbe
or
or
or
add
adc
add
add
adc
in
adc
in
adc
in
adc
jbe
add
or
or
add
adc
add
adc
in
adc
in
adc
in
adc
jbe
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
loope
jb
fistpll
inc
iret
nop
jb
movb
add
loopne
stos
cmp
xor
addr16
aaa
mov
in
ret
out
arpl
fsubrs
inc
mov
push
cmp
adc
pushf
inc
popf
jbe
out
fpatan
xchg
mov
pop
testl
andl
and
mov
or
cwtl
add
nop
cmpsl
arpl
add
ljmp
xchg
insb
jbe
rorl
mov
jno
sbb
pushf
scas
ret
xlat
fldt
lods
xor
jecxz
ret
adc
pop
les
ljmp
inc
pushf
shll
mov
or
mov
add
mov
gs
or
fbld
and
subb
add
add
mov
test
mov
push
idiv
ss
out
add
inc
in
pop
je
and
jbe
in
cmp
mov
sub
iret
mov
adcl
pushf
push
add
adc
add
jmp
add
mulb
adc
testb
testb
add
or
imul
add
imul
add
add
mov
add
jmp
add
negb
add
imul
add
add
add
adc
add
add
add
mov
lock
add
add
add
nop
ss
add
add
nop
ss
add
add
add
add
ss
add
add
add
add
testb
nop
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
sti
add
jmp
add
jmp
add
jmp
add
jmp
add
repz
jmp
add
in
add
in
add
add
add
jmp
add
icebp
incl
call
lock
and
cli
add
ljmp
add
hlt
add
ljmp
add
hlt
incl
call
hlt
incl
cli
or
lcall
jp
pushl
lea
fadds
add
inc
add
add
fisttpl
add
mov
and
adc
jnp
inc
add
add
inc
add
add
add
das
add
add
add
add
add
push
add
mov
adc
adc
stos
mov
and
or
push
add
add
add
div
add
neg
test
addl
inc
notb
or
jnp
inc
divb
add
mulb
xchg
lock
testb
or
xlat
test
push
add
addl
inc
divb
test
incb
add
roll
add
jmp
add
divb
add
add
add
sub
pop
testb
inc
notb
test
add
test
add
test
add
add
add
add
add
add
add
mov
mov
add
test
add
cli
add
add
add
test
add
test
add
add
ss
add
add
test
add
hlt
add
test
add
xchg
add
add
add
xchg
icebp
lcall
cmc
add
mov
sar
cmc
or
push
js
in
cmc
or
push
js
stc
cmc
add
dec
js
call
add
cmpl
add
sar
add
add
or
mov
cmc
or
mov
cmc
add
xchg
js
call
js
decl
add
lcall
add
jg
out
incl
sar
repnz
add
jbe
ljmp
adc
pop
addl
cmpsl
addl
addl
outsl
addl
add
add
add
add
inc
add
or
push
addl
pop
addl
movl
inc
add
add
add
addb
std
or
pop
addl
add
inc
add
push
add
addl
std
or
je
add
movl
inc
add
add
sbb
negb
inc
testb
inc
test
add
outsl
test
cmpsl
add
testb
push
testb
idivb
inc
testb
inc
idivb
add
testb
add
addl
test
psadbw
addl
add
divb
add
mov
lock
xorl
mov
add
xorl
mov
push
add
add
add
xorb
add
adc
addl
add
cld
add
add
add
add
add
mov
xchg
add
add
xorl
sub
add
add
cld
add
xorl
and
add
xorl
ja
cli
add
xorl
add
cli
add
shll
push
cmc
icebp
jmp
jne
jmp
sahf
pop
add
add
lds
add
repnz
cli
idiv
pop
cs
add
pop
pop
add
cli
or
stc
dec
pop
add
cli
add
or
pop
add
add
cmc
add
mov
cmc
jmp
cmc
in
clc
into
push
add
mov
cld
dec
scas
push
add
cmc
cld
push
sahf
push
add
dec
add
add
cmp
add
add
cmp
add
das
aas
add
das
aas
add
pop
add
cld
push
add
std
add
xlat
cs
add
std
add
lahf
cs
add
cld
add
add
cs
add
or
fwait
cs
add
cld
pop
add
add
scas
sub
add
add
std
or
mov
aas
add
dec
add
imulb
or
xchg
aad
testb
aas
negb
aad
add
add
imul
testb
mulb
add
idivb
fdivrs
test
psadbw
aas
divb
fdivrs
idivb
add
stos
xlat
aas
imulb
or
scas
xlat
aas
test
or
scas
xlat
aas
mulb
add
neg
xlat
aas
negb
fdivrs
imulb
push
testb
idivb
fdivrs
testb
add
add
fadds
add
out
rcr
add
pop
add
fsub
add
roll
incb
loop
add
fdivs
add
add
sbb
incb
dec
fcoms
add
add
add
add
xchg
add
add
add
add
add
add
xlat
roll
rolb
add
xlat
roll
add
add
xlat
add
add
add
add
add
xlat
and
add
hlt
incl
add
repnz
cmp
adc
gs
add
iret
adc
nop
cmc
ljmp
adc
cwtl
cmc
push
add
repnz
adc
cld
decl
dec
adc
and
out
in
adc
inc
repnz
pushl
repnz
cmc
call
add
add
and
pop
aas
adc
movsl
cmc
adc
add
cmc
push
sbb
add
cmc
std
ljmp
adc
add
decb
add
ss
add
cmp
sub
aas
add
std
sub
jnp
aas
add
incb
add
aas
add
std
or
push
aaa
aas
add
add
aas
add
inc
aas
add
or
testl
inc
inc
aas
add
cld
or
xor
add
inc
aas
add
cld
or
outsl
inc
aas
add
decb
add
inc
aas
add
cld
or
iret
inc
aas
add
cld
or
jnp
aas
add
je
pop
mul
lret
aas
testb
test
aas
mul
add
testb
mulb
add
notb
add
testb
imulb
lret
aas
add
add
xchg
adc
sub
aas
testb
aas
mulb
pop
idivb
fidivrl
idiv
add
divb
aas
testb
aas
mulb
add
add
mulb
add
inc
sar
or
add
push
add
notb
in
add
add
fyl2xp1
push
mov
add
add
add
add
add
addb
push
add
add
push
add
das
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
rolb
add
add
add
add
mov
add
add
call
add
cmc
incb
cmp
lock
cmc
ret
add
cmc
movl
adc
test
adc
fiadds
inc
cmc
rolb
aas
cmc
loop
or
mov
or
add
or
or
pop
cmc
pop
add
cmc
std
add
cmc
jmp
add
hlt
incl
fxtract
icebp
add
hlt
les
mov
hlt
mov
mov
test
add
add
add
roll
lahf
hlt
jecxz
xchg
hlt
sub
dec
repz
mov
and
movb
add
add
daa
add
and
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
insl
add
add
add
sub
jno
cmp
test
adc
je
and
lret
add
pushf
add
mov
lods
add
mov
adc
ret
testl
add
push
add
pop
add
mull
add
mull
add
imul
add
imul
add
jmp
add
div
add
les
push
add
add
testl
das
div
add
idiv
add
testl
dec
imull
add
mull
jae
xor
imul
lds
ds
jns
add
jp
or
jnp
or
notl
inc
pop
sub
adc
push
adc
push
adc
pop
adc
push
adc
dec
adc
pop
fistl
xchg
add
add
adc
mov
jns
ficoml
js
xchg
adc
xchg
adc
cwtl
adc
mov
push
pop
pop
adc
pop
adc
push
adc
dec
adc
inc
adc
pop
inc
adc
pop
dec
adc
or
adc
or
adc
stos
incb
out
inc
xor
xor
add
add
cmp
mov
cmp
xor
out
xor
sub
daa
daa
xor
out
sub
sbb
sub
sbb
pusha
xor
popa
xor
out
pop
xor
bound
aas
pop
xor
out
pop
xor
out
push
xor
push
xor
pop
xor
out
pop
xor
icebp
pop
xor
xor
xor
add
add
add
push
rolb
push
mov
and
lea
and
pop
add
push
pop
add
pop
add
push
pop
add
push
push
add
push
push
add
push
lds
sub
and
sub
adc
sub
add
sub
push
and
das
push
out
add
push
fiadds
xor
std
add
push
in
add
push
jmp
xor
ljmp
push
add
add
add
push
out
cmp
out
cmp
mov
cmp
aas
add
idivb
add
xor
add
inc
add
add
inc
add
jp
inc
clc
outsl
add
addb
clc
jge
dec
lock
add
jnp
dec
lock
dec
clc
leave
add
mov
dec
clc
cmpsl
add
test
push
clc
movsl
add
js
push
cli
jne
push
add
add
jbe
push
cli
addl
repnz
add
mov
add
mov
pop
cli
lods
add
mov
add
xchg
add
add
add
add
add
and
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
cld
xchg
add
cld
sub
sub
daa
add
std
sub
pop
std
sub
cmp
and
add
sub
jmp
add
std
sub
add
std
das
add
cld
xor
iret
cld
jmp
testl
add
hlt
add
scas
hlt
add
add
hlt
pop
add
hlt
mov
fwait
hlt
rolb
hlt
roll
add
add
ret
hlt
ret
add
hlt
adc
hlt
mov
mov
hlt
xchg
hlt
mov
add
add
hlt
mov
add
push
add
hlt
lock
icebp
add
push
add
hlt
in
add
in
add
hlt
sbb
push
hlt
repz
hlt
sbb
sbb
add
add
add
add
add
dec
add
cmp
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
sub
add
add
add
add
add
add
add
add
add
add
add
mov
jb
stos
add
mov
add
add
mov
test
stos
cmc
ret
cmc
lods
incl
or
lods
cmc
or
lods
cmc
push
lods
cmc
imul
cmc
fs
cmc
insl
decl
cmc
jg
int3
cmc
sar
lret
scas
cmc
loop
int
cwtl
call
cmc
lcall
cmc
pushf
call
sahf
call
cmc
adc
cwtl
add
add
and
cltd
cmc
and
lcall
lcall
out
sahf
cmc
add
decl
add
call
call
sbb
push
add
lcall
push
call
adc
cltd
add
sahf
add
cmpsb
add
cmpsl
add
incb
decb
add
push
add
incb
add
pop
add
decb
mov
inc
add
mov
pop
test
add
mov
pop
mov
cmp
mov
add
mov
add
test
add
mov
mov
dec
clc
and
lea
jge
and
and
add
xchg
bound
and
add
add
and
inc
and
and
pushf
and
cwtl
and
loopne
dec
adc
add
and
repnz
sub
in
and
cli
and
fiaddl
and
sarb
shll
adc
and
inc
pusha
and
inc
sbb
xor
inc
andb
inc
sub
loop
sub
add
add
inc
es
inc
daa
and
inc
add
imul
and
nop
and
xchg
and
xchg
and
inc
lds
cmp
inc
or
inc
or
push
or
inc
and
inc
or
inc
jae
or
xor
and
adc
or
incl
add
sbb
cli
mov
aad
cli
sbb
in
and
jmp
stc
sub
out
stc
add
mov
clc
add
mov
add
mov
push
pop
push
jp
or
jae
or
orb
push
jno
adc
outsb
push
adc
jl
and
rorl
cmpsl
or
push
xlat
movsl
or
push
xlat
or
push
add
add
add
pop
pop
or
pop
pop
add
push
repz
xchg
push
in
lea
pop
push
test
adc
jg
or
sub
dec
and
push
inc
and
push
cmp
and
aam
and
in
xor
push
inc
sbb
push
cmp
sbb
or
repnz
or
add
sahf
or
add
add
and
or
sbb
cmp
cmpsb
or
adc
add
sti
insl
and
inc
jmp
and
inc
sti
loop
dec
repz
push
jmp
and
inc
sti
sbb
adc
push
es
add
and
clc
ljmp
cli
add
add
adc
pop
daa
aam
scas
and
clc
ret
lock
add
and
lock
pop
pushf
call
pop
and
cld
pushl
or
daa
and
push
movsl
and
sub
and
or
adc
pop
add
push
xchg
and
or
lret
and
add
add
or
sub
or
andb
or
mov
and
adc
add
sub
psrlq
xor
aad
xor
add
aaa
psubusb
test
fiaddl
repz
paddusw
pmaxub
xchg
fcomip
mov
loopne
fmuls
loope
add
repz
loop
fimull
jecxz
rorl
in
cld
push
in
cmc
push
out
decb
out
out
push
call
repz
ljmp
or
add
ret
or
add
lock
pop
call
adcl
or
xchg
adc
call
test
or
lock
jmp
add
out
pop
adc
push
pop
adc
push
cmp
in
xor
adc
getsec
adc
setle
add
mov
adc
push
xchg
adc
push
adcb
push
jge
adc
je
or
outsl
adc
pcmpgtd
stc
push
sub
push
sub
xlat
push
sub
aam
sub
aad
and
adc
adc
ldmxcsr
adc
mov
push
push
adc
add
pop
bt
or
mov
or
push
add
out
or
mov
out
or
lcall
or
xchg
push
repz
inc
out
or
xor
testb
push
cld
or
dec
push
ret
push
mov
or
add
add
out
or
push
push
les
add
lret
jmp
enter
int3
or
add
push
push
outsb
or
push
insl
or
push
pop
or
push
jnp
push
push
push
push
push
imul
push
ja
pop
push
jbe
pop
push
or
xor
or
xor
xor
jp
xor
xor
add
push
or
xor
cmp
jne
cmp
inc
or
xor
cmp
xor
cmp
xor
or
xor
or
or
sbb
or
inc
xor
pushf
or
inc
pop
mov
or
dec
out
or
out
or
fisttpll
aam
dec
lret
or
mov
add
push
or
push
daa
out
push
pop
in
push
pop
in
or
pop
loop
push
pop
jmp
push
out
or
out
or
out
or
out
or
jmp
pop
in
pop
sbb
pop
daa
sbb
popa
daa
push
or
or
out
mov
sahf
adc
mov
sahf
or
mov
pop
adc
or
ret
adc
or
scas
or
or
js
or
cmovne
mov
dec
or
inc
or
or
push
or
inc
or
inc
or
adc
push
prefetchw
mov
add
mov
decl
mov
push
or
out
clc
or
out
push
add
add
mov
xor
jg
aad
test
fsubr
xorb
out
mov
mov
jmp
adc
jmp
inc
loopne
and
into
add
add
mov
and
popa
and
bound
mov
arpl
test
and
pop
and
xchg
pusha
and
add
add
imul
xchg
insb
and
mov
add
add
jmp
add
push
sti
cmp
add
lcall
add
cmp
cmp
add
adc
call
add
push
add
add
stc
pushl
add
add
add
add
add
add
stc
pushl
add
xchg
clc
jmp
add
add
add
add
add
add
add
add
jmp
mov
add
jne
add
mov
add
push
add
testb
add
sarl
add
push
add
test
add
sub
add
test
add
mulb
add
imulb
mulb
add
mov
add
neg
aaa
add
cmp
add
fidivl
add
cmp
add
mov
add
pop
add
divb
add
aad
add
cld
add
not
aaa
add
std
add
testb
cmp
add
add
add
testb
add
add
testb
add
add
testb
add
add
add
add
testb
aaa
testb
add
add
testb
add
add
testb
add
add
testb
add
add
testb
add
add
testb
add
add
add
add
add
add
add
add
add
testb
add
add
js
add
enter
pop
roll
mov
add
pop
add
add
add
mov
add
cmp
cmc
add
cmp
add
test
add
lahf
add
add
add
sahf
add
add
add
and
add
jo
add
inc
cli
add
rolb
sbb
add
push
rolb
sbb
add
test
cmc
add
test
add
cli
cmc
add
sub
add
aad
add
sub
add
aam
add
cmc
add
add
ljmp
lret
decl
add
fldl2e
call
add
enter
xchg
add
daa
jmp
pushl
add
push
jmp
inc
incl
cld
call
jmp
jmp
cld
call
jmp
cld
incl
decl
out
lcall
incl
add
in
decl
jle
lcall
decl
std
push
divb
negb
add
fwait
add
notb
add
or
add
pop
xor
add
push
xor
add
add
add
notb
add
jge
add
aas
xor
idivb
testb
add
add
fiadds
add
cmp
add
testb
add
hlt
add
testb
pop
data16
stos
inc
pop
je
sub
fs
lret
gs
add
sti
in
mov
jmp
pop
mov
mov
and
movsl
add
mov
std
push
pop
push
and
stos
add
add
xor
scas
adc
mov
ret
cltd
int3
cmc
arpl
scas
frstor
or
cltd
gs
xchg
mov
jge
jnp
cmp
fs
testl
xorb
rcll
inc
inc
das
aas
mov
jmp
fs
pop
cmpsb
dec
add
add
jecxz
xchg
lcall
daa
int3
pop
aad
cmp
lea
pop
daa
and
nop
pop
ljmp
jns
mov
mov
cmp
fwait
xlat
lods
fisubrl
aam
xchg
xchg
nop
popf
cmp
cmpsb
mov
or
mov
and
sub
mov
cld
js
jnp
or
xor
add
add
mov
cs
sbb
adc
imul
xor
and
xchg
jmp
or
add
ud1
shlb
pop
cli
ljmp
mov
test
sbb
xchg
add
sbb
sti
add
jp
cltd
pop
jp
jmp
inc
xor
add
add
xor
aas
add
sbb
idivb
outsb
bound
int3
pop
rcrb
push
shrb
mov
sub
mov
icebp
jge
stos
jmp
lret
fsts
xor
fcmovbe
push
in
dec
inc
ret
fisttpl
pop
jbe
std
or
add
pop
push
cltd
dec
es
cmp
pop
repz
push
xchg
repz
push
mov
add
repz
dec
mov
or
ficompl
out
sbb
aas
adc
mov
not
cmc
int3
mulb
hlt
sbb
inc
hlt
and
push
sub
push
mov
repnz
jno
rep
roll
popa
hlt
pop
test
and
xchg
hlt
dec
testb
fdivr
loope
clc
stc
vcmpngt_uqss
aam
int
add
and
aam
push
icebp
int
in
jg
in
mov
dec
xor
or
cmc
int3
clc
loope
or
adc
or
loope
sbb
loope
or
shll
adc
mov
mov
sub
pusha
cmpl
add
lret
fucom
or
xchg
pop
test
imul
stos
add
add
cld
enter
cmp
mov
fwait
popa
cmp
mov
cmp
pop
stc
neg
adc
lcall
cmp
cmpsl
push
roll
mov
cmp
mov
add
mov
lret
sub
mov
mov
add
or
add
gs
aaa
cmp
pop
xor
out
xor
out
pop
cmp
in
adc
fmull
pcmpeqb
inc
sbb
movsl
repz
xor
or
mov
adc
mov
aas
adc
decl
aas
sti
loop
and
in
or
pushf
push
inc
loopne
jo
sbb
repnz
add
mov
negl
ret
pop
push
fdivl
add
in
lock
dec
mov
push
cmp
pop
lret
int3
xchg
push
add
imull
dec
divb
push
idivb
push
cmp
nop
and
icebp
sbb
fcomi
sub
sub
test
in
neg
sub
mul
and
imul
add
add
daa
xor
cmpsb
ja
add
push
adc
mov
mov
leave
xor
push
shl
sub
mov
and
cmpsl
repnz
notb
adc
leave
pop
pop
movsb
mov
push
inc
jnp
add
mov
cmc
repz
cmc
imul
cmc
imul
sbb
shll
movsl
add
add
jbe
mov
stos
addr16
cli
mov
shl
push
in
hlt
adc
repnz
mov
shlb
test
mov
out
push
lahf
xor
dec
lds
sub
or
js
push
add
push
aaa
pop
in
aaa
pop
in
aaa
movsl
sub
push
cmpsl
stc
pop
fsubl
pop
or
add
dec
inc
xchg
testl
cmp
and
push
mov
sti
mov
pop
pop
xchg
adc
pop
xchg
add
mov
addr16
test
xchg
mov
sbb
cmp
sbb
arpl
pop
cmp
mov
xorl
or
call
dec
xchg
pop
leave
les
repz
pop
cwtl
pop
es
sub
add
add
in
dec
push
adc
orl
out
cli
mov
je
pop
sbb
fistpl
cmp
xor
cs
xor
std
bound
mov
dec
mov
popa
xorl
or
cmpsl
or
mov
in
cmc
pop
pop
xchg
test
xchg
jecxz
adcl
out
add
add
add
imulb
push
inc
notb
push
inc
notb
inc
notb
push
inc
notb
dec
inc
mulb
dec
inc
divb
dec
inc
mulb
push
inc
divb
push
inc
negb
push
inc
imulb
inc
negb
dec
inc
testb
add
add
testb
dec
mov
jns
testb
dec
mov
pop
add
add
dec
mov
pop
add
add
dec
mov
jp
testb
push
mov
jge
testb
push
mov
pop
add
add
push
mov
pop
add
add
add
testb
push
add
testb
dec
add
testb
dec
add
testb
dec
add
dec
add
add
add
testb
dec
add
add
push
add
call
cmc
add
jmp
add
jmp
add
call
cmc
add
jmp
add
out
add
cwtl
cwtl
sar
rol
dec
int
ljmp
cli
call
cmc
lods
incl
lods
call
test
pushl
pop
ret
jmp
pop
sar
sar
add
add
push
push
ret
fstpt
jmp
sar
and
sar
es
cmc
mov
jmp
add
mov
je
fwait
add
add
add
add
mov
add
add
add
add
add
jae
mov
cld
insl
iret
cld
jno
cmpsb
cld
jne
cmpsb
cld
imul
cld
data16
std
mov
pop
arpl
test
rorl
jb
leave
push
ja
out
popa
push
incl
std
ljmp
sbb
add
and
insl
negb
add
idiv
add
mulb
insl
divb
jo
cmp
jae
sbb
add
lea
insl
add
add
test
stc
cmp
pushl
inc
add
idivb
or
inc
or
or
inc
idivb
or
push
cmpsl
inc
neg
pop
inc
testb
inc
notb
cmpsl
inc
negb
pop
inc
idivb
push
inc
mul
fiaddl
loopw
mulb
inc
imulb
inc
testb
add
jecxz
add
fdivl
add
aad
add
iret
add
add
add
iret
repnz
call
mov
adc
xchg
add
xchg
xchg
xchg
inc
mov
iret
loopne
cwtl
cwtl
scas
dec
imul
add
lea
cmp
jmp
mov
or
inc
into
cld
mov
xchg
add
testb
rcrl
sar
loopne
add
dec
scas
cmc
add
lods
bound
jo
fwait
jp
xchg
lds
xchg
stos
jnp
inc
cmpsb
gs
pushf
xchg
jbe
push
call
and
add
sbb
mov
icebp
xor
cmc
or
sbb
repz
clc
sti
or
cmc
add
and
dec
inc
inc
xchg
inc
dec
add
add
add
add
add
mov
out
and
shl
das
add
std
in
lret
mov
out
xchg
lock
sub
std
dec
out
jecxz
sub
repz
mov
sti
lock
out
or
in
adc
lock
add
idiv
or
in
incl
sti
adc
add
inc
stc
sbb
pop
cli
decl
fcmovnu
dec
mov
add
gs
push
fsubrs
inc
lret
add
sub
jb
outsb
or
push
add
imull
pop
inc
or
add
dec
or
or
push
add
sub
add
cmpsb
jl
jne
jb
pusha
stos
jb
inc
je
test
xchg
pusha
out
add
add
js
cwtl
test
xchg
outsl
scas
imul
testb
ljmp
add
mulb
les
pop
shrb
fdecstp
fbld
cmp
int
jmp
add
xchg
adc
add
in
in
lret
stos
aad
add
inc
mov
pop
ds
add
testb
and
add
mov
subl
push
mov
push
pushf
push
insb
test
dec
pop
jle
inc
pop
xchg
fs
jnp
push
inc
add
add
inc
xor
jle
xor
push
imul
and
xchg
mov
scas
inc
xchg
mov
bound
dec
aad
dec
push
ljmp
add
sbb
out
push
pop
repz
mov
push
adc
outsl
stos
mov
std
or
jmp
insl
jbe
dec
and
mov
addr16
imul
and
sbb
ds
mov
dec
xlat
pop
mov
adc
jns
js,pt
xchg
jp
mov
sbb
xorl
jno
xchg
add
mov
mov
mov
std
movsb
lds
loope
stos
scas
mov
xchg
xchg
lds
rcr
mov
inc
scas
test
out
js
scas
mov
or
aad
mov
scas
and
mov
jmp
in
lods
fadds
mov
pushf
rolb
add
xchg
xchg
lea
add
add
sti
repnz
and
out
in
xor
dec
cld
and
lret
pop
aad
gs
shrb
add
mov
test
js
fadds
and
xchg
rcrl
xlat
push
lea
push
movsb
movl
mov
mov
arpl
jno
je
add
add
mov
jbe
test
testb
cld
cmp
or
in
loop
repnz
or
sub
add
xor
xor
loope
jecxz
rolb
pop
mul
sbb
scas
lods
mov
out
or
or
roll
div
out
out
icebp
repnz
in
out
pop
out
sar
or
aad
in
or
add
add
fucom
pop
std
or
imul
repz
mov
sbb
or
add
loop
fildll
or
aam
faddp
loopne
out
or
xchg
push
sbb
add
add
or
iret
mov
xchg
mov
sub
push
loope
ss
call
xor
sub
lahf
pop
dec
add
add
movsl
gs
mov
loope
ss
test
and
out
or
jmp
incl
cmc
add
mov
sub
jl
and
dec
xlat
add
insb
add
jp
jno
insb
imul
jo
jno
cs
les
scas
test
inc
enter
cmc
add
mov
pusha
pop
inc
add
cmpsb
lods
mov
add
fisubs
je
enter
scas
insb
jno
sahf
js
jl
jnp
xor
xor
lock
sub
in
jl
mov
icebp
je
clc
stc
pusha
mov
je
hlt
sti
sub
hlt
repz
addl
xchg
or
lcall
test
test
add
int3
xchg
mov
imul
fdivl
push
xchg
mov
imul
add
divb
xchg
insl
pushf
jb
jno
jl
jge
outsl
iret
jge
outsl
nop
jns
jae
mov
or
pop
clc
in
inc
and
movl
inc
out
ljmp
jle
ffree
jbe
int
add
cmpsb
les
mov
fisubrs
testb
fmuls
jl
inc
xchg
insb
out
cmpsb
jnp
jno
pop
movb
add
add
dec
sbb
cmp
dec
cmp
das
dec
inc
push
adc
testb
adc
adc
daa
pop
sub
sbb
sub
add
add
in
sub
out
adc
jecxz
sbb
repnz
xlat
call
testb
lahf
push
lahf
and
push
xchg
sub
test
jp
xchg
push
jae
jb
lea
add
add
cmp
cmp
xor
and
testb
jb
imul
jl
pop
lods
pop
int
add
arpl
inc
xchg
imul
add
fcomp
add
add
jmp
test
bound
cmpsl
jmp
mov
inc
adc
lods
inc
jmp
mov
inc
sbb
insl
das
pop
mov
add
ss
cmp
aam
mov
clc
and
add
sub
out
daa
das
aas
inc
xor
pop
add
add
int3
leave
loopne
add
mov
fcmovnbe
or
in
int
lret
ret
rolb
add
adcl
int
dec
dec
rclb
mov
pop
dec
dec
sbb
dec
push
cmp
mov
add
movl
pop
jno
dec
jae
fidivrs
fiadds
jg
inc
dec
dec
pop
dec
inc
inc
fdivr
jl
nop
mov
divb
not
adc
gs
adc
push
mov
ljmp
inc
shlb
pop
sub
add
ret
pusha
lods
xchg
push
mov
daa
add
notb
adc
jecxz
daa
add
imulb
lret
and
fld
pop
add
notb
adc
testb
adc
add
idivb
mov
mov
mulb
fmulp
inc
filds
add
lcall
xlat
notb
sahf
jbe
sbb
je
jg
addr16
cmp
bound
inc
dec
sub
adc
pop
jae
add
mov
add
add
inc
dec
aas
das
cmp
pop
ss
ss
pop
xor
add
mov
ss
push
aam
add
add
add
add
or
call
mov
xor
aas
mov
sbb
call
jp
push
push
jl
add
daa
push
mov
sub
jmp
shlb
hlt
imul
cmp
cmc
add
xchg
std
fldt
shl
push
sbb
cmc
add
push
lret
jle,pt
scas
inc
mov
pop
out
push
add
add
and
mov
xchg
xchg
adc
mov
imul
mov
xor
xor
cmc
cmp
lret
jb
xor
stos
test
add
mov
pop
add
imul
inc
call
xor
xor
xor
arpl
ljmp
push
add
sbb
pop
adc
pop
call
pushf
mov
lea
scas
lcall
data16
outsl
ja
sub
imul
cmp
incl
stos
mov
bound
jns
test
iret
std
jmp
mov
mov
mov
in
gs
fsubp
idivb
add
xchg
popa
movsb
imul
xchg
add
add
push
mov
sbbb
je
mov
jno
add
not
inc
lret
cs
fstpt
into
push
int3
cmp
inc
shrb
sarb
inc
out
xchg
pop
cmc
cs
pop
push
lock
push
jecxz
sub
sti
inc
sbb
call
xlat
xor
push
sbb
sarb
dec
cmp
add
add
xchg
xor
jg
cmp
sub
xor
sub
insl
jno
mov
jb
jno
pop
xchg
insb
addr16
sbbb
dec
aas
xor
inc
adc
das
sub
inc
xor
cmp
xor
inc
cs
adc
inc
cmp
cmp
or
daa
sub
sub
or
adc
add
scas
add
add
jg
or
add
pop
mov
push
mov
mov
cmc
add
sahf
adc
in
mov
cmp
lods
fnsave
shlb
adc
nop
jmp
sub
stos
cmp
les
xor
in
pop
sbb
add
add
icebp
dec
push
and
es
out
repnz
jmp
fistl
dec
add
add
add
das
jmp
cmp
sbb
cmp
xchg
rcll
iret
aas
sub
xchg
insl
sub
lods
push
pop
stos
in
add
add
ds
push
aam
or
mov
add
add
lods
lods
test
movsb
scas
in
or
mov
mov
lds
idivl
fcoms
add
jmp
xor
add
icebp
in
mov
add
add
enter
add
add
sbb
add
adc
adc
adc
adc
add
xor
sbb
in
pop
cli
loope
or
add
pop
or
daa
add
aam
or
xor
add
add
ficomps
test
xchg
fs
cltd
pop
mov
jle
add
idivb
cs
aas
mov
fsubs
in
cmc
push
fsubrs
enter
aad
stc
sub
cld
or
cmp
repnz
pop
add
testb
shll
add
testb
mov
stos
cmp
pop
add
add
dec
outsb
outsb
mov
dec
cwtl
dec
jl
arpl
dec
data16
imul
jne
jp
dec
pop
imul
outsb
imul
imul
mov
mov
loope
cmpsb
shlb
imul
insl
arpl
jne
je
pop
ja
jns
imul
inc
je
test
gs
add
add
cmp
testb
jle
movsl
jb
pusha
xchg
pop
push
xlat
fldcw
xchg
xchg
xchg
int
dec
andb
cmp
sub
add
inc
lods
add
lret
pop
ds
inc
and
pop
mov
dec
add
cmpsb
shlb
mov
pop
lods
cmc
add
mov
test
les
add
mov
pop
xchg
xor
pop
lds
add
xor
dec
pushf
pop
mov
jae
jnp
jbe
inc
cmp
and
push
jno
jg
js
insb
das
sub
jne
addr16
fiaddl
push
mov
pop
es
idiv
inc
push
xchg
add
add
add
loopne
sub
add
add
or
dec
cmp
or
and
ljmp
push
aaa
lock
lret
aam
int3
rcl
lahf
pushf
xlat
call
lea
inc
std
das
sarb
add
or
in
or
add
or
out
push
push
in
fildl
scas
les
jo
bound
aam
add
cmpsb
push
mov
loope
mov
jge
jb
jbe
ds
inc
test
mov
arpl
test
mov
xchg
mov
loopne
bound
xor
mov
movb
mov
clc
stos
lods
mov
mov
mov
jne
ret
nop
nop
ja
add
add
or
pop
mov
or
and
outsb
push
xchg
inc
jmp
out
into
loopne
xlat
mov
cltd
or
ds
sahf
add
add
xor
andl
daa
jmp
inc
inc
cmp
push
add
add
push
repz
or
repnz
sub
add
sbb
pusha
into
xor
fs
in
icebp
jo
xor
push
mov
ds
add
out
gs
leave
es
repnz
mov
ljmp
xchg
push
and
aam
add
fsubrs
lcall
imulb
cmp
add
popf
fnstsw
shll
sbb
addr16
push
in
add
cs
dec
pop
sbb
cmc
add
add
mov
mov
mov
add
in
jle
sbbb
add
push
push
jae
jge
ja
data16
add
test
add
add
add
push
jo
imul
add
add
bnd
pusha
icebp
idivl
decl
jo
add
xchg
xchg
subl
sahf
ljmp
add
addr16
pop
mov
cwtd
mov
cwtl
pop
les
fadds
sub
add
xlat
sub
sbb
add
aas
lret
push
movb
and
add
or
sbb
sbb
add
pop
add
testb
call
add
and
sub
out
lret
and
or
and
add
fildll
jle
int
mov
add
push
mov
jmp
adc
insl
inc
and
and
adc
dec
jno
xor
sub
sub
and
cmp
add
testb
sub
sub
or
and
or
push
rorb
jmp
pushf
sbb
or
add
adcl
jns
pushf
cmp
cmp
je
adcb
jbe
jb
jb
addr16
jae
das
imul
ja
pop
jmp
xchg
dec
je
xorl
mov
jb
add
cmc
add
push
add
add
popa
cmpsb
jne
pop
orb
pop
cmc
sbb
or
inc
mov
add
scas
push
mov
es
jle
bound
fcmovu
jo
lret
add
xchg
inc
and
mov
xor
fwait
cmp
add
push
mov
repnz
out
test
decl
sbb
add
mov
add
in
ljmp
repz
loope
hlt
lods
aad
mov
pusha
scas
lds
mov
lret
jmp
repnz
repz
out
jmp
cld
incl
and
pop
lcall
mov
lds
stos
lcall
rcr
pushl
pcmpeqb
incl
add
cmp
push
stc
dec
pcmpeqw
cld
jmp
push
testb
decl
into
call
or
lods
push
enter
popa
pop
insb
xchg
jge
outsl
mov
and
xor
push
icebp
sbb
mov
mov
add
adc
dec
mov
imul
sub
mov
inc
test
add
movsl
shlb
lods
sub
test
add
inc
mov
out
js
mov
add
add
adc
add
add
add
ss
jmp
add
add
add
stc
jmp
push
or
call
mov
icebp
in
pop
test
call
sti
aas
sti
fcos
adc
enter
add
mov
cltd
add
add
pop
push
inc
in
or
dec
pop
dec
mov
mov
jecxz
mov
mov
mov
pusha
fcomps
fsubl
bound
ljmp
andb
fdivs
in
push
add
add
outsb
clc
aam
jb
cmc
add
ret
comiss
jmp
add
add
add
scas
test
and
jmp
xor
aam
cmp
jl
sahf
xchg
push
mov
lahf
cmpl
lds
adc
enter
repnz
sbb
in
lock
ret
cmc
pop
add
cmc
add
lret
xor
mov
jge
add
sub
add
push
inc
add
inc
add
pop
inc
add
jp
inc
add
pop
inc
add
pop
inc
add
add
add
add
dec
add
add
add
out
xor
rclb
add
inc
add
inc
add
inc
add
pop
inc
add
add
cmp
xor
daa
add
inc
add
add
add
add
add
add
add
negb
lods
inc
testb
inc
testb
inc
testb
es
jae
add
imulb
push
jae
cld
popa
jb
hlt
jb
imulb
push
jae
iret
jne
fcmove
ja
imulb
je
xlat
mov
insl
popa
cmpsb
lods
je
xchg
lahf
inc
dec
ret
push
mulb
imul
add
xchg
gs
xchg
popa
addr16
call
imul
das
add
fs
push
outsb
dec
imul
add
add
push
sub
adc
adc
jb
add
add
push
call
gs
rcll
jno
pop
aam
testb
call
adc
add
add
jmp
or
pop
mov
push
movsb
push
test
pop
lds
testb
insl
pop
data16
add
or
inc
lea
cld
mov
push
in
adc
enter
loope
cld
addr16
adc
add
cs
pop
mov
jne
lds
rclb
imul
add
add
cs
pop
mov
and
adc
add
scas
sub
or
dec
lods
rcll
jae
cld
mov
addl
adc
cld
mov
jecxz
add
pop
lret
add
fnstcw
add
sub
nop
dec
push
and
decl
dec
push
push
out
add
add
add
add
aas
add
out
aas
add
aas
add
aas
add
out
aas
add
repz
add
aas
add
idivb
add
stc
aas
add
aas
add
cli
aas
add
sti
aas
add
inc
add
idivb
add
idivl
add
sub
aas
add
incb
dec
incb
imulb
inc
inc
ds
dec
cmp
add
push
push
inc
xchg
push
push
cs
pop
popa
push
inc
push
imul
jno
aaa
js
sub
jl
sbb
xor
ss
sub
out
add
out
add
add
and
std
jo
ljmp
jnp
or
and
add
add
inc
inc
mov
stos
dec
dec
mov
push
push
add
add
xchg
push
push
test
and
daa
sahf
push
mov
lcall
pusha
push
xchg
subl
jg
inc
jo
add
add
add
add
add
add
popa
sub
imul
dec
jo
imul
testb
add
add
testb
add
add
add
add
add
add
jecxz
int3
add
add
add
add
add
sub
add
cmp
add
add
stos
cmc
imul
jnp
add
repnz
add
cli
data16
add
popa
add
add
cmc
add
sub
add
cli
jae
push
add
add
add
dec
add
repnz
cmc
inc
add
cmc
jae
jmp
repnz
sbb
das
add
repnz
jmp
mov
add
add
add
add
add
add
add
pop
inc
pop
dec
dec
add
add
test
aaa
test
lods
sub
ret
add
sub
add
add
inc
add
and
pushf
outsl
inc
add
inc
add
sub
loope
inc
add
sub
test
xor
adc
inc
add
xor
lahf
lods
add
add
xor
mov
inc
add
cmpsb
pop
je
mov
pop
jb
mov
addr16
lcall
jns
jmp
add
lahf
outsb
inc
fs
je
xchg
push
pop
mov
negb
popa
je
xor
jbe
push
inc
jne
notb
jbe
das
inc
bound
cmp
push
add
gs
cmp
lret
sbb
ret
xlat
sti
push
je
stc
outsb
add
adc
mov
cmp
testb
pop
add
add
aad
xchg
lds
add
add
add
add
addb
add
push
add
dec
add
add
add
push
add
dec
add
and
add
add
add
add
add
add
add
add
add
add
add
add
fadds
and
add
add
psubd
std
cmc
pop
add
cmc
insb
add
cmc
add
cltd
cmc
jb
into
cmc
pop
add
cmc
fs
cmc
inc
add
pop
add
cmc
push
add
dec
sub
call
mov
ja
mov
ja
adc
mov
inc
es
jo
add
add
and
or
bound
pop
cs
adc
jmp
push
insl
jo
sbb
push
fldenv
add
pop
insb
repnz
cli
sbb
add
jle
add
add
gs
inc
outsb
outsl
inc
pop
inc
outsl
dec
push
gs
pop
je
pop
add
add
add
sldt
add
je
jbe
gs
imul
imul
add
push
pop
outsb
fs
popa
inc
js
cld
push
je
imul
dec
pusha
je
sub
jns
pop
outsb
fs
push
add
sar
imul
cld
popa
add
or
mulb
add
testb
popa
idiv
add
add
notb
sbb
inc
mul
jbe
mul
jbe
div
sbb
out
inc
add
add
repnz
inc
addl
roll
dec
negb
add
xchg
add
mov
dec
testb
cmp
sub
notb
add
divb
add
pop
add
testb
inc
div
sbb
out
inc
testb
ja
add
ja
add
sbb
add
ja
add
and
mov
call
repnz
add
add
add
add
add
add
add
add
add
jmp
add
jne
inc
add
add
add
dec
add
add
adc
ds
add
out
cmc
add
add
or
xor
cmc
add
add
js
inc
repnz
sbb
add
cmp
cs
cmc
add
sbb
add
mov
add
pop
aas
add
cmc
add
cltd
mov
add
xchg
mov
push
stos
mov
inc
add
dec
cmp
cmc
add
scas
xor
dec
scas
cmp
add
add
and
cmc
add
and
push
inc
and
add
add
sub
inc
les
push
lahf
add
add
das
inc
inc
mov
add
sub
dec
add
cli
inc
dec
dec
sbb
add
in
cmp
or
add
jg
dec
push
outsl
inc
push
inc
push
add
add
dec
push
dec
sub
add
push
inc
push
inc
add
inc
das
inc
dec
add
add
inc
inc
dec
iret
add
add
add
imul
lcall
dec
loopne
push
add
sbb
xor
push
push
divb
inc
inc
xor
add
mulb
inc
add
cli
pusha
outsb
fdivr
fs
out
pusha
add
jmp
pop
arpl
pop
bound
cmc
pop
outsl
enter
idivb
add
lods
outsb
xchg
lods
pop
add
mov
popa
cwtl
stos
push
outsb
xchg
xchg
imul
testb
idivb
jne
xchg
gs
insb
dec
add
testb
pusha
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
std
repnz
call
sti
repnz
add
testb
add
add
push
testb
dec
mov
out
cmp
add
add
xchg
pop
add
add
lea
testb
scas
cmp
inc
jnp
pusha
je
cli
add
daa
xor
inc
imul
add
add
add
das
xor
jb
sub
arpl
pcmpeqw
das
mov
inc
add
je
push
roll
add
aas
add
testb
loop
add
lcall
shr
add
shr
add
in
add
movl
add
mov
add
popf
add
xchg
add
mov
add
idiv
add
add
add
add
add
add
add
ljmp
movsl
ljmp
aas
imul
jo
add
add
gs
sub
add
popl
add
pop
add
add
add
and
push
sbb
push
push
in
std
xor
jl
xchg
ficoml
cmp
push
repz
cmp
add
add
inc
add
dec
push
pop
and
sub
jne
loope
jae
incb
and
xchg
je
fidivl
mov
xchg
mov
mov
add
add
ja
push
int3
inc
add
ud0
jns
stc
push
inc
push
imul
add
fcoml
add
add
enter
loope
pop
iret
cli
mov
add
cld
push
popa
mov
push
mulps
mov
aaa
xor
push
icebp
add
jns
std
mov
dec
push
adc
ja
in
inc
or
jbe
jmp
out
jbe
jmp
jmp
shll
pop
faddl
jmp
mov
add
out
jmp
mov
mov
jb
bound
dec
das
mov
xchg
sbbb
inc
inc
add
imul
sti
jle
push
js
ja
repz
aam
jge
inc
cld
inc
dec
in
cmp
ljmp
jbe
push
or
pusha
inc
clc
mov
sub
push
loopne
adc
pop
push
add
add
mov
push
out
icebp
push
push
ljmp
mov
ljmp
pop
jmp
jmp
cli
cmpb
add
mov
ljmp
stc
sub
je
push
lods
inc
mov
mov
stc
jb
jbe
in
push
add
movl
mov
ret
jne
gs
adc
orl
cmp
outsb
ljmp
dec
push
push
inc
jb
xor
das
leave
cmp
add
cmp
pop
ret
insb
pop
inc
sbb
push
cmp
out
mov
shlb
inc
inc
push
pop
push
push
adcb
adc
std
mov
xor
jb
cmp
cmp
add
add
add
xchg
inc
neg
push
decl
fiaddl
test
scas
jns
cmp
jnp
bnd
cld
jne
adc
xor
je
jge
idivb
xor
outsl
or
sbb
or
cli
out
fucomip
in
dec
pop
cmp
js
std
xor
mov
add
inc
add
mov
movl
add
repz
in
test
aas
idivb
mov
mov
push
add
mov
mov
adc
jmp
add
dec
inc
mulb
mov
inc
jmp
add
lahf
pop
add
rolb
mov
xchg
xor
add
mov
add
add
lds
test
add
mov
xchg
jno
inc
negb
dec
adcl
mov
xchg
xchg
test
jmp
add
add
loop
jmp
cmc
mov
mov
mov
inc
push
test
xor
mov
dec
aad
inc
jmp
add
add
mov
mov
dec
cmc
fildl
push
cltd
adc
cli
mov
mov
mov
fildl
pop
jmp
das
int3
mov
mov
dec
mov
mov
dec
test
adc
lods
pop
in
pop
pushf
sbb
mov
add
jl
jecxz
pop
pushf
scas
adc
add
dec
add
mov
jl
jecxz
iret
popf
mov
popl
mov
mov
sub
jecxz
iret
popf
push
pop
add
mov
insb
loopne
inc
lahf
popf
push
adc
mov
add
jl
out
pop
popf
pop
adc
jno
add
divb
and
mov
mov
loop
add
out
inc
add
adc
jbe
out
fldenv
mov
push
push
cmovo
jbe
out
fisubl
mov
xchg
mov
and
fisubl
mov
push
icebp
or
in
fisubl
mov
push
in
or
in
fisubl
or
add
inc
mov
lea
mov
dec
in
aas
jmp
add
lock
mov
dec
add
aas
jmp
add
inc
inc
mulb
mov
aas
jmp
add
lahf
adc
add
sarl
jmp
add
ret
aam
jmp
add
add
test
cltd
dec
insl
sub
adc
add
inc
inc
jmp
shlb
jmp
inc
mul
lcall
cli
dec
mov
sahf
inc
pop
fsubs
mov
push
dec
jne
inc
jmp
jmp
add
push
jb
sub
loope
rcrl
pop
pusha
inc
mov
mov
inc
js
incb
leave
andl
sbb
cld
fiaddl
add
add
fsubrl
inc
jmp
ss
aam
fiaddl
shrb
push
ss
inc
cmp
decl
fbstp
cmp
jae
loope
push
or
pop
stc
xor
cmp
adc
lahf
dec
cmp
inc
imul
hlt
je
jp
or
dec
and
sbb
jae
cmc
adc
jne
ficoms
adc
add
pop
cmp
or
shrl
idiv
cmp
adc
push
lret
pop
leave
or
roll
xor
sbb
lock
adc
int
cmp
call
in
lahf
add
push
adc
ljmp
mov
fs
in
mul
adc
faddl
add
add
push
call
in
add
xor
inc
leave
xor
add
xchg
inc
push
lcall
jecxz
cmc
aas
negb
inc
add
pop
push
jnp
fimull
or
orb
ljmp
int
popl
loope
es
call
inc
daa
dec
hlt
hlt
add
add
fcomip
sti
add
add
inc
jmp
xor
pop
xor
loope
fdivs
add
rcrb
cmc
mov
or
insb
lret
add
push
and
testb
add
mov
xor
xor
or
push
clc
test
add
inc
testb
insl
add
add
fstl
les
push
negb
xor
sub
sbb
push
adc
call
bound
mov
fidivs
imul
rcr
mov
push
adc
cld
icebp
lock
jmp
sbb
stos
iret
sub
aas
xor
fstl
xor
cmc
sbb
or
add
repnz
mov
jmp
or
xor
cmc
cli
fisubrl
add
pop
sub
jmp
hlt
sbb
xor
lds
fcoml
mov
jle
arpl
filds
adc
adc
jb
aaa
or
call
rol
jb
mov
mov
jae
sbb
pop
cld
sub
leave
pop
pop
mov
mov
push
push
pop
int3
xor
inc
mov
aam
jae
xor
push
push
call
xor
inc
fistpll
or
dec
test
iret
add
lea
std
je
idivb
mov
loop
push
mov
out
xor
imul
add
je
push
sub
testl
mov
sub
add
push
adc
mov
add
fidivs
in
hlt
jmp
rorl
divb
inc
pop
jge
fsubr
hlt
xchg
ret
test
add
pop
out
push
lds
nop
inc
cli
and
mov
fnsave
cli
dec
ss
jne
por
sub
roll
pushf
or
scas
inc
divb
add
mov
rol
clc
std
push
add
add
xchg
fimuls
or
fstp
or
add
testb
add
xchg
orl
fisttpll
jo
inc
jmp
inc
jmp
clc
test
ss
adc
roll
inc
jmp
cmp
aad
mov
rclb
add
add
add
test
cs
test
push
and
lea
fcmovnbe
fs
fldcw
rorl
inc
fnsave
cwtl
ds
push
push
or
movsl
icebp
xchg
pop
mov
je
fmull
mov
xor
insl
idivl
jmp
add
add
xor
ret
pop
test
cld
add
inc
jmp
leave
mov
sbb
std
and
fdivr
or
lock
jb
add
clc
decl
mov
or
cmp
inc
lock
rorb
mov
mov
sbb
cmp
add
lea
add
mov
push
add
dec
psubsb
daa
add
pop
mov
mov
sarb
adc
add
jae
mov
mov
fmull
xor
divb
icebp
sbb
mov
cmp
ljmp
outsl
cmc
jmp
cmp
mov
or
add
lock
mulb
cwtl
iret
orb
add
add
jmp
xlat
jno
fsts
jmp
cmp
jnp
xlat
decb
in
or
ss
scas
testl
mov
ja
add
xor
popl
fcomps
mov
mov
xlat
insb
ret
lock
add
add
aam
fidivrl
xchg
ret
xor
add
mov
add
aam
fidivl
fdivs
imul
add
jmp
push
jmp
jge
add
add
fldl2e
or
aad
fld
call
movsl
dec
out
mov
in
fistpl
jmp
jp
fnstsw
add
add
xor
sbb
lcall
mov
fwait
or
pushf
xchg
push
add
add
iret
push
jmp
ret
dec
std
add
cmc
addl
fisttpll
cmc
aad
stc
stos
push
add
cmc
dec
inc
xchg
fsts
jmp
push
cltd
scas
in
jae
xor
adc
dec
jge
in
ss
mov
push
cmp
sbb
mov
xlat
dec
scas
add
sub
add
jmp
add
add
call
std
notl
mov
lea
adc
inc
ret
add
xor
sbb
sbb
outsl
jb
out
lea
test
mov
arpl
ljmp
rcrl
push
jb
mov
add
aad
push
adc
jg
xchg
cld
mov
movsl
dec
adc
add
dec
das
aam
mov
pop
faddl
les
lea
out
inc
call
xchg
jg
in
jne
add
mulb
inc
hlt
out
inc
add
lret
xor
mov
push
mov
xor
cmp
jae
dec
inc
andl
dec
push
shl
incl
add
cltd
jb
imul
aad
repnz
cli
jmp
rclb
jmp
xchg
jne
xchg
out
mul
sub
testl
jmp
rcll
push
push
ljmp
out
pop
push
testb
insl
testb
adc
cmp
out
mulb
jmp
add
inc
sbb
mov
insb
inc
sbb
lea
aam
xor
rolb
punpckhbw
jmp
adc
xor
add
xchg
mov
jecxz
jnp
pop
sub
pop
inc
inc
xor
aad
adc
cmc
decl
push
shrb
xor
xor
ds
inc
xor
stc
mov
cmpl
out
add
jp
mov
loop
add
faddp
jno
lea
jne
cmc
pop
cmp
xor
imul
insb
sar
insl
mov
push
bound
or
int3
cwtl
call
jle
imul
mov
call
mov
shl
cmpsb
pop
sar
gs
jge
into
dec
roll
daa
xor
pop
push
test
nop
lods
std
data16
mov
xor
cmp
sti
add
inc
call
aas
mov
sub
test
rclb
add
std
mov
bound
int3
push
imul
int3
adc
xchg
rcl
je
adc
push
sub
adc
bswap
std
inc
je
inc
jne
jne
lds
add
stos
lret
lcall
pop
push
ror
inc
pop
flds
add
pop
xorl
add
cmpsb
in
lcall
hlt
jae
or
add
mov
mov
je
dec
dec
lock
adc
insl
lcall
sub
jg
xor
je
push
or
ja
dec
add
or
movsl
fiadds
add
add
cli
add
jg
into
push
pcmpeqb
dec
fdivl
pop
or
xor
daa
add
xchg
lods
call
add
jns
and
add
jle
imul
dec
dec
jmp
push
or
push
xchg
add
add
sub
testb
jg
and
add
into
imul
stos
mov
out
add
add
xchg
adc
jns
xchg
jmp
xor
testb
cmc
cmp
sub
cmp
inc
push
xor
cmc
incl
sti
mov
aas
push
enter
test
add
fcoms
mov
das
pop
mov
jnp
fiaddl
mov
sbb
add
adc
push
ss
adc
or
add
sub
jmp
icebp
adc
push
clc
nop
add
sub
and
jb
push
add
cmc
ja
adc
cmc
add
cmp
mov
add
jmp
sbb
fadds
loopne
loopne
lahf
add
mov
std
adc
out
clc
cmp
xchg
add
dec
add
mov
adc
dec
clc
aam
xchg
adc
test
add
mov
int3
add
shrb
out
scas
adc
sub
add
mov
mov
push
addl
push
loop
xchg
xchg
rcpps
dec
dec
inc
or
shl
mov
pushf
rolb
add
not
add
inc
popf
testb
push
mov
mov
xlat
les
fnstcw
mov
push
mov
mov
fadds
cmp
adc
mov
add
repz
sbbl
std
orl
add
pushl
bound
add
into
mov
test
xor
push
into
jg
roll
pop
add
add
flds
jmp
icebp
aas
idivb
push
cmp
testb
and
add
sti
lret
inc
flds
jmp
testb
sar
out
add
cld
scas
dec
push
fsubr
int
int
dec
push
addl
inc
int3
mov
mov
js
cld
jb
adc
cmp
push
roll
jmp
into
or
addb
add
fadds
push
testb
addb
add
push
adcb
scas
sti
jb
mov
insl
cmp
or
shl
sti
xor
jbe
adc
jg
call
pop
into
inc
out
repnz
out
leave
fdivr
cld
xor
aas
jmp
aaa
xor
mov
add
jb
lock
add
add
jg
jmp
sbb
lret
jmp
cltd
enter
addl
cmp
cmc
add
cmp
cld
mov
aas
jmp
cmc
add
fidivrs
mov
push
or
mov
xor
push
dec
inc
or
lds
jne
dec
ljmp
cmpl
add
add
inc
lock
aam
inc
cmp
sbb
cld
mov
adc
inc
add
rolb
push
pusha
shrl
filds
les
cmpl
daa
inc
add
inc
clc
test
cmp
das
xchg
jmp
dec
je
les
push
not
ja
pop
ret
jae
push
gs
addr16
adc
movsl
inc
jge
out
lods
add
insl
pop
aaa
add
xlat
ja
mov
mov
dec
inc
clc
mov
xlat
push
add
imulb
mov
cmp
js
call
pop
cmp
jbe
adc
mov
xlat
add
lds
add
sbb
xlat
add
jns
add
jb
sub
add
out
das
jb
sarl
in
add
daa
scas
mov
movsb
or
testl
pop
xchg
inc
add
add
out
fnsave
dec
stc
jnp
jae
in
inc
xor
push
sub
add
push
pop
sub
mov
imulb
leave
add
add
mov
ljmp
push
xor
scas
lahf
lock
xor
clc
push
add
add
or
testb
imul
je
shl
add
mov
int
test
sti
add
mov
andl
aaa
call
mov
mov
std
daa
add
adc
lea
add
jmp
ja
add
cmc
xor
jmp
add
add
add
jmp
push
cmc
mov
add
jmp
cmc
add
mov
jmp
cmc
add
add
pop
mov
ret
adc
dec
mov
and
add
stos
clc
sbb
cwtl
mov
push
loopne
pcmpeqd
lea
mov
or
mov
add
sahf
and
lcall
aaa
out
cmp
adc
add
push
mov
adc
add
push
inc
das
call
or
sahf
pop
push
add
jb
inc
xor
sbb
std
add
not
xor
and
push
not
add
movsl
add
jge
daa
add
xlat
jge
push
xor
add
repz
negb
not
add
add
shl
xchg
add
inc
cmpxchg
popa
mov
add
out
arpl
stc
shll
notb
xor
fdivrs
pop
scas
sbb
negb
out
scas
imul
xlat
jle
lret
lds
or
fadds
test
or
out
pop
add
jb
dec
add
add
or
add
xor
cmp
movl
add
loop
fiaddl
xorl
dec
inc
js
fsubl
rcl
insl
je
add
add
js
sub
lret
add
add
xor
icebp
std
out
test
insl
jl
add
add
jle
addr16
test
call
sub
add
loop
cli
inc
idivb
mov
cs
fldt
aas
jmp
xor
mov
mov
push
ss
adc
out
negb
outsb
jg
call
ss
ljmp
decl
sub
add
cli
stos
js
inc
add
jbe
sbb
push
call
gs
insb
dec
dec
inc
sarb
inc
adc
in
notb
add
add
sub
xor
popa
push
push
sub
jg
ffree
xorl
adcb
mov
outsl
out
and
mov
or
lcall
incl
test
cmp
fstpl
jge
std
jae
inc
mov
std
ljmp
iret
add
xchg
add
add
adc
push
dec
adc
decl
or
out
pop
incl
aam
movb
je
negb
dec
cmpsb
xchg
add
dec
fdivrl
hlt
mov
pop
xchg
mov
xlat
add
dec
inc
add
jae
inc
dec
jne
lret
ljmp
iret
mov
cmp
je
push
dec
sbb
add
fldenv
je
aas
lcall
add
jge
cli
mov
aas
repnz
mov
aam
inc
xchg
fcomp
aas
iret
xlat
add
jle
ret
dec
push
xchg
and
xlat
das
call
divb
ret
test
xor
aaa
call
imul
mov
jns
add
add
add
add
add
or
cmp
ret
jne
hlt
push
jmp
jns
inc
imulb
jmp
sub
leave
add
divb
add
push
jb
sarb
xor
adc
fcmovnb
add
add
xor
std
scas
push
lcall
mov
mov
mov
add
popf
sbb
xor
inc
int
pop
leave
stos
std
add
pop
sub
leave
push
mov
sub
push
and
movsl
test
stos
cmc
add
xchg
cltd
add
cmc
lea
mov
dec
js
loopne
cmp
jns
mov
add
stc
inc
dec
jecxz
gs
mov
jl
add
add
xor
xchg
hlt
add
enter
ja
mov
rclb
movb
movb
call
mov
jle
pusha
movsb
add
mov
mov
lcall
mov
mov
jmp
jbe
fs
mulb
jl
mov
ret
movsl
add
bound
add
mov
add
out
sub
js
lahf
add
push
test
call
jle
mov
sub
mov
jp
sbb
pop
fsubrl
int3
out
mov
add
ss
jae
inc
pop
test
test
hlt
pop
mov
lahf
sbb
cmpsl
push
call
add
add
mov
xchg
das
push
in
add
stc
xchg
add
outsl
cmpsl
add
jbe
mov
std
mov
test
jo
mov
jmp
mov
mov
stos
fnstsw
add
jo
jl
push
mov
add
sub
push
fs
ss
xorl
add
sub
add
repnz
add
inc
test
xor
jo
in
test
sub
add
xchg
testb
cmp
lods
test
dec
cmp
mov
jmp
xchg
cmp
sub
add
inc
jg
mov
mov
mov
ret
repnz
add
mov
add
sub
and
jmp
repnz
pusha
mov
add
jmp
fimuls
lea
add
mov
xor
add
xchg
ds
lds
add
call
divl
sarl
push
push
loope
inc
add
les
lea
add
adc
add
lahf
add
jne
jp
clc
or
repz
sbb
adc
add
add
mov
push
xor
daa
inc
lcall
jmp
mov
inc
addr16
je
lds
push
jl
lock
adc
adc
add
dec
cmc
add
push
lret
out
xor
add
mov
add
add
notb
add
push
dec
call
add
aaa
add
insl
mov
cmp
lods
das
pop
jg
push
xor
add
push
test
jge
imul
mov
pop
insl
mov
inc
inc
loopne
sbb
add
jmp
lret
mov
les
add
push
inc
or
add
push
clc
jns
add
inc
lcall
cmpsl
sub
jmp
cmpsl
mov
add
pop
rol
inc
rorb
mov
mov
testb
push
inc
sub
xchg
mov
xor
add
pop
add
mov
int
inc
testb
add
in
add
add
testb
sub
jno
insb
loopne
add
add
add
sbb
out
pushf
add
push
cwtl
aad
call
hlt
testb
inc
sbb
adcb
mov
mov
in
jmp
leave
sbb
pop
jno
je
xor
inc
and
fildl
push
es
add
lret
adc
jmp
xor
inc
and
addb
test
fisubrs
orl
add
jmp
xor
add
cmc
push
mov
sbb
sub
mov
add
add
iret
mov
push
cld
dec
cld
mov
push
cmpl
add
xchg
std
lcall
clc
and
sbb
or
cld
jmp
add
call
jne
call
test
pop
nop
inc
pop
mov
xchg
insb
jmp
inc
repz
call
test
or
pop
jns
shl
lret
add
push
addb
and
enter
pop
or
divb
adc
mov
mov
add
cmpsl
cs
sub
add
mov
adc
aaa
mov
jns
inc
and
call
mov
mull
add
not
jle
mull
add
notb
int3
je
adc
jae
add
out
xor
out
jnp
sbb
xlat
pop
mov
add
adc
gs
add
cld
mov
in
cmp
std
adc
cmp
adc
int
repnz
add
outsb
movsb
filds
mov
fnsave
call
cmp
mov
or
push
testl
shr
add
scas
lods
filds
add
fisttpll
jne
setne
xchg
call
call
add
sbb
add
and
ljmp
mov
cmp
xchg
jmp
movsl
mov
jmp
pop
push
test
cmp
fstl
cmpb
cmc
add
ret
addr16
add
add
add
fs
and
add
outsb
loopne
jmp
xor
test
and
mov
movsb
call
testl
mov
xor
jmp
inc
mov
decl
add
pop
push
mov
lcall
movl
push
inc
stos
jmp
cvtdq2ps
std
incl
add
inc
jg
and
add
add
cli
xchg
rcrb
or
pushl
in
adc
out
inc
imul
aaa
push
out
call
fs
shrb
je
push
call
mov
adc
mov
ljmp
aam
or
mov
dec
inc
test
mov
push
test
stos
xor
rcl
cmovo
mov
and
add
stos
in
std
incb
mov
push
push
inc
sub
add
inc
sbb
push
jmp
test
add
push
inc
and
push
or
pop
sub
lea
out
sbbl
sarb
mov
cmpsl
mov
xlat
inc
add
das
xor
mov
add
add
add
in
inc
mov
cmp
fwait
neg
das
rolb
jle
jne
or
push
mov
inc
cmp
shr
jne
call
sub
xchg
int
add
push
mov
jge
mov
testb
dec
inc
out
xor
add
test
fucomip
mov
fwait
stc
inc
jmp
clc
mov
insl
inc
add
add
add
mov
xchg
clc
inc
testb
pop
mov
clc
xor
fsts
sub
int
cmp
pop
ds
je
aas
cmp
or
inc
ja
and
mov
xchg
fisubrs
push
inc
jl
fisttps
lea
push
in
jbe
test
call
add
add
in
ret
repz
add
sub
test
in
enter
push
inc
lea
push
in
add
lret
pop
mov
sbb
inc
add
repz
add
call
lcall
mov
inc
add
xorb
cmp
loopne
add
pop
add
lea
jbe
filds
call
str
sub
add
jo
addb
outsl
addb
pop
lds
mov
call
add
or
ret
mov
mov
and
mov
sbb
flds
push
roll
mov
add
add
mov
xor
rcr
hlt
cltd
push
ljmp
push
incl
xor
inc
mulb
dec
and
ficoms
jge
dec
ret
and
mov
jmp
lcall
jbe
je
push
aaa
or
aas
pop
mov
xor
test
xchg
add
mov
add
add
call
add
add
jp
call
add
xchg
add
add
cli
add
xchg
add
add
xor
add
test
add
jnp
call
inc
adc
add
sub
ja
testb
insb
add
sbb
add
add
jle
in
add
add
stos
lods
pop
add
or
inc
cwtl
inc
inc
add
cs
add
jmp
dec
lods
jmp
shrb
and
insl
ds
jo
jge
mov
or
and
dec
sbb
push
insl
sub
cmc
test
in
mov
sbb
ljmp
xor
adc
out
clc
addr16
inc
add
add
inc
dec
sbb
adc
cmc
out
enter
or
je
incb
jmp
lcall
pop
jb
mov
pop
jb
notl
dec
mov
dec
dec
add
or
add
mov
aaa
mov
or
jne
push
pop
push
xor
add
adc
xchg
inc
add
pop
mov
adc
add
add
add
inc
sti
lods
pushl
push
call
mov
push
mov
inc
inc
add
fldcw
mov
add
test
inc
add
push
cmp
mov
sahf
xchg
imull
cmp
cwtl
add
xor
insb
jns
cmpsl
push
sub
divb
cld
cmpsb
stos
ss
cwtl
inc
idivb
jmp
mov
add
sub
jge
scas
test
in
add
ss
pop
imulb
and
cwtl
push
mov
pop
add
je
jmp
add
notb
jmp
pop
jg
mov
jg
incb
push
call
sub
pop
add
out
sub
divb
jecxz
repnz
cli
xor
add
repnz
sub
insl
cmp
jnp
jo
mov
insl
popf
imul
sarb
popl
jb
outsb
xor
and
testb
insl
es
and
mov
ret
adc
ljmp
inc
adc
call
lds
jne
fnsave
sub
add
add
cmpsl
push
jne
cmp
int
add
imul
sti
mov
std
push
call
jb
clc
out
jno
add
into
movsb
pop
sub
add
aaa
mov
push
add
xor
mov
cli
in
mov
test
mov
add
fwait
addl
gs
in
cmc
divl
testb
adc
mov
ret
mov
mov
or
testb
dec
push
mov
lods
mov
xchg
jg
add
jae
dec
fcoms
dec
mov
ret
inc
and
cmpsb
lcall
inc
and
mov
add
pop
push
aaa
movl
movl
jmp
add
add
and
mov
ljmp
push
decl
and
and
and
mov
negl
or
test
add
adc
jae
or
sbb
or
or
jmp
jbe
incl
adc
ja
sbb
inc
adc
add
add
add
cltd
jge
dec
xchg
ds
sbb
aas
and
sbb
sub
scas
popl
stos
cmpb
add
bound
mov
or
negb
and
sar
testb
sbbl
add
popa
call
loopne
add
add
add
aaa
sub
fwait
push
jmp
add
add
add
inc
jmp
divb
fbstp
je
fists
in
sub
ja
add
or
call
fnstsw
mov
fs
negb
rorb
or
adc
jnp
das
bnd
fsubl
add
push
jmp
add
mov
cmp
insb
adc
daa
pusha
or
aas
pop
add
and
add
add
and
mov
and
cmp
inc
and
repnz
lea
hlt
add
movsl
push
loope
mov
inc
adc
jb
fstpl
jb
sub
bound
fstl
mov
stc
add
aam
cmovo
adc
add
cmc
cmc
adcl
dec
mov
mov
mov
add
sub
add
add
hlt
inc
add
push
inc
and
std
movb
sarl
add
mov
add
adc
lds
add
push
and
jg
aaa
std
decl
or
mov
add
inc
mov
lea
dec
lea
pop
jae
sbb
orb
je
pop
adc
inc
add
pop
pop
out
dec
add
decl
adc
add
add
xchg
data16
push
call
pop
add
push
add
notb
incl
mov
lea
xchg
add
fistps
ja
cmp
movsl
es
int
hlt
cltd
cltd
push
push
pop
push
push
and
sbb
jae
and
cltd
sbb
cmp
push
xor
add
or
ja
int3
loop
inc
sbb
lock
add
inc
bound
hlt
cltd
cltd
adc
movsl
ja
push
imul
je
fdivrl
pslld
aas
cld
add
add
or
repz
mov
out
add
add
out
sub
pop
std
imul
push
fs
ret
aas
ljmp
dec
cli
call
cmc
push
je
rclb
das
cwtl
les
mov
add
cmc
mov
adc
dec
insl
xchg
addr16
mov
call
das
decb
fwait
mov
call
add
lea
icebp
sub
addl
cmp
push
insl
mov
mov
insb
cmp
subl
movsl
push
gs
add
or
cmpsb
push
lea
mov
cmc
add
add
add
add
push
or
fwait
in
movsl
incb
fsubrs
sbb
pop
bound
cmc
add
mov
pusha
mov
cmp
cltd
mov
add
cmc
add
adc
jmp
add
pop
std
jmp
push
push
mov
pop
xchg
add
and
paddw
add
add
jge
or
test
add
mov
xchg
lds
pushf
dec
lret
inc
mov
test
movb
add
lret
inc
mov
mov
inc
movl
add
dec
add
je
xchg
repz
add
mov
jno
sbb
add
div
mov
mov
test
dec
add
test
mov
add
pop
mov
push
jb
add
divb
sti
pop
push
adc
push
and
mov
stc
imulb
xor
testb
mov
test
or
imulb
xchg
imulb
cwtl
push
add
add
cmp
mov
jmp
ret
push
jb
add
testb
pop
mov
jo
cli
hlt
adc
shll
nop
jb
add
cs
shl
jmp
jmp
leave
mov
add
add
jno
mov
push
jg
insb
dec
pop
pop
push
dec
in
pop
jmp
sub
std
rcrl
mov
add
notl
cmpsb
lret
in
sub
jne
in
sub
popf
fdivr
cltd
sub
add
sub
mov
add
dec
jb
push
mov
mov
jge
add
daa
mov
sub
mov
push
call
lret
hlt
imul
mov
pushl
xor
add
add
add
daa
add
or
pop
inc
out
mov
pop
add
add
mov
xor
addb
xchg
mov
cmc
test
xchg
pop
orl
cmc
sarb
sub
add
movsb
xchg
add
add
or
add
mov
aam
xlat
data16
test
test
setnp
add
dec
je
leave
inc
testl
pop
cmp
sidtl
lods
push
dec
mov
bound
dec
push
mov
add
add
add
test
aam
adc
or
or
add
jl
pop
test
test
dec
lahf
jecxz
mov
add
outsl
xor
nop
mov
jecxz
decb
pop
cmp
dec
call
jb
or
divb
add
test
scas
add
xchg
inc
add
fsqrt
imul
pop
cli
test
mov
sahf
je
fldt
cmpb
add
jge
stos
xorb
popf
subb
incb
add
xchg
sub
mov
test
popf
jo
ljmp
fwait
cmp
popf
push
fwait
aas
mov
lret
mov
lcall
testb
sbb
jmp
sahf
loop
incl
test
add
cltd
push
lods
jp
fcompl
out
call
pop
add
add
lcall
testb
inc
cmpsb
xor
cltd
test
cwtl
add
jmp
imul
pushl
adc
mov
add
push
add
imul
call
push
decb
pop
fwait
push
insb
mov
call
or
mov
imulb
test
out
push
ljmp
add
fdivrs
mul
cmc
imul
mov
mov
cmc
cmpl
cmc
cmpb
or
pop
int
push
add
xchg
add
mov
in
scas
std
jne
mov
push
or
dec
call
xor
std
pop
xchg
or
inc
sbb
fdivrs
ja
decl
mov
push
outsl
jl
je
cmp
add
arpl
fisttps
cmc
inc
jne
pop
jnp
movaps
push
pop
icebp
test
sbb
xchg
stc
mov
addr16
lock
add
mov
call
add
add
add
jl
incb
imull
mov
xchg
xchg
push
jo
add
negb
dec
sti
pop
xchg
icebp
or
hlt
test
cwtl
decb
stos
xchg
cli
ret
mov
and
jnp
outsl
sti
loope
xor
add
icebp
aas
mulb
push
jae
add
mov
jno
ret
sldt
add
inc
je
fimuls
pmulhw
repz
adc
lods
jo
jmp
xor
inc
cmp
sbb
test
add
add
lcall
movsb
lcall
std
cltd
adc
inc
imulb
out
mov
add
and
add
outsl
jl
cltd
fcoms
add
add
xchg
cmp
add
and
or
imul
push
add
pusha
add
pop
or
jmp
jg
imul
inc
dec
jp
sub
pop
xchg
gs
icebp
cld
push
popl
mov
jae
or
cld
push
add
add
inc
sbb
cmc
xchg
mov
idivb
add
cmc
sarl
ficoms
inc
add
sbbl
pop
aam
movsb
or
call
cwtl
std
jne
jle
sub
js
push
add
shrl
movsb
rcll
sbb
ljmp
adc
pop
jl
in
mov
test
add
add
ja
pushl
adc
lcall
test
ret
push
mov
insl
dec
xor
int3
mov
adc
add
dec
int3
mov
int
jne
mov
inc
add
or
cmp
xchg
je
push
sbb
add
daa
pop
sub
xor
std
mov
add
mov
jl
stos
mov
mov
push
and
xchg
ljmp
inc
push
and
das
dec
lret
xchg
push
jae
push
dec
lret
imulb
lea
xchg
and
dec
loope
xor
add
lahf
mov
cltd
stc
add
xor
mov
rcll
cmpsl
ljmp
lret
add
add
add
jge
xchg
mov
imul
mov
or
jmp
inc
orl
jge
xchg
push
in
add
sbb
insb
ret
add
adc
orb
adc
lock
jmp
stos
cmpsl
cld
ljmp
mov
call
add
add
mov
lock
add
idiv
xchg
add
fnstenv
or
xchg
repz
cmc
movsl
add
cld
mov
cmc
test
pusha
jmp
add
icebp
mov
out
pop
mov
add
scas
addl
inc
sbb
test
mov
lods
out
add
add
xchg
push
xchg
jae
shrl
mov
bound
enter
push
or
or
mov
jbe
fiadds
or
inc
push
mov
gs
mov
std
mov
gs
mov
std
cmp
cld
sbbl
std
orl
cli
add
addr16
scas
add
insl
jae
push
shl
add
add
add
loopne
mov
lret
cmc
decl
xor
pop
push
jecxz
dec
std
ljmp
cld
lds
sti
push
aaa
push
incl
mov
push
pop
incl
notb
dec
sti
sub
xchg
jbe
fwait
incl
push
arpl
leave
dec
xchg
je
push
sbb
dec
pop
xchg
je
jno
imulb
add
icebp
or
call
sub
mov
jl
push
sbb
and
add
cmpsb
dec
popa
lods
inc
mov
hlt
call
push
cmovns
xchg
xor
adc
sub
int3
stc
loope
add
mov
cmpsb
adc
jne
icebp
add
rolb
push
jns
cltd
dec
stc
arpl
add
loop
into
sbb
sub
rorl
js
jnp
mov
insl
pushf
addr16
loope
jmp
cld
and
sbb
mov
daa
arpl
rorl
jae
dec
xor
pop
inc
bound
fs
lret
cli
xor
add
cmc
mov
jge
adc
add
lds
test
ficomps
out
mov
mov
loop
jnp
push
cmc
mov
rol
shl
mov
inc
scas
xor
jmp
cmc
add
jmp
mov
mov
sbb
fucomp
ja
xorl
add
add
add
jle
imul
pmullw
ljmp
mov
dec
or
xchg
and
dec
add
inc
call
imul
jmp
test
cmc
or
or
inc
cmp
push
test
out
insb
faddl
lea
pushl
jo
xor
inc
add
or
movb
add
subb
lret
push
fisubrl
lea
inc
adc
xchg
inc
add
imul
out
mov
inc
cmp
jb
add
testb
xor
pop
sti
add
notb
rorb
punpcklbw
stc
and
std
jmp
mov
fwait
and
mov
popl
dec
hlt
addb
out
jmp
fwait
xor
sub
imull
mov
add
mov
xor
mov
xchg
pop
pop
into
add
testb
fwait
sub
add
inc
jnp
clc
imul
mov
add
push
cltd
lahf
pop
sbb
push
or
push
stc
mov
addb
add
add
mov
loop
insb
inc
loop
cmp
mov
jnp
cmpsb
dec
jge
scas
jno
sarl
mov
inc
xchg
fwait
xchg
pop
call
lea
mov
add
mov
lahf
add
and
mov
mov
repnz
jmp
jge
je
cmp
pop
inc
lods
jl
out
add
add
mov
imul
or
fists
push
out
pushf
jl
sbb
lcall
mov
insl
sub
push
cmc
sub
lahf
les
out
in
pushl
sub
je
je
xor
outsb
mov
xor
push
push
inc
clc
mov
or
add
icebp
or
add
in
out
push
decl
insb
out
dec
cmp
jnp
imul
or
pop
sar
adc
and
jl
mov
mov
jae
cmp
jecxz
add
mov
inc
fisttps
test
cmpsl
repz
add
mov
xor
add
add
add
mov
jnp
imul
xorb
jecxz
out
aas
idiv
std
mov
ja
call
outsb
dec
test
notb
add
negb
lahf
xor
mov
sbb
ret
xchg
add
jge
xchg
push
or
mov
pop
jge
xchg
cmp
cltd
jg
repnz
add
add
lcall
mov
sbb
xor
cmpsb
cs
sti
jne
call
aaa
push
sub
ss
shlb
mov
mov
sti
jecxz
inc
jmp
mov
jmp
test
jne
cwtl
adc
xchg
pushf
hlt
add
adc
xchg
hlt
mov
mov
mov
xor
in
call
les
es
in
add
or
or
jnp
cld
ds
pop
cli
inc
imulb
lock
sub
and
mov
cmpsb
in
arpl
lcall
lahf
cwtl
cli
add
insb
jbe
cld
jbe
mov
jne
fstpt
mov
dec
xchg
add
add
jmp
cmp
das
lea
jge,pn
jbe
cmc
jne
cmpsl
jl
incb
iret
mov
jmp
icebp
xor
aad
xor
test
and
push
shl
jmp
dec
cmp
arpl
cmp
icebp
or
pushf
ret
mov
inc
lods
iret
in
fdivr
mov
add
add
xlat
xchg
pop
add
cmp
mov
rolb
dec
lcall
dec
adc
add
std
push
pcmpeqb
aaa
push
js
add
decl
lds
xchg
pop
lea
out
mov
add
jl
jmp
add
mov
test
test
xchg
es
add
lret
negb
push
jb
add
notb
xor
sbb
clc
jns
xor
or
cmc
aas
negb
push
hlt
mulb
lock
mov
jp
add
negb
ss
inc
and
pop
inc
mov
sbb
cli
sub
xor
sbb
sub
add
notb
add
pop
xchg
sbb
add
add
add
jbe
jle
filds
out
inc
jbe
mov
jmp
test
jne
call
mov
jbe
mov
dec
add
jg
or
popa
mov
and
sbb
incb
call
add
aam
pop
mov
add
cmp
in
sbb
sbb
add
add
jmp
sti
stos
sub
xor
pusha
pop
add
lret
movsl
sub
ljmp
call
push
aam
pop
dec
add
out
hlt
shr
aas
jmp
sub
xorl
push
add
je
hlt
jmp
push
pop
dec
cli
add
jbe
test
add
jo
fwait
sti
mov
test
inc
jl
push
js
ljmp
add
jp
cmp
inc
inc
pop
add
jo
lock
arpl
test
cmc
add
add
inc
lcall
inc
hlt
jmp
xor
mov
xchg
std
aas
push
repnz
xor
pop
pop
mov
add
jmp
mov
sub
add
add
jle
call
adc
mov
mov
dec
push
aad
adc
sarb
adc
repnz
cmpl
push
add
std
je
pushf
out
jnp
test
icebp
inc
jmp
push
call
negb
lods
test
add
imul
cwtl
add
sti
xchg
test
add
negb
add
mov
add
cli
mov
movsb
iret
andb
add
out
ja
add
test
adc
xchg
jns
jmp
xorl
sbb
or
adc
idiv
lret
popl
add
aad
dec
push
xchg
sbbb
add
mulb
je
push
or
add
add
add
adcl
or
inc
adc
rol
call
inc
lock
add
add
leave
aad
testb
pop
in
ret
add
add
hlt
add
test
stc
add
xchg
sub
and
fisttpl
xchg
adc
dec
sub
pop
mov
add
add
testb
xchg
xlat
jmp
ljmp
cmc
mov
jo
and
aam
jge
jmp
outsl
xor
divb
mov
inc
add
mov
lds
lock
jmp
mov
subl
jge
scas
rolb
jae
incl
xchg
mov
push
adc
add
add
xor
insb
outsb
xor
jbe
iret
mov
mov
fs
or
push
repz
jmp
dec
inc
incb
cmp
xor
xorb
or
jae
add
sbb
lahf
add
fs
sub
les
add
ljmp
lds
add
push
add
add
mov
or
jne
insb
dec
or
adc
leave
jg
adc
jae
jo
and
or
mov
lret
push
fcmovu
jbe
jb
int3
ret
imulb
testb
imul
jg
ss
ret
gs
mov
add
sahf
dec
mov
jg
push
jnp
pushl
clc
or
add
insl
ljmp
test
jg
hlt
mov
or
imulb
decb
movsb
adc
mulb
loop
mov
ffreep
push
push
outsb
sub
xchg
xlat
cmp
test
push
pop
ret
daa
sbb
jg
jmp
or
xor
push
call
shrl
popl
add
add
add
lahf
rcll
add
insl
or
add
add
jge
lahf
shl
xchg
fadds
testb
add
or
iret
push
xor
shr
mov
xlat
pop
leave
vmovdqa
test
shr
cld
fadds
xor
inc
sbb
push
les
sbb
and
adcb
testb
add
add
xchg
push
or
insb
aas
push
movsb
mov
movsb
dec
cmpl
cmc
xchg
add
sub
mov
jp
in
sar
orl
add
call
jmp
jnp
mov
scas
cmp
aaa
xor
dec
cli
add
ljmp
punpckldq
add
or
movsb
cmp
popl
sti
xchg
add
pop
cli
push
decl
xchg
arpl
add
out
mov
dec
std
adc
mov
jle
cld
mov
aas
jmp
pop
fs
rorb
pop
mov
xchg
clc
dec
test
jb
xorl
mov
push
std
push
xlat
xchg
add
add
dec
mov
icebp
mov
in
push
xor
mov
jb
mov
orb
pop
jb
push
pop
dec
sbb
jge
or
nop
cmpl
mov
or
sbb
cmp
shl
aam
jge
mov
and
test
mov
call
jge
insb
outsl
imul
mov
push
add
shl
iret
adc
add
fstpl
arpl
push
jge
rcll
xchg
jnp
loop
pop
incb
mov
mov
pop
jmp
js
je
inc
cmc
pop
inc
pop
insb
int
add
outsl
jae
add
cmp
and
lds
cmc
faddp
pop
jle
paddusb
adc
jle
and
mov
pop
out
leave
or
add
add
pop
loopne
cld
aas
mov
xchg
aaa
cmpb
shrb
shr
mov
adcl
outsl
lds
aaa
les
fbld
add
fdivp
inc
dec
adc
cmp
imul
shrl
inc
js
out
sar
jo
or
in
pop
jb
pop
inc
dec
inc
pop
jmp
add
add
jmp
dec
pop
mov
and
cmp
jo
adc
push
push
push
jne
or
pusha
aas
jl
dec
daa
adc
mov
stc
ja
loope
in
sti
cs
jo
in
cmc
add
xor
or
mov
stc
add
jmp
cmc
add
or
pop
jbe
jmp
add
andb
call
add
or
add
rolb
outsb
cltd
xorl
xchg
bound
test
and
je
movb
add
insl
leave
cld
decl
cmp
adc
rcr
inc
mov
mov
jmp
ja
xor
sub
lcall
jb
push
jae
call
add
add
jae
inc
add
push
lret
std
adc
pop
xor
shlb
test
testb
enter
lret
or
nop
mov
out
jne
scas
sbb
hlt
or
cmpsb
insb
or
loope
gs
mov
test
add
adc
div
pop
jle
push
jmp
and
mov
rolb
roll
add
loopne
adc
out
inc
dec
push
and
add
lock
daa
lock
or
insl
pop
out
ss
ja
out
aam
inc
es
push
je
in
test
add
in
js
add
mov
js
or
sbb
xor
adc
sbb
adc
in
add
add
xor
mov
sbb
call
daa
imul
js
and
int
mov
mov
mov
push
or
out
inc
imul
cs
insb
std
out
inc
add
jmp
lock
outsb
jge
iret
and
xchg
loopne
add
push
add
jae
ja
mov
adc
gs
or
jecxz
test
xor
jmp
add
test
mov
jge
aad
and
inc
sarb
aad
test
jbe
jae
lcall
fs
and
mov
lret
xchg
jae
add
jae
popa
out
hlt
into
pushl
rolb
add
sbb
xor
sub
std
je
adc
movsl
jle
incl
sar
in
mov
push
in
sub
dec
push
xchg
xchg
inc
or
out
xchg
dec
jmp
push
ljmp
mov
lcall
push
out
incl
call
ds
incl
mul
insb
jae
push
lods
lds
sti
out
bswap
in
or
push
leave
add
jb
out
add
cmpsl
ret
ljmp
add
mov
jecxz
out
xor
out
adc
loopne
and
imul
mov
mov
push
jb
add
divb
and
movsb
push
sldt
add
add
neg
push
fs
add
or
xor
mull
out
jg
popf
pop
push
ss
add
testb
int
jmp
imul
call
or
mov
add
xchg
cli
andl
shrb
aad
roll
ds
call
mov
jno
xchg
add
pusha
in
int3
and
push
add
test
push
mov
or
popa
dec
xor
pop
ljmp
jns
jno
inc
add
add
add
jno
xchg
js
and
jl
and
insb
in
and
dec
and
call
pop
hlt
bound
fldenv
push
xchg
sub
and
sbb
insl
add
add
hlt
sbb
mov
je
and
sarl
inc
add
jno
jae
in
and
mov
xor
xchg
cs
mov
adc
xor
pushf
scas
add
mov
mov
in
call
or
or
loop
jae
sti
and
addr16
add
xchg
jmp
and
daa
mov
iret
bnd
add
add
add
mov
pop
jb
adc
sbb
mov
ljmp
out
mov
add
rolb
pop
mov
rclb
dec
mov
int3
out
adc
push
push
push
jl
push
push
out
out
ljmp
pop
push
call
pop
dec
std
push
dec
cli
mov
add
push
outsb
adc
testb
mov
add
push
fidivrs
adc
div
jb
bound
cmp
inc
and
jb
add
testb
push
xchg
push
add
movsl
ja
dec
notl
cmp
pusha
notb
xchg
aam
sub
inc
add
loope
call
jnp
sub
lock
and
cmpb
jg
sub
add
std
addb
out
add
xor
jnp
lds
mov
pop
es
add
aad
push
aad
jmp
add
fldl
dec
ja
jl
jnp
sub
cmc
fcmovb
jp
and
sbb
sub
add
test
leave
lret
std
arpl
insb
test
add
add
call
or
daa
cs
fldt
adc
les
or
jo
adc
adc
sub
ja
inc
or
rol
cld
sbb
inc
jmp
jl
and
incb
add
dec
fistps
jmp
cli
daa
jl
add
or
and
inc
inc
out
inc
add
testb
add
and
mov
imul
pop
sti
add
and
call
cld
mov
and
repnz
and
hlt
cmp
push
or
imul
decb
dec
add
push
mov
jmp
xor
incl
sbb
stos
hlt
ljmp
xor
and
int3
call
fdivrp
je
pop
call
pushl
xor
pop
cmc
lcall
out
pop
call
and
xchg
out
jb
dec
jmp
sbb
jmp
pop
ret
push
mov
jo
add
shll
incl
call
dec
push
xor
insl
test
sar
insl
jae
shrb
add
testl
xor
add
addb
add
outsb
icebp
push
pop
add
pop
adc
add
mulb
cli
add
fildll
and
incb
jge
push
out
dec
std
or
add
inc
sub
mov
ret
push
add
jnp
add
imulb
push
push
add
add
in
xchg
call
outsl
inc
push
pop
mov
inc
cld
out
hlt
test
jmp
insl
jno
jno
iret
mov
insl
add
cwtl
pop
ds
add
mov
shl
repz
xor
sarl
sbb
jne
iret
leave
pop
scas
out
imul
std
movsb
add
les
imul
cmp
pop
and
call
jle
jno
dec
add
jmp
hlt
add
cld
cmc
add
enter
jmp
enter
mov
adcl
jmp
add
sbb
push
hlt
sub
or
mov
add
jbe
std
cltd
jbe
pop
mov
cmc
jnp
rolb
add
inc
in
add
mov
ljmp
jge
hlt
sbb
addr16
add
ljmp
or
jbe
addr16
sub
in
adc
push
loop
mov
ret
lret
xchg
sbb
push
call
adc
inc
call
cmp
ret
call
scas
push
mov
xor
push
rcrl
add
mov
add
push
mov
jbe
add
lods
mov
adc
push
aad
cmp
push
mov
xchg
push
inc
lahf
push
push
lcall
cmpb
jmp
adc
pop
sar
dec
bnd
pusha
and
dec
leave
ljmp
mulb
leave
pop
jl
int
cli
pop
imul
add
adc
imul
repz
mov
pop
fdivr
adc
outsb
incb
sbb
jmp
clc
push
mov
push
jae
fs
fstps
jle
fiadds
add
fdivl
mov
push
xor
inc
or
ja
mov
sarb
imul
sub
mov
add
add
dec
imul
test
sub
and
jae
dec
mov
add
test
pop
xchg
test
add
mov
xor
fildll
cmp
ds
out
divb
data16
gs
out
repnz
je
shll
cmp
jnp
shr
cmp
out
aam
movsl
incl
add
adc
add
xchg
or
call
add
cmp
out
add
cld
into
push
mov
sbb
test
mov
lds
or
jp
push
insl
push
sbb
mov
or
out
mov
pop
or
subl
pop
call
cltd
hlt
jae
or
pop
arpl
add
add
mov
add
or
adc
mov
sub
icebp
out
inc
add
xor
sbbl
call
xor
movups
cmp
mov
cld
jmp
add
les
inc
cli
mov
add
push
push
std
incl
add
aas
enter
add
and
mov
in
or
cmp
test
cmp
jne
iret
movb
wrmsr
leave
cmp
out
or
nop
mov
je
roll
adc
mov
fidivrs
decl
mov
add
jge
sub
loop
jnp
out
loopne
or
sbb
test
add
jg
add
lock
aas
testb
inc
push
popl
xor
cmpsb
inc
cmp
loopne
pop
jmp
pop
inc
pop
test
cmp
cli
pop
iret
mov
pop
divl
jbe
jmp
pop
rcll
fbstp
iret
add
mov
cmp
ljmp
sbb
scas
sti
push
les
sahf
push
in
add
add
idivb
cld
hlt
ljmp
adc
add
fs
arpl
adc
js
add
adc
inc
in
int3
packssdw
les
xor
int3
movaps
lock
lds
add
hlt
jmp
push
add
inc
mov
aaa
std
call
pop
std
jge
sti
hlt
lret
pop
jo
xor
push
xor
sbb
add
loope
jl
mov
mov
jne
sub
or
pop
loop
je
sbb
shrb
cmp
in
cmc
int
xor
bound
shr
add
gs
push
dec
pop
inc
mov
ja
addl
int3
mov
hlt
int
mov
or
jmp
add
add
add
push
sbb
pop
add
loopne
add
add
adc
cltd
jmp
je
sbb
mov
sbb
fadds
xor
add
cmp
jnp
mov
jbe
in
add
dec
add
mov
loope
in
dec
shlb
add
dec
or
add
add
or
push
or
or
add
and
in
add
imulb
inc
inc
mov
imul
aas
neg
add
cld
rorb
push
rclb
out
inc
pop
push
xchg
dec
shl
adc
add
add
imull
outsb
adcb
add
add
sar
fldcw
flds
and
insl
dec
jne
or
ret
dec
ljmp
addl
jnp
or
push
movsl
imul
mov
add
mov
add
xchg
jmp
stc
xlat
bound
push
lods
push
inc
or
rorl
mov
jmp
insb
insl
outsl
icebp
add
add
add
gs
pop
call
dec
jb
cmc
xchg
jmp
mov
add
or
inc
in
int
push
arpl
add
sbb
add
subl
xor
add
sbbl
push
or
push
push
add
xor
push
bound
add
push
add
add
adc
insb
sub
inc
pop
jno
cld
es
into
imul
cmc
test
insb
inc
pop
gs
add
add
mov
in
cmc
push
test
pusha
stc
adc
cli
nop
add
jmp
add
scas
inc
xadd
dec
shl
mov
test
imull
adc
add
add
mov
add
repz
adc
mov
add
add
inc
and
xchg
std
jb
loope
cmpb
loopne
xchg
and
push
sbb
adc
and
mov
icebp
mov
or
data16
jae
add
mov
in
addl
adc
or
xor
jae
jmp
add
pop
push
pop
icebp
incl
imulb
mov
mov
nop
rolb
je
add
push
stos
loope
stc
in
xchg
push
push
inc
dec
jae
daa
cmp
imul
add
imul
add
hlt
test
or
cmp
adcl
incl
movsl
es
add
insl
sub
xor
hlt
add
imul
adc
sub
test
lea
add
testb
add
lea
repnz
gs
add
mov
cmc
add
sub
cwtl
add
add
in
idivb
in
add
in
mov
out
pop
icebp
jge
pop
add
add
test
or
addl
imul
jl
outsl
push
call
push
insb
in
cmp
cmp
cltd
testb
int3
pop
cmpb
cli
adc
or
pop
addl
xchg
rol
or
mov
in
ret
sti
fidivrs
add
cmc
inc
inc
pop
add
add
add
jmp
jbe
imul
ljmp
lods
pop
xchg
or
scas
pusha
cmc
add
call
imul
adc
divb
add
cmc
sbb
jno
add
cmc
or
lds
add
sbb
inc
decb
in
popa
pop
std
mov
add
add
out
jl
incl
std
incl
jg
sbb
add
mov
mov
cmp
xor
cmovs
stc
aad
or
dec
les
cmp
xor
mov
sub
shl
clc
ret
xchg
mov
jno
jns
ss
push
jne
in
add
add
add
pop
repnz
mov
imul
test
out
repnz
mov
xor
add
ror
repz
push
mov
mov
lea
enter
mov
insl
icebp
imul
imul
pop
into
pop
test
es
cmpb
pop
push
jnp
pop
test
imul
add
add
imul
jl
add
imull
call
jl
mov
andb
sbb
mov
in
mov
aas
sub
jmp
xchg
sti
adc
insl
mov
cmpsb
rolb
call
mov
jno
fnstenv
testb
push
insb
mov
add
cmp
je
ss
shrb
xor
add
add
lods
mov
add
fidivs
mov
fwait
imul
pop
xchg
sub
jmp
fidivrs
xor
fs
add
mov
inc
xchg
repnz
stos
adcb
into
int3
pop
push
jno
sarl
mov
push
subl
add
add
pop
inc
cmc
add
pop
pop
inc
xchg
cmc
add
inc
dec
add
jmp
pop
pusha
scas
call
ret
test
sbb
sahf
jmp
hlt
add
add
out
add
xchg
out
push
negl
add
jle
lock
sti
test
add
push
lret
push
ficoml
add
jmp
mov
jle
hlt
fbld
call
mov
scas
or
add
push
in
rorl
push
push
push
test
add
sbb
cmp
or
lea
xchg
icebp
cmpb
and
test
test
jns
adc
add
push
sub
pushl
test
lods
or
xor
mov
or
fmulp
mov
jbe
or
mov
div
mov
popa
mov
mov
ljmp
je
or
xchg
sub
cmp
into
lock
pushf
pop
pop
jne
cld
cmp
add
xor
repnz
mov
cmp
xchg
insb
adc
add
jnp
jns
add
out
pop
push
ficoms
stos
rcrb
mov
imul
mov
cld
push
add
mov
jge
shl
imul
push
stos
call
xchg
add
lods
outsl
cmp
mov
add
bound
inc
cltd
add
jg
int3
fisttpll
xchg
add
fwait
arpl
add
cmc
or
out
pop
add
fidivl
inc
add
pusha
xchg
insb
xor
cli
gs
sub
and
and
repnz
jbe
ja
pop
jg
xor
out
repnz
push
mov
iret
shll
xor
add
add
stos
pop
stos
dec
xchg
fs
int
idivb
fs
push
and
cli
mov
jbe
ja
loopne
divl
cli
add
add
std
lcall
andb
fsubl
jb
nop
test
sbb
jb
dec
rdmsr
rorb
jne
cld
mov
pop
xor
lret
push
cmp
add
add
add
or
mov
ret
data16
mov
rorb
aas
jp
mov
clc
add
shlb
cld
mov
xor
add
add
add
negb
iret
add
add
aaa
mov
add
loope
push
dec
sbb
sub
jge
add
add
jo
shlb
jne
jae
pop
lea
clc
sbb
pop
mov
gs
or
jmp
pop
or
add
icebp
push
xorb
mov
fimull
jl
test
testb
cs
add
lock
add
outsw
addr16
and
add
ds
sbb
add
add
mov
xchg
cwtl
mov
xlat
cli
sbbl
and
addl
add
mov
xchg
repnz
xchg
hlt
push
pop
fsubs
shll
jae
popf
jmp
stc
add
add
scas
pop
lock
jae
xorl
jp
xchg
pushf
je
ljmp
aam
xchg
add
add
add
pop
add
cmp
scas
hlt
xchg
or
call
inc
adcb
add
sti
test
jo
sub
dec
cmp
hlt
xchg
enter
iret
push
add
addl
insb
xor
add
add
mov
popf
jns
das
mov
inc
or
add
add
push
add
fwait
add
jb
stos
shr
mov
daa
mov
add
cmp
inc
bswap
testb
sub
mov
sub
mov
mov
mov
nop
rcll
dec
push
pusha
mov
or
add
pop
sahf
std
jmp
int3
idivb
in
pop
push
dec
mov
or
iret
add
add
insb
xor
std
inc
dec
xchg
push
push
push
hlt
dec
inc
pop
xchg
push
push
add
decb
repz
data16
add
push
pop
push
rclb
iret
add
jne
pop
dec
adc
dec
ret
sbb
add
pop
add
repz
adc
dec
ret
stos
cmc
sbb
cltd
add
movsl
dec
pop
sbb
je
jmp
mov
add
add
pop
mov
add
cmc
aas
notb
mul
int
outsl
test
or
dec
adc
sub
jle
push
mov
xor
xchg
negl
lea
push
incb
dec
je
mov
dec
sub
pop
add
or
sbb
flds
nop
dec
adc
jp
mov
or
add
pop
in
test
incb
add
jne
call
or
jl
push
or
mov
jmp
dec
daa
pop
xchg
pop
jg
out
outsl
lds
or
dec
call
dec
js
nop
add
add
dec
add
ret
popa
jbe
or
fs
dec
call
mov
fidivrl
cmp
ljmp
iret
je
cs
cmp
add
add
dec
inc
jmp
mov
dec
cmp
lods
inc
inc
jmp
movsl
mov
mov
cmp
cmpl
jbe
mov
cmc
add
insb
into
dec
out
fadds
add
into
sub
push
mov
push
or
repz
sahf
lods
sub
std
nop
testb
inc
out
dec
subl
add
cs
sub
add
jmp
add
dec
icebp
ljmp
std
push
mov
std
adc
lcall
pushl
out
decl
mov
push
mov
add
fdivrp
mov
pushf
pop
pop
push
shlb
insb
hlt
ljmp
inc
push
adc
mov
into
stos
sbb
in
and
add
add
add
lds
or
add
test
fisttps
dec
fwait
shll
hlt
roll
notb
mov
repnz
push
fidivrs
mov
aam
jmp
push
jnp
push
inc
divb
inc
xor
aam
jmp
pop
ja
movl
mov
arpl
fwait
add
add
outsl
pop
jge
int
add
testb
add
pushf
jge
xor
cwtl
push
and
jge
lea
lahf
add
push
dec
mov
add
pop
or
ds
mov
jg
push
mov
pop
mov
fiaddl
flds
mov
je
out
add
add
jne
arpl
push
pop
repz
loope
dec
pop
in
call
sbbb
test
pop
xor
jb
mov
icebp
push
mov
test
dec
mov
in
push
mov
daa
adc
push
scas
jnp
inc
pop
repnz
popa
mov
push
inc
jmp
xor
mov
hlt
sbb
add
jbe
je
mov
inc
jmp
xchg
jb
sahf
gs
stos
sbb
inc
adc
jmp
add
mov
in
sti
mov
push
mov
add
jae
outsl
cs
stos
cmc
scas
push
jne
xorb
pop
xchg
es
subl
icebp
in
add
jmp
pop
rolb
add
add
incb
cmpl
aad
aam
std
incl
idiv
jl
lds
xchg
sarl
and
dec
in
and
nop
mov
add
pop
movsb
or
lcall
div
fs
pop
ret
push
xor
jae
lret
das
push
push
fsubrs
and
nop
mov
iret
add
call
and
and
add
pop
add
inc
movsb
xor
pop
pop
fisttpll
push
mul
push
orb
pop
pushf
imul
testl
add
notb
adc
mov
mov
push
pop
or
mov
xchg
push
mov
sbb
adc
cmp
dec
sbbb
pop
add
add
add
loope
repz
lds
hlt
sub
call
pop
add
testb
jne
pop
aas
inc
cmpsb
ljmp
mov
or
or
call
shll
add
stc
add
add
insl
inc
sarl
sbb
cwtl
inc
inc
aad
xor
or
cmp
repnz
mov
fyl2xp1
test
jge
add
cmc
test
jl
testb
shl
adc
std
jecxz
lock
int3
fildl
lods
rclb
dec
ljmp
mov
inc
jnp
cmc
in
lea
ljmp
adc
pusha
imulb
cmpsb
jl
bound
push
shrb
jne
cmc
repz
sub
inc
push
cmc
subb
add
negb
fistpll
add
jnp
das
dec
stos
cli
je
mov
pop
jmp
repnz
push
fldl
sbb
in
into
adc
jge
je
insl
and
jmp
dec
int
stos
cmp
sbbl
mov
or
mov
adc
inc
cs
data16
add
out
xchg
xor
jmp
movl
push
inc
mov
jb,pn
inc
jne
adcl
or
mov
ja
cmpl
ret
push
mov
push
push
enter
test
adc
std
mov
bound
cmp
or
add
fistpll
add
std
incl
add
add
scas
add
push
push
lret
aaa
jge
inc
out
push
add
jb
shrb
xchg
mov
mov
sbb
pop
jae
lret
jmp
mov
cwtl
add
lods
inc
pop
rcr
add
jge
bswap
rcl
divb
lcall
rorb
cmp
push
lods
push
and
and
and
add
ja
add
add
add
testl
add
into
and
ss
adc
add
pop
out
pop
or
icebp
add
push
jae
mov
mov
cmp
hlt
xorl
and
sub
jns
bound
mov
in
mov
in
fstpl
rorl
daa
in
xor
dec
pop
inc
adc
stos
in
push
icebp
push
add
add
xchg
icebp
inc
pop
inc
cmpsl
pop
cmc
fwait
mov
push
test
imul
in
inc
or
test
or
jmp
xor
add
lds
jmp
add
add
or
lcall
scas
daa
and
repz
in
out
add
in
cmpl
add
pusha
jg
add
add
je
aas
jae
stc
aas
adc
jecxz
repz
add
fs
add
insb
mov
or
mov
and
and
add
stc
add
aas
subl
ljmp
push
pushl
call
inc
repnz
mov
ficompl
orps
add
add
or
stos
fadds
lahf
and
add
push
push
mov
pop
mov
loop
jb
aam
adc
jbe
call
and
idiv
loope
rorl
lcall
add
xchg
aas
out
mov
ret
sub
lea
pop
dec
call
not
add
hlt
pop
inc
pop
inc
jecxz
add
stos
mov
cli
daa
rcll
mov
stc
mov
inc
adc
imulb
aas
jae
push
aas
insl
filds
xchg
push
idivl
pop
add
mov
or
xchg
out
cmc
out
shl
jmp
add
xchg
sub
add
loopne
popf
imul
nop
pop
call
mov
enter
and
adc
add
subl
sbb
jne
jecxz
pushl
add
add
std
les
js
stos
call
jae
mov
or
jecxz
adc
jecxz
xchg
push
mov
add
mov
mov
out
pop
mov
sub
xchg
adc
xchg
or
add
add
add
mov
xor
ret
sub
push
repz
adc
add
cmc
test
out
cmp
adc
test
mov
cmp
int
jnp
int
mov
jg
ja
jg
xor
sbb
cmp
mov
dec
add
outsl
and
rcrb
add
icebp
enter
div
lahf
stc
test
sahf
or
fcmovb
in
dec
cmp
and
sub
xchg
sti
lea
push
jle
loopne
add
add
dec
mov
ja
or
decl
ljmp
clc
add
or
fcmovne
add
add
das
fldpi
fdivrs
mov
add
add
add
test
lret
fistpl
mov
and
xor
popa
push
rcll
sub
fsubrl
add
push
push
ret
push
out
idivb
sbb
sbbl
or
hlt
inc
add
je
cmpsl
mov
out
mov
int
mov
insb
pop
clc
push
out
pop
inc
sub
add
jge
call
pop
int
rorb
daa
add
imul
add
daa
add
mull
xchg
or
je
sahf
inc
out
in
cmp
insl
xchg
pop
xchg
jae
mov
push
pop
xchg
jge
ds
lahf
xorb
mov
mov
add
mov
mov
movb
add
jle
cmp
or
or
mov
jbe
add
andl
int
xchg
pcmpeqw
popa
xor
mov
or
movsl
cld
sub
mov
orl
fistpll
clc
or
jge
sbbb
imul
pop
movb
add
sub
jne
call
push
fidivs
jne
and
jl
leave
testb
call
std
jg
out
mov
imulb
andb
cld
inc
rcrb
mov
jb
jmp
xchg
push
cld
call
ss
mov
pop
cmp
je
mov
stc
mov
add
add
cli
stc
mov
aaa
dec
xor
rorl
in
add
add
dec
add
fnstenv
add
cs
add
clc
mov
inc
adc
or
loop
xchg
cmpb
xchg
push
repnz
xchg
js
mov
sti
mov
out
mov
cmc
mov
stos
aam
add
add
jg
call
push
mov
sbb
or
popa
xchg
xor
mov
push
xchg
test
test
add
push
and
imulb
test
add
add
fdivs
je
stos
inc
add
aaa
cmp
pop
cmpl
xor
add
add
in
loope
mov
sti
fstp
or
bound
cmp
cmp
or
mov
jl
add
idiv
cld
leave
sub
add
loop
jno
mov
call
adc
add
inc
jne
add
xlat
in
push
inc
imulb
cmp
push
sarl
imul
add
add
in
mov
cmp
jnp
call
sub
dec
out
jp
cmp
jb
xor
lds
mov
fdivr
movsl
scas
in
mov
cmp
into
leave
mov
xchg
jb
hlt
sbb
mov
imul
cmp
or
cmp
jge
inc
mov
sub
add
push
xor
add
add
ret
sub
fidivrl
aad
jo
sub
pushf
stc
add
bound
sub
sub
test
jno
add
sub
xor
shl
lcall
jne
or
lock
andb
xor
jmp
jg
jmp
imul
ja
je
or
add
add
add
xchg
adc
outsl
or
jle
repz
inc
out
call
or
testb
pop
bnd
imul
jnp
jg
lcall
push
push
push
mov
inc
mov
std
xor
out
inc
ljmp
xor
jae
movsl
push
push
xchg
xor
in
mov
std
inc
add
add
inc
or
pop
inc
std
pushl
rcrl
mov
sub
test
sahf
xor
inc
jmp
int3
push
jge
mov
xor
je
cmpl
sub
popa
lea
mulb
add
adc
fildl
xor
mov
push
scas
and
add
insb
and
mov
fnsave
push
int
jg
sbbb
mov
push
je
das
sub
xchg
scas
in
int
sar
movsl
sahf
movb
mov
jl
mov
or
stos
push
mov
mov
jb
in
cmc
pop
scas
jnp
mov
jnp
mov
in
sub
mov
add
out
in
adc
cmp
sbb
pushf
and
inc
xor
add
add
arpl
clc
xchg
daa
mov
sub
sbb
aad
enter
inc
enter
stc
add
or
test
or
xor
mov
xor
or
dec
lock
testb
xor
add
inc
sbb
jns
testb
inc
fidivrs
add
shll
data16
sub
cmp
pop
filds
or
ja
out
icebp
sub
add
pop
int3
sub
arpl
jmp
ja
repz
and
sar
cmp
pop
bound
mov
xchg
add
movsb
std
jns
fnstsw
or
call
mov
insb
test
sbb
mov
roll
pushl
add
mov
push
add
stos
cmpsb
sbb
jmp
xor
mov
add
add
mov
inc
mov
dec
or
sub
or
scas
inc
or
cmp
test
jae
add
mov
orl
lea
fists
clc
or
leave
jno
dec
sub
clc
sbb
push
sbb
nop
adc
add
ret
in
in
mov
cmp
ret
fsubrl
add
js
jg
xchg
incl
push
push
xchg
add
addl
and
xor
dec
ret
in
negb
fdivr
or
inc
testb
cli
pop
add
mov
jge
daa
fwait
cmpsl
sti
notb
xor
inc
mov
rdmsr
mov
cmp
mov
dec
mov
adc
mov
add
mov
mov
cmp
ret
mov
push
test
xor
jle
repnz
xor
inc
mov
aas
cs
jmp
add
fdivs
jecxz
enter
or
fcoml
add
icebp
cmpb
idivb
das
cmp
das
inc
sub
shll
add
jl
adc
cs
add
sbb
add
and
sub
cmp
cli
sbb
push
testb
cld
insb
ret
add
stos
clc
outsl
add
xchg
cmp
out
mov
ss
push
out
xor
sub
xor
stc
sub
fildl
xor
cmpsb
cmpsl
in
jmp
in
call
push
add
test
out
add
add
sub
mov
add
sub
xlat
gs
loop
fcomps
mull
or
test
mov
jns
push
add
hlt
mov
add
add
sahf
repz
xor
jge
and
or
or
sbb
je
inc
cmp
add
add
cmc
mov
movsb
inc
and
in
jb
and
cmp
or
pop
pop
or
cmpsb
enter
rolb
mov
sbb
xor
cmpsb
out
testb
push
stos
push
push
sarb
and
dec
incl
fldt
aaa
pop
aas
jne
mov
cmp
mov
sub
ret
mov
in
mov
add
add
test
pop
mov
mov
arpl
or
jp
into
pop
inc
mov
jnp
out
movl
xor
mov
xor
cmp
std
subl
ret
mov
int3
jnp
mov
cli
cmp
push
adc
clc
inc
std
test
add
jg
or
ss
pop
das
xlat
call
jecxz
add
notb
add
shlb
out
jb
mov
sbb
or
jae
add
inc
stc
mov
jle
imul
xor
jae
mov
mov
inc
add
add
xchg
imul
add
call
sub
push
add
sub
mov
sub
inc
aam
add
add
add
or
sub
mov
test
mov
jge
xor
mov
fiadds
jl
in
jmp
out
cld
jp
or
sub
jmp
js
out
lret
hlt
adc
and
out
loope
jge
and
mov
call
test
or
sub
mov
imull
adc
add
testl
hlt
jns
add
cmp
in
xchg
sub
cmc
decb
jp
icebp
out
mov
jb
add
repnz
push
icebp
pop
add
inc
je
into
mov
decb
pop
or
stos
data16
push
pop
test
inc
aam
aas
mov
inc
or
push
cmpsb
inc
fcoml
add
inc
fsubrp
neg
std
call
add
mov
std
call
sbb
int
mov
jbe
cld
decl
sahf
push
cmc
pop
add
clc
sub
push
aaa
hlt
int3
add
push
inc
dec
or
cltd
dec
add
psrlw
push
sbb
xor
jge
add
add
cltd
jmp
jge
cmp
imul
sbb
push
mov
dec
ret
push
testb
shl
ja
add
insl
mov
rcrb
sub
sub
inc
ret
pop
test
std
add
mov
add
mulb
cmp
divb
add
sub
xor
add
testb
sbb
std
call
pop
and
cmp
sbb
arpl
sub
addr16
lds
testb
popf
fsubs
adc
lret
jp
sbb
call
xor
jl
add
add
roll
add
push
vgf2p8affineqb
into
jb
cltd
and
add
jl
scas
or
filds
ljmp
cmc
add
icebp
in
jae
jmp
xchg
inc
mov
test
dec
jmp
mov
out
cmp
cmc
jns
add
jns
add
cmc
ja
je
loopne
sbb
mov
ffree
and
cmc
add
insb
xor
add
add
jne
lds
and
jb
mov
std
mov
add
insl
xor
loopne
bound
loopne
inc
fs
incb
mov
inc
and
add
adc
stos
jb
and
out
cwtl
add
mov
push
mov
out
xor
incl
fwait
inc
push
mov
push
call
add
add
sar
incl
add
add
pop
add
mov
out
test
lea
incl
inc
mov
push
and
dec
std
xchg
sub
lcall
mov
and
rorl
jge
ficomps
insl
xor
inc
and
mov
ret
cmp
add
stc
lea
jne
push
mov
imul
xchg
sbb
sbb
mov
fidivrs
push
jno,pt
aas
testb
das
add
pop
inc
adc
mov
jo
add
dec
pop
notb
add
and
mov
arpl
inc
imulb
loop
mov
and
filds
add
jmp
fdiv
jp
rolb
stc
jae
fisttps
sbb
push
and
pop
add
scas
adc
or
xchg
std
jl
sahf
es
imul
and
lock
ret
insb
sbb
inc
cmc
add
fnstsw
mov
xor
jmp
gs
and
inc
out
call
roll
add
fcomi
cs
jmp
je
and
mov
in
xor
lret
xor
inc
jmp
bound
jmp
cmc
add
imul
push
imul
mov
rorl
fdivl
sub
insl
mov
sbb
add
add
push
insl
dec
and
jmp
cmpsb
pop
adc
clc
sar
cs
cmp
jle
add
or
decl
xor
inc
adc
aam
inc
push
push
addr16
cmovo
add
jae
in
imulb
mov
mov
cld
in
xor
shl
jb
lcall
inc
add
add
add
jne
cltd
shr
pop
decl
jne
jnp
sarb
mov
push
out
push
push
add
sbb
dec
mov
add
cmp
cld
pop
jno
and
mov
dec
test
mov
or
xor
or
cmc
mov
add
jmp
sub
add
add
add
and
cmc
mov
popl
cmp
ss
in
shl
inc
push
in
fdivp
stos
pop
fistpl
xchg
shl
adcl
jae
xchg
es
and
or
mov
lcall
adc
dec
out
ret
loop
cmc
xchg
mov
dec
inc
in
add
adc
icebp
stos
call
and
add
nop
xchg
int3
mull
push
hlt
out
sbb
repz
add
call
mov
rcrl
out
mov
xchg
adc
repnz
jge
imul
add
add
ret
fadds
mov
add
add
mov
mov
fwait
jno
jmp
add
cmp
add
add
call
xlat
push
out
mov
add
dec
xorb
or
cmc
cmp
mov
or
add
cmc
add
pop
das
or
out
outsb
add
insl
mov
test
add
je
sbb
mov
add
push
test
add
rclb
loopne
pushf
out
jmp
add
add
add
pop
mov
cmp
xchg
add
jns
jae
loop
jae
nop
adc
rorb
mov
call
mov
lea
add
pushl
push
inc
jae
jmp
lea
adc
addl
push
cmpsl
jnp
pop
cmp
out
dec
add
lea
mov
add
add
cmp
adc
xchg
pop
inc
jae
hlt
xchg
mov
out
jb
pop
mov
add
add
jmp
ds
idivb
mov
inc
sub
inc
sub
mov
jae
add
mov
rcrl
pop
cmp
cld
mov
ja
pop
add
sub
pop
ljmp
rcll
xchg
ss
repz
popa
lret
mov
add
mov
xchg
add
jne
jne
sahf
mov
dec
pop
mov
das
jnp
add
into
pop
in
imull
add
or
sbb
in
jecxz
adc
jmp
fstpt
or
mov
xchg
cmp
or
cmp
or
add
add
add
stc
mov
jmp
push
add
add
pop
loop
cli
ret
jno
sub
sub
dec
testb
inc
xor
jno
jbe
rolb
testb
mov
ss
pop
sbb
push
jle
loopne
rorb
fcos
call
add
test
es
cltd
call
mov
adc
push
cmp
add
test
push
into
loope
adc
cli
aad
aas
mov
movsb
cmp
fmuls
jl
pop
gs
cmc
mov
mov
mov
test
add
xchg
sub
in
pop
gs
clc
push
in
call
sbb
jp,pt
aas
mov
mov
enter
gs
or
or
jmp
add
add
adc
add
mov
cmp
push
push
xchg
xor
or
les
data16
mov
add
sbbb
repz
inc
repz
out
xor
or
jp
call
les
add
or
popl
shrl
push
push
dec
jnp
pop
cmpb
cmp
add
mov
and
cmp
dec
add
rolb
pushl
pop
push
lds
imulb
mov
mov
xchg
or
repnz
mov
and
daa
jg
lea
mov
lea
add
inc
inc
sbb
add
inc
repz
jbe
in
imull
add
imulb
ret
add
add
mov
sar
scas
mov
pop
divl
xlat
push
rorb
pop
mov
lahf
add
mov
jle
testl
rep
mov
repz
add
jl
or
call
sub
testb
in
aas
cmp
cmp
jmp
and
push
call
mov
call
xor
sub
add
inc
cmp
or
jp
call
fcomip
mov
sub
call
pop
push
mov
icebp
scas
inc
mov
add
int
cmpb
add
insl
jne
jmp
add
add
mov
mov
add
jb
test
xchg
push
add
out
lcall
fcmovu
fcmovnb
call
out
add
cltd
and
fstl
pop
call
aaa
imul
cmc
add
inc
add
add
andb
decl
jb
call
add
add
ljmp
inc
and
jmp
cmpb
je
test
jmp
clc
xor
rcl
decl
xor
and
mov
arpl
xorl
add
pop
decl
stc
dec
call
add
xor
inc
loop
and
xchg
notb
sub
jmp
or
imull
add
push
sar
add
mov
cmp
outsb
in
mov
xchg
mov
mov
add
add
imull
cmpb
add
jp
add
negb
sbb
sub
imul
add
add
imulb
add
add
mov
sub
pop
imull
jle
jmp
sub
or
cmpsb
mov
fidivl
pop
jb
call
sti
ret
ljmp
lahf
mov
add
in
data16
add
xchg
hlt
lock
mov
out
jb
pop
cltd
push
xchg
clc
popl
add
call
cmpsl
cmp
mov
add
xor
push
or
mov
sub
pop
mov
cmp
jg
lea
add
add
andl
jle
cmp
add
mov
repnz
dec
repnz
cmp
call
dec
adc
lods
add
add
adc
push
and
push
sub
xor
add
jg
and
sbb
lcall
adc
ret
call
add
sbb
mov
and
pop
stos
adc
fiadds
push
ds
add
fcmove
adc
or
add
xchg
cmp
lcall
cli
mov
cmp
lret
roll
mov
cmp
add
movsb
jo
mov
dec
clc
pop
in
jae
nop
arpl
push
dec
xchg
mov
clc
pusha
in
jae
dec
addr16
sbb
std
incl
mov
rcrl
add
and
subl
push
lea
or
mov
push
mov
push
out
inc
add
test
add
dec
neg
sbb
xor
add
add
sbb
test
in
dec
dec
cmc
sbb
sti
jl
sub
sbb
test
aad
je
xlat
lea
sub
ljmp
out
adc
push
push
aas
add
xchg
aas
pop
das
fldt
or
adc
nop
repz
sbb
test
inc
int3
pop
add
add
dec
cwtl
repz
sti
and
add
add
mov
add
adc
adc
test
inc
int3
cmp
and
cld
pop
testb
mov
pop
or
mov
ds
add
cs
fdiv
jmp
add
add
or
subb
shr
jb
add
add
add
mov
clc
in
icebp
test
jnp
pop
lds
aam
rorb
cmp
nop
out
jp
cmp
push
mov
mov
lcall
or
mov
icebp
adc
add
ja
repz
push
dec
xchg
mov
jle
xor
outsb
movsl
es
fdiv
add
mov
add
loope
jmp
lock
xchg
insb
add
add
imul
add
dec
popf
or
adc
add
jmp
std
add
jmp
scas
adc
push
push
push
and
std
push
pop
fs
fmuls
fisttps
add
fwait
push
mov
push
mov
push
add
add
add
test
jne
xor
lock
scas
addb
test
jbe
push
mov
xor
jne
inc
je
testb
jge
call
nop
push
mov
jecxz
dec
subl
push
in
icebp
aaa
jge
and
loop
add
jnp
cmovg
pcmpeqb
add
out
bound
test
jb
mov
hlt
or
add
jge
test
ljmp
je
push
pushf
add
cli
sub
sbb
sbb
xor
je
mov
inc
add
inc
mov
mov
xor
sti
jnp
jae
xchg
sub
xchg
and
add
out
jae
fistps
add
add
mov
psrad
ret
roll
cltd
shll
ja
stos
mov
call
push
ljmp
pop
jo
jge
test
in
push
add
cld
ret
push
test
cwtl
hlt
iret
sub
aaa
add
mov
arpl
testb
mov
sbb
lret
add
or
testb
mov
ja
mov
hlt
sub
sub
add
adc
sub
push
test
cmp
hlt
out
mov
xchg
mov
jns
call
movsb
lret
jle
mov
and
clc
or
jmp
jb
inc
icebp
cmp
je
jbe
shll
add
call
add
add
add
test
je
add
out
fidivl
pcmpeqb
fs
mov
clc
hlt
jg
xor
add
cmp
ficoms
std
push
push
cmpsl
xlat
cld
ljmp
push
std
adc
daa
pop
std
test
add
sar
call
adc
adc
add
pop
push
call
add
bnd
call
loope
inc
dec
xchg
cmp
leave
sbb
cld
std
jbe
cld
adc
dec
cmp
mov
xchg
inc
and
xchg
inc
testb
mov
adc
add
xchg
lds
pop
mov
add
dec
push
or
or
ljmp
das
cmc
add
flds
test
add
mov
in
push
in
mov
or
add
and
in
jecxz
idivb
testb
aas
notb
add
jle
jmp
ljmp
dec
xor
mov
mov
lock
notb
cli
add
sbb
mov
sub
add
add
xchg
in
stos
movd
cli
ret
icebp
je
sbb
add
cmp
jae
loopne
shl
add
jge
add
add
inc
or
nop
fidivrl
hlt
faddl
add
add
push
add
add
test
add
cltd
add
mov
imul
mov
and
lret
in
mov
pop
mov
push
xchg
idivb
add
add
ljmp
jmp
js
add
cli
mov
push
mov
pop
adc
mov
imul
je
in
in
adc
mov
cmpsl
jmp
xchg
cwtl
add
dec
scas
data16
cld
xchg
repnz
jmp
xchg
adc
cli
jns
jge
mov
call
add
add
mov
jmp
pushw
imul
es
adc
pop
add
push
vandnpd
sub
dec
jbe
push
push
sub
mov
sub
imul
pop
into
add
je
es
cvtps2pd
inc
cld
sti
decl
inc
cli
push
lea
add
pop
mov
add
lds
test
push
sbb
movsb
add
jmp
cwtl
inc
cli
mov
pop
clc
adc
addl
lock
xchg
jns
notl
add
stos
sbb
lea
loopne
add
pop
sub
iret
mov
hlt
mov
or
out
aas
test
jae
inc
inc
mov
add
jo
add
notb
add
testb
inc
out
sahf
mov
jg
lcall
sbb
add
xchg
add
sbb
cli
fisubrl
insl
jle
push
test
jl
loop
jb
jbe
out
testb
repz
in
testb
sti
jbe
in
testb
scas
lahf
sub
repz
add
shr
and
jbe
testb
mov
jne
pop
sub
addb
mov
lcall
loopne
jmp
in
imul
jne
movsb
add
jl
add
add
loope
jmp
hlt
lock
movsl
jnp
fdivl
test
clc
mov
jo
add
popl
imul
fstps
jne
jl
xor
lea
add
addr16
push
mov
pushf
loope
je
or
mov
inc
repnz
mulb
je
sbb
clc
add
loope
jae
call
incb
jmp
adc
call
jno
andb
add
lods
or
add
popf
decl
pop
cmp
inc
xor
mov
call
jae
cli
lahf
decl
jno
jmp
xchg
pop
push
push
push
std
adc
scas
in
cld
clc
cli
mov
xchg
fdivs
push
divb
fdivrs
lahf
add
std
je
and
jb
jmp
add
repnz
and
imul
lahf
std
pushl
pop
lock
std
jne
aaa
repz
fwait
adc
pop
add
jecxz
add
mov
test
xor
add
jmp
pop
lds
ja
pusha
lcall
pop
mov
and
notb
add
imul
pop
incb
add
xchg
incl
xchg
test
pop
inc
rorl
xchg
ljmp
test
mov
decl
pop
dec
pop
xchg
add
js
push
out
je
hlt
orl
push
mov
or
push
out
add
outsl
add
mov
add
add
test
push
inc
add
add
sbb
mov
testb
jle
ljmp
add
aas
es
mov
aam
jmp
mov
sar
call
add
decl
testb
cli
into
sbb
add
xor
les
add
jmp
cmc
decb
out
pop
std
mov
cmp
in
jg
add
cmc
std
cld
adc
jns
push
hlt
std
mov
in
addl
mov
mov
hlt
lock
adc
call
scas
or
xchg
or
or
mov
incb
lods
std
add
mov
add
call
ret
and
add
add
dec
hlt
cmp
add
add
add
call
rorb
add
mov
lea
aam
adc
inc
lea
mov
adc
mov
add
cmp
adc
push
bnd
iret
add
add
add
add
shr
std
jecxz
add
add
je
gs
push
leave
ret
inc
je
add
aad
mov
inc
shr
loope
add
mov
xor
sbbl
push
add
clc
mov
adc
loop
mov
call
jge
adc
cmpsb
jmp
add
pop
push
clc
pop
aaa
add
push
out
fs
jg
div
out
clc
insl
lods
stc
xorl
push
add
roll
ljmp
inc
mov
mov
mulb
add
mov
cmp
sahf
sbb
arpl
pop
std
jmp
adc
je
pusha
inc
cld
insl
add
xchg
mov
daa
js
aaa
inc
clc
or
push
add
cld
fmull
jns
out
jg
mov
mov
call
inc
jg
jae
das
jne
push
inc
push
jecxz
mov
insb
ret
add
add
push
adc
stos
add
adc
adc
cmp
mov
call
cld
movlps
incb
addr16
je
insl
loope
out
imulb
and
inc
cli
pushl
add
jns
call
dec
push
lds
cmp
jmp
add
insb
mov
add
out
push
adc
inc
aas
or
push
adc
roll
add
clc
call
notl
call
jl
jmp
ret
or
in
fdivrl
mov
xchg
xor
clc
push
cmc
mov
je
lock
lea
ljmp
or
popa
push
push
add
mov
add
incb
mov
dec
sti
jne
xchg
call
add
add
cmc
sti
decl
in
add
or
daa
mov
add
out
xchg
dec
or
and
imull
add
cli
jne
xchg
inc
test
stc
jno
aam
call
orl
je
dec
push
push
daa
add
add
out
notb
adc
push
push
xchg
add
mul
jae
add
ficomps
add
jge
jmp
divb
loopne
je
aaa
push
push
push
call
jne
subl
mov
mov
stos
repz
out
add
adc
push
aad
mov
jg
sbb
out
mov
rorl
out
leave
dec
sahf
in
push
pop
jne
and
and
pop
add
add
xor
add
push
in
sahf
xor
call
sbb
pop
cli
aaa
add
mov
std
out
testb
mov
add
add
xlat
or
out
pop
or
pushl
add
ja
call
arpl
or
bound
cld
arpl
ljmp
add
mov
add
add
jg
ja
add
add
add
add
jecxz
ss
sub
divb
daa
call
add
lock
inc
idiv
mov
push
push
add
hlt
add
out
inc
add
sbb
call
std
mov
stc
mov
cld
call
mov
add
xlat
push
add
mov
in
and
xor
add
add
jmp
test
push
adc
xchg
and
jae
dec
push
fidivl
mov
xorl
std
push
pushf
pop
ret
cmc
adc
add
mov
mov
push
pop
mov
cmc
cmp
add
push
push
push
out
pop
adcl
add
add
cld
mov
add
sahf
ljmp
dec
cmp
adc
add
add
inc
add
lock
fdivr
xor
xchg
std
cmp
push
in
mov
xlat
mov
mov
idiv
mov
push
mov
pop
pop
inc
add
lahf
mov
inc
add
add
cld
or
add
inc
call
or
inc
push
hlt
push
adc
inc
inc
add
out
add
add
or
jmp
enter
in
inc
negb
jecxz
push
push
es
inc
add
inc
xor
inc
stos
mov
cmp
push
inc
imulb
and
out
aaa
jne
and
sub
andl
idiv
xchg
clc
inc
mul
insl
and
cmp
dec
arpl
je
dec
hlt
cli
mov
mov
add
add
lods
jno
mov
adc
out
mov
sub
testb
rorb
sahf
clc
push
iret
clc
bound
call
push
add
add
and
arpl
ret
hlt
jb
sbb
adc
dec
bound
or
stc
sub
out
clc
or
lret
add
and
cmp
jae
ror
test
testb
rolb
sbb
outsb
lds
jle
ljmp
sub
mov
mov
push
mov
mov
push
ret
dec
mov
mov
cmpsb
cmc
jae
out
outsl
adc
pop
adc
pushf
stc
dec
std
hlt
cmp
clc
push
add
cmc
std
push
jb
pop
lahf
and
add
mov
or
test
add
xor
add
repz
inc
add
add
inc
add
add
int
lea
bnd
xor
pop
fsubrl
dec
dec
loop
push
jmp
sti
cli
xor
inc
ljmp
mov
repnz
shlb
add
mov
lahf
jmp
or
das
rolb
add
add
ret
inc
fisubrs
ljmp
jmp
in
xchg
xor
jmp
xchg
mov
aad
sti
and
push
ja
add
out
test
mov
nop
xor
addr16
inc
adc
es
out
mov
cld
add
insl
sbb
mov
popa
ds
jae
sbb
pop
loop
add
add
add
pop
fld1
cld
or
add
inc
add
negb
ljmp
inc
arpl
mov
std
repnz
add
or
imulb
mov
repz
test
out
inc
jmp
out
jae
ret
or
hlt
jbe
mov
je
sub
xor
push
push
popa
add
push
mov
push
cli
jge
clc
add
add
fnstenv
ss
stos
mov
add
and
jb
ds
dec
cmc
inc
jmp
mov
out
out
add
cmc
add
dec
dec
jle
lods
fdiv
push
in
push
sub
add
aas
insb
push
push
out
outsl
enter
lock
inc
out
mov
add
mov
jae
and
add
add
add
mov
call
fidivrl
mov
js
aam
inc
adc
sti
mov
push
xchg
push
adc
cli
xchg
out
rorl
fmull
jns
xor
adc
shl
pop
in
xor
mov
test
jmp
push
in
imul
cmp
std
push
inc
shll
inc
fsubs
add
dec
aam
lods
flds
jo
loope
push
cmpsb
in
adc
inc
add
loope
add
add
aas
repz
add
add
call
mov
jns
lret
test
dec
add
dec
add
pop
bnd
mov
dec
adc
test
jns
je
xchg
fisttps
push
add
add
or
add
jecxz
cltd
int3
icebp
icebp
sti
mov
outsb
lret
lea
push
int3
inc
cmc
lahf
add
mov
ret
and
call
mov
push
int3
std
or
add
icebp
dec
add
int3
pop
mov
xlat
add
test
int
push
mov
xchg
cli
sub
add
add
pusha
mov
sbb
add
loopne
in
or
decl
xor
ficomps
add
sbb
divl
daa
xchg
xor
stos
jp
gs
lahf
int
xchg
roll
xchg
ret
dec
push
inc
mov
jns
add
sub
pop
rcl
loopne
popf
and
fmuls
mov
popf
jns
add
into
and
and
and
push
jne
mov
mov
jo
test
test
mov
test
jl
bound
bound
mov
sbb
mov
das
xchg
and
mov
test
out
lret
mov
jo
test
stos
sbb
or
add
addr16
sbb
jle
popl
add
arpl
xlat
imul
popa
sub
add
mov
sub
out
jp
dec
add
dec
pop
bound
adc
inc
dec
outsb
pop
sbb
bound
jmp
popl
mov
dec
addr16
outsb
jb
movsb
and
xchg
jnp
xor
xor
pop
cmp
add
sahf
ljmp
xchg
push
loope
lcall
mov
xchg
jp
jb
ja
mov
repz
sub
insb
mov
push
je
mov
ds
sub
jp
int
fwait
in
and
and
push
call
mov
call
push
push
lcall
add
mov
add
decl
add
xchg
push
clc
mov
adc
pop
mov
push
lea
roll
fadds
add
cli
push
inc
add
add
fucomp
jne
inc
xchg
clc
sub
adc
out
add
in
cmp
stos
fldenv
stos
out
mov
stos
fstps
fwait
out
xor
inc
dec
pop
aas
xchg
stc
decl
add
test
or
fsubrl
push
leave
push
jbe
xlat
push
mov
out
std
or
cmp
not
add
pop
shll
inc
mov
dec
push
push
into
insl
jae
testb
ret
jno
add
mov
inc
lcall
push
push
inc
dec
addl
jge
cmp
mov
aaa
in
add
inc
out
add
add
jmp
out
ss
jle
hlt
mov
jp
xlat
pop
in
inc
jmp
and
fmuls
les
jmp
out
push
jmp
push
ja
jne
adc
inc
out
shr
fninit
iret
add
push
mov
cmc
add
cmc
push
push
mov
rol
dec
call
add
add
add
in
inc
in
cmc
add
clc
mov
jbe
es
jl
negb
sub
push
hlt
jns
jb
stc
out
pop
call
fisubl
add
xor
hlt
lcall
icebp
cmpl
cld
sub
lret
cmc
jns
fs
loopne
jo
sti
pop
adc
in
addb
cmp
incl
push
iret
jg
je
dec
dec
lea
stc
call
push
call
test
jo
add
or
cmp
sti
push
testl
inc
movlps
push
call
or
xor
push
cmp
xchg
mov
in
xorl
xchg
jl
add
std
decl
jno
xor
add
dec
lds
pop
add
push
and
in
push
fdivrs
jb
pop
jne
clc
xchg
mov
sub
adc
fdivrl
cmp
jl
ljmp
mov
xchg
push
push
jbe
dec
cmp
call
insl
push
stos
add
xlat
jle
fcmovb
inc
add
mov
adc
add
sbbl
not
push
mov
add
mulb
jmp
addr16
fadds
add
add
xlat
push
mov
add
testb
ljmp
out
idivb
shr
in
push
insl
jns
add
add
fidivrs
daa
cli
je
push
ljmp
or
and
fldenv
ficoms
add
add
in
jl
mov
push
jmp
sbb
jmp
insl
mov
add
jbe
out
ss
outsb
js
add
push
enter
xor
adc
add
loop
add
cli
add
scas
xchg
jg
pop
repnz
pop
adc
pop
xchg
bound
jo
stc
add
pop
or
push
je
add
jnp
push
jmp
dec
or
jb
or
mov
adcb
sahf
out
jmp
lea
icebp
add
in
cmc
add
ljmp
roll
rorb
ret
out
add
call
fldenv
out
add
add
call
aas
add
add
cmc
jmp
pop
fldenv
jb
jl
jle
in
xchg
fcomps
shll
or
ret
and
mov
push
out
push
pop
icebp
mov
pushf
decl
int
punpcklbw
and
mov
out
and
mov
pop
into
jge
das
rcrb
xchg
fisubs
add
add
flds
ret
pop
fmuls
add
in
sub
add
nop
sarb
jnp
cli
push
les
mov
mov
dec
jb
out
data16
cmc
andl
add
pop
mov
das
ret
add
icebp
and
push
mov
adc
ret
inc
add
jo
icebp
add
inc
jb
cmp
add
add
adc
pop
pop
jo
xchg
ficompl
stc
imul
shl
daa
add
stos
jmp
repnz
daa
add
mov
scas
testb
mov
mov
jl
testb
add
aad
jg
icebp
push
les
arpl
loope
out
in
push
mov
sbb
das
or
add
mov
pop
cmpb
mov
in
test
push
or
imul
sub
addr16
jg
call
push
imul
mov
add
test
rcrl
mov
in
push
add
push
lahf
lock
mov
std
mov
in
add
and
aad
stc
cmc
add
add
add
inc
clc
call
ret
sub
aas
inc
lock
push
add
jae
clc
bound
pop
and
in
sub
mov
or
fdivrp
out
fstps
out
ja
add
cmc
mov
lds
add
push
dec
push
in
sub
inc
add
dec
add
push
push
inc
aam
je
ljmp
jo
inc
jno
add
cmp
fidivl
sti
adc
pop
les
test
add
test
jns
jns
ret
push
and
out
pop
out
addps
add
pop
or
pop
jmp
jne
cmp
sbb
mov
movsb
push
or
pop
add
or
add
jo
xor
idivb
push
add
loope
xor
inc
or
add
jnp
pop
orl
cmp
mov
xchg
jmp
jecxz
repz
div
loopne
and
bound
int
test
sti
push
adc
sub
inc
shll
mov
push
int
and
nop
inc
mov
mov
xchg
lock
mov
add
std
or
imul
and
add
add
fwait
repz
testb
dec
outsb
aas
mov
cli
add
sbb
negb
inc
or
add
fcompl
dec
loop
cmpsl
or
sub
sbb
mov
das
out
notl
cmpsl
inc
jns
xchg
or
add
add
add
xchg
or
sbb
jecxz
iret
adcl
jne
out
inc
stc
fcompl
and
add
add
cmp
addr16
and
add
cmc
sub
add
inc
ret
psubq
sub
ds
dec
sbbl
or
jb
or
sub
add
call
jnp
or
cmp
aad
jmp
je
and
lds
or
add
cli
add
mov
add
incl
shll
sbb
jmp
call
or
jmp
loope
or
add
add
add
iret
inc
ret
adc
cmpl
sbb
push
div
jno
loope
jno
fsubr
loop
push
add
add
add
add
xor
xorl
mov
ja
ljmp
mov
call
dec
std
inc
inc
jno
jno
cmpsl
mov
dec
mov
popa
insl
add
js
add
negb
or
cmpsb
add
decl
pop
clc
or
jecxz
dec
add
mov
jp
or
add
vandnpd
pop
out
shrb
cmp
imul
add
cmp
jmp
jmp
cmp
fildl
or
and
push
cld
xchg
jmp
push
fistl
and
pop
inc
add
mulb
es
call
clc
inc
test
add
add
add
cli
add
adcl
fldln2
fidivs
je
outsb
fcmovnu
fimuls
rolb
xchg
out
testb
mov
mov
add
nop
call
or
xor
mov
add
ss
xlat
out
testb
insl
insl
filds
clc
fldcw
out
mov
das
rcl
ja
filds
outsl
add
add
add
push
or
test
fiaddl
ss
add
es
test
jmp
xchg
pop
jle
incb
test
rcll
add
popf
inc
aas
xchg
mov
or
fs
cld
into
xor
inc
mov
dec
arpl
mov
test
xor
inc
cmp
push
mov
mov
cmp
negb
add
jg
orl
jle
push
sbb
push
fiaddl
and
push
bound
in
aas
into
add
inc
pop
or
or
mov
adc
or
mov
sti
dec
or
and
mov
mov
inc
push
mov
hlt
adc
inc
aas
sti
add
add
pop
mov
aaa
dec
add
add
fisttpl
ljmp
or
cld
cli
jne
mov
push
jo
push
xor
enter
add
pop
add
ret
jae
rcr
testb
ljmp
arpl
push
inc
testb
pushl
in
xor
sub
aas
push
cmp
shll
rolb
add
add
jbe
add
ss
add
add
in
add
mov
les
fcmovnb
pop
xor
mov
add
divb
mov
mov
bound
mov
adc
mov
mov
add
jne
add
fisubrl
dec
adc
out
mov
jecxz
mov
add
cmp
jmp
cld
add
add
add
sbb
je
push
mov
add
dec
xchg
call
rep
push
sbb
cld
into
fdivrl
out
ds
cmpsb
shrb
ss
push
mov
push
adc
mov
inc
out
mov
add
xorb
jmp
ss
cmc
add
outsb
add
add
sbb
std
aad
lock
and
xchg
cmc
and
ss
sub
call
hlt
sub
cmc
jge
mov
cmp
xor
lds
cmc
jge
xorl
add
xor
aas
and
cli
cmc
add
mov
test
sahf
call
add
add
add
pop
out
push
shll
decl
rolb
mov
ret
pop
aaa
or
add
push
adc
je
push
aas
pop
mov
push
push
pop
call
aaa
inc
xchg
std
xchg
and
adc
out
adc
pusha
fmuls
jns
dec
incl
aam
pop
sbb
add
pop
sbb
push
add
add
fisttpl
and
mov
cmc
ds
decl
lcall
mov
xchg
push
jmp
or
lock
insl
ret
imul
fisubrs
dec
adc
jge
loope
imul
mov
loop
jmp
sub
jg
aad
mov
jmp
dec
dec
add
add
jb
dec
stc
pop
test
imul
sbb
jecxz
mov
imul
lret
add
lock
pop
aas
adc
or
xor
mov
push
lods
std
sub
or
testb
add
loop
daa
add
dec
jmp
scas
je
add
sti
pop
jmp
fisttpl
out
test
mov
add
or
out
mov
lret
std
out
sub
cld
out
mul
add
out
sub
rcrl
pop
or
xlat
sub
dec
mov
testb
add
jnp
push
jne
into
inc
xchg
push
cld
jge
mov
push
add
in
push
loope
mov
inc
xor
test
add
add
xor
aaa
icebp
mov
jge
dec
sbb
adc
je
and
out
dec
inc
jmp
test
shlb
jmp
into
sar
bound
add
adc
cmpb
pusha
ret
lock
sub
ss
std
dec
pop
xor
jae
outsb
cmp
jno
xor
lods
fwait
call
idivl
inc
inc
adc
faddl
add
or
mov
pop
ret
push
mov
str
std
cmc
inc
sub
call
mov
push
sti
ja
lea
and
mov
nop
add
mov
lea
call
cwtl
int3
je
lahf
push
mov
push
add
or
add
add
add
mov
ds
call
mulb
or
faddl
mov
lods
xor
neg
jge
mov
shll
arpl
std
mov
inc
add
stos
add
aam
fiadds
mov
jae
pop
mov
add
mov
mov
add
add
push
pop
mov
sub
push
pop
sbb
call
out
cmp
add
sbb
das
movsl
aad
mov
mov
scas
insl
sarb
jmp
jg
jecxz
ss
out
cmp
div
icebp
add
adc
movsb
add
ss
aam
jne
add
test
push
bnd
mov
push
out
xor
hlt
mov
sub
push
add
add
std
out
push
roll
pop
add
test
and
fcompl
push
inc
out
mov
in
and
adc
fcomip
nop
call
add
jp
pushl
add
mov
push
add
ret
add
xor
ds
add
push
add
or
int3
add
std
ja
mov
add
jmp
add
add
xchg
push
add
stos
xor
add
shlb
mov
lret
cmp
mov
push
or
mov
adcl
xor
rorb
mov
lock
sbb
xchg
ja
loop
jns
mov
or
push
mov
or
pop
sti
ja
mov
and
add
dec
inc
add
inc
pushf
push
decb
mov
or
ret
das
rorb
imul
dec
or
add
lahf
test
je
dec
adc
inc
add
popf
xor
inc
pop
ret
sub
push
xor
adcl
mov
and
test
ljmp
out
adc
add
add
loop
add
negb
cmp
lods
je
mov
xchg
inc
testb
add
aas
jne
sbb
aaa
sub
jmp
dec
add
repnz
mov
sub
adc
inc
test
mov
mov
jnp
mov
fnstsw
cmc
pop
dec
sbb
and
aad
test
push
inc
out
xchg
push
das
add
aam
adc
add
fiaddl
push
das
or
imul
inc
scas
jp
pusha
das
and
lds
jg
mov
pop
divb
add
cmp
inc
divb
negb
jg
add
add
or
ficoms
fcoms
movsl
cmp
into
push
push
js
clc
adc
add
lret
cmp
add
jne
adc
test
nop
in
add
add
lret
in
out
out
test
cmp
ds
mov
cmp
out
lock
sbb
push
cmp
scas
push
push
mov
fsub
mov
add
in
int
jmp
sbb
into
inc
jmp
cmc
cmpl
mov
rclb
cmp
jb
mov
repnz
shlb
add
mov
leave
std
jb
clc
subl
add
fisubrl
push
xor
fs
je
outsb
hlt
inc
js
fnsave
jmp
jbe
or
test
sbb
lahf
std
add
or
std
pushl
dec
push
adc
lock
adc
adc
div
std
incl
add
lock
xor
je
aam
dec
cmc
pushf
std
data16
pop
or
or
fwait
int3
add
inc
pop
mov
rcll
add
test
push
pushf
cmp
fs
cld
jne
mov
adc
ljmp
leave
leave
std
push
in
ja
inc
add
mov
pop
or
fwait
add
add
add
sbb
aas
notb
dec
and
sub
in
add
add
push
push
flds
add
div
pop
add
add
sbb
fiaddl
add
sbb
sar
push
adc
int
repz
or
xlat
test
int
dec
in
mov
flds
add
ret
testb
shl
jno
add
add
fldenv
mov
add
xlat
aaa
add
repnz
add
or
addb
int
add
cld
daa
test
int3
mov
dec
mov
push
sbb
stos
add
jb
pop
into
jb
cli
repnz
add
or
add
add
cmp
in
aam
out
mov
shll
jne
xor
xor
testb
lret
sbb
add
out
pop
test
pop
in
out
lds
add
cli
ret
xor
cmpsb
inc
add
les
or
fistps
push
xor
std
fsubl
aas
jmp
fisubs
push
sub
ja
push
cmc
push
mov
adc
subl
cmpsb
fiadds
cltd
fiadds
cltd
mov
push
pusha
add
add
shll
hlt
insb
jb
pop
rorl
je
sahf
inc
cld
sbb
icebp
push
jo
std
mov
shll
clc
jmp
sbb
out
paddw
in
mov
mov
je
lahf
add
adc
lret
adc
push
xor
sub
cmc
pop
add
cmc
add
add
cmp
or
or
mov
push
incl
push
inc
pop
jle
or
mov
std
inc
dec
add
xchg
add
jnp
add
icebp
imul
sbb
mov
loop
pop
call
jmp
test
add
es
jp
xor
insl
adc
call
add
add
add
jbe
mov
fnstenv
flds
push
push
dec
push
cs
sbb
neg
pop
dec
jae
adc
mov
pushl
cmp
mov
push
cmp
lds
fnstcw
dec
les
pop
jl
push
xchg
push
jmp
push
shll
jo
aas
add
cli
add
ja
mov
add
adc
add
jecxz
sub
ss
dec
stos
sub
jecxz
out
xor
aaa
push
fldcw
lock
fs
roll
cmpsl
lcall
inc
mov
inc
idivb
dec
in
ja
xor
adc
add
mov
hlt
jl
mov
xor
iret
ss
dec
out
pop
add
add
jne
push
push
jmp
mov
pop
jns
lods
add
mov
jo
jb
call
xchg
sub
ss
std
add
jbe
rorl
push
dec
dec
pop
adc
jne
and
ds
bound
inc
mov
aaa
push
add
cmc
add
mov
lret
ret
add
cmp
call
mov
add
adc
xchg
push
add
pop
bound
mov
std
out
mov
call
add
std
fs
pusha
insb
add
or
add
inc
addl
in
sub
fistpll
add
xor
decl
xor
dec
iret
xor
mov
in
mov
popa
cld
add
jno
add
add
xor
call
sbb
incl
call
add
xor
lea
mov
inc
in
xor
call
int3
mov
push
xlat
sub
out
out
mov
and
out
jnp
repz
je
adc
fsubrl
inc
and
and
imulb
add
cld
cmp
cmpsl
jnp
imulb
js
stos
xor
mov
roll
imulb
hlt
sbbl
add
jns
outsl
gs
jno
jge
imulb
hlt
addl
jns
jae
repz
add
and
test
testb
mov
das
test
fs
add
add
push
pop
test
jne
int3
jmp
jg
scas
mov
jg
dec
pop
jb
cmp
test
mov
mov
sarl
inc
sub
mov
xchg
mov
les
subl
jbe
push
dec
pop
mov
jae
jbe
add
add
add
inc
loope
sarl
sub
or
std
ret
jae
dec
negb
mov
jno
hlt
shll
mov
pop
stos
out
add
cmpsb
mov
jp
or
cmc
add
mov
or
pop
inc
mov
inc
mov
shll
add
rorl
inc
mov
add
test
xchg
push
push
mov
sub
push
xchg
pop
add
test
ret
sbb
push
sub
or
sbb
add
les
add
or
inc
pushf
std
ljmp
pop
testb
je
cmp
push
call
jl
pop
leave
lea
add
add
add
inc
ret
pop
xchg
or
clc
sbb
push
push
sbb
and
imul
dec
scas
mov
lahf
idivb
cmpsb
out
inc
and
pop
cmp
and
push
and
fidivl
dec
and
ficoms
xorl
xor
xor
and
fildll
mov
into
sbb
add
add
dec
xchg
into
sbb
xchg
into
in
xor
dec
push
jae
out
mov
out
cli
test
in
imull
in
hlt
test
or
sbbl
in
movb
stos
xchg
in
out
jne
fwait
adc
cmpsb
lea
out
test
or
mov
stc
mov
add
lods
or
outsl
inc
add
jg
repz
pop
jb
popf
mov
add
icebp
push
jb
mov
das
cmp
add
or
outsl
lcall
jecxz
and
and
pop
dec
mov
inc
daa
jmp
rclb
rcll
inc
add
test
cli
cmc
add
jo
hlt
mov
add
lea
lds
add
push
mov
add
pop
ss
popa
add
jo
add
lods
ret
rcll
push
push
and
clc
jb
adc
jmp
cltd
add
cmp
xor
push
hlt
insb
int
add
jmp
add
add
mov
inc
add
dec
int3
push
dec
movb
sti
adc
test
pop
cmp
adc
jg
sbb
jo
rolb
push
jmp
stc
pop
lcall
rclb
inc
pop
addr16
lret
inc
push
call
pop
mov
imul
add
jno
sbbb
adc
add
add
std
pushl
inc
or
insb
out
sahf
std
out
and
in
xor
push
push
fdivl
or
test
xorl
add
jmp
test
mov
add
push
dec
adc
test
mov
loopne
adc
xchg
mov
jne
mov
dec
rcrb
rcll
cmpsl
push
push
add
add
push
mov
out
xchg
mov
or
mulb
or
imul
into
or
lahf
add
add
sbb
cltd
sub
adc
icebp
mov
xchg
shr
add
mov
jns
push
cli
mov
xchg
add
add
out
lds
add
push
scas
stos
add
mov
movl
fs
int
loop
aaa
fcmovu
imul
mov
fldcw
outsl
inc
sbb
sahf
shrb
jle
lds
test
add
imul
jl
call
lea
xor
xor
and
cmp
out
add
pop
mov
cmp
lds
imul
cmc
add
cmpsl
in
inc
int
mov
fadds
cmp
xchg
add
jmp
stos
test
pusha
repnz
cmc
add
pushf
in
out
out
add
bound
push
aaa
add
out
inc
xor
mov
xor
add
ja
cmp
push
call
mov
and
mov
fidivs
and
mov
je
cmp
adc
test
call
mov
mov
je
mov
push
push
pushl
push
add
adc
out
mov
add
ret
ret
or
or
jmp
mov
add
push
call
add
or
pop
into
push
mov
jg
xchg
mull
lods
addb
hlt
xchg
mov
inc
fidivl
aas
sbb
out
mov
and
sub
jne
or
lret
mov
add
dec
mov
inc
or
and
or
add
add
and
cmc
fucom
push
cmpsb
mov
xchg
push
test
adc
jno
movsl
inc
sbb
push
les
mov
testb
pop
outsl
sahf
lds
add
fimull
out
out
mov
test
jns
push
jae
in
mov
stos
iret
shll
add
lret
psadbw
add
inc
mov
setle
cmpsl
add
insl
pushf
mov
cmp
sub
fxch
outsl
push
or
add
jecxz
repz
cli
cmpsl
sar
fiaddl
jg
sbb
adc
adcb
dec
sbb
daa
add
add
add
inc
jl
in
pop
lret
mov
dec
test
dec
cltd
dec
or
cmc
jnp
loope
shlb
jae
sbb
add
insb
mov
push
insb
mov
add
outsb
das
or
jb
add
jnp
stc
outsb
aas
cld
cmp
lock
out
push
repnz
add
fildll
ror
add
inc
cld
jbe
jle
lock
jbe
add
add
js
jne
test
and
pop
push
idiv
decl
push
or
or
lahf
test
adc
adc
xor
add
add
and
repnz
push
imul
xor
add
fadds
pushf
mov
jae
call
call
test
cmp
es
incl
add
lret
xor
std
mov
mov
mov
bound
sbb
mov
dec
cwtl
ds
mov
mov
mov
cmp
add
daa
sbb
xchg
mull
add
mov
jno
cmp
test
xor
add
or
jl
fs
xor
adc
add
add
cs
or
xor
subl
xchg
loopne
test
mov
mov
jmp
in
testb
aas
cwtl
sub
adc
jb
es
sbb
aas
add
jecxz
out
add
addl
add
mov
imul
push
xorl
movsl
mov
add
add
xor
jb
sbb
push
repnz
inc
insl
sub
popa
add
test
sub
testb
xor
call
push
imul
ljmp
bound
in
pusha
sbb
mov
or
in
and
jl
repnz
jae
and
cmc
cltd
push
add
add
xchg
jp
lds
add
jb
arpl
test
cmc
pusha
push
jb
push
std
mov
lods
ret
dec
jp
add
clc
add
cmc
add
imul
sti
cli
test
push
call
int3
push
sti
mov
sti
jne
jb
adcl
mov
add
or
adc
add
add
add
packsswb
or
lock
shlb
call
cmp
mov
and
cmc
pop
add
out
je
jg
inc
xor
add
jmp
xchg
std
mov
xchg
scas
add
jne
pop
and
cmp
mov
jl
lock
add
fildl
mov
popf
adc
jge
out
jg
or
fbstp
and
xor
cld
dec
mov
addl
adcb
add
mov
cltd
pop
cld
xchg
add
lods
lds
ss
sahf
add
cmc
inc
and
fwait
xor
arpl
mov
add
add
jno
sbb
bound
push
pusha
add
adc
adc
out
cwtl
shlb
cli
cmp
mov
fidivs
outsb
mov
cmp
inc
out
loopne
mov
fldl
in
jge
cmp
ljmp
add
inc
ret
inc
mov
and
in
lds
mov
out
mov
sbb
imul
inc
xchg
hlt
imul
mov
or
jae
ljmp
stc
xchg
or
jmp
cmovo
pushf
das
adc
cld
mov
push
push
fmulp
clc
xor
cmpsb
dec
add
cmpsl
fdivl
add
imul
add
inc
push
fisubrl
jb
loope
aaa
hlt
mov
add
dec
inc
das
adc
cld
cld
aam
lods
adc
sub
xchg
stos
stos
mov
dec
mov
dec
push
decl
push
cld
jmp
push
jg
loopne
add
mov
pop
ret
push
mov
test
clc
pushf
mov
daa
push
push
add
add
lcall
idivl
and
popf
jb
sub
push
push
mov
add
inc
and
std
dec
xchg
decl
add
sete
pushl
mov
je
cmpsl
ljmp
je
imulb
scas
jae
inc
pop
test
pop
add
lret
mov
fs
cmpsb
imul
popf
add
jae
and
and
incb
mov
lret
stc
dec
adc
icebp
push
cld
cld
add
testb
jecxz
push
adc
adc
repnz
push
loopne
add
or
std
and
adc
add
inc
idivb
pushl
add
add
inc
cmp
add
repnz
dec
pop
xchg
out
aaa
adc
lcall
add
arpl
xor
or
xor
or
xor
scas
add
ja
out
ja
call
fsts
dec
sbb
ss
jmp
out
lock
test
lods
shrl
lret
jle
fucomp
cwtl
idivl
add
or
xchg
out
cmpsl
aam
add
add
jp
or
or
je
testb
in
inc
jmp
or
and
loop
repnz
cmc
dec
std
cld
xor
push
push
arpl
call
xchg
dec
adc
rcrl
add
pop
cltd
jae
hlt
add
int3
inc
or
aam
inc
flds
add
or
and
sub
cmp
cmpsb
jae
cmp
call
cwtl
inc
add
push
sti
xorl
pop
ljmp
pop
int
add
mov
adc
std
call
out
or
lock
xor
inc
imull
or
xchg
punpckhdq
outsl
push
push
lea
in
and
addl
jno
add
add
in
adc
mov
movsb
cld
adc
sbb
ret
push
xchg
bound
fbld
shlb
adc
inc
or
pop
jno
testb
push
jg
mulb
lods
add
mov
adc
cwtl
dec
ret
push
mov
xchg
jge
loop
dec
push
mov
mov
add
stc
out
add
xor
test
je
add
cmc
pushf
cmp
mov
xchg
cltd
xor
fwait
add
inc
and
push
icebp
movsb
mov
pop
inc
mov
add
pop
les
jb
sub
loopne
cwtl
jp
mov
xchg
loopne
or
add
xor
add
jl
das
stc
jns
loopne
cwtl
repnz
andl
mov
cmpsl
add
jns
xchg
hlt
out
or
fcomps
jb
mov
outsb
xor
fwait
movsl
xchg
push
stos
int
int3
lret
add
xchg
lcall
add
jle
clc
mov
lds
add
jl
push
cmp
fistl
push
push
add
push
dec
sti
out
cmp
std
loopne
das
add
add
add
and
mov
or
cmc
add
adc
ja
in
and
movsl
adc
inc
add
stc
cld
movsb
insl
das
call
lcall
or
inc
movsl
adc
inc
add
cld
cmp
loope
mov
mov
call
cmc
inc
pop
pushf
cmp
add
sbb
jb
push
adc
add
add
jg
push
notl
add
data16
and
test
sarb
iret
cmp
and
or
jo
scas
adc
xchg
mov
in
cmpsl
cmp
test
jl
cld
pop
push
xchg
jo
cli
or
roll
mov
ja
jno
into
push
mov
mov
add
add
add
dec
sti
call
add
push
ja
jecxz
syscall
add
sarl
add
lock
push
test
add
lods
lea
ss
jl
sbb
or
idivb
push
push
call
add
divb
fadds
fadds
call
jge
pop
adc
cwtl
push
notb
clc
out
out
add
hlt
addl
add
add
sbbl
jnp
stos
incb
push
lds
cwtl
cmpsb
adc
inc
add
cs
sti
add
test
or
push
inc
or
sbb
idiv
add
cmpsb
divb
lods
call
or
add
jnp
das
or
fdivrs
cwtl
lods
cmpsb
mov
add
cmpsl
add
jne
cld
jbe
repz
add
add
daa
add
jl
lods
andb
adc
dec
push
pop
push
pop
orb
cmpsb
cmpsb
mov
push
inc
add
mov
cmpsl
add
sub
cmpsb
dec
jge
add
add
xor
mov
add
push
or
and
mov
lahf
std
mov
pop
pop
add
add
enter
xor
aas
das
xchg
push
fs
adc
add
push
hlt
jae
xor
andl
cmc
add
xchg
mov
call
imul
in
je
out
add
mov
in
add
negl
mov
xor
pop
mov
add
jecxz
inc
add
test
insl
xchg
test
or
scas
xor
sub
dec
roll
enter
std
jmp
les
out
sti
mov
xor
adc
add
sti
adcl
inc
xchg
js
push
movl
call
test
lock
inc
jnp
mov
xor
add
add
push
leave
fstl
jg
negb
dec
push
pushf
stos
push
push
addl
jae
adc
std
jmp
test
clc
jne
mov
add
cmc
popa
add
cmpsl
add
mov
inc
hlt
in
push
jae
aad
aaa
cmp
pop
adc
test
add
cmpsl
add
add
lret
lock
adc
enter
pop
mov
idivb
mulb
je
and
std
ljmp
test
pusha
out
shll
pop
push
and
xchg
mov
in
fiaddl
andl
add
inc
lret
pop
xchg
test
xor
add
sbb
test
lea
std
stc
inc
add
add
filds
adc
mov
leave
jmp
lea
ret
and
hlt
mov
nop
in
aas
ret
inc
jmp
xchg
adc
or
jmp
movsb
push
add
in
and
and
jb
or
pushf
jge
jae
push
adc
insl
xchg
std
js
je
push
adc
bound
loope
pop
out
mov
fiadds
add
or
std
gs
test
jae
mov
mov
cmc
popf
jae
pop
fisttps
aaa
fcmovnb
ret
das
mov
filds
jbe
movsb
adc
cli
addl
shll
ret
or
xor
add
inc
add
pop
call
push
add
dec
add
adc
test
mov
push
and
add
in
decl
dec
shlb
inc
cld
cmp
add
add
std
pushl
bound
adcb
loopne
in
push
or
sti
add
lea
mov
loop
cld
push
inc
ljmp
divb
push
or
add
push
roll
inc
inc
push
inc
std
jecxz
repz
mulb
cltd
jp
mov
adc
call
push
cltd
orl
call
push
mov
mov
sub
in
xorl
mov
jge
test
xchg
cmpsl
sarb
cmpsl
cmp
lcall
aas
add
add
cli
mov
clc
sub
jns
or
jae
daa
sbb
fsubs
stc
pop
out
cmpsb
add
rcrl
xchg
fldt
jb
jne
xchg
ljmp
xor
cltd
xchg
ud2
adc
sahf
sub
add
add
fisttps
xchg
stos
mov
call
ds
filds
and
jle
mov
add
add
sub
jecxz
add
cltd
sbb
outsb
shll
mov
mov
repz
sbbl
cld
std
fwait
fs
movsl
adc
out
dec
mov
mov
cmp
add
popf
aas
inc
push
push
decb
push
push
or
test
cmp
add
add
clc
sahf
nop
adc
out
mov
or
pop
stc
mov
jge
mov
stos
or
sbbb
inc
lods
ret
adc
loopne
in
push
add
lahf
add
or
and
lea
jns
push
jne
or
xlat
sti
call
mov
mov
inc
add
push
mov
sarb
lcall
push
test
test
jne
jmp
test
jne
cmpl
jne
pop
pop
push
ret
add
and
inc
or
add
pusha
and
das
shlb
push
adc
mov
add
aas
clc
push
or
sti
push
imulb
or
in
or
test
shll
imul
add
add
add
add
push
cmp
cltd
inc
loop
stos
dec
jns
add
or
add
xor
mov
loope
jae
adc
jnp
adc
jge
cltd
xchg
adc
jmp
jns
add
mov
cmp
mov
add
mov
inc
add
add
add
push
inc
and
test
push
dec
shr
mull
add
test
test
popf
popl
sub
repz
add
sbb
pop
sbb
add
out
lret
mov
icebp
fiadds
jl
add
add
xor
sub
push
lea
or
shll
out
pop
pop
pop
cli
aaa
je
add
add
int
pusha
add
in
jl
nopl
jle
adc
fs
sub
call
pop
adc
test
cld
dec
inc
int
cmp
call
jo
fdivl
mov
add
test
xchg
std
out
cmpsl
rclb
fsubl
inc
adc
call
or
mov
int3
cmc
add
sub
add
add
or
mov
cld
xchg
in
xchg
lds
movsl
rcl
dec
bound
test
cmp
inc
add
lret
and
jmp
jp
jmp
sbb
fs
cmp
std
call
and
jns
inc
cmp
inc
cmp
or
add
add
inc
and
nop
ficoml
stos
lret
roll
mov
xchg
add
cmp
lods
data16
add
rolb
icebp
test
into
inc
push
xchg
cmp
inc
add
mov
sti
lds
icebp
add
icebp
push
mov
fstps
stos
aam
in
pop
cmp
test
sub
mov
mov
lret
data16
add
inc
aad
adc
and
std
imulb
inc
outsw
fisttpll
or
dec
cmp
mov
xor
ret
mov
out
mov
movsl
and
mov
ss
and
dec
stc
xor
push
or
sti
cmc
mov
xchg
js
jae
add
movsb
flds
out
mov
xchg
dec
cmpl
add
xlat
xorb
ret
sar
xor
andl
cmp
out
xor
outsl
inc
push
xchg
in
cmp
mov
mov
xchg
mov
fucomi
jbe
hlt
pslld
es
or
aad
testb
or
jbe
out
negb
pusha
inc
sbb
je
add
add
mulb
jecxz
xchg
movsb
jge
push
pop
das
mov
push
cld
dec
push
repz
rorl
into
insb
nop
cmpl
ds
insb
mov
pop
stc
xchg
std
jae
test
dec
pusha
xchg
mov
jge
adc
add
mov
xchg
jo
sbb
xor
mov
dec
movsl
mov
call
add
add
add
and
or
mov
in
call
enter
pop
call
clc
rolb
cmpb
nop
std
lcall
cli
test
push
decl
nop
mov
sti
add
test
jns
adc
or
pop
icebp
incb
xlat
add
mov
cmp
add
dec
add
data16
std
leave
fildll
jbe
jns
or
jne
lea
sarl
pop
xchg
out
mov
je
dec
mov
mov
jne
adc
adc
loope
mov
mov
mov
cmc
scas
add
xorl
jle
bnd
test
push
xchg
mov
adc
or
test
mov
or
std
popa
and
or
iret
mov
xor
add
inc
sub
cwtl
add
lds
mov
iret
mov
push
aad
sub
inc
ljmp
add
add
cmp
xor
jae
cmp
jnp
ja
mov
sti
shlb
add
fistpll
lea
jle
cltd
inc
adc
add
xchg
add
dec
popf
xchg
sbbl
ret
pop
enter
es
add
lods
pushf
sbb
xchg
jb
out
cmp
mov
xchg
vandnps
std
jne
xlat
roll
dec
xor
and
jg
in
add
add
xchg
clc
cwtl
mov
sbb
je
imul
add
and
out
push
test
std
sarb
mov
call
or
mov
std
jmp
addr16
cmp
xor
pusha
mov
idivl
jmp
popa
xchg
sub
out
pop
xchg
enter
add
add
jns
repnz
pop
mov
jecxz
add
test
jne
xchg
adc
push
mov
adc
add
jmp
outsl
jno
bound
lea
call
mov
jns
js
or
ret
es
add
lock
lock
cmp
leave
clc
jnp
pusha
cmpsl
in
sbb
xchg
jg
add
add
add
mov
imul
sbbl
divb
nop
adc
out
imul
sub
call
call
cmpsb
daa
subl
imul
bound
cmpl
add
or
jle
cli
jmp
mov
and
adc
gs
jg
xchg
daa
xchg
lcall
imul
push
pop
fs
dec
add
hlt
adc
idivl
mov
sahf
pop
inc
nop
push
stos
mov
in
and
nop
lods
mov
xchg
or
jl
add
xor
jno
ficoms
cmpsb
stc
push
shrb
cli
popf
dec
test
mov
jge
pop
mov
add
ljmp
xchg
insb
xchg
add
cltd
repz
cmpb
clc
jno
outsb
stos
add
int3
test
dec
rorb
call
arpl
add
jo
or
mov
ss
pop
and
mov
dec
mov
jmp
pop
stc
mov
pop
add
cmp
std
jmp
sub
jmp
jns
call
test
call
jne
mov
repnz
mov
mov
sbb
pushl
xchg
or
add
add
or
mov
dec
js
lcall
mov
call
add
add
jle
xor
jp
add
jge
pop
jp
lcall
xchg
shl
arpl
clc
mov
test
ljmp
dec
mov
std
cli
rorl
mull
mov
xor
rorb
inc
std
incl
add
lahf
or
mov
add
dec
hlt
push
enter
mov
jnp
notb
adc
sbbl
add
jae
inc
lcall
sbb
add
adc
std
data16
add
sbb
mov
xor
ds
cltd
test
add
mov
negb
xchg
push
imul
movsb
sbb
ss
mov
xchg
add
leave
jl
sarb
roll
inc
loopne
jnp
dec
mov
rorl
aaa
add
sub
out
jne
out
testb
pop
testb
rcrb
sbb
inc
insl
xor
lret
add
xchg
jne
negl
push
je
add
add
sbb
sub
outsb
iret
add
add
ja
adcl
fisubrl
pop
inc
fisubrl
pop
or
cmp
dec
ljmp
and
jns
xor
add
or
add
jmp
xor
jae
stc
inc
or
mov
xchg
jmp
cmc
xchg
das
jb
clc
push
push
stc
mov
cwtl
popa
test
add
repnz
or
fxch
aam
jle
cmp
mov
ja
loope
mov
add
sbb
pop
and
xchg
orl
jmp
push
ds
test
loope
decl
add
mov
add
add
and
add
or
pop
out
and
mov
inc
adc
lds
sbb
inc
je
aam
imul
sbb
inc
and
imul
jmp
mov
add
scas
mov
ret
push
mov
int3
dec
push
test
clc
mov
add
mov
andb
mov
int
adc
add
add
push
add
and
add
xor
cli
loope
repnz
fiaddl
jg
insl
jmp
wbinvd
insl
int
cmpb
cmp
imul
cltd
jl
decb
xchg
andl
dec
sbb
adc
add
dec
std
negb
adc
push
add
sbb
cltd
fiaddl
add
arpl
stc
mov
push
mov
pop
and
ret
out
jg
push
cli
das
sbb
jno
ret
int3
mov
aam
xor
subl
fdivr
imul
xor
xor
cmpsl
das
popl
xorl
jno
rcrl
sbb
testb
xor
out
or
rcll
test
les
fisubs
cli
or
jl
adc
into
or
add
sbb
loopne
add
inc
aas
adc
loop
cld
push
divb
and
call
dec
mov
sbbb
sahf
xchg
std
cwtl
sahf
jno
inc
xchg
sbb
pop
mov
add
add
xchg
addl
and
push
iret
mov
and
inc
test
call
xor
lds
into
fmull
pusha
into
fcoml
das
fisttpll
insb
push
or
cltd
test
test
pop
mov
imul
mov
or
lahf
out
imul
je
test
add
lods
cld
pushl
add
xor
push
fdivr
jmp
jne
decl
add
add
inc
out
sti
outsl
mov
std
adcl
lcall
nop
jns
pop
std
out
xchg
jp
xor
add
and
cmp
push
xchg
pusha
or
notb
jg
roll
xchg
subb
add
add
pop
jne
imulb
mov
push
call
mulb
imul
sahf
push
idiv
adc
dec
clc
jg
loopne
jae
adc
js
xor
add
jnp
dec
or
insl
loopne,pn
jmp
and
or
cwtl
in
xorb
jl
popa
jbe
rclb
test
add
jp
in
xorb
ret
mov
js
and
push
test
mov
fucomip
add
cmp
loopne
packsswb
and
jo
jg
sarb
and
call
sahf
int
testl
pop
jg
loopne
imul
dec
gs
dec
rcrl
jns
add
dec
mov
fists
out
outsb
lds
ss
ljmp
xor
ljmp
std
insb
mov
or
adc
cmc
xchg
adc
das
std
fs
add
testb
aaa
lret
aad
ret
lret
call
inc
adc
jmp
jne
mov
add
cli
ljmp
lock
jmp
das
push
push
adc
jmp
stc
xchg
push
add
rolb
lds
push
arpl
int
add
lock
mov
mov
test
add
add
pop
stc
call
pop
lds
dec
add
add
xor
xchg
add
add
add
sub
mov
divb
inc
cld
adc
add
add
js
push
ja
jp
pop
xor
pop
adc
roll
inc
cld
inc
add
rorl
push
addr16
push
ficompl
das
andl
cli
lahf
imul
mov
add
push
test
add
add
push
jns
and
xchg
or
jg
inc
imul
sbb
push
jle
imul
sti
xchg
dec
aam
add
jae
push
jp
imull
lock
clc
inc
jne
adc
ljmp
pop
push
jne
adc
mov
jae
in
negl
out
testb
add
sub
add
adc
test
inc
pop
adc
cmpsl
add
xchg
idiv
cmp
pushf
or
aas
addr16
out
pusha
xor
ficomps
and
sbb
aad
jo
rclb
pop
sti
and
imulb
pushf
xchg
jnp
imul
out
mov
leave
mov
inc
pusha
insl
push
fimull
lds
addb
add
adc
add
rcll
insb
clc
mov
add
out
insb
rolb
xor
cmp
cmc
push
mov
out
inc
or
xor
inc
ret
int
add
scas
aad
lods
sub
mov
rorl
lds
enter
test
out
jbe
jmp
add
add
inc
out
xchg
in
add
fisubrs
mov
out
add
loopne
push
repz
pushl
adc
out
adc
js
in
add
lds
ja
sti
lcall
mov
bt
ret
mov
jae
out
loope
int3
cli
jo
int3
out
cli
jne
or
push
clc
stc
out
jge
add
add
inc
bound
inc
ljmp
ja
cmp
fdivrl
icebp
jmp
loope
rcr
in
cmp
cli
jmp
das
rolb
out
cmp
fnsave
negb
pop
aaa
ret
mov
adc
pop
add
roll
popa
jle
and
xor
jecxz
je
faddp
daa
cmc
add
outsl
jle
scas
arpl
add
add
ret
imul
ljmp
jnp
imul
es
ud1
adc
cli
loop
pop
jae
js
inc
cmp
out
or
add
sub
mov
add
inc
sub
lds
sar
jmp
repz
pushf
jge
js
or
push
jb
jne
out
xchg
add
add
add
nop
subl
testb
iret
std
ja
jge
js
adc
push
jg
ja
jl
test
daa
clc
hlt
mov
mov
imul
in
jmp
ja
ret
insb
jge
jg
ja
mov
add
xchg
insl
aaa
xchg
adc
ror
sarb
mov
dec
ja
repz
add
add
andl
int3
mov
sar
adc
jne
push
in
jmp
imul
sbb
pop
cmc
lea
rcr
jne
fldl
ja
lods
add
push
enter
test
loope
pushw
add
push
jo
or
fisubs
call
js
or
repnz
call
add
add
inc
pop
aas
mov
ret
outsb
inc
add
add
ret
test
sub
push
call
in
pop
ret
push
push
cmc
add
jbe
in
ja
add
jbe
in
ja
add
ss
std
jb
pop
jg
add
jno
pop
push
mov
test
xlat
push
push
pop
add
inc
lret
cmp
fildll
mov
mov
inc
pop
sbb
pop
mov
ret
inc
mov
adc
and
mov
idivb
jnp
jns
mov
push
mov
cmpsb
ret
sahf
ret
push
faddp
mov
add
inc
and
or
imul
push
fucomi
and
inc
pop
xor
add
ret
rorl
add
jne
jne
jne
add
and
add
xchg
mov
faddp
sti
imul
clc
push
pop
aaa
cs
out
sbb
jns
ss
inc
scas
adc
std
test
popf
jns
xor
out
iret
sarb
in
push
add
add
sub
add
rcrl
xor
js
mov
sbb
add
add
out
add
jae
or
mov
out
lock
mov
mov
aaa
into
popa
push
in
out
jne
mov
add
out
add
add
mov
jne
test
loope
popa
mov
mov
sbb
call
movsl
pop
inc
pop
cmc
add
add
add
decl
cs
xchg
inc
je
adc
ss
mov
jp
or
icebp
repz
jo
pop
xorl
adc
lock
mov
adc
inc
jmp
ljmp
fdivs
sti
xor
mov
push
in
lods
icebp
iret
push
mov
cmc
jns
div
mov
decl
jbe
add
jle
pop
std
rcrb
cltd
stos
test
stos
fidivrl
movsl
push
dec
in
add
andl
mov
dec
loop
xchg
in
lcall
mov
test
mov
sti
call
test
pop
inc
xchg
add
add
inc
jb
or
sti
adc
inc
jae
mov
addr16
add
xor
test
mov
inc
inc
outsw
push
jbe
scas
jae
lcall
xor
push
in
push
imul
std
add
push
inc
mul
cmp
jae
lock
imul
div
mov
jbe
jbe
jmp
fiaddl
or
add
insl
pop
add
cmpsb
mov
repz
dec
or
inc
inc
add
push
add
idivb
jae
inc
pushf
add
pop
bound
and
jno
mov
daa
sti
in
mov
mov
push
fidivs
es
add
sub
ds
mov
aam
shll
into
pop
lods
add
pop
mov
add
out
cmp
push
mov
jnp
or
in
outsb
js
enter
inc
movl
jb
mov
dec
loope
arpl
pop
imul
dec
adc
pushl
jns
xchg
cmp
andb
outsb
mov
add
add
hlt
add
inc
xchg
call
sbb
inc
or
dec
or
jae
inc
dec
sub
sti
jmp
outsb
ret
pop
bound
dec
cmp
std
andb
pop
mov
jge
inc
cmp
test
pop
xchg
out
xchg
add
add
jne
add
add
add
add
pop
repz
int3
jb
mov
jg
int
jae
add
pop
mov
lods
cmc
xor
fiaddl
call
test
mov
test
and
or
sub
add
rcll
adc
cld
jne
out
inc
or
pop
je
pop
jns
jne
add
sbb
inc
out
ret
jae
pop
je
repnz
cmp
neg
insl
pushf
push
out
pop
jno
jge
dec
aaa
cmp
pop
jne
insl
std
pop
pop
adc
outsb
jb
in
sarb
cmpl
dec
push
cmp
push
inc
or
xor
in
jne
mov
push
rorb
jae
int
sti
cmpsb
iret
xchg
notl
rolb
add
fistpl
notb
inc
sub
pop
pop
test
xorl
mov
notb
mov
test
xorb
call
mov
add
push
jle
push
push
jb
push
push
mov
add
cmc
icebp
addl
cli
and
outsl
es
lds
add
pop
repz
add
add
bound
cmp
outsb
out
xchg
jge
test
repnz
shl
ret
mov
pop
pop
cwtl
sub
movsl
and
mulb
sbb
hlt
popf
xor
add
andl
sub
inc
xchg
imul
call
popa
mov
fdivr
call
sbb
cmpb
add
cmc
out
push
je
addr16
adc
call
mov
std
out
out
jmp
out
out
test
jae
cld
call
jmp
shl
fs
mov
pop
xor
ds
inc
js
add
xor
lock
addr16
dec
add
ud0
jg
jb
mov
out
clc
push
pop
stc
incl
add
ret
inc
iret
out
hlt
pop
cli
je
dec
mov
dec
in
mov
jb
incl
adc
stc
je
icebp
jo
cwtl
adc
adc
add
jge
imul
adc
imulb
je
jg
hlt
mov
incl
jmp
inc
add
cs
push
jp
out
ss
add
add
add
mov
je
std
mov
insb
stc
push
std
push
dec
ds
adc
inc
sar
movsb
insl
cmp
clc
sar
dec
jo
sub
sub
fsubrs
inc
sar
in
push
testl
push
outsb
je
push
clc
repz
outsb
adc
add
orb
jl
pop
xor
pusha
fs
stos
pop
or
lds
jecxz
inc
fnop
add
imul
cmp
fisubl
push
dec
add
push
icebp
in
insl
xor
jno
add
stc
inc
and
sub
idivb
daa
add
adc
loop
xor
out
or
add
sub
add
mov
or
ljmp
aaa
push
adc
sub
div
ret
loope
add
sahf
push
xchg
loop
inc
cmc
hlt
add
jmp
dec
jns
push
push
add
es
mov
add
xchg
outsb
mov
mov
jmp
lods
jp
std
add
add
sar
and
pop
bound
jl
vaddsubpd
cmp
dec
lret
pop
cwtl
test
add
out
stos
mov
jae
jbe
pop
add
or
push
decl
sbb
call
adc
decl
sbb
mov
idiv
jo
add
addr16
fistpl
adc
ffreep
lods
add
add
add
cmp
mov
and
dec
push
mov
out
add
mov
jmp
jl
out
outsl
or
es
incl
xor
sbb
jae
subb
loopne
push
in
sar
pop
imulb
mov
pop
lds
xchg
pop
ja
repnz
mov
notl
shl
jle
ficompl
push
psllq
pop
popf
xchg
in
mov
push
cmc
sub
or
loope
into
adc
add
je
cs
push
sbb
add
inc
add
loop
and
inc
les
add
addb
mov
repnz
shl
out
add
add
cld
out
ss
cmp
ret
cwtl
in
out
pop
gs
jle
jns
add
sub
add
shr
push
sbb
adc
out
out
push
xor
mov
in
out
hlt
add
add
mov
ds
mov
leave
js
mov
add
sti
popa
add
add
adc
cmp
incl
add
insb
shl
repz
and
out
mov
ljmp
andl
jne
nop
call
add
addr16
add
movb
push
sub
insl
fcom
mov
mov
xor
int3
xor
inc
jmp
cmp
push
gs
jmp
pop
dec
cld
sub
int
aam
push
inc
jmp
mov
std
fdiv
pop
lods
dec
add
add
test
repnz
in
fs
jmp
aaa
add
mov
adc
sti
mov
pop
arpl
cmpsl
add
sbb
add
mov
or
popf
addr16
push
aam
out
dec
push
and
or
add
push
call
aam
pop
ret
push
mov
in
js
inc
adc
inc
add
add
jg
mov
loopne
xor
mov
adc
in
ds
jg
popf
cld
inc
iret
jo
daa
and
decl
loop
je
roll
or
std
lds
push
add
insl
cmp
inc
mov
gs
es
notb
cld
imul
je
push
add
add
add
sar
cwtl
lock
fwait
gs
daa
adc
pushf
clc
adcb
std
or
jae
cmpsb
in
shlb
in
mov
pop
pop
add
cltd
clc
jl
dec
dec
and
push
add
cmp
repz
stc
outsl
mov
mov
out
jle
cs
add
add
ret
lock
in
divb
sub
mov
aaa
call
add
cmp
jbe
clc
iret
pop
xor
test
shl
xor
data16
ljmp
or
out
repnz
adc
je
inc
fcomi
dec
adc
add
icebp
test
out
pop
mov
add
add
push
mov
test
mov
pusha
ret
or
fmull
out
jmp
mov
and
hlt
mov
cld
sub
add
stc
enter
orl
mov
je
inc
pop
adc
repz
cmp
add
scas
int3
push
jb
ljmp
add
add
inc
jae
pop
pop
push
popa
int3
fistpll
outsl
pop
add
mov
dec
add
cmp
pop
add
xor
cmp
inc
sub
push
call
or
jo
imul
sbb
jae
cmpb
outsl
scas
decl
lods
sti
adc
sub
add
pop
pop
std
scas
push
mov
out
lret
andl
inc
cld
orb
pop
sbb
push
addr16
dec
pusha
cmp
lret
add
push
push
lock
add
jae
arpl
mov
addr16
add
daa
cmp
repnz
mov
nop
in
or
fdivr
xor
sub
adc
stos
out
add
add
mov
bound
xor
stos
xchg
add
ffree
or
push
shlb
hlt
push
xor
psubusb
jne
divl
lcall
pop
add
mov
sub
dec
arpl
jmp
bound
jo
mov
shl
mov
je
popf
mov
flds
add
icebp
pop
popf
pop
xchg
repz
cmp
inc
cmpsl
dec
mov
out
jle
cwtl
mov
push
aaa
out
pop
pop
pop
or
ret
lret
aam
ret
inc
andb
xor
fisubs
add
clc
std
mulb
add
cmp
inc
mov
test
daa
cli
pop
testl
push
lock
xlat
mov
testb
inc
sub
add
add
add
in
sbb
mov
push
xchg
pop
std
ss
je
fwait
adc
fstl
push
jno
je
in
add
pushl
xchg
or
adc
adc
push
cmc
or
mov
aas
out
popa
sbb
mov
out
maskmovq
divl
sub
jmp
fiadds
add
pop
cmp
mov
std
mov
add
and
add
mov
inc
psraw
cmp
std
ljmp
adc
mov
mov
xchg
mov
insl
or
add
lds
xor
jle
repz
fprem
xor
call
cmc
mov
ret
push
mov
mov
push
push
loope
out
mov
aaa
jmp
incl
add
cmp
push
std
push
inc
or
or
clc
add
add
adc
adc
lds
jbe
imul
adc
push
add
aas
mul
inc
jae
out
or
xor
cld
dec
or
std
inc
fs
adc
sub
add
insb
push
cltd
push
sbb
ss
pop
std
cmpl
xorb
pop
xor
add
xor
in
jb
add
movsl
sbb
jge
ficoms
jnp
pop
std
cmp
sub
or
stos
adc
inc
pushf
pop
adc
or
xchg
pop
xchg
cmp
nop
fdivl
jmp
cmpsb
out
xchg
in
fistpl
xor
pop
push
mov
divb
push
add
add
testb
jmp
mov
leave
push
adc
xor
jge
adc
loop
mov
pop
out
pop
into
lock
fsts
mov
adc
out
mov
inc
mov
inc
or
jge
cmpsb
mov
out
fs
cld
mov
pop
test
add
add
shll
rcrl
pop
mov
adc
cmc
into
add
scas
push
adc
cli
add
lods
inc
cltd
and
scas
push
jb
out
pop
and
std
lcall
imul
xchg
jl
call
pusha
cs
mov
dec
fadds
mov
inc
push
into
sub
std
add
or
adc
xchg
mov
incl
add
push
cmp
push
push
push
jo
push
push
push
push
in
cmc
addr16
add
shr
push
mov
arpl
push
mov
lock
ljmp
shlb
testb
pop
daa
gs
push
mov
je
mov
jmp
imul
inc
lahf
mov
adc
in
cld
adc
aam
xchg
jne
xchg
add
add
push
decl
adc
imul
xor
add
xchg
aad
cli
mov
and
cmpsb
rolb
sbb
mov
aas
or
adc
in
jne
sub
mov
flds
push
dec
sti
xchg
fstps
add
scas
add
sub
cld
jecxz
cmc
aas
notb
mulb
inc
push
pop
lcall
add
es
pop
sbb
imul
mov
nop
jmp
aas
push
inc
inc
add
iret
sti
sbbl
jp
cmp
jecxz
sahf
lret
or
dec
add
push
pop
test
add
scas
outsl
or
insb
int
jbe
jns
push
xor
inc
insb
mov
add
int
sub
push
mov
pop
sbb
xor
add
add
rcl
add
rcl
add
aad
push
fadd
or
out
incb
add
mov
sbbl
and
in
add
add
add
gs
cmpsl
mov
add
xchg
fmul
cmp
add
add
or
xor
cmc
add
dec
rolb
fs
push
bound
mov
jmp
mov
int3
add
mov
jae
jbe
jge
test
pop
cmp
icebp
cmc
push
rclb
push
jae
sbb
repz
mov
ljmp
mov
jg
jae
push
data16
mov
sbb
mov
add
adc
add
add
dec
cmp
clc
push
or
push
xchg
call
mov
fs
adc
sub
and
filds
push
pop
xchg
rcll
xchg
adc
out
add
incl
inc
add
jae
notb
jo
adc
cli
jne
test
pushl
sti
push
sarl
decl
add
in
repz
dec
ret
scas
mov
fs
mov
push
jae
ficoms
std
mov
adc
std
inc
faddl
out
std
pop
rolb
add
faddp
pop
inc
push
cmp
mov
loopne
or
shll
ljmp
dec
cltd
adc
push
add
into
sbb
rolb
add
jg
int
mov
add
or
pop
cs
mulb
test
out
test
ds
sbb
testb
into
stc
push
xor
push
inc
jl
shl
jge
push
ja
lcall
push
hlt
dec
add
cmp
add
push
add
daa
mov
test
in
andl
js
sar
cmp
lods
sub
jmp
sbbb
sarb
push
addr16
fsub
mov
sub
add
faddp
imul
sahf
sarl
dec
sti
cld
push
add
pop
xlat
xor
add
sbb
inc
mov
inc
adc
aaa
xor
mov
xor
dec
inc
jmp
out
add
mov
jae
push
and
push
and
add
jnp
add
dec
popf
cld
pop
add
decl
jp
and
fdivr
clc
add
cmp
clc
jl
cld
add
add
add
jp
decl
mov
add
sbb
cmp
inc
setg
call
xchg
xchg
mov
add
mov
push
push
xor
ds
mov
push
push
pusha
mov
sbb
divb
out
or
std
jp
rorb
mov
popf
cld
xor
add
aaa
pop
cmp
push
in
mov
adc
dec
sar
pushf
or
pop
imul
xor
adc
ficompl
ret
pop
adc
sbb
das
sar
ljmp
sub
dec
movsl
or
push
cmpsb
loopne
pop
jg
pop
std
rcr
std
imul
adc
cs
ds
testb
or
add
add
pop
sbb
loop
add
out
sbb
jl
push
es
mov
mov
out
mov
mov
into
orl
push
in
push
mov
jmp
mov
dec
aam
jecxz
out
mov
cmp
or
mov
pusha
ja
repz
mov
inc
push
aaa
mov
dec
idivb
dec
mov
out
add
add
dec
lods
leave
repnz
dec
into
je
add
cmp
jp
pop
mov
push
scas
pop
adc
inc
fdivl
inc
ret
cmpsl
dec
add
jge
adcb
add
call
pop
mov
test
xchg
in
cmp
mov
pop
add
add
mov
mov
mov
mov
hlt
push
dec
inc
jmp
aas
push
std
sahf
jno
je
cmp
movsb
lea
inc
std
cld
inc
filds
adc
xchg
mov
nop
cld
jne
lret
inc
or
lock
decl
scas
dec
incl
cld
adc
adc
jae
ja
xchg
add
pop
scas
jo
clc
dec
add
shl
mov
push
movb
add
jmp
cld
cmc
push
lock
sbb
and
cld
int3
add
pushl
rclb
pop
clc
sbb
cmc
lods
int3
repz
test
mov
mov
negb
add
sub
hlt
ret
in
add
imulb
inc
ret
aam
pop
flds
add
data16
mov
aad
sbb
daa
sbbl
jmp
mov
add
or
test
ret
push
inc
lods
sti
cld
jecxz
stc
aas
not
inc
or
cltd
pop
add
mov
mov
in
jp
jne
mov
testb
add
pop
loopw
dec
pusha
flds
push
add
add
adc
add
jbe
sti
push
inc
mov
jl
dec
dec
xor
mov
outsl
test
les
jl
cmc
sub
add
andl
pushl
arpl
les
add
add
push
out
add
mov
aam
inc
mov
out
add
or
out
xchg
add
call
inc
add
adc
call
add
insb
cmpsl
push
jmp
bound
mov
pop
push
sar
hlt
gs
jmp
fimull
jmp
cmpb
cmc
add
out
call
cmc
clc
call
add
add
dec
push
in
mov
imul
jge
push
add
jmp
sub
dec
lods
push
add
or
fcmovnbe
jns
add
add
inc
cmpl
mov
add
push
mov
mov
adc
in
jae
cli
lcall
les
test
add
add
add
incl
add
dec
mov
into
rclb
add
fiaddl
adc
xchg
repz
pop
sub
lcall
les
icebp
add
jecxz
out
pop
dec
jo
xchg
push
loopne
add
ss
cmpl
in
dec
jmp
dec
jae
int
xlat
pop
pop
mov
inc
jbe
adc
sar
add
cli
pop
add
notb
shrb
scas
mov
es
pop
add
adc
or
push
add
push
fiaddl
outsl
fs
jmp
pop
pop
inc
inc
dec
pop
dec
jae
add
testl
out
lret
stos
pop
sti
and
rorb
fadd
adc
dec
xor
add
in
imul
add
add
add
jns
std
imul
add
add
leave
add
fiaddl
stos
lods
roll
out
divb
pop
jg
jmp
push
testb
inc
and
jp
pop
cld
sti
out
xorl
pop
sbb
push
js
dec
pop
test
jg
or
jns
movsb
lods
jns
call
scas
mov
add
adc
push
add
hlt
subb
ja
shll
sti
rolb
inc
popf
imul
inc
in
cmp
sub
js
in
ret
mov
or
push
jnp
lods
jns
pop
cmp
aas
push
bound
lds
add
jmp
mov
add
cmc
add
add
add
pop
call
rolb
das
rcrb
rclb
dec
push
icebp
xchg
mov
xchg
in
hlt
sti
decl
cmp
jle
push
cmp
test
add
movb
test
push
xor
mov
divb
cmp
fisttps
cli
or
jl
mov
call
popa
mov
add
mov
pop
add
xchg
mov
cmp
push
push
rolb
xor
aam
je
jg
cmp
mov
pop
add
incb
push
addl
xor
das
pop
push
sahf
lret
add
neg
ds
test
sub
jecxz
add
push
mov
xchg
negb
xor
pop
test
cmp
add
sub
aad
and
inc
std
pop
and
add
std
jp
jne
call
add
sub
mov
mulb
cmp
pop
or
add
stos
pop
rolb
sub
lret
adc
or
ljmp
fisubrl
add
lock
inc
cld
roll
shl
cmp
imul
add
mov
or
mov
mov
out
inc
sbb
je
in
pop
hlt
dec
ret
inc
insb
inc
cmp
imul
hlt
dec
imul
loop
mov
ljmp
add
bound
push
or
push
or
xor
or
sub
orl
add
add
fsubr
mov
addr16
rolb
out
pop
das
push
add
and
clc
push
jb
push
or
movsl
cmpb
cmc
cmpb
mov
rcrl
mov
mov
push
sub
std
push
mov
add
lahf
std
decl
add
add
ret
inc
lock
xchg
icebp
cmp
inc
jnp
out
cmc
jmp
out
mov
js
xchg
stc
cmp
jge
aam
mov
addr16
movl
sbb
add
xchg
cld
inc
inc
movb
mov
jnp
sub
decl
jo
push
jbe
mov
cmp
mov
add
adc
sti
adc
or
or
imulb
adc
jp
subb
add
fnstcw
cli
inc
cmp
pop
int3
test
pop
mov
sub
dec
lods
inc
js
xchg
add
sub
cmp
stos
or
jbe
insl
pop
rolb
push
mov
das
sti
jbe
test
add
mov
adc
push
sub
cmp
js
dec
push
add
add
inc
add
out
or
inc
fistl
cli
add
lret
jbe
inc
xchg
add
aas
hlt
iret
add
out
or
test
xchg
jbe
dec
xchg
inc
dec
andl
xchg
andl
add
and
sub
cmpsb
aas
sahf
filds
xor
mov
fidivs
roll
bound
add
jl
icebp
mov
les
jns
ljmp
push
test
imul
sbb
cmp
scas
int3
inc
add
push
aad
inc
sub
std
pusha
stos
add
push
add
add
test
imul
and
jmp
hlt
fistpl
aas
mov
cmp
pop
inc
mov
cmpl
lcall
inc
decb
sbb
ret
sbb
sar
ds
sub
ja
sti
lcall
mov
vmread
add
xor
inc
add
add
nop
aas
sbb
push
cld
adc
fmul
or
xchg
ret
rorb
push
inc
sbb
or
js
data16
xchg
ret
pushf
inc
xor
mov
jp
int3
sub
sub
jo
filds
les
mov
je
pop
mov
call
add
pop
rolb
add
add
call
mov
dec
rorl
or
sbb
cmpsb
inc
or
insl
inc
call
adc
xor
pop
cmpl
mov
xor
insl
inc
jg
inc
pop
mov
mov
test
xor
insb
insb
add
mov
jnp
stc
push
push
lods
sbb
xor
scas
inc
je
dec
rolb
add
add
pop
imul
sub
pop
mov
mov
insl
add
ja
iret
aam
mov
fisubrs
add
out
mov
hlt
out
bound
jg
fimuls
inc
sub
out
in
movsb
das
mov
or
out
xor
inc
fimuls
stos
test
clc
loope
cmc
mov
scas
fdivrl
ds
add
add
adc
out
adc
loopne
loop
aam
in
lock
repnz
mov
sbb
adc
push
add
push
stc
cmp
mov
pop
xor
add
cmc
mov
imul
jae
dec
repz
sbb
scas
mov
or
add
add
and
mov
mov
aad
sbb
sub
jmp
adc
repz
pop
inc
push
je
sub
call
bound
push
mov
ret
push
ret
in
ret
stc
imul
dec
aad
jo
jo
pop
add
rorl
pop
mov
push
icebp
sti
add
add
lahf
std
push
push
inc
mov
out
iret
add
xor
inc
mov
in
test
addr16
cli
decl
cmp
mov
popl
add
mov
repnz
pop
add
lea
dec
mov
daa
lret
mulb
test
mov
mov
push
leave
xchg
negb
inc
call
add
add
nop
add
mulb
imulb
roll
jno
pushf
inc
cmpsl
adc
cld
or
adc
push
adc
mov
cld
jmp
adc
stos
inc
sbb
stos
add
lahf
clc
add
imulb
imulb
roll
out
mov
jbe
jns
mov
add
jnp
add
add
add
add
aaa
hlt
inc
in
out
mov
aaa
cmp
ficomps
mov
mov
fcmovb
out
mov
add
aad
or
and
add
stos
fisubrl
gs
outsb
cmp
std
aaa
hlt
mov
shl
mov
inc
cmpsl
inc
cli
add
add
mov
cmp
add
add
movsl
adc
adcl
inc
je
or
daa
xorl
rorl
mov
xor
lods
out
imulb
inc
xor
mov
inc
add
inc
lds
mov
add
xor
add
xchg
sahf
sub
sar
mov
add
add
xor
add
jmp
add
mov
or
add
loop
sahf
xchg
and
fdivrs
pop
add
mov
lar
inc
or
adc
adc
xchg
subl
jae
out
or
pop
adc
adc
adc
sti
jne
dec
cld
adc
add
add
jae
sbb
push
call
or
testl
xchg
jmp
pop
mov
push
pop
ret
push
mov
cli
push
push
inc
push
push
imul
jne
cli
adc
dec
inc
std
mov
or
subl
adc
push
fdivs
xchg
sbb
xchg
add
sbbl
fnsave
stos
add
icebp
jmp
sbb
cld
add
inc
divb
hlt
push
jae
or
or
push
mov
or
add
adc
mulb
pop
int
std
jb
cltd
add
filds
xor
sar
sub
add
call
push
sar
add
fidivl
aas
jecxz
test
pop
mov
jge
scas
add
add
test
xchg
add
xor
call
or
sti
xor
in
cli
ret
stc
aad
iret
jle
push
add
sbb
cmp
rorb
xor
add
cmp
adc
ret
mov
add
mov
lock
and
xor
aam
std
ffree
mov
xchg
add
out
lods
cmp
add
imul
xchg
add
adc
jb
rorb
push
and
fstp
xchg
jmp
jne
test
add
arpl
addr16
cmc
add
dec
pop
std
hlt
aad
inc
jmp
or
add
mov
mov
or
cmp
or
lods
call
add
add
mov
fstps
int
insb
lds
std
pop
movsl
lcall
add
inc
cmp
dec
pushl
sub
cld
decl
addr16
cmp
jmp
ljmp
jle
adc
mov
mov
das
ljmp
iret
add
add
add
addr16
decb
add
inc
add
jo
or
fs
dec
pop
leave
dec
add
mov
out
test
sbb
sbb
sub
stc
mov
mulb
add
or
cmpsb
mov
xor
addr16
xor
out
push
insl
sbb
mov
add
pushf
add
pushf
sub
or
add
add
cmp
rorl
cmp
movsb
inc
jae
mov
sahf
xchg
outsb
adc
pop
fiaddl
or
sbb
cld
jmp
adc
negb
je
jle
sub
fwait
xchg
lcall
sub
inc
ret
add
jmp
xor
ret
push
jnp
into
add
add
adc
add
stos
pop
jg
adc
add
shrb
aad
xchg
ss
fld
or
addl
test
clc
testl
xor
insb
test
clc
testl
sub
icebp
rorb
jle
mov
sub
testb
scas
out
jge
and
ret
sub
add
jnp
add
hlt
das
std
pop
jbe
por
add
and
fs
es
pusha
adc
cmc
add
stc
loopne
test
add
inc
jmp
js
pop
jb
lret
shlb
sarl
jno
je
jbe
add
in
jae
ljmp
repnz
out
add
cmc
jo
sub
sbb
add
faddl
jbe
jg
jmp
lcall
in
imul
ds
mov
or
lea
cmp
lea
push
push
xchg
lcall
add
add
jnp
clc
sbb
cli
incl
dec
adc
xchg
add
add
push
dec
push
incl
sti
jne
dec
cld
adc
les
or
adc
mov
notb
jb
dec
xchg
rolb
or
imul
daa
pop
sbb
mov
das
xor
inc
add
mov
shl
leave
xor
jb
mov
jne
std
inc
mov
inc
or
dec
inc
jmp
add
add
cmp
std
mov
arpl
inc
divb
and
ss
shlb
or
lock
sub
lock
xor
inc
data16
out
jmp
cmpsl
mov
mov
aaa
fisttpl
fcoml
add
out
mov
loopne
mov
pop
sbb
add
jnp
and
pop
mov
add
fildl
sti
ljmp
sti
mov
clc
outsl
mov
jp
sub
push
lret
sbb
clc
imul
testb
jle
clc
add
outsb
ret
ljmp
mov
xor
mov
jp
sub
add
cmp
aaa
ljmp
call
sub
int
add
add
std
aam
adc
sti
push
cmp
testb
or
jp
jb
xor
aaa
pop
mov
mov
sub
push
mov
std
pushf
fstps
xlat
mov
int
iret
cwtl
hlt
add
and
js
out
outsb
add
out
mov
dec
into
or
xchg
add
add
je
xor
dec
xor
push
cmp
jle
mov
adc
push
iret
add
rorb
adc
stos
ds
test
jno
ljmp
adc
dec
mov
mov
dec
push
push
ljmp
repnz
test
pushl
lds
push
mov
jl
das
add
add
mov
dec
call
add
popa
cld
call
jae
mov
jne
test
pushf
fwait
cld
loope
jmp
dec
push
mov
imul
jl
push
adc
addl
std
test
in
inc
divb
add
aam
jnp
sub
jns
jae,pn
lret
add
cmp
pop
mov
mov
repnz
add
add
cmpl
jnp
cs
sub
sbbl
inc
sbbl
add
outsl
mov
in
lret
test
add
jne
das
jecxz
cs
jbe
cmp
jle
push
add
jl
cld
dec
jl
jp
cmc
arpl
es
imul
mov
add
das
jp
add
add
add
add
dec
jl
and
pop
jne
sub
shll
cmp
cmpsb
add
mov
lods
repz
inc
pop
add
daa
xchg
adc
add
jl
jmp
cmc
icebp
mov
xor
or
or
daa
mov
std
stos
cltd
mov
cli
add
ficomps
add
add
hlt
loope
inc
jmp
scas
ds
cmp
jg
in
mov
jno
and
cmp
test
test
sub
out
dec
mov
sbb
pushf
mov
lock
icebp
xor
and
adc
mov
push
add
push
daa
jge
lsl
adc
add
add
ret
pop
add
je
mov
push
mov
std
push
jmp
rorl
mov
add
mov
test
jae
dec
ret
dec
add
xchg
dec
push
loopne
add
scas
dec
push
jmp
push
inc
dec
jg
je
dec
cld
adc
int3
in
mov
xor
and
pusha
test
add
addr16
mov
lret
sahf
sbb
mov
xor
call
ljmp
insl
xlat
repz
outsl
pop
stc
lods
femms
insb
dec
push
dec
aaa
xor
std
sub
enter
add
aaa
fsubrp
rorl
cmp
test
out
fcomps
ret
mov
jg
and
add
add
push
mov
inc
rorb
adc
add
fnstsw
mov
in
std
add
lods
jecxz
jns
or
push
mov
jns
pop
jns
push
jns
cmp
mov
hlt
imul
xchg
jp
sub
xor
add
repz
xchg
sahf
add
cli
arpl
dec
mov
inc
xchg
stc
icebp
inc
jbe
jmp
cli
je
out
idivb
jl
mov
fs
add
jno
cld
jno
int
add
mov
sub
mov
cld
sub
xchg
mov
mov
and
or
jp
cltd
out
insl
dec
out
bound
and
divb
mull
icebp
ret
sub
jp
fnstcw
mov
and
jmp
and
popa
repnz
insb
dec
mov
sub
and
jmp
pop
adc
sub
fwait
jecxz
add
add
ret
push
rclb
pop
and
data16
jle
js
and
add
add
pusha
jno
mov
pusha
je
jge
push
sbb
or
xlat
and
addb
incb
push
test
decb
cmc
xchg
jmp
push
or
ljmp
xorl
test
cli
fidivrl
sti
inc
sub
add
xor
out
sbb
add
test
add
mov
clc
or
inc
cmp
cmc
adc
add
notb
sub
popf
add
jmp
xchg
sahf
adc
push
add
shl
loope
sbbb
mov
sbb
cs
cmp
mov
cld
cmp
inc
loop
mov
mov
sahf
mov
sub
add
rorl
xor
mov
lods
xor
mov
push
hlt
shlb
sbb
and
addl
out
test
daa
mov
jne
xor
push
testb
inc
or
inc
testl
jp
or
fidivrs
add
add
mov
dec
scas
mov
add
add
adc
add
mov
cmpsl
add
mov
adc
ljmp
shr
sbb
jg
xor
inc
jae
mov
pop
push
jg
pop
rorb
mov
stc
dec
or
push
cli
add
push
adc
divb
flds
add
add
push
push
lahf
mov
mov
ljmp
push
imul
inc
add
sbb
adc
add
in
sbb
int
jne
dec
cld
jne
cwtl
incl
cld
jne
sti
lock
mov
add
mov
sahf
rorl
xchg
and
fcoms
add
adc
dec
and
fisttps
adc
test
daa
cld
decl
add
test
add
add
dec
andl
xor
jo
in
mov
cmp
jg
incl
cmovno
or
not
add
mov
sub
mov
jecxz
pop
fcmovu
ja
add
add
repnz
cld
inc
ja
dec
xchg
mov
jne
mov
fldl
hlt
push
js
sbb
push
and
add
lods
inc
jae
mov
repz
call
push
ret
ja
mulb
out
inc
repnz
cmp
mov
mov
aam
cmp
add
lcall
cli
mov
add
xor
fldcw
ljmp
leave
pop
andl
leave
adc
inc
jmp
and
adc
xor
data16
out
pop
sar
in
icebp
aas
or
aas
jb
bound
out
pop
ret
into
clc
les
ficompl
jle
cli
fidivs
loope
push
add
add
xchg
les
mov
sbb
jmp
shrl
mov
sti
or
loopne
lock
mov
cmc
adcl
addl
cwtl
or
das
aam
call
repnz
bound
or
aad
mov
add
mov
jo
adc
add
mov
mov
ret
xchg
add
add
roll
add
sub
add
stc
or
call
repnz
sbb
and
lahf
pushl
fwait
lock
decl
lahf
decl
lea
ja
loopne
or
adc
pop
add
jnp
out
or
les
inc
sbb
icebp
mov
add
add
xchg
pushf
leave
add
in
std
cli
jmp
std
imul
pop
add
jae
mov
jo
loopne
add
decl
jae
cmp
cld
divb
and
inc
je
add
cld
mov
adc
icebp
xchg
call
mov
or
rcll
inc
out
lds
add
add
mov
jp
cld
lcall
lds
imull
xchg
daa
add
adcb
push
adc
cmc
iret
cmpb
test
add
cmpsb
inc
add
icebp
out
out
pop
std
insl
insl
in
inc
outsb
add
adc
push
flds
pop
hlt
jle
ficomps
into
aam
pop
mov
test
add
cld
add
add
outsb
add
pop
mov
sbb
mov
xchg
shl
nopl
loop
imul
std
pop
sbb
jne
add
or
iret
idivl
inc
or
aas
ljmp
and
out
dec
leave
call
inc
negl
fbld
push
xor
inc
add
cmc
add
cmc
pop
std
loopne
adc
push
lahf
mov
mov
adc
fstps
stc
sbbb
cmc
add
xchg
fdivs
nop
call
in
mov
jnp
jmp
xrelease
jae
insb
outsb
clc
adc
sbb
adc
sub
push
js
adc
mov
cld
cs
jg
movsl
add
add
adc
out
mov
xchg
stos
orl
cwtl
add
rcr
dec
add
jno
add
mov
inc
xchg
mov
or
testl
push
inc
test
lahf
xchg
adc
js
add
pop
mov
call
std
add
test
pop
add
mov
mov
cli
jmp
xrelease
cmp
push
hlt
jo
lcall
mov
call
scas
adc
sbb
std
sti
shrl
cmpl
add
xchg
ret
clc
lret
add
sub
adc
xchg
mov
push
mov
add
push
mov
fstpl
paddusw
pushf
add
mov
sub
shrl
loopne
adc
ds
push
ret
cmp
mulb
add
push
aaa
test
iret
mov
or
jno
sbb
andl
xor
ret
into
or
mov
repnz
jno
decb
add
add
lods
popa
dec
inc
push
insb
clc
add
out
inc
loope
add
mov
sbb
icebp
popf
xchg
in
adc
mov
jae
cmpsl
or
enter
hlt
out
push
mov
popf
ret
dec
push
xchg
lret
idivl
inc
or
aas
ljmp
daa
adc
adc
inc
test
addr16
mov
fstl
cld
xchg
add
add
adc
pop
adc
push
std
divb
or
call
in
dec
dec
jmp
and
loop
add
imul
xor
mov
mov
dec
call
cmp
loop
add
xchg
js
and
stos
stos
pushl
clc
mov
stc
adc
push
pop
data16
fdiv
adc
hlt
mov
add
subl
enter
add
dec
add
filds
or
sti
testl
loopne
mov
fiadds
mov
fnstsw
xchg
hlt
mov
inc
adc
or
dec
ret
test
adc
test
xchg
add
pop
cld
mov
psubb
fcmovnb
push
add
cmc
pop
add
add
mov
stc
in
test
push
or
idivb
xor
pop
sbb
sub
orb
or
icebp
stos
lret
add
mov
add
out
push
outsl
gs
add
dec
scas
adc
inc
inc
sub
add
ds
cmp
lret
repz
mov
add
xchg
pop
mov
fmull
mov
and
inc
push
sti
add
push
lahf
outsb
xchg
mulb
add
or
loop
add
mov
testb
mov
mov
nop
std
adc
icebp
roll
shl
xchg
or
testb
movsb
sti
sarb
pop
add
add
test
sub
add
lods
adc
fisttpl
jg
adc
inc
sti
push
jge
push
ja
jmp
rcr
insb
jmp
add
mov
add
std
addl
cmc
rcll
add
pop
addr16
out
pop
adc
fs
cmpl
adc
add
icebp
or
nop
idiv
call
add
add
adc
call
addl
subl
clc
add
jns
subl
pop
jmp
jbe
je
mov
clc
call
jg
sbb
sbb
loopne
subl
add
add
inc
sbb
mov
repz
pop
add
lret
add
add
mov
sub
mov
cmp
arpl
mov
sub
sbb
inc
jmp
adc
gs
jp
mov
add
add
loop
pop
xlat
fcmovu
notb
jp
insb
adc
outsb
cmp
adc
push
push
mov
js
call
mov
xchg
sbb
cmp
add
mov
orl
and
dec
adc
jle
add
add
jl
add
imul
xorl
lcall
rolb
sbbb
je
and
or
jmp
outsb
cmc
mov
pop
jle
stc
mov
sub
insl
out
sub
add
mov
add
pop
cmp
cld
add
jne
add
jno
js
and
add
mov
push
lret
push
lret
cli
xorb
push
cli
cmp
pop
mov
pushf
adc
sti
test
adc
push
jb
add
nop
clc
lcall
aaa
sbb
repz
add
flds
mov
out
notb
cmpsb
cmc
leave
or
scas
iret
mov
lret
and
push
mov
add
lret
lcall
lods
jmp
out
add
std
shlb
inc
jmp
idiv
jns
jbe
ja
lahf
mov
or
idiv
mov
call
add
add
stos
imul
inc
je
cmp
shrl
cmp
mov
add
fidivl
add
in
repz
call
jb
lds
decb
mov
add
call
shlb
in
nop
out
cli
mov
sbb
shlb
push
cmp
jae
outsb
std
dec
rorb
mov
add
jns
inc
out
out
xchg
cmp
sub
cmp
ja
mov
cmp
jb
mov
cld
push
mov
cli
call
mov
add
cmp
cvtdq2ps
std
push
mov
minps
clc
call
lea
dec
lds
test
out
lods
pop
icebp
mov
rol
add
add
xchg
rcrl
decl
or
lods
out
imul
sub
sub
insl
rcl
inc
dec
and
adc
inc
dec
scas
imul
pushl
mov
pop
or
sub
out
int3
push
std
int
popf
jo
sub
insl
push
aad
call
lods
adc
loope
scas
imul
mov
mov
xor
add
xor
incb
sbb
push
add
fstl
stos
cli
pushf
add
mov
out
repz
ja
adc
jge
adc
negb
jne
fdivs
adc
shrl
jle
adc
out
idivl
push
sub
pop
add
push
adc
jle
jmp
xchg
or
je
out
add
add
add
add
sbb
jecxz
or
mov
or
adc
inc
ror
cli
ljmp
add
cld
out
enter
xor
icebp
cmpb
cwtl
jle
lds
or
sarb
or
imul
daa
cmpsb
add
mov
mov
mov
or
test
or
out
pop
sti
outsb
add
add
jg
or
jge
pop
stc
or
mov
add
fidivs
sti
inc
add
jg
cmc
add
cmp
or
in
cmc
loopne
call
stc
add
std
fidivs
cli
add
idivl
das
mov
push
pop
and
repnz
decl
std
das
add
divl
pop
cmp
andb
cli
sgdtl
mov
add
add
cld
incl
mov
xor
push
pop
andl
and
sub
cli
ficompl
adc
idiv
cmp
cmpsb
inc
cli
dec
xor
pop
or
fimull
sbb
repz
or
call
push
test
int
or
and
add
jmp
push
int
add
add
sbb
out
sub
lahf
or
xor
add
fwait
dec
stc
jno
jg
sti
push
add
outsb
or
jae
add
add
int3
and
sbb
or
xor
fcomps
negb
cld
test
or
xstore-rng
cmpsl
push
std
adc
scas
imul
addr16
add
cli
mov
pop
cmp
add
xorl
add
in
jae
adc
testb
xchg
testb
insb
movsb
lods
push
fmulp
fsub
out
jmp
sub
xchg
push
sarb
dec
mov
call
inc
testl
adc
mov
xor
js
jnp
mov
jns
or
das
push
out
and
add
add
xchg
add
mov
out
jp
or
add
cmc
add
in
scas
mov
test
test
cmc
add
out
lods
add
or
dec
mulb
mov
xchg
inc
fcomip
test
or
leave
lcall
sub
xchg
pop
sub
shl
cmpsl
adc
out
movl
call
add
add
mov
push
cmp
push
sub
mov
inc
popa
ja
jae
lods
add
dec
jge
inc
add
and
inc
sub
adc
and
sbb
lock
mov
in
inc
add
add
inc
adc
ret
jp
mov
clc
xchg
add
mov
lds
sbb
ljmp
pop
cmpl
pop
addl
xchg
out
in
adc
add
jne
adcl
jo
mov
add
sub
cli
push
xchg
inc
or
or
test
pshufw
stc
pushf
sar
xchg
out
add
sbb
cmp
gs
stc
ret
mov
add
add
ret
roll
scas
inc
xchg
divl
out
push
cmp
xchg
adc
shrl
xchg
push
lea
scas
push
pop
std
jmp
pop
std
call
and
adcl
inc
mov
lock
incl
aam
jb
add
pop
jno
dec
jg
clc
dec
or
inc
mov
clc
stc
cmp
add
mov
add
cmp
js
repnz
scas
test
int3
xor
push
or
dec
ljmp
cli
test
xchg
jbe
adc
ljmp
repnz
in
jno
jge
and
repz
popa
scas
clc
jne
lea
pop
jle
sbb
ja
lock
jl
out
inc
add
adc
add
jo
dec
sbbb
imul
xlat
shrb
out
call
aaa
add
insb
out
pop
std
cs
lock
ja
ret
sub
adc
cmc
repz
cmp
bound
add
mov
mov
jmp
and
repnz
mov
test
mov
add
add
add
jmp
pusha
dec
push
jmp
popf
sti
jmp
inc
mov
and
push
stos
in
xorl
inc
push
in
cld
lcall
std
inc
jmp
sub
in
mov
out
pop
mov
inc
mov
jns
loope
es
mov
or
iret
idivl
add
dec
cld
add
add
shl
dec
xchg
add
test
sti
jg
shl
add
inc
not
in
std
mov
adc
test
add
add
mov
xadd
or
dec
inc
arpl
adc
mov
sub
mov
imul
test
imul
cmc
mov
bound
or
fs
ss
inc
add
sti
pop
mov
jge
add
ret
loop
or
leave
push
jmp
idivb
loop
add
sub
cmpsb
imul
mov
stc
xchg
testl
shrl
add
icebp
mov
sbb
sub
icebp
push
pop
fisttps
js
and
js
outsb
push
sub
jne
lods
lock
je
push
add
add
add
addl
aad
jo
aad
mov
jle
rolb
je
js
fwait
jmp
xchg
repz
inc
or
xor
incb
jle
pop
out
out
pop
jmp
or
jno
sub
mov
out
ja
out
fdivrs
sbb
inc
std
sti
cld
fidivs
repnz
ss
xchg
add
add
inc
adc
mov
ss
jl
ret
test
js
ljmp
adc
jmp
ret
add
jno
ljmp
add
cld
inc
std
lods
inc
adc
out
out
bound
adc
movsb
mov
cmp
mov
out
jg
fsqrt
or
adc
add
pop
std
or
or
lea
pop
mov
nop
ja
mov
and
push
jo
adc
cmp
add
test
orl
push
std
outsl
aam
mov
pop
insb
add
or
movl
std
mov
or
int
or
add
add
mov
in
mov
in
test
cli
psubsw
orb
shll
or
xchg
repnz
xorl
jmp
add
rcll
or
mul
ljmp
cmp
push
lock
add
mov
push
xor
stos
mov
jno
cld
add
add
aaa
xchg
jmp
dec
lock
inc
or
andb
mov
cmpsb
call
ret
call
jne
enter
lret
adc
push
ss
sar
pop
inc
testb
push
sub
je
xor
sti
movsl
add
mov
cld
cli
mov
dec
dec
inc
out
add
jnp
jp
out
add
add
xchg
repz
adc
into
outsl
dec
or
mov
cs
aad
ss
outsl
sti
jge
adc
add
mov
add
movsb
div
test
inc
or
add
ja
cmp
pop
test
shl
sti
sbbb
and
or
jo
cld
cmp
add
add
outsl
sbb
lahf
adc
in
sti
xor
leave
sbb
aaa
sub
jge
xchg
or
jae
ficoml
das
test
dec
pop
adc
cld
cld
push
icebp
in
jo
jmp
sub
idiv
mov
cld
jb
push
imul
and
sti
jne
push
sti
jne
add
mov
ja
call
adc
or
and
pop
cld
sub
in
mov
add
inc
push
add
add
cmc
add
and
pop
cmp
jg
mov
sti
psraw
or
inc
adc
pop
stc
xor
cmp
or
stos
call
or
add
add
cld
cmp
xorb
imulb
mov
out
lods
hlt
jae
stos
std
inc
or
jmp
xorl
jb
lds
cmp
popa
scas
cmpl
xchg
std
cld
or
sub
cld
cmp
and
jo
and
in
and
dec
add
std
mov
aad
push
add
add
int
std
mov
std
jb
inc
outsl
out
mov
imul
dec
cmp
es
filds
out
clc
lret
mov
add
mov
add
in
or
mov
mov
add
jmp
mov
mul
or
inc
call
ret
repnz
jo
mov
test
inc
pusha
inc
push
pop
jnp
jbe
jmp
lods
in
dec
ds
les
mov
inc
rsqrtps
repz
repnz
shlb
mov
push
inc
sti
scas
lods
add
scas
lcall
push
rol
jmp
bound
orb
jge
or
cmp
jg
inc
xor
inc
jo
cmc
xchg
add
jp
push
add
xchg
add
push
mov
mov
ja
call
aas
add
add
sub
xchg
repnz
aaa
add
add
xchg
inc
mov
loopne
dec
bswap
add
movl
sti
jbe
test
inc
shl
push
cmc
sti
test
add
filds
stc
lods
stc
sti
mov
out
adc
sbb
aad
aad
xrelease
cmp
sub
or
std
push
fcmovnbe
out
pushl
xchg
cmc
dec
sub
lret
leave
out
jmp
cli
inc
adc
inc
adc
shl
add
add
cmp
add
stc
sti
add
movb
add
inc
or
push
out
div
rolb
add
add
jmp
or
add
jne
push
je
jecxz
add
jbe
jne
pop
je
push
add
mov
pusha
mul
jg
test
stc
cld
mov
cmp
out
out
add
push
or
nop
inc
jmp
imul
add
jne
add
add
add
mov
inc
hlt
adc
mov
add
jg
out
push
cli
jbe
push
or
cmp
loop
inc
mov
jp
cmp
lret
wbinvd
repz
jmp
es
add
out
idivb
add
test
add
sbb
cld
xchg
fisttpll
inc
cvtpi2ps
ja
push
jo
add
pop
repz
jne
mov
adc
repz
jmp
cmpsb
aas
add
out
idivb
add
test
cwtl
cmc
add
mov
fs
pop
out
stos
adc
clc
jg
hlt
out
adcb
push
repnz
jmp
mov
sub
das
ret
cmc
add
loope,pn
call
add
add
add
sbb
or
stos
adc
jae
or
jns
repnz
iret
add
mov
icebp
cld
jmp
ds
cld
sub
sub
scas
shl
xlat
std
lcall
mov
adc
ret
inc
add
out
fmul
cmp
cli
call
and
loope
add
rorl
orl
xchg
add
jmp
pop
lret
mov
jns
add
into
cmp
or
add
pop
mov
xor
loope
cli
or
jmp
xor
jmp
not
into
inc
outsl
adc
cmp
test
mul
add
cmc
mov
inc
add
add
cmp
stos
or
sub
repnz
flds
cld
leave
movsl
or
cmp
jb
iret
cmp
test
inc
jg
or
mov
test
cmc
stos
into
inc
int
fs
neg
stos
or
xor
push
flds
cld
push
sbb
jb
dec
add
xor
add
and
jo
or
ja
fucomi
xor
push
mov
imul
popa
dec
lret
adc
addb
xchg
cmc
ljmp
addps
push
xor
shrl
sarl
test
push
pop
out
in
out
repz
mov
jno
add
stc
jmp
xchg
out
in
xor
and
add
add
outsl
mov
mov
test
out
imul
xchg
or
cmc
jns
popf
ja
stc
jo
in
adcb
add
xchg
xchg
dec
dec
mov
xchg
sub
aad
enter
insb
sbb
pop
or
ljmp
fnstsw
out
jge
cld
fs
jmp
sbb
add
add
jp
ret
fistpl
in
jbe
jl
jp
call
aas
std
and
ss
std
loope
call
add
pop
xchg
in
aaa
lret
xchg
aam
jl
pop
repnz
jne
dec
mov
aaa
shll
gs
nop
hlt
jg
popl
or
aam
cld
minps
lock
inc
and
add
jp
and
pop
and
call
adc
sbb
pop
adc
mov
push
in
hlt
inc
test
add
push
mov
cmc
outsl
aam
fsubr
call
imul
adc
jp
bound
sbb
jbe
orl
jo
push
sub
push
jne
std
jae
pop
jb
add
add
in
test
jne
add
out
xor
add
jmp
adc
adc
test
pop
shrl
icebp
cmp
movb
add
icebp
cld
jmp
icebp
add
adc
xchg
pop
out
lahf
neg
add
jns
sub
pop
aam
sbb
repnz
sub
repnz
add
in
mov
lds
push
fnstenv
das
mov
imul
in
lea
daa
test
fidivrl
in
mov
xchg
sti
imul
test
push
sti
push
jecxz
dec
xchg
div
xchg
out
add
sub
mov
test
stos
jmp
in
je
out
jmp
sub
xchg
jmp
inc
add
add
sar
inc
loop
out
xchg
cmp
std
xorb
cld
out
adc
push
clc
jae
jb
or
sar
mov
idivb
xchg
daa
in
inc
sub
stos
jnp
sub
addb
stos
or
sub
insb
out
jb
push
out
mov
pop
push
xor
adc
jo
add
add
inc
std
movsb
loope
dec
std
and
out
cmpsl
in
cld
pusha
cmp
inc
add
out
sti
cmp
or
cwtl
test
mov
sub
add
add
test
out
sti
decl
inc
adc
sub
imul
test
sbb
decl
test
std
push
insl
push
xor
add
add
xor
add
add
adc
jmp
push
inc
adc
push
add
cmp
or
test
decl
mul
add
xchg
xchg
out
inc
loop
cmp
mov
xchg
pop
lahf
cli
popa
shrb
pop
lret
mov
in
or
jns
or
xchg
add
add
mov
sbb
mov
insb
fimuls
popa
out
cld
adc
adc
cwtl
cld
mov
in
cld
mov
ret
jmp
test
div
jmp
out
cld
leave
fwait
in
inc
ljmp
push
mov
es
cli
scas
movsl
pop
repz
movsl
or
fdivrp
push
jbe
push
neg
in
decb
call
les
icebp
les
add
imul
cs
faddl
scas
xor
or
jp
clc
idivb
push
testl
or
cmp
movl
mov
or
fistpl
jnp
sbb
pop
ljmp
notl
lret
insl
filds
stos
dec
add
adc
es
out
add
add
jae
int3
add
cld
push
mov
or
aaa
xor
mov
ljmp
mov
hlt
cmpsl
fcomip
dec
cmpsb
jg
or
push
jmp
cmc
add
imul
call
adc
hlt
in
aad
jb
pop
jecxz
adc
cmc
cld
aam
fdivp
dec
add
add
in
sub
xor
lds
add
push
es
mov
cmp
sbb
test
jne
dec
sti
jne
aad
or
insl
or
fdivr
decl
mov
cld
fdivrl
mov
inc
add
cld
or
movsl
aam
scas
push
add
push
lret
movsb
or
add
push
push
inc
dec
incl
add
ljmp
sbb
ds
cli
stc
xchg
or
jno
scas
in
pop
shrb
inc
add
int3
clc
add
cmp
cld
insl
das
cmp
adc
cld
and
ljmp
in
adc
jae
jbe
outsl
test
xor
dec
cld
xlat
add
not
outsl
pop
insl
adc
xchg
add
add
add
jb
out
repnz
insl
adc
inc
xchg
outsb
and
inc
add
stos
jecxz
mov
xchg
dec
inc
divb
sbb
xchg
mov
jge
stc
jecxz
cld
imul
dec
add
je
in
sbb
out
mov
dec
jmp
fisubl
ret
inc
adc
ljmp
fwait
pop
rep
jbe
inc
inc
out
add
ljmp
add
outsl
mov
jnp
pop
mov
cmpsb
cli
je
out
add
test
out
in
dec
pop
in
jle
sbb
mov
add
push
xor
sti
arpl
movsl
jo
hlt
push
sbbl
add
outsb
out
push
xor
jo
call
popa
mov
jb
int
frstor
jle
out
jbe
pop
jmp
fsub
subb
jnp
pop
add
add
add
inc
dec
cld
call
inc
out
leave
pushf
lods
add
push
add
push
test
lock
mul
adc
out
clc
out
das
in
insb
cmp
adcb
jecxz
jo
jo
fstl
cld
rolb
scas
stos
ds
addr16
ljmp
ret
leave
push
lods
add
cltd
add
add
jl
pop
iret
cld
cli
jne
add
std
ret
push
adc
pop
fdivs
movsb
sti
jne
icebp
fidivrs
fadds
or
jle
popf
addr16
daa
cli
sti
fadd
loope
incb
jmp
or
mov
add
loop
and
jno
in
sti
jne
fnstenv
aaa
lods
cmp
psrld
sbb
add
add
in
test
sti
mov
and
mov
and
inc
cmpsb
jb
and
and
std
add
mov
xchg
dec
inc
notb
sbb
adc
arpl
add
rol
hlt
mov
lret
mov
mov
pop
cld
mov
add
mov
fadd
fdivp
pop
or
mov
frndint
xchg
sti
jnp
push
mov
add
hlt
mov
outsl
jns
jg
in
mov
add
divb
call
sahf
push
addr16
xchg
pusha
cld
jb
add
add
aad
adcb
jge
sbb
jno
adc
imulb
add
repnz
out
stc
popa
mov
mov
or
fmulp
loopne
andl
add
fcompl
decl
mov
loopne
imulb
cmp
les
repnz
stos
push
cmpb
bound
ljmp
jp
or
bound
add
dec
xchg
mov
xchg
jg
push
test
fnsave
insb
inc
or
imul
adc
push
pop
add
add
test
leave
xchg
add
inc
std
or
test
jb
hlt
mov
es
mov
cwtl
push
or
push
or
mov
mov
sbbl
out
out
or
dec
xor
mov
xchg
decl
incl
sub
jmp
xchg
pop
addl
faddl
out
pop
inc
or
pop
cltd
add
add
sbb
in
pop
mov
add
xor
inc
in
flds
add
cmp
mov
mov
add
pop
inc
and
aam
hlt
hlt
or
lahf
fidivrs
mov
add
add
push
rorb
add
add
add
notb
adc
incl
push
imul
cltd
shlb
push
jle
cld
jg
enter
mov
adc
sub
xorb
jle
mul
ja
sub
add
dec
imul
cld
or
or
bound
adc
sbb
xor
inc
push
add
fisttpll
and
add
js
mov
and
pop
sbb
mov
add
cmp
ss
pop
loop
mov
jecxz
lock
or
and
jecxz
xchg
clc
jbe
out
jb
out
negb
lock
fdiv
xchg
out
jne
cli
or
push
lret
mov
mov
out
outsl
inc
inc
lds
add
and
cmp
outsl
or
mov
negb
cmp
daa
in
pop
and
cmp
push
std
sbb
popf
add
ja
push
fisttpll
mov
cmc
add
adc
or
loopne
cld
mov
out
mov
xor
mov
cld
mov
enter
out
mov
xor
mov
loop
in
add
cmp
cmc
add
inc
adc
jae
xchg
out
mov
sub
fmull
std
xor
fnsave
pop
fidivs
push
inc
fdivrp
push
mov
incl
je
inc
jo
pop
lea
testb
lcall
push
adc
push
mov
movb
test
cmpl
mov
jno
cmc
add
jne
mov
jmp
loope
adc
xor
jb
call
test
cmp
add
sbb
mov
aaa
enter
std
add
mov
add
jge
mov
dec
xchg
pop
les
out
hlt
dec
and
sbb
dec
shr
dec
dec
jl
xchg
push
sbb
icebp
outsl
jb
iret
cmp
shlb
jge
sub
xchg
out
loope
inc
and
popa
inc
and
mov
add
dec
aam
enter
push
mov
lock
and
fbstp
aas
ficompl
mov
add
add
add
add
sub
aad
jp,pt
cmp
outsl
jecxz
loopne
dec
jnp
cmp
imul
fldln2
sbb
jecxz
cmp
push
jo
ret
fbstp
or
sbb
cs
out
fldenv
push
pop
sub
cli
mov
cmp
fcmovnu
test
mov
mov
in
inc
lcall
add
roll
or
inc
imul
inc
dec
add
mov
or
add
aas
cmc
mov
mov
sbb
cs
xchg
test
jb
cwtl
push
or
movsb
scas
cld
push
jg
jae
push
movl
in
in
enter
ss
pop
adc
mov
insb
shlb
je
add
gs
sub
xchg
out
outsl
add
gs
push
sub
sub
jb
add
scas
in
cmp
pop
roll
jg
jae
cld
cmp
jmp
sub
add
mov
aam
adc
aad
imul
and
test
loopne
and
call
xlat
xchg
loopne
sbb
cmp
decl
jmp
fldenv
add
pop
add
mov
outsl
aam
loope
incl
add
and
or
pop
or
mov
loopne
pusha
jmp
in
mov
inc
jecxz
mov
incl
jl
in
mov
push
add
shr
fdivrp
incl
inc
inc
inc
adc
mulb
inc
scas
add
icebp
outsl
jecxz
movhps
mov
cwtl
xchg
pop
fisttpl
jmp
dec
ficoms
stos
sbb
iret
test
xlat
mov
addb
ret
sti
xchg
inc
sub
push
or
adc
jae
push
mov
cmp
notb
and
push
inc
and
subb
cmp
inc
add
lea
cmp
or
stc
add
xlat
ljmp
inc
add
add
mov
push
cli
mov
enter
repz
add
pushl
aad
xchg
add
add
lret
inc
jns
ret
xor
jb
ds
and
ljmp
cmp
aad
or
bound
add
loopne
or
xchg
out
add
add
mov
dec
add
or
outsb
daa
icebp
cld
fdivr
aad
icebp
int
aam
int
mov
call
stc
inc
xchg
aas
clc
loopne
in
or
jno
cld
push
adc
insb
fidivs
jecxz
cmp
or
cld
jl
or
aad
add
cs
into
xabort
mov
aad
flds
add
cmp
or
cmpsb
or
mov
insb
xor
sar
jmp
repnz
add
mov
roll
inc
mov
in
into
decl
mov
mov
imul
in
mov
jge
sti
jo
add
sbb
pop
jns
call
sarb
add
sti
push
and
cmp
xor
adc
dec
sub
jecxz
clc
push
or
fdivr
cmp
or
lret
mov
out
mov
icebp
lret
fsts
cld
sbb
lahf
aaa
call
jl
mul
add
test
mov
sti
cmp
add
pop
mov
sbbl
pusha
or
imul
sbb
loop
mov
or
call
insb
pushl
call
jl
adc
xlat
sbbb
pop
test
xchg
add
add
dec
push
push
int3
mov
jne
mov
shl
or
add
add
repz
dec
fdivs
add
ja
lock
fcoms
inc
in
jle
shl
in
stos
test
pop
mov
ljmp
or
icebp
incl
xchg
outsb
inc
sbb
cmc
or
ljmp
fdivp
push
lahf
jno
loop
loop
out
add
mov
scas
sub
adc
add
add
push
sbb
cltd
int
icebp
insb
mov
cld
hlt
stc
int
loope
add
outsb
test
dec
pop
leave
flds
ret
int3
cmp
fadd
rorl
jo
sarb
cld
mov
add
lods
cmp
push
cmpsb
xor
inc
imul
add
mov
test
add
push
mov
pop
push
add
add
add
imul
add
pushf
inc
add
inc
add
rolb
iret
rolb
imul
inc
add
lock
add
dec
inc
add
pop
inc
add
inc
add
inc
add
dec
inc
add
sbb
sbb
jo
inc
add
sbb
adc
inc
add
pop
inc
add
out
add
add
add
inc
add
xlat
inc
add
out
add
aam
add
aad
add
inc
add
add
inc
add
inc
add
inc
add
adc
mov
in
inc
add
inc
add
icebp
inc
add
inc
add
inc
add
sub
mov
inc
add
lods
inc
add
pop
dec
inc
add
sub
add
inc
add
xor
add
dec
inc
add
dec
inc
add
push
inc
add
inc
add
xor
incb
repnz
sti
add
loop
mov
lock
dec
in
shr
jecxz
into
cli
fucomip
sar
fucomip
add
or
and
and
and
and
add
adc
lret
push
sbb
iret
sub
sbb
sub
sbb
dec
cmp
mov
xor
mov
adc
adc
bswap
adc
push
rclb
sbb
aaa
fistl
sub
cmpsl
inc
mov
mov
dec
mov
idiv
jmp
add
add
outsl
mov
out
addr16
add
add
add
add
dec
mov
pop
jne
add
cmp
inc
pop
xor
mov
dec
pop
xor
sbbb
mov
xor
in
cmp
push
jnp
add
cmp
dec
pop
xor
mov
outsb
xor
mov
dec
xor
sbb
add
jns
add
js
add
scas
inc
add
add
add
inc
add
jns
add
test
inc
add
cltd
inc
add
stos
inc
add
stos
inc
add
inc
add
push
add
dec
inc
add
pop
inc
add
lods
jge
addl
dec
inc
hlt
lcall
lock
int3
lcall
or
rcll
mov
push
loopne
add
push
or
mov
test
dec
push
call
imul
or
add
stc
gs
add
push
out
cld
ss
int
mov
loop
add
or
jp
aas
shl
cli
fiaddl
add
push
inc
sbb
lcall
add
inc
sbb
gs
loope
mov
into
jns
inc
or
mov
inc
or
add
add
call
inc
and
rolb
fcmovnb
inc
mov
cmovae
xor
je
cmp
push
out
je
or
push
xor
push
shll
inc
push
out
xor
jns
testb
mov
inc
fistpll
mov
test
add
add
mov
add
add
mov
ret
imul
ror
test
cmpl
add
jmp
ret
push
mov
arpl
xchg
pop
cs
lods
sti
dec
fsub
adc
aas
add
mov
xorb
clc
mov
pusha
mov
xchg
cld
push
lret
sub
jle
out
inc
int3
mov
add
add
mov
add
mov
into
lea
clc
jo
xor
mov
cmc
add
cmpsb
imul
mov
xchg
cld
mov
xorb
xchg
jg
lods
cmp
mov
mov
icebp
and
or
repnz
add
rcrb
roll
mov
mov
mov
or
add
add
icebp
decl
je
xor
and
inc
cmp
stos
enter
inc
add
jae
mov
in
sbb
mov
xchg
dec
cmp
filds
add
dec
lret
test
inc
adcl
fidivl
push
mov
shrl
stos
cmc
mov
add
imulb
xchg
ficoml
jg
inc
std
addl
inc
std
jno
jns
ret
cld
insl
lahf
clc
mov
lds
pop
dec
dec
mov
pusha
push
add
lahf
out
sub
test
insl
xchg
pop
add
sar
int
dec
sub
add
fnstenv
mov
add
add
inc
notb
xchg
lret
cld
add
add
pop
cmpsl
jb
icebp
leave
out
faddl
add
fadds
jmp
push
js
sbb
je
or
pop
ljmp
xor
lahf
push
arpl
sbb
int
notb
out
stos
add
ja
cmp
dec
divl
fbstp
sbb
lret
push
ret
inc
leave
sub
add
std
mov
mov
std
push
adcb
icebp
mov
ljmp
outsb
arpl
int3
rol
imul
ds
inc
push
add
mov
adc
insl
inc
fbld
add
sub
jge
push
or
enter
andb
add
pusha
mov
cmc
scas
popa
add
mov
into
mov
filds
add
add
add
push
movb
sub
lcall
and
js
lds
push
sbb
aad
fnsave
xlat
sbb
sbb
xor
mov
test
dec
cmp
add
bound
jae
jnp
inc
sbb
sti
jne
inc
dec
xchg
cmp
cmp
add
sti
call
mov
sti
mov
jmp
sub
inc
xchg
sub
inc
sti
clc
repz
inc
add
mov
xor
pop
add
cmp
jae
xchg
ds
cmp
xor
inc
hlt
cmp
in
mov
inc
cmp
test
idivb
or
xlat
jge
push
jnp
cld
jmp
add
in
adc
or
add
notb
das
or
cmp
mov
dec
xlat
or
mov
flds
inc
jg
les
lret
int
jmp
divb
leave
or
popa
add
idivb
jp
sub
frstor
pushf
inc
std
sbb
sub
orb
jb
dec
cmp
mov
add
jmp
add
leave
shlb
enter
or
adc
xchg
cmp
add
add
xor
push
cs
dec
testl
ret
imul
or
roll
test
ret
cmp
test
enter
stc
add
add
sub
push
icebp
andb
test
sub
les
decb
pushl
lcall
sub
mov
call
cmp
shlb
cmpsb
hlt
lcall
dec
inc
mov
movsb
jae
repnz
cld
jmp
cli
xor
dec
xor
lret
shr
sar
mov
cld
jmp
add
add
pop
test
testl
mov
mov
cld
jmp
mov
adc
cmp
xor
pushf
rol
cld
into
jg
daa
add
mov
push
push
push
js
jge
jp,pt
data16
enter
enter
cmp
cmp
xorl
cltd
cmp
push
inc
call
incl
add
xor
add
xor
mov
fs
jo
inc
xlat
add
jge
push
enter
mov
movb
add
jge
ljmp
shll
inc
cld
sub
xor
adc
xchg
test
les
xor
xchg
icebp
xor
std
jmp
outsl
lea
shll
or
add
jae
add
testb
mov
push
pop
cmp
mov
and
cld
mov
test
in
adcb
lds
notl
or
push
xchg
daa
cmp
ds
or
cmp
sbb
icebp
dec
aad
and
jmp
add
cmp
into
cmp
jbe
es
call
inc
fstpt
es
mov
imul
mov
jge
out
xor
xor
inc
push
andb
mov
lret
jecxz
xor
js
cmc
cmp
xchg
out
bound
test
lds
out
add
add
mov
and
add
hlt
or
adc
or
enter
cli
xchg
int3
jg
call
mov
testb
incl
shll
mov
dec
jb
repnz
jle
cmpb
jbe
pop
mov
xor
divb
xor
xchg
add
aad
cld
ds
mov
cmp
jmp
xor
add
sub
ret
jg
or
fcoms
push
lea
xchg
adc
nop
push
add
fsubr
std
pop
or
push
leave
lea
in
filds
add
adc
push
call
add
add
pop
ret
dec
push
add
nop
and
or
mov
mov
cld
je
mov
push
add
jb
out
push
add
test
fstps
imull
std
pop
repnz
fcomps
xor
lds
test
add
out
les
aad
or
add
add
incb
sbb
das
pop
or
lahf
push
adc
repnz
divb
gs
cwtl
ss
jno
adc
movsb
movb
lods
adc
jb
dec
sbb
aaa
push
fadds
dec
add
adc
or
loop
call
testb
cmc
jns
lahf
sub
sub
push
add
add
or
push
ja
repnz
mov
adc
ret
adc
dec
pop
roll
adc
cmpsb
add
adc
mov
loope
lea
or
add
mov
lea
out
pop
sti
cld
or
xchg
out
sub
adc
out
mulb
add
imul
add
inc
add
push
std
pushf
jmp
aas
fsubr
cmc
add
adc
std
cld
divb
das
adc
faddl
push
aaa
mov
jp
sub
cmp
sub
cld
pusha
cmp
jp
or
ss
sub
je
lods
ss
incb
fcomps
jnp
add
add
popa
mov
jae
add
loopne,pn
hlt
adc
dec
shlb
in
adc
pop
shlb
in
add
mov
add
call
jne
test
je
inc
call
push
std
add
mov
inc
hlt
pcmpgtw
into
add
rcrb
dec
decl
sbb
jne
js
call
add
add
pop
call
cmp
mov
push
sbb
gs
sbb
imul
stos
jo
std
divb
test
arpl
lret
stos
mov
sub
push
js
je
jns
pop
fisubrs
add
ss
andb
mov
shlb
cmpsl
sub
dec
call
cmpsb
into
pop
insb
or
add
out
xor
push
aaa
and
sub
insl
in
out
and
shlb
dec
and
into
and
add
lahf
add
cmc
push
repnz
das
jmp
call
les
mov
mov
or
mov
loop
out
mov
cmp
pop
add
add
inc
fbstp
stc
mov
push
movb
add
push
test
addl
push
daa
shll
sbb
mov
testb
call
ret
mov
adc
subb
push
push
sbb
add
inc
push
inc
mov
imul
cld
sbb
add
xor
adc
mov
cmpl
jmp
gs
pop
jmp
pop
xor
loope
add
sarl
or
call
jg
jg
add
in
or
jmp
add
in
mov
jmp
sahf
or
fld
add
cs
lahf
dec
xchg
adc
jo
add
fs
dec
add
or
mov
xorl
add
out
sbb
pop
add
push
mov
imul
add
push
aas
add
adc
mov
add
sbb
cld
fistpll
or
pop
test
iret
add
xor
adc
stc
sbb
mov
std
xchg
sub
add
mov
std
jns
jg
add
popa
ljmp
scas
inc
or
xchg
jnp
add
imulb
cld
mov
cld
ljmp
daa
aaa
adc
cs
or
pop
or
add
xchg
add
imulb
add
test
cmpsb
lds
sbb
imul
or
sub
or
out
arpl
cmp
sub
or
loopne
and
cli
cmc
jb
push
ljmp
add
or
test
rcll
imul
add
les
ret
adc
mov
and
or
cmpsb
pop
psubq
inc
notb
xchg
rcrl
call
out
stos
sub
fnstenv
add
lcall
outsl
idiv
call
sub
call
aas
rclb
inc
jmp
add
add
inc
add
faddl
pop
es
fisttpll
out
test
cs
xchg
andb
cmpsb
mov
sub
cmp
incl
sbbl
stos
dec
mov
sahf
dec
xadd
mov
std
pop
push
push
call
bound
test
sti
and
das
sarb
addb
jmp
add
inc
addb
lahf
std
out
cmpl
adc
cld
pop
pop
adc
inc
push
push
mov
push
sti
jne
js
adc
loop
decl
sti
adc
in
xor
movsb
std
incl
dec
dec
sti
jne
js
or
paddd
lock
pop
push
mov
call
push
adc
pop
mov
add
repz
sbb
out
mov
push
divl
call
jg
dec
fidivrl
inc
cmpsb
test
mov
icebp
mov
ljmp
int
adc
shlb
add
outsl
in
cmp
stc
sub
push
fdivrp
cld
jecxz
test
push
out
mov
sbb
xchg
mov
push
pop
xor
add
add
jge
dec
std
stos
mov
jb
pop
das
or
xor
or
and
fldcw
addl
add
cmp
mov
notb
xor
scas
sbb
dec
pushf
mov
jnp
push
cmp
jl
push
sub
and
push
push
pop
xor
pop
push
xor
add
out
scas
repz
or
ret
les
lods
lds
push
pop
add
jg
xor
mov
repz
mov
add
mov
add
loopne
jmp
es
add
adc
out
sahf
lods
cld
sub
xor
xor
cltd
and
lods
jb
adcb
pushl
scas
cld
sbb
cltd
into
jo
add
repnz
std
cwtl
divl
mov
dec
pop
ret
sbb
call
sub
push
in
cwtl
adcb
fidivl
rorb
in
or
xor
xlat
repnz
jne
ret
add
mov
add
push
push
sti
je
add
loop
or
xor
add
insl
js
sub
mov
xchg
ret
pop
shrb
adc
mov
ds
ficoms
push
add
adc
filds
loopne
inc
add
inc
je
push
enter
enter
movl
jo
rcrb
and
out
sti
push
xor
je
test
ficoms
push
mov
xor
sub
imulb
mov
clc
push
aas
mov
mov
pop
mov
xor
movb
das
lods
addr16
inc
add
add
add
mov
rcrb
inc
add
mov
inc
jl
add
leave
and
jns
hlt
cmc
jg
cwtl
cmp
test
negl
add
in
test
add
adc
add
imul
addl
scas
mov
adc
mov
xlat
je
cmc
mov
add
add
sti
out
xor
bound
lods
in
xchg
add
add
cmp
divb
out
stos
sti
shrl
mov
lods
movsl
pop
cmpsb
test
mov
cmc
pop
cs
stos
mov
sbb
add
jne
repnz
mov
ss
xor
pusha
cmp
adc
scas
pushf
xorb
call
cmc
icebp
cmc
mov
cmc
repz
hlt
jg
jmp
pop
cmp
scas
push
push
mul
je
test
sub
jb
push
sbb
mov
in
dec
mov
cli
jne
jne
cltd
fildl
add
hlt
add
std
scas
add
adc
mov
std
clc
mov
ror
ss
jo
std
rcrl
push
mov
push
sti
jne
jno
call
out
push
mov
dec
sti
push
daa
daa
jb
hlt
incb
leave
outsb
mov
push
pop
jno
adc
inc
clc
jmp
mov
pop
add
add
cmp
ret
cli
xor
mov
push
add
mov
mov
insb
sbb
movsl
cmc
faddl
push
and
jg
stos
es
loopne
jmp
mov
pop
xchg
es
call
adc
enter
fdivrl
mov
fldl
mov
mov
xor
add
inc
test
or
lock
cs
add
out
jno
mov
xchg
xor
sbbb
adc
jb
sbb
cs
shr
inc
into
dec
popf
mov
jnp
lret
or
sbb
mov
jns
jne
decl
lea
add
rolb
add
mov
dec
cli
sbb
or
adc
mov
testb
add
clc
add
add
out
int3
cmpsl
out
cli
scas
daa
add
add
add
jnp
test
add
add
ljmp
cmp
cmp
std
jp
jbe
fidivs
add
add
add
ljmp
shll
outsl
aas
xlat
jp
or
out
jp
test
lret
jp
add
flds
jp
or
add
jns
jb
mov
add
dec
cmpsb
jae
mov
or
add
inc
or
hlt
mov
je
or
jmp
subb
out
push
stc
into
pop
dec
mov
add
out
mov
subb
cli
hlt
das
out
add
jmp
cmp
lock
divl
or
cli
mov
std
jmp
lea
sbb
out
mov
add
add
dec
mov
push
aam
jge
pop
lcall
xchg
jg
jne
mov
jmp
daa
add
add
repnz
pop
add
cmp
decl
arpl
add
movsb
test
mov
add
fsubrl
inc
in
stos
jg
out
jle
jecxz
add
ljmp
decl
push
adc
jg
xchg
pop
and
sub
mov
jb
mulb
inc
call
adcl
push
cs
iret
xchg
cwtl
addps
xorl
test
lret
dec
js
add
add
cltd
push
add
icebp
lods
cld
sub
rorl
push
push
ss
pushf
xchg
cwtl
jecxz
stos
xorl
test
dec
ja
out
xor
lock
sub
es
push
fs
add
add
inc
cmc
out
lea
add
xor
jbe
stos
add
ss
push
jg
movsb
inc
mov
jo
scas
cltd
mov
add
add
add
in
pop
xor
cltd
lret
add
js,pn
fwait
xor
push
add
ds
add
xor
hlt
add
push
and
pop
push
sbb
adcl
dec
bound
cli
jl
xor
jbe
ret
sarl
and
mov
rorl
cmc
add
cltd
roll
ja
jmp
add
add
cmp
hlt
test
sti
add
enter
cmc
add
leave
jl
fucomp
cmc
add
xchg
cli
add
pop
xor
cld
jmp
xor
mov
adc
repnz
xorb
push
xor
addl
add
test
call
outsb
outsl
lods
repz
add
mov
mov
in
add
int
jge
call
in
scas
std
pushl
push
xchg
ret
mov
std
lcall
add
push
push
or
adc
movsb
sarl
sub
mov
sti
data16
std
je
jge
adc
add
sarb
incb
ret
incl
add
rclb
pop
jmp
add
cld
jmp
push
dec
mov
dec
out
pop
push
pushl
mov
rcrl
mov
idivb
jne
dec
mov
mov
addr16
dec
cltd
add
mov
movsl
cld
mov
fwait
pop
push
xchg
add
jp
sub
xchg
movsl
cld
pop
pusha
xchg
incb
add
push
xchg
jne
cwtl
dec
test
cmp
test
inc
sub
aas
cmc
dec
imul
addl
notb
cmp
stos
repz
jnp
lods
std
loope
lock
insb
add
icebp
subl
push
jmp
daa
jo
jge
push
or
push
jns
jge
cmpsl
xchg
pop
out
add
add
xorb
mov
add
jl
mov
fildl
inc
out
cltd
push
mov
mov
mov
mov
mov
stos
lea
cmp
inc
cmpsl
add
xlat
inc
negb
cmc
aas
test
add
loop
fcmovu
cmp
testb
add
dec
or
push
pop
cmp
add
add
add
mov
sub
daa
sub
add
push
xchg
or
xchg
or
insb
lcall
or
add
sub
popf
je
fistpll
aam
and
call
test
call
and
xchg
cmp
out
cmp
loopne
cmc
test
sahf
jae
sbb
add
add
add
add
or
push
mov
fs
in
pop
xor
aad
xchg
rcll
call
adc
fisubs
call
out
mov
adc
dec
inc
nop
xlat
mov
cmp
jne
sbb
ss
movsb
jne
stos
pop
hlt
bound
mov
jge
adc
out
out
hlt
jne
sbb
add
pop
stc
les
lcall
call
sarl
mov
idivl
outsl
jg
imul
js
or
test
jmp
jge
lahf
mov
lock
imul
lahf
cmpb
clc
or
mov
cld
test
nop
ja
fidivrl
push
sbb
arpl
out
icebp
mov
jmp
add
add
push
xchg
and
pusha
out
xchg
add
pop
add
xchg
aas
push
je
adc
push
shl
jmp
and
mov
cld
mov
arpl
mov
lods
leave
cmp
dec
mov
loop
inc
mov
or
lcall
inc
mov
add
xchg
jmp
call
imulb
out
div
ds
and
out
jge
mov
add
mov
jg
jno
dec
xor
cmp
add
inc
fwait
int3
mov
popa
out
out
orl
jno
inc
sbb
cmp
movsl
add
test
jmp
call
lods
add
sbb
add
daa
das
lcall
add
add
xchg
mov
addl
pop
or
inc
fwait
cld
jmp
xchg
pop
adc
cli
popf
jne
loopne
aam
test
xchg
negl
addl
xlat
mov
pushf
cld
jmp
pop
sub
pop
mov
pushf
xchg
pop
pop
jg
loopne
andl
ljmp
add
add
add
push
sti
xlat
loopne
jecxz
inc
push
xchg
imull
push
mov
dec
jbe
cmovnp
inc
sub
pop
aaa
sub
test
insb
add
lcall
xor
call
sbb
std
lcall
sti
fisttps
or
jns
in
lock
std
lcall
add
add
add
or
leave
push
sbbb
aas
or
aas
pop
or
lods
sarb
xchg
adc
inc
sub
mov
and
add
add
push
test
xor
nop
mov
shlb
data16
imul
inc
lods
mov
test
dec
pop
adc
outsl
cld
push
xchg
adc
inc
mov
outsl
pusha
aaa
add
add
sub
jb
pop
inc
fdivl
in
jno
sub
jae
push
inc
hlt
xor
jmp
sbb
jb
inc
cltd
sbb
ret
add
xor
xlat
pusha
test
stos
push
pop
call
ds
test
mov
imul
rcr
mov
inc
or
sbb
test
add
mov
or
or
add
mov
inc
rorb
mov
mov
mov
out
mov
jno
test
add
out
inc
cwtl
cld
jae
cltd
call
inc
loope
call
fdivrl
mov
cmc
add
mov
add
add
sub
mov
jmp
cmc
mov
test
add
xchg
adc
stos
xor
xor
and
or
mov
mov
or
xor
cld
cmp
add
push
ss
lock
cmpb
test
sbb
xchg
jmp
cmc
add
add
adc
movsb
inc
inc
test
push
test
sbb
add
adc
push
add
rorb
movsb
iret
add
enter
shrb
adc
std
mov
leave
in
cwtl
add
test
test
mov
add
jbe
add
sbb
jecxz
pop
je
inc
pop
add
add
cmpsl
add
add
add
cmpsl
faddl
in
ret
inc
inc
stos
add
imulb
shl
cmpsl
add
mulb
or
stos
lea
cmpsl
ja
push
test
add
mov
pop
adc
loope
and
or
hlt
jp
pop
shlb
jg
test
je
test
cmpsl
add
add
add
and
std
mov
mov
sbbl
mov
lods
add
add
mov
pushf
inc
xor
dec
mov
xchg
xchg
rorl
insl
jnp
cltd
sbb
out
jne
fnsave
jl
push
icebp
shll
and
ljmp
mov
fwait
add
add
mov
je
outsb
ds
icebp
jg
or
loop
inc
xchg
out
into
inc
out
out
push
or
dec
scas
pop
xchg
xor
mov
subl
adc
incb
jb
lock
xchg
ljmp
dec
jge
mov
cld
ds
pop
add
add
add
pop
addr16
cld
adc
xchg
cld
push
cmp
enter
mov
jmp
std
xor
cltd
add
in
or
ljmp
jb
jl
or
mov
pop
push
push
nop
pusha
adc
cld
dec
xor
lret
call
fstpt
rolb
or
push
adc
dec
incl
dec
inc
jno
pushf
dec
clc
add
inc
repz
mov
cmpsl
bound
add
xor
shl
test
loop
decl
pop
std
or
inc
jmp
mov
bnd
into
cli
adc
negb
xchg
subb
add
les
mov
add
cmpsb
daa
sbb
fadd
push
int3
lds
pop
stos
lret
add
jge
mulb
stos
popa
add
add
mov
aaa
push
imul
add
add
test
jg
inc
std
loope
test
outsb
add
inc
pushf
mov
mov
add
mov
xchg
jmp
out
insl
jmp
add
cwtl
out
jne
mov
cmpb
jnp
movsl
add
jnp
cwtl
push
arpl
xchg
lea
push
xchg
hlt
dec
xchg
jne
mov
out
out
xchg
gs
lret
xchg
rorl
ret
xchg
sti
pop
add
out
out
jno
sbb
cmp
out
mov
add
jnp
jle
add
ljmp
cwtl
insb
push
sbb
ja
add
testl
mov
xor
jge
cmpl
cmpsb
jge
out
testl
cmp
stc
add
test
jp
mov
pop
sar
jo
pushf
cmp
sbb
sarb
es
add
add
and
push
jnp
dec
outsb
cld
mov
imul
mov
mov
push
call
xor
dec
jo
dec
lods
cld
jae
fldenv
dec
lret
out
dec
js
cmp
xchg
out
jns
in
out
pop
xor
jg
fwait
stos
ret
jle
add
push
mov
jmp
or
add
add
daa
pop
mov
inc
jae
add
sbb
in
movl
add
mov
lahf
call
jl
daa
add
push
pop
jmp
add
out
loopne
ljmp
jae
sbb
out
lea
out
scas
jl
notl
mov
mov
add
add
lea
std
andl
cmpsl
pop
push
mov
or
iret
jg
xchg
andb
xchg
notl
aas
sub
sbb
add
mov
out
repnz
push
xlat
inc
into
dec
lahf
call
push
add
jle
add
add
pop
sahf
sub
movsb
add
add
mov
cltd
leave
ljmp
pop
xchg
mov
out
adc
out
test
and
mov
ret
out
out
xchg
nop
jmp
ret
in
bound
dec
add
add
mov
int3
cli
push
cmpsb
xor
mov
paddusb
popf
out
sbb
mov
ds
cmpl
in
es
mov
mov
loopne
xchg
fildl
adc
testb
mov
adc
out
cld
jp
push
add
push
loope
call
cmc
test
adc
pop
mov
call
adc
sub
add
cmpsl
test
jo
fimull
gs
cld
cli
dec
lea
insl
aas
int3
ljmp
add
push
jae
adc
mov
cwtl
aas
aam
lea
ja
sbb
mov
sti
pop
cmpsl
mov
inc
cmpl
or
fs
sub
add
inc
push
adc
push
ljmp
test
testl
push
int
dec
push
add
std
inc
outsb
dec
xor
mov
mov
add
jle
push
iret
out
inc
outsb
sti
sbbl
out
dec
add
ljmp
addr16
sbb
outsl
in
notb
std
incl
rcll
add
xchg
xchg
inc
out
cltd
pop
das
inc
lock
test
into
xchg
xchg
inc
mov
bswap
sub
add
push
or
divb
push
mov
les
push
cmp
clc
insl
inc
fwait
movsb
stos
cwtl
add
mov
int3
jp
jge
jmp
pop
lods
xor
dec
jnp
ficompl
add
sbbl
testb
rcl
stc
imul
mov
jge
jmp
sar
push
sub
fisttpll
add
add
jl
int
jg
mov
or
lret
push
clc
cmp
cld
cltd
mov
fldl
jbe
push
pop
repnz
pushf
aam
and
jns
mov
fwait
mov
mov
add
out
test
hlt
add
add
add
bnd
ret
jmp
add
jo
xor
in
call
add
add
add
aad
jle
idivb
call
lea
dec
call
arpl
mov
inc
sbb
cmc
jnp
icebp
addr16
loope
mov
movsl
movsb
xchg
stc
das
cmp
jo
nop
mov
dec
call
cmc
jl
cmp
mov
mov
cmp
popf
ja
add
ja
xor
add
add
jmp
cmc
cltd
push
add
xchg
addl
ja
cld
add
sar
jne
into
cli
adc
pushf
mov
in
paddw
mov
cmp
mov
xorb
cmpl
test
into
clc
ja
add
push
leave
fstl
incl
in
cld
ljmp
add
pop
mov
test
jne
or
push
pop
dec
fs
inc
add
test
adc
jno
negb
std
orl
cld
jg
add
ret
in
mov
sub
je
cld
imul
mov
shll
push
inc
lret
les
adc
jnp
pop
out
add
arpl
std
mov
pop
pushl
mov
push
jle
jmp
jl
jecxz
or
addb
or
add
mov
test
pop
call
clc
popa
sti
insb
ds
add
add
js
mov
std
sbb
jns
add
push
fisubrl
xor
out
add
call
outsl
test
int3
mov
test
jecxz
lds
mov
out
add
lock
sbb
jns
sub
sti
js
leave
clc
adc
jp
leave
cmpsl
adc
leave
add
pop
clc
adc
hlt
sbb
add
add
scas
cmp
hlt
cmp
xchg
jmp
jnp
stc
cmpsl
mov
nop
xchg
add
add
inc
add
jmp
outsb
add
dec
jmp
test
jo
hlt
cltd
push
pop
std
es
jp
js
jae
jbe
clc
jmp
cmc
add
std
in
inc
icebp
in
jo
insb
aaa
jge
lock
or
or
jp
add
add
xchg
loop
jge
mov
test
add
inc
dec
ja
lock
add
jnp
stc
sub
rcrb
call
inc
or
pushf
pop
cld
decl
add
xorb
cmp
pop
dec
cld
dec
add
call
push
inc
adc
iret
imul
insb
add
add
aas
add
sbb
or
mulb
cld
or
repnz
testb
add
fsubrp
sub
push
mov
adc
push
jge
jge
repz
xchg
aas
hlt
cmpsl
jmp
inc
add
hlt
cld
movsl
test
add
loop
aas
std
idivl
sub
sbb
decl
push
decl
cmc
iret
xor
shl
add
mov
insl
loopne
bound
test
insl
jne
mov
add
ljmp
xchg
in
add
std
adc
mov
loope
sti
jge
clc
xor
in
std
mov
mov
jge
adcl
cwtl
add
add
push
xor
outsl
add
jp
pushf
outsl
aas
faddp
movsl
out
jp
add
add
lret
jmp
or
aad
sbbl
mov
icebp
ljmp
cld
jmp
hlt
imul
outsb
test
call
data16
mov
psllw
out
add
dec
jg
jmp
jb
add
call
push
jl
jmp
sar
cmc
sub
or
or
cmp
loop
sbb
out
inc
xchg
rolb
jecxz
lret
leave
mov
mov
pop
clc
push
negl
hlt
add
push
xchg
stc
dec
hlt
add
add
xchg
in
dec
jmp
lea
std
mov
sti
inc
jae
jno
cmpsl
add
add
adc
pop
add
jge
sti
ljmp
rorb
cld
push
or
jg
mov
push
sbb
std
filds
call
mov
adc
testb
push
imul
scas
imul
cld
test
imul
lds
push
add
push
out
inc
testb
add
add
dec
inc
test
insl
daa
clc
mov
ljmp
jne
hlt
jno
inc
aas
cld
mov
inc
lcall
imul
or
pop
mov
mov
imulb
mov
into
orb
pop
add
sarb
jnp
ss
clc
pop
je
add
add
add
push
in
jmp
arpl
jb
fld
rolb
sahf
orb
icebp
pop
sbb
je
add
adc
repnz
scas
aas
pop
mov
pushf
jbe
mov
inc
repnz
ja
lea
add
add
jge
mov
jno
or
out
fwait
add
add
div
fwait
jmp
out
jmp
ficompl
cmc
jnp
std
insl
arpl
jmp
pop
pop
clc
jmp
lea
jmp
and
jb
call
aas
push
clc
jmp
jmp
call
sti
or
jns
add
outsb
jge
mov
adc
cmpl
mull
adc
xchg
sbb
sub
jge
cld
jbe
int3
jb
fcmovnu
out
jle
cld
mov
imul
add
mov
in
cltd
incl
into
add
xor
ret
inc
mov
and
adc
dec
insl
incl
add
mov
cmp
addb
mov
push
mov
sbb
or
sub
dec
add
test
add
cld
push
add
push
sti
je
push
sti
je
dec
sti
je
xor
adc
xchg
dec
and
ret
or
faddp
pop
jge
xorb
mov
je
repz
add
push
jbe
and
hlt
mov
xchg
mov
sbb
imul
push
cltd
stc
or
repz
frstor
dec
sub
and
push
pop
xchg
or
add
data16
je
jp
add
idivb
int3
push
pop
fdiv
cld
inc
adc
test
cld
jge
rclb
pop
movsb
adc
jne
dec
scas
adcl
add
add
add
jl
jb
rcr
cli
and
lds
int3
xor
in
sbb
xchg
push
popl
testb
in
mov
xchg
daa
rcl
add
add
enter
test
adcb
fdivp
aad
cmp
jb
xchg
pop
mov
push
pusha
cmc
clc
aam
lds
xor
rorl
adc
add
add
add
fnstenv
cli
add
add
lret
adc
pop
mov
add
jp
jecxz
mulb
or
lds
or
jae
push
jl
jns
sar
into
sbb
adc
loop
jnp
or
or
jae
cld
push
ja
and
cmc
jnp
vpunpckhbw
loopne
add
add
add
inc
pop
fcom
shl
jnp
or
cmc
add
cmp
int3
jns
adc
xorb
and
dec
popa
movsl
sbb
mov
shrl
and
mov
and
mov
push
loope
pop
and
in
shlb
xchg
add
jo
push
dec
and
xchg
add
stc
and
adcl
iret
add
sti
add
add
jo
xor
jle
je
test
xchg
xchg
mov
mov
pusha
push
inc
push
xchg
sti
xor
in
clc
cmp
inc
cmp
mov
sub
mov
mov
push
mulb
and
sbb
out
jns
cld
jge
xchg
adc
ds
jl
insl
rorb
mov
add
mov
or
jecxz
add
jnp
add
outsl
addr16
push
jl
jle
jl
xor
aam
mov
cltd
repnz
sbb
mov
je
cmp
push
push
mov
idivb
sar
add
lds
sbb
push
push
add
cmp
cmp
xor
in
clc
add
add
ja
or
xchg
jle
testb
mov
setg
lret
std
jnp
clc
icebp
mov
push
mov
and
mov
dec
sbb
xrelease
rcrb
jl
clc
stos
cmp
clc
out
mov
daa
inc
jbe
fiaddl
outsl
shl
syscall
dec
in
ret
pop
inc
out
daa
push
add
add
in
push
stc
add
aaa
add
lods
pop
inc
xchg
cmp
xor
cmp
std
icebp
adc
dec
sti
ljmp
out
mov
sbb
jne
stc
xor
shll
sbbb
shr
inc
add
mov
mov
addb
gs
add
mov
add
jne
fiaddl
add
xchg
xchg
jno
imul
sbb
cmc
jl
push
or
xor
data16
fs
call
decl
stc
in
mov
add
mov
add
push
xchg
cmpl
in
add
cmp
push
lea
push
test
call
test
add
add
add
call
inc
fadds
pop
mov
imul
int
sti
ljmp
xlat
push
pop
call
jg
jmp
adc
divb
jb
test
jns
xorl
and
cli
incl
dec
decb
shl
push
call
jne
jbe
lret
add
imul
adc
daa
les
in
and
ret
loopne
imul
push
mov
out
aas
ficomps
aam
out
adc
push
sbb
ljmp
adc
mov
rclb
or
add
inc
into
xchg
fdivs
cld
out
sbb
out
pop
add
jp
lret
sbb
add
add
mov
push
daa
add
jo
jb
adc
mov
add
rcll
or
insb
inc
test
push
sar
or
adc
add
cli
ret
loope
lods
inc
inc
xchg
fnsave
xchg
in
and
repz
out
imul
es
add
or
add
add
add
shrb
pushl
test
sub
jle
add
jmp
inc
push
sub
fisubrs
scas
mov
add
test
loope
out
add
fs
push
sbb
jle
aad
andb
add
lods
icebp
adc
lods
loope
mov
mov
cmp
lds
add
or
cmp
aad
cld
add
adc
add
clc
sti
pop
in
pop
ret
and
add
cmp
daa
and
decl
jp
clc
pop
clc
sti
call
push
mov
call
jne
test
push
xchg
cmp
fiaddl
fcmovb
jmp
add
hlt
sti
push
outsl
out
mov
dec
jge
lea
dec
mov
push
testb
xorl
add
imul
sbb
dec
xchg
lret
negb
xorl
in
push
mov
cmp
xor
push
add
cmpsl
out
inc
pushf
sbb
cld
or
adc
add
mul
inc
jae
adc
pushf
pop
push
mov
in
jae
repz
adc
dec
cld
into
in
sbb
fxam
inc
jae
repnz
adc
cltd
add
fcomps
std
mov
mov
add
insl
imul
movsl
jno
xchg
jnp
outsl
outsb
clc
pop
rcrl
ss
sbb
imul
jbe
add
cld
jno
mov
cmc
loop
repz
jbe
clc
cmp
mov
test
jbe
outsl
lock
jnp
int
rcrb
mov
std
mov
shl
subb
aam
outsb
add
iret
popf
jbe
add
ljmp
repz
hlt
jns
stc
ret
sbb
lds
subl
or
jl
add
stc
ja
cmc
mov
jb
insb
push
cld
je
pop
movsb
out
insb
mov
js
cmp
mov
cld
cmp
iret
cld
sbb
cmpl
jle
push
cmpsb
inc
pop
aas
aas
inc
sar
rorl
call
xor
out
arpl
outsb
mov
push
xchg
pusha
std
pop
outsl
pop
xor
pop
jo
gs
cld
add
push
dec
mov
add
cmc
xchg
pop
hlt
dec
or
lds
and
mov
push
dec
push
cmp
push
mov
mov
mov
push
out
loopne
jmp
jmp
mov
push
mov
out
test
fcomip
jno
aam
xchg
pop
scas
lods
inc
pop
add
lcall
lcall
fxtract
std
jo
xchg
call
add
xchg
scas
hlt
mov
push
sti
push
out
add
push
add
idivb
aad
or
ror
cmpb
mov
cld
test
pop
into
mov
pop
add
mov
push
imul
cli
jno
into
cld
jecxz
jge
insl
fs
cld
insl
xchg
cli
pop
pop
adc
stos
jle
jb
jo
add
add
mov
add
outsl
and
jg
jp
jo
cmpsl
xor
test
rcll
mov
push
add
dec
insb
imul
aam
jmp
add
jl
or
daa
jle
mov
cmc
add
mov
cmc
neg
xchg
jge
mov
pop
cmpsb
push
testb
insb
jle
pop
roll
add
in
icebp
rcr
shr
test
jo
jbe
subb
jae
adc
add
call
insb
cmc
push
sbb
or
add
sub
pushl
jns
rcrl
jge
jb
std
inc
pop
jle
or
and
ja
mov
jne
inc
js
or
iret
std
inc
lods
add
add
mov
cld
xchg
lea
insl
movsl
insl
xor
test
mov
insb
andb
daa
bnd
popf
das
bnd
test
cld
push
inc
leave
stos
push
add
xchg
ljmp
sub
add
add
xchg
xchg
lds
lock
mov
add
out
packsswb
std
fucomip
add
push
push
mov
sti
push
pop
cmpb
in
add
cltd
inc
sti
push
addl
decl
std
xchg
in
add
and
dec
push
cmp
test
std
cmp
jmp
call
cld
add
std
push
lea
add
notb
xor
adc
hlt
add
je
add
outsl
mov
outsb
cld
fldcw
add
jg
jo
cmp
xchg
jg
das
jo
push
sub
or
inc
jae
dec
outsl
call
jnp
insl
cld
jns
shl
mov
add
jge
fldt
lds
cld
push
xchg
out
jne
add
mov
jns
std
inc
testl
es
imul
mov
loop
movsl
cli
add
lock
jmp
or
add
rcll
xorl
bound
pop
pop
pushf
push
pop
outsl
jbe
imulb
jno
je
insl
ss
iret
dec
pop
mov
addr16
ja
sbb
mov
sub
add
add
jne
imul
cld
add
clc
adc
pop
jmp
add
jb
test
mov
cmc
and
add
out
mov
iret
out
das
fs
pop
outsl
dec
adc
push
add
adc
hlt
cmp
cli
dec
cmp
bound
add
inc
gs
aaa
mov
fidivl
dec
push
adc
cld
push
jbe
idivl
jmp
or
hlt
notl
adc
lret
aad
push
add
ja
cmp
ret
mov
repnz
cmp
xchg
call
add
xchg
mov
rorl
lcall
incl
add
push
sti
push
xlat
call
add
mov
data16
or
and
pop
pop
test
rclb
jge
and
decl
in
test
sti
ljmp
xchg
dec
inc
and
and
in
push
aam
pop
xchg
jle
call
mov
dec
xchg
imulb
aam
addr16
add
aam
jb
repnz
or
add
push
adc
std
and
xor
mov
clc
jmp
fwait
add
testb
push
jge
clc
push
jge
shrb
adc
fldt
sub
xchg
mov
imul
test
jne
popf
jo
sahf
cmpsl
imul
mov
imul
or
push
or
jns
lcall
xor
int
add
add
push
imul
jne
call
fs
lret
pop
xor
jle
mov
cld
out
arpl
enter
fisttpll
pop
sbb
icebp
fnstenv
aam
cmc
adc
mov
pop
int
jbe
arpl
ds
out
arpl
iret
arpl
adc
add
add
lds
lock
popa
cmp
out
testb
push
out
incl
lret
mov
test
out
lahf
arpl
pusha
ss
cmp
test
test
cltd
mov
cmp
rclb
push
testl
sub
jg
call
and
xor
add
sub
gs
inc
mov
adc
dec
aam
jmp
data16
es
out
lods
gs
adcl
xchg
add
rolb
mov
dec
mov
inc
enter
je
in
mov
or
push
psubusb
lcall
jne
fdivs
add
add
xlat
xor
inc
in
mov
int
js
jg
lret
fdivs
ja
ljmp
adc
lahf
std
cli
sub
incl
fdivs
cmp
sti
jne
fcom
jmp
sti
adc
xor
ret
push
mov
sti
sub
push
add
jge
hlt
adc
add
jecxz
jne
mov
lock
add
add
cmp
faddl
jp
add
not
jge
and
jne
adc
jl
icebp
rorl
stc
push
into
mov
jnp
jnp
clc
dec
dec
xlat
nop
mov
imul
mov
imul
pop
imul
sbb
clc
orb
fisubrl
add
andb
add
add
ljmp
shrl
arpl
in
icebp
mov
jp
pop
rorl
pusha
mov
enter
adcb
test
push
jno
std
mov
js
cmp
jnp
mov
xorb
testb
dec
shll
stos
outsl
fiadds
loope
add
insb
aad
int3
add
add
mov
fs
aas
push
bound
dec
arpl
call
jle
jb
shr
repz
roll
orl
pop
push
shl
in
mov
push
mov
xor
sbb
aas
jmp
cmpsl
or
mov
cmp
loop
xorl
flds
mov
pop
push
add
iret
mov
cld
movsw
mov
movsl
data16
repnz
pop
andb
decl
out
clc
loopne
xor
sbb
or
insl
mov
dec
fildl
mov
pusha
fdivrs
rolb
push
fcompl
add
mov
pop
in
and
sti
test
std
pop
cmp
add
ljmp
pushl
xlat
ret
popf
or
in
sti
lcall
jo
jno
data16
outsb
loopne
ja
jmp
inc
or
fadds
idivb
jg
and
sarb
or
inc
or
mov
out
cmp
inc
call
jge
hlt
mov
ja
dec
add
add
loop
sti
jge
lret
dec
ret
sarb
add
dec
das
shrb
clc
inc
loop
jle
scas
push
cmp
mov
cmpsl
lret
mov
cld
jmp
data16
mul
inc
ficomps
rcr
insb
ss
roll
fs
and
jl
mov
test
pop
out
add
add
data16
cltd
nop
mov
sub
or
inc
imul
mov
jmp
outsl
loope
imul
sub
imul
pop
mov
pop
js
mov
in
test
test
pop
inc
mov
dec
cmp
add
jbe
add
push
addl
push
cld
aam
jmp
push
mov
mov
andl
fcomp
cld
es
xchg
mov
cli
push
aad
inc
adc
aas
aaa
mov
cld
out
xchg
lods
mov
add
cmc
add
and
add
jmp
repnz
xchg
shl
add
add
icebp
add
pop
pop
adc
mov
in
pop
ljmp
subb
jle
call
pushf
sbb
rorl
sti
incl
add
add
out
jns
jle
or
orl
cmp
addl
decl
inc
push
cmp
movb
add
add
ljmp
mov
xlat
in
cmp
xchg
out
fbstp
pop
push
adc
iret
add
ret
or
add
mov
int3
filds
xor
mull
mov
enter
xchg
cmp
pushf
dec
push
inc
loope
mull
push
jns
add
mov
jae
xor
imul
add
add
push
mov
jecxz
pop
jb
ja
dec
push
in
or
mov
fdivrl
mull
mov
adc
push
mov
and
negl
into
in
inc
or
dec
add
testb
adc
cmp
jne
cmc
xchg
add
add
jle
icebp
test
inc
daa
mov
mov
pop
mov
jle
adc
add
jne
out
testb
sbb
pop
insl
push
mov
mov
xchg
add
mov
adc
out
testb
add
fs
cmp
pop
fcom
enter
rcr
loope
vpunpckhqdq
es
inc
cmp
push
je
je
cld
je
push
out
add
arpl
imul
mov
push
adc
pop
add
cmp
and
icebp
iret
push
in
add
add
cmp
rep
xorb
mov
and
sub
out
cmc
jl
xchg
gs
xor
mov
lret
mov
inc
std
jl
repz
imul
xor
or
add
mov
push
jne
add
add
mov
push
mov
fisubrl
lock
or
or
or
sti
call
mov
push
xchg
mov
push
lea
mov
mov
outsl
mov
or
clc
dec
sbb
sbb
fmull
xchg
mov
add
push
ljmp
push
in
push
mov
rolb
add
push
dec
or
lahf
add
lds
in
pop
add
add
sbb
aas
imulb
push
mov
loopne
fbstp
or
jge
push
push
jg
imul
int
shl
add
inc
push
jl
mov
cmp
mov
mov
dec
test
add
add
fmul
mull
outsl
pop
dec
in
or
add
testb
cld
pop
lahf
push
mov
data16
dec
add
mov
mov
pop
mov
arpl
jnp
add
add
sbb
push
sbb
cltd
in
es
push
testl
xor
out
mov
negb
add
push
push
ljmp
pop
pop
xchg
xlat
cli
pop
mov
sarl
out
xchg
jbe
push
and
mov
pop
mov
pop
mov
xchg
xchg
imul
adc
adc
fs
xor
dec
mov
xchg
lcall
xor
add
add
adc
adc
mov
jmp
push
xchg
or
xor
jae
jo
sti
stc
push
inc
outsb
fidivl
cld
pop
dec
mov
jno
dec
dec
arpl
mov
adc
sti
dec
ss
sti
mov
ret
mov
inc
adc
or
popa
push
cld
add
mov
push
inc
addb
dec
popl
push
pop
add
add
mov
pop
in
mov
add
jmp
jb
gs
out
mov
pushl
cltd
cli
lcall
mov
pushl
sti
ljmp
je
js
add
idiv
dec
xchg
mov
in
mov
data16
mov
je
ds
adc
jg
xchg
jo
or
or
xchg
pop
cmp
add
add
pop
les
out
push
sarl
adc
or
xor
push
xchg
pop
adc
add
testb
decb
rorb
mov
mov
mov
push
test
pop
in
leave
mulb
call
jge
jl
dec
js
inc
ljmp
xchg
mov
mov
add
add
pusha
scas
out
mov
test
mov
jns
add
push
mov
mov
ret
test
and
add
outsl
xlat
cmp
subb
test
mov
hlt
outsl
add
out
aad
push
xchg
ret
add
test
out
xchg
push
out
mov
xchg
ljmp
iret
add
add
shl
xor
imul
idivl
or
int3
loop
js
repnz
add
push
mov
testb
sahf
rolb
neg
fmuls
aam
test
mov
clc
mov
test
roll
push
add
arpl
call
testb
bound
add
adc
imul
dec
jb
outsb
stos
test
jbe
jae
dec
sar
bound
dec
jb
sub
or
sub
mull
push
mov
jl
pop
jb
iret
call
lahf
dec
cld
add
mov
or
xchg
sub
in
or
or
push
push
aam
jo
add
add
mov
jmp
or
cld
dec
test
inc
pop
pop
cld
out
ds
call
add
xchg
cmp
push
inc
xor
ljmp
std
out
push
mov
mov
xchg
push
call
inc
or
iret
inc
push
xchg
je
xchg
and
jl
popl
mov
arpl
cld
add
mov
add
mov
lods
fs
jge
ljmp
cld
jmp
mov
push
add
push
jne
xorl
jne
dec
push
inc
xor
jg
pop
aas
lcall
adc
jle
repnz
mov
sarl
sbb
imul
inc
add
mov
or
notb
mov
psubusw
add
and
mov
or
in
mov
repz
mov
int3
add
imul
cmp
mov
jmp
add
add
dec
add
test
rol
pop
in
add
inc
outsb
rclb
fimuls
push
shlb
push
movsl
and
imul
out
jp
push
daa
or
repnz
out
add
add
lcall
fstps
popf
push
fcmovbe
testb
dec
jmp
out
lahf
cmp
stc
rcll
adc
add
cmc
cmc
cmp
mov
lret
fld
iret
and
int
xor
ret
fs
and
add
inc
cld
push
outsb
shlb
in
mov
dec
cld
xchg
add
add
ja
add
cli
add
jb
cmpsb
shr
mov
bound
je
dec
xchg
cli
cmpsb
inc
ja
add
lahf
cli
xchg
and
dec
adc
add
add
test
sub
push
sbb
adc
pop
pop
int3
pushl
dec
mov
stos
decl
add
shlb
push
mov
push
pop
data16
add
data16
les
adc
pop
cli
mov
cmp
inc
icebp
roll
rclb
xor
adc
out
adc
pop
ret
faddl
pop
ret
push
mov
xorl
jne
fcoms
sub
rcrb
rclb
add
add
fdivrp
adcb
add
iret
mov
into
pushl
test
or
aad
push
push
dec
pop
and
inc
rol
imull
clc
xchg
and
aas
not
int3
div
into
mov
sti
adcl
pop
fsubrs
adcl
cli
out
pop
pop
insl
fwait
dec
xor
adc
add
add
mov
or
lss
test
inc
bnd
jb
inc
dec
popa
mov
out
pop
push
jne
jle
fidivrs
and
dec
shr
xor
dec
pop
arpl
add
jbe
mov
stos
pop
inc
cmc
add
daa
fidivs
jge
shlb
push
dec
sti
inc
pop
shl
mov
adc
add
add
rclb
dec
mov
pop
add
loop
sti
mov
pop
shll
xor
mov
hlt
or
aas
jmp
cmc
shrl
mov
movsl
inc
adc
cmp
push
sub
or
lahf
std
lds
subl
call
hlt
popa
icebp
aas
jmp
add
add
adc
jmp
iret
shll
sub
fidivl
fisubrs
and
aas
mov
adc
cld
jmp
cmp
or
inc
cmp
std
xchg
jle
js
je
pop
jg
cmpsl
add
nop
insl
inc
or
lret
push
or
dec
mov
mov
stos
scas
jne
add
xor
xchg
mov
jb
adc
or
fwait
pop
xor
dec
mov
addr16
pop
sub
push
and
push
dec
add
and
ds
lods
daa
sub
pop
or
pop
add
inc
rorb
pop
fdivr
fsts
call
jb
aam
test
mov
add
sahf
test
ljmp
enter
test
and
sub
pop
inc
inc
pop
add
xor
ret
sbb
lds
fmuls
rolb
jb
out
imull
out
add
xor
daa
lret
pop
adc
mov
add
mov
outsb
jmp
mov
popa
pusha
outsb
mov
out
add
add
push
loop
ficomps
inc
movsl
dec
jle
arpl
std
flds
or
mov
dec
movsl
add
jns
xchg
icebp
sbb
xor
xlat
icebp
pop
fimull
adc
sti
pushf
pop
addr16
inc
stc
outsb
mov
call
test
icebp
add
add
call
inc
pushl
add
add
add
test
add
imul
call
jg
aaa
pop
cmpl
sarl
lcall
or
test
xor
xor
lcall
pop
pop
mov
scas
push
shl
inc
jb
out
cld
fdivrl
lcall
inc
jl
push
inc
call
out
add
add
add
add
stos
into
or
clc
sub
mov
stc
ret
mov
inc
cmp
ljmp
mov
in
pop
test
das
call
jge
xor
out
std
fbstp
clc
call
es
lock
xorb
mov
add
ljmp
ljmp
push
call
xor
hlt
mov
ljmp
pop
mov
xchg
aad
sbb
inc
push
or
xchg
negb
call
insl
xor
add
mov
jp
dec
stc
sbbl
adc
add
fdivrp
rcl
or
test
add
movl
mov
push
fildl
jmp
lods
pop
jge
pop
add
xor
pushl
ds
pop
add
popa
test
adc
pushf
add
add
push
mov
test
add
jne
inc
sahf
inc
repnz
pop
and
add
fiadds
or
add
mov
jmp
divb
add
rcll
ljmp
mov
outsl
ret
and
js
pop
jb
mov
jge,pn
lods
jne
dec
inc
js
and
ret
or
cmpsb
add
inc
bswap
mov
test
fadd
popa
js
scas
icebp
pop
lds
inc
cld
mov
and
jmp
add
add
std
mov
cld
jg
inc
adc
sub
add
mov
add
or
inc
adc
add
mov
push
cmc
add
icebp
cld
aam
adc
dec
stc
ss
jecxz
pop
not
push
add
ds
cmc
sub
cmc
add
sub
stos
incl
icebp
cld
mov
add
int
fiaddl
pop
add
call
pop
les
cs
jno
out
flds
dec
jno
pop
add
adc
pop
pop
push
sti
mov
in
jle
dec
push
mov
add
xchg
decl
les
inc
xlat
cmp
sbb
sub
mov
mov
leave
jb
mov
adc
shrb
sub
roll
push
xor
add
and
xor
mov
sbb
shlb
push
insb
inc
mov
jl
cld
jmp
pop
sub
cli
mov
or
ss
test
dec
xor
aas
imulb
dec
cld
jmp
icebp
aas
negb
inc
adc
cmp
jmp
push
cld
incl
add
dec
mov
or
mov
mov
cmp
jns
imul
dec
jg
push
cld
add
aas
idivb
xchg
mov
pop
loop
lds
inc
add
mov
jle
flds
mov
shlb
fcmovnbe
jmp
out
xor
lds
or
lods
sti
mov
fiaddl
movsl
or
cmp
or
add
add
xchg
sti
je
pop
clc
outsb
push
adc
js
pop
icebp
icebp
cmp
ljmp
leave
ljmp
enter
addl
inc
mov
and
jle
xor
jmp
mov
add
xor
adc
fadd
sub
push
jb
and
ja
punpckldq
add
testl
and
mov
shll
jbe
cld
lahf
aas
cmp
push
xor
adc
add
jmp
hlt
cmp
adc
cmc
add
push
loopne
jmp
push
or
push
cmpsb
sarb
repnz
xor
cs
and
adc
jo
je
sti
add
mov
add
pop
mov
and
lds
mov
add
or
mov
jo
adc
rol
jo
jl
mov
pop
add
jl
xchg
add
add
xor
push
outsb
cld
imul
cmp
enter
cltd
sbb
xorl
adc
push
add
add
xlat
add
in
inc
push
xchg
inc
mov
lea
faddp
and
adcl
mov
lds
out
rcr
pop
vmovshdup
add
add
pop
rcrl
loop
das
dec
or
xor
pop
xor
add
mov
inc
xor
or
pop
cmp
add
add
scas
aam
push
icebp
cmp
loope
cmp
test
add
adc
or
jbe
testb
pop
jo
mov
cmp
insb
les
sti
mov
insl
xchg
imul
out
mov
ds
cmp
push
jle
add
pop
add
loop
jecxz
fstp
adc
add
add
repz
shl
xor
movsb
roll
mov
scas
jmp
mov
jo
cmp
scas
or
out
mov
rorb
jg
dec
jge
cmpsl
inc
jae
repnz
scas
jecxz
xor
inc
gs
mov
cmp
jle
xor
cmc
add
pop
mov
mov
test
movsb
adc
idiv
ds
jb
mov
stc
call
pop
cmpsb
cld
push
mov
cld
imul
cld
push
mov
mov
sub
add
cmp
jb
and
fdivl
xor
or
test
std
add
cmc
mov
in
insl
add
fcomps
or
stc
in
lahf
add
push
add
test
in
push
adc
dec
decl
ret
movsl
add
icebp
or
sti
mov
xchg
jle
mov
mov
push
in
xor
sti
test
jo
sets
test
jo
xor
jno
cmp
bound
push
sar
outsl
xchg
pop
in
ja
adc
add
adc
cld
loope
mov
add
mov
popl
es
int
shll
push
pusha
cmp
inc
xchg
mov
jnp
dec
addr16
add
inc
sbb
or
ds
andl
or
pushf
ffreep
rol
pop
mov
lret
shlb
scas
cld
cmp
cmp
jle
lea
add
lcall
add
add
lds
inc
mulb
sub
lock
jae
add
add
ret
lods
out
dec
std
push
sub
mov
jne,pt
cmp
add
mov
mov
xor
data16
add
mov
sub
mov
push
add
mov
add
icebp
xor
xchg
addb
add
xor
add
mov
mov
adc
aaa
into
mov
out
jg
pushl
lock
add
mov
jae
jbe
test
inc
ss
jmp
cli
add
stos
jle
aaa
inc
push
mov
cmp
andl
int
cmc
clc
lret
mov
add
add
inc
imull
jle
popa
pop
fimuls
push
and
addr16
add
cli
mov
fs
repnz
pop
xor
out
nop
xor
call
int
aam
pop
add
out
lret
cld
decl
outsb
in
call
fs
cli
jne
mov
push
cmpb
call
xor
add
add
pop
add
xchg
decl
push
sti
adc
sbb
or
dec
out
add
or
cld
jecxz
data16
jo
les
adc
push
cmp
adc
decl
inc
push
call
xchg
testb
ficoms
jge
lods
fiaddl
jne
add
mov
jae
mov
add
add
ljmp
stc
xchg
cmp
data16
pushl
xorl
or
or
dec
push
sahf
inc
push
ljmp
push
daa
fstpl
jge
fisttps
jge
sahf
ss
add
imulb
imul
rorb
pop
xor
sub
int
adc
jecxz
add
ss
adc
add
add
shrb
add
adc
add
repnz
shlb
dec
mov
rcr
cmp
add
out
cmpsb
fnstcw
test
fxch
mov
jae
daa
mov
outsb
xor
xor
sti
xor
orl
outsl
cmp
cmc
add
icebp
cmp
out
shl
cmp
gs
jge
or
add
divb
faddl
pop
or
pop
mov
jb
push
dec
and
inc
int3
jmp
ret
push
cli
out
push
mov
inc
test
mov
xor
or
loopne
xor
out
mov
stc
or
or
or
mov
add
add
xor
scas
or
repnz
jb
neg
sbb
add
icebp
lret
cld
cmp
out
mov
stos
repnz
pop
inc
lret
push
mov
stc
jns
in
cld
push
dec
sub
push
add
std
xor
push
iret
cmp
jo
imul
push
jne
sti
jne
clc
adc
iret
addl
add
dec
or
test
dec
out
cmp
movsb
add
add
mov
push
test
pusha
add
andl
out
outsb
faddl
jno
add
fiadds
add
mov
ret
cld
je
pop
cmp
pop
hlt
add
push
imulb
adc
sub
pushl
lods
add
sub
mov
jg
or
lea
sbb
sbb
jne,pt
aaa
jg
add
lret
xorl
mov
sbb
cld
add
inc
negb
add
dec
aaa
sub
inc
xor
mov
add
inc
negb
cmp
cs
divb
mov
sar
mov
xor
add
inc
cli
movsb
inc
jae
add
ret
pop
jp
orl
inc
adc
add
mov
cmpsl
add
rcrl
mov
movsl
int
lret
or
icebp
inc
sbb
add
pop
sub
je
jle
out
ljmp
scas
ror
addr16
sbb
ds
jmp
roll
xor
stos
mull
add
inc
sbb
jns
addb
sti
pop
xorl
add
add
sub
aas
jmp
mov
add
xor
lods
icebp
mov
jb
push
or
sbb
cld
jmp
in
out
add
inc
jmp
inc
dec
xchg
test
pop
lahf
sbb
shl
rorl
icebp
js
cld
xor
jo,pn
mov
sub
jmp
add
add
ret
cmc
add
jb
add
sbb
mov
dec
add
pop
decb
std
aaa
adc
add
add
inc
cmc
jo
cld
out
in
out
aam
repz
sub
xchg
fdivrs
dec
push
push
lea
repz
pushl
xchg
clc
pop
add
repz
call
jmp
jnp
add
fdiv
sti
test
fsin
xor
cli
mov
mov
xchg
sbb
and
popl
add
pop
cld
pop
negb
add
packuswb
add
faddl
negb
jge
jmp
cmpsb
pop
imul
mov
mov
lret
add
lods
and
rol
bound
repz
mov
add
add
mov
sbb
sbb
xchg
push
mov
daa
hlt
sbb
mov
xchg
xchg
into
add
notb
and
sbb
negb
jge
sbb
add
sbb
out
jb
cltd
and
push
xchg
sub
nop
ljmp
js
popf
add
sub
int
xor
add
add
fcmovu
jle
add
je
mov
sarl
sbb
jb
in
push
into
jl
repnz
adc
add
into
add
cmc
add
adc
xor
mov
adc
jle
test
mov
xor
add
jmp
in
or
insb
add
add
cmc
adc
cmc
ja
movsb
inc
pop
jmp
push
push
mov
scas
and
and
and
in
sahf
push
fs
xor
outsl
loop
jmp
dec
ja
std
sti
add
push
or
sahf
cli
cmc
add
mov
push
mov
jo
out
add
add
add
add
movsb
js
xor
add
xor
pushl
inc
push
dec
add
inc
xchg
dec
xchg
imul
mov
lock
out
mov
add
in
icebp
out
sti
test
out
out
loop
sub
pop
std
mov
jle
dec
clc
movb
sub
add
mov
daa
std
cmp
decl
xchg
inc
or
add
xchg
cmp
test
add
fs
clc
push
loopne
and
iret
add
iret
mov
pushl
adc
adc
mov
insl
aad
out
dec
add
jne
sti
jmp
dec
jnp
rcrb
add
jge
cld
mov
push
sbb
sbb
mov
xor
call
incb
iret
pop
das
fdivr
ljmp
push
mov
sub
mov
add
aas
call
add
jle
xor
cltd
pushf
ss
mov
out
add
mov
ds
stc
inc
xor
negb
mov
sbb
add
add
sub
jo
negb
inc
adc
add
repnz
add
jnp
jl
sub
jmp
add
adc
mov
sub
add
jle
jb
push
jne
stc
sbb
lcall
pop
mov
pop
shrb
movsb
cmp
hlt
out
mov
xchg
cs
fadd
sbb
es
jns
pop
jno
fidivrs
inc
mov
outsb
xor
adc
mov
mov
incb
sub
mov
cld
pop
out
sbb
scas
mov
cld
aam
add
and
inc
jmp
cltd
jbe
or
or
and
rclb
sar
xor
inc
shll
test
jbe
inc
jns
in
int3
sub
add
adc
pop
sar
mov
inc
in
pop
adc
cmc
lea
add
xor
or
jl
mov
es
inc
xchg
sbb
jb
add
adc
test
push
jmp
loope
add
cmpsl
push
lret
add
ss
je
and
adc
or
push
ret
add
mov
dec
dec
mov
aam
adc
pushf
mov
orl
sar
inc
and
lea
add
insl
clc
call
xchg
mov
add
add
add
sti
jne
aam
or
fdiv
sub
ljmp
lock
jmp
imul
dec
xchg
cld
sub
sub
jecxz
adc
xchg
inc
jb
xor
push
inc
arpl
push
cltd
dec
or
sbb
jge
xor
test
add
or
ja
outsl
cmp
sub
add
add
sub
incl
adc
pop
jl
mov
lds
add
add
lret
sbb
aam
or
mov
cld
loopne
les
mov
faddp
inc
add
sub
add
add
cmp
imul
out
pop
lods
filds
add
add
dec
xchg
add
lret
jb
out
shrb
mov
rclb
sub
fsubr
cli
xchg
mov
cmp
and
sub
xor
call
test
inc
jmp
mov
mov
xor
addr16
xor
xor
out
adc
bnd
push
add
add
jg
add
cmp
or
cs
out
ljmp
popa
fisttps
repnz
scas
or
call
or
and
cmc
and
call
xchg
ljmp
es
push
cmc
add
and
push
mov
sti
call
data16
jb
add
add
test
push
negl
sub
filds
inc
or
xchg
movsb
inc
add
bound
sbb
xchg
xor
icebp
ret
inc
mov
decl
xchg
sub
lahf
movsb
dec
adc
sub
call
cmc
fcomps
push
in
loopne
sti
mov
sub
push
in
ret
push
fwait
movsb
cmp
idivb
add
pop
cs
shrb
add
sbb
sub
add
mulb
ja
idiv
stc
push
rcll
mov
testl
imulb
testl
mov
xor
sbbb
test
mov
add
mulb
mov
jge
add
add
daa
out
cmp
add
add
outsb
inc
hlt
add
fsubrl
mov
test
add
add
sarb
out
adc
out
adc
stc
inc
xor
stos
jl
add
add
gs
popf
sub
jp
cmc
imul
jno
dec
add
mov
sbb
and
add
add
lods
fadd
xchg
test
add
add
stos
out
jb
adc
mov
jb
stc
andl
sbb
push
data16
ret
in
pop
jmp
fsubrl
mov
inc
sbb
push
or
pushf
inc
mov
cmp
xchg
psrld
fisubrs
add
sar
mov
add
cltd
repnz
nop
repnz
sahf
call
push
mov
les
lret
cli
xor
add
aaa
loop
sbb
ljmp
hlt
push
mov
xchg
adc
les
inc
pop
pop
in
push
mov
and
jl
push
push
and
sub
call
movsb
stc
sub
add
add
push
push
pop
add
fdiv
add
lahf
add
loop
or
aam
inc
cld
mov
insb
out
int3
int3
pop
cld
incb
add
push
mov
out
mov
incl
dec
into
aaa
mov
inc
cld
lcall
mov
inc
add
cld
je
adc
movsl
pop
inc
push
inc
sbb
adc
hlt
adc
inc
add
pop
ljmp
mov
lods
pop
out
sub
add
jne
jb
cwtl
and
inc
and
jmp
fnsave
leave
sub
mov
xchg
xor
pop
lods
add
frstor
inc
or
jne
cmp
rcll
mull
adc
add
lret
ret
jns
test
mov
arpl
sti
loopne
inc
or
dec
lea
shlb
insb
jle
sbb
or
inc
ljmp
lock
mov
and
add
lea
out
sbb
scas
fisttps
cmc
ror
cmc
outsb
adc
add
add
cmp
sbb
jae
shl
xor
into
das
sub
out
push
xchg
call
dec
xchg
and
cmc
sub
adc
repnz
jmp
cmc
mov
mov
add
ss
and
fsubl
mov
outsl
dec
jg
mov
cld
ds
test
dec
pop
das
and
pop
mov
add
decl
sbb
mov
mov
subb
mov
bound
stos
add
cld
xor
push
fmull
sti
ljmp
fs
mov
push
xlat
dec
sti
call
aaa
inc
sti
jne
cmp
jne
xor
jo
push
leave
add
add
pop
xchg
mov
int3
add
decb
push
sub
and
and
call
push
jns
mov
pop
cwtl
inc
call
xor
mov
and
dec
ficompl
imul
ret
sub
add
sub
fbld
lea
xlat
mov
add
add
mov
adc
addr16
push
jnp
sar
inc
stos
mov
ret
mov
add
hlt
cmc
inc
xorl
push
xor
adc
test
xchg
add
add
jge
or
fisubl
add
testb
out
pop
xor
dec
cmpl
add
push
frstor
cmp
imul
add
add
fnstcw
add
popa
leave
in
pop
repnz
insb
xchg
jg
sbb
enter
xchg
push
stos
into
mov
idivb
ret
xor
ds
imul
or
shll
ret
push
push
xor
lret
lcall
or
pop
mov
addl
add
add
call
lahf
jb
mov
jge
jmp
xchg
add
int
mov
fucomp
call
repnz
mov
jmp
imul
pop
stos
out
add
pop
sbb
cltd
jmp
aaa
adc
or
or
jae
gs
test
add
xor
mov
outsb
add
jmp
movsl
push
arpl
repnz
in
or
call
add
call
or
pushl
dec
pop
xchg
sbb
hlt
cmpl
xchg
push
and
cmp
and
cmp
add
cmp
pop
dec
mov
ret
inc
add
test
in
mov
sti
mov
fmuls
inc
pop
push
sti
xor
enter
fiadds
add
leave
mov
mulb
clc
push
shll
test
inc
cld
mov
cmp
mov
add
testb
push
jo
add
jg
adc
daa
sub
dec
sbb
add
jns
dec
add
imul
push
in
push
jge
inc
add
pop
aaa
add
mulb
fadds
cmp
add
dec
xchg
jbe
or
andb
xor
adc
inc
cli
add
fsubs
adc
fcomps
cltd
sub
adc
pop
fidivs
and
pop
idivb
or
add
divb
popfw
in
add
mov
xchg
mov
jle
push
cmp
add
loop
adc
inc
mov
leave
adc
add
stos
jno
mov
nop
push
sub
mov
sbb
cmc
adc
pop
adc
add
cmpsb
xchg
es
push
adc
add
add
add
jne
or
andl
cmc
mov
lahf
outsb
and
mov
mov
pop
call
mov
cmp
mov
sbb
call
jns
jle
cli
adc
psrad
push
out
mov
pop
repnz
mov
xchg
orl
cld
sbb
add
aaa
mov
mov
jecxz
lcall
call
test
push
push
xchg
sub
xchg
out
incl
testb
push
inc
add
push
idiv
incl
add
clc
inc
or
pop
fldl
sar
in
int3
pop
sarl
test
subb
ljmp
pop
sar
adcl
scas
inc
adc
add
aam
mov
sarl
sar
adcl
scas
inc
adc
int3
mov
shrl
mov
xor
loopne
xor
aaa
leave
or
cmp
dec
decb
in
mov
or
cmpsl
orl
mov
mov
or
mov
dec
dec
add
add
sahf
mov
jge
inc
jmp
xchg
pop
or
fsubs
sub
hlt
repz
mov
sbb
inc
mov
cli
jg
std
sub
mov
sub
ret
mov
mov
divb
add
testb
mov
sub
sbb
clc
test
add
add
cmp
inc
lea
inc
cli
popa
dec
cltd
mov
in
mov
test
testb
testb
xor
push
jp
mov
xchg
sbb
popf
out
xor
es
xchg
xchg
pop
cmp
out
dec
xor
ljmp
or
outsb
gs
rorl
cld
push
inc
or
ljmp
add
mov
sbb
hlt
jnp
dec
adc
adc
pop
and
push
out
mov
cld
push
jo
cld
je
mov
add
cld
gs
pushl
jne
or
cmpsl
clts
repnz
fsubrl
inc
out
or
add
mov
pop
mov
sti
cmp
jle
dec
push
cld
add
push
push
add
add
add
jne
faddl
cwtl
testl
jge
add
inc
mov
jno
mov
divb
pop
cli
clc
jl
lcall
in
call
in
xchg
pop
sti
jne
fidivl
sub
call
and
jo
aaa
dec
add
pop
mov
test
add
aaa
hlt
sti
pushl
jb
add
xchg
in
in
notb
adc
daa
jae
sub
cmp
pop
in
notl
add
enter
jb
mov
adc
add
push
lahf
adc
stc
mov
ret
notb
xchg
inc
mov
scas
flds
sub
sub
dec
adc
dec
add
add
sbb
xor
loope
sti
adc
xchg
sar
or
out
sbb
add
in
push
add
test
out
xor
jmp
mov
jno
es
cmp
or
call
adc
xor
add
fists
filds
pusha
mov
add
mov
sbb
lods
mov
mov
fiadds
repz
in
add
mov
jmp
mov
mov
les
std
imul
icebp
jns
sbb
stc
sti
jbe
mov
or
mov
cld
mov
aas
jmp
loop
cmc
inc
jns
aad
cld
cmp
nop
ss
add
add
mov
jb
or
mov
in
or
xchg
or
jbe
sub
leave
negb
xchg
mov
add
add
jnp
js
cmc
xor
call
mov
add
das
mov
adc
scas
cld
pop
add
int
or
inc
add
lds
dec
addr16
add
fimull
and
jae
out
ret
add
mov
inc
das
mov
imul
cmp
xchg
inc
sbb
imul
inc
xor
add
lea
add
dec
push
mov
adc
int
cld
xor
sti
cmp
test
and
mov
data16
jb
adc
add
idivb
aad
es
imull
fadds
xorl
add
dec
out
mov
out
or
dec
push
sarl
call
cmp
sar
lea
xor
add
cs
add
jle
out
scas
xor
jae
repz
add
call
adc
pushf
jge
rcrb
mov
les
mov
leave
stc
xchg
cmpsb
add
ljmp
lds
add
sbb
popa
or
push
and
push
shl
adc
mov
imulb
enter
ret
idivl
clc
roll
mov
jle
add
mov
add
cmp
out
mov
out
jle
xchg
mov
jl
jle
add
add
js
adc
out
testb
mov
cmp
fidivs
lcall
popa
add
mov
add
push
iret
testb
repz
jo
incb
fucomp
cmc
mov
cli
cmp
xchg
cmc
add
arpl
pop
cs
add
add
or
pop
mov
pop
arpl
xchg
pop
cld
jmp
jge
call
stc
add
cld
rol
insb
push
xchg
push
lcall
adc
dec
lods
and
stos
repz
test
clc
cmp
imul
jne
sub
inc
pop
outsb
jecxz
test
or
cmp
mov
add
xchg
add
or
push
clc
add
push
aam
add
inc
hlt
pop
int3
jno
add
add
or
cmp
mov
ljmp
xor
or
into
ljmp
filds
mov
ss
push
repz
add
in
xchg
negb
or
jne
pop
push
dec
add
add
add
jl
orb
cmc
cmpl
xchg
or
lea
mov
jns
divb
scas
or
loop
subb
out
push
jb
pop
push
shl
lds
outsl
or
gs
add
jg
add
outsb
adc
jmp
test
jno
incb
add
add
lcall
add
sbb
fidivl
pop
inc
std
add
inc
scas
arpl
cwtl
jp
sti
jle
outsl
movl
scas
sbb
xor
sub
jne
cmp
flds
sbb
ja
call
ret
and
sbb
inc
jg
pop
jns
add
cmp
add
test
or
jae
inc
repnz
daa
push
xor
push
leave
rorb
in
jecxz
jmp
out
imull
sub
xchg
jle
dec
adc
mulb
or
in
inc
mov
inc
mov
loop
and
test
in
mov
je
add
cli
insb
daa
xchg
bound
mov
add
add
cld
and
jnp
insb
cld
mov
daa
aas
cmp
ds
cld
jbe
jns
jne
mov
shl
stos
mov
std
xchg
jbe
ljmp
sub
lea
xor
adc
push
pop
ret
cmpsb
imul
mov
ljmp
sbb
push
mov
jle
mov
inc
lcall
mov
add
or
lret
add
push
xchg
decb
leave
stc
dec
test
test
stc
test
pop
mov
add
incl
cmp
repz
dec
sti
mov
pop
xchg
adcb
neg
add
and
call
pop
or
add
hlt
jb
fnstcw
notb
jb
push
cmpsb
pop
mov
push
add
testb
and
xchg
inc
add
sbb
imul
add
idivb
test
adc
adc
sub
pushl
sar
jge
jne
add
mov
jg
cld
xchg
cmovne
pop
cld
push
push
jmp
sub
jge
add
add
push
jle
push
clc
inc
mov
sub
mov
inc
or
add
lret
jle
add
xor
adc
xchg
jle
sbb
add
jnp
test
inc
outsb
clc
imul
in
das
nop
or
sarb
popf
jge
sbb
inc
add
push
pushf
pushl
add
add
mov
sbb
nop
jmp
xchg
xor
stc
or
jb
sbb
in
rolb
xchg
add
idivl
out
mov
sub
and
dec
pop
push
mov
push
xchg
data16
cltd
push
mov
dec
cmc
icebp
sub
add
in
add
sbb
inc
aas
out
ror
push
call
std
cmp
add
add
inc
add
cld
test
push
adc
call
callw
mov
test
push
mov
add
nop
push
xorl
je
or
mov
cli
inc
stc
std
decl
test
add
inc
inc
mov
mull
clc
clc
sbb
or
push
mov
add
leave
sbb
mov
stos
add
push
push
add
pop
or
push
jle
rolb
xor
xor
mov
int3
sbb
outsl
and
xchg
adc
cld
inc
jne
mov
rcrl
jmp
fstps
dec
jb
mov
dec
sti
adc
pop
or
testl
in
push
add
sti
mov
sub
add
add
aaa
ja
sub
cli
mov
testl
mov
out
inc
add
insl
add
jae
jbe
insl
cmpsb
pop
jae
xlat
add
cmp
jb
call
mov
pushl
add
icebp
add
sbb
push
xor
imul
sbb
add
out
jmp
inc
ljmp
inc
jo
jmp
repnz
and
mov
call
cmp
xor
inc
add
mov
sub
cwtl
js
fstps
divb
add
push
ss
sbb
cld
sub
inc
jmp
and
cli
ljmp
push
sti
aam
add
movsl
or
clc
loop
or
mov
add
add
jge
jmp
insl
std
jp
cmc
dec
sti
aam
adc
jl
hlt
and
jo
mov
push
mov
mov
test
pushw
lea
cmovo
cmp
bound
data16
bound
push
out
jo
mov
add
push
sti
hlt
adc
jmp
mov
jbe
in
xlat
adc
add
cld
mov
pop
push
in
mov
decl
and
jne
mov
decl
or
adc
lcall
je
jns
int3
hlt
mov
mov
cmc
inc
lret
in
mov
xchg
inc
dec
push
adc
cmovo
add
lahf
add
or
or
mov
jecxz
sub
addb
outsb
fcoml
pushl
push
sbb
adc
sub
jmp
call
test
sub
mov
mov
jns
sub
adc
mov
cmp
jp,pn
sti
sbbl
add
out
push
mov
add
out
xchg
addr16
add
xor
daa
std
aas
test
add
and
dec
pop
test
test
out
gs
mov
inc
add
insb
add
mul
lahf
jl
es
iret
sbb
pop
ds
daa
xchg
leave
rolb
cmpsl
js
ret
aas
ds
sti
divl
add
add
je
mov
mov
push
xchg
add
imul
daa
js
ret
out
cmp
data16
divl
leave
sti
mov
ds
or
mov
cli
std
fwait
inc
push
les
inc
idivb
or
adc
adc
sub
add
jo
add
enter
aaa
stos
jmp
add
popf
idivl
jmp
dec
pushl
add
dec
inc
idivl
jmp
cmc
xor
repnz
ror
cmp
add
icebp
mov
sub
pop
cmp
leave
out
aas
jmp
or
imulb
scas
out
aas
jmp
cmc
filds
popa
loope
stc
stos
cmc
test
inc
cld
adc
xchg
faddl
add
add
add
add
sub
push
data16
stc
inc
dec
dec
mov
push
push
mov
adc
mov
mov
fdivr
notb
mov
leave
ret
lahf
ss
pushl
mov
mov
push
pop
xadd
lahf
add
add
outsb
psubsb
add
push
les
pop
int3
cld
mov
add
mov
add
div
ret
push
ss
mov
cmp
subb
mov
rcl
rolb
sbbb
add
jmp
std
sti
inc
les
sub
xor
add
xor
cld
mov
add
sbb
ret
push
mov
pop
mov
add
add
sbb
xlat
cs
lret
cld
xor
mov
cld
xor
daa
push
inc
idiv
and
ret
je
aas
in
std
mov
and
add
adc
lret
xchg
inc
jmp
lock
jmp
inc
testb
adc
aaa
inc
xor
or
adc
add
ret
push
xor
mov
into
lahf
inc
testb
jmp
popl
dec
cmpb
clc
es
sub
sarl
faddl
jg
pop
mov
cmc
scas
int3
cltd
dec
pop
out
daa
push
lcall
jmp
sti
bound
xchg
inc
jmp
test
push
add
adc
pop
adc
pop
add
add
jg
or
push
call
insb
xor
xchg
push
stc
add
pop
imulb
test
cmc
dec
xchg
stc
adc
out
je,pn
cld
push
xchg
xlat
xchg
jmp
js
jne
scas
iret
jb
cmc
test
inc
jmp
test
or
add
jne
dec
jae
add
sub
add
add
cmp
add
lea
jnp
je
mov
test
js
xor
jne
adc
js
add
mov
call
xor
dec
mov
mov
call
loopne
add
or
pop
addb
or
cld
sub
decb
adc
idiv
stc
xchg
cmp
add
stos
mov
xor
testl
out
outsb
add
andl
decl
jae
add
and
jnp
movb
dec
bound
call
and
stc
xchg
dec
dec
fsubrs
dec
shrb
lret
bound
and
xor
incl
push
pop
pusha
sti
and
and
add
add
rorl
add
negb
in
inc
movsb
jb
xchg
pop
dec
sbb
inc
inc
inc
add
pop
repnz
lea
sbb
gs
into
sbb
mov
push
lods
repnz
pop
movsb
add
outsl
repz
add
inc
in
push
es
fidivs
add
test
loop
add
testl
add
xchg
inc
mov
add
cli
stos
sbb
mov
sbb
jmp
pop
lcall
test
insl
testl
out
in
cmc
test
push
adc
add
rcrb
cmpb
je
inc
jmp
call
push
sbb
add
add
add
pop
add
out
push
test
sub
inc
jmp
push
lea
jmp
mov
sub
jmp
repnz
sbb
and
shl
inc
add
cmc
pop
add
cld
jmp
out
add
add
add
add
inc
adc
add
ror
inc
and
xor
pop
sldt
add
add
iret
pop
jae
jae
sub
aaa
pop
xor
fadds
add
dec
pop
add
fs
adc
je
add
push
jecxz
mov
pop
add
push
inc
jle
add
shlb
pop
add
push
jmp
pusha
push
inc
pop
test
or
outsl
and
add
negb
cmp
or
add
add
sbb
jg
sbb
cmp
fs
psadbw
clc
je
out
adc
mov
sbb
rcrb
das
roll
dec
and
fcos
cli
or
inc
negb
and
fdivs
pop
xchg
and
fcos
mov
clc
add
fptan
mov
scas
add
add
add
pusha
inc
and
dec
inc
and
add
mull
and
das
aad
jmp
das
aad
jmp
cmp
and
jmp
mov
cmp
jmp
das
aad
jmp
add
add
in
jmp
push
testb
pop
out
jns
pop
push
fxam
pusha
add
add
pop
jo
adc
ficoml
lods
popf
add
dec
sub
ss
outsb
loopne
ret
lret
jns
lds
cmp
cmc
add
outsl
je
xchg
pop
into
sti
xchg
jl
or
jne
dec
jmp
clc
test
sub
js
push
sub
jne
xor
popa
dec
enter
ds
and
hlt
decl
add
add
add
or
jmp
add
out
push
test
cmc
add
test
add
xchg
dec
addr16
out
push
call
fs
mov
verr
add
lea
push
lea
jg
incl
jl
fwait
les
push
jne
ja
in
incl
mov
sbb
add
in
mov
call
lea
frstor
out
sahf
add
lea
mov
add
pop
aaa
jne
cmpsl
inc
testb
lds
add
addl
xor
call
adc
clc
pminub
mov
inc
xor
neg
imul
and
je
sti
cmpb
add
in
push
stc
dec
cmp
test
pop
mov
icebp
outsb
push
or
xlat
xor
jp
imul
cmp
ds
push
mov
hlt
add
mov
jg
sub
je
cmp
cltd
popl
data16
sub
repnz
cli
jmp
adc
outsb
out
test
xchg
pusha
adc
sar
ds
testb
add
xchg
jge
add
pop
push
jmp
mov
jne
pop
push
sbb
imul
sbb
push
and
testb
inc
std
ljmp
dec
ljmp
out
repnz
std
sbb
int
mov
dec
test
inc
repz
mov
mov
ja
divb
fdiv
ficomps
repz
sub
add
scas
mov
adc
pop
lds
int3
xchg
cmp
xorb
fs
jmp
lock
je
rcll
lea
push
lea
cmpb
jbe
sbb
add
add
ja
hlt
jb
fsubs
fs
inc
push
pop
jmpw
lods
ficompl
in
push
jbe
int3
dec
add
add
cmc
les
out
cmp
mov
imul
out
jle
add
cmc
add
add
cmp
push
std
mov
js
pavgw
add
adc
cmp
bnd
adc
xorl
sti
jae
dec
pop
push
lock
incl
add
rcrb
inc
fbld
test
pop
mov
inc
adc
nop
add
cld
gs
imul
or
cld
gs
or
sbb
jb
add
pusha
dec
push
add
jae
rcrb
inc
mulb
push
into
daa
cmp
fwait
insb
shl
test
dec
or
add
add
push
add
scas
jb
push
inc
sub
test
pop
test
mov
cli
fsts
or
clc
jne
pop
dec
inc
cvtps2pd
pop
mov
pushl
neg
jbe
adc
add
fdivrs
jmp
sbb
lock
inc
das
adc
lcall
idivb
jp
call
add
add
adc
insb
push
add
add
or
ljmp
out
xchg
pop
add
xorl
add
jp
sbb
xorb
gs
hlt
in
js
out
out
or
inc
testb
aaa
imul
push
jnp
cmp
ret
ds
adcl
mov
mov
inc
add
add
add
lods
insl
add
repnz
xor
rorb
js
cmp
inc
out
outsb
shll
into
jne
xor
add
dec
jb
bound
jae
add
or
lea
dec
in
sahf
jl
and
sbb
jae
int
push
call
insb
mov
test
add
add
jmp
sbb
cmc
jge
fs
push
and
sbb
je
adc
jnp
sti
sbb
push
addb
add
mov
les
sbb
pusha
or
jnp
inc
inc
and
dec
call
sbbl
jne
dec
call
addr16
outsb
add
pusha
sub
add
cld
notb
and
add
jg
jo
idiv
jmp
sbb
xchg
sbb
add
in
or
pop
loopne
mov
cmp
jae
stos
sti
and
js
sahf
jo
sti
mov
clc
notb
add
jge
fnstcw
jg
testl
lcall
add
add
push
jb
dec
lret
jo
notb
dec
xchg
fnstcw
sbb
or
pop
cmc
je
insb
push
push
imul
call
jae
jb
pop
outsl
add
sbb
sti
js
hlt
add
sub
in
aad
mov
adc
outsb
pop
pop
movsb
es
inc
pop
push
mov
out
jnp
icebp
lds
hlt
call
add
add
popf
add
xchg
insb
xlat
js
in
shll
bnd
fdivs
outsl
testb
inc
in
jecxz
cld
push
and
sub
push
jno
jmp
dec
rcrl
dec
add
xor
or
jge
sti
jne
jmp
jg
insl
add
ljmp
test
repz
push
cld
jg
sub
add
add
xor
imul
loopne
clc
mov
out
out
dec
mov
cmc
mov
clc
mov
out
mov
cld
jb
xchg
cmc
mov
dec
stc
mov
or
aas
out
mov
popa
lret
call
mov
pop
stos
add
add
mov
mov
pop
aaa
mov
mov
popa
leave
je
sub
adcb
add
xchg
jge
sub
cmp
out
jecxz
pop
aad
jg
inc
out
or
mov
data16
xor
shr
mov
stc
xor
fildl
pop
out
into
addr16
jae
cmpsb
movsl
idiv
pop
std
pop
mov
mov
dec
inc
or
call
repnz
orl
lea
testb
test
test
sti
inc
hlt
pop
sti
or
jnp
jg
push
push
mov
add
mov
fldl
aas
aas
popf
out
bound
sti
or
xlat
lea
call
xor
aaa
add
insl
les
add
add
jb
jmp
pushl
insb
cmp
movb
loope
pop
dec
imul
jnp
mov
mov
jle
push
add
add
ss
rcrb
xor
add
inc
loop
jmp
jl
sub
xor
pop
ds
xor
ds
add
add
add
inc
jmp
fucomi
mov
add
add
cld
or
pop
xor
push
ds
test
jns
aad
dec
fistpll
cmp
imul
pop
inc
push
out
call
sbb
cmpsb
xchg
push
lock
adc
data16
fxtract
jae
xor
and
cmp
lock
add
mov
add
sbb
inc
in
dec
xchg
inc
mov
push
inc
cld
cltd
lods
mov
sti
cs
add
lods
pop
push
lret
out
lret
loop
or
inc
lods
add
into
inc
cld
cltd
sub
add
in
dec
fstp
leave
or
popa
xor
jmp
call
add
inc
js
add
add
add
cld
das
inc
jge
cmp
lods
iret
add
cwtl
filds
add
xchg
add
cmpb
push
add
add
push
lahf
add
ret
push
in
add
xor
aam
add
pop
xor
jg
add
sub
inc
pop
pop
cmp
mov
add
or
test
lret
out
mov
and
jae
inc
scas
push
adc
pop
or
and
data16
in
jne
clc
cli
add
push
inc
negb
push
fnstcw
cmpsb
push
jmp
jb
lret
rcrl
les
mov
decl
repz
fs
es
in
add
add
out
pop
outsb
repz
add
pop
or
sti
dec
jp
inc
ds
ljmp
or
leave
pop
divb
ret
in
jbe
int3
sbb
les
ja
pushf
cmp
xchg
cmp
push
pop
inc
jmp
xor
out
js
xchg
pop
ss
jmp
sbb
xorl
add
add
cmpl
push
inc
jmp
outsb
repz
inc
add
aad
ds
jmp
mov
cld
adc
add
jmp
cwtl
testb
bound
sti
jne
mov
add
push
pusha
add
jge
add
sub
pop
mov
in
mov
pop
addb
adc
incl
add
xor
or
bound
pop
bound
jmp
or
dec
mov
push
pop
push
mov
jmp
or
or
dec
cs
mov
gs
in
and
jne
icebp
cltd
push
add
xchg
sbbl
les
aaa
aam
inc
xchg
idiv
stos
cmp
call
lcall
xor
idiv
test
mov
mov
ret
dec
push
xor
incb
xchg
icebp
decl
cmp
add
xchg
cld
inc
iret
cmc
sbb
dec
inc
add
push
not
xlat
inc
cld
dec
std
je
aaa
ss
cmp
sbb
xchg
pop
add
jmp
or
out
mov
add
add
push
dec
push
fcmovne
sti
inc
pop
dec
add
int3
cld
mov
push
sub
mov
loopne
divb
out
mov
sti
jb
pop
or
mov
leave
add
testl
aas
add
sahf
stc
xor
fucom
cli
dec
loope
xor
loopne
inc
fnstcw
add
imul
lcall
in
jmp
xor
mov
sub
pushf
or
roll
push
fsubr
imul
jmp
push
dec
std
movsb
add
fsubr
add
add
leave
fstpt
je
add
xor
add
xor
jmp
mov
xor
inc
idivb
push
clc
test
add
add
jmp
push
add
mov
sbb
test
es
xlat
out
jmp
mov
cmc
call
xchg
das
cmp
int
ret
inc
lds
mov
mov
mov
mov
jle
add
gs
and
fwait
add
jmp
add
add
inc
add
sbb
add
sbb
mov
pop
push
shrb
mov
test
inc
ret
out
jmp
or
test
jno
add
cmc
dec
or
sbb
insb
std
call
add
dec
push
mov
inc
cmp
add
pop
mov
test
push
jle
pop
add
push
add
lea
add
int3
adc
cmpb
push
lahf
push
test
pop
mov
jo
and
add
add
mov
xor
sub
xor
inc
and
in
pop
mul
incl
arpl
xchg
mul
decl
mov
adc
add
jecxz
adc
mov
div
jae
lea
xchg
lds
out
out
es
and
fsub
adc
and
or
mov
or
push
es
or
adc
pmuludq
sti
icebp
pushf
dec
and
mov
sub
push
insb
shl
mov
lea
aas
push
jae
sub
testl
repnz
add
add
cmc
pop
dec
ficompl
pusha
inc
mov
mov
inc
jg
fisttps
mov
outsl
dec
adc
filds
push
pop
push
adc
jo
negl
lods
daa
fimuls
pcmpeqd
or
hlt
cltd
push
or
push
or
ret
sbb
add
loope,pt
inc
sbb
lock
int
add
add
add
sub
and
call
push
fdivrs
or
wbinvd
das
inc
fstpt
cmp
sbb
rcrl
mov
sbb
test
lahf
jbe
jmp
jns
je
jle
and
test
jne
and
sub
add
add
or
jmp
sbb
add
cmp
bound
push
add
cmp
sti
mov
or
out
pop
testb
cmc
jns
std
adc
add
xorl
test
std
lcall
add
popl
test
incl
adc
add
out
in
mov
add
add
dec
jecxz
cmpl
je
jnp
dec
add
add
test
dec
pushl
packsswb
gs
inc
and
xchg
mov
jmp
cmpl
dec
test
xorl
je
inc
jp
add
aad
dec
mov
cmc
inc
mov
or
hlt
adc
fldt
es
cmp
stos
push
push
adc
adc
cld
mov
aad
jg
add
add
add
out
lods
out
dec
imul
jg
mov
jnp
fs
jne
jns
inc
push
orb
inc
add
out
enter
rcl
pop
mov
dec
dec
and
mov
popa
mov
adc
popa
outsl
sbb
sub
inc
adc
das
sti
push
int
imul
fidivs
add
test
and
add
fistpll
or
loop
cwtl
iret
push
popf
push
or
add
adc
outsb
neg
xor
shrb
rcl
dec
jg
or
sbb
das
in
test
add
dec
pop
jl
jle
push
out
insl
cli
subl
cmpsb
iret
jne
fidivrs
pop
jmp
testb
ret
mov
ljmp
gs
out
or
push
add
add
fldcw
jmp
dec
inc
sahf
scas
xchg
shlb
and
aaa
insb
out
add
repnz
iret
test
sub
gs
jp
or
jns
and
mov
sarb
lret
xchg
dec
mov
and
mov
adc
cmpsb
add
mov
add
or
dec
lcall
and
and
cmc
xchg
xchg
pop
adc
add
jnp
and
pop
push
pop
fs
ret
push
mov
in
jo
push
bound
in
dec
dec
ds
inc
lahf
add
inc
inc
test
leave
int
pop
lcall
push
aad
add
lds
aas
mov
xchg
jb
lods
add
add
rol
call
pop
cmp
imul
hlt
jmp
jge
hlt
cmpsb
inc
add
dec
push
adc
push
lcall
add
inc
notb
mov
fcompl
cmp
idivb
mov
pop
test
not
out
loopne
rolb
xchg
fwait
test
xchg
incl
add
insl
in
pop
adc
fsubrs
jg
cli
cli
test
inc
mov
rcl
rcr
sahf
xchg
imul
fdivr
not
push
ror
fimuls
jae
test
add
leave
xor
add
orl
add
movsl
adc
and
cwtl
mov
mov
adc
and
cwtl
dec
mov
add
xor
adc
push
adc
jo
ficoml
dec
in
call
xchg
lds
add
fwait
pop
add
add
ja
add
or
inc
pop
adc
aam
jle
and
pushf
jmp
cmc
cmp
pop
mov
repnz
ss
add
mov
test
add
add
and
lret
pushf
and
test
cmc
add
jmp
jge
and
jo
and
insl
inc
and
jo
and
jge
and
jo
and
insb
inc
and
pop
inc
and
out
jl
jmp
testl
and
roll
fsubr
cmc
add
andb
loopne
and
and
add
add
inc
and
arpl
mov
add
addb
dec
pop
and
scas
iret
mov
sti
ljmp
dec
or
cld
sub
push
mov
and
ldmxcsr
push
lds
adc
add
add
rcrl
sbb
dec
incb
mov
adc
push
add
add
cld
dec
push
adc
pop
decb
jle
test
mov
sub
jne
dec
inc
and
stos
jp
movsl
xchg
dec
sahf
mov
into
push
push
les
cmp
je
pop
inc
and
out
ret
cmp
xchg
cld
jmp
es
mov
fidivrs
cli
leave
pop
inc
and
or
adc
add
add
sub
loopne
inc
shrb
xor
jne
and
push
inc
and
jecxz
dec
sbb
incb
mov
cmp
mov
push
adc
adc
lret
lcall
daa
sub
inc
neg
outsl
jmp
leave
gs
mov
dec
rcrb
outsb
cld
jb
or
xor
jle
push
add
add
pop
push
sbb
mov
add
push
and
insl
les
mov
add
add
and
jl
sbb
or
jle
add
jp
sbb
in
insl
jl
fnstcw
add
bound
jle
mov
addb
xor
pusha
scas
add
out
jle
int
js
in
add
mov
inc
add
sbb
jno
add
xchg
scas
std
dec
mov
stc
dec
scas
sti
mov
stc
shl
jg
add
cmpsl
dec
and
add
shr
pop
inc
add
notl
and
xrelease
pop
jg
int
inc
lds
dec
and
lods
lret
pop
cmpsb
jne
or
inc
lret
lea
stos
pop
pusha
call
add
add
or
xor
in
mov
or
or
adc
lret
dec
mov
push
xor
pushf
shlb
out
add
add
pop
xchg
jne
sub
adc
add
inc
add
jnp
roll
addl
push
mov
add
push
stc
or
add
mov
jmp
or
lret
lret
aas
add
mov
loopne
push
sti
and
jo
add
pop
pop
mov
addb
bound
sti
jnp
pop
push
jne
add
aaa
outsb
das
jmp
pop
mov
xlat
push
sti
add
ja
and
mov
xchg
pop
fcmovnb
stc
xlat
call
add
and
jg
not
cs
mov
dec
adc
fdivrs
pop
sti
and
adc
lahf
push
push
add
and
movsb
xchg
pop
clc
insb
jle
inc
cwtl
adc
jmp
into
add
faddl
ja
sti
add
imul
xor
sbbb
jae
gs
pop
call
add
add
lock
jmp
push
aas
add
insl
xor
pop
adc
aas
sub
add
xor
xor
stc
add
or
mov
jle
jge
pop
clc
sahf
add
sbb
add
adc
cld
push
mov
out
inc
mov
sti
add
push
xchg
divl
sti
hlt
add
add
repnz
jmp
ljmp
in
add
jmp
xor
imul
xor
pmuludq
or
fidivs
add
cmc
jnp
xchg
in
add
xor
shll
dec
hlt
pusha
ss
sub
decl
divl
inc
cmp
or
fists
xor
mov
inc
cmp
add
add
mov
hlt
nop
data16
sbb
jne
inc
sbb
sbb
dec
adc
sub
jg
push
decl
dec
lds
testl
mov
or
sub
cmp
fdivl
incb
rorl
es
jg
xlat
std
mov
test
push
pop
mov
add
scas
jae
ret
add
adc
test
push
xor
inc
add
andl
imul
incl
mulb
dec
popl
add
ret
aas
dec
stos
lock
not
decl
push
xlat
add
jmp
dec
inc
test
iret
xlat
clc
adc
decl
add
cmp
fldl2e
pop
sub
push
add
jecxz
cmc
aas
testb
xchg
jmp
jg
ret
inc
ret
add
jle
add
push
push
lock
outsl
jge
add
add
ret
loop
mov
lret
flds
ja
daa
testl
xor
add
lock
lock
outsl
jge
add
add
testb
ret
sub
call
out
mov
pusha
xor
jns
leave
hlt
sbb
adc
mov
das
ficoms
test
orl
cli
xor
rorb
mov
jp
sti
std
notb
aam
adc
cli
inc
adc
cmp
xchg
notb
aam
add
or
add
xchg
outsl
nop
stos
sbbb
add
addr16
add
cmc
mov
add
pop
add
cmc
test
pop
repz
sti
mov
into
add
test
scas
lret
adc
add
add
sbb
je
out
leave
iret
mov
test
add
pop
add
add
add
cmp
je
pop
add
pop
or
mov
add
dec
enter
inc
add
dec
fistpl
jbe
leave
push
pop
xor
add
xchg
cli
popl
add
mov
je
lahf
inc
and
pop
hlt
push
xchg
int3
icebp
cmc
lret
add
sbb
div
es
pop
daa
cmp
incb
cmp
mul
cmp
add
test
add
sbb
addl
add
mov
incb
popf
je
xchg
push
test
decl
fdivrl
push
test
jmp
push
rcrb
mov
ljmp
jne
mulb
jne
mulb
mov
mov
jns
je
addr16
hlt
xor
jle
stos
jnp
cli
xor
jle
add
cs
jg
adc
imul
push
add
icebp
sar
adc
fiaddl
xchg
add
add
or
inc
notb
lock
add
sar
orl
sub
xor
add
inc
testb
pop
repnz
mov
aas
adc
repnz
popa
leave
add
add
imulb
lods
js
in
js
in
fildl
pushf
jmp
and
jns
or
std
incl
mov
je
jbe
lock
add
frstor
add
test
push
bound
add
lds
inc
add
in
es
mov
jb
lock
mov
incb
mov
cmc
push
xchg
lods
pop
bound
adc
or
add
pop
pushf
jmp
cmp
call
xor
adc
pop
pop
add
and
shlb
inc
out
out
movsl
dec
mov
dec
mov
popl
iret
incl
out
push
mov
lret
add
ja
rolb
cmp
je
les
out
add
push
out
or
push
ret
divb
add
dec
and
test
and
insl
xlat
data16
lds
in
int3
mov
jp
sub
dec
push
mulb
std
jmp
test
pushl
mov
push
mov
dec
adc
add
add
je
jne
out
rcrl
adc
in
lea
addl
mov
call
adc
jp
cmp
sti
jmp
mov
add
jecxz
mov
pusha
and
ret
inc
cmp
add
cmpsl
mov
add
push
sbb
out
mov
jmp
jle,pn
ret
add
add
pop
or
mov
in
cld
cmp
mov
jmp
add
push
mov
out
mov
jmp
adc
jmp
call
inc
add
add
and
lds
jmp
adc
jmp
out
add
loope
xchg
pop
cmp
adc
mov
test
add
mov
cmc
add
xor
or
leave
in
push
shl
xchg
cmc
inc
add
lahf
mov
test
inc
add
and
inc
add
cmc
sub
sbb
mov
add
mov
or
push
push
xchg
loope
sti
hlt
cmc
or
jmp
add
add
cmp
rcl
mov
and
xor
scas
aas
add
inc
and
mov
mov
insb
adc
pop
add
or
mov
cli
dec
add
adc
lock
out
dec
add
adc
andb
shlb
pop
lea
add
push
add
add
mov
add
add
out
and
lahf
xchg
mov
stos
jecxz
mov
adc
or
out
pop
push
loopne
lock
out
ud0
aam
sti
lret
mov
aas
add
jmp
add
scas
cld
mov
add
sbb
imulb
hlt
mov
or
pop
adc
or
add
imul
inc
xor
or
or
mov
sbb
add
mov
imul
adc
inc
fadds
or
xchg
adc
and
jne
jle
lods
ljmp
add
and
shlb
in
jno
in
pop
test
insl
lret
clc
push
mov
sub
add
add
mov
lea
or
loop
jl
movsb
mov
or
or
pusha
test
jmp
or
mov
add
dec
pop
cmp
sub
lods
pop
pop
jmp
sbb
jmp
mov
popf
sub
mov
or
rol
mov
adc
aad
add
add
mov
or
mov
test
add
add
pop
pop
sub
mov
pop
mov
in
stos
jge
in
add
out
adc
add
sub
loop
popf
imulb
into
adc
icebp
dec
aad
cmp
sti
je
dec
sti
pop
repnz
movsl
incb
aaa
xor
jmp
stc
mov
sub
cld
push
jmp
xlat
sbb
adc
add
add
jmp
orl
add
jmp
call
je
divl
jne
adc
jne
or
jmp
incl
adc
dec
push
pop
ret
push
mov
inc
add
mov
sbbl
test
clc
pop
cmp
repnz
por
pushl
orl
jne
dec
cld
mov
add
xor
divl
je
or
add
pop
or
push
and
out
add
mulb
xor
mov
sbb
negb
repnz
out
jne
sbb
adc
adc
lret
mov
mov
adc
insb
rsqrtps
je
sti
add
adc
mov
push
xchg
adc
lock
add
incw
test
xor
enter
test
xorl
mov
sti
dec
mov
xor
into
gs
sti
sub
mov
push
or
adc
push
cmpsl
adc
dec
pop
test
cld
js
mov
sub
das
pop
test
insl
icebp
pop
mov
add
adc
add
add
test
lods
mov
mov
mov
pinsrw
mov
notb
xchg
mov
stos
in
mov
cmp
pop
adc
loopne
xor
add
jg
sub
decb
test
fnstcw
ds
xor
test
mov
dec
sub
xchg
or
mov
add
cld
add
add
mov
xor
iret
jb
jmp
mov
jne
int
es
cmc
jno
in
or
push
pushl
sub
cld
sbb
mov
jne
popf
insl
daa
stos
cmc
jno
in
xor
fcoms
sub
cld
jecxz
ljmp
inc
mov
push
fyl2x
in
movsl
lods
aas
jmp
cli
xor
rorl
shlb
cli
das
out
je
jge
add
mov
call
shlb
push
adc
push
ja
mov
jnp
fsub
out
xlat
push
je
dec
decl
adc
dec
dec
leave
ret
push
mov
scas
jmp
mov
push
movsb
filds
je
pop
lcall
iret
test
imul
push
imul
fadds
add
mov
xchg
iret
add
fmuls
pop
add
or
scas
pop
sti
decl
mov
add
repnz
mov
adc
jp
sub
jae
sub
jne
out
je
and
dec
sbb
sti
pop
sbb
je
shr
push
jnp
iret
push
dec
xchg
mov
divb
cmp
andl
cwtl
push
sti
add
add
outsb
or
mov
xchg
sbb
cld
mov
sti
push
jge
pop
je
add
notb
jno
or
pop
in
inc
loope
xchg
scas
ret
shll
xor
sbb
inc
rorl
push
mov
xchg
cmpsl
add
push
pop
xor
stc
pop
incb
add
les
mov
add
cmp
ds
sub
add
mov
test
xor
cltd
mov
testb
les
mov
or
push
xchg
stos
jl
call
repnz
out
dec
das
test
es
cmp
xchg
insb
arpl
add
mov
cmp
push
push
push
cwtl
jmp
adc
cwtl
insl
lods
dec
test
nopl
cmp
sub
add
jbe
or
sbb
add
insb
add
insb
mov
sti
sahf
cmp
aas
out
sub
jmpw
push
xchg
mov
cmp
jmp
int
add
xlat
ja
imul
jns
pop
add
add
out
inc
repz
push
and
mov
add
stos
push
call
add
push
ret
addl
inc
and
mov
mov
jbe
and
cmpl
lock
fldl
call
mov
shlb
jmp
mov
ret
bound
mov
add
scas
mov
jbe
add
imulb
gs
mov
push
mov
lcall
negb
sti
ljmp
pop
mov
in
add
icebp
mov
shrb
dec
add
mov
pop
imul
mov
jg
negb
push
and
jle
pushl
and
incl
add
negl
mov
jnp
pop
push
jae
fistpl
les
push
add
add
add
dec
in
jg
sti
fs
jmp
push
pop
add
fnsave
adc
ja
call
loope
loope
aas
or
stc
jle
cltd
add
pushf
aam
jmp
adc
stc
insb
inc
js
jmp
sub
in
jns
add
cmp
inc
sbbl
mov
sub
add
fwait
xor
inc
mov
jne
fdivp
add
jmp
cmc
movsl
jo
jbe
and
inc
xor
ret
mov
inc
jl
lds
add
push
or
mov
cmp
dec
cmp
add
pop
xorl
xor
bound
in
shlb
in
sahf
mov
add
daa
xchg
jne
fadds
test
or
mov
cwtl
lods
add
add
add
push
add
icebp
and
or
and
mov
paddw
sub
decl
pop
icebp
add
filds
add
add
test
std
jae
pop
xor
iret
add
add
jg
add
mov
add
xor
lahf
add
add
add
add
jb
and
daa
test
std
jmp
inc
and
dec
lea
call
cmp
push
jecxz
add
jge
fimull
add
sbb
jmp
icebp
sbb
test
decl
jb
add
divb
push
push
imul
push
jge
mov
cli
xor
out
mov
cmp
fiaddl
cmp
jmp
cltd
mov
cli
sub
and
cltd
jmp
and
fdivrl
mov
ss
cmpl
mov
add
add
flds
pop
testb
jl
fsubrl
testb
xchg
jl
add
repz
sbb
jne
jmp
jnp
add
jp
fsubl
add
loopne
cmpsb
outsb
mov
scas
jge
jns
pop
cmp
jmp
outsb
cmp
jns
push
lods
push
loope
in
sub
xchg
testb
pushf
fmuls
add
int
xorl
push
inc
jnp
int
dec
jg
add
jnp
test
cltd
stos
out
faddl
lea
cltd
add
lods
xor
popf
lea
daa
and
jae
cmp
shrb
call
mov
cmc
and
mov
jne
add
rclb
add
add
add
dec
xchg
mov
pushl
pop
sub
cmc
je
add
inc
stos
je
ljmp
jb
add
pop
aas
add
xor
ret
or
in
test
push
cmpsl
dec
jmp
xchg
or
sbbb
cwtl
in
and
or
pop
add
rol
mov
cld
mov
in
mov
add
add
stos
test
push
ja
mov
dec
lea
outsl
daa
icebp
call
push
mov
pop
jmp
dec
jl
std
mov
sbb
decl
notl
push
cmp
adcl
add
incl
out
lods
lea
stos
sti
pop
xchg
ss
sub
add
cltd
js
insl
cltd
jp
add
add
lods
sti
les
push
cli
adc
je
push
lods
add
xor
imul
subb
mov
negb
xor
jae
int3
std
fldenv
pushl
aaa
stos
js
imul
mov
push
dec
test
in
repnz
sbb
push
lods
push
and
cmpsl
lcall
add
imul
fstpt
pop
outsb
lods
dec
push
pop
mov
cmp
sub
subb
out
mov
js
dec
fs
pop
movsl
sub
jg
add
add
stc
in
aaa
stc
jae
lret
shll
jmp
xor
jne
jle
jae
pop
stos
mov
add
mov
xor
cmpl
cmpsb
sti
sbb
or
cli
jnp
out
add
mov
and
jmp
shll
aam
repz
jmp
out
jle
add
sti
mov
call
or
inc
push
xor
sub
fadds
add
pop
cmp
push
fldl
pusha
or
ret
test
cmc
bound
inc
sar
adc
faddl
push
not
mov
inc
stos
ret
shl
jae
xlat
out
out
rorl
ljmp
divl
notb
fidivrl
jns
cmp
aas
or
pop
test
je
inc
push
adc
test
add
fcomip
add
or
push
idivl
enter
inc
adc
pop
sbb
js
in
das
push
add
insb
pop
or
push
push
add
jmp
incl
imul
aaa
push
test
ret
es
test
push
imull
add
jne
adc
add
add
sahf
pusha
stos
ljmp
pop
cli
xor
pushf
pop
ss
sti
xor
jne
and
test
mov
decl
push
mov
add
mov
or
icebp
mov
leave
xchg
jnp
dec
sbb
ja
add
testb
test
test
loopne
lahf
insl
ret
or
dec
adc
adc
sbb
add
scas
add
add
nop
mov
add
jg
adc
push
cli
lea
sub
icebp
push
push
lret
test
pop
sub
pop
push
sub
add
test
xor
mov
les
insl
ret
push
outsb
ds
jmp
or
dec
or
lock
cmc
add
add
add
mov
jmp
cmp
push
add
dec
xor
sub
push
adc
and
push
sub
inc
and
cli
roll
into
inc
add
inc
xor
loope
add
lods
ret
testb
jo
cmpl
push
cltd
jg
push
dec
das
adc
and
stos
test
add
add
and
in
push
pusha
push
in
pusha
cs
add
inc
and
outsl
sbb
adc
xor
sbb
inc
sbb
and
sbb
sbb
and
jnp
add
icebp
push
xchg
add
loope
out
call
in
test
add
dec
call
and
sti
mov
mov
popa
test
rorb
add
add
jp
pop
xor
jmp
mov
push
test
inc
xchg
mov
filds
add
fsubl
sub
fisttps
outsb
fistpl
es
mov
test
cmc
fwait
jp,pt
decl
xchg
inc
shlb
call
sti
lds
mov
test
add
fists
insl
cli
incl
dec
ljmp
jmp
sti
xor
stos
inc
rolb
adc
mov
pop
jbe
fidivrl
incl
cmp
pushl
xor
jle
lds
jae
int
inc
daa
call
cmp
add
movsb
dec
in
fwait
jo
jmp
cmpsl
jmp
add
addl
add
cmc
pop
inc
rorl
hlt
sub
adc
adc
lods
sbb
cmpsl
xor
mov
add
in
addl
mov
loop
xchg
les
fwait
and
jns
or
add
inc
adcb
mov
push
or
add
inc
jmp
add
add
jne
adc
call
add
cmc
mov
test
dec
fwait
xchg
pop
xchg
cs
mov
push
jb
cs
test
rcll
add
ds
repnz
loop
adc
pop
sti
mov
jo
add
add
into
or
add
xor
sbb
sarb
test
imul
jmp
jp
add
mov
call
cmp
add
filds
inc
iret
mov
hlt
add
shlb
nop
mov
shll
addb
push
mov
inc
testb
ret
mov
pop
adc
mov
sub
imul
pusha
add
add
cmp
testb
popa
ljmp
jne
inc
add
adc
mulb
dec
cld
jne
add
aad
dec
cld
cltd
jno
mov
rcrb
push
fsts
nop
inc
jp
adc
dec
test
dec
loopne
lahf
mov
out
scas
sbb
repz
in
add
add
dec
sbb
inc
add
imulb
pop
adc
mov
hlt
aas
neg
out
pop
mov
xchg
add
and
loopne
mov
mov
add
jmp
pop
dec
mov
jmp
mov
xor
xor
addl
add
mov
inc
test
testb
adc
repnz
imulb
jns
roll
push
call
mov
and
mov
xor
xchg
or
fs
ret
popa
std
test
jecxz
sti
mov
icebp
pop
gs
cmc
jg
dec
jp
push
inc
les
xchg
mov
cmp
popl
add
jo
je
insb
pop
adc
mov
std
pop
jle
icebp
jp
cld
jmp
xchg
inc
push
out
out
test
push
add
aaa
fiaddl
mov
movsl
adc
repnz
dec
or
cld
mov
cltd
test
js
xor
push
iret
dec
decl
popf
test
and
add
or
dec
mov
divb
addb
ja
xor
jne
push
jmp
mov
mov
dec
decl
jbe
cmp
inc
add
lret
add
lret
int3
addb
dec
call
adc
test
ret
jnp,pt
cmp
addl
xor
push
cwtl
clc
adc
shlb
push
add
add
jbe
sub
and
je
sub
cld
notb
add
xchg
adc
insl
vphaddwd
xor
jge
xchg
mov
out
sti
jmp
lret
pop
adc
dec
out
cli
imul
xchg
and
mov
or
mov
add
mov
xor
add
add
pop
add
cli
or
jge
xor
mov
inc
ds
mov
call
add
and
inc
idivb
adc
test
add
add
pop
outsb
mov
movsb
add
movsl
push
cmp
testb
sub
sub
mull
test
imul
dec
psadbw
pop
inc
add
add
mov
add
add
add
add
jb
shll
dec
nop
popf
lea
add
data16
add
test
add
xchg
add
lar
lahf
jb
mov
pop
add
xchg
sti
imul
loop
mov
shl
jnp
push
mov
dec
fadd
add
add
jnp
sub
out
pop
xchg
sti
out
roll
and
add
sub
sub
add
xchg
xor
mov
add
ljmp
xlat
xor
addl
sbb
test
jns
add
cmpl
decl
dec
test
jl
mov
incl
add
decl
dec
push
mov
into
mov
dec
ja
sbb
divb
bound
add
std
dec
lea
add
iret
int
sti
out
stc
fbstp
or
std
decl
int
xchg
gs
add
push
xlat
mov
idivb
sti
add
add
cmpsl
sub
jne
popa
xchg
or
adc
fsubrl
insb
cli
cmp
xchg
pop
jg
mov
cmp
jg
lods
add
cmpsl
mov
imul
pop
mov
lea
data16
into
loope
add
adc
jge
and
ss
dec
stos
mov
lcall
add
add
or
cltd
add
add
jns
testb
xchg
add
xor
xchg
call
cmp
add
add
jle
or
imul
testb
xor
test
testb
negb
jmp
inc
testb
inc
sbb
jmp
cltd
notb
faddl
add
mov
es
jns
dec
add
add
rolb
jmp
test
add
add
sti
jmp
push
cld
mov
add
jmp
cmc
test
inc
inc
xor
outsl
lea
lea
add
jmp
repnz
arpl
inc
clc
ljmp
add
add
add
xlat
in
fidivrs
push
add
jmp
cmc
add
jo
ret
add
ja
add
cmc
xor
ss
or
jb
add
cmc
jnp
add
add
add
inc
dec
add
fisttps
or
push
push
fdivr
incb
add
inc
mov
ja
dec
decb
cmp
add
mov
out
mov
aam
loop
dec
add
mov
leave
mov
in
pop
add
clc
test
add
aas
jns
clc
cmp
call
dec
call
adcb
dec
or
clc
div
xchg
call
mov
adc
in
adc
push
and
add
out
decl
sbb
and
xchg
mov
out
inc
adc
xchg
xchg
decl
pop
xchg
sti
leave
adc
xchg
adc
mov
xchg
jmp
mov
inc
rcl
mov
pop
mov
push
loope
fistpl
inc
addr16
adc
test
adc
add
add
in
add
or
cmc
jg
out
sub
jo
sbb
icebp
push
shl
pop
jle
add
add
mov
daa
in
jmp
mov
call
or
std
call
mov
jge
push
testl
jmp
shlb
adc
das
pop
out
shl
test
add
add
mov
clc
fisttpl
mov
pusha
mov
fldl
fiaddl
popf
test
add
jmp
mov
in
jo
mov
jmp
and
cld
lcall
mov
in
cmp
jle
fwait
hlt
add
rorl
ss
inc
mov
stos
jmp
cmc
push
cmp
and
push
cmp
hlt
add
add
aas
jmp
js
das
mov
xchg
mov
cld
js
cltd
hlt
es
sub
mov
sub
mov
push
fs
aaa
js
jge
fcmovnb
aam
jbe
addl
int3
pop
je
jns
push
jne
and
add
and
call
test
stc
or
aam
pop
jb
mov
pop
aam
and
add
add
xchg
mov
scas
add
addl
cwtl
push
push
les
add
in
movb
or
stc
xor
addb
outsl
jne
mov
xor
es
fs
push
dec
movsb
addb
xor
dec
mov
aas
add
pop
add
cwtl
lcall
imul
add
add
mov
or
jp
pop
mov
call
lods
and
negb
xor
xchg
out
dec
sbb
xchg
ljmp
push
xchg
decb
xchg
xchg
sbb
xchg
cs
xor
add
sbb
xchg
std
pop
loope
xor
fs
arpl
test
add
add
mov
loope
test
and
xchg
data16
test
ficomps
and
jnp
lcall
lock
add
sbb
jbe
add
ror
insl
jl
pop
arpl
dec
mov
test
fwait
mov
jmp
mov
negb
outsb
lret
add
add
add
mov
and
cld
xorl
leave
repz
test
cmp
push
ds
sbb
hlt
leave
test
jmp
cmc
mov
sbbl
int
add
add
cmc
dec
sbb
pop
xor
sti
sbb
test
jmp
cli
mov
inc
scas
jne
jmp
mov
lahf
aad
ljmp
add
add
add
aam
test
jmp
repnz
add
cmp
mov
jne
mov
add
cmp
dec
cmp
cmp
cmp
mov
jmp
lods
mov
ret
dec
mov
jl
add
jo
test
in
incb
lahf
add
add
add
cld
inc
xor
std
sbb
out
add
lcall
dec
aam
rclb
sub
in
test
loop
arpl
ds
testb
sub
sar
cmpsl
jl
add
or
inc
add
sbb
push
mov
sti
icebp
jmp
outsl
mov
cltd
inc
add
sbb
lcall
dec
cwtl
nop
aas
add
add
jno
call
push
jmp
aas
notb
je
outsb
mov
xchg
movsb
decl
ss
das
lahf
jle
add
mov
imulb
ds
cltd
daa
call
xchg
mov
test
out
testb
sbb
andl
nop
add
xchg
or
roll
pop
sbb
test
pop
incl
add
jmp
sbb
add
add
test
aaa
out
jmp
mov
addl
mov
lods
nop
roll
loop
mov
daa
pop
imulb
orl
incb
ss
xchg
add
adcl
add
mov
add
jnp
add
cmc
rcl
fiaddl
add
and
inc
jmp
imul
fs
std
outsb
jae
das
sub
xor
xchg
loop
inc
jmp
out
ljmp
or
lea
sti
or
call
fs
aaa
std
stos
cmc
jne
add
sti
cltd
sub
sti
jle
jns
jle
sub
lcall
add
fiadds
adc
push
cmp
cld
inc
pop
push
cld
inc
dec
jae
sahf
sub
fdivr
fisttps
ud0
push
leave
pop
sti
call
sub
cmp
dec
mov
rorl
repz
pop
bound
int3
mov
cmp
imul
add
outsb
sti
inc
lahf
fcompl
mov
add
xchg
pop
sti
inc
lahf
jne
je
add
cmp
mov
push
jbe
call
popa
pop
inc
jl
je
aas
testb
ret
aas
dec
ret
pop
jns
dec
pop
xchg
push
outsb
mov
and
incl
notb
sbb
dec
scas
push
inc
dec
xor
test
adc
cwtl
lret
xchg
add
add
call
clts
jne
out
jl
cmpsl
mov
inc
movb
mov
iret
mov
xchg
addr16
xchg
loop
incl
add
and
mov
cltd
testl
mov
inc
scas
or
add
jnp
mov
jns
inc
idivb
mov
add
or
incl
add
add
insb
mov
mov
push
mov
add
mov
and
inc
testb
loop
mov
addl
xor
add
pop
outsb
inc
mov
cli
aam
cmovo
repnz
jp
je
mov
rcl
sub
jo
add
add
lea
sti
cmpsb
xchg
lcall
jns
sti
xorl
call
sbb
pusha
adc
cmc
stos
cmc
jnp
push
sub
push
add
adc
add
push
out
lret
mov
jg
mov
push
negl
roll
pop
inc
push
mov
add
jnp
in
ficoms
dec
push
and
mov
filds
aaa
and
iretw
add
add
jmp
faddl
call
xchg
inc
jne
cmp
add
push
out
add
sysenter
notl
jl
add
fisttps
jne
mov
mov
inc
addr16
mov
jecxz
adc
cli
add
add
push
lret
imulb
test
mov
clc
jge
mov
ss
cli
dec
shl
out
addr16
sub
shufps
sbb
inc
pop
jmp
mov
jbe
fidivl
shrb
jle
sbb
adc
add
pop
inc
push
mov
jle
push
jmp
push
es
rol
fwait
or
addl
cmp
add
notl
test
divl
or
clc
shr
sbb
lods
add
jns
xor
adc
mov
add
jl
add
lret
gs
mov
add
sub
call
imulb
add
add
jns
and
add
add
xchg
jl
inc
divb
rcrl
test
jbe
into
mov
mov
mov
or
jmp
jmp
and
sti
add
mov
ret
mov
xchg
sub
push
bound
mov
int
sub
arpl
add
add
mov
insl
test
call
in
add
mov
add
jp
gs
cmp
cld
or
in
call
leave
jnp
mov
pop
aas
ret
rorb
lea
jl
push
pop
sub
mov
notb
and
test
mov
adc
add
add
int3
lcall
push
adc
sub
cmp
pop
in
pop
ret
push
mov
and
ficoms
dec
lea
popa
add
addl
adc
cmp
cmp
inc
or
sbb
inc
seta
sub
call
jp
mov
in
dec
xchg
push
or
movsl
addr16
add
add
mov
test
imul
sub
mov
aas
neg
mov
mov
aas
add
or
neg
or
movzbl
shlb
inc
out
adc
mov
les
insb
and
loope
test
cmpsl
insl
lds
add
mulb
gs
push
rorl
add
or
pop
out
fdivrl
ret
add
call
dec
cmp
movsb
jl
add
popa
aad
xor
test
xchg
mov
add
and
fs
iret
cwtl
fisubrl
inc
jmp
fcmove
pop
int
pop
push
mov
movb
push
add
add
iret
sbb
sub
inc
mov
repz
mov
xchg
cmp
and
dec
dec
out
add
jnp
push
sti
gs
jnp
adc
js
jmp
cmc
jnp
inc
pushf
pusha
dec
ss
test
scas
ja
movsb
je
pop
es
add
mov
je
nop
jl
bound
add
jo,pt
and
jnp
lods
repz
push
sub
jae
loop
jae
stos
and
in
in
add
aas
jno
arpl
imul
add
js
test
iret
cld
test
repnz
lea
mov
add
add
inc
inc
xor
bnd
inc
fisttps
fildl
add
pop
sub
lea
insl
stc
incl
add
fcomps
jmp
jge
or
xorb
adcl
clc
adcl
push
lret
pop
and
cld
add
pop
xchg
push
filds
lea
mov
call
lea
cmp
lcall
mov
cli
add
dec
push
imul
mov
pushl
inc
call
add
add
popf
fisttpl
addr16
jle
cmp
sbb
xor
inc
aad
mov
xchg
icebp
stc
outsl
jg
out
jecxz
cmovo
in
jne
in
addr16
xchg
mov
cwtl
mov
dec
sub
mulb
pushl
jg
inc
clc
push
std
movsl
repnz
sub
insb
xor
add
add
imul
add
cld
mov
mov
or
jb
fnstcw
jne
jmp
and
test
jne
or
pushf
rcrl
add
flds
pop
jne
jg
in
leave
cltd
jne
repz
cwtl
jmp
pop
dec
dec
jle
andl
add
add
rorl
xchg
inc
testb
imul
ret
jle
andl
out
add
aas
or
cli
cld
sbb
inc
jmp
xor
jmp
jne
jmp
cmp
jae
add
stc
mov
je
stos
mov
bound
in
fxtract
add
lcall
mov
insb
and
push
sbb
add
or
insb
mov
cli
mov
add
je
jbe
fisubs
insl
cld
into
ret
push
testb
mov
add
jmp
enter
push
mov
add
push
or
adc
call
cmc
addr16
cwtl
aas
sti
mov
cmc
jmp
dec
mov
daa
xor
js
and
imulb
das
mov
cmp
clc
fwait
push
xor
cmp
repz
out
rcrb
popf
call
gs
dec
addb
neg
inc
call
jb
repz
jge
addr16
inc
stos
jl
es
divl
std
xor
xchg
cmc
das
fisttpll
mov
add
push
xchg
mov
shlb
jge
fiadds
pop
addr16
jb
repz
data16
mov
addr16
jnp
addr16
in
rorb
jle
dec
subl
les
xchg
mov
enter
cli
rolb
push
add
imul
pop
add
add
cmp
sarl
stos
outsl
sbb
test
add
cmp
jmp
icebp
test
or
add
jg
add
add
in
or
add
push
roll
divb
hlt
inc
test
push
outsb
je
aad
push
movsb
sbb
sbbl
add
cmpsb
add
add
push
in
jmp
outsb
mov
repz
dec
jne
divb
sub
add
jmp
out
movsb
cmc
sub
rorl
jmp
mov
in
je
jmp
out
push
mov
mov
cmc
or
jns
in
or
jb
push
lods
push
mov
jecxz
sbb
icebp
pop
dec
mov
add
add
add
sub
roll
jp
pop
bound
mov
sti
out
in
jmp
jmp
mov
je
fdivrl
sub
aaa
pop
push
pusha
and
pop
fdivrl
lods
bound
mov
mov
movsl
push
jb
dec
dec
push
leave
popf
add
push
flds
cmp
add
xchg
call
or
out
mov
jmp
mov
mov
add
xchg
or
out
idivb
jp
lock
out
js
incl
pop
pop
jg
jmp
cltd
jmp
jne
js
adc
dec
xchg
movzbl
cli
stos
gs
sahf
or
add
add
sbb
jnp
jns
jae,pn
cli
ss
cli
icebp
insl
pop
sti
add
adc
push
fldl
push
lret
fistpl
dec
pop
out
xlat
ja
jp
jmp
sbb
addr16
mov
sahf
js
inc
add
insb
mov
sub
outsb
or
inc
jge
rolb
cli
or
lahf
mov
pop
or
add
ret
adc
int3
std
jg
add
stos
clc
insl
enter
dec
sbb
pop
mov
outsb
inc
dec
add
pushw
xor
leave
std
cmp
add
shlb
mov
outsb
sbb
pop
ja
ret
jo
shll
aas
ja
test
icebp
rcr
out
cmp
call
je
xchg
push
adc
add
pop
data16
push
jbe
jne
jmp
addb
fidivs
cmp
gs
xchg
jl
jg
int
in
add
sub
cli
adc
insb
aas
jmp
jecxz
and
cmc
pop
cmpsl
int3
mov
test
or
sbb
push
adc
call
bound
jl
add
inc
add
add
add
pop
adc
sub
add
test
out
add
add
push
out
xchg
in
mov
lcall
add
ja
adc
push
testb
pop
and
faddl
adc
movsb
hlt
test
adc
pop
add
add
adc
test
sbb
iret
add
mov
add
pushl
not
pushf
fldl
out
adc
add
mulb
xor
std
inc
add
pop
iret
out
outsb
jp
jmp
jnp
pop
add
pop
jmp
leave
push
jne
fcom
mov
or
push
cmc
sbb
add
and
popa
jnp
and
dec
mov
cmp
mov
adc
add
add
sbb
into
out
mov
out
pusha
decl
inc
xchg
cli
icebp
xchg
cli
out
ljmp
fstps
ljmpw
add
mov
in
int
sub
jl
pop
push
sarl
push
jle
test
je
idivl
ret
imul
add
call
lcall
repnz
aaa
vmovups
imul
add
cli
imul
add
fstpl
loop
cmp
shll
stc
mov
cli
insb
testb
xorb
push
testb
rcrl
test
gs
std
cmp
imul
imul
add
add
negl
data16
add
jmp
add
imul
in
or
add
jae
cmp
pop
mov
les
pop
inc
jl
add
jbe
and
lock
shrl
test
call
gs
test
cld
hlt
xchg
stc
gs
jmp
pop
cmp
inc
iret
int3
insl
lret
add
mov
int3
addr16
add
inc
add
add
jns
add
sbb
in
arpl
ds
push
or
add
rorl
js
cmpps
getsec
cmp
psrlq
add
inc
ss
or
call
rcrl
pusha
push
cld
inc
add
fdivrs
add
mov
xorb
inc
xor
mov
or
push
inc
jne
pop
jno
ret
fcompl
mov
ds
push
dec
pop
jo
jle
mov
pop
es
fisubl
add
push
jno
rolb
jno
sub
pop
xchg
cmp
psubsb
jl
add
jb
xor
push
adc
inc
es
mov
mov
xor
ret
fwait
idiv
ret
push
movsl
push
cs
add
testb
fcoms
push
addl
call
xor
repz
mov
add
jae
aad
inc
xor
sub
gs
xchg
sub
testb
add
cmc
push
mov
in
pop
out
in
lret
test
je
mov
add
and
inc
in
in
sub
testl
sub
mov
into
cld
nop
cmp
fldcw
ss
in
ss
or
sti
mov
pop
cs
pop
pop
xchg
popa
push
jb
add
ja
jo
stos
cmc
cld
test
add
scas
sbb
pop
pusha
imulb
or
fisttps
roll
rolb
xor
mov
mov
imul
and
repnz
lds
imul
push
push
leave
imul
test
mov
push
adc
and
dec
push
addb
add
add
subb
sbb
dec
mov
jns
jne
dec
add
iret
add
mov
dec
mov
enter
add
lret
sarb
decl
icebp
ret
mov
adcl
je
jg
or
push
test
xor
pop
mov
in
shr
sarb
mulb
adc
add
inc
cmp
negb
incl
add
movsl
hlt
xor
nop
lock
mov
and
popa
add
and
subl
aam
je
add
add
pop
aam
rorl
ss
add
push
add
mov
incl
scas
mov
push
scas
pop
cld
ljmp
out
pop
push
daa
xlat
loop
test
mull
nop
testb
pop
jg
addr16
popa
insb
lret
sldt
add
pusha
aad
repnz
sti
cmpsb
add
idiv
jne
insb
push
pop
jmp
add
cld
xor
iret
mov
inc
jo
ja
jo
aas
icebp
add
test
jb
hlt
rcr
in
fadds
std
call
xor
add
jae
loop
and
test
jns
lcall
push
cwtl
ror
inc
mov
ret
fs
shlb
add
add
outsl
dec
bound
fsubrl
repnz
jmp
popf
jmp
fisubs
push
sti
pop
or
jne
popf
or
bound
mov
sti
cmpsb
pop
loope
sub
jp
xor
mov
in
push
cmc
jle
add
add
dec
pop
inc
sub
fnstenv
shrl
inc
shll
and
sti
mov
lds
fs
inc
bound
cld
mov
fstpl
push
cld
sub
call
add
aas
out
cmp
daa
lea
jo
push
sbb
incl
int
dec
jo
mov
or
dec
push
in
mov
fmuls
inc
ret
ret
movsl
or
adc
filds
adc
push
pop
xchg
or
in
pop
rclb
dec
inc
add
call
in
adc
scas
inc
sti
incb
loopne
mul
or
adc
scas
inc
sti
mov
dec
mov
push
xor
inc
fnstsw
or
loopne
packssdw
ds
repnz
add
add
add
jmp
sbb
sti
add
aas
or
test
push
jge
pop
psadbw
icebp
mov
addr16
sbb
add
jge
mov
out
cmpsb
lahf
subb
test
cmp
push
jb
mov
push
imul
mov
in
negb
testl
inc
add
add
add
icebp
test
out
testb
mov
fidivl
sbb
in
ss
loop
scas
clc
gs
dec
sub
test
and
shll
push
inc
mov
cmp
push
les
std
sarb
pop
pusha
mov
inc
pop
hlt
fcomi
shr
mov
fsubl
cmp
push
lcall
fucom
push
mov
xor
js
pop
push
jg
aad
fdivrp
mov
mov
call
pop
test
popa
clc
gs
loopne
sti
mov
cmp
push
roll
cmc
rol
adc
ja
idivb
bnd
lock
sbb
ret
pop
adc
imul
pop
pop
aas
add
add
sahf
push
ds
push
call
negb
add
jmp
sbb
mov
or
arpl
sub
add
and
fnstcw
std
or
add
push
out
and
xor
xlat
int3
rorb
sbb
popa
adc
aaa
ud0
add
inc
xor
pop
dec
not
pushf
sbb
or
fcmovu
jmp
mov
dec
xor
cmp
cli
sub
sti
push
jo
mov
sbb
stos
push
mov
add
add
jmp
gs
cld
xor
push
mov
adc
outsb
popf
outsl
mov
add
dec
loop
cli
stc
sbb
cli
insl
insl
sar
mov
into
dec
lds
xor
aad
out
lds
pop
mov
xor
test
mov
stc
mov
test
push
mov
andl
inc
inc
sti
inc
rolb
scas
cmpsb
lret
xchg
out
adc
xchg
dec
push
cmp
cld
xor
jno
aas
testb
or
ret
cltd
adc
fwait
xchg
mov
add
inc
in
inc
mov
lds
add
pop
xchg
pop
cmpsb
add
call
adc
mov
pusha
and
or
xlat
or
scas
adc
mov
adc
fs
sbb
insb
inc
pop
sbb
jle
nop
add
ret
add
add
add
mov
jle
hlt
aam
addr16
push
sbb
pop
jno
ret
lret
cli
aam
push
adc
imul
push
pop
jae
mov
sub
push
bound
scas
aaa
fsubrl
aas
jmp
xchg
sbb
aas
xchg
repz
hlt
lea
or
jmp
add
add
fwait
mov
pop
pop
aas
jmp
xor
inc
jmp
xor
xor
pop
dec
outsl
sub
cmp
dec
mov
inc
movhlps
decl
std
popa
and
and
imul
push
cmp
xor
in
inc
dec
imul
push
sahf
rclb
lahf
std
popa
sbb
aas
xor
ret
jo
add
pop
cmp
or
cli
mov
mov
add
incl
push
or
mov
xor
xor
jp
cwtl
lahf
fadds
adc
loop
cs
inc
imulb
clc
leave
out
les
mov
and
push
push
ljmp
sub
ds
lea
xchg
out
imull
out
incb
add
pop
xchg
clc
stos
stos
pushl
gs
sti
jecxz
pop
adc
cltd
imul
sub
add
jp
push
lds
dec
add
xor
cs
stos
or
stos
shrb
jne
hlt
jmp
mov
rolb
mov
pop
xlat
icebp
scas
arpl
jl
add
add
std
push
pop
cmp
add
pop
cld
out
negb
cmp
adc
pushf
repz
cmp
add
mov
xchg
add
add
pushf
or
ljmp
inc
xchg
sub
jmp
movsl
cld
xor
icebp
std
scas
jmp
add
cmp
mov
leave
add
push
jl
add
test
leave
fcom
ljmp
int
bound
add
jle
in
pop
out
mov
inc
mul
imul
mov
inc
outsl
sbb
pop
mov
pop
test
cli
cld
cltd
lock
jmp
mov
add
les
push
std
xchg
cltd
scas
popa
jo
jge
loope
mov
add
xchg
jmp
fbstp
mov
cld
jns
inc
jmp
add
add
jmp
inc
pop
das
cmp
add
inc
lea
xor
add
imulb
and
rcl
dec
adc
xor
sbb
outsb
inc
push
stc
xchg
je
addr16
pop
stc
stc
divl
mov
pushf
scas
mov
mov
pop
dec
mov
and
inc
sti
test
cmp
sub
jmp
mov
aas
ret
add
add
jcxz
bound
in
push
add
dec
add
popf
cld
sti
decl
mul
filds
jne
pop
add
pop
jg
push
mov
or
push
into
jp
xchg
push
jg
hlt
test
imul
fdivrs
or
std
sub
mov
fnsave
add
or
jg
pop
jg
push
push
insl
ja
jg
push
roll
mov
fisttps
jne
arpl
insl
jne
aaa
dec
xlat
adc
popa
jbe
pop
cwtl
fdivl
je
add
or
out
in
leave
lods
loopne
out
test
aad
xchg
movhps
fsts
sbb
clc
pop
xor
inc
shll
xchg
jg
pusha
lods
nop
call
les
add
sbb
fs
loopne
push
repnz
jmp
notl
xorl
testl
pusha
mov
jns
fdivs
add
call
mov
int
pop
add
add
xor
or
rcr
call
mov
or
cmp
add
add
lods
ffreep
pop
push
sti
scas
jno
je
xchg
jne
and
pop
mov
push
push
sub
dec
fsub
xor
pop
sti
hlt
fldcw
into
cmc
add
mov
cmc
addb
inc
push
jne
ror
pop
ds
orb
cmc
xchg
jbe
sti
es
fists
clc
and
test
jbe
sti
add
lock
jl
add
int
ljmp
sub
in
sti
decl
jae
jp
pop
xorb
mov
add
xor
out
mov
adc
ds
inc
push
mov
or
movzbl
inc
fildl
test
dec
cli
movb
fisttps
adc
and
sub
ljmp
add
mov
pushl
notb
add
testb
push
loopne
jg
arpl
shlb
lock
out
sti
adc
out
testb
out
hlt
push
sti
and
lds
pop
mov
dec
cli
xchg
divb
xor
pop
adc
outsb
adc
mov
shrb
jbe
dec
add
add
pop
test
pop
call
add
iret
xlat
insl
push
mov
rol
pmaddwd
mov
loope
fisttps
add
shl
jnp
or
icebp
fwait
or
mov
mov
inc
lods
testl
and
sbb
push
inc
mov
outsb
fistps
inc
sub
testb
popa
faddp
testl
inc
jl
addl
add
cld
out
divb
sub
jno
test
push
cld
cmpsl
lea
stc
insl
or
in
das
in
cmpsl
arpl
sti
daa
mov
std
imul
dec
dec
xchg
inc
pop
insl
inc
fs
pop
dec
add
cmc
add
jmp
scas
dec
add
cmc
add
jp
dec
sti
scas
mov
xchg
push
dec
push
push
sti
lcall
add
add
adc
inc
sti
jbe
rcll
enter
jp
adc
punpckldq
jecxz
cli
add
jb
adc
and
ss
dec
aam
jb
xchg
data16
fstps
xchg
jb
pop
bound
cli
xchg
sbb
decl
add
fadd
sgdtl
add
in
sub
orb
adc
lahf
sub
in
push
and
lea
sub
iret
jnp
hlt
xchg
add
pop
lds
das
out
call
push
ret
popf
clc
ljmp
or
das
add
fidivs
jecxz
sbb
je
adc
jnp
stos
inc
insl
daa
sbb
das
jmp
jp
or
add
mul
mov
xchg
repnz
xchg
xor
push
push
dec
jae
jne
jo
pop
push
aaa
inc
int
add
aas
das
ss
xchg
inc
ret
and
aam
xchg
push
ljmp
adc
or
pop
xchg
addr16
push
test
pop
mov
lret
inc
add
stos
test
pop
scas
out
incb
jge
mov
fstl
ds
add
in
fwait
push
jb
add
adc
xchg
cs
adc
stc
pop
cmpsl
push
pop
dec
xor
dec
js
pop
dec
shl
mov
clc
add
mov
jo
adc
and
jl
sbb
pop
mov
mov
fxch
std
pop
adc
inc
add
add
scas
inc
cli
add
imul
stos
push
jno
hlt
mov
dec
mov
std
inc
and
cmp
rcl
hlt
mov
cltd
inc
je
xchg
pop
and
pop
icebp
dec
je
ret
cmc
int
sti
ds
cmp
stos
aam
pmullw
xor
ljmp
pushl
add
add
add
jmp
inc
mov
bound
add
insl
js
add
out
xchg
inc
xor
xor
jns
cmc
add
cmp
add
mov
add
cmc
rcll
dec
inc
lock
add
mov
cmp
dec
sbb
aam
pop
jne
mov
add
and
add
dec
jns
call
sarb
jnp
dec
jns
add
mov
jae
mov
loope
or
loop
mov
add
imull
test
and
xor
dec
divb
cwtl
inc
xor
syscall
sbb
nop
pop
test
xchg
incl
jae
repz
incl
add
neg
incb
fmulp
incb
adc
inc
xchg
mov
rcll
mov
inc
adc
pop
xorl
dec
in
xor
mov
jb
incl
insl
pop
subb
add
xchg
into
mov
xchg
es
repnz
or
add
add
fstpt
adc
add
add
cmp
call
jle
pop
std
push
lea
dec
jae
hlt
jae
cld
adc
add
inc
inc
mov
adc
sub
jbe
push
jb
mov
fildl
imull
dec
data16
add
add
dec
sti
push
or
jge
add
add
jnp
jge
jbe
pop
in
inc
rcrb
lret
int
test
add
fs
cli
scas
daa
pop
push
dec
daa
dec
test
sub
fs
sti
xchg
sbbb
or
xchg
repz
call
lcall
in
mov
jge
mov
ret
jmp
add
loop
test
dec
adc
dec
cli
aam
cld
inc
jmp
xor
inc
je
xorb
cli
add
pushl
in
bound
add
xchg
jecxz
ds
call
gs
add
in
mov
push
and
sub
add
add
ret
lock
and
test
mov
add
pushl
pop
xchg
add
pop
add
add
ds
subl
adc
stos
add
test
add
mov
divb
jge
call
mov
mov
je
mov
test
sub
mov
aam
cli
loope
pop
test
ds
ret
jnp
dec
sti
leave
push
push
fmull
jmp
aam
call
add
add
mov
clc
ss
addr16
cmp
push
rcrb
sti
imul
out
mov
addr16
adc
je
add
cli
out
mov
push
mov
stos
pop
jle
div
std
cs
repnz
out
fcmovbe
or
add
pop
test
inc
add
add
add
loop
int
jo
loopne
js
adc
xor
pop
mov
dec
xor
sahf
pop
sbb
or
aam
jns
push
in
xchg
repnz
jns
out
or
mov
stc
jns
sti
pop
sti
outsl
fdiv
ja
and
fcompl
fwait
dec
repnz
int
out
icebp
inc
cld
xchg
push
shr
add
add
pop
outsb
enter
sarl
pop
jmp
stc
xchg
mov
aaa
scas
les
push
inc
inc
inc
outsb
lds
lods
cmp
test
xchg
pop
sbb
mov
cmc
popa
bound
ds
imul
push
sti
xor
out
subl
sbb
pop
pop
pop
bound
add
scas
cli
xchg
int3
out
jle
out
ret
mov
sbb
int
ljmp
pop
scas
dec
cmp
mov
jg
mov
popa
mov
jne
leave
imul
jno
idiv
fsubrs
mov
test
scas
add
icebp
shlb
shll
out
add
test
pop
lahf
sub
test
sub
and
add
add
mov
decl
or
aas
mov
ljmp
xchg
out
mov
pop
in
jnp
decl
mov
add
notb
xchg
mov
aas
jmp
jge
and
jnp
dec
sti
stc
addr16
mov
xchg
notl
xchg
push
jge
add
add
add
dec
inc
jge
incb
push
mov
pop
sbb
jg
pop
xchg
int3
and
loopne
mov
jp
call
sub
mov
inc
pop
inc
shll
jnp
sub
loope
shr
rorb
add
mulb
jne
int3
sbb
or
aaa
ret
jmp
aaa
ja
pop
jns
pop
addl
add
addb
sub
adc
rcr
out
inc
adc
test
sub
jg
aas
mov
sub
repz
call
cli
jne
xchg
dec
popf
fmuls
add
aam
push
jge
sbb
push
std
test
enter
out
aas
hlt
daa
out
call
inc
lret
or
lahf
lods
adc
add
cmp
daa
ss
add
xchg
mov
jmp
add
bound
pop
daa
movsb
and
scas
jb
pop
daa
sub
inc
inc
xchg
cmc
add
jmp
sbbl
pop
push
sub
xchg
adc
repnz
xchg
repz
mov
stos
cmp
pop
jmp
mov
mov
xor
iret
cmp
dec
add
jae
mov
je
rorb
push
add
cmpsl
adc
addl
mov
fcoml
std
add
dec
push
pop
test
filds
divl
mov
aaa
pop
arpl
push
jo
pop
faddl
add
or
notb
adc
add
mov
les
add
xchg
je
leave
adc
scas
inc
sti
jg
xor
lcall
pop
call
pop
or
negb
sarl
cmp
mov
jbe
inc
xor
cli
mov
jbe
adc
jl
testl
cmp
sti
movsl
popf
fstl
icebp
mov
cli
shll
repz
add
ss
jl
mov
out
add
and
or
hlt
pop
push
test
sub
jne
mov
or
bound
gs
cli
jecxz
cmc
inc
or
ret
pop
mov
and
cmp
das
ret
xor
aam
pop
shr
mov
movsb
dec
repnz
or
add
mov
xchg
add
iret
out
sar
rorb
cmp
aam
push
shr
jb
movsb
jp
sub
inc
int
aas
mulb
test
mov
xchg
or
call
inc
jns
xchg
pop
mov
inc
xor
pop
fld
adc
add
cli
addb
ficoml
mov
add
xor
fstpl
cli
pop
cmp
add
add
add
or
inc
sub
es
mov
xor
push
inc
sar
jl
aaa
adc
imul
out
xor
lock
frstor
loope
into
xchg
adc
loope
cmp
sti
sbb
sub
call
repnz
add
add
lret
jae
mov
pushl
cmp
enter
mov
addb
ds
das
mov
outsl
jp
inc
insb
jecxz
mov
decl
push
fadds
push
pop
les
adc
sti
pop
pop
push
add
sti
aas
sti
add
dec
sbb
pop
sahf
idiv
push
mov
in
sbb
notl
add
add
jae
movsb
dec
pushl
rolb
divb
push
push
cmp
adc
sub
xchg
out
add
adc
out
pop
or
pop
leave
inc
sti
jp
lret
adc
inc
adc
jl
jns
mov
pushf
in
icebp
mov
aas
je
adc
or
xor
js
out
loope
frstor
jne
sub
or
sbb
add
cmc
inc
or
push
or
ret
add
scas
mov
sti
in
xchg
inc
aas
sti
jp
test
daa
mov
clc
ret
addl
add
test
or
add
ret
push
or
xor
xor
call
out
mov
sub
add
mov
sub
inc
popf
and
add
sbb
test
adc
mov
mov
jno
loopne
cmc
into
loope
loop
sub
inc
in
add
fdivrs
add
in
fnstenv
add
sub
inc
push
pop
sti
scas
jns
je
xor
cmp
cld
popa
adc
outsb
inc
je
js
pop
hlt
out
sub
add
add
add
int3
adc
cmc
fidivrl
cmp
xor
lcall
popa
stos
out
fidivrl
sti
insl
mov
popa
push
push
and
stos
cmc
cmp
jno
jge
jne
out
pop
in
scas
lret
icebp
add
pop
lea
out
mov
shl
push
mov
js
add
daa
dec
jmp
or
add
test
push
dec
notb
clc
aam
rorb
insl
or
mov
sbb
bswap
adc
cmp
divl
shlb
adc
dec
inc
sti
pop
test
or
dec
sub
out
cld
pop
add
xchg
push
add
jae
rol
testb
icebp
inc
iret
rcll
inc
sti
mov
add
scas
jg
je
hlt
cld
pop
cli
int3
sar
inc
and
or
pop
testb
sub
mov
mov
add
cmp
inc
adc
fbld
inc
jb
mov
inc
adc
dec
rcrb
mov
mov
inc
adc
in
add
aaa
inc
jne
jnp
adc
add
add
xor
jmp
daa
rolb
mull
incl
testb
repz
sbb
aam
or
add
add
push
jb
call
shl
jmp
aas
jnp
cmp
cmpl
cmpsb
xchg
call
sub
ljmp
fisttpl
shll
iret
mov
mov
dec
sbb
adc
icebp
jp
stos
dec
xchg
testl
repnz
sahf
pop
add
xchg
rolb
ret
icebp
test
xor
test
nop
lcall
cmp
and
lahf
mov
sti
xor
add
cmc
test
popa
std
rorb
ret
mov
sti
xchg
movsl
pushf
mov
add
add
aaa
sti
adc
ficoml
cs
sbb
push
je
xor
aaa
jae
data16
dec
clc
aaa
mov
or
mov
rorl
roll
or
aaa
push
add
mov
shlb
mov
lea
in
dec
lea
add
iret
dec
jecxz
pop
std
jmp
add
movl
pop
inc
lret
or
jp
je
push
divb
push
cld
out
lahf
cmc
imul
cmpsl
lods
add
enter
lock
out
in
and
or
decl
inc
xor
inc
pop
hlt
xor
mov
sti
mov
iret
or
hlt
into
mov
jecxz
inc
pop
call
mov
insl
pop
jecxz
sub
add
xor
lods
loop
fisubrl
sar
sub
sbb
adc
daa
jmp
ds
pop
xor
mov
out
mov
push
xchg
bnd
out
sti
mov
or
pop
push
popa
xchg
cmp
sub
ds
stc
stos
ds
insl
mov
mov
push
mov
cli
add
add
xchg
jne
adc
bnd
mov
mov
call
shr
stos
lock
mov
ret
fnstcw
sbb
sarl
cmp
fs
std
rcrb
cmp
xor
add
xor
lea
cmp
inc
lcall
cmp
testb
shr
add
add
stos
movsl
cmp
add
push
in
imul
push
aaa
add
movb
jle
std
rorb
sarb
stc
cli
cld
sbb
je
fwait
movsb
cli
jbe
sub
arpl
cld
sbbl
sub
je
add
add
cli
add
sbb
and
add
add
sub
int3
push
sti
adc
cmpsb
sti
xchg
inc
or
push
jge
add
sub
push
aad
xor
clc
add
data16
cli
hlt
mov
aas
jmp
add
add
add
jne
jle
pushl
jnp
divl
loopne
pushf
adc
jmp
out
inc
stos
add
add
add
pop
lds
push
push
jo
push
mov
add
push
and
push
pusha
mov
add
adc
in
popa
or
jo
push
pusha
mov
add
notl
pop
add
pop
xchg
movb
ljmp
in
inc
push
push
mov
lret
mov
ja
add
sbb
jmp
ja
mov
push
adc
sbb
add
add
movsl
xchg
add
sbb
loope
add
notb
add
mov
out
mov
xor
notb
decl
inc
fimull
inc
fwait
ds
popf
mov
iret
jnp
or
shll
or
xor
jp
ljmp
sar
addl
aam
push
fs
add
add
xchg
sub
lock
mov
cmp
or
jns
inc
sub
hlt
sub
lods
filds
int3
jmp
adc
inc
dec
cli
cwtl
xchg
in
rcr
cwtl
je
test
je
leave
pop
and
outsb
add
sub
mov
shrb
add
shrl
stc
and
addl
add
xor
mov
lods
pushl
sub
lahf
sub
jne
add
test
add
jecxz
lods
in
add
imul
lods
dec
vmovapd
sar
cli
pop
mov
pop
cltd
lds
call
jl
pop
stos
icebp
add
adc
push
fs
push
bound
add
mov
sti
stc
call
sub
test
fdivr
xchg
jns
jb
sub
mov
add
subl
gs
dec
xor
call
dec
call
addb
je
mov
adc
je
or
inc
out
mov
ja
clc
push
outsb
ljmp
add
add
push
je
add
enter
fcomps
adc
xor
adc
ror
adc
ror
or
cmp
inc
scas
dec
divb
js
or
pop
lcall
sub
add
jno
out
scas
mov
add
test
in
push
jo
aaa
aas
divb
adc
add
add
dec
cld
mov
stos
sbb
pop
pushl
push
mov
cld
xor
add
push
xchg
xor
mov
mov
clc
mov
inc
fadds
sti
add
adc
incb
add
aaa
mov
sbb
cli
jecxz
adc
add
jns
call
icebp
test
in
test
add
add
into
jno
dec
push
jb
jmp
ds
add
in
sub
shlb
cli
int
dec
cmp
push
ss
add
add
xor
pusha
push
ret
add
push
aaa
adc
sub
jns
cmpsb
add
shl
sbb
pusha
leave
pop
xor
push
inc
sub
push
and
call
fiaddl
add
mov
ss
ds
add
and
sub
shll
adc
add
es
loop
cli
sbb
push
repz
inc
repz
imul
ds
fcoml
mov
sti
popf
dec
and
and
int3
mov
sub
jns
jne
ret
push
add
pop
jmp
mov
imul
ja
roll
push
je
push
lret
xchg
jg
or
jo
push
add
xlat
push
nop
imul
or
mov
or
addl
fdivrl
out
shrb
jmp
cmpsb
mov
lcall
divb
repz
inc
vmwrite
je
add
ja
divl
shll
add
repnz
mov
sub
ret
push
mov
and
push
inc
negb
test
test
out
and
les
icebp
adc
negb
ret
mov
sti
pop
xchg
inc
je
adc
data16
jnp
cmp
cli
add
add
movb
and
jo
sbb
jp
or
je
add
icebp
mov
imulb
jne
sub
test
sbb
jae
adc
xchg
leave
das
jmp
inc
test
inc
adc
icebp
roll
xchg
lods
es
inc
sub
outsb
negb
idivb
cld
jl
loopne
xor
clc
shrl
inc
add
add
adcl
icebp
and
les
cmpsb
and
gs
jmp
clc
pop
mov
jae
out
rorl
cltd
cmp
popf
stc
and
or
mov
adc
stc
mov
xor
sbb
xor
add
int3
icebp
push
jmp
adc
cmp
fdivrs
sub
add
or
push
dec
loope
mov
cli
sub
sub
xchg
mov
data16
jle,pt
push
or
dec
pop
bound
shl
cwtl
call
sbb
dec
testl
je
xor
fcmovu
sti
and
xchg
rol
xor
add
add
add
cmp
inc
adc
pop
ret
imul
int3
outsb
cmp
jae
add
insb
push
push
or
push
loope
divb
rcll
sahf
inc
sti
test
and
mov
pop
sbb
nop
or
inc
lret
pop
dec
sti
enter
cmp
enter
mov
xchg
xor
mov
out
add
add
jmp
add
mov
sti
lcall
sub
push
mov
add
pop
notl
sub
out
or
sti
jge
xor
add
out
jmp
js
dec
std
mov
outsb
leave
out
ret
add
jnp
mov
jge
xor
addl
xor
inc
xchg
xor
add
negb
js
jnp
mov
int3
scas
lret
out
xchg
sub
hlt
mov
xchg
imul
xor
call
sub
xchg
xchg
test
inc
mulb
dec
dec
addl
sub
mov
xor
mov
arpl
pusha
iret
int3
cltd
out
testb
shlb
lods
mov
dec
stc
dec
or
xchg
loop
cltd
dec
cmp
lea
add
add
je
cmp
into
ds
int
sub
imul
sub
push
leave
mov
jno
icebp
jge
sti
xchg
scas
and
sub
and
sub
and
add
jbe
cmp
iret
push
fidivl
es
mov
movsl
rcl
jmp
push
test
add
add
jnp
je
jp
dec
add
ljmp
pop
std
int
cli
mov
in
fdivs
jnp
mov
and
movaps
jae
inc
mov
cmp
and
and
jbe
rolb
push
je
xchg
inc
je
test
and
test
inc
aas
bound
pushf
push
mov
jne
sub
push
inc
pop
lea
mov
shlb
add
lds
decl
jecxz
nop
add
pop
sbbl
sti
push
adc
sub
add
dec
push
jmp
or
jecxz
and
pop
xor
rol
call
leave
push
divb
xchg
mov
xor
sbb
inc
add
add
inc
xor
imulb
icebp
test
orb
out
jg
clc
and
sti
jmp
pushf
movsl
scas
out
andl
jno
sub
subb
xchg
fiaddl
push
mov
add
mov
sub
dec
jns
add
roll
neg
and
add
add
data16
adc
test
int3
enter
push
insl
test
into
sub
inc
add
dec
fdivrs
scas
add
mov
nopl
mov
mov
push
add
cmp
fcoms
mov
fwait
imul
inc
int3
push
divl
clc
lret
sarl
sub
lods
mov
jg
pop
loop
inc
mov
push
cld
rcrl
subb
add
mov
add
sbb
jo
mov
sub
xchg
out
cs
cld
cmovle
add
mov
xorb
mov
jmp
jmp
push
dec
jb
movsb
or
jp
or
cmpsl
test
out
hlt
xchg
arpl
add
add
sbb
jg
xchg
incb
mov
loope
xchg
sarl
cli
fidivs
je
insb
add
sub
sbb
insb
mov
push
mov
loope
xchg
jns
add
arpl
add
add
int
pop
add
sbb
mov
pop
jne
insl
adc
loop
lahf
adc
add
add
daa
icebp
push
push
insl
xor
adc
out
sbb
divb
xchg
mov
decl
call
push
lds
adc
pop
push
jecxz
or
push
call
enter
xchg
add
stos
jg
sbb
psrld
xor
nop
popf
push
and
inc
pop
mov
cmp
and
jb
repnz
add
jmp
imul
sub
push
nop
out
jg
sub
hlt
testb
xchg
mov
xor
shlb
aaa
mov
jnp
imulb
jle
and
pop
jge
daa
das
xor
jns
ficomps
sti
add
je
mov
adc
jne
cmpsb
inc
add
or
cmp
ljmp
add
imulb
pop
add
add
ret
dec
add
inc
lret
mov
push
mov
das
mov
lds
jo
cmpsl
sub
fstpt
ret
adc
jnp
sub
jns
sbb
in
test
mov
sbb
and
popa
clc
ret
flds
call
sub
shll
mov
repz
add
subl
incl
icebp
and
leave
loopne
or
fsubl
mov
aam
jg
call
out
adc
jmp
adc
test
push
or
mov
mov
add
and
das
xor
push
cltd
jmp
es
lods
add
cli
mov
ljmp
add
add
xchg
pop
inc
pop
push
sti
es
les
loop
push
test
add
cli
sub
not
adc
xchg
cmc
add
jg
call
insl
xor
cs
or
xor
inc
out
mov
sbb
mov
push
gs
jo
not
lret
aas
pushf
pop
testl
add
add
loopne
cmp
cs
xchg
je
mov
testb
sarl
and
jecxz
adc
testb
adc
int
sti
push
call
mov
out
push
mov
out
fsub
je
imull
call
movsb
adc
sub
jne
inc
push
inc
imulb
aad
shl
dec
mov
push
stos
sub
add
add
xchg
rclb
xchg
mov
add
fstpl
push
mov
xchg
cmp
mov
xchg
iret
sti
les
mov
sub
iret
notb
sbb
mov
cwtl
add
xchg
adc
sub
add
push
push
test
jbe
enter
out
outsl
pop
pop
xchg
add
mov
add
xor
jo
stc
mov
clc
push
add
or
in
mov
xchg
mov
subl
sti
stos
call
mov
aas
addl
mov
lea
cmpl
sub
adc
outsb
cmp
cmp
ret
jp
rorb
nop
scas
inc
testl
xor
shll
and
fisubl
xchg
add
add
stos
out
dec
mov
cli
and
dec
movsl
mov
xor
or
ficompl
jmp
cmp
xchg
jp
pop
push
icebp
dec
bound
xchg
negl
cmc
add
pusha
es
gs
jnp
pusha
adc
cmp
lods
std
int
pop
bound
add
add
loope
jmpw
repz
sbb
or
jge
popf
mov
push
mov
push
xchg
testl
and
sub
cmpl
pop
testl
lahf
xorl
dec
out
sbbl
push
lock
push
or
sbb
hlt
and
pop
ja
add
push
outsl
fwait
cmp
add
fwait
insl
rcll
ret
mov
out
test
and
xorb
aas
adc
insl
add
iret
mov
jmp
pop
sub
cmp
mov
int
in
negb
jle
mov
js
xchg
or
add
in
push
and
xchg
subl
mov
add
add
and
dec
bound
shl
insb
jns
shll
or
sub
jb
aaa
inc
mov
cmp
sti
sub
add
sti
mov
repz
mov
cli
jmp
out
aas
negb
sti
repz
or
sub
int3
daa
fldcw
push
ss
push
testl
mov
stc
pop
add
lock
add
add
ljmp
adc
cmc
xchg
cld
jo
aaa
sbb
jb
fidivl
test
sbb
ljmp
add
adc
or
dec
gs
in
insl
test
mov
cmpsl
or
adc
out
xchg
cld
js
pop
sbb
jp
bnd
test
mov
mov
sarb
add
mov
fs
mov
jb
ljmp
cmpsb
dec
test
add
mov
mov
shrl
sti
cltd
jecxz
insl
xor
sar
inc
ret
push
add
jnp
ljmp
cli
out
cwtl
adc
pusha
jb
ret
add
cli
cmp
cmp
aam
aam
movsl
cmp
inc
repnz
add
adc
cmp
inc
movsl
imul
jmp
ret
and
or
sub
mov
add
je
sti
decl
mov
dec
xrelease
mov
mov
rorb
add
pop
adc
cmp
ja
adc
dec
sti
mov
sldt
add
mov
out
call
cmp
test
mov
stc
mov
bound
icebp
test
aas
jmp
and
mov
add
cmc
or
mov
jl
shrl
dec
adc
xor
sbb
mov
sub
sub
insb
and
das
add
sarl
add
add
sbb
adc
test
nop
push
stc
popl
xor
inc
aaa
cs
push
pop
ljmp
add
mov
dec
and
shl
add
mov
insl
push
add
aad
stos
mov
out
hlt
int3
sbb
repnz
std
push
push
adc
adc
sbb
xchg
loop
mov
sub
add
add
shrb
mov
mov
mov
adc
lock
ljmp
enter
lea
adc
mov
daa
testb
or
in
pop
andb
jns
sbb
jmp
fcompl
xchg
test
in
add
fs
cmp
sahf
outsl
inc
or
add
add
add
cmpb
jns
xor
or
ss
inc
jne
out
ret
or
cli
movsb
loope
loopne
cmp
add
xchg
divl
test
out
pop
std
mov
jnp
lods
cmp
or
mov
cli
test
add
stc
inc
cmpsb
sub
sti
sbb
ret
inc
movsl
test
addr16
add
add
cmpl
fldl
jne
fnstcw
lar
or
cli
inc
inc
fildl
cmp
push
mov
test
adc
push
sbb
arpl
popl
test
arpl
fldt
add
adc
mov
jge
push
sbb
push
jne
push
incb
add
add
add
js
hlt
pushl
clc
pushl
lock
cmc
je
inc
repz
or
add
testb
jne
jle
mull
or
push
sbb
movzbl
add
sub
jne
cmpsb
lock
in
jle
mov
aaa
in
add
clc
adc
xchg
add
pop
xchg
fisubs
incb
mov
mov
xchg
inc
dec
xchg
add
add
sar
jo
idivb
sti
add
adc
jnp
nop
xor
mov
jle
in
mov
xchg
icebp
sub
sbb
xchg
adc
je
cmp
mov
add
xchg
loopne
inc
xchg
sub
mov
mov
lods
ret
add
push
adc
icebp
test
add
add
jl
rorl
jmp
push
lret
add
hlt
inc
add
call
mov
cltd
or
cltd
ljmp
pop
pusha
flds
xor
xor
jmp
adc
call
sbb
sub
or
pop
loop
aas
jmp
mov
sbb
add
add
add
stc
adc
lods
cmc
add
xor
fs
mov
lcall
sub
or
add
and
and
movsl
cmc
add
xchg
sbb
movsb
cmc
and
fs
icebp
out
mov
sti
insl
xor
sbb
sub
jnp
push
stos
divl
inc
pop
cmc
jae
add
add
addl
inc
dec
pop
mov
out
cli
inc
pop
push
out
add
add
adc
aam
pop
pop
pop
or
push
sar
cli
inc
subps
adc
mov
push
decl
loope
inc
iret
imul
mov
sti
mov
cmc
jae
test
divb
push
call
jns
jecxz
pop
std
notb
add
add
add
mov
cld
sub
stos
add
test
push
insl
sti
test
cmpl
pop
jmp
push
pop
psubq
incl
jge
pop
cmp
jmp
pop
xchg
repz
fildl
sti
jmp
repnz
idivb
cmpb
pop
mov
fnstcw
or
cmc
push
decl
add
sbb
lcall
mov
mov
cltd
xchg
and
popf
inc
je
popf
xchg
and
shll
testb
sbb
inc
fistl
jnp
or
test
sbb
daa
dec
call
jle
or
pop
add
call
add
aad
sbb
jne
out
add
add
adc
add
add
jnp
out
test
sbb
xchg
jns
xchg
adc
stc
pop
nop
stc
cwtl
xor
xor
and
mov
test
xchg
xchg
roll
testl
cmp
mov
inc
or
imul
or
pop
cmp
jl
insl
cli
add
sbb
dec
inc
out
or
jmp
xor
adc
cs
ljmp
mov
ljmp
icebp
pusha
clc
addr16
ja
incl
jp
and
aad
adc
sbb
testb
add
adc
lds
xchg
inc
add
push
mov
add
notb
adc
mov
ljmp
ret
movl
add
addb
dec
jg
pavgw
pop
jge
add
pop
jp
sbb
sbbl
je
inc
notb
xchg
flds
push
jae
mov
std
je
xor
mull
push
mov
call
mov
in
push
dec
add
cmpb
divl
repz
dec
push
add
push
add
add
sbb
out
add
sti
sub
aaa
cld
jns
mov
aas
mul
push
je
sbb
mov
cli
lret
adc
pushf
mov
mov
cli
pop
mov
sub
shl
shl
iret
std
or
add
add
mov
nop
cmp
icebp
xchg
nop
xlat
call
lahf
enter
add
push
lea
ret
mov
add
rolb
insl
inc
testb
mov
daa
fs
sarl
out
jmp
cmp
and
inc
mov
imul
incl
in
dec
mov
add
ret
xchg
cld
in
dec
sahf
jnp
shrl
or
xor
push
popa
cmp
ror
ja
cld
fwait
cli
mov
add
add
hlt
cmp
stc
xor
sub
mov
add
out
sub
sti
pop
cmc
xor
jmp
xor
pop
sarb
loopne
mov
push
cs
imul
movsb
xor
into
je
add
sahf
call
pop
adc
hlt
lea
cmpsb
cmc
xchg
fs
add
add
mov
mov
scas
sar
jb
stos
pop
mov
adc
xchg
inc
mov
insb
cmp
push
adc
inc
je
cmp
sahf
cmp
sbb
xor
stos
adc
hlt
testb
repnz
lcall
push
push
notb
in
divb
add
xchg
cmc
adc
dec
ds
cmp
dec
xor
mov
mov
mov
xorl
jp
pusha
cmc
testb
shlb
or
ret
out
push
incl
movl
loop
out
imul
mulb
out
rol
cli
sbb
pop
add
add
inc
pop
pop
loope
incl
testb
repz
adcl
shl
xchg
notb
pushl
outsl
fcmovnu
divps
dec
cli
dec
cmp
cli
ret
sbb
pushf
adc
xchg
bound
mov
mov
cmpb
rcr
push
mov
ljmp
add
add
add
add
adcb
sbb
movsb
fucomip
add
in
je
aad
test
sti
jb
call
sbb
and
fs
add
add
mov
add
add
lea
popa
add
inc
jecxz
pop
mov
lds
out
lds
push
sahf
add
add
lea
add
cmp
mov
adc
decl
adc
add
xchg
test
xchg
push
insb
cltd
and
mov
rolb
stc
jbe,pt
or
cli
cli
or
in
mov
rclb
insb
repz
cli
cli
sti
je
f2xm1
push
add
and
out
ja
out
jne
inc
push
push
call
insl
mov
sti
cli
inc
daa
mov
sbb
fsubrs
sti
jno
jb
pop
cmpsb
and
add
add
call
push
inc
mov
sbb
iret
add
pop
cmpl
loopne
add
push
aaa
sti
xchg
fdivs
add
add
add
repnz
cmc
jo
sbb
fcompl
xorl
mov
add
push
cltd
cmp
cpuid
inc
push
pop
add
in
pop
idiv
push
movsb
adc
add
idivb
scas
push
jnp
aas
std
add
or
int
mov
out
outsl
les
mov
push
jbe
into
pusha
mov
fisubrs
cli
inc
int
pop
xchg
scas
mov
xor
out
xchg
pushl
mov
xchg
pushf
add
add
push
out
cli
add
js
data16
mov
pop
push
test
lea
or
dec
aaa
jns
dec
pop
sbb
out
xorl
jecxz
mov
add
push
mov
pop
rcrl
add
std
outsl
test
jg
jne
arpl
cmp
add
cltd
add
fisttps
cld
pop
mov
movsb
jae
add
inc
and
dec
icebp
xchg
idivb
inc
sbb
cld
pop
aas
mov
repnz
jmp
nop
pop
mov
sbb
int
mov
in
or
add
add
lret
add
jmp
mov
or
adc
push
pop
xor
mov
push
jmp
lock
test
shrl
leave
insb
xor
or
pushf
cmp
orb
cli
jmp
iret
add
jmp
test
inc
jmp
xchg
cmp
push
or
jmp
add
lea
cmp
std
or
imul
cld
repz
mov
mov
js
call
and
jl
add
scas
dec
push
int3
mov
adc
xor
jbe
bound
push
jmp
jns
fildl
xchg
push
mov
add
lret
mov
lock
fadds
add
jns
push
mov
lods
rcl
add
cmp
mov
xor
lcall
add
call
jns
std
push
add
jae
adc
aaa
mov
ret
out
js
sti
jne
add
jbe
dec
cld
mov
push
mov
inc
fmuls
daa
add
add
ds
mov
jle
cmpsb
jnp
jmp
add
pop
imul
daa
mov
jne
push
cld
xor
xchg
add
imul
lods
cli
or
aas
idivb
cwtl
call
rolb
aas
negb
ljmp
fs
push
jno
sub
mov
jns
ljmp
add
sbb
add
sbb
inc
imulb
cmp
jns
add
add
add
add
jmp
ret
push
add
pop
jno
gs
or
std
cmp
add
lods
fnstenv
dec
push
mov
test
add
add
js
call
insb
les
cmc
movsl
add
mov
jmp
sti
inc
jmp
jns
jmp
insl
dec
std
lcall
add
xor
add
movsl
jg
shll
mov
push
xchg
hlt
test
ret
mov
cli
adc
sti
je
hlt
insl
cld
xchg
fimuls
cmc
add
negb
cli
push
push
lret
cmc
dec
xchg
jmp
in
add
jmp
or
out
shr
cli
add
pop
pop
cld
es
call
add
sti
mov
jg
add
add
inc
adc
arpl
add
add
subb
insb
adc
std
out
fcoms
repnz
decl
test
push
add
repnz
out
pop
add
xorl
mov
jbe
imul
pushf
jne
incl
mov
or
add
sub
imul
sahf
jne
lcall
hlt
cli
lahf
add
mov
push
jmp
sub
pop
xchg
fisubs
pop
mulb
gs
out
mov
mov
jle
jmp
or
jnp
mov
xchg
jne
imulb
mov
mov
es
stc
je
pusha
icebp
add
out
test
cli
add
add
call
cmc
call
insl
hlt
or
insb
inc
les
scas
dec
push
into
loopne
cli
mov
xlat
ss
jb
dec
inc
insb
cmp
out
jmp
jnp
cmp
jl
sub
testb
outsl
mov
pushf
mov
add
jbe
xor
testb
push
movsl
sbbl
add
push
adc
sub
and
add
jns
mov
decl
sub
out
incl
fnstenv
adcl
inc
notb
dec
adc
bound
sub
test
sbb
add
daa
or
dec
ficompl
cltd
xchg
int
mov
imul
pop
test
add
add
ret
test
add
sbb
push
fmulp
sbb
fs
sbb
pop
imul
ret
fstps
call
cmc
call
cli
adc
or
mov
stc
and
insb
jns
lock
cmp
pop
push
js
push
insb
outsl
and
in
jecxz
add
add
xchg
xchg
lea
pop
call
add
or
int3
imul
lahf
mov
add
mov
xchg
inc
xchg
js
mov
mov
add
mov
xchg
inc
out
repnz
push
pop
xchg
fistpl
pop
call
dec
dec
fiaddl
push
push
out
incb
adc
arpl
jne
add
add
call
inc
mov
clc
aaa
mul
cs
lds
dec
mov
cltd
push
cli
cli
mov
test
or
add
out
xchg
push
call
test
les
mul
scas
add
push
call
in
pop
pop
aas
cmpsb
add
lret
outsb
jmp
adc
add
lcall
stc
arpl
and
loope
loope
mov
andl
jmp
add
push
sbb
pop
jmp
add
subl
or
std
push
outsb
out
mov
add
dec
jg
insl
imul
mov
jmp
push
fcomps
hlt
add
add
loope
push
jnp
jno
cs
clc
test
hlt
jno
addr16
pop
dec
mov
icebp
shll
inc
jmp
in
fildll
jmp
int
add
pop
push
inc
pop
add
dec
add
sahf
cld
pop
mov
je
bound
in
gs
mov
aad
lea
add
add
add
xchg
mov
mov
jle
in
add
add
lock
jmp
ds
rolb
jle
loope
data16
jmp
icebp
or
test
ret
je
lea
push
xchg
in
ljmp
xchg
mov
jmp
jg
push
sbbl
iret
ljmp
pop
add
stos
js
cld
jg
pop
call
adc
xor
out
sub
in
addl
repnz
push
bound
push
dec
jmp
sti
notb
fsubrl
add
lcall
jmp
jge
orl
jge
add
and
jne
xchg
mov
inc
add
add
add
fwait
pop
lea
pushf
push
pop
adc
pop
int
insb
add
rcr
sti
cli
shll
add
pop
in
jmp
or
mov
or
push
mov
lcall
xlat
and
push
or
add
divb
mov
push
idivl
stc
arpl
inc
out
iret
mov
dec
add
add
sub
mov
testl
mov
test
pushf
and
jmp
xor
js
in
jle
test
lret
outsl
out
sti
outsb
hlt
inc
adc
je
inc
cltd
icebp
std
les
cmp
jl
jmp
pop
out
testb
js
add
movb
add
add
pop
fwait
mov
dec
jnp
negl
fcomip
cmp
movsl
jmp
in
pop
or
in
repz
pop
inc
jmp
mov
sub
scas
mov
mov
adc
in
aad
out
adc
in
and
sub
mov
insl
fcoms
and
push
insb
aaa
jmp
cli
jmp
add
add
call
cmp
das
jmp
xchg
leave
out
repnz
inc
jne
pop
xor
lret
sti
jl
jge
in
out
pop
call
clc
test
std
xor
add
add
inc
testl
sldt
pop
cmpsb
sar
sub
xor
call
jo
addl
add
add
jbe
bnd
push
jno
call
and
xor
jmp
shlb
inc
mov
jmp
cmp
jns
call
in
loope
jne
addr16
dec
pushl
psubusb
stc
push
cmc
pop
pop
add
push
out
cmp
cltd
neg
decl
shl
sbb
test
xor
add
xchg
add
add
imul
out
pusha
incb
fmulp
sub
mulb
jmp
push
js
xlat
dec
push
inc
int3
sub
mov
xor
lret
xchg
sub
jo
out
aas
push
xor
xlat
xchg
jae
imul
jmp
jmp
xchg
dec
scas
cmc
cli
push
xchg
mov
pop
and
negb
out
add
sahf
xchg
add
sub
leave
hlt
mov
add
pop
dec
movsl
jnp
clc
test
add
mov
adcl
mov
out
imulb
jno
stos
jae
cmp
or
loope
divb
call
loope
jmp
lret
jmp
stc
insb
int
testb
loop
insb
ret
in
add
call
hlt
lds
rorl
cs
sub
add
xor
and
ret
call
jae
cli
mov
loope
add
jnp
out
push
add
repnz
fidivl
jmp
daa
inc
dec
mov
test
push
push
pop
das
in
roll
add
int
clc
push
movsl
jg
fs
je
jb
in
add
mov
jl,pt
int
imull
jne
call
jns
popa
cmp
pop
mov
pop
add
shrb
add
dec
sub
dec
dec
loop
dec
push
les
dec
repz
test
cld
push
das
lret
ljmp
fwait
insl
or
add
add
in
add
or
lds
shr
mov
in
dec
loopne
push
sbb
or
insb
dec
dec
je
jns
je
inc
sarb
fmull
inc
jmp
fstpt
add
arpl
bound
out
push
out
cli
test
out
stos
ljmp
push
int3
fstps
cltd
add
add
xor
mov
mov
push
rcr
jb
insl
sbb
ss
adc
mov
fisttps
push
cmp
je
pop
fucomp
add
addl
loopne
add
push
xor
and
xor
arpl
imulb
out
adc
lret
insl
adc
rcrb
pop
jnp
icebp
test
add
add
add
out
pop
lods
mov
divb
xchg
insl
lds
in
pop
add
jmp
push
repnz
jl
cld
jae
out
call
add
xchg
insb
in
mov
fdivrl
sub
loope
in
push
daa
out
pop
in
jmp
push
bnd
or
sub
incb
pop
dec
cli
jns
pop
jno
and
add
add
add
repnz
push
sub
in
cmc
dec
xchg
icebp
push
rclb
push
sti
pushf
pop
jle
add
jmp
mov
icebp
jl
push
rolb
xor
push
sub
jge
in
jbe
add
daa
mov
jb
ljmp
cli
aam
cmovo
or
jb
std
jle
testb
sti
insl
or
fsts
mov
cmc
out
in
std
out
in
add
out
add
xchg
jnp
add
imul
psubsb
or
xchg
mov
dec
add
sub
add
sbbl
test
mov
push
lea
push
lea
dec
addl
sub
or
inc
pop
jg
add
add
lret
inc
adc
cld
xor
dec
cmp
dec
call
test
push
inc
add
test
push
cmp
imul
add
push
mov
lea
pop
out
push
push
rol
cli
or
inc
notb
jg
push
mov
jb
add
in
or
jge
fadds
in
xchg
in
xchg
aad
fldl
cmp
mov
xchg
sub
and
incl
cmc
sub
inc
aad
jnp
sbb
mov
push
mov
add
sub
add
sbbl
push
xor
js
or
mov
pop
or
push
mov
enterw
add
andb
imulb
add
js
adc
je
and
insb
enter
lret
pop
aas
sbb
arpl
cmp
jl
ja
test
sbb
sub
add
stc
aas
inc
hlt
add
add
movsl
push
jmp
or
test
jmp
sub
jmp
ljmp
out
popf
dec
add
jne
mov
popf
mulb
jmp
or
push
bound
sti
xchg
daa
je
js
std
xor
sti
mov
insb
add
or
add
pop
and
add
add
pop
xchg
negl
test
inc
push
sti
xorb
enter
aaa
lcall
in
jne
xchg
lods
dec
add
push
or
lea
inc
das
enter
add
insb
les
inc
xor
jae
push
and
jb
jg
xor
cmc
clc
imul
xor
pop
lahf
movb
mov
dec
push
pop
in
xor
add
dec
pop
rcrl
aad
xchg
imul
jg
mov
push
test
push
test
inc
cmp
mov
dec
dec
divb
insl
add
imul
and
fs
pop
dec
repz
pushf
jns
inc
imul
lcall
mov
repnz
insb
mov
adc
jg
loop
pusha
mov
add
out
std
mov
cmp
cmpsb
jg
ret
rolb
inc
sub
add
ret
popa
outsl
call
les
pusha
or
mov
stos
sti
decl
fcoms
mov
test
outsl
shr
cmpsb
ljmp
in
test
inc
jne
push
test
outsl
repnz
mov
add
add
fisubs
test
ficomps
lds
sub
fcomps
push
pop
rclb
jmp
add
push
outsl
repz
out
inc
loope
or
push
mov
gs
mov
testb
dec
decb
mov
xchg
ljmp
jmp
add
add
inc
test
inc
or
xor
push
pusha
call
insb
mov
dec
insb
enter
in
dec
mov
test
or
cld
cmp
or
or
sub
push
decb
sbb
cli
je
mov
test
mov
mov
xchg
stc
ficomps
out
insb
adc
sbb
mov
add
add
inc
leave
ret
adcl
inc
sti
hlt
dec
sti
and
sbb
or
addr16
dec
and
pop
aas
and
xor
je
aam
inc
mov
in
ret
dec
push
out
dec
jg
or
add
jg
dec
orl
call
mov
test
add
loope
int3
popa
clc
add
inc
testl
add
add
add
mov
aam
jbe
test
rolb
add
add
xor
ljmp
imul
or
and
xchg
mov
ja
push
sbb
and
xor
imul
jne
sub
movsb
jne
ljmp
add
add
inc
or
out
out
mov
out
xchg
jne
cmpsl
cwtl
jge
out
jmp
incb
jbe
insb
xchg
jmp
cli
insl
add
jg
pop
loop
movsb
add
sbbl
pop
ljmp
subl
lea
jg
in
ficompl
push
mov
add
ja
fsts
jg
add
popa
push
mov
and
insl
dec
out
shl
jo
push
jns
jmp
insl
hlt
jbe
mov
push
jbe
sub
xchg
and
jmp
pop
mov
jmp
add
push
test
nop
jecxz
movsb
or
add
test
lock
into
mov
popa
and
adc
and
cli
scas
add
add
fadds
adc
push
mov
lods
pop
stc
in
fidivrl
cmc
addb
sbb
push
push
jb
push
mov
and
dec
call
sub
push
bound
push
fimuls
xor
dec
mov
pop
leave
push
sti
add
je
int
mov
push
pop
cmp
add
in
cmpsb
inc
sbb
lods
fisttpl
stc
leave
sbb
xchg
hlt
scas
shl
add
dec
jnp
mov
int
pop
ret
jg
or
fadds
mov
inc
or
sbb
add
daa
push
idiv
sub
lods
inc
dec
std
inc
or
dec
or
xchg
or
inc
aas
rorb
sahf
decl
add
sub
je
mulb
adc
sub
add
adc
xlat
jmp
and
or
mov
mov
cmp
or
xchg
mov
mov
jle
inc
aas
or
sbb
sub
rorb
jo
mov
mov
push
jge
sub
lcall
add
add
sbb
sti
xor
ret
mov
xor
outsl
mov
cmp
lods
or
add
mov
mov
mov
xchg
xchg
add
add
std
lea
mov
loope
inc
icebp
adc
call
loope
cmp
add
add
mov
sbb
push
cmp
fimull
popf
lea
add
cmp
rorb
jmp
sbb
and
pop
aas
mov
ljmp
aad
sbb
hlt
xchg
jmp
push
cmp
outsl
push
add
jae
loopne
xlat
or
movsb
pop
pop
ljmp
push
test
or
xchg
dec
add
inc
clc
adc
jo,pt
faddl
roll
add
xorb
ret
mov
push
stos
in
repnz
or
fisttpll
clc
lods
mov
push
jge
cmc
orl
mov
repz
test
or
aad
jmp
shl
jmp
cs
pop
orl
add
clc
sar
add
movl
decb
add
mov
add
or
orb
sbb
inc
hlt
mov
mov
ret
mov
mov
fmull
push
fcoml
loopne
movsl
xchg
fidivrl
imul
or
rorb
rcrb
adc
pop
lods
decl
dec
hlt
imul
push
shl
sbb
inc
outsb
dec
push
adc
add
pop
movsl
or
push
xlat
mov
mov
stos
adc
jns
add
xchg
push
or
xor
push
aas
sub
inc
test
jmp
or
xchg
dec
sbb
repz
push
adc
popl
dec
mov
sarl
inc
xor
inc
xor
add
frstor
xor
repz
sub
test
add
ret
sbb
push
xchg
mov
pop
sub
mov
sbb
push
out
mov
pop
inc
xor
xor
add
or
rcrl
in
dec
fldlg2
mov
rcr
mov
in
add
add
shll
rolb
data16
add
cmp
mov
cmp
mov
scas
cmp
jmp
cmp
add
dec
push
fdivr
shl
jp
jno
test
cmp
mov
pop
in
jle
push
shlb
xor
adc
mov
je
inc
cmp
cli
movsb
dec
adc
add
add
xchg
push
shl
mov
inc
lds
cmp
aas
bnd
mov
sti
jp
jg
sti
imul
out
jae
les
lea
std
add
cmp
inc
pop
xor
add
std
jg
push
jge
aam
xchg
jae
jge
decb
push
pop
xchg
cli
xor
sub
or
add
push
test
xchg
mov
push
add
jecxz
sub
rolb
xchg
or
aam
adc
divl
mov
fcompl
das
hlt
push
enter
imul
divb
cld
scas
dec
mov
jae
enter
pop
xor
mov
in
xchg
shl
mov
inc
std
outsb
and
xlat
cli
jge
or
lods
into
incb
add
mov
out
sbb
fs
inc
in
push
push
inc
in
jne
scas
prefetch
fdivr
inc
pop
inc
call
jne
ret
movsb
xchg
or
fdivr
sbb
lret
mov
adc
sub
ljmp
rclb
hlt
outsl
hlt
mov
push
ret
loop
mov
jno
icebp
mov
add
dec
loope
dec
cmpsb
jnp
hlt
outsb
xor
push
testl
pop
xor
test
lret
call
jmp
cmp
jge
fidivl
jmp
out
mov
pop
dec
es
fstpt
and
repnz
jnp
jno
in
lea
xor
jp
insl
inc
out
addr16
add
add
jecxz
sub
out
rorl
add
fisttpll
popf
and
xchg
dec
jge
repnz
or
dec
fnstsw
xor
add
in
popa
xor
lahf
cmc
cmp
scas
ficoml
fstpl
cmp
sbb
xchg
xor
bound
fldenv
sbb
cltd
fsubrs
pop
fdivl
das
add
add
dec
add
dec
jns
add
jo
push
sti
jnp
in
jp
adc
mov
add
xchg
xor
loopne
mov
inc
jae
jnp
iret
jl
or
push
orl
push
aaa
pop
data16
add
cld
mov
test
loope
sti
mov
test
sarb
roll
jp
aaa
add
add
mov
mov
in
mov
in
inc
cld
add
jp
fcoms
loope
test
jmp
test
adc
push
mov
int
pop
mul
std
rcrb
adc
decl
push
movb
imul
filds
lret
cli
xor
dec
push
mov
cld
jmp
add
xchg
dec
bswap
mull
scas
flds
ss
inc
adc
pop
pop
cli
imul
dec
fsubrl
test
mov
xor
cs
rcll
jle
dec
dec
or
repnz
leave
pusha
dec
hlt
insl
xchg
ljmp
and
cmc
inc
clc
add
mov
cmp
and
and
icebp
mov
add
add
add
adc
mov
mov
lea
cmpsb
pop
mov
add
pop
cmpsl
mov
mov
movsl
imul
jns
mov
jg
push
mov
ljmp
ja,pn
mov
in
xchg
xchg
shll
icebp
xor
aam
jmp
dec
sub
insl
inc
add
mov
add
dec
lret
jge
adc
lret
lret
clc
ds
ja
jge
sub
shrl
ret
add
sbb
lret
cli
lea
pusha
leave
lods
or
cli
pop
aaa
and
push
add
shll
in
shl
cmp
xor
loopne
movl
mov
sub
add
hlt
dec
jge
cli
ja
and
arpl
jmp
xor
in
add
add
seto
loopne
sbbb
orb
mov
mov
inc
call
jp
int
decb
xchg
xchg
mov
push
dec
add
pop
xor
add
std
jg
xchg
jge
rolb
add
pop
ja
jae
test
dec
cmp
data16
fsubl
sbb
push
jmp
add
push
js
fsubl
testb
mov
std
mov
out
push
or
sbb
sti
negb
cli
imul
shl
lods
cli
arpl
xchg
rcll
je
xchg
pop
fadds
daa
inc
in
add
add
add
jp
dec
cwtl
push
add
testb
xorb
pop
jnp
cli
fisubrl
xor
incb
lock
dec
lock
mov
cld
je
rcrl
gs
or
pop
dec
and
xchg
in
je
sar
lea
jns
inc
mov
add
add
fisttps
mov
shlb
test
cmp
jns
mov
inc
xchg
or
in
jmp
add
loope
sub
outsl
inc
xchg
jnp
hlt
outsb
sub
pop
xor
jmp
xor
inc
add
std
sti
std
inc
out
mull
add
jmp
in
ret
add
jmp
add
add
xor
jb
enter
dec
inc
bound
xor
fs
jge
loope
hlt
mov
in
inc
aaa
dec
lret
ss
shlb
inc
lock
sub
ss
inc
ljmp
int
sbb
jl
ljmp
in
jb
call
test
les
pcmpeqw
mov
jg
pop
sti
xor
add
add
mov
add
or
and
inc
pop
in
hlt
lods
add
jne
jmp
or
loope
test
jp
ret
add
mov
sti
adcb
cmpsl
push
lret
ret
hlt
xchg
add
sar
mov
add
and
clc
mov
dec
addr16
add
add
inc
dec
sti
pop
push
das
add
mov
mov
mov
fistl
xchg
aas
ror
cmp
lea
out
jbe
jmp
push
dec
in
outsl
pushf
mov
lcall
cmc
call
xor
jg
out
dec
inc
cld
int
jge
fisubrs
faddl
add
add
mov
add
inc
aaa
inc
jb
loop
or
add
mov
clc
int
mov
cmpsb
jnp
cld
insl
adc
sti
mov
cli
and
fsubl
in
add
cld
je
int
les
ljmp
int3
and
adc
fcomps
cmp
gs
ja
sti
js
fnsave
add
add
xor
cmp
loope
in
or
stos
dec
int3
add
inc
xchg
les
rorl
repz
out
add
sbb
lcall
add
les
xchg
or
add
jmp
ss
jno
mov
stc
or
pop
shlb
adc
inc
ljmp
int3
xchg
add
hlt
jns
xor
dec
clc
testb
or
aam
xchg
and
loopne
sub
icebp
repz
inc
cmc
ja
fsubr
jbe
fsubr
jbe
loopne
jbe
in
dec
sub
inc
cmpsl
repz
jne
cmp
add
mov
loope
incl
cmp
mov
inc
fadds
add
sti
testb
adc
pusha
mov
inc
fdiv
cmp
jne
mov
in
add
sbb
jp
jecxz
jbe
add
mov
inc
repz
inc
loopne
lds
fdiv
cli
addb
dec
fmuls
testb
cli
xor
sub
subb
lret
shll
adc
cmpsl
or
add
add
mov
dec
push
not
jbe
call
fdivrs
repnz
dec
psadbw
sbbl
inc
xlat
js
lret
jl
xlat
push
add
add
add
jge
mov
sbb
dec
mov
dec
dec
sbb
pop
outsb
xchg
in
std
jno
in
mov
call
out
roll
add
filds
mov
push
sarb
call
je
jg
hlt
inc
ja
lock
inc
enter
out
jb
adc
lea
xchg
sti
inc
dec
or
and
sti
mov
or
jle
or
pop
mov
lret
dec
mov
xor
push
cwtl
fcmovnbe
pop
jmp
inc
or
outsb
inc
add
add
test
ret
in
mov
ficoms
pop
inc
fiadds
sub
mov
mov
jg
mov
clc
call
orb
sbb
adc
es
adc
fiaddl
das
sbb
ret
inc
mov
inc
call
mov
xor
add
clc
pop
adc
push
xchg
mov
inc
ljmp
pop
aas
imul
adc
sbb
pop
inc
test
insl
lcall
out
add
xor
mov
das
sbb
xchg
sub
cmpsl
push
imul
cmp
mov
push
out
mov
mov
inc
or
decl
nopl
incl
add
jo
push
mov
adc
or
or
mov
mov
jns
fwait
cmc
dec
xor
cmp
or
cli
lcall
mov
xor
inc
sbb
lar
mov
add
iret
adc
pusha
mov
pop
add
mov
ret
mov
xchg
cmp
jb
inc
negb
mov
add
add
jbe
xchg
inc
or
je
ret
popa
addr16
xchg
cmpl
popa
jne
aam
add
imul
stc
stos
xor
cmp
stc
sahf
cmp
mov
xor
fucomp
divl
nop
mov
sub
sbb
and
hlt
nop
ret
add
add
daa
push
jmp
mov
or
add
testb
mov
mov
mov
fimull
xchg
mov
in
imul
add
in
mov
xor
in
imul
dec
mov
clc
jmp
fcomps
lcall
jns
lock
jnp
clc
and
add
add
testb
add
xor
rcr
cwtl
sbb
ljmp
add
adc
orb
aaa
movsb
mov
jmp
inc
or
call
imul
jle
call
mov
mov
cld
cs
movsl
mov
xchg
xor
add
arpl
aaa
mov
div
mov
in
ret
jno
sbb
add
cmc
cmp
and
and
jnp
outsb
jmp
sbb
test
daa
hlt
shlb
add
stos
and
int3
aad
jne
aaa
je
inc
adc
cmp
dec
or
sbb
or
jbe
in
add
add
sarb
add
sbb
dec
add
imul
and
sti
lea
xor
stos
aaa
dec
cld
add
dec
fsubr
loope
cli
jmp
add
jmp
push
bound
push
sahf
pusha
rcr
pusha
mov
mov
xchg
scas
pop
mov
pop
xchg
pop
shll
lods
pop
xchg
aam
shll
push
inc
xor
or
aaa
add
jmp
arpl
daa
nop
adcl
push
dec
loop
ss
ljmp
dec
push
fsubl
je
push
cmp
mov
cmp
lds
sub
sbb
mov
add
movsl
test
int
mov
xor
int
dec
out
mov
jge
mov
imul
push
outsb
push
sarb
call
xor
and
jno
popf
lods
pop
mov
ret
jo
mov
sub
mov
push
rorl
mov
incl
cmpl
push
dec
cs
sub
add
aaa
loopne
outsl
push
fldt
jne
mov
sbb
sub
call
cmp
jmp
mov
jl
lahf
shl
cmc
add
sub
push
mov
lcall
mov
add
cli
sub
jb
fldl
inc
jae
test
mov
stos
jle
icebp
inc
push
add
add
pop
data16
in
jmp
mov
xchg
pop
add
test
jl
call
in
add
add
test
adc
ds
dec
testl
add
add
add
mov
or
lods
ret
adc
iret
inc
add
ja
ffreep
jae
inc
dec
adc
push
or
fs
jmp
add
add
shl
lods
ret
mov
adc
add
cmpl
jmp
dec
xor
sub
inc
or
sti
jae
fcompl
pop
or
push
negb
and
mov
das
inc
and
pop
in
xchg
sub
xchg
mov
testl
adc
add
mov
push
add
inc
xor
movl
sbb
mov
fmull
add
mov
cli
mulb
push
sub
es
inc
or
sar
sub
daa
and
and
and
pop
pop
sar
add
push
insb
dec
push
push
pop
inc
sub
into
adc
add
mov
mov
sbb
add
mov
or
mov
aad
jae
jl
into
adc
add
mov
sbb
sub
mov
jmp
std
arpl
and
add
lods
iret
sbb
add
stos
add
adc
mov
pop
sbb
add
out
jp
aaa
push
sbb
add
das
mov
jno
mov
cli
cld
and
jmp
pop
pop
cmc
mov
in
cmpsb
pop
jmp
pop
sahf
pop
jmp
dec
pop
jmp
adc
add
dec
jl
cwtl
dec
mov
mov
out
jnp
test
add
test
leave
or
mov
call
add
add
pop
sti
ror
sti
shlb
gs
cmp
cmp
mov
mov
je
dec
divl
jb
or
jnp
je
das
add
sbb
roll
addb
lcall
dec
sbbl
dec
mov
bound
ds
inc
fisttps
jne
je
test
add
add
add
adc
lahf
arpl
test
test
nop
ljmp
push
push
fcmovb
dec
mov
addr16
cmp
pop
jp
psadbw
add
cmpsl
xchg
inc
iret
imul
mov
ret
inc
mov
jl
mulb
or
rcll
and
aaa
fwait
jae
repz
cli
add
add
and
stc
cmpsl
and
mov
orl
es
divb
mov
add
jnp
stos
mov
mov
in
jge
xchg
mov
push
adcl
sub
cli
mulb
mov
icebp
rorb
or
or
ss
add
subb
imul
add
add
movsb
gs
sub
gs
in
jnp
add
test
icebp
mov
les
mov
stc
pop
jmp
add
loope
mov
icebp
jg
pop
jmp
and
push
je
xchg
mov
or
ljmp
sti
adcl
adc
subb
mov
xlat
or
add
jmp
out
push
sub
sti
mov
ljmp
iret
xor
pop
lock
mov
mov
pop
bound
pop
or
xor
mov
add
jmp
add
shll
loopne
js
push
pop
icebp
mov
in
shl
add
mov
add
and
adc
dec
add
inc
mov
add
sti
pop
ror
add
inc
test
cmc
or
inc
rcll
jne
pop
lods
ret
shrl
rclb
push
dec
add
decl
cmc
jne
pop
xchg
ret
mov
jle
and
or
pop
add
add
sub
add
add
inc
add
add
orl
push
mov
mov
cmc
xlat
stc
mov
lea
jge
push
dec
push
mov
xor
clc
jg
cmpsl
jle
jo
or
add
notb
add
and
or
pop
stos
pop
xor
or
inc
aad
adc
xchg
decb
jae
sti
jmp
sbb
adc
add
imulb
adc
sub
int
or
ljmp
jl
sbb
adc
and
jae
sbb
call
jge
mov
xor
add
das
add
xor
daa
cmp
add
inc
scas
cmp
rcl
test
fnstcw
add
add
jmp
add
test
cs
jns
adc
add
mov
and
cmpl
and
or
push
jmp
mov
imul
ds
xor
jb
jmp
mov
fstl
popf
adc
int
push
insl
sub
pop
jmp
popa
cmp
ja
stos
cli
gs
subl
add
sbb
push
lods
or
add
jmp
aaa
scas
cli
jmp
testl
int3
call
rorl
insb
mov
add
fldl
repnz
and
pop
mov
dec
push
cmpsl
sar
jbe
or
add
jmp
cli
and
aaa
lds
ffreep
stc
push
jbe
or
arpl
add
fbstp
les
add
push
and
iret
jb
mov
in
movsb
roll
scas
push
add
test
mov
sarb
jecxz
lcall
popa
adc
incl
test
cli
jmp
inc
outsl
sbb
jae
loope
loop
cltd
jb
rcrb
add
incl
les
dec
call
add
add
ja
or
xchg
sub
fsubrp
mov
or
push
add
shll
or
pop
mov
notb
add
xchg
int
adc
cwtl
jns
sbb
cmp
jmp
mov
sbb
mov
xchg
add
dec
cs
insb
in
test
sbb
jbe
pushl
das
int3
or
sidtl
jne
cli
jle
xchg
cmpsl
or
loopne
dec
add
aaa
mov
icebp
scas
pop
inc
jbe
test
add
mov
adc
pop
xor
out
scas
sti
cmp
ljmp
jge
or
cmp
add
mov
gs
xchg
mov
add
mov
fucom
stc
xor
lock
test
andl
cmc
js
mov
push
loope
das
add
add
dec
push
ds
adc
lds
add
jmp
js
lock
lea
mov
xchg
negb
icebp
cltd
outsb
cmp
shr
inc
or
sti
stos
cli
jb
add
out
addr16
sldt
jne
pop
and
subl
add
je
sti
mov
ret
jbe
mov
mov
cltd
punpckhbw
call
bound
loopne
push
test
jmp
scas
hlt
rorb
in
pop
cmpsl
iret
mov
jae
adc
adc
jl
xchg
sbb
add
add
xor
lcall
add
ljmp
inc
int
fld
inc
pusha
stos
pusha
rcr
add
cmp
or
icebp
lret
add
scas
cmc
mov
shlb
cmpsl
jmp
jns
pop
fnstcw
dec
sub
outsb
or
cmpb
jae
jnp
sub
testb
dec
clc
inc
fs
test
out
add
dec
test
pushl
std
addl
decl
in
or
mov
or
shl
lods
addr16
or
dec
cltd
lods
je
jmp
mov
notb
inc
jae
xchg
sbb
jp
cmpsl
dec
mov
stc
jns
les
jp
push
scas
ja
pop
sbb
and
cwtl
incl
add
aaa
js
rorb
rcl
inc
dec
cwtl
sbb
or
jae
testb
js
rorb
xor
adc
add
in
jl
add
add
inc
gs
pop
fucomp
insl
das
out
cwtl
shlb
movsl
fs
cld
jl
add
add
out
mov
imul
add
push
push
inc
xor
jge
cmc
cltd
ds
movl
add
add
mov
add
jns
add
sti
clc
lods
mov
bnd
and
add
inc
cmp
ljmp
ljmp
xor
movsb
add
and
mov
clc
outsb
cmp
xor
xchg
hlt
xchg
ficoml
rolb
add
fimuls
dec
sub
add
and
in
aad
bound
add
imull
add
cmc
sbb
jg
add
pop
inc
add
add
test
mov
add
and
sbb
jbe
hlt
lcall
cld
popa
add
xor
call
cld
incl
add
jge
inc
cmp
test
jmp
sbb
jnp
lahf
jmp
jg
sub
jne
jg
mov
jmp
dec
cmp
mov
jnp
jp
add
bound
pop
mov
inc
ret
dec
lea
dec
mov
call
insb
aam
mov
mov
dec
testb
add
adc
or
adc
jmp
adc
add
push
cs
cltd
jne
fimuls
aaa
in
into
je
add
push
adc
leave
repz
push
shll
outsb
test
mov
xchg
push
add
cld
fidivl
push
pop
xchg
ljmp
add
lock
ret
fldenv
imul
aaa
aad
inc
js
push
dec
jp
faddl
cltd
mov
cld
inc
rcrl
jecxz,pn
mov
loope
mov
es
dec
and
jno
gs
jge
sub
jbe
lods
add
push
inc
add
js
sub
subb
add
incl
lahf
add
add
push
pop
das
and
jne
lods
lds
ds
loope
and
jge
cmp
xor
loope
lods
cmc
add
mov
mov
push
push
mov
dec
lea
aaa
pusha
rcr
cmp
fdivrl
push
xchg
test
ss
mov
pop
mov
add
mov
and
pop
in
lcall
mov
lds
mov
out
test
jbe
fwait
sub
int3
xor
adc
cwtl
int3
pop
test
xor
sub
jl
cwtl
xor
jmp
adc
jae
jl
mov
imul
mov
jns
add
psrlw
incl
add
sub
push
call
addb
inc
or
and
push
cvtdq2ps
loope
lock
adc
iret
or
iret
sbb
and
jnp
xorb
push
mov
dec
mov
in
cmpsl
add
add
and
or
sti
lret
adc
jg
fwait
mov
pop
jnp
push
dec
les
mov
mov
and
jne
add
in
lods
stos
lcall
push
cltd
jae
sbb
and
repnz
imull
cmc
xchg
mov
cmp
jne
dec
outsl
insl
push
mov
cmp
add
leave
rorl
cmp
add
mov
xchg
lahf
adcl
insl
popf
add
test
cmp
gs
add
dec
cmp
fnstcw
in
testb
push
popf
sti
das
in
jmp
add
cltd
push
jno
icebp
jl
add
loop
pushf
jno
daa
fdiv
scas
mov
or
add
or
add
test
lods
out
testb
pushf
adcb
dec
sbb
add
inc
dec
das
out
sldt
add
popf
lcall
dec
cmpsb
push
push
out
lea
cli
and
inc
add
or
mov
ret
popf
jnp
fiaddl
cli
es
int
fsubs
mov
adc
or
jb
lods
xchg
icebp
xchg
adc
and
mov
cli
jmp
mov
call
add
add
add
bound
mov
je
fcoml
je
fcomi
mov
pusha
cwtl
push
push
test
jo
dec
add
mov
arpl
add
clc
adcl
inc
cmp
aad
mov
inc
in
testb
rclb
add
nop
add
pop
adc
add
fcmovbe
adc
sub
add
add
inc
sbb
or
pop
inc
loopne
mov
or
or
inc
in
sbbl
pop
bndldx
jl
je
push
dec
test
int
stc
call
add
add
push
xchg
les
mov
dec
imull
jne
sahf
or
stc
mov
add
mulb
cmp
jno
sub
and
adc
jmp
jbe
add
add
insl
stc
push
adc
jae
icebp
xchg
test
ljmp
sti
xchg
test
decl
push
sti
jmp
or
mulb
mov
or
pop
dec
fmulp
aam
jmp
and
testb
add
adc
lcall
jne
call
jmp
xchg
or
cmpsl
add
add
out
repnz
pushf
fucom
lret
inc
rcrl
inc
fnstcw
adc
lock
cmpsb
in
fldlg2
nop
inc
pop
lcall
movsl
out
xlat
fsubrs
xchg
das
cld
or
loopne
lret
push
cmc
jp
cwtl
arpl
xor
inc
add
jmp
aaa
ficoms
add
stos
out
lods
xchg
cli
fiaddl
add
mov
cs
add
rcll
inc
add
sub
xchg
dec
adc
xchg
jb
mov
push
orb
test
sub
cli
rcrb
pop
int
ljmp
sub
or
mov
adc
xchg
xor
stc
jle
pop
js
mov
imul
jbe
adc
add
add
int3
bound
cmp
roll
mov
mov
pop
cmc
call
out
call
push
inc
mov
dec
fistpl
push
mov
inc
mov
ja
pusha
inc
lahf
cli
aaa
push
into
test
push
dec
hlt
mov
leave
xchg
lret
inc
mov
dec
add
les
test
pop
repz
cmc
ljmp
push
add
push
ja
add
pop
arpl
xchg
add
packsswb
ja
add
pop
mov
int3
adc
cmp
mov
push
jge
and
sub
push
jge
mov
fwait
ds
iret
mov
mov
add
test
icebp
aas
testb
cmpsb
nop
cmpsb
mov
testb
xor
ret
add
add
cmpb
in
stos
in
dec
popf
xorl
cld
xchg
test
dec
imul
adc
mov
adc
sbb
inc
fcmovb
cmpsb
mov
js
sbb
lahf
cld
jl
add
add
fxtract
mov
adc
fnsave
sbb
adc
xchg
adc
jo
divl
add
add
cmpl
jge
pop
mov
call
or
xchg
testb
inc
sbb
insl
inc
repnz
xchg
push
xchg
fs
lds
outsb
flds
aas
loope
push
or
sub
test
fmull
ljmp
jge
imul
fcompl
shl
xor
sbb
xchg
cli
fs
mov
add
cli
add
aas
fstl
imul
mov
cli
gs
sbb
into
xchg
jo
jb
xchg
dec
sbb
jge
in
aaa
scas
cmp
adc
jb
and
dec
jle
jge
aad
sub
add
imul
pop
in
xchg
push
xchg
mov
push
jae
aas
inc
and
hlt
in
add
aad
push
add
add
or
cwtl
test
jge
jnp
sbb
stos
cmc
hlt
dec
and
cli
jl
movsb
iret
cli
daa
push
mov
push
call
push
shlb
int
call
adc
jae
jl
stc
push
pop
mov
decl
pushf
push
jmp
fs
popl
dec
call
aam
add
ret
std
pushl
les
add
sub
or
jmp
cmp
sbb
test
in
aas
mulb
or
pushf
cli
adc
out
push
ljmp
add
mov
add
sub
fwait
cli
jge
add
inc
sar
ret
in
pop
sub
mov
add
xchg
ret
aas
notb
or
negb
ret
add
mov
push
insl
lods
sub
pop
push
pop
ret
shr
popa
test
int
pop
or
sti
ret
mov
sbb
cmp
in
add
jmp
xlat
and
movsb
ljmp
cli
xchg
psadbw
outsb
xchg
movsb
xlat
mov
ficomps
cli
andl
in
add
fwait
sar
pop
cltd
add
add
or
testb
ret
and
push
out
cmp
insl
inc
rolb
dec
fimull
fwait
mov
jge
or
pop
xchg
sbbb
xor
gs
call
add
cmp
mov
cli
sub
call
push
mov
je
pop
cwtl
jmp
sub
pop
jmp
add
add
jns
jb
add
jg
stos
das
push
add
add
jmp
cmc
add
in
paddsw
cmp
cli
mov
xor
jnp
out
push
call
repnz
lds
dec
pusha
or
cmc
inc
cmp
cmp
push
jns
add
add
out
cli
imul
mov
adc
or
ljmp
in
or
or
mov
mov
cmp
fldpi
in
in
fcmovnu
add
add
push
cmp
mov
inc
adc
add
inc
hlt
sti
ja
jns
test
testl
or
mov
icebp
and
pushl
add
neg
inc
add
sbb
outsl
sub
sub
and
je
jb
add
cltd
jp
stos
nop
xchg
je
jb
add
cltd
xchg
inc
movl
cmp
mov
incb
cmc
data16
negl
xchg
adc
mov
add
pop
inc
adc
pop
repz
add
push
xor
mov
out
cltd
mov
adc
es
invd
adc
or
or
add
daa
add
jmp
lcall
ret
adc
das
lcall
shrb
sbb
lcall
sbbb
imulb
add
faddl
pop
cmc
mov
pop
fstl
mov
out
mov
mov
int3
adc
stos
pop
pop
jmp
stos
pop
mov
pushl
popf
cmpsl
add
xchg
xor
add
les
xchg
jge
hlt
fs
adc
gs
jmp
xor
outsb
cli
mov
mov
cmp
es
xor
psubsw
inc
pop
pusha
add
mov
std
test
mov
add
popf
scas
or
xchg
insb
test
sbb
sbb
xchg
andl
insl
mov
std
add
jno
stc
push
jnp
hlt
push
cmp
aam
mov
xchg
push
pop
fs
sub
rorb
mov
push
mov
fcomps
inc
xchg
cld
je
jle
add
pop
mov
mov
pop
les
push
mov
add
shl
xchg
dec
jae
ds
sti
jmp
test
mov
movsb
xchg
pop
imul
clc
push
shl
cmp
test
ljmp
cmpsl
jge
or
cwtl
sub
jmp
jae
testb
inc
cltd
sti
jp
or
xchg
je
jae
je
add
addb
std
jns
jge
outsb
cltd
jl
add
ss
push
pop
xor
dec
mov
cmpsb
mov
xchg
shl
loopne
cwtl
cli
cwtd
xor
pusha
mov
jmp
jle
incb
lcall
inc
xor
jmp
xor
je
xchg
ljmp
mov
add
add
add
push
cmc
add
mov
mov
mov
cmpsl
add
add
jg
add
leave
pop
inc
jle
ror
aas
mov
jg
adc
fidivrl
add
jp
popa
sub
in
jmp
ret
movsl
std
and
test
adc
xchg
in
mov
add
add
mov
add
jp
bound
fmull
mov
subb
cmp
pop
mov
adc
rorb
je
cli
jmp
dec
addl
call
mov
addb
jno
stos
fcmove
pop
cmpsl
bound
add
clc
lods
mov
divl
cltd
adc
test
call
cmp
add
jb
mov
test
testl
ljmp
div
add
dec
inc
sub
test
adc
xor
cmpsb
jnp
jns
jp
shlb
in
lock
push
je
in
je
jo
cmp
test
or
or
test
in
int
loope
add
add
jae
add
cli
cli
in
insb
sbb
lret
dec
add
lcall
fsub
loop
std
ljmp
or
ret
inc
jae
out
pop
je
push
ja
cli
fistpll
hlt
inc
ret
imulb
cmpsb
in
cltd
incb
leave
dec
movsl
dec
in
jnp
add
pushf
bound
add
outsl
push
bound
dec
pusha
out
jge
stc
push
in
fcomps
mov
xor
push
jae
push
out
cmp
adcl
bound
pop
or
leave
popa
jge
int3
popa
aaa
jns
popa
in
pop
and
inc
fcomip
repz
jae
push
dec
stc
movsb
sbb
ss
mov
into
add
dec
jns
add
add
notl
loopne
xchg
pushf
dec
fdivs
xchg
js
loope
fnstenv
add
add
sbbb
xchg
mov
cmpsl
xchg
inc
rcll
push
inc
sbb
lret
jno
rolb
xchg
xchg
lock
ret
cmp
aam
andl
pop
fildll
imul
or
stc
jle
add
mov
jne
xchg
jne
mov
jno
or
call
out
mov
test
and
cli
ss
or
xchg
jmp
test
ret
ja
adc
fs
ret
jno
push
xchg
jno
call
or
dec
dec
push
adc
repnz
add
jae
scas
jg
xchg
cmc
add
repnz
nop
insl
movl
adc
add
add
lar
cli
xor
insb
sbb
imul
push
out
faddl
add
int
mov
pop
jno
inc
out
lret
out
jmp
push
lcall
xchg
sar
jnp
hlt
add
add
imul
rol
fs
out
jecxz
and
or
or
shll
out
call
stos
out
repz
negb
sub
jbe
out
lods
cli
stc
fistpl
inc
mov
sbb
incl
dec
jne
repnz
inc
add
add
mov
jae
xchg
sub
sub
gs
adc
movsb
add
cli
test
push
add
ja
stos
add
cltd
lds
movsb
out
sbb
or
sub
jne
out
inc
or
rol
sub
je
add
orb
mov
fidivl
jl
add
inc
add
add
ja
mov
mov
into
testl
repz
in
jmp
dec
jle
inc
pop
mov
sub
pushf
mov
cmp
sbb
add
sbb
and
testb
dec
imul
in
add
pop
add
rclb
call
sarl
ljmp
call
add
add
xchg
push
lret
or
sbb
clc
cli
mov
incb
js
ret
fdivs
xorl
cltd
repnz
jle
fsin
mov
adc
add
je
incl
jnp
es
add
or
cmp
sti
fsubrl
testl
clc
cmp
out
add
popa
mov
mov
ret
add
mov
cmpl
inc
pcmpeqw
cmp
lock
jmp
xor
or
jmp
imul
cmp
fidivl
lcall
add
jmp
imul
xchg
or
mov
add
jmp
loopne
push
test
call
lods
call
fisubrl
xrelease
call
pop
ret
or
push
mov
and
adc
call
pop
and
push
cli
jp
adc
push
adc
adc
push
frstor
dec
insb
mov
out
xchg
pop
mov
push
jmp
add
test
push
lock
add
add
add
dec
push
add
pop
sbb
ss
ret
cli
loop
pop
mov
incb
cmc
xor
xorl
rorl
mul
or
jbe
imul
jle
add
add
mov
sub
xor
int
and
adc
mov
add
fistpll
sar
testl
add
xchg
outsl
aad
pushf
fisubs
mov
mov
fbld
and
aam
std
jg
pmulhuw
call
cld
mov
xchg
int3
dec
and
fucomip
xor
jg
rcrl
adc
adc
mov
lock
testb
cli
mov
pushl
xchg
rolb
pop
jmp
xor
and
add
add
pop
aaa
mov
adc
fmuls
dec
sbb
and
insb
adc
pushl
scas
add
stc
jle
sbb
addl
data16
shrl
sbb
imul
jle
repnz
imul
call
jmp
pop
sub
push
jg
xchg
cmc
jle
or
mov
xor
loop
lcall
adc
das
sbb
and
pop
add
xlat
inc
jp
clc
ja
sbb
adc
mov
add
insb
push
ret
xchg
inc
push
and
or
dec
mov
jl
xor
stc
stc
adc
andb
add
add
insb
push
ret
add
add
and
mov
outsb
lock
mov
jl
xor
jg
mov
shll
out
sub
jmp
sti
pop
outsb
jle
or
bnd
push
stc
test
outsb
es
jbe
and
shr
xor
insb
jle
iret
sbb
fidivrs
xchg
sbb
cmp
jl
jg
inc
testl
add
ja
decl
mov
jb
xchg
shr
cmp
jle
out
test
and
sbb
ljmp
div
mov
imul
mov
cld
mov
andl
jge
shll
xchg
sarl
adc
ffreep
lret
xchg
in
mov
test
push
inc
testb
add
add
cltd
jns
adc
sbbb
in
mov
test
ss
testb
clc
imul
add
cmp
testb
inc
mulb
and
imulb
sub
divb
and
divb
and
add
xor
in
xor
shll
add
sub
add
daa
mov
add
mov
push
daa
add
add
push
jb
cli
jecxz
je
sub
adc
fimuls
push
jb
sub
pusha
fldenv
pusha
shll
jo
and
jo
and
arpl
add
push
pop
std
or
fsubrs
rolb
dec
je
aas
enter
out
sub
jl
add
testl
or
add
jae
add
add
pop
test
or
mov
or
pop
or
mov
jnp
inc
cmp
add
setbe
adc
addl
divl
inc
inc
sub
divl
sub
cmp
or
sbb
mov
pop
xor
sar
gs
std
jg
fiadds
pop
test
cmc
inc
add
add
jle
add
addr16
pop
jnp
stc
incb
repz
imul
sub
incl
movsl
jg
pop
repz
pushl
cmc
or
repz
fsin
je
cld
cli
jne
clc
cli
insb
imul
mull
and
out
cld
shll
xchg
jmp
add
addr16
add
add
bound
stc
imul
out
ljmp
imulb
idiv
add
jle
or
add
cmc
or
mov
mov
js
add
pop
das
fimull
aaa
rclb
into
mov
test
mov
jns
sarl
bswap
add
mov
gs
add
adc
add
mov
leave
subl
in
add
subb
testb
lret
nop
xor
ja
test
or
mov
add
test
fistpl
out
cmc
add
scas
cli
cmp
xlat
paddd
loopne
out
call
add
lods
mov
outsb
mov
cli
push
pop
call
add
sti
enter
or
jmp
cmp
and
jge
and
in
leave
fbstp
sub
push
push
div
add
or
lock
mov
add
lret
push
add
add
mov
push
sub
or
xor
or
jl
cmp
add
jbe
add
add
daa
mov
mov
addl
inc
jg
xchg
addl
rorl
adc
add
dec
cmp
dec
jle
sbb
cmp
sub
movsb
push
push
adc
aas
push
xchg
shl
rclb
dec
or
add
sbb
add
add
sub
add
leave
cli
leave
out
arpl
add
call
rorb
or
or
mul
jl
jmp
mov
sti
mov
in
adc
or
addr16
inc
imull
cmp
adc
and
clc
add
ja
std
xchg
add
mov
cmp
ret
add
out
ret
or
add
addl
adc
js
int3
jle
add
fld
push
ret
add
jmp
leave
out
sub
mov
push
inc
inc
std
add
adc
gs
jae
sar
jae
jl
in
pop
orl
mov
jnp
in
idivb
mov
sbbb
movsl
add
add
testb
dec
mov
jmp
insl
add
cmp
jae
out
idivb
sub
testb
imul
roll
fmull
jmp
lock
call
sti
or
pop
out
add
cmp
rol
out
jae
popa
push
and
pusha
mov
cli
call
imul
add
cmp
add
or
or
cmc
xor
imul
ja
clc
mov
xchg
inc
popa
push
and
cmp
mov
inc
fldl
add
mov
sti
xchg
or
out
add
nop
cmp
roll
mov
stc
jge
xor
addl
cmp
or
add
iret
jle
and
add
lcall
xchg
jg
jl,pn
maskmovq
divl
jg
pop
addl
pop
add
sarb
xor
inc
adc
xchg
mov
xor
ja
pop
add
call
cmp
or
addr16
jg
or
jl
adc
jmp
imul
cmp
add
decl
and
and
bound
add
popa
cmc
test
jle
mov
loop
addr16
popa
outsl
mov
cmc
lret
lahf
mov
js
and
test
add
mov
cltd
std
or
out
or
pusha
inc
inc
divl
pop
in
addr16
jg
insl
or
cmp
repz
add
add
add
in
mov
push
shlb
add
addl
loop
add
jne
or
pop
out
add
or
popa
mov
hlt
jl
inc
in
and
loop
xorl
icebp
test
sti
call
inc
aaa
pop
jmp
orb
gs
repz
add
hlt
lret
in
imul
add
hlt
fcmovne
in
test
or
add
incl
and
xlat
in
addr16
scas
xor
roll
inc
cli
addr16
cmpsl
xor
add
xor
addr16
scas
xor
adc
ss
dec
adc
std
mov
or
std
test
repz
add
das
in
out
aaa
ret
and
ret
adc
stc
aaa
ret
add
add
push
ret
outsl
in
aaa
ret
aaa
ret
or
std
es
adc
jmp
xchg
in
mov
add
add
jg
and
aad
stc
push
xchg
in
jp
adc
jne
push
inc
call
ss
add
pop
jge
add
mov
cmp
add
test
add
add
add
xor
add
jg
pop
jo
movb
add
adc
jmp
dec
in
cld
push
push
mov
icebp
push
cwtl
cmpl
lahf
add
xorb
je
paddsb
je
xor
xchg
std
mov
shl
push
pushl
add
pop
fdivrs
ret
jo
inc
call
push
jg
pop
jmp
jne
popf
mov
call
pop
jle
add
add
pop
jns
in
push
jg
sbb
test
pushl
out
add
xlat
jbe
dec
pusha
jle
negl
dec
in
push
jg
and
test
jb
pushl
dec
jle
notl
pop
jmp
je
sbb
aad
insl
add
cli
pop
mov
pusha
mov
call
sbb
add
pop
les
cmp
enter
pop
or
ljmp
orl
cmp
jbe
adc
adc
pop
leave
sub
bnd
cli
call
or
filds
testb
or
add
inc
jns
in
mov
push
loopne
idivb
pop
add
add
add
jns
add
push
add
out
ret
ret
inc
xchg
mov
addb
ja
out
xchg
out
jmp
and
ret
in
jge
je
lea
mov
hlt
punpckhwd
jae
jne
pop
sbb
inc
inc
call
xor
loop
adc
or
add
add
stos
add
pop
and
addl
cld
incl
incb
or
sub
mov
addl
ja
pop
lds
ds
add
cmpl
or
pop
jg
and
jmp
pop
ud0
xlat
add
lds
add
sbb
jmp
dec
out
cvtps2pd
idiv
jo
inc
add
jg
or
test
adc
cmc
pop
add
cli
call
fsubrl
inc
idiv
insb
mov
push
jg
push
add
xor
stc
decl
mov
sbbl
cwtl
dec
mov
nop
imul
add
cwtl
lock
sub
cld
decl
fdivrs
icebp
in
idiv
mov
inc
idiv
outsw
icebp
push
decb
not
jp
or
cmpsl
fmull
idivl
gs
icebp
add
add
jmp
out
inc
stos
add
push
cmpsb
cld
mov
jns
stc
and
xor
sub
gs
add
adc
jne
add
pop
jbe
or
xchg
fmull
pop
adc
add
inc
mov
cld
xor
lods
push
shr
pop
stc
insb
xor
jmp
add
adc
adc
test
add
imul
loop
fscale
hlt
adc
clc
ljmp
add
jmp
or
add
cmc
inc
inc
jmp
add
xchg
pop
mov
scas
idiv
call
das
mov
aas
movsb
add
jmp
jne
dec
test
leave
adc
mov
idivl
sbbb
cli
out
jne
shlb
cld
das
stc
and
fisubrs
stc
mov
out
lock
mov
data16
cmc
lea
mov
cli
jmp
add
add
repz
mov
bnd
les
add
call
popa
incb
or
add
mov
pop
jp
into
cmp
push
shrb
testl
pop
add
sbb
add
popa
incb
adc
jp
add
add
mov
adc
cli
push
add
add
xor
mov
clc
inc
fsub
dec
add
or
add
pop
sbb
jne
fsubrs
jmp
push
dec
inc
hlt
popa
pop
iret
sti
push
stc
xor
dec
cmc
xlat
imul
xchg
mov
add
je
xlat
imul
fdivl
inc
hlt
jb
cmpsl
sti
push
stc
mov
jl
cmc
xlat
imul
add
sarl
jg
cwtl
je
xlat
add
fdivl
notb
inc
hlt
inc
push
jg
push
jg
testl
pushl
add
pop
testb
insl
or
pop
dec
aaa
add
xchg
add
jl
stc
arpl
sbb
aad
push
inc
inc
jp
jno
jnp
clc
sti
jp
sbb
sub
jle
fnstcw
or
int3
add
jnp
imul
adc
sti
call
div
ds
add
pop
cmp
sti
call
push
adc
insb
outsb
cmc
add
sub
jmp
jno
add
cmc
adc
loopne
and
sarb
int
jns
inc
call
jne
or
add
add
ret
adc
and
cmp
jmp
shrb
adc
repnz
dec
bound
out
add
insl
dec
add
ficoms
call
or
cli
out
jne
and
cmc
pop
xchg
cmc
add
cmpsl
cmp
sub
mov
incl
jmp
add
add
imul
sti
sbb
rolb
push
test
clc
decl
cmp
aad
jmp
add
and
sub
nop
jp
add
incl
mov
in
or
dec
push
jmp
push
inc
jae
sbb
cld
or
dec
adc
lcall
inc
sbb
jp
add
add
or
fscale
sub
not
pop
add
pop
jne
ljmp
cli
stc
loope
std
outsl
xchg
cli
pop
jne
decl
add
addb
pop
stc
or
pushl
sti
or
std
push
mov
or
push
add
push
call
jbe
push
or
std
push
xlat
gs
icebp
ret
xor
notb
testb
add
push
jns
repnz
incb
call
or
das
cltd
fisubs
cmp
shll
add
add
push
scas
sub
call
in
icebp
icebp
pushw
popa
call
or
std
call
jp
cmc
iret
mov
call
mov
in
jns
outsl
mov
mov
add
cmpsb
es
shr
jb
inc
insl
insb
cmpb
std
jnp
add
add
pop
icebp
nopl
call
mov
in
daa
je
addr16
ja
push
xchg
popaw
xor
xor
lods
cmc
call
jg
push
jnp
cli
mov
ja
nop
sub
or
imul
pop
pop
cli
jmp
dec
cmp
call
pop
lret
or
or
pop
cli
pop
mov
nop
test
loopne
cli
imul
pop
cli
jmp
lods
stos
std
call
inc
test
add
inc
cld
addb
mov
sbb
add
add
add
push
mov
add
add
push
out
jbe
filds
orb
mov
mov
imul
add
iret
add
push
mov
pop
mov
rcl
sbb
sbb
por
decl
push
add
sarb
sbb
sbb
test
jle
imulb
adc
addr16
add
sub
push
gs
jne
cli
jmp
cmpsl
or
std
or
sbb
out
sbbl
or
add
mul
rolb
testl
in
pushl
ljmp
stos
pop
jge
test
negl
imul
pushl
add
mov
mulb
mov
add
add
push
inc
inc
notl
mull
xchg
add
dec
cmc
add
addb
or
test
xchg
inc
cmc
addr16
pop
gs
stc
mov
out
and
push
mov
adc
outsl
rclb
jmp
test
pop
loope
xor
jmp
mov
lock
add
inc
or
adc
add
addl
out
pop
out
testb
shll
add
imul
push
ss
dec
leave
test
jmp
add
cmpsl
hlt
adc
out
add
jb
or
fidivs
add
xchg
mov
mov
jae
add
out
aaa
pop
add
add
pop
jle
cmc
add
jb
sti
shrb
or
add
jmp
outsl
or
mov
or
cli
jmp
addl
xchg
or
bound
add
add
pop
cli
or
pop
sbb
movsb
ljmp
out
cli
decl
inc
or
arpl
adc
and
or
or
add
add
or
add
jl
or
jne
fdivl
xlat
not
lea
pop
cmc
mov
and
sbb
fstpl
push
xchg
push
jne
sbb
mov
push
xorb
rcl
cmc
lcall
push
sbb
push
inc
mov
xor
test
adc
mov
jns
leave
push
repnz
add
ret
inc
jmp
loope
adc
and
sarl
adc
lcall
imul
push
cli
add
popa
jle
fs
xor
sti
cmp
xchg
or
xchg
dec
mov
xchg
jnp
xchg
pusha
jge
fisubrl
or
push
into
mov
xorl
mov
loop
sub
sub
dec
push
jb
mov
pop
jnp
icebp
xor
test
jmp
test
pop
or
icebp
int3
jl
pop
adc
mov
les
add
jns
icebp
or
std
or
pop
mov
pop
dec
xchg
or
shl
outsb
mov
add
add
mov
or
lods
test
add
cld
out
add
testb
sub
out
push
lock
es
aas
jno
add
out
pmaxsw
roll
mov
push
fwait
addl
jle
out
popf
mov
cli
testb
adc
add
or
add
add
adc
repz
inc
jmp
out
mov
leave
cld
out
jbe
and
cmc
int3
sub
or
test
in
xchg
push
xor
rolb
orl
inc
pop
rcll
push
mov
sbb
je
fnstcw
add
ret
outsb
daa
les
and
or
dec
inc
and
mov
add
or
lret
addr16
push
add
mov
out
pop
cwtl
repz
sbb
cmc
orl
add
addl
mov
and
xchg
sub
or
shl
addb
and
or
lds
sbb
stos
nop
into
pop
xchg
cmp
pop
mov
decb
ja
ret
add
sahf
adc
call
ret
and
jmp
ret
adc
pushl
and
lcall
adc
incl
ret
and
inc
and
jge
lcall
jmp
je
inc
call
cmpsb
call
sahf
call
jbe
call
add
lds
adc
lds
add
cltd
and
lds
adc
lds
sub
jno
and
imul
xor
pop
xchg
sub
push
xor
lds
sbb
inc
dec
xor
cmp
sub
xor
and
sub
sbb
and
sub
adc
sbb
add
mov
jmp
or
fnstcw
add
inc
lcall
mov
push
test
mov
inc
mov
push
xchg
lahf
mov
movsl
mov
push
adc
push
sbb
mov
sub
cmp
cmp
push
pop
cmp
push
mov
xor
sbb
push
fcomps
xor
sbb
push
sub
xor
cmp
push
sub
xor
cmp
push
dec
jae
push
mov
add
add
push
bound
push
cli
jnp,pt
add
cltd
lret
jmp
hlt
les
pop
rcrb
enter
mov
sbb
test
je
test
lods
dec
push
xorl
add
pop
in
mov
lock
cmp
data16
add
out
push
aas
sub
xor
inc
mov
testl
add
mov
cmc
call
mov
pop
ret
push
and
jns
adc
cli
mov
out
inc
and
jge
or
ljmp
push
pop
popa
push
or
imul
out
push
jle,pt
push
or
icebp
lods
inc
mov
push
sbbb
jle
xor
add
ffreep
adc
fstl
dec
pop
orb
add
add
testb
jo
test
or
inc
adc
outsb
js
mov
pop
call
decb
cltd
out
imulb
data16
pop
mov
imul
in
divb
pop
inc
push
repz
shr
mov
data16
add
mov
pop
sub
je
add
icebp
add
ljmp
arpl
imul
jo
arpl
in
mov
fsubr
push
mov
mov
dec
insb
test
xchg
dec
int
pop
ret
push
cmp
add
and
fsubr
andl
adc
adc
loop
push
ja
or
adc
leave
stc
push
roll
add
stc
inc
cld
inc
int
roll
cli
nop
scas
out
pop
push
cli
mov
add
inc
jmp
cmc
stos
xchg
imul
cli
jmp
and
sbb
in
repz
xor
jl
out
sub
call
xor
add
loopne
outsl
or
cli
xor
push
je
add
add
das
xchg
imul
cli
lcall
in
popa
or
cld
fcoms
mov
jg
enter
dec
fdivrl
out
lods
jae
mov
sub
push
lods
xor
adc
jne
cmp
mov
imul
add
int3
sahf
inc
cli
mov
sarb
fdivs
or
inc
add
jne
xchg
dec
call
add
add
inc
repnz
fiaddl
push
xor
adc
push
aaa
bnd
inc
xchg
or
jge
push
test
add
pop
rcll
insl
pop
pop
inc
loop
or
arpl
je
or
cli
xor
in
pop
insl
cmpsl
xchg
shl
mov
cmpsb
push
adc
dec
mov
enter
xor
add
adc
aad
jo
mov
leave
dec
cmp
push
sub
jno
dec
nop
jg
std
or
dec
in
xchg
iret
pop
sub
mov
fldenv
lret
adc
jge
mov
fidivs
push
popl
xlat
pop
mov
dec
mov
mov
or
lock
push
sahf
add
add
dec
fisubs
sub
aaa
inc
or
jmp
in
andb
sbb
and
inc
fisttpll
gs
stos
pop
orb
sbb
mov
dec
and
popa
or
sahf
out
dec
push
rol
xchg
ret
sahf
lods
dec
push
mov
add
add
or
dec
sbb
mov
xchg
outsl
imul
or
lea
in
ret
sbb
insl
pop
dec
in
fistl
insb
mov
mov
xor
adc
dec
testl
cmp
scas
push
or
push
loope
xchg
insb
stos
push
insb
leave
mov
ds
aam
scas
and
add
add
imul
out
aam
and
push
dec
and
in
cmp
ljmp
mov
push
add
push
loopne
add
add
pop
pushw
syscall
jnp
mov
mov
mov
cmc
call
xor
cmpsl
cmc
call
pop
incl
fcomps
subb
pop
add
inc
sarb
divl
dec
xlat
xchg
pop
add
inc
xor
jns
into
push
adc
sub
fdivrl
cmp
pop
dec
pushf
pop
in
ljmp
dec
or
mov
jns
cwtl
orl
add
jae
push
adc
adc
pop
loope
mov
mov
ljmp
aaa
not
cmp
cli
jnp
add
incl
popa
add
add
aaa
mulb
jne
incl
xorb
neg
inc
mov
pop
cli
imul
jmp
insl
fimuls
push
aaa
add
ret
lods
aad
xchg
imulb
jmp
push
test
jge
inc
inc
cmp
add
js
push
adc
xchg
push
in
jbe
mov
hlt
fdiv
add
add
add
in
cmpsb
push
jp
call
test
cmp
add
pop
outsl
mov
dec
pop
cmp
push
pushf
hlt
hlt
repnz
into
inc
add
mov
mov
jns
es
ljmp
sar
add
cmc
inc
iret
push
add
outsb
test
ret
repnz
roll
cli
aam
sti
aas
jmp
jle
lahf
and
inc
dec
push
add
add
jp
test
lods
jl
popa
pushf
inc
cli
cltd
outsb
test
out
fnstcw
sub
cmpl
jns
inc
jno
inc
cli
sbb
cli
insb
imul
loopne
inc
shrl
sti
adc
inc
adc
xchg
add
inc
inc
je
nop
out
mov
call
xchg
cmc
mov
fdivl
mov
add
mov
lods
dec
push
addl
mov
clc
fcomps
adc
mov
out
je
repnz
pop
std
push
test
add
add
xchg
repnz
mov
in
cmp
lods
add
add
out
push
push
xchg
push
lods
cs
lods
adc
inc
cli
test
test
shlb
jp
add
add
pop
decb
jmp
int3
insb
imul
addl
mov
dec
cmpsb
mov
jns
pop
jp
stos
addl
rorb
mov
push
cli
cmpsb
jno
stc
pop
stos
mov
push
cli
jmp
mov
cli
jae
xlat
daa
and
ss
dec
add
add
xchg
test
add
movsl
inc
sbb
mov
xchg
add
jl
sti
push
jl
mov
pavgw
test
int
push
ljmp
pop
pop
add
add
jl
push
sub
arpl
mov
out
sbb
loope
adc
push
loop
cmc
ret
add
add
add
jne
je
inc
icebp
mov
sub
mov
mov
mov
or
pop
dec
lods
inc
lcall
popa
pop
mov
inc
dec
subl
add
xor
xchg
sub
sbb
cli
mov
pop
movsb
je
fwait
cmpsl
dec
cli
inc
and
xor
add
add
test
inc
repnz
xchg
stc
push
movsb
mov
mov
daa
adc
lods
mov
inc
jae
js
adc
rolb
lea
mov
cmp
pop
add
inc
jle
divb
dec
call
sbb
mov
pushw
jle
divb
cmpl
add
add
scas
dec
decl
scas
cmc
call
in
jbe
xor
xchg
dec
lea
mov
rorb
xor
push
jmp
dec
pop
sbb
inc
scas
outsb
or
mov
inc
pop
lea
sarb
hlt
pushl
mov
call
inc
ds
jg
out
cmc
add
add
mov
aaa
cli
ret
popf
add
stc
out
jp
add
jo
cs
cmc
sbb
rorb
fsubl
cmc
aas
test
adc
mov
push
cli
push
mov
jns
sbb
push
out
push
cli
jnp
push
stc
add
push
dec
inc
sti
dec
ss
mov
scas
inc
push
test
add
in
jecxz
int3
mov
mov
sub
shlb
dec
or
sub
shl
pop
out
add
inc
cltd
dec
inc
cmp
add
pop
sub
leave
mov
jne
dec
gs
imul
inc
push
inc
lret
inc
xlat
jns
dec
and
dec
cmp
sbb
rolb
imul
add
ljmp
das
in
call
dec
in
mov
mov
dec
push
xor
pop
in
inc
dec
insb
jle
cmc
xor
shufps
xchg
cmc
add
shrl
scas
jbe
pop
movsl
inc
inc
dec
insb
jle
clc
xchg
xor
cli
xchg
inc
cli
sbb
ds
cs
call
add
add
inc
cli
push
in
test
inc
cli
xchg
gs
fdivs
inc
jle
in
ds
mov
inc
mov
cmc
add
add
sbb
call
test
push
push
mov
or
out
je
decl
notl
cld
int3
cld
je
or
cmc
adc
add
add
cld
je
xchg
adc
call
sbb
pop
decb
inc
mov
pop
cld
stos
cmp
push
movl
enter
or
dec
push
jmp
pop
xadd
jnp
xchg
jne
jne
dec
cli
and
mov
pushl
add
shl
xor
sub
jle
jbe
xchg
and
sahf
pop
fdivr
mov
inc
xchg
cmpb
xchg
stos
push
add
cwtl
lcall
add
fdivl
out
cmp
jne
dec
jl
idiv
out
mov
sub
adc
cld
cs
inc
mov
aas
gs
add
add
aas
insl
aad
test
imulb
and
add
orl
mov
cld
lods
lock
add
jl
and
sub
movsl
nop
inc
xor
gs
push
sub
popf
imul
add
cmp
popl
mov
notl
inc
pop
leave
cmp
xlat
cltd
js
add
mov
cwtl
jle
or
add
or
cmc
add
sbb
mov
mov
popa
lcall
testb
xchg
ret
xchg
call
cmp
aaa
push
cmp
bound
xchg
mull
mov
lock
mov
mulb
add
lahf
mov
hlt
test
mov
mov
mov
data16
pop
sub
sbb
mov
inc
and
inc
mov
mov
inc
mov
jns
inc
mov
imul
mov
inc
inc
or
je
test
xor
jne
call
add
add
cmp
mov
loop
es
bound
hlt
mov
fld1
test
add
jecxz
bound
aam
add
fnstenv
outsl
pop
add
xor
out
mov
mov
imul
incb
sbb
inc
add
xchg
repnz
fwait
jmp
scas
mov
add
add
add
decb
add
int
ret
data16
test
jnp
inc
xchg
inc
mov
testb
addr16
lods
ret
call
cmpsl
fsincos
testb
xchg
jb
decl
insb
inc
leave
pop
outsb
mov
mov
test
mov
inc
fnstcw
pop
ficomps
inc
mov
popa
cmp
dec
or
dec
jo
or
bound
add
sub
mov
pop
scas
cmpsb
add
in
outsb
fsub
jl
or
scas
jo
clc
hlt
loope
push
mov
shlb
clc
cmp
cltd
das
jo
int
out
ljmp
cmp
cmp
mov
scas
sbb
test
dec
data16
add
or
aam
lret
mov
repnz
sub
ss
orb
pop
jno
lock
insb
int
pusha
stos
decb
sahf
xchg
ror
sub
cmp
jp
aaa
cli
fs
and
cmp
scas
and
cmp
cli
mov
jl
jmp
push
iret
je
add
add
leave
add
ret
js
sbb
scas
or
and
mov
es
inc
pop
mov
add
std
sub
in
sub
adc
outsb
or
pop
jns
and
xor
bound
lahf
add
stc
jb
out
lret
sub
cmc
adc
pop
inc
ljmp
cld
mov
push
pop
inc
repnz
fmuls
inc
jmp
inc
clc
add
add
imulb
cmp
jg
push
push
subb
bound
dec
call
inc
mov
dec
jae
lahf
repnz
jmp
das
movsb
ss
sahf
ljmp
pop
hlt
aas
ja
jnp
xor
pop
shll
or
and
jmp
adc
test
es
push
ja
add
add
sbb
xorl
inc
cs
or
aad
outsb
sub
push
dec
ja
and
mov
push
mov
add
lods
addr16
xorl
int3
mov
xchg
sbb
cmovne
jmp
mov
cmc
sbb
sbb
fdivr
adc
mov
jae
loopne
hlt
mov
inc
or
pop
int3
leave
sub
push
cld
aaa
mov
test
cld
call
lods
or
mov
jp
jl
jo
fdivrl
cs
inc
or
xchg
or
or
mov
sarb
call
pop
ret
xor
push
xchg
add
inc
add
add
pop
je
js
pop
pusha
sub
jg
mov
arpl
das
sub
jg
in
enter
clc
jne
ds
icebp
jmp
lods
or
js
das
sarb
movsb
jmp
sub
pop
icebp
arpl
push
add
jge
icebp
jle
jae
ret
cmp
out
add
jo
add
add
or
lcall
call
nop
js
call
jo
sbb
mov
ja
call
cmc
sub
call
flds
cli
ret
push
push
xchg
stc
jmp
add
sub
sarb
mov
ljmp
lock
dec
add
add
push
aam
add
add
sub
cmp
outsb
adc
add
in
push
dec
inc
jne,pt
repz
in
xchg
out
psubsb
xchg
inc
cli
push
xor
inc
divb
iret
xchg
inc
add
dec
push
mulb
cli
jne
je
test
xchg
daa
decb
frndint
imull
sub
inc
cli
xlat
sub
add
add
mov
out
cmpsb
enter
ljmp
add
sti
xchg
sbb
fsts
lea
outsl
stc
add
fsts
shll
xor
inc
inc
sub
xchg
cmpsl
call
inc
jne
jmp
add
cmp
dec
rcrl
sub
mov
flds
add
add
add
add
flds
mov
dec
mov
shll
xchg
aaa
cmp
test
xor
rcll
in
inc
in
jge
adc
call
xor
ror
or
add
or
xor
jmp
cmp
out
lds
cli
inc
scas
test
sbb
enter
lods
out
adc
test
cmpsl
add
add
ret
shll
push
out
mov
sbb
out
sti
ss
adc
mov
call
cmc
add
dec
inc
popf
cli
je
arpl
mov
cli
adc
insb
sub
xor
test
add
clc
push
sbb
addr16
std
lcall
data16
enter
rorl
dec
mov
add
imul
scas
or
outsb
pusha
or
pusha
cmp
sti
decl
push
data16
push
pop
icebp
addl
popl
pop
cmp
cld
je
fimull
dec
lea
dec
mov
pop
out
outsb
mov
sbb
pushl
cmc
jmp
call
add
add
das
push
fwait
jae,pt
cli
cli
jbe
cmp
icebp
movsl
in
mov
jno
add
in
mov
ja
scas
cltd
daa
aam
sbb
mov
xchg
ss
push
cmp
jge
rcll
pushf
xchg
sti
popa
mov
out
xor
cli
jnp
or
andb
incl
daa
lcall
push
mov
add
mov
decb
stc
push
orb
fwait
mov
cmp
fldenv
xchg
cmp
rcll
add
lock
add
xlat
imul
xor
mov
inc
add
mov
cmp
xor
cmp
adc
sub
add
add
sbb
cmp
mov
cli
mov
fildl
pop
add
rorb
mov
xor
addr16
call
push
loop
add
test
mov
cli
push
lds
pop
outsl
sbb
pop
pop
hlt
lret
mov
test
mov
add
mov
or
das
cli
jmp
cli
sub
add
add
sar
cmp
andl
add
jns
jno
call
sar
cld
test
inc
jmp
cmc
add
sbb
sbb
jbe
xchg
fs
mov
jb
xchg
push
jb
cli
push
inc
jl
pop
jns
cli
add
push
test
mov
sar
and
cmp
call
add
mov
push
mov
add
ret
push
loop
lret
call
test
mov
cs
decl
iret
outsb
sbb
jno
call
inc
jno
call
xor
bound
xchg
idiv
orb
xchg
push
mov
xchg
sbb
push
dec
xor
xor
or
add
repz
not
bswap
in
incb
sti
arpl
xchg
add
mov
popa
sti
cli
arpl
xchg
sub
cli
arpl
xchg
sub
xor
arpl
xchg
and
mulb
add
fildl
call
insl
pop
rcll
adc
sbb
rorl
repz
repz
and
xor
cli
and
inc
idivb
gs
pop
cmpl
add
popf
cmp
ljmp
scas
int
pop
add
enter
xor
cmc
add
inc
hlt
repnz
call
mov
loop
jecxz
mov
xor
mov
cli
dec
faddp
cltd
add
inc
or
popa
push
lods
daa
and
dec
cmp
gs
add
add
sarb
scas
mov
nop
popl
xchg
lods
pop
jle
jo
sbb
aas
sub
cmc
push
ljmp
in
es
add
arpl
push
mov
jb
jmp
jns
std
call
jp
fbstp
out
cmc
es
insb
xor
add
je
pop
dec
xchg
hlt
into
push
add
shrl
add
testl
fisttpll
pusha
std
call
mov
and
repnz
out
fnstenv
call
repnz
push
lcall
dec
repz
mov
add
stos
bound
pop
jp
mov
add
add
ficoms
decl
pop
sbb
add
jge
enter
test
pusha
out
add
mov
dec
loop
mov
cmc
shr
dec
mov
push
pushl
stc
out
cld
add
test
cmp
jecxz
cli
lcall
jnp
add
dec
decl
sahf
mov
out
xorl
xchg
rorb
pushf
xor
notb
test
add
adc
repz
xchg
pop
add
pop
jmp
add
or
mov
add
imulb
add
notb
test
loop
stc
ret
idiv
mov
mov
dec
test
sbb
mov
insb
jp
or
movsl
cmp
mov
sar
scas
ret
and
cli
popa
add
testb
xor
add
dec
sub
aad
ret
js
stos
sbb
insb
daa
std
stos
xchg
mov
sub
loopne
dec
mov
mov
add
mov
jl
and
das
fwait
xor
jo
lock
scas
xor
mov
sbb
dec
mov
jnp
dec
sub
mov
or
lock
enter
add
add
cmc
in
stc
sar
rorb
cli
scas
hlt
out
jb
cld
xchg
add
add
push
xchg
aad
stc
jle
mov
dec
outsb
push
clc
cli
fdiv
sbb
or
add
aam
jl
mov
sbb
jns
fldcw
jb
cmp
in
movsb
out
nop
add
stos
add
add
add
xlat
test
sub
out
and
inc
faddp
sub
sub
add
ja
mov
dec
mov
mov
dec
add
nop
imul
fidivrl
test
mov
cmc
mov
adc
in
fs
andl
jmp
dec
add
add
mov
mov
xor
cmc
lea
dec
cmc
jne
repz
out
sbb
lahf
cmpsl
ljmp
jne
jg
xor
jg
sub
out
je
mov
add
jp
mov
jge
sub
sbb
cld
pop
mov
xor
mov
dec
mov
sti
mov
cmpsl
sub
ds
int
das
pop
cli
inc
mov
jle
cld
rolb
cmc
fcmovu
jae
iret
mov
out
jae
mov
and
pop
push
pop
dec
jg
stos
outsl
push
bound
imulb
xchg
and
mov
pop
decb
push
lods
inc
sahf
repz
and
es
adc
or
mov
dec
std
jae
and
add
mov
shll
stos
sub
icebp
rclb
aad
and
mov
jp
mov
sbb
and
jns
pop
frstor
fnstenv
add
push
add
push
xor
jbe
das
xor
mov
add
fwait
std
daa
sbb
push
mov
or
mov
and
jnp
mov
in
add
inc
daa
cli
jb
adc
sub
and
cmpsb
lret
mov
pop
jle
xchg
mov
inc
insl
and
or
push
xor
je
xor
es
jmp
adc
adc
icebp
mov
test
aad
add
cs
fcmove
cli
jno,pn
jae
add
add
push
push
call
iret
out
pop
ljmp
mov
mov
xorl
incb
cmpsb
rcrb
mov
cmp
ljmp
or
jae
addr16
ljmp
mov
or
cmp
push
js
rclb
cld
out
mov
shrl
cmpsl
jg
incl
add
test
cmc
adc
dec
xor
dec
mov
push
cmp
outsb
add
add
pop
cmpsb
push
daa
repz
push
adc
shrb
lahf
mov
je
xchg
cmpsb
jl
lret
add
adc
js
inc
or
jbe
scas
dec
jecxz
xchg
inc
xor
dec
or
call
add
add
subl
outsl
cmpsb
jp
out
mov
cli
mov
out
mov
cli
sahf
sub
inc
test
in
pop
insl
fcmovne
mov
jae
mov
cs
shlb
repnz
adc
jbe
pop
add
push
cs
jne
mov
imul
fdivrs
gs
mov
and
shlb
jbe
cld
js
loopne
add
add
js
call
sti
shr
mov
aam
mov
pop
enter
adc
jle
fdivrl
int3
sbb
cs
and
aad
pop
inc
push
rcl
or
gs
in
adc
fmull
jnp
faddl
sub
jmp
fsub
mov
lods
roll
xchg
loopne
jo
in
pusha
scas
in
fiadds
add
jns
add
cmc
lea
in
mov
sub
cli
cmp
test
cmc
add
push
mov
mov
cli
jb
iret
cli
cli
adc
out
push
and
scas
dec
xchg
jo
sub
jecxz
ret
and
and
adc
or
ljmp
or
nop
fwait
and
rcrl
mov
cmp
cli
in
in
xor
push
add
dec
les
xor
pusha
in
adc
cli
mov
add
call
sbb
add
add
dec
push
pusha
outsl
cwtl
mov
cmpsl
dec
sbb
xchg
popf
stc
out
ljmp
shrb
push
out
sub
jmp
inc
cmp
lea
and
push
xchg
ret
dec
push
dec
mov
add
cmp
dec
cld
mov
cmpb
negb
jns
jge
jp
adc
out
out
es
jae
scas
addr16
ficoml
jge
jp
insb
jl
sub
out
sahf
push
cmp
test
xchg
add
repz
cmp
and
or
cli
cld
es
hlt
aam
push
outsb
and
notl
jns
outsb
lods
daa
pop
int3
cmp
inc
xchg
add
ret
mov
out
xlat
out
outsb
and
out
jle
cli
inc
add
push
add
sub
lahf
mov
in
inc
mov
movsb
xchg
shll
in
dec
or
adc
mov
orl
rcrl
mov
jl
add
xor
arpl
push
pop
inc
mov
add
stos
pop
ja
xor
sbb
leave
ret
in
imul
push
test
sub
sbb
sbb
call
aam
sub
testb
ja
sbb
pop
push
sbb
pop
rcrl
cli
imul
and
out
mov
mov
add
ret
lds
add
pop
xchg
mov
lea
cmpsb
push
cmpsb
sub
cld
idivb
or
les
adc
add
out
sub
cli
insb
mov
ss
ret
jmp
mov
jecxz
push
cli
fs
and
add
sbb
adcb
rorl
seta
xchg
inc
jb
add
add
adc
inc
call
mov
jmp
pushl
inc
lret
lcall
popf
rolb
or
cmc
lea
out
decl
inc
add
push
add
mov
jle
add
jecxz
jge
pushl
add
int3
popl
loop,pn
push
cmc
mov
sbb
push
add
add
cmc
mov
in
sti
cli
mov
adc
xchg
sub
cmc
add
and
jp
and
jmp
adc
jle
es
clc
pop
push
sti
inc
cmp
inc
clc
pop
ja
ficomps
adc
xor
pop
jmp
mov
shl
clc
cli
cmp
or
add
jne
stos
jle
mov
scas
fistpl
add
pusha
inc
pop
testb
ret
cmc
mov
scas
aad
fs
add
femms
out
es
mov
dec
add
gs
lds
stos
or
in
outsb
mov
jl
sbb
push
lods
in
pushf
ret
push
fldt
xchg
mov
add
sbb
mulb
shr
push
mov
rcll
stc
mov
dec
sarb
sbb
xorl
cmp
pop
scas
sarb
sbb
mov
pop
je
ja
cli
xchg
dec
mov
sbb
icebp
addr16
dec
fcos
imul
and
jb
adc
je
outsl
mov
daa
add
add
sbb
mov
sbb
insl
xor
ret
add
lods
push
bound
xchg
xor
xor
je
mov
ja
pop
or
cli
xchg
mov
into
sbb
add
aam
incb
sub
push
mov
lock
clc
sub
add
add
aas
push
ret
addl
jb
punpckhbw
mov
dec
mov
insb
push
push
dec
les
call
jo
add
push
jns
adc
cld
xor
ret
mov
inc
adc
fdivr
decl
push
add
adc
testb
adcl
mov
and
pop
sbb
mov
add
add
xor
ret
fidivl
sub
es
xchg
xorl
xorb
jle
sbb
add
imulb
nop
pop
cmc
daa
incb
aaa
rcrl
jp
push
test
sub
ljmp
ds
sti
pop
decb
xlat
sub
xor
xor
daa
andb
add
cmc
daa
push
testb
or
cld
and
jmp
push
hlt
dec
mov
and
add
pop
ds
test
add
insl
dec
jle
test
jle
mov
outsb
mov
outsl
enter
xor
sbb
sub
aam
out
call
cwtl
int
ds
int3
adc
jle
add
add
add
int
push
mov
and
jmp
mov
shlb
ljmp
add
out
popa
or
imul
sub
jno
adc
jmp
addb
cmp
sbb
xchg
sbb
cli
sahf
jnp
jmp
lret
call
jp
call
std
scas
dec
addl
add
xor
cli
cmpw
in
mov
inc
or
fsts
lea
ss
inc
jmp
push
jle
out
std
call
lock
out
jmp
mov
jns
pop
icebp
cmp
add
or
cli
mov
and
adc
cwtl
addr16
mov
add
pop
call
add
xchg
jnp
setae
decl
test
lcall
std
mov
neg
loope
or
shlb
push
xor
add
mov
repnz
jmp
outsb
push
inc
out
dec
mov
cmc
inc
shrb
sahf
shr
mov
add
jnp
jle
subl
sbb
add
add
sub
xchg
sub
jnp
xchg
adc
cmp
sub
iret
push
repnz
cli
sub
cmovg
jb
cli
inc
test
enter
inc
or
jbe
mulb
loopne,pn
cmp
bound
xlat
fsts
sbb
fwait
sub
jmp
cmp
sbb
jnp
sub
jb
out
add
add
test
roll
add
adcl
test
call
add
xlat
and
loop
cmp
sbb
push
jo
mov
rorb
daa
xchg
js
cwtl
mov
in
rorb
mov
insl
enter
mov
shlb
ja
mov
mov
pop
enter
in
sub
jle
mov
testb
bound
sbb
pop
xchg
stos
push
lock
stc
pop
in
jle
mov
out
sub
cli
add
jmp
xor
lret
dec
lret
xchg
lret
xchg
scas
addr16
or
cli
scas
sub
add
repnz
push
push
out
aas
aas
jae
add
add
jp
shrl
bound
and
push
jge
jae
mov
xchg
sarb
fidivrs
in
hlt
into
add
jge
dec
ljmp
fmull
in
add
out
add
cmc
mov
loop
repnz
cmc
push
pusha
pop
mov
ret
inc
sub
or
dec
cli
decb
or
add
add
add
fcomi
incl
add
pop
pushf
mov
cmc
adc
xorb
or
divl
in
adc
dec
cli
sbbb
mov
push
testb
cs
xchg
test
add
movb
cli
or
lock
testb
sub
push
cltd
or
add
sbb
jg
add
jge
xchg
push
and
hlt
mov
adc
push
cli
jne
push
je
les
push
std
popa
push
adc
and
lcall
pop
mov
sub
add
fcoml
adc
lahf
mov
sub
push
ficomps
dec
or
xor
dec
icebp
mov
test
sbb
add
js
es
mov
mov
jnp
nop
jns
stos
enter
roll
ret
loop
mov
cmpsb
faddl
mov
loop
xor
fwait
cmp
add
aas
repz
cwtl
in
cmp
ret
sub
int3
sti
js
sti
or
call
pop
orl
pushl
add
out
or
push
cld
or
cld
xchg
push
ret
std
cwtl
popl
or
and
hlt
pop
in
or
push
jmp
pop
or
cli
hlt
leave
sti
aas
jmp
cmp
jmp
or
adc
or
aas
xchg
sbb
call
pop
call
ud2
subl
add
incl
cmp
stc
xorl
add
inc
std
or
mov
jae
adc
push
hlt
pop
ljmp
iret
add
push
cmp
adc
ljmp
movl
add
pushf
cmp
add
pop
jb
incl
clc
add
ds
lcall
push
cmp
add
mov
inc
or
mov
add
jnp
call
and
cmc
jne
adcl
ljmp
jle
cmc
push
mov
push
cli
mov
inc
shlb
es
xchg
pop
xchg
mov
hlt
aas
divb
add
dec
adc
adc
and
add
outsl
mov
inc
xlat
pop
inc
add
add
cmp
xor
ret
push
add
notb
pop
mov
adc
imull
int3
out
popa
adc
mov
flds
dec
into
jbe
cli
xor
pop
repz
pop
mov
pop
push
lea
in
imul
insb
stos
testb
mov
sbb
sub
jp
icebp
jg
add
add
add
push
dec
or
leave
or
add
adcl
add
aad
call
jmp
or
mov
in
sub
push
les
mov
rorl
testb
sti
ds
or
cmc
add
test
add
add
sub
decl
pop
adc
daa
lret
imul
cli
xchg
add
add
lea
fld1
hlt
sbb
xor
aad
jbe
test
jmp
mov
or
bound
in
stos
icebp
add
out
aas
mov
repnz
lahf
pop
call
push
je
int
ret
push
loopne
inc
lds
mov
lds
cli
jmp
cli
add
rol
stc
into
add
add
std
mov
and
js
and
fnstsw
push
xrelease
js
and
add
add
and
filds
sub
or
inc
or
and
mov
add
xor
push
and
cmp
jo
and
add
mov
jg
and
dec
loop
add
add
dec
dec
jmp
sbb
cwtl
sbb
inc
push
sbb
not
sub
add
adc
stos
std
jecxz
fisubl
fists
and
fistps
cli
in
lods
xchg
in
or
push
jae
xchg
ljmp
and
adc
es
out
test
fisubrl
add
jg
ficoml
sahf
cmp
xchg
and
sbb
je
mov
mov
loop
pop
aaa
repz
enter
cmpb
add
mov
and
inc
lret
mov
dec
add
mov
aam
mov
insl
leave
add
and
outsb
mov
adcl
add
add
std
test
call
rolb
lret
stos
lahf
rcrl
adc
sti
xor
jp
sti
inc
scas
pushf
xchg
loopne
fnsave
add
xchg
adc
je
shl
jmp
push
stc
aam
repz
jmp
xor
inc
sar
pushl
mov
pop
cli
mov
add
add
mov
ljmp
ja
cli
mov
imul
xchg
ja
cli
jbe
inc
jae
incl
ss
mov
jmp
mov
stc
mov
or
or
out
mov
pop
mov
cmp
ret
add
cli
xor
inc
pusha
mov
add
adc
fiadds
inc
jge
je
sub
add
adc
cmp
out
adc
lock
scas
jecxz
rolb
add
scas
jae
test
add
fiadds
pop
ret
dec
sbb
imul
loope
in
push
jnp
sar
jnp
sldt
add
mov
xor
inc
ret
dec
add
jns
mov
push
es
dec
iret
or
pop
popf
inc
je
scas
psubsb
das
decl
jno
push
cmp
pushf
mov
ret
ljmp
and
iret
nopl
outsb
test
sbb
jno
stos
mov
mov
sub
addr16
ret
loopne
add
clc
or
add
add
scas
movsl
xchg
loope
out
xchg
add
popf
push
sbb
repnz
mov
test
dec
test
nop
iret
fstps
in
fdivrp
dec
mov
pusha
cmp
push
frstor
or
in
push
add
fnstenv
lock
hlt
cmpsl
sbb
pop
loope
fs
adc
gs
jns
rorb
movsl
lcall
add
pop
out
jmp
out
jmp
aas
out
fnstcw
out
shll
out
leave
inc
out
rcll
ret
out
test
inc
jmp
mov
push
jmp
add
jmp
add
jmp
add
jmp
add
call
dec
xchg
test
call
xrelease
fstl
add
add
jge
push
sub
das
xchg
outsb
pop
je
dec
test
loope
stos
xchg
loope
dec
aas
inc
pop
je
insb
adc
cld
in
js
dec
int
push
adc
leave
sar
sbb
jp
call
lods
je
add
adc
ljmp
push
nop/reserved
push
push
mov
dec
push
gs
std
dec
incl
add
push
push
inc
pop
js
jne
cs
addl
ljmp
or
add
sbb
decl
cmp
incl
out
ljmpw
jne
mov
das
hlt
jae
push
rcrl
pusha
fwait
jmp
mov
iret
and
jg
jmp
sbb
add
jae
cwtl
std
outsb
call
cmpsl
xchg
mov
in
ret
insl
aas
testb
mov
dec
sub
stc
pop
add
and
call
inc
mov
cwtl
stos
add
lret
bound
jle
loop
cs
adc
pop
cli
pop
xchg
and
lret
add
ja
add
add
mov
jns
jno
jg
les
outsb
pop
dec
jp
icebp
data16
jbe
or
or
mov
xlat
ljmp
aad
es
pushf
sti
addb
imul
daa
sbb
xor
or
ret
leave
mov
mov
call
lret
hlt
outsb
shll
add
cmp
clc
mov
incl
cs
std
jae
fprem
dec
or
ret
adc
incb
jbe
push
test
xchg
mov
shl
push
sbb
aad
inc
je
bound
jb
push
subl
addb
cmc
add
jmp
add
cmc
roll
add
sub
push
shll
add
cli
add
cmc
addb
cmc
add
call
push
jb
insb
mov
sub
call
repz
sbb
cmc
add
sub
sti
ljmp
cmp
rolb
add
stc
add
add
je
or
cmp
stos
dec
call
adc
test
add
add
addb
mov
jmp
fwait
add
adc
inc
idiv
rolb
add
pop
mov
jmp
xchg
add
jne
jl
adc
int3
loop
mov
stc
decl
mov
add
cmc
push
sbb
out
add
cli
jp
nop
add
sbb
jge
in
test
div
cli
add
add
push
repnz
divb
xchg
insb
pop
jae
pop
aas
out
rorb
cli
inc
push
pop
mov
lahf
insl
pop
cli
jne
pop
pop
sbb
jp
loop
test
popa
jle
jle
lds
std
xchg
fs
mov
sub
add
mov
out
ret
out
sbb
lahf
mov
test
xor
test
add
lock
add
adc
pusha
add
push
adc
stos
add
out
push
leave
jb
icebp
add
leave
das
ds
mov
sti
rol
ficomps
cmp
add
call
or
mov
inc
fbstp
pop
xor
out
pop
push
cmpsl
add
jnp
push
jle
out
pop
clc
add
push
jmp
add
sub
ret
bnd
adc
adc
outsb
sar
add
push
sti
stc
jmp
popf
pop
mov
jge
push
push
jb
test
cmc
mov
jbe
inc
jge
cli
je
mov
add
mov
ljmp
mov
dec
test
add
pop
idiv
insl
xor
push
inc
lea
add
add
cmp
push
stc
jge
jge
addl
jns
stc
aam
or
mov
divl
push
jmp
add
pop
cli
stc
test
sbb
mov
mov
cwtl
adc
dec
call
jmp
add
shl
test
fwait
sti
mov
lcall
test
add
push
in
inc
idiv
lcall
add
push
rclb
loope
pop
std
incl
mov
mov
push
mov
call
mov
ror
mov
add
data16
das
cmpsb
ja
stos
cli
orb
xchg
lret
in
out
cwtl
add
dec
stos
ja
sbb
lods
cli
add
add
jmp
cli
inc
in
out
push
ja
stos
xchg
push
cld
out
inc
add
cmp
ja
js
shl
lods
cli
or
testl
leave
sub
pop
hlt
jmp
add
dec
lcall
dec
add
add
movsl
or
jle
test
test
add
or
arpl
cld
cmc
inc
les
cld
leave
cmpsb
scas
js
push
add
dec
xor
sub
or
mov
gs
fadd
leave
jp
negl
jmp
std
out
repnz
or
insb
divl
add
test
cmc
add
lods
add
add
cmc
inc
aaa
add
imul
stc
cld
cmp
mov
stc
mov
sub
add
sbb
je
lahf
jno
incb
sbb
pop
and
jae
sub
add
mov
adc
jmp
out
add
je
sarb
data16
add
or
divl
hlt
or
divl
mov
add
bound
push
mov
dec
mov
jg
cmp
pop
cmpl
divl
add
add
cmp
decl
lock
test
jnp
cwtl
insl
bound
push
add
jmp
lods
or
mov
jne
xchg
incl
add
dec
jg
incl
inc
pop
push
test
push
notl
and
je
enter
push
stc
divl
push
notl
in
les
push
mov
jle
imull
rcr
incb
jle
or
jb
sti
addr16
testb
insb
popf
pop
pop
aas
stos
push
test
push
std
push
insl
in
and
add
add
ljmp
ss
repnz
inc
or
or
loopne
std
jmp
arpl
mov
icebp
adc
ljmp
test
ss
in
pop
inc
or
add
in
dec
addr16
push
xchg
cmpsl
add
repz
mov
inc
out
outsb
test
mov
add
cmpsl
jnp
add
mov
add
add
insl
stc
int3
add
pop
pop
nop
add
decl
fs
insb
aaa
je
xor
pop
data16
add
or
mov
add
mov
cmp
in
cli
add
push
lahf
insl
fucomi
int
inc
add
ljmp
and
mov
mov
sub
sbb
add
jo
add
cmc
push
stc
aam
add
insb
xor
push
jge
jmp
repz
inc
ljmp
out
cmp
sub
jnp
loope
mov
cmp
add
add
or
stc
mov
inc
or
push
addl
xor
add
shll
or
test
jo
or
pop
add
add
push
add
ror
dec
push
test
adc
cmp
pop
push
push
add
pop
xor
xor
push
cmp
mov
push
ret
out
in
mov
pop
repz
add
inc
pop
test
xor
mov
add
das
mov
add
std
dec
fimull
add
mov
jne
das
shr
std
call
mov
sub
push
push
mov
out
negb
stc
jnp
js
jge
add
jns
push
xchg
jo
xor
out
test
pusha
xchg
cmp
out
test
loope
jge
add
add
outsb
inc
or
addr16
add
out
incl
add
mul
mov
jo
dec
lock
test
loop
push
jno
push
clc
fscale
test
loop
cwtl
and
std
jge
or
les
add
or
add
or
adc
add
inc
idivb
or
add
repz
add
lock
call
clc
nop
mov
jmp
mov
roll
cmpsb
add
pop
ljmp
add
negb
add
add
testl
add
in
inc
negb
or
add
ds
out
lods
cld
dec
mov
out
push
jecxz
cmp
outsl
add
out
xorb
cs
cli
add
repnz
std
idivb
jae
jle
or
add
xor
mov
jbe
add
add
add
or
lret
nop
clc
mov
test
es
mov
jl
cld
les
add
ljmp
lahf
std
test
lea
call
sbb
add
jle
stc
xor
jnp
mov
in
call
jg
fiadds
call
and
push
call
mov
add
daa
jle
or
dec
adc
movsl
jg
or
hlt
pop
clc
cmp
sub
cmpsl
xchg
or
pop
cltd
push
sahf
add
addr16
add
pop
hlt
xchg
lahf
add
xor
push
or
dec
xchg
mov
push
sbb
mov
jmp
jne
fidivl
ret
xor
divb
fisubrl
rorb
rol
add
xlat
add
mov
or
out
add
xlat
std
push
jne
and
in
add
stc
mov
mov
sahf
push
dec
stc
mov
jb
or
arpl
jnp
inc
clc
addl
imul
ss
call
rcrb
cmc
push
or
push
insl
adc
sub
mov
push
push
add
add
aam
mov
or
add
cmp
xorb
push
call
jmp
add
add
test
arpl
out
test
add
cli
jge
aam
les
cmp
push
mov
adc
cmp
rep
test
inc
jns
pop
stc
add
add
add
aas
bound
mov
fdivrs
in
rclb
inc
out
insb
stc
and
stc
cmpsb
cld
gs
add
sbb
jge
add
addr16
add
cmpb
and
inc
adc
jmp
mov
scas
xor
sbb
hlt
cmc
add
jae
add
rolb
rolb
out
inc
push
aam
loope
inc
mov
dec
pop
mov
pop
xor
loope
stc
pushf
and
inc
add
cmp
pushf
jp
dec
lcall
adc
inc
add
in
orb
test
add
je
hlt
flds
pop
gs
test
jmp
pop
mov
add
add
cld
push
mov
leave
inc
cmp
jno
andb
or
jbe
inc
or
insl
in
mov
addl
xor
rdpmc
xor
or
or
loop
stc
add
dec
decl
or
add
adc
hlt
and
xchg
aaa
or
push
ja
jmp
das
rcrb
lret
mov
add
add
xlat
push
test
push
loope
inc
adc
dec
or
dec
inc
mov
add
mov
jge
repnz
inc
fsubrs
lock
insb
mov
pop
dec
dec
mov
sbb
adc
pop
jo
les
in
scas
not
std
gs
xchg
in
mov
adc
xlat
push
or
dec
leave
xchg
add
inc
push
xor
dec
and
cmp
fistpll
or
outsb
aas
adc
lock
filds
insl
inc
call
xor
mov
cmc
jns
jecxz
fwait
outsb
lock
add
scas
iret
call
xchg
inc
mov
ss
scas
call
jecxz
sub
jbe
or
call
sub
add
pop
jl
pushl
ljmp
clc
mov
mov
pop
aas
es
add
imulb
add
loopne
std
add
ret
hlt
mov
cmp
cmc
push
test
inc
push
stc
xor
jnp
mov
int
cli
cmpsb
lret
adc
outsb
cmp
add
ss
hlt
jmp
add
add
shl
xor
mov
sti
dec
outsb
lock
jmp
push
stc
aam
cmc
aas
jmp
fucomip
push
orl
add
in
cmp
fildl
sub
divl
fidivrl
mov
repz
les
mov
repz
push
push
leave
popf
stc
call
in
cmpb
add
jmp
stc
inc
dec
xor
jne
cmp
jecxz
or
push
std
jl
mov
addb
shlb
je
push
add
push
add
je
push
ss
push
daa
jne
mov
ljmp
call
jnp
dec
das
rcll
orl
popa
outsl
lock
in
mov
fdivr
incl
add
rolb
sub
adc
cmp
or
clc
out
fscale
jnp
push
xchg
jmp
or
std
push
jb
hlt
leave
sbb
xorl
std
test
lock
jbe
out
add
or
cli
stc
out
xchg
not
std
jg
cld
andb
xchg
inc
not
pop
inc
sarl
stc
pop
push
add
add
add
add
testb
leave
mov
out
mov
out
cwtl
mov
pop
adcb
icebp
cmpsl
js
mov
jnp
testb
inc
out
add
mov
sahf
jge
inc
mulb
mov
out
fildl
jnp
xchg
jg
or
fcmovnbe
jecxz
icebp
jb
hlt
cld
lahf
jb,pt
sbb
fadd
inc
ds
jle
xchg
jne
not
popf
sub
cmp
jo
in
push
jo
in
jo
fisttpll
jo
bound
jmp
add
cwtl
cmp
call
jecxz
add
or
call
shr
and
icebp
arpl
test
js
rol
aas
clc
jb
icebp
inc
jo
add
push
icebp
xor
lahf
cmpsl
jmp
clc
shrb
mov
test
push
rcrb
sub
stc
andl
fs
and
gs
iret
and
mov
pop
adcb
imul
and
cs
repz
dec
insb
std
jg
sbb
mov
popf
adcb
push
jne
add
or
jp
adc
rcrl
loop
cli
jecxz
ret
mov
jle
xor
mov
xchg
ret
and
jle
xor
das
and
dec
std
xchg
jp
sti
xchg
fldt
and
jmp
jne
and
push
mov
jno
or
outsb
dec
and
mov
sbb
add
push
cmp
hlt
subl
adc
mov
mov
ljmp
xchg
dec
mov
ficoml
or
and
add
jae
xchg
sbb
add
cmp
add
cld
test
in
dec
push
jae
cmc
test
les
negb
push
jg
jmp
mov
aam
pop
and
lock
add
aas
xor
and
xchg
sti
les
lock
out
mov
ja
jge
adc
insl
movsb
sub
imul
pop
imul
in
inc
idivb
ja
jne
lock
out
incl
dec
ficomps
jb
adc
dec
sub
mov
outsl
out
adc
jae
jns
cmc
mov
in
add
insl
add
add
jne
and
call
add
push
jno
add
inc
push
add
jmp
hlt
insl
add
into
jae
stos
mov
pop
imul
cmpsl
lods
jge
add
pop
adc
mov
fidivs
cmp
sub
or
inc
shll
out
popa
xor
test
and
add
in
ljmp
std
in
push
push
fnstsw
push
ficomps
cmp
js
add
mov
pop
cmp
cmp
loope
sbb
notl
mov
divl
in
or
mov
pop
cmp
cmp
push
js
xchg
les
outsl
cmp
push
clc
notb
les
add
sbb
cld
xchg
ret
insl
add
or
cmp
sub
sbb
int
std
jg
fldcw
push
inc
clc
lea
add
fabs
adc
jae
pop
dec
stc
sub
cmp
sbb
in
loope
cmpl
sbb
cli
bound
jne
clc
cld
jl
loope
add
add
jnp
insl
lods
icebp
pop
cwtl
adc
or
pushf
jp
jne
or
adc
xchg
pop
push
mov
out
or
xchg
sub
jp
cmp
or
jl
loop
mov
push
notb
inc
add
ljmp
arpl
add
jle
sarl
push
push
xlat
ljmp
add
pop
testb
daa
jo
adcb
and
lods
fsub
mov
sbb
fs
add
aas
out
fldl
push
in
jge
out
jle
call
push
mull
ret
subb
add
hlt
shrl
ret
jecxz
push
fdivrl
aaa
mov
or
jmp
stc
ljmp
add
es
repz
xchg
fucomp
call
xchg
jae
stc
outsb
cmp
xor
icebp
mov
movl
or
and
jae
ret
aas
mov
sarb
sbb
xchg
sbb
inc
add
push
test
push
scas
xchg
mov
add
clc
jg
pop
xor
cmpb
add
xor
jne
xor
in
jmp
insl
or
or
jne
pop
rorb
shl
mov
fistpl
mov
dec
stc
out
mov
call
push
mov
mov
push
pop
fs
mov
in
into
mov
add
decl
add
add
decb
hlt
pushl
inc
pop
fdivrs
pop
decl
jae
inc
orps
call
imulb
jnp
add
notb
jl
jge
push
sbb
cmpb
idivl
ljmp
mul
jo
fldcw
and
jnp
sti
push
es
loope
jnp
loop
imul
add
aas
icebp
out
pop
inc
jne
jnp
jo
fmul
dec
stc
jmp
or
xorl
sbb
prefetch
shr
lret
adc
jbe
cli
jge
inc
test
add
mov
push
mov
mov
into
xchg
xchg
out
xchg
das
cmp
mov
stos
int3
mov
ret
mov
int3
ss
std
xor
add
mov
sbb
test
inc
xlat
cmpb
insl
repz
rcrl
jae
idivl
or
push
test
add
outsb
cli
pushl
sbb
lock
movsl
add
out
xchg
mov
int3
sub
jl
push
bound
test
das
out
add
pop
xchg
add
add
add
xor
add
jge
stc
dec
and
inc
je
jbe
push
sbb
es
jl
add
outsl
call
dec
pop
cmp
testb
test
pusha
jge
or
mov
or
lods
mov
je
scas
dec
and
sahf
inc
sub
jecxz
test
add
sub
inc
xchg
mov
and
fs
sub
mov
xlat
pop
dec
sbb
inc
cmp
sbb
push
mov
cmc
dec
lcall
les
and
sbb
shl
orb
push
lcall
les
dec
ret
jnp
mov
mov
call
add
add
sbb
lret
add
stos
idiv
test
push
pop
sbb
nop
int3
int3
add
add
adc
xor
xchg
add
add
mov
mov
add
insl
std
ljmp
add
cli
push
ljmp
mov
rdtsc
dec
ficoms
incl
mov
arpl
pop
mov
fdivr
and
mov
push
xor
pusha
inc
add
push
inc
xor
xchg
add
out
lds
add
mov
ror
inc
or
int3
cmp
int3
xor
mov
jbe
pop
dec
xor
test
aas
cld
insl
sbb
mov
outsb
push
rolb
or
fcmovnbe
mov
dec
mov
das
xchg
jmp
xor
sub
data16
jo
mov
insb
jno
lcall
add
sub
dec
adc
call
inc
jae
insb
movaps
lcall
es
repnz
out
pusha
adc
dec
aam
call
mov
cmpl
jmp
mov
test
clc
aaa
cmp
call
ljmp
jo
mov
cmc
add
ljmp
add
test
data16
adc
pop
add
inc
xor
push
stc
mov
inc
cmp
mov
dec
test
sarb
shl
inc
fsincos
jge
sub
test
mov
sub
or
iret
jge
test
jecxz
add
or
nop
dec
addl
adcl
add
mov
add
cwtl
js
add
test
sbb
cmp
lcall
push
fdivrp
pushl
test
adcl
cmovp
idiv
rolb
adc
xor
cld
imul
les
cli
add
clc
decl
leave
dec
push
ja
push
add
les
dec
rcll
add
testb
imul
cmp
push
pushf
les
test
insl
sarl
out
push
scas
lds
pop
pop
push
cmp
adc
dec
push
jmp
rorl
or
push
insl
mov
test
daa
or
or
test
push
mov
loopne
mov
std
cmp
out
inc
lcall
jne
add
dec
out
fyl2xp1
insl
and
ss
test
add
add
lret
mov
mov
aaa
cmp
nop
repnz
mov
sbb
mov
ss
xchg
push
jnp
iret
add
out
adc
addr16
cmp
xchg
xor
testb
movl
test
iret
test
orb
push
xor
cmp
int
out
notb
mov
jnp
pop
testl
rolb
inc
push
mov
cmc
jnp
lds
and
dec
ret
sbb
push
lock
fnstsw
stc
es
aaa
sub
mov
jnp
fnstsw
je
add
add
jle
xlat
cmc
add
jmp
lock
jb,pt
sub
test
repnz
ret
shlb
callw
dec
sbb
fsubs
repnz
push
icebp
xchg
fnstenv
stos
lret
mov
mov
psrld
push
sbbl
addl
dec
pop
in
jbe
rclb
cmp
add
add
pop
add
fstl
push
pop
and
vmwrite
xchg
out
jp
dec
pop
out
repnz
clc
js
andb
push
push
fs
fmuls
add
add
pop
push
out
ret
imul
int3
mov
in
push
add
or
imul
push
bound
lret
out
push
lret
js
mov
add
add
mov
pushf
add
popa
fsts
jne
or
add
decb
add
pop
inc
cmp
cmp
mov
mov
mov
push
xor
adc
push
bound
stc
aaa
dec
pmuludq
mov
mov
xchg
mov
inc
mov
arpl
adc
sbb
dec
arpl
inc
add
add
arpl
sbb
jo
xor
push
scas
orb
cmp
xor
fmuls
shr
mov
push
incl
leave
mov
pop
jb
mul
add
xchg
idiv
pop
int
ja
xor
pop
repnz
int
lcall
pop
sub
andl
data16
inc
mulb
ja
push
add
imul
mov
int
jmp
out
divl
fldenv
inc
add
cmp
add
xchg
adc
orb
shl
call
or
test
add
add
inc
je
sub
sub
add
js
std
jp
cmp
push
imul
jb
cmp
adc
mov
push
lret
jecxz
aaa
inc
xor
push
adc
xor
leave
cmp
mov
aas
sbb
adc
inc
pushw
add
mov
cmp
addl
add
pop
cmp
add
insb
mov
cli
push
inc
jge
pop
fdivrs
pusha
add
add
ud1
addl
cmp
xor
and
dec
jmp
jl
insb
push
aas
cmp
outsl
sar
incl
push
neg
std
sub
inc
test
dec
outsl
mov
js
out
jmp
sbbl
add
add
push
std
push
dec
xchg
pop
imul
or
sar
stc
dec
ret
stc
mov
mov
mull
jns
sub
fadds
sahf
fimull
hlt
cmpsb
mov
add
call
xchg
xlat
mov
pop
pop
jge
add
mov
rorb
add
add
jge
hlt
mov
lret
dec
push
cmpsl
cmp
jbe
orl
out
idivb
or
ja
nop
add
out
sub
scas
out
jb
pop
add
in
xor
inc
cmpsb
das
mov
add
out
jnp
lret
mov
jge
hlt
js
mov
mov
and
jnp
int3
sarl
ss
jae
add
add
mov
call
insb
cs
insb
xchg
jb
or
mov
dec
add
rcll
cs
bound
dec
stc
subb
xchg
mov
jl
or
insl
aad
stc
jle
daa
test
xor
sub
insb
fmull
insb
dec
or
add
add
stc
bound
lret
movsb
and
pop
sbb
orl
roll
add
add
jae
xorl
incl
test
add
xor
cmp
inc
out
inc
pop
and
insb
mov
lock
aas
cmp
xor
or
lods
ret
sbb
jns
inc
lods
stos
adcl
ds
add
add
jns
inc
icebp
jnp
jp
ds
and
std
scas
add
jns
dec
aam
inc
data16
cs
data16
call
adcl
cli
lcall
add
dec
push
jnp
mulb
pusha
jae
push
inc
sub
fsts
insl
addr16
test
xchg
shlb
sti
dec
fstps
iret
dec
ljmp
negb
or
fs
add
sahf
aam
sbb
aaa
test
neg
dec
or
out
sub
push
jg
fldln2
ljmp
add
ficomps
std
add
dec
fsts
inc
fidivrs
fscale
popa
jge
popa
test
mov
sbbl
mov
fimull
add
pop
jns
xchg
mov
add
jl
roll
idivb
insb
in
out
ret
jle
in
out
mov
add
loop
xchg
std
inc
negb
outsl
fs
jp
std
out
icebp
mov
aas
add
out
and
xor
test
ds
lea
lds
icebp
cltd
test
or
negb
call
add
add
add
call
jmp
mov
scas
cmp
mov
sbb
xor
lret
cmp
icebp
jbe
add
pop
push
test
push
or
ds
inc
xor
cmp
out
int
adc
cmp
outsl
xor
jmp
test
and
mov
ds
push
sub
jge
adc
popl
add
add
cmp
cmp
pusha
icebp
ds
cmc
add
add
cld
push
insb
mov
or
xchg
aaa
insb
pop
sub
add
add
and
scas
testl
xchg
shr
in
shrb
mov
jns
std
decl
or
adc
dec
mov
mov
add
popl
jge
bound
mov
jle
std
push
test
insb
mov
mov
xchg
idivb
pushl
pop
jle
add
std
sub
mov
jbe
call
cmp
incl
push
or
testl
mov
jae
fwait
mov
mov
jge
imul
add
add
push
popf
adc
fsts
jge
xor
xor
add
popf
xlat
adc
jge
pusha
data16
mov
in
jp
jne
in
xchg
push
rolb
rol
test
add
sub
das
add
jp
pop
inc
int3
adc
sub
ja
pop
jae
iret
jge
add
cmp
or
flds
divb
cmpsl
add
out
iret
pop
pusha
wrmsr
jbe
movsb
in
out
insb
imul
hlt
test
xchg
mov
pop
call
add
jae
xchg
out
jno
jp
push
pop
mov
cmc
xchg
add
add
push
hlt
add
mov
jmp
add
test
add
add
ret
push
hlt
adc
lcall
daa
mov
mov
icebp
xchg
mov
shll
in
or
push
push
ret
je
mov
pop
add
jg
js
sbb
cmp
pop
stc
push
pop
add
mov
dec
aas
mov
jnp
add
gs
sbb
orl
xor
add
jns
fdivs
push
pop
faddl
int3
int3
jmp
int3
int3
lret
or
mov
dec
xor
test
insl
inc
cmp
je
push
push
sbb
pop
mov
imul
loope
incb
fistpll
mov
mov
cmp
add
push
or
add
add
in
jo
cmp
push
inc
adc
syscall
add
idiv
je
mov
test
std
shlb
decl
lret
stc
inc
sbb
pop
fwait
jmp
add
lret
stc
sub
mov
sub
mov
in
jge
cmc
sub
mov
cmp
or
outsl
cltd
sbb
add
add
mov
pop
mov
std
mov
cmpsb
int3
stc
sbb
ret
in
jge
cld
push
jnp
push
je
inc
lock
push
or
add
aam
stos
loope
dec
rorl
fldl
in
test
in
imul
out
ds
lret
js
int3
das
mov
out
mov
arpl
mov
push
add
add
xor
xor
iret
js
in
int3
rorl
les
cmc
out
testb
jp
or
adc
inc
das
pop
pop
movsl
cld
mov
ror
scas
mov
out
stos
int
mov
or
sub
gs
add
std
sbb
jns
adc
cmp
cmpsl
or
daa
add
add
xchg
jmp
pop
and
sub
dec
sub
jle
jmp
lods
int3
adc
mov
roll
sarb
jns
push
lods
mov
pushf
mov
or
push
jo
cmc
out
mov
adc
add
ds
and
hlt
not
sbb
or
fldcw
add
push
pop
popf
mov
mov
lret
adc
mov
int3
cwtl
inc
dec
and
in
add
pop
add
inc
cmpps
add
add
jne
int3
push
in
push
imul
xor
test
clc
jne
cmp
push
repz
mov
in
lahf
orl
stc
dec
pop
lret
mov
add
cmp
jne
sahf
sub
cmp
fstps
mov
aaa
xor
dec
or
imull
jne
and
sub
hlt
sbb
push
mov
cmp
repnz
push
cmp
add
push
sub
testl
imulb
fstps
iret
aas
xor
shll
add
mov
cli
xchg
jnp
insl
outsb
icebp
test
jbe
push
push
lcall
sub
out
jnp
fildl
in
inc
ljmp
xor
test
pop
xor
jg
idivl
xlat
sub
ret
adc
pop
pop
fidivrs
add
adc
inc
mov
test
out
jnp
or
add
add
mov
sub
pushf
les
int3
pushf
jl
xchg
jne
ljmp
cmp
jle
or
add
out
dec
or
cmpsl
add
cli
sub
add
jbe
or
repnz
out
mov
or
addb
jb
add
bound
stc
xchg
add
addb
call
mov
adcb
inc
loopne
mov
add
cmc
add
sbb
orl
jge
add
jle
mov
rolb
cmc
add
adc
add
je
adc
sti
add
test
scas
stc
fmuls
or
popf
cmp
xlat
subl
add
pop
add
add
test
add
ret
add
mov
add
aas
sbb
incb
jnp
dec
sbb
out
out
fiaddl
mov
sub
cmpsb
cli
pop
xor
jp
add
std
call
test
pop
push
lods
stc
decl
std
jl
xchg
mov
inc
iret
mov
lret
inc
out
test
andl
incl
add
stc
out
mov
lds
sbb
ljmp
dec
ja
jbe
repz
mov
push
insl
in
test
jb
inc
push
js
inc
notb
js
adc
add
jae
sub
add
imul
xchg
add
std
gs
frstor
ret
std
xchg
test
add
call
ss
mov
jp
repz
hlt
shll
das
scas
test
outsb
cs
mov
daa
add
dec
mov
add
mov
push
fadds
imul
add
mov
inc
mov
adc
inc
iret
lds
add
out
mov
adc
incb
fs
push
add
int3
pop
add
imulb
js
or
inc
fmulp
add
in
stc
jb
loope
sub
incl
aam
mov
mov
add
jge
jle
std
mov
or
mov
jb
jmp
sub
arpl
jnp
shll
cli
cwtl
in
cmpsb
add
add
mov
jmp
xor
insb
lret
jo
cld
jmp
cmc
add
aaa
clc
mov
jne
lret
int
mov
push
clc
ljmp
test
dec
incl
adc
cld
ljmp
xchg
mov
loope
push
addr16
hlt
adc
add
dec
in
mov
test
adc
sbb
add
out
sub
adcl
aas
sbb
aad
negb
sti
decl
rclb
std
jge
cld
pop
adc
mov
xchg
sarl
jnp
inc
test
dec
fnstcw
dec
jmp
mov
jle
dec
pop
or
sub
mov
xor
mov
add
inc
adc
cmpsl
std
incl
add
push
test
jmp
nop
push
fidivl
pusha
jmp
pop
adc
inc
imulb
inc
sbb
mov
add
imulb
add
imul
sbb
js
xor
jne
mov
or
test
dec
cld
jge
shl
mov
or
mov
adc
jo
mov
daa
cmp
add
sbb
testl
fmull
fildll
jle
adc
inc
sbb
add
xchg
stos
out
lock
in
xchg
or
add
enter
add
stos
and
cld
out
out
jl
add
add
mov
sbb
jno
fwait
cld
mov
mov
add
add
fiaddl
jnp
movl
mov
in
test
and
bound
mov
add
add
dec
popf
test
jp
clc
mov
xor
inc
jmp
insl
dec
clc
push
add
call
aas
lods
test
jl
icebp
daa
push
dec
roll
add
cmp
jmp
xor
test
fiaddl
cmc
shlb
cs
cmp
add
fcomip
add
add
cmp
mov
jmp
decl
xchg
jns
add
jg
cld
pop
add
iret
popl
fsubrs
or
lahf
test
mov
pushf
test
test
add
add
je
inc
inc
inc
cmp
insb
unpcklps
mov
push
aas
inc
adc
clc
cmpl
add
cmp
jb
push
adc
incl
or
clc
negb
inc
sbb
in
add
insl
or
xchg
rorb
idivl
adc
mov
lock
and
add
jae
xor
mov
cltd
std
sarb
std
push
cltd
ret
cltd
std
inc
addr16
or
std
push
sbb
test
jg
cltd
std
sub
sbb
jae
out
test
xor
outsl
frstor
test
add
pop
outsb
dec
mov
push
in
pop
push
sub
test
add
add
test
cmpsl
divb
mov
xor
add
add
mov
pop
inc
push
push
xchg
push
into
push
mov
idivb
mov
xor
add
cmpl
std
out
fwait
insl
inc
test
call
mov
out
add
add
jmp
add
cmc
add
stos
adc
dec
jp
jmp
or
or
cmc
stc
mov
jb
cld
bound
mov
or
test
inc
jbe
adc
sub
mov
divb
cmc
ds
aam
mov
shll
adc
mov
jge
hlt
test
outsb
push
and
aaa
icebp
call
filds
jmpw
add
dec
jmp
adcb
xor
roll
test
add
inc
stc
or
pop
xchg
and
jl
xchg
add
call
cli
loop
or
cmp
cmpsl
add
imul
mov
adc
sysret
enter
call
and
int3
les
out
jecxz
fadd
addl
into
sub
or
add
lahf
add
xchg
add
test
std
incl
bound
and
flds
add
or
xor
xor
cmpb
push
test
mov
pushl
or
icebp
and
add
cli
xchg
sub
mov
adc
add
add
xchg
std
out
mov
add
push
decl
notb
cmp
test
lahf
in
cltd
std
or
pop
int
pop
add
xor
cmc
loope
cli
cmc
daa
xlat
test
add
xchg
jg
add
jle
push
push
jg
imul
ret
test
add
lcall
add
add
jg
inc
lods
mov
testl
ret
ret
gs
sbb
sub
testb
test
push
aam
add
mov
shlb
push
testb
ret
gs
ret
cwtl
push
push
testb
lret
loop
cwtl
iret
add
jnp
and
sub
in
stc
and
add
out
add
pop
stos
cli
sbb
test
lcall
push
mov
enter
sbb
mov
xchg
cmc
add
divb
fst
mov
testl
or
add
jmp
cmc
add
cmp
std
call
mov
add
orb
add
push
lock
addl
test
add
push
clc
mov
pop
dec
push
mov
incb
clc
idivb
cld
sub
jne
inc
addr16
clc
fadd
or
adc
notb
incl
lcall
add
sub
or
incb
mov
jae
cld
xchg
ret
dec
jg
or
add
push
clc
add
jle
push
popf
roll
shl
js
fiadds
add
push
mov
in
lds
lret
icebp
push
jle
repnz
or
adc
adcl
icebp
imulb
jle
add
mov
mov
xchg
mov
ljmp
sub
shl
dec
add
add
push
mov
movsb
mov
jnp
xchg
add
mov
clc
stos
cmp
jge
mov
push
ficomps
das
fidivrl
stos
sub
outsl
jecxz
xchg
jecxz
add
data16
negl
jo
aaa
xor
cmp
pop
pushf
out
pushf
add
inc
sub
xchg
jl
add
add
aas
aas
xor
pushf
ljmp
add
testb
dec
into
divl
movsl
pusha
lds
repz
jns
and
inc
cli
mov
cmc
popf
jge
mov
and
call
lea
add
add
push
and
add
add
insb
cmp
cmc
cwtl
xchg
lea
fsubrs
addb
jo
sbb
out
add
jmp
add
add
fs
jl
hlt
add
bound
dec
mov
lcall
mov
test
cwtl
or
fcmovnb
xchg
in
rcrl
and
cmc
stc
xorl
cmpsb
cli
and
jge
lcall
ret
enter
add
cmp
jnp
clc
cmpsl
mov
add
add
push
pop
or
sub
orl
jns
shl
addl
icebp
adc
idiv
push
mov
shl
sub
and
dec
pop
jb
push
pop
jmp
call
sbbl
xchg
int3
out
sti
add
dec
or
add
mov
jae
cld
xchg
ret
xchg
aas
hlt
inc
add
add
scas
jle
movsl
xor
cmp
mov
or
or
add
dec
xor
mov
mov
in
xor
in
push
mov
mov
xchg
std
popa
jne
mov
jmp
push
cmp
fadds
xor
pop
sbb
cld
test
fcomip
xchg
std
or
add
mov
mov
fdivl
cmpb
and
int
xor
and
addl
xor
insb
inc
mov
movsb
dec
inc
insl
inc
ljmp
movsl
out
jp
loop
div
pop
add
mov
lds
lret
jge
loop
and
lret
add
add
data16
out
jg
std
jo
mov
stos
pop
movsb
mov
nop
add
inc
pop
add
add
ja
sbb
mov
sub
mov
call
repnz
jb
pushf
in
js
add
sbb
pushf
mov
xor
cmpsb
std
and
in
bound
sbb
inc
xchg
mulb
sbb
add
add
jge
clc
stc
cmpl
add
xchg
jo
cmc
add
fidivs
add
cmc
ja
sbb
add
fs
xchg
in
inc
dec
je
mov
call
sbb
adc
cmp
stc
jmp
lret
subb
add
les
cmpsb
cmp
test
jge
xorb
inc
add
push
pop
mov
add
add
dec
lea
inc
pusha
fbld
push
dec
pop
dec
bound
notl
lahf
jge
sbb
cmp
test
add
xchg
push
testl
jl
lcall
insl
push
pop
mov
dec
out
sti
push
or
clc
decl
pop
mov
movsl
test
jg
push
and
add
add
stos
xchg
cs
loopne
or
cmpsb
xchg
dec
xchg
inc
test
inc
out
cs
or
outsl
or
jno
and
insl
cmpsl
jbe
repnz
enter
testb
xor
jmp
xchg
ret
into
std
incl
and
add
push
cmp
std
push
xchg
jno
push
add
xchg
std
push
mov
mov
outsb
pop
jle
lahf
les
clc
fnstenv
ja
mov
jnp
data16
add
xchg
out
out
push
scas
cmp
mov
data16
pop
imul
out
mov
mov
cli
sbbl
addr16
mov
add
push
test
jne
out
imulb
std
je
out
testb
aas
dec
adc
jno
ret
std
xchg
add
or
call
scas
dec
in
pop
pop
int
lahf
dec
hlt
test
icebp
cld
cmpsl
mov
add
add
cmp
xchg
or
lahf
mov
rclb
adc
lock
push
add
sbb
add
cmc
or
or
dec
fmull
loope
ds
in
add
std
and
mov
loopne
xor
push
rcrl
jnp
mov
iret
sti
rcl
dec
mov
addl
adc
xor
or
pop
mov
iret
addl
jecxz
mov
xchg
add
add
add
loopne
roll
adc
iret
mov
sub
sbb
inc
pop
mov
inc
pop
ret
or
loope
fwait
add
test
or
or
adc
lahf
insl
idiv
add
or
add
add
and
or
call
add
mov
mov
dec
add
add
cmpsl
std
test
out
out
movsl
mov
movsb
fisubl
daa
cld
idivb
std
or
and
ret
dec
clc
cmc
fucomip
jo
pop
movl
xchg
mov
dec
aad
add
fistpl
add
adc
adc
loopne
out
add
add
mov
dec
scas
jmp
add
mov
cmp
shrl
inc
pop
jg
mov
andl
test
mov
data16
add
jg
add
add
push
in
mov
mov
sar
ds
out
mov
pop
cmp
pushf
stos
loopne,pt
jle
sbbl
xchg
jo
stos
fsubrs
xor
add
imul
add
xchg
les
or
aas
inc
test
jl
enter
xchg
pop
call
fildl
xor
int
lret
inc
hlt
test
icebp
cld
cmpsl
mov
test
das
push
dec
mov
jp
or
cmp
push
push
pushf
add
jns
cld
call
push
int
add
add
fmull
popf
ds
in
inc
std
and
stc
jmp
loope
jge
mov
std
mov
mov
leave
sti
rclb
mov
mov
rolb
popa
xor
sarb
mov
les
sub
xchg
and
decl
sbb
roll
pop
adc
add
add
mov
sub
aas
je
xchg
fiaddl
iret
or
jbe
loopne
decl
push
ja
cmpl
orb
aas
dec
adc
str
incb
je
lods
jmp
jnp
test
andl
stc
roll
stc
xor
jge
nop
jl
outsb
cmpsl
lds
insl
sti
cmp
add
add
cmpsl
std
jmp
push
mov
in
adc
adc
cmpsl
std
pushl
mov
add
decb
test
dec
push
mov
aas
xor
mov
aas
hlt
sbb
es
shr
std
stc
and
inc
cmpsl
jbe
push
pop
jb
add
les
roll
das
jmp
push
fwait
sti
test
ror
out
movb
jnp
inc
jo
dec
aad
sub
in
test
sbb
outsb
ds
sub
jns
xchg
jl
xchg
pop
cmp
aad
sub
mov
mov
jp
mov
jl
inc
pop
cmp
in
pushf
jns
cmp
cmp
pop
cmp
mov
add
ds
jnp
inc
cmp
add
add
mov
lods
pop
adc
push
inc
add
jbe
call
cmc
add
add
sbb
jmp
cmc
add
sub
or
sub
add
cmc
add
shl
xchg
stc
jmp
inc
test
cmpsl
adc
ljmp
xchg
add
xchg
inc
call
pop
dec
cld
bound
add
inc
loopne
ja
or
cltd
std
inc
ja
and
mov
inc
dec
scas
inc
lock
add
sbb
sub
out
push
xorl
cwtl
jnp
cmp
negl
inc
or
inc
clc
mov
add
ja
pop
sbb
mov
add
mov
or
add
mov
sbb
xor
out
mov
outsb
inc
mulb
out
icebp
mov
or
mulb
hlt
addl
or
add
cmpsl
cmp
jp
jl
cld
cld
or
std
push
sahf
imul
jne
test
add
cmp
jne,pt
or
ret
scas
add
jne
in
sub
cmp
dec
out
inc
sbb
inc
add
cmpsl
add
mulb
decb
js
scas
stc
or
stc
add
ds
cltd
and
test
add
mov
mov
lret
repz
jecxz
inc
aad
mov
lea
xchg
out
add
add
mov
pop
or
stos
rcll
lret
div
out
idivb
out
pop
std
and
xchg
loop
pop
mov
jae
mov
push
inc
xchg
mov
xchg
or
xor
adc
jb
xchg
mov
std
fstl
leave
xchg
stc
push
call
sbb
mov
add
add
test
inc
xchg
lcall
testl
mov
mov
pop
sub
add
cmp
mov
inc
icebp
repnz
mov
jl
std
add
fs
or
cmp
add
loope
lds
bound
jmp
les
cmp
add
enter
cmc
add
inc
aas
test
andb
or
cmp
add
incl
and
add
decl
aam
sub
sbb
inc
and
pop
xchg
int
inc
or
fiaddl
into
std
dec
cmp
hlt
iret
add
xlat
sub
jp
je
jl
or
ljmp
pop
jp
incb
add
cmp
pop
ja
idiv
js
and
mov
fcomps
inc
and
mov
lahf
stc
or
rorl
add
cmp
cmp
cmp
arpl
cmp
ja
cmp
cld
in
testb
cmp
cmpsb
in
cmp
sub
negb
jmp
cmp
shr
cmp
pop
ljmp
add
imul
jmp
cmp
out
cmp
cmp
cmp
add
cmp
add
cmp
jmp
fdivrs
push
xlat
cmp
out
cmp
mov
sarb
add
rolb
jnp
lret
fadd
add
lock
add
icebp
sub
cld
lock
xor
stos
les
rol
les
out
jnp
sbb
add
std
test
aad
inc
add
ss
les
pop
mov
xor
mov
mov
sub
inc
fisttpl
adc
xchg
sahf
inc
jge
or
cmp
add
add
rorb
add
aas
xchg
mov
in
cmc
int3
popf
xor
int3
mov
int3
lods
inc
int3
cmp
movsb
dec
bound
sbb
imul
add
mov
and
jl
repnz
out
sub
es
xchg
movsb
push
test
test
loopne
stc
sbb
push
pop
idivb
mov
lret
xor
jb
xor
lods
mov
add
cmc
cwtl
mov
cmp
push
in
jo
jae
jno
cld
add
pop
mov
jo
jnp
add
add
xchg
jne
jns
cld
movsb
aas
or
arpl
or
adc
jns
pop
dec
jp
or
iret
mov
add
fstpl
mov
int3
and
in
push
jl
dec
mov
cmpb
pop
outsl
add
popl
call
mov
jnp
fwait
js
test
testl
call
aam
cld
addl
add
stc
adc
popa
or
xor
cmpsb
mov
leave
stos
adc
pushf
test
dec
add
pop
sahf
adc
jo
shlb
stos
cli
or
jge
movsl
add
lods
mov
adc
dec
pop
lahf
sbb
push
xchg
ret
mov
xor
xchg
push
cmp
hlt
xchg
std
push
bound
int3
mov
int3
or
add
inc
dec
mov
andl
xchg
inc
sbbb
cli
jno
or
jne
add
dec
test
cwtl
mov
outsl
lcall
scas
mov
push
or
fisttps
stc
mov
mov
mov
mov
std
inc
movb
mov
xchg
mov
and
in
jnp
xchg
es
fwait
cltd
scas
lea
bnd
xor
ret
and
stc
cmpl
cli
lcall
test
add
aad
cltd
pop
iret
pop
xchg
xor
test
clc
push
and
add
popf
add
add
cwtl
sti
xchg
pop
xchg
stc
or
lea
sub
add
shlb
or
test
js
add
stos
adc
jb
lea
loope
xchg
add
repnz
mov
movsl
sub
mov
mov
cmp
add
add
adc
add
add
add
add
int3
int3
pop
mov
int3
int3
pop
mov
in
sbbl
mov
repz
xor
stc
push
rcl
and
xorb
insl
in
cld
out
adc
add
test
icebp
add
mov
xor
les
aaa
mov
add
cld
sbb
aam
mov
je
addl
add
rep
sbb
insb
out
and
hlt
outsl
sbb
test
add
cltd
sub
iret
cltd
cwtl
adc
pop
add
stos
pop
aam
pop
movsl
std
push
sahf
or
std
push
push
cmp
test
add
xchg
lods
or
insl
xchg
xchg
test
xor
dec
movhlps
insl
pop
mov
cwtl
stc
incl
add
mov
scas
add
fsts
or
pushf
fmul
and
jo
xchg
pusha
inc
xchg
mov
pop
jbe
cld
fcoml
fs
loopne
pop
or
xchg
incl
pop
incl
xchg
in
dec
jbe
or
fildll
divb
adc
cwtl
fwait
inc
testb
shr
cmpsl
adc
inc
repz
add
cmp
outsb
inc
out
jne
clc
jb
jecxz
iret
scas
data16
and
cwtl
jne
leave
iret
jp
inc
dec
jbe
out
xor
clc
mov
std
mov
orb
loope
jae
jbe
jns
popf
notl
pusha
mov
add
pop
dec
test
and
lock
loop
into
mov
or
mov
add
dec
idivl
addb
adc
xchg
push
lret
jmp
movsb
test
push
icebp
and
push
jb
sub
sbb
xchg
jge
mov
test
std
xor
fdivp
sub
ja
roll
js
decl
je
in
icebp
out
stos
inc
add
or
adc
iret
testl
xor
ret
dec
push
add
add
ljmp
les
cmpl
push
outsl
adc
hlt
js
xor
add
hlt
sbbb
dec
clc
xchg
jb
add
add
push
cli
xor
inc
filds
sti
test
sub
filds
xor
rolb
iret
add
sbb
leave
add
cltd
std
decl
and
faddl
add
jge
xchg
test
out
xchg
adc
hlt
ja
add
cltd
or
ret
lock
stc
xor
pop
add
jae
mov
xchg
and
loopne
fsubl
in
insl
push
clc
jp
add
adc
out
or
pushf
stc
stc
out
mov
fwait
std
fstpl
pop
test
mov
xor
add
fiadds
mov
mov
and
xchg
jae
repz
xor
out
jns
idivl
jecxz
mov
mov
and
rorl
jbe
out
xor
jmp
pop
lcall
cld
inc
cld
push
or
filds
testl
lahf
out
addr16
jmp
pusha
dec
sbb
movsb
jge
cwtl
sbb
add
add
lahf
int
nop
loop
sbb
insl
inc
ljmp
aad
xchg
out
test
icebp
mov
cmp
test
mov
and
jns
cli
cs
icebp
jecxz
dec
mov
mov
in
subb
xorl
xor
lods
jae
stc
push
add
xor
subb
xchg
cmpsb
cwtl
mov
stc
push
cld
subb
xchg
sub
cli
adc
mov
add
fistl
mov
into
ja
hlt
lcall
les
rolb
in
outsb
idiv
sbb
cld
push
adc
or
jmp
fdivrs
add
rolb
xchg
jb
decl
sti
add
add
or
pop
incl
inc
fdivrl
dec
push
subl
les
jns
psrld
lcall
add
cld
in
add
cs
cmp
les
jnp
cpuid
mov
jne
mov
jnp
std
imulb
test
push
das
pop
insl
sub
ret
in
jge
sti
dec
sub
adc
shufps
add
push
pop
scas
mov
out
push
mov
test
push
cmpsl
or
adc
adc
cmc
or
jp
rcrl
cmc
xchg
lods
jl
insl
fwait
add
and
jge
add
loop
in
pop
lahf
add
sarb
add
cli
ja
sub
mov
add
mov
mov
fidivrl
pop
xor
mov
aam
pop
push
lock
insl
aas
and
jl
sub
dec
jbe,pt
das
repz
xor
cs
add
mov
in
cmp
repz
pop
jnp
cltd
daa
lea
andb
jnp
sbb
jge
popl
add
adc
adc
xor
and
subb
imul
fnstenv
mov
insl
mov
push
jb
stc
push
cld
subb
jnp
mov
cmp
call
push
cld
subb
cmpl
jne
push
lret
stc
or
call
push
cld
subb
test
jns
inc
fnstenv
cwtl
cwtl
fdivl
add
stc
push
cld
subb
cmpl
jnp
sbb
pushf
cmp
xchg
add
cli
adcb
mov
dec
lea
testl
xchg
idiv
push
add
pop
inc
je
dec
mov
xchg
xor
pushl
add
or
sbb
testl
add
add
test
cld
cmp
add
das
push
in
cmpl
mov
dec
mov
je
add
aam
cld
lea
push
test
cmpsb
aaa
lods
mov
aam
call
jne
or
cmp
fdivrl
mov
mov
mov
jne
or
lods
xchg
push
in
xor
add
testb
mov
add
js
mov
js
out
mov
stc
jne
or
lods
es
es
cmp
loop
call
jne
or
cmp
fnsave
enter
mov
das
subl
fwait
dec
ret
jl
jns
xor
push
test
add
subb
imul
sub
mov
jns
cmpb
insb
test
subl
add
push
test
pop
jmp
ja
sti
jno
ljmp
int3
xor
mov
add
jl
cmp
add
pop
inc
repnz
xchg
mov
andb
add
push
call
and
in
add
mov
sti
fs
bnd
out
sbb
push
std
addl
stc
sbb
xor
cld
jp
repnz
push
jb
jge
das
ret
outsl
sub
dec
aaa
jp
cmp
cmc
sti
ret
aad
inc
jae
inc
ret
icebp
sti
les
stc
mov
pop
daa
jge
cltd
jge
add
xor
test
les
cwtl
insb
dec
jge
push
loop
add
xor
add
xor
sti
les
clc
std
cmp
les
jmp
decb
xor
mov
rorl
xchg
mov
rorb
pusha
cli
lcall
pop
ds
xchg
sub
je
std
cmp
jbe
stc
push
das
cld
cmp
imul
add
cld
je
sbb
add
dec
xorl
add
ja
jecxz
add
mov
xchg
xor
into
aaa
jnp
dec
add
loop
je
in
addl
js
pop
mov
mov
dec
out
add
sub
insb
or
jp
fcoml
add
add
mov
jns
lret
stc
stc
out
add
test
lds
sbb
jl
add
pop
ret
jmp
sub
dec
insl
mov
xchg
insl
jp
and
push
cltd
jae
out
call
xor
push
lcall
stc
jno
data16
daa
adc
xor
faddl
fnstcw
xor
ret
sub
and
cli
addr16
jl
js
xor
out
sbb
add
add
test
add
jg
out
je
cmp
jae
pop
ds
js
lcall
jns
mov
ljmp
cld
movb
lock
push
push
movsb
fucomip
js
divl
push
ret
out
or
cmp
idiv
jmp
jno
callw
test
push
ss
add
add
adc
xor
js
out
add
jge
push
jp
adc
and
in
leave
test
test
mov
cld
ret
fnstcw
les
pop
pop
pop
stos
ja
jae
je
pop
jmp
mov
add
jb
or
test
cld
jns
add
add
pop
pop
adc
push
mov
mov
int3
int3
lcall
dec
aas
testb
cmp
pop
testb
dec
adc
cmc
cmp
fisubrs
bound
fcomip
cmp
aaa
pop
hlt
pushl
jle
and
and
jmp
push
adc
test
jmp
pop
lea
mov
add
add
sbb
push
add
iret
sbb
mov
and
add
out
add
out
add
imul
add
imul
push
imul
jge
dec
add
aad
xchg
outsl
mov
jbe
rolb
int3
xor
ja
test
or
jae
or
jae
pop
fwait
stos
add
and
xor
or
sahf
cmc
cmp
das
and
push
pop
ja
add
test
mov
faddl
ds
mov
add
push
ret
mov
or
dec
pop
ja
test
aad
add
mov
testb
add
add
mov
testb
sbb
ljmp
mov
jl
add
add
add
movb
add
add
mov
add
add
add
xor
lock
lcall
and
mov
and
iret
decl
mov
or
std
pushl
inc
int3
sub
push
test
or
out
rorl
cmp
add
fsubrl
xchg
xor
add
bound
lds
cltd
add
jmp
in
dec
xchg
lea
ss
outsb
inc
je
js
stc
jns,pn
pop
stos
jno
das
insb
pop
jp
bound
mov
out
add
xchg
popa
or
jbe
inc
add
std
jae
clc
xchg
idiv
sub
xor
out
add
add
or
mov
xchg
xor
push
icebp
push
aam
out
sub
or
cmp
iret
call
push
cmc
push
shl
jno
xor
jecxz
jge
mov
out
test
js
mov
xor
cld
ret
rol
jnp
fldt
cmpsl
or
xchg
idiv
js
cmp
idivb
mov
fisttps
imul
stc
jne
add
mov
in
iret
sti
inc
mov
jae
mov
fcomip
jne
add
inc
sub
jae
clc
adc
jns
sub
push
xchg
or
xor
loope
stc
cmp
sti
faddp
das
jge
gs
and
jg
xor
rorb
add
aas
sub
mov
xor
sub
and
testb
add
fimuls
inc
pop
xchg
inc
out
in
jmp
popa
jae
cmpl
sbb
lahf
jae
dec
cli
jge
clc
hlt
jg
sbbl
and
adc
inc
sub
xchg
or
jnp
add
add
inc
aas
out
div
mov
subl
test
mov
aad
test
cld
arpl
std
gs
jmp
xchg
in
jmp
sub
je
mov
stc
sahf
jbe
inc
loope
sbb
das
add
out
stc
jbe
cmp
cld
imul
push
stc
ret
outsb
sbb
add
loop
fsubr
cmc
add
pop
hlt
into
jmp
icebp
jnp
and
jno
mov
inc
pop
jb
aad
sub
jp
jge
or
in
xchg
sub
pop
sti
test
jae
pop
pop
add
add
lods
loopne
xor
sub
mov
pop
inc
call
xor
ljmp
pop
add
add
push
ret
dec
mov
or
fidivrl
push
test
inc
mov
add
pop
dec
mov
push
cmp
add
pop
imul
leave
decl
add
pop
test
mov
or
inc
jno
flds
xor
not
adc
push
pop
jb
add
jae
add
loop
ja
xchg
mov
adc
pop
xorl
std
or
cld
push
bnd
sub
xorb
addl
jnp
repnz
add
ss
in
xchg
fdivrl
jp
add
div
add
pop
std
cld
mov
xchg
in
roll
std
dec
add
add
mov
add
ror
or
cmp
and
testb
push
jae
jnp
testb
xchg
shrb
jp
out
xor
mov
inc
xlat
cmp
outsl
out
add
cmpsl
add
outsl
cmc
jns
or
stos
sub
call
imul
add
addb
add
xchg
cld
lret
or
popa
out
idivb
sbb
jmp
stc
mov
dec
stc
popf
mov
inc
loope
inc
js
jbe
sbb
jmp
imul
shll
inc
test
cmp
out
pop
ret
jns
ret
imul
push
sbb
test
daa
cmpsl
add
add
add
jle
out
pusha
mov
add
jmp
xor
call
popa
cmc
subb
hlt
in
jle
pop
insb
mov
pop
bound
testb
outsb
insl
data16
imul
daa
push
rolb
jns
add
orl
adc
pop
cs
adc
push
lods
into
clc
jge
add
out
dec
adc
pop
loope
mov
add
cmp
jo,pt
xchg
xchg
adc
or
test
add
cld
fsubrl
add
push
sub
addb
push
pop
fists
add
testb
insl
add
mov
jne
jne
insl
cld
mov
inc
mov
int3
cmp
add
sub
in
movsl
mov
pop
sub
or
pop
lcall
out
lods
loopne
pop
std
or
or
dec
and
jle
negb
add
out
push
dec
adc
push
dec
or
ljmp
adc
aas
std
clc
add
jnp
testb
aas
jg
lret
stc
inc
jmp
testb
lock
jge
mov
insb
cltd
in
sbb
lret
adc
movhps
inc
out
lret
add
add
add
add
js
fnstsw
jecxz
ret
dec
mov
cmp
lret
or
aam
jbe
mul
add
jge
jo
imul
ja
or
push
mov
jns
add
outsl
into
cmc
pop
jno
pop
jns
imul
pop
das
add
or
sub
mov
stc
sbbl
add
sahf
imul
sbbb
jb
or
scas
addl
test
pop
or
mov
jno
hlt
scas
dec
push
call
push
add
push
adc
test
add
add
test
pop
mov
jne
pop
pop
jnp
addr16
jno
rolb
add
jge
and
testb
fprem1
jmp
aad
in
loopne
jp
sbb
mov
call
ljmp
sub
idiv
daa
shr
jmp
jle
add
lds
pop
mov
mov
add
pop
and
jmp
ja
hlt
xchg
icebp
imul
fdiv
decl
test
cld
andb
mov
push
jmp
adc
out
xor
testb
push
jl
ret
push
xchg
or
cli
dec
and
or
xor
shrb
jle
and
mov
add
imul
adc
jb
push
daa
addr16
stc
aad
add
lcall
jnp
jo
iret
mull
jb
pop
jne
stc
jne
stc
xorb
xchg
inc
subb
jno
jmp
sti
int
je
jg
pop
lock
outsl
in
psubw
jmp
mov
jbe
jle
ja
add
dec
push
and
jne
outsl
cmp
adc
push
or
cmp
xorb
in
xor
andb
insb
and
fiaddl
shll
pop
lahf
push
cli
jge
lock
repz
addr16
xchg
shll
insl
sbb
jne
rcrl
mov
pop
xchg
add
jle
push
add
ss
add
insl
ret
jecxz
mul
les
xchg
and
jecxz
push
lahf
inc
mov
fs
stc
sub
or
cmc
in
cmc
mov
cmp
stc
push
stos
jnp
std
inc
jp
std
mov
add
pop
stc
out
cmp
fs
cld
imul
push
out
sbb
hlt
mov
push
stc
push
add
add
subb
jp
xchg
lds
add
jg
decb
in
out
je
testb
add
enter
mov
out
dec
lret
decl
fiaddl
jmp
in
jp
push
out
je
add
lea
dec
mov
jl
hlt
or
testb
in
xor
add
sbb
imul
stos
idiv
pop
mov
cld
andb
cmp
idiv
cwtl
or
dec
sub
testl
and
xchg
xchg
out
insb
test
outsb
stc
sub
jle
jo
insb
call
jne
or
cmp
sti
cmpsb
xacquire
push
insl
mov
add
addl
stc
sub
xchg
fs
insb
xchg
outsb
stc
adc
cmp
or
cli
aam
je
fidivrl
stc
jge
jo
jae
insb
stc
loope
xchg
xor
mov
insb
stc
leave
or
lret
jb
jp
repz
fs
pop
loopne
mov
cmp
in
mov
fs
jnp
lret
jb
outsb
mov
arpl
add
add
out
repz
jb
fs
jae
repz
enter
cs
inc
notl
js
daa
das
or
adc
jb
rcll
jno
andb
sahf
ret
mov
ja
sbb
test
shll
lcall
push
mov
cmc
mov
jl
imul
mov
add
daa
push
insb
push
pusha
jbe
push
sbb
jl
inc
pop
adc
xor
or
mov
adc
shrb
test
sub
add
push
inc
leave
test
cmp
mov
xor
sub
mov
loope
test
shlb
in
sub
popf
stc
call
add
add
pushf
mov
aad
inc
and
or
xchg
stc
dec
incb
xor
les
xor
or
xchg
stc
decl
pop
hlt
call
jl
add
in
pop
or
and
int3
and
int3
int3
push
jmp
aam
add
pop
je
pop
incl
paddd
add
add
test
add
addb
inc
sbb
dec
or
push
idivb
imul
cwtl
lret
push
std
lret
mov
inc
int3
stos
stos
inc
int3
ret
int3
mov
jecxz
push
in
sub
imul
xor
enter
cmp
jae
push
jno
faddp
pop
in
cltd
loope
jmp
movsl
xchg
push
and
add
add
into
mov
push
push
std
ljmp
push
imul
imul
push
fwait
js
add
inc
or
add
mov
pusha
ror
jp
sub
add
push
fadd
add
add
sbb
nop
mov
mov
or
incb
ss
fstps
pop
es
into
jp
add
add
mov
inc
repnz
jl
mov
mov
add
add
inc
notb
jmp
inc
out
mov
add
mov
dec
cmc
call
or
xor
out
pop
test
add
jmp
add
leave
cmp
cmc
add
bound
add
add
add
fstp
out
jbe
adc
fucom
jmp
or
hlt
rcll
scas
cmc
pop
stc
jmp
cmc
pop
stc
jmp
cmc
pop
add
cmc
test
pusha
dec
out
xchg
sub
sbb
add
cmc
xchg
jb
das
xchg
add
jmp
mov
lcall
stos
add
lsl
movsl
xchg
pushf
inc
mov
add
fs
inc
dec
cld
jmp
mov
imul
dec
xor
xlat
adc
rolb
add
add
xchg
add
xlat
pushf
popl
add
jg
add
out
jg
dec
add
add
sahf
cmc
mov
lret
leave
lcall
icebp
faddl
add
pop
add
xor
or
jg
mov
cwtl
push
push
movsb
in
addr16
pop
and
adc
adc
ljmp
inc
mov
adc
push
jl
fcmove
scas
divl
sub
xor
icebp
jb
jg
sbb
mov
stc
jno
jae
popa
xor
test
add
mov
pop
std
push
mov
clc
dec
push
rcll
cmp
divl
add
jle
mov
sbb
inc
dec
xor
cmp
xor
or
out
rcll
dec
add
add
pop
sbbb
sub
dec
stos
aaa
mov
sbb
lret
jg
or
add
stos
add
add
testb
add
out
mov
out
testb
outsb
jns
call
into
in
and
add
xorl
out
testb
add
out
popf
aas
add
mov
je
mov
stc
jmp
clc
add
jmp
or
add
jmp
cmc
add
mov
dec
int3
mov
dec
int3
lods
push
dec
int3
sbb
cmp
add
add
fdivrp
mov
dec
pop
mov
pop
dec
scas
add
lock
or
push
mov
std
or
repnz
pop
mov
xchg
testb
xor
push
dec
int3
mov
in
jmp
das
xor
lcall
inc
jmp
inc
cld
dec
call
testb
fcmovb
je
add
adc
cmp
lcall
push
fisttpll
fmull
xor
rorb
adc
add
clc
incl
inc
mov
int3
arpl
int3
int3
push
adc
int3
fcmovu
jmp
leave
fldt
mov
in
je
fldl
mov
loop
mov
lods
or
adc
cmp
jp
ljmp
addr16
sarb
sarl
pop
jge
ret
adc
int3
xor
int3
sub
in
inc
jb
jae
testb
cmp
repnz
stc
je
jnp
lock
cld
jae
push
dec
inc
stc
pusha
adc
push
mov
setns
ss
ljmp
sarb
insl
sub
pop
jge
mov
xor
sub
bound
cld
cmpsl
test
cs
data16
adc
icebp
sub
aam
fstps
mov
lea
jmp
jmp
out
xor
into
push
jnp
gs
ret
fsts
xorb
sub
pop
test
lds
add
jp
or
jae
sahf
jp
push
cmp
jb
xor
ret
aaa
mov
inc
stos
aaa
stos
inc
add
or
cmp
fs
int3
std
popa
add
icebp
je
add
jp
sub
jmp
cmc
add
adc
and
and
ss
dec
cwtl
daa
pop
adc
pop
sar
add
add
jae
pop
hlt
jmp
mov
mov
not
into
mov
mov
stos
incb
das
gs
push
das
fmull
push
pop
sbbl
inc
je
movsl
pop
adc
fwait
lock
add
or
out
stc
adcb
pop
mov
aas
push
ret
xchg
fsubr
mov
jl
mov
fdivrs
add
ror
or
int3
int3
add
add
sbb
int3
lret
sbb
int3
push
fsubr
mov
rolb
inc
cmp
sarb
lahf
pop
or
std
mov
inc
fists
cmp
nop
inc
or
filds
push
fdivr
mov
decl
addr16
mov
mov
int3
stos
movsb
xor
inc
fnstsw
mulb
mov
imul
shl
and
cli
imul
nop
ljmp
cmpsb
sbb
addr16
sub
xchg
jne
stc
inc
mov
jno
mov
aas
cmp
push
in
and
lcall
cli
adc
repnz
push
mov
pop
std
incl
sub
stos
adc
mov
add
add
xchg
add
add
add
rorl
push
mov
mov
stos
inc
stos
push
inc
inc
sbb
pop
scas
pop
je
in
out
stos
scas
insl
fyl2xp1
mov
stos
or
add
stc
mov
test
sbb
outsl
in
add
mov
mov
testb
lcall
sbbl
add
out
jae
outsl
mov
add
add
cs
rcll
xchg
push
or
jmp
add
adc
add
sbb
lahf
or
or
ds
xchg
mov
pushf
out
lods
lock
call
in
jnp
jns
std
call
cmc
add
mov
or
dec
sub
call
jge
mov
jge
or
add
add
pop
cmpsl
push
mov
js
pop
sub
mov
jmp
add
xchg
jl
xor
inc
int3
popf
es
int3
add
mov
int3
or
adcl
test
add
add
push
mov
mov
or
or
adcb
test
in
rorb
xchg
sarl
cmp
add
add
orb
test
incl
add
incl
add
incb
add
adc
incb
add
addr16
pop
loope
mov
into
test
std
sub
sub
sti
outsl
cmc
pop
jg
xor
mov
addr16
mov
mov
mulb
push
bound
sbb
popa
push
xchg
ror
out
data16
rep
pop
adc
imul
leave
outsl
jne
bound
je
int3
xchg
gs
fcompp
jecxz
cli
orb
std
jmp
pop
mov
or
popa
outsb
sbb
std
cwtl
jg
ljmp
add
add
xchg
mov
lods
ja
xchg
sub
scas
cmpsl
pushl
in
out
std
push
outsb
fldcw
and
repnz
and
in
fs
out
jl
add
add
adc
add
test
mov
add
adc
add
lret
notl
testb
push
enter
add
push
test
das
cld
call
add
add
dec
mov
cmp
add
je
sbb
das
jecxz
fnsave
imul
jb
dec
sbbl
cli
mov
or
fs
push
bound
lods
add
cmc
jnp
jmp
xor
ret
in
adc
and
push
jl
idivl
jb
adc
add
test
bound
add
cmp
pop
add
mov
or
xchg
clc
add
jns
loopne
scas
insb
mov
test
inc
mov
shrl
push
mov
mov
int3
pop
mov
int3
add
sbbl
push
sarb
mov
lock
shrb
inc
out
jg
pop
fidivl
std
test
add
lds
add
xor
mov
lods
pushl
jp
lahf
and
decl
cmpb
test
add
imul
xchg
test
int
xor
rcr
test
std
in
fnstsw
loopne
shl
push
jecxz
jb
fadds
jno
push
add
jb
jl
add
mov
push
sbb
shr
std
in
std
pop
xorl
push
inc
pop
in
jae
mov
mov
ret
xor
push
std
jnp
pop
in
rolb
add
push
mov
add
or
aam
mov
dec
inc
xor
cmp
dec
mov
pushf
mov
cmp
push
call
add
xor
pop
inc
and
scas
dec
ret
stos
mov
cmp
stos
shll
mov
add
add
add
addl
testb
push
jns
dec
lahf
dec
dec
out
jnp
pop
xchg
sbb
cmp
cmp
pop
jns
cmp
mov
repnz
loop
testl
inc
push
or
add
jle
and
cmc
add
out
lea
jb
lea
jmp
cmc
add
and
xchg
mov
leave
push
add
xchg
test
inc
leave
sub
jns
out
call
addr16
stc
jb
lock
push
inc
fucomp
mov
jb
lock
push
add
cmc
add
decl
add
push
cmp
ret
flds
lahf
addr16
add
jnp
in
pop
pop
mov
jl
iret
lcall
in
popa
add
fdivrl
mov
clc
pushl
jl
nop
lret
ret
pushl
jne
stc
subl
jns
jle
mov
add
add
incl
dec
out
mov
daa
popa
punpckhbw
scas
jl
pop
std
jg
popa
bound
mov
sarb
mov
cmpsb
dec
mov
outsb
pop
out
test
add
push
add
fistl
insl
nop
add
call
loopne
or
nop
adc
push
mov
pop
mov
addr16
sub
adc
test
add
xor
push
in
xchg
jge
pop
bound
xchg
adc
push
insb
pop
fcomp
nop
mov
dec
std
fsubs
test
out
call
add
add
std
stos
pop
jno
xchg
icebp
xor
xor
mov
or
jns
testb
repz
sub
js
pop
jnp
pop
icebp
stc
dec
into
dec
insb
loop
nop
xchg
add
add
mov
stc
pop
mov
jle
out
jae
cli
mov
icebp
add
js
hlt
jp
ret
cmc
pop
fsub
jne
or
jo
out
orl
cwtl
add
out
in
pop
call
sub
loop
cltd
flds
add
div
add
xchg
mov
call
jp
push
jmp
add
add
fmulp
inc
sub
mov
ljmp
call
cmc
add
aas
mul
stos
lods
xchg
mov
loopne
mov
jmp
outsl
cmpl
adc
hlt
test
repz
call
pop
stc
test
mov
jnp
in
pop
mov
das
sbb
data16
fidivrs
popf
je
mov
xchg
imul
or
loope
or
cmpl
fildll
add
add
in
xchg
into
add
movups
filds
and
inc
inc
icebp
mov
push
add
scas
nop
dec
cli
jmp
cwtl
in
insb
loop
dec
xchg
jp
in
add
icebp
sti
mov
testb
test
jmp
push
insl
sbb
ljmp
loop
pop
insb
leave
xchg
adc
pop
test
jecxz
mov
mov
leave
repz
jge
push
mov
movsl
jmp
sti
push
loope
mov
push
jle
mov
push
jmp
test
jmp
add
add
inc
std
push
in
xchg
jmp
cltd
roll
mov
xor
add
mov
inc
arpl
icebp
ja
pusha
aam
push
fwait
add
out
cmpsb
in
pop
orl
testl
jae
nop
in
and
lret
icebp
js
add
jno
in
or
or
icebp
int3
dec
add
add
subb
out
push
js
fwait
in
out
adc
out
push
xor
ljmp
inc
stos
pop
clc
add
add
lcall
add
add
leave
pop
pop
clc
mov
mov
mov
mov
test
push
jle
lea
xor
test
repnz
call
add
add
popa
jmp
nop
mov
adc
cmc
js
idivb
mov
xchg
dec
inc
push
cmc
mov
and
jb
dec
mov
out
call
xor
in
mov
add
stc
cmp
mov
je
add
dec
stc
lcall
mov
jae
dec
ret
xchg
test
push
mov
loopne
shrl
cmp
pushw
shlb
push
cmp
jg
sub
add
mov
aaa
or
add
ret
push
dec
or
ffreep
je
ficoms
shll
jp
enter
testb
sbb
mov
pop
std
in
mov
insl
mov
mov
jbe
mov
std
jge
pop
sub
jae
rorl
iret
add
notb
std
decl
or
stos
push
xchg
negb
sarb
pop
or
pop
std
push
adc
idiv
pop
std
pushl
dec
add
test
jae
dec
stc
loope
scas
push
insl
cmc
test
add
add
adc
int3
mov
ffreep
pop
insl
add
add
out
hlt
inc
rcll
stos
lea
testb
test
jbe
jmp
in
sub
aam
jo
add
out
clc
pop
mov
std
xlat
add
out
jae
cli
jl
clc
insl
sub
imul
in
xlat
sbb
add
add
fistl
jp
test
add
fisubrl
scas
ljmp
mov
inc
add
cmp
mov
sub
jnp
popf
mov
dec
add
cltd
cwtl
xor
jb
in
xchg
filds
push
push
call
jo
adc
cmc
js
clc
repnz
adc
mov
jmp
add
add
mov
xor
and
call
cmp
mov
mov
fcomip
add
jo
adc
cmc
and
loopne
jns
jmp
loop
test
xor
mov
aaa
stc
lcall
sti
adcl
iret
pop
mov
cmp
xor
mov
add
add
cmp
xchg
xor
or
sub
adcl
dec
or
inc
lret
mov
mov
pop
and
int3
call
mov
push
add
addb
xor
jmp
stc
push
stos
inc
add
fisttps
stc
bsr
or
cld
push
mov
add
sub
jl
sub
popa
icebp
lahf
jae
aad
add
dec
lods
jno
cld
sub
popa
insl
cltd
loop
xchg
mov
jae
add
std
or
sub
mov
push
dec
out
or
sub
or
out
test
cwtl
hlt
and
dec
sub
push
sub
bound
imul
add
add
out
test
add
sub
cld
xchg
cmpl
xorl
outsb
pop
out
and
jp
jge
add
add
jg
ds
jae
fidivrs
testb
inc
dec
int3
mov
sbb
mov
add
js
sub
test
cmp
aas
add
add
dec
mov
repz
sti
fiaddl
mov
mov
mov
ds
fidivrs
add
cmc
and
insb
fabs
jmp
xor
jmp
jno,pt
fcomip
add
aaa
or
jo,pt
xor
jmp
enter
repnz
out
fs
add
cmc
jecxz
loop
mov
lods
sldt
add
push
bound
push
push
nop
inc
inc
cmp
mov
mov
lods
rclb
xchg
test
inc
sub
sbb
xchg
mov
push
filds
testl
xor
in
jae
lock
xchg
mov
adc
adc
cmpsb
mov
push
popl
sti
into
push
mov
add
or
prefetch
jmp
cmp
jmp
mov
push
dec
add
sub
ret
ret
dec
aaa
mov
pop
cmp
cmp
orb
filds
xchg
out
decl
xor
ljmp
jmp
inc
add
cwtl
lahf
xor
ljmp
jmp
sbb
add
out
insb
mov
ss
xchg
adc
int3
cwtl
mov
xor
pop
cmp
lcall
mov
std
pop
sbb
and
clc
fisubrl
clc
and
std
push
sub
out
ds
xlat
and
ljmp
add
adc
fsubp
clc
nop
repnz
repnz
add
add
roll
testb
dec
ss
icebp
add
test
jnp
movd
out
jae
testb
cmp
roll
xor
insl
aad
push
jns
mov
mov
dec
jnp
jns
add
and
insl
push
add
loope
pop
add
imul
dec
jno
inc
icebp
inc
cmp
add
add
lret
xor
sbbl
cli
hlt
mov
popa
lea
cmc
ja
jmp
add
cltd
xlat
test
mov
lahf
push
push
jge
add
into
outsl
cwtl
inc
cmp
jb
or
inc
aad
outsl
cwtl
mov
pop
add
fimuls
mov
sub
add
sub
sahf
add
pop
push
add
dec
loop
icebp
cmp
add
mov
cmpsb
outsl
cmc
adcl
mov
sub
loop
test
mov
mov
sbb
fs
cmovo
add
push
filds
adc
add
sub
mov
lock
jne
add
add
add
data16
pop
sarl
mov
add
push
inc
mov
or
mov
mov
adc
sub
out
mov
push
insl
fiaddl
inc
add
in
and
insl
gs
mov
xchg
incl
mov
sti
nop
mov
mov
bt
pop
mov
lods
push
sti
pop
pushl
dec
outsl
mov
adc
sub
imul
pop
jnp
repz
stc
fnsave
add
jns
repz
sbb
sub
add
aam
mov
or
sti
xchg
js
add
pop
xor
out
jae
sarb
repnz
les
add
add
push
out
jae
bnd
or
out
mov
add
out
ss
mov
rcrb
out
jge
int
jnp
out
jp
jne
add
daa
aad
scas
cmpl
sahf
mov
adc
ja
in
out
scas
and
jne
add
fcos
popa
enter
sub
mov
inc
int3
lods
add
add
inc
int3
push
xor
lcall
add
test
jle
xor
ss
mov
into
inc
jbe
sbb
lahf
mov
add
cmc
mov
iret
jbe
mov
pushf
jmp
add
cmc
mov
push
adc
mov
cmc
add
jae
cmc
jl
out
stc
jmp
cmc
add
add
xorl
add
ror
int3
insb
rorl
jge
add
shll
mov
shll
mov
int3
arpl
lret
int3
xchg
test
xchg
or
aaa
and
add
pop
mov
xor
mov
iret
add
or
or
lahf
or
leave
add
add
mov
daa
orl
andl
add
notb
sbb
jmp
sub
clc
mov
addb
add
nop
mov
int3
xor
dec
int3
inc
dec
int3
cmp
std
dec
jne
add
aam
ja
dec
xor
ljmp
adc
add
add
repz
test
push
mov
mov
or
test
and
mov
or
inc
or
bound
outsl
jl
add
mov
stc
add
xlat
movsl
push
stos
inc
mov
inc
inc
stos
push
cmp
push
iret
adc
xorb
inc
lret
mov
add
mov
pop
or
add
jle
fadds
or
aam
lret
pop
mov
sbb
outsl
adc
xor
mov
push
outsl
adc
xor
mov
outsb
dec
push
sub
decb
repnz
push
jnp
jl
out
testb
bound
mov
sbb
add
cmc
scas
jg
cmp
xlat
push
sbb
add
mov
int3
sbb
and
mov
in
popa
hlt
add
jmp
xor
ljmp
lret
lds
xor
push
sub
add
sti
jge
mov
or
and
push
call
insb
cld
mov
mov
pop
test
mov
addb
xchg
mov
test
adc
add
ljmp
push
aaa
addl
jp
adc
std
lcall
mov
add
call
into
jne
add
xchg
imul
add
xchg
mov
std
addb
xorl
sbb
add
jnp
jmp
xor
data16
add
addb
sub
clc
imul
add
sbb
dec
jne
jp
pop
xchg
cltd
test
adc
sbb
ljmp
xchg
pop
in
sbb
mov
sbb
call
mov
cmpl
sbb
call
fs
sbb
mov
lcall
negb
std
std
popf
jmp
dec
add
add
mov
pop
jg
add
divb
push
cmc
jne
add
xchg
into
xchg
xor
roll
scas
xorb
add
test
in
add
add
inc
adc
imul
pop
mov
pop
xchg
adc
add
add
jns
inc
or
add
mov
add
je
in
add
sbbl
testb
mov
adc
add
popa
loopne
add
add
add
jnp
fsub
add
mov
stos
or
add
mov
xchg
add
mov
bound
ja
jge
enter
xchg
jbe
add
inc
clc
mov
addr16
dec
icebp
shrl
jge
enter
add
cmc
divl
mulw
mov
add
popa
mov
jg
sahf
add
cmc
cmc
add
cmc
js
clc
jle
daa
mov
jnp
adc
cmc
adcl
sub
xchg
int3
add
filds
add
sub
push
cld
xor
mov
in
negb
add
test
pop
fdivrl
lret
int3
sarl
lock
push
add
lahf
js
xchg
popl
add
std
out
inc
jge
sub
sarl
dec
dec
loope
xchg
jmp
add
dec
push
loope
jmp
mov
pop
add
jmp
js
add
scas
xchg
inc
stc
gs
test
jle
add
add
dec
lods
or
add
test
clc
sbb
sbb
add
push
dec
outsl
mov
mov
mov
and
push
xchg
repnz
cli
sbb
sbb
add
xchg
and
jne
add
movsl
sarb
sbb
pop
xor
dec
add
sahf
push
std
ljmp
pushf
sarb
sbb
pop
add
add
faddp
push
mull
xlat
mov
xor
mov
or
adcl
add
in
stos
mov
andps
mov
icebp
mov
out
pushl
jnp
add
mov
pop
pop
add
xor
jg
repnz
adc
jmp
jae
adcl
add
testb
les
mov
testb
out
jnp
fisubl
testb
fstl
xor
add
mov
sahf
int3
dec
jnp
std
pop
jp
adc
cmc
orl
add
bound
pop
cmc
push
ljmp
int3
sbb
cs
add
cmp
test
daa
stc
lods
xor
dec
cmp
nopl
pop
push
test
jmp
mov
add
cmc
add
imul
push
push
sub
loope
testl
sub
decl
xor
lcall
call
sbb
les
fs
sbb
testb
add
xor
xchg
cld
jp
xchg
mov
cli
mov
xor
and
jecxz
sbb
cmp
mov
add
mov
cmp
mov
icebp
testb
std
incl
dec
sub
test
int3
add
testb
jp
add
imulb
std
test
add
mov
push
cli
xchg
cmp
js
fwait
test
or
xchg
jnp
negb
add
mulb
add
xor
add
mulb
add
adcb
decl
adc
push
jle
mov
std
popa
outsl
enter
sbb
or
dec
je
add
add
add
cmpb
test
out
jae
mov
idivb
pop
sti
add
ret
mov
sbb
jge
stc
out
inc
jbe
testb
aam
ds
es
xorb
out
insb
fs
add
jnp
mov
adc
jl
popf
ret
fisttps
add
add
outsb
jns
add
out
clc
pop
sbb
daa
sub
out
outsb
pop
jnp
add
jmp
xor
xchg
add
add
bound
jge
mov
pusha
subb
cmc
sbb
loopne
imul
ljmp
push
rcr
aas
jmp
add
add
daa
stc
push
stc
test
rol
out
jecxz
stc
jne
jge
add
enter
leave
mov
cmp
adc
test
adc
out
fsubp
idiv
dec
add
dec
push
sub
push
mov
add
addl
repz
add
adcl
repz
add
fistpll
shrl
push
or
dec
push
ret
dec
mov
testl
sbb
dec
cmpsb
shlb
movsb
and
add
add
arpl
clc
les
adcl
mov
ja
xor
notb
outsl
jbe
jge
push
pop
sbb
insl
pop
inc
loopne
push
inc
std
cmp
inc
loopne
out
clc
mov
add
add
cwtl
sub
je
add
imul
pop
cmpsl
mov
clc
xchg
test
cmpsb
sub
add
notb
adc
mov
sbb
div
out
cld
mov
sbb
div
mov
pop
add
cmc
out
cld
mov
push
add
cmc
mov
add
push
imul
call
add
add
movsb
lret
jmp
add
popf
add
lods
add
push
sub
popf
add
push
or
lods
add
push
or
popf
add
push
jmp
lret
jmp
lret
leave
ljmp
sarl
cs
arpl
and
sub
mulb
add
add
add
addb
iret
arpl
ficomps
or
es
loop
mov
clc
into
daa
adc
jns
add
cmc
movsl
hlt
fdecstp
mov
test
pop
in
push
std
mov
cli
sub
mov
outsb
push
jmp
sub
mov
cli
sub
xor
outsb
push
in
cli
sub
and
outsb
push
in
cli
sub
xor
add
imull
out
cli
sub
and
outsb
push
out
cli
sub
xor
outsb
push
loope
sub
and
outsb
push
add
ljmp
add
ljmp
add
std
lock
std
lock
std
lock
std
lock
jecxz
or
jp
pop
data16
xchg
mov
or
add
sbb
cld
clc
movsb
push
mov
inc
fistpll
pandn
testb
xchg
push
out
add
imul
std
icebp
mov
ror
mov
mov
lret
pop
cmp
mov
jl
addl
jle
adc
std
push
inc
inc
std
in
cli
mov
es
jg
bound
negb
or
add
add
xlat
add
mov
xchg
sub
jmp
pop
jbe
aaa
jb
test
data16
es
push
adc
inc
in
test
stc
imulb
std
jle
iret
add
notb
mov
add
push
test
add
sbb
aam
nop
imul
cmpsb
add
pop
out
not
fimull
shll
call
add
add
mov
mov
shll
add
cmp
testb
repnz
jge
clc
stc
add
jno
push
cmc
jge
loopne
add
pop
add
add
add
add
shl
rorb
push
cmp
xlat
jp
inc
dec
sti
push
add
filds
out
jnp
pop
add
shl
in
add
mov
pusha
in
add
add
lret
enter
test
sub
mov
xor
adc
and
add
out
add
jmp
lods
pop
in
je
stc
jmp
jo
xor
repnz
test
stc
sub
js
sub
cli
lahf
fstl
stc
jae
shlb
shrb
xor
sbb
jmp
add
add
adcl
in
aas
jmp
filds
add
stos
popl
xor
fdivp
pop
xor
add
xor
add
push
stos
cltd
mov
lcall
add
syscall
sbb
stc
pop
cmpl
cmp
aam
mov
pushf
pop
aas
cmp
mov
testb
add
lar
add
add
inc
pop
cmpl
rclb
ljmp
testb
daa
std
test
xchg
cld
cs
shll
incl
addr16
test
call
mov
lret
addr16
and
cmp
sub
adc
mov
imul
addb
call
add
sbb
ja
and
add
lock
mulb
lock
test
stc
mulb
std
sub
mov
mov
jae
es
icebp
cmpsl
and
jle
inc
dec
push
jae
push
add
into
inc
push
adc
and
add
add
insb
add
ret
test
or
lahf
add
add
fsubrl
add
add
shl
sahf
inc
push
or
fcoml
sbb
add
add
frstor
and
out
pop
add
jns
stos
test
jno
rclb
add
inc
sti
lret
add
shl
mov
mov
add
sub
fdiv
in
mov
bound
and
inc
add
add
pop
sub
sbb
pushf
xor
sbbl
or
in
inc
xchg
or
mov
lahf
scas
pop
int3
pushf
lock
pushf
popa
jle
pop
imul
and
dec
int3
lods
decb
inc
mov
push
in
cmp
push
xlat
test
bound
add
addb
add
push
jl
add
mov
mov
cmp
push
dec
insl
cmp
imul
and
popf
imul
and
lea
stc
mov
sbb
out
add
inc
cmp
incl
pop
and
fadds
sub
in
jno
and
adc
and
sbb
adc
add
sbb
pop
and
popf
jno
movsb
or
notb
inc
testb
dec
adc
xor
sub
mulb
std
jle
daa
std
loope
jne
mulb
std
or
out
fisubrl
flds
jmp
imul
and
jne
fimull
mov
test
inc
or
imul
pop
mull
std
mov
add
mov
daa
jbe
and
pushl
add
out
inc
cld
sub
jb
ds
xor
pop
stc
and
out
movsl
add
adc
adc
jmp
testb
jecxz
inc
mov
jmp
mov
fucomip
mov
clc
jp
or
add
add
lret
mov
xchg
ljmp
ljmp
pop
cmp
and
pop
stos
and
repz
shll
dec
mov
loopne
inc
sub
fldl
call
and
push
add
icebp
jge
adc
mov
movsl
and
mov
jmp
pop
sar
add
add
call
cmc
add
call
cmc
add
out
add
out
add
into
cmc
add
out
add
sahf
cmc
add
push
cmc
add
push
cli
add
push
hlt
add
jae
stc
mulb
stc
out
sti
add
out
pop
stc
ficomps
add
into
sbb
stc
add
pushl
jmp
push
add
push
add
add
add
jo
jbe
pusha
add
testb
add
testb
fdiv
movmskps
negb
push
fdiv
aas
xor
idivb
fdiv
decl
sub
repz
jae
xchg
std
mov
pop
addb
push
mov
test
cltd
push
or
sti
out
fisttpll
jmp
pop
flds
testb
xchg
sti
fildl
mov
mov
mov
ljmp
dec
mov
sbb
mov
daa
std
jge
lret
int3
fbstp
sbb
inc
push
xchg
mov
jge
jmp
xchg
cld
xrelease
add
test
add
ljmp
and
and
jno
stos
cmp
or
add
mulb
std
and
mov
test
pop
cmp
and
add
adc
ds
testb
hlt
or
or
xchg
and
sub
fists
add
adc
in
testb
xorb
test
fucom
add
add
xor
orb
add
push
mov
inc
mov
sahf
ret
subl
add
add
gs
sub
xchg
rcrb
test
add
jne
jae
or
cmp
jmp
xor
add
jmp
roll
jno
sub
jnp
subb
jge
int
add
add
icebp
shrb
test
push
int3
ret
sbb
insl
xor
icebp
movsl
adc
mov
jmp
scas
nop
ret
inc
pop
call
test
push
test
test
rorb
je
inc
xor
loope
punpckhdq
adc
mov
dec
call
das
inc
and
cld
mov
add
adcb
sti
cmp
xor
cmpsb
mov
adc
add
xchg
pop
sbb
or
lret
addb
rol
jne
or
ror
inc
lds
add
jg
test
pop
cmp
imul
ss
data16
int3
loopne
out
int
scas
cld
push
daa
xor
mov
imull
std
add
add
incl
xchg
cmp
test
out
and
filds
je
cld
push
sahf
enter
pop
and
outsl
and
test
pop
jns
add
daa
adc
jge
loope
fbstp
and
loope
sbb
in
jnp
lock
mov
popf
pop
jge
test
pop
std
jno
add
mov
add
mov
dec
ret
jnp
add
add
testb
xor
enter
aas
outsb
mov
or
fsubs
sub
jnp
add
add
xor
enter
aas
outsb
mov
cwtl
daa
rcrb
movups
jae
ret
aaa
pop
cwtl
aad
int
incl
out
arpl
ret
add
nop
add
mov
in
fiaddl
adc
mov
int3
daa
xchg
xor
jmp
add
push
in
jl
and
pushf
dec
jb
hlt
xchg
and
hlt
adc
movsl
pop
clc
xor
sbb
sub
test
fadds
arpl
and
add
test
hlt
adc
shrl
jb
add
add
in
inc
insb
adc
inc
jl
and
sbb
stc
jle
xchg
out
clc
imul
cli
imul
call
and
nop
sarb
adc
sub
ljmp
movl
loopne
outsb
aad
pop
addb
cmp
leave
add
add
fildl
call
sti
adc
xchg
add
es
adc
stos
loopne
sbb
ret
loope
mov
or
in
je
std
lret
pop
rorl
ret
and
cld
lock
test
enter
fwait
sbb
and
or
stos
pop
stos
cmp
pop
or
push
sub
insl
dec
loope
add
add
shrb
or
decl
jns
xchg
pop
jge
aad
test
fldenv
adc
jo
or
std
push
lcall
aaa
pop
stos
icebp
int
and
push
mov
je
cmp
daa
sub
pop
std
ljmp
mov
or
mov
insl
vzeroupper
mov
cmp
mov
add
aaa
add
stos
subb
xchg
outsb
xchg
aad
pop
mov
mov
data16
dec
in
xchg
fwait
mov
data16
stos
add
in
mov
inc
cli
adc
sub
or
pop
out
sbbl
std
xchg
inc
decl
xchg
jnp
pop
sub
add
add
or
out
test
inc
cli
add
push
cli
or
cmp
jns
sar
orb
jmp
loopne
ljmp
clc
ss
test
bound
xchg
adc
jb
loopne
sarb
add
ljmp
je
pusha
dec
std
clc
sub
jb
push
cmp
test
and
mov
add
add
test
add
jb
clc
xchg
and
lock
mov
jle
mov
mov
and
cmp
adc
repnz
jmp
add
sub
lret
sbb
repz
out
sub
jp
repz
je
stos
jp
and
fsubl
decb
out
fadds
incl
add
add
mov
add
mov
and
mov
roll
mov
inc
adc
je
sbb
mov
fs
inc
xor
leave
imul
add
add
sarb
xlat
add
inc
push
mov
insl
pop
fsts
iret
mov
fldenv
cmc
out
xor
push
sbb
push
add
add
sahf
dec
mov
add
and
jb
cs
push
mov
adc
mov
sbb
mov
pop
std
jmp
xlat
and
stc
inc
or
xchg
sahf
mov
loop
aaa
jb
add
cmp
out
mov
jle
adc
xchg
cmp
out
mov
outsb
mov
icebp
lods
cmp
add
inc
cld
mov
add
add
add
in
mov
jmp
add
ja
repz
jbe
lods
mov
stos
cmp
inc
inc
cmp
mov
sti
xchg
jp
aam
stc
xor
aas
sub
out
daa
mov
ret
mov
pop
ja
push
jno
xchg
lea
ja
inc
jecxz
add
jge
or
add
xchg
adc
jmp
cmp
inc
pop
or
dec
inc
mov
jle
shrl
mov
dec
or
cmc
add
test
xchg
add
out
inc
inc
lods
inc
jb
jb
sti
jb
test
xchg
bound
std
jl
shlb
dec
flds
jge
pusha
in
test
in
add
add
add
sbb
inc
dec
add
lcall
sub
repnz
xor
or
add
pop
jae
clc
dec
add
add
mov
dec
cmp
lret
imul
sbb
push
jbe
jnp
or
shlb
or
jae
sbb
clc
jae
dec
pop
adc
push
mov
dec
mov
pop
data16
stc
decl
jecxz
loop
and
pop
add
nop
jns
dec
add
dec
cmpsl
jp
sbb
adc
jge
pop
out
in
sub
pushf
sub
cmp
sbb
inc
add
mov
pop
mov
pop
inc
pop
xchg
pop
jae
rolb
xchg
cmp
add
sahf
sbb
mov
dec
mov
pop
xor
cmp
xchg
repz
adc
push
nop
mov
aas
idivb
std
inc
sbb
push
add
add
add
push
jae
repnz
repnz
divb
and
lods
fimull
mov
jo
in
sub
jae
xchg
pop
add
add
add
jo
fnstcw
xchg
push
pusha
xchg
movsl
ja
cmp
mov
subb
add
sbb
sbbb
add
cmc
gs
addl
loope
mov
pop
xchg
inc
jns
mov
xchg
sbb
inc
adc
popa
xor
ss
jnp
and
decl
rorl
add
add
xchg
jb
adc
dec
leave
stc
inc
xchg
std
jl
stc
jo
fildl
imul
or
scas
mov
mov
lds
jle
popa
inc
add
jmp
mov
int
sbb
mov
push
add
jmp
testb
gs
jmp
mov
mov
lret
mov
orb
mov
and
add
add
jl
ret
rcl
test
sbb
add
dec
clc
xor
mov
fistpll
lock
idiv
iret
lcall
and
jne
xor
fdivrs
add
incl
adc
add
cmp
push
xchg
add
add
lds
inc
testl
decb
out
adcb
xchg
jecxz
jp
push
nop
mov
inc
dec
sahf
mov
test
xor
sbb
cld
inc
inc
and
stos
sub
mov
data16
int
add
jne
add
mov
jg
jae
mov
jge
sti
mov
add
add
pop
std
jmp
sbb
cmp
and
jle
dec
add
imulb
xchg
pop
ja
mov
jns
xchg
gs
cmp
in
insl
or
jbe
in
jbe
movd
insl
mov
inc
lcall
inc
fwait
outsl
mov
pop
add
jl
or
out
scas
add
lods
aam
add
add
shrl
jne
hlt
js
fs
sub
int
repz
add
add
fiaddl
out
jne
in
dec
mov
mov
lods
ds
call
jl
mov
add
jl
insb
sub
or
test
test
push
mov
push
add
ret
in
nop
inc
test
add
fs
add
imul
push
hlt
pop
stos
mov
int3
mov
xor
lods
mov
int3
sbb
adc
sbb
test
stc
jle
jae
pop
push
sbb
sbb
bound
adc
jg
dec
sbb
sarb
pop
mov
cmp
push
adc
jge
add
mov
mov
dec
mov
dec
mov
add
sahf
fmull
pop
test
adc
inc
int3
int3
add
int3
adc
int3
pop
jnp
mov
jnp
das
add
dec
adc
sbb
mov
or
ret
or
inc
addl
rolb
nop
cwtl
decl
popl
sub
and
ljmp
dec
fs
loopne
add
lds
leave
hlt
mov
add
sbb
mov
pop
and
fwait
mov
je
sti
imul
or
shlb
clc
push
push
or
je
sti
inc
mov
stc
xor
or
cwtl
insl
popa
rcrb
or
jl
sti
or
outsl
mov
or
stc
popa
roll
gs
jmp
cmpsb
xorb
add
fistl
cld
xchg
or
shll
dec
call
and
lahf
adc
icebp
flds
pop
mov
in
out
mov
mov
pop
dec
sub
xor
sub
int
mov
movsl
add
add
push
testb
or
push
jne
mov
pop
ljmp
add
pop
jmp
mov
ret
rolb
inc
ret
aas
mov
int3
stos
aas
stos
int3
pop
or
mov
jb
out
mov
clc
mov
bound
mov
scas
dec
xchg
inc
add
stc
test
mov
movsl
and
cmc
add
bound
clc
push
stc
jbe
or
popa
and
jae
add
add
lock
mov
add
xor
sbbl
test
and
pushl
adcb
fs
lock
and
movsb
aas
mov
mov
int
add
cmp
int3
adc
dec
mov
xchg
add
stos
add
mov
add
add
xchg
sbb
mov
sahf
clc
imul
clc
dec
repnz
lcall
fdivrp
clc
pop
jnp
and
mov
test
xchg
incb
repnz
or
imul
sahf
clc
imul
jmp
arpl
idiv
dec
cmp
pop
sbb
jge
out
repz
push
cli
add
add
jle
inc
stos
jmp
test
outsl
in
mov
cld
push
pop
ds
mov
jmp
mov
lcall
aaa
sbb
stc
jne
in
out
call
in
dec
ljmp
rclb
ljmp
fwait
jp
push
dec
push
stc
stc
insl
mov
dec
pop
mov
inc
aam
repnz
or
mov
or
push
adc
mov
fs
sbb
outsb
scas
jmp
jmp
or
cmpsb
jmp
xchg
or
adc
inc
ljmp
xchg
in
std
stos
repz
in
mov
or
add
lds
inc
repnz
mov
xor
xor
cmpsl
push
sbb
inc
adc
subl
xor
sbb
incb
sbb
pop
mov
hlt
mov
scas
scas
punpcklwd
add
stc
adc
test
mov
or
clc
ds
mov
add
add
xor
ljmp
xor
lods
dec
dec
push
cltd
decb
push
or
sub
xor
test
in
mov
add
test
xor
add
cmpsb
dec
push
mov
stc
jge
sti
push
addl
dec
clc
push
cmp
lock
jl
mov
imul
jp
incl
add
adc
cmpl
int3
shlb
jnp
clc
in
or
adc
idivl
mov
or
pushf
rolb
lea
idiv
pop
jne
hlt
fs
imul
test
cmpl
into
add
add
jle
adc
jle
add
loope
imul
add
add
addb
mov
xchg
xchg
mov
nop
icebp
stc
test
sbb
popf
fcoms
jge
fcoms
sub
xorb
cld
push
mov
ret
jg
fadds
shlb
incl
cld
test
icebp
jne
sarb
icebp
jl
add
nop
lret
loopne
add
lds
or
shlb
sbb
mov
jp
add
sbb
pop
add
add
mov
add
mov
add
add
icebp
call
jle
adc
out
mov
mov
sub
pop
mov
cmc
out
idivb
mov
jb
lret
sti
jp
out
shlb
jmp
add
divb
xchg
std
cmc
jbe
jno,pn
cmp
out
bnd
cmc
pop
jge
add
or
nop
testb
jmp
std
test
sti
gs
test
adc
leave
pop
mov
push
addr16
mov
out
repnz
pop
push
pop
sub
filds
add
add
incl
jmp
push
and
cli
daa
and
cs
push
test
cmc
pop
add
test
mov
and
add
test
ret
cmpb
pop
scas
dec
pushl
add
decl
add
stos
rol
int3
fwait
rol
int3
push
add
fwait
jl
sbb
push
inc
bound
push
insb
or
lahf
push
addl
add
popa
dec
testl
popl
add
sbb
mov
cli
into
fcoml
cmp
inc
add
dec
imul
or
decl
dec
adc
lahf
cld
pop
psrld
stc
push
jmp
dec
cld
jge
or
pusha
inc
in
jne
jae
into
push
mov
cld
push
pop
adc
push
xchg
adc
add
jg
hlt
test
pusha
dec
clc
jae
jo
jge
in
leave
xchg
std
sarl
add
xor
mov
into
jg
arpl
jae
outsb
pop
jge
push
jno
insl
fwait
add
test
adc
jno
or
out
out
sub
out
std
push
add
outsb
dec
inc
push
mov
ss
out
cmp
mov
mov
loopne
sub
xor
out
push
mov
test
add
push
addr16
pop
xor
enterw
sbb
mov
sub
loope
jmp
icebp
test
or
dec
pop
aad
leave
dec
mov
repnz
lea
sahf
sti
gs
outsl
insl
out
mov
add
inc
and
or
movsb
add
mov
repz
fucompp
sub
mov
jl
stc
jp
or
fiaddl
div
mov
div
clc
and
idiv
push
or
dec
jl
rcll
clc
mov
div
and
adc
sub
lret
ds
sub
sarb
jl
int
lock
jbe
add
mov
fsubr
jl
and
insb
dec
and
push
and
add
jp
dec
dec
adcl
fcomps
aam
fcomps
cmp
repz
add
jne
test
test
dec
sub
negl
test
mov
adc
push
test
jmp
test
mov
sub
mov
sbb
rol
rcl
or
call
sti
sbb
xchg
neg
add
push
cmp
sbb
cmpsl
jb
cmp
sbb
jbe
ds
add
inc
jne
not
div
xor
divb
cld
test
test
ja
sub
push
ficompl
xchg
std
jmp
mulb
call
or
jmp
divb
loopne
fwait
cld
xchg
std
jmp
idivb
nop
adc
add
out
sarb
cld
ficomps
add
jp
aam
xor
in
testb
cmpsb
xchg
cmp
int3
into
sbb
and
test
cmp
out
fiaddl
out
add
nop
xor
test
xchg
inc
out
je
dec
outsb
jmp
dec
inc
out
testb
movsb
dec
fsubs
inc
test
repz
add
out
cli
add
hlt
hlt
or
add
add
mov
pusha
mov
in
loope
pusha
cmp
inc
idivb
loopne
out
leave
push
in
fcomi
lock
out
and
daa
add
adc
adc
add
or
add
inc
notb
pop
mov
daa
add
ret
lods
mov
and
inc
jb
outsl
cmp
outsb
inc
and
add
add
mov
test
outsl
fiadds
jle
test
dec
bound
idivb
test
frndint
test
and
add
mov
lock
lock
push
adc
and
ljmp
sbb
inc
clc
xor
push
stc
jno
sub
int
adc
lds
add
add
or
out
fcomps
clc
mov
js
mov
jns
mov
dec
mov
int3
jl
mov
scas
inc
add
push
push
dec
mov
les
or
dec
push
dec
push
push
dec
push
pop
push
mov
mov
int3
dec
mov
int3
push
call
inc
or
add
ja
push
add
bound
add
add
sar
addl
mov
add
fldcw
in
mov
popa
fbstp
sbb
push
mov
mov
enter
enter
cmc
push
jge
mov
outsb
dec
cmp
xor
push
stc
jb
add
icebp
adc
sub
inc
repnz
add
outsb
pop
or
adc
cmc
test
inc
jge
adc
rolb
pop
pop
mov
or
xchg
add
push
std
push
push
pusha
cld
negb
pushl
add
push
into
popa
lcall
cs
inc
out
pop
test
cli
mov
minps
bnd
or
xchg
or
repnz
ret
dec
cli
pop
jmp
and
dec
mov
add
push
jbe
xor
icebp
js
daa
jp
inc
mov
or
push
jmp
ret
adc
add
mov
pop
inc
ficoml
out
lret
jb
add
gs
pop
inc
adc
out
out
insl
fdivrl
add
out
shlb
and
int
mov
incl
mov
jmp
cmc
add
bound
add
ss
adc
adc
pop
cmp
loopne
cmc
sbb
and
clc
mov
aaa
aas
cld
daa
aas
jmp
mov
add
sub
lock
call
sahf
inc
push
jb
inc
dec
stos
sub
call
adc
mov
or
or
sbbb
push
add
add
in
add
bnd
ret
mull
and
mov
in
dec
addl
rcrb
addl
ror
out
sbb
sub
or
adc
ds
push
and
les
and
movsb
sub
out
leave
fcmovnu
fcmovne
fsubs
insl
hlt
or
xor
dec
and
xchg
mov
inc
add
add
adc
out
int
push
notb
push
and
dec
or
icebp
add
add
add
mov
notb
orb
frndint
incl
inc
and
jno
and
push
push
dec
sub
test
jno
call
xor
icebp
xchg
mov
cld
mov
outsl
in
cld
incl
add
neg
pop
pop
enter
xor
lcall
cmp
icebp
clc
add
cld
push
add
add
add
neg
out
xchg
add
xchg
add
add
add
loopne
add
add
add
loopne
add
roll
out
testb
idivb
or
mov
add
add
add
testb
negb
data16
add
adc
out
testb
idivb
out
add
fcomip
add
add
add
negb
out
loop
add
loope
add
add
add
testb
clc
das
adc
add
cmc
add
jmp
clc
icebp
inc
daa
add
sub
add
cmc
add
mov
jmp
add
daa
add
cmc
add
xchg
add
add
daa
add
das
daa
add
cmc
add
jbe
jmp
add
es
cmc
add
push
imul
lods
cs
add
ds
add
cmc
add
ss
jmp
add
and
add
sub
clc
movswl
add
sbb
add
add
in
idiv
mov
cmp
cmp
filds
add
enter
add
add
cmp
push
adc
add
add
add
cld
cmp
ljmp
add
aad
add
cmp
lahf
add
add
jg
daa
push
dec
push
mov
js
pop
add
dec
add
add
pop
add
add
add
pop
add
not
cld
cmp
fdivr
aaa
add
add
xlat
cld
xor
xlat
cld
inc
out
cld
jnp
xlat
cld
addr16
ss
cld
pop
pop
sbb
pop
out
cld
adc
frndint
and
frndint
pop
out
cld
inc
pop
inc
pop
incl
sti
push
mul
frndint
repz
cld
add
frndint
cmp
frndint
daa
pop
and
filds
fildl
xlat
out
cld
roll
add
out
cld
jecxz
frndint
sbb
frndint
mov
repnz
add
adc
add
out
dec
adc
add
out
cmp
out
cli
adc
add
add
adc
add
adc
add
out
bound
out
lcall
add
out
mov
out
jbe
out
sbb
out
push
adc
add
adc
add
add
jp
out
cmp
out
mov
out
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
cmc
call
psubsw
mov
psubsw
movsb
psubsw
test
jmp
cmc
mov
jmp
cmc
cwtl
psubsw
xor
jmp
cmc
sbb
jmp
cmc
and
jmp
add
add
add
jmp
cmc
or
jmp
cmc
hlt
psubsw
clc
psubsw
cld
psubsw
add
jmp
cmc
call
or
cmc
lock
cmc
aam
jmp
pop
rorl
dec
movsl
adc
mov
pop
pop
jmp
paddd
adc
mov
nop
adc
mov
sldt
add
std
mov
mov
iret
std
mov
iret
std
scas
pandn
stos
pandn
cmpsl
bswap
std
mov
setg
fwait
setg
xchg
jg
std
setg
mov
lahf
std
xchg
std
orl
std
jg
pop
std
jnp
pop
std
ja
dec
std
rorb
not
cld
loope
xlat
cld
lret
out
cld
enter
dec
jmp
fdivr
inc
add
add
xlat
cld
inc
icebp
xlat
cld
aas
jmp
fdivr
aaa
stc
xlat
cld
xor
xlat
cld
das
jmp
ljmp
pop
ljmp
add
cld
daa
stc
jmp
cld
pop
jmp
ljmp
icebp
jmp
cld
or
ljmp
icebp
jmp
cld
sti
add
cld
idiv
add
add
add
push
out
mov
out
cmpsb
lock
or
out
scas
lock
push
movntq
push
movntq
dec
movntq
dec
movntq
inc
movntq
add
out
movntq
cmp
out
movntq
mov
out
scas
push
out
stos
push
out
mov
push
out
lcall
add
push
out
mov
out
jle
out
add
add
push
out
scas
push
out
stos
push
out
cmpsb
push
add
cmc
int3
or
cmc
enter
les
jmp
cmc
mov
jmp
cmc
fs
cmc
orb
cmc
pop
or
cmc
popf
or
cmc
inc
or
cmc
insb
or
cmc
dec
or
cmc
jno
jmp
cmc
inc
or
cmc
inc
or
cmc
push
or
cmc
and
jmp
add
add
cld
or
cmc
clc
or
cmc
hlt
or
cmc
and
jmp
cmc
clc
or
cmc
hlt
or
cmc
xchg
jmp
cmc
dec
sbb
popl
cmpsl
sbb
add
pop
add
sbb
sub
dec
add
or
pop
add
or
dec
add
or
pop
add
or
lar
push
pop
add
add
add
add
or
filds
mov
or
iret
add
filds
lods
or
iret
add
push
iret
add
or
popl
push
adc
out
mov
out
xchg
out
sub
cld
jg
call
cld
cmpsl
push
call
cld
fucom
out
clc
out
cld
push
add
add
out
push
jmp
cld
mov
sti
out
push
repz
push
jmp
cld
dec
add
cld
dec
sti
out
mov
jmp
cld
cltd
add
cld
sub
jmp
cld
jmp
ljmp
repz
cld
lsl
cld
or
jmp
out
repnz
out
mov
out
add
add
or
out
dec
or
out
push
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
out
ds
out
cmpsb
or
add
or
add
or
add
or
add
add
push
or
jmp
cmc
into
or
cmc
ljmp
cmc
loop
jmp
cmc
mov
or
cmc
mov
jmp
cmc
lret
cmc
pusha
or
cmc
cmp
jmp
cmc
xor
jmp
cmc
dec
or
cmc
dec
or
cmc
inc
or
cmc
inc
or
cmc
sbb
jmp
cmc
adc
jmp
add
add
sub
jmp
cmc
and
jmp
cmc
cld
or
cmc
clc
or
iret
adc
decb
or
decb
or
incb
or
incb
or
decl
lahf
sti
or
repz
out
or
jmp
dec
out
dec
jecxz
pop
fisttps
pop
fisttpl
dec
xlat
or
rorl
pop
dec
or
dec
or
add
paddd
or
inc
or
mov
or
mov
paddd
or
std
mov
or
std
mov
or
out
mov
out
adc
out
fwait
pop
call
cld
mov
out
xchg
out
xchg
std
out
jg
out
jnp
out
loope
out
fldl
call
cld
imul
cld
add
add
out
arpl
out
scas
std
out
stos
in
out
xchg
out
addb
cld
jle
out
jp
out
xchg
in
out
xchg
std
out
std
out
mov
out
xchg
out
cmp
cld
jg
jmp
cld
ja
add
add
out
push
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
cli
or
add
or
add
or
add
out
or
add
out
dec
or
add
out
inc
or
add
out
dec
or
add
out
mov
out
xor
out
in
out
loopne
out
es
add
or
add
or
add
or
jmp
cmc
push
add
cmc
mov
add
jmp
cmc
jo
jmp
cmc
mov
jmp
cmc
test
jmp
cmc
push
push
jmp
cmc
push
push
jmp
cmc
xor
jmp
cmc
sub
jmp
cmc
inc
push
jmp
cmc
scas
or
cmc
xor
jmp
add
add
inc
push
jmp
filds
inc
or
add
iret
add
iret
add
or
add
filds
and
iret
add
iret
add
or
add
or
add
or
add
or
add
or
lock
in
or
call
or
loopne
dec
add
or
add
dec
add
or
add
or
add
or
add
or
add
pop
add
or
add
or
out
mov
jmp
cld
mov
out
scas
out
out
stos
out
out
cmpsl
jmp
cld
mov
in
out
fwait
out
out
xchg
jmp
cld
xchg
jmp
cld
out
out
mov
out
xchg
out
cmp
cld
jg
out
jnp
out
ja
add
jmp
cld
jae
out
outsl
out
out
imul
cld
addr16
cld
int
out
pop
out
out
pop
out
out
push
jmp
cld
push
jmp
cld
dec
out
out
dec
out
out
inc
incl
out
mov
out
mov
out
mov
or
add
or
add
add
or
add
out
or
out
jo
out
je
out
add
add
or
add
or
add
or
add
out
in
or
add
out
adc
out
aam
out
enter
or
add
out
pop
or
add
or
add
out
and
out
sbb
or
jmp
cmc
push
add
jmp
cmc
scas
pop
jmp
cmc
movl
cmc
testb
ljmp
cmc
add
jmp
cmc
mov
pop
jmp
cmc
lahf
pop
jmp
cmc
ja
jmp
cmc
outsl
pop
jmp
cmc
xchg
jmp
cmc
jg
jmp
cmc
push
or
cmc
dec
or
cmc
dec
or
cmc
mov
mov
or
add
ud0
or
ljmp
or
jmp
or
cltd
or
xchg
or
xchg
or
decb
or
incb
or
jns
jne
jno
lahf
insl
or
or
pop
or
pop
or
push
or
push
or
add
pop
decb
pop
decb
dec
incb
mul
cld
inc
cld
out
inc
cld
out
cmp
in
out
xor
cld
out
sub
in
out
and
cld
out
sbb
in
out
adc
cld
out
or
in
out
add
cld
out
std
out
out
stc
out
out
cmc
jmp
cld
icebp
add
add
out
in
out
out
jmp
jmp
cld
loope
out
fucomp
out
out
aad
out
sar
add
add
pop
out
sub
out
cmp
out
xor
out
pusha
pop
out
pop
pop
out
dec
pop
out
inc
pop
out
push
pop
out
dec
pop
out
cwtl
cli
out
xchg
cli
out
cmp
add
add
out
fs
out
add
add
out
insb
cli
out
js
out
je
out
and
out
sbb
out
or
out
add
out
adc
out
or
out
fdivr
out
aam
out
sar
add
pop
jmp
cmc
ds
jmp
cmc
inc
pop
jmp
cmc
push
pop
jmp
cmc
push
pop
jmp
cmc
push
pop
jmp
add
add
sbb
jmp
cmc
and
jmp
cmc
ljmp
cmc
repnz
jmp
cmc
cli
push
jmp
cmc
add
jmp
cmc
lret
cmc
pop
jmp
cmc
fiadds
jmp
cmc
out
jmp
dec
add
or
or
rorb
pop
add
or
lret
add
or
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
popl
jbe
lahf
add
lahf
add
popl
push
popl
data16
xlat
cld
add
add
xlat
cld
popa
out
xlat
cld
pop
out
xlat
cld
pop
xlat
cld
push
xlat
cld
push
out
xlat
cld
dec
out
xlat
cld
dec
xlat
cld
inc
xlat
cld
inc
out
xlat
cld
cmp
xlat
cld
xor
out
xlat
cld
sub
xlat
cld
and
out
xlat
cld
sbb
xlat
cld
adc
out
xlat
cld
or
stc
xlat
cld
and
xlat
cld
add
add
out
xlat
cld
std
icebp
xlat
cld
stc
stc
xlat
cld
cmc
icebp
xlat
cld
icebp
stc
add
add
add
out
push
add
out
sub
out
and
out
sub
out
xor
out
pop
add
out
inc
add
out
dec
add
out
push
push
out
inc
push
out
add
add
push
out
sub
out
daa
push
out
xor
out
adc
out
jl
out
jo
out
je
out
sbb
add
add
add
cmc
sbb
add
cmc
push
add
cmc
bound
jmp
cmc
sub
jmp
cmc
xor
jmp
cmc
cmp
jmp
cmc
add
jmp
cmc
or
jmp
add
add
push
add
cmc
adc
jmp
cmc
sbb
jmp
cmc
and
jmp
cmc
ljmp
cmc
repnz
cmc
out
add
cmc
cli
add
cmc
testb
cmc
add
jmp
stc
push
lahf
push
push
lahf
push
push
in
push
jmp
push
pop
jmp
push
dec
fldl
dec
flds
pop
call
push
add
add
roll
dec
dec
push
dec
dec
push
pop
incl
add
jp
ud0
push
pop
pushl
push
ud0
push
mov
push
iret
cltd
push
xchg
push
xchg
push
iret
decb
push
lahf
incb
test
xlat
cld
xor
xlat
cld
jns
xlat
cld
jne
add
clc
xlat
cld
jno
xlat
cld
insl
clc
xlat
cld
imul
xlat
cld
popa
lock
cld
pop
clc
xlat
cld
pop
lock
cld
push
clc
xlat
cld
push
lock
cld
dec
clc
xlat
cld
add
xlat
cld
add
xlat
cld
cld
cmc
xlat
cld
clc
cmc
xlat
cld
cmp
xlat
cld
xor
lock
cld
sub
lock
cld
and
lock
cld
sbb
lock
cld
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
pop
add
add
out
push
add
add
add
add
out
sub
out
and
out
inc
add
add
out
cmp
out
xor
out
push
add
add
add
out
inc
add
add
add
mov
out
cwtl
out
xchg
out
jo
out
insb
call
cmc
jb
jmp
cmc
jp
jmp
cmc
addb
cmc
inc
add
cmc
dec
add
cmc
dec
add
cmc
push
add
cmc
push
add
cmc
pop
add
cmc
pop
add
cmc
bound
jmp
cmc
sub
jmp
cmc
xor
jmp
add
add
cmp
jmp
cmc
inc
add
cmc
push
add
cmc
or
jmp
cmc
adc
jmp
cmc
sbb
jmp
cmc
and
add
add
add
iret
add
add
lahf
add
add
popl
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsl
repnz
cld
mov
repnz
cld
cltd
cli
xlat
cld
xchg
repnz
cld
xchg
cli
xlat
cld
repnz
cld
mov
xlat
cld
test
add
repnz
cld
cmp
xlat
cld
jns
xlat
cld
jne
xlat
cld
jno
xlat
cld
insl
repnz
cld
imul
xlat
cld
popa
cli
xlat
cld
pop
repnz
cld
pop
cli
xlat
cld
push
repnz
cld
push
cli
xlat
cld
dec
repnz
cld
dec
cli
xlat
cld
inc
repnz
cld
inc
cli
xlat
cld
cmp
cli
xlat
cld
xor
cli
add
add
std
out
or
out
adc
out
add
add
out
fdivr
out
loopne
out
add
out
clc
cld
out
in
cld
out
lock
out
hlt
cld
out
mov
out
jl
out
addb
add
add
out
dec
add
add
out
push
add
add
add
add
out
and
out
inc
add
add
add
add
add
add
jmp
add
jmp
add
add
in
out
lock
call
cmc
pop
call
cmc
ret
call
cmc
lret
call
cmc
sar
call
cmc
call
cmc
mov
call
cmc
scas
call
cmc
mov
call
cmc
mov
call
cmc
mov
call
add
add
xchg
call
cmc
fwait
call
cmc
es
jns
or
push
add
mov
add
cld
dec
cmp
pop
incl
fdivs
call
wbinvd
lds
orb
not
sbb
divl
and
daa
pop
in
jnp
clc
adc
sbb
add
adc
sbb
jmp
call
aas
add
dec
in
leave
imull
ds
mov
je
jp
sbb
lock
sti
jp
cmc
clc
adcb
fadds
test
jnp
insb
cld
add
add
call
cld
mov
flds
cld
outsb
xchg
idivb
jl
jge
fiadds
test
mov
mov
add
ss
sbb
jne
repnz
fiadds
add
adc
dec
add
or
jge
lods
add
jmp
addl
ret
out
jb
clc
jge
ljmp
ret
clc
mov
add
push
arpl
add
sub
fldcw
test
push
stc
fcomps
add
add
shll
add
out
push
inc
inc
inc
sti
push
and
mov
inc
in
sub
gs
add
movsl
test
out
adc
add
mull
push
cmc
jge
and
add
movsl
fcmovnu
rcll
lret
inc
lds
mov
jmp
sarl
or
add
testl
add
rolb
add
jmp
mov
xor
cmp
cli
movsb
adc
add
sahf
mov
inc
lret
pop
fs
mov
call
push
jl
aad
mov
and
cmpb
xor
shrl
sar
xor
inc
or
pop
je
mov
call
add
add
xchg
mov
or
loopne
add
in
mov
or
decl
jne
pop
pop
out
add
cmp
inc
cld
or
ret
sub
add
add
testl
testl
cwtl
into
mov
pop
cmpb
xchg
inc
insl
add
pushf
cmpb
push
mov
add
imulb
jp
leave
push
add
sbb
xor
push
jp
test
add
iret
lret
ljmp
jbe
cld
decb
std
leave
mov
bound
leave
mov
dec
scas
aam
add
add
bswap
mov
imul
jge
in
push
add
push
jp
pop
push
add
push
add
push
jl
test
push
sti
imul
inc
sti
andl
push
mov
call
and
shll
inc
hlt
add
test
dec
adc
faddl
mov
add
add
add
stos
and
rorl
mov
out
hlt
test
iret
fidivrs
out
mov
in
xorb
shlb
in
and
add
xorb
rclb
out
add
mov
out
test
jo
mov
jnp
mov
add
movsl
je
xor
add
mov
sbb
das
movsl
fs
xor
mov
push
jbe
sbb
inc
sub
clc
push
mov
test
cmc
aas
sbb
sub
adc
sub
out
stos
mov
push
call
mov
sbb
test
aad
mov
clc
add
push
sub
and
inc
sbb
mov
out
idiv
mov
sbb
sbb
ja
sti
call
jnp
or
insl
or
jp
in
add
je
xlat
xor
adc
mov
inc
mov
ret
repz
imul
imul
push
add
add
and
call
ret
and
adc
jp
testb
mov
jns
dec
adc
sti
std
out
jae
clc
xor
bound
in
test
sbb
xor
fdiv
cmp
jl
jns
subl
inc
aad
inc
sbb
std
inc
out
sti
jne
incl
add
push
cmpl
test
pushl
testb
pop
mov
popf
mov
mov
sub
cmpl
out
idivb
cli
orb
xchg
out
repz
xor
arpl
out
je
out
imulb
movsl
test
sti
std
sub
imul
add
add
jecxz
cmc
xor
test
sahf
leave
mov
in
hlt
test
leave
fidivrs
jmp
std
lret
fistpl
mov
xor
xor
test
add
xor
jge
add
cmc
jp
or
cmp
clc
stos
popf
stc
jl,pt
and
mov
sbb
mov
add
add
mov
clc
push
push
add
hlt
test
test
mov
ljmp
fstpt
inc
lret
out
inc
mov
clc
push
jp
adc
test
out
mov
cmp
jmp
add
jno
mov
adc
cmp
call
sub
adc
mov
mov
jne
xchg
inc
out
lret
add
add
push
nop
ds
out
lret
pushf
cmp
sbb
sbb
aaa
xchg
lcall
push
out
leave
idiv
mov
out
leave
idiv
dec
test
or
lret
pushf
dec
add
and
out
stos
mov
push
add
shl
dec
dec
push
add
lods
loopne
adc
add
testb
mov
sarb
aam
fwait
cmpsb
sarl
aam
jl
sarl
jae
sar
cli
imul
clc
xor
in
jge
lret
dec
mov
dec
adc
mov
out
xor
dec
adc
lods
cli
out
sbb
dec
adc
aam
out
add
xor
ret
mov
aam
loop
sarl
jmp
movb
clc
fisttpl
xor
add
out
imul
dec
jne
mov
sar
icebp
std
in
iret
dec
popa
mov
sbb
test
enter
mov
lds
cmp
add
jg
push
xor
sbb
popa
lds
fucomi
add
dec
lds
sub
mov
jnp
testb
mov
jmp
clc
push
mov
jnp
divb
sbb
mov
je
popf
adc
mov
jl
mov
inc
stos
add
fidivrs
mov
adc
add
add
mov
adc
rolb
popf
ds
adc
test
call
push
cld
hlt
cld
test
jb
mov
add
sbb
jmp
xor
inc
cmp
push
add
inc
or
bswap
idiv
or
mov
and
stc
inc
lods
cmpl
xorl
je
add
lret
clc
mov
add
test
jmp
mov
insb
adc
mov
test
add
jmp
idiv
mov
dec
stc
or
je
lcall
bound
verw
pop
test
push
add
or
mov
std
bound
mov
jne
push
add
pushf
movsb
xor
fidivrl
inc
mov
mov
jae
adc
jl
int3
push
jae
rorl
clc
adc
aaa
pop
pop
mov
cmpl
je
clc
push
mov
mov
push
mul
loopne
mov
ret
mov
and
inc
adc
mov
call
add
add
mov
or
das
mov
ret
lret
sbb
sub
cmp
pop
xor
push
inc
idivl
jp
mov
movb
add
cmpsb
mov
xchg
out
add
and
cmp
test
mov
lock
pop
adc
int3
shrl
test
mov
add
add
jmp
movsl
shll
add
mov
out
xor
adc
mov
jne
jge
lret
pop
je
xchg
call
lret
jmp
mov
jmp
mov
push
imul
test
and
dec
add
add
adc
aas
repnz
outsl
repz
mov
bound
dec
enter
insb
inc
add
mov
or
lea
test
or
sti
inc
pusha
jae
cmp
jecxz
push
je
or
cld
clc
mov
fwait
pop
mov
cmp
or
jp
adc
enter
add
cmp
xchg
cmpsb
js
in
adc
aaa
sub
addl
scas
fwait
xchg
insb
ds
sub
mov
sbb
pop
sbb
dec
push
insl
sub
insl
insl
and
xor
or
insl
sbb
pop
insl
push
sti
lock
pop
icebp
jae
dec
fidivs
pop
fbstp
pop
pushl
fs
mov
test
xor
mov
cltd
jge
cli
ss
mov
cld
mov
mov
cmpl
add
aaa
add
popa
mov
inc
adc
sbb
cld
cld
rcrl
add
mov
aas
push
icebp
sub
call
mov
inc
sbb
jp
std
pop
negb
add
inc
pop
mov
push
jbe
fisttpll
lret
lahf
movsb
cmc
dec
pop
mov
jecxz
jbe
nop
jne
out
add
add
add
add
ret
mov
add
jnp
jecxz
jbe
add
outsl
out
imulb
dec
mov
pop
pop
dec
jle
scas
xor
shll
mov
mov
loop
ret
in
add
add
mov
jmp
jle
scas
out
out
mov
aas
add
pop
sub
sub
add
add
fsubl
iret
andl
call
insl
insb
mov
push
stc
jl
stc
xor
sub
clc
jle
insl
jl
clc
xor
push
lods
jae
dec
cmp
pop
mov
jl
divl
add
test
mul
or
call
sub
add
test
push
clc
jb
dec
fcomip
push
add
add
out
dec
test
bound
pop
jmp
hlt
imul
or
add
cmc
addl
jb
add
mov
pop
add
aaa
scas
in
call
jmp
call
pop
scas
mov
and
sbb
cmpl
cli
and
add
inc
mov
jnp
shl
out
jne
incl
add
sbb
scas
hlt
add
inc
movsl
cmp
dec
inc
sbb
fadd
cmp
add
sbb
fnstcw
stc
cmp
incl
or
testl
negb
push
add
xchg
test
clc
dec
push
idivb
add
ret
cmpsb
mov
sbb
das
adc
or
push
mov
test
xor
mov
push
mov
imul
mov
mov
mov
cld
repz
repnz
cwtl
aas
sbb
mov
ds
negb
loope
pusha
pop
add
push
cltd
cld
decl
leave
movsb
pop
mov
stc
add
fmulp
or
rol
sbb
out
imulb
mov
shll
add
out
jg
or
add
adc
and
sbb
mov
in
ss
int
testb
mov
sbb
jmp
cltd
fsubrl
in
mov
dec
sub
add
cmp
mov
test
ja
les
mov
jnp
sub
loope
add
sar
jge
test
or
xchg
lahf
test
clc
mov
add
scas
icebp
adc
jmp
sbb
mov
cmc
in
jmp
pop
mov
jbe
sub
and
scas
clc
pop
mov
mov
rep
imul
xchg
clc
jl
stc
sub
je
add
add
icebp
push
outsl
insb
out
push
clc
fsts
jmp
jnp
mov
or
add
imull
add
jbe
aaa
ss
cmp
call
mov
jnp
cmpsb
ret
mov
subl
cli
or
std
out
pop
idiv
dec
test
or
push
imul
pop
pushw
jne
jge
add
add
or
decl
jp
cmpsl
lock
out
push
idiv
neg
movsb
pushf
movsb
divl
inc
aad
cmp
stos
jbe
cld
jno
cld
push
cltd
cld
push
mov
adc
div
insb
cld
dec
lcall
imulb
mov
add
adc
add
add
lcall
idivb
lret
cld
or
insl
cld
stc
cltd
cld
push
cltd
cld
push
gs
mov
insl
cld
rcrl
cld
push
jnp
cld
mov
add
jb
cmpsl
out
testb
add
add
lret
xchg
cmpsl
push
adc
add
insl
andb
add
add
or
add
add
out
testb
add
add
inc
cmpsl
adcb
add
jno
cmpsl
out
testb
add
add
sbb
ja
or
out
testb
repnz
outsb
adc
add
loop
out
testb
add
add
aad
cmpsb
outsb
adc
add
lea
clc
jmp
cmc
add
loope
movsl
clc
aad
add
jne
add
pop
movsl
clc
jmp
cmc
add
jae
movsl
clc
mov
loop
clc
jmp
cmc
add
mov
add
lods
shll
jmp
inc
movsl
clc
add
cmpsb
movsb
clc
jmp
cmc
add
insl
and
clc
icebp
call
add
jmp
cmc
add
jmp
cmc
add
inc
fs
frstor
pushl
addr16
jmp
data16
ljmp
fs
decl
sti
incl
sti
decl
fs
mov
fs
pushl
fs
pushl
fs
decl
sti
decl
sti
jmp
mov
lcall
mov
fnstenv
call
mov
lcall
mov
sti
incl
sti
incl
add
imul
sti
sti
mov
jmp
rol
cld
shrl
cld
leave
jl
cld
rcrl
cld
mov
ret
sbb
cld
mov
es
cld
xchg
mov
cld
mov
cld
or
cld
push
adc
mov
cld
pop
mov
mov
cld
inc
loop
cld
add
add
fidivrs
cld
sub
mov
cld
sbb
mov
cld
add
cld
stc
cltd
cld
push
and
cld
jmp
add
outsl
fisubl
stos
outsb
lret
outsb
ret
outsl
mov
mov
pop
outsl
mov
mov
add
mov
call
outsl
add
add
shrb
push
jo
mov
dec
jo
mov
jb
inc
mov
jbe
xor
shrb
xchg
outsl
sbb
hlt
jo
mov
and
mov
clc
cmc
movsw
clc
insl
movsw
clc
jns
movsl
clc
jae
movsl
clc
addl
clc
daa
inc
movsl
clc
adc
movsl
clc
add
add
add
movsl
clc
or
movsl
clc
cmc
pop
movsl
clc
ret
pop
movsl
clc
movl
movsl
clc
mov
movsb
clc
jns
movsb
clc
addr16
clc
insl
in
clc
add
clc
lahf
les
int
movsb
clc
mov
movsb
clc
frstor
movsb
clc
and
xchg
add
das
cld
jmp
das
cld
incl
add
pop
lret
sti
ljmp
lret
sti
lcall
lret
sti
lcall
lret
sti
jmp
sti
call
sti
call
adc
fistl
cld
jmp
adc
inc
adc
dec
adc
ljmp
adc
inc
adc
call
adc
mov
adc
call
adc
call
adc
cmp
adc
call
push
cld
incl
add
aaa
push
cld
push
pop
gs
or
cld
add
data16
stc
sbb
cld
icebp
sub
jmp
gs
fldcw
cld
rorl
gs
leave
cwtl
gs
roll
xor
mov
gs
test
in
fs
cltd
push
gs
xchg
adc
cld
mov
cld
jns
fs
jno
fs
imul
cld
pop
or
add
push
mov
cld
dec
mov
jo
cmp
cld
xor
jno
sub
ja
mov
or
mov
mov
jbe
lahf
shlb
lahf
fdivs
lahf
pusha
jbe
lahf
dec
jbe
lahf
xor
lahf
ss
lahf
cli
jne
lahf
jp
mov
jl
stos
lahf
dec
jbe
lahf
fs
lahf
xchg
jne
lahf
mov
add
add
lahf
cmpsb
jne
lahf
clc
jo
lahf
out
testb
aam
lahf
ds
lahf
and
push
lahf
out
testb
add
sub
testb
ljmp
add
pushf
clc
and
clc
add
clc
jmp
cmp
popf
clc
shrl
in
pushf
popf
clc
dec
popf
clc
xor
add
jg
clc
sub
outsl
popf
clc
test
clc
mov
clc
jg
popf
clc
jae
popf
clc
popf
dec
popf
clc
test
popf
clc
mov
popf
clc
ret
scas
popf
clc
iret
scas
popf
clc
fcomip
add
in
popf
clc
xlat
lea
clc
add
pop
sti
pushl
sti
decl
add
add
sti
lcall
sti
pushl
add
sub
sti
dec
sar
addr16
sti
pushl
sti
jmp
ret
sti
pushl
sti
pushl
sti
aas
sar
insl
mov
sti
jmp
sar
or
sti
jmp
sti
in
mov
sti
decl
scas
lahf
jg
sti
ljmp
sar
divb
sar
and
add
sbb
cld
sub
cld
and
cld
sbb
sar
mov
sar
mov
cld
icebp
call
sar
dec
ret
cld
fstps
ret
cld
shrl
ret
cld
leave
mov
ret
jle
cld
mov
mov
cld
mov
pop
ret
retw
mov
cld
sbbl
cld
jno
mov
imul
and
push
pushf
les
inc
les
push
les
pushf
push
les
pushf
pusha
and
adc
movb
enter
mov
repnz
ret
fcmovb
loop
loopne
ficompl
inc
cmp
ret
lds
fwait
add
fwait
pop
lds
add
mov
fwait
mov
les
fwait
dec
les
xor
jb
fcmovb
push
fdivs
pushf
clc
jmp
pushf
clc
iret
ss
clc
mov
ss
clc
xorl
pushf
clc
addr16
clc
cmp
pushf
clc
inc
aaa
pushf
clc
lds
pushf
clc
xchg
xor
pushf
clc
fnstsw
popf
clc
mov
popf
clc
and
add
mov
clc
lds
add
leave
stos
popf
clc
popf
clc
jmp
lret
jmp
popf
clc
sbb
popf
clc
das
movsl
popf
clc
pop
movsl
popf
clc
add
lods
sti
fildll
sti
jns
sti
call
mov
push
mov
call
sti
jmp
push
sti
jmp
push
sti
jmp
push
sti
inc
push
sti
incl
add
lods
push
sti
incl
sti
decl
sti
lcall
sti
lcall
push
sti
mov
std
jg
std
jg
push
sti
inc
std
jg
std
jg
std
jg
push
sti
jmp
std
jg
std
jg
test
pushl
cld
pushl
cld
pushl
mov
popa
mov
pushl
cld
pushl
cld
incl
add
jbe
mov
inc
inc
add
jbe
mov
xor
cld
pushl
cld
pushl
cld
pushl
mov
or
cld
pushl
cld
pushl
cld
push
inc
into
cld
loope
int
fld1
int
rcl
int
leave
fmul
cld
ror
cld
mov
fmul
cld
test
cmpsb
sar
cltd
mov
add
mov
add
cwtl
in
aam
cwtl
out
testb
mov
cwtl
jb
pop
cwtl
jp
push
cwtl
ds
inc
cwtl
add
xor
mov
and
add
cmpsl
adc
xor
add
mov
push
sub
xor
sbb
add
xor
lret
pop
push
add
add
push
fstpt
add
add
aam
adc
and
add
daa
imul
cmc
mov
movsl
push
or
outsb
mov
sub
xchg
xor
repnz
pop
push
pop
xor
dec
sti
inc
outsb
dec
pop
inc
addr16
in
outsb
inc
repnz
pop
cmp
aad
insl
sbb
inc
arpl
add
add
sub
daa
arpl
push
add
imul
xor
adc
insl
push
add
adc
sub
jae
add
add
pop
fs
pop
jb
shlb
popl
les
cli
imul
loope
je
add
add
shll
lods
shlb
dec
add
adc
pop
fs
pop
jb
add
mov
add
jb
in
outsl
imul
rcrb
cmc
push
outsl
lock
addr16
sub
cld
out
pop
jo
stc
data16
add
popa
stos
notb
idivb
cld
leave
bnd
ja
sub
imul
or
pop
pop
sbb
pop
or
push
lock
subb
fstps
push
add
add
jle
arpl
or
push
repnz
je
sub
cld
loopne
addr16
insb
popl
cmp
xchg
dec
sbb
or
addr16
add
pop
arpl
add
cmc
int
pop
push
xchg
adc
arpl
fistpl
dec
and
add
add
sbb
mov
push
add
add
and
add
cmpsb
xor
or
addr16
cltd
and
or
adc
inc
jl
lret
pop
aad
inc
cs
push
pop
testb
add
sbb
es
cltd
or
daa
mov
or
xor
adc
orl
add
push
add
aaa
push
repz
push
and
add
add
cmp
jae
loope
add
sti
ds
adc
fisttpl
or
push
jmp
leave
sarl
insb
les
adc
into
and
cmc
out
scas
and
fs
sbb
insl
mov
aas
jmp
push
sbb
and
std
and
or
pop
inc
mov
push
iret
sbb
addl
fisttps
inc
add
add
pop
pop
or
iret
sbb
movsl
add
sbb
je
loop
imul
pop
inc
decb
adc
jae
popf
iret
pop
gs
jmp
fs
incb
imul
jb
jmp
ss
mov
adc
push
imulb
jns
cmp
and
pop
outsb
jecxz
jae
jbe
pop
jae
out
add
add
iret
jae
popf
shlb
mov
arpl
fldt
lret
je
loop
into
jae
int
data16
fldenv
repnz
idiv
and
test
cmpsb
mul
adc
mov
dec
pop
std
je,pn
in
sub
leave
and
testb
push
and
and
mov
sub
and
xchg
cmc
ja
imul
add
imul
testb
jecxz
adc
test
leave
adc
and
adc
and
cmpsl
cld
inc
cmc
lret
cs
xchg
inc
inc
outsb
fwait
inc
add
neg
and
sbb
mov
or
dec
sbb
sub
add
pop
sub
repz
xor
inc
pop
adc
adc
sub
lret
add
add
int3
dec
and
add
aaa
es
pop
push
les
sbb
fwait
sub
mov
and
andb
aas
orl
add
ja
shll
push
xor
add
repz
and
xor
cmpsb
adc
xchg
aaa
add
cmc
cwtl
jmp
adc
das
je
inc
xor
add
add
and
cli
stc
ds
sbb
and
arpl
push
add
mov
in
imul
sub
fisttpl
adc
aad
adc
repnz
js
cmc
dec
cld
lcall
pop
test
dec
mov
sbb
cmc
nop
add
sbb
arpl
cmc
cmpsb
add
jecxz
je
rcrl
cmp
add
add
sbb
lret
incl
cli
dec
jb
call
pop
gs
inc
gs
imul
fsubrl
imul
jae
cld
call
dec
gs
repnz
call
incl
scas
repnz
in
gs
add
add
fldcw
dec
cmp
popa
idiv
jmp
lock
jo
fdivrl
mov
imul
pop
jo
inc
add
faddl
gs
cmp
leave
in
jns
daa
and
mov
dec
imul
inc
test
insb
gs
or
add
jle
inc
push
mov
add
arpl
push
and
lea
add
sbb
inc
adc
or
add
add
lds
add
sbb
adc
fstpt
imul
mov
push
iret
or
jae
jnp
outsb
sarl
mull
je
add
xchg
aas
push
sbb
and
testb
add
and
mov
inc
daa
testb
add
push
pop
xor
adc
cwtl
add
es
inc
pop
sbb
add
or
add
pop
and
sbb
out
sub
aam
add
mov
pop
cmpxchg
add
inc
rcrl
inc
ljmp
es
out
or
add
or
aas
jmp
add
addr16
dec
add
fsubrl
je
add
add
sbb
shll
clc
divb
addr16
or
je
cmp
add
and
and
sbb
add
adc
int3
loope
push
rorb
and
dec
repz
arpl
xor
fs
rcrl
outsb
shlb
xor
arpl
sbb
outsb
add
jo
jg
inc
outsl
shl
imul
add
mov
add
add
loope
dec
scas
lock
jbe
shll
shl
fs
mov
add
pop
jb
fsubl
adc
dec
add
add
gs
jo
shl
fs
repnz
sti
lock
dec
fninit
gs
pop
gs
decb
push
loope
push
mov
repz
imul
cmp
add
add
loop
dec
idivb
arpl
xchg
cld
cmp
les
jo
xchg
cld
mov
xchg
cmp
dec
xchg
cmp
outsb
lahf
maxps
xchg
cld
cltd
hlt
loop
je
sbb
inc
push
pop
imul
push
aas
fcompl
pop
in
sbb
push
cwtl
cld
leave
neg
sbb
adc
xchg
arpl
pop
adc
add
add
addb
sbb
arpl
mov
imul
add
in
mov
loop
lods
push
ljmp
add
sbb
and
add
add
and
std
sub
and
testb
add
push
inc
and
dec
std
xor
push
add
add
and
push
push
out
jg
sub
inc
inc
or
inc
push
sti
push
dec
aaa
or
adc
add
adc
pop
shll
testb
add
push
mov
add
sbb
sbb
add
inc
test
xchg
std
lahf
add
pop
test
and
lea
roll
adc
inc
test
xor
pop
and
mov
sub
pop
add
add
and
adc
dec
repnz
xlat
push
imul
je
sub
imul
cmc
xor
inc
push
cmp
sbb
add
pop
or
push
ficompl
je
pop
inc
js
cmc
push
add
or
add
fcomps
std
ds
lds
jp
pusha
insl
jp
into
add
add
imul
imul
ds
xor
data16
popa
lret
aad
outsb
int
inc
popa
shl
imul
mov
push
mov
insb
insl
cmp
pop
insl
cli
data16
fisubrs
repnz
fidivs
loopne
gs
cld
mov
or
data16
fmuls
mov
ds
idivb
and
add
mov
incb
mov
and
cld
inc
hlt
pop
pop
je
imul
dec
sarl
add
mov
push
mov
pop
sbb
cmp
mov
arpl
rcrb
add
mov
aas
pop
push
xor
cmc
das
imul
add
arpl
xor
dec
dec
mov
arpl
add
push
in
and
push
in
inc
pop
test
push
pop
add
push
testb
add
sbb
das
sbb
cmp
pop
int3
dec
or
lret
and
add
test
and
sbb
add
add
sub
pop
jnp
adc
xchg
adc
xor
sub
and
xorb
sub
add
adc
cmp
add
sub
cmp
pop
push
xor
and
add
fdivr
fstl
mov
shlb
lret
inc
rcl
push
rcr
pop
add
mov
adc
mov
add
outsb
stos
adc
push
cmc
cmp
popl
add
repz
or
outsb
push
fnstenv
add
inc
arpl
pop
insl
pop
shll
arpl
aad
add
cmp
dec
sub
adc
adc
out
sub
adc
fs
out
jb
fisttpl
lret
popa
stos
jecxz
imul
in
data16
inc
add
pop
imul
pop
jae
incl
add
xor
dec
gs
pop
jae
cmp
jae
imul
fcomps
xchg
les
push
lods
ficomps
ud0
inc
mov
fstpt
add
std
dec
ja
call
push
and
outsl
add
inc
gs
aas
inc
dec
not
sbb
cld
xor
divl
divb
inc
jae
xchg
inc
stos
adc
idivb
inc
sbb
sbb
pop
aaa
cwtl
cld
hlt
gs
insb
sarl
cld
sub
fstpl
lds
arpl
pop
daa
je
push
inc
js
inc
add
xor
dec
xchg
adc
xor
add
mov
inc
fwait
ret
inc
insb
pop
and
daa
inc
push
int3
sbb
testb
push
add
add
sbb
inc
inc
movhps
pop
xor
adc
add
sub
sbb
or
or
testb
push
sub
enter
enter
int3
adc
and
testb
add
adc
add
ljmp
add
test
daa
rorl
xor
in
add
xor
add
mov
inc
sbb
add
add
mov
aaa
pop
push
decl
out
or
add
les
cmp
pop
add
shrl
sbb
pop
cmc
les
ds
pusha
sbb
ljmp
shl
cmp
in
jb
rolb
add
shll
out
lds
repnz
stos
cmc
int3
std
lcall
insl
stos
icebp
fildll
add
mov
ds
adc
dec
test
out
pop
mov
sar
pusha
hlt
shll
lock
jecxz
dec
call
shll
rcrl
pop
gs
add
fs
out
sbb
cmp
sbb
pop
jb
and
loop
add
roll
push
test
push
popl
in
add
popa
je
sbb
add
add
imul
and
pushf
sbb
xchg
push
outsl
gs
incl
inc
jo
sbb
addr16
pop
pop
je
push
push
pop
add
push
pushf
sub
lods
sbb
stos
cmp
or
imul
rorb
adc
imul
and
add
add
sbb
push
adc
adc
insl
or
push
daa
je
pop
sbb
mov
and
lcall
notb
and
sbb
adc
mov
addr16
add
movsl
cld
cmp
decb
push
lcall
sbb
ljmp
daa
add
add
dec
adc
dec
dec
push
repnz
add
rcll
daa
call
adc
sbb
add
add
repnz
and
in
es
ficompl
out
mov
jecxz
pop
mov
mov
jmp
jecxz
xor
out
sbbb
jle
aad
xorb
in
test
mov
add
testb
loopne
leave
pop
jns
in
dec
repz
dec
dec
in
ljmp
shr
arpl
out
insb
dec
adc
push
jmp
pop
shlb
push
ljmp
sbb
arpl
out
insb
or
fists
or
push
cmpsb
test
imul
out
add
hlt
shll
out
les
cmc
push
cmc
mov
movsl
adc
push
nop
repz
xchg
or
imul
mov
imul
dec
outsl
jns
dec
add
ds
popa
outsb
mov
outsl
dec
mov
add
pop
jb
pop
je
loope
push
outsl
sbb
inc
gs
adc
repnz
add
dec
push
aas
gs
popa
outsb
add
outsl
push
repnz
add
add
adc
inc
and
cmp
dec
pop
pop
jb
pshufw
add
pop
add
mov
cmp
data16
mov
pop
shll
jns
mov
adc
aaa
arpl
imul
je
enter
rclb
jae
xor
bound
cld
jbe
and
je
add
and
xor
push
add
inc
and
arpl
jne
movsl
negl
sbb
pop
dec
sbb
inc
add
add
adc
push
or
push
fidivs
pop
insl
in
sbb
dec
testl
sbbl
lcall
hlt
out
jmp
sbb
jecxz
add
add
clc
jmp
pop
mov
sbb
pop
in
add
adc
pop
inc
loopne
and
sbb
pop
out
das
sbb
add
xor
push
fimuls
adc
stc
out
and
int3
ret
sbb
iret
ret
and
add
ss
mov
lock
mov
add
add
out
mov
cmc
repnz
lods
or
dec
je
lds
call
lret
bound
fnsave
insl
dec
ret
hlt
pop
push
adc
add
cmc
shll
in
cmp
in
bound
bound
fucom
jae
loopne
callw
ljmp
xlat
jecxz
jmp
in
in
enter
lods
loopne
insb
enter
jecxz
jmp
mov
sbb
push
inc
jne
or
arpl
inc
bound
pop
je
add
add
popa
outsb
stos
xor
jnp
outsl
add
cmp
push
mov
incb
fwait
and
cmp
push
cmp
add
cmp
add
cmp
gs
adc
mov
push
outsl
or
popa
arpl
and
int
ds
pop
jns
push
pop
jb
xor
push
pop
add
xlat
add
mov
sarb
adc
and
sub
test
jno
xchg
popa
mov
scas
sbb
mov
inc
movsb
xchg
push
mov
add
pop
inc
xchg
enter
imul
je
add
inc
iret
adc
pop
imul
cs
push
push
adc
and
push
imul
push
pop
je
add
pop
xor
les
mov
or
add
scas
lock
adc
mov
xchg
push
rcr
nop
add
sarl
ret
jmp
inc
movsl
in
mov
add
add
in
adc
mov
pop
xor
out
adc
push
out
add
add
adc
cmp
repz
push
repnz
pop
dec
into
out
xchg
sbb
inc
repz
adc
decl
repz
or
icebp
bound
jb
add
push
mov
add
add
fbld
cmc
stc
lahf
jecxz
jae
adc
bound
or
addr16
stc
fsubrl
or
ja
cmc
xor
lods
lock
dec
test
fbstp
frstor
cmc
push
ljmp
add
outsl
push
sbb
insl
push
add
dec
push
sti
out
cmp
repnz
ljmp
in
outsl
adc
adc
dec
or
push
popl
ret
push
jno
add
add
adc
pop
add
pusha
add
jb
adc
adc
pop
inc
gs
jo
xor
jae
adc
xchg
imul
les
pop
adc
mov
pop
imul
push
mov
test
int3
push
jo
cmp
push
sbb
data16
jne
push
iret
inc
add
jno
add
add
dec
pop
insb
repnz
imul
data16
add
jae
add
xor
add
add
mulb
les
inc
rcrb
cld
xor
icebp
push
roll
inc
loopne
cmc
imul
xor
movsb
xchg
shll
lods
in
dec
stos
imul
imul
xchg
out
add
add
mov
cld
push
divb
add
ret
shlb
ss
push
push
mov
aad
roll
push
sub
add
and
add
adc
and
inc
add
sbb
fsubr
add
mov
push
into
ret
test
mov
mov
neg
ffreep
in
ret
fistl
in
add
add
mull
in
cltd
in
jns
and
add
xchg
fnstsw
nop
in
outsl
xchg
in
inc
notb
mov
push
add
loop
cli
push
out
xor
inc
out
aas
loopne
inc
fucomi
insl
adc
aam
add
call
insl
adc
aam
add
jno
lods
add
add
mov
pop
aam
fidivl
xor
insb
lret
outsl
mov
pop
in
lock
bound
and
jae
cmp
insb
mov
fisubrl
push
jecxz
mov
in
in
mov
dec
push
fidivs
sub
sbb
fs
filds
add
arpl
outsl
fldenv
imul
add
cli
gs
add
add
popa
fwait
pop
imul
addr16
popa
andb
pushf
add
popa
dec
pop
inc
jae
push
inc
push
dec
add
add
insb
push
mov
popa
sub
imul
push
pop
add
add
jbe
outsb
fwait
pop
dec
add
jne
jb
jb
data16
add
add
push
test
dec
add
add
cld
push
testb
jae
xor
inc
pop
sub
pop
dec
das
out
jbe
pop
cld
sub
push
sbb
arpl
adc
bound
imul
and
add
testb
jae
sub
imul
aas
in
data16
jmp
add
lods
in
fstl
dec
flds
push
idivb
in
mov
jl
outsl
xchg
jp
insb
add
add
pop
cld
xor
mov
insl
movsb
lcall
testl
dec
hlt
xor
out
or
ss
dec
ret
es
add
cmc
xor
dec
icebp
sbb
mov
cmc
adc
sbb
and
inc
add
add
cmc
hlt
ret
daa
add
call
repz
mov
mov
in
mov
into
hlt
ret
ror
ffreep
call
add
add
aad
add
fsubs
in
cmpsl
jecxz
clc
pushf
loop
icebp
movb
add
fistpll
mov
sar
js
int
jmp
ret
dec
shl
bound
aad
jb
ret
insl
clc
jp
mov
bound
mov
rcrb
lcall
add
sar
adc
add
cmc
shrl
test
into
outsl
int3
xor
clc
mov
inc
sub
dec
fcos
or
mov
inc
mov
int3
jb
push
sar
out
cmc
sub
sbb
imul
lea
pop
add
addl
inc
fs
imul
adc
xor
push
fs
cmp
add
fs
jb
jne
dec
add
popa
lock
jmp
outsb
jno
xchg
cmp
mov
popl
push
add
arpl
arpl
ds
pop
inc
inc
push
clc
lcall
sub
xor
pop
add
outsl
mov
popa
xchg
arpl
mov
divb
lcall
out
cld
cmp
mov
cbtw
nop
lock
test
jne
add
xchg
pop
cld
aas
notb
in
pop
shr
push
ljmp
sub
jae
pop
cld
cmp
push
in
dec
shr
pop
push
jmp
adc
add
sbb
lock
adc
out
adc
mov
imul
cld
cmp
cmpsb
fbstp
inc
in
fists
fbstp
push
cld
cmp
jecxz
int
fildll
add
mov
add
add
mov
xchg
ljmp
addl
mov
js
aaa
out
push
jmp
adc
inc
call
pop
fstl
pop
add
notb
loope
fnstcw
hlt
push
cmc
sbb
faddl
hlt
cltd
push
add
in
loope
in
out
in
lock
pushf
add
jecxz
mov
add
add
add
sbb
ret
in
jecxz
int3
or
ret
out
xlat
inc
dec
push
stc
cmc
sub
adc
bound
or
pop
jge
mov
std
cltd
push
bound
int3
jae
cmc
sbb
sub
ficomps
mov
inc
sub
mov
outsl
cmp
dec
ljmp
aad
adc
add
add
mov
ljmp
popf
in
cmp
adc
mov
insl
add
sub
fpatan
mov
cmp
cmc
mov
dec
add
fs
push
cmp
jp
ds
fs
push
clc
inc
add
jnp
popa
gs
cmp
pop
gs
decl
inc
xor
std
inc
add
dec
cmp
add
sub
add
std
dec
push
push
dec
pop
arpl
std
xchg
sub
gs
pop
jb
pop
pop
outsl
popl
add
inc
insb
popa
sti
pusha
push
loope
addr16
cld
dec
push
into
dec
insb
jb
pop
pop
push
inc
inc
pop
fs
cmpsb
cld
or
scas
sarl
mov
fsubrs
stos
repz
leave
mov
insl
lahf
cmpsl
fistpll
idivb
cld
push
lds
call
mov
pop
cld
and
mov
fldcw
mov
imul
jmp
incb
push
inc
sbb
bound
loope
dec
sbb
in
pushl
sbb
push
cltd
jb
push
and
imul
or
loope
testb
sub
rolb
shl
popa
addr16
add
mov
mov
icebp
out
fucom
add
add
loopne
fstl
out
cwtl
fidivrs
test
mov
test
je
icebp
popw
sub
push
lock
inc
out
call
xor
iret
shll
sti
repnz
repz
sbb
adc
out
lret
loope
in
and
add
and
adc
pmaxub
loop
pop
data16
and
jae
jcxz
add
and
popa
ret
push
fistps
jecxz
les
iretw
and
pop
mov
and
ja
cmc
adc
mov
add
jecxz
jne
repnz
jmp
in
outsl
push
test
icebp
bound
rcrl
gs
sub
add
movsb
into
dec
sbb
sahf
fcos
inc
cli
mov
bound
xchg
mov
sbb
cmpsb
jo
popl
push
add
jno
jo
push
pop
jb
cmp
sub
decl
jno
sub
gs
pop
jae
cmpsb
jo
pop
add
gs
pop
je
inc
insb
push
arpl
jne
inc
pop
insb
imul
add
add
incl
outsb
inc
inc
push
xor
jne
outsl
jno
jno,pt
inc
add
insb
cs
fs
add
gs
pop
pop
je
inc
pop
notb
in
adc
cld
inc
or
insl
loopne
out
dec
sar
filds
dec
fcos
pop
jbe
inc
loopne
fldcw
cmp
dec
jecxz
mov
cld
pop
add
add
mov
fldcw
cmpsl
fldcw
je
jae
pop
cld
mov
mov
jae
out
bound
fnstenv
out
fnsave
mov
pop
push
mov
add
dec
es
dec
push
mov
dec
sbb
mull
cs
jmp
rcll
jmp
lret
notb
pop
loop
aad
add
add
jmp
add
add
loop
fcmovnbe
mov
lahf
loope
shll
test
into
lret
hlt
movsb
fnsave
out
out
xchg
ficoml
arpl
rcr
aad
icebp
jae
in
sahf
call
push
shl
jge
xor
inc
fcoml
in
aaa
stc
push
out
aas
ret
dec
in
dec
jecxz
sar
cmc
sar
pop
xchg
out
bound
add
add
imul
xchg
das
xchg
out
sti
push
fbstp
outsl
fildll
xor
jae
push
fcoms
cmc
iret
jmp
inc
fildll
dec
shll
sub
ds
pop
out
bound
add
sar
lahf
pop
out
bound
fbstp
jmp
pop
or
imul
in
bound
add
aam
jae
shr
cmp
xlat
fsubl
sub
clc
decl
cmpsb
inc
dec
sarl
dec
cmp
add
inc
cmp
xor
std
testb
pop
insb
push
insb
pop
push
cli
push
clc
ljmp
std
inc
sub
push
data16
jb
pop
clc
push
cld
inc
imul
pop
cmp
cmp
inc
dec
ds
dec
add
add
es
xor
ds
outsl
pop
pop
jb
inc
pop
fs
push
clc
push
and
inc
xor
mov
dec
inc
push
push
div
loopne
and
cltd
incl
pop
adc
add
repnz
push
cli
in
jns
add
or
push
imul
push
dec
lock
add
cmp
bound
add
aad
fsubrs
mov
imul
cld
adc
lcall
adc
pop
cmpl
pop
xorl
imul
insb
push
xlat
in
insl
dec
add
push
add
ficoms
aas
fiadds
out
xchg
add
stc
sbb
pop
mov
jecxz
shl
add
aad
out
add
or
add
jmp
aam
add
lret
fnstsw
add
add
mov
loope
clc
xchg
mov
add
add
fists
sbb
stos
jmp
xchg
enter
lahf
mov
ljmp
mov
imul
aas
mov
add
cmc
test
sub
sahf
ret
lahf
loope
sbb
mov
clc
icebp
stc
into
jae
sahf
call
ljmp
xor
insl
sti
dec
call
pop
les
cmp
mov
rcll
aad
loop
rcll
mov
cmp
jae
pop
pop
clc
inc
icebp
lret
bound
sbb
imul
gs
jl
push
inc
jbe
insb
gs
data16
xor
pop
aaa
bound
dec
pushw
lahf
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
sgdtl
add
add
add
add
add
add
add
addr16
push
addr16
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
imulb
push
imul
push
imul
push
imul
push
imul
push
add
add
add
add
add
daa
mov
pop
and
add
add
add
add
add
add
add
add
daa
ss
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
bound
cwtl
aaa
or
testb
add
out
testb
add
add
add
add
cmp
addr16
sti
add
add
add
add
test
stc
add
imul
pop
clc
icebp
cmc
add
loope
add
leave
cmc
add
jle
add
jmp
cmc
add
jmp
add
add
add
jmp
in
aas
jmp
cmc
add
jmp
cmc
add
jmp
outsb
push
inc
jmp
cmc
add
sbb
add
jmp
loope
inc
jmp
cmc
add
jmp
pop
lcall
mov
lcall
pop
mov
hlt
sub
add
add
jmp
sbb
int
mov
sti
cmpsl
lods
or
cmc
and
idivb
iret
xchg
fcoml
mov
js
inc
mov
cwtl
inc
mov
or
adc
int
push
out
pop
out
lret
inc
jo
fmuls
jae
inc
and
arpl
es
das
fnsave
roll
add
add
mov
hlt
sbb
mov
adc
jmp
and
pop
xchg
unpckhps
cmc
mov
sahf
shl
out
pop
fidivrs
mov
cmp
rolb
arpl
lods
jl
inc
mov
ret
mov
mov
inc
sbb
cmp
rolb
mov
add
add
mov
popa
test
gs
ret
mov
inc
add
test
mov
jo
jle
mov
aas
aam
out
testb
aaa
cmp
sbb
cmp
sbb
repz
xor
cmp
test
pop
es
sbb
lock
push
enter
adc
or
add
aaa
movsl
stos
lahf
pop
daa
sahf
addr16
icebp
jge
pop
sub
sbb
movsb
insb
push
dec
push
pop
movsl
imul
fwait
push
pop
add
mov
jl
cmp
les
jno
adc
inc
lea
js
jae
add
dec
or
mov
mov
scas
mov
fildl
add
mov
mov
fwait
test
or
xchg
and
push
xchg
sbb
dec
mov
test
fiaddl
cs
dec
popf
add
or
xlat
cmp
or
adc
cmp
add
aad
cmp
xchg
mov
jnp
push
or
mov
jecxz
jae
cmp
aad
inc
adc
cmp
add
sbb
adc
cld
leave
sub
push
jb
cmp
enter
mov
stos
adc
xor
sub
xchg
fsubrl
imul
cld
mov
les
pop
add
mov
jmp
jg
scas
xchg
test
testb
cli
pushf
cltd
xlat
in
addr16
incl
add
notb
jmp
imul
mov
testb
idiv
mov
testb
aas
negb
aas
divb
lea
negb
aas
mulb
aas
negb
xchg
aas
div
xchg
aas
testb
aas
idiv
xchg
aas
notb
xchg
aas
imulb
xchg
aas
testb
aas
testb
aas
divb
mov
testb
aas
add
add
mov
xchg
icebp
mov
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
out
testb
add
add
add
add
pop
loope
out
testb
add
add
jmp
jmp
add
jmp
cmc
add
mov
adc
jmp
cmc
add
jmp
jmp
add
jmp
cmc
add
mov
adc
jmp
cmc
add
jmp
ficoms
add
add
add
add
jmp
cmc
add
daa
adc
jmp
cmc
add
jmp
ficoms
add
cmc
add
jmp
cmc
add
imul
lcall
lcall
cmp
lcall
lcall
incl
cmp
dec
lcall
lcall
call
cmp
dec
incl
add
pop
lcall
lcall
lcall
pushl
jmp
and
jmp
std
lcall
addr16
push
push
sub
mulb
push
addr16
push
addr16
push
mov
mulb
push
addr16
incl
add
mulb
push
mov
cld
push
addr16
push
addr16
push
cmp
mulb
push
addr16
push
addr16
push
xchg
sub
mulb
push
addr16
push
addr16
push
lret
mulb
push
pop
cld
push
pop
cld
push
cld
sub
negb
push
pop
cld
push
pop
cld
push
lcall
testb
add
add
add
add
testb
das
fadds
out
testb
add
add
add
add
cs
add
add
add
add
add
das
sbb
out
testb
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
testb
add
add
add
add
add
add
add
add
add
add
add
jmp
into
or
add
cmc
add
jmp
mov
add
cmc
add
jmp
mov
add
cmc
add
jmp
dec
or
add
cmc
add
jmp
dec
or
add
cmc
add
jmp
or
add
add
jmp
cmc
add
mov
cmc
add
jmp
cmc
add
outsl
in
or
add
filds
add
iret
add
add
stc
cmp
lahf
add
add
add
add
lock
lahf
add
add
add
add
lock
pop
add
add
add
dec
add
add
cmp
pop
add
pop
add
add
add
hlt
out
cmp
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
filds
add
notb
push
add
cld
push
push
cld
push
push
cld
push
das
jl
notb
push
push
cld
push
push
cld
push
fdivrs
push
cld
push
push
cld
incl
add
notb
push
and
push
push
cld
push
push
cld
push
cltd
pop
aas
notb
push
push
cld
push
push
cld
push
test
notb
push
push
cld
push
push
cld
push
adc
cmp
notb
push
push
cld
push
das
dec
cmp
testb
add
add
add
add
adc
out
testb
add
add
add
add
testb
pop
repz
add
add
add
add
add
add
pop
roll
out
testb
add
add
add
add
aad
add
add
add
sbb
or
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
push
in
xchg
ss
cmp
adc
fs
cmovge
icebp
or
xor
in
add
adc
inc
dec
clc
pop
sti
add
jmp
add
fnstenv
adc
sti
push
ss
loopne
xor
cmc
adc
xor
or
jne
insl
xor
xchg
lock
cmp
ljmp
sub
sti
cmp
jmp
cmp
jmp
cmp
jmp
cmp
jmp
cmp
imul
jmp
cmp
jmp
cmp
jmp
cmp
stos
cmp
mov
cmp
fstpt
stos
jmp
cmp
repnz
add
imul
cmp
repnz
repnz
jmp
pop
cmp
call
jnp
fwait
icebp
mov
icebp
fwait
cmp
jnp
lods
shlb
mov
ret
fdivrl
adc
cld
sub
and
sbb
sub
xor
cmp
pushf
pop
dec
add
sti
jnp
insb
repz
jl
fistl
mov
rcll
pushf
add
add
jnp
lods
shll
mov
ret
jae
fdivrl
xchg
adc
sub
and
sbb
sub
xor
cmp
sbb
dec
add
adc
insb
lock
push
jl
add
jb
jae
jp
mov
bound
xchg
sbb
sub
xor
adc
sbb
dec
sbb
pop
xor
ljmp
sbb
pop
lret
sbb
add
and
rcrl
or
stos
sbb
or
sbb
or
sub
imul
or
jp
mov
bound
xchg
sbb
stos
sbb
or
sbb
mov
push
out
popa
dec
fiadds
testb
adc
adc
adc
adc
adc
adc
sub
add
das
aad
lds
insl
in
das
jne
add
in
das
in
das
jne
add
jmp
cmc
add
add
call
mov
xor
call
jge
pop
clc
insb
xor
pop
lea
xchg
out
xor
out
xor
out
xor
add
xor
sti
or
loope
add
sub
mov
xor
clc
lods
xor
add
add
negl
out
idivb
out
pop
aaa
cmp
pop
aaa
repz
aaa
jmp
das
aaa
repz
aaa
sti
idivl
aaa
push
testb
testb
notl
jnp
pop
aaa
jae
iret
aaa
and
filds
jmp
in
cmp
in
cmp
das
cmp
in
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
in
cmp
add
mov
in
cmp
stos
cmp
jmp
cmp
inc
adc
xor
aas
adc
inc
in
pop
adc
push
fnstsw
adc
fs
adc
je
aas
adc
or
pop
pop
adc
sub
sbb
cld
push
and
cmp
sub
cmp
xor
sub
cmp
cmp
inc
sti
pop
dec
add
add
addr16
push
jmp
pop
pop
jecxz
adc
fdivrs
adc
or
pusha
leave
mov
adc
or
test
jl
mov
int3
adc
ss
mov
jae
inc
inc
add
add
adc
adc
adc
movq
mov
adc
adc
adc
adc
adc
ds
movhps
add
mov
adc
push
push
add
cmpsl
push
cmp
mov
sub
xchg
push
dec
push
xchg
push
dec
push
orb
push
pop
push
pop
pcmpeqd
insb
push
jo
pop
push
push
pusha
push
pop
push
xchg
sahf
push
add
test
test
xor
clc
sub
scas
lock
xor
add
je
inc
xor
add
add
hlt
xor
jmp
xor
add
xor
sbb
repz
add
push
xor
sti
mov
xchg
rep
xor
add
xor
jl
jo
jbe
pop
add
push
sti
bound
inc
repz
xor
in
inc
xor
sub
add
aad
cmp
out
xor
jmp
add
add
std
ss
out
aaa
dec
out
aaa
push
out
aaa
es
aaa
insb
out
aaa
out
aaa
fsub
dec
aaa
pop
out
aaa
xor
pop
aaa
cmp
popa
aaa
inc
out
aaa
ss
aaa
pop
out
aaa
inc
out
aaa
jp
mov
aaa
xor
mov
aaa
add
fbstp
mov
out
aaa
xchg
mulb
cmp
negb
push
aaa
add
mov
inc
or
ud2
push
pop
cltd
or
pop
push
or
or
or
or
or
int
mov
in
aas
or
in
jecxz
push
or
push
or
ret
xchg
mov
cmovle
mov
andb
sbb
push
fwait
adc
add
push
pushf
inc
addr16
push
daa
adc
stos
adc
out
adc
dec
adc
in
inc
adc
fwait
or
mov
jnp
xor
pop
testb
sbb
sbb
or
sbb
pop
mov
roll
jb
adc
add
outsl
or
push
add
push
mov
add
cmc
add
adc
add
rolb
dec
adc
add
xchg
loope
mov
adc
icebp
clc
adc
repnz
repnz
adc
push
repz
or
rolb
imull
jmp
mov
jne
js
mov
or
xor
psubw
xor
mov
push
ljmp
jbe
out
xor
jb
add
jmp
xor
dec
stc
or
cmp
pop
sahf
cmp
add
jmp
cmc
add
mov
add
cs
add
sub
or
nop
add
xor
sbb
xlat
call
scas
xor
inc
sbb
ss
sbb
inc
sbb
aaa
mov
or
cmp
or
mov
add
add
cmc
cmp
sbb
addr16
cmp
or
pushf
cmp
or
xor
testl
fdivrl
icebp
or
cmp
adc
cmp
adc
psllq
ljmp
adc
xor
adc
xor
push
xorb
xchg
xor
lret
pop
mov
jmp
pop
jg
add
jecxz
push
popa
call
jmp
cli
leave
xlat
or
decb
mov
mov
movsl
or
pop
or
sub
mov
adc
loope
xchg
pop
mov
mov
out
adc
out
adc
in
push
dec
in
push
mov
ljmp
lds
imul
movsb
or
movl
add
and
or
pop
pop
cmc
leave
pop
or
sahf
pop
das
cmc
mov
dec
cmc
mov
test
pop
pop
push
hlt
inc
pop
pop
hlt
push
pop
mov
hlt
rcrb
hlt
out
cmc
repz
or
test
xchg
repz
test
rep
pop
cli
imulb
mulb
cmc
xchg
mov
lcall
not
or
add
xchg
aaa
push
testb
out
add
popa
adc
icebp
sub
icebp
ja
mov
enter
cmpsl
xor
dec
xor
dec
xor
loopne
xor
or
xor
add
xor
add
xor
jecxz
xor
loop
aaa
dec
add
in
push
xor
sub
add
add
add
cmc
cmp
mov
add
sbb
jg
jnp
ret
add
fiadds
sub
dec
out
sub
repnz
sub
mov
push
adc
xor
adc
xor
adc
xor
adc
xor
adc
pusha
adc
bound
adc
test
cmp
add
ds
cmp
or
cmp
mov
xchg
or
cmp
or
cmp
push
cmp
or
cmp
or
pop
or
mov
or
cmp
or
cmp
or
cmp
repnz
lahf
or
cmp
xor
push
pop
sub
jp
xlat
add
cmp
flds
or
add
add
add
syscall
out
stc
daa
in
mov
cld
push
inc
or
out
or
out
adc
je
inc
lret
adc
pop
adc
sti
adc
mov
adc
and
adc
and
dec
adc
lret
or
test
push
fs
gs
stc
call
insb
or
xchg
into
add
push
cmp
dec
push
add
add
cld
mov
pop
ss
lods
or
sti
movsb
or
cli
and
testb
and
cmp
testb
adc
jg
push
lock
out
test
adc
out
sub
adc
out
sub
shr
push
jne
push
push
jl
mov
adc
out
clc
adc
in
adc
jae
outsl
adc
add
add
cmpsb
adc
cmp
mov
add
xor
stc
shll
icebp
fdivl
lret
xor
add
xor
push
xor
inc
push
add
in
call
xor
pop
aaa
cmc
in
sbb
pop
in
mov
xor
inc
lock
ljmp
push
sti
and
stc
ret
cmp
icebp
cmpsb
cmp
jmp
add
cmp
add
add
push
loop
das
aas
ljmp
fs
jno
add
call
xor
xor
adc
xor
push
bound
ja
iret
xor
or
xor
or
xor
or
xor
pop
push
xor
or
xor
push
sub
add
add
pop
xor
loope
repz
testl
dec
ss
xchg
mov
movsl
push
fdivs
xor
or
pop
enter
inc
cmp
add
cmp
lds
mov
adc
or
aaa
or
mov
push
lods
mov
sub
scas
sbb
add
sbb
pop
insl
adc
add
mulb
mov
push
in
popa
out
adc
in
or
inc
sbb
loope
vshufi32x4
or
sub
inc
add
addr16
pop
jp
rolb
out
add
or
repz
or
push
push
je
pop
add
add
add
add
mov
ss
add
add
repnz
adc
repz
adc
repz
adc
mov
shl
adc
in
cmp
lret
adc
jmp
adc
jmp
adc
fwait
adc
mov
and
jns
paddsb
adc
jmp
packsswb
insl
jmp
or
jo
mov
mov
add
add
std
xor
repz
in
shll
sbb
jno
xchg
movsl
aaa
gs
aaa
inc
ljmp
and
mov
xchg
in
daa
ss
sti
xor
pop
pushl
xor
out
imul
out
cmp
out
xor
cmp
pop
cmp
mov
cmp
lock
sbb
dec
cmp
lock
sti
add
add
sub
icebp
repnz
sub
repz
cmp
mov
jp
stos
cld
sahf
aas
nop
std
decl
stc
decl
adc
xchg
setae
mov
btc
pop
adc
xor
clc
xor
lar
in
mov
push
adc
xor
push
push
xor
bndstx
mov
adc
add
add
adc
xor
add
and
fdivs
push
add
aaa
or
add
cmp
pop
test
shll
imul
xor
cmp
inc
stc
or
pop
stc
xor
loopne
pop
std
ljmp
repnz
pushl
fidivl
cmp
adc
pop
ret
mov
cmc
add
add
sar
aaa
sub
std
call
adc
std
orl
daa
lods
mov
add
sub
mov
cmpsb
out
repz
daa
repz
mov
repz
stc
repnz
cmp
pop
out
adc
mov
jl
mov
cmpsl
divb
out
lret
in
jae
sbb
or
stc
sti
clc
or
mov
cmc
mov
testb
adcl
movb
add
clc
mov
sbb
cmpsl
jmp
stc
sub
jbe
xchg
sbb
xor
out
shlb
cs
add
add
or
mov
in
pop
div
jmp
clc
outsb
jmp
clc
inc
jmp
stc
mov
clc
pushl
fs
and
aaa
cmp
cmp
mov
add
stos
cmp
mov
outsb
hlt
jnp
outsb
hlt
cmpl
hlt
mov
dec
hlt
xchg
cmp
pop
cmp
arpl
pop
hlt
imul
hlt
jae
scas
hlt
cmp
scas
hlt
inc
cmp
hlt
push
cmp
and
cmp
xor
cmp
testb
fdivp
adc
cmp
mul
cmp
neg
cmp
div
cmp
add
add
in
cmp
pusha
add
pop
add
pusha
add
push
add
mov
add
test
jnp
loopne
cmpl
add
add
stc
call
xor
xor
wrmsr
and
pop
xor
pop
xor
daa
xor
xor
xor
xor
xor
dec
xor
pop
xor
add
movsb
xor
mov
outsl
xor
jg
and
xchg
sub
xor
mov
cwtl
out
in
mov
ljmp
shlb
repnz
and
dec
lock
push
mov
or
pop
sti
ja
jl
sbb
add
pop
std
in
hlt
xchg
in
mov
hlt
lret
hlt
push
fidivl
clc
cli
add
add
and
push
mov
stos
inc
sub
jecxz
add
sbb
stc
xor
push
stc
sahf
or
clc
enter
mov
add
add
add
repz
lock
xor
sbb
add
int3
hlt
imul
cmp
pop
repz
imul
hlt
ss
mov
idivb
call
jae
jnp
pop
stc
add
add
jmp
stc
ret
jmp
adc
push
in
xchg
das
out
jle
push
out
push
incb
movsb
and
jle
add
out
clc
sub
jmp
pop
icebp
stos
repz
icebp
jbe
cmp
xchg
icebp
pop
repnz
and
hlt
incl
scas
popa
xor
and
adc
add
hlt
mov
xor
jge
aaa
js
add
jge
aaa
dec
insl
inc
aaa
rep
loope
sub
pop
scas
ss
mov
gs
popa
xor
jnp
jbe
popf
testb
divb
cmp
and
cmp
js
jmp
cli
add
lahf
add
cs
mov
or
out
sub
and
and
cmc
enter
stos
movsl
adc
les
mov
add
lret
daa
cs
sub
daa
push
cmp
sub
cmp
sub
cmp
sub
cmp
or
clc
lcall
stc
jmp
call
xor
in
xor
das
xchg
xor
cs
cmc
xor
xor
lods
xor
xor
xor
hlt
xor
pop
xor
ss
ss
add
add
ss
aaa
imulb
repz
jns
add
add
jae
inc
testb
xchg
clc
lret
stc
cld
fidivl
stc
sbb
push
stc
gs
lcall
mov
cmp
das
sub
idivb
and
cmc
into
adc
hlt
repnz
sub
cmp
add
xor
insb
in
icebp
stos
add
add
push
icebp
out
xchg
icebp
daa
js
movsl
lock
lds
lock
add
sub
cmc
shr
push
cmc
jbe
addr16
mov
cmc
cmp
sbb
repnz
repnz
repz
repnz
stc
repnz
scas
repnz
cmp
test
call
data16
xchg
jmp
add
add
add
call
mov
loope
sti
std
pushf
std
push
out
std
in
sbb
clc
pop
in
cmp
in
mov
stc
stos
jmp
out
clc
sub
js
add
leave
in
das
xchg
in
das
jmp
sahf
sub
xchg
ret
mov
not
xchg
xor
inc
xor
cmpsl
dec
xor
adc
enter
mov
mov
add
xor
test
xor
jge
aaa
insl
icebp
aaa
test
mov
aaa
arpl
aaa
jg
mov
orb
scas
inc
cmp
pushf
cmp
mov
pushl
fildll
aaa
int3
sbb
ss
mov
add
es
test
test
and
cmp
sub
cmp
add
fisubs
cmp
es
es
mov
xor
cmp
data16
jge
sub
mov
sbb
popf
cmp
daa
mov
sbb
ret
daa
xor
mov
add
jp
jecxz
and
or
push
sub
fisubrs
push
ds
sub
adc
idivb
unpcklps
push
test
in
push
add
add
mov
in
sbb
aas
in
cmp
loope
push
daa
cmpsb
in
in
int3
in
inc
add
repz
or
out
add
cmp
sbb
or
pop
out
inc
jmp
add
sbb
into
lret
cmc
fnstcw
sub
cmc
pop
pop
or
xor
pop
sti
inc
movntq
out
jae
lods
cli
lahf
lcall
rolb
add
incl
imulb
faddl
aas
sti
mov
sub
xchg
out
mulb
out
notl
lahf
idiv
out
jecxz
es
testb
hlt
insl
icebp
and
hlt
xor
aad
inc
repz
jmp
fcomip
in
icebp
leave
repnz
dec
repz
repnz
mov
in
pop
lock
xor
lcall
lock
add
in
lock
push
icebp
xchg
in
mov
push
in
popf
in
xchg
out
lods
in
stc
in
jmp
out
push
call
aaa
inc
and
aaa
push
or
adc
mov
sti
cmpsl
ss
pop
ljmp
pop
xor
mov
mov
jno
pop
scas
and
scas
or
mov
xor
mov
xor
jl
xor
sub
cmp
jbe
inc
imul
cmp
dec
sbb
fimull
cmp
dec
stc
cmp
push
cs
cmp
lods
sub
ds
cs
cs
xor
decl
xor
jmp
add
cmp
int
add
add
std
xor
xor
xor
adc
xor
adc
xor
xor
arpl
test
dec
adc
aaa
add
cli
aaa
push
and
fdivrs
mov
add
test
daa
inc
cmp
es
cmp
daa
cmp
les
cmp
neg
imulb
es
cmp
push
repz
icebp
and
sbb
repz
add
push
repz
sbb
neg
repz
and
fbld
lods
in
std
es
in
pop
daa
xor
es
in
pop
pop
cmp
push
pop
cltd
in
addb
in
mov
mov
in
movsb
out
in
mov
pushf
in
mov
loop
fadd
cli
in
push
les
out
sbb
out
xor
xchg
pusha
and
out
andl
testb
add
jp
push
test
sub
iret
imul
out
adc
lock
sbb
xchg
out
imull
xor
dec
out
mov
testl
out
out
idiv
in
into
testl
movsl
clc
in
ljmp
in
mov
clc
cmp
nop
stc
addr16
adc
shr
stc
cltd
in
cmp
cmpsl
in
and
cld
ljmp
add
add
ljmp
sub
cltd
stc
int3
ljmp
pop
pop
xor
pop
cmp
mov
dec
cwtl
xor
mov
xor
sub
aaa
aam
aad
dec
or
aaa
sbb
dec
or
inc
aaa
mov
add
fstp
add
and
ret
lret
mov
xor
rcl
xor
leave
jmp
scas
mov
jnp
push
xchg
pop
cmp
cmp
xchg
cmp
xchg
cmp
in
mov
cmp
mov
sbb
out
xor
jmp
das
mov
aas
pop
dec
cli
pushl
cld
decl
jle
mov
xor
jmp
cmp
sub
add
add
sub
xchg
cmpsb
adc
xor
push
aaa
xor
pop
xchg
xor
shll
adc
fidivs
into
sbb
xor
sbb
or
shll
sbb
xor
negb
pop
ret
jne
mov
and
gs
cmc
mov
or
fadds
dec
mul
or
lock
add
std
notb
mulb
fdecstp
jae
shl
jg
xchg
negl
leave
and
adc
xor
sub
push
in
push
hlt
jmp
push
push
in
push
sub
orb
in
xchg
in
incb
in
out
fsubp
adc
mov
in
int3
add
out
sub
outsb
in
pop
fcmovnu
out
add
add
pop
add
add
hlt
je
insl
cmc
into
shl
repnz
rcr
mull
clc
cmp
ret
clc
adc
hlt
clc
push
stc
test
aad
stc
ss
stc
aam
cmc
sub
sbb
cmc
test
aaa
divb
xlat
repnz
aad
testl
test
pop
daa
idivl
add
lcall
pop
mov
mov
test
je
inc
bound
sub
aaa
push
push
sbb
in
dec
shlb
movsl
bound
ss
jno
sahf
dec
inc
ss
daa
ss
sbb
xor
sahf
movaps
out
mov
xor
or
jo
dec
fsubrl
aas
int3
or
add
add
sahf
cmp
inc
cmp
cmp
sarl
mov
cmpsb
inc
cmp
mov
sub
aas
mov
cs
aas
jb
insl
aas
fs
fsubrs
xchg
lret
aas
mov
das
mov
cld
jecxz,pn
sub
push
cli
pushl
add
pop
adc
das
and
or
adc
adc
xor
add
pop
adc
xor
adc
xor
pushl
das
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
jmp
lock
cmc
jmp
fidivrs
repnz
and
mov
aam
jecxz
call
adc
cmp
ljmp
add
or
add
jmp
icebp
sub
es
sbb
push
fxch
ljmp
mov
mov
mov
test
in
sub
mov
push
pop
in
clts
cld
repz
push
add
repz
rep
rorb
rolb
repz
mov
insl
shll
repnz
out
test
add
into
mov
jno
jne
arpl
mov
cmp
sar
hlt
cmc
shl
hlt
mov
popa
hlt
test
mov
repz
lret
rcl
repz
shl
fcomp
jmp
fsubs
in
cmpsl
fmuls
in
lahf
fcomps
in
jl
movsb
in
sbb
stc
in
adc
pop
in
into
fsubrs
out
and
decl
cmp
add
add
clc
or
mov
hlt
sub
mov
int3
sub
mov
clc
jmp
cmc
add
mov
shlb
dec
dec
aaa
out
divl
dec
push
mov
cmp
sub
xor
stos
cmp
pavgw
jmp
cmc
add
add
ljmp
push
or
xor
add
in
xor
fstl
mov
cmp
sub
push
sub
cmp
sub
es
cmp
daa
jnp
mov
ljmp
sbb
jb
pushl
dec
adc
sbb
xor
adc
xor
xor
adc
mov
adc
enter
adc
xor
adc
nop
adc
xor
add
inc
sub
ss
cmp
aam
push
ss
push
fmull
aam
ja
imulb
in
mov
mov
out
test
mov
stc
or
dec
std
shll
insb
out
repz
out
rep
in
repnz
into
dec
in
mov
jp
jo
jae
js
stos
jmp
add
add
xchg
jmp
push
mov
jmp
push
lret
jmp
jb
test
jp
mov
jb
mov
ficoms
enter
ror
jb
fmul
dec
in
mov
fsts
jmp
fsub
ljmp
aad
out
int
out
fld
ljmp
adc
jmp
fldenv
ljmp
add
ficoml
ljmp
ljmp
ljmp
arpl
mov
fstpt
in
xor
aad
call
mov
aad
jmp
ljmp
push
sbb
xchg
adc
cmp
fcom
cmp
rcll
clc
jmp
add
add
add
and
lret
or
stos
push
cs
mov
ss
sub
xlat
test
sub
test
sub
test
sub
fs
dec
gs
notl
xor
out
test
cltd
xor
inc
fidivs
sbb
sbb
add
xor
and
xor
jg
out
or
add
and
xchg
and
cmp
sub
cmp
fnstsw
popa
sub
cmp
sbb
cmp
sbb
loop
sbb
sub
mov
sub
mov
sub
adc
mov
push
clc
lcall
cli
jmp
add
inc
or
xor
or
repz
add
dec
sysret
xor
adc
xor
adc
test
cwtl
in
in
xlat
in
in
lds
hlt
lds
ljmp
sub
cs
jmp
push
nop
jmp
pop
add
jb
mov
out
std
stos
out
std
test
lods
in
jmp
out
loopne
out
sarb
loopne
lret
popf
ret
mov
add
add
add
inc
loope
and
sbb
loopne
adc
sub
add
cld
cld
cmp
mov
testb
hlt
jle
jnp
imul
repz
sarl
repnz
rcr
icebp
mov
sbb
repnz
iret
cmp
repnz
iret
std
icebp
dec
iret
cmc
icebp
inc
iret
std
icebp
dec
iret
gs
jnp
xchg
icebp
hlt
iret
add
add
add
iret
lock
into
jo
pop
int
in
stc
lret
add
pop
in
and
mov
or
and
xchg
fcomps
jmp
fcmovu
ljmp
arpl
mov
jmp
jmp
dec
xor
dec
push
pop
xor
ds
mov
cmp
xchg
xor
xor
xor
and
sbb
push
rcll
xor
add
add
movsb
cmp
cwtl
cmp
mov
or
cmpl
xlat
dec
cmp
xlat
xchg
cmp
dec
cmp
dec
cmp
clc
jmp
cli
add
stos
movsl
sbb
out
jmp
je,pn
push
push
inc
add
xor
lret
xor
cmp
ss
aaa
fwait
cmp
xor
cmp
push
sti
incl
add
repz
cld
sub
xor
arpl
pop
aaa
lcall
and
rcrb
dec
sub
inc
sub
xor
fwait
xor
cmp
sarb
cmp
loopne
cmp
lock
xor
add
fwait
xor
cmp
xor
cmp
xor
cmp
cmp
das
add
add
fidivl
or
fidivrl
or
fiaddl
pop
fimull
imul
repz
fnstsw
jmp
pop
cld
push
loop
repz
fcos
or
lods
cld
add
add
imul
int3
and
rol
and
shrl
sub
sarb
and
xlat
xor
loopne
popf
add
add
xlat
adc
push
xlat
dec
jmp
xchg
lcall
add
jge
movsb
rorl
cld
jns
add
testb
aam
aam
cs
push
xlat
xlat
xchg
flds
fadd
fdivrs
int3
pop
loopne
iret
jae
xor
out
sub
push
add
add
xchg
rclb
shrb
shll
cmp
shll
aam
aam
aam
aam
aad
aam
aam
aam
aam
add
arpl
dec
aam
shrl
aam
shr
xlat
pmullw
fcomp
aam
xlat
or
arpl
adc
xlat
dec
aam
fldt
decl
push
lret
cmp
inc
fdivrs
cmpsl
cmp
jg
xchg
cmp
jne
clc
sub
add
sbb
sub
inc
lea
ds
xor
sub
xlat
ss
add
and
aas
sbb
xor
ja
jb
cmpb
push
lods
dec
xor
xchg
pushf
sub
jbe
or
add
shlb
lods
shlb
sub
cmp
lods
cmp
and
lock
lods
cmp
fldcw
pushf
ds
lods
cmpsl
cs
ds
das
fdivrl
add
add
cs
ds
sub
ds
das
or
imull
sub
out
cmp
sub
pop
aas
mov
insb
aas
daa
jl,pn
addr16
mov
ja
pushf
aas
aaa
das
lods
aas
daa
das
mov
dec
loope
ljmp
add
lahf
xor
das
stos
xor
xor
xor
xor
dec
int
lds
pop
lds
int
lds
int
lds
ja
add
and
pushf
int
and
mov
xchg
add
mov
int
add
fcmovne
shl
cmp
repz
rclb
loop
xlat
xor
jecxz
push
ret
jae
mov
xlat
mov
data16
shll
jle
repz
rcll
and
shll
or
rclb
shlb
cmpsb
rclb
jmp
rcl
add
add
add
movsl
loop
add
shlb
aad
shll
rorl
inc
rorl
gs
aam
aam
aam
aam
aam
rorl
aad
aam
aad
aam
aad
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
add
dec
lcall
decl
lcall
decl
lcall
lcall
decl
decl
incl
add
pop
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
dec
std
dec
std
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
incl
add
notb
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
sbb
push
sbb
push
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
incl
add
notb
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
add
lcall
decl
decl
lcall
lcall
decl
decl
dec
dec
dec
dec
lcall
decl
lcall
incl
add
decl
lcall
decl
decl
lcall
lcall
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
incl
add
notb
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
pop
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
lahf
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
decl
lcall
incl
add
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
dec
dec
dec
dec
incl
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
add
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
add
add
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
cmc
add
jmp
pop
add
add
add
add
add
add
add
add
dec
dec
dec
dec
lcall
add
lahf
decl
lcall
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
push
clc
jnp
mov
test
and
jl
push
fwait
mov
das
xchg
push
in
add
and
imul
mov
jns
sub
inc
testb
dec
test
inc
jno
cmp
inc
pop
hlt
iret
push
std
and
fsubl
mov
xchg
pop
or
mov
mov
push
outsb
push
and
mov
push
push
cmp
pop
add
hlt
fcomip
push
mov
icebp
imul
sub
add
add
mov
pop
movsb
inc
idivl
push
jle
loope
stc
ja
push
jle
lods
pop
out
pop
ja
pop
mov
or
jae
or
jbe
cli
pop
sbb
jmp
jo
inc
pop
add
mov
push
idivb
dec
ficoms
aad
testl
inc
in
loopne
add
add
ficomps
fidivs
add
mov
pop
fistps
mov
add
insl
cmp
gs
and
push
push
in
daa
push
mov
das
and
icebp
mov
fsubr
les
mov
inc
dec
fcomps
jno
mov
rcl
mov
jae
xchg
dec
dec
mov
add
shll
or
call
pmullw
rorl
and
inc
and
jg
xchg
and
loop
movsl
add
call
cwtl
or
jnp
mov
sub
testb
dec
xchg
and
adc
in
lea
stos
scas
rcrl
xor
and
imul
dec
inc
push
mov
add
add
sbb
mov
pop
jecxz
jl
adc
mov
xchg
sbb
mov
ret
insl
cmpsb
out
lret
popl
cmp
adc
jecxz
imul
movsb
and
rorl
popa
nopl
divl
int3
inc
mov
in
insl
inc
or
add
add
js
jge
push
ret
inc
jp
push
dec
push
xor
push
jp
xor
add
inc
or
cmp
mov
xorb
and
cmpb
jne
jmp
dec
push
mov
jp
adcl
cmp
mov
loopne
push
and
in
inc
fmull
ja
clc
insl
push
clc
mov
add
ja
call
and
push
out
ja
lock
clc
mov
ja
cld
xor
testb
jmp
jns
hlt
jne
add
into
jns
hlt
or
jp
lock
add
inc
ja
fcompl
lods
cmc
inc
add
add
add
add
mov
sbb
pop
std
scas
or
add
ja
in
insl
push
in
mov
mov
add
dec
inc
add
jmp
xor
mov
dec
ret
int3
xor
int3
inc
mov
in
adc
call
mov
sub
in
testl
mov
inc
add
call
push
cmp
mov
push
add
notb
push
xchg
push
mov
xor
mov
les
add
mov
add
outsl
push
hlt
sbb
or
js
cld
jge
jl
cmc
inc
add
push
call
push
mov
mov
jp
mov
cmp
sbb
mov
int3
sub
int3
inc
js
mov
add
add
js
xor
or
jg
or
mov
int3
ret
int3
inc
js
mov
std
dec
mov
stc
push
jmp
push
inc
testb
mov
int3
stos
mov
int3
ret
ja
adcl
add
add
cmc
inc
add
jecxz
push
inc
idivb
clc
into
fadds
inc
divb
clc
fdivrs
out
jns
cld
add
add
adc
push
add
insl
inc
or
push
hlt
mov
dec
ret
int3
inc
jbe
push
mov
add
jmp
jne
cld
jne
add
mov
or
cld
icebp
mov
mov
std
add
cli
lods
adc
mov
add
not
cld
ljmp
ret
int3
xor
int3
inc
mov
add
add
add
jne
mov
loope
inc
testb
xor
int3
inc
mov
in
adc
mov
jge
add
stc
jnp
testb
mov
stc
mov
jge
or
jne
or
or
mov
add
not
or
divl
cld
jge
hlt
cmp
cmc
jae
add
add
hlt
mov
icebp
pop
mov
inc
sar
jge
add
mov
jne
lock
testl
jne,pt
or
add
jne
clc
insl
add
add
jne
or
jnp
or
jnp
or
inc
cld
mov
stc
call
mov
inc
ret
int3
and
rcrb
add
jns
in
fmull
loop
dec
call
jle
add
idivb
lock
lock
jl
add
add
lock
dec
loopne
mov
cmpl
pop
test
add
int3
add
insl
ss
lret
clc
add
push
notl
outsl
ds
mov
insb
sbb
out
add
mov
add
dec
in
mov
jnp
or
cmp
mov
aad
pop
jge
loopne
xor
add
jns
hlt
insl
xor
add
jg
in
cmp
add
testb
inc
xchg
cmpl
insb
pop
mov
loope
cmp
insb
inc
mov
add
add
popa
mov
jnp
adcl
adc
mov
out
incl
add
test
push
call
cmpl
mov
fistl
stos
in
mov
insl
xor
add
cmp
push
into
mov
flds
aam
cmp
mov
js
mov
in
add
ja
hlt
jge
in
mov
mov
fimull
ret
dec
loopne
div
jns
fstpl
mov
int3
ret
jns
addl
add
addr16
inc
add
jmp
push
inc
divb
clc
into
in
inc
idivb
clc
fdivs
std
sub
add
ja
cld
insl
xor
push
jge
add
jge
or
dec
hlt
mov
inc
ret
int3
ret
int3
inc
jp
mov
mov
push
inc
divb
add
ret
int3
ret
int3
inc
jp
adcl
add
cmp
leave
jge,pt
xor
insl
cmp
inc
ja
hlt
jge
in
mov
jns
clc
jg
hlt
mov
jnp
insb
inc
jne
clc
add
and
dec
push
jns
sbb
dec
or
jns
clc
jge
add
scas
add
push
js
adc
sbb
int
mov
js
mov
add
sub
mov
sub
ror
ljmp
rol
mov
int3
stos
mov
int3
ret
int3
and
adcl
xor
negb
add
cmp
hlt
call
mov
push
ja
clc
cmpsl
ja
lods
or
push
push
jecxz
hlt
push
popf
push
inc
idivb
movsb
add
add
cmp
add
add
jmp
js
add
inc
add
add
jmp
aas
add
pushf
push
cmp
add
inc
fsts
repnz
add
add
mov
pushf
push
inc
notb
enter
push
inc
divb
aam
cmp
push
inc
notb
dec
inc
push
call
addl
add
hlt
mov
cmc
dec
or
push
jecxz
mov
inc
ret
int3
inc
mov
int3
mov
clc
cmp
outsl
decl
mov
inc
ret
int3
stos
mov
int3
ret
int3
and
adc
mov
add
jne
or
fmuls
out
std
push
cmp
dec
loopne
xor
pop
mov
or
add
js
call
divb
int3
add
sti
decl
mov
push
pop
add
testb
add
loope
lock
cmp
mov
push
mov
dec
mov
dec
call
xorl
add
not
or
divl
hlt
insl
xor
jno
add
dec
in
jae
jge
call
je
jbe
call
add
inc
adc
loopne
and
inc
push
loop
dec
push
sub
mov
icebp
cmpsb
inc
or
inc
dec
jne
or
cmp
jge
call
inc
repnz
call
cmpl
mov
jge
sub
call
in
jmp
add
loopne
cli
push
mov
push
fimuls
or
aam
repz
add
insl
push
rclb
add
sub
cmp
notb
push
imul
push
push
mov
mov
fisttps
xchg
movsl
push
inc
imul
or
xor
add
add
lock
add
add
cmp
jne
pushf
push
mov
push
push
insl
inc
hlt
push
pop
add
push
out
pushf
push
cmp
mov
mov
jge
fmuls
add
loopne
inc
xor
xor
push
mov
movsb
push
inc
divb
call
xorl
mov
add
sbb
fdiv
mov
testb
dec
bound
push
inc
imulb
inc
xor
mov
inc
testb
push
insl
cmc
fwait
push
mov
push
mov
pushl
add
stos
loopne
adc
cmc
das
sub
testb
add
mov
push
insl
or
push
cmp
push
mov
rorl
divb
call
addl
add
inc
add
inc
stc
jns
mov
xor
inc
add
imulb
call
xorl
mov
mov
push
jge
loopne
sti
movsb
push
inc
testb
sub
mov
push
push
sub
incl
cmpb
add
adc
add
lea
fsts
ss
add
add
in
push
inc
divb
notl
call
mov
mov
int3
int3
ret
int3
and
mov
cmp
int3
inc
int3
int3
ret
mov
push
enter
cmpsb
idivb
add
mov
mov
mov
cltd
ds
pop
xor
mov
push
mov
negb
push
call
add
add
or
xor
jge
out
cmp
push
incl
mov
xor
int3
and
mov
add
ret
cmp
add
add
cmp
add
testb
inc
lcall
or
rclb
add
test
repz
sbb
testl
sti
enter
add
testb
add
out
repz
add
add
jg
shr
add
addl
add
testb
add
enter
add
data16
add
inc
negb
mov
outsl
dec
call
inc
testb
mov
jmp
add
push
jns
push
add
add
inc
add
sti
mov
cld
aas
imulb
add
add
add
add
lahf
fcoms
mov
repnz
push
call
aam
mov
pushl
cld
mov
rorl
aad
cmpl
add
negb
push
call
add
add
lds
sub
mov
xchg
int
lock
xchg
fadd
call
add
popf
rclb
mov
mov
movsb
lahf
aam
mov
xor
add
dec
hlt
push
push
mov
lcall
jle
or
xor
add
mov
insl
inc
hlt
add
mov
inc
loopne
add
or
add
xor
add
testb
or
clc
xorl
clc
fldl
jae
test
add
mov
cmc
inc
clc
mov
xchg
ja
jmp
adc
cmc
xor
xor
lahf
mov
inc
xchg
jmp
xchg
mov
add
fistl
leave
mov
test
inc
testb
inc
imul
inc
imul
fadds
add
clc
mov
ja
add
testb
push
mov
cltd
push
inc
mulb
push
call
jne
cld
mov
mov
call
test
dec
cld
xor
in
sub
testb
jne
enter
add
pushf
push
mov
mov
out
sub
testl
ss
pop
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
les
fiadds
inc
or
mov
mulb
cmp
js
jns
push
push
cmp
adc
in
push
cmc
add
cmpsl
aam
xor
pop
rorb
imul
jle
lcall
je
hlt
out
jge
dec
inc
mull
mov
mov
enter
push
push
inc
cs
cs
popa
cmp
fs
mov
pop
xchg
push
mov
leave
sub
dec
int
pusha
sbb
lods
pop
int3
shrl
adc
ljmp
ret
push
and
push
orb
fcmovnbe
lock
addr16
dec
pusha
push
push
mov
fbld
jle
test
mov
xor
movsl
inc
test
insl
push
mov
push
insl
add
mov
mov
test
mov
repnz
rorl
add
mov
pop
pusha
dec
dec
and
mov
in
leave
in
popa
mov
test
pop
test
jns
sub
mov
xor
testl
out
mov
repz
fsubl
ss
mov
shll
jle
jp
and
xchg
cmp
xchg
dec
jae
les
leave
and
mov
std
jnp
stc
sub
mov
and
pop
lret
dec
mov
sub
sbb
pop
adc
in
cmp
fcoml
ja
rorb
imul
mov
into
fwait
pushf
pop
sbb
fstps
inc
scas
cmp
jbe
push
cwtl
in
insb
fsub
xchg
adc
push
mov
xchg
rcll
aaa
lcall
ja
mov
add
faddp
mov
aaa
bound
mov
pop
xchg
insb
mov
xchg
test
repnz
inc
lods
add
add
add
add
add
add
scas
add
add
add
add
add
outsb
scas
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
lods
add
add
lods
add
add
lods
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
lods
add
add
lods
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
push
gs
fs
imul
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
gs
inc
add
gs
gs
jae
inc
inc
add
popa
insb
imul
je
add
add
imul
add
push
add
jb
insb
insb
push
imul
aad
inc
outsb
fs
popa
imul
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
pop
add
insb
arpl
push
arpl
or
inc
gs
gs
dec
gs
imul
push
gs
imul
add
je
jne
inc
add
inc
inc
dec
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
jge
into
dec
add
add
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
jge
into
dec
add
add
add
add
add
add
push
add
addb
add
js
add
jge
into
dec
add
add
add
add
or
add
add
pusha
icebp
add
add
into
dec
add
add
add
add
or
add
repnz
add
into
dec
add
add
add
add
add
add
mov
add
add
into
dec
add
add
add
add
or
add
add
add
add
add
into
dec
add
add
add
add
mov
add
addb
add
jge
into
dec
add
add
add
add
or
add
add
add
testb
jge
into
dec
add
add
add
add
add
add
cmp
add
jge
into
dec
add
add
add
add
or
add
add
hlt
testb
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
addb
or
add
add
add
add
add
add
add
xor
xor
add
add
or
xor
add
add
or
mov
or
orb
mov
add
add
incl
xor
add
add
xor
add
pop
add
cld
sldt
clc
add
add
add
add
add
jo
add
lock
add
add
add
add
add
rolb
add
add
add
add
add
add
add
sldt
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
mov
pop
mov
add
pop
add
or
mov
mov
xor
add
or
add
add
add
sti
mov
add
sti
mov
add
or
add
or
add
sti
mov
add
cmp
add
aas
mov
add
add
mov
mov
add
add
or
or
add
add
add
xor
add
add
add
or
add
xor
mov
or
mov
add
add
add
mov
jnp
add
add
xor
add
mov
xor
add
add
xor
add
mov
add
add
add
mov
xor
or
add
add
add
add
mov
or
add
sti
mov
mov
add
add
add
mov
mov
add
add
add
sti
mov
lock
add
add
incl
add
add
add
aas
clc
lock
add
clc
decl
add
xor
xor
add
add
push
pop
call
pop
jmp
loopne
fnstsw
add
fnstsw
add
fnstsw
add
jmp
pop
jmp
rolb
repz
repz
repz
push
and
repz
jo
ret
out
jo
xchg
fdivrp
add
rcrb
add
mov
add
mov
add
nop
add
or
add
or
add
or
add
or
add
paddb
add
incb
add
incb
add
xlat
addb
jg
add
push
add
add
add
dec
add
add
and
ja
imul
insb
add
xor
xor
add
js
add
add
imul
jb
jns
and
imul
je
push
add
imul
outsl
add
jae
and
add
jb
add
je
outsl
add
jns
and
imul
arpl
outsl
add
jb
jne
jo
je
sub
and
jo
insb
add
popa
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
arpl
outsl
add
jb
add
je
and
add
add
jne
je
popa
add
insb
add
and
outsb
add
insl
add
sub
and
insl
add
jae
je
and
bound
add
add
imul
insb
add
xor
xor
add
js
add
and
insb
add
arpl
popa
add
add
add
outsb
add
add
add
and
push
add
jae
je
add
and
add
jb
add
je
outsl
add
jns
add
add
add
add
add
adc
add
add
sub
add
add
and
add
add
add
call
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
outsb
add
insb
add
xor
xor
and
push
add
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
push
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
dec
add
xor
xor
add
pop
add
add
add
jle
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
loopne
add
xor
test
xchg
xor
xor
mov
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
jnp
xorl
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
sub
mov
xchg
aaa
pushf
aaa
test
scas
aaa
ret
aaa
shlb
out
aaa
add
adc
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
pop
cmp
cmp
cmp
cmp
cmp
add
addb
adc
add
out
aas
hlt
aas
cli
aas
add
add
add
add
push
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
data16
add
mov
add
adc
