jmp
add
add
add
add
pop
in
mov
pop
out
popa
pop
pop
iret
pop
pop
pop
pop
int
out
jmp
pop
rcrl
in
int
add
decl
pop
shlb
pop
pop
out
int3
lret
out
bound
leave
pop
jmp
ror
pop
add
add
add
add
bound
add
mov
popa
add
add
int
jmp
add
lret
popa
pop
pop
in
in
leave
lret
shr
ljmp
enter
pop
jmp
in
pop
jmp
int3
out
int
add
decl
add
add
add
shr
arpl
leave
ljmp
dec
out
mov
incl
out
lret
add
leave
lret
in
iret
bound
add
add
dec
add
add
mov
lret
int3
mov
add
ljmp
add
add
int3
arpl
int
in
iret
add
add
add
mov
pop
out
lret
lret
mov
pop
ljmp
jmp
lret
int3
int
into
into
pop
out
pusha
ror
jmp
int3
int3
int3
push
mov
sub
push
movl
movb
xor
mov
mov
movl
mov
sub
movzwl
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
mov
lea
mov
cmpl
jne
jmp
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
cmp
jne
jmp
mov
sub
sub
mov
jmp
mov
add
sub
mov
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
sub
movzbl
sub
mov
lea
add
sub
inc
mov
dec
mov
mov
mov
mov
add
movzwl
add
mov
movzwl
imul
cmp
je
mov
sub
movzwl
sub
add
mov
jmp
movzwl
add
movzwl
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
cmp
jb
mov
sub
movzbl
sub
mov
mov
sub
mov
mov
add
sub
mov
call
mov
mov
lea
mov
mov
mov
lea
cmp
jne
mov
sub
movzbl
sub
mov
movzwl
mov
lea
cmp
jne
mov
sub
movzbl
sub
mov
mov
sub
movzbl
sub
mov
mov
mov
lea
cmp
jb
mov
sub
movzbl
sub
mov
mov
sub
movzbl
sub
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
mov
mov
mov
mov
sub
sub
mov
mov
push
mov
push
call
test
jne
mov
mov
lea
cmp
jb
mov
sub
movzbl
sub
mov
movzbl
add
movzwl
add
mov
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
sub
sub
mov
movzbl
mov
lea
cmp
jne
mov
sub
movzbl
sub
mov
mov
push
mov
push
call
add
mov
mov
sub
movzbl
sub
mov
mov
mov
movzbl
movzbl
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
mov
lea
mov
cmpl
jne
jmp
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
cmp
jne
jmp
mov
sub
sub
mov
jmp
mov
mov
lea
mov
movzbl
movzbl
add
mov
movzbl
mov
lea
cmp
jne
mov
sub
movzbl
sub
mov
mov
add
sub
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
int3
pop
lds
rcrb
or
pop
movsb
scas
pop
subb
lret
call
and
xlat
push
cmpsl
fsts
jle
iret
rcrl
cmpsl
shr
inc
loope
movsl
add
cmpsl
addr16
ret
adc
inc
adc
sub
jecxz
push
in
add
jp
dec
dec
js
push
idivl
test
inc
sti
mov
sub
fisttps
sub
sbb
pop
cli
xchg
repnz
jp
pop
or
cmc
push
sub
mov
addr16
daa
in
mov
mov
push
shll
push
fwait
jge
int3
mov
or
mov
int3
pop
and
aaa
outsb
xor
add
or
cmpsb
iret
pop
sub
mov
push
mov
lahf
mov
cli
shlb
out
or
inc
stos
xor
and
outsb
dec
pop
stos
leave
popl
push
mov
lds
sub
xchg
ds
xchg
dec
add
and
push
mov
jbe
daa
inc
lds
in
cwtl
sti
sub
cmp
jmp
std
mov
cmc
out
push
mov
mov
sbb
push
inc
push
leave
gs
loop
aaa
cmpl
mov
sub
mov
mov
cwtl
xchg
lret
pushf
mov
ss
mov
or
sub
xchg
dec
jno
in
mov
nop
call
movsl
bound
push
call
fwait
add
outsb
aad
mov
negl
or
sub
dec
mov
scas
movsb
shrb
into
test
bound
jbe
xchg
sbb
sbb
mov
loopne
push
aaa
mov
and
xchg
cmp
mov
or
das
out
mov
in
dec
and
and
jnp
inc
cmp
mov
pusha
movl
push
xchg
add
jp
fsub
pop
cmp
push
pop
cmp
in
and
push
dec
mov
fimull
cmp
into
xor
cld
mov
mov
cmp
mov
push
fiaddl
jno
push
fs
or
js
int
push
and
push
mov
pushf
mov
add
rorb
push
dec
ljmp
mov
aad
insb
pop
loop
cmp
sbb
xchg
jo
xchg
jbe
nop
mov
xor
or
insl
mov
mov
mov
xchg
leave
gs
rol
iret
aaa
movsl
loopne
es
insl
or
or
mov
out
adc
cmpsb
or
cli
fists
js
and
popa
call
pop
push
sahf
das
jmp
lcall
mov
outsb
jb
dec
jnp
xchg
adc
popf
rcll
enter
gs
fidivrs
divb
jl
push
sub
push
std
arpl
cld
imulb
push
jl
and
mov
and
lea
pop
lods
int3
jb
push
jno
pop
add
hlt
pop
gs
fwait
and
mov
lods
leave
lock
call
adc
nop
adc
cmp
inc
fwait
call
mov
cmc
movsl
or
ds
cmp
mov
ret
loopne
jecxz
std
xor
mov
imul
mov
or
and
xchg
xchg
mov
stc
popf
push
idivl
and
pop
dec
mov
push
xlat
jne
xchg
sub
sub
mov
je
pop
jns
inc
pop
push
sub
gs
xchg
lods
insl
scas
mov
sti
repz
lock
push
cmp
cs
add
push
and
pop
imul
insb
dec
push
outsb
fucomp
in
loope
std
cwtl
push
std
add
xchg
jge
aam
lcall
push
add
and
mov
and
dec
push
sbbl
mov
xchg
dec
loop
pushf
cmc
mov
dec
fisubl
mov
imul
out
iret
mov
push
mov
in
push
subl
rclb
cld
mov
cmp
adc
or
dec
enter
cmc
adc
sbb
fidivs
ljmp
loopne
and
fisubs
int3
push
jg
movsb
iret
sub
or
mov
imul
fs
adcl
xor
push
sbb
aas
lods
jecxz
es
inc
leave
or
mov
xchg
les
mov
fsubrs
movsb
mov
inc
lock
mov
stos
adc
jmp
sbb
nop
cli
stos
xor
push
inc
jnp
sub
dec
jg
lds
cmc
leave
insb
rolb
mov
push
lret
fnstcw
mov
xchg
pop
in
arpl
insb
pop
les
int3
push
loop,pn
pop
mov
lret
push
test
in
clc
scas
and
dec
lock
gs
add
cli
iret
stos
in
mov
sub
je
jns
mov
xor
inc
add
aad
hlt
add
adc
rorb
push
sbb
les
inc
scas
stos
add
testb
or
xor
iret
jg
add
lahf
dec
lock
push
test
push
test
mov
mov
jo
icebp
sbb
cli
push
xchg
add
push
fistpl
rcrl
cmp
pop
clc
sti
jne
sub
push
sbb
fildl
inc
ljmp
call
xor
pop
int
push
xor
xor
stc
sti
rorb
int3
sub
rcrb
pop
push
mov
popa
sbb
fnstsw
pop
aaa
sbb
imul
cmp
ljmp
sub
and
sbb
in
sbb
fcom
je
mov
add
mov
mov
cmp
insb
jne
sbb
push
scas
pop
cld
loopne
ficoml
push
repz
fisttpll
bound
mov
imul
cmp
push
aam
jns
lret
mov
pop
xchg
sti
call
add
and
loope
int3
mov
fdivrl
dec
fisttpll
xor
pop
loopne
icebp
push
or
jmp
cmp
testb
fisubrs
dec
mov
scas
lret
jno
imul
outsl
cmc
xchg
nop
pop
stos
lret
dec
leave
data16
push
sub
add
imul
adc
incb
pop
mov
addr16
jge
mov
sub
xchg
mov
mov
push
fisttpl
insb
fisttpl
sub
xchg
xchg
push
mov
xchg
icebp
xchg
jge
std
lods
jb
pop
jp
add
add
fimuls
mov
inc
jae
aaa
outsb
ja
decb
lea
in
ds
stos
inc
add
repz
ret
push
adc
push
push
add
cmp
pop
or
data16
decl
repnz
inc
xchg
dec
xchg
mov
jne
fwait
loope
sbb
and
xlat
es
push
cmp
divb
add
push
push
sbb
mov
pop
pop
test
pop
mov
ja
push
push
icebp
inc
movsb
jnp
in
xor
scas
jmp
test
pushf
testl
and
push
sbbb
incl
mov
inc
jp
ret
or
loop
mov
in
jge
add
add
pop
addr16
and
lcall
adcb
mov
outsb
xor
jmp
insb
addr16
lcall
stos
cli
cmp
lods
jnp
mov
mov
push
xlat
scas
cmp
adc
fwait
roll
adc
sub
mov
ljmp
mov
pop
push
lret
adc
enter
out
xor
je
ficompl
mov
or
roll
popa
stos
aam
sbb
pop
mov
movsb
into
nop
popa
sub
les
fisttps
cwtl
add
mov
pop
insl
sti
pop
loope
cmp
push
shll
sub
xor
and
stos
mov
loop
mov
mov
pop
test
iret
add
cmpsl
push
xor
inc
sahf
adc
and
test
insb
hlt
xor
repnz
or
js
lcall
fldenv
daa
jmp
cs
aad
lret
push
aam
and
in
enter
xlat
loope
or
imul
addr16
je
rcrl
ds
pop
and
loop
cmpsb
out
test
shll
inc
inc
in
pop
adc
push
sbb
fninit
pusha
push
test
nop
andb
mov
lods
aam
js
pushf
xchg
xchg
outsl
xchg
pop
int3
popf
sbb
in
shlb
mov
xor
cld
lcall
aas
popf
lcall
pop
das
cmp
add
jbe
movsb
xchg
jno
jecxz
jnp
pop
test
mov
sbb
mov
insl
les
negb
push
mov
mov
fadds
sbb
push
pop
repnz
mov
ljmp
fadds
aam
sub
add
mov
add
daa
jae
iret
leave
stos
xchg
std
cmc
cs
ljmp
bound
cmpsb
test
adc
add
in
subl
dec
jnp
xchg
xlat
cltd
cmp
push
loope
hlt
leave
jae,pn
xor
sbb
popf
jecxz
scas
push
adc
out
mov
ljmp
aas
mov
pop
xchg
test
stos
jbe
mov
mov
jae
sub
testb
mov
jle
lods
aam
insb
testb
sahf
xchg
bound
cmp
add
jne
imul
gs
cmpsb
gs
stc
cwtl
inc
iret
loop
mov
fwait
dec
out
dec
je
cltd
mov
jae,pt
adc
std
testl
call
popa
xchg
mov
stc
inc
mov
xchg
inc
ljmp
outsl
dec
add
das
mov
mov
sbb
outsb
adc
mov
rclb
jle
or
sahf
clc
sbbb
lds
jno
jle
adcl
push
fisttpll
xchg
fidivs
mov
push
mov
add
xor
xor
or
lcall
out
xor
pop
xor
das
icebp
fwait
mov
dec
call
add
cmpsb
sub
jl
dec
je
lret
push
stc
push
jge
pop
test
dec
pop
dec
insl
push
out
pop
ret
int3
int3
int3
push
mov
ljmp
add
lret
add
out
call
out
arpl
decl
popa
call
out
out
out
pop
out
leave
arpl
add
out
jmp
shr
pop
out
out
out
add
add
rcrb
int
arpl
add
call
add
int
pop
pop
pop
lret
leave
lret
add
add
pop
pop
popa
out
pop
lret
lret
rcl
popa
pop
pop
popa
pop
arpl
mov
in
in
popa
pusha
lret
bound
jmp
arpl
out
pop
add
lret
out
int
add
add
pop
arpl
iret
pop
pop
add
pop
decl
pusha
out
lret
int
into
leave
int
pop
jmp
pop
lret
into
int3
ljmp
enter
pusha
pop
enter
lret
add
add
add
add
out
ljmp
pop
pop
shr
mov
iret
popa
popa
shr
mov
pop
ljmp
add
add
int3
add
dec
lret
ror
rolb
add
dec
add
add
add
into
pop
pop
jmp
add
add
add
ljmp
pop
pop
out
add
lret
pop
pop
out
in
arpl
pop
add
int3
in
in
pop
jmp
lret
in
pop
out
into
int3
iret
add
in
lret
call
into
leave
int3
add
rolb
add
lret
lret
jmp
in
mov
iret
out
out
enter
add
add
add
int
int3
popa
rcrl
out
ljmp
add
rcrb
int
add
add
lret
add
add
jmp
pusha
jmp
iret
enter
add
int3
ror
pop
out
pop
shr
enter
pusha
pop
popa
enter
int3
out
out
in
call
add
pop
jmp
out
iret
pop
into
int3
add
decl
lret
popa
ljmp
jmp
int3
mov
arpl
pop
add
add
call
add
add
pop
jmp
call
out
out
pop
pop
jmp
bound
mov
out
jmp
popa
shlb
add
add
lret
pop
rcrl
bound
pop
pop
jmp
pop
pop
lret
lret
add
mov
add
arpl
int
out
add
add
popa
add
add
add
pop
pop
ror
decl
add
out
popa
int
pop
pop
add
int3
add
into
pusha
pop
int3
incl
add
into
pusha
int
jmp
ljmp
pop
pop
iret
pop
add
leave
out
pop
lret
pop
pusha
ljmp
into
out
out
into
arpl
jmp
call
int3
into
int3
add
add
mov
out
int3
pusha
pop
out
pop
out
mov
pop
call
shl
out
pop
jmp
arpl
add
add
jmp
leave
pop
add
add
add
add
out
pop
iret
int
call
into
rcl
arpl
add
add
enter
add
add
pop
lret
add
int3
ljmp
pusha
shr
jmp
pop
arpl
jmp
pop
out
pop
ror
pop
jmp
pop
out
pop
enter
lret
shr
add
in
add
add
out
jmp
int3
incl
add
shlb
in
into
jmp
jmp
arpl
sar
int3
add
iret
out
out
in
out
arpl
leave
pop
pop
add
add
add
add
arpl
shl
pop
pop
incl
add
in
into
arpl
lret
lret
lret
ror
out
in
int3
iret
in
jmp
int
ljmp
popa
pusha
out
out
in
lret
lret
leave
pop
enter
add
add
bound
incl
add
into
arpl
jmp
ljmp
incl
add
in
ljmp
shlb
enter
add
add
mov
lret
lret
int
in
arpl
pop
lret
int
int3
lret
pop
ljmp
add
lret
in
in
add
arpl
lcall
pop
int
jmp
add
arpl
add
iret
out
out
pop
int
jmp
pop
pop
out
add
dec
pop
int
in
lret
out
out
add
int3
add
add
add
lret
ljmp
lret
leave
lret
rcrb
ror
out
in
jmp
pop
call
add
add
add
call
shr
pop
pop
popa
call
out
ror
enter
in
popa
pop
shr
pop
add
int3
out
into
jmp
popa
enter
iret
jmp
add
add
add
lret
pusha
add
iret
lret
pop
arpl
out
enter
pop
out
out
out
add
int
lret
out
add
add
in
enter
lret
out
add
leave
jmp
out
shlb
mov
incl
add
out
mov
add
lret
out
pop
pop
enter
add
add
add
int3
int3
mov
add
add
lret
int3
ljmp
shl
pop
enter
popa
pop
ljmp
jmp
add
int3
add
pop
leave
out
out
jmp
add
enter
pusha
pop
pusha
lret
pusha
out
in
call
int
out
bound
out
jmp
pop
shr
into
pop
leave
pop
call
into
jmp
out
pop
pop
int
ror
lret
pusha
pop
pop
add
jmp
call
dec
ljmp
lret
add
int3
pop
out
lret
ljmp
jmp
pop
add
add
pop
int
pop
pop
jmp
add
popa
enter
int
decl
lret
enter
enter
add
pop
out
call
pop
int
out
out
leave
popa
out
int3
add
jmp
int3
dec
mov
add
out
pop
lret
pop
rcl
pop
in
jmp
out
out
out
out
pop
add
dec
add
mov
out
out
lret
out
shr
int3
int3
decl
rcrb
out
pop
iret
into
pop
pop
popa
enter
bound
pop
out
leave
into
out
leave
lret
ljmp
int3
add
into
int3
out
into
ljmp
pop
out
out
shl
out
int3
mov
pop
pop
add
int3
pop
int3
in
shlb
pop
add
add
out
into
out
popa
mov
add
int3
int
shr
pop
pop
add
add
bound
popa
ror
pop
out
popa
add
lret
pusha
pop
arpl
pop
pop
pop
jmp
out
shr
pop
out
jmp
lret
add
pop
pop
shr
pop
shr
in
out
out
iret
arpl
pop
ljmp
add
mov
in
out
ljmp
pop
pop
ljmp
jmp
add
shr
bound
int3
int3
add
pop
pop
leave
pop
iret
int3
arpl
out
in
arpl
pop
arpl
shr
rolb
add
dec
jmp
jmp
add
add
add
int3
lret
pop
pop
lret
ljmp
out
in
pusha
out
ljmp
add
jmp
enter
in
lret
add
jmp
pusha
in
pop
add
int3
lret
pop
int3
pop
out
out
shr
pop
call
in
add
call
lret
jmp
jmp
in
out
into
jmp
in
jmp
pop
iret
leave
add
add
rcl
iret
pop
leave
pop
in
int3
jmp
pop
mov
add
ljmp
in
pop
out
pop
out
int3
int3
int
pop
enter
dec
leave
int
add
add
pop
rcrl
out
add
bound
pop
rolb
add
int3
add
add
pop
add
leave
add
add
add
lret
ror
pop
jmp
jmp
ror
out
pop
lret
int
add
add
incl
add
add
int3
enter
in
int
ljmp
add
in
pop
in
pop
pop
ljmp
popa
add
jmp
jmp
incl
add
pop
out
out
call
jmp
pop
add
add
out
add
mov
out
add
add
int3
int3
add
ljmp
in
add
int3
enter
pop
pop
add
into
pop
into
lret
popa
add
add
add
add
rolb
add
arpl
out
pop
mov
add
add
into
into
in
call
int
out
pop
pop
shl
arpl
mov
pop
int
arpl
enter
add
in
jmp
in
mov
jmp
iret
pop
ror
pusha
out
int3
pusha
jmp
add
add
pop
into
out
add
add
out
ljmp
out
pop
enter
iret
ljmp
leave
shr
pop
int3
int3
mov
add
incl
add
add
add
add
lret
pop
pop
pop
int3
add
add
pop
out
ljmp
add
pop
lret
int3
mov
popa
out
int
in
out
int
lret
out
out
bound
add
add
pusha
shr
lret
pop
mov
incl
add
int3
int3
add
out
add
add
out
out
pop
leave
add
add
incl
add
lret
bound
out
mov
add
int
into
jmp
in
out
enter
jmp
pop
pop
enter
add
jmp
into
pop
iret
into
out
jmp
add
out
lret
ror
in
jmp
into
out
decl
in
pop
pop
ljmp
mov
add
enter
leave
pop
jmp
lret
jmp
out
in
out
in
int
jmp
into
pop
into
pop
int3
call
iret
pop
add
shll
in
iret
lret
ror
out
out
iret
enter
pop
out
in
add
out
into
arpl
into
pop
in
int3
jmp
jmp
pop
int3
leave
add
jmp
out
pop
out
ljmp
pop
pop
dec
jmp
lret
jmp
out
jmp
arpl
pop
add
iret
iret
int3
call
add
call
bound
pop
int3
arpl
add
pop
lret
jmp
iret
add
mov
add
leave
pop
leave
ror
out
out
pop
int3
out
out
iret
pop
rcrl
arpl
add
out
pop
call
int3
mov
in
enter
add
add
out
out
pop
in
out
pusha
iret
ljmp
iret
iret
out
iret
into
arpl
out
pusha
pop
pop
lret
leave
out
int3
arpl
pop
in
int3
popa
pop
bound
rcrb
add
pop
iret
int
int3
lret
leave
pop
int
in
pusha
pop
call
arpl
pop
out
ror
out
popa
lret
pusha
mov
ljmp
add
mov
int3
jmp
iret
pop
pusha
ljmp
add
int3
mov
enter
popa
pop
in
popa
pop
int3
rcrl
ljmp
jmp
dec
iret
into
out
out
out
enter
enter
out
pusha
pop
out
call
in
in
pop
pop
into
ljmp
pusha
into
iret
pop
pop
int
popa
arpl
arpl
out
jmp
add
int
in
out
pop
jmp
in
out
add
out
in
pop
popa
pop
call
add
jmp
out
pop
pop
ljmp
int3
add
add
add
add
add
mov
ljmp
pop
lret
into
rcrb
shlb
popa
leave
int
iret
pop
out
pop
into
int
int3
add
pop
call
add
into
out
ljmp
jmp
int3
add
out
pop
incl
add
out
pop
jmp
pusha
int
jmp
lret
jmp
popa
lret
arpl
bound
into
mov
add
popa
arpl
leave
arpl
out
add
add
int3
incl
add
bound
pop
int3
pop
int3
add
add
add
popa
lret
into
into
shl
jmp
add
incl
shr
arpl
out
pop
add
pop
decl
jmp
add
pop
jmp
iret
jmp
ljmp
lret
leave
pop
out
int
out
lret
mov
mov
into
pusha
in
popa
int3
add
in
iret
arpl
popa
out
incl
add
enter
pop
jmp
mov
pop
in
mov
add
leave
int3
bound
pusha
arpl
ljmp
shr
int3
jmp
pop
out
out
add
iret
popa
in
int3
pop
add
add
out
enter
in
pop
add
popa
arpl
shr
pop
jmp
into
out
lret
out
into
in
arpl
leave
int3
jmp
ror
lret
add
int3
in
iret
pop
pop
ror
out
pop
add
ljmp
in
leave
jmp
mov
enter
add
add
lret
out
jmp
out
add
int3
iret
int3
arpl
in
lret
pop
add
add
ljmp
pop
int3
add
add
pop
call
in
ljmp
int
pop
int
in
out
jmp
add
add
mov
add
add
int3
jmp
lret
call
jmp
add
add
bound
add
pop
popa
int
pop
in
popa
lret
popa
int3
in
lret
iret
enter
out
add
ljmp
jmp
mov
add
int3
pop
lret
pop
pop
out
pop
int3
pop
add
enter
arpl
arpl
ljmp
int
pop
jmp
pop
int3
iret
bound
mov
add
int3
jmp
out
lret
add
add
add
int3
mov
add
out
iret
jmp
pop
iret
pop
lret
mov
out
arpl
shll
jmp
lret
jmp
int3
add
incl
lret
int
pop
in
add
add
pop
call
pop
popa
int3
arpl
int3
out
pop
iret
pusha
add
enter
jmp
pop
mov
pusha
lret
bound
add
add
arpl
jmp
lret
out
ljmp
out
leave
in
pusha
jmp
lret
leave
bound
pop
into
out
in
lret
out
into
into
out
pop
pop
mov
add
leave
in
jmp
out
out
int3
pop
iret
pop
pop
ror
lret
out
out
out
pop
add
leave
in
enter
out
out
lret
out
arpl
pop
pop
out
pop
add
mov
jmp
pop
pop
enter
jmp
shll
pop
out
lret
in
pusha
dec
lret
jmp
jmp
add
add
add
add
add
pop
rcl
in
popa
out
ror
out
pusha
decl
add
pop
pop
lret
in
pop
popa
popa
shr
jmp
mov
jmp
add
int
ror
int3
pop
out
pop
into
out
pop
ljmp
int
out
int
pop
lret
lret
lret
out
rcrb
add
mov
pop
jmp
pop
pop
enter
into
shll
add
jmp
out
jmp
jmp
leave
pop
out
jmp
popa
ror
add
jmp
pop
out
int3
lret
enter
add
add
add
mov
incl
add
out
pop
out
pop
iret
out
lret
jmp
in
out
out
out
int
lret
pop
pop
ljmp
in
jmp
int3
call
leave
pop
call
in
iret
mov
add
iret
into
out
enter
add
lret
pop
shll
add
pop
call
int
into
call
pop
dec
in
ror
out
pusha
jmp
into
into
pop
popa
lret
add
jmp
shr
in
pop
enter
int
pop
jmp
out
iret
pop
lret
pop
call
add
add
ljmp
jmp
dec
add
lret
pop
call
out
jmp
call
pop
rcrl
enter
pop
popa
add
ljmp
out
ljmp
pop
lret
shlb
pop
call
iret
pop
ljmp
leave
pop
arpl
rcrb
add
mov
jmp
shr
into
out
out
pop
jmp
into
int3
lret
pusha
mov
popa
arpl
pop
leave
mov
in
out
int
lret
arpl
pusha
add
add
add
int
incl
add
out
out
add
pop
into
pop
pop
shr
into
arpl
jmp
pop
lret
in
ljmp
bound
add
pop
rcrb
jmp
out
add
add
popa
out
pop
out
popa
lret
pop
pop
pop
int3
mov
int3
int
out
int3
popa
ror
out
out
ljmp
int3
rcrb
popa
shll
call
int3
shll
in
int3
add
rcl
pop
lret
pop
pop
pusha
add
add
in
leave
lret
pop
out
pop
shl
shr
jmp
int3
int
dec
rcrl
pop
out
rcl
pusha
in
out
shl
add
pop
call
enter
in
iret
pusha
out
out
jmp
popa
into
jmp
into
lret
out
pop
bound
pop
arpl
pop
rcrl
pop
out
iret
lret
pop
pop
lret
pop
ror
pop
add
pusha
add
out
pusha
pop
iret
mov
add
mov
int3
push
mov
sub
movb
xor
mov
mov
movl
movl
mov
mov
lea
mov
movb
mov
sub
mov
movl
mov
sub
movzbl
sub
mov
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
movzbl
test
jne
mov
sub
movzwl
sub
add
mov
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
mov
add
movzwl
add
mov
movb
jmp
movb
cmpl
jae
mov
add
sub
mov
mov
sub
mov
mov
not
mov
jmp
mov
not
mov
mov
sub
mov
mov
sub
sub
mov
movzwl
sub
sub
mov
mov
add
mov
mov
jmp
mov
mov
lea
mov
mov
add
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
sub
sub
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movb
xor
mov
mov
movl
mov
sub
sub
mov
mov
mov
lea
cmp
jne
mov
sub
movzbl
sub
mov
mov
sub
sub
mov
mov
sub
sub
add
mov
mov
xor
mov
div
cmp
jbe
mov
sub
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movzbl
sub
mov
push
mov
sub
push
mov
push
mov
push
call
add
mov
push
call
add
mov
jmp
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
mov
lea
mov
movl
mov
test
je
cmpl
jne
mov
mov
lea
mov
mov
imul
cmp
je
mov
sub
sub
add
mov
jmp
mov
add
movzwl
add
mov
mov
push
mov
push
call
add
mov
sub
movzbl
sub
mov
mov
add
mov
mov
add
movzwl
add
mov
push
push
mov
push
call
add
mov
add
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
sub
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
imul
cmp
je
mov
sub
sub
movzwl
add
mov
jmp
movzwl
add
movzwl
add
mov
movzwl
cmp
jne
movzwl
cltd
mov
idiv
cmp
jle
mov
sub
sub
mov
mov
add
sub
mov
movzwl
movzwl
cmp
jne
movzwl
cltd
mov
idiv
cmp
jle
mov
sub
sub
mov
movzwl
mov
lea
cmp
jne
movzwl
sub
movzbl
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movb
xor
mov
movl
movl
mov
add
sub
mov
push
mov
push
call
mov
mov
add
movzbl
sub
mov
movb
mov
add
mov
mov
imul
cmp
je
mov
sub
sub
movzwl
add
mov
jmp
movzwl
add
movzwl
add
mov
movl
mov
add
mov
mov
sub
movzbl
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
movzwl
sub
sub
mov
mov
sub
mov
movzbl
test
jne
movzwl
add
movzwl
add
mov
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
mov
add
movzbl
sub
mov
movb
jmp
movb
cmpl
jae
mov
sub
sub
add
mov
mov
sub
mov
mov
not
mov
jmp
mov
not
mov
mov
sub
mov
mov
add
movzbl
sub
mov
movzwl
sub
sub
mov
mov
sub
sub
add
mov
mov
add
mov
mov
movzwl
mov
lea
mov
jmp
mov
add
movzbl
sub
mov
mov
sub
sub
add
mov
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pushl
call
pop
pop
ret
push
push
call
xor
mov
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
jl
cmp
jg
add
mov
inc
cmp
jne
jmp
push
pushl
push
push
push
pushl
push
push
call
add
mov
cmp
je
mov
add
and
call
mov
mov
mov
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
movl
cmp
je
push
pushl
pushl
push
push
pushl
push
pushl
call
add
test
je
push
pushl
call
pop
pop
cmp
je
push
call
pop
mov
lea
call
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
xor
inc
ret
xor
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
jb
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
and
add
jae
add
jae
add
jae
add
jb
add
jb
add
jb
add
jb
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdivl
add
je
add
je
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
jl
inc
add
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdivs
loopne
inc
add
je
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
jne
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
arpl
add
inc
add
inc
add
inc
add
jbe
add
jbe
add
jbe
add
jbe
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jl
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
js
add
js
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
jmp
push
push
push
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
mov
ret
mov
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
mov
mov
movzwl
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ds
add
add
cs
add
add
out
add
out
add
out
add
out
add
out
add
add
push
add
pop
out
add
add
add
cs
add
out
add
out
add
add
mul
add
in
add
lret
add
in
add
add
in
add
add
add
sbb
add
or
add
mul
add
call
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
pop
in
add
add
add
add
mov
add
enter
add
add
shl
add
ret
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
add
jecxz
add
add
lods
loop
add
add
add
add
orb
add
add
add
add
add
add
add
sbb
add
adcb
add
add
add
add
loop
add
add
add
add
add
cmp
add
sub
add
sbb
add
xchg
sbb
add
add
add
add
cmp
add
mov
filds
add
add
add
add
pop
jmp
in
enter
jmp
incl
add
call
out
dec
enter
into
in
pop
out
jmp
int3
int3
leave
jmp
add
popa
call
pop
add
add
add
leave
int3
in
pop
incl
pop
jmp
pusha
enter
into
pop
leave
incl
add
lret
lret
pop
jmp
in
into
in
pop
pop
iret
dec
into
pop
int3
pop
in
pop
dec
int3
add
out
shll
int3
int
popa
pop
add
out
pop
lret
popa
mov
lret
enter
dec
add
call
mov
add
rcrb
pop
add
out
jmp
shr
rcl
jmp
into
lret
lret
bound
int
call
int3
ljmp
pop
int3
int
int
int
out
ror
incl
add
add
iret
jmp
into
pop
out
lret
ljmp
dec
pop
int3
pop
bound
out
in
into
arpl
add
int
out
leave
bound
jmp
int3
add
in
enter
in
jmp
arpl
pop
pop
in
out
int3
call
out
enter
add
dec
iret
out
enter
jmp
pop
add
dec
out
out
out
pop
out
int
pusha
out
rcrb
add
out
in
lret
dec
add
add
add
int3
pop
out
int3
pop
shr
into
pop
jmp
pop
lcall
pop
call
out
pop
out
pop
arpl
add
pop
pop
out
bound
out
into
enter
enter
into
arpl
pop
shll
out
rorl
pusha
pop
mov
mov
jmp
add
pop
jmp
enter
add
pop
lret
int
in
jmp
pop
iret
lret
arpl
out
lret
int
pop
pusha
leave
lret
add
popa
arpl
popa
int
incl
jmp
pop
call
iret
add
pusha
pop
lret
out
pop
pop
out
enter
pop
jmp
shlb
arpl
pusha
int3
int3
out
lret
shll
popa
ljmp
leave
out
rcrb
shll
ljmp
add
rolb
add
enter
add
pop
pop
enter
into
pop
ljmp
out
lret
enter
int3
add
out
lret
pop
add
leave
add
pop
pop
iret
out
pop
pop
pop
mov
pop
int
pop
pop
call
shl
int
pusha
call
add
add
in
pop
pop
in
int3
jmp
pop
jmp
add
add
lret
out
pop
out
pop
jmp
out
lret
jmp
in
pop
bound
add
add
add
add
jmp
add
iret
popa
ror
mov
add
arpl
int3
out
pop
pusha
add
out
jmp
pop
in
out
arpl
into
into
arpl
jmp
add
ror
pop
lret
out
jmp
leave
in
out
add
rcrb
jmp
lret
in
pop
out
int3
ror
pop
pop
jmp
dec
add
int3
pusha
out
pop
arpl
in
shr
pop
in
lret
pop
leave
jmp
jmp
out
pop
int
out
popa
bound
add
jmp
in
out
add
add
pop
iret
lret
out
call
dec
pop
ror
into
ror
pop
lret
into
pop
ljmp
enter
add
into
int3
pop
lret
out
pop
add
pop
pop
out
in
ljmp
out
ljmp
decl
call
leave
int3
call
add
pop
decl
bound
jmp
call
add
pop
arpl
rolb
add
add
pop
add
shll
add
lret
add
add
int3
mov
out
out
int3
pop
pop
dec
rcrb
add
add
into
out
add
int
bound
into
lret
in
lret
out
ljmp
lret
out
jmp
leave
leave
out
pop
out
rcrl
pop
incl
add
pop
lret
in
pusha
mov
pop
in
out
pop
add
int3
lret
pop
into
lret
add
add
add
add
add
out
out
jmp
popa
pop
leave
lret
jmp
iret
iret
roll
pop
pop
pop
popa
out
out
rolb
call
int3
int3
mov
pop
pop
out
sar
add
add
popa
enter
int3
pop
in
add
lret
out
pusha
out
pop
out
jmp
popa
jmp
arpl
int3
out
shll
bound
mov
pop
pop
leave
shr
popa
add
into
int
shl
lret
add
popa
pop
add
add
mov
jmp
popa
pop
incl
int3
lret
out
pop
pop
bound
iret
pop
add
int
pop
into
out
enter
lret
leave
out
in
rcl
pusha
mov
in
in
enter
arpl
out
int3
int3
pop
jmp
pop
ljmp
pop
int
iret
into
call
int3
add
pusha
iret
int3
mov
out
ljmp
rcrb
in
shr
arpl
mov
popa
jmp
out
popa
pop
pop
lret
pusha
call
out
pop
pop
into
in
pop
jmp
ljmp
pop
ror
out
arpl
out
add
add
arpl
popa
jmp
jmp
lret
jmp
add
add
lcall
rcl
ljmp
pop
out
pop
out
add
pop
pop
leave
arpl
out
pop
ljmp
int3
add
add
pop
arpl
mov
iret
int
pop
iret
popa
jmp
pop
iret
int3
int3
call
out
in
out
call
pop
rcrb
int3
out
popa
out
jmp
arpl
call
call
enter
int3
pop
int
lret
rcrl
iret
out
pop
pop
iret
out
in
ljmp
add
in
shl
pop
pop
into
popa
out
out
lret
out
arpl
shr
jmp
pop
out
jmp
in
add
incl
ljmp
out
lret
pop
iret
add
popa
pop
ljmp
pop
pop
out
int
add
arpl
int
add
pusha
jmp
ljmp
shr
lret
jmp
out
pop
add
out
ror
out
in
out
into
out
add
add
iret
into
int
add
add
out
out
pop
int3
add
pop
jmp
popa
call
pusha
lret
ljmp
jmp
in
mov
add
leave
pusha
in
shr
in
pusha
iret
pop
mov
pop
jmp
lret
popa
add
add
pop
jmp
rcl
into
int
iret
pop
pop
out
pop
pop
bound
int
arpl
in
lret
lret
pop
out
popa
out
leave
lret
out
enter
pusha
pop
bound
arpl
rcrl
lret
pop
out
arpl
call
add
in
ljmp
pop
lret
call
pop
int
enter
int3
add
popa
jmp
add
lret
add
int3
dec
iret
pop
in
leave
add
into
pop
out
arpl
pop
in
in
pop
shr
shll
add
add
jmp
dec
leave
in
arpl
ljmp
jmp
popa
pop
in
popa
int
arpl
add
shr
iret
ljmp
pop
jmp
add
lret
pop
out
rcrl
rcrb
add
pop
pop
lret
lret
int3
arpl
ror
pop
pop
pop
ljmp
arpl
pop
popa
pop
lret
call
out
pop
pusha
out
bound
add
rolb
int3
leave
leave
int
into
ljmp
lret
add
lret
leave
in
rcrb
in
lret
int3
add
int
pop
out
into
out
jmp
ljmp
enter
pusha
out
int3
leave
leave
pop
int3
add
lret
in
pusha
out
int3
lret
pop
pop
add
lret
out
add
arpl
mov
pusha
rolb
dec
pop
enter
ljmp
leave
in
int3
out
popa
out
call
out
jmp
mov
pop
bound
add
out
add
out
popa
iret
shll
add
call
pop
iret
out
in
int
int
add
add
add
iret
jmp
pop
pop
ljmp
rcrb
int3
shr
pop
jmp
mov
add
lret
jmp
ror
add
lret
out
pop
enter
out
ror
add
decl
lret
lret
call
out
call
shr
into
pop
int3
ror
rolb
mov
enter
pop
in
int
pop
pop
jmp
iret
incl
enter
in
int
out
lret
lret
int3
int
popa
shl
rorl
in
mov
add
add
add
int3
pusha
lret
pop
enter
out
int
enter
add
enter
pusha
into
pop
pop
out
lret
pop
pop
add
add
bound
iret
out
out
incl
add
leave
pop
jmp
add
add
ljmp
add
int3
out
in
popa
popa
ror
call
arpl
pusha
ljmp
pop
out
into
pop
into
mov
pop
bound
jmp
int
pop
int3
leave
arpl
add
leave
pop
arpl
pop
pop
into
jmp
add
jmp
jmp
in
in
add
pop
int
pop
arpl
jmp
int3
leave
lret
add
pop
add
mov
into
call
add
int3
ljmp
lret
add
jmp
in
ror
in
add
add
pop
pop
lret
pop
out
jmp
add
int
into
iret
leave
lret
pop
pusha
bound
rorl
add
popa
in
incl
jmp
pop
int
jmp
in
jmp
into
pop
pop
pop
lret
arpl
arpl
popa
jmp
pusha
enter
add
in
out
lret
add
add
add
ror
call
pop
incl
pop
out
popa
in
arpl
decl
out
pop
out
out
lret
out
int3
add
add
add
pop
into
out
call
leave
out
pop
out
pop
leave
leave
pop
ljmp
add
shlb
ljmp
add
out
call
pop
call
pop
in
out
popa
lret
ljmp
add
out
ljmp
rcrb
leave
arpl
add
jmp
pop
mov
add
out
int
decl
popa
add
add
pop
enter
pop
arpl
pop
add
add
out
bound
out
iret
jmp
int
in
iret
lret
pop
out
iret
rcrl
add
int
out
lret
out
out
shr
iret
rcrb
pop
add
add
add
int3
add
jmp
jmp
int3
leave
arpl
add
leave
leave
pop
add
ljmp
leave
add
in
int3
jmp
add
add
out
pop
jmp
add
out
out
pop
lret
call
pusha
into
roll
add
shr
into
pop
ror
lret
iret
arpl
out
enter
pop
iret
jmp
lcall
lret
out
add
add
mov
arpl
jmp
pop
pop
add
pusha
int
pop
add
mov
mov
shll
popa
in
in
int3
arpl
into
arpl
add
enter
leave
out
arpl
pop
ljmp
mov
out
rcl
int3
pop
in
arpl
add
pop
leave
into
jmp
enter
jmp
into
ror
pop
shr
pop
call
leave
popa
pop
add
enter
popa
jmp
pop
pop
lret
ror
out
into
shlb
add
add
rcrb
shr
out
in
jmp
ljmp
bound
pop
in
out
ljmp
pop
arpl
shr
jmp
ljmp
in
iret
incl
in
ljmp
in
out
arpl
arpl
pop
add
out
int
out
int3
jmp
popa
pop
jmp
out
pop
popa
ror
add
pop
out
enter
into
pop
add
out
add
in
out
int3
incl
add
add
mov
int3
add
ljmp
bound
lret
iret
add
add
leave
into
pop
lret
lret
in
pop
add
add
mov
jmp
rcl
out
out
incl
incl
add
pop
pop
pop
iret
pusha
out
pusha
out
bound
ror
iret
out
out
int3
jmp
enter
pop
jmp
pusha
pop
pop
pop
pop
pop
pop
in
mov
add
enter
into
out
pop
out
call
ror
lret
leave
ljmp
out
pop
incl
add
out
popa
lret
incl
add
iret
pop
int3
enter
add
jmp
out
out
enter
jmp
leave
pop
lret
arpl
shl
popa
into
incl
add
arpl
pop
arpl
shr
int
arpl
out
lret
in
mov
add
add
into
out
out
jmp
int3
enter
pop
mov
out
leave
out
in
pop
pop
out
add
lret
int3
add
rcrl
pop
add
add
lret
add
int
lret
in
pop
enter
lret
in
enter
iret
out
jmp
mov
jmp
out
pusha
into
call
pop
leave
pop
out
int3
add
mov
shr
jmp
pop
int
ljmp
lret
iret
lret
popa
in
dec
jmp
in
into
pusha
leave
call
pop
int
popa
pop
lret
out
pop
ror
pop
out
in
out
pop
leave
in
into
out
mov
mov
call
ror
enter
mov
add
add
iret
pop
add
out
int
int3
iret
arpl
pop
int3
mov
add
into
out
add
jmp
pop
pop
enter
pusha
enter
pop
jmp
ror
ljmp
incl
add
int
pop
call
shr
int3
add
add
int3
pop
pop
in
leave
int3
mov
pop
int3
add
jmp
out
in
out
pusha
pop
jmp
jmp
pop
pop
in
pop
add
in
pop
out
pop
in
jmp
rcrl
pop
enter
popa
enter
mov
add
add
arpl
bound
int3
int3
add
add
in
pop
in
int
ror
lret
shr
bound
int
mov
add
add
add
pop
pop
out
pop
incl
add
lret
out
add
rcrb
pop
in
jmp
pop
arpl
jmp
jmp
lret
in
enter
out
enter
jmp
add
mov
pop
pop
iret
out
out
iret
mov
add
int3
int
in
out
shlb
call
enter
pop
int
out
pop
pop
int
iret
rcrb
iret
ror
arpl
in
ljmp
pop
pusha
lret
pop
pop
leave
call
enter
add
pop
int3
incl
pop
lret
out
add
add
dec
out
arpl
out
add
iret
int
pop
leave
in
add
ljmp
leave
pusha
roll
mov
out
leave
int3
pop
pop
popa
enter
in
pop
pop
shll
out
out
shr
incl
add
int3
add
pop
int3
jmp
ror
add
enter
add
in
pop
pop
arpl
pusha
out
decl
int3
call
pop
add
add
add
call
ljmp
int3
dec
out
int
out
int
lret
add
add
int3
jmp
pop
jmp
int3
int3
add
jmp
int
enter
lret
add
ljmp
call
pop
int3
jmp
out
iret
out
pusha
int
mov
jmp
enter
iret
iret
pop
popa
enter
in
lret
int3
add
lret
into
out
into
leave
pop
in
mov
int3
pusha
enter
call
pusha
pop
jmp
lret
int3
call
add
add
add
mov
call
jmp
add
add
incl
add
add
add
mov
mov
add
add
int
in
out
in
pop
pop
pusha
in
ljmp
shlb
int3
pop
in
pop
pop
ljmp
rcrb
jmp
rcrl
out
pusha
pusha
int3
iret
add
int3
out
jmp
bound
jmp
jmp
enter
pop
out
iret
pusha
bound
shr
into
jmp
add
pop
in
pop
arpl
out
jmp
iret
pop
out
pop
call
popa
jmp
incl
add
ljmp
add
lret
out
in
pop
pop
jmp
in
ljmp
iret
in
add
pop
jmp
add
int3
shll
add
out
out
into
pop
int
pop
ror
ror
iret
into
int3
pop
out
jmp
arpl
into
pop
call
int
incl
add
leave
into
shr
call
pusha
lret
add
add
add
roll
int3
lret
ror
out
out
pop
add
pop
call
pop
popa
out
pop
into
pop
int
into
jmp
add
add
pusha
in
out
arpl
leave
add
pop
lret
out
arpl
in
call
shl
jmp
pop
pop
out
int3
pop
pusha
out
leave
ror
int3
pop
pop
roll
add
int
ror
pop
ljmp
int3
call
pusha
out
int
jmp
add
in
pop
call
shr
rcrl
jmp
bound
pop
ror
int
call
jmp
pop
out
lret
bound
mov
add
jmp
shr
int
add
out
int3
pop
in
pop
popa
iret
rcrb
add
jmp
add
add
pop
iret
pop
into
jmp
out
int
int3
in
ror
out
incl
pop
iret
lret
out
popa
pop
add
in
int3
out
out
popa
call
out
out
iret
lret
add
pop
shr
add
int3
ljmp
leave
pop
into
out
int3
mov
add
add
lret
into
pusha
lret
pop
int
leave
out
ljmp
in
iret
out
int
iret
in
leave
jmp
iret
out
arpl
shll
mov
add
add
add
incl
add
add
add
int3
mov
add
int3
call
jmp
int
jmp
pop
into
bound
lret
in
into
jmp
ljmp
enter
int
arpl
shr
out
shr
rcrb
add
arpl
int
int3
pop
pop
out
in
add
shr
int
lret
add
add
shr
pusha
dec
call
leave
pop
pop
out
out
pusha
arpl
pop
pop
out
call
rolb
into
pop
call
int3
out
leave
lret
in
iret
mov
add
int3
add
mov
pop
call
call
call
pop
add
ljmp
arpl
pusha
enter
out
pusha
out
out
lret
rcl
incl
iret
jmp
call
out
pop
lret
call
lret
pusha
arpl
add
add
pop
call
out
int3
jmp
int3
add
add
jmp
add
add
rcrb
add
mov
incl
leave
out
pusha
into
jmp
int3
call
add
enter
pusha
pop
pop
add
out
leave
pop
out
into
int3
leave
pop
int3
popa
in
pop
pusha
add
int3
shll
out
jmp
pop
pop
int
jmp
lret
popa
pusha
pusha
add
pop
enter
jmp
jmp
pop
ror
leave
arpl
out
bound
add
add
lret
lret
call
in
out
pop
lret
jmp
lcall
jmp
in
arpl
arpl
jmp
out
shr
in
int3
add
call
lret
int3
out
pop
leave
int3
leave
popa
add
out
int
int3
in
out
pop
pop
int3
pop
int
int3
pop
ror
add
add
int
pop
pop
iret
leave
pop
roll
mov
add
mov
add
dec
arpl
arpl
add
enter
ljmp
mov
lret
jmp
ljmp
pop
iret
jmp
add
pop
int
pop
jmp
bound
add
out
ljmp
out
mov
arpl
rcl
in
shl
into
pop
int3
int3
add
int3
out
pop
pop
pop
pop
out
pop
lret
pusha
popa
in
lret
lret
popa
out
pop
out
popa
pop
pop
add
arpl
jmp
in
pop
in
leave
pop
jmp
pop
in
add
out
pop
jmp
int3
pop
pop
leave
lret
int
bound
popa
shr
out
pop
mov
pop
pop
pop
lret
shr
enter
pop
lret
pusha
roll
jmp
jmp
in
call
out
mov
lret
add
add
pop
arpl
jmp
add
add
pop
jmp
out
out
pop
add
popa
pusha
popa
ror
out
arpl
lret
pusha
int
lret
pusha
lret
lret
leave
arpl
pop
jmp
jmp
enter
jmp
pop
pop
ljmp
call
int3
mov
pop
in
out
pop
pop
jmp
into
pop
pop
pop
iret
arpl
call
mov
leave
int
lret
out
iret
pusha
pusha
pop
pop
into
int
incl
incl
add
out
int3
int3
add
int3
in
out
pop
jmp
rcl
out
in
out
mov
pop
pop
int
in
pop
mov
add
jmp
out
int
pop
pop
add
add
pop
int
into
out
ljmp
pop
lret
enter
enter
leave
iret
iret
out
jmp
add
lret
iret
leave
out
lret
lret
leave
jmp
jmp
pop
jmp
popa
mov
pop
pop
pusha
pop
add
add
in
pop
int
pop
out
pop
lret
jmp
out
pop
rcrl
int3
popa
pop
pop
int3
add
ljmp
leave
int3
int3
in
lret
pusha
out
in
out
pop
call
in
pop
add
shr
lret
pop
in
in
pop
add
add
out
pop
add
ljmp
arpl
int
enter
iret
pop
rcrb
lret
leave
iret
int3
arpl
pop
lret
lret
add
ljmp
into
incl
add
lret
leave
ror
enter
call
arpl
add
add
pop
pop
out
pop
ljmp
out
pop
popa
popa
in
bound
add
int
shl
iret
add
add
shr
call
bound
pop
out
mov
pusha
call
enter
shr
enter
add
add
in
pop
popa
ljmp
in
int
int3
jmp
out
jmp
pop
pop
jmp
ljmp
lret
pusha
jmp
jmp
int3
ljmp
bound
leave
out
call
in
lret
enter
iret
out
shr
out
pop
into
jmp
in
call
add
add
add
popa
in
lret
int
pop
bound
pop
ljmp
jmp
add
add
pop
ljmp
pop
pop
jmp
int
add
pop
pop
enter
jmp
iret
lret
pop
out
shlb
call
lcall
int3
add
into
pop
ljmp
jmp
pop
in
out
into
lcall
jmp
arpl
enter
add
add
add
add
rcrl
pusha
leave
int
leave
popa
shr
in
jmp
lret
ljmp
pop
ljmp
ror
add
iret
pop
shr
in
in
out
leave
into
pop
in
in
call
int3
add
arpl
pop
call
pop
out
out
jmp
add
pop
int3
iret
iret
out
in
pusha
out
lret
int
add
add
iret
out
pop
lret
int3
pop
pop
pop
roll
int3
add
add
int
add
shll
int
shr
pop
lcall
ljmp
add
call
lret
add
pop
pop
leave
add
out
pusha
pop
add
int3
iret
in
popa
lret
lret
incl
jmp
iret
jmp
pusha
ror
int3
call
ljmp
popa
iret
jmp
add
out
pop
into
int3
int3
rcrb
in
out
popa
popa
arpl
out
lcall
enter
ljmp
shr
jmp
incl
pop
out
pop
jmp
pop
out
decl
out
pusha
in
out
popa
iret
add
int3
jmp
add
int
popa
out
pop
add
add
ljmp
in
call
iret
pop
enter
add
pop
out
enter
add
lret
out
mov
add
iret
out
pop
in
out
out
iret
in
lret
jmp
int3
incl
add
add
pop
leave
pop
add
int
pop
ror
jmp
add
in
mov
leave
int3
lret
iret
enter
pop
int3
jmp
add
leave
in
add
out
pop
pop
int
out
enter
add
add
add
arpl
jmp
int3
enter
pop
shll
call
lret
pusha
pop
iret
int
ror
pop
iret
out
in
jmp
enter
pop
out
pop
lret
in
int3
pop
mov
pop
out
pop
int3
pusha
pusha
pop
in
jmp
lret
jmp
shr
popa
out
int
leave
int
ror
in
leave
mov
popa
enter
in
lret
add
ror
leave
out
lret
add
shr
iret
shr
lret
int3
mov
int3
pop
pusha
mov
jmp
pop
leave
jmp
add
int3
add
call
add
int3
add
add
ljmp
pop
int
pusha
jmp
int
jmp
ljmp
add
jmp
ror
rcrl
leave
add
add
out
pop
rcl
arpl
leave
leave
jmp
pusha
pop
pop
in
out
pop
leave
in
popa
out
in
shr
ljmp
dec
shr
arpl
pop
call
mov
lret
into
add
mov
add
jmp
pop
pop
out
leave
jmp
iret
pop
enter
jmp
add
mov
lret
lret
add
add
add
pop
mov
add
incl
add
jmp
ror
pop
call
ljmp
enter
int3
int3
pop
add
add
pop
rcrb
add
ljmp
roll
mov
in
popa
pop
out
popa
mov
pusha
in
ror
int
in
out
shl
call
into
pop
in
arpl
pop
in
in
int3
pusha
pop
pop
pop
arpl
out
add
pop
int3
lret
pop
call
mov
pop
pop
into
pop
jmp
int3
pop
int
out
arpl
popa
call
iret
out
popa
iret
call
jmp
into
out
into
add
arpl
int3
ror
add
arpl
popa
ljmp
add
add
out
pop
out
arpl
out
add
decl
pop
ljmp
pop
shr
int3
pop
incl
add
pop
pop
into
enter
add
in
pop
rcrl
call
pop
iret
lret
ror
iret
out
pop
in
in
rcrb
call
pop
jmp
jmp
int
jmp
out
pop
int3
int3
pop
enter
enter
dec
rcrb
jmp
leave
out
in
jmp
in
pop
call
arpl
jmp
add
add
add
pusha
out
in
shr
in
add
mov
jmp
lret
out
bound
out
add
add
lret
into
jmp
shr
out
pop
call
jmp
into
jmp
into
popa
pop
arpl
jmp
enter
ljmp
popa
pop
rcrb
call
int3
add
int3
out
shr
out
out
add
add
add
pop
pop
into
out
leave
arpl
out
pop
pop
in
pop
jmp
into
pop
pop
add
int3
add
add
add
into
lret
add
out
popa
pop
enter
rcrb
in
out
pusha
in
lret
jmp
in
mov
out
lret
int3
pop
leave
pop
iret
out
out
int3
pop
int3
int
add
popa
call
in
pop
popa
ljmp
add
pop
out
int3
int
int3
add
add
add
mov
jmp
enter
out
pusha
pop
in
pusha
out
call
int
lret
int
into
pop
out
arpl
out
shr
int
jmp
pop
pop
in
pop
out
add
pop
leave
pop
pop
pop
iret
call
add
add
add
add
iret
popa
in
leave
int3
mov
lret
pop
pusha
pop
popa
mov
iret
mov
int3
mov
add
add
iret
iret
into
jmp
in
pusha
add
mov
add
add
add
jmp
out
popa
pusha
shr
popa
pop
out
out
call
pop
add
pusha
mov
popa
in
into
enter
out
arpl
bound
pusha
jmp
popa
ljmp
jmp
pop
out
popa
ror
arpl
pop
call
enter
pusha
jmp
jmp
popa
out
jmp
out
pop
leave
jmp
pop
leave
in
jmp
out
add
add
pop
add
int3
out
ljmp
ljmp
add
int3
pop
jmp
incl
jmp
iret
into
pop
shr
jmp
add
in
add
add
int3
add
lret
pop
add
into
int3
in
lret
pop
ljmp
int3
add
mov
add
pop
popa
pop
out
lret
add
add
out
add
add
out
in
call
lret
jmp
pop
out
bound
pop
pop
pusha
jmp
rcl
in
leave
jmp
iret
int3
leave
pop
pop
jmp
out
in
mov
int3
decl
shlb
out
pop
dec
jmp
ljmp
iret
shr
iret
pop
add
pop
jmp
popa
popa
add
add
int3
add
enter
pop
call
shl
lret
lret
pusha
popa
add
lret
int3
call
jmp
pop
ror
mov
add
jmp
out
pusha
into
leave
ror
in
popa
int3
mov
incl
incl
add
lret
jmp
rolb
add
jmp
jmp
ljmp
iret
pop
pop
pop
rcrl
int3
pop
jmp
add
add
in
bound
lret
add
pop
pop
jmp
popa
int3
call
jmp
leave
pusha
jmp
jmp
sar
add
pop
ljmp
lret
out
out
popa
iret
jmp
shr
enter
pop
jmp
lret
out
out
call
in
pop
arpl
out
add
add
pop
out
iret
lret
pop
popa
incl
add
add
int
int
out
int3
arpl
pop
ljmp
add
arpl
rolb
add
int
add
lcall
jmp
pusha
into
jmp
lret
lret
int3
pop
add
pop
pop
out
shr
lret
lret
lret
pop
in
iret
out
pop
pop
iret
iret
pop
into
pop
lret
bound
in
jmp
ljmp
add
incl
jmp
pusha
out
pop
jmp
into
bound
mov
jmp
ljmp
int3
iret
pop
in
int3
out
out
int
pop
pop
add
add
out
ljmp
int3
int3
lret
out
popa
out
int
add
int3
int3
pop
out
iret
pop
pusha
pop
int
jmp
pop
shl
out
iret
in
add
int3
add
mov
int3
int3
lret
out
into
pop
pop
add
add
add
int
in
jmp
pop
pop
out
lcall
mov
into
ljmp
ljmp
out
in
lret
lret
in
jmp
int
into
iret
pop
arpl
iret
pop
add
pop
popa
pop
rcrb
enter
int
out
add
pusha
pop
mov
pop
pop
in
pop
pop
add
mov
jmp
pop
int3
jmp
pop
arpl
mov
add
pop
call
leave
pop
pop
int3
int3
add
add
jmp
iret
into
add
add
add
pop
int3
pop
rorl
int
out
out
add
int3
jmp
shlb
ljmp
into
jmp
leave
ljmp
add
add
add
arpl
jmp
out
rolb
add
ljmp
add
lcall
int
out
mov
out
add
out
rcrb
int
pop
out
arpl
call
jmp
enter
int3
pusha
int
leave
ror
popa
out
int3
into
jmp
enter
add
ror
lret
popa
jmp
add
ljmp
lret
out
iret
out
pop
add
add
int3
in
int
int3
lret
enter
out
out
pop
pusha
int3
out
lret
lret
into
lret
arpl
call
ljmp
int3
into
lret
add
leave
enter
add
out
leave
pusha
into
pop
call
jmp
pop
into
into
pusha
int
ror
jmp
out
int
pop
pop
call
call
add
pop
jmp
mov
add
lret
into
ror
out
iret
jmp
rcrl
bound
int
incl
mov
ror
lret
call
iret
lret
add
call
lret
add
call
iret
lret
enter
lret
out
out
rcrb
add
add
out
ljmp
pop
popa
out
out
out
add
out
ror
jmp
add
iret
pop
pop
into
jmp
enter
int3
add
add
add
add
out
in
iret
jmp
pop
pop
out
out
enter
int
decl
jmp
pop
in
enter
pop
pop
leave
int3
add
add
incl
add
dec
in
lret
add
jmp
arpl
popa
out
int3
incl
add
arpl
incl
add
jmp
add
ljmp
add
pusha
pop
popa
in
arpl
add
out
leave
pusha
into
pop
int
lcall
lret
pop
into
pop
roll
add
add
lcall
arpl
pop
pop
shlb
jmp
add
pop
pop
pop
arpl
rolb
in
lret
in
leave
pusha
in
pop
add
out
dec
jmp
add
add
out
roll
add
in
out
enter
jmp
call
out
arpl
bound
leave
mov
into
mov
add
out
out
out
lret
add
int3
add
lret
jmp
int3
pop
lret
pop
pop
lret
popa
pop
lcall
pop
pop
int3
add
add
mov
add
pop
in
int
out
add
call
pop
shll
shr
int
pop
jmp
out
sar
add
add
add
add
pusha
popa
int3
shr
pop
popa
jmp
out
out
add
add
ljmp
jmp
arpl
pusha
int3
mov
in
jmp
out
in
pop
int
call
enter
popa
add
arpl
int3
lret
pop
add
add
dec
pop
in
add
add
int3
pop
roll
iret
int
out
popa
ljmp
out
jmp
int
int
ljmp
in
add
jmp
add
pusha
out
add
int3
pop
pop
enter
add
out
jmp
popa
leave
int
pop
shr
pop
add
iret
out
add
arpl
int
pop
ljmp
pop
in
pop
pop
lret
out
int3
int3
add
out
pop
in
ljmp
add
add
mov
jmp
ljmp
pop
pop
pusha
int3
lret
pop
pusha
bound
call
out
out
jmp
add
pop
ror
rcl
int3
in
add
add
add
add
pop
lret
pusha
out
pusha
int
ljmp
iret
out
add
rcrb
add
add
dec
jmp
call
jmp
add
add
in
jmp
into
int
out
out
jmp
pop
pusha
rcl
shl
in
ror
call
lret
int
into
bound
iret
lcall
pop
in
lret
enter
out
out
jmp
pop
pop
int3
arpl
out
out
lret
pop
out
add
enter
in
leave
pop
pusha
into
pusha
iret
incl
add
leave
call
out
popa
rolb
int
int3
add
enter
in
shr
int3
add
pop
ror
pop
int3
ljmp
shr
into
incl
add
out
pusha
pop
enter
pop
in
in
add
int3
int3
shr
enter
in
into
int3
pop
iret
enter
call
jmp
add
out
pop
add
out
jmp
int3
pusha
into
jmp
add
arpl
int3
jmp
enter
pop
leave
int3
add
add
add
add
add
add
popa
int
lret
in
leave
in
pop
mov
pop
into
ljmp
pop
int3
mov
popa
add
into
out
pop
ljmp
add
add
add
mov
incl
add
add
mov
enter
mov
popa
lret
in
bound
add
add
add
dec
rcrb
pop
lret
add
pop
mov
into
out
int3
add
mov
int3
add
add
add
into
pop
pop
jmp
int3
int
jmp
add
lret
lret
in
pop
popa
out
pop
lret
lret
call
pop
shr
into
bound
lret
out
int
int3
pop
int3
iret
enter
pop
dec
call
arpl
leave
add
out
jmp
popa
popa
out
lret
pop
mov
int
pop
out
popa
pop
pusha
out
out
out
add
add
add
add
out
dec
pop
out
add
shr
enter
out
in
pop
arpl
jmp
lret
jmp
leave
int
out
pop
ljmp
out
call
into
pop
jmp
add
add
add
call
add
out
pusha
arpl
iret
iret
add
out
pop
int3
mov
int3
leave
iret
bound
out
iret
out
ljmp
add
ljmp
leave
jmp
lret
int3
pop
iret
jmp
int3
add
lret
call
pop
iret
jmp
popa
out
int
ljmp
enter
int3
int3
add
call
bound
enter
pop
pusha
add
add
int3
add
pop
into
arpl
out
pop
iret
pop
mov
add
pop
int3
int3
add
leave
popa
jmp
into
in
int3
into
add
add
popa
int3
lret
pop
pop
call
in
shr
out
bound
int3
add
in
pusha
pop
ror
int3
iret
jmp
jmp
pop
pop
leave
pop
bound
add
pusha
out
out
int
out
pop
out
shll
arpl
out
shl
add
into
lret
pop
shr
jmp
jmp
int
call
mov
jmp
in
pop
bound
mov
lret
jmp
out
pop
int3
pop
pop
enter
add
add
shr
bound
incl
add
popa
in
add
add
int3
jmp
int3
add
add
ljmp
ljmp
out
add
lret
in
iret
pop
out
bound
pop
rcrb
lret
add
jmp
pop
leave
lret
ljmp
call
dec
pop
pop
jmp
add
add
add
mov
int3
lret
int3
int3
into
popa
mov
add
pop
mov
call
in
ror
call
add
add
add
pop
int3
popa
ljmp
add
add
mov
arpl
pop
ljmp
pop
rcl
call
pop
add
int3
mov
pusha
out
pop
iret
add
jmp
int3
shr
pop
into
pop
in
in
iret
mov
lret
in
iret
into
pop
in
lret
in
out
in
mov
add
out
in
pop
jmp
ror
into
pop
popa
pop
lret
int3
add
add
pop
int3
enter
add
pop
in
out
out
incl
add
pop
jmp
in
in
in
in
lret
add
add
out
int3
pop
ljmp
call
int
pop
into
int
add
in
lret
pop
into
ror
pop
mov
in
iret
leave
pop
ror
rcrl
out
in
int
pop
in
add
pop
leave
arpl
add
add
lret
pop
out
mov
add
enter
add
add
add
shl
out
pop
out
dec
ljmp
in
pop
popa
jmp
add
pop
jmp
iret
pop
pop
call
call
int3
pop
out
leave
pop
popa
leave
int3
rcrl
pusha
int3
pop
pop
into
in
shl
int
out
popa
out
pop
in
popa
pop
jmp
incl
add
add
enter
in
pop
out
in
out
pop
bound
add
pop
pusha
in
int
lret
jmp
int3
int
int3
arpl
iret
enter
add
add
pop
jmp
call
add
add
out
int3
call
mov
add
out
shll
lret
mov
leave
add
ljmp
enter
mov
pop
int3
arpl
in
pop
int
lcall
ljmp
add
ljmp
iret
add
int3
jmp
in
incl
add
in
jmp
lret
into
out
leave
int3
iret
pop
add
incl
add
jmp
mov
leave
out
pop
enter
add
int3
out
iret
pop
in
pop
popa
mov
lret
pop
iret
popa
int3
add
add
leave
out
leave
pop
lret
add
pop
pop
in
mov
int
pop
lret
ljmp
ror
into
popa
shr
call
pop
enter
add
add
out
add
jmp
out
rcrl
into
pop
jmp
add
in
in
pusha
ljmp
lret
lret
pop
call
pop
enter
add
arpl
pop
rcl
leave
pop
pop
pop
pop
jmp
iret
lret
int3
jmp
pop
pusha
pusha
add
add
pop
pop
enter
jmp
lret
popa
bound
in
ljmp
pop
pop
int3
out
in
out
jmp
bound
pop
out
popa
bound
int3
mov
int3
mov
pop
pop
int
pop
shr
int
out
lret
ljmp
add
pusha
out
ljmp
add
add
pop
lret
int
lret
add
add
out
mov
add
out
in
pop
out
jmp
out
into
lret
jmp
int3
iret
call
iret
pop
pop
out
pop
jmp
in
rcrb
in
popa
pop
pop
out
lret
out
mov
jmp
pop
leave
iret
in
jmp
into
jmp
in
pusha
call
pop
add
pusha
enter
pop
add
mov
pop
pop
pusha
ljmp
add
enter
lret
lret
pop
pop
lret
add
add
add
pop
pop
in
leave
pop
pop
pop
ror
add
into
in
out
int3
int3
lret
ljmp
out
int3
incl
add
pusha
in
popa
lret
pop
lret
out
arpl
lret
pop
pop
ljmp
mov
int3
pop
pop
pop
add
int3
pop
call
jmp
leave
in
out
add
iret
rcrb
pop
ljmp
add
pop
pusha
int3
call
pop
add
add
add
popa
pop
lret
in
in
int3
into
pop
lret
call
out
out
pusha
add
int
pop
in
popa
pop
out
pop
leave
mov
shl
int
int
out
out
in
call
out
out
jmp
into
shr
lret
jmp
incl
add
pop
dec
jmp
int3
in
pop
into
int3
ror
in
arpl
int
int
iret
add
popa
jmp
pop
shr
out
enter
into
in
int3
pop
lret
pop
pop
lret
iret
out
ljmp
jmp
int
jmp
pop
arpl
jmp
ror
pop
jmp
pop
arpl
add
iret
jmp
add
jmp
arpl
out
out
arpl
enter
pop
leave
leave
int
int
arpl
into
pop
add
pop
pop
jmp
int
into
int
out
ljmp
int3
decl
shlb
leave
add
lret
pop
lret
out
pop
enter
pop
add
add
in
bound
add
call
bound
add
add
add
pop
in
pop
out
add
add
arpl
pop
iret
shr
add
add
add
in
lret
add
out
lret
add
ljmp
out
leave
out
out
out
lret
pop
int
enter
out
enter
jmp
into
lret
add
lret
incl
rcrl
jmp
ljmp
call
enter
pop
pusha
pop
ljmp
lret
out
enter
lret
add
int3
arpl
arpl
call
out
pop
into
out
int3
add
pop
out
jmp
pop
arpl
leave
into
shr
int
add
mov
int3
add
add
shr
pop
int3
iret
out
add
pop
pop
call
call
out
in
enter
lret
lret
pop
jmp
shr
out
jmp
in
shr
add
popa
ljmp
int3
int
call
mov
add
add
pop
leave
enter
add
pop
arpl
jmp
leave
popa
pop
into
shlb
add
add
add
mov
lret
pop
out
pop
ljmp
roll
add
add
in
ror
iret
in
in
pop
out
out
pusha
ror
incl
add
jmp
int3
add
mov
call
out
into
jmp
lret
popa
into
add
out
jmp
out
pop
pop
pop
add
out
arpl
add
mov
int
pop
pop
lret
pop
lret
shlb
shr
mov
add
out
jmp
ljmp
add
add
add
incl
add
jmp
pop
int
mov
add
add
int3
add
out
rcrb
pusha
in
add
add
call
in
iret
int3
pusha
arpl
add
arpl
lret
pop
pop
int3
leave
popa
ror
pop
int
jmp
int3
add
add
in
int3
leave
int
ror
mov
pusha
pop
ljmp
pop
iret
pop
in
lret
out
in
pop
out
out
ljmp
lret
in
mov
lret
ror
arpl
iret
jmp
call
iret
add
add
incl
leave
int
into
jmp
out
jmp
out
popa
int3
add
mov
mov
add
ljmp
rcrl
pusha
add
add
mov
add
ror
pop
int3
leave
add
arpl
add
enter
add
int3
mov
ror
add
call
ljmp
lret
call
add
pop
leave
lret
add
pop
pop
add
int3
incl
add
mov
pop
out
rcrl
enter
pop
pop
add
mov
pop
out
lret
enter
add
pusha
pop
out
out
pusha
shr
int
pop
arpl
into
pop
jmp
ror
pop
popa
pop
iret
shlb
pusha
in
into
add
add
out
ljmp
add
mov
in
ror
out
lret
pusha
pop
add
add
pop
jmp
rcrb
popa
out
pop
in
int
add
add
into
leave
lret
in
call
pop
mov
pop
out
bound
add
add
into
pusha
pop
popa
call
add
pop
in
pusha
pusha
pop
pop
jmp
pusha
enter
jmp
call
popa
add
popa
leave
pop
lret
leave
int3
pop
ror
pusha
into
pusha
leave
out
add
int3
pop
int
out
mov
out
arpl
jmp
popa
pop
pop
add
enter
jmp
jmp
pop
in
call
pop
jmp
pusha
jmp
shlb
add
ljmp
pop
enter
ljmp
in
ror
out
jmp
arpl
jmp
pusha
call
add
pop
out
jmp
pop
pop
iret
in
pusha
jmp
pop
call
out
add
add
add
pop
pop
pusha
shl
int3
jmp
int3
out
pop
out
mov
add
pop
in
out
rcrl
pop
mov
into
jmp
iret
jmp
pop
rcrl
pop
pop
lcall
out
shr
pop
pop
int
lcall
pop
out
pop
in
shlb
leave
iret
lret
mov
add
lret
add
pop
lret
arpl
bound
add
add
lret
int
out
out
pop
arpl
into
pop
call
out
out
call
add
add
pop
mov
add
out
pusha
in
int3
add
add
lcall
pusha
popa
ljmp
call
lret
into
pop
jmp
call
arpl
ror
lret
pusha
mov
int
lret
into
int
ljmp
jmp
popa
shr
int
lret
pop
pop
int
jmp
add
dec
out
add
add
in
call
popa
popa
int
int
add
pop
leave
lret
int3
bound
add
add
out
out
pop
pop
pop
pop
jmp
iret
pop
in
out
int3
int3
lret
lret
pop
in
bound
into
into
lret
bound
lret
lret
add
pop
iret
pop
in
enter
in
pop
shr
in
call
out
out
arpl
add
pop
pop
enter
add
into
out
pop
jmp
add
int3
int3
call
pop
call
out
pop
call
add
arpl
int
arpl
incl
add
pop
jmp
lret
pop
lret
int3
mov
mov
int3
pop
add
add
mov
pop
in
out
pop
popa
bound
add
enter
add
pop
in
shl
arpl
call
leave
out
add
jmp
int3
mov
lret
into
out
jmp
jmp
call
jmp
pop
int3
lret
iret
int3
decl
int
pop
arpl
mov
pop
enter
rcrb
jmp
add
add
add
iret
arpl
out
out
int3
pusha
pop
shr
lret
call
popa
enter
pop
rcl
pop
pop
lret
pop
int3
shr
int
jmp
enter
pop
out
int
int3
int
lret
iret
popa
int
in
jmp
ljmp
pop
pop
in
ljmp
jmp
add
pop
out
rcrl
out
add
out
out
out
leave
int3
lret
popa
add
enter
ljmp
enter
add
decl
lret
pusha
lret
add
add
add
add
in
jmp
int
lret
out
out
out
pop
lret
shr
jmp
pop
add
lret
leave
out
roll
add
out
out
into
shl
in
jmp
mov
int3
leave
jmp
iret
ror
lret
lret
pop
out
into
leave
ljmp
pop
out
arpl
in
iret
rcrl
rcrl
jmp
leave
in
iret
out
pop
rcl
lret
in
enter
add
add
add
pusha
out
iret
call
pop
int
pop
out
out
jmp
into
out
pop
pop
jmp
leave
leave
enter
mov
add
rcrl
pop
out
into
pop
add
out
lret
in
jmp
lret
iret
add
add
add
add
pop
arpl
add
out
out
pop
out
in
out
iret
dec
out
arpl
add
incl
int3
iret
pop
out
pusha
iret
out
int
add
rcl
jmp
pop
int3
out
pop
add
out
enter
lret
pop
leave
out
in
into
pop
jmp
add
popa
out
int
lret
pop
leave
enter
add
int3
out
rcrl
out
out
lret
popa
pop
add
into
out
int
out
lret
out
mov
out
pop
ror
out
int3
pop
leave
ror
int3
int3
pop
arpl
shr
int
bound
lcall
into
int3
enter
in
ljmp
out
pop
lret
lret
pop
lret
leave
leave
out
ror
in
jmp
int3
int3
mov
add
in
pop
lret
in
shl
jmp
lret
into
int
pop
pusha
arpl
in
pop
lret
pop
jmp
into
lret
jmp
add
jmp
dec
iret
lret
add
arpl
iret
pop
jmp
add
add
out
jmp
ljmp
jmp
in
out
pop
int3
incl
add
add
pop
pop
out
lret
pop
int3
out
pop
out
pop
in
pop
rolb
add
jmp
rolb
add
out
enter
lret
jmp
pop
pop
out
out
call
incl
add
add
int
in
rcrb
pop
leave
in
jmp
pop
pop
add
add
arpl
shl
enter
iret
int3
pusha
in
lret
pop
into
bound
add
jmp
out
add
leave
in
into
pop
popa
pop
leave
out
out
out
popa
iret
add
enter
incl
add
in
iret
iret
out
out
rcl
enter
add
incl
jmp
lret
pop
lret
out
out
int3
add
call
pop
in
shr
ror
out
pop
in
iret
jmp
out
call
lret
pop
out
ror
out
jmp
in
dec
in
shll
lret
ljmp
out
call
in
iret
add
rcrb
jmp
lret
add
iret
in
out
iret
jmp
out
lret
lret
leave
add
out
dec
out
pop
into
jmp
mov
dec
add
dec
pop
call
int3
mov
add
out
pop
pop
pop
pop
int
out
add
out
out
bound
shlb
mov
add
add
in
pop
add
into
out
lret
out
in
shr
add
pop
pusha
int
in
jmp
pusha
into
in
iret
add
shr
pop
pop
add
mov
popa
popa
enter
incl
add
add
lret
leave
enter
pop
add
mov
pop
lret
lret
ljmp
out
int
out
pop
popa
shr
leave
int3
shr
jmp
pop
add
add
pop
mov
out
pop
lcall
rcl
out
arpl
into
pop
call
add
add
pop
add
popa
out
lret
pop
lret
pop
pusha
pusha
int3
mov
in
into
call
in
pop
pusha
add
add
mov
shll
in
int
jmp
out
add
add
add
pusha
ljmp
add
lcall
out
ljmp
add
add
mov
int3
lret
iret
jmp
pop
int
jmp
pusha
int3
into
pusha
leave
in
ljmp
iret
pusha
out
add
add
int3
leave
shr
shll
add
pop
in
lret
into
arpl
jmp
add
add
ror
add
int3
jmp
into
pop
pop
bound
out
in
jmp
int3
lret
pusha
in
int3
in
out
jmp
add
call
add
pop
popa
leave
popa
enter
lret
decl
jmp
into
add
enter
pop
add
add
add
in
pop
out
pusha
add
jmp
out
iret
jmp
leave
enter
add
add
pop
into
add
pusha
in
lret
pusha
add
add
out
call
pop
in
pop
add
ror
in
pop
popa
pop
out
jmp
enter
out
out
popa
add
add
add
add
out
shr
out
pop
jmp
into
jmp
pop
add
add
lret
pusha
into
pop
ljmp
enter
int
int3
call
add
mov
add
add
mov
pop
pop
pop
int3
int3
pop
mov
add
pop
pop
pusha
iret
decl
arpl
out
add
incl
out
pop
iret
pusha
pop
pusha
int
lret
rolb
add
into
add
pop
out
int3
arpl
jmp
call
mov
popa
pop
pop
lret
arpl
add
int3
into
lret
enter
int3
arpl
rcrb
in
pop
jmp
pop
iret
popa
ror
int3
out
pop
iret
in
pop
out
add
add
pop
int
lret
pop
in
pop
in
call
in
pop
call
pop
int3
popa
jmp
enter
pop
lret
out
int3
pop
lret
jmp
add
int3
add
int
lret
out
in
bound
add
add
pop
pop
pop
incl
add
pop
call
int3
lret
dec
in
pop
jmp
ljmp
iret
lret
pop
ror
add
in
jmp
int
pop
out
jmp
out
mov
add
arpl
out
jmp
ror
lret
lret
add
int3
add
int3
add
into
pusha
ror
popa
arpl
pop
pusha
call
pop
leave
bound
in
in
mov
call
jmp
enter
pop
shr
in
add
int3
int3
pop
out
pop
in
jmp
leave
lret
out
jmp
out
jmp
jmp
pop
int3
pop
pusha
rcrl
int3
popa
out
add
add
int3
int3
add
pop
out
pop
ror
leave
pusha
out
pop
ror
int3
add
add
add
out
add
incl
add
in
add
jmp
out
arpl
jmp
in
out
in
ror
into
ljmp
lret
out
in
out
pusha
pop
pop
jmp
pop
int3
out
int3
call
add
add
add
add
pusha
bound
out
add
in
pop
iret
lret
leave
incl
out
out
lret
jmp
pop
out
add
add
add
enter
ror
add
mov
add
ljmp
in
ljmp
in
rcl
in
into
int3
add
mov
out
pop
pop
call
int3
incl
add
add
incl
add
in
in
arpl
pop
out
out
pop
iret
mov
iret
out
int
arpl
add
int3
add
int3
out
pop
iret
leave
jmp
pop
add
jmp
int3
pop
jmp
int3
add
lret
pop
in
enter
out
pop
mov
in
pop
add
pop
out
add
int3
pop
lret
ljmp
out
call
lret
popa
popa
ljmp
iret
in
pusha
out
leave
lret
pop
int
lret
int3
add
pop
out
call
int
ror
in
lret
out
pop
arpl
in
jmp
add
int
iret
out
into
popa
add
add
pop
call
pop
pop
int3
popa
out
int3
add
add
lret
ror
ljmp
enter
add
add
add
jmp
add
pop
out
mov
out
enter
leave
lret
pop
add
pop
in
into
jmp
add
add
add
lret
enter
jmp
add
mov
add
add
add
lret
out
iret
add
in
pop
pop
shr
lret
add
ljmp
add
in
call
lret
lret
int3
add
add
pop
jmp
out
add
add
pusha
shl
lret
lret
ljmp
in
ljmp
arpl
mov
leave
out
int
leave
leave
in
pop
pop
jmp
pusha
iret
out
pop
pop
iret
pop
jmp
add
add
lret
popa
in
jmp
pop
bound
pop
ror
mov
mov
in
lret
out
enter
jmp
ljmp
add
pusha
add
jmp
enter
add
enter
out
int3
int3
add
int3
shll
pusha
call
lret
pop
int
ljmp
call
in
pop
arpl
int3
shr
enter
add
enter
pop
call
leave
out
pop
in
ljmp
int3
arpl
add
out
add
pop
ljmp
jmp
jmp
ljmp
iret
mov
add
int3
ljmp
pop
popa
into
add
call
add
arpl
add
in
in
leave
jmp
pop
add
add
int
shr
ljmp
int3
rcrl
int
pop
in
jmp
add
in
int
in
lret
out
pop
add
pop
add
jmp
jmp
shr
arpl
add
jmp
jmp
pop
in
popa
arpl
out
rcrl
out
rcl
int
int
add
leave
ror
out
pop
shr
out
popa
lret
lret
jmp
add
add
jmp
pusha
lret
leave
add
jmp
out
in
pop
call
ror
int3
in
add
add
add
out
jmp
pop
pop
into
int3
add
iret
popa
into
out
out
add
out
pop
call
in
pop
jmp
enter
add
jmp
ror
add
add
int
out
lret
bound
add
add
out
pop
into
bound
into
in
enter
pop
leave
popa
out
out
add
mov
incl
add
call
out
jmp
out
leave
pop
pop
out
add
add
arpl
call
int3
pop
in
in
in
pop
into
bound
bound
add
add
mov
int3
add
add
add
incl
add
jmp
iret
int3
add
arpl
lret
iret
jmp
add
add
call
add
iret
lret
int
add
pop
add
add
int3
pop
rcrl
in
into
add
add
add
add
add
in
jmp
out
int
enter
out
jmp
int3
call
lret
ljmp
call
jmp
in
dec
pop
out
lret
shr
leave
int3
lret
popa
add
int
rcrb
mov
add
add
pusha
iret
jmp
leave
lret
into
pusha
out
add
int3
pop
pop
leave
into
into
lret
pop
jmp
ror
out
pop
arpl
into
call
shlb
pop
jmp
out
bound
call
pop
decl
into
lret
out
int3
leave
ljmp
add
add
add
lret
lret
add
mov
add
pop
out
ljmp
add
out
out
pop
leave
out
pop
jmp
int3
out
mov
popa
jmp
jmp
popa
out
pop
leave
pop
enter
pop
pop
pusha
call
add
pop
int3
mov
add
jmp
pop
call
in
pusha
popa
arpl
jmp
mov
out
pop
call
arpl
leave
jmp
pop
int3
dec
shr
mov
add
out
lret
pop
popa
pusha
in
add
popa
arpl
pop
popa
in
lret
lret
mov
in
int3
bound
pop
pop
pop
int3
int3
pop
ljmp
add
out
jmp
pop
rcrl
int3
pop
out
add
shlb
leave
int3
int3
add
jmp
add
add
iret
jmp
int
add
out
out
popa
bound
int3
pop
into
in
lret
out
pusha
pop
int3
add
pop
out
into
call
out
popa
ljmp
in
int
ljmp
add
pop
pop
jmp
out
int3
incl
mov
out
int3
pop
popa
jmp
add
arpl
int
enter
add
mov
add
shll
out
pop
arpl
into
popa
enter
pop
pop
out
add
ror
in
pop
iret
jmp
arpl
into
int
out
leave
out
pop
ror
ror
pop
pop
popa
int3
popa
rcrb
bound
add
bound
add
into
ljmp
pop
pop
out
int
ljmp
pop
ljmp
call
add
arpl
pop
int3
shll
out
into
jmp
enter
out
call
int3
add
mov
add
add
add
int
into
mov
lret
pop
int
jmp
into
lret
out
add
in
in
rcrb
out
shll
int3
pop
shlb
shl
jmp
lret
in
pop
pop
out
arpl
jmp
int3
out
int3
jmp
add
add
ljmp
jmp
pop
int
arpl
out
ljmp
jmp
int3
jmp
jmp
pop
out
add
mov
add
int3
leave
lret
pop
in
leave
int3
in
out
pop
pop
jmp
add
add
iret
out
int3
shr
popa
enter
pop
in
into
rcrl
popa
jmp
enter
add
add
int3
ljmp
in
int3
mov
pusha
in
int
arpl
int3
pop
out
out
pop
add
incl
pop
arpl
out
lret
out
jmp
add
add
into
out
out
in
pop
lret
out
add
pop
popa
into
pop
in
ljmp
pusha
iret
lret
out
jmp
lret
add
mov
add
add
dec
jmp
pop
iret
call
arpl
ror
add
lret
popa
out
ror
pop
ror
jmp
lret
call
add
out
lret
pop
pusha
in
int3
lcall
out
out
mov
int3
add
add
pop
leave
call
pop
add
iret
in
add
leave
out
arpl
add
call
int3
out
pop
int
pop
in
arpl
bound
popa
leave
rcrb
int3
add
jmp
lret
into
lret
pop
add
shr
shl
add
int3
pusha
out
mov
popa
jmp
add
int3
pop
ror
out
popa
pusha
out
int
pop
shlb
pusha
ljmp
leave
int
pop
int3
add
pusha
call
call
shr
out
jmp
leave
in
out
jmp
int3
out
lret
pusha
in
pop
pop
lret
int3
lret
call
add
into
iret
pop
jmp
add
mov
add
ror
ror
in
out
out
pusha
shlb
popa
mov
add
popa
int
pop
shr
shr
out
pusha
jmp
pop
add
dec
add
dec
add
ror
out
ror
iret
int3
enter
add
in
pop
int3
jmp
pusha
pusha
pop
call
popa
pop
pop
pop
popa
out
lret
add
add
pusha
int
call
out
in
arpl
enter
sar
in
lret
pop
lret
pusha
into
out
enter
pop
mov
incl
add
out
out
arpl
out
out
lret
int3
add
add
add
add
pop
iret
pop
pop
out
out
lcall
shlb
arpl
out
add
in
pusha
enter
in
call
pop
enter
ror
shr
jmp
int
pop
out
pop
pop
jmp
into
shl
in
in
jmp
jmp
out
jmp
int
out
pop
pop
int
pusha
int3
iret
jmp
mov
out
out
out
popa
shll
int3
int3
in
pop
in
leave
pop
int
jmp
call
int3
mov
add
mov
iret
popa
iret
iret
add
pop
ror
jmp
iret
ljmp
add
add
out
shr
pop
lret
out
into
pop
add
rcrb
leave
arpl
rcrb
iret
pop
out
add
add
int3
out
out
arpl
popa
arpl
add
out
leave
ljmp
add
int
enter
pusha
int
arpl
pop
add
pop
popa
in
ljmp
add
mov
ljmp
int
add
pop
out
into
popa
call
add
mov
int3
pop
jmp
add
shr
add
in
enter
out
iret
shr
lret
shr
pop
in
add
shr
pop
leave
out
enter
add
call
pop
add
arpl
pusha
in
add
int3
mov
add
pop
out
arpl
lret
pop
lret
into
out
shll
popa
ror
int3
pop
pop
pop
pusha
ljmp
add
jmp
int3
pop
arpl
pop
add
add
add
ljmp
popa
pop
pop
enter
into
lret
ljmp
int
jmp
in
bound
enter
call
and
fmuls
xor
jae
xor
and
cs
aad
loope
xor
mov
and
push
mov
lods
jne
enter
adc
daa
mov
mov
stos
stos
sub
xor
divb
dec
leave
rclb
xlat
in
sub
and
xchg
adc
jg
imul
aad
fwait
insl
or
jl
mov
pop
jne
andl
roll
repnz
xchg
pop
dec
outsb
mov
mov
daa
or
cmp
clc
sbb
add
push
xor
imul
add
js
dec
sub
imul
push
or
inc
jns
shll
xchg
push
jmp
addr16
aas
lock
loope
cmc
enter
lds
xor
fdivr
push
rcll
mov
inc
shll
sbb
mov
lcall
mov
xor
arpl
popa
std
mov
outsl
ss
lcall
les
pop
add
add
mov
inc
sub
nop
loopne
sti
mov
sbb
jge
lea
int3
in
mov
cmp
movsb
sbb
aad
jle
call
lret
xchg
jmp
lods
sub
pop
mov
sarl
fmuls
push
dec
mov
data16
rcll
imul
clc
addb
and
rcll
sbb
cmp
pop
imul
lds
int3
sbb
mov
je
mov
adc
jbe
xchg
and
mov
mov
jmp
sub
loopne
pop
test
aam
fldlg2
test
repz
add
clc
adc
pop
leave
in
and
xlat
pop
int3
sbb
xchg
sbb
shrl
es
sub
test
popf
push
pop
cmpsl
xor
sbb
dec
xchg
mov
lds
fidivs
fisttpll
notl
adc
sbb
cmp
dec
jmp
inc
cmp
xchg
clc
sti
xchg
cmp
mov
sub
call
fmuls
sub
inc
lcall
mov
push
cmp
inc
cmp
fiaddl
inc
jl
call
jo
iret
shrl
mov
fists
inc
dec
andl
js
add
movsl
xchg
mov
rcll
shll
stos
in
leave
loopne
dec
lret
ret
adc
dec
or
insl
orb
xchg
aam
xchg
nop
pop
std
insb
mov
xor
xor
test
fwait
clc
add
into
flds
sub
sahf
pop
sub
add
or
xchg
mov
std
jnp
mov
ljmp
mov
test
lods
jmp
sub
dec
lcallw
cmp
stc
icebp
adcb
pop
pop
rep
ret
inc
arpl
addr16
dec
sub
adc
xchg
jge
adc
aaa
mov
test
decb
pop
sbbb
cmc
sbb
lret
stc
cmp
mov
loop
sub
pop
je
xchg
or
xor
jmp
xchg
call
js
xchg
jbe
fstpt
sbb
out
nop
cmp
sarl
hlt
xor
test
addr16
push
cmp
stc
mov
ret
or
jmp
and
and
jmp
pop
add
repnz
clc
test
adc
popf
pop
xchg
lock
pop
mov
jecxz
add
bound
mov
cmp
xchg
cmp
add
mov
mov
dec
sbb
push
mov
and
and
in
mov
jno
fsub
adc
mov
fnstenv
cmpsb
sti
out
push
sbb
mov
fs
mull
cmp
or
cmp
outsl
add
mov
daa
roll
push
push
jg
dec
das
inc
pop
push
cwtl
mov
iret
insb
mov
inc
fs
xchg
jecxz
push
aam
scas
loope
iret
push
scas
int
jg
inc
mov
or
fs
push
adcb
aas
sahf
sti
test
mov
cmp
xor
sub
push
mov
cmp
iret
mov
sbb
jge
push
push
out
xchg
xlat
sub
mov
movsl
rcrl
mov
addr16
mov
sbb
movsl
mov
aas
loope
repnz
dec
leave
std
fs
mov
ret
testb
xchg
sti
inc
aad
popa
insb
gs
jo
xor
push
mov
repnz
test
xor
repz
clc
jmp
stos
mov
rclb
inc
push
insb
sbb
pop
adc
xchg
pop
mov
mov
mov
rol
fldenv
sbb
les
movsl
call
xchg
pusha
inc
inc
in
adc
mov
iret
xor
sahf
push
add
leave
mov
sub
sub
sbb
cmc
sahf
add
sbb
xor
or
mov
cmp
push
push
movsb
in
aas
sub
xchg
aas
clc
or
pop
loope
sarb
je
xor
test
dec
out
pop
jbe
xor
pop
and
in
out
adcb
lcall
pop
aas
pop
pop
xorb
lods
out
xchg
mov
add
pop
cld
sahf
dec
mov
inc
sahf
cld
sarb
pusha
jnp
xorb
je
inc
sti
or
mov
stos
jp
imul
pop
jnp
aaa
push
jecxz
repz
mov
dec
mov
in
xchg
or
pop
sbb
cli
loope
sbb
fildll
pushf
lcall
ret
bound
mov
mov
jb
mov
pop
bound
sahf
lea
lods
xor
xlat
jns
clc
imul
push
ret
fwait
dec
into
mov
into
inc
mov
leave
fidivl
imul
xor
push
pop
das
jns
lods
jne
subb
cltd
fsub
and
mov
into
push
nop
push
imul
push
fadd
shll
mov
pop
nop
les
fisubs
inc
push
sub
pusha
sub
fldenv
shrb
add
push
jno
inc
imul
fisubrs
jg
add
mov
scas
add
sub
pop
test
outsb
or
jmp
add
mov
xchg
push
outsb
fcmovbe
das
rclb
fs
aas
pop
pusha
inc
adc
jne
pusha
sub
aaa
mov
outsl
int3
imul
cmp
hlt
scas
mulb
cwtl
mov
rorb
xor
scas
mull
xchg
jp
jp
lods
dec
mov
jg
inc
mov
jo
or
test
xchg
inc
mov
mov
mov
push
push
cli
rcll
jo
push
mov
subl
and
mov
sbb
out
popf
mov
aaa
rcr
pop
cmp
dec
lcallw
mov
ja
jp
dec
lret
repz
shlb
sub
lock
sbb
mov
inc
aaa
mov
lds
or
mov
jmp
clc
pop
jbe
nop
pop
xchg
push
cld
sti
cvtpi2ps
ja
xor
gs
and
inc
push
mov
hlt
fisttps
dec
add
test
mov
subl
or
sub
fidivs
mov
out
and
push
notl
leave
ja
pop
in
sbbl
sub
pop
aaa
repz
ret
jae
mov
push
pop
mov
dec
sbb
popf
pop
xchg
push
sub
sub
push
mov
les
xor
push
ljmp
in
lods
push
push
lcall
mull
pop
sub
sarl
mov
mov
scas
test
nop
lods
xor
mov
dec
ret
mov
push
add
imul
inc
testb
cli
xor
pop
push
jbe
fmuls
clc
rol
into
sbb
lret
das
ret
lods
jp
clc
out
nop
fsts
insl
dec
ss
inc
sbb
loopne
mov
jnp
andl
mov
sbb
out
xor
in
xchg
mov
je
sarl
adc
xchg
lahf
dec
sub
in
sub
gs
dec
iret
push
cmp
aad
cmp
test
shlb
sbb
out
sub
loopne
pop
movsl
mov
aaa
pop
sbb
cmpsb
imul
jbe
ja
lea
test
sti
pop
or
mov
pop
mov
dec
outsl
daa
pop
cmp
pop
insb
dec
ret
std
adc
push
push
mov
xor
pushf
cmp
xorb
loope
jb
mov
out
or
testb
inc
and
cmp
and
jmp
daa
cwtl
pop
movsb
push
in
icebp
xchg
push
fwait
jl
cmc
addb
pop
pop
in
mov
xchg
push
add
or
ja
mov
inc
mov
stos
arpl
or
lahf
jmp
lods
js
jo
imul
inc
loopne
push
nop
pmulhw
and
xorb
xchg
cli
or
nop
xor
pop
iret
sub
std
push
in
shr
sbb
test
and
punpcklwd
cmpsb
mov
adc
xchg
push
push
sub
push
xchg
js
push
push
dec
dec
mov
aam
cld
negl
fcmovbe
pop
out
lahf
push
outsl
pop
inc
mov
xor
jbe
push
imul
mov
dec
or
cmpsb
ja
int3
sbbl
pop
rolb
clc
mov
cmp
imul
lret
jne
lret
pop
orb
lcall
repz
mov
cltd
lcall
jne
mov
mov
sbb
mov
mov
inc
enter
inc
mov
jne
fdivrl
js
adc
cmpsl
mov
or
xor
dec
cmp
iret
dec
add
inc
lea
ror
stos
loope
and
lods
pop
adc
test
stc
cmp
mov
jle
stos
fidivs
jmp
pop
lret
or
push
gs
xchg
dec
dec
repz
xchg
out
mov
aas
les
add
clc
out
dec
inc
jb
outsl
pop
and
xchg
jecxz
adc
and
xor
pop
decl
sarb
jg
scas
mov
cmp
cmc
adc
inc
mov
jmp
mov
xlat
out
mov
int3
cli
icebp
insl
hlt
pop
sti
mov
inc
cmc
loop
shll
out
ret
scas
mov
scas
cmpsl
addr16
lea
ror
faddl
call
into
dec
roll
rcrl
xchg
mov
dec
ljmp
add
insb
fwait
push
cld
iret
sbb
adc
mov
aam
or
dec
push
sbb
and
push
or
lock
adc
sbb
std
dec
not
imul
xor
lcall
fadds
addr16
xchg
add
fimull
iret
lods
xchg
sysexit
mov
nop
dec
sub
sbb
mov
or
mov
push
jne
nop
xchg
cmp
lahf
pop
add
adcb
js
out
sub
inc
dec
lret
xchg
mov
testb
xchg
mov
push
aas
stos
inc
addb
mov
scas
loop
or
inc
insl
or
shl
test
lea
pop
jg
fs
loop
and
pop
rclb
dec
in
mov
adc
int
fisubrs
scas
imul
pop
jge
push
pop
test
lret
fwait
call
or
add
push
mov
pop
in
or
dec
sub
sbb
aas
sub
jmp
repz
pminsw
test
in
jae
jmp
push
scas
xchg
ss
faddl
js
icebp
rcr
pusha
pop
pop
or
jl
popf
ss
icebp
popa
insl
push
pop
mov
fcmovnb
cmpsl
je
inc
mulb
rcll
xchg
pop
sahf
lahf
rcrb
cmp
hlt
mov
inc
adc
xchg
scas
orb
aas
sbb
pop
mov
mov
popa
push
icebp
adc
pop
sbb
popa
xchg
pusha
sbb
dec
shlb
ficoml
mov
cmp
lahf
xlat
or
inc
ret
dec
in
in
pop
hlt
shll
pop
ds
pop
aas
inc
js
mov
pop
xchg
push
ja
xchg
inc
adc
movsb
outsb
cmpsb
mov
xchg
movsl
add
xchg
jb
mov
lcall
xchg
mov
sbb
xor
add
jae
es
push
jae
mov
mov
jge
inc
call
add
dec
cwtl
jb
jg
fistps
jg
adc
std
fists
stc
mov
jae
or
pop
in
dec
mov
test
bound
jl
in
xchg
addr16
gs
push
mov
mov
ja
enter
dec
insl
enter
cmp
mov
rorb
movsl
mov
ljmp
pop
xchg
int
mov
pop
arpl
aam
popl
addr16
mulb
mov
xor
aad
stc
divl
test
jle
sbb
sub
pop
cli
mov
cmpsl
mov
or
fsts
lahf
daa
sub
mov
stos
sub
adc
addr16
test
mov
inc
int
add
enter
lds
ret
stos
jl
insb
shlb
jno
fsts
sub
hlt
jecxz
out
mov
or
xchg
seta
and
sub
jge
lcall
repz
scas
mov
inc
je
push
cmp
dec
lcall
mov
xor
ljmp
stos
repz
iret
push
out
hlt
jne
int
cld
and
decb
lods
std
sbb
mov
push
mov
imul
in
mov
loop
imul
iret
push
and
fs
jl
aad
lahf
and
test
and
add
mov
sbb
pop
fidivl
jg
fsubrp
test
xchg
pop
mov
mov
imul
push
popf
repz
jbe
jl
sub
xor
lahf
into
push
lcall
cmpsb
test
sub
push
and
bound
jmp
add
and
xchg
test
pop
xor
lock
cmc
pop
cmp
xchg
repnz
or
fisttpl
out
xchg
or
pop
inc
mov
dec
stos
bound
imul
jae
pop
mov
scas
movb
mov
add
push
jg
std
inc
daa
xor
enter
aaa
sahf
inc
rolb
es
cmp
mov
xchg
rolb
sarl
inc
aad
xchg
jne
repnz
cwtl
int
or
test
adc
fisubl
out
pop
adc
ljmp
pushf
stos
cmpsb
sbb
out
imul
in
fwait
incl
filds
stos
mov
movsl
pop
lock
es
jne
fsub
stos
divb
add
mov
jb
adc
test
mov
or
popf
push
jmp
int3
jns
loope
sti
mov
pop
out
push
pop
or
push
lds
adc
push
and
hlt
cmc
iret
cmpsb
fcoms
test
push
mov
sbb
bound
inc
rorb
hlt
pop
dec
cmpb
mov
jae
loopne
pop
out
loope
mov
sbb
mov
mov
je
sbb
fwait
stc
mov
scas
fdivl
sub
mov
pop
rcll
cmp
mov
aas
add
addr16
sbb
sub
cmp
xchg
lret
adc
mov
mov
push
inc
call
mov
iret
pop
mov
arpl
adc
mov
clc
outsl
add
sti
lret
or
cmc
push
sbb
enter
pop
pop
cld
outsl
fwait
push
out
xchg
shll
in
or
arpl
cmp
adc
lret
int
push
into
cmp
test
mov
andl
xchg
or
cmp
fisubl
sub
push
add
cwtl
dec
mov
jbe
inc
jl
aas
xchg
inc
mov
sbb
adc
scas
arpl
jmp
test
pop
jmp
lret
pop
pop
data16
popa
addr16
gs
mov
call
scas
repnz
daa
mov
insb
ud0
pop
adc
xor
xchg
push
in
negl
push
pushf
mov
and
les
cmpsl
inc
mov
and
and
lret
loopne
pop
jecxz
inc
dec
pop
mov
fiadds
xor
stos
les
xchg
ja
jp
scas
shlb
pop
adc
icebp
iret
mov
cmp
add
mov
add
push
loope
jb
push
sub
sub
cmp
in
clc
and
cmp
scas
les
fisubrs
rorb
inc
int
fs
adc
jecxz
popa
ret
xchg
adc
add
sarl
sahf
push
pop
mov
pop
mull
aam
das
inc
into
jo
mov
pop
insb
shr
mov
jb
cmpsl
rol
stos
jp
test
pop
stos
into
ss
sti
push
movsb
xor
jns
into
jae
xchg
cltd
mov
pop
std
xchg
pop
int
inc
and
pop
cmp
leave
mov
dec
inc
stos
std
out
add
imul
pop
dec
add
fnsave
jns
add
into
icebp
push
xor
in
cmpsl
cmp
dec
lods
sub
push
ja
int
push
sub
sub
xor
pop
xor
paddq
dec
rclb
loop
cld
aaa
adc
mov
nop
cwtl
pop
bound
push
out
lret
int
lret
adc
in
mov
mov
mov
push
mov
pop
in
sub
aas
inc
iret
adc
inc
ja
pop
pop
nop
cmc
adc
inc
jl
xchg
cmpsl
pop
ret
xchg
imul
aas
and
movsb
xor
inc
inc
and
pop
aad
inc
rorb
inc
orb
sahf
call
fldl
iret
mov
mov
je
mov
sbb
aaa
inc
sahf
dec
outsl
outsl
push
in
popa
mov
in
add
mov
adc
xor
movl
pushf
outsl
stos
cmc
jl,pn
adc
rcrl
pop
inc
fcomps
fbstp
cmp
aam
insb
int3
cmpsl
aad
adc
inc
mov
pop
inc
clc
push
pop
jb
pop
mull
mov
addr16
and
push
adc
loopne
cmp
scas
roll
popf
aad
insb
push
push
test
or
adc
loop
push
pop
jae
dec
mov
and
outsb
jg
jmp
xor
fcoms
aam
push
imul
xor
add
imul
push
in
add
pop
popf
insb
in
xchg
xchg
dec
cmpsl
cld
shld
jbe
jno
dec
shl
in
sbb
or
dec
xor
xchg
divl
cmp
daa
dec
pusha
mov
push
addr16
enter
fistpll
inc
stos
adc
movsl
push
add
xor
cmp
cmp
dec
jo
test
cmp
xor
pop
jmp
sbb
in
gs
loopne
xchg
imul
loopne
cld
cli
jmp
fs
cmp
jmp
adc
mov
popf
daa
xchg
test
in
sbb
lahf
addr16
int3
mov
pop
sub
adc
adc
cmpsb
adc
and
sti
mov
rcrb
cmpsb
popa
cmp
test
popa
insl
and
jbe
sahf
insl
sub
or
sarl
cmpsb
movsl
add
add
push
xchg
mov
mov
cwtl
lcall
xchg
test
or
xchg
adc
cmp
out
call
xor
pop
int3
into
mov
je
aas
loope
ds
adc
jae
or
xchg
fdivrs
aad
and
test
inc
push
cltd
sbb
lret
iret
or
xor
cmp
pushf
push
xor
and
in
test
outsb
bound
fldcw
dec
out
jo
cmp
subb
bound
lds
dec
mov
mov
bound
lahf
and
aam
in
sub
int
das
mov
jle
lretw
push
cmp
insl
push
sub
in
add
sub
jbe
jecxz
stc
pop
jns
insb
cmp
mov
fidivl
inc
fldenv
insl
repnz
jnp
jb
je
sub
add
scas
xlat
stos
adc
dec
lcall
dec
pusha
ljmp
inc
addr16
cld
ficoms
test
mov
ds
mov
inc
or
sbb
push
test
lret
or
adc
ss
in
cmpb
and
cmp
pop
pop
aas
xchg
imul
fists
inc
ficomps
lret
push
enter
movsb
mov
mov
jmp
scas
dec
out
adc
mov
imul
fidivrl
sbb
test
leave
xchg
lret
movsl
fwait
push
jbe
shrb
cmp
mov
adc
in
adc
popf
inc
ja
mov
dec
out
or
test
xchg
mov
and
jno
aad
mov
shll
mov
sbb
in
movsb
adc
sub
scas
mov
mov
aad
sub
test
inc
notb
pop
das
jb
insb
pop
or
inc
in
and
lret
jne
push
pop
fnstsw
inc
dec
lcall
adc
fbld
lret
pushl
and
push
cmp
lahf
jl
lea
inc
add
mov
push
shll
ss
scas
fsubl
les
fs
negb
and
sub
mov
push
pop
cmpsl
popa
xlat
jmp
aad
icebp
out
cld
xor
cmp
push
pushf
jg
mov
out
push
jg
pusha
ss
inc
imul
imul
imul
das
cmp
push
ret
adc
shll
mov
dec
inc
inc
jae
and
fwait
inc
fisttpll
test
cmpsl
inc
sub
movl
out
inc
cld
insl
dec
add
cli
imul
jle
inc
sub
ds
push
and
repz
jecxz
sub
mov
xchg
lods
xchg
mov
cwtl
pushl
daa
adc
test
adc
pop
addr16
cltd
sbb
popa
sub
xchg
dec
jns
sbb
imul
or
imul
cli
das
jb
push
pop
jno
shll
out
dec
inc
movsl
imul
insl
cmp
lods
push
jecxz
cli
scas
rcll
inc
pop
xor
aas
test
dec
and
lret
ror
daa
ss
les
cmp
mov
push
push
daa
dec
jecxz
stc
sahf
sahf
xor
fwait
push
lret
dec
pop
arpl
xlat
das
lahf
inc
out
and
jne
sbbl
mov
aam
cmp
daa
mov
aam
movsb
and
push
or
cmp
push
mov
test
sbb
sub
shlb
movsl
movsl
fimuls
mov
faddl
fwait
push
xor
jg
pop
std
inc
fs
jmp
pop
and
lock
fwait
mov
jp
sti
cmpsl
cmp
inc
popf
pop
push
test
pop
popa
lahf
fadds
ljmp
leave
pop
lret
push
or
mov
stos
lret
cmp
enterw
or
mov
sti
js
lret
xor
sbb
mov
push
xor
pop
mov
popl
sahf
ljmp
xor
cmpsb
inc
pop
cmp
nop
mov
imul
iret
ljmp
loop
or
scas
sub
ds
aam
js
in
or
ret
sbb
popf
lock
xchg
mov
fnstenv
das
xchg
scas
cmp
inc
jbe
ret
and
push
das
aas
pop
or
pop
lret
testb
jp
or
gs
aas
mov
cld
fisttps
or
sub
push
repnz
fimuls
lcall
mov
fisttps
nop
jg
imul
les
dec
shll
xlat
out
incb
pop
xchg
lret
add
inc
add
dec
lods
popf
aad
loope
into
xchg
jbe
jle
test
push
das
push
cmp
sbb
dec
xor
loop
js
mov
aaa
movsb
sub
push
pushf
xchg
mov
jle
adc
sbb
pop
dec
test
cmp
popa
inc
jecxz
adc
fs
inc
xchg
and
lcall
movsb
sub
inc
lea
and
sub
xchg
push
dec
repz
add
enter
jecxz
pop
vpsubq
mov
daa
jo
int
lods
mov
int3
idivb
pop
pop
or
rep
mov
cmpsb
push
clc
cmc
in
rclb
stc
ficompl
scas
and
outsb
dec
xchg
into
fisubs
in
scas
scas
rclb
inc
test
xchg
sbbl
je
mov
mov
cmp
xor
test
add
push
push
lret
insb
xor
push
insb
adc
xor
adcb
test
xchg
test
sbb
fadds
repnz
cmp
je
insb
aam
enter
in
add
cwtl
addl
fwait
pop
dec
sub
shll
sahf
rorl
add
fsubs
mov
dec
sbb
inc
cmp
xchg
inc
xchg
je
jne
push
dec
xor
aam
xlat
cwtl
push
sub
aas
shrb
mov
push
mov
mov
into
xchg
adc
stc
ret
jbe
or
fucompp
pop
inc
jge
dec
lea
mov
adc
ljmp
sbb
icebp
mov
jmp
lcall
sbb
int
cmc
mov
xor
inc
xchg
and
orb
mov
hlt
jo
mov
jo
jb
push
pushf
ficompl
mov
es
adc
inc
inc
adcl
fisttpl
mov
leave
imul
jmp
scas
shrl
jae
lcall
pop
jnp
imul
push
jnp
insl
icebp
mov
push
xchg
adc
clc
dec
jge
pushl
sbb
fwait
push
clc
fdivrl
in
push
scas
cmpsb
ja
push
dec
pop
je,pn
nop
data16
pushf
dec
dec
inc
or
loope
or
notl
pop
sub
imul
loope
mov
cmpsb
mov
inc
leave
loopne
ds
into
pop
mov
pop
fadds
mov
sub
popa
pop
rorb
or
in
ljmp
les
repz
rolb
repnz
jmp
add
addr16
sahf
es
push
jno
dec
fwait
sarl
test
mov
mov
pop
and
jo
loopne
sub
sub
cmp
lret
mov
aaa
dec
xor
add
fwait
push
mov
sbb
clc
data16
jmp
cmp
mov
pop
es
iret
ss
mov
cltd
pop
test
xor
mov
ficompl
mov
or
dec
adc
xor
movaps
dec
push
jp
add
mov
scas
test
sub
add
jo
push
pop
or
out
sbb
aad
push
pop
je
lret
push
mov
xchg
jnp
in
fiaddl
cmpsl
push
push
xor
cmpl
subl
inc
lcall
push
xchg
aad
stos
ret
xor
mov
hlt
imull
push
xchg
add
ret
insl
push
scas
sahf
jbe
gs
fldt
bound
dec
icebp
cwtl
ss
xchg
lods
data16
push
decb
clc
xchg
lock
pushf
and
cmp
mov
sub
cmp
jbe
add
jge
mov
mov
xchg
push
and
xchg
add
ret
dec
push
stc
xor
cwtl
and
mov
data16
and
mov
aas
sbb
add
and
xchg
mov
pop
push
loope
cmpsl
insb
mov
adc
mov
adc
and
test
divl
loope
in
out
cmpsl
int3
cld
stos
add
subb
mov
inc
stos
jmp
imul
sbbl
cltd
into
xchg
lds
mov
sti
aad
shl
jbe
mov
leave
lret
sbb
jno
nop
pop
out
mov
bound
push
imul
push
pop
push
jg
aad
gs
iret
movsl
push
adc
in
jl,pt
mov
ficomps
mov
leave
in
pop
xor
les
jno
aaa
xchg
cltd
pop
adc
pop
das
popa
xchg
outsl
sub
adc
jbe
nop
gs
push
and
fmuls
ds
sub
dec
ret
jle
jp
jo
jg
jg
lret
into
mov
mov
lods
das
daa
or
insl
fisubrs
jns
aad
cmp
pushf
nop
arpl
xchg
mov
fldt
xor
stos
scas
cmpb
jne
inc
pop
int3
sti
popa
inc
xor
dec
mov
cmp
mov
inc
add
movsl
aam
imul
pop
inc
out
stos
dec
push
dec
jae
sbb
fisubl
pop
pop
xchg
out
jbe
sbb
hlt
pop
mov
out
push
fcmove
sub
clc
cwtl
push
push
dec
test
nop
cmp
jle
adc
test
lock
inc
loopne
fnstenv
sarl
scas
cpuid
cmp
inc
sbb
xor
jecxz
rcl
sbb
stos
jnp
add
out
or
mov
cmp
push
mov
mov
fwait
jne
lea
lcall
pop
daa
or
xchg
push
push
dec
sub
lahf
push
sub
inc
sbb
ret
jmp
push
daa
aad
in
rcr
mov
mov
in
cmpsb
loopne
lock
bound
mov
lret
push
pop
pop
jne
gs
or
es
ret
xchg
dec
lahf
into
cmp
mov
out
outsl
out
inc
jle
dec
pop
mov
fldcw
mov
sub
outsb
adc
pop
test
ljmp
in
mov
mov
sbb
mov
es
lods
sub
pushf
test
jle
xor
std
xchg
jbe
cmp
lret
push
shll
int3
gs
addl
mov
gs
movsb
inc
xor
dec
xchg
mov
lods
test
mov
aaa
xchg
fidivs
movsl
repnz
add
sub
cmp
lahf
pop
push
movsl
jge
es
push
cmpsl
push
sbb
mov
xor
mov
or
dec
out
int
pop
fucom
loopne
adc
icebp
mov
cltd
es
cmp
mov
mov
jae
inc
das
add
loop
aam
sbb
xor
dec
mov
inc
sub
dec
scas
cltd
jno
popf
fisubs
inc
mov
mov
mov
mov
andl
xor
pop
pop
adcl
pop
fwait
add
pop
fucomp
mov
jo
testb
mov
xor
mov
movsb
mov
in
mov
mov
int
inc
xchg
xor
imull
mov
xchg
inc
push
dec
mov
or
daa
outsl
scas
loopne
and
iret
adc
add
push
mov
fcmovb
jmp
xor
cmpsl
cwtl
cmpsl
data16
shl
add
inc
inc
push
and
cwtl
aaa
out
inc
ja
lret
xor
mov
cmp
jp
mov
mov
fidivl
sub
cmp
add
imul
add
inc
shl
mov
dec
repz
iret
mov
movsb
movsl
and
pop
pop
jns
mov
stos
jecxz
jmp
sbb
mov
shlb
icebp
cmp
jmp
jecxz
inc
mov
cmp
xor
fcomps
imul
out
and
imul
out
call
sub
pop
dec
das
sbb
les
ss
mov
adcb
addr16
lea
push
fst
pop
mov
cs
popf
aas
cmp
rolb
jp
es
fldcw
xchg
ss
stos
jecxz
int
mov
rolb
lahf
xor
mov
pop
outsl
stc
das
sub
and
in
insl
pushf
ret
dec
pushl
popa
loope
push
and
sbb
aas
sbb
dec
xchg
leave
out
xchg
call
out
fisubrs
lea
repnz
ss
xchg
imul
mov
cwtl
mov
cld
xchg
inc
bound
sbb
push
stos
loope
mov
sub
test
jne
lret
sub
xchg
xorb
pop
pop
pop
bound
sub
jl
fsubrs
xor
pop
lahf
inc
inc
das
jle
fadds
ja
jg
addl
mov
lahf
enter
jnp
inc
dec
mov
push
stc
xchg
xor
and
sbb
aaa
shll
inc
pop
mov
cmp
add
in
in
inc
adc
dec
sub
mov
pop
or
and
mov
cli
lcall
push
mov
out
push
pop
pop
jbe
and
movsl
pop
loop
frstor
mov
push
jnp
and
fs
cmp
mov
scas
mov
cwtl
add
xchg
sub
cli
std
or
or
pop
or
mov
mov
fildll
mov
pop
and
inc
dec
mov
mov
andb
lods
jae
je
dec
faddp
push
or
xor
insl
lcall
jno
jge
xchg
mov
cmp
mov
adc
adc
das
xor
out
lcall
sub
out
out
fucomi
in
sub
fbld
mov
cmpsl
mov
dec
clc
loopne
outsb
and
jo
rcrb
lret
dec
push
jne
mov
iret
popf
mov
out
xchg
ss
rorb
xchg
push
and
sub
sub
xchg
fistpll
mull
cmp
rorb
imul
push
in
jnp
adc
ljmp
ja
dec
cmpsl
test
mov
sub
cmp
in
in
pop
in
dec
add
in
imull
int
fcmovnu
adc
bt
cmp
mov
es
push
popf
jl
addr16
fidivl
xchg
lcall
test
push
add
mov
xor
sbb
mov
or
jmp
pop
pop
xchg
lock
inc
rep
scas
xchg
add
sbb
mov
sub
cli
mov
addr16
xor
xchg
push
out
dec
add
lret
daa
mov
xchg
out
andb
fcomps
inc
mov
lods
pop
jp
in
lcall
mov
sbb
xchg
sahf
fistl
push
mov
pop
and
shrb
jmp
lcall
pop
mov
pop
sub
xchg
fnstcw
out
jp
andb
jmp
mov
pop
sub
out
imull
adc
repnz
xor
xor
js
data16
cli
lods
ljmp
or
je
inc
scas
mov
and
aaa
dec
outsl
or
insl
xlat
jnp
scas
mov
loopne
dec
leave
and
rolb
xchg
jbe
loopne
inc
sbbl
pop
jp
icebp
mull
test
add
clc
mov
mov
fiaddl
push
mov
mov
cld
sub
js
in
call
es
cmp
mov
pop
and
xchg
insb
lret
sub
movsl
add
rcrb
mov
push
xchg
and
shll
mov
adc
jb
xor
and
inc
shlb
jne
or
shl
imul
repz
jle
push
iret
jbe
mov
mov
cmc
pop
icebp
stc
jle
cmp
pop
in
fcoms
cmc
cs
inc
mov
xlat
add
testb
adc
insl
inc
leave
pusha
xor
shlb
jne
arpl
mov
pop
xor
fistpl
fistps
pushf
daa
dec
cmp
mov
pusha
and
dec
je
out
int3
repz
aam
adc
sti
daa
out
mov
sbb
inc
mov
or
cmpsb
test
pop
mov
lods
mov
decb
arpl
and
stc
test
stc
push
xor
stos
jp
scas
adc
imul
cmpsb
stc
xor
pop
mov
sbb
data16
lcall
popa
insl
mov
cmp
xor
sub
popa
shll
mov
lret
xchg
pusha
sbb
movsb
dec
jnp
adc
pop
or
shr
pop
sbb
fwait
inc
mov
popa
dec
das
mov
ja
daa
adc
scas
dec
int3
cwtl
das
pop
fnstenv
adc
je
and
push
jns
movsb
xchg
fnstenv
mov
cmpsb
sbb
ljmp
dec
jecxz
add
mov
scas
imul
insl
cmp
jp
adc
pop
lea
lret
lsl
or
xchg
inc
and
inc
adcb
fcmove
pusha
cmc
sbb
idiv
cmp
fwait
mov
and
mov
cld
add
lock
xor
les
cmpsb
jbe
shl
outsb
test
or
int
out
dec
daa
clc
jne
stc
mov
sub
es
data16
in
pop
fimull
sarb
lea
pop
cli
or
push
nop
mov
jne
dec
mov
mov
sahf
cmp
mov
push
int
aad
dec
fucomip
pushf
loop
xchg
or
leave
pop
outsl
xor
or
jne
xlat
jp
movsl
xchg
mov
mov
mov
popf
pop
faddl
or
lods
pop
add
push
jne
dec
xchg
mov
insl
fdivs
cmp
outsb
add
pop
aas
and
scas
cmp
lret
inc
out
jno
sbb
mov
xor
rolb
or
jnp
and
push
inc
mov
cs
or
test
push
popa
dec
jecxz
xlat
inc
inc
jmp
leave
mov
fs
xchg
push
sbb
and
les
daa
lcall
push
jbe
ss
dec
dec
mov
mov
into
xchg
out
fmulp
or
or
ror
in
or
stos
outsb
push
enter
jle
out
mov
push
and
jnp
mov
jae
outsb
add
aam
mov
and
inc
lret
push
push
cmp
test
adc
movsb
arpl
bound
data16
xchg
mov
xor
loopne
push
pop
ds
ljmp
add
dec
add
insl
jl
fbld
push
aas
stos
stos
outsb
dec
das
xchg
outsb
ret
mov
lret
inc
mov
fisubrs
daa
mov
aam
push
adc
mov
sub
mov
clc
dec
subb
stos
in
loope
jne
mov
dec
xorl
ljmp
ret
mov
xor
pop
movsl
lock
xchg
or
outsb
enter
inc
out
aam
cs
inc
outsb
and
cmp
add
scas
in
ret
jg
in
bound
mov
cmp
fisttps
pushf
dec
sbb
dec
das
je
xor
sti
lock
imul
xor
lods
dec
mov
push
cwtl
loope
and
inc
pop
pop
lds
push
inc
fcomps
rcrl
insb
mov
pop
or
xchg
sub
inc
xchg
xchg
outsb
adc
sub
pop
dec
hlt
pop
inc
mov
pop
mov
test
jne
cld
iret
dec
sti
orl
rol
imul
loop
dec
dec
mov
inc
sub
xchg
test
lea
xor
add
dec
xchg
inc
loop
inc
mov
aam
dec
and
shlb
and
mov
idivl
lret
ja
sbb
mov
cmp
inc
xor
ljmp
shl
push
dec
mov
dec
mov
add
dec
lods
mov
adc
pushf
dec
std
add
add
sbb
fdivr
ret
std
or
out
clc
jb
and
mov
or
inc
pop
mov
xlat
mov
cltd
cmp
repz
push
push
out
dec
mov
jge
pop
mov
pushf
ss
popa
fcompl
mov
mov
push
cmp
shrb
leave
push
stos
mov
push
int
xchg
out
push
push
in
jp
test
jg
cs
xchg
mov
ljmp
cmp
lahf
inc
dec
push
and
out
loopne
out
bswap
test
lods
jae
in
mov
fs
dec
adcl
push
sbb
arpl
xor
out
lahf
shr
or
lods
mov
jno
aad
dec
cwtl
sub
cltd
jae
insb
dec
lret
mov
push
bound
dec
fmul
mov
lods
push
lahf
inc
inc
inc
mov
cli
lock
daa
sbb
test
aad
rorl
out
mov
xchg
cmp
movsb
sarl
jge
and
jle
idiv
sbb
cmc
div
mov
xchg
add
push
push
inc
mov
jns
imul
xor
mov
mov
lock
mov
pop
rorb
jno
lcall
sbb
sbb
inc
lods
mov
shlb
add
faddp
jl
out
sti
addb
xor
push
cmp
shr
push
jbe
sbb
repz
pop
sahf
out
dec
imul
sti
arpl
out
stos
lea
sbb
jns
mov
cmp
adc
repnz
fsts
adc
dec
popa
inc
sarb
jbe
aam
push
xor
loope
mov
inc
enter
xchg
pusha
jae
sbb
jge
push
xchg
adc
imul
jno
inc
sbb
mov
cli
je
daa
mov
or
aam
dec
lods
test
push
movq
sbb
scas
sbb
push
jg
jns
js
adc
push
pusha
lea
adc
addr16
cwtl
lret
dec
hlt
pop
pop
mov
mov
outsb
mov
push
imul
cmp
ret
xchg
mov
jge
in
daa
clc
repz
add
mov
and
dec
arpl
cmp
mov
movsl
mov
jle
adc
or
jp
addl
xor
jno
movsl
addr16
xchg
test
loop
pushf
mov
inc
mov
notb
sub
adcl
mov
and
fcmove
hlt
lds
jns
out
xchg
sbb
or
sbb
cmpsb
scas
mov
loope
rorb
call
aas
jns
movsl
push
xor
dec
sahf
xor
icebp
out
jecxz
sub
cmc
mov
iret
push
in
jle
xchg
and
cltd
and
das
mov
push
test
ret
sub
adc
mov
mov
jl
stc
adc
ja
imul
push
rol
or
ror
jae
xchg
lock
dec
inc
lea
fisttps
int
ror
loope
dec
mov
xchg
into
jns
loop
pop
popl
popa
xlat
adc
mov
sbb
mov
cmp
cld
lret
ss
pop
xor
xchg
int3
fistpl
sahf
mov
adc
mov
sub
outsl
inc
mov
ss
aas
shl
mov
lret
inc
cmp
xchg
jae
or
pop
or
jo
enter
add
iret
sub
pop
enter
mov
sbb
into
fucomip
push
add
cmpsl
inc
cld
mov
out
push
test
adc
or
aam
jle
sar
loope
dec
sub
cli
dec
sub
xchg
ss
repz
lods
lods
sbb
jns
dec
mov
into
push
mov
adc
pusha
lds
adc
je
ffree
test
popf
xlat
inc
sarb
in
sub
aas
fwait
jmp
mov
into
cmp
mov
fisubrs
imul
fstl
sar
shr
push
cltd
xchg
mov
stc
adc
cld
shl
xlat
push
hlt
lock
test
cmp
adc
js
xchg
lods
addr16
outsb
jmp
cs
outsb
mov
mov
pop
ss
jnp
repnz
imul
ret
mov
adc
out
jge
push
jae
loopne
lcall
test
inc
inc
push
lcall
loopne
lock
add
dec
fs
enter
orb
in
sbb
sar
dec
push
push
imul
mov
cwtl
imul
adc
or
mov
loope
int3
loope
xchg
scas
xchg
add
mov
jmp
push
out
adc
popa
arpl
cmp
adc
popa
ret
mov
cli
lcall
and
int3
and
mov
fiaddl
les
sbb
int3
cmp
cmpsb
int3
dec
adc
sub
adc
clc
jno
push
aam
mov
call
pop
jmp
iret
sbb
xor
or
stc
stc
in
xchg
adc
mov
into
cmp
lret
test
mov
sub
push
cmp
repz
mov
mov
lret
sbb
out
scas
jle
scas
mov
icebp
out
les
pop
insl
fistpl
std
jmp
or
dec
mov
stos
sarl
fsubl
loopne
lret
loop
mov
push
repz
imul
psrld
sub
jle
std
bound
leave
lret
mov
aas
push
outsb
movsb
stc
das
roll
jnp
outsb
add
lods
push
xchg
stc
jno
rcrb
test
imul
pop
add
jmp
xor
insb
mov
test
add
enter
jecxz
sbb
lret
lds
cmpsb
clc
pop
test
ja
fwait
cwtl
popl
push
dec
inc
aam
xchg
jnp
and
cs
out
arpl
loope
sbb
jb
fisubrl
mov
aaa
hlt
jecxz
add
sub
ss
popf
mov
aam
lock
add
cwtl
das
jno
loopne
add
sarb
mov
mov
sha256msg2
sbb
jg
leave
cmp
stc
test
mov
xor
mov
xchg
fbld
rcll
cmpsb
mov
repz
test
test
mov
jne
pop
xchg
adc
cmp
lahf
push
dec
jl
mov
andb
mov
mov
fs
mov
xchg
sbb
cmpsl
test
das
stc
jno
mov
in
dec
mov
mov
test
leave
cmp
add
xchg
adc
test
mov
movsl
and
fs
outsl
pushf
pop
sahf
mov
sub
sarl
test
pop
repnz
mov
test
xchg
aad
jnp
in
mov
outsb
hlt
int3
lret
push
out
icebp
mov
xor
sub
int3
aaa
push
adc
cmpsl
daa
adc
das
mov
dec
icebp
jmp
lret
jmp
movsl
cmp
sti
lods
or
movsb
sahf
and
mov
xchg
ret
pop
add
fs
mov
mov
xchg
sbb
pop
add
adc
loop
dec
or
std
xchg
mov
repnz
inc
mov
pushf
into
cli
or
dec
out
das
aad
add
ror
shl
mov
fstpt
mov
adc
adc
cs
mov
cmp
push
rolb
scas
movsl
je
mov
cmp
mov
push
push
sub
mov
mov
cltd
ficoml
push
int3
mov
andl
dec
cmp
js
shll
ds
cmc
sbb
mov
fisttps
lret
and
js
pop
bound
xchg
pop
gs
pop
cwtl
flds
xchg
xchg
jne
xor
imul
mov
push
bound
mov
dec
add
push
out
addr16
adc
lods
xor
ds
xchg
negl
aam
jnp
cld
xor
or
js
cltd
call
in
sahf
fldl
add
xchg
mov
movsb
xchg
pop
scas
int
sbb
pushf
out
fistpl
inc
cmp
xchg
push
xchg
shlb
dec
or
mov
xorl
pop
and
dec
mov
popf
repnz
xchg
mov
cli
jmp
test
mov
and
xchg
mov
dec
pop
mov
das
aaa
andb
pop
xchg
dec
imul
adc
stc
jcxz
jle
adc
rcrb
jno
jg
mov
es
movsb
jecxz
pop
fstpl
mov
nop
loopne
dec
jo
sahf
mov
add
xchg
xchg
negl
pop
outsl
cmp
or
sbb
mov
ds
add
aam
filds
xchg
mov
je
bound
aaa
fistpl
inc
xchg
and
fisttps
xchg
push
mov
test
xchg
cmc
dec
mov
es
shl
out
cmp
mov
je
out
jo
xor
sub
scas
dec
je
inc
sti
dec
push
negl
mov
xor
mov
xchg
movsl
insb
or
imul
mov
push
pop
in
push
pop
mov
test
outsl
mov
xor
or
mov
xchg
and
and
mov
and
sub
xchg
idivb
xchg
outsb
xchg
es
aad
cmp
mov
mov
inc
es
mov
push
or
sahf
xchg
ljmp
or
test
aas
cmp
cli
rep
mov
mov
push
test
std
cltd
cmp
subb
pop
shlb
scas
mov
pusha
xlat
adc
xor
mov
jmp
inc
jp
sub
popa
sbb
sbb
xchg
mov
mov
pushf
loope
les
iret
sbb
pop
push
jg
jnp
cwtl
inc
repnz
jno
mov
dec
push
push
xchg
lds
loopne
jnp
iret
out
out
jl
call
and
push
sarb
scas
sub
in
aam
stc
lods
xchg
xchg
pop
iret
fwait
jg
mov
and
arpl
push
xchg
into
dec
aam
sbb
adc
in
gs
sarl
add
or
add
add
sbb
push
mov
jo
xlat
in
xchg
jp
cmp
adc
out
jno
outsl
test
xchg
jge
imul
jb
pop
pushf
out
sarl
les
cmp
jge
in
xor
pusha
out
sub
pop
cmp
adc
or
xlat
mov
rorl
dec
lock
sub
xor
shl
push
adc
test
cmpsb
sar
mov
lahf
into
add
sahf
sbb
fsubs
xchg
fistl
std
jo
push
outsb
jecxz
push
dec
mov
sub
test
mov
cmpsb
or
stos
lret
psrld
cmp
jge
add
pop
rorb
jl
lods
or
add
push
pop
mov
sub
in
rcrl
lock
sarl
and
xchg
sbb
and
jo
popf
or
adc
or
jnp
mov
xor
out
out
xchg
push
out
xchg
insl
adc
dec
push
push
push
ret
jnp
stos
sbbb
dec
jmp
and
jae
sbb
sti
in
je
js
jne
sbb
adc
adc
mov
pop
sub
sbb
fidivs
mov
movsb
in
pop
cltd
pop
cld
mov
popa
push
stc
pop
mov
mov
push
stos
sub
sbb
cmp
mov
cmp
xchg
add
mov
and
fistps
cmpsb
mov
test
je
loop
dec
xchg
fdivl
mov
sub
jg
mov
test
inc
xchg
fidivl
test
pop
test
clc
out
out
iret
add
iret
shll
cmp
xchg
cmpsb
rorb
or
ret
lcall
jnp
mov
rcl
jnp
jp
scas
stos
sub
rcrb
int
cmp
sbb
jle
xchg
jno
idivl
fildll
mov
pop
jp
pop
cmp
ja
test
fdivs
xchg
inc
xchg
adc
stos
adc
jns
aad
hlt
dec
int
add
xor
inc
es
lret
dec
mov
adc
lock
sub
lret
fs
aaa
cwtl
clc
jne
jno
cltd
pop
pop
push
loop
js,pn
push
sbb
adc
mov
insl
dec
repz
inc
test
pop
dec
push
adc
mov
sub
ljmp
xor
paddb
xor
das
int
repz
xchg
cmp
cmc
xchg
ret
fstl
mov
inc
ljmp
rcr
push
xorb
xchg
test
das
fwait
roll
adc
add
xchg
andl
and
popa
dec
adc
lret
fisubl
mov
lock
mov
sbb
xchg
xor
imul
xchg
enter
mov
jg
dec
mov
mov
and
mov
fucom
in
mov
pop
call
sbb
jne
test
mov
jnp
lahf
stc
push
enter
sti
pushw
cmp
xchg
and
jmp
stc
cmp
repnz
fwait
imul
sti
int3
adc
test
push
push
inc
shll
cmpsl
xor
aam
cmp
xchg
aad
lods
sbb
iret
js
ja
jg
push
fsubl
lret
sahf
movsl
test
sbb
in
movsl
lods
imul
push
xor
push
mov
push
sbb
sar
jnp
add
jmp
lods
mov
enter
adc
and
pop
xchg
and
jmp
sub
loop
movsb
mov
push
ret
mov
inc
pop
clc
daa
loope
jmp
cmp
in
sti
test
fdivs
sbb
inc
push
outsb
or
daa
js
jg
arpl
sub
daa
mov
int
mov
aad
mov
push
rolb
in
in
icebp
or
pop
mov
pop
fwait
sub
sub
out
xchg
cmp
inc
pop
inc
mov
or
daa
std
stos
lods
mov
xchg
fdivr
mov
lds
pop
mov
sub
out
iret
arpl
lahf
cmp
aas
and
scas
cli
dec
mov
jecxz
scas
hlt
mov
nopl
dec
push
test
cltd
add
or
or
mov
dec
lods
jl
xor
pusha
push
or
test
sbb
pusha
int3
mov
shr
sahf
xchg
pop
jmp
and
popf
iret
xchg
add
mov
jo
pop
mov
icebp
pop
sbb
and
popf
cmpb
mov
xor
fdiv
mov
xor
inc
mov
and
cltd
daa
and
sub
xchg
imull
shlb
das
dec
fsubr
add
iret
in
lret
loop
inc
push
iret
clc
cs
fwait
lcall
sub
mov
scas
fimuls
fldenv
push
lea
adc
adc
sub
mov
jae
sub
mov
addr16
imul
mov
cmc
jne
jns
mov
repz
xchg
outsl
sbb
test
hlt
fisttpll
mov
ja
int
repz
or
xorl
cmpsl
insb
pop
in
dec
dec
adc
lock
jecxz
cmc
cmpsl
sub
shlb
out
mov
mov
cmp
bound
decb
in
lret
scas
xchg
addr16
sbb
sub
test
jbe
xor
xchg
xchg
rolb
pop
in
stos
push
sarb
mov
xor
je
inc
mov
xor
sbb
out
jb
stos
xor
popf
into
jno
push
mov
enter
and
lret
cmp
out
loop
es
hlt
clc
pop
pop
mov
mov
mov
popa
icebp
aad
testb
outsl
arpl
jno
xor
xchg
dec
insb
pop
mov
fimuls
mov
dec
std
mov
pop
shlb
lret
jecxz
cmp
sarl
rcrb
imul
mov
push
jle
test
mov
inc
dec
movsl
cmc
adc
inc
cli
xorl
int
fs
les
es
mov
stc
sub
xor
loop
out
test
xchg
addb
jb
insb
cld
mov
je
push
add
xchg
out
sub
es
xor
ja
in
push
xchg
out
stos
dec
popf
mov
in
mov
jmp
mov
jmp
fcompl
mov
mov
inc
xchg
push
cli
jae
xor
xchg
cmpsl
sahf
or
cmpb
add
out
jbe
hlt
jo
push
xor
mov
mov
cmc
and
sarb
ret
inc
sub
movsl
divb
fimuls
mov
sub
jo
lcall
sub
pop
xor
xchg
arpl
dec
inc
ret
pop
or
inc
jp
add
or
cmc
pop
repnz
cmpsb
in
or
cmpsl
test
js
andb
lea
xor
into
cmp
and
or
subb
jbe
mov
jo
addb
push
pushw
jp
jo
in
sub
out
outsl
inc
mov
je
daa
pop
dec
jmp
and
repnz
dec
push
push
ss
fbld
sbb
lahf
inc
icebp
xlat
clc
xor
add
xchg
mov
gs
int
iret
mov
out
imul
adc
mov
cmpsb
std
rcrb
xchg
popf
jle
and
pushf
stos
dec
stos
ljmp
mov
lahf
mov
xchg
mov
movsb
adc
sub
std
into
pop
sub
or
mov
mov
lcall
jns
xchg
pop
mov
scas
xor
insl
inc
fistl
lds
xchg
das
jae
push
cmp
les
dec
andl
fidivrl
add
cmp
popf
jmp
pusha
fmuls
inc
inc
xchg
inc
cmp
adc
movb
fcompl
mov
sbb
mov
stc
mov
sub
sub
andl
sub
pop
jbe
inc
or
movsb
cmpsb
data16
mov
push
jb
mov
ds
mov
add
imul
sbb
push
sbb
stos
pop
data16
pusha
in
mov
jnp
insb
js
div
mov
rorb
cmp
sub
jg
mov
aam
clc
mov
fs
xor
dec
outsl
pop
rcr
dec
inc
inc
push
repnz
imul
adc
fmul
idivb
jmp
and
jo
cmpsb
xor
jmp
mov
lods
ds
insl
loope
aas
or
dec
dec
sahf
lds
movsb
pop
pop
pop
or
sub
pop
insb
push
mov
jo
fstl
pop
push
stos
outsl
sub
testb
mov
daa
std
lahf
fcompl
test
arpl
mov
pop
stos
outsl
aad
enter
push
jecxz
ud0
add
jecxz
add
lret
push
inc
not
cmp
xchg
das
push
mov
sub
add
mov
gs
xchg
sbb
lea
in
test
popl
xor
cmp
xor
cmp
mov
sbb
dec
popa
jae
mov
loope
adc
mov
test
push
pop
movsl
test
xchg
es
mov
fmuls
cmpsb
jnp
mov
xor
sbb
jnp
roll
cmc
push
and
or
iret
sub
scas
push
in
cmpl
jo
sbb
daa
jae
out
push
repz
mov
loope
ds
popf
lahf
lock
adc
sbb
out
xchg
scas
cmc
data16
icebp
jo
les
ss
mov
lcall
pop
push
rcll
outsb
xchg
in
or
mov
cwtl
mov
adc
arpl
popa
rcrl
scas
sbbb
enter
in
jae
inc
pop
jbe
in
add
add
test
cmp
add
sbb
clc
or
repz
out
dec
sahf
stc
jno
jae
lea
shlb
xchg
sti
pop
gs
xor
mov
orl
or
jo
aam
cmpsl
shr
push
mov
mov
lahf
imul
and
dec
dec
sbb
bound
mov
add
ret
insl
mov
inc
lods
cmp
clc
es
dec
xchg
bound
adc
mulb
into
inc
sbb
or
pop
outsb
lahf
stos
idiv
sub
scas
adc
mov
out
fdiv
fwait
mov
movsl
sub
stos
xor
cld
pop
pusha
or
sti
out
mov
out
outsl
fmul
test
jne
addr16
jns
or
sub
jne
xchg
sbbb
xchg
popa
and
xchg
enter
ret
sbb
stc
scas
dec
jmp
mov
mov
out
mov
daa
insb
xchg
xchg
jb
adc
adc
daa
xor
xchg
mov
mov
cmp
nop
jno
sti
mov
jae
loope
fdivrp
xchg
cmp
hlt
push
mov
cs
jnp
push
scas
and
mov
pop
or
out
xchg
iret
pop
iret
popf
int
lahf
fnstenv
test
or
push
repnz
adc
fmull
dec
xlat
mov
shl
out
jmp
pushl
push
xor
mov
in
popf
mov
clc
movsl
dec
lock
pop
xchg
je
fdivrl
lds
mov
lret
ficoms
clc
vorps
lds
cmpsb
add
sti
jo
xchg
adc
test
aaa
leave
xor
jecxz
and
ret
pop
push
add
mov
xchg
pushf
adc
mov
test
dec
repnz
mov
inc
xlat
sub
pop
cmpb
sub
push
mov
cld
cmp
mov
shl
sbb
mov
das
rclb
or
mov
dec
jo
dec
jecxz
cmpsl
imul
fstpt
shrl
sub
clc
pop
int
pop
test
je
daa
insl
fwait
xchg
test
ror
rorl
popf
jae
loope
int3
ficoml
adc
into
mov
mov
mov
ss
je
sahf
mov
mov
cmpsl
push
dec
int3
and
xchg
push
fwait
mov
pop
push
xor
mov
xor
fcmovnbe
int3
ret
cmp
test
icebp
or
push
loope
fists
shr
arpl
out
hlt
dec
add
lods
pop
sbb
or
sub
sbb
cli
cltd
dec
ds
push
push
cmc
adc
imul
xchg
mov
sbb
sar
adc
out
jb
pop
test
leave
push
and
icebp
fstpl
fldl
cmp
and
adc
or
pusha
sbb
pop
aam
loopne
mov
pop
aad
negl
push
adc
mov
andb
out
test
mov
fst
cli
dec
out
pop
fwait
out
std
pop
jge
xor
adc
jo
aad
xor
jno
jl
icebp
ret
mov
dec
lahf
addb
jge
push
add
mov
scas
gs
xorl
xor
ja
repz
jmp
jge
sub
repnz
mov
data16
pop
je
in
stos
sub
outsb
hlt
or
cld
or
and
sub
movsl
dec
xor
jmp
stc
mov
aas
pop
fldt
daa
ss
in
faddl
push
dec
pop
jae
insl
add
sub
dec
mov
jb
dec
xchg
adc
pop
fs
xchg
mov
enter
lods
jae
popf
aas
push
inc
mov
mov
push
stc
out
inc
pop
mov
mov
out
shr
sub
nop
sub
xchg
pop
cmpsb
jp
insb
sub
dec
daa
xlat
mov
fnsave
aad
adc
or
pushf
ds
daa
mov
jg
xchg
cwtd
adc
cmpl
xchg
and
lock
jle
or
lods
loope
leave
mov
mov
jns
repz
out
fnstcw
push
ljmp
pop
mov
in
mov
in
mov
pushf
int
les
sbb
mov
cs
dec
cld
or
inc
imul
and
movsl
xchg
cmp
ret
pop
fcoms
in
aad
jnp
scas
adc
jl
aad
or
and
out
ret
je
rcl
dec
in
nop
and
jmp
lds
xchg
push
int
mov
ret
and
inc
jecxz
xor
push
push
adc
rolb
lea
mov
es
sbb
loop
xchg
push
fcoml
lea
mov
fsubp
pop
xchg
xor
movsl
add
sbb
mov
int
sbb
imul
mov
test
lahf
aas
dec
jge
inc
leave
enter
pushl
lock
loopne
or
mov
into
or
int3
mov
es
push
int
pop
dec
mov
into
mov
mov
les
icebp
popf
stos
ret
add
rolb
jp
adc
outsl
xlat
jmp
xchg
pop
jmp
cmc
pop
fsubr
cmc
push
outsb
push
shrl
mov
aas
xchg
insl
or
sub
fldt
mov
mov
sbb
in
jno
stc
daa
dec
in
pop
cmp
xchg
lds
pop
sub
iret
movsb
xchg
scas
mov
push
pop
lcall
out
dec
outsb
loop
add
jbe
mov
ret
loope
arpl
adc
pop
icebp
lret
mov
and
sub
movsb
movl
daa
bound
mov
pop
pop
cmpsl
dec
pop
imul
or
adc
and
xor
sub
addr16
jecxz
mov
aas
pop
or
div
jecxz
inc
movsb
push
insb
ret
cli
xlat
sbb
lret
dec
outsb
xor
aas
repz
pop
movsb
dec
push
xor
outsl
inc
cltd
test
nop
scas
mov
add
and
adc
sbb
mov
jns
push
xor
ret
test
test
push
arpl
xchg
out
pop
leave
movl
mov
xchg
dec
pop
lods
aaa
pop
jne
add
shr
addr16
repnz
roll
cmc
push
insb
movsb
call
and
and
jp
js
jecxz
iret
dec
push
test
cld
mov
shl
and
daa
jno
xchg
pop
repz
or
sub
xchg
in
jl
mov
jg
pop
dec
bound
pop
data16
out
mov
mov
push
pop
mov
xchg
dec
sti
scas
inc
jae
mov
in
jo
sub
xchg
ds
rcrb
xchg
sub
pusha
cld
insb
fcmovnu
xor
xchg
dec
and
jge
jo
pop
jo
jb
aad
xchg
sub
xor
xchg
push
inc
imul
sbb
jle
repz
js
movsl
sbb
scas
or
mov
adc
pop
or
call
stos
rcrl
hlt
dec
and
outsb
lret
loope
xor
fsubl
sbb
popl
hlt
hlt
not
lcall
out
out
add
daa
cli
sub
and
lret
xchg
or
sub
or
ror
xchg
in
lcall
in
ret
sub
imul
in
fdivrl
cmp
idiv
das
dec
mov
add
ret
fists
fsubrl
leave
mov
pop
je
cltd
sahf
pop
leave
cs
sbb
popa
xchg
fnstenv
mov
mov
push
mov
fsubrl
fisubrl
push
in
sub
out
aaa
push
cmp
aaa
adc
adc
mov
and
and
xor
int
jo
iret
and
js
sbb
xchg
gs
and
cmp
push
sbb
popf
std
stc
xchg
push
cmpsb
jg
je
mov
inc
xor
popf
mov
icebp
mov
xchg
pop
addb
or
cmpw
and
or
les
or
pop
sbb
gs
sbb
and
test
mov
cltd
inc
add
xchg
cmpl
shll
sub
or
clc
out
push
push
xchg
mov
testb
ljmp
dec
sub
mov
jae
jg
dec
xchg
js
or
mov
mov
xchg
add
es
in
out
icebp
jp
addr16
dec
pop
cli
lods
cld
ljmp
pop
or
int3
add
shlb
mov
aas
popa
mov
jbe
daa
into
into
jmp
loopne
cmp
pop
test
test
push
fildll
sbb
mov
xor
xchg
out
icebp
and
je
adc
aad
jbe
adc
mov
in
loop
iret
add
inc
add
xchg
cmpsl
testb
or
push
add
adc
rolb
in
adc
adc
inc
sub
inc
clc
and
jp
shll
xchg
arpl
or
push
and
cs
in
sbb
aam
mov
sbb
hlt
inc
icebp
add
ljmp
jb
add
cmp
push
lret
test
xor
lods
sub
add
arpl
out
sub
xchg
and
leave
jl
pop
in
add
dec
dec
cmp
loopne
cli
dec
jbe
imul
gs
fbld
mov
cmp
lret
test
jns
imul
xor
or
jg
xor
add
icebp
lock
push
pop
mov
jne
enter
mov
sbb
inc
jnp
addb
cmp
fs
add
xchg
and
test
cmp
push
xchg
cmp
xchg
cmp
mov
scas
pop
testb
sti
pop
lods
push
not
data16
sbb
mov
addr16
or
or
movsl
imul
jne
lds
sbb
pop
cwtl
xor
aaa
mov
sub
or
call
push
xchg
cli
sarb
inc
mov
jo
push
and
std
pop
insl
call
cmp
mov
pop
sub
sti
adc
mov
add
jge
xchg
ss
inc
in
addr16
iret
ror
xchg
push
rcrl
aas
add
lahf
hlt
fistpll
scas
mov
pop
js
repnz
push
xchg
add
fisubrl
sub
push
jge
adcl
add
add
pop
xlat
ljmp
pop
in
push
in
popf
push
enter
pop
or
lock
es
jge
cmc
iret
cld
xor
outsl
mov
ret
xor
stos
lods
sbb
cmc
out
mov
mov
push
fstps
notb
xchg
gs
jmp
mov
test
jg
push
dec
popf
adc
lods
jae
daa
bound
jbe
aaa
push
stos
mov
pop
int
push
std
dec
ljmp
jge
mov
push
add
mov
imul
fs
ja
xor
js
and
xor
add
adc
inc
pop
jae
lods
mov
sbb
add
gs
lret
push
and
mov
jnp
into
push
data16
ret
cmp
movsb
sbb
mov
jo
int
or
sub
push
pop
xor
mov
xor
aas
jnp
mov
cmp
std
test
aad
xchg
in
jg
movsl
pop
mov
inc
inc
fidivs
ljmp
dec
ret
pop
shrl
dec
cmp
je
xchg
pusha
add
push
imul
inc
lods
roll
push
jbe
int
or
stos
push
jno
cli
ret
sti
push
inc
mull
aaa
lods
xor
int3
jo
notl
jae
in
mov
enter
jae
mov
bound
stos
push
push
test
jmp
mov
shl
lcall
loope
shrb
jmp
in
loope
sbb
jb
insb
cmpsb
cmp
in
cmp
or
cmp
popf
gs
outsl
mov
arpl
inc
mov
into
scas
mov
add
cmpsl
clc
lock
push
add
push
cltd
loop
pushf
fs
xor
repnz
rorl
aaa
dec
inc
push
sbb
xchg
aad
push
iret
scas
popf
pop
cmp
leave
sahf
jg
mov
inc
xchg
movsl
fcomps
outsl
pop
jp
jo
push
daa
sahf
dec
sbb
pusha
fsubr
xor
mov
flds
push
mov
loop
jge
mov
loop
mov
fimuls
dec
ret
dec
mov
aas
mov
xlat
cs
sbb
sub
mov
fwait
std
addb
gs
inc
xchg
pop
mov
add
ret
cld
dec
test
lea
stos
jge
push
mov
jne
cmpsb
leave
dec
daa
mov
push
leave
sub
stos
mov
test
aas
xor
repz
mov
cmpsb
mov
dec
inc
pop
aas
mov
outsb
xchg
mov
out
mov
or
nop
arpl
repz
ficoms
test
test
pop
adc
lock
gs
mov
inc
cmc
hlt
stos
mov
scas
nop
sbb
dec
ja
or
dec
push
mov
sbbl
iret
pop
lods
push
mov
std
cmp
fisubs
pop
sbb
rclb
adc
cmp
xchg
push
pop
mov
cmpsl
cmp
movsl
xlat
in
dec
jae
push
dec
jecxz
xlat
sbb
lock
mov
rcrl
sub
cltd
sar
ret
push
add
dec
loop
in
pusha
cltd
or
mov
lock
and
mov
and
mov
xor
xor
sbb
mov
ja
lahf
cmpsl
push
mov
xor
mov
push
sbb
es
jno
loopne
mov
loop
xchg
or
cmp
sarb
mov
dec
push
and
ret
scas
mov
shlb
cmpsl
push
rorb
and
fwait
dec
sbb
inc
mov
mov
lea
je
shl
jl
or
lods
in
scas
movsb
test
loopne
push
loopne
sub
inc
dec
sbb
jg
adc
xor
sub
data16
pop
jl
dec
mov
mov
repz
push
inc
cmpsl
xlat
xor
add
mov
dec
lahf
int
out
lret
into
add
lea
int3
cmp
stos
pop
inc
shll
cwtl
shl
mov
hlt
pop
aam
sbb
test
cmpsb
movsl
je
test
jecxz
or
repnz
int3
xor
ljmp
sbb
shrb
faddl
inc
add
sub
lfs
xchg
insl
scas
inc
stos
stos
lods
imul
js
pop
mov
pusha
xchg
cmp
push
pusha
scas
ljmp
dec
dec
cmp
inc
sub
dec
orb
rcr
pushl
push
add
fs
xor
mov
xorl
cld
icebp
dec
lcall
rcrl
test
jns
jb
add
jns
mov
cmp
test
xor
adc
xor
jo
subb
adc
pusha
xor
imul
stc
arpl
xchg
pusha
inc
les
adc
jp
dec
andb
imul
nop
icebp
mov
sub
mulb
and
cmpsl
je
dec
lods
jecxz
sub
cmpsb
lcall
je
inc
add
jg
xchg
and
dec
mov
loop
push
in
inc
inc
jns
pop
dec
sub
push
jo
dec
adc
jns
jnp
imul
fcomps
jl
pop
fwait
divl
arpl
fcoms
cmpl
stos
fdiv
gs
sarb
inc
rcl
stc
and
mov
and
dec
push
js
xchg
fists
addr16
push
retw
faddl
pop
inc
jg
andl
sbb
movsl
pop
pop
push
xchg
adc
pop
cltd
add
push
push
int3
add
mov
and
pop
popf
outsl
js
sub
push
xchg
jae
xchg
pop
mov
adc
jnp
orl
push
mov
fsin
and
std
xor
jle
pop
dec
add
pop
stos
jnp
fistpl
pop
inc
sub
or
cmpsb
ja
insl
mov
sbb
adc
dec
cs
and
cmc
lahf
or
mov
sbb
push
mov
das
jmp
ja
jb
in
mov
insl
mov
les
and
mov
lods
nop
push
xchg
testb
xchg
jbe
sbb
push
ljmp
shr
movsl
clc
lods
inc
insb
fisubl
inc
cmp
cmp
addr16
lret
nop
addr16
mov
mov
sbb
repnz
loop
push
jbe
mov
lret
jne
lret
xor
outsb
repnz
ret
pop
scas
pop
cmc
addr16
xchg
call
add
mov
in
mov
push
daa
aaa
insb
sbb
xor
add
sub
mov
cwtl
stos
ds
adcl
sub
xlat
dec
loope
rcrl
push
xor
iret
push
fcmovu
addb
dec
in
xchg
adc
sub
mov
push
out
adc
daa
loope
and
or
daa
push
cwtl
push
jns
cmp
out
repz
mov
daa
test
pop
shl
and
mov
vpsubq
lock
mov
add
push
add
jo
dec
jno
dec
pop
push
lods
or
test
insl
push
pop
lea
add
cmc
sub
sar
jns
fisubl
aad
in
pop
xor
or
xchg
arpl
mov
test
test
test
popa
les
popf
mov
test
lret
sbb
inc
jno
notb
or
xchg
inc
mov
movsb
fstpt
push
in
out
jmp
lock
sbb
pop
bound
xchg
ret
inc
iret
enter
xor
adc
cli
mov
mov
in
popa
sbb
aam
sub
push
pop
aam
mov
fsubr
dec
lret
mov
pop
add
and
dec
inc
mov
and
inc
cmp
jb
and
pop
addl
sahf
lcall
xchg
push
leave
aaa
xor
iret
mov
inc
jae
cli
stos
dec
jmp
bound
inc
ficoms
jecxz
bound
xchg
push
cmpsl
sub
xchg
cmp
pop
sbb
clc
sub
cs
jnp
sbb
inc
or
movq
mov
xor
and
cmp
push
pop
sbb
jl
cmpsl
movsb
orl
inc
cmc
pop
in
jmp
fwait
mov
into
outsl
sub
pop
sub
xchg
cmp
and
cmp
jo
pushf
jle
mov
and
imul
xchg
bound
mov
lret
je
nop
ret
sub
adcb
addb
out
call
notb
sub
mov
xor
xlat
movsl
pop
out
pop
mov
mov
add
fstps
mov
stc
jne
sub
adc
rorb
sub
outsl
test
xor
dec
ss
fs
push
outsb
test
inc
nop
pop
jp
test
fsubrs
test
jle
divb
pop
ds
fmuls
mov
pop
dec
repnz
push
stos
dec
push
cmp
pushf
xchg
adc
pop
xlat
lds
mov
scas
lahf
pop
add
out
dec
pop
inc
in
mov
mov
xchg
adc
popa
adc
lds
bound
sub
and
imul
push
jno
or
loopne
subb
adc
and
cwtl
sub
adc
popf
outsl
std
push
mov
out
cs
inc
std
mov
pop
rcrb
push
outsl
rcrl
in
inc
xor
imul
lods
adc
mov
push
cltd
cli
dec
push
cmp
mov
mov
pushf
push
lret
das
sub
loope
ret
movsl
test
aam
push
in
mov
jle
mov
fists
outsl
xchg
jmp
pop
popa
fbstp
xor
or
mov
cmp
int3
out
rcrl
push
pop
adc
sub
mov
add
mov
cmpsb
push
sub
cmp
mov
rcrb
cmp
ret
jmp
gs
jne
or
push
in
xor
dec
imul
ja
lock
jnp
inc
and
pop
mov
dec
or
inc
push
inc
clc
cmp
clc
das
jle
inc
add
xchg
ja
sbb
xorl
fsubr
loope
push
pop
cmpl
cmc
lea
jb
add
cmp
ds
cmp
rolb
push
mov
aad
inc
ljmp
fsubr
cmpsl
inc
loop
js
mov
or
les
pop
jnp
out
imul
push
mov
imull
mov
cmp
lcall
sub
pop
ja
leave
jns
cmpsb
add
jecxz
popf
stos
push
xor
sub
in
mov
add
mov
mov
rcrb
sub
mov
sbb
sub
test
sub
stc
jmp
out
test
sub
jg
and
inc
lods
jecxz
sub
and
xor
add
ss
loop
pop
add
and
ja
outsb
pop
xor
inc
inc
loopne
pop
mov
jle
xchg
pop
push
fldenv
std
lret
mov
pop
or
push
cmp
inc
and
cmp
jo
hlt
jl
pushl
les
dec
xchg
test
movaps
aad
leave
pop
push
jmp
inc
addr16
cld
aad
cld
mov
mov
pop
lds
and
push
out
mov
cld
js
loop
nop
aam
jb
cmpb
mov
xchg
or
sub
jns
dec
ds
test
cmp
scas
pop
outsb
std
mov
jnp
or
into
jnp
pop
jge
leave
unpcklps
rolb
shll
cld
cmp
inc
xchg
add
jbe
mov
dec
dec
popf
imul
fcomp
imul
aam
sbb
xchg
cmpsb
mov
mov
mov
or
in
push
pop
xor
fdivs
xor
xor
mov
cmp
lret
mov
push
mov
jbe
pop
arpl
pop
movsl
insl
in
repz
mov
mov
sbb
test
xchg
fsubs
mov
mul
sbb
fcomp
enter
push
dec
cltd
sbb
inc
mov
arpl
shl
or
test
inc
out
pop
jge
mov
fs
jp
jmp
pop
push
jmp
lcall
pop
repz
pop
rorl
adc
or
shlb
incb
jp
inc
xchg
sub
stc
lock
popa
xorb
fsubl
dec
jg
adc
addr16
pop
repz
mov
lock
ficoms
mov
sbb
lds
xchg
mov
and
clc
inc
sub
lock
stos
sub
dec
in
sub
decb
iret
xchg
mov
xor
mov
push
lahf
sarl
roll
icebp
popl
in
loope
mov
mov
dec
outsl
jp
out
mov
mov
mov
sbb
popa
jno
aaa
test
xor
leave
cmpsl
popa
jnp
cmp
or
test
dec
xchg
pop
stc
cmp
mov
and
mov
fldcw
out
shlb
fwait
idivl
add
roll
mov
lret
mov
cltd
pop
lea
scas
mov
adc
inc
and
mov
pop
jp
sub
dec
xchg
sahf
pop
inc
fists
notl
fmull
fbstp
sbb
sti
and
mov
push
into
inc
divl
cmp
push
cmp
sbb
pushf
or
stc
sub
cwtl
std
sub
xlat
adc
inc
push
std
loop
rcr
xor
dec
sti
lock
les
pop
shrl
jno
js
fcomi
mov
fidivrs
pushf
sub
add
dec
add
dec
ficoms
push
imul
icebp
hlt
cmpb
loopne
ds
hlt
arpl
jp
jg
dec
jge
push
in
loopne
das
lret
mov
xchg
jmp
jg
stc
mov
pop
std
inc
arpl
test
xchg
lock
movsl
add
rcr
insb
sahf
clc
mov
iret
xchg
mov
push
xor
popa
push
fstpt
xorl
lahf
inc
shrl
mov
dec
xor
push
push
outsl
pop
jbe
repz
lea
ljmp
jg
rorb
sbb
hlt
mov
clc
or
jmp
cmp
montmul
cmpsb
inc
aad
outsl
sahf
sti
inc
popl
mov
pop
xor
inc
dec
cmpsl
mov
jg,pt
cmc
sub
mov
dec
inc
rcll
add
loopne
mov
in
mov
and
cmp
sub
add
roll
jbe
push
pop
lahf
or
in
insl
and
jno,pt
mov
push
stos
mov
jno
mov
adc
lahf
in
inc
test
jne
sbb
pop
int
lcall
mov
test
int3
cmp
test
pop
negb
xchg
push
outsb
out
out
stc
inc
leave
in
xchg
sub
je
mov
inc
sbb
xor
lret
xchg
push
add
inc
pop
mov
nop
das
nop
fdivrl
es
insl
adc
ljmp
jae
addl
dec
sub
mov
insl
xor
jg
pop
dec
repnz
out
inc
adc
daa
jno
lahf
ss
sub
push
mov
in
push
test
insl
icebp
pusha
icebp
sub
fdivrs
pushf
add
pop
ret
add
pop
cli
int
or
lods
ss
hlt
jl
jl
lock
push
jecxz
scas
data16
xor
sbb
push
inc
dec
xor
jmp
add
or
inc
mov
stos
repnz
jmp
icebp
out
and
sub
adc
push
popf
fbld
pushf
dec
xchg
push
sub
mov
popf
call
test
inc
rcr
insl
fsubs
and
fldenv
cltd
jecxz
fbstp
jno
cmp
movsl
ja
or
enter
push
cmp
test
sub
and
pop
push
sbb
lahf
dec
lahf
mov
movl
push
push
jge
xlat
adc
pop
and
repnz
pop
mov
adc
stos
imul
mov
xor
or
fmull
mov
fnstsw
lcall
cld
cmpsb
jl
aaa
ret
movsb
and
dec
mov
in
popa
or
dec
jle
mov
dec
lahf
pop
fbstp
sbb
mov
into
add
jp
cmpsl
cmp
arpl
andb
movl
cli
notl
adc
cmp
sub
enter
repz
inc
sti
stos
jae
dec
mov
int3
push
lahf
xor
sub
popf
cld
or
mov
mov
in
jmp
mov
sub
ret
cs
fidivrl
lods
and
lea
lcall
mov
das
adc
fstpl
push
cmp
sbb
mov
and
nop
in
cmp
mov
xor
pop
movsl
in
mov
test
push
daa
push
fstl
sub
lea
jne
sub
dec
test
jb
add
mov
fstl
push
stc
insl
out
test
xchg
out
sub
out
aaa
mov
movsl
add
rcr
inc
ret
mov
mov
cmp
dec
std
push
add
lock
adc
xchg
inc
jne
inc
adc
mov
pushl
and
enter
fs
push
push
cmpsl
mov
xchg
rcrb
pusha
mov
imul
popf
sub
cmpsl
push
ret
sbb
mov
je
xchg
neg
dec
into
inc
das
out
rcl
ja
adc
loopne
jno
sarb
cmpsb
mov
mov
addl
jmp
cmp
xchg
insb
jae
iret
mov
push
dec
fldt
xchg
mov
add
xor
repz
scas
mov
push
mov
sbbb
xor
pop
sub
mov
movsl
jle
lcall
js
out
xchg
in
movsl
inc
shlb
add
lret
adcl
shll
adc
adc
jno
push
inc
xchg
or
cmp
aam
dec
sub
dec
pop
int3
pop
mov
or
cmp
jmp
lcall
mov
fwait
jp
popf
jp
roll
test
add
in
lcall
ds
mov
push
mov
jbe
xchg
add
dec
lea
insl
cld
ficomps
pop
clc
dec
push
mov
xchg
inc
fnsave
std
adc
fdivrs
xchg
or
push
sbb
pop
into
in
xchg
sub
jns
in
push
insl
sub
pusha
fildl
xchg
fimuls
sub
jnp
push
push
sub
push
incl
mov
push
divb
jo
test
testb
ds
ret
push
cmp
xor
xlat
cmp
mov
fs
push
dec
cmovle
flds
cmp
push
mov
sbb
pop
lock
outsb
add
xchg
and
ljmp
adc
loopne
xor
mov
js
pop
pusha
mov
fsubrl
push
movsl
fcompl
xchg
mov
movsl
mov
mov
sbb
jns
add
adc
in
subl
sub
jl
lahf
jl
inc
aam
adc
jecxz
sub
sub
pop
out
test
cld
xor
cmp
daa
mov
mov
out
addr16
loope
jno
das
insb
cmp
out
or
cmp
jle
imul
dec
fs
jne
js
mov
jmp
sarb
dec
mov
sbb
push
repz
sbb
sbb
imul
and
mov
push
ror
insl
push
mul
loope
sub
sti
sub
jg
xor
mov
nop
cmp
jbe
cs
dec
js
xor
jg
xchg
lret
mov
mov
subb
mov
jecxz
jge
lea
jecxz
xor
add
cmpsb
mov
stos
xor
adcb
call
or
pop
call
fisubs
dec
sti
imul
dec
sbb
inc
mov
lahf
iret
fldenv
cmp
out
mov
mov
pop
jg
popf
das
icebp
mov
pushf
jno
inc
into
lahf
mov
jmp
test
lret
lds
cmpsl
sahf
fcmovne
fimuls
push
pop
out
dec
aad
mov
out
adc
lret
pop
cmpsb
sub
inc
push
jmp
cli
inc
aad
addr16
xlat
cmp
jle
in
fidivl
sbb
mov
pop
cmp
add
insb
pop
scas
jmp
enter
sarl
aad
in
adc
adc
mov
ljmp
ja
adc
ljmp
inc
cmp
aaa
int3
int3
cwtl
pop
inc
loopne
cmpsb
xchg
icebp
in
lods
jl
mov
pushf
cmpsb
insb
cmp
push
cltd
jb
mov
jns
shrb
jae
loopne
lret
mov
addb
jp
mulb
cmp
test
hlt
xchg
jmp
ret
adc
pop
xchg
adcl
fnsave
push
or
pop
mov
push
and
idivb
cmpb
aad
test
cmpsl
push
imul
adc
dec
jns
jg
ja
ds
loop
sub
push
mov
arpl
sbb
jmp
cmp
xchg
push
pop
scas
stc
out
ret
mov
rolb
sbb
cltd
push
cld
movsl
clc
pop
inc
lahf
daa
jno
aam
lret
lahf
movsl
mov
incb
js
cld
add
adc
sbb
or
lahf
subl
or
fstpl
jmp
popf
xor
rcr
sbb
xor
sub
sbb
cmp
jne
jnp
out
gs
scas
lock
fisubs
cmpsl
or
adc
into
add
insl
mov
adc
dec
mov
mov
scas
in
mov
pop
scas
push
pop
outsl
mov
push
int
in
test
or
inc
sub
sub
add
jle
push
sub
call
add
fiaddl
xchg
sbb
ljmp
test
cmp
iret
cmpsl
xchg
inc
xchg
in
jbe
lods
shll
dec
and
dec
mov
sti
call
jb
subb
xchg
sbb
adc
push
push
or
add
cmp
or
cmpsl
mov
loop
mov
adc
dec
or
jmp
enter
shll
insl
xchg
and
and
daa
fs
jg
adc
mov
adc
sti
ret
xchg
jl
mov
sub
mov
lock
fstps
and
cmp
add
rcll
cmp
xor
jae
add
jb
mov
popf
inc
pop
dec
inc
xchg
xor
cmp
test
cmp
jne
fst
mov
dec
rcll
fildll
pop
sarl
or
jae
ds
inc
mov
movsl
and
fdiv
adcb
ss
insl
pop
mov
rcrl
jge
ja
lcall
es
mov
jno
call
out
js
cmp
pushl
dec
movsl
or
cmp
dec
cmp
and
jo
arpl
and
inc
fbld
or
cld
sti
jg
int3
mov
sahf
outsl
vshufps
sub
jne
push
icebp
insb
inc
mov
iret
or
dec
xchg
mov
pop
nop
or
into
popf
stos
aam
fsubrp
mov
idivb
xlat
adc
push
adc
dec
loop
std
cmp
sbb
dec
leave
push
stos
call
popa
dec
movsb
and
push
and
jae
push
scas
loope
jns
mov
lea
xor
in
or
imul
imul
sbb
mov
rcr
and
lahf
out
movsl
rcll
pusha
repz
addr16
mov
pop
xchg
out
sub
ret
lret
lret
jecxz
out
dec
scas
imul
pop
push
cmc
into
push
sbb
mov
in
pop
pop
in
rcll
mov
rcrl
fwait
xchg
mov
lcall
aaa
add
shl
push
out
sbb
xor
jnp
cmpsb
jge
jns
notl
cmp
lret
add
jb
stc
ficoms
in
cwtl
push
enter
and
lods
mov
lcall
mov
cs
insb
scas
mov
pop
mov
and
stos
pusha
inc
mov
sbb
ljmp
inc
and
lcall
mov
push
in
adc
mov
jge
loopne
test
sarb
adc
bound
movsb
adc
fidivrl
cs
pop
xchg
push
loop
cmpl
and
push
cmpsl
movsb
xchg
adc
add
dec
push
mov
push
sbb
and
add
mov
cmp
sub
aam
test
pop
test
push
add
xor
lea
or
arpl
daa
int3
in
test
dec
lods
add
pushl
pop
fsubrl
je
scas
pop
rolb
div
mov
in
fucom
imul
es
mov
aas
pop
xchg
cmp
movl
cmp
sbb
icebp
ror
rorb
cmp
or
push
in
inc
push
sbb
or
stos
fld
sbb
push
add
test
sub
ja
jp
push
call
sbb
imul
lock
mov
xor
jp
push
jne
lahf
ja
leave
clc
push
out
arpl
aad
iret
in
aaa
fstl
dec
mov
pushf
xchg
cmp
out
add
mov
cmp
shrb
mov
inc
xor
es
sbb
stos
xor
push
pop
or
lods
inc
fimull
mov
rdpmc
jle
jo
mov
pop
cmp
push
cs
push
pop
pushf
mov
mov
mov
sub
cmc
movsb
cmp
sbb
popf
int3
outsb
xchg
dec
cmp
xchg
xchg
xchg
ja
sbb
sub
ds
popl
or
sbb
loop
mov
stc
jns
dec
mov
push
push
xor
xchg
fcoms
scas
push
sub
repz
lret
pop
das
subb
shrb
push
or
push
cwtl
cmp
mov
push
test
and
faddl
mov
adc
insl
cmc
test
push
sub
arpl
data16
mov
stos
fisubs
sub
sbb
inc
in
in
xchg
andl
in
adc
scas
push
mov
loop
test
add
dec
lret
cmp
xchg
call
inc
dec
aam
popa
mov
imul
das
roll
jg
loopne
xchg
pusha
in
aaa
int3
mov
adc
dec
dec
das
pop
dec
outsb
inc
aas
call
ljmp
mov
or
shll
xor
outsb
rorb
xchg
pop
mov
jecxz
add
inc
mov
mov
adc
fwait
bound
sahf
mov
int3
andb
into
ud1
adc
push
xchg
and
xchg
out
fs
pop
fstps
lret
sbbb
test
loopne
mov
aas
fldenv
add
adc
jmp
into
ds
jecxz
sarl
lds
mulb
fisubrl
xor
inc
ret
fimuls
fwait
stos
cli
sub
push
mov
push
mov
pusha
cmc
push
pushf
cltd
xor
aam
push
jns
insb
adc
mov
fimuls
pop
lahf
stos
into
test
pop
test
icebp
mov
hlt
mov
fcmovnb
pop
mov
mov
pusha
arpl
cmp
dec
insl
adc
jle
loope
fcomp
loopne
hlt
fnstsw
fwait
popf
inc
and
pop
cli
cld
outsl
mov
daa
mov
mov
adc
sbb
test
or
sti
pop
mov
add
call
push
mov
xchg
xor
in
cmp
jo
insl
scas
test
or
stos
loopw
pop
mov
out
fdiv
sub
push
nop
out
ljmp
push
xor
adc
mov
xor
xor
stc
and
movsl
jg
sub
add
inc
loopne
nop
scas
cli
clc
pop
sbb
sub
xchg
out
mov
push
lret
cmpsl
or
sti
dec
lds
adcb
iret
sahf
mov
mov
mov
call
and
addb
and
pop
push
mov
xchg
dec
add
out
jo
mov
ficomps
push
out
addl
xchg
js
push
nop
fimull
sub
pop
and
ficompl
clc
pusha
movsl
jne
shll
inc
adc
addr16
jp
clc
lock
sti
push
or
into
arpl
xchg
adc
pop
or
scas
cmpsb
lods
stos
jno
outsb
enter
jne
repnz
pop
xor
js
cmp
nop
jo
dec
jae
or
xchg
push
mov
jno
lret
xor
xchg
ds
das
lcall
dec
mov
mov
mov
lds
movsl
hlt
push
stos
cmp
arpl
mov
xlat
divb
jne
adc
es
ret
decl
jbe
clc
jge
cmpsl
stos
dec
sub
fdivs
lds
and
dec
or
gs
mov
insb
aam
es
push
add
lcall
js
jmp
lahf
push
icebp
rcrl
nop
fildll
mov
sbb
xchg
out
jnp
xor
mov
movsb
sub
sub
mov
repz
ja
ja
jae
add
test
aam
add
push
cltd
adc
in
dec
stc
and
shlb
xor
push
add
daa
sbb
jb
cmc
test
and
push
in
push
jg
icebp
push
aad
push
sub
mov
pop
and
loope
stos
adc
je
xor
xor
jno
dec
inc
mov
add
jg
shlb
jmp
pop
insl
fisubl
mov
xchg
add
push
cmp
cmp
sub
sub
call
pop
dec
and
cs
imul
je
outsl
ret
std
and
pop
sbb
mov
sbb
lret
mov
adc
jbe
or
leave
movsb
jae
cwtl
add
jmp
addr16
pop
fmuls
xchg
popa
sahf
shl
daa
push
xor
mov
iret
push
jmp
mov
ret
xchg
aas
leave
std
mov
ja
push
rcll
movsl
cmpsb
cmp
hlt
mov
fisubs
push
outsb
lods
lcall
mov
and
mov
or
cmp
mov
push
cmpsb
jg
fisubs
fs
fwait
pop
out
mov
fstpt
adc
clc
jns
jl
sbb
das
inc
icebp
fwait
ret
push
cwtl
xor
jb
out
mov
loopne
or
and
outsl
jno
sbbl
ret
fimuls
call
es
push
xor
aaa
iret
mov
ds
mov
pop
fsts
xchg
test
movsb
xchg
fstl
xchg
or
pop
cmp
add
xchg
sub
shl
adc
jg
insl
push
repz
jb
push
iret
imul
push
ss
inc
and
lret
sub
adc
clc
pop
in
or
jbe
add
lods
pop
pop
inc
and
push
jns
dec
sbb
je
push
out
cmp
inc
fnstenv
aaa
test
cmpsl
jmp
or
jne
and
pop
mov
rclb
sub
test
sbb
or
ljmp
fists
sub
sub
aaa
dec
add
addr16
lods
jle
xchg
sbb
sbb
sti
xor
cmpsl
pop
mov
test
lods
daa
jns
pop
neg
test
cmp
and
inc
xor
push
sbb
test
push
aam
das
idiv
aaa
sbb
cmpb
add
or
or
dec
jns
movsl
in
lds
adc
or
cmp
movsl
xor
jne
sbb
addr16
mov
fdivl
lock
xor
jo
sbb
out
sti
mov
jnp
ljmp
fldl
mov
jne
adc
fbstp
push
mov
data16
jge
lret
inc
and
lret
movsb
jecxz
and
mov
nop
push
insl
movlps
xchg
pop
pop
shrl
inc
jle
cli
loope
nop
inc
push
xchg
jo
fsubrs
lods
je
mov
mov
pop
or
inc
mov
clc
push
mov
in
xor
push
mov
out
ljmp
imul
repnz
add
stos
or
jnp
in
inc
gs
ds
fsubrs
xor
dec
xor
push
jns
les
mov
adc
mov
scas
out
jmp
dec
push
jge
fld
arpl
sbb
cs
sub
lods
xchg
decl
dec
hlt
xlat
and
mov
jae
xchg
mov
mov
push
mov
test
std
aam
xor
aam
jecxz
jmp
and
jno
pop
xor
clc
push
dec
lret
pop
subl
mov
mov
negl
and
aas
cmpsb
int3
decb
add
xor
in
fmull
stos
lods
fdivl
add
xor
sub
inc
nop
cmp
push
test
dec
enter
inc
test
in
and
sub
je
xchg
mov
jae
ret
out
loop
inc
imul
xchg
std
pop
mov
xor
aaa
call
test
xchg
insb
pop
push
sahf
fstl
adc
mov
mov
and
lret
test
cmp
pop
fidivs
lret
daa
xor
das
xchg
pusha
push
mov
ljmp
repnz
xor
scas
je
mov
ja
inc
mov
add
pop
ljmp
pop
loopne
jo
divb
mov
sarb
movsl
cmpsb
leave
adc
push
pop
xchg
pop
sub
in
mov
adc
outsl
in
mov
jge
jns
ljmp
insl
movsl
out
outsb
jns
xchg
pop
mov
enter
das
xor
jl
xchg
and
pushf
clc
gs
dec
lea
shrb
insl
aas
movsl
rcl
arpl
subb
icebp
lea
mov
xchg
inc
loop
fildll
and
push
mov
jp
mov
sbb
je
sbb
cmp
push
sti
pusha
pop
stos
stos
pop
mov
sub
adc
add
ljmp
push
aad
mov
mov
lock
adc
out
pop
dec
pop
jg
fdivl
dec
aad
mov
mov
repz
cli
arpl
shrl
sbb
rol
fidivs
sub
sahf
xor
adc
adc
push
jo
insl
repz
ja
jne
inc
aam
fistps
cmp
push
sbb
pop
loope
pop
rcll
popa
push
xor
sub
pop
clc
push
scas
mov
push
or
outsl
cmp
scas
rol
or
jl
push
pushf
push
in
jl
pop
cltd
push
sbb
jne
es
cs
repz
pop
mov
js
rol
clc
cmp
or
xor
rcll
sti
mov
enter
cwtl
stos
mov
xor
ds
cli
cs
cs
lret
pop
jbe
mov
xchg
ljmp
cmp
xchg
jg
rcll
jge
mov
dec
add
xchg
dec
fcomps
mov
lods
or
jnp
bound
outsl
bnd
mov
dec
inc
sbb
gs
lret
xorl
cmp
xchg
mov
and
jmp
cmp
stos
jne
jne
les
jne
push
fstpl
xor
dec
repnz
test
shlb
xor
push
or
cld
xor
or
jnp
sarl
js
lahf
sbb
movsb
fwait
test
aas
pop
dec
inc
jmp
aas
mov
mov
les
mov
fidivrl
sbb
and
mov
mov
jnp
pop
addr16
leave
and
xchg
cwtl
insl
popf
mov
addr16
daa
sbbb
aam
std
jecxz
pop
popa
addr16
or
cmp
add
xchg
lods
insl
dec
cwtl
das
test
pop
push
fs
aaa
mov
insb
adc
mov
out
rclb
repz
sbbl
test
lea
xchg
dec
ljmp
loop
dec
push
insb
adc
pop
enter
insb
bts
adc
push
aaa
mov
push
mov
in
mov
daa
in
sbb
inc
ret
lcall
data16
popl
jnp
repnz
fwait
addl
push
jns
rorb
jle
jnp
dec
test
cmp
cmc
and
push
pusha
lds
and
xor
in
test
fwait
mov
cs
jns
repnz
jo
push
adc
enter
push
mov
add
shrl
lret
test
sub
xchg
adc
test
inc
rolb
shll
movl
lods
add
mov
aaa
les
push
xchg
jg
pop
adc
inc
inc
sub
lock
cmc
add
or
mov
leave
insb
and
outsl
pop
inc
and
imul
daa
out
ficoml
push
xchg
add
cmc
push
inc
in
or
pop
jle
mov
ror
inc
mov
rolb
cmp
jae
das
add
shlb
fdivrs
cmp
adc
js
or
or
jnp
sub
cmp
popw
cmc
outsl
cmp
mov
cld
or
cld
xchg
adc
dec
pop
and
and
addr16
inc
mov
jo
mov
or
mov
adc
adc
cmpsb
push
clc
cmp
addr16
fwait
add
fidivs
push
repz
cmpb
sbb
inc
inc
scas
vmread
inc
fnstsw
fiadds
pop
in
push
rcrl
push
std
test
jne
and
shll
loop
mov
addr16
hlt
inc
aad
test
sub
les
mov
pushf
pop
lds
xchg
lret
sahf
mov
inc
pop
cmc
mov
cmpsl
inc
push
inc
xor
lds
data16
pusha
test
mov
mov
and
mov
xorl
push
ja
and
pop
aas
adc
push
stc
lcall
sbb
notb
mov
inc
test
pop
ds
dec
xchg
mov
adc
popf
push
insl
icebp
jl
dec
in
sub
shld
popf
hlt
fwait
icebp
mov
out
dec
mov
jl
fcoml
popa
dec
dec
mov
cld
repz
rcll
mov
cs
push
dec
push
popf
in
int3
movsl
xor
mov
jo
sbb
mov
cltd
stos
iret
data16
mov
xchg
insl
inc
jbe
add
mov
mov
inc
inc
jle
subb
mov
insb
cltd
push
shrl
mov
pop
lods
stc
inc
sbb
push
jmp
aaa
insb
jb
xlat
rcr
adc
mov
inc
data16
mov
inc
in
loopne
push
mov
xchg
movsb
push
fsubrl
pop
cmpsl
cmc
push
aas
pop
adc
dec
mov
shrl
mull
cmpsb
add
jne
xchg
mov
aad
out
mov
xchg
inc
mov
or
js
and
int
cmp
leave
sbb
sub
cwtl
or
add
movsl
pop
outsl
hlt
jmp
jg
mov
ss
cmpb
jns
push
cmp
loop
push
dec
stos
adc
pop
not
push
fadds
add
push
jle
pop
or
fstpt
push
dec
test
bswap
jo
movsl
mov
and
cmp
stos
repnz
fstpt
test
js
cmpsb
fcmovnu
jp
jno,pn
mov
and
xchg
push
loopne
jmp
sti
cwtl
add
jge
dec
or
cmp
test
jmp
out
psubusw
mov
pop
xchg
popf
cmp
testb
push
arpl
lods
or
sbbl
jne
push
clc
sub
push
xchg
inc
and
inc
sub
aam
push
fnstcw
or
sar
aaa
ja
mov
mov
mov
scas
fcoms
xchg
jae
inc
jg
ja
sub
fwait
xor
in
out
aaa
xchg
and
xchg
lcall
jo
subb
add
push
inc
and
push
movsl
sbb
cmp
push
jne
aam
fwait
in
adc
insb
and
mov
in
push
hlt
in
mov
cmp
xor
xchg
mov
jnp
jl
dec
int
cmp
idivb
sub
out
mov
jle
jb
xlat
sbb
and
out
push
fcomp
arpl
xchg
js
adc
mov
or
push
and
cwtl
xor
sub
imul
int
lret
mov
xor
in
add
sahf
in
sti
movsb
call
cmp
sub
fldt
jmp
pop
mov
and
leave
rcrl
sub
inc
int3
scas
fwait
dec
adc
pop
xorb
push
sbb
dec
out
loope
jp
daa
push
adc
add
cmp
xchg
pop
xchg
push
div
lahf
lock
sti
jo
sub
xor
fs
jge
bound
jg
fstl
mov
inc
jmp
or
mov
fwait
add
pusha
lods
sbb
mov
xchg
enter
sahf
jb
mov
jb
cmp
aam
or
and
mov
mov
sbb
xchg
adc
pop
adc
xor
stc
std
mov
xchg
data16
dec
jl
repnz
fwait
popf
sbb
jno
jne
mov
sub
pop
mov
add
bound
add
scas
or
mov
mov
inc
fcoms
pop
ljmp
mov
fistps
gs
mov
clc
mov
lret
inc
mov
out
jle
insl
push
into
inc
xchg
add
mov
cs
aaa
jbe
and
mov
cmp
leave
lcall
inc
xor
xchg
push
call
jg
fisubrl
jbe
xor
hlt
mov
mov
mov
cmp
jae
dec
and
cmp
jle
int3
push
adc
pop
dec
decb
push
mov
jmp
es
lea
add
xor
jle
jge
movsl
inc
insl
inc
call
adc
gs
rorb
scas
pop
pop
outsb
push
cmp
fidivs
mov
clc
push
mov
bound
mov
pop
mov
add
push
jnp
pop
add
iret
push
inc
and
arpl
cld
mov
and
bound
sbb
adc
cwtl
mov
divl
popf
mov
stc
addr16
xlat
or
sbb
popa
jge
sub
out
mov
std
outsb
jmp
mov
repnz
xor
movsb
adc
mov
std
jb
jg
data16
xchg
push
test
mov
or
mov
push
mov
stos
cmp
cmovge
in
and
mov
pop
out
into
sarl
popa
jo
mov
inc
dec
mov
pop
adc
pop
cmp
daa
xor
pop
out
pop
lods
sbb
or
add
fsubl
pop
xchg
fcomi
jg
sub
add
fbld
dec
xchg
xchg
adc
mov
bound
cli
out
mov
add
cmpsb
leave
addl
xchg
lds
mov
loope
test
jmp
fiadds
pop
push
std
push
pop
dec
pop
rorl
dec
test
push
add
inc
insb
pushf
filds
dec
inc
shrb
pop
xchg
jne
push
sub
fisubrl
fsubrs
stos
xchg
sbb
sub
jo
and
xchg
in
or
popf
mov
jbe
mov
shll
test
rol
lfs
jg
inc
mov
push
mov
inc
loope
icebp
arpl
je
movsb
sahf
add
mov
cmp
cmp
shl
data16
jp
es
cmc
andl
adc
cmc
xor
sti
es
lahf
mov
cmp
js
dec
or
pop
xor
sar
xchg
out
adc
pop
aas
mov
roll
movsb
fstpl
insl
jl
mov
and
enter
dec
adc
push
mov
sbb
iret
jle
jns
cld
mov
jg
pop
dec
cmp
ret
sub
sbb
iret
fwait
xchg
mov
sbb
icebp
loopne
inc
aas
xchg
stos
mov
xchg
test
and
hlt
and
push
xchg
cli
pushf
addl
adc
enter
movsb
push
loopne
jnp
or
xor
int3
test
mov
mov
pop
or
mov
jbe
add
fistps
xlat
mov
popa
xchg
push
add
lods
arpl
scas
data16
mov
pusha
scas
les
jb
push
xchg
lods
inc
pop
pop
inc
pop
mov
add
movsl
adc
jae
iret
inc
add
sub
lea
dec
pusha
aam
sbbl
inc
and
out
jne
in
push
cmp
leave
mov
push
imul
add
mov
loopne
pop
int
int3
mov
out
sub
xor
ss
ret
les
loop
mov
frstor
test
pop
mov
push
test
test
pusha
push
inc
pusha
sahf
xor
cmp
push
std
sbb
das
std
push
inc
stos
jp
shrb
and
test
sti
flds
aaa
mov
add
cmp
xor
xor
in
dec
fisttpll
or
or
rorb
mov
nop
pop
cmp
jbe
leave
sub
add
lea
adc
adc
xchg
divb
mov
pop
in
mov
mov
clc
xchg
movsl
cmpsl
and
test
adc
sbb
mov
lret
sbb
xor
cmp
in
mul
ret
jmp
test
mov
insb
aas
add
cmp
insb
lcall
xor
mov
xchg
jp
popl
jae
mul
shlb
or
cmp
rcr
shlb
je
and
mov
cli
out
pop
ret
inc
das
pushf
test
xor
and
mov
mov
push
inc
jns
adc
pop
push
imul
sub
or
push
inc
stc
or
sti
adc
xor
mov
scas
stos
aas
and
cmp
cmp
dec
movsl
out
mov
pop
xchg
inc
push
xor
movsl
leave
cmpl
lock
pop
lods
pusha
addl
fidivrl
dec
push
bound
jns
ss
je
into
dec
inc
fmull
pop
cli
sub
out
push
and
out
pop
cld
lock
in
je
jp
xor
iret
mov
lods
push
lret
inc
fstps
sbb
movl
pop
mov
stos
orl
out
inc
in
inc
xchg
test
fucomi
es
jns
fwait
ret
addr16
inc
fiadds
testb
mov
xchg
inc
xchg
jg
imul
pop
add
ret
or
xchg
xor
addr16
imul
mov
loope
adc
add
mov
pop
pop
scas
or
jns
adc
cltd
fnstenv
jg
adc
cmpl
and
inc
ljmp
mov
mov
mov
insl
mov
sarl
ja
add
inc
sahf
pop
fsts
push
gs
push
inc
jns
out
clc
es
dec
int3
lods
cmp
pop
loopne
rolb
je
mov
pop
loope
lods
inc
cmp
cmp
add
cmpb
pop
cmp
je
dec
mov
in
add
shrb
ss
mov
fldt
jno
scas
in
sub
add
cmp
dec
sbb
dec
es
in
mov
xor
loopne
or
popf
sub
out
ror
pop
out
and
mov
clc
mov
xchg
dec
cmp
adc
cmp
pop
xorl
loope
aas
int3
jns
pop
ret
dec
pop
pop
movsb
out
cli
push
shll
aaa
adc
inc
frstor
aam
pop
out
imul
sbbl
repnz
pop
ja
or
push
jne
into
insb
fstp
jp
loop
test
rcrl
stos
cmp
jnp
imull
cmpsl
out
es
outsb
stos
pop
push
das
dec
xchg
loope
lods
mov
imul
adc
cs
xor
loop
sub
or
clc
leave
adc
mov
sbb
movsb
mov
outsl
lock
sahf
or
cmpsb
push
and
aad
loope
aas
aaa
icebp
stos
repz
shlb
adc
jecxz
jbe
sub
icebp
fstpl
loope
pop
sub
pop
jl
cmpsb
jecxz
ja
sub
or
mov
mov
mov
mov
scas
and
push
nop
jecxz
add
sub
cmp
mov
popf
cli
mov
call
lret
and
imul
dec
call
jbe
nop
jg
sub
jo
xchg
push
xor
pop
lahf
jg
fsubs
mov
iret
sub
sub
out
mov
mov
jge
lods
mov
sbb
xor
dec
pop
push
push
sbb
push
xchg
test
push
xchg
mov
insl
fildll
push
sbb
jg
mov
in
pusha
pop
jmp
jno
push
jne
add
repz
fs
popa
sbb
sahf
mov
dec
and
xor
sub
adc
movups
push
inc
fwait
mov
add
out
loope
hlt
mov
out
test
pop
arpl
xchg
jns
xchg
sub
int3
lea
mov
int
mov
shl
inc
inc
notb
jbe
jno
jmp
jmp
add
jns
fildl
es
push
inc
xor
out
jge
and
mov
aas
outsb
xorb
mov
or
clc
iret
pop
pop
nop
int3
clc
test
repnz
push
popa
orb
cmp
mov
lcall
push
imul
mov
dec
push
imul
xchg
inc
mov
xchg
pop
xlat
imul
out
mov
push
test
sarl
jns
mov
xchg
dec
adc
dec
lock
mov
inc
sub
test
out
addr16
clc
pop
nop
test
sub
mov
pop
push
fnstenv
shr
cs
add
int
push
stc
ljmp
out
xchg
test
xchg
cmp
test
add
test
inc
sub
push
loop
add
aaa
jp
aad
vunpcklps
xchg
flds
push
xor
jno
arpl
popa
outsl
jge
fbstp
push
cli
xor
sbb
inc
xchg
es
lods
fs
fdiv
stos
pop
inc
xchg
incl
lret
fcomi
mov
fcoms
cmpsb
test
or
test
sbb
stc
mov
jns
adc
divl
push
or
sti
imul
rolb
dec
cmp
jbe
jmp
fisubs
loopne
addr16
pop
mov
aas
xchg
test
arpl
add
mov
inc
sbb
push
mov
mov
dec
xor
push
shll
or
dec
or
xor
aas
cwtl
mov
sbb
adc
mov
loop
xor
test
add
and
icebp
dec
mull
int3
lcall
push
lds
sub
and
jo
daa
push
gs
lahf
jno
jp
out
add
mov
push
daa
push
lods
pop
jl
cmpsl
mov
sub
xlat
sbb
xchg
sarl
or
addb
mov
in
mov
cmpsb
dec
sbb
in
push
mov
mov
adc
xlat
andl
mov
in
sub
lret
ror
push
mov
out
bound
fs
lods
pusha
test
sarb
pop
jecxz
xchg
lret
dec
cmpsl
sub
jecxz
aas
push
dec
sub
mov
inc
scas
jl
dec
es
gs
adc
sbb
jbe
ss
inc
pop
jg
jnp
loopne
call
add
xchg
inc
xor
daa
xor
xor
mov
xchg
xchg
push
int3
xchg
jb
add
sub
adc
push
dec
adc
xor
cmp
adc
je
pusha
push
pop
jl
inc
dec
cmpsb
push
pop
fstpt
pop
movsl
sub
test
stc
out
jle
sub
je
fwait
mov
rcr
jecxz
xor
mov
rorl
adc
int3
mov
inc
les
push
cmp
mov
xchg
xor
mov
ficoms
xor
mov
dec
arpl
jg
sub
rclb
pop
cmp
aas
xchg
or
jge
inc
push
idiv
gs
pushf
adc
push
flds
call
mov
xchg
sub
pop
xchg
sarl
lcall
pop
lret
dec
adc
xchg
xor
ljmp
mov
popf
sub
hlt
push
out
aas
add
idiv
dec
push
mov
mov
idiv
push
cmp
dec
mov
movsb
add
or
xor
test
jns
repnz
mov
sub
stos
dec
adc
arpl
xor
lcall
mov
jecxz
loopne
je
and
pop
repz
insl
push
out
dec
pushf
enter
sbb
out
data16
outsl
fmuls
loope
into
mov
inc
lret
es
mov
push
aas
push
push
loope
fsubr
in
imul
ljmp
shll
in
and
mov
pop
sti
adc
inc
or
mov
popf
dec
idivb
inc
nop
cmp
cmp
mov
jmp
jecxz
pop
sbb
lock
in
stos
stc
mov
int
mov
rcr
imul
push
mov
mov
push
jp
push
and
push
mov
das
and
push
adc
pop
xor
sbb
fs
fidivl
jg
call
xchg
mov
int
out
jmp
mov
push
pop
mov
cmp
scas
ss
jae
push
jl
mov
add
cmp
adc
pop
mov
xor
and
sbb
fwait
mov
adc
adc
lea
mov
xchg
in
dec
and
push
jb
popa
in
idivl
sub
add
push
pop
inc
pop
cli
fdivp
pusha
rorb
subb
sbb
xchg
inc
push
insb
popa
push
rcll
push
in
lcall
dec
cmc
pop
jl
scas
aas
pop
jns
jbe
jecxz
fbstp
mov
and
lret
gs
push
dec
jae
rorl
pop
mov
cmpsb
add
int
iret
jns
stos
pop
jmp
subb
arpl
rorl
add
mov
cmpsl
jb
add
mov
jne
addl
mov
arpl
jbe
nop
outsb
and
mov
push
mov
les
mov
push
dec
xor
adc
mov
movsb
lret
or
xchg
aam
addr16
lcall
out
sub
ja
mov
jae
fldcw
loop
movsl
xchg
aas
divl
stos
in
push
or
lock
fwait
cmp
jmp
sahf
push
pop
add
jg
test
ljmp
adc
push
push
roll
mov
pop
xchg
fstps
xchg
imul
mov
xchg
adc
out
jne
dec
enter
outsl
out
add
out
adc
jmp
lods
mov
xchg
addr16
arpl
int3
mov
movsb
sarl
lahf
fs
inc
inc
sub
sub
lock
movsl
pop
push
lret
cmp
cmp
insl
mov
fsubrp
mov
gs
in
mov
loopne
imul
mov
inc
sbb
idivb
xchg
xor
addr16
push
data16
adc
insb
adcl
sub
sub
das
sbb
cmc
push
mov
dec
aaa
xchg
mov
mov
and
mov
jmp
lock
mov
arpl
adc
subb
or
mov
mov
int
in
push
pop
ljmp
xor
push
outsl
adc
xchg
stos
pop
mov
xor
dec
mov
xor
adc
push
and
mov
lahf
scas
xchg
jbe
repnz
bound
bound
fsubrs
aam
dec
push
gs
popa
scas
lds
icebp
sub
or
cmp
mov
push
jo
jl
jg
jne
das
out
xor
ret
fdivrs
jno
add
inc
xor
push
loopne
push
out
cmp
sub
lret
pop
stos
jmp
lods
jg
jne
bound
push
inc
jg
mov
push
dec
scas
pop
mov
hlt
lods
cs
xchg
cltd
test
push
pushf
add
rcll
and
sub
ret
xchg
stos
lea
mov
mov
std
mov
setae
jne
mov
xchg
pop
lds
pop
mov
in
sub
hlt
jnp
pop
push
push
je
movsl
outsl
xor
fld1
shrb
or
aas
mov
daa
mov
jg
or
cmp
xchg
mov
sbb
sahf
or
int
sub
pop
pop
sub
mov
shll
push
xchg
adc
push
xchg
into
shlb
pushf
notb
mov
mov
repz
lret
stos
outsb
adc
jns
mov
fdivl
leave
cmpsl
xor
lea
iret
scas
push
sub
inc
pop
fisubl
push
divb
out
pusha
cmpsb
std
fdivrl
xor
scas
and
sub
ror
outsb
in
scas
mov
daa
imul
notl
movsl
push
sahf
inc
es
outsl
sahf
push
mov
mov
xor
push
adc
push
sub
jno
sti
nop
js
out
push
jns
cmp
test
aaa
sub
pop
dec
ja
test
jo
mov
pop
and
jp
mov
xlat
cmc
push
push
andb
ds
cmp
shlb
out
or
xor
dec
mov
test
jo
orl
add
leave
push
jnp
inc
add
mov
aad
pop
rcr
sub
ss
lods
je
dec
inc
mov
outsl
inc
mov
add
mov
jecxz
mov
add
clc
inc
xchg
xchg
add
imul
xor
push
fucomi
sub
push
shrb
stos
xor
jne
xchg
das
scas
xchg
mov
mov
inc
inc
push
xchg
jmp
lret
pushf
push
fildll
sbb
inc
or
mov
ljmp
jno
mov
es
popf
mull
xchg
jle
xor
push
icebp
fwait
pop
daa
inc
js
cmp
push
sbb
cwtl
and
mov
pop
xlat
mov
push
lea
adc
inc
jb
pop
mov
movsl
fnstcw
push
mov
fnstcw
or
loopne
jne
inc
movsb
pop
leave
dec
clc
lea
sbb
fdivl
loopne
andl
data16
pop
xchg
adc
js
cmp
adc
imul
adc
insb
push
pop
pop
or
int
push
mov
ja
adc
push
popf
mov
mov
add
and
xor
fimuls
and
mov
std
fcomps
andl
and
imul
or
adc
sub
adc
fdiv
in
cmpsb
addr16
std
add
lret
sti
incl
fbstp
loop
sahf
nopl
fnstsw
fs
push
sub
mov
xchg
sub
sbb
mov
xchg
icebp
cwtl
les
sbb
mov
loopne
inc
loop
sub
sbb
into
stos
mov
pop
aam
in
and
sbb
leave
insb
jg
loop
inc
push
sahf
adc
xor
xchg
mov
inc
call
pop
aas
jmp
pushf
mov
mov
cmp
xor
das
jecxz
dec
in
ret
or
sbb
lcall
and
cmp
in
int3
pop
pop
pop
arpl
sahf
adc
dec
or
add
xor
pop
aaa
mov
mov
add
loop
cmpl
sbb
pop
sub
aaa
sub
into
jge
movsl
jle
pop
dec
xchg
icebp
inc
mov
xor
and
test
mov
cmp
pop
sbbb
cwtl
jae
xchg
out
enter
jo
push
test
pop
fcoms
mov
icebp
mov
lds
xlat
pop
jle
ss
movb
push
mov
out
adc
int
xlat
mov
stos
icebp
jns
dec
or
sub
jmp
xchg
dec
xor
push
insl
cs
lods
push
test
mov
add
xchg
lret
cmpsb
inc
xchg
adc
mov
lea
sahf
mov
test
int3
dec
dec
mov
mov
jmp
push
filds
adc
inc
add
out
or
das
lcall
aad
xchg
testb
sbb
or
dec
cmp
jne
fcompl
pop
in
add
jbe
or
scas
cmp
push
cwtl
shlb
cltd
adc
out
jno
xor
scas
gs
mov
mov
xchg
stos
rolb
shll
and
jns
imul
or
out
dec
jns
cmc
dec
dec
mov
xor
add
call
add
push
or
fdivs
pop
je
add
pop
and
add
pop
aad
adc
pusha
pop
pop
ret
test
mov
cmc
pop
pop
daa
push
inc
jns
je
push
aam
mov
repz
mov
movsl
and
mov
or
xchg
or
xchg
ds
xor
pop
and
scas
mov
dec
xchg
mov
cli
push
cmp
jo
jbe
shl
in
jnp
rcrb
frstor
cmp
dec
jg
mov
add
leave
jnp
repnz
test
inc
imul
sbb
jae
out
push
sub
cmpsl
enter
push
pop
push
xchg
and
xchg
es
repnz
jg
fimull
addr16
xchg
movsl
pop
push
push
adc
sub
and
mov
cmc
test
movsl
sbb
cmp
xchg
outsl
pusha
clc
fwait
arpl
fmuls
bndstx
pop
into
lods
sbb
in
in
dec
jmp
jle
or
loop
lahf
test
rcl
mov
in
dec
mov
cmpsl
arpl
push
add
insb
sahf
pop
adc
stc
stos
jecxz
xor
popa
add
add
aaa
lock
das
jp
shr
sub
jnp
jl
add
pop
xchg
and
das
xchg
push
inc
pop
adc
push
in
mov
loopne
sbb
cmpsb
sub
or
mov
jo
ret
test
add
sbb
fimull
adcl
fldl
leave
nop
pop
scas
inc
xchg
pop
pop
jb
jb
loope
movsb
cmp
sbb
les
cmp
scas
push
mov
ret
aam
mov
scas
adc
and
int
cmc
pop
mov
sbb
mov
mov
lods
scas
daa
push
fimull
mov
fs
lods
fisubrs
stc
pusha
ret
adc
xlat
scas
jp
stc
fidivrl
dec
into
push
push
xor
and
ja
xor
test
push
lock
xchg
add
mov
enter
sub
adc
cli
push
int3
fmull
pop
mov
jl
popa
mov
push
popa
scas
xor
xchg
mov
push
fcmovbe
push
cmpsl
mov
sub
sub
push
dec
cmp
lea
je
adc
insl
test
loop
push
xor
sti
es
mov
std
leave
pop
incb
mov
cmp
sub
fldt
fldt
incl
lods
into
fisttps
mov
testl
jge
dec
movsl
nop
sbb
dec
pop
and
adc
pop
mov
jecxz
xchg
mov
sbb
out
push
ret
xchg
fmull
sub
mov
cld
bound
fistps
test
inc
popf
outsl
sti
das
mov
scas
cwtl
das
popf
mull
inc
je
sub
jle
or
test
xchg
mov
mov
into
testb
test
jae
push
jo
dec
lahf
sub
add
cli
std
xor
and
sbbb
lret
sub
das
add
enter
dec
mull
pop
mov
cmpsb
cld
fs
popa
adc
adc
in
inc
mov
dec
xor
cs
xchg
lret
xchg
imul
dec
mov
mov
pusha
cmp
push
repz
ret
jmp
add
sub
push
xor
mov
jge
movl
iret
add
ss
sub
daa
inc
out
in
jle
xchg
es
mov
or
pop
es
adc
add
xchg
int
mov
lock
sbb
xchg
fs
sub
mov
sbb
out
jmp
and
push
ds
add
mov
cli
test
mov
rolb
mov
dec
inc
rcrl
cmc
sbb
mov
mov
mov
push
mov
or
je
jle
add
cwtl
push
fnstcw
imul
adc
imul
cld
in
mov
xor
add
dec
xchg
cmp
adc
jle
int3
xor
mov
dec
cmp
sahf
loope
or
sub
push
xchg
push
mov
and
xchg
inc
xchg
pop
and
xchg
gs
cltd
mov
push
out
add
ficoms
xor
cmp
lods
or
call
lret
pop
repz
ja
in
cltd
and
inc
inc
add
mov
daa
cmp
or
shl
xchg
fcom
adc
cmc
mov
adc
push
dec
int3
arpl
ret
test
leave
sarl
pop
add
repnz
cmp
mov
loop
scas
push
push
imul
dec
jbe
aaa
dec
jno
mov
cmp
pop
mov
jmp
lods
lcall
das
add
test
inc
daa
bound
cmp
and
inc
or
adc
jo
pop
jp
mov
xor
jne
insl
scas
lcall
mov
xchg
clc
pop
inc
jp
outsb
xor
clc
cmp
out
mov
pushf
sti
mov
or
cmc
push
icebp
cmpb
adcb
pop
les
ja
pop
adc
jb
xor
jle
add
add
adc
sub
out
lret
mov
lds
movsb
inc
xor
mov
mov
frstpm(287
mov
shlb
leave
xchg
lea
jbe
lcall
pop
imul
lea
push
cmpsl
or
push
loop
int
sbb
test
pop
xor
sbb
or
scas
xchg
jae
dec
mov
sbb
lret
push
test
inc
jne
pop
push
jae
ret
adc
push
out
aad
push
nop
sbb
mov
idivl
mov
test
lea
push
aas
pop
adc
pop
sbb
and
jne
mov
xchg
mov
push
aas
cli
sub
mov
dec
adc
cmp
push
jbe
xor
test
lods
js
leave
or
and
mov
and
cmp
sub
push
cmp
sub
push
cs
hlt
lods
lahf
or
iret
fwait
push
inc
inc
imul
das
mov
or
inc
mov
mov
fsubl
pop
aaa
outsb
mov
xor
inc
popf
dec
cmc
add
ljmp
les
push
sti
xchg
inc
or
and
mov
rolb
arpl
jp
mov
push
xchg
cmpl
adc
or
cld
sbb
jno
jecxz
mov
add
jne,pt
cmp
add
shrb
fidivl
jle
xchg
or
xchg
test
xchg
push
or
loope
adc
aas
cltd
jbe
xchg
or
popf
pushf
movsb
je
xlat
inc
aam
and
subb
repz
loope
cmp
pop
push
pop
lock
pop
jp
or
dec
and
pop
add
outsl
inc
jno
adc
inc
cmpsl
inc
popf
dec
or
bound
push
ds
dec
add
pop
sub
xchg
ret
mov
or
dec
insl
icebp
sbb
jo
test
jns
shll
iret
aas
sbb
dec
imul
mov
sub
dec
loopne
inc
push
fistl
and
shrl
add
addr16
popf
add
cltd
push
sbb
sub
lret
sub
sti
scas
js
mov
push
pop
sub
daa
and
xchg
imul
cmp
fwait
das
in
xchg
pushf
cmp
lret
testb
inc
pop
xor
jmp
mov
sbb
ja
mov
adc
dec
imul
scas
push
mov
add
add
lock
push
xlat
inc
and
mov
in
pop
and
outsb
sub
push
or
jne
xchg
mov
cmp
sub
add
int
dec
mov
les
xchg
or
mov
mov
push
push
fists
lds
jbe
js
outsb
dec
lods
js
nop
or
mov
in
cmpsb
pop
push
dec
mov
xchg
mov
pop
lds
std
push
mov
rolb
xchg
and
sbb
cmc
xchg
cmp
pushf
out
jmp
loop
dec
sbb
xor
lods
mov
xchg
mov
push
cs
imul
mov
add
or
mov
cmp
jge
shl
cmp
movb
adc
xor
or
orl
fucom
cmp
dec
sbb
push
test
inc
xchg
movsb
sbb
push
pushf
lods
mov
fmuls
push
xchg
adc
and
icebp
or
into
cmpsb
xor
xor
test
jbe
inc
data16
mov
mull
dec
xchg
push
rcll
lods
cmp
mov
aaa
jmp
bound
push
andps
pop
lods
movsl
mov
dec
xor
stc
in
scas
jle
call
pop
sub
mov
addr16
pop
jge
scas
xor
das
and
fs
jne
aad
sahf
das
sub
add
gs
xor
pop
mov
movsl
aas
adc
dec
xor
aaa
cmpsl
sub
aad
loop
xor
mov
and
int
aaa
jl
pop
sti
sub
nop
outsl
mov
inc
sub
test
sub
loop
xchg
cmp
adc
insl
adcb
into
push
pop
shrb
and
ret
cmp
outsb
sub
jbe
ret
sbb
ds
pushf
aaa
mov
cmp
cli
loope
ljmp
xchg
pop
pop
pop
and
push
ljmp
or
inc
pop
or
mov
mov
clc
outsb
fcoml
test
push
add
adc
rcl
iret
sahf
sbb
pop
or
mov
mov
mov
mov
jle
in
test
lock
xor
xor
gs
imulb
sub
and
add
fcmovne
sahf
pop
fldcw
adc
mov
inc
mov
add
sbbl
xor
jmp
subl
add
fcmovbe
fidivl
mov
cmp
je
xor
out
mov
inc
mov
andb
dec
movsl
push
js
into
lcall
sub
es
mov
pop
fisttpl
mov
std
mov
les
fwait
test
fmul
xchg
cmp
clc
pop
inc
add
ds
lahf
jmp
inc
movaps
je
sbb
push
sub
jae
movsl
scas
jnp
outsb
mov
push
sbb
xchg
dec
or
sub
call
jo
sub
mov
cmp
in
cs
sub
sbb
fistps
push
lea
sahf
push
std
sahf
gs
xchg
fs
out
inc
adc
das
hlt
data16
test
popf
cmp
fnsetpm(287
insl
push
mov
mov
insb
xor
or
iret
loopne
pusha
cmp
in
lds
cwtl
repz
dec
test
sbb
xorb
fcomps
fcomps
shr
jp
dec
sahf
push
data16
aam
or
adc
js
push
outsl
lds
ja
lret
or
shl
add
je
xchg
fildl
jnp
sub
imul
xchg
movsl
cld
fdivrp
cmpsl
imul
sub
lods
xchg
push
sub
in
jns
dec
dec
mov
addr16
stc
sbb
adc
inc
in
sbb
adc
cs
push
jge
mov
cmpl
out
shl
push
sub
jb
mov
rep
movb
and
mov
dec
shlb
pop
xchg
loop
jecxz
rcll
mov
mov
dec
scas
addb
ret
out
sbb
sbb
push
movsl
cmp
lods
stos
xchg
adc
push
ret
xor
test
std
and
popa
lods
lcall
gs
lret
sbb
dec
jp
push
and
jmp
ja
in
or
cmc
pop
sub
mov
fists
out
dec
mov
inc
sbb
pusha
lock
cmpsb
sub
cmp
jmp
es
pop
xchg
lods
in
sub
jp
jae
cmc
xor
or
pop
lock
adc
push
test
sarl
push
dec
insb
or
bound
iret
and
mov
push
pop
push
and
sbb
fiadds
imul
lods
add
push
jge
cmp
mov
movsl
iret
sub
push
and
inc
mov
sbb
add
cwtl
dec
call
add
sbb
sub
push
pop
or
sahf
inc
ljmp
xor
sub
push
and
or
add
mov
mov
inc
mov
dec
clc
add
cwtl
ljmp
xchg
xchg
mov
aam
cmp
dec
fwait
push
and
fistpl
pop
roll
xchg
push
pop
sub
sarl
mov
sub
cmpsl
pop
inc
aas
dec
inc
pushf
mov
cmp
jns
aas
add
mov
cld
hlt
enter
xchg
adc
ret
mov
cmp
je
fildll
ss
mov
add
mov
and
imul
push
rcrb
push
fimull
repz
stos
ds
das
bound
std
popa
or
mov
jmp
mov
lock
icebp
or
sbb
sarb
repnz
inc
jb
test
in
loopne
popa
cmp
mov
aas
decl
xchg
inc
and
into
pop
cmp
mov
mov
push
dec
sbb
cmp
jb
mov
dec
pushf
fldcw
mov
add
decl
rcl
and
cmpsb
mov
sub
mov
dec
icebp
sahf
mov
nopl
adc
icebp
push
mov
cmp
dec
out
sbb
push
sbb
rorl
icebp
and
in
dec
stos
ficompl
jae
inc
dec
mov
cmp
in
push
dec
push
mov
mov
mov
pusha
xchg
addr16
push
ret
adc
xor
fsub
cmp
aaa
das
enter
fisubrs
clc
jecxz,pt
bound
pushf
add
ljmp
xchg
jl
ljmp
addl
pop
sti
stos
std
cld
loopne
in
lret
mov
mov
mov
mov
push
dec
test
dec
dec
xchg
cmp
mov
mov
jae
leave
insl
mov
fstp
out
inc
repnz
cltd
cs
insb
cmp
pop
mov
subb
xchg
sbb
sub
sbb
out
mov
aam
add
int3
jl
inc
and
jmp
cmpsb
mov
push
ss
push
outsl
in
push
sub
imul
jle
hlt
imul
out
imul
cwtl
pop
sub
sar
dec
insl
add
std
pop
push
add
adc
jge
pop
push
or
fisubrs
not
jnp
pushf
testl
repnz
aaa
js
repnz
pop
jne
jmp
das
ret
jae
cmc
scas
add
jnp
push
lods
add
xchg
int3
test
lret
xchg
and
xor
jbe
cs
popa
pop
rcr
dec
pushl
movsb
xlat
mov
enter
sbb
arpl
xchg
dec
outsb
push
out
or
into
sub
mov
push
sub
mov
xor
jl
add
sub
inc
cli
jno
sbb
cmp
in
jo
dec
mov
adc
subb
xor
int
insb
fadds
ret
ds
mov
pop
insb
pop
mov
sub
mov
int
or
mulb
test
imul
shlb
xchg
push
dec
idivl
dec
ret
out
lock
jno
lods
xor
lock
jle
addr16
sbb
xchg
add
fwait
mov
out
push
cld
fs
data16
jmp
xchg
imul
cmc
gs
mov
mov
pusha
push
dec
out
addr16
jge
xor
std
pop
cwtl
stos
leave
mov
jle
jge
outsl
clc
test
fwait
into
roll
mov
adc
in
inc
mov
jecxz
dec
mov
clc
clc
push
in
and
cli
int3
in
add
mov
clc
stos
subl
hlt
sbb
gs
out
push
aaa
addr16
fimull
pop
pop
aas
cwtl
stos
jge
mov
out
icebp
stos
xchg
dec
fsubrs
or
push
ds
xchg
inc
movsl
imul
fstpl
adc
add
push
dec
sub
xchg
mov
flds
add
data16
inc
jno
xchg
aam
cmp
mov
add
lods
stc
and
pop
pop
jne
imulb
sbb
lods
sbb
xor
sub
fnsave
push
cmp
mov
leave
or
mov
xor
iret
cmc
push
int
arpl
sub
leave
sahf
xchg
and
cmp
sti
mov
fisubrl
aam
cld
lea
fimull
data16
xchg
test
push
in
orl
mov
inc
jbe
cmpsl
push
push
xchg
mov
idivb
pop
je
orl
add
and
lds
mov
adc
lods
sub
inc
cmp
in
shll
push
jns
inc
lret
sbb
jle
into
pushf
jp
mov
pop
lcall
icebp
lret
insl
pop
js
inc
jmp
dec
test
xchg
push
sti
scas
popf
cmp
hlt
jmp
xor
jb
shlb
psubd
xchg
mov
adc
jmp
subl
cmpsl
inc
aam
jecxz
daa
jp
push
leave
push
das
in
jno
imul
aad
iret
push
fcompl
fiaddl
iret
icebp
mov
xor
call
cltd
mov
nop
movsb
idivl
les
daa
stos
jle
addl
mov
lahf
push
adc
xor
mov
aad
or
lret
jle
fiadds
push
inc
sbb
push
sbb
inc
or
xchg
scas
scas
push
cmp
ja
add
push
stos
cmp
xchg
int3
inc
jae
mov
jne
jge
rcll
pop
mov
roll
mov
xor
mov
inc
xchg
jae
out
cmp
int
jnp
es
lods
mov
pop
pusha
push
lock
or
sbb
push
sahf
sbb
fnstenv
xor
ficoms
mov
or
inc
mov
mov
add
out
mov
inc
stc
in
lods
dec
jno
je
repnz
aas
aas
mov
out
addl
adc
cltd
push
pop
push
fcomi
pop
fcmovb
pop
clc
repz
inc
dec
push
jb
fbstp
pop
hlt
push
lods
enter
jns
and
cmc
add
iret
leave
push
cli
and
push
inc
lock
fdivrs
mov
xchg
jecxz
ljmp
add
clc
dec
shrl
aam
loop
movsl
cwtl
cmp
jge
icebp
dec
mov
cwtd
testb
sbb
mov
inc
pop
pusha
arpl
add
insl
aad
xor
std
insl
cmpsb
idivb
xchg
add
lahf
pop
cmc
dec
adc
repnz
cmp
inc
or
inc
lahf
out
and
loop
pusha
das
popf
adc
jne
and
cs
movsb
mov
sub
in
cmp
jle
mov
adc
scas
xchg
and
xor
mov
addb
mov
push
xchg
je
ret
push
xchg
jo
sbb
pop
or
dec
push
out
cli
sti
pop
ja,pt
clc
in
mov
add
test
fisubrs
and
imul
and
dec
dec
or
and
xor
dec
in
fdivr
add
mov
sub
mov
add
imulb
shl
mov
sub
dec
cli
mov
sarb
and
cmp
add
pop
mov
sbb
into
pop
sahf
cmp
jnp
stos
rcrl
jl
insb
push
clts
fisttpll
dec
das
push
push
sahf
push
nop
lcall
fnstcw
cmp
je
mov
je
incl
imul
mov
add
mov
enter
cmp
push
adc
adc
aas
cmpsb
outsl
mov
cmp
nop
pop
fwait
roll
inc
pop
ss
or
sbb
divl
mov
inc
and
mov
out
mov
and
imul
data16
shrl
sub
cmpsl
imul
movsb
mov
sub
out
push
lock
sbb
add
dec
inc
lods
sbb
das
jg
repz
and
lret
test
fildl
adc
push
jbe
nop
xor
and
andb
ss
loope
addr16
sub
mov
mov
shr
fwait
movsl
sbb
push
jmp
lret
stos
sub
xchg
mov
sub
inc
and
pop
adc
ret
addr16
pop
pop
das
flds
xor
push
mov
stos
arpl
hlt
sar
jmp
mov
jecxz
and
sti
xchg
jno
js
cmp
push
insl
mov
jge
mov
aam
xor
mov
mov
pop
sbb
movsb
sbb
inc
aad
sub
cwtl
add
jne
xchg
leave
jne
add
dec
cmp
mov
mov
icebp
int
and
mov
lods
xchg
testb
std
dec
xlat
in
push
lcall
cmp
mov
and
jnp
xor
inc
dec
push
fnstenv
mov
xchg
imul
jnp
mov
sbb
dec
xchg
jb
dec
lea
and
mov
jae
dec
aas
mov
pusha
fs
push
inc
scas
shll
pop
insl
cmpb
mov
das
das
insb
es
mov
jg
clc
mov
int
shlb
jne
mov
out
rcrb
out
dec
push
sbb
and
movsl
xchg
shrl
mov
dec
leave
test
mov
add
dec
loop
push
add
ljmp
mov
sbb
sbb
mov
movsb
push
dec
lahf
mov
jns
push
inc
aam
or
add
arpl
stos
ret
scas
stos
pop
jp
mov
xchg
lds
addr16
sub
sub
filds
lea
icebp
leave
rclb
dec
mov
lock
xor
push
sub
sti
lahf
xchg
loopne
add
jp
cmp
sub
gs
jp
jmp
xchg
js
push
xchg
and
mov
loop
test
call
out
fstps
out
jp
fmulp
sub
in
xchg
mov
rclb
push
push
aad
test
out
xlat
rol
repz
rcll
xchg
movl
repnz
into
adc
mov
pusha
lret
cmp
cltd
aaa
or
dec
jbe
and
ret
mov
dec
pop
mov
jns
sub
cltd
repz
call
jns
jp
add
add
add
mov
int
call
pop
lret
lret
arpl
int3
int
in
pop
pop
jmp
popa
in
iret
out
out
out
out
int3
arpl
enter
pusha
leave
int
int
out
pop
ljmp
pop
pop
pusha
int3
add
out
enter
iret
lret
out
popa
rcrl
into
add
add
pop
call
pop
out
int
out
add
add
sar
lcall
add
int3
call
add
add
add
add
int3
add
iret
int
leave
pop
in
out
enter
in
int3
add
int3
out
out
arpl
int
add
mov
add
pop
jmp
add
pop
add
int3
int3
lcall
jmp
out
lret
add
add
add
int3
int3
add
add
jmp
pop
lret
add
pop
pop
ror
rcrl
out
add
add
add
out
int3
pop
pusha
out
add
add
pusha
pop
enter
lret
arpl
into
leave
lret
in
int
pop
jmp
lret
mov
mov
enter
jmp
jmp
jmp
decl
lret
pop
pop
in
pop
lret
ljmp
add
mov
pop
add
in
arpl
call
jmp
add
incl
add
ljmp
ljmp
into
int3
pusha
jmp
pop
pop
leave
int3
pop
ror
pop
ljmp
add
int3
into
in
out
in
pop
arpl
pop
dec
pop
rcrb
rcrb
pop
pop
pop
shl
enter
iret
ljmp
pop
iret
jmp
shr
pop
mov
pop
pop
iret
leave
jmp
out
out
pop
incl
jmp
shr
pop
incl
add
add
incl
out
out
enter
leave
arpl
arpl
call
pop
pop
popa
pop
in
int3
add
mov
pop
ror
in
pop
out
incl
jmp
in
arpl
add
add
jmp
int3
into
jmp
add
add
decl
lret
out
shr
add
jmp
out
pop
out
pop
in
mov
add
int3
add
popa
enter
pusha
pop
shlb
int3
int
enter
dec
call
pop
pop
add
pop
pusha
iret
int3
in
in
pop
leave
add
arpl
int3
out
arpl
pop
int3
popa
out
popa
int
pusha
jmp
int
shr
lret
shr
pop
ror
leave
pop
enter
int
out
pop
int3
int
jmp
jmp
int3
lret
pop
ljmp
pop
add
enter
pop
pop
pop
add
in
jmp
lret
pop
enter
into
lret
ljmp
int
enter
call
into
int3
in
pusha
iret
jmp
pop
mov
leave
into
out
add
iret
in
enter
int3
pop
arpl
lret
int3
shr
enter
jmp
add
into
enter
add
add
add
into
jmp
pop
ljmp
into
iret
rcrl
add
int3
jmp
pop
mov
pop
popa
pusha
ljmp
iret
enter
int
jmp
pop
arpl
in
arpl
lret
lret
out
int
arpl
jmp
ljmp
pusha
popa
add
add
add
int3
mov
lret
popa
add
add
in
in
iret
lret
pop
pop
mov
into
out
pusha
out
pusha
out
iret
int
lret
pop
out
pop
pop
pop
in
iret
lret
int
shr
out
add
mov
ror
int3
lret
iret
ror
arpl
ljmp
jmp
in
enter
pop
popa
call
ljmp
in
iret
jmp
int
jmp
arpl
rcrb
mov
add
mov
iret
lret
leave
int
arpl
pop
pop
int
into
pop
out
mov
add
add
call
lret
out
bound
mov
add
add
pop
bound
out
pusha
pop
pop
pop
in
pop
int3
int3
mov
out
bound
rcrl
call
bound
pop
call
call
out
pop
in
jmp
pusha
pusha
iret
call
add
mov
add
pusha
pop
leave
lret
pusha
in
lret
enter
pop
out
lret
add
rcl
in
lret
int
out
pusha
rolb
add
leave
pop
pop
iret
pop
int
int3
incl
add
in
arpl
popa
leave
out
in
pop
add
in
pop
add
ljmp
pop
in
out
lret
leave
add
pop
into
pop
popa
int
pop
enter
out
add
lret
popa
pusha
int
in
pop
rcl
add
add
add
add
out
ljmp
leave
popa
arpl
call
pop
out
into
out
add
int
pop
add
pop
arpl
enter
bound
int
lret
add
popa
jmp
out
mov
pop
pop
into
shr
add
jmp
popa
out
enter
out
add
pop
add
out
iret
enter
out
enter
mov
add
out
enter
out
int
leave
popa
call
add
lret
ljmp
arpl
lret
incl
add
lret
int
call
ljmp
jmp
jmp
pusha
pop
enter
dec
out
pop
pop
lret
add
call
pop
shr
into
jmp
pop
into
out
add
pop
out
lret
in
iret
mov
into
in
pusha
popa
jmp
lret
lret
iret
shr
ljmp
int3
call
lret
jmp
pop
iret
iret
int
pop
popa
pop
arpl
add
pop
ror
popa
enter
leave
lret
in
bound
add
add
int3
in
pop
pop
popa
pop
lret
pop
int
pop
pusha
iret
ljmp
mov
jmp
enter
into
pop
enter
call
lcall
pop
enter
call
arpl
out
pop
lret
in
pop
out
out
lret
out
rcrl
add
out
out
out
pop
int3
pop
int
pusha
int
pop
int
pop
iret
lret
out
incl
add
add
ljmp
out
in
into
int
call
jmp
in
in
pop
shr
jmp
pop
rcl
enter
shlb
into
jmp
pop
add
into
pusha
out
in
ljmp
jmp
arpl
pop
arpl
pop
popa
iret
add
add
jmp
iret
pop
pop
pop
incl
rcrl
in
lret
popa
int
add
pusha
lret
pop
into
into
jmp
jmp
in
ror
add
pusha
enter
pop
arpl
add
int3
call
leave
out
in
out
lret
in
pop
leave
ror
ljmp
jmp
int3
out
in
int
pop
jmp
add
shlb
jmp
leave
in
call
in
pop
int3
out
jmp
iret
lret
pusha
enter
lret
pop
ror
pop
add
iret
out
out
jmp
lret
enter
jmp
bound
pusha
call
in
in
out
int3
leave
in
arpl
int3
add
add
add
ljmp
ror
out
add
out
jmp
int3
out
popa
in
enter
jmp
leave
out
shr
in
pop
shll
int3
int3
add
leave
pop
lret
lret
out
bound
in
call
call
jmp
pop
out
pop
in
pop
int3
add
add
dec
int
out
pop
int3
lret
jmp
in
lret
into
jmp
popa
add
int3
add
in
out
out
jmp
pop
into
add
mov
popa
pop
int3
out
lret
add
pop
pusha
in
out
ror
bound
int3
int3
lret
ljmp
dec
int
into
pop
shr
out
shr
jmp
lret
shr
arpl
add
add
jmp
popa
pop
iret
dec
out
int3
jmp
rcrl
out
add
add
add
pop
pusha
shr
enter
add
call
leave
pop
out
out
call
pop
out
ljmp
shr
call
ljmp
pop
leave
pop
out
jmp
mov
add
out
out
jmp
call
arpl
out
pusha
int
pop
pop
lret
in
add
add
dec
pop
out
in
popa
int
pop
pop
add
add
int3
arpl
out
ror
out
out
out
add
pop
bound
add
int3
pop
pop
pusha
int
pop
jmp
in
lret
pop
rcrl
out
out
lret
leave
arpl
int3
int3
into
int3
bound
in
into
add
lret
lret
pop
bound
add
pop
pop
popa
popa
in
jmp
add
pop
dec
int3
enter
pop
iret
jmp
in
pop
pop
int
lret
in
lret
pop
iret
add
out
pusha
in
enter
pop
add
int3
jmp
call
mov
leave
lret
add
popa
leave
int
in
pop
shr
incl
add
bound
pusha
pop
iret
shr
lret
ror
leave
int
in
out
pop
add
mov
jmp
pop
ljmp
out
out
in
int3
in
add
rcrb
leave
pusha
incl
add
add
out
shr
arpl
in
int3
out
in
shl
rolb
add
arpl
pop
jmp
add
mov
arpl
pop
iret
int
add
pop
int3
mov
add
add
call
pop
call
out
pop
ljmp
out
pop
in
enter
leave
arpl
jmp
out
into
pop
pop
enter
pop
arpl
ljmp
pop
lret
jmp
int3
enter
out
add
in
out
ljmp
pop
pop
pop
into
popa
pop
in
call
lret
ljmp
ljmp
pop
out
pop
int
pusha
pop
pop
pop
enter
pop
pop
popa
out
jmp
pop
out
into
ljmp
enter
lret
pop
pop
jmp
incl
mov
add
add
mov
lret
pop
call
add
pop
out
pusha
rcrb
jmp
add
add
out
iret
in
pop
int
pusha
ror
add
decl
out
jmp
pusha
out
add
add
out
incl
add
add
ljmp
add
add
in
shr
pop
pop
into
out
out
add
add
dec
add
arpl
jmp
in
leave
leave
int3
add
add
add
shr
arpl
leave
pop
add
add
jmp
add
add
pop
in
pop
add
add
add
add
in
pop
int3
add
mov
add
in
jmp
pop
out
jmp
out
lret
out
arpl
add
jmp
add
call
pop
pusha
pop
iret
int
shr
call
int3
mov
add
pop
int3
pop
out
ljmp
out
jmp
out
bound
out
popa
iret
in
pop
in
lret
out
add
rcrb
out
rcl
lret
int3
int3
leave
pop
lret
leave
lcall
leave
int
out
in
into
enter
add
int3
lret
pop
pop
pop
int
add
enter
ror
in
bound
pusha
add
pusha
ljmp
popa
rcl
pop
pop
enter
enter
leave
pop
arpl
leave
pop
lret
add
pusha
lret
pop
jmp
pop
popa
shr
into
add
lret
arpl
popa
mov
ljmp
popa
in
out
add
out
int3
add
out
pop
out
in
out
pop
out
dec
lret
ljmp
popa
arpl
pop
popa
lret
out
pop
into
enter
lret
in
int
mov
in
into
call
pusha
add
incl
add
out
ljmp
ljmp
jmp
in
add
ror
incl
incl
add
ror
arpl
pop
arpl
pop
bound
out
int3
jmp
pop
ljmp
pop
pop
bound
call
call
rolb
add
ror
int
into
pop
out
shl
jmp
in
pop
pop
enter
lret
into
shlb
in
arpl
leave
into
in
rcrb
jmp
iret
bound
out
add
pop
pop
pop
enter
jmp
add
pop
pop
out
pop
enter
mov
call
pop
pop
lcall
add
ljmp
popa
pop
pop
ljmp
pop
popa
call
in
jmp
out
add
add
bound
add
pop
in
iret
add
popa
out
call
pop
int
ljmp
lret
jmp
mov
jmp
out
add
int3
out
add
shll
add
shr
leave
in
arpl
pop
jmp
ljmp
mov
arpl
popa
in
jmp
pop
add
int3
add
add
jmp
enter
int
add
pop
out
lret
add
add
add
arpl
in
shr
jmp
in
jmp
call
int3
add
enter
pusha
out
in
incl
add
pop
popa
rcrb
iret
pop
pop
out
pusha
ror
iret
rcrb
pusha
leave
out
call
add
in
leave
arpl
pop
mov
add
lcall
in
add
mov
lret
pusha
add
int3
pop
lret
ror
iret
lret
arpl
out
iret
add
in
pusha
pop
leave
int3
popa
pop
ljmp
jmp
out
pop
pop
add
add
int3
pop
pop
ror
add
add
add
out
pusha
pusha
int
add
add
int3
add
pop
leave
lret
arpl
rcrb
int3
pop
out
lret
lret
add
add
jmp
pop
pop
ljmp
lret
out
out
pusha
int3
shr
iret
pusha
pop
popa
iret
pop
pop
lret
pop
int3
ror
int
leave
in
pop
pop
mov
arpl
shr
ror
out
lcall
out
add
out
pop
leave
ror
jmp
mov
int3
ljmp
in
popa
add
into
out
out
pop
lret
out
ror
shl
pop
pop
ror
pop
pusha
in
lret
pop
mov
jmp
shr
out
incl
ljmp
lret
in
pop
jmp
add
add
add
int3
pop
out
pusha
dec
out
ljmp
ljmp
pop
pop
shlb
jmp
pop
ljmp
pop
pop
out
popa
mov
pop
pusha
iret
pop
lret
out
pop
int3
int3
pop
add
int3
lret
pop
popa
add
arpl
ljmp
in
bound
pop
mov
jmp
add
shlb
pop
pop
lret
int3
pop
pop
jmp
out
pop
pusha
pop
out
in
popa
int3
pop
int3
pop
pop
out
lret
enter
shr
pop
arpl
pop
into
out
into
leave
into
enter
iret
out
arpl
mov
jmp
mov
out
in
in
jmp
add
lret
lret
add
add
add
leave
jmp
lret
lret
pusha
leave
arpl
rcrl
add
add
add
mov
mov
out
out
pop
leave
int3
enter
incl
add
int3
lcall
pop
leave
lret
add
out
in
out
pusha
popa
ljmp
mov
leave
popa
ljmp
ljmp
lret
jmp
shl
pop
jmp
lret
out
add
jmp
out
enter
pop
in
lret
add
add
add
add
into
add
pop
out
pop
pop
ljmp
call
rcl
iret
pop
int
pop
ljmp
ror
leave
call
add
mov
int3
add
add
incl
lret
out
out
arpl
lret
pop
add
pop
iret
pop
in
pop
in
arpl
add
into
arpl
lret
out
out
pop
int3
call
call
jmp
in
out
lret
enter
into
popa
iret
shr
in
iret
jmp
pop
add
add
add
pop
jmp
out
jmp
lret
into
leave
pop
lret
add
out
enter
lret
pusha
pop
int3
mov
pop
out
lret
into
in
pop
pop
pop
add
out
lret
pop
lret
shr
popa
jmp
int
add
enter
into
out
pop
popa
pop
pop
int3
add
iret
pop
pop
int3
call
int3
arpl
lret
add
int3
add
pusha
enter
out
in
int
rcl
add
pop
bound
add
int3
mov
popa
jmp
add
add
add
add
out
jmp
add
incl
add
int3
leave
pop
lret
pop
out
decl
pop
in
out
pop
out
pop
out
call
jmp
iret
pop
popa
int
lret
pop
in
lret
jmp
pop
rcrl
bound
out
jmp
out
pop
pop
add
pusha
popa
iret
call
mov
add
int
call
mov
add
pop
arpl
out
pop
out
call
in
shl
ljmp
out
ror
arpl
add
add
int3
mov
int3
decl
lret
out
pop
iret
arpl
shr
in
mov
shr
in
jmp
add
bound
arpl
pop
pop
in
bound
add
jmp
pusha
arpl
in
pop
pop
pop
mov
add
add
add
incl
add
pop
add
pop
leave
out
lret
add
jmp
leave
call
lret
in
leave
out
int3
add
ror
jmp
mov
arpl
lret
in
add
enter
add
add
in
int
rolb
add
add
add
add
mov
incl
int3
int3
mov
int3
add
add
pop
into
pop
int
add
pop
int
out
pop
pop
int
pop
roll
add
int
shr
add
mov
add
pop
pop
in
iret
pop
pop
pop
add
add
add
add
int3
arpl
in
int3
add
add
add
add
lret
leave
enter
int3
add
pop
out
bound
out
int
int3
add
in
shr
arpl
out
iret
int
add
add
leave
iret
into
int3
out
enter
out
pop
int3
popa
arpl
add
ljmp
lret
int
shr
into
ror
out
leave
pop
pop
in
pop
pop
out
ljmp
lret
add
int3
out
enter
out
out
leave
add
lret
int
pusha
pop
rcrb
shlb
add
mov
int3
out
shll
lret
enter
out
jmp
add
add
out
lret
add
mov
add
add
lret
out
pusha
pop
out
mov
shr
enter
int
ljmp
iret
ljmp
out
into
out
int3
add
add
pop
pop
shr
mov
popa
lret
lret
jmp
add
mov
jmp
enter
out
pop
lret
add
pop
pop
lret
pop
call
jmp
shll
arpl
add
out
enter
add
out
in
out
jmp
pusha
add
out
pop
dec
pop
pop
pop
int
in
int
ror
iret
int3
add
pusha
ljmp
into
out
out
out
out
add
add
arpl
ljmp
pop
pop
in
in
ror
enter
mov
shr
ror
ror
decl
add
int3
pop
decl
mov
add
leave
int3
out
ror
out
call
in
pop
in
call
lret
pop
add
shr
leave
lret
add
add
add
pop
int
iret
out
jmp
add
bound
lret
pop
jmp
ljmp
add
in
in
lret
out
leave
out
lret
out
ljmp
popa
jmp
arpl
into
rcrl
int
popa
arpl
in
int3
ljmp
add
pusha
int
add
add
in
jmp
lret
jmp
int
incl
arpl
add
incl
add
out
lret
jmp
int
dec
pop
shll
lret
lret
int3
out
lret
enter
call
pop
out
in
jmp
int3
pop
call
pop
pop
lret
out
enter
add
pop
jmp
into
arpl
add
add
add
add
add
pusha
in
pop
int3
in
jmp
add
add
into
pop
call
leave
ror
add
dec
pop
lret
mov
add
add
add
in
pop
ljmp
mov
pusha
arpl
pop
jmp
ror
into
enter
add
enter
int3
in
leave
pop
out
int3
add
lret
lret
mov
add
add
int3
out
ror
lret
add
out
int3
jmp
int3
add
int3
in
rcl
jmp
leave
int3
iret
pop
out
jmp
pop
lret
lret
add
in
lret
call
int
add
incl
add
add
call
out
add
add
mov
add
bound
jmp
lret
add
popa
enter
ror
leave
pop
in
pop
jmp
pop
iret
jmp
out
bound
int3
add
int3
pop
out
int3
add
add
jmp
out
enter
dec
add
add
add
pusha
pop
lret
int
out
mov
leave
iret
popa
in
out
call
jmp
pop
enter
pop
pop
ror
into
lret
jmp
ljmp
iret
int
mov
call
lret
in
pop
call
popa
into
out
in
pusha
out
ror
out
leave
shlb
int
shll
pop
iret
in
out
pop
pop
pop
popa
in
arpl
pop
in
out
add
add
add
int3
ror
ljmp
add
pop
out
int
in
pop
arpl
in
pop
pop
ror
pop
out
out
pusha
pop
in
int
int
out
out
enter
add
pop
in
call
in
out
popa
iret
jmp
int3
lret
int3
shr
pop
int3
add
add
mov
add
in
iret
mov
into
rcrb
enter
add
int3
shr
into
enter
out
iret
out
jmp
jmp
pop
out
add
add
int3
dec
jmp
pop
ljmp
int3
jmp
mov
add
add
ljmp
out
leave
lret
int3
call
int3
add
mov
jmp
out
shr
in
pusha
call
mov
add
jmp
iret
popa
int
pusha
add
jmp
shl
in
in
out
pop
shl
pop
jmp
jmp
into
pop
pop
arpl
pop
pop
enter
out
leave
ljmp
add
pop
in
pop
enter
pop
ljmp
arpl
pop
int3
add
out
arpl
add
pop
iret
out
rcrb
pusha
pop
pop
out
add
incl
add
leave
out
arpl
popa
popa
pop
out
rolb
lret
pop
pop
ror
pop
lret
ljmp
mov
shll
arpl
add
in
int
pop
iret
out
in
mov
pop
into
rolb
add
in
add
add
add
pusha
out
shr
leave
leave
add
add
add
popa
add
out
pop
add
arpl
iret
ljmp
add
add
ljmp
in
iret
int3
pop
int3
bound
int
enter
rcrb
into
jmp
ljmp
ljmp
in
ljmp
lret
in
lret
pop
pop
pop
pusha
out
into
ljmp
out
iret
pop
out
mov
pop
rcl
pop
rcl
pop
pop
int3
add
mov
mov
pop
ror
popa
out
pop
enter
pusha
leave
int
pop
shr
pop
popa
in
jmp
pop
lret
out
incl
out
in
call
jmp
ljmp
out
out
arpl
int3
add
add
pop
pop
int
iret
arpl
popa
enter
into
pusha
bound
leave
pop
iret
pop
out
mov
out
pusha
pop
pop
out
out
in
int3
pop
pop
into
in
enter
pop
in
out
lret
out
call
pop
popa
out
out
in
ljmp
into
out
rcrb
arpl
pop
in
int
leave
int3
leave
out
pusha
leave
mov
popa
out
into
into
out
pusha
leave
add
int3
incl
add
add
pop
out
add
jmp
int
add
add
int3
jmp
into
int3
iret
jmp
in
out
pop
in
out
ljmp
pop
pop
in
call
jmp
enter
pusha
int3
int3
int3
add
call
add
pusha
in
add
pop
out
ljmp
iret
out
pusha
pop
pusha
out
out
pop
pop
mov
out
pusha
arpl
add
mov
pop
lret
shr
jmp
arpl
pop
pusha
out
int3
lret
popa
add
mov
out
leave
iret
pop
jmp
mov
call
pop
add
pop
int3
out
enter
ljmp
add
out
pop
ljmp
arpl
pop
out
mov
int3
mov
add
add
add
int
ljmp
lret
enter
lret
pop
enter
popa
lret
incl
add
into
out
enter
popa
pop
pusha
popa
out
pop
jmp
lret
in
lret
pop
shr
lret
int3
pop
pop
int3
out
int3
leave
jmp
int3
add
add
add
add
shr
add
pop
in
out
rcrl
out
pop
int
incl
pusha
out
popa
enter
in
out
int3
jmp
lret
add
int3
add
add
out
jmp
popa
int3
in
in
pop
rcrb
pop
call
mov
into
lret
enter
out
popa
shlb
arpl
add
lret
lret
int3
lret
call
arpl
in
pop
enter
int
arpl
pop
add
popa
popa
int
lret
leave
pop
enter
out
int
add
int
mov
leave
enter
pusha
out
jmp
call
pop
jmp
pop
add
int3
enter
pop
ljmp
in
in
add
mov
add
int3
pop
pusha
iret
jmp
mov
pop
call
out
in
in
rcrb
int
pop
shr
jmp
pop
pop
lret
popa
iret
enter
decl
add
pop
pop
pusha
pop
pop
pop
popa
pop
pop
pop
call
into
mov
pop
pop
pusha
pop
leave
pop
in
pusha
lret
out
into
out
add
out
into
out
ljmp
pop
pop
shr
out
int
out
enter
mov
add
pop
out
pop
into
bound
in
pusha
iret
pop
pop
out
ljmp
pop
out
ror
in
popa
out
pusha
int3
pop
in
pop
pusha
int3
call
iret
pop
add
int3
mov
arpl
jmp
pop
enter
into
popa
in
iret
rcrl
enter
mov
into
pop
in
ljmp
out
pop
int
out
add
in
in
dec
iret
bound
out
leave
in
pop
out
pop
pop
add
add
pop
add
pop
arpl
pop
jmp
add
add
add
incl
add
mov
in
jmp
pop
pusha
add
add
shr
in
int
int
call
add
pop
into
lret
iret
int3
into
in
int3
add
add
int3
add
add
add
jmp
jmp
out
in
jmp
pop
in
enter
add
mov
out
call
add
ror
pop
pop
iret
in
ljmp
leave
out
pop
in
in
jmp
pop
add
add
pop
int3
int
popa
leave
lret
jmp
pop
rcrb
bound
int3
leave
int
pop
mov
add
lret
pop
mov
rcrl
dec
pop
jmp
jmp
in
leave
int3
out
in
add
add
out
popa
jmp
add
call
add
add
leave
enter
call
popa
add
bound
lret
iret
add
int3
add
out
enter
pop
int3
enter
into
int
in
rcrl
call
rcrl
enter
pop
arpl
pusha
shr
add
pop
popa
pop
arpl
lret
out
bound
out
out
in
out
jmp
jmp
pusha
shll
ror
incl
pusha
ljmp
ljmp
pop
add
add
ror
in
out
int3
call
arpl
ljmp
jmp
popa
out
out
shlb
iret
arpl
ror
jmp
lret
bound
popa
shr
pop
jmp
pop
lret
pop
enter
jmp
add
add
int3
add
add
mov
enter
pop
int
int3
add
in
jmp
out
out
add
int3
in
out
leave
enter
jmp
pop
pop
rcrl
int
lret
pop
out
add
add
add
out
in
shr
pop
add
mov
call
rcrb
out
popa
arpl
out
int
incl
add
enter
add
add
lret
iret
enter
pop
lcall
jmp
popa
int
pop
leave
arpl
pop
in
out
arpl
in
lret
enter
pusha
add
add
int3
dec
in
leave
ljmp
into
ljmp
int3
pop
call
ljmp
pop
jmp
pop
int
popa
add
enter
int3
ljmp
pop
into
jmp
call
pop
iret
pop
pop
shr
mov
pop
lret
out
out
pop
int3
call
rcrb
ljmp
jmp
int3
into
add
int3
out
rcrb
ljmp
call
in
ljmp
add
add
out
call
in
incl
add
arpl
pop
pop
lret
int3
lret
pop
lret
in
enter
add
add
add
jmp
int3
out
pop
rorl
out
pop
out
pop
lret
int3
int
out
iret
out
arpl
out
ljmp
out
jmp
out
in
pop
bound
arpl
int3
roll
add
mov
add
jmp
into
add
add
mov
add
shr
pop
int
out
pop
popa
iret
int
leave
lret
pop
out
jmp
mov
add
int
out
out
out
arpl
jmp
lret
lret
pop
add
lret
int3
mov
into
pop
ljmp
in
popa
out
call
ljmp
dec
shl
jmp
pop
out
pop
pop
jmp
jmp
in
out
add
add
add
add
arpl
jmp
pop
jmp
popa
ror
out
pop
add
add
lret
pop
arpl
pop
out
pop
iret
pop
jmp
add
ror
out
into
iret
int3
out
add
jmp
add
add
pop
pusha
into
ljmp
out
jmp
add
out
lret
out
jmp
jmp
jmp
pop
pusha
mov
out
out
mov
incl
out
add
int
int
rorb
pop
pusha
in
lret
pop
pusha
pop
lret
popa
out
enter
pop
rcrl
popa
out
pusha
iret
lret
int
add
int
pop
pop
out
in
in
leave
out
int3
out
popa
pop
in
out
add
out
call
lret
popa
pop
pusha
pusha
into
int3
in
pop
pusha
pop
pop
pusha
out
pusha
pusha
mov
shr
leave
pop
pop
bound
in
pop
out
pop
out
pop
jmp
add
add
pop
pusha
in
lret
add
ljmp
iret
enter
jmp
int
pusha
out
popa
pop
lret
int3
in
pop
pop
popa
shr
pop
call
add
pop
popa
out
out
arpl
add
pop
int
add
add
ljmp
int
iret
leave
iret
out
shlb
pop
out
pop
shr
add
add
add
pop
pop
pop
in
pop
out
iret
enter
in
popa
out
lret
pop
call
add
int
arpl
in
jmp
add
add
enter
pop
ror
arpl
pop
add
add
call
call
out
in
iret
int
dec
leave
pop
lret
lret
bound
in
shll
ljmp
int3
in
out
pop
iret
pop
shr
pop
jmp
in
add
call
in
out
pop
jmp
add
add
out
leave
call
pop
jmp
add
pusha
enter
iret
jmp
jmp
add
add
pop
out
in
out
jmp
mov
add
add
call
pop
mov
add
add
int3
lret
add
add
out
popa
out
popa
pop
shr
int3
add
dec
dec
iret
out
lret
add
add
add
add
out
pop
enter
out
jmp
pop
int3
lret
pop
pop
arpl
bound
arpl
add
pusha
int3
add
in
into
pop
leave
bound
add
jmp
pop
pop
add
out
in
into
call
ljmp
rorl
shr
pop
pop
leave
iret
add
mov
pusha
out
ljmp
lret
popa
pusha
ljmp
add
int3
in
pop
pop
out
pop
call
out
pop
in
pusha
pop
pusha
pop
in
in
arpl
popa
jmp
shlb
pop
out
in
int
popa
lret
out
in
jmp
out
pop
jmp
call
arpl
pusha
pusha
ljmp
shr
bound
leave
add
lret
call
add
add
jmp
int3
out
out
add
rcrb
out
mov
add
call
mov
add
ljmp
add
into
pop
iret
in
call
int3
add
int3
add
enter
mov
add
add
pop
enter
in
into
pusha
add
int3
int3
int3
add
add
add
popa
int3
pop
in
pop
decl
in
int
pop
jmp
add
out
lret
pusha
out
int3
out
pop
ljmp
into
pop
enter
pop
into
jmp
pop
into
lret
out
int
out
rolb
add
int3
add
out
mov
pop
bound
in
lret
arpl
mov
int
mov
mov
mov
in
leave
lret
int3
ljmp
pop
pusha
int
in
jmp
int
pop
out
out
out
out
in
shll
add
add
pop
pop
pop
popa
in
lret
mov
add
out
arpl
add
shr
out
mov
jmp
enter
pop
into
pusha
out
in
shl
jmp
ljmp
lret
jmp
int3
mov
lcall
popa
pusha
in
pop
rcrl
int3
iret
shr
pop
pop
bound
call
pusha
out
lret
out
add
add
add
leave
call
int
add
mov
pop
pop
enter
in
pusha
ljmp
in
arpl
leave
out
pop
out
leave
iret
int3
ljmp
pop
pop
incl
add
pop
ror
int3
add
call
in
shr
int3
int
pop
sar
add
add
out
out
ror
pusha
jmp
call
lret
lret
jmp
in
out
int3
pop
in
leave
shr
lret
pusha
int
ljmp
ljmp
rcl
pop
pop
popa
jmp
int
popa
popa
pop
pop
int
add
pop
int3
in
add
out
popa
pop
incl
add
ljmp
out
add
add
enter
add
int3
add
add
rcrl
ljmp
add
add
add
int3
enter
in
out
lret
in
in
out
out
pop
out
add
add
out
out
pop
add
in
pop
incl
add
out
int
lret
dec
call
leave
mov
int3
pusha
pop
incl
lret
out
iret
out
lret
rcrb
add
add
pop
pusha
leave
pop
add
add
lret
leave
pop
out
rcrb
iret
arpl
call
enter
add
out
rcrb
popa
ljmp
pop
out
out
out
jmp
rcl
pop
lret
ljmp
lret
add
out
int
pop
add
int
popa
in
into
out
jmp
int3
add
add
int3
add
pop
ror
int3
call
ljmp
add
add
popa
leave
enter
pop
out
iret
ror
iret
ror
incl
add
add
iret
pop
pop
pop
out
shr
add
int3
mov
arpl
pop
out
arpl
ljmp
in
in
lret
enter
pop
int
shr
int3
add
in
jmp
add
add
add
pop
out
pop
lret
in
jmp
leave
leave
out
out
into
add
mov
add
enter
add
out
out
pusha
pusha
int
arpl
leave
lret
pop
bound
call
leave
rcrl
popa
int3
add
ror
lret
ljmp
ljmp
pop
lret
shr
in
int3
mov
in
leave
shlb
leave
pop
shr
in
call
iret
out
pop
pop
pusha
jmp
incl
add
add
rcrb
add
incl
add
incl
ljmp
jmp
out
out
out
jmp
into
in
pop
int
add
in
jmp
pop
out
enter
rcrb
into
pop
pop
pop
incl
add
pop
incl
shll
pop
into
pop
pop
add
leave
pop
pusha
pop
into
call
out
popa
jmp
shr
ror
mov
int3
incl
add
add
iret
leave
pop
shr
rolb
add
add
add
leave
lret
lret
pop
int3
lret
add
add
pop
into
lret
int
iret
call
popa
arpl
in
pop
pop
int
pop
pusha
jmp
add
out
pop
out
mov
add
popa
out
pop
pusha
rcrl
out
int3
lret
out
mov
in
out
into
pop
out
int3
in
jmp
add
pop
int3
out
ror
call
add
add
out
add
pusha
lret
popa
enter
add
add
mov
pusha
pusha
add
int
pop
out
leave
jmp
pop
incl
add
lret
pop
out
pop
pop
pop
pop
pop
pop
pop
jmp
arpl
pop
call
ljmp
lret
jmp
add
jmp
out
call
add
add
out
int3
pop
iret
add
mov
int3
in
pop
pop
mov
into
int3
in
ljmp
pop
in
enter
out
in
int
iret
add
ror
leave
pusha
in
iret
jmp
ror
lret
pusha
add
add
int3
decl
in
pop
pop
leave
enter
pop
pop
out
incl
add
add
arpl
enter
lret
out
pop
jmp
into
pop
pop
lret
popa
jmp
arpl
out
arpl
int3
add
mov
add
mov
jmp
jmp
lret
pop
int3
call
call
mov
add
out
into
pop
call
jmp
leave
popa
pop
lret
add
add
add
out
out
ljmp
int3
add
pusha
arpl
add
mov
add
out
in
shr
lret
jmp
leave
int3
shlb
leave
in
into
add
add
in
in
pop
pusha
iret
jmp
arpl
pop
arpl
in
decl
ror
out
in
ljmp
into
pop
out
lret
arpl
out
add
pusha
shr
out
enter
ljmp
in
pusha
pop
pop
enter
int3
pop
bound
add
add
lret
popa
add
popa
ljmp
in
call
pop
pop
arpl
pop
iret
iret
out
rcrb
out
in
in
bound
in
pusha
add
int
pop
in
lret
leave
mov
int3
add
mov
pop
pop
add
add
leave
in
out
out
into
int3
jmp
out
out
add
add
popa
int3
out
ror
add
out
shl
int3
out
in
int
out
jmp
add
in
int3
int3
add
lret
add
mov
leave
leave
ljmp
int3
in
lret
iret
pop
iret
out
int3
shlb
lret
add
out
int3
add
add
popa
in
call
shr
lret
into
iret
mov
pop
int
leave
out
add
add
pop
pop
pop
out
int
out
int3
int3
call
pop
int3
lret
int3
lret
enter
into
enter
int
iret
pop
ror
add
add
add
pop
int
lret
popa
int
jmp
pop
pop
lret
pop
lret
arpl
arpl
leave
int3
out
in
decl
in
int
out
pop
pop
out
call
lret
in
out
arpl
into
add
jmp
popa
int
in
incl
add
in
ljmp
into
call
iret
jmp
pop
pop
enter
arpl
out
pop
pusha
pop
pusha
call
jmp
mov
mov
incl
call
in
bound
into
enter
int3
lret
ljmp
leave
ljmp
pop
pop
arpl
mov
add
out
out
iret
out
int3
add
add
pop
out
pop
out
mov
lret
lret
add
incl
add
add
pusha
arpl
arpl
pop
lret
add
add
pop
pop
pop
pusha
into
out
arpl
pop
call
int3
add
shlb
arpl
int3
pop
out
int3
add
add
int
add
in
int
add
ljmp
int3
lret
pop
out
enter
lret
in
incl
add
add
jmp
int3
out
out
mov
pop
int
in
add
pusha
int
in
int3
iret
pop
int3
out
in
pusha
leave
ljmp
pop
arpl
lret
jmp
int
int3
out
int
in
lcall
pop
in
pop
iret
pop
out
leave
lret
int
pop
int3
int3
pop
pop
rcrb
add
add
add
out
lret
pop
shr
pop
int
out
rcrb
shl
in
pop
shr
add
out
ror
pop
out
int
mov
lret
out
lret
ror
lret
pop
enter
add
int3
pop
into
out
pop
shr
out
enter
lret
bound
add
jmp
pusha
leave
lret
pop
ljmp
int
add
add
shlb
leave
leave
pop
enter
ljmp
pop
int
add
add
in
pusha
pop
leave
pop
jmp
add
add
pop
in
pop
int3
int
add
out
jmp
leave
shl
int
ror
int3
out
lret
arpl
into
out
pop
enter
pop
mov
int3
mov
out
int
ljmp
leave
mov
add
add
out
pop
pusha
ror
iret
ljmp
int3
jmp
pusha
lret
call
pop
jmp
mov
pusha
out
jmp
out
pop
add
int3
out
into
int3
pop
iret
lret
out
pop
int3
lcall
lret
lret
pop
call
lret
mov
out
popa
add
add
ror
pop
add
add
in
pop
lret
int
jmp
pop
rcrl
in
leave
pop
int3
pop
pusha
int3
int
pop
enter
into
mov
out
call
int3
bound
iret
jmp
out
ror
enter
pop
arpl
out
out
in
pop
arpl
ljmp
out
int
pop
out
pop
pusha
pop
into
ror
lret
pop
pop
out
shr
pop
pop
iret
bound
popa
ror
add
out
enter
jmp
shll
pop
ror
pop
pop
out
iret
jmp
out
add
out
in
add
incl
into
ror
pop
arpl
popa
in
popa
pop
pusha
jmp
pop
leave
leave
pusha
lret
out
add
leave
lret
out
in
out
pop
enter
pusha
call
out
out
enter
add
pop
jmp
iret
lret
lret
add
incl
add
add
add
pop
call
pop
out
leave
pop
int
int3
pop
add
out
lret
jmp
roll
shl
int3
enter
pop
add
add
int3
pop
pop
jmp
lret
pop
shr
out
int3
pop
ljmp
sar
shr
ror
out
pop
lret
lret
int3
lret
shr
ljmp
shr
lret
ljmp
leave
pop
arpl
lret
in
pusha
add
into
leave
out
lret
iret
int
add
add
pop
popa
out
add
out
int3
pop
pop
ljmp
add
int
pop
ljmp
pop
jmp
in
ljmp
arpl
pop
pop
lret
pop
lret
out
popa
leave
pop
pop
leave
out
pop
out
jmp
add
out
jmp
into
pop
pop
jmp
call
in
jmp
mov
out
add
add
lret
mov
pop
enter
jmp
add
in
out
pop
pop
enter
bound
out
popa
leave
iret
bound
ror
lret
mov
leave
pop
enter
out
in
in
out
roll
pop
pop
ljmp
arpl
lret
shr
out
out
in
in
into
leave
add
mov
int3
out
out
into
ljmp
out
shr
mov
popa
in
in
add
pop
in
enter
pusha
pop
out
into
int3
lret
pop
out
into
pusha
int3
incl
add
in
lret
add
pop
add
leave
int3
jmp
arpl
jmp
pop
lret
call
mov
out
pop
bound
out
out
int
in
out
pop
pusha
jmp
arpl
in
add
shlb
popa
out
arpl
out
pop
pop
into
ljmp
add
pop
pop
iret
add
add
iret
enter
ljmp
mov
iret
shl
in
rcrb
out
int3
iret
out
out
out
lret
pop
enter
add
popa
into
int3
int3
pop
leave
pop
out
call
in
pop
out
add
pop
lret
shlb
popa
shr
pop
into
jmp
jmp
jmp
leave
jmp
add
jmp
pop
ljmp
call
call
out
incl
out
lret
out
jmp
arpl
add
incl
pop
enter
popa
pop
arpl
roll
add
int
int3
int3
into
out
jmp
pusha
add
add
add
enter
call
add
popa
arpl
mov
in
pop
add
mov
enter
out
out
out
pop
ror
iret
pop
out
int3
out
pop
roll
add
add
pusha
jmp
bound
pop
popa
bound
mov
add
add
int3
into
pop
rcrl
lret
add
add
jmp
shl
in
pop
arpl
popa
rcl
arpl
pop
out
lret
popa
call
out
int
lret
leave
jmp
into
int
enter
add
call
bound
in
mov
add
mov
pop
int3
out
pusha
pusha
enter
pop
shr
pop
jmp
call
pop
in
in
dec
lret
into
in
pop
in
int
add
int3
pop
lret
pop
bound
add
jmp
pusha
int3
mov
call
add
jmp
out
in
leave
call
lret
out
int3
pop
add
in
pusha
pop
shl
pop
rcl
int3
out
jmp
ljmp
popa
out
mov
add
pop
pusha
rcrb
arpl
out
ror
int3
lret
out
out
out
add
arpl
jmp
iret
call
int3
pop
pop
in
in
leave
out
pop
pusha
in
pop
arpl
jmp
ljmp
int
out
lret
pop
arpl
call
in
pop
into
lret
int
rcl
pusha
jmp
pop
pop
int3
pop
pop
lret
pop
pop
jmp
out
call
enter
pop
pop
jmp
enter
out
pop
pop
pop
enter
in
jmp
add
add
add
add
ljmp
ljmp
out
into
enter
leave
leave
popa
out
in
iret
pop
arpl
leave
int
int3
jmp
shr
leave
lret
call
into
lret
pop
jmp
pop
enter
jmp
arpl
out
int3
add
call
pop
arpl
in
in
jmp
int3
leave
lret
pop
lret
shll
in
iret
popa
shl
in
out
in
popa
arpl
pop
jmp
pop
int3
add
int3
in
int
into
popa
int
jmp
add
int3
pop
int3
pop
call
pusha
leave
mov
call
add
add
jmp
enter
shr
shr
pop
pop
popa
pop
int3
pop
arpl
leave
int
in
ror
pop
bound
popa
lret
jmp
add
out
pop
out
into
popa
in
int3
arpl
int3
dec
mov
popa
pop
pop
jmp
in
int3
pop
enter
pop
popa
pop
shlb
out
dec
arpl
int
add
in
lret
pop
iret
pop
shll
add
pop
pop
arpl
in
leave
call
out
in
in
iret
pop
int
int3
into
call
int
pop
enter
pusha
add
mov
add
add
add
add
int
rcl
leave
call
out
leave
out
add
add
iret
int3
out
add
mov
add
add
int3
pusha
shr
out
out
ljmp
lret
pop
add
dec
pop
arpl
int3
pop
leave
lret
add
add
out
in
out
int3
int3
add
out
lret
lret
mov
add
add
pop
int3
enter
in
in
enter
out
jmp
shlb
out
pop
int3
popa
in
call
ror
out
ljmp
add
add
add
pop
add
out
jmp
pop
popa
out
arpl
int
shl
leave
int3
in
rolb
add
jmp
int3
mov
out
out
out
lret
out
in
pusha
pusha
lret
out
pusha
pop
out
int
jmp
incl
add
add
pop
pop
leave
pop
enter
into
out
dec
enter
pop
add
mov
jmp
pop
pop
enter
in
pop
into
pop
pop
ljmp
lret
int3
add
ror
jmp
mov
arpl
pop
pop
iret
add
int3
jmp
pop
out
ljmp
bound
leave
ljmp
int3
iret
pop
pop
pop
add
popa
enter
pop
add
jmp
ljmp
incl
add
int
int
out
pop
pop
pusha
out
lret
ljmp
lret
mov
add
pop
enter
out
jmp
pop
int
iret
incl
add
pop
lret
int
add
lret
out
jmp
add
add
popa
lret
add
out
iret
lret
pusha
mov
add
leave
in
enter
pop
into
pop
in
out
mov
mov
int3
call
out
enter
leave
pop
ror
pop
int
out
iret
ror
in
call
pop
incl
int3
add
out
pop
call
out
in
popa
out
add
int3
rcrl
call
in
pop
pop
in
out
call
call
into
jmp
into
pusha
in
jmp
jmp
rorl
jmp
jmp
add
mov
add
leave
shl
pop
out
call
leave
pop
pop
in
into
int3
jmp
ljmp
leave
ljmp
ljmp
pop
out
call
iret
add
add
pop
out
rcrb
call
bound
add
add
ljmp
call
pop
iret
add
dec
int3
in
iret
add
int
lret
lret
iret
pusha
in
pusha
pusha
ljmp
in
out
out
out
ljmp
pop
out
mov
add
add
add
mov
add
pop
pop
pop
shr
add
add
leave
pop
out
call
int3
add
add
int3
into
pusha
pop
jmp
jmp
add
jmp
leave
int3
lret
jmp
int3
add
shlb
pop
pop
out
ljmp
int3
popa
out
int3
pop
call
shr
call
add
into
int
enter
int3
in
pop
shll
add
add
arpl
in
out
jmp
pop
jmp
enter
jmp
call
iret
add
int3
add
add
jmp
in
jmp
out
jmp
add
in
out
popa
popa
in
rcrb
out
lret
add
int3
ljmp
in
incl
add
out
incl
add
pop
popa
in
pop
pop
int3
add
int3
into
out
jmp
out
in
out
leave
pusha
ror
add
int
pop
bound
int3
lret
pop
int3
ljmp
int
into
shlb
jmp
in
in
add
add
leave
into
pop
jmp
add
add
call
into
out
int
bound
add
add
popa
pop
jmp
rolb
in
jmp
jmp
into
pop
add
out
out
out
out
iret
pop
ljmp
out
ror
pop
pusha
out
int3
lret
add
ljmp
lret
int
out
pop
lret
in
out
rolb
add
in
pop
ror
add
int3
int3
incl
add
out
in
pop
in
pop
jmp
out
enter
enter
iret
jmp
pop
int
out
lret
pusha
in
leave
pop
call
mov
out
pop
pop
in
int
call
pop
into
iret
incl
ljmp
add
add
out
out
add
add
add
out
in
out
add
out
iret
ror
lret
out
jmp
add
int3
add
call
pop
pop
leave
pop
arpl
in
pop
add
decl
leave
popa
enter
arpl
int3
ror
bound
popa
in
ror
pusha
lret
decl
leave
popa
lret
int
rolb
pusha
rcrb
int3
into
pop
add
in
add
add
rcrb
arpl
dec
into
out
jmp
into
in
int3
pop
enter
jmp
iret
int
out
pop
into
ljmp
pop
pop
pop
pop
ljmp
jmp
add
enter
out
jmp
pop
in
pop
arpl
add
add
add
pop
lret
pop
int
into
enter
enter
add
enter
shr
in
pop
pop
int
pop
int
in
int3
mov
add
mov
add
enter
pop
pop
pusha
ljmp
pop
pop
int
pop
jmp
popa
pop
add
mov
jmp
pop
int3
add
mov
add
add
out
rcrl
iret
in
jmp
lret
pusha
lret
iret
jmp
iret
pop
add
ljmp
pop
out
lret
lret
ljmp
out
ljmp
in
rorl
int3
jmp
pop
iret
out
shlb
lret
iret
jmp
in
call
pop
ror
into
ljmp
into
lret
iret
out
in
jmp
jmp
mov
out
pop
jmp
out
into
leave
popa
leave
ror
pusha
popa
out
out
pop
mov
pop
call
lret
arpl
iret
pusha
int3
add
rcrb
into
leave
int
popa
add
out
into
pop
jmp
add
pop
jmp
int
add
add
int3
add
arpl
out
out
call
decl
lret
int3
add
add
add
add
mov
jmp
lret
ljmp
iret
int3
enter
in
out
jmp
out
out
add
add
add
enter
arpl
add
int
pop
in
pop
out
pop
popa
in
out
enter
add
in
int3
add
out
ljmp
dec
out
enter
arpl
int3
add
int
pop
pop
lret
popa
mov
iret
pop
iret
lret
arpl
ljmp
int3
pop
in
enter
in
lret
add
incl
add
arpl
shr
add
lret
lret
leave
jmp
arpl
out
ljmp
leave
out
lret
call
iret
ljmp
pop
popa
mov
call
rcl
jmp
pop
pop
leave
lret
pop
lret
pop
enter
ljmp
int3
pop
into
int
in
arpl
arpl
pop
in
out
pusha
lret
add
add
int3
pop
into
lret
lret
pop
pusha
jmp
bound
int3
pop
call
arpl
add
add
add
pop
int3
add
int3
pusha
lret
pop
call
jmp
add
popa
ror
ljmp
pop
int3
into
out
pusha
jmp
int
add
int3
rcrb
pop
add
out
lret
ljmp
int3
out
pop
jmp
int3
pop
jmp
add
int
int3
into
int3
out
add
jmp
pop
popa
in
in
lret
bound
add
enter
add
shr
into
ljmp
add
iret
popa
pop
out
shr
pop
lcall
pop
pop
enter
in
leave
ljmp
out
pop
in
popa
pusha
bound
in
jmp
add
in
out
out
add
add
add
mov
pop
pop
iret
in
add
add
int
pop
add
add
pop
pusha
call
add
in
add
int3
lret
lret
pop
lret
out
pusha
ljmp
in
mov
add
add
into
pop
pop
add
popa
pop
iret
pusha
into
popa
in
pop
enter
add
pop
iret
out
out
jmp
pop
int
add
popa
pop
pop
pop
jmp
rcrl
out
add
call
jmp
out
add
incl
add
lret
mov
pop
pop
int3
mov
add
pop
int3
out
roll
add
into
ljmp
jmp
pop
in
lret
shr
pop
pop
add
call
out
lret
jmp
ljmp
add
add
lcall
pusha
enter
pop
pop
call
pop
int3
out
in
bound
pop
pop
pusha
add
mov
pop
out
jmp
popa
pop
ror
call
pusha
int
iret
add
jmp
popa
pop
into
pop
ljmp
jmp
add
dec
jmp
pop
out
lret
add
enter
in
call
shl
out
popa
pop
mov
in
jmp
bound
in
arpl
out
in
lret
int
lret
add
jmp
enter
int3
out
add
add
into
call
ror
pusha
add
int3
add
mov
add
jmp
add
ror
mov
add
out
lret
enter
enter
into
pop
into
pusha
pop
shlb
popa
in
in
leave
add
iret
jmp
lret
shr
add
pop
rcrb
ljmp
int3
pop
out
popa
arpl
pop
pop
out
pop
add
enter
iret
int3
out
mov
add
int3
add
in
add
leave
rcrb
lret
bound
into
pop
shl
pusha
in
jmp
add
pop
pop
pop
enter
ljmp
pop
in
enter
out
into
pop
lret
leave
mov
incl
add
add
arpl
shl
pop
int3
int3
mov
add
int3
rcl
pusha
incl
add
out
pusha
in
bound
pop
pop
ljmp
add
pop
shr
lret
add
add
add
add
out
add
add
pusha
pop
iret
out
jmp
pop
arpl
lret
rorl
dec
arpl
shl
out
out
arpl
pop
int
out
lret
jmp
in
into
lret
shr
out
mov
pop
arpl
call
add
in
shr
bound
pop
out
in
out
pop
in
pop
out
jmp
out
pop
jmp
into
popa
jmp
out
add
int3
add
mov
add
pusha
out
pop
ror
pop
rcrl
int3
add
lret
out
pop
arpl
out
out
out
jmp
into
out
pop
popa
pop
add
popa
add
add
pop
leave
add
add
out
arpl
jmp
in
iret
pop
shll
jmp
out
enter
enter
add
lret
out
leave
in
call
add
ljmp
leave
out
pop
shr
leave
lret
int3
arpl
jmp
call
in
int
popa
pusha
arpl
in
out
pusha
in
incl
add
jmp
out
jmp
pop
mov
out
jmp
int3
jmp
arpl
popa
arpl
mov
add
leave
out
int
call
jmp
jmp
popa
lret
in
mov
pop
mov
bound
add
add
add
enter
lret
pop
popa
pusha
mov
mov
int3
pop
iret
ror
iret
ror
lret
out
add
pop
in
pop
pop
jmp
jmp
pop
add
jmp
iret
popa
popa
pop
popa
int
pop
out
out
out
iret
out
call
int
jmp
pop
in
leave
out
int3
ljmp
mov
leave
pop
leave
bound
arpl
jmp
out
iret
pop
jmp
in
pop
lret
out
in
pop
enter
iret
pusha
ljmp
add
leave
jmp
pop
ror
pop
out
add
pop
pop
into
call
ljmp
int
leave
pop
jmp
rolb
int3
add
enter
out
pusha
popa
iret
pop
add
leave
lret
popa
into
pop
add
int3
pop
int
int3
pop
pop
pop
int
pop
out
enter
into
rcrb
out
in
out
in
int3
ljmp
out
ljmp
add
pop
pop
pusha
pop
rorb
sar
add
add
incl
add
ror
in
int3
out
int3
pop
out
int3
shr
popa
ljmp
add
lcall
popa
in
enter
int3
add
add
jmp
mov
arpl
out
int3
add
shr
out
popa
leave
pop
out
out
out
ljmp
mov
add
add
decl
int3
mov
shr
out
popa
lret
call
jmp
lret
into
into
pop
out
leave
into
out
in
pusha
mov
out
arpl
add
int3
call
dec
ror
leave
jmp
arpl
add
add
jmp
jmp
add
add
add
ljmp
add
jmp
popa
enter
arpl
out
lret
int3
arpl
int3
call
add
out
pop
int3
jmp
pop
in
out
out
in
pop
enter
add
add
int
pop
add
add
in
pusha
jmp
out
jmp
into
ljmp
ljmp
decl
int
out
pop
pop
arpl
pop
out
popa
int
leave
int
leave
pop
in
in
iret
arpl
jmp
add
arpl
add
mov
out
pop
lcall
call
pop
ljmp
lret
shr
lcall
out
out
pop
into
leave
in
out
out
shr
pop
jmp
add
add
add
into
arpl
jmp
add
pusha
ljmp
lret
into
leave
arpl
pop
leave
mov
iret
in
out
popa
jmp
in
jmp
add
out
in
int
out
iret
incl
ror
pop
leave
arpl
int3
add
add
add
add
pop
lret
mov
add
lret
pop
leave
rolb
incl
add
add
add
out
pop
out
pop
leave
in
add
into
out
out
add
int3
add
call
pusha
pop
int
in
pop
pop
jmp
pop
into
shr
pop
pop
leave
pop
out
int3
ror
add
add
mov
enter
add
add
out
pop
jmp
pop
pop
popa
bound
pop
ljmp
incl
lret
lret
rcrb
popa
int3
incl
int3
int
pop
out
pusha
pop
int3
pop
lret
out
in
jmp
enter
out
pop
pop
arpl
jmp
add
add
leave
int
add
in
pop
ljmp
ljmp
pop
into
lret
ljmp
leave
call
jmp
arpl
pop
enter
into
enter
jmp
int3
leave
into
ror
ljmp
in
out
pop
rcl
pop
int3
mov
add
pop
lret
pop
out
lret
enter
dec
pop
arpl
out
incl
add
add
rcrl
pop
pop
ljmp
pop
ror
out
lret
out
in
in
jmp
int3
call
in
ljmp
pop
shr
shlb
int
add
popa
enter
add
add
add
mov
add
add
int3
ljmp
enter
ljmp
int3
dec
add
rcrl
int3
int3
popa
jmp
lret
add
call
in
in
into
pop
mov
enter
pop
iret
call
lret
arpl
in
ljmp
leave
jmp
add
pop
iret
pop
out
out
jmp
pop
int3
out
pop
pop
pusha
pop
pop
enter
call
pop
iret
int3
lret
arpl
add
add
add
dec
int
out
lret
lret
pop
ror
incl
add
add
shll
pusha
pop
jmp
enter
into
enter
pop
mov
shr
arpl
call
lret
arpl
mov
add
pop
lret
arpl
call
pop
int3
add
int3
in
int
lret
popa
popa
iret
ljmp
lret
out
rcrb
pop
into
pop
pop
out
popa
in
incl
add
lret
out
in
lret
lret
add
out
out
out
mov
pop
arpl
out
leave
bound
lret
jmp
in
call
pop
out
bound
lret
into
jmp
add
arpl
leave
out
enter
add
int3
ror
ljmp
out
call
lret
out
iret
iret
pop
leave
lret
add
shlb
int
in
pusha
in
enter
add
pop
enter
leave
pop
out
int3
add
lret
pop
out
enter
shr
int3
out
ljmp
iret
add
bound
lret
add
ljmp
shll
jmp
pop
out
int
jmp
pop
out
out
iret
out
pop
pop
ror
add
add
add
int3
out
iret
lret
iret
dec
pop
out
in
into
into
iret
in
jmp
in
arpl
ljmp
mov
jmp
into
pop
incl
add
call
int
int3
pusha
lret
pop
arpl
leave
jmp
pop
into
in
enter
int3
dec
mov
lret
shlb
int3
out
in
incl
add
out
rcrb
pop
mov
int3
arpl
in
out
call
roll
add
out
pop
pop
in
arpl
int3
add
int
in
out
out
int
leave
popa
rcrb
out
add
roll
add
lret
into
lret
shr
lret
call
add
pusha
popa
ljmp
ljmp
int
leave
pop
add
arpl
lret
out
popa
into
pop
out
enter
in
int3
add
leave
rolb
mov
in
shlb
pop
lret
add
lret
arpl
arpl
add
arpl
lret
ljmp
pop
in
ror
call
jmp
ror
in
iret
pop
ljmp
into
pop
lret
enter
add
add
lret
jmp
add
add
pop
iret
jmp
shr
popa
ljmp
pop
pop
call
into
pop
arpl
pop
pop
out
out
iret
call
bound
pop
out
out
pop
ljmp
pop
in
shr
bound
add
lcall
out
jmp
int3
call
pop
pop
int3
add
int3
out
jmp
call
shl
arpl
out
in
lret
mov
pop
out
pop
int3
add
out
jmp
into
out
out
pop
in
leave
add
rcrb
in
out
iret
iret
int
pop
bound
int3
out
pop
int3
int
add
pop
int3
enter
lret
out
add
out
in
ljmp
arpl
bound
enter
int
add
add
add
pop
pop
pop
add
out
call
lret
jmp
jmp
add
add
add
out
out
lret
out
out
out
mov
ljmp
bound
call
popa
jmp
rcrl
leave
out
enter
pop
into
ljmp
add
pusha
out
call
add
int3
call
ljmp
lret
in
pop
int
pop
into
lret
out
pop
add
pop
out
jmp
in
add
call
arpl
mov
pop
lret
shr
enter
pusha
call
in
lcall
popa
pop
pop
lret
pusha
pop
incl
add
leave
arpl
in
ror
add
ljmp
out
pop
lret
rorl
pop
int3
into
pop
int3
add
int3
mov
pop
call
pop
add
out
pop
ljmp
pop
out
out
into
in
in
jmp
pop
ljmp
iret
pusha
int
rcrl
int3
pop
out
int
pop
pop
ljmp
in
add
add
out
pop
arpl
out
int
int3
incl
enter
out
add
lret
pusha
int3
leave
pop
iret
pop
lret
int3
out
iret
out
int3
lret
add
pop
ljmp
out
add
add
incl
add
leave
jmp
out
in
ljmp
pop
jmp
mov
popa
pop
in
add
pop
pop
lret
add
pop
int
out
ror
add
popa
jmp
pop
enter
pop
in
lret
out
lret
out
into
pop
jmp
int3
shl
iret
pop
arpl
add
out
jmp
pusha
popa
out
iret
iret
out
mov
pop
pop
out
int3
lret
enter
into
enter
lret
pop
out
enter
ljmp
pusha
pop
out
iret
pop
add
add
decl
add
in
into
pop
out
out
add
int3
incl
add
pop
in
ljmp
dec
add
leave
enter
out
in
pop
out
jmp
jmp
lret
pusha
out
rcrl
lret
mov
pop
jmp
jmp
mov
mov
add
add
add
popa
pop
pop
ljmp
into
pop
pusha
pusha
lret
out
mov
add
pop
pop
call
pusha
iret
enter
add
out
arpl
in
into
add
add
rcrl
out
out
enter
ljmp
add
add
pop
pop
out
out
add
pop
leave
arpl
add
decl
add
leave
add
out
ljmp
add
ljmp
lret
int3
add
incl
add
mov
add
pusha
lret
out
mov
into
lret
pop
popa
pop
iret
int
pop
add
add
into
pop
pop
int3
add
pop
int3
leave
add
leave
iret
pusha
enter
lret
lret
into
lret
out
jmp
pop
shll
jmp
pusha
pop
pop
lret
arpl
add
in
leave
pop
pop
pusha
pusha
pop
pop
shr
enter
add
pop
pop
jmp
call
pop
add
add
into
pop
popa
int3
shr
int3
pop
pop
ljmp
pop
pop
ljmp
int
int3
add
add
add
into
pop
int3
mov
iret
lret
in
pop
pop
jmp
shr
ror
out
in
ror
enter
iret
bound
into
int3
lret
lret
arpl
mov
int3
out
iret
pop
out
ror
pop
out
jmp
out
incl
add
call
bound
add
out
out
add
pop
add
int3
add
dec
add
add
lret
enter
out
pop
out
add
jmp
sar
add
pop
out
out
out
leave
call
ljmp
pop
lret
arpl
pop
add
add
iret
out
add
out
arpl
rcl
pusha
out
iret
out
enter
pop
pop
pop
into
lret
pop
add
enter
lret
add
incl
arpl
shr
lcall
call
add
int3
int3
lret
enter
bound
pop
out
iret
arpl
add
out
int3
out
call
out
in
pop
enter
lret
into
jmp
add
pop
pop
pop
ljmp
lret
add
jmp
call
out
pop
pop
leave
ror
pop
add
out
into
enter
pop
pop
add
pop
pop
pop
int3
add
incl
add
pop
add
shr
iret
out
incl
add
mov
add
out
pop
lret
add
pop
pop
rcl
int
add
jmp
pop
out
rcl
rcrl
add
leave
int3
add
mov
arpl
pop
add
pusha
leave
out
into
leave
in
jmp
in
lret
int3
add
jmp
pop
iret
dec
int3
arpl
lret
into
arpl
out
call
add
popa
shr
arpl
call
pop
pop
iret
ljmp
pop
arpl
int3
add
add
int3
lret
jmp
out
mov
mov
lret
out
pop
pop
leave
enter
add
dec
jmp
ljmp
out
in
pusha
ljmp
add
int3
int3
ljmp
in
out
in
pusha
out
leave
call
out
pop
pop
leave
leave
pop
pop
ljmp
ror
in
pop
int3
iret
lret
pop
int
in
out
int
pop
pop
in
pop
pop
add
add
jmp
pop
out
jmp
int3
popa
pusha
out
jmp
iret
popa
leave
shr
pop
out
pop
enter
out
pop
add
jmp
lret
out
shr
roll
pop
enter
call
add
int3
in
int3
pop
ljmp
enter
pop
add
add
popa
pop
pop
arpl
pop
int3
incl
add
shl
pop
arpl
enter
out
iret
int3
add
lret
bound
int3
int3
out
lret
add
mov
leave
lret
mov
pop
pop
iret
in
popa
in
jmp
lret
in
add
incl
add
add
popa
pop
leave
out
jmp
popa
decl
leave
int3
lret
pusha
int3
bound
pop
lret
popa
lret
add
shr
arpl
out
ror
enter
dec
out
lret
int3
int3
in
out
bound
int
add
jmp
int3
add
out
iret
int
add
pusha
lret
into
out
in
popa
into
enter
jmp
lret
int3
in
lret
in
jmp
pop
out
leave
in
leave
pop
out
into
pop
jmp
int3
add
add
add
shr
popa
jmp
jmp
into
shr
enter
int3
add
enter
pop
rcrb
arpl
shr
incl
add
add
jmp
out
rcrl
pop
out
out
add
add
call
pop
iret
rcrl
out
in
pop
pop
out
pop
leave
popa
int3
pop
leave
int
pop
ljmp
int3
add
pop
lret
int
pop
out
jmp
add
lret
iret
add
iret
into
into
add
add
int3
in
in
shr
in
pop
pop
pop
out
enter
int3
jmp
out
pop
in
add
add
out
ljmp
add
int3
add
ljmp
pop
pop
jmp
int3
popa
jmp
pop
in
iret
in
int3
bound
pop
into
out
lret
popa
int
into
int
rcl
enter
pop
ljmp
lret
incl
add
dec
jmp
int
mov
add
out
jmp
int
int3
add
in
in
iret
lret
jmp
in
pop
pop
out
leave
int3
pusha
jmp
in
int3
ror
enter
out
out
enter
jmp
add
jmp
iret
jmp
add
pop
enter
pop
out
out
int3
add
add
add
int3
out
add
add
add
rcrl
int3
mov
pop
lret
out
into
shr
jmp
pusha
pop
pop
in
popa
pop
mov
jmp
pop
shr
iret
lret
pop
out
lret
jmp
int
enter
int3
add
out
call
lret
in
bound
iret
jmp
pop
pop
arpl
mov
in
enter
pop
pop
add
add
add
add
popa
mov
leave
into
pop
call
jmp
out
add
shll
pop
add
pop
into
out
add
lret
pop
into
shl
pop
add
add
add
mov
add
add
add
out
pop
enter
add
call
add
ljmp
call
into
enter
pop
out
jmp
int3
in
jmp
into
add
pop
iret
add
int
lret
int3
int3
shr
mov
out
lret
int3
add
shll
out
enter
incl
int3
add
rcl
add
pop
pop
pop
in
shl
out
add
add
rcrl
jmp
arpl
add
pop
arpl
ljmp
out
jmp
mov
add
add
int3
ror
jmp
pop
iret
out
enter
add
out
add
add
popa
out
out
add
add
in
jmp
popa
ljmp
pop
popa
add
out
out
arpl
into
in
shr
pop
pop
popa
add
out
incl
add
out
lret
pop
add
add
pop
pop
out
bound
out
pop
shlb
in
arpl
add
add
pop
in
pop
int3
add
call
pop
int3
pusha
out
add
add
jmp
int3
jmp
pop
in
lret
add
in
ljmp
dec
popa
jmp
arpl
ror
pop
mov
add
rolb
add
arpl
out
arpl
out
leave
pusha
enter
roll
add
add
in
pop
lret
lret
enter
out
pop
int3
pusha
rcl
popa
jmp
jmp
call
lret
out
in
int
add
popa
into
add
out
leave
iret
out
lret
lret
pop
int3
jmp
call
int3
popa
incl
add
add
add
jmp
enter
ror
call
add
int
pop
lret
ljmp
out
enter
out
out
int3
in
iret
pop
popa
leave
iret
add
add
add
pop
in
shl
rcrl
leave
in
out
mov
int3
pop
shl
add
out
bound
pusha
out
jmp
pop
int3
ror
jmp
out
incl
add
lret
add
popa
out
in
add
pop
into
pusha
add
popa
iret
out
dec
out
pop
pop
add
pop
enter
ror
pop
popa
pop
call
int3
mov
popa
enter
lret
int3
out
iret
int
in
add
mov
add
add
pop
call
enter
in
bound
mov
add
add
arpl
jmp
add
add
pusha
int
jmp
roll
ljmp
in
leave
ljmp
enter
in
lret
lret
pop
out
add
out
int3
jmp
in
call
enter
pop
out
jmp
jmp
into
in
jmp
pop
ljmp
call
arpl
lret
rcrl
out
leave
enter
out
out
int3
popa
add
call
iret
in
out
jmp
lret
jmp
pop
shl
jmp
add
out
leave
pop
out
out
in
iret
pusha
enter
lret
lret
leave
in
mov
add
pop
ror
jmp
jmp
pop
leave
pop
arpl
pop
out
shr
add
iret
jmp
int3
pusha
out
out
pusha
int
add
lret
ljmp
pop
pusha
out
pop
pop
jmp
pop
mov
add
out
into
out
pusha
leave
in
add
ror
out
enter
call
iret
iret
pusha
pop
popa
rcrb
ljmp
out
pusha
incl
add
add
add
lcall
mov
pop
arpl
add
out
out
add
in
iret
rcrl
jmp
leave
popa
pop
into
out
out
out
pop
out
pop
call
jmp
call
add
ljmp
leave
pop
popa
add
add
arpl
leave
leave
into
add
pop
popa
enter
add
pop
pop
out
add
out
iret
shr
popa
out
enter
arpl
in
leave
in
popa
arpl
pusha
pop
popa
pop
ljmp
shr
leave
leave
pop
iret
out
jmp
in
pop
pop
into
in
pusha
pop
pop
arpl
pusha
in
pop
add
in
out
pop
jmp
into
enter
add
add
pop
jmp
lret
int3
lret
out
into
add
decl
data16
out
jns
inc
xchg
adc
mov
repnz
jbe
push
cmp
mov
pop
mov
mov
adc
mov
sub
pop
xchg
call
rclb
xchg
lret
add
add
add
decl
inc
add
add
add
incl
inc
add
inc
add
add
add
pushl
inc
inc
add
inc
add
ljmp
inc
inc
add
sti
inc
inc
add
inc
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
decl
inc
add
inc
add
add
add
decl
push
inc
add
add
add
inc
fs
add
fs
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
ljmp
inc
add
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
jmp
jnp
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
incl
jle
add
jle
add
add
add
add
mov
loopne
add
add
add
inc
push
jns
scas
mov
cwtl
adc
mov
add
inc
cmp
jns
jne
jns
imul
dec
imul
popa
js
jo,pn
bound
dec
inc
add
fsubl
add
loop
add
add
dec
xchg
add
fsub
add
jp
add
sub
add
mov
xchg
add
mov
add
mov
nop
add
mov
add
add
add
add
add
mov
add
push
out
add
nop
add
ds
add
add
cs
add
add
out
add
out
add
out
add
out
add
out
add
add
push
add
pop
out
add
add
add
cs
add
out
add
out
add
add
mul
add
in
add
lret
add
in
add
add
in
add
add
add
sbb
add
or
add
mul
add
call
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
pop
in
add
add
add
add
mov
add
enter
add
add
shl
add
ret
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
add
jecxz
add
add
lods
loop
add
add
add
add
orb
add
add
add
add
add
add
add
sbb
add
adcb
add
add
add
add
loop
add
add
add
add
add
cmp
add
sub
add
sbb
add
add
add
in
add
gs
outsb
imul
add
dec
insb
gs
outsb
imul
imul
outsl
dec
outsb
imul
add
or
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
xor
cs
insb
add
imul
add
add
inc
outsb
jne
add
add
inc
jb
popa
je
dec
gs
insl
jae
insl
outsl
cs
insb
add
inc
jae
outsb
jno
outsl
je
push
outsb
push
popa
insb
jne
inc
add
dec
add
gs
imul
add
inc
jae
gs
imul
imul
inc
push
dec
add
gs
imul
add
inc
jae
gs
outsl
jbe
inc
jae
gs
gs
add
jae
gs
outsl
jbe
inc
jae
outsl
insl
popa
imul
jae
jne
je
push
outsb
push
popa
insb
jne
inc
add
sub
inc
jae
jae
popa
outsb
insb
gs
outsb
inc
add
add
outsb
push
push
arpl
imul
imul
inc
jae
jb
gs
popa
insl
gs
gs
insb
je
add
add
jb
arpl
popa
insl
gs
add
add
imul
inc
jb
fs
add
inc
push
inc
push
dec
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
stos
add
je
jb
imul
imul
inc
gs
gs
jo
popa
je
inc
add
mov
insb
jae
jb
insl
jo
inc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
add
jns
push
imul
jb
je
arpl
jae
push
imul
insb
insb
outsl
arpl
add
push
jns
je
insl
dec
outsb
outsw
add
push
imul
jne
jb
add
cmp
dec
inc
dec
popa
jo
je
imul
add
fs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
imul
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
je
imul
add
imul
jae
cwtl
add
je
jb
arpl
fs
jae
add
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
add
popa
jo
gs
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
cld
add
je
push
dec
outsb
outsw
add
add
insb
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
dec
outsl
popa
fs
imul
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
adc
dec
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
dec
jnp
add
inc
add
add
add
add
jbe
add
add
jns
add
dec
popa
insl
gs
add
push
js
add
sub
pop
inc
popf
andb
lret
nop
jb
add
jmp
inc
mov
jne
pop
jge
mov
push
jne
pop
imull
insl
pop
outsb
jo
lahf
sahf
dec
ret
fwait
repz
icebp
xor
push
mov
xchg
lods
outsl
mov
idivb
cli
cmp
lock
hlt
jle
mov
das
daa
pop
imul
add
fiaddl
sub
std
dec
icebp
gs
divb
push
std
scas
sub
jne
call
out
sbb
sbb
sub
rcrb
out
inc
push
sbb
fidivs
mov
in
jb
push
loopne
in
mov
sar
imull
test
insb
lahf
shrb
mov
xor
test
cmp
jbe
jmp
in
call
out
pop
jnp
push
ret
or
sti
and
pop
pop
js
push
dec
test
pop
daa
hlt
cmp
jno
js
and
jb
imul
jge
mov
cmp
jno
push
inc
in
cmp
jae
dec
pusha
sbb
outsl
into
dec
mov
jle
das
scas
addr16
xchg
addr16
ja
fstp
in
daa
popf
mov
adc
js
imul
addr16
dec
outsl
test
xor
inc
mov
ret
daa
add
out
or
fistl
sub
dec
mov
fists
push
xor
cmp
jl
xorl
insl
jae
sub
xor
scas
insb
inc
aas
xor
xor
xchg
pop
add
cltd
pop
and
movsb
push
xor
mov
push
shll
inc
rcrl
fdivl
ljmp
dec
push
mov
xchg
jecxz
daa
cmp
hlt
mov
push
int
push
pop
add
in
xor
lret
sbb
xor
ja
dec
popl
mov
ds
insb
leave
jbe
pause
lds
repz
fdivs
mov
dec
daa
testb
sbb
inc
push
jmp
jmp
and
cmpsl
xchg
mov
or
fistpll
push
mov
inc
fdivl
mov
jns
mov
je
movsl
ja
ret
cli
sbb
xchg
add
push
lcall
bound
cmc
xorl
mov
push
stos
pop
rol
xchg
iret
mov
jne
and
sbb
ljmp
cmp
push
fists
xchg
lcall
jne
adc
fiadds
or
mov
lock
inc
std
xchg
mov
or
repnz
std
pop
jbe
cwtl
sbb
in
and
lret
jns
cmp
mov
fisubs
add
xchg
jnp
loope
push
fucomi
repz
mov
jns
and
sub
rolb
xorb
adc
iret
push
subb
movsb
ja
call
in
sub
cmp
fwait
pop
push
pop
dec
inc
cmp
push
sahf
shl
cwtl
pop
out
inc
negl
imul
cmpsb
xchg
mov
cmp
cld
idivb
pop
dec
fwait
push
imul
add
aaa
test
cmp
mov
inc
in
mov
push
stc
add
mov
adc
jl
jle
jg
cmc
xchg
jne
scas
jmp
xchg
fistps
int3
xor
mov
fidivs
es
and
shl
stos
jnp
mov
or
test
test
fs
icebp
dec
or
dec
arpl
jb
cli
insl
in
push
ljmp
mov
cmp
nop
pusha
push
mov
xchg
test
mov
jns
mov
mov
and
mov
orb
aas
mov
shl
cmc
sbb
sub
fwait
int
sbb
jp
mov
mov
imul
das
xchg
dec
scas
cs
push
les
cmp
out
sbbb
out
push
xchg
inc
jo
mov
dec
inc
hlt
push
mov
mov
add
dec
dec
xchg
es
push
mov
jge
inc
popa
push
in
cmp
andb
addr16
test
sbb
sbb
cwtl
mov
mov
jne
scas
xor
sbb
in
push
pop
mov
dec
adc
sarl
xor
push
push
mov
out
test
and
stc
outsb
jl
sbb
inc
inc
mov
jno
lock
fstpl
mov
leave
inc
sbb
ja
clc
fiaddl
xchg
inc
in
dec
sub
inc
in
out
or
and
test
fisubs
aad
shll
int3
dec
xor
xor
rcrb
movsb
into
sub
sbb
push
mov
or
xchg
dec
es
mov
sub
mov
repz
xchg
mov
repnz
insb
out
dec
xor
or
enter
je
and
dec
push
mov
ror
push
fstpt
add
cmp
imul
loope
cmp
inc
add
or
inc
enter
inc
rcrb
mov
daa
mov
push
sub
mov
xchg
and
std
mov
xchg
sbb
mov
cmc
sbb
jnp
lods
add
mov
pushf
jmp
fnstenv
pop
arpl
clc
popf
inc
lods
and
scas
sub
add
dec
cmp
sbb
push
mov
cmc
insl
mov
outsl
mov
fldcw
xlat
mov
test
leave
xor
imul
out
sub
js
imulb
and
in
les
xor
out
push
or
fldcw
push
cli
push
xor
jbe
pop
add
sub
out
jns
pop
sbbb
aad
dec
adc
mov
out
std
cmpsl
hlt
push
sub
jle
fcoml
outsl
lahf
jbe
lret
mov
hlt
movsb
push
es
sub
sub
jbe
ss
daa
dec
cmp
mov
sbb
pop
popf
inc
repz
cwtl
sarb
mov
int
mov
push
test
mov
push
cmp
xor
fstl
push
mov
aam
mov
or
dec
cmc
addr16
xchg
nop
insb
dec
cmpsl
fld
stos
push
sub
and
or
push
sbb
push
mov
jnp
or
push
sub
cltd
fidivs
inc
or
inc
ja
push
or
add
push
or
jle
rcll
jb
sub
pop
imul
dec
mov
aaa
stos
push
enter
les
ds
shlb
jbe
pop
orb
out
dec
adcl
mov
out
add
call
stc
xchg
dec
and
push
repnz
inc
jl
push
ja
cmpsl
and
push
cmp
ja
pushf
mov
push
mov
mov
jmp
incl
enter
clc
mov
in
sub
sti
mov
cmc
mov
jge
dec
push
jge
mov
rcrl
addr16
cs
xchg
sahf
scas
and
mov
js
adc
xchg
in
jl
lock
lret
push
fnstsw
sub
es
popa
dec
fsubs
add
scas
dec
bound
sub
mov
ja
das
sub
std
pop
fnsave
scas
loop
inc
rcrl
mov
push
xchg
mov
adc
insl
out
mov
pop
dec
lahf
cmpsb
mov
popf
test
xor
fdivrs
je
mov
loop
cs
testl
sbb
pusha
les
xor
outsl
and
sbb
sbb
fldl
rclb
rolb
enter
push
out
imul
int
aad
mov
push
or
lret
sbb
cmp
out
lret
jo
les
xor
fcoml
inc
les
dec
inc
ja
jb
xchg
add
andb
fisttpl
nop
out
mov
or
sti
sarl
dec
mov
aaa
andb
push
jmp
mov
lds
jae
xor
shll
popl
enter
xchg
fnsave
popf
mov
adc
mov
js
scas
xor
popa
dec
jne
dec
sbb
mov
xchg
push
dec
pusha
aas
xchg
fistpll
push
inc
cld
push
push
popa
mov
das
xor
ljmp
inc
jne
push
pop
dec
mov
cmpb
insl
test
das
pushf
pop
xlat
mov
add
push
xor
subl
int3
lds
inc
add
inc
fsubl
subl
pushf
jl
inc
imulb
xor
in
mov
xchg
sub
aaa
nop
push
push
or
ret
lahf
dec
xor
fwait
lds
jb
xor
lods
shr
xor
adc
dec
cs
stc
cld
rcrb
es
add
inc
pop
sbb
stos
adc
ss
je
mov
int3
jle
fmull
or
bound
ret
push
push
cmp
mov
sti
add
imul
xor
xchg
clc
push
add
inc
lret
and
lcall
cld
adc
out
mov
fldt
mov
sub
xor
nop
and
push
mov
imul
pusha
mov
incl
cmc
cmp
rcl
hlt
out
iret
mov
jg
pop
test
push
gs
pop
cmp
aas
leave
out
xchg
pmaddwd
imul
push
jg
dec
cmp
xchg
scas
rcr
mov
mov
cmc
jp
pop
outsb
fimull
mov
or
ret
sub
sbb
cmp
cli
inc
pop
xor
pushf
push
in
leave
jmp
dec
outsb
xchg
stc
gs
cltd
fidivl
icebp
jnp,pn
xor
xlat
xor
fidivrs
adc
jo
mov
add
sahf
cmp
fsubrl
or
xor
xchg
mov
test
jb
adc
dec
push
mov
sub
decb
popa
or
adc
scas
ret
sbb
es
idivb
negl
xchg
mov
js
sbb
jl
fisubs
mov
lcall
or
xor
fidivrl
es
mov
pop
cvtps2pd
fwait
pop
push
pop
lods
mov
mov
cwtl
cmc
ljmp
ss
rcrl
mov
mov
push
ret
ja
imul
mov
insl
xor
gs
add
mov
push
loopne
cmp
cs
cmp
daa
stos
mov
loopne
sbbb
add
arpl
jl
cmp
xor
into
mov
push
xchg
mov
scas
lods
dec
cmc
fisubrs
cmp
fprem1
push
xor
out
xchg
push
inc
add
sbb
out
dec
lahf
cmp
or
sub
das
push
mov
aaa
or
scas
add
inc
cs
cld
scas
lahf
test
sbb
jbe
negb
jl
or
adc
dec
je
scas
inc
je
adc
jmp
xchg
lret
dec
sbb
popa
adc
pop
inc
push
sub
in
andl
insl
dec
out
std
or
je
jne
dec
xchg
enter
adc
mul
iret
decl
or
jle
aaa
jnp
inc
sub
mov
push
jle
scas
xor
icebp
pop
xchg
popa
aam
loop
inc
fdivs
ffreep
pushf
mov
insb
add
xchg
or
jae
inc
add
cmp
mov
jecxz
outsl
mov
add
nop
push
dec
pop
lods
push
push
push
shll
ficoml
xlat
ljmp
js
mov
add
pop
adc
icebp
cmp
push
in
ret
shrl
jbe
ss
adcl
dec
lahf
aaa
mov
mov
adc
cmp
mov
lods
sti
movl
xor
lret
jmp
test
add
lahf
pusha
rorl
xlat
dec
loopne
lods
or
pop
sub
mov
lcall
mov
inc
sbb
cli
pop
or
mov
xchg
push
stos
sbb
jnp
repnz
rcrl
ss
sub
decl
or
fildll
xchg
jb
and
push
jbe
movsb
dec
adc
mov
mov
fsubl
out
sub
lcall
jno
mov
pop
push
cmp
iret
je
xchg
lret
stos
pop
xor
aaa
jbe
mov
push
and
jnp
movsb
out
sub
les
cwtl
pop
ror
in
rcl
push
test
jmp
push
into
faddl
subb
inc
jnp
mov
pop
xchg
adc
cmp
mov
out
aas
mov
in
lret
mov
out
stc
sbb
mov
pushf
mov
fisubs
loopne
mov
mov
movsl
leave
call
lcall
inc
mov
ja
pop
jg
and
dec
pop
and
imul
jb
cmpsl
adc
jae
lret
sub
dec
mov
data16
xor
pop
xlat
jno
cmp
pop
add
sub
or
add
add
loope
ljmp
and
push
inc
lock
mov
pop
rcl
cs
fisttpl
push
inc
lret
stos
cmp
pop
lret
mov
scas
test
dec
xchg
mov
cmp
or
scas
sub
xor
sbb
push
jle
test
xor
nop
sub
push
xor
push
and
push
ret
out
popf
mov
ffreep
pop
rolb
fcoms
inc
or
test
sarl
stos
cmpsb
pop
mov
sti
mov
inc
ret
rorl
mov
fwait
fwait
js
push
and
fnstenv
jae
or
mov
es
lcall
out
or
in
sub
jp
sar
mov
pop
int3
mov
add
loop
sahf
out
aad
cli
sbb
or
sbb
lret
enter
out
cmp
mov
sbbb
ja
mov
cmp
cli
cld
cmp
js
mov
inc
mov
test
xchg
stos
imul
aas
jae
pop
in
mov
jb
xchg
jge
repz
push
adc
out
jb
xchg
lret
jmp
lcall
outsb
loopne
call
stos
icebp
mov
aaa
inc
int3
out
jae
xor
push
out
jnp
jae
ficoms
and
and
mov
sbb
pop
movsl
stos
repz
lds
mov
jns
cmpsb
cli
xor
stc
pop
jns
icebp
push
cmpsb
shr
sub
popf
lret
scas
popa
or
dec
pop
xor
test
nop
jp
mov
rcr
xor
insl
cmp
mov
mov
sahf
mov
fcomps
pop
adc
loope
add
xchg
mov
jbe
ljmp
lds
test
mov
pop
imul
ret
mov
add
int
sub
inc
ss
scas
sub
mov
adc
lea
push
std
cld
stc
lret
push
outsl
out
pop
rorb
fwait
xor
pop
hlt
inc
and
sub
andl
loope
cmpb
pop
testb
pop
push
mov
daa
in
mov
push
push
mov
mov
mov
pop
repz
sbb
stos
jns
jecxz
add
pop
pop
fldcw
sub
add
add
push
xchg
xor
test
push
or
int
std
and
xor
movsb
aam
call
sti
divl
enter
gs
pop
cmc
test
pop
aad
and
inc
dec
js
sahf
sub
in
rcrb
adc
pop
inc
mov
push
loopne
pop
and
mov
cmp
daa
adc
sbbb
or
mov
imul
shrb
inc
add
sahf
rcr
mov
pop
pop
out
inc
stc
lock
pop
daa
add
in
sbb
lea
fistpll
jl
mov
stos
stos
ljmp
jg
jl
and
sbb
bound
jae
and
xchg
adc
repnz
rsm
int
adc
sarl
cmpsb
and
cmp
aam
inc
push
js
cld
push
lds
je
lret
dec
shl
xorb
fcoms
fwait
xchg
repnz
mov
nop
inc
es
pop
jnp
dec
call
imul
xchg
cld
xchg
jp
add
push
fldl
mov
xlat
and
push
or
aas
mov
popa
popa
stos
lret
cs
inc
mov
mov
and
cmp
cmp
xchg
ljmp
xor
stos
rorl
inc
mov
dec
iret
jmp
and
out
fucomi
sub
add
pop
stc
adc
scas
dec
mov
leave
fisubs
inc
add
sahf
xchg
xor
dec
rcll
add
test
xchg
xchg
and
sahf
jns
or
in
cltd
ljmp
push
sarl
jle
arpl
pop
aad
mov
cld
push
pop
sub
into
out
push
lahf
rcll
mov
movsl
and
push
pop
pop
sarb
cmp
dec
jge
cmc
sarb
dec
movsb
sub
nop
rolb
mov
std
sbb
xor
push
mov
loopne
in
in
push
cmp
mov
push
jecxz
mov
ja
and
mov
int3
inc
mov
push
cwtl
xor
xchg
arpl
add
mov
outsb
adc
and
jno
fdivl
scas
arpl
sub
jle
jecxz
fidivrl
daa
test
in
cwtl
out
jae
mov
lods
imul
pop
daa
cwtl
or
cmpb
into
adc
es
int3
aas
jmp
fcomp
icebp
sub
movsl
adc
in
rcl
xorps
mov
push
std
xchg
dec
xchg
adc
mov
sub
mov
xor
inc
test
test
out
cmp
jo
out
cmp
mov
out
mov
add
mov
loop
xor
or
dec
mov
stos
test
cmpsl
mov
jnp
scas
xchg
pop
lahf
test
andb
dec
cld
xor
and
inc
mov
pusha
sti
mov
adc
mov
sbb
xor
mov
sbb
pop
mov
mov
jp
mov
ror
mov
fdiv
cmpsl
test
or
mov
es
mov
rclb
adc
pop
mov
jnp
jge
jmp
push
movsl
push
mov
sub
inc
add
push
push
fcompl
mov
adc
push
pop
pushf
cmp
nop
bound
xorb
sarb
fldenv
in
fs
hlt
ss
xchg
cmp
bnd
or
xchg
popa
cmp
xorb
cmp
test
and
clc
arpl
sti
mov
mov
xor
iret
or
push
fildl
cmp
inc
adc
sub
and
pop
ljmp
je
cwtl
mov
stos
stc
mov
pop
xor
outsl
add
mov
jae
jne
roll
lret
push
sarl
jns
mov
cmp
inc
add
lahf
pop
out
in
add
rorb
xchg
add
ret
cmpsl
pop
jns
add
aaa
cmp
cld
lods
in
adc
lock
push
xchg
mov
ja
push
and
cmpb
jp
icebp
xor
adc
jecxz
gs
sub
xor
ljmp
push
fwait
inc
in
pop
and
cmp
lahf
dec
cmp
arpl
fucomp
xchg
dec
in
xchg
jnp
cmp
jl
add
rcrb
sub
dec
sub
ljmp
or
pop
mov
inc
imul
cmp
push
add
push
popf
loope
lahf
das
testl
add
cs
jb
nop
inc
xor
cmp
enter
add
xchg
inc
mov
cltd
clc
iretw
cmp
xor
rol
pop
gs
and
cmp
insb
mov
and
ret
xchg
insb
clc
andb
in
push
stos
das
stos
inc
cmp
xchg
test
outsb
pop
cwtl
mov
xchg
movsl
pop
lret
mov
les
dec
out
dec
or
pop
fdivs
ficoms
sbb
cld
push
test
pop
mov
mov
inc
dec
por
adc
in
stos
adc
lods
int3
arpl
fcmovnb
or
popa
xchg
iret
fwait
mov
cmp
add
es
sbb
push
cmp
jo
leave
idivb
xor
and
xchg
nop
test
std
shrb
into
and
cltd
or
ss
pushf
mov
or
lock
stos
cmc
mov
lret
faddl
xchg
icebp
outsb
imul
popf
arpl
orl
xchg
lock
loop
pusha
add
pop
ds
jge
movsb
or
jno
insb
lock
test
push
dec
fsubl
mov
repz
stc
movsb
jbe
in
mov
incl
pop
mov
mov
add
cs
jl
pop
mov
add
ljmp
cmpb
xchg
int
stc
ficomps
sbb
rcrb
mov
xchg
push
lock
les
cmpsl
xchg
fisubrs
xchg
sahf
push
jns
xchg
dec
and
lahf
stc
sub
push
dec
jg
xor
adcb
jne
inc
ret
stc
leave
jle
adc
push
push
and
push
inc
mov
cli
jmp
lret
pop
int
mov
and
pop
mov
add
inc
movsb
jnp
stc
jl
mov
sbb
das
lret
mov
lcall
mov
stos
xlat
xchg
out
add
cmpsl
loope
add
lret
xor
sub
ret
jp
data16
lahf
leave
push
std
stos
fnsave
fistpll
test
leave
mov
ds
lods
mov
icebp
jns
cmp
or
push
and
fidivs
imul
imul
jp
ja
icebp
movsl
xchg
cmp
mov
add
adc
aas
xchg
mov
lods
fidivs
lcall
in
icebp
cmp
sti
mov
mov
xor
jnp
jb
fstps
jle
in
push
hlt
lret
add
inc
repz
nop
or
lods
shlb
aaa
movsb
cld
js
push
jns
cltd
inc
outsb
push
vmwrite
inc
cmp
andb
lea
fmuls
dec
lret
hlt
iret
jae
das
cmpsb
aad
inc
dec
jb
mov
mov
adc
mov
aad
pop
out
ss
pop
test
add
mov
mov
rcr
fmull
movsb
cmpsb
pop
inc
xchg
inc
dec
xor
cmc
pop
jnp
scas
sub
fcoml
xchg
rcrb
clc
or
cmpsl
and
sti
cltd
push
mov
test
cmp
jecxz
ljmp
stc
xchg
hlt
popa
inc
in
mov
sti
out
shr
mov
sub
insl
adc
jo
push
std
sbbb
xchg
int
sbb
pop
iret
fwait
add
pop
cld
mov
mov
and
pop
add
inc
push
xor
movsl
cmp
push
xor
fwait
jo
js
dec
lahf
push
push
jge
lods
lods
lods
dec
jb
jecxz
xchg
shlb
fsubs
push
popa
jmp
stc
ficoml
shl
or
sahf
out
fistpl
pop
push
or
cwtl
sarl
loop
push
mov
stc
and
in
fidivrl
lahf
mov
lods
jne
sti
push
jecxz
lods
xlat
mov
fmull
sar
push
fcompl
pop
pop
sub
xlat
outsb
popf
add
lods
sub
fwait
insl
xor
sbb
call
roll
aaa
push
mov
jo
outsl
lea
out
and
or
outsb
pop
dec
mov
mov
xchg
or
sub
sub
pop
mov
or
jmp
insb
lods
inc
push
imul
sti
fcmovnu
fnstsw
lret
cmp
adc
pop
inc
cld
mov
add
adc
or
fistps
pushf
imul
sbb
es
sub
sarb
mov
out
jb
out
unpcklps
and
flds
sbb
mov
jg
cmp
cmp
mov
ret
int3
cwtl
ret
test
into
adc
cli
mov
jns,pt
sub
je
jp
or
jecxz
mov
test
loopne
mov
jp
cmpsb
inc
xor
test
or
mov
pusha
imul
addr16
mov
sahf
sbb
dec
repz
push
in
xchg
bound
push
jmp
push
push
rcrb
dec
aad
mov
or
mov
ja
icebp
divl
jo
test
je
dec
dec
int
jnp
imul
stos
pop
les
fsubl
loopne
add
jg
sub
sti
cltd
and
mov
mov
out
and
mov
psubusb
xchg
leave
jecxz
loope
scas
push
ljmp
pop
aaa
jns
movsl
sub
xor
jae
sub
cwtl
jne
pop
icebp
or
testb
outsl
cmp
repnz
bound
movsb
mov
scas
or
sub
aaa
leave
insb
mov
push
jge
jae
mov
mov
cmp
pop
pop
ret
arpl
cltd
fmulp
in
fmuls
repnz
inc
mov
xchg
lcall
pop
imul
jne
lock
and
lods
testb
aas
mov
out
subb
rcll
inc
jne
jge
cmpsl
std
inc
sbb
add
fs
orb
aam
repnz
xchg
jo
sbb
inc
mov
xchg
bound
push
jl
sub
addr16
jg
dec
and
daa
fstps
mov
pop
lock
dec
sbb
rcll
xor
add
jb
dec
lock
push
int
aam
xlat
mov
aaa
inc
xor
inc
cmovb
inc
mov
lret
lds
cmp
sub
lea
testb
fs
or
cld
addr16
jle
movsl
cmp
fidivrs
lods
aaa
repnz
fimull
lods
fdivs
lock
dec
dec
lds
xlat
and
jbe
out
cmp
adc
mov
mov
xchg
leave
in
gs
xchg
mov
xor
sbb
jae
pop
push
sbb
or
sahf
lret
in
pusha
mov
mov
out
xor
andl
cmp
inc
xorb
loop
lock
adc
sub
stos
pop
testl
pop
add
jl
dec
xchg
je
inc
sbb
cmpsb
push
incl
jnp
xorb
xor
sarb
adc
idivb
and
mov
lret
hlt
imulb
repnz
cmpsl
test
fildl
stos
aas
data16
mov
push
mov
cmp
cwtl
fsub
xor
roll
and
lcall
push
jmp
fdivrl
lock
push
lret
subl
bound
mov
ds
mov
pop
ret
leave
pop
sbb
mov
iret
push
or
aas
cmp
cs
mov
test
repz
iret
adc
cmpsb
push
mov
sub
stos
les
dec
xchg
push
mov
pop
sarl
dec
jb
flds
mov
or
in
or
jg
out
and
lcall
int
arpl
sarb
daa
and
adc
add
mov
fcomps
test
mov
xchg
inc
inc
std
inc
outsl
fucom
mov
push
cmpb
mov
xchg
ss
movsb
dec
sbb
stos
mov
stos
xor
xchg
dec
icebp
push
mov
cmp
leave
shlb
push
mov
jno
imul
add
or
jns
xor
xchg
je
xor
negl
pushf
jne
into
andb
dec
ret
cmp
push
push
mov
aam
loope
aas
aam
dec
pop
pop
push
idivb
scas
sbb
mov
in
pcmpgtb
mov
outsb
add
xor
jle
inc
das
xor
rcrb
add
mov
inc
cmp
roll
cld
popa
repz
jl
lahf
scas
or
xorl
mov
jl
sbb
jbe
dec
movsb
or
sub
jl
xchg
in
lahf
ja
adc
push
popf
fbld
hlt
sbb
repz
mov
add
notb
add
push
inc
or
flds
scas
lea
xor
or
sub
out
in
das
mov
imul
adc
imul
ja
mov
inc
sbb
enter
fnstcw
sub
in
addb
sbb
cmpsb
stos
xorb
push
mov
ljmp
aaa
es
mov
and
lods
out
dec
sub
and
jmp
mov
loop
mov
iret
jae
fnstcw
sbb
lds
pop
in
hlt
add
popa
jo
pop
fcompl
jo
or
mov
add
push
xchg
hlt
dec
cvtdq2ps
sahf
mov
je
push
faddp
and
mov
out
push
cmp
leave
jl
inc
pop
scas
mov
cltd
insb
dec
lahf
icebp
jmp
fwait
bound
test
in
fldcw
lcall
jmp
scas
pushl
mov
sti
mov
daa
dec
repz
lods
cmp
adc
loopne
lods
data16
or
jmp
pop
xor
sbb
lret
push
jge
emms
shll
xorb
mov
mov
push
cmpsl
inc
test
xchg
shll
leave
sub
pop
jp
mov
js
jp
stos
or
daa
lcall
lods
enter
loop
addr16
push
or
mov
scas
mov
fwait
popf
mov
enter
jle
xchg
icebp
cli
add
add
pop
hlt
ret
lea
pop
push
cmp
leave
cwtl
popa
mov
sub
fwait
cltd
and
jg
lods
pop
int3
fiadds
mov
sub
pushf
addb
insb
cmp
fsqrt
iret
xchg
clc
outsb
and
or
test
adc
mov
jo
dec
iret
cmpsb
in
fldcw
jle
rcll
sub
in
lods
into
pop
les
jg
sub
inc
jo
imul
sub
add
movsl
out
fwait
lea
dec
jle
cld
mov
sbb
dec
movsb
lret
jne
repz
insb
js
rcr
push
jecxz
and
loop
mov
dec
xorb
std
push
add
scas
jne
iret
pusha
mov
xor
lcall
movsl
jmp
push
fidivl
sti
scas
ret
das
push
cltd
nop
jo
jnp
mov
out
fwait
mov
test
int
stos
lcall
shl
xor
mov
sub
inc
leave
xchg
add
outsl
icebp
popf
xchg
mov
pop
xchg
call
sbb
jne
jle
lahf
xor
adc
in
in
sbb
rcll
test
mov
orl
or
lods
push
dec
in
xchg
pusha
push
xor
adc
inc
push
cmp
jbe
jo
subl
sti
cmp
rcrl
mov
mov
rorl
inc
loop
inc
jns
and
jle
int
hlt
mov
rolb
es
aaa
cmp
out
idivb
sub
jp
nop
out
sbb
adc
and
mov
icebp
xchg
out
mov
iret
scas
inc
push
enter
mov
lret
jnp
sbb
leave
std
shlb
lods
sbb
arpl
push
add
movsbl
das
imul
aam
test
pop
dec
jge
and
jge
push
xor
fwait
dec
adc
add
pop
sub
bound
pop
ljmp
dec
xchg
je
into
cmp
mov
pop
loopne
mov
in
test
into
mov
scas
orl
mov
jo
or
push
sub
test
jo
pushf
mov
rorl
push
jns
pop
push
nop
int
add
ljmp
cmp
or
sbb
mov
inc
lcall
mov
fs
jnp
pop
ja
jge
outsl
push
dec
cli
cmpsb
inc
arpl
pop
lahf
mov
mov
fstpl
adc
mov
xor
lods
mov
and
fistl
add
loopne
sbbb
cmc
iret
sti
pop
add
jl
iret
ret
and
outsb
pop
sti
test
rcll
mov
jle
cs
mov
dec
cmp
pop
jg
daa
add
add
adc
das
xchg
xorb
popf
shll
dec
xor
pushf
fucom
mov
pushf
aas
cli
loope
fs
stc
dec
sbb
mov
test
inc
push
testb
int3
in
dec
popa
jo
mov
adc
inc
or
test
std
mov
add
mov
fiadds
jo
call
fwait
test
dec
jp
mov
jb
push
notb
inc
fstps
outsl
add
shrl
adc
mov
dec
or
inc
and
and
les
ss
jae
adc
sub
into
jmp
lds
inc
push
sahf
jns
xchg
aas
adc
pop
popa
push
xorl
out
sahf
std
mov
push
sbb
in
mov
jno
xchg
ficoms
icebp
lret
push
in
dec
lret
fmuls
fisubs
loope
ljmp
aas
popf
push
xchg
mov
add
pop
mov
pop
xor
sbb
xchg
xor
shr
push
stos
xor
inc
jle
mov
mov
test
lods
jb
out
cmp
out
push
pop
mov
xor
int
mov
popa
fwait
arpl
jb
mov
mov
mov
sub
fwait
push
ds
cmpsl
std
stc
lcall
fsts
and
out
stos
inc
or
test
popa
popl
cmp
insb
cmp
dec
jp
out
hlt
test
out
out
filds
cld
dec
test
xchg
fisubrl
lcall
sbb
inc
imul
scas
gs
cmp
jae
inc
rclb
data16
inc
cli
mov
popa
sbb
or
lcall
jp
iret
mov
and
mov
mov
ret
xchg
fldl
and
sti
lcall
enter
shll
nop
pop
outsb
aad
or
inc
push
fldcw
mov
sbb
push
push
jae
mov
xchg
mov
mov
pop
clc
mov
mov
xchg
icebp
pop
mov
pop
push
add
sub
dec
mov
pop
out
sbb
xchg
loope
lods
push
and
mov
mov
jle
sub
dec
popa
inc
and
lret
outsl
jle
mov
int3
mov
push
scas
xlat
jne
pusha
or
pop
dec
in
insb
jo
pop
pop
mov
dec
ret
adc
loop
dec
mov
xor
repz
sub
dec
mov
movsl
movsb
add
aaa
jb
xor
sbb
mov
push
imul
fs
pop
pop
stos
popf
dec
add
sbb
pushf
dec
cmp
or
ret
arpl
sbb
or
rcll
shll
aaa
in
test
xor
pop
lds
lods
out
cmpsl
test
ret
inc
lahf
pop
shrb
xchg
ret
mov
xorl
push
stos
xchg
lcall
push
popf
push
int3
xchg
sub
iret
lret
shlb
and
adc
out
loopne
nop
repnz
jecxz
test
movsb
imul
pusha
pusha
sbbl
decb
test
or
in
test
push
jg
inc
xchg
pop
rorb
dec
dec
lods
push
loope
inc
out
daa
jns
ficoms
dec
out
sbb
mov
inc
jae
or
test
outsl
adc
jns
inc
add
js
out
das
mov
sub
mov
jno
dec
push
mov
push
shlb
test
out
jmp
jbe
test
sub
shrl
scas
pop
fisttpl
std
adc
outsl
cwtl
push
out
jae
popa
jnp
pop
sub
insb
lea
test
imul
in
loop
or
inc
mov
push
faddl
lcall
arpl
mov
pop
dec
dec
aas
jl
ss
jb
adc
jae
imul
mov
jge
xor
mov
push
inc
inc
out
fistl
test
jmp
mov
mov
es
dec
loopne
fld
out
push
add
out
add
iret
xor
xchg
inc
test
dec
ss
hlt
sub
cmpsl
mov
dec
rolb
cmp
jp
add
or
mov
insb
pop
stc
cwtl
sbb
push
ss
test
mov
inc
insb
jp
data16
sbb
mov
mov
cmp
pop
mov
scas
add
jnp
cmp
bound
fistl
repnz
mov
mov
mulps
mov
jle
outsl
add
mov
push
out
and
jge
push
xchg
ret
push
push
jmp
hlt
xchg
xor
bound
push
sbb
or
jmp
jecxz
movsl
and
sub
mov
je
mov
and
xor
pop
cmp
das
orb
add
mov
add
and
es
out
add
sbb
or
stos
add
jg
jno
jae
cltd
mov
shlb
add
imul
adc
cmpsb
ss
orl
or
mov
pop
js
push
ret
int3
xchg
test
push
lea
dec
popf
cltd
adc
push
es
test
jecxz
mov
xlat
inc
mov
addb
repz
cmp
pop
stos
popa
lahf
testl
pop
je
shll
sbb
push
and
or
dec
movsb
aam
mov
icebp
sbb
jns
jge
notl
xchg
or
lods
mov
pop
pop
cmp
push
and
fists
dec
in
pop
fnstcw
jp
push
sub
cld
cmp
xor
leave
inc
fiadds
adc
jbe
sub
std
mov
nop
outsb
inc
pop
adc
mov
ficoms
cltd
sbb
fs
and
mov
cmp
mov
pop
push
test
sbb
je
sbb
push
xchg
jns
cmp
int3
mov
mov
fiaddl
push
arpl
xchg
out
push
adc
or
mov
cmc
data16
pop
or
jp
and
bound
and
xor
jg
xchg
sahf
in
add
jecxz
daa
pusha
je
les
lods
sub
int3
in
imul
xor
mov
andb
pop
aaa
scas
test
or
sub
add
xchg
je
mov
pop
lret
pop
xor
fdivrs
sbb
popa
int
lea
or
int
cli
push
ljmp
cmp
or
icebp
fdivr
push
clc
pop
stc
add
jae
dec
or
js
and
into
mov
add
std
and
imul
popf
stos
or
pusha
mov
pop
repnz
dec
in
std
mov
loopne
mov
push
sub
sub
ljmp
addr16
mov
out
ret
mov
pop
sbb
mov
or
dec
in
repnz
sbb
xchg
or
test
cmp
arpl
and
add
ds
push
in
xchg
push
cltd
or
jno
movntps
sti
mov
lds
adc
stos
stos
mov
lea
rorb
mov
add
sbb
add
jbe
shll
aam
fdivrl
pop
adc
ds
shll
repnz
push
mov
sbb
jle
adc
arpl
test
mov
out
adcb
arpl
bnd
mov
cld
add
fidivl
sub
nop
outsl
jae
mov
xorl
enter
or
push
and
stc
push
mov
sbb
loopne
push
xor
lods
insb
stos
mov
aas
fsts
fdivrs
xchg
mov
jecxz
push
daa
cltd
pusha
dec
gs
add
out
push
das
loopne
lret
pop
es
popa
sahf
push
pop
adc
and
into
xorl
cmp
mov
add
jnp
stos
sub
fcmovnu
push
pop
leave
adc
lock
je
mov
mov
mov
adc
add
dec
jo
decl
sbb
fists
ds
lahf
mov
into
mov
or
jl
or
inc
jmp
subl
scas
test
cld
pop
insb
inc
test
popf
test
xor
in
cmc
ja
sub
inc
dec
mov
lar
stos
aad
add
xor
stos
fldcw
xrelease
pop
fisubs
ja
shrl
pushf
adc
xor
arpl
and
add
sbb
jae
repnz
push
lods
dec
pop
data16
add
das
pop
shlb
gs
cmp
sub
mov
mov
call
xchg
incl
lret
repnz
pushf
into
pop
leave
data16
xor
sub
or
mov
add
lea
mov
mov
imul
xchg
pop
lahf
push
cmpsb
jmp
fidivs
jl
jns,pn
pop
mov
ret
or
inc
lods
lods
leave
sub
ret
sub
jle
add
cwtl
aas
mov
clc
or
out
mov
pop
push
sub
insb
jmp
fs
xor
jmp
sub
mov
adc
dec
sbb
push
enter
sub
inc
sbb
mov
jp
hlt
negl
dec
adc
inc
sbb
cmpsb
mov
mov
mov
sub
aad
pop
je
dec
fsubrs
mov
xor
sub
mov
jb,pn
add
stos
pop
inc
loope
mov
subb
cli
jnp
loop
les
lcall
mov
stos
add
clc
arpl
xor
ret
xchg
addr16
dec
dec
pop
shll
push
add
hlt
divb
aad
in
fiaddl
sbb
or
lret
rcrl
mov
popf
add
jge
push
mov
scas
dec
and
mov
fistpll
das
movsb
jle
out
jecxz
inc
jo
dec
ret
cmpsl
inc
mov
shrl
sahf
mov
les
mov
adc
push
out
out
pop
stc
cld
and
adc
leave
cli
xchg
jmp
dec
pop
adc
out
adc
into
cs
mov
movsl
push
js
addr16
or
cmp
or
enter
lock
jno
cmc
clc
rcrl
sub
fisubrs
enter
aad
in
sub
popf
dec
fimull
dec
bound
js
pop
scas
mov
cmc
add
xor
dec
rcrb
push
popa
xchg
enter
mov
sub
leave
cmp
inc
and
xor
fwait
mov
movsb
push
mov
test
add
inc
adc
jbe
lret
sub
incl
pusha
sub
adcb
xor
inc
or
push
or
aaa
push
jp
fistps
lods
lds
in
inc
pop
test
scas
pop
out
push
ret
outsb
inc
lahf
fstpl
push
jo
cltd
in
add
inc
lock
lahf
cmpsl
pushf
xchg
xor
std
lods
pop
cmc
cmp
mov
pop
or
dec
add
and
leave
inc
ret
jo
and
push
pop
les
xor
cmpsl
in
clc
aam
xchg
xchg
mov
push
bswap
cmc
xchg
and
cs
cmp
cmp
or
pop
mov
std
xchg
mov
lret
aam
jae
out
popa
jo
in
cmp
ds
imul
or
xor
es
sub
loopne
fwait
dec
cmp
jmp
leave
push
mov
xchg
mov
out
cmpsb
cwtl
push
inc
cmp
or
stos
ret
or
stos
notl
out
neg
movsl
filds
push
pop
jnp
pop
testl
dec
mov
adc
lret
push
loopne
shl
repz
jecxz
xor
fninit
sub
stos
dec
mov
lods
jp
fs
sarl
das
lds
sti
repz
in
add
scas
mov
pop
xchg
movsl
mov
dec
call
fsubl
in
xchg
cld
cmp
xchg
das
call
in
mov
arpl
lods
dec
cmpsl
xor
mov
imul
mov
or
and
push
xorb
ret
pop
inc
fs
push
stos
dec
adc
add
aam
fstpl
mov
shll
pop
mov
and
outsb
flds
daa
cmp
scas
lret
pop
mov
cmp
push
frstor
mov
out
mov
jg
mov
pop
dec
lock
inc
hlt
jmp
mov
and
invd
les
inc
div
inc
movsb
les
push
jle
xchg
idivl
dec
aad
movsb
fwait
sbb
dec
jnp
pop
test
fcompl
ljmp
xchg
jmp
add
ret
dec
inc
jb
mov
outsb
push
mov
fwait
ss
scas
push
or
xor
arpl
ret
lea
add
loopne
addl
je
push
test
mov
pop
mov
jno
mov
loop
add
std
popa
jmp
int3
cs
jge
push
sbb
loopne
and
jne
xchg
add
out
lods
push
repz
xchg
mov
cmp
lahf
or
mov
cli
pop
cmp
mov
int3
std
gs
aas
mov
movsb
add
out
xchg
cmp
in
ficoms
out
out
mov
lret
mov
imul
in
cmp
mov
hlt
pop
push
aad
rcl
loop
add
aas
mov
cmp
jns
sbb
xchg
mov
es
mov
std
push
and
shll
mov
cmpl
xor
out
pop
pop
ds
test
jo
adc
mov
cmp
dec
xor
lret
popa
fs
fwait
xor
or
xchg
jg
mov
xor
xchg
xchg
xchg
mov
in
and
mov
xor
idiv
push
push
call
outsb
sbb
push
les
in
xor
mov
incl
out
sarb
fsts
stos
cmp
and
insb
imul
adc
es
bound
mov
ss
ljmp
or
inc
dec
call
ja
mov
cmpsb
adc
push
mov
jno
fdiv
mov
add
xchg
cmpsb
dec
adc
loope
test
test
fsts
rolb
sub
mov
pop
and
ret
mov
adc
jmp
imul
stc
mov
xor
mov
mov
in
xlat
aam
sahf
jno
sub
sti
jbe
movzwl
movsb
addr16
in
mov
push
stc
mov
adcl
mov
std
dec
rcrb
jmp
daa
clc
fiadds
and
orb
xor
mov
pop
mov
outsb
mov
or
in
ret
push
adc
mov
in
xchg
adc
mov
adc
sbb
dec
sbb
push
dec
and
mov
sub
dec
sub
out
inc
pusha
cmc
jg
pusha
fmuls
jae
insb
das
sbb
js
xchg
mov
xchg
push
rcll
adc
push
or
js
cld
fisttps
ret
add
xchg
das
cli
jmp
enter
mov
xchg
ret
xor
or
jnp
repz
hlt
sbb
enter
push
pop
mov
dec
lods
or
cmp
jae
out
xchg
and
mov
xor
jo
outsb
jmp
sbb
jo
dec
push
pop
xchg
and
xor
scas
push
mov
push
lods
mov
sbb
in
imulb
mov
sub
mov
xor
out
jbe
mov
jb
into
jne
lret
jl
pop
dec
fildll
jecxz
pop
mov
lcall
jecxz
repnz
pop
and
shlb
pop
add
loopne
mov
xchg
arpl
add
out
or
pop
lret
repz
iret
mov
nop
cmp
outsl
lret
pop
in
mov
jg
ss
shll
mov
xor
sbb
cmp
sbb
add
in
dec
xor
adc
stos
test
pop
jbe
cmp
aam
dec
jle
sub
lcall
jae
iret
add
sbb
jb
in
or
dec
in
cmpsl
addr16
inc
xchg
add
dec
xor
jecxz
lahf
ja
jl
mov
sub
and
pop
aad
inc
pop
lret
js
dec
xchg
jb
fmull
testb
mov
mov
mov
cmp
xor
notb
or
ljmp
iret
jg
test
sti
sub
scas
push
in
hlt
daa
loopne
enter
xchg
and
loope
jns
mov
sbb
lahf
pop
loope
sub
xor
add
in
lahf
jbe
aad
mov
add
addr16
stos
les
arpl
sbb
frstor
dec
cmpsl
pop
f2xm1
xor
mov
add
xor
push
cmc
inc
stc
daa
sbb
xchg
dec
je
push
das
test
lahf
enter
sub
aas
fistps
aam
outsl
fcomi
in
xchg
dec
ja
rcrb
xchg
movsl
test
or
into
jecxz
int
aaa
mov
jb
sub
inc
repz
adc
xchg
jmp
imul
sub
dec
mov
push
movsl
sahf
imulb
js
outsl
xchg
cmpsl
mov
sbb
mov
or
mov
imul
dec
mov
and
icebp
icebp
insl
xchg
enter
jae
mov
xor
add
mov
fs
jg
cmp
add
cmc
jno
cmp
inc
cltd
ret
call
inc
or
adc
push
mov
stos
mov
in
scas
mov
popf
movsb
out
lahf
cmp
fdivr
mov
mov
push
adc
cmc
mov
stos
push
cltd
icebp
dec
repz
push
inc
scas
sub
arpl
pop
imull
xchg
xchg
mov
arpl
loop
dec
sub
in
jmp
jns
into
cmp
out
je
cmc
fidivl
jge
je
mov
inc
int
pop
mov
shrl
dec
aas
fsubrp
popf
fdivr
fidivrl
scas
pop
xor
push
jecxz
dec
jg
sub
ret
or
dec
data16
mov
and
jnp
decb
mov
jle
push
mov
and
out
xchg
and
fwait
int3
cmpsl
xlat
xor
sbb
int
adc
arpl
gs
cmp
clc
and
out
push
mov
sub
xor
cmpl
fidivrl
in
push
jl
ret
loop
std
mov
lret
mov
jmp
jl
test
mov
repnz
xlat
je
lods
mov
xor
je
xor
push
jne
pop
dec
adc
jg
cmp
pop
in
jb
push
inc
ficompl
cli
pop
push
add
add
aam
xchg
jp
add
int3
mov
fsts
xchg
xchg
js
imul
jmp
jne
mov
jbe
shlb
imul
mov
rcl
jo
xchg
pop
cmp
sbb
jns
inc
add
mov
gs
adc
or
sub
mov
push
out
add
mov
fcmovb
jno
cld
orb
cli
fldcw
push
dec
aaa
xchg
ret
les
mov
addr16
mov
cs
mov
sbb
in
movsl
cmp
push
fstpt
addl
ss
xorl
inc
mov
insb
int
mov
ljmp
cmpsl
cmp
mov
stc
mov
pushaw
into
js
in
les
push
out
or
sti
popa
sub
mov
ja
xor
sbb
sbb
fldcw
loopne
sub
out
and
and
out
mov
xor
movsb
push
insl
rcrl
jne
test
mov
stc
fidivrl
and
push
repz
dec
jp
xor
xor
cld
lret
jo
push
jbe
in
sahf
inc
mov
and
adc
into
test
pusha
bound
adc
pop
cmp
push
sbb
aad
inc
pushf
bound
pop
addr16
mov
outsl
lods
jl
outsl
sti
mov
sbb
rorl
sti
out
les
and
mov
mov
icebp
push
enter
lea
movsl
add
mov
push
xor
cs
xor
pusha
inc
jecxz
imul
or
pop
loope
sbbl
aad
jmp
mov
jbe
mov
ret
fsts
and
jp
jg
add
jecxz
loop
inc
iret
addb
pop
cmp
shll
inc
cmpsl
loope
lahf
daa
mov
cmc
ret
cmp
dec
sub
int
fs
je
jne
adc
and
xchg
mov
mov
mov
fimuls
popf
adc
push
or
data16
cmp
aas
and
sti
adc
pop
pop
cmc
cmp
outsl
mov
inc
adc
push
iret
jle
adc
pop
aaa
adc
cli
or
pop
pop
gs
shl
jmp
pop
bound
sarb
push
dec
mov
mov
ss
mov
ss
bound
rep
mov
mov
dec
dec
sbb
xchg
or
iret
or
out
sub
es
cmp
sub
inc
mov
xor
jnp
xchg
adc
mov
dec
test
ja
mov
test
cli
or
icebp
pop
xchg
jge
inc
jnp
dec
mov
roll
and
add
shrb
sub
pop
push
inc
pushf
push
test
mov
cmpsb
pop
jle
xchg
ja
repnz
jle
out
data16
fprem1
or
aas
or
clc
mov
movsb
sbb
stc
repnz
ficoml
add
mov
andb
jecxz
scas
ret
movsl
das
into
into
add
roll
in
mov
push
lahf
push
stos
pop
aam
adc
sub
adcl
jbe
inc
cmpsb
dec
pop
dec
les
fiaddl
mov
mov
pop
fwait
xor
daa
sarl
inc
jbe
lahf
aad
rclb
stos
lds
fwait
inc
ret
aad
out
cli
out
sub
adc
sub
int
xor
iret
mov
inc
mov
push
cld
xchg
popf
cmp
shl
out
push
dec
jl
mov
into
fists
xor
jb
xorl
enter
int
jne
lods
xchg
push
push
or
icebp
ss
movsl
xchg
push
mov
xchg
loope
mov
popa
jg
jmp
fidivrs
cmp
popf
push
mov
pushf
scas
sbb
adc
bound
xchg
dec
xchg
stos
popf
jbe
push
sub
push
das
push
cli
adc
push
iret
add
fdivr
enter
jg
int3
bound
insb
ds
inc
ficompl
jecxz
int
aas
daa
mov
inc
nop
adc
pop
and
call
and
les
push
lods
and
imul
mov
cltd
sub
sbb
adc
inc
jbe
push
xchg
test
push
rep
push
mov
je
scas
dec
mov
dec
jmp
cltd
out
cmpb
icebp
btsl
aam
int3
jnp
daa
sbb
sub
scas
lds
jmp
andb
jecxz
add
and
mov
inc
sub
insb
bound
and
push
cmpb
mov
movsl
ja
loop
inc
cmp
push
arpl
xor
mov
repz
sub
test
jae
xchg
stos
jle
pop
out
lahf
jg
je
jp
add
mov
push
cmp
jle
inc
jmp
das
mov
mov
jnp
push
jb
jp
and
int3
les
call
lret
incl
adc
push
stos
popf
js
sbb
test
ss
pop
call
aaa
incl
stc
in
sub
hlt
add
fs
adc
inc
insl
sbb
xchg
int3
or
sbb
push
push
in
lds
and
ja
rcrl
cmp
flds
push
rcrl
pop
mov
add
cmc
imul
mov
mov
scas
loopne
insl
fmul
mov
mov
add
cld
ret
sub
sub
mov
icebp
sub
cmc
xchg
push
loop
adc
dec
roll
mov
mov
sarb
in
movsl
insb
popa
cmp
push
lods
aas
sbb
js
and
sbb
sub
clc
xchg
and
stos
inc
mov
shlb
mov
loope
fsubrl
inc
sbb
in
add
mov
mov
push
mov
sar
dec
push
dec
ficoms
mov
xlat
aaa
mov
mov
push
mov
xlat
jne
cli
outsl
enter
cmp
push
ficoms
jae
or
push
mov
insl
xor
push
inc
movsl
mov
fldl
int3
xchg
mov
sti
clc
incl
dec
fsincos
xor
loope
cltd
mov
negl
mov
mov
imul
push
loope
pop
outsb
push
xchg
iret
ss
arpl
add
das
add
jnp
out
data16
cmp
dec
addr16
jg
aas
sbb
mov
sub
push
ja
and
int3
daa
pop
xlat
fs
test
ret
sub
stos
xchg
fnstcw
movsb
mov
and
popa
je
popf
push
shl
dec
jge
mov
sbb
mov
in
popa
pop
out
outsl
xchg
add
jbe
and
mov
pop
xchg
int
nop
imul
nop
and
movsb
xchg
lcall
stos
cwtl
pop
and
dec
mov
push
mov
lret
mov
pusha
scas
pop
inc
aam
iret
gs
shufps
jo
mov
outsb
xor
pop
adcb
xchg
and
shll
andl
xor
sub
mul
loope
push
and
mov
mov
xor
jno
mov
bound
sbb
or
push
loope
mov
fwait
inc
fmuls
in
jnp
mov
dec
push
mov
jmp
sbb
jne
arpl
popf
mov
dec
cld
dec
xchg
jl
imul
mov
movsb
cmp
cmp
mov
arpl
jnp
imul
std
jne
jmp
push
inc
jmp
add
test
mov
in
push
je
sbb
xor
jo
jmp
push
ljmp
pop
xchg
cmpsb
mov
addb
iret
adc
push
mov
inc
in
jg
shl
sbb
iret
push
jo
or
loop
enter
es
outsl
xchg
pop
icebp
mov
dec
cld
clc
lea
test
push
dec
add
ficompl
dec
jns
loop
fnstenv
mov
sbb
cmpsb
push
cli
mov
and
sub
and
in
mov
xchg
fwait
mov
insl
outsl
xor
jge
in
out
sbb
or
adc
or
fwait
test
dec
lock
and
sbbl
and
mov
and
bnd
adc
dec
adcb
cs
jns
mov
xchg
mov
insl
mov
lcall
mov
xor
mov
addb
mov
add
or
lea
shl
clc
jne
scas
repz
cwtl
pop
lods
inc
dec
repz
sbb
xor
jecxz
fucomp
inc
icebp
movsb
mov
push
jbe
pcmpeqb
cmp
idivl
pop
xchg
cwtl
ja
add
mov
dec
add
mov
pop
cwtl
pusha
push
adc
mov
jmp
mov
dec
pop
aad
fs
outsl
jne
ja
pop
push
mov
aam
jo
mov
lcall
pop
shl
mov
jns
sbb
xlat
mov
loop
xor
push
xchg
push
mov
jbe
mov
aaa
mov
sti
adc
push
mov
repz
xor
in
mov
push
jne
enter
inc
out
pop
mov
cmpsb
aad
aad
xor
mov
jmp
or
push
aad
pop
into
mov
arpl
cld
pushf
mov
jbe
int
or
ror
inc
addr16
mov
push
std
fldl
mov
inc
jmp
dec
cmpsb
jecxz
mov
std
and
mov
or
cmpsl
pop
mov
add
or
gs
daa
shr
fwait
xchg
inc
jecxz
pusha
lods
sub
cltd
sbb
xchg
test
nop
adc
fldl
xor
aas
scas
in
out
or
movsl
ficoml
add
jge
leave
insb
sub
add
pop
aam
inc
pop
cmc
and
adc
pop
pop
sub
push
div
lea
adc
add
int3
test
and
adc
gs
pop
enter
movsb
push
cmp
sahf
pop
cmpsl
sub
test
dec
enter
and
inc
in
mov
daa
lahf
and
clc
push
push
add
sub
pop
push
nop
inc
enter
and
fisttps
loope
mov
ret
outsb
xchg
mov
mov
int
jle
mov
sahf
lods
adc
mov
sbb
mov
bound
inc
loopne
mov
cmp
jmp
xchg
loop
vmovmskpd
mov
leave
and
cmc
dec
repz
adc
jno
cmc
inc
push
sub
inc
aam
les
cli
mov
and
dec
mov
sbb
or
fpatan
insl
add
imul
mov
shrb
stos
push
addr16
adc
jbe
dec
stc
xchg
xlat
cli
pop
sub
mov
test
xchg
arpl
lea
clc
gs
ret
fsts
cltd
fidivrs
clc
xchg
and
jmp
xchg
lcall
xchg
jle
jo
jo
shrb
fwait
and
pop
aaa
add
cld
insl
dec
into
movsb
mov
sub
rcr
mov
idivb
inc
jns
mov
frstor
rcll
pushf
ret
mov
jg
sarl
xchg
das
push
leave
mov
push
cmpsb
or
shll
mov
and
inc
xor
or
cmpsb
pop
stc
roll
call
cwtl
popa
and
das
lahf
shll
or
clc
fwait
ret
test
fistpl
mov
outsb
outsb
xor
loopne
add
push
sbb
xchg
mov
insb
xchg
jnp
stos
inc
adcl
stos
clc
mov
psignb
cmpsl
lahf
je
fs
mov
daa
inc
gs
add
cmpsl
mov
or
sub
pop
push
fs
imul
mov
push
mov
inc
icebp
fucomip
inc
xchg
push
in
jp
scas
fs
loop
sub
and
and
test
aam
mov
mov
sti
sub
nop
pop
ret
inc
iret
pop
mov
fisttpl
push
jo
lock
int3
jae
pop
sti
dec
mov
mov
jecxz
push
sbb
push
jo
in
sub
push
mov
cmp
sub
stos
lods
xor
push
addr16
dec
lods
xor
xchg
mov
sub
xlat
in
or
xchg
jp
imul
push
divb
inc
popf
es
push
out
nop
pop
sub
jnp
data16
or
pop
pop
into
cwtl
adc
sbb
push
jmp
sub
dec
pop
bound
push
call
decl
inc
mov
jge
in
push
decb
daa
sbb
mov
mov
cmc
pop
in
mov
dec
mov
jg
aaa
pop
jmp
mov
outsb
or
sbb
mov
push
inc
inc
in
xor
push
rcr
in
sar
sub
sti
enter
push
sahf
jnp
mov
mov
jbe
mov
jl
xchg
sbb
adc
rolb
stc
xor
lea
in
xchg
scas
and
mov
in
mov
mov
stos
jo
movsb
popf
cli
and
inc
loopne
pusha
cmp
jmp
mov
in
and
xor
loopne
mov
mov
outsb
dec
mov
sbb
into
adc
rcl
push
mov
ja
les
mov
jle
int
icebp
insb
mov
daa
daa
repz
out
ss
jns
faddl
adc
insb
or
adc
dec
pop
jbe
mov
dec
aas
mov
push
icebp
inc
cmpsb
sbb
out
ss
jge
out
sti
addr16
arpl
sbb
out
es
rcrb
adc
and
xor
enter
cmp
pop
push
outsb
test
dec
lret
loopne
xchg
lea
sub
ljmp
ficoml
push
lock
mov
imul
mov
negb
pop
jnp
push
mov
mov
in
xor
imul
jmp
add
scas
pop
lret
pop
out
icebp
mov
push
bound
mov
aaa
outsb
mov
mov
je
pop
data16
and
scas
cltd
leave
test
push
sbb
arpl
jns
outsb
mov
js
mov
cwtl
jae
movsb
movsl
fiadds
les
xor
cmp
aaa
mov
push
and
add
mov
scas
mov
push
js
aam
int3
jno
test
mov
and
imul
int3
pop
je
dec
cli
scas
mov
out
outsl
hlt
and
xor
shll
cltd
cmp
mov
mov
mov
ss
jecxz
cld
imul
xchg
lock
repz
shll
mov
insl
pop
adc
fisubrs
inc
sub
mov
xchg
push
dec
push
mov
sbb
aam
inc
test
mov
mull
add
gs
test
fmulp
aam
int3
repnz
dec
mov
insl
mov
xchg
and
in
fsub
dec
stc
mov
cltd
in
test
xchg
sbb
cmp
fwait
movsb
or
jne
pop
or
sti
xor
ficomps
jecxz
sub
and
sub
cmpsb
leave
add
mov
sbb
mov
lcall
xor
test
and
rcl
or
or
movb
icebp
add
or
lret
fsubrl
je
mov
test
add
jnp
sub
and
outsb
fldl2e
add
mov
mov
int3
pop
pop
push
push
mov
mov
push
sub
jge
inc
mov
addr16
das
dec
fnstcw
fmull
jp
mov
pop
adc
jl
in
mov
add
pop
aaa
add
popf
mov
popa
nop
mov
xchg
insb
pushf
aaa
sub
imul
push
outsl
jmp
and
out
and
fsubrs
aad
adc
adc
mov
jne
cmpsb
cmc
pop
jae
mov
loope
daa
filds
scas
dec
call
ret
cmpsl
cmp
hlt
test
push
adc
sub
sbb
jmp
jno
xchg
ds
test
push
mov
lods
lret
jb
xor
inc
arpl
fs
sbb
pop
mov
xchg
pop
pusha
pop
push
push
adc
xchg
loop
mov
lea
and
jg
out
aas
pop
stos
cmp
adc
add
cmp
std
push
into
mov
sub
mov
mov
mov
icebp
or
movsb
test
outsb
aaa
pop
ss
mov
shlb
lcall
mov
mov
addr16
inc
pop
lock
bound
cmpsb
xlat
inc
outsb
fiaddl
dec
ret
adc
jecxz
sbb
adc
dec
enter
stos
in
fld
fs
gs
xor
fnstenv
mov
mov
mov
jmp
movsl
data16
imul
ss
enter
cmc
push
pop
xchg
add
ljmpw
lret
call
xor
loopne
mov
sbb
xor
hlt
push
dec
lret
xor
mov
jo
mov
ret
mov
out
ds
pop
jl
paddd
inc
mov
stos
sub
and
lahf
push
daa
lahf
and
mov
rclb
inc
outsl
mov
jb
xchg
scas
sub
negb
loopne
push
inc
mov
pusha
shlb
in
shl
push
cltd
div
sub
xor
add
fistl
push
jnp
jp
daa
mov
mov
mov
sub
inc
inc
jbe
aas
push
dec
pop
sbb
sahf
inc
lock
xor
sub
ss
mov
push
out
sub
lods
jns
pop
les
imul
ss
ret
lock
mov
jbe
loopne
and
jg
fimull
fnstcw
cmp
and
in
mov
mov
jns
clc
cli
xlat
std
pop
stos
xchg
jnp
pop
jno
popl
loopne
jnp
jns
sbb
jno
lock
jg
xchg
sub
pop
cld
pop
cs
pusha
rclb
push
push
mov
jbe
cmp
sbbb
lret
xor
scas
out
pop
test
and
sbb
iret
adc
mov
loopne
sbb
sub
pop
ds
stc
in
jle
inc
movsb
or
daa
push
gs
aaa
jbe
and
fcomps
mov
adc
loopne
sub
adc
les
xchg
shrl
or
jmp
lcall
enter
js
lock
adc
bound
cmp
repz
imul
push
xchg
dec
lods
jp
mov
outsl
fnsave
rcr
xchg
add
adc
jl
xchg
rcrl
xor
ss
xacquire
inc
sub
stos
js
enter
popf
sbb
or
das
xchg
lret
or
or
repnz
and
outsl
int
jge
rcl
roll
lret
repnz
loop
and
bound
ret
mov
out
dec
fimuls
pop
xor
jmp
sbb
imul
stos
mov
jb
cli
push
pop
inc
push
jmp
pusha
bound
xchg
lea
cmp
jl
lock
sar
and
sbb
sahf
loope
les
jns
sub
mov
mov
ret
fsubrl
push
xchg
inc
cld
outsb
mov
cs
lcall
cmp
sbb
into
lcall
lock
add
xchg
mov
push
push
jne
test
leave
sub
mov
mov
sbb
xchg
cli
mov
mov
sbb
psubq
test
icebp
sub
jmp
lock
mov
popa
insl
add
lret
push
jp
pusha
ret
jns
mov
mov
mov
jne
mov
xchg
mov
or
movsl
mov
dec
xor
cli
stos
clc
cli
xor
mov
lods
xor
adc
cld
cmp
push
xlat
dec
jmp
loope
loope
cs
je
stos
mov
loopne
movb
pop
mov
cwtl
cmp
inc
jnp
cld
insl
jae
into
sbb
jecxz
lock
dec
add
pop
mov
fdivs
sahf
xchg
sub
push
cmpsb
push
std
cmp
jb
dec
inc
aas
outsb
ljmp
xor
rclb
dec
push
ja
int
push
mov
adc
je
mov
push
repz
add
movsb
ljmp
lods
in
mov
cld
test
push
cmp
inc
and
push
push
repnz
iret
loop
jl
imul
and
cmpsl
dec
add
mov
test
jnp
mov
ss
push
dec
divb
push
sbb
cmp
adc
fldt
pop
bound
loope
es
out
lcall
popw
mov
and
add
sub
popl
mov
stos
and
int3
mov
pop
clc
loope
jp
addr16
out
fsubs
lret
xor
ror
into
fildl
xchg
pop
push
or
dec
and
negb
xchg
adc
mulb
sub
and
cmpsl
loopne
test
inc
push
xchg
xor
daa
cld
in
daa
xchg
pop
cmpl
dec
incb
or
nop
jp
cmc
in
lods
bound
xchg
cmp
push
cmc
or
xchg
jno
pushl
mov
in
popa
dec
and
int3
ror
into
xchg
jae
lahf
ds
jnp
inc
lret
xchg
jp
sar
or
rorb
adc
or
mov
es
and
jno
iret
imul
pop
dec
std
mov
adc
xor
mov
sbb
push
add
xor
dec
addr16
jb
xor
pop
insl
xor
mov
das
jae
das
push
das
jle
inc
xor
adcb
mov
adc
das
rcrl
pushf
mov
aas
mov
movsl
in
mov
outsb
and
jge
push
out
test
push
push
xlat
and
inc
sbb
xor
stos
rcrb
cmpsl
sbbl
inc
imul
push
adc
jb
into
add
repnz
pop
mov
adc
mov
lds
xor
inc
in
and
xor
xor
ja
loopne
jl
repnz
outsb
test
iret
push
pop
jnp
bound
xchg
popa
xchg
imul
mov
xchg
push
jns
insb
cmc
jns
fbld
adc
shlb
aaa
call
mov
loop
lds
jno
sti
mov
adc
movsl
pop
inc
inc
inc
in
cmp
add
fsubrl
fwait
mov
mov
jae
dec
in
mov
fcomi
out
pushf
xlat
ss
xor
cmp
jb
add
dec
cwtl
mov
addb
jo
pop
pop
repnz
clc
fxch
xchg
shlb
mov
xor
adcl
push
loope
push
cmp
stc
das
imul
cmp
xchg
addr16
xor
adc
dec
popf
add
rorl
je
sti
inc
push
jno
xor
sub
sub
shlb
cmpsl
mov
inc
push
mov
sub
xor
jae
push
divl
adc
leave
rcll
push
mov
push
clc
jb
ljmp
fs
xor
jb
imul
or
cmp
push
xor
sub
rorl
dec
repz
xor
mov
cs
pusha
fdivrs
imul
data16
sbb
popf
out
stos
adc
jo
movsl
mov
mov
pop
mov
cmpsb
sub
jmp
push
or
sub
add
ljmp
inc
insl
ljmp
movsb
add
xchg
push
xor
lcall
insl
jecxz
movsb
fidivrl
cmp
insb
jns
arpl
or
add
add
cmpsb
mov
xor
cltd
sti
daa
outsl
xor
jbe
nop
imul
mov
mov
pop
stc
mov
sti
mov
stos
mov
sbb
jne
icebp
jg
and
in
pop
clc
repz
sub
sub
mov
fiadds
dec
pusha
lret
sub
arpl
add
cmp
leave
in
sub
or
aad
adc
push
into
xchg
lahf
xlat
jno
je
add
sbb
mov
loope
in
test
and
mov
call
nop
rol
add
adc
lds
movsl
adc
jge
mov
clc
cmp
in
cmp
out
add
cld
mov
cltd
call
pushf
pop
test
pop
data16
lret
add
roll
mov
xor
and
mov
xor
out
dec
pop
inc
or
loop
and
and
jbe
xor
out
xor
mov
insl
adc
aas
je
jne
lret
push
adc
pop
adc
push
cli
push
and
outsb
mov
mov
cmp
add
xchg
dec
xchg
sub
fs
data16
gs
or
movsl
data16
inc
mov
leave
pushf
jo
vpsubd
mull
out
gs
pop
aad
cmp
inc
push
outsl
xchg
cwtl
les
dec
enter
stc
cli
rol
test
mov
push
pop
add
mov
gs
mov
cs
sub
or
add
pop
icebp
rcrl
adc
sarl
xor
frstor
inc
add
xchg
pushf
jmp
repnz
imul
push
adc
push
xor
xchg
int3
pop
cs
adc
ret
push
cltd
stos
cwtl
int3
push
test
lods
dec
insb
sbb
rcll
cmpsb
push
inc
pushl
sub
fs
mov
es
out
sub
xlat
es
fistps
pushf
push
sar
push
cmpsl
xchg
sub
jnp
in
notl
test
je
ffreep
js
sub
mov
cmp
fnstcw
xchg
mov
mov
xchg
pop
jno
popa
xchg
aaa
mov
sbb
mov
ret
sub
icebp
mov
movsb
js
popl
mov
test
or
push
xor
divl
dec
ret
dec
xor
push
imul
push
xchg
js
add
pop
xor
leave
cmpsl
pop
test
inc
stos
cmp
fs
jecxz
out
loopne
pop
pop
fwait
roll
nop
xorl
enter
mov
sub
xlat
jge
lret
fcomps
dec
cmp
or
shll
xor
mov
and
dec
sbb
out
pop
mov
popa
outsb
jne
sar
mov
cwtl
mov
cmp
pop
mov
dec
ja
mov
in
or
add
cmp
test
xchg
sbb
push
aas
cmp
push
inc
int3
ret
xchg
add
sarb
add
mov
inc
jmp
xor
rcr
or
nop
les
adc
out
rcr
and
or
mov
xor
ret
scas
dec
cltd
xor
add
sbb
sbb
rcr
inc
push
sarb
xchg
lret
adc
adc
cli
in
iret
sub
dec
inc
stos
rcll
lret
std
notb
lock
fsubr
xor
add
out
fdiv
xor
imul
push
mov
push
fidivrs
sahf
pop
scas
rcr
ret
test
dec
dec
test
push
pop
lock
jg
push
pop
out
enter
lcall
add
jb
mov
mov
pop
mov
out
inc
dec
std
cmpb
cltd
xor
mov
jge
pop
pushf
cmp
mov
mov
stos
test
cmp
and
ficomps
hlt
pop
je
inc
out
inc
inc
inc
hlt
pop
mov
aaa
push
jecxz
mov
or
cmpb
ret
in
and
and
sub
cmp
call
mov
test
in
rorb
pop
adc
inc
movsb
out
and
mov
jno
jnp
fwait
andl
out
lcall
rorb
xor
xchg
adc
rol
mov
in
repz
cltd
dec
aas
ja
fildll
add
aas
cld
addr16
out
movsl
mov
xchg
mov
cli
inc
jnp,pt
rcr
sarb
xchg
pop
mov
icebp
aam
int
cmp
sbb
cmpsb
jecxz
cli
xchg
fwait
mov
loope
mov
mov
push
or
push
orb
rclb
xchg
mov
movsl
lcall
outsb
movsb
or
jb
fldcw
push
pop
mov
and
add
cmp
sahf
into
pop
aam
jo
or
cwtl
pop
mov
mov
pop
std
divb
push
pop
sbb
xchg
ds
push
xchg
dec
inc
cmc
fdiv
loope
or
push
mov
adc
ret
decb
push
scas
fmull
mov
sbb
cmp
imul
or
imul
mov
xor
popa
out
popl
int3
repnz
mov
dec
iret
dec
roll
and
jno
pop
test
test
fiaddl
ss
xchg
pop
and
push
or
mov
mov
repz
xor
mov
inc
xchg
fistl
aaa
push
cltd
and
cmp
outsl
andl
fwait
pop
jp
aam
fnstcw
mov
loopne
mov
aad
mov
outsl
sub
or
movsl
out
aas
cmp
stos
pop
mov
stos
movsb
xorl
cmc
jne
ret
cmp
mov
sub
cmpsb
xor
stos
out
je
shll
sarl
xor
cmp
loope
pop
inc
cs
lahf
inc
lea
push
add
lock
add
sub
out
addps
inc
je
and
call
cmpsb
icebp
push
mov
inc
sbb
sti
inc
adc
imul
jle
mov
fs
adc
pop
rcl
aam
cmpsb
lds
loop
xchg
orb
or
mov
pop
push
insb
mov
jmp
push
adc
lcall
push
test
fistpll
ret
lods
les
out
dec
xchg
push
push
fstps
dec
push
add
movsb
mov
stos
lret
mov
or
xor
or
inc
and
lea
jbe
ficomps
pop
xlat
lahf
fcmovbe
inc
adc
mov
pop
sbb
cmp
add
mov
mov
test
pop
cmp
add
cmpl
fsubr
sbb
jecxz
js
adc
jae
fisttps
push
xlat
pop
dec
push
push
cmc
leave
lea
or
shll
mov
push
sar
stos
jae
sbb
dec
gs
push
lods
xchg
movsb
xchg
jge
pop
and
jns
and
inc
xchg
lret
adc
mov
scas
sbb
cwtl
notl
sub
push
scas
cs
pop
or
and
or
in
orb
pop
jae
and
imul
stos
stos
jb
js
sbb
adc
ret
in
xor
mov
pop
int
mov
test
lock
pop
push
mov
inc
test
out
pushl
out
jmp
repnz
mov
sub
sbb
lret
adc
jne
jno
pop
cwtl
pop
lahf
aaa
or
dec
or
aas
sbb
mov
jg
lea
int3
out
enter
mov
inc
or
mov
xchg
fwait
push
push
mov
or
cltd
adc
cli
clc
pop
aad
std
mov
scas
inc
nop
fldcw
inc
and
xchg
popf
in
int3
bound
out
fistpll
push
dec
pop
stos
adc
mov
je
test
xchg
gs
sub
in
lahf
loop
js
and
or
leave
ds
ljmp
shl
cmp
repz
incb
dec
inc
sbb
push
and
sub
pop
cltd
in
int
orb
lds
stos
inc
loop
int
rorb
cltd
mov
sub
add
stos
push
jmp
insb
dec
add
lock
stos
aam
int3
std
add
cmpsb
sub
sbb
xlat
js
cmpsl
cmp
cs
mov
insb
test
cmp
fimull
add
test
loope
push
lret
jp,pn
push
ret
adc
push
imul
xchg
rcr
into
imul
add
adc
addr16
mov
gs
mov
or
imul
fmull
mov
inc
cld
aam
push
ret
nop
and
and
inc
sti
mov
adc
cmc
test
sahf
or
rolb
aas
add
push
mov
xlat
inc
jle
imul
pop
push
and
inc
aas
loope
addr16
loop
push
add
aad
pop
dec
xor
or
adc
cmp
repnz
add
cmp
dec
jns
icebp
mull
jle
xchg
inc
adc
lea
incl
imul
mov
lods
dec
xchg
pop
test
mov
push
cmp
lcall
mov
cld
adc
leave
add
jns
sbb
jbe
ss
cmp
fcoml
pop
cld
sbb
pop
xchg
dec
iret
subb
cmp
mov
jl
ret
cli
sub
ret
or
xchg
pop
mov
ja
inc
orb
hlt
fmulp
adc
lea
push
pop
push
mov
lret
cmp
fnstenv
in
sub
fdivrp
pop
scas
sbb
repnz
mov
push
xor
inc
outsl
dec
jmp
adc
jne
scas
js
sbb
outsb
push
xorb
push
mov
jp
daa
jge
adc
jmp
in
add
mov
loope
xchg
xlat
data16
lcall
jbe
push
jp
adc
loopne
jnp
mov
in
cmp
inc
pop
pushl
ss
push
or
xchg
xchg
out
lret
sbb
jg
cmp
out
shlb
sahf
push
repnz
cmp
add
sub
xchg
push
mov
jecxz
jmp
cwtl
aad
mov
mov
cwtl
neg
fsubrs
cli
in
jae
loope
mov
mov
ljmp
xchg
les
inc
mov
inc
and
dec
ds
lock
inc
cmp
push
adc
loopne
add
pop
in
dec
sub
in
aad
xor
int
cmp
jb
xor
cmp
dec
inc
insb
fadd
mov
arpl
dec
aas
jo
movsl
fdivrl
enter
lret
cmp
fwait
cli
adc
dec
mov
movsb
loope
mov
inc
mov
dec
aam
mov
stos
test
xor
insb
stos
pop
fsubrl
lods
jp
insl
xchg
stos
daa
loop
dec
sahf
or
inc
dec
adc
outsl
inc
fldl
pop
and
enter
das
test
cmc
sub
cmp
xchg
mov
xchg
inc
pop
sub
or
or
or
xchg
repnz
sub
popa
out
daa
push
insb
sub
das
xor
in
pop
or
jb
xchg
std
and
fnstsw
push
push
jnp
inc
lret
xchg
fs
shr
call
mov
mov
pop
test
loopne
cltd
arpl
add
and
pop
or
add
add
dec
mov
fstl
ret
adc
inc
xchg
and
aam
push
pusha
dec
rep
mov
xor
xchg
mov
xchg
in
mov
cmpb
mov
mov
push
jne
sbb
shrl
pop
mov
lret
pusha
fs
xlat
cmp
addr16
pop
inc
dec
mov
or
push
sbb
push
cmpsl
lods
lods
sti
pusha
and
fstl
cmp
sub
sbb
mov
fmuls
dec
mov
rorb
fnstcw
jl
adc
mov
pop
int3
shlb
inc
jns
mov
fcoms
mov
push
je
jbe
cmpsb
mov
sbb
arpl
push
andb
aad
or
mov
push
imul
mov
leave
dec
xchg
xor
pop
std
mov
mov
fiadds
adc
int3
inc
push
cmp
jns
pop
imul
or
ror
lcall
mov
jns
jp
mov
leave
out
mov
movsl
cs
push
dec
xor
iret
adc
xchg
rolb
jmp
sub
aas
in
mov
ljmp
sub
aaa
adc
insb
int3
es
aad
dec
add
add
gs
xchg
pop
icebp
insl
in
xchg
lods
mov
cmp
push
leave
xchg
add
inc
push
out
out
xor
aam
and
push
or
mov
shrl
cmp
mov
pop
arpl
rol
scas
daa
dec
adc
or
jmp
xchg
jae
fisttps
push
or
mov
cmp
and
or
imul
pop
lahf
pop
jns
xor
inc
and
in
aad
jmp
scas
int
and
nop
faddl
je
outsb
stos
mov
cmp
lods
gs
xor
cmp
and
cli
fwait
mov
push
adc
xchg
jp
jp
mov
sub
push
imul
adc
icebp
push
cmpsb
or
xchg
mov
jge
pop
mov
dec
sbb
out
jnp
insb
cltd
les
stc
lods
out
mov
bnd
fildl
shll
add
mov
js
fmuls
dec
mov
push
pop
in
mov
dec
push
inc
pop
xchg
insb
jbe
sbb
inc
mov
lock
lock
sbb
and
xchg
jne
je
scas
fadds
pop
outsl
mov
bswap
sbb
out
xchg
loopne
pop
or
mov
test
mov
mov
mov
mov
pop
add
lret
xor
out
sbb
xchg
icebp
pop
movq
icebp
stc
lret
scas
jnp
push
pop
leave
inc
sbb
out
mov
or
rorl
pop
mov
loopne
mov
arpl
and
scas
mov
outsl
aam
fidivl
clc
pop
call
or
hlt
lea
in
mov
or
mov
mov
lret
inc
or
lods
xor
mov
sbb
fs
push
fadd
sub
ret
test
add
fbstp
mov
and
dec
and
mov
repnz
pushl
jmp
pop
lds
je
ja
fisttpll
rcr
outsb
mov
cmpsl
jbe
movsb
das
lret
pop
pop
xor
lea
xchg
or
pop
jl
dec
scas
data16
pop
in
scas
pop
test
cmp
mov
add
adc
out
dec
pop
mov
sbb
xor
sbb
pop
lods
fwait
pop
nop
jp
jp
mov
andl
ret
rcrl
jbe
fists
mulb
jp
inc
cmpsl
adc
cmp
je
fs
push
out
xor
cmp
add
xor
adc
ds
xchg
das
psrld
inc
mov
sahf
adc
jmp
popa
aaa
data16
fidivl
inc
push
out
lock
mov
mov
sbb
xor
ljmp
cmp
pusha
jle
jbe
loopne
das
scas
adc
mov
in
jne
pushf
and
shrb
pop
insb
sbb
inc
adc
pop
sub
int
lds
popa
into
ss
add
shlb
out
push
pushf
cli
jb
add
xchg
push
inc
andb
add
bound
push
leave
data16
mov
mov
lret
repnz
rcl
nop
testl
fldenv
icebp
arpl
loope
and
inc
aad
gs
lea
xor
insl
inc
adc
adc
repz
jecxz
lock
cmpl
sub
jmp
or
add
loope
xlat
xlat
mov
cltd
dec
dec
pop
push
pop
fwait
xchg
insb
mov
mov
mov
arpl
loope
xchg
and
popf
xor
mov
xchg
outsl
jb
cmp
mov
insl
icebp
adc
cwtl
sub
mov
mov
adc
cmp
cwtl
scas
sub
jge
mov
fs
jge
xlat
adc
int
jge
inc
cli
mov
xchg
fistpll
xor
test
scas
fwait
imul
test
test
popf
and
cmc
mov
les
ret
and
pop
scas
cmc
sub
imul
mov
add
cmp
jg
lahf
pop
or
icebp
fcoms
mov
dec
jg
imul
lcall
inc
loope
sub
mov
inc
jecxz
fcmovnb
mov
adc
mov
ljmp
lods
cmpsl
dec
sbbb
xlat
inc
jg
adc
xor
lods
xchg
in
in
or
dec
xchg
lcall
icebp
jge
cltd
ss
inc
push
add
dec
inc
fwait
hlt
push
decb
in
cltd
fwait
cmpsl
mov
xor
loopne
scas
flds
fdivl
stos
lret
inc
jg
loope
pop
xchg
shll
std
or
mov
and
sub
xlat
xor
fisttpll
icebp
add
insl
add
fildl
jl
lcall
xchg
push
into
repnz
and
cwtl
push
imul
insl
add
cmc
add
jmp
pop
mov
or
pop
cmpl
cs
shlb
insb
xchg
imul
mov
mov
in
xchg
lcall
mov
int
and
lea
aam
jbe
add
xchg
into
mov
mov
mov
add
mov
loop
sbb
movsl
lahf
imul
testb
stc
mov
push
dec
aam
je
xchg
test
addr16
fnsave
xchg
push
dec
push
xor
and
sbb
inc
push
roll
stos
pop
sbb
inc
rcl
mov
das
std
adc
and
add
loope
push
or
insl
std
adc
je
out
mov
aaa
out
lret
bound
mov
push
cmp
in
orb
xchg
loopne
push
lock
mov
adc
pop
sbbb
outsb
pop
pop
fnstcw
imul
jle
inc
and
outsl
repz
add
sbb
or
das
adc
and
cmpsl
jmp
shlb
mov
into
cli
dec
popa
inc
mov
mov
and
test
roll
mov
test
xor
ds
push
sub
int3
arpl
cmp
aaa
movsb
mov
mov
and
cmp
cli
jecxz
daa
movsb
out
test
lcall
icebp
mov
xchg
loop
xor
loopne
inc
add
push
sbb
fsubrl
arpl
mov
fiadds
stos
push
lods
and
test
pop
test
outsl
cmpl
shl
rorb
pop
or
clc
test
jmp
out
mov
stos
int3
mov
lock
mov
ror
insb
int3
out
adc
xor
xchg
stos
add
daa
stos
push
push
jne
xchg
cmpsb
nop
je
hlt
popf
adc
das
jae
sarb
xor
leave
inc
repnz
scas
fdivrp
xchg
xchg
testb
popa
inc
and
inc
test
cmp
inc
sub
rorb
dec
or
nop
add
sti
leave
insl
js
and
mov
mov
pop
stos
mov
movsb
cs
out
scas
pushf
jg
xor
push
mov
out
shl
fdivrl
cmp
andl
movsb
jmp
pop
jge
mov
adc
cmp
pusha
js
in
add
pop
and
mov
loope
lea
or
aaa
or
dec
push
sub
lret
enter
pop
or
orl
in
int
jae
mov
fistps
push
fmuls
ja
pop
sbb
jle
bound
adc
dec
mov
nop
or
mov
sbb
fcomp
mov
mov
in
cltd
in
mov
push
lock
mov
fldcw
push
aad
lods
add
test
cwtl
inc
push
xchg
xlat
mov
fwait
and
push
xor
repnz
fcomip
mov
aaa
icebp
arpl
mov
repnz
incl
xchg
lret
xchg
cmc
ja
inc
nop
cmp
mov
rcr
lods
pop
mov
push
stos
jmp
scas
and
adc
pop
xchg
dec
mov
scas
jbe
mov
mov
mov
adc
mov
cmc
jne
call
repz
fdivs
xchg
and
stc
andl
mov
jp
jno
cmp
lahf
mov
sbbl
sbb
add
xchg
xor
test
and
test
cld
jp
pop
sub
in
rol
mov
xchg
xchg
stos
dec
pop
dec
push
sub
orb
push
out
or
xchg
mulb
mov
aas
xchg
addr16
fdivs
fwait
loop
dec
mov
cltd
rol
xor
aaa
pop
ficoml
mov
fdiv
frstor
les
pop
scas
sbb
icebp
pusha
pop
sbb
mov
cmp
mov
aam
mov
shrl
and
cmp
mov
or
leave
jbe
shll
roll
mov
test
pop
cmp
stc
jmp
dec
loope
popa
movsl
push
and
sbb
jbe
mov
xchg
adc
test
cmp
arpl
mov
dec
stc
xchg
cs
lcall
jle
inc
xor
jb
jmp
push
mov
sbb
lahf
cmpsb
pop
pop
popa
xchg
jnp
and
add
pop
push
or
mov
dec
loope
push
xchg
xchg
cli
push
xchg
shr
xchg
mov
loope
xor
or
mov
pop
sbb
lds
cmp
sub
pusha
subb
imul
adc
jb
jo
xchg
mov
lods
add
lods
enter
jecxz
pusha
cmp
outsb
inc
loop
mull
fsubl
inc
inc
cmp
nop
push
adc
xchg
jge
jmp
sahf
cmp
pop
mov
xor
push
mov
dec
push
jo
mov
lret
adc
mov
daa
cmpsl
outsl
xor
hlt
jns
int
pop
xor
aas
cmp
add
dec
aad
hlt
cs
pop
jnp
out
cmp
mov
sti
pop
loopne
mov
pop
cmpsl
push
jg
dec
pop
sub
jp
mov
sub
mov
stos
arpl
test
pop
jb
dec
int3
xor
loope
fadd
shll
stos
rcll
sarb
inc
xor
insb
pop
mov
xorl
int3
mov
sti
sub
mov
jge,pn
pop
scas
jmp
add
xchg
lds
mov
shlb
mov
inc
pushf
lahf
xchg
mov
jns
int3
add
call
jnp
aas
loope
or
mov
sbb
cmp
lods
test
dec
sbbb
test
outsb
xchg
mov
and
add
in
movsb
mov
idivl
fucom
lcall
sbb
xor
mov
in
xorb
addr16
imul
xchg
dec
mov
and
clc
add
mov
cmpsl
out
mov
cltd
and
scas
mov
enter
pop
inc
add
dec
pop
xor
shll
rcl
inc
popf
loopne
stos
aaa
mov
test
cmp
push
jecxz
xchg
repnz
orb
pop
jle
xlat
lds
mov
cmp
pop
jb
or
lahf
outsb
add
pop
pop
ljmp
inc
mov
mov
mov
insl
mov
cmc
inc
lret
movsl
out
lret
dec
sbb
je
jp
test
jp
mov
jl
inc
mov
jle
and
std
push
sbb
xlat
inc
cmp
shlb
add
je
mov
xor
ss
scas
stc
lcall
or
pop
sbb
jnp
insl
arpl
lods
sbb
adc
ja
add
out
xor
jmp
out
das
sub
test
scas
sub
mov
lods
sbb
add
jbe
flds
jp
fsubr
ret
cmp
lret
mov
add
test
cmpsl
push
push
roll
repz
idivb
not
sub
adc
xchg
insl
fdivr
jo
mov
and
cmp
insl
xchg
idiv
lods
mov
pushf
dec
lret
into
aaa
in
outsb
pop
repz
in
mov
push
mov
sub
mov
fidivl
pop
dec
out
push
sbbb
ror
push
out
cmc
push
add
aas
rcl
add
jmp
rorl
psadbw
jge
push
cmp
sbb
lds
rclb
or
cwtl
imul
mov
lret
ret
outsl
shl
or
cmp
xchg
pop
addr16
aam
inc
jnp
mov
leave
mov
lret
bnd
add
mov
pop
in
test
repnz
sbb
ljmp
xchg
ss
cli
orb
push
xor
or
dec
mov
cmp
pop
or
adc
mov
movsb
pop
push
lcall
test
mov
popf
ljmp
aas
pop
inc
addr16
pop
movsl
jg
and
add
gs
ja
xchg
and
addr16
loopne
xor
pop
mov
dec
lea
mov
dec
aas
je
pop
orl
sbb
lods
xor
adc
jge
cltd
xorl
fwait
push
ss
pop
inc
leave
mov
mov
shlb
mull
or
fucomi
pop
arpl
dec
inc
or
pop
bound
pop
lret
fstps
enter
lock
out
icebp
dec
sub
push
or
shll
pop
mov
in
mov
xorb
inc
xorl
cli
cltd
movsb
jmp
scas
dec
xchg
xlat
or
repnz
sbb
pop
cmc
cmpb
movsl
pop
mov
dec
pop
in
xor
in
ficoms
and
jmp
dec
ffreep
js
mov
dec
aas
inc
add
sahf
mov
cli
or
je
aam
and
int
jo
xor
and
pop
cli
inc
sub
mov
gs
xor
jecxz
mov
pop
sub
xchg
mov
adc
jne
dec
pop
sub
cmp
jge
fwait
aas
mov
adcb
push
pop
and
adc
push
pop
inc
pop
movsb
add
push
xchg
pop
mov
add
les
xorb
in
xor
and
and
pop
movsl
jmp
lock
stc
mov
fsubs
stos
vmovaps
repnz
dec
test
dec
inc
pop
ret
aad
outsb
inc
test
js
lods
add
insl
or
iret
pop
outsl
sbb
stos
mov
test
ret
adc
lret
pop
xchg
fsts
in
testb
shlb
dec
jmp
or
ljmp
es
dec
mov
stc
ret
jle
imul
mov
push
stos
hlt
fdecstp
rcr
cmc
int
fsubs
cmp
test
jb
adc
push
or
aaa
sub
pop
in
dec
jae
dec
cmp
push
adc
test
push
out
aam
fcoms
xchg
cwtl
push
int3
jb
aas
add
push
push
jg
sbb
inc
jmp
mov
dec
aaa
ret
lods
ja
lahf
jns
adc
je
fcoms
sbb
sbb
mov
insl
sub
mov
push
std
xor
shrl
dec
call
fldl
mov
inc
lods
cmp
xor
rclb
mov
bound
xor
xorb
cmp
and
loope
imul
ds
adc
aad
xchg
rorb
arpl
js
lcallw
xchg
mov
xchg
mov
in
add
sub
mov
insl
push
ret
pop
sbb
cmp
stc
mov
out
sahf
sub
push
xor
loope
sbb
loop
daa
add
jo
jae
xor
cmp
sub
sub
add
fs
movsb
dec
enter
dec
aas
jno
dec
ds
inc
mov
cwtl
pop
rcll
xor
sub
lret
push
fcom
jecxz
call
call
or
cmp
and
rcrl
cmp
fnstsw
ss
xchg
or
or
mov
dec
je
repnz
fsubl
ja
std
mov
cmpsb
call
subb
popa
mov
xchg
mov
lret
repnz
sbb
repz
sub
js
stos
sub
add
sub
cmp
je
mov
outsb
mov
dec
faddl
stos
mov
push
sub
push
cmp
loope,pn
call
pop
repnz
in
xor
or
or
lcall
sub
test
lcall
in
sti
cmp
push
lea
xlat
lret
daa
mov
fisttpl
xchg
xchg
sbb
mov
flds
ja
fimull
movsb
jae
xor
stos
inc
pop
pop
repnz
push
lock
jmp
xlat
xchg
xchg
adc
sbb
cmp
pushf
fdivrs
mov
lahf
out
bound
enter
xchg
mov
cld
sbb
xlat
out
aaa
jl
adcb
mov
test
je
lret
popf
mov
xorl
dec
or
bound
add
jmp
sbb
mov
fstpt
and
pop
fwait
mov
sub
cltd
pop
fnstenv
mov
arpl
sub
dec
in
adc
jnp
xchg
hlt
and
mov
stc
loope
add
push
sbb
inc
dec
repz
inc
stos
cld
loop
int3
cs
rol
jne
inc
mov
push
aaa
out
insl
enter
fcmovnb
pushf
int
or
mov
mov
jns
jecxz
pop
jo
roll
cmp
sub
fldt
out
icebp
mov
in
push
push
cmpb
sbbb
pop
mov
jb
scas
mov
enter
and
jbe
mov
jmp
inc
hlt
cs
shrl
ja
daa
rcr
lea
iret
push
out
in
pop
xlat
in
mov
fwait
addl
mov
iret
pop
add
jbe
jbe
xor
cmp
and
incl
jo
add
xchg
mov
inc
push
ds
mov
hlt
and
xor
mov
jo
inc
fisttpll
inc
xchg
and
xor
popf
push
les
push
mov
sbb
dec
ja
mov
stc
mov
test
pop
out
fildl
stos
xchg
out
dec
xchg
cmpsl
call
pop
es
mov
pushf
jle
adc
pop
push
mov
insl
jmp
jp
xchg
mov
sbb
sbb
dec
dec
lods
mov
and
jbe
in
and
mov
inc
loop
lock
repnz
xchg
and
lock
cwtl
lahf
jge
dec
leave
or
jbe
mov
out
or
in
arpl
sub
and
sti
mov
and
jb
mov
sbb
pop
xchg
mov
push
jg
mov
fs
dec
dec
xor
test
inc
iret
movsb
sub
fs
jno
sbb
jge
mov
loope
fucom
ret
pop
dec
pop
cmp
push
sub
cmpsl
enter
sub
push
loop
push
adc
pop
pop
jg
ja
inc
addl
hlt
out
push
and
lods
insb
fisubl
inc
dec
test
pop
push
cmp
jbe
dec
adc
test
mull
clc
cltd
xor
dec
outsl
insl
xchg
pop
jnp
mov
stc
test
add
loope
clc
inc
insb
in
mov
loop
sti
in
out
sub
adc
cmpsb
dec
imul
jne
lods
aaa
decl
push
repnz
add
cmp
push
jo
arpl
lock
ret
fildl
and
es
sub
cmpsl
pop
push
icebp
aad
movsb
aaa
mov
inc
insb
push
popf
neg
shrb
ret
add
jne
xchg
adc
sbb
push
inc
addr16
fmuls
pop
movsl
out
push
stos
pxor
outsl
inc
sti
jno,pn
or
dec
cs
dec
pushf
je
pop
test
sbb
int3
inc
mov
cmpsb
fidivl
add
jo
test
push
in
xor
ja
or
jnp
stc
adc
lret
jp
pop
loopne
jg
push
subb
les
xchg
cwtl
xlat
adc
mov
into
adcb
lret
pop
and
out
icebp
lds
xor
pop
loopne
clc
add
popl
cmp
insl
in
mov
aam
push
loope
nop
rorl
sbb
or
or
mov
test
or
jns
add
sub
mov
stos
in
push
mov
shll
in
sbb
test
shll
mov
ret
bound
pop
and
cmp
or
mov
jge
push
testl
ret
sar
out
sub
ljmp
mov
dec
fsts
cmp
test
jae
xchg
out
std
pop
test
cmp
stc
in
das
adc
jp
loop
xchg
repnz
push
push
dec
xchg
mov
aad
mov
or
sarl
push
ret
outsb
mov
sbb
mov
jae
repnz
jg
add
push
jmp
stos
fchs
repnz
not
mov
mov
inc
mov
out
insl
aaa
mov
aaa
fstps
aaa
sub
in
sbb
add
aaa
mov
lcall
in
jg
addr16
push
xor
div
jp
lret
pop
andl
xchg
mov
pop
push
mov
pop
ja
decb
cmpsb
push
jns
movb
ficompl
dec
adc
xchg
adcl
test
clc
in
xor
lahf
popf
mov
and
pushf
inc
popf
or
cltd
fistl
icebp
and
cmc
jecxz
decb
push
and
cwtl
in
adc
mov
test
jne
mov
out
decb
das
mov
push
jae
shlb
cmp
popa
jp
rcll
sbb
jne
push
sbb
and
xor
int
filds
sbb
pop
push
sbb
jbe
mov
adc
cmpsb
and
or
or
call
loop
mov
lea
ljmp
jbe
or
add
mov
inc
nop
repnz
push
sbb
pop
popa
lods
in
jecxz
sahf
inc
rcrb
adc
fldt
sub
cmp
inc
insl
call
push
lock
push
add
jl
cmpsl
mov
inc
rcll
xchg
xor
jp
jae
scas
sub
mov
sbb
cmpsl
data16
add
nop
ss
cmp
jle
mov
cmp
mov
aaa
add
jecxz
xchg
mov
out
out
lods
adcl
pop
dec
cmpsl
aam
jns
or
sbb
xchg
cmpsb
lahf
push
sub
add
sub
inc
bound
cltd
std
jno
add
or
je
push
repz
inc
outsb
outsb
in
aam
mov
imul
inc
scas
sub
lods
push
aam
in
push
jl
dec
push
and
push
dec
gs
stc
dec
in
xor
insb
and
adc
jnp
mov
fdivs
push
mov
outsb
sarl
sub
enter
stos
aad
imul
push
jmp
dec
sub
jl
in
rorl
cld
scas
cmp
cmp
mov
gs
adc
xor
inc
mov
push
mov
lea
sti
iret
sbb
adcb
mov
loopne
mov
les
xlat
push
push
sub
inc
mov
imul
cmp
sti
paddb
mov
mov
or
lahf
stos
fistps
pop
xchg
cmp
popa
jmp
sbb
pop
mov
xchg
in
or
cmp
movsb
mov
jnp
xor
das
cwtl
pop
ja
add
adc
insb
jle
subb
xor
jno
loope
out
stos
lods
stos
mov
dec
cmpsb
xchg
xor
xchg
cmp
leave
jae
sbb
lods
cli
loop
lock
cli
mov
addr16
dec
imul
repz
jae
daa
mov
jmp
bound
arpl
pop
pushf
out
stos
addl
lds
xchg
inc
sub
dec
pop
jge
add
mov
xor
xchg
rclb
addr16
xorl
push
xchg
xor
out
sbb
push
ret
iret
jbe
pop
adc
lea
xchg
out
sub
insb
int
nop
xlat
mov
pop
clc
mov
push
xchg
addl
push
fiadds
cmpsb
ds
xchg
push
out
jae
int3
stc
jbe
add
and
fmul
mov
xchg
adc
lods
int
inc
out
xchg
cli
mov
jle
cmp
cmp
mov
push
sbb
fcmovb
inc
push
lahf
sbb
mov
arpl
cmp
or
pop
mov
jb
jp
push
imul
stc
cmp
ret
mov
mov
pop
xchg
add
mov
xor
nop
and
push
push
repz
push
pop
scas
pop
out
push
dec
dec
xchg
jle
dec
jae
and
mov
adc
cs
scas
mov
sbb
or
adc
rolb
xorb
adc
pop
mov
push
mov
jb
arpl
jnp
add
cld
inc
xchg
pushf
add
xchg
mov
data16
or
fnsave
xchg
add
and
fs
jle
jns
test
sbb
inc
nop
sti
mov
and
cmp
mov
mov
xchg
xorl
xchg
fisubrs
mov
mov
cltd
fwait
pop
jmp
adc
push
dec
std
xor
adc
cmp
jle
dec
lods
adc
mov
inc
xor
jae
js
lcall
lock
mov
pop
test
adc
leave
insl
movsl
mov
aas
cmpsl
pop
in
xchg
test
mov
xchg
lret
push
and
dec
push
fdivs
shrl
pop
pminub
mov
aam
rep
stos
push
pop
push
and
ss
shll
pop
loopne
xor
cmp
iret
mov
push
pop
inc
adc
or
not
sbb
pop
lahf
jb
xor
out
insl
push
add
sbb
mov
xor
int3
mov
ret
mov
sbb
stos
imul
push
movsb
and
out
mov
cmp
jnp
mov
xchg
int3
cld
jmp
std
fidivrs
jnp
push
pop
sbb
pop
fldcw
mov
mov
std
fisubrl
mov
inc
mov
mov
fwait
mov
cmc
mov
out
mov
mov
mov
pop
xchg
push
dec
les
inc
ss
cmp
in
stos
xchg
push
pusha
hlt
push
ret
mov
add
and
adc
jno
mov
push
cmpsb
insl
icebp
test
stc
aad
mov
in
adc
mov
mov
pop
imul
mov
insl
mov
xchg
push
minps
pop
shll
inc
adc
je
pop
test
ljmp
arpl
cmpsl
xchg
push
mov
call
adc
fwait
nop
imul
ss
out
hlt
cmpsb
cmp
test
mov
cwtl
sarb
dec
mov
mov
mov
cmp
cmovo
jns
sbb
jmp
jl
mov
fucomi
out
mov
jne
mov
inc
mov
pop
inc
mov
enter
mov
cmpsb
movsb
ret
xchg
mov
sti
inc
mulb
adc
cmc
sub
out
jbe
arpl
fwait
outsl
pop
cmp
pop
rolb
add
jecxz
rcrl
loopne
push
test
adc
ljmp
dec
adc
and
sbbl
pop
sbb
jmp
mov
push
nop
mov
subl
mov
cltd
pop
dec
or
xor
sbb
loope
xchg
xor
outsb
mov
push
or
jp
jb
fwait
push
int
sub
mov
mov
add
mov
mov
mulb
test
mov
test
shll
pop
repnz
ret
jmp
repz
xchg
xchg
add
or
nop
sub
sbb
popa
push
mov
push
cwtl
adc
inc
icebp
and
les
push
and
out
jp
mov
dec
xlat
adc
addl
cs
mov
add
push
mov
xchg
and
pop
test
ja
xchg
insb
out
int3
repz
or
xchg
push
ja
cmp
cmpsl
mov
pop
xor
inc
or
movsb
fs
xor
inc
fidivl
lods
sbbb
jno
fmull
dec
mov
imul
pmaddwd
jmp
mov
pop
adc
fs
fldl
push
mov
je
inc
dec
in
ret
cmpsb
xor
orb
orl
xor
out
dec
or
ja
fninit
mov
and
cmc
jge
and
sub
jp
sbb
push
aad
add
push
push
add
lcall
popf
pop
and
fldenv
std
cltd
inc
arpl
adc
sbb
cmp
xchg
les
int
imul
sub
inc
pop
xchg
cmpps
das
mov
push
into
push
mov
shll
cmc
mov
sbb
cmp
adc
adc
pop
ljmp
out
aaa
mov
cmp
inc
mov
fdiv
cmpsb
in
sub
movsl
and
hlt
out
pop
rclb
hlt
jg
lea
jmp
lahf
mov
in
orb
into
std
insl
mov
jmp
adc
pop
jge
mov
mov
dec
xor
test
mov
clc
gs
js
push
scas
mov
pop
ja
sub
and
inc
mov
dec
cmp
lcall
test
mov
pop
lods
cmc
lods
repz
clc
push
shll
and
fisttps
or
pop
cmp
push
mov
test
imul
or
sub
jae
sarb
std
cmp
daa
inc
fdivr
dec
test
and
aad
aad
xor
adc
mov
push
fucomip
in
push
inc
adc
xor
mov
and
sub
cmpsl
mov
xor
xor
test
in
dec
inc
cmp
push
push
pusha
ljmp
sub
iret
not
aaa
inc
push
testl
out
addl
xor
pop
ljmp
xor
test
xlat
xor
push
mov
test
mov
fdivrl
into
xor
jecxz
gs
mov
push
movsl
jns
and
jg
push
jnp
fisubrs
inc
sbb
pop
add
sub
stc
cs
push
movaps
jmp
scas
push
add
push
icebp
or
fs
push
mov
in
pushf
insl
imul
jne
movsb
jo
mov
mov
xchg
iret
add
pop
data16
dec
arpl
inc
loopne
and
pop
cmp
cmp
inc
mov
xor
jg
pushf
bnd
push
jecxz
cmp
shll
mov
mov
dec
in
dec
popa
fucomip
jbe
mov
xchg
in
sbb
inc
fdivl
push
bound
mov
or
mov
jbe
dec
in
aad
int3
pusha
pop
int3
inc
loop
dec
push
imul
and
pop
cmp
jle
dec
sarl
mov
pushf
xchg
lret
lahf
jmp
jb
pusha
pushl
clc
lods
hlt
lock
cmp
mov
push
es
ja
cmpsb
and
jb
movb
out
inc
out
stc
push
and
cmc
adc
mov
ficompl
and
shlb
xor
cmp
rclb
mov
and
std
dec
iret
or
jmp
sbb
loopne
cmp
pusha
add
mov
and
fldcw
adc
jg
xchg
daa
dec
mov
call
sahf
add
cltd
enter
test
xchg
dec
lods
pop
rcrb
mov
jnp
jp
cmpsb
mov
mov
jecxz
nop
mov
sub
mov
leave
or
in
test
nop
push
pop
mov
pop
sahf
nop
iret
pushf
and
call
rcl
push
mov
jecxz
es
pop
mov
jb
es
pop
loopne
in
sbb
sbb
push
cmp
clc
or
fsubl
mov
jo
inc
out
out
mov
sub
lea
inc
sarb
cmpb
popf
lcall
add
xchg
loope
aas
jnp
lds
cmp
pusha
jl
jbe
push
sahf
out
ret
mov
das
cli
stc
out
fldl
and
adc
notb
aaa
test
mov
add
pop
pop
jb
inc
xchg
stos
mov
push
mov
divl
es
inc
fiadds
or
sbb
mov
pop
sbb
mov
lahf
pop
add
ficoml
stos
cmp
scas
cmp
out
scas
aas
push
cmc
pop
mov
mov
into
test
sahf
test
push
out
xor
dec
jo
pop
dec
or
addr16
dec
int3
mov
push
icebp
xor
enter
mov
es
fisubrl
sub
fimull
nop
mov
jne
in
dec
xor
push
fcoms
in
inc
xchg
xchg
mov
mov
push
cli
inc
mov
movb
or
inc
cmp
negl
clc
outsl
mov
xchg
shlb
shrb
and
add
push
lret
sbbb
adc
jl
call
cwtl
sbb
sub
je
loope
inc
rolb
mov
inc
mov
ja
xor
jno
loope
aas
inc
shlb
mov
repz
xchg
psubusb
lods
xor
dec
lea
adc
loope
bound
mov
mov
and
test
push
ljmp
push
std
or
stos
sbb
mov
xchg
dec
dec
and
push
fs
outsb
mov
test
dec
imul
or
xchg
inc
jno
loop
jae
fisttpl
lods
js
cmp
add
popl
insl
add
sub
xor
jecxz
inc
mov
xlat
inc
push
xor
pop
dec
popf
jne
cmp
ss
mov
xchg
sub
fidivrl
xchg
xchg
data16
dec
pop
mov
adc
xor
pushl
lcall
loopne
jnp
sub
cmpl
inc
mov
pop
mov
aad
mov
lods
pop
inc
shrl
jo
jmp
insb
xor
xlat
inc
inc
sbb
scas
mov
xor
mov
jmp
nop
adc
sahf
and
decb
sbb
mov
xor
test
or
inc
pop
loopne
inc
pop
scas
cli
jmp
xchg
xchg
mov
mov
xor
leave
adc
out
jno
inc
jle
lods
mov
bts
and
mov
fcom
clc
cmp
out
and
into
push
es
sub
notl
cmp
cmpl
mov
jbe
or
gs
cmc
pusha
sbb
jg
sbb
pop
push
or
xor
testb
loope
pop
and
in
mov
in
ljmp
out
mov
gs
std
out
push
int
xchg
cmp
add
pop
push
push
je
and
stc
in
push
test
and
mov
sahf
je
sub
xchg
gs
ljmp
jg
sbb
fiaddl
test
fdivrp
lods
ljmp
mov
xor
cwtl
inc
or
clc
jp
aas
mov
rorl
inc
adc
ja
nop
scas
jae
gs
jmp
int
loope
stc
or
dec
idivb
rcll
nop
movsl
pop
mov
ret
ret
aad
iret
inc
mov
fistpll
cs
mov
int3
into
lret
decl
fcmovnbe
jb
pop
es
hlt
mov
mov
jno
adc
cmp
adc
leave
pop
sub
jl
cs
popf
mov
jno
push
loopne
push
cmp
sub
gs
sub
mov
sub
sub
lock
mov
add
mov
lock
jno
or
push
adc
dec
jmp
push
jl
push
pop
imul
sbb
jge
cmp
std
jl
and
ss
inc
mov
sti
jne
lea
lahf
sub
mov
sub
xchg
cwtl
sbb
xchg
and
mov
sub
adc
daa
iret
enter
cmp
lds
scas
lcall
pop
xor
push
mov
rclb
inc
jns
cmp
pop
sub
aam
sbb
dec
in
mov
or
sub
adcl
and
cmp
pop
dec
sbb
sbb
sub
inc
xchg
scas
int3
loopne
into
push
outsb
or
push
in
push
stos
cld
ror
jmp
lret
cld
push
pop
and
cmpsb
daa
jg
and
aaa
sahf
cmpsl
adc
xor
movb
xor
bound
mov
pop
adc
add
pop
popa
jns
dec
cmpsl
pusha
xorb
aaa
and
aad
sti
push
shr
in
adc
sbbb
and
cs
push
xor
int
mov
lret
jbe
pop
loope
add
sub
dec
sbb
addr16
adc
lahf
stc
jmp
jge
jnp
fdivrl
push
ds
xor
sbb
mov
lret
sub
xchg
movsl
xlat
or
loopne
adc
xchg
xor
ljmp
adc
and
pop
and
pop
and
les
add
sarb
adc
xchg
and
mov
movsl
push
mov
and
xchg
popa
arpl
inc
outsb
mov
ret
push
addl
test
mov
call
jp
xor
rorl
dec
sub
add
and
cmpsl
imul
fnstsw
mov
loop
add
cmp
mov
xchg
dec
pushf
mov
sub
out
loopne
xlat
outsl
cmp
shll
mov
notl
movsb
xchg
out
cwtl
jl
sub
and
dec
lods
mov
adc
pop
adc
xor
push
cli
gs
scas
dec
aaa
jp
scas
xchg
call
dec
clc
mov
aaa
mov
test
pop
jb
lds
sahf
and
flds
pop
dec
mov
adc
fcomps
cld
in
popf
sahf
cld
js
mov
jmp
mov
push
lret
jne
stc
mov
aaa
lret
jno
out
fst
and
insl
jmp
rcll
jecxz
jl
mov
daa
insb
ss
test
sbb
xor
pop
lea
in
xchg
xor
nop
les
mov
aaa
mov
jmp
xchg
mov
test
rorl
call
adcb
je
mov
je
iret
push
add
popa
push
lahf
movsl
mov
in
and
xor
push
lret
fstpt
adc
and
insl
xchg
aas
sbb
les
ret
aam
jnp
repz
mov
mov
mov
sbb
fistps
sahf
dec
int3
cmpsb
jge
add
cmp
pushf
pop
mov
in
adc
pop
pop
mov
andl
movsb
imul
jmp
std
dec
jp
aad
iret
jnp
dec
sbb
xorl
mov
out
rcrl
sub
lock
sbb
mov
or
jno
push
ror
rcrl
aad
fcmovnu
sti
and
add
in
xchg
sbb
push
sub
mov
andl
xlat
add
adc
sub
inc
shll
add
mov
sarl
jb
pop
and
aaa
push
dec
les
add
iret
sub
outsb
popf
popa
add
sbb
std
movsb
jb
and
cmp
adc
push
push
cli
xchg
and
push
dec
mov
dec
cmp
shll
sarl
aaa
std
mov
dec
mov
call
bound
push
insb
inc
js
adc
rorl
dec
ret
movb
insb
imul
pop
sahf
test
add
mov
dec
mov
sbb
sub
cmp
outsl
cmp
scas
dec
mov
mov
test
daa
inc
ret
out
cs
cmp
rcr
lea
and
or
mov
iret
xor
pop
adcl
lcall
pop
shr
jne
sub
mov
jecxz
add
out
arpl
ror
fdivs
mov
dec
fs
lods
push
mov
add
dec
lea
roll
roll
ret
lods
xchg
mov
andl
ds
cmpsl
and
jle
sti
andl
daa
inc
or
subl
pop
cld
sub
mov
sub
and
or
mov
cltd
dec
in
add
jne
push
cld
cltd
ja
clc
js
outsl
mov
into
loopne
sahf
sub
cwtl
and
sub
jp
cmpsl
jge
push
fstsw
ret
xchg
mov
mov
jmp
mov
movsb
sbb
jns
and
xchg
mov
sbb
sbb
jl
cmpsb
jns
mov
aas
xchg
sub
xor
mov
sbb
outsl
fcom
imul
and
stos
roll
dec
mov
mov
and
xorb
dec
fstpt
or
lods
popa
enter
mov
in
pop
jbe
add
fnsave
mov
jg
rclb
xchg
push
divl
push
idivl
jne
push
hlt
neg
aaa
xchg
gs
or
mov
fisttpll
pop
movsb
jmp
cmpsl
out
jbe
mov
out
lds
jo
jnp
loope
push
xchg
or
mov
stc
jns
out
fildll
xor
mov
pop
xor
fcomps
adc
xor
mov
shlb
fmuls
adc
xchg
addr16
out
dec
cmp
insb
fisttpll
into
dec
xchg
test
push
jns
loope
and
xor
and
ljmp
sbb
lods
mov
arpl
out
mov
bound
and
shll
xor
fs
ja
cltd
push
adc
xor
sub
cwtl
not
mov
mov
mov
mov
push
push
and
push
mov
jb
sbb
adc
or
cli
and
mov
pop
lret
xor
xchg
out
mov
xchg
mov
mov
and
xchg
aaa
mov
mov
adc
mov
and
push
lret
push
lods
clc
dec
in
lock
scas
push
xchg
cwtl
sahf
mov
mov
sub
test
popf
dec
or
aas
sub
iret
mov
mov
jecxz
jbe
sbb
mov
repz
daa
andb
add
mov
adc
incb
clc
mov
cmc
fnsave
into
sub
popa
xchg
mov
movsl
shlb
mov
lret
mov
pop
xor
pop
ja
cmp
ret
pop
rcrb
dec
or
into
in
sti
out
sub
and
add
jb
shlb
add
cmp
dec
stos
xlat
cwtl
pop
xor
add
cmp
push
icebp
dec
mov
aaa
dec
pop
push
adc
frstor
and
ret
mov
ds
test
into
mov
sub
adc
xor
fwait
sarl
js
dec
fisubrs
adc
fs
jae
mov
push
or
daa
add
inc
data16
mov
outsl
ret
lea
int3
mul
sbb
rolb
adc
icebp
mov
push
and
add
mov
outsb
or
and
lcall
outsl
xchg
sahf
mov
mov
mov
stc
dec
adc
xchg
lahf
and
sbb
xor
mov
scas
std
push
jge
add
push
adc
dec
add
and
inc
mov
sbbb
stos
or
into
xor
inc
dec
test
pop
cmp
cmp
cmp
mov
outsb
in
js
cmp
mov
and
popa
sub
cwtl
stos
leave
adc
clc
mov
dec
mov
adc
adc
test
mov
and
ret
add
lret
test
loope
dec
pop
notb
out
enter
pop
mov
lea
insb
std
fiadds
or
dec
jge
lcall
adc
fildll
aam
dec
fucomi
inc
jo
or
and
xor
orb
ret
xor
xchg
inc
sub
imul
mov
or
and
in
inc
inc
pop
shrl
aas
mov
nop
sbbb
cmp
mov
fsubl
inc
mov
xchg
xchg
fmuls
inc
adc
xchg
push
pop
xchg
call
push
add
mov
xchg
xchg
orl
xchg
add
das
xchg
js
imul
add
das
mov
fstpl
mov
mov
inc
mov
lods
xor
js
out
jne
scas
and
jmp
dec
push
cmpsl
std
mov
divb
pop
stos
pop
add
icebp
add
repnz
push
xchg
int
or
rorl
fisubs
cmpsb
rorl
dec
xlat
cmp
pop
aad
aaa
xrelease
mov
mov
xchg
sbb
jae
add
test
mov
or
jae
ss
call
cmp
lret
je
loopne
js
mov
in
in
pushf
push
inc
fstpt
pop
outsl
jb
call
int3
ret
sub
mov
stos
cmp
pop
push
xchg
mov
jl
sar
jns
add
insb
jp
test
test
mov
lcall
sub
jl
dec
mov
out
pushf
dec
daa
pop
add
pop
mov
inc
pusha
mov
mov
pop
mov
aas
mov
mov
and
cmp
mov
add
out
gs
jbe
or
push
cmp
push
leave
push
out
and
xchg
shll
and
mov
lret
es
xchg
sbb
testl
out
inc
rolb
mov
addr16
push
jb
mov
lods
and
je
and
movsb
mov
adc
xchg
sub
pusha
mov
or
jae
std
lahf
loopne
xchg
pusha
test
insb
pop
bnd
xchg
popf
imul
cwtl
cmpsl
lods
aas
xlat
pop
adc
cwtl
and
jb
push
inc
push
popf
jecxz
fwait
movups
xchg
jl
xchg
pop
mov
pop
jmp
out
mov
out
outsl
hlt
sub
sahf
das
sub
lods
push
push
jbe
jb
in
adc
loop
and
iret
push
inc
adc
cmp
or
mov
lret
cmp
outsl
sbb
jbe
mov
cmp
filds
out
push
lret
mov
mov
xor
mov
aaa
xor
or
sbb
andl
cmp
cltd
pop
mov
out
test
mov
push
lods
test
pop
xchg
jmp
inc
or
or
jle
movsl
mov
dec
call
dec
sub
or
rcll
adc
lret
outsb
add
jle
dec
cmpsb
lds
xlat
ret
inc
lea
and
ljmp
xchg
into
cmpsl
jmp
ljmp
sarb
ja
mov
and
jmp
dec
mov
test
rcll
xchg
and
mov
or
push
adc
cmp
inc
shl
into
pop
cmp
stos
lea
push
ss
in
push
cmp
sbb
int3
mov
mov
sbbl
shrb
out
cmp
inc
jnp
lock
repz
push
push
mov
jae
xchg
mov
mov
pop
movsl
test
inc
cmp
out
mov
data16
icebp
arpl
sub
js
cli
shlb
xchg
mov
gs
jle
in
ds
cmpsl
mov
shlb
fnstcw
jnp
push
mov
aaa
andl
fcmovnb
dec
call
into
lods
pop
loope
call
and
or
shl
inc
pop
nop
sub
xchg
das
leave
mov
mov
sub
pop
jne
push
push
lcall
mov
mov
jge
lret
sbb
or
gs
jg
jle
mov
add
xchg
fsubrp
mov
or
jg
or
int3
jmp
test
jg
adc
rcll
sbb
add
add
push
pop
xchg
jb
adcl
movsl
push
mov
jmp
pop
xchg
xchg
push
fcomps
push
xor
lret
inc
dec
sbb
sbb
jno
das
test
push
ret
hlt
loop
inc
adc
lahf
and
shl
pop
subl
sti
jle
fcomi
mov
test
test
push
or
jo
push
mov
dec
push
sub
xchg
pusha
push
mov
test
push
aaa
gs
das
mov
mov
cwtl
fisttpl
cmpsb
orb
push
cmp
mov
sub
nop
push
pop
outsl
insb
aas
pop
popa
mov
adc
pushf
loope
xchg
mov
sahf
outsl
shrl
or
in
mov
in
iret
push
loop
mov
ljmp
pop
xor
std
mov
mov
in
add
ret
iret
xlat
orb
in
adc
jae
and
push
call
psubsb
loop
ret
loop
cmpsb
mov
pushf
xor
lock
into
mov
movsl
call
movb
nop
imul
stc
std
fldcw
hlt
shrb
push
adc
pusha
adc
jg
orl
mov
ret
dec
loopne
mov
mov
fdivl
pop
mov
lock
jns
shll
push
pop
rorb
shl
push
addb
and
mov
xor
int3
je
mov
xor
fwait
xchg
push
jo
lds
xchg
xchg
clc
cmp
inc
and
cltd
cmp
frstor
push
cmp
mov
pop
in
mov
dec
push
cmp
sbb
das
fwait
stos
mov
adc
scas
sub
lods
mov
ss
insl
sbb
cmc
mov
sbbb
clc
inc
nop
stos
inc
sbb
inc
out
ljmp
jno
mull
imul
pusha
lods
sub
mov
jnp
jae
jns
xorb
sbb
shll
stc
mov
fs
mov
orl
and
push
push
xchg
rolb
jecxz
jnp
out
mov
dec
std
pop
xchg
iret
popf
xor
inc
inc
mov
fs
out
xchg
push
jo
cmpsl
dec
loopne
push
stos
mov
ret
xor
push
icebp
sbb
shlb
mov
adc
adc
jmp
mov
adc
cmp
dec
test
cmp
xchg
out
movsb
lea
cmpsl
notb
out
dec
push
test
js
je
mov
inc
push
mov
ds
xlat
cmp
xor
dec
outsl
inc
out
mov
pop
dec
int3
push
add
fisttpl
mov
sub
lea
mov
ss
lret
xor
mov
xchg
mov
pop
or
pop
ljmp
rcrb
xchg
ja
xor
xchg
cli
sbb
popf
pop
cltd
cltd
jbe
mov
adc
xchg
into
pop
mov
inc
out
test
xchg
add
xchg
jle
fcmovne
xor
ss
and
clc
clc
fstps
sub
mov
divl
cmpsb
push
add
clc
push
stos
adc
sub
outsb
or
mov
daa
pop
jno
pop
pop
adc
daa
clc
cmpsb
out
jl
sbb
xor
push
jne
push
xchg
movsb
scas
ror
ret
xor
int
cs
add
mov
add
mov
xor
bound
sbb
icebp
xlat
jmp
leave
aad
fiadds
call
loope
call
push
and
or
xor
ffreep
test
or
andb
roll
pop
inc
mov
xlat
pop
in
sarb
ja
out
inc
lahf
mov
and
sub
test
jae
iret
pop
mov
aas
ds
ficompl
push
popa
mov
ret
add
sub
mov
mov
or
repz
inc
mov
jnp
cmp
stc
fs
ficoms
jmp
push
inc
jg
pop
inc
sar
scas
mov
cmpsb
dec
pop
fs
inc
cltd
dec
sub
xchg
shl
push
add
fsubrs
sti
sbb
mov
fistps
test
fdivrl
adc
adc
push
fwait
cmc
and
mov
pop
xchg
jp
leave
mov
sub
in
ljmp
out
jae
mov
dec
lods
sub
mov
loop
pop
or
addb
cld
shl
xchg
aad
fstpt
pop
std
dec
das
imul
inc
add
xchg
sub
dec
xchg
rcrb
push
pusha
cmpsl
pusha
cmp
iret
pop
push
xor
lea
add
fcmovnb
xor
and
test
pop
pop
out
imul
into
jg
or
add
and
mov
repnz
aas
xchg
notb
pop
js
sub
cwtl
movsb
mov
pop
dec
cld
push
sub
bound
in
push
shlb
bound
rclb
cmp
int
loope
imul
jns
xchg
xlat
add
adcb
pop
adc
xor
pop
xchg
dec
jo
mov
sub
mov
mov
xchg
cmc
movsl
lahf
popf
adc
push
ror
jne
enter
sbb
jne
push
push
xchg
sbbl
inc
ret
mov
mov
inc
inc
fs
push
jns
push
test
sbb
loopne
movsb
and
sahf
loopne
pop
movsb
mov
into
xlat
lcall
xchg
inc
jbe
stc
pop
xlat
popf
flds
pop
outsb
mov
jbe,pt
int3
sahf
xlat
sub
dec
out
mov
push
push
movsb
iret
repz
xor
xchg
or
test
add
jmp
lahf
mov
jge
and
xor
sbb
sbb
mov
lahf
mov
out
push
sbb
cmp
adc
push
mov
push
outsl
xchg
or
test
int
mov
sub
fsub
pop
mov
cmc
fbld
test
sbb
push
sarl
pusha
sub
mov
sub
in
sbb
xchg
xor
cmp
repnz
pop
xor
pop
pop
xor
aad
mov
mov
mov
xchg
sbb
scas
sbb
int
int
xchg
add
mov
sub
out
in
cmp
or
ret
sub
mov
sub
mov
inc
in
pushf
xchg
xchg
xor
or
xchg
cmp
inc
mov
inc
mov
pop
cmpsb
fsub
add
sbb
xor
xchg
nop
jnp
lret
pop
push
lahf
mov
leave
int3
xchg
sbb
stos
in
jae,pt
jne
in
das
sbb
lds
jns
xorl
dec
and
ljmp
int3
push
and
pop
adc
das
push
cs
bound
fldt
aad
rcr
add
in
push
ret
and
xchg
mov
cwtl
lret
inc
orl
in
in
cmpsl
mov
clc
test
loopne
sub
lods
mov
sub
inc
repnz
xor
inc
es
adc
outsb
xchg
xchg
dec
sti
and
sbbl
aam
or
enter
xor
insl
and
movsl
and
sub
pop
movsl
push
pop
dec
in
mov
adcl
out
sub
ja
es
lods
push
inc
dec
dec
jae
push
and
mov
fwait
push
in
ds
nop
icebp
adc
sbb
cmp
fcmovbe
stc
aaa
jg
in
and
out
in
pop
js
dec
popa
and
popf
popa
inc
enter
mov
ret
daa
pushf
mov
leave
push
repz
and
jge
mov
pop
pop
rcr
ret
test
aam
sbb
xor
aad
enter
rol
and
sbbb
dec
and
repz
adc
jle
xchg
movsl
mov
or
adc
repz
cli
xchg
fsub
pop
dec
xor
pop
outsl
dec
mov
jp
xchg
mov
stos
or
mov
std
xchg
ljmpw
pop
adc
cli
testl
rol
adc
jmp
incl
mov
filds
jb
jp
rolb
sub
cld
pop
lahf
pusha
mov
xchg
aad
fists
jno
js
lock
xor
clc
mov
leave
sbb
loopne
cmp
xchg
out
push
loop
or
mov
lea
pushf
mov
or
ss
pop
push
addl
scas
mov
iret
rcl
dec
push
mov
jmp
loop
ret
inc
dec
fildl
xchg
sbb
mov
xor
sbb
scas
xor
mov
push
fwait
aaa
movsl
pop
daa
sbb
or
aam
xor
xchg
mov
fnstcw
aad
cmc
sub
dec
data16
pop
mov
pop
sarl
movl
mov
addl
dec
int
sub
ds
cmp
hlt
xor
pushf
xchg
adc
mov
ja
bound
pop
insb
jo
and
mov
and
xchg
adc
popa
xor
fcomps
test
jns
mov
push
aas
push
fisttps
cmp
cli
sbb
loope
xor
ret
adc
jecxz
ds
fldcw
dec
push
je
sub
hlt
cmp
sub
mov
jmp
xchg
sbb
roll
cmp
lds
dec
add
ret
jnp
cmc
pop
push
jg
pop
lea
test
add
push
adc
sub
inc
test
enter
repz
mov
mov
push
or
shl
dec
dec
mov
or
add
jne
fwait
inc
out
imulb
inc
adc
sbb
lock
gs
adc
aaa
dec
jnp
stos
dec
xchg
and
push
or
lea
fcmovb
jo
aas
nop
test
pushf
and
inc
and
and
mov
lods
cmp
fbld
sbb
loope
adc
rorb
scas
insb
shrl
adc
jg
jns
mov
add
loop
push
sbb
hlt
push
test
rclb
adc
out
arpl
cld
sbb
je
jl
movsl
fstpt
adc
sub
lods
jno
mov
and
pop
lds
xchg
xchg
test
je
xor
enter
ret
or
push
mov
iret
scas
int3
arpl
stos
ficoml
sti
mov
std
add
lret
or
stos
sub
sbb
push
mov
js
or
mov
pop
addr16
arpl
add
lods
mov
push
mov
jmp
ds
dec
fcom
or
xor
adc
mov
xchg
or
scas
adc
cmp
mov
xor
cmpsl
mov
or
xor
xchg
jb
pop
mov
jne
fildll
pop
push
shll
xor
cwtl
insl
mov
sub
and
aam
xlat
sbb
js
xor
push
test
ja
call
sub
xchg
pop
fisubrl
and
inc
push
xchg
cmpb
aam
inc
cmp
inc
cmp
sbb
add
xor
xor
cmp
cmp
or
mov
pop
push
imul
arpl
mov
shl
loopne
in
cmpsb
mov
sbb
frstor
fs
aad
push
mov
or
xor
jae
xchg
fsubl
in
ss
movsl
shrb
pop
mov
dec
pop
sub
test
les
fdivrl
shlb
adc
stos
mov
in
imul
mov
imul
jle
mov
adc
sbb
adc
stos
std
mov
out
shlb
add
shrl
mov
std
scas
mov
rcll
cli
sub
lahf
add
mov
cmp
out
add
cmc
xchg
aas
cli
aam
add
ljmp
push
jg
idivl
sub
arpl
and
cmp
cmp
xchg
cli
out
sahf
cmpsl
inc
in
xchg
xchg
push
mov
sahf
xor
sahf
sub
mov
dec
push
mov
sbb
cwtl
cmp
cwtl
mov
push
xor
scas
rcrb
gs
sbb
repnz
mov
aas
imul
push
add
repz
dec
inc
push
test
mov
jb
scas
loopne
inc
sbb
movsl
je
sbbl
int
cmp
add
int
sbb
lods
add
pushf
sti
inc
in
mov
xchg
data16
cmp
pop
inc
pop
movsb
fidivl
and
xor
daa
popa
divl
xchg
jbe
sti
and
pop
cmp
dec
mov
mov
and
dec
popf
dec
sub
pop
sbb
cld
es
mov
xchg
daa
and
adc
pop
ds
adc
ds
loop
and
sti
test
mov
push
inc
inc
adc
outsl
sub
pop
scas
xchg
add
call
pop
pop
inc
bound
pop
mov
out
sbb
sub
imul
mov
adc
add
mov
movsl
scas
add
out
sti
std
jle
fldenv
in
pop
int
call
mov
pop
mov
xchg
lods
int
and
adc
add
lock
es
mov
cmp
ret
in
lods
push
rclb
adc
add
ficoms
mov
mov
rcl
mov
fs
mov
sub
cmp
lods
jge
lds
xchg
cs
lcall
lea
add
repz
mov
mov
push
jbe
lret
lret
mov
mov
fwait
add
add
sub
mov
sbb
dec
inc
mov
scas
sarl
repz
dec
popf
add
mov
jno
cld
movsl
add
cmovo
pop
push
cs
popa
sub
mov
jp
scas
mov
mov
decb
imul
movsb
iret
inc
mov
lock
jne
dec
ja
jne
roll
dec
lcall
test
sbb
push
sub
loope
loopne
scas
subl
add
mov
mov
int3
hlt
push
sar
mov
shrb
shlb
dec
cmpsb
inc
fldcw
xor
pop
mov
push
addr16
scas
xchg
or
ret
adc
or
inc
jl
or
aas
jbe
pop
je
mov
stc
mov
xchg
orl
and
in
xchg
insb
subl
cltd
push
insl
es
hlt
popa
cmc
cmc
aam
aam
inc
std
mov
in
pushf
sub
icebp
mov
jle
cmpsl
jl
cmpsl
fildll
in
or
cld
sub
dec
cmp
xor
stos
mov
mov
es
and
xor
ja
cli
inc
and
add
mov
bound
enter
fadd
or
jp
dec
lcall
mov
inc
mov
loopne
lds
call
mov
cli
jle
add
scas
clc
std
xchg
std
adc
scas
or
sbb
adc
je
std
push
in
adc
jge
and
subl
andl
and
loopne
das
aaa
into
std
mov
xor
cwtl
add
test
mov
and
aam
gs
test
idivl
shl
inc
insl
push
mov
adc
jnp
add
addr16
cmc
in
push
xor
add
es
iret
incb
mov
add
outsb
dec
and
pop
add
cs
xchg
sti
xor
outsb
popa
and
jne
std
push
and
sbb
out
out
lds
imul
lods
push
jno
push
xor
jbe
sub
and
jae
cltd
mov
sbb
pusha
adc
mov
pop
or
pop
mov
and
mov
rolb
pop
out
sub
jae
push
mov
add
add
das
dec
inc
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
xlat
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
aad
add
add
add
aad
add
add
add
add
insb
aad
add
add
add
add
cld
aam
add
add
aam
inc
add
aam
add
add
sbb
inc
add
add
or
inc
add
add
cld
roll
cld
add
add
roll
incl
add
call
add
rorb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
dec
out
mov
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
loopne
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
insb
jae
data16
dec
push
dec
push
cs
push
and
gs
xor
and
ds
gs
jb
jo
imul
insb
jae
data16
dec
outsb
jae
popa
insb
insb
and
jae
gs
and
cs
sub
outsl
fs
fs
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
das
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
outsl
insl
jo
je
bound
imul
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jo
je
bound
imul
cmp
jo
insb
imul
ds
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
popa
jo
insb
imul
ds
arpl
jo
je
bound
imul
jae
insl
bound
add
add
