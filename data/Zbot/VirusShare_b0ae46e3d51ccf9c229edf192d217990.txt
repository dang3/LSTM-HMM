dec
push
and
add
jne
mov
sbb
dec
dec
outsl
xlat
mov
repz
sti
iret
mov
mov
loopne
fists
mov
xor
xchg
out
andb
outsl
xor
jae
mov
sahf
dec
stc
inc
mov
imul
out
lea
add
into
xor
jo
jnp
fiaddl
idivl
mov
push
nop
mov
fwait
ljmp
aaa
sub
cmpsb
mov
push
sbb
inc
jl
xchg
in
push
adc
xor
inc
mov
xchg
push
adc
fldt
xor
mov
sub
jmp
ret
pop
inc
and
push
movsl
mov
add
scas
scas
mov
push
and
sahf
or
int3
jmp
cmp
sbb
into
sbb
pop
nop
les
pop
ss
lcall
adc
aad
subb
push
push
xchg
and
fisttpll
int3
imul
test
test
inc
xchg
js
jae
dec
cld
inc
fs
add
adc
insl
fs
cld
imul
out
sbb
ljmp
xor
jp
cli
add
rcrb
sub
adc
cld
pop
fistl
pusha
cmp
gs
shr
imulb
les
xor
pushf
add
aas
or
sbb
ret
enter
or
and
or
stc
inc
push
out
in
inc
add
push
cs
xchg
lods
push
in
jecxz
push
lret
push
pop
sub
xor
test
adc
std
xor
stos
cmp
jge
mov
mov
adc
orl
shrl
jecxz
test
or
lods
add
fldl
jnp
mov
pusha
push
add
cmp
jb
xor
jae,pt
jl
imul
or
int
mov
xchg
xor
sbb
cwtl
dec
iret
jge
adc
pusha
dec
mov
cmp
rorb
movl
test
cs
cmp
jg
sarl
mov
jle
pop
xor
xchg
leave
insl
xor
cmc
iret
xchg
mov
cli
iret
in
rclb
jae
dec
pop
mov
out
jecxz
mov
add
mov
xor
stc
mov
mov
ret
pop
les
sbb
cs
ret
xchg
xchg
mov
adc
bound
xchg
idivb
dec
addr16
sbb
jns
jbe
shrb
inc
push
pop
insl
xrelease
fmulp
sub
xchg
pushf
test
fisttpll
lds
cld
cmp
fwait
idivl
push
je
aaa
sbb
mov
mov
xor
ret
push
jp
bound
aaa
and
pushf
in
mov
ljmp
cmp
in
sub
cmp
ret
outsb
cmp
test
cltd
fs
stos
mov
lods
jmp
lret
push
cmp
test
adc
fstl
dec
push
enter
dec
dec
adc
lcall
cmpsb
or
loope
jne
mov
outsl
add
vpmullw
mov
add
fcoms
inc
sbb
loope
pushf
xchg
andl
popl
out
cmp
add
adc
stc
stos
sub
lahf
ja
or
push
das
scas
sarb
testb
cltd
stos
cli
pushf
icebp
mov
sub
mov
pop
jg
stos
pop
pop
aas
mov
pop
pop
cltd
jae
pop
sub
loopne
in
pop
popf
mov
add
add
xchg
subb
outsb
sub
jmp
inc
pushf
das
jmp
scas
cwtl
xchg
je
jne
mov
sbb
leave
add
daa
mov
cwtl
add
popl
loopne
outsb
loopne
cmpsl
pop
mov
mov
enter
sahf
loop
jmp
mov
adc
xchg
enter
outsb
test
jne
inc
sub
addr16
sbb
xchg
cltd
idivl
or
scas
jmp
in
push
into
clc
xchg
notb
jmp
movd
nop
or
sahf
pop
pop
ss
add
sbb
insl
xchg
test
pop
mov
shlb
xchg
les
mov
and
pop
fstl
lret
cmpb
repnz
loop
adc
xchg
hlt
in
out
dec
jnp
jle
jecxz
fs
mov
mov
inc
sub
jge
arpl
add
xor
mov
scas
and
lret
adc
xchg
adc
testl
jmp
bound
fcoml
aaa
or
jo
hlt
rorl
lret
cmp
mov
in
lret
adc
lcall
out
outsl
mov
cmp
cli
pop
ret
divl
aam
loop
repnz
insl
ljmp
sbb
ja
sub
jo
pop
inc
mov
and
negb
xor
stos
push
iret
mov
inc
jne
push
dec
or
xchg
dec
je
mov
fisubs
testb
dec
mov
cmc
push
jnp
loopne
mov
mov
mov
sbb
mov
xchg
rorb
inc
mov
mov
xor
nop
repnz
mov
outsb
and
push
fidivrl
push
xchg
lods
mov
xor
test
mov
xor
jns
in
out
jl
cmp
ds
pop
es
pop
rcll
sti
cmp
flds
test
add
cmpsb
add
inc
imul
or
je
mov
imul
dec
fisubs
dec
xchg
sahf
bound
mov
es
cmpsb
cmpsl
in
shl
sub
loop
je
jle
sbbl
pop
test
int3
lock
push
and
mov
jecxz
lds
movsb
adc
xchg
nop
cwtl
mov
add
inc
movsl
cmpsl
pop
sbbb
in
adc
sub
dec
test
xor
cld
and
fsub
sbb
int3
cmp
inc
mov
pop
pop
nop
sbb
mov
pop
or
loopne
movsl
js
scas
add
fmull
aaa
or
push
push
mov
ror
cmovle
sub
adc
test
mov
and
and
cmc
jmp
and
dec
sbb
sbb
fldenv
in
cmp
cmpsb
xchg
sub
ss
add
inc
js
dec
lret
xchg
rorb
in
in
mov
ja
inc
xor
scas
jbe
push
mov
ret
das
xlat
fisttpl
fs
aam
fwait
outsl
mov
sub
movsb
add
add
and
jecxz
das
push
lcall
xchg
mov
repnz
jne
je
mov
mov
jmp
mov
in
mov
mov
cld
add
loope
sti
jns
jl
jg
in
fiadds
jae
adc
or
lahf
or
jmp
dec
adc
data16
insb
shrl
out
idivb
sub
ljmp
std
test
jecxz
adc
fucom
in
adc
mov
aas
imul
pop
push
jle
insb
inc
mov
xor
or
icebp
lods
push
and
subb
adcl
testl
fidivrs
arpl
pop
sbb
lods
push
sbb
pushw
and
cmpsl
xchg
pop
push
mov
ljmp
mov
jb
fwait
rcll
sub
sub
mov
push
rolb
pop
adc
shlb
mov
bound
sbb
push
sti
cmp
cmp
imul
mov
adc
adcl
inc
mov
es
std
std
icebp
test
out
mov
std
pop
and
fbstp
and
inc
rol
pcmpeqw
cwtl
push
das
js
movb
aaa
jg
je
xchg
std
cmpsl
orl
lods
dec
in
cli
jge
addr16
test
aam
push
xchg
push
lock
shll
enter
test
mov
xchg
dec
aas
mov
jecxz
inc
mov
sub
xor
lds
nop
mov
push
xor
push
inc
fnstsw
insb
cs
pop
cwtl
mov
push
imul
inc
inc
mov
and
jge
test
push
lcall
inc
insl
in
repnz
fs
adc
bound
inc
mov
mov
jns
test
inc
jno
xor
jne
mov
popl
xor
je
sbb
cmpsb
jl
sbb
cmp
sbb
sub
idivb
and
sub
fsub
mov
jg
jecxz
mov
shrb
rolb
add
xchg
pop
push
adc
pushf
jnp
sub
jle
lea
jae
push
sub
xchg
pop
rorl
rolb
gs
out
shlb
gs
in
mov
inc
add
lea
cmp
sbb
and
mov
pop
mov
cmp
lea
dec
cmp
outsb
sub
pop
mov
int3
gs
jg
xchg
incl
call
add
add
imul
pop
add
cs
int3
ljmp
add
add
add
add
pop
addl
xchg
ja
call
inc
inc
bound
add
add
pusha
je
arpl
add
xchg
int3
int3
add
test
decl
jmp
mov
mov
sub
jns
nop
add
sbb
int3
add
ss
aaa
adc
jp
add
pop
push
pop
outsl
mov
add
push
mov
jb
sbb
dec
int3
add
mov
int3
int3
cmp
subl
int3
bound
int3
xor
add
inc
sbb
mov
add
add
mov
add
add
call
jmp
jno
incl
add
nop
nop
nop
add
int3
inc
inc
pop
jnp
pop
mov
add
and
popa
cmp
int3
pop
ja
add
jmp
int3
test
jle
add
add
add
push
pop
imul
xor
add
dec
inc
test
nop
nop
add
add
add
incl
int3
add
incl
add
ja
and
nop
nop
add
jg
xor
add
andb
add
nop
nop
incl
pop
ja
add
jo
ds
das
pop
sub
sub
push
pop
and
add
add
add
xor
push
push
xor
and
pusha
push
popa
nop
nop
add
nop
nop
aas
inc
pop
add
sbb
nop
jl
add
orb
and
and
int3
int3
outsb
dec
add
incl
dec
pop
jo
int3
subl
add
int3
int3
imul
imul
add
incl
push
add
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
movl
mov
mov
mov
mov
mov
sub
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
jb
mov
imul
mov
sub
mov
mov
sub
mov
and
sub
mov
lea
inc
sub
inc
mov
add
mov
mov
mov
mov
and
imul
mov
add
mov
mov
mov
mov
mov
add
mov
and
add
mov
mov
and
mov
add
cmp
je
mov
add
mov
and
add
mov
jmp
mov
sub
mov
and
sub
mov
mov
sub
mov
mov
and
mov
add
xor
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
and
cmp
jne
jmp
xor
mov
mov
lea
mov
cmpl
jne
jmp
mov
xor
mov
div
cmp
jbe
mov
and
mov
add
mov
lea
mov
mov
and
cmp
jne
jmp
mov
and
imul
mov
add
mov
jmp
call
mov
and
mov
lea
cmp
jb
mov
and
mov
imul
sub
mov
mov
and
mov
lea
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
imul
mov
add
mov
movb
mov
sub
mov
mov
and
mov
lea
cmp
jb
mov
and
mov
imul
sub
mov
movl
mov
imul
mov
add
mov
mov
push
mov
push
push
mov
push
call
add
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
and
test
jne
mov
imul
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
mov
mov
lea
mov
movb
jmp
movb
mov
and
cmp
jge
mov
mov
lea
add
mov
mov
sub
mov
mov
and
not
mov
jmp
mov
and
not
mov
mov
sub
mov
mov
sub
mov
and
sub
mov
mov
mov
lea
add
mov
mov
add
mov
mov
jmp
mov
sub
xor
mov
sub
mov
mov
imul
mov
sub
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
push
push
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
and
mov
lea
mov
cmpl
jne
jmp
mov
xor
mov
div
cmp
jbe
mov
mov
lea
add
mov
mov
cmp
jne
jmp
mov
imul
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
lea
mov
push
push
mov
push
mov
push
call
add
xor
mov
mov
lea
mov
jmp
mov
xor
mov
div
cmp
jbe
mov
mov
lea
add
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
lea
mov
push
push
mov
push
mov
push
call
add
mov
imul
mov
sub
mov
jmp
mov
sub
sub
mov
mov
mov
lea
cmp
jb
mov
imul
mov
sub
mov
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movw
mov
imul
mov
sub
mov
mov
mov
lea
cmp
jb
mov
imul
mov
sub
mov
push
call
add
mov
mov
mov
mov
mov
mov
imul
mov
sub
mov
mov
and
push
mov
push
call
add
mov
mov
sub
mov
and
sub
mov
mov
and
mov
lea
cmp
jne
mov
and
mov
lea
mov
mov
mov
mov
push
call
add
mov
add
xor
mov
add
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
pop
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
cmp
jne
orl
mov
mov
pop
pop
pop
leave
ret
mov
cmpw
jne
add
mov
mov
cmp
je
cmp
jne
cmpw
jne
add
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpw
jbe
add
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
int3
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jo
add
dec
loopne
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
add
inc
filds
add
add
loopne
add
filds
add
filds
add
filds
add
loopne
add
loopne
add
loopne
add
add
add
add
loop
add
add
add
loop
add
add
add
push
loop
add
add
xor
add
and
add
push
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
add
dec
loope
add
add
pop
loope
add
add
add
add
and
add
loope
add
loope
add
add
add
add
or
add
adc
add
xorb
adcb
add
push
add
addb
add
mul
add
or
add
and
add
add
add
mov
add
jle
add
data16
add
loopne
add
ret
add
add
add
add
add
add
add
add
add
and
adc
je
dec
jge
mov
push
mov
sbb
sbb
sbbl
inc
xor
ljmp
lods
cmp
adc
ja
sbb
mov
adc
jle
push
lds
fistl
out
cwtl
mov
sti
sbb
pop
into
push
idivb
push
sbb
mov
aam
adc
enter
out
es
bound
jmp
sbb
mov
movsb
mov
cs
dec
nop
sub
bound
lods
sub
lcall
into
sub
add
sti
jb
vpunpcklqdq
sub
jae
imul
movsb
sbb
inc
jnp
aas
cmp
cs
jmp
xchg
jns
jg
jmp
es
sub
pop
call
dec
bound
and
das
roll
mov
call
xchg
cli
dec
push
clc
pop
add
lds
and
std
jle
filds
cmc
pop
scas
scas
xchg
lcall
loopne
and
jmp
in
push
je
fcmovu
sub
sbb
add
dec
enter
fmuls
bound
sbb
imul
out
into
test
scas
mov
fstps
subl
sub
xor
ja
out
pop
add
push
movsl
jle
mov
inc
addr16
and
sbb
dec
stos
xlat
lcall
int
xor
or
or
fnstsw
lock
mov
outsb
or
xchg
xor
data16
xchg
and
test
xor
and
inc
push
mov
cs
sarb
sbb
lahf
mov
jmp
and
loope
stc
mov
loope
ja
push
mov
fsts
fstl
mov
mov
pop
add
pop
inc
icebp
sub
subb
rcl
out
lods
jne
xor
pop
insb
shrb
xor
xchg
bnd
mov
jae
into
aad
es
mov
or
and
nop
shrw
or
mov
repz
inc
arpl
mov
mov
ret
mov
xchg
inc
lret
pop
icebp
fisttps
nop
fadds
push
stc
pop
rcr
dec
jo
aam
hlt
fmulp
jmp
lods
xor
pop
push
aaa
fchs
popf
out
adc
fsubs
and
mov
stos
pop
sbb
hlt
sub
mov
adc
test
es
jg
loope
add
push
hlt
fisubl
insl
jnp
loopne
jl
xlat
push
dec
jbe
sbb
pusha
dec
mov
out
aam
fstl
or
pshufw
pop
mov
in
jno
xabort
aam
stos
pop
loopne
scas
lret
jne
sbb
stc
insl
inc
dec
sbb
push
jge
fmul
and
cld
or
mov
hlt
lcall
xchg
divb
xchg
lret
fcmovu
sahf
dec
jbe
test
jmp
mov
inc
jle
push
in
jo
shll
adc
xor
out
fisubl
cmp
in
stos
ret
inc
das
mov
cmp
push
test
jg
fimuls
outsb
jmp
mov
sar
leave
fwait
test
add
stc
pop
bound
mov
mov
addb
fldcw
out
es
rolb
sub
pop
mov
push
mov
cwtl
setl
cmp
and
minps
sub
pusha
arpl
lods
out
xor
cmp
xor
call
rolb
fsubrl
outsl
mov
aaa
jl
push
ret
inc
pop
jb
aad
push
or
hlt
jle
mov
or
cmc
shrl
xchg
lods
test
mov
adc
lds
data16
insb
inc
dec
push
xchg
ss
adcb
clc
fwait
xchg
pushf
shll
aad
xor
push
bound
rcll
and
outsl
push
popf
pop
adc
addb
jp
enter
xor
mov
dec
and
add
insb
cmpsl
cmpsb
stos
in
notl
sti
xor
ja
into
and
aas
leave
jp
xorl
inc
jle
inc
add
and
call
ret
fnstsw
mov
mov
adc
xor
stos
inc
sbbl
jmp
fnstcw
in
jmp
test
arpl
jecxz
pop
mov
nop
mov
out
nop
shl
pop
cltd
loope
cmpsl
adc
insb
xchg
pop
push
xchg
js
cmpsl
add
pop
int
push
je
xchg
add
jb
das
in
xchg
ljmp
pop
andl
outsl
sbbl
cmpsb
scas
gs
lea
xor
xor
and
jmp
repz
jns
nop
sub
mov
xchg
xlat
imul
in
mov
daa
add
fs
inc
pop
sub
in
ret
test
hlt
add
mov
mov
addb
fisubrl
loope
out
xchg
add
push
add
and
mov
mov
push
cmpsb
aad
jecxz
mov
jb
mov
sub
push
mov
mov
out
hlt
popa
jo
jg
jmp
fsubrl
sbb
pop
out
jmp
aad
roll
dec
xor
test
aad
addb
fsubr
adc
jmp
xor
jp
inc
mov
jle
gs
adc
push
mov
cmp
ret
outsl
add
push
in
push
cmp
push
dec
sti
pushf
jns
xlat
bound
enter
push
stc
out
add
insb
jno
push
add
stos
mov
into
push
andl
outsl
int3
shrl
jnp
test
mov
jo
push
repz
lods
sub
bound
mov
sub
out
dec
test
jno
add
lock
mov
loopne
les
mov
pop
sbb
cmp
adc
jb
pop
cmp
pop
sbb
dec
cs
xchg
adc
mov
lods
push
in
xor
xchg
xor
aam
daa
ds
cmp
loopne
jg
pop
and
aaa
jno
out
pop
cmc
dec
xchg
icebp
mov
lods
gs
dec
dec
mov
jl
hlt
jno
imull
ljmp
ret
test
add
fmull
subb
loop
mov
pop
xchg
ds
mov
mov
push
push
cmp
mov
mov
pop
xor
imul
sbb
cmpsl
imulb
das
lea
inc
push
cmp
xchg
jl
pop
subl
jns
xchg
aam
mov
loop
and
es
sbb
add
es
jmp
cltd
iret
mov
test
sbb
jmp
jae
push
cmp
shl
or
sub
es
push
stos
sbb
inc
fs
js
pushf
into
sub
fildl
jecxz
aam
xor
mov
jne
lcall
xchg
fwait
xchg
mov
lea
sbb
lods
push
lods
jbe
pop
cmp
lds
ret
mov
popa
adc
jns
cmpsl
mov
lret
leave
sub
pop
jo
jge
ds
iret
or
hlt
aaa
shll
cmpsl
dec
ljmp
adc
sbb
xchg
push
push
add
imul
adc
fmul
rorl
xchg
divb
test
cmpsb
rcll
int
sar
push
add
repz
bound
clc
sarb
imul
sub
lods
cmp
cmpsl
add
fbstp
lret
cmpb
cli
pop
cmc
roll
test
addl
mov
test
call
xor
imul
out
inc
jmp
sarl
out
loop
scas
mov
aas
adc
mov
stos
push
mov
mov
mov
in
adc
cmp
js
sub
inc
push
cmp
xor
push
mov
icebp
adcl
lahf
movsb
test
mov
dec
jg
and
inc
sub
cmp
adc
stc
scas
sub
jge
scas
lds
adcb
dec
sbb
fwait
pop
add
jg
mov
lret
adc
outsl
xor
cs
outsl
in
popf
jp
loopne
pop
pop
imul
stc
seto
stos
cmpsb
aam
and
dec
fldt
xor
sub
iret
cltd
bound
test
in
addr16
in
mov
je
in
mov
or
es
and
mull
cmp
inc
and
hlt
pop
ret
pop
jae
push
icebp
push
hlt
mov
fcoms
lods
xchg
fsubl
inc
add
insl
inc
insl
outsl
fstpl
scas
mov
mov
mov
call
xchg
push
cmp
mov
test
push
push
push
xchg
es
sbb
lods
add
ss
popa
stos
repz
mov
ss
sub
loop
inc
int3
mov
jl
jno
call
sbb
inc
popa
adc
movsb
outsb
nop
jge,pn
or
nop
popf
imul
pusha
inc
fstl
sbb
mov
xchg
lds
imul
ja
mov
add
xchg
es
leave
jns
imul
push
add
or
jmp
mov
fsubrs
fs
push
xchg
xchg
testl
push
pop
xchg
loope
adc
mov
cmpsl
cmp
imul
mov
adc
cmp
in
sub
and
pop
adc
in
mov
push
pop
add
lcall
in
mov
pop
mov
lock
or
jl
add
dec
fs
imul
inc
cmc
cli
inc
in
clc
popa
jbe
jmp
pop
outsb
mov
sbb
cmpsb
push
idivl
push
arpl
mov
xchg
scas
das
out
sti
cmp
xchg
inc
sub
rclb
inc
loop
enter
xlat
inc
std
ds
mov
fnstsw
cmp
add
adc
sbb
pop
ja
cmpsl
pop
sahf
inc
add
clc
jle
in
cmpsl
and
jns
sub
call
inc
inc
int
sub
xchg
addb
rolb
lds
out
push
mov
lods
jg
out
dec
test
stos
pop
sarb
fisttpl
push
sub
sbb
arpl
sahf
cwtl
lahf
sub
push
rorl
rol
pop
sub
or
and
mov
movsb
or
fdivp
dec
pop
or
xchg
test
daa
leave
int3
mov
push
ds
xor
pop
mov
add
scas
ljmp
jecxz
mov
add
data16
mov
pop
mulps
push
jge
mulb
enter
sub
cli
jg
fistps
xchg
push
adc
and
popf
mov
adc
out
cli
mov
les
int
push
and
pop
cmp
mov
sub
or
jbe
pop
fisubl
lcall
xchg
sbb
cwtl
jo
test
sbb
imul
mov
div
push
icebp
in
sbb
add
mov
cmp
insb
adc
pop
jg
dec
fs
pop
mov
test
std
xor
sbb
xor
pushl
and
cmp
pop
pushf
popf
jno
rol
jb
sahf
add
loopne
outsl
mov
push
loop
iret
andl
inc
sbb
cli
cltd
xchg
fimuls
mov
xchg
pop
cmp
sbb
add
in
mov
xor
mov
cwtl
jp
div
mov
fnstcw
rol
hlt
xchg
sub
xchg
in
mov
fisubs
xor
adc
xchg
negb
js
mov
out
xchg
sbb
push
addr16
out
cli
jno
lahf
pop
sti
or
mov
sub
pusha
xchg
cmp
push
insl
fisubl
pop
mov
mov
jne
dec
fmulp
push
xorl
sbbl
mov
xor
jg
addr16
cmpsl
mov
fsubrs
mov
movsb
scas
or
push
add
loope
and
lods
test
test
jmp
aaa
orb
jp
and
jmp
fiaddl
dec
bound
jne
xor
jecxz
xor
push
mov
repz
xor
pop
cwtl
repnz
addr16
pop
mov
pushf
jle
cmp
jbe
mov
add
out
jge
sarb
rcrl
xchg
xchg
push
aas
or
loopne
js
aas
sbb
mov
push
out
aas
pop
jno
mov
outsb
js
or
and
mov
mov
enter
lods
xlat
sbb
scas
imul
ljmp
mov
mov
and
pop
and
cmp
lods
in
and
mov
and
cmpsb
xchg
into
dec
jge
loope
inc
dec
pushf
mov
sbb
sbb
cwtl
push
pop
enter
push
sarl
lods
addr16
es
mov
and
in
popa
add
mov
sbbb
jae
jno
cld
inc
cmp
roll
pusha
ret
cmpb
and
iret
xchg
sbb
xchg
out
xor
scas
data16
clc
or
aaa
dec
jnp
and
call
sub
push
inc
xchg
mov
dec
or
mov
enter
cmpsl
ljmp
sbb
and
push
or
dec
sbb
sahf
neg
adc
pandn
or
pop
ds
cmpsb
je
sbbl
cmp
xchg
cmp
scas
add
xlat
xchg
xchg
dec
push
xor
out
push
clc
push
ja
jmp
sbb
push
clc
stc
jne
or
lock
mov
sbb
mov
sbb
mov
inc
pop
pop
push
mov
ret
jl
adc
mov
mov
addr16
jbe
jl
pop
jno
out
pop
jnp
jns
push
out
fimull
xchg
pop
jno
rorl
sahf
mov
push
stos
es
inc
outsb
movsl
xchg
and
popa
mov
aam
das
sub
pop
add
xchg
cmp
cmp
cmpsb
jle
xor
push
stc
cmpl
sbb
out
int
push
jae
jmp
mov
sub
in
pop
or
inc
lods
xor
repz
mov
pop
push
jl
adc
inc
imul
les
sarb
xchg
xchg
mov
add
xchg
pop
adc
fwait
sbb
pusha
ds
imul
lea
sbbb
insl
mov
push
pop
inc
inc
inc
xchg
inc
pop
leave
dec
fsubrs
pop
mov
bound
aaa
loope
cmpsb
push
shll
test
jmp
xchg
push
and
jnp
sub
or
xor
adc
xchg
adc
sub
push
xchg
pop
testl
dec
xor
ret
add
jo
out
in
test
mov
pushf
lcall
xchg
cmp
adc
into
fs
sub
outsb
xlat
mov
pop
jno
adc
gs
inc
clc
lock
add
add
add
add
add
add
add
cmp
sar
jno
xor
xor
jmp
pop
lock
inc
adc
mov
xchg
jns
dec
pop
mov
xchg
popl
cmp
sbb
lret
shll
out
jns
sbb
hlt
cmp
int3
jl
outsl
out
dec
sbb
sbb
push
adc
mov
arpl
sar
data16
ret
jl
arpl
fstpt
shll
cmpsl
sub
outsb
test
fcomps
les
outsl
movsl
iret
xchg
enter
pop
pop
xchg
cltd
nop
ror
sbb
cmp
mov
in
dec
mov
int3
add
add
add
std
mov
in
test
stc
aas
sbb
push
add
mov
popf
adc
jmp
cltd
sahf
jge
addr16
lds
arpl
xor
lret
pop
pusha
aam
ss
cmp
dec
lret
stos
xor
dec
es
aas
sti
repnz
xor
xchg
rcll
add
add
pop
imul
pop
push
jg
cmpsl
insl
int
repnz
dec
aad
cmp
sbb
cmp
test
push
rolb
sahf
jecxz
ljmp
xor
in
xchg
adc
xorl
call
add
sbb
mov
pop
push
lea
and
loope
jge
or
fwait
or
dec
inc
pop
lcall
adc
aam
js
popa
test
outsb
xor
or
dec
jae
stos
addr16
adc
pop
nop
add
add
dec
push
or
aad
jb
lret
sti
push
and
stos
stos
lods
push
add
xor
jnp
sbb
inc
jns
cmp
mov
xorl
hlt
lret
mov
rcl
addr16
test
and
adc
shrl
loopne
cld
or
sub
or
jl
in
mov
rorb
xchg
pushf
xchg
mov
test
roll
leave
cmc
adc
cmc
cmpsl
mov
cmp
outsb
aas
xor
adc
add
add
add
add
add
and
add
cmp
gs
adc
pushf
arpl
adcb
sti
lahf
sbbl
popf
xlat
sbb
adc
xor
add
jle
out
adc
pop
sub
sbb
or
cmp
jnp
mov
sbb
push
cmp
xor
pop
into
sbb
mov
je
stos
aas
fcoml
scas
lcall
adc
ja
inc
rdmsr
mov
jo
lcall
cmpb
call
sbbl
jbe
cmp
shll
in
lcall
imul
add
add
add
mov
or
dec
pop
jo
leave
aas
in
inc
sub
mov
scas
pop
out
lahf
cmpsb
sbb
lahf
fmulp
call
jge
jmp
pop
push
cld
divb
sbbl
testb
sbb
leave
pop
subl
jge
scas
insb
mov
mov
mov
in
sub
scas
icebp
test
xchg
xor
jp
and
fs
mov
sub
popl
mov
xor
js
xchg
sbb
fwait
ja
push
ds
mov
mov
xchg
fldcw
and
es
pop
aas
dec
jmp
call
stos
call
negl
ret
or
mov
mov
nop
add
add
push
mov
sbb
jle
enter
push
inc
mov
xor
push
jae
sub
push
dec
xchg
lods
mov
push
push
and
adc
repz
scas
pop
xor
icebp
cmpsl
pop
fsub
add
inc
lahf
loopne
mulb
shr
imul
cmc
and
mov
insb
popl
adc
ss
dec
cld
add
push
sarl
inc
mov
stc
push
mov
aas
fistpll
add
aad
stc
ja
cmp
cmp
outsl
movsl
aaa
in
out
jmp
fistpll
lahf
ret
loop
pop
sub
in
xor
add
add
add
cmpsb
dec
cmp
pop
and
std
rorl
dec
loope
sbb
mov
into
jmp
cmpsl
ja
lret
adc
fdivl
arpl
mov
cmp
paddusw
jae
outsl
repz
xchg
in
ret
sbb
pop
sub
xor
ja
scas
mov
icebp
icebp
mov
out
adc
lods
stc
xchg
mov
xor
dec
les
imul
nop
push
add
imul
inc
fisttpll
popa
int3
and
mov
mov
add
mov
pop
loope
pop
jmp
cmp
add
add
add
test
xor
adc
pop
cmpb
std
cli
pusha
sbb
jl
and
jne
add
mov
test
jo
pop
add
add
add
add
ljmp
xchg
push
outsb
add
adc
int
adc
jle
into
xor
stc
cld
cmp
call
jg
insl
xor
repz
lcall
lret
das
fs
add
push
push
mov
vmovlpd
fmull
inc
rol
es
out
add
add
mov
orl
stos
ret
jne
stc
mov
popf
xchg
dec
sub
pop
pusha
les
jecxz
mov
dec
aad
sbb
pop
cmc
cmpsb
pop
mov
dec
adc
lcall
cwtl
outsb
fimuls
in
pop
mov
loope
out
lret
mov
shrb
imul
jo
or
nop
push
mov
stos
sahf
push
aas
es
inc
adc
and
mov
sub
mov
out
mov
sbb
ficompl
add
xchg
psubw
add
push
rclb
pop
arpl
mov
mov
sub
push
xor
adc
fbld
andl
xor
jg
push
mov
scas
dec
push
xor
add
add
add
add
add
add
call
outsb
mov
fbld
mov
sti
scas
out
jnp
in
xchg
xor
ja
and
aad
shlb
enter
adc
push
aas
sbb
int3
add
cmp
out
fs
nop
mov
or
add
sub
loopne
scas
lods
push
repz
shrb
test
mov
cmp
int
hlt
cmp
cld
pop
xchg
aaa
push
dec
dec
subl
test
jnp
mov
and
lds
movsl
repz
arpl
icebp
das
mov
mov
mov
nop
mov
and
or
jb
cmp
icebp
lahf
cltd
sbb
fidivl
mov
scas
leave
lods
repnz
movsl
sbb
test
lea
scas
dec
movsl
inc
hlt
xor
xor
and
and
and
and
and
and
insl
jne
lods
xor
loop
add
push
je
jge
ds
mov
imul
cmp
mov
iret
outsb
mov
sbb
outsb
push
jmp
punpckhbw
pop
fwait
xchg
push
push
push
xor
pop
xor
mov
fidivs
inc
sar
cmp
xchg
int
xorps
gs
pop
adc
adc
push
sbb
cmc
xchg
dec
addl
cmc
popa
stos
add
add
add
add
add
fs
adcb
iret
daa
xlat
fildll
test
adc
les
aad
bound
int3
add
add
add
ljmp
and
sbb
cmc
sub
adc
test
stc
fwait
mov
adcb
scas
mov
add
imulb
push
data16
sbb
pop
clc
push
xor
jns
sbb
outsb
jg
xchg
je
mov
outsb
add
push
hlt
fistpl
or
add
add
loopne
fsubr
dec
push
and
scas
cli
jae
pop
outsl
jnp
es
addb
movsl
mov
cmp
inc
fs
lods
aas
push
enter
aaa
int
fdivr
xor
and
fistpl
leave
add
add
add
add
add
add
cld
cmp
add
es
std
test
fwait
sti
repz
sbb
stc
and
mov
loopne
jmp
scas
mov
sbb
sub
xchg
fs
cmp
lods
shrb
or
xchg
gs
mov
fimull
outsl
cltd
clc
sbb
in
xchg
repnz
dec
std
lods
movsl
jge
dec
dec
test
lahf
bnd
out
mov
icebp
icebp
jae
mov
jge
mov
mov
aaa
jae
popa
mov
out
gs
out
test
xchg
fisubrl
jno
psubd
cmp
add
and
mov
imul
mov
sarb
lret
loope
sbb
das
das
or
mov
repnz
enter
xor
sbb
sbb
xlat
xchg
cmpsb
mov
fisubrs
rcll
cmp
dec
or
pop
in
pop
aad
mov
fisttps
gs
stc
jns
popf
jo
in
out
out
popa
xorl
or
aaa
cmc
leave
fdivrs
jns
jg
xor
lahf
pop
stos
push
scas
sub
cmpl
or
je
int3
add
and
lret
sub
dec
ljmp
mov
inc
hlt
aad
cmp
push
out
ficoms
fwait
cmc
cli
adc
out
fidivrs
add
add
add
add
add
pop
push
add
popf
cmp
mov
dec
sub
add
add
add
add
add
add
add
out
mov
loop
int
pop
add
rcrl
icebp
dec
in
mov
fsubp
in
or
mov
ret
andl
in
xchg
cli
insb
mov
or
pop
fsubs
cmp
push
ficomps
mov
adc
or
jb
je
ffree
fistps
sbb
testl
jl
movsl
add
xchg
xchg
ja
js
inc
mov
out
mov
fisubrl
sahf
push
repz
xchg
xchg
ret
cltd
out
daa
pusha
inc
inc
call
add
add
cltd
test
popf
mov
mov
jg
mov
add
add
jnp
xchg
and
out
repnz
jmp
xor
es
sub
mov
pop
cmp
mov
jmp
jnp
push
out
cmp
movl
pop
gs
aam
add
add
add
add
add
add
add
and
fcomi
outsl
shll
js
cmp
repnz
add
jno
add
sub
sti
mov
push
inc
xchg
dec
or
insb
mov
push
arpl
inc
or
movsb
inc
insl
lds
insl
lock
xchg
flds
adc
cmp
rcrb
xchg
push
dec
pusha
mov
sbb
dec
loopne
inc
pop
xchg
hlt
cmp
and
sahf
cmp
int3
pop
and
xor
cmp
dec
jecxz
add
mov
imul
jge
aam
mov
mov
int3
add
add
add
add
int
out
lret
cli
push
inc
lods
fisubs
xor
jg
rclb
mov
shl
jge
inc
and
sbb
and
dec
lahf
sbb
les
xchg
hlt
inc
push
cmp
scas
mov
sbb
lock
aas
pop
sub
xchg
mov
pusha
loopne
mov
add
add
cmp
mov
adc
dec
and
mov
mov
mov
rcrb
testb
mov
adc
mov
fiaddl
shlb
push
insl
pop
cmp
int3
add
add
add
add
jmp
je
mov
andb
cmp
and
jnp
mov
xor
pop
imul
mov
dec
mov
stc
lods
mov
jmp
add
pop
push
cmp
or
lret
fstl
and
leave
and
and
nop
add
add
and
pop
sub
mov
mov
imul
mov
movsl
div
ds
add
add
add
pop
xor
movl
lcall
in
cmp
and
inc
cs
sub
scas
xchg
lock
add
mov
movsb
push
pop
or
sub
adcb
pop
cwtl
jns
cmp
adcl
insl
pop
ja
mov
mov
sub
jge
push
packssdw
out
xor
cmp
xchg
icebp
out
rcrb
ffreep
xchg
mov
mov
add
add
add
add
add
jb
test
mov
std
int
or
pushf
lods
int
je
or
shlb
mov
xlat
or
jle
hlt
cmpsl
aad
in
cmp
popf
outsb
cld
jge
mov
jo
test
mulb
mov
ret
pop
pusha
mov
and
shlb
int3
add
mov
fcoms
paddusw
jns
mov
mov
or
shrl
repz
lret
aaa
mov
xlat
je
ja
jnp
notl
xor
loope
mov
fisubl
sahf
das
inc
stos
sbb
sti
cmp
outsb
ret
sub
mov
ret
fucom
jmp
stos
adc
and
and
mov
jae
xor
adc
mov
xor
mov
or
or
gs
push
jo
jno
pusha
int
mov
push
in
dec
xor
and
sbb
aam
mov
adc
les
lods
sarl
add
mov
test
and
and
and
ret
dec
stc
das
leave
adc
xchg
aam
xchg
cwtl
inc
sbb
mov
mov
jmp
into
test
js
inc
or
sub
into
or
cli
pop
sar
jnp
pop
adc
sbb
pop
inc
lea
or
cli
and
xchg
dec
xor
js
push
sbb
sbb
mov
and
sub
xchg
lock
mov
mov
sub
mov
mov
jp
rcr
mov
sarb
mov
arpl
cmp
cmpsl
mov
inc
dec
clc
sbb
fisttpl
cmp
imul
lock
jp
add
call
add
add
add
add
add
jecxz
loope
fsubr
in
mov
popf
icebp
lcall
xchg
fistl
jmp
sub
pop
sahf
out
sub
jnp
mov
jae
jne
ljmp
imul
mov
fmulp
add
pop
jl
jno
inc
or
xchg
rorl
jo
or
jo
test
push
je
mov
cmpsl
adc
mov
adc
inc
out
in
int3
adc
mov
jo
sbb
and
jbe
dec
mov
or
lret
mov
cmp
mov
jmp
cli
sub
int3
add
add
add
add
xchg
int
mov
bound
jno
outsb
push
pop
jl
pop
dec
push
xchg
xchg
int3
push
lahf
hlt
xchg
inc
dec
into
inc
add
add
add
add
add
add
add
ss
and
not
icebp
stc
mov
mov
in
xlat
in
gs
std
lcall
sbb
cltd
sbb
adc
and
sbb
fstps
and
and
and
and
and
and
sahf
ret
pop
out
popa
mov
test
stos
cmpsl
in
inc
pop
push
inc
cli
jmp
mov
dec
fcoms
dec
jmp
push
imul
jp
lret
or
dec
mov
dec
stos
mov
lea
jbe
cs
lcall
mov
dec
into
mov
or
add
add
add
cmpsl
cmp
and
pop
cwtl
push
inc
xor
push
xor
fistps
out
repz
pop
pop
jg
cwtl
jo
mov
pushf
or
push
hlt
adc
cltd
inc
call
fsubl
leave
mov
pusha
sbb
push
outsl
fldl
cmpsl
adc
sub
lods
or
out
sbb
fmull
sbb
cmpsl
sbb
dec
and
mov
lcall
icebp
cwtl
dec
dec
push
mov
shll
pop
mov
enter
lods
pushf
bound
fsubrl
stos
add
out
adc
mov
incl
incl
incl
incl
imul
or
pop
stos
jle
mov
jne
adc
jle
adc
and
and
and
and
and
lcall
jo
lea
loop
mov
mov
aaa
dec
test
fdivs
add
add
add
add
add
add
add
fwait
mov
mov
push
cmc
sub
jae
sub
push
je
sub
jge
int3
xor
lahf
call
or
xor
cld
push
cmp
mov
xor
outsb
push
out
lods
add
decl
dec
imul
repnz
jb
cmpsl
cld
test
pop
pop
lods
add
add
daa
inc
xor
fdivl
push
je
pusha
mov
xor
dec
test
xchg
push
sub
scas
or
cmc
adc
fimull
lahf
in
lods
das
jae
sbb
shl
pop
jo
or
cmc
cmp
push
aad
lock
dec
imul
add
add
call
push
arpl
shll
mov
test
xchg
dec
and
pop
pusha
sub
nop
in
mov
js
outsl
push
in
cs
or
push
and
xchg
call
outsb
movsl
pop
xchg
negb
fsts
jl
adc
and
test
adc
cld
cmc
fiadds
stc
std
jp
nop
add
outsl
fisubl
or
aaa
or
xor
sub
arpl
clc
sbb
inc
test
lea
add
lea
rorl
sub
ss
jo
mov
inc
rol
xor
outsl
sbb
test
inc
push
fmuls
filds
inc
cmpsl
lret
pop
daa
fldt
and
pop
gs
pop
in
daa
es
jmp
enter
inc
add
movsb
xor
cmp
inc
xchg
ss
sub
and
add
add
add
add
add
cmc
aas
icebp
repnz
push
ss
lods
jne
lcall
ljmp
lea
pop
push
mov
pusha
or
testb
xlat
sub
aam
or
cmp
int
adc
xchg
sub
sub
test
shr
hlt
push
stc
lcall
inc
int
add
add
add
add
add
add
add
cli
insb
push
jae
and
jns
in
or
xchg
cmpsb
add
stos
mov
dec
push
das
stc
mov
hlt
sbb
test
rcrl
mov
test
and
push
cli
icebp
push
icebp
adc
mov
xchg
jo
fdiv
aaa
loope
sbb
xchg
pop
sub
test
xchg
in
add
add
add
add
add
call
rcl
cmpsl
ds
add
nop
adc
inc
xor
or
xchg
jmp
repnz
jmp
test
mov
in
mov
add
add
add
add
add
add
add
std
jne
or
sbb
mov
je
popf
mov
pop
jecxz
mov
popf
adc
push
mov
outsl
stc
out
cmpsb
push
mov
das
scas
inc
pop
push
rclb
xchg
jp
test
jnp
cltd
or
loopne
dec
outsb
test
aam
sbb
shrl
jge
jecxz
adc
push
sbb
icebp
mov
fiadds
int3
add
add
add
add
add
add
fstps
mov
sbb
cld
clc
or
call
and
add
xor
insl
ja
cmp
popa
outsb
out
add
add
dec
mov
mov
lret
and
mov
in
or
loope
arpl
mov
test
xor
outsb
xlat
clc
scas
outsb
jg
movsb
ret
and
test
andl
jbe
xchg
stos
inc
jb
pop
xlat
in
mov
aad
je
sub
repnz
mov
dec
jle
das
and
stos
call
fstl
inc
pushw
add
mov
pop
mov
lcallw
jecxz
icebp
stos
ret
jecxz
in
es
push
jnp
fsubl
cmp
js
mov
adc
pop
lea
add
lcall
pop
fstpt
popa
jo
dec
iret
mov
lahf
jne
lret
cmpsb
out
jmp
daa
xor
gs
rcr
cmpsl
inc
jmp
and
and
and
mov
and
stos
cmpsb
frstor
into
fiadds
pop
ret
lods
or
xor
out
cmp
pop
mov
lcall
cmp
jp
lcall
mov
mov
hlt
or
idivb
imul
stos
subl
nop
cwtl
daa
lret
fstpt
enter
imul
dec
mov
cmp
aaa
or
xchg
sbb
cmp
add
loope
icebp
ss
fisubrl
mov
ljmp
dec
lds
push
js
loopne
es
dec
lcall
mov
scas
aad
xor
aam
xchg
les
mov
inc
sbb
jne
xor
xor
or
mov
inc
addr16
aam
pushf
jae
cmp
insl
mov
jno
jne
divb
add
add
add
add
add
mov
or
mov
cmpsl
sbb
sti
mov
cmp
std
sti
push
jo
aaa
daa
in
mov
shll
lock
adc
push
sub
adc
js
sbb
mov
and
aaa
pop
pop
inc
cmpsb
inc
call
lea
fadds
jp
mov
test
insb
push
hlt
lret
notb
lds
xchg
nop
cld
lret
pop
jb
push
loope
sbb
movsb
incb
in
jmp
and
and
and
and
or
les
mov
mov
pop
jmp
mov
adc
gs
popf
shl
or
push
hlt
adc
jno
lods
test
xchg
ljmp
mov
mov
sbb
add
dec
ljmp
ret
inc
mov
incl
inc
sbb
mov
cld
fstl
adc
xchg
ret
je
fs
nop
in
lea
or
add
add
add
add
add
add
add
inc
loope
push
mov
dec
dec
xchg
mov
das
lods
mov
hlt
sub
and
and
and
and
jmp
shlb
mov
cmp
addl
or
or
insb
add
je
cmp
jnp
push
adc
inc
push
sbb
mov
jmp
ja
outsl
jmp
lock
gs
mov
pop
dec
fdivrs
mov
imul
mov
icebp
cmpsl
sub
mov
insl
xchg
scas
cwtl
dec
mov
cmp
cmp
xor
jg
jg
test
add
xlat
stc
sbb
push
bnd
movsb
jmp
cmp
push
push
push
pop
test
out
jnp
movsb
jne
icebp
in
les
in
xor
imul
add
add
mov
add
std
out
scas
leave
gs
in
jae
ds
subb
ret
and
mov
adc
fists
adc
lcall
ss
adc
lock
fwait
das
push
pusha
out
pop
inc
das
jo
std
ss
repnz
sahf
xchg
std
add
push
dec
sub
in
pushf
notb
dec
xlat
and
push
int3
dec
into
aas
fimull
hlt
repnz
mov
mov
lock
in
nop
push
push
push
lcall
leave
pop
xchg
add
add
add
dec
adc
xor
sbb
cmp
ja
push
gs
in
daa
aam
sbb
daa
pop
adc
and
fcmovnu
mov
andl
inc
bound
pop
dec
notb
mov
mov
xchg
or
xchg
jecxz
les
or
out
xchg
cmp
dec
mov
insb
in
sahf
ficoms
fimull
fdivl
cmp
ljmp
and
and
imul
ja
xlat
rcrl
inc
insb
mov
jmp
test
inc
popa
cwtl
lds
inc
fisubrs
mov
in
stos
dec
or
pop
ret
lea
aam
ret
jo
jge
or
sbb
sub
dec
cltd
inc
movsb
aaa
mov
mov
sbb
sbb
xchg
push
mov
or
xchg
clc
pop
leave
xchg
loope
addr16
fdivs
cli
push
int3
aam
fwait
add
add
add
add
add
add
addps
lcall
push
and
das
pop
xchg
push
push
leave
dec
clc
or
incl
fstpl
pop
in
out
dec
shr
xchg
mov
mov
sbb
das
inc
dec
jg
stos
nop
lock
xor
cli
fs
and
loope
inc
mov
dec
cmpsl
adc
stc
fiadds
add
shlb
mov
dec
popf
push
loopne
sbbb
ja
mov
in
fdivl
gs
in
mov
loop
pop
mov
mov
jnp
stos
or
mov
jb
pop
ja
push
pusha
push
dec
pop
mov
pop
cmc
or
xchg
rcrl
fstpt
les
lret
sbb
shlb
movsb
scas
inc
lea
cmc
or
pop
or
mov
pop
jb
dec
fistpll
stc
into
scas
mov
sbb
xor
popf
pop
or
sub
sbb
shll
ja
inc
sti
ja
leave
mov
sti
leave
push
iret
pop
mov
loopne
or
lret
pop
out
fsubrs
add
add
xchg
inc
cmp
insl
inc
movsl
jle
stos
outsb
or
pop
mov
sahf
push
pushf
lcall
incl
incl
incl
incl
incl
scas
inc
imul
outsl
jne
cmpsb
leave
pop
lds
adc
rorl
fcoml
hlt
jg
xchg
inc
mov
cmp
sbb
lcall
xchg
popa
cmp
int3
mov
mov
incl
incl
incl
jge
sbb
inc
sub
xchg
pusha
loopne
lret
pop
popf
xor
ret
push
sub
out
dec
sub
hlt
dec
movswl
sub
inc
std
out
dec
outsb
sbb
not
in
cmpl
sahf
addr16
inc
mov
adc
out
and
scas
dec
dec
cmpsb
cld
movsl
cmp
int3
xor
std
push
stc
and
xchg
daa
leave
or
out
jbe
cwtl
fucomi
lea
sub
iret
cmp
out
jl
xchg
icebp
icebp
fstl
incl
fwait
idivb
cmc
insl
sbb
aad
sahf
jns
sbb
jbe
inc
cltd
pusha
nop
add
out
xor
xchg
stc
ds
sub
sub
negb
rcrb
mov
push
pop
out
fwait
push
stc
xchg
in
mov
cmpsb
fildll
and
mov
inc
enter
movsb
mov
mov
inc
jae
cltd
mov
xorl
repnz
test
mov
cld
hlt
imul
mov
xchg
pop
add
jge
dec
and
fistps
mov
int3
add
add
add
add
add
adc
sub
les
daa
jl
int
hlt
rcrl
outsb
jns
inc
push
jl
mov
sbb
jb
cmp
mov
mov
push
mov
mov
jnp
mov
rorb
inc
ret
cmp
xchg
jne
mov
cwtl
xor
stos
stos
mov
xor
adc
or
sti
gs
pop
add
and
mov
insl
mov
xchg
sbb
clc
sti
mov
xor
push
ljmp
add
jg
fmulp
fisubrl
test
xchg
pop
xlat
xor
and
pusha
inc
adc
movsb
and
cmp
adc
mov
out
fistps
lret
dec
adc
sbbl
stc
adc
dec
or
into
push
pop
pop
les
lcall
jle
roll
aaa
lds
mov
pop
ffreep
add
mov
ds
mov
test
mov
add
add
add
add
add
push
mov
pusha
mov
les
add
or
popa
mov
movsl
shlb
and
pop
js
pop
sbb
leave
jl
add
fst
pop
cmp
sbb
sub
fidivs
pop
out
es
push
push
jg
mov
jge,pn
xorb
test
and
movsl
jl
cmp
jge
pop
pop
ret
dec
add
outsl
loop,pt
insl
and
push
push
xlat
cmp
out
enter
cmp
and
and
and
and
inc
ja
out
in
popf
jo
xchg
mov
sub
sbbb
push
orl
sbb
xorb
repz
add
mov
mov
add
add
add
add
add
inc
or
loope
mov
push
frstor
cmp
addr16
lret
add
xorl
aam
adc
sarb
stos
mov
mov
fstpl
ljmp
insl
ror
add
add
add
adc
xchg
lret
add
inc
iret
popl
mov
int3
mov
push
adc
mov
sub
fstpt
push
xor
jl
cmpsb
or
aam
insb
or
dec
inc
cmp
inc
xor
in
in
test
jmp
outsb
std
lock
sbb
jmp
add
add
mov
andl
iret
jl
cs
loop
insl
int3
fwait
mov
push
cwtl
xchg
adc
int
add
es
jl
push
cmp
sbb
mov
roll
adc
fwait
inc
addl
add
add
add
add
add
pop
fsubl
cmp
push
outsb
jl
sahf
cmp
sahf
es
mov
adc
stos
stc
sub
xor
or
cmpb
mov
mov
lods
std
cmpsb
andps
xor
adc
and
and
and
and
and
fs
xor
cmp
dec
or
nop
mov
pusha
sub
pop
mov
cmp
cmpb
js
gs
enter
or
jp
add
jno
mov
dec
jp
shll
pop
aam
pop
and
mov
push
out
repnz
mov
cltd
dec
sub
push
fisubrs
mov
jo
and
and
and
and
rorl
push
and
pusha
jp
rorl
mov
add
dec
add
ss
cli
inc
adc
mov
xchg
mov
jmp
push
inc
cmp
xchg
inc
int
pop
test
dec
mov
xor
sbbb
lods
loopne
jbe
pop
xor
jnp
int3
jno
testl
test
mov
iret
pop
sbb
jnp
or
mov
pop
mov
xchg
cmp
jne
rol
and
stos
lea
add
add
add
add
pop
loope
in
cwtl
arpl
pop
or
mov
insl
stos
std
fistl
arpl
and
nop
add
addr16
hlt
andl
adc
stos
nop
mov
hlt
pop
push
ret
mov
shll
cli
mov
inc
push
test
cmpsb
push
popa
sub
and
cli
lret
push
jge
jne
push
fmuls
mov
scas
cmp
popf
imul
add
add
add
add
add
fwait
mov
adc
pop
hlt
stc
ja
mov
int3
sub
pop
enter
sarb
sbb
out
data16
xor
jns
mov
add
add
add
and
js
je
jae
scas
and
cli
push
dec
add
cwtl
cmp
mov
xchg
fistps
popf
test
sub
push
subb
mov
or
add
xor
sub
out
jmp
ljmp
test
lret
adc
scas
dec
stc
add
inc
xchg
test
inc
mov
das
or
dec
pop
shrl
sbb
xor
je
push
adc
push
ret
adc
shlb
inc
pop
cmp
aas
cli
push
lret
not
lds
push
jo
hlt
imul
insl
iret
mov
ret
dec
sub
and
mov
add
add
add
add
push
push
fiadds
adc
dec
psubw
aaa
jb
nop
add
mov
rcrb
clc
out
enter
add
out
jo
mov
ret
add
adc
movsl
testb
pop
in
cmp
loop,pt
leave
test
shrl
push
loop
fnstcw
test
mov
loopne
cld
mov
popa
out
xchg
cmp
cmp
xor
cmpsb
push
push
inc
movl
sub
or
test
jno
xchg
das
mov
jne
cld
lret
in
js
movsl
push
ret
pop
bnd
xchg
mov
mov
incl
incl
incl
incl
incl
incl
call
jb
inc
stos
cmp
fsts
loop
movb
lahf
dec
jb
insb
scas
cmp
mov
xor
mov
mov
push
icebp
jmp
lods
divl
es
movsb
js
js
into
xor
mov
stos
sub
mov
out
incl
pushl
data16
push
popa
rorl
test
mov
or
and
cmp
mov
arpl
data16
mov
lret
andb
dec
mov
pusha
cmc
xchg
stos
inc
pop
not
xor
dec
cmp
xor
das
mov
lcall
stos
inc
sbb
mov
int3
add
add
add
cmp
arpl
or
mov
ljmp
jo
pop
fiadds
jbe
in
test
stos
dec
je
xchg
push
rcll
insl
sar
fs
cs
pusha
pop
xorb
insb
push
pop
jb
dec
mov
mov
cs
xor
repz
leave
in
fidivs
or
mov
mov
scas
aaa
mov
loopne
cs
push
mov
inc
ficompl
jmp
aam
std
test
insb
out
aaa
push
aad
cmc
inc
mov
sbb
mov
and
and
and
and
and
out
xchg
adcb
mov
push
test
add
add
add
add
add
add
add
lahf
sub
fcmovne
dec
aam
shrl
pop
icebp
shrb
outsb
sub
push
imul
sbb
std
mov
xchg
into
or
pop
jnp
xchg
mov
sub
leave
add
adc
imul
movsl
or
push
sub
leave
in
sbb
dec
push
push
pop
loopne
scas
mov
xchg
push
jb
push
popa
inc
es
cmp
and
sub
imul
lea
and
pop
mov
aaa
in
pop
add
add
popa
fcmovnb
push
minps
adc
scas
fs
mov
int3
add
add
out
or
outsl
incl
push
or
aaa
sub
mov
jecxz
pushf
nop
divb
mov
enter
mov
dec
add
cmp
mov
jae
dec
pop
mov
std
les
lock
cmp
inc
or
xchg
fs
mov
cld
dec
leave
loop
js
xchg
lret
fisttps
lock
and
lods
cmc
push
xor
incl
pop
mov
int3
in
inc
jl
inc
and
mov
jb
pop
inc
add
mov
test
sbb
popf
call
jle
scas
add
jle
jg
push
xor
in
lcall
cmc
ljmp
add
add
add
add
pusha
push
sbb
xchg
lods
pop
sub
pusha
mov
js
xor
sub
lahf
out
popf
rorb
mov
mov
jns
mov
pop
mov
push
mov
mov
mov
nop
sub
repnz
adc
add
add
add
add
add
add
push
das
test
fsubl
ljmp
add
sub
and
add
mov
imul
or
outsb
add
push
mov
adc
aaa
xlat
add
xchg
pusha
pop
xchg
xor
cmp
lahf
or
imul
mov
sbbl
repz
pop
ds
xor
in
loop
pop
cmp
stos
push
mov
cmp
add
add
ret
rcll
adc
int3
add
add
add
add
add
and
std
mov
mov
dec
and
cwtl
sub
xchg
test
movsb
hlt
add
ficomps
daa
mov
push
aam
loopne
mov
and
and
and
nop
and
cmp
mov
cmpsl
dec
pushf
outsb
or
mov
cld
ja
dec
test
icebp
clc
pushf
faddl
fdivrs
addr16
cmp
rcrb
dec
arpl
pusha
insl
xchg
xchg
add
lock
daa
pop
lret
add
xchg
xor
sahf
jmp
dec
jbe
sbb
dec
or
jbe
dec
ror
xlat
mov
scas
and
arpl
icebp
xor
loope
sbb
cmp
imul
iret
int
jge
fistps
mov
sub
out
sbb
mov
xor
adc
iret
cltd
jmp
lea
add
add
add
and
cld
push
cs
fcmovne
xchg
cmpsl
imul
or
ficoml
or
mov
stos
jl
mov
ficoml
scas
dec
cmc
push
dec
mov
mov
xor
cli
dec
pop
inc
xor
imul
dec
dec
xor
ficoms
test
push
or
int3
add
add
add
add
add
add
pop
test
xor
les
je
cmp
pop
inc
adc
fs
subb
cmpsl
push
xchg
xchg
dec
add
or
dec
mov
cmp
mov
inc
sub
test
mov
pushf
and
nop
notb
and
mov
lock
mov
jne
mov
lock
push
jne
add
add
add
add
add
xchg
jp
sub
fmulp
sahf
push
out
sbb
and
cltd
inc
sti
pop
mov
cld
xchg
xlat
mov
mov
pop
cld
inc
je
push
mov
pop
sbb
enter
adc
dec
cmp
repnz
push
cmpsl
lret
mov
mov
insl
cs
mov
push
jns
das
mov
mov
pop
add
mov
sbb
mov
test
pop
push
stos
pushf
push
scas
jnp
xchg
les
out
or
mov
ds
add
add
add
add
xchg
and
fs
pop
fdivr
inc
xchg
rorb
stos
and
dec
outsl
add
add
add
in
out
inc
neg
popf
std
and
pop
loopne
int
jnp
loope
jo
ds
lahf
and
outsl
subb
sbb
pop
outsl
adc
aam
jp
sbb
fs
out
and
addr16
jge
movsb
sub
mov
hlt
mov
ret
sub
or
lahf
mov
ret
inc
pop
sub
aaa
jne
sbb
nop
add
test
in
cs
sbb
popa
daa
xchg
xor
insb
xor
int3
orb
in
sti
fs
lret
loope
mov
negl
sub
xchg
sti
loopne
pusha
mov
adc
xchg
loopne
dec
fistps
pusha
rcrl
in
lret
push
inc
loope
push
xchg
fs
nop
sub
test
and
daa
xchg
inc
push
pop
add
adc
push
cld
mov
movsb
mov
add
cmpsl
or
lret
jge
leave
push
push
movl
mov
pop
lret
dec
jecxz
nop
call
cmc
pop
lret
dec
lock
enter
sub
test
xor
dec
jge
push
gs
inc
mov
inc
dec
adcb
test
cld
cld
roll
into
jg
mov
lret
mov
subb
std
push
das
xlat
ljmp
mov
mov
mov
sahf
jmp
test
add
jl
stos
repnz
outsl
cmp
or
mov
inc
bound
inc
jmp
test
mov
dec
add
inc
mov
repz
mov
push
cwtl
out
movsl
packssdw
adc
sbb
push
test
or
call
inc
mov
cmp
insl
aaa
in
mov
sbb
lret
pop
stos
in
add
add
add
add
add
je
xchg
cmpsb
xchg
xor
dec
test
popf
data16
pop
shlb
enter
and
mov
test
out
jge
push
in
out
add
out
ss
jb
jno
stos
arpl
inc
sti
js
push
cld
inc
clc
and
aam
pop
cmp
iret
jae
sbb
out
jmp
xor
and
scas
cltd
jecxz
jns
insl
out
adc
add
add
add
add
add
leave
push
xor
and
mov
in
arpl
adc
lock
cmp
pushf
test
int3
in
and
aad
mov
xchg
mov
clc
cwtl
pop
sbb
gs
add
stc
cmp
and
and
and
fs
pop
fsubrs
ljmp
add
add
add
add
add
add
mov
push
out
mov
xchg
idivb
xlat
pusha
or
jmp
adc
sub
inc
repnz
push
lret
mov
inc
test
xchg
cmp
lret
in
repnz
fs
rcpps
jecxz
mov
das
aam
sti
push
es
shll
arpl
insb
inc
mov
test
mov
fs
jle
das
adc
test
std
bound
sub
dec
mov
rcrl
mov
sbb
add
cmp
daa
inc
cmp
adc
sahf
mov
mov
and
lock
add
add
fidivrs
outsl
pusha
mov
nop
cmp
xor
imul
add
filds
addr16
ja
stos
les
cwtl
pop
xor
dec
push
mov
iret
orb
xchg
mov
mov
jg
js
or
cmp
jae
bound
aaa
inc
fadd
mov
fwait
leave
pop
xchg
pusha
mov
mov
loope
pop
lods
fistl
cli
cmp
push
adc
dec
add
repz
jo
mov
xchg
inc
stc
dec
push
mov
lods
lahf
roll
and
xchg
out
ret
out
mov
sbb
mov
lods
lods
add
mov
jns
int3
add
add
add
add
add
push
xchg
testl
insb
fisttpl
imul
mov
sti
int
hlt
sub
fwait
jo
pusha
ret
pusha
or
xor
call
dec
adc
hlt
cmp
rorl
push
lock
cmp
adc
bound
xor
stos
mov
mov
test
xor
enter
lret
imul
in
lret
cs
aaa
mov
addb
or
cmpsl
cmpsb
loope
gs
aad
mov
fidivs
dec
aaa
and
and
xor
or
in
lret
or
or
push
add
xchg
in
pop
movsb
mov
fstpl
or
mov
rolb
mov
and
mov
pop
into
cs
or
test
stos
imul
ss
jmp
sahf
xchg
add
xchg
xchg
jae
lea
andb
jne
sub
das
mov
out
jecxz
aaa
nop
and
sub
push
inc
rcrb
sbb
add
pop
fisttpll
stc
ret
inc
adc
pop
or
adc
inc
aad
xor
and
and
and
and
and
shll
fadd
and
adc
add
adcl
push
xlat
stc
movsb
dec
inc
sub
js
popa
cltd
jb
movsb
hlt
inc
popl
lcall
mov
leave
rolb
add
enter
jns
cmp
aaa
xor
mov
dec
das
xchg
fadds
into
insb
sbb
pop
bound
pop
push
cmp
jg
filds
sbb
mov
cmp
outsl
inc
jae
pop
sbb
test
std
xchg
mov
cmp
mov
pop
mov
xor
jb
sti
notl
add
add
add
add
rorb
aad
and
xor
insb
test
rclb
xor
add
mov
popa
sbb
orb
testb
movsb
sbb
sbb
mov
mov
push
fidivl
jmp
mov
push
pop
sbb
mov
xlat
xrelease
shr
fwait
mov
inc
push
add
mov
mov
jle
loopne
mov
and
add
inc
dec
mov
out
sahf
in
push
enter
jns
mov
subb
int
jmp
xchg
test
jg
cmpsl
out
fcomps
sbb
ffree
data16
out
fisubrl
lea
adcl
mov
adc
and
and
and
and
and
out
cmp
test
jge
flds
push
mov
add
and
ss
lods
lcall
add
stos
out
sarl
pushf
pop
mov
sub
lret
push
jp
cs
sbb
adc
adc
and
add
add
add
add
add
add
testb
xorb
push
mov
push
jb
jne
mov
into
xor
pop
bnd
fs
int3
add
add
repnz
inc
or
inc
test
mov
mov
inc
pop
mov
out
mov
dec
push
hlt
pop
leave
ffreep
jle
shrl
sbb
pop
adc
ja
adc
mov
cmp
jp
and
imulb
xor
loopne
and
mov
mov
sub
jne
sub
or
out
ljmp
sbb
dec
fidivl
inc
dec
lahf
lea
sbb
shll
cmp
shrb
inc
mov
aaa
xchg
leave
cmp
ja
xor
and
and
and
sbb
fstl
sbb
jno
cmp
sahf
pop
pop
mov
pushl
idiv
int
sbb
scas
add
pop
or
movsb
sbb
int
imull
mov
into
pusha
pop
stos
inc
dec
pop
enter
sar
and
stos
imul
insl
inc
push
push
cli
inc
pop
or
add
repnz
add
sbb
xor
int3
ja
inc
sbb
into
xlat
pop
sti
cmp
int3
add
add
add
add
add
add
push
ds
pop
cmp
pmulhuw
xchg
add
add
add
add
pop
fcomps
fmuls
int3
add
add
add
xchg
xchg
inc
sub
ss
outsl
mov
popf
lea
mov
arpl
mov
pop
hlt
and
sti
sbb
pop
adc
int
jmp
push
out
cmp
push
icebp
iret
push
call
jp
fisttps
adc
rcrb
sbb
cltd
cmp
push
xchg
xchg
leave
nop
add
xor
mov
aad
xor
xor
pop
dec
mov
cmp
and
loopne
push
imul
adc
repnz
stos
js
xor
and
and
sarl
lcall
pop
icebp
mov
xchg
sti
ss
adc
mov
cmc
and
add
add
push
mov
push
movsl
mov
inc
fwait
clc
test
mov
jg
ljmp
sbb
outsl
les
cs
xchg
jge
add
pop
das
mov
mov
ss
add
add
lahf
xor
xchg
sub
push
ret
dec
dec
cmc
lahf
and
xchg
lock
inc
daa
pop
leave
mov
pop
lret
dec
cmpsl
xor
mov
sub
sbb
pop
movsb
push
les
scas
pop
jne
jb
insb
inc
mov
lret
popa
call
aam
push
push
sub
inc
int3
mov
push
sbb
jo
mov
cltd
bound
shll
sbb
cmpsl
jae
lcall
scas
or
xor
and
and
and
and
and
inc
push
imul
xor
mov
stos
push
fwait
sti
dec
jae
dec
jg
negl
leave
xor
pushf
pop
add
add
add
add
pushf
sub
mov
mov
in
push
push
lds
jne
adc
push
sbb
pop
or
inc
out
movsb
mov
data16
out
addr16
incl
push
push
mov
xlat
and
mov
or
fidivrl
mov
or
fucomp
lahf
dec
aam
pop
aaa
shlb
adc
pop
push
in
mov
call
dec
js
jge
mov
aaa
loopne
or
add
clc
pop
xchg
xchg
or
xchg
fistps
cmp
imul
jecxz
add
add
pop
fucomp
sbb
push
pop
shll
popf
loopne
enter
and
mov
shll
dec
call
scas
ss
or
out
mov
out
es
int
je
insl
jne
bnd
mov
sbb
jo
push
subb
sub
add
popa
movb
mov
xchg
fs
cmc
cmp
push
jecxz
gs
pop
jmp
dec
aaa
dec
pop
sbb
ss
mov
sti
xchg
imul
xchg
dec
bound
xchg
test
pop
add
add
add
add
add
add
movsb
xor
cmp
xchg
aam
xor
gs
push
dec
add
inc
pop
jnp
add
add
add
add
add
add
add
add
sahf
mulb
push
aad
fucom
jecxz
mov
sbb
fdivrs
or
jne
jg
sbb
mov
lcall
and
ret
sbb
jl,pt
mov
pop
and
inc
or
mov
insl
mov
test
rclb
xchg
sbb
test
cmp
sbb
lock
add
add
add
push
scas
sub
dec
call
mull
les
sbb
fwait
xchg
test
out
cli
sub
nop
pop
loopne
sahf
cmpl
out
inc
cmp
inc
gs
int
movsb
push
dec
and
pushf
test
stc
jmp
lea
add
mov
aam
add
mov
jp
mov
xchg
push
gs
out
mov
xor
sbb
popf
cmp
in
pop
cmp
int
fnstsw
dec
cwtl
mov
sub
or
movsb
adc
addl
xchg
lods
nop
add
add
xor
jo
aaa
xchg
sub
lret
sub
mov
adc
ror
dec
shl
adc
mov
ds
push
cld
outsl
into
xchg
bound
add
in
stos
adc
cmp
push
fiaddl
stc
pop
sti
ljmp
mov
fldenv
je
add
add
add
data16
into
mov
or
push
movsl
movsb
cmpsb
or
pop
adc
stc
je
mov
ds
jb
sbb
out
nop
mov
call
std
xor
add
and
roll
imul
or
sub
nop
rcrb
or
xchg
notl
xor
adc
in
push
test
imul
lcall
sbb
incb
je
add
clc
aaa
fstpl
xchg
pop
cmp
ret
ja
cmp
mov
adc
mov
hlt
add
or
add
pop
scas
mov
push
das
jb
xchg
aad
or
add
add
pop
push
mov
cmpsb
inc
adc
mov
shrb
pop
push
xor
fbld
fsubp
mov
cld
mov
jno
or
loopne
mov
mov
mov
fs
fwait
jg
repz
loopne
bound
cmpsb
pop
into
mov
lods
sub
loope
divl
add
sub
push
cmp
dec
clc
jnp
fisttpl
rorb
pop
fbstp
repz
shlb
adc
or
mov
daa
out
pop
arpl
or
pop
push
and
dec
and
sbb
dec
xchg
and
mov
scas
sub
sbb
pushf
cmp
sbb
sub
dec
lret
outsb
pop
add
add
add
in
ss
pop
mov
pusha
into
pusha
mov
add
lock
mov
push
add
in
cmp
xorl
jle
lcall
mov
inc
ja
jns
wrmsr
shrb
sbb
and
jbe
mov
repnz
bound
dec
repz
mov
mov
ret
lds
outsl
test
es
sahf
daa
js
xchg
imul
pop
cmp
mov
fs
sub
mov
mov
jnp
lods
dec
aas
mov
scas
repz
arpl
cmp
push
mov
sarb
lcall
sbb
nop
add
pop
jne
and
sbb
xchg
add
add
add
add
add
add
add
bound
mov
scas
fdivrp
lods
sbb
mov
sub
inc
or
pop
dec
fdivr
push
int
pop
inc
test
mov
inc
mov
jno
add
pop
jnp
hlt
mov
xor
pop
pop
inc
xchg
add
fxch
fwait
insb
push
push
and
cltd
fmuls
imulb
pop
cld
sub
mov
cmp
mov
push
adc
aaa
sbb
mov
test
outsl
imull
jle
xchg
dec
dec
sbb
hlt
jl
incl
hlt
dec
add
out
jns
lods
mov
nop
pushf
lock
and
inc
sub
jnp
lahf
and
test
out
int
cli
shll
inc
fstl
pop
mov
push
shrb
scas
jge
dec
pop
lea
add
pushf
mov
mov
mov
out
sub
mov
cmp
or
fs
add
cmp
loop
xor
rclb
jmp
sub
jne
cltd
xchg
mov
cmp
or
adc
test
mov
jne
sbb
je
dec
sbb
xchg
mov
fisubs
add
xor
nop
add
add
stos
test
push
adc
call
xchg
es
or
test
negb
lret
mov
xchg
subl
xlat
mov
xchg
fistps
sarb
call
pop
add
mov
imul
cmp
ss
cmp
or
mov
shll
lcall
push
and
pop
fsub
nop
add
add
push
mov
dec
push
jmp
xor
and
adc
dec
idivl
inc
add
mov
adc
pop
adc
nop
sbb
rcl
mov
repnz
mov
add
add
add
add
add
add
shrb
mov
insl
pop
nop
movsb
movsb
mov
imul
push
std
aad
cmpsb
outsb
xchg
inc
loopne
xor
hlt
out
loop
push
adc
ret
lods
sbb
scas
lea
lods
mov
jb
or
cs
lahf
inc
push
sub
inc
les
push
in
push
dec
outsl
or
orl
out
push
arpl
mov
sbb
push
stos
in
out
mov
adc
aad
stos
xchg
push
mov
xor
outsb
dec
jb
xchg
xchg
outsb
lret
push
add
add
add
pop
scas
icebp
mov
pop
and
sub
mov
jmp
and
and
and
and
and
and
and
sbb
and
adc
subb
lods
add
shll
xchg
xchg
cmpsb
scas
test
cltd
insb
push
jp
push
shrl
orb
mov
xchg
arpl
xchg
xchg
popa
adc
cs
adc
mov
xchg
or
inc
repnz
das
cs
adc
scas
jbe
cltd
pop
and
sub
loop
or
adc
sub
mov
xlat
les
sti
inc
push
sahf
into
nop
add
xor
sbb
pop
or
std
filds
ret
shll
mov
cltd
dec
add
test
ret
sub
pushf
out
fcompl
jnp
btrl
and
jo
inc
icebp
push
push
cmp
lock
mov
xchg
inc
jl
sub
add
das
cmp
push
in
ds
mov
ret
mov
jne
imul
lea
push
add
add
add
add
add
lods
push
sti
lcall
add
lret
orb
shlb
out
aas
fldt
fimull
out
lock
mov
mov
push
mov
sbb
enter
push
xor
rolb
std
in
push
daa
xlat
ret
mov
je
mov
jge
dec
repz
cs
xchg
punpckldq
icebp
push
jmp
dec
sti
cmpsl
movsl
mov
scas
leave
js
sbb
adc
outsl
mov
or
adc
int3
add
add
mov
arpl
push
fcmovbe
xor
jo
test
stos
gs
fdiv
movsb
or
jne
xor
ja
orb
xor
jge
sti
xor
mov
js
push
ret
xor
mov
jmp
pop
lock
and
xchg
pop
or
or
movsl
imul
imul
cmpl
loope
xchg
push
movsl
add
add
outsl
inc
or
jne
push
adc
pusha
es
les
push
lds
push
scas
xor
cmpsb
pop
aam
mov
add
ret
cmc
loopne
cld
inc
xor
or
mov
test
xchg
test
mov
andb
add
add
dec
mov
push
xchg
add
jb
bound
xor
pop
push
xchg
hlt
push
aam
hlt
hlt
cmp
lcall
rclb
test
leave
dec
jp
scas
sbb
ficoml
fbstp
int3
lcall
imul
cmp
and
push
ljmp
mov
xor
mov
xchg
mov
ljmp
or
out
nop
loope
lcall
sub
shrb
in
pop
lret
scas
fwait
adc
enter
out
push
cwtl
int
add
js
and
adc
jg
mov
dec
ja
jns
test
jo
cmp
mov
fsubrl
ficompl
push
aaa
mov
sub
repz
sub
lahf
add
inc
jno
imul
ss
jns
sub
in
scas
data16
pop
jnp
and
int
or
xchg
aaa
cwtl
add
xchg
jns
inc
std
sub
ret
insl
pop
je
filds
int3
add
add
add
add
add
add
aam
push
jns
in
clc
in
leave
mov
pmullw
cmp
jno
movsl
sub
mov
and
cmc
rcrb
fisubrs
in
je
cmp
ret
xor
in
lods
in
jns
loopne
lret
adc
inc
push
pop
and
ljmp
jae
loop
les
lods
js
jno
push
fisttps
jnp
or
lahf
adc
add
add
add
hlt
push
jle
enter
push
jae
push
adc
jle
subb
das
ja
int3
add
add
add
add
add
cmp
pop
cltd
cmp
xchg
mov
jo
push
ret
jg
out
fwait
rclb
pop
movsb
test
imul
cs
jae
lret
rcl
les
jmp
xlat
lret
inc
out
jle
xchg
pop
stos
popa
shrb
dec
cli
icebp
xchg
xchg
xchg
shll
inc
cmp
fs
stos
cs
jp
out
mov
sti
pop
outsb
ret
insl
pop
dec
ljmp
fstpl
mov
imul
in
sub
adc
sub
mov
js
test
stos
jnp
ret
je
fdivs
lods
shrb
sbb
rdtsc
pop
ret
lock
cwtl
fnstenv
push
mov
shlb
ret
add
add
add
and
ret
xchg
inc
pop
cmp
bound
pushf
iret
call
cltd
adc
je
aas
scas
cmc
add
add
add
add
add
add
adc
int
adc
jge
mov
out
cmp
fmuls
pop
inc
out
shr
xchg
xlat
lret
popa
adc
xor
cltd
repnz
xor
xor
add
rclb
add
xlat
dec
pop
aam
jb
push
sbb
jne
jecxz
shlb
inc
fdivrs
xchg
shlb
jl
in
mov
bound
add
mov
rolb
jmp
shrl
stos
cmp
add
add
add
scas
arpl
sarl
fidivrl
leave
mov
and
aam
mov
fldcw
sbb
jg
mov
mov
in
rcll
mov
popf
sub
addb
jnp
lret
xor
inc
ljmp
and
iret
lods
pop
stc
repnz
mov
lods
dec
ret
loop
jl
cmp
jo
inc
mov
mov
dec
in
xchg
pop
clc
scas
ucomiss
cmp
cmp
add
add
add
add
les
or
add
mov
stc
pop
call
push
repnz
ja
out
jno
jns
pop
mov
cmovb
es
pop
add
jne
xchg
xchg
sub
in
repnz
mov
loop
pusha
push
subl
jbe
push
xchg
dec
xor
mov
cmp
faddl
and
xor
mov
sti
mov
popf
lock
xchg
xchg
sbb
stos
push
pop
iret
rorl
lret
jp
xchg
shlb
xchg
outsb
stc
cmp
sub
sbb
popa
aam
add
add
add
add
dec
enter
mov
jns
jge
sbb
cwtl
repz
jge
out
mov
mov
test
sbb
enter
and
and
push
cmc
push
mov
add
aad
movsl
jecxz
and
fstps
bound
sbb
jo
mov
inc
and
fisubs
dec
and
shll
push
lret
push
test
in
jne
scas
call
imul
push
sub
cld
mov
insb
mov
sub
mov
jmp
out
insl
sbb
and
mov
mov
out
insb
out
sub
fs
cmc
pop
cwtl
imul
sbb
push
cmpsb
mov
mov
dec
ret
lret
mov
imul
add
add
add
add
adc
dec
enter
aam
sub
arpl
cmp
cltd
mov
dec
mov
add
add
add
add
mov
lea
jb
cmpsb
add
test
or
in
scas
xlat
aaa
push
cmp
fisttpll
jnp
test
and
sti
sbb
add
mov
xor
addb
lret
lahf
cmp
lods
cmp
jns
adc
outsl
scas
movsb
add
mov
int3
dec
jg
icebp
rcll
out
and
int3
aad
int3
fisubl
jnp
in
jne
dec
fsubl
insl
ficomps
mov
push
mov
fs
sub
adcl
into
ret
sbb
xor
repnz
rorl
pop
add
add
add
mov
xchg
inc
movsl
outsw
dec
cltd
sbb
or
js
or
lret
lahf
xor
and
and
scas
adc
lds
pop
add
dec
ror
and
stos
dec
orb
and
jnp
cmc
mov
aad
cld
js
aaa
jp
adc
mov
or
inc
push
adc
push
mov
mov
incl
incl
incl
incl
incl
incl
sbb
cmp
mov
imul
sub
xchg
dec
lock
mov
ror
push
pop
pop
repz
bound
pop
sbb
pusha
pop
pop
imul
dec
xchg
mov
jb
popa
sbb
xchg
icebp
or
imul
stos
cmp
jne
int3
pop
aaa
or
testl
add
xchg
out
and
and
and
and
and
and
xor
int3
and
xchg
mov
outsb
addr16
xchg
and
loop
lea
inc
ljmp
int3
das
and
bound
cmp
dec
lods
xor
pushf
les
pop
xchg
shll
sub
pusha
out
jb
lcall
in
cmp
cmp
popa
cmp
lret
jae
and
lods
loopne
push
cmp
sbb
jl
and
outsl
mov
adc
lock
addr16
add
sbbl
cs
jb
mov
mov
jecxz
mov
sbb
xor
call
addr16
xchg
fidivs
fildl
popf
orl
jl
push
leave
mov
jmp
cwtl
sub
ljmp
scas
jb
and
xchg
mov
cmp
jecxz
in
mov
loope
in
mov
addr16
pop
xor
push
decl
ds
fldt
mov
xlat
xchg
jl
jp
repz
and
push
gs
cmc
clc
xor
xor
pop
and
popf
lea
adc
pusha
or
add
fildl
adc
dec
imulb
xchg
fldl
je
pushf
sub
add
adc
pusha
inc
cmp
add
cmp
mov
std
aaa
jl
gs
test
mov
out
call
icebp
wbinvd
pushf
xchg
jl
roll
sub
in
sbb
sub
mov
fwait
shll
testl
repz
in
dec
mov
cwtl
xchg
mov
testl
pop
shlb
xor
fs
jg
call
adcb
fstps
pushf
add
pop
xor
or
fmul
das
mov
scas
loope
dec
aam
or
shlb
leave
and
jle
push
jmp
lds
ljmp
int
ljmp
lret
ret
add
dec
mov
cmp
call
and
cmp
ljmp
mov
outsb
xchg
push
stos
jecxz
int
jp
in
sub
xor
repnz
jnp
mov
sahf
mov
mov
dec
jl
and
and
inc
sti
repnz
mov
hlt
into
jae
pop
inc
aaa
mov
frstor
iret
jo
xor
nop
rcrl
pop
sti
scas
stc
add
sti
nop
mov
xchg
aaa
scas
sarl
fldenv
mov
subb
cmp
push
sub
sub
pusha
stc
sbb
fnstcw
sbb
je
jo
jge
test
in
nop
pop
xchg
negb
mov
fildll
dec
pushf
inc
mov
adc
enter
dec
mov
xlat
jb
push
test
xchg
mov
sarl
dec
xchg
sub
xor
push
sarb
sub
in
std
imul
lcall
cmp
call
sbb
mov
push
loop,pn
out
push
jnp
or
mov
movb
pop
push
cmpsl
pop
pop
rolb
pop
push
inc
push
das
push
adc
int3
add
call
push
pop
lahf
test
push
push
aaa
mov
outsl
pop
jg
mov
jns
icebp
add
dec
mov
jmp
in
das
clc
negl
pusha
popf
test
stc
or
mov
loopne,pt
jle
push
push
fsub
jecxz
and
das
xor
cs
cltd
push
sbb
addr16
cltd
enter
xchg
inc
mov
jmp
jb
test
ret
ss
sbb
rol
das
mov
mov
mov
sbb
adc
movsb
fbld
lret
inc
in
dec
scas
xor
ljmp
pop
test
sbbb
adc
add
add
add
add
add
add
add
aam
ljmp
filds
out
fs
add
add
add
add
add
lock
sbb
fimull
scas
cmp
mov
xor
and
sahf
cmc
aaa
dec
push
mov
shl
aaa
lcall
int3
add
add
add
dec
rcll
jmp
ficomps
lods
sbb
push
fldt
hlt
js
and
ds
pop
mov
es
pusha
inc
out
sets
mov
push
call
das
dec
imul
pop
xchg
xchg
push
test
nop
adc
jecxz
or
test
pop
jecxz
fdivrs
lock
hlt
out
jnp
adc
lods
test
shlb
mov
mov
mov
test
out
xlat
or
cwtl
mov
jae
mov
out
jnp
out
out
pop
or
mov
sarb
cmp
mov
bnd
adc
and
and
and
and
or
mov
stos
sbb
inc
nop
dec
sbb
mov
sti
pop
int
add
sti
cmp
or
mov
or
insb
shlb
sub
cmpsl
push
add
sbb
mov
lea
sbb
cmp
stc
xchg
lods
mov
stc
sahf
call
push
lods
stos
mov
and
and
and
and
and
xor
sub
gs
cwtl
adc
daa
not
es
adc
add
inc
xchg
les
jge
imulb
loopne
mov
mov
mov
add
add
loop
xchg
pop
push
adc
adc
cmpb
stc
sbb
in
dec
push
xor
jle
mov
and
cmp
mov
cmc
std
mov
fbld
test
inc
add
loopne
arpl
jb
xchg
push
lods
or
jg
xchg
pop
and
jg
lea
xor
fcoms
dec
sbb
xchg
mov
jno
and
adc
sub
pop
hlt
shrb
stc
jmp
outsl
aaa
or
mov
push
int
stos
mov
sbb
les
cmpsb
mov
add
add
add
add
add
addr16
mov
test
aad
movsb
add
cmp
aad
cmpl
sub
push
out
mov
stos
stos
pop
les
aas
hlt
test
add
xor
or
jb
mov
sub
pop
mov
adc
sbb
adc
push
adc
arpl
test
stos
stos
push
pop
mov
inc
aaa
scas
xor
das
test
push
sbbl
mov
decl
fisubrl
icebp
mov
sbb
nop
test
insl
aas
ljmp
lcall
cli
cli
dec
xchg
jle
dec
sti
push
fldt
mov
into
int
pushf
insl
sahf
addl
add
add
add
icebp
in
repz
sbb
jb
sub
sahf
lods
iret
mov
cmpsl
icebp
adc
adc
in
ss
cli
shlb
push
lcall
cmp
mov
pop
and
cltd
pop
sarb
ja
adc
mov
adc
sub
ret
add
pusha
adcl
call
dec
lret
pop
mov
or
icebp
repz
hlt
andl
adc
inc
fdivrs
cltd
loope
and
and
and
and
and
aam
ror
mov
sub
push
call
movsb
pop
stc
out
fidivl
dec
pop
addr16
rcrl
fs
out
adc
ljmp
lret
jp
mov
sub
sbb
mov
aam
cmp
mov
mov
fdivl
adc
jle
mov
lcall
dec
mov
and
fstpt
inc
cmp
gs
loopne
add
pop
sub
nop
xlat
cs
push
test
addb
xor
inc
testb
push
and
int3
out
lods
xchg
test
jno
aad
cmpsl
lods
or
out
xchg
sbb
inc
jbe
mov
dec
push
add
jb
rolb
in
shl
add
jecxz
jmp
jl
dec
fistpl
cmpsl
lods
xor
fidivrs
in
in
mov
dec
pop
jp
push
push
into
mov
cmp
cld
pop
in
jne
aas
enter
cltd
mov
push
in
fnstcw
mov
ds
and
push
inc
call
mov
cld
mov
inc
sub
or
pop
lret
fs
xor
test
imul
repnz
cmp
xchg
jmp
xchg
cs
fdivrs
jns
sahf
testb
add
add
dec
adc
mov
inc
mov
arpl
int3
add
in
addps
xchg
cltd
fstps
fs
jo
xchg
xchg
cs
in
shll
add
mov
scas
pushf
sub
repz
push
add
jb
jecxz
sbb
out
loop
pusha
and
mov
nop
aam
cli
clc
xorb
mov
mov
fisubrl
insl
aad
push
ds
in
popf
sub
ds
push
push
test
sbb
add
ficomps
mov
in
lcall
push
push
data16
lods
push
mov
cwtl
mov
mov
imul
in
cs
add
or
shrl
lahf
stos
pop
movsb
rol
rclb
mov
sub
sub
mov
cmpsl
loop
mov
bound
or
mov
push
or
and
jno
fmul
xor
and
xor
aaa
dec
mov
dec
out
xor
outsb
cwtl
pusha
dec
in
out
mov
loop
int3
add
add
add
add
sub
sarb
fcomps
pusha
xor
or
es
inc
push
fidivl
mov
sbb
into
out
mov
movsl
popa
mov
pop
inc
cmp
mov
mull
adcb
cld
sbb
dec
loope
jne
mov
out
lret
iret
call
andb
dec
inc
push
lods
adc
push
fcomip
jo
js
xor
pop
add
add
add
sub
push
mov
in
fdivrs
inc
xchg
adc
dec
out
faddl
incl
incl
incl
jmp
lret
ja
jmp
pusha
cltd
arpl
jl
xlat
inc
inc
gs
in
adc
push
cmp
les
mov
ret
mov
mov
out
shlb
xor
xor
mov
popf
out
xchg
std
out
dec
xchg
paddsw
lret
add
test
sub
inc
dec
fisubs
hlt
mov
jmp
add
add
add
add
fsubl
sbb
in
scas
mov
push
and
test
inc
popa
daa
adc
mov
sub
mov
xor
scas
xlat
pop
push
xlat
xchg
push
dec
mov
xlat
mov
push
test
out
jmp
out
mov
inc
lea
cmp
lods
dec
stc
sbb
jg
lods
xlat
out
daa
push
cs
stos
gs
pop
push
popa
xchg
xor
mov
int3
add
add
fcmovu
rcl
jmp
lods
cwtl
test
nop
int
dec
xchg
pop
mov
mov
inc
nop
jg
ficompl
andb
hlt
mov
pushf
sub
stos
lea
cmp
call
sbb
hlt
lods
pop
lahf
fldt
mov
int3
add
add
xchg
arpl
xor
and
cmp
imul
mov
jo
daa
sti
add
mov
jp
dec
sub
rcrl
test
fadds
pop
mov
les
cmc
frstor
in
repnz
repnz
xor
sub
and
and
and
and
and
and
push
sbb
jle
adc
jle
mov
cmpsl
mov
in
pop
xor
js
fdivrp
adc
adc
sub
sbbb
rorb
cltd
lods
cld
jne
and
fisttps
lret
enter
imul
inc
inc
cmp
and
pushf
std
shll
mov
daa
jno
mov
insl
int3
cltd
or
pop
xor
mov
add
add
jge
ja
outsb
xor
not
mov
cmp
cwtl
mov
mov
addr16
adc
or
sub
mull
mov
fdivl
cmp
xor
jns
or
into
mov
mov
and
pop
jbe
and
in
andb
lret
jns
pop
mov
mov
xlat
and
out
test
mov
dec
xchg
jns
sbb
mov
xchg
data16
mulb
outsl
sub
push
loope
sbb
mov
lds
out
leave
ja
adc
out
push
pop
jb
mov
pop
xchg
push
inc
jbe
sbb
arpl
add
add
add
add
inc
imulb
sub
inc
jne
outsb
aam
xor
clc
stos
cmp
fwait
loopne
push
dec
xchg
into
xor
push
adc
sbb
or
adc
loopne
xlat
jp
fnsave
loopne
test
stos
clc
sahf
pop
mov
inc
stc
addr16
test
pop
mov
pop
movsb
mov
lret
inc
or
adc
fcoml
mov
xchg
mov
sub
sahf
dec
push
mov
jae
data16
aam
aad
push
std
xchg
mov
add
add
add
add
add
fwait
imul
jecxz
nop
or
out
xor
cltd
std
cmpsb
test
jle
cli
mov
pop
dec
ja
adc
xchg
push
add
outsl
inc
out
ljmp
adc
inc
ret
inc
pop
adc
cltd
pop
test
aas
cmp
imul
out
jns
scas
icebp
flds
mov
pop
and
lods
leave
int3
or
inc
xor
mov
insl
aas
jbe
inc
orl
mov
sarl
mov
mov
cmp
jns
push
stos
inc
aaa
test
cmp
xor
incl
ljmp
mov
sub
scas
fwait
jecxz
mov
lahf
push
cmp
movsb
das
add
and
add
pop
cmpsb
mov
pop
push
dec
test
pop
in
loopne
push
ds
xor
jp
gs
fistl
sbb
xchg
and
jne
pop
popa
mov
mov
sbb
and
push
add
mov
stc
pusha
pushf
fisubl
in
inc
lods
pop
insb
mov
int
mov
shrl
in
add
add
data16
lret
and
adcb
push
hlt
dec
sbb
push
sbb
notb
mov
jns
ss
dec
fbld
sbb
mov
add
jns
add
sub
out
ss
and
push
push
inc
mov
outsb
cmp
add
add
add
add
add
add
add
daa
pop
dec
push
xlat
clc
pop
or
setae
mov
xlat
popf
imul
imulb
cli
mov
repz
jle
xor
dec
adc
push
xchg
dec
cmp
dec
pop
cmp
nop
fwait
mov
lahf
les
mov
out
cld
mull
and
sbbl
loopne
push
add
push
in
push
addb
xchg
insb
test
loop
pop
rorb
or
incl
int3
add
add
add
rcrl
pop
or
fimuls
fdivr
cmp
mov
les
and
xor
sub
cmp
pop
jmp
mov
cmpl
push
lcall
daa
js
je
xchg
push
mov
adc
pop
mov
sbb
mov
and
incl
incl
incl
cmpsl
inc
outsb
divl
sbb
mov
adc
jmp
fadd
cld
out
jmp
cmp
mov
subl
cmpsl
cmp
leave
push
popa
lods
jge
bound
and
bound
mov
loop
adc
jb
leave
rcrl
in
mov
add
leave
lods
cmp
sbb
sub
push
dec
mov
icebp
fs
sbb
aad
xchg
xchg
lods
xchg
push
mov
test
gs
loopne
clc
xchg
ss
and
daa
mov
pop
bnd
xor
xor
cmp
adc
loop
dec
pushf
lret
movl
test
inc
inc
cmpsb
cwtl
shlb
cmp
jae
jne
xor
add
add
add
add
add
add
push
jbe
mov
test
icebp
add
mov
pop
cmp
leave
sbb
incl
incl
incl
lcall
jle
or
push
cli
cmc
clc
les
iret
inc
add
add
add
add
add
jnp
sub
fidivl
jno
enter
cmp
jae
test
sub
aas
sub
stos
dec
out
cmp
pop
lock
mov
push
mov
lret
testl
add
add
add
movsb
in
add
add
add
add
add
add
add
jb
mov
pop
cmpsb
test
push
call
push
sbbl
fdivs
mov
cld
jp
push
mov
mov
push
xor
lock
lcall
cmp
mov
lods
dec
add
xchg
in
pop
dec
lock
xor
popfw
leave
cmp
jmp
test
test
lcall
repnz
sarb
sub
shl
dec
sbb
inc
push
adc
cmc
add
xor
cmp
cmpsb
into
xor
in
mov
sub
fdivs
idivl
push
pop
popf
rcr
cmp
and
and
and
and
and
and
and
roll
cld
mov
lock
push
sub
adc
mov
push
jle
pop
adc
sub
and
jge
sub
mov
adc
pusha
jl
jbe
xchg
mov
int3
add
add
add
add
add
add
dec
push
hlt
test
inc
dec
cmp
fbld
in
mov
mov
lcall
adc
add
insl
mov
dec
icebp
daa
fdivrs
sbb
jle
shl
lret
stc
lds
sbb
ret
xor
jns
mov
add
inc
xor
xorb
dec
cmp
mov
and
cmpsb
add
add
add
add
add
add
add
rcl
xchg
mov
insb
out
cmp
sbbl
jle
push
test
mov
test
pop
pop
sub
ljmp
and
aaa
mov
bnd
data16
ss
stc
mov
dec
sbb
inc
cmp
adc
loope
xchg
jge
jb
push
out
lcall
icebp
call
lods
or
pop
dec
std
stc
jns
mov
lcallw
push
or
orb
add
add
add
add
add
lock
flds
mov
adc
mov
jmp
aas
and
xchg
xchg
and
int3
aaa
mov
xlat
pop
xchg
icebp
push
jns
ret
sti
sub
pop
test
mov
mov
mull
pushf
leave
bound
add
add
add
add
mov
fnstcw
xor
aas
popa
popf
xchg
aad
test
or
lahf
test
sub
cmp
inc
cmp
out
rorl
mul
pop
or
mov
mov
or
xlat
push
outsb
lds
push
movl
loope
mov
movb
push
add
jnp
push
pop
adc
imull
fldl
pop
sub
int3
add
add
add
add
add
add
pop
push
ret
push
data16
jae
cmp
dec
lds
int
xchg
dec
lds
bound
arpl
in
movsb
add
add
add
add
add
add
mov
sub
dec
mov
adc
jne
les
xchg
test
lock
test
add
sbb
out
lcall
lods
push
dec
push
cld
adc
popa
sbb
mov
pop
push
mov
out
mov
ffree
lock
enter
inc
pop
fcoml
in
push
mull
das
mov
jmp
repz
pop
movsb
mov
cltd
out
adc
arpl
cli
or
dec
push
sub
jno
pushw
sahf
dec
cmpsb
cmp
sub
inc
leave
jmp
ds
mov
fcompl
xlat
jo
xor
add
add
add
add
add
dec
fwait
jge
sarl
adc
fdiv
roll
les
ret
jno
shr
cmp
sub
cs
pop
call
sbbl
xchg
sbb
popf
sti
stos
xor
or
rorl
inc
shlb
loope
push
fnsave
cmp
sub
notb
shrb
fists
xor
and
and
and
and
and
pop
fcoml
popf
aam
pop
mov
push
sbb
out
pop
gs
sahf
in
test
add
mov
cld
sbb
stc
sub
xchg
or
in
enter
jg
mov
hlt
cmp
jl
jnp
mov
xchg
push
jb
out
xchg
call
jo,pt
jns
cmp
adc
out
stc
push
sub
outsl
sar
clc
shrb
clc
pop
cs
aam
pop
mov
data16
sbb
movsl
inc
push
mov
jne
ljmp
xor
or
and
mov
les
push
inc
xlat
mov
xor
int3
add
add
add
add
add
push
call
js
in
pop
in
sarb
mov
push
push
ret
ucomiss
std
testb
mov
ret
xchg
inc
push
mov
clc
into
cmp
pop
inc
lods
lret
test
cmpsb
cmp
pusha
or
xor
cmc
test
cltd
mov
cld
push
dec
rolb
popf
jne
imul
ja
pop
xorl
mov
inc
loopne
data16
fs
sbb
ffree
add
or
jge
mov
scas
bnd
fstps
movsl
sbb
push
insb
adc
xchg
fistps
cmp
ret
icebp
xchg
push
movsb
shl
mull
add
add
add
add
xchg
fadds
adc
lods
sub
inc
cs
int3
add
add
add
and
inc
outsb
push
loop
repz
pop
pusha
push
js
shrl
fwait
stos
std
into
sub
push
lahf
test
movsb
or
cltd
fwait
lods
lods
fstpt
xchg
jb
mov
and
pusha
xchg
jge
in
aad
test
mov
cmp
aad
sbb
pop
out
inc
repz
add
mov
shr
adc
jae
inc
int3
data16
lods
xchg
sbb
jecxz
xor
add
mov
aaa
push
or
dec
pop
aam
xchg
jp
sbb
ret
leave
xchg
jg
and
add
add
add
add
add
add
fwait
add
xor
inc
pop
enterw
xor
enter
mov
stc
repnz
mov
lds
inc
neg
daa
aas
rcr
ret
pusha
lods
adc
mov
dec
adc
mov
dec
inc
jne
std
jno
out
sbb
jle
cwtl
lods
mov
add
add
hlt
out
lods
mov
out
insb
out
mov
sbb
inc
pop
fisubrs
inc
loope
in
enter
cmp
sbbl
loope
mov
loope
out
pop
push
lea
les
dec
movsb
sbb
and
lcall
sub
push
pop
movsl
push
inc
lods
xchg
stos
gs
hlt
fistps
inc
shrb
test
fistps
or
in
xlat
lahf
int3
int
cli
push
pop
imul
add
mov
lds
jl
gs
lea
sub
les
jg
jg
dec
nop
outsb
xor
push
jg
jle
sbb
lret
icebp
push
cli
push
and
rcrb
out
mov
fsubl
pop
and
push
loope
pushf
sahf
lahf
mov
dec
pop
cmpl
pop
test
incl
incl
incl
incl
incl
jmp
mov
mov
idivl
mov
outsl
outsb
out
inc
jge
mov
lret
inc
jecxz
mov
addr16
mov
mov
jns
iret
out
jbe
xor
test
pop
fisubrs
out
inc
test
mov
pushf
nop
stos
mov
dec
scas
xchg
pop
shrb
or
cwtl
std
inc
add
add
add
lock
push
mov
inc
or
outsl
jne
orb
fs
lods
xor
es
fnsave
inc
and
stos
sbb
add
add
add
add
in
mov
rcl
mov
in
push
jl
popa
cmp
sbb
aad
lds
push
or
sub
sub
and
or
lods
xchg
mov
xlat
aaa
lock
fistl
xchg
call
imul
mov
loope
cmpsb
seta
push
adc
adc
push
les
icebp
mov
movsl
decb
in
jp
cmovb
call
mov
popf
cmpsb
ljmp
push
ds
rolb
out
jb
add
in
ds
incl
incl
incl
incl
jecxz
in
inc
dec
xlat
push
stc
mov
rolb
mov
jbe
xchg
sbb
movsb
movsb
int3
fiaddl
push
cmp
jbe
sbb
jge
in
sub
insl
push
lret
out
dec
xor
out
mov
mov
or
sub
or
jp
int3
fbld
mov
jmp
rcrl
test
scas
rcr
in
enter
and
nop
add
add
cmp
push
sub
aam
jns
testb
lods
fmuls
enter
push
cmp
fmuls
outsl
xchg
cmp
bound
sti
ret
add
add
add
add
add
add
gs
test
adc
jae
loopne
jge
dec
jmp
mov
and
faddl
es
fs
push
shl
js
add
xor
add
fs
lods
jnp
subl
sub
add
xlat
add
mov
push
mov
push
xchg
insl
in
inc
loop
sub
or
shl
mov
cmp
leave
sbb
jo
sbb
sub
call
int
movsl
ja
sub
aad
outsb
stos
sub
mov
lock
loopne
pop
repnz
clc
insb
cmp
add
add
add
lods
stos
rclb
sub
movsb
mul
push
fsubs
jg
lods
js
movsb
push
adc
adc
cmp
testl
push
push
lret
ds
rcl
mov
inc
pop
aad
cwtl
cmc
iret
cmc
xlat
outsb
mov
xor
and
in
push
mov
mov
iret
xchg
or
insb
loope
out
mov
inc
jmp
fadd
inc
pop
xchg
jbe
mov
popf
jp
push
scas
rol
or
clc
lods
mov
cmpsb
adc
dec
movsl
in
add
movsl
cmp
pop
xchg
ret
jo
pop
arpl
stos
frstor
das
add
add
add
add
add
jmp
add
or
xor
addr16
jno
test
jno
xchg
mov
subb
arpl
scas
mov
adc
mov
lret
pop
stos
iret
and
mov
lret
ja
inc
pop
das
js
pop
mov
aad
lock
add
add
add
add
add
add
fsubrl
aam
sbb
js
movsb
pop
iret
mov
sbb
fimull
cmp
leave
push
ret
add
imul
jl
jg
outsl
add
xlat
xchg
arpl
push
pop
scas
push
mov
shlb
pushf
cmp
xor
mov
lret
xorb
fisttpll
jle
push
nop
add
add
xorb
pop
mov
push
stos
lds
data16
or
jbe
push
das
ljmp
stc
and
add
int
das
fucomp
xor
stos
roll
aad
xchg
xchg
sub
mov
add
add
add
add
add
add
add
mov
jg
or
sbb
addr16
mov
push
mov
cmp
ret
jle
xchg
push
push
mov
movsb
adc
ret
js
addr16
jecxz
arpl
inc
rcrb
mov
dec
dec
push
push
in
nop
add
add
lret
imul
xlat
loope
outsl
dec
pop
hlt
in
mov
jne
dec
std
add
xor
lock
in
in
sbb
dec
lods
rcrl
adc
imul
bound
pop
dec
fisubl
or
xor
sub
loope
mov
adc
imull
ljmp
mov
adc
pop
les
fstpl
pop
outsb
cmc
out
and
lcall
mov
loopne
mov
or
out
pop
loop
mov
add
add
add
add
add
pop
inc
jbe
jb
out
and
ret
jae
xchg
in
icebp
dec
pop
ljmp
xchg
loopne
sbb
lods
inc
xor
lds
dec
sbb
mov
inc
arpl
fwait
call
jmp
and
and
and
and
and
rorl
in
push
dec
cmp
sub
je
idivl
and
test
sbbl
fiaddl
sbb
push
ret
mov
add
icebp
sub
mov
lods
sti
mov
or
sti
sbb
popf
pusha
or
pop
repz
ret
jmp
xlat
mov
xor
sub
xor
and
sbb
mov
inc
or
cmp
pop
divb
div
adc
inc
and
outsb
rcr
add
add
add
add
insb
pop
inc
addb
inc
xor
adc
icebp
out
jo
jl
out
mov
and
jns
xlat
fists
mov
sbb
jb
mov
repz
in
xchg
inc
cmp
sarl
or
out
pop
jmp
int3
gs
cmc
sbb
and
fldt
push
divb
jae
sarb
jns
inc
leave
mov
add
push
pop
les
xchg
mov
and
add
add
add
inc
mov
ret
add
sbb
movsb
cs
js
sti
mov
pop
daa
and
in
xchg
mov
fnstenv
loope
lds
bound
sti
cmpsb
push
xor
mov
fwait
push
idivl
mov
inc
test
popf
mov
xchg
xor
jne
test
jmp
sarl
mov
int3
add
add
add
add
add
add
mov
je
subl
test
lods
iret
iret
cmp
outsl
lock
xor
adc
push
daa
inc
shlb
jb
lods
mov
mull
mov
ja
ljmp
xor
imul
xor
lods
cli
mov
incl
push
das
cwtl
sbb
pop
xchg
cmp
or
xchg
mov
and
sbb
add
fistps
aam
sbb
pop
cli
int
and
and
and
and
lahf
mov
repz
xor
sarl
xchg
sahf
and
cmc
dec
pop
sbb
inc
test
out
lods
mov
stos
stc
xchg
ss
push
xchg
jp
adc
shrb
sti
adc
inc
push
pusha
imul
xchg
lds
adc
imul
rcr
add
das
outsl
fists
adc
out
push
aam
or
push
add
add
add
add
jg
ljmp
xchg
and
and
je
adc
sub
and
and
and
movsl
inc
cmp
mov
cmp
xor
movsb
add
push
sub
fs
cmc
pop
xor
mov
or
mov
fcmovnb
xor
into
push
pop
fildl
mov
int
dec
adc
outsb
xor
jge,pt
ljmp
jp
push
jo
hlt
or
repz
xchg
out
es
ret
sub
fisttpll
adc
pop
or
lock
mov
inc
aaa
sub
in
pop
sub
xor
add
call
rcrl
adc
add
mov
cmpsb
call
lahf
mov
fisubrs
in
pusha
xchg
mov
add
add
repz
mov
xchg
loopne
jl
lods
mov
lret
cmp
mov
mov
push
pop
cmpsb
jns
ficompl
mov
test
lea
jb
push
jecxz
ja
lods
pop
sbb
mov
imul
in
adc
pop
jl
nop
pop
mov
rorl
inc
cwtl
push
je
push
bound
xchg
pop
cli
jo
es
sub
ss
xchg
fiaddl
sub
mov
movsb
mov
push
mov
or
inc
push
xorb
adc
xchg
sbb
xor
arpl
xlat
and
int3
add
add
add
add
add
add
and
lds
add
ror
mov
repnz
ljmp
iret
jecxz
jecxz
xchg
scas
cmpsb
xor
pop
decb
mov
int3
add
add
add
mov
jecxz
repnz
bound
shll
leave
std
jns
mov
sbb
mov
and
or
ret
sbb
call
pop
mov
cs
add
add
add
add
add
setge
mov
int3
push
das
or
es
lcall
sub
enter
pop
jae
daa
and
rcll
cmp
push
mov
pslld
ds
xchg
pop
xchg
push
fucompp
pop
arpl
das
add
clc
loopne
xchg
sbb
test
dec
mov
les
aad
mov
clc
cmpsl
ja
ret
lds
mov
inc
push
jb
xor
mov
mov
aas
mov
and
or
xchg
arpl
inc
dec
jge
leave
shrb
add
add
add
add
add
add
add
test
xchg
mov
fcomi
jge
mov
shll
mov
push
add
jbe
mov
xor
hlt
mov
psrlw
not
sub
jecxz
push
adc
dec
and
push
add
in
inc
push
sub
xchg
sub
movsl
pop
leave
lock
leave
das
pop
xlat
dec
stos
out
xchg
push
and
add
cwtl
out
mov
sbb
fdivrl
test
sbb
outsb
mov
sub
pushf
mov
fwait
inc
int3
cs
mov
shl
daa
dec
sbb
and
dec
inc
mov
push
jns
fidivs
add
add
add
jg
dec
jle
mov
pushf
push
sbb
fisttpll
push
lock
fildll
mov
adc
out
insb
sub
add
ljmp
out
jnp
fsubs
pop
add
mov
or
fsubrs
mov
cmpsl
mov
cmc
xor
cld
insb
aam
clc
outsl
jnp
loopne
cli
cmp
pop
outsb
or
cltd
push
pop
pop
or
lods
xor
or
add
add
add
add
or
loop
lds
decb
and
sbb
xchg
frstor
and
and
and
and
and
and
sarb
fbstp
cmp
mov
inc
xor
out
dec
out
or
enter
enter
bound
sbb
pop
imul
or
and
xchg
push
jl
outsl
push
iret
out
cs
out
xchg
iret
pop
lock
incl
incl
incl
incl
incl
incl
rcr
shll
divb
es
ss
mov
inc
pop
mov
mov
pusha
hlt
mov
lods
sub
add
std
negl
push
out
insl
mov
pop
ja
std
into
or
fldt
mov
scas
lock
add
xchg
mov
mov
jns
or
out
inc
jnp
sbb
je
jle
mov
mov
clc
push
mov
mov
aas
add
mov
out
cs
mov
jle
adc
mov
int3
add
add
add
add
add
ret
push
int
scas
xor
lock
xchg
mov
sbb
or
xor
mov
vrcpps
imul
xor
jge
mov
xchg
movsl
or
scas
xchg
adc
xchg
fmull
cmp
add
fnstcw
pop
rclb
lods
mov
push
mov
push
test
dec
push
add
add
add
add
add
add
add
stc
fwait
xor
shll
dec
jbe
mov
pushf
add
jae
mov
insl
loope
jo
ds
and
xchg
and
roll
jge
inc
ficompl
cmp
jp
pop
mov
dec
icebp
inc
pop
out
push
lcall
daa
pop
jo
mov
int
in
imulb
in
dec
xor
shl
repnz
cli
in
sub
incl
incl
incl
cmc
push
ret
cltd
jno
mov
add
loopne
add
add
add
push
icebp
xor
int
add
adc
xor
mov
sbb
out
and
add
cli
xchg
cmp
cmp
jmp
lcall
cwtl
hlt
add
mov
lahf
push
sbb
cld
pusha
and
nop
mov
subb
ret
jb
std
jnp
ljmp
jnp
popf
sub
lods
xchg
pop
xchg
mov
ljmp
test
shrb
mov
xor
inc
sub
ret
xchg
in
inc
in
add
add
add
add
add
inc
lock
clc
push
push
lock
push
jbe
iret
cmc
call
out
or
cmpl
push
push
add
pusha
add
xor
xor
es
call
mov
or
in
adc
scas
cmp
jae
xchg
shrl
push
sub
mov
xlat
cmp
addr16
gs
xor
pop
fs
bound
daa
push
add
add
add
add
and
lahf
fwait
pushf
pop
test
mov
daa
xor
jle
jl
lea
loopne
movsb
mov
inc
pop
pop
loopne
inc
into
sbb
fsubrl
add
or
cltd
sub
scas
pop
dec
add
or
lret
add
daa
lahf
test
mov
daa
adc
cli
adc
addr16
adc
movsl
pop
fbstp
ja
mov
fistpl
and
shll
push
xlat
aaa
mov
mov
dec
or
push
mov
mov
sbb
pop
rol
push
add
int
aad
mov
or
out
shrl
jecxz
sti
or
xor
pop
mov
pop
mov
inc
ds
xchg
std
jge
sub
push
xchg
or
xchg
cli
das
mov
sub
fdivs
sub
jg
fadds
int3
add
add
add
add
add
out
jl
and
or
push
repnz
and
xchg
rorl
jb
popf
fisubrl
ljmp
testb
mov
cmp
mov
popf
into
hlt
shl
repz
imul
cmpsb
test
insb
mov
repz
sub
sub
mov
xor
es
push
inc
jbe
mov
flds
int3
add
add
add
add
add
add
push
pop
std
test
pop
mov
jecxz
out
or
icebp
decl
sbb
inc
xchg
loope
fcomps
insb
jae
shrl
cmp
pop
sbbl
cmpsw
out
subl
or
add
icebp
shl
aaa
fsubl
imul
mov
adc
add
add
push
iret
inc
jg
xlat
push
jo
push
cmp
push
mov
jnp
in
mov
adc
add
add
add
add
add
add
add
push
rorl
or
cld
mov
popa
outsl
mov
in
sub
or
fsts
aas
pop
inc
aam
sbb
aad
cmp
stc
cltd
ss
cs
in
push
test
iret
sbb
push
mull
loope
sub
outsl
adc
xlat
aad
and
xchg
dec
sub
cmp
adc
add
add
mov
shll
or
jg
fstpl
xchg
imul
mov
sub
test
ds
int
psllq
lods
cwtl
stos
call
cmpsb
mov
push
jb
jnp
in
push
data16
mov
push
add
add
add
pop
lods
sbb
paddusb
xchg
and
mov
mov
jnp
clc
push
jmp
add
add
add
add
add
pusha
mov
push
mov
loopne
or
mov
dec
test
clc
xchg
or
cs
les
jp
mov
sarb
mov
scas
stc
or
shlb
push
sbb
or
add
add
add
add
add
add
test
ss
insl
inc
xor
movsl
dec
mov
xor
aaa
sbb
jno
mov
mov
iret
inc
popa
or
popf
dec
xchg
es
lds
inc
mov
push
xor
dec
or
shl
dec
vsqrtps
and
cmp
and
dec
sbb
cmp
add
repnz
mov
out
inc
jnp
mov
psubw
mov
sbb
stos
outsl
mov
push
nop
mov
ljmp
add
add
nop
jmp
push
sahf
inc
xor
adc
jg
ret
jp
fisubs
xchg
xchg
xchg
enter
push
lret
gs
popa
fbld
push
fistpl
adc
fwait
cmp
mov
mov
mov
push
data16
add
shrl
loop
cmp
aaa
lock
leave
aas
cwtl
aas
pushfw
fisttpl
es
jmp
mov
jbe
popa
sahf
cmp
pop
sbb
dec
insl
mov
enter
add
negl
inc
xchg
add
dec
repnz
int3
add
mov
ret
push
hlt
jg
scas
je
cltd
and
mov
add
hlt
sub
scas
mov
clc
jbe
ds
popf
jle
lods
push
icebp
sub
adc
iret
mov
int3
shl
inc
popf
push
xor
movnti
xchg
roll
pusha
fildl
and
and
and
and
and
and
push
mov
dec
xor
jp
xor
js
and
inc
ret
push
and
hlt
push
xchg
adc
stc
sarl
xchg
xor
ret
clc
test
repz
xchg
jnp
inc
jae
pop
iret
jno
mov
jg
ret
nop
cmc
push
cmp
scas
cld
scas
rclb
mov
out
scas
pop
xchg
data16
test
loope
push
or
inc
loope
jne
and
ljmp
mov
aam
stc
loope
xchg
mov
jo
jecxz
addr16
add
add
add
add
add
add
add
enter
pop
and
mov
add
les
cmova
in
data16
jno
in
scas
je
daa
mov
cmc
inc
sub
ds
xchg
mov
out
mov
add
inc
push
out
adc
repz
xlat
fwait
repnz
pop
push
xchg
or
mov
enter
sbb
jmp
mov
scas
xlat
lcall
int3
mov
xchg
adc
arpl
mov
cmp
les
fwait
sti
add
xor
rcrb
pop
pop
mov
das
mov
int3
add
add
add
add
insb
adcl
push
fisttpl
mov
pop
scas
xor
pop
mov
ret
mov
sub
mov
stos
or
stos
scas
push
mov
pop
les
jbe
ja
movsl
into
mov
rol
repz
dec
ret
scas
std
pop
mov
push
icebp
loope
inc
jp
jns
pop
punpckhwd
test
add
mov
cmpsb
push
push
cmpsl
jg
inc
ss
cmpsl
inc
addb
sbb
or
jecxz
test
jno
mov
jle
cmp
inc
cmpsl
mov
es
xor
inc
mov
and
aas
mov
das
jae
dec
jecxz,pt
cmp
movsb
imul
mov
popf
lahf
inc
js
lea
jns
mov
xchg
add
add
add
pop
ds
add
cltd
jns
mov
jo
inc
pop
fidivrl
movsl
inc
in
fisttpl
sub
fnstcw
ss
cmp
jp
ret
xchg
cwtl
or
mov
cmp
sti
mov
jbe
decl
xor
test
cwtl
mov
mov
and
jne
out
enter
ja
popf
lds
pop
into
addr16
sub
insb
push
add
mov
add
add
add
add
add
ds
icebp
adc
xor
xor
add
nop
add
loopne
flds
jle
add
add
sub
roll
inc
pop
pop
pushf
lea
mov
loop
lock
icebp
mov
int3
std
out
inc
test
adc
jnp
cwtl
insl
push
sarl
sbb
je
out
call
aam
addr16
fimull
xchg
aaa
xchg
aaa
pop
and
mov
loopne
repz
filds
cmpsb
cltd
mov
xchg
ficompl
pushf
aad
sbb
loope
cmp
mov
pop
jo,pn
ret
push
inc
dec
pusha
cs
mov
or
cli
in
mov
inc
xchg
stc
or
rclb
popf
out
icebp
jne
or
inc
xchg
enter
hlt
aad
inc
pop
or
popf
xchg
add
add
add
add
lods
lret
and
inc
xor
mov
out
inc
mov
fstpl
and
movsb
inc
mov
mov
sbb
sub
ja
sti
push
pop
aam
mov
xchg
stos
int3
cmp
sahf
pop
dec
test
fstpl
add
add
add
add
add
mov
push
and
cmp
scas
and
and
sub
xor
xchg
jge
pop
push
adc
das
dec
out
add
add
out
call
clc
scas
fwait
stc
xor
scas
popa
fadds
fisubrs
sub
pushf
leave
or
ror
or
and
cltd
push
call
mov
sub
js
mov
and
lods
pusha
jp
xchg
sbb
add
out
outsb
xlat
lock
jmp
cmp
cmp
test
mov
data16
das
lret
loopne
div
xlat
mov
nop
sub
push
scas
jns
or
std
sbb
ret
jns
hlt
je
pop
jl
andl
inc
ja
shrl
pusha
push
add
push
lret
push
scas
push
xchg
inc
insb
jle
cwtl
out
jmp
jbe
repz
jl
lcall
xor
pop
call
mov
inc
insl
adc
add
cmpsb
mov
sbb
mov
out
addr16
jle
xchg
paddb
rcl
lret
adc
push
sub
xchg
sub
movsb
or
test
test
and
gs
inc
sbb
test
int3
add
add
add
add
add
add
outsb
mov
xor
add
add
add
add
fstps
in
adc
pop
icebp
cmp
shr
add
popf
ss
jg
xor
jge
mul
lret
data16
add
mov
jg
mov
cmpsl
push
and
les
mov
dec
int3
cmpsl
je
lcall
jmp
push
testl
lods
xor
in
mov
dec
in
cltd
push
and
arpl
lret
clc
dec
repz
scas
insb
push
pop
adc
jecxz
and
imul
sbb
loope
shr
sbb
movsl
dec
push
dec
jne
fwait
sub
ja
movsb
divl
repz
incl
incl
incl
incl
incl
ljmp
push
cmc
xchg
clc
mov
cwtl
pop
loope
orb
xchg
insl
jp
mov
add
mov
dec
push
push
lea
or
sub
xchg
lret
xchg
adc
cmpsl
push
sti
push
in
or
xor
andb
test
xchg
aas
test
add
cmp
sbb
xchg
adc
je
pop
test
mov
cmp
cs
mov
in
pop
cmp
xchg
in
lds
ret
int3
add
and
fiadds
fldcw
aas
pop
aad
and
ds
mov
sub
into
dec
lcall
hlt
loop
pushf
clc
xor
js
sbb
pop
mov
jns
jne
add
cmp
dec
xchg
xchg
aad
push
mov
lcall
inc
and
or
adc
cmc
dec
imul
cmp
sub
dec
clc
aam
and
inc
cmp
leave
subl
cwtl
pop
daa
cmp
pusha
dec
stc
jne
repnz
dec
jbe
ja
js
icebp
push
jmp
add
je
adcb
xor
popf
inc
nop
add
popf
jo
or
pop
jnp
imul
shrb
cmp
cli
loope,pt
jne
adc
mov
cltd
xorb
in
push
stos
sbb
sbb
mov
lcall
mov
dec
into
pop
mov
inc
xor
leave
fcoml
mov
jg
add
add
add
add
push
dec
in
shr
outsb
mov
sar
mov
xor
sub
add
add
add
add
cmp
add
aam
inc
into
lea
clc
in
or
aaa
mov
in
xor
jg
cmp
cmp
dec
dec
cmp
sub
outsb
xchg
insl
adc
int3
or
xchg
inc
cmp
call
push
arpl
div
add
shll
sbb
xor
stc
stos
movsb
pop
push
jno
xchg
in
pushl
add
add
add
add
add
into
out
cmp
add
lea
pop
les
push
push
ja
and
push
dec
jns
es
xchg
lret
fs
sub
sbb
mov
cvttps2pi
jg
stc
add
add
add
add
add
add
add
xor
sub
pop
ss
subb
les
cmp
outsb
nop
xor
in
and
orb
xchg
fcmovnu
ficoml
cmp
xor
cmp
lods
lods
jnp
sbb
dec
mov
in
or
mov
loop
test
push
pop
daa
js
andb
nop
xchg
jns
mov
and
mov
mov
pusha
push
xlat
pop
cmpsl
repz
xchg
lcall
jb
sub
push
lock
ljmp
aam
push
add
add
sub
movsl
push
or
push
xlat
lahf
iret
jmp
mulb
mov
aaa
xor
dec
int3
adc
pop
loop
pop
lea
imul
nop
dec
popa
sub
fldcw
dec
loop
inc
shlb
xchg
pop
dec
insl
aad
jmp
xchg
mov
pop
movsl
mov
es
ret
pop
xchg
out
inc
push
xlat
mov
mov
add
jno
jnp
jmp
push
push
outsb
jl
jns
pop
mov
push
jns
mov
and
daa
arpl
pop
dec
xchg
mov
lds
push
into
dec
xchg
pop
mov
mov
gs
adc
xchg
dec
rcll
jmp
and
and
sbbb
xchg
adc
int3
add
add
add
add
mov
les
jbe
cltd
sbb
mov
mov
out
sub
xor
and
ret
inc
subb
jmp
in
jecxz
nop
xlat
pop
mov
xchg
and
std
mov
fcmovnu
sub
pop
jmp
jp
xor
inc
dec
loope
repz
push
jmp
movsl
inc
sbb
roll
mov
xchg
jg
cld
cwtl
gs
xor
pop
dec
dec
cmp
sub
sub
mov
lret
mov
pop
or
into
add
xchg
js
jg
subl
add
xchg
jb
dec
fnstcw
push
pop
cpuid
mov
popa
adc
dec
sar
push
imul
mov
arpl
daa
scas
out
shll
scas
aas
movsl
int3
fs
repz
pushl
mov
jle
int
pop
adc
inc
adc
sbb
mov
nop
pusha
sbb
cmc
mov
dec
divb
test
testb
fistps
sbb
std
mov
adc
es
cs
mov
dec
sub
leave
adc
fcomps
xchg
or
mov
stos
addl
int3
add
into
add
shll
mov
xlat
jp
jg
or
repz
mov
jle
popfw
add
shl
mov
aas
mov
cmpsl
paddw
mov
je
fcomps
test
mov
jmp
jmp
push
lcall
loopne
push
lock
movsl
mov
ss
and
push
pop
divb
jb
lock
push
out
push
add
add
add
add
add
add
out
outsl
ss
dec
setno
sub
add
stos
jp
add
and
jecxz
xchg
add
pop
push
cmp
pop
jae
sarl
dec
cmp
lock
sub
push
lods
sti
int
push
jns
adc
mov
push
pop
fistps
aam
xchg
jg
jl
mov
imul
in
or
mov
insb
inc
add
bound
es
add
add
add
shrl
pop
lret
cltd
xor
in
dec
mov
push
fildll
fnstcw
lcall
sahf
movsb
xor
std
int3
pop
add
clc
lods
pop
push
adc
jmp
pop
call
mov
mov
mov
push
aam
fcoms
cld
cli
icebp
leave
sbb
xlat
cmc
call
mov
xchg
aam
inc
mov
mov
mov
movsl
sub
and
sbb
outsl
jns
std
jo
call
xorb
repz
mov
push
and
jnp
sahf
fcoml
add
add
shrl
roll
xor
adc
jg
sbb
je
loope
cmp
out
icebp
psubsw
push
sub
jmp
lock
cmpsl
outsb
outsb
lds
or
test
loop
loopne
mov
cs
sahf
loop
cli
out
and
jo
sub
or
lret
fstps
aaa
push
out
jns
fs
xchg
mov
js
mov
add
add
add
add
add
xchg
mov
arpl
lret
cmpsl
cli
jae
shll
sarl
notb
xchg
jns
xor
mov
and
and
scas
sti
xor
fsubrs
js
daa
mov
rorl
mov
dec
ss
gs
sahf
std
cmp
fistpll
push
mov
les
mov
and
or
mov
pusha
or
adc
fmul
jecxz
imul
xor
and
mov
and
and
and
add
mov
leave
adc
cmp
jp
add
xor
add
add
add
add
and
jne
jmp
add
inc
sbb
out
fstps
jmp
xor
mov
int3
add
add
add
out
cmp
or
xor
fbstp
imul
mov
aas
mov
loopne
es
adc
sahf
test
push
push
icebp
out
jecxz
mov
int3
add
add
add
add
add
push
in
imul
dec
jge
addr16
xorb
in
inc
sbb
jecxz
or
test
imul
xchg
xchg
mov
or
or
sbb
lret
push
shll
fildll
mov
cmp
dec
gs
aaa
sarb
mov
int3
int3
imulb
add
add
add
add
add
jb
xchg
sbb
ds
or
push
xor
mov
fwait
mov
and
les
mov
xchg
jae
mov
mov
hlt
outsl
sub
and
inc
adc
mov
jp
outsl
dec
imul
aaa
jae
cmpsl
sarl
test
add
add
add
add
add
cmp
jmp
jecxz
cld
xchg
xchg
push
mov
xchg
mov
mov
xor
mov
dec
popf
mov
scas
andb
adc
movsb
push
mov
jl
ljmp
or
ljmp
aas
fsubrl
test
xchg
addr16
nop
add
rcrl
in
es
mov
or
jl
pop
cli
out
cld
iret
and
pop
inc
imull
cmp
sub
incl
incl
incl
jmp
shlb
mov
mov
xorl
adc
test
mov
adc
dec
or
std
ja
jmp
adc
cmpsl
xchg
and
insl
loopne
rolb
shlb
hlt
aam
popf
rorl
int3
add
add
add
add
add
add
cli
je
adc
scas
or
das
cmp
shlb
pop
repnz
test
stos
mov
mov
inc
mov
add
add
or
adc
mov
das
dec
sub
ss
sbb
mov
cmp
or
jbe
dec
outsl
mov
mov
cld
scas
pop
jo
pusha
outsl
mulb
push
pop
in
fidivrs
mov
mov
add
sbb
xorl
out
outsl
shl
cs
mov
not
push
xchg
call
stos
out
out
pushf
fwait
jle
push
xchg
pusha
fs
hlt
mov
cmpsb
cld
icebp
jecxz
hlt
dec
repz
cmp
inc
cwtl
mov
inc
inc
cmp
outsl
cs
repnz
nop
add
add
mov
outsl
out
mov
int
sahf
setle
neg
scas
jecxz
jno
adc
cld
cmp
ss
cmpl
push
xchg
js
xlat
mov
or
ret
test
sahf
push
sub
mov
add
add
add
add
enter
hlt
sub
stos
xor
stos
hlt
lock
loope
or
divb
stc
movsb
push
movsb
sbb
rol
jle
xchg
push
jg
int
std
ret
test
mov
rcrb
adc
mov
insb
outsb
out
addb
arpl
dec
pop
insb
and
cwtl
xlat
int3
jl
lock
sub
mov
shrb
outsb
pop
jge
adc
mov
mov
mov
ja
mov
andb
inc
incb
and
fs
push
dec
cmpsl
xchg
lret
and
es
mov
aam
push
sbb
jg
push
mov
and
and
and
mov
rcrl
std
stc
xchg
mov
in
ret
pop
es
into
pop
fs
push
push
clc
iret
add
push
lret
loopne
and
inc
mov
xor
das
ja
into
ds
sbbl
or
mov
jo
jbe
jmp
inc
lahf
rep
xchg
inc
pop
sahf
and
cmp
add
fdivrp
sbb
add
mov
pop
cmc
adc
and
mov
pusha
mov
add
push
sub
jmp
ljmp
mov
xchg
bound
fwait
mov
imul
ret
int3
and
nop
add
cmc
sbb
xchg
lcall
sti
push
inc
add
add
add
add
add
add
add
pusha
int
jle
jmp
mov
xchg
test
mov
mov
push
shlb
int
mov
lods
xchg
adc
arpl
subb
stc
mov
jle
adc
push
shll
jmp
nop
pop
sbb
rcl
or
mov
les
add
add
add
add
adc
pop
test
inc
fists
cli
fdivrs
inc
daa
and
xchg
sahf
push
add
cwtl
add
add
add
ljmp
sbb
icebp
lock
adc
test
test
mov
mov
jecxz
push
push
js
pop
or
imul
movsb
aam
gs
fld
lea
push
in
out
loopne
popf
xor
mov
sub
and
and
and
and
and
cmp
xchg
lods
and
gs
add
add
add
add
jle
push
sbb
test
loope
js
outsb
xchg
fistps
aaa
and
daa
adc
hlt
pop
aam
sbb
sub
cmp
pop
cld
inc
orl
or
hlt
mov
addb
pop
add
add
lock
mov
add
into
out
cwtl
adc
inc
xchg
cmp
push
lock
adc
cmp
arpl
scas
out
jb
xchg
lcall
inc
mov
push
lods
adc
test
shl
in
dec
test
loop
mov
inc
ja
fstpl
aam
in
repnz
test
lret
or
add
nop
mov
andb
out
inc
mov
lock
movsb
push
cmpsb
mov
mov
dec
pop
int3
mov
cmp
add
sahf
sti
or
ficoml
xchg
mov
mov
gs
pop
dec
jp
mov
jb
or
aam
dec
iret
popa
adc
pop
add
add
add
add
add
add
add
jb,pt
push
inc
aaa
cmp
dec
push
in
das
and
mov
ja
out
inc
decb
adc
jmp
jmp
xchg
pusha
mov
in
inc
inc
gs
jbe
imul
push
mull
pop
mov
xchg
sub
scas
scas
ret
stos
sahf
loop
xorb
data16
mov
jg
rorb
mov
inc
lea
mov
mov
fsubr
movl
add
add
add
add
xor
lods
mov
test
dec
fsubrs
mov
inc
sbb
xor
xchg
mov
lret
sub
rorl
xlat
xor
cwtl
test
xchg
sub
mov
aaa
and
pop
es
movb
xor
inc
mov
jbe
repz
rolb
lods
jp
sub
cmova
push
and
sbb
das
or
sbb
jle
sub
pop
mov
icebp
adc
push
jmp
aaa
jg
incl
incl
incl
incl
incl
incl
jl
or
jmp
cmpsl
fs
dec
aad
push
aam
dec
loopne
lcall
scas
mov
test
mov
mov
aaa
jae
or
cmp
ficomps
dec
sub
xor
mov
mov
addr16
and
push
sti
sub
xchg
cmp
and
aas
cmp
and
push
clc
mov
jmp
or
ror
div
rcrl
aaa
cmpl
incl
sub
mov
and
xor
mov
xor
dec
jb
inc
pusha
movsl
daa
lods
xchg
sub
shll
pop
ret
jne
or
cwtl
mov
and
sub
or
jp
rolb
sbb
ljmp
adc
rcrl
jge
ds
sbb
xor
adc
out
ss
test
mov
mov
in
pop
xchg
add
dec
mov
icebp
in
cmpsb
mov
push
cmpsb
mov
inc
add
leave
mov
add
test
push
or
add
add
add
add
call
adc
iret
push
imul
outsl
pop
jnp
xor
loopne
lods
into
sub
addr16
sbb
pop
or
cwtl
insb
push
push
cld
pop
fs
jmp
incl
and
and
and
and
inc
xchg
mov
sub
mov
sub
pop
pushf
jb
mov
rorb
int3
fmuls
mov
test
pop
fcoms
push
sbb
idivb
push
jb
xor
sar
jae
jmp
adc
and
push
mov
cmpsb
add
add
jns
mov
inc
lods
ljmp
push
fistl
sub
call
add
mov
stos
dec
inc
pushf
inc
scas
cmc
jo
inc
ss
mov
roll
push
add
imul
mov
mov
or
jg
mov
mov
mov
and
gs
sbb
jne
out
adc
and
xchg
mov
mov
int3
add
jns
xchg
ja
jge
jbe
out
inc
mov
and
cmpsb
dec
cmpsb
sti
inc
popf
icebp
xor
iret
sahf
or
jns
mov
rorl
test
push
mov
lcall
xor
jp
lds
push
in
xor
xchg
icebp
add
ss
cld
loop
xchg
sub
and
xor
or
out
xlat
and
rcrl
cmc
xchg
push
dec
jae
jno
inc
add
add
add
ja
mov
mov
add
add
mov
shl
loope
jbe
push
sub
push
sbb
outsl
aaa
lret
xchg
test
sbb
inc
xor
repnz
rorb
fnstcw
lcall
add
add
add
add
faddl
mov
mov
dec
iret
dec
push
aam
push
clc
push
mov
inc
nop
add
xor
lret
mov
repnz
mov
cmp
call
push
dec
sub
cmp
adc
gs
movsb
lods
mov
adc
das
hlt
push
xor
sub
xchg
cmp
xchg
into
pop
xchg
push
and
les
cmc
adc
clc
sbb
int
xchg
sub
pop
inc
and
dec
sbb
iret
daa
ss
cld
sub
jge
call
out
add
sbb
mov
mov
movsl
clc
loopne
mov
out
mov
sub
lock
inc
jno
push
pop
xchg
scas
mov
add
scas
sarl
arpl
insl
in
repnz
or
cld
bound
test
lds
dec
jnp
addb
add
add
add
add
add
add
rorb
jp
test
cmp
push
jbe
std
pop
xchg
dec
stc
nop
inc
jbe
xor
mov
aas
push
and
pop
lods
test
and
and
and
and
and
scas
push
jne
int
cmp
push
and
div
es
adc
adc
clc
xor
and
jbe
gs
fs
iret
sbb
mov
daa
jp
test
js
jmp
and
mov
push
xchg
sti
repz
cmp
push
adc
loope
inc
jnp
fcomp
cmp
test
mov
lea
mov
orl
int3
add
add
cld
jns
icebp
cld
and
push
xchg
and
push
xchg
xor
and
or
adc
sbb
sahf
xchg
ss
inc
mov
pushf
jno
sbbb
stc
or
jo
adc
mov
sub
inc
out
js
xor
mov
jns
cmc
int3
inc
loope
outsb
xchg
jge
add
add
add
add
add
ljmp
movsb
pop
cld
dec
mov
adc
out
mov
cmpsb
out
ss
sbbb
dec
mov
pop
out
xchg
rcll
std
rcrl
push
loopne
jecxz
push
dec
xlat
sub
into
test
cmp
jae
outsb
push
adc
cwtl
cli
xchg
out
fimuls
loop
in
mul
adc
fld
mov
and
imul
mov
loope
lret
jno
addr16
mov
pop
xor
mov
and
and
and
and
and
and
xor
ljmp
and
cmpsl
pop
fs
int3
mov
jg
fs
ffree
leave
or
fldt
hlt
mov
and
fmulp
movsl
repnz
xchg
push
pop
push
ja
inc
sub
movsb
cwtl
xor
stc
test
xchg
jnp
mov
jnp
int
push
cmp
outsb
dec
mov
scas
icebp
mov
push
dec
xorl
outsl
out
stc
mov
add
add
add
jle
push
imul
sbb
fcoml
push
bound
fucom
loop
popf
inc
jnp
push
fisubl
lods
push
or
incl
incl
incl
incl
pop
jmp
jo
loope
out
pushf
lods
or
outsb
mov
xchg
adc
sub
or
lods
jge
xor
mov
mov
jmp
in
hlt
mov
scas
jmp
nop
add
js
pop
cmp
repz
dec
fnsave
out
xor
out
fidivrs
push
add
inc
mov
test
and
cld
dec
out
fwait
hlt
inc
cmp
cmp
mov
scas
push
icebp
sub
in
push
cmpsb
push
dec
repnz
pop
test
mov
xchg
aam
mov
sbb
pop
movsb
iret
inc
xchg
leave
push
out
add
jge
rorl
pop
notb
rcr
cmp
mov
pop
and
mov
sub
test
pop
sub
inc
cmpsb
aaa
xchg
aas
dec
in
jbe
adc
push
in
test
or
int
es
add
add
add
add
add
pop
icebp
xchg
addr16
push
xor
mov
sub
fwait
movsb
mov
shrl
ljmp
icebp
repnz
mov
cmp
xor
pop
and
imul
in
adc
cmp
aad
call
sbb
call
jo
scas
cmpsb
aad
or
xlat
enter
inc
add
add
add
add
add
add
add
mov
aad
push
and
sub
cwtl
jbe
sbb
aad
mov
jg
push
dec
subl
xchg
cwtl
shr
inc
fimull
jnp
xchg
add
xor
aas
cli
lret
sub
mov
add
fdivr
stos
pushf
inc
cwtl
cmp
rolb
shlb
dec
frstor
repz
jbe
inc
dec
add
scas
cmp
in
dec
pop
add
add
jecxz
dec
mov
cmpsl
lock
fwait
js
push
pushf
into
movsb
add
xchg
mov
sbb
xor
mov
je
dec
and
push
movsb
cmpb
out
enter
jle
fstps
jae
or
push
sbb
arpl
shrb
out
outsb
fwait
ds
jg
add
sbb
dec
xlat
pop
fiaddl
imul
sub
sahf
lods
inc
xchg
dec
mov
iret
xor
loopne
lret
sbb
sub
stos
stos
filds
stos
sar
dec
das
adcb
nop
add
lahf
xchg
lret
ja
int
cli
mov
repnz
out
and
and
and
and
and
and
pop
aaa
mov
ljmp
test
sub
push
mul
stos
or
or
adc
pusha
mov
pop
inc
fimuls
stos
bound
add
fcompl
cli
hlt
push
inc
js
in
sub
frndint
push
xchg
dec
loopne
push
mov
insb
push
inc
stos
or
aad
imul
xor
cmc
into
and
fisubs
mov
add
mov
lods
dec
fistl
scas
movsb
jg
pop
loop
xor
stos
testb
pusha
pop
inc
adc
mov
pop
cwtl
xlat
insb
jmp
xor
cld
cmp
pusha
in
dec
inc
in
fs
out
mov
push
pushf
xor
ret
push
ja
push
rorl
push
adc
lods
dec
cwtl
jg
add
add
add
add
add
add
add
in
je
sti
into
push
jl
dec
push
push
jns
outsl
jo
jo
je
add
popa
js
jae
arpl
and
add
add
add
add
add
pushl
inc
add
fldl
add
add
dec
fldl
add
add
add
add
pop
fiadds
add
loopne
add
add
sub
add
ljmp
add
add
loope
add
add
mov
add
insb
xor
add
add
dec
loopne
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
add
inc
filds
add
add
loopne
add
filds
add
filds
add
filds
add
loopne
add
loopne
add
loopne
add
add
add
add
loop
add
add
add
loop
add
add
add
push
loop
add
add
xor
add
and
add
push
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
add
dec
loope
add
add
pop
loope
add
add
add
add
and
add
loope
add
loope
add
add
add
add
or
add
adc
add
xorb
adcb
add
push
add
addb
add
mul
add
or
add
and
add
add
add
mov
add
jle
add
data16
add
loopne
add
add
add
je
inc
outsl
outsb
jae
insb
gs
add
push
dec
inc
dec
xor
cs
insb
add
ret
add
gs
push
gs
imul
jne
add
mov
dec
jo
outsb
push
push
push
outsl
imul
mov
dec
jo
outsb
push
gs
imul
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
push
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
gs
push
gs
imul
jb
popa
je
push
gs
imul
add
je
gs
imul
jne
add
cmp
push
gs
arpl
imul
imul
arpl
add
je
outsb
je
imul
insb
push
add
lar
imul
jb
imul
dec
popa
outsb
fs
gs
add
push
gs
popa
insb
jne
inc
js
add
loopne
push
gs
outsb
jne
dec
gs
add
dec
outsb
imul
push
arpl
imul
imul
dec
add
popa
jb
push
gs
imul
inc
imul
gs
add
push
jb
arpl
jae
outsl
imul
add
add
gs
imul
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
addr16
jne
jb
push
popa
insb
jne
inc
js
add
in
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
dec
insb
gs
gs
outsl
outsb
je
imul
arpl
add
gs
outsb
imul
add
add
dec
outsb
imul
add
or
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
xor
cs
insb
add
push
push
inc
push
popa
imul
je
jo
gs
jbe
outsb
je
add
push
push
xor
xor
fs
insb
add
add
push
push
push
inc
insb
outsl
jae
push
gs
gs
add
add
push
inc
outsb
jne
gs
je
push
gs
imul
add
push
dec
jo
outsb
push
gs
gs
add
push
push
push
inc
push
dec
xor
cs
insb
add
cwtl
add
insl
insl
outsl
jbe
add
gs
je
add
add
outsl
insb
add
mov
insb
outsb
add
rolb
je
insl
add
rolb
je
outsb
arpl
add
arpl
add
pop
add
gs
add
data16
imul
add
jo
outsb
add
add
jo
imul
add
aas
xor
inc
pop
push
inc
pop
inc
pop
add
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
pop
ja
insl
fs
outsb
add
addr16
popa
imul
add
add
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
addb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
push
je
jb
jne
dec
outsb
outsw
push
add
pop
insb
je
popa
les
add
push
jo
cmpb
mov
fdiv
out
imul
mov
mov
fistpll
mov
lahf
loopne
mov
test
sub
int
in
cmc
cmpsb
pop
jp
mov
shrl
push
push
pop
mov
jp
push
mov
push
adc
out
and
popf
xchg
xor
pop
cmp
fstl
adc
xchg
popf
xor
imul
inc
mov
inc
or
adc
lret
pop
fistpl
add
es
outsl
push
out
sbb
sbb
rorb
sahf
cmp
adc
ds
sub
sub
cli
loop
xlat
lret
pop
mov
sub
adc
inc
testb
mov
xor
iret
inc
pop
jne
dec
faddp
shll
jecxz
int
sub
pop
or
sbb
jo
xchg
cwtl
adc
mov
insl
mov
outsb
mov
testb
das
cmp
xor
sbb
aam
outsb
out
scas
or
jno
adcb
in
jns
loope
mov
pop
insb
adc
jne
xor
ss
lcall
jl
sub
xor
push
fnsave
mov
test
jecxz
xchg
mov
and
mov
filds
call
sub
je
mov
rclb
hlt
cmc
stos
and
mov
jecxz
pop
mov
mov
aaa
std
mov
sbb
scas
add
ds
adc
ds
lods
dec
jns
dec
ljmp
adcl
mov
fcomps
sub
and
cltd
push
adc
inc
push
sub
pop
cmovae
bound
add
jl
es
pop
mov
repnz
bound
fadds
shlb
mov
imull
test
sub
jl
mov
arpl
mov
cmp
sbb
xchg
cwtl
icebp
inc
fwait
mov
xor
pop
addb
nop
add
push
mov
inc
fdivrl
mov
ret
xchg
sbb
sahf
test
sbb
and
andl
xchg
mov
lahf
loop
jns
scas
sub
and
inc
ret
test
gs
adc
lret
ror
and
dec
mov
and
loope
movsb
stc
dec
xchg
xor
adc
daa
or
ret
and
xchg
mov
mov
lahf
jbe
mov
and
inc
inc
das
inc
lock
sub
push
sbb
add
xchg
cmc
int3
xchg
mov
repz
mov
scas
pop
and
xchg
pop
and
xor
leave
add
sub
xor
ret
pop
and
outsl
sbb
xor
and
mov
jae
aaa
push
and
pushf
andl
in
fs
xchg
mov
mov
dec
ja
sbb
imul
xor
adc
and
adc
js
mov
mov
mov
lods
cmp
inc
xchg
add
shl
inc
dec
push
test
movsb
jne
rclb
lret
daa
xor
lret
and
push
mov
daa
xor
mov
shll
push
inc
cmp
jae
mov
mov
jecxz
int
cmc
mov
and
inc
mov
xchg
sahf
and
push
mov
cmpsb
xchg
inc
and
sub
mov
push
sub
mov
adc
dec
inc
mov
popa
push
mov
xchg
pop
pop
mov
and
adc
fstpt
mov
repnz
lret
inc
gs
push
adc
cs
outsb
dec
nop
les
sub
mov
adc
add
test
push
int3
aas
jp
pop
add
and
insl
repz
fmuls
jp
rorl
cld
addl
adc
xchg
jbe
scas
sbbb
mov
jne
iret
ret
popf
out
roll
dec
and
stos
lods
add
lods
xor
pop
lods
push
xor
and
or
fs
push
jmp
pusha
and
sub
add
sbb
adc
in
fiadds
sub
sbb
cmpsl
cmp
addr16
mov
scas
test
pop
je
add
jge
arpl
arpl
mov
jecxz
fwait
mov
pop
mov
daa
adc
js
xor
mov
cmp
sub
fimull
dec
jge
test
into
pop
mov
add
je
dec
es
seta
xor
jp
dec
cmpsb
in
push
mov
faddp
dec
pop
adc
push
cli
shlb
cmpsb
cld
fisubs
imul
fdivrl
and
jb
adc
mov
mov
insl
xchg
es
ficompl
addr16
aam
jecxz
sbb
mov
aad
lret
jb
int3
mov
test
fcompl
jl
mov
push
leave
adc
ss
ljmp
sub
add
push
mov
jb
rcrl
cli
dec
fbld
daa
iret
shll
cmpsl
insb
mov
pushf
cmpsl
je
aaa
loop
push
movsb
cmpsl
jl
add
out
aas
lret
fcos
pushf
push
mov
ret
movsb
addr16
addr16
mov
pop
sbb
imul
add
rcr
and
mov
loop
fwait
pop
jnp
aad
dec
pop
fistpll
mov
repnz
in
dec
fnstcw
das
fcmovnbe
imul
inc
fldenv
aas
mov
cmpsl
in
data16
lds
adc
cmp
xchg
push
inc
mov
push
out
andl
inc
jne
lea
daa
jo
mov
adc
loope
mov
in
and
sub
in
rcrl
mov
mov
mov
mov
insl
inc
mov
hlt
mov
mov
jmp
cld
aam
mov
lahf
cld
sub
in
ljmp
mull
adc
andl
je
jmp
imul
call
mov
inc
and
das
mov
mov
mov
adc
rclb
push
fwait
and
test
call
aam
pop
mov
stos
or
sarb
in
xchg
sub
sub
and
je
dec
sub
imul
dec
sub
mov
adc
mov
jb
lcall
dec
adcb
enter
jp
arpl
les
fnstsw
mov
rclw
sub
xlat
stos
in
scas
ret
push
js
dec
mov
jmp
cmp
or
cmp
or
inc
insb
test
in
xor
sahf
mov
mov
jnp
push
test
inc
lret
loop
jmp
roll
sub
mov
xor
add
mov
lcall
mov
mov
std
sub
lock
fbstp
dec
sub
lret
sub
daa
and
rol
xchg
shrl
mov
nop
scas
int3
in
push
nop
xor
out
push
jl
push
stos
lock
out
push
inc
xchg
push
stos
sarb
inc
dec
pop
stos
or
push
pop
fs
push
stos
dec
repnz
push
push
stc
cmpsb
mov
imul
sbb
mov
in
cmc
in
add
and
push
hlt
cli
fisubrs
cs
fnstsw
ja
push
xor
lret
push
sub
xchg
sbbl
cmp
mov
hlt
dec
mov
std
movsl
push
arpl
mov
jmp
add
add
add
add
add
add
add
jnp
mov
push
push
scas
or
and
aad
stos
push
lods
mov
movsb
in
sarl
movsb
icebp
jb
aas
in
jl
hlt
stos
or
ss
adc
jp
sub
orl
outsb
jnp
cwtl
push
jmp
cmp
out
inc
push
jecxz
mov
leave
mov
sbb
xor
jge
lods
jle
mov
dec
rorl
nop
jl
mov
xor
aad
aas
into
push
cltd
stos
pop
mov
insb
fistpll
cmp
repz
cwtl
or
mov
movsl
mov
and
cmp
rcrb
cmpsl
mov
jb
mov
mov
sub
adc
mov
inc
fiadds
jmp
xor
add
loop
xchg
mov
adc
fidivrl
lret
lock
lea
imul
lea
sub
xchg
aas
inc
aad
sub
rolb
sbb
or
and
nop
sbb
push
test
mov
jnp
mov
mov
push
push
cltd
pop
cmpsl
xchg
push
outsl
pushf
fistps
lcall
loope
add
inc
sbb
push
mov
mov
cmp
pop
repz
nop
adc
sbb
ret
mov
js
inc
mov
add
add
add
cmc
lods
adc
sbb
mov
stos
mov
es
fwait
shrb
mov
out
push
add
add
add
je
or
sbb
inc
mov
and
xchg
inc
cli
sub
scas
xchg
fimuls
or
shrl
jecxz
jl
jmp
nop
mov
pop
scas
stc
xchg
inc
push
test
fldt
leave
xor
pop
pop
and
in
add
push
call
popf
pop
push
mov
mov
mov
and
mov
cli
lods
cmpsl
push
jne
cli
sbb
mov
or
mov
pop
das
mov
in
pop
mov
roll
cld
gs
inc
fistps
push
in
and
and
and
and
and
and
fsin
outsl
fsubs
out
outsb
pop
insl
mov
push
xchg
mov
jp
cs
adc
je
xchg
lods
loopne
sbb
mov
add
loopne
loopne
push
add
push
xor
sub
push
ret
sub
movsb
jae
test
sub
add
add
add
mov
dec
cmp
cmp
mov
data16
xor
mov
push
mov
in
fildll
jl
jo
sbb
inc
fcmovbe
outsb
inc
or
jg
or
cld
idivl
mov
push
mov
dec
and
cmp
test
movsb
insl
mov
lret
nop
push
clc
lds
test
mov
imul
adc
add
add
repz
cmp
mov
or
in
cmp
in
push
in
push
pusha
cwtl
std
push
xchg
ljmp
leave
dec
jns
xchg
out
hlt
popf
mov
push
push
mov
lods
fmul
add
add
aas
testl
cmp
xor
into
dec
mov
pop
daa
xchg
jns
add
lock
hlt
test
or
cmp
and
das
xor
add
mov
mov
sub
repz
lods
sub
inc
sub
cwtl
dec
pop
ret
jno
iret
jb
jne
cmp
ss
int3
add
add
add
jge
xchg
jns
rorl
in
dec
cmp
sbb
jmp
es
xchg
pop
inc
rolb
xor
pop
cltd
stos
cmc
mov
pop
das
push
mov
js
out
insb
push
out
lahf
in
push
dec
add
add
add
add
add
out
mov
dec
dec
shlb
fdivl
inc
push
and
imul
sub
roll
or
jmp
lods
and
imul
loopne
cmp
sahf
mov
xchg
and
int3
add
add
add
add
add
add
dec
ja
cs
es
mov
out
sub
in
cli
sub
xchg
imulb
jae
fldl
or
mov
mov
adc
lret
test
mov
jb
out
push
das
scas
and
ds
mov
call
and
jmp
out
leave
fisubs
cmp
outsb
scas
popa
test
jo
roll
paddusw
lcall
mov
filds
cmc
or
pop
cmpsb
sub
loop
xor
dec
xor
je
add
out
dec
scas
mov
jle
mov
adc
add
add
lods
add
dec
mov
dec
dec
pusha
loopne
dec
and
xchg
sbb
ja
cmp
in
test
loopne
and
xchg
leave
mov
mov
pop
test
scas
aam
sbb
in
in
pusha
mov
rcrl
loop
mov
add
sbb
lds
cmpb
push
jmp
imulb
or
pop
stos
test
inc
xchg
adc
cmpsb
push
adc
push
clc
test
xor
inc
xchg
out
mov
or
data16
sub
clc
pop
cld
dec
rcrb
pop
lret
jle
mov
push
dec
arpl
lret
dec
jno
ret
mov
data16
cmpsb
iret
adc
push
pop
fldt
aas
xchg
popa
std
outsl
divl
push
insb
push
rcrl
and
and
jne
das
or
pop
adc
mov
mov
dec
mov
mov
sub
mov
std
add
add
add
add
add
add
xchg
xchg
les
or
mov
add
lahf
sub
js
cmp
mov
test
stos
lahf
stos
add
and
incl
push
sbb
cld
enter
xor
sub
pop
mov
in
xchg
es
pop
sahf
push
lods
mov
sbb
mov
cmp
inc
movsb
or
add
data16
sahf
sarl
push
push
cltd
bound
jmp
clc
pusha
adcb
xchg
int3
in
sub
je
outsl
lcall
mov
jbe
inc
outsb
xchg
jo
out
adc
jne
popa
mov
arpl
jbe
sub
inc
adc
cmp
mov
roll
sub
push
mov
shlb
fsubrs
add
add
add
add
add
pop
fldl
repnz
out
jle
adc
leave
jb
push
jo
jb
pushf
lret
inc
inc
jg
mov
add
mov
jb
das
xor
loope
out
pop
clc
inc
stos
mov
mov
ret
mov
add
pop
pop
arpl
sti
cmpsb
jle
mov
add
mov
adc
and
and
and
and
and
and
mov
mov
mov
jmp
cltd
and
idivl
repz
jne
cli
adc
sahf
adcl
push
mov
sahf
imul
or
sub
mov
imul
stc
adc
out
push
add
push
lret
pop
arpl
arpl
sbb
popf
pusha
inc
or
fldcw
add
outsb
stc
pop
fsubl
std
push
lret
pop
push
mov
pop
jno
xor
inc
sbb
mov
dec
filds
sbb
jo
lods
sub
ror
cmp
fs
bound
cmp
sub
pop
add
xor
push
push
jmp
add
add
add
inc
shrl
mov
mov
ljmp
stos
mov
adc
sahf
aaa
lret
stc
icebp
sbb
mov
push
mov
sbb
addl
and
mov
add
mov
cmpb
imulb
repnz
jle
jmp
sub
loopne
ret
pop
push
hlt
in
sub
lret
xor
stos
out
inc
arpl
xor
and
ret
cld
adc
rcrb
cmpsl
mov
xor
loope
mov
sahf
inc
and
aam
jno
sub
mov
fwait
addl
mov
out
mov
and
and
and
ja
xchg
stos
repnz
sbb
fwait
add
mov
and
outsb
inc
cmc
inc
xchg
ret
push
pop
add
cmp
jo
insb
into
movhps
sub
add
add
addr16
xor
xchg
mov
pop
insl
enter
inc
inc
jmp
add
push
xor
pushf
mov
daa
shrb
aas
leave
enter
das
sar
add
int3
xchg
lret
out
inc
filds
in
pop
and
insb
push
mov
sbb
stos
xchg
jno
sub
es
and
pop
jbe
or
int3
jge
movsb
ret
out
js
int3
add
in
fistpll
out
pop
mov
lret
add
add
add
add
push
outsb
cmpsb
inc
mov
push
lret
and
inc
call
nop
lods
jg
xchg
fldl
cld
mov
mov
out
jmp
inc
ja
jecxz
add
stc
xor
mov
cwtl
jno
sahf
cltd
dec
inc
inc
bound
xchg
lea
subb
insl
rcl
jp
mov
sbb
fdivrl
inc
mov
add
add
add
call
fcoms
hlt
pushf
mov
dec
xor
shr
push
xor
pop
jb
daa
adcb
sti
loope
lret
push
in
add
clc
jns
cmpsb
jp
clc
mov
cmp
jb
sub
push
cmp
xor
xor
popf
pop
push
mov
add
std
sub
adc
adcl
or
lahf
cmp
enter
cltd
xor
ds
cmc
lahf
test
iret
lods
loope
mov
pushf
fldcw
xor
cmpsl
push
clc
jbe
repnz
ljmp
movsl
mov
pop
or
and
test
inc
sub
jl
popf
lds
jns
bound
int3
add
add
add
test
jmp
push
lock
loope
out
icebp
fistpll
sbb
cmp
repnz
ds
data16
icebp
aas
stos
dec
test
and
fsincos
fstpt
jne
aam
adc
mov
insb
push
cld
mov
pop
adc
fs
mov
fisubs
sar
shl
add
shlb
lret
and
stos
call
and
lock
push
adc
xchg
clc
daa
fbld
andb
pusha
sbb
push
dec
jmp
test
sbb
loop
lret
addb
stc
adc
add
add
add
add
add
add
add
dec
jge
xchg
leave
xchg
pop
orb
rcl
movl
mov
jp
xchg
cmp
inc
jle
cmpsl
repz
aam
jp
add
les
mov
and
jne
dec
xchg
je
je
ret
jne
mov
mov
ret
out
lock
loopne
popa
mov
dec
in
xor
push
mov
loope
lea
sub
and
cmp
jl
cmp
cli
jge
inc
push
nop
add
add
cmc
sub
mov
inc
dec
fidivs
push
add
fsts
xor
daa
sub
adc
movsl
mov
sbbl
sahf
adc
int
pop
jbe
sbb
pop
mov
inc
in
in
and
stos
mov
fs
and
cmc
jl
jno
xor
add
sbb
scas
pop
movsl
sub
mov
adc
fidivs
push
cmc
jbe
dec
and
push
cmp
testl
loopne
inc
fsubl
pop
push
pop
loope
popa
xor
leave
mov
sbbb
and
and
and
and
int3
call
sub
inc
push
mov
mov
int
popa
jecxz
das
fldl
aad
loopw
cmpl
sbb
mov
lods
not
stos
xor
repnz
int3
xchg
sub
mov
and
push
hlt
addl
lret
sbb
movsl
icebp
pop
mov
mov
loop
xchg
cmpsb
jecxz
imull
fadd
jl
sbb
dec
scas
dec
les
jb
es
add
add
add
cmp
loopne
ss
fldl
fwait
cltd
das
ljmp
xchg
jecxz,pn
xor
std
push
ds
cmp
fs
sub
addr16
and
and
and
and
and
sahf
loopne
movsl
add
iret
jns,pt
cmpsl
lds
hlt
mov
cmpsb
xor
cltd
and
push
cmp
add
fdivrs
adc
bnd
mov
hlt
jns
push
push
outsl
bound
and
movsl
lods
mov
fistpll
lret
xor
and
incl
clc
fbld
xchg
xor
mov
ss
cwtl
jge
dec
cmp
lahf
andl
pop
cmc
jp
ret
popf
es
adc
xlat
inc
mov
dec
nop
loop
aam
jg
and
and
and
fstps
scas
cmpsb
test
push
xor
test
mov
xor
push
sahf
mov
cmp
and
or
mov
jns
adc
add
or
mov
out
fisubl
adcb
lods
inc
add
mov
dec
push
test
inc
mov
shlb
test
js
bound
subb
sbb
fildll
fldcw
aas
dec
pop
xchg
mov
nop
fsts
dec
add
add
add
add
add
aas
add
int
jno
dec
movsb
aam
enter
xlat
adc
in
arpl
jg
inc
xchg
sub
xchg
pop
sub
nop
jecxz
adc
jno
mov
fldenv
sub
lds
js
xchg
shlb
cwtl
popf
cmp
push
adc
or
pop
add
jb
orb
jp
sub
cmc
test
mov
sbb
jg
jno
sub
and
pop
int3
aam
adc
je,pt
add
jae
cld
inc
mov
mov
pop
xlat
add
mov
int3
add
add
add
add
add
add
mov
inc
xchg
cmpsb
nop
icebp
mov
mov
push
mov
fadds
add
jl
inc
pop
add
cli
pushf
cmpsb
shlb
test
pop
jnp
out
pop
xchg
or
adc
jecxz
mov
mov
mov
lret
rclb
loopne
out
jns
and
or
test
clc
cmp
out
sbb
jae
jge
imul
jnp
loope
fnstenv
mov
or
mov
or
add
pop
test
sub
mov
xor
sub
pop
xchg
push
push
rcrb
add
add
add
add
add
mov
rorb
and
loop
cmpsb
push
mov
cmp
add
and
lds
push
popa
jne
pop
pop
adc
mov
andb
push
and
cmp
pop
jno
pop
adc
cld
in
ja
xchg
sub
out
gs
push
stos
xor
out
ja
jmp
loopne
mov
aas
icebp
add
inc
rol
push
ret
jbe
enter
and
inc
out
jge
test
femms
stos
mov
int3
dec
cld
push
dec
jge
jge
into
lcall
nop
add
add
call
xor
je
aad
and
int3
add
add
add
add
add
xchg
scas
das
insl
stos
in
pop
jmp
mov
imul
pop
test
cmp
fildl
decl
adc
stos
repnz
rolb
inc
int3
and
mull
sub
jns
mov
test
scas
sub
leave
in
fidivs
or
xlat
gs
aad
jae
push
cmc
cltd
stc
push
inc
xor
cmp
mulb
pop
test
push
lret
aaa
dec
pop
daa
add
lds
nop
add
sbb
mov
icebp
nop
stos
mov
arpl
daa
fimuls
nop
or
lock
lock
aas
lahf
js
push
lods
and
cmc
adc
je
jb
add
std
dec
out
loopne
lahf
scas
cmp
sub
rorb
in
pop
or
pop
and
add
pop
adc
push
shrb
or
xor
fucom
add
std
jp
mov
jne
imul
scas
xor
inc
push
mov
scas
imul
sbb
xchg
sub
sbb
cmp
repz
adc
pop
test
jnp
sub
xor
fstps
outsb
es
mov
push
xlat
sbb
sbb
incl
incl
incl
incl
ljmp
andb
dec
in
push
je
js
mov
shlb
or
sub
cwtl
cmp
push
out
and
fidivrl
xchg
loope
xor
sbb
xchg
xlat
inc
jb
test
cmp
out
ret
inc
call
clc
lret
sar
loopne
sbb
push
and
pop
mov
jl
dec
dec
out
add
out
sbb
add
add
add
add
jg
dec
dec
push
inc
sub
fldcw
cmp
mov
pop
sub
fs
jae
icebp
mov
mov
sub
mov
repz
fsubs
cmp
bswap
into
dec
xchg
incl
incl
incl
incl
out
das
fs
aaa
jge
push
mov
into
pop
jle
jno
mov
imul
call
cmpsl
xor
mov
inc
and
xor
loop
out
cld
fsubrl
or
incl
incl
incl
incl
incl
xor
std
mov
fucompp
nop
lcall
inc
mov
out
je
add
xchg
loope
out
jl
aam
push
adc
test
jecxz
pushf
push
nop
sbb
pop
pushf
xchg
add
add
add
add
mov
xchg
mov
mov
ret
push
call
jmp
xor
in
loop
xchg
pusha
pop
test
xor
push
cmc
js
mov
dec
outsl
push
jb
loop
push
jbe
or
dec
ret
jo
xor
notl
leave
mov
and
push
dec
add
mov
xor
scas
popa
movsb
dec
adc
mov
and
pushf
mov
popa
mov
fs
sahf
cltd
xor
add
popf
cmp
and
fsubs
imul
dec
fsubl
fs
stos
dec
icebp
mov
fs
addr16
nop
mov
and
and
and
and
and
and
and
bound
aas
push
or
add
mov
test
push
xchg
inc
lret
pusha
xor
and
mov
adc
add
add
add
add
add
stos
sub
inc
fstl
repnz
fxch
jbe
mov
pop
cmpsl
xor
in
push
push
mov
push
movsl
xchg
push
jecxz
les
icebp
ds
ss
xchg
lods
lret
hlt
push
adc
adc
push
mov
jns
addr16
cmp
push
stc
clc
mov
cmp
imul
test
call
mov
incl
mov
adc
es
sub
mov
adc
mov
pop
push
or
and
add
xcrypt-cfb
cmpsl
out
fnstsw
or
pop
std
push
or
xchg
and
adc
icebp
mov
add
cmpb
out
incl
incl
lcall
aam
mov
xchg
rorb
fldl
cmp
jno
in
lcall
popf
sbb
jecxz
cmp
nop
fadds
push
mov
aad
imul
cmpsb
mov
repnz
mov
add
test
dec
or
dec
fstpt
ds
inc
sub
ret
rclb
popf
xchg
mov
add
pop
push
xor
pushf
daa
jp
dec
cld
jle
jnp
dec
sarb
xlat
sti
pop
jb
jae
pop
sub
adc
insb
sti
push
sub
sub
dec
ret
addl
int
push
and
clc
jmp
and
and
and
and
aam
cmp
insb
lcall
movsl
push
push
mov
sbb
inc
aas
pop
je
push
mov
or
mov
xchg
adc
nop
push
cli
out
lds
adc
movsb
loope
pop
xchg
lcall
shll
cwtl
lret
in
insb
nop
sti
negl
xchg
fs
dec
pop
and
sbb
mov
test
jae
in
mov
ljmp
shrl
mov
adc
add
push
mov
mov
lock
xor
push
test
hlt
pop
or
orb
cmp
out
fisttpll
mov
adc
xor
movb
adc
or
sti
aas
and
mov
fwait
pop
subl
imul
push
jle
fidivl
stos
push
mov
mov
int
aam
incl
incl
incl
incl
incl
incl
jmp
pop
add
sbb
gs
inc
test
fcompl
push
inc
add
nop
add
mov
sub
ret
outsl
sbb
out
push
addr16
das
or
or
fcomps
cmpsb
sahf
push
dec
dec
les
int3
add
add
add
add
add
add
test
fwait
hlt
dec
sub
and
xor
fldl
cmp
mov
call
mov
add
sbb
xlat
ret
push
xchg
pop
repz
scas
psraw
sahf
sahf
xor
mov
dec
sbb
lahf
lahf
push
cmpsb
je
mov
inc
dec
add
jae
and
jno
int3
or
mov
adc
jmp
push
mov
cmpsl
rol
add
add
add
add
arpl
xchg
dec
je
jg
lcall
repz
or
shll
xchg
in
in
mov
pushf
ljmp
out
or
mov
xor
xchg
inc
fistl
lcall
push
pop
inc
es
jle
movsb
rolb
mov
pop
shrl
xchg
pop
loope
shrl
pushf
jg
pusha
push
cmpsb
paddusw
not
and
shll
ja
add
add
add
add
add
dec
adcb
lock
cmc
mov
push
shr
sahf
popf
test
int
push
jns
inc
leave
jne
cmc
push
lret
add
jb
clc
adc
jmp
pop
dec
ret
dec
cs
cwtl
arpl
xor
lds
push
jb
popa
mov
or
or
pop
pop
cmpsl
adc
pop
lock
pop
jnp
mov
pop
xchg
int3
add
add
add
add
add
add
add
jbe
stos
mov
push
cld
add
sub
xchg
and
addl
stc
pop
frstor
stos
adc
mov
mov
fidivrs
insb
adc
push
stos
or
jns
mov
int
dec
jle
fsubs
popf
sbb
loope
clc
pop
lds
fisubs
add
add
add
add
add
gs
push
bnd
cli
in
and
test
sub
push
pop
aad
or
and
and
or
in
je
int3
add
add
add
ljmp
ret
jbe
push
ljmp
ja
lahf
push
sub
jl
sub
xor
movsb
aas
fcompl
mov
pop
pop
xor
mov
mov
aaa
pop
les
imul
xchg
add
xchg
fcmovbe
icebp
xor
mov
shll
data16
dec
scas
daa
fwait
mov
sub
xchg
add
add
add
add
add
jnp
mov
mov
cmp
sbb
outsl
cmp
pop
std
adc
icebp
iret
ret
cs
sarb
cmp
fs
xor
imul
xchg
xchg
test
rcll
sti
or
lock
decl
and
shlb
pop
adc
sbb
int
fsubs
outsb
adc
and
and
les
dec
sub
xchg
push
or
pop
push
lahf
pop
pop
push
mov
mov
cmp
or
add
add
add
add
add
addl
stos
cmp
add
mov
sub
xor
loop
addl
mov
push
daa
lds
jo
push
sub
cli
add
mov
fs
pop
in
cltd
test
sbb
inc
pop
lret
mov
jle
jecxz
gs
pop
xor
int3
mov
or
mov
mov
and
xor
aam
jo
mov
test
inc
sbb
movsb
ja
lret
stos
rcll
fstl
sbb
in
imul
arpl
into
cmpb
jg
out
pop
sbb
pop
and
or
int3
add
add
add
mov
jp
fwait
je
push
fisttpl
push
call
popf
out
testb
and
and
and
and
ljmp
iret
lcall
pop
inc
jne
sbb
ds
sbb
push
test
stc
pop
in
jp
mov
push
mov
push
push
dec
mov
enter
cli
push
outsb
add
jo
fcmovbe
sub
cmpsl
jle
cmc
outsb
test
xchg
loope
xchg
mov
mov
repnz
mov
mov
lock
pop
popf
cmp
int
push
imul
inc
pop
popa
pop
mov
xchg
xchg
xchg
sub
pop
adc
inc
repnz
add
add
int3
jmp
lcall
jge
mov
mov
imul
sbb
decb
mov
test
push
rorb
scas
hlt
jp
imul
idivl
adc
sbb
and
adc
in
sub
push
out
dec
in
js
mov
mov
cmp
xor
sub
daa
xor
sbb
stos
pop
push
movsb
insl
mov
mov
push
lds
loope
lea
sub
pop
addl
cmp
inc
in
pop
cld
mov
mov
lcall
jo
adc
orl
xchg
add
add
scas
push
cmp
add
and
fbld
xor
jmp
sbb
dec
sbb
jbe
inc
sub
push
mov
inc
mov
sbb
cld
or
lods
ret
mov
incl
mov
lock
aas
fucomip
jne
and
inc
into
and
dec
mov
imull
inc
in
or
add
mov
adc
rclb
aaa
outsl
mov
sub
push
mov
and
roll
scas
mov
nop
icebp
push
inc
mov
das
inc
fwait
push
iret
int
mov
adc
push
mov
cmp
sbb
ds
mov
add
add
add
add
add
ret
xor
inc
iret
mov
fstpt
fmull
fistl
outsl
call
push
inc
mov
fldcw
fucomip
lods
loopne
adc
call
call
cmc
dec
mov
mov
mov
cmp
in
aad
sub
adc
adc
orl
cmpsb
mov
ret
and
adc
loop
lret
sbb
jle
mov
pop
add
add
add
add
add
add
add
test
mov
cmc
aam
mov
add
add
add
add
sti
mov
scas
xor
adc
mov
mov
cmp
xor
mov
repnz
xchg
sub
mov
fwait
daa
imul
dec
sub
mov
sbb
in
jnp
test
add
pop
dec
mov
pop
fldenv
jb
pop
test
mov
fnsave
and
and
xor
loopne
int
mov
xchg
add
add
add
xchg
repnz
repz
int
jns
sbb
xor
movsb
loop
inc
jne
cwtl
sbb
fisubrl
xchg
and
sbb
ljmp
xor
xor
pop
cli
or
in
shlb
insb
cltd
mov
mov
xchg
shlb
or
lcall
mov
inc
add
add
add
add
sahf
aam
sbb
int
inc
adc
mov
adc
xor
stc
push
orb
lds
xchg
sub
pop
or
add
cmp
xchg
das
out
cmp
jle
jle
cmpsl
mov
mov
int3
jb
cmp
fwait
stc
outsb
out
lahf
adc
add
add
test
add
div
dec
hlt
cmp
arpl
decb
int3
adc
xor
add
rcr
push
hlt
push
notl
pop
cmp
sbb
out
je
fdivs
dec
xchg
out
mov
movsl
shlb
pop
sub
mov
cwtl
sbb
sbb
add
add
add
ficomps
out
leave
aas
adc
in
push
xchg
add
add
add
add
add
add
insl
negl
push
mov
pop
ds
sarb
loopne
sub
sti
je
add
addb
or
sub
pop
add
xor
jecxz
xchg
out
sub
and
fdivrl
jg
je
lods
sbb
adc
xchg
cmpsb
ja
mov
loopne
mov
jmp
pop
mov
stos
ret
test
ljmp
xchg
in
pop
xlat
mov
inc
fld
xor
nop
add
inc
mov
adc
inc
dec
inc
das
jg
mov
xlat
rcll
jle
xor
xor
ja
jns
jbe
xlat
adc
xor
call
mov
adc
and
jg
lods
adc
dec
lret
jle
add
ljmp
rolb
or
pop
jl
dec
mov
sti
int3
xchg
inc
outsl
mov
jns
or
dec
jne
or
lock
repz
ja
xchg
dec
adc
std
repnz
dec
mov
dec
cmpsl
inc
imul
aas
in
movsb
daa
loopne
jne
cmpsb
mov
dec
pusha
pop
test
mov
or
push
adc
sbb
push
out
fadds
mov
sub
sbb
ja
pushf
fwait
mov
test
cmp
adc
inc
flds
leave
lret
insl
adc
jge
aad
add
adc
adc
into
test
int3
push
pusha
inc
xlat
xor
daa
cld
test
adc
scas
repz
movsl
mov
pop
mov
fdivl
xor
pop
insl
sbb
in
ret
inc
dec
mov
fucom
insb
ljmp
jmp
ror
ja
jno
pop
cmp
jecxz
sub
cmp
int3
add
add
add
test
outsl
mov
push
jmp
mov
mov
and
scas
cmp
or
addl
sbb
pop
popf
push
dec
xchg
or
inc
sbb
sahf
jmp
inc
cmp
and
and
and
and
and
and
mov
dec
dec
rolb
cmp
inc
jbe
add
fwait
shll
push
inc
daa
adcl
mov
or
sub
cmpsb
fimull
jo
icebp
and
push
xlat
dec
push
loope
imul
push
imul
out
mov
pop
xchg
mov
insb
js
adc
xor
sahf
lock
dec
and
sbb
test
pop
dec
lret
dec
in
call
cmp
into
mov
std
lret
cltd
mov
adc
ret
daa
push
cmp
and
and
and
and
and
and
and
lret
push
sbb
xor
sub
jo
cmp
btl
push
nop
xor
fsubl
std
orl
xchg
aam
popf
jae
adc
std
cmp
lds
rorl
cmpsl
mov
push
addb
dec
ljmp
and
ds
popa
or
mov
cmpsb
inc
lahf
or
cmpsb
xchg
mov
add
in
jp
jl
test
inc
jecxz
mov
xlat
call
es
loopne
mov
lret
js
daa
xor
and
add
int3
add
add
add
add
add
add
xchg
ficompl
jne
sub
cmp
iret
inc
and
rcrl
jns
test
inc
pop
push
mov
xchg
outsl
out
inc
xchg
lahf
add
mov
jns
xor
js
dec
in
fxch
or
inc
xchg
int3
add
add
add
add
mov
xor
repnz
sub
lods
clc
cmc
cli
xor
sbbb
scas
mov
fbld
ja
xchg
mov
push
adcb
push
movsl
push
out
scas
inc
hlt
mov
xchg
mov
push
mov
daa
int3
jmp
jmp
push
stc
divb
sbb
pop
adc
fsubrs
sbb
adc
pop
push
push
adc
aam
jns
icebp
decl
repnz
add
mov
cmp
out
pop
jbe
sbb
mov
cmp
hlt
lds
push
sub
int3
add
mov
sub
out
js
in
orb
stos
mov
sub
int3
pop
test
adc
mov
and
jl
loope
mov
into
and
pop
or
aaa
fdivr
leave
jge
adc
rcl
or
sahf
nop
add
add
add
pop
lcall
xlat
cs
sub
adcb
leave
mov
mov
fs
mov
outsb
inc
daa
xchg
lret
fidivrl
stos
adcl
dec
subl
add
add
xchg
movsl
jecxz
std
fcoms
or
mov
lret
push
addr16
test
clc
incb
mov
cmpl
fistps
outsl
or
ja
shlb
add
cmpsb
mov
into
jb
ret
insb
insl
jae
pop
sub
inc
sbb
add
add
add
add
add
add
add
lock
jmp
add
pop
loope
repnz
test
xorl
mov
imul
mov
mov
orl
jae
mov
int3
pop
adc
test
fwait
inc
loop
lret
add
adc
shll
ror
ja
test
sbb
and
fwait
sub
ret
add
add
pusha
push
add
orb
out
jb
imul
test
gs
mov
cmpsl
pop
push
pop
pop
add
leave
jecxz
stos
jbe
fldenv
mov
push
cmp
hlt
aaa
dec
jl
mov
cli
enter
jle
loop
dec
mov
jb
loope
sbb
pop
sahf
fdiv
mov
mov
mov
fucomp
inc
movsl
cmp
nop
mov
int3
add
add
add
test
jl
or
jne
repz
pop
jno
arpl
pop
pushf
cwtl
inc
mov
and
mov
insb
data16
xchg
inc
cwtl
jb
pop
add
add
imul
jl
mov
pop
add
add
add
mov
push
call
mov
insl
sahf
fwait
mov
je
pop
mov
andl
mov
ret
xchg
lock
cltd
test
mov
sbb
insb
inc
subl
lds
jns
data16
or
mov
nop
mov
leave
fdivl
jae
xchg
popa
rcrl
nop
pop
sbb
xchg
jb
cmpsl
jp
lea
popf
loopne
cli
popf
sub
insb
fbstp
cmp
and
and
and
and
and
and
scas
xor
enter
cli
xchg
insl
pushf
inc
mov
popf
mov
xor
push
fsubp
orl
pop
cmp
xor
add
jbe
outsl
cmp
mov
cltd
jge
xor
inc
popf
pop
dec
insb
mov
incl
incl
pushf
les
cltd
sbb
cld
xchg
test
push
in
cmp
fadd
xchg
xor
scas
xor
push
insb
shrb
add
pop
pop
rclb
movsb
push
les
scas
lret
enter
jnp
mov
leave
push
or
popf
clc
das
clc
mov
mov
add
int3
or
push
lds
sbb
fistpll
xor
test
push
lret
cmc
mov
or
pusha
andb
test
faddl
jp
jae
jae
dec
lods
imul
outsb
lds
fcompl
int3
add
add
add
add
pop
pop
ljmp
xlat
sti
mov
mov
arpl
push
xlat
movsb
sbb
push
add
mov
test
fldl
mov
or
scas
arpl
in
cwtl
xor
and
cmpsl
adc
jae
mov
sub
in
das
sbb
pop
xchg
aas
flds
push
fdivrl
add
mov
xchg
sub
sub
rorl
stos
lock
or
xor
jle
push
mov
mov
incl
incl
sti
lods
inc
in
sbb
push
inc
xor
aam
test
fistpll
cmpsl
fs
in
mov
push
mov
in
stc
cmpsl
mov
cmp
xchg
push
jae
shll
jp
gs
add
jmp
ja
and
notb
add
add
add
xchg
pop
sub
movsb
sub
sti
xor
sub
adc
pop
aam
nop
subb
insb
jl
pop
gs
call
mov
out
loopne
xor
mov
pushfw
add
mov
xor
imul
and
popf
pop
out
pop
sbb
loope
add
add
add
add
add
add
and
push
in
xchg
testl
out
fiadds
mov
xor
incl
cmp
xchg
cmp
repz
dec
mov
int3
xlat
jle
lds
stos
mov
mov
imul
pop
gs
and
mov
adc
nop
add
add
aaa
mov
jge
popf
fldl
sbb
cld
dec
pop
ljmp
sbb
cld
cmp
data16
cld
or
les
cmp
sub
adc
push
cltd
imul
inc
pop
std
jbe
add
sbb
imul
inc
lcall
testl
aad
adc
xchg
loope
int3
add
scas
xlat
inc
xor
mov
push
js
adc
xchg
jl
sub
int3
add
add
push
sbb
adc
xchg
lods
mov
add
add
adc
mov
cwtl
inc
ja
inc
aas
xor
stc
adc
adc
xor
ds
lcall
sub
jge
fbstp
sub
popf
fmull
dec
shll
sub
arpl
add
jb
pop
insb
jge
jl
fidivrl
lahf
mov
or
dec
aam
mov
idivl
adc
mov
and
cmp
loopne
mov
pusha
mov
addr16
mov
push
mov
mov
dec
movsl
ret
sbb
icebp
mov
roll
mov
mov
xchg
scas
pushf
scas
cmc
roll
inc
and
in
cmp
daa
shlb
adc
fidivrl
sub
f2xm1
ds
dec
sbb
inc
or
hlt
jo
es
sbb
and
aas
push
jmp
ljmp
inc
and
mov
str
add
add
add
add
add
add
fdivrs
mov
outsl
cmp
movsb
pop
and
push
mov
pop
sub
jmp
gs
or
cs
icebp
scas
pop
ficomps
cltd
mov
in
test
pop
shll
add
add
add
xor
imul
dec
xchg
out
add
dec
mov
and
and
and
and
and
and
in
jge
mov
inc
stos
mov
push
fbstp
mov
adc
repnz
xor
pop
add
or
int3
add
add
add
push
mov
sbb
popf
icebp
in
cmp
mov
stos
and
and
or
les
push
lods
in
rorl
xor
and
sub
incl
incl
incl
inc
data16
or
testl
mov
mov
mov
push
mov
cmp
daa
ficompl
into
or
ret
pop
dec
icebp
jnp
add
ja
inc
adc
shll
add
sbb
pop
sbb
push
out
push
test
cmp
add
mov
xchg
xchg
int3
push
ja
shl
leave
pop
jns
mov
test
repz
push
mov
mov
cmpsl
movsbl
and
push
mov
mov
pop
dec
mov
les
xchg
std
adc
sub
nop
add
sub
inc
insl
negl
in
jb
jo
mov
pop
cmpsl
mov
enter
or
mov
dec
testl
sub
clc
sti
andl
cmp
outsb
lock
sti
rcr
test
add
add
add
call
out
aad
lods
cs
pushf
jecxz
movsl
mov
bound
ljmp
and
pop
or
sti
mov
jae
hlt
rorl
sarl
inc
jno
xchg
xlat
subb
push
jbe
cld
arpl
push
in
scas
in
popf
frstor
int3
sbb
mov
int3
add
test
cltd
cmp
cmp
roll
cmp
mov
aam
aam
push
push
mov
fsub
pushl
loop
repnz
imul
inc
mov
daa
andb
cmpsl
push
push
aam
dec
push
int
iret
push
pop
jo
dec
fistl
fcomps
sub
xchg
and
ja
dec
sbb
jp
scas
outsb
xor
adc
mov
lahf
pushf
insb
sahf
shll
subl
cmc
add
mov
cmpsl
iret
mov
mov
mov
adc
and
jg
lret
js
pop
inc
fwait
aad
jbe
push
mov
hlt
mov
clc
mov
push
insb
imul
add
add
add
push
shlb
add
xorb
push
andl
ret
sbb
xchg
aam
stos
pop
mov
pop
xor
rclb
adc
and
push
xchg
or
jmp
mov
popa
in
rclb
xor
imul
fs
icebp
xor
inc
jbe
jg,pn
call
jl
pop
jbe
imul
push
pusha
shrb
mov
call
add
add
add
add
add
add
out
ret
arpl
and
cmp
cmp
pusha
adc
sub
jno
xlat
call
xchg
cmp
mov
adc
bound
daa
add
mov
xchg
test
sub
aam
cltd
fadds
mov
xor
xchg
repnz
sbb
js
cmpsl
pop
call
cmp
lods
dec
jl
jbe
or
punpcklwd
adc
mov
jbe
mov
es
push
xchg
incl
incl
incl
incl
incl
jl
xor
xor
out
adc
xorl
push
pop
inc
inc
jge
out
sub
mov
out
pop
or
sub
cmpl
incl
incl
lcall
dec
out
pop
mov
push
lea
and
imul
in
xor
psrad
mov
mov
repz
jmp
dec
bound
lock
out
jns
sarl
neg
or
in
daa
or
test
push
test
sti
loopne
call
mov
insb
adc
sbb
sbb
aam
push
imul
incl
incl
incl
incl
decl
xchg
divl
xchg
je
fistpll
fldenv
ss
add
enter
data16
cli
in
mov
pop
daa
xchg
mov
arpl
lock
and
leave
dec
inc
aas
fbld
push
jge
xchg
dec
lcall
jmp
cmp
sbb
add
add
addps
sbb
xor
into
adc
sbb
and
jbe
fsts
imulb
repnz
xor
into
arpl
lret
nop
out
sahf
ret
push
iret
and
cmc
loopne
add
add
add
add
add
add
add
cmp
out
repnz
pop
cmp
inc
lods
insb
add
fwait
outsb
dec
inc
or
push
jmp
fadds
outsb
in
lock
and
inc
stos
cmp
cmp
lcall
inc
jns
cmpsl
ja
pop
cmpsl
mov
push
rcll
xchg
aad
and
and
sub
fwait
gs
and
fimuls
mov
fists
pop
enter
adc
pop
out
lods
xchg
cltd
add
add
add
add
add
add
dec
push
xor
shlb
dec
xchg
cs
pop
mov
add
scas
fbstp
aam
rcrb
mov
stos
in
fstpl
lcall
in
in
dec
mov
and
inc
daa
mov
mov
imull
sub
out
adc
movsl
add
add
add
add
mov
sub
sub
xchg
xchg
mov
sbb
rolb
or
int3
xchg
push
xchg
add
add
add
add
add
add
pop
dec
into
add
and
mov
add
popa
inc
ret
cmp
xor
sbb
add
sbb
loop
sbb
je
pop
sbb
es
clc
add
add
add
add
push
push
cs
mov
lods
jns
loopne
inc
movsb
sub
jmp
outsl
pop
add
cmc
je
aas
outsl
pop
stos
call
lahf
mov
mov
test
pop
subb
loope
dec
lcall
ja
in
pop
dec
divb
int3
add
cwtl
jg
inc
jns
cmp
fildll
cmpsb
fistps
inc
sbb
push
das
or
ret
test
mov
and
dec
push
clc
jb
cmp
hlt
add
hlt
sub
in
repnz
inc
and
adc
ss
int
mov
sbb
jge
cmp
or
inc
cmp
fiadds
int3
add
mov
imul
enter
lods
loope
cmp
aad
repz
sub
xor
movsl
xchg
xor
data16
sub
out
mov
adc
sub
jae
hlt
adc
sbb
and
aaa
or
xchg
and
jl
sub
jb
enter
and
lret
adcl
dec
daa
test
rclb
and
sahf
in
cmp
push
push
add
add
add
add
cmpb
pop
jl
out
inc
xor
mov
cmp
push
stos
out
jmp
push
xchg
or
pop
push
xor
push
push
jns
stos
aad
lret
cmp
es
sarb
xlat
pop
sub
jae
or
lods
lds
pop
mov
sub
jecxz
pop
sbbb
xchg
pop
mov
das
inc
add
add
add
add
add
add
add
xchg
inc
pop
jecxz
jae
add
ret
out
mov
negb
in
dec
in
sub
pop
mov
shr
cs
add
add
add
add
dec
mov
aam
outsb
jg
fdivrs
lret
jns
jo
popa
loope
or
dec
mov
push
mov
mov
and
insl
ss
loop
test
popa
mov
cmp
clc
add
jl
push
pushf
mov
add
in
xor
jle
cmp
out
hlt
aam
lret
lods
inc
cs
dec
cmp
mov
outsb
inc
xchg
fcompl
shrl
mov
cld
fdivs
cwtl
movsl
notb
and
lock
in
jo
cmpsl
in
test
xor
ljmp
cli
ficoms
add
add
add
mov
dec
ficoms
inc
in
call
add
test
xchg
xor
movsb
mov
cmp
xorl
cli
push
push
loop
mov
insl
push
sahf
push
dec
jmp
sub
aad
dec
outsl
pusha
xchg
movsl
pop
shlb
mov
adc
popa
scas
idivb
in
in
mov
call
daa
iret
sbb
lods
xchg
adc
repnz
sub
and
and
and
and
and
and
movb
cld
sub
pop
or
cmpsl
bound
jno
xor
in
push
adc
scas
js
mov
out
push
cli
test
and
add
repz
pushf
push
faddl
jne
mull
adc
hlt
mov
movsl
rolb
ja
cmpsb
ljmp
adc
fnstcw
sub
dec
push
add
xor
xor
int3
add
add
add
inc
arpl
push
je
ffree
subl
punpckhwd
es
pusha
xor
add
add
add
add
add
add
add
jnp
je
or
rcr
das
and
pop
mov
shrl
push
sbb
jl
and
jo
cltd
popa
inc
jp
fs
add
jg
sub
or
je
push
mov
jnp
sub
sub
sub
dec
add
sti
xchg
xchg
ds
lea
stc
dec
xchg
sbb
fidivrl
aas
movsl
daa
adc
xchg
mov
mov
icebp
repnz
decb
add
mov
and
and
and
and
and
cmpsb
scas
sbb
pop
loope
movsl
sbb
jp
add
fiadds
pop
imul
inc
sub
sbb
mov
dec
adc
dec
rclb
ja
pop
mov
or
mov
nop
add
add
adc
sub
adc
fs
xchg
pop
fistpll
sahf
lea
dec
out
dec
cs
mov
std
ret
arpl
and
stc
push
push
pusha
xchg
or
xchg
dec
push
arpl
lcall
sti
push
jbe
push
add
cmp
iret
pop
sbb
sbb
popa
rclb
pop
add
outsl
dec
jge
jl
stos
xchg
cmpsb
adc
jmp
add
aaa
ret
cltd
call
pop
in
or
bound
inc
add
add
add
add
add
add
add
stc
rcll
enter
ja
xor
rcrb
jnp
cmpsb
push
nop
jecxz
cmp
xchg
fldz
dec
xchg
addr16
ds
or
cmpsl
fmuls
sti
add
push
mov
jge
inc
stos
mov
aaa
repz
aam
mov
and
and
and
and
and
and
mov
ret
mov
dec
cmc
mov
movsb
sub
loope
mov
test
lods
inc
sub
mov
jns
mov
movsb
ljmp
pop
jne
adc
jno
int
push
out
call
mov
add
std
out
stc
jbe
dec
lret
cld
gs
xchg
xchg
xchg
out
int
mov
cwtl
imul
pop
je
add
add
add
add
add
add
add
adcl
mov
adc
sub
jns
jnp
flds
mov
mov
add
cli
outsl
fildll
mov
inc
cmpsb
sub
xor
gs
fstpt
dec
or
sbb
imul
pop
or
lock
adc
clc
call
dec
add
add
add
add
add
mov
fcoms
sub
sbb
add
shl
xor
push
push
add
sarl
idivb
inc
es
and
rcr
inc
in
bound
add
ja
fcomps
arpl
leave
adc
and
xor
lahf
lods
stos
pand
add
add
add
add
lahf
mov
popf
mov
mov
mov
or
loopne
cltd
xchg
test
mov
dec
add
repnz
mov
mov
push
xor
mov
pushf
mov
cmp
cmpsb
scas
test
pop
push
loop
jnp
jmp
mov
xchg
sbb
incl
incl
rol
cmp
imul
xor
jl
pop
xlat
test
mov
in
mov
cmp
add
cli
pop
jg
and
in
rclb
leave
mov
push
mov
inc
filds
test
fwait
xor
hlt
stos
sbb
cmp
xor
fucomp
fdiv
mov
inc
jo
sbb
pop
bound
push
jge
or
pop
enter
stc
add
out
and
mov
dec
and
sub
sub
lods
mov
mov
and
lods
test
pop
insl
or
mov
push
lock
pop
cmp
insb
dec
and
fcomps
pop
xchg
lock
decb
inc
sub
add
cld
popf
or
out
inc
and
popf
sbb
add
cs
pop
inc
lcall
mov
xchg
inc
gs
icebp
insb
and
jecxz
inc
mov
mov
scas
xchg
lret
push
and
inc
into
push
cmp
lcall
pusha
push
pop
out
rcrl
call
xchg
in
lods
mov
push
and
loop
lret
push
aad
or
push
outsb
mov
cmp
ret
scas
push
cmpsb
nop
push
jmp
add
cmp
and
test
push
inc
hlt
mov
mov
sahf
out
inc
iret
dec
hlt
fdivrs
rorl
mov
jecxz
cwtl
jge
mov
sbb
add
add
jl
adcb
outsl
dec
shr
mov
sahf
int3
enter
or
in
loopne
loope
sarb
pop
in
xor
pop
jmp
sub
sbb
sub
movsb
push
mov
xchg
sbb
fcomi
inc
add
or
cmc
sub
rcrl
add
lock
out
aaa
xor
xor
jl
xor
cmp
cmpsl
xchg
ljmp
xchg
xchg
test
and
add
xchg
cmp
stos
outsl
aas
cld
jae
push
dec
les
orl
jbe
test
push
add
add
add
add
add
add
mov
ja
jge
pushf
les
mov
cltd
dec
jno
jge,pt
jns
jno
xlat
mov
jle
adc
xor
cmpsb
jns
outsl
insl
test
addr16
pop
les
add
int3
dec
dec
xor
fnstcw
or
push
jb
sbb
in
jl
xchg
call
xchg
cli
jp
push
sub
out
out
lahf
out
inc
popf
adc
loope
jo
adc
out
xchg
xorb
dec
mov
jne
or
cmp
ljmp
incl
jmp
dec
adcl
sbb
mov
mov
mov
or
dec
lods
stos
nop
lds
xlat
mov
sbb
pop
loopne
xchg
jg
add
add
add
add
in
out
shrl
mov
bound
orl
pop
data16
punpckhbw
dec
adc
cmc
icebp
mov
cmp
movsl
mov
add
xchg
pop
jge
jl
gs
push
jne
lock
aaa
je
add
lret
out
pop
loopne
sbb
push
aad
scas
mov
bound
les
push
add
xchg
rorb
adc
jg
add
incb
or
mov
sahf
adc
fbstp
test
dec
mov
leave
arpl
push
gs
cmpsl
push
sub
shrl
mov
mov
jb
xchg
loope
sub
incl
pop
jno
in
xchg
and
aas
repnz
movsb
dec
sub
cmpsb
or
jne
pusha
mov
outsb
sbb
subb
lret
dec
inc
pop
xchg
out
jp
push
mov
lods
outsb
jp
nop
push
mov
xor
sub
shr
stos
les
mov
into
jnp
add
int3
add
add
movsl
sbbb
fs
out
add
lahf
push
imul
es
and
lahf
mov
xor
push
xchg
push
mov
test
call
fisubrs
jae
fbld
jge
clc
sbb
dec
xchg
mov
push
push
lret
outsl
sbb
mov
xchg
jg
dec
das
mov
adc
add
push
xchg
xor
and
sub
imul
or
pop
xchg
loop
add
in
sbbb
scas
adc
and
and
and
and
and
and
sbb
sahf
pushf
lret
mov
fldenv
loop
addb
jp
mov
data16
inc
hlt
jnp
outsl
jne
mov
cmp
pop
sub
push
inc
cmp
popa
test
pop
outsb
adcl
data16
mov
adc
push
clc
cmp
repnz
roll
std
sub
add
mov
pop
inc
dec
test
jne
aas
loop
jo
push
mov
xchg
fmuls
enter
push
daa
mov
xchg
inc
ljmp
sub
jle
mov
sbb
outsb
leave
xchg
iret
push
dec
inc
cltd
jp
in
and
cli
xchg
and
and
and
and
push
push
addr16
jb
jne
outsl
mov
cmp
adc
lahf
cmpsl
out
fxch
adc
test
mov
aaa
lahf
repnz
inc
out
outsb
jns
jae
mov
jecxz
out
js
cmp
pop
cmp
call
push
fdivr
ret
or
jo
xchg
add
int3
add
add
add
push
jge
bound
das
adc
xor
cltd
out
lods
inc
pop
stos
sbb
lds
cmpsb
ljmp
fistl
sub
mov
fcomps
ja
xor
mov
pop
add
dec
xlat
sub
xor
jno
inc
mov
cmpsl
incb
ja
mov
jo
fistpll
mov
fsubl
test
push
sahf
jbe
arpl
push
lea
cmpsl
mov
push
push
jmp
negl
fidivl
fistpll
fcoms
in
add
and
call
icebp
out
nop
sahf
sarb
pop
mov
sarb
sub
or
add
add
add
add
add
in
jb
add
adc
adc
push
pop
or
mov
arpl
loope
dec
imul
adc
and
adc
mov
xchg
call
data16
dec
cli
test
add
in
in
outsb
ja
mov
cmp
out
pop
rcrl
repnz
mov
daa
inc
ret
push
je
mov
push
cmp
enter
or
das
pusha
int
add
jle
or
inc
push
push
outsb
xor
bound
jae
into
push
repnz
jbe
nop
add
fsubrs
push
gs
stos
inc
pop
cmc
std
mov
bswap
add
jle
dec
lods
sahf
inc
scas
in
mull
add
add
out
ret
stos
std
data16
dec
imul
idivb
cmp
repz
dec
outsl
shrb
push
sub
and
and
add
and
xchg
pushf
mov
popa
add
or
orb
mov
jno
in
push
add
bound
aam
push
insl
jb
mov
addr16
rclb
and
inc
jl
mov
jne
pushf
stos
add
lcall
scas
mov
and
xor
jge
push
scas
les
dec
cmp
or
mov
popa
pop
dec
inc
sbb
data16
adc
push
jns
jns
and
js
mov
fnsave
xor
test
test
iret
scas
fsub
jmp
mov
and
aas
mov
adc
imul
or
jae
pop
xor
mov
mov
xchg
sub
mov
mov
call
pusha
add
add
add
add
add
add
jo
push
push
loope
adc
fiadds
out
cltd
push
mov
fnstsw
js
jns
push
movsl
pop
stos
mov
xor
cmp
and
cs
cmp
adc
push
lods
xchg
dec
mov
xor
adc
add
lds
cs
jg
and
or
lret
adc
mov
xchg
lea
pop
and
or
sub
adc
cmpsb
sub
jge
test
mov
mov
stc
outsb
out
push
ljmp
icebp
imul
fidivrl
mov
pop
or
cmc
cli
jecxz
add
add
add
add
add
add
pusha
ffree
fwait
lcall
mov
repnz
stos
cmp
add
pop
xchg
stc
std
stos
call
mov
jecxz
outsl
daa
fcompl
in
add
lods
cmc
sbb
scas
out
adc
mov
pop
inc
cld
cmp
adc
mov
mov
call
adc
jne
adc
pop
push
mov
dec
cmpsl
or
inc
or
or
fwait
mov
xor
mov
call
sarl
jg
mov
je
test
outsl
mov
add
add
add
add
fldln2
mov
adc
popa
mov
adc
mov
add
add
add
add
arpl
push
pusha
ret
cli
test
sbb
adc
mov
xor
xchg
popa
push
lods
popf
push
xor
fstpt
sti
rolb
xchg
int
js
cmp
vzeroupper
mov
nop
int3
test
cmp
dec
or
movsl
dec
xchg
pop
push
jg
je
and
mov
pop
push
sub
int
push
int3
scas
test
jecxz
subb
scas
push
stc
jle
ljmp
push
fldl
fsubrs
add
add
add
add
add
add
mov
dec
lahf
fisttpll
lcall
push
cli
jecxz
pop
push
lcall
lcall
dec
xchg
imul
jbe
in
mov
add
xor
aad
or
xor
mov
cmpsl
fbstp
sub
jne
inc
addr16
rorb
lods
test
cmp
adc
mov
das
stos
mov
inc
mov
cltd
fidivrl
jecxz
mov
sbb
in
adc
pop
ret
and
int3
add
add
push
add
sbb
vhsubps
aam
push
mov
pusha
or
aas
pop
jo
movsb
sub
xor
cmpsb
mov
add
sti
add
add
add
add
push
arpl
mov
adc
outsl
xor
add
mov
pop
scas
inc
add
push
push
xor
inc
mov
and
idiv
sahf
mov
fistl
outsb
or
push
mov
inc
add
add
add
add
add
add
xor
js
xor
push
lret
outsb
lds
inc
pop
cmp
or
xchg
andl
sbb
jo
xchg
pusha
mov
pop
pop
and
adc
lahf
mov
push
dec
xor
rcll
insb
cmp
cmp
or
pop
popa
xor
test
add
bound
mov
mov
push
icebp
jl
mov
std
cwtl
mov
xchg
push
ds
dec
add
cmp
dec
test
add
gs
pop
sbb
sbb
fisttpl
mov
cmp
hlt
jno
out
gs
push
insl
insl
loope
mov
int3
add
add
add
add
add
push
ss
test
xchg
add
jge
dec
adcl
cld
testb
xchg
cmpsb
fidivl
in
shlb
fs
in
cs
cmc
sti
cmp
popf
adc
popf
je
jmp
cs
inc
les
jne
lods
mov
imul
and
xchg
js
push
adc
fcmovnb
push
inc
ds
cmpsb
aad
and
je
bswap
mov
test
inc
mov
mov
out
repz
jo
dec
or
push
inc
and
lahf
push
push
xchg
push
test
sbb
jnp
mov
hlt
cwtl
insl
pop
rorl
and
sbb
cmc
add
add
add
add
stos
sub
ja
push
push
jne
pusha
jl
shl
mov
cmp
imul
fsubrl
lahf
mov
push
and
loope
movsl
scas
mov
pslld
xchg
rorb
push
shlb
fistpl
xchg
popa
sub
stos
sub
push
shrl
mov
insb
inc
xchg
or
jns
adc
loopne
sbb
enter
stos
aas
pushf
cmp
in
pop
push
fsubrs
mov
enter
cmp
andl
movsb
mov
f2xm1
out
xor
je
jmp
out
cmpsb
jle
mov
daa
addr16
add
add
add
xor
cmp
cmpsb
cltd
insl
jle
inc
push
lret
or
loope
fidivrl
fcoml
adc
xor
cwtl
mov
dec
lods
xchg
xchg
out
and
cmpsb
imul
lock
and
repz
push
lock
add
add
add
add
adc
and
or
and
mov
inc
mov
shr
rorl
adc
ret
fldt
popf
call
and
pusha
xchg
ljmp
aam
pop
in
test
test
xchg
cmp
jb
fdivrs
lahf
sub
jmp
and
scas
add
out
push
sub
movsl
xor
int
fdivrl
sub
bound
mov
jmp
movsl
push
es
mov
cmpsb
pushf
nop
add
jge
push
cmp
and
in
mov
outsb
icebp
fidivrs
lret
repnz
and
push
unpckhps
add
fiadds
sahf
dec
xorb
inc
scas
int
mov
xchg
sub
in
jae
dec
push
test
pop
sbb
out
stos
sbb
jno
push
mov
ret
sub
imul
adc
inc
bound
and
mov
test
mov
jge
ss
add
add
add
add
add
add
add
lods
dec
sti
sub
js
roll
jg
dec
jns
mov
test
mov
das
mov
add
jge
and
into
mov
pop
leave
inc
jp
les
ljmp
dec
adc
jl
jnp
pop
subl
lret
xor
mov
or
fisubs
loopne
pshufw
xchg
add
sub
lret
ds
push
pop
cs
mov
pushf
sbbl
and
test
cmpsb
cmpb
cmpsb
pop
or
or
mov
cmc
and
or
fdivrl
sub
ret
mov
mov
dec
sbb
movsb
xlat
add
add
add
add
add
add
add
xlat
addl
jne
sub
out
test
pop
xchg
hlt
or
scas
movsb
mov
xchg
add
rcl
cmp
aam
and
ja
xor
cmp
mov
mov
push
outsl
outsb
or
and
imul
test
in
sbb
xchg
cwtl
mov
daa
fadds
data16
insb
pop
cmp
xchg
adc
data16
inc
or
push
push
jecxz
sub
add
add
add
mov
orl
js
test
shlb
call
outsb
in
arpl
enter
mov
mov
sub
sub
hlt
mov
lahf
in
lret
jnp
pop
iret
shl
dec
cmpsl
iret
lods
loopne
leave
lahf
or
pop
icebp
int
fadd
ret
push
mov
or
xor
jbe
xor
test
aaa
pop
or
stos
lds
dec
orl
sti
daa
rcrb
adc
sbb
mov
sbb
cmp
xor
iret
dec
jge
out
jnp
out
in
cmp
stos
xor
mov
push
jecxz
jae
nop
mov
fwait
cmpsb
add
add
add
sbb
jb
mov
out
dec
imul
jb
xor
movsl
sub
clc
data16
pop
cltd
cli
add
pop
sbb
out
push
lods
lods
jo
lods
cmp
es
xchg
push
xchg
pop
int3
xchg
mov
into
loope
std
stos
sbb
adc
jecxz
aas
mov
adc
lahf
mov
push
push
sbb
js
push
mov
xchg
sti
jge
cli
mov
xchg
nop
jb
push
mov
daa
scas
movsb
cmp
cs
sub
cwtl
xchg
xchg
and
jle
pop
shrb
ja
scas
pusha
push
mov
aad
pop
push
test
loop
mov
mull
mov
pop
lock
filds
and
jecxz
in
dec
jne
xchg
icebp
sbb
add
enter
insl
jo
out
insb
push
mov
mov
cmp
imul
adcl
sbb
icebp
adc
sub
ljmp
int
mov
inc
pusha
cmpsl
pop
imul
in
enter
xor
dec
jecxz
inc
mov
lcall
std
inc
mov
mov
xchg
push
push
arpl
rclb
push
sub
sarl
mov
in
add
jl
roll
pushf
sub
dec
pop
xlat
mov
pop
jp
data16
jnp
push
outsb
push
test
sbb
inc
in
jecxz
testl
fwait
mov
pop
jbe
inc
xor
iret
mov
sub
movsl
std
push
mov
flds
divb
dec
push
ror
lock
insb
int
in
addl
add
out
dec
inc
daa
icebp
sbb
jmp
lods
sbb
adc
ret
inc
dec
scas
xchg
cmc
hlt
mov
insl
xchg
ss
aad
clc
add
cmpsb
leave
imul
jne
fisubrl
pushf
popa
jno
stc
loop
jmp
mul
fbstp
lcall
push
jo
xchg
clc
fidivl
mov
push
push
js
xlat
cmp
xchg
xlat
lods
fsubrs
std
lods
in
jbe
add
mov
pop
adc
jno
int
sbbl
pushf
inc
mov
out
aas
xchg
shll
mov
idivb
push
cwtl
xor
mov
pop
sbb
adc
fsubl
adc
dec
adc
insl
sbb
aaa
jno
mov
mov
imul
fstps
mov
mov
call
frstor
lods
inc
loop
xor
out
pop
div
nop
imul
sub
repnz
mov
sqrtps
call
lret
xchg
fdivrs
ret
loopne
in
sub
xchg
les
lret
mov
arpl
sti
mov
sub
cmc
cmp
inc
sub
sbb
inc
ljmp
mov
sbb
lret
pop
cmpsb
popa
jns
insl
aas
jno
lahf
jg
int3
add
outsl
push
loopne
or
jns
scas
and
out
out
or
push
pushl
mov
das
mov
js
jne
addl
rorl
cmp
stc
hlt
mov
and
mov
jmp
fsubs
rorb
add
jmp
pop
das
sbb
andb
fldt
scas
hlt
mov
stc
dec
enter
mov
hlt
cwtl
push
test
ret
mov
add
fnstenv
adc
insl
cli
jmp
push
imul
lods
push
or
ss
out
ret
xchg
cmc
shlb
push
aaa
or
xchg
mov
inc
or
js
mov
inc
jnp
jmp
inc
cld
cmovb
sbb
add
das
fwait
cmc
test
push
dec
or
mov
int
mov
adc
lods
ljmp
shrl
mov
add
mov
or
fnsave
ja
jnp
jb
fisttps
inc
jns
jmpw
and
or
add
mov
inc
adc
call
sti
and
repz
cmp
cmp
push
jmp
repz
sbb
xchg
addb
ret
insb
pop
xchg
fwait
sbb
pop
and
mov
aas
not
xchg
adc
imul
lcall
dec
adc
addl
insb
pop
xlat
xchg
sub
dec
push
aaa
outsl
je
fwait
push
imul
enter
rorl
sbb
cmpsb
rolb
cli
mov
cmp
add
jmp
mov
and
mov
cmc
push
dec
imulb
inc
repz
jo
inc
add
mov
int
mov
jbe
pop
dec
mov
shr
js
mov
stc
mov
and
mov
popa
push
inc
fdivrl
inc
add
repnz
inc
fwait
mov
stos
lret
sbb
stos
insb
adc
clc
aaa
dec
into
repnz
in
das
fcomps
push
dec
push
pop
imul
mov
les
mov
push
push
dec
iret
in
shll
imulb
in
inc
push
popf
xchg
test
ljmp
or
dec
cmp
subb
mov
inc
pop
add
sub
sub
inc
add
mov
jmp
mov
pusha
loop
arpl
hlt
test
sbbl
fwait
sbb
aad
and
daa
push
not
adc
dec
lea
xor
stos
imul
mov
iret
sbb
cld
pop
and
push
stos
repz
adc
add
mov
test
aad
mov
mov
mov
pop
jnp
pusha
inc
pop
fs
mov
adc
sar
in
and
inc
shrl
jbe
push
ds
stos
pop
pop
mov
xchg
xchg
clc
mov
cmp
jae
add
push
lock
mov
les
cmp
insb
pop
jno
mov
add
push
lcall
cmp
aaa
loopne
lahf
and
mov
mov
xchg
lods
mov
call
and
in
push
rclb
jge
ja
sbbb
sbb
ljmp
mov
xchg
test
sub
dec
aad
leave
and
sahf
mov
cmp
mov
push
icebp
sbb
add
xor
dec
insl
sub
jp
fidivrl
sub
sbb
scas
xchg
dec
inc
das
mov
ljmp
lea
dec
or
js
loopnew
mov
inc
mov
jg
ds
repnz
push
pushw
out
mov
adc
mov
fldl
cmp
sahf
or
xchg
or
add
cmpsb
xor
add
fadd
dec
adc
xor
sub
and
xchg
mov
faddp
inc
enter
enter
xchg
out
sbb
std
mov
daa
and
push
out
jno
jb
or
mov
clc
jae
mov
mov
loope
repnz
loopne
mov
insl
movsb
push
jle
arpl
addr16
and
fldt
mov
dec
push
cmp
cmp
hlt
add
mov
pop
pop
jmp
cld
xor
xchg
dec
lcall
repz
lods
cmp
adc
or
rol
insb
cmp
clc
jp
lret
leave
jne
push
jle
xor
mov
aad
or
and
adc
outsb
inc
lcall
mov
out
pop
mov
pop
jge
jne
ja
pop
push
cmpsl
pop
mov
xor
inc
mov
cmp
mov
mov
test
dec
nop
ljmp
and
adc
aaa
xchg
mov
sahf
mov
adc
enter
sbb
pop
out
sbb
data16
add
xchg
mov
pop
daa
jne
adc
jb
jo
xor
xchg
sbb
out
mov
add
shl
ja
arpl
jnp
fs
outsl
outsl
push
iret
cmpsb
jmp
mov
cmc
cmp
rcr
lea
loope
sti
cmp
mov
mov
rorb
testl
insb
xor
stos
fisttps
adc
mov
cli
pop
addr16
dec
and
pop
mov
ds
loopne
stc
in
add
test
push
movsb
xchg
push
sub
jle
subb
in
sub
push
movsl
int3
push
shr
mov
jo
inc
sbb
mov
xchg
das
cmp
fisubrl
scas
mov
mov
fisttpll
in
cmp
in
xchg
daa
jmp
sti
loopne
sbb
and
out
lahf
dec
fnsave
js
pop
lea
mov
std
adc
fisttps
repz
adc
mov
cmp
adc
in
clc
sbb
rcrl
in
xchg
jbe
nop
negl
xorb
pop
jae
out
cmp
pusha
adc
insb
mov
popa
popf
scas
sbb
mov
ret
lock
sbb
cmp
es
cmpl
mov
jb
push
dec
jecxz
fidivl
xorl
lods
adc
or
out
repnz
mov
outsl
fildll
push
jg
jl
mov
mulb
xchg
out
xor
or
js
jmp
fdecstp
mov
dec
jg
test
sbb
cmpsb
xchg
pop
pop
int
ds
dec
data16
rorb
movsl
cmpsb
adc
rcrb
ja
xor
call
ds
ds
fldl
push
dec
add
data16
jmp
xchg
lods
jg
std
sub
mov
mov
xor
fimull
push
dec
cmpsb
cmp
arpl
aas
xchg
push
stos
mov
adc
xor
xor
int
in
mov
mov
xchg
adcl
aam
xor
repnz
cmp
cmp
xor
cmpl
ficoml
popf
push
js
or
mov
sub
or
nop
fldcw
mov
rcl
pop
jp
fcomps
stos
lods
jecxz
xor
iret
int3
dec
lods
out
cmp
in
push
mov
cmp
in
inc
pop
adc
xor
stos
xchg
xor
inc
shr
es
mov
stc
jecxz
leave
sub
imul
pop
ja
out
and
jle
push
stc
in
sti
jge
pusha
aas
scas
outsb
lock
nop
lods
nop
das
in
inc
xor
add
and
sub
dec
cli
bound
and
push
stos
roll
xor
repz
mov
xor
je
xor
test
xchg
bound
shll
repnz
or
gs
es
push
sbb
jae
popa
add
cmp
inc
cli
stos
sub
stos
ret
sub
add
pop
adc
mov
sbb
cmc
or
fsts
push
push
jo
rcl
xor
and
mov
pop
into
aam
pop
dec
sbb
inc
push
mov
add
jp
ret
mov
scas
stos
dec
mov
fnstcw
push
stos
sti
fadd
add
je
out
ficoms
incl
lock
in
sub
roll
scas
mov
pop
repz
es
jae
or
mov
jne
sahf
adc
aaa
insl
adc
lock
ss
or
or
pop
es
mov
sbb
data16
pop
stc
aas
stos
movsl
push
add
into
xchg
dec
aad
push
adc
out
in
xor
pushf
inc
fs
cmpsb
icebp
push
jno
or
jecxz
push
dec
and
push
fidivrl
outsb
fs
and
aam
lods
or
gs
enter
arpl
mov
jg
js
jle
icebp
and
jns
cld
outsl
pop
ja
dec
ja
jp
insb
xchg
push
add
xchg
sub
int
lock
jl
lock
loop
mov
ret
orl
mov
es
jge
push
and
lods
stc
mov
mov
inc
das
loop
test
mov
cltd
stc
mov
scas
lds
mov
push
subb
addr16
cmp
mov
jmp
mov
cmp
pop
movsb
mov
xor
loopne
ds
fsts
shl
bnd
mov
sti
pop
cmp
or
clc
jo
cmpxchg8b
jmp
jb
mov
push
adc
pop
push
aaa
enter
out
vmovsd
inc
or
dec
call
loopne
test
inc
sahf
mov
or
mov
mov
fimuls
push
push
lock
cltd
stos
mov
cmp
pop
cs
scas
psadbw
add
in
push
mov
mov
cmpsl
insl
and
or
push
jge
pop
xchg
roll
inc
pusha
ljmp
mov
xor
hlt
push
adc
pop
rorl
xchg
fists
out
dec
sub
rol
nop
aam
dec
add
mov
imulb
add
ja
dec
icebp
call
pop
cli
pop
cmc
push
ret
mov
or
lret
sub
roll
rcrl
and
popa
jmp
dec
cmpsb
lcall
cmpsb
icebp
or
push
sub
push
inc
jecxz
arpl
icebp
cli
in
popf
mov
pop
out
nop
stos
pusha
stos
aaa
dec
scas
aaa
out
pop
stos
xor
jge
pop
jp
leave
xchg
stc
xchg
test
rcl
mov
push
sbb
out
popf
xrelease
int3
and
movsl
and
pop
inc
adc
ror
mov
loopne
inc
ret
ds
add
lret
roll
aaa
add
pop
int
cltd
and
mov
mov
loopne
push
xchg
push
mov
pop
mov
loop
push
xchg
loope
mov
rcrl
cmp
lea
ljmp
stc
cmp
or
stos
inc
lret
lea
dec
lods
sarb
mov
addr16
dec
jle
dec
xchg
dec
jbe
mov
cmpsl
fwait
shrl
jecxz
pushf
dec
fstpl
ja
ja
aas
jmp
push
dec
repz
lret
sub
adc
jle
fchs
sub
push
roll
les
add
or
pop
dec
jne
loop
dec
push
pop
mov
push
imul
and
mov
lea
or
sbb
in
pop
mov
jne
cmc
leave
pushf
push
xlat
mov
jl
pop
or
fiadds
lea
dec
repz
adc
sbb
nop
inc
ljmp
test
mov
out
fldt
and
inc
push
pop
loope
and
rolb
mov
pop
jnp
mov
push
ja
sbb
cmp
adc
aam
add
sub
icebp
cs
cmp
sbb
cmpsl
lock
mov
sbb
enter
mov
xchg
lret
xchg
lret
dec
fstpl
cmpl
arpl
mov
mov
inc
sub
loop
jns
loop
outsb
stc
push
adc
lods
es
mov
dec
xor
sub
xchg
popa
les
xor
test
inc
es
sbb
push
inc
sub
mov
add
cmp
cmp
leave
gs
sti
mov
imul
jae
cmpsb
adc
push
stos
pop
loopne
fldenv
xor
out
mov
outsl
movsl
mov
push
jno
xor
mov
ret
mov
jg
out
rcl
ret
sub
lret
rcrb
addb
add
cld
out
lea
adc
lods
or
loope
daa
popf
rorl
or
mov
insl
dec
add
jb
or
xor
mov
lret
cmc
sub
lock
arpl
insb
pop
jne
add
add
sub
call
test
jbe
push
xlat
or
jle
test
ret
push
js
or
sbbb
sub
ret
cmpsl
xchg
jmp
jp
nop
popa
add
aam
es
pop
xlat
sub
pop
imul
push
loop
out
popf
repz
and
and
clc
imul
push
push
xor
mov
addr16
cmp
das
pop
cmp
cmpsb
cltd
ja
push
push
jne
test
rol
in
cltd
adc
sahf
pusha
out
lahf
and
popf
test
popa
xchg
cs
fstp
jecxz
aad
aas
and
frstor
inc
vpunpckhdq
push
bnd
aad
pop
sbb
flds
mul
dec
dec
in
mov
or
rol
mov
leave
xor
push
lods
pushf
pop
pop
push
jo
out
lcall
jg
call
adc
dec
mov
add
lcall
adc
es
rcr
add
cmp
repz
imul
mov
cmpsl
or
pop
mov
dec
xorl
mov
xchg
es
clc
sub
push
aaa
mov
jo
sub
or
cltd
jb
sti
inc
inc
mov
pop
adc
iret
jmp
mov
sub
insb
lcall
cld
js
fstp
cli
in
repz
jp
mov
loop
adc
cld
in
scas
movsb
dec
mov
xchg
pop
xchg
ljmp
orb
pop
xchg
sub
pop
sti
xchg
test
stc
cs
imul
add
ret
jmp
cmc
pop
mov
ja
out
lock
enter
cmp
pusha
inc
pop
mov
sbb
or
adc
out
push
mov
dec
int3
pop
insl
jle
cmp
xor
out
push
push
ret
add
loope
sub
ljmp
adc
pop
cmc
js
inc
jle
clc
sub
inc
mov
test
testb
cmp
aaa
aam
lcall
add
xor
dec
inc
scas
mov
test
push
and
jno
les
insl
inc
jge
jae
xor
test
pop
add
pop
cmpsb
mov
sub
cmp
hlt
adc
lret
imul
in
xor
outsl
rclb
jns
jmp
nop
aaa
mov
adc
cmp
test
popa
lret
enter
add
bound
cmpsb
jle
ficomps
outsl
mov
push
mov
pop
data16
pop
aaa
test
and
arpl
adc
adc
stos
ret
nop
les
sub
loope
clc
push
test
mov
xchg
cwtl
sub
push
push
lods
sbb
lds
cltd
dec
dec
fld
jb
out
ret
mov
xor
mov
mov
mov
test
mov
fwait
inc
sarl
sahf
mov
add
mov
cli
xchg
jnp
stos
jne
dec
sub
jnp
mov
mov
call
ljmp
mov
not
aam
jo
dec
and
inc
push
add
push
mov
jno
xor
pop
stos
out
xlat
mov
adc
push
loop
lret
mov
fwait
jno
dec
jmp
outsl
sub
in
fs
or
cmp
movsl
push
pop
les
sti
inc
outsb
inc
jg
push
imul
xchg
popf
mov
and
or
sbb
aas
in
jb
or
mov
lods
into
mov
fdivrl
leave
hlt
std
jmp
fs
mov
aad
pop
sub
inc
add
pop
es
pop
into
imul
lock
sbb
leave
jb
adc
pop
push
lds
jp
mov
adc
repz
mov
mov
loopne
push
pop
cli
fs
adc
scas
fs
mov
leave
add
in
dec
fnstcw
test
cs
mov
inc
xchg
jnp
cwtl
subl
fwait
outsb
ss
inc
xor
aas
aad
movl
lods
rcrb
adc
aaa
lret
test
mov
inc
xor
adc
push
sbb
lret
stos
xlat
lahf
mov
xor
push
rorb
les
push
push
pop
inc
std
int3
rclb
leave
mov
push
lcall
fnstcw
jmp
cmp
xchg
aas
fcmovbe
rcll
lds
sbb
and
outsb
mov
mov
mov
cmpsb
dec
mov
mov
stos
pop
add
xchg
xorl
ja
sbb
xlat
lret
inc
imul
jno
stos
ret
xchg
leave
mov
nop
cmp
pop
adc
jno
or
int
daa
sahf
sub
jnp
sub
xchg
popa
pop
arpl
icebp
pop
pop
addr16
mov
adc
in
shlb
add
data16
jnp
orb
inc
call
insb
mov
enter
es
mov
and
in
or
stc
mov
mov
loope
cmp
lods
xor
xor
jbe
sub
incl
icebp
lahf
into
outsl
dec
orl
push
sub
or
sarb
ret
int3
xchg
sarl
push
dec
mov
sbb
xchg
imul
add
xchg
or
mov
adc
pop
fsubrs
popf
fwait
inc
sbb
or
jno
add
pop
bound
fisttps
push
mov
adc
jecxz
fistpl
ret
test
mov
fsts
imul
pusha
inc
pop
outsb
les
inc
inc
or
xchg
xchg
dec
scas
pop
pop
aas
xlat
cltd
mov
call
push
sarb
sbb
aam
fdivrs
loopne
int
xor
mov
in
mov
sahf
sti
daa
fwait
dec
shl
sub
in
jmp
in
pop
and
inc
leave
pop
cmp
pop
inc
inc
sbb
fsub
sub
push
add
pop
jp
lds
push
fdiv
push
xchg
inc
sarb
or
xor
and
fbld
jecxz
test
dec
ret
rcll
stos
cmp
fs
mov
add
nop
jnp
sub
jge
mov
iret
movsl
stos
dec
dec
jae
repnz
and
sub
insl
or
inc
dec
inc
cltd
testb
pop
and
aaa
jne
push
xor
jecxz
aad
out
sbb
pop
das
cmp
sbb
dec
mov
jo
lret
dec
popf
xlat
mov
sub
jecxz
shlb
lret
movsl
out
xchg
push
rolb
adc
leave
je
mov
sbb
adc
pop
shrb
inc
sahf
or
int3
jmp
xor
push
adc
jb,pn
arpl
test
jg
xorb
xor
cmp
jecxz
push
push
int
icebp
dec
pop
sarl
int3
stos
in
xchg
cmpsb
add
pop
aaa
dec
or
dec
or
dec
mov
sbb
dec
mov
jmp
pop
mov
add
pop
sub
sub
xor
pop
stos
dec
shr
push
sub
jae
xchg
fisubrs
sub
sbb
sbb
add
xor
stos
jge
cwtl
and
das
push
push
push
lea
cmp
sbb
jno
call
inc
cwtl
shlb
sbb
cmp
outsl
jl
loope
imul
popf
outsl
push
lret
shl
jmp
mov
aam
mov
mov
ret
xor
ljmp
pop
or
mov
mov
int3
lds
push
outsl
stos
jl
scas
adc
scas
js
sub
mov
js
dec
adc
cmpsb
inc
ficompl
cmpsl
sbb
or
xor
sbb
sbbb
xor
dec
insl
xchg
scas
out
inc
movsb
lret
rolb
sub
out
inc
jmpw
cli
sub
cmp
ss
imulb
imul
in
test
adc
add
sub
mov
cmp
sub
sahf
xchg
inc
push
cmp
mov
rolb
lcall
iret
mov
stos
mov
shll
in
stos
cs
pop
jno
out
add
shlb
vfmsubadd213pd
adc
sub
cwtl
sbb
add
outsl
add
add
add
add
outsb
add
jo
add
add
add
add
add
