aad
stc
jl
cmp
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
dec
lret
mov
lock
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
cwtl
je
mov
enter
xor
add
mov
mov
pusha
call
add
les
mov
in
push
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
sbb
jmp
stc
es
xchg
dec
sti
ljmp
sar
arpl
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
and
cs
mov
dec
cmpsl
jns
repnz
loop
loopne
adc
adc
outsl
fildl
jne
push
sub
adc
lea
pop
in
dec
out
push
xor
jl
sub
pop
aaa
scas
jne
stc
dec
adc
push
outsb
test
mov
dec
enter
dec
sub
sarb
or
sbb
stos
xlat
inc
aad
mov
out
mov
inc
dec
rcll
dec
xchg
xor
sbb
mov
adc
pop
jbe
jl
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
add
xchg
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
inc
int
jl
dec
pop
and
negl
jnp
jmp
pushf
fs
mov
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
cmpsb
sub
or
push
cwtl
rol
or
mov
cwtl
jae
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
jb
stc
gs
int3
mov
jnp
push
nop
mov
add
in
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
jg
jmp
ret
push
pop
push
pop
sub
lods
mov
mov
cli
and
add
add
ret
add
and
add
add
outsb
and
add
and
add
and
add
add
cwtl
and
add
and
add
add
pop
and
add
add
lods
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
lret
add
and
add
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
and
add
add
ret
add
and
add
add
outsb
and
add
and
add
and
add
add
cwtl
and
add
and
add
add
pop
and
add
add
lods
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
lret
add
and
add
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
gs
inc
imul
gs
jo
imul
inc
gs
jb
jbe
push
jns
gs
add
insb
jae
jb
outsb
inc
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
jb
push
inc
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
fs
outsl
outsb
jae
insb
gs
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
insb
jae
gs
popa
insb
jne
add
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
add
fs
imul
add
mov
push
insb
gs
icebp
add
imul
jb
je
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
sti
add
insb
gs
jae
dec
jne
gs
add
inc
gs
je
imul
push
add
add
inc
gs
outsl
imul
jbe
jae
add
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
push
imul
gs
add
add
je
push
outsl
outsl
insb
add
jle
inc
gs
imul
gs
add
add
je
push
outsl
insb
outsl
jb
aaa
add
ja
push
fs
jae
push
arpl
add
outsb
push
push
popa
je
add
gs
push
gs
dec
gs
imul
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jp
jnp
lods
stos
lods
add
cmpsl
push
mov
mov
mov
ret
lret
lret
int
rcl
shr
rcl
shl
rcl
shl
into
int3
int3
hlt
enter
leave
out
in
mov
mov
stos
lods
lods
lea
cltd
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
out
leave
lret
rcl
cld
std
fcom
xlat
xlat
fdivr
aam
ror
sar
int3
into
int
aad
aad
iret
rcl
inc
vfmsub231sd
out
lods
scas
scas
iret
movsl
mov
mov
xor
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
lods
scas
sbb
mov
jnp
mov
sar
lret
rcl
sar
aam
fcomp
call
fcom
call
aad
dec
into
int
int
into
call
aam
int3
int3
int
sarb
mov
scas
scas
std
cmpsl
cmpsb
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
into
int
rcl
sar
xlat
fdivr
xlat
fcom
call
aad
dec
int
dec
lret
int3
int3
int3
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
pop
pop
pop
fs
push
sbb
das
or
sbb
ss
cmp
cmp
and
and
push
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
enter
iret
sar
aad
aad
aam
aam
ror
sar
enter
ret
ret
mov
mov
scas
lods
lods
jmp
popf
popf
xchg
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jle
jg
jb
jo
popa
arpl
push
push
push
xchg
cmp
inc
inc
mov
outsl
outsl
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
lret
enter
mov
mov
scas
scas
scas
jmp
fwait
lcall
xchg
xchg
xchg
xchg
xchg
fwait
lcall
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsb
jo
pop
pop
pop
or
pusha
mov
xchg
xchg
xchg
incb
jnp
jl
jl
jo
outsl
out
push
push
ret
jg
jp
jp
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
pushf
sahf
popf
decl
test
incl
xchg
xchg
sahf
sahf
sahf
sti
mov
xchg
xchg
mov
jns
jp
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addb
decb
mov
jg
jge
jb
jb
je
je
jle
jge
addb
xchg
addr16
cmp
es
jle
lcall
shrb
stos
lods
sti
lods
lods
lods
lods
lods
lods
test
stos
std
movsl
movsl
mov
xchg
xchg
xchg
incl
jg
jns
jp
jl
jnp
xchg
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
nop
xchg
incl
xchg
lea
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
pop
push
push
or
inc
inc
dec
insb
insb
imul
test
lcall
out
cltd
fwait
cltd
stc
nop
nop
nop
std
mov
xchg
xchg
mov
lea
fwait
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
cmpsb
lods
add
pop
adc
cmpsl
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
xchg
popf
popf
sahf
std
movsl
mov
mov
in
xchg
xchg
in
test
push
jne
push
push
dec
add
add
or
inc
daa
es
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
std
mov
call
mov
cmpsb
ljmp
cmpsl
lods
pushl
mov
test
std
ret
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
xchg
lcall
mov
decl
nop
xchg
xchg
xchg
popf
pushf
popf
mov
test
movsb
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jb
jne
jp
jge
test
mov
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
jbe
mov
cmpsb
mov
mov
mov
lods
lods
lods
mov
mov
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
cwtl
cltd
lcall
sahf
mov
movsl
std
mov
cltd
fwait
out
xchg
xchg
nop
xchg
les
xchg
fwait
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
jae
lcall
jmp
inc
jnp
mov
jns
mov
je
mov
insl
ljmp
adc
lods
or
stos
or
mov
jg
mov
mov
stos
pushf
movsl
movsb
movsl
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
sahf
lcall
pushf
popf
lcall
xchg
xchg
call
xchg
nop
call
xchg
lcall
lcall
pushf
xchg
xchg
insb
mov
xchg
pop
jle
cwtl
dec
js
fwait
cmp
imul
pop
addr16
mov
adc
ljmp
adc
lods
pcmpgtd
lods
pcmpgtw
lods
adc
mov
push
mov
imul
adc
mov
cltd
lods
mov
scas
lods
scas
movsb
mov
movsb
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
jmp
mov
call
xchg
decl
test
xchg
ja
cltd
jb
fwait
bound
call
sub
decl
pop
decl
add
call
add
mov
adc
lods
sbb
mov
insl
pushl
push
outsl
mov
and
mov
and
sarb
inc
xchg
lods
mov
scas
lods
mov
sahf
lahf
mov
add
pop
pop
adc
lods
mov
shlb
sahf
pushf
popf
jmp
test
jmp
stos
test
test
cmpsl
lcall
jg
decl
inc
outsl
decl
sub
mov
decl
or
addl
decl
add
xchg
add
xchg
add
lcall
jmp
push
outsb
pushl
sub
mov
sub
inc
sub
inc
sub
xor
dec
inc
mov
scas
mov
mov
lret
movsb
dec
mov
mov
add
add
add
lods
movsb
test
adc
test
ljmp
popf
jmp
test
ljmp
lods
stos
pushl
lods
scas
jmp
mov
mov
incl
or
incl
add
test
push
incl
add
xchg
push
decl
add
xchg
add
fwait
add
lahf
add
mov
adc
mov
cmp
inc
cmp
int
xchg
sarb
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsl
ljmp
popf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
test
pusha
ljmp
jo
les
test
lret
dec
inc
mov
rolb
call
dec
mov
dec
xchg
call
dec
xchg
fimull
fisttpll
fistl
call
test
mov
mov
mov
lahf
mov
add
inc
dec
adc
jnp
mov
test
jmp
test
pushl
mov
pushl
mov
mov
mov
jmp
cmp
mov
pop
call
pop
pusha
decl
pop
decl
push
call
add
pushf
add
add
test
pusha
ljmp
push
arpl
mov
dec
call
push
cltd
call
push
fwait
ficoml
fstpl
ficomps
fistps
jmp
pop
mov
jmp
pop
lahf
fadds
mov
mov
cmpsl
test
jne
mov
sahf
add
inc
inc
adc
jns
mov
mov
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
xchg
and
push
call
or
popl
push
call
add
mov
add
stos
add
mov
gs
mov
xor
fisubs
fbld
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
jmp
addr16
faddl
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
jb
lcall
jmp
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
lcall
call
pop
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
rolb
fsubl
jmp
jo
jmp
jno
jmp
jno
ljmp
in
jae
out
jne
out
jbe
out
je
jmp
mov
mov
cmpsl
cmpsl
lcall
sahf
add
add
outsb
js
mov
pushf
fwait
pushf
pushl
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
mov
cmp
sahf
xor
fwait
sbb
call
add
mov
add
test
pop
pushl
add
mov
sbb
fistl
jmp
jbe
call
jge
in
xorb
icebp
cmpl
push
test
jmp
mov
inc
mov
stos
cmpsl
popf
sahf
popf
daa
lahf
sahf
mov
add
add
add
pusha
add
ss
pop
pusha
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
mov
lcall
cmp
mov
inc
jg
movsl
aaa
jbe
cltd
sbb
add
sahf
add
movsl
add
stos
add
scas
add
mov
data16
mov
add
shll
cmp
jmp
mov
repnz
push
xchg
ret
push
xchg
sar
xchg
push
xchg
ret
push
xchg
mov
out
pop
ret
clc
stos
lods
stos
mov
sahf
popf
xor
pushf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
ret
ret
mov
jge
lcall
dec
cmp
movsb
xor
pusha
lcall
add
test
pop
ljmp
add
add
roll
dec
add
mov
out
mov
out
xchg
vlddqu
push
lcall
negb
cli
popf
int3
cld
lahf
into
cli
lcall
fidivs
enter
mov
mov
xchg
nop
add
add
add
cmp
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
mov
inc
mov
lahf
lcall
push
mov
scas
dec
mov
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
enter
rorl
jne
filds
out
mov
push
movsl
int3
push
movsb
int
clc
cmpsb
into
cli
cmpsl
iret
cli
movsl
iret
cli
test
sar
cld
stos
iret
test
jmp
mov
dec
enter
mov
into
lahf
mov
xchg
add
fwait
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
jae
jb
mov
sarl
mov
ret
ret
inc
dec
enter
rol
mov
cmpsl
jmp
mov
lods
dec
test
mov
add
jmp
add
mov
mov
add
int3
add
fadds
jae
ficoms
out
pop
test
negl
sar
sti
scas
aad
cld
scas
aad
cli
mov
cld
mov
cld
mov
cld
mov
std
mov
mov
mov
push
movsl
jmp
mov
call
leave
lret
mov
mov
lahf
mov
xchg
or
add
add
xor
add
push
sbb
outsb
jo
mov
mov
aad
fsubr
aad
test
int3
into
dec
leave
leave
dec
lret
lret
lret
lret
enter
mov
mov
scas
push
mov
lods
jg,pt
mov
add
lods
add
mov
fs
mov
add
iret
add
fadds
jae
loopne
je
jmp
jb
cld
scas
sar
mov
mov
cld
mov
xlat
mov
xlat
inc
mov
lret
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
add
add
pop
or
mov
pop
call
call
jecxz
fsubp
fcmovu
fcomi
fcomp
fdivr
fcom
std
int
into
mov
push
cmp
sub
mov
add
mov
popa
mov
add
leave
add
aad
jno
faddl
jne
jecxz
jbe
out
xor
cld
mov
loopne
std
inc
loop
inc
fdivrp
inc
dec
fdivrp
std
leave
fdivrp
inc
std
enter
lret
sti
mov
lret
lret
into
mov
mov
xchg
adc
add
add
incl
std
std
add
std
incl
repnz
or
out
in
pop
in
in
in
sub
out
in
dec
jmp
ljmp
in
out
fcmovu
fucomi
ret
stc
stos
jo
cmpsb
cmp
mov
add
ljmp
add
add
movb
dec
add
xlat
add
add
call
inc
fwait
cld
mov
in
std
lret
dec
in
dec
jecxz
dec
in
dec
jecxz
dec
loopne
call
jecxz
call
in
shl
shl
cld
out
mov
inc
ret
out
test
test
xchg
xchg
xchg
sbb
fwait
fwait
add
incl
std
std
add
idiv
add
hlt
repnz
repnz
in
repnz
pop
out
repnz
out
out
pop
fnstsw
loopne
les
xchg
sti
lahf
and
pop
jmp
add
mov
inc
add
movl
jo
fildl
je
jecxz
jp
in
push
pop
test
cld
iret
in
dec
in
call
call
call
in
call
out
xlat
out
std
out
fld1
fucomi
fucomi
shl
push
ret
jecxz
leave
lret
leave
repz
test
and
xchg
xchg
add
cld
add
cld
clc
add
cli
cli
add
div
or
aam
xor
mov
xchg
negb
add
test
pusha
ljmp
add
ret
dec
add
rolb
jb
fildl
jbe
out
ja
in
sbb
cli
fsubr
std
std
fucomi
std
fldpi
std
fldl2e
std
fucomi
std
fucomp
fucomi
fucomip
fucomip
fucomip
cld
aam
push
ret
call
rcl
clc
lods
stos
lods
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loopne
add
mov
xchg
stos
jl
repnz
and
mov
add
mov
popa
mov
add
into
add
aam
jae
loopne
je
ljmp
sti
mov
aam
fucomip
fucomi
std
fucomi
fsub
cld
in
std
shl
cli
shl
cld
iret
loope
clc
int
stc
int3
test
out
mov
jmp
rcr
fcom
sti
mov
mov
cltd
fwait
fwait
cmp
lcall
mov
mov
add
leave
adc
lods
xchg
lcall
add
mov
arpl
mov
add
rolb
jo
xlat
add
loope
jp
ljmp
cld
xchg
cli
leave
loope
cld
lret
loop
cli
test
aam
repnz
sar
repnz
int3
ljmp
jmp
ret
sar
jmp
fndisi(8087
cmc
fucomip
mov
mov
xchg
add
add
add
int
mov
rol
mov
movsl
loopne
xor
jmp
add
mov
data16
mov
add
dec
or
rorb
jne
ficoml
js
loopne
cmp
jmp
scas
lret
mov
call
scas
cld
fbstp
mov
lret
int
fmul
iret
into
xlat
shl
fcmovb
out
loopne
in
out
test
out
out
popf
call
lret
lods
lods
stos
adc
test
cmpsb
add
ret
mov
ret
rcrl
stos
aam
dec
cmp
test
imul
es
mov
js
mov
inc
xchg
ret
stc
leave
fs
test
mov
out
mov
mov
lret
ret
int
rol
int
aam
shlb
xlat
rcl
jg
jb
gs
in
out
call
xor
div
mulb
lock
sbb
fcmovnu
or
mov
int3
add
add
add
rol
mov
mov
les
imul
mov
popf
in
mov
sarb
mov
ret
cmpsl
leave
mov
mov
leave
int3
jp
int
addr16
rcll
rcl
dec
aad
rcr
aad
aam
fsubs
fistpl
fcmovnu
fcoml
fucom
loope
loope
in
out
jmp
in
icebp
out
add
sti
cmc
add
cld
add
std
add
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int
daa
int
into
and
aad
sbb
aam
rcl
aam
aam
aad
aam
add
fcmovnu
add
add
in
add
in
ljmp
std
incb
mov
mov
add
rol
ret
mov
mov
mov
mov
push
ret
or
leave
enter
leave
add
int3
leave
add
aam
add
xlat
add
aam
add
aam
add
fsub
add
aad
add
loop
add
add
in
add
lock
add
std
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
ja
test
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
rcl
jmp
rcl
cmc
rcl
aam
ror
sar
int3
int3
lret
stc
int3
lret
lret
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
ror
xlat
aad
aad
xlat
call
rcl
dec
into
into
dec
lret
int3
mov
mov
cld
stos
stos
stos
icebp
cwtl
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jae
gs
inc
dec
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
int3
call
rcl
call
rcl
dec
int3
lret
mov
pushl
test
popf
sahf
lahf
xchg
cwtl
xchg
jmp
outsl
jo
adc
add
xor
add
add
add
add
jg
addl
test
jnp
imul
movsb
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
inc
rol
inc
mov
mov
ljmp
pushf
lcall
xchg
xchg
fwait
cltd
fwait
out
addl
adc
adc
add
add
add
add
add
pop
fwait
lcall
popf
xchg
lcall
addb
jge
jge
js
jns
jns
jns
jp
jp
je
jae
push
push
push
cmp
jae
popf
popf
pushf
mov
scas
lods
repz
scas
lods
sti
scas
scas
scas
std
test
sahf
sahf
call
xchg
call
mov
lods
jmp
scas
lods
leave
cmpsb
cmpsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
xchg
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cwtl
lcall
mov
call
sahf
lahf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
cmpsl
movsb
movsl
pop
jg
jg
popa
pusha
popa
or
scas
mov
movsl
sahf
mov
decl
lcall
sahf
lahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
insl
outsb
outsl
xchg
subl
xchg
lock
lcall
mov
mov
xchg
mov
mov
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
lcall
lcall
popf
lahf
popf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jnp
mov
xor
je
mov
outsb
ljmp
sbb
pop
mov
mov
scas
scas
jle
mov
add
add
add
pop
popa
popa
or
mov
lcall
lahf
lahf
jmp
mov
cwtl
decl
orl
xchg
jb
cld
xchg
popa
test
xchg
dec
jp
nop
cmp
xchg
sub
xchg
sbb
punpcklwd
mov
pop
ljmp
pushl
sbb
mov
and
pop
mov
scas
scas
xchg
sahf
popf
lahf
adc
add
add
popa
pop
pusha
or
lods
mov
test
mov
cmpsl
ljmp
cmpsl
cmpsl
lcall
pop
jp
mov
imul
mov
pop
incl
push
push
decl
add
pushf
add
test
pushl
jnp
shrb
inc
jle,pn
leave
das
jg
leave
xor
dec
pop
xchg
inc
test
mov
cmpsl
test
add
add
add
pusha
pop
pusha
or
movsl
test
jmp
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
test
push
decl
add
xchg
add
mov
add
mov
outsb
inc
ss
inc
mov
into
inc
mov
rolb
call
inc
xchg
fimull
call
arpl
stc
mov
mov
movsl
mov
incb
add
add
pusha
pusha
pop
or
lahf
mov
ljmp
mov
mov
mov
stos
call
sbb
pusha
decl
or
mov
push
call
pop
ljmp
add
and
rorb
call
pop
lcall
pop
sahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
movsl
lods
movsl
xor
add
add
dec
pop
jge
jl
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
cs
lcall
and
call
add
popf
add
test
pop
ljmp
or
int3
xor
jmp
insl
test
jmp
jno
out
jb
call
test
std
mov
test
jg
add
add
dec
dec
dec
pop
outsl
outsb
insb
bound
lcall
mov
mov
sar
mov
jmp
je
mov
sub
xchg
or
fwait
add
movsb
add
lods
add
mov
fs
or
xchg
jmp
jns
jmp
test
push
xchg
push
xchg
mov
cmpsl
cmpsb
push
cltd
fwait
fwait
add
sub
sub
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
mov
xchg
ljmp
sub
fwait
or
mov
add
mov
gs
mov
adc
fbld
in
pop
push
xchg
cltd
push
xchg
stc
cltd
enter
lret
clc
xchg
lods
inc
mov
stos
popa
mov
add
add
xor
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
pushl
push
xchg
lods
dec
cmp
and
add
test
pusha
pushl
add
lret
fisubl
cmp
jl
push
mov
into
clc
test
cld
test
sar
std
stos
sar
sti
cmpsl
lret
call
rol
stos
stos
stos
jne
popf
popf
or
add
add
push
dec
dec
aaa
je
jb
stos
stos
test
out
into
int
lret
lret
leave
leave
lret
leave
mov
bound
jmp
add
mov
gs
add
into
add
flds
xchg
push
xchg
cld
mov
mov
xlat
mov
fdivr
mov
sar
ljmp
repz
lods
mov
add
add
add
add
or
rcl
dec
loope
loop
loopne
fistps
xlat
xlat
out
shll
test
push
pop
ljmp
add
lret
call
add
jecxz
jp
icebp
dec
mov
sti
inc
loop
inc
loopne
inc
dec
std
lret
loopne
sti
fdivr
out
mov
lret
divb
popf
pushf
sbb
add
add
std
add
incb
ljmp
in
in
in
xor
loop
jecxz
mov
mov
mov
add
mov
fs
add
into
add
fildl
jbe
jmp
insb
mov
std
ret
cld
shl
shl
call
out
aam
call
out
call
call
push
fcos
fcmove
sar
mov
mov
add
std
add
std
incb
cld
cld
pop
aam
push
mov
pop
xchg
popf
or
stos
add
mov
gs
add
rolb
outsl
fiadds
ja
in
and
std
shl
fldpi
fsubr
xlat
out
fsubr
cld
xlat
out
cld
xlat
out
std
aad
push
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int3
int
or
bound
ljmp
add
enter
roll
jae
loopne
ja
out
xor
stc
int3
loopne
stc
lret
test
xlat
bnd
lock
in
aad
in
vpsadbw
in
fucomp
enter
test
std
std
add
add
add
aad
push
mov
jae
push
data16
mov
insl
inc
sbb
int3
and
cs
ficoms
clc
loop
mov
out
in
lret
mov
lret
ror
loopne
sarb
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
mov
ljmp
fidivrl
jle
rol
lods
mov
mov
les
rol
int3
insl
aam
int
rcl
rorb
xlat
xlat
cmp
das
jecxz
fisubs
jecxz
lock
jmp
or
incb
incl
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
enter
aam
rclb
mov
rcl
or
loope
or
into
int3
add
std
incl
incl
cltd
lcall
mov
or
into
int3
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
cltd
add
ret
mov
xchg
enter
enter
sarl
scas
mov
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
std
rcl
sar
into
into
int
mov
mov
sarl
sbb
push
add
add
add
add
add
add
add
add
jno
jb
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
into
call
aam
dec
into
iret
dec
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jae
test
adc
jo
ret
arpl
insl
outsb
outsl
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
xchg
lds
jno
and
add
pop
add
add
je
jae
popf
xchg
lcall
xchg
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
lcall
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
popf
pushf
cmc
cwtl
cltd
cltd
in
addl
pop
pusha
fs
jl
mov
xchg
lea
lcall
pushl
xchg
mov
test
scas
push
stos
stos
lods
add
add
add
scas
test
xchg
xchg
xchg
call
cltd
cltd
lcall
lcall
xchg
mov
loope
jne
out
xchg
bound
std
pushf
inc
ja
cmpsb
aaa
je
scas
sub
mov
jno
mov
insl
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
lods
movsl
stos
test
popf
popf
sahf
jmp
movsb
movsl
call
push
jbe
xchg
inc
je
lea
push
mov
pop
call
or
scas
sbb
pushl
es
shrb
inc
aas
test
mov
scas
scas
subl
jae
push
mov
movsl
test
ljmp
scas
mov
mov
sub
adc
mov
push
decl
add
xchg
add
mov
adc
ret
dec
inc
mov
rolb
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
lahf
mov
pushl
mov
mov
call
pop
pop
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
test
pop
add
add
arpl
adc
sahf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
jno
lcall
lcall
add
mov
xor
jmp
jl
push
jl
push
jge
fistpl
mov
mov
add
add
dec
adc
push
cmp
mov
mov
ret
sar
mov
jmp
jge
mov
add
jmp
add
ret
fmull
out
lea
push
xchg
clc
xchg
push
xchg
jmp
movsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
arpl
les
push
aam
ja
jmp
scas
push
cmpsl
into
clc
lods
sar
sti
lods
sar
cld
scas
sar
cld
scas
sar
ljmp
fldenv
std
add
jo
inc
scas
mov
mov
aad
mov
aam
rcl
out
leave
enter
xchg
jmp
fs
add
add
out
test
clc
nop
ret
cld
mov
inc
inc
inc
lock
ret
cmpsl
cmpsl
dec
addb
add
jmp
or
out
jmp
outsb
fcomp
fisubl
movsl
and
popa
mov
add
faddl
jbe
lock
std
int
dec
out
call
in
shl
shl
push
leave
fcos
aad
into
in
scas
scas
scas
popa
cmpb
std
add
incl
lret
lret
shrb
lahf
sbb
lods
add
mov
add
loop
js
hlt
push
movsl
inc
loopne
call
shl
sti
shl
cli
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
fstpl
cmp
insb
lods
cld
out
mov
shl
call
ror
jmp
leave
aam
jmp
fcmovu
scas
ret
vsqrtpd
add
add
rol
mov
stos
xchg
dec
and
ret
int3
lret
js
mov
mov
lret
into
outsl
xlat
int3
rcrb
rcl
dec
in
loope
out
out
out
out
out
sbb
mov
mov
cmp
mov
scas
push
mov
mov
les
lret
sbb
fstp
bswap
into
int3
or
aad
std
add
incl
lods
std
std
add
std
add
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
xor
sbb
data16
aaa
cmp
imul
mov
cmp
fisttps
push
xor
test
jne
xchg
pop
mov
fxam
jl
stc
sbb
pop
dec
cmp
jl
and
into
sarl
add
je
and
sub
jnp
test
mov
enter
sti
jmp
mov
subl
insl
mov
ret
hlt
mov
loope
mov
dec
xor
imul
sti
mov
dec
out
xlat
sbbb
push
outsb
add
pop
popa
mov
xchg
jge
push
scas
mov
inc
out
fdivl
or
pusha
cmp
cli
xchg
push
pop
out
lea
scas
cmpsl
scas
add
int
add
xor
push
in
dec
push
inc
flds
mov
aas
mov
add
stos
imul
cs
xchg
adcb
cmp
sub
mov
pop
sbb
cmpsl
pop
cmp
js
jo
lds
ret
repz
mov
adc
cmp
addr16
sbb
test
mov
lahf
mov
xlat
jp
stc
mov
mov
ficomps
movd
punpckldq
in
add
lcall
jns
lods
int3
mov
lcall
fnsave
mov
push
jb
xchg
movsb
jae
imul
jle
fstl
iret
mov
pushf
xor
stos
push
in
fistl
push
cmp
or
movsl
fsubrs
dec
xchg
sub
aaa
cwtl
das
imul
dec
mov
int
imul
and
sbb
repz
inc
fldcw
adc
rol
mul
jle
mov
outsl
push
jo
pop
dec
jne
jle
mov
rorl
mov
es
popa
adc
inc
jp
enter
out
xchg
mov
test
out
outsb
sbb
das
icebp
cmp
mov
dec
in
mov
stos
mov
loopne
mov
add
stc
daa
and
pop
mov
adc
fsts
push
arpl
xor
xlat
mov
lret
insl
pop
and
call
mov
outsl
push
test
adc
cld
and
push
sbb
dec
in
jo
popa
mov
ret
call
and
sahf
inc
insl
test
mov
repnz
out
inc
or
stc
cmp
pop
adcb
mov
sahf
xor
cmp
testb
jge
loopne
stc
nop
faddl
pushf
xor
std
pop
scas
cs
mov
int3
subb
ljmp
jno
es
adc
addb
jns
xor
rcrb
push
out
out
lret
bound
inc
outsb
add
jae
mov
lret
xchg
pop
sahf
inc
push
out
mov
jb
inc
fisubrl
out
lds
add
pop
fidivrs
adc
and
arpl
mov
cmc
push
fcomp
jo
xor
sub
mov
lcall
mov
lret
insl
pop
and
push
jge
mov
rclb
test
sti
and
push
sbb
inc
dec
je
in
outsl
lret
insb
add
ret
hlt
sbb
sahf
inc
insb
test
mov
icebp
mov
out
inc
or
cmp
add
xchg
pop
adcb
mov
mov
loop
inc
fdivrs
pop
ret
pop
xor
push
sub
test
test
jmp
sub
lret
push
adc
out
popa
clc
aam
in
xor
inc
fsubrl
dec
pop
lock
sub
loopne
shrl
add
jns
lock
mov
xorb
and
add
ret
pop
notb
pop
mov
xchg
xor
test
mov
mov
loopne
lcall
push
in
bound
gs
mov
inc
fdivl
shll
pop
push
popa
clc
test
xchg
sub
jnp
fstpt
or
leave
sbb
ja
jo
dec
lahf
sbb
lcall
mov
insb
or
xchg
cmp
pop
mov
mov
push
fldt
popa
clc
pop
cld
jns
stos
dec
stc
nop
jp
lret
bound
jno
loopne
inc
xor
jae
scas
inc
stos
stos
mov
fidivl
test
lret
bound
in
scas
xlat
outsb
fidivrs
mov
xchg
sub
cmp
cltd
mov
call
andl
roll
test
fs
cwtl
mov
ja
mov
arpl
jbe
mov
jge
mov
popa
adc
rcr
mov
mov
fnstenv
cmpsl
push
ljmp
jns
jnp
aas
movsb
test
jo
jns
sahf
stos
inc
fwait
xor
jno
lods
mov
aam
jb
mov
jg
and
mov
mov
jae
ljmp
imul
call
ss
orl
fnstenv
jo
jl
cmp
cli
stos
mov
shl
ja
pop
cmpsb
aas
movsl
cmp
jl
mov
call
aaa
sbbl
test
mov
push
cmpsl
bound
ret
sbb
arpl
dec
loop
insl
std
xchg
mov
andb
mov
xlat
outsb
lock
gs
mov
sub
mov
in
test
insl
addr16
lahf
sub
pop
xchg
mov
push
in
clc
insl
dec
loopne
and
push
mov
incb
imul
sbb
pop
dec
sub
mov
fnstenv
and
cmp
push
cmp
dec
xchg
into
mov
push
in
or
push
call
push
je
and
jg
add
jp
mov
idivl
call
push
jp
stos
in
test
jle
add
das
and
lods
int3
int
add
mov
xor
dec
push
cli
xchg
or
and
es
lret
negb
inc
push
dec
cmp
jl
cmc
mov
stos
push
in
fldenv
jne
test
fnsave
pop
lock
sub
pop
push
leave
pusha
xchg
add
or
pop
mov
scas
sbb
push
lods
mov
int
sti
decb
arpl
inc
lahf
ss
jnp
pushf
and
mov
je
cmova
lret
sti
in
cwtl
push
cmp
dec
mov
jbe
mov
or
lea
es
test
imul
sti
push
out
mov
lcall
cld
xchg
xor
and
cmp
push
aam
mov
jge
shrb
lcall
jnp
stc
and
mov
jecxz
xchg
cmpsb
cmp
jnp
sbb
inc
mov
jbe
test
and
pop
jns
pop
icebp
push
mov
xor
repnz
mull
mov
mov
jae
xchg
jo
ret
or
adc
stos
cmp
outsb
int3
add
add
stos
inc
push
add
dec
movsl
pop
xchg
sub
jnp
mov
ja
push
push
stc
nop
cmc
aas
lds
sbb
shrl
inc
lahf
sti
pop
hlt
sub
enter
scas
inc
jne
and
bound
mov
loop
inc
fidivs
cmpsb
cmp
lret
push
mov
xor
scas
push
out
xor
arpl
outsb
add
mov
fcom
out
or
mov
pop
and
cmp
push
mov
sub
push
in
subl
ds
enter
xchg
xchg
ret
aas
dec
jecxz
scas
sbb
pop
xchg
cmp
outsb
mov
xor
or
out
or
cs
sub
popf
pop
mov
xlat
in
jns
mov
dec
in
fldenv
cmp
push
jle
xchg
pop
fnstcw
ljmp
and
call
mov
push
mov
xchg
out
sbb
cmp
lock
pop
and
dec
cmpsl
insl
aad
popf
cli
call
into
call
add
int3
arpl
push
mov
jno
popf
out
test
xchg
mov
std
pop
cmc
das
push
call
adc
mov
repnz
add
ss
les
push
stos
inc
mov
xchg
cs
add
cmp
add
shrb
xor
mov
mov
stc
ffreep
xchg
mov
test
mov
lcall
testb
out
push
lret
fistps
insb
inc
int3
and
rorl
dec
and
in
iret
jecxz
mov
rclb
pop
inc
push
into
push
jae
xor
sbb
xchg
mov
inc
and
das
aad
ffreep
pop
adc
sub
mov
xor
adc
dec
adc
add
inc
pushf
lods
repz
xchg
sarl
ds
push
xchg
lret
ficompl
std
stc
mov
fildll
lret
in
jae
movups
or
lds
test
add
cmp
sbb
imull
stc
out
into
pop
dec
fcmovne
adc
ds
mov
negb
sbb
lods
mov
mov
insl
mov
popf
and
mov
cmp
adc
lods
mov
in
notb
push
in
frstor
out
cwtl
dec
fs
xchg
pop
pusha
or
add
mov
cs
add
sti
jle
mov
in
ds
mov
xor
jnp
test
and
divl
cmp
mov
jmp
insl
test
test
xchg
lahf
lret
xor
pushf
push
mov
sbbb
mov
pop
outsl
mov
mov
push
aad
jmp
hlt
push
imul
add
adc
cmpsb
cmpsl
xlat
scas
inc
clc
push
cmpb
arpl
xor
xlat
mov
fidivrl
mov
push
push
daa
imul
mov
enter
sub
gs
fsubl
sub
mov
loopne
mov
push
imul
push
fstpl
mov
dec
or
cld
test
in
int
pop
lods
lea
push
icebp
mov
andl
mov
push
lds
sub
cmp
inc
jp
mov
jae
addr16
je
push
jl
xlat
cmp
mov
jnp
out
dec
int
daa
ds
jo
scas
shll
inc
in
ja
into
mov
daa
leave
cmp
dec
pop
add
mov
dec
and
pop
cmp
or
mov
mov
and
mov
lcall
stos
mov
in
mov
fs
in
daa
lods
pop
dec
rorb
imul
dec
imul
loop
pop
out
jg
in
xchg
xor
xor
pusha
popf
mov
mov
pop
cltd
iret
sub
cmpsb
aam
cmp
bnd
push
test
xchg
daa
mov
frstor
cli
in
pusha
negl
sbbb
jle
adc
test
lret
mov
fadd
push
push
sbb
mov
stos
mov
cld
pop
hlt
sub
push
movsl
sub
add
mov
cmpsb
pop
xchg
sub
call
mov
mov
inc
cmp
outsl
push
push
pop
shrl
je
movsb
push
mov
cmpsb
mov
icebp
lea
and
inc
test
aaa
insb
jge
sahf
pop
pop
mov
les
sbb
jns
push
int3
arpl
repnz
xchg
ljmp
add
mov
rcll
ljmp
xchg
jp
inc
pop
fs
mov
das
shll
pop
icebp
jmp
jl
xor
aad
fdivl
adc
pop
mov
xchg
fdivrs
fadds
sbb
or
es
loopne
push
jmp
or
rorl
inc
dec
cli
nop
daa
and
pop
mov
loopne
push
mov
icebp
mov
cmc
mov
andb
adc
ds
addr16
xchg
lock
rep
mov
jp
pop
inc
insl
add
jg
pop
push
xchg
mov
mov
test
inc
outsb
loopne
pop
push
mov
subb
jl
cmpsb
xchg
cld
lcall
fimuls
and
lods
pop
inc
xlat
inc
lds
outsb
insb
pop
cmc
mov
lret
or
test
and
sub
fwait
pushl
ljmp
jg
xor
xchg
ret
popf
mov
lret
mov
roll
pop
mov
loopne
xor
pop
xor
jle
divb
mov
xlat
es
push
mov
outsl
pushf
cltd
fnstenv
mov
out
js
mov
adc
lods
ljmp
fisttpl
mov
das
lods
hlt
jno
mov
dec
in
fimuls
add
mov
and
pop
fdivl
pop
test
xor
cld
pop
pop
dec
adc
in
mov
leave
add
sub
and
pop
lcall
std
pop
repz
repz
xor
inc
jp
mov
lret
imulb
mov
cmpl
stos
aad
fst
jne
mov
rcll
mov
or
fstpt
fnsave
stc
shlb
jmp
mov
adcb
mov
sahf
xor
or
inc
fdiv
sbb
jb
adc
gs
nop
scas
xchg
jb
xor
pop
scas
and
mov
int3
movsl
mov
ljmp
jno
inc
and
test
imul
inc
and
sub
jle
lret
bound
out
add
jne
pop
ficoms
scas
es
cmp
int3
stos
push
mov
ljmp
jb
outsl
call
nop
daa
mov
or
lret
mov
push
loopne
lret
out
aaa
ljmp
jbe
lahf
push
ljmp
jae
mov
fstpt
xlat
stc
sub
int
mov
adcb
loopne
sbbb
or
jne
aaa
into
clc
sahf
fidivl
adc
add
jmp
sub
test
inc
or
test
daa
mov
in
inc
shrl
mov
repz
xchg
lret
or
aaa
pop
jnp
rclb
mov
lock
cmp
add
cli
xchg
lods
xchg
mov
jbe
sbb
sub
ss
inc
xlat
outsb
daa
fs
jmp
push
cmc
mov
adc
or
inc
fdivs
fstps
or
insb
add
movsb
mov
pushf
mov
pusha
mov
mov
or
daa
aad
mov
aam
mov
scas
adc
pop
xchg
aas
cli
je
negb
jge
pop
fldt
aad
fwait
xor
xchg
movsb
jbe
sub
adc
mov
or
shrb
mov
stos
cmc
hlt
lock
outsb
add
test
mov
push
sarl
jae
dec
xor
pop
insl
rcll
dec
mov
add
enter
mov
and
adc
adc
mov
vpsrlq
sbb
xor
mov
jns
imul
lahf
mov
and
loope
and
popf
lea
pop
xchg
cmpsb
and
dec
mov
inc
fstps
adc
cltd
mov
pusha
div
movsb
and
jae
ds
popf
lea
cmp
inc
fdivrs
cld
mov
fdivl
movsb
sbbl
cwtl
jmp
cmp
dec
pop
sahf
adc
push
pop
cmp
je
sbb
cmp
mov
aad
mov
gs
cs
lcall
cmpl
jnp
dec
xchg
sub
mov
and
add
outsl
stos
in
test
mov
or
or
mov
ds
rcrl
repz
mov
insl
cmpsl
jp
fimuls
cwtl
das
or
add
push
ljmp
outsl
mov
aam
xchg
mov
fcoml
cmpsl
divl
add
pop
das
cmc
fwait
xor
cmpsb
dec
in
ljmp
sub
mov
lcall
ds
inc
add
pop
adcb
mov
fidivl
xor
cwtl
repz
jecxz
pusha
idivl
push
jle
xchg
into
lcall
push
cmpsl
ds
mov
pop
outsl
je
jo
mov
jp
int
mov
aad
lods
or
es
imul
push
call
adc
jne
sbb
and
inc
movsl
cmp
mov
ret
pop
ljmpw
loope
push
aas
out
mov
lret
add
adc
adc
fwait
xor
test
push
ljmp
jno
and
dec
mov
leave
lods
inc
cli
pop
xsha1
cmpsb
or
es
sbb
hlt
or
aaa
cmp
mov
pop
pop
inc
fistl
mov
mov
shl
adcb
sti
aam
jp
sahf
xor
dec
mov
push
loope
aad
gs
nop
mov
lret
pop
sahf
adc
pop
cmp
sbb
push
ficompl
mov
clc
lds
jg
sbb
push
mov
int3
mov
mov
pop
fidivl
sarl
mov
aas
lods
dec
in
pop
push
lods
xchg
sub
and
xchg
cs
repz
jmp
add
jo
push
sub
push
orb
cmp
lods
inc
inc
pop
pop
mov
outsl
lret
bound
xchg
push
in
dec
in
aas
sbb
cmp
push
cmp
popl
pop
out
mov
shll
add
aad
cltd
sub
xchg
mov
inc
inc
aas
add
out
xchg
loopne
lea
lahf
cvttps2pi
dec
mov
dec
loope
sub
push
inc
mov
leave
int
jo
movsb
cmp
cltd
sti
xchg
add
test
sbb
iret
jle
sarl
mov
cmp
jae
in
push
in
mov
aad
or
xchg
sub
ss
pushf
scas
inc
movsl
push
push
jmp
ret
fnsave
jb
out
out
xchg
stos
pop
xchg
sub
mov
sub
add
and
jge
in
xorl
or
je
sub
inc
mov
jmp
inc
fimuls
ja
push
out
data16
cltd
lret
add
mov
xchg
push
cmp
dec
mov
pop
jmp
or
mov
out
jl
fwait
cmpsb
or
data16
or
mov
mov
sub
das
into
stos
dec
lcall
fwait
scas
inc
sub
push
dec
dec
loop
subb
cmpsb
call
adc
in
ljmp
cmp
mov
mov
pop
jae
les
xchg
mov
lds
out
dec
adc
ss
scas
and
mov
fisttpll
push
push
pop
repnz
shll
adc
orl
sub
data16
add
test
pop
sahf
aam
sarb
cmp
int
push
incl
jne
fnsave
xor
jae
xchg
movsl
call
push
mov
cmp
insb
sbb
aad
lea
out
pushf
loopne
dec
adc
shlb
adc
mov
flds
sahf
cld
test
jl
sbb
mov
idiv
xchg
sub
inc
fistl
mov
stc
in
cmp
sbb
repnz
repnz
aaa
mov
jbe
mov
xor
add
outsl
xor
mov
mov
cmpsl
adc
ret
lret
sbb
jge
cmp
add
mov
mov
fstpt
or
mov
pop
lret
push
mov
fidivl
aad
jp
aas
add
pop
xchg
and
lods
jecxz
adc
cmp
pushl
pop
lock
xchg
mov
ficompl
sub
sub
mov
dec
adc
mov
shrb
shl
mov
es
cmpsb
push
adc
inc
js
mov
sahf
lret
repz
and
xor
scas
xchg
push
icebp
mov
scas
jmp
flds
test
cmp
movsl
cmp
pop
into
mov
jle
loopne
rcrl
xchg
sub
jmp
mov
mov
xchg
sub
nop
sbb
xor
xchg
cs
ss
ljmp
call
xor
lret
bound
push
stc
mov
push
out
jo
adc
lret
imulb
shrl
aaa
into
push
push
adc
jno
or
lret
cmc
push
jmp
pop
push
jp
mov
ja
bound
pop
repnz
fmulp
data16
sub
mov
xlat
jae
pop
lods
clc
xchg
sub
iret
and
jge
movsb
cmp
shrb
fs
popf
jmp
hlt
mov
xor
insb
or
jl
lea
mov
push
call
adc
lds
cmp
xor
adc
aad
movsl
push
mov
mov
das
push
jmp
xor
push
decb
imul
pop
fbstp
or
lahf
xor
es
push
call
inc
out
mov
sbb
adc
xor
mov
xchg
push
in
mov
pop
lock
mov
dec
or
pop
xchg
push
and
icebp
scas
lea
adc
repz
cmp
inc
add
jecxz
fsubrs
add
fnstcw
pop
aaa
into
mov
xchg
sub
pop
cmc
rorb
xor
sub
nop
daa
add
adc
and
xchg
jle
arpl
lret
hlt
imul
adc
scas
inc
mov
int3
arpl
mov
mov
pop
add
mov
mov
mov
loopne
pop
add
add
mov
pop
repz
stos
int
aam
data16
dec
cmc
push
out
push
scas
xchg
dec
xchg
sub
cmp
in
lcall
aaa
in
sub
pop
sbb
scas
push
mov
jo
std
jnp
es
orl
xor
ljmp
rclb
fnstenv
cmp
andb
popa
insl
cmpl
mov
ret
pop
push
or
push
xor
jo
jae
ljmp
call
xor
sbb
push
pop
mov
mov
jo
mov
loop
adc
cwtl
das
xor
pop
lock
push
lret
bound
mov
cmpsl
ljmp
and
pop
nop
sbbb
ljmp
pop
aaa
fnstenv
pop
mov
addl
pandn
pop
lock
add
xchg
cmp
adc
test
scas
movsl
or
clc
lahf
sub
lcall
data16
xchg
mov
rcr
cli
repnz
fidivs
dec
jg
jns
pop
lock
lcall
out
out
xchg
adc
jno
inc
sbb
xchg
popf
mov
xor
out
pop
and
out
test
out
outsb
fnstenv
lcall
loop
fbstp
add
mov
push
mov
mov
fidivl
rcll
popf
cmp
cltd
xor
movsb
push
popf
out
xchg
add
jno
sub
push
pop
in
xchg
scas
cmpsl
pop
icebp
jo
or
es
push
pop
fnstenv
js
aaa
mov
les
incb
lcall
pop
cmc
mov
test
jno
mov
fsubr
repz
sub
out
xchg
pop
icebp
js
adcb
lcall
jecxz
fidivl
add
mov
and
mov
cmp
daa
shrb
inc
xchg
jne
test
cmpsb
xchg
inc
fcmovnb
fidivs
jecxz
loope
adc
dec
inc
ss
mull
mov
adc
xlat
mov
outsl
xor
into
gs
push
ret
ja
outsl
mov
ret
repz
add
cmp
push
call
xchg
jmp
loopne
adc
ss
cmp
dec
test
in
movsl
fsubrs
mov
pop
out
add
ds
or
jle
scas
inc
mov
shrl
in
pop
repz
repz
cmp
add
or
mov
fdivl
out
sub
push
jne
add
mov
adc
aaa
into
pop
xor
pop
rep
xor
mov
ficoml
scas
adc
das
mov
xchg
mov
int
mov
dec
flds
add
mov
push
push
das
mov
test
cmp
inc
add
dec
inc
pop
call
stos
xchg
imul
enter
jecxz
or
sbb
dec
dec
xchg
je
xchg
ss
cltd
mov
mov
data16
in
leave
pop
adc
repz
inc
aas
frstor
imul
xchg
mov
aad
ret
cmp
xor
push
hlt
pop
pop
dec
fiadds
test
scas
cmp
clc
test
sub
dec
nop
inc
mov
jnp
lret
pop
jecxz
loope
lret
imul
sets
in
jns
xor
mov
subb
cld
push
cwtl
and
cmp
or
and
popf
cs
lods
in
ds
cli
cld
cmp
jge
dec
lea
mov
lea
sahf
add
jle
outsl
cmpxchg
dec
sahf
fwait
es
lret
push
fdivs
bound
mov
popa
imul
dec
mov
ljmp
adc
xchg
cmp
push
mov
inc
adc
cmpsl
mov
arpl
imul
outsl
or
push
xchg
pop
inc
pop
popf
push
jne
mov
mov
mov
dec
dec
ss
pop
mov
fcmovne
push
int3
leave
imul
xor
jl
jg
xchg
stos
and
out
adc
in
cmp
pop
dec
jg
test
add
mov
lahf
sbb
in
fwait
push
and
sub
mov
mov
inc
jmp
push
jecxz
cmp
inc
pop
lea
cmp
push
loop
shll
xor
push
in
push
jg
fcomp
push
mov
out
or
inc
push
xchg
sub
mov
jne
jmp
pop
mov
mov
push
aam
mov
jmp
daa
pop
adc
scas
xor
mov
in
xchg
pop
cmpsl
mov
sub
repz
imul
rcrb
push
push
test
fwait
addb
scas
rcrb
jg
sbb
sub
pop
insb
dec
iret
jo
fwait
nop
sbb
loopne
xchg
sbb
aas
sub
int
mov
aam
mov
jmp
pop
pusha
js
test
shlb
std
fcoms
mov
dec
or
lock
js
popa
xchg
xorb
stos
jge
repz
lea
daa
shll
dec
push
fwait
test
or
push
xor
mov
xor
xor
stos
pushf
or
cld
les
mov
inc
sub
enter
jne
xchg
pop
ffree
div
mov
loop
sti
adc
stos
jl
adcb
popf
das
into
xchg
loope
fstpt
add
cs
pusha
xchg
xchg
sub
cmp
inc
sbb
or
push
cmp
jb
daa
inc
fstps
cmc
mov
jns
pop
stos
loop
ret
scas
inc
pushl
sbb
lea
xchg
mov
bound
imul
pop
sbb
dec
jg
jo
insb
data16
popf
shl
mov
test
icebp
and
mov
int3
test
ret
pop
xchg
leave
push
call
ljmp
jg
outsb
mov
jge
rcll
jecxz
iret
inc
add
cli
xor
push
sbbl
in
cmpsb
lahf
fcoms
ljmp
data16
jp
es
mov
mov
arpl
leave
shlb
sbb
and
push
out
adc
push
andb
mov
aaa
jne
mov
pop
ljmp
aad
xchg
lret
pop
sti
pop
dec
leave
and
push
pop
ret
jg
mov
jbe
sarb
push
jmp
mov
jl
mov
rcrb
xor
jge
addl
leave
lret
lahf
dec
in
pop
ja
push
test
rorb
in
mov
mov
mov
shlb
adc
and
xchg
mov
xor
int3
dec
mov
sbb
jmp
movntps
mov
dec
sub
iret
or
add
inc
test
and
mov
arpl
ret
out
rorb
push
aad
sbbl
push
inc
jnp
inc
mov
decl
mov
xchg
ret
cmp
movsb
fbstp
fadd
lock
popa
cmpsl
cs
jle
enter
mov
pop
icebp
xchg
xchg
out
inc
sbb
fiaddl
lods
call
in
mov
addr16
or
xchg
movsl
jae
sti
adc
cmpsb
in
gs
inc
repz
call
mov
mov
mov
fwait
mov
jmp
pop
sub
cmp
adc
rolb
loope
mov
mov
cmp
add
leave
call
or
in
sbb
jbe
lock
add
cli
push
dec
nop
fcmove
adc
lcall
arpl
mov
stos
das
aaa
adc
test
jns
test
or
or
les
repz
into
jns
out
cmp
cmc
cmp
jp
jnp
cmc
fdiv
add
cs
pop
rolb
fs
sbb
es
inc
shlb
adc
mov
call
pop
cmc
lock
xchg
add
fstps
adc
stos
scas
cmp
xchg
push
rorl
adcb
cmp
movsb
loop
call
sbb
mov
mov
or
lock
shll
or
sar
jp
pusha
jmp
subb
aaa
out
pop
sbb
insb
sub
in
adc
ficoml
stos
mov
js
pop
or
mov
inc
mov
ficoml
cmp
dec
pop
push
mov
ljmp
andl
pop
ljmp
push
lock
leave
stos
jle
push
mov
cmp
dec
jmp
dec
loope
push
sub
push
inc
data16
xor
cwtl
shlb
adc
push
adc
push
icebp
cwtl
icebp
push
iret
mov
push
mov
popf
pop
arpl
aam
ret
sarl
cmp
xor
in
popf
mov
add
and
mov
into
pop
sub
movb
daa
nop/reserved
roll
jle
in
xchg
fadd
shlb
mov
and
mov
push
add
bound
pop
mov
push
mov
mov
sub
jl
jae
sub
ficoml
clc
js
aas
sahf
aad
inc
add
jp
ret
sbb
xchg
dec
shrl
call
and
out
jns
dec
dec
cs
add
inc
mov
les
pop
loopne
sti
lea
or
sbb
push
out
pop
out
mov
dec
inc
movsl
mov
popf
ja
jl
lods
arpl
and
in
lock
stos
mov
cmp
lods
cltd
dec
and
cmp
mull
in
xor
js
dec
xchg
push
imul
inc
rcrb
je
sub
pop
sbb
setno
sub
cwtl
mov
pop
andb
repz
scas
sarb
add
add
loop
inc
ja
out
mov
sub
fsubrl
cmp
add
fidivs
dec
testl
push
nop
test
movsb
dec
cli
push
inc
enter
aaa
sbb
int
jb
jg
cmp
test
add
dec
push
xor
rcl
es
cmp
xor
jl
mov
sbb
cs
fimull
fs
es
mov
sahf
dec
fmul
and
cmp
outsb
push
mov
cmpsb
jmp
fisubrs
loop
push
jnp
jns
adc
inc
mov
push
cmpl
sbb
mov
popf
das
mov
sbb
jp
cmpsl
push
ds
or
aas
test
mov
fisttps
cld
pop
mov
subl
clc
jecxz
pop
cwtl
inc
jl
sub
stos
add
bound
add
je
std
mov
or
xor
push
lods
adc
push
inc
js
push
jle
js
mov
lock
cmpb
cmpsl
insb
sbb
sbb
test
shlb
fcomps
push
out
pop
sahf
dec
add
mov
jns
inc
shll
jle
rorb
mov
dec
lods
xor
cmp
or
test
mov
xchg
adc
mov
cmp
adc
jbe
pop
pop
cmp
bound
mov
or
outsl
xor
mov
xchg
aas
loope
sahf
dec
cmp
cmp
xchg
orb
xor
mov
inc
mov
gs
fildl
movsb
mov
mov
push
push
jo
das
sub
hlt
sarb
adc
mov
inc
fldcw
test
cmp
ficoml
icebp
push
jnp
lds
cmp
xchg
dec
xor
andl
dec
pop
sub
adc
sbb
jno
push
fbstp
pop
in
jo
mov
jno
mov
in
mov
lret
push
pop
in
daa
push
mov
in
push
sbbb
loop
mov
addb
lret
pop
bound
jp
push
sbbl
fcmovnu
fisubrs
in
mov
mov
xchg
xchg
jae
std
add
mov
das
mov
mov
dec
stos
sbb
jns
adc
lret
inc
xchg
jb
xchg
stos
push
inc
pushf
pushf
and
stos
scas
loope
sub
add
push
adc
inc
xor
pop
xor
dec
push
pushf
add
sub
popa
cltd
rol
mov
pop
and
mov
jbe
cmp
add
out
testl
roll
jecxz
aas
push
stos
cmp
insb
hlt
dec
sub
jne
arpl
ss
loope
push
out
mov
jmp
jb
jge
jl
dec
xchg
push
lret
insb
cmp
int3
movsb
jle
dec
out
test
adc
jl
mov
sarb
mov
xchg
insl
shlb
out
jge
adc
push
in
int3
and
push
es
arpl
cmp
dec
jne
push
scas
outsb
xor
jnp
add
push
aas
subb
mov
cmp
imul
filds
sbb
popa
ret
mov
mov
sub
imulb
cmpsb
movsb
sahf
pop
xchg
outsb
jmp
es
mov
sub
pop
cmp
pop
push
mov
inc
sub
dec
lret
ja
push
in
shrb
in
jle
aad
and
dec
scas
inc
jbe
sbbl
xor
mov
pop
add
pop
pop
ljmp
xchg
xor
je
jl
call
inc
pusha
add
addr16
in
cmp
mov
lods
dec
cmp
lea
adc
out
jns
adc
shlb
out
and
xor
out
xchg
and
cmp
mov
jns
shll
jg
imul
jmp
sub
filds
push
push
inc
adc
scas
inc
aam
adc
mov
popa
hlt
sarl
ljmp
mov
out
add
mov
fld
jge
cmpsl
sbb
mov
lock
dec
les
mov
in
or
fimull
xchg
sahf
mov
xchg
adc
test
mov
jecxz
add
addl
xor
mulb
pop
pop
cwtl
inc
enter
rorl
pop
les
jg
sarl
inc
sbb
cs
leave
dec
test
jle
mov
stc
mov
pop
add
cmp
out
addb
ret
divb
mov
divb
rcl
jl
fbld
inc
and
cmp
add
xchg
aam
jae
mov
fwait
xchg
jnp
inc
movsl
xor
cmp
divb
int3
sbb
shrb
std
cmpsl
or
cs
mov
es
xchg
insl
or
push
xchg
std
sbb
sbb
cmp
xchg
jne
or
sti
mov
sahf
jo
xchg
cmp
cmp
xor
dec
clc
xlat
sbb
mov
inc
mov
leave
sub
test
mov
jno
dec
xchg
gs
dec
jle
sbb
pop
popf
inc
scas
adc
mov
push
inc
mov
jmp
mov
dec
inc
jmp
sbb
cltd
loopne
testl
rcl
dec
mov
faddl
or
enter
das
dec
and
enter
push
jae
mov
cmp
sbb
mov
inc
neg
jecxz
hlt
pop
mull
pusha
cmc
push
add
push
negb
jns
inc
dec
dec
pop
cmpb
sub
test
sub
push
cmp
test
mov
test
pop
arpl
xchg
mov
out
mov
popl
aaa
cmpsb
or
or
sbb
pop
and
push
inc
cld
ss
loope
scas
mov
mov
data16
sub
rcrl
mov
orps
cmc
push
dec
and
mov
xor
xchg
repnz
mov
mov
push
mov
sbbl
les
cmp
adc
fidivrl
popf
movsl
add
dec
jo
pop
shr
shll
and
shl
stos
imul
push
jbe
lds
hlt
push
rclb
ss
and
add
lahf
fsubr
ret
lret
aaa
imul
xchg
rorb
mov
cmp
pushf
mov
in
fsubrl
jmp
and
adc
pushl
repnz
addr16
and
je
fcomip
hlt
lods
cmp
add
getsec
adc
mov
xchg
movsb
imul
call
aad
xor
mov
push
pop
adc
out
test
sti
xchg
mov
out
mov
pop
dec
jmp
mov
pop
sbb
push
jp
repnz
movsb
bound
adc
daa
push
test
mulb
pop
xorl
mov
add
test
rcr
mov
stc
fistpll
sub
sar
adcb
pop
add
dec
repnz
push
xchg
gs
ja
pop
xor
out
mov
jnp
mov
out
mov
mov
pushf
add
dec
in
aad
lcall
push
cmp
sub
pushf
inc
cmc
iret
mov
out
add
adc
fsubp
rolb
into
add
mov
movsb
pop
in
hlt
jmp
rcrl
mov
cmc
faddp
in
mov
out
sbb
aas
daa
sarb
lock
dec
fcoml
ljmp
jecxz
fldl
in
mov
cmp
dec
mov
outsl
mov
push
xchg
sub
cmp
ret
pushf
push
das
push
jl
xor
cmp
mov
mov
sub
jae
enter
lds
and
or
jmp
mov
jle
insl
repz
and
push
stos
dec
mov
mov
loopne
jbe
or
sub
adc
les
jb
lods
cmp
inc
inc
negl
mov
mov
outsl
ficoms
sti
mov
mov
bound
and
mov
jle
xchg
dec
lret
fisubl
inc
lahf
adc
cmp
push
mov
push
inc
pop
mov
mov
mov
lds
inc
and
push
fdivp
or
jmp
clts
scas
jae
loop
adc
pushf
stc
jge
mov
cmp
add
dec
and
minps
inc
hlt
cs
nop
xchg
bound
repnz
sbb
jb
jnp
ss
xchg
add
int3
sbb
inc
out
pop
shrb
sbb
in
imul
lahf
mov
or
frstor
sub
scas
test
push
xlat
fistl
jns
out
das
jp
mov
fwait
sbb
test
daa
sub
mov
inc
jns
jbe
inc
xchg
inc
out
rorl
scas
stc
xor
cmp
pop
out
cmp
inc
jg
popa
sahf
inc
jne
adc
arpl
iret
xchg
jae
sub
jmp
scas
std
mov
and
pusha
aam
xlat
and
test
loop
call
pop
cmpsl
mov
adc
pop
fs
xchg
cmpsb
les
icebp
push
mov
jle
jge
mov
imul
or
cld
call
loopne
inc
testb
icebp
dec
dec
nop
mov
pop
test
pop
ljmp
fcomps
or
push
std
adc
push
add
mov
ret
jmp
jl
jge
dec
dec
fldenv
out
test
adc
insl
addr16
into
mov
push
enter
mov
sbb
adc
or
test
repz
push
push
mov
jb
mov
xor
ficompl
test
or
and
mov
sub
dec
sub
lcall
movsb
xor
jns
pop
and
in
mov
out
xchg
cmp
dec
lods
cmpsl
lock
dec
pop
fnstcw
dec
sahf
and
pop
hlt
cmp
sbb
sahf
fisttpll
ss
fistpl
mov
cmp
xchg
les
and
inc
pop
rolb
imul
jnp
cmp
les
cmp
adc
lret
mov
popa
dec
gs
cmpsb
mov
aam
scas
mov
push
adc
adc
loopne
aas
or
gs
xchg
adc
inc
das
jp
loope
jle
js
inc
int3
paddb
push
push
mov
outsb
ret
dec
dec
leave
movsl
daa
sahf
dec
sub
push
sbb
or
divb
jnp
int3
aad
inc
divl
in
adc
mov
inc
scas
aad
pop
lods
pusha
jle
dec
push
scas
out
xchg
jo
aaa
xchg
xchg
and
test
sahf
sbb
dec
lds
push
inc
in
les
aad
test
rol
out
push
mov
cmpsl
pop
push
std
push
pop
shrb
xor
out
pop
xchg
arpl
add
jecxz
aad
clc
enter
xchg
pop
xor
icebp
xor
pusha
orb
aam
jle
imul
add
mov
fs
cmp
in
cltd
push
mov
mov
ficoml
andb
insb
adc
sub
xchg
notb
adc
aas
into
pop
xor
push
sbb
aaa
insb
cmpb
jl
ss
popa
pop
lds
pop
pop
gs
out
or
jmp
cmp
cwtl
out
fistpl
jb
pop
enter
aam
xchg
aas
stos
cmp
jle
add
orl
mov
sub
out
jns
mov
xor
jno
shll
movb
push
outsb
call
or
jl
cmp
cmc
mov
flds
addb
mov
aaa
pop
inc
sub
daa
push
push
inc
cmp
push
sbb
out
movsb
sub
adc
fcompl
divl
push
es
roll
jne
or
inc
xchg
xchg
pop
shll
pop
in
xor
ret
xorb
js
push
sub
js
dec
bound
xchg
mov
cmpsb
cmp
lret
aam
xor
test
jmp
jl
add
inc
cmp
jg
dec
xchg
out
jecxz
xor
movsl
jns
adc
jnp
xchg
rcrl
jge
or
dec
scas
push
jb
ja
push
aaa
inc
adc
push
repnz
sti
push
pusha
xchg
ficoml
mov
sti
and
sbb
mov
and
mov
outsl
adc
imul
out
dec
cmc
pop
ja
dec
lret
adc
mov
popa
sarb
rcrb
push
add
jmp
lods
shr
inc
lahf
cmp
mov
and
cmc
and
push
add
push
mov
add
nop
loop
stc
xchg
sub
js
xchg
push
and
mov
adc
adcl
mov
clc
repz
push
shlb
mov
dec
cmpsl
sahf
lret
mov
ret
push
pop
out
leave
popa
fmull
outsb
outsb
dec
dec
jl
jno
adc
decl
jecxz
push
jmp
pop
mul
jns
lret
mov
and
aaa
xchg
and
mov
dec
cmpsl
rolb
push
in
dec
js
adc
adc
mov
push
lea
gs
cmp
aaa
test
js
test
pop
mov
pop
push
sbb
cmc
dec
xor
push
mov
enter
jbe
outsl
aad
mov
or
xor
inc
mov
jns
pop
inc
sub
int3
shll
outsb
adc
ds
cwtl
sub
pushf
mov
sub
addr16
or
stos
mov
mov
fs
jne
in
dec
xchg
test
dec
call
push
adc
pushf
scas
jl
xchg
in
lcall
sub
jge
mov
pop
xor
push
jne
cmpsl
mov
daa
mov
ror
sbb
popf
jl
jl
sub
lahf
scas
cmpsl
sub
fwait
mov
mov
clc
in
jb
insb
lods
movsb
adc
test
lret
sub
decb
dec
lds
jmp
mov
es
sbbb
mov
xchg
jbe
mov
adc
xchg
ret
data16
dec
sahf
mov
pusha
xchg
lods
fnsave
add
jno
mov
je
and
xor
mov
dec
inc
pop
insb
int3
sarb
push
repnz
xor
into
adc
addr16
mov
jg
sub
sub
xchg
jno
mov
sub
or
addb
into
jle
aaa
sub
das
mov
icebp
mov
adc
jb
or
and
ss
sahf
push
and
mov
cmp
adc
inc
or
out
push
movsl
arpl
add
imul
shl
stos
xor
jl
stos
cmpsl
mov
xor
enter
sub
pop
inc
xchg
mov
int
std
insl
pop
idivl
cmpsb
cmp
sbbb
loop
xorl
ss
pop
inc
sahf
jne
js
loopne
sub
out
adc
daa
aas
popf
cmp
mov
arpl
mov
call
sub
test
and
lods
inc
xor
fsubrs
ret
sub
je
mov
push
test
push
dec
sub
or
and
sbb
mov
std
repz
hlt
xchg
icebp
inc
ja
mov
xchg
add
ja
dec
les
leave
xchg
pop
xor
mov
sbb
pop
mov
into
sahf
mov
pop
enter
add
jne
leave
cmp
stos
repz
sahf
sar
dec
iret
xchg
sbb
arpl
xor
push
and
cmc
pop
xchg
je
mov
andl
sub
xchg
add
andb
ficoml
mov
pop
adc
pusha
ret
out
inc
daa
addr16
prefetcht1
sub
or
xchg
cltd
inc
repz
popa
andb
sbb
jno
lods
outsl
inc
push
sub
dec
fwait
lcall
pop
je
aad
jp
repnz
or
xorb
jb
adc
xor
pop
push
push
fcomps
cmpsb
shll
shll
add
sbb
push
sbb
push
inc
test
push
xchg
cltd
movsl
into
mov
and
mov
test
jns
sub
xchg
xchg
addl
pop
leave
lds
jbe
push
movsb
scas
in
scas
adc
daa
and
movsb
push
lcall
repnz
bound
mov
mov
cmp
sarb
dec
jbe
out
aaa
and
stos
in
pop
adc
dec
in
xor
lock
lea
xor
aas
movsb
xchg
pushf
jle
sbb
sub
push
jmp
add
out
xor
xchg
andb
cmp
outsb
mov
cmp
clc
mov
or
iret
push
jo
sarl
add
xchg
lcall
inc
lock
je
loope
aas
jp
xchg
call
and
sub
push
cmp
fisubs
loope
mov
sti
ja
add
and
sub
lods
movsb
jae
sbb
push
sahf
inc
pop
xor
fnsave
jmp
push
loope
cmc
mov
rorb
jg
rcrl
and
filds
ficompl
pop
rorl
cld
cli
xor
push
jmp
fsts
mov
adc
cmp
or
xchg
jmp
inc
xor
xor
cmp
mov
test
mov
xchg
incb
clc
xchg
js
adcb
dec
dec
mov
fs
nop
stos
dec
aad
aad
fwait
push
test
and
bound
imul
divb
xorb
adc
into
fdivr
lds
jg
mov
dec
cli
xor
outsl
pop
les
adc
mov
ret
cmp
xchg
aaa
mov
mov
movsb
sbb
xor
lds
sbb
cltd
add
icebp
sub
negl
imul
stos
sarb
repnz
mov
cmp
inc
mov
xor
scas
add
inc
shr
pushf
push
cmp
pop
mov
inc
mov
mov
cmpsl
add
sbb
lods
fsubs
mov
inc
pop
and
movsl
insb
or
cmpsb
mov
frstor
or
cmp
scas
mov
sbb
stos
push
mov
ficompl
scas
fwait
mov
inc
pop
gs
sbb
mov
imul
xchg
fsubrs
into
cs
jo
mov
mov
js
not
adc
mov
testb
outsb
addr16
icebp
stos
dec
jge
pop
rclb
xchg
mov
mov
sbb
rcll
out
cmp
sub
mov
in
dec
mov
adc
ja
mov
dec
repnz
aaa
adcl
in
fiadds
sub
mov
adc
lock
js
out
dec
imul
clc
jmp
mov
imul
inc
in
xchg
div
dec
testb
push
das
gs
in
xchg
pop
loopne
cmp
aas
hlt
xchg
inc
jp
sub
pop
aaa
imul
jl
aam
add
fwait
jmp
rcrl
xchg
cmp
jge
jnp
mov
mov
lods
inc
inc
pushf
pop
cwtl
or
xchg
enter
ret
in
or
ja
lahf
and
pop
pop
sbb
mov
jnp
xlat
jbe,pn
push
into
mov
xchg
insb
cli
in
sub
imul
addr16
xor
inc
lahf
hlt
into
jge
aas
mov
mov
call
ljmp
fadd
fsubl
mov
insb
xadd
in
ret
aad
mov
lock
mov
push
xchg
mov
data16
inc
loop
mov
rclb
sbb
push
sbb
addr16
sub
pop
scas
fsubrs
or
mov
mov
lret
jno
idivl
xchg
cltd
hlt
out
cmp
fcoms
sbb
daa
or
cmpb
push
pop
push
pop
pop
fs
aaa
sbb
xor
pop
dec
sbb
xchg
sahf
mov
out
pop
in
lock
cmpsb
lods
rcrl
cmp
dec
pusha
xchg
cmpsl
mov
xor
in
adc
sub
mov
movsb
stos
in
push
iret
jno
jnp
fwait
push
fmulp
dec
imul
dec
push
in
vmovaps
imul
or
xor
ja
fcoms
jb
fs
mov
inc
cmc
lahf
adc
js
int3
sbb
xor
mov
lret
pop
shlb
and
pop
mov
xor
ja
push
pop
and
cwtl
push
adc
cmp
jae
and
mov
icebp
aaa
stos
sbb
in
scas
loop
inc
sahf
aam
xchg
in
nop
dec
lret
aam
push
clc
test
fdivrl
pop
sbb
push
mov
shrl
or
cmpsl
lcall
ret
mov
pop
push
pop
jb
iret
test
addr16
faddl
cmpsl
gs
xchg
enter
dec
aaa
push
mov
popf
or
and
ss
or
push
pop
mov
xor
ja
xchg
add
test
inc
daa
inc
cmp
mov
lahf
mov
test
aam
movsl
cwtl
cwtl
gs
les
sub
jbe
test
out
mov
pop
fldt
xchg
sbb
mov
insb
loop
mov
xor
movl
xchg
xchg
inc
cmpsb
aad
pop
dec
dec
in
pop
xchg
xchg
fcmovnb
stc
fmull
jnp
sbb
pop
jecxz
adc
sar
push
sti
mov
out
mov
xchg
sbb
jns
cmpsb
bound
jmp
clc
daa
add
dec
pop
xor
in
out
add
mov
mov
imul
hlt
cmpl
lods
and
jae
mov
pop
gs
xchg
test
sbb
mov
aaa
or
push
mov
xchg
mov
outsl
xchg
or
jnp
fstpt
jl
lock
les
jnp
mov
ljmp
mov
inc
arpl
add
aad
imul
fs
outsl
xchg
fildl
jnp
xor
imul
push
mov
pop
mov
loope
xchg
subb
lcall
nop
mov
pop
xlat
and
addr16
sbb
xchg
jae
aad
rcrl
xor
mov
bound
add
add
inc
dec
roll
mov
mov
sbb
pop
lret
orb
inc
xchg
jo
test
ret
imul
cltd
jmp
push
lahf
cmp
xchg
and
sub
insb
mov
xorl
mov
js
pop
cmc
pop
dec
sbb
lret
arpl
mov
shlb
movsb
adc
push
mov
jne
hlt
test
jmp
add
fadds
sub
or
or
mov
fldcw
cltd
sub
jo
fs
int
out
or
lea
test
enter
adc
mov
and
loope
jg
test
pusha
or
push
mov
mov
adc
repz
out
mov
xor
rcrl
out
push
and
pop
fidivrl
cmpsl
push
je
mov
fidivs
add
sub
mov
leave
iret
cwtl
clc
loop
mov
mov
movsb
dec
in
scas
jno
inc
lret
je
pop
cld
cmpl
les
jmp
add
mov
cwtl
sbb
orl
jmp
shrb
adc
pop
sub
shlb
jecxz
fildl
ficoml
mov
sub
jno
lahf
sbb
add
xor
sbb
in
ja
imull
pop
fdivp
xchg
sbb
sar
mov
push
pushf
gs
lods
push
inc
push
mov
add
scas
inc
leave
shlb
lfs
add
aas
loopne
add
push
shl
stos
pushl
dec
mov
add
out
mov
dec
sti
cmc
aas
bts
push
lcall
fstenv
lcall
orb
mov
cltd
in
aas
sbb
ficomps
jecxz
or
mov
in
shrb
das
imul
mov
fwait
xchg
les
scas
xchg
std
sbb
sub
rcl
mov
sub
jp
jge
jle
dec
or
scas
push
dec
jno
mov
pop
pop
pop
iret
repnz
or
scas
aas
mov
lret
insl
sbb
push
jmp
cmp
push
stos
lds
or
int3
mov
sub
test
movb
xchg
mov
mov
jmp
or
dec
adc
ljmp
sbbl
adc
dec
in
fidivrs
cwtl
pop
enter
mov
jge
mov
lcall
adc
daa
xor
gs
into
addl
js
push
rdpmc
lret
aad
xor
shrb
push
hlt
mov
mov
adc
sbb
fisttps
scas
data16
out
lret
xor
or
jne
xor
movsl
cmp
xchg
jb
mov
scas
inc
mov
fcmovbe
outsb
jmp
mov
imul
xchg
imul
enter
daa
ljmp
cmp
push
jno
cmpb
cmp
pop
jge
rorb
stc
das
jnp
lds
inc
sub
pop
js
lahf
adcl
jbe
push
orl
stos
push
es
sar
xchg
add
lock
cli
adc
gs
dec
sbb
notb
idivl
shrl
push
push
in
mov
pusha
hlt
arpl
jle
adc
ss
test
ljmp
arpl
dec
mov
ljmp
and
nop
cmp
rcll
dec
dec
ljmp
pop
mov
dec
and
imul
or
pop
hlt
cmpsl
je
addb
mov
push
stc
push
popa
sti
xchg
aas
das
and
pusha
pusha
test
inc
test
xchg
js
mov
out
stc
pop
mov
inc
lds
mov
movsb
mov
imul
cmpsb
push
sub
es
idivb
cld
jecxz
xor
push
cltd
xchg
sub
daa
mov
mov
imul
mull
or
nop
jmp
push
dec
push
mov
jp
dec
pop
and
cmp
jb
add
out
inc
and
xchg
sub
lahf
xchg
imul
jle
jmp
sbb
sbbl
xchg
cmp
pop
inc
faddl
and
cwtl
mov
into
gs
adc
pop
cmp
xchg
push
xorl
push
inc
jno
xor
push
push
push
mov
cmp
lods
inc
mov
aam
orb
ja
shrd
pop
lcall
adc
sub
fidivl
xchg
bound
shrb
sub
or
pop
mov
pop
sahf
daa
out
push
lods
inc
shrl
stos
inc
lcall
jb
scas
xor
and
jae
adc
xor
jbe
fsubs
mov
cwtl
push
xor
outsl
arpl
pop
mov
test
lea
xchg
push
cmc
adc
rolb
or
push
dec
pop
mov
jb
imul
mov
cld
dec
loopne
sbb
test
dec
push
xor
mov
cmpsl
and
pop
hlt
push
inc
mov
push
int
aam
clc
out
iret
data16
or
lret
outsl
push
call
ret
rcll
lds
repz
xchg
push
mov
xchg
mov
fistpl
and
cltd
sbb
ds
xchg
sub
xchg
in
sub
in
js
fs
xchg
iret
adc
aam
inc
cmp
test
pushf
lret
adc
ds
nop
mov
sbb
push
sub
mov
mov
mov
jnp
push
pop
mov
nop
loopne
std
sub
cwtl
add
fsubrl
hlt
add
jp
shll
pop
in
lea
cli
mov
mov
jae
addr16
add
idiv
shlb
adc
std
addb
sbb
inc
sub
xor
rolb
jae
dec
add
mov
xchg
aaa
xor
jo
or
std
aam
test
add
sub
push
lcall
loop
pop
dec
iret
es
xor
repz
add
std
xchg
arpl
sub
fsubs
sub
hlt
jl
or
and
adcb
inc
rcrl
sahf
xor
mov
mov
xlat
outsb
and
xchg
sub
mov
stos
push
lods
sbb
and
imul
into
hlt
adc
je
lock
ja
imul
ret
sub
hlt
push
xchg
and
sbb
xchg
jbe
xchg
test
mov
cmp
or
jp
ds
imul
xor
ja
cltd
jle
or
push
mov
inc
stos
sbb
fildl
pop
xor
in
out
pop
lock
in
fnstcw
lcall
popf
xor
into
sub
and
das
mov
loope
push
gs
es
adc
mov
mov
dec
sub
adc
cltd
jle
xorb
enter
and
xor
cs
add
jns
imull
mov
cltd
loope
call
xor
out
jecxz
fbstp
frstor
in
fistpll
cmp
out
loopne
fildll
fsubrs
pop
data16
cmp
iret
data16
insl
mov
lret
fadds
addr16
xchg
sub
sub
int
pop
test
addr16
shlb
mov
or
push
shlb
cld
or
cs
data16
cmp
je
je
fbld
mov
fnstenv
testl
bound
push
scas
ret
enter
stc
jmp
repz
aaa
into
mov
and
mov
add
mov
loop
stc
xbegin
fcoms
cmp
mov
lret
jne
mov
int3
mov
stc
mov
clc
loop
rcrl
cmp
mov
mov
mov
mov
data16
subl
popfw
or
lods
inc
aad
mov
mov
es
xor
add
ljmp
pop
dec
out
aam
pop
pop
jbe
mov
pop
xlat
lods
inc
or
push
in
adcl
inc
fucomi
jg
xchg
mov
testb
out
pop
mov
scas
mov
pusha
testl
pusha
add
sub
pushf
xor
das
and
sahf
call
jo
into
inc
fsubrs
or
push
mov
mov
xchg
cs
scas
inc
sub
call
fimull
leave
jle
mov
test
xchg
ss
into
gs
xor
pusha
arpl
pop
jnp
or
or
popa
cmp
scas
inc
xor
pop
stos
sub
pop
test
jmp
mov
mov
pop
pop
push
sub
ss
test
lods
mov
mov
and
and
sarb
lret
push
add
gs
js
push
insb
sbb
dec
outsl
lds
or
push
adc
pop
inc
sahf
dec
test
jb
sti
test
sbb
ljmp
ret
inc
lea
inc
dec
fistpll
jmp
sbb
out
test
mov
sub
cmpsb
sub
fcomps
push
dec
add
insl
xor
sub
mov
xchg
mov
scas
inc
loope
movsb
cmp
adc
pop
test
jg
sub
cmp
pop
rclb
mov
movsl
jle
dec
outsb
mov
mov
xchg
daa
mov
xchg
inc
int3
arpl
rclb
jbe
mov
mov
dec
in
push
fwait
xor
jmp
xchg
inc
fdivl
stos
xlat
outsb
in
jle
mov
pop
jp
pop
push
adc
repz
or
testl
jp
icebp
mov
test
mov
int3
adc
data16
addr16
pop
nop
jae
xchg
arpl
pop
lock
ss
push
add
imul
jne
stos
aas
jmp
sbbl
and
xsha256
cmpsb
adc
jnp
jo
mov
mov
icebp
mov
stc
hlt
std
xchg
call
in
xchg
loopne
repz
adc
xchg
adc
pop
test
das
dec
push
out
out
push
sub
add
and
loopne
sarl
aad
xor
shlb
cmp
sbb
stos
daa
mov
xchg
mov
mov
pop
lock
ret
or
outsl
jl
pop
repz
jg
in
outsb
test
popf
mov
aad
popa
mov
das
jecxz
push
in
push
sti
sub
sub
aad
fs
dec
loopne
jle
scas
sbb
mov
dec
loopne
pop
mov
das
iret
data16
aaa
rcrl
push
in
int
pop
repnz
mov
push
jmp
clc
xchg
sub
pop
xor
mov
inc
cmpb
cld
stos
fs
push
out
add
xchg
xor
fidivs
mov
loop
jns
shrb
mov
jl
lds
mov
mov
or
mov
mov
dec
in
pop
outsl
push
dec
in
out
xchg
jg
fsubrl
int3
arpl
in
adcl
push
cmp
mov
or
scas
cmp
mov
lock
mov
or
push
cmp
shrb
cmp
stos
xor
test
push
lods
scas
pusha
or
call
repz
and
faddl
in
insb
xchg
mov
push
test
js
inc
mov
mov
hlt
mov
dec
in
sub
pop
out
or
fiadds
icebp
mov
aam
popa
enter
cmp
xor
gs
jns
pop
insl
mov
shlb
arpl
adc
push
xchg
lods
inc
lds
pop
pop
xsha1
cmpsb
dec
fwait
fs
or
mov
cmp
inc
sbb
int3
xor
test
mov
xor
les
xlat
dec
push
into
gs
mov
pop
mov
movsb
adc
fists
lods
inc
inc
push
or
lret
rolb
cltd
ret
adc
mov
fs
mov
shll
xlat
or
into
cmp
daa
push
and
pusha
push
xchg
jg
push
lea
mov
test
movsb
fidivrl
adc
mov
mov
push
jmp
xchg
jl
subl
xchg
sub
jl
sub
hlt
ds
or
imul
sar
repnz
aaa
pop
shlb
ret
inc
inc
fnstenv
sahf
xor
mov
mov
mov
scas
and
ds
inc
jno
mov
jmp
dec
push
out
ret
cmc
aas
popf
xor
in
push
call
push
inc
jmp
jns
sahf
xor
xchg
xchg
dec
filds
int
mov
ss
push
push
ss
fsubl
test
dec
sbb
std
xchg
push
pusha
cmp
push
pop
lahf
mov
inc
fadds
inc
xor
jb
xor
push
test
test
stos
xor
sbb
pop
scas
pop
pop
rcrl
test
cld
ficoml
or
ret
pop
jg
mov
andl
gs
repz
inc
inc
sbb
mov
leave
mov
iret
loop
pop
lock
gs
sbb
je
nop
nop
xchg
sub
aad
cmp
in
dec
push
inc
mov
ja
shrl
je
jae
mov
mov
fcoml
test
sbb
mov
xor
enter
int
test
mov
push
out
jmp
jo
or
or
sub
sub
mov
dec
in
shrb
push
shrb
daa
repz
out
addb
push
mov
icebp
imulb
and
dec
loope
dec
dec
in
popa
insb
call
mov
sbb
sbb
mov
ds
pop
mov
pop
mov
fucom
ja
add
xchg
bound
lods
mov
xor
fcmovnbe
cmp
push
std
push
jmp
pop
dec
jo
cmpl
and
push
lods
inc
daa
and
popa
xchg
mov
mov
test
xchg
or
fwait
jg
xchg
sub
pop
mov
cs
pop
jo
shlb
insl
mov
mov
jl
or
sti
xchg
aas
ds
xor
lods
rcrl
aaa
into
mov
fsubrs
stos
leave
pusha
in
or
je
cmp
adc
push
jl
leave
outsl
mov
loop
test
jmp
adc
in
test
mov
xchg
xor
insl
arpl
mov
ljmp
mov
xchg
in
aam
outsl
movsb
cmp
outsl
call
pop
sahf
or
mov
cmp
dec
scas
sbbb
jle
jecxz
stc
sbb
sub
pop
dec
xchg
sub
pop
out
mov
mov
sbb
pop
xchg
sub
ljmp
push
sbb
mov
mov
movsl
arpl
stc
arpl
in
adc
xchg
inc
push
insl
add
pushf
mov
inc
rcll
fiaddl
jmp
js
fnsave
daa
mov
cmp
and
es
ret
pop
pop
mov
sbb
dec
jg
scas
outsb
xchg
or
adc
fwait
xor
lods
inc
sahf
inc
test
mov
cmp
and
adc
fistl
xsha1
cmpsb
mov
scas
inc
dec
fstl
test
rcrl
pop
mov
loope
test
mov
pop
mov
movsl
pop
repnz
or
popf
cmp
es
das
pop
sub
movsl
pushf
subl
scas
into
lods
aam
ficomps
mov
cmp
add
push
mov
sahf
add
lds
movntq
xchg
int
lods
inc
sbb
and
inc
pop
call
roll
popa
clc
cmp
push
movsl
push
mov
inc
mov
test
jmp
and
push
dec
in
cs
es
jp
les
xor
stos
cltd
pop
sahf
or
lret
out
stc
lods
add
xor
inc
fst
sub
lahf
pop
loop
mov
mov
ja
aad
inc
fneni(8087
in
gs
fidivs
ljmp
push
jb
mov
cmpb
call
daa
pop
sub
jno
adc
fwait
pushf
adcb
les
cmc
and
fs
in
into
gs
movsl
mov
pop
jp
mov
xchg
lods
clc
and
lods
inc
add
clc
inc
pop
push
in
mov
int3
fs
jg
xchg
and
nop
cmp
stos
lret
sti
fldt
push
adc
dec
pusha
idivl
outsl
push
jb
add
clc
rcrl
jmp
fstpl
fsubrs
xor
test
aad
add
lret
adc
cld
stc
jmp
inc
sbb
imul
jno
ljmp
out
insb
add
ret
hlt
lock
test
out
repnz
pop
push
xchg
outsl
mov
test
jne
enter
or
push
jmp
jbe
jno
sbb
inc
or
insw
mov
lahf
cwtl
outsb
add
stc
ds
xchg
loope
push
aad
xchg
sub
lock
gs
cmpsb
sbb
push
nop
mov
out
test
push
test
push
jb
jl
mov
in
andl
shrl
adc
dec
lahf
out
setbe
mov
fsubrs
add
rolb
xor
mov
cmpsb
lods
inc
call
repz
adc
push
inc
fdivs
es
insb
hlt
mov
mov
pop
xlat
mov
push
push
jno
push
xchg
loope
push
mov
push
jg
inc
test
push
and
mov
add
xor
sub
pop
cmc
mov
clc
mov
mov
out
sub
adc
shrb
jae
mov
cmpl
cmpsl
mov
pop
imulb
mov
dec
sub
add
lahf
jnp
xor
inc
fsubr
or
xlat
outsb
and
cmp
pop
sub
stos
stos
pop
push
jmp
mov
inc
out
add
xor
repnz
fldcw
loopne
imul
ss
out
sbb
or
pusha
cmp
and
pop
fisttpl
dec
jecxz
sbb
cwtl
fists
mov
sbb
sub
jg
mov
test
mov
call
sbb
mov
pop
mov
clc
outsl
mov
mov
inc
fldcw
add
pop
mov
fnstenv
inc
sbbl
lods
sbbl
inc
inc
fnstsw
pop
push
mov
dec
add
push
dec
lds
stc
mov
cmpsl
cld
xchg
fldenv
inc
fsts
mov
cmp
pop
and
jecxz
mov
jnp
sbb
sub
pop
mov
sar
xchg
ret
xor
lds
pop
repnz
jae
shrb
inc
fiaddl
out
xchg
mov
push
es
imul
outsb
add
iret
or
add
pop
andb
mov
or
loope
movsl
cmp
stc
stc
nop
sub
movsb
pop
xor
cmp
scas
jmp
fbstp
or
sbb
jno
sbb
jno
sub
fs
push
insb
les
testb
cwtl
and
pop
sarb
fwait
xor
and
fsubl
mov
fnstenv
imulb
sub
cli
xchg
sbbl
mov
adcb
stos
inc
gs
in
add
fs
sub
daa
mov
mov
mov
in
daa
jbe
roll
sub
lret
cmp
bound
jno
pop
lahf
jne
rcrb
or
inc
and
scas
testb
cwtl
call
jmp
imul
sbbl
fisubrl
stc
pop
in
xchg
sub
test
xchg
mov
jns
shrl
push
call
sub
mov
popa
imul
xchg
sahf
mov
aad
shl
mov
es
push
jmp
mov
mov
push
lods
fisubrl
sub
mov
xchg
sub
push
xchg
sub
es
cld
xor
sub
scas
out
push
jmp
ljmp
and
mov
xor
jno
xchg
sub
rcrb
insb
dec
loopne
pop
repz
lahf
xchg
sub
pop
int
xchg
aas
dec
jecxz
leave
outsl
push
sti
loopne
sub
jecxz
test
out
loopne
dec
stos
inc
sub
sub
or
fs
ficoms
mov
lock
sub
fyl2xp1
nop
or
stc
xchg
or
sub
stc
nop
adc
cli
dec
dec
mov
sub
cltd
adc
push
ljmp
cmp
push
cs
icebp
popf
dec
in
jp
and
adc
inc
iret
and
addr16
ret
xchg
push
pop
xlat
pop
repz
sbbl
push
push
popf
test
cwtl
das
adc
sbb
push
mov
repz
and
nop
jp
and
int
mov
pop
push
cmpsl
inc
lret
outsb
xchg
sub
nop
outsl
add
ljmp
cld
push
inc
pop
mov
cmpsl
cwtl
sbb
stos
jecxz
ret
pop
gs
jecxz
into
aas
adc
add
fs
insb
and
pop
xor
xchg
pop
sbb
mov
push
push
jle
fwait
mov
fs
pop
sbb
fs
xchg
pop
imul
push
aam
fsubrl
or
iret
jl
jp
dec
out
fs
daa
jbe
mov
mov
push
cmc
mov
xor
xor
mov
psubq
push
stos
inc
cli
ret
movb
adc
sahf
push
mov
and
cmp
and
push
test
leave
fsubrs
xchg
jb
sbb
mov
xchg
sub
pusha
mov
sbb
xchg
mov
pop
dec
filds
or
test
lret
imul
push
mov
fists
test
cmpsl
push
jmp
icebp
cmp
loop
out
test
cs
enter
lods
sub
into
call
mov
dec
and
lods
pusha
sbbl
dec
inc
fnsave
mov
hlt
xor
jae
push
sbb
mov
xor
sbb
testl
shl
js
sub
push
ljmp
mov
pop
or
mov
cmpsl
xchg
sub
pop
das
stc
nop
mov
ret
mov
jecxz
sub
lret
leave
push
in
add
inc
fcomp
mov
vmovd
enter
in
dec
lahf
mov
jne
pop
xor
movsl
cli
sbbl
sbb
add
fstps
mov
xchg
es
mov
pop
xchg
incb
mov
dec
out
adc
aad
mov
and
sub
dec
in
iret
jbe
stc
enter
pushf
in
or
das
lret
jo
adc
fimuls
jbe
nop
daa
icebp
adc
repz
xlat
outsb
sbb
fnstenv
jno
inc
xchg
int3
xor
mov
push
add
imul
adc
jbe
fidivs
xchg
leave
pusha
or
out
test
inc
fsubrs
push
sub
inc
dec
mov
inc
call
push
movsl
push
mov
call
mov
shlb
push
sbb
jb
lock
scas
mov
and
test
inc
pop
repz
jbe
inc
pusha
xchg
sub
pop
out
push
dec
ja
mov
subb
sbb
mov
cld
adc
insl
shlb
inc
and
lods
inc
xor
push
push
call
push
push
cli
xchg
adc
outsb
mov
or
jae
mov
xchg
aaa
cwtl
das
push
mov
lds
inc
lret
bound
pop
repz
sub
dec
mov
mov
inc
xchg
subb
bound
pop
sahf
test
gs
xor
xor
sbb
lock
lret
or
inc
into
fnstsw
lahf
lock
sub
cmp
outsb
jno
push
in
je
dec
loope
xchg
adc
jae
sub
outsb
add
mov
pop
pop
icebp
jp
sub
push
and
or
mov
ss
jg
shl
jns
sbb
mov
or
mov
repz
shrb
vcvttsd2si
jno
in
add
add
jns
loopne
and
or
jb
mov
cwtl
in
popf
xor
test
mov
cmp
mov
ret
or
dec
aad
jle
in
es
fcmovb
mov
hlt
sti
out
in
xchg
jp
lret
push
fs
jg
xor
test
mov
push
xor
inc
or
sti
xchg
mov
fcmove
popa
int3
jge
push
stos
in
lock
dec
mov
sbb
icebp
mov
or
xor
lds
icebp
mov
mov
sbbl
dec
es
test
dec
mov
cmpsl
jno
push
arpl
aam
test
pop
dec
pop
push
jmp
in
xchg
sbb
jnp
scas
subb
iret
in
shll
lcall
cmp
in
mov
addr16
ja
js
stos
inc
cmp
mov
outsl
lahf
cmpsl
pop
not
rolb
mov
cmc
mov
xor
inc
xlat
clc
jns
xor
les
fimull
sti
or
dec
jle
lea
lahf
mov
out
sahf
xor
xor
push
mov
in
dec
and
int
pushf
or
fs
fsubl
push
popf
out
js
mov
sete
xorl
fnstenv
ss
cli
xlat
enter
jg
dec
lods
js
inc
xor
jb
cmp
ficomps
inc
inc
jmp
lock
cmp
adc
in
cld
movsl
sbb
pop
aaa
fidivs
insl
mov
bsf
je
xchg
sub
pop
push
ljmp
or
jbe
ret
pop
or
jns
fldt
xor
fwait
jb
cmpsb
mov
xchg
sub
dec
loopne
inc
daa
sbbl
popa
push
push
add
ss
shll
push
jg
mov
shrl
jae
inc
mov
out
pop
pop
shrb
inc
xor
xor
clc
pop
push
cmp
int
shrb
lret
insb
add
jns
push
imul
push
incb
imul
fidivl
mov
sub
sbb
ds
sbb
xor
xor
or
pop
mov
js
repnz
repnz
adc
mov
adc
je
sbb
cmc
mov
xor
mov
fists
xor
aad
sub
lods
inc
jbe
test
adc
bswap
pop
lcall
xchg
outsl
mov
lea
push
cli
xchg
inc
out
inc
fimull
fs
scas
push
cmpsb
add
frstor
add
cli
inc
icebp
mov
dec
jbe
iret
data16
es
xor
adcb
push
aaa
into
inc
mov
jns
addr16
pusha
pop
xchg
insb
push
mov
mov
les
and
mov
mov
hlt
and
std
xchg
add
xchg
cmp
mov
dec
test
test
insb
pop
icebp
pop
pop
repz
movsb
cmp
out
dec
xchg
or
add
sbb
sub
into
pushl
clc
mov
fs
cmp
int
pop
dec
fisttps
pop
jo
clc
pop
and
jb
cmp
repnz
sub
mov
xchg
cmpsl
notrack
shrl
cmp
lods
outsw
push
fwait
int
ja
xor
pop
out
shl
mov
in
xchg
and
sub
pop
mov
push
loope
test
xchg
cs
cmpsb
call
scas
stc
sbb
push
dec
cmp
jge
icebp
mov
pop
lock
ja
cmpsb
test
ja
and
push
adc
fildll
mov
out
xor
mov
cs
sahf
pop
dec
mov
pop
pop
and
xchg
arpl
cmp
jns
orb
sbb
fldl
push
inc
mov
push
sbb
movsl
pushf
mov
and
inc
lret
mov
ds
mov
out
sbb
jne
insl
push
clc
cmp
push
lods
mov
mov
adc
data16
push
jmp
mov
fisttpl
mov
sub
lods
inc
sub
lret
shlb
add
sbbl
icebp
push
popf
and
cmp
lret
mov
fld
push
fidivs
out
negl
jb
xchg
movsb
cmp
imul
mov
mov
push
jge
or
jl
les
mov
es
insb
sub
cli
cmpsl
out
ss
pop
cmp
ljmp
neg
xchg
push
sub
pop
ja
sub
lret
cmpsl
out
gs
dec
fcompl
mov
jp,pt
xchg
loope
dec
dec
mov
ja
repnz
cmp
cs
add
push
aas
push
sarb
dec
push
mov
sbb
outsl
mov
testb
call
xor
jne
xor
adcb
out
call
outsb
add
outsb
dec
mov
jnp
rcrl
stos
inc
into
loop
jbe
lock
std
xchg
push
mov
mov
xchg
add
fstpt
rorb
and
pop
cmp
insb
xorb
lea
mov
loopne
adc
daa
mov
pop
xor
data16
xchg
test
inc
pop
and
popf
bswap
inc
shlb
ljmp
or
or
es
icebp
jne
xor
loope
sub
int
inc
mov
add
jae
rol
lret
dec
rclb
mov
icebp
push
out
fisubs
into
adc
jnp
inc
fistl
xchg
out
fwait
lds
mov
add
sbb
push
imul
outsl
mov
push
data16
inc
std
jl
and
cmp
lods
push
jne
push
or
lret
testl
mov
jg
sbb
cmpsl
mov
js
js
stc
pop
cvtpi2ps
inc
aas
or
mov
dec
pop
push
ja
inc
outsl
in
pop
sub
lcall
mov
xor
testb
cld
and
mov
mov
push
out
sbb
mov
mov
popf
xor
sub
sbb
cltd
cli
pop
test
dec
pushf
jge
aam
test
mov
adcb
std
push
sub
push
xor
pop
movsb
adc
in
sub
aas
push
cmp
neg
mov
jbe
scas
jecxz
stos
cmp
add
jl
aam
sub
mov
and
jle
ljmp
cmpsb
shll
sbb
cmpb
jmp
lods
push
inc
test
push
popl
jno
cwtl
sbb
add
stos
push
pushf
inc
insl
sbb
fld
ja
clc
repnz
fistpl
arpl
xchg
out
ljmp
repnz
hlt
lock
xor
cmpsb
nop
xchg
faddl
jecxz
ljmp
incl
sti
add
je
ffree
fisttpl
cs
or
jns
jne
inc
aad
dec
dec
xor
fldt
cmpsl
push
jp
mov
jp
ret
or
jmp
mov
mov
cmp
cmp
addb
ficomps
imul
pop
sahf
fiadds
sub
cltd
push
insl
inc
jns
addr16
insl
push
stc
sbb
pop
dec
or
add
in
xchg
xchg
clc
decb
lea
jmp
inc
lahf
ds
xchg
das
mov
xchg
dec
xchg
adc
xchg
mov
push
and
and
ljmp
push
mov
rorl
add
mov
iret
pop
sub
das
push
repnz
jns
lret
xchg
and
test
lret
or
hlt
cmp
and
push
mov
mov
xchg
vcvtsd2ss
fs
popf
mov
mov
push
lods
xchg
cmp
sbb
sbb
lcall
bound
push
mov
jb
lret
loop
fwait
inc
ds
push
enter
cli
je
sbb
or
sbb
and
mov
jae
mov
loope
lds
adc
insl
in
cmpb
pop
ror
dec
stc
sysexit
jp
adcl
xchg
xor
ror
push
ljmp
std
pop
lahf
mov
cmp
mov
pop
nop
popf
cwtl
stos
mov
mov
push
dec
pop
nop
xchg
enter
cmp
out
add
sbb
in
arpl
or
pop
sti
pop
mulb
mov
xlat
jp
icebp
jg
pop
popf
inc
sbb
pop
cmp
or
mov
jne
sub
jns
cs
xchg
jle
add
mov
mov
and
ja
stos
aad
test
inc
add
pushf
jne
jno
lods
cs
mov
sub
sbb
and
fsubr
cmp
fiaddl
add
pop
in
or
arpl
fists
mov
lret
push
mov
xor
adcl
popa
call
stos
mov
push
cmc
mov
adc
lds
push
test
mov
sbbl
mov
loop
outsb
mov
sbb
inc
xor
sbb
in
in
cs
push
aad
sbb
cmpsl
ja
in
mov
js
jg
jle
xor
hlt
cmp
loopne
inc
and
mov
sbb
sub
jnp
fdivs
loopne
imul
jl
pop
js
jnp
daa
cmpb
mov
jmp
or
in
push
popf
cmp
jne
loopne
hlt
bound
add
clc
ljmp
ret
and
xchg
inc
les
lea
and
push
adc
gs
shlb
fwait
adc
jb
sub
popa
out
lds
xor
cmp
xor
lea
daa
adc
push
or
mov
stos
pushf
inc
js
stos
xor
fnstsw
lahf
adc
inc
xor
xor
push
sti
js
loop
mov
mov
jb
mov
sbb
dec
sub
ret
data16
jbe
movsb
or
mov
pop
add
jmp
xor
fsubrp
je
pop
std
cmp
test
cmpsb
sub
xchg
insb
fistpl
jns
mov
imul
or
std
gs
test
mov
or
cmpsb
dec
adc
fcompl
repnz
or
pop
stc
fs
and
andl
clc
jne
add
pop
cli
gs
xor
pop
add
adc
fiadds
vprotd
out
cmpb
fisubrl
sti
mov
das
xor
in
mov
ret
xchg
mov
mov
sub
dec
negb
jecxz
sub
inc
xchg
aas
ljmp
movsl
cvttps2pi
xchg
cwtl
mov
rolb
and
leave
mov
aad
pop
xchg
incb
and
sbbl
in
cmc
mov
push
rorb
inc
sbb
fs
lods
xchg
cmp
arpl
mov
sub
cmp
or
pop
xchg
and
cmp
or
jno
fistpl
or
lcall
outsb
pop
hlt
lahf
cld
mov
xor
jnp
clc
push
shrl
adc
nop
call
push
or
xor
dec
cmp
lods
fstpl
sub
imul
iret
xchg
dec
push
fstl
in
pop
add
jne
adc
jnp
imul
fsts
test
movsl
jns
clc
cmp
into
add
mov
icebp
sub
js
scas
jp
push
xor
gs
jo
adc
mov
jnp,pn
in
pop
pop
sub
jmp
es
inc
dec
or
jno
mov
mov
push
add
lds
cwtl
outsb
xchg
mov
das
ficoml
cmp
pop
rcrl
push
and
push
call
rcrl
lods
mov
add
jge
add
mov
and
mov
add
popf
adcb
movsb
stc
movsl
lods
jb
xchg
push
cmp
adc
and
sti
cmp
pop
push
fdivs
cwtl
cltd
and
cli
les
mov
add
pop
fsts
push
mov
mov
and
negb
jbe
mov
nop
insb
sahf
lds
in
cmpsb
leave
jns
in
clc
flds
mov
les
mov
dec
mov
nop
cmpsb
insb
mov
out
jns
push
fdivrs
add
and
test
cmc
or
test
dec
sub
stc
cli
arpl
cmp
movsb
dec
pop
pop
mov
dec
or
lea
push
mov
mov
insb
jecxz
mov
repnz
call
out
mov
inc
dec
mov
xor
test
xchg
jg
hlt
shrb
pop
rcll
inc
inc
aas
loope
addb
pop
inc
adc
cmp
cs
arpl
adc
sub
es
mov
fistpll
fsubrs
cltd
data16
lret
lea
in
test
push
dec
adc
jns
mov
enter
push
les
mov
pop
or
cmp
gs
jp
mov
cwtl
xor
movsb
mov
mov
sub
cmc
mov
sti
push
sahf
adc
or
jb
sub
nop
xlat
jle
pop
mov
pop
scas
sub
fbstp
dec
xor
xchg
push
popf
push
jmp
leave
icebp
mov
mov
or
sbb
cmpsl
dec
pop
xchg
sub
outsb
lds
rorb
inc
scas
and
cmp
inc
fnstenv
pop
adcb
push
pusha
testl
mov
mov
ficomps
lds
xor
xlat
mov
cmp
out
and
cmp
inc
fsubrs
pop
adcb
push
pop
testb
push
roll
orb
push
push
lods
test
dec
ja
xor
xlat
cwtl
rol
cwtl
dec
mov
loop
pushf
f2xm1
int
push
cmp
pop
mov
xchg
inc
xchg
sub
mov
cmp
lds
push
call
mov
outsl
push
imul
mov
fisubrs
add
pop
xlat
jo
test
out
lea
mov
fbstp
idivl
loop
push
mov
cld
call
sbb
cmp
pop
ss
dec
jo
cli
sbb
mov
dec
dec
sub
mov
dec
out
loopne
mov
pushf
aaa
fnstenv
pop
mov
mov
int3
adc
jbe
pop
xor
push
push
std
xchg
xorl
mov
ret
jo
cmc
idivb
shlb
pop
es
dec
push
out
jns
lods
inc
pushf
lcall
out
in
xchg
sub
adc
addl
or
lds
in
test
or
cmp
or
mov
sbbl
push
add
cld
pusha
push
mov
sbb
aam
cmp
sub
dec
pusha
idivl
rcrl
js
sarb
xchg
sub
inc
mov
jbe
pop
repnz
cwtl
shrb
bound
xchg
jmp
mov
lcall
or
push
inc
lea
int
fidivl
fsts
or
xchg
jmp
jo
pop
or
daa
scas
pop
cmp
lret
stos
inc
cld
lods
pop
out
ficomps
lret
xorl
or
sub
les
mov
dec
in
cld
aam
das
fwait
insb
push
int3
dec
testb
lahf
push
lods
mov
fdivrl
rolb
mov
js
xchg
push
ljmp
mov
lahf
ss
hlt
xor
and
inc
popa
clc
xor
push
jmp
inc
inc
int
cmp
cmp
pop
jg
dec
jp
ret
insb
xchg
testb
push
jae
std
xchg
cmpb
insb
xlat
outsb
mov
push
popf
pop
mov
daa
sub
xlat
outsb
lods
dec
push
ljmp
and
nop
imul
mov
and
pop
adc
ss
mov
pop
xchg
out
push
mov
repz
jmp
add
rorl
add
sbbl
arpl
punpckhwd
jl
cmpsl
ds
popf
push
jmp
add
les
cwtl
or
sbb
adc
dec
cld
add
in
pop
movsl
cmp
push
and
fsubr
pushf
xor
mov
mov
xchg
jg
pop
repz
mov
cmp
sbb
cmp
das
push
int3
das
gs
add
cli
data16
adc
and
jle
adc
cli
jbe
add
cmp
adc
mov
int
fidivrs
inc
sub
cmp
dec
int
jge
ret
jle
jp
cmpb
mov
inc
cmpsl
ja
mov
pop
cli
out
mov
lods
and
inc
popf
enter
stc
mov
and
insl
insl
add
pop
push
push
and
cmp
pusha
add
xor
out
and
jae
or
cmp
imul
ljmp
push
sbb
xorl
xchg
arpl
mov
daa
xlat
lds
dec
push
cmp
pop
cmp
inc
call
jle
push
popf
add
jbe
shlb
shll
in
push
sbb
scas
stos
lret
out
rcl
mov
call
mov
mov
xchg
lods
ljmp
mov
movsb
cmp
mov
into
fisttpll
pusha
xchg
sub
orl
loopne
in
dec
mov
fnsave
inc
add
mov
mov
out
outsl
xor
xor
mov
push
xchg
dec
loop
je
dec
dec
adc
push
insb
and
dec
push
data16
popa
push
mov
daa
push
push
call
jns
and
sub
dec
sbb
scas
or
divl
push
out
xchg
lds
popf
sbb
scas
fstpt
mov
pop
std
xor
pop
sarb
sub
jp
adc
push
mov
in
pop
hlt
mov
pop
mov
sarl
lock
and
inc
fiadds
ror
enter
fidivs
dec
sub
dec
ja
inc
aaa
outsl
daa
mov
outsl
pop
pop
lock
fnsave
sbb
inc
fs
dec
in
test
cmpsb
divl
mov
call
xor
rorb
mov
fstps
out
adc
ss
sbbb
mov
lds
lret
xor
mov
inc
sahf
outsb
add
jns
scas
inc
add
es
arpl
push
xchg
movsl
push
outsl
push
push
in
aad
cli
imul
loop
xchg
mov
lods
pop
es
mov
inc
or
mov
ret
lcall
loop
dec
cmp
pxor
lahf
push
lods
out
rclb
mov
fsubrl
aaa
negl
shlb
test
inc
stc
sub
mov
push
out
stos
mov
mov
out
mov
xadd
sarl
adc
jb
push
jb
nop
ja
pop
test
lret
mov
sbb
xchg
sub
test
daa
stc
push
call
mov
pop
mov
rcll
nop
adc
pop
push
push
jle
inc
js
subb
sbb
imul
pop
pop
jecxz
mov
or
inc
fisttps
cld
push
jmp
fcmovnu
je
jle
add
data16
outsb
add
add
shrl
mov
loopne
ja
and
sbb
nop
mov
shrl
sbb
dec
xor
cmp
xor
pop
cmp
push
movsl
dec
inc
fildl
mov
fnstenv
push
inc
fldl
mov
mov
loop
pop
inc
adc
icebp
mov
fsubrs
xchg
add
dec
jbe
pop
scas
xchg
xchg
lea
mov
adc
sbb
pop
sub
xor
push
dec
cmpsb
push
sarb
inc
shlb
xlat
inc
pop
mov
in
jp
mov
and
and
je
in
jo
add
inc
mov
inc
mov
pop
inc
repz
sub
std
sbb
or
in
mov
or
in
ss
js
xchg
push
lcall
std
xchg
stc
jl
pusha
xlat
dec
loop
subb
sub
int
ds
test
sub
std
mov
cmp
mov
ret
rolb
inc
mov
and
add
cmpsl
and
jno
enter
lcall
rolb
inc
icebp
jnp
shrb
xor
icebp
jmp
push
fnsave
ja
or
mov
sub
cmpsl
ds
dec
cmpsl
cmp
adc
pop
pop
fwait
xor
mov
loop
mov
shll
pop
jecxz
das
or
ss
sub
sbbl
es
les
mov
ret
xchg
mov
and
js
sbb
cli
testb
addr16
cltd
pop
scas
inc
mov
testb
in
insb
add
dec
stos
inc
jnp
repnz
mov
jae
sbbl
lea
std
xchg
pop
scas
xor
scas
add
call
mov
jae
dec
lods
jns
and
add
xlat
fildl
lcall
and
mov
mov
cli
xchg
fidivs
mov
mov
add
push
mov
cmp
add
movsl
xchg
mov
cmpsb
call
fcmove
jns
dec
insl
ljmp
cld
jnp
adc
mov
adc
or
xchg
dec
dec
in
xor
jns
fsubrl
rolb
cmp
push
xor
push
ret
pop
data16
push
push
inc
fwait
xor
pushf
xor
dec
jnp
cmp
fldt
je
cmp
test
inc
addr16
aaa
clc
xor
jmp
out
test
fidivs
addr16
push
fidivs
in
out
sub
in
mov
js
push
pop
or
hlt
jo
repnz
adc
push
mov
mov
inc
fiadds
cmpsb
inc
iret
daa
mov
mov
lds
dec
pusha
push
mov
adcl
sbb
push
push
cmp
sarb
in
orl
pop
outsb
jbe
mov
shl
fcompl
addr16
das
dec
sub
push
jle
out
cmp
in
cmpsl
pop
jbe
pop
enter
jge
addb
ds
or
gs
dec
loope
xchg
mov
lea
mov
insb
inc
sub
lea
mov
adc
pop
lock
movsb
or
and
push
in
jnp
xor
pop
pushf
adc
int
xor
dec
out
dec
in
jo
rorb
or
mov
xchg
imul
mov
rorl
pop
popa
clc
jo
xor
pop
xchg
jg
sub
push
dec
jmp
jno
xor
je
cmp
sub
ds
inc
mov
fs
sub
sub
insl
adc
ss
xor
xchg
sub
mov
popa
pop
pusha
int3
arpl
cmp
xor
mov
and
xchg
shrl
sub
aaa
ret
jo
in
jo
cmp
cmp
mov
pop
add
es
cmp
mov
mov
fidivs
scas
ret
pop
std
jo
imul
pusha
xchg
in
addl
pushf
out
jle
ret
pop
ja
cmpsl
in
mov
aam
adc
add
pop
xchg
daa
stc
nop
test
jnp
fldcw
mov
popa
sbb
mov
mov
sub
pushf
aad
scas
push
mov
cmp
stc
mov
adc
mov
cli
arpl
lods
js
rorb
sahf
dec
cmpps
mov
ja
pop
aad
adc
jnp
mov
loope
jecxz
cmc
mov
leave
int
js
divb
fwait
mov
lahf
adc
xchg
xchg
sbb
xchg
sbb
mov
sub
loopne
jno
test
push
ss
inc
les
movsl
xchg
sub
or
push
jp
jae
jnp
mov
mov
shlb
pop
mov
gs
imul
cmp
sub
subl
mov
orb
mov
cmp
mov
rclb
push
je
cmp
cwtl
outsb
mov
sbb
jne
in
pop
movsb
mov
gs
testb
dec
int
mov
lret
jmp
test
fsubl
or
out
bound
clc
aam
incb
out
imul
pusha
mov
cmp
test
dec
add
jecxz
outsl
adc
rclb
cli
xor
fwait
or
bound
mov
popa
inc
stos
adc
icebp
jp
lods
jb
sub
test
pop
jae
fsubr
adc
inc
out
das
lds
adc
push
xchg
fistpl
jp
inc
inc
fdivl
add
pop
mov
adc
fisubs
fcoml
add
pop
mov
ja
iret
in
insl
scas
pop
jge
scas
out
test
fidivs
enter
mov
jge
mov
andb
push
clc
ret
adc
sub
aaa
fisubrl
ljmp
jbe
scas
fldenv
xchg
cwtl
out
cmpsl
pop
ljmp
repnz
sarb
sub
loop
icebp
fimull
pop
hlt
mov
int3
cmp
cmpsb
xchg
dec
xor
cmp
imul
push
adc
in
inc
mov
bnd
sbb
dec
or
pusha
push
test
mov
dec
xchg
sub
arpl
rcl
and
ret
sbb
jge
and
mov
iret
jl
jl
lds
popf
jle
dec
rcl
adc
mov
out
aam
jp
sbb
pusha
daa
xlat
cld
fldlg2
or
dec
sbb
repz
add
xor
dec
test
outsb
ljmp
nop
add
jmp
sub
push
cmp
dec
add
adc
rcl
dec
mov
cld
test
cld
arpl
or
push
inc
dec
fcom
in
lods
xor
ficoms
js
xor
bound
lret
leave
add
jns
je
and
and
icebp
insl
pop
ss
and
xorb
outsb
enter
rcrb
insl
mov
lahf
sbb
outsb
xor
cmp
imul
dec
scas
std
scas
out
test
insb
add
pusha
jecxz
dec
lret
int3
inc
fsts
aas
insb
aam
jnp
inc
loopne
jno
xchg
cltd
rcrb
push
jae
fcmovnbe
mov
mov
mov
pop
ret
out
movsl
pop
lret
popa
fcmovu
jno
adc
sbb
mov
inc
arpl
xor
dec
sbb
push
pop
pushf
out
aam
and
jne
pop
out
pop
inc
or
adc
adc
and
negb
inc
pop
pop
incb
shl
mov
dec
mov
push
ljmp
mov
cmpsb
xchg
fsubl
ss
fnsave
sub
jne
lods
addb
mov
xor
icebp
pushf
sbb
dec
out
sub
push
je
lock
pop
bound
mov
fwait
xor
jecxz
pop
dec
inc
jp
bound
push
push
sub
cmp
out
pop
repnz
add
out
pop
andb
cmc
aad
lods
popa
pop
sarb
icebp
jg
sbb
mov
cli
pcmpeqd
xor
negb
mov
mov
cltd
nop
fsubrs
shlb
outsb
int3
in
pop
push
addr16
mov
xchg
popf
lret
jnp
add
aaa
lahf
es
push
out
dec
sub
clc
movsl
sub
fwait
pop
jmp
sbb
jae
sti
add
sbb
cmp
es
int3
push
outsl
imul
aaa
jb
sbb
and
cli
or
iret
ja
inc
rclb
jns
add
rcr
sub
and
scas
lret
mov
ror
ret
inc
jge
lock
pop
ja
test
aad
adc
sbb
mov
lahf
pop
or
jle
and
dec
sub
loope
mov
ror
sti
cmpsb
adc
jbe
popf
hlt
cmpsl
push
adc
leave
adc
xchg
ret
cmp
adc
mov
add
pop
out
jo
faddp
adc
sub
pop
mov
dec
jbe
js
sbb
int
dec
mov
adc
scas
or
jbe
testl
mov
sti
xor
sub
sbb
add
jge
fcomi
fstpl
dec
lock
cmpsb
xor
insl
les
loope
leave
bound
mov
push
push
cmp
js
loopne
ljmp
sub
cli
arpl
push
push
push
jg
mov
insb
xchg
mov
loop
popf
pop
scas
into
mov
jbe
inc
fbstp
cwtl
std
cwtl
push
cld
push
call
imul
out
andl
adc
xchg
out
jns
lods
xor
cld
fcompl
cmc
int3
imul
jl
pop
pop
ds
sub
jns
inc
dec
loop
mov
clc
mov
arpl
sbb
dec
jg
pop
test
repz
xor
mov
sbb
and
ret
add
out
lcall
pop
lds
pop
push
jb
fisttpll
in
test
push
into
or
xor
inc
jae
aas
mov
leave
mov
inc
inc
in
sarl
mov
fcoml
mov
scas
push
push
adc
sti
mov
pop
sub
shl
sbb
lds
into
jo
mov
popa
out
ljmp
inc
add
inc
xor
mov
pop
lods
cs
daa
or
pushf
pop
rorl
data16
test
ds
fs
stos
test
inc
mov
fsubrs
mov
or
cmp
enter
push
shlb
mov
inc
cmp
out
xchg
outsb
jge
sub
lcall
in
xor
into
pop
lea
xchg
cmp
aad
jle
sub
jmp
shl
lahf
cmp
call
je
stos
lret
add
sub
sub
cmp
mov
das
dec
sbb
dec
push
insb
mov
or
lea
mov
add
xor
icebp
cmc
insb
sbb
fbstp
dec
jg
add
sbb
jmp
jg
cmp
imul
mov
nop
repnz
sub
out
clc
jno
sbb
loop
inc
push
std
cltd
jp
les
pop
lods
inc
xchg
pop
lret
gs
mov
add
leave
push
repnz
pusha
xchg
mov
scas
outsb
adc
outsb
movsl
jl
jmp
xor
aam
fsubl
and
and
jl
enter
pop
cmovae
test
xor
in
subl
sbb
inc
lods
jle
test
andb
mov
orb
inc
stos
pop
xchg
stos
scas
filds
or
pop
pushf
jnp
mov
mov
mov
fidivrs
lahf
add
bound
xchg
and
adc
mov
fiaddl
cmp
icebp
cmp
inc
jbe
jne
mov
jo
ds
mov
pop
loope
mov
sbb
cmp
and
add
sbbl
xlat
sub
insb
cli
pop
dec
dec
movl
pop
scas
adc
sbb
adc
mov
fadd
jp
ss
scas
mov
mov
fmuls
fisubs
mov
cld
pop
test
adc
mov
lea
mov
inc
pop
mov
sub
lock
cmp
out
push
testl
dec
pop
dec
in
fadds
push
jb
or
jg
add
mov
mov
sarb
sub
lret
loopne
arpl
jmp
lretw
xor
aam
add
adc
push
jle
cltd
or
shlb
fcoml
shll
mov
sbb
loop
fwait
xor
add
dec
xor
and
rcl
mov
aaa
sub
lods
pop
pop
lcall
or
mov
call
shrl
icebp
imul
jb
adc
push
test
add
xchg
repnz
lahf
jl
push
cmp
out
mov
and
jne
test
adc
pusha
sarb
pop
pop
gs
clc
fidivl
push
ss
xor
js
cmp
fdivl
adc
push
faddl
xor
repz
aaa
test
and
ret
jae
std
inc
aam
bswap
inc
insb
mov
roll
cmp
mov
lds
lds
mov
pop
in
rcl
repz
push
push
fs
lret
out
fsubs
clc
out
xchg
sbb
and
pop
mov
mov
sub
fldenv
xchg
daa
bound
push
mov
arpl
sbb
js
xchg
xor
mov
and
push
dec
push
add
xchg
xor
dec
inc
dec
or
jg
mov
cmp
rorb
mov
fistps
mov
out
mov
insl
cmp
shlb
jne
movnti
sub
jp
adc
pop
je
stos
insl
arpl
pop
xchg
cltd
daa
mov
loope
inc
stos
pop
and
scas
push
jg
jl
lods
lods
dec
sub
aas
ds
mov
inc
repz
xchg
and
push
mov
jl
loop
jne
mov
outsb
pop
pop
lds
adc
fsubl
add
cmc
and
lods
sarl
mov
ljmp
and
adc
test
xorb
lds
sbb
xlat
xchg
sbb
es
mov
popa
and
insl
test
jg
mov
and
mov
inc
dec
push
out
fdivrs
aaa
ss
cli
jmp
int3
and
xchg
mov
shlb
xlat
loop
iret
shll
subb
sahf
loop
arpl
xor
out
mov
sub
sub
addr16
pushf
mov
mov
adc
dec
daa
jb
sub
sbb
negb
and
negl
adc
out
adc
aam
and
cmpsb
fs
nop
xchg
fsubl
mov
inc
adc
das
mov
fidivs
stc
cltd
sbb
xchg
cmc
mov
dec
mov
mov
push
addr16
dec
xor
xor
jns
testl
cmpsb
int
xor
inc
xor
xchg
outsl
dec
test
cmpsl
icebp
adc
sbb
sbb
cltd
out
adc
ss
cmp
dec
mov
sbb
cmc
ss
insb
adc
sbb
inc
test
sub
and
enter
mov
xor
shrb
imul
pop
sbb
iret
mov
add
hlt
mov
loope
push
push
mov
mov
ret
loopne
sub
into
es
nop
mov
fists
push
inc
repnz
jg
xor
push
ficoml
mov
jle
pop
adc
fdivrs
rolb
xlat
mov
mov
xor
scas
and
loopne
cld
dec
imul
xchg
mov
out
test
enter
notb
rcrl
push
sbb
mov
pop
scas
cmpsb
aam
mov
dec
add
repnz
push
pushf
jecxz
adc
mov
mov
mov
cmp
dec
into
aaa
push
jecxz
in
xchg
hlt
pop
cmp
ljmp
cmp
in
jmp
push
add
jb
push
movsb
imul
inc
in
sahf
pusha
add
mov
mov
dec
out
fs
je
push
inc
pusha
jp
test
test
mov
xchg
cld
cwtl
mov
push
add
clc
daa
mov
inc
pop
je
leave
add
mov
dec
cmp
pop
xchg
mov
fstpt
or
push
cltd
call
or
ja
mov
add
arpl
sub
lds
iret
fldenvs
imul
repz
out
xchg
mov
sub
popfw
xor
push
xor
es
sub
bound
nop
test
loopne
mov
mov
clc
sbb
xor
int3
adc
js
inc
aas
je
lcall
pushf
cmp
mov
jno
leave
call
dec
xchg
sub
bound
cmc
mov
fisttpll
push
in
push
cld
mov
loop
mov
aas
xor
fidivs
push
xor
mov
mov
imul
mov
cwtl
dec
xchg
pop
test
xchg
sub
mov
setle
dec
push
dec
jne
mov
out
dec
pop
push
xchg
adc
leave
adc
cltd
test
movsl
pop
push
add
pop
xor
inc
stos
xchg
push
jns
dec
call
jae
mov
xchg
jb
je
jb
test
inc
or
inc
cmp
sahf
stos
das
mov
mov
sub
jmp
push
into
mov
lret
jge
out
jae
inc
xor
cmpsb
dec
mov
or
or
pop
pop
int3
mov
mov
mov
sbb
outsl
sbb
mov
leave
popf
sbb
sub
iret
push
mov
push
test
bound
push
jne
cltd
inc
mov
in
orb
adc
aam
add
xchg
es
test
push
in
sbb
ds
ja
mov
fstps
inc
ffree
add
dec
in
mov
daa
mov
inc
jge
stc
pop
adc
mov
jno
xor
loope
jne
into
add
dec
dec
jno
dec
mov
or
ljmp
and
xchg
mov
xor
add
xor
sti
imul
fnstcw
mov
ljmp
sub
mov
or
sub
inc
pop
cmc
push
cmp
dec
loop
mov
push
lcall
and
outsl
cwtl
arpl
mov
ljmp
xor
adc
loope
inc
adc
imul
xchg
flds
movsb
and
int
insl
adc
les
cmp
xor
sti
sub
dec
rclb
xchg
addr16
in
sahf
mov
je
addr16
shrb
lock
lcall
xor
mov
ud0
cmp
adc
fdivrl
clc
and
or
mov
cmpsb
add
orb
fldln2
test
outsb
arpl
clc
jle
movsl
scas
mov
dec
in
and
int3
xchg
jmp
movsl
sarb
dec
out
sbb
pop
nop
out
jl
cwtl
cmp
sub
jne
clc
mov
ja
daa
jg
mov
andb
pushf
or
mov
mov
push
mov
cmp
sub
mov
loope
jl
cmp
cwtl
das
jb
sbb
data16
xor
pop
dec
scas
inc
cmpl
jno
int3
cmc
sbb
rcrl
mov
fnstenv
lcall
jne
mov
call
sbb
in
testl
jne
jo
ret
inc
lret
mov
ret
mov
push
sbb
test
loope
sbb
clc
std
xchg
sub
pop
stos
dec
mov
dec
mov
and
popf
push
imul
jmp
pop
adc
pushf
dec
xor
pop
push
and
repz
in
or
sbb
lcall
arpl
push
int
jle
loope
mov
roll
insl
jb
xor
cwtl
std
das
adc
pop
pop
jnp
and
push
mov
imul
daa
pop
stos
lds
push
rcrl
movsl
cmp
js
mov
fbstp
imul
stc
jl
jmp
shrl
pop
cmp
jne
pop
repz
xchg
lret
rclb
push
out
mov
imul
test
xchg
jb
and
jg
or
das
xchg
orb
push
mov
fidivs
out
dec
mov
fst
imul
and
push
call
pop
arpl
ficoms
push
ljmp
test
psubsw
mov
mov
fidivs
into
inc
mov
inc
jg
add
jo
in
test
aas
pop
cmc
mov
sbb
mull
jno
pushf
sbb
sahf
mov
xor
fsubs
cmp
xor
sub
fldt
cmp
mov
gs
jnp
ret
sbb
cli
test
aam
repnz
aaa
out
bnd
imul
addr16
in
mov
sarl
jp
imul
pop
jmp
xor
lret
xchg
pop
xchg
sbb
pop
sbb
xchg
je
jo
dec
pusha
repz
stc
mov
inc
test
test
inc
clc
push
dec
aam
xchg
xchg
popa
enter
jns
cmpsb
dec
bound
shrb
add
inc
daa
jmp
jge
xsha256
cmpsb
xchg
sahf
jb
shlb
enter
dec
jecxz
inc
out
jbe
push
mov
mov
fsubr
and
xor
xlat
insl
push
les
mov
mov
loopne
adc
clc
add
mov
ret
mov
ret
add
nop
ljmp
hlt
sbb
cwtl
and
sti
and
test
loopne
dec
pop
sub
xor
mov
push
repz
xlat
xor
lcall
pop
imul
repz
dec
push
push
insb
jmp
pop
test
jge
std
fstps
push
xchg
lcall
sub
pop
cmpsb
into
mov
sbb
out
jp
sbb
loop
dec
pop
icebp
add
loope
rcrb
ror
popf
push
xor
cwtl
es
fwait
xor
add
popa
repz
adcb
or
sahf
sub
rcr
sbbb
inc
lret
mov
xchg
lds
sub
push
ja
das
ror
adc
icebp
mov
and
into
gs
outsb
sbb
cmc
in
andl
mov
mov
jno
sub
mov
addl
push
add
xchg
mov
cmc
hlt
or
ficompl
sbb
mov
xchg
dec
pop
out
jns
jecxz
in
lcall
inc
fistl
jge
jns
and
or
mov
daa
mov
mov
mov
mov
push
cli
mov
cmpb
nop
imul
push
sub
push
insl
push
jnp
dec
and
hlt
mov
sub
imull
adc
sub
dec
lea
jle
xchg
leave
and
xor
shll
jl
movsl
scas
and
xchg
inc
inc
jmp
jl
jmp
push
pop
nop
sbbb
lea
xchg
sub
xchg
jno
adc
jbe
add
sub
clc
sbb
loopne
push
add
mov
fs
dec
push
add
sbb
dec
pop
and
out
push
addr16
mov
push
adcb
in
in
sub
sbb
cmp
dec
rorb
lcall
mov
je
ds
lods
rol
daa
lcall
and
mov
call
inc
adc
shl
pop
imul
adc
test
mov
pop
adc
inc
sub
xchg
pop
adc
dec
mov
sbb
adc
dec
pop
es
jg
cld
mov
popa
xchg
adcl
add
ret
mov
sub
out
stc
outsl
push
lds
rcrl
sub
fwait
pop
or
mov
jae
pop
sbb
scas
jne
popa
and
jecxz
insl
push
pushf
xor
lock
jge
inc
pop
xchg
pop
cmpsb
clc
nop
add
mov
push
roll
dec
sub
cltd
data16
sbb
and
sbb
ret
cmp
inc
inc
in
jmp
ds
or
cmp
push
push
cmc
mov
jb
int3
mov
ret
scas
xchg
xor
movsb
int3
sbb
lret
mov
out
pop
movsl
and
add
in
and
nop
mov
push
pop
jmp
mov
mov
and
inc
dec
adc
pop
shrl
ss
jg
test
xchg
scas
xchg
add
sahf
dec
xor
mov
mov
imul
cmp
add
jmp
xor
push
jb
jg
jecxz
into
push
jno
mov
jecxz
xor
movsl
cmp
out
imul
call
sub
sub
rcr
movsl
sub
dec
mov
call
dec
scas
jb
out
adc
and
gs
test
dec
fdivr
sbb
stos
cmp
ljmp
pusha
repz
pop
fucom
push
cmp
mov
pop
cmc
mov
mov
push
mov
dec
push
iret
xchg
or
dec
push
rclb
fld
sub
mov
pop
enter
addb
and
or
push
inc
push
mov
push
jbe
enter
insb
adc
cmp
aad
xchg
inc
lock
shrl
fmul
xchg
lret
mov
int3
pop
lret
jns
sub
cmp
jmp
and
ret
stos
aas
out
js
aad
testl
fwait
cmc
mov
frstor
imul
pop
popa
mov
cmp
ficompl
xchg
movsb
cmp
fbld
int3
repnz
cmp
bound
loope
aaa
fbld
popa
popa
sub
or
sbb
add
shrl
mov
jp
sub
es
outsb
push
adc
mov
fidivs
call
sahf
popw
faddl
cli
sbb
push
and
cwtl
scas
mov
test
fisubs
aam
push
into
pop
ja
xor
rcrb
sti
pushf
in
jbe
jge
and
fnstenv
nop
rcrb
add
fisubl
mov
add
ss
fstpt
pop
cmp
cmpsl
dec
dec
push
fwait
cld
jne
ret
and
and
ds
inc
aas
pushf
sbb
pop
sub
bound
lret
xchg
xor
jl
jecxz
movsl
mov
shrl
sbb
or
xor
inc
sub
mov
stc
cwtl
jne
lock
jmp
stos
aas
cltd
or
loopne
inc
pop
hlt
repnz
outsl
jge
adc
add
std
jle
add
in
hlt
sbbb
pop
cmpsb
or
cwtl
insb
mov
mov
scas
sbb
pop
xor
pop
cs
dec
stos
in
jno
pop
mov
movb
dec
sbb
ljmp
jno
mov
sbb
lcall
dec
insb
sarl
cmp
fisttpl
gs
add
pop
out
test
xchg
sahf
loopne
or
inc
cmpl
daa
outsl
xchg
jno
outsb
xchg
flds
push
dec
xor
fdivrs
dec
mov
in
and
das
mov
sub
sub
imul
cmc
leave
pop
aam
pop
push
jns
je
mov
repnz
ficoml
mov
movsl
rcrl
mov
sarb
mov
int3
sbb
mov
jbe
ret
int3
mov
call
neg
and
sbb
sbb
sbb
daa
push
mov
out
icebp
fmull
sbb
insl
call
in
cld
mov
push
cld
sbb
in
mov
or
or
insl
mov
push
pop
scas
xchg
or
inc
jns
andb
enter
pop
xor
push
push
or
jg
dec
jecxz
lahf
cmp
xchg
push
iret
pop
cli
cmp
icebp
loopne
negl
mov
scas
pusha
fcomps
jo
pusha
idivb
ret
pop
lods
aas
mov
mov
mov
mov
in
or
jno
mov
stc
popf
or
or
sbb
pop
jg
push
and
es
xor
mov
aam
mov
fmull
lods
jne
leave
das
iret
js
js
dec
lahf
cmp
arpl
and
in
xorb
or
jae
dec
outsb
cld
xchg
and
inc
movsb
mov
cmpsb
push
not
jbe
stc
sub
push
inc
add
mov
fistl
adc
ja
dec
arpl
iret
jno
sub
sub
pop
sti
mov
rorl
cmp
xchg
je
pop
cmp
add
push
xor
dec
push
std
sub
sub
adc
adc
xchg
scas
cltd
das
fmulp
setb
xorl
hlt
add
sub
pop
and
xchg
add
clc
lea
pop
fadds
out
xchg
aas
pusha
out
lods
iret
adc
push
xor
push
xchg
sub
int
xor
cmp
dec
lock
iret
jp
adc
push
sub
and
xchg
lret
xlat
loope
pushf
pop
and
in
sbbb
xchg
outsb
adc
and
jp
inc
fsubs
or
out
pop
add
mov
pushf
or
arpl
pushf
xor
jb
push
cli
rcll
fstpt
fsts
les
mov
dec
sbb
paddusw
mov
std
cmp
or
and
mov
jp
jecxz
xchg
pop
mov
cmpb
or
int3
fnstsw
pop
adc
popa
nop
hlt
imul
rcl
pop
pop
xor
xchg
shr
test
xor
aas
bound
jmp
or
stc
shlb
push
pop
scas
mov
pushf
rcr
testb
dec
jecxz
and
and
mov
stc
fwait
ja
in
xor
xor
leave
dec
pop
jbe
popf
stc
popf
lods
daa
push
pop
mov
or
dec
push
iret
loop
xlat
icebp
movsl
add
das
push
push
add
subb
add
lea
or
mov
rclb
dec
pop
into
incb
outsb
aad
xor
test
xchg
sub
jecxz
xor
pusha
adc
sahf
cmc
xchg
daa
pop
xchg
push
or
std
adc
test
pop
xor
jl
testl
push
inc
ljmp
xor
sub
insl
push
mov
lds
fsubs
add
jmp
subl
dec
adc
mov
out
andl
mov
xor
inc
pop
push
jae
frstor
xchg
notl
cwtl
push
lods
out
cmp
stos
lret
mov
mov
lds
mov
fs
jge
lock
cwtl
das
xor
jecxz
mov
mov
aas
push
dec
adc
dec
inc
out
loope
cltd
jmp
or
and
out
popa
clc
std
or
mov
pop
add
shlb
jl
pop
and
sub
xchg
jns
mov
push
xor
xchg
pop
fisubs
jge
lods
adc
ficoms
jmp
nop
out
and
daa
cmp
fdivl
div
into
fidivs
add
cmpl
pop
push
in
mov
push
enter
ret
ret
cmp
xor
ficoml
add
xchg
mov
jne
jns
stc
pop
movsl
movsb
sub
fsts
jmp
dec
or
mov
push
pop
lahf
sahf
lods
ret
imul
repnz
cmp
and
mov
mov
fwait
xchg
jl
add
pop
add
add
ljmp
xchg
add
jb
jns
push
ljmp
jl
out
pushf
xor
push
dec
es
xor
dec
fstl
daa
cmovbe
cmp
mov
jp
enter
mov
aas
adc
add
dec
push
das
pop
add
outsl
push
stc
and
jge
push
js
push
and
das
inc
cld
sbb
sub
inc
sbb
jge
enter
fistl
repz
rolb
testl
test
stos
mov
pop
mov
cmpsb
xor
or
inc
pop
ljmp
and
pop
xor
out
pop
cmp
or
jge
mov
push
jecxz
lret
pop
daa
sub
in
outsb
mov
xchg
mov
mov
cli
push
add
lret
fnstcw
imul
push
sbb
arpl
stos
ja
popa
das
scas
not
mov
pop
lret
dec
cmpsb
gs
loopne
jae
cmp
xchg
or
mov
data16
jecxz
dec
mov
in
sub
mov
sbb
push
je
cmp
or
push
ds
dec
mov
mov
pop
gs
jne
or
mov
loope
mov
mov
add
hlt
sbb
dec
out
test
add
aaa
mov
pop
rcrb
enter
out
fmuls
cmp
and
inc
xlat
jge
lcall
lahf
push
jbe
addr16
sbb
orl
add
xchg
das
push
adc
push
sub
lds
xor
roll
mov
cmp
leave
jg
adc
mov
adc
repnz
ret
fisttps
sbbl
pop
cltd
and
push
adc
or
cmpsl
dec
jecxz
inc
push
movsl
pop
add
and
sub
loopne
and
repz
cmc
jge
jp
xchg
xor
insb
add
mov
xor
test
fistpll
dec
cmp
test
inc
mull
inc
loopne
pop
xchg
dec
sub
in
outsb
sbb
mov
jnp
push
push
add
nop
fiaddl
pop
hlt
ss
ljmp
mov
cwtl
stos
in
inc
out
xor
or
rcrb
sub
ljmp
xor
pop
mov
ret
sub
mov
popa
lahf
into
cwtl
inc
dec
dec
jecxz
mov
push
or
sub
sahf
in
sbbb
or
out
mov
jle
cmp
mov
add
xor
cmp
in
dec
fsts
push
mov
shrb
stos
mov
ss
dec
push
or
pop
lcall
push
shl
aas
sub
pop
ds
dec
cmc
adc
lea
push
fsts
lcall
popa
orl
or
mov
mov
jbe
adc
mov
and
jle
push
sbb
jmp
xchg
shll
pop
sbb
inc
arpl
push
adc
roll
rolb
xor
mov
mov
xor
add
pop
jno
mov
dec
int3
fsubrl
fnstenv
enter
push
iret
inc
hlt
jmp
inc
std
push
jge
insl
and
jbe
fisubl
shrb
lret
mov
lock
xor
and
int3
xor
mov
fs
jle
in
pop
stos
cmp
lcall
add
outsl
frstor
jne
lods
addb
scas
dec
hlt
addr16
inc
stos
mov
test
push
dec
pop
loope
cmpsb
cltd
jnp
sub
adc
std
ror
mov
push
mov
jnp
ja
out
mov
ja
push
jp
insb
std
repnz
in
pop
aad
jns
jae
pushf
mov
mov
pop
cmp
adcl
push
add
out
cli
ljmp
aam
jmp
adc
movsb
shl
pop
mov
mov
mov
pcmpgtd
cmp
fisubrs
mov
mov
iret
cmp
mov
aad
sbb
add
mov
mov
jle
mov
cltd
icebp
sub
and
cmp
jne
pop
jmp
dec
mov
or
mov
data16
pusha
xlat
or
jecxz
adc
into
jno
or
fwait
stc
xorl
push
mov
repnz
inc
pop
cltd
int3
xchg
sub
mov
sub
or
and
mov
xchg
sbb
mov
mov
hlt
add
cmp
xor
aam
xchg
stos
push
mov
shrl
cmp
jmp
mov
les
mov
mov
call
imul
inc
imul
fisttps
enter
out
pop
repnz
jp
push
jnp
adc
adc
repnz
jnp
ds
daa
dec
jns
call
or
cmp
repz
leave
sbb
cmp
testb
mov
push
cmpsb
xchg
push
inc
pop
cmp
jg
pusha
and
scas
rcll
mov
adc
inc
mov
daa
or
addb
imul
dec
mov
sbb
rol
in
outsb
lds
pop
dec
in
adc
jp
sub
cltd
xor
ds
xchg
and
cmpsl
cmpsl
pop
addr16
mov
repz
jl
mov
fsts
aas
adc
pop
jmp
repnz
cmpl
mov
adc
sahf
popf
xor
lods
mov
into
call
in
inc
push
or
loop
jle
jo
repnz
xchg
dec
xchg
cltd
push
mov
jbe
mov
add
dec
mov
fstl
lahf
dec
xor
mov
and
push
xor
pusha
fbstp
inc
mov
inc
lret
nop
jl
jbe
in
rcr
xchg
mov
cmp
loop
jne
lret
int
mov
push
sub
into
rep
xor
test
cmp
sti
mov
jecxz
xchg
mov
call
les
mov
jge
and
mov
dec
jge
jo
xchg
lea
xor
ffreep
or
test
stos
cmpsb
loop
vpsllvq
lret
sahf
int3
jmp
stos
fsubs
jnp
push
adc
mov
pop
imull
mov
pop
leave
mov
adc
cmp
popa
aam
stc
nop
dec
call
xor
and
and
outsb
xchg
pop
gs
push
pop
mov
mov
sub
je
lock
xchg
xlat
rorl
xchg
gs
call
mov
push
sbb
mov
mov
js
clc
and
insl
adc
lcall
int
gs
lcall
mov
cmpsl
ret
sbb
mov
xlat
loope
scas
js
jae
rclb
push
mov
fdivs
shrl
dec
mov
mov
hlt
dec
ret
jle
insb
sub
sar
dec
imul
xor
inc
in
cmp
xchg
cmp
out
cmp
in
in
rcll
aaa
ret
js
ret
xor
push
lock
xchg
bound
ds
add
mov
pop
ss
and
add
daa
rorb
fimull
clc
push
pushl
xchg
imul
in
cmp
cmp
dec
fwait
push
xor
jbe
push
in
push
ret
outsl
int
rolb
aam
arpl
sbb
jns
cld
mov
arpl
dec
jge
xchg
out
and
or
je
popf
lods
jecxz
pop
push
inc
push
push
sahf
stc
jl
arpl
adc
jecxz
pop
fdivrs
rdtsc
dec
pop
stos
xchg
mov
inc
loop
push
xchg
movsl
enter
sub
sub
out
scas
shll
repnz
in
das
sar
lods
call
inc
jnp
adc
sbb
inc
cmp
mov
test
daa
enter
test
nop
repz
xor
mov
mov
dec
jl
inc
inc
dec
popf
shrb
fisttps
je
popl
xchg
cld
or
cmp
xchg
push
inc
stc
lahf
pop
mov
js
jecxz
dec
xchg
imul
sbb
std
jo
mov
lret
mov
mov
sub
mov
scas
dec
or
dec
mov
mul
scas
xchg
mov
out
test
jo
add
in
mov
and
ljmp
push
mov
mov
rclb
imul
fcmovbe
movsb
ss
scas
in
dec
and
into
sub
cwtl
data16
and
sub
fnop
dec
fbstp
add
mov
out
push
lds
push
fs
dec
nop
xchg
sbb
das
cltd
sbb
sbb
xor
or
mov
sub
fs
pop
pop
ret
and
pop
adc
and
adc
clc
out
in
cmp
mov
fsubl
xchg
mov
mov
push
in
sbb
ds
sbb
cmp
stc
mov
cmp
imul
ret
insb
pusha
push
jl
popa
hlt
xchg
mov
push
fs
idivb
sbb
pusha
adc
out
jge
push
xacquire
stos
lds
mov
adc
cmc
dec
mov
mov
sub
sbb
iret
pop
fistps
mov
fiaddl
cmp
cmp
or
daa
testb
imul
lods
push
mov
jmp
mov
mov
jle
and
mov
jno
in
fisubs
or
stos
xchg
sarl
cmp
lods
mov
lcall
mov
dec
lahf
xchg
rorb
fdivrl
inc
outsb
push
mov
cmp
pushf
xlat
testl
daa
add
ret
int
jge
rclb
cmp
imul
sahf
mov
fisubl
inc
sbb
stos
push
or
insb
repnz
cmp
mov
jle
pop
imul
aad
and
in
mov
pop
mov
xchg
sbb
clc
cmpsb
in
pop
inc
imul
and
sbb
js
jno
sbb
pop
and
nop
push
fistpll
sbb
lcall
insb
repnz
xchg
push
add
mov
fldl
out
dec
sbb
out
es
jns
dec
outsl
add
inc
int
xchg
push
add
enter
popa
das
mov
subb
call
fildl
fldcw
and
test
inc
or
adc
lahf
jnp
inc
xor
cs
bound
sub
cmp
insl
icebp
sbb
pop
adc
sbb
js
sbb
shrb
subb
adc
nop
inc
lcall
popa
in
gs
stc
push
mov
in
addr16
insl
jbe
test
lea
call
test
lret
mov
test
jb
jae
out
daa
ret
xchg
lahf
ret
mov
sarb
loope
inc
or
fstpt
lea
in
pop
push
cmp
faddl
repnz
mov
frstor
testl
cmp
pop
mov
mulb
cmpsb
push
xchg
in
inc
lcall
cs
hlt
pop
shll
dec
nop
insl
fidivl
jne
jmp
fdivl
mov
push
add
in
inc
testl
xchg
loopne
add
je
out
out
jae
dec
mov
push
daa
out
pop
popf
nop
add
clc
or
test
adc
push
and
sub
cmp
rcrl
shlb
sbb
add
ficompl
in
cmp
pop
sbb
dec
xchg
sub
and
mov
cwtl
es
sbb
mov
lds
xor
cmp
fbstp
pop
outsb
loope
lea
je
jg
enter
pop
sbbb
out
leave
add
jno
outsb
adc
mov
sub
cmp
pop
es
xor
stos
lds
mov
pop
or
pushf
aaa
mov
pop
cwtl
rcrb
lret
inc
scas
add
iret
mov
mov
push
pop
rolb
pop
icebp
mov
and
leave
stos
push
ror
cld
cmp
jl
dec
mov
pop
rcl
fcoms
imul
jnp
adc
mov
stos
and
stc
adc
jmp
and
xchg
test
push
roll
xor
and
inc
insb
fadds
or
shrb
jmp
fisubrl
or
popa
shrb
int3
pop
je
dec
and
push
cmp
mov
cmc
ret
adc
xor
dec
xchg
mov
mov
gs
mov
rorl
lods
mov
mov
add
scas
push
data16
xchg
push
mov
push
sbb
cwtl
mov
stc
xchg
add
loope
stos
sbb
popf
fstps
dec
rorb
adc
in
xchg
andb
and
into
popf
stos
push
ret
hlt
adc
xchg
and
xlat
outsb
cmp
int3
out
pop
inc
xchg
mov
rcl
out
mov
repnz
std
inc
fsubr
inc
push
je
je
aas
outsb
lods
push
bound
sahf
iret
xor
loope
das
pushf
push
xchg
sub
stos
fldcw
mov
mov
or
rcr
cmp
xchg
int3
stos
xchg
add
jmp
fistps
dec
cmp
jbe
push
repz
xor
into
popa
jg
or
add
cltd
test
sbb
loop
adc
repz
jne
pop
adc
mov
loop
sti
xchg
int3
push
and
loope
js
iret
rclb
jmp
cltd
xchg
aas
jmp
fnstsw
mov
aas
clc
cmp
js
xor
inc
arpl
popf
les
cmc
mov
idivb
sub
mov
sarb
sti
adc
loopne
cmp
add
xor
sub
xor
mov
mov
mov
ror
ret
fld
or
cld
pop
mov
add
shrb
sti
lcall
in
mov
jbe
sbb
jmp
sbb
dec
pop
out
jecxz
cmp
shrl
jl
or
pop
jnp
aam
pop
loopne
movsl
or
cmp
inc
ret
sbb
push
xor
pop
fisubrs
ret
xlat
push
add
mov
iret
and
sbb
and
or
out
mov
fcoml
pop
adc
addl
cmpsb
insl
sbb
adc
inc
push
xor
loope
sub
out
les
ss
push
leave
pusha
inc
mov
cmp
sub
pop
cmp
push
mov
jmp
nop
dec
testb
mov
xchg
pop
ret
pop
xchg
mov
pop
notb
sub
pop
notb
test
imul
dec
push
ret
lahf
stos
hlt
jb
jg
xchg
fidivl
dec
cmpb
pop
test
daa
ret
out
orl
or
push
rorb
ret
in
pop
and
mov
insb
sbb
addr16
push
xchg
iret
mov
mov
pop
cmpb
jb
pop
sbb
pop
dec
jg
jge
mov
sbb
push
mov
in
ret
cmp
clc
mov
int
pop
js
add
and
repz
push
repnz
movsb
ds
pop
or
lahf
stos
sub
scas
aaa
jmp
jmp
and
popf
dec
out
and
sub
push
ja
daa
rorl
in
shll
popf
lods
mov
mov
jmp
xchg
or
xchg
xchg
movsb
pop
sub
push
jmp
mov
jl
push
push
mov
stos
inc
jg
jecxz
pop
loopne
adc
hlt
add
aas
ja
ror
data16
cmc
or
mov
aam
popa
cs
pop
and
into
mov
lds
lds
inc
out
outsl
and
and
mov
mov
popf
mov
aad
sub
outsb
iret
inc
bound
or
sahf
out
shll
out
test
sbb
add
in
test
out
push
sbb
jne
push
or
push
daa
mov
ret
loopne
inc
and
test
clc
inc
enter
cmp
out
clc
pop
jae
sub
add
sbb
add
jno
mov
sub
iret
adc
popa
mov
insb
sbb
sub
mov
ret
and
jb
sbb
into
or
push
add
mov
insl
pop
add
add
add
sub
jl
mov
jmp
dec
sbb
dec
lods
pop
fwait
xchg
jg
in
data16
cmp
repz
mov
dec
cmp
aas
in
imul
in
test
lods
sub
sub
repz
mov
pop
adc
sbb
loop
jp
pop
cmp
cltd
xor
mov
xor
in
or
popa
jbe
pop
insl
imul
or
mov
xchg
inc
pop
test
loopne
pushf
xor
lods
addr16
test
add
lret
aaa
push
int
enter
fwait
test
inc
inc
loope
inc
adc
sti
jle
and
je
xchg
push
dec
inc
push
cmp
outsl
sbb
negl
pop
lret
mov
add
mov
pop
dec
push
push
adc
les
jl
fldenv
and
and
sub
test
jno
mov
cmp
out
sbb
mov
scas
sarb
jnp
pusha
sub
xchg
push
inc
push
xchg
cmp
imul
xchg
daa
jmp
cmpsl
popa
cli
mov
bound
jb
std
in
fsubr
fidivl
mov
push
out
movb
cmp
jmp
cmp
add
gs
pushf
insl
jge
jp
sub
sbb
clc
push
test
xchg
out
test
cmpsl
inc
xor
xchg
dec
or
mov
outsl
pusha
push
mov
cmpb
outsl
cs
leave
pop
es
test
push
loopne
mov
adc
sub
ja
mov
pop
cmp
mov
repnz
mov
inc
sbb
sub
mov
es
or
cld
cltd
fwait
pop
lret
sbb
sub
xchg
cmp
pmullw
adc
stos
lds
in
mov
mov
jecxz
fnsave
or
ss
out
mov
in
push
das
inc
lahf
in
loopne
aaa
fimull
je
xor
cmc
adc
cmp
cmp
or
imul
jg
push
push
jbe
lea
cmc
fisubs
lret
testl
je
in
xlat
notb
and
jb
sbb
rcll
hlt
scas
pushf
dec
leave
in
cli
outsb
xlat
sbb
cld
outsb
sub
loopne
dec
mov
das
sub
and
pop
repnz
mov
je
jno
roll
dec
add
ss
pop
and
int
ljmp
outsl
pushf
cli
or
mov
popa
jns
inc
ficomps
aaa
fdivrs
call
ds
repnz
jae
iret
shrl
jge
mov
push
lret
mov
fcoms
jge
jg
dec
pop
je
test
call
fildl
jl
xchg
push
inc
std
inc
inc
es
jge
mov
adc
aad
xor
sbbl
cmp
sub
or
loop
add
addr16
inc
clc
or
lds
mov
arpl
pop
mov
sti
sbb
and
pop
push
ss
xor
je
lock
mov
push
sbb
mov
sbb
jns
lret
outsb
test
test
push
iret
push
cmpsb
mov
cwtl
out
sbb
and
push
mov
imul
in
mov
rorl
outsl
repz
xchg
dec
cmp
and
iret
jae
jge
xor
and
xchg
aam
jb
jge
dec
cmp
mov
and
xchg
pushf
idivb
xchg
mov
ret
orb
xlat
jns
pop
pop
jecxz
lods
dec
aad
hlt
xchg
sub
outsl
push
fisttpl
iret
mov
mov
cmp
jg
xchg
in
cmp
in
mov
call
sbb
xchg
in
cmpsb
rolb
js
add
mov
stc
cmp
out
inc
enter
or
sbb
lods
outsl
jg
sbb
je
xchg
addb
sbb
repnz
xchg
leave
rorl
xchg
fisubrl
cmp
shr
rorb
push
jno
adc
xchg
dec
jmp
mov
xor
push
xchg
or
jns
jp
inc
push
jb
int3
iret
pop
outsb
jl
rcrb
dec
cld
pusha
insb
leave
and
mov
sbb
push
bound
pushf
cmp
adc
and
and
and
mov
or
jg
sarl
dec
sub
inc
pop
sub
icebp
leave
sbb
adc
mov
jg
or
cmpsl
pop
mov
and
and
test
cltd
sub
mov
ret
or
dec
sbb
xchg
std
mov
sbb
adc
push
adc
xor
cwtl
mov
iret
jae
lods
and
adc
or
push
xchg
push
jp
dec
inc
jp
push
add
sub
pop
hlt
pop
dec
test
inc
jmp
xchg
sbb
idivl
push
test
jnp
add
into
cmpsb
les
repnz
fwait
cmpsb
fadds
xor
in
pop
push
jno
dec
daa
push
xchg
cmp
stos
and
mov
idivl
not
and
and
sbb
mov
mov
fisttpl
or
fidivs
dec
dec
dec
rcrb
xchg
loop
inc
or
pop
aaa
push
dec
and
adc
xor
adc
int
scas
lahf
cmpsb
aaa
daa
mov
out
js
add
xor
pop
nop
repnz
jle
stos
js,pt
sub
mov
cltd
scas
pop
pop
enter
scas
lds
loopne
mov
int
loope
sub
or
jmp
mov
sub
test
cmp
sub
xor
cmp
adc
addb
dec
sarb
jle
jp
out
fidivrl
int
in
jb
push
movsl
sub
ficoms
sbb
cwtl
mov
or
outsb
pop
call
inc
add
out
push
out
inc
bound
jmp
cmp
popa
mov
and
pop
cmpsb
xor
jge
pop
mov
fsubp
mov
fdivl
mov
lea
in
xchg
push
dec
jg
leave
pop
test
outsb
arpl
popf
mov
jae
mov
jecxz
pop
andl
push
jno
imul
repnz
ret
add
push
fxch
xchg
mov
ror
out
cld
lea
stos
inc
push
push
cmp
mov
sahf
ljmp
and
mov
mov
out
shll
cmp
mov
jl
pop
xor
inc
xor
test
inc
icebp
aam
push
inc
test
ja
mov
push
xlat
push
nop
filds
or
jne,pt
repnz
gs
jg
dec
pop
faddl
sbb
fldenv
popa
icebp
mov
out
sarl
in
mov
sbb
dec
bnd
cwtl
jnp
inc
dec
dec
in
or
aam
mov
jle
shrl
sarb
and
mov
inc
xlat
inc
test
out
mov
in
pop
filds
sub
movsb
push
jne
xchg
jp
push
xchg
xchg
xor
push
call
cmp
cmp
adc
cmp
out
test
jb
xchg
movsb
aad
mov
mul
cwtl
es
mov
es
popf
dec
add
mov
pop
xchg
mov
mov
pop
dec
adc
mov
add
arpl
test
adc
cld
faddl
jg
cltd
addr16
and
sbb
outsb
and
cltd
lock
out
adc
sub
adc
inc
cmp
pop
pop
sbb
fisubl
mov
dec
push
inc
fwait
or
sub
pushf
fildll
mov
loope
loop
out
call
jle
sarb
cmp
and
mov
shrl
pop
rcl
leave
shl
dec
sbb
pop
sub
cmc
pop
sbb
daa
mov
sbb
inc
cmp
fcmovnb
loop
xchg
fadds
das
mov
cs
ficoms
gs
add
lods
out
xor
mov
push
clc
repnz
xor
sub
popf
fidivl
add
jl
subl
jnp,pt
mov
dec
pop
in
repz
lret
clc
test
inc
xchg
test
dec
gs
jmp
sbb
mov
popa
in
push
fwait
xchg
aas
jmp
fdivs
xor
xor
push
ja
into
test
add
sti
sbb
xor
xchg
xchg
inc
nop
aam
mov
out
bound
bound
in
test
cmc
fs
push
add
mov
or
or
mov
aaa
jae
push
insl
shlb
xor
insb
inc
ficoml
jecxz
or
xlat
popa
mov
sbb
xchg
mov
mov
or
sbb
adc
daa
mov
pop
adcb
add
sbb
mov
xor
fs
cs
xor
or
adc
out
cmp
mov
inc
dec
cmpsb
aad
xor
mov
add
outsb
mov
add
push
in
mov
movsl
in
pop
je
xchg
test
dec
repz
pop
das
jp
and
inc
imul
cmp
jecxz
dec
adc
adcb
jb
negl
xchg
divb
pop
repz
dec
fs
push
push
loop
sub
adc
icebp
xchg
xor
inc
addr16
subl
push
ficoml
test
xor
and
out
pop
mov
cmpsb
sub
push
xor
inc
mov
testb
loope
xor
jmp
inc
pusha
hlt
mov
lods
inc
pop
pop
adc
adc
jge
jne
ljmp
or
xlat
mov
push
mov
pop
xor
or
adc
bound
fcomp
jne
ds
sub
ret
je
xchg
inc
cmp
jp
pop
sahf
sub
aad
leave
dec
cmpsb
dec
inc
mov
fisubrl
test
cs
clc
andl
cmp
leave
inc
fwait
cs
lock
fldcw
leave
cld
outsl
mov
adc
fnstsw
jl
jle
out
sbbb
sar
inc
mov
out
popf
sub
sbbl
out
sti
addb
repz
inc
stos
arpl
mov
lahf
ss
push
outsb
fbstp
add
mov
push
sub
sub
out
mov
call
in
test
dec
outsl
ret
sbb
jmp
movsb
add
insl
jnp
lods
sub
mov
pop
mov
mov
sti
int
shrb
push
lock
scas
es
arpl
push
fwait
dec
notl
and
test
mov
jge
stos
pop
insl
push
sahf
jp
jbe
ficompl
lahf
pop
xchg
shrb
insl
jge
jp
loope
push
push
push
lcall
mov
cltd
sbb
cld
imul
in
xor
ficomps
cmp
xchg
push
int3
push
inc
int
lahf
mull
rcrb
lock
cltd
or
pop
mov
dec
bound
mov
ret
xchg
jmp
xchg
cwtl
sbb
pop
mov
cmp
imul
sarl
shll
shl
mov
xor
iret
cmp
push
sarl
cmp
fbstp
jp
cmp
repnz
inc
outsb
pmulhuw
add
in
ficompl
push
loope
daa
fwait
push
sub
sbb
add
lock
loope
fwait
in
gs
dec
and
mov
mov
lret
lds
inc
push
adc
add
fbld
loop
sub
lret
iret
ret
aaa
pop
loope
aad
xchg
stc
cmp
aad
sub
sahf
jg
inc
leave
push
cmp
jmp
imul
iret
xchg
pop
push
mov
sti
repnz
scas
repz
aad
jns
out
mov
movsb
in
dec
addb
lahf
add
std
data16
sbb
addr16
call
frstor
inc
push
fmull
lods
inc
sbb
dec
xor
push
dec
negl
xchg
mov
or
cmp
adcl
xor
sahf
push
mov
pop
in
lods
lcall
jns
jmp
pop
push
xchg
dec
mov
cltd
std
mov
cmpsb
outsl
cli
xchg
sarb
inc
imul
lahf
inc
inc
ljmp
xor
repz
jae
adc
mov
jne
lret
stos
xchg
mov
sub
sub
movsb
std
aad
gs
mov
mov
and
add
in
movsl
jl
pushl
xchg
push
add
sbb
icebp
adc
cmp
shl
mov
mov
push
out
adc
sub
mov
mov
icebp
push
lods
push
push
xor
pop
test
dec
and
clc
push
sti
push
mov
jbe
movsl
outsl
mulb
pop
mov
into
rclb
push
mov
xchg
lds
rorl
push
adc
push
dec
mov
sub
xchg
or
sub
jle
xor
push
sbb
push
aad
les
out
bound
iret
xor
and
push
aad
mov
mov
jmp
xor
int
dec
shl
lods
mov
sub
mov
pop
lret
sti
jp
push
pop
into
jnp
sbb
and
cmp
push
cmpsl
jnp
rcl
je
loope
sub
and
push
sbb
negl
or
xor
pop
fiadds
and
push
flds
movb
lahf
mov
repz
popf
ficoms
daa
xchg
sub
fwait
lods
and
jo
or
es
cmpb
and
push
xchg
lock
call
sbb
sarl
or
mov
mov
fsubl
shrb
and
push
mov
mov
sbb
cltd
pop
pop
popf
xor
enter
clc
inc
test
rolb
out
and
fldcw
ret
roll
sbb
add
add
repz
sub
dec
cmpsb
mov
dec
cmp
andl
sub
clc
sub
arpl
add
scas
cmpsb
test
sbb
fdivrs
mov
push
call
insl
js
mov
cmp
and
mov
seto
inc
cmc
mov
jae
sbbl
jmp
in
sub
mov
jg
or
push
mov
adc
mov
ret
jle
add
inc
movsl
aam
ja
mov
mov
push
and
mov
ds
and
sub
mov
aam
jge
cs
js
clc
jp
or
sbb
mov
inc
add
ja
lods
int3
inc
inc
shlb
ficomps
xor
shlb
jae
push
shrl
mov
cmc
insb
sbb
xlat
out
ds
out
inc
in
lret
clc
inc
lock
mov
mov
test
sub
xlat
or
cli
push
dec
push
fisttps
sbb
sub
ds
inc
lret
addr16
mov
mov
ret
mov
pop
pop
xlat
xlat
addr16
ret
hlt
adc
pop
ret
dec
out
sub
ljmp
push
sub
pop
mov
lods
lods
lcall
icebp
mov
std
add
je
xchg
mov
mov
mov
mov
adc
add
push
inc
push
xor
xor
push
testb
ret
out
sub
pop
lahf
dec
mov
das
fwait
xor
cmp
out
insb
sub
fwait
cwtl
jmp
jecxz
int3
push
cmc
in
in
pusha
rorb
and
dec
mov
andb
bndstx
notb
mov
xchg
outsb
mov
mov
add
xor
out
bound
xor
les
pop
mov
test
adc
mov
mov
fisubrs
mov
outsl
cmp
mov
ss
ficompl
out
arpl
inc
pusha
adcb
pop
enter
inc
hlt
or
push
and
xchg
xlat
dec
fadd
in
insb
inc
or
xor
dec
sahf
jle
or
mov
xchg
jl
jl
test
cmp
ja
jne
fcomip
mov
mov
sti
ja
add
sub
mov
hlt
les
call
arpl
sub
fnstsw
xchg
adc
insl
cltd
mov
lret
ds
or
cmp
inc
stos
dec
ja
dec
xchg
jg
jl
mov
mov
ljmp
aas
xor
icebp
mov
arpl
xor
loope
pop
xor
or
lock
loope
sbb
or
push
mov
shrl
mov
cmp
into
out
jl
dec
or
pop
aas
loop
stos
fdivrl
mov
mov
inc
and
mov
ja
jns
inc
dec
aam
andb
xchg
lds
dec
adc
inc
popa
pop
xor
jae
sahf
je
test
cli
push
movsl
lret
leave
mov
out
jo
mov
jb
les
xchg
mov
pop
add
test
imul
test
jno
sub
call
lret
xchg
insl
enter
insb
mov
inc
cmpsl
cmp
and
fbstp
add
call
scas
inc
outsl
shrl
nop
int3
fadd
jnp
lds
dec
loope
into
or
add
mov
pop
jge
inc
out
pushf
gs
adc
push
outsb
sti
orb
out
test
fistl
add
shrl
inc
in
jae
and
js
rorl
gs
cwtl
fcmovnbe
push
stos
adc
bnd
test
popf
imul
movsl
mov
pop
mov
aaa
int
or
mov
test
inc
test
push
mov
scas
add
jge
jmp
jl
xchg
test
sbb
cwtl
scas
int3
xor
cmp
insb
mov
cmp
pop
cmp
pop
movsl
push
mov
mov
cmp
imul
mov
outsb
jl
mov
pop
fstpt
inc
mov
push
jg
cmp
mov
adc
mov
dec
test
clc
repz
aas
sub
xor
repz
movsl
add
pusha
idivl
jge
in
cmp
xchg
int
lcall
jne
add
ficomps
fmull
mov
adc
xor
shlb
mov
call
dec
and
add
aaa
insb
adc
mov
cmc
or
xlat
or
iret
dec
xlat
rol
sub
call
inc
sbb
dec
cmp
js
out
lea
mov
cltd
lods
xchg
test
repz
mov
fnstenv
shlb
dec
imul
aaa
into
pop
fistps
mov
jo
pusha
faddl
mov
adc
adc
aaa
ja
dec
es
mov
cmpsb
push
adc
xchg
das
fs
cmpsb
ljmp
sbb
pop
xor
adc
and
pop
cli
pop
lds
les
sub
lcall
repnz
jns
iret
cmp
xor
fidivs
hlt
ret
inc
std
inc
lcall
out
dec
lea
xchg
jge
sti
sub
loope
jl
call
jmp
xor
adc
lcall
jp
mov
rolb
add
mov
addl
sub
pop
mov
lea
adc
jno
mov
adc
push
shrl
leavew
xchg
fdivl
sub
fisubrs
adc
in
xor
push
mov
add
stos
es
test
push
ficompl
fsubrs
mov
fxch
adc
call
imul
xor
lea
dec
inc
stc
subb
jno
xchg
es
or
shll
or
sub
rclb
xchg
sbbl
lahf
iret
dec
pop
hlt
push
lock
and
int
xchg
pop
icebp
push
mov
xchg
clc
and
out
testb
cmp
inc
les
ljmp
addr16
lcall
out
jae
inc
int
test
jmp
push
push
imul
es
mov
in
dec
test
adc
mov
jle
ret
fmuls
add
bnd
and
add
dec
andb
test
cmp
pop
xor
mov
or
in
aad
xor
notb
fsubs
movsb
jg
clc
mov
add
arpl
and
or
rcrl
shll
sub
or
or
push
add
orb
inc
dec
popa
mov
sbb
insb
xlat
xchg
sbbl
loope
sub
push
scas
pop
dec
cmp
inc
xor
ja
mov
push
rclb
push
lahf
push
xor
movsl
sub
insl
data16
aam
mov
cmpsl
cmp
aad
mov
jbe
adc
repz
lods
fstpl
xchg
scas
addr16
data16
enter
rcrl
fdivr
icebp
insb
mov
pop
iret
in
add
stos
push
cmp
dec
loop
pusha
pop
lods
mov
addr16
aad
repnz
ret
mov
cmp
aam
xchg
cwtl
imulb
nop
movsb
repnz
or
push
pop
push
fwait
jp
fld
jmp
lea
lods
ror
push
loopne
xchg
xor
lock
dec
add
and
mov
aas
orps
enter
das
adc
dec
inc
cmp
push
push
test
repz
cmpsl
sbb
leave
roll
ror
fwait
sub
out
adc
dec
out
mov
xchg
addr16
push
iret
ja
lret
je
cltd
xchg
out
add
movl
push
mov
sbb
imul
sarl
dec
rcrl
cmpsb
adcl
sub
neg
push
fs
in
sbb
hlt
imul
sbb
mov
lods
call
loope
cmp
lock
fucomp
mov
cltd
mov
push
out
sarl
clc
pop
fisubrs
mov
imul
pop
shl
lods
pop
adc
pop
stos
mov
xchg
adc
into
faddl
ret
stos
aas
push
xchg
mov
mov
lods
nop
inc
hlt
in
xor
or
xor
lcall
lods
pop
rorb
inc
inc
sbb
xchg
das
lods
inc
mov
inc
lret
jne
push
cmc
mov
mov
and
push
test
mov
add
cwtl
xor
out
xchg
in
pop
icebp
xchg
int3
add
dec
xchg
pop
sbb
addr16
negl
pop
notb
cmp
jle
jmp
pop
icebp
lods
or
movsl
cmpsl
icebp
mov
adc
fsubrp
mov
sbb
fsubl
inc
sub
std
mov
imul
mov
add
leave
gs
cmp
lcall
fwait
jae
mov
dec
or
sub
sbb
or
lcall
jle
jns
add
xchg
and
push
mov
xchg
jbe
bound
lods
pushf
pop
sbb
inc
cld
sar
popf
xor
repnz
stos
fimuls
inc
arpl
xchg
hlt
mov
lret
push
push
aaa
inc
add
imul
data16
pop
jp
sub
cmp
pushf
lods
ret
add
sub
shlb
sub
out
cs
inc
rorb
mov
inc
repz
inc
test
mov
into
pop
dec
xor
jmp
inc
sbb
imul
push
lss
inc
pop
adc
shl
orl
int3
push
loop
cmc
pop
sti
push
ljmp
xor
sahf
loop
dec
xor
adc
orb
sub
in
sbb
sbb
cmp
nop
xchg
shl
adc
or
cld
mov
pop
sbbl
jns
push
dec
in
lods
xchg
adc
adc
lahf
idivb
or
dec
mov
mov
jno
test
arpl
add
call
ror
ret
in
daa
in
nop
pop
lcall
nop
xchg
test
xchg
roll
push
jge
cli
loop
daa
push
adcb
inc
xrelease
sbb
aad
cmp
les
jmp
gs
cmp
push
and
repnz
sub
in
loope
xchg
mov
test
cli
or
mov
insb
cmpsl
dec
clc
es
mov
pop
imul
imul
cmp
sbb
fs
and
inc
stc
and
test
or
dec
dec
mov
lahf
fs
rcll
mov
popa
jl
push
xchg
test
pushf
pop
dec
fdivp
rorl
cmp
sbb
fimull
lea
pop
jbe
mov
mov
stos
addb
test
jp
loopne
sbb
mov
jb
sti
es
cmpsb
jns
popf
mov
lret
or
mov
mov
push
xchg
push
push
sti
inc
mov
gs
pop
fisttpll
mov
lods
lods
push
std
xchg
sbb
dec
dec
daa
sbb
and
jge
gs
sbb
test
inc
mov
push
lret
xlat
rorb
mov
repz
shlb
or
dec
xchg
out
sbb
cmp
outsl
sbb
dec
jle
push
popa
call
bound
mov
inc
push
notl
mov
out
fpatan
jecxz
ds
mov
dec
subb
ja
stos
pop
sbb
add
lods
ucomiss
iret
push
das
mov
cli
xor
movsb
shrb
sub
mov
std
int
out
ficoml
adc
out
jns
dec
cmpsl
xor
xor
lret
push
push
out
ret
sub
jns
outsl
fwait
push
adc
test
jmp
nop
pushf
pop
lcall
jo
shlb
jne
mov
ja
clc
das
je
push
into
xchg
xchg
pop
jle
jle
jp
js
out
mov
push
mov
and
loopne
xchg
in
leave
add
mov
push
int
lret
pop
add
popw
mov
add
imul
push
test
cs
fdivrs
fistps
mov
test
xchg
push
push
cmc
ret
fwait
add
push
mov
cmp
push
pop
inc
mov
inc
jg
pop
addr16
or
adc
mov
jge
test
daa
pop
lods
enter
sub
or
jns
jg
in
lods
icebp
pop
dec
loopne
push
pop
fcoml
data16
jo
mov
repz
sub
dec
stos
pop
scas
fistps
arpl
repnz
mov
or
push
sahf
test
dec
and
ret
inc
testl
outsb
inc
and
inc
xlat
out
shll
pop
aaa
cmp
jl
outsl
pop
das
mov
push
sbb
pop
stos
add
xchg
jo
movsl
ret
push
fistpl
lea
and
xchg
test
jle
imul
lahf
lret
xlat
xchg
scas
mov
sbb
push
sub
push
in
fwait
in
cmp
push
aas
lods
pop
lods
incb
cmovno
inc
int
in
push
push
ljmp
addr16
in
loop
adc
cmc
mov
mov
lahf
jge
sti
sbb
push
scas
neg
shll
fdivs
xchg
cmpsb
stos
out
out
int3
cs
jb
sbb
xchg
mov
aas
imul
mov
xchg
cmpl
inc
dec
jno
jnp
add
dec
and
in
xlat
dec
cmp
idivb
cmp
rcll
xor
ret
shl
dec
xor
push
sub
aam
adc
mov
xchg
addr16
inc
add
mov
mov
add
lcall
cld
pop
mov
mov
jmp
out
lea
outsb
adc
mov
int3
mov
xchg
cltd
jmp
and
pusha
jo
dec
push
inc
test
out
jae
loope
push
sarl
dec
mov
cmpsb
cmc
lahf
mov
mov
lret
daa
inc
or
ds
inc
xor
pushf
cmc
out
adc
into
pop
jg
cmp
mov
mov
ss
inc
fmuls
xor
clc
add
outsb
add
nop
fnstsw
xlat
call
lods
imul
jno
adc
or
dec
int
mov
lods
adcb
add
notl
popf
add
lea
pop
std
popf
scas
jle,pn
loopne
jnp
lea
mov
pop
adc
jbe
mov
lcall
gs
sti
fs
test
into
mov
stc
sti
test
mov
ds
adc
stos
jbe
mov
add
xchg
test
dec
into
adc
ret
fsubrp
mov
or
in
nop
mov
out
pop
lock
cwtl
mov
mov
js
into
shl
mov
testb
stc
test
inc
js
in
shrl
mov
loop
out
sub
push
cmp
cmp
jg
jle
pop
pop
jg
test
push
dec
jecxz
subb
cltd
adc
push
inc
and
mov
subl
lods
cwtl
out
stc
lahf
ljmp
mov
sub
repnz
and
push
cltd
stos
dec
xor
fmull
lret
in
insl
add
les
in
es
sti
inc
les
fnsave
daa
ror
push
cld
jl
das
dec
adc
jns
pop
std
std
test
test
jb
daa
stos
sub
es
vpslld
loop
and
sbb
xlat
jg
add
out
dec
lods
push
push
int
push
mov
std
xchg
mov
pop
sbb
sbb
xchg
pop
add
lods
pop
out
sbb
mov
add
or
lods
pop
fldl
sahf
repz
jp
xor
in
imul
cmp
leave
into
fdiv
imul
jl
fidivs
mov
fs
popa
sbb
loope
fidivs
dec
jg
jle
std
and
sbb
insl
repnz
stos
cs
nop
pop
out
ret
aaa
lock
stos
lods
pop
dec
mov
leave
adc
sub
cmp
push
cmpsb
hlt
mov
mov
cmpxchg
sub
outsb
lods
jmp
push
inc
dec
push
mov
jmp
cmp
push
mov
icebp
mov
aad
fcom
dec
js
sahf
mov
xor
adc
pop
cwtl
inc
les
dec
sahf
push
aas
pushf
loop
inc
nop
enter
mov
dec
adc
cmp
iret
jecxz
out
fcmove
leave
test
movaps
hlt
ljmp
add
push
push
fbstp
out
test
sbb
ds
in
dec
and
repz
cld
leave
inc
es
pop
fwait
pop
sbb
dec
push
pusha
mov
ss
repz
cmp
pop
mull
sub
push
call
dec
sti
mov
bound
inc
es
push
outsl
stos
mov
mov
mov
faddp
popf
sub
and
mov
cmp
inc
lods
add
outsl
add
int3
test
dec
dec
pop
lret
xchg
mov
aam
push
jnp
mov
ja
push
and
inc
sbb
or
lcall
nop
outsb
mov
xor
pop
mov
test
add
mov
jmp
xchg
jae
mov
les
cmp
jmp
and
cmp
mov
es
sbb
push
xor
insb
loope
test
lea
mov
adc
mov
sub
icebp
shll
add
sub
in
pop
repnz
jp
sbb
in
jmp
inc
rorb
pusha
push
cmp
xor
es
push
and
xchg
and
pop
movsl
fwait
add
push
mov
into
xor
mov
fisttpl
sub
mov
inc
push
jne
xor
into
xchg
faddl
jmp
imul
mov
adc
inc
loope
testb
jl
push
jmp
jns
lret
imul
rsqrtps
aas
inc
imul
fsubrs
cmp
lds
int3
or
jne
outsl
jnp
jb
das
cltd
push
fst
lret
mov
or
mov
or
movsl
jmp
dec
sahf
push
and
lahf
inc
pop
repz
jnp
pushf
pop
jnp
inc
fsts
das
not
shll
push
rclb
fwait
mov
pop
icebp
xchg
fistps
mov
negl
add
sti
movsl
test
jecxz
jo
sti
add
jecxz
int3
ss
ja
pop
inc
into
push
repz
into
mov
stos
sub
lods
inc
or
int
jecxz
fidivl
jmp
jl
push
call
je
outsl
jnp
aad
in
std
mov
scas
mov
sbb
add
data16
push
xchg
mov
mov
mov
ficompl
out
adc
jp
push
ds
out
std
jo
and
imul
jg
mov
shlb
cmpsb
subl
inc
inc
pop
cmp
ja
leave
and
or
jp
fucomip
sub
repnz
or
mov
lret
xor
loopne
cmp
dec
scas
add
sub
ss
mov
cwtl
xor
out
push
aaa
or
xchg
push
in
sahf
shrl
cld
sub
mov
mov
mov
ficoms
popf
in
or
dec
jecxz
sbb
ret
mov
sbb
mov
pushf
mov
xchg
sub
mov
sub
out
imul
jmp
dec
cmpsb
ret
std
lods
nop
sbb
fprem1
and
xor
pop
flds
mov
leave
aam
push
nop
ljmp
in
sbb
add
and
adc
orl
mov
mov
sub
sub
insb
xorl
sub
dec
push
dec
aam
cmc
jnp
dec
sub
out
push
sub
popa
adc
jns
mov
lret
sbbl
adc
pop
mov
aam
stos
cmpsb
lock
daa
mov
pusha
test
hlt
push
fldcw
in
mov
push
or
nop
in
scas
pop
sti
std
mov
out
cmp
out
cltd
imul
cs
ficompl
or
jbe
adcl
xchg
sub
in
clc
ret
sub
push
push
pop
call
xchg
add
dec
test
int
arpl
jmp
loop
call
mov
inc
test
adc
enter
adc
mov
into
push
xlat
outsb
cmpsb
imul
pushf
idivb
sub
lret
ds
std
push
inc
fisubl
fnstsw
push
or
push
or
push
rclb
add
mov
xchg
pusha
adc
sti
pop
gs
aad
test
and
pop
outsl
ljmp
pusha
or
lds
sub
add
cmp
lea
insb
mov
es
jle
jmp
bound
sbb
cmc
dec
in
mov
imul
cmpl
nop
jae
xchg
movsl
mov
inc
jnp
pop
lods
mov
jmp
push
dec
mov
jns
ja
stos
mov
mov
jp
enter
dec
sub
je
les
push
jp
and
jg
add
jns
and
sub
imul
inc
gs
push
sub
pop
rcr
scas
fs
pop
stos
mov
or
mov
imul
mov
in
das
outsb
test
xchg
mov
pop
outsl
add
imul
fcmovu
sub
pusha
push
inc
sub
loope
xor
repnz
dec
out
mov
push
jno
outsb
shll
insb
add
pop
inc
popf
lret
fimull
xchg
cli
mov
jle
push
pop
stos
add
add
mov
mov
mov
pop
cmpsl
xchg
stos
add
and
andb
rorl
mov
add
mov
pop
push
cld
xchg
sub
push
das
adc
adcb
xor
movl
dec
fmul
das
cmp
dec
std
imul
lret
js
push
jmp
adc
and
jb
fists
mov
int3
test
sbb
les
cwtl
xor
mov
push
push
inc
pop
ljmp
cltd
fwait
dec
xchg
xor
sub
and
and
add
repz
adc
lods
jmp
or
xchg
fbstp
jp
testl
xchg
nop
daa
ret
arpl
inc
mov
mov
mov
shrl
cmp
inc
incb
mov
dec
mov
pop
push
ljmp
jno
xchg
rcrl
or
jb
and
mov
adc
sub
fs
filds
inc
fwait
adc
int3
data16
movl
sbb
inc
out
test
inc
ds
lret
pop
inc
xor
arpl
popa
fcompl
xchg
das
add
jp
pushf
test
jae
and
and
nop
pop
fsubrs
cmpsb
jo
fldt
sub
xor
jecxz
add
mov
mov
mov
or
cmp
mov
into
dec
out
jmp
mov
sbb
pop
xchg
pop
fwait
jbe
adc
jl
fldenv
or
dec
stos
jo
cmpsl
xchg
jne
mov
into
lret
add
adc
dec
fisubl
aaa
inc
imul
adc
loope
stos
xchg
sub
cmp
sub
lods
mov
loope
xchg
sbb
mov
lcall
inc
sbb
dec
in
jne
es
sub
push
clc
or
into
shr
repnz
or
bound
or
xchg
push
mov
push
sbb
ret
loope
mov
test
xchg
mov
hlt
movsb
shrl
scas
call
cmc
dec
dec
cmp
jecxz
mov
in
jbe
adc
movsb
mov
cld
cmpb
hlt
dec
hlt
pop
inc
xlat
sub
xchg
dec
scas
dec
push
das
aas
insl
aam
sub
popa
pop
call
and
mov
data16
jp
movsl
push
lahf
testb
xor
push
clc
jae
pop
sbb
jno
push
rcrl
adc
test
jne,pt
filds
notb
in
adc
jp
push
and
fsubrl
aaa
mov
jl
sbb
xchg
sub
mov
les
sub
sub
in
mov
test
leave
stos
and
test
ds
jne
jns
clc
pop
jo
hlt
hlt
add
jae
mov
scas
fisttpll
jg
in
outsb
dec
dec
pop
loope
mov
add
inc
and
out
pminub
into
test
lcall
sbb
aaa
push
sub
push
mov
cmp
testl
jnp
cmpsl
sub
outsb
fcmove
int3
xchg
call
test
fst
mov
xchg
mov
rcrl
xor
sti
push
call
fnstcw
lods
pop
xor
clc
pop
sahf
sub
out
lea
mov
push
push
jo
js
ljmp
inc
mov
mov
jb
in
ds
loopne
lahf
pop
jbe
or
push
loope
mov
mov
stos
cmpsb
push
popf
sbb
push
cltd
out
xor
xchg
icebp
mov
arpl
negl
add
sbb
in
sub
ljmp
xchg
adc
sarl
xchg
dec
cli
pusha
inc
cmpsb
push
jl
out
daa
push
cmp
inc
jo
vpsubsb
mov
adc
sbb
dec
pusha
mov
sarb
fnstsw
lods
jmp
mov
push
inc
inc
mov
add
dec
add
aam
push
mov
jb
cltd
mov
je
stos
xor
leave
pop
sti
mov
mov
sub
add
or
outsb
das
dec
mov
xlat
call
lods
mov
adc
or
fs
push
insl
inc
mov
xchg
stc
fistps
mov
fsubrp
xchg
push
sti
es
jne
jl
cmp
mov
sub
or
outsl
adc
ret
ret
sbb
sbb
inc
xchg
sub
dec
ret
mov
push
insb
mov
stc
and
rcrb
sarl
sbb
pop
subb
xchg
cli
push
mov
icebp
nop
std
push
fsubrs
rolb
loope
jmp
subb
jge
jg
sbb
dec
fwait
icebp
or
mov
test
lret
sbb
cmpsl
repnz
mov
movsb
movsl
jo
in
mov
push
imul
mov
push
fbld
stc
xchg
mov
jecxz
xor
ret
push
mov
icebp
mov
pop
lahf
mov
jle
sub
xor
push
clc
or
mov
les
addb
jno
xor
lds
xor
push
add
out
ret
paddsb
push
add
push
aaa
mov
xor
xchg
jns
outsl
daa
sbb
pop
mov
jecxz
cmc
push
adc
shlb
pop
jne
jecxz
imul
test
jmp
mov
push
jae
loope
cmp
cmp
in
daa
xor
push
icebp
dec
and
ljmp
not
enter
fnstcw
fildl
mov
and
xor
and
in
xor
fwait
xchg
je
int
ret
dec
fistl
xchg
sbb
insb
adc
imul
dec
cld
and
mov
scas
ret
inc
fmuls
sbb
xor
jge
and
xchg
xchg
add
movsb
jo
xchg
mov
cmpsb
jbe
mov
pop
cli
pop
adc
pop
int3
mov
loopne
in
mov
cs
cmpsb
negl
xor
pop
pusha
cmp
sbb
mov
and
cli
pushf
jle
ror
scas
sahf
stos
das
lds
push
sub
mov
pusha
cwtl
dec
loope
inc
dec
add
jb
adc
pop
pop
pop
pop
cmpsl
call
or
push
inc
xor
jmp
pushf
clc
es
mov
xor
cmp
push
push
js
cmp
fwait
hlt
push
shll
jge
push
loop
inc
xchg
out
xor
ret
outsl
pop
sub
jle
imul
xchg
add
inc
add
sbb
hlt
inc
shlb
cli
adc
rol
das
mov
add
jns
sbbl
aam
mov
jo
in
mov
jmp
push
inc
jmp
sbb
jnp
scas
sub
mov
pop
jle
sub
lds
and
push
ds
ljmp
insb
cmpsl
inc
xchg
loopne
std
jle
mov
jl
or
jnp
sub
cmp
fisttpl
dec
iret
cmp
fsubs
pop
test
jo
jg
es
in
sub
mov
inc
dec
aam
fldl
incl
pop
out
daa
fildl
jp
test
push
lods
mov
in
clc
xchg
sbb
out
mov
leave
das
jge
add
ljmp
mov
xchg
pushf
jns
dec
mov
sub
cld
cs
loope
mov
lods
test
out
stos
sbb
push
add
sbb
dec
and
inc
pop
hlt
jne
jns
in
aam
and
dec
imul
push
dec
mov
adc
sub
cmc
mov
push
adc
mov
insb
adc
mov
cmpsl
ds
xchg
cld
mov
mov
sahf
popa
add
dec
fwait
mov
cs
jae
mov
inc
push
sbb
movb
sbbl
push
mov
out
mov
ja
dec
mov
push
xchg
scas
subl
nop
addl
pop
lahf
lods
xchg
movsl
jae
jbe
shl
dec
lea
pusha
mov
repz
cmp
ret
or
push
repnz
mov
mov
ss
xchg
dec
fimuls
fs
stos
jnp
adc
add
mov
dec
xchg
xchg
mov
or
aad
stos
out
jnp
mov
jb
inc
push
xchg
adc
out
push
out
iret
aam
ret
cmp
cmc
mov
pusha
xchg
cs
sbb
das
or
mov
sbb
mov
jge
inc
xor
xor
call
out
test
int
pusha
ret
cs
lret
pslld
adc
jl
bound
shlb
xor
fldenv
adc
add
push
pop
das
mov
mov
sub
rcr
add
repz
shrl
xor
jle
and
xchg
push
lret
out
in
in
pop
pushf
nop
adc
pop
jg
push
out
mov
fmulp
icebp
cmp
push
int
inc
cmp
mov
mov
adc
jmp
cld
pop
jl
loop
or
lret
cltd
cmp
roll
push
xor
sbb
mov
cltd
insb
jge
push
addb
decl
stos
outsb
loope
pop
lret
adc
mov
mov
mov
mov
pop
jns
push
jne
cmp
aas
out
hlt
mov
aad
pushf
jnp
ljmp
add
lods
lock
insl
mov
sbb
sahf
mov
rclb
jg
dec
outsb
sbbb
or
jp
pop
sbb
insl
mov
mov
cmp
aaa
ss
imul
outsl
ret
jl
mov
xchg
psrlw
rcrl
jl
cmc
loop
sub
or
scas
shlb
out
fwait
ds
fidivs
sub
lock
jne
or
hlt
jae
pushf
mov
mov
ds
sub
hlt
ss
ret
lcall
jbe
test
iret
and
insb
sbb
xchg
je
lcall
push
push
sub
mov
sub
dec
cmpb
insb
orl
xlat
xchg
lods
hlt
jg
fmull
push
lods
inc
test
sbb
mov
mov
inc
int3
dec
loopne
hlt
orb
or
xlat
or
jbe
in
fisubrl
pop
pop
int
shrb
mov
js
in
icebp
dec
andb
lock
and
xchg
in
jecxz
pop
outsb
mov
xchg
ficompl
and
daa
ljmp
add
scas
loope
ljmp
mov
pop
jnp
push
mov
test
aad
ds
hlt
inc
lds
push
mov
inc
xchg
mov
mov
push
sbb
adc
jge
pop
repz
pop
cmpsb
sbb
loop
lret
idivb
xchg
add
cmp
iret
in
inc
cmovl
stos
xor
jbe
xchg
xchg
fisubl
xlat
dec
es
add
sbb
js
push
icebp
pop
in
inc
loop
sbb
out
loop
pop
addr16
movsl
mov
mov
and
in
or
aaa
mov
dec
cmpsb
xchg
popf
pop
ret
repnz
fisubl
fisubs
mov
in
sub
jo
push
ret
dec
xor
jae
fsub
imul
xor
mov
vpunpcklbw
jo
adc
jno
xor
xor
mov
mov
mov
xor
rcrb
insb
jle
cmp
sbb
mov
mov
shlb
das
adc
pop
addr16
mov
test
cmp
mov
or
in
std
xchg
sub
lock
sarb
repnz
pop
insb
inc
cmpsl
sbb
jge
mov
mov
xor
decb
push
push
leave
inc
shrl
xor
push
shl
mov
jno
es
stc
dec
jb
cltd
testl
rolb
pop
into
testl
dec
enter
cwtl
xchg
sbb
pop
loopne
out
sbb
inc
mov
jae
mov
pop
js
mov
out
cmp
stos
pop
aad
xor
outsl
jge
mov
sub
popf
mov
cmpsb
inc
ss
jae
sbbl
aaa
pusha
out
call
mov
ja
repnz
xchg
sub
push
insb
cld
cs
jecxz
loopne
mov
sbb
push
mov
out
repz
mov
cmp
fwait
xor
sub
dec
fsts
push
pop
sub
xchg
cli
xor
lcall
pop
mov
test
jle
lods
mov
mov
mov
clc
std
jp
xor
push
in
call
int3
loopne
sti
add
push
mov
cmp
lret
mov
rcrb
xor
push
jbe
das
loopne
stc
xchg
mov
call
sub
dec
lahf
jl
xlat
sub
in
outsl
ret
jp
out
popf
dec
lcall
inc
xor
repz
push
push
adc
adcl
mov
xor
jl
in
js
cmp
shl
orb
pop
inc
decb
mov
cltd
pop
push
int3
add
gs
cmp
fsubrs
dec
rclb
jo
out
ficoms
mov
and
xorl
dec
movsb
ljmp
jg
arpl
inc
mov
int
pop
mov
fisubs
adc
test
jmp
fsub
push
ljmp
cmp
push
sub
adc
push
in
int3
dec
out
cs
cmc
fstps
add
pop
lea
push
shrl
out
xor
fcomip
js
lahf
lds
mov
in
push
stos
lret
ficompl
bound
or
lret
add
pop
mov
loopne
std
fadd
sub
out
sti
sbb
jbe,pt
andl
ds
imul
mov
xorb
ds
popf
das
bound
ja
fwait
mov
leave
sbb
add
mov
add
pop
xor
jg
jg
fbstp
test
pop
stos
ds
dec
push
scas
shrb
mov
jae
jb
push
fsts
or
adc
mov
bound
and
adcl
ss
scas
xchg
mov
adc
es
inc
leave
inc
loopne
dec
imul
test
or
push
hlt
mov
addr16
js
and
inc
push
adc
test
push
adc
add
stc
fldenv
lret
popf
xor
push
inc
pop
cltd
lahf
xchg
push
out
sahf
mov
fdivrs
aaa
jae
jne
addl
pushf
xor
loope
test
insl
cmc
or
outsb
inc
or
push
out
cs
lods
inc
test
xchg
pop
iret
test
adc
cmp
shrl
xchg
lods
pop
cmp
int
pop
lock
adc
xchg
ljmp
dec
shlb
inc
xchg
lock
leave
pop
cltd
and
stos
cmpsl
cmp
rorl
push
and
insl
xor
jge
addr16
ds
mov
ds
or
pop
mov
mov
and
push
test
adc
fldl
cltd
push
add
enter
jae
or
xchg
pop
dec
rolb
xchg
ds
cmp
dec
xor
fs
icebp
jl
in
mov
sarl
cmp
cmpsb
sbb
fdivs
imul
add
fs
xor
outsb
hlt
xor
test
std
jmp
cmp
mov
adc
sbb
es
sub
jecxz
cmp
mov
adc
mov
ret
adc
jmp
mov
test
jae
xchg
push
ss
jne
sbb
mov
into
data16
popw
ds
in
testl
cwtl
aad
push
sarb
ja
add
test
stc
in
jecxz
jno
jmp
sbbl
pusha
push
icebp
mov
mov
test
lea
sub
or
das
sarb
sbb
out
add
es
lds
or
cmp
int3
add
dec
ret
es
adc
push
adc
dec
cmp
in
xor
jae
sbb
push
mov
mov
sub
add
jb
cli
dec
add
out
xchg
push
mov
sbb
pop
sbb
pop
ljmp
lock
pop
in
mov
mov
fdivrs
mov
cmp
sub
gs
test
mov
push
sbb
sub
cmp
ljmp
jbe
dec
jns
mov
mov
adc
insb
or
pop
mov
inc
mov
out
cltd
or
and
in
mov
push
xorb
test
and
mov
push
add
movsl
pop
fisttpll
mov
xor
xchg
data16
stc
ljmp
imul
jnp
inc
pusha
cwtl
mov
in
xor
lods
ret
mov
cltd
cmp
addr16
and
jnp
in
xor
sbb
lds
fisubs
mov
test
adc
inc
mov
cmp
push
stc
pop
repz
and
mov
cmp
mov
adc
jae
repz
xchg
out
jb
and
lock
jbe
outsb
cwtl
cltd
cmp
enter
inc
or
jp
pusha
xor
add
mov
push
inc
xor
push
gs
add
mov
push
dec
rcl
icebp
ja
aas
movsb
jno
push
dec
sub
jns
mov
sbb
or
gs
test
js
int3
pop
sub
xchg
or
jle
xchg
xchg
call
or
bound
scas
pusha
xlat
in
std
inc
into
loop
xchg
add
daa
or
mov
in
out
test
push
and
xchg
mov
push
sti
stos
and
dec
insb
add
mov
in
test
lods
or
testb
mov
jno
inc
pop
int
jbe
negl
and
mov
xchg
ljmp
insb
js
adc
mov
push
decb
mov
cwtl
loop
jbe
xchg
nop
push
jo
and
arpl
dec
inc
sbb
cmp
xorb
lcall
dec
repnz
data16
scas
mov
fdivs
fucomp
mov
push
vpmaxub
in
mov
lods
or
jae
inc
sar
jle
testb
ja
fildl
xlat
outsb
push
xchg
mov
andl
inc
out
xchg
xchg
xchg
mov
ret
imul
dec
iret
xchg
pop
mov
or
pop
clc
push
nop
stos
dec
movsl
inc
or
adc
pop
insb
push
je
sbbl
out
lds
mov
inc
jle
movsl
add
std
push
cmp
insb
cmpl
or
ja
lods
test
andl
ret
fdivrs
push
cs
and
mov
push
xor
or
dec
decl
mov
jmp
dec
add
cmpl
push
or
push
test
mov
movsl
das
add
int
add
push
sbb
cmp
cmp
dec
loop
loop
xlat
addr16
shl
and
sub
loop
dec
jcxz
frstor
les
int3
hlt
pop
les
or
scas
xor
ret
lret
mov
mov
cmc
outsb
inc
sahf
mov
mov
inc
jg
jl
mov
push
cmpsl
mov
mov
adc
ljmp
call
sti
sub
cmpsl
mov
es
pop
int3
push
sbb
lret
cmp
mov
loop
into
mov
dec
pusha
in
lea
clc
popa
out
shll
fldcw
scas
dec
pushf
out
push
into
imul
jo
mov
int3
and
movsb
pop
cmpsb
push
aaa
push
mov
mov
stos
ror
and
repnz
fidivl
adc
andl
sbb
scas
inc
ret
xor
enter
cwtl
sbb
add
cmpsl
ds
clc
sub
in
bound
sahf
loope
sbb
add
jle
outsb
mov
mov
inc
or
mov
mov
pop
jb
push
sbb
ja,pt
aam
cmp
rcl
cmc
cs
in
mov
xchg
xor
add
scas
xor
shll
ss
rolb
hlt
lock
stos
and
lods
popf
ret
dec
jmp
and
xchg
loope
insb
jle
sub
pop
loopne
mov
and
addr16
sbb
pop
jl
int
mov
std
jbe
insb
xchg
xor
addr16
xchg
mov
mov
cld
cmpb
in
stos
pop
mov
jmp
cmc
nop
cltd
cmp
shr
imul
pop
mov
arpl
cmp
stc
add
mov
inc
jo
repz
inc
jp
cwtl
or
pop
cmc
adc
mov
jg
jbe
mov
cmp
mov
aas
push
mov
or
cld
leave
das
pop
cmp
jne
in
mov
adc
add
mov
pop
push
loopne
dec
mov
xor
in
or
test
addr16
xchg
sahf
cmp
or
and
out
sub
jbe
mov
fcmovnb
pop
or
out
fs
and
mov
pushf
data16
cwtl
mov
add
in
and
outsl
out
bound
jmp
ret
jle
push
dec
push
sbb
aaa
mov
xor
mov
or
inc
fidivrl
sub
sub
fsubl
inc
dec
stos
inc
xor
nopl
popf
push
call
icebp
mov
jns
add
jmp
mov
iret
push
cmp
and
imul
inc
pop
jnp
mov
sub
mov
aam
test
push
cmc
xchg
push
adc
add
jo
or
repz
jge
xchg
pop
push
jmp
stos
or
add
les
add
adc
adc
jb
jle
jo
and
mov
je
stc
xor
adc
mov
jl
roll
and
inc
pop
sbb
xor
insl
gs
mov
mov
fcmove
xor
cltd
mov
pusha
and
rolb
inc
out
sub
mov
add
dec
lods
mov
daa
cmpl
call
xchg
fsubp
mov
sub
add
andb
sahf
xor
js
mov
fadd
ja
out
iret
outsb
std
mov
pop
push
adc
loope
jo
stos
push
decl
xchg
insl
add
gs
sahf
jb
adc
loope
das
xchg
jns
out
test
mov
push
sbb
mov
mov
pusha
xchg
in
shlb
rolb
sbb
and
push
push
adc
pop
inc
jnp
inc
addr16
push
fnstcw
lods
pop
int3
jg
test
add
mov
bound
ss
xor
mov
lret
push
mov
or
xor
xchg
ret
xor
fs
into
adc
aaa
push
jo
rorb
cld
push
popa
sub
cwtl
mov
mov
mov
and
cmpsl
mov
add
out
push
push
and
out
cld
pop
lret
ficoms
int3
imul
push
les
cmpsb
ss
jmp
dec
push
sub
xchg
ret
pop
loope
cmc
cld
cld
mov
cld
mov
ljmp
aas
inc
fstpt
aad
push
shll
arpl
mov
xor
out
nop
mov
dec
inc
fwait
jno
inc
sti
dec
sbb
push
insl
movsb
movsb
sbb
out
xchg
push
or
int
xor
mov
push
push
shrb
mov
inc
loopne
push
mov
clc
ret
pop
mov
pop
clc
and
out
or
lcall
push
jmp
sub
fcoms
jb
loope
sbb
mov
add
pop
imul
je
in
pop
sub
dec
movsl
cs
pop
pop
jle
cmpsb
std
lea
adc
aad
mov
adc
in
pop
test
je
pop
sbb
jmp
stos
inc
ret
push
out
add
mov
into
jecxz
js
loop
xor
mov
or
pop
cwtl
das
dec
aam
and
fmuls
lea
movsb
adcb
leave
jecxz
mov
mov
adcl
inc
imul
cltd
xor
pop
movsl
dec
pop
adc
out
jne
xchg
shlb
push
test
jnp
repnz
xor
and
or
push
jmp
xchg
lcall
std
jbe
test
push
jne
push
filds
repnz
mov
sub
insb
add
stc
mov
and
dec
aaa
push
inc
mov
push
imul
lret
or
mov
xor
in
mov
mov
mov
fistps
lahf
loop
sbb
jmp
imul
xor
xchg
inc
fisubl
mov
movsb
mov
ss
cltd
daa
or
jmp
cmc
sbb
sub
xchg
add
mulb
jo
pusha
clc
nop
inc
jge
cmp
sti
pop
lret
mov
adc
into
push
xor
fnstcw
xchg
dec
ja
add
lea
mov
mov
andl
adc
cmc
ds
fucomp
jae
cmp
bound
aaa
mov
into
lcall
add
xorl
and
sub
scas
repz
in
adc
sub
xor
dec
lahf
mov
fwait
aaa
adc
inc
enter
nop
pop
aas
idivl
xadd
add
push
adc
xchg
dec
test
sbb
insl
lods
sbb
adc
call
mov
cmp
ja
das
sarb
jnp
imul
push
icebp
adc
lahf
push
sbb
sub
dec
sbb
arpl
cwtl
stos
xor
sti
adc
adc
aas
adc
jle
push
mov
stc
cmp
je
mov
cmpb
pop
ss
cmp
mov
int3
push
mov
inc
sub
cmp
xchg
les
xlat
je
pop
mov
mov
dec
mov
jle
in
mulb
test
xchg
dec
sub
repnz
add
pop
je
pushf
mov
jno
xor
mov
mov
or
fadd
insl
movsb
inc
movsl
dec
out
jge
dec
pusha
lret
fwait
xchg
outsl
mov
outsb
jnp
cld
and
pop
int3
fsts
ja
aam
mov
leave
mov
outsb
inc
pushf
xchg
adc
cmp
adc
mov
lods
mov
repz
mov
leave
nop
pusha
mov
hlt
clc
rcrl
aaa
ds
stc
arpl
add
std
cmp
push
call
loopne
outsl
loop
mov
insb
add
sub
or
xchg
shll
jnp
mov
sub
stc
mov
mov
dec
in
push
out
xor
bound
clc
jge
adc
lcall
sub
push
dec
dec
movsl
mov
push
movb
scas
push
popa
loopne
push
testb
jmp
and
mov
xchg
push
mov
dec
push
jbe
cmp
xlat
push
and
cmp
dec
fwait
loopne
in
push
test
and
adc
shll
cmpsl
push
sbb
mov
movsb
or
or
xor
cli
push
imull
fcomps
divl
push
outsl
mov
mov
adc
xchg
add
adc
gs
shll
loope
scas
fwait
data16
push
test
add
add
pop
xchg
mov
mov
push
sarl
fisttpll
adc
inc
movsl
dec
ljmp
jmp
mov
pushf
xchg
addb
fsts
mov
push
fwait
xchg
jmp
out
divl
int3
addr16
pop
pop
push
in
cmp
into
iret
mov
shrl
push
or
clc
sbb
push
shlb
mov
mov
mov
loop
or
jge
push
lock
jge
jge
dec
cmpsb
movsl
sahf
push
daa
dec
fimuls
aam
sub
fs
iret
std
push
and
inc
jns
in
mov
xor
les
inc
and
inc
fyl2xp1
call
fldcw
mov
notb
dec
mov
or
ja
bound
dec
sub
out
adc
lcall
das
fs
xchg
jne
gs
add
hlt
jno
sti
pop
testb
outsb
adc
faddl
insb
cmp
and
ljmp
jmp
into
jne
sbb
xor
mov
ret
and
xchg
xor
sub
and
lea
mov
or
pop
inc
inc
lcall
push
jle
test
rep
outsb
loope
pusha
testl
out
or
cld
mov
sub
loop
sub
int3
sub
nop
cmp
pop
pop
xor
popf
mov
popa
cmp
ljmp
and
and
orl
das
or
dec
xor
sbbb
pusha
mov
adc
push
cmp
lea
inc
inc
idivl
testb
jo
jbe
push
pop
outsb
mov
out
mov
push
rcrl
lret
inc
leave
mov
loope
sub
push
sbb
xchg
sbb
sbb
clc
sar
test
stc
mov
arpl
dec
jb
mov
shrb
push
push
repz
popa
jo
movsb
cmpl
lods
jg
jmp
ret
xchg
and
js
int3
iret
and
or
jne
mov
call
inc
mov
cmp
inc
push
xor
jmp
adc
pop
enter
icebp
push
mov
cld
lret
notl
add
sbb
inc
pop
test
jl
fdiv
inc
xor
pop
imul
cmpsb
cmp
nop
test
jne
jns
arpl
inc
gs
push
iret
data16
fcomps
jge
xor
jnp
icebp
lahf
fisubrs
rcll
xor
outsl
mov
int
inc
out
cld
stos
inc
lcall
cltd
xor
ret
sbb
inc
cld
data16
lcall
sahf
jno
mov
mov
das
and
inc
and
jecxz
xlat
imul
mov
pop
sub
cmp
fwait
add
mov
sub
iret
loop
into
xchg
or
mov
push
cmp
andl
pop
cmc
mov
idivl
sarl
ja
fstl
aas
les
pop
andl
mov
push
inc
mov
jnp
adc
add
lods
lret
mov
popa
fidivrl
arpl
scas
cli
in
cld
jo
test
bound
mov
aaa
outsb
fsubrp
dec
std
dec
movsb
xchg
shrl
imul
mov
add
jo
rol
sti
push
popf
fs
add
adc
push
push
mov
push
or
cli
inc
jp
inc
push
add
das
bnd
sub
xchg
insb
testb
ss
inc
push
stc
push
sub
scas
inc
je
or
shll
mov
scas
shll
push
pop
mov
xor
in
mov
je
sub
and
push
fstpt
movsl
fidivl
xchg
fwait
xchg
faddl
pop
dec
shrb
mov
mov
mov
pop
call
xlat
push
sahf
inc
les
enter
mov
daa
roll
mov
xchg
and
testb
sub
inc
test
lds
and
out
ret
mov
xor
scas
xor
lods
outsl
sub
mov
sub
sub
cmp
jg
jne
daa
lds
addl
add
ss
call
inc
lods
jo
pusha
je
pop
cmpsb
popf
push
lods
ljmp
or
mov
adc
ficompl
aas
lret
cmp
lock
aam
rcll
stos
repz
mov
mov
scas
cmp
icebp
scas
push
mov
cmovle
jbe
stc
sahf
out
adc
call
adc
inc
outsb
pop
adc
sbb
das
cmp
loop
seto
mov
ret
jecxz
cmp
dec
adc
les
mov
xor
pop
icebp
or
mov
icebp
adc
iret
ret
les
dec
push
xchg
pop
shl
ds
enter
pushf
movsb
mov
outsl
jnp
sub
fs
mov
pop
cmc
mov
loop
daa
dec
push
mov
inc
fisubrs
stos
jecxz
xor
sti
mov
or
dec
fstps
adc
xchg
outsb
cwtl
pop
out
clc
aam
adc
lods
cmp
sbb
les
es
daa
je
lods
inc
mov
lods
test
andl
ja
loope
xor
movsl
sbb
inc
enter
inc
mov
inc
call
insb
jle
push
lahf
sub
sbb
mov
loope
sbbl
fcom
push
xchg
and
xchg
inc
pop
jae
loop
shll
hlt
push
sub
pop
sarl
jne
push
add
sahf
push
test
add
ds
mov
jp
xchg
and
add
fnstsw
pop
aaa
int3
mov
in
orl
inc
pop
xor
and
test
cmpsb
jg
and
repnz
add
dec
mov
je
sub
ficompl
fdivrp
pop
mov
insb
add
sbb
sahf
jb
adc
cli
push
mov
fstp
mov
pushw
iret
pop
lods
mov
pop
push
sbb
jg
neg
xor
popf
xor
mov
push
nop
jl
jnp
mov
mov
pop
jg
call
push
out
cmp
test
notb
pop
movsb
jo
sub
dec
test
nop
sbbl
sbb
push
repz
stos
imul
mov
pop
ljmp
push
aad
mov
add
dec
jecxz
popf
mov
dec
add
loope
lcall
mov
outsb
adc
aad
ss
cmc
mov
adc
cwtl
push
out
shlb
pop
mov
add
out
cmp
sub
or
xchg
or
adc
xchg
scas
ret
in
jmp
and
stos
inc
jae
cltd
mov
pmullw
jg
mov
mov
jmp
sahf
xor
pop
icebp
mov
loope
xchg
fiaddl
test
fwait
int
xor
in
in
mov
jo
in
jmp
push
sti
jo
es
repz
inc
dec
add
icebp
sub
test
out
inc
jp
jne
jmp
xor
scas
cwtl
pop
mov
sbb
adc
popa
jg
outsl
xchg
scas
mov
stos
ficompl
jp
push
push
outsb
insb
fwait
and
int
cmc
push
push
int
gs
mov
add
ljmp
push
shlb
cmc
fs
imul
ss
cwtl
pop
mov
dec
adc
lods
cli
sbb
daa
cmpsl
roll
xchg
mov
adc
stc
shrl
popf
andb
enter
dec
sub
xchg
insl
and
lahf
mov
loop
fmul
arpl
movsb
ljmp
xor
jg
test
insl
and
sub
xor
testb
pop
adc
scas
fidivl
xchg
das
sub
pop
scas
sub
xor
mov
mov
dec
or
jg
adc
lock
stos
es
xor
and
or
inc
pop
mov
enter
cld
mov
fisttpll
dec
mov
xchg
nop
sub
cmp
fisttps
push
movsb
sbb
cmp
sub
sbbl
xor
lahf
add
jbe
cwtl
and
add
jecxz
faddl
or
out
mov
xor
aad
pop
pop
sbb
jns
fistl
dec
xlat
or
mov
cltd
xchg
dec
dec
in
aaa
into
sbb
outsl
es
jno
or
jbe
sub
test
rorb
inc
xor
rclb
push
or
pmulhw
mov
xorl
pop
jp
adc
mov
pop
enter
movsb
lods
pop
adc
dec
cs
sbb
ret
leave
aam
push
xchg
out
cmp
mov
roll
lock
pop
mov
mov
les
or
cmpsl
into
push
mov
cld
push
xor
xor
out
fnsave
loopne
inc
icebp
xchg
stos
je
cmc
addr16
xchg
adc
or
jo
mov
ret
filds
mov
pop
cmp
push
xchg
aam
inc
fcmove
and
add
push
fistl
mov
or
loope
jge
or
mov
dec
call
arpl
cmc
aam
repnz
shlb
add
ret
dec
inc
sub
sub
push
mov
push
push
mov
idiv
je
sub
xchg
xor
inc
movsl
cmp
int3
inc
cld
loope
les
push
xor
push
cld
insl
stc
fisttpll
add
pop
clc
xor
lods
movsl
inc
cwtl
sbb
dec
push
jo
mov
push
mov
stos
mov
icebp
aas
sar
jne
out
ficomps
dec
mov
inc
dec
mov
out
fstl
mov
mov
adc
icebp
fs
roll
or
push
fbstp
and
dec
sbb
icebp
pop
lea
fwait
js
idiv
cmpsl
cmp
pop
cmp
mov
mov
inc
pop
fistps
mov
jb
xchg
mov
inc
rorb
xor
in
inc
icebp
dec
push
sub
jg
cmovbe
testb
or
xor
jle
xor
iret
into
or
push
loope
xor
pop
mov
push
out
and
insb
cmpsl
das
repnz
and
mov
sub
pop
in
adc
ret
js
push
ret
pop
ret
xchg
or
int3
mov
dec
les
hlt
pusha
add
notl
ss
mov
int3
sbbb
cmp
and
mov
and
dec
push
xor
movsb
std
cmc
push
ljmp
call
js
cmpsl
inc
xchg
fs
xlat
out
pusha
fcmovnu
jg
aam
lock
pop
cmpl
lret
ss
jnp
ljmp
insl
aam
push
mov
push
jno
fnstsw
adc
jge
cmp
and
pop
lcall
sub
sahf
sarl
sub
or
cmp
jg
add
pop
push
fdivl
enter
push
and
test
das
adcb
fisubs
pop
pop
xchg
mov
loope
in
call
loopne
jge
adc
jg
shl
iret
pop
mov
and
xchg
hlt
out
outsl
fidivl
repz
out
add
adc
cli
in
les
scas
cmp
ffreep
subb
sbbb
sbb
sub
shr
ret
pop
jno
cmpsl
shl
lahf
dec
jo
notl
ds
sub
mov
negb
mov
mov
std
and
iret
popf
jg
cmc
das
pop
and
cwtl
push
in
cmp
lret
mov
or
jecxz
imul
or
jb
cli
test
cmp
cmpsb
rol
mov
shlb
xor
adc
add
hlt
in
rcrl
in
fbld
icebp
push
add
mov
bound
pop
mov
out
and
pop
sarl
push
dec
push
xchg
xlat
pop
mov
xchg
cltd
xor
std
inc
arpl
inc
inc
sahf
enter
shl
jne
xchg
stos
dec
xchg
test
gs
hlt
xchg
outsb
sub
outsl
pop
mov
mov
jno
ljmp
lds
pop
lock
xchg
mov
mov
xchg
xchg
add
lds
xor
mov
dec
inc
jno
cmp
mov
xlat
repz
jb
out
or
xor
sbb
push
mov
loope
sbb
arpl
adc
leave
lret
push
fsubr
inc
rcrb
loope
lock
or
jge
adc
gs
rcrb
out
shrl
sub
hlt
mov
mov
faddl
cltd
xchg
pop
lahf
mov
or
or
lret
or
and
or
andb
arpl
sti
test
das
add
orl
push
lds
xchg
adc
sub
lock
loope
sub
lock
int3
cmp
mov
fdivrl
loope
cmpsb
aad
pushf
out
sbb
addr16
push
es
in
xor
iret
jecxz
push
lods
jmp
inc
data16
xchg
scas
xchg
les
or
dec
mov
mov
or
pop
and
pop
add
daa
cmpsl
fadds
dec
popf
or
sub
or
and
add
mov
js
mov
sbb
adc
adc
jnp
cmp
in
add
mov
xor
push
add
and
ret
fcomps
popa
test
xchg
mov
stc
and
add
sub
call
xorl
addr16
test
pop
adc
call
in
mov
movsb
sub
ljmp
adc
mov
insb
add
call
or
cld
or
dec
xchg
shrb
cli
sub
jp
or
jb
nop
movsb
cmp
mov
jmp
push
ds
std
stos
popf
lds
imul
loopne
rorl
ljmp
cmp
movsl
add
or
jle
push
cmc
pop
xchg
xor
clc
js
clc
jae
xchg
xor
xor
and
out
mov
int
inc
cwtl
pop
loopne
jge
add
add
mov
mov
nop
mov
xchg
cs
rcrb
add
test
cmp
cmp
xchg
add
or
in
notl
in
dec
mov
inc
add
jno
dec
lret
mov
mov
fcoms
rorl
cmp
out
cltd
xchg
leave
xchg
lret
mov
fwait
arpl
jl
dec
in
jns
pusha
and
pop
cmpsb
push
out
sbb
dec
sub
push
mov
dec
ret
cwtl
stos
add
jae
cltd
icebp
sbb
fs
ss
stc
mov
mov
add
je
pop
cltd
dec
scas
inc
das
sbb
rcll
inc
sbb
mov
mov
mov
cmp
push
or
or
fisubrl
fsubrp
pop
pushl
enter
push
xorl
lret
gs
sub
pop
xchg
or
dec
fdivl
adc
mov
dec
sarb
jne
ds
pop
mov
push
pop
imul
dec
test
fistl
call
sbb
ds
enter
mov
je
mov
adc
dec
pop
push
pop
lcall
cwtl
stos
call
and
insl
or
cmpsl
push
cld
mov
clc
mov
in
jg
ret
movsl
mov
push
mov
movsl
test
sub
add
testb
pop
mov
push
cmpsl
mov
mov
jne
fisubrs
cs
ja
stos
fnsave
lea
mov
fbld
sti
mov
or
lgdtl
andb
inc
lea
int
and
lods
in
call
pop
call
xlat
loope
out
xchg
add
mov
jae
sbb
xor
enter
loope
dec
mov
inc
and
xor
fildll
sub
inc
ret
xlat
hlt
popw
leave
outsb
inc
pop
in
cmp
sub
outsb
sbb
jo
and
sbb
arpl
sbb
sub
push
leavew
test
cltd
and
stos
push
mov
repz
in
or
lea
pop
das
pop
fwait
xorl
jae
pop
cmp
cmpsl
fs
push
add
mov
ret
push
cmp
xlat
aam
dec
xchg
cmp
pop
jmp
mov
jmp
xchg
jne
mov
ret
xchg
insl
xor
xor
push
dec
insl
outsl
cld
mov
jecxz
mov
sbb
lret
bound
or
cld
scas
ret
je
jns
std
gs
pusha
iret
sbb
sbb
aas
pop
fs
and
pop
scas
inc
shr
cmp
push
cmc
push
bound
mov
inc
in
jmp
fsubl
lcall
or
fdivs
movsb
adc
mov
or
inc
pop
nop
cs
pop
js
fsubrs
arpl
dec
dec
fistpll
out
jns
dec
fldt
fs
inc
dec
ret
arpl
andl
and
push
fwait
cmc
and
orb
rclb
fldcw
xlat
jbe
pop
adc
fadds
fst
sbb
add
js
imul
nop
mov
inc
jmp
fsubrl
mov
mov
cmp
sub
pop
mov
lcall
test
xchg
sbb
sbb
mov
shll
add
xor
scas
cmpsl
fsubl
pop
adc
aaa
mov
xor
enter
push
out
insb
adc
mov
mov
jne
jl
cmp
sbb
push
and
xchg
mov
les
in
sub
je
punpcklbw
pop
push
test
xor
popa
jecxz
fnstsw
clc
outsl
xor
fcompl
pop
dec
jg
sbb
push
js
clc
mov
xor
or
pop
ljmp
pop
xchg
popf
fcomps
loopne
imul
jmp
lcall
sub
push
popa
sbb
xchg
sub
fdiv
dec
loop
scas
popa
scas
inc
xchg
shlb
and
aam
jno
sub
mov
int
iret
dec
rcl
mov
mov
fistpll
adc
pop
mov
ss
insl
imul
hlt
dec
jp
test
fwait
adc
out
lret
and
stos
test
xor
sub
adc
mov
sbb
icebp
adc
or
mov
fildll
xor
dec
notb
aad
xor
ret
data16
jb
push
roll
ret
mov
loopne
aas
add
lock
push
ja
stos
sub
out
jge
cmovns
push
adc
mov
in
pop
jecxz
add
les
xchg
xchg
aad
or
mov
pop
pop
pushf
add
pop
mov
outsl
mov
mov
sbb
mov
or
out
test
cmp
stos
fists
imul
and
js
lock
sbb
push
jp
add
sbb
lret
xchg
pop
hlt
arpl
sbb
scas
out
mov
insb
aas
mov
inc
mov
test
ds
pop
add
mov
test
pop
mov
cmp
sub
jg
clc
popa
mov
ss
outsl
xchg
hlt
adc
scas
mov
inc
inc
jnp
or
jmp
shll
push
sbb
push
pop
dec
lret
loope
sbb
repz
adc
repz
inc
pop
ds
jae
testl
mov
cmp
inc
mov
mov
jmp
pop
jo
test
xor
scas
jno
mov
jle
lock
sbb
push
shll
cmpsb
inc
jp
push
stos
fdivs
sub
div
push
loop
fbstp
pop
push
or
std
lods
out
xor
xlat
push
mov
mov
mov
dec
out
lock
mov
adc
sbb
pop
lret
sub
in
xchg
pop
or
dec
loope
rcrb
and
dec
dec
jmp
inc
rep
test
out
lds
jecxz
das
js
xchg
dec
out
lock
pop
imul
nop
cwtl
jne
mov
les
push
int3
jle
push
in
jo
sub
sbb
xchg
sahf
cmc
inc
test
cwtl
data16
data16
fdivs
cmp
xorb
xchg
cmp
xlat
aad
dec
sub
arpl
movsl
dec
push
inc
shr
scas
push
movsl
mov
jecxz
call
sbb
movsl
mov
jb
and
jno
addb
dec
adc
out
mov
in
movsb
cmp
pop
cmpsl
dec
ss
cmp
mov
mov
jle
pop
divb
je
pop
loopne
mov
ja
inc
mov
and
inc
xor
dec
adc
stos
loope
push
push
imul
xlat
scas
xor
lods
mov
sub
add
and
add
repz
sub
dec
out
stos
add
mov
jmp
rcrb
test
mov
leave
pop
inc
add
xor
add
jl
jnp
loopne
push
popa
or
imul
dec
arpl
fildl
mov
inc
sbb
fwait
and
pop
outsb
enter
repnz
xchg
jns
pop
pop
lahf
xor
fistps
test
ds
xor
push
mov
xor
mov
add
pop
shll
lcall
push
aas
adc
mov
xchg
fs
cmp
lods
inc
jbe
jmp
fcompl
enter
je
movsl
cmp
jb
call
cmp
scas
rclb
push
inc
push
dec
imulb
dec
out
xchg
mov
pop
pop
rorl
and
mov
fbld
mov
mov
loope
aam
iret
daa
add
shl
pop
lods
rorb
mov
push
mov
inc
loope
gs
call
xchg
les
mov
cmp
xor
pusha
insl
xchg
sub
enter
or
mov
aad
pop
mov
fsts
test
fstl
sbb
inc
std
repnz
dec
mov
mov
repz
stos
cmpsl
mov
mov
into
push
push
cmp
lea
sbb
popf
pop
scas
into
test
cmp
xlat
sbb
adc
cmp
imul
or
mov
std
add
add
dec
popf
cmpsb
icebp
rol
pop
jae
push
xchg
mov
cmp
into
js
sub
rcll
subb
push
cmp
cs
jbe
sub
mov
lods
xchg
xchg
rorb
outsl
mov
out
call
cmp
push
jecxz
movsl
mov
or
sbb
out
pop
lock
sti
outsb
fs
cli
les
nop
inc
nop
xchg
jl
movsl
jb
mov
xlat
jecxz
fnstcw
rorb
mov
iret
pop
mov
ficoms
sbb
dec
pop
out
push
adc
xchg
lock
shrl
push
adc
sbbb
jle
imul
lock
scas
dec
cmp
add
push
inc
out
cwtl
or
cmp
pop
pop
mov
test
out
xchg
push
or
push
xor
fwait
xor
sub
lahf
pop
popf
push
pop
xor
data16
xor
mov
xchg
push
mov
cmp
sbb
pop
ret
sub
or
mov
mov
pop
adc
iret
vpmacssww
lahf
jb
xlat
mov
jmp
lods
sbb
xlat
cld
cmc
pusha
pop
dec
loopne
test
xchg
cmp
jnp
jmp
popf
or
jns
add
cld
pop
sbb
daa
call
adc
jns
cmp
push
aam
pop
lods
mov
jmp
cli
inc
push
sub
pop
jl
subl
jecxz
outsl
sub
jge
xchg
mov
xor
push
cmpsl
imul
mov
gs
aad
test
loop
shll
dec
dec
iret
stos
cmpsb
sbb
push
cmp
pop
sbb
jge
insl
adc
xchg
outsl
test
mov
mov
ja
xchg
or
pop
das
ja
js
dec
addr16
fcomps
push
jno
cli
movsl
in
nop
les
dec
enter
push
in
mov
push
xchg
push
pop
je
les
sub
jl
adc
dec
fnsave
pop
lahf
push
xchg
cmp
es
xchg
stos
and
sbb
lret
into
ret
sbbl
jmp
push
leave
out
lahf
cmp
outsl
push
rclb
mov
jle
jb
cmpl
jp
bound
sub
mov
movlps
sbb
das
stc
subl
dec
mov
pushf
jbe
mov
mov
das
adc
add
popa
push
mov
mov
pushl
add
dec
lcall
lfs
aaa
cmp
stos
imul
mov
xor
imull
adcl
adc
divb
cmpsl
xchg
push
movsb
jne
sub
in
pop
jnp
dec
mov
cmpsl
cmp
xor
inc
fstl
or
out
jmp
jo
out
cmpsl
rcr
ficompl
fmuls
pop
and
lret
int
mov
mov
loope
scas
push
cmpsl
sbb
inc
or
and
dec
fnstenv
insl
test
shrl
addr16
mov
aad
mov
cli
pop
lret
pop
test
lea
pop
scas
pusha
jno
cmp
dec
rorl
pusha
dec
push
shr
adc
cmp
es
mov
jecxz
xchg
jg
add
icebp
adc
fcoms
js
imull
loopne
mov
rcr
in
cld
ds
xchg
sbb
cli
push
pop
fnsave
es
mov
test
mov
mov
inc
je
push
sub
mov
pop
pop
fildl
std
jg
mov
xchg
das
ficoml
cli
imul
clc
cmp
inc
sub
bnd
je
sub
mov
dec
bound
push
fsts
push
xchg
dec
mov
fdivrl
push
and
pop
lds
dec
movl
ja
pop
je
add
mov
rorl
dec
loope
iret
imul
push
pop
outsl
pop
shl
imul
imul
imul
cs
pusha
mov
dec
shll
inc
jge
pop
shlb
or
pop
push
sub
daa
add
push
cmc
jae
add
loop
ret
imul
cmp
loopne
cmp
xchg
lea
mov
xchg
iret
mov
adc
lea
xor
movsl
push
cmc
push
mov
imull
pop
xor
shr
aad
xchg
loope
pushf
popf
jecxz
scas
lahf
out
sbb
test
xor
pop
in
adcb
ss
hlt
gs
mov
rclb
aas
dec
inc
sub
test
inc
outsb
xor
in
pop
repnz
push
inc
arpl
sbb
rorb
inc
push
sub
dec
imul
push
sti
dec
jecxz
jecxz
daa
popa
dec
testl
cmp
adc
and
dec
arpl
dec
popf
xchg
jnp
adc
xor
mov
data16
pop
les
rorb
loop
scas
add
loope
ficoml
lret
popa
into
pop
rcrb
push
and
shlb
addr16
jmp
xchg
pushf
out
xchg
xchg
xchg
clc
test
add
pop
fisttpll
push
aad
mov
lahf
pop
xor
jp
pop
jo
or
ret
xchg
imull
mov
popf
push
xchg
ret
shl
ja
sti
xchg
loop
pop
push
inc
subb
push
mov
imul
adc
mov
xchg
jge
push
adc
dec
imul
mov
xor
popa
cmp
mov
mov
in
xor
data16
dec
hlt
std
adc
rcrl
or
inc
push
adc
or
add
fcoml
mov
bound
mov
push
mov
ds
or
pop
ds
pop
mov
fistpl
test
lcall
outsl
fbstp
mov
mov
fbld
les
pop
testb
mov
push
outsl
sub
adc
mov
pushf
jae
and
mov
imull
add
cmc
ja
xor
scas
loop
mov
pop
xor
enter
clc
push
adc
testl
jmp
pop
fidivrs
in
mov
pop
imul
out
mov
fcomi
pop
rolb
rorl
loop,pn
xchg
adc
sbb
mov
in
jae
scas
js
out
sub
pop
mov
dec
cmpl
shrl
fidivl
nop
dec
pop
mov
mov
or
or
in
nop
ret
popa
js
les
and
clc
xor
jmp
rcl
sbb
and
aam
sbb
outsl
adc
shl
adc
mov
rcl
test
xchg
jl
sub
jo
fnsave
scas
push
stos
push
cltd
adc
fists
push
shl
ret
mov
aad
jae
mov
pop
jge
push
out
lds
or
jne
lea
aas
divl
mov
fwait
andl
flds
mov
mov
pop
dec
mov
shl
pop
icebp
cmp
xchg
mov
push
add
dec
daa
clc
xchg
adc
push
mov
xchg
outsb
inc
fnstcw
fsubl
mov
pop
shlb
pop
cld
orb
pop
fwait
mov
orb
ds
xlat
outsb
xlat
mov
cmc
mov
or
mov
fstpl
add
or
flds
xor
push
sti
pop
scas
fdivr
lods
repnz
js
fwait
test
mov
and
loop
div
push
jmp
int3
add
dec
aaa
dec
inc
jns
aad
xchg
cmp
shrl
shrb
sti
pop
popf
add
pop
aam
and
pop
in
inc
mov
fldl2e
orl
stos
out
add
les
imul
sbb
jmp
bound
pop
cmp
jb
push
mov
cwtl
div
cld
gs
sub
repnz
mov
or
mov
push
popa
jmp
int3
jno
js
add
lahf
popf
mov
lret
in
cli
or
mov
lock
hlt
xchg
in
xchg
mov
ret
stos
fnstenv
sub
xlat
rorl
movsl
and
icebp
mov
sbb
mov
jl
inc
mov
inc
pop
jns
je
dec
jp
in
stos
lds
cmp
sub
push
push
popa
mov
iret
push
and
nop
stos
das
out
push
mov
jno
push
cmc
pop
jg
mov
scas
xchg
sub
mov
mov
sub
ja
rolb
int3
scas
cli
sub
movsb
push
fisubrs
call
mov
cs
shrb
pop
out
addl
mov
sbb
out
mov
repz
jno
dec
mov
loop,pn
outsb
push
lret
add
adc
push
sub
pusha
jl
ja
out
scas
fwait
cmpsl
jp
push
in
mov
out
sahf
dec
mov
jbe
fcom
icebp
nop
leave
cmpsl
std
mov
loope
inc
out
fcmovb
rol
cmp
ds
jnp
test
test
or
dec
mov
shlb
in
daa
les
adc
sarb
mov
cltd
jo
daa
nop
jl
pusha
notl
insb
nop
mov
xor
pop
leave
out
adc
mov
jae
pushl
lahf
xor
adc
mov
pop
orb
xorl
cs
shr
mov
out
dec
cli
mov
je
sbb
jl
arpl
sub
push
mov
insb
fists
sti
inc
or
sbb
pop
mov
ljmp
stos
pop
add
mov
mov
gs
xor
mov
xchg
stos
fcmovnu
mov
or
xor
pop
inc
stc
dec
xchg
pop
mov
fisubrs
adcb
pop
scas
pop
out
int3
repz
into
imul
ret
outsb
cmpsl
in
pop
push
andb
pushf
mov
fldenv
scas
xchg
fs
outsl
push
outsl
mov
lea
push
mov
mov
aas
push
test
inc
mov
sahf
loope
in
push
xorl
movsl
into
mov
dec
out
in
sahf
add
jg
mov
cmp
pop
gs
ds
fistpll
cmp
inc
pusha
fistl
mov
sbb
mov
pop
and
std
jo
fwait
xchg
cli
sbb
jo
rcrb
jge
pusha
mov
xchg
mov
lret
idiv
out
inc
or
dec
xchg
lcall
std
jmp
mov
inc
popl
dec
cli
imul
mov
or
push
shlb
dec
xchg
lock
lahf
push
push
ljmp
scas
xor
shll
pop
fisubrl
adc
add
inc
pop
sub
negl
sub
xchg
add
cmp
or
cs
push
mov
inc
jo
adc
push
jp
pop
hlt
pop
pop
test
dec
fnstsw
repnz
mov
ret
inc
ret
mov
sub
sbb
je
sbb
and
incl
imul
es
push
mov
aas
dec
out
cmp
mov
cs
sbb
popa
push
int
xor
imul
mov
jb
add
cld
push
pusha
rorl
shrl
fsubrl
xchg
addr16
pop
mov
or
sbb
or
jne
pop
jns
jge
stos
xor
dec
jb
push
dec
mov
dec
jmp
pushf
stc
shll
ss
inc
pop
stos
outsl
lahf
xor
push
xchg
and
stc
fwait
dec
out
daa
lds
add
fiadds
mov
jns
jp
inc
xlat
inc
rol
lods
pop
pop
lods
data16
jns
scas
jnp
pop
add
lods
jmp
adc
fsubr
ret
in
ret
scas
scas
ds
pop
enter
xor
je
xor
sti
nop
mov
fs
and
xchg
pusha
adcl
mov
push
fcompl
jp
je
mov
sti
push
xchg
inc
sbb
add
icebp
xlat
enter
fwait
xor
mov
stos
shrb
ret
pop
scas
mov
push
jg
test
add
sub
pusha
jmp
xchg
int
add
ja
xchg
bound
mov
les
dec
in
jo
orb
jle
aaa
or
push
mov
stc
xchg
jbe
sub
stc
dec
inc
jl
pop
lcall
and
pop
pop
or
outsl
test
pop
sbb
lea
lock
outsb
ret
push
jbe
outsb
mov
add
fisubs
jg
mov
pop
cmc
jl
mov
out
push
xchg
hlt
arpl
jle
jae
xchg
call
sub
jb
jbe
dec
sbb
loopne
ss
lods
cs
lods
aas
or
cmp
pop
and
test
dec
nop
adc
fwait
fadds
rcrb
mov
stos
gs
int
inc
mov
or
dec
mov
mov
es
pop
mov
jge
push
enter
mov
mov
and
xor
shrl
jae
aam
push
shll
dec
fists
cs
cmp
mov
pop
jo
mov
daa
js
das
out
ss
iret
rcl
lock
mov
sub
subb
push
and
xor
jbe
out
sbb
push
jmp
pminsw
popf
push
test
decl
pop
cmp
mov
push
out
or
inc
fbld
pusha
jl,pn
push
out
gs
jbe
lret
pop
gs
nop
dec
dec
push
out
add
lret
push
adc
in
cmp
ret
mov
dec
rcrl
lret
cmp
daa
mov
dec
add
sti
push
js
pusha
jge
sbbb
jp
lret
aas
std
mov
jl
xor
xor
push
rcr
and
xchg
insl
fdivs
xchg
int
in
xchg
test
test
aad
fbld
cmp
hlt
imul
ror
jp
jbe
pop
mov
jnp
shrd
roll
imul
jno
lahf
cmpsb
pop
mov
xchg
nop
mov
mull
inc
outsl
push
pop
lds
inc
stc
jns
pop
ljmp
jb
mov
ret
fcoms
js
xchg
insl
cmp
jmp
or
sub
ficoms
movsb
lret
and
mov
xor
push
fnsave
xchg
dec
cmp
xor
pop
sbb
mov
or
or
aad
out
and
adc
add
xor
lods
adc
lds
sub
adc
jle
aam
mov
add
clc
mov
jne
scas
push
imul
jno
push
mov
cs
gs
cmp
lret
out
pop
sarl
or
pop
mov
mov
inc
or
push
rcrl
add
fwait
aas
hlt
cwtl
push
xchg
xor
sbb
sbb
or
call
or
jne
xchg
aas
shlb
mov
divl
xchg
out
pop
into
xchg
xorb
add
inc
sti
sbb
cmpb
sub
lret
jno
and
mov
xchg
push
jecxz
test
cli
jno
add
jae
xchg
test
and
hlt
push
xor
adc
push
mov
add
mov
out
in
scas
es
jb
dec
scas
mov
sti
scas
push
loope
mov
dec
cmpsb
sbb
add
inc
leave
test
jl
or
cmp
pop
sbb
push
movsb
dec
ficoml
jno
outsl
xor
dec
dec
rcll
pusha
pop
out
mov
xor
lret
lods
mov
cli
push
sbb
jae
or
fcoms
xchg
lea
or
aam
std
inc
cli
adc
push
or
mov
out
push
insb
movsb
mov
scas
push
mov
pop
movl
jmp
clc
fsubrs
dec
idivb
xor
loopne
stc
dec
sbb
adc
jno
fisubl
push
xchg
daa
mov
fdivrs
cwtl
jp
mov
push
xor
mov
fdivs
ds
mov
into
pop
sbb
sbb
inc
xchg
pop
enter
inc
sbb
dec
shrl
push
popa
jle
ja
xor
jmp
mov
pop
add
cmpsb
or
std
push
or
jle
jmp
jg
jno
pop
sbb
mov
movsl
testb
mov
add
xor
mov
mov
outsb
lds
test
out
xchg
repnz
and
push
xor
lret
xlat
scas
popa
cmp
or
pop
jmp
stos
xchg
in
iret
imul
dec
mov
scas
and
fidivs
or
sub
sbb
xchg
icebp
gs
jl
scas
mov
mov
jne
xor
pushf
imul
aam
adcb
shlb
xor
addb
xchg
cmp
xchg
mov
inc
jg
faddp
aam
mov
aaa
cmpsl
xchg
movsb
vminps
xchg
mov
or
xor
dec
mov
add
cwtl
jb
lods
xchg
stos
cmp
dec
add
sbb
movsb
or
pop
les
aas
pop
dec
xchg
lret
xchg
test
sbbl
mov
sbb
cmp
movsl
pop
jle
dec
scas
ds
out
xchg
or
jbe
mov
imul
jg
adc
insl
insb
imul
punpckhbw
pop
cmp
cld
je
add
dec
adc
xchg
push
cmp
sbb
jae
xor
jmp
outsb
mov
and
and
mov
jp
mov
scas
or
jle
jne
aas
mov
inc
ljmp
mov
ret
adc
mov
xchg
sub
jecxz
scas
sbb
sub
jnp
inc
lods
push
or
vandnps
xchg
sub
push
and
popa
movsb
inc
lock
lods
test
adc
mov
mov
fidivrl
les
ljmp
xchg
in
add
sbb
cmc
imul
aad
leave
lock
je
cmp
inc
push
insl
xchg
mov
repnz
stos
jnp
push
dec
fmulp
and
push
lods
add
adc
test
push
pushf
addr16
stos
sub
mov
jnp
sub
or
cmpsl
call
mov
mov
cmp
das
lods
sbb
or
pusha
ja
je
add
xlat
nop
loope
mov
jae
lock
cmp
mov
cltd
mov
decb
int
test
adc
mov
pop
mov
out
mov
lods
dec
push
mov
sbb
and
subl
fwait
aas
ret
cld
dec
cmp
imul
jns
sbb
stos
sub
loop
jnp
pop
cmp
fcomip
mov
fdivrs
and
insb
outsl
push
or
ss
movl
sbb
mov
scas
cld
cmp
fdivrs
pop
xor
shl
jge
call
mov
mov
ss
xor
mov
push
leave
mov
adc
push
gs
fsub
test
clc
clc
adcl
das
add
pusha
loopne
push
notb
xor
fs
insl
loopne
ljmp
push
pop
sbb
mov
insl
popf
and
dec
mov
mov
sarl
ds
aad
lods
fwait
out
add
dec
loope
cmc
lods
subb
sub
mov
mov
xor
fstp
and
aam
mov
pop
repnz
sbb
mov
js
out
and
fadd
add
adc
fs
dec
int
mov
or
popa
xor
sub
shll
jge
pop
movsb
inc
xchg
stos
jb
or
adc
pop
jg
ret
es
jmp
repz
and
imul
cmp
outsb
mov
pop
cmc
mov
xchg
adc
mov
enter
or
xor
jno
mov
testl
sub
cmp
pop
icebp
sub
js
jge
stc
inc
imul
aad
sahf
xor
int3
fdivrl
pop
test
ljmp
push
or
dec
push
hlt
mov
adc
mov
mov
cwtl
frstor
push
es
test
sbb
out
int3
xchg
cmp
inc
not
aas
into
fcompl
push
push
mov
inc
xor
imul
sub
gs
xor
push
adc
mov
pop
fmul
inc
imul
cmp
push
sub
js
mov
mov
cmp
shl
outsl
push
sbb
xlat
jp
loopne
scas
cmpsb
mov
call
lods
sub
popa
imulb
mov
divb
push
cmp
mov
popf
mov
fchs
dec
or
cmp
cmp
and
adc
or
stc
inc
pop
adc
sub
lahf
pop
push
or
and
into
movsl
mov
push
lods
mov
mov
jnp
clc
sbb
ret
idivb
rclb
clc
pop
push
fidivrs
sub
or
dec
out
popa
ret
or
cmp
add
sbb
fstl
adc
adc
addr16
push
daa
leave
mov
push
mov
fcomps
sub
loop
ja
loopne
pop
adc
push
jno
data16
cli
mov
adc
dec
repz
sub
dec
movsb
sub
aam
dec
in
jmp
xchg
xchg
sbbl
out
fistps
loopne
and
fidivrs
imul
xchg
call
mov
jb
or
enter
jno
popa
xor
popl
call
lret
pusha
xchg
sbb
jae
notb
jp
inc
outsl
xchg
pop
jno
xchg
jno
inc
nop
sub
and
add
in
inc
shrl
mov
fucomip
ja
clc
push
push
ljmp
jo
outsl
adc
sarl
aad
cmc
push
out
and
dec
dec
add
jb
shll
rcll
jecxz
repz
mov
test
lea
lods
in
pop
sbb
push
push
insb
sbb
stos
notl
scas
out
pushf
push
or
xchg
sbb
in
daa
or
cmpb
loop
xor
movsl
jmp
jmp
dec
dec
inc
xchg
jno
push
daa
aas
fwait
cli
push
cmpsl
sub
lods
out
dec
and
jb
or
push
in
sti
sub
je
dec
push
mov
enter
js
les
cltd
test
xor
pop
outsl
pop
ret
jp
fimuls
pop
xor
sub
push
and
dec
lods
adc
mov
or
and
movsl
test
and
imulb
out
sti
in
pop
stos
inc
jne
lods
sub
cltd
cmc
pop
cmc
cmp
lcall
mov
or
int
and
dec
push
lea
cmp
add
movsb
stos
and
push
jns
sahf
sbb
test
gs
enter
sahf
mov
jecxz
daa
mov
pop
adc
dec
and
pop
sahf
add
repz
aad
xchg
sub
imulb
pop
arpl
imul
fistps
ret
adc
push
xorl
ret
dec
cmpsb
pop
xor
insb
dec
push
iret
ret
call
mov
fnstenv
mov
fwait
enter
std
jmp
movsl
push
ret
pop
push
sbb
in
pop
test
lds
in
outsl
repnz
fisubl
lods
sub
sbb
jnp
cmp
mov
add
jnp
sub
js
into
rcll
lcall
mov
or
lcall
push
jmp
pop
cltd
xor
hlt
jmp
dec
jge
xor
pop
adc
test
dec
rolb
hlt
insl
test
cmc
inc
fldt
test
xchg
cmc
insl
iret
data16
sbb
int3
mov
jbe
pop
stos
push
ljmp
add
testb
jmp
repz
aas
stos
jo
or
loopne
xchg
pop
shll
jl
call
xchg
xchg
das
push
test
insl
add
xor
cmp
pop
adc
nop
subl
pushf
daa
add
mov
scas
inc
lret
push
mov
mov
movups
aam
es
pushf
xorl
xchg
lea
sarl
jns
adc
ss
aaa
lret
out
int
fnstcw
xchg
cli
ss
scas
push
mov
xsha256
cmpsb
push
aad
roll
or
imul
cmp
sbb
ljmp
pusha
adcb
xchg
dec
jecxz
sub
pop
mov
fwait
and
pop
out
ret
sahf
and
or
inc
pop
ljmp
mov
in
push
fwait
xchg
push
outsl
jae
adc
sub
out
sub
ret
jp
scas
mov
pop
inc
cltd
push
mov
rol
or
pop
icebp
sahf
lods
aas
pop
iret
icebp
sbb
cltd
dec
sarb
pop
pop
fsubrl
or
push
scas
sarl
push
or
int
pusha
call
xchg
jecxz
mov
push
jg
mov
ss
fcoms
daa
or
jnp
sti
dec
loop
std
push
out
xchg
rol
push
divb
iret
push
mov
int3
scas
sub
mov
dec
adc
scas
inc
push
cmp
xchg
imul
sbbl
jmp
loopne
mov
les
inc
push
dec
in
ljmp
sti
push
push
xchg
mov
clc
imull
les
lret
mov
cmp
jo
cmpsl
inc
shrl
idivl
dec
inc
outsb
fwait
jp
mul
lods
mov
fisubrl
insl
add
xchg
lahf
aaa
mov
push
xchg
add
xor
xchg
jmp
pop
out
shlb
out
jnp
push
mov
inc
movsl
in
jle
shl
push
addr16
call
dec
cmp
add
push
mov
addr16
daa
fidivl
push
xchg
mov
stc
popf
push
cmpsb
lock
insb
jecxz
jae
jecxz
sub
int
sub
xchg
mov
jmp
fbstp
rcr
iret
mov
cmpsl
xor
divb
stos
jge
dec
inc
fdivrs
fistps
cmpl
stc
xor
cmp
mov
fldt
stos
fdiv
cmp
push
testb
dec
bound
mov
in
xchg
inc
xchg
sti
add
subl
fisttps
jmp
pushf
mov
inc
pushf
aaa
and
sub
add
jae
jns
int
adc
call
push
cmp
shl
movsb
push
and
cltd
cld
sub
in
nop
fwait
xchg
sub
ret
sub
cwtl
out
inc
xchg
mov
shl
pop
jns
jp
jnp
mov
js
shrb
lcall
andb
ljmp
adc
loopne
xor
xchg
cltd
loop
lcall
push
fdivs
add
pushf
insl
mov
pop
popf
xchg
roll
pop
dec
in
dec
shll
add
out
mov
loope
adc
aaa
dec
jbe
xchg
test
inc
jmp
mov
imul
data16
aad
in
inc
push
dec
fs
inc
outsb
jp
xor
xchg
push
rep
pop
pop
mov
and
sbb
jae
xor
pop
push
push
and
cmp
repnz
aaa
into
cmp
rorb
inc
sbb
jmp
and
fmul
xchg
xor
idivb
sub
out
stc
stos
fsubrs
push
scas
inc
mov
inc
or
outsb
sub
push
mov
je
lds
adc
jbe
in
add
jbe
lods
iret
adc
out
inc
les
scas
jae
sbb
dec
inc
ret
fsub
bound
out
ret
mov
or
mov
dec
hlt
pop
stc
jo
jmp
jnp
dec
dec
or
fsub
and
cmc
mov
sub
shl
mov
ljmp
jnp
xchg
sub
push
ss
outsl
sarb
clc
mov
movsl
mov
loopne
xlat
adcb
sbb
push
test
xchg
adc
xor
jno
dec
cld
mov
dec
mov
lahf
lods
sbb
insl
add
xchg
pop
addr16
fnsave
lods
cmp
insb
mov
push
outsl
adc
inc
in
fsubr
inc
or
ljmp
call
mov
rolb
mov
mov
sub
adc
cmp
mov
and
call
mov
sub
sub
iret
pop
adc
arpl
cli
in
sti
mov
xor
xor
push
repnz
push
cld
int
aas
cwtl
or
adc
sub
or
push
bswap
xlat
mov
push
jns
adc
es
scas
sub
filds
xchg
xor
fs
fwait
push
jbe
test
jns
sbb
das
add
cli
push
mov
jae
dec
and
je
jne
cmp
mov
or
cmp
adc
sub
mov
or
add
inc
inc
sbb
leave
fildll
pop
mov
outsl
sbb
or
xorl
fidivrs
mov
bound
shrl
or
ficoms
pop
fdivrp
in
in
out
cs
ja
imul
mov
mov
push
sbb
mov
push
lock
xor
push
call
mov
pop
imul
cmp
pop
popa
mov
repz
inc
fcomps
mov
cltd
xor
mov
movlps
mov
les
mov
cmp
imul
adc
ja
xor
jb
mov
fiaddl
sbbl
add
sbb
xor
dec
inc
add
stos
int
xlat
dec
stos
out
xor
and
sbb
inc
cli
xchg
cltd
in
sbb
int3
shlb
data16
adc
and
shlb
and
push
out
jns
fdiv
jbe
lock
inc
dec
pop
sub
jmp
in
stos
mov
dec
and
push
cmpsl
rclb
loope
int3
loope,pt
jae
or
cmp
push
pop
push
dec
add
cli
addb
int
daa
mov
insl
rclb
ss
push
iret
mov
repz
xchg
lods
adc
xchg
jo
cltd
xor
test
inc
or
dec
ds
xchg
jne
arpl
out
ljmp
xor
addb
jg
pop
mov
add
jns
fmuls
scas
pop
loop
into
test
mov
imul
imul
lock
movb
dec
pop
jg
lods
gs
mov
movsb
jae
sbb
add
lock
and
test
out
jl
xlat
daa
jge
imul
out
rcl
out
mov
mov
mov
inc
outsl
push
push
and
dec
lock
xchg
adc
outsb
iret
jbe
mov
gs
jl
or
pusha
xor
jno
loop
nop
jbe
dec
xorl
adcl
aaa
jne
cli
and
cltd
nop
imul
sbb
mov
inc
mov
push
movsb
mov
leave
jnp
mov
sbb
xchg
int
call
jo
jp
xor
sbb
adc
mov
mov
addr16
mov
adc
jo
popf
xor
xchg
mov
outsb
das
add
or
out
inc
sbb
push
fisubl
mov
fbld
or
sahf
jne
jp
out
fcomip
or
push
insl
add
jae
adc
and
push
mov
pop
xchg
xchg
jecxz
inc
pop
sub
out
js
mov
sbbl
nop
movsb
dec
loop
lret
sub
repnz
int3
xchg
jle
cmc
sub
fnstsw
sub
jne
sbb
xchg
push
pop
scas
push
jge
mov
pop
movsb
push
jbe
dec
xchg
add
mov
fwait
ss
ljmp
adc
sarl
iret
fdivrs
outsb
jnp
into
pop
cmp
xchg
and
and
aad
jmp
clc
jns
and
into
lea
push
sbb
stos
into
adc
jb
or
pop
cld
lea
sub
xchg
and
dec
sub
pop
sahf
jecxz
push
dec
inc
repz
outsl
fistl
lahf
aas
or
test
mov
mov
addr16
xor
fstps
addl
pop
sub
mov
or
xor
negl
pop
rep
jmp
jg
push
sahf
jne
shrb
cld
filds
daa
gs
test
add
dec
ret
pop
and
cltd
test
in
xor
in
adc
adc
hlt
push
pop
mov
push
inc
push
add
loope
std
loopne
mov
popa
jb
popf
lret
sbb
retw
push
ds
adc
out
out
mov
insl
enter
xor
jmp
dec
lods
cli
lret
inc
gs
sub
ja
push
iret
push
mov
adc
ds
add
sub
into
movsl
int
cli
fadd
push
or
gs
hlt
pop
rcrl
adc
lret
jecxz
adc
stc
pop
ja
adc
cmpsl
xor
insb
arpl
dec
lods
and
ja
sbb
push
adc
add
push
leave
fnstcw
or
adc
hlt
push
in
test
and
cmc
mov
push
shlb
int3
in
gs
jo
and
ret
adc
cmp
std
dec
pop
cmp
lahf
jbe
inc
add
repz
fnstsw
mov
xor
xor
fdivl
add
pop
sbb
xchg
dec
popf
test
rcr
sub
mov
inc
in
sbb
mov
cmp
lcall
adc
fisubs
cmpb
sbb
and
cld
cmp
imul
test
pop
stc
test
add
insl
mov
push
mov
push
out
xor
imul
adc
rcrl
add
movb
sub
movsb
and
lods
scas
cmp
je
cs
fisubl
mov
mov
iret
cwtl
xchg
mov
xor
adc
fwait
pop
xchg
outsb
jl
mov
pop
lods
rolb
xor
aam
fsubs
dec
adc
add
outsb
or
fstpl
and
das
or
ret
ss
mov
test
sub
fwait
in
jmp
sbb
pop
into
clc
adc
out
bound
or
repz
or
ficomps
lock
jne
mov
jg
loopne
stc
and
jne
pushf
pop
cwtl
push
or
xchg
sub
xchg
xchg
or
addl
cmc
lret
cmp
mov
jae
stc
sub
jge
ja
es
mov
adc
loop
fs
pop
push
lods
mov
cmc
aaa
or
in
mov
pop
mov
mov
mov
setns
and
scas
test
push
insl
jo
lahf
lods
jle
cmp
cmp
bound
scas
inc
ss
adc
cmp
insl
add
or
xchg
mov
pushw
mov
in
inc
aas
dec
xchg
mov
xchg
mov
push
adc
stos
leave
xchg
xchg
inc
js
mov
fldt
inc
popf
rol
sti
jbe
push
fidivrl
mov
mov
sbb
add
loopne
cmc
inc
mov
xchg
nop
cmpsl
push
mov
lahf
stos
loop
movsb
sti
int3
jbe
rcll
jl
push
dec
shr
pop
mov
js
sbb
mov
inc
lods
fsubrs
mov
inc
loopne
add
call
in
jmp
push
push
popa
pop
rclb
fisubl
daa
sub
cwtl
inc
lods
sbb
std
rol
es
sbb
push
xor
jb
xor
std
push
mov
arpl
pop
sbb
in
bound
fsubp
xor
adc
lcall
cli
jne
sub
not
lock
fcomi
add
xchg
sub
js
mov
push
outsl
sbb
sbb
cli
inc
cmp
fldl2t
sbb
fildll
push
add
mov
or
add
dec
mov
je
sub
stos
push
rcll
xchg
outsl
mov
cmp
loope
enter
pop
loop
das
cltd
mov
loop
adc
add
icebp
dec
test
ds
ds
add
and
out
and
xor
test
js
push
fbld
lock
daa
adc
dec
cmp
out
ds
and
dec
mov
jae
cs
adc
pop
jbe
pop
xchg
jo
cmp
pop
fucomi
mov
sub
outsl
mov
cwtl
xchg
in
xchg
xchg
ljmp
ret
les
imul
jmp
sbb
mov
push
arpl
pop
or
xor
cmp
push
je
les
int
dec
mov
nop
cmc
mov
shl
in
jge
loope
arpl
mov
es
or
mov
cmp
mov
scas
pusha
aas
pop
fstl
mov
inc
stos
lea
adc
inc
dec
fists
mov
and
push
cmp
dec
sub
mov
aas
pop
lret
push
xchg
in
mov
jp
or
fisubs
lcall
lods
daa
pop
pop
shll
xchg
jbe
cs
inc
and
int
ljmp
and
mov
cmpsl
leave
popa
xchg
xchg
jnp
mov
cli
jae
rcrb
out
bound
loopne
das
xor
mov
outsl
dec
mov
data16
pop
mov
push
stc
or
adc
aaa
lods
cmp
pop
sub
insb
cmp
lcall
mov
rol
stc
lret
cmp
ret
fsubrs
aam
in
xchg
sub
add
js
sub
jb
data16
inc
push
xchg
jbe
jns
movb
aad
pop
inc
fadd
call
sbb
and
pop
mov
jb
fisubl
in
popl
popa
clc
inc
jno
pop
je
sub
cmp
sbb
mov
mov
scas
inc
sbb
inc
xchg
call
mov
pop
mov
adc
jb
jecxz
lea
mov
lock
lods
shrb
into
arpl
mov
test
sti
xchg
je
outsb
movsl
mov
sub
inc
sbb
mov
jb
push
int
push
fisttpl
mov
stc
enter
loop
sbbb
aas
jae
pop
loop
nop
js
sub
xor
arpl
mov
mov
or
dec
xchg
lock
push
jno
or
dec
pusha
cmp
mov
jo
push
daa
ret
cli
fs
rorb
xchg
cmp
jb
mov
arpl
sbb
insb
ss
stos
push
xchg
inc
setg
jle
lods
or
pushf
rcrb
add
or
sub
inc
mov
push
mov
outsl
push
xchg
adc
mov
popf
pop
ja
aas
inc
in
std
mov
mov
sbbb
cmp
xor
add
or
sub
jo
add
mov
or
bound
aam
inc
out
dec
out
cld
jge
jnp
sbb
mov
jns
mov
add
dec
xchg
push
jbe
and
mov
adc
clc
xchg
adc
pop
and
adc
out
xchg
daa
imul
mov
sbb
repz
jmp
sbb
fsubrs
bound
iret
lcall
dec
sbb
push
or
jnp
add
cmp
bnd
sub
mov
rcrb
pop
dec
sub
test
mov
add
into
sbb
adc
jo
aad
fldenv
or
stc
lds
cwtl
xor
add
lret
mov
shll
inc
in
psrad
mov
mov
or
inc
jns
sbb
push
das
sbb
test
nop
mov
and
adc
jg
ss
xchg
imul
lret
xor
cmp
ret
dec
and
jp
lcall
and
xchg
jb
jl
mov
mov
and
jns
fldl2t
pop
jg
pop
mov
popa
and
push
stos
pop
jbe
xchg
test
inc
jecxz
gs
push
adc
pop
xchg
sbb
jns
mov
inc
shl
dec
ds
dec
test
ja
aaa
push
xor
in
push
xor
push
addr16
lock
jge
cs
add
loop
aas
pop
call
adc
dec
adc
push
mov
iret
cmp
mov
jns
adcb
or
xchg
mov
xchg
pop
cmp
cltd
and
xor
dec
shrl
cmp
jbe
lahf
movsb
push
sbb
gs
aas
andl
cmp
enter
fsubrl
inc
inc
sahf
das
push
xchg
pop
xchg
mov
cmpsl
cmp
fists
adc
inc
cld
iret
rcr
mov
outsl
jmp
mov
gs
mov
adc
lahf
or
lret
add
jne
test
inc
ret
sub
dec
cwtl
add
out
push
mov
call
xor
mov
xlat
fdivp
sub
jle
out
insb
adc
xchg
cmp
mov
and
pop
xor
pop
hlt
les
lcall
lcall
and
je
test
add
jp
mov
inc
fcompl
out
ds
inc
test
sbb
ljmp
movsl
hlt
je
daa
enter
cwtl
xchg
add
loopne
hlt
push
pop
clc
dec
popa
jmp
adc
and
imul
pop
cli
jl
lret
in
push
dec
jmp
pop
aaa
fbld
int3
push
in
dec
pop
cltd
aas
adc
in
pop
inc
dec
add
xlat
insb
and
js
sti
test
xor
jecxz
into
adc
aas
ss
mov
hlt
loop
test
daa
add
inc
ficomps
aas
add
mov
jns
and
aas
push
leave
mov
loop
sbb
sbb
decl
sub
std
xchg
mov
push
fbstp
mov
push
inc
fdivrs
loopne
and
loop
push
fwait
dec
push
lret
xor
mov
imul
xor
cld
arpl
popa
and
shl
xor
add
pop
pop
repz
or
dec
clc
push
mov
sub
inc
sbb
jbe
mov
xor
sub
dec
cmp
mov
arpl
stos
mov
gs
pop
xchg
fs
dec
xchg
push
in
xor
imul
fimuls
pop
addr16
mov
dec
mov
xchg
push
mov
sahf
clc
outsl
jmp
inc
flds
xchg
incl
sahf
xchg
repnz
mov
xchg
sarb
repnz
mov
popa
push
pop
push
xchg
out
scas
mov
xor
or
mov
stos
shlb
dec
jle
dec
mov
in
aad
xchg
and
leave
pop
pop
mov
filds
inc
in
addb
and
jno
mov
cwtl
shlb
mov
push
stos
fs
int
jge
pop
pop
clc
inc
cmp
lcall
cmp
sbbl
call
jl
out
jp
mov
fsubs
sbb
or
leave
int
xor
sarl
out
sahf
lcall
cmpsb
ret
pop
out
insl
add
xor
repnz
out
mov
adc
scas
outsl
add
adc
push
push
enter
adc
jmp
loop
jbe
push
icebp
test
dec
add
aad
jge
out
push
inc
pop
fwait
cmp
sub
in
decl
and
movsl
inc
loop
pop
mov
stos
in
mov
cmc
inc
lods
jle
aas
sub
fistpl
ret
bound
stos
push
add
lods
mov
dec
scas
xor
and
mov
cwtl
mov
movsl
neg
push
pop
data16
jno
and
cmp
in
aaa
and
push
in
mov
out
or
in
test
pushf
jo
mov
sbb
js
pop
mov
into
add
repz
pop
jne
cmp
es
jbe
adc
cmp
cltd
push
les
pop
push
in
shll
xchg
mov
je
cltd
sub
lcall
mov
adc
ficoml
jne
sarb
rcrb
and
outsb
negb
and
dec
aam
adc
ljmp
push
in
movsl
or
or
pop
insl
sbb
add
pusha
mov
xchg
pop
flds
stc
xchg
xchg
mov
scas
imul
sub
or
daa
pop
dec
or
imul
out
insb
mov
lret
bound
mov
outsl
fsubrs
pop
cmpsb
cmp
pop
out
les
jp
scas
aas
jmp
dec
push
lods
rolb
mov
imul
lea
push
push
cwtl
out
mov
mov
mov
fisubrs
sti
xor
jl
into
push
and
push
cli
lods
inc
ret
notl
mov
mov
popa
cmc
pushf
movsl
sub
pop
push
push
subb
jbe
gs
jl
and
rclb
pop
lcall
add
sbb
or
es
cwtl
decl
test
insb
push
sbb
adc
ja
cs
lock
insl
ss
add
push
push
hlt
jg
xor
popa
test
loop
xchg
out
les
jmp
lret
mov
or
mov
outsb
add
mov
jae
cwtl
mov
pushf
xor
pop
lods
jno
loopne
lea
fdivl
mov
push
push
xchg
or
ja
mov
pop
in
pop
in
push
in
push
in
mov
mov
push
insb
repz
mov
mov
jmp
mov
int3
push
push
sbb
mov
mov
test
xlat
mov
pop
sbb
bound
inc
mov
movsl
dec
mov
adc
fstps
in
ret
sub
adc
dec
aam
or
xor
clc
push
test
pop
dec
sub
and
pop
shll
push
xor
push
mov
fstps
adc
imul
add
pusha
stos
jg
movsl
hlt
sbb
inc
loope
cmp
xor
mov
fisttps
aas
out
dec
push
fwait
test
inc
pop
dec
jecxz
xor
loope
sub
dec
lahf
xchg
jl
and
pushf
jmp
or
adc
cmp
or
je
sub
jbe
mov
fmul
mov
mov
popf
cmc
or
test
nop
mov
push
in
inc
sbb
jne
pop
out
insb
into
cmpl
or
icebp
add
xchg
mov
in
call
cltd
and
fisttpl
fwait
shrl
and
rolb
jnp
mov
lock
fbstp
push
lods
in
pop
imul
lock
adc
sbb
roll
sub
arpl
lret
loop
push
jns
in
fwait
xor
fdivp
pop
mov
xchg
idivl
xchg
es
fsubl
shll
aam
test
nop
add
pop
into
pop
ffree
daa
clc
inc
pop
jmp
mov
cmpsl
sbb
jae
inc
jo
mov
lret
cbtw
pushf
sbbb
mov
jae
jge
cmp
pushf
cld
dec
pop
out
push
adc
gs
out
xchg
mov
xor
ret
loopne
and
jecxz
xchg
push
mov
push
shl
movl
xor
adc
mov
repnz
jp
adc
insb
push
jno
pop
sub
mov
dec
fs
add
repnz
jno
adc
loop
xchg
out
dec
jb
jns
movsb
addr16
jge
dec
sbb
aaa
pop
pop
stos
add
imul
stc
sbb
jmp
inc
mov
int
mov
add
mov
int3
fwait
mov
adcl
mov
lds
xchg
dec
pushf
dec
inc
rol
ss
rcll
dec
shrb
test
call
push
ljmp
jb
dec
test
andb
cmp
mov
dec
imul
xor
out
shrb
pusha
add
das
clc
or
mov
jg
aad
test
xchg
es
mov
pop
aas
hlt
mov
les
cmp
or
lret
lods
mov
mov
inc
push
inc
mov
inc
pop
loope
jle
out
shr
sbb
imul
out
sbb
pop
push
out
or
pop
push
mov
mulb
fnstsw
jo
inc
sbb
jecxz
adc
fnstsw
rcl
jl
jnp
push
das
cmp
pop
out
roll
dec
dec
push
enter
xchg
movb
das
aaa
loop
adc
ftst
jbe
and
adc
and
mov
mov
push
mov
xor
bnd
dec
clc
adc
xchg
add
loope
mov
pop
pop
xor
xchg
xchg
add
dec
xchg
xor
les
fdivl
into
push
push
hlt
and
int
xchg
inc
or
sub
nop
pop
push
xor
inc
std
sarl
aaa
insl
mov
sahf
cwtl
fidivl
scas
xchg
int
test
jmp
call
or
inc
mov
mov
ja
std
xor
jnp
xor
or
adc
add
shlb
mov
jecxz
int3
and
sar
aam
sahf
repnz
cwtl
push
rcll
mov
mov
xchg
ficompl
scas
test
adc
pop
mov
jae
fists
mov
pop
xor
sub
jg
or
mov
mov
xor
pop
stc
pop
dec
pushw
push
or
xor
adc
out
xchg
fdivrl
loopne
test
pop
notl
push
stos
sbb
xor
adc
inc
pop
ret
in
test
push
scas
mov
add
mov
nop
addr16
xchg
daa
push
xchg
addb
sub
rorl
mov
mov
or
shrl
rcll
push
pop
jbe
fistps
lret
cld
lmsw
mov
push
jnp
ret
shrl
mov
out
stc
out
ret
adc
movsb
jmp
sets
xor
notb
jecxz
aas
push
insl
in
mov
pop
les
ss
sbbl
xorl
cmp
sub
icebp
push
dec
jg
cs
inc
mov
lods
mov
push
in
and
pop
shl
outsl
sbb
sbb
nop
mov
ss
pop
rclb
scas
add
stos
inc
shll
push
push
fs
fnstenv
addl
sub
xchg
cmc
mov
sbb
push
les
test
loope
xor
add
test
adc
jnp
pop
adc
outsl
push
dec
outsl
inc
cld
sbb
fnsave
xlat
mov
or
outsb
xchg
lods
int3
loop
add
enter
incb
out
mov
adc
rclw
inc
imul
mov
aad
imul
testl
subl
hlt
enter
adc
popa
clc
ljmp
add
cltd
xor
lcall
rorb
jge
daa
inc
add
int3
and
rorl
rcl
sarb
daa
call
sti
pop
sub
popa
shl
cwtl
adc
int3
push
stc
js
lds
dec
mov
fdivrl
sbbl
inc
movsb
adc
jne
adc
arpl
mov
sbb
dec
dec
inc
push
imul
ja
into
popa
inc
fsubs
mov
fsts
adc
popa
pop
hlt
sbb
pop
xor
popf
shrb
ror
repnz
xor
testl
mov
out
mov
in
lahf
loope
cmp
ljmp
leave
sbb
sub
or
frstor
fidivs
mov
dec
jno
jecxz
xchg
scas
movsl
add
push
sub
in
loop
pushf
test
dec
mov
aad
popa
xor
adc
or
sbb
insw
cs
in
xor
icebp
sub
scas
push
jno
je
sarl
lds
faddl
js,pn
inc
fstp
xchg
dec
out
shll
out
sub
xchg
xchg
add
aad
xchg
add
out
xor
sbb
data16
or
fwait
mov
addr16
jmp
loope
xchg
add
data16
fildl
push
lcall
into
inc
mov
mov
fst
pop
and
dec
fmuls
and
dec
lods
mov
dec
pushf
mov
movsb
cmp
xchg
aas
push
imul
jno
lret
jae
test
popa
xchg
mov
data16
mov
in
or
roll
sbb
mov
fnstsw
imul
in
push
xchg
in
notl
addr16
fwait
bound
inc
xchg
pop
inc
or
addb
popa
push
pop
jp
je
out
cmp
sarl
mov
or
jmp
rcrl
cmp
fs
outsb
aad
push
push
mov
cmpsl
mov
push
sub
loopne
data16
imul
add
dec
das
xchg
icebp
mov
mov
subl
test
aas
cvtdq2ps
mov
loope
ja
mov
hlt
test
test
and
stc
enter
cltd
push
mov
out
mov
pop
cvtdq2ps
cmp
xor
jecxz
aaa
mov
and
xor
ljmp
push
xlat
jmp
ds
push
ds
dec
pop
cmp
and
not
insl
sbb
ret
rcll
inc
push
out
insl
mov
arpl
xchg
dec
jg
in
fcomps
loop
xchg
jb
adc
stos
fimuls
mov
or
mov
or
cmp
movsl
lds
inc
icebp
xchg
sub
leave
pushf
lea
inc
int3
xor
js
inc
test
jp
addr16
loope
addl
xchg
fisubl
test
dec
adc
inc
and
push
sti
pop
js
inc
mov
ret
adcb
cmp
xchg
sbb
imul
xchg
add
test
data16
aad
repnz
std
call
fwait
sub
pop
loopne
cmp
or
xchg
int
jl
cwtl
mov
mov
addr16
aaa
sbb
mov
and
scas
ja
xchg
test
dec
sbb
jle
test
dec
cmp
mov
fildl
jnp
std
ljmp
mov
add
pop
sti
shll
push
outsl
push
popw
cli
out
idivl
loope
fidivrl
pop
mov
rcl
xor
mov
loope
notb
pushf
gs
xchg
out
sbb
cmc
enter
scas
mov
lds
mov
aad
stos
mov
mov
add
jno
lcall
fbstp
add
hlt
mov
movsb
or
push
push
fldt
cwtl
mov
mov
rcll
divb
sahf
addl
dec
jb
dec
cmp
jae
inc
sbb
add
loopne
adc
rcrb
mov
xchg
xor
jno
adc
or
xorl
bound
stos
ja
loopne
fstps
jnp
mov
addl
inc
fiaddl
mov
cltd
lock
lcall
incb
mov
test
fldl
sub
dec
sbb
pop
pop
jle
aam
mov
adc
mov
mov
push
roll
or
sbb
lods
xchg
sub
test
fwait
data16
inc
push
cs
mov
and
mov
inc
mov
dec
cmpsb
sbb
push
js
fildl
push
nop
aad
jecxz
mov
dec
ds
sbb
xchg
shrb
mov
adc
cs
loopne
lock
mov
scas
push
les
mov
mov
sub
inc
in
cmp
es
sub
and
and
sub
push
mov
cmp
push
pushf
test
xchg
enter
dec
add
repnz
lahf
adc
cmpsl
cmp
or
daa
divl
stos
cwtl
stos
mov
stos
jns
xor
dec
adc
lods
xchg
cltd
popa
cmpl
push
test
mov
test
dec
and
mov
sub
dec
cwtl
lea
and
jbe
nop
push
cmp
cmp
mov
sbb
xchg
sbb
mov
pop
insl
jae
pusha
pop
cmp
aas
stos
add
test
xchg
adc
lock
sbb
lret
sbb
fists
push
ja
notl
cwtl
ja
add
popa
mov
mov
mov
inc
hlt
or
sub
leave
stc
cmp
xchg
mov
fcoml
movsl
and
push
add
mov
imul
push
pop
pop
das
xchg
jnp
lds
xchg
mov
je
and
fwait
cli
es
and
xchg
mov
jg
rolb
xchg
pop
and
lea
mov
jo
push
sahf
inc
push
dec
cmp
dec
jmp
iret
xor
push
xlat
enter
nop
jmp
or
cmpsl
xor
dec
add
push
cmp
test
test
adc
pop
sahf
sbb
cmp
fisubl
mov
push
int3
mov
jne
cmp
popf
into
jae
sub
jg
sahf
test
rep
mov
xor
mov
or
sub
xchg
sti
insb
mov
pop
cmp
gs
xchg
inc
out
adcb
fiadds
mov
xor
mov
mov
sub
lahf
sbb
repz
jp
imul
dec
jp
jno
ljmp
or
ljmp
cltd
lret
xchg
stc
jg
les
push
adc
cmp
loop
cmc
cmp
dec
mov
fldl2t
imul
xor
jle
rorl
inc
add
cmp
fisubs
xchg
cmp
xchg
mov
lret
sub
push
ds
in
lods
lahf
aas
lds
sbb
fldl2t
mov
and
dec
jns
mov
aas
mov
in
push
jbe
jecxz
push
lret
shlb
shrl
scas
imul
add
xor
push
mov
aas
pop
aaa
mov
cmp
jecxz
mov
push
mov
ljmp
and
imul
leave
aam
push
push
lods
jle
xchg
mov
adc
int
sbb
icebp
mov
mov
adc
xor
pusha
sarl
add
dec
cmp
in
test
jb
mov
jge
push
sarb
sub
ja
mov
inc
and
in
mov
and
loope
jle,pt
fiaddl
mov
xor
jge
iret
and
stos
add
sub
adc
hlt
mov
dec
int3
jne
notb
cmc
lock
sbb
fldcw
into
mov
lcall
and
pop
std
arpl
ss
adc
jbe
stc
and
lea
das
adc
shll
mov
fucomp
mov
pop
jmp
fsubrs
scas
enter
jb
cmp
int3
icebp
aad
andl
adcb
sahf
mov
xor
or
dec
mov
inc
rol
mov
mov
push
xor
ret
pop
and
stos
xchg
pop
inc
rcl
lea
mov
jae
inc
inc
xlat
daa
mov
popf
sti
int
outsb
fs
lock
xlat
popf
mov
cmp
jne
pop
sbb
xchg
dec
jle
mulb
movsb
out
lds
subl
push
fstp
xor
cmp
or
or
lods
test
js
test
push
pop
testl
adc
imul
lahf
test
loopne
jl
add
pop
mov
fsubrs
fwait
lcall
lods
or
pop
pop
ret
imul
cmp
ret
rsm
inc
xorl
sbbl
fimull
xchg
imul
inc
push
lcall
lahf
in
jmp
pop
roll
addr16
dec
ret
rorb
aas
push
aad
jnp
push
popf
xor
mov
popa
pop
xchg
inc
bound
or
andl
or
lods
out
int3
sbb
call
jb
jbe
mov
and
inc
pop
pop
mov
bound
iret
cmp
in
std
dec
xor
xchg
push
sbb
or
mov
lods
xchg
mov
add
out
aaa
push
and
push
notrack
pop
lods
out
data16
pushf
fdivs
outsb
push
jbe
xchg
arpl
jne
addl
fists
inc
pop
fldenv
bound
cmc
fldl
das
jl
xor
add
je
lcall
fnstcw
cltd
lahf
fmuls
icebp
add
in
add
scas
mov
out
in
loopne
lds
xor
mov
aad
shl
ljmp
inc
cmc
out
jge
or
dec
pop
hlt
call
add
mov
adc
or
mov
sahf
inc
fcomps
push
ficoml
cmp
inc
call
xchg
xchg
xor
mov
fldl2t
out
mov
sbb
leave
push
and
add
sti
mov
adc
bound
mov
outsb
sub
lods
dec
cmp
data16
mov
sub
fdivl
inc
outsl
dec
cld
add
sub
cltd
cwtl
das
lret
lods
cmpsl
jle
mov
test
inc
dec
cmp
test
dec
ficoml
mov
dec
mov
xchg
movq
push
jb
mov
imul
imull
or
inc
mov
das
jne
xchg
xchg
mov
push
inc
jnp
je
shll
inc
jl
clc
movb
ds
push
rcrl
rorl
mov
xor
and
inc
push
mov
jae
cmpsb
das
or
lea
jnp
push
xchg
divl
lock
dec
scas
xor
lahf
stos
inc
jmp
inc
dec
add
pop
add
gs
inc
stos
mov
jge
test
popa
mov
sti
xchg
xchg
push
jecxz
ljmp
pop
cmp
or
inc
leave
add
lods
and
movsb
dec
dec
jecxz
enter
sbbl
test
hlt
daa
jae
lret
es
sub
xor
or
xor
dec
int3
lods
cwtl
xor
leave
loopne
add
aaa
cli
jne
xor
iret
js
push
or
test
or
pop
rorl
cwtl
ret
outsl
lock
in
mov
and
je
inc
hlt
in
sbb
sub
mov
aad
add
xchg
inc
mov
push
push
in
insb
pushf
mov
sbb
fsubp
inc
xchg
out
sar
cmp
or
push
out
movsb
or
rcll
jmp
test
insb
pop
insl
and
dec
jl
neg
jl
jne
aad
and
pop
sub
adc
mov
sbb
shl
inc
dec
push
scas
repnz
jl
adc
jg
lret
mov
dec
xchg
inc
mov
cltd
repnz
pop
or
daa
or
adc
jno
rcl
imul
pop
rolb
repnz
or
xchg
adc
mov
es
sbb
aas
cli
imul
inc
cmp
jno
xor
and
loopne
test
pop
or
jl
sbb
sarb
pop
pop
in
lret
arpl
xor
mov
jne
xorl
and
shrl
cmp
idivl
in
aad
pop
xchg
pop
les
mov
mov
outsl
jmp
mov
imul
lret
les
push
leave
test
loop
lahf
popf
inc
and
mov
je
jo
lahf
test
jl
mov
enter
dec
or
inc
mov
in
push
fistpll
sarb
outsl
lret
push
mov
push
aas
ret
jmp
dec
push
dec
incl
fcoms
inc
push
pop
cmpsb
imul
xor
rcll
xor
int3
scas
add
jbe
ja
stc
fidivrs
adcb
outsl
or
jl
and
sbb
mov
inc
mov
leave
pusha
pop
or
das
std
cmc
out
ffreep
clc
xorl
or
stos
pop
enter
push
cltd
aas
stc
out
adc
dec
or
mov
xor
mov
insb
mov
popf
push
movsl
int
xchg
pop
push
jns
lahf
outsb
jge
stc
fwait
sub
sub
jno
fsubs
lods
scas
push
mov
fstpl
mov
mov
je
leave
ss
cli
in
inc
fidivs
add
enter
scas
push
mov
fisubrl
fnstenv
jo
leave
sbb
clc
push
adc
xchg
mov
test
andb
mov
gs
loopne
in
sbb
movsb
imul
lcall
insb
mov
fdivrl
dec
cld
jne
lcall
stc
je
xchg
cltd
scas
scas
mov
cmpsb
lret
imul
mov
mov
das
enter
ret
mov
fisttpl
mov
cmp
lcall
sub
fldcw
pop
fimuls
add
inc
jp
pop
mov
outsb
sbb
push
cwtl
in
xor
adc
and
cmc
xor
adc
aaa
test
xlat
lahf
pop
lcall
stos
pusha
xchg
dec
dec
add
sbb
xlat
mov
mov
cwtl
jp
scas
lods
pop
movsb
add
xchg
and
filds
sub
stos
je
lcall
cmpsb
mov
jl
inc
fsubrl
jmp
leave
jecxz
adcl
shlb
sbb
daa
inc
fnstcw
ja
dec
push
mov
popf
mov
imul
xchg
or
les
xchg
test
add
cmp
sti
adc
sub
repz
and
mov
repnz
jg
mov
roll
or
cmp
mov
daa
in
rclb
mov
cmc
dec
sub
lcall
fists
xchg
xor
lret
jnp
sub
inc
sahf
std
ljmp
mov
nop
and
push
cli
jno
or
pushf
inc
push
test
std
xchg
sbb
push
scas
adc
lret
jb
mov
out
mov
mov
jae
test
pushf
jp
out
xor
inc
dec
test
bound
mov
sbb
mov
cmc
std
int
cmpsl
insb
xor
lahf
enter
xor
int
popf
dec
cld
outsl
aas
aaa
pop
cmc
scas
aad
and
fisttpll
sub
sbb
inc
negl
cld
add
iret
add
jmp
push
testl
inc
jo
sbb
mov
mov
pop
jg
movsl
push
loopne
jae
loopne
xchg
cmp
mov
pop
ljmp
inc
insb
cmp
mov
es
dec
pop
and
lahf
ss
hlt
adc
add
inc
xlat
jg
fdivs
in
loop
data16
cmpsl
jnp
cmp
add
cmp
mov
sub
scas
mov
xchg
shlb
pusha
jmp
push
mov
or
or
mov
pop
mov
adc
ret
out
adc
push
mov
cli
jnp
pop
sub
jl
scas
lock
dec
mov
js
or
fwait
pop
movb
idivl
movsb
pop
push
insl
dec
or
nop
mov
arpl
mov
jnp
inc
das
aam
pop
jnp
push
mul
add
mov
popf
out
movsb
and
divl
sti
scas
cmp
jecxz
iretw
flds
cli
cmp
push
loope
push
xor
mov
imul
in
dec
mov
les
dec
ds
mov
clc
inc
inc
mov
xor
adc
outsl
inc
jmp
mov
and
loop
stc
shl
push
popf
dec
in
push
loop
inc
dec
enter
popa
das
adc
fdivp
push
lret
lret
fidivrs
into
call
in
sub
sbb
icebp
adcb
div
lea
insl
xchg
sub
or
jo
fstp
mov
rcrb
inc
sub
add
aam
aam
and
pop
cmp
fcompl
outsb
adc
or
stos
nop
xor
xchg
jns
jo
mov
clc
mov
mov
popf
ret
js
and
fs
movsb
mov
ffree
jg
pop
jnp
lods
dec
jnp
stos
or
xorl
dec
or
enter
lcall
push
adc
mov
mov
pop
ss
test
jle
jg
adc
test
bound
popa
mov
ds
and
sbb
mov
insb
jp
jns
ret
jle
adc
fcmovnbe
lcall
cwtl
cmp
aam
add
xor
jp
pop
cmp
std
hlt
outsl
pop
sahf
adc
sbb
popf
inc
fcomps
and
mov
cwtl
xchg
push
inc
ret
adc
call
cmp
ja
add
dec
pop
push
and
push
mov
and
aam
leave
mov
mov
daa
push
shll
inc
xor
pop
xor
clc
js
adc
imul
ret
jmp
mov
pop
lahf
inc
xor
fidivl
dec
pop
pop
ds
jae
inc
mov
repz
dec
cmc
push
xchg
out
cmp
aad
lret
stc
adc
and
and
or
push
jl
mov
jns
or
icebp
adc
push
lret
das
inc
ret
add
pop
sub
pop
shrl
inc
push
insb
or
inc
xchg
divl
adc
clc
xor
cmpsl
fld1
xor
mov
pop
mov
fwait
adc
aaa
js
xchg
xor
lock
push
inc
ret
jge
fsubs
in
xlat
out
lcall
mov
xor
pop
push
fwait
xor
push
mov
cltd
jns
push
or
jno
jle
mov
or
fwait
adc
adc
mov
gs
lahf
fimull
arpl
fstps
imul
or
rcl
pop
fadds
jp
sub
bound
push
sub
into
dec
shrb
lcall
test
scas
jb
pop
ja
test
add
lds
or
mov
xor
xchg
cmp
daa
sti
sahf
lcall
ljmp
jns
out
and
lock
mov
push
ss
mov
push
or
aaa
mov
mov
cmp
sbb
hlt
pop
sahf
add
fs
pop
jp
es
dec
int
xchg
vzeroall
xor
stos
cmp
cmpl
jg
outsl
popa
lret
xor
icebp
xchg
mov
sub
fldl
xor
jb
pop
aad
push
pop
addr16
jle
mov
mov
rcll
mov
shrl
outsl
dec
sahf
popa
je
aad
add
rclb
cmp
add
bound
movsl
dec
and
or
loope
rorl
mov
pop
mov
or
lock
mov
add
xor
jecxz
clc
mov
xor
or
and
push
sarl
xchg
shr
mov
push
push
sarl
roll
xlat
adc
xchg
jge
imul
clc
outsb
push
outsb
repz
sub
ffreep
sbb
aad
sub
loopne
add
lock
popf
fidivrl
sti
or
cmp
ret
iret
xchg
push
jne
pop
jmp
rcrl
sbb
frstor
jns
jne
ret
outsl
pop
adc
cmp
mov
push
pop
lcall
fisubl
cmp
gs
jl
hlt
xchg
mov
cmc
sbb
add
add
cmp
adc
mov
or
adc
push
out
ds
shl
das
xchg
adc
fistpl
cmp
xlat
sub
xchg
mov
ja
pop
xchg
pop
jle
lea
add
repnz
repz
cli
and
orl
cwtl
das
xchg
insb
jle
or
xchg
cwtl
cmp
js
andb
lret
jne
repz
scas
loop
push
lret
pop
repnz
stos
es
fcomi
clc
xorb
bound
cmp
mov
rorl
out
loope
aam
jae
dec
adc
je
push
imul
movhps
rcrb
lock
mov
mov
popa
les
dec
cmp
out
pop
in
or
bound
xchg
dec
sub
lods
rcl
mov
or
adc
xchg
lock
sbb
arpl
sub
lret
test
push
or
sub
jmp
push
inc
pop
cmp
ss
jnp
and
xchg
test
push
cmp
rolb
sub
mov
jbe
pop
push
nop
push
ret
lods
xchg
mov
jle
rclb
mov
pushf
call
aas
mov
movsb
xor
popf
or
loopne
sbb
ret
jo
mov
ret
std
ja
pop
aad
add
cmp
fmull
sbb
lea
sbb
adc
repz
cmpsb
lret
movsb
fadds
loope
arpl
imul
outsb
or
fstpl
add
pop
adc
fwait
scas
lea
or
push
jp
jmp
in
aam
pushf
add
cmp
test
cmp
scas
xor
mov
sbb
out
das
daa
or
cld
jnp
fs
test
fdivl
xor
add
add
movsl
sub
out
adc
jmp
cs
andl
shlb
das
adc
aas
push
adc
xor
or
popa
pop
xor
fdivrl
fldenv
or
pop
lcall
mov
sbb
sbb
mov
mulb
dec
xchg
dec
dec
in
pop
jp
xchg
ljmp
push
and
leave
movsb
cltd
mov
in
and
out
mov
idivb
shll
dec
add
xchg
adc
xor
sbb
in
test
or
cmp
push
int
dec
ds
pop
mov
mov
dec
mov
out
aas
fwait
sti
lcall
xchg
adc
test
xchg
xchg
mov
mov
les
or
mov
add
mov
jno
push
push
fwait
sbb
jns
sub
sub
fsubp
fistl
mov
sbb
ja
xchg
cmc
adc
mov
popa
imul
sti
std
xor
cmp
fadds
xor
xorps
hlt
inc
stc
mov
xchg
cmp
cmpsl
dec
call
jp
rcll
jle
dec
sub
out
mov
dec
jno
call
jnp
out
xchg
scas
imul
outsl
in
mov
into
mov
and
add
das
mov
inc
repnz
popf
and
aad
jl
mull
jecxz
mov
pop
cmp
jns
in
jecxz
test
or
xor
sbb
dec
dec
add
aad
fld
mov
dec
sarb
mov
shrl
outsb
push
xchg
lds
test
push
adc
addr16
pop
mov
std
mov
cmc
push
pop
push
cmpsl
jp
push
xor
or
in
push
xor
jle
out
xor
cwtl
loopew
sbb
stos
and
insl
mov
jnp
sarl
pop
xchg
mov
lods
jg
cmc
mov
mov
in
int3
push
sbb
pop
lods
mov
movsb
adc
mov
sbb
ja
cmpsl
out
mov
pop
scas
inc
xchg
lods
push
call
cmp
and
inc
push
dec
aam
aaa
js
cwtl
mov
and
mov
pop
cmp
add
xchg
insl
mov
lods
xchg
mov
xor
out
mov
dec
cmpsb
imul
jle
lcall
inc
int3
cs
fld
mov
stc
cmp
pop
jo
shl
jne
lods
cmp
add
je
pop
outsb
shrl
xchg
mov
mov
aaa
pusha
stos
stc
push
sub
in
add
cmpsb
jmp
je
and
mov
jne
in
push
push
inc
fcoml
dec
cmp
faddl
shrl
cmpsl
dec
rorl
jl
xor
inc
int
and
adc
jno
mov
cmpsl
fcomps
iret
adc
bound
addr16
cmp
xchg
pushl
sahf
gs
ja
lret
idivl
push
imul
mov
int3
lret
add
lods
test
push
and
jb
notl
out
ret
or
call
cmp
hlt
fs
xlat
sub
or
ficompl
xor
int
mov
mov
push
push
push
test
idivl
ja
outsb
loope
test
jns
arpl
mov
xchg
xchg
popf
and
movb
jg
lods
xchg
orl
sbb
mov
cmp
lret
stos
add
ja
add
jo
mov
jmp
dec
add
mov
xchg
addr16
jne
int3
xchg
ds
adc
out
pop
mov
dec
loopne
jns
mov
mov
movsl
mov
popf
stc
fcomps
mov
cmc
xor
mov
sbb
in
lods
add
lahf
out
cld
push
outsl
ret
mov
mov
dec
dec
fsubp
push
mov
mov
cmp
jle
or
sub
xchg
jbe
push
xor
mov
push
stc
push
inc
push
je
orb
or
jp
cld
push
jae
mov
test
push
cmp
stc
jne
das
cmpsb
lock
scas
sub
out
cmp
int
icebp
arpl
fs
mov
test
push
shlb
js
inc
or
dec
mov
or
mov
mov
add
jno
xchg
pusha
mov
leave
cmp
shrl
xor
lea
inc
mov
je
bound
ss
int3
in
and
outsl
out
xor
pop
jl
ret
int3
pop
sbb
or
and
mov
pop
jg
or
enter
roll
inc
sub
jns
idivb
push
insl
int
add
mov
andl
imul
jl
das
cltd
stos
pusha
clc
rcrb
fisubrl
push
mov
inc
add
cmp
lods
pop
repnz
xchg
and
andl
mov
fnstsw
call
jns
imul
jg
xchg
adc
loopne
outsl
adc
jbe
rcl
jg
cwtl
std
push
pusha
iret
inc
xchg
shr
lret
test
lds
out
ss
aaa
jne
push
cmpsl
push
and
and
or
mov
push
nopl
cmpsb
in
lret
shrl
mov
outsb
jle
lcall
add
add
into
push
scas
lea
mov
in
fwait
jmp
fists
in
sarb
sub
ret
inc
jecxz
cld
lahf
addr16
call
dec
lcall
rcrb
xor
pop
cld
push
sar
sub
mov
hlt
mov
fmulp
cmp
cld
or
cmp
cmp
repnz
mov
pop
dec
sahf
addr16
or
movsb
push
lcall
xor
int3
and
or
outsl
fsubrl
mov
lcall
es
sarb
stos
aad
fistl
mov
or
jne
sahf
and
add
jb
pop
and
add
lods
lcall
dec
mov
lock
xchg
dec
adc
sbb
xor
pmaddwd
in
pop
insl
aaa
sub
ficomps
shlb
lret
notl
xchg
test
decl
dec
mov
mov
js
loop
hlt
jne
push
lcall
mov
push
orl
sub
call
arpl
pop
lock
jno
sub
cld
xchg
pop
dec
mov
or
movl
dec
pop
fnstenv
outsb
stos
mov
outsl
hlt
jp
es
call
sahf
fs
fwait
cmp
ret
repz
xlat
inc
push
jo
xor
xchg
mov
sbb
sbb
sub
loop
xchg
out
popf
cmc
icebp
mov
and
push
jo
cmp
aaa
mov
sbb
jnp
sub
mov
loop
imul
test
pop
xchg
sbb
scas
jns
mov
rorb
jno
sbb
pop
lock
jge
std
cmp
aad
sub
or
aad
dec
pusha
data16
mov
cli
push
test
dec
jbe
and
popf
les
pop
push
aam
ja
out
fnsave
sub
movsb
pop
adc
push
das
mov
mov
xor
or
mov
pop
dec
out
dec
insl
adc
cwtl
testb
addl
xchg
add
mov
loope
sarl
movsl
int3
fucomip
xchg
mov
push
out
pushf
subb
push
xor
ss
cmp
rclb
sti
inc
out
lret
inc
fsts
ja
jp
and
xchg
movsl
ret
xchg
cs
push
test
jne
mov
pop
push
mov
ja
xor
clc
lahf
push
and
popl
rol
cld
push
and
aaa
cli
pop
lret
inc
sbb
sub
push
and
push
adc
movsl
mov
inc
aaa
lret
rcll
popa
cmpb
sti
iret
and
jp
insl
pop
test
mov
xor
insl
std
jns
das
mov
dec
mov
js
push
mov
add
pop
mov
lcall
fistps
pop
jge
jl
ds
out
dec
pushf
mov
gs
jb
jl
mov
mov
insl
cmpsl
inc
dec
cmc
shr
cmp
dec
mov
cmpsl
test
aaa
or
scas
adc
push
push
xor
and
sub
in
sbb
mov
aad
cmp
jmp
xchg
ljmp
sub
aaa
into
ss
pop
shlb
dec
into
add
mov
cld
dec
cmp
das
adc
iret
xchg
adc
int3
inc
mov
decl
or
or
aam
fs
jmp
sbb
and
mov
jecxz
std
cltd
jbe
mov
inc
adc
mov
sbb
cmc
cmp
lahf
jl
fidivrl
xchg
nop
dec
or
xor
pop
data16
push
scas
pop
mov
sahf
and
dec
test
lcall
popf
fs
cmp
cwtl
xor
loop
roll
iret
xorb
xor
sti
xor
mulb
jne
cltd
mov
popf
jmp
aas
aam
inc
insl
loopne
les
mov
sbbl
push
bound
xor
cs
push
mov
ret
sbb
mov
lds
ljmp
call
in
lock
inc
in
xchg
xor
adc
xchg
push
pop
xchg
dec
lods
mov
pop
pop
iret
rorb
mov
lret
push
inc
data16
pop
pop
pop
das
mov
cmp
cmp
cltd
fisubl
sbb
dec
test
adc
pop
enter
pop
push
sub
mov
es
mov
pop
mov
lcall
in
jl
xor
mov
add
int
pop
mov
cld
push
mov
sbb
data16
ljmp
pusha
aaa
pushw
jle
xchg
push
jecxz
scas
cmp
aaa
rorb
add
or
arpl
mov
inc
or
inc
fwait
jne
xchg
sub
jae
lret
jbe
mov
lret
pop
adc
dec
outsl
push
cltd
insb
mov
test
ret
fwait
outsb
cmpb
cmp
add
dec
jge
jle
inc
push
adc
add
jb
pushf
roll
fdivs
sub
mov
sub
loop
push
fwait
dec
ror
aaa
mov
sub
arpl
pop
into
pusha
out
push
xlat
call
mov
mov
sbb
int3
push
cmpsl
das
aam
lcall
xchg
sub
lret
je
and
jb
adcl
mov
jmp
jmp
xchg
mov
roll
push
xchg
dec
xor
and
sbb
fsubr
mov
xor
fidivl
mov
fdivl
mov
pop
cmpl
jno
or
insl
inc
cli
mov
dec
and
xchg
clc
jae
jle
es
lock
cmovge
loopne
dec
loop
dec
cmp
popf
jecxz
fs
ljmp
push
push
mov
push
and
sub
mov
aam
push
cli
xchg
dec
dec
aaa
imul
add
repnz
sub
xchg
das
mov
pop
mov
test
outsb
jl
rcrl
rol
or
push
daa
xchg
sbb
aad
repnz
cmp
shrb
pusha
mov
mov
decl
push
mov
div
push
mov
outsb
in
loop
jle
mov
mov
int
add
jne
jo
dec
cmpb
sbb
mov
into
fldl
mov
sbb
test
mov
gs
arpl
xor
push
jo
add
dec
stos
fidivrl
shll
and
loopne
adc
popa
imul
sub
adc
test
rclb
movsb
lods
sub
xchg
mov
sbb
inc
sbb
test
sub
dec
adc
dec
sub
mul
add
ljmp
jbe
or
add
bound
outsl
push
adc
jmp
inc
or
aas
cmp
xlat
mov
pop
popf
pop
xor
pop
icebp
jns
mov
jp
inc
mov
pop
popa
pop
cmpsl
sbb
sahf
and
mov
jp
mov
jp
pop
xor
jne
cmpsb
stos
pop
dec
pop
int
testb
inc
xchg
cmpsl
ret
mov
out
sarb
movsl
dec
arpl
std
stos
cmp
subl
or
mov
mov
mov
pusha
mov
pop
call
cli
and
pushf
arpl
xchg
mov
leave
and
push
jecxz
rclb
je
and
cmpsl
xchg
jle
add
jns
xchg
jle
lret
ja
sub
push
hlt
mov
imul
jp
ja
adc
add
iret
hlt
enter
in
cmp
push
stos
jg
shrl
fdivl
jno
sahf
scas
mov
push
jmp
fwait
aam
mov
hlt
scas
jle
movb
cltd
mov
test
push
xor
jmp
sbb
bswap
dec
push
sbb
sbb
add
stos
andb
mov
push
shll
insl
pop
in
jne
repnz
cmp
push
mov
and
jl
push
std
or
andl
or
mov
jle
les
sbb
scas
lret
mov
aad
in
in
dec
sub
jne
shrl
xchg
ror
sub
push
jns
stc
stos
aaa
and
popa
cmp
xchg
xchg
push
test
ljmp
outsl
and
fiadds
imul
push
scas
shl
mov
into
cmp
cmp
out
jbe
sbb
stos
inc
fstl
fs
inc
lock
add
xor
negl
into
inc
shlb
rol
or
mov
jp
mov
mov
fisttpll
xchg
adc
push
sbb
sub
dec
add
sub
cwtl
sub
dec
sub
mov
mov
std
jne
jp
pushf
pop
push
add
incb
jl
inc
int
dec
add
jecxz
adc
sbb
add
loop
mov
push
hlt
dec
xchg
add
adc
pop
pop
lret
dec
outsl
push
fimull
push
inc
adc
sub
and
daa
rsm
movsb
xor
fwait
xor
sbb
enter
rorb
push
mov
push
rol
lds
xchg
mov
or
mov
xchg
stos
push
negb
xchg
pop
dec
pop
pop
cmpsb
andl
aad
inc
mov
push
and
rclb
das
clc
and
inc
or
pop
xlat
mov
xchg
lret
into
aaa
mov
cmpsl
test
pop
call
nop
lods
loope
and
mov
cmp
decl
dec
dec
cmpsb
mov
dec
fsubl
lods
shrb
dec
cmp
cltd
movsl
cli
sbb
lret
sub
movsb
add
in
fsubs
leave
sbb
pop
mov
cmp
mov
das
test
enter
xor
lock
scas
imul
or
and
test
roll
sub
pop
add
cs
imul
or
aas
mul
pop
cmc
icebp
xchg
pop
ret
mov
mov
dec
ret
jnp
and
lret
insb
xchg
inc
push
fwait
mov
shll
mov
inc
cmp
jne
sbb
or
pop
lcall
movsb
shrl
or
leave
xchg
aam
mov
insl
dec
pop
cmc
jl
outsb
mov
sbb
pop
cmpsb
inc
fstp
jnp
xor
stc
fs
movsb
adc
xor
xchg
leave
mov
mov
insb
lcall
leave
test
aaa
mov
in
xor
bound
push
mov
or
test
add
ss
dec
mov
push
lret
bound
mov
ret
push
ficoms
or
iret
jecxz
fs
mov
cmp
or
adc
mov
imull
cs
ficomps
data16
mov
and
pop
stc
mov
xlat
in
pop
mov
push
sbb
inc
sub
mov
jbe
adc
push
cwtl
fwait
push
imul
sbb
scas
adc
psubusb
imul
dec
inc
or
sahf
cs
push
in
in
insb
movsb
gs
faddl
ret
add
pusha
sbb
fiadds
sub
mov
cwtl
jbe
fidivl
shrl
and
jno
mov
pop
adc
and
xor
or
in
xor
or
push
fucomp
dec
mov
mov
lods
sahf
cltd
call
lods
test
insl
sub
add
es
mov
lret
cmp
cli
rcll
cli
nop
arpl
xlat
xchg
repnz
daa
cmp
imul
test
jle
fisttpl
mov
xchg
jns
pusha
fwait
xor
push
lcall
push
or
pop
add
jb
mov
push
jecxz
loope
pushf
std
xchg
into
mov
out
iret
add
xchg
inc
outsb
xorb
ljmp
mov
aam
aas
push
mov
xchg
test
test
and
add
in
inc
mov
mov
les
sbb
lods
mov
mov
sar
ror
pop
ret
repz
scas
pop
jp
adc
lods
push
repnz
cli
pushf
int3
add
xchg
imul
lret
or
gs
push
add
setae
in
in
sub
dec
or
imul
mov
fistpl
and
cmp
js
adc
jmp
test
fstpt
add
inc
add
pushf
popa
sub
xchg
mov
dec
out
mov
outsb
inc
in
mov
push
sahf
inc
mov
gs
cs
cld
pusha
incl
std
sahf
xor
and
sbb
in
mov
loopne
inc
jae
xchg
aam
pushf
pop
mov
movsb
test
jl
push
fsubl
ret
sbb
pop
mov
popf
das
in
sbb
push
jle
pop
lock
cmp
lcall
lock
lret
lret
outsl
xchg
lss
imul
call
lods
jl
cmpsb
les
mov
repnz
call
or
out
into
out
xor
push
push
mov
ss
sub
repz
push
or
das
movsl
lds
add
les
and
jo
and
mov
push
shlb
jge
mov
stos
inc
dec
clc
js
inc
lods
push
xchg
lds
ds
mov
mov
aad
scas
popa
push
cltd
cld
cwtl
aaa
sub
jo
lods
push
lock
push
xlat
cmp
mov
dec
mov
ret
ret
mov
jl
outsb
scas
outsl
mov
fisubrl
repz
test
movl
pop
xor
std
popf
aad
jb
mov
mov
jle
aad
mov
mov
pop
clc
ja
cmpsl
mov
sarl
mov
sahf
xchg
xor
insl
cmc
sub
je
xchg
and
imul
push
addl
push
push
add
aas
push
mov
int3
fwait
mov
frstor
mov
dec
jb
fnstcw
test
jb
dec
pop
push
jmp
enter
xchg
test
and
movsl
test
ljmp
xchg
out
push
and
sub
adc
pop
imul
bound
jnp
dec
adc
cwtl
inc
push
pop
lock
sbb
stos
dec
cmp
movsb
inc
fisubs
divl
pop
xchg
mov
and
jp
out
mov
int3
iret
js
jmp
popa
adc
in
rolw
stos
lret
andl
mov
push
outsb
mov
shll
sti
inc
xchg
pop
mov
unpcklps
int
dec
fwait
cs
fmul
push
push
xchg
ss
sahf
stc
adc
or
outsl
lea
adc
mov
inc
adc
xchg
mov
pop
adc
mov
and
outsl
lcall
inc
mov
inc
cmp
jbe
sub
mov
adc
cmp
push
stc
pop
adc
movl
inc
sbb
mov
stos
sub
scas
mov
pop
test
mov
push
into
pusha
inc
int3
sar
jno
inc
in
outsl
sbb
or
adc
jae
testb
inc
iret
data16
movsl
dec
fdivl
mov
std
jo
xchg
jo
cltd
pop
fbld
cmp
mov
xchg
dec
mov
pop
rol
mov
sub
lods
push
push
sarl
jg
fwait
hlt
lea
scas
aaa
xor
iret
cmpsl
ds
lcall
insl
clc
scas
dec
addb
push
xor
enter
pop
addr16
stos
jmp
jnp
mov
dec
adc
and
lods
push
jne
jg
jbe
or
stos
mulb
cmpb
dec
loopne
add
push
arpl
sbb
sarl
cmp
rcr
dec
sub
cmpsb
jb
dec
idivb
lods
pop
iret
inc
shll
xor
aaa
int
movsb
fbstp
or
sub
or
jp
push
mov
fisttpll
incl
int
cmc
ja
mov
mov
sub
fdivrs
sub
stc
or
mov
mov
lret
jb
jle
test
dec
xchg
add
mov
scas
lock
insl
arpl
aad
fwait
sti
pop
push
cld
pop
push
call
push
out
pop
pop
push
add
adc
fisttpl
jo,pn
pushf
sbbb
pop
mov
fadds
sbb
cmp
aad
pop
rclb
ret
ret
sub
rclb
clc
mov
jnp
fsts
fsubrs
outsl
insl
pop
loop
mov
jle
test
in
cltd
xor
push
cmp
pop
jmp
xchg
add
scas
gs
test
jo
xorl
add
lods
sbb
daa
mov
xor
sbb
out
inc
mov
ret
push
stos
mov
and
iret
test
jmp
lea
push
or
mov
lds
not
sbb
aaa
pushf
mov
add
mov
stc
outsb
push
in
aam
sub
cmc
je
daa
mov
daa
inc
das
repnz
cmp
pusha
jg
mov
fistpl
push
in
int3
outsl
jnp
fcmovnbe
aam
adc
xor
dec
roll
sahf
xchg
xor
lods
stos
jb
xchg
inc
xchg
in
loop
ficomps
adc
dec
dec
xlat
adc
dec
bound
cltd
xchg
sub
andl
pusha
pushl
sbb
push
mov
xchg
mov
testl
outsl
enter
mov
and
dec
cld
insl
mov
sub
mov
sub
mov
addb
mov
fisubrs
cltd
push
lea
insb
xchg
cli
sbb
scas
cmp
sub
loopne
icebp
sub
stos
js
imul
pop
ret
adc
pop
mov
pop
lcall
outsb
andb
shrb
inc
stc
inc
int3
sub
xchg
jo
adc
xchg
push
aad
jno
mov
pop
and
xchg
inc
dec
and
push
jbe
add
inc
subb
lret
add
sahf
ljmp
or
inc
daa
fisttpl
loope
and
mov
inc
insb
cmpsb
fistl
stos
inc
shll
fdivs
data16
sbb
test
dec
ret
adc
jecxz
bound
popa
mov
xchg
hlt
push
mov
lret
adc
or
and
popf
inc
xchg
loope
or
daa
cltd
insl
stc
sbb
aam
sbb
shl
add
push
add
aam
leave
daa
jo
pop
mov
mov
pop
xchg
push
xchg
push
inc
jge
xor
aas
stc
adc
lahf
fwait
xor
fnsave
push
scas
mov
bound
loope
adc
push
jl
inc
xor
mov
sbbl
jnp
xor
ds
jnp
pop
add
inc
cmpsb
movsb
das
sahf
jb
int3
cs
fnsave
test
dec
scas
bnd
shll
mov
test
xchg
jo
xchg
mov
ret
dec
fmull
push
jge
out
clc
xchg
shrb
dec
mov
les
cmpsl
pop
popf
sbb
in
xor
and
dec
xchg
mov
lret
cmp
or
lds
dec
fmulp
or
aas
out
loop
push
mov
rcrl
xor
subl
shrl
dec
out
mov
push
mov
ss
push
in
cmpb
cmp
pop
push
outsl
lods
or
clc
into
notb
loopne
fidivs
in
in
int3
cld
sarl
inc
add
push
orl
and
mov
ds
sub
xchg
test
ret
jb
das
nop
popa
sahf
adc
rolb
pop
shl
or
cmp
ss
mov
fabs
xchg
dec
fwait
lcall
lea
cmp
out
pop
scas
popa
into
das
imul
lret
mov
nop
fisttpl
out
mov
ds
stos
cmp
rclb
cmp
adcl
fdivl
popa
jo
addr16
xchg
enter
inc
push
test
dec
loopne
andb
sbb
lahf
stos
cmp
lret
xor
pop
shrl
lock
inc
and
jbe
sub
test
std
pusha
mov
iret
ja
add
or
push
js
inc
lcall
mov
dec
push
lds
adc
sar
xor
inc
xchg
adc
push
or
mov
push
insl
in
xor
adc
cwtl
orl
outsl
and
jns
mov
xlat
xchg
imul
dec
ficoml
xor
bound
jmp
sbbl
insl
fbstp
stos
add
out
mov
int3
push
pop
mov
gs
pop
inc
leave
nop
cmp
jmp
ja
push
mov
mov
flds
and
cmp
pop
insb
sbb
jle
popf
add
int
jns
fistl
mov
or
add
push
jo
shrb
mov
pop
adc
int
les
mov
xor
inc
xchg
loope
nop
mov
mov
cmc
movsb
filds
sub
push
mov
cmp
cmp
lret
sahf
bound
pop
or
jmp
in
push
stos
das
loop
mov
ret
sbb
cld
scas
xchg
sub
das
mov
das
out
popf
sub
adc
fbld
orb
jecxz
cmpsl
mov
xor
sar
inc
sbb
xor
addr16
xor
fs
popf
hlt
inc
fsubl
jnp
add
test
push
cs
add
enter
add
mov
lret
outsl
addr16
sub
fcomps
mov
mov
cs
leave
xchg
pop
jb
mov
lea
mov
cmp
xlat
aam
rcrl
sahf
scas
dec
xor
mov
xor
iret
sahf
das
push
test
int3
push
xor
fiaddl
daa
shlb
sarb
rcrl
add
scas
inc
sub
inc
jl
ds
push
mov
shl
sub
xchg
daa
insb
fbstp
fimull
clc
scas
push
pop
sbb
cmp
lcall
inc
xchg
js
loop
cltd
adc
loop
push
adc
inc
ja
sub
in
cmp
andl
jns
mov
jp
enter
popl
outsl
stos
push
and
xchg
test
and
les
inc
push
jo
inc
sub
repnz
aas
xor
jnp
fs
xchg
sbb
dec
rep
sti
sub
mov
xor
out
dec
push
jns
xor
jno
pop
xchg
jne,pn
jnp
ficoms
mov
ret
repnz
and
sub
push
inc
shld
push
call
dec
js
lret
and
xchg
cld
sub
inc
or
mov
add
or
and
rclb
adc
outsl
add
mov
shll
test
ds
stos
js
sub
dec
mov
jnp
stc
add
adc
in
inc
in
mov
fwait
outsb
mov
mov
les
sbb
testb
add
clc
jg
mov
mov
jo
lret
popf
lods
inc
setno
cmc
mov
push
imul
aam
pop
mov
dec
mov
dec
enter
aaa
into
pop
mov
dec
mov
mov
lret
cmp
fimuls
sub
jne
ss
inc
arpl
gs
je
inc
lods
and
xchg
popa
adc
out
xchg
or
mov
mov
neg
and
jb
test
and
push
xlat
outsb
in
aam
push
inc
jbe
push
imul
xchg
stos
mov
lock
stos
mov
xchg
pop
lea
stos
or
or
mov
adc
mov
pushf
xor
dec
or
mov
call
icebp
cmp
mov
outsb
pop
mov
aas
xor
mov
ret
sub
sbb
xor
jg
jns
je
sub
ret
cmc
inc
frstor
in
pop
push
stos
mov
cmp
clc
lcall
pop
imul
dec
sarb
out
mov
and
fcoml
arpl
adc
push
inc
fmul
and
jge
inc
adc
lahf
dec
dec
xchg
sti
sub
into
rorb
pop
cmp
bound
push
outsl
daa
adc
push
out
fiadds
adc
mov
jbe
iret
scas
lcall
dec
cmp
sbb
or
push
jno
loopne
push
jecxz
pop
mov
lret
pop
or
ret
rcll
adc
and
jbe
jns
and
jle
adc
clc
aam
lods
outsb
add
fsubrl
cmpb
sti
adc
idivl
pop
cld
jo
adc
sub
jecxz
flds
adc
and
push
out
ja
dec
cs
cmc
ds
rorl
jo
insb
pop
push
fdivl
mov
dec
in
pop
add
push
cmp
fisubrl
fwait
or
mov
dec
mov
lods
mov
shl
add
xchg
adc
loope
decb
mov
sarb
inc
xchg
ljmp
imul
mov
xchg
pop
xor
imul
imul
add
mov
fmull
sub
dec
pop
push
dec
mov
into
popf
push
fsubrs
out
test
inc
fsts
jne
inc
jecxz
jb
test
adc
pop
sub
gs
push
addr16
mov
pop
rsqrtps
mov
std
xchg
hlt
xchg
cmp
add
dec
dec
jnp
aam
stos
addb
mov
icebp
iret
imul
mov
gs
jp
daa
mov
mov
inc
jns
aaa
outsb
adc
jge
mov
in
push
jo
push
add
xor
xor
dec
cmp
pop
call
mov
sbb
and
sahf
clc
mov
sbb
sub
lcall
xorb
xchg
rorb
js
repz
lret
jo
fsubrs
loope
jl
test
iret
repnz
aaa
iret
das
clc
sbb
shrb
or
sbb
sbb
mov
repz
mov
sub
mov
jecxz
mov
push
std
sub
lock
fisubrs
xor
stos
or
test
sub
stc
mov
movsl
lea
mov
into
pushf
scas
call
push
jbe
dec
jae
jp
mulb
sub
out
and
push
das
shl
sbb
out
hlt
dec
out
lea
loope
sub
mov
repz
xorl
addl
xlat
add
adc
ss
test
test
xor
testl
stos
add
mov
push
aad
arpl
push
mov
jge
out
and
lods
xchg
shld
in
add
divl
cmpsl
stos
rclb
enter
lods
into
fists
fwait
enter
mov
int
test
mov
js
mov
push
jge
fcmove
lret
cmp
mov
push
adc
or
push
inc
jmp
or
and
ljmp
scas
fldl
push
jae
mov
js
cmp
and
mov
add
data16
ja
ds
xchg
je
push
xor
nop
mov
mov
pop
push
push
popa
clc
push
and
pop
pop
fdivrl
sub
or
js
lret
jge
cltd
sbb
lret
ljmp
mov
cmp
into
push
xor
mov
jmp
pop
test
cmp
jbe
out
sar
adc
sbb
cmp
in
mov
fs
jnp
cmpsb
std
adcb
rcll
fs
jnp
mov
fcmovne
xor
mov
fstl
aas
mov
lcall
dec
loop
add
cwtl
mov
fstl
jp
inc
mov
push
out
or
or
scas
mov
dec
inc
inc
data16
add
xchg
movsb
clc
jbe
stos
orl
es
jb
pop
mov
enter
inc
ficomps
jecxz
sarl
mov
mov
or
and
sbb
scas
dec
mov
cmc
sbb
cltd
out
xor
imul
jmp
mov
scas
in
insb
push
bound
push
stos
xchg
push
jno
outsl
cld
xchg
mov
add
cs
add
and
sub
cli
xchg
and
jno
jnp
mov
add
or
sbb
pusha
cmp
aad
xorl
out
and
ss
test
into
cld
add
mov
incw
lcall
sbb
sbb
aas
pop
out
outsl
imul
cli
scas
test
xlat
mov
lds
mov
fldenv
divb
pop
sahf
shlb
jno
ss
sub
popa
jl
lret
sti
push
xor
push
sbb
mov
in
fwait
add
xchg
and
dec
stc
fs
hlt
sub
adcl
std
push
mov
mov
sbb
and
jbe
pop
push
stos
pop
fsubl
je
xchg
add
cltd
sbb
bndldx
stc
cltd
xor
jp
lret
mov
in
cmp
add
pop
xlat
repnz
adc
arpl
lret
hlt
cmp
sar
outsl
sbb
call
jle
movsb
mov
filds
mov
notb
dec
loopne
cmp
test
out
mov
jns
mov
std
lar
daa
mov
mov
dec
mov
in
stos
dec
in
dec
or
bound
mov
sar
mov
gs
subb
mov
pushf
mov
lret
jae
cmp
or
xchg
xchg
xor
jecxz
jb
lock
jnp
mov
mov
lea
in
mov
xchg
adc
mov
jbe
out
data16
jmp
sbb
and
mov
je
dec
push
scas
and
test
imul
sbb
ret
out
xchg
xchg
arpl
cmp
fcoms
enter
cltd
add
inc
aaa
rol
sub
mov
leave
jg
mov
push
or
cmpsl
jle
push
mov
sbb
jb
dec
test
loop
das
shll
in
ss
cmp
nop
inc
sub
cmp
ret
movsb
or
and
shrb
xor
addr16
pusha
dec
stos
push
sub
aas
fisttpl
sub
push
push
adc
fsubr
icebp
push
sbb
mov
out
mov
sub
sti
mov
pop
stos
xchg
popa
add
shlb
adc
rcr
add
inc
adc
mov
stos
int
jnp
add
xchg
cld
out
inc
fdivl
pop
mov
xchg
pop
ja
or
pop
shll
rcl
pop
hlt
add
test
mov
lods
sbb
addb
pop
xchg
cmpsl
mov
mov
movsl
out
je
jecxz
jne
mov
mov
cmp
aaa
fistpll
scas
ret
sub
lret
pop
and
stos
js
and
sbb
inc
fwait
sub
out
test
in
mov
cmp
fwait
adc
pop
in
dec
pop
mov
jns
add
dec
dec
std
push
stc
outsl
pushf
dec
pop
in
xchg
daa
add
call
cmp
jmp
inc
js
adc
out
popf
dec
js
xchg
jne
and
mov
es
rcrl
lds
mov
add
and
xchg
shlb
xchg
cmpsb
mov
into
test
cwtl
iret
int3
arpl
icebp
stos
in
cmp
daa
lcall
hlt
dec
mov
and
dec
iret
sahf
gs
add
filds
pop
sbb
stos
sub
xchg
dec
cwtl
sbb
mov
test
push
push
mov
cwtl
call
cmp
jno
mov
mov
and
int
leave
vandnpd
mov
pop
cmp
mov
aaa
inc
and
push
bound
out
fildll
lds
lods
dec
jecxz
inc
push
out
add
out
inc
dec
call
or
push
push
jl
add
or
aad
lret
repnz
and
mov
enter
dec
mov
adc
push
inc
push
int3
pop
stos
stos
jp
fstl
bnd
aas
or
rorl
ficoms
je
and
xchg
xchg
lock
mov
ficompl
mov
inc
lahf
inc
jmp
stos
adc
fptan
sub
repnz
add
ret
dec
pop
jecxz
sub
mov
stos
mov
orb
mov
xor
sub
xor
or
mov
divl
mov
aad
pop
ljmp
stos
test
cmpsb
mov
addr16
xchg
inc
shlb
insl
stos
cltd
push
test
sub
and
fstl
sbb
outsl
jno
xor
push
loope
iret
rcll
arpl
fwait
jg
mov
rcrl
leave
cmpb
icebp
repz
pop
xchg
sub
xchg
cmp
cmp
mov
subb
jl
hlt
push
inc
das
imul
cmp
test
add
adc
loop
repz
inc
jae
je
xchg
cs
adc
pop
lods
call
mov
push
mov
stos
cmp
je
push
lea
sbb
bound
cmp
mov
ret
jmp
add
lret
cmp
cmpsl
out
sbb
aam
sti
inc
xchg
stos
jle
repz
aam
pop
in
dec
dec
loope
je
pop
cmc
fisttpll
mov
inc
stos
inc
or
mov
popf
cmpsb
mov
jmp
scas
mov
sub
jb
add
pop
je
add
and
dec
fisttpll
adc
lods
andb
jle
or
push
jmp
pop
icebp
push
mov
pushf
jmp
leave
mov
lcall
leave
and
aad
out
push
aaa
inc
sub
push
xchg
sbb
push
lret
jl
sbb
mov
int
loop
cmpsb
inc
cwtl
inc
jge
push
imul
lcall
aas
out
add
cmp
add
mov
inc
sahf
jbe
sbbb
dec
out
inc
xchg
cmp
xchg
sbb
fcoml
sub
out
ds
xchg
jb
inc
add
mov
fimuls
mov
mov
jmp
inc
push
mov
sbb
adc
jb
leave
aas
lcall
fstl
addr16
cmp
xlat
sbb
pop
cmp
and
xchg
icebp
ficompl
cmp
and
xchg
xor
leave
fldcw
fidivrl
outsl
and
sbb
add
insb
mov
jbe
cmp
fldcw
aaa
dec
call
pop
cmp
mov
adc
clc
cmp
xchg
test
xor
fmull
inc
fwait
mov
sbb
data16
outsl
ljmp
xor
jl
je
cli
sub
fisubl
sub
pop
add
push
decl
mov
mov
xchg
test
mov
fsubrl
cli
mov
cwtl
insb
push
dec
jo
shrb
in
cmp
dec
out
repz
xlat
popf
daa
push
inc
es
xor
and
ss
inc
fldl
js
sbb
pop
jl
push
imul
xchg
jo
loopne
rcrl
sub
cmp
or
adc
outsb
loope
rep
mov
lock
jbe
xor
daa
lcall
call
xchg
jno
cmp
cmp
stos
or
js
sbbb
fimull
loopne
jo
pop
mov
xchg
sbb
dec
cltd
push
or
or
adc
insb
paddusw
test
lods
arpl
dec
dec
sbb
shrb
mov
push
mov
lock
mov
scas
mov
fdivrl
cwtl
or
inc
addb
data16
sbb
mov
mov
xor
inc
lods
ss
outsl
les
insb
imul
xchg
fnsave
fbstp
adc
scas
pop
push
ljmp
in
pop
sbb
dec
dec
adc
aaa
stc
cmpsb
cmp
mov
pushf
cwtl
jmp
fldcw
sbb
pusha
add
dec
in
pop
push
repz
stos
and
pop
inc
imul
sub
mov
dec
fiaddl
push
std
aad
jns
cwtl
ss
std
or
enter
les
push
shll
outsl
and
mov
mov
adc
cmc
add
cs
cmpsb
sub
mov
adc
cli
pop
sahf
mov
insb
sahf
sbb
push
jmp
shll
mov
xlat
push
fiaddl
mov
fstl
cmpsb
test
xchg
cmp
push
leave
lea
cmp
bound
jo
mov
adc
push
push
xor
inc
inc
xor
lea
jmp
adc
stos
fsts
arpl
ret
xor
lock
push
insb
mov
int
adc
add
xor
push
push
mov
pop
or
mov
push
xchg
xchg
shl
popf
and
inc
push
xor
in
ljmp
out
andb
and
imul
cmpsb
in
xchg
xor
in
mov
mov
scas
mov
mov
cs
mov
arpl
fmuls
push
xchg
pop
mov
les
xor
jmp
add
clc
mov
mov
repnz
sbb
mov
mov
imul
shrd
mov
jmp
or
pop
cmpsb
fcompl
push
hlt
pop
cmp
dec
jecxz
jmp
push
jbe
out
bound
mov
mov
push
or
mov
lods
out
aam
adc
mov
mov
test
pop
adc
dec
lret
lds
in
stc
cmp
loopne
lahf
and
sbb
bound
push
cmp
in
dec
dec
in
fwait
cwtl
bound
std
mov
push
cmpsl
mov
inc
mov
je
pop
cmpsl
loope
in
dec
loop
arpl
cld
lcall
sub
int
mov
cmp
repnz
mov
adcl
mov
mov
enter
fsubl
popf
dec
out
popf
jg
dec
mov
sub
inc
sub
push
xchg
mov
push
and
lea
cmp
xchg
mov
fsubrs
into
pop
scas
jecxz
jae
jae
lods
outsl
ret
mov
or
xchg
gs
out
xchg
cmp
testl
adc
call
hlt
enter
mov
mov
cmp
cmp
dec
mov
iret
add
cmc
pop
mov
js
push
imul
stos
inc
mov
jle
push
cli
or
xchg
and
mov
sahf
aad
loopne
bound
das
mov
fistpll
push
movsl
jbe
aas
scas
into
cmp
mov
test
mov
movsl
or
std
inc
shrb
mov
mov
ret
cmp
dec
mov
flds
push
pop
std
sti
push
ds
mov
add
lret
popa
jb
cmpsb
in
or
mov
sub
gs
mov
cmp
add
mov
xchg
push
and
fisubs
mov
iret
sbb
subl
mov
push
dec
outsl
stos
mov
mov
jge
adc
ss
xchg
test
fsub
push
in
adc
fiadds
adc
lds
adc
decb
imul
orl
pop
sbb
shl
iret
fdivs
js
rorb
dec
fidivrs
pop
loope
push
xchg
mov
int
cmpl
jae
mov
mov
cmp
lret
pop
add
addb
aas
inc
push
sbbl
shr
ljmp
sub
pop
inc
xlat
inc
dec
sbb
test
pop
out
inc
test
xor
fnsave
stc
je
sbb
outsl
cltd
push
jmp
mov
hlt
or
add
movsl
nop
adc
sbb
dec
mov
sbb
mov
cmp
mov
out
and
xor
inc
jne
jne
pushf
out
pop
inc
xchg
add
adc
sbbl
loopne
xchg
popf
inc
mov
add
push
cmp
ret
lahf
jmp
enter
xchg
rol
mov
add
mov
sub
inc
addr16
out
or
sbb
push
out
mov
clc
mov
loope
xor
jae
fs
inc
in
pop
pop
repz
jp
sbb
dec
mov
cmpsw
xor
in
mov
jns
or
mov
pop
mov
outsl
fs
or
test
pop
repz
push
lock
xor
sahf
inc
out
xchg
ja,pt
arpl
push
rorl
imul
mov
out
enter
insl
call
insb
sti
bound
fistps
add
xor
adc
mull
lock
adc
enter
aam
imul
outsb
and
mov
shr
ret
cld
testl
sub
xor
inc
mov
xchg
aaa
xchg
mov
jl
xor
bound
and
inc
mov
pop
idivl
out
aas
xchg
xchg
lods
jo
mov
push
sbbb
aad
repnz
adc
pop
cmp
add
jge
pop
stos
mov
sbb
xor
add
inc
adc
enter
push
aam
pop
pop
and
mov
mov
cld
callw
and
pop
cwtl
or
ret
xor
mov
out
hlt
es
mov
setns
adc
xchg
inc
imul
sub
hlt
outsl
fsubr
pusha
push
sti
mov
or
sbb
ret
push
out
add
shr
sbb
fs
cli
cld
outsb
addr16
mov
bound
dec
fcmovb
lds
adc
mov
fs
mov
dec
dec
lcall
fsubrl
push
das
xchg
imul
int
push
hlt
xchg
xor
shlb
cmp
push
push
out
movsl
lds
pop
cmp
fsubrl
pop
imul
fnstcw
sbb
lods
xchg
adc
movsb
jne
loop
push
mov
mov
into
adc
sti
pop
add
mov
push
fwait
sbb
repz
dec
mov
lret
in
js
inc
stos
pop
and
dec
or
aaa
cmpl
inc
test
push
jmp
repnz
cs
js
js
lock
and
imull
mov
jno
ret
sub
ret
test
add
fisttps
lock
xchg
jo
add
int
enter
or
test
test
int
andb
lds
jb
jle
push
xchg
stos
xor
sar
dec
or
cmpsb
xchg
test
mov
inc
pop
mul
loope
push
jmp
xor
mov
fildl
cmp
jno
fsubrs
scas
or
push
mov
jb
cmp
imul
push
popf
rcrl
sbb
xor
cmp
cmp
lcall
cs
sbb
or
movsl
shll
sbb
addb
rcll
cmp
sbb
int
fcoml
stos
inc
or
sbb
leave
fstps
stos
andb
in
inc
xchg
fisubrl
sbb
aam
dec
and
lahf
stos
sub
call
push
cmp
cli
fs
add
and
mov
or
cmp
enter
cld
cmpsb
jns
mov
fsubp
jbe
and
mov
dec
pop
divl
mov
xchg
mov
pop
jb
std
push
inc
xor
sub
push
mov
or
stc
lods
daa
cmp
adc
addb
push
and
lea
rcr
xor
rcrl
jl
out
es
les
xor
or
jno
add
jmp
popf
mov
jo
std
lods
push
rcrl
mov
jp
xor
ret
int3
sarb
in
jecxz
fistpll
xchg
lods
dec
out
mov
outsb
mov
adc
xor
cmp
and
das
out
stos
inc
xor
dec
add
test
cltd
repnz
adc
push
insl
inc
xchg
out
sub
das
push
adc
in
mov
pushf
pop
and
pop
pop
enter
not
jnp
out
cmp
mov
pop
inc
cli
andl
inc
push
sub
xlat
es
pop
push
fisubl
je
in
lods
movsl
in
xlat
int
pop
mov
xrelease
ds
sbb
push
add
cmp
xchg
xchg
sbb
inc
sti
shll
jbe
mov
mov
fcmovne
inc
bswap
dec
rclb
mov
sub
fiadds
jmp
data16
pop
xor
jg
stc
test
adc
and
stc
jno
cmpsb
ds
jle
pop
andb
dec
adc
and
cltd
pusha
repz
push
add
clc
dec
xor
fs
cwtl
dec
sub
ja
xchg
test
add
pop
lods
mov
mov
out
cltd
lret
dec
fdiv
jne
inc
fistpl
fcomip
sbb
mov
sub
jno
fs
insl
xchg
mov
stos
inc
rcll
adc
cmc
enter
nop
pop
jno
push
dec
push
push
push
into
loop
sahf
adc
popa
inc
hlt
mov
aad
cmp
push
add
shrb
bswap
mov
mov
add
xor
xlat
fwait
fsubl
shl
mov
test
pop
mov
or
push
xchg
sub
out
in
iret
icebp
stc
hlt
dec
sub
push
stc
push
pop
xor
push
cmp
and
jno
insl
add
sbb
inc
adc
imul
adc
out
rolb
repnz
cwtl
xor
cwtl
lea
sbb
inc
xchg
mov
xchg
and
push
dec
test
es
cld
lods
test
xorl
sub
and
in
mov
add
adcl
insb
xlat
and
rorl
cld
push
sub
loope
mov
icebp
scas
pusha
and
cmp
ja
pop
jmp
fcoms
out
xor
es
xchg
movsl
add
pop
insb
inc
ja
fisubrs
push
xchg
inc
out
es
lret
rol
push
or
fnstcw
lock
mov
test
mov
add
xor
std
shl
mov
xor
aam
pop
icebp
in
jp
es
or
and
pop
out
and
test
adc
cmc
mov
movsl
in
rol
sbb
sub
sarl
inc
add
sub
inc
add
dec
setge
pop
xchg
aam
ret
sbb
shr
repnz
inc
dec
or
shlb
pop
lods
add
seta
mulb
xor
out
test
xor
adc
mov
push
sbbb
imul
in
adc
sbb
lds
mov
test
jbe
mov
inc
add
fsubrl
push
test
movsb
test
mov
mov
je
je
fildll
adc
xor
push
mov
sti
outsb
add
popf
inc
mov
sub
test
stos
in
sub
repz
jg
hlt
jbe
mov
jge
in
fldl
xor
dec
dec
ljmp
sahf
pop
sbb
call
adc
xchg
cmp
pop
sbb
dec
ljmp
jmp
nop
jno
pusha
sbb
je
popf
sub
es
xchg
inc
pushf
cmc
lcall
popa
popf
mov
in
out
imul
xchg
mov
leave
int
scas
adc
push
pusha
mov
jge
mov
or
fadds
lahf
pop
test
std
push
je
dec
mov
into
fbstp
arpl
clc
test
je
cwtl
mov
add
mov
jg
data16
ret
arpl
sahf
jmp
in
inc
clc
fnstcw
cmpb
fiaddl
scas
mov
fstps
pop
cmpsl
out
mov
outsb
daa
xlat
rcrb
xchg
call
jg
or
add
mov
sub
jmp
lds
lea
mov
cmp
in
cs
lahf
sbb
scas
dec
mov
scas
fstl
xor
push
jae
out
pop
cmp
cltd
test
or
jmp
dec
lret
pop
pop
idivb
jmp
pop
add
filds
cmp
icebp
xchg
sub
dec
loopne
xor
sbb
test
sbb
movsb
push
mov
clc
cmpb
iret
mov
dec
mov
xor
fxch
gs
pop
inc
xlat
fsubr
add
and
pop
test
int3
and
shrb
orb
sub
fsubrl
ds
cs
xor
mov
lods
fstps
mov
rcrl
ja
shlb
mov
in
pop
or
pop
shll
lock
sbb
arpl
negb
cli
mov
mov
mov
test
or
jmp
shll
lret
xlat
mov
addr16
mov
dec
cmp
jge
xchg
cmp
rolb
call
std
pusha
cmp
xchg
gs
mov
push
lods
jmp
add
jbe
cmpsb
xchg
xchg
cmpsb
mov
xor
mov
inc
inc
or
iret
push
es
repnz
nop
test
rcll
inc
ret
push
sbbl
jae
dec
mov
stos
sbb
lds
icebp
inc
or
add
stc
nop
inc
jge
jnp
and
add
popa
pop
ficoml
imull
sub
mov
out
arpl
or
mov
and
repnz
ds
lods
ljmp
mov
sub
dec
pop
xor
push
xor
imul
push
adc
leave
rcrb
out
insb
out
test
dec
cmc
or
aas
or
outsl
fidivs
fdivrs
stos
dec
aam
shll
popf
call
jae
sub
sbb
add
fucomip
es
jbe
ja
mov
lods
test
jo
jb
test
out
fstpl
repnz
mov
dec
pop
pop
cmp
aam
int
jae
dec
movsl
inc
push
ljmp
jb
dec
push
shr
xchg
xor
xor
das
mov
jno
popf
sub
jmp
cmpsb
data16
sahf
mov
adc
jne
add
push
mov
rcr
sti
mov
mov
xor
push
dec
stos
jp
xchg
lea
sti
enter
lods
inc
xchg
xchg
mov
aam
fidivs
adc
push
pop
out
sbb
xor
aam
xlat
mov
mov
mov
fidivs
or
movsb
adc
fadd
out
sarb
push
data16
and
test
pop
repnz
stos
adc
add
mov
adc
es
pop
mov
add
mov
or
mov
push
mov
xchg
mov
movsl
mov
pop
mov
xchg
ljmp
cmp
cmp
cld
xchg
test
pop
jae
push
jbe
shll
testl
sub
cmpsl
mov
xor
xchg
outsl
add
mov
insl
test
scas
mov
mov
or
pop
cmp
in
xchg
sbb
mov
and
sbb
mov
int3
fsubrl
pop
adc
push
push
pop
push
mov
xchg
aad
pop
ret
inc
jae
xor
inc
pop
test
call
xchg
cmp
into
in
jecxz
inc
aad
mov
pop
subb
fwait
ljmp
cltd
and
mov
mov
dec
jns
cmp
into
ljmp
or
xor
fidivrs
ret
je
mov
pop
add
popf
out
in
cmp
dec
dec
adc
cmp
popf
sbb
inc
cmc
sub
jae
mov
test
push
cs
mov
sub
movsb
dec
repz
xchg
adc
jb
jl
pcmpgtd
push
outsb
and
push
outsl
gs
aas
adc
sub
je
fistpll
lods
sub
mov
repz
cmp
xlat
sub
jp
cmpsl
jp
pushf
pop
mov
mov
inc
loop
cld
xchg
test
outsl
xor
push
ljmp
jno
and
sti
es
lods
push
icebp
sahf
loopne
dec
dec
push
sti
jbe
out
stc
push
and
push
mov
fs
insl
push
outsb
test
mov
fstl
lret
add
cld
scas
sbb
pop
mov
inc
pop
mov
add
sub
add
inc
lea
rcr
xor
lea
jno
pop
jmp
in
add
mov
xor
sahf
add
sub
or
push
stos
data16
cwtl
int
jl
jge,pt
outsl
cmp
mov
pop
out
cmp
jp
cwtl
inc
mov
cld
mov
xchg
mov
lock
inc
out
add
mov
fsubp
push
sub
iret
mov
jecxz
lret
divb
mov
sbb
scas
inc
mov
int3
fimuls
into
sbb
or
cmpsl
bound
dec
hlt
fnstenv
xchg
push
push
popa
jnp
or
insl
cmp
pminsw
fnsave
sub
lds
enter
clc
les
adc
dec
int
loopne
adc
lods
lret
std
adc
xlat
and
addr16
testl
pop
xor
add
xchg
mov
push
pushl
in
mov
sub
fidivrl
orl
lods
imul
push
jno
gs
or
add
test
movsb
cltd
jno
push
mov
push
outsl
push
mov
xchg
add
mov
nop
ljmp
pop
xor
push
stos
xor
in
int3
mov
mov
data16
lahf
pop
sbb
xor
cmp
jp
and
cld
mov
sbb
rcl
loope
bound
cmp
cmpsl
dec
mov
sub
dec
and
pop
sahf
hlt
mov
jns
roll
pop
jg
leave
popa
addr16
daa
lcall
inc
popa
pop
push
leave
pop
cmp
pop
out
orl
mov
filds
cmp
adc
in
xor
scas
ja
mov
fisttpll
mov
stos
aam
shrl
pop
cs
out
lret
cmp
sub
aas
jns
inc
inc
out
lcall
pop
mov
fnstenv
arpl
mov
outsl
daa
icebp
rorl
xchg
push
loope
or
es
mov
bswap
xor
jnp
shr
andb
push
and
mov
ss
sbb
or
sbb
push
outsb
and
xchg
or
outsl
sbb
xchg
ja
mov
push
mov
or
out
adc
fidivrl
dec
lret
push
or
inc
stos
mov
push
mov
lds
lret
fcomip
or
ljmp
data16
xchg
xchg
cmp
push
fwait
pop
cltd
sarl
mov
dec
adc
jae
ss
xchg
adc
cmp
xchg
pop
pop
adc
mov
sbb
lret
push
out
cld
mov
pusha
mulb
sbbl
push
or
pop
out
lret
sub
mov
in
push
in
test
pushf
mov
fists
mov
jb
adc
dec
lcall
and
xlat
fdivrl
push
fs
push
lods
fnstsw
sub
repz
daa
cwtl
stos
or
pop
repz
je
out
jns
jecxz
cld
lods
add
in
sub
imul
out
js
jle
dec
lods
adc
jp
repnz
in
mov
jbe
add
adc
bndstx
xor
push
in
cmp
cmp
adc
xchg
jbe
jg
or
mov
dec
sub
addb
jb
push
in
bound
int3
pop
aaa
dec
inc
push
pushf
std
rorl
fsts
mov
and
dec
cli
mov
test
enter
dec
sbb
enter
dec
mov
push
push
push
sub
sub
stos
pop
adc
repz
mov
icebp
jge
lret
sbb
shrb
jno
xchg
lods
in
dec
mov
fst
cmp
mov
add
pop
mov
into
in
and
mov
lret
sahf
push
dec
jge
pop
scas
imul
fwait
test
cld
in
std
push
js
enter
xlat
je
xlat
xor
pushf
pop
mov
repnz
inc
mov
in
loopne
jl
adc
xchg
lods
or
adc
mov
mov
or
loop
xor
aaa
push
xor
nop
outsb
test
outsb
jl
shr
div
cmp
or
lcall
lock
pop
and
test
fildll
adcb
push
pop
scas
inc
xchg
jne
dec
lods
loop
or
int
and
sbb
lods
add
mov
mov
daa
jnp
mov
loope
inc
stc
aas
nop
daa
jno
sub
lock
ret
addr16
push
jle
popa
jle
rcl
xchg
gs
inc
jmp
and
sub
xor
mov
mov
mov
add
test
das
lcall
dec
mov
pop
jl
push
mov
sub
mov
sbb
sbb
in
sub
test
mov
rcr
sarl
lret
or
mov
sahf
clc
xor
mov
jl
xor
lods
sbb
xor
and
push
mov
mov
addl
scas
sub
stos
mov
aaa
sub
inc
mov
adc
xchg
ja
xchg
xor
in
bound
fcoml
mov
ret
shrb
dec
pop
mov
mov
je
popl
scas
mov
jge
jno
ja
jmp
dec
sbbl
mov
aaa
into
push
xorl
cmp
or
insb
lret
data16
fnsave
jo
mov
sub
pop
inc
fwait
add
cld
fs
mov
mov
insb
imul
pop
scas
jmp
mov
cwtl
mov
into
xor
sbb
cmp
outsl
inc
pop
mov
imul
dec
and
sbb
inc
shll
xchg
mov
scas
and
xor
arpl
rorl
sub
and
add
jbe
cmp
fwait
mov
push
jmp
add
mov
dec
loopne
dec
das
add
dec
fidivl
testl
push
cltd
das
mov
fidivs
out
mov
lahf
gs
mov
xchg
jmp
into
fidivs
xor
outsl
push
push
popf
loop
pop
cltd
incl
and
push
or
cs
dec
in
push
movsb
jg
mov
icebp
xchg
ret
outsl
mov
iret
jecxz
enter
push
mov
leave
ja
movsl
hlt
push
rcrl
addl
or
out
or
sub
mov
pop
push
aas
rorl
cmp
stos
sti
insl
loopne
jbe
pusha
test
inc
ficompl
inc
testb
lods
cmp
mov
dec
test
lret
std
push
mov
mov
cli
pushf
fwait
mov
movsl
add
scas
mov
sub
test
inc
jnp
in
neg
call
xor
shll
lret
pop
fistl
int3
cmp
bound
pop
push
lcall
in
jns
clc
mov
out
test
icebp
ficoms
jne
lock
pop
cmp
push
ljmp
jo
lret
test
mov
sub
repz
and
sti
dec
scas
xchg
cld
rcrb
ficomps
pusha
push
jb
andb
add
comiss
jmp
sbbl
cwtl
daa
push
adc
inc
inc
out
cs
stos
gs
jmp
and
shrb
ret
mov
mov
in
jle
je
ret
cmp
push
xor
xor
jmp
pop
call
adc
mov
pop
push
es
shlb
xor
xchg
cs
or
movsl
sti
lds
mov
lret
data16
cmp
push
add
movaps
push
or
ret
ja
push
sub
xchg
xchg
pop
insb
les
push
add
mov
sbb
out
jp
insb
jo
aas
dec
sbbl
imull
mov
std
rorl
divl
adc
push
hlt
sbbb
fistpll
popa
jecxz
jmp
mov
fbstp
xchg
adcl
jle
adc
or
mov
fldt
aad
pop
pop
shlb
sti
pop
mov
push
cmpsb
rcrl
add
scas
and
adc
and
rcrl
jp
ret
aas
pop
mov
popa
loope
cmpsb
notb
outsb
outsl
dec
out
pusha
imul
mov
sbb
outsb
cmp
mov
and
cs
lret
sbb
mov
insl
cmp
lods
fs
mov
outsl
and
mov
fmull
xchg
mov
mov
sbbl
orl
aaa
cmp
add
sub
lds
popf
lods
mov
movsl
push
sub
fldt
loope
lods
push
adc
xchg
push
xor
mov
xorb
into
std
sahf
inc
dec
push
lods
mov
pushf
addl
xchg
leave
adc
mov
ljmp
dec
pop
cmpsb
lret
js
mov
sbb
or
fs
sbb
rcl
ffree
inc
addr16
sbb
aam
jmp
push
cmp
xchg
aas
fsubp
cwtl
mov
clc
btsl
cwtl
xor
jmp
or
or
push
adc
adc
push
pop
or
dec
lods
jge
fsubrs
into
xchg
popf
jbe
and
xchg
arpl
add
pop
pop
icebp
and
mov
adc
pop
push
sti
pop
and
jbe
iret
mov
in
or
adc
in
cli
in
outsb
xor
cs
aad
jns
nop
pushf
enter
adc
ss
mov
repnz
idivb
xchg
pop
pop
les
notb
dec
inc
mov
cpuid
add
dec
adc
aad
out
xchg
mov
pop
xor
aam
jl
add
es
jmp
test
adc
adc
int
mov
out
add
dec
in
test
movsb
add
pop
xchg
and
mov
cmp
mov
hlt
or
bound
pop
repnz
inc
and
xchg
xchg
outsb
push
mov
fwait
push
push
push
xchg
and
xor
inc
dec
cmp
aas
push
mov
pop
loope
mov
call
jbe
or
sahf
imul
inc
mov
mov
sbb
aad
mov
add
push
jmp
pusha
jb
mov
imul
gs
adc
enter
inc
jns
js
arpl
sbb
dec
sar
sti
loop
call
or
push
jae
shl
xchg
pushf
cltd
pop
daa
cmp
push
jl
mov
idiv
rclb
inc
jno
rep
lret
mov
stc
mov
dec
or
ja
sahf
sub
into
loop
mov
lods
add
dec
sbb
jae
idivb
mov
repz
or
outsl
pop
fisttps
scas
mov
ret
lock
mov
lods
sbb
ja
idivl
mov
test
in
jo
xlat
jo
lods
cwtl
mov
test
jae
jo
leave
jo
and
mov
lods
enter
cwtl
jmp
mov
lods
jbe
je
cmc
xchg
je
leave
adc
pop
and
movsl
or
sbb
push
jle
loop
push
add
test
call
sub
test
in
mov
mov
inc
cld
or
or
fcmovnbe
cmc
sub
aad
sub
and
xchg
ret
arpl
mov
lock
jne
add
pop
push
lods
sub
xchg
jmp
dec
xor
or
ja
sub
pop
into
ficoml
mov
jl
push
faddl
mov
scas
mov
insl
or
push
hlt
xchg
or
push
sbb
mov
movsb
dec
add
insl
jnp
dec
cmp
out
aaa
add
lock
sub
ret
pop
mov
pop
ret
in
test
sbb
dec
cmp
inc
std
push
andb
sbb
sti
ds
imul
push
stos
mov
pop
sub
mov
jge
add
adc
jo
fistl
push
cmpb
xchg
shll
cmp
out
sbb
xor
lods
add
pop
int
or
je
movsb
dec
mov
jp
xor
mov
pop
addl
dec
loope
aas
and
mov
sbb
or
cld
fs
and
mov
fisttps
cmpsb
lfs
mov
mulb
stc
iret
roll
adc
js
fldt
scas
es
mov
fmul
insb
jnp
push
jb
add
inc
fisubl
es
aam
sbb
shll
jle
mov
loope
sub
pop
in
pop
push
jae
jo
xchg
xchg
sub
jecxz
aad
push
scas
dec
out
jns
ja
dec
cmc
mov
fidivl
data16
jae
imul
andl
adc
mov
mov
pop
cmpsb
clc
lods
std
shl
dec
clc
or
std
hlt
fimuls
mov
test
mov
cmp
and
xor
out
inc
je
mov
lods
fwait
insb
aam
adc
lret
lret
inc
lret
push
dec
pop
dec
mov
addr16
mov
inc
loop
ficoms
andb
or
mov
mov
addr16
pop
pop
xor
call
inc
outsl
and
dec
inc
andb
daa
arpl
pop
enter
stos
fiaddl
addr16
xchg
jne
mov
mov
jg
sub
add
dec
cmc
mov
xlat
imul
loope
mov
inc
xlat
cmpsl
ds
out
pop
or
sarl
dec
out
orb
imul
dec
mov
outsb
in
ret
jle
lea
mov
adc
das
cwtl
ret
dec
std
pop
mov
or
jl
sbb
lret
rclb
jge
jp
out
dec
sti
pop
cmc
sub
popf
lods
bnd
or
sbb
ret
mov
sbb
ljmp
adc
inc
cmpsl
sbb
pusha
bound
imul
adc
add
lds
in
xor
sbb
ss
les
idivb
add
inc
sbb
push
adc
shrb
movl
inc
fcomps
js
sbb
sar
xchg
dec
ret
mov
ret
leave
inc
fsqrt
out
xor
add
das
xchg
cmc
or
mov
dec
das
and
push
add
dec
test
mov
cmpsb
inc
cmpsb
pop
inc
ds
addr16
pop
leave
test
mull
sbb
adc
out
and
enter
mov
pop
dec
scas
sub
lock
mov
pop
or
push
pop
push
mov
pushf
enter
je
sbb
shlb
pop
jp
lock
imull
mov
ret
add
in
mov
js
popa
test
fisubs
fistpl
fists
stc
int3
in
lahf
push
fisubrl
decl
divl
adc
inc
mov
sub
hlt
ja
and
movb
cmp
int
sbb
xchg
ljmp
xor
add
rcrl
stc
mov
and
ja
cli
jno
jb
xor
nop
adcl
push
out
fldt
xor
leave
xchg
mov
push
inc
test
loope
test
outsl
push
int
jecxz
xchg
lcall
fiadds
fildl
jmp
jnp
xor
cmp
xchg
mov
scas
pop
cmp
iret
dec
pop
loope
popf
lods
pop
mov
mov
icebp
push
inc
mov
fidivrs
daa
test
insb
and
cld
dec
insl
inc
insl
cli
bound
repnz
sub
fwait
test
sub
cld
scas
sub
insl
add
xor
push
inc
sub
cmp
clc
adc
js
lret
cmp
jmp
push
sbb
in
mov
mov
dec
fsubrs
push
movsl
fcmovnb
jecxz
sub
pusha
push
adc
or
ret
xor
into
mov
repnz
pusha
push
push
pop
xor
mov
jns
add
mov
push
pusha
shl
std
mov
pusha
fisttpl
rol
pop
add
or
push
adc
xor
aaa
roll
xlat
or
lds
jnp
in
push
inc
pusha
out
dec
xchg
inc
push
mov
sbbl
add
sarl
xchg
or
xchg
fs
cmovp
jo
out
or
and
loop
or
rcll
fdiv
dec
mov
pop
into
and
cmp
test
mov
scas
mov
je
jle
xor
mov
dec
es
out
ret
xchg
std
adc
xchg
xchg
iret
inc
cli
les
insl
loopne
fnstsw
xchg
hlt
test
xchg
nop
js
lods
jbe
inc
shrl
mov
jbe
add
scas
xor
sti
push
pop
cmp
push
insb
push
shll
iret
stos
popa
insl
loopne
inc
in
subl
arpl
and
aas
dec
or
xchg
js
jbe
fbld
lock
xor
xchg
lret
loopne
sub
imul
int3
inc
stc
ja
or
in
out
push
pop
jbe
dec
mov
popf
cmovo
std
jp
cs
push
cltd
fwait
mov
dec
and
outsl
fwait
movsb
rcll
sbb
fstl
js
mov
lahf
cmp
or
sti
jb
mov
jmp
and
jbe
repnz
mov
loope
pushf
xor
imul
adc
cmove
ja
mov
sar
lods
add
mov
fcompl
xchg
les
mov
ret
popf
cmp
push
daa
xchg
add
dec
outsb
mov
add
out
lods
stc
xchg
pop
cmc
mov
cwtl
lods
or
xor
je
push
jmp
xchg
mov
fcompl
jle
es
xchg
testb
dec
mov
test
mov
gs
adcb
pop
bound
dec
lahf
mov
xchg
adc
push
xor
dec
addr16
leave
push
rcl
cltd
add
mov
sub
dec
in
das
mov
mov
xchg
inc
push
js
push
imulb
js
sbb
subl
in
rol
or
fidivrl
xchg
sub
js
cmc
icebp
mov
jb
pop
sub
or
pop
imul
out
jl
or
sub
or
repnz
mov
mov
jb
cmc
pop
and
dec
outsb
shrl
xchg
in
xor
push
xchg
jl
dec
pop
in
sbb
pop
push
cmp
frstor
mov
inc
push
in
testb
enter
test
mov
jno
xchg
stos
xchg
call
mov
lods
out
lock
ss
xor
and
je
ljmp
and
test
sbb
imul
sbb
popf
xchg
adc
mov
ficompl
or
data16
mov
jnp
inc
cwtl
js
mov
sbb
insl
test
and
addr16
cmp
xchg
icebp
pop
hlt
and
clc
sub
pop
sbb
dec
outsl
jmp
mov
shrl
jo
mov
shll
fucomip
mov
or
pop
in
mov
int
sbb
stc
add
jl
decb
in
push
enter
push
fidivs
imul
cld
fsts
mov
test
xchg
fisttpl
ljmp
sbb
stos
ds
xlat
mov
jecxz
cmp
or
xchg
in
mov
jno
xor
cld
std
fsts
stos
or
pop
scas
pop
lret
shl
mov
push
xlat
lahf
jp
dec
ss
cmp
pop
test
loope
jno
push
adc
rcrl
jg
jecxz
xchg
xchg
pop
xchg
fsubrs
mov
roll
lock
shlb
ret
push
scas
cmpsl
sub
ja
mov
iret
sbb
xor
push
movsl
fidivrl
pushf
out
ljmp
push
xor
jb
and
adc
jae
in
inc
mov
fstpl
push
push
scas
cld
xchg
and
fs
sub
cmp
sarb
mov
cld
dec
adc
jae
ja
std
and
pop
pop
int3
call
dec
adc
loopne
cld
or
lds
mov
inc
andb
call
mov
push
adcl
pop
and
sub
mov
insl
imul
mov
mov
pop
arpl
jle
insb
mov
sbb
xchg
mov
xor
push
call
xlat
jmp
push
and
lcall
pop
adc
sti
dec
loope
cmp
or
cmc
inc
shrb
repnz
in
movsl
pop
mov
mov
lidtl
jle
and
scas
sub
xchg
lcall
fdivrp
es
test
mov
mov
pop
icebp
mov
jae
xchg
inc
mov
pop
in
mov
jle
in
mov
xchg
sub
xor
jmp
roll
fcomi
je
ret
clc
mov
xchg
pop
add
cmp
fsubrs
adc
ret
outsl
xchg
and
test
fidivl
xor
xor
mov
fimull
adc
pop
popl
aad
jb
mov
lea
cmp
loopne
notl
cmpsb
mov
fistps
lcall
xchg
mov
loope
adc
mov
mov
repz
xorb
cltd
je
out
lods
fwait
sbb
inc
sbb
inc
sbb
dec
mov
mov
jne
jl
inc
aas
push
xchg
out
lods
pop
mov
xor
mov
sbb
inc
push
in
test
mov
lods
or
fiadds
inc
mov
je
adc
sti
out
subb
inc
lahf
sbb
ds
inc
ret
hlt
bound
rcll
psadbw
sub
xor
mov
jno
add
xchg
cmpsb
lock
jnp
add
pop
lea
insl
sarb
inc
fistps
js
in
jmp
inc
je
rcl
adc
aad
fidivrl
cmp
out
test
dec
xchg
add
push
cltd
gs
in
in
std
mov
mov
inc
cwtl
rcrb
pop
push
or
mov
mov
push
mov
xlat
and
mov
cmp
iret
mov
pop
inc
jmp
jnp
inc
insl
add
inc
xor
adc
jge
push
dec
js
adcb
in
std
addr16
mov
es
xchg
mov
movsl
push
mov
mov
loope
outsb
rorl
cmp
or
and
jo
arpl
bound
dec
cmpsl
sub
xor
and
and
loop
cwtl
or
sub
dec
sar
xchg
in
mov
pop
cmp
mov
test
inc
aas
jne
loop
cltd
in
inc
call
stos
cmp
int3
insl
add
stc
aas
loop
pushf
mov
dec
jne
inc
jmp
dec
fsubl
shlb
aam
and
int3
arpl
mov
push
lds
cltd
and
out
sub
es
add
inc
std
and
cmp
adc
and
ret
sub
push
pop
lret
test
cmpsb
dec
jbe
out
jns
xchg
xchg
sub
enter
sub
xlat
stc
ret
mov
loopne
negb
cmc
and
push
clc
test
mov
sti
pop
xchg
pop
loope
cs
loope
orb
push
add
push
xchg
repz
sub
das
mov
adc
lods
movsl
xor
mov
lods
dec
cmp
imul
xor
repnz
pushl
rcrl
mov
pop
nop
add
cmp
test
sub
arpl
mov
loope
je
pop
out
adc
sub
mov
sbb
insl
int
lahf
cltd
mov
inc
jmp
add
xchg
dec
mov
lods
sbb
push
adcb
inc
mov
ret
xor
sbb
andb
or
pop
stos
inc
mov
fcmovne
xor
or
addr16
call
scas
in
lds
jp
loop
pop
cs
inc
jge
imul
or
cmpl
notb
jmp
pop
lods
push
test
ret
inc
cmp
jg
popa
mov
iret
dec
mov
outsl
xor
add
xor
adc
stc
int3
jle
ret
pop
or
inc
cli
and
fwait
cld
push
jne
sbb
lret
sti
push
mov
add
iret
jne
xlat
push
fmul
out
mov
lods
sbb
push
mov
popa
repnz
fsubrs
mov
pop
cmp
inc
adcb
dec
mov
aad
das
add
dec
or
dec
loop
jecxz
fcoms
enter
or
ljmp
jnp
clc
sub
pop
xor
repnz
mov
insl
out
push
lahf
lahf
nop
lret
rorl
dec
mov
or
xor
push
shl
mov
outsb
xor
loop
mov
or
js
mov
jl
shrb
insb
mov
mov
lret
imul
lahf
mov
rcl
sbb
sub
cltd
lock
outsl
scas
mov
cs
mov
lcall
jecxz
push
insb
movsl
cmp
xor
cmovg
and
mov
jg
fidivs
push
mov
cmpsb
xchg
jae
lock
mov
int
xchg
mov
loopne
dec
dec
or
ds
cmpl
push
and
adc
add
insl
push
mov
pop
mov
push
inc
lret
cmp
or
pop
xor
ljmp
push
ss
daa
cmp
cld
repz
fistps
pop
gs
sarl
or
xchg
pop
mulb
sahf
adc
filds
ss
rcrl
pcmpgtd
sti
mov
jl
rol
fcmovnb
jge
imul
inc
lock
xor
push
fs
push
or
fnstsw
movsl
mov
sbb
mov
jbe
andb
and
loop
imul
and
jge
lock
dec
add
pusha
hlt
adc
cmpsb
mov
fs
adc
add
psubusw
jno
sahf
loop
imulb
nop
sbb
push
popa
add
cmp
mov
ds
stos
xchg
fwait
cs
cmp
mov
ret
jns
push
aas
sbb
jne
ror
dec
js
sub
push
xchg
push
push
jno
adc
out
vandpd
jbe
in
iret
mov
and
call
inc
push
repnz
aad
iret
or
arpl
fwait
in
pop
sbb
dec
out
loop,pt
push
cmp
inc
pop
push
or
popf
addb
jne
lret
dec
cmc
jno
int
imul
outsb
hlt
in
adc
adc
dec
bound
repnz
and
sub
loopne
loop
inc
add
add
incl
and
gs
cmpsb
jge
sub
rcll
or
xlat
dec
mov
insb
aam
sbb
stos
mov
lret
in
and
mov
push
sub
sub
cmp
gs
fidivl
sbbl
outsl
mov
loope
mov
mov
in
ret
adc
inc
dec
mov
push
aaa
sub
push
icebp
out
arpl
inc
pop
imul
push
cwtl
push
in
mov
test
fadds
sbb
mov
mov
in
std
cmpsb
aam
das
rcrl
push
dec
jb,pt
ds
pop
sub
loope
inc
inc
mov
mov
fsubs
andb
cmpsb
repz
fwait
pop
mov
inc
xlat
cli
adc
push
mov
and
or
aaa
fstpl
sahf
rorl
push
fldenv
sbbb
or
js
into
lret
add
push
rcrl
fst
xor
in
fs
outsb
jo
in
cmp
insl
je
daa
jno
adc
je
adc
leave
andl
inc
xchg
mov
xchg
add
ret
lret
stc
rorb
push
xor
aaa
lcall
xchg
enter
sub
bound
inc
lods
add
ficompl
jbe
loop
add
jne
cmp
jg
sub
out
add
sbb
in
sti
pop
ss
push
lods
pop
inc
dec
xchg
das
icebp
lods
bound
push
push
xlat
push
inc
loop
mov
jecxz
xchg
fnstsw
jbe
pop
cs
dec
inc
or
push
push
pop
mov
fadds
int
leave
loope
addr16
sub
js
daa
leave
outsb
call
push
adc
adc
mov
fcoml
sti
dec
add
sub
dec
pop
cmp
repz
push
mov
mov
test
call
sub
dec
xlat
pop
testl
push
jl
jb
cmp
xlat
sbb
aam
xchg
adc
lds
pushf
adc
push
je
in
xchg
and
lret
mov
jns
aaa
das
push
test
and
sbb
iret
out
sbb
aad
in
fimull
add
daa
lcall
or
dec
leave
sar
or
dec
hlt
clc
daa
scas
sub
xor
xchg
mov
mov
lods
inc
hlt
push
pop
sbb
adc
out
ss
data16
or
shll
mov
bsf
sub
fldl
mov
das
or
shlb
jo
xchg
jmp
xor
jl
int3
fwait
loopne
xchg
ret
int3
inc
jecxz
xchg
out
cmp
add
ds
js
dec
ss
hlt
xlat
call
mov
push
jne
lods
loopne
push
adc
pop
dec
int3
scas
jmp
shll
or
mov
loopne
cmp
das
or
pop
push
or
jae
adc
dec
or
mov
xor
sbb
adc
lds
inc
in
test
test
enter
sub
xchg
sub
pop
pop
push
test
lea
mov
cmp
test
and
pop
xor
dec
cltd
dec
fisubs
xchg
out
push
push
ljmp
stc
aaa
mov
xor
stc
cmp
push
loope
cmp
pop
push
inc
xlat
adc
jg
inc
jmp
dec
movsl
cmp
ret
es
xchg
inc
fcoml
outsl
add
xor
repz
std
in
pushl
add
cmpsb
cmp
cmp
lret
cld
pextrw
fs
mov
inc
sub
outsl
pop
fs
xchg
stc
inc
fucomi
loop
jno
jns
jmp
out
cmp
mov
pop
aaa
adc
or
push
jns
out
movsb
sub
xchg
sti
mov
mov
pop
cmp
jecxz
push
aam
shlb
push
mov
sbb
in
xor
inc
inc
bound
add
into
outsl
andb
adc
inc
cwtl
jmp
push
adcl
jbe
je
stos
lock
mov
loopne
js
cltd
add
out
xor
push
mov
lea
into
or
and
jne
mov
test
sub
mov
mov
or
push
or
or
jae
push
xor
fbld
test
sub
jle
aas
pusha
mov
xchg
dec
int
cmp
je
or
test
push
pop
add
test
mov
repz
add
jle
cmpsb
lods
mov
cs
cmp
and
pop
ljmp
in
cwtl
dec
sti
movsl
add
jecxz
mov
mov
fabs
xchg
push
mov
jp
mov
pop
test
fstpl
loop
notb
pop
mov
pop
jp
mov
cmp
int
push
call
imul
mov
fistpl
lods
push
sbb
ds
jb
cmpsl
mov
hlt
std
mull
xchg
jmp
iret
mov
pop
cmp
jl
sub
pop
add
in
test
cmp
arpl
xchg
cwtl
frstor
orl
pusha
cmp
scas
cmpsl
jecxz
mov
mov
jecxz
xor
mov
and
add
fildl
pop
xchg
in
or
cltd
mov
push
sub
push
nop
mov
sahf
or
cltd
mov
sub
fnstcw
dec
sub
push
jecxz
add
scas
push
enter
lcall
daa
add
pop
lods
mov
sbb
mov
xor
add
shrl
mov
sbb
xlat
add
xchg
sub
sti
rclb
test
adc
fstpl
ja
dec
test
cmp
jae
in
sarb
lea
push
in
sahf
jb
mov
ljmp
imul
xor
cli
aad
lods
xchg
xchg
dec
pop
in
stos
rcl
jo
add
pop
mov
sub
xchg
xchg
das
xor
clc
add
sti
fwait
ret
cmp
jbe
movsl
push
dec
addb
pusha
xchg
push
push
ja
lock
ss
mov
leave
push
or
pushf
jg
mov
aam
add
test
test
xlat
roll
and
adc
aam
nop
xor
jge
xlat
and
lock
or
test
sub
mov
scas
dec
adc
cltd
jne
cmp
xor
divb
add
pop
scas
jl
xor
mov
or
call
in
xor
aad
mov
xchg
mov
push
ret
out
out
mov
or
xchg
push
mov
testl
inc
rcrb
lcall
aaa
mov
add
xchg
in
lcall
cmpsl
inc
stos
dec
insl
sub
jno
jecxz
mov
out
sub
movsb
xchg
sub
cmp
mov
loope
jmp
mov
roll
shrl
jns
popa
repnz
mov
outsl
sarl
add
scas
repz
add
and
inc
adc
js
sahf
lods
mov
jno
loope
in
xchg
add
lods
test
and
popa
lea
imul
mov
jmp
repz
jmp
xor
dec
fs
repz
push
or
pushf
imul
mov
popa
nop
cmc
cmp
push
mov
dec
xor
xchg
xchg
fimull
gs
ss
addr16
andb
test
cmc
loopne
into
push
js
movsl
jbe
jns
inc
pusha
sbb
fwait
mov
stc
pop
and
fld
std
sbb
cmp
fwait
sub
test
push
sbb
adc
dec
push
mov
cmc
jle
into
loop
mov
fsubp
push
mov
shld
jecxz
push
cwtl
int3
mov
test
push
test
icebp
push
orb
inc
aaa
and
fistl
push
cltd
mov
test
xor
ret
mov
lret
xchg
dec
jp
or
lahf
adc
imul
xchg
pop
lods
call
fidivrl
add
mov
insb
mov
mov
pop
in
sub
add
pushf
daa
pop
mov
ss
xor
in
jb
jmp
adc
xlat
mov
inc
into
jb
rdpmc
loop
jo
push
add
mov
dec
and
push
mov
sub
lock
daa
sbb
lea
adc
jne
sahf
adcl
mov
mov
mov
js
xchg
cs
push
outsl
cmp
dec
mov
sbb
outsb
fxtract
xchg
add
daa
cmp
mov
mov
movsb
jg
xchg
fdivrl
inc
xchg
and
gs
fstp
scas
mov
jbe
adc
mov
sub
jecxz
jecxz
daa
stos
rolb
je
lret
into
loop
lds
decl
mov
jecxz
jae
clc
sub
mov
lahf
and
mov
movsl
subb
ret
dec
loope
jbe
clc
or
mov
ret
inc
sarl
loopne
sbb
hlt
rcl
imulb
imul
or
sbb
int3
pop
and
nop
adcl
push
or
call
lds
es
outsb
daa
gs
std
inc
mov
pop
jno
movsb
inc
pop
push
mov
push
jnp
and
mov
fisubl
rcl
scas
xchg
pop
inc
mov
loopne
xchg
inc
add
loopne
mov
es
in
jb
lahf
inc
testb
jge
je
push
daa
cmp
add
inc
cmpsl
jb
add
inc
xlat
int
fisubrl
ficomps
insb
scas
out
imul
mov
gs
jb
repz
bound
rclb
mov
adc
and
and
jnp
dec
hlt
insb
roll
jbe
mulb
sti
dec
jo
out
xchg
xchg
xchg
mov
mov
jnp
and
sti
loopne
sub
jo
pop
rclb
fnstenv
stos
cmp
clc
sbb
jecxz
lret
jae
sbb
mov
test
sbb
mov
sarb
pop
xor
dec
scas
jns
dec
lret
into
xchg
xor
shlb
insl
fsubr
mov
pop
adc
loop
mov
fdivrs
add
stos
in
jno
mov
adc
lods
and
sub
popa
pop
sbb
push
jle
adc
dec
or
test
dec
jae
jnp
loope
pop
cmpsb
xlat
fisttpll
push
cltd
add
popa
inc
sub
testl
loopne
pop
ja
lea
fmuls
scas
rcl
push
mov
pop
fdivrl
in
jne
xor
std
test
and
jg
mov
sbb
cli
inc
jl
adc
popw
pop
rolb
xor
or
lds
in
jbe
pop
test
adc
mov
adc
jbe
xor
sbb
lods
pop
notb
stc
sub
xor
adc
shl
push
push
fisubl
mov
sub
call
xchg
test
test
insl
add
rcr
stos
and
pop
das
loope
clc
push
mov
cmp
addr16
or
cmpsb
xchg
pop
imul
mov
push
inc
pop
fidivrl
cli
pop
idivb
sub
into
xchg
in
ret
sbb
push
ljmp
jno
loope
mov
xchg
adcb
lods
iret
mov
ret
adc
add
icebp
xchg
dec
xlat
movsb
mov
jle
xchg
push
jns
sbb
lret
cmpsb
cmp
imul
push
inc
add
inc
inc
jns
sbb
lcall
lea
icebp
or
in
pop
lahf
mov
test
fnstcw
mov
push
xchg
ficoms
fxch
cmp
imul
in
inc
or
pop
pop
fmulp
pop
adc
mov
cwtl
out
dec
push
cmp
xchg
clc
arpl
sub
pop
fiadds
mov
xor
push
out
lds
ret
mov
rclb
pop
mov
lret
gs
fs
xchg
clc
test
ljmp
inc
std
push
aam
movsl
mov
daa
stc
clc
or
fldt
mov
dec
mov
test
enter
icebp
aam
adc
inc
sbb
out
sbb
jae
pop
frstor
pop
jne
cmc
sub
enter
sbb
push
xchg
sbb
inc
mov
mul
cmp
int
popa
inc
jg
dec
imul
inc
inc
pop
ret
inc
push
out
orl
movsb
jne
sbbl
sub
stc
adc
frstpm(287
jecxz
pop
jno
mov
test
xor
cs
fidivs
jbe
out
andb
or
rcll
mov
mov
xchg
shll
lds
pop
insl
jl
mov
dec
out
lret
jle
mov
les
cmp
adc
pop
aas
test
scas
test
ja
pop
int3
in
repnz
loop
adcb
or
roll
add
xchg
or
movsl
add
and
xchg
mov
add
mov
cs
mov
pop
push
ja
js
and
pop
xlat
push
xchg
cmc
lcall
mov
std
stos
dec
dec
sub
shrb
hlt
xchg
jo
cld
notl
negl
mov
shrl
mov
sub
jno
lret
scas
imul
leave
rcll
dec
sbb
mov
lcall
push
xor
in
mov
sbb
pop
or
adc
add
jne
xchg
ds
das
cmc
ret
pop
ss
out
inc
xor
pusha
dec
pusha
in
pop
jbe
jo
cld
lods
pusha
jge
sbb
jo
add
push
or
dec
cmpsl
adc
sti
xchg
dec
adc
and
imull
mov
iret
push
leave
int3
add
adc
dec
loop
daa
push
xor
movsb
cmpsb
les
mov
std
adc
push
popa
outsb
xor
add
or
imul
lock
stc
pop
xor
sub
jge
push
addl
stos
dec
dec
pop
and
cmpsb
inc
cmp
jle
mov
sub
mov
in
in
aam
adc
sub
sbb
pop
insl
xor
outsb
xor
xor
popf
arpl
xor
add
scas
sbb
and
dec
add
jo
fbld
scas
pop
and
fnstenv
or
pusha
pop
mov
fs
aad
adc
cmp
sub
mov
sub
mov
idivl
add
outsb
cmp
mov
ja
mov
sbbl
sbb
testb
xchg
gs
sarl
mov
push
lret
xchg
push
lahf
idivb
and
pop
andb
pop
mov
xchg
sarb
ds
mov
out
mov
inc
push
jbe
dec
ljmp
and
jmp
xor
push
push
icebp
sti
push
js
push
call
inc
out
aas
nop
pop
imul
sbb
or
mov
sarl
inc
cmpsb
shl
shll
jp
loop
pop
out
push
les
dec
repz
adc
fcmovne
test
ret
cmpsb
jp
xchg
mov
pushf
popa
out
jecxz
dec
adc
inc
fldlg2
dec
cmpsb
push
mov
jl
hlt
mov
popf
push
mov
fbstp
push
fisubl
lret
in
mov
and
fmull
sub
mov
add
lods
lahf
pop
fistps
xor
mov
fnstsw
icebp
xor
testb
fmull
cld
xor
lods
outsb
in
jge
xchg
push
or
push
jnp
ret
add
imul
pop
mov
cmp
xchg
in
lret
jp
and
jmp
std
pushf
cli
mov
mov
movsb
fisttpll
and
inc
std
call
mov
jns
or
imul
or
or
pop
pushf
mov
shl
notl
notl
inc
lds
mov
or
add
incl
shlb
adc
movsl
gs
push
imul
orl
fdiv
dec
mov
lea
iret
stos
and
mov
sub
mov
push
fiaddl
sar
inc
jnp
pushf
and
lret
fnstsw
xchg
xchg
lods
pop
xchg
fistpll
imul
subl
push
out
leave
in
sub
dec
int
js
enter
sahf
xor
or
jg
fiadds
insl
fnstsw
aaa
daa
lods
lds
daa
cmc
imul
outsl
jge
pusha
mov
test
dec
mov
pop
insb
scas
lcall
jne
dec
xchg
frstor
movsb
mull
insl
push
loopne
enter
lret
jae
insb
sub
dec
popf
jno
jmp
xor
je
mov
dec
xchg
push
repz
push
data16
fidivl
push
aad
inc
push
lahf
xor
fcoms
mov
fildll
and
push
xchg
ret
ret
lret
cmp
mov
xor
xor
sub
push
repnz
fbld
jmp
sbb
lock
pop
movsl
cmp
test
jge
dec
sub
sub
or
dec
xchg
add
cmp
or
lcall
sub
sub
sub
add
sub
xchg
cmpsb
ret
sub
mov
xchg
cs
scas
fildl
movsb
ret
mov
pusha
rcll
pop
pop
imul
xchg
mov
push
aam
mov
pop
jne
fsts
mov
fidivs
inc
cld
xchg
jge
and
iret
pushf
cmp
lods
cmp
and
pop
cmp
aam
cmp
pop
pop
stos
pop
rcrl
push
sbb
out
addr16
mov
hlt
mov
stos
add
shr
cltd
fisttpl
mov
cs
pop
ds
cmp
cmpsl
lcall
jl
dec
cmp
cmp
xchg
push
arpl
into
ja
repnz
sub
adc
mov
jnp
inc
push
cltd
mov
test
sub
sarl
scas
icebp
xor
dec
movsl
in
repnz
mov
pusha
test
in
xchg
xor
cltd
test
xor
jmp
lcall
add
movsl
xor
jle
cmp
mov
sti
or
iret
mov
mov
lds
popf
int3
cmpsb
xchg
mov
movsb
mov
cmpsl
aas
fsubrs
loop
ljmp
imul
loope
movsl
sbb
xlat
push
push
pop
xor
pop
push
xor
or
daa
cmp
xchg
add
in
or
lcall
push
mov
xchg
mov
or
dec
test
mov
jecxz
adc
pop
cmp
das
mov
in
int
sar
notb
les
movsl
pusha
in
xor
mov
popf
xchg
mov
dec
jmp
cli
inc
mov
jecxz
pusha
push
inc
shr
dec
dec
cmp
das
inc
push
mov
test
jecxz
std
push
jmp
mov
out
std
jp
sbb
push
pop
xchg
orb
ljmp
xor
push
cs
stos
jle
ljmp
xchg
sbb
out
push
adc
sub
sbb
mov
xchg
addr16
jecxz
xor
idiv
push
imul
push
fcompl
lods
cltd
mov
fnclex
mov
in
shl
arpl
lea
push
ror
jge
inc
loop
or
cmpsb
out
rclb
or
inc
cmp
popf
sub
cld
rclb
xor
loopne
fisubrs
cwtl
std
in
xor
jecxz,pn
sbb
adc
repz
daa
dec
dec
jle
pop
jle
mov
jp
push
in
into
call
cli
add
jbe
cmc
xor
jl
sub
dec
pop
pop
add
jns
adc
loopne
test
sahf
mov
je
bound
xor
pop
inc
movsl
jg
adc
jno
push
inc
call
cmp
cmp
pop
out
nop
jno
into
fdivrs
jmp
fistl
xor
or
dec
xlat
jbe
nop
cmc
insb
cwtl
jmp
xor
or
das
jmp
rcrl
mov
sbb
rcrl
mov
push
xchg
aas
icebp
and
xor
loop
xchg
mov
mov
xchg
push
fisttps
fmuls
dec
jg
xchg
sub
jbe
or
mov
shrb
fld
popf
pop
pop
mov
adc
cltd
repz
fdivr
roll
cltd
mov
mov
mov
cld
ret
lret
es
sbb
xor
jl
ret
xchg
push
push
inc
jae
data16
mov
fcomps
lret
pop
push
push
dec
pushf
addr16
sbb
lock
ds
out
jbe
mov
movhps
or
mov
leave
clc
cmp
jns
adc
inc
out
mov
stc
or
mov
mov
dec
sub
popa
dec
sbb
std
mov
std
dec
scas
int3
mov
lcall
dec
xor
gs
lret
aad
js
push
jge,pt
inc
dec
testb
mov
push
mov
adc
cmc
stc
mov
daa
fsts
mov
push
test
jmp
or
aas
lret
mov
cmp
in
leave
sub
std
fildll
cmp
int3
and
enter
jbe
sbb
movsl
xchg
shll
sbb
enter
fs
add
xchg
mov
dec
adc
jno
pop
in
pop
mov
test
pop
dec
mov
lods
das
aad
mov
sbb
pop
dec
push
mov
mov
cld
outsl
jle
cltd
stc
imul
mov
sbb
jae
push
test
jb
pop
insl
mov
mov
and
fmuls
fnsave
mov
icebp
push
stos
push
sub
and
cmp
or
mov
xor
in
mov
ret
push
rolb
mov
leave
sub
push
lcall
sub
ljmp
shr
jo
mov
leave
subb
sub
jne
bound
loope
sub
pop
cld
pop
stc
test
aam
sub
xor
mov
lock
and
or
push
jle
and
daa
ljmp
push
inc
sub
in
lret
sti
push
dec
adc
js
push
push
movsb
test
cmp
stos
mov
cmp
mov
fwait
icebp
lret
mov
js
repnz
adc
lds
test
or
pushl
mov
in
mov
fiadds
jmp
xchg
int
out
out
and
mov
cmc
mov
data16
xchg
aad
push
mov
mov
push
lods
pop
jbe
ljmp
pop
mov
add
jnp
scas
sbb
cmpsl
dec
adc
imul
js
sti
jbe
test
sub
cmc
or
sti
pop
enter
jp
pop
enter
imulb
pusha
pusha
js
xchg
dec
mov
sbb
push
lods
fsubrs
jnp
ss
leave
xchg
and
mov
repz
jb
mov
fstps
jne
jg
insb
mov
les
gs
push
mov
xchg
sbb
fnsave
mov
inc
je
push
mov
mov
xchg
std
aaa
jo
mov
outsb
in
pop
adc
pop
sahf
mov
cmp
das
scas
js
add
sub
push
ljmp
jno
push
mov
sbb
repz
cmp
test
pop
push
int
dec
decl
or
sbb
mov
dec
loope
fstl
insb
add
adc
sti
xchg
xor
out
cmp
jno
adc
flds
testl
in
shr
stc
add
aam
dec
dec
cmp
jns
jnp
fcmovu
jne
mov
popf
mov
and
test
inc
sbb
pushf
jle
cmp
xor
pushf
data16
xor
and
push
ds
lods
sub
add
inc
xchg
xor
movsl
add
add
repz
aaa
into
clc
pusha
sub
cltd
lahf
into
pop
daa
mov
push
sahf
cmc
repnz
and
lcall
xchg
mov
leave
jle
or
gs
lret
cmpsb
imul
ljmp
push
inc
xor
dec
scas
sub
icebp
mov
ret
test
daa
ffree
lret
lret
decl
pop
mov
mov
enter
clc
inc
pop
out
xor
cmpsb
push
cwtl
stc
push
adc
xorb
or
xor
push
mov
dec
int
jmp
sbb
call
in
and
xchg
pop
jae
xor
xchg
sub
add
into
cmp
ja
add
mov
mov
dec
inc
or
stos
jmp
aad
fwait
add
mov
adc
imulb
dec
and
sub
test
arpl
xor
cmc
or
push
jg
add
add
pop
add
push
mov
mulb
aad
mov
cmp
sbb
jle
lock
cmc
push
lea
sbb
mov
add
jnp
xchg
dec
iret
sub
add
shl
jae
scas
repnz
pop
xlat
jno
and
pop
dec
push
mov
test
iret
in
adc
mov
imul
sbb
jg
out
popa
cs
jle
mov
shrl
shlb
insb
js
imul
pusha
sub
xchg
cmp
mov
inc
loope
gs
lods
pop
loope
in
dec
inc
sub
cltd
cmp
push
je
adc
add
mov
jne
mov
push
and
leave
dec
aaa
or
cmpsl
rorl
xor
mov
pop
lret
subb
pop
fisttps
jae
pop
insb
jle
or
add
mov
push
push
xor
add
add
sbbb
fsubp
pop
into
fsts
dec
aam
scas
fcom
fimull
jnp
mov
inc
test
adc
inc
pusha
fistl
scas
mov
xor
in
mov
mov
adc
pop
shll
push
jmp
fiadds
in
xor
and
jmp
out
das
lret
pop
adc
jo
and
fmull
mov
pop
mov
or
leave
loope
inc
xchg
stos
jp
cmpsb
cmp
ljmp
jae
jne
push
cmp
pop
xlat
hlt
mov
ds
mov
dec
arpl
ds
adc
pop
negl
je
sbb
mov
pop
push
push
mov
sub
cmc
ror
sbb
push
and
or
xor
ja
add
popf
test
psubsw
cmp
mov
push
aas
add
sarl
dec
mov
dec
loopne
xlat
dec
lock
xor
shll
loope
daa
loope
movsb
mov
sbb
xor
jp
gs
fidivs
arpl
mov
mov
out
test
rolb
daa
movsb
xchg
jge
cli
jecxz
fldt
mov
mov
movsl
inc
test
mov
jmp
lods
pop
add
inc
pop
mov
jl
movsb
and
pop
and
ja
xor
sbb
mov
lds
mov
icebp
push
mov
pushf
xor
adc
xchg
sub
stos
pushf
cmp
les
xor
ja
cwtl
rclb
add
inc
icebp
xchg
push
cmpsl
imul
enter
fildl
xor
mov
inc
jge
lea
rclb
lcall
fnstenv
cmpsl
cli
out
add
cmp
xchg
ljmp
je
cmp
outsb
sbb
and
imul
dec
sbb
pop
jg
negb
mov
daa
pop
jnp
lea
cmp
mov
test
les
adc
and
sarl
lock
jl
fwait
push
or
cmpsb
jmp
add
fsts
pop
aas
icebp
sub
dec
js
dec
pop
cmp
cmp
in
jns
fnstenv
data16
rcrl
jp
in
jmp
stos
mov
outsb
sub
sbb
arpl
inc
int3
in
mov
in
pop
bound
mov
movl
adc
mov
bnd
test
nop
imul
jno
icebp
mov
mov
jo
std
cmpsb
jecxz
nop
lahf
mov
hlt
fwait
lods
mov
jnp
cmp
cmc
and
fcoml
cmp
insl
mov
jle
push
shrb
xchg
add
and
test
inc
andl
and
jnp
pop
cld
popa
mov
mov
mov
add
sub
test
fistpll
loope
je
cmp
and
imul
and
sub
sti
xchg
lret
jne
bound
xchg
sahf
sti
xchg
rol
or
stos
cmp
daa
outsb
aas
insl
add
xor
xchg
sahf
jbe
add
js
or
cmp
sbb
dec
ret
stos
iret
data16
imulb
cmp
mov
lock
or
dec
pop
mov
sti
xchg
call
and
andnps
push
push
stc
test
cmpb
les
loope
repnz
jae
xor
cmp
cmp
fnsave
jmp
add
ds
add
fisttpll
movsl
adc
in
test
or
xor
mov
pop
jg
ret
mov
xchg
jmp
xchg
outsl
sarl
mov
or
sub
ret
lret
test
mov
outsl
fisttps
mov
shr
jo
int3
lret
dec
adc
cmpb
pop
out
aaa
push
mov
sar
test
movsl
push
xchg
ds
xor
xchg
push
pop
inc
jo
sbb
hlt
xchg
mov
or
add
push
ljmp
inc
inc
and
icebp
ds
loopne
jl
lock
lds
into
ljmpw
sahf
adc
out
push
push
cmp
lret
xor
enter
mov
dec
movsl
push
fdivl
push
pop
in
lods
pop
pop
int3
mov
sub
pop
movsb
mov
popa
cwtl
rcrb
ljmp
mov
push
in
in
imul
cmp
jge
es
subl
lret
mov
jmp
dec
xor
push
pushf
jg
data16
pop
repz
or
inc
pop
jp
int3
call
adc
pop
mov
adc
rclb
xchg
pop
cwtl
lock
mov
xchg
popl
xor
cli
test
adc
mov
or
push
sub
jbe
xor
inc
add
aad
mov
mov
sbb
jmp
sbb
filds
test
std
and
xchg
push
and
test
cld
cltd
bound
lcall
mov
mov
jmp
nop
cmp
cmp
pop
push
int3
mov
or
imul
mov
lret
or
cs
push
pusha
mov
ror
idiv
outsl
in
pop
aas
cmc
shrb
rcr
ret
lock
xchg
shll
xor
test
cmpsb
or
mov
jno
out
movsl
inc
scas
and
or
loope
sub
sub
arpl
rcrl
pop
loop
add
mov
and
xchg
lret
push
and
incl
cmpsb
mov
ficompl
adcl
pop
and
outsb
fdivrs
or
add
cmp
sub
mov
shr
jns
loopne
loope
insb
aas
outsl
ljmp
outsl
jp
fsub
add
fsubs
jo
xchg
jmp
stos
jne
or
nop
xor
int
inc
cmp
std
fidivl
rorl
dec
shlb
jge
jle
fucomp
mov
enter
xor
dec
outsb
aad
sar
imul
lods
cli
jmp
icebp
jbe
mov
ficomps
in
hlt
test
mov
pop
sahf
cmc
scas
mov
jae
sub
mov
xchg
inc
sbb
sbb
mov
lea
jge
and
std
std
dec
jge
in
mov
adc
ljmp
mov
mov
mov
out
je
aaa
add
in
xor
xchg
mov
or
push
jb
addr16
adc
out
mov
and
sbb
push
inc
je
push
jno
rolb
fnstcw
and
cmc
adc
adc
js
cmp
pop
rcl
int
shrl
mov
inc
clc
and
shrb
int
xor
xor
xor
es
loope
sbb
dec
sbb
rcrl
enter
sbb
push
ljmp
popa
mov
addr16
outsl
sbb
movsb
cmpl
dec
sbb
push
mov
outsl
rcrl
mov
xchg
add
fdivr
outsl
ficoml
into
int
out
xor
enter
xor
lret
xlat
pop
push
fmuls
pop
mov
jmp
pop
cmp
lds
clc
aad
mov
and
inc
push
cmpsb
arpl
je
add
jmp
adc
sbb
mov
popl
xchg
xor
outsb
add
push
ja
and
mov
lds
xchg
jmp
mov
hlt
jae
jp
leave
mov
add
mov
and
sbbb
jb
mov
mov
cmp
rcl
jecxz
int
loope
inc
cmp
test
xchg
mov
outsb
test
inc
fcmovnbe
arpl
stos
js
xlat
pop
sbb
pop
bnd
mov
and
add
or
sub
jl
add
pop
mov
xlat
mov
cmp
lds
cli
cmpsb
cld
adc
xor
jae
pop
mov
repnz
ljmp
ss
call
repz
lods
mov
imul
add
sbb
cmpb
adc
in
leave
add
push
push
sub
cmc
sbbl
add
and
and
out
lret
sti
lods
cmpsl
in
pushf
fwait
inc
xor
js
insb
pop
icebp
sbb
mov
cld
xchg
inc
addr16
jns
sbb
into
ja
scas
jne
cmp
dec
sbb
jb
sbb
cltd
vpinsrw
xchg
pop
les
mov
and
mov
sbb
popa
imul
fwait
or
mov
shl
lcall
lret
xorl
je
cmp
aad
xchg
daa
mov
das
sub
xchg
insl
pop
arpl
push
bound
mov
fdivr
pop
test
jns
aas
daa
mov
mov
mov
xchg
mov
aas
mov
mov
mov
in
inc
fisubrl
fisttpll
push
fstpl
sub
jbe
cmc
lahf
dec
divb
xchg
xor
pop
jbe
adc
jle
out
fs
inc
rcrb
out
or
pop
dec
push
pop
push
aaa
lahf
repz
frstor
mov
push
nop
loop
adc
mov
adc
clc
or
xor
inc
pop
xor
mov
mov
mov
mov
inc
and
jae
push
aad
int
out
xchg
fwait
mov
cmp
xchg
mov
mov
pusha
mov
fadds
out
pusha
hlt
adc
add
bound
sbb
inc
idivl
std
inc
inc
inc
jp
jbe
push
fdivrl
test
in
pop
and
adc
fs
lods
stc
push
push
pop
out
xchg
lret
cmp
add
or
dec
into
gs
int3
mov
inc
shrb
inc
or
aaa
jno
mov
add
rclb
and
add
inc
or
mov
xchg
mov
xchg
adc
mov
jmp
jp
mov
sahf
mov
and
mov
sbb
pop
mov
cmp
insl
jae
xchg
cmp
insl
jb
inc
movsb
mov
enter
stos
jg
or
xor
fidivs
jae
cmp
inc
lock
mov
hlt
sub
sub
inc
inc
lret
js
cwtl
sbb
mov
icebp
or
out
xor
xor
inc
data16
cwtl
adc
cmpsl
sbb
call
shrb
je
push
cmp
fidivs
subl
clc
nop
jae
and
xchg
pop
xor
cld
mov
call
lds
push
xor
in
lret
popl
mov
js
mov
dec
cld
inc
xchg
sbb
int
imul
outsl
mov
xchg
dec
popa
sub
dec
das
cli
jnp
in
pop
ljmp
cmpsl
dec
pop
fstps
inc
jno
inc
loope
jns
clc
sub
notb
mov
fnstenv
cltd
mov
jo
xor
cmp
fwait
sti
xchg
push
call
es
push
stc
sbb
std
lods
out
popl
sub
push
popf
cmpsl
cmp
in
jl
xchg
int3
pop
sbb
xor
int3
xor
pop
imulb
popa
rorb
bound
pop
inc
aad
repz
cs
ret
les
clc
fidivs
repnz
lret
cld
test
cmp
movntq
push
push
out
sub
mov
push
repnz
xor
push
les
mov
testl
xchg
push
scas
lods
in
mov
sub
or
adc
xor
and
or
and
xchg
cmp
add
add
ljmp
ss
adc
lret
stos
lods
jo
inc
cld
and
dec
add
loope
sti
and
mov
fildl
int
sbb
inc
pop
aaa
ljmp
out
outsb
add
loopne
insl
call
mov
jl
int
nop
cmp
pop
int
push
sbb
xor
sub
sahf
in
lea
aaa
jbe
in
add
or
loop
rcrl
sub
or
cmp
cmp
stc
stos
ss
stos
dec
mov
push
in
jns,pt
xchg
addr16
je
mov
push
cld
outsl
mov
push
mov
xchg
sub
enter
stc
inc
xor
push
xor
in
push
lret
and
aaa
xor
fsubl
shrb
out
xor
ja
mov
testb
fadd
or
mov
shlb
add
push
xorb
sbb
jo
fs
in
sbb
nop
lea
mov
outsl
sub
scas
sub
xchg
andb
icebp
pushf
sub
in
adc
insb
push
insb
shrb
cli
daa
loop
test
inc
add
mov
pop
in
pusha
fldt
cmp
fisttps
adc
xor
ss
scas
push
xor
das
sbb
mov
movsb
mov
popa
movsb
dec
loopne
rclb
rclb
inc
add
cmpb
mov
pop
sar
xchg
adc
jp
sti
and
xor
push
mov
pop
jae
cmp
stos
push
sahf
icebp
movsl
pop
movsl
daa
les
popf
mov
dec
in
in
les
enter
push
or
fbstp
das
rcl
jl
cs
xor
scas
subl
mov
push
mov
arpl
mov
in
test
ret
sub
push
xor
sub
sub
cld
pop
mull
hlt
jmp
xorl
pop
mov
push
mov
repnz
sub
repnz
pop
add
fidivrl
mov
and
add
sti
test
xchg
mov
jecxz
adc
clc
jae
mov
out
ds
ss
fwait
aas
inc
int3
cltd
ret
inc
inc
das
imul
or
aas
into
adcl
adc
push
mov
pop
sub
push
rorb
mov
fstpl
icebp
popa
cmp
push
imul
mov
push
or
adc
sbb
cmc
pop
push
jae
jns
popa
lods
add
fldcw
lret
and
popa
cs
js
pop
mov
cmp
out
sub
lds
adcb
cmp
shll
mov
mov
mov
inc
xchg
mov
inc
xlat
iret
ds
or
xor
xor
jg
push
iret
outsb
fs
insb
jle
inc
fs
push
cli
sub
sbb
mov
gs
pop
pop
sbb
jnp
scas
aas
fdivrp
int3
xchg
lods
mov
fwait
mov
mov
outsb
jno
pop
icebp
ja
or
test
aam
or
xchg
adcb
mov
adc
dec
or
es
stos
aas
mov
lahf
cmp
mov
int
mov
push
lcall
push
lcall
push
scas
dec
ret
jns
pop
cmp
hlt
insb
jle
push
jg
mov
repz
jecxz
fwait
je
jp
int3
jno
mov
inc
push
nop
dec
cmp
popa
outsl
aad
add
xchg
sbb
rclb
insl
inc
popf
lret
xor
push
push
xchg
inc
dec
adc
andl
addr16
sub
adc
lcall
cld
jns
ficomps
fisttpll
test
imul
mov
mov
dec
pusha
add
ret
cmp
adc
pop
pop
out
imul
sub
scas
push
sti
fbld
push
mov
sahf
mov
adc
movb
jp
aam
pop
mov
mov
push
das
inc
test
fwait
mov
faddp
add
push
inc
jmp
add
notl
mov
fwait
jb
int
mov
lea
gs
cmp
jo
cmp
adc
mov
dec
out
leave
push
push
insl
sub
mov
loop
push
dec
fcmovbe
lea
lods
push
adc
mov
mov
rorb
mov
nop
or
jno
xor
sbb
pop
jnp
into
repz
push
inc
and
jp
shlb
jae
into
sub
adcb
lods
and
lahf
sub
repz
and
sbbb
xchg
ret
into
cmp
dec
mov
insb
sahf
enter
mov
pop
out
add
dec
aaa
xchg
jmp
sub
jge
sub
xor
cmp
stos
jg
mov
stc
and
mov
or
repz
mov
mov
popa
data16
lahf
into
sahf
mov
mov
cld
mov
cli
adc
pop
pop
dec
fs
orb
mov
imul
loope
jl
cmp
cmp
cmpsb
jo
fwait
xor
jg
pushf
out
enter
pop
mov
and
sbb
lods
add
int
pop
push
test
cmc
ficompl
std
sarl
adc
je
push
xor
cmp
aam
in
repz
roll
in
fnsave
pushf
and
sbb
aam
xchg
xor
cmpl
adc
xor
das
and
pop
lret
in
or
cmp
push
jmp
test
push
jmp
cmpsb
cmp
fldt
gs
push
mov
dec
fildll
jmp
mov
enter
push
and
out
fwait
jbe
ljmp
dec
jmp
imull
dec
xchg
sub
lret
mov
push
mov
idiv
popl
mov
sbb
std
jo
das
out
insl
mov
jg
jo
es
jne
sti
push
in
push
hlt
aam
subb
and
in
mul
mov
jmp
adc
sarl
xor
in
ds
or
stos
je
shlb
xchg
loope
cmc
ds
mov
jns
jl
int3
cmpsl
cmp
fimull
into
sbb
in
sbb
stos
cmp
cmpsl
gs
aas
mov
or
inc
lods
xor
mov
ja
data16
lods
lds
hlt
gs
sub
das
xchg
push
mov
and
dec
pop
imul
lahf
dec
push
push
pop
dec
filds
ds
cld
jge
pop
sub
cmp
jbe
ret
push
das
inc
push
pop
jl
test
or
repz
jl
adc
mov
js
stos
fwait
mov
shlb
test
pop
movsb
add
jnp
pop
stos
add
jg
inc
fisubrl
jl
inc
sub
or
push
call
cmp
int3
lea
mov
stc
jl
insb
add
adc
add
sbb
xor
xchg
lret
xor
mov
scas
call
and
shrb
ljmp
push
mov
push
out
stos
dec
mov
inc
fbstp
fimull
ficoml
movsl
arpl
fsubrs
sbb
je
das
cmpsb
or
jbe
jp
arpl
mov
call
or
push
cmpsb
outsl
add
push
jmp
cmp
in
sbb
fldt
rclb
aaa
mov
jns
fcoml
add
and
add
jmp
cmp
fisttps
xchg
sarb
push
fists
xchg
je
dec
push
jmp
or
lret
int
jge
xchg
cli
mov
aas
sub
insb
sub
cmp
push
push
out
mov
cmpsb
popl
and
int
cmp
test
ret
xor
xchg
loope
hlt
rorb
sahf
in
mov
cmpsl
cltd
adc
mov
push
jg
lret
bound
mov
cltd
mov
movsb
nopl
mov
xor
inc
or
lock
inc
fnstcw
pushf
jae
into
fstpl
cmp
cli
shlb
into
in
sbb
ffreep
lods
outsl
sub
stos
nop
lcall
sub
mov
dec
test
push
mov
cmp
and
xchg
jo
test
in
push
xlat
icebp
pop
divb
xchg
dec
mov
in
inc
data16
jnp
adc
push
mov
mov
push
gs
pop
fneni(8087
push
cli
inc
in
fnstsw
test
iret
cmpsb
enter
mov
pop
lock
xchg
cld
mov
xchg
insl
ljmp
into
jl
lret
sbb
std
por
mov
out
mov
xchg
push
daa
ret
js
in
nopl
les
add
xchg
mov
popa
jl
adc
in
movsb
and
into
cmpsb
lock
lods
stc
lods
loope
pop
mov
ret
inc
mov
cmp
mov
lret
sbb
push
pushf
cli
cmpb
mov
push
lods
or
mov
push
inc
imulb
call
dec
or
push
push
aas
mov
mov
ftst
xchg
jp
or
lds
cmp
inc
out
cmpsl
adc
jo
sbb
lds
iret
fldenv
ret
or
outsl
add
ljmp
jg
adc
dec
mov
and
xchg
jmp
add
sub
jo
bswap
shl
rolb
test
dec
daa
cmp
inc
xchg
push
xchg
xchg
pop
and
mov
stos
cmp
sahf
push
call
xchg
xchg
flds
shl
lods
inc
scas
fwait
shll
cmc
test
adc
in
push
add
jae
lds
jns
sub
mov
sub
mov
adc
add
in
xchg
sbb
leave
inc
fnsave
shl
and
inc
or
xchg
movsb
out
add
xchg
sbb
icebp
and
iret
jmp
cmp
add
xchg
rorl
adc
loope
out
dec
jne
test
jg
add
cmpsl
ret
mov
call
aad
dec
loope
les
mov
ret
cmpsl
outsl
add
scas
xor
sbb
push
cmc
cmp
push
add
dec
ss
insl
jnp
jp
adc
sti
pop
insl
pop
inc
xchg
dec
xor
or
data16
jp
out
movsl
inc
xor
mov
pop
sub
int3
jbe
add
arpl
insb
and
jle
insl
inc
jp
popa
jg
pusha
mov
movsl
pop
ret
mov
add
mov
dec
cmpsb
jne
pop
outsb
mov
mov
add
mov
icebp
xchg
xchg
icebp
mov
xor
repnz
enter
sub
jmp
lock
jmp
cmpsb
jns
lret
out
shrl
sbb
add
sub
push
xlat
cmp
scas
push
ss
lcall
in
daa
cmp
insb
cmpsl
dec
cmp
or
and
sti
pop
loope
scas
cmpsb
xchg
and
or
push
mov
xor
pop
gs
scas
and
daa
pop
cld
mov
pop
std
push
jp
mov
pusha
adc
fwait
pop
or
repz
mov
add
in
mov
sbbb
and
sbb
cmp
adc
repz
das
shlb
lods
pop
data16
pop
add
push
loop
and
movsb
in
loop
mov
testb
mov
dec
and
mov
je
ljmp
or
xor
les
scas
xchg
cmp
jg
leave
jae
scas
fimuls
gs
jae
cvtpi2ps
or
xor
sub
test
fisubrl
bound
mov
jne
scas
gs
push
lods
insl
dec
pop
lret
insl
mov
lahf
les
out
add
les
and
mov
outsb
ret
adc
jge
iret
mov
inc
push
inc
xor
sub
pushf
decl
inc
sahf
clc
dec
jb
unpcklps
jle
in
xor
xchg
insl
cmc
hlt
cmp
rcrl
xor
cmc
in
lahf
mov
mov
xor
test
in
insl
xor
insl
xor
sahf
aas
lcall
sahf
push
in
test
mov
lods
je
insl
int
xchg
decl
push
popf
outsl
outsl
daa
jno
icebp
dec
sub
mov
fucom
push
push
and
pop
pop
jecxz
shr
jne
cmc
pcmpeqd
xor
or
adc
or
shl
mov
test
mov
das
and
inc
movsb
data16
aad
stos
fidivrl
mov
mov
fnstenv
movsl
imul
mov
loop
mov
inc
rorl
add
push
sub
ds
sub
popf
push
hlt
inc
jmp
roll
lods
setl
add
nop
mov
test
out
out
clc
test
cld
or
and
sti
fmull
push
mov
arpl
pop
jo
bound
int
cmp
shrb
adc
cmp
scas
inc
pop
test
push
jno
fnstcw
shrb
jb
pop
push
inc
or
mov
pop
lahf
inc
push
xchg
sbb
jnp
jae
mov
or
cli
xchg
push
stos
sbb
add
sbb
pop
inc
add
popl
popa
cwtl
pusha
push
mov
jle
arpl
dec
sbb
jl
es
pop
push
add
js
out
mov
jo
xchg
mov
mov
andl
imul
mov
ret
out
xor
aas
dec
icebp
in
lret
or
xchg
fs
test
inc
mov
jecxz
loopne
fisttpl
shl
sti
inc
push
fs
pusha
cmp
hlt
cmp
push
push
xchg
mov
inc
jne
clc
rol
fwait
or
cmpsb
in
pop
mov
data16
shl
repnz
jmp
enter
adc
inc
add
dec
sub
sbb
xchg
add
stos
adc
xchg
or
adc
or
mov
in
pushf
les
xchg
mov
mov
sub
and
inc
mov
push
mov
call
call
fstpl
insl
mov
cld
les
lahf
fwait
repnz
mov
in
test
mov
mov
into
sbb
pop
insl
notb
cmpsl
pop
std
je
loopne
incb
cmp
or
pop
mov
lods
rolb
dec
lods
stos
mov
xchg
lret
jne
cmpsl
lods
or
aam
xlat
sub
into
cmpsb
xor
mov
fwait
inc
adc
jnp
jb
data16
daa
mov
add
pop
lods
or
sahf
xchg
sub
cltd
cmc
loopne
daa
std
jecxz
aad
dec
mov
sub
scas
inc
in
divb
dec
or
out
jecxz
xchg
dec
stc
mov
cmp
dec
pusha
subl
aam
repz
lds
mov
inc
push
aas
fisttps
test
aam
shrl
cmp
lods
xchg
sub
mov
mov
cltd
dec
outsl
sarl
test
je
adc
cli
inc
sub
jne
adc
add
dec
flds
daa
pop
fnstenv
loope
dec
pop
pusha
sub
stos
lret
lock
cmpsl
aas
repz
and
xlat
inc
lods
inc
jne
dec
mov
jns
cmpsb
out
cwtl
jae
jp
or
push
aad
insl
nop
loope
cmp
jne
xlat
shl
fistpll
fisttpll
cmp
pop
push
inc
push
ds
cmpsb
mov
mov
add
jbe
pop
addr16
dec
fidivrs
cmp
add
ret
enter
test
push
cmp
add
pop
mov
adc
sub
je
xor
pop
push
fildll
les
cmp
loopne
xchg
add
add
sub
xchg
xchg
xor
jl
xlat
in
idivb
dec
sbb
mov
jmp
push
adc
aam
mov
adc
xor
stos
sarl
sti
iret
insb
mov
mov
xor
jmp
loop
jno
fs
addr16
mov
test
xor
sub
fists
les
push
pushf
mov
push
push
mov
aaa
mov
add
xchg
cmp
out
arpl
lcall
and
leave
sub
into
repnz
dec
and
push
outsb
sahf
cmc
sub
and
cmp
jns
nop
shll
add
mov
mov
or
icebp
push
addr16
lret
fldl2t
imul
push
lcall
mov
mov
stos
sub
bound
arpl
mov
and
mov
lar
push
in
ret
xor
push
pop
xchg
fdivs
in
jae
cmp
xchg
add
mov
stos
pop
aas
adc
lahf
adc
mov
sbb
cli
mov
rolb
std
cli
xchg
mov
lods
mov
test
cs
pop
mov
int3
fs
aad
add
addl
push
mov
scas
xor
fdivl
lcall
lahf
fdiv
ret
xor
ja
out
sub
mov
cmpsl
or
fnstenv
aas
andb
mov
shrb
mov
and
pop
test
stos
add
pop
mov
push
mov
sbb
mov
imul
mov
push
and
sti
imul
cmp
pop
movsb
cmp
cmc
mov
dec
adc
or
push
sbb
sbb
shlb
xchg
imul
add
sbb
icebp
adc
pop
fsubrp
or
push
inc
sahf
sub
roll
arpl
test
je
xchg
leave
adc
lods
push
sbb
push
out
adc
outsb
add
cmpsb
sbb
cmpsb
fists
cmc
jne
dec
pop
dec
inc
pop
lock
js
xchg
in
movsl
mov
mov
cmc
sbb
mov
lock
sbb
jle
jo
mov
adc
inc
mov
fwait
testl
mov
push
scas
pop
sub
nop
dec
pop
ret
jns
pop
pop
repnz
jns
mov
jp
adc
fldcw
cmpsb
sbb
mov
stos
mov
xchg
lds
push
jno
test
stos
rcll
int3
sub
sbb
pop
insb
leave
jo
mov
mov
push
xlat
push
aad
inc
push
push
dec
ss
pop
ds
repz
mov
jae
sub
aad
incb
lds
add
in
xchg
mov
fwait
add
icebp
mov
inc
je
cmpl
push
mov
mov
mov
adc
dec
lcall
sbbb
aam
in
dec
mov
cwtl
sti
sahf
call
xor
sub
decb
dec
cmp
mov
xchg
sbb
sub
aam
jle
mov
and
jno
inc
lret
incb
sbb
in
aam
data16
mov
or
movsb
in
pushf
mulb
jo
out
arpl
inc
rcll
dec
and
enter
shr
mov
loope
fs
in
insl
jge
xchg
scas
sub
sbb
mov
fcomip
mov
popa
push
xlat
leave
pop
and
bound
pop
xor
fs
test
lods
or
or
data16
das
imul
scas
inc
ds
inc
repz
and
sarl
out
repz
pop
imul
or
in
iret
xchg
js
int
bound
or
hlt
pusha
inc
stc
jge
fstpl
popf
cli
ja
and
test
xchg
das
add
lret
sub
lahf
or
cmp
xchg
pop
out
enter
pushf
sub
aam
es
mov
push
mov
adc
jnp
pop
cs
sub
xchg
add
xor
insb
cmpsb
sub
push
filds
xor
punpckhbw
adc
sbbb
xchg
rcrl
mov
dec
cmp
arpl
lea
pop
rcll
sbb
mov
mov
pushf
popf
outsl
inc
jne
mov
repz
push
pop
aas
xor
jmp
push
outsl
addr16
rol
popa
mov
fildll
push
loopne
cmp
xchg
mov
out
lods
jl
into
jb
dec
test
loopne
add
sbb
in
pop
fidivrs
lods
cmp
push
cld
dec
jno
aas
cwtl
shll
and
mov
fsubrs
mov
pop
push
rcrl
pop
dec
inc
adc
insl
inc
bound
addr16
dec
jne
jmp
xlat
es
cmp
jns
pop
jmp
pop
aam
adc
leave
sahf
fnstcw
ds
std
cmp
loopne
cwtl
ss
cltd
daa
test
ret
dec
adc
pop
ds
jo
cld
leave
jmp
xchg
inc
out
sbb
push
leave
sahf
xchg
mov
jl
loop
repz
adc
xchg
add
and
call
stos
xchg
stc
jnp
adc
mov
lret
rol
daa
sbb
rolb
iret
pop
addr16
cld
and
jge
test
or
out
xchg
mov
or
jecxz
leave
mov
pop
out
mov
or
insb
adc
loopne
fmulp
out
sub
je
ficompl
mov
cmp
xchg
sarl
jo
mov
mov
xchg
adc
cmp
jno
and
rcr
sbb
mov
pusha
into
push
dec
enter
int3
daa
ja
test
mov
sbb
mov
push
mov
arpl
xchg
sahf
xchg
pop
inc
pop
add
jle
mov
sbb
sbb
in
xchg
mov
xorl
fdivrl
gs
lds
dec
int3
es
insb
xchg
mov
xchg
ds
call
in
test
subl
and
sbb
pop
mov
xchg
mov
push
mov
cli
dec
in
xchg
cmp
fwait
jg
loope
cwtl
loop,pt
pop
movsl
mov
add
cmp
mov
or
insb
pop
frstor
jnp
test
cmovns
pop
adc
jecxz
out
sahf
mov
push
shrb
xchg
push
call
out
lods
or
inc
pop
push
ficompl
jge
lahf
repz
fisubl
or
test
pushf
aas
lahf
in
sbb
push
ljmp
pop
les
cmp
out
cmpsl
cmpsl
and
add
lahf
aad
jne
mov
pushf
or
dec
and
push
push
in
aaa
fstpt
mov
lahf
push
mov
mov
cmp
lock
mov
or
addb
cmp
jno
and
xchg
push
cmpb
sbb
add
js
xor
and
pop
push
xchg
arpl
stc
sahf
lods
xlat
or
lock
adc
and
jl
addr16
add
stos
call
or
pop
push
jbe
pop
ss
xchg
loop
mov
pop
xlat
dec
sub
dec
jl
xchg
popf
aad
xchg
fadds
out
test
and
xchg
add
test
adc
mov
ss
fidivrl
jno
ljmp
mov
cltd
sub
mov
adc
jl
push
xor
add
push
and
xchg
and
fmuls
jmp
cmpsl
mov
fistl
sub
and
xchg
hlt
sbb
stc
jbe
dec
test
add
ss
daa
jns
aas
push
sti
mov
fwait
rolb
stos
fiaddl
arpl
fnsave
push
test
jb
ret
mov
pop
data16
xchg
lcall
pushf
cmp
xchg
cwtl
loop
pop
push
lods
fiaddl
inc
pop
mov
push
mov
adc
and
aam
sub
sbb
mov
mov
nop
mov
mov
out
js
mov
loope
jbe
push
shrb
dec
and
sub
mov
adc
mov
ret
lds
push
fcmovnb
pop
or
sub
cwtl
aaa
gs
sbb
mov
xor
jl
fstps
pop
add
out
dec
lahf
xchg
push
lods
dec
fsubp
and
adc
shl
mov
rcl
sub
add
sbb
mov
sbb
enter
nop
insb
insl
jae
sub
daa
xchg
dec
xchg
insb
stc
call
iret
flds
lock
mov
rcrl
jp
jno
je
dec
add
pop
push
adc
sub
adc
jo
out
dec
cld
shrb
lods
xor
mov
pop
push
std
shrl
jg
adc
in
aam
int
dec
push
test
add
addr16
add
cli
mov
and
fidivl
in
popa
xchg
clc
or
data16
jecxz
inc
jmp
ss
xor
stos
xor
insl
idiv
mov
push
stos
cltd
insb
pop
ja
mov
lret
sbb
cmpsb
sub
jb
rcl
in
clc
mov
js
and
inc
out
mov
leave
mov
dec
jl
test
jbe
xor
mov
inc
mov
adc
push
xor
push
sti
cmp
pop
shl
or
cmpl
sub
pusha
imul
inc
fxch
mov
lods
adc
and
ja
cltd
inc
stos
add
mov
adc
push
cmp
or
inc
pop
out
xor
in
sbb
mov
push
push
dec
inc
dec
rcr
scas
xchg
lret
lods
mov
push
jl
push
loopne
pop
sahf
xchg
push
inc
sub
cmp
dec
cmp
jp
add
xchg
lret
mov
andl
or
ret
mov
mov
xchg
lcall
mov
pop
inc
out
fildl
push
mov
mov
stc
mov
int3
jnp
inc
jo
xchg
mov
enter
inc
and
cmp
ljmp
xor
arpl
push
jmp
xchg
push
clc
xor
push
aas
out
rorl
test
push
mov
push
cmp
mov
roll
push
mov
dec
and
clc
mov
jns
mov
mov
push
fsubrl
shlb
xor
push
dec
out
add
int
aad
add
push
pop
cmp
and
arpl
aad
mov
cmp
lahf
add
sbb
mov
popa
jns
xchg
loope
jb
movsb
subb
outsl
ss
ret
das
cmp
jno
xchg
and
mov
int
int
data16
mov
insb
sbb
mov
add
lahf
sbb
add
jno
bound
test
push
repnz
enter
jle
dec
push
arpl
ficomps
rcll
imul
and
inc
sbb
and
mov
xchg
push
cltd
cli
dec
shrb
dec
pop
pop
sarl
cli
loopne
mov
push
xor
repnz
push
ficoml
shll
addr16
sub
test
lods
hlt
jo
sbb
rorl
mov
fimuls
mov
push
data16
addl
lods
mov
xchg
into
cmpb
movd
es
or
aam
fldenv
lret
lcall
pop
int
or
mov
pusha
std
or
lods
inc
pop
shlb
pop
je
dec
adc
mov
jns
or
sbbb
sti
or
pop
add
sub
jb
mov
in
fmul
int
dec
push
loopne
or
sub
add
push
jp
pushf
mov
scas
pmuludq
popa
xchg
dec
cmpsb
lock
mov
jbe
mov
sarb
outsl
sbb
push
insb
sub
xchg
pop
cmc
scas
sbb
add
and
fcmove
pusha
adc
mov
jl
xor
jl
xor
add
mov
push
arpl
xchg
xor
mov
push
test
mov
xor
adc
or
cmp
orb
push
daa
jnp
sbb
dec
pop
sub
ret
mov
adcb
pop
aam
push
stos
jecxz
sub
sahf
sub
enter
inc
lods
sti
sub
mov
stos
push
mov
nop
dec
inc
push
lods
nop
adcb
int3
sub
jne
iret
sti
pshufw
xchg
incl
or
aam
mov
or
xchg
ret
rol
fdivrs
int3
dec
fdivrl
lcall
push
mov
aaa
cmp
lcall
mov
ja
or
scas
inc
dec
sub
and
xchg
pop
push
pop
or
dec
mov
ja
add
inc
jmp
cmp
ret
aad
dec
ret
add
stos
divl
mov
or
icebp
xchg
aad
stos
daa
iret
and
pop
hlt
daa
inc
adc
push
insb
or
sahf
jae
out
aaa
mov
cmp
jne
push
cmpsl
add
push
shlb
rcr
mov
imul
cltd
xor
pop
xchg
xor
dec
adc
test
test
push
icebp
into
cmp
scas
andl
or
and
mov
movsb
cmp
cmp
repz
je
push
bound
add
loopne
mov
xchg
mov
pop
and
or
adc
data16
movsb
adc
inc
add
mov
movsl
stos
xchg
lret
xor
or
cld
inc
fistps
mov
mov
cld
je
sbb
adc
xor
in
and
push
sbb
aad
stos
fbstp
pop
repnz
out
enter
test
jns
pop
cltd
and
out
push
sub
shll
xor
ficoms
mov
aad
sub
sbb
rol
adc
hlt
mov
imul
daa
jge
iret
dec
inc
jmp
dec
jb
repnz
xor
enter
sub
xchg
push
outsl
iret
aas
sbb
nop
lea
aam
xor
test
lea
xchg
pop
hlt
ret
adc
cmpsl
mov
pop
or
dec
loope
adc
pop
push
mov
mov
leave
cs
jp
dec
in
pushf
inc
std
cltd
ds
fistpl
push
cwtl
pop
mul
jl
sbb
push
dec
jne
cld
adc
stos
mov
inc
jecxz
fstps
fs
pop
jecxz
inc
stos
push
mov
insl
cmp
mov
cwtl
movsb
fidivl
ds
in
clc
or
out
cmpsb
imulb
les
push
imul
or
or
xchg
mov
imul
dec
fs
add
jl
and
dec
imul
pop
pop
adcb
xor
fs
jae
imul
xchg
call
and
jmp
pop
jne
bound
sbb
mov
pop
mov
xchg
jge
cs
ret
mov
ja
add
cltd
inc
pop
lret
inc
js
lahf
loopne
jb
cmp
pop
dec
out
push
jae
cs
int
int
cmp
pop
xlat
xrelease
mov
mov
insl
icebp
and
in
pop
inc
leave
aas
outsb
stc
lock
das
and
push
inc
or
xor
aam
jge
push
mov
push
sbb
sub
cmp
aas
or
fdivl
pop
sub
bound
decl
test
das
js
cmp
sbb
cmp
mov
imul
shll
lds
mov
popa
ror
fnsave
cmpsl
mov
dec
daa
mov
pop
rclb
mov
inc
jae
aaa
xchg
cmp
adc
popa
mov
dec
mov
add
iret
jne
and
shlb
mov
dec
stos
inc
sbb
cmpsb
cmc
jp
mov
mov
inc
lahf
adc
repnz
and
jno
pop
es
xlat
insl
dec
mov
test
sub
push
xchg
jb
les
xchg
fisubl
data16
andl
arpl
inc
cmovo
hlt
mov
lret
scas
inc
cld
test
xor
push
push
mov
scas
pop
fdivrl
imul
hlt
mov
ja
pop
cs
fs
xchg
imul
pop
mov
cli
mov
fwait
push
xor
or
mov
lock
shlb
add
cmp
xor
push
lea
call
xor
inc
mov
movsl
fwait
sbb
popf
jns
add
insb
clc
mov
iret
pop
add
sti
insb
mov
stc
test
repnz
jne
dec
popa
mov
jle
cmpsl
and
inc
jo
shrl
fisubrs
les
mov
ret
shll
push
loopne
dec
lds
pop
mov
idivb
xor
or
jg
out
loope
bound
jmp
outsb
jp
mov
add
cmovge
xchg
pop
push
pushf
loop
add
loope
pop
push
mov
loopne
int3
xchg
xor
dec
addr16
jg
cmp
repnz
sub
pop
inc
enter
insl
insl
shll
popl
or
jg
pushf
add
mov
and
and
pop
mov
jne
xchg
fsub
js
andl
cltd
loope
and
xor
fsubrs
movsl
jb
fbstp
out
jg
lock
sub
arpl
mov
ja
enter
inc
aad
and
jno
mov
lcall
xchg
fdivrs
push
xor
jecxz
cwtl
mov
pop
pop
mov
inc
push
xlat
gs
test
addr16
leave
mov
ds
jns
push
mov
sti
movsb
stc
lods
xchg
ret
mov
fldt
cmp
test
inc
int
movsl
mov
movsl
dec
in
cmp
pop
shlb
out
xlat
mov
insb
dec
loopne
shrl
add
sub
sub
cwtl
lock
sub
mov
sbb
adc
lcall
scas
call
xchg
fiaddl
xchg
lods
ljmp
out
push
sub
cs
push
jne
inc
loopne
fistpl
push
xchg
decb
sub
adc
popa
js
sub
mov
jbe
and
cmp
imul
cmp
sbbb
mov
jns
ljmp
add
inc
jns
fsubr
test
jbe
adc
jns
ret
jae
jns
push
fidivrs
cmp
xlat
add
dec
ffree
fisttpl
xor
icebp
xchg
mov
jge
jae
popf
sub
aad
sub
pop
mov
inc
out
dec
imul
adc
lahf
repnz
out
jmp
aaa
cmp
jne
inc
inc
sbbl
adc
ss
push
inc
dec
or
push
movsl
leave
arpl
int
ljmp
enter
loope
sub
jno
jo
or
sbb
js
jle
lods
mov
and
je
jecxz
hlt
lock
es
xor
cmp
mov
movsl
pop
inc
fs
sub
pop
push
aad
jecxz
cmp
pop
inc
pop
xor
push
cmp
push
fucomip
xorb
shrl
dec
xchg
mov
enter
mov
xor
cmp
add
fsubrl
popa
and
mov
lret
pop
mov
cmp
jmp
iret
testl
inc
cmovg
sbb
bound
into
adc
pop
addr16
add
movsl
sbb
decb
scas
pop
hlt
addr16
loop
mov
in
cltd
and
ret
mov
push
fcompl
stc
cmpsb
sbb
pop
sbb
add
adc
mov
ficoms
dec
movsb
inc
push
push
rol
sub
inc
ljmp
and
mov
out
leave
loop
xchg
pop
cs
cmp
cmc
xor
cs
pop
in
pop
sbb
jae
cmp
push
sub
ja
ja
imul
mov
mov
cmp
ds
dec
in
dec
cmp
sahf
out
mov
gs
cs
mov
sbb
xchg
or
lods
repnz
jae
jne
push
arpl
lcall
or
xchg
lretw
jmp
sbb
dec
je
add
ret
pop
cmp
jle
cmpsl
mov
push
fstl
jae
ror
adc
fidivs
insb
mov
xchg
sub
stos
push
inc
mov
fdivl
cmc
sahf
sarl
std
xchg
cld
push
insb
fists
aaa
push
fldl
shll
shl
ret
test
andl
sbb
and
ret
dec
sub
and
mov
fs
and
xchg
jns
out
je
imul
mov
test
stc
pop
lcall
fldl
xor
lods
or
insb
rorl
mov
jne
inc
and
sub
pop
xchg
subb
lret
dec
insl
sub
fs
jne
iret
jno
sbb
jnp
icebp
into
mov
loopne
pop
popf
inc
clc
ljmp
sub
fwait
mov
or
push
and
dec
sti
adc
push
lea
lock
pop
pop
cmp
dec
mull
test
cmp
test
test
loopne
or
xchg
leave
int
test
add
xlat
pop
rorl
mov
pop
loope
lahf
testb
call
sbb
mov
out
leave
jb
pop
jns
push
dec
adc
jle
mov
jnp
add
jg
sti
mov
shrl
outsl
jns
jb
nop
mov
mov
mov
sarb
ret
xor
push
mov
or
stos
pop
jae
mov
jle
js
mov
fiaddl
fs
test
insl
incl
and
inc
lds
add
test
daa
mov
and
jo
dec
inc
sahf
cltd
sbb
out
icebp
and
xchg
sub
sarl
jle
cltd
or
xor
das
cmp
ret
or
or
and
cmp
inc
add
jg
subl
les
xchg
enter
push
leave
add
out
rorl
test
xchg
sub
cmpsb
mov
jo,pt
addr16
mov
jl
pop
xor
xlat
imul
js
or
aaa
pop
das
jge
insb
jg
jb
add
jb
dec
pop
push
and
xchg
adc
pop
xchg
mov
pop
imul
pop
les
jp
test
popf
fildl
pop
sub
mov
sub
loope
repz
inc
mov
fsubp
push
xchg
sub
popa
sub
addr16
imul
js
cmpsb
popf
xchg
stos
adc
decl
loope
xor
sti
cmc
pminub
lret
lret
adc
cmp
and
aam
dec
lods
mov
clc
lock
nop
jb
dec
mulb
lea
mov
cmc
add
xor
inc
inc
aas
js
and
mov
repz
dec
and
in
cmpsb
pop
pop
sub
sahf
hlt
inc
mov
jl
arpl
sbb
in
imul
or
bound
mov
fbld
int
adc
ja
add
out
push
imul
addr16
ja
or
jnp
and
popf
xor
mov
dec
fs
push
frstor
leave
adc
stos
mov
cs
adc
push
out
jb
dec
lret
push
mov
inc
mov
adc
insb
cld
xchg
and
cwtl
repz
leave
std
cmp
sub
add
push
jnp
clc
aam
cmp
mov
mov
mov
xor
and
stc
pop
addb
daa
das
cmp
mov
dec
ds
jg
bound
jecxz
sbb
push
in
jae
push
or
insl
les
and
and
ret
xor
and
jbe
addl
insl
sub
rol
fdivrl
pushf
inc
pusha
into
out
and
mov
inc
fists
adc
imul
mov
mov
mov
iret
xchg
mov
push
lret
xchg
jns
lock
div
movsb
mov
test
push
gs
aaa
inc
popa
cltd
leave
mov
pop
sub
xchg
sub
aas
std
mov
push
push
mov
cs
xor
test
jno
xchg
lock
and
cld
mov
mov
and
mov
mov
repz
dec
pop
stos
hlt
and
rcrb
mov
jo
cmpsb
negb
mov
out
aam
xlat
pop
xor
inc
dec
sahf
or
scas
int
xlat
ljmp
mov
lods
ss
int
adc
mov
cmp
cmpsb
and
pop
lahf
sub
mov
lea
mov
or
jle
push
fstps
or
mov
fists
cltd
cmovs
cmp
jecxz
sbb
popa
jns
push
lret
sti
lock
cmpsb
sub
jecxz
ret
outsl
add
mov
movsb
and
lock
adc
sti
and
mov
adc
push
in
lcall
stc
lea
dec
sbb
mov
jnp
sbb
jns
dec
lods
loopne
scas
scas
inc
fstl
jmp
movsb
test
das
shrb
add
or
jo
lods
mov
mov
cmc
test
add
dec
mov
pop
sub
mov
shlb
xchg
sti
pop
stos
scas
sbb
lret
add
adc
or
mov
dec
push
xlat
dec
pop
push
xlat
sbb
aas
push
xchg
jl
bnd
dec
dec
in
inc
push
cmpsb
dec
pop
fisubrs
loope
repz
mov
push
mov
cld
and
jge
adc
test
aaa
shlb
je
add
xchg
jecxz
stos
inc
adc
fwait
lods
in
xor
hlt
xchg
into
and
int3
inc
dec
jmp
jl
add
cmp
mov
sar
push
xchg
mov
push
dec
mov
push
jmp
jp
push
cmc
aad
adc
adc
adc
xchg
or
jg
and
mov
push
test
fsubrp
adcb
stos
xor
popf
xchg
sbb
jbe
mov
adc
pop
imul
mov
loop
adc
xor
dec
daa
jg
pop
jb
lea
movsb
mov
push
sbb
lock
cld
inc
adc
add
int3
enter
jno
mov
or
sbb
push
xlat
push
lods
or
decb
ret
test
ret
mov
mov
adc
out
dec
mov
rcrl
and
dec
push
cmp
stos
jp
scas
inc
mov
mov
xchg
insb
cmp
out
push
adc
inc
fadds
movb
popa
sbb
dec
orl
sbb
call
and
in
dec
add
xor
and
cwtl
push
pop
hlt
pusha
jnp
mov
jge
or
jg
bnd
mov
dec
push
mov
sbb
sbb
in
imul
rclb
mov
bound
mov
lret
pop
xchg
jo
cld
mov
pop
test
ljmp
jge
and
mov
hlt
xchg
fcoms
testb
jge
in
dec
cmp
cld
jne
push
dec
sbb
mov
mov
faddl
pop
mov
or
mov
int
rcrl
or
stos
mov
cli
ret
xchg
loope
mov
jbe
insl
push
mov
test
lods
pop
sub
in
frstor
outsl
daa
lret
sbb
dec
mov
mov
fsqrt
push
in
and
dec
add
xchg
aas
cmpb
sbb
insb
xchg
in
daa
cmp
daa
dec
mov
xchg
or
lock
inc
stos
out
xchg
decb
shrl
stos
push
adc
lahf
xchg
clc
leave
and
jl
mov
mov
push
push
out
sbb
adc
xor
arpl
inc
div
decb
add
mov
or
roll
sbb
jl
push
mov
xchg
sbb
mov
fbstp
je
idivl
inc
mov
pop
xchg
in
mov
pop
pop
adc
je
cmp
sahf
mov
jl
stos
sahf
cmpsb
mov
in
xchg
icebp
jns
dec
push
xor
mov
cld
scas
repz
out
and
shr
push
jo
jmp
outsl
mov
adc
and
cmp
imul
in
out
jle
in
inc
pop
repz
shlb
das
addr16
mov
call
or
sub
add
daa
stos
push
or
in
movsb
mov
roll
shrl
js
cmc
cmp
inc
dec
adc
sbb
pop
mov
out
add
dec
pop
push
mov
sub
imul
push
aam
loopne
and
cmp
pop
mov
in
rcll
push
mov
pop
jo
mov
out
and
into
sub
cmp
push
adcl
imul
negb
add
ds
mov
adc
mov
inc
aad
mov
imul
fists
out
inc
aam
mov
in
sarb
cmc
pop
jno
xor
jp
pop
lods
out
nop
or
popa
pcmpeqb
inc
arpl
push
stc
push
jge
fsts
or
sahf
lock
stc
push
cmp
jl
lcall
cmp
loope
mov
sub
hlt
jp
and
sti
xor
sbb
dec
aaa
mov
inc
scas
mov
repnz
fcmovu
and
fsubrl
xchg
cmp
dec
or
jo
sbbb
leave
push
pushf
or
loop
notl
or
cmp
sub
daa
xchg
inc
ja
xor
jno
fadds
mov
lcall
add
xor
and
dec
aam
dec
das
pop
scas
shlb
fdivrs
xor
nop
aaa
iret
test
add
fdivr
push
jo
pop
xor
cwtl
mov
xchg
fidivrs
jb
mov
add
fisttpll
lods
mov
repz
jmp
or
pop
lea
iret
test
ficomps
xchg
xor
adc
dec
and
jo
add
dec
stc
fists
sti
shll
push
ss
test
icebp
sbb
popf
and
xchg
test
or
pop
and
call
fsubrl
jne
xchg
cmpsb
jo
loop
push
pop
mov
ss
or
push
sub
mov
cld
push
xor
mov
mov
add
pop
inc
stos
xchg
or
cltd
mov
mov
xchg
out
aaa
xchg
fdivrl
inc
push
pop
mov
test
out
out
jnp
lock
iret
test
cli
mov
sbb
adc
in
and
insl
cmp
cmp
or
popa
inc
push
pop
into
ss
push
nop
lcall
shll
in
mov
std
cwtl
insb
test
insl
jge
inc
pop
in
cld
scas
mov
loopne
outsl
daa
lahf
add
ficoml
les
mov
es
stos
add
stc
fwait
cmpsl
ffree
lods
rcrb
add
adc
pop
outsb
negb
adc
nop
je
jl
cmp
jl
loop
dec
inc
and
shrl
sub
mov
dec
cli
lret
outsb
mov
pushf
jp
dec
pop
fcompl
adc
rorb
lds
loop
mov
or
lds
dec
cwtl
icebp
dec
iret
mov
cs
mov
lock
fiaddl
bound
mov
jne
xchg
test
jnp
fwait
js
lock
aam
adc
add
ja
push
mov
mov
test
aam
int3
xor
ret
jns
inc
adc
sub
lea
loope
psrlq
sub
ljmp
icebp
cmpsl
sarb
enter
xchg
mov
fdivrs
int
leave
ljmp
les
int3
inc
sbb
and
cmp
inc
pop
cmp
jnp
jno
mov
sbb
test
inc
aaa
into
xor
aaa
pushf
and
lret
jecxz
xchg
mov
lds
ficompl
loopne
rcrb
hlt
cltd
xor
ret
insl
dec
jmp
inc
push
cmc
gs
es
push
sub
std
adc
sub
xchg
inc
pusha
hlt
cltd
jae
stc
adc
iret
push
mov
hlt
ret
adc
into
lods
mov
test
outsb
xchg
xchg
outsl
bnd
and
sbb
lds
mov
nop
shrb
adc
pop
dec
dec
flds
mov
pop
pop
aad
cmp
xchg
mov
sbb
shll
mov
add
test
dec
push
addr16
scas
push
cwtl
loopne
mov
mov
jle
data16
jmp
cli
sbbb
test
pop
hlt
nop
cld
scas
mov
out
sbb
jno
jae
push
add
daa
xchg
aaa
fiadds
and
mov
out
pop
movsb
das
ret
jae
jecxz
cltd
adc
adc
push
cltd
lods
shlb
mov
sti
mov
lret
and
mov
test
es
icebp
jl
mov
cmpsl
loopne
jns
or
and
dec
cmova
jle
jo
jecxz
xor
xor
js
push
push
push
pop
adc
stos
xor
sarb
sbb
fstp
jle
push
mov
sbb
push
in
push
inc
sbb
shrl
in
and
popa
cltd
adc
loop
xchg
and
lods
addl
enter
divb
push
sbb
dec
loop
mov
or
test
imul
sti
sub
and
ja
add
dec
in
cltd
arpl
sub
fisubl
cli
jg
fimull
aaa
xor
dec
rol
rolb
sahf
jne
inc
pop
push
jmp
movsl
je
cmc
outsl
adc
scas
cmpb
mov
int3
and
sti
mov
clc
in
or
cli
pushf
popa
jbe
sbb
andl
in
jnp
xchg
ds
xor
or
cmp
push
test
fisubrl
int
sbb
xor
insb
andl
jne
es
and
mov
test
repnz
adc
mov
mov
xchg
lods
ljmp
and
out
mov
mov
pop
in
xor
pop
scas
fiaddl
ret
fisubl
aad
cmc
lock
add
in
ss
cmc
mulb
mov
jne
les
xor
adc
rclb
gs
pop
jmp
xchg
ja
int3
je
jle
out
into
and
addr16
push
insl
dec
cmp
fs
sbb
fwait
lods
outsb
add
in
mov
pop
push
xlat
jbe
shrb
push
std
xchg
cmp
fs
sbb
dec
fdivrs
adc
pop
dec
push
add
std
bound
jecxz
pop
stos
test
scas
mov
in
std
leave
xor
mov
pop
push
in
in
and
in
push
stc
cwtl
mov
jmp
mov
lahf
sub
movsl
xor
pusha
outsl
or
xchg
repnz
mov
adcl
test
movsb
cmp
cmpsb
sbb
ss
in
cli
dec
outsb
sbb
repnz
dec
adcb
arpl
jg
sahf
out
mov
push
repz
pop
insl
xchg
in
std
mov
sarl
add
pop
sub
jg
dec
pop
sbb
dec
repnz
mov
or
stc
rolb
mov
enter
xor
jp
daa
movsb
in
fstl
mov
pusha
inc
data16
xchg
fdivrp
xlat
daa
cmp
movsl
xchg
mov
fidivrl
fidivl
mov
add
cmpsl
jae
xor
pop
add
lcall
fstps
cmp
xor
mov
cmp
dec
sub
xchg
xor
lahf
mov
sub
vpshufhw
cs
icebp
mov
pop
mov
jae
xor
inc
dec
imul
xor
adc
push
inc
inc
adc
lret
arpl
test
flds
repz
or
insl
mov
xor
or
cmpb
inc
aas
ret
jmp
aam
mov
dec
push
sub
add
aaa
subb
std
xchg
mov
outsb
adc
call
xchg
add
cmp
ret
sub
add
iret
loope
mov
dec
mov
cmpsb
imul
cmpsl
sbb
mov
cmp
sub
pushf
jmp
jae
jge
cwtl
lret
jmp
in
adc
lds
xchg
outsl
mov
mov
insb
inc
sbb
repz
cmpb
or
add
lods
sub
in
test
ret
jno
mov
divl
cltd
inc
xlat
pop
orb
out
mov
sarb
rorb
mov
pop
ret
lods
pop
inc
add
sub
mov
rclb
fdivrs
loopne
js
xor
cmpsl
inc
jnp
lret
sub
adc
cmp
dec
dec
pusha
into
cmp
hlt
jge
dec
mov
push
ret
add
in
mov
scas
xchg
cmpsb
mov
ja
sbb
mov
stos
aas
outsb
xchg
jle
mov
and
test
and
mov
outsl
inc
pop
mov
cmpsb
les
mov
add
pop
xchg
add
sub
cwtl
aaa
push
mov
lds
roll
or
icebp
adc
pushf
scas
cmpsb
push
push
cld
sbb
stos
sub
mov
add
out
xchg
and
jnp
mov
dec
dec
imul
out
popa
icebp
fld
push
cs
xchg
push
add
pop
push
ja
js
ficompl
pop
or
lret
test
icebp
ret
mov
mov
push
lret
sarb
mov
mov
icebp
adc
enter
xor
insb
ljmp
repz
dec
repz
mov
outsl
stos
pushl
cli
cwtl
cmp
cmp
pop
es
push
mov
adc
add
xor
cwtl
das
mov
fnsave
add
or
arpl
movsb
cmpsb
test
ficoms
mov
test
jb
stos
outsl
push
insl
stos
sbb
mov
xchg
push
xor
outsl
jmp
inc
or
sub
stos
add
ss
mov
sub
lret
jae
xchg
out
jns
dec
cmpsl
sub
pushl
push
xchg
js
mov
add
int3
push
jne
pop
mov
xor
mov
push
daa
fdivrl
fists
or
movsl
addl
fmuls
push
lea
mov
clc
int3
fwait
and
pop
dec
lcall
and
adc
je
xor
mov
push
lcall
xor
out
adc
repnz
bound
lea
lahf
xchg
dec
int
cmc
mov
test
mov
scas
push
cltd
and
xchg
mov
sbb
lds
sub
pop
lods
pop
fdivrl
mov
fmul
mov
xchg
in
push
add
or
outsl
mov
adc
adc
mov
inc
mov
jg
xor
out
push
jo
in
test
push
pop
in
mov
jns
or
sbb
pop
adc
dec
out
jg
fcoml
scas
fistpll
sub
int3
pop
test
push
test
mov
xor
sbb
loop
movsb
pusha
mov
fs
jp
sbb
add
mov
movsb
and
cmp
shrb
iret
loopne
push
and
mov
fldt
jb
mov
add
stc
nop
sub
lcall
push
xchg
loope
loopne
mov
push
ss
shrb
push
lock
sbb
lret
adc
inc
jne
in
adc
mov
xchg
or
repz
out
cmpsl
outsl
add
cmpsl
push
outsb
std
iret
jo
fsubs
mov
mov
stos
cwtl
stos
sub
sub
xor
shrb
xor
bound
cmp
rolb
mov
jecxz
sahf
icebp
pop
cli
push
hlt
mov
cwtl
sbbl
cs
xor
xlat
dec
and
jle
mov
icebp
into
pop
add
cmp
and
je
imul
inc
std
icebp
push
out
xor
push
repz
inc
fnsave
loope
in
dec
stos
sbb
adc
add
push
mov
pop
clc
adc
mov
sbb
adc
inc
xor
and
popf
sub
stos
mov
inc
inc
jge
bound
fnstenv
add
dec
in
cltd
xor
lret
push
sub
testl
mov
jno
add
xlat
mov
sub
xor
test
push
je
push
out
jp
cld
cmp
js
mov
xchg
mov
sub
xorl
rorl
aad
cltd
cmc
shlb
lds
imul
and
sti
stos
push
negl
mov
hlt
mov
cwtl
rorb
sahf
int
and
add
xchg
mov
add
adc
cltd
xor
pop
mov
hlt
shlb
mov
cli
cmp
out
ds
call
rcrb
imul
insb
cli
repz
or
imul
stos
sarb
and
jae
sbb
dec
mov
inc
enter
and
das
addr16
and
mov
out
mov
pushf
pop
rcrl
cmp
xor
xchg
push
js
test
out
test
shrl
xor
icebp
ds
psllw
add
mov
pop
sub
xchg
mov
jl
enter
pop
js
mov
push
inc
adc
outsl
mov
xchg
movsl
cld
inc
mov
jp
xchg
push
outsl
jecxz
mov
and
in
lahf
fldt
or
xor
xor
jl
xchg
push
mov
xchg
shrl
jne
push
fnstenv
test
sbb
leave
mov
dec
xchg
add
and
lahf
add
mov
pushf
pop
xor
push
iret
and
add
out
sti
daa
repnz
dec
mov
xchg
mov
stos
and
mov
cmpsl
inc
stos
mov
xor
in
mov
icebp
jecxz
dec
out
call
insl
cmp
scas
pushf
xor
xlat
pop
dec
inc
pushf
mov
ljmp
mov
aaa
push
enter
push
popf
loopne
filds
fcoms
test
pop
mov
push
cmpsb
arpl
mov
cltd
add
cmc
lahf
out
sti
rclb
mov
cmpsl
mov
sti
adc
sub
jmp
js
mov
in
gs
call
inc
scas
push
loope
sub
cmp
jecxz
sahf
xor
popa
outsb
call
call
push
insl
fistl
sub
cmp
mov
shlb
add
je
call
or
jecxz
sbbb
inc
and
inc
push
jecxz
and
add
sti
jbe
inc
sbb
inc
scas
and
aaa
xchg
cld
out
mov
cltd
lods
cli
inc
imul
mov
cmp
pop
inc
mov
push
not
cli
cmp
sahf
xor
cmp
mov
fsub
mov
mov
cmp
push
cmp
je
or
push
rolb
jns
pop
ljmp
xor
xchg
jge
push
and
aad
hlt
mov
xor
xchg
mov
mov
dec
adc
aas
ljmp
mov
pushf
scas
sbb
imul
in
sbb
aam
cmpsb
or
or
inc
mov
lret
ljmp
jbe
cmp
or
jne
mov
fistpl
push
mov
xchg
pop
test
sbb
sub
mov
subb
shlb
and
lcall
mov
cmp
and
inc
inc
dec
push
jg
insb
lds
lea
pop
out
sahf
xor
incl
mov
lret
fldcw
sbb
jle
sarl
inc
insb
imul
xchg
mull
ret
dec
cmpsb
imul
xor
pop
imul
sbb
mov
cltd
or
mov
xor
insb
jnp
push
inc
mov
mov
hlt
inc
and
mov
or
lods
imul
js
mov
push
into
mov
lcall
xchg
jbe
in
jg
pop
fisubl
scas
and
subb
mov
adc
and
xchg
pop
dec
test
cmpsb
cs
cmp
pop
pop
je
sub
jg
and
jl
inc
jnp
ja
stc
mov
rcl
and
adc
push
divb
cmp
sahf
jne
xchg
push
cmp
xorl
ljmp
xlat
xor
mov
imul
lcall
jnp
fsubrl
add
lcall
jns
push
ds
adc
das
pop
jmp
std
test
jne
cmp
les
inc
sbb
je
inc
mov
and
pop
pop
add
int
cs
loop
popf
in
mov
mov
popf
mov
sbb
mov
push
jne
lods
lds
ffreep
test
movsl
mov
inc
test
sahf
and
mov
test
dec
scas
addr16
scas
inc
rorl
push
sub
jae
mov
dec
jecxz
and
jae
jmp
sbb
outsl
in
push
in
and
push
repz
movsb
sti
and
push
in
dec
push
xchg
inc
lea
stc
ds
sbb
es
js
sti
das
mov
sbb
xor
fdivr
rorl
mov
adc
add
sbb
test
cmp
or
mov
nop
xlat
stc
sbb
cmpb
xchg
sub
add
arpl
xchg
mov
lea
add
clc
xor
shrl
inc
or
sti
sub
dec
scas
adc
pop
inc
loopne
pop
push
fisubrl
mov
sub
xchg
fmull
add
stos
xchg
jmp
xor
mov
mov
stc
push
inc
adc
add
pop
repz
add
mov
data16
addb
jns
dec
mov
lret
cmpsl
aaa
jae
in
add
cmp
outsl
mov
adc
aaa
cwtl
repz
fisubrs
das
inc
pusha
mov
shrl
inc
cltd
inc
test
andb
cmp
js
fistps
push
popa
rorb
adc
sbb
les
aaa
sbb
fs
loopne
loope
fwait
lods
mov
fimull
jne
sub
outsb
xchg
add
jb
jno
adc
call
mull
shll
not
jno
inc
push
ss
in
loop
sbb
pushf
sbb
xchg
fisttps
or
mov
mov
sub
mov
xor
std
xlat
popf
and
push
push
fwait
xor
sbb
pop
add
push
nop
daa
xchg
mov
repnz
ret
hlt
lods
jne
or
subl
out
lea
sbb
lea
xchg
mov
xor
add
scas
and
sub
mov
inc
test
adc
shlb
ror
dec
mov
jnp
fwait
or
pushf
aad
xchg
inc
cmc
adc
cmc
jmp
insl
frstor
mov
lcall
and
mov
mov
lret
xchg
sbb
sahf
inc
std
mov
icebp
sahf
cltd
pusha
mov
mov
cmp
pop
and
inc
push
addr16
push
or
aad
mov
mov
cmp
xchg
call
fwait
repz
pop
adc
lcall
push
mulb
in
dec
in
dec
or
jo
pop
sbb
cmpsl
mov
lret
mov
fisubs
in
add
loopne
dec
push
and
ret
jp
icebp
mov
lret
mov
cwtl
jns
push
icebp
shlb
add
mov
sahf
mov
out
insl
mov
movsb
lods
sbb
adc
cwtl
das
xchg
addl
push
mov
popf
pop
xlat
bound
stc
popf
push
and
jo
mov
cmc
in
pushf
imul
push
add
mov
jmp
out
lods
jg
imul
daa
xchg
xor
xchg
mov
and
xor
imul
fistpll
gs
and
out
insl
mov
jb
test
xchg
iret
fistpll
loop
sbb
mov
mov
xchg
mov
nop
rcll
dec
dec
std
add
das
ljmp
push
xor
andb
add
fcoms
push
cmc
daa
adcb
sbb
fwait
xchg
sbbb
and
jo
jno
stos
call
rclb
jo
xor
jecxz
cmpsl
xchg
lock
loopne
movsl
arpl
les
or
test
pop
jmp
cmp
mov
in
test
jge
mov
pop
pop
repnz
jns
gs
xor
sahf
loopne
adc
stos
mov
rorl
add
mov
mov
loopne
push
dec
and
fnstcw
inc
sub
sbb
fwait
mov
pop
imul
mov
cmpsl
mov
idivb
dec
push
ds
shl
push
add
pop
faddl
movsl
cs
jg
mov
sub
repz
adc
repnz
test
icebp
shlb
sbb
stos
push
dec
pusha
jb
jp
or
cs
decb
jmp
xchg
pop
jb
xchg
inc
leave
fsts
popa
clc
adc
scas
xchg
in
lcall
jo
lods
loope
adc
lods
xor
cmp
jnp
mov
outsl
ss
push
mov
pop
repz
shll
clc
inc
jbe
pop
outsb
add
xor
push
fucomp
mov
push
or
repz
push
cmpsl
sbb
in
jmp
fucom
xchg
cmp
cmpb
adc
mov
cmp
into
push
or
sbb
push
adc
ss
movsb
push
inc
jb
lahf
js
hlt
loope
adc
mov
pop
push
pop
mov
stos
mov
add
and
test
lret
or
cld
int3
outsb
loope
and
shlb
bound
pop
hlt
and
sub
pop
fidivl
and
cld
inc
cmpsl
rorb
push
cltd
and
mul
mov
jp
sbbb
xlat
mov
inc
imul
push
sbb
pop
mov
cmpsl
lods
lahf
in
mov
adc
xchg
data16
inc
dec
inc
lahf
and
or
jo
cmpsl
dec
ret
xchg
jl
aam
xlat
lret
inc
jle
test
sbbb
call
jae
fldenv
aas
add
cli
pop
mov
rcrb
pusha
mov
ds
inc
jmp
cltd
outsl
add
repz
cmp
pop
adc
movsb
cmp
aam
test
inc
in
xchg
adc
add
test
lret
test
enter
cmp
cmpsb
pop
sbb
int3
pop
fisubl
inc
inc
outsb
ss
cmp
push
jo
call
mul
ljmpw
and
push
mov
xor
cmpsb
arpl
jmp
push
xor
insb
push
xchg
leave
pusha
ret
js
movsb
sub
fwait
lahf
lcall
xchg
mov
pop
cmp
into
push
xchg
pop
call
clc
jmp
loopne
xor
shr
test
shr
or
mov
in
xchg
lock
iret
sub
sbb
pop
adc
outsl
adc
shrb
xor
hlt
jno
jne
mov
loop
aaa
popa
inc
into
iret
cmp
cld
jno
sub
cmp
xchg
or
jns
imulb
xchg
or
inc
and
imul
ss
mov
xchg
ljmp
shr
xor
test
mov
call
test
sbb
gs
stos
shlb
jae
push
mov
adcb
inc
pusha
sub
sbb
fdivs
pop
loope
jno
xchg
test
add
test
xchg
cmp
jno
xor
xlat
and
loop
int
xlat
cwtl
das
or
test
aam
ja
fisttpll
cmc
push
or
lret
lret
or
loop
lods
mov
enter
jecxz
fstpt
jecxz
push
out
sbb
cmp
jbe
mul
mov
lahf
xor
rcrb
in
lret
sbb
into
test
cmp
outsb
sbb
and
popf
inc
or
inc
jg
xchg
or
cwtl
fstpl
out
popa
push
sub
push
les
dec
andb
rcl
push
imul
ss
inc
cmp
push
mov
cmpsl
sbb
jg
das
sarb
shll
pop
mov
dec
cmpb
mov
shlb
or
xor
add
dec
pop
mov
loope
push
movsl
or
scas
incb
cmpsb
test
add
or
cmp
leave
xor
lock
pop
sbb
push
push
inc
lods
xchg
xchg
imul
ret
mov
sbbb
call
push
movsl
fbld
fmuls
out
push
inc
frstor
fs
xchg
sbb
ret
adc
outsb
leave
outsl
ja
mov
rolb
call
divl
inc
stc
mov
cmp
xor
mov
stc
stc
push
imul
cmp
lds
jmp
mov
mov
outsl
in
movsl
xchg
nop
lods
inc
add
lea
cmp
push
inc
inc
fs
jnp
push
icebp
scas
bound
inc
sahf
or
scas
cmc
daa
xchg
dec
mov
cmp
jns
mov
idivl
mulb
sahf
stos
mov
sbb
xorb
sub
cmp
mov
xchg
jmp
int
and
dec
xchg
inc
lock
xchg
dec
ret
mov
xchg
sbb
jl
js
rep
mov
dec
stc
sahf
fldenv
sbb
shr
dec
ret
push
and
mov
xchg
mov
or
inc
cs
les
fistl
es
cmp
and
inc
cwtl
jp
outsb
loope
bound
hlt
insb
mov
and
sbbb
out
xchg
cmp
lret
dec
fdivrl
dec
bound
ljmp
add
jae
sbb
out
mov
fsub
int3
in
mov
ja
pop
stos
jae
xchg
cld
xchg
pop
rcrl
pop
add
mov
dec
arpl
fstp
call
mov
ret
icebp
ljmp
pusha
inc
add
js
adc
sub
mov
cmc
mov
cmp
cmc
mov
addl
or
out
inc
add
aaa
fmul
push
popf
stc
clc
out
xchg
push
mov
xor
out
sub
inc
popf
mov
nop
sti
dec
pop
fldl
out
add
pusha
loopne
mov
sbbb
cmc
jnp,pt
in
add
xlat
adc
std
hlt
dec
out
jns
negl
or
cmpsl
mov
or
addb
insb
shlb
das
add
fildll
aam
mov
push
insb
jo
js
sahf
mov
shll
iret
popf
stos
inc
data16
sti
sbb
jmp
out
std
push
xor
clc
fcomip
cwtl
mov
nop
inc
shll
lea
sub
inc
arpl
fwait
xchg
add
ja
xchg
sbb
add
icebp
test
icebp
dec
dec
lret
aas
out
iret
insl
int3
and
mov
ds
and
aad
clc
popa
inc
testb
xor
dec
loope
mov
fmuls
xlat
nop
push
or
mov
aam
test
movsl
inc
jo
xor
cmp
ret
dec
data16
test
push
adc
sbb
fdivs
cmp
mov
in
andb
jne
xlat
mov
orb
mov
inc
icebp
mov
adc
imul
push
testl
sarb
sub
xor
push
sbb
adc
jae
mov
lock
pop
cmp
inc
xchg
inc
xchg
jno
call
cmp
pushf
fwait
cmpsl
ret
lret
xor
sahf
mov
add
mov
sbb
adc
cmc
xchg
push
mov
repnz
mov
jg
xlat
sbb
aad
sub
push
inc
push
mov
xor
loopne
push
mov
push
push
push
mov
mov
push
adc
ficoms
pusha
pushl
dec
lahf
push
call
es
repnz
icebp
shrl
dec
fistpll
shll
loope
popa
push
iret
sub
ret
cmp
jb
jecxz
xor
aaa
idivl
cmp
sahf
dec
dec
dec
mov
cmp
aam
lret
pop
lock
fcomps
sub
mov
ljmp
or
pop
loopne
jle
cmp
push
cmpsl
cli
into
lods
add
jge
mov
pop
ret
lds
iret
pop
out
or
sub
xchg
lods
idivl
int3
mov
out
pop
aaa
dec
mov
lcall
clc
push
mov
or
lahf
pop
xchg
je
mov
cmc
sbb
lods
fs
insb
jg
sbbl
add
and
push
int
or
sbb
insb
imul
faddl
cmp
sahf
add
rcr
pop
addl
pop
cmp
mov
xor
mov
enter
xchg
addr16
sarb
or
adc
cs
addr16
jo
repnz
imulb
cmp
sub
das
ret
or
push
jmp
mov
jo
pop
ret
nop
adc
cmp
mov
or
jmp
fadds
loope
or
mov
mov
and
jb
cmovg
jg
test
mov
push
fwait
inc
in
mov
xchg
stos
mov
into
out
push
add
xchg
leave
jbe
enter
jns
adc
mov
cltd
push
sub
mov
mov
xor
and
and
mov
pop
push
outsl
das
cmp
add
fidivs
scas
sub
in
test
daa
or
push
cmp
imul
inc
int3
hlt
mov
jmp
inc
sbb
decb
lock
jge
in
pop
adc
xchg
mov
in
dec
mov
sub
leave
in
das
and
sbbl
push
mov
add
add
inc
sbb
cs
dec
pop
cli
rcrl
sbb
call
sub
pushf
scas
sub
mov
test
push
xchg
lods
into
out
pusha
pop
jge
mov
cmp
mov
xchg
mov
fnstcw
and
hlt
mov
stc
mov
cld
xchg
sub
and
pop
pop
ds
jle
dec
mulb
aam
roll
jbe
stos
lods
lahf
mov
fidivl
add
jae
mov
dec
jb
mov
jle
je
cli
sub
int
dec
add
sub
jne
in
orb
inc
push
xchg
addr16
cmp
dec
pop
push
icebp
leave
xor
popa
in
mov
fld
std
aas
cmp
mov
int
popl
jo
sti
movsb
pop
scas
and
xor
idiv
daa
jle
sbb
sub
addr16
mov
pop
addr16
or
push
cmp
xlat
enter
lods
hlt
cmpsb
std
rcl
in
jae
xlat
mov
mov
out
mov
std
xor
popa
out
rcl
and
add
mov
push
push
mov
pop
lea
scas
divb
mov
fwait
test
fldl
push
cmpsb
cmp
mov
int
xchg
cltd
xor
xor
cmp
int
adc
mov
jnp
sub
pop
mov
inc
addl
mov
fisubrs
dec
jbe
loop
ljmp
inc
stos
int
pushf
in
hlt
adc
mov
sti
xchg
xor
xchg
dec
pop
ficomps
movsl
mov
ss
js
jecxz
pushf
negb
mov
mov
mov
jmp
movsl
lret
xrelease
inc
cmpsl
scas
fcoms
xchg
push
dec
bound
int
push
sub
lahf
mov
mov
roll
icebp
stos
dec
loope
icebp
sarb
aam
pop
xor
xchg
xchg
popa
mov
and
xchg
daa
sub
rorb
mov
or
cmpsb
inc
adc
insl
lods
popa
dec
call
jne
xchg
lcall
push
in
adcl
fs
cwtl
cmp
jb
add
dec
lods
pop
repz
mov
rorl
stos
add
lea
les
push
stos
add
into
out
and
xchg
in
imul
or
lret
xor
ljmp
out
mov
mov
push
lods
or
pop
xor
mov
push
ds
leave
xor
and
gs
xor
ja
aas
xchg
scas
cwtl
cmpsl
aas
testb
jb
cmc
clc
aam
negl
sbb
insb
arpl
push
dec
pushf
outsb
or
sbb
push
rcll
fbstp
sbb
out
xchg
pop
xchg
dec
lea
sub
incb
mov
lahf
aad
lds
and
pop
mov
push
shl
call
dec
add
je
js
addr16
pop
lea
pop
mov
lock
sti
shrl
mov
aaa
dec
or
mov
in
mov
or
loope
jae
and
jae
rcl
jae
xchg
add
test
pop
mov
xchg
movsl
sbb
push
outsb
mov
xchg
sub
mov
cli
inc
sbb
pop
push
ret
mov
inc
ja
mov
rcl
push
pop
fnstsw
push
mov
nop
mov
mov
mov
lods
pop
and
sbb
cmpsl
and
iret
jecxz
cmp
adc
mov
call
sbb
inc
jecxz
or
mov
mov
push
adc
outsb
rclb
jns
adc
decl
loop
ljmp
xor
les
sbb
push
xor
xchg
imull
pushf
jl
cmpb
add
xchg
inc
pop
push
rorl
lret
popf
mov
jl
add
cmc
cld
cli
adc
in
jno
or
inc
xlat
imul
clc
or
cwtl
daa
sbbb
mov
jae
in
xchg
push
sub
in
dec
or
sbb
addr16
push
jno
mov
je
or
adcb
mov
test
xor
pop
and
jmp
iret
push
int
mull
sub
cli
and
into
push
jmp
ss
repz
cld
push
mov
scas
and
pop
outsb
fdivrl
xchg
dec
repz
jle
les
clc
cwtl
out
cmp
or
dec
inc
xor
cmp
bound
pop
and
iret
cmp
lods
add
xchg
pop
scas
mov
jmp
mov
mov
int3
es
ficomps
sti
add
adc
lock
je
das
out
mov
xchg
xchg
sbb
jns
add
add
pmulhw
xchg
or
hlt
mov
lcall
pop
out
imul
add
pop
xor
xchg
push
sub
mov
mov
dec
dec
pop
ret
popf
mov
cli
dec
stos
movsl
add
shlb
xchg
pop
inc
jecxz
xchg
stc
push
loopne
test
xor
and
mov
sbb
icebp
xor
movsl
test
mov
mov
push
ljmp
divb
not
repz
inc
or
add
jecxz
and
xor
push
and
xchg
loopne
jnp
xchg
sbbl
ljmp
sbb
das
icebp
movsl
jnp
jbe
lock
cmpsl
mov
inc
cwtl
imul
popf
stc
fcompl
fdivs
lret
ret
pop
jp
jmp
sti
dec
jo
pushf
fdivrs
jmp
scas
sbb
mov
mov
fstl
cmpsb
sub
stos
jno
jge
sub
adc
lcall
jb
stos
inc
sub
test
mov
sub
adc
push
aad
test
outsl
mov
push
sub
pop
test
sarb
pop
pop
pop
cltd
cmp
rcrb
add
hlt
xor
or
inc
xchg
in
cmc
arpl
cmc
jmp
out
inc
xlat
and
hlt
addr16
xchg
jae
jecxz
test
push
sub
dec
testl
cmp
out
push
cmpsl
cmp
adc
push
subl
insl
pop
mov
sti
xchg
xor
sbbb
aam
subl
fnstenv
popf
out
add
loope
sbb
add
gs
pop
xor
insl
sub
insl
test
pushf
call
xor
shlb
int3
loopne
xor
popf
jg
pop
mov
inc
and
stos
or
sub
mov
shl
mov
xor
sub
or
stc
inc
sbb
aaa
lods
mov
int
aam
xchg
push
mov
sub
xor
ljmp
clc
stc
pop
enter
loope
mov
cmp
leave
or
enter
cli
fsubl
ret
mull
scas
sub
outsb
add
mov
jo
push
rcrl
lahf
lods
clc
push
inc
rolb
mov
ds
stos
push
xchg
adc
pop
mov
out
fstl
jbe
sub
mov
cld
mov
movb
dec
in
roll
pop
push
sub
xor
pushf
in
xor
or
stos
xor
mov
nop
cmp
xchg
mov
jo
jecxz
int3
cmp
lret
cld
loopne
pop
imul
cmp
mov
lea
ror
scas
mov
testl
stc
ja
imul
add
push
inc
or
mov
lock
popf
sarb
imulb
or
or
fisttpl
je
dec
and
adc
nop
adc
shrl
push
ffree
adc
std
bswap
or
xchg
xchg
jb
add
xlat
xchg
ret
push
inc
inc
in
xorb
icebp
es
fwait
mov
in
js
popf
cltd
shlb
fidivrs
and
popa
lret
popf
sub
mov
pop
das
je
lcall
cmc
adc
or
loop
sbb
inc
add
fisubrs
call
sub
and
ss
push
outsl
cli
xchg
out
mov
mov
inc
cmp
ret
mov
cld
mov
sbb
cmp
mov
cmp
fcmove
rcrl
aam
mov
jmp
into
leave
push
cltd
sarb
in
inc
or
xor
inc
mov
nop
mov
cmp
dec
les
pushf
icebp
sbb
sbb
outsl
push
stos
mov
ja
lea
add
cltd
sub
inc
inc
arpl
inc
push
popa
test
adc
clc
in
jnp
mov
adc
in
stos
aas
lahf
adc
loopne
mov
in
pop
in
in
roll
mov
or
xor
pop
std
xchg
dec
sbb
fs
movsb
cs
rcrb
sub
cmp
mov
push
pop
call
add
rcll
jecxz
jnp
pop
xchg
ficomps
jne
push
jg
mov
pop
call
pushf
xor
stos
add
mov
cmp
sti
add
mov
data16
into
loopne
enter
dec
in
fwait
push
decb
out
xchg
jae
inc
push
jge
fs
mov
sahf
xchg
sub
ret
dec
rcrb
int3
mov
ror
sub
cmpsl
fcoms
cwtl
call
cmp
push
ret
or
xchg
pop
sub
jl
mov
int
lods
inc
dec
daa
test
and
jnp
sub
rol
push
inc
lcall
inc
fsubl
lea
mov
test
xor
cmpsb
sbb
mov
pop
pop
jmp
andb
sti
mov
lcall
add
sbb
rol
pop
hlt
sahf
out
ret
test
insl
out
dec
test
scas
out
add
lret
push
lods
cli
push
adc
lods
sbb
mov
icebp
das
lock
and
outsb
daa
or
mov
out
add
push
ds
xor
inc
mov
cmp
inc
cltd
outsb
fisubs
imul
popf
mov
lret
or
lret
addr16
push
cwtl
and
mov
das
mov
mov
mov
movsb
lods
imul
or
or
push
pop
pop
jmp
aas
mov
outsl
scas
je
lret
mov
dec
mov
xchg
stc
inc
xor
mov
in
push
fs
xor
daa
loope
pop
hlt
lahf
inc
sub
divb
push
jns
inc
adc
mov
add
mov
cmp
adc
push
das
imul
and
mov
adc
xor
lods
push
inc
pop
inc
xchg
xchg
cmp
out
ja
pop
xchg
pop
dec
fmuls
aad
dec
sub
mov
sub
lea
xor
xchg
mov
push
mov
repnz
xorl
in
fists
cs
cmp
in
imul
imul
gs
dec
inc
cmp
inc
mov
add
or
loopne
sub
inc
pop
jne
daa
leave
fldcw
cmp
icebp
test
lea
sti
jbe
sub
aad
adcb
mov
add
jb
sub
push
out
scas
imul
push
fwait
dec
xor
mov
insl
js
scas
stc
sub
push
push
stos
repnz
and
popa
ret
fnsave
mov
fsubrs
mov
mov
outsb
push
jae
je
adc
fistpll
ret
push
sub
cs
mov
mov
ljmp
sbb
std
push
inc
notl
arpl
leave
int
ja
pop
xor
push
and
jge
test
push
int
sbb
adc
adc
cmp
add
inc
inc
mov
or
ss
pop
mov
mov
sahf
movb
xchg
cld
xchg
dec
ljmp
dec
aam
inc
push
movsb
dec
nop
xchg
push
jns
push
mov
leave
mov
push
les
rcl
pusha
ljmp
mov
and
push
out
out
cld
inc
out
subl
cmpsb
popf
mov
cmp
rcr
daa
lds
cmc
jo
daa
fcomps
jnp
lret
mov
gs
or
jg
sub
js
mov
xchg
outsb
xchg
icebp
dec
mov
ja
mov
inc
popa
cmp
cmp
cwtl
push
cmp
shrb
or
sub
repz
ss
inc
repz
add
mov
loope
fcmove
lods
int
dec
fs
jl
rol
cmp
push
iret
popf
pop
dec
push
jae
cmp
xor
xor
inc
adc
mov
test
inc
xchg
jecxz
mov
stc
cmp
xchg
pop
xor
xlat
pop
cmp
cmp
add
cmc
mov
adc
inc
or
mov
popf
inc
jb
js
cs
fs
lods
jns
dec
mov
push
call
xor
cmpsb
testb
add
sbb
out
sarb
divb
cli
daa
pop
pop
jb
int
fdivrp
repz
xor
xchg
or
adc
pop
jg
int3
ret
xchg
add
sub
stos
mov
mov
pop
xor
int3
mov
dec
or
shll
aas
dec
dec
push
inc
dec
loope
push
ljmp
xor
inc
jne
jne
push
movsl
mov
inc
sub
shl
hlt
jnp
jle
sub
into
sbb
cmp
sbb
add
adc
adc
std
jbe
mov
scas
jno
and
je
or
or
and
pusha
cmp
sahf
ja
add
ss
arpl
jne
arpl
stos
cs
jb
out
les
add
icebp
adc
flds
test
andl
js
out
push
je
cmp
sub
leave
add
or
outsb
pop
aad
dec
bound
hlt
jae
test
cmc
mov
and
xchg
push
out
jg
or
rorl
movsb
mov
dec
arpl
inc
xor
leave
sub
adc
sbb
hlt
lret
xor
push
jl
sub
or
ja
or
sbb
mov
imul
pop
jbe
aad
jae
sbb
testl
in
movsb
push
jae
push
hlt
leave
inc
adc
pop
xor
fdivrs
lret
cmpsl
push
aaa
push
hlt
test
dec
add
jg
pop
loop
pop
icebp
sbb
test
dec
fwait
mov
adc
in
inc
or
cltd
arpl
jbe
data16
loop
xchg
ret
arpl
mov
in
xlat
cmc
xchg
clc
loopne
and
rorl
mov
mov
sub
ljmp
ret
das
sub
sub
or
mov
clc
sub
mull
mov
adc
adc
or
jo
jmp
dec
clc
adc
insl
xchg
mov
jge
dec
xchg
mov
jp
cltd
rcrl
mov
les
cwtl
mov
push
pop
rcrb
divb
xchg
mov
fistpl
cmp
sbb
push
mov
sbb
inc
test
sti
jp
pusha
cmp
sub
fucom
jle
push
xor
push
aas
xchg
je
sbb
into
jbe
test
cmpsl
mov
pop
pusha
add
xchg
sub
mov
test
mov
outsb
mov
add
daa
push
fidivl
popa
jne
loopne
stc
lods
test
ja
mov
jno
cmp
lods
mov
mov
inc
mov
arpl
xchg
or
ret
cwtl
aad
icebp
push
push
jg
mov
pop
pop
shl
icebp
insb
ret
cltd
packuswb
dec
call
push
and
jo
and
fistpll
dec
lods
add
pop
cli
movd
lods
jmp
xchg
loopne
out
pushf
rcll
ret
sub
into
jmp
cmp
or
scas
and
aam
xor
lret
js
lods
mov
push
addb
popf
pop
iret
and
movl
or
pop
jle
adc
bound
mov
xor
xchg
xchg
arpl
insl
or
cmc
push
fdecstp
mov
sbb
stos
inc
in
ds
dec
rcll
xchg
scas
and
jecxz
lret
sarb
addr16
xor
out
adc
sub
mov
dec
jle
or
das
inc
sbbb
push
mov
inc
jecxz
pop
xor
movsl
in
ja
xchg
mov
popf
popf
xor
ds
enter
and
jmp
stos
cld
cld
mov
and
pushf
sub
enter
cld
xor
xchg
daa
popa
pushl
mov
jne
jbe
cs
enter
call
mov
loopne
loopne
xchg
add
test
add
lods
mov
dec
insl
and
mov
out
pop
outsl
test
xlat
or
or
inc
fisttps
push
push
add
fdivl
mov
mov
add
jge
icebp
mov
cmp
stc
lret
out
pop
cmp
mov
pop
mov
and
cmpl
pop
or
inc
je
add
xor
fs
lock
fsubr
mov
mov
sub
push
jp
mov
mov
mov
dec
jno
dec
pop
and
xchg
das
fwait
sti
add
mov
pop
inc
mov
sbbb
and
mov
in
xchg
adc
dec
pop
sbbl
sahf
sub
mov
test
mov
movsb
mov
fsubrp
xor
jmp
xchg
adc
xor
cmp
in
dec
sbb
loope
lock
das
repnz
pop
push
xor
mov
loopne
mov
xchg
rcll
or
push
mov
push
push
fsubrl
jne
enter
outsl
inc
mov
mov
pop
imul
dec
push
xor
movsb
lahf
and
jp
fidivs
jo
rcll
test
jge
into
mov
cmp
mov
ret
mov
xor
mov
mov
and
pop
sahf
out
cmpsl
test
jp
je
ffreep
imul
aaa
inc
sbb
rclb
pop
data16
push
jno
cltd
call
addl
repnz
inc
test
fildl
dec
inc
daa
fs
push
inc
or
and
pop
pop
sbb
fisubl
aas
add
inc
sub
adcl
xor
push
xchg
fcmove
dec
faddl
ss
test
addr16
or
in
in
repz
xchg
ficoms
test
jae
fiadds
push
popa
push
bound
fstpt
aam
subb
fwait
mov
or
add
fs
cmpsl
ss
mov
lock
scas
out
loopne
dec
add
out
test
pop
fisubrl
jle
jnp
setl
cs
push
test
push
aaa
adcb
scas
pop
rcll
ljmp
pop
and
sub
loop
nop
ds
pusha
add
loopne
je
es
push
call
jmp
movsl
inc
push
ja
in
push
stos
test
mov
rcrl
pop
cld
stos
pop
cmpsl
mov
mov
shlb
dec
adc
mov
hlt
iret
out
pop
lods
add
xor
sub
out
bound
inc
leave
mov
mov
mov
cmpsl
out
and
add
cmpsb
push
mov
pop
dec
mov
ret
pusha
or
xchg
ret
push
push
push
jbe
cs
clc
push
mov
mov
stc
mov
fistpl
sub
push
cmp
sarb
jecxz
xor
std
xchg
dec
in
adc
je
pop
mov
lcall
loope
fisttpll
sarb
and
andl
aam
pop
sub
cmpsb
push
shll
dec
add
leave
pusha
fstpt
pop
jp
stos
adc
scas
popa
and
mov
lret
jl
dec
in
mov
sub
mov
ja
mov
or
fcomi
mov
rclb
mov
nop
stos
pop
dec
adc
cmp
and
sub
jmp
xor
loopne
push
mov
mov
aaa
mov
in
incb
js
or
cwtl
dec
gs
inc
scas
xchg
bound
fs
fxch
fwait
or
sub
fisttps
aaa
int3
jne
cmp
adc
mov
cmpsl
and
mov
mov
sbb
cltd
stos
push
xor
sbb
xor
push
xor
in
testb
int3
mov
js
mov
sbb
sbb
idivl
push
insl
inc
fistpll
or
jmp
xor
dec
jle
sbb
jmp
je
notl
scas
or
daa
test
in
daa
scas
call
pop
test
xor
mov
test
jne
fwait
push
jp
mov
lahf
fstpt
xchg
inc
cmp
loopne
stos
cltd
push
or
fisttps
jns
dec
lods
jns
test
movsl
ja
mov
imul
iret
fucomp
lods
fstps
and
inc
arpl
cli
jmp
push
or
xlat
pop
pop
in
sbb
mov
cmp
popa
sub
push
push
lods
ljmp
mov
mov
adc
into
mov
aam
and
xor
jp
aad
push
test
push
or
and
lret
pushf
pushf
dec
and
std
lea
mov
je
das
mov
arpl
leave
dec
add
jle
inc
popf
add
inc
jl
jb
sarb
xor
xchg
dec
jp
bound
or
stos
lds
dec
movsb
xchg
xlat
pusha
rcll
cmpsb
in
xlat
mov
mov
cmpsl
pop
arpl
in
or
xchg
adc
aam
lock
filds
inc
lret
jns
daa
mov
shlb
push
mov
pop
rcll
ja
jbe
insl
in
dec
xchg
and
ss
xor
dec
imul
pop
mov
nop
repz
inc
dec
push
cltd
fsubs
pop
jmp
xchg
mov
xchg
call
mov
jle
cmp
test
xlat
xchg
pop
fistpl
and
xchg
sub
cltd
push
add
fadd
in
add
enter
aas
jmp
dec
mov
or
cmp
cmp
adc
or
ds
dec
mov
xor
fwait
add
pop
ret
hlt
sbb
xchg
mov
dec
mov
das
gs
pop
repnz
inc
test
pop
testb
rcrb
inc
sbb
pop
inc
lock
aam
clc
xor
stc
test
dec
aad
loop
sub
std
test
and
xchg
daa
ds
ss
enter
jo
cltd
je
roll
lret
xlat
outsb
mov
sub
mov
mov
fnstcw
or
fbstp
pop
leave
dec
movsl
je
pop
xor
mov
mov
stos
inc
in
or
adc
jle
jmp
dec
leave
aam
stos
inc
dec
cmc
adc
mov
loop
in
ret
xchg
jmp
mov
push
fmull
cs
cmp
fiaddl
pop
repz
roll
mov
adc
cmp
sti
pop
pushl
jecxz
cld
lret
aaa
stos
inc
aaa
xchg
xchg
push
adcl
sidtl
ss
out
out
xchg
mov
cmp
sbb
pushf
cmp
out
fwait
dec
rcr
js
add
arpl
dec
cmpl
movsl
gs
mov
ret
jecxz
dec
jecxz
push
inc
jecxz
fwait
pop
push
adc
xchg
xchg
xchg
mov
dec
cmp
aad
or
fsubrs
movsl
lds
sub
adc
test
fisttpll
or
lods
mov
fidivs
sarb
jns
stos
and
imul
ss
add
cmp
fdivrp
push
xchg
out
sbb
or
jg
movsb
test
sbb
add
jp
ds
cwtl
mov
or
scas
ret
out
xchg
test
data16
out
dec
aad
shl
test
lock
mov
and
push
xchg
stc
push
or
rolb
shrl
cli
pusha
mov
inc
in
and
aam
insl
or
testl
push
mov
clc
mov
daa
xor
scas
in
in
jno
frstor
inc
mov
nop
lahf
pop
nop
xlat
cmp
mov
loopne
xchg
popf
xchg
scas
inc
add
pop
hlt
push
call
jnp
pop
push
aam
xchg
sub
mov
jbe
push
outsl
call
push
mov
sarw
pop
out
pop
dec
and
xor
jle
mov
add
or
bnd
dec
xor
jb
sub
sbbl
lret
test
ficoml
mov
iret
clc
lahf
jne
aad
push
iret
mov
fists
or
int3
out
jno
out
dec
aam
test
mov
sub
scas
insl
dec
les
loope
xchg
ljmp
inc
ja
sti
inc
rol
ljmp
iret
jmp
cli
pop
gs
jo
mov
insb
movb
xchg
sbb
or
daa
imull
sub
gs
jg
push
dec
dec
lods
rolb
sbb
int
sbb
fbstp
call
push
test
inc
fdivl
jp
mov
xchg
loop
rorl
xchg
icebp
pop
sbb
lds
inc
iret
pop
xchg
cmpl
add
sbb
orb
sub
pop
hlt
adc
outsl
jp
idivb
sub
or
jmp
push
xor
cmc
adc
cwtl
xchg
shrb
int3
or
scas
lods
push
inc
hlt
or
inc
je
jl
add
out
out
aam
scas
jb
jb
sbb
je
scas
imul
ds
and
sub
and
pusha
iret
ret
imul
movb
jecxz
dec
push
dec
aad
dec
pop
mov
inc
xor
sbb
add
dec
and
add
test
js
cmpsl
cmp
fldcw
fnstsw
out
push
push
and
ret
mov
popf
aaa
or
cmp
mov
sub
push
sub
imul
inc
pop
sub
jle
pop
cmpsb
notb
popf
repz
and
or
pop
outsb
and
in
vcmpps
icebp
push
insl
cmp
int3
jg
mov
aas
jle
or
loope
sub
inc
lea
out
push
shlb
push
adc
loope
jns
mov
push
lret
bound
and
xor
ja
jb
inc
jecxz
mov
mov
mov
jg
outsl
jnp
mov
cmp
adc
addr16
mov
ret
sbbl
push
adc
sbb
or
ja
pop
stos
clc
rolb
dec
jg
shll
push
push
mov
aad
sub
in
lcall
fbld
leave
mov
scas
fsubrl
js
pop
lock
dec
adc
pop
fs
mov
arpl
adc
addr16
mov
cmpsb
test
xor
cltd
data16
push
mov
addr16
jne
enter
add
adc
push
icebp
inc
sbb
daa
jl
xchg
xor
mov
daa
pop
adc
inc
push
sbb
ljmp
inc
int3
imul
cmp
jno
enter
mov
aas
stc
test
mov
fisubrl
mov
lods
dec
aaa
filds
and
pop
adc
mov
and
rorl
stc
inc
mov
insb
jge
jecxz
jle
rol
jnp
fnstcw
rcr
jl
xchg
pop
xchg
jns
ss
int
test
inc
mov
popa
ja
add
add
cwtl
pop
adc
in
inc
push
dec
mov
pop
mov
pop
add
dec
pop
and
and
rclb
or
fdiv
and
idivl
dec
push
mov
pop
jle
imul
mov
sub
inc
aaa
fdivrs
mov
rorl
cld
jp,pt
lods
xlat
stos
rorb
sbb
push
movsb
test
mov
jb
cmp
call
shl
mov
sbb
mov
out
push
sbb
mov
lods
pop
lods
dec
dec
inc
adc
jge
push
in
pop
cmpsb
cld
inc
mov
mov
cli
sbb
dec
fildl
repz
push
outsb
add
pop
js
jle
and
into
sub
cld
dec
pop
jno
cltd
in
and
inc
xor
lock
dec
in
jne
pop
jmp
dec
mov
lahf
inc
jg
mov
fildl
adc
lods
sarl
sti
test
iret
loop
scas
fiadds
mov
pop
mov
shlb
cwtl
push
adc
xchg
outsb
inc
inc
mov
mov
jnp
add
faddl
jbe
pop
ja
jnp
aas
mov
out
xchg
mov
les
pop
adc
loopne
repnz
pushf
stos
push
addr16
test
adc
dec
and
inc
sarl
jp
sbb
inc
dec
mov
adc
xchg
jp
inc
sbb
inc
sbb
inc
xor
xchg
push
outsl
ret
icebp
in
outsb
daa
or
lods
push
movb
dec
iret
mov
pop
xchg
dec
imul
push
in
or
notb
mov
ljmp
mov
sahf
and
sti
push
jno
pop
dec
movsl
movsl
xchg
xrelease
mov
pusha
jp
es
aas
dec
out
sti
pusha
mov
mov
or
data16
dec
movsb
mov
cmp
pop
push
inc
cmpw
pusha
push
cmp
aam
mov
jb
hlt
loop
sarl
cmp
mov
loopne
mov
dec
xchg
lret
jmp
cwtl
sbb
sub
xchg
sbb
lcall
jge
adc
adc
add
or
inc
cmpsb
jp
int3
and
pop
dec
loope
je
mov
jmp
popa
js
decb
scas
int
enter
pop
sub
cmpsl
sub
call
jb
out
les
ss
sub
je
mov
push
add
sbb
mov
mov
scas
jno
lret
or
mov
push
arpl
pusha
ret
inc
call
xor
sbb
jmp
mov
andb
mov
sti
cmp
push
insb
out
shlb
adc
inc
sahf
mov
inc
pop
dec
out
dec
adcb
loop
leave
imul
gs
mov
cmpsl
repz
jmp
daa
mov
or
inc
fs
jge
les
stos
je
sbb
loope
jne
xchg
bound
js
mov
cld
xor
les
shrl
inc
mov
pop
aas
mov
inc
sti
adc
mov
or
inc
mov
add
inc
sbbl
mov
fildll
sti
and
inc
fstpt
jle
xchg
aad
jmp
repnz
mov
sti
jns
lock
jecxz
fldenv
mov
mov
scas
push
jg
jbe
dec
cmp
arpl
loop
movsl
mov
shrb
repnz
inc
sarl
mov
xlat
cs
jne
lods
fstps
addr16
and
cmp
sbb
adc
fcmove
shrb
adc
roll
loope
or
inc
push
frstor
int3
sbb
scas
addr16
fucomi
xchg
je
cmp
xchg
pop
inc
int3
lahf
cli
ljmp
push
jno
cli
xchg
and
inc
shrb
sbb
sbb
push
jmp
sbb
sarl
in
or
dec
cli
xchg
jl
pop
mov
inc
ret
cli
push
add
jne
pop
jb
push
jns
jo
fstpt
je
fiaddl
adc
lret
gs
test
hlt
xchg
fsubrp
outsl
cli
stc
ret
stos
mov
pop
xchg
xchg
xor
adc
imul
or
sub
mov
cs
sbb
mov
mov
xchg
xchg
adc
enter
adc
or
arpl
imul
in
movsb
push
xchg
adc
xor
jmp
push
es
cwtl
dec
add
sahf
in
dec
cmp
mulb
cmp
sub
jo
push
sub
mov
mov
ret
jl
hlt
pop
mov
add
dec
lods
mov
sbb
out
stos
pop
sbb
stos
por
mov
fdivrp
push
dec
test
cld
sbbb
sbb
imul
xor
sub
iret
test
lret
jae
mov
adc
push
scas
call
push
sti
xchg
bound
and
or
inc
cmpb
dec
repz
jo
xchg
test
cmp
pop
mov
mov
jle
push
mov
mov
aaa
push
lods
jne
fsts
mov
repnz
outsb
adc
insl
xchg
sub
cmp
mov
rclb
jmp
adc
push
ds
or
sub
push
push
adcb
inc
into
mov
jb
loopne
pop
call
fdivs
inc
pop
out
stos
mov
in
mov
stos
lds
shll
popa
jl
pop
and
leave
in
dec
lret
jbe
mov
cmp
popf
test
mov
iret
addr16
movsl
je
jge
xchg
rcrl
jl
outsb
mov
jg
sbb
cmp
push
xlat
outsb
clc
inc
faddl
in
jne
stc
roll
or
push
insb
outsl
loopne
adc
add
int
mov
mov
xchg
xchg
add
mov
cltd
lock
je
cltd
movsl
jmp
and
push
bound
inc
cmp
je
and
add
enter
pop
adc
sbb
mov
mov
push
jmp
jbe
push
sbb
xchg
lret
xor
into
push
cmp
mov
cld
push
mov
fsubl
xchg
fcom
push
mov
or
in
imul
iret
push
and
inc
xchg
add
mov
stos
sub
sub
mov
pop
ret
pop
jmp
adc
cmpsl
dec
mov
stos
push
sti
jae
sbb
mov
pop
loope
pop
sbb
pop
mov
insb
xchg
out
dec
rolb
jle
mov
mov
cli
dec
inc
sahf
cli
push
test
lock
hlt
ja
add
icebp
add
stos
lods
idivl
sbb
jmp
cmp
and
scas
fstpl
xor
xor
push
push
jp
adcb
sbb
int3
jg
push
fisttpll
push
jno
popf
pop
outsb
mov
jo
jge
fidivl
jle
cmp
rorb
jle
jmp
out
loop
fisttps
rclb
ret
pop
aad
arpl
mul
ja
enter
clc
sub
mov
mov
ret
adcl
xchg
sbb
xor
inc
and
inc
add
pop
dec
jecxz
fcom
out
fnsave
stos
fstps
outsl
pop
testl
cmp
lods
dec
insb
push
insl
inc
add
stos
rcll
xchg
enter
in
lret
or
mov
cltd
adc
push
fdivs
add
jg
sbb
aas
jl
mov
push
mov
xor
add
es
leave
mov
out
sbb
shr
sub
hlt
mov
adc
lods
cmp
das
ja
outsl
test
sbb
sti
stc
shlb
mov
pop
stos
sbbl
test
sahf
add
addr16
dec
adc
faddl
data16
mov
adc
out
mov
lret
sahf
imull
movsl
jmp
dec
xchg
adc
push
outsl
and
dec
icebp
jns
sti
idivb
add
cli
enter
add
push
out
add
les
or
loopne
dec
fcomi
jnp
add
mov
es
mov
cmpsb
fimuls
pop
sti
mov
or
cld
or
das
icebp
pop
lret
or
in
mov
sbb
pop
mov
or
and
cmc
cmp
add
and
movsl
adc
jb
mov
rolb
mov
adc
mov
in
or
inc
mov
xchg
push
inc
sahf
fsubl
bound
inc
push
sti
fcomip
mov
adc
or
ds
ljmp
sub
pushf
xor
loop
rcl
adcl
mov
adc
fnstcw
cwtl
push
rcrl
sub
imul
mov
stc
imul
mov
push
out
in
scas
jmp
addr16
pop
sbb
mov
cmpsb
sbbb
jo
jp
cmp
jecxz
in
pop
adc
pop
xor
sbb
testl
mov
and
and
dec
ja
pop
test
nop
das
xchg
inc
lds
xor
mov
push
mov
and
or
rcrb
xor
push
inc
rclb
sti
les
push
popf
mov
pusha
adc
in
popf
jno
aas
pop
cmpsl
xor
call
dec
dec
cmpsl
push
addr16
push
out
mov
into
cmp
push
add
sbb
cli
pop
push
add
or
and
fisubl
mov
mov
enter
clc
mov
lahf
jne
mov
cmp
pop
or
out
movsb
add
and
pop
sahf
xchg
imul
sub
and
pusha
pop
mov
outsl
out
fldl
int
mov
dec
dec
int
lahf
sub
pop
call
loopne
cmp
push
inc
or
in
sbb
sub
fisubl
mov
pop
sbb
push
int3
push
hlt
in
iret
xchg
sub
scas
incb
mov
testb
push
movsl
pause
sub
xchg
xchg
jo
mov
dec
pop
out
jl
inc
mov
movsl
inc
inc
xlat
insl
daa
ljmp
jge
cmp
xor
dec
jle
aas
push
xchg
pop
mov
loop
jne
movb
out
pop
aas
push
pop
popf
xchg
jns
std
das
js
stc
clc
das
inc
pop
loope
xchg
push
imul
inc
sbb
push
sbb
push
sub
scas
out
xor
iret
push
sahf
sub
xchg
sahf
pop
out
mov
jbe
or
or
cmp
push
jb
adc
pop
pop
dec
xor
and
mov
cmp
rolb
add
rcrl
dec
xor
jns
ljmp
xchg
pop
icebp
movsl
popl
sti
xchg
cmp
xor
mov
sub
xlat
aaa
into
pop
pop
xor
mov
or
sub
add
or
and
data16
dec
sub
loope
inc
and
fcoml
push
mov
icebp
cmpsb
inc
gs
lds
push
sub
jns
int
or
add
push
dec
push
xorb
test
cmp
js
dec
lcall
shlb
jp
repz
lds
idiv
jg
mov
ret
pushf
xor
push
hlt
mov
mov
xor
adc
dec
push
push
push
cmp
xchg
push
and
icebp
xchg
loope
or
mov
sti
ret
movsl
mov
and
and
mov
sub
add
ret
dec
fldt
iret
popa
aas
jl
ret
fwait
rcrb
imul
add
out
xchg
pop
lret
and
sbb
xchg
std
pop
cli
mov
int
ret
push
pop
rcll
add
mov
ficoml
xor
pop
mov
push
cmpsb
popa
push
fdiv
addl
jno
xorb
ja
cmp
xchg
push
js
or
insl
test
popa
jb
aaa
jmp
lds
test
aas
dec
loop
adc
cmp
xchg
mov
aam
movl
mov
pushf
cmc
in
insl
cmp
lret
cmp
fwait
sbb
popa
mov
or
inc
mov
jmp
loop
mov
test
repnz
or
loop
cld
xchg
cmp
sbb
sub
in
cld
dec
enter
lods
call
or
sub
push
popf
sarb
jb
or
jge
ret
lret
inc
clc
ret
adc
inc
clc
test
jl
push
jno
data16
push
stc
lds
aaa
push
xchg
jae
inc
xchg
jmp
jnp
cmp
daa
xchg
fcomi
adc
dec
fcmovnb
repnz
push
jg
fsubr
push
mov
mov
aam
and
xchg
js,pn
xor
repnz
xchg
mov
push
cmpsl
outsl
arpl
icebp
mov
sub
mov
ljmp
and
fwait
xlat
add
pop
call
or
ss
lods
out
push
popf
xor
adc
fstpl
cmp
jae
adcb
cmp
sbb
cmp
pop
pop
cmp
pop
inc
xlat
xchg
jg
pop
popa
mov
mov
pop
aad
xor
sbb
in
mov
cmp
add
mov
mov
cmp
testl
cmc
hlt
sbb
das
push
mov
sub
xchg
mov
fdivr
mov
mov
rcl
and
dec
in
pop
push
lea
or
jecxz
out
mov
or
imul
je
out
mov
sub
jo
or
fs
lea
imul
sub
push
insl
push
in
push
cltd
das
hlt
fisttpl
cmpsb
xlat
repz
push
xor
add
cmp
push
lahf
sahf
push
mov
loopne
jmp
cmp
mov
adc
mov
bound
pushf
pop
les
or
cltd
or
je
adc
iret
arpl
outsl
cs
jmp
add
dec
or
cmc
pop
adc
push
and
into
cmpsb
insl
sub
mov
into
and
or
sub
cmpsb
dec
mov
nop
andb
cmp
dec
dec
dec
ds
into
out
cmp
and
pop
xchg
mov
inc
pop
mov
pushf
repz
adc
loopne
and
xchg
jp
add
mov
mov
fnstcw
mov
test
enter
jnp
popa
pop
push
push
push
movsb
ds
push
mov
jmp
or
xchg
mov
cmp
xchg
lods
jle
leave
sbb
gs
push
mov
mov
jns
pop
xor
inc
hlt
out
inc
lret
and
adcl
jo
adc
aaa
cltd
fs
movsb
mov
popf
xchg
adc
xchg
push
arpl
pop
rclb
insb
mov
in
mov
nop
mov
stos
inc
movsl
mov
add
or
xchg
cld
std
lret
inc
push
arpl
test
jbe
shr
cmpsl
pop
pop
lcall
ret
jnp
cmpsb
lock
shrb
mov
xchg
adc
roll
jo
sbb
pop
outsl
lock
lock
add
pop
ss
in
push
lahf
or
and
shlb
pop
cmp
bound
adc
ds
pushf
not
sub
mov
es
scas
fidivrs
cltd
movsb
leave
sbb
loop
mov
add
xlat
xchg
jae
pushf
sub
sti
or
sahf
xor
adc
jge
lods
pop
sahf
fimuls
out
out
and
negb
or
pushf
aam
dec
xor
ficompl
cld
hlt
movsb
inc
add
dec
int3
ljmp
cmc
rcr
cmova
xchg
pop
cmp
mov
cmp
pop
sbb
add
aas
pop
out
mov
leave
pop
jg
jmp
xchg
mov
jp
pop
jg
es
aaa
push
push
mov
pusha
jb
sub
fs
bound
sbb
aas
mov
mov
mov
sbb
test
ljmp
repz
test
lret
rorb
clc
nop
mov
cmp
aad
cmovae
push
inc
pop
or
push
and
mov
mov
les
pop
adc
roll
inc
repz
pop
and
inc
mov
pop
loopne
sub
xchg
in
jnp
in
push
mov
mov
ret
pop
test
das
lods
les
insb
dec
pop
shrl
or
cmp
scas
mov
pop
pop
push
or
repz
into
pushf
jmp
push
xchg
push
and
addr16
jge
inc
in
mov
idivb
cmp
pop
int
fldz
int3
mov
dec
sbb
add
jne
push
push
notb
insl
mull
mov
popf
mov
lds
push
or
cmp
pop
cmp
cs
dec
sub
push
mov
iret
outsl
jnp
mov
push
lods
test
lret
xor
jne
shll
jnp
mov
lcall
lea
aas
adc
add
inc
cmp
jnp
pop
mov
adc
push
fsubr
sbb
nop
jmp
mov
mov
movsb
cmp
pop
lcall
test
stos
push
push
or
aad
mov
ret
inc
push
stos
push
loope
add
dec
ret
push
fisttpll
jne
inc
or
mov
xchg
sub
lds
dec
dec
shll
mov
data16
aas
loope
icebp
lock
push
rclb
pop
adc
insl
enter
fnsave
jae
inc
popa
addb
sbb
xor
shrl
xchg
jnp
add
clc
loopne
and
lahf
pop
sbb
lcall
and
cltd
shl
mov
das
mov
push
cs
push
and
sub
cs
in
mov
fmulp
call
push
dec
fdivrs
sbb
nop
mov
fists
pop
mov
inc
mov
fmull
les
test
or
pushf
mov
cmpsb
in
sbbl
mov
insb
pop
pushf
nop
mov
jge
mov
inc
add
pop
adc
and
add
sbb
adc
inc
jno
cmp
loope
inc
mov
fdivl
mov
push
fisttps
sti
fwait
sub
jne,pt
jbe
mov
sbb
xor
and
sbb
adc
into
jmp
sbb
push
and
iret
jno
add
mov
aad
mov
imul
repnz
push
or
inc
push
roll
mov
cmp
enter
leave
or
dec
or
repz
aas
cs
xor
pop
mov
jns
push
add
sub
sbb
movsb
cmp
push
adc
fcmovnbe
sti
mov
gs
mov
xchg
dec
ss
push
or
cmp
xor
aas
and
jo
mov
outsb
pop
test
mov
dec
cmp
pop
cmp
test
out
das
jo
mov
out
lock
imul
sbb
adc
out
mov
or
inc
cltd
popf
gs
xor
daa
add
cmpsl
stc
and
insl
push
sbb
dec
stc
jo
jbe
dec
in
cwtl
ret
imul
mov
dec
stos
ss
jmp
dec
push
adc
bound
inc
in
and
mov
testl
jno
pop
cmp
jle
jmp
lock
orb
inc
xchg
sbbl
mov
loopne
xor
mov
mov
adc
inc
gs
pop
orb
or
mov
in
call
dec
adc
pusha
jmp
inc
lcall
or
cmp
clc
stos
sub
cmpsb
aaa
pop
mov
push
and
pop
dec
iret
cld
jno
xor
xchg
or
ja
mov
add
jle
imulb
and
stc
mov
jbe
mov
jl
sub
dec
dec
mov
cmc
push
add
adc
jge
stos
mov
add
js
pushf
loopne
mov
xor
js
pop
adc
push
out
lods
xchg
and
arpl
dec
test
cwtl
lods
xor
inc
fcomps
mov
mov
data16
mov
and
xor
cmp
push
and
mov
adc
arpl
leave
aas
ja
notl
xchg
int
sbbl
add
in
and
add
fldcw
jns
movsl
in
xchg
cmpsb
lea
adc
inc
mov
fdivs
inc
push
call
sub
in
andl
add
push
cmpsl
sti
mov
dec
cmpsb
cmp
pop
jge
mov
adc
jo,pt
jl
mov
dec
rclb
imul
fwait
jle
pop
jnp
in
mov
xchg
add
push
and
mov
iret
cmp
cmp
sub
xchg
inc
inc
adc
mov
test
inc
fisubl
mov
mov
je
cmpsl
mov
shll
add
cmpsb
dec
and
xchg
push
call
lds
mov
add
scas
mov
repnz
jle
bound
mov
jb
inc
push
sub
push
repz
stos
lcall
je
mov
fwait
repnz
dec
mov
mov
adc
insb
ret
cmp
mov
jne
mov
lods
mov
lods
rcrb
fs
jo
xchg
in
rcl
mov
pop
imull
bound
subb
xchg
jb
aam
dec
add
scas
fisttpll
fmulp
stos
pop
sti
pxor
pop
push
mov
clc
push
cmp
inc
xchg
cli
mov
mov
sti
mov
pop
pop
out
in
inc
pusha
or
ja
je
call
call
jns
xchg
jno
mov
jnp
gs
aas
sbb
mov
push
xchg
insb
mov
sub
ds
orl
pushf
or
adc
sub
rcll
shr
push
xor
mov
out
test
shrl
jge
ds
mov
mov
jecxz
jle
mov
push
mov
popf
xchg
mov
cmc
xor
cmpsl
mov
iret
pop
lret
or
xor
dec
add
std
push
mov
ficomps
jae
jns
push
jp
scas
sub
rorl
repnz
fdiv
xor
adc
dec
pop
dec
mov
jmp
aaa
shl
push
test
or
popf
dec
add
scas
dec
dec
mov
repz
cmp
aaa
push
sbbl
pop
pop
mov
aaa
aaa
jbe
mov
fsub
ja
push
xor
arpl
int
shlb
adc
xor
jne
inc
cwtl
call
dec
aad
lret
int3
aas
pop
scas
pop
out
cmp
aas
outsl
push
sub
ss
aaa
xchg
inc
cmpsb
mov
mov
je
pushf
xor
push
je
lret
lods
das
mov
lds
lret
in
es
pusha
iret
outsl
cmp
outsb
mov
add
repz
jle
inc
stos
mov
or
shlb
or
xor
mov
addr16
mov
ljmp
fisttps
cmc
fstpl
xchg
in
iret
pxor
jge
pop
add
xchg
outsb
xor
sti
push
push
xlat
mov
outsl
cs
sbb
popf
dec
pushf
daa
js
xor
xchg
shl
pop
mov
push
adc
xchg
adc
orl
jg
insb
setae
dec
dec
xchg
cmp
outsb
cmc
adc
xor
xor
iret
push
aas
nop
aas
mov
fiadds
jbe
sbb
pop
and
aad
adc
push
hlt
push
jmp
movsl
dec
std
jae
xor
jnp
ds
xor
push
cmc
adc
pusha
int
xchg
inc
xchg
repnz
add
in
pop
arpl
inc
test
incb
addl
hlt
stos
jne
xchg
push
repnz
cmp
into
lahf
addr16
out
or
cltd
mov
and
lds
insl
test
dec
enter
and
loop
gs
add
add
dec
pop
dec
sti
push
into
mov
cmc
sbb
leave
fcompl
dec
mov
stc
xchg
loope
leave
imul
or
sbb
cld
inc
jge
shlb
inc
call
cwtl
aas
xchg
pop
fistl
mov
gs
lds
dec
aaa
rep
in
ret
out
out
addr16
div
inc
push
lea
jmp
jg,pt
jmp
imul
outsl
in
jb
loopne
dec
sbb
fidivrl
xor
fninit
incb
out
sub
jg
lahf
sub
pop
jbe
loopne
xor
mov
mov
jae
or
outsl
cmp
subl
aam
cmp
ret
sub
pop
sub
sahf
hlt
pop
cmp
outsl
inc
push
test
sbb
xor
ljmp
cli
push
movsl
and
ds
adc
add
sbb
adc
mov
shlb
test
das
pop
iret
out
push
stc
jae
movsb
and
sbb
inc
aaa
pop
mov
fldenv
push
xor
out
jmp
mov
mov
ljmp
jmp
mov
push
pop
cmpsb
or
cmp
inc
test
push
pop
leave
popf
in
iret
jmp
ja
cs
adc
cmc
pop
inc
test
inc
jne
pushf
data16
ljmp
mov
push
push
mov
sti
cwtl
fisttpll
call
scas
or
outsb
inc
sti
push
fs
pop
push
push
icebp
dec
xor
push
arpl
xchg
ss
or
mov
sbb
sub
iret
cmp
stos
or
xchg
cmp
jae
xchg
mov
or
cli
xchg
jp
inc
insb
dec
push
inc
inc
test
das
imul
xchg
out
fsubrs
sub
stc
sti
testb
sarl
cmp
aaa
dec
add
mov
sbbl
xor
inc
lock
dec
or
test
cmpsl
mov
push
fdiv
dec
xor
pop
dec
and
pop
lahf
xchg
ljmp
adc
add
aas
push
xchg
pushf
mov
enter
add
push
pop
jmp
inc
pop
jmp
adc
cmp
add
sbb
dec
out
xchg
jo
cmp
sbb
jbe
aam
push
outsb
jl
jp
out
lahf
repnz
xor
pop
dec
cmp
lcall
bnd
mov
push
and
cmp
jge
add
ja
fs
cmp
cmp
mov
fwait
rol
xchg
xor
jecxz
ret
stc
mov
lock
cld
or
or
imul
roll
pop
lret
cmpsl
aas
pop
ja
lods
das
orl
popf
pop
daa
bound
addl
push
hlt
mov
jg
ss
cmp
sbbl
pop
push
outsb
dec
mov
jbe
inc
fildl
in
ret
daa
inc
xchg
push
xchg
and
xor
push
push
scas
movsb
addr16
popa
mov
adc
subl
sbb
notl
in
les
out
cwtl
inc
mov
sahf
clc
sub
mov
jmp
or
mov
loop
xor
pop
scas
pop
aaa
icebp
mov
fcmovnbe
pop
push
mov
stc
and
add
fwait
add
cltd
dec
loopne
adc
mov
sbb
cmp
cmp
push
inc
stos
mov
dec
test
jle
fldcw
mov
xor
in
pop
sbb
lret
lahf
test
push
push
jl
fucomi
icebp
flds
fisttpl
lods
inc
popa
outsl
mov
stos
lret
sti
iret
cltd
or
int
jp
cmp
sub
filds
fildl
fpatan
cmovno
xlat
add
lret
jae
xchg
jb
outsb
add
xlat
adc
pop
mov
mov
ret
lahf
js
int
subl
andb
sub
or
nop
daa
arpl
ficoml
mov
pop
and
insl
popa
inc
mov
cmc
adc
mov
filds
jno
bound
cmp
or
test
and
xor
pushf
cli
jnp
add
ret
pop
add
into
push
pop
sbb
and
inc
xchg
jp
into
mov
lock
lahf
movsl
in
adcb
pusha
adc
sub
aad
movsl
dec
test
shll
lea
sahf
nop
loopne
notb
lret
out
lock
andl
cmpb
les
mov
mov
lods
xor
mov
sahf
and
in
test
mov
dec
xchg
mov
mov
mov
leave
ds
out
shrb
add
dec
clc
or
sbb
loop
inc
lods
xorb
out
ds
xor
pop
cmp
push
sbb
jb
mov
xor
push
adc
stos
xor
sub
loopne
or
enter
push
ret
es
div
inc
sbb
stc
push
and
jae
inc
into
jle
ss
mov
cmp
movsl
inc
pop
test
lock
test
pop
shlb
mov
mov
lock
movsb
pop
sub
call
add
callw
adc
pop
mov
sete
pop
ret
inc
mov
fld
sahf
sbb
fadds
and
dec
loope
out
popa
fstpt
movsb
mov
int3
adc
mov
pop
push
mov
dec
aaa
out
inc
inc
push
rcrb
loopne
shl
and
jmp
stos
and
lret
inc
sahf
pop
fcompl
xchg
sub
je
sub
xchg
test
adc
or
ror
push
mov
push
fstpl
sbbb
lods
scas
daa
xchg
das
mov
sub
xchg
enter
add
sahf
lods
pop
sbb
adc
push
sub
mov
jp
or
and
dec
push
popf
mov
push
std
and
rolb
add
mov
push
aad
ds
je
dec
into
lock
mov
inc
repnz
xor
in
dec
adc
fwait
pop
inc
cmpsl
shl
inc
es
inc
mov
out
loopne
clc
sbb
pop
push
mov
pop
lock
pop
add
cmp
add
sar
or
and
pop
nop
mov
roll
int
js
data16
adc
pushf
es
push
jp
iret
data16
push
in
pusha
inc
out
cwtl
outsl
ret
xor
sbb
push
cltd
movsb
ror
and
inc
unpcklps
jg
fldt
mov
push
fs
mov
popa
lods
inc
and
lahf
pushf
and
in
add
mov
rcrl
jmp
dec
add
std
jo
sbb
inc
adc
fists
in
xlat
cltd
mov
xchg
pop
inc
lds
shlb
movsl
dec
xlat
and
dec
pop
xchg
inc
ja
movsl
movsb
cmp
fwait
sub
pcmpgtb
push
lret
push
out
sbb
xchg
push
stos
xchg
jb
jnp
std
stc
jle
jno
or
lods
movsl
inc
mov
mov
bound
pop
pop
xor
fcomps
test
inc
cmp
icebp
xchg
imul
mov
clc
pop
mov
xor
mov
mov
push
lea
ficomps
pusha
cmpsl
outsl
sub
orb
icebp
addr16
repz
xor
jg
fisubrs
outsb
dec
ret
and
test
pop
xor
mov
inc
jnp
xor
aaa
pop
repnz
mov
pop
daa
rclb
pusha
and
xchg
popa
cmpsb
aas
lret
dec
lret
xchg
add
mov
mov
or
cwtl
in
in
pop
nop
out
test
add
jmp
sbb
cmp
cmp
mov
or
fbld
data16
insb
insb
out
lock
in
cmp
jl
mov
or
sbb
out
test
ja
orl
xchg
adc
testl
and
jge
ja
popa
mov
fbstp
call
or
cmc
mov
pop
scas
cmp
js
aaa
out
inc
xchg
inc
fnsave
lods
out
fsubl
xchg
pop
jb
mov
push
leave
imul
add
cwtl
sub
pop
movsb
pop
xor
lcall
repz
sbb
sbb
or
mov
sub
sti
jno
je
jae
inc
add
rolb
add
loopne
or
jmp
into
daa
int3
ret
hlt
aas
xchg
fsub
adc
test
outsb
sbb
add
pushf
sbb
into
in
jo
loope
inc
jne
lds
lods
push
test
push
rep
pushf
pop
add
std
cmpb
sbb
scas
mov
lret
push
aas
loopne
push
daa
loop
adc
mov
sub
push
pushf
xchg
inc
iret
xor
mov
xor
test
cwtl
lahf
pop
mov
mov
test
pop
pop
jge
jg
cli
push
inc
mov
pop
int3
fwait
jbe
mov
xor
mov
popf
mov
iret
scas
and
add
adcb
mov
and
sub
aaa
popa
gs
pop
xor
dec
stc
cmpsb
std
lods
mov
jns
push
neg
mov
push
add
sub
int
mov
sub
pop
lcall
jecxz
mov
roll
insl
cmp
pop
pop
notb
xchg
add
push
in
fs
clc
int
je
push
out
aas
adc
mov
push
mov
into
enter
fisubl
jp
outsb
xor
mov
jge
xchg
cli
ret
sahf
popf
rcr
jg
fs
add
int3
stos
xchg
add
push
bound
mov
sub
inc
ss
pop
xchg
ja
mov
xchg
ror
dec
in
jb
xchg
or
test
ds
mov
pop
out
and
dec
mov
imul
subb
sub
add
into
cmp
cmp
iret
xchg
push
mov
int3
stos
flds
pop
mov
insl
out
add
inc
cmp
fildll
or
dec
es
cmpsl
or
inc
xchg
pop
fs
adc
add
jae
push
or
dec
idivb
fwait
sahf
push
int3
clc
add
push
outsl
imul
aam
int
cmc
or
mov
iret
jp
xchg
xor
push
or
xor
sub
nop
sbb
sbbl
fdivrs
add
lods
add
cmp
out
orl
or
mov
imul
mov
sbb
cli
jl
in
in
xchg
stos
into
fistl
xor
jle
inc
lock
xchg
sahf
cmpsl
pushf
in
into
add
pop
sahf
mov
dec
adc
ss
mov
add
sbb
xor
cld
mov
push
or
mov
add
popa
mov
iret
fs
or
push
cmp
nop
mov
clc
inc
dec
add
mov
fstl
mov
inc
jbe
orb
xlat
sbb
dec
lods
loopne
shlb
hlt
js
and
xchg
push
movsl
loop
push
scas
mov
jns
shrb
xchg
pusha
xor
xchg
mov
imul
mov
cltd
in
pushw
shrl
shlb
cmp
fisttps
imul
test
mov
aas
xlat
push
xor
aaa
icebp
je
ja
mov
mov
pushf
inc
fmulp
arpl
bound
pop
xor
xchg
ja
xchg
mov
mov
mov
jecxz
mov
outsb
sub
cmc
mov
lea
or
ret
push
xor
ljmp
sbb
fs
movb
insl
mov
sti
lret
cld
mov
sbbl
movsl
push
push
sub
add
into
add
add
test
jbe
lods
ja
and
push
xchg
dec
pushf
bnd
xor
mov
add
sub
rclb
pop
cltd
cmp
lret
inc
mov
xlat
push
fnstsw
and
push
inc
stos
xchg
inc
and
lds
pusha
cmpsb
lock
loop
lods
add
push
fisubl
inc
and
push
cmc
andl
ljmp
stos
sarb
push
xor
cmp
aaa
xor
stos
xchg
add
int
insb
fnstsw
bnd
loop
outsb
ljmp
enter
ret
call
sbbl
xchg
jnp
xchg
in
mov
subl
inc
or
xor
nop
aas
nop
ss
aaa
std
xchg
push
or
cmp
inc
push
mov
add
and
lock
das
cmpsl
mov
cmpsl
pushaw
push
jecxz
xor
mov
cltd
mov
ds
test
loopne
mov
xor
mov
mov
les
mov
in
pop
cld
or
stc
sub
sub
out
test
adc
sbb
subl
pop
lock
jo
inc
fwait
clc
cmpl
mov
test
stos
es
and
rclb
xor
jmp
aas
imul
push
mov
lods
xchg
mov
dec
rclb
xchg
inc
mov
icebp
adc
jp
sti
aas
push
fcomip
js
cmc
clc
mov
shr
sbb
jmp
add
test
lret
repnz
loope
adcb
fwait
scas
pop
push
call
fprem1
mov
cld
adc
xor
cmp
or
jno
imulb
push
int3
sbb
sub
mov
stos
cmp
lea
inc
out
pop
pop
sbb
imul
lods
inc
and
ljmp
stos
test
inc
cmp
and
imul
or
fsub
jecxz
aad
lea
repnz
push
sub
xor
enter
gs
xor
ss
mov
add
cmpsl
loop
dec
fbstp
out
mov
aaa
jno
out
pop
jle
pop
push
dec
orw
test
adc
shrb
sub
iret
xchg
ss
jae
cwtl
loope
and
enter
cltd
xor
loope
jge
mov
sbb
xor
in
notl
jo
mov
inc
dec
sub
mov
aad
dec
je
out
mov
or
adc
and
mov
push
out
ja
mov
lahf
js
adcb
mov
pop
and
lcall
fdivs
mov
push
xchg
jns
out
and
int3
xchg
stos
push
test
mov
sti
movsl
xchg
jo
pop
stos
dec
dec
clc
out
std
or
pushf
fimuls
mov
xchg
adc
in
notb
and
sub
jnp
push
lods
outsb
lahf
out
mov
fbstp
rorb
jo
repnz
es
mov
movsb
in
cmp
pop
fwait
pusha
lods
mov
push
xor
test
jmp
dec
sub
pop
cmp
dec
shll
jle
fldt
jecxz
ds
rorb
cmp
xchg
sub
sbb
xor
pushf
push
cltd
or
dec
sbb
inc
or
stos
sub
stc
inc
mov
setl
dec
call
jno
inc
enter
cltd
cs
fsubrs
insb
dec
fs
test
mov
mov
adc
mov
inc
arpl
dec
pop
sbb
ret
jp
lds
cmpsb
pop
mov
pop
out
aad
imul
call
push
int3
cmp
xchg
sub
popf
stos
mov
jecxz
jge
mov
mov
jge
rcrb
mov
mov
sti
push
ret
fcompl
mov
gs
addr16
mov
sub
data16
movsb
std
xlat
pop
into
cmp
adcb
lea
ja
mov
mov
inc
imul
mov
or
daa
mov
ja
outsl
mov
pop
cli
loope
enter
in
daa
mov
mov
or
sub
dec
cmp
lods
ljmp
push
in
rclb
push
mov
repz
inc
lcall
add
add
pushf
stos
fmull
icebp
and
xor
jne
mov
adc
adc
cs
outsb
cmpsl
sub
or
mov
pop
ret
jge
cltd
xchg
cmc
xor
cmpsb
in
leave
push
test
imul
pop
lret
clc
stos
push
sbb
and
mov
cmpb
and
in
aas
sub
jp
cmpsb
sbb
xchg
pop
sub
sarb
cmp
xor
scas
or
xor
ret
and
push
js
mov
iret
leave
hlt
imul
arpl
movsb
loopne
mov
clc
add
das
out
dec
subl
lods
pop
sbb
loopne
stc
orl
pop
or
mov
test
cwtl
mov
and
out
mov
mov
mov
scas
aas
outsl
pop
scas
sub
repz
sub
pusha
pop
cmp
and
or
popa
push
and
or
jbe
push
mov
jo
cmpsl
adc
mov
rorl
fildl
enter
jge
and
shll
sbb
and
ss
push
xchg
pusha
out
sti
push
outsb
lods
adc
ss
je
loopne
mov
outsl
inc
mov
add
pop
ret
stos
fadds
fiadds
inc
incb
jmp
ds
cmp
jl
imul
mov
xchg
or
mov
xor
and
cltd
push
nop
out
rcrb
sbbl
popf
flds
cmpb
jp
mov
lds
call
imul
add
or
clc
dec
out
dec
sbb
cmpsl
loop
ret
cld
or
test
test
popf
lods
pop
mov
mov
lcall
or
in
and
sub
xor
add
hlt
mov
or
stos
mov
test
and
test
aas
mov
ficompl
or
inc
enter
sbb
cmp
out
jge
in
jo
inc
inc
in
mov
xor
sti
adc
movsb
add
arpl
and
push
pop
mov
lcall
movsl
xchg
and
jl
sub
enter
mov
dec
dec
and
adc
test
adc
push
fbld
arpl
pop
push
ret
inc
mov
in
xor
imul
mov
iret
stc
cmp
rcrb
pop
add
dec
aaa
xchg
sbb
insb
in
test
xchg
or
fsubrl
mov
popf
push
imul
fmull
mov
sbb
rcl
lcall
pop
jl
mov
add
adc
or
inc
lods
jnp
and
or
stos
mov
cld
jl
shl
test
push
or
mov
inc
ss
fnstcw
sarb
or
add
movsb
push
mov
imul
out
cltd
xor
lods
adc
push
fwait
in
mov
inc
test
lret
mov
out
outsl
jb
jge
mov
inc
sbb
dec
cli
aaa
mov
out
or
push
mov
imul
sti
xlat
pop
push
fistl
cmp
mov
mov
enter
add
jo
inc
push
xchg
sub
loopne
clc
xchg
cmc
lcall
filds
or
lret
xchg
sub
pushf
into
addl
stos
and
ljmp
add
shll
xchg
mov
mov
ficoml
es
decl
imul
adc
loopne
lret
xchg
sub
mov
into
nop
popf
mov
ret
xor
mov
addr16
mulb
lds
out
mov
xchg
mov
mov
popa
cmp
dec
test
pop
mov
adcl
mov
mov
fucom
jb
xchg
repz
fisubl
hlt
sub
jo
push
dec
dec
sarb
jbe
pop
sbb
bound
add
or
jo
xor
movsl
mov
testl
mov
inc
fcoml
cmp
ja
jno
or
jne
subl
add
rorl
popa
ret
sbb
andb
subl
aad
mov
lcall
in
mov
mov
push
cmp
cmpsb
aam
stos
rclb
testb
jp
loope
xor
call
lds
sbb
pop
rcll
cltd
aas
xchg
adc
xor
jle
rorb
xor
lods
mov
and
mov
mov
inc
enter
ficoml
mov
jns
sub
add
push
clc
cs
and
imul
in
cmpsl
imull
push
cmc
lds
pop
mov
inc
movsl
aaa
dec
dec
or
lahf
bound
adc
int
aad
sbbl
jmp
lahf
hlt
mov
cmp
xchg
outsb
add
xlat
dec
insl
pop
mov
lods
add
fmull
rcrl
sqrtps
sub
mov
movsl
xlat
push
mov
sbb
push
cmpsl
xor
xor
xor
dec
inc
fidivl
jns
leave
aad
idivb
mov
mov
ds
lahf
mov
insb
push
rcr
adc
xchg
xor
sub
cmp
pop
jecxz
out
ficompl
repnz
or
imul
fdivrs
mov
sarb
sub
lds
push
aad
jg
dec
ret
fnstenv
mov
adc
xlat
xchg
cmp
mov
ljmp
test
call
cmp
dec
pop
out
sbbl
outsb
cld
mov
cmp
lods
in
sbb
xor
push
push
sti
cmp
fucomi
adc
stos
lea
cmp
test
inc
addl
mov
andb
ljmp
call
popf
lret
jmp
add
movsl
in
xchg
sarb
mov
add
mov
dec
fucomi
jg
xor
sbb
lods
fistps
movl
or
hlt
sbbb
lds
mov
je
jecxz
movsb
enter
inc
out
pop
test
hlt
insl
jge
sub
cmc
jo
cltd
mov
xor
adc
sarb
mov
sbb
xor
lcall
daa
int
and
xchg
cltd
mov
jnp
out
xchg
rol
loope
push
cmpsb
dec
lds
int
cmpsl
movl
mov
sub
inc
and
push
aas
lcall
add
loope
or
fsubs
sub
or
shr
cwtl
jg
push
jl
adcl
adcb
sbb
adc
ds
and
popa
andl
hlt
adc
aad
movzwl
test
add
sub
ds
je
hlt
push
mov
imul
mov
ljmp
adc
xorl
addr16
or
loopne
mov
mov
pop
push
cli
addr16
sbb
xchg
insb
or
xor
ja
pop
mov
mov
lds
pushf
jmp
mov
jo
mov
mov
test
outsl
mov
jle
and
cmp
and
push
mov
pop
mov
shll
addb
in
push
mov
andl
xor
pop
cmc
notb
aas
or
or
fldcw
pop
or
in
cmp
cmc
jg
fistpl
sbb
push
lds
divl
jae
call
lock
sbb
cltd
pop
aas
xchg
repnz
cmp
mov
xchg
adc
movsl
icebp
aad
inc
pushf
movsl
hlt
mov
clc
mov
pop
sub
fcomp
jmp
mov
mov
adc
jp
cmp
mov
xchg
cld
test
mov
rorb
xchg
or
enter
lods
outsb
jne
lahf
out
inc
nop
imul
lret
fnsave
pushf
inc
jmp
test
lods
mov
adc
popl
xchg
movsb
cmp
shl
lds
or
push
lock
repnz
push
out
push
cmp
push
cli
push
sub
dec
pushl
pusha
cmp
aas
bound
cmp
xor
xchg
mov
pusha
adc
dec
mov
out
xchg
testl
or
subl
xchg
daa
add
scas
add
icebp
lcall
das
jae
pusha
std
int3
xchg
xor
xchg
xchg
xchg
out
jp
sbb
xchg
lds
xor
lcall
fs
icebp
lock
fildll
dec
xlat
xor
fisubl
hlt
push
fbstp
cmp
jno
pusha
dec
in
test
push
adc
xchg
aas
fdivl
jge
pushf
mov
rcll
adc
sub
mov
lock
pop
jl
stos
aaa
std
jmp
into
cld
xchg
lcall
inc
mov
sbb
int
imul
jmp
sbb
mov
add
push
cwtl
adc
or
inc
mov
adc
cmp
jge
xor
movsl
in
sbb
dec
es
jmp
repnz
ds
in
pushf
sub
ljmp
xor
jb
les
jo
add
push
movb
xor
fsubs
cmpl
mov
ret
aad
cmp
shrb
fwait
cmpsl
mov
push
cmp
pop
sbb
lret
xchg
pop
mov
fisubs
dec
int
push
sub
stos
sub
loop
cmp
pop
fwait
mov
pushl
xlat
mov
js
sub
jge
mov
push
call
add
push
mov
aad
push
sbb
pop
adc
loope
sbb
insb
fisubrs
shll
dec
cmpb
or
xor
arpl
sbb
mov
in
test
push
dec
negl
aam
call
push
stc
push
fs
test
pop
aaa
add
xor
data16
add
adc
lods
loopne
fcoms
cmp
insb
rorl
in
data16
jb
mov
fidivrl
fcmovnb
fmuls
push
mov
xor
scas
xchg
fdivrl
iret
loopne
into
loop
mov
mov
jbe
mov
pop
shlb
int
mov
mov
and
fs
adcl
or
fldenv
pop
mov
ljmp
mov
add
icebp
in
cwtl
sbbl
test
or
xchg
add
scas
mov
adc
daa
jnp
sub
stc
mov
daa
movsl
pushw
xchg
fucomi
mov
inc
xor
outsl
mov
dec
fimull
jmp
dec
mov
sbb
mov
cmpsb
mov
inc
inc
cmp
shrb
pop
xlat
push
outsl
stos
mov
push
or
mov
add
fidivl
aaa
pusha
cs
lea
inc
pushf
int3
push
in
stc
or
addb
pop
aad
push
lods
jno
out
dec
xor
push
ffree
pop
mov
xchg
insl
pop
jmp
hlt
dec
pop
sbb
aam
xchg
mov
into
and
test
mov
repz
arpl
add
and
imul
lcall
xchg
mov
jle
jne
push
add
out
test
mov
jp
sbb
adc
ja
jmp
cmpsl
mov
pop
adc
and
stos
pop
outsb
insb
push
jnp
cmpsb
scas
mov
xor
dec
ret
xor
movsb
cs
push
sbbb
mov
push
push
rcl
sbbl
sub
std
mov
mov
testb
and
fldcw
pop
test
dec
mov
pusha
int3
add
sub
jbe
and
cmp
out
loope
out
add
mov
mov
and
stc
inc
jge
pop
xor
lcall
jb
xchg
mov
mov
and
mov
shl
mov
gs
cs
std
arpl
inc
jne
inc
cmpsl
jge
mov
pop
mov
xlat
lcall
loop
push
xor
nop
rcrb
push
jge
cmp
pop
cmpsb
xor
in
jg
shlb
int
mov
and
add
and
fldenv
mov
rcrb
pop
cmc
les
cmp
dec
insb
sar
je
mov
rolb
inc
cwtl
out
call
sub
ljmp
sub
pop
mov
std
xchg
cmp
xor
int
inc
or
sbb
dec
pop
pop
shrb
test
test
mov
movsl
or
popf
dec
mov
outsl
xorb
insl
rcll
sbb
stc
nop
jl
and
dec
daa
mov
test
dec
stos
push
test
pop
cmpsb
cmp
sub
dec
scas
out
bound
pushf
xchg
adc
loope
xchg
sub
xchg
sub
fs
cmpsb
popf
test
and
or
pop
pop
stc
inc
insl
push
pushf
dec
inc
sti
clc
and
and
xlat
mov
or
cmc
push
pop
loopne
sub
xchg
negl
fbstp
ja
inc
or
fistl
xchg
push
subl
aam
cmc
pop
add
jae
mov
stc
lret
push
inc
insw
out
lret
sbb
push
xchg
mov
adc
cs
sbb
sbb
nop
sub
mov
in
mov
stc
or
xchg
pop
imul
jecxz
addr16
mov
in
jp
push
or
adc
sub
xchg
add
sbb
push
xchg
subl
dec
lcall
xchg
jne
pop
out
stos
pop
or
jb
ja
les
mov
andb
fwait
mov
fiaddl
fnsave
jmp
imul
fldpi
jns
aam
pop
stos
inc
push
fdivrl
lret
push
inc
cmpsb
jmp
cltd
test
xchg
xor
loopne
jbe
jae
sarl
push
cs
sbb
and
loope
fadds
aam
pop
insb
insb
fnsave
push
inc
xor
loope
cltd
loopne
cmpsl
sahf
xchg
mov
cmpsb
mov
xchg
dec
imul
mov
fistps
popf
fdivrl
leave
mov
push
cmc
and
add
sub
imul
cmpsl
je
push
icebp
mov
out
fbld
gs
cmp
pop
jne
test
movsl
insb
mov
shll
mov
mov
mov
repnz
loopne
add
push
mov
inc
rorb
jae
jae
fcomps
dec
es
xchg
adc
mov
imull
stos
jns
sub
enter
in
rcrb
add
mov
enter
sub
fs
rorb
mov
xor
and
mov
hlt
into
mov
cmpsb
out
mov
fildl
mov
and
or
inc
lods
push
jns
fwait
xchg
testl
inc
sub
mov
inc
add
cmp
cmp
inc
inc
or
xor
loop
imul
push
arpl
mov
sub
lock
xchg
push
mov
adc
adc
xor
sub
lcall
and
repz
add
or
pusha
imul
pushf
mov
jl
es
lea
add
mov
out
jge
pop
jne
data16
sbb
call
jnp
outsl
lock
or
dec
mov
lcall
jnp
xchg
pop
out
fwait
dec
xchg
and
into
fucompp
inc
xor
ss
xor
add
cmpsl
push
clc
iret
or
das
scas
les
or
and
push
or
xchg
push
aam
in
xor
lcall
jns
in
test
lods
pop
mov
mov
loopne
mov
add
ss
sbb
push
hlt
lret
jae
in
lret
outsl
cmp
dec
xor
mov
mov
inc
movups
pop
xor
in
movsl
xchg
negb
or
add
fidivs
sub
gs
repz
ds
dec
rol
std
add
cmp
stos
inc
fcoml
nop
dec
dec
fidivrs
push
scas
pop
cmp
or
pusha
scas
ds
daa
out
cmpxchg
jmp
mov
and
push
aas
xchg
xchg
sub
pop
xor
cmp
jmp
lods
fiadds
stc
ljmp
pop
jae
aad
inc
mov
xchg
mov
and
pop
sbb
add
icebp
stos
jne
and
out
sbb
stos
aas
mov
dec
popa
mov
add
mov
cltd
dec
shl
lds
mov
dec
nop
mov
mov
iret
mov
mov
mov
jg
pop
cmp
movsb
or
xlat
jno
scas
inc
add
cwtl
push
mov
addl
jmp
call
adc
rclb
lcall
mov
pusha
repz
in
mov
test
jp
add
push
addr16
call
xor
in
sbbb
or
push
repz
cmp
ja
push
jne
sub
push
lods
jle
jmp
dec
test
mov
cmpsl
xchg
sbb
inc
adc
test
adc
dec
mov
pop
lods
push
jne
into
jne
pop
outsb
aaa
fcmovu
cli
pusha
clc
data16
dec
sub
cli
scas
jnp
inc
inc
mov
push
daa
retw
out
sbb
sub
into
lcall
xlat
jbe
mov
inc
xchg
cmp
outsl
dec
cmp
lcall
fidivrl
lret
mov
mov
not
mov
mov
pop
repz
loopne
lret
cwtl
in
test
call
add
popa
divl
mov
mov
push
push
repz
and
scas
frstor
psrlw
xor
popf
inc
inc
lods
popf
push
clc
ja
lret
xchg
cmpsl
cltd
mov
pop
pop
mov
xchg
adc
cmpsl
inc
sbb
test
xchg
mov
jb
xchg
clc
dec
bound
xlat
inc
ret
aaa
push
sbb
pop
shlb
lods
mov
mov
dec
loope
jp
inc
mov
mov
mov
mov
sub
sub
add
xor
push
sahf
mov
or
dec
mov
xchg
mov
mov
push
iret
add
xor
xchg
jne
xchg
ljmp
insl
push
popf
int3
jae
andb
les
dec
jmp
sahf
xchg
adc
ds
and
sub
outsl
xor
rcr
std
dec
and
fdivrl
xor
insl
cmpsl
sbb
mov
pop
add
cmp
xor
addr16
inc
and
xlat
mov
and
lods
dec
sbb
mov
movsb
dec
and
int3
lock
cmpsl
or
jp
out
sub
add
cmp
or
out
repnz
movsw
pop
outsb
shll
in
test
pop
xorb
mov
dec
jg
sub
mov
insl
add
stc
and
icebp
in
dec
int
pusha
add
std
clc
push
clc
test
mov
popf
insb
push
mov
outsb
sub
sahf
xor
and
sarb
inc
push
pop
xchg
lods
mov
lret
pop
enter
in
or
sahf
add
jbe
push
cmpsb
fdivl
in
and
test
jle
insl
lea
lods
jg
test
mov
push
sub
into
aam
mov
jo
loopne
jno
pop
xor
adc
addr16
xlat
xlat
jnp
push
inc
pop
jle
adc
subb
or
mov
loopne
lret
aas
adc
mov
dec
lea
lods
leave
mov
mov
pop
scas
sbb
inc
in
ds
inc
xlat
ret
fdivrl
push
in
fs
sub
aam
stos
cmp
push
xchg
ds
sahf
pop
pushf
divb
jns
lock
fldt
xor
pushf
xorb
xor
ss
xchg
or
cltd
cmp
es
dec
pop
cltd
out
lea
pop
jne
cmp
pusha
iret
rcll
ljmp
rcrl
sbb
and
and
jo
mov
rorl
inc
dec
bound
mov
cld
inc
xor
add
adcl
xchg
int
push
mov
clc
shlb
fstps
xchg
xor
inc
ror
jo
add
and
cmpsb
xchg
xor
lds
scas
pop
fimuls
scas
cld
test
shll
adc
pop
dec
enter
ret
mov
arpl
lods
cmp
subb
adcl
jge
out
push
jp
rolb
loopne
shl
cmp
lea
inc
push
xor
push
pop
mov
int
shll
lret
push
loope
mov
sbb
jecxz
mov
mov
mov
std
mov
mov
imul
and
aas
push
push
popa
leave
fistpl
mov
ret
jmp
rolb
or
imul
adc
popf
sub
push
daa
mov
iret
loope
arpl
cli
cltd
sub
mov
and
xchg
daa
adc
stos
lods
jl
or
jae
cwtl
cmc
cld
pop
es
rclb
cmp
les
xor
adc
xchg
pop
mov
outsl
daa
data16
jbe
pop
pop
pop
fldcw
inc
xchg
ds
sub
lahf
dec
dec
inc
mov
inc
ret
in
adc
fcmovne
mov
or
jo
aaa
and
fstpt
xchg
test
xchg
cmpsl
ds
rcl
jne
push
inc
faddl
arpl
lret
push
insl
imul
push
lods
sbb
xor
nop
lods
shlb
xchg
jge
adc
or
cld
xchg
inc
mov
sbb
mov
cmp
sub
ds
aam
sbb
shrl
push
int3
fstl
fdivs
jns
mov
mov
fisttps
adcb
mov
shr
jno
lea
mov
dec
pop
cmp
loop
mov
push
mov
daa
mov
push
gs
lock
lret
imul
mov
jecxz
mov
shll
std
sbb
iret
movsb
testb
arpl
xchg
les
mov
nop
mov
push
insb
xorl
filds
pushf
out
cltd
sub
cwtl
scas
es
pop
int
and
inc
push
xor
test
repnz
mov
push
stc
push
stos
mov
data16
iret
push
fcomip
and
xchg
xor
add
outsb
jge
inc
push
mov
aad
mov
inc
mov
mov
pop
adc
js
push
add
or
inc
mov
rclb
fwait
ret
insb
cmp
mov
adc
xorl
cld
pop
scas
mov
dec
arpl
aaa
js
imul
pop
jae
jecxz
inc
sarl
clc
ret
push
dec
adc
cli
jno
data16
cltd
std
test
dec
mov
sbb
sub
mov
lock
fbstp
pop
push
test
fs
and
jns
push
adc
mov
cmpl
cs
xlat
scas
dec
testl
dec
hlt
dec
adc
push
stos
lock
sub
orb
fldt
adc
mov
jmp
sub
sbb
cmp
mov
iret
stos
mov
push
je
cli
or
daa
arpl
cmp
in
pushf
xor
and
mov
clc
mov
mov
jl
mov
xchg
jb
mov
dec
dec
push
enter
mov
rclb
aaa
mov
pop
dec
cwtl
or
lret
mov
sahf
jns
rcrb
cli
or
and
icebp
test
mov
xchg
lahf
jb
movsb
cmpps
ss
scas
es
sbbl
dec
cmpsl
inc
andl
pop
xor
aaa
dec
xchg
je
ret
mov
aad
fs
repnz
mov
inc
out
shrl
std
add
push
popf
cmp
outsl
xorl
les
dec
ret
insl
insl
inc
and
jns
fs
adc
mov
or
or
cmp
xchg
mov
enter
cmpsl
push
lea
pusha
popa
add
repz
cltd
push
xchg
dec
loop
negl
lea
xchg
sub
pop
mov
and
std
cwtl
mov
pusha
stos
shl
adc
insb
mov
dec
inc
sbb
inc
ja
add
jg
je
repnz
sub
cmp
pusha
xor
mov
mov
ret
sti
xchg
xor
std
push
lods
sub
xor
aam
sub
sub
dec
subb
les
call
lods
and
xchg
je
das
pop
pushf
xchg
pop
cmp
test
fcmovb
pop
stos
add
test
xchg
addr16
sbb
mov
ret
push
mov
inc
sbb
insl
jmp
cwtl
hlt
jg
adc
and
fcmovnb
arpl
jae
push
mov
sub
fbld
out
push
sbb
inc
xchg
rorb
push
pop
push
sbb
test
hlt
addr16
mov
movsl
insb
and
mov
orl
mov
loope
dec
pop
jge
pop
loop
adc
pushl
push
rcl
push
mov
shl
in
or
div
add
gs
out
cmp
cmc
cmp
jnp
ljmp
mov
or
pop
mov
ret
mov
push
add
adc
out
cmp
sub
jmp
int3
test
and
add
lea
jne
scas
insb
inc
cld
or
mov
out
jo
cmpl
cmp
pop
je
sub
test
lds
adc
popa
push
xchg
lret
lcall
pop
lock
sahf
call
jnp
outsl
sub
into
jo
add
andl
pop
call
fstpl
call
scas
mov
sarl
ja
inc
enter
imul
testl
jnp
adc
sbb
mov
addr16
push
xor
pop
psubusb
imul
xchg
fnsave
xchg
rcl
cltd
add
mov
hlt
out
aas
scas
xor
scas
add
int
arpl
dec
xchg
mov
cld
scas
ret
jg
adc
pop
xor
mov
popa
xor
cmpsb
lock
loopne
arpl
stos
push
pop
stc
lock
negl
cs
gs
push
ret
mov
pop
push
or
movaps
test
mov
lahf
test
and
mov
jg
mov
rclb
mov
movsl
dec
mov
into
mov
fs
adc
fdecstp
shll
jbe
fimuls
dec
and
inc
in
jns
shll
jb
lret
sub
mov
sbbb
pop
mov
adc
cmp
mov
xorl
inc
enter
push
test
negb
pushl
pop
cmp
test
or
fbstp
arpl
lcall
dec
mov
arpl
nop
cmp
inc
add
dec
add
cmp
dec
dec
xor
mov
mov
pop
cmpsb
jmp
xchg
xor
js
mulb
jbe
out
mov
popa
data16
repnz
ja
cltd
push
in
or
xchg
lret
adc
sub
mov
rorl
mov
adcb
mov
xchg
inc
inc
stc
ds
js
mov
adcl
xchg
sub
push
pop
sub
nop
stc
ljmp
out
pop
push
cli
and
pop
imul
in
test
fs
sbb
dec
lahf
sarl
sti
inc
sub
jo
dec
xchg
shll
jo
or
push
and
ljmp
cltd
mov
cli
sahf
mov
xchg
rol
popf
cli
adc
adc
or
mov
cmp
jp
fsubrs
into
fsubl
cmpsb
pminub
mov
jp
in
movsl
pop
cmp
xchg
dec
gs
out
and
adc
adcl
outsb
pop
rorb
mov
shll
pop
lock
mov
enter
inc
ffree
push
sub
push
adc
cmpb
scas
shrl
cld
mov
dec
pushf
cs
mov
sbb
pusha
push
cmpsb
or
lods
push
lds
popa
sbb
ljmp
gs
leave
es
mov
mov
js
mov
cld
adc
int3
outsl
daa
gs
into
orl
scas
ja
sub
jae
sbb
cmc
mov
mov
addb
xorb
test
pop
dec
cmp
jbe
daa
cmp
cmp
divps
fisubrl
shlb
lret
mov
stos
or
push
add
fnsave
push
es
mov
lret
push
push
jg
insb
mov
push
out
push
sbb
fs
sub
and
pop
scas
add
movsl
ret
mov
loopne
addl
je
or
loopne
clc
outsb
es
and
call
mov
mov
shll
shlb
add
repnz
xchg
mov
cltd
loopne
xchg
das
shlb
ficoml
pop
dec
pop
dec
lods
pusha
inc
sub
mov
cwtl
mov
rcll
mov
out
rorb
push
movl
xchg
lret
stos
in
inc
cmp
adc
rcr
mov
mov
dec
into
mov
add
xor
rclb
mov
jbe
inc
decl
call
add
xchg
xor
sub
push
pop
xor
std
inc
inc
mov
mov
xsha1
cmpsb
int3
add
in
pop
lods
inc
test
icebp
push
stos
add
pushf
cltd
in
lret
or
and
insl
push
xchg
push
cld
test
nop
out
daa
push
add
into
movsb
pop
or
fisttpll
mull
or
into
outsb
cmp
adc
dec
in
sub
jns
mov
push
loop
aad
mov
sub
pop
add
xchg
jbe
sub
xor
imul
push
insl
mov
or
adc
nop
repz
shrb
std
pop
adc
shll
clc
xor
lcall
sti
pop
sub
rclb
pminub
add
enter
test
out
out
sbbl
push
and
cmpl
dec
shrb
pop
lock
push
xor
in
add
adc
jb
and
adc
js
aaa
int
stc
repz
cmpsl
and
shr
das
dec
jo
out
cs
mov
fcoml
xor
pop
mov
arpl
sbb
mov
cmp
push
movsb
pop
sbbl
xor
hlt
xchg
rcrb
adc
cwtl
mov
cmp
pop
push
mov
dec
mov
sub
xor
mulb
imul
adc
lcall
xchg
xor
test
ljmp
and
test
mov
jne
in
ljmp
sub
mov
pop
pop
ret
hlt
and
cld
mov
lds
push
aam
pushf
es
int
and
je
stos
push
sbb
imul
je
sub
xchg
rcrl
decb
cs
lds
inc
push
push
imul
push
shll
pusha
rorb
std
adc
mov
pusha
jmp
jo
fs
xchg
lods
mov
sbb
sub
out
movl
arpl
xlat
mov
cmc
jp
cld
push
popa
hlt
clc
pushf
movsl
orb
mov
jmp
adc
and
in
cmp
test
cwtl
adc
dec
push
dec
cmp
lods
insl
pop
scas
mov
aas
mov
testb
das
xchg
lgs
push
bound
dec
fnstenv
sti
imul
pop
dec
ljmp
sbb
jge
outsb
xchg
xor
mov
data16
dec
ficoms
mov
xchg
dec
sarb
insb
popf
mov
mov
push
add
nop
adc
shr
test
fnstsw
fdivrl
or
scas
sti
jns
popf
push
inc
dec
in
xor
pop
aad
pop
jae
fcoml
stos
mov
xor
mov
xchg
mov
es
and
lea
or
mov
and
jo
imul
jne
dec
pop
mov
xlat
adc
cltd
sub
bound
sbbl
mov
mov
fsubrs
jo
cmp
mov
pop
push
test
cmp
addr16
adc
hlt
out
add
pop
cmp
sbbb
stos
rorb
mov
clc
xor
mov
add
mov
sahf
pop
adc
dec
dec
cs
shll
cmp
dec
sti
inc
xchg
hlt
rorl
rclb
add
and
pop
pusha
test
in
clc
add
sub
mov
cltd
sub
cmpsl
leave
cmc
das
imul
shr
sbb
inc
dec
cltd
xor
call
test
rep
add
mov
mov
pop
sub
cli
scas
inc
sub
sub
mov
dec
cli
xchg
gs
cltd
jbe
xchg
mov
cmpb
stos
out
stc
pop
rsqrtps
xchg
out
inc
enter
outsl
pop
icebp
mov
rcrb
bsr
pop
and
mov
or
bound
pop
aaa
les
push
andl
push
cmp
fs
sbbl
mov
jge
cmp
call
push
mov
jecxz
sub
dec
jae
popa
shrl
mov
call
pop
add
jecxz
je
sbb
xor
call
pusha
loopne
dec
mov
aad
xchg
imul
lds
aas
adc
jle
stos
mov
dec
sub
jle
mov
dec
iret
jge
cmp
sbbl
aas
repz
add
repnz
xchg
sub
sub
cwtl
mov
push
cld
cmp
jo
and
das
test
add
push
mov
mov
add
fbld
and
push
insl
add
cmp
sbb
sbb
jge
sti
jne
mov
inc
inc
dec
xchg
mov
aaa
data16
sti
mov
sub
pop
push
or
cmp
icebp
out
dec
hlt
stc
mov
sub
jecxz
push
loop
jae
jae
push
mov
pop
mov
sbbb
xchg
fstps
or
ljmp
fnstenv
mov
jle
lods
jmp
add
xchg
push
lods
mov
repnz
lds
pushf
fs
fnsave
cltd
fwait
aad
mov
enter
shl
or
and
ret
pop
pop
cmp
sbb
adcb
testl
orl
repnz
add
mov
mov
dec
mov
fucomip
add
mov
lods
cmp
push
xor
pop
adc
xor
push
pop
mov
repnz
in
push
xchg
jo
mov
fs
cmp
out
imul
sahf
fsubl
movsb
xchg
je
jg
push
sub
ss
lock
ljmp
mov
loopne
icebp
fbstp
dec
cmp
and
mov
adc
and
mov
movsb
sbb
scas
dec
mov
js
dec
testb
dec
enter
xlat
xlat
sub
pop
inc
dec
pop
xor
sbbl
imul
std
cmp
addb
xor
or
mov
js
shll
push
sub
or
ror
cmpsb
xchg
mov
pop
jecxz
lea
dec
push
imul
sbb
dec
daa
or
xchg
push
cmp
xor
xor
aaa
aaa
push
popa
xor
scas
push
and
push
pop
js
xor
cmc
push
mov
std
test
xor
fdiv
lret
inc
ds
jmp
movsl
and
dec
movsb
pop
sub
mov
inc
mov
add
pop
mov
andb
mov
les
xor
xchg
xor
push
cmp
dec
and
xchg
andb
adc
jmp
push
arpl
sahf
pushf
lds
inc
add
dec
dec
fisttpll
ret
in
addr16
jecxz
mov
cltd
out
jp
daa
mov
xchg
cltd
lahf
cmc
fsubrs
loopne
testb
aaa
and
mov
ret
dec
in
insl
inc
mov
push
push
mov
lret
push
ja
daa
add
or
addr16
insl
pushf
push
ds
push
cmpsb
cmp
dec
dec
push
xchg
push
hlt
sahf
idivb
ror
cmp
jnp
in
pop
mov
adc
sbb
sub
push
outsl
and
and
adc
inc
popa
imul
lea
sarl
cmp
aad
hlt
jmp
mov
mov
xor
scas
in
xchg
add
xor
mov
test
sbb
push
aad
mov
adc
test
mov
das
add
and
mov
jae
inc
int3
inc
ss
addr16
inc
adc
fiaddl
and
xor
mov
sub
xchg
inc
jo
pop
or
orb
cs
jl
int
add
dec
rcrl
in
ffree
mov
rcrb
mov
jecxz
fninit
ret
les
or
mov
hlt
mov
rcrl
add
imul
or
fs
rcrb
mov
in
lret
gs
sub
pop
inc
xchg
ss
loopw
mov
mov
inc
mov
inc
or
aam
mov
xor
adc
push
lea
dec
fmul
mov
loope
cmpl
xchg
or
mov
xlat
and
push
inc
out
xor
shlb
test
inc
ret
or
int3
mov
ja
cs
sub
mov
mov
mov
aaa
test
mov
cmc
xchg
enter
data16
mov
push
popf
leave
xchg
mov
xchg
sbb
xorb
adc
xor
in
or
stc
or
and
sbb
pop
cmp
jecxz
insb
lahf
pop
test
or
dec
mov
add
push
fmull
dec
rcrl
sub
mov
cmpsb
jb
aaa
xchg
mov
xchg
sti
or
out
mov
inc
inc
aaa
and
inc
das
push
inc
mov
jle
mov
loop
pop
ja
xor
call
push
or
cwtl
jne
in
pop
stos
cwtl
int
subb
pop
mov
push
cmpl
inc
dec
xlat
mov
inc
mov
sbb
adc
inc
pushf
xchg
xor
test
lds
ds
fmuls
xchg
ja
out
push
and
push
mov
xor
or
mov
movsl
sub
out
lret
int
push
test
movsb
sub
pop
out
je
call
dec
fucomp
cmp
cmp
std
mov
add
test
mov
jo
sub
shlb
dec
jge
loopne
cwtl
push
xchg
inc
cld
mov
cltd
or
jmp
lret
and
jno
dec
cwtl
xchg
xor
outsb
mov
add
or
test
push
or
jae
push
lods
mov
push
or
fcomi
xchg
insl
ja
sub
repnz
dec
lock
push
aad
adc
aas
out
dec
mov
xlat
sbb
mov
into
inc
ja
push
add
scas
sub
das
sbb
xor
mov
imul
dec
das
or
loope
aad
sub
mov
outsl
inc
daa
cld
sub
sbbl
jne
sbb
mov
scas
inc
xchg
rcrb
adc
or
mov
xchg
addr16
add
jle
out
inc
mov
fxch
pop
xchg
inc
cltd
or
cmpsl
jl
dec
and
sub
sbbb
pusha
mov
lods
sub
sbb
sbb
cmpsb
and
xchg
arpl
pop
inc
lret
cmp
pusha
mov
push
xchg
inc
cltd
pop
inc
mov
stc
jno
add
xchg
call
pusha
mov
lods
and
cltd
lret
pop
rcrb
sub
stc
cmc
mov
pop
roll
and
push
pop
scas
push
add
jns
pop
sub
imull
push
ds
lods
fs
popf
test
xor
popf
nop
cmp
jge
add
and
cli
jecxz
std
push
sub
setp
dec
aam
mov
das
lods
pop
and
push
shr
pop
adc
daa
xchg
push
movsl
xchg
mov
ror
cmpsl
inc
add
jb
sbb
jmp
cs
xlat
push
cld
scas
sub
lret
jg
push
sub
mov
inc
or
pop
rcll
and
lock
fnstsw
aas
mov
mov
cmp
jg
popa
aam
mov
lahf
cld
fdiv
mov
imul
loope
pop
repnz
movsb
cmc
inc
ljmp
int
lea
iret
out
pop
addr16
mov
jl
cld
jne
push
jl
andl
and
les
aam
jmp
stos
add
sub
pop
popf
or
xor
jg
addr16
mov
addl
aam
clc
pop
xor
cmp
push
push
xor
xchg
fisttpll
pop
cmp
ljmp
mov
adcl
mov
inc
cwtl
or
inc
add
imul
jmp
hlt
outsl
inc
fsubp
dec
aad
inc
dec
adc
lea
aas
adc
sahf
cmp
decb
sbb
mov
fldl
hlt
pop
fs
js
mov
sub
div
cltd
jb
mov
mov
pop
pushf
sub
mov
xor
test
xchg
mov
push
sbb
or
leave
xor
jns
and
in
repnz
cwtl
dec
and
jns
cmp
adc
dec
adc
mov
xor
pop
out
addl
arpl
pop
mov
ljmp
faddp
shlb
arpl
test
les
fdivrl
mov
xchg
nop
daa
ret
hlt
outsb
lret
sub
scas
xor
push
fwait
test
sbb
out
loopne
mov
lcall
lret
lock
sub
pushf
mov
mov
test
shll
cmp
add
pop
ljmp
call
int3
stc
pop
cltd
fisubrl
scas
add
mov
mov
dec
add
cmc
sbb
pushf
sbb
inc
imul
imul
sbbl
imul
adc
cmp
test
es
mov
mov
cmc
je
fmull
add
scas
mov
xchg
xchg
int3
inc
fs
pop
movsb
les
adc
fiadds
decl
jae
xchg
pop
std
mov
fsubrs
dec
and
je
ljmp
inc
cmp
inc
sub
mov
xchg
cwtl
int3
outsl
cltd
xchg
pop
mov
fsubl
cld
dec
inc
lock
ss
push
sbb
inc
add
andl
pushf
fnstenv
lahf
push
es
cmp
daa
cmpsl
mov
les
sbb
push
cmp
push
lods
mov
lock
xchg
shll
jo
cmp
icebp
dec
pop
jo
cli
sub
dec
into
and
fistpll
mov
in
jb
push
stos
cmp
lods
jns
push
sub
push
imul
inc
lcall
adc
lods
andl
mov
das
out
orb
jmp
clc
fidivrs
lock
jns
xor
pop
lock
cmpb
xchg
leave
mov
insl
inc
ds
ljmp
inc
cwtl
sbb
pop
leave
xor
push
xchg
out
dec
jbe
mov
imul
push
cmp
enter
test
mov
inc
jmp
test
ror
xor
fisubl
and
inc
icebp
call
push
inc
adc
shlb
outsl
roll
fbstp
jb
dec
fsubs
sti
jp
mov
dec
pop
jmp
mov
lds
push
mov
mov
loop
imul
sub
jg
jge
stos
cs
mov
adc
inc
lods
sub
movl
lods
sbb
mov
vphsubdq
arpl
xor
sbb
mov
xchg
and
inc
push
sub
push
push
aam
push
nop
arpl
flds
dec
mov
sti
cmpsl
or
ret
fcmovnu
mov
stos
sbb
dec
or
lahf
pop
popa
outsl
leave
jo
out
out
adc
in
fstp
mov
fs
and
push
aaa
pop
adc
lret
gs
pop
cli
sub
mov
bound
mov
push
jecxz
pop
call
cmpsl
pop
xchg
or
cmp
test
repz
jecxz
xchg
popa
push
lods
xlat
lods
pusha
sub
stos
ja
pop
mov
push
sahf
fcoml
fwait
push
test
loopne
fiadds
push
xchg
mov
push
or
fstps
mov
push
rclb
dec
push
repnz
stos
jg
push
sar
push
popf
out
jns
lea
dec
xor
xlat
add
addr16
mov
mov
aaa
dec
push
mov
sbb
mov
sti
xchg
sbb
push
addr16
jne
add
xchg
xchg
jp
mov
hlt
inc
test
pop
adc
dec
call
and
dec
das
into
shlb
scas
test
test
shlb
and
add
lcall
mov
push
mov
cwtl
test
cmpsb
inc
sbbl
xor
js
jnp
and
sbb
pop
nop
push
xchg
jmp
add
xchg
stos
addb
mov
mov
mov
scas
mov
sti
dec
iret
mov
scas
and
cwtl
out
lods
dec
cld
in
lret
dec
pop
jg
and
xor
lds
ret
cmp
xchg
push
rclb
dec
ss
std
pusha
insb
enter
addr16
sbb
jp
sub
dec
inc
mov
sti
mov
ljmp
add
std
inc
inc
pop
push
mov
aam
in
lods
pop
cmc
popf
fwait
cmp
xchg
and
mov
jle
sahf
es
inc
les
adc
dec
out
pop
jo
mov
shrl
out
adc
gs
pusha
jnp
dec
loop
mov
das
bswap
nop
ljmp
loop,pt
mov
mov
mov
stc
nop
jns
xchg
and
push
mov
lret
adc
aam
test
addr16
and
pop
pop
pop
xlat
jmp
js
inc
pop
push
mov
lcall
hlt
test
mov
rclb
inc
std
push
cmpsl
andb
xor
ds
push
js
dec
mov
dec
or
lods
and
pop
push
inc
mov
jb
mov
mov
push
xchg
stc
push
dec
lret
xchg
popa
or
iret
inc
rcrl
sti
mov
mov
mov
or
xlat
mov
out
outsb
fstpt
sbb
sub
sub
mov
call
fistl
popf
cmp
in
jno
adc
enter
mov
push
add
pop
dec
gs
pop
sub
push
outsl
inc
in
jl
jmp
mov
mov
cmp
mov
imul
xchg
imul
cmp
cmp
mov
into
enter
adc
sub
adcb
add
repnz
bound
xchg
loope
mov
jo
pop
andb
pop
imul
scas
icebp
add
stos
shll
dec
sahf
jne
xor
cwtl
inc
in
add
inc
xor
sbb
or
cld
cs
notb
lea
arpl
fidivs
ljmp
pop
in
xor
fstpl
ds
ss
pop
pushf
pop
rorl
test
sahf
stos
jg
cld
inc
lock
imul
adc
js
movsl
das
adcb
push
mov
or
enter
mov
ret
testb
pop
mov
cltd
push
sbb
cmpsl
into
dec
jecxz
mov
push
adc
ja,pn
pop
fwait
jmp
or
std
xor
jmp
fwait
pop
adc
loop
sub
clc
iret
popa
hlt
inc
xlat
sbb
inc
xor
pop
mov
sti
add
shlb
xor
jb
popw
or
xchg
gs
jns
or
outsb
push
in
pop
mov
mov
mov
add
add
and
or
and
int
inc
xchg
dec
jbe
aad
push
xchg
rcrl
xor
push
sti
bound
lods
xor
adc
into
shrl
pop
mov
mov
out
jp
lret
sbb
mov
repz
xor
rep
stos
repz
pop
cltd
in
sbb
sbb
dec
mov
xchg
repz
push
jbe
out
mov
xor
gs
xchg
xchg
xor
lds
das
dec
fiaddl
jmp
and
pop
sbb
xchg
jae
ja
cmp
int
dec
sahf
and
dec
imul
dec
mov
scas
aad
ret
ss
je
jl
jnp
cmp
push
jecxz
lret
xchg
xlat
mov
fsubrp
outsl
push
dec
lahf
jge
andl
sub
insl
xor
sbb
adc
aas
xor
pop
into
sbb
mov
imul
pop
sbb
popa
push
js
es
je
lea
xchg
xor
inc
jp
add
scas
and
fcompl
inc
jne
sub
das
lods
mov
xchg
jge
mov
jmp
mov
pop
jb
out
ret
pop
pushf
ds
xchg
inc
adc
rcrl
xchg
add
push
gs
int
cmp
es
inc
sti
inc
pop
es
push
push
dec
ds
jns
jo
rcll
mov
mov
mov
jp
add
xor
in
es
push
mov
sbb
loope
rclb
mov
ret
enter
mov
fcmovnbe
je
xchg
cmc
shll
shrl
or
or
ja
test
daa
mov
negl
xchg
clc
or
mov
out
popa
popa
jnp
scas
andb
lock
adc
addl
mov
repz
cmpsb
test
push
ficomps
add
lret
bound
sbb
arpl
jmp
inc
add
inc
mov
mov
xchg
stc
xchg
iret
jmp
jbe
adc
and
pop
repnz
cld
andb
add
inc
inc
jb
jb
mov
sbb
lods
pop
mov
mulb
pop
push
leave
popa
or
gs
pop
xor
pop
imul
jnp
adc
or
sahf
xchg
int3
lret
add
imul
ljmp
call
nop
sti
ret
call
cld
xor
mov
sbb
xchg
xor
lods
xchg
sub
fbstp
cmp
push
ret
ret
mov
loope
xor
pop
test
cltd
cmp
sub
mov
push
fdivrl
lret
mov
icebp
sub
cmpsb
cmp
scas
sbb
xchg
sub
inc
push
push
cmpsb
scas
mov
dec
jne
inc
jb
mov
pop
pop
in
dec
mov
fidivl
and
or
inc
scas
lock
mov
hlt
and
cs
negl
cs
sbb
mov
lods
or
test
push
repnz
push
and
xchg
sub
out
es
mov
lret
push
mov
rcl
add
imulb
arpl
aas
orb
jge
pop
cmp
movsb
xchg
jno
dec
push
sbb
push
cmp
and
out
dec
les
ljmp
sti
dec
ret
inc
pusha
loope
lds
cmc
lcall
sbb
push
cli
aad
mov
fidivrs
clc
or
inc
or
mov
fisubrl
testb
adc
scas
fdivl
lods
in
mov
adc
fdivl
pop
jno
jo
pop
mov
es
xchg
sbb
jmp
jg
xchg
test
ds
mov
pavgb
leave
mov
lret
mov
lret
clc
xchg
xchg
sahf
adc
movsb
andl
fstpt
push
mov
fisubs
xchg
lcall
jg
scas
mov
inc
repnz
dec
cmp
loope
push
mov
mov
xchg
xor
hlt
dec
call
push
sbb
ret
loopne
jns
insl
jge
lcall
adcb
loopne
jno
dec
mov
add
and
mov
jmp
push
test
lods
mov
sti
movsl
stc
sbb
outsl
dec
and
cmp
mov
add
clc
stos
sbb
rclb
out
add
and
andb
jp
aad
icebp
fsts
bound
mov
outsb
inc
cmc
adc
fdivp
mov
push
mov
xor
sub
bound
test
or
sub
and
rcll
jne
test
cmp
or
pop
pop
arpl
push
imul
xor
inc
xor
iret
xor
fs
ljmp
xor
negl
movsb
test
jmp
jae
cmp
ljmp
fwait
rcrb
pop
decb
cwtl
push
test
lods
push
insb
sub
and
sbb
or
gs
sbbb
movsl
xor
jno
adc
inc
jno
mov
cmc
dec
cmpl
or
shr
xor
or
add
add
mov
cmp
jmp
shlb
test
push
or
movsl
cmp
cmpsl
or
mov
repnz
mov
sub
sub
ret
adc
mov
xor
sub
cmp
mov
out
inc
cmp
mov
je
in
lcall
mov
xchg
in
addb
xor
out
dec
dec
xor
jne,pt
jle
fisttpll
das
add
clc
mov
adcb
or
test
call
pop
inc
roll
nop
pusha
fstl
lcall
cmpsl
in
mov
jae
movsl
cmp
repnz
repnz
out
imul
or
pop
push
test
mov
fiadds
mov
movsb
fsubs
je
jne
pusha
xchg
dec
int3
movsl
sub
push
pop
in
jno
mull
pusha
imul
mov
adc
pop
cmp
and
inc
lea
cld
aaa
cltd
into
mov
pop
imul
mov
insl
inc
pop
inc
pusha
lea
push
inc
repnz
in
lods
lcall
xchg
pushf
inc
shll
mov
insl
mov
es
stos
push
push
fdivs
popa
adc
lock
arpl
mov
mov
add
das
and
sbb
inc
mov
shrl
out
popa
adc
andb
push
mov
jmp
pop
mov
lea
add
adc
push
repnz
ret
push
addr16
pusha
ret
add
outsb
mov
fdivrl
sub
loop
pop
repz
cmc
jecxz
ss
or
xchg
sub
sahf
fisubs
rcl
rcrb
push
lock
xchg
filds
gs
adc
or
xlat
jmp
dec
inc
mov
xchg
or
sub
imul
scas
call
rcl
mov
stc
popf
xor
adc
dec
adc
mov
or
mov
inc
cli
sbb
mov
pop
in
and
and
pop
xchg
mov
loopne
mov
sti
jge
jmp
mov
jo
push
xor
fsubs
mov
add
dec
xor
stc
push
mov
inc
jle
addb
cli
test
cmpsb
ds
iret
fcomi
jge
jne
or
loopne
pop
add
sub
jl
adc
pop
jne
cmp
imul
adc
sbb
mov
leave
xchg
push
scas
call
movsb
jmp
lret
iret
jl
lods
mov
and
mov
mov
jae
mov
adc
loopne
add
lret
mov
loop
in
repz
pop
int
jo
mov
mov
mov
fxtract
pusha
xchg
jns
mov
lods
loop
dec
jmp
in
xchg
incl
mov
test
pop
inc
mov
push
iret
xor
jno
in
pop
cmc
sbb
stos
pop
popf
add
sahf
sahf
and
jb
fildll
jno
scas
data16
mov
inc
scas
mov
cli
ja
xchg
jmp
pop
in
fdivrs
xor
and
out
aaa
adc
cmpsl
mov
xor
stos
mov
imul
or
or
pop
mov
and
inc
sub
rcrb
rcl
stc
cmc
in
and
jle
gs
fisubrs
jno
jg
dec
push
mov
jnp
sub
push
mov
xor
dec
pop
inc
data16
inc
ficompl
inc
adc
and
mov
xchg
popa
pop
sahf
mov
nop
in
sbb
insl
dec
ljmp
dec
iret
fldl
mov
mov
sub
insl
push
sub
pop
jno
lret
into
cmp
cmp
xchg
add
add
and
pop
mov
js
xor
add
adc
cmc
lret
call
repnz
loope
sub
scas
add
aad
mov
add
and
jae
cmp
xor
and
std
and
movsb
cmp
sbb
insb
pop
dec
and
into
fmul
cmp
mulb
cmp
mov
pop
arpl
jno
dec
sbb
sbbl
jecxz
add
insl
or
or
stos
mov
scas
insl
iret
push
int
out
cmp
or
imul
push
sbb
adc
mov
movsl
sti
mov
roll
xrelease
test
pop
or
rol
insb
loope
pop
out
mov
cmp
aas
sub
jns
imul
sbb
insl
aad
mov
movsl
test
popf
mov
cld
movsb
andl
jae
les
xlat
pop
imul
pop
mov
fsub
xor
test
out
repnz
mov
push
outsb
sub
scas
dec
push
pop
xor
adc
sub
mov
dec
jns
or
push
dec
arpl
mov
xlat
cmpsl
or
loope
insb
imul
xor
mov
gs
push
ljmp
jno
push
xchg
pop
imul
icebp
mov
pop
cmp
iret
scas
hlt
pop
out
and
aas
es
adc
inc
add
and
mov
mov
mov
mov
mov
fisttpl
popa
cld
fadd
xor
test
das
ffreep
test
and
cmp
sbb
movsl
cmpsb
mov
lods
dec
adcl
jecxz
jnp
fisttps
cltd
arpl
xchg
outsl
add
sub
dec
xor
out
ja
lock
test
add
mov
mov
aam
shrb
sti
inc
xor
push
popf
aam
dec
pop
lret
mov
in
loopne
xor
ret
jl
popf
sub
and
cwtl
mov
pop
in
cli
adc
push
sbb
sub
cmp
dec
dec
pop
xor
xor
shl
add
test
xchg
add
jne
lds
xor
cmp
dec
fmuls
fsubl
jle
fnstsw
mov
adc
mov
in
pop
fs
in
xchg
jg
jle
lcall
scas
sbb
cmpl
xchg
mov
filds
sub
cmpsb
push
mov
add
sub
inc
scas
test
cmc
push
iret
insb
pop
mov
cwtl
xor
es
cmpsb
push
mov
ret
jmp
sbb
sub
movsl
cmp
cmp
and
jl
rdtsc
mov
jns
pop
arpl
fwait
jbe
mov
test
int3
mov
add
adc
rorl
cld
push
sbb
dec
jno
dec
pop
lret
scas
ds
test
jo
out
cmp
push
mov
and
push
fwait
mov
daa
out
push
cmp
ds
sub
push
inc
into
jae
out
out
popa
clc
and
xlat
jmp
sahf
cli
mov
inc
jmp
in
xorb
adc
loope
push
jns
push
adc
xor
ja
aas
cmp
rolb
dec
pop
mov
push
pop
scas
mov
lea
jns
subl
pop
dec
ret
mov
pop
ds
rclb
test
pop
jo
and
fisubs
mov
insl
mov
mov
pmaxsw
nop
mov
movsl
loopne
idivb
fdiv
sub
adc
nop
xor
mov
in
insb
out
sbb
int3
adc
not
shrb
push
enter
push
jne
stos
lds
int3
lcall
popf
or
jg
in
add
ja
push
ja
cwtl
outsb
push
ret
or
out
popf
mov
push
jmp
test
fs
popl
xor
icebp
adc
cmp
push
jb
lcall
sarb
cmpsb
les
mov
xchg
mov
sbb
pop
mov
movsl
imulb
lret
and
jp
xor
scas
loope
loope
push
or
aas
decl
movsb
nop
clc
iret
inc
push
bound
mov
fdiv
cmp
hlt
ret
sub
add
iret
inc
iret
xor
and
jne
pop
cmp
insb
mov
outsb
fimull
stos
iret
jmp
jb
movsb
mov
je
shl
push
xchg
outsb
add
out
fucom
cmp
cs
add
cmp
outsb
shr
imul
jecxz
push
mov
js
inc
push
jnp
sbb
jae
flds
imul
xor
jmp
scas
pop
ss
and
das
jp
mov
mov
sahf
in
sbb
shlb
or
jne
add
pusha
stc
imul
jne
in
test
add
mov
fs
insl
cmpsl
sbb
hlt
sar
add
cltd
imul
inc
sbb
pop
shll
jns
cmpsb
scas
or
mov
sarb
adc
in
imul
dec
dec
mov
loopne
or
out
mov
mov
dec
std
pop
sbb
dec
jecxz
jb
and
fstps
mov
mov
and
neg
xor
sub
push
xchg
mov
or
lods
inc
mov
loopne
outsl
inc
in
xor
arpl
les
test
pop
out
cs
push
loop
sub
lock
xchg
push
arpl
mov
shrb
push
outsb
mov
mov
ds
jg
push
cmp
pop
ret
cmp
shl
push
pop
push
jae
or
pop
push
mov
jno
fstpt
jecxz
xchg
arpl
inc
sti
cmc
arpl
pop
xchg
adc
inc
mov
pushf
bound
fimull
je
sub
scas
icebp
or
jecxz
fwait
add
lahf
push
das
dec
mov
aad
lds
jnp
into
insb
or
cmp
shrb
pop
cwtl
lods
cmp
shll
push
out
lock
lret
xlat
jno
xchg
jno
stos
or
mov
es
jns
lock
push
inc
jmp
orb
sti
fwait
mov
mov
jns
add
lcall
in
stos
and
push
aas
push
nop
lods
subb
push
sahf
xchg
jp
cmp
mov
add
lahf
cmpsb
or
push
in
out
stos
dec
or
and
ss
mov
pop
sbb
jl
lcallw
xor
into
mov
psubsb
cmp
outsl
popf
mov
mov
faddl
fsqrt
scas
jne
xchg
pusha
adc
jns
xchg
cld
xchg
fisttps
int
mov
enter
or
movsl
sbb
mov
mov
sbb
adc
ss
addr16
xor
jge
lcall
adc
cmp
mov
mov
jns
sub
dec
repz
in
xchg
cs
mov
mov
push
add
int
xchg
fs
jge
je
idivb
outsl
add
insb
xor
scas
pop
loop
push
dec
mov
sahf
clc
js
repz
sub
shrl
addr16
inc
push
repz
repz
cmc
sub
xchg
inc
lea
ror
filds
int3
fmuls
cmpsl
out
push
or
xchg
jo
bound
and
sti
mov
or
sar
jbe
rcrl
mov
xchg
sbb
insb
shlb
dec
daa
mull
lds
cmp
pop
in
int3
and
push
aad
sbb
sub
push
das
cmp
in
repz
cmp
bound
push
ss
enter
xor
leave
and
mov
lret
xchg
add
xchg
sub
push
mov
dec
adc
jbe
test
inc
daa
lcall
push
in
xlat
push
inc
jg
clc
je
or
cmpl
pop
mov
xor
iret
lret
mov
shlb
dec
dec
add
sub
push
pop
pop
mov
addr16
xor
leave
dec
mov
out
test
aam
jb
dec
fisttps
shr
fldcw
xlat
outsb
and
cmpsb
mov
les
adc
push
popa
inc
pusha
xchg
jg
outsb
pushf
faddl
dec
cmp
mov
mov
test
dec
in
mov
xor
fbstp
aad
stc
fstpt
and
mov
adc
inc
cltd
add
out
sbb
adc
fs
cmp
jbe
out
imul
fnsave
sahf
dec
sbb
lret
cmp
rcrb
nop
xchg
andl
sub
popf
and
xchg
lods
xchg
repnz
mov
push
popf
jecxz
adc
outsl
cmp
stc
je
xor
bound
stos
xchg
ja
movsl
sbb
cmpsb
cmp
sahf
aas
les
clc
xor
or
shl
or
inc
fadds
and
out
test
ja
xchg
insl
push
lret
sub
idivl
shrb
push
xor
adc
out
xor
jmp
sti
ficoml
call
and
andb
push
jno
fisubrs
dec
aas
sub
in
xor
inc
stc
scas
les
push
xchg
cmovle
lds
xchg
xor
sub
enter
or
xor
fsubs
clc
dec
cmp
mov
sar
hlt
fidivrl
and
inc
pop
xor
pop
stc
into
enter
sub
mov
jo
and
jno
lcall
movsb
mov
mov
sbb
in
push
mov
les
rcr
es
push
aas
daa
sub
pop
loop
and
ds
jmp
sub
popf
sti
lock
dec
std
shr
xor
int3
pop
mov
pop
adc
cmpsb
cmp
loop
imul
daa
insl
ret
ficoml
mov
mov
mov
test
jno
sub
adc
lret
push
mov
iret
stc
shlb
mov
js
mov
mov
mov
sub
pop
dec
pop
jle
mov
pop
mov
pop
rcrl
xor
xor
fnstsw
pop
js
lcall
inc
sub
dec
shrl
sub
and
lock
je
and
lods
inc
shrb
loopne
into
leave
push
es
ja
inc
inc
das
mov
addr16
dec
lret
sub
loopne
hlt
mov
mov
lret
mov
cmp
insl
enter
pop
imul
cmp
add
mov
and
adc
add
test
adc
aaa
fwait
ss
push
icebp
xor
and
divl
push
test
es
jb
adc
insb
xor
scas
test
jne
mov
movl
or
nop
cmc
xor
push
enter
iret
movsl
jecxz
mov
jnp
pop
xchg
sub
rcrl
or
cmp
hlt
xchg
aaa
mov
gs
xor
ret
test
mov
mov
push
add
sub
call
push
or
testb
mov
mov
or
mov
ret
outsl
xor
daa
icebp
mov
xor
jmp
jmp
jb
stos
cmpsl
jno
xchg
pop
cmp
stos
or
and
leave
fdivrl
stos
and
jo
filds
mov
ljmp
pushf
mov
jmp
mov
push
dec
inc
jecxz
sbb
sub
pop
pop
pop
icebp
mov
movsl
test
cli
or
divl
mov
test
mov
gs
pop
xchg
push
outsb
enter
sub
dec
dec
xchg
xchg
shl
shlb
dec
fnstenv
adc
das
lret
jl
sub
fmull
pop
mov
nop
and
rclb
bnd
incl
lods
xor
inc
inc
xchg
cmp
dec
push
cmp
movsl
dec
dec
mov
imul
scas
out
inc
in
xchg
push
leave
cmpsl
xor
pop
mov
call
test
sub
adc
jnp
data16
add
sub
je
push
hlt
jg
mov
xor
in
aam
nop
cli
mov
ret
pop
movsl
xor
mov
cmpsb
xor
dec
cmp
and
inc
push
jo
pop
cmpsb
inc
or
inc
andb
bound
xchg
adc
in
lds
adc
mov
push
adc
lods
inc
dec
iret
mov
fdiv
cli
xchg
mov
mov
loopne
and
repnz
xor
arpl
push
aas
bound
test
xchg
mov
inc
fucom
mov
aas
and
inc
aad
ds
insl
mov
push
outsl
add
addl
out
and
cmovge
cs
outsl
repnz
or
inc
ds
insl
sti
sbb
pop
or
in
jbe
lret
es
push
sub
cmp
in
enter
aad
clc
notl
jle
enter
xor
push
les
xor
jle
mov
jl
outsb
jo
loope
sbb
mov
cwtl
out
jnp
ja
sti
xor
imull
enter
sub
push
mov
xor
aaa
and
xchg
pushl
repnz
adc
call
adc
dec
cmp
jge
ret
hlt
mov
in
in
addr16
ret
enter
jno
mov
xor
cmpsb
into
icebp
in
dec
push
xchg
lds
stos
adc
test
and
ja
mov
test
scas
ja
aam
enter
rol
pusha
outsb
lret
cmp
push
jno
jb
xor
pop
ds
mov
xchg
lock
call
lods
imul
push
pusha
ljmp
mov
cmp
sbb
cmpsl
inc
mov
cs
adc
popa
pop
push
add
insl
inc
pop
dec
ss
mov
push
cmc
leave
stos
mov
je
add
add
jns
mov
icebp
pop
aaa
aam
iret
push
push
cmp
jb
jb
cmp
xor
lds
jmp
inc
add
fwait
or
add
adc
enter
daa
pop
xchg
mov
xor
movsl
cmp
mov
ljmp
mov
xchg
aas
fistpl
xchg
loope
adc
in
lret
pop
and
mov
incb
ja
movsb
jnp
add
push
stos
or
push
inc
loop
scas
fstl
mov
ljmp
repz
enter
call
adc
jecxz
mov
mov
mov
jmp
das
gs
pop
hlt
xchg
push
cs
cmpsl
inc
or
int
sub
mov
mov
push
xchg
scas
xor
cmc
sti
in
mov
inc
aad
lock
imul
popa
xchg
xor
inc
loopne
mov
or
popa
xchg
call
and
inc
popa
jg
sub
lret
dec
sbb
add
out
and
arpl
in
std
lods
pop
and
adc
cmp
lret
das
cmp
inc
clc
pop
add
cltd
cmp
pop
ficomps
push
cs
xchg
xor
mov
pushf
ret
sbb
fxch
push
fidivrs
repnz
outsb
pop
or
data16
out
adc
imul
ficoms
pop
addr16
mov
sub
mov
push
pop
mov
pop
ljmp
pop
mov
lods
loope
sti
or
xchg
shrl
nopl
stos
mov
pop
xor
pop
shl
inc
mov
pop
sbb
imul
mov
pop
sbb
sbb
pop
pusha
push
jnp
sub
cmp
arpl
mov
xor
arpl
sbb
push
sub
subb
or
jnp
data16
xchg
mov
shll
cld
xchg
inc
lds
lock
inc
sub
bound
xchg
adc
add
xor
jl
lds
ret
loop
add
add
ret
pushl
or
inc
leave
je
mov
out
in
sub
sub
mov
fwait
rorb
push
outsb
loopne
xor
mov
xor
push
mov
or
sub
loop
lds
sub
xor
or
dec
adc
data16
pop
push
adc
jle
push
mov
mov
push
addr16
cmpsb
pop
mov
repnz
mov
adc
nop
sti
sbb
mov
stos
push
dec
and
dec
jp
inc
push
fwait
fwait
repz
shrb
leave
jmp
or
mov
ljmp
mov
jnp
or
inc
push
test
fisubl
xchg
sub
repz
cmp
push
or
fisttps
stc
cld
dec
inc
pushf
cmc
jb
outsl
sbb
xchg
test
sarl
in
les
dec
test
pop
scas
mov
or
mov
mov
jne
jo
es
cltd
ja
in
lods
jns
repz
xor
or
lret
jns
lea
aas
dec
popf
or
inc
fimull
stos
repz
add
inc
cmp
lods
push
mov
fbstp
push
or
rcrb
jle
test
xlat
jns
jae
sub
int3
dec
mov
mov
sbb
int
mov
movsl
sub
sbb
sbb
xchg
movsb
mov
cmp
inc
dec
ja
nop
inc
fcompl
js
sbb
and
rol
repnz
xor
loope
inc
pushf
xor
icebp
pop
in
inc
dec
hlt
push
mov
ljmp
es
xchg
adc
pop
xchg
pop
das
xchg
das
jns
pop
mov
add
mov
outsl
add
outsl
push
xchg
mov
or
pushf
addr16
inc
movsl
gs
jnp
inc
int3
lret
cli
xchg
cmpsl
imul
out
aaa
int
adc
rol
xor
xchg
jg
mov
lcall
in
sbbl
and
lret
sbbb
adc
mov
mov
cli
data16
or
xchg
ss
outsb
test
scas
add
rclb
mov
outsb
cmp
mov
jl
push
lock
xor
mov
lods
pop
repz
std
movsb
in
mov
test
push
and
pop
push
xor
push
pushf
mov
mov
lds
cmp
mov
lock
into
and
jle
jne
mov
lahf
pop
imul
scas
imul
shrl
dec
pop
icebp
mov
mov
lds
test
ficompl
cltd
and
fwait
xor
sbb
pop
mov
insl
je
push
outsb
aad
xchg
xchg
cmpb
xchg
scas
jle
xor
or
out
enter
adc
pop
decb
cs
test
push
xchg
ret
icebp
enter
jo
and
cmp
shrb
rcrb
and
jo
das
mov
gs
scas
mov
dec
xor
push
roll
aam
imul
sbb
xor
in
inc
or
lea
adc
outsb
cmp
mov
mov
mov
ret
lret
movsb
xor
mov
mov
minps
mov
mov
inc
pushf
mov
pushf
out
mov
and
xchg
clc
js
mov
out
cmp
test
repnz
jg
scas
aam
daa
xchg
jno
call
divb
fcmovb
pop
jecxz
jp
push
pop
test
mov
or
aad
mov
or
test
mov
push
inc
adc
cmp
add
pop
fisubs
lret
repnz
xlat
mov
idivb
imul
mov
les
jne
iret
out
loopne
stos
add
xchg
cmpsl
mov
out
sahf
mov
or
cmpsl
mov
xchg
imul
std
dec
jecxz
inc
ljmp
ja
push
push
inc
push
cli
pushf
frstor
jle
popf
xor
int3
stc
or
aam
xchg
lea
shll
sub
jp
call
mov
xlat
ss
xor
lahf
stos
push
sti
lret
stc
mov
jne
sbb
int3
js
movsb
mov
mov
lahf
pop
enter
pop
inc
mov
sbb
bnd
jmp
mov
iret
and
add
and
pop
das
std
mov
pop
sti
mov
push
adc
in
jp
add
mov
lds
add
outsl
ficoms
hlt
push
jb
lret
stos
loopne
jns
shrb
es
xor
adc
mov
iret
lods
add
xor
addr16
cltd
jne
mov
out
cmpsb
mov
mov
ss
jbe
cld
cmp
or
push
mov
jnp
mov
cmp
add
out
xchg
cmp
xor
orb
sub
pop
scas
iret
fnsave
lock
sub
ret
cmc
ss
push
mov
mov
pushf
int
repnz
or
mov
imul
hlt
movsl
inc
cmp
xchg
repnz
cmp
repz
adc
jns
movsl
mov
aam
xor
aaa
int
xor
jmp
xor
xchg
cmc
les
ret
fwait
cmpsl
addr16
loop
sbb
push
push
mov
push
fistl
fsubr
xor
movsb
mov
pusha
daa
mov
imul
jg
sub
xor
xor
pop
icebp
mov
call
pop
std
outsl
jge
sub
sbb
loop
cmp
cmp
pop
mov
scas
dec
push
and
push
mov
andb
xchg
or
cs
jl
ja
push
popf
sahf
mov
xchg
pop
dec
mov
pop
iret
andb
add
xor
sahf
fwait
xchg
jno
inc
test
jg
in
pop
mov
ret
jnp
and
xchg
xchg
mov
jmp
lahf
mov
fldenv
mov
mov
out
filds
gs
fwait
mov
mov
dec
dec
das
fisubs
dec
lds
inc
mov
push
xchg
sahf
ret
xchg
mov
adc
or
sbb
test
sbb
xchg
add
sub
out
sub
popa
pusha
rorl
cmpsb
sbb
icebp
jb
out
scas
adc
push
ds
cmp
xchg
cltd
and
loope
fwait
and
mov
je
xchg
roll
je
pop
cmc
mov
cld
dec
cmp
cli
subl
pop
int3
pushf
pop
lahf
incb
add
push
rcl
pusha
andb
adc
aad
mov
andb
mov
cmp
in
cwtl
dec
sbb
mov
mov
call
sbb
push
rcr
and
inc
sahf
sbb
insb
and
adc
das
add
mov
xchg
fwait
sbbb
mov
xlat
pop
inc
leave
xchg
lock
inc
xlat
popf
jmp
out
jmp
fidivs
hlt
lahf
fs
jno
add
or
adcl
or
arpl
sbbb
rolb
push
cmp
out
dec
je
sub
in
push
add
orb
and
mov
mov
imul
ds
out
xor
and
dec
inc
sub
cwtl
adc
cli
ds
arpl
dec
in
or
aam
sub
jl
add
ja
mov
jmp
inc
jo
push
fisttpl
clc
or
in
test
movb
jg
int
inc
mov
fmull
jb
xchg
andl
cltd
xchg
mov
scas
out
push
cmp
cmp
push
inc
shlb
daa
mov
cltd
mov
sub
imul
orb
mov
inc
fs
push
jae
xor
sbb
mov
cltd
fnsave
sub
inc
lock
pop
inc
fadd
xchg
or
jle
les
rol
xlat
out
gs
bndstx
sub
insl
dec
inc
mov
mov
and
add
shll
xchg
sahf
lahf
xchg
sbb
add
xchg
sbb
add
dec
out
std
jo
out
das
int
out
xchg
mov
aad
xlat
and
push
movsl
or
jo
or
cmpsl
out
inc
pop
out
gs
jmp
cmpl
and
xor
in
popf
movsb
push
movsb
sub
push
sub
mov
cltd
imul
cltd
mov
xchg
jp
push
adc
mov
push
lcall
and
fs
aad
repz
or
add
push
lods
fildll
dec
push
xlat
sub
mov
adc
scas
in
pusha
or
sub
pop
jae
shr
pusha
cmp
cmp
test
push
mov
mov
mov
pop
out
push
mov
pop
cmpsb
jns
loope
ret
fwait
xchg
out
dec
dec
pop
xor
dec
pop
sbb
and
ret
pop
jle
or
outsb
or
test
cmp
jge
or
out
xor
fimull
orb
hlt
and
outsb
add
decl
fdiv
shll
jmp
push
jne
dec
jae
jle
adc
adc
ljmp
jge
mov
ljmp
int3
push
je
push
arpl
xor
fildll
insb
sub
and
repz
out
mov
movsl
sub
aas
adc
jg
aas
es
mov
dec
lds
dec
test
dec
add
aad
pushf
daa
push
adcb
mov
mov
jmp
dec
pushf
mov
and
daa
addr16
lret
daa
adc
pop
out
adc
or
dec
jp
divb
add
cltd
mov
mov
das
cmp
mov
popf
sbb
hlt
sbb
into
subb
xor
lock
nop
push
sub
mov
xchg
loop
js
or
rcrl
adc
cwtl
xchg
stos
in
popf
mov
push
movsb
lcall
or
dec
sbb
mov
adc
or
movsb
sub
mov
xchg
cwtl
jmp
notb
push
cmp
ljmp
pop
push
mov
outsb
xor
out
dec
dec
pop
addb
jmp
push
es
out
or
test
dec
int3
fidivrs
add
or
cs
dec
dec
add
xchg
int3
testb
adc
mov
jbe
or
inc
mov
push
call
std
push
xchg
push
push
pop
mov
xchg
out
insb
add
mov
pop
icebp
mov
mov
or
sub
push
pusha
sti
push
fnstcw
rcll
adc
push
int3
xor
add
add
mov
adcl
aad
xor
imul
gs
fbstp
ljmp
adc
jecxz
in
cli
mov
mov
xchg
rcrb
mov
xchg
sbb
leave
roll
popa
dec
lock
add
pushf
cli
fstp
outsl
adc
or
mov
pop
adcl
in
sbb
or
push
push
shll
cmp
loope
xlat
fwait
out
push
ds
loopne
pop
les
push
mov
pop
test
jo
dec
cmc
pop
cmp
mov
shl
add
das
pop
xchg
loope
cmc
loopne
out
xchg
mov
in
mov
dec
dec
pop
sbbl
fwait
inc
mov
jle
sbb
mov
imulb
or
fdecstp
mov
insl
pop
lds
add
in
mull
or
lds
and
shl
mov
scas
adc
or
movsb
jb
adc
push
sub
cmpsl
daa
cld
cmp
dec
push
and
cli
pop
test
inc
outsb
aad
ss
adc
rclb
push
push
mov
scas
add
mov
add
or
lods
hlt
pop
mov
cmpl
push
outsb
jle
fiaddl
js
cli
jecxz
mov
idivl
add
roll
xor
popa
ja
cmpsb
nop
cmp
inc
and
iret
cmpsw
ja
push
jmp
in
test
pop
inc
and
and
je
sarb
push
add
clc
mov
loopne
daa
shll
test
jne
cmpsb
inc
cwtl
xchg
enter
jmp
jle
cmp
fsubrl
repz
scas
rclb
push
fsubrl
inc
lods
icebp
jbe
arpl
jne
cmp
sub
dec
sub
add
fisttpl
in
or
loop
dec
test
sbb
push
test
std
sbb
mov
lcall
mov
push
and
js
push
scas
sbb
xor
mov
daa
stos
fld
seta
repnz
enter
cmpb
jno
mov
outsl
mov
jecxz
xor
in
lea
or
adc
mov
out
xchg
repz
sbb
inc
sub
pusha
fcmovne
lods
push
cli
or
dec
add
fwait
mov
das
mov
jmp
add
outsb
mov
lea
iret
mov
xchg
push
test
aaa
or
mov
inc
bound
mov
sbb
iret
movsb
mov
ret
pushl
or
sbb
push
scas
pushf
push
aaa
out
mov
or
imul
out
cmpsl
daa
adc
icebp
cmp
pop
inc
pop
in
push
jmp
pushf
xorl
cli
out
icebp
dec
adc
imul
repz
fstpt
cltd
sub
outsb
pop
stos
mov
jp
push
sbbb
cmc
insl
xor
or
push
dec
jnp
fisttps
cltd
arpl
pop
jp
rolb
xchg
adc
cwtl
jl
dec
fisttpl
aam
add
ret
and
xor
jne
inc
cmp
rcl
pop
mov
jg
xor
lea
fidivs
fildl
outsb
gs
dec
add
mov
scas
and
xor
fs
pop
xchg
mov
shrb
mov
inc
or
cmpl
fisubs
and
jbe
or
inc
addr16
adc
imul
lods
dec
call
sub
out
jmp
adc
pop
mov
cmpl
mov
insl
orb
pop
fwait
xchg
pusha
stos
aas
in
adc
out
sbbl
pop
scas
lea
lods
stos
stos
in
sub
sbb
and
jg
sbb
mov
mov
push
sbb
inc
fnsave
cmp
fmull
lea
aaa
jg
nop
jle
push
lock
mov
cmp
mov
lret
mov
sbb
cltd
inc
cmp
xor
pop
frstor
lret
popa
sbb
ret
movmskps
stos
jne
imul
add
jl
mov
addr16
mov
rcrb
xor
arpl
push
push
mov
inc
and
inc
mov
adc
adc
sahf
daa
leave
insb
fs
mov
add
jns
mov
sahf
call
test
lods
mov
test
arpl
sub
pusha
mov
or
add
fnstenv
mov
pop
add
popa
insb
sbb
loope
sbb
add
mov
in
dec
loop
jbe
add
adc
jl
imul
shl
mov
cmpsb
pop
movsb
movb
or
sbb
push
out
mov
push
mov
jge
inc
adc
add
lods
jno
rcl
repnz
shl
adc
aaa
xor
mov
mov
ret
add
js
jp
rcl
lea
sbb
pop
xor
imul
sub
adc
repz
pop
sbb
xchg
pop
push
or
negl
aas
jle
outsl
lcall
in
iret
and
push
cmp
mov
push
ljmp
jbe
insl
adc
ret
movsb
and
push
outsl
jbe
mov
sbb
mov
out
sti
jb
ja
inc
sbb
mov
mov
mov
dec
lret
fisttps
mov
and
call
stc
nop
and
shrb
sub
push
cmpsl
or
push
je
decl
sahf
mov
ss
lea
push
repnz
sub
xor
and
add
mov
fbld
mov
push
pop
ja
inc
add
in
and
jae
out
jnp
jae
add
mov
jno
jae
mov
sbb
jge
push
xor
orl
xchg
jmp
into
dec
and
mov
mov
jns
jge
in
scas
out
mov
pop
insl
lret
xor
inc
gs
int
fwait
jns
ffree
mov
movsl
cmp
xor
cmp
clc
xchg
pop
fcoml
test
cmp
stc
dec
call
jo
mov
jle
clc
imul
stos
and
mov
pop
and
arpl
lret
push
test
mov
out
lea
lea
test
sbb
and
cmp
mov
add
adc
repz
ret
fcmove
cld
movsb
push
mov
dec
sarb
in
sbb
cmp
lcall
in
xchg
and
xchg
orb
clc
jns
js
stos
ds
mov
xchg
cs
dec
clc
cmp
xor
sub
pop
and
sub
out
pop
dec
faddl
ds
shrl
push
mov
dec
push
in
dec
dec
shll
sub
dec
mov
dec
sub
flds
rcr
dec
xor
jns
cmp
mov
sarb
xchg
ficompl
dec
sbb
xchg
mov
push
push
into
pop
sbb
mov
push
push
xchg
js
xchg
pop
xor
mov
inc
cs
jmp
sbb
loopne
cltd
push
adc
test
arpl
cmc
andl
jne
mov
jecxz
inc
push
fildll
fsubrs
add
cmp
lods
push
mov
adc
push
lods
loopne
imul
inc
fisubrl
ds
leave
outsb
inc
push
sub
xchg
pop
push
repz
stc
dec
mov
push
cmpsb
and
out
push
mov
outsl
adc
cli
cmp
jmp
adc
js
fsubrl
ror
mov
outsl
in
push
scas
inc
push
lods
push
shll
adc
mov
insb
add
xor
xchg
mov
leave
out
push
jl
ret
and
push
pop
xchg
cmp
xchg
jbe
mov
push
bound
lret
jecxz
mov
sbbl
inc
jp
es
pop
out
mov
lock
cmp
fmuls
and
dec
add
xchg
scas
ljmp
jge
insb
js
lahf
mov
idivb
inc
shll
and
insb
jle
stos
mov
jo
aaa
pop
lea
stc
int
daa
cmp
mov
dec
loopne
add
mov
imul
adc
xchg
jmp
push
push
xor
shlb
adc
jl
pusha
imul
shlb
movsl
sub
add
pushf
orb
xchg
ret
add
push
add
mov
xchg
push
leave
imull
ret
push
or
push
push
inc
mov
dec
inc
bound
jmp
jns
scas
mov
fnsave
leave
out
scas
subl
adc
fistps
sahf
subl
mov
das
ret
inc
fs
sarb
hlt
inc
ljmp
xchg
inc
in
cmp
mov
push
jnp
aas
shrl
icebp
sbb
or
arpl
dec
loop
subl
lret
mov
out
out
scas
push
mov
rclb
mov
dec
js
xchg
jne
cmp
inc
inc
mov
ret
sti
jns
inc
xadd
and
sti
movsl
mov
aas
push
add
xchg
leave
rorb
ja
push
call
pop
xor
ret
out
enter
add
insb
rcll
mov
fdivrp
xchg
adc
clc
xchg
xor
cli
xchg
roll
shl
subb
add
xchg
stc
jge
pop
push
cwtl
mov
push
lods
inc
mov
jne
push
ds
add
mov
or
jno
add
or
xlat
adc
lds
ret
cmp
lods
ljmp
testb
push
xchg
cmp
push
insl
ja
jne
fldt
pop
stos
jmp
outsl
pushl
mov
jp
loop
mov
push
push
ficoml
xchg
xchg
into
inc
xchg
insl
loope
movsb
and
hlt
mov
ljmp
ss
pcmpgtd
sbb
outsb
stos
test
nop
pushf
inc
add
dec
mov
mov
sbb
lret
pusha
mov
insb
mov
sbb
mov
repnz
adc
out
add
add
in
aad
loopne
push
xor
sub
mov
jne
jb
out
mov
iret
jmp
jge
xor
and
jbe
sahf
leave
ja
xchg
cmp
pop
jmp
sbb
inc
in
sub
hlt
pop
cmp
push
inc
icebp
cmp
out
shlb
ss
adc
add
xchg
out
testl
sbb
push
test
or
cli
jl
lds
mov
fs
push
in
ret
les
or
aad
aaa
xor
mov
outsl
ds
cmpsb
in
popf
sbb
ret
jle
call
jmp
fwait
pop
jmp
lods
in
nop
ds
js
cmp
jae
out
call
jns
sbb
and
sbb
mov
movsb
cmp
out
jae
jg
push
push
loop
xor
ja
sub
out
je
enter
sub
push
cmpsl
jo
dec
pop
pushf
rorb
add
mov
jge
push
add
xor
andl
sbb
test
ret
sub
andb
testb
cmp
or
dec
mov
call
sbb
mov
cmc
outsl
daa
push
push
pop
add
jge
out
pop
imul
movsl
nop
and
pop
xchg
mov
in
out
movsl
aam
inc
fcoms
adc
outsb
cwtl
das
pusha
ret
outsb
je
scas
pop
xchg
aaa
push
ss
adc
pop
loop
icebp
or
mov
dec
rcl
jnp
hlt
push
xchg
dec
xchg
sub
xor
jg
out
mov
dec
rcrl
mov
jl
xchg
rcll
xor
fdiv
inc
inc
daa
dec
lods
stos
test
sub
adc
lods
xchg
inc
mov
mov
popa
sarl
test
or
imul
push
dec
dec
out
push
aad
cmpsl
and
stos
jb
push
jge
cld
sub
aad
xchg
into
jp
jge
repnz
mov
cmpsl
lods
insb
jbe
xchg
int
int
testl
popa
push
mov
mov
in
sbb
test
es
push
sbb
fdivrs
jne
int3
roll
inc
cld
push
lock
addr16
jge
leave
mov
in
cmpsl
mov
push
sbb
lds
outsl
jb
sbb
test
inc
mov
mov
or
in
sub
fnstcw
xchg
das
loopne
xor
jl
daa
nop
or
lods
mov
sbbl
fdivrp
mov
dec
xor
dec
fcom
outsb
cld
mov
inc
inc
lods
faddl
pop
mov
add
les
cmpsl
pop
sbb
and
jl
inc
xchg
mov
sti
push
add
mov
test
test
fwait
in
push
rcr
pop
movsl
bound
jg
pushf
insb
int
or
sub
ds
or
loop
into
imull
sub
add
mov
mov
in
xlat
add
fwait
jbe
imulb
sbb
faddp
push
fcomps
xor
addb
lods
add
ret
cmp
gs
sbb
call
aam
movsb
or
push
in
jno
add
mov
pop
mov
cmpl
pop
repz
inc
fcompl
imul
ss
sub
subl
pop
mov
rorb
sbb
movsl
fimull
fwait
mov
jmp
rclb
dec
movsb
mov
data16
xor
imul
add
mov
pop
inc
mov
xchg
hlt
scas
inc
fbld
xor
mov
test
ret
ret
hlt
movsb
cltd
mov
xor
pushf
sbb
inc
mov
pop
int
sbb
xor
insl
insb
mov
or
mov
subb
daa
mov
jl
mov
mov
daa
fs
fidivs
repnz
fimull
ret
push
in
hlt
js
iret
sahf
sub
pop
pop
sti
push
aas
ljmp
arpl
mov
imul
js
inc
das
dec
in
jecxz
mov
mov
dec
inc
push
test
test
fisttpl
repz
cmp
adc
dec
sbb
sbb
sbb
push
add
dec
mov
sbb
repz
test
sub
push
out
dec
add
jecxz
loopne
mov
bound
cltd
arpl
mov
repnz
adc
rcl
mov
pop
insb
mov
add
outsl
outsb
sbb
sbb
test
ret
cli
xchg
jecxz
call
cmpl
mov
and
jmp
pop
shrb
arpl
mov
stos
ret
mov
insl
rorb
imul
xchg
rolb
dec
pop
xchg
xchg
xor
nop
and
dec
sub
cmpsb
cli
xchg
cltd
fsubl
dec
inc
loopne
je
les
sbb
mov
scas
scas
shrb
int
xor
and
loope
or
mov
test
xor
add
imul
xchg
sbb
pop
aaa
imul
iret
retw
ret
pop
es
stos
mov
and
inc
xor
jp
mov
jb
sbb
inc
adc
cltd
lahf
std
cli
mov
movsb
jae
leave
cmpb
jne
xchg
adc
mov
mov
test
and
mov
shrl
xchg
faddl
shr
shrb
lods
jl
jb
int
inc
push
rclb
cmp
js
shlb
add
mov
mov
add
xor
icebp
jmp
rolb
xchg
sub
jbe
xor
xor
cmpsl
out
inc
jmp
in
xor
lcall
clc
adc
insl
push
leave
xchg
cmp
ljmp
push
pop
gs
dec
mov
add
rorb
mov
call
fildll
cmp
xchg
pop
cmpsl
call
sub
es
mov
int3
or
jmp
ljmp
push
fisubrl
fsubr
test
ret
outsl
mov
push
sbb
ret
iret
pop
jg
ss
enter
ret
mov
fcompl
ret
es
xlat
movsb
repnz
xor
mov
cmp
bound
push
fisttpll
scas
and
sub
and
adc
in
jae
or
add
add
test
mov
imul
push
pop
ja
push
dec
out
jp
or
push
xchg
inc
ret
xchg
fidivs
inc
fnstsw
fmull
dec
pop
adc
adc
stos
adc
or
lods
jnp
xchg
pop
lods
outsl
xlat
pop
pusha
stos
adc
sarl
xor
push
lods
imul
xor
xor
clc
cmp
int3
addb
inc
jle
in
pop
into
gs
jp
dec
jnp
rol
add
inc
cltd
inc
cmp
subb
xlat
rolb
cmp
mov
fstps
test
mov
ret
cmp
mov
fwait
gs
movsl
mov
mov
popa
and
add
out
push
pop
mov
add
adc
nop
test
pop
sbb
and
mov
inc
pusha
in
loopne
mov
push
sub
push
out
subb
sub
jno
jmp
cld
and
adc
jle
fs
mov
sub
repnz
out
xchg
je
mov
jno
movsl
mov
div
mov
std
sbb
out
pop
pop
and
jb
hlt
inc
mov
adc
dec
rorb
repz
fcompl
outsb
sub
ret
aas
rclb
imul
add
inc
dec
and
fcom
push
call
jg
outsl
out
push
sbb
jo
sbb
sti
mov
inc
loop
arpl
out
or
sahf
adc
add
sbb
mov
nop
mov
mov
loop
jmp
push
sub
sub
or
stos
shll
out
push
rorl
int
in
dec
fs
iret
jbe
add
mov
popf
mov
lahf
data16
add
adc
sub
lock
ja
jne
cwtl
mov
rol
sbb
pop
jl
xor
mov
jnp
dec
in
lds
mov
rcll
and
lret
xchg
push
jge
mov
out
cmp
andb
rclb
fidivl
incl
shll
fsubs
mov
into
out
sbbl
push
es
scas
xor
add
mov
mov
cmp
jae
popa
andb
popf
outsb
enter
mov
data16
in
add
scas
inc
leave
loopne
push
jmp
les
xchg
ficomps
fdivrl
jecxz
int3
lret
sahf
das
aad
adcb
mov
clc
mov
push
cmp
sbb
cmpsb
std
pop
inc
add
sti
jae
inc
fbstp
jno
inc
aas
iret
sti
push
mov
into
sbb
mov
and
xchg
and
xor
lods
inc
add
lcall
and
inc
jb
mov
inc
adc
in
rcll
fstps
push
outsb
push
into
cmp
repz
cmpsl
sbb
and
mov
ja
imul
xor
mov
test
mov
das
xchg
aam
add
xorl
adc
dec
sbb
fdivrs
mov
mov
fistpl
fs
adc
inc
test
or
stos
push
nop
std
mov
jmp
xchg
jl
nop
stos
xchg
mov
sbb
test
sbb
dec
insl
jle
aam
jmp
xorb
cli
pop
iret
jp
xchg
int
mov
inc
inc
std
std
push
dec
out
sbb
pop
repz
sbb
dec
les
shl
inc
cmp
andb
jl
and
dec
xor
cmpb
xchg
adc
mov
add
les
mov
dec
outsb
pop
je
lcall
or
out
test
jle
and
mov
imul
push
mov
insl
aaa
jp
hlt
cmpsb
jmp
aaa
fstps
mov
fidivrl
shlb
out
sarb
and
lds
loop
cmp
xor
lock
rcr
std
test
and
push
ljmp
mov
pusha
lods
push
cltd
mov
push
mov
ljmp
sbb
pop
dec
jle
jg
mov
push
out
push
fsubrp
clc
mov
icebp
mov
stos
jg
clc
push
or
in
test
out
xor
jge
xor
jmp
xchg
mov
dec
shrb
pop
or
fstps
push
ficomps
fs
clc
iret
sbb
dec
imul
xlat
pop
fldt
pusha
ja
jo
push
sub
xchg
testl
xchg
cltd
mov
inc
add
jb
aam
aam
in
ret
jne
xor
xchg
sbbl
pusha
mov
xchg
sbb
and
cltd
push
mov
and
xchg
sbb
scas
outsb
sbb
or
test
xor
enter
fwait
int
xchg
js
cltd
jno
cwtl
dec
cmp
cld
dec
sub
shlb
lds
sub
es
sahf
mov
dec
je
inc
pop
or
push
mov
sbbl
or
mov
push
mov
inc
cld
faddl
outsl
inc
add
mov
popl
jae
iret
sbbb
sbb
fstps
pop
test
push
fnstenv
icebp
adc
ds
push
xor
mov
add
andl
jmp
loop
fcoml
cmc
fldt
xchg
imul
fbld
adc
inc
push
lea
cltd
add
ret
pop
sub
imull
loope
stc
sarb
shll
or
mov
pop
jg
imul
sub
mov
call
pusha
mul
inc
lods
iret
add
cmp
sbbl
iret
pop
mov
mov
pop
lahf
sti
jmp
fbstp
stos
cmp
mov
sub
aaa
pop
jmp
push
aad
lcall
fstps
xchg
rcl
stos
push
lods
in
push
cmpsl
adc
mov
jl
mov
in
sbb
aam
popf
lods
repz
xor
jp
decl
in
mov
imul
xor
pop
xchg
mov
jmp
in
popf
ss
push
out
cmp
mov
addr16
scas
add
sbb
fldcw
mov
pop
sub
sub
imul
xchg
icebp
jmp
mulb
loope
xchg
jne
jo
btr
inc
shlb
data16
mov
shrb
int
push
dec
xlat
sbb
pop
jns
stos
fnstsw
clc
sahf
mov
pop
mov
ret
adc
add
add
pop
mov
ret
fidivl
sahf
scas
pop
cwtl
popa
shll
jg
cmp
or
jnp
pop
jmp
sbbb
scas
push
sub
xchg
mov
and
add
pushf
sbb
add
pop
ss
sbb
inc
ret
adc
mov
jno
push
pop
mov
inc
pop
loop
inc
fimull
inc
jmp
dec
aas
mov
sub
lods
mov
sub
xchg
mov
mov
jmp
mov
pushw
lret
xchg
jns
stos
xlat
dec
adc
jmp
data16
sub
push
sub
push
pop
mov
in
std
or
aaa
add
inc
insb
cmpsl
stc
jl
mov
push
or
mov
or
inc
push
stos
out
aaa
into
pop
dec
out
idivb
insl
add
iret
test
inc
data16
sbb
lret
push
enter
popa
negl
inc
lahf
scas
std
inc
jle
jb
incl
iret
and
xor
lock
loopne
movsl
push
push
inc
jl
mov
imul
sbb
cld
stos
and
dec
loopne
inc
inc
fadds
mov
aas
pop
idivb
adc
pop
in
xor
adc
cli
cltd
xor
jge
push
cmp
popf
mov
xchg
mov
xlat
adc
addr16
dec
lahf
es
lods
ljmp
pushf
mov
fisubrs
jbe
mov
xchg
cmp
push
rorl
nop
pop
xchg
or
pop
or
aaa
aam
in
jg
mov
sub
jbe
out
addr16
lea
fucomi
rcr
cld
shlb
mov
mov
xchg
nop
lds
imul
cmpsl
andps
test
test
jle
data16
daa
mov
xor
cmpsb
fldl
xchg
push
leave
dec
loop
mov
jbe
imul
pop
fdiv
jmp
mov
fcmovu
adc
cmp
movsb
aas
push
daa
scas
repnz
mov
xlat
sub
sub
jne
loopne
mov
push
inc
mov
imul
xchg
inc
pop
add
and
and
push
es
adc
push
fwait
xor
in
loop
repnz
ja
adc
ret
stos
inc
fucomp
idivl
pop
setp
or
sbb
jae
and
addr16
mov
popf
mov
jne
je
push
pop
cld
sub
icebp
sub
inc
movsl
icebp
fbld
mov
inc
dec
in
test
xor
adc
fidivl
dec
cltd
cltd
das
iret
inc
adc
dec
lock
push
out
fldl
push
ret
xor
fwait
xchg
outsl
sub
mov
inc
xor
stos
mov
dec
fdivs
push
push
push
mov
outsl
mov
dec
cmpsl
push
or
sbbl
movsl
cld
fwait
xor
in
xorl
or
xlat
cli
pushf
mov
mov
ljmp
out
inc
pusha
lods
out
sbbl
jbe
sub
xor
add
ja
and
cmp
lret
pop
push
xchg
mov
lret
sbb
ds
loope
pop
mov
and
sub
stc
add
lret
or
xor
and
and
rcll
dec
dec
push
mulb
loop
aad
in
outsb
add
xor
int
push
loop
sti
pop
mov
stos
add
inc
jne
lret
cmpsb
daa
or
jge
popa
pop
lcall
outsl
daa
cmp
fidivl
add
cs
clc
push
pop
inc
test
dec
sar
in
test
push
outsl
fs
dec
pop
ljmp
jno
jo
xlat
negl
xorb
aas
int3
leave
mov
insl
lods
xchg
pop
mov
rolb
add
cmpsl
sbb
mov
xchg
ss
and
aam
mov
pop
dec
arpl
rorb
cli
mov
ja
das
and
dec
mov
aad
adc
gs
dec
pop
xchg
mov
jns
inc
pop
imul
outsb
imul
test
pop
xchg
and
push
mov
fadd
ja
inc
dec
cmc
out
sahf
stos
inc
adc
inc
out
icebp
dec
dec
sub
pop
cmp
inc
ret
loop
imulb
fwait
xor
sbb
orl
sbb
or
into
gs
cmp
xchg
lcall
xchg
mov
int
sahf
jp
rcrb
mov
sbb
cld
push
cli
jp
push
scas
scas
lea
fisubs
loope
ljmp
js
jge
bound
xor
jmp
test
mov
test
icebp
xchg
pop
jmp
xchg
int
inc
push
and
stc
mov
shr
pop
stos
push
test
pop
sti
pop
out
iret
stc
fmul
pop
jecxz
mov
js
xchg
out
lds
scas
stos
push
push
push
xor
cmp
mov
mov
jns
rclb
adc
leave
mov
cmp
fwait
and
jmp
push
jae
inc
stos
jg
xchg
outsb
inc
lods
dec
cmp
and
sbb
or
lds
sub
cmp
insb
or
mov
pop
jl
cmp
push
mov
out
or
jle
iret
hlt
push
enter
mov
push
loope
frstor
mov
data16
push
iret
sbb
pop
dec
dec
int3
add
xchg
mov
push
inc
sbb
mov
adc
mov
jno
inc
cltd
lret
jle
sti
mov
xor
xlat
mov
fdivrl
in
inc
pop
out
sbb
xlat
push
imul
rorl
pop
popa
cltd
mov
and
jno
or
mov
mov
test
adc
sub
clc
inc
call
outsl
xchg
stc
push
pushf
sub
cwtl
xor
push
xor
jg
add
or
das
movb
dec
in
ret
fnstenv
clc
xchg
mov
movsb
lods
jmp
cmp
push
mov
jg
push
enter
xchg
mov
and
add
mov
mov
stos
cs
addr16
fiaddl
xchg
inc
out
out
ds
sub
sbb
cld
dec
aam
out
cwtl
js
mov
jg
call
or
cltd
push
mov
popa
test
into
mov
lods
mov
xor
xor
in
inc
dec
ret
xchg
jne
shrl
arpl
xlat
xchg
pusha
repnz
inc
nop
push
icebp
hlt
sub
adcb
cmp
sbb
ljmp
insb
dec
dec
lds
sbb
sbb
inc
shrb
imul
and
mov
stc
pushf
mulb
jl
push
mov
daa
xchg
adc
cltd
sbb
push
lcall
push
adc
mov
push
addb
cmp
fists
std
push
mov
popa
rorb
xor
add
mov
jmp
sub
dec
push
mov
dec
out
xor
jnp
add
lret
into
test
vpcomb
rclb
in
inc
pop
and
cmp
fstps
dec
add
jmp
and
loope
loope
lods
fwait
inc
dec
fistps
jns
cli
in
jg
pop
fildl
sub
mov
inc
ret
incl
and
pop
xchg
test
xchg
add
repnz
sbb
mov
xor
lcall
mov
movsl
out
ljmp
outsl
push
int3
xchg
mov
xchg
cmp
lcall
fdivrl
jecxz
xor
dec
jns
jnp
lcall
paddb
leave
jne
mov
mov
cmpsl
bswap
xorl
lret
cld
and
mov
xor
cmpsb
jae
sahf
mov
cli
movsl
cmp
push
in
push
repnz
cli
das
outsl
mov
mov
sub
cmp
ret
dec
mov
sbb
loop
cmovl
sbb
ror
cltd
mov
into
loop
shll
mov
es
iret
das
mov
add
rclb
sarb
adc
push
xchg
xor
pop
repnz
lock
mov
mov
mov
inc
push
subb
cmc
sub
mov
inc
xor
mov
fadds
pop
xchg
push
and
pop
data16
xchg
call
mov
adc
add
mov
and
fsubs
push
inc
xchg
addr16
push
fsubp
push
std
int3
and
fmulp
int3
repz
in
mov
sub
orb
jnp
jbe
sbb
mov
jne
jno
or
jne
cmp
lods
mov
jne
jmp
pop
mov
inc
jmp
xchg
cmp
dec
cmp
fxtract
pop
pop
leave
rcrl
divl
mov
mov
and
add
jae
mov
fiaddl
ss
popa
clc
add
jno
adc
mov
mov
xor
mov
mov
pop
inc
rcl
mov
loopne
jmp
repnz
mov
or
inc
gs
loop
popf
xchg
sbb
insb
mov
mov
dec
sbb
lcall
ret
pop
fcompl
sbb
push
cmp
std
mull
sub
jo
les
jp
jmp
repz
fdivrl
ljmp
fmuls
xchg
push
pop
jnp
fdivr
cmc
ss
iret
icebp
or
push
rcrl
loopne
rcrb
loopne
mov
pop
jns
dec
and
sub
insl
add
ja
dec
scas
add
lods
push
je
xchg
cmpb
mov
clc
lods
add
stos
mov
add
aad
push
add
push
outsl
pop
rcrb
clc
in
jle
or
xor
clc
fs
mov
addl
sub
movsb
in
mov
fildl
xorb
and
push
pop
dec
cmp
hlt
mov
jmp
aam
xor
xor
adc
outsl
add
pop
xchg
sbb
cmp
aas
in
loopne
pop
nop
ret
bound
and
xchg
shll
nop
mov
stos
push
loopne
and
inc
out
dec
push
inc
ror
bound
pop
pop
popa
jge
sub
mov
lret
call
jge
pop
mov
mov
mov
cmp
cmp
jle
inc
sti
int3
gs
bound
movsb
aad
xchg
pop
jp
fcompl
pop
lock
add
flds
and
pushf
sbb
aas
push
sarl
mov
mov
lret
cld
mov
xchg
dec
fidivs
mov
movsl
inc
mov
scas
faddl
mov
push
push
dec
test
imul
inc
ret
loop
leave
shl
jne
jge
out
xchg
add
js
pushf
std
test
dec
stos
and
cmp
sub
jne
enter
push
in
add
mov
insb
cmp
or
test
out
xor
fcmove
adc
stc
pop
sahf
push
popf
daa
mov
test
int3
lds
inc
aam
cli
cs
xchg
pusha
adc
push
lret
inc
out
cs
pop
rcrb
dec
ret
sarl
negb
inc
dec
dec
and
in
xchg
outsb
leave
cmc
test
push
sti
jnp
in
scas
pop
mov
pop
and
enter
add
stc
loope
sub
test
and
jno
outsb
jl
sbb
fists
je
test
jae
mov
xlat
dec
aam
pop
lret
jne
and
pusha
int
sti
repnz
ss
scas
testl
sub
lret
push
cmp
add
mov
sbb
and
stc
mov
in
and
mov
push
int3
push
sbb
and
dec
jmp
push
and
inc
gs
mov
das
sub
dec
in
cli
sbb
test
and
add
mov
out
push
scas
sub
mov
movsb
cmp
test
or
cmc
pop
pushf
cli
ds
push
addr16
push
fsts
movsl
das
jmp
push
call
xchg
and
cld
mov
loope
bound
mov
push
add
inc
jp
xchg
pop
fbstp
loope
insb
ret
into
cmpl
js
stc
mov
out
shlb
not
addb
div
mov
loopne
jno
sbb
aad
push
outsl
mov
add
push
ss
jg
mov
sub
dec
test
fs
inc
adc
xchg
pushf
inc
add
jnp
and
imul
dec
xchg
jge
mov
mov
loopne
aad
push
dec
aaa
stos
cmp
bound
movsb
insl
mov
sub
dec
cmp
orb
and
push
or
ret
mov
adc
jno
sbbb
fildll
jb
popa
add
or
ja
jns
adc
call
rclb
or
add
or
int
mov
gs
insl
fdivrp
fdivp
push
sbb
mov
xchg
pop
test
aam
inc
loop
mov
ss
cmc
push
mov
xchg
scas
inc
pop
fiadds
mov
pushf
xor
xchg
sub
cltd
mov
add
push
push
sbb
jge
and
jne
hlt
out
mov
push
cmc
jge
loopne
data16
pop
or
test
cmp
sub
aaa
dec
std
push
mov
enter
insb
ss
dec
xchg
testb
jae
sbb
mov
addr16
xchg
or
faddl
jne
je
cmp
stos
stc
lret
fdivp
cld
fiaddl
add
fildll
pop
fcmovu
dec
mov
mov
addl
push
cltd
push
pop
aas
dec
call
cmp
xor
popa
aas
jl
add
scas
push
mov
sub
adc
push
jp
mov
push
sbb
movaps
mov
int3
jo
push
jle
mov
cli
pop
or
pusha
xchg
cs
sbb
movsb
aas
int
lea
pop
popf
repnz
jb
mov
out
cmp
loopne,pn
por
inc
sub
inc
retw
lods
dec
loope
mov
aad
leave
dec
in
leave
dec
mov
fcoml
mov
xchg
scas
pop
mov
pop
cmc
out
fndisi(8087
mov
adc
xor
filds
loopne
jg
inc
pop
mov
in
out
and
and
imul
popf
xor
test
in
add
jle
or
sahf
jae
xchg
pop
sbb
es
jmp
sub
call
inc
ljmp
jl
xchg
pop
mov
push
xchg
scas
mov
jb
je
and
gs
mov
mov
iret
sbb
add
jg
and
xor
rcll
mov
ja
scas
sub
push
mov
clc
push
and
cmpb
fsubs
mov
stc
mov
scas
push
and
jl
mov
adc
inc
out
xor
lock
je
das
pop
sbb
jp
mov
push
cmp
rorl
ret
pop
and
lret
mov
inc
sbb
or
nop
hlt
popf
inc
add
fcompl
cmp
in
cmpsb
adc
push
out
mov
test
lcall
pop
fnstsw
pop
mov
push
dec
out
dec
dec
dec
in
testb
cmp
pop
cmc
xor
daa
mov
popf
sub
mov
mov
mov
bound
mov
pop
and
iret
jae
cmp
adc
repnz
jmp
or
mov
mov
rcrb
adc
cld
cltd
mov
icebp
push
cmp
repz
jne
ds
push
stos
call
test
movsb
ja
or
cwtl
lock
icebp
fs
sahf
mov
mov
in
mov
mov
aad
pop
lret
adc
clc
pop
cmp
sub
insl
ret
mov
xor
dec
or
rorb
push
cltd
inc
loope
lea
in
test
mov
inc
scas
adc
xor
and
outsl
loop
cs
or
sar
jge
inc
cli
cmp
mov
in
gs
jmp
cmp
inc
pop
adc
push
jo
adc
jb
jmp
scas
cmc
int
xlat
and
aaa
dec
mov
mov
data16
pop
and
adc
jns
add
lret
js
fstpt
cltd
movsb
push
daa
fdivrs
or
cltd
iret
in
mov
icebp
sbb
fdivl
mov
lret
insl
or
cmp
repz
jno
jnp
negb
inc
cmc
lahf
pop
lcall
lds
jo
stos
negl
andl
mov
fists
xor
ss
addr16
ljmp
jbe
sbb
fs
lret
adc
and
stos
pop
in
inc
int3
mov
push
mov
dec
test
push
pop
fbstp
and
lods
adc
aas
bound
ficoms
lret
inc
sub
hlt
and
jmp
push
inc
je
lods
inc
push
inc
xor
mov
mov
orl
push
nop
xchg
call
insb
xlat
mov
or
xchg
das
scas
loopne
ret
pushf
shlb
std
iret
sti
jno
sub
popa
jns
das
aaa
xchg
mov
xor
lods
mov
xchg
jmp
xchg
pushf
sti
ljmp
jmp
xchg
mov
es
xchg
push
popf
jo
sbb
mov
cmp
sbb
mov
sarb
pop
mov
lcall
mov
inc
sub
xchg
rcrl
or
insl
stos
ja
xor
dec
jmp
pop
insb
dec
into
fnsave
cmc
jbe
or
dec
ret
repz
sbb
and
cs
mov
dec
fcomps
and
jecxz
jns
dec
and
and
pop
xorb
int
push
push
out
cmp
xor
out
mov
out
or
mov
jecxz
jae
inc
rolb
divl
adc
cmpl
int3
and
pusha
push
in
scas
pop
aaa
mov
fsubrs
adc
lcall
and
pop
mov
pop
addr16
arpl
mov
cmpsl
notb
subl
jnp
rcrb
fnsave
ja
adc
pop
stos
push
cltd
gs
lret
sbb
and
inc
sbbl
jno
ja
mov
xchg
mov
ret
repz
add
fbstp
mov
pushw
inc
jmp
inc
xchg
lea
lock
pop
xchg
sahf
lods
pop
mov
xor
sub
in
test
dec
xor
lea
movsl
mov
cmc
sub
sbb
clc
stos
pop
mov
ret
daa
mov
out
fmulp
test
mov
sarl
mov
adc
jg
mov
mov
orb
jns
outsb
or
loopne
daa
mov
mov
repnz
lock
mov
xchg
mov
xlat
scas
jge
and
movntq
push
aaa
xor
xchg
push
sub
les
cmp
push
inc
js
inc
xlat
lcall
add
cmp
loop
mov
pop
sahf
fcomip
mov
mov
jae
imul
inc
add
xor
inc
je
aad
cltd
dec
sub
loop
inc
fwait
pop
pop
adc
std
imul
jle
sub
iret
jns
cmp
sub
pop
dec
cmpsb
push
sbb
xchg
sub
pushf
lods
rclb
add
mov
xchg
and
mov
jecxz
adc
sub
fucom
in
push
iret
lods
je
mov
cmp
mov
pop
aas
xchg
add
js
pop
dec
popf
push
icebp
movsl
fidivl
and
xchg
xchg
mov
in
fadds
movsb
pop
jl
add
xor
gs
add
scas
sbbl
stos
cmpsb
ret
lock
mov
adc
pop
dec
mov
jns
jecxz
push
ficoml
stos
or
xor
mov
push
dec
mov
inc
pop
xchg
je
xor
push
push
add
add
inc
adc
xor
mov
jmp
outsl
out
cltd
add
sbb
pop
inc
pop
repz
cmp
divl
pop
sbb
cmp
aas
pusha
orl
ror
push
or
push
push
sub
jo
hlt
rorb
das
push
sbb
dec
aam
push
pop
fildl
jecxz
dec
pop
ds
pop
sub
mov
and
sub
scas
sbbl
pop
mov
add
fmull
mov
clc
inc
fisubrl
hlt
inc
fistpl
shlb
lock
jb
fimuls
fistps
and
mov
jae
loopne
std
cmp
or
test
inc
fs
push
lods
push
js
inc
push
cmp
nop
mov
pop
repz
jle
mov
mov
lods
and
test
cs
xchg
pop
xlat
rorb
rorb
leave
popf
cmp
sub
lods
loopne
add
sub
fs
pusha
aad
mov
stc
mov
fstpt
push
test
adc
stc
in
inc
repnz
aaa
xchg
stc
mov
jmp
sbb
mov
lret
gs
xor
cmp
in
pop
or
xchg
sub
mov
mov
sub
fwait
aam
pop
sub
mov
daa
mov
fsubrp
dec
xlat
scas
cmp
dec
sub
jg
push
push
cmp
mov
mov
add
xor
ja
shr
aas
jg
push
arpl
fsub
cld
sub
push
jb
nop
push
fistl
loope
testb
rclb
jne
push
and
int3
pop
mov
arpl
inc
dec
cmp
mov
pop
mov
sbb
jnp
mov
and
xchg
mov
pop
cmp
fcmove
mov
fidivrs
and
in
imul
add
icebp
test
stos
vpaddq
cli
daa
dec
mov
jle
addl
rorb
mov
pop
ljmp
push
movsl
jge
js
sbb
pop
lock
cmp
mov
pop
insb
push
insl
cltd
out
push
xchg
test
out
xor
cltd
cmp
sub
sub
das
mov
popa
adc
push
rclb
add
js
dec
popa
adc
pop
push
xchg
xor
xor
jns
insb
add
test
ja
add
aaa
enter
pop
ficomps
mov
in
popf
arpl
jmp
testb
mov
and
or
leave
das
push
dec
and
or
mov
pop
scas
sub
cmp
fisttpl
sbb
sbb
sub
inc
repz
jbe
dec
pop
test
ja
leave
push
outsb
test
adc
push
stos
fmull
sub
add
cmp
or
out
jo
push
lret
aaa
adc
cli
push
jo
jg
ljmp
icebp
popa
jg
cwtl
mov
sbb
mov
push
cmp
out
ds
or
aam
mov
ja
mov
pop
ficoml
mov
mov
dec
lock
sub
sbb
add
lods
mov
fstpt
sbb
test
pop
mov
mov
movsl
sub
roll
jl
ficomps
imul
adc
std
cmc
loopne
call
imul
xchg
add
dec
sub
sub
shlb
mov
adcl
add
xchg
fiadds
push
mov
out
daa
ss
add
ficompl
fs
mov
adc
rcll
add
lods
sub
mov
addr16
sub
out
jb
xlat
outsb
adcl
dec
pop
movsb
cmc
lea
cmp
mov
fprem
dec
mov
jno
mov
jg
or
mov
les
fdivl
stc
mov
mov
lahf
or
jns
scas
inc
je
fwait
shl
int
cmp
push
cmp
loopne
mov
jmp
or
int
sbb
push
in
lret
jns
div
and
pop
and
cmpsl
movsb
cli
cmp
pop
inc
repz
jne
sbb
addr16
rolb
adc
js
test
sti
into
ss
loopne
insl
mov
sahf
push
out
push
sub
sarb
dec
xchg
xor
or
sub
arpl
and
lea
add
mov
cli
leave
mov
addr16
push
test
stos
imul
shll
add
xchg
cmpsl
mov
xchg
pop
clc
xchg
sub
stos
mov
fstpl
out
leave
repnz
stos
jl
bound
dec
xchg
adc
loop
icebp
movsl
fdivrl
mov
daa
jns
stc
aaa
jg
and
outsl
test
jge
mov
sbb
in
iret
or
imul
sbb
lds
hlt
mov
ds
inc
cmp
pop
dec
jbe
push
and
pop
sub
inc
fidivl
pusha
idiv
add
cmp
fisubrl
stc
addl
aas
lret
mov
inc
jns
gs
lock
rorb
test
adc
push
movsb
cs
pop
lods
push
jge
nop
pop
and
dec
fstpt
pop
scas
imul
scas
sbbl
test
mov
sbb
xor
imul
mov
adc
int3
mov
ss
inc
lods
jp
int3
mov
loopne
fstl
test
push
cwtl
jne
lcall
stc
je
mov
in
pop
lcall
sbb
xor
push
mov
fildll
cli
addr16
add
cmp
and
push
sbb
lret
stos
inc
std
dec
mov
popa
push
or
fnstenv
fsubs
or
inc
and
inc
data16
pop
add
test
push
in
test
or
add
outsb
std
xor
xorl
sub
sbb
jp
lret
adc
push
int3
sbb
sub
jecxz,pn
addb
dec
jp
or
ret
sub
jns
jle
iret
mov
repnz
mov
adc
testb
das
inc
test
push
dec
push
pop
rcr
jae
pushf
cwtl
mov
add
into
test
jecxz
scas
std
pop
ret
sarb
pushf
inc
dec
pop
inc
ljmp
lods
icebp
fsubr
xlat
loop
pop
leave
pusha
scas
in
sbb
daa
mov
and
jne
loope,pt
xchg
sub
sbb
cli
cmc
ja
sbb
mov
lock
mov
ret
or
pop
pop
pop
rorl
sbb
pop
mov
lahf
gs
or
out
cmp
jl
mov
frstor
push
pop
push
movsb
mov
sbb
push
cli
jae
pop
movsl
or
adc
push
xchg
es
pop
call
or
frstor
aas
xor
push
out
stos
cli
mov
std
repz
mov
sbb
test
in
cltd
data16
jg
call
adc
jae
push
mov
push
jle
sub
lret
shll
and
aaa
sub
pop
xchg
lret
lea
or
mov
push
loop
out
outsl
xchg
sub
aas
add
push
and
jmp
ret
stos
imulb
adc
out
call
mov
loope
daa
mov
xor
pop
stos
inc
mov
hlt
lods
pop
push
sub
sub
fsubl
iret
mov
std
adc
icebp
fcoms
sbb
xchg
sub
jo
fsubl
dec
mov
sbb
pop
cmp
rclb
sub
rcl
inc
adc
psubw
push
xlat
lret
mov
lcall
xorb
cmpsl
or
pop
movsb
testb
pop
rcr
dec
push
cmpsb
shrl
cld
mov
lods
pop
push
scas
jp
sub
push
cmp
cwtl
or
test
mov
or
mov
cmp
add
dec
jg
idivb
out
sbb
nop
dec
fs
lock
fwait
xor
adc
iret
push
cmp
jl
cmp
aad
sahf
push
js
dec
or
dec
hlt
mov
pushf
xchg
sub
jne
push
pop
in
leave
cmp
jmp
shrl
jno
mov
ret
mov
pop
arpl
mov
cmp
cmpsl
ds
insb
mov
call
cmp
mov
insb
das
popf
into
mov
movsl
sbb
subl
xchg
mov
rorb
push
out
mov
or
and
mov
push
adc
xor
add
aam
sub
in
incb
push
push
lea
jne,pn
lahf
stos
sbb
lea
xchg
cld
mov
mov
faddl
sbb
xor
fcmovnu
mov
stos
stc
push
push
push
dec
xchg
sub
clc
aas
rcl
inc
lock
addr16
xlat
jb
mov
mov
in
xlat
and
jo
js
xor
outsb
xchg
pop
aam
sbb
outsb
nop
fisttpll
fistl
fwait
add
sahf
pop
inc
nop
inc
xchg
lock
gs
lcall
hlt
cld
outsb
add
outsl
pop
and
rol
shld
or
xchg
adcl
scas
mov
loope
jbe
xor
fstl
inc
pop
sbb
mov
jns
push
cwtl
and
pusha
add
js
push
fists
out
jmp
mov
lahf
stos
fs
sub
dec
mov
jno
pusha
mov
cmp
xchg
shrb
inc
xlat
pop
icebp
clc
inc
scas
pushf
inc
xchg
cmpsb
sbb
dec
sbb
sub
xchg
frstor
xchg
jecxz
fadds
leave
and
cs
and
mov
test
loope
ss
mov
push
xchg
and
pop
mov
adc
adc
lret
mov
mov
stos
in
icebp
push
out
jb
ret
aam
lds
hlt
mov
cmp
or
cmp
test
push
fisttps
sarl
add
pop
adc
jb
mov
pop
int
faddl
pop
push
adcl
mov
mov
cmp
mov
mov
dec
push
lcall
in
cld
pop
xlat
in
or
inc
pop
cltd
jbe
cmp
out
arpl
in
fcom
cld
xor
test
add
cmp
mov
loope
and
dec
jnp
scas
cmc
mov
mov
xchg
test
mov
and
dec
aaa
rol
and
test
sbb
frstor
adc
add
popa
push
push
das
push
sbb
push
popf
or
jbe
mov
mov
stos
inc
fsubp
push
in
hlt
push
out
iret
sub
push
lea
pop
pop
sbb
jg
fdivs
movsl
aas
cli
pop
mov
jge
lods
xchg
inc
mov
mov
fadd
ja
aaa
push
adc
std
pop
lret
sub
xor
xor
sbb
xor
xchg
out
in
pop
cmp
dec
mov
mov
popa
out
sbb
jl
and
ja
cs
aam
inc
jmp
xor
faddp
mov
adc
cmpsb
adc
fwait
sbb
outsl
es
push
movsb
sub
jno
cld
call
loopne
pop
outsb
loopne
es
subb
ret
mov
ljmp
js
daa
into
pushf
xchg
adc
out
fidivrl
mov
lods
cmp
adc
insl
mov
js
xchg
fwait
xchg
repz
ds
arpl
pop
cs
pop
test
adc
dec
leave
hlt
out
lcall
cmpsb
add
call
cmp
aam
sbb
insl
jle
pop
lock
jecxz
xchg
cs
outsl
movsb
jecxz
dec
jp
in
test
notl
jge
ss
cmp
std
add
gs
lahf
rclb
lret
push
and
adc
cwtl
das
ds
xchg
ss
outsb
into
pop
dec
repz
jno
fcompl
sub
vhsubpd
push
rcrb
fists
mov
and
pop
cmp
scas
out
lret
sbb
popf
push
repnz
mov
test
aas
psubusw
jge
test
add
jo
mov
clc
inc
push
jo
sub
ja
popf
inc
push
xchg
in
loope
inc
mov
ret
dec
sub
pop
mov
dec
test
sahf
push
jae
sub
xor
movsl
enter
dec
mov
mov
cmp
shlb
insl
or
sarl
xchg
jo
loope
insl
xchg
sti
or
mov
xor
outsb
sub
mov
mov
nop
add
arpl
test
dec
push
aas
mov
push
cltd
out
ds
jp
out
scas
pop
fwait
or
push
movsl
mov
test
lods
mov
aad
xor
addr16
das
out
fisttpll
mov
xchg
sbb
add
mov
xor
inc
push
sarl
adc
inc
inc
xlat
mov
sub
xor
push
loop
pusha
dec
repnz
fsubs
mov
mov
incl
dec
sbbl
mov
test
in
sbb
test
jo
sahf
sbb
sub
jecxz
test
aad
mov
loop
push
inc
out
test
cli
nop
xchg
pop
scas
lcall
and
rcr
cld
push
sbb
insl
jg
cmp
add
xor
xor
or
xlat
iret
adc
scas
inc
sub
lcall
mov
pop
jmp
jg
lods
xchg
sti
push
adc
add
popf
mov
sbbb
and
inc
fcmovbe
call
or
int
bnd
add
cltd
std
mov
das
sarl
push
push
adc
inc
das
pusha
test
hlt
push
cmpsl
xchg
mov
imul
mov
or
pop
push
stos
cmpsb
rcrb
std
inc
jbe
push
mov
xchg
jg
adc
push
daa
sti
pop
push
add
into
roll
push
add
xor
int
mov
xchg
repz
shl
dec
xchg
icebp
add
jp
mov
les
imul
xor
fs
pop
dec
xchg
aam
dec
inc
add
mov
mov
fdivrl
sub
add
mov
ret
pop
push
dec
lods
stos
sahf
aaa
pop
daa
xor
jg
lret
daa
stos
lret
pop
xchg
hlt
cmp
jmp
sub
xchg
push
test
scas
test
pop
cld
fbld
lds
loopne
sahf
bound
cmp
adc
push
inc
mov
mov
pop
bnd
inc
dec
xchg
or
dec
mov
out
jecxz
dec
loop
jmp
imul
mov
pop
xlat
sbb
pusha
addb
cmp
imul
jb
out
jle
enter
fcomps
push
mov
jl
gs
fiadds
pushf
iret
jne
sti
push
sub
inc
stc
or
jns
pop
cmp
lods
ljmp
sarb
push
dec
outsb
aad
outsl
fnsave
adc
inc
bound
dec
lods
push
xchg
push
and
sub
adc
lods
das
pushf
xor
mov
add
push
push
decl
sub
or
in
shl
mov
dec
loop
mov
fwait
push
pop
cmc
test
add
cmpsb
jl
test
cmp
addb
iret
fs
inc
sbb
and
test
push
in
push
cs
aad
je
mov
hlt
xor
sub
lahf
dec
rcll
aas
push
in
jo
cld
pop
icebp
cwtl
lea
lcall
lcall
cmp
out
clc
cwtl
cwtl
shll
mov
aam
loopne
arpl
xchg
adcb
push
in
cmp
inc
pushf
lret
rolb
and
lcall
pushl
aam
sti
jno
popa
dec
cmp
scas
call
fucomp
mov
mov
jecxz
call
xchg
or
int3
fcomi
dec
mov
mov
push
in
rcl
out
add
imul
and
mov
lds
adc
and
out
ljmp
addr16
dec
jno
jg
stos
inc
mov
inc
stos
leave
xor
addr16
rcrb
inc
into
cmpsb
push
in
cmpsb
out
movsl
mov
pop
imul
or
movb
and
inc
out
imul
out
mov
jmp
repz
xchg
notl
scas
addr16
in
rcl
shll
xchg
lods
sub
push
mov
clc
add
xor
popa
scas
aas
xchg
addr16
arpl
jp
hlt
into
stos
mov
and
call
fs
or
sub
mov
fbld
enter
mov
mov
fimuls
add
mov
jp
lret
das
data16
sub
add
mov
aas
pop
mov
and
xchg
int
mov
mov
mov
test
sub
xor
xchg
sbb
jno
imul
sar
push
add
ljmp
out
adc
mov
inc
jmp
loop
mov
inc
shrb
sub
pop
xor
or
fstps
and
dec
jmp
aam
sbb
fsubrp
or
sub
mov
xchg
and
stos
xchg
sbb
mov
sub
dec
cmp
and
outsb
fists
xlat
sub
xchg
das
leave
push
shlb
and
jae
in
jecxz
mov
or
xchg
int3
icebp
pop
testb
loope
pushf
ja
icebp
int3
call
or
cltd
xorb
mov
pop
push
inc
pop
mov
popf
or
or
jb
jmp
adc
mov
imul
pop
repz
push
call
cltd
incb
lock
pushf
out
ja
jo
or
and
mov
movsb
out
popa
push
cli
mov
jg
and
pop
cmpsl
lock
jle
out
orl
shrl
out
cmp
arpl
fadd
cs
jmp
inc
pop
lods
xor
pop
mov
adc
cmc
imul
bnd
aas
mov
sbb
jle
lock
pop
out
adc
ja
aas
inc
dec
hlt
cwtl
test
lods
call
je
loope
pop
outsl
outsl
lret
sti
nop
insb
jle
pop
fmull
cvtps2pd
loop
inc
push
mov
fisttpl
sbb
or
mov
sub
cli
push
push
insl
loopne
mov
int3
push
lock
mov
cmp
into
cmpsb
js
in
test
bound
jne
mov
lock
cmp
xchg
in
int3
jno
lods
mov
faddl
fldenv
movsl
testb
add
arpl
movsl
into
dec
aad
pop
mov
pop
mov
xlat
dec
aas
mov
pop
mov
out
push
lock
jl
jle
jns
loop
pusha
pop
inc
sub
pop
repnz
enter
cmp
dec
cmpsl
out
cld
dec
dec
xor
sbb
pop
adc
push
pushf
cli
fisttpll
add
clc
cmp
ljmp
cmp
lahf
add
sub
movsb
and
push
adc
std
xchg
insb
sbb
pop
fwait
add
sarl
cmpsb
hlt
sbb
mov
das
mov
push
ss
pop
out
xchg
lods
lods
je
and
inc
inc
mov
insb
pop
cmp
cmp
fldl
push
or
adc
jmp
fisubl
jae
aaa
mov
dec
and
rcr
and
jne
inc
leave
test
lods
xchg
clc
ret
xor
leave
sub
stc
jmp
rcrb
xchg
inc
mov
movsl
push
push
dec
rol
out
cmp
rorl
sbb
mov
les
fisubrl
mov
jbe
sahf
iret
xchg
in
push
sbb
cmp
test
lock
je
fwait
xor
fcompl
sti
push
std
adc
rcrl
jb
std
out
popa
jmp
cld
sbb
cli
push
decb
stos
mov
mov
push
or
test
aas
loope
adc
loope
es
addr16
scas
iret
or
pop
xchg
jg
xor
mov
push
out
sbb
cmp
push
rolb
cltd
outsl
adc
scas
mov
push
sub
fisubl
mov
push
idivl
xchg
fwait
jg
cmp
mov
or
aaa
push
in
pop
test
lret
aas
dec
and
push
cmc
shl
mov
stos
xor
and
ret
or
add
popa
or
sub
lds
dec
push
and
out
pop
shl
shll
loop
jne
sbbl
fcoml
adc
std
insb
jle
dec
call
loope
sti
xor
mov
dec
dec
pop
idivl
jno
jbe
mov
mov
lock
add
or
mov
addb
bound
test
outsb
add
inc
jle
pop
out
dec
mov
adc
jmp
clc
nop
jg
sub
cltd
sub
out
testb
xbegin
xchg
add
and
mov
mov
stc
enter
iret
pop
imul
rclb
sub
add
dec
clc
cmp
das
mov
ss
fistpll
imul
xchg
mov
scas
sbb
mov
sbb
mov
dec
push
inc
fisubl
iret
jmp
jo
gs
mov
popa
mov
inc
cmp
xchg
pop
ljmp
push
jg
int
int3
jno
and
stos
xchg
scas
lock
pop
xchg
adc
and
les
in
js
sub
test
ret
mov
outsl
xchg
shll
sbb
imul
outsb
jns
cli
push
popa
xor
push
pusha
aad
cmp
inc
push
addl
sbbl
push
in
and
das
push
mov
or
inc
mov
dec
xor
aad
fnstsw
fsubrl
sbb
xchg
lahf
mov
out
arpl
inc
int3
pop
lcall
out
clc
mov
mov
sub
lret
pop
mov
lret
roll
insl
add
sbb
adc
iret
lods
or
adc
jno
mov
cmp
sbb
hlt
inc
cwtl
push
test
in
cmp
sahf
pop
jbe
mov
cmp
fisubs
xchg
pop
stc
xchg
mov
arpl
nop
fdivl
pop
or
subl
dec
push
jno
popf
daa
jb
xchg
add
lcall
fbld
xchg
pop
scas
ret
mov
xor
push
add
inc
xchg
ja
sbb
mov
test
sbb
mov
xchg
xchg
jno
push
outsb
cmp
dec
outsb
js
fsub
push
cltd
scas
jmp
adc
and
cs
aaa
idivb
mov
mov
outsl
daa
pop
leave
cwtl
aad
mov
cmp
stos
lahf
jns
pop
mov
pop
lea
sub
daa
mov
xchg
add
inc
and
mov
inc
jmp
hlt
xor
lods
fwait
sti
cmp
jae
or
add
out
mov
push
push
imull
mov
pop
sbb
je
bound
cmpsb
push
inc
mov
xor
dec
jecxz
vpshaw
aaa
push
inc
mov
scas
int3
ficoms
add
mov
sbb
mov
xor
adc
das
js
xchg
pop
sub
ja
inc
dec
sahf
clc
loop
add
mov
aad
addb
mov
or
ss
in
dec
loop
and
jno
rcll
mov
push
pop
dec
cmp
cmp
add
rcrb
aam
dec
mov
pop
stos
push
jmp
and
in
pop
mov
sti
out
cld
ja
cld
add
das
inc
mov
ja
xor
cmpsb
lock
adc
xchg
insb
sbbb
xchg
inc
out
add
adc
sub
std
lcall
outsb
and
imul
inc
es
sub
sarl
mov
in
jp
hlt
sub
push
mov
jge
push
stos
inc
cmp
push
xchg
insb
pop
out
fs
and
mov
mov
xor
pop
cmp
stos
sub
stos
jns
cmpsb
sbb
adc
mov
cmp
cmp
sbb
in
cs
mov
push
ror
sub
pop
shr
pop
scas
xchg
mov
adc
sbb
jmp
fbld
imul
popf
dec
pop
adc
mov
les
scas
mov
stos
inc
cmp
ret
or
out
and
movl
rol
push
push
cmp
out
xor
add
dec
arpl
jg
push
pop
xor
roll
arpl
pop
jmp
lahf
xchg
xor
out
mov
pop
jl
xchg
mov
sahf
hlt
addr16
icebp
cmp
icebp
xor
inc
fisttpl
push
cmpsb
orl
pop
insl
rorb
cli
mov
mov
movsb
pop
shll
push
negl
mov
ret
cwtl
inc
in
mov
pop
sub
nop
sbb
into
gs
mov
in
pop
out
mov
and
cmp
int3
rcr
pop
ror
or
xchg
lcall
jb
out
push
dec
fdivr
or
push
dec
lods
jns
adc
adc
mov
cli
xchg
shll
or
je
xchg
xchg
outsb
xor
fwait
and
cmc
shrl
adc
fwait
ret
xchg
das
sbb
jmp
cmp
mov
lds
push
icebp
movsb
inc
push
and
mov
bnd
in
adc
mov
sub
lods
dec
add
mov
clc
scas
call
popf
test
rclb
sahf
negl
and
adc
mov
les
add
ret
movb
add
sti
xchg
notb
hlt
or
mov
cmp
mov
rol
cmpsb
adc
xor
cmp
xlat
sbbl
sub
ret
mov
cmp
mov
sti
aas
xor
push
mov
cli
adc
sbb
subl
mov
pusha
lret
test
lret
adc
pop
sub
scas
insb
insb
sub
hlt
arpl
and
stos
mov
sbb
mov
lock
adc
cmp
sbb
fsincos
inc
pop
jg
addr16
fucom
das
insl
mov
andw
lret
inc
and
cmp
mov
stos
pop
ja
popa
jbe
xchg
das
fnstenv
fwait
mov
mov
mov
mov
sbb
lcall
je
idivl
int
mov
test
das
enter
jno
mov
lahf
movsl
icebp
adcl
lret
outsb
repnz
arpl
mov
repz
ret
movl
xor
xor
fs
xchg
and
outsb
add
or
push
add
mov
push
pop
cmp
xlat
pushf
les
cmpb
pop
cmc
add
clc
or
mov
fbstp
mov
xchg
adc
in
sbb
inc
xchg
mov
es
mov
je
inc
fnsave
rolb
jg
cli
xchg
or
or
stos
mov
xchg
fimull
movsl
jp
push
pop
dec
cmpxchg
inc
imul
mov
pop
cmp
push
loope
sahf
cmp
mov
jo
inc
jbe
mov
jne
and
popa
cmp
mov
out
test
sarb
dec
pop
add
cli
pusha
dec
inc
fwait
sub
sahf
cmc
cmp
scas
rorb
mov
aas
or
pop
mov
shl
jecxz
dec
imulb
push
jp
sub
rcrb
in
out
add
ds
mov
xchg
cmp
dec
subl
mov
pop
dec
pop
inc
and
lea
leave
xor
fisttpll
or
mov
cmp
or
sahf
scas
cmp
nop
dec
cmpsl
xchg
cmc
pop
fstpt
dec
lret
push
or
jmp
into
sub
ss
mov
aad
xchg
or
mov
xchg
jle
jb
shll
test
mov
push
mov
cmpsl
lea
rcl
bnd
subl
std
cltd
xor
or
pop
push
add
cmp
push
fucomp
js
in
add
mov
lret
and
sbb
push
jo
lcall
push
ljmp
jno
das
push
adc
add
mov
and
inc
mov
dec
xchg
inc
jg
adc
inc
mov
xor
jns
jl
pusha
sub
je
movups
mov
sub
cld
lcall
sahf
inc
lahf
sub
adc
inc
lret
and
lahf
ss
inc
mov
cmpsb
mov
gs
in
ss
mov
andl
mov
jmp
lret
mov
pushf
sahf
popa
repnz
fisttpl
or
cwtl
push
rcll
cld
xor
adc
sbb
lahf
lea
sub
lds
or
ja
cs
push
pop
xchg
push
jl
xchg
pop
test
in
sub
clc
dec
mov
in
call
pushf
mov
mov
jb
test
in
pop
insb
nop
push
rcrb
mov
repz
jmp
into
xchg
in
test
mov
or
jle
and
nop
aad
jns
std
testl
mov
test
lea
pop
loopne
jge
iret
mov
hlt
mov
in
in
sbb
sarb
mov
mov
js
lret
mov
mov
push
sub
in
mov
cmp
imul
lcall
call
loop
sahf
sub
ret
adc
and
push
dec
lcall
sar
subl
popa
pop
aas
cmp
ret
outsb
dec
imulb
sahf
es
outsl
adc
adc
push
jae
cmpsb
sub
jbe
loope
call
outsl
in
add
fmull
scas
ret
loopne
inc
add
pop
pop
les
cmp
pop
ja
adc
push
icebp
ss
lods
es
add
out
dec
xchg
jle
outsl
in
xor
or
or
cmp
outsb
jl
mov
movsb
arpl
pop
pop
sbb
cmp
xorb
push
dec
or
insl
mov
jne
xor
sbb
xchg
add
int
loopne
popa
mov
idiv
jno
cld
xchg
jbe
icebp
xchg
sbb
popf
or
jbe
idivb
fldenv
xchg
bound
fcoms
push
repz
jmp
cmp
repnz
push
jbe
das
inc
pop
insl
in
icebp
in
popf
movsl
sbb
pusha
mov
je
pop
bound
imul
pop
adc
or
lcall
cwtl
xchg
mov
sbb
mov
sbb
pop
dec
fs
ret
shll
and
sbb
pusha
clc
movsl
cli
enter
jg
subb
dec
fxch
inc
aas
jle
repnz
dec
fisubl
pop
rcll
sbb
fcompl
out
xchg
mov
add
test
sub
inc
lret
shll
xchg
pop
js
or
lret
test
xchg
sub
repz
adc
outsl
loop
shrl
xorb
mov
mov
and
pop
mov
pop
lcall
ret
pop
int3
jecxz
js
gs
icebp
mov
xor
adc
rorb
rcll
das
add
or
mov
std
stc
cs
sbb
je
adcb
inc
push
in
test
je
fst
fisubrs
nop
out
jmp
lods
xchg
mov
loope
int
popf
aad
mov
sbb
mov
push
pop
jmp
nop
lods
in
push
and
sti
xor
push
xchg
enter
mov
lock
and
cld
sbbl
sub
je
or
xorl
jne
jbe
xchg
stos
cld
pop
imul
cmp
mov
mov
cmpsb
daa
cmp
shll
pop
fisubrs
inc
dec
scas
lcall
jp
int
cmc
mov
leave
jno
movsb
xchg
add
sti
pop
mov
test
fsubr
inc
cltd
and
lsl
push
fcoms
stos
add
or
cmpsb
xor
and
sbb
pop
ret
mov
pop
jp
loopne
inc
push
pop
adc
das
sub
aas
mov
scas
xchg
cmp
ss
je
loope
fs
push
lcall
fcompl
or
mov
pop
push
icebp
add
cs
repz
loope
je
in
jp
xor
push
cltd
or
andl
add
mov
jb
cmpsb
fistl
jno
bound
dec
js
sahf
mov
mov
dec
jle
mov
mov
sahf
insl
mov
lahf
add
icebp
add
nop
adc
mov
dec
js
dec
cmp
xchg
add
adc
xor
cltd
out
in
fimuls
xorl
clc
or
xor
leave
dec
mov
pop
outsb
inc
sub
iret
bnd
loope
jecxz
mov
inc
push
cmpb
lcall
fcmovnb
mov
pop
fidivl
adc
inc
push
xlat
movsb
jg
jns
mov
ret
loop
insl
pop
aaa
push
iret
jg
daa
xor
push
cmp
divl
push
cmp
mov
mov
sbb
test
inc
ljmp
xlat
repz
xchg
mov
add
les
icebp
ficompl
shrb
mov
test
inc
sti
jmp
cmc
cmp
and
fnstenv
and
jl
xchg
mov
adc
gs
addr16
ja
and
out
imul
jp
push
in
pushf
mov
add
or
mov
push
ss
mov
mov
mov
test
pop
gs
lcall
cltd
addr16
sub
mov
push
in
xorb
adc
jnp
dec
lods
movsl
cld
pop
shrl
pop
jl
mov
jmp
mov
stc
outsl
mov
adc
jne
addr16
and
mov
push
shr
std
push
gs
cmpsb
dec
xor
aaa
dec
popf
stc
cmp
stos
and
cmc
stos
mov
hlt
cltd
ret
test
jp
sbbl
mov
cmp
sbb
pusha
mov
fxch
movsl
std
out
xchg
push
cmc
push
add
scas
jp
or
ret
in
or
inc
cmp
adc
movsb
xchg
mov
sbbl
adc
push
pop
repnz
jbe
lret
mov
cmpsl
nop
loopne
cmp
push
sbb
idiv
mov
pop
xchg
andl
mov
loop
jge
js
inc
sahf
add
je
xor
idiv
mov
mov
mov
cs
dec
cmp
shrb
sbb
sub
das
icebp
gs
mov
add
mov
cmpsl
add
and
popf
sub
pop
out
add
loop
adc
scas
xchg
incl
call
sbb
aas
inc
push
mov
je
call
xchg
cmp
add
dec
sub
lahf
push
ljmp
mov
jmp
cs
push
clc
sub
scas
sub
insb
and
or
cmc
fcmovnbe
lds
out
les
mov
loop
mov
psllw
mov
or
inc
bound
and
daa
mov
sbb
clc
ds
pop
repnz
movsl
pop
adc
inc
push
push
mov
push
mov
xchg
scas
imul
cmpsl
jae
push
movsl
enter
jl
cmc
lods
jo
test
movsb
inc
dec
jecxz
pop
dec
add
push
arpl
shr
test
test
out
inc
sbbl
lcall
add
jg
je
call
and
mov
inc
fcmovne
fstl
mov
das
push
jle
rol
dec
loop
jge
sti
mov
arpl
push
ljmp
fstp
sub
xchg
sub
bound
fbstp
pop
movsb
sub
jnp
sub
cmp
mov
out
sbb
mov
ret
mov
mov
mov
xchg
push
xchg
dec
cmp
test
pop
xor
nop
lret
fnsave
mov
xlat
adc
mov
adc
jns
int
pop
jle
popa
mov
lock
fiadds
xchg
cmp
fsubr
xchg
and
icebp
xchg
dec
xor
jp
js
and
data16
xchg
sbb
enter
jge
jo
aas
pop
into
fnsave
pop
pop
imul
mov
ret
fmull
add
push
lcall
mov
out
mov
sbb
dec
xchg
xchg
sbb
push
pop
xor
pop
fbld
or
aaa
jnp
hlt
les
test
cmp
aad
cmp
shrb
cmpsl
jp
cmpsl
ja
pusha
push
pop
adc
aaa
stos
mov
inc
inc
xchg
js
ds
or
sbb
aas
fbstp
icebp
dec
iret
cmpb
popa
icebp
add
sub
mov
stos
iret
cli
mov
mov
add
or
orl
and
fisubrl
andl
mov
push
aam
out
or
mov
lret
mov
rclb
ret
xor
cld
pop
fisubs
popf
sub
inc
negb
add
cmp
xchg
addr16
push
mov
pop
mov
int3
imul
addr16
xor
movsb
ja
pop
add
cmp
fisubrl
in
push
pop
jp
sub
push
inc
jmp
jne
cwtl
pop
pop
dec
ret
pop
repnz
loopne
ret
addr16
arpl
adc
jbe
add
mov
cld
int3
out
jge
sub
xor
lret
xor
jnp
into
gs
in
adc
ljmp
js
dec
cmp
cmc
testl
dec
xor
add
lcall
xorb
push
xchg
mov
pop
jo
xchg
rolb
dec
inc
dec
dec
lret
pop
pusha
testl
je
mov
mov
or
in
sub
test
add
mov
addl
xor
out
sub
mov
dec
jne
dec
lahf
add
jmp
mov
or
push
dec
enter
arpl
xchg
mov
repz
jb
inc
mov
xor
loope
es
jbe
shlb
scas
roll
les
mov
mov
flds
dec
jno
ficomps
in
pop
daa
xor
test
jno
cmp
adc
cmpsl
adc
xchg
mov
mov
mov
repz
mov
pop
shl
shl
cmp
cmp
push
mov
sbb
popf
sbb
insb
mov
cmp
call
mov
and
xchg
jne
ret
and
inc
mov
popa
cmp
adc
inc
xor
push
addr16
mov
or
in
dec
pop
jno
push
ror
loop
out
addr16
test
or
mov
xchg
rolb
clc
cmp
data16
mov
loope
outsl
fs
mov
shrl
push
xor
outsb
movsl
icebp
lds
xchg
xlat
pop
dec
dec
fcoml
data16
push
jno,pt
dec
push
jp
xor
mov
std
or
insb
icebp
add
and
lcall
ja
cmp
mov
fwait
stos
je
push
mov
adc
jnp
xchg
pusha
jnp
mov
and
xor
in
test
pop
push
xchg
test
jle
add
cmpsl
add
les
fnstsw
fwait
out
mov
pop
gs
es
jns
repz
adc
fistpll
push
popa
mov
rcr
aas
push
mov
add
aad
outsb
stc
ficompl
sub
test
push
fdivrs
aaa
mov
inc
cmp
jns
clc
pop
aas
push
imul
das
xchg
mov
aam
jns
iret
mov
cmp
xchg
daa
leave
call
scas
nop
xchg
aam
mov
push
imul
jns
xchg
adc
push
xchg
xchg
mov
int3
pop
loop
test
pop
negb
pusha
pop
push
add
aas
scas
sbb
adc
outsl
stos
mov
out
loop
stc
jecxz
adc
in
dec
dec
ss
push
fsubl
inc
ficoms
sub
xor
mov
shl
sub
mov
pop
or
jg,pn
cmp
and
int
push
pop
mov
loope
mov
addr16
cs
xchg
sub
repnz
lea
imul
call
cmpsb
push
das
push
js
hlt
sbb
mov
add
fstps
cmp
sub
lret
ss
xchg
jge
jnp
lcall
xchg
loopne
fmuls
push
sub
sub
mov
sub
mov
sub
ret
repz
push
and
add
fadd
dec
sub
repnz
notb
cwtl
xchg
cmpsb
faddl
inc
add
adc
out
push
outsb
cmp
mov
shll
int3
fsubs
lret
fstpt
fwait
fs
pushf
xchg
test
mov
aas
ficomps
add
movsl
imul
stos
jnp
fdivrl
shll
filds
push
inc
inc
je
imul
or
int
xchg
mov
and
mov
cmpsl
loope
push
sbb
adc
pop
xor
aam
sub
scas
adc
pop
xchg
jae
dec
mov
insb
xchg
sub
cmp
mov
adc
ds
jno
mov
int3
test
les
dec
or
mov
lret
int
inc
mov
and
pop
sbb
jp
ds
ret
iret
jp
bound
cmpsb
mov
lcall
push
call
nop
add
pushf
xor
mov
in
test
pop
lods
inc
mov
fcmovne
popa
in
sub
test
jmp
push
ret
jmp
int
enter
dec
mov
out
add
adc
and
mov
popf
mov
das
add
mov
jns
dec
mov
lret
xchg
xor
mov
jns
fisttpl
jb
shlb
hlt
cmp
add
cli
mov
dec
add
int
popf
push
shll
movsl
xchg
clc
scas
call
das
clc
sahf
clc
aaa
loop
cmp
xchg
stc
mov
fnstcw
into
insl
cli
shrl
push
addr16
out
lods
in
jg
lea
adc
mov
movsl
negb
jge
insb
insb
js
inc
scas
inc
cld
push
adc
into
in
sub
pop
cli
in
repnz
jle
fstl
add
ljmp
sub
repz
rcrb
das
shlb
jecxz
cli
sbb
mov
aas
jecxz
mov
push
testl
aad
inc
mov
xor
xchg
xor
jmpw
sbb
push
mov
push
xchg
in
adc
xor
lock
inc
and
xchg
dec
test
leave
pusha
cld
cmpsl
mov
rcll
ds
xchg
out
xor
pop
lahf
aas
or
fcomp
mov
and
leave
shrl
adc
stos
aas
bound
gs
lahf
pop
repz
cmp
fiaddl
mov
dec
push
or
cmpsl
xchg
bound
lock
aaa
mov
in
push
roll
mov
xlat
or
mov
mov
or
imul
mov
xor
in
mov
cli
aad
mov
imul
enter
cwtl
mov
out
popf
xchg
loope
sub
mov
mov
sub
mov
jl
aaa
stos
loope
dec
out
push
mov
dec
jp
andl
dec
xor
aaa
out
jmp
mov
sbb
jne
das
pop
ds
ret
sti
in
addr16
cwtl
inc
push
mov
and
and
pop
and
mov
add
test
shll
mov
add
push
ljmp
insb
mov
or
aas
push
add
lock
dec
cld
mov
mov
add
out
pushf
movsb
mov
pop
mov
fnstcw
xchg
out
or
sub
es
adc
mov
leave
ret
jnp
xor
bound
xchg
xchg
mov
mov
lret
jp
cmpsb
cmp
cmp
jmp
mov
mov
adc
insb
leave
xor
dec
icebp
sbb
test
pop
lock
cli
shrb
das
pop
fnstenv
lods
add
jo
aam
adc
iret
fadds
xor
dec
stos
and
adc
inc
ja
jo
jg
das
shll
aam
and
hlt
leave
test
lret
xchg
imul
test
cmp
mov
mov
mov
sub
fstp
mov
std
je
mov
xchg
roll
adc
mov
ljmp
xchg
sahf
ss
jns
cmp
es
pop
out
in
sub
mov
push
lds
mov
stos
push
decb
xor
push
js
mov
mov
push
adc
xchg
dec
xchg
jmp
mov
dec
push
mov
iret
loop
mov
das
in
jno
daa
lcall
inc
mov
jne
mov
inc
shr
xor
lods
test
sbb
iret
sub
test
mov
dec
xor
pusha
mov
faddp
data16
mov
gs
aam
rcll
icebp
nop
sub
in
sbb
xlat
and
sahf
mov
sub
mov
cmp
pop
stos
mov
insb
pop
repz
sti
leave
inc
mov
fcompl
and
or
xor
arpl
cmp
xchg
movhps
or
pop
movsb
push
std
gs
xor
cld
nop
sub
int
loopne
sbb
mov
sub
xchg
stos
mov
xlat
mov
jnp
into
xchg
pop
popf
stos
push
pop
clc
fidivs
stc
cwtl
lret
ret
xchg
mov
sub
cli
jge
mov
add
inc
jg
incl
adc
movsb
and
sbb
dec
movsl
or
ret
outsb
xlat
adc
push
mov
enter
cs
push
shll
ret
dec
mov
lret
cmpsl
shll
dec
cmp
insb
insl
loope
jg
loopne
fisubs
sbb
in
jno
std
bound
jbe
dec
movl
fbld
gs
xor
inc
popa
test
push
fildl
xchg
push
fwait
repnz
ja
push
jns
xchg
mov
push
jmp
lahf
ret
mov
in
in
jne
adc
aad
rorl
mov
aas
mov
ljmp
and
xchg
pop
push
stos
fwait
xor
pop
hlt
dec
inc
and
movsb
fidivrl
inc
cmp
cmpsl
out
lret
sub
xchg
sub
cmpsl
sbb
push
or
mov
mov
inc
pop
mov
or
dec
outsb
adc
add
aaa
push
negb
aam
mov
mov
pop
pop
loopne
mov
jg
aam
cmovne
mov
call
mov
add
das
and
cld
or
divl
push
xchg
cmp
add
add
out
cld
jae
inc
mov
pop
push
inc
ss
mov
ljmp
fs
faddl
inc
movsb
mov
je
mov
xor
push
jo
xchg
sub
mov
je
dec
xor
cmp
lret
jbe
loopne
mov
fcoml
test
lcall
push
sbb
cmp
or
popf
aaa
lods
arpl
scas
mov
sbb
mov
sqrtps
fisubl
testb
xchg
adc
lret
enter
enter
dec
dec
cmp
sahf
xor
movsl
aam
sub
jecxz
adc
daa
mov
jg
inc
push
addr16
rolb
jbe
xchg
sub
out
mov
xchg
mov
jmp
mov
sbb
out
sbb
and
adc
ss
mov
cmp
or
cmpsb
ljmp
mov
sbb
and
lds
jbe
adc
and
mov
jns
mov
add
loop
xor
je
pop
jne
xchg
in
out
push
and
mov
imul
outsl
fcmovnb
mov
dec
sub
enter
xchg
mov
mov
xchg
imul
lock
or
fs
mov
stos
push
insl
jns
mov
mov
cmp
insl
setg
dec
addr16
daa
mov
rorb
lcall
loope,pn
in
aas
inc
mov
cmp
mov
cmpsb
cmc
mov
and
mov
inc
mov
sahf
dec
lock
mov
iret
cmp
jecxz
in
push
leave
iret
gs
add
mov
add
scas
aas
loope
cltd
fwait
pusha
xor
push
out
cld
aad
shrl
test
push
out
fsubl
fcoml
mov
push
movsb
outsl
das
pop
sbb
mov
cmc
outsl
push
call
xlat
or
lds
jns
xor
sbb
enter
adc
mov
sahf
xor
jns
xchg
cmp
adcb
andl
sub
jle
mov
ja
gs
rcll
jmp
sub
iret
and
aas
add
xchg
sbb
xchg
jg
loop
stc
fisttpll
add
stos
pop
mov
out
jbe
clc
inc
lret
inc
sbb
repz
ljmp
cwtl
or
divb
mov
movsb
cli
fsubs
mov
lea
int3
xchg
pop
sbb
push
rcr
out
hlt
xchg
mov
mov
hlt
cltd
inc
and
lret
push
inc
or
push
stc
aad
dec
lock
mov
fwait
testl
jmp
inc
or
adc
fistpl
adc
pushf
pop
adcb
scas
sbb
ds
test
sahf
mov
test
aad
jl
xor
mov
lahf
mov
repz
pop
in
test
lods
and
xchg
inc
pop
ret
int3
lret
in
and
icebp
cmovl
shlb
ja
inc
and
inc
addb
mov
lahf
add
dec
or
add
decb
sub
cmpsb
inc
imul
pop
cmp
stos
fs
add
bound
sbb
inc
xlat
sub
ret
mov
leave
ret
dec
hlt
insl
rcrb
push
xor
sub
sub
or
mov
scas
xchg
loopne
fcmovnbe
push
mov
loope
pop
sti
adc
insb
stc
cmp
cmp
lods
inc
and
test
sub
sbb
aas
rcl
sti
outsl
shlb
pop
sbb
and
jecxz
xchg
xchg
jnp
js
inc
loop
ja
add
add
cli
or
and
aam
loop
jge
filds
push
out
cld
fcomps
outsb
pop
fwait
lahf
xor
dec
dec
test
out
push
xor
nop
inc
int3
in
nop
out
dec
cmp
mov
pushf
xor
push
and
je
pop
jmp
and
push
popa
test
imul
icebp
testb
push
jo
mov
sbb
loop
jge
loopne
xor
scas
sahf
mov
mov
and
sahf
subb
sbb
fimuls
sahf
insl
jmp
pop
adc
es
negb
fisubs
inc
clc
shrl
lock
sub
test
dec
out
and
arpl
xchg
mov
popa
addl
xchg
adc
add
jb
and
xor
enter
push
rep
inc
fwait
nop
dec
ficoms
into
or
shrl
xchg
negb
jmp
mov
push
sbb
nop
mull
daa
lahf
dec
inc
cld
cmp
xor
jnp
dec
and
loope
lret
lock
push
ret
fildll
sub
mov
jle
mov
jbe
movsb
popf
lods
and
jb,pn
sbb
lea
adc
test
sub
xchg
jmp
push
cmp
aam
daa
sbb
inc
adc
xor
into
dec
sbb
pushf
sbb
ret
jnp
mov
mov
popf
xchg
push
cmp
repz
ret
inc
add
stos
imulb
inc
or
sbb
jnp
pop
js
lea
sbb
stos
out
push
pop
jne
jecxz
mov
cmp
mov
add
and
mov
push
shlb
scas
nop
dec
sbb
shrl
push
mov
data16
push
sahf
inc
sub
icebp
mov
int3
loope
inc
add
je
pushf
cmpsl
push
pushf
int3
and
stos
inc
or
pop
lcall
adcl
xchg
cwtl
mov
loope
sahf
mov
shll
xlat
push
in
or
or
jmp
sub
cmp
lahf
and
leave
cmpsl
pop
mov
and
sti
shll
push
imul
leave
and
test
in
pop
imul
movsl
pusha
sbb
xchg
mov
jns
and
imul
test
in
push
mov
adc
sub
inc
add
dec
clc
loope
flds
pusha
xor
add
cwtl
mov
adc
cmpsl
imul
loope
jmp
jg
add
decb
cs
xchg
xchg
mov
dec
lahf
daa
jle
jecxz
sbb
sub
loopne
add
adc
jge
out
xor
or
adc
push
lret
mov
xchg
fs
sbb
push
cmp
lock
adc
roll
shlb
sub
push
mov
jns
daa
imul
imul
pop
xor
xchg
sub
jp
mov
xor
call
inc
lcall
pop
push
mov
out
cs
lss
push
dec
pop
or
jbe
test
adc
icebp
stc
xchg
mov
je
or
popa
test
push
bound
xchg
ja
pop
mov
push
sub
test
push
fprem
test
mov
mov
in
les
sti
fidivs
cmp
imul
push
subl
mov
orl
dec
jecxz
mov
xor
aaa
mov
fists
mov
lret
jmp
and
je
lds
mov
or
orb
jnp
mov
sahf
fs
lcall
ret
scas
inc
and
iret
dec
rolb
int
xchg
push
xchg
push
fwait
xor
mov
xchg
stos
adc
out
xchg
stos
or
push
cli
jno
inc
call
or
int3
out
pop
test
test
and
pop
xlat
cli
lods
xchg
mov
shll
inc
andl
nop
js
test
lret
jae
xchg
scas
push
fcoms
xor
push
mov
repz
jnp
or
lds
xlat
sbb
dec
leave
and
aaa
mov
sahf
mov
ret
ret
jg
dec
pushf
imul
lcall
or
push
jmp
cmp
imul
xchg
arpl
push
mov
adc
dec
adc
aas
sub
pop
mov
shll
mov
clc
rorb
shll
jle
sub
aas
jns
jl
in
aam
cs
out
sbb
int3
jae
ret
int3
mov
pusha
adcb
aam
xchg
mov
sahf
mov
mov
dec
add
or
insl
adc
push
cld
cmp
js
sbbl
lock
mov
cli
pop
fwait
dec
dec
xchg
aad
mov
cmp
into
imul
addr16
mov
out
in
xor
mov
mov
xchg
popf
gs
lods
and
or
push
jne
push
js
xchg
fdivrs
jp
and
add
adc
fnstenv
adc
out
data16
xchg
enter
xor
fs
aaa
lret
xchg
or
sbb
mov
pusha
adc
ds
push
sub
jae
cmp
mov
and
jl
mov
out
jmp
or
push
andl
push
scas
in
scas
jle
inc
insl
mov
stc
outsb
mov
push
out
lret
sub
pop
cli
addr16
loope
testl
fwait
lds
notb
and
dec
push
xlat
inc
add
mov
push
xchg
push
stc
adc
loopne
sbbl
in
dec
andl
inc
push
cs
sub
aam
and
pop
orl
jecxz
lret
lea
rclb
jb
rorl
push
xor
rcl
repnz
int3
pop
shlb
jge
mov
dec
sbb
sar
outsb
out
add
in
dec
test
jb
inc
fstpl
pop
cld
jmp
pop
insb
mov
std
xchg
push
push
jno
leave
push
sbb
adc
negb
adc
xchg
cli
adc
rcrb
dec
pop
xor
daa
jecxz
mov
sbb
adc
pop
mov
incb
inc
jb
adc
enter
js
fiadds
ljmp
test
fistl
add
jg
jge
and
stc
mov
jmp
xchg
repz
push
jg
mov
sbb
xor
insl
lcall
push
and
add
or
loope
nop
enter
loop
ss
xor
ret
movsl
subb
aaa
mov
in
pop
int3
arpl
shrb
jbe
or
mov
mov
insl
sbb
mov
test
adcb
inc
pop
adc
aas
shrb
inc
jl
les
int3
mov
mov
in
xchg
adcb
out
decb
adc
inc
test
and
iret
rcrl
adc
pop
pop
jb
dec
mov
mov
mov
scas
xor
or
jnp
loopne
push
ljmp
pop
xor
mov
insb
xlat
xchg
and
loopne
repz
mov
hlt
ds
xor
jbe
pop
inc
dec
in
push
repz
stc
mov
lret
std
xchg
jb
mov
push
add
and
jnp
jbe
orb
cmp
adcl
mov
shlb
push
mov
push
jmp
pop
roll
dec
icebp
and
mov
lahf
in
shr
sbb
aam
push
sub
cmpsb
jl
popa
push
push
mov
shll
lock
outsb
adc
das
sub
xchg
xor
in
test
xchg
shrl
outsl
lds
sbb
imulb
mov
add
jno
push
loop
sar
repz
addr16
negb
shrb
out
mov
xchg
mov
pop
test
mov
cmp
das
fnstenv
js
jmp
into
sub
push
xchg
jle
enter
xchg
sbb
je
xchg
pop
dec
popf
inc
add
dec
js
popf
xchg
mov
dec
pop
lahf
fsubs
xor
add
mov
mov
cmp
clc
int3
iret
and
shll
mov
sub
call
fimull
insl
mov
movsb
pop
addr16
cmp
cmp
and
jb
loopne
sbb
test
repnz
aas
stc
inc
fisubrl
push
es
or
loop
mov
call
jo
inc
push
sahf
push
outsb
push
and
js
movsl
dec
ja
push
cs
jp
xor
shl
inc
dec
loope
add
cmpsb
mov
push
add
dec
das
lea
test
andb
sarl
push
or
cmp
insl
mov
pop
outsb
add
push
pop
xchg
mov
xor
xor
loop
push
adc
add
pop
pop
lock
or
dec
xor
pop
or
push
mov
sub
out
std
jno
movsl
lds
stos
lret
mov
loopne
cmc
lea
mov
lret
ja
pusha
cmp
addr16
cs
out
jae
call
movsb
sbb
pop
push
jmp
scas
mov
cmp
test
int
dec
mov
jmp
lret
and
jg
sbb
in
ret
pop
push
insb
das
add
shll
sbb
lods
xorl
sbb
cmpsl
mov
adc
jg
sti
xchg
pop
and
cwtl
cmpb
aaa
imul
mov
mov
push
int3
rcr
out
pop
push
xor
and
or
and
mov
outsl
and
lock
xchg
jo
movsb
sub
xor
or
mov
test
enter
adc
add
xor
sbbl
aas
xchg
mov
jecxz
push
fnstsw
mov
cmpsl
dec
dec
pop
xchg
add
outsb
iret
xor
fnsave
inc
ljmp
loop
dec
ret
pop
mov
add
loop
loope
push
xchg
sub
mov
dec
dec
shrl
cmp
mov
icebp
mov
sub
sub
mov
jmp
fidivs
add
cli
cmp
cli
inc
mov
pop
pushf
xor
sahf
outsl
sub
aaa
lcall
and
fs
popa
xor
or
add
popa
sub
insb
jno
mov
notb
push
adc
xchg
mov
mov
or
add
rorb
and
xchg
movsb
mov
out
rolb
push
xor
xchg
mov
xor
jno
push
push
add
je
lcall
and
movsl
sbbb
xor
add
add
mov
ret
aad
aad
shl
lods
into
mov
and
mov
or
scas
test
loopne
and
lcall
test
push
lret
int
sub
inc
pusha
cli
aad
jbe
xor
cs
mov
aam
inc
fistpl
sbbb
mov
aad
addr16
in
enter
jo
loopne
pop
gs
cltd
mov
lock
add
test
je
outsl
pop
xchg
sbb
shrb
jecxz
inc
popa
adc
adc
push
jno
decb
repnz
fildll
dec
leave
xor
pusha
arpl
aam
iret
jb,pt
jno
lcall
xor
cmp
xchg
cmp
int3
movsl
inc
jecxz
mov
loopne
cmp
clc
orb
adc
inc
push
mov
xchg
int3
adc
adc
push
sub
popf
xor
xchg
cmp
mov
sbb
movsl
dec
dec
popf
cmp
xchg
sbb
dec
lock
mov
adc
pop
mov
shlb
js
xchg
divps
and
push
ss
add
aam
pop
push
add
leave
adc
xchg
xchg
mov
sbb
mov
sarb
mov
mov
aas
and
fwait
aaa
das
mov
xchg
add
repz
pusha
cmpb
cmpsl
xchg
jge
or
ljmp
pop
frstor
dec
jg
fcompl
jmp
push
enter
jo
inc
lret
imul
xchg
xor
inc
mov
out
das
lret
bnd
and
lahf
sarb
sub
outsb
in
in
push
sub
push
pop
push
test
jl
pop
xlat
dec
dec
adc
add
not
repnz
call
add
int3
fdivl
in
iret
inc
cwtl
cmp
insb
add
and
and
adc
cmp
popa
adc
out
mov
and
repz
scas
js
or
aam
aaa
push
inc
cmc
mov
jo
push
movsb
pop
mov
push
sub
dec
fucomip
jl
mov
xchg
or
or
lds
pop
sbb
ftst
adc
sub
adc
mov
ret
std
or
sti
push
lret
push
cmp
adc
mov
mov
sbb
pop
push
cmp
mov
out
testl
jo
cmc
movsb
icebp
and
pop
lret
cld
xchg
in
shl
xchg
sub
xchg
fdivs
or
mov
add
pop
lret
inc
mov
pop
in
mov
lock
fstpl
cmp
mov
nop
insl
ret
cli
mov
jns
in
mov
js
pop
or
fucomip
or
push
jno
ret
push
ljmp
mov
pop
xchg
pop
shrb
lock
xor
out
lods
fwait
cli
fcompl
push
es
imul
and
mov
push
roll
push
mov
sbb
orl
outsb
push
out
test
mov
dec
sub
fisttps
icebp
jnp
xlat
xor
push
fisttps
or
mov
or
cmp
adc
hlt
push
mov
push
out
dec
pop
movsb
jg
outsb
outsb
inc
ljmp
sti
mov
in
sbb
lock
jmp
sbb
jmp
popa
adc
xchg
cmc
jb
adc
mov
push
out
ret
jnp
sbb
jmp
addl
xor
push
adc
and
cmpsl
mov
ljmp
and
es
popf
les
outsl
rolb
jno
pusha
pop
xor
pusha
mov
pop
std
adc
add
into
push
push
add
les
mov
pop
add
cmp
inc
jb
or
add
and
push
mov
and
ja
mov
xorl
fucomi
adc
add
xor
jp
mov
sbb
sbb
sub
pop
enter
lock
sub
imul
pushf
mov
rcrb
mov
push
aas
jecxz
imul
aad
push
pop
in
mov
pop
jg
dec
push
popa
rcrb
mov
jmp
nop
mov
notb
pushf
push
lahf
neg
lea
add
pusha
enter
int
dec
xor
in
push
sub
mov
sbb
pusha
repnz
mov
and
xchg
pop
mov
and
cmp
ja
andb
adc
test
insb
ficoms
pop
stc
mov
mov
test
fisubl
mov
test
cli
cwtl
and
sti
out
ret
xlat
xchg
ds
push
add
pop
adc
xor
pop
adc
je
xchg
outsl
outsb
and
xchg
jecxz
inc
mov
mov
cltd
and
xor
cli
sub
sub
movsb
stc
add
insb
add
xor
sub
int
mov
cli
dec
mov
and
sub
push
int3
arpl
cli
or
aaa
outsl
enter
sbb
cmp
push
sbb
sbb
mov
pop
test
pusha
mov
aaa
out
and
lret
inc
lods
lret
insl
and
sahf
mov
mov
cmp
sbb
jecxz
push
popf
xchg
pop
stc
mov
ja
mov
sub
loopne
mov
and
lock
inc
in
and
or
iret
sub
jae
and
cmp
pop
outsb
mov
jae
lret
cmp
scas
movsl
aad
jae
fld
mov
mov
fsubp
xchg
jp
rcr
scas
es
mov
and
arpl
daa
in
jecxz
addr16
shrl
pop
fimuls
andb
out
jge
sub
shll
fs
mov
push
adc
dec
push
jl
fisttps
or
dec
mov
iret
jb
sbbl
pop
andb
shrb
hlt
shl
adc
sbb
inc
mov
and
pop
bnd
inc
stos
inc
jge
xchg
mov
leave
bound
push
and
movsl
cmp
fnstcw
stos
xchg
test
xchg
add
sti
xchg
pop
test
push
fldl
mov
mov
out
cmp
into
pop
or
cltd
push
add
jg
cltd
sub
cwtl
incb
xor
xchg
addb
xor
test
fs
mov
lret
cli
or
adc
imul
loope
test
dec
adc
sbb
or
xchg
cmp
out
dec
xor
xchg
gs
sbb
movsl
fstl
and
cltd
sub
movsl
pop
aas
mov
shll
and
inc
into
or
insb
test
les
jle
cmpsl
mov
ret
outsl
and
mov
lcall
jle
fldl
push
xchg
sbb
enter
and
je
mov
xchg
mov
mov
jle
or
jp
insb
and
jecxz
jae
fsubrp
fstl
dec
pop
push
jmp
inc
push
xor
jns
popf
and
ret
popa
icebp
add
sarb
sub
push
fdivs
or
pop
ficoms
icebp
ret
push
xlat
imul
enter
incl
pop
sub
ror
adc
ss
push
cwtl
fidivrs
mov
loope
ds
out
xor
mov
mov
xchg
add
or
pop
and
iret
xchg
jle
sete
lret
mov
aas
ds
or
and
subl
inc
jecxz
in
or
dec
fildl
sub
pop
fsubrl
sbb
pop
in
decl
mov
or
std
xchg
jmp
or
aaa
mov
pusha
call
jb
stc
mov
imul
rcrl
mov
call
hlt
sub
inc
dec
and
jo
iret
leave
push
mov
sub
push
sub
in
and
xchg
add
cmp
fists
neg
jle
or
pop
xchg
dec
pushf
dec
mov
sbb
xchg
jno
or
dec
adc
cmc
ret
xchg
push
in
xchg
ja
mov
lret
jb
inc
scas
cmp
push
and
xor
inc
lds
aad
mov
xchg
push
sbb
dec
dec
push
cmc
mov
rorb
popf
jae
push
outsl
fidivl
ret
into
mov
or
push
mov
sub
test
inc
mov
push
testl
jns
repnz
pushf
and
push
jno
aas
and
or
mov
adc
pop
mov
arpl
arpl
das
sahf
pop
stos
mov
outsl
nop
jle
mov
sbb
loop
test
jp
mov
mov
es
rcrl
mov
push
mov
lret
cmp
mov
lcall
gs
dec
fcomi
scas
jp
dec
scas
sti
mov
into
int3
xchg
addl
stos
xor
faddl
sbb
stos
pusha
mov
push
cld
push
xlat
jmp
addr16
loope
faddl
mov
int3
notl
xor
mov
rcll
loope
mov
rorb
das
inc
in
xchg
xor
or
popf
sbb
mov
lret
and
add
mov
out
lahf
push
sbb
into
movsb
ret
xorl
out
gs
add
mov
adc
fdivl
sbb
pop
pusha
test
cmpsb
pop
gs
xchg
fnsave
in
xor
push
xor
pop
fwait
jb
mov
test
jo
rcrb
mov
pop
lahf
mov
dec
in
sti
pop
cmp
sub
jge
ficompl
sahf
jno
or
mov
mov
lahf
test
push
push
lds
dec
jecxz
movsl
mov
xor
dec
fsubrl
mov
je
inc
loopne
xchg
gs
pop
jmp
add
subl
orl
subl
orb
xchg
xorb
mov
and
adc
push
in
mov
push
sub
mov
scas
out
jg
int
xchg
mov
insl
jmp
inc
aam
mov
pop
loope
mov
idivl
fdivl
sbbb
sub
push
pop
stc
lahf
mov
jne
daa
cmpsl
into
cmp
int3
dec
insb
add
jecxz
fcomp
pop
cltd
push
jl
out
inc
inc
je
pop
push
in
xchg
fs
and
subl
ss
scas
call
cld
mov
test
jp
imul
loope
add
and
je
aaa
sub
cmp
pop
lock
xchg
lahf
sbb
or
jg
mov
js
adc
js
aaa
loope
lcall
add
mov
lahf
sub
cmc
movsb
in
jno
bound
pop
mov
fcompl
mov
data16
arpl
push
lock
loop
xchg
sbb
add
sub
shrl
cmp
mov
xlat
push
out
or
jp
popa
sbb
sub
jmp
mov
jae
sub
stos
cmp
cmp
adc
inc
cwtl
cmpl
adc
or
jle
sbb
addr16
cltd
mov
cli
jmp
adc
mov
loop
push
xchg
popa
stos
in
xchg
push
pop
pop
cmp
add
mov
sarb
ljmp
add
push
lret
cmp
jecxz
cwtl
cli
test
call
ss
movsb
and
aad
adc
outsl
pop
dec
and
mov
adc
xlat
rolb
in
ffreep
fwait
mov
cmc
sarb
push
or
cmpsb
dec
lock
mov
sub
lea
cmpsb
enter
mov
das
or
cmpsl
ret
sub
inc
cltd
cli
rcl
pop
rclb
xor
mov
shl
insl
pop
adc
inc
mov
imul
ljmp
cmp
mov
push
pop
adc
xchg
scas
pop
fstps
mov
jl
int
popa
jns
testb
invd
lahf
inc
dec
jae
lea
cmp
movsb
mov
jae
pop
mov
pop
fsubrs
pop
sbb
imul
sbb
pop
adc
cmp
mov
cwtl
xor
mov
pushf
lcall
idivl
sub
mov
pop
inc
push
test
loope
sbb
dec
ljmp
ljmp
jge
jne
sub
sub
jbe
mov
lret
add
mov
add
imul
insl
in
lds
jge
add
mov
dec
cmp
popf
pop
out
jno
fcmovbe
mov
addr16
movsl
push
mov
aam
mov
mov
imul
fxch
pop
push
inc
fs
test
es
popf
iret
js
mov
es
js
or
icebp
aam
rolb
push
orb
pop
and
fdiv
push
inc
aam
stc
inc
mov
cwtl
dec
sbb
pop
add
cld
add
mov
in
mov
bound
add
scas
mov
lock
inc
lods
adc
int3
int
loope
mov
add
aas
push
push
mov
pusha
or
pushf
inc
pop
cld
cmp
ljmp
mov
cwtl
jbe
fldl
loop
test
dec
and
inc
jecxz
mov
test
into
gs
addr16
ror
push
in
push
mov
push
mov
fcompl
js
xchg
test
mov
jnp
xlat
enter
pop
loop
in
pop
pop
in
xchg
adc
popa
out
repz
cmp
aaa
and
jae
loop
pop
add
nop
adc
ret
and
adc
xlat
lret
not
fs
mov
ret
adc
jnp
and
adc
movl
or
jne
sub
outsb
or
adc
ljmp
in
and
xchg
sub
sahf
cmp
shrl
mov
ss
fistps
fsubl
xchg
scas
mov
fsubr
add
dec
aas
push
inc
mov
das
push
fisttps
jl
inc
push
ret
fnsave
imul
data16
sti
adc
test
outsb
lcall
insb
shlb
ds
cwtl
mov
mov
ret
std
pop
aam
dec
cmp
fistpl
movsl
aaa
push
je
imul
pop
imul
bound
push
xorw
das
lds
adc
lret
xlat
sahf
lock
lods
and
xor
dec
pusha
inc
inc
jbe
loop
stos
mov
pusha
loope
fnstsw
fildll
inc
add
stos
jnp
jns
leave
xchg
sub
shrl
sbb
sub
jge
xchg
xor
fsubl
loopne
xor
jmp
ficompl
shr
andl
or
popf
mov
ret
push
mov
inc
jecxz
jo
out
xchg
xchg
and
fidivrl
xchg
movsl
leave
pusha
out
test
shll
add
imul
cmpl
xor
jmp
fsubr
mov
push
xlat
cmpsl
or
in
sub
aam
xor
jns
push
inc
dec
cmpsl
bound
xchg
xor
arpl
mov
sub
mov
add
mov
fnstsw
inc
sub
loop
jmp
cmp
loopne
push
mov
repz
sbb
push
hlt
sub
shlb
xchg
lods
cmp
inc
lcall
ss
lock
push
sub
sub
inc
fbld
mov
sti
adc
inc
cmp
sbb
mov
jae
ficomps
jmp
pop
addl
jle
inc
mov
jns
fcoms
push
stos
iret
cmc
fdivl
fs
movsl
loop
mov
repnz
loope
insl
jnp
enter
imul
adc
sbbl
fistpl
mov
mov
and
push
cmpsl
inc
rcr
xchg
fstps
adc
jecxz
mov
adc
pop
pop
test
pusha
sub
in
mov
addr16
clc
subb
mov
cmp
fimull
lods
popa
test
mov
mov
fisubrs
push
xlat
addl
jle
les
mov
shll
pop
xchg
pop
gs
xor
xlat
add
addl
add
sub
add
push
add
add
inc
xchg
sub
loope
adc
mov
enter
sahf
fs
xchg
lcall
dec
cwtl
es
cmp
and
cmp
add
jmp
pop
fcomps
inc
pop
lock
mov
ret
in
stos
test
out
or
rcr
dec
jmp
insl
sbb
ret
insl
dec
outsl
test
mov
fnsave
out
cmpsl
negl
add
jno
mov
leave
in
inc
push
xor
jae
xor
mov
fs
cwtl
das
push
icebp
cwtl
das
int
int3
arpl
in
mov
jmp
mov
cld
pop
xlat
fsubrl
lea
scas
or
push
pop
cmp
xchg
push
inc
push
cmpsb
js
in
pushf
in
sub
sub
insl
loopne
cmc
int3
dec
add
dec
clc
push
push
sub
mov
or
sub
jecxz
out
mov
xchg
and
pusha
nop
xchg
push
test
lods
pop
xchg
mov
dec
cmp
hlt
pop
pop
xchg
jbe
mov
loope
scas
rorb
int
inc
int
xor
push
jbe
add
pop
adc
inc
pop
sub
cmp
es
pop
shlb
stos
inc
ds
out
push
jbe
cmc
outsb
jns
push
pop
pop
cmp
call
mov
push
mov
and
addr16
push
adc
sbb
test
xchg
nop
outsb
jnp
enter
sbb
aas
and
imul
lret
jne
call
lret
inc
loop
cmp
aad
pop
out
sbb
pop
outsb
mov
mov
inc
mov
loop
popf
insl
xchg
jl
test
pusha
or
pop
push
push
iret
lock
in
or
adc
fs
xchg
or
xor
push
mov
ds
int3
pushf
ljmp
jns
inc
loop
fnop
sbb
sbb
ja
push
mov
push
mov
hlt
int3
sar
out
or
xor
aas
sub
push
and
pop
nop
hlt
push
fwait
mov
ret
outsb
adc
jmp
je
ss
pop
push
adc
xchg
jmp
pop
push
and
inc
lret
stc
cld
bound
sbb
adc
jno
shll
shrl
cmpl
push
adc
inc
and
into
xor
pop
add
push
ret
adc
adc
in
pop
aad
jno
mov
lock
pusha
cld
mov
adc
xchg
push
xchg
and
icebp
push
sbb
push
movsl
lahf
jecxz
mov
adc
mov
fmull
mov
mov
icebp
insl
inc
cmpsb
sub
mov
pusha
pop
push
mov
adc
pushl
mov
dec
dec
iret
lea
jne
pop
scas
jmp
and
or
mov
pop
test
pop
negb
es
bnd
sbb
lds
arpl
sub
xchg
push
add
popf
sub
outsl
push
out
xchg
mov
jne
jne
mov
add
out
xlat
adc
or
xchg
jge
and
mov
or
inc
data16
push
test
jge
push
push
xor
ss
loope
ja
pop
xor
jo
jne
xchg
xchg
mov
push
or
adc
and
dec
out
mov
in
jb
add
xchg
imull
push
rcrl
mov
mov
psubusw
fldt
movsb
data16
aas
call
hlt
and
jle
inc
and
data16
out
adc
inc
push
out
gs
shl
inc
push
dec
dec
ss
insb
lds
mov
loop
scas
call
dec
mov
sbbb
pusha
mov
pushf
push
mov
stc
nop
gs
push
inc
nop/reserved
dec
and
stc
cmp
divb
pop
mov
and
repnz
mov
sbbl
mov
dec
movsl
int3
mov
insb
or
push
lock
jmp
pop
lods
sti
sahf
add
or
mov
and
std
iret
repz
jnp
fwait
jns
adc
ret
jns
lea
icebp
ss
scas
inc
nop
push
fs
gs
dec
sbb
jo
mov
pusha
inc
test
add
shr
or
das
fwait
nopl
xor
jb
sub
pop
outsb
stc
dec
pop
outsl
and
scas
dec
xchg
cmpsl
sbbl
inc
push
cmp
pop
adc
bndstx
push
mov
xor
mull
les
mov
test
lcall
mov
test
xchg
and
mov
jbe
xchg
leave
cli
cwtl
das
cmp
dec
fiaddl
cmpsl
popa
clc
mov
cli
add
insb
dec
pop
jle
xor
bound
xlat
push
stos
add
push
test
cmpsl
fistpl
adc
pop
sub
inc
pusha
pop
mov
cmp
sub
or
jge
pop
cmp
pop
incb
and
out
aas
jbe
mov
inc
adc
mov
out
mov
ljmp
aaa
dec
in
push
sub
add
push
jge
dec
inc
insb
adc
in
and
xchg
in
jle
mov
je
mov
inc
lods
cmpsb
icebp
adc
aad
cmp
fists
push
outsl
cld
cld
loop
shrl
data16
rorb
repnz
cwtl
gs
adc
dec
adc
leave
insb
inc
sti
insb
arpl
mov
dec
ret
inc
andl
je
add
scas
pop
insl
jmp
cli
mov
sub
adc
in
test
jmp
xor
xor
daa
ret
movsb
fstl
incb
sub
and
sub
fs
pop
popf
pop
xchg
test
movsb
inc
dec
mov
mov
or
sbb
leave
mov
mov
std
mov
adc
in
sub
jo
outsl
fwait
lods
inc
int
mov
jg
inc
shl
pop
ret
popf
movsl
adc
mov
cwtl
lods
imul
cmp
sbbb
lea
or
mov
inc
sbb
popa
lret
add
stc
adc
jmp
test
cmp
push
dec
or
and
out
stos
cmp
fxam
adc
and
rolb
stc
aas
daa
jnp
xor
rolb
dec
add
mov
fwait
in
or
loop
push
mov
push
js
icebp
sarl
dec
ror
cmp
pop
test
pop
rcr
jno
jbe
fwait
movsl
or
iret
cmp
and
add
in
shrb
lret
shrl
and
sar
icebp
scas
mov
lret
mov
jno
outsl
cltd
push
push
cltd
or
add
add
xor
gs
test
mov
mov
push
sbb
push
je
clc
mov
bound
int3
adc
loop
inc
add
or
in
xchg
sbb
cmpsl
ds
xor
sub
vpmuludq
not
sub
les
shll
in
cmpb
outsl
mov
mov
aad
cltd
push
movsb
adc
jae
in
mov
outsb
ljmp
adc
lds
ss
xchg
imul
mov
movsl
adc
push
push
sub
mov
fiadds
ficoms
mov
scas
das
jmp
jmp
dec
pushl
pop
mov
repnz
in
pop
test
mov
mov
mov
cmp
pop
xchg
jae
or
xchg
adc
lcall
sub
cmc
out
add
jecxz
cmpsb
xchg
dec
jno
subl
rol
shlb
rorb
cltd
mov
lret
xor
jle
sub
add
inc
aaa
mov
fldt
enter
fistpll
push
mov
cmpsb
fisubl
jl
pop
cwtl
lea
dec
mov
nop
mov
xchg
push
inc
and
jg
icebp
imul
xchg
adc
bound
push
mov
repz
fadd
mov
cmp
push
std
fwait
addr16
arpl
std
or
outsb
pop
lcall
sbb
outsb
xchg
dec
push
cmp
adc
dec
mov
or
pop
imul
or
loopne
loop
xor
push
add
push
sti
daa
gs
js
ss
data16
pop
je
leave
bound
shrl
or
add
mov
dec
add
lods
mov
cs
adc
lds
nop
cltd
lds
jg
cmp
movsb
add
aam
mov
scas
mov
pop
aas
test
mov
fbstp
fisubs
gs
pusha
push
xchg
fdivs
aam
imul
aas
pop
xor
shll
repz
and
mov
pop
pop
pop
clc
mov
sub
or
fstps
mov
xor
es
popf
xchg
adc
je
mov
in
xchg
xor
xor
and
xor
sbb
fimuls
leave
pusha
adc
xorl
or
sbb
pop
repz
data16
inc
add
mov
icebp
jecxz
push
or
push
loopne
std
stos
jl
setne
mov
xchg
sbb
push
or
ret
lds
inc
es
fmul
push
push
orl
repnz
or
icebp
mov
nopl
in
fisttpl
inc
fbstp
in
mov
push
jge
xchg
fidivrl
in
loop
xchg
jo
jge
cld
xlat
pushf
ss
pushf
mov
jle
xor
loop
cld
lahf
nop
mov
mov
pusha
fdivs
pop
stc
loope
cmp
fldcw
xchg
mov
mov
fdivl
jnp
sub
shll
pop
ljmp
cmc
daa
cmp
shl
in
lods
fidivl
fucomip
mov
xor
dec
dec
repnz
and
icebp
or
push
or
mov
pop
pop
mov
out
xchg
jmp
or
andl
int
xlat
cmp
dec
data16
xchg
das
cli
mov
push
or
out
jae
adc
imul
mov
addr16
out
test
scas
movsb
repz
dec
in
fistpl
mov
cld
ret
push
sbb
sti
cmpsb
cmc
cmp
rclb
adc
fisubrs
xor
mov
adc
in
sbb
insb
test
or
int
sub
dec
mov
or
or
lcall
testl
mov
dec
mov
rclb
ja
mov
addr16
test
xchg
sbb
sbb
xor
sub
pop
or
lahf
push
xchg
jne
mov
and
ja
sahf
das
push
xchg
mov
sbbl
mov
adc
mov
mov
lret
lds
repnz
add
mov
push
pop
sub
andb
xchg
fdivrs
outsb
sub
jbe
sub
inc
sti
scas
add
iret
mov
sarl
or
push
loope
xchg
scas
adc
xor
mov
fistl
dec
bound
push
loop
popa
pushf
jae
dec
int3
jle
push
jmp
ds
cli
out
pop
hlt
jle
add
iret
and
fistl
cmp
dec
in
call
ret
mov
test
mov
xchg
cmpsl
mov
jg
mov
xor
add
xchg
jle
arpl
xchg
in
std
ret
mov
mov
call
test
call
addr16
scas
js
repz
inc
lcall
pop
and
adc
cmpsl
pop
push
into
or
dec
in
loop
ja
xchg
mov
mov
das
dec
sbb
pop
cmc
popa
cmp
std
dec
cwtl
in
repnz
shll
pop
jns
cwtl
mov
inc
mov
and
add
outsb
ljmp
jo
push
testl
jns
push
cs
jb
fsubl
push
fbstp
mov
lcall
sbb
sub
rcl
adc
lea
add
stc
and
imul
das
mov
leave
or
cltd
sbb
bt
or
hlt
dec
adc
insb
push
in
test
clc
pop
xchg
lahf
or
sarl
mov
shl
adc
bound
mov
test
sbbb
scas
jmp
fs
in
iret
add
pop
mov
push
xchg
jne,pn
xor
pop
lret
dec
fcmovnbe
cmpsb
sbb
ret
mov
and
push
rorb
aad
or
inc
insb
push
cmp
orb
scas
mov
rcll
enter
imul
and
cmp
mov
push
jae
ficoml
scas
dec
mov
or
and
sub
and
sbb
add
test
bswap
xchg
push
imul
pop
cltd
xor
les
fistpl
jne
sub
xchg
sarb
in
jnp
push
jae
push
in
gs
cwtl
lods
ret
int
sub
popf
sarl
shlb
and
mov
stos
cmp
out
push
mov
shlb
data16
fs
push
sbb
cmpsl
sub
xorb
inc
mov
orb
xor
les
mov
dec
lret
and
jno
shll
les
and
in
inc
icebp
dec
cs
ljmp
std
mov
mov
xchg
pop
xchg
mov
movsl
loope
sbb
sbb
or
cmp
in
int
xchg
add
xor
jo
jl
popa
adc
inc
cmp
push
mov
inc
xor
push
in
icebp
and
sbb
stos
mov
xchg
xor
push
mov
cltd
adc
dec
jge
pop
push
pop
mov
out
aaa
mov
ret
cli
xchg
gs
mov
xchg
add
mov
dec
fs
in
add
fwait
push
repnz
mov
lret
scas
test
or
mov
aam
jae
pop
fistps
and
xlat
mov
inc
mov
adc
or
and
cwtl
pop
xor
out
les
mov
enter
xchg
in
std
xchg
mov
mov
icebp
mov
ret
cmc
sub
sbb
imulb
cld
mov
stc
ljmp
pop
cmp
sti
pop
or
lret
sti
adc
pop
or
mov
sbb
ret
sub
hlt
mov
cmpsb
xor
call
jl
mov
mov
sub
pop
pop
mov
push
imul
sub
inc
push
pop
in
inc
add
xlat
add
and
test
shlb
cmp
ret
fistps
js
imul
lock
int3
fcomi
and
and
int
in
inc
add
imul
je
push
out
test
test
mov
dec
ja
cld
jno
jns
rorb
adc
outsl
ja
pushf
shll
mov
mov
inc
mov
in
push
pusha
xlat
fmull
sub
cwtl
aas
mov
iret
sub
pop
or
in
adc
aaa
lds
mov
popa
data16
and
push
sbb
inc
inc
fisubrl
inc
popa
jg
dec
in
clc
or
cmpsl
pushf
xchg
stc
or
cld
fbstp
imul
push
pop
insl
enter
jno
sub
int
jge
adc
ret
dec
jmp
push
pusha
mov
jmp
add
sbb
lahf
mov
cli
jno
jl
decl
lcall
insb
xor
popf
mov
mov
pop
fs
testb
dec
mov
mov
pop
data16
cmp
inc
and
lret
inc
dec
sub
dec
roll
xchg
ss
jmp
stos
and
js
push
test
mov
fdiv
popf
pop
mov
lea
inc
mov
pop
shll
rcrl
xchg
bound
or
test
fs
push
popf
insb
jl
insb
in
pop
movsl
mov
test
scas
pop
fimuls
out
hlt
jnp
imul
or
and
and
imul
pop
imul
inc
loop
or
mov
pop
push
jns
shl
add
ja
fldcw
out
sar
ds
mov
jae
mov
stos
adc
mov
test
aaa
adc
cltd
push
aaa
push
out
or
and
rolb
ja
mov
sbb
xchg
mov
in
lahf
mov
and
mov
gs
jg
jp
fimuls
repnz
in
pushf
jl
mov
insb
jl
loopne
rolb
fwait
sub
popf
mov
out
push
jnp
repnz
adc
add
mov
or
ret
sbb
or
dec
movsb
dec
pop
repz
adc
xor
jp
adc
pop
lock
push
add
adc
stos
rcrb
sbb
js
dec
cmp
or
cs
stos
pop
jle
mov
or
out
movsl
les
lods
push
mov
sub
cmp
fistpll
dec
int3
shl
cmpsl
rcll
shll
push
insl
cmp
in
movsb
cmp
cs
loop
loopne
sub
cmp
icebp
mov
adcb
add
jno
jp
fists
mov
imul
popf
or
or
popf
inc
aas
xor
lds
xor
leave
push
adc
push
out
fldl
mov
jne
mov
lock
or
std
xchg
xchg
xor
mov
push
leave
pusha
inc
fnsave
add
cwtl
xchg
imul
inc
pop
icebp
xor
movsb
cmp
mov
jmp
adc
mov
pop
mov
or
cmpsl
in
test
xchg
setl
adc
mov
lret
sbb
lret
int
xchg
lods
cltd
mov
sub
pop
sbb
ds
arpl
in
sbb
sbb
xchg
ljmp
jne
pushf
dec
fs
mov
and
cmpsb
test
lret
or
addr16
lock
icebp
jno
inc
xor
sbb
inc
out
je
das
arpl
jo
add
aaa
ret
sub
rcrb
add
test
mov
subb
cmpl
popf
icebp
adc
out
xchg
cmp
sbb
push
sub
push
mov
dec
sbb
mov
jb
in
rcrl
pop
jp
jns
jl
push
js
lea
in
sbb
pusha
aam
mov
sahf
xor
sbb
int
jb
sub
inc
pop
and
and
sbb
shl
int3
imul
pop
bound
push
add
xor
pop
and
call
ja
sub
jmp
sub
repz
dec
out
cltd
sub
cmp
sbb
fbld
and
add
ret
push
out
add
dec
shr
mov
jnp
scas
jmp
push
loop
mulb
mov
mov
dec
ja
fldcw
cmp
push
shufps
les
dec
in
mov
mov
jbe
add
mov
std
inc
jg
jnp
push
adc
dec
dec
mov
lds
and
cli
rcr
mov
movsb
mov
mov
clc
cmpsl
xchg
xchg
aaa
pop
lcall
ss
push
mov
sub
xchg
jge
sub
sti
sbb
adc
mov
jne
testl
push
cmc
insl
and
cmp
cmc
ja
xlat
mov
jmp
push
ret
adc
push
aas
ljmp
xchg
outsl
sub
mov
add
add
loopne
loopne
sbb
jmp
in
add
mov
pand
and
mov
jmp
adc
fimull
lret
div
bound
mov
test
xchg
xor
std
inc
lods
inc
push
dec
fstpl
cmp
mov
push
cltd
fcmovu
xchg
fsub
cmp
push
or
pop
es
lea
or
sbb
push
in
and
inc
jae
je
int3
fisubrs
xchg
xchg
or
cmpsb
add
jge
das
jecxz
jmp
in
push
out
nop
jb
cmc
jmp
cmp
sbb
inc
mov
clc
loop
xchg
in
dec
shlb
faddl
sub
je
dec
cmpsb
aam
xchg
adcl
cmpsl
into
xchg
cltd
stos
cmp
loop
sub
jp
into
dec
sub
inc
arpl
sub
movsl
inc
clc
xor
fisttpl
neg
lds
lret
cld
jp
shlb
add
flds
ljmp
jecxz
test
and
sbb
aaa
dec
ficompl
call
loope
adc
testb
cmp
sarl
dec
mov
jg
push
test
mov
stc
lods
les
jne
sbb
lods
xlat
mov
mov
lods
shll
xchg
fidivrl
inc
jmp
xor
and
ljmp
imul
mov
dec
pop
filds
std
mov
and
push
and
pop
test
jns
pop
push
pop
cmpsb
mov
dec
xor
or
test
cmp
pop
repnz
or
pop
sub
cltd
adc
sbb
mov
lret
jnp
out
xor
xor
int
ret
loope
test
out
cs
stos
xchg
test
in
js
imul
shll
mov
rolb
fucomip
test
jnp
or
jo
out
mov
or
cmp
sub
sub
push
scas
and
loope
push
sub
fwait
jecxz
iret
fwait
mov
mov
jns
imul
jne
cld
arpl
insl
addr16
sbb
cmp
in
mov
pop
pushf
dec
mov
insb
xchg
in
movsl
cmp
mov
sub
sahf
shll
ljmp
neg
xor
mov
inc
test
or
fwait
xor
mov
push
lods
sbb
gs
into
xlat
addl
enter
test
pusha
xchg
test
and
std
push
push
cmp
cli
mov
xchg
dec
das
fdivl
stc
das
mul
cmpsl
mov
pushf
pusha
adc
mov
cld
sarl
adc
push
push
cmp
jl
and
aas
pop
imul
and
push
mov
out
mov
and
out
gs
lods
call
mov
scas
xchg
loope
xchg
imul
mov
je
mov
inc
addb
mov
push
sub
fstp
jle
pop
lret
jne
add
xchg
cmp
jl
sub
stc
movsb
inc
jbe
repz
hlt
adc
in
xchg
jg
into
or
scas
dec
sub
fstl
lods
das
jbe
sahf
inc
push
out
add
call
scas
les
adc
push
mov
pop
test
jbe
xor
jmp
clc
pop
jb
mov
cmp
mov
sub
and
lret
leave
insb
adc
stos
cs
xchg
imul
mov
mov
sub
outsl
jns
lret
cmp
mov
ljmp
int
cmpsb
mov
lret
addr16
and
jle
cli
pushf
je
mov
inc
cwtl
in
cli
mov
movsb
add
jne
pop
sub
fsubrs
outsb
aaa
bound
xor
cmp
mov
std
cmpsb
dec
out
idivl
in
push
pop
inc
cwtl
push
aaa
fidivl
in
sub
and
in
mov
dec
inc
push
scas
jle
inc
das
jae
in
leave
int
dec
fidivrl
xor
and
bound
outsb
repnz
test
xchg
popa
subl
cmp
xor
jmp
cmp
iret
push
shll
je
pop
popf
mov
mov
adc
nop
xchg
rcl
mov
cli
mov
outsb
daa
dec
and
aaa
jno
jbe
fldl
mov
inc
in
jl
mov
add
pop
icebp
cmp
mov
lods
and
sbb
jns
pop
jp
lcall
adc
jecxz
mov
jge
mov
xchg
scas
nop
add
push
dec
or
cmp
fisubs
je
pop
and
sub
mov
add
push
jae
or
adc
mov
sbb
mov
jge
inc
int
sbb
jo
mov
and
clc
push
fmul
rclb
cmpb
mov
jbe
xor
std
mov
adc
pop
jle
test
mov
lock
mov
lock
gs
sahf
mov
ret
repnz
stc
push
mov
xchg
fwait
lods
and
pushf
sbb
inc
call
dec
dec
data16
sbb
outsb
insb
sbb
clc
rcl
dec
sbb
sbbl
xchg
lret
adc
jo
pop
sub
aam
enter
pop
mov
fs
push
int
mov
jbe
cmp
pusha
aam
subl
into
add
add
outsl
push
addps
pusha
iret
leave
movsb
aaa
rclb
jb
in
mov
scas
xor
fisttps
cwtl
mov
pushf
movsb
xchg
adc
int
or
gs
fsts
subl
icebp
cmp
jl
pop
dec
pusha
test
sub
sub
mov
sbb
adc
push
sbb
cmp
ljmp
fwait
imul
stos
push
les
cmp
xlat
mov
popf
pop
xlat
adc
mov
test
or
fiadds
sub
lods
mov
in
lock
cs
sbb
mov
xchg
cmp
pop
xlat
mov
iret
jg
mov
adc
leave
sub
mov
fidivrl
mov
outsl
sub
pop
add
call
cmp
out
fcoms
mov
icebp
sub
dec
dec
dec
xor
shll
push
and
in
std
mov
int3
aaa
ret
xchg
add
push
dec
xchg
enter
imulb
sbb
repz
insb
jne
pop
lahf
repz
outsb
jno
fwait
scas
aaa
scas
or
lds
or
mov
dec
or
movups
icebp
dec
out
rcrb
jl
sbb
cld
cs
popf
lods
pop
mov
mov
push
repnz
ds
cmp
ljmpw
nop
stc
pushf
push
xchg
leave
cltd
inc
es
fisttpll
gs
dec
add
scas
mov
adc
nop
fnstenv
add
fs
mov
shll
inc
jecxz
xchg
xchg
addr16
push
cmp
aam
mov
pop
jnp
sbb
fcoml
in
movsl
jo
movsl
cmp
fisubl
pop
mov
inc
push
add
arpl
push
xchg
pop
dec
and
popf
cwtl
in
out
cmp
pop
pop
cs
push
xor
enter
sbb
push
sbb
push
das
out
cmp
jns
push
dec
cmp
pop
shlb
add
jne
dec
mov
test
push
ret
jp
in
sub
sbb
outsb
sbb
xor
sti
pusha
arpl
dec
cltd
adc
sbb
pop
aad
fistl
mov
xchg
adc
rcl
jecxz
inc
sbb
push
inc
and
pop
mov
xchg
pop
push
ds
sbb
inc
cs
rcrl
jmp
pop
fdiv
lods
cmpsb
cmp
pop
or
std
push
pop
jg
mov
sbbl
rol
sbb
add
add
mov
sbb
popf
inc
lock
xchg
repnz
xchg
adcl
test
fldcw
jg
mov
popa
dec
lahf
sbb
les
mov
movsb
sub
pand
xchg
inc
dec
cmp
pop
or
add
xchg
out
test
repnz
xor
cmp
loope
mov
ja
or
xlat
pop
pushf
je
xchg
jge
jp
sbb
adc
arpl
push
mov
push
lods
out
cmp
jl
cmp
mov
xchg
dec
addl
gs
cmp
push
lds
stos
jecxz
or
stc
mov
or
mov
out
add
dec
pushf
mov
dec
sti
cmp
ss
lahf
cmpsl
mov
jnp
xchg
call
test
inc
xchg
push
out
in
inc
icebp
ficompl
daa
into
push
test
and
and
jae
popa
push
or
data16
ja
push
aaa
dec
dec
lcall
xor
cmpsl
mov
notl
ljmp
mov
hlt
testl
mov
ljmp
movsl
mov
or
jmp
mov
and
jns
xchg
cmp
mov
cmp
xchg
push
in
ja
inc
xor
stos
inc
or
outsl
pop
data16
mov
jmp
adcb
dec
push
loop
leave
es
cwtl
mov
fxch
int
inc
mov
mov
sbb
push
inc
jne
jmp
test
out
or
dec
stos
xor
xchg
or
bound
inc
shll
jg
xchg
push
mov
fnsave
movsb
lahf
aas
lret
cld
pusha
es
cmpsl
sbb
jmp
dec
nop
pop
aas
test
mov
jge
dec
push
out
push
out
xor
sub
dec
adc
insl
repz
lahf
data16
mov
and
push
mov
cmpsl
pop
sub
ljmp
adc
jb
mov
ret
inc
gs
push
pop
jmp
mov
stos
cwtl
sub
arpl
sbb
sub
xor
subl
subb
push
gs
xchg
pop
push
mov
dec
and
cs
ja
mov
cmp
cld
lcall
fidivrs
sub
jae
mov
mov
minps
xchg
add
pop
orl
jne
push
dec
bound
stos
sub
push
repz
or
subl
cli
shrl
gs
in
mov
stc
mov
movsl
int
dec
push
mov
jle
mov
jae
ljmp
cmpsb
adcb
jne
shll
lahf
idivb
fmuls
and
in
jg
sub
inc
push
fldcw
mov
cmp
pop
pop
sub
es
xchg
mov
fcmovne
fs
cmp
jb
cwtl
sbb
dec
lea
add
call
sahf
dec
jl
bound
icebp
movsl
inc
mov
mov
jnp
cld
iret
jle
push
mov
sbb
inc
add
dec
das
addr16
ljmp
or
das
adc
or
xor
aas
in
mov
mov
imul
fidivrl
or
fildl
jl
jle
fwait
scas
dec
push
out
push
rcr
pop
fmul
bound
insb
dec
stos
ret
movsb
test
les
loope
xor
adc
and
mov
jbe
fsubrs
inc
out
mov
lcall
in
xor
je
clc
dec
shrb
sti
fwait
cwtl
mov
mov
mov
std
rorl
mov
popa
xchg
add
dec
out
mov
popf
xchg
shrb
xchg
mov
fstl
pop
nop
add
aaa
jecxz
insl
cld
push
mov
mov
push
cmp
inc
xor
loope
jae
gs
mov
test
cmc
aas
jge
dec
mov
xchg
test
movsl
iret
mov
iret
mov
sbb
out
mov
pop
and
bound
xchg
int
aam
sbb
jg
cmp
mov
jl
xor
cmp
sub
push
repz
inc
xor
in
out
inc
mov
sub
sub
pusha
addb
add
sti
sbb
sbb
push
mov
and
mov
scas
push
pop
stos
fdivs
push
xchg
dec
clc
iret
data16
stc
xor
mov
or
lea
adc
xorps
mov
sub
and
popa
push
lea
jg
xchg
xchg
push
movsl
pop
mov
scas
jecxz
insb
mov
mov
sbb
sarl
lock
sahf
mov
xor
jo
lcall
cmp
mov
aaa
das
fs
daa
xchg
push
or
xor
sub
adc
sub
xor
jge
mov
gs
push
out
xchg
add
add
cmp
sbb
push
in
and
lahf
inc
xchg
je
fildll
leave
es
imul
sub
push
mov
mov
sub
stos
cli
ror
mov
loop
adc
mov
andl
jo
or
enter
cmpsb
shl
mov
pop
loopne
sarl
inc
repz
test
sbb
rol
xor
loopne
repnz
dec
adc
daa
add
sbbl
hlt
das
xchg
inc
stos
push
in
or
push
stos
inc
xchg
cmp
push
cmp
xchg
jbe
sub
or
adc
sub
fs
movsb
rcrl
adc
stc
iret
mov
leave
es
std
mov
push
sub
aas
sub
jno
xchg
mov
fistl
push
mov
lcall
in
pop
mov
arpl
pop
dec
cmp
out
pop
bound
orb
pop
sahf
aam
xlat
push
cmc
and
mov
loopne
xchg
iret
xor
rcrb
sarb
mov
mov
mov
clc
lcall
sub
lods
clc
mov
mov
push
mov
push
loopne
add
cmp
dec
scas
cmpsb
loop
push
adc
repz
arpl
ja
out
sub
sti
xchg
les
sub
mov
rol
sub
pop
popf
dec
les
repz
pop
sub
fcoms
cltd
dec
mov
xchg
xor
test
sub
mov
aaa
sahf
dec
in
pop
adc
mov
jno
lods
mov
or
and
push
aad
lea
insb
add
sub
jle
fists
in
jne
inc
jmp
mov
push
dec
adc
xlat
scas
int
loope
dec
mov
shr
ja
dec
mov
cwtl
je
sti
pop
inc
test
xor
sarl
or
out
outsl
xor
insb
dec
in
cmp
sub
fisubrl
test
and
repz
aaa
lahf
leave
out
push
push
je
mov
fistpll
xchg
pop
fs
sub
pop
push
stos
mov
fdivrl
gs
divl
ljmp
sahf
jge
bound
mov
loope
mov
mov
ret
jecxz
scas
ret
push
cmp
mov
and
add
gs
lret
frstor
and
mov
rcll
nop
mov
sbb
dec
and
dec
add
loop
cmp
dec
pop
popa
in
les
pusha
pop
mov
dec
mov
adcl
xchg
rcrb
xor
fldl2e
mov
test
ss
call
in
repnz
xchg
dec
dec
lahf
mov
sub
jmp
dec
push
sbb
mov
popa
cld
fnstenv
aaa
lret
rcr
rorl
xchg
mov
mov
imul
adc
cmpsl
inc
and
mov
and
addr16
inc
adcb
std
jp
pop
push
imul
pop
aam
aam
and
inc
jp
mov
push
pop
xlat
scas
or
push
sub
popa
xor
inc
xchg
push
or
mov
dec
sbb
in
mov
mov
jae
and
jmp
adc
sbb
xchg
mov
add
mov
sub
xor
int
adc
xchg
repz
mov
jecxz
ljmp
xchg
les
or
popf
mov
aaa
push
xchg
int
xchg
xor
shlb
add
es
lret
int3
loopne
mov
mov
mov
jmp
pop
push
repnz
je
sub
cwtl
pop
adc
inc
or
nop
in
cs
in
daa
push
shll
xchg
orl
jae
jge
sbb
outsb
nop
jge
dec
mov
pop
jno
ret
mov
lea
pop
into
das
pop
mov
das
bound
movl
ljmp
pushf
cli
daa
rolb
sbb
xchg
loope
push
call
push
inc
jl
push
adc
ja
jecxz
mov
scas
cld
mov
stos
and
mov
adcb
cmp
cwtl
in
sahf
ret
adc
pop
call
hlt
aam
mov
ret
and
pusha
sbb
and
jae
jge
sbb
adc
stos
jmp
lret
out
xchg
mov
ret
dec
test
mov
mov
movsb
aad
pop
cmp
pop
mov
aas
mov
sub
jmp
xor
push
mov
aas
and
jle
loopne
cmp
mov
ret
sub
mov
pop
xchg
pop
stc
pushf
cmp
sub
repz
dec
xor
pop
loop
push
dec
jno
sub
scas
test
lahf
into
push
lcall
cmpl
adcb
stc
popf
add
ljmp
rolb
test
movsl
out
mov
aas
aam
imul
jmp
out
cmpsl
mov
fbstp
xor
mov
das
cld
sub
iret
push
mov
fiadds
adc
xor
xchg
push
xor
jg
mov
mov
aad
shll
out
inc
mov
rolb
stc
mov
ror
jo
dec
rcll
sti
sbb
ss
sbbl
jmp
cmp
xor
dec
rolb
ss
and
cwtl
andl
push
fidivl
or
pushf
ljmp
pushf
mov
test
insb
mov
arpl
test
push
jno
sub
movsb
sbb
pop
mov
mov
cmp
jg
xor
pushf
js
cld
dec
pop
mov
lahf
cs
js
adc
ss
add
mov
mov
jbe
int3
pop
or
scas
inc
push
rcll
leave
mov
pop
mov
hlt
push
sbb
or
inc
out
jge
inc
bound
and
mov
call
mov
loopne
cli
push
or
mov
loop
mov
pop
aas
xchg
repnz
test
or
lock
sub
jne
push
cmpsl
add
cmc
inc
and
push
insl
out
add
mov
test
shlb
cld
nop
shll
lock
test
loopne
data16
mov
in
arpl
ljmp
xchg
mov
clc
sub
pop
sbb
das
push
jae
jns
loope
ss
xchg
jne
mov
add
dec
dec
push
dec
mov
repnz
iret
push
push
in
mov
and
repz
fsubrs
aam
sub
dec
int
xorb
push
mov
scas
insl
das
shrl
add
dec
mov
push
mov
sub
mov
mov
cmp
clc
test
lcall
pusha
cmc
pop
ja
stc
mov
xlat
orl
dec
and
cmp
cmpsb
movntq
dec
je
jne
add
cli
jno
pushf
xor
es
jbe
insl
mov
mov
iret
aad
repz
les
adc
sbb
stos
inc
xchg
adc
mov
add
jg
adc
notb
sbb
js
jo
cli
or
xchg
xchg
sub
add
pop
addr16
je
loop
out
arpl
push
imul
fsubrs
or
lea
inc
jl
add
cmp
mov
xor
in
mov
sbb
std
popf
xor
sbb
push
data16
sti
out
sub
jb
je
loop
jnp
push
test
out
xchg
mov
int3
cltd
xor
cmpsl
lods
inc
cmpsl
out
mov
and
aad
test
shl
rcll
pop
nop
and
adc
fbstp
push
and
push
out
test
add
mov
jge
jg
negl
int3
pop
into
push
fisubrs
dec
cmpsb
jl
imul
jmp
js
sbb
or
xlat
mov
sbb
dec
cwtl
inc
xor
popa
popw
jg
push
leave
int
mov
pop
out
xchg
jge
in
cmp
adc
shll
lock
cmpsl
or
icebp
mov
fsubl
jbe
mov
adc
ss
bound
mov
sbb
mov
xchg
test
mov
scas
sub
divl
sarb
xchg
shrl
pop
sahf
xor
cwtl
icebp
mov
lods
into
inc
fildl
sub
iret
lahf
push
jg
xchg
mov
es
add
mov
pop
adc
and
jae
and
stc
pushf
cli
stos
cmp
and
add
inc
xorb
push
mov
dec
outsb
das
fs
lret
push
cwtl
clc
inc
adc
shlb
es
mov
add
dec
cli
outsl
jp
aad
pop
and
jg
or
pop
decb
jp
mov
sub
cmp
out
pop
mov
adc
ds
ja
dec
mov
adc
cs
shrb
lfs
repnz
inc
jnp
lock
or
fnop
imul
movsl
xchg
lcall
paddsw
in
lret
test
inc
sahf
sbb
aas
loop
shr
add
pop
push
clc
cs
out
and
sub
stos
xchg
leave
add
cmove
sub
or
mov
imul
out
xor
sarl
hlt
inc
cmp
mov
addr16
out
or
mov
insl
insl
mov
in
mov
cmp
inc
movl
inc
sub
jbe
pop
dec
mov
push
xchg
popf
push
jno
ljmp
jecxz
fisttpl
movsb
mov
mov
enter
add
xchg
and
inc
mov
jle
divb
xor
imul
test
inc
fs
shlb
xchg
pop
xlat
cmc
mov
loopne
xchg
in
call
mov
or
insb
icebp
jbe
shr
push
mov
pushl
fwait
mov
ja
decb
lds
rorb
jl
aad
or
dec
cltd
ds
inc
jge
arpl
and
sbbl
cli
aas
jp
jl
xor
ds
shrl
pop
call
cmp
fs
outsl
ret
mov
fildl
adc
jnp
lea
loop
fistpll
mov
sub
call
xor
push
xlat
pop
testb
out
sub
insb
xor
pop
mov
je
ds
xchg
test
test
xor
dec
sbb
movl
loopne
iret
inc
aaa
xchg
mov
xchg
in
stos
mov
ret
pop
mov
mov
jge
inc
mov
adc
les
fidivl
sahf
and
add
mov
mov
fwait
mov
mov
incl
xor
xlat
aad
dec
daa
xchg
mov
movsl
mov
test
mov
fcomi
xor
mov
das
jo
dec
jne
jb
xchg
sbb
iret
dec
addr16
and
pop
mov
lcall
lret
pushf
add
int
pop
testb
sbbl
push
cmp
and
xchg
mov
mov
daa
cs
aam
cmp
std
enter
test
sub
mov
inc
or
mov
pop
movsb
shrl
mov
lret
test
arpl
in
fstpt
or
cs
outsl
gs
xchg
xlat
cld
or
sbbl
xchg
fiadds
mov
pushf
lcall
andl
jne
cmpsb
das
jns
mov
xchg
mov
xor
cltd
test
mov
movsb
mov
mov
jle
popa
add
jno
fidivl
sbb
int
sub
subl
or
daa
lods
inc
pop
dec
mov
test
daa
cltd
sub
addb
mov
shlb
push
neg
adc
dec
out
cmp
aas
add
pusha
pushl
in
mov
or
cmpsl
imul
cmp
cmp
adc
and
dec
ljmp
jbe
lea
jg
mov
add
or
dec
neg
jmp
cmp
mov
arpl
push
xchg
dec
sar
jbe
mov
lea
mov
inc
mov
and
aad
inc
pop
ret
mov
fldenv
sub
pop
and
push
cld
dec
pop
cmpsl
jne
cmpsl
int
sub
push
jne
or
jae
test
dec
iret
fs
test
iret
mov
ficompl
loopne
xchg
add
push
mov
inc
mov
fnsave
push
cmp
fmuls
mov
xchg
aam
clc
push
sti
mov
shlb
mov
gs
push
incb
and
cwtl
mov
lods
addl
stos
mov
frstor
jo
es
ror
pop
into
mov
stos
mov
pusha
dec
mov
xor
out
lcall
test
sub
dec
pushf
xor
adc
sub
loopne
push
dec
data16
sub
out
add
dec
fbstp
jmp
andb
xchg
je
or
xchg
sub
xchg
inc
daa
jmp
inc
sbb
cwtl
ret
sub
dec
fsubrl
push
adcl
arpl
ret
jecxz
in
mov
mov
mov
pop
negl
cmp
push
daa
xchg
mov
lahf
bound
and
adc
adc
pusha
popa
cltd
xor
incb
scas
jg
pusha
cmp
into
dec
loope
loop
push
pxor
mov
inc
push
jg
inc
xor
jb
inc
faddl
jns
and
pop
lock
pop
jb
sbb
rolb
add
cmc
and
int3
fsub
inc
mov
cmp
adc
jns,pn
jmp
mov
into
dec
dec
pop
jecxz
mov
add
or
adc
adc
add
push
lods
outsl
fwait
mov
sub
add
movsb
inc
js
rolb
sub
xlat
sbb
js
or
inc
mov
push
cmp
mov
push
cmp
rcrb
xorb
test
mov
mov
mov
subl
out
xchg
dec
ret
out
test
push
xchg
cmpsl
fidivrl
mov
dec
inc
std
insb
std
outsb
in
aad
popl
adc
xor
stc
mov
lods
cmp
push
sbb
das
jnp
inc
fstpt
bound
nop
mov
pop
stos
adc
fcompl
push
adc
sbb
inc
xlat
push
xor
jns
out
out
sub
mov
lret
call
add
popf
xor
cmpsl
aas
push
fldcw
mov
push
int
test
jbe
dec
rcr
or
loop
jge
and
mov
xlat
inc
das
call
outsl
push
sbb
cwtl
jmp
or
and
pop
pop
ljmp
pop
out
test
pop
insb
les
cmc
ljmp
lret
mov
cmpsb
cmp
or
les
dec
int3
and
sbb
cld
push
aaa
push
push
push
setge
mov
mov
scas
mov
mov
jnp
ss
mov
push
cmpsl
mov
dec
loop
in
sti
jp
push
lods
sbb
cld
pop
test
mov
popf
aad
add
lahf
arpl
sti
mov
shll
mov
cmp
arpl
adc
inc
out
stos
cmp
pop
fstpt
or
cs
cli
push
bound
in
leave
pop
mov
jno
push
pop
dec
loopne
je
dec
das
jecxz
test
mov
repz
mov
ret
mov
cmp
push
lods
xchg
fcomps
sbbl
push
insl
lcall
mov
mov
push
mov
js
ret
ljmp
jae
mov
adc
ljmp
fiadds
xor
std
adc
arpl
xor
sub
xor
add
loopne
adc
int
or
movsl
xchg
clc
pop
out
sub
adc
sbb
xlat
cs
lret
dec
sub
icebp
mov
nopl
sub
in
outsl
popa
je
push
jno
mov
insl
test
decl
pop
or
adc
pop
mov
xor
add
and
push
lods
dec
aas
push
jmp
js
dec
jb
xchg
inc
ffree
and
pop
clc
fdivl
add
sbb
adc
jns
lcall
adc
xor
leave
flds
adc
fcoml
stos
sti
adc
push
xor
sarb
loopne
js
fistps
scas
adc
inc
or
lret
je
nop
xor
fs
shlb
push
sbb
push
sbb
and
lahf
test
es
adc
xchg
adc
hlt
sahf
xor
inc
sarb
fucom
mov
test
cmp
inc
sub
adc
aas
adc
ficomps
les
xchg
sub
pop
jnp
ror
mov
add
sbbl
xchg
outsb
lahf
sbb
out
xor
inc
sub
jecxz
mov
repnz
push
jmp
arpl
pop
aad
aaa
jno
in
push
mov
test
out
cld
fisubrs
push
adc
xor
sbb
cmp
sub
cmpsl
dec
push
or
in
addr16
fbld
dec
popw
sub
mov
inc
jle
les
ja
adc
push
cmc
cld
adc
movsl
cmp
sub
cmp
xchg
mov
gs
inc
sbb
inc
jl
lods
sub
movsb
cmp
pop
cwtl
mov
adc
jge
cmp
aaa
loop
mov
adc
adc
cld
and
or
mov
inc
aaa
mov
cmpsl
lds
in
loope
out
sahf
and
and
sub
push
dec
mov
shl
push
aad
mov
and
std
cs
push
inc
loope
pushf
ds
or
sbb
pop
hlt
and
add
in
sbb
mov
jge
dec
sub
xor
push
mov
pop
or
pop
negb
or
addb
pop
aaa
int3
xchg
inc
jmp
gs
and
sbb
jl
adcl
aas
divb
in
clc
hlt
mov
mov
add
mov
pop
movsl
cmp
and
push
fstpl
jmp
test
jbe
aaa
ja
lock
fsub
pushf
jl
into
add
xor
out
mov
mov
sub
insl
jnp
dec
and
mov
inc
iret
pop
lret
lock
lods
pop
and
popa
mov
lahf
mov
adc
fwait
leave
jge
sub
xchg
lcall
jo
bound
jge
mov
test
loope
loope,pt
lods
mov
sahf
gs
xor
pop
sbb
mov
push
or
or
pop
pop
scas
inc
pop
cmp
jbe
inc
xchg
pusha
pop
dec
dec
cmp
adc
rorb
insb
mov
and
pop
cmp
shlb
dec
sarb
cmp
ffreep
adc
cltd
lcall
pop
insb
and
add
mov
addr16
pop
repz
movsl
sub
add
sub
mov
std
mov
xlat
jecxz
in
sbb
xchg
stos
stc
cmp
outsb
outsl
sub
push
test
fmull
testl
aaa
test
inc
jmp
mov
cwtl
adc
or
test
and
or
jmp
xchg
fldt
decb
push
fistpl
fs
sub
add
pop
andl
push
push
mov
sbb
cltd
xor
mov
ljmp
sub
push
xchg
mov
in
push
fisttps
cs
pop
mov
shl
xorb
mov
shlb
insb
push
lock
mov
adc
sub
iret
inc
out
xchg
das
or
pop
inc
jmp
aam
adc
loopne
scas
neg
in
cmp
jl
mov
rol
or
stc
sahf
gs
mov
imulb
xchg
mov
or
mov
std
test
sub
adc
dec
jmp
cmc
mov
push
mov
iret
fidivl
cli
mov
int
lret
addr16
add
jle
subb
mov
mov
xor
test
adc
aaa
ds
out
mov
push
sbb
mov
mov
scas
add
je
pop
insl
lret
cld
insl
dec
pop
gs
dec
cs
inc
xor
dec
in
inc
jg
push
inc
xchg
cmpsl
jl
sub
xchg
leave
pusha
mov
mov
add
movsl
ja
xlat
adc
fidivrs
mov
add
xchg
jbe
roll
or
mov
sti
pusha
popf
and
sbb
insl
add
shll
mov
mov
mov
movmskps
rcl
or
fcoms
repnz
sub
jecxz
lock
sub
in
ret
call
xor
dec
sub
jle
mov
push
pop
fsts
jl
test
icebp
or
out
mov
js
sbb
mov
push
adc
cmp
out
xchg
pop
cld
fwait
sti
iret
mulb
add
or
cmp
sub
and
cmp
xchg
bound
cmp
or
jl
stc
fcmovnbe
mov
orl
ror
adc
lds
lret
lret
cld
mov
cmp
cmp
sbb
mov
pop
ret
mov
push
jg
dec
fwait
ret
mov
enter
insl
cmp
stos
insb
lea
and
sub
push
mov
dec
mov
sub
pusha
dec
out
mov
fwait
movsb
hlt
sti
ficomps
fdivl
jmp
add
cmp
cmpsb
push
jle
std
addb
adc
dec
lea
stos
xchg
roll
lods
sahf
and
jg
shlb
cmpsl
repnz
mov
mov
in
scas
cltd
ds
fnsave
mov
imul
js
and
inc
xor
in
mov
xchg
in
std
push
mov
push
jp
push
push
sti
xchg
xor
pop
into
jo
jne
out
out
and
std
mov
cmp
shrl
mov
addb
aam
pop
adc
add
mov
test
mov
xchg
ret
and
xlat
ds
dec
mov
and
js
adc
xor
cmp
sub
jmp
outsb
xor
jno
icebp
mov
cs
jl
inc
push
repnz
lea
xlat
outsl
cmp
les
aaa
inc
fisubrs
repnz
jl
mov
xchg
mov
xor
daa
fcom
stos
ljmp
push
mov
cmpsl
jo
jecxz
xchg
cmp
push
xlat
xor
add
nop
push
pop
or
addr16
hlt
out
jp
jae
lods
fwait
push
mov
je
or
pop
gs
fimull
mov
xchg
leave
sbb
je
outsl
push
mov
and
repnz
int3
xchg
sahf
pop
shlb
das
jnp
ret
or
sub
mov
addr16
xlat
out
aad
fsubr
mov
xorl
add
pushf
jns
push
pop
cmp
test
adcl
ret
adc
inc
loopne
out
and
cmp
mov
cs
arpl
xchg
inc
add
mov
in
insl
sub
out
daa
into
sub
mov
pop
push
fadd
dec
aaa
inc
xchg
mov
fisttpl
cmpl
fprem
pop
push
insb
push
xchg
pusha
sub
push
mov
dec
std
adc
pop
ret
pop
mov
jno
xor
loop
adc
mov
mov
cmp
loop
add
push
stos
push
cltd
mov
dec
jns
lret
lcall
insb
hlt
push
cwtl
sub
sub
aaa
mov
sub
mov
sub
in
xor
shl
lret
jae
pop
loope
sbb
add
push
dec
aam
mov
mov
adc
dec
fucomip
incl
stos
lock
inc
push
add
pop
adc
lret
lret
or
cld
inc
cmp
scas
push
movsb
lods
aaa
lds
xlat
dec
sti
dec
aad
sub
dec
fldenv
cmp
fsubs
push
ds
mov
pop
hlt
mov
push
sbb
jg
fiadds
adc
insb
popa
and
stos
int3
mov
xor
mov
push
sti
mov
mov
xchg
daa
jae
pop
mov
sub
lcall
clc
pop
pusha
xchg
sbb
loop
cmp
sub
inc
xchg
xor
out
in
stos
push
fbstp
outsb
cmp
lock
mov
mov
jne
push
pop
test
dec
fidivrl
xchg
clc
dec
jecxz
or
cs
sub
loop
jl
cmpsl
mov
pusha
imull
mov
out
mov
push
dec
cltd
arpl
xchg
repnz
arpl
xchg
shlb
popa
fidivs
imul
lret
mov
pop
insl
insl
pushf
sbb
jne
addb
or
jb
out
xor
loopne
or
dec
jbe
icebp
push
lret
adc
xor
je
cmpb
xchg
in
pushf
or
add
xchg
xor
pop
push
test
sbb
loopne
inc
test
aaa
adc
cli
push
xchg
cmp
cli
or
lds
jge
push
bound
sbb
aad
push
insl
testb
cwtl
sbb
xor
xchg
or
movsb
mov
and
call
xchg
cli
dec
dec
sti
adc
sub
rcrl
lods
andb
subl
mov
addr16
test
xor
sub
mov
sbb
push
and
fdivrp
repnz
push
adc
mov
fcomps
xor
not
dec
sbb
movsl
add
lea
bound
pop
jno
andl
mov
dec
pop
mov
fildll
and
les
lods
mov
or
jl
ret
pop
push
cmc
dec
pop
mov
shl
jnp
shlb
dec
js
test
sbb
xchg
mov
mov
mov
mov
shll
fs
jo
cmp
add
scas
sbb
roll
mov
loop
cmp
negb
lock
sbb
mov
call
push
inc
cmpsl
pusha
mov
sbb
popf
pop
jg
lahf
loop
inc
leave
gs
out
lods
adc
and
pop
ret
pop
mov
insl
pop
pop
sbb
or
mov
out
imul
inc
out
cmp
lea
ljmp
sbb
xor
cwtl
das
sub
fdiv
lds
push
adc
inc
out
lds
int3
fs
sbb
mov
cmp
lahf
dec
lcall
pop
std
ret
pop
add
mov
sti
fisubrs
sub
cmp
inc
and
js
inc
fsubl
push
arpl
cmpl
push
imul
jae
jge
mov
dec
testb
sub
mov
jne
jns
jp
cmp
dec
and
filds
push
imul
cmpsb
les
adc
xchg
inc
xchg
adc
in
cltd
dec
dec
dec
xchg
jg
xchg
and
fisubrl
sbb
jg
jg
shl
xchg
dec
pusha
ds
dec
pop
gs
sti
fwait
ja
lret
xor
push
xlat
imul
xchg
mov
jge
push
jmp
mov
arpl
dec
out
test
mov
cltd
xlat
lock
cwtl
jge
inc
scas
mov
dec
movsl
add
add
out
out
ja
sbb
mov
mov
das
cltd
push
adc
insb
fcompl
bound
cmp
roll
mov
ja
scas
fcmovnbe
sbb
popa
clc
inc
orb
inc
jmp
lea
lods
nop
sub
test
imul
mov
sbbl
pop
aad
jb
jbe
and
mov
psubsw
adc
lods
dec
cmp
cmp
lea
cmp
in
push
inc
pop
das
xor
imul
jns
leave
out
cmpsl
and
shlb
mov
pop
mov
stc
adc
fsincos
and
shrl
inc
mov
or
mov
sub
imul
rep
icebp
push
sbb
lods
sub
hlt
out
test
push
iret
jb
leave
xchg
mov
orl
or
mov
inc
popa
pop
sbb
test
cwtl
loop
pusha
sub
jb
cmp
mov
pop
insb
dec
in
adc
ljmp
mov
lock
and
test
lret
or
jae
stos
mov
ret
or
les
jne
cmp
cmpsl
out
xchg
mov
jg
lods
push
mov
sbb
or
xor
loopne
test
movsb
leave
mov
adc
loopne
test
and
xlat
rcl
add
or
pop
repnz
push
stos
cs
mov
xchg
loop
mov
popf
lods
add
sbb
call
or
sbb
xor
sbb
jno
lds
mov
sahf
mov
sub
and
or
jae
lods
imul
mov
das
lret
and
and
jg
lret
aam
or
mov
out
add
push
jp
xchg
xchg
mov
test
rcll
sub
test
test
mov
loope
jae
imulb
int3
xchg
sbb
push
mov
pop
mov
cmp
xchg
rcrl
push
mov
arpl
mov
sub
mov
xor
ss
pop
aad
shlb
xchg
addb
cmpb
ret
sub
lret
sbbb
lock
sbb
or
inc
xchg
popf
cli
or
insb
gs
sbb
or
dec
add
push
xchg
dec
fldenv
fdivp
dec
push
push
cmp
push
stc
loopne
and
fstp
push
push
xchg
call
jp
and
fcmovnu
xor
jns
in
cld
pop
cmpsb
test
insl
je
out
xor
and
push
jmp
cltd
jmp
or
insl
or
scas
push
xchg
inc
inc
jno
std
gs
and
in
test
icebp
mov
push
gs
xlat
je
pushf
jmp
inc
xlat
mov
push
ret
pop
outsb
push
ss
push
in
shll
cli
push
xchg
xor
push
jmp
mov
jo
outsb
add
xor
inc
push
jbe
mov
clc
sub
mov
addl
xchg
sti
loop
mov
cmp
mov
xchg
or
push
pop
sarl
test
sbb
cs
cmp
daa
pop
and
lock
test
sub
and
cmp
adc
mov
xchg
mov
or
sbb
rclb
mov
shll
add
outsb
inc
sub
cmp
adc
popa
mov
ret
loop
sti
jno
sub
adc
repz
dec
dec
loope
cmc
arpl
mov
xchg
push
mul
out
sbbl
cmpsb
mov
arpl
xchg
pop
sub
in
ds
ljmp
stc
mov
xchg
stos
push
pop
sub
xchg
dec
popf
push
mov
sbb
jmp
stos
sbb
mov
and
jne
fnstcw
and
insb
sbb
sbb
dec
rcrl
jle
cltd
jg
dec
clc
or
sub
push
ret
and
call
xor
xor
dec
mov
add
xchg
cltd
xor
fs
xchg
sarl
mov
mov
cmp
lock
push
and
nop
mov
dec
imul
pop
cmp
and
les
fstpl
outsb
test
jg
cli
mov
rcr
sbbl
jo
stos
inc
adc
mov
pop
hlt
or
pop
mov
lret
xchg
sarb
cmp
in
std
and
enter
test
jg
fsubr
pop
pop
pop
call
push
mov
sbb
mov
fldl
test
jmp
nop
or
xchg
inc
mov
or
into
sbb
jb
ret
push
jne
subb
add
fstl
stos
shrb
sub
nop
add
dec
mov
sub
shrl
sub
iret
movsb
cmp
insl
and
adc
lods
sub
and
inc
popl
and
cmp
sbb
je
sar
inc
mov
dec
loopne
out
xchg
ss
addr16
hlt
sbb
dec
add
mov
mov
push
sbb
sub
pop
sub
xchg
and
sbb
ljmp
fs
lahf
and
lret
cmpsl
pop
pop
jmp
add
cmpsb
xchg
pop
pop
cmp
mov
loop
int
inc
and
into
enter
xor
rcl
pop
push
insb
sub
leave
mov
mov
roll
lods
pop
inc
imul
mov
repnz
ds
sub
pop
fisttpl
cmp
xor
dec
loopne
lods
test
out
cmpsb
push
jmp
sub
idivb
dec
jecxz
out
nop
test
jns
add
push
mov
cmp
xchg
add
jl
out
jae
sbbb
out
push
mov
cmc
sbb
jnp
out
xchg
xchg
sub
xor
imul
sub
pop
inc
pop
sub
in
dec
bound
push
add
cmp
fwait
imul
dec
scas
cmp
out
xchg
jnp
fmulp
mov
xor
stc
cs
idivl
shll
mov
dec
rol
inc
ficoms
fmuls
inc
pop
movsl
mov
les
adc
xchg
leave
popf
bound
aam
push
xchg
sub
pop
add
sbb
mov
push
pushf
add
adc
jne
cmc
fs
je
inc
faddl
cltd
dec
mov
cs
xor
fs
xchg
mov
cmc
ljmp
pop
xor
cmc
icebp
pop
sbb
xlat
stc
call
jne
loopne
fsts
aaa
iret
in
mov
call
fists
test
xchg
jmp
pop
movsl
cwtl
scas
sar
and
push
fbld
cmp
imul
out
jns
sub
jle
cli
std
mov
ds
cmp
pusha
es
adc
shl
pop
xor
mov
add
sahf
sub
dec
jecxz
jp
jge
bound
call
dec
sti
jb
jle
fdivs
sahf
inc
cmpsl
pop
loop
rorl
push
jmp
iret
sbb
ja
dec
jmp
loop
cltd
in
popa
add
xor
fwait
in
mov
sub
sub
lods
xchg
push
inc
inc
fsubr
ja
or
add
jo
inc
sbbl
jno
pop
out
cs
insb
adc
imul
push
das
and
nop
add
xor
push
clc
mov
stos
mov
movsl
inc
sub
hlt
enter
xchg
or
pop
int
mov
cmpsb
les
icebp
mov
sub
mov
aaa
xchg
inc
and
sub
pop
adc
pop
lock
lcall
out
out
cmpsb
pop
mov
pop
cli
inc
mov
cmp
mov
clc
or
es
sub
push
or
jmp
inc
popa
addl
sub
sbb
jmp
xchg
sbb
sub
and
mov
cmc
jne
xchg
in
stos
call
or
pushf
adc
cmp
mov
xchg
fistl
xchg
sbb
inc
and
loopne
adc
mov
adcb
mov
cwtl
sti
dec
imul
cmp
lahf
cmc
jge
push
adcb
push
mov
stc
addb
ret
pop
sahf
adc
in
lret
bound
bnd
aas
sbb
nop
addl
test
aad
cmp
pop
xchg
lods
inc
or
out
add
sbb
xchg
pop
stc
push
mov
mov
pop
sub
clc
sti
inc
dec
cmp
push
mov
cmp
lods
or
test
push
out
mov
pop
sub
mov
mov
sbb
ja
mov
add
sahf
xor
xor
incb
mov
lret
andl
int3
lret
dec
adc
dec
push
std
fdivrs
inc
sbb
push
in
stos
test
jnp
ror
xor
das
je
xchg
scas
in
les
jae
cli
test
dec
loop
mov
icebp
add
jb
clc
out
xor
push
clc
std
out
add
mov
sub
leave
or
xlat
testl
int
cmp
xor
push
decb
lods
or
outsl
inc
or
in
mov
test
ret
pop
ficoms
fstpl
jge
xor
test
les
lock
popf
fimuls
andb
lds
pop
dec
or
push
popa
sbb
jb
push
adc
cs
cs
sbb
mov
pop
or
cmp
xlat
insl
sub
mov
idivl
loop
jb
lahf
ss
mov
cmp
fdivr
pusha
aam
test
fs
mov
inc
adc
lret
cmp
cmpsb
cmc
insl
push
cs
jp
mov
jnp
scas
aad
xor
push
out
xor
and
dec
xchg
xchg
popa
stos
or
in
pop
pop
aam
add
sbb
xchg
out
xor
mov
or
test
mov
aas
test
movb
dec
imul
cmpsb
mov
sub
jg
cmc
rolb
inc
call
pop
pop
idivb
adc
inc
mov
icebp
mov
xchg
mov
mov
stc
loopne
punpcklwd
in
mov
cli
ss
cwtl
aas
adc
or
test
cmpsl
jecxz
test
es
xor
mov
orb
nop
mov
outsl
fmull
icebp
nopl
cld
push
shl
ljmp
inc
sub
sahf
gs
mov
in
xlat
adc
mov
pop
dec
cmp
mov
loop
sbb
sbb
daa
sahf
sbb
pop
pushf
int3
and
mov
jp
sub
out
lock
subb
sbbl
mov
cmp
aaa
mov
inc
push
jns
ja
inc
or
inc
xchg
mov
mov
ficoml
mov
movsl
sbb
out
lds
xchg
hlt
cmpsb
cmc
jg
ret
in
mov
loopne
mov
mov
das
mov
iret
push
xor
pop
add
fcmovne
roll
mov
loop
jmp
add
dec
in
popf
sbb
dec
out
xchg
mov
lods
push
sub
mov
xor
push
dec
pop
pusha
mov
dec
loopne
mov
cli
movsb
jno
pusha
fcmovnbe
pop
orb
hlt
cmp
push
stos
roll
mov
lock
push
leave
adc
adc
mov
xchg
imul
pop
or
and
lcall
stc
jnp
mov
sbb
movsl
xor
clc
lock
scas
jmp
sahf
js
leave
push
addr16
add
mov
add
aam
jp
sbb
andb
test
cmp
out
insl
xorl
mov
je
rcl
fiadds
loop
and
dec
fistps
movsb
cmp
daa
mov
mov
dec
and
push
jae
pop
movsl
mov
sub
dec
loop
hlt
pop
sub
sub
stos
test
cmp
sub
dec
push
enter
movsl
cmp
and
jmp
cmp
popf
jns
in
mov
and
jge
add
lock
scas
dec
pop
xchg
aam
push
test
add
fstpt
iret
xchg
inc
mov
mov
ja
sub
inc
xchg
adc
dec
mov
ss
cmp
sub
in
aam
dec
push
setp
scas
aad
pop
mov
sarl
pop
pop
push
mov
push
mov
lcall
push
scas
movsl
or
adc
scas
or
and
mov
push
ja
push
cmp
mov
cltd
fildll
mov
xor
mov
mov
mov
dec
repz
cmp
lahf
andl
fldenv
cltd
or
xchg
cwtl
jnp
aaa
push
in
out
add
sub
or
out
ljmp
ja
mov
shll
cmp
lods
frndint
das
inc
test
shr
mov
inc
mov
or
cs
fisubs
jle
pop
rol
pop
mov
mov
pop
inc
sbb
jmp
lahf
ss
pop
inc
push
inc
push
mov
cmp
sbb
outsb
and
out
cmpsb
or
mov
push
cmp
add
jg
addb
std
imul
lock
cmp
cmpsl
orb
sbb
cmpsb
adc
xchg
lret
adc
dec
pop
in
sbb
icebp
mov
dec
divps
scas
sbb
adc
sub
sbb
push
aaa
jp
lidtl
dec
jnp
out
popf
cmpsb
mov
sahf
in
push
inc
xor
mov
adc
push
mov
or
pop
sti
aam
adc
cld
xchg
cmpsl
cmp
sub
jnp,pn
mov
adc
in
xor
pop
mov
push
jb
jo
rcll
ret
cmp
int3
dec
mov
in
jbe
inc
movsl
and
je
push
pop
pop
pop
dec
sbb
out
outsl
cmp
push
or
adc
inc
pop
scas
mov
push
jecxz
leave
dec
dec
adc
lock
push
jne
jmp
mov
add
pop
das
insb
mov
out
shlb
lret
add
xor
cmp
xchg
jno
xor
cmp
push
cli
andl
dec
insb
sbb
ss
clc
cli
push
jl
xor
xlat
outsb
or
sub
inc
sbb
sbb
bound
test
xchg
je
mov
xchg
test
fnstenv
fldt
rol
add
lret
xor
add
enter
es
mov
lods
mov
call
fcmove
ficoms
cmp
arpl
popa
push
bswap
ja
jge
inc
test
inc
inc
pop
adc
push
jl
pusha
das
mov
cmc
sbb
sub
aad
sbb
or
jmp
jl
dec
sti
outsl
sub
loope
push
roll
fidivrs
jecxz
dec
lods
in
or
test
inc
xor
push
push
inc
push
adc
cld
sbb
subl
packsswb
loop
inc
fwait
rcll
femms
aam
pop
cmpsb
popf
sub
lret
mulb
push
imul
repz
and
jne
or
in
mov
scas
lods
lock
pushl
lods
or
inc
and
shrb
push
lds
aaa
push
ret
dec
repz
es
std
cmp
jbe
mov
mov
fcomps
inc
dec
loop
xchg
mov
or
pop
add
es
or
iret
jae
js
dec
cwtl
nop
inc
in
arpl
test
push
mov
je
pop
cmp
pop
pop
sbb
jns
xor
mov
jb
stos
jb
fmull
adc
pop
test
iret
out
sahf
adc
cmp
mov
cmp
cwtl
mov
inc
mov
int
gs
insb
aaa
pop
push
test
push
insl
jle
cmpsl
test
inc
and
lea
xchg
push
jmp
xor
pop
aaa
adc
mov
add
jbe
sbb
adcl
mov
fbld
and
adc
fidivrs
xchg
xchg
fsts
loope
cmp
loopne
lret
cmpsl
ds
xchg
rorl
xchg
mov
into
and
add
out
lock
adc
push
pop
or
int3
loopne
dec
dec
in
sbb
mov
or
adc
sbb
cmp
pop
xchg
insl
stos
outsb
adc
xor
add
test
lods
in
dec
rcrl
push
js
mov
and
mov
dec
or
insl
pusha
cmp
push
test
cld
outsl
out
dec
aam
std
out
mov
fxtract
inc
mov
adc
and
dec
push
cwtl
and
and
push
push
jno
sub
sub
xor
dec
adc
shll
leave
add
enter
pop
mul
imul
fsubrl
popa
mov
xchg
mov
mov
cmpsb
mov
push
and
lods
mov
enter
jne
mov
cmp
lock
jp
adc
in
lret
push
imul
jle
aas
sbb
faddl
and
push
xor
lret
ss
sbb
xchg
pop
rep
stos
cmp
cli
cmc
sti
push
mov
cwtl
fmull
push
pop
dec
and
lahf
and
push
cmc
xchg
jge
loopne
in
jnp
mov
lock
pop
push
add
jne
imull
fwait
arpl
and
pop
stos
sub
sbb
cli
adc
cli
into
lahf
stos
ret
jecxz
sbb
enter
and
mov
imul
test
loope
adc
dec
orl
xchg
dec
sbb
sbbb
push
imul
sbb
mov
or
push
repz
dec
push
jge
imul
test
movsb
cwtl
test
xchg
jmp
stos
je
or
adc
test
mov
xchg
sbb
rcll
in
xor
inc
scas
aaa
xor
add
cs
mov
gs
cmpb
cmp
push
xchg
xor
andb
inc
sbb
sbb
dec
fdivrl
push
or
fsubl
sub
jno
movsb
loopne
xchg
adc
xchg
mov
repz
bound
xor
js
mulb
mov
push
mov
inc
push
inc
pop
mov
ret
repz
push
adc
movhps
test
sub
sub
dec
dec
sarb
jae
push
cmc
adc
pop
out
loop
mov
test
xor
aas
or
call
pop
movsl
push
cmp
cmpb
incl
movsb
push
out
mov
stc
add
shlb
rcrb
or
mov
pop
xor
jmp
mov
mov
xchg
add
sahf
jo
lds
mov
xchg
testl
movsl
clc
cwtl
cs
add
or
dec
xor
adc
xchg
hlt
mull
loopne
outsl
jnp
dec
push
cmpsb
clc
jb
xor
arpl
inc
cwtl
cmp
mov
xchg
mov
fs
aas
sub
fists
push
dec
mov
loop
imul
pusha
inc
imul
cmp
dec
icebp
bound
pop
pushf
cmpl
popf
flds
enter
into
scas
push
mov
aas
sbb
outsl
int
xchg
cmp
jns
lret
bound
push
lds
sbb
ds
sub
aad
loopne
inc
imulb
ret
das
push
or
test
fwait
xor
gs
mov
or
jbe
ds
or
add
dec
inc
lret
lods
mov
mov
push
or
mov
pop
es
mov
es
repnz
cmpsl
aas
cmp
adc
mov
nop
rcrl
loop
and
lea
or
nop
loop
mov
sbb
test
outsl
push
rorb
cmc
inc
out
dec
fsubr
mov
loopne
jecxz
sbb
out
pop
and
pop
es
add
xchg
add
jnp
aas
mov
adc
pop
mov
outsb
loope
mov
pop
fisubrl
xchg
sarl
xchg
inc
lods
xor
xchg
xchg
inc
sbb
xchg
jecxz
sahf
add
mov
mov
sub
jmp
test
jmp
push
mov
sbb
inc
rcr
fs
push
inc
cwtl
repz
aam
jge
fmull
push
call
mov
aaa
jle
je
mov
xchg
jns
sub
mov
lods
mov
lea
adc
loope
and
nop
daa
stos
mov
jbe
int3
scas
xchg
sub
sub
imul
xchg
stos
imul
iret
jecxz
pushf
out
lods
jne
cmpsb
test
add
and
jb
jno
jmp
and
or
ret
xchg
pop
jl
call
shlb
addr16
popa
xor
idivl
hlt
mov
dec
test
imul
push
movsb
mov
dec
jecxz
xchg
repz
jnp
mov
mov
sbb
es
mov
ds
cmp
cmp
je
das
cmp
lret
outsb
jb
pop
call
push
call
mov
ret
lret
pushf
push
cld
mov
mov
xor
arpl
in
or
pop
clc
out
mov
push
push
subb
mov
sub
cmpsl
call
test
pop
and
mov
add
stos
les
sti
shlb
adc
in
add
lods
idivl
xchg
ret
push
xor
dec
mov
outsb
push
loop
cwtl
das
subl
mov
dec
ljmp
cld
fwait
inc
cmp
jno
cli
test
imul
push
mov
jno
dec
pop
negl
mov
addb
mov
sub
and
shlb
je
jmp
rclb
mov
pop
sti
and
push
lcall
pop
ficoms
jno
stc
cmpsl
sbb
add
test
fwait
xchg
pushf
xor
fs
add
pop
out
and
jl
xchg
mov
xor
lcall
icebp
cmpsl
out
cmp
aad
mov
fsubl
push
lods
xchg
inc
sti
push
int3
xor
rol
fmul
xchg
add
testb
and
iret
movsb
sti
xor
push
push
inc
ret
dec
aas
dec
popa
pop
inc
push
sar
outsb
andb
stc
pop
lods
test
and
push
sub
dec
repnz
inc
pop
jmp
and
mov
or
xor
js
sbb
in
jno
jecxz
xchg
jae
stc
loope
aaa
cmp
ljmp
outsl
leave
pushf
aam
cmp
cli
cs
shrb
and
or
daa
mov
pop
mov
inc
and
mov
mov
and
lods
idivl
add
ret
cmpsb
push
pushf
das
jp
jecxz
adc
sahf
js
inc
fiaddl
jne
scas
mov
cmp
inc
inc
ljmp
fisubs
mov
inc
fldenv
outsl
int
lods
mov
and
inc
mov
mov
xlat
dec
aam
cmp
pushf
cmpsl
sti
mov
cmp
xchg
imul
pushf
mov
insb
lods
mov
jecxz
ja
inc
mov
lock
sub
xchg
push
aam
inc
jmp
fwait
pop
ds
adc
decb
adc
xchg
sub
push
loopne
mov
repnz
xor
xlat
mov
test
xor
push
jecxz
rcll
jns
mov
fdivrl
or
int
stc
je
das
jmp
mov
scas
jb
pop
lret
pop
fimuls
popf
sbb
iret
push
rcll
xor
and
push
sbb
cmp
hlt
in
mov
jmp
jg
dec
lcall
sbb
push
out
dec
sbb
es
dec
insl
sbb
jns
cmp
into
inc
test
movsb
mov
and
in
aas
cmc
mov
negw
mov
mov
mov
decl
push
stos
pop
xchg
and
fldl
js
mov
push
cmp
xchg
dec
mov
mov
or
enterw
cmc
lds
push
jecxz
inc
divl
add
cmpsb
outsb
out
push
ret
sbb
bound
int3
push
dec
out
outsb
jl
cmp
cmp
xchg
and
or
scas
mov
ljmp
sti
insl
and
negb
lcall
inc
mov
or
js
ftst
gs
inc
sbb
jge
adc
lahf
sbbb
roll
loopne
fmul
xor
jge
mov
pusha
out
popf
mov
shl
pop
push
cs
pushf
cmp
jle
xor
scas
fisubs
pop
cld
ss
mov
test
inc
fs
push
and
and
dec
dec
xor
bsf
cmp
push
fs
aam
dec
loopne
popf
imull
stos
push
scas
icebp
adc
inc
inc
adc
pop
jns
cli
push
or
arpl
addr16
pop
dec
mov
lahf
ss
aad
sub
repz
sahf
aaa
adc
or
xchg
xor
jmp
sub
inc
dec
jp
jg
cmpsb
shr
pop
loopne
movsb
dec
cmp
xchg
dec
dec
sbb
cmp
pop
pusha
les
sub
xchg
out
cs
imul
xor
lods
mov
jno
sbb
ret
sahf
ret
rcll
cmp
jecxz
cmpsb
add
cld
ds
xor
pop
sbb
stos
adc
hlt
shlb
fsubl
imul
out
xlat
jl
shll
fucomip
out
pop
call
aaa
shr
scas
fisttps
xchg
sub
xchg
and
and
sti
xchg
jmp
pop
popf
and
sbb
jg
mov
mov
int3
dec
movsl
es
cli
test
mov
mov
aad
and
or
mov
jnp
pop
lds
mov
in
xchg
lock
cwtl
out
lret
pop
and
mov
scas
jp
push
lock
jge
cmc
gs
pop
xchg
test
sbb
repnz
pushl
xchg
jle
pushf
loop
or
add
push
add
inc
inc
pop
cmp
int3
shlb
sub
mov
cmp
inc
std
cmpsb
fs
mov
pop
lds
jo
dec
stos
hlt
cmp
cltd
in
jmp
push
cmp
jo
cs
sti
xchg
imul
lret
inc
mov
gs
mov
add
das
addr16
in
mov
mov
sbb
cld
sub
xlat
mov
test
mov
sahf
mov
mov
in
adc
stos
xchg
xchg
mov
into
pop
adc
int
mov
cmpsl
fsubl
sbb
xor
jb
adc
mov
mov
mov
push
push
js
stc
push
lods
mov
add
inc
mov
inc
arpl
mov
mov
popa
inc
loopne
xor
shl
in
sbb
cltd
ljmp
cld
mov
pop
stos
and
mov
ss
outsb
jo
and
lcall
jae
pop
adcb
xchg
and
in
jo
test
and
xor
add
mov
sub
out
lcall
xor
sub
sub
test
sub
sbb
mov
mov
mov
call
xchg
movsb
sahf
and
lock
pop
mov
adc
outsb
pop
cs
and
pop
pop
insb
jg
mov
jl
xchg
xchg
int3
and
iret
out
mov
gs
mov
enter
sti
sbb
dec
inc
add
mov
inc
push
daa
push
or
movsl
vminps
adc
cmp
and
mov
push
les
jle
cwtl
test
add
xchg
nop
lcall
mov
aas
sub
fld
adc
add
or
push
ljmp
mov
push
fs
cmpsb
cld
outsb
ffreep
pop
sub
lea
and
loopne
sbbl
cs
mov
push
inc
sbb
mov
mov
cld
lock
push
int3
add
jno
leave
movsb
imull
das
adc
jp
sub
dec
push
xchg
iret
xchg
xchg
push
push
push
inc
jl
push
fcoms
scas
add
xchg
push
mov
push
mov
outsb
inc
dec
push
movsl
frstor
push
jnp
dec
push
sub
test
std
adc
outsb
popf
loopne
int3
cmpsl
fwait
repnz
bound
inc
dec
dec
movsl
jecxz
ljmp
lea
test
inc
xchg
sbb
cli
and
into
sub
inc
xchg
dec
fs
jo
call
ljmp
inc
push
mov
sbb
fsubrs
sub
cld
pop
test
dec
std
xchg
pop
daa
sub
jo
push
sti
les
imul
push
jmp
bound
iret
mov
cmp
addr16
and
mov
xlat
jbe
or
imul
sub
xchg
xor
mov
insl
xchg
fst
hlt
push
sti
imul
jg
lds
mov
dec
rorl
dec
mov
mov
jg
mov
rorb
lods
fstpl
push
dec
stos
mov
inc
adcb
xchg
cmp
jo
pop
xchg
dec
movsl
sbb
ret
jp
loop
push
mov
aad
sub
add
sti
xchg
lock
aas
lds
mov
aad
xchg
cmp
in
aas
push
sub
pop
jbe
jo
shrl
push
mov
lahf
sbb
shll
es
cmpsb
lahf
fsubrl
inc
andb
outsb
jno
scas
dec
xor
out
cmp
mov
aaa
push
and
push
mov
movsl
vpunpcklqdq
xchg
pop
and
adc
pushf
ja
std
int3
add
sahf
clc
imul
popf
sub
fs
pop
inc
pop
mov
mov
xchg
es
jge
jle
shll
aam
or
ja
jbe
xchg
rclb
rcr
push
hlt
mov
jnp
and
pop
jmp
notl
jo
xchg
stos
out
pop
ja
arpl
stos
int
xsha256
cmpsb
xchg
stc
or
push
pop
jle
jge
sbb
xchg
pop
mov
mov
outsl
call
inc
xor
sub
dec
lds
test
and
jmp
or
sti
xor
mov
fwait
cmpb
pop
xor
inc
es
cmp
arpl
mov
test
fistpll
pop
fst
mov
lcall
shr
aas
cld
and
push
icebp
call
ja
dec
sub
out
sbb
in
pop
negb
sarl
dec
scas
jo
insb
mov
popf
pop
add
sbb
xchg
jge
std
loop
pop
push
sti
rcl
fimuls
xchg
inc
pop
dec
sub
cmp
mov
mov
sahf
ret
lods
cmp
sbb
jne
addr16
mov
add
push
loopne
xchg
inc
mov
insb
ljmp
lret
jbe
ljmp
xchg
or
push
test
and
fucomi
inc
add
sbb
push
xchg
daa
inc
andb
pop
gs
mov
dec
gs
push
shrl
inc
ret
pop
or
aaa
mov
ret
repz
repnz
adc
lock
insl
jns
lcall
mov
icebp
inc
adcb
xchg
imul
lock
sti
lods
mov
jne
jecxz
jge
pop
add
scas
jne
push
pushf
popf
dec
fs
sbb
test
push
dec
pop
int3
push
out
bound
std
jo
jae
mov
inc
jl
dec
out
ffree
sbb
sub
add
or
test
push
push
sub
enter
dec
shl
jae
sub
js
test
mov
push
and
pop
inc
call
in
cmpsl
sbb
pushf
pusha
cli
stos
dec
xchg
inc
jne
mov
sub
ds
jnp
inc
movsl
stos
add
mov
aad
dec
ret
and
bound
cli
add
and
je
pop
sbb
push
push
push
dec
addr16
loop
inc
ficoms
scas
lret
ja
ret
lods
mov
stos
testb
je
mov
icebp
inc
sub
xchg
push
stos
les
push
mov
mov
fmuls
test
clc
mov
in
jo
dec
loop
inc
dec
pavgb
imul
dec
sub
test
out
repz
std
dec
std
enter
add
xchg
mov
inc
fwait
add
lret
outsl
loopne
xchg
cmp
mov
mov
fidivl
xchg
mov
xor
pushw
fimull
adc
mov
repnz
jle
imul
aam
jns
test
int
pusha
xlat
jle
cmp
shll
lret
mov
jg
xor
mov
push
call
jo
xor
stos
xchg
sbb
pop
push
mov
cwtl
cmp
pop
sub
push
add
jnp
in
cltd
add
flds
and
test
js
pop
stos
add
inc
xchg
mov
jno
sub
out
aad
pop
mov
push
dec
subl
push
repnz
je
cmp
in
clc
xchg
cli
cwtl
cmp
mov
mov
mov
int3
push
insl
add
shrb
insw
push
xchg
stos
pop
mov
jbe
insl
iret
xchg
gs
int3
hlt
mov
mov
xchg
xor
and
sub
adc
push
and
rcrb
jo
arpl
stos
ss
jmp
bound
cli
out
mov
lock
ja
icebp
jae
xorl
mov
std
sbb
call
inc
jns
or
fidivrl
cmc
push
iret
or
popf
jg
adc
jle
mov
jmp
gs
stc
or
sbb
mov
xchg
sbb
test
out
ja
pop
clc
jg
jge
inc
mov
add
or
mov
mov
mov
inc
scas
icebp
hlt
repz
cmp
lods
ljmp
pushf
add
xor
cld
and
cmp
and
jno
ja
push
sub
loopne
jg
out
addr16
push
mov
lea
or
xor
dec
iret
and
jge
bound
xchg
sbb
out
out
aam
aaa
xlat
mov
stos
imul
mov
cld
les
mov
roll
push
jecxz
ljmp
loope
push
dec
push
mov
rolb
jmp
stc
lret
pop
cmovns
cmp
scas
mov
aad
inc
idiv
pop
sub
ret
jecxz
jo
inc
ljmp
ret
mov
idiv
dec
fidivrl
lahf
fdivs
pop
jo
cmpsb
lods
fdivp
ffree
sahf
jmp
jge
popf
call
andl
lret
popf
ljmp
push
loopne
andl
lret
cmpsl
cmovb
js
push
cmpsb
lock
push
movsl
fstps
es
sub
cwtl
add
sar
xchg
ret
es
sbb
out
neg
adc
test
jae
mov
mov
outsl
stos
pop
fstl
sub
xor
call
xchg
loop
jns
mov
into
add
and
iret
jo
cmpsl
out
stos
mov
dec
and
call
or
lock
repz
and
cmp
sub
adc
sub
loop
aam
pop
ja
pop
push
mov
mov
mov
add
in
cmp
fbld
daa
xchg
add
xor
mov
imul
ret
xchg
mov
mov
popa
clc
jmp
and
outsb
scas
ds
popl
nop
mov
ljmp
mov
lret
outsb
ja
pop
jg
add
mov
jmp
fildl
push
xorb
fidivs
push
insb
add
cwtl
sbbl
clc
fnsave
push
out
push
cld
lcall
aaa
into
cmp
lds
mov
jp
clc
pop
cmc
sub
add
sub
shrl
dec
and
dec
nop
fdivl
jne
out
xchg
sbb
repnz
popf
fwait
movsb
pushf
xor
mov
mov
cmpsb
cmp
fsubrs
lock
fildl
loop
decb
das
xchg
jno
fsubrs
ret
clc
stos
popa
mov
gs
in
sbbl
xor
into
xchg
inc
dec
loope
orl
xchg
push
add
in
mov
insl
push
insl
add
mov
stos
mov
fabs
js
shrl
and
ja
adc
xchg
test
ficomps
and
stos
inc
hlt
mov
scas
mov
outsl
into
mov
ret
clc
mov
push
out
aas
inc
push
out
jae
jne
xchg
xchg
jne
ret
sub
repnz
inc
insl
add
inc
icebp
mov
mov
leave
sahf
push
call
sub
xchg
mov
movsb
loope
lods
inc
leave
adc
pop
inc
pop
and
xchg
lods
inc
fcomp
mov
imul
cmp
mov
jno
add
shl
adc
and
jne
sub
jne
dec
in
xchg
inc
faddp
in
or
jmp
jle
imul
dec
loop
jecxz
lret
sbb
iret
or
jnp
das
imul
mov
fucomp
jg
rcr
je
sub
pusha
and
mov
js
fsubl
or
xchg
sub
sub
mov
sbb
orl
sub
lcall
push
ljmp
mov
outsl
and
mov
stos
inc
fisttpll
mov
cmp
lea
pop
lcall
lods
stos
inc
enter
rcrl
and
jb
mov
lret
mov
in
xor
in
out
cmp
insl
add
mov
gs
mov
pusha
or
push
sbb
mov
scas
mov
loopne
int
imul
and
mov
hlt
lret
xchg
cli
cs
pop
and
hlt
pop
ss
ret
repz
sub
icebp
in
ret
repz
insb
sub
sbbb
inc
out
mov
repz
and
fcmovb
lret
hlt
inc
pushf
xor
add
fadd
xor
hlt
dec
cld
xchg
jge
and
adc
rol
cmc
dec
es
pop
cmpsb
cwtl
das
xlat
mov
jg
imul
movsl
xchg
sub
stc
inc
mov
push
push
movsl
cwtl
das
fmul
mov
add
imul
je
loope
pop
icebp
or
push
popf
push
mov
addr16
aas
pop
cmp
mov
dec
scas
sub
pop
inc
xchg
dec
cmpsb
enter
daa
mov
sbbb
cmp
iret
fadds
mov
dec
out
xchg
rclb
imul
mov
test
inc
xchg
out
enter
addps
push
inc
xchg
cs
xor
push
pop
xchg
sub
xchg
dec
in
fistpl
or
pop
mov
arpl
inc
xchg
loop
leave
mov
lea
mov
inc
xchg
cld
xchg
enter
adc
or
fs
lret
fidivl
into
or
mov
ret
xchg
sbbb
fistl
lods
or
lds
cwtl
loopne
int
inc
fcoms
push
xchg
sub
lahf
clc
into
in
mov
push
pop
mov
adc
ret
in
xor
and
mov
clc
cmpsl
ds
sti
sbbl
xchg
pop
sahf
cs
ds
cli
jae
sub
aad
std
loope
xor
iret
sbb
leave
mov
ljmp
in
call
mov
and
hlt
cld
xchg
sub
cmp
imul
or
in
jp
cmp
push
enter
es
or
cmp
imul
scas
inc
lock
hlt
es
lods
push
and
push
les
mov
push
xor
inc
adc
lcall
jno
cld
mov
stos
loop
mov
dec
or
mov
cwtl
pusha
inc
pop
xchg
mov
in
in
xchg
test
aaa
pop
xor
mov
pop
mov
out
test
cld
js
sub
xchg
sub
sbb
test
stos
xchg
out
xchg
repz
sub
jg
sub
mov
push
sbbb
xlat
ljmp
and
mov
jge
push
mov
cltd
jge
iret
in
addr16
ja
sbb
xor
insl
inc
xlat
outsb
jbe
adc
mov
fmull
jo
xor
cmp
mov
cmpb
mov
cmp
outsl
add
inc
ficoml
and
push
push
xor
fidivl
mov
lret
dec
loope
fdivp
mov
add
pop
ja
add
jl
push
stos
jae
divl
out
sub
rcrb
aas
hlt
jg
fsubrl
es
js
out
lods
sub
jnp
cld
jl
xlat
lods
sbb
sub
xchg
and
stc
in
and
cmp
pop
dec
loopne
sbb
mov
frstor
sti
xchg
clc
jg
cs
mov
adc
xor
push
stos
icebp
push
ljmp
jb
jne
or
push
xchg
jb
ret
pop
outsl
sbb
pop
outsl
idivl
repz
daa
mov
sarb
sbb
pop
jb
push
pop
xchg
dec
filds
sbbl
outsl
shl
mov
lret
cld
dec
insl
jnp
cmc
mov
ret
and
xchg
out
push
mov
out
push
imul
pushf
cmp
stos
mov
xchg
stos
or
xor
pop
dec
loope
jge
jns
dec
mov
cmpsl
std
fwait
inc
fmul
push
das
dec
loope
es
bound
push
imul
mov
sbbb
fnstsw
or
cmp
mov
out
lahf
ss
xchg
sub
pop
and
ss
mov
leave
pusha
add
fnstenv
push
stos
inc
dec
dec
testl
aam
cwtl
das
icebp
repz
jl
pop
sahf
lahf
pushf
sbb
mov
xlat
or
lahf
mov
fimull
adc
inc
fidivl
ret
and
jmp
out
inc
push
bound
sbb
jge
jmp
stos
sahf
clc
xor
add
lcall
ljmp
and
in
xchg
out
xor
xlat
les
jp
sbb
iret
add
fdivs
out
pop
out
xor
sti
pop
xchg
jg
out
lcall
jbe
adc
std
das
fstpl
inc
mov
ret
jmp
sub
push
xchg
and
jecxz
dec
pop
pop
loopne
inc
fsubl
push
out
mov
mov
sbb
xor
daa
loope
cwtl
sub
mov
jmp
add
je
mov
sbb
adc
push
fldl
mov
scas
push
jnp
loop
popl
push
push
enter
cmpsb
imul
xchg
mov
leave
lods
out
or
loop
mov
sub
fidivs
stc
xchg
fsubrs
sbb
mov
pop
mov
sbb
cld
cmpsl
lret
mov
subl
sub
mov
out
notl
mov
addl
mov
ret
data16
xchg
in
jle
adc
pop
mov
clc
cli
ss
or
push
cwtl
or
insb
mov
pop
popf
test
add
xor
dec
outsl
push
xchg
lea
rcrl
push
cmp
mov
add
sbb
lcall
xchg
xchg
lidtl
nop
leave
cmp
out
jmp
testb
cld
fstps
lock
frstor
fdivrl
or
push
adc
adc
add
fs
push
add
jg
stc
aas
out
xor
add
daa
jl
hlt
cmp
mov
scas
pop
jnp
pusha
cwtl
daa
xor
adc
xchg
xchg
ss
inc
mov
inc
push
pop
mov
mov
inc
mov
cli
in
lret
pop
cmp
push
pop
loope
fs
les
push
sarb
pop
sub
xchg
nop
and
xor
in
mov
pop
adc
push
js
cwtd
mov
test
add
sub
pop
loop
aam
jle
xor
sub
in
in
pop
test
add
xchg
jmp
xor
jns
and
sub
jp
jo
xchg
and
jo
xor
sub
nop
sub
cmc
sub
push
ficoml
loop
push
adc
mov
icebp
jg
mov
cmp
jb
push
or
xlat
testb
imulb
in
push
pop
int
js
xchg
mov
sbb
movsb
push
mov
movsl
cmp
out
fisttpll
fbld
rclb
add
and
icebp
in
ss
insl
lahf
mov
arpl
vaddsd
fld1
icebp
das
int3
mov
loopne
into
lahf
or
or
lea
cmp
outsl
mov
imul
popf
fistpl
mov
cmp
aam
addl
data16
or
mov
pop
sub
repnz
cmpsb
fisttpl
jecxz
outsb
sbb
dec
lcall
aaa
lret
or
loop
or
stos
bound
add
leave
fs
shl
and
dec
mov
jno
hlt
mov
inc
popf
popl
movsb
outsb
xchg
inc
push
addr16
xchg
sub
inc
push
xor
jne
jmp
pop
sahf
mov
and
cmp
jbe
jno
add
mov
xor
push
lret
mov
cwtl
fdivs
or
sub
lds
into
mov
dec
push
int
or
div
xchg
imul
xchg
xlat
imul
push
jp
mov
xchg
in
and
das
mov
shrb
jno
hlt
push
lret
loopne
push
adc
jecxz
popf
xor
jp
hlt
cmp
push
ljmp
push
packssdw
sub
cli
pop
add
dec
sbb
pop
movsl
sub
or
in
imul
mov
imul
lret
jle
jae
mov
movsb
pop
xor
xor
mov
xor
mov
idivl
repz
xlat
push
int
cmpsb
cmp
pop
movsl
mov
pop
int
mov
sub
sub
jg
lar
pop
call
insb
sub
idivb
lods
inc
gs
jge
and
mov
jp
dec
out
fwait
add
and
push
std
dec
inc
adc
push
pop
xor
lods
insl
imul
or
stos
push
sub
std
jmp
test
stc
xchg
jno
jl
test
cs
or
cltd
out
and
or
add
lahf
inc
notl
adc
out
lods
pusha
ret
in
or
dec
adc
fwait
pop
les
or
das
popf
cmp
aam
lahf
jmp
dec
out
stc
sub
ret
jmp
lods
mov
in
shll
cld
push
adc
int3
push
fadds
fdivrl
mov
clc
loope
fimuls
ljmp
pop
scas
xchg
movsl
cli
enter
jg
mov
cld
sub
mov
clc
cmp
lock
stc
mov
add
jle
out
jbe
mov
xor
xlat
outsb
iret
mov
mov
out
dec
fidivrl
or
rcr
push
leave
lret
lea
fisubrs
lahf
nop
mov
push
push
jmp
rolb
insb
dec
rep
lcall
pop
shr
movsl
cmp
or
scas
stos
repnz
idiv
stc
xor
mov
mov
xchg
cmp
stos
pop
shlb
inc
int
imul
lret
fsubs
mov
into
mov
hlt
xor
mov
cmp
jo
addl
fdivs
ljmp
into
adc
inc
int3
dec
imul
add
inc
fcompp
jl
and
xlat
sbb
xlat
cmp
arpl
xchg
mov
adc
mov
fwait
jae
adc
mov
into
inc
sub
movb
push
adc
fstpt
jge
mov
adcl
mov
inc
mov
loop
in
aad
dec
ret
pop
add
ja
shrb
int
and
out
fcoms
sti
xchg
or
xor
sbb
mov
loope
adc
loope
pop
xchg
lret
xlat
icebp
sbb
cld
cld
es
inc
mov
xchg
pop
movsb
inc
mov
or
inc
pop
lret
xor
push
popa
bound
test
adc
dec
imul
test
negl
push
daa
loopne
cmp
lahf
pusha
das
adc
stos
xchg
and
xchg
mov
movl
xchg
cld
xchg
lahf
jmp
lea
cmc
imul
and
pop
xchg
xchg
insl
and
insl
inc
outsb
mov
mov
ret
and
loop
imul
xor
xchg
out
and
cmc
jb
in
hlt
mov
mov
or
scas
test
sbb
and
jbe
jnp
ret
in
lods
call
and
xchg
or
loop
ds
adc
sbb
fistpl
mov
clc
js
ret
into
ret
jecxz
int3
rol
btr
aas
ret
es
or
push
fstl
and
inc
icebp
in
out
fisubrs
pop
cltd
fcompl
or
ficoml
push
pop
add
fstps
out
bnd
out
cmpsb
ret
xlat
dec
fiadds
and
lahf
stos
mov
add
or
lcall
pop
cltd
lock
cmp
mov
add
mov
push
add
dec
or
mov
pushf
scas
inc
sub
inc
in
jns
fistl
mov
fists
mov
sbb
mov
mov
test
pop
jge
xchg
xchg
xchg
sub
fwait
mov
ja
sbb
or
mov
sub
test
push
xchg
icebp
or
ret
or
mov
scas
pop
sbb
lahf
mov
sub
gs
mov
xchg
lock
js
or
or
dec
lods
xor
xchg
stc
lods
pusha
lret
stc
inc
iret
mov
mov
mov
xchg
jmp
or
scas
mov
push
mov
mov
pop
lock
les
jbe
ds
push
sti
daa
in
flds
imul
mov
clc
lcall
xlat
out
sbb
outsb
add
xor
push
shll
cmp
pop
xchg
xchg
jb
dec
sub
mov
addr16
push
cmp
rep
pop
mov
insl
out
cld
push
xorb
in
inc
xchg
xchg
xchg
imul
scas
sbb
mov
lcall
mov
sub
scas
mov
insb
mov
cmc
xor
incl
into
fdivl
iret
sub
jl
repz
nop
jne
or
xor
arpl
hlt
das
and
cmp
rorb
shlb
subl
xchg
fldl
add
shll
cmc
aam
mov
jmp
pop
movsl
repz
repz
fcoms
lret
add
rorl
mov
inc
fisubrs
in
or
jmp
xor
shrl
out
sbb
xor
in
call
repnz
mov
push
aad
cmpb
fadds
rcpps
cmpb
loope
jbe
xchg
xchg
sbb
jp
das
test
pop
gs
dec
rclb
mov
push
dec
mov
and
cmp
add
jns
movsl
test
adc
inc
fistl
xor
mov
or
and
dec
sbb
sbb
adc
das
xchg
js
fisubs
enter
cmp
lods
and
mov
xchg
mov
ss
jae
xchg
jns
pusha
lods
xor
xchg
sub
push
xor
push
mov
cmc
sbb
roll
fdivs
and
push
jnp
mov
bound
xchg
sbb
loope
mov
xchg
ja
pop
fbstp
decb
push
mov
dec
test
or
and
pop
repz
jo
outsb
jae
popa
sub
inc
jbe
cmp
xor
and
inc
mov
aas
or
lret
pop
cmc
cmp
cmp
pop
lahf
test
stos
gs
dec
out
mov
push
xor
inc
jae
jecxz
inc
pop
out
jb
push
or
add
in
add
divl
daa
lods
pop
bound
in
pusha
or
inc
stc
popa
pushf
shll
in
loop
divl
hlt
or
ret
or
mov
shrb
outsb
and
sahf
xchg
inc
xor
pop
stos
dec
test
testl
push
cmp
xor
mov
mulb
jo
xor
ud0
divl
enter
imul
mov
sub
mov
sbb
cmp
mov
lods
outsl
pop
aas
outsb
mov
inc
xchg
xchg
fs
scas
mov
out
push
int
mov
adc
and
jb
xchg
jle
outsl
popf
adc
inc
les
icebp
cmp
out
out
sbb
pop
add
pop
add
sbb
dec
and
shlb
leave
push
in
imul
test
ret
sbb
sbb
sti
testb
add
adc
and
mov
imul
divb
mov
ficoml
cmc
pusha
notl
lods
jae
inc
cmp
push
sub
jmp
or
dec
jns
adc
scas
xchg
jle
xchg
out
sbb
loope
pop
xchg
lahf
ss
aam
imul
daa
sbbl
push
mov
cli
mov
jmp
imul
jbe
mov
loopne
pop
les
repnz
daa
aaa
in
fwait
repz
cmp
adc
pusha
ja
movlps
jb
lcall
pop
lret
pop
rcll
cmp
ja
or
jl
or
mov
shld
pushf
or
jle
out
mov
mov
mov
cmp
xchg
sub
inc
int3
push
pusha
out
push
inc
dec
xor
push
push
scas
bound
sbb
pop
add
gs
push
cld
jg
inc
int
cs
jl
cmp
stos
das
and
in
mov
mov
pop
div
js
mov
mov
aam
xchg
jle
sbb
inc
mov
mov
cli
xor
rcl
cmpsb
fcmovnbe
aaa
fsub
leave
dec
mov
or
push
in
push
and
cmpl
fisttpl
or
repnz
cmc
daa
out
push
movsl
add
clc
pop
mov
pop
repz
jecxz
jns
bound
dec
mov
scas
inc
dec
sbb
jecxz
sbb
lcall
xor
jge
repz
in
sub
dec
or
ljmp
jb
xchg
xlat
pop
mov
test
jnp
shr
or
idivl
ret
lret
inc
aad
test
or
xchg
nop
cmp
es
pop
sahf
imul
adc
xchg
cwtl
ret
out
fdiv
xchg
das
movsb
aad
and
jecxz
flds
pop
push
fnsave
jnp
dec
pop
fbld
jo
leave
aas
dec
and
fidivl
inc
out
pop
inc
mov
lahf
or
adc
nop
jb
es
inc
outsl
insb
cltd
dec
dec
aad
dec
push
arpl
dec
popf
jo
and
push
ss
cmp
push
and
ljmp
sub
loopne
push
or
add
push
xchg
or
push
shrl
test
push
or
cmp
repz
mov
int3
inc
pop
lahf
xchg
inc
mov
fwait
xor
sub
inc
fucom
insb
mov
in
fisttpll
push
fnsave
mov
mull
cli
iret
inc
mov
cli
lods
inc
add
cmp
jne
or
test
rorl
or
scas
repnz
adc
inc
pop
rorl
out
jb
inc
mov
xchg
ljmp
aaa
jmp
loope
and
insl
movsl
lods
jbe
xor
out
adc
lods
repz
popa
test
mov
inc
fidivs
rorl
jae
clc
dec
les
in
and
jle
inc
fnstsw
icebp
adc
and
adc
xchg
pushf
stc
inc
sti
add
xchg
mov
pop
ret
ds
enter
sub
pop
js
sahf
xor
xchg
icebp
cmp
in
sbb
and
std
in
je
push
outsl
shll
out
sahf
mov
mov
aam
std
xlat
aam
dec
int3
enter
in
nop
pop
shl
test
les
sbb
hlt
lock
test
mov
imull
stc
push
mov
or
pusha
ret
pop
je
nop
push
and
and
sti
cmp
xchg
popf
stos
fldl
mov
mov
adc
sbb
cli
jge
sub
loope
adc
into
push
add
call
addr16
xor
push
sub
fwait
mov
xchg
outsb
mulb
ret
jae
xchg
inc
mov
or
test
in
mov
cmc
ja
lret
or
lods
int
fidivs
iret
sub
or
mov
repnz
sbb
orb
popa
int
mov
sub
daa
stc
cmp
hlt
lcall
movsl
add
out
xor
xchg
and
lret
insl
pop
testb
imul
fs
jns
sub
jge
xchg
sub
push
cmc
dec
pushf
jg
fidivrs
jns
int3
dec
dec
mov
fsubl
loop
cmp
xlat
cmc
and
sub
sbb
scas
call
dec
stos
sub
mov
pop
scas
or
out
cmpsb
cmp
stos
mov
pop
mov
lds
out
stos
ret
xor
test
cmp
decb
cs
cld
mov
jg
test
rcrb
mov
fistps
xor
cmp
cmp
or
xor
push
jnp
out
stc
pushf
lea
mov
lcall
dec
int3
inc
imul
aam
pop
mov
arpl
mov
pop
cmp
push
mov
push
and
push
cmp
xchg
ja
adc
inc
fs
xchg
and
inc
pop
push
gs
pop
adc
xor
cmpsl
pop
call
dec
ret
mov
std
xor
sub
jle
leave
insl
adc
push
int
rcr
push
jmp
rclb
adc
les
cltd
dec
mov
push
mov
sbb
sub
fwait
lcall
testl
xchg
and
ss
and
outsb
xchg
gs
es
int3
jnp
dec
in
popf
push
leave
sbb
divl
lahf
xor
and
or
sbb
push
daa
out
and
stc
and
xlat
outsb
push
js
push
imul
cmp
xor
push
cltd
add
pop
je
ret
daa
jp
add
aas
jo
sbb
addr16
xchg
cmp
push
or
nop
pop
icebp
pusha
mov
loop
addb
sbb
dec
scas
cltd
popa
sub
mov
mov
aad
add
and
push
xor
sbb
jb
push
lahf
hlt
xchg
addr16
xchg
test
ret
pop
sub
outsl
mov
push
or
xchg
xchg
mov
sahf
movsl
push
jns
out
mov
adc
dec
mov
stos
mov
fwait
sbb
add
clc
push
sti
in
push
in
daa
ss
mov
pop
sub
inc
pop
test
add
popf
jno
ficoms
push
cmp
mov
cmpb
or
mov
in
inc
mov
jmp
xchg
mov
clc
insl
add
jecxz
enter
aaa
jmp
mov
ss
sti
inc
mov
loopne
xlat
lret
ret
mov
mov
scas
rcrl
cmpb
cld
sub
xchg
lea
call
std
sub
jae
mov
add
fdivrl
into
cmp
dec
aad
subb
push
shll
fsubs
sbb
pop
xor
in
inc
ret
push
dec
pop
cmpsl
mov
xchg
push
cwtl
cmpsb
pop
sbb
insl
add
test
leave
or
cs
das
xchg
cmpb
cmp
cmpl
or
mov
sbb
sbb
out
push
icebp
insl
out
xchg
jecxz
and
push
mov
jecxz
cmpl
cld
ljmp
xchg
imul
int3
mov
inc
sub
jno
pop
ss
cmpsb
mov
jp
hlt
adc
ret
imul
sbb
sub
lcall
clc
mov
cli
mov
lahf
sub
imul
jnp
push
in
pop
aas
ss
cmpsl
jnp
aas
cmp
and
loope
loope
xor
xor
sarl
arpl
hlt
mov
sar
ja
xchg
frstor
sahf
mov
out
pop
shlb
jp
les
mov
push
leave
jle
ficomps
pop
shrb
dec
dec
jecxz
call
jo
adc
add
les
mov
fidivl
dec
lcall
and
ja
mov
arpl
mov
xor
test
sub
je
pusha
movsl
jb
das
icebp
xchg
daa
inc
lahf
popl
sbb
mov
add
cmp
sub
gs
pop
stc
nop
mov
dec
data16
lods
mov
jecxz
adc
push
xchg
push
xor
push
sbb
lea
lds
jne
pop
leave
pop
push
lret
adcl
divb
lods
inc
arpl
repnz
fwait
out
xor
test
fsincos
dec
out
dec
fistl
daa
lcall
pop
in
xor
mov
out
pop
adc
stc
out
sub
xor
and
cmp
mov
out
subb
cld
sub
lea
popa
sub
clc
xor
outsl
lods
imul
xor
mov
call
subl
addr16
gs
xchg
sub
push
lcall
pop
repnz
push
daa
fnstcw
sub
adc
int
xor
iret
daa
mov
lods
and
dec
in
xchg
sarl
mov
fistl
not
cmp
inc
mov
inc
mov
sti
test
test
dec
mov
pop
fidivs
fiadds
jbe
inc
inc
enter
fimull
shrl
inc
stos
je
mov
mov
mov
inc
mov
or
push
adcb
sub
dec
bnd
push
dec
adc
pop
push
sbb
jge
jbe
dec
dec
popf
mov
es
test
imul
pop
cwtl
sub
dec
inc
and
loop
inc
or
les
in
sub
mov
fisttpll
cmpsl
test
dec
shll
fcomps
loope
fsts
cmpsb
inc
mov
insb
mov
mov
add
sbbb
adc
fwait
ljmp
jg
dec
dec
sub
cmp
cli
inc
int3
inc
pop
popl
xchg
adc
inc
mov
in
cltd
xor
mov
dec
call
or
insl
cmp
hlt
mov
mov
test
addb
enter
sbb
push
dec
out
hlt
mov
add
inc
rclb
mov
sub
fidivs
dec
test
xchg
and
sbb
es
cmp
lds
lcall
and
push
aas
sbb
ds
hlt
outsl
fbstp
adc
xor
gs
xor
xchg
cmpl
or
mov
fdivp
mov
jle
shlb
test
mov
sbbb
dec
in
jbe
aaa
test
imul
leave
mov
and
into
cmpsl
add
xchg
mov
ret
sbb
cmpsb
adc
add
cwtl
sbb
mov
mov
ds
or
sub
mov
mov
xchg
adc
iret
data16
cltd
xor
test
xchg
pop
sahf
cld
or
sub
dec
xor
inc
pop
movsl
cmp
cmpl
jb
pop
movsb
xchg
sub
fdivl
sub
loope
mov
jns
jg
testl
push
push
out
sbb
jl
mov
mov
mov
sbb
jo
push
adc
lahf
rcrb
enter
ficomps
xor
cmpsb
gs
jo
lods
jmp
loope
js
std
add
push
mov
push
push
adc
mov
and
mov
sub
call
xor
outsl
push
add
and
mov
inc
jecxz
lods
adcl
or
cs
js
js
add
sbbb
ffree
fdivp
or
call
and
fistl
stc
cmp
int3
arpl
mov
and
xchg
enter
jle
push
mov
xor
jl
sahf
imul
xor
xor
or
aam
in
xor
xchg
loope
enter
sbb
stos
mov
ja
sar
insb
pop
scas
push
jg
fidivs
addr16
sub
fnsave
pop
call
fstpt
mov
pushf
movsb
inc
gs
mov
mov
out
mov
ja
inc
xchg
push
lcall
xchg
icebp
jo
lret
lock
je
xor
dec
mov
mov
push
mov
xchg
cmpsl
xchg
mov
mov
inc
scas
pop
inc
test
ficompl
call
pop
sarb
subb
nop
mov
insb
ss
or
sti
fists
sub
mov
cmp
out
insb
imull
cld
ds
adc
nop
jbe
sub
aad
into
test
shlb
jbe
outsb
call
imul
insb
stos
xchg
ficoms
sub
adc
rorl
xchg
insl
lods
test
pop
sbb
sub
ljmp
ds
jnp
fsubl
jbe
dec
mov
xchg
stc
loop
jnp
pop
mov
inc
cltd
adcb
pop
daa
shl
dec
mov
adc
mov
mov
dec
mov
cmp
jnp
mov
xorl
sti
dec
into
lret
xchg
and
pop
or
mov
cmp
and
pop
scas
jnp
out
cmp
int
sbb
push
adc
mov
test
xchg
cli
pop
addr16
sbb
adc
sub
dec
xchg
lods
xchg
push
cli
ror
loop
adc
test
movsb
call
cltd
je
pop
pop
mov
sub
cli
adcb
lods
add
sarl
push
mov
xlat
inc
shlb
das
dec
lock
jnp
mov
and
stos
lahf
add
inc
dec
fbld
test
mov
mov
les
jmp
push
adc
sbb
mov
inc
and
mov
sbb
ss
mov
mov
dec
cltd
xor
pop
cmc
stos
int
jle
pop
xor
dec
push
movsl
cmp
cs
lret
in
int3
arpl
xchg
jno
or
mov
test
xlat
sbb
mov
shrb
imul
lods
loopne
pop
out
cld
xlat
mov
mov
int3
dec
out
jge
cmpsl
outsb
loope
clc
shlb
add
sar
imul
sbb
pop
es
inc
jl
pop
outsb
fsubrl
ror
push
popf
gs
inc
ficomps
xchg
mov
fldcw
lods
jbe
repz
jo
dec
out
pop
sub
cmp
fbstp
sahf
inc
xlat
iret
dec
mov
pushf
adc
int
cs
pop
adc
ret
adc
mov
sar
fstpl
xlat
push
adcb
mov
inc
adc
fcomp
cmpsl
push
js
ja
cmp
repz
rolb
and
jb
jb
and
js
add
lock
xor
and
cmpsl
inc
mov
or
nop
cmp
mov
push
into
sub
cmp
aaa
popf
inc
or
push
ljmp
fcompl
jae
bound
mov
mov
cmovne
insl
push
mov
and
fdiv
pop
out
push
add
es
cmpl
lcall
mov
and
fildl
and
xchg
mov
inc
push
sub
mov
and
mov
into
clc
or
mov
cmp
lahf
inc
pop
xchg
mov
mov
enter
inc
sbb
movsl
cmp
inc
or
mov
push
jp
in
add
leave
adc
mov
mov
test
pop
mov
and
inc
or
mov
nop
cmp
icebp
psrlw
mov
bound
cmc
and
ret
xchg
dec
adc
nop
orb
and
jmp
std
mov
sbb
jg
lods
int3
in
pop
add
enter
orl
lods
aam
xlat
js
add
js
lret
xchg
call
decl
mov
lods
repz
push
and
sti
fmull
movsb
imul
pusha
mov
stos
and
or
mov
dec
pop
and
sub
jle
aas
dec
adc
jle
and
adc
mov
dec
and
sbb
pop
and
leave
mov
cmp
test
dec
xchg
jecxz
insl
in
or
push
daa
mov
add
test
popa
lock
add
nop
mov
aad
nop
daa
mov
dec
mov
fdivrs
or
adc
cmp
js
dec
and
inc
or
pop
stc
lret
add
mov
cmpsb
or
cmp
add
mov
inc
mov
jo
jp
pop
inc
adc
cmpsb
add
push
cmp
daa
out
insb
popf
out
mov
mov
cli
mov
cmpsb
add
fdivrl
clc
pop
ljmp
out
imul
and
adc
jno
jp
adc
dec
movsb
add
push
lock
sti
in
in
addr16
and
cli
push
add
movsl
or
loop
ja
data16
lock
loop
lods
outsl
jae
cmpsb
shlb
mov
test
mov
xor
sub
jp
in
jns
loope
mov
fscale
inc
adc
scas
sbb
fdivrl
lcall
out
push
insl
ds
adc
ds
and
fsubs
repz
in
pop
test
mov
mov
adcl
adc
and
push
add
hlt
mov
test
lods
cmpsl
xor
cmp
or
cmpsb
xor
out
sbb
add
mov
pop
test
sub
sbb
and
xor
outsl
pushf
cmp
pop
test
mov
cmp
mov
dec
loop
push
and
jo
inc
or
dec
adc
mov
in
lods
xor
mul
fdivrl
outsb
inc
or
mov
add
popf
inc
or
daa
scas
push
jns
pop
xlat
sti
pop
push
dec
or
fwait
jns
enter
push
sbb
mov
ja
cld
insb
clc
ljmp
or
adc
dec
orps
xor
mov
outsb
jmp
aaa
pushf
xor
inc
or
jmp
test
pop
out
jae
loope
jo
jl
fs
pop
fnstsw
mov
mov
test
inc
xchg
cmp
loop
jmp
pop
outsb
in
aam
out
jae
or
push
sbb
ret
pop
inc
orl
dec
adc
fistpll
push
inc
loop
push
sbbl
sub
sti
repz
xlat
call
xor
jp
jecxz
push
cmc
xor
mov
lds
jnp
add
jp
adcb
or
pop
popa
jmp
xchg
ljmp
xchg
pop
mov
into
xchg
jne
or
jno
int
mov
stos
add
fcomps
scas
xor
addr16
push
andl
mov
mov
pusha
je
add
js
rclb
jmp
sub
xchg
cmp
pop
je
loop
add
jmp
mov
sub
dec
unpcklps
xchg
cmp
sbb
xchg
xchg
cmp
mov
cmc
pop
gs
mov
sbb
push
adc
cmp
mov
orb
jne
mov
xor
add
mov
rol
mov
xor
or
xorl
jl
sub
ss
test
sub
lret
mov
inc
add
add
pop
sub
sub
sub
dec
sub
inc
xchg
mov
aad
push
lret
jmp
lcall
mov
lret
pop
cli
cmpsl
jb
cmp
jmp
dec
or
clc
mov
cmp
mov
dec
popa
xchg
xlat
andb
ds
outsb
lds
xchg
cmp
mov
out
mov
mov
pusha
cmpsb
mov
jae
xchg
ss
xor
xchg
es
cmp
mov
mov
inc
insl
in
cmpsl
sbb
mov
testl
sbb
push
nop
inc
xor
es
sub
shll
loopne
inc
cmp
mov
icebp
popa
sbb
je
rclb
sbb
jo
outsb
ljmp
lahf
and
inc
adc
in
mov
cmpsb
in
pop
rcll
fdivrs
sub
stc
orl
lock
iret
mov
mov
fs
fdivrs
dec
or
adcb
dec
sbb
int3
mov
push
or
test
mov
jg
stos
cwtl
cmp
sbb
popa
inc
inc
jg
cltd
mov
sahf
xor
insb
jb
push
movsb
lea
mov
mov
xchg
adc
lcall
test
nop
adc
or
mov
mov
dec
dec
mov
lahf
lea
cmp
mov
data16
push
sbb
gs
dec
movsb
or
bound
sarl
mov
mov
push
mov
adc
pop
lret
and
aaa
push
aam
lcall
mov
mov
sub
fnstsw
or
or
sbb
inc
or
dec
orb
call
shlb
scas
je
cmp
and
inc
xchg
mov
aaa
push
mov
mov
xchg
dec
or
mov
xchg
push
cmp
cli
mov
mov
out
lret
movsb
das
ret
imul
fsubl
sbb
or
pusha
rclb
pop
adc
dec
push
push
pop
inc
push
das
popl
mov
dec
or
les
mov
stos
mov
fldt
popa
es
mov
adc
lret
xchg
aaa
inc
mov
inc
sub
je
jge
data16
and
addb
addb
ja
push
add
xor
and
dec
sete
daa
test
adc
inc
pop
mov
cs
sarl
cmp
repz
xchg
push
in
imul
inc
lret
inc
pop
mov
xchg
inc
add
jle
jp
inc
rcpps
loope
sub
mov
out
xchg
pop
adc
orl
jmp
enter
sub
sbb
daa
stos
jae
negl
push
mov
dec
cs
add
push
lret
mov
cmpsb
xor
sbb
or
cmp
pop
cld
jecxz
mov
inc
enter
mov
mov
pop
notl
ret
sbb
adcl
xor
es
jne
fiadds
fildll
lods
pusha
inc
fdivrs
jg
adc
mov
fs
pop
mov
inc
jmp
jbe
cltd
inc
insl
addr16
or
xchg
cmp
mov
sbb
outsl
cld
mov
sbb
sbb
test
cmovnp
sub
stos
nop
ja
jnp
ret
mov
leave
call
pop
add
or
cmp
pop
test
cmp
ffree
fadds
push
cmp
dec
movsb
jno
xchg
aaa
mov
repnz
adc
je
daa
fwait
aaa
mov
js
stos
stos
popa
hlt
sub
out
sub
in
addr16
cld
cltd
mov
fbstp
lahf
aas
shlb
xchg
xchg
icebp
or
mov
add
test
jecxz
mov
dec
mov
adc
adc
nop
std
add
mov
fdivrl
cltd
jmp
hlt
xchg
aas
sahf
dec
es
ret
or
xchg
or
inc
mov
cmpsl
imul
mov
mov
jecxz
dec
pop
push
sti
stos
pop
mov
jnp
jb
out
cmpsb
sub
notb
ljmp
pusha
jmp
xchg
movsb
daa
xor
sub
flds
dec
ja
test
sahf
faddl
into
pusha
repnz
cmpsl
push
out
jp
pop
lret
xchg
subb
mov
shlb
or
jae
test
gs
lahf
call
hlt
push
push
push
push
es
mov
xor
lret
cmpsb
xchg
inc
cmp
scas
sub
daa
jg
or
push
pop
movsl
xor
cmp
sbb
insl
dec
enter
imul
jb
ljmp
xor
daa
or
sbb
mov
cmpsl
rcr
jle
or
push
add
lahf
dec
shll
xor
stos
lods
xor
jle
out
jo
xchg
cmp
push
je
cmp
sub
lahf
dec
scas
popa
hlt
add
int3
mov
pop
call
insb
ret
pop
lahf
sbb
jbe
shrb
bound
xor
push
push
sbb
hlt
sbbb
jb
add
xor
inc
shrl
test
and
into
lea
jbe
jnp
jne
and
ds
fs
gs
push
hlt
gs
xchg
loope
push
mov
inc
adc
dec
or
dec
fs
adc
push
lret
pusha
add
push
jb
dec
testb
sub
mov
dec
pusha
test
xchg
xchg
repz
shll
clc
popa
push
repnz
lods
jb
cmp
xchg
cmp
mov
aam
in
push
mov
inc
cmc
pop
mov
dec
cmp
les
pusha
xor
roll
movsl
cltd
or
lret
sbb
outsb
test
jns
addl
in
adc
jmp
nop
dec
adc
mov
pop
bound
and
jmp
sti
xorb
or
pop
outsb
repnz
test
inc
mov
inc
or
push
inc
cli
fs
adcl
adc
xchg
inc
jbe
std
cmpsb
sahf
outsl
jmp
mov
roll
sub
adc
mov
hlt
dec
icebp
jmp
or
std
pop
xor
aam
inc
clc
pop
int
gs
push
adc
sbb
dec
negl
adc
clc
cmp
mov
push
push
shrl
nop
sbbb
in
xchg
in
paddb
shlb
es
test
sarl
pop
add
mov
scas
ss
scas
push
pop
pop
xlat
jl
lea
lret
and
xorb
ficompl
pop
or
into
xchg
jmp
sti
lret
pop
jb
mov
lods
orb
push
sti
push
lea
sbbb
movl
aas
mov
loope
fisttps
cmp
pop
push
lock
ss
mov
cmpsl
jno
xchg
sbb
mov
insl
aaa
mov
lea
xor
mov
lds
out
cs
ds
loopne
and
lret
adc
adc
es
mov
dec
in
movsl
adc
cmp
dec
adc
sub
mov
in
xor
push
in
push
sar
flds
adc
dec
mov
xchg
mov
loop
int
and
or
add
shrb
sub
ret
nop
aam
adc
orb
xchg
pop
lock
push
movsl
xorl
or
repz
aad
push
stos
add
or
pop
pusha
fiaddl
sub
xchg
add
mov
add
mov
push
sub
xor
rolb
push
popf
stos
inc
into
vprotw
xchg
std
fs
xor
xchg
cmp
leave
push
daa
xor
jno
ss
repz
xor
bnd
adc
dec
add
xchg
fdivrl
insb
cmp
sub
shll
inc
fidivrl
sub
sub
mov
jg
or
push
cli
inc
adc
inc
aas
xchg
mov
inc
fildl
insl
fucomp
stc
sbb
faddl
filds
sbb
adc
inc
out
fadds
xchg
bnd
mov
cmp
adc
int
into
dec
in
cmpl
mov
adc
mov
test
adc
push
mov
sub
rclb
dec
in
test
jne
inc
orl
mov
xor
pop
stc
ss
in
pusha
cmpsl
adcb
sbb
push
or
and
cli
mov
adc
inc
lahf
cs
xchg
xor
sub
cmp
popa
mov
pop
pop
fildll
jle
sbb
pop
insb
out
jno
push
in
xor
add
daa
push
sti
into
inc
mov
add
in
mov
cs
mov
fiadds
lds
push
rorb
jmp
aam
arpl
mov
scas
jp
mov
fiaddl
int
aaa
cltd
jmp
std
ljmpw
mov
test
repz
cwtl
loop
leave
into
mov
jle
xor
xchg
xchg
stos
mov
cli
or
inc
or
imul
jne
sbb
outsb
popa
out
test
push
fs
clc
iret
jae
adcb
lahf
jno
pop
add
imul
gs
lret
je
push
sub
cmp
cmpb
clc
mov
orl
adc
out
mov
inc
ds
xlat
ja
sub
adc
nop
mov
push
popf
and
sub
mov
scas
sub
xchg
cmp
int3
loopne
jne
aad
clc
gs
mov
scas
imul
mov
stos
lret
pop
cwtl
inc
aad
mov
push
mov
dec
mov
xchg
cmp
lods
mov
enter
jne
negl
bound
mov
std
orl
clc
arpl
cmpsl
inc
or
adc
movsb
sub
adc
mov
stos
lret
jmp
cs
add
mov
lods
push
stos
xor
mov
orb
jp
imul
sbb
popf
cmp
or
adc
insb
in
dec
dec
cmpsb
xchg
xchg
out
mov
push
idivb
mov
outsb
icebp
es
not
in
mov
bound
lods
sub
stc
pushf
repz
and
xchg
cmp
or
sub
mov
out
fidivrl
and
repnz
ja
xor
fwait
sarl
rcrb
aas
cwtl
inc
dec
repz
imul
int
mov
mov
pop
fiadds
or
je
pop
fiaddl
rolb
ret
ret
in
jmp
aad
xchg
movsb
ss
mov
pop
insb
sbb
addr16
clc
pop
push
xor
ret
ss
sbb
jne
addr16
out
push
shll
movsl
movsbl
sbbw
popa
mov
leave
stos
xor
shrb
mov
flds
mov
lods
faddl
jp
insb
jmp
outsb
movsl
xor
and
mov
cmp
lahf
dec
cld
or
mov
jg
stos
inc
adc
iret
movsl
xor
shl
mov
push
mov
cmp
call
test
in
jbe
fdivrs
mov
enter
fwait
push
jbe
xchg
into
aaa
movsb
arpl
xchg
inc
in
sub
js
jecxz
mov
lock
scas
pop
clc
test
xor
jge
mov
popa
cmp
jle
or
dec
dec
sub
or
adc
sahf
mov
test
lock
inc
mov
faddp
adcb
add
xor
ss
push
repnz
mov
mov
aas
test
hlt
pop
je
push
cld
sbb
fs
dec
jge
jae
fadds
or
xor
aas
scas
in
mov
mov
adc
sbb
insl
out
lret
fld
mov
push
insb
icebp
ret
adc
lods
sbb
inc
add
sti
xchg
mov
dec
adc
in
jo
cmc
pop
fs
dec
or
aaa
cmp
inc
adc
popa
sbb
lahf
pusha
dec
or
ret
mov
add
fiadds
lods
popf
inc
movsl
lods
push
rcr
mov
mov
jbe
push
and
cmp
sbb
jg
dec
adc
stc
cli
push
mov
outsl
arpl
pop
into
jl
dec
popf
sbb
test
cmc
push
rclb
push
xchg
push
in
outsl
adc
pop
add
shll
outsb
push
cwtl
jecxz
movsl
inc
adc
test
popa
push
mov
call
add
sub
rolb
add
das
stos
or
mov
lds
sbb
sbb
rorl
and
loope
nop
faddl
mov
sti
sti
mov
mov
sbb
inc
fcompl
cmp
dec
and
adc
mov
int
cwtl
inc
xchg
jno
mov
mov
imul
dec
cwtl
cwtl
cmp
or
jb
mov
movsl
out
call
jmp
sub
imul
pop
scas
jge
jp
mov
out
xchg
callw
test
add
incl
sub
decl
pop
sbb
pop
adc
std
dec
fwait
xor
pushf
fcmovnu
jp
sub
mov
ret
nop
sbb
inc
or
adc
dec
dec
dec
lods
sub
xlat
xchg
inc
in
iret
mov
cli
mov
rclb
lcall
or
test
call
aad
mov
pop
sti
mov
mov
mov
jbe
lcall
cmc
sbb
ret
dec
push
xchg
sahf
pop
push
ss
adc
iret
pushf
inc
js
cmc
pop
push
jno
sub
imul
movsl
cmpsb
xor
pop
aas
cltd
mov
sbb
fsubr
dec
or
mov
movsb
xor
lcall
js
push
negb
sbb
int3
ljmp
das
andl
pop
ds
push
cld
xorb
pop
ljmp
mov
dec
adc
dec
adc
nop
cwtl
inc
out
pop
nop
cmp
mov
lods
mov
and
insl
icebp
out
push
decb
cmp
stc
push
push
aam
in
leave
inc
mov
xor
sahf
mov
sbb
popf
push
ja
mov
lea
mov
aam
sbb
repnz
iret
adc
out
push
pop
mov
sbb
push
mov
lods
orb
mov
pop
or
pop
push
cld
fsub
in
jbe
or
adc
inc
sti
data16
popa
xlat
pop
pop
add
xchg
xorb
and
jle
fyl2xp1
lds
pop
jo
mov
xchg
sbb
inc
das
inc
mov
add
jg
aad
jo
pusha
popf
xor
orb
fstpl
and
wrmsr
cwtl
lea
out
iret
jg
push
sar
outsb
mov
insb
out
pop
add
or
jne
sbb
dec
sarb
popf
out
add
pusha
leave
pop
lret
and
pop
call
repz
cmp
inc
and
push
xlat
test
jno
sbb
adc
popf
mov
mov
jbe
cmp
insl
cwtl
es
in
stos
rcll
sbb
jno
mov
or
scas
xor
dec
push
cli
sub
push
insl
in
cmp
jne
fs
sarb
cmpsb
add
jmp
sarb
or
pop
lds
lods
mov
shrl
mov
or
xchg
and
imul
pushf
out
js
sbb
pushf
cmp
lret
stc
imul
insb
lret
jge
in
jge
cs
faddl
mov
gs
xchg
xor
ret
dec
adc
movsb
in
add
push
fwait
inc
hlt
mov
inc
loop
call
in
orl
lock
fisubl
cmpl
push
lcall
push
lods
setge
bound
inc
adc
mov
and
or
xor
dec
push
jmp
imul
dec
or
or
lcall
stc
pop
stc
dec
push
add
out
addb
stos
sub
pop
inc
adc
add
pop
sub
xor
shrl
dec
add
aas
xchg
minps
mov
lret
lods
test
cltd
inc
jo
pop
mov
mov
insl
push
leave
fiadds
add
and
aam
inc
sbb
xor
dec
insb
cmc
adcl
cld
and
aaa
pop
mov
scas
mov
not
repnz
jbe
sbb
dec
lret
daa
add
lret
pop
xor
jne
sub
sub
or
xchg
ds
mov
pushf
push
bound
mov
lods
mov
pop
loope
popf
lods
nop
xchg
cmp
scas
aas
movsb
mov
mov
jno
inc
fldl
pop
sbb
faddl
outsb
mov
dec
adc
add
arpl
fistl
sub
xchg
xor
mov
outsb
repnz
scas
arpl
pop
sbb
mov
loopne
push
mov
push
sahf
sbb
fstpt
fldt
lods
adc
out
rcll
fcmovnb
rsqrtps
pop
sbb
sbb
jmp
mov
fisttpll
shl
stos
xor
jp
xor
xchg
cmp
and
repz
and
sub
push
and
xor
and
clc
pop
mov
filds
icebp
mov
mov
xsha256
cmpsb
adc
inc
orb
sti
pop
cmpsb
adc
test
sbb
sub
mov
push
pusha
push
push
stc
fnsave
cmpsl
jl
xchg
xlat
sub
psrld
adc
jecxz
sbb
push
ljmp
xchg
loopne
xchg
cmp
cmc
inc
or
jecxz
jae
adc
pop
xchg
test
mov
jne
fdivrl
arpl
scas
and
in
cmp
lret
lret
sbb
dec
in
jo
sbb
cltd
or
push
imull
pop
jecxz
rolb
pop
push
mov
inc
sub
jecxz
jb
dec
adc
gs
jmp
call
out
xor
adcb
pop
shll
push
sarl
mov
fs
adc
mov
rorb
push
in
push
xchg
leave
xchg
inc
mov
cmp
jecxz
and
pusha
mov
jno
push
cmpsl
fxch
sti
mov
imul
adc
sub
and
adc
xor
mov
and
cmp
xchg
and
gs
mov
mov
test
movsb
cs
dec
adc
sub
cmp
jnp
xchg
cmp
movsl
push
sti
mov
lods
xor
stos
mov
scas
and
scas
sub
fistps
mov
clc
pop
popa
cmc
popa
out
cmp
sub
mov
dec
pop
fcompl
mov
sub
lods
xor
cmp
data16
jmp
sti
inc
or
scas
or
mov
mov
sbb
mov
sahf
inc
stc
sarl
mov
mov
inc
or
into
inc
or
test
inc
cmpsb
jmp
loopew
adc
jle
sub
mov
inc
punpcklbw
pop
arpl
mov
push
jb
push
and
pop
ret
orl
push
arpl
xor
shl
cmp
xor
mov
mov
push
mulb
adcb
fidivrl
jnp
mov
xor
outsl
test
jge
in
nop
daa
adc
pusha
mull
lods
lcall
mov
ljmp
fcomip
jb
into
push
outsl
hlt
sbb
mov
fldcw
enter
jl
mov
pop
ret
pop
add
leave
sarl
xchg
lds
sub
ret
inc
inc
test
lahf
adcb
rorb
push
roll
aam
jle
rorb
je
or
lds
test
cld
pop
xchg
stos
sub
sbb
cmp
sub
mov
test
out
out
leave
cli
jmp
and
cmp
xchg
insl
jns
cmp
pop
into
arpl
pop
lds
push
cwtl
inc
xchg
push
mov
xchg
aaa
in
daa
push
fildl
cmp
pusha
std
or
pushf
cmp
das
or
sbb
movsb
daa
fists
sub
in
negb
repnz
push
dec
fwait
inc
filds
sub
in
xor
mov
stc
test
sarb
lock
int
mov
mov
pop
or
pop
fildl
mov
xchg
pop
bswap
in
leave
mov
mull
test
pop
out
mov
xchg
pop
je
stos
into
push
add
mov
mov
fmuls
jns
ljmp
fildl
sub
xchg
cmp
aas
cmpsb
mov
mov
ljmp
iret
xchg
xchg
or
outsl
sarl
out
mov
in
lods
cmpsb
jb
push
mov
mov
add
fistpl
sbb
dec
pop
push
fcmovnbe
sub
mov
bnd
mov
movsl
loopne
fdiv
cmp
sub
mov
add
aad
repz
push
dec
dec
aaa
mov
loop
or
scas
std
fidivrs
mov
adc
add
xchg
jbe
fldl
shll
mov
pop
inc
pop
lds
mov
mov
mov
mov
mov
nop
cwtl
stc
adcb
fstpt
ret
inc
adc
fsub
jno
and
push
daa
clc
pop
jne
js
mov
stos
push
jp
pop
fdiv
xchg
cmp
inc
or
adcl
and
movsl
sbb
mov
lods
aam
push
movsb
daa
pop
jg
cld
xchg
xor
ret
or
sbb
dec
icebp
dec
int3
xchg
in
inc
or
hlt
pop
ljmp
test
sbb
xchg
inc
sub
aaa
in
and
push
lret
popf
cmp
mov
pop
lcall
imul
jge
sbb
dec
in
cmp
jp
pop
pop
add
mov
mov
xchg
xchg
push
in
outsl
push
add
int3
jg
daa
pop
sbb
cltd
push
inc
aas
lahf
dec
dec
inc
or
mov
sbb
mov
test
scas
mov
push
inc
add
mov
ret
xchg
jnp
mov
popw
mov
fmuls
jmp
inc
or
aad
mov
das
fisubl
pusha
test
orl
jno
lods
test
xchg
ret
mov
xor
xchg
xchg
jne
enter
add
xor
mov
inc
or
enter
mov
xchg
push
sbb
dec
sti
fwait
cmp
xchg
add
enter
cltd
adc
lahf
out
imul
dec
enter
and
cltd
pop
clc
push
imul
cli
inc
fdivrs
call
imul
gs
testl
push
rclb
inc
adc
rorl
lret
fstps
insb
xor
sub
inc
adc
test
pop
cmp
fidivrl
push
mov
pop
daa
push
xor
fnstsw
ffree
xchg
mov
xchg
fmuls
out
mov
loopne
out
and
movsb
inc
ret
insb
popf
fidivrs
je
rcll
leave
push
push
shll
repnz
fldcw
mov
hlt
bound
inc
adc
imul
adc
add
mov
fs
in
imul
xor
ja
ret
push
xchg
fwait
push
in
test
inc
push
loope
cmp
mov
mov
fldt
mov
loope
loopne
lret
repnz
pop
lock
mov
stos
sub
xor
pop
lock
sbb
dec
jg
out
mov
cmp
push
cwtl
cs
dec
out
jp
das
in
fwait
jmp
lea
mov
sbb
cmp
ret
out
pop
mov
nop
cmp
inc
sarb
jb
fbld
data16
xor
pop
add
or
mov
or
mov
popa
insl
mov
xor
dec
or
xchg
sbb
sub
fcompl
fisttps
mov
dec
dec
sbb
and
cs
std
decb
jae
lods
sub
dec
or
jg
dec
mov
gs
ss
addr16
push
dec
push
push
test
xorl
iret
fnstcw
pop
jne
clc
out
add
jmp
and
and
sub
nop
cmp
xchg
xchg
inc
mov
movsl
or
inc
clc
dec
cwtl
sbb
dec
dec
sbb
stos
xor
inc
in
insl
push
or
lahf
pop
dec
or
inc
lods
sub
dec
or
cmp
add
mov
dec
mov
scas
sub
mov
iret
test
sbb
push
fsubrl
fcom
xor
leave
inc
push
pop
add
adc
je
inc
stc
fs
ficompl
jge
cli
pop
adc
dec
pop
cli
push
imul
outsb
mov
leave
idivb
and
ljmp
dec
in
jmp
mov
popa
cld
bound
ficomps
roll
cmpsb
stc
or
aad
loop
jb,pn
test
imul
push
push
mov
dec
mov
push
add
lods
adcl
dec
push
leave
cmp
cwtl
mov
mov
push
push
dec
aaa
mov
push
xchg
aas
nop
jb
dec
ror
js
bound
test
mov
pop
cli
pop
sub
aad
test
or
or
rcrb
pop
push
adc
into
mov
inc
adc
enter
adcb
pop
imul
int3
fptan
push
adc
enter
aad
shrb
or
xchg
cmp
xchg
push
aad
rcll
pop
orl
lret
mov
in
mov
ljmp
sbb
out
fs
mov
leave
or
insl
cmc
mov
mov
push
dec
jno
shlb
add
idivl
push
cli
adc
orb
lods
xor
or
pop
lock
mov
movsl
jecxz
popf
xor
add
les
push
dec
loop
push
fidivl
test
add
test
xchg
sub
dec
movsl
cmp
dec
xor
jg
ret
pop
aam
push
jmp
daa
repz
and
inc
mov
int
lods
inc
lret
out
cmp
pop
in
lret
inc
pop
lock
call
push
lds
xchg
sub
out
mov
insb
cmp
imul
out
xchg
fnstsw
sysenter
or
xor
sub
mov
mov
loopne
xlat
fsubrs
sub
pop
sub
lea
sbb
jge
stos
scas
shlb
leave
add
pop
push
and
push
ja
jbe
je
add
cld
mov
stc
sbb
stos
inc
dec
outsl
cmp
mov
rcrl
shl
repnz
inc
adc
popf
inc
xchg
sub
gs
xchg
mov
inc
fld1
or
imul
pop
lock
mov
movsl
jecxz
popf
xor
add
les
push
dec
loop
push
fidivl
test
add
cmpsl
clc
fsincos
xchg
sub
dec
movsl
cmp
dec
xor
jle
ret
pop
aam
push
jmp
daa
bnd
and
call
ja
sbb
inc
lret
rcrb
in
lret
inc
pop
lock
call
push
lds
xchg
sub
in
mov
insb
aaa
inc
fldcw
shrl
mov
mov
fdivrl
push
xor
movsb
gs
pushf
xor
sub
mov
mov
loopne
fsubrs
sub
pop
sub
lea
test
jl
stos
lods
shlb
leave
add
pop
push
and
push
ja
jbe
jae
add
cld
mov
clc
sbb
stos
inc
dec
outsl
cmp
mov
rcrl
mov
ja
inc
adc
popf
inc
xchg
sub
fs
xchg
mov
inc
or
imul
pop
lock
mov
movsl
jecxz
popf
xor
add
les
push
dec
loop
push
fidivl
test
add
cmpsb
clc
fdivr
xchg
sub
dec
movsl
cmp
dec
xor
jge
ret
pop
aam
push
jmp
daa
icebp
jo
and
xchg
jnp
mov
int
lods
inc
leave
out
cmp
pop
jmp
popa
sbb
ds
push
lds
xchg
sub
in
mov
insb
ss
fldenv
shrl
mov
mov
fstpt
or
cs
xor
sub
mov
mov
loopne
aad
outsl
pop
sub
pop
sub
lea
test
jnp
stos
lods
shlb
leave
jmp
rcrl
push
call
test
outsl
push
movsb
leave
std
xchg
sti
lds
mov
sbb
lahf
imul
popf
rcrb
mov
ja
inc
adc
sahf
inc
gs
sub
arpl
dec
ljmp
imul
pop
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
push
fidivl
test
add
movsl
clc
xlat
sti
xchg
sub
dec
movsl
cmp
dec
xor
jl
ret
pop
aam
push
jmp
daa
lock
and
xchg
jnp
mov
int
lods
inc
enter
pop
ljmp
jb
call
push
lds
xchg
sub
jecxz
mov
insb
xor
shrl
xchg
mov
fidivrl
or
or
xor
sub
mov
mov
loopne
aam
outsl
push
sub
pop
daa
testb
jp
stos
stos
shlb
leave
and
pop
push
pop
push
call
test
outsl
push
mov
les
mov
pop
lods
inc
dec
outsb
cmp
lahf
push
popa
pushf
rcrb
mov
ja
inc
adc
sahf
inc
gs
sub
bound
dec
ljmp
imul
pop
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
push
fidivl
test
add
movsb
clc
sti
xchg
sub
dec
movsl
cmp
dec
xor
jnp
ret
pop
aam
push
jmp
daa
out
jo
and
xchg
jnp
mov
int
lods
inc
out
cmp
pop
jmp
pop
lock
call
push
lds
xchg
sub
loop
mov
insb
xor
fldenv
shrl
xchg
mov
out
xchg
fnstcw
or
xor
sub
mov
mov
loopne
rcr
outsl
add
testb
jns
stos
stos
shlb
leave
std
and
pop
push
push
push
call
test
outsl
push
mov
ret
lea
push
lods
inc
dec
outsb
cmp
lahf
imul
out
icebp
mov
ja
inc
sysret
sahf
inc
gs
sub
popa
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
push
fidivl
test
add
mov
xchg
sub
dec
movsl
cmp
dec
xor
jp
ret
pop
aam
push
jmp
daa
out
jo
and
xchg
jnp
mov
int
lods
inc
out
cmp
pop
call
pop
lock
call
push
lds
xchg
sub
loope
mov
insb
xor
fs
shrl
test
mov
out
xchg
fdivrs
or
xor
sub
mov
mov
loopne
rcr
outsl
add
addr16
pop
and
test
js
stos
test
lret
xor
cld
and
pop
push
sbb
fbstp
outsl
outsl
push
mov
ret
hlt
sbb
mov
adc
cmp
lahf
push
pop
out
icebp
mov
ja
inc
push
pop
sahf
aas
gs
sub
pusha
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
mov
xchg
sub
dec
movsl
cmp
dec
xor
jns
ret
pop
aam
push
jmp
daa
in
jo
pop
dec
call
jb
sbb
inc
rcrb
out
popa
sbb
lock
call
push
lds
xchg
sub
loopne
mov
insb
xor
arpl
pusha
divl
xlat
jle
or
xor
ret
mov
loopne
rcr
outsl
add
addr16
pop
and
lea
test
ja
stos
test
mov
leave
sti
and
pop
push
sbb
call
test
outsl
push
mov
rorl
dec
adc
inc
inc
outsb
cmp
lahf
addr16
rcrb
mov
ja
inc
or
xchg
sub
pop
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
mov
xchg
sub
dec
movsl
cmp
inc
xor
js
ret
pop
aam
push
jmp
daa
in
jo
push
dec
call
jno
sbb
inc
out
cmp
pop
out
popa
sbb
lock
call
push
lds
sub
fbld
adc
mov
insb
xor
bound
pusha
divl
jle
or
xor
sub
mov
mov
loopne
rcr
outsl
add
addr16
pop
and
lea
test
jbe
stos
cmpsl
shlb
leave
cli
and
pop
push
sbb
dec
jbe
jbe
insl
outsl
push
lahf
leave
std
xchg
sti
rorb
dec
adc
lahf
lretw
rcrb
mov
ja
inc
or
sahf
cmp
pop
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
mov
xchg
sub
dec
movsl
cmp
inc
xor
ja
ret
pop
aam
push
jmp
daa
jmp
pop
sbb
mov
int
lods
inc
ret
out
cmp
pop
in
popa
pop
inc
pop
lock
call
push
lds
xchg
sub
fisubs
dec
insb
xor
popa
shrl
andb
loopne
xchg
aad
adc
sub
mov
mov
loopne
iret
fsubrs
sub
pop
and
lea
sbb
jne
stos
cmpsb
shlb
leave
stc
and
pop
push
sbb
dec
jbe
jbe
insb
outsl
push
sahf
leave
std
xchg
sti
mov
sbb
dec
adc
lahf
gs
rcrb
mov
ja
inc
or
sahf
cmp
xchg
sub
pop
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
lahf
clc
sar
xchg
sub
dec
movsl
cmp
inc
xor
jbe
ret
pop
aam
push
jmp
daa
ljmp
jnp
mov
int
lods
inc
ret
rcrb
in
popa
push
inc
pop
lock
call
push
lds
xchg
sub
frstor
push
cmp
fldenv
shrl
andl
adc
jle
push
xor
movsb
gs
pushf
xor
sub
mov
mov
loopne
into
fsubrs
sub
pop
and
lea
test
je
stos
movsl
shlb
leave
clc
and
pop
push
sbb
dec
jbe
jbe
imul
leave
std
xchg
sti
mov
sbb
dec
adc
lahf
fs
rcrb
mov
jg
adc
inc
or
sahf
cmp
sub
pop
and
dec
ljmp
imul
push
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
sahf
clc
sar
xchg
sub
dec
movsl
cmp
inc
xor
jne
ret
pop
aam
push
jmp
daa
jmp
call
outsb
pushf
sbb
inc
shr
rcrb
jecxz
popa
adc
ss
push
lds
xchg
sub
fsubl
or
cs
fstps
shrl
andb
loopne
xchg
sarl
add
es
xor
sub
mov
mov
loopne
int
outsl
ljmp
addr16
pop
and
mov
test
jae
lods
movsb
iret
mov
lret
rcrl
push
jmp
cmpsl
push
pop
pushf
enter
mov
sbb
dec
adc
rcrl
mov
jmp
push
inc
or
lahf
cmp
xchg
pop
es
jmp
or
imul
lock
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
popf
clc
iret
sti
xchg
sub
dec
movsl
cmp
inc
xor
je
ret
pop
aam
push
jmp
daa
call
call
insl
pushf
sbb
inc
shr
rcrb
loop
popa
adc
pop
lock
call
push
lds
xchg
sub
or
mov
insb
sub
shrl
jg
divl
sarb
add
or
xor
sub
mov
mov
loopne
int3
fsubrs
sub
pop
pop
testl
mov
lds
lret
rcrl
push
jmp
cmpsl
imul
cli
mov
sbb
dec
shrd
cmp
sahf
lret
bound
jmp
push
inc
or
lahf
cmp
xchg
pop
es
jmp
or
imul
lock
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
pushf
clc
into
sti
xchg
sub
dec
movsl
cmp
inc
xor
jae
ret
pop
aam
push
jmp
daa
out
pop
sbb
xchg
jnp
mov
int
lods
inc
mov
loope
popa
adc
lock
call
push
lds
xchg
sub
fisubl
or
mov
insb
sub
fstps
shrl
jle
imull
sarl
add
xor
sub
mov
mov
loopne
lret
fsubrs
sub
pop
push
testl
mov
les
lret
rcrl
push
jmp
cmpsl
push
std
xchg
cli
mov
sbb
dec
push
lods
inc
inc
insl
cmp
sahf
popa
lret
bound
mov
and
ja
inc
pop
or
xchg
pop
es
jmp
or
imul
adcb
mov
movsl
loop
sahf
xor
xor
mov
loop
dec
fidivl
test
add
fwait
clc
int
xchg
sub
dec
movsl
cmp
inc
xor
jb
ret
pop
aam
push
jmp
daa
out
pop
sbb
xchg
jnp
mov
int
lods
inc
mov
loopne
popa
adc
lock
call
push
lds
xchg
sub
fldenv
or
mov
insb
sub
pop
shrl
jge
imull
sarb
add
xor
sub
mov
mov
loopne
lret
cld
sub
pop
sbb
test
jo
lods
mov
ret
xor
hlt
and
pop
push
adc
fbstp
addr16
cltd
enter
mov
sbb
dec
or
cmp
sahf
pusha
lret
bound
mov
and
ja
inc
push
or
xchg
pop
es
jmp
or
imul
lock
mov
movsl
loop
sahf
xor
xor
mov
loop
inc
fidivl
test
add
lcall
sub
dec
movsl
cmp
inc
xor
jno
ret
pop
aam
push
jmp
daa
in
pop
pop
dec
call
push
sbb
inc
mov
popa
adc
lock
call
push
lds
xchg
sub
fsubs
or
mov
insb
sub
pop
shrl
jl
imull
iret
jle
add
xor
ret
mov
loopne
leave
fsubrs
sub
pop
sbb
mov
test
outsl
adc
cmp
ret
repz
pop
push
adc
jmp
cmpsl
data16
cwtl
enter
mov
sbb
dec
or
inc
ds
cmp
sahf
pop
lret
bound
mov
and
ja
inc
add
xchg
sub
push
es
jmp
or
imul
lock
mov
movsl
loop
sahf
xor
xor
mov
loop
inc
fidivl
test
add
cltd
clc
lret
sti
xchg
sub
dec
movsl
cmp
aas
xor
jo
ret
pop
aam
push
jmp
daa
in
pop
push
dec
call
imul
rcrb
fmulp
popa
adc
lock
call
push
lds
sub
xlat
and
or
mov
insb
sub
pop
shrl
jnp
imull
jle
add
xor
sub
mov
mov
loopne
enter
sub
pop
sbb
mov
test
outsb
adc
cmp
shll
repnz
pop
push
adc
inc
jne
jbe
gs
xchg
enter
mov
sbb
dec
or
rcrl
mov
jmp
push
inc
add
lahf
xor
push
es
jmp
or
imul
lock
mov
movsl
loop
sahf
xor
xor
mov
loop
inc
fidivl
test
add
cwtl
clc
push
sub
dec
movsl
cmp
ds
outsl
mov
push
jmp
daa
jecxz
pop
adc
mov
int
lods
inc
mov
popa
cmovno
jb
call
push
lds
xchg
sub
and
pop
cmp
fstps
shrl
jp
imull
int
adc
and
ret
mov
loopne
fnstenv
sub
pop
sbb
dec
jnp
sbb
insl
push
lods
sahf
into
mov
lret
icebp
and
pop
push
adc
inc
je
jbe
fs
xchg
std
xchg
stc
mov
es
or
rcrl
mov
ljmp
add
mov
xchg
push
daa
mov
call
or
imul
pop
lock
mov
movsl
loope
lahf
rolb
sub
push
and
loop
inc
cmpsl
imul
leave
cli
xchg
sub
pop
scas
sbb
movsl
cmp
cmp
ret
pop
rorl
loope
es
or
call
addr16
sbb
inc
mov
fmul
bound
inc
pop
lock
jmp
push
les
xchg
sub
aad
mov
imul
ficompl
shrl
jns
clc
stos
fucomip
xchg
int3
jg
xor
xor
mov
mov
loopne
fidivl
sub
pop
sbb
nop
dec
jp
sbb
insb
pop
scas
popf
int
cmp
mov
ret
adc
jae
ja
bound
xchg
xchg
clc
mov
daa
out
sbb
inc
cmp
rcrb
pop
lock
scas
jmp
loopne
js
inc
add
mov
xchg
push
sub
out
inc
fst
or
push
mull
pop
icebp
mov
scas
loopne
mov
lds
out
mov
jecxz
inc
fdivl
cmpsb
push
fcoms
mov
sub
sbb
jg
ss
mov
push
jmp
repz
and
inc
add
gs
push
mov
xchg
rcrl
int3
arpl
pop
icebp
outsl
sub
js
ret
lahf
mov
xchg
sub
add
mov
imul
stc
test
lock
lret
cld
xor
movsl
popa
sbb
sub
mov
mov
loope
es
xchg
dec
js
sbb
fwait
lret
movsb
cmp
mov
ret
pop
push
push
push
in
aas
jno
js
pusha
jae
xchg
call
in
push
mov
push
mov
cmp
rcrl
mov
in
sbb
jns
aas
decl
mov
xchg
push
sub
out
inc
fst
pop
aam
cmp
fs
es
repnz
scas
adc
int3
add
xor
mov
in
inc
fdivl
movsl
imul
xchg
cli
xchg
and
out
scas
sbb
jle
ss
mov
notb
cli
xchg
pushf
mov
pop
hlt
xor
mov
pop
lods
xchg
jmp
test
jmp
int3
loope
adc
in
sub
sub
cmpsb
push
cmpsl
push
cmp
push
aad
aad
sbb
das
je
mov
call
daa
mov
movsl
nop
stc
cmp
imul
call
das
in
jno
iret
pop
out
shl
jp
stos
xor
inc
inc
pop
adc
pop
mov
add
dec
fnstenv
xchg
push
int3
outsl
fwait
mov
jp
ficoml
xor
call
repz
adc
clc
and
stos
insl
push
testl
xchg
or
inc
cltd
ds
cltd
cmp
adc
aas
sbb
scas
ret
cmp
outsb
sbb
outsl
out
push
data16
in
and
movsb
adc
cmp
jo
jb
pop
xchg
les
xchg
vpmadcswd
sbb
sbb
xor
movsl
movsl
mov
push
cmp
imul
sub
dec
and
dec
test
mov
clc
inc
fldl
add
ljmpw
addl
subb
xchg
js
popf
xor
jb
cmp
dec
scas
arpl
lods
pop
loope
dec
pop
inc
dec
cli
dec
int3
mov
aas
sub
stos
push
jmp
sbb
jae
mov
pop
lret
pop
xor
inc
shr
jecxz
rol
push
fldcw
bsr
lock
es
arpl
inc
pushf
mov
xchg
adc
add
adc
outsb
mov
and
pushf
cmc
cmp
mov
inc
aad
cmp
mov
lret
xor
lea
ret
scas
or
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
sub
clc
cmp
xchg
adc
xchg
and
mov
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fstpt
call
out
sub
push
ljmp
sub
insl
pop
jo
push
jp
sbb
je
lcall
xchg
mov
je
jmp
jb
xchg
dec
inc
inc
cltd
push
xchg
pop
add
mov
pop
push
mov
arpl
fiadds
inc
add
adc
or
shll
stos
lds
inc
mov
arpl
aad
sbb
pop
flds
sahf
cmpsb
ret
mov
jmp
and
mov
dec
iret
imull
or
cmp
push
dec
bound
lods
lahf
push
mov
jecxz
sbb
cmp
dec
adc
xor
test
or
mov
ret
pop
fimull
mov
pop
jo
scas
push
mov
fwait
js
mov
push
inc
lret
xchg
push
loope
