push
mov
sub
push
push
push
call
call
mov
push
push
push
call
push
call
mov
cmpl
je
push
push
push
call
mov
push
call
call
mov
push
push
push
call
cmpl
je
mov
push
call
push
push
push
call
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
call
push
call
push
push
push
push
call
mov
cmpl
je
lea
push
lea
push
push
lea
push
mov
push
call
push
push
push
push
call
mov
cmpl
je
lea
push
lea
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
movl
lea
push
push
call
push
call
mov
cmpl
je
push
push
lea
push
lea
push
call
test
je
movb
push
push
push
lea
push
mov
push
call
push
push
call
push
push
call
mov
push
call
push
push
push
call
push
call
push
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
call
mov
push
push
call
push
call
mov
push
call
cmpl
je
mov
push
call
mov
push
call
push
call
push
push
push
call
push
push
push
call
call
mov
cmpl
je
push
push
push
push
call
mov
push
push
push
call
cmpl
je
mov
push
call
mov
push
call
call
mov
push
push
lea
push
lea
push
call
test
je
movb
push
lea
push
push
push
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
push
call
push
push
push
push
call
mov
cmpl
je
lea
push
lea
push
lea
push
lea
push
mov
push
call
mov
push
call
mov
push
call
lea
push
push
push
push
push
call
test
jne
lea
push
mov
push
push
push
push
call
call
push
call
mov
cmpl
je
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
lea
push
push
push
push
push
call
test
jne
lea
push
mov
push
push
push
push
call
push
call
mov
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
push
call
push
push
call
push
call
push
push
push
call
push
push
call
push
push
call
push
push
lea
push
lea
push
call
test
je
movb
push
lea
push
push
push
mov
push
call
mov
push
call
mov
push
call
push
call
mov
call
mov
mov
push
call
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
call
call
mov
cmpl
je
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
call
mov
push
call
push
call
cmpl
je
mov
push
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
push
push
call
mov
push
call
push
push
push
call
push
call
mov
movl
push
push
call
push
lea
push
call
push
call
push
call
mov
call
mov
cmpl
je
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
call
push
push
call
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
call
push
lea
push
push
push
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
push
call
call
cmpl
je
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
call
cmpl
je
mov
push
call
push
call
push
call
push
push
push
call
call
mov
cmpl
je
push
push
call
push
call
mov
movl
lea
push
lea
push
call
push
call
push
push
call
push
call
push
push
call
push
call
call
mov
push
call
push
push
call
push
call
push
push
call
push
push
call
call
push
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
call
mov
cmpl
je
push
call
mov
movl
push
push
call
push
call
mov
cmpl
je
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
call
push
push
push
call
mov
push
push
push
call
mov
movl
push
push
call
cmpl
je
mov
push
call
mov
push
call
movl
push
push
call
cmpl
je
mov
push
call
push
push
call
push
push
call
push
call
push
call
mov
cmpl
je
push
push
push
push
call
mov
cmpl
je
lea
push
push
lea
push
push
mov
push
call
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
movl
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
push
push
mov
push
call
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
push
push
call
cmpl
je
movb
push
call
push
lea
push
push
push
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
mov
push
call
movl
lea
push
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
call
mov
push
lea
push
push
lea
push
mov
push
call
lea
push
push
push
push
push
call
test
jne
lea
push
mov
push
push
push
push
call
push
call
mov
push
call
push
push
push
push
call
mov
push
call
cmpl
je
mov
push
call
push
push
push
call
mov
push
call
push
push
push
call
call
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
push
call
mov
cmpl
je
lea
push
lea
push
lea
push
push
mov
push
call
mov
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
movl
push
lea
push
call
mov
push
call
push
call
push
push
push
call
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
push
lea
push
push
call
test
je
movb
push
push
call
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
call
mov
mov
push
call
lea
push
push
push
push
push
call
test
jne
lea
push
mov
push
push
push
push
call
push
call
push
push
call
call
cmpl
je
mov
push
call
mov
push
call
push
call
mov
push
call
push
push
call
push
push
lea
push
push
call
test
je
movb
push
call
mov
cmpl
je
push
call
call
mov
movl
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
call
push
push
push
call
mov
push
call
lea
push
lea
push
call
push
push
call
push
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
push
push
call
test
jne
push
mov
push
push
push
push
call
mov
push
call
push
call
push
push
push
push
mov
push
call
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
call
push
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
mov
push
call
mov
push
call
call
mov
push
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
xor
mov
div
mov
mov
sub
mov
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
xor
mov
div
mov
mov
sub
mov
mov
jmp
movl
mov
push
call
add
mov
push
push
push
call
call
mov
cmpl
je
push
call
movl
push
call
push
call
push
push
push
call
lea
push
lea
push
call
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
call
push
push
push
call
push
push
push
call
mov
push
call
cmpl
je
mov
push
call
mov
push
call
push
call
push
push
push
call
call
cmpl
je
mov
mov
mov
rep
movsw
movsb
push
call
add
mov
cmpl
je
mov
mov
mov
rep
movsw
movsb
push
call
add
mov
cmpl
je
mov
mov
mov
rep
push
call
mov
push
call
mov
cmpl
je
push
push
push
call
mov
push
call
mov
cmpl
je
push
call
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
mov
push
call
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
call
push
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
cmpl
je
mov
push
call
mov
push
call
push
push
call
push
push
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
mov
push
call
push
push
call
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
mov
push
call
push
call
push
mov
push
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
push
call
add
mov
push
call
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
push
mov
sub
push
push
push
call
call
mov
cmpl
je
movl
push
call
mov
cmpl
je
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
push
push
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
push
call
mov
push
call
cmpl
je
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
lea
push
call
push
push
push
call
mov
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
push
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
call
push
push
call
mov
push
call
push
push
call
call
push
push
push
call
call
mov
cmpl
je
push
call
push
call
push
call
push
push
push
push
call
mov
push
push
push
call
call
mov
cmpl
je
push
push
lea
push
lea
push
call
test
je
movb
push
push
push
lea
push
mov
push
call
mov
push
call
mov
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
call
test
jne
push
mov
push
push
push
push
call
cmpl
je
movb
push
lea
push
push
push
mov
push
call
mov
push
call
cmpl
je
push
lea
push
lea
push
push
mov
push
call
push
push
push
push
push
push
push
call
mov
push
push
call
push
push
push
call
cmpl
je
movb
push
lea
push
push
lea
push
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
mov
push
call
mov
push
call
call
push
push
push
call
push
push
call
push
call
mov
cmpl
je
mov
push
mov
push
call
push
push
call
push
call
mov
push
call
push
push
push
call
call
mov
cmpl
je
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
call
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
push
push
lea
push
push
call
test
je
movb
push
push
call
push
push
push
push
mov
push
call
mov
push
call
mov
push
call
push
call
push
push
call
push
push
call
call
push
call
mov
cmpl
je
push
call
push
push
push
push
call
mov
push
push
push
call
mov
push
call
mov
cmpl
je
movl
push
call
mov
push
push
push
push
call
mov
cmpl
je
mov
push
call
push
push
push
call
mov
cmpl
je
mov
push
call
mov
push
call
mov
push
call
lea
push
lea
push
call
push
push
push
call
mov
push
push
call
cmpl
je
mov
push
call
push
call
mov
push
call
push
call
movl
push
lea
push
call
movl
lea
push
push
call
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
mov
push
call
mov
push
call
push
push
call
push
push
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
cmpl
je
movb
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
push
call
push
push
push
push
push
call
test
jne
push
mov
push
push
push
push
call
movl
lea
push
lea
push
call
push
call
push
call
push
call
mov
push
call
call
push
push
call
lea
push
push
push
push
push
call
test
jne
lea
push
mov
push
push
push
push
call
push
push
call
movl
lea
push
lea
push
call
push
call
push
push
mov
push
push
call
mov
pop
ret
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
stos
inc
add
pop
inc
add
dec
inc
add
cmp
add
inc
add
sbb
add
inc
add
cld
inc
add
lock
add
loop
add
into
inc
add
mov
inc
add
xchg
inc
add
mov
jl
add
push
inc
add
inc
inc
add
ss
add
es
add
sbb
add
testb
ljmp
add
inc
add
pushf
inc
add
mov
add
add
inc
add
pop
inc
add
dec
inc
add
ds
add
cs
add
sbb
add
inc
add
incb
add
inc
add
in
inc
add
fiadds
add
inc
add
add
add
mov
add
add
add
add
push
inc
add
add
add
sahf
inc
add
mov
add
add
add
add
addb
add
add
add
call
cmp
cmp
xor
add
add
inc
add
mov
add
enter
dec
inc
add
mov
inc
add
sub
add
inc
add
mov
add
lock
add
addb
js
add
js
add
outsb
inc
add
add
add
inc
add
dec
inc
add
cmp
add
inc
add
sbb
add
inc
add
cld
inc
add
lock
add
loop
add
into
inc
add
mov
inc
add
xchg
inc
add
mov
jl
add
push
inc
add
inc
inc
add
ss
add
es
add
sbb
add
testb
ljmp
add
inc
add
pushf
inc
add
mov
add
add
inc
add
pop
inc
add
dec
inc
add
ds
add
cs
add
sbb
add
inc
add
incb
add
inc
add
in
inc
add
fiadds
add
inc
add
add
add
mov
add
add
add
add
push
inc
add
add
add
sahf
inc
add
mov
add
add
add
add
addb
add
push
add
inc
outsb
add
insb
inc
gs
jb
outsl
jb
add
add
push
gs
popa
jb
insl
gs
jb
add
inc
dec
inc
dec
xor
cs
insb
add
or
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
outsl
insb
xor
cs
insb
add
gs
cs
insb
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
je
popa
insb
inc
jb
add
push
gs
popa
imul
outsw
add
add
outsb
dec
jne
gs
add
and
gs
jae
dec
jne
gs
add
add
gs
je
dec
jne
gs
add
sbb
push
gs
fs
imul
outsl
jo
inc
imul
gs
imul
bound
gs
add
add
push
jne
jae
inc
jbe
outsb
je
add
add
gs
je
inc
jbe
outsb
je
add
xor
inc
jb
popa
je
inc
imul
gs
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
sub
popa
je
inc
imul
jns
add
filds
push
jb
je
inc
imul
gs
je
push
imul
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
and
inc
gs
popa
imul
outsw
add
popa
je
dec
popa
imul
daa
add
insl
outsl
jbe
inc
imul
jns
add
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
add
push
gs
jbe
outsb
je
add
gs
gs
imul
inc
gs
gs
inc
imul
jo
outsb
inc
jbe
outsb
je
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
dec
inc
dec
xor
cs
insb
dec
dec
out
sub
stos
scas
cmp
enter
jmp
leave
loopne
movsb
adc
mov
xchg
xor
add
dec
pop
jge
jle
mov
pusha
cmp
inc
jg
push
loopne
pushf
in
in
cs
xchg
sbb
dec
mov
divl
or
scas
negb
pop
lds
push
in
cltd
cmp
das
cld
jmp
pop
jo
int
es
push
adc
mov
sub
insb
test
push
mov
add
xchg
fcom
pop
mov
repnz
subl
or
mov
jns
sub
pop
inc
push
mov
icebp
mov
pop
out
mov
lcall
lock
icebp
jae
xor
popa
push
push
leave
or
into
in
incb
out
adc
ja
xchg
mov
in
pop
mov
call
lret
loopne
mov
scas
jae
js
loope
insl
mov
adc
sub
ret
pusha
inc
jg
and
mov
pop
lods
pusha
rcrl
sub
or
arpl
jns
lahf
pushf
jge
adc
sbbb
or
adc
test
sub
aaa
repz
add
push
sbb
dec
inc
shll
ljmp
sub
push
push
adc
iret
adc
imul
cmc
and
sarl
stos
movsl
mov
xchg
mov
fsubs
and
jnp
jp
adc
das
into
mov
idivl
and
inc
lret
xchg
aaa
ss
jno
add
popf
sbb
push
dec
or
pop
sbb
lret
in
test
mov
sbbl
clc
pusha
adc
push
inc
ss
loop
or
hlt
pop
or
in
mov
inc
jmp
xor
xor
lcall
subb
fs
push
and
jno
pop
xchg
or
fidivl
sub
xor
fsubrs
inc
leave
pop
push
orl
scas
mov
movsb
pusha
bound
das
inc
jno
test
lret
mov
mov
adc
in
adc
adc
das
and
and
adc
outsl
lods
mov
jb
mov
loope
fs
xchg
add
xchg
mov
enter
incl
jmp
stos
ret
leave
add
and
cmp
mov
jae
insb
lods
or
adc
jl
xchg
fnsave
mov
aad
fmul
sub
imul
push
push
inc
dec
and
push
rorb
xchg
jp
popf
insb
push
dec
repz
mov
mov
jle
cmp
cmp
dec
cli
fadds
xor
dec
cmp
fdivl
fmul
sub
dec
mov
sbb
sahf
cmp
adc
dec
pop
out
roll
pop
outsl
xchg
mov
mov
scas
xlat
rcl
icebp
cmpsl
loope
cmp
or
into
xor
xor
loope
mov
and
xor
xchg
leave
in
mov
ret
daa
fnsave
cmp
loope
faddl
lods
fstpt
scas
imul
pop
pop
in
test
mov
lock
dec
or
push
shl
mov
mov
cs
stos
cwtl
mov
sub
outsl
jb
stos
dec
mov
divb
sub
push
mov
les
add
mov
push
xor
xor
nop
test
adc
or
jg
adc
push
fstps
insl
jns
int
and
mov
xchg
or
arpl
jmp
push
sbb
xor
add
mov
xchg
or
dec
dec
cmp
mov
fdivrl
mov
mov
mov
xchg
in
xchg
rclb
lods
mov
jno
sub
repnz
rorb
cmp
fstl
adc
ds
addl
out
or
add
and
fabs
pop
fldenv
lds
popf
mov
or
sub
push
orl
pop
aaa
pop
call
jbe
sahf
testl
in
ret
shrl
jne
xchg
fildll
testb
repnz
lods
imul
in
inc
sub
jmp
push
sti
fucom
pop
push
xchg
mov
jb
out
or
xchg
repz
pusha
dec
push
leave
fadd
adc
or
inc
dec
fists
stos
xchg
imull
mov
movsl
mov
test
jle
jo
push
dec
push
cld
movsl
mov
push
pop
sub
arpl
ficompl
or
daa
int3
std
bound
sbb
cmp
aaa
js
enter
movsl
sub
dec
xor
lret
ret
aaa
push
outsl
in
fwait
lods
fildl
mov
mov
add
cltd
xchg
xchg
xchg
es
sub
imul
mov
push
fidivrs
xchg
pushf
xchg
repnz
push
mov
jp
add
stc
mov
sbbl
test
xor
je
sub
lods
fsubs
mov
ret
aas
mov
in
dec
mov
test
jl
or
in
jle
pop
lods
nop
sbb
test
pmulhuw
add
jo
xchg
sarl
jl
cmp
nop
xchg
fdivl
dec
sahf
out
xchg
xor
xor
xchg
pop
roll
xor
ss
aad
mull
xchg
cmp
push
inc
loop
in
ss
add
lods
loope
mov
stos
mov
loopne
sarl
int3
mov
loope
pop
fistl
or
int
pop
arpl
clc
and
mov
mov
gs
dec
lock
jg
loopne
ret
lret
rorb
es
mov
dec
xor
andl
aad
xchg
dec
pop
mov
sbb
pop
mov
jg
stos
gs
loop
pop
int
adc
loop
cmp
and
rclb
inc
dec
js
mov
cmp
mov
jno
inc
push
sbb
je
push
cmp
jp
sub
dec
pusha
cltd
adc
fisubrs
lock
xor
data16
dec
nop
jp
cmp
mov
enter
mov
dec
and
add
dec
cmp
fxch
pop
xor
jbe
fistpl
insl
pusha
push
sbb
mov
aaa
lock
scas
xchg
xor
sbb
and
mov
andb
push
or
mov
ss
daa
fs
mov
xor
ja
scas
call
into
add
sub
daa
or
std
aad
outsb
sti
rcrb
sbb
jbe
incl
jle
pop
cltd
push
push
xchg
cli
repz
addr16
clc
nop
shlb
pop
push
pop
add
fisubrl
add
jl
pushf
mov
aam
adc
scas
out
cld
jp
adc
in
test
ljmp
jnp
popf
divl
mov
add
shlb
fisubs
test
push
jae
adc
sahf
dec
popa
clc
sarl
push
and
pop
movsb
out
mov
pop
lret
pusha
jns
xchg
popf
mov
lret
cmp
mov
stos
pop
push
fidivrl
mov
inc
mov
add
mov
or
sarb
nop
sti
filds
rorl
rclb
mov
rcrl
jle
cmp
pop
aaa
mov
lods
mov
jmp
arpl
fwait
dec
mov
sbb
gs
rorb
hlt
stos
hlt
cld
addr16
mov
sbb
sbb
enter
testb
pushf
les
lcall
lret
sbb
enter
jl
repz
or
insb
pop
repz
imul
sub
cmc
mov
lahf
lret
mov
push
ljmp
xchg
hlt
pop
test
into
ror
mov
jg
cwtl
popf
mov
loop
stos
jecxz
sti
cmp
dec
sub
cwtl
outsb
dec
push
jns
pushf
jns
das
xchg
cwtl
mov
and
or
iret
sahf
rcrb
je
or
rcl
stos
and
hlt
and
pand
pop
out
pop
sahf
mov
push
icebp
pop
outsl
rolb
ljmp
insb
xchg
push
sbbl
xchg
int
mov
lds
push
stos
aam
mov
fwait
insl
xchg
lcall
push
adc
or
in
jp
push
out
sbb
loope
out
jnp
outsb
xor
mov
cmpsb
cmp
inc
or
cs
add
mov
pushl
dec
aam
cmc
or
aam
pop
ljmp
sbbl
orb
imul
push
and
jle
scas
insb
jl
xor
outsb
jle
fnstenv
adc
and
pusha
xor
into
aaa
dec
xchg
sbb
out
insl
pop
fistpl
dec
or
adc
mov
stos
add
mov
cwtl
in
cmp
pop
jnp
out
pop
lahf
cmp
add
pop
jae
sbbb
mov
mov
fldt
xor
cmpsl
mov
shl
mov
mov
xchg
xchg
clc
pop
mulb
adcl
mov
pusha
push
pop
inc
inc
push
in
jp
pop
scas
pop
fs
jl
add
jp
inc
and
sbb
stos
int3
cmp
add
daa
addr16
hlt
das
fidivl
jb
mov
js
sbb
push
pop
loope
sub
bound
jmp
or
mov
ja
xchg
test
add
lods
xchg
push
xor
fcmove
repnz
pop
fld1
les
lcall
inc
push
out
outsb
inc
xchg
sbb
mov
sbb
jle
add
mov
rolb
push
dec
test
mov
or
shll
cwtl
sbb
nop
insb
xor
rcrb
in
or
pop
shrb
pop
sahf
addr16
sbb
not
aam
nop
jl
mov
jle
sub
jmp
adc
lcall
and
push
das
xchg
sub
adc
and
fistl
idiv
rcrb
scas
das
xor
arpl
add
cmc
push
sbb
inc
xchg
ja
pop
xchg
ss
cmpsb
cltd
movsb
adc
or
test
stos
repnz
and
pop
dec
rorl
add
xchg
push
inc
mov
dec
sub
test
jge
pushf
shll
cmpsb
or
rcrl
and
dec
pop
xchg
cmp
in
adc
xor
hlt
dec
leave
jle
lret
adc
xchg
repz
shl
fildll
sbb
clc
movsb
pop
cli
addr16
rcr
lock
int3
pop
mov
ss
xor
pop
inc
rcr
sti
inc
cmp
jl
rcrl
fdiv
xchg
sbbb
push
fnsave
xor
pop
jb
inc
std
std
dec
aaa
pop
movsl
hlt
mov
jbe
iret
sub
in
in
fdivrl
and
ljmp
add
daa
dec
ffreep
mov
adc
sbb
and
pushl
inc
dec
inc
cld
out
into
or
cmp
hlt
and
pop
pop
mov
movsl
inc
xorl
stc
fstpt
adc
jno
adc
mov
dec
ljmp
imul
or
lods
scas
js
and
inc
fsubs
sub
and
sub
dec
out
rorl
test
cmc
sub
lods
mov
add
sub
cltd
inc
cld
add
pushf
notl
test
dec
push
mov
and
push
pusha
push
ljmp
lret
test
aad
or
int3
flds
movsb
cli
loop
fcoml
jns
shrb
stos
imul
mov
data16
jle
pop
cld
bnd
push
mov
int3
fcoms
out
fldl
outsb
arpl
mov
daa
xchg
shrl
and
pop
mov
add
movsb
and
hlt
dec
mov
jnp
dec
jle
ret
push
adc
sbb
sbb
es
jbe
lahf
push
subl
dec
popa
adc
inc
mov
mov
mov
sub
call
jo
mov
sbb
cmc
shlb
sahf
jg
clc
xor
mov
cmp
lahf
cmpsb
inc
pop
movsb
daa
sub
dec
fiadds
mov
int3
add
adc
int3
dec
test
aam
bound
pop
pop
lahf
and
xchg
fsts
xchg
mov
jb
pop
shll
jb
cmp
push
pop
adc
and
sub
loope
icebp
loop
notb
scas
jno
and
add
sar
add
repnz
jo
loopne,pt
sbb
pop
push
lret
push
xor
or
gs
in
stc
outsb
mov
push
aaa
xor
jge
lret
popa
enter
inc
mov
cmp
push
or
push
daa
popl
cmp
int3
stos
jge
in
add
lods
sub
dec
stos
lods
cli
inc
movsb
and
jmp
stos
mov
inc
stos
jae
xor
sbbb
scas
test
jne
mov
ljmp
stc
push
mov
jne
jmp
xchg
sbb
inc
xchg
jno
pop
push
adc
pop
negl
pop
cmpsl
clc
adc
mov
sarb
inc
cwtl
fs
dec
pop
jp
or
jbe
cld
sbb
movsl
out
xor
cmpsl
and
mov
fs
testb
xchg
es
inc
mov
in
dec
lahf
push
or
add
mov
mov
mov
sub
push
int
dec
imul
xchg
xlat
xchg
es
mov
cli
fsubrl
ss
std
frstor
dec
push
pop
incl
push
repnz
xchg
dec
insl
addr16
cmp
out
stc
dec
jnp
xchg
inc
addr16
pop
sbb
inc
insl
pop
hlt
pop
ret
test
das
push
xchg
fstpt
lret
sub
push
pop
in
jno
add
xchg
addr16
fidivrs
int
scas
xchg
stos
test
sbb
hlt
xchg
or
jnp
js
xor
stc
bound
divb
pop
add
mov
xchg
cmpsb
sub
jno
rep
push
cmpsb
dec
pop
cmp
inc
mov
movl
mov
push
xchg
xchg
pop
lret
scas
arpl
sbb
cmp
xchg
mov
aas
sub
pop
in
push
js
xlat
jno
xchg
dec
sahf
jo
dec
incl
xchg
aam
dec
iret
push
sbb
xchg
dec
ss
lock
daa
inc
and
icebp
or
orps
cmp
pop
mov
or
inc
pushw
shll
cltd
mov
rcll
clc
fstp
pop
cmpsb
insl
in
pop
mov
or
inc
mov
or
sahf
fbstp
cli
adc
ljmp
add
cltd
push
xor
mov
sub
pop
pop
stos
testl
mov
loop
enter
fidivrs
push
movsb
addb
lods
adc
stos
sub
jne
stos
push
dec
int
sbb
jmp
mov
sarl
idiv
mov
fldl2e
aaa
add
cmc
inc
daa
dec
lret
hlt
pop
aam
ficompl
fs
call
repz
mov
daa
jmp
int3
js
or
mov
icebp
leave
test
dec
fsts
xor
ror
jns
fsubl
jb
imul
das
outsl
enter
cmp
inc
mov
cmpsb
jge
xlat
xor
mov
in
cmp
mov
sbb
call
roll
pop
xor
outsl
adc
je
mov
push
int3
jmp
sub
dec
lcall
dec
sub
or
sub
enter
fwait
inc
into
mov
mov
stos
das
sbb
sahf
cld
cmp
loopne
mov
roll
loope
mov
stos
and
sbb
adc
and
ret
xchg
inc
jecxz
cmpsl
push
pop
dec
jecxz
sbb
fsubrs
xor
pop
pop
or
shl
test
out
sbb
hlt
adc
je
push
dec
sub
adc
sub
mov
repnz
sub
push
arpl
fdivr
mov
or
movsb
inc
repz
sbb
jg
imul
sbb
daa
push
mov
mov
adc
hlt
push
mov
call
sbb
sub
lods
adc
cli
int3
hlt
dec
push
push
adc
cltd
inc
gs
fs
jp
call
jle
dec
imul
lods
cld
jge
stos
sahf
shrl
dec
cmpsl
loopne
inc
out
xchg
fwait
sub
push
adc
sbb
and
cmp
push
mov
jecxz
and
test
inc
in
jg
or
repnz
popa
es
xchg
sti
mov
ljmp
sbb
sub
jo
push
das
ret
lret
outsl
lods
test
cwtl
push
imul
cwtl
in
popa
out
jo
sahf
xchg
lock
or
insb
ljmp
mov
imul
ss
inc
arpl
cmpl
and
push
fbstp
add
mov
add
pop
outsl
ret
es
pop
in
xor
cmp
adc
xchg
test
and
pop
xor
adc
and
out
mov
test
lods
daa
sub
cld
sub
mov
sub
lock
pushf
jb
pop
add
push
push
lock
pop
jb
cmp
ficoms
fistpll
cmc
mov
cmp
out
xchg
xorl
sti
mov
leave
fstpl
xor
pxor
jg
adc
outsb
lods
loop
adc
pop
and
xchg
push
fmuls
ljmp
aaa
dec
mov
rcrb
mov
mov
sub
sub
sarb
cmpsl
cmpsl
pop
test
xchg
mov
pop
inc
fidivl
jg
and
mov
rolb
push
sbb
cmp
hlt
mov
xor
jp
jmp
addr16
adc
xchg
fistps
stos
in
imul
push
lret
mov
imul
pop
sbb
into
jns
push
sbb
shl
dec
cmp
mov
pop
insb
xorl
mul
adc
push
fs
mov
lods
xor
inc
jbe
or
dec
arpl
adc
icebp
push
lea
testb
push
and
sti
jle
inc
insl
mov
mov
testl
xchg
xchg
xor
push
jmp
xor
in
dec
or
je
push
data16
jo
dec
push
enter
jne
ret
leave
ror
add
dec
clc
inc
xlat
cli
in
movsl
mov
and
mov
lds
lahf
pusha
imul
jmp
rcrb
sbb
ret
call
sbb
push
cltd
gs
stos
xchg
lret
or
call
xor
jbe
aaa
inc
push
cli
in
rorl
sbb
or
add
mov
mov
outsb
mov
or
dec
popa
dec
jnp
aas
add
sbb
rclb
data16
cmp
ljmp
icebp
test
xlat
lretw
add
xchg
hlt
sbb
fmul
ja
test
fstps
test
dec
pop
xor
and
ja
dec
pushf
int
scas
or
mov
inc
push
cmp
sub
pop
mov
rep
es
js
popf
push
sub
icebp
and
jbe
pop
inc
repz
pop
lahf
fsubl
push
xor
add
ss
data16
ljmp
xchg
ret
loop
pop
lods
hlt
aad
orl
xorb
sbb
pop
lods
sarl
adc
es
mov
cmp
inc
mov
cmp
dec
xchg
xlat
adcl
mov
sub
ljmp
shrb
enter
bswap
inc
mov
fnstenv
xchg
cmpsb
in
mov
push
inc
in
xlat
add
and
arpl
arpl
sub
or
and
je
imull
ja
inc
test
lods
jo
add
lret
aad
cmp
sub
in
test
jge
cmc
or
xor
testb
jno
xchg
mov
stos
or
pop
cli
jb
jno
sbb
lods
aam
mov
mov
imull
mov
fwait
lock
xchg
cli
imull
cmp
cli
adc
jno
les
and
incl
test
sub
dec
push
adc
jl
or
call
je
mov
scas
outsl
clc
fldl
mov
inc
add
shr
frstor
aas
cld
xlat
xchg
pop
fcomip
add
mov
sarl
mov
test
and
cmp
daa
mov
nop
call
pop
in
syscall
movb
mov
or
outsb
mov
mov
cmpsb
xchg
leave
mov
fnstcw
shrl
imul
inc
add
pop
mov
adc
cmp
push
pusha
aas
jno
nop
pop
rolb
shrb
cmp
add
and
mov
mov
sti
sbb
xor
popf
popf
sbb
dec
inc
cli
mov
push
jb
dec
sbb
and
fsubp
int
mov
into
inc
dec
shlb
popa
xor
jne
fists
cmc
mov
jns
adc
and
push
mov
ja
aas
dec
fldt
dec
es
mov
mov
jnp
and
cmpsl
test
fistpll
pop
test
rolb
insb
and
xor
push
mov
js
stos
lahf
loop
imul
int
lret
fdiv
jo
pop
mov
jecxz
je
add
pop
aam
fldl2t
fistl
testb
add
push
out
out
fisubs
arpl
ret
adc
sbb
jp
xor
jae
sarb
mov
lock
into
test
mov
inc
out
shl
cmp
lds
repnz
mov
pop
and
and
mov
dec
cmp
aas
ds
fnsave
rcl
jne
sub
ds
clc
jg
push
in
or
cmp
sbb
icebp
xor
ret
aas
cmp
jmp
in
pop
push
pop
fildll
cld
adc
add
fisubrl
cmp
das
xchg
aad
or
lret
dec
loopne
pop
daa
pop
push
xchg
xor
inc
sub
or
lods
pop
add
pop
or
add
mov
sbb
xchg
cmp
xchg
mov
xchg
xchg
fisttps
ret
clc
gs
cmp
adc
bound
sahf
dec
xor
add
repz
in
fistpll
rolb
mov
rorb
pop
lret
sub
pop
push
mov
xchg
enter
stc
int
in
addr16
js
dec
cmp
pop
add
aad
hlt
in
pop
sub
hlt
dec
mov
in
sar
lods
jns
inc
stos
scas
or
jl
add
mov
adc
stos
adc
fcoml
fwait
or
inc
dec
ss
in
clc
inc
cmp
sub
mov
fdivp
push
inc
xor
sti
xchg
shlb
shr
movsl
sahf
push
or
jmp
mov
ret
rclb
negb
sub
lret
mov
sub
fstpl
stc
xor
fmul
or
bound
jns
pop
adcb
insb
jp
mov
pop
dec
aaa
push
fnstcw
inc
and
test
mov
in
xchg
insl
jae
or
push
and
mov
pop
jge
sbb
inc
and
cmp
pusha
jmp
int3
pushf
call
jge
in
jo
jl
add
popf
mov
rclb
mov
push
cmp
ret
cltd
xlat
add
lock
and
push
sub
sbb
xor
jecxz
lods
sarl
jne
ret
and
mov
cmpsl
dec
leave
lahf
cmp
xchg
in
loope
xchg
xchg
sbb
aas
mov
shl
lea
inc
xchg
enter
xlat
pop
pop
test
mov
adc
or
xor
inc
cmpsb
xor
mov
adc
add
fidivl
fs
or
aaa
or
stos
jp
out
sbb
mov
push
push
insb
fsubl
icebp
sbb
arpl
inc
enter
sub
cli
and
adc
into
ss
test
bound
mov
mov
inc
test
les
sub
cld
rsqrtps
test
cmp
paddb
in
sub
cwtl
cmc
loope
jae
pop
cmovo
mov
jns
adc
les
dec
int
sub
outsb
jmp
mov
pop
insl
mov
cmc
mov
sub
and
stc
dec
sub
lock
add
lods
adc
call
loop
cltd
xchg
push
in
lahf
mov
add
push
pop
sti
dec
scas
push
repnz
xchg
sarb
in
xorl
cmp
cmp
pop
adc
imulb
cmp
pushf
cmp
sub
nop
lds
and
cmp
addb
xchg
sbb
jg
inc
rcrl
pop
adc
in
movsl
test
sbb
cmp
lds
ds
push
leave
das
hlt
inc
or
loop
cmp
fidivl
cli
push
add
loope
pop
and
insb
in
je
aad
mov
shl
fwait
jae
xchg
jnp
dec
sub
js
add
mov
movsl
cli
xor
mov
divb
push
leave
xchg
push
cmp
sbb
and
test
popa
cmpsl
jecxz
xor
pop
outsl
mov
jo
push
mov
mov
les
clc
mov
xlat
mov
pop
xor
cmpsb
sub
leave
xchg
push
fildll
push
in
sub
and
dec
and
fnstenv
popa
fsts
pop
adc
xor
shlb
mov
aad
pop
mov
rcl
push
sub
dec
xor
xor
pushf
bound
ficompl
or
and
pop
pop
xor
pop
mov
jle
inc
sarb
mov
xchg
loop
and
ret
add
push
mov
out
pusha
es
dec
popa
jmp
aad
pop
movsl
fwait
sub
cmp
daa
cltd
adc
lcall
and
jp
jg
jbe
int3
cmp
add
jp
dec
fimuls
out
or
loop
jmp
negl
int3
mov
das
pop
int3
fbstp
dec
push
xor
in
in
aad
lret
sar
or
into
dec
push
rorl
rcl
mov
cli
out
in
xchg
div
inc
pop
outsl
shrl
addl
ret
loope
pop
jp
sbb
out
aaa
pop
je
xchg
cmpsl
repnz
lods
mov
add
jg
std
pop
movb
pop
loopne
xor
mov
cmpl
sub
ficomps
mov
adc
mov
cmc
add
or
mov
add
pushf
dec
add
sub
fldcw
jno
mov
xor
mov
mov
jne
inc
imul
mov
xchg
in
and
jp
or
into
dec
lock
push
and
mov
pop
jo
aas
iret
mov
hlt
imul
fdiv
test
xor
test
xchg
dec
pop
xor
in
mov
gs
add
mov
aam
or
mov
adc
imul
sbbb
ljmp
in
adc
or
pop
shrb
xor
dec
fwait
jnp
push
scas
sti
dec
sub
adc
leave
ret
mov
mov
adc
andl
int
jle
hlt
fldt
cmp
lds
pop
mov
cwtl
int3
mov
pop
es
xchg
inc
cld
ja
mov
setno
dec
xor
repnz
jmp
dec
das
mov
xchg
stos
rcrb
xchg
fstps
rcrb
sub
cmc
aaa
mov
mov
mov
push
pusha
insb
call
push
std
or
mov
mov
pand
into
bound
mov
dec
test
cltd
push
xor
dec
add
aaa
popf
lea
aam
mov
cmc
inc
aad
gs
mov
mov
cmpsb
shlb
ljmp
sbb
push
xchg
pop
or
outsb
mov
pop
ss
mov
sbb
jb
cld
imul
aad
or
sti
repnz
mov
jle
xor
imul
ja
jne
xchg
xchg
mov
sti
sti
jbe
andb
addr16
push
mov
inc
cmp
das
sbb
ds
fs
jns
aad
sbb
sub
mov
dec
fnstenv
and
ss
fsincos
pushf
and
adc
push
in
addr16
sub
in
push
mov
repz
xor
movsl
push
jbe
sti
popa
push
or
pop
ljmp
sbb
lcall
cmp
lcall
sbb
pop
mov
lds
movsb
pop
cmpl
repnz
sub
stos
ljmp
call
test
xor
add
ljmp
inc
insl
stc
lds
push
xor
lcall
imul
lret
outsl
mov
or
sub
rclb
stos
cmpsb
in
pop
inc
pop
cmp
and
and
js
xor
dec
enter
fs
fwait
dec
dec
jp
inc
pop
dec
sub
scas
cmp
jb
aam
insl
jge
lret
call
jne
outsb
push
pusha
in
push
int3
and
adc
clc
ja
dec
pop
inc
mov
sbbl
cmp
fiadds
push
push
fsubr
dec
push
adc
test
imul
mov
lret
into
pop
movsb
enter
push
push
scas
mov
mov
jg
mov
add
inc
roll
testb
jmp
out
adc
xchg
xchg
push
out
add
inc
rorb
sub
pop
xlat
push
insl
adc
mov
andb
cmc
cmp
inc
mov
xchg
sarb
mov
jmp
dec
xor
jg
fwait
inc
ljmp
rclb
inc
loopne
cmc
xchg
dec
adc
jnp
cmp
imul
add
or
aad
lcall
push
movsl
mov
stos
sbb
repz
mov
rorb
je
inc
cwtl
xor
sub
outsl
scas
and
popa
xor
push
inc
mov
scas
insb
jnp
cld
sar
dec
and
or
xchg
pop
scas
movsl
popa
push
orb
imul
sbb
mov
shll
dec
fs
out
jp
adc
lret
mov
add
xor
inc
pop
mov
xchg
dec
ss
pop
test
scas
pop
mov
jl
popa
and
inc
into
jo
xorb
jo
pop
hlt
fs
insb
mov
inc
out
add
jae
insb
mov
cmpsl
fwait
adc
in
sub
outsb
pop
dec
insl
sbb
nop
mov
movsb
out
inc
lcall
addr16
fiadds
sub
int
repz
and
inc
lock
adc
ja
stos
push
sub
mov
test
iret
leave
dec
push
rorl
pop
sbb
aam
icebp
aam
ret
test
pop
or
inc
jg
mov
aaa
fistps
repnz
ljmp
push
nop
adc
jmp
cwtl
lret
lcall
xchg
lcall
lods
mov
ja
xor
cmc
mov
ss
mov
sbb
sbb
sbb
mov
inc
std
mov
sbb
jmp
or
outsl
dec
mov
mov
adc
xlat
push
rcrl
inc
ret
roll
imul
mov
cmp
movsb
xchg
add
sub
cwtl
cs
or
mov
rcr
ror
or
imul
and
idivl
push
ficoml
mov
lods
loope
fdivrl
pop
pop
subb
das
pushl
sahf
fdiv
orb
rolb
fs
pop
arpl
adc
sub
scas
add
mov
dec
xor
sub
cmp
rcr
int
sahf
xor
int
jo
jo
fiaddl
mov
pop
mov
movsl
test
jmp
aad
enter
movsl
pop
add
mull
lea
adc
mov
ret
pop
and
stos
hlt
div
and
sub
mov
cltd
iret
mov
clc
jecxz
mov
out
inc
les
cmpsl
mov
push
cmc
repnz
imul
pop
xor
lds
movsl
lret
xchg
jmp
mov
cmp
xor
sahf
fwait
repnz
out
sub
testl
ljmp
or
jge
xchg
jp
dec
sub
push
sub
fs
add
xlat
cld
add
jno
xchg
loop
test
inc
leave
insb
xor
push
mov
dec
xchg
negb
into
mov
rorb
cli
imul
pop
mov
mov
cmp
add
bound
pop
imul
out
stos
enter
roll
loope
aaa
jb
stos
orb
fcomps
push
adc
or
and
cmp
add
mull
push
push
push
xchg
add
dec
and
cld
test
popa
ffree
mul
es
push
inc
adc
inc
sti
sbb
adc
shrb
popf
sahf
shlb
mov
ss
out
push
inc
bswap
cmp
push
mov
repz
loopne
test
test
subb
inc
pop
movsl
push
add
pop
jmp
pop
cs
jae
cmp
mov
adc
lods
adc
test
xor
and
or
dec
out
cwtl
push
ss
lret
or
sbb
push
dec
mov
lea
jne
imul
rcll
dec
sub
in
fstps
mov
mov
stc
and
leave
push
jge
adc
mov
addr16
add
pop
incb
jl
nop
and
sbb
pushf
std
mov
stos
rcr
fidivl
scas
test
lahf
movsb
xor
roll
fsubp
shll
mov
mov
fldl
cmp
xor
pop
lock
or
inc
repz
cli
lock
inc
jecxz
add
xchg
data16
dec
insl
stc
cmpsl
lret
mov
push
cmp
jnp
sti
aam
xchg
xorb
cltd
mov
lock
sti
add
cmp
lcall
push
jmp
loopne
in
cmc
mov
sbb
or
mov
sub
inc
gs
push
cli
jle
shrl
mov
add
arpl
leave
mov
lcall
push
pop
int3
aaa
mov
inc
xor
arpl
ss
adc
fisubrs
push
dec
fstl
add
movsb
mov
lret
fs
adc
test
mov
adc
or
in
andb
dec
push
lea
fimuls
jp
fsubrl
nop
sbb
mov
inc
inc
cld
sub
in
ds
das
push
in
mov
mov
dec
dec
mov
push
add
iret
repnz
pop
cmpsl
icebp
jmp
cltd
cld
push
mov
cmpl
cmp
pop
xchg
pusha
clc
mov
mov
adc
mov
sbb
popf
leave
sub
mov
daa
mov
lret
leave
and
ja
mov
add
iret
lcall
jbe
inc
sub
icebp
and
test
or
xor
fisubrl
stos
icebp
xchg
xor
in
test
in
rorb
inc
xchg
lcall
sbb
not
mov
xor
mov
sbb
mov
je
fimull
fdivrp
mov
ljmp
and
and
outsb
xlat
sub
ret
jne
add
or
fsubs
mov
enter
fbld
and
shl
fwait
in
pusha
data16
mov
pop
add
mov
push
shll
xor
xchg
fistl
sbb
or
popf
push
sub
imull
das
dec
aas
mov
adc
push
mov
push
scas
inc
mov
xor
arpl
les
sub
adc
pop
push
push
mov
scas
fists
ds
ss
stc
insl
movsl
in
roll
mov
jp
cmp
pop
push
mov
push
pop
add
lock
fistps
adc
add
add
sbb
inc
xchg
push
pop
jecxz
mov
movsl
or
push
imul
cmp
inc
aam
push
adcl
stos
mov
xchg
out
lea
push
es
mov
popa
xchg
mov
fcmove
sub
push
stos
ret
jp
jge
mov
je
and
jb
outsb
mov
scas
fisttpll
pop
out
lahf
outsl
cli
addr16
mov
cmp
dec
cwtl
ja
nop
popf
movsl
pushf
pop
xchg
insb
std
mov
cs
pop
push
data16
mov
test
loopne
push
adc
in
out
xor
packssdw
imul
hlt
jg
popf
cmpsl
xor
adc
bound
sarl
pop
outsb
cld
roll
stos
pop
push
jp
ficomps
fdivs
in
stc
jnp
insl
mov
enter
sbb
roll
and
jo
xorb
sub
xchg
pushf
cli
lcall
movsl
test
and
movb
ds
adc
and
out
inc
xchg
ret
sbb
mov
jl
in
pusha
out
mov
push
mov
lods
rclb
dec
mov
mov
bound
lcall
sbb
mov
loope
sbbl
cmp
shl
or
sbb
push
idivl
in
movsb
push
pop
pop
and
divl
mov
push
jae
push
pop
ja
icebp
mov
jnp
pop
jbe
pop
jmp
inc
dec
clc
daa
test
hlt
fsts
popa
jmp
pop
xor
int3
leave
inc
insb
inc
movsb
inc
pop
xor
scas
ljmp
lea
sub
dec
pop
seta
sbb
and
or
insl
mov
repnz
adc
push
pushf
test
sbb
pop
pop
cmc
mov
pop
push
pop
dec
dec
xor
scas
xor
sbb
add
inc
dec
cmpsl
lret
mov
sub
pop
push
dec
lock
xor
jne
shl
movsl
mov
jae
fbld
push
add
or
push
mov
mov
insb
push
adc
jg
jns
pop
jg
mov
jo
xor
shrb
add
stc
loope
and
mov
adc
popa
xabort
pop
lods
sub
int3
jg
in
sbb
add
push
inc
sbbb
popa
pusha
cltd
push
and
sbbb
mov
add
in
push
jl
pop
jl
pop
cmp
jae
adc
pop
sbb
push
cmpl
mov
push
mov
mov
or
adc
inc
adc
clc
inc
fdivs
xor
mov
xchg
aam
mov
inc
ja
jo
and
loopne
xchg
jmp
imul
or
dec
pop
mov
or
push
inc
nop
xchg
scas
in
daa
leave
pop
mov
rcll
inc
sbb
pop
lods
add
xchg
inc
add
nop
cmp
sahf
pop
inc
sub
jmp
lcall
sbb
push
xlat
jle
xor
lret
mov
dec
sub
mul
into
shll
adc
insb
jmp
mulb
sbb
popf
dec
mov
popa
jl
mov
xchg
mov
roll
inc
or
inc
push
inc
sbb
testl
cmp
int
dec
dec
push
aam
imul
fwait
push
xor
pop
sub
aam
subb
fwait
in
push
inc
or
mov
inc
dec
mov
mov
sahf
es
fcmovbe
jge
sbb
icebp
enter
shrb
dec
adc
lret
pop
and
jae
test
inc
cltd
orb
mov
push
jae
xchg
gs
push
xchg
mov
push
enter
rcl
inc
add
xchg
mov
arpl
out
inc
lret
frstor
test
mov
stos
inc
dec
jnp
in
es
jl
and
insl
mov
fbld
loope
mov
das
addr16
or
inc
jecxz
mov
out
cmp
xchg
adc
js
pop
aaa
dec
leave
pop
inc
push
addr16
not
ja
lods
insb
int
lcall
mov
sbb
sub
fnsave
xchg
hlt
and
imul
lods
or
xchg
ret
pop
xchg
stos
je
lahf
and
and
pop
push
dec
xorl
cmp
loopne
roll
mov
gs
imul
movsl
xchg
cwtl
mov
test
push
adc
ss
ret
jmp
fadd
dec
adc
int3
shlb
jnp
rolb
mov
sbb
lods
test
and
sbb
jecxz
movsl
sbb
lret
sub
aam
bound
into
or
sbb
jo
xor
clc
inc
addl
jns
fcoml
xchg
push
sti
push
iret
cmp
js
jle
out
aad
adc
xchg
or
dec
shll
xlat
iret
mov
or
xchg
mov
ficoml
ss
or
and
jo
cmpsb
mov
scas
inc
cmp
pop
and
jns
int
ds
jnp
jl
stc
mov
imul
lret
inc
jmp
lods
mov
aaa
into
dec
or
cmp
jb
inc
pop
push
sbb
lea
and
push
scas
inc
enter
pop
mov
pop
jmp
jle
mov
sbb
push
ja
inc
adc
mov
push
jge
cmp
adc
aam
popf
or
mov
adc
out
frstor
xchg
pushf
stos
jo
mov
xchg
lea
xlat
xor
fstpt
adc
filds
movsl
outsb
jmp
xchg
mov
scas
push
imul
cmp
fmull
xor
mov
xchg
mov
xchg
jle
mov
xlat
outsb
out
imul
fsubs
in
jnp
leave
dec
pop
cltd
lock
mov
add
lret
inc
sub
xchg
lds
jl
or
into
sbb
pusha
cmp
shlb
aad
xchg
andl
sub
dec
shr
mov
xor
push
sub
idiv
loopne
sbb
jae
dec
jne
stc
outsb
in
jg
js
pop
push
cmc
loope
cmp
mov
mov
outsl
push
adc
mov
and
adc
adc
stos
or
lea
pusha
inc
inc
xchg
pop
sbb
lds
ja
mov
filds
or
jnp
dec
insb
lcall
inc
cld
adc
dec
adc
jge
dec
cmp
adc
xor
sbb
test
or
mov
sarb
repnz
test
xchg
fisttpll
out
inc
and
fs
dec
mov
movsl
mov
lods
gs
pop
xor
ret
nop
xorb
stc
mov
xchg
int3
pop
adc
insb
adc
loopne
mov
ljmp
adc
sbb
pop
mov
rcl
stos
loopne
dec
sbb
or
mov
jnp
movsb
stos
aam
adcb
cmp
shrb
mov
inc
clc
ficoml
stc
xor
xchg
or
lahf
iret
xor
add
movsb
in
mov
or
movsb
xor
sub
lock
mov
pushf
mov
xor
mov
push
mov
add
test
movsb
push
adc
mov
mov
and
sbbb
cmc
lods
sub
push
mov
push
enter
push
jecxz
nop
and
jmp
inc
sub
add
sub
clc
inc
mov
daa
dec
pop
xor
push
lcall
and
out
xor
and
scas
cwtl
shr
fsubrl
mov
pop
adc
loopne
cmp
in
sbb
lock
mov
out
rcrb
lret
fwait
mov
dec
mov
jne
cmp
aaa
xchg
ret
movsb
xor
fstl
lds
pop
push
fwait
dec
ss
pop
xchg
ljmp
aad
jb
stos
fidivrl
repnz
inc
inc
lods
or
mov
fisttps
push
push
xchg
popa
push
in
data16
jl
cmp
loope
das
lea
mov
inc
insl
inc
imul
sub
cmp
loope
repz
mov
dec
xlat
push
outsb
subl
sbb
lock
and
xor
xchg
mov
xor
mov
and
sub
push
cmpsl
popa
andb
pop
jnp
jns
rcll
loopne
insl
pop
adc
in
pop
fwait
cmpsb
fs
ja
xchg
jg
dec
pop
je
xchg
insb
pop
clc
adc
subb
or
outsl
inc
loopne
adc
pop
jle
fxch
test
xor
cmpsb
aam
xchg
jo
jle
push
jne
dec
lock
in
dec
mov
xor
cmp
popa
repnz
xor
dec
jle
cltd
cmpsl
jnp
push
nop
xlat
rclb
dec
xor
pusha
mov
adcl
sarl
adc
or
fdivrp
inc
xor
pop
pop
inc
out
ret
out
bound
andb
dec
inc
fildl
popa
push
lds
fsubs
or
sbb
out
int3
inc
sbb
xor
sbb
push
lahf
mov
dec
dec
out
nop
push
or
scas
fwait
mov
popa
jns
je
or
pop
xchg
pusha
or
add
lea
mov
stos
jae
aam
mov
popa
inc
test
loopne
dec
dec
lods
fsubs
scas
pop
jo
scas
cld
dec
testb
cmp
in
scas
xor
in
mov
pop
fwait
stos
pushf
lock
push
push
out
cmc
push
pop
fsubs
mov
les
shr
jmp
add
inc
ljmp
push
adc
mov
cmp
mov
mov
stos
les
orl
ljmp
lret
in
jmp
aas
arpl
repz
jns
mov
cmpsl
cmp
insl
pop
aas
pusha
mov
lea
add
loop
dec
xor
les
push
shlb
adc
xor
sarb
stc
xchg
jp
pop
or
push
jmp
lret
mov
adc
aam
js
jge
push
into
fildl
mov
dec
jno
shll
and
push
lahf
jb
out
dec
jl
jns
cmp
outsl
add
mov
mov
es
jno
push
cmpl
mov
cld
jmp
push
clc
daa
ja
add
mov
jge
fstpt
cmpl
jp
pop
or
or
out
jns
mov
ficoml
sbb
jmp
jle
inc
xor
daa
ret
adc
mov
inc
xor
mov
idivb
js
push
lcall
sub
cmpsb
jbe
jns
xor
push
jnp
int3
sub
add
lahf
je
daa
nop
repz
mov
cmp
sbb
iret
inc
cs
adc
sub
ja
dec
fdivr
popf
sub
mov
adc
push
rorl
pop
dec
sub
push
and
push
or
add
cmp
pushf
xlat
xchg
xor
pop
mov
pop
cmpsl
jl
sbb
bnd
or
or
mov
add
cmpsl
nop
push
out
outsl
mov
scas
sub
mov
xchg
xchg
gs
gs
sbb
aad
cli
rol
push
bound
incl
std
or
push
push
push
mov
sub
pop
push
push
push
lods
icebp
enter
xchg
mov
jo
xchg
clc
inc
stos
mov
sbb
push
jb
mov
mov
sub
lea
shl
pop
mov
push
xchg
dec
jae
rcll
jnp
or
add
adc
or
lcall
mov
notl
imul
mov
lds
cmp
dec
nop
sbb
dec
lret
outsb
push
cmpsl
add
shrb
sub
push
dec
sub
xchg
xchg
call
mov
push
aaa
xor
xlat
clc
add
sbb
arpl
int
cmp
xor
imul
inc
push
lods
insb
push
cld
cwtl
ds
adc
xchg
jbe
cmp
cmp
lods
out
icebp
ds
aas
jae
jbe
xorl
push
andb
inc
cld
jmp
lret
adc
pop
int3
inc
xorl
or
add
fldcw
mov
outsb
xchg
or
cvtps2pi
sub
sti
movsb
and
jecxz
out
mov
adc
inc
jo
nop
mov
movsb
loopne
adc
fs
xchg
pop
test
ljmp
scas
or
js
enter
test
lret
sahf
xchg
push
in
aad
mov
jae
push
insl
arpl
lahf
lret
out
lea
jnp
sbb
adc
jle
mov
xor
lahf
test
movsb
lea
je
or
mov
jbe
inc
imul
jl
add
adc
out
cmp
xchg
aaa
jns
fwait
sub
cmp
mov
pop
xor
fsubr
clc
iret
stc
test
xchg
or
adc
mov
pop
jo
or
push
aad
inc
loopne
addr16
dec
xchg
jbe
in
mov
rclb
or
cs
ds
xor
das
call
adc
aaa
jp
xor
rcll
leave
mov
fsub
loopne
or
xchg
jne
sar
cmc
popf
jb
xor
cmpsl
nop
push
dec
es
jp
add
movsb
js
pop
lods
mov
pop
pop
add
out
push
inc
je
enter
or
mov
add
out
xorl
sahf
push
cmp
loope
jle
xor
xchg
cld
in
dec
jg
push
xchg
sahf
stc
loopne
and
dec
or
push
sbb
dec
loopne
xchg
or
out
sub
jae
add
xor
dec
repz
push
mov
lds
xchg
mov
test
or
jmp
xor
lcall
sbb
mov
pop
out
sub
cmp
sbb
shl
xor
mov
and
pop
sbb
jp
push
xor
jl
mov
add
add
dec
push
lcall
push
pop
xchg
and
in
aaa
scas
daa
xor
or
or
inc
loop
jp
xchg
mov
dec
sub
in
mov
mov
push
inc
movsl
and
pop
lret
addb
test
jl
or
sub
rorl
loop
enter
dec
lods
push
movsl
jle
and
fcomip
clc
cmp
add
scas
sbb
jp
fmuls
jns
bound
or
filds
pop
mov
mov
sbb
xor
cmp
pusha
jl
or
inc
adc
add
mov
push
jp
inc
imul
push
ds
jns
xor
xor
and
xlat
clc
xchg
adcl
subb
mov
enter
pop
cmp
arpl
rolb
sti
cltd
xor
call
cmpsl
jns
mov
shlb
bound
push
cmp
lcall
hlt
sbb
insb
jno
fsub
je
push
rcr
fiaddl
add
mov
or
in
push
popa
fsubrs
js
fiaddl
sub
dec
stc
aas
les
arpl
dec
and
ret
ja
push
xchg
mov
and
fldl
stc
outsb
roll
out
pop
lahf
sub
cmpsl
insb
mov
loop
sbb
pop
cli
cwtl
mov
or
repnz
je
or
jb
adc
add
push
sub
dec
cs
movsb
lds
sub
fidivrs
aaa
das
in
mov
ret
shl
popa
sbb
sbb
xor
add
cmpb
iret
divb
cmpsb
rorl
xchg
inc
xor
push
or
pop
jmp
xchg
inc
xor
jp
jo
mov
int
aas
dec
fcmovnu
das
lret
pop
jmp
mov
das
or
fcmovu
cltd
xor
pop
mov
sarl
add
xchg
xchg
mov
arpl
adc
stos
xchg
shrb
cltd
adc
xor
aaa
xchg
jg
push
fimuls
mov
lods
xor
fcompl
jmp
xor
aam
ss
aam
sub
fidivrs
inc
or
sbb
lods
orb
aam
cmp
dec
outsb
push
xor
adc
jb
mov
mov
or
xor
push
jnp
je
cmp
adc
test
or
dec
out
mov
int
mov
jbe
mov
adc
and
cmp
pop
shlb
xor
clc
pop
inc
mov
cmp
jmp
cs
sbb
add
aam
push
inc
push
xchg
out
iret
leave
or
movsl
cli
iret
frstor
mov
gs
xor
les
aad
xchg
mov
push
fildll
and
cld
stos
fdivrp
mov
mov
sbb
ja
test
cli
ficoml
xor
fisttpll
in
aas
jp
lods
call
mov
movsl
xchg
mov
adc
adc
inc
push
cmpsb
stos
shll
shll
movsb
addr16
ds
jnp
jae
xor
mov
xchg
adc
xlat
mov
outsl
jnp
mov
in
xchg
cmpsl
xchg
insb
mov
jno
fists
int3
loope
adc
fs
adc
pop
cltd
fdiv
jmp
and
aaa
cmp
pop
scas
dec
adc
mov
js
mov
shll
ja
pop
jge
and
sbb
or
test
in
push
mov
xchg
sub
cwtl
stc
mov
push
xchg
data16
std
int3
sbb
add
test
push
sub
and
inc
ss
aam
js
stos
mov
outsb
xor
inc
pop
ja
push
fisttpll
ret
inc
ja
sub
movsb
scas
mov
jae
push
ror
and
loop
movsb
pop
cmc
pop
cmovg
dec
dec
mov
fcompl
in
aam
and
jmp
and
fisubl
faddl
sub
clc
xor
mov
subb
scas
xor
icebp
adc
push
out
in
mov
mov
insb
pusha
inc
add
sub
dec
xor
lret
lretw
stos
int
test
sarb
xor
inc
mov
push
xor
jg
in
mov
push
testb
dec
loop
hlt
enter
jb
es
js
jae
dec
sahf
adc
popf
adc
push
outsl
push
int
outsl
jo
and
sub
outsb
lods
pop
adc
xchg
mov
or
pop
in
mov
enter
mov
push
movsl
lock
xor
adc
xchg
xor
push
lds
or
jbe
adc
out
inc
out
sub
sub
std
movb
mov
das
rcrl
mov
das
stos
cmp
xchg
mov
ret
xor
ret
mov
out
out
cltd
fcomp
in
inc
imul
outsb
ja
mov
ret
pushf
dec
jp
sti
mov
mov
mov
jmp
mov
iret
test
loope
mov
push
test
add
cmp
cmp
call
adc
pop
lock
push
mov
das
aaa
inc
dec
shrl
shrb
ss
pop
sbb
aam
jae
lods
lds
or
pop
mov
push
cwtl
aam
jbe
ficompl
push
dec
dec
jle
dec
movsb
sbb
sbb
push
inc
out
out
or
js
inc
in
pop
insl
nop
inc
pop
ja
sbb
xor
je
adc
neg
repnz
jne
les
fnstenv
inc
inc
mov
fiadds
inc
mov
jbe
push
in
idivl
mov
sub
inc
shr
adc
pop
push
iret
loopne
mov
cli
jmp
xchg
daa
mov
les
push
js
in
loop
lret
icebp
lcall
cmp
sbbb
lds
loope
inc
dec
inc
rcrl
lods
scas
adc
jb
dec
push
arpl
daa
dec
movsb
pushf
pop
push
push
sub
mov
and
push
test
and
inc
mov
popf
mov
xchg
mov
pop
push
fmuls
and
pop
lcall
push
fiadds
adc
xchg
imul
sarl
cli
std
cmp
xchg
icebp
pop
mov
cltd
push
adc
sub
out
sub
popf
test
pushf
or
fistpl
or
leave
fwait
enter
mov
adc
push
repnz
mov
popa
arpl
jl
xlat
mov
push
add
push
je
imul
shrb
add
repz
mov
pop
cmp
mov
push
inc
shll
sbb
mov
test
loope
rcrb
fidivrl
inc
repnz
cs
add
lahf
or
das
pop
mov
cltd
jns
sub
mov
rclb
adc
js
stc
mov
out
sbb
jmp
mov
in
lcall
jbe
js
sbb
jge
push
mov
jle
ret
bound
in
rol
stos
dec
insl
test
imul
add
aad
adc
aad
pop
clc
sbb
add
ja
mov
jmp
mov
test
sub
push
and
stos
pop
ljmp
cltd
sub
jg
pop
adc
inc
data16
mov
mov
dec
stc
cmpsb
sbb
mov
mov
icebp
jp
inc
in
daa
popf
and
xchg
enter
xor
push
rcrb
sbb
shll
ret
sbb
sbb
xchg
lret
ret
fnstsw
jno
sub
jo
gs
push
and
pop
mov
mov
mov
ljmp
mov
popf
and
sbb
outsl
inc
push
test
outsl
adc
test
mov
movsl
enter
icebp
jnp
push
add
xchg
scas
cmc
xor
out
aaa
sub
frstor
sarl
mov
scas
mov
add
add
xchg
dec
ja
push
lods
sub
mov
inc
cmp
push
jp
cwtl
or
jno
dec
jnp
shrl
fs
jecxz
jae
sub
out
imul
adc
or
inc
imul
jno
int
mov
xchg
inc
lcall
pushf
mov
stos
dec
pop
adc
push
jl
add
outsl
sub
pop
xchg
add
push
lea
leave
jb
loopne
inc
into
add
xor
inc
lock
push
xor
adc
push
inc
dec
div
xchg
inc
rolb
cltd
xor
icebp
mov
iret
xchg
xchg
jb
jp
sub
add
pop
das
and
jns
fldl
xchg
jmp
mov
xlat
or
popa
aam
dec
add
sbb
cmpsb
pop
fldenv
int3
out
xchg
jns
cmp
jo
movsb
iret
push
lds
xchg
sub
lods
fcomps
lods
sub
mov
ds
adc
enter
jno
xchg
out
mov
in
fdivs
in
jg
pop
xchg
push
imulb
push
push
push
rorb
dec
sbb
ljmp
cmp
or
sti
call
jmp
arpl
sti
mov
sti
sub
sub
daa
xorb
mov
pop
pusha
push
mov
xor
lods
jns
or
inc
loop
adc
push
inc
mov
or
je
bound
std
cmp
orb
dec
jle
cmp
add
or
scas
mov
mov
pop
inc
jo
ja
and
jno
xor
sbb
lods
cmpsb
ljmp
adcl
jle
push
cmp
mov
or
or
fstpl
mov
mov
push
and
rorb
adc
jle
push
repz
jmp
stc
pop
adc
cmp
sbb
jae
push
ds
pop
push
and
ror
dec
sub
rclb
and
dec
pusha
add
jae
jp
jne
xor
scas
aaa
xchg
loop
jl
sbb
inc
sub
or
fwait
xlat
ficompl
aam
aam
adc
and
sub
jne
push
addb
pop
add
mov
js
inc
mov
mov
loope
inc
xchg
jb
aad
push
sbb
fisttpl
sarb
mov
sub
and
in
xor
aad
inc
jmp
xor
lcall
in
push
cmp
cmpsl
xchg
out
imul
xor
pop
jmp
pusha
es
movsb
sbb
mov
inc
cmpl
and
xchg
rclb
xchg
jecxz
or
sbb
stos
nop
mov
dec
mov
cld
mov
push
ret
sahf
push
dec
aad
int3
and
ror
push
or
cmp
jle
iret
sahf
leave
xchg
add
call
mov
jge
push
dec
push
jmp
fbstp
bound
mov
sub
aaa
pushf
pop
aad
or
lods
jbe
push
andl
sub
jb
adc
push
pop
lds
fdivs
mov
pop
jnp
pop
xchg
xchg
add
xlat
pushf
mov
inc
or
popl
dec
hlt
outsb
mov
xchg
fcoml
and
movsb
cmpsl
arpl
xchg
sub
cltd
push
adc
mov
push
push
pextrw
scas
lcall
add
or
mov
mov
mov
adc
xchg
imul
pushf
pop
push
out
aad
or
ljmp
sbb
jecxz
mov
lods
add
mov
and
sbb
aam
push
add
pushf
mov
pop
mov
mov
cmp
lods
inc
mov
sub
imulb
data16
stc
nop
jecxz
pop
cltd
popa
loopne
mov
push
and
jb
dec
pop
jb
in
test
jge
pop
repnz
rolb
mov
in
jl
jl
stos
sub
pop
pop
ret
xchg
imul
mov
mov
or
test
ja
sub
add
lahf
or
adc
pop
adc
dec
sbb
mov
clc
dec
rorb
xor
add
mov
cmp
add
dec
adc
mov
push
cmpsb
fsubrl
xlat
and
xor
push
movsl
lock
je
ss
xchg
shlb
arpl
xor
lcall
jne,pn
pop
adc
scas
movsl
das
mov
ljmp
ja
adc
sub
outsl
js
loopne
push
xchg
xchg
cmp
add
cmpl
ret
mov
fwait
mov
xchg
das
xchg
rorl
pop
lcall
out
iret
js
movsb
push
clc
xor
mov
orb
jl
das
cli
lret
mov
jne
stos
cld
xor
jno
imul
sub
and
mov
data16
outsl
xor
mov
fcmovu
dec
jge
addl
sbb
add
fistps
push
mov
cmp
push
jb
shlb
jb
adc
andl
iret
in
repnz
out
mov
inc
outsl
cli
lret
sbb
inc
in
push
cmp
xchg
push
mov
mov
sub
add
cmpsl
jmp
mov
mov
pusha
push
pop
shll
push
dec
add
aam
ret
push
pop
and
jno
leave
outsl
pop
jbe
dec
cmp
je
mov
pop
dec
adc
ret
mov
dec
aam
pop
loopew
sub
mov
dec
cmp
jno
imul
pop
pop
xchg
cld
shll
add
out
mov
sub
jne
cmp
cmpsl
sti
popa
adcl
xor
jno
repz
inc
insl
pop
pop
lock
sub
cltd
jbe
mov
xchg
mov
notb
insl
gs
and
dec
sahf
test
add
and
add
push
sub
fldenv
or
or
jle
lods
in
out
xchg
mov
icebp
lds
xor
ja
test
jmp
pop
add
dec
push
fisttps
dec
ret
sub
rcr
dec
mov
mov
js
and
loope
imul
out
arpl
ret
jb
daa
out
stos
mov
fsubs
or
movsl
mov
iret
mov
xor
xor
insb
popa
dec
or
popf
mov
je
lock
jmp
cmp
test
pop
mov
ljmp
test
mov
aas
aas
inc
cli
aaa
stc
mov
insl
sbb
mov
repnz
test
jne
jge
mov
call
sbb
sahf
jno
cmpsb
lret
jb
test
and
cli
push
mov
inc
push
push
mov
fcomps
add
rcr
add
jp
paddsb
and
stos
rolb
jno
ds
test
lods
int3
push
stos
fisttpl
mov
pop
scas
sbb
add
fisttps
inc
lret
push
mov
adc
and
sti
mov
stc
xor
jmp
dec
rorl
mov
jnp
mov
sub
fildl
test
in
movsb
imul
or
jo
inc
popa
jnp
jnp
and
out
mov
jg
mov
pop
push
and
push
add
inc
fimull
insl
dec
mov
dec
movsb
lods
lret
aam
loop
or
xor
es
sbbb
dec
pop
sub
mov
lret
push
mov
xchg
pop
push
outsb
stc
xchg
lret
leave
mov
push
outsl
dec
imul
cli
or
mov
jge
dec
call
add
jmp
shll
ror
in
xchg
xchg
mov
out
pop
sub
mov
test
or
mov
sbb
inc
xor
or
push
jb
dec
popa
xchg
fnop
je
fwait
movsb
test
pop
mov
mov
das
add
ret
fidivrl
mov
sub
aad
insb
call
or
xchg
mov
mov
mov
and
pop
mov
cs
pusha
cmp
jbe
rorl
imul
cs
fnstenv
sahf
call
ja
xchg
mov
inc
xchg
repnz
push
and
aas
mov
inc
push
enter
xlat
es
out
sti
pop
and
push
xor
jns
js
arpl
add
xchg
push
xor
dec
inc
bound
test
lock
popa
hlt
in
mov
sub
popa
push
jns
xor
je
sub
or
or
dec
sub
aas
lods
jne
fisttps
fisubrl
add
outsl
or
out
cmp
xor
sub
pop
int3
idivl
sahf
test
push
js
fisubs
mov
daa
sbb
iret
adc
xor
sahf
dec
jo
dec
aam
cmp
and
out
xor
nop
or
fisttpll
add
jg
out
xchg
fs
add
insl
cli
mov
rclb
xorb
loope
mov
mov
es
out
add
mov
sbb
jns
and
xor
dec
int3
push
sub
mov
xor
popf
sbb
fadds
mov
and
aad
push
addr16
loopne
inc
dec
fs
shlb
xor
mov
rcr
imul
fisubl
mov
rcll
aas
movsb
mov
es
sti
add
jo
movsl
push
inc
cld
mov
mov
xchg
jnp
notl
rol
stc
pop
loope
and
lds
pop
xchg
imul
push
push
mov
push
push
fstpl
sbb
pop
push
or
pop
dec
loopne
ret
mov
or
insb
mov
or
sahf
sbbb
mov
ret
mov
stos
sbb
xchg
stos
out
leave
sbb
daa
mov
mov
cmp
mov
cs
pop
icebp
fldenv
stos
loopne
jb
push
cmp
xor
rolb
aam
cmpsl
push
les
mov
int3
jns
mov
sub
dec
stc
nop
or
mov
out
in
int3
scas
ret
in
das
adc
xchg
cmp
lahf
xor
dec
outsb
dec
mov
sub
xor
sbb
dec
and
orb
sarl
cltd
jge
mov
je
pop
imul
mov
clc
aad
pop
outsb
shll
arpl
in
imul
xor
xchg
mov
mov
or
movsl
cmp
ret
rorb
dec
and
aas
in
and
mov
dec
loope
push
ret
jo
push
sub
sbb
push
pop
rclb
push
mov
inc
bnd
rorb
jge
and
mov
add
and
test
rorl
xchg
fstps
push
cli
push
lds
sub
jmp
out
xchg
jp
dec
or
cmp
jle
xor
hlt
mov
mov
xor
pop
rorb
frstor
push
sar
icebp
dec
inc
loop
insl
adc
pop
jg
pop
call
xchg
push
in
xchg
jmp
mov
dec
das
xchg
push
cmp
add
in
xor
mov
jb
jecxz
int
lods
cwtl
push
cltd
xchg
push
insb
gs
sti
push
or
pop
lods
fsubs
repnz
ljmp
inc
clc
inc
inc
icebp
andb
outsl
jne
adc
add
mov
xchg
scas
mov
jae
xor
adc
xor
and
addl
dec
scas
adc
int
jg
or
call
fcompl
xor
or
mov
repz
ja
sub
xchg
aam
dec
or
loopne
out
loopne
mov
sbb
or
mov
and
inc
jnp
testb
adc
outsb
mov
pusha
hlt
mov
std
mov
fidivs
add
cmp
lahf
cmp
clc
frstor
pop
ljmp
xchg
scas
lea
pop
popf
mov
sub
mov
jae
add
pop
gs
subl
mov
pop
rclb
jp
and
inc
nop
pusha
xchg
cmp
movsb
jg
imul
jb
cs
xor
scas
push
xchg
pop
pop
dec
mov
les
jecxz
push
test
dec
cmc
sbb
inc
cmp
dec
and
xchg
insb
in
aas
imull
mov
xor
push
rorl
inc
pop
aas
aaa
rcrb
pushf
pop
movsb
xchg
mov
mov
pop
repnz
xor
ss
andl
add
xlat
sub
sti
xor
leave
pop
pop
sbb
and
or
stos
dec
inc
push
push
dec
adc
arpl
popf
xor
frstor
push
adc
mov
xchg
xor
jle
fwait
out
jle
mov
and
push
int
jmp
stc
cmc
push
mov
not
pop
inc
lods
mov
push
adc
jae
xlat
push
jnp
pop
jno
pop
shr
lock
aaa
pop
sbb
dec
pusha
cld
add
test
imul
repnz
sub
sbbb
sbb
xor
cmp
mov
data16
lods
sbb
lea
sti
mov
mov
jl
repnz
test
mov
mov
adcl
mov
rclb
or
fimuls
pop
mov
xchg
xchg
sub
or
mull
jge
mov
lret
aam
sti
mov
mov
sahf
pop
adc
cmp
add
pushf
ficompl
ret
test
imul
jo
bound
jno
inc
lods
sbb
cli
shlb
xchg
jmp
sub
push
fsub
aam
iret
hlt
lret
push
jo
movsl
dec
cmp
out
fisttpl
adc
ja
je
repz
popa
or
cmp
adc
push
loope
or
pop
int3
push
inc
sbb
rolb
stc
add
mov
inc
repz
in
pop
in
out
adc
push
mov
andb
xchg
push
mov
jb
mov
sbb
inc
sub
mov
in
ja
xor
inc
test
test
pop
pop
xor
adc
dec
cmpsb
pop
fsubrs
mov
jmpw
fdivr
cmp
orb
mov
mov
jbe
fwait
out
ficoml
mov
pop
mov
xor
xor
pop
dec
out
jmp
pushf
lods
cmp
xchg
inc
push
and
inc
rorl
jnp
call
jge
xlat
aas
jmp
push
mov
inc
dec
popf
jbe
add
jp
mov
adc
mov
mov
sbb
lret
outsb
popf
push
repz
fs
jmp
pop
cmp
mov
adcb
dec
aad
mov
push
adc
adc
mov
or
mov
mov
dec
pop
fiadds
sbb
mov
push
sbb
inc
lods
into
sub
mov
mov
cmpsb
jno
mov
out
aam
mov
inc
int3
mov
test
adc
cmp
push
pop
pop
sbb
cli
adc
pop
adc
mov
mov
fsubr
insb
jns
xlat
testl
dec
int3
sub
mov
pop
aaa
mov
xchg
insl
adc
fidivs
loopne
fs
addr16
cmp
dec
sub
icebp
mov
loope
xchg
les
sbb
pusha
shrb
push
out
aam
push
test
inc
pop
imul
adc
or
sub
call
push
jl
or
sbb
fsubrl
call
stc
inc
jne
scas
repnz
ja
aas
lock
or
push
mov
sbb
pop
popf
adc
jp
dec
pop
add
fwait
pushf
cld
or
jge
inc
jbe
fwait
data16
cmp
sbb
and
and
fbld
hlt
jmp
or
shr
add
mov
rcll
adc
das
in
dec
cmpsb
mov
xchg
adc
mov
into
ljmp
js
subb
sub
cltd
inc
mov
pop
xchg
push
push
push
fldcw
fisubrs
je
call
outsb
or
setge
push
push
sti
loope
test
lods
xchg
add
pop
xchg
hlt
cmp
test
inc
push
divb
dec
mov
mov
outsb
and
mov
daa
movlps
sarb
or
cmpsl
mov
pop
in
arpl
dec
adc
inc
rorb
insl
ret
push
filds
jmp
cs
fcmovne
ds
mov
stos
sar
jp
add
pusha
mov
fdivl
xor
xchg
sub
cmp
movsb
and
xor
xor
xor
push
lret
or
in
inc
sub
add
or
aaa
jae
jb
rorb
xor
xor
nop
and
sahf
xor
mov
nop
popa
stc
mov
cld
add
andb
mov
lods
xchg
jecxz
in
sbb
clc
xorl
xor
mov
fsubrs
lds
or
xchg
stos
minps
and
arpl
fistl
fcoml
lock
fldl
push
mov
dec
push
pop
mov
cmc
mov
lcall
cmp
fmulp
out
movsl
pop
mov
pop
sbb
jb
leave
cwtl
lret
jns
add
lahf
pop
pop
mov
testb
xor
mov
cmp
scas
xchg
outsb
icebp
int
xor
mov
xor
jns,pn
sub
int
lcall
inc
jbe
inc
and
in
lds
adc
repz
sbb
lea
jo
test
cmp
or
jmp
inc
mov
outsl
btr
jbe
cmp
or
jmp
sarb
cs
icebp
cmp
incb
jb
push
push
out
sub
sahf
and
jge
pop
dec
sub
xor
mov
add
or
imul
push
pop
jnp
sti
aam
movl
repnz
mov
jne
enter
cmpsl
inc
mov
xor
pop
lahf
addr16
inc
inc
push
pop
gs
dec
rcrb
mov
jmp
and
push
stos
ficoms
stc
call
push
jge
push
mov
fmulp
jmp
into
xchg
add
jne
outsl
inc
add
fnstenv
movb
push
fsubr
push
sbb
and
sbb
dec
push
inc
cmpsl
js
or
mov
dec
or
mov
mov
adc
or
pop
in
mov
mov
out
xorb
pop
rol
or
push
mov
jnp
add
push
dec
xor
jle
jmp
mov
subl
insl
dec
test
mov
ret
nop
movsl
pop
push
pop
rcll
lret
out
in
xchg
or
dec
push
test
xchg
adcl
daa
ja
pop
add
aam
outsl
mov
sahf
pop
mov
and
mov
jg
pop
push
sbb
sbb
jo
fnstenv
sahf
mov
cmpsb
xchg
stos
call
ret
lock
aaa
xor
cmc
orl
int3
enter
fwait
push
pop
mov
push
fcmovb
pop
pop
mov
mov
pushf
jg
pop
sbb
cwtl
dec
pop
and
ret
inc
push
sti
or
das
mov
mov
sbb
aas
gs
out
fstl
int3
mov
mov
mov
leave
cmp
or
mov
hlt
jne
outsb
shlb
mov
pop
leave
xchg
in
rorl
sbb
in
pop
pop
lret
xor
adc
out
jp
push
outsl
cwtl
decl
inc
push
jnp
push
ds
or
lcall
dec
insl
xor
adc
in
repnz
xchg
adc
xor
out
and
sbb
and
gs
fst
inc
arpl
fs
sub
jmp
lds
ja
mov
mov
push
cmp
cmpsl
cmp
jle
push
ja
lret
rorl
pop
jae
aam
pop
popf
jno
loope
xor
push
dec
adc
inc
clc
push
adc
and
sbb
or
fmuls
mov
shll
pop
es
pop
sarl
enter
lahf
clc
add
and
xchg
iret
xchg
sub
pop
mulb
push
int3
movhps
out
dec
mov
xchg
ljmp
cmp
outsb
shlb
outsl
aam
hlt
ja
adc
cli
orl
jbe
enter
or
push
push
lret
or
xor
add
jne
dec
dec
inc
popa
cmp
add
push
mov
mov
movsl
loopne
pop
push
mov
mov
mov
int
push
or
loop
repnz
sbb
mov
in
and
cs
aam
sub
jmp
jl
fisubl
dec
addps
jg
add
fcoms
sbb
pop
out
xchg
dec
xlat
or
cli
inc
push
add
xchg
insl
fstps
rcrb
push
xchg
xor
test
jge
jle
pop
sub
inc
mov
add
mov
std
xchg
pop
cli
mov
jo
jbe
pop
mov
push
and
or
std
push
incl
jmp
ds
js
push
mov
mov
xchg
xchg
pop
imul
or
xchg
mov
add
push
inc
int
mov
push
add
inc
lock
inc
xlat
mov
xor
adc
mov
jp
insl
dec
dec
cld
mov
push
and
dec
sub
rorl
test
cltd
fistps
mov
sub
push
sub
test
std
inc
lods
xor
scas
dec
xchg
ljmp
or
add
fs
jp
loopne
dec
movsl
cmpsb
xlat
enter
sub
mov
out
and
push
lods
ficoml
fsts
stos
inc
dec
add
pop
inc
xchg
das
add
ss
sub
push
insb
dec
fistpll
mov
pop
pusha
inc
push
pop
das
pop
and
into
cld
pop
xor
cmp
daa
cmp
add
add
out
popf
lcall
aam
out
adc
mov
cld
jae
cmp
inc
or
mov
rcll
jbe
int3
pop
mov
in
xlat
mov
dec
outsb
mov
mov
int3
push
cs
lock
fistpl
in
imul
add
jge
dec
out
leave
add
cmp
jbe
sub
mov
dec
aam
and
sbbl
in
movsl
scas
ja
and
outsb
mov
sbb
jne
shl
or
or
jmp
cmp
xchg
cmp
daa
enter
loope
cmp
andl
stos
push
push
xor
inc
test
add
add
daa
inc
xchg
fsubr
scas
push
pop
out
cmpsb
lock
push
repnz
xchg
add
pop
movsl
imull
es
sub
stos
jne
or
dec
lods
inc
xchg
sahf
or
jo
mov
sarb
popf
aaa
sub
add
xchg
sbb
dec
cmp
popf
inc
test
aad
jp
mov
adc
or
jbe
dec
fidivl
cmp
popa
in
ds
sub
call
mov
mov
cmpsl
stos
test
pop
mov
int
pop
mov
ret
pop
jae
sub
push
pop
js
lods
mov
add
inc
frstor
cld
fcmovnbe
mov
aam
mov
pusha
mov
jo
inc
xor
fwait
push
les
sbb
pop
xchg
mov
lods
sub
jnp
int3
cmpsl
sbb
pop
imul
cmp
clc
inc
pop
mov
xlat
cld
xor
jmp
hlt
iret
inc
outsb
push
aad
cs
rclb
cld
cmc
jbe
cmp
sub
cmp
mov
jecxz
jge
push
cltd
sub
aas
push
xlat
stos
and
iret
test
jl
outsb
or
jecxz
stos
mov
test
mov
ret
jbe
setl
dec
inc
movsl
push
mov
push
jo
aas
adc
shl
rorl
sub
sub
dec
jne
mov
shll
les
jns
outsl
pop
int
dec
inc
adc
push
je
lea
movb
fisttpl
gs
icebp
and
or
outsl
mov
mov
adc
add
in
std
xchg
mov
fildll
mov
loopne
pop
ja
inc
push
xchg
xchg
insb
push
jb
rcll
sarb
jno
fldt
mov
xor
cmpsb
mov
sub
xlat
std
pop
movsl
movsb
aam
xor
sub
xchg
into
xor
jg
popf
xchg
add
mov
add
stc
mov
and
xlat
outsb
mov
xor
cmp
jle,pt
and
push
sbb
ret
dec
cmp
nop
ret
or
cwtl
mov
cmp
mov
int
xchg
add
dec
jmp
pop
mov
jmp
mov
adc
push
cmp
mov
fwait
pop
rol
out
test
jne
cs
sub
dec
or
adc
iret
sbb
les
jg
into
mov
sbb
mov
jmp
ja
cmp
cmp
sub
aas
out
rcll
insb
sub
icebp
cmp
adc
out
xor
mov
xchg
sub
testl
jnp
and
or
loope
fiaddl
push
arpl
das
pop
jmp
xchg
xor
pop
pop
inc
push
out
xchg
mov
and
cltd
mov
mov
inc
enter
mov
add
xor
jmp
das
rolb
data16
fldt
rol
push
nop
movaps
rclb
push
sbb
sub
rclb
dec
jge
jo
mov
xchg
sub
out
cmp
pop
bound
sub
adc
aam
imul
push
inc
xor
in
repz
ljmp
gs
fcmovbe
adc
popf
bound
ret
and
pop
adc
fbld
sub
pushf
xor
inc
aad
push
ret
icebp
aaa
fcmovu
sub
mov
nop
fldenv
fs
push
xchg
push
ds
mov
jb
jle
subb
push
notb
or
loopne
or
add
loope
xchg
xor
fwait
or
mov
cmpsb
sarb
xchg
mov
xor
adc
movsl
or
and
push
fnstcw
lahf
test
add
sbb
cmp
jno
xorb
xor
aam
stos
push
stos
ret
aas
xor
rorl
movsl
push
jb
aam
add
pop
jne
lods
rcrb
jmp
sarl
enter
cmp
jae
popa
and
andl
hlt
cmp
push
mov
out
pop
xor
mov
inc
jle
push
sahf
cmpl
nop
mov
imul
je
adc
outsb
stc
shrl
dec
xchg
fildll
xchg
mov
pop
mov
adc
mov
rolb
gs
xchg
dec
or
call
sbb
xor
repnz
rorl
aad
insb
jo
inc
lds
bound
xchg
push
addr16
fwait
sub
outsb
push
and
sbb
loopne
xor
repz
cmp
mov
dec
leave
push
or
addr16
xchg
and
jl
lahf
jp
sti
std
mov
clc
adc
mov
sbb
loope
iret
data16
dec
push
fstpl
mov
outsb
xlat
cmpsl
cmp
movsl
imul
aaa
shll
pusha
push
or
cmp
add
mov
cltd
call
sub
pop
lcall
imul
movsl
jns
xor
xchg
out
cmp
push
jl
mov
inc
and
and
imul
iret
popa
add
ret
outsb
cmc
adc
cltd
loop
scas
sbb
lods
or
adc
mov
cld
in
fiadds
add
cld
adc
dec
pop
jae
pop
sbb
rorb
out
arpl
dec
sub
lock
jae
icebp
call
lea
cmp
rcr
xor
enter
leave
jbe
pop
jbe
jecxz
sbb
jle
and
push
pop
les
dec
or
mov
jae
mov
jl
jmp
or
inc
dec
cmp
fwait
cmp
jb
jmp
call
sub
mov
ss
cld
push
les
rclb
pop
js
movsl
inc
or
cwtl
pop
stos
inc
js
xor
test
std
mov
das
bound
jl
sbb
popf
jo
iret
fs
cs
cmp
pop
daa
jb
xorl
mov
sarb
data16
lret
cwtl
add
icebp
addb
sbb
jg
cmp
lods
dec
fdivl
iret
movzbl
mov
stc
jbe
sub
imul
ss
ljmp
mov
sbb
and
pop
cmpsb
je
cmp
iret
adc
xor
xor
or
xchg
arpl
out
dec
inc
lock
int3
xchg
out
mov
aam
repnz
push
mov
and
cli
dec
add
jbe
ljmp
push
sarb
mov
movsb
cmp
sbb
mov
cltd
push
cmp
jbe
xor
mov
es
movaps
xor
cmp
lret
test
mov
mov
rcrl
aas
xor
ret
mov
and
push
push
sub
sub
repz
leave
push
dec
sub
adc
cltd
fcoml
hlt
arpl
gs
pop
or
and
mov
push
mov
mov
dec
outsb
sti
or
fwait
movsb
call
inc
jno
jecxz
stos
xor
cs
xchg
clc
sti
or
mov
dec
aad
fnstsw
add
stos
js
ds
aas
jno
mov
sbb
lcall
nop
and
dec
dec
add
imul
xor
pop
adc
or
xor
movsl
lahf
scas
inc
inc
clc
dec
and
mov
push
add
xor
inc
sahf
sti
push
lds
inc
aad
add
imul
mov
insl
out
cmp
loopne
lods
and
xchg
ds
or
cwtl
adc
inc
adc
pop
jmp
mov
adc
pop
push
rorl
push
je
push
mov
adc
movsb
adcl
xchg
mov
xor
push
push
mov
add
lahf
lahf
mov
movsb
mov
mov
sbb
xor
adc
dec
adc
mov
lretw
jle
pop
ja
fbld
movsb
cmp
mov
sbb
pop
hlt
mov
mov
in
lock
jb
iret
sbb
out
sub
movsb
das
cmc
sbb
je
add
mov
lock
js
mov
mov
xchg
imul
jns
pop
enter
adc
lcall
push
dec
sbb
cmp
adc
add
fstps
add
inc
fists
cmc
stc
add
sub
sub
xchg
loop
ficoml
cs
sbb
loope
out
imul
jg
add
aas
test
mulb
jge
cmp
inc
mov
or
cwtl
adc
jbe
and
insl
fbstp
sbb
push
std
les
cmp
mov
cmpsl
adc
adc
dec
lret
stos
into
inc
hlt
push
jo
sub
sub
push
sbb
sub
test
mov
sub
addr16
cmpsl
push
jo
dec
lea
push
adc
sahf
ss
sub
adc
pusha
cld
push
adc
xor
push
sti
push
xchg
jp
mov
xorb
xorl
pop
ret
cmp
lcall
cmc
sbb
dec
ds
mov
cmpsb
and
das
sbb
xor
test
xchg
inc
push
movsb
rep
inc
or
ror
adc
popf
mov
push
and
xchg
out
aam
jo
sbb
pop
mov
and
jmp
clc
adcb
outsl
incb
mov
xchg
mov
dec
xchg
lods
data16
mov
data16
mov
mov
in
push
dec
stos
aad
inc
fistps
pop
clc
clc
hlt
cli
cmp
out
loop
xor
adc
push
push
je
inc
leave
fists
pop
jno
cmpl
mov
adc
mov
and
mov
pop
sbb
fdiv
sbb
push
and
push
and
jae
push
jns
pop
xor
cmc
and
jl
xchg
push
and
push
mov
sti
test
movsl
leave
cltd
insb
jecxz
rclb
arpl
mov
cmpb
mov
dec
push
push
and
jmp
push
scas
bound
test
and
jg
push
cmp
aad
sbb
dec
dec
pushf
shll
movsl
and
mov
ss
mov
nop
pop
fiadds
aad
add
mov
add
jmp
dec
mov
inc
xor
mov
dec
push
pop
test
stos
xchg
js
pop
jecxz
call
adc
add
imul
jne
add
lret
cwtl
inc
notb
lods
sbb
iret
out
push
pop
adc
mov
mov
addr16
scas
les
loopne
push
out
adc
in
data16
lock
inc
daa
push
std
bound
and
sub
insb
pop
sti
icebp
or
xor
xor
lret
xchg
mov
adc
push
andb
ljmp
inc
fstps
mov
ret
jno
add
stos
pushf
aam
decb
xor
adc
jecxz
stos
push
lock
cs
out
aas
xchg
add
popf
xchg
add
xchg
clc
sti
cwtl
fs
pop
pop
push
dec
icebp
lods
add
repz
or
mov
adc
xorl
sbb
and
in
mov
cmp
jp
xor
cli
out
gs
pop
xor
bound
ljmp
adc
inc
nop
in
push
sbb
push
sbb
mov
add
ret
xorb
xchg
sub
or
ret
push
jle
popa
shlb
inc
lret
add
or
jb
fdivrl
xor
push
inc
out
and
stos
add
push
mov
pop
hlt
ret
mov
popf
and
jmp
hlt
cmp
and
xchg
or
pop
addr16
sbb
and
mov
xchg
and
ret
test
lds
jb
add
ret
xor
jo
mov
mov
out
jns
adc
xchg
sub
xor
imul
pop
cltd
movsb
testl
pushf
inc
ljmp
dec
xor
mov
jp
cmc
fisttps
ljmp
pop
mov
push
sbb
imul
sub
rolb
nop
loopne
data16
loop
shlb
sub
and
pusha
push
clc
aad
inc
push
enter
rclb
or
cmp
out
jp
adc
cltd
xor
jnp
pop
mov
xchg
mov
sbb
and
sbb
push
nop
inc
fwait
push
rcl
adc
roll
pop
out
fists
push
sub
test
jae
jle
mov
mov
clc
cmpsl
sub
or
pop
dec
cmp
movsl
iret
and
lret
dec
arpl
fs
cmpsl
push
daa
push
xor
js
nop
insl
mov
cmp
scas
push
insl
fcoml
lods
std
je
push
mov
sti
sbb
jnp
jecxz
xchg
adc
jbe
cmp
sub
imul
push
cmp
shll
xor
mov
mov
lock
cltd
sub
pop
add
dec
out
ljmp
inc
popf
subl
pop
cmp
pop
popa
lret
push
cmp
ss
or
std
and
aaa
movb
or
jb
icebp
ret
fnsave
int3
mov
sahf
repnz
xor
mov
lret
push
inc
sbb
popa
pop
cmpsl
pop
shrl
cmc
inc
sub
mov
test
jg
sahf
dec
xchg
mov
mov
lcall
ret
jns
mov
jp
push
push
dec
movsb
jae
or
les
sub
xchg
jle
shl
scas
jo
call
fstpt
in
fsts
cs
pop
push
scas
movsb
mov
inc
test
pop
cmp
repnz
rolb
mov
mov
push
cld
ret
outsl
das
jbe
xor
fists
xchg
mov
cmp
and
loopne
and
cli
shll
js
mov
testl
adc
mov
imul
fiaddl
sbb
mov
push
dec
shrb
add
out
roll
ja
inc
cltd
testb
pop
sub
adc
xchg
mov
mov
jne
lods
xchg
insb
and
push
roll
and
out
test
cmpsl
outsl
rcrb
outsb
or
mov
inc
and
jp
lret
iret
popa
rcll
push
lods
push
or
adc
lret
cmp
xchg
mov
test
lods
mov
mov
inc
xor
repz
ror
ds
cltd
std
xor
jo
out
lods
lods
fldt
sub
mov
jb
sti
cld
push
cwtl
inc
mov
pop
dec
in
sbb
lea
cmp
or
dec
jp
sub
mov
add
stc
push
addr16
or
icebp
push
jle
lret
popf
or
inc
test
mov
cmp
ja
int
std
popf
add
ret
andb
jp
js
xchg
std
push
add
or
push
rcll
clc
xchg
out
in
add
in
cltd
sbb
xchg
stos
mov
push
xchg
lods
jmp
add
jge
movsl
dec
sub
addl
pop
and
jb
fwait
lret
sub
lret
enter
movsl
test
xor
xchg
adc
mov
jo
xor
xor
pop
mov
fstl
jecxz
repnz
ret
loopne
nop
mov
lods
adc
add
repz
imul
or
pop
or
sbb
inc
mov
push
dec
loopne
call
lods
iret
loopne
lret
xchg
cmpsl
fcmovbe
pop
outsb
ds
ret
pop
cmp
mov
mov
aas
cmpsb
insb
mov
sub
xor
cmpl
popf
andl
mov
test
jge
or
cmp
pop
movsb
ss
push
jne
or
mov
mov
jnp
inc
leave
mov
cmp
mov
and
xor
xchg
xor
xlat
and
int
mov
xor
dec
dec
pop
hlt
mov
xchg
jl
nop
pavgw
pusha
add
popf
fiadds
mov
rcll
sub
sbb
cmp
cs
decl
scas
ss
jg
add
pusha
adc
adc
mov
dec
cmp
sbb
aaa
mov
mov
stos
pop
mov
pop
outsl
xor
xor
fadds
notl
push
push
lcall
scas
imul
stos
mov
scas
adc
es
mov
roll
and
add
mov
shrl
cmp
ja
mov
psubsb
xlat
fidivs
out
cwtl
mov
mov
rclb
cltd
shr
jge
mov
mov
mov
scas
sbb
les
mov
push
imul
into
pop
xchg
aad
out
stos
aam
jb
ja
xor
cmpb
adc
mov
adc
sub
jle
push
insl
stos
inc
jne
dec
sbb
jle
fcomps
fdivs
jns
dec
push
loopne
sti
lock
push
scas
lret
xor
push
lcall
out
rcl
jg
add
fisttpl
pop
fdivl
addr16
adc
decb
mov
das
push
push
jecxz
es
idivb
lods
rcr
mov
arpl
mov
cmp
call
jae
dec
inc
hlt
int3
call
fisttpl
lcall
sbb
ja
test
adc
jne
test
xchg
or
jg
xchg
cmp
idivb
adc
adc
call
lcall
mov
jo
stos
fnstsw
inc
sbb
cmc
mov
cli
cmc
inc
mov
lret
xchg
jb
jo
ja
pop
mov
leave
ds
jl
xchg
stc
pop
leave
movsb
sbb
cmp
xor
idivl
push
add
mov
lret
rolb
inc
fbld
lcall
outsb
dec
add
in
lcall
mov
inc
xchg
xchg
pop
xchg
mov
sub
pop
or
ds
inc
shll
inc
jecxz
cmp
in
aas
pop
je
outsb
loope
call
xchg
cmpsl
ljmp
add
fwait
clc
push
xorb
sub
jb
pop
cs
push
push
outsl
in
mov
jo
pop
inc
pop
mov
arpl
mov
mov
mov
scas
sahf
in
dec
iret
mov
popa
jo
ljmp
dec
scas
loope
mov
addr16
in
movsb
rsm
or
and
xchg
adc
clc
sbb
cmp
out
xchg
pop
mov
push
pop
xor
fdivrl
jge
jns
push
popa
lret
push
mov
jo
xorb
cs
inc
push
lcall
fisttpll
sub
call
xchg
loop
adc
mov
repz
push
and
push
addb
fdivrs
dec
mov
add
or
push
insb
ljmp
lret
adc
inc
add
rep
push
sbb
sbb
pop
xchg
sbb
dec
sbb
sbb
mov
ljmp
xor
mov
sub
add
mov
adc
xor
loope
mov
cmp
outsb
mov
int
repz
shl
push
ljmp
cmp
loopne
jno
jp
xor
pop
or
lcall
sbb
lock
xor
pop
push
shrb
pop
pop
dec
pushf
js
cwtl
ss
fwait
dec
sub
movsl
cmp
push
bswap
xorl
addr16
dec
mov
pop
out
pop
push
fsubs
jecxz
sub
push
popf
jle
out
mov
dec
subl
or
jge
lcall
daa
into
stos
xor
push
arpl
fs
lea
sub
stos
pcmpgtw
xchg
fstps
and
stc
int
xchg
and
or
jnp
mov
sub
lret
dec
cmp
mov
mov
xor
sbb
jae
mov
add
aad
jns
insb
repz
push
loope
dec
sub
push
jne
inc
mov
sub
mov
ds
jg
xchg
mov
sarb
dec
mov
add
jae
mov
dec
popf
scas
xchg
mov
mov
xchg
data16
mov
pop
lods
sub
lods
mov
je
mov
je
xchg
sub
int
lods
fsts
fdivrl
pop
mov
leave
dec
mov
in
push
push
and
pop
mov
loopne
fadd
icebp
push
adc
sub
movsl
cmp
lret
ljmp
sub
into
cmp
push
cld
mov
shrl
arpl
adc
jecxz
aam
push
shlb
ret
repnz
jnp
jno
pop
cli
jo
mov
inc
sbb
ljmp
push
cltd
mov
lods
inc
pop
into
cmp
sti
push
mov
shrl
lcall
add
scas
cmp
xchg
les
dec
inc
data16
jae
add
imul
out
push
loopne
inc
cld
xchg
incl
sub
mov
dec
jle
movsl
call
mov
xor
clc
cmp
dec
shll
adc
adc
jne
ret
adc
inc
and
cmc
cmc
and
and
fistpll
loop
dec
es
or
into
out
movb
mov
std
jecxz
in
rcrb
dec
ret
adc
jb
sub
in
cmpsb
jmp
stos
enter
call
leave
mov
sbb
mov
lahf
and
nop
das
outsl
mov
or
add
and
mov
loopne
push
int3
mov
enter
adc
xbegin
add
push
lahf
sub
scas
aas
sbb
sahf
add
push
sub
fwait
or
mov
test
inc
or
mov
dec
xchg
lret
jl
fidivs
jne
dec
aas
test
sbb
mov
mov
push
mov
jne
mov
sahf
int3
push
xchg
xchg
popa
testl
jecxz
sub
and
mov
aaa
push
and
bound
mov
cld
sbb
cwtl
push
cwtl
js
sahf
int
mov
and
mov
lods
push
arpl
and
int
inc
and
shlb
mov
movsl
mov
jbe
popf
cs
jbe
fwait
leave
fmuls
jb
cld
lahf
sub
je
xchg
cld
repz
jecxz
dec
and
mov
faddl
jecxz
mov
xor
or
inc
mov
sub
pop
js
lret
push
je
dec
sub
lds
es
or
je
ss
and
data16
mov
push
icebp
insb
mov
pushf
xor
scas
push
add
xchg
clc
sbb
gs
xchg
mov
jmp
imul
sti
lock
icebp
stos
outsl
add
xchg
in
add
xor
insb
loopne
out
xor
fistpl
imul
or
rolb
xchg
mov
fdivrs
in
mov
arpl
bndstx
pop
ja
adc
mov
cmc
dec
and
jns
lcall
rcl
adc
xlat
in
sub
ja
ja
inc
sub
mov
or
aas
xchg
dec
jle
and
pop
sti
fisttps
jns
cli
pop
jecxz
add
adc
push
cmpsl
fcomps
cs
jnp
ljmp
fistpll
insl
sti
popa
xor
insb
test
mov
mov
pop
aam
roll
pop
push
fiaddl
sbb
mov
mov
loope
cmp
xchg
roll
mov
mov
movsl
ds
out
add
inc
cmpsb
pop
shll
mov
test
shll
lret
sbb
adc
mov
je
iret
test
mov
xchg
jns
aad
test
outsb
inc
scas
push
push
ficompl
mov
pop
adc
jle
jecxz
inc
jl
adc
cmp
mov
or
bound
mov
inc
mov
ja
inc
fdivl
push
xchg
xchg
dec
cmpsb
mov
mov
xor
jg
push
into
ret
cmpsl
daa
sub
pop
xchg
js
out
cltd
outsb
mov
jb
in
cmpsb
add
lahf
mov
lret
push
dec
mov
into
adc
add
dec
sub
insl
loop
xchg
mov
adc
bound
jle
fcompl
sub
mov
jle
ljmp
pop
fdivrs
shl
shll
sbb
jae
cmp
inc
fdivl
or
leave
mov
xchg
arpl
into
fisttpll
flds
mov
fsubp
sbb
scas
push
jns
stc
pop
movsl
fs
popw
ja
inc
sub
faddl
jmp
or
lea
jnp
sub
jo
fldln2
inc
push
fucomi
fwait
xor
in
scas
das
sub
or
inc
outsb
test
sub
cs
adc
push
or
mov
lods
loope
inc
pop
cmc
inc
jno
jecxz
lods
sub
in
leave
out
pop
mov
xor
push
cmp
ret
lods
xor
pop
or
cltd
inc
popf
mov
ret
mov
int3
mov
mov
inc
scas
jno
aaa
lea
mov
sub
lcall
stc
sub
dec
push
or
repz
pop
and
rcl
inc
das
loop
add
mov
sub
sbb
pop
lcall
or
xorb
repnz
dec
inc
push
jle
dec
insb
inc
test
push
out
sahf
jge
sbb
jnp
sbb
jns
cwtl
stc
dec
loop
add
inc
jb
mov
xor
jns
addl
or
and
test
imul
jbe
fwait
push
lret
xchg
jmp
test
add
xchg
push
and
rcll
mull
aas
lcall
insl
add
dec
mov
or
popa
mov
inc
daa
sub
popa
rolb
pushf
movsl
outsb
dec
lods
inc
pushf
cs
mov
inc
mov
adc
cmpsl
lahf
inc
mov
add
push
lret
adc
mov
adc
push
dec
lret
sbb
push
sub
incb
out
jmp
arpl
testl
sub
push
fistps
push
in
mov
xor
sbb
mov
pop
cmpsb
dec
out
lret
nop
outsl
test
pushf
mov
orl
jns
pop
les
pop
xchg
dec
sub
test
dec
jns
and
add
pusha
cmp
mov
jno
pop
in
fsubs
popf
ret
je
mov
xlat
test
jae
test
pushf
mov
jae
mov
dec
rep
add
add
xchg
aaa
mov
jl
lods
jne
mov
loop
andl
lock
jp
jne
insl
cld
rorl
sbb
cmp
dec
mov
das
mov
push
mov
cmp
flds
mov
mov
dec
pop
sub
mov
mov
lret
xchg
repnz
in
dec
cmc
fidivrl
fnsave
add
pop
ret
test
pushf
pop
movsb
and
je
pavgb
and
sbb
sub
mov
fists
xchg
fimull
inc
mov
sti
mov
and
into
jnp
cmp
push
xor
sbb
push
xor
sahf
xchg
ret
cltd
cmpsb
sbb
pop
cmp
mov
or
jp
sbb
add
cli
es
mov
mov
mov
xchg
ljmp
testb
and
shlb
ss
shrl
jae
lods
lods
mov
clc
push
gs
test
test
insb
out
xor
gs
sahf
mov
data16
rcrl
mov
inc
aas
fisttps
into
clc
aaa
or
jne
hlt
mov
xchg
cmp
addb
movsl
jp
inc
cmp
imul
mov
stc
push
xchg
cmpsb
cmpsb
ret
inc
adc
cmp
jecxz
push
test
mov
neg
jmp
or
dec
es
iret
mov
mov
cmp
outsl
testl
mov
mov
add
push
lock
nop
in
les
sub
cmpsb
mov
dec
and
in
jo
pop
inc
loope
mov
leave
adc
xor
mov
push
xchg
pop
loope
xchg
mov
pop
pop
sub
loope
xchg
loope
scas
cmp
imul
jae
jns
inc
in
test
out
cmp
pop
mov
lret
hlt
test
jns
mov
rolb
push
dec
xchg
imul
mov
mov
sti
and
fwait
insl
lahf
adc
dec
and
xchg
mov
sub
test
sub
and
in
mov
pop
icebp
lods
rclb
and
dec
mov
pop
fwait
push
fsts
repnz
in
add
scas
push
mov
les
and
jnp
andl
xchg
mov
mov
outsl
add
fldenv
fbld
or
data16
scas
mov
jbe
int3
mov
outsb
jecxz
out
cltd
sar
sbb
pop
nop
add
lret
jne
xor
insl
pop
or
xchg
xchg
aas
xchg
adc
xor
cmp
rcrb
fwait
or
xchg
ja
movsb
xchg
ja
nop
mov
rcr
stos
aam
or
mov
clc
sbb
push
std
mov
js
sub
dec
push
out
push
mov
loope
out
movb
jg
ljmp
outsb
mov
push
insb
pop
sarl
mov
jno
cs
mov
mov
cmpsb
push
pop
lcall
push
jbe
popf
call
xchg
stos
lock
pop
ficomps
xchg
xor
xor
push
add
push
pop
loop
fldl
cmp
adc
enter
cmp
push
cmp
shrb
es
ret
and
pop
cmp
adc
in
ficomps
xor
movsb
in
jae
lcall
pop
or
and
jmp
sarl
shrb
xor
das
sbb
and
rclb
mov
inc
jae
jbe
out
call
sbb
addr16
icebp
add
push
popa
pushf
aaa
mul
jnp
or
jg
jmp
fwait
movsl
mov
jnp
jp
xlat
outsb
mov
in
push
sub
movsb
xor
inc
xchg
adc
xchg
sbbl
out
out
jbe
mov
shll
cmp
fisttps
mov
test
and
ja
mov
dec
subb
out
mov
cmpsl
in
push
inc
lret
shrl
push
ja
jo
cmpsb
cmc
into
pop
sub
loopne
xor
xor
add
aas
aam
xchg
push
test
jne
into
mov
adc
mov
or
aas
jl
in
hlt
pop
jns
xor
nop
jge
add
lock
pop
ja
xchg
push
push
lea
xchg
ljmp
ret
cltd
cmpsb
lods
add
cmp
stc
mov
insb
push
mov
lahf
pop
cmc
stos
cmc
hlt
and
aam
aam
test
xchg
shl
xchg
pop
inc
shl
and
pushf
xor
test
fdiv
sub
jo
aad
sbb
cld
sub
aaa
adc
sub
prefetchnta
jns
scas
adc
int
adc
pop
inc
push
and
push
mov
adc
mov
sbb
inc
hlt
dec
jmp
daa
inc
inc
jo
jecxz
and
push
mov
shl
and
hlt
bound
ds
xor
or
nop
outsb
aaa
shl
in
andb
bound
enter
std
dec
sub
adc
cld
enter
dec
adc
jg
dec
add
sub
pop
int3
aaa
lods
sti
pop
mov
icebp
jle
xor
ds
push
and
shr
fcompl
rclb
mov
mov
movsb
push
mov
notl
cmp
in
or
call
cmc
enter
inc
aaa
or
xor
rorb
pop
xchg
repz
pop
sbb
mov
ret
or
shl
mov
icebp
mov
jnp
mov
aad
jae
add
stc
imul
incl
insl
adc
scas
stos
jo
fsubrp
adc
out
pop
inc
mov
xor
cmp
jne
or
xorb
lret
sbb
call
and
pusha
popa
lahf
or
sbb
in
fisttpll
lock
ret
fsub
addb
mov
call
sbb
lock
jns
in
mov
mov
sub
add
pop
mov
dec
adc
mov
nop
sbb
mov
ficomps
movntq
out
add
inc
mov
iret
mov
push
sub
pop
mov
subl
sti
insb
mov
mov
adc
inc
cmc
push
xor
dec
xchg
dec
dec
dec
int
push
lock
pop
lret
jp
in
ja
lea
arpl
jmp
repz
dec
into
aam
movsb
mov
xchg
aas
or
push
or
push
push
ret
or
stc
xchg
std
sbb
inc
pop
mov
inc
add
insb
mov
xor
lods
and
repz
inc
push
insb
or
cwtl
adc
add
xor
mov
sbb
xor
nop
bound
enter
inc
out
and
aas
push
out
jle
xor
popa
in
insb
fisttps
loopne
xchg
jae
cmpb
add
xchg
in
adc
xchg
stc
mov
mov
jne
mov
cltd
mov
or
pushf
fiaddl
sub
push
mov
imul
lods
dec
int3
pop
stos
cmp
inc
dec
add
sub
out
or
jae
pop
aad
fistps
mov
lcall
lock
shr
cmp
mov
push
and
inc
fcompl
cmp
mov
adc
xchg
cltd
cmp
ds
mov
and
lds
subb
cmp
icebp
popa
jae
pop
add
mov
add
hlt
xor
dec
cli
mov
jp
mov
lahf
stos
dec
cmp
cltd
and
sbb
lcall
mov
pop
jmp
push
mov
or
mov
cmp
test
nop
out
xchg
sbb
mov
movsl
lods
pop
mov
aam
add
mov
push
stc
notb
xchg
cli
jge
ret
mov
lea
inc
xor
scas
popa
stos
popf
out
adc
test
pop
mov
jno
sub
lret
out
sbb
push
push
jb
or
cmp
js
mov
sbb
arpl
xchg
mov
mov
and
lds
pop
idivb
sub
adc
lcall
sbbb
cmp
int
fst
clc
pop
dec
das
inc
mov
sbb
and
xchg
pop
jp
xchg
lods
push
xor
decb
ret
in
adc
test
push
loop
and
in
aam
dec
push
outsl
sbb
fwait
push
sbb
loope
push
push
adc
mov
hlt
shll
mov
lret
lock
adc
sub
imul
rcr
lock
loop
cmp
cli
mov
pop
push
push
or
das
imul
mov
mov
xchg
das
xor
mov
jne
and
repz
lock
xchg
cwtl
dec
inc
je
sub
or
cmp
cmpsl
pop
es
jg
or
mov
xor
inc
pop
dec
js
xor
push
int
shl
inc
cli
clc
mov
push
jae
push
test
bound
add
in
sbb
jnp
mov
ja
dec
jo
dec
sbbb
sti
dec
mov
cwtl
stos
mov
lds
js
pop
stc
inc
loop
mov
addr16
sbb
in
pop
add
cmp
ret
inc
mov
rorl
aas
inc
aad
rcrl
cmc
or
test
rol
jo
js
mov
pop
negb
mov
arpl
idivb
mov
mov
out
cmpsb
pushf
mov
dec
sub
aaa
je
rcll
daa
iret
cmpl
jle
mov
fwait
imul
loopne
cltd
xor
xlat
cs
pusha
xor
arpl
daa
lea
push
mov
lods
inc
movsb
int
mov
insb
idiv
repz
push
push
pop
incl
mov
sti
lret
loopne
and
or
or
sbb
lock
dec
sub
cmp
imul
sbb
push
sbb
ror
dec
jmp
inc
jge
iret
test
shlb
pusha
jo
lods
fadds
pop
or
push
jge
adc
repz
call
inc
xlat
cmp
cltd
push
mov
jbe
cmc
push
rorl
sbb
mov
jmp
pop
int
dec
mov
or
pusha
nop
sbb
pushf
inc
in
cmp
sub
mov
mov
mov
inc
aas
dec
cmp
test
cmp
or
fs
cmp
push
xchg
and
xor
inc
pop
iret
ficomps
push
imul
mov
mov
push
lahf
mov
inc
enter
loope
ds
daa
inc
pop
pop
cmp
cvtdq2ps
pop
or
repnz
adc
test
cmc
outsl
dec
shrl
dec
ljmp
and
add
es
mov
ret
repnz
adc
sti
push
and
mov
nop
xor
mov
mov
add
aaa
rorl
cld
xchg
or
pop
sbb
scas
aad
in
jge
adc
les
add
xchg
xchg
xor
in
pop
std
test
popf
dec
fcoml
push
cmp
les
jo
addl
lahf
pop
es
out
jne
add
mov
sub
xchg
dec
adc
push
pop
cmpsl
ret
dec
outsb
daa
out
lods
movsl
jno
loop
xchg
in
outsl
int
cmc
aam
inc
xchg
mov
fs
test
enter
inc
push
inc
mov
push
cmpb
imul
inc
push
adc
sub
out
rcll
dec
cmp
in
pop
dec
add
mov
jg
jg
xchg
cmp
lret
cmp
pop
pop
fwait
dec
cmp
mov
adc
pop
in
daa
arpl
test
in
test
fwait
sbb
arpl
or
dec
inc
insb
lds
das
sbb
bound
arpl
icebp
icebp
mov
fbstp
jp
mov
mov
add
ret
jmp
outsb
cld
cld
dec
xchg
or
sbb
mov
cltd
dec
cmpl
sub
in
leave
popa
aad
pop
mov
out
dec
movsl
int
xor
pop
push
jns
sarb
negl
cltd
daa
fsubl
mov
into
push
ds
stos
push
bound
lds
insl
nop
jg,pn
ret
cmpsl
xorl
popf
lret
leave
cmp
out
sti
int
add
pop
enter
lock
lock
adc
popa
stc
add
dec
sbb
scas
mov
rcrl
lcall
imul
or
mov
or
fdivr
jne
push
sbb
and
mov
nop
add
int3
jns
adcb
sbb
lods
dec
outsb
ss
push
push
pusha
mov
sbb
mov
lret
in
movsb
mov
xor
mov
cmp
adc
add
sub
pop
jno
scas
add
iret
adc
mov
lahf
dec
in
ret
call
insb
push
shlb
lea
mov
mov
lret
jo
push
es
ljmp
sub
aas
repnz
push
ffree
jmp
dec
test
icebp
mov
pop
jo
stc
mov
ret
and
cmp
enter
xor
dec
xor
clc
mov
inc
lret
dec
adc
pop
subb
pop
jle
push
outsl
and
pop
dec
dec
loope
dec
mov
or
pushf
lock
push
adc
or
mov
pop
adc
insb
inc
pop
and
jo
mov
pop
es
fsubrs
lods
cmpsb
or
clc
push
cmp
xor
clc
sbb
bound
cmpsl
leave
pop
mov
inc
aaa
xor
sub
cmp
lret
push
loop
int3
xor
mov
cltd
decb
mov
pushf
cmp
pop
or
jnp
arpl
or
cld
push
sub
adc
sub
push
pop
xor
cmp
or
dec
sbb
daa
xchg
xor
rcrl
in
pop
jno
out
mul
pop
mov
jae
fs
jne
stos
push
mov
icebp
mov
js
mov
call
cmp
push
mov
popa
loope
cmp
mov
clc
bound
cmp
mov
push
xor
sub
andl
inc
mov
adc
xor
fdiv
push
mov
push
aam
lods
enter
lods
mov
xchg
out
in
cmp
dec
cmp
xor
in
mov
orl
pop
inc
gs
cs
xchg
rcl
and
lds
pop
inc
fstps
aas
pop
repnz
adc
jo
mov
sub
stos
ret
gs
dec
push
sti
std
or
sbb
mov
pop
xor
roll
xchg
inc
push
imul
inc
mov
mov
sub
cli
idivl
jnp
in
inc
jecxz
dec
mov
jb
cmovl
loopne
mov
xor
cld
data16
cmp
shll
sub
mov
and
sub
jecxz
and
fsubs
sub
lock
pavgb
sub
test
mov
fdivp
push
das
fsubs
dec
pop
dec
jo
dec
repnz
xchg
mov
mov
mov
cmp
push
or
mov
andb
inc
les
insl
mov
xchg
adc
pusha
imul
outsb
xchg
arpl
dec
push
scas
inc
mov
fisttpl
push
and
lea
mov
push
mov
sub
jmp
sbb
inc
jmp
jmp
test
es
dec
imull
js
sbb
xchg
add
mov
pusha
xchg
sbb
adc
sbb
cli
jge
push
negl
lret
loopne
mov
clc
push
pop
adc
stos
sub
mov
adc
lahf
cmp
pop
jge
inc
stos
call
xor
icebp
pop
cmc
jb
jo
test
test
and
scas
mov
pusha
sub
xchg
leave
pop
rolb
in
popa
mov
mov
lahf
jne
fs
push
daa
xor
les
test
andb
jb
inc
add
pop
lds
mov
ficompl
jne
inc
xchg
and
lods
pop
nop
fwait
adc
lds
xchg
dec
adc
push
loopne
mov
out
pop
icebp
sbb
nop
sti
movsb
outsb
in
jl
lods
sbb
or
inc
cmc
jne
fnstsw
aad
subl
jmp
push
je
cli
sarl
hlt
pop
dec
mov
arpl
daa
sbbb
ret
push
out
clc
cs
xchg
insb
fdivrl
jo
mov
sti
xchg
sub
pop
sar
cmp
sbb
repz
rcrl
or
sub
dec
or
in
out
mov
jae
rcrl
xchg
je
lahf
scas
arpl
insb
fisttpl
inc
lahf
push
ror
jge
mov
mov
lds
or
call
add
push
dec
or
mov
push
je
and
pop
add
pop
fwait
xchg
add
cmp
sub
inc
rcr
sub
mov
push
jmp
push
or
insb
push
sub
ss
mov
mov
pop
stos
xchg
pushf
loope
imull
mov
push
daa
cld
lret
mov
pop
mov
lret
stos
out
fwait
enter
xchg
xor
pop
mov
pop
sub
sbb
sub
bound
mov
ret
cld
dec
sti
jge
frstor
add
cld
movsl
jmp
jbe
fsubrl
cmp
mov
dec
in
movsb
stc
iret
push
out
sarl
sbb
or
clc
sti
stc
push
adc
loopne
xor
mov
stos
aaa
ret
jbe
or
loop
jecxz
loope
add
cmpsb
cmpsl
ror
sbb
clc
ljmp
aad
sub
xor
lods
pop
frstor
or
shll
jecxz
fidivrs
push
or
fs
cmp
arpl
sbb
xchg
cmp
push
call
ret
ss
imul
sti
imul
xchg
inc
repz
out
cmpsb
or
ror
push
mov
cmp
mov
add
arpl
inc
xchg
pushf
sbb
mov
dec
outsl
test
dec
lds
test
mov
imul
idivb
jl
out
pop
adc
jl
jbe
sub
enter
adc
dec
xchg
cmp
aas
or
and
mov
jne
cli
fimull
fcompp
repnz
dec
jp
mov
jmp
jnp
cmp
push
cs
imul
sbb
mov
jbe
test
mov
loop
push
dec
xchg
mov
std
icebp
sub
scas
jg
add
add
int
pop
notb
aad
out
push
in
shrl
ja
adc
mov
xchg
or
out
xor
jecxz
dec
mov
scas
pop
loope
add
push
cmpsb
pop
stc
arpl
dec
repnz
and
sbb
shr
test
aaa
xchg
stos
aaa
popa
sub
sti
ficomps
fcmovu
popa
pusha
sar
bnd
jg
jno
enter
daa
xchg
or
orl
add
ret
roll
stc
lahf
jo
sub
ror
add
and
jb
aas
or
movsl
mov
cmp
cltd
dec
jne
shrl
mov
adc
push
add
sbb
and
outsb
ret
sub
jnp
movsb
mov
imul
push
sub
mov
ja
pop
jb
enter
or
pop
inc
xchg
enter
xor
test
push
xor
imul
fdivr
jo
sbbl
ds
shll
jge
jl
int3
jo
mov
lret
cld
xchg
adc
outsb
jae
adc
jl
push
or
inc
xor
pop
aam
jne
fbld
into
outsl
xchg
mov
les
dec
mov
pushf
shl
sbb
mov
popf
mov
cmp
fildl
rclb
xlat
pop
js
or
imul
push
cmc
sbb
fidivs
sbb
out
into
pop
jp
add
shlb
cmc
sub
nop
sti
dec
xchg
mov
arpl
sub
pop
je
incb
push
add
mov
pop
les
sub
iret
xchg
sbb
cmc
push
push
leave
mov
outsb
sbb
out
add
push
and
out
inc
sub
sbb
mov
mov
jl
inc
inc
xchg
fists
sbb
xlat
outsb
cmc
imul
add
dec
out
cmp
fmul
adc
decb
movsb
inc
add
add
jl
sub
ret
cwtl
push
les
sarb
dec
push
lcall
dec
lret
roll
adc
add
pop
aas
push
and
dec
fdivrs
push
sub
mov
les
test
push
jecxz
cmpsl
cli
mov
jg
xor
fs
pop
push
pop
gs
in
mov
aaa
pop
push
push
adc
push
ret
jns
inc
call
cmpsb
mov
or
push
sarl
mov
add
cli
dec
das
and
jg
int3
ret
jp
lods
xchg
jl
push
int3
mov
adc
jne
xchg
fcmovnu
loop
push
cmp
imulb
out
cwtl
pop
cmp
loop
cli
dec
sub
es
ret
ds
cwtl
mov
mov
xchg
push
fsts
daa
pusha
out
aad
loopne
sub
daa
aam
test
fisttps
roll
lcall
js
jno
inc
aad
fcoml
jmp
popa
mov
and
sahf
ds
push
jns
dec
push
pop
inc
mov
cwtl
lcall
mov
jo
icebp
pop
mov
xchg
in
mov
dec
daa
mov
adc
xchg
cmp
int
shrl
lock
loope
sahf
cltd
cld
jae
outsb
mov
int
outsb
mov
pop
dec
sub
sbb
arpl
jnp
lods
sbb
push
fiadds
sub
ret
repz
lds
rol
and
test
cmpb
push
push
jg
aam
rorl
or
xlat
es
and
adc
xor
jns
dec
idivl
js
adc
popl
ret
repnz
scas
inc
mov
lea
xor
test
dec
xchg
lret
ss
loopne
sahf
add
sahf
aam
pop
or
sub
mov
jl
fwait
cltd
cmpsl
jb
cmp
lret
xchg
mov
scas
loop
cltd
test
xchg
and
aas
in
fisubrs
lret
or
push
jb
mov
ret
mov
fs
scas
and
jbe
aaa
and
js
inc
pop
dec
test
sub
jge
ret
dec
hlt
cmpsl
sub
mov
xor
shlb
repnz
subb
in
mov
dec
jo
les
jne
notl
out
jo
xchg
lds
test
pushf
cld
movsb
cmp
add
sub
sub
in
repnz
jmp
aam
fsts
nop
inc
div
loope
xchg
push
dec
mov
fs
cwtl
xor
cwtl
and
sti
xlat
push
cmp
pop
packuswb
outsl
sub
aad
shrb
xchg
xchg
loope
jns
add
jns
cld
or
add
dec
movsb
jo
jns
imul
leave
jae
pop
mov
or
pop
mov
stos
dec
fisttps
jno
and
and
and
mov
or
test
push
pop
xor
call
cmp
dec
cli
aad
in
cmp
pop
and
mov
cltd
and
je
popa
xor
scas
ljmp
adc
nop
sub
test
js
iret
sub
fdivrp
pop
loope
ret
scas
lahf
imul
sarl
jl
push
pusha
scas
scas
jmp
aaa
or
mov
or
rol
mov
or
cmpsl
mov
sahf
or
dec
cmp
out
mov
cld
fldcw
inc
adc
testl
add
or
fildl
xor
popa
nop
loop
ret
mov
in
xor
and
movsb
push
inc
cmp
test
or
pop
int3
ss
je
loopne
bound
push
lahf
push
sub
cmp
pusha
mov
or
or
dec
mov
pop
push
js
cld
xor
xor
cmp
sub
out
rolb
daa
dec
mov
sub
sti
cltd
cmp
unpcklps
cmp
movsl
jns
cli
or
das
inc
loop
mov
add
aam
es
mov
mov
mov
adc
push
jp,pn
xlat
lods
jge
jmp
into
inc
int
out
rcrl
xchg
add
iret
les
mov
xchg
cmp
sub
and
pop
jl
dec
test
imul
lock
data16
jne
adc
testl
or
jb
fs
and
pop
jo
mov
ja
and
xor
nop
push
rol
mov
aaa
test
repnz
or
pop
cmp
xchg
mov
aad
mov
scas
shrb
inc
dec
test
bound
push
push
int3
push
cmpsb
push
fcompl
or
jecxz
movsb
imul
xor
aaa
adc
in
jp
mov
cld
adc
adc
daa
cld
pushf
mov
jno
int3
xlat
repnz
test
push
push
es
dec
cmovg
lea
lock
fsubl
dec
ficoms
inc
xor
stos
imul
cmp
push
mov
mov
sub
lcall
aad
nop
in
dec
loop
sbb
and
cwtl
sbb
add
xor
and
scas
jno
int3
fdivs
popf
dec
add
lcall
pop
aam
pushf
inc
xlat
testb
imul
pop
or
pushf
mov
cmp
adc
cmp
pop
dec
aam
pop
or
cmpsb
data16
mov
stc
push
rcr
mov
in
and
push
jg
push
mov
push
std
sub
sbb
pop
dec
fwait
mov
mov
ret
pop
out
lcall
clc
js
popl
cld
dec
add
jo
in
cmc
hlt
mov
jae
arpl
fwait
cmp
sti
xor
lret
push
cmpsl
xchg
shll
sbb
aaa
sbb
adc
std
pop
xchg
pop
out
xor
into
jle
loop
call
jae
cs
cmp
push
rcl
dec
sub
add
sub
repnz
cmpsl
shl
loope
lods
add
cmpsl
adc
insb
repnz
bound
adc
xor
push
pop
push
jg
mov
push
or
add
int3
in
pop
pop
mov
mov
icebp
test
btc
cmp
sbb
cs
push
push
jle
sbb
fsubs
stos
sub
xchg
loopne
imul
stos
testb
or
or
jp
cmp
mov
aad
jl
sti
dec
cwtl
jnp
dec
movsl
test
mov
ret
cmp
insb
pop
jb
add
test
aas
cmp
push
push
scas
cli
pop
jae
addr16
add
sarb
cmp
mov
js
jmp
leave
add
enter
ds
and
push
nop
cmp
xor
outsl
lods
adc
pop
cmp
nop
fidivl
jmp
xlat
movsl
outsl
xchg
mov
cltd
xor
add
mov
mov
and
dec
in
ret
or
mov
xor
sub
mov
pusha
push
mov
sbb
nop
mov
xchg
xchg
into
jne
mov
push
rorb
in
mov
sub
frstor
shll
pop
les
fsub
mov
int
ja
lods
mov
jl
mov
or
das
int3
cmpsl
dec
and
jo
cs
lea
and
sbb
cmpsl
daa
mov
push
sub
push
gs
push
xchg
lods
lret
cmp
adc
cli
mov
mov
add
insb
lcall
loopne
mov
ficomps
shlb
test
js
cmp
iret
cs
cltd
sub
cmc
jl
dec
mov
sub
cmp
hlt
fstpl
mov
pop
push
xor
loop
and
ret
bound
rcll
mov
aas
xchg
sbb
xchg
in
xor
aad
shlb
jns
pushf
andb
lcall
mov
arpl
pushf
insl
int
pop
xchg
push
jg
push
push
push
pop
xchg
in
cmpsl
sarb
or
cltd
fdivs
cmp
into
cmp
push
sarb
jb
fmul
xchg
xchg
stc
jb
and
lods
pop
clc
mov
cmp
pop
mov
lods
mov
push
inc
loope
mov
or
cmp
push
dec
push
movsb
pop
shrl
mov
sub
sbb
sarb
pusha
jo
icebp
scas
test
mov
ud1
ficoml
cmp
out
test
das
cmp
mov
or
add
push
push
test
in
cmp
outsl
or
in
lods
xor
inc
cmp
imul
jmp
popa
stos
cmp
cbtw
pusha
pop
adcb
lds
xor
add
mov
jns
jnp
in
hlt
popa
cld
inc
fstl
dec
cltd
clc
xor
stc
jp
dec
addr16
cmp
fsubrp
test
adc
jecxz
push
or
rcrl
ret
leave
in
mov
je
dec
cmp
dec
std
dec
pop
dec
dec
sub
sbb
add
push
pop
xchg
jp
sahf
es
movsl
lea
mov
lock
mov
stos
push
filds
jl
cs
lahf
dec
mov
icebp
mov
ljmp
addl
push
sbb
setl
and
add
lds
pop
cmp
dec
mov
jo
or
push
sti
sbb
adc
lock
in
or
inc
jne
bound
aaa
jle
enter
gs
aam
shrl
xor
xchg
mov
sub
xchg
pop
adc
cmpsb
sub
cmp
fistpll
mov
nop
mov
dec
cmp
jnp
inc
fisttps
ljmp
outsb
jle
fsubrl
and
add
icebp
cmp
cmpsl
mov
add
xchg
fadds
jge
shll
inc
mov
inc
lock
xchg
cmpsl
mov
in
cmc
clc
stos
xchg
ljmp
push
or
pop
dec
sub
dec
fisubrs
gs
jp
cmp
cs
pop
dec
loopne
add
pop
stos
pop
push
js
shrl
jg
push
ss
cs
lds
pop
or
sarl
andb
jge
hlt
popa
adc
mov
ror
imul
lock
adc
pop
adc
loop
mov
movsl
fwait
push
dec
pusha
cmc
add
mov
repz
dec
push
mov
pop
pop
cld
imul
dec
sti
jmp
enter
inc
jnp
or
lds
and
fstpt
dec
int
lcall
mov
sbbb
clc
add
mov
outsb
cmc
xor
cmp
sbb
cltd
outsl
jl
subl
sub
lret
outsb
shr
dec
sarl
popa
xchg
mov
cmp
dec
data16
and
out
dec
hlt
in
sub
dec
popa
fadd
leave
lds
jge
dec
pop
repnz
repz
pop
xchg
push
les
dec
adcb
dec
push
test
pop
push
mov
or
jecxz
xchg
movsl
cmpsb
and
and
mov
lret
pop
ret
sbbl
or
popa
mov
push
cwtl
mov
cmp
lahf
in
jmp
pop
jno
pop
mov
and
or
jmp
scas
inc
push
cmp
xor
mov
jnp
push
pmulhuw
add
jle
je
dec
add
mov
pop
jo
push
mov
lcall
sbb
loop
outsb
mov
and
adc
out
lahf
test
out
out
and
pop
add
mov
xchg
mov
jnp
es
xor
dec
dec
inc
push
iret
pop
mov
test
outsl
cmpsb
enter
pop
pop
scas
addr16
mov
jo
jae
ljmp
aam
pusha
fmuls
pop
ljmp
jg
mov
jl
fwait
data16
ret
push
dec
mov
decb
sahf
movsl
cmc
mov
xchg
mov
movsb
aad
repz
dec
popa
nop
dec
push
xchg
ljmp
sub
inc
fstpt
inc
ret
cld
clc
outsb
pop
mov
xlat
push
shlb
loopne
cmp
loope
fsts
inc
push
mov
dec
xchg
shr
push
adc
pop
fldt
loopne
jmp
pop
mov
ds
pop
adc
data16
mov
and
cs
push
mov
add
dec
loopne
sub
test
cmp
lods
imul
inc
mov
rol
idiv
leave
and
jb
jmp
cmpsl
mov
cmp
adc
shll
dec
int3
test
add
outsb
addb
or
xor
and
in
jge
mov
test
ret
push
mov
lahf
inc
adc
push
test
icebp
push
pop
dec
xor
in
lds
inc
adc
cwtl
cli
icebp
leave
pop
xchg
or
nop
lcall
jns
xchg
or
mov
and
hlt
jmp
popf
scas
xchg
mov
push
push
dec
movsb
cmp
and
jmp
ss
or
nop
in
stos
orl
xlat
aad
or
xchg
mov
mov
clc
mov
stc
andl
xor
xor
mov
loope
popa
cmp
dec
jns
adc
jbe
xchg
adcl
and
adc
repnz
add
fs
es
cmp
xlat
xchg
xor
popa
xchg
divb
scas
mov
ljmp
pusha
fldt
fistps
pushf
mov
int3
mov
je
lahf
jae
sarl
fstpl
stos
dec
popa
or
sarb
in
mov
ds
add
lock
adc
xchg
cli
aaa
fwait
shrl
mov
mov
xor
movsl
lds
dec
fimull
or
and
adc
out
jl
iret
xor
jge
ret
push
pop
push
imul
adc
fadd
sahf
dec
int
divl
jbe
jns
mov
mov
and
fsubrs
inc
pop
inc
aas
cwtl
xor
xchg
mov
or
pop
fstpt
insl
xchg
adc
es
cmp
xchg
pop
in
push
nop
inc
addr16
call
pop
inc
pop
nop
sub
fldl
rorl
aam
fildl
cld
mov
icebp
movsl
and
xor
pop
ret
fwait
ja
loopne
and
xor
mov
movsb
std
adc
popa
fsubrl
xlat
mov
inc
adcb
loop
pop
call
sbb
sbb
mov
outsl
mov
imul
jo
mov
xchg
mov
push
mov
loopne
sarb
mov
out
addr16
cmp
ret
jp
mov
sarl
sub
inc
mov
pop
xchg
and
push
cmp
sub
mov
sbb
push
aad
pop
faddl
fcmovnb
lods
inc
mov
es
xor
loop
mull
dec
add
fwait
push
mov
ret
xor
push
jae
xor
xchg
gs
int
lret
inc
in
mov
mov
in
insl
push
or
cmp
cwtl
lret
pop
in
jecxz
scas
push
dec
int
pop
addl
pop
and
dec
fnstsw
jmp
ss
fdivrs
incl
lea
and
sub
aaa
hlt
pusha
pop
js
inc
test
mov
fldt
leave
mov
inc
adc
and
jmp
add
jno
inc
dec
mov
add
pop
pop
mov
scas
push
or
cld
leave
pmulhw
adc
inc
jo
call
ror
cmp
mov
xor
repnz
es
scas
insb
stc
iret
ja
cmpsl
ret
mov
dec
cmpsl
cmp
shlb
cmpsb
add
stc
int3
out
inc
xor
rorl
out
dec
iret
rcrb
dec
repnz
aam
repnz
stos
test
lcall
mov
inc
cmp
dec
mov
std
add
jecxz
cmp
mov
sbb
dec
jae
jne
out
cmc
add
aas
stos
pop
sub
stos
adc
dec
loope
stos
xlat
push
add
bound
xor
or
xor
and
jge
out
lods
add
cs
cltd
inc
shlb
push
daa
or
and
int3
ss
xchg
das
stos
mov
cmp
pop
xchg
dec
xor
push
inc
icebp
outsb
movsb
or
cmp
cmp
cmp
or
cmpb
add
sbb
push
adc
aas
sbb
add
enter
add
or
into
or
addr16
data16
xchg
add
sahf
and
inc
fimuls
jnp
jnp
stos
or
mov
push
sbb
push
rcr
sbb
call
pop
xchg
shlb
mov
cwtl
hlt
push
in
ja
inc
fcmovb
jecxz
lods
jb
cmp
pop
je
sub
and
mov
xor
movb
pusha
rcr
iret
pop
call
mov
xchg
mov
xchg
and
pop
pushf
rcrl
mov
loop
sub
sub
xchg
pop
dec
ljmp
or
cwtl
aas
pop
push
or
jp
mov
rorl
ljmp
js
adc
mov
and
xor
fcomps
popa
bt
push
mov
bswap
loopne
add
mov
repz
sub
test
dec
push
jg
and
lahf
and
cmpsb
stos
mov
jne
add
add
lds
out
mov
cmc
test
and
jl
push
and
mov
ret
lods
pop
int
dec
mov
pop
dec
mov
jle
loopne
rclb
in
mov
xchg
cmp
mov
out
sbb
rcrl
push
push
adc
mov
inc
out
sbb
and
ret
das
push
out
int3
xchg
imul
das
mov
lret
pop
lods
mov
inc
mov
cmpb
in
ret
sbb
xorl
xchg
sub
js
xchg
aaa
imul
adc
mov
testl
ja
mov
mov
sub
dec
xor
data16
xchg
mov
roll
xor
ljmp
shl
scas
xor
clc
in
adc
cmp
jbe
or
call
int
pop
dec
ljmp
push
jmp
adc
mov
data16
test
test
push
push
pushf
sbb
repnz
into
out
outsb
cmc
outsb
das
add
fists
cld
mov
pop
jb
xor
clc
bnd
fwait
lret
add
dec
pop
repz
adc
mov
cmp
pop
push
lahf
dec
push
cmp
push
xchg
adc
sub
in
mov
or
ss
mov
ljmp
dec
cmpsl
or
fadds
xor
sub
sbb
test
test
mov
xchg
or
jbe
faddl
push
mov
mov
cmpsl
pop
int3
or
push
cmp
cmp
jmp
and
loopw
and
iret
test
lds
fsubrs
mov
xor
push
lret
clc
pop
jl
add
push
outsb
out
ffreep
rolb
sub
mov
in
popf
or
cmp
mov
mov
mov
imul
loope
push
mov
aas
repz
shrl
fildll
aam
jne
mov
cltd
ljmp
cmp
sub
jmp
lret
mov
jge
dec
xchg
sbb
mov
cwtl
mov
cmpsb
sub
inc
pop
in
enter
mov
dec
int3
out
es
xchg
mov
icebp
repnz
rol
mov
out
ja
movsb
or
xchg
sbb
aaa
xchg
pop
pop
mov
out
jbe
fwait
int3
push
dec
jle
mov
jl
push
cmp
mov
pop
stos
mov
pop
mov
mov
push
pop
push
mov
mov
sbb
cs
arpl
rcrl
sbb
jp,pt
xchg
ss
mov
or
addr16
xor
aaa
xchg
movsl
pop
pusha
inc
lds
and
mov
lock
dec
pop
add
insl
jecxz
jo
dec
adc
push
mov
in
lahf
pop
hlt
shlb
mov
sbb
cli
arpl
stos
xchg
sub
enter
negl
mov
scas
mov
xchg
popa
mov
adc
mov
hlt
and
fcoml
lea
sets
sbb
xor
in
jno
inc
idivl
inc
push
iret
inc
pop
loope
adc
adc
inc
xor
mov
mov
cwtl
sbb
orl
scas
call
lcall
or
and
jnp
sub
lds
jl
icebp
sbb
xor
jo
lods
mov
imul
leave
xor
cld
out
adc
push
adc
sarl
inc
hlt
test
sbb
lret
mov
sahf
adc
repz
lea
cmp
icebp
les
int3
aaa
cs
add
lret
lods
mov
xor
loop
ja
out
inc
inc
cli
jae
xchg
loopne
mov
shrl
add
cmc
call
dec
mov
xor
cltd
fdivs
scas
enter
xchg
mov
fldenv
push
push
jbe
push
lret
jno
faddl
pop
mov
inc
jmp
inc
jp
or
subb
adc
in
stos
pop
sub
lea
call
aaa
adc
jmp
or
pop
test
adc
outsb
and
fcmovnu
sub
sbb
aaa
add
pop
cmc
add
imul
sub
ret
lret
xlat
jle
and
pop
cmpl
insb
and
jae
xor
dec
dec
add
xchg
lret
das
sub
add
les
fisubrs
out
lea
or
dec
mov
mov
sbb
push
pop
sub
or
push
aas
and
movsb
or
lock
push
jnp
loop
xor
adc
sti
pop
mov
mov
pushf
jmp
xor
push
inc
dec
repnz
push
pop
push
dec
incl
stos
in
fwait
and
lock
fimuls
call
dec
stos
andl
icebp
cmp
cmp
dec
pop
adc
pop
mov
or
in
or
inc
popa
movsl
mov
adc
cmp
cmp
roll
jbe
mov
push
out
addr16
dec
cltd
add
sbb
jl
out
push
stos
popf
mov
lods
pop
iret
popa
rclb
mov
xchg
and
xor
lahf
mov
add
cmpsl
lcall
mov
add
gs
inc
and
daa
pushf
jge
mov
cwtl
pop
adc
imul
sbb
lahf
stos
fcomps
aad
mov
test
outsb
iret
out
pop
sub
and
test
call
iret
cmp
lret
mov
jo
cld
daa
add
movsb
dec
gs
xchg
stos
test
push
xor
jnp
xor
xchg
mov
push
test
xchg
aaa
xchg
imul
adc
cmc
mov
mov
sti
fcomi
jl
out
push
push
jmp
and
adc
aas
test
adcl
testb
mov
inc
xchg
idivb
out
dec
je
les
jbe
xchg
xchg
push
sub
outsl
cwtl
cmp
sbb
insl
add
mov
lods
sahf
xor
xor
inc
or
inc
orb
lret
push
xor
inc
pop
jo
repz
and
mov
das
mov
cmp
mov
je
mov
xchg
adc
enter
mov
stos
push
sbb
mov
movsb
movsl
in
pusha
jne
xchg
adc
cmp
pop
ror
or
insl
inc
movsb
adc
test
cmp
push
cwtl
filds
aad
orl
and
outsl
inc
or
dec
rorb
jp
mov
cmp
into
popf
mov
lock
sbb
bound
imul
pop
add
mov
xor
adcl
mov
push
lcall
rorb
mov
iret
mov
idivl
mov
jno
or
je
fstp
jae
pushf
push
cmpsb
add
aaa
dec
fs
jmp
jp
xchg
jnp
iret
mov
pop
jp
xor
imul
popf
cmp
pop
movsb
leave
lcall
loopne
xor
push
in
and
repz
push
jns
and
dec
addl
pop
sbb
jg
imul
test
pop
or
aaa
jle
and
push
lret
nop
fucom
out
fldcw
lods
and
repz
ss
stos
cmp
popf
mov
mov
mov
mov
mov
inc
add
loopne
cld
add
lock
dec
mov
xchg
mov
jge
sbb
js
pushf
popa
dec
rclb
dec
es
jnp
sarb
adc
sbb
ljmp
sub
xlat
inc
loopne
fadds
lret
repz
es
dec
bound
jecxz
or
xor
cmp
xchg
jae
dec
mov
mov
jl
jmp
fiadds
mov
test
sahf
fsubrs
fsubrs
adc
lds
aas
xchg
pushfw
jge
push
push
jns
or
pop
push
ljmp
nopl
test
dec
int3
dec
pop
sarb
push
test
jl
add
je
add
jge
xor
imul
rcrl
mov
pusha
cmp
mov
fmuls
dec
mov
ds
adc
repnz
xchg
pop
push
jl
repnz
subb
xchg
ret
pushl
iret
sbb
stos
push
xchg
push
cmp
mov
jmp
int3
add
xlat
jne
or
mov
adc
inc
sbb
push
repnz
and
lret
aaa
arpl
mov
mov
mov
fsubs
call
push
adc
cwtl
loope
mov
xor
inc
mov
inc
xorb
mov
ficoml
mov
int
test
mov
jle
add
xchg
mov
icebp
fcompl
into
hlt
and
sbb
stos
jge
out
popa
sbb
adc
cmp
inc
cmp
xchg
mov
sub
or
inc
stos
fsub
sbbl
pop
mov
mov
sub
inc
or
cmp
xchg
or
xchg
pop
mov
add
in
push
pop
mov
xor
jle
ja
xchg
lea
lcall
test
jp
or
add
sbb
imul
das
outsb
in
out
std
call
adc
loope
into
add
adc
out
int3
or
dec
cli
xor
test
in
out
xchg
xor
pop
iret
ja
nopl
cmp
pop
pop
cmpsb
adc
ja
rorb
andb
sub
push
and
xchg
addl
dec
test
test
std
mov
or
subb
and
jmp
addb
xchg
pop
pop
cld
mov
inc
pop
jbe
pushf
pop
adcb
jecxz
out
pop
popf
mov
lock
dec
pop
mov
icebp
inc
pushf
cmc
popf
rorb
out
ss
sub
adc
roll
gs
jno
cmc
mov
jge
lea
mov
mov
movb
cmp
push
dec
mov
sarl
xchg
imul
sub
mov
mov
mov
outsl
jge
testl
cmp
dec
jp
insb
mov
icebp
and
jl
insb
mov
loop
ret
in
xchg
inc
sbb
daa
loopne
sub
mov
mov
xor
push
in
jmp
ja
mov
popf
outsl
pushf
inc
jno
adc
jle
xor
into
adc
fildll
inc
fadd
jo
add
cmc
xor
negb
insb
inc
shrl
gs
sbb
rcrl
add
inc
jo
fdivrp
xor
loope
inc
inc
push
sbb
dec
addl
xchg
jg
add
test
arpl
lahf
xor
scas
mov
lea
and
shr
xchg
xor
cltd
sub
popl
cli
sbb
xor
adc
pop
leave
movsb
js
or
popa
cmp
out
div
daa
xchg
mov
pop
xor
sub
xlat
adcb
outsb
mov
mov
dec
fld
push
inc
mov
icebp
sub
jnp
shrb
in
enter
and
add
jo
aam
bound
dec
push
xor
cmpb
ss
je
sub
loope
lock
jo
push
hlt
pop
hlt
mov
outsl
mov
add
mov
ret
test
aam
xor
jecxz
xor
dec
push
sub
nop
in
inc
out
roll
xor
jbe
push
pop
inc
and
mov
sbb
rcrb
adc
push
xor
testl
loop
push
jl
repz
cld
cltd
repz
push
idivb
xor
cli
inc
xor
sbb
clc
rclb
sbb
xor
adc
insb
popf
outsb
or
imul
mov
ficompl
inc
dec
mov
mov
out
lret
mov
lcall
jne
aaa
vmptrld
push
dec
fs
es
mov
movsb
jl
test
pop
sbb
or
data16
push
mov
js
ret
add
jae
test
lods
lods
and
or
sarb
sub
push
mov
ljmp
subb
in
sub
bnd
ja
mov
cwtl
or
and
mov
hlt
cmpsb
sub
nop
fcoml
pop
mov
push
das
add
sahf
jecxz
nop
popa
lea
xor
add
mov
jnp
movsb
mov
test
lret
push
jbe
inc
mov
jb
sub
push
mov
ret
sbb
mov
pmaddwd
pop
mov
push
jl
mov
xor
enter
inc
mov
out
pcmpeqw
inc
andl
push
cmp
inc
popf
enter
dec
or
sbb
ret
inc
push
and
mov
incl
xchg
jo
push
xchg
jmp
dec
push
std
lock
test
iret
out
mov
cmp
daa
adc
ret
cltd
sbb
lds
pop
sti
std
out
mov
negl
xorb
adc
inc
dec
int
enter
jnp
lret
mov
rorb
push
push
mov
mov
push
jle
jo
clc
in
sub
pop
in
dec
and
pushf
cmc
sbb
out
mov
in
cli
jne
fildl
mov
jns
or
incb
inc
es
sub
mov
cmp
loop
sub
repnz
inc
sbb
dec
dec
sar
or
add
or
push
stc
outsl
sub
pushf
lret
lret
inc
ja
loop
mov
mov
inc
push
lds
sbb
stc
push
mov
dec
add
jbe
imul
stos
pushf
adc
cmp
inc
in
jnp
loop
sub
and
sarl
cli
stc
or
mov
jbe
mov
dec
push
scas
lret
int3
movsl
mov
push
jmp
cmp
or
aam
cmp
aas
stc
pop
into
sbb
into
mov
enter
pusha
call
outsb
jmp
pop
pop
pop
lea
imul
std
adc
jbe
std
sbb
pop
ja
enter
push
pop
imul
fidivrl
or
ljmp
popa
mov
push
inc
add
popa
inc
out
cli
sbb
loop
add
scas
sti
cmp
push
les
xchg
popa
ret
idiv
loop
push
fbstp
dec
mov
xchg
fstpl
and
gs
and
mov
repnz
insl
mov
clc
movsl
inc
stos
cli
mov
cld
jne
pop
cmp
cld
fidivs
or
pop
add
stos
mov
imull
int3
ret
mov
mov
jge
adc
push
mov
mov
xchg
push
xor
loop
mov
push
or
cmc
lea
sbb
bnd
mov
sbb
lret
aam
cmp
add
fisttpll
je
les
mov
dec
mov
xchg
mov
lds
lret
imul
xor
and
mov
outsb
mov
test
imul
leave
xor
mov
rcl
shlb
inc
dec
and
adc
dec
test
push
daa
mov
jl
jo
cs
pop
enter
adc
push
out
fstps
adc
jb
jne
js
jnp
stc
jecxz
dec
jne
insl
add
pop
insb
in
jl
adc
add
test
jns
mov
push
xor
inc
decb
scas
data16
fs
fistpl
ret
mov
pop
add
in
sub
inc
push
mov
nop
jmp
or
jecxz
lret
pop
jae
aas
imul
sahf
cmp
jno
stos
fs
imul
divl
cmp
aad
out
inc
mov
pop
inc
cmp
cmp
jae
mov
lds
ret
cmp
daa
outsb
and
jnp
mov
fistps
outsb
sub
xor
dec
stc
aad
notl
insl
mov
jae
mov
xchg
fstpt
pop
fisttpl
movsb
test
fwait
lret
xchg
add
mov
or
dec
stos
mov
jnp
adc
cmp
test
lret
test
lock
hlt
jo
add
mov
sbb
push
mov
sbb
push
adcb
pop
mov
mov
pop
sbb
movl
ss
or
repz
fsts
jge
pop
mov
or
xchg
pushf
pop
out
cmpsl
leave
loopne
fdivrs
ja
shl
lahf
movsb
cmc
mov
jo
and
je
pushf
xlat
pop
xchg
push
fcmovnbe
mov
iret
mov
push
enter
mov
add
in
fsub
lock
push
test
icebp
pop
rol
pop
mov
add
xchg
add
xor
dec
repnz
jg
rorb
pop
ljmp
mov
movb
xor
insb
push
adc
inc
jo,pt
iret
out
bound
dec
pop
sbb
rolb
adc
cld
addr16
xchg
ljmp
sbb
xchg
stos
cli
nop
rorb
cwtl
inc
dec
inc
fidivrl
aas
or
mov
sbb
and
lock
cwtl
mov
mov
fcoml
movsb
mov
mov
jb
cwtl
xchg
push
loope
mov
into
rol
mov
and
add
sub
push
xor
dec
pop
jle
jp
sahf
dec
xor
pushf
mov
push
pop
adc
movsb
mov
pop
rorl
addr16
out
int3
pop
cld
repz
pusha
xor
data16
inc
bound
data16
movsb
sub
adc
popf
sbb
pushf
fdivrs
add
push
iret
mov
loop
hlt
lea
adc
es
pand
repz
incl
jg
inc
push
mov
dec
inc
sti
inc
xor
xor
loop
and
cmp
clc
icebp
jno
cld
jp
jg
clc
movsb
or
js
clc
push
and
outsl
loopne
inc
or
jl
push
aam
imul
sbb
aad
pop
lcall
adcl
clc
fstpt
arpl
imul
fsubrp
xchg
popa
mov
test
rorl
scas
pop
mov
fstps
jmp
jae
add
inc
roll
dec
cld
mov
push
dec
mov
cmp
fcoml
ss
mov
push
dec
mov
aas
push
cwtl
movsb
xor
push
and
fnstsw
push
scas
mov
ja
negb
cmp
and
cld
cmp
xor
xor
hlt
sbb
mov
lods
mov
les
mov
roll
daa
mov
dec
jg
pop
sbb
pusha
mov
jno
sbb
cmp
in
jecxz
xor
cltd
pop
xlat
push
pop
mov
into
out
mov
lods
shrb
pop
inc
int
ret
cmpsl
scas
mov
xchg
xor
leave
out
add
pusha
movsl
cwtl
jbe
outsb
int
inc
sbb
arpl
jnp
fstp
or
lcall
add
cltd
inc
mov
scas
cmp
data16
sbb
insl
stos
adc
fisttpll
xchg
popf
mov
sub
ljmp
or
and
adc
dec
dec
pushf
sub
push
jmp
mov
lods
repz
movsb
loopne
adc
movsl
inc
dec
xchg
mov
sbb
pop
push
lods
adc
push
cld
and
loopne
mov
mov
repz
pop
lds
add
inc
and
idivl
jmp
test
in
fcoms
scas
xor
mov
add
or
jp
test
mov
clc
aaa
fisttpl
fidivs
data16
cmp
inc
cmc
pop
repnz
out
enter
xor
push
pop
adcb
fldcw
adc
push
cld
pop
mov
jp
rorl
outsl
negl
in
sub
jl
push
dec
arpl
mov
in
fsts
jbe
repz
enter
into
jecxz
int3
pop
jno
iret
jl
stos
sub
mov
or
xchg
mov
sub
addl
out
cmp
pop
push
sub
cmpl
insb
rep
loopne
test
adc
mov
ljmp
push
rolb
dec
mov
and
or
dec
mov
sahf
mov
jp
cwtl
je
int
rcrb
popa
cmpl
out
inc
pop
sbb
imul
add
stos
jp
jnp
sub
inc
xorb
mov
mov
cmp
dec
mov
in
xchg
jns
jge
sub
jns
inc
dec
aad
adc
clc
pop
push
mov
inc
int
inc
in
aaa
fnstenv
mov
add
nop
pop
ljmp
popf
adc
mov
out
test
mov
xchg
sti
andb
sti
pop
push
sub
cmc
sbbl
or
cmp
push
subps
xor
pop
push
lret
mov
pop
cmp
movsb
iret
xor
mov
fstpl
xor
dec
es
ss
mov
lods
sbb
mov
adc
sbb
sub
dec
xor
xlat
mov
xor
push
cli
jne
adc
mov
cmp
sub
inc
lds
iret
loop
insb
insl
dec
leave
pusha
mov
cmpsl
inc
push
jns
outsb
imull
es
sti
scas
mov
mov
push
push
rcll
add
xor
aad
sbb
fildll
cmc
loop
push
in
pop
ljmp
sbb
fstl
pop
mov
in
inc
or
in
test
aad
mov
mov
lret
adc
jns
sub
push
shll
pop
es
aad
push
mov
jo
sbb
or
push
mov
out
es
mov
cmc
jb
popf
cmp
out
sub
xor
daa
sarb
jnp
scas
jo
and
movsl
sub
and
mov
mov
imul
mov
or
fnstenv
and
outsb
out
push
sti
push
jns
dec
aad
int
sahf
insb
mov
lahf
jl
rcrb
scas
or
jle
pop
sub
aad
mov
dec
dec
and
scas
cwtl
cmpsb
test
addr16
and
dec
or
enter
dec
fidivl
icebp
adc
xor
jmp
sahf
cmp
imul
loop
popa
mov
sbb
addl
sbb
push
rcll
aad
push
rorl
jmp
imul
and
xor
in
pop
insb
push
xchg
pop
icebp
rorb
xchg
and
jecxz
pushf
push
jns
repnz
dec
test
mov
xlat
lods
or
mov
lods
in
push
test
jecxz,pt
or
lret
mov
int3
insb
movsb
sub
imul
pop
or
dec
movsb
mov
mov
sbb
mov
loopne
iret
lods
leave
xchg
or
cmp
or
idivl
dec
scas
mov
rorl
cmp
jo
push
sbb
dec
scas
push
pushf
imul
hlt
or
inc
int3
je
mov
fldenv
lea
fs
cltd
add
lock
lahf
mov
loop
and
dec
mov
clc
pushf
jb
lock
repnz
shrl
test
mov
ja
data16
je
and
pop
arpl
movsbl
pop
xchg
pop
mov
jae
jp
pop
adcb
cmp
push
jmp
outsb
testl
stos
fcompl
xorl
add
lods
enter
or
rcrl
popa
inc
inc
int3
jg
in
int3
mov
je
dec
adc
and
pop
testl
mov
or
mov
into
xchg
mov
push
scas
loop
mov
pop
sub
or
js
fstpt
movsb
mov
push
fldl
xor
xor
loop,pn
cmpsl
push
int
sahf
adc
out
cwtl
jg
or
outsb
jecxz
adc
or
imul
xor
lahf
push
outsl
das
rcr
in
pushf
xchg
lret
adc
pop
popf
insb
mov
scas
sub
push
jge
cltd
sub
add
clc
lock
sbb
call
mov
lds
add
jmp
mov
or
pop
movsb
sti
adc
push
mov
cmp
adc
xchg
sbb
pusha
test
mov
inc
cmpb
mov
or
dec
ret
cmpsb
cwtl
jo
clc
adc
mov
shl
in
xor
add
std
imul
incl
aas
fdivrl
mov
enter
pop
lock
imul
jmp
into
jne
fnstcw
xchg
sbbb
aad
jne
push
call
out
pop
dec
xchg
pop
notb
and
pop
mov
sub
mov
adc
das
and
mov
or
ret
out
js
sub
mov
dec
outsl
cmp
les
sub
ja
dec
bound
sub
push
mov
scas
outsl
aaa
cmpsl
flds
jno
mov
test
dec
xor
repz
stc
and
sahf
xchg
in
jmp
jns
shll
jge
add
sub
mov
xchg
inc
in
dec
sahf
mov
std
push
mov
shll
lret
push
dec
adc
xchg
jnp
cmp
rorb
dec
movsb
pop
pusha
add
mov
jne
adc
into
mov
sbb
mov
push
les
les
fisttpll
call
mov
sahf
lahf
sub
ljmp
push
jmp
cmp
add
inc
fwait
xor
inc
add
in
pop
lods
inc
xor
inc
push
inc
outsl
pop
add
sbb
xor
decl
insb
popf
jbe
adc
adc
out
mov
insb
dec
btr
or
mov
push
mov
mov
mov
clc
sti
out
icebp
in
adc
ret
add
mov
in
int3
jo
cwtl
or
push
and
mov
arpl
data16
imulb
lock
int
loopne
inc
dec
sbb
ss
in
aad
pop
mov
xchg
xchg
mov
in
stc
xchg
jp
adc
sub
aad
jnp
faddl
fbld
jno
cmpsb
and
push
mov
inc
ja
je
int3
jbe
das
leave
inc
arpl
loopne
xor
adc
pop
fistps
push
push
lea
or
push
sbb
ret
cmp
inc
cmp
mov
iret
pop
enter
shrl
pop
xchg
pusha
jmp
stc
rclb
inc
js
add
mov
xchg
call
push
aam
leave
xor
pop
xor
inc
scas
push
mov
gs
gs
outsb
or
add
fs
inc
call
popf
cwtl
in
xchg
inc
cmp
jl
popa
bound
out
xor
xor
aas
cmc
adc
loopne
or
shll
lahf
cld
adc
jp
mov
je
or
mov
aaa
jae
jl
fcoms
jp
lods
cmp
imul
hlt
jno
sub
mov
sahf
sbb
sub
jl
fdivrl
lcall
dec
sub
jle
sbb
pop
xor
sub
inc
aaa
add
popf
add
jae
add
sbb
dec
inc
test
outsl
xorb
pop
pop
inc
fs
rclb
jno
call
xchg
jge
gs
xchg
int3
xchg
xchg
cmp
lret
sub
cmpsb
add
jo
or
popa
pop
inc
rclb
mov
xor
push
sbb
lds
ds
andl
into
sbb
out
adc
dec
push
xor
adc
hlt
mov
inc
daa
adc
imul
lcall
lds
cli
jbe
nop
xor
xchg
and
add
xchg
or
push
jbe
loopne
inc
imul
jns
mov
in
xor
dec
cmp
jmp
clc
push
xor
rcrl
cmp
sub
jno
xchg
mov
mov
dec
add
icebp
shrb
inc
mov
loop
out
ret
pop
sbb
loope
in
stc
and
pop
out
jmp
out
pop
pop
xchg
lcall
and
shrb
adc
cmpsb
fsts
std
cwtl
jbe
adc
aaa
fdivrl
out
loopne
cmp
jnp
push
sbb
mov
sub
shrb
ds
add
pushf
test
mov
pop
aaa
int
cltd
pushf
sbb
scas
aaa
notb
pop
push
xchg
add
xchg
mov
jb
hlt
lods
cmp
jg
loop
mov
xchg
xor
mov
popf
lahf
sub
pop
in
hlt
mov
and
xor
loopne
aam
mov
mov
cmp
mov
and
xlat
sbb
sub
sbb
out
into
lods
hlt
mov
adc
add
insb
and
lret
jmp
inc
std
mov
fadd
jmp
into
fisubrs
call
lret
stc
sub
sbbb
mov
jl
sahf
inc
out
fadds
sahf
out
or
std
adc
or
add
sub
pop
xor
push
push
mov
and
jnp
or
cmp
nop
sub
xor
pop
sbb
ljmp
cmp
mov
fildll
addl
cli
jne
sbb
xorw
inc
xchg
push
test
scas
fs
loope
insb
testl
jp
xchg
adc
mov
and
and
rcrl
pop
test
mov
ss
js
pop
pop
jg
dec
pop
sbbl
xchg
sarl
arpl
fisttps
das
enter
icebp
jo
neg
push
lcall
push
push
mov
push
lds
arpl
lods
push
sub
cmc
inc
gs
xorl
popf
add
add
popa
test
add
test
jecxz
mov
cmc
mov
xchg
mov
movsb
lret
dec
call
sbb
pop
dec
repnz
inc
mov
iret
mov
scas
mov
xchg
rorl
std
jmp
jnp
push
adc
fcoms
xor
setg
sahf
mov
bound
iret
adc
or
inc
fwait
xchg
jbe
in
inc
sub
adc
lock
push
jecxz
bnd
enter
push
es
push
ret
out
xchg
xchg
fwait
xchg
jg
outsb
pusha
dec
add
pop
ret
mov
jnp
xchg
iret
sbb
loopne
sbb
insl
mov
push
idivb
jmp
mov
adcb
mov
outsb
jge
cs
cmp
jbe
xor
movsb
or
cmp
insl
mov
pop
add
ret
pmuludq
pop
daa
shrb
sbb
scas
rclb
js
loopne
lods
ret
jne
sub
cmp
call
insl
add
add
shll
pop
mov
int3
mov
cmp
fsubr
xchg
iret
cmp
xor
inc
mov
xor
stos
mov
shlb
in
or
xchg
xchg
inc
dec
xor
fwait
rclb
imul
xchg
repz
mov
sbb
pushl
fisttpll
sbb
mov
push
out
in
lods
jb
incb
inc
rcll
mov
test
in
pop
mov
and
inc
popa
lea
adc
or
lods
call
cmc
clc
dec
jno
add
cwtl
addr16
jo
bound
cld
push
sub
popa
rolb
xchg
in
stc
cmp
cmp
inc
push
mov
in
sti
sbb
sub
std
add
mov
push
push
or
inc
shrb
orb
xchg
fisubs
adc
iret
test
fwait
push
je
cltd
jne
sub
cltd
adc
push
mov
dec
inc
adc
je
mov
pop
stos
add
pop
loop
out
cmpsl
fadds
push
pop
adc
in
dec
push
dec
sbb
pop
lds
enter
sti
push
add
sbb
push
cmp
cmpsb
and
mov
and
icebp
adcb
xchg
push
outsb
or
rcll
outsb
cmpsb
dec
mov
mov
shll
inc
dec
push
arpl
in
sbb
leave
leave
cwtl
cmp
fcmovnu
jle
out
pop
fsubl
xor
inc
dec
xor
jl
dec
inc
mov
xchg
and
mov
add
andl
xor
rclb
cmpsb
test
inc
cmc
inc
jne
test
arpl
adc
mov
stos
and
inc
mov
dec
pushf
xlat
aaa
xchg
scas
or
out
icebp
push
dec
mov
xchg
mov
ja
aas
daa
lret
dec
das
mov
scas
rorb
jne
and
test
jmp
mulps
push
dec
lret
mov
jmp
xor
pusha
sbb
pop
bound
push
mov
addr16
inc
outsl
mov
sub
in
fisubrl
pop
call
pusha
pop
or
out
jne
xor
shlb
aam
xchg
incl
neg
ja
addr16
pop
cli
jp
xchg
test
xor
jmp
ret
lea
shlb
pop
dec
insl
push
xchg
cmpsl
fsubrs
aam
push
and
mov
sahf
mov
xor
js
cmpsl
in
inc
in
aaa
push
insl
mov
cld
fs
xchg
lods
popf
pop
cmp
dec
cmpsl
adc
pop
cwtl
sub
mov
fsts
pop
xor
add
inc
dec
xchg
push
push
push
popa
fs
mov
imul
pop
enter
adc
insl
sbb
jg
repnz
xor
mov
mov
adc
jns
call
cld
pop
xor
add
inc
cmp
xchg
dec
add
pop
and
mov
imul
xor
test
andb
aad
clc
fbstp
or
out
lret
mov
es
jle
int3
cmpsb
fimull
je
sbb
dec
nop
sti
xchg
lods
cmp
cmp
pop
sbb
cmc
xor
mov
sub
out
fcmovnb
cmc
inc
shrb
and
or
sub
int3
aad
popf
stos
jbe
pop
pop
xor
in
mov
out
hlt
dec
sub
sahf
add
pop
insl
cld
outsl
in
sub
fdivrl
bound
fstpt
das
jns
aaa
call
fisttpl
lds
dec
mov
mov
cwtl
mov
jmp
std
scas
shrl
loopne
xchg
nop
or
outsl
push
pop
fcmovb
cli
loop
cmp
inc
mov
sub
cmp
or
testb
xchg
je
mov
mov
xchg
imul
ret
xchg
lea
jecxz
xchg
mov
cwtl
jb
enter
repz
push
cmp
mov
faddp
rcrb
jns
cld
inc
sbb
sbb
fisubrl
fcomp
scas
sbb
fldcw
out
popf
sub
push
jl
mov
insl
call
jns
leave
lcall
sbb
adc
addr16
push
and
xchg
xchg
jg
and
in
push
adc
lds
icebp
das
mov
push
shlb
mov
cmp
push
or
out
or
sbb
mov
sahf
sub
mov
cmp
hlt
mov
mov
minps
leave
lea
xor
dec
or
add
mov
adc
dec
push
mov
cmp
pop
clc
dec
stos
push
cmp
cmp
jp
aam
dec
cmp
lcall
push
push
sub
add
bound
mov
fs
mov
xchg
cmp
push
mov
out
test
sbb
mov
popf
jb
xchg
sti
pop
inc
push
inc
mov
cld
call
jle
cmpsb
inc
jne
in
mov
insl
and
xor
cltd
mov
int3
jnp
and
out
pop
dec
cld
xor
inc
dec
lock
and
jb
test
pop
test
fistl
in
data16
xor
lock
ret
add
shll
adc
test
mov
hlt
sbb
je
xchg
arpl
xchg
xchg
pop
iret
iret
fwait
xchg
inc
jp
xor
mov
xchg
cmpsb
call
push
sbb
sbbl
stos
ret
icebp
sub
mov
imul
mov
adc
push
pop
mov
aad
popf
xchg
inc
rolb
pop
sbb
in
mov
push
arpl
cwtl
mov
mov
fs
mov
adc
mov
jo
shlb
push
push
je
push
in
js
out
loope
pop
adc
cmp
notl
cld
outsl
insl
daa
out
lods
dec
or
out
xchg
mov
addr16
inc
push
lret
jbe
push
and
lea
push
imul
inc
xlat
loope
xchg
lret
lret
arpl
xchg
sarb
in
adc
pop
fwait
call
jle
or
mov
xor
mov
and
mov
inc
movb
int3
mov
lcall
data16
in
inc
sub
xchg
into
mov
in
jns
mul
pop
jg
xor
fsubrl
scas
rcrb
push
fsubrl
pushl
xor
rcl
aam
xchg
xor
div
pop
call
push
mov
clc
sbb
mulb
shlb
stos
out
jo
fdiv
sbb
test
cmp
mov
lods
mov
mov
sub
jne
mov
inc
push
out
inc
lret
jmp
insl
test
test
adc
imul
pushf
test
cmpsb
outsb
inc
fstpl
sbb
or
loopne
es
clc
mov
jno
push
stos
imul
and
xchg
sub
push
pop
test
aaa
push
cmp
sti
push
out
xchg
cmp
int
push
mov
mov
in
xchg
jmp
out
scas
push
leave
addr16
mov
dec
jg
jbe
insl
and
lea
xchg
adc
pop
or
pop
mov
push
xchg
clc
lods
push
lcall
sbbl
cmp
add
push
dec
add
add
or
cmp
adcl
adc
push
es
and
not
cmc
jae
test
push
xor
mov
lret
pushf
inc
adc
ja
and
xor
in
sub
xchg
or
cmc
adc
xchg
inc
in
push
add
loop
into
cs
mov
repnz
sbb
lret
into
stc
mov
cmc
push
mov
mov
mov
fadd
std
hlt
xor
fsts
aaa
inc
lods
sbb
int3
pushf
fildll
cmp
jns
mov
movsl
popa
pop
aaa
push
sub
mov
and
lea
dec
in
mov
jle
ret
scas
dec
jp
rep
subb
mov
aad
jg
ret
cmp
add
hlt
xchg
shrb
xor
flds
or
sbb
int3
xchg
sub
or
mov
mov
add
add
lcall
cmc
mov
lahf
ss
cwtl
popf
mov
repz
sbb
es
xchg
out
dec
scas
dec
out
xor
dec
dec
mov
inc
jl
xchg
and
xchg
add
mov
in
lret
std
mov
mov
sahf
loopne
cmova
in
outsb
mov
add
xor
jae
cltd
sbb
cmp
out
mov
or
stc
xor
push
mov
cmpsb
int3
ja,pt
or
aaa
and
loop
or
sub
xchg
iret
sbb
repz
xor
dec
push
aaa
sub
jae
cltd
xor
mov
fildll
mov
adc
add
and
jp
fcoml
cmpsl
jg
or
std
mov
cs
out
test
push
push
or
xchg
jno
sbb
push
cmp
mov
leave
sbb
ficoms
mov
xchg
hlt
call
sub
mov
and
xchg
mov
sahf
adc
notb
jmp
mov
jo
xchg
into
roll
jno
jmp
xor
push
je
js
hlt
out
inc
cmc
mov
mov
cwtl
sar
mov
jecxz
or
push
dec
xchg
xor
push
sbb
ret
out
inc
mov
sub
xorl
xchg
fwait
movsl
xor
loope
adc
rorl
sbb
lock
cmp
das
repnz
xor
jg
push
cltd
add
out
jne
fsubr
push
dec
adcb
sbb
stc
sbb
mov
push
in
jmp
sbb
sbb
movsb
jge
test
mov
jmp
scas
mov
push
cltd
sbb
jmp
add
adc
fcmove
adc
push
mov
out
lds
fcoms
sub
jo
jns
sarl
or
xchg
or
add
scas
cwtl
pop
add
pop
inc
call
pop
mov
mov
bound
cmpsl
fwait
pop
mov
aas
push
mov
les
sub
xchg
outsl
popf
std
imul
jbe
pop
idiv
push
adcl
jl
loop
sub
call
cmp
aaa
sub
out
cld
mov
in
sarl
sub
xchg
and
loopne
pop
mov
ret
cmp
mov
jbe
add
cmp
jbe
mov
nop
add
jl
mov
mov
mov
jg
shlb
test
imul
scas
inc
sbb
mov
aad
inc
or
fidivl
ss
flds
jle
fdivs
sarl
fisubrs
call
fsubrs
dec
push
cmp
repnz
stc
outsb
pop
lods
sbb
jmp
push
imul
sub
inc
shll
pop
sahf
fisttpll
aam
pop
stc
fwait
loope
imul
jns
fprem
shll
icebp
sbb
mov
lock
ss
cmp
mov
push
xchg
push
pop
ds
and
jbe
fwait
push
and
mov
dec
and
out
jne
pop
frstor
fldenv
dec
lods
xor
xchg
imull
loopne
arpl
xlat
popa
psubb
movsl
sbb
cltd
or
movsb
test
ljmp
dec
or
fistps
popa
dec
popf
push
out
lret
mov
int
cld
add
ljmp
rorl
and
mov
loopne,pt
fsubl
jo
lods
fcom
xchg
xchg
scas
mov
pop
mov
inc
inc
bound
pop
lret
inc
and
cs
jl
je
xchg
push
lea
add
cld
and
test
and
out
mov
xor
jns
cmp
cmp
jmp
ficoms
lcall
jp
or
mov
sub
inc
sahf
xor
lret
rep
xor
xchg
imul
mov
jns
mov
mov
adc
fisubrl
ds
mov
adc
pop
cmpsb
adc
jp
cmp
mov
sub
in
inc
cmpb
cwtl
cld
mov
stos
aas
insl
jne
pushf
sub
cmpsl
out
call
mov
xlat
cmp
mov
and
mov
imulb
int
xchg
scas
add
in
xchg
jbe
enter
fisubl
test
lret
mov
xor
sub
xor
or
das
xchg
mov
xor
lods
jecxz
pop
cld
lds
push
ret
arpl
imul
and
sbb
sahf
pop
loop
loope
push
sbb
push
addr16
and
ss
mov
pop
mov
repnz
jno
mov
push
pop
inc
push
pop
lahf
or
mov
pop
xchg
adc
and
mov
inc
outsb
xor
jae
xchg
xor
iret
ret
jle
add
add
fildl
sub
hlt
les
ficompl
vpaddsb
jecxz
ret
adc
out
cmp
sbb
repnz
xor
clc
jp
les
jecxz
enter
mov
pop
out
cli
mov
fnstsw
xchg
pop
pop
repz
rorl
mov
lods
ficompl
cli
and
dec
or
addr16
add
lret
dec
lock
push
xor
mov
adc
fs
and
ret
test
in
push
movsb
decl
cmpsl
xchg
lcall
mov
push
push
clc
push
xor
in
stos
into
ljmp
iret
xchg
xchg
jmp
fbld
outsl
call
add
adc
add
lcall
aad
pop
and
into
shlb
pop
into
push
arpl
pop
das
sub
and
pop
repnz
xchg
adcl
xchg
lea
fstp
xlat
sahf
std
lock
dec
ja
pop
xor
loopne
push
cmp
lret
sar
add
jp
sub
adc
xor
movl
sub
test
jl
xchg
out
out
pop
cld
xor
jno
fmuls
dec
rcrl
int
imul
sti
loopne
lea
arpl
jl
mov
inc
mov
ljmp
xchg
outsl
fcompl
aaa
daa
jg
negl
mov
add
aad
sub
leave
jp
pop
mov
pop
mov
loopne
sbb
dec
aaa
push
xchg
mov
cwtl
adc
and
gs
dec
jae
push
ret
enter
mov
mov
mov
je
loop
adcb
or
adc
dec
jmp
cmpsl
insb
testl
mov
mov
inc
push
xor
aad
cwtl
pop
mov
fcmovnb
in
cmp
xor
aad
aad
sub
jno
inc
add
dec
movsb
movsb
lods
out
es
je
mov
out
sbb
lea
xchg
cltd
sti
hlt
sub
mov
pop
dec
jmp
pop
out
adc
mov
xchg
push
out
sbb
cmc
and
test
mov
sbb
adc
aam
mov
mov
pop
sub
popa
rclb
jbe
push
cltd
mov
in
cmp
enter
xor
loope
rorb
push
sti
add
xchg
pop
mov
divb
adc
shl
scas
push
out
push
push
dec
in
mov
hlt
add
js
pop
fs
jb
xchg
rorl
sub
lock
and
fwait
push
jns
jae
pop
mov
sbb
addr16
outsb
rcll
test
and
ss
mov
or
xor
cmpsl
add
mov
lea
dec
aam
mov
and
enter
pop
test
inc
inc
lcall
jl
jp
mov
in
mov
fwait
shlb
xchg
inc
arpl
cli
daa
loop
mov
aas
mov
adc
sbb
nop
call
testb
and
pop
adc
inc
cmp
iret
dec
and
pop
or
fs
mov
mov
jno
push
xor
mov
in
mov
js
fstp
jnp
mov
add
jg
and
mov
push
inc
rolb
mov
popa
mov
das
pop
mov
out
sub
mov
sti
xchg
xor
add
mov
and
cltd
xchg
inc
jne
xchg
sbb
inc
aas
ficompl
maxps
pusha
insb
arpl
fildl
cli
or
mov
xchg
outsb
addr16
xor
mov
repnz
add
addr16
out
jae
cld
push
cli
repz
aad
sub
cmc
xor
cmp
test
std
sub
in
clc
xchg
into
and
mov
enter
push
mov
cmp
xchg
mov
daa
xor
push
push
push
insb
stos
mov
enter
jmp
ret
ss
aaa
cmp
test
jp
jns
sub
aas
xchg
lea
rolb
inc
sbb
adcb
lock
add
sbb
sahf
or
in
or
mov
gs
inc
xlat
pop
ret
jecxz
sbb
lret
jle
popl
adc
sbb
mov
push
dec
aas
imul
cmc
outsb
jp
scas
clc
ret
jb
mov
sbb
sbb
cmp
pop
xor
pop
push
insb
xchg
jnp
in
orb
cmp
dec
popf
push
or
xchg
cli
js
mov
mov
sub
fsubp
mov
push
dec
hlt
lea
xor
fs
pushf
cmc
add
sti
mov
adc
and
hlt
int
push
xor
inc
rol
or
enter
mov
jo
cmc
jge
pop
inc
int
rcrb
loop
test
adc
aad
jbe
es
and
loop
pop
xchg
adc
aam
movsl
sub
nop
inc
pop
dec
popf
and
cmc
repz
jl
or
aaa
in
jns
scas
fwait
cltd
nop
loop
ljmp
pop
out
sahf
daa
adc
loop
int
dec
xchg
cmc
test
cli
sbb
neg
inc
test
push
xor
je
mov
xor
mov
dec
roll
sbb
jb
xchg
fs
push
daa
pop
jecxz
in
in
push
dec
rorb
outsl
aad
into
cmp
adc
imul
jo
sbb
subb
es
pop
jle
gs
mov
sbb
mov
int3
adc
in
sub
hlt
cs
xor
mov
jae
xchg
mov
rolb
jns
mov
cmpsb
push
cwtl
cld
fwait
push
sub
mov
sbb
push
cmp
xchg
ja
cld
cmp
cld
test
shll
xlat
ja
cwtl
sarb
xor
repz
push
lods
nop
cltd
scas
in
mov
aaa
mov
lods
and
cwtl
leave
arpl
iret
jge
pop
rcr
or
jo
sub
stos
cmp
loope
mov
pop
and
into
mov
pusha
sbb
sahf
adc
mov
sahf
shrl
mov
loopne
lock
sub
stos
pop
sbb
cmp
test
sbb
loope
les
and
repnz
repz
push
mov
inc
out
jle
addr16
mov
jle
and
repnz
inc
inc
jp
sahf
mov
push
push
xchg
insb
sub
sub
test
orl
arpl
jns
icebp
pop
cmp
push
mov
repz
sub
and
or
mov
add
in
call
xor
mov
out
scas
jecxz
pop
lds
sbb
or
cmp
or
xchg
lods
xor
mov
jae
outsb
and
sbb
mov
jl
out
and
insb
imul
xor
cs
es
mov
rcll
mov
shr
dec
mov
iret
ja
loop
and
xlat
or
jl
inc
loopne
cmpsb
pop
lods
in
out
cld
ficompl
push
xchg
inc
clc
push
outsb
lds
jge
int
aaa
ds
loop
mov
mov
mov
lods
xor
push
cmpsb
in
xchg
add
mov
stc
sub
jbe
and
mov
fstl
xchg
sub
stc
xchg
lcall
je
rorb
mov
jecxz
pop
and
xchg
inc
push
lods
and
lcall
dec
push
xor
cwtl
pop
or
movsl
lcall
aaa
dec
or
pop
inc
test
xor
xor
jno
arpl
nop
mov
shlb
or
xor
ret
pushf
imul
in
js
pop
inc
cwtl
xor
lcall
cltd
pop
push
into
mov
out
mov
xor
enter
iret
sbb
inc
ljmp
xor
sbb
jbe
xor
loopne
sub
mov
push
sbb
mov
fs
sbb
and
lcall
lret
les
out
fldl
sub
repnz
push
mov
push
lret
aam
jno
mov
mov
xor
mov
dec
pop
dec
outsb
out
int3
add
xchg
adc
or
call
scas
fnstsw
pop
xchg
sarb
dec
lret
jecxz
rcrl
add
add
cmc
movsl
ja
lret
insb
cli
adc
loop
lock
mov
mov
dec
andb
adc
push
push
add
rcrl
mov
dec
mov
sub
push
add
mov
insl
pop
aad
or
mov
cmp
jno
sub
inc
xchg
movsl
popa
sti
xor
adc
mov
dec
jge
xor
jp
in
fisubrl
mov
repz
jmp
sbb
sar
jg
and
fldl
dec
dec
insb
fs
aaa
imul
dec
call
mov
fs
xchg
add
enter
cmpsb
sbb
nop
flds
insb
mov
xchg
dec
imul
sbb
addb
adc
mov
mov
or
add
incl
push
js
push
xchg
icebp
jo
in
pop
out
aas
xor
test
sbb
xor
xor
add
mov
push
xor
rcrb
leave
fnstcw
and
es
lcall
xchg
lods
mov
arpl
jmp
push
popa
or
fsubr
mov
fisubs
leave
jmp
fldenv
mov
loope
int3
or
adcl
push
pop
roll
out
cmp
mov
out
mov
stc
loop
push
shll
sub
ror
ret
inc
cwtl
dec
shll
scas
lahf
sbb
pushf
mov
push
and
clc
sbb
add
xchg
mov
add
shlb
and
xor
es
push
dec
loopne
cmpsl
mov
stos
xlat
ffree
iret
loope
das
sbb
push
gs
jl
mov
adc
ret
mov
popa
into
out
mul
pop
jg
es
in
xchg
cmpsl
add
cmp
cmpb
pop
add
push
and
mov
and
jo
pop
and
inc
jnp
aam
rcr
or
adc
xor
loop
enter
mov
and
cmc
ret
aam
push
nop
js
push
xchg
test
aad
loopne
mov
fcomps
pop
dec
xchg
in
leave
jecxz
mov
mov
mov
add
xchg
mov
pop
jns
mov
xchg
movb
xor
sub
icebp
fstps
or
fdivrl
les
pop
das
loop
adc
inc
jbe
jecxz
fildll
clc
dec
nop
mov
in
mov
enter
sbb
xchg
xchg
push
arpl
cltd
sarl
scas
pop
stos
outsb
loop
jae
addr16
loopne
lods
fimull
sub
push
orl
mov
xor
lret
mov
das
mov
sbb
xchg
hlt
mov
sbb
add
and
jl
in
mov
mov
xchg
cmp
frstor
inc
jns
cli
lcall
sbb
in
pop
sbb
sub
push
lds
push
aas
movsl
bound
push
jns
xor
fmulp
fistl
hlt
push
idivb
jns
add
mov
push
bound
mov
fnstsw
int3
and
scas
jo
dec
push
pushf
in
dec
inc
out
ljmp
out
jge
add
xchg
cmpsb
inc
in
mov
pop
adc
test
filds
inc
dec
add
insl
enter
xor
jbe
pop
fwait
cmpsl
push
add
dec
pop
mov
inc
dec
cs
insl
popa
icebp
sarb
cwtl
loope
shlb
imul
mov
ja
std
out
sbb
add
loop
cmp
jmp
inc
or
cltd
mov
adc
aam
dec
iret
pop
popa
rclb
imul
sbb
in
push
push
divb
jne
dec
inc
aaa
addb
lret
ret
and
pop
mov
jns
out
enter
loop
mov
testb
and
test
fs
adc
and
adc
dec
mov
inc
mov
mov
fs
lds
into
or
push
mov
jno
shl
inc
jl
add
movb
mov
dec
aaa
dec
mov
ja
loop
int3
popa
insl
loop
inc
and
rorb
push
xchg
inc
das
jecxz
and
push
mov
xchg
adc
lret
xchg
jp
adc
mov
jp
push
push
mov
jmp
jb
push
cmp
outsl
pushl
popf
push
push
daa
sbb
fisubl
push
mov
ds
ret
ljmp
inc
movsb
mov
xchg
cmp
cmpsl
stos
cmp
adc
test
dec
xchg
push
mov
dec
scas
rcr
test
jne
adc
sbb
in
jno
xchg
int3
sub
add
cmpsb
jo
pop
shll
insl
and
cli
cmp
xchg
ret
mov
js
sub
mov
loope
sub
lret
lea
insl
mov
sbb
movl
cmp
ja
andb
xchg
xchg
mov
lods
loope
mov
sbb
jmp
push
push
icebp
sbb
loope
repz
sarl
sbb
sti
out
pop
mov
xchg
adc
xchg
sbb
fwait
fs
fnstsw
pop
fists
jae
dec
mov
jbe
sbb
mov
jp
and
fdiv
ja
xchg
jecxz
repz
pop
test
sub
pusha
notb
mov
cwtl
je
in
cs
pushf
bound
xchg
in
mov
mov
xor
mov
adc
push
dec
jl
dec
out
data16
push
sub
fsubp
aad
pop
movzwl
pop
adc
dec
pop
mov
inc
leave
push
ret
cltd
or
jo
lods
shll
dec
mov
mov
stc
leave
adc
and
shll
das
inc
icebp
or
jl
xor
std
gs
jl
xchg
adc
loop,pn
xor
addl
nop
cltd
lret
or
or
or
in
sti
lds
sbb
fidivrl
aas
cmc
ret
push
cmp
mov
scas
loop
push
mov
fimull
subl
cld
outsb
xchg
xchg
push
nop
inc
mov
mov
adc
in
mov
ffreep
push
and
in
dec
imul
inc
cmp
arpl
add
cltd
xchg
fidivrs
push
xor
xchg
shrb
js
push
dec
cmp
jno
inc
dec
jg
andb
and
cmp
xchg
in
cmpsl
ds
jg
sbb
lock
sbb
outsl
mov
cmc
pop
cmp
dec
add
jnp
jnp
cmp
test
loop
int3
mov
mov
mov
mov
push
inc
push
sbb
iret
push
and
orb
les
mov
push
fsubrl
jbe
insb
cmpsl
push
mov
cwtl
mov
and
adc
push
add
test
sbb
adc
sub
test
das
add
mov
push
mov
jns
subl
cltd
in
dec
jne
fstl
push
or
xor
cltd
jge
mov
inc
dec
mov
addb
xchg
gs
xor
ja
out
loope
mov
xchg
dec
add
pop
addr16
aam
jbe
loopne
push
imul
std
or
mov
sub
fwait
icebp
stos
jb
sub
lods
sub
gs
imul
sub
addr16
std
xchg
inc
std
ss
push
incl
pop
push
push
jno
fistpl
dec
push
icebp
push
aam
roll
mov
lahf
pop
test
mov
mov
sahf
cmp
dec
shll
pop
xchg
push
pop
out
sub
sub
sbb
ja
xor
xor
inc
fldcw
mov
push
dec
sbb
and
lahf
and
and
cmc
jl
add
call
mov
push
inc
gs
pop
stc
jl
fs
lods
aad
cmp
add
xchg
lods
push
adc
fimuls
in
lahf
lea
cmpb
ret
sbb
pushf
das
out
mov
mov
shlb
jl
lock
adc
les
xor
loop
mov
xchg
inc
int3
or
test
imul
es
iret
jge
and
dec
cwtl
or
and
ret
fs
pushf
inc
jo
sub
sahf
xlat
out
dec
xchg
and
and
rcll
or
xchg
cmpsb
push
jno
stc
mov
mov
loop
push
insl
loope
mov
cmpsl
mov
mov
xchg
fs
jno
scas
inc
inc
ds
cmp
mov
adc
std
mov
cmp
dec
shlb
xchg
xchg
outsl
jns
and
sub
inc
add
ds
js
or
pminub
popf
stos
jle
add
sbb
inc
and
stos
jecxz
jo
std
movsl
mov
cmp
xchg
aaa
call
push
inc
imul
js
inc
stos
ret
push
xor
sar
pop
leave
stos
js
xchg
cmp
sbb
sti
lret
ja
loop
mov
add
inc
mov
lret
inc
in
loop
fldenv
push
lds
push
bound
pop
dec
inc
cmp
scas
insb
jbe
shrb
adcb
dec
stos
sub
jae
and
mov
call
jg
push
push
and
or
add
jp
outsb
pop
cltd
bound
int3
insl
insb
addr16
cli
into
out
inc
push
adc
add
iret
jnp
aaa
es
mov
mov
mov
lods
mov
cmp
outsl
mov
arpl
lds
inc
sbb
sub
in
xchg
jnp
jmp
dec
jns
fs
test
mov
inc
mov
aad
push
cltd
inc
mov
insb
adc
in
push
sbb
inc
rcrl
cmp
out
imul
sahf
jno
push
dec
adc
xchg
xchg
mov
pop
dec
or
icebp
mov
mov
out
std
pop
das
mov
test
pop
cmp
fcomi
sbb
cmp
lret
icebp
inc
sbb
loop
js
fistpl
lods
mov
mov
gs
mov
fnstcw
aaa
stos
cmc
pop
push
sub
std
jl
xchg
and
jp
call
xchg
push
les
out
mov
call
pop
add
jne
mov
out
shll
daa
sti
cwtl
inc
mov
inc
movsl
cmc
js
sbb
mov
js
popa
lods
lret
lods
xor
loope
imulb
add
out
sub
repnz
xchg
add
xor
addr16
pop
stos
mov
sub
jg
js
bound
les
in
inc
loop
jbe
push
add
jmp
mov
rcrl
test
test
clc
ds
in
xchg
andl
lahf
fistps
cwtl
mov
cld
sbb
mov
pop
jae
cwtl
in
xor
cmp
mov
je
mov
cld
jmp
or
mov
test
dec
xor
add
jne
adc
sub
scas
mov
pop
push
xlat
add
lahf
push
sbb
jo
pusha
mov
mov
sub
data16
test
jp
sub
add
mov
jne
jmp
icebp
xchg
xchg
push
icebp
imul
cmp
lret
mov
push
and
and
mov
xchg
scas
dec
jb
adc
dec
outsl
ss
out
insl
aad
and
sub
sub
test
and
or
push
pop
das
mov
sub
xchg
inc
fists
mov
outsl
mov
leave
addr16
dec
insl
inc
sbb
xor
andl
cmp
jecxz
outsl
push
jl
jb
insb
xchg
sub
test
pop
inc
xchg
hlt
popl
test
mov
pop
mov
and
pusha
ja
sti
out
adc
push
sbb
icebp
mov
es
xor
pusha
xchg
ja
cmp
ljmp
rcl
mov
cmc
jp
pop
les
push
xor
mov
sbb
arpl
pop
jo
ja
insl
sbb
or
pop
ret
jp
push
sub
cmp
outsl
call
lret
mov
bound
les
rorb
imul
insl
cmp
cmp
cli
testb
push
inc
xorb
dec
into
nop
add
ss
pop
xor
movsb
mov
xchg
xchg
lea
in
fstl
cmp
jecxz
and
push
lret
jecxz
clc
clc
push
ljmp
movsl
or
xchg
jecxz
push
add
mov
data16
fldt
movsb
js
and
leave
loop
mov
xchg
pop
and
and
ljmp
jmp
cli
push
ss
cmp
dec
xchg
in
xchg
lahf
mov
xchg
cwtl
inc
in
sbb
pop
das
mov
dec
int
clc
dec
xor
daa
adc
and
movsb
inc
fs
sbb
or
icebp
pushl
in
repz
mov
rclb
ljmp
out
aad
jmp
popa
and
out
dec
xchg
ljmp
add
cltd
fidivrl
add
icebp
cli
sub
call
mov
inc
add
insl
lds
hlt
xchg
mov
out
pop
and
fstpt
and
pop
xchg
arpl
add
fs
or
fnstenv
add
pushf
jmp
pop
sub
in
jge
mov
leave
loopne
add
push
ss
faddp
sbb
fisubrl
imul
jne
popa
fdivs
cmpsl
jae
xchg
daa
fisttpll
inc
jp
jge
cs
jecxz
push
pop
inc
mov
xchg
sub
fwait
pop
pop
xor
add
dec
or
js
or
lahf
das
pop
push
pop
in
aas
pusha
stos
dec
inc
inc
sbb
rol
aam
bound
jg
nop
push
ja
rcrl
push
dec
mov
and
iret
daa
pop
sub
add
add
or
adc
out
jge
add
rolb
push
call
test
pusha
pusha
mov
pop
out
out
pusha
adc
cmp
xchg
dec
in
mov
jne
movsb
or
test
aaa
popfw
hlt
stos
movsl
jns
neg
push
fildl
in
push
mov
or
adc
xchg
cmc
jnp
out
aam
notl
mov
mov
mov
rcrb
nop
or
pop
out
into
lahf
xor
mov
cmp
mov
jmp
mov
fistpl
mov
or
lcall
mov
adc
ljmp
cmc
cld
test
icebp
xchg
adc
pop
mov
dec
cmp
or
lret
fisubl
aas
sub
xor
pop
jne
addr16
popa
aaa
push
lret
lea
push
insb
mov
mov
push
jno
lret
jmp
mov
xchg
sbb
mov
ror
mov
clc
dec
and
mov
imul
push
repz
movsb
xor
and
out
ds
loopne
mov
jge
sbb
pop
pop
addr16
sbbl
cmc
aad
in
pop
int3
sti
adc
sbb
andb
gs
divb
cmp
add
iret
add
sub
or
inc
dec
sbb
fsubrl
lahf
sti
and
sub
adc
out
cmp
mov
sbb
imul
xor
xlat
insl
jle
adc
fisubrl
mov
je
xor
cltd
sub
leave
mov
and
fldenv
cwtl
push
xor
jo
ficomps
sbb
cmpsb
cmp
push
inc
pop
std
loopw
scas
mov
push
xor
sub
out
inc
pop
mov
and
xchg
inc
cli
leave
testl
repz
adc
xlat
divb
or
cmpsb
xchg
es
adcl
sub
cli
mov
inc
jns
sub
push
fstpl
inc
pop
dec
or
add
ds
test
push
inc
inc
mov
inc
loop
push
push
adc
ret
mov
loopne
xchg
rorl
sbb
adc
push
sbb
mov
mov
mov
mov
jecxz
sub
scas
pop
jmp
and
xor
fcomps
cwtl
call
arpl
lea
add
mov
fbld
cmpsl
xor
mov
or
js
mov
dec
pop
jg
outsl
lcall
out
aam
popa
int3
push
adc
idivl
addr16
insl
shlb
mov
pop
lret
sub
inc
stc
mov
or
jp
mov
push
into
ss
outsb
add
mov
cmp
sub
push
xchg
jbe
pushl
adc
or
sbb
popa
push
adc
mov
outsl
loop
in
xor
into
sbb
lahf
loopne
sbb
mov
cld
pop
sub
mov
sbb
jmp
popa
sub
inc
xor
cmp
mov
pusha
leave
dec
mov
xor
lds
push
data16
and
lods
loope
fidivrl
dec
push
fisttpl
sub
mov
jmp
dec
mov
sti
mov
je
adc
pop
adc
mov
lea
or
xchg
cltd
mov
pusha
pop
cmpsl
jne
out
enter
call
loop
mov
pop
xor
into
push
inc
fwait
mov
test
inc
xchg
xchg
les
sbb
push
lods
or
bound
and
mov
ret
loopne
sti
ds
sbb
xorb
mov
xor
lods
dec
sub
mov
sub
pop
iret
or
les
cmpl
int3
mov
mov
inc
js,pn
dec
mov
lock
rcl
pusha
push
shlb
inc
shlb
jl
fcompl
pop
test
jmp
icebp
xor
out
inc
repnz
mov
sbb
fmuls
std
pushf
sar
addl
imul
gs
xor
cmpsb
xchg
xchg
bound
mov
lret
lock
add
jae
lds
pop
sub
movsl
int
inc
mov
je
movsb
push
daa
outsb
shlb
mov
cli
pop
dec
into
int3
fs
loope
hlt
ss
rorl
add
fwait
scas
mov
leave
sahf
dec
lock
fndisi(8087
mov
fiaddl
rolb
es
ficoms
lods
fldt
and
int3
cmpsl
sbb
mov
dec
aam
mov
jmp
cmp
sub
sub
aaa
pop
loop
fsubr
pop
cmp
push
adc
sub
in
mov
and
xor
mov
pop
aas
stc
mov
adc
xor
int
mov
add
int3
int
cmp
test
cmpb
jno
ret
jnp
dec
lea
cmp
aaa
jno
mov
int3
jne
or
pusha
mov
in
mov
das
ret
pop
add
adc
push
xchg
cli
inc
inc
push
mov
sub
xor
inc
cltd
data16
jae
mov
dec
dec
xor
adcl
test
push
mov
mov
jecxz
fdivp
in
std
push
scas
xchg
jno
sub
test
lret
xor
mov
aad
fidivrs
adc
lds
pop
lock
mov
push
jno
sub
repnz
sub
adc
pushf
xchg
popa
in
fists
sbbl
dec
cwtl
imul
sbb
fwait
and
repz
push
push
mov
or
or
bswap
repnz
fstp
xchg
es
lea
pop
mulb
aas
cmpb
mov
imul
jb
xchg
mov
sub
xchg
inc
loop
add
test
ret
cld
add
clc
xor
push
insb
insl
mov
xor
mov
jecxz
rcrb
rcrb
mov
gs
push
cs
cwtl
cmp
push
out
push
imul
cwtl
orb
cmpsl
mov
fmul
adc
inc
add
in
dec
cltd
mov
sahf
dec
jae
cmc
cmpsl
add
lods
pop
xchg
pushf
wrmsr
lea
pushf
adc
mov
les
test
lea
push
jl
cmp
sub
push
push
fnsave
cmp
xlat
add
lods
cmpsb
lret
sbb
loope
sub
aaa
cmpsl
out
push
popl
xchg
dec
paddsw
out
mov
pop
push
ljmp
fistps
fnstenv
lcall
push
sub
and
inc
and
lock
js
jbe
sbb
cmp
iret
int
push
mov
add
push
pop
jns
pop
jns
push
jg
test
xchg
or
ja
mov
mov
cmp
outsl
mov
jl
shll
fcomi
cmp
fdivrs
mov
jg
adc
in
or
scas
mov
jae
icebp
addl
nop
cs
sbb
sub
fs
mov
aam
mov
dec
push
xchg
cltd
sbb
push
test
xchg
or
jno
fsts
mov
outsl
or
mov
add
cmp
sbb
movsb
mov
or
insb
in
push
dec
cmpsb
into
clc
lock
imul
sub
nop
sub
lods
dec
aas
popa
push
xchg
rorl
pusha
test
ret
cmpl
fildl
add
dec
lret
mov
mov
xchg
fs
xor
ret
dec
sbb
rcll
rclb
in
mov
cmpl
inc
jnp
mov
push
aas
icebp
add
cmp
lahf
repnz
pop
pop
sbbl
xor
ficoml
pop
test
pop
in
rcrb
cmc
sbb
test
cmp
cli
das
mov
adc
xchg
inc
insb
pushf
test
in
xlat
sti
jl
push
sahf
lcall
loop
lock
ljmp
call
mov
push
fidivrl
outsl
sub
andb
xchg
imul
ds
jl
mov
pop
xor
adc
dec
sbb
sub
adc
jae
adc
cmp
arpl
and
sbb
pop
sti
and
or
ja
sub
dec
dec
pop
movsl
nop
jne
dec
imul
mov
xchg
inc
sbb
stos
aaa
fstpt
addl
adc
pushf
fdecstp
and
fbld
add
les
pop
ljmp
inc
repnz
and
sub
in
std
popf
test
nop
arpl
pop
bound
mov
xchg
adc
or
mov
and
add
jl
jecxz
jl
and
or
push
aaa
pop
xchg
pop
dec
in
cmp
popa
icebp
pop
cmc
dec
xlat
repnz
movsb
mov
push
inc
into
in
fwait
data16
add
xchg
mov
push
sub
ljmp
mov
mov
mov
push
popa
mov
push
inc
jmp
mov
mov
test
push
mov
int3
popf
fwait
cld
bound
mov
jb
and
jle
add
mov
data16
or
push
sub
enter
jge
cli
adc
test
mov
cmpsb
test
xchg
ja
sub
loopne
lds
pop
lcall
push
mov
int
int
and
xchg
negl
inc
inc
adcb
push
adc
int3
ds
fmuls
jbe
and
xor
outsl
jge
adc
add
dec
pop
repnz
push
arpl
jo
pop
in
sbb
sbb
mov
mov
aaa
jmp
popf
and
lret
mov
pop
mov
dec
xchg
adc
pop
test
outsb
cmc
xor
or
das
cs
xchg
or
fildll
xchg
jmp
int3
sbb
or
adc
xchg
fnstenv
xchg
in
push
insl
dec
adc
lret
imulb
sbb
inc
imul
aad
jecxz
daa
addr16
lds
mov
pushl
xchg
pop
xchg
rcll
mov
jbe
dec
mov
pop
dec
jae
orb
pop
jl
xchg
aam
mov
push
adc
xchg
jno
test
jecxz
push
in
inc
sub
or
pop
cmpl
and
mov
in
jecxz
test
jo
jge
xchg
dec
test
je
jbe
scas
gs
pop
lret
movsl
jns
and
jne
cmpb
inc
fdivr
rorl
lds
jle
xchg
xchg
fwait
lcall
xor
xor
or
mov
jp
ds
out
lock
daa
adc
add
push
hlt
jno
imul
adcb
xlat
arpl
adc
jae
mov
jbe
jmp
and
mov
mov
jl
pop
cmc
inc
sbb
ret
inc
push
adc
test
jp
lods
xlat
add
sbb
ret
ret
pop
xchg
lds
lahf
ret
push
jae
filds
fs
leave
mov
or
xor
sbb
xlat
xor
sub
adc
leave
addl
jne
daa
ret
jg
adc
xor
and
push
or
popa
sub
lcall
inc
test
add
jmp
loopne
pop
out
rcl
ja
push
mov
lret
pop
out
loop
mov
fisubs
jge
dec
dec
push
out
gs
in
iret
push
sahf
jbe
inc
sbb
pop
inc
sub
lret
ret
sbb
xchg
out
sbb
push
ret
lods
testb
fwait
or
jle
int3
inc
jmp
in
push
loope
and
lock
or
jle
test
mov
jnp
jno
xchg
mov
pop
xor
pop
push
add
ds
ds
xchg
adc
mov
mull
jl
aam
push
inc
push
mov
fs
test
mov
cli
add
mov
or
je
add
or
sbb
adc
nop
daa
test
push
aam
ss
es
fadds
js
jmp
lret
hlt
cmp
int
das
xchg
jno
ljmp
repz
insb
inc
stc
jb
pop
ss
sbb
mov
dec
shll
cld
cmpsl
lods
pushf
stc
fs
inc
pop
sub
imul
incb
ret
mov
or
in
jmp
mov
testb
mov
push
inc
jle
pop
push
push
incl
xor
adc
popf
out
outsl
add
jg,pn
into
addr16
gs
and
sahf
and
jne
xchg
cmp
movsl
addl
xchg
xor
movsb
adc
xlat
jmp
lea
cli
xorb
testb
lods
pushf
mov
jo
imul
cld
mov
pop
dec
int3
jns
andl
jmp
pop
push
into
loopne
push
idivl
lret
out
inc
in
movsl
mov
sub
div
pop
lret
pop
or
and
mov
loope
jo
mov
icebp
cli
xchg
mov
repz
mov
adc
pop
mov
jnp
push
sbb
adc
or
loop
imul
or
les
push
and
mov
inc
and
out
test
mov
addl
xor
pop
test
and
cmpsb
imulb
fidivrs
les
loopne
fcmovnb
dec
ja
xor
and
shll
mov
stos
scas
pop
loop
adc
pop
rep
repz
loop
fdivs
jg
pop
xchg
call
dec
xor
mov
and
repnz
in
jno
xchg
je
lds
jno
inc
inc
int3
loopne
into
sahf
mov
pushf
call
test
push
push
or
and
adc
and
test
mov
ret
add
jnp
jne
mov
fcoml
mov
jno
inc
sbb
sub
mov
xchg
lret
xchg
push
fstl
sbb
sub
fdivs
xchg
xchg
dec
gs
das
stos
aam
mov
mov
call
jl
loop
pop
pand
mov
push
xchg
jnp
push
enter
push
adc
dec
pop
and
cli
xor
xchg
rcrb
push
test
lcall
dec
xchg
jge
inc
xchg
adc
lahf
mov
loope
add
negb
leave
test
cmovs
push
ret
dec
cli
xchg
js
imul
add
and
mov
js
fistpll
or
sbb
or
test
aad
xchg
aam
iret
pop
mov
inc
js
mov
or
in
cmpsl
cli
rcr
test
js
lea
add
gs
outsb
in
jo
ljmp
add
insl
bound
push
fcoml
push
mov
adc
cmpsb
jg
cs
sub
mov
cmp
xchg
mov
dec
mov
test
lock
jp
das
paddusb
push
sahf
jmp
in
ret
loope
xchg
popf
pop
pop
cwtl
adc
mov
pop
orb
call
ja
lea
and
in
pop
shll
and
aam
lds
call
jns
sbb
fstl
gs
lods
xor
insl
mov
iret
jb
jbe
clc
add
movl
enter
xor
cmpl
repnz
enter
loopne
push
pop
int
inc
or
movsb
and
mov
imul
mov
arpl
mov
mov
mov
mov
int
adc
xchg
movsl
insl
or
sbb
sbb
or
dec
pop
lds
inc
gs
adc
pop
lcall
out
xor
mov
push
mov
cwtl
push
cmpsb
push
jle
push
loopne
push
test
jnp
cmc
or
jecxz
xor
faddl
cmpb
mov
int3
aad
lock
mov
sbb
mov
pop
out
imul
aam
cmpb
js
stos
repnz
out
add
loope
adc
mov
call
cmc
mov
dec
aaa
push
dec
imul
out
jecxz
add
mov
outsb
jb
int
pop
test
test
nop
popf
je
push
dec
mov
fdivrs
jl
mov
movsb
xchg
sub
jo
test
andl
pop
mov
addl
and
idivb
dec
es
ds
cld
test
sahf
adc
xchg
lahf
iret
into
loope
xor
pop
xchg
rclb
mov
sbb
fists
in
cmpsb
iret
js
in
fistps
arpl
xchg
cmp
inc
xchg
movsb
sbb
movb
lods
aam
call
fiadds
mov
pop
nop
inc
and
pop
popf
adc
test
in
or
andb
testl
leave
lret
pop
add
clc
das
push
pop
fsub
es
out
out
xor
inc
fucomp
std
iret
cmp
out
in
stos
rol
inc
fidivl
push
out
mov
test
call
jbe
push
fisubrs
daa
pop
cwtl
and
addr16
push
push
sub
pop
jl
js
imul
outsb
enter
test
pop
repz
jo
pusha
mov
cld
mov
and
add
inc
dec
xchg
sbbl
mov
stos
cmp
xchg
jae
nop
shr
jg
fisubs
mov
push
loope
aaa
sbb
pusha
or
movsb
or
pop
fsub
push
fistpl
out
les
es
lods
mov
fxch
je
sbb
lret
stos
push
and
outsl
pop
jbe
push
xlat
add
cs
popa
mov
bswap
push
xchg
mov
test
cmpsb
or
inc
fincstp
adc
xchg
push
push
pop
or
pop
dec
xor
xchg
fwait
jle
sub
std
shlb
jne
add
fldt
push
jnp
out
push
std
xor
ja
cmp
outsb
mov
outsl
sub
add
dec
out
push
loope
xchg
cs
dec
jnp
std
gs
pop
cmp
xchg
popa
dec
mov
out
and
cmpsl
imul
push
es
fstl
lahf
and
das
and
mov
dec
insl
daa
shlb
aam
mov
adcb
pop
xchg
sarl
loope
inc
ret
mov
xor
cli
inc
xchg
dec
pop
cli
cmp
cmp
aas
xor
xlat
mov
mov
je,pn
mov
pop
xchg
cwtl
pop
cmp
adc
mov
fistpl
in
add
mov
lock
mov
nop
inc
xchg
shlb
std
rclb
jnp
fs
popf
stos
cmp
sti
push
add
xor
push
add
mov
lods
push
dec
jo
xchg
xor
dec
test
pusha
hlt
xchg
jne
mov
cwtl
lods
ret
jp
icebp
jmp
cld
push
not
pop
movsb
lret
or
and
sbb
pusha
xor
adc
stos
aaa
cmp
adc
dec
dec
cmp
jbe
test
xchg
mov
inc
cmp
xchg
jno
cs
mov
push
roll
cmp
or
cmpsl
jnp
stos
cmp
dec
jbe
fiadds
jnp
mov
inc
rorl
add
mov
xchg
lret
push
push
leave
mov
mov
adc
lea
lock
pop
int3
dec
icebp
add
jge
arpl
mov
sbb
pusha
dec
sbbb
or
cltd
hlt
cmp
and
sub
cmp
xchg
pop
mov
lds
aam
nop
add
pushf
jnp
movb
aas
or
cmp
xor
cmp
aad
xor
adc
vfrczss
pop
int
ret
inc
sub
cmp
movsl
mov
rorl
xor
arpl
dec
cwtl
xchg
dec
inc
dec
or
jle
stos
jne
jle
mov
add
cmp
or
popf
pop
scas
out
pop
mov
or
xchg
fisubl
push
shlb
add
std
and
xchg
cltd
mov
dec
pop
jb
fistl
mov
insb
mov
mov
scas
les
sbb
dec
imul
add
loopne
mov
or
movsb
sti
dec
sahf
fwait
cltd
inc
lret
xchg
out
icebp
mov
adc
lahf
loopne
lea
pop
pop
pusha
inc
mov
xchg
mov
fsubrl
cmc
cwtl
pop
gs
push
sub
mov
lock
adc
xchg
dec
push
or
push
push
push
dec
dec
fldenv
fcompl
inc
movsl
dec
fdivl
movsb
out
repz
jge
mov
adc
rcl
push
jns
add
sbb
cmpsl
out
jmp
sub
inc
ss
out
rclb
movsb
pop
lods
inc
inc
fcomps
leave
pop
movsl
movsb
pop
or
mov
adc
cmp
repz
fucomp
pop
jbe
lcall
enter
adc
les
lds
mov
adc
cmpsl
dec
aaa
pop
shl
sbb
push
mov
mov
or
pop
in
mov
xor
test
repz
and
add
fisubl
shl
mov
push
lcall
clc
call
popa
lea
out
mov
popa
inc
xor
push
xlat
stc
ffreep
int3
fists
mov
std
xor
scas
lret
jle
dec
movsb
and
xchg
ret
repnz
js
fiaddl
sub
sbb
mov
rcrl
les
mov
mov
fmuls
sub
mov
out
scas
rorb
jmp
fsubrs
scas
pushf
jne
mov
test
pop
movsb
iret
xchg
ror
inc
das
nop
mov
out
inc
add
cmc
jmp
cmp
jne
std
dec
fs
lcall
mov
xchg
xor
stc
mov
les
sbb
add
mov
cmc
jl
or
and
divb
jno
lods
js
bnd
pop
test
xchg
pop
popa
movsb
push
xchg
std
inc
mov
mov
lock
loopne
jns
mov
in
push
xor
stos
int3
test
nop
pop
xor
pusha
inc
daa
scas
popa
dec
mov
push
mov
adc
or
and
fdivrl
notl
add
push
mov
sub
loopne
pop
xor
test
push
jo
add
icebp
insb
jne
or
clc
sbb
loop
sbb
pop
mov
stos
inc
aam
sahf
loop
sub
cmp
sbb
pop
jbe
scas
jg
pop
mov
cltd
test
pop
mov
dec
or
mov
pop
orb
push
mov
cltd
incl
fstl
cmp
cwtl
out
test
jmp
in
xchg
or
int
pop
ljmp
cli
mov
fstl
mov
cmp
scas
movsb
sub
ja
mov
fmuls
inc
cld
cltd
cld
jae
dec
aas
ret
push
ss
xorb
jb
clc
popf
jmp
add
mov
inc
jne
jl
sti
fnstsw
xchg
push
pop
dec
dec
cmp
mov
rcll
fimull
and
dec
lods
sub
stos
loopne
cmp
mov
insb
cmpb
push
mov
pop
test
dec
dec
rorl
icebp
gs
push
jae
pop
xchg
mov
and
xchg
sub
cltd
leave
loope
xchg
ret
jmp
fnstcw
sub
iret
xchg
fcoms
and
pop
leave
cwtl
dec
in
push
fwait
and
mov
xchg
fbstp
dec
mov
inc
in
rorl
pusha
hlt
xchg
xchg
movsl
lea
add
cmp
pop
aas
xor
jmp
clc
adc
pop
nop
dec
ret
cmp
cwtl
jbe
sub
lea
cmpsl
mov
dec
xor
push
mov
ret
out
fwait
mov
adc
dec
dec
jg
aas
inc
lock
jecxz
data16
inc
pop
mov
imul
dec
sbb
in
int
mov
pop
adc
mov
pop
daa
inc
outsl
push
push
test
and
jecxz
sti
notl
mov
rorb
enter
cmpsl
xor
xor
pushf
push
rorb
jae
scas
rcrl
ljmp
lds
es
sub
push
orl
push
in
inc
and
outsl
orl
cld
mov
shrb
or
xchg
push
das
jae,pt
stos
call
jne
mov
hlt
fldl
out
mov
fwait
dec
sbb
mov
sub
dec
shll
cmp
fldl
push
push
jb
incb
pop
out
and
mov
jle
jae
cwtl
pop
adc
cltd
inc
or
lods
push
cmpsl
aam
stc
test
ret
js
jg
addr16
popf
js
add
popa
push
sbb
in
lods
push
mov
lret
or
daa
jne
ja
fcmovnbe
lods
popfw
push
xchg
dec
lds
jb
loopne
pop
stos
aad
sbb
and
push
cmp
or
int3
pop
jmp
aad
shrl
lret
add
inc
cld
roll
stos
add
push
into
mov
or
mov
inc
mov
je
jp
sub
xchg
loope
pop
in
add
fidivrl
or
cmpsl
arpl
mov
xchg
dec
pop
xchg
ljmp
int3
stc
jno
add
cmpsb
sahf
cmc
jb
out
sub
xchg
dec
add
jp
in
sbb
xchg
push
adc
jne
xchg
in
int
pop
push
and
or
fisttpll
fmuls
test
mov
mov
cltd
jp
pushf
adc
pop
jns
jb
pop
fisubl
loopne
rcrb
ret
sub
mov
stos
xor
push
popf
push
xchg
sub
xchg
pop
mov
addl
add
and
mov
xor
add
cmp
add
or
push
push
or
adc
adc
in
out
pop
push
jge
and
clc
and
jge
in
push
lea
int
jnp
push
adc
mov
fistpll
cmpb
popl
rclb
hlt
mov
enter
and
in
xchg
ficoml
dec
push
jmp
cmp
sti
add
add
mov
jbe
jmp
inc
push
in
mov
xor
hlt
adc
lret
shrl
loop
add
aam
dec
ret
in
mov
testb
push
xor
inc
jge
jo
mov
xor
xchg
jmp
cld
dec
or
fists
sub
stc
rcll
dec
fs
pop
mov
int
shrl
jns
into
shll
loopne
negb
sar
lock
inc
lds
andb
or
sti
fadds
lds
sub
and
pop
orl
mov
mov
lret
xchg
out
enter
loop
sbb
stos
xchg
sarl
out
dec
jno
stos
mov
fstpt
push
adc
pop
out
inc
outsl
ret
jmp
pusha
sbb
xlat
lret
xchg
or
inc
mov
push
and
mov
push
xor
ss
and
mull
iret
xchg
out
jg
cmpsl
sub
mov
cmpsb
cld
dec
jae
loop
outsl
outsl
dec
pop
leave
sbb
call
mov
and
in
lea
jbe
inc
incl
or
mov
dec
js
jle
stos
push
jnp
lahf
mov
dec
and
into
add
mov
adc
enter
jmp
xor
mov
xlat
mov
jecxz
arpl
movsb
or
cmp
or
pop
sbb
cmp
fsubrl
xchg
mov
aam
cmp
mov
bound
mov
lret
loop
cmp
adc
jno
data16
or
and
dec
shll
std
jl
fidivs
je
add
pop
lods
outsl
fistl
inc
jmp
stos
shll
mov
fldenv
xchg
pop
inc
sbb
dec
mov
out
in
push
cmp
mov
shrb
aad
dec
cltd
pop
cmp
notb
cmp
lret
pop
pop
stos
mov
mov
cmpb
xchg
lds
daa
push
pop
push
xor
add
xchg
mov
sbb
and
dec
or
sbb
sbb
xchg
mov
insb
jns
cmp
mov
push
clc
sarb
fucompp
mov
out
and
lcall
outsb
test
test
pop
das
mov
mov
and
jle
mov
push
je
subb
jge
mov
popf
jmp
daa
pusha
push
lret
add
xor
fs
fimull
sub
inc
add
sub
xchg
cmp
and
aam
rorb
mov
aad
insl
jle
mov
movsb
pop
sub
or
cld
les
jae
fxch
jp
xor
addb
filds
mov
or
stc
mov
es
gs
ret
or
cwtl
pop
sub
scas
insb
std
or
xor
push
call
jl
and
aam
call
and
xchg
adc
sub
xor
dec
insb
adc
mov
in
jae
sub
sarb
in
cwtl
push
loop
add
xchg
lret
das
or
out
push
fnstcw
and
cmp
in
xchg
dec
push
in
push
mov
dec
mov
and
int3
adc
out
inc
and
push
xchg
call
mov
in
push
mov
jo
mov
stc
sub
test
arpl
add
push
push
jns
lahf
mov
mov
ss
mov
dec
fwait
cld
xchg
in
imul
jp
mov
or
jl
out
ret
jecxz
out
adc
je
dec
nop
add
dec
jl
sbb
mulps
xor
dec
xchg
pop
add
push
add
lods
sbb
push
adc
test
cmc
or
mov
push
sbb
xlat
fcmovne
sub
push
adc
loope
sub
mov
std
add
xor
hlt
imul
shll
scas
imulb
es
mov
cld
push
pop
insl
xlat
push
es
cmp
stos
push
movsl
mov
xchg
push
pop
pop
mov
and
mov
iret
divl
add
inc
or
aam
mov
stos
mov
sub
and
cmp
xchg
or
push
mov
dec
scas
or
cmc
js
jns
mov
ret
leave
outsl
mov
ror
cmpsl
push
test
add
add
push
adc
or
aad
xchg
jge
xchg
inc
dec
ret
out
jae
popa
or
das
cmpsl
in
add
sub
push
mov
cmp
and
data16
into
pop
xchg
push
fbstp
shll
xorl
and
push
xchg
scas
pop
shl
sub
cwtl
adc
call
sar
or
mov
aad
cmpsb
inc
cwtl
sub
push
shr
pop
mov
add
or
xchg
sti
jmp
mov
adc
push
jbe
xor
mov
push
movsb
sbb
test
lret
das
mov
pop
xor
jp
inc
js
cmpsl
test
sub
pop
jmp
cltd
aam
push
loopne
mov
stc
lret
or
jno
iret
sub
mulb
xchg
mov
jle
jb
push
pop
xchg
sbb
out
dec
xchg
adc
pusha
daa
inc
es
outsb
push
dec
cmpsb
adc
in
lods
jns
mov
mov
js
fnstcw
mov
lods
mov
sbb
adc
push
cltd
in
pushf
nop
sub
jp
and
into
xor
ljmp
neg
cld
jne
mov
jb
ja
popa
sub
int3
fisubs
cmp
adc
out
xorb
dec
xor
jae
dec
inc
cmpsl
repnz
pop
sti
add
fistpll
sub
sub
mov
xor
bound
sub
jb
out
dec
pop
outsb
cmp
pop
cmc
push
add
jns
sahf
pusha
jl
outsl
sub
sub
aas
imul
addb
lock
cs
movsb
mov
push
add
mull
loopne
pop
dec
and
stc
int3
inc
sub
cmpsl
rorl
xor
jmp
fs
lds
popf
or
jae
mov
sub
icebp
sub
push
push
pop
cmp
loop
push
fistl
mov
enter
inc
out
scas
jmp
push
inc
mov
int3
pop
in
dec
mov
ja
sarb
ret
sbb
cmp
add
mov
fdivl
pop
jae
out
xchg
xor
fnstenv
cmp
test
xor
loopne
sbb
push
or
mov
dec
inc
pop
inc
mov
lods
and
sub
pop
cmp
ret
arpl
xor
pop
jmp
adc
pop
rcl
call
cmc
lods
mov
mov
fs
test
cmpsb
cmp
test
and
dec
or
fildl
sbb
gs
mov
jecxz
push
xchg
adc
daa
pop
dec
adc
pop
jmp
imul
cmp
pop
adc
jg
enter
sub
mov
fldt
out
hlt
ljmp
insl
std
sub
jmp
insb
imul
aaa
xor
aam
cmc
sti
jl
cld
in
mov
popl
lods
and
ljmp
and
sub
nop
aas
cmp
outsb
mov
xchg
xchg
ljmp
xchg
cmpsb
gs
push
adc
mov
stos
movl
mov
lcall
data16
fmuls
push
push
jns
mov
pop
mov
dec
aad
dec
mov
ja
shlb
mov
dec
repnz
nop
push
dec
loopne
push
pop
jg
push
cmp
vmovd
das
push
fucomp
daa
mov
xchg
pop
negb
adc
jne
jbe
mov
xor
stos
inc
ret
cmp
hlt
push
sbb
mov
daa
jb
sub
out
insl
scas
cmc
lret
imul
sbb
or
notl
gs
pop
repz
scas
pop
adc
xor
aas
cmpsl
out
leave
or
jg
dec
repz
pusha
sbb
loopne
fwait
jns
push
sub
rcrb
decb
aam
lret
mov
sub
fs
repnz
and
xor
dec
jno
dec
push
mov
inc
pop
mul
mov
lods
push
adc
or
imul
mov
jo
lea
jecxz
movsb
sbb
xchg
cld
js
xlat
addl
ret
stos
xor
push
push
clc
push
js
jmp
popf
scas
stos
sbb
or
cmpsb
and
xor
sub
out
inc
sbb
jle
cwtl
xchg
xchg
rorl
sahf
arpl
sub
ficomps
les
push
sti
pop
push
aam
xor
shl
inc
outsl
pop
mov
and
arpl
push
sbb
jnp
fistps
jg
jge
je
inc
push
ret
sahf
add
mov
mov
and
cmp
mov
and
ljmp
iret
xchg
imul
cld
movsb
test
mov
push
inc
pop
jo
faddl
inc
sbb
aaa
mov
pop
xor
lods
cmc
test
dec
mov
les
cltd
mov
push
hlt
sub
mov
lock
stc
pop
mov
or
push
sbbl
cmp
neg
pushf
inc
inc
iret
test
arpl
xchg
mov
mov
mov
mov
stc
stos
cmpl
je
outsl
add
stos
lcall
and
xchg
xchg
scas
adcl
jno
hlt
test
xor
outsl
outsb
add
fcompl
add
sbb
aaa
mov
and
vpunpcklqdq
inc
je
or
inc
popa
aas
xchg
shll
xchg
xchg
movsl
negb
iret
das
mov
dec
sub
clc
cwtl
dec
inc
mov
xchg
imul
cmp
mov
loopne
mov
and
add
inc
dec
movsl
es
inc
push
js
mov
gs
in
xor
popf
add
call
jge
jae
dec
loop
outsl
xor
mov
imul
xchg
dec
inc
and
gs
scas
test
sahf
test
add
inc
dec
ljmp
or
dec
test
clc
mov
add
ds
jmp
roll
mov
mov
stc
ret
jne
inc
mov
jp
lea
push
adc
pop
cmp
cld
and
int
add
push
aas
push
push
sbbb
roll
sarl
adc
dec
pop
mov
mov
xor
pop
add
stc
loopne
pop
mov
hlt
mov
push
xlat
mov
jne
xchg
pop
push
js
stos
pop
es
lahf
arpl
inc
and
popf
mov
es
cmpsl
sbbl
cli
push
test
jmp
idivl
jmp
and
mov
xor
push
lcall
or
pop
inc
push
cmp
out
es
push
push
cmp
and
and
jge
push
pop
ficompl
arpl
leave
mov
fstpt
sbb
adc
popa
insb
inc
jmp
sub
js
shr
cmp
out
xlat
pop
dec
pop
inc
rolb
movsb
dec
ret
jl
pop
mov
popf
aas
inc
cmc
inc
jl
andl
in
aad
decl
adc
cmp
dec
or
js
call
or
mov
mov
movsb
mov
pusha
xor
add
jo
cs
adc
loope
dec
int3
out
out
mov
or
scas
std
push
js
mov
adc
pop
das
mov
adc
les
lcall
lret
in
in
stos
fimull
push
add
out
mov
iret
mov
xor
jmp
push
mov
jbe
test
mov
rcll
mov
out
outsl
popa
push
xchg
pop
cmp
pop
arpl
into
xchg
es
mov
jge
jle
mov
nop
xchg
inc
mov
insl
jno
into
sti
cmpsl
ja
sbb
imul
rol
pop
inc
jo
add
mov
out
adc
inc
lahf
dec
mov
and
mov
addr16
pop
push
or
stc
lret
inc
pop
or
enter
pusha
pusha
aam
pop
test
loop
sbb
je
bound
shrl
and
add
and
xchg
insl
stos
xor
jg
cmp
fildll
xchg
jl
xchg
hlt
jns
xchg
xchg
push
xor
outsb
add
sbb
or
repz
jb
pop
cmp
adc
adc
adc
jg
cmp
out
addr16
pop
inc
stc
mov
mov
add
in
xchg
sbb
mov
dec
test
and
sbb
push
dec
xor
call
jbe
mov
pop
icebp
popl
add
data16
cmp
cmc
rorb
test
dec
pop
xchg
sub
ds
or
add
xchg
out
add
mov
xchg
test
clc
stos
pushf
jp
or
iret
lods
in
scas
aaa
pop
cltd
or
cmp
les
sub
popa
rorl
mov
stos
xor
push
ljmp
pop
adc
fcoms
xchg
xor
ficoms
shll
dec
xlat
dec
dec
xacquire
push
out
fidivs
pop
pop
pop
subb
call
fimuls
lods
ss
push
mov
jmp
imul
icebp
adc
lea
addb
inc
fiaddl
cs
xor
inc
shrb
insl
cld
test
pop
push
pop
push
sub
xlat
ror
xor
test
loopne
add
xlat
lods
aad
jno
xchg
je
jb
and
mov
add
or
idiv
xor
test
xchg
pop
aad
mov
xchg
mov
pop
adc
scas
pushf
pop
ret
xor
std
sub
mov
xlat
pop
psrad
ds
fsubl
pop
and
fs
fst
mov
adc
cmp
ljmp
dec
imul
sub
out
out
lock
rclb
xchg
xchg
add
mov
inc
movnti
push
sub
sub
push
in
popaw
add
inc
mov
mov
dec
enter
je
push
mov
ucomiss
stc
test
adc
je
aaa
loopne
or
pop
lds
sbb
dec
push
rorl
or
adc
lret
mov
push
pop
cmp
adc
mov
adc
or
mov
stos
inc
call
or
jl
fwait
ret
test
inc
addl
cli
fs
enter
fldt
mov
mov
fdivl
cli
and
mov
push
rorb
pusha
lret
shlb
stos
or
sbb
push
std
push
lret
stos
pop
xchg
and
sbb
mov
pop
sbb
push
inc
shrl
outsl
hlt
call
inc
fiaddl
mov
pop
jae
in
in
add
and
pop
inc
mov
or
mov
lds
xchg
add
bnd
cmp
or
and
push
sub
js
dec
dec
push
arpl
xor
jmp
adc
xlat
push
cmp
cs
dec
xchg
push
mov
add
cmp
adc
sti
jle
scas
dec
fisubl
jmp
mov
sbb
addr16
xor
ss
mov
rcrb
test
add
push
sahf
out
rcll
daa
pop
ds
ja
loopne
aaa
pop
jne
jb
pop
imul
mov
sub
out
movsl
cmp
mov
add
out
dec
push
sbb
mov
sarl
sub
add
mov
aam
adc
or
sti
mov
and
not
les
pop
jp
stc
lcall
ss
fsubs
push
das
mov
aaa
push
push
jbe
insb
data16
insb
std
xchg
hlt
adc
fnstenv
adc
fstpt
dec
xchg
int3
xchg
outsl
sub
mov
lret
loope
mov
sbb
pop
pop
xchg
xchg
ss
pop
or
aad
mov
shll
jb
in
and
sarb
iret
loopne
sahf
sub
popa
sar
inc
mov
xchg
popf
pop
loope
clc
adc
or
out
push
dec
stos
popa
bound
mov
loop
out
mov
mov
add
cmp
fidivrs
and
adc
out
xor
bndldx
rclb
decb
jnp
cmp
xchg
xor
pop
push
xchg
sbb
shlb
dec
repnz
push
gs
minps
adc
inc
mov
sub
popa
ret
dec
push
cwtl
ret
rcr
aad
test
cmp
pop
or
push
mov
lcall
aaa
movsl
and
bound
xchg
mov
rol
lahf
cs
int3
or
icebp
mov
mov
sub
es
xchg
sysexit
lods
push
mov
out
mov
test
gs
jecxz
aas
xor
pop
jecxz
mov
dec
dec
jle
xchg
addr16
dec
je
add
mov
inc
pusha
mov
adc
jns
aas
dec
or
jbe
jge
mov
ret
fsts
and
push
loopne
pop
and
iret
iret
pushf
mov
enter
mov
xchg
mov
add
mov
adc
push
sbb
les
xor
pushf
xchg
iret
call
xlat
loop
pop
int
push
rorl
mov
mov
pop
and
xchg
adc
sbb
shrl
add
dec
ficomps
popf
inc
aam
dec
xchg
mov
xor
sbb
fldl
mov
inc
shlb
cmp
jle
push
mov
pop
cmp
mov
sub
jp
cmp
test
xchg
repz
push
xlat
dec
fidivl
push
sub
push
sbb
add
or
std
adc
pusha
inc
gs
out
push
xor
ret
jp
leave
outsb
mov
or
stos
lret
lret
jae
dec
sbb
cmpsl
xor
jl
into
push
push
or
xchg
lea
lahf
arpl
push
data16
shlb
cmp
test
lcall
add
fs
je
sub
sub
mov
pop
push
in
xchg
pop
mov
xchg
fwait
pop
imul
ss
je
push
cmc
sahf
push
sbb
test
adc
cltd
lds
inc
jg
add
outsb
incl
roll
pop
outsb
lea
aam
dec
xchg
loop
je
fistps
jo
imul
cmp
and
sub
arpl
cwtl
sbb
fcmovnb
or
stc
rclb
mov
mov
sbb
loopne
pop
inc
cmp
fcoms
pop
hlt
addb
adcb
mov
xchg
dec
sti
mov
call
addr16
mov
lcall
outsl
xor
jne
jae
fs
mov
xchg
pop
mov
imul
add
inc
lret
sbb
jno
jne
ss
lods
jbe
and
push
mov
mov
mov
add
sbb
es
mov
stos
push
stos
or
arpl
repnz
sbbl
mov
test
pop
mov
push
cli
adc
iret
cmpl
mov
add
push
leave
push
popa
sbb
push
dec
mov
fdivl
popa
pushf
and
pop
xchg
stos
fmul
pop
lds
shlb
or
daa
push
cmp
jbe
mov
repnz
and
imul
sahf
pushf
shlb
cs
lods
cmc
sahf
sub
jp
imul
cmc
jo
fstpl
mov
ds
mov
sarb
add
call
jmp
sti
pop
cltd
out
lahf
scas
mov
sbb
test
mov
fadd
mov
cltd
xchg
inc
sbb
int3
add
sti
imul
mov
mov
scas
inc
imul
pushf
pop
into
je
pop
fxam
mov
dec
inc
cwtl
cmp
xchg
out
mov
adc
mov
ret
pop
add
add
pop
push
out
jno
xor
sub
test
or
std
pop
jge
cmp
jns
int
jmp
xor
adc
js
pop
pop
lods
fidivrs
nop
loopne
mov
mov
sbb
dec
sbbl
repnz
fiaddl
out
jle
push
shll
aam
in
lods
je
rcll
mov
mov
cmp
scas
inc
mov
rol
stos
add
xor
ss
cmpb
pop
pushf
das
cs
popa
jno
push
jb
jmp
mov
inc
push
xchg
and
out
test
loope
or
nop
loope
mov
mov
ficoml
loopne
mov
or
sbb
push
loop
adc
jle
ret
ja
cmp
fcoml
sub
pusha
or
outsb
xchg
lret
cvttps2pi
adc
jl
jne
cli
mov
jg
bound
mov
aaa
and
push
xor
or
jns
mov
cmp
aad
mov
mov
lods
shlb
and
dec
push
das
fnstenv
into
dec
dec
out
inc
push
add
dec
cmp
or
pop
mov
cwtl
mov
and
xchg
in
xchg
cwtl
xlat
jle
decl
and
popa
sub
push
cmp
pop
inc
in
in
int3
inc
xor
inc
add
add
test
rorb
fdivr
xor
pop
je
scas
inc
subb
lcall
push
push
or
dec
inc
add
cld
adc
sub
cwtl
xchg
clc
ds
pop
sub
push
gs
cs
out
faddl
mov
adc
pop
and
jno
push
inc
into
cmpsb
gs
out
sbbb
cmp
jecxz
mov
pop
push
pushw
push
mov
mov
mov
xchg
arpl
repz
stos
test
stos
push
jmp
jp
pop
fwait
ret
push
dec
push
and
xchg
ds
mov
filds
stos
gs
incb
sbb
divb
pop
mov
add
xchg
inc
insb
pop
and
xchg
sbb
jne
push
pusha
jmp
clc
mov
test
int
or
shrl
mov
mov
cmpsb
sub
jge
call
test
cmp
in
in
addr16
dec
inc
shrb
mov
pop
daa
sbb
ds
insb
incl
cmpsl
cmp
es
dec
ret
mov
js
push
mov
stc
xlat
xor
push
pop
lret
dec
fidivl
daa
shlb
jle
or
jbe
push
addr16
and
in
cmp
sahf
xor
jnp
andb
xor
imul
jle
xchg
xor
ret
aam
mov
mov
fadd
jmp
movsb
ss
jecxz
out
add
call
sbb
insb
lret
xchg
lcall
fadd
int
xchg
pop
mull
aad
jbe
xchg
lret
or
sbb
je
sub
and
mov
out
jb
pushf
fwait
adc
pop
ds
xor
imul
adc
arpl
out
mov
cmp
mov
and
xor
push
arpl
jno
aaa
mov
sarb
nop
cmp
jns
aam
adc
dec
sbb
aas
pop
add
cmp
jecxz
fdivl
xlat
mov
aam
fsubs
push
adc
aam
xor
into
ljmp
cmpsl
aam
rcr
jno
sbb
mov
adc
inc
or
adc
jg
sbb
xchg
das
push
out
xor
aad
xchg
fsubrp
jg
js
subl
test
bound
fsubrl
mov
inc
and
push
loope
ret
icebp
lcall
cltd
adc
gs
add
jl
mov
rcll
test
add
sarb
push
sahf
repnz
call
in
std
in
mov
shlb
rorl
jle
ret
xlat
insl
cli
inc
lret
xchg
or
mov
pop
test
dec
push
sbb
sub
nop
shrl
enter
hlt
bound
jno
mov
movsw
pop
sub
dec
fcmovu
outsb
bound
pop
fcmovnbe
mov
fstps
out
and
pop
cmpsl
xchg
test
test
pop
pop
lods
or
in
sahf
repnz
sub
fxch
mov
or
lds
ja
mov
mov
fwait
stos
shl
pop
aad
push
sbb
xchg
pop
jb
fidivrl
xchg
in
jle
pop
or
xchg
fs
cmp
cmpsl
outsl
inc
stos
xor
pop
adc
inc
test
dec
ja
addr16
rep
or
mov
test
cltd
inc
hlt
cli
mov
lods
mov
cmp
bound
mov
pushf
mov
ss
dec
push
in
shlb
cmp
es
push
aas
push
loopne
lcall
mov
clc
jecxz
sbb
shl
xchg
out
cltd
out
cs
sarl
mov
or
test
shl
inc
jmp
inc
cmpsb
lret
sbb
push
pushf
fwait
mov
fcmovb
ss
mov
fcomps
dec
les
mov
pop
iret
mov
pop
add
add
mov
mov
push
sar
outsl
push
lock
add
xchg
insl
mov
shlb
fsubrp
or
jmp
mov
xor
sahf
mov
xor
sub
test
pop
inc
std
jae
push
out
jne
dec
sub
xchg
out
cmc
hlt
mov
addr16
out
mov
gs
rolb
jecxz
pop
rolb
sub
jmp
cmpl
push
pop
test
aaa
and
dec
cmpsl
mov
xlat
lods
xor
mov
inc
mov
insl
out
cmp
cmpsl
lret
xchg
arpl
push
into
push
mov
mov
bts
xchg
add
jns
sbb
cmp
pushf
mov
ret
mov
push
push
cmpsl
and
leave
or
gs
movsb
and
das
push
mull
std
cmc
fdiv
stos
push
lret
mov
pop
fdivs
orl
xor
lcall
pushf
pop
popa
repz
sbb
mov
fistpl
cmp
pushf
add
into
popa
mov
push
iret
cmp
push
cs
lcall
xor
sbb
dec
pop
popf
andl
es
and
mov
aaa
loopne
jle
mov
push
dec
jecxz
mov
adc
leave
mov
mov
cmpsl
imul
decb
push
rcrb
stos
and
cmp
out
mov
sbb
imul
fadds
mov
mov
or
testb
aaa
cmp
or
dec
sbb
enter
int
xchg
push
push
inc
ret
out
sbb
in
jne
dec
orl
not
insb
sub
mov
divb
and
hlt
add
push
ret
push
cmpl
sub
jp
mov
insl
in
cltd
sbb
pop
aam
pop
sub
sahf
pextrw
sbb
arpl
push
adcb
enter
cmp
jge
sbb
sub
out
das
push
nop
sub
and
adc
in
je
or
mov
cs
dec
lea
jge
add
mov
jbe
mov
cli
rclb
sub
xchg
pop
jns
call
test
mov
xchg
pop
push
cmpl
int
popa
hlt
rcrb
pop
repz
inc
push
out
lea
sti
and
push
sub
mov
inc
or
pop
lahf
pop
jl
int3
inc
push
insb
mov
ffreep
push
add
inc
pop
imul
into
loopne
ds
xor
mov
popf
and
sbb
mov
inc
xor
push
jno
icebp
fucomp
pop
mov
push
popa
cmp
adc
xchg
sub
loope
arpl
sahf
daa
push
xlat
loopne
repz
dec
pop
sets
jecxz
pop
outsb
cmpsl
scas
xchg
bound
int
ret
frstpm(287
sbb
icebp
imul
fmul
sahf
lock
or
movsl
aam
jp
add
add
out
mov
leave
pusha
jns
mov
jb
or
daa
xor
wbinvd
data16
mov
jl
mov
inc
sbb
shrl
inc
push
orl
out
xchg
aam
fbld
ret
std
inc
popa
movsb
fdivl
movntq
decl
jp
iret
add
mov
pop
mov
cmp
jno
mov
and
jae
dec
push
xor
and
into
cmp
in
aas
lods
pop
ljmp
xorb
loopne
outsb
ds
inc
xchg
mov
or
leave
mov
sub
push
es
push
xchg
out
incl
rorb
inc
je
jge
mov
repnz
ret
ret
mov
push
popf
dec
icebp
out
sbb
cmc
sbb
je
call
xor
sub
mov
or
pop
cwtl
or
jg
mov
lea
cli
xchg
pushf
sbb
sbb
pop
cltd
mov
dec
mov
test
xchg
add
or
jecxz
int
mov
mov
adc
cmpsb
mov
rcrb
inc
ljmp
shlb
adc
gs
stos
xchg
test
jno
and
sbb
mov
jg
imul
out
test
xor
xor
out
rcl
add
xor
inc
jmp
mov
mov
fwait
rorb
ret
inc
push
sub
push
sarb
out
mov
xchg
icebp
into
neg
fwait
and
int
push
mov
sahf
cmp
xor
and
mov
xchg
lods
xchg
pop
out
popf
jmp
shll
mov
dec
xor
imul
mov
ja
pop
or
cwtl
pop
loopne
xchg
cld
loope
lcall
pop
adc
dec
and
leave
pop
sti
pop
mov
cld
popa
cmp
stos
mov
fists
dec
push
mov
stos
jecxz
pushf
adc
cmp
and
sbb
push
and
pop
mov
pushf
push
ss
rclb
test
inc
rorb
adc
and
enter
and
cmp
pop
push
cmp
sub
xchg
jecxz
repz
cmpb
insb
cld
int
mov
nop
pop
or
cmp
xchg
sbb
lret
push
sbb
jg
push
inc
adc
pop
out
pop
sti
out
and
fwait
mov
sbbl
sbb
jp
addr16
testl
repnz
sbb
mov
popl
gs
sbb
xchg
fimuls
pop
int3
pop
lret
mulb
addr16
xor
mov
cmp
scas
jmp
push
sub
jne
adc
mov
jl
mov
pop
rcrb
push
dec
in
pop
shrl
pop
movsb
mov
or
in
xchg
push
clc
out
inc
testl
push
test
ds
sahf
adc
or
or
xor
sbb
rol
clc
add
repnz
push
xor
jle
adc
cmp
and
iret
xchg
cs
pushf
fcmove
test
pop
xor
pop
fmulp
xchg
bound
jl
push
mov
std
aaa
jg
jno
rol
sbb
xchg
adcl
scas
dec
cmpsb
xchg
call
sahf
dec
js
jle
xor
ss
add
mov
or
sarl
movsb
andb
inc
shll
xor
push
lds
pop
nop
cmp
cmp
daa
sub
call
add
xchg
mov
cltd
mul
push
and
insl
out
mov
pop
dec
add
iret
fsubl
test
stos
mov
mov
xchg
inc
fdivrs
mov
int
adc
add
pop
loop
xor
pop
popf
xchg
int
arpl
mov
add
mull
cmp
imul
addr16
mov
stos
xor
sub
fwait
add
add
sbb
xchg
fimull
cmp
in
add
dec
jecxz
scas
cmc
rcl
and
pop
adc
sub
int
pop
mov
je
test
rorl
sahf
adc
jp
mov
imul
sbb
lcall
stos
xor
xchg
ret
or
clc
es
mov
mov
test
inc
inc
cs
mov
lods
inc
aas
cmp
push
sbb
mov
adc
stos
push
icebp
mov
shrl
pop
add
fbld
lea
lds
adc
pushf
xlat
in
and
xorl
jecxz
ljmpw
and
or
xor
inc
mov
add
cmp
scas
fcomps
mov
xchg
push
ja
repz
in
cmp
xor
into
notl
push
pusha
lret
psllw
cmp
lret
pop
ja
outsb
rclb
jne
imul
test
cld
loopne
push
leave
and
push
leave
out
xor
push
dec
jge
idivl
repnz
stc
push
or
xlat
les
insl
lahf
cmp
push
pusha
cs
or
in
xor
pop
imul
cmp
sub
lahf
je
imul
inc
adc
icebp
stos
inc
pushf
sub
jns
cmp
rclb
add
sarl
imul
arpl
mov
sbb
popfw
push
sub
imul
mov
iret
adc
add
jne
or
mov
sbb
jae
and
mov
cmc
jb
fldl
jp
cmp
test
jb
in
push
loopne
mov
mov
out
push
bound
decl
bnd
pop
jle
mov
imul
xchg
in
sub
lcall
mov
sbb
mov
sar
pop
inc
cmp
leave
rol
mov
test
test
jbe
inc
sub
outsl
push
std
mov
sbb
mov
mov
inc
sub
inc
xchg
inc
xor
or
or
xchg
xchg
pushf
sub
cmp
or
imul
dec
sarl
in
push
movsl
mov
jp
xchg
addr16
repz
aad
inc
fdivrp
adc
cli
loop
ss
mov
clc
xchg
jae
js
mov
mov
mov
push
or
fnstcw
das
cmpb
cwtl
rclb
lock
push
sahf
or
cmp
and
mov
or
fwait
push
mov
mov
scas
fwait
bound
ss
test
test
sub
out
es
inc
xchg
out
xor
subb
nop
scas
leave
ret
jl
mov
mov
xlat
adc
rcr
mov
lahf
sub
scas
popa
sbb
dec
fsubrp
xchg
dec
push
in
dec
clc
dec
in
aas
dec
inc
out
add
sub
pop
cli
xor
divl
xor
mov
stos
pop
test
idiv
or
adc
cwtl
xor
test
push
or
xor
ja
mov
arpl
adc
add
mov
sahf
mov
dec
fsubrl
push
imul
push
mov
data16
in
lret
ret
push
dec
xchg
jg
jcxz
xchg
ret
jno
stc
mov
cmp
icebp
or
shll
lahf
fsts
aaa
adc
add
sub
movsb
mov
fisubrs
add
jne
nop
mov
shll
in
lds
mov
icebp
insl
xor
or
adc
data16
cltd
das
xor
sub
into
fpatan
mov
or
iret
test
and
int3
insb
test
lcall
xchg
or
inc
pop
xlat
roll
jo
out
sbb
cmp
mov
xchg
sub
sbb
xchg
lret
je
jecxz
jae
fwait
test
jecxz
stos
out
lahf
sahf
out
cltd
rcrb
mov
mov
cmovbe
std
mov
xchg
mov
cs
add
mov
fsub
loope
aad
pop
sbb
je
pop
cltd
cmpsb
mov
inc
cld
jbe
xchg
bound
fldenv
sub
sti
insl
movsl
iret
and
sbb
or
flds
xchg
sub
inc
rorl
jnp,pt
test
pop
in
add
pop
pop
mov
push
push
fs
inc
xor
insl
inc
in
dec
das
cmp
lret
std
mov
out
add
inc
es
test
mov
xchg
xacquire
insl
dec
imul
pop
test
iret
daa
jecxz
mov
iret
adc
inc
and
idiv
sub
shrl
and
xor
mov
les
add
mov
mov
cmp
test
testb
sub
or
test
and
dec
in
xchg
cmp
cmc
pop
movsl
lea
push
cmp
mov
lret
jb
or
repz
mov
stos
xchg
push
ficoml
roll
ret
cmc
pop
cmp
std
cmp
push
orb
push
mov
divb
out
jmp
outsl
bnd
rorl
daa
jg
fcoml
xchg
cmp
add
pop
fmul
pop
push
out
jne
std
mov
mov
push
jnp
or
xchg
push
cmp
add
add
push
jne
stc
adc
fldcw
lretw
rcrl
test
mov
fldl
mov
gs
jp
mull
and
inc
out
loope
adc
or
inc
test
add
and
push
pusha
jns
push
sub
mov
gs
sub
inc
stc
inc
ret
or
push
aas
iret
push
je
daa
les
mov
sub
mov
jge
or
push
add
in
sti
mov
cld
bnd
dec
add
mov
loopne
xor
mov
add
mov
mov
push
sub
ss
cmpsl
pop
or
inc
sbb
xchg
xor
cwtl
mov
in
ljmp
jecxz
popa
pop
inc
lods
jbe
out
and
add
je
jno
lcall
pusha
mov
push
sub
insb
movsb
mov
scas
scas
push
cld
lods
sub
pop
fisubrs
sub
mov
jno
gs
bound
ret
sbb
leave
imul
adc
pushf
repnz
and
sbb
inc
xor
jae
je
jg
mov
pop
lcall
push
fsts
mov
mov
test
fmuls
mov
cmp
jcxz
or
in
mov
loop
and
sub
mov
addr16
dec
cld
pushf
adc
loop
call
xor
les
xchg
pop
push
lahf
jg
sbb
clc
test
xchg
in
bound
loop
aaa
mov
ficompl
ss
addr16
popa
jbe
cltd
in
aad
lret
stc
xchg
cmp
push
in
loop
push
ljmp
mov
cmpsl
and
imul
pop
rcrl
inc
adc
xor
jnp
pop
pop
xor
add
lods
pop
push
xlat
ds
inc
das
and
dec
out
iret
sub
aam
gs
push
lods
xorl
mov
pop
jno
jns
mov
sbb
push
shll
mov
sbb
xor
arpl
add
iret
jecxz
jl
push
mov
and
or
rol
mov
sub
popf
push
ljmp
cmpsl
mov
pusha
nop
sub
inc
inc
and
repz
add
and
inc
loop
aad
iret
ret
ss
xor
mov
and
and
in
mov
pusha
testl
sbb
cmpsb
pop
aas
pop
adc
mov
gs
pop
inc
sub
iret
sbbl
dec
jnp
inc
bnd
test
adc
mov
mov
jno
andb
push
popa
mov
jmp
xor
les
inc
loope
jg
test
decb
mov
imul
xor
cmp
xlat
or
xchg
jae
sub
pop
jle
jnp
pop
xor
mov
adc
js
lea
arpl
inc
mov
scas
add
adc
fwait
in
push
pop
xchg
sti
pop
movsl
leave
stos
jb
dec
icebp
repz
outsl
lahf
popa
pushf
in
adc
push
sbb
mov
mul
mov
xlat
adc
xor
scas
imul
push
push
lahf
cmpsl
cli
loope
ficoml
xchg
arpl
inc
mov
rol
adc
sbb
cltd
xchg
icebp
mov
and
mov
jno
test
push
cmp
enter
lods
rcrb
nop
jne
mov
or
mov
mov
pop
aaa
sbb
in
insl
push
mov
sbb
jnp
push
fimull
dec
mov
xor
xorb
sbb
pop
cld
xchg
cli
shl
pusha
icebp
fdivp
add
stc
popa
enter
test
push
fnstenv
nop
aas
insl
jmp
inc
jmp
or
jle
lcall
test
enter
repz
divb
call
in
jne
mov
sahf
or
cltd
jg
stos
lea
fwait
jo
hlt
push
in
dec
lret
gs
push
into
sbb
dec
or
and
mov
sahf
lret
sti
in
dec
loopne
mov
mov
insb
jge
jo
into
and
sbb
push
in
mov
adc
cmp
nop
test
inc
ds
mov
enter
mov
je
cmp
in
push
pop
insl
test
mov
sbb
pushf
into
push
and
cmc
add
dec
fiadds
bound
rclb
push
fsubrl
adc
out
dec
popa
stos
out
movsl
xchg
gs
sbb
mov
and
sub
push
in
xchg
orb
orl
mov
inc
int
mov
pop
aas
mov
adc
repnz
lds
sbb
out
cmp
or
icebp
popf
inc
sub
cltd
mov
out
jg
cmp
loop
push
fildll
or
or
mov
lock
dec
and
stos
lcall
int
push
cmp
mov
es
or
rolb
aam
jg,pt
xchg
inc
lret
mov
out
cmpsb
sub
jne
jno
dec
cmp
cmp
cld
mov
and
or
shrl
mov
bound
sti
lods
push
test
push
xchg
fidivl
repnz
lret
lea
insb
push
push
pop
lea
jb
mov
daa
aam
and
repz
idiv
mov
fidivrs
mov
mov
mov
cmp
scas
out
gs
jne
mov
mov
jne
sub
cmc
push
call
stc
xor
jmp
ret
pop
add
add
mov
dec
push
xchg
das
xchg
out
xor
push
cmpsb
push
es
xor
hlt
add
mov
mov
dec
rcrb
sbb
mov
xchg
loopne
jno
pop
in
cmpsl
pop
lock
pop
xchg
and
outsb
test
jbe
fadd
loope
and
fdivr
lret
or
repnz
or
adc
int
add
sbb
pop
dec
daa
fnstenv
cltd
pop
mov
pop
int3
inc
pop
sahf
pop
xchg
in
adc
loop
jnp
std
outsb
xchg
and
in
add
cmpsb
xchg
add
jmp
cmp
lret
xor
or
iret
inc
dec
and
adc
fdiv
scas
roll
enter
ja
das
mov
filds
outsb
cmp
arpl
mov
adc
and
jns
xchg
cmp
call
add
xorl
in
int3
ret
xchg
inc
inc
push
lock
pusha
gs
loope
mov
nop
int3
fidivs
mov
imul
cwtl
rorl
sbbb
jle
fucom
out
cmpsb
push
insl
cmp
mov
xchg
movsl
xchg
call
sub
mov
pop
or
add
fcom
xchg
lcall
out
add
dec
out
push
sti
nop
jg
xchg
pop
pop
repz
mov
sub
pop
cmp
mov
push
sbb
push
dec
lcall
inc
in
scas
cs
xchg
lret
out
aaa
mov
mov
dec
rcrb
dec
sti
jecxz
xchg
imul
enter
ja
fidivl
dec
sub
xchg
into
scas
pop
mov
pop
fs
pushf
xor
lret
add
lds
add
insl
jbe
mov
jp
jnp
cmpb
dec
ds
pushl
mov
pop
pusha
xor
jg
push
and
and
jmp
push
adc
push
bnd
xchg
cltd
dec
jns
xor
or
jge
repnz
lds
or
inc
or
outsb
cli
in
gs
fiadds
cltd
scas
test
jg
push
cmp
daa
adc
cmc
push
cs
pop
mov
popf
icebp
imul
mov
inc
scas
jns
pop
mov
andb
cmc
cmc
adc
add
in
sbb
jo
push
call
nop
cs
enter
in
xor
adc
out
lds
push
in
mov
repz
jns
inc
mov
outsb
xchg
aas
das
fisubl
add
lods
sbb
cmpsb
mov
pop
inc
mov
mov
inc
jbe
scas
lret
xchg
std
fcomps
fildll
and
aas
pop
xor
test
fnsave
xchg
cld
sub
stos
test
mov
mov
aas
xlat
test
jle
pushf
lds
jo
call
stos
cwtl
jl
fstp
xchg
xor
test
mov
dec
es
sub
mov
hlt
fwait
and
cmp
inc
xchg
jb,pt
negb
push
mov
test
test
lock
js
rcll
cmp
outsb
fwait
pop
push
mov
and
sbb
mov
adc
daa
adc
cwtl
scas
test
cmpsb
xchg
es
pop
iret
cmove
mov
in
popa
or
mov
xlat
addr16
sub
mov
push
enter
add
and
inc
cmp
mov
enter
sub
int3
scas
push
push
aas
sub
int3
scas
lret
sar
les
pushf
adc
movsb
pop
push
inc
scas
adc
mov
dec
ja
call
pop
jae
mov
inc
mov
imul
loope
test
ljmp
or
adc
aam
push
xchg
rcrb
dec
dec
outsl
jmp
mov
and
pop
sbb
fcomps
push
pop
lods
and
lret
cltd
xchg
push
lds
insb
pop
sub
inc
push
cmp
jbe
out
ja
int
aad
dec
pop
bound
mov
pop
adc
jnp
mov
jno
sbb
insb
rcll
push
out
aas
out
mov
aas
dec
dec
push
test
stc
mov
jge
xchg
dec
dec
lea
fistpll
cld
or
or
mov
ja
movsb
or
cmp
push
lock
dec
add
into
fwait
loope
cs
xchg
sbb
not
or
mov
rcll
or
out
mov
mov
jle
pop
sub
in
jl
jmp
pop
out
pop
jo
inc
xchg
jge
lret
in
jno
push
loop
and
xchg
add
dec
and
out
negb
aam
push
scas
mov
shl
clc
mov
xor
shlb
inc
ret
mov
mov
repz
cmp
outsl
jnp
cltd
bound
rolb
jp
daa
aam
enter
xchg
lret
or
inc
movsl
cmp
and
inc
pop
jmp
popf
and
mov
mov
and
inc
pushf
cmp
addb
call
cltd
sbb
notl
int
arpl
push
xor
or
les
mov
and
mov
cld
inc
lret
lds
xchg
popa
sbb
test
mov
sbb
inc
sbb
add
movsl
inc
or
sbb
fimull
clc
or
xor
aas
inc
sub
mov
push
jbe
dec
cltd
mov
call
xor
in
mov
dec
jl,pn
mov
jb
push
pop
bnd
les
cltd
xchg
movsl
es
dec
dec
cmc
pop
clc
loope
add
and
mov
xor
xchg
cmp
xchg
subb
cmpsl
jg
in
jo
xchg
arpl
mov
push
mov
xchg
mov
mov
xchg
rcrb
mov
enter
xchg
lods
mov
xchg
test
push
cltd
test
call
jl
loope
jmp
xchg
jnp
je
jmp
std
push
xor
and
mov
leave
and
mov
pop
fcoms
jne
mov
movsb
es
jae
sub
xchg
push
fwait
andb
leave
xchg
sbb
jge
sbb
jo
loop
dec
jb
sbb
push
ljmp
js
jmp
mov
xchg
dec
inc
xor
jno
inc
data16
add
ss
and
xchg
imul
movsl
cmpl
pop
cwtl
push
inc
dec
movsb
cmp
test
and
pop
and
inc
psrlw
lods
push
mov
lahf
nop
xchg
fabs
cmp
and
out
out
add
lock
rclb
xchg
movsb
or
and
jle
stos
pop
pop
or
les
les
pop
mov
fists
cmpsb
mov
push
aad
xchg
mov
out
dec
pop
lock
or
add
arpl
dec
cmp
out
dec
pop
jo
inc
mov
loope
jnp
pop
add
jl
std
inc
subb
roll
outsb
mov
icebp
nop
mov
push
insl
jge
cmc
out
rcrb
frstor
jbe
pop
out
inc
cli
dec
jno
scas
push
sar
push
fisubrl
je
dec
loope
sbb
cld
sbb
dec
jo
cs
push
mov
xchg
add
add
call
scas
jmp
mov
fsubl
push
andb
sub
cld
dec
add
int3
pop
aas
xor
lahf
js
cwtl
sbb
adc
stos
fstpl
leave
aaa
ds
in
stc
das
pusha
test
cli
mov
sbb
pop
stc
push
pop
das
pop
xor
mov
loope
fs
imul
cwtl
xor
cmp
pushf
adc
fsubrs
jg
lods
outsw
inc
test
ficoml
or
cmpsl
pop
jle
test
sub
jbe
popa
jns
lcall
push
mov
push
push
mov
lods
push
or
adc
mov
xorl
test
jecxz
dec
sti
adc
or
subb
in
in
mov
sbbl
add
jg
cmpsb
imul
xchg
hlt
out
cmc
pop
test
add
lret
in
mov
repz
push
xorb
fs
mov
mov
rclb
cs
mov
pop
int3
xchg
add
pop
fildll
movaps
mov
mov
sub
fwait
inc
xor
push
sub
adc
data16
inc
sub
adc
inc
xchg
jno
jb
push
ja
add
inc
out
loop
mov
xchg
push
cmp
pop
or
xchg
cltd
lods
inc
mov
shlb
bound
dec
out
inc
cmp
xchg
cmp
dec
jmp
mov
adc
mov
aam
loopne
sbb
or
and
pop
inc
sti
repnz
es
cmovge
mov
dec
mov
mov
lret
push
mov
out
sbb
push
sub
aas
into
jl
dec
or
repz
or
mov
cltd
arpl
and
push
jl
lds
int3
pop
push
cmc
inc
pop
outsl
sarb
addr16
cmpsl
jp
scas
adc
sbb
sub
in
and
jnp
das
je
dec
lcall
xchg
mov
rolb
js
ret
mov
shl
dec
ret
inc
push
mov
loope
mov
adc
push
or
jp
imul
push
jo
in
push
pop
ds
pop
fcmovb
iret
pop
inc
aad
and
or
fisubrs
movsl
dec
mov
clc
bound
cmpsb
lcall
adc
popf
rcll
lret
ret
pop
mov
ja
rclb
or
xor
test
push
xchg
and
inc
pop
cltd
and
jg
mov
sarb
sub
int
and
out
inc
loop
mov
fcmovnu
loop
xchg
rcr
mov
mov
xor
addl
jno
mul
lods
xor
cmp
xlat
out
push
xchg
iret
xchg
cld
lds
mov
ljmp
stos
mov
data16
and
insb
inc
fsubrp
out
xor
lods
add
or
stos
in
add
outsl
jne
mov
repnz
push
cwtd
outsb
adc
sbb
fldcw
lcall
int3
sbb
xchg
out
inc
xchg
fucomi
inc
pop
cmpsb
sub
pop
xchg
jp
outsb
adc
aad
ss
imul
in
ja
nop
mov
insb
sub
ret
and
scas
and
ljmp
adc
cs
pusha
rcl
fucompp
ja
jp
xchg
ds
xchg
les
push
inc
cmpsb
lods
cmp
pop
loopne
add
cmpsb
and
repz
ja
pshufw
jne
adc
dec
sarl
mov
mov
add
popf
xchg
adc
lods
sbb
inc
xchg
sti
push
popf
andb
cmp
inc
fsubrs
shrb
xlat
stos
push
or
jle
dec
les
dec
jne
mov
mov
outsb
pop
jnp
xlat
loope
inc
mov
or
sbb
jmp
in
xchg
imul
out
inc
xor
mov
cmc
pop
dec
int
inc
nop
sbb
and
insl
sub
cmp
xor
fstpt
std
ja
ss
push
fildl
cmp
and
scas
shl
fldcw
and
daa
imul
bound
out
mov
mov
ret
inc
lcall
lahf
incl
jge
and
cmp
pop
ret
std
clc
sbb
icebp
xor
push
jge
inc
push
cmpsb
sbb
cmp
push
std
mov
or
inc
sub
lahf
mov
xchg
pop
jl
pop
lret
rcll
sub
fstps
cld
in
scas
sti
and
popa
jge
mov
and
popf
addb
sub
lret
xchg
test
loopne
aas
cld
pop
xchg
iret
cmpsl
inc
js,pn
sbb
movsl
and
jae
pop
sub
int
xchg
pop
jno
leave
cmp
ja
lahf
aam
fs
and
sbb
pop
jnp
or
neg
mov
xchg
mov
in
jge
ret
in
out
clc
push
imul
fisubrs
or
movsb
sub
dec
push
ljmp
out
decb
je
xchg
mov
adc
test
call
test
or
sti
xchg
std
cmp
aam
xlat
xchg
xchg
dec
das
cwtl
pushf
cmp
mov
cmp
push
jecxz
rcll
stc
sub
in
or
and
adc
movsb
clc
leave
pop
paddw
jg
xchg
fdivrs
pop
in
pushl
sbbl
push
shlb
ljmp
pusha
cmpsb
and
add
subb
imul
and
sbb
add
dec
pop
fmull
repnz
xor
pop
fcoml
lret
cmpsb
out
pop
in
js
add
push
dec
xchg
hlt
push
add
xlat
inc
xchg
pop
subl
scas
pop
and
shrb
xor
and
mov
iret
das
pop
add
pop
jl
test
ss
add
or
imul
clc
sahf
in
sbb
bound
icebp
insl
cmp
in
jmp
enter
les
jne
fwait
les
xor
xor
dec
hlt
in
fstpl
fisubl
dec
adc
daa
sbbb
inc
jmp
cwtl
out
or
mov
inc
ja
rorl
bound
mov
repz
jp
cltd
sahf
inc
mov
sbb
lret
addps
fmuls
addl
mov
sbb
jg
xor
dec
xchg
push
sar
mov
dec
fidivrs
xchg
int3
pop
sub
mov
pop
pop
mov
lret
popf
loopne
int3
ret
mov
insl
and
loopne
or
insb
mov
jp
sub
push
sub
push
jp
push
lahf
cltd
sub
icebp
movsb
xchg
cmp
jecxz
inc
mov
loop
pop
jp
cmp
rorb
mov
mov
and
push
cwtl
jecxz
shlb
mov
ret
add
cmp
jnp
rcll
cmp
xchg
repz
adc
test
xor
incl
push
rcr
push
addr16
inc
add
sub
mov
mov
fs
and
orl
jns
jb,pn
mov
and
mov
mov
mulb
mov
fildl
sti
mov
cltd
sub
jp
push
pop
add
scas
test
aam
cmp
in
sbb
fidivrs
ds
lahf
inc
jmp
mov
stos
icebp
xchg
lea
daa
movsl
lcall
inc
daa
lds
push
inc
push
mov
xchg
xchg
test
sub
sti
mov
rorb
cltd
cli
and
jae
xor
cmp
icebp
xor
mov
jns
xchg
jp
imul
or
arpl
mov
out
stos
stos
stc
pop
mov
mov
addr16
inc
das
test
dec
wrmsr
js
xchg
mov
pop
push
lock
sub
and
push
push
lahf
rorb
and
mov
xor
imull
jecxz
or
cmp
outsl
and
orl
cmpsb
out
jne
mov
fs
fimull
roll
pop
and
xchg
out
add
cmp
dec
pop
mov
nop
dec
jg
cmp
mov
sbbl
dec
rolb
das
push
sbb
sbb
outsl
inc
mov
dec
test
mov
pop
fdivl
dec
stos
pop
jnp
xor
dec
inc
sar
lret
jl
scas
nop
outsb
cs
call
out
cltd
mov
push
sbb
xor
jns
test
sub
shll
sti
add
insb
xor
sbb
inc
and
mov
xor
pop
inc
shlb
mul
addr16
ja
repnz
popl
frstor
aaa
lea
and
add
loop
cmp
in
pushf
mov
xchg
movsb
jae
sbb
push
sub
cmc
or
movsb
inc
ds
js
ret
pop
jmp
xor
into
mov
nop
jbe
adc
xor
call
sti
pop
sbb
mov
push
add
xchg
xor
mov
js
mov
loop
xlat
sub
or
sbb
mov
mov
jge
adc
add
and
into
push
push
pop
fildll
aaa
es
jmp
pop
ljmp
out
mov
and
in
dec
out
jo
lock
jg
stos
mov
and
lret
pop
mov
fcoml
addr16
xchg
dec
mov
cmpsl
inc
xchg
fs
push
es
adc
in
mov
nop
sub
xchg
lods
movsb
das
dec
mov
fs
call
pop
pusha
xor
nop
loop
inc
xchg
lds
mov
test
or
cmp
imul
dec
pop
sbb
inc
shlb
jmp
push
push
enter
inc
jae
inc
mov
mov
push
ret
dec
mov
mov
adc
dec
dec
mov
push
jb
cwtl
hlt
adc
xchg
mov
mov
pusha
test
test
arpl
and
xor
mov
lods
rolb
adc
sbb
pop
or
inc
sbb
movsb
mov
roll
outsl
add
mov
loopne
dec
sbb
negb
cmp
push
mov
or
jg
xchg
fiadds
pop
popl
test
test
fidivs
scas
adc
lret
pop
rcrb
cs
out
ror
movsb
pop
xchg
icebp
adc
das
fs
or
repz
pop
cmpsl
add
loop
mov
mov
jl
loopne
sub
pop
or
test
jne,pt
dec
jmp
mov
and
xchg
mov
dec
or
inc
out
int3
mov
into
bound
popa
stos
call
or
cmp
push
xor
push
mov
sub
clc
adc
pop
pop
in
adc
enter
mov
xchg
xchg
push
dec
mov
in
push
mov
sbb
pop
cltd
aad
pop
sti
test
mov
pusha
xchg
mov
aaa
sbb
push
xchg
cmpsl
icebp
insb
inc
inc
and
aad
fildl
enter
rcrb
sub
add
add
mul
sbb
in
in
pop
push
push
cmp
jbe
insb
mov
roll
mov
repnz
push
add
fstpl
xor
adc
movsb
shll
out
ret
test
movsl
addb
xorl
enter
and
ss
jp
out
lock
outsl
std
cmp
jmp
xor
arpl
cs
hlt
xchg
roll
add
or
adc
leave
std
test
jnp
mov
xorl
push
cmpl
je
fmul
test
stos
dec
add
sub
pusha
pop
fdivrp
inc
std
pop
ret
add
pop
sbbl
push
push
iret
mov
xchg
clc
aaa
repz
xor
jno
pop
imul
cs
repnz
sahf
in
ljmp
cmp
insb
in
xor
sbb
nop
push
daa
adc
pop
dec
and
sbb
adc
sbb
popa
rcrb
icebp
xor
cmp
fwait
cmpl
jnp
xchg
test
sahf
in
int3
iret
mov
jge
jne
adc
icebp
out
adc
lcall
mov
into
push
repz
dec
xor
das
jb
adc
or
icebp
std
ja
pusha
inc
lahf
fcmove
scas
xchg
mov
jbe
roll
mov
xchg
pusha
fwait
imul
and
jae
sbb
xor
xchg
fistpll
inc
hlt
mov
sbb
insb
pop
jnp
add
mov
nop
xor
mov
jne
aaa
fldenv
xchg
out
nop
aas
std
leave
fdivrp
sub
inc
dec
scas
insb
inc
ljmp
fisubs
mov
or
xor
test
mov
jne
pop
out
pushf
inc
popa
jmp
push
das
xor
icebp
push
inc
mov
inc
mov
jp
sub
fnstsw
out
pop
lea
std
fs
movsb
cmp
arpl
into
mov
mov
mov
subl
jmp
pop
test
and
daa
dec
mov
mov
rcl
cmp
scas
xorb
push
mov
cmpsb
aas
hlt
imul
je
outsl
xchg
xchg
cs
xor
inc
mov
mov
mov
fisubs
jae
inc
imul
dec
js
lea
xor
outsb
lret
xor
xor
icebp
sbb
pop
jle
xchg
add
movsl
lret
out
and
mov
and
rcr
push
pusha
xor
outsl
push
pusha
and
sbb
iret
sbb
or
mov
addb
mov
xchg
adcb
xchg
sti
sub
jecxz
xor
enter
cli
divb
gs
movsl
call
and
fwait
jl
ds
sbb
clc
filds
push
incb
mov
call
mov
xchg
loope
inc
adc
add
sbb
mov
aad
addr16
mov
sbb
aas
jecxz
into
inc
push
nop
out
cmp
pop
sbb
pop
mov
ja
fistpll
mov
and
gs
stos
push
jo
jp
inc
sub
into
cmpsb
loop
dec
popa
andl
sbb
js
ret
fdivr
jb
insb
enter
sub
cmp
xor
aam
sbb
fidivs
and
push
and
xchg
out
sbbl
xchg
jge
jmp
outsb
fdivl
xchg
ljmp
movsl
arpl
pop
shr
arpl
div
inc
pusha
adc
dec
pop
ss
adc
cmp
ficompl
lret
push
xor
les
sbb
int
pop
xchg
dec
repz
clc
jo
sbbb
adcb
jp
xchg
push
out
push
mov
pop
loop
adc
movsl
or
scas
je
rcl
adc
sbb
int3
fisubl
mov
loopne
dec
outsl
mov
adc
push
and
cld
mov
ret
jno
ret
cwtl
inc
lret
cli
popf
clc
push
pop
add
in
pop
fdivrp
daa
imul
mov
xchg
cmp
push
ja
movsb
mov
cmp
cmp
adc
and
xchg
push
je
lahf
mov
push
xchg
lret
rcll
pop
push
pop
shll
pop
cmp
xlat
repz
inc
or
xchg
gs
push
or
sbb
inc
sbb
sbb
fstps
inc
loopne
mov
cmpsl
pop
das
call
sbb
ljmp
dec
push
mov
sbb
jge
mov
or
out
int
leave
cmc
pop
pop
imul
jne
dec
add
loope
mov
cmpsl
adc
inc
imul
sub
inc
adc
pop
inc
call
inc
test
loope
lret
xchg
mov
xlat
inc
in
loope
add
and
cmp
nop
sbb
mov
xor
inc
gs
sti
sub
xor
inc
iret
in
push
push
or
sub
inc
sbb
sbb
pop
ficoms
sbb
imul
in
sbb
add
jns
in
push
mov
in
pushf
and
jne
and
adc
outsb
mov
add
push
fcmovb
mov
mov
fcomip
addb
cmp
fisubs
fsubrp
aam
sub
sti
pop
insb
sbb
lret
mov
cs
push
imul
es
daa
xorl
adc
sbb
in
mov
lds
push
nop
in
cli
jecxz
sub
pop
pusha
test
pop
sbb
call
insb
add
fcomps
xchg
inc
xor
lods
js
test
or
dec
ret
jl
jp
aas
mov
or
add
out
jg
xchg
cmpsl
mov
lock
scas
pushf
add
dec
mov
cli
push
outsb
xchg
ds
adc
popf
je
pusha
inc
or
jl
xchg
push
mov
leave
std
xlat
inc
decl
mov
je
sub
pop
xchg
adc
sbb
rorl
out
in
jecxz
mov
or
push
hlt
add
inc
daa
fs
xchg
test
xchg
xchg
push
ja
je
js
out
fwait
jae
pop
subl
pop
jo
xchg
mov
jne
inc
popf
jne
adc
fnstsw
mov
xchg
sbb
pop
repnz
jp
out
jbe
stos
ds
adc
lock
test
add
ss
imul
scas
leave
cmc
imul
lds
fldenv
es
mov
in
xchg
xchg
jg
sub
cld
xchg
jge
xchg
daa
popf
sbbb
push
xor
add
out
in
std
cmp
push
jbe
fstl
movsb
adc
dec
leave
mov
test
xchg
fwait
lds
fdivrl
xchg
mov
jp
fucomi
enter
jns
shrl
cmp
adc
lds
xorl
std
pop
out
movsl
xchg
js
and
sub
cmp
sbb
adc
push
out
xor
adc
fldcw
ss
sub
divb
sti
jb
xor
xor
adc
xchg
bound
sub
add
mov
out
mov
bnd
mov
cmp
pop
in
lret
push
pop
cmp
xchg
dec
or
mov
sbb
mov
sub
xchg
dec
test
inc
out
inc
aam
cltd
xor
pop
jb
xchg
fldenv
testl
rorb
sub
je
repnz
add
adc
mulb
inc
lea
dec
daa
inc
push
lods
nop
ss
pop
inc
fstpl
mov
add
fs
lea
ljmp
or
cwtl
xchg
jae
popf
sub
xor
or
ja
push
xor
inc
push
ret
rclb
or
repz
movsb
data16
push
fwait
xor
inc
push
daa
jne
pushf
ljmp
mov
sub
fcoml
test
out
insb
outsb
jbe
and
and
stos
xchg
or
mov
jmp
or
sti
jae
pusha
fs
enter
or
jne
stos
test
ret
cs
les
xchg
xchg
xchg
and
repz
inc
and
xchg
push
fdivs
or
push
or
outsb
add
push
lea
mov
daa
xor
jmp
mov
cltd
popf
lcall
pop
hlt
xchg
push
push
and
repz
scas
sub
xorb
iret
inc
xchg
arpl
add
sti
push
bound
sub
nop
mov
scas
xchg
cmpsl
int
jnp
cltd
in
test
fcmovnb
sbb
and
call
jns
push
sbb
arpl
cli
mov
pop
ret
inc
and
lcall
ljmp
test
es
mov
in
leave
dec
cld
mov
add
add
enter
je
xor
cld
scas
inc
add
fdivr
test
out
mov
fwait
mov
adc
push
ret
jp
push
add
mov
mov
cmovns
fmul
xchg
imull
dec
push
call
lret
inc
pop
mov
cltd
ljmp
cwtl
test
insb
fs
fs
es
inc
pushf
imul
call
cwtl
pop
sahf
int
in
and
decl
idivl
xchg
and
and
jg
adc
sub
aam
ret
jp
arpl
std
loopne
pop
call
test
or
ja
je
mov
ret
mov
push
cli
and
rcrl
adc
lret
hlt
pop
add
fmulp
jge
mov
add
push
mov
in
jp
pop
inc
repnz
adc
scas
inc
lea
call
xchg
push
pushf
or
andl
ja
bound
int
pop
cld
or
ljmp
out
je
in
jae
mov
mov
xchg
insl
bound
nop
frstor
add
lods
in
stc
add
cmp
mov
sub
mov
mov
sarl
mov
adc
mov
mov
sub
push
mov
xor
jmp
add
add
and
dec
pop
call
mov
push
pushl
dec
int
xlat
add
repnz
pusha
in
js
push
jne
mov
insb
jp
arpl
xchg
cld
xor
add
mov
stc
lahf
jp
notb
push
and
dec
sub
into
pop
adc
idivb
jae
xchg
cltd
xlat
or
lret
xchg
and
sbb
stos
add
xchg
dec
lods
iret
push
rclb
push
sub
and
stos
or
xchg
push
cmpb
sbb
in
mov
in
into
cmp
or
data16
push
clc
fld
mov
jbe
mov
ljmp
adc
repz
mov
mov
out
gs
pop
cwtl
sahf
rorb
mov
dec
mov
inc
scas
mov
call
jl
dec
movl
mov
cmp
pusha
sub
movsl
dec
mov
adc
in
add
rcrl
sub
jns
insl
js
stos
sub
sub
popl
jnp
leave
gs
mov
or
push
cmp
lock
sub
in
pop
iret
pop
fs
jge
hlt
in
sub
sbb
rcr
push
and
adc
cmp
cmp
push
sub
ret
inc
loope
cld
and
les
dec
dec
or
loop
sbb
mov
add
push
fadds
jno
nop
aas
hlt
inc
lock
xor
xor
sbb
mov
and
or
dec
mov
int3
jmp
ficomps
jae
jno
xor
roll
mov
cmovs
pop
mov
xor
popf
into
les
je
mov
inc
cmp
inc
and
mov
adc
add
or
test
fs
xor
cli
cmp
lcall
xlat
rorl
jb
xchg
sahf
sbb
jmp
dec
add
mov
imul
and
inc
mov
in
dec
mov
les
stos
in
xor
movsb
sbb
test
inc
push
cli
repnz
repnz
movsb
mov
xor
jecxz
lea
mov
jl
xchg
mov
test
outsb
dec
inc
xchg
cld
dec
or
or
enter
inc
les
popf
and
mov
popa
sub
mov
jmp
dec
ljmp
mov
loopne
cmc
pop
inc
popa
fwait
push
xlat
cli
aam
sub
add
cmp
out
fwait
clc
push
xor
mov
pop
loopne
repnz
push
mov
stos
movsb
sbb
sub
mov
aam
adc
out
push
test
loope
das
pop
push
pop
xchg
pop
push
sarl
std
ret
cmc
dec
and
inc
jp
cld
cwtl
out
scas
mov
jns
pop
rcl
cmpsl
inc
push
nop
xchg
aam
dec
xchg
mov
push
test
pop
and
mov
push
or
mov
cmp
or
pushf
cmp
add
cmp
and
mov
jnp
faddl
mov
icebp
mov
mov
xchg
test
popf
jbe
das
cmp
enter
shr
xchg
imull
or
mov
or
aas
lea
fcmovb
mov
sbb
addb
add
lods
sub
add
jno
repz
jge
mov
dec
jmp
lds
mov
push
and
pop
fwait
mov
dec
lds
pusha
mov
jo
sahf
mov
push
shrb
mov
jp
push
nop
pop
xchg
sbb
jns
jle
pop
insl
clc
mov
mov
or
stc
jnp
push
stc
xchg
bndstx
lea
es
sbb
mov
pop
rolb
add
cmp
sbb
mov
loope
sbb
std
outsb
addps
in
sub
xchg
and
pop
jl
xchg
repnz
int3
dec
scas
fs
xchg
loope
jmp
punpckldq
fbstp
rcrl
adc
jb
lcall
imul
pop
dec
cmp
xlat
aam
push
sub
leave
push
push
daa
dec
pop
in
repz
mov
or
inc
dec
cltd
xor
jae
xlat
xor
pusha
jbe
inc
loop
xchg
fs
fildll
pop
push
dec
ret
cmp
repz
xlat
mov
inc
cmp
sub
repz
pop
pop
je
mov
cmpsl
aam
and
scas
movl
lcall
js
add
and
lds
xor
pop
and
cmp
mov
inc
mov
mov
pop
xor
pop
testb
cld
or
inc
test
insl
mov
mov
push
rcr
scas
loope
test
inc
push
in
push
clc
xor
push
mov
repz
lret
mov
daa
xchg
subb
cwtl
mov
and
cmp
or
and
add
push
aaa
and
push
mov
jae
pop
std
cmc
add
testb
xor
pop
mov
add
push
dec
cmp
jmp
push
mov
int
in
sub
push
sbb
lds
mov
pop
push
aam
popf
pop
mov
and
insl
jo
xchg
sbb
pop
mov
jle
jne
pop
das
imul
mov
xchg
stos
push
sbb
repnz
daa
push
test
jl
inc
mov
leave
test
xchg
jnp
and
adc
sub
nop
scas
mov
mov
icebp
aam
rcll
xchg
inc
je
adc
mov
mov
sub
daa
dec
imul
lahf
push
inc
mov
pop
fwait
inc
dec
mov
daa
jbe
aad
adc
adc
sub
adc
xor
lret
fdivrp
xchg
scas
fdivrp
shrb
fs
addb
jbe
or
push
pop
bt
popf
fbld
sub
add
pop
into
pusha
out
sub
cld
call
inc
out
pop
test
or
xchg
adc
enter
inc
jmp
mov
add
jae
rorb
adc
mov
push
mov
in
rcrl
sar
xchg
xchg
add
scas
push
mov
lret
xchg
sub
jp
orl
nop
aaa
shl
pop
mov
mov
jp
and
pop
call
addl
pop
sarb
iret
outsb
cmp
pushf
jbe
mov
pop
ret
jne
jmp
xor
xchg
mov
lds
cmp
and
push
push
sbb
icebp
or
aad
out
dec
adc
adc
inc
enter
stc
test
jno
cmp
pop
sub
int3
inc
push
sub
sub
push
ret
fistpll
sahf
in
ret
lahf
ss
inc
daa
iret
push
xorb
ss
mov
cmc
xor
push
jecxz
mov
adc
push
icebp
and
cmc
xchg
or
gs
inc
aaa
fadds
pop
sbb
inc
aam
push
sub
mov
addr16
orl
xor
adc
or
leave
adc
add
ret
test
dec
int
pop
ljmp
xor
xchg
outsl
cwtl
cmp
enter
outsb
jl
cmc
xor
mov
sub
outsl
and
pop
andb
pop
and
iret
fwait
lahf
push
xchg
popa
lea
cwtl
dec
xor
ffree
add
add
add
pusha
xchg
rcll
dec
pushf
mov
adc
jmp
mov
pop
mov
imul
inc
mov
dec
mov
sti
push
xlat
addr16
adc
test
mov
or
mov
lock
jae
inc
adc
dec
rorb
push
into
dec
mov
sub
out
data16
rcrl
cmpsb
jno
pop
movsl
cld
dec
leave
ja
mov
mov
lock
out
mov
enter
dec
add
push
in
fnstcw
mov
lret
mov
clc
and
in
imul
nop
or
mov
or
jbe
pop
out
xchg
cs
inc
aaa
loopne
andl
lock
cmp
push
xchg
shlb
mov
mov
jns
mov
cmp
mov
addr16
and
ds
inc
jl
popf
out
aam
inc
addr16
jbe
aad
ja
cmp
push
jmp
dec
fnsave
cmp
fsubrl
insb
mov
inc
cli
cmp
rcl
into
sub
inc
push
out
or
xchg
mov
mov
xchg
arpl
cli
sub
mov
stc
adc
ljmp
jl
xchg
cwtl
xor
in
pop
les
add
iret
add
mov
iret
xor
iret
ret
js
sub
push
mov
mov
insb
fldenv
jmp
xor
cmp
xchg
fisubrs
shrb
mov
scas
sti
in
mov
es
jbe
adc
xchg
dec
push
lahf
in
fmuls
ja
addl
daa
lcall
je
inc
mov
imul
jb
fmul
cmp
test
cld
jae
decl
jno
push
fisubrs
fisubl
stc
inc
jnp
sbb
sbbb
mov
push
movl
pop
cwtl
je
mov
loop
loopne
jge
jle
das
sub
mov
or
jae
mov
inc
je
cwtl
inc
mov
int3
cmp
data16
mov
mov
cltd
pop
mov
mov
xor
in
inc
jmp
out
in
xchg
push
imul
ja
push
leave
or
jmp
add
filds
lcall
sub
xchg
lock
mov
and
fs
ja
in
mov
push
inc
inc
push
fisubrl
leave
jg
movsb
fcomps
xor
test
adc
rcrb
dec
or
lahf
or
pop
cld
dec
das
jmp
xor
leave
push
outsl
mov
icebp
loopne
lds
cltd
iret
cmp
subb
adc
pop
inc
pop
sub
add
das
mov
rcrl
cmp
mov
movsl
ss
mov
shll
jno
mov
aas
loop
rorl
int
stc
mov
xchg
insb
inc
les
mov
push
mov
aad
jmp
fidivs
xchg
sbb
push
jmp
mov
cmpl
push
adc
loope
push
xchg
fsubp
pop
add
mov
ret
cmp
je
std
daa
sub
rcrl
mov
cmp
adc
mov
push
mov
cmpsl
in
imul
push
ret
mov
cmpsb
rol
inc
dec
cmp
test
mov
fsubl
lods
fstpt
outsb
cmp
and
mov
leave
and
in
sbb
xor
aas
sub
fdivrl
arpl
test
leave
inc
inc
dec
add
pop
popf
repz
sti
jle
adc
stos
shrb
cmpsl
movsb
and
imull
sbb
inc
pop
mov
ret
in
sub
mov
mov
push
mov
clc
dec
inc
sbb
repnz
jl
cli
xchg
mov
or
push
sahf
inc
mov
cmpl
mov
mov
pop
enter
cld
hlt
inc
pusha
or
jg
lds
rcll
dec
push
sbb
mov
cmp
pushf
push
jno
sbb
sub
or
loop
xor
sti
lods
test
lock
push
xchg
out
lahf
xor
ja
push
insb
xor
icebp
sar
mov
lods
add
into
in
aas
push
cmc
inc
pop
out
ss
and
cwtl
add
xchg
push
and
sub
mov
sbb
cs
out
add
push
dec
aaa
xor
in
mov
fwait
jge
insl
imul
xchg
hlt
outsl
pop
or
cli
pop
clc
icebp
sbb
imul
push
push
cmp
mov
call
leave
shlb
inc
fcomps
inc
adc
repnz
sar
sub
cld
mov
add
cmp
int3
push
test
sarl
or
or
jbe
jnp
adc
and
inc
xor
aaa
mov
jecxz
ds
add
out
or
inc
orl
loope
imul
cmpsb
sub
les
pop
xchg
jb
shll
loope
aaa
adc
xchg
mov
push
std
sahf
lods
sub
outsb
dec
aad
mov
out
jmp
jno
je
in
jp
xor
enter
jae
inc
and
pop
subb
sub
cmp
ja
repz
push
fistl
xorl
es
add
adc
add
inc
and
and
gs
popf
aam
arpl
scas
push
lods
std
jns
mov
lods
cld
mov
daa
cmc
sbbb
jns
xor
sub
pop
std
pop
scas
pop
pop
xchg
push
sbb
xlat
in
fdivl
insl
pop
cwtl
add
cmpl
aad
stc
or
fnstenv
mov
out
cmp
test
adc
jne
insb
jmp
and
gs
jne
loope
push
sub
addb
outsl
loope
adc
pop
movsb
movsl
sub
add
dec
adc
fisubrl
lahf
or
or
inc
loope
aaa
mov
jnp
xchg
sbb
and
push
sbb
rcl
mov
std
push
adc
sbb
fnsave
in
shlb
sub
jmp
fidivrl
loope
xchg
mov
ror
dec
lret
stos
sbb
mov
sbb
stos
and
stos
ja
inc
push
xchg
inc
inc
mov
push
js
mov
xor
fiadds
shl
or
loop
fsubp
xor
andb
xor
and
or
sub
into
jns
dec
sbb
or
loope
mov
push
cld
ljmp
add
jo
loopne
cli
insl
dec
ffreep
cmp
sti
lds
mov
test
xor
or
pop
cli
jmp
jns
dec
int3
mov
repnz
fwait
jecxz
mov
xor
ja
call
sbbb
std
mov
nop
or
test
arpl
jae
jns
stc
fdivl
pop
or
lods
iret
int3
sbb
popw
mov
iret
xchg
mov
jo
cmp
les
sbb
outsb
stos
mov
adcb
pop
iret
leave
or
xchg
pusha
loope
hlt
xor
jbe
mov
std
pop
jbe
call
or
add
xor
cmp
adc
inc
pop
or
mov
dec
cwtl
push
mov
jmp
mov
jp
lret
je
jno
jns
dec
or
or
in
xlat
push
pushf
fbstp
mov
xchg
mov
jne
rcll
insb
cli
sub
andb
mov
pop
ficoms
and
xor
xor
leave
xchg
hlt
adcl
sub
mov
xchg
cmc
and
loop
dec
jp
ss
fidivs
pushf
xchg
push
or
rcll
orb
je
js
nop
les
mov
shl
mov
inc
aas
mov
xor
jbe
mov
sar
or
add
int
cld
sti
mov
test
dec
jo
dec
les
lret
mov
divl
add
dec
xchg
jmp
mov
dec
pop
ljmp
push
xor
sbb
push
outsl
adc
mov
jb
and
or
or
jns
xor
inc
push
add
fwait
mov
sub
pushf
repnz
roll
and
out
jmp
mov
mov
je
push
jecxz
cmp
jl
sub
loop
test
lcall
cld
shrl
cli
dec
xchg
lahf
push
jmp
inc
adc
jmp
adc
mov
aaa
mov
test
push
or
xor
xor
mov
jo
mov
pop
in
push
add
mov
nop
xchg
imul
icebp
stos
and
push
inc
push
sub
mov
outsb
scas
stos
pusha
ret
in
and
jnp
mov
jbe,pt
add
scas
cmc
pop
push
mov
cmpsb
push
cmp
orl
rclb
es
ret
xchg
inc
js
jle
pop
or
push
xor
out
jae
pop
nop
shrb
aas
add
sbbl
sbb
cmpsb
movsb
mov
cmpsl
outsl
mov
movsb
mov
jns
jbe
pop
je
aaa
outsb
lcall
push
cmpsb
dec
xor
outsl
out
xchg
pop
loope
lret
push
arpl
negb
subb
push
sub
sbb
out
push
loope
fsubs
and
fs
pop
je
jmp
pop
add
sarb
lods
jno
sbb
inc
lcall
faddl
loope
mov
das
popa
cmp
in
push
push
mov
jb
sbb
cmpl
add
iret
mov
fsubrs
stc
or
leave
push
adc
sub
fildl
and
negb
xchg
cmpb
aas
pushf
mov
jp
fiaddl
scas
out
push
imul
adc
mov
push
or
repz
je
mov
daa
scas
mov
lahf
scas
icebp
cs
xchg
sahf
pop
imulb
out
int
pushf
sub
jno
lds
sub
loope
fucom
subb
lret
fisubrl
push
pop
adc
mov
add
stos
push
mov
ret
jl
out
lret
and
xor
cmp
lcall
sbb
inc
lahf
das
rcrl
scas
push
test
test
mov
hlt
leave
mov
jg
xchg
dec
jp
inc
and
xchg
jg
add
or
hlt
mov
pop
lods
sub
testb
mov
adc
mov
movups
xchg
or
mov
cmpsl
cwtl
ret
pop
pop
outsl
inc
pop
mov
lods
xchg
stc
push
push
test
xlat
pop
inc
pop
dec
mov
addr16
loope
popf
mov
fcompl
xor
xchg
adc
adc
dec
push
stos
in
jp
outsl
xlat
je
push
fidivl
mov
push
ret
mov
push
insl
dec
xchg
cs
cli
push
mov
notb
sub
mov
enter
ss
jbe
stos
and
stc
sub
sub
and
pop
lods
int3
addr16
lods
lods
mov
popa
xchg
addb
mov
loopne
mov
adc
xchg
cwtl
mov
in
push
jmp
shll
pushf
xchg
adc
push
ret
test
aam
fs
and
test
push
cli
mov
repnz
jmp
out
outsl
popf
rcrl
popa
pop
cmp
xor
cmp
repnz
popf
xorb
aaa
cmpb
dec
jns
xchg
imul
idivb
mov
sub
pop
add
aaa
mov
mov
fsubp
lds
jmp
cmp
sub
repz
movsb
mov
fiaddl
xor
mov
mov
test
stos
iret
xchg
push
push
mov
inc
in
mov
fcmovne
aad
push
aad
pop
cmp
mov
sub
test
fistps
xor
pop
cmp
subb
sub
xor
add
pop
pop
xlat
and
push
xchg
push
out
add
and
mov
mov
ficompl
loopne
aas
pusha
jo
int3
add
push
adc
sub
outsl
inc
arpl
mov
sbb
or
pop
adcb
mov
clc
add
pop
pop
mov
pusha
lods
sub
fs
adc
add
push
cmc
add
mov
cmc
add
cmpsl
adc
mov
aad
adc
mov
jae
sub
xchg
loopne
jmp
icebp
std
int3
lock
push
pop
add
ljmp
add
pop
into
movsl
mov
gs
sub
fistl
jle
out
pop
push
lods
out
bound
mov
hlt
mov
xor
and
jnp
mov
movsb
test
mov
ljmp
daa
and
loopne
xchg
test
fwait
mov
pop
inc
jbe
gs
movsl
sahf
mov
icebp
pop
sbb
mov
add
inc
and
in
scas
fnstcw
push
addr16
jb
jo
aaa
mov
clc
rep
cld
cmp
int
pop
mov
rcrl
cmpsb
mov
mov
and
pop
sbb
nop
outsb
fisttpll
cld
push
xchg
js
add
into
and
mov
mov
subb
outsl
lods
icebp
in
out
sub
mov
adc
mov
mov
lahf
test
mov
adc
adc
mov
or
xchg
add
js
stos
jge
jle
sub
cmpsb
jae
sbb
out
aam
out
push
pop
sahf
push
dec
je
lods
fisubs
hlt
shrb
adc
adc
lds
cltd
mov
mov
sub
sub
in
hlt
or
add
shrl
mov
nop
fdivrp
pop
push
push
add
xorl
xlat
mov
scas
jnp
out
daa
cmp
xor
scas
sar
mov
arpl
fimull
xor
dec
fidivl
pushf
sbb
bound
jnp
inc
data16
loope
insb
jno
and
xchg
jl
in
call
je
pop
jae
sahf
popa
cmp
pusha
arpl
pop
movsb
mov
fdivrp
push
cmp
sub
stos
jmp
hlt
push
adc
movb
cmc
fwait
in
stc
push
test
mov
add
push
inc
xchg
sahf
adc
es
arpl
imul
movsl
sub
push
sbb
rcl
fadds
mov
or
cmp
jb
push
ret
dec
inc
ret
jnp
imul
add
pop
pop
outsb
jp
xor
inc
pop
fists
lods
cltd
mov
mov
sub
in
xchg
fldl2e
shll
sbb
mov
icebp
ret
pop
mov
push
and
pushf
nop
out
add
cltd
aaa
cli
popf
mov
loope
pop
sbb
sbb
mov
sbb
cmpsl
lret
stos
pop
xlat
test
lret
xchg
jb
mov
cli
out
xchg
testl
inc
push
lods
inc
fists
sbb
mov
psubb
pop
xchg
xlat
pop
popf
mov
int3
test
out
sahf
fdivs
cmp
and
arpl
mov
xchg
sbb
mov
call
aam
adc
pop
add
add
int
rcrl
mov
push
push
outsl
xchg
adc
mov
hlt
shrl
or
sbb
mov
pop
xchg
aad
cmp
add
ss
push
es
jnp
or
adc
xlat
add
push
fimull
push
ret
repnz
rol
xor
inc
ja
jne
jecxz
mov
dec
dec
sub
scas
testb
imul
push
mov
stc
bound
sbbl
mov
pusha
xchg
shll
mov
mov
shlb
cmp
in
dec
mov
push
push
push
mov
es
jne
dec
mov
rcll
add
movsl
pushl
mov
movsb
imul
jge
into
inc
mov
repz
dec
sbb
push
mov
call
rcl
sarb
mov
scas
jle
adc
mov
add
scas
data16
jle
jae
push
test
mov
inc
jae
xchg
mov
sbb
cli
enter
jbe
sub
inc
jo
mov
dec
add
jnp
ret
xlat
mov
cmp
xlat
dec
movsb
arpl
cmp
fs
mov
cmp
xor
les
mov
ret
or
in
sub
ss
cmp
imul
jmp
cmp
push
push
and
test
xchg
mov
loopne
or
push
push
inc
xchg
xor
push
mov
mov
push
aas
std
roll
sbb
mov
imul
int
lea
add
pushf
insb
push
cmp
aad
dec
dec
push
jbe
xchg
stos
mov
gs
or
fildl
jo
mov
xor
popf
adc
mov
ss
or
jne
sbb
sbb
adc
mov
out
dec
dec
xor
cmp
jne
xchg
push
push
or
fwait
xchg
push
adc
add
rolb
jmp
ljmp
fs
icebp
dec
mov
mov
sbb
out
ja
rorl
inc
mov
stos
imul
add
cmp
movsb
repnz
in
mov
xchg
mov
out
add
mov
xor
push
xor
push
ss
enter
or
dec
lods
ja
leave
mov
xor
dec
push
or
jge
adc
cmc
push
or
cmp
mov
jbe
daa
lea
test
ret
aam
add
rcrb
jp
mov
xor
pop
xchg
rclb
stc
lds
push
xor
push
popa
dec
fidivl
stos
mov
es
push
mov
out
xchg
jge
pop
xlat
in
jo
lret
and
mov
xor
shl
push
mov
out
lea
mov
nop
dec
xor
jmp
lea
stos
cmc
xchg
roll
subb
jbe
in
pop
xchg
inc
cld
mov
or
mov
or
test
ret
movb
jge
xor
leave
ljmp
xchg
ficoml
mov
sti
cmp
dec
out
inc
out
inc
and
lea
jae
or
xor
out
lea
xchg
rolb
add
shll
jbe,pt
dec
add
add
push
xor
fs
cs
stc
push
rcrb
in
jle
adc
lock
lcall
xchg
sbbl
repz
or
jae
add
subl
inc
or
lods
fs
lret
mov
lods
pop
enter
inc
push
sub
out
in
in
rcrb
icebp
inc
rcl
mov
xor
push
push
ret
bound
push
es
jp
add
jge
out
ret
sub
sbb
lahf
inc
ds
mov
in
xor
pusha
inc
xor
in
mov
cmp
ljmp
je
test
sahf
in
in
jecxz
jp
dec
adc
sahf
andl
jae
mov
sar
shl
add
sub
out
adcl
imul
test
adc
push
cmp
test
lds
rolb
ret
fstpl
xchg
rolb
js
ffree
push
ss
push
xor
xchg
lahf
sti
les
popa
rsm
loop
ss
jmp
ljmp
cmp
xor
or
jb
test
les
arpl
imul
cld
and
test
xchg
mov
ja
push
cs
jae
add
add
popa
insl
popa
imul
jne
data16
outsb
outsb
push
add
add
outsb
je
jo
jo
add
jno
jo
imul
add
jbe
arpl
add
add
push
jne
add
push
jne
fs
add
add
bound
add
bound
jb
js
js,pn
push
imul
add
add
gs
insb
imul
gs
jbe
push
imul
add
outsl
jno
add
popa
je
add
add
outsl
arpl
jns
outsl
add
add
jo
add
add
jne
jns
data16
bound
add
jp
fs
add
jno
cs
add
outsb
jne
jo,pn
bound
outsb
jne
bound
add
push
jae
jae
add
popa
jno
insl
imul
jo
jbe
add
add
imul
push
jno
je
je,pn
ja
add
data16
js
jno
add
add
jns
outsl
je
jo
arpl
add
add
bound
jp,pn
data16
add
jbe
data16
outsb
bound
add
outsb
insb
jp
jns
add
insb
fs
jae
jbe
add
add
gs
add
imul
jb
fs
add
add
outsb
push
add
add
insl
arpl
outsb
imul
imul
push
add
add
push
js
push
addr16
imul
add
insl
push
js
data16
jp
outsl
add
add
jbe
jo
je
insb
insl
arpl
add
add
insl
jbe
fs
ja
bound
insl
jae
add
add
jns
jo
jns
imul
jns
jbe
jne
popa
add
insl
jno
add
add
push
add
jno
jae
insb
add
gs
imul
add
add
jb
push
jbe
data16
add
jno
insw
jo
je,pn
jb
add
js
push
add
jns
jns
imul
jp
insl
popa
arpl
jp
jp
add
gs
fs
fs
add
jbe
jns
bound
add
add
push
add
popa
push
add
add
jo
gs
jns
push
add
jb
add
add
imul
insb
insb
insb
add
add
arpl
bound
jne
outsb
jno
add
add
outsl
jb
push
outsl
outsl
push
add
add
insl
add
data16
jno
push
jno
add
add
jns
fs
addr16
add
insl
add
insb
jns
ja
bound
add
push
jb
add
add
je
jb
arpl
fs
jae
add
outsl
popa
outsl
insl
push
jp
jns
arpl
jbe
insl
add
je
jbe,pn
add
add
gs
jno
jno
outsl
jne
jb
js
add
addr16
push
add
add
outsb
data16
add
imul
arpl
add
insl
cs
add
insb
bound
gs
add
imul
jp
bound
add
jne
add
add
imul
push
jo
outsb
je
add
outsw
ja
jo
outsl
add
add
push
insb
add
add
jo
add
add
outsl
gs
bound
add
bound
add
add
jb
gs
xor
cs
insb
add
add
jbe
jp
js
add
popa
jbe
popa
jb
jbe
arpl
add
js
add
add
outsb
jno
outsl
popa
jns
outsl
arpl
insb
addr16
add
jo
push
jne
add
add
bound
imul
push
imul
add
outsb
push
jb
add
ja
jno
data16
add
outsl
popa
cs
outsb
outsb
add
add
bound
jae
jo
push
add
imul
jne
add
add
insl
jo
ja
popa
jno,pn
jns
add
outsb
outsl
arpl
add
add
jns
jb
jo
bound
pushw
add
add
arpl
insb
jo
add
add
js
addr16
js
add
jo
add
add
je
bound
push
imul
fs
fs
add
outsw
jb
add
outsb
add
jbe
jbe
data16
add
add
je
imul
add
add
insb
bound
imul
add
outsb
jo,pn
add
ja
data16
jbe,pn
js
data16
add
add
popa
arpl
jb
add
add
insl
imul
popa
arpl
add
fs
outsl
imul
imul
outsb
jae
imul
imul
add
add
jb
jno
arpl
outsb
jno
add
add
outsl
gs
imul
fs
add
add
ja
popa
jb
add
imul
add
push
outsl
outsl
add
add
popa
jne
push
imul
insb
jo
insb
jns
add
imul
gs
add
jns
push
add
add
addr16
jb
add
add
arpl
add
bound
imul
add
jne
jne
push
add
add
insl
addr16
outsb
add
add
jae
insl
imul
add
imul
data16
outsl
data16
addr16
data16
add
imul
jae
imul
add
jp
addr16
js
add
add
jae
jne
insb
jne
add
add
addr16
js
add
add
outsl
insb
fs
jp
add
add
gs
imul
data16
add
jp
imul
fs
push
add
add
jne
jb
jo
imul
add
gs
outsl
push
add
add
jne
jae
imul
popa
outsl
push
jno
jne
ja
jp
jns
imul
outsl
arpl
jb
add
outsb
je
gs
gs
add
bound
imul
add
add
imul
jbe
add
add
imul
jbe,pn
js
jo
jb
jne,pn
je
add
add
imul
insb
add
outsb
insl
fs
outsb
cs
popa
outsb
add
add
data16
jp
jae
arpl
add
push
imul
je
add
add
jo
outsl
add
arpl
add
add
jne
jae
add
insb
imul
outsb
insl
jp
add
addr16
jae
popa
add
outsb
arpl
jno
jp
add
add
jo
arpl
add
arpl
jp
outsb
add
add
jne
arpl
jbe
jb
outsb
add
jp
imul
arpl
ja,pn
jne
add
add
imul
outsb
jno
jae
add
bound
jae
add
insl
bound
popa
outsl
jb
add
jns
push
outsl
popa
js
outsl
popa
push
add
add
insl
addr16
outsl
add
jp
imul
add
jne
ja
insl
imul
jne
ja
imul
imul
popa
add
popa
je
imul
insl
imul
pushw
popa
addr16
add
ja
js
add
add
insb
outsl
insl
add
add
jns
imul
add
data16
insb
bound
add
add
ja
fs
gs
jo
add
add
insl
bound
add
outsl
bound
imul
data16
add
arpl
insl
add
outsl
jo
jno,pn
jb
jbe
outsl
imul
ja
arpl
outsl
add
add
push
jae
bound
bound
add
jae
data16
add
imul
jp
je
addr16
add
add
insb
jns
jp
arpl
add
add
jne
jb
insl
arpl
add
add
jp
jne
insl
imul
imul
outsl
insb
jbe
data16
jns
jo
jp
outsb
popa
insl
popa
ja
insb
jne
add
imul
imul
add
add
