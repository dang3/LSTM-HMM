mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
or
push
je
sub
in
push
ficoml
add
ss
mov
push
rol
add
and
pop
push
dec
bound
arpl
pop
sbb
mov
shl
jae
insl
sbb
and
sbb
jb
popa
arpl
add
aas
mov
add
inc
and
clc
jmp
neg
and
adc
dec
push
in
int
pop
xchg
xchg
gs
ffreep
loopne
jno
out
add
aas
or
mov
add
cmp
je
test
push
notrack
paddq
daa
daa
daa
ror
enter
daa
daa
call
daa
daa
mov
daa
daa
daa
test
mov
daa
cwtl
in
nop
daa
daa
daa
daa
mov
clc
hlt
xchg
daa
daa
daa
mov
xchg
or
aas
jl
js
loope
dec
je
add
mov
outsb
call
outsb
add
subb
add
xor
ret
in
jbe
push
jo
insb
punpckhbw
in
pusha
pop
pop
push
mov
mov
cmp
jne
push
add
add
mov
cmpl
xor
mov
jmp
mov
mov
jge
mov
pop
mov
add
mov
mov
roll
push
lret
or
inc
cmp
iret
xor
mov
pushf
sub
js
cpuid
mov
mov
data16
or
mov
add
push
push
lcall
repnz
ljmp
add
int
jl
jmp
mov
lahf
inc
add
adc
aaa
fcomp
test
cmpsl
adc
and
in
jge
push
fcmovnbe
mov
pop
pop
pop
mov
cmpl
mov
adc
dec
cmp
jae
sub
or
dec
add
in
or
add
push
push
outsl
mov
mov
fcompl
push
pop
push
push
repz
mov
sti
rcll
lret
add
cmp
jne
xor
ja
add
inc
or
or
pop
jmp
pop
mov
cmp
jne
cmp
cwtl
rorl
rorl
shl
cmp
jo
addr16
or
aam
push
mov
fimuls
addb
pop
sub
add
femms
outsb
enter
push
and
push
add
lsl
ret
push
sub
cmpl
push
push
add
ret
dec
in
jmp
imul
sbb
pop
jecxz
sub
pop
mov
add
sub
mov
loope
adc
enter
lea
pop
jmp
cmp
xchg
lret
and
push
push
cmp
jne
adc
insb
js
mov
cmp
testl
jmp
add
push
call
mov
push
push
cmp
ret
push
sbb
clc
mov
test
je
xor
call
imul
dec
orb
and
int3
pop
push
pop
subb
jnp
sti
mov
lahf
push
pop
icebp
dec
xchg
int
push
push
dec
pushf
sbb
sbb
in
mov
call
xchg
cmp
sub
repz
mov
xchg
sbb
add
rcll
cmp
imul
mov
mov
cmp
lcall
jo
ja
and
jae
pushf
mov
mov
add
insb
cwtl
jbe
or
std
std
test
arpl
add
or
add
dec
ud0
scas
push
insl
cmp
jne
inc
pop
xchg
cs
push
sub
je
jno
inc
sub
sbb
mov
fistps
mov
xchg
ljmp
lock
dec
xorl
mov
loop
mov
jmp
stos
adc
adc
cmp
xor
push
add
add
out
pop
cmp
or
jmp
jbe
ja
or
outsl
adc
jns
aas
cmp
push
push
es
cmp
andl
fcmovnbe
jmp
lcall
lret
inc
mov
pop
loopne
repnz
add
cmp
nop
mov
inc
pop
push
orb
jns
ja
and
jmp
adc
add
outsb
dec
cmp
xorl
mov
div
inc
mov
mov
aas
sar
addl
or
xor
lret
xlat
inc
pop
xor
push
pop
mov
add
pand
repnz
jnp
inc
fucomp
ds
shrb
jne
out
sbb
lea
and
dec
jl
sti
orb
add
push
mov
sbb
cmp
dec
inc
mov
pop
push
add
cli
or
pop
scas
mov
into
push
sbb
cmp
je
or
jne
or
shll
pushf
pop
mov
sub
out
mov
add
repnz
cmp
xor
adc
or
push
add
sub
sub
les
jo
xchg
inc
out
rorb
sub
stos
mov
adc
push
xchg
pop
cld
shll
jmp
stc
cmp
jne
pop
jg
js
addl
add
push
cs
inc
pop
add
rcll
push
mov
pushf
pop
cmp
stc
lock
shlb
test
adc
jbe
pop
fisttps
pop
test
jmp
ret
sarl
test
je
ret
roll
inc
cmp
or
mov
xchg
push
push
js
ja
adc
int
pop
mov
mov
push
dec
push
push
pushl
lcall
push
cmp
or
xchg
and
adc
mov
clc
jge
jle
sub
mov
negl
hlt
inc
cmp
movl
or
cld
js
adc
mov
cld
xor
add
pop
pop
fs
cmpsl
add
inc
dec
das
pop
ret
push
sub
jmp
mov
scas
add
push
pop
add
test
cld
xchg
inc
insb
adc
and
loopne
mov
lea
inc
clc
jmp
or
adc
pop
cmp
push
jne
dec
mov
jge
popf
and
xor
and
add
xchg
jmp
dec
sbb
aaa
fs
fcmovnb
push
ljmp
pop
xlat
clc
cmp
test
adc
cmp
into
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
jno
mov
mov
mov
adc
mov
or
pop
pop
jle
setg
int3
push
pop
mov
jmp
mov
negl
and
add
adc
mov
xor
mov
jno
add
sub
test
lock
mov
cmp
jl
cli
movl
mull
rorl
and
jl
jbe
addr16
outsl
leave
add
inc
or
add
fmulp
rolb
cld
dec
adc
in
into
lock
mov
or
aas
leave
idivl
push
pusha
fwait
or
ret
call
push
push
push
xchg
xor
cmp
iret
push
daa
add
and
xor
idiv
mov
lock
lret
add
sbb
or
xor
jo
push
jmp
xchg
xchg
or
mov
mov
xor
mov
test
shll
fsubs
test
jne
sub
jle
mov
and
mov
pop
cmpsl
jbe
inc
pop
hlt
pop
xor
mov
imul
mov
add
ret
rorb
in
addb
sub
push
movl
push
aad
push
dec
mov
xchg
or
fisttps
dec
dec
adc
xor
cmp
loope
adc
aad
push
and
sbb
sahf
jp
mov
shlb
jo
in
or
test
pop
test
dec
pop
insb
mov
push
mov
mov
add
and
cmp
or
movsb
sti
jbe
test
xchg
in
sbb
sar
loope
push
loope
mov
mov
cmpb
aas
mov
xchg
adc
pop
leave
inc
mov
or
cmp
adc
sub
or
inc
mov
out
cltd
scas
lock
push
mov
sbb
fs
mov
adc
or
pop
jb
sub
add
sub
fisttpll
or
loopne
sbb
ret
push
test
cld
dec
adc
fadds
mov
rcll
jae
xchg
lods
sub
add
ljmp
add
jae
jecxz
insl
inc
sub
addl
into
cmp
roll
mov
mov
mov
xor
sbb
enter
inc
pop
or
mov
add
mov
add
ret
lea
fisttpll
pushf
pop
mov
mov
push
mov
or
insb
xor
jg
lahf
adc
hlt
cmp
out
inc
lods
jmp
int
mov
jno
jne
or
push
popf
pop
jb
mov
sbb
pop
imul
or
mov
or
cmp
jg
pop
jbe
test
mov
pop
je
cwtl
jbe
push
sbb
fstpt
xchg
push
addb
lock
push
adc
cmp
mov
js
pop
insb
or
xor
mov
out
sub
sbb
add
push
addr16
dec
or
bnd
push
mov
inc
mov
mov
jae
push
cli
mov
and
pusha
aaa
pop
cmpb
xchg
imul
dec
scas
dec
jne
lahf
orb
xchg
dec
mov
ficomps
adc
cmp
aad
andb
pop
pop
in
push
mov
clc
inc
mov
je
je
push
pop
mov
xlat
inc
cld
adc
jae
jo
cmp
ret
pop
and
cmp
add
out
sbb
jmp
insb
or
mov
fmuls
push
in
push
sub
sbb
mov
add
push
jne
aaa
jmp
das
adc
lock
scas
jecxz
jno
inc
insb
jbe
xor
sub
pop
push
mov
mov
mov
add
pop
repnz
sarl
sbb
lods
jp
ljmp
add
lds
mov
mov
jmp
movsl
mov
imul
loop
and
sub
les
add
xchg
mov
jne
out
xchg
js
cmp
or
test
pop
dec
insl
inc
daa
mov
out
loopne
inc
sub
adc
jne
mov
or
ret
out
out
sbb
push
add
sbb
and
test
mov
sub
cltd
test
mov
fstl
or
mov
sbb
cmp
jo
loop
adc
mov
enter
loopne
fbld
sbb
test
je
addr16
add
cmp
cmp
or
jmp
push
insb
lock
js
or
orb
fadd
jle
or
sbb
into
pop
or
roll
mov
dec
lods
dec
daa
dec
lods
shrb
jge
mov
mov
and
pop
xchg
lret
cmp
or
add
sbb
scas
nop
out
mov
jmp
cmp
adc
lea
add
sub
push
push
testl
inc
add
adc
push
pmullw
mov
mov
push
sub
xchg
scas
push
jle
cltd
cmpsl
mov
sub
jno
cmp
jg
sub
add
negl
jnp
push
leave
movb
push
pop
rorl
add
pop
or
das
inc
or
orb
lock
cmp
mov
lds
std
push
lock
adc
mov
dec
add
pop
lret
dec
add
pop
mov
cmp
lahf
sub
sbb
lret
xlat
aaa
cmpsl
sbb
push
xor
rorl
cmp
sub
sbb
test
pop
adc
push
and
adc
or
xchg
adc
pop
push
ficoml
push
sbb
jmp
fistl
rclb
xchg
jo
push
mov
push
jge
cmp
je
call
lret
xchg
push
sbb
jle
test
sbb
aaa
push
adc
jle
pop
xor
nop
sub
or
fs
push
fs
movsb
jmp
stos
scas
ja
rcr
test
inc
jno
mov
jnp
or
ret
mov
or
shlb
mov
dec
inc
pop
or
add
dec
mov
xor
fidivl
sub
bound
rorb
add
out
jl
out
mov
movsl
cld
add
test
sbb
jo
ret
xor
push
inc
adc
jg
xchg
cs
cltd
dec
and
cld
push
push
or
adc
adc
cmp
frstor
jle
test
jne
cwtl
fdivr
aas
fs
cmp
ja
mov
mov
cmp
dec
jae
out
and
add
inc
jne
sbb
add
jne
xor
aas
rcr
maskmovq
aas
mov
pop
adc
mov
inc
or
je
ljmp
sbb
ret
sub
inc
add
adc
sarl
mov
inc
repz
mov
mov
leave
jmp
mov
jmp
mov
mov
ret
pop
adc
repnz
sbb
mov
call
cmp
ja
je
sar
js
rep
xchg
in
insl
divl
inc
je
cld
lea
xor
std
xor
jle
jnp
cld
inc
mov
fldcw
fdivl
add
mov
fists
fwait
mov
mov
push
sbb
popa
test
mov
clc
mov
mov
sub
cli
dec
sub
jae
mov
call
dec
add
adc
sbb
jmp
es
sar
push
lock
cmp
and
dec
pop
lock
xor
push
sbb
cmpsb
sub
in
inc
xlat
in
fbstp
or
and
jne
pop
lods
int3
call
mov
test
adc
int3
push
or
sahf
jmp
cmp
rol
jg
mov
sbb
lret
jbe
lret
mov
inc
inc
and
ds
dec
fists
push
xor
mov
mov
inc
inc
dec
ja
das
sar
add
push
shr
je
mov
cmp
jne
dec
mov
xchg
pop
add
aaa
mov
or
lcall
push
adc
add
and
je
mov
cmp
jne
push
adc
cmpsb
imul
dec
add
adc
add
jne
add
adc
cmp
jne
shr
aam
sbb
mov
add
push
mov
shr
or
ds
dec
dec
pop
cmp
jb
or
inc
pop
and
mov
cmp
jne
dec
dec
dec
and
mov
mov
jecxz
cmp
dec
loop
mov
je
loopne
in
push
fistl
data16
stos
adc
lock
xchg
push
mov
mov
jp
mov
pusha
and
add
imul
js
pop
pop
je
fwait
sub
fnsave
jne
dec
and
out
and
add
sub
or
cmp
ja
lea
push
add
mov
mov
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fnstsw
je
andb
xchg
and
popa
add
rolb
pushf
add
or
cwtl
aad
cwtl
pop
xor
mov
pop
mov
ljmp
pop
cmpb
add
sub
inc
mov
dec
jne
pop
cmp
ret
mov
inc
sub
shlb
xchg
jl
pop
sub
pop
mov
test
andl
adc
fldt
pushf
fnstsw
jns
pcmpeqb
lods
xor
popa
adc
inc
xor
push
pop
xchg
xchg
push
xchg
jge
mov
xor
call
jmp
fstp
fldt
pusha
xor
adc
out
mov
dec
jg
aas
mov
inc
sahf
enter
inc
pushf
or
and
and
adc
xchg
jl
mov
out
sbb
xchg
sti
lock
and
inc
mov
mov
lock
sbb
js
out
xchg
add
hlt
and
mov
adc
jle
pop
jecxz
add
leave
sbb
mov
jg
inc
jbe
imul
cmp
mov
mov
bound
fwait
jg
outsl
cmpb
xlat
fadds
outsb
xor
xchg
push
or
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
push
lcall
nop
mov
inc
push
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
ljmp
pushl
lds
iret
decl
js
inc
mov
stos
mov
cmp
decl
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
pushl
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
pushl
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
ljmp
inc
pop
or
addl
cmp
xor
in
cmp
ja
decl
lock
mov
popa
movsb
mov
and
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
adc
fcmovnbe
and
clc
pop
jne
push
pop
and
add
lret
hlt
rol
fcomp
andb
clc
xchg
pop
hlt
movzwl
adc
fisubrl
push
mov
jo
mov
or
push
fmuls
push
xor
inc
hlt
mov
clc
data16
loopne
xchg
pop
add
mov
test
test
mov
jmp
data16
and
leave
out
add
inc
push
call
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
sahf
jo
loope
insb
jne
fninit
fwait
sub
push
and
add
clc
jmp
xlat
mov
xor
mov
inc
lret
adc
mov
rorb
mov
or
dec
cld
jne
dec
mov
loope
das
shlb
ss
jne
mov
or
fisubrl
inc
fsubl
divb
pop
or
or
mov
jmp
mov
aaa
int3
or
fcomp
daa
push
sti
outsl
test
or
daa
mov
bswap
mov
out
adc
fs
xchg
or
mov
in
pop
daa
lock
pop
add
sub
call
ret
cmpsb
ret
jl
mov
pop
lock
xor
rep
pop
loope
rorb
loop
mov
fmull
scas
inc
add
sbb
in
cmp
je
pop
mov
add
jae
loope
mov
into
push
mov
mov
push
sbb
cmp
addr16
call
ja
mov
mov
mov
shl
clc
push
stos
lock
mov
dec
jmp
stc
or
adc
jb
bswap
add
inc
roll
add
adc
push
dec
mov
mov
fs
lock
scas
xor
lea
and
out
mov
adc
and
pop
pop
mov
adc
mov
or
lea
inc
push
sbb
div
fcomps
in
inc
mov
jbe
setne
mov
mov
cmp
mov
ficoms
pop
xor
mov
shrb
mov
sub
sub
xor
xor
jb
cmp
inc
push
or
jne
or
or
adc
fsubrl
lods
xor
or
add
mov
cmp
daa
test
mov
pop
rclb
rorl
lods
inc
push
dec
jle
jne
mov
jecxz
test
xchg
jmp
loop
shl
or
aam
push
add
repnz
je
pop
add
add
inc
pop
inc
sub
mov
pop
push
mov
inc
pop
pop
out
mov
pop
mov
mov
cmp
cmpsb
push
mov
les
mov
inc
orb
popa
dec
ret
pop
push
les
or
inc
mov
inc
fadd
cmp
pop
pop
clc
push
mov
icebp
pop
mov
in
lock
pop
dec
out
dec
sub
decl
mov
je
add
mov
cmp
sbb
add
dec
jne
add
jmp
push
jmp
add
sbb
jecxz
dec
je
jo
cmp
xlat
lahf
push
popf
enter
repnz
sbb
pop
imul
pop
jmp
push
xor
call
xchg
in
push
pop
add
mov
jl
decl
rol
mov
mov
mov
movl
pop
cld
mov
and
out
pop
test
ljmp
and
mov
push
stos
pop
rcll
pop
test
sbb
xchg
in
icebp
lret
outsb
jg
mov
xlat
int
and
pop
movb
adc
incl
or
int3
in
push
call
cwtl
js
mov
push
cmp
cmpsl
mov
pop
iret
cs
mov
xchg
loopne
scas
or
mov
jge
jae
sub
pop
push
push
and
in
ljmp
cmpb
je
or
jne
movsbl
inc
inc
jmp
fadds
add
addr16
icebp
sub
xchg
push
add
adc
loop
fiaddl
push
fdivrl
adc
xchg
outsb
pop
loopne
inc
add
mov
sbb
jne
fiadds
dec
adc
pop
jne
lods
outsb
add
mov
xchg
je
jp
shl
adc
sar
js
mov
out
push
je
dec
js
push
lods
sbb
sub
jbe
test
jmp
rorl
testb
ss
pop
jbe
dec
cmc
enter
in
or
xor
or
adc
adc
push
jns
movsl
sarb
je
orl
adc
sbb
push
sbb
push
sub
adc
test
mov
push
out
sub
mov
lea
js
inc
add
xchg
adcl
mov
insb
jmp
mov
mov
nop
cmovno
xor
push
xchg
dec
test
or
push
add
rol
and
mov
pop
cwtl
push
or
sbb
pop
add
lds
mov
out
sub
add
push
loope
sbb
fdivs
mov
adc
mov
mov
fsubl
jne
testb
fiaddl
cld
outsl
xor
faddp
inc
jmp
sbb
push
cmp
shlb
adc
daa
adc
lds
add
cmp
sub
pop
adc
xchg
mov
daa
dec
jge
pop
jmp
punpcklbw
adc
loope
cmpsb
movl
or
jo
call
inc
jg
and
fdivr
js
push
push
push
push
push
add
pop
sarl
push
fildl
xor
mov
cmp
sbb
cwtl
mov
cmp
andl
out
xor
jle
fbld
adc
adc
adc
mov
cmpxchg
lea
cmp
mov
ljmp
enter
xor
pusha
inc
sbb
das
xchg
xor
xchg
ret
data16
mov
xchg
cmp
std
push
jg
je
cmp
push
sub
fbld
xchg
jmp
add
sub
jb
je
jmp
cmp
xchg
push
adc
sub
adc
jmp
sub
std
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
loopne
jg
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aam
or
and
sbb
popa
pop
data16
ljmp
lea
pop
insb
jb
je
push
outsl
xchg
call
sahf
cmp
dec
add
lock
je
add
and
mov
or
push
addl
popf
inc
sti
sub
mov
or
insb
subb
fnstenv
mov
add
ja
test
ret
scas
mov
or
enter
push
ret
mov
sbb
cmp
fcos
xchg
xchg
push
repnz
cmp
jne
and
xchg
data16
aas
mov
pop
mov
or
mov
imul
dec
sbb
add
jno
jle
dec
mov
hlt
inc
fcomp
fiadds
sbb
dec
add
push
clc
xor
in
sbb
test
jmp
mov
adc
jecxz
jae
in
mov
outsb
testl
jle
flds
subb
rcrb
xor
fbld
cmp
loop
or
mov
mov
lock
inc
pop
adc
xchg
mov
sub
dec
or
jg
ret
ds
test
sbb
jbe
aas
shl
add
xor
test
dec
jne
pop
pop
pop
inc
push
push
push
nop
pusha
sbb
add
lea
inc
and
fcomps
dec
or
adc
adc
sbb
pop
cltd
idiv
add
rcr
lods
xor
es
xchg
mov
mov
mov
sub
mov
fisttpl
cmp
shll
pop
out
jb
add
cmpsl
neg
sbb
inc
lcall
mov
pushl
add
dec
aad
cmc
mov
mov
leave
inc
push
push
imul
cmpl
cmpl
dec
mov
xor
ljmp
push
push
add
inc
adc
add
inc
inc
pop
ret
mov
jo
test
loope
cwtl
outsb
add
sub
or
add
inc
cmpb
push
cmpl
sbb
xor
mov
orb
inc
and
inc
sbb
push
fbstp
mov
int3
or
pop
fsubs
push
add
add
ds
ljmp
dec
xor
xor
jnp
adc
xor
dec
pusha
mov
jne
cmp
je
outsb
push
mov
inc
insl
adc
add
ret
call
aad
cs
mov
adc
jo
lret
sti
shr
adc
mov
ja
in
nop
popl
xlat
in
xchg
repnz
pop
or
dec
jl
lock
or
inc
clc
lahf
outsb
sbb
mov
adc
movl
mov
jne
popf
clc
or
inc
jg
mov
imul
mov
pop
push
dec
sbb
pop
pop
jmp
pusha
pop
mov
jbe
xchg
adc
xchg
or
test
and
add
and
push
inc
pop
movw
add
adc
push
cld
fists
jns
jl
mov
loopne
cwtl
mov
mov
das
stc
mov
ljmp
mov
cmp
cmp
xor
cmpsl
sahf
out
push
add
or
push
mov
pop
in
movsl
jle
mov
cmpsl
add
lret
lds
xabort
jg
icebp
jmp
pop
bound
cmp
push
xorb
xor
cld
out
push
movb
jl
mov
jae
repz
jmp
mov
add
sbb
cmp
pop
sbb
cs
fstps
add
cmp
mov
loop
or
ss
ret
cmp
je
cmp
or
je
add
jb
pop
add
call
pop
sub
jmp
repz
sub
and
pop
pop
or
jnp
bound
or
addr16
in
add
jae
jbe
cmp
add
push
mov
scas
clc
mov
add
rcrl
rcrl
mov
stos
loop
outsl
push
and
pop
cld
add
mov
repnz
fnstcw
or
mov
fcoml
xchg
aas
mov
loop
cld
ret
push
aas
je
xchg
mov
es
cld
add
cmp
lods
lods
js
pop
and
mov
adc
or
sub
xlat
or
xchg
cmp
adc
or
mov
xor
sub
hlt
mov
into
sbb
add
inc
jg
fmuls
lds
push
sbb
pop
push
rolb
mov
add
fmul
jmp
jle
or
cmpsb
xor
mov
loope
test
cld
dec
jmp
dec
sub
fisttpll
or
push
cmp
fs
dec
jne
mov
jl
ss
jge
and
aaa
add
dec
jmp
maxps
inc
pushf
sbb
lock
into
pop
dec
jne
mov
sbb
add
pop
shl
and
lea
jmp
xchg
mov
cmpsl
psrad
rcr
sub
imul
mov
iret
pop
adc
inc
cs
and
push
inc
push
pop
xor
or
and
sarb
shr
adc
add
aam
testl
clc
inc
das
lods
movsl
push
xchg
jle
ret
add
lahf
cmp
dec
jno
xor
cmc
mov
insb
mov
dec
adc
movsb
inc
es
mov
and
ss
lsl
sbb
sub
dec
jl
cmp
jge
sub
ljmp
jg
add
or
mov
shr
in
jmp
and
cmp
xor
and
in
pop
hlt
push
pop
xchg
lret
sub
jge
lock
outsl
mov
mov
add
stc
add
lea
pop
or
movsb
push
push
cli
mov
insl
or
lahf
cltd
mov
jg
mov
inc
dec
jge
cmp
adc
imul
mov
gs
cmp
pop
mov
mov
lea
add
or
clc
mov
sbb
add
xchg
xor
mov
push
mov
dec
js
mov
inc
jb
adc
adc
sub
in
pop
push
faddl
xchg
fsubl
and
subl
cld
aas
inc
aaa
test
lods
and
sbb
aam
and
loopne,pn
je
adc
mov
jo
cld
jmp
divb
push
rorb
ret
aad
icebp
pop
icebp
or
adc
ret
push
push
xchg
rolb
add
pop
ret
in
cmpsl
push
push
das
loopne
daa
push
adc
mull
in
cmpsl
push
cmp
les
call
mov
adc
push
push
dec
fsub
jno
pop
adc
jmp
pushf
test
imul
add
sub
enter
ret
pop
ret
sbb
push
leave
and
sub
dec
das
int3
sbbl
pushl
mov
and
jecxz
popa
add
add
sbb
add
insl
pop
shrb
and
pop
add
cmp
je
mov
add
nop
and
mov
and
pop
inc
fstl
sbb
or
sbb
dec
jecxz
push
ss
stc
mov
cmp
cmp
jge
inc
mull
pop
dec
cmp
nop
pushf
lcall
sub
adc
out
ret
cmp
push
lods
add
push
or
adc
loopne
xchg
loopne
xchg
bound
mov
fidivs
push
mov
xorb
adc
fadds
out
cmpsb
cmp
push
lods
jo
aas
lods
sar
push
mov
push
lea
add
push
mov
push
movsb
aas
cmp
out
jne
test
fbstp
mov
je
cmp
je
cmp
je
cmp
clc
mov
cmp
je
cmp
cmp
je
mov
add
cwtl
cmpsb
xor
inc
adc
or
adc
jmp
lcall
add
in
ficomps
dec
cs
adc
cmp
pop
jmp
cmp
adc
lcall
rolb
cmp
adcb
cmp
sbb
pop
call
call
mov
std
ret
cmp
jae
mov
lcall
push
mov
mov
test
int3
jg
in
mov
mov
mov
push
inc
enter
cmp
jmp
subb
pusha
es
repnz
dec
pop
inc
and
jmp
adc
enter
jmp
test
mov
or
test
cmp
inc
icebp
jmp
mov
fcomps
pop
adc
inc
push
imul
cld
scas
inc
xor
mov
lea
outsl
cld
pop
icebp
jbe
or
clc
push
push
add
sarl
add
pop
ud2
stc
mov
ficoms
mov
sbb
xor
pop
cmp
lods
pop
dec
or
pop
jo
sbb
adc
bound
sbb
dec
sub
pop
xor
cs
or
inc
push
fisttpl
jge
cmp
insb
lea
push
mov
xchg
adc
cmp
mov
orb
mov
fsubrp
cmp
add
sarl
xor
mov
int3
inc
push
dec
cld
adc
and
add
dec
dec
jne
adc
pop
shr
test
daa
mov
ljmp
mov
in
inc
push
or
test
pushf
loop
test
ret
dec
jne
sub
jae
push
jmp
cmpsl
std
lds
imul
dec
xor
loopne
out
cmp
cmp
or
ja
sti
add
add
mov
into
cs
icebp
mov
xor
movl
je
cmp
fcomps
or
adc
popa
pop
or
sbb
sub
pop
jl
aaa
mov
nop
mov
fnstcw
mov
mov
jne
and
add
ss
jae
adc
pop
pop
ret
pop
push
outsb
and
xchg
aas
test
mov
jne
cmp
cmc
mov
cmpsl
mov
dec
hlt
mov
mov
bnd
call
fmuls
pop
mov
popf
mov
dec
mov
nop
inc
jns
lcall
jge
orb
xlat
dec
loop
adc
movzbl
add
jb
push
push
push
sbb
adc
inc
or
out
push
imul
mov
imul
mov
add
push
push
in
sti
jle
test
test
rcr
testb
ret
sub
pop
enter
push
inc
in
jmp
dec
lock
push
call
lock
jge
mov
mov
mov
xor
jo
mov
add
mov
sbb
pop
pop
lret
into
xor
int3
push
std
sbb
push
add
int3
mov
out
xchg
mov
adc
sub
mov
or
add
mov
hlt
add
or
dec
jle
mov
xor
movsb
outsb
lea
fadd
pop
rol
hlt
xchg
fadds
jne
aad
mov
mov
pop
rolb
js
add
scas
aaa
adc
pop
mov
dec
clc
jne
inc
xor
fidivs
inc
pop
pushf
in
inc
sub
cld
xchg
sbb
pushf
je
test
sti
jecxz
xor
push
push
mov
incl
das
pop
pop
out
or
ret
add
xor
sub
sub
inc
loope
adc
push
add
ljmp
fadds
cs
fdivs
cmp
pop
mov
mov
adc
sbb
inc
inc
xlat
xchg
xor
inc
adc
adc
pop
or
and
xchg
mov
mov
pop
push
push
add
mov
pop
sbb
aam
ss
jne
mov
clc
xchg
cmp
mov
pop
and
push
xchg
lea
hlt
xor
sub
add
mov
sub
sub
sti
pop
jne
sbb
add
movsb
pop
pusha
mov
insl
lar
push
inc
ja
mov
inc
push
rcll
push
xchg
lock
iret
test
outsb
mov
push
clc
push
sub
scas
jge
std
inc
mov
cmpb
inc
vmread
pop
sbb
fsubl
jle
fiadds
lahf
mov
add
xor
inc
sub
in
lock
das
cmc
orb
mov
pop
in
mov
inc
add
jmp
cmp
out
in
sub
adc
pop
insl
mov
inc
cmp
mov
push
mov
xor
stos
pop
ret
rclb
fwait
cmp
andl
aad
mov
pushl
xor
cwtl
lea
sbb
outsb
divl
mov
sbb
sub
dec
push
push
mov
fdivrs
sbb
add
test
dec
popa
add
andl
push
imul
gs
xor
cs
insb
test
pushl
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
mov
into
push
movsb
push
fucomip
fmuls
sti
outsl
outsl
pop
movb
push
push
js
scas
add
add
jbe
sub
add
push
sbb
fadds
mov
es
cmp
or
sub
test
ds
add
mov
aas
iret
cmp
loope
addl
repnz
xorl
push
inc
mov
pop
mov
rorl
add
pop
xlat
add
js
push
xor
cmpb
test
jle
repz
or
push
jmp
jnp
xchg
pop
repnz
mov
inc
jmp
stos
in
arpl
in
or
je
inc
cmp
jne
adc
xchg
incl
test
int3
icebp
in
rolb
mov
and
add
and
jb
cs
insl
or
repz
int3
fs
mov
mov
push
outsl
data16
popa
jb
orps
popa
insb
gs
aaa
mov
inc
ret
inc
dec
jecxz
lock
insb
xlat
mov
dec
xchg
adc
aam
adc
lcall
lock
mov
sbb
daa
sar
jne
das
in
mov
loopne
shr
adc
aas
pop
outsb
xorb
mov
sbb
and
out
add
xor
rcrb
xchg
sarb
scas
je
sbb
or
pop
cli
addb
push
ret
loope
xchg
cmp
sub
push
jno
and
push
jne
daa
in
xor
or
mov
and
in
mov
inc
out
mov
hlt
mov
add
ret
sbb
int
or
cmc
cmp
roll
sarb
cmp
je
scas
sub
add
out
push
jo
ja
sbb
js
mov
add
pop
mov
fmull
add
jl
pop
pusha
dec
sub
pop
mov
inc
push
mov
addr16
stos
rol
filds
sbb
mov
mov
les
loope
push
les
dec
lock
mov
push
and
mov
add
test
fidivrs
jecxz
and
adc
inc
push
nop
add
sub
subb
scas
les
andb
pop
test
add
js
inc
fistpll
or
adc
lock
push
decl
loopne
push
xor
popa
mov
mov
xchg
movzwl
add
call
inc
cmp
ja
mov
inc
jmp
cmp
out
pop
cld
pop
add
pop
cld
ja
fcmovb
jmp
or
mov
adc
sbb
in
outsl
sbb
and
lret
add
lods
rclb
jmp
pusha
add
dec
lret
shlb
xor
inc
add
dec
or
cmp
jb
or
pop
rcrl
or
xor
push
adc
or
add
adc
cmp
lea
ret
push
bound
into
lock
cmp
and
lock
cli
push
mov
add
imul
cmp
dec
xor
add
inc
test
and
mov
adcl
aas
and
je
cmp
adc
jg
sarb
mov
sti
orb
mov
bswap
mov
and
ffreep
mov
or
mov
pop
lea
dec
dec
cld
mov
mov
inc
push
inc
lcall
cmp
pop
ja
xlat
or
movl
mov
scas
imul
ret
xor
fsubs
xorb
sbb
or
jb
inc
and
push
mov
add
lods
sbb
pop
pop
in
cmp
test
xor
pusha
ret
pop
adc
lea
incl
dec
and
pop
xor
inc
push
cli
pop
dec
and
ss
testb
das
cmp
lea
outsl
jmp
adc
enter
mov
or
add
stc
xchg
mov
dec
pop
jo
adcb
cltd
cmc
dec
adc
test
pop
and
and
or
xchg
cmova
outsl
inc
out
nop
inc
jo
inc
cmp
push
hlt
inc
push
or
cmp
lods
jne
mov
fmuls
dec
or
add
fistl
lods
dec
pop
cmp
jge
outsb
pusha
aam
jl
inc
nop
aad
rep
add
or
adcb
addr16
out
aam
imul
pop
mov
push
push
push
push
lea
push
push
push
xchg
and
and
add
xor
mov
push
mov
or
jp
adc
inc
xchg
jno
bound
mov
dec
repz
push
mov
mov
in
mov
or
out
aaa
jns
mov
or
mov
outsb
scas
clc
subl
test
cld
movb
test
mov
dec
mov
adc
add
adc
fbld
cmp
xlat
adc
rcrl
dec
mov
mov
add
int
sub
push
inc
jbe
divl
and
or
mov
imul
xor
jmp
sbb
sbb
daa
adc
push
dec
or
mov
or
call
and
inc
cmpl
lcall
call
or
jmp
push
mov
jg
xchg
sub
test
jne
mov
sub
cmpb
lods
sahf
ret
add
mov
and
mov
inc
adc
out
lods
loope
mov
mov
out
jbe
mov
or
mov
jge
das
sbb
jecxz
fstps
pusha
push
add
test
addb
xchg
push
push
sbb
xchg
rorb
cmc
xchg
add
jbe
add
cmp
add
push
or
nop
dec
fsubrp
inc
popa
jo
popa
mov
add
cs
jnp
sbb
insb
pop
and
outsl
fs
gs
iret
fisubrs
or
jb
jns
es
pushl
popa
bound
inc
push
outsl
arpl
ja
sti
das
inc
gs
jne
je
dec
outsl
je
imul
lahf
imul
mov
gs
outsl
inc
arpl
or
pop
xor
or
or
jb
xor
lock
fbstp
push
outsl
insl
bound
outsl
js
imul
ja
nop
or
adcb
pop
cmp
andps
outsb
dec
inc
xor
je
dec
in
mov
addl
xlat
xor
sub
in
in
sub
inc
in
in
inc
cmp
xor
cs
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
ret
jb
daa
daa
lock
call
in
jb
jb
aam
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
insb
push
fs
pop
pop
jb
jb
push
push
dec
dec
jbe
jb
inc
inc
cmp
lahf
repnz
sbb
andps
les
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
in
jbe
jb
add
clc
bswap
leave
leave
leave
hlt
lock
call
in
leave
leave
leave
leave
aam
int3
enter
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
movsb
mov
in
mov
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
lds
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movsb
mov
jb
xchg
nop
mov
jb
mov
fsubrl
js
je
insb
leave
test
leave
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
clc
hlt
lock
in
in
call
in
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwtl
xchg
nop
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
push
out
in
in
dec
inc
movzwl
leave
mov
clc
shl
or
adc
push
mov
nop
gs
jo
fnsave
or
push
and
mov
cmp
or
lock
mov
add
inc
and
mov
mov
call
and
cmp
sub
pop
add
movsb
pop
sbb
aas
inc
push
or
cld
orl
out
aas
jmp
sbb
and
push
push
push
mov
sbb
popf
mov
lret
sbb
mov
jle
mov
std
pop
ret
nop
scas
cmpsl
push
stos
push
cwtl
dec
adc
mov
lock
repnz
or
jne
loopne
sbb
fs
pusha
jb
and
pop
shlb
mulb
sbb
pop
jo
cmp
pop
fs
sub
or
or
pop
repnz
imul
inc
pop
enter
or
inc
adc
insl
lea
lret
popa
gs
sbb
jg
add
dec
push
push
dec
inc
inc
dec
add
outsl
sti
fcmove
scas
add
and
dec
push
inc
push
dec
pop
and
pop
icebp
push
push
in
push
push
pop
sub
push
inc
jns
mov
dec
pop
dec
dec
dec
inc
push
das
xchg
push
je
insl
je
xchg
movsb
inc
lock
icebp
dec
dec
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
rcl
dec
dec
dec
dec
rcl
aam
dec
dec
dec
dec
xlat
fcomp
dec
dec
dec
dec
fcmovu
dec
dec
dec
dec
rol
dec
dec
dec
ret
lds
dec
dec
mov
leave
dec
dec
dec
dec
lret
int
dec
dec
dec
into
iret
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsb
cmpsl
test
es
dec
stos
lcall
cltd
jo
cs
jb
mov
add
add
aas
xor
push
or
loopne
jne
pop
push
mov
xchg
andb
xchg
orl
js
gs
pop
add
jo
imul
bound
in
aam
jo
push
mov
push
inc
dec
gs
jo
nop
mov
leave
mov
dec
jne
dec
dec
mov
outsl
jb
mov
and
outsl
inc
imul
outsb
mov
jo
or
adc
xchg
add
dec
cs
enter
jb
sbb
jae
add
or
xchg
loope
sbb
scas
push
leave
sbbl
fmull
in
insl
incl
imul
nop
fsubrs
or
popa
outsb
xor
or
ds
fsubrl
pusha
xchg
dec
jbe
insb
outsl
ja
fsubs
ds
mov
dec
mov
gs
in
in
je
mov
xor
dec
jo
cmp
adc
adc
push
push
xchg
insl
jle
gs
scas
mov
pop
lods
and
in
scas
in
mov
push
and
push
outsb
fs
add
inc
ret
inc
jbe
sidtl
ret
adc
mov
pop
mov
fsubs
add
xor
mov
push
jae
fdivrp
mov
cmp
inc
dec
ror
adc
mov
jl
pushf
adcb
push
or
rolb
insb
popa
sbb
mov
xchg
push
jb
insb
hlt
nop
and
outsl
outsl
mov
cmpsl
push
inc
repnz
sub
mov
lods
popa
inc
xchg
fbstp
inc
les
ds
cmp
pop
mov
sbb
and
sbb
ds
mov
addb
jb
xchg
fs
mov
add
mov
add
fdivl
fcoml
rcll
cmp
scas
add
aas
or
stos
or
push
fbstp
popa
gs
push
add
add
aaa
xor
sub
fsubl
push
push
inc
xor
out
inc
cmp
loop
push
inc
jnp
mov
inc
xchg
sub
int3
dec
adc
jb
popa
rcrb
in
les
int3
add
fistl
lock
hlt
das
and
adc
cmp
jge
mov
addl
pop
aaa
cmp
repz
imul
jecxz
jnp
sbb
push
loopne
sbb
aaa
and
cmp
call
test
jg
adc
and
dec
imulb
test
and
out
or
push
sbb
ljmp
jp
addr16
lock
je
shr
div
lcall
cmp
adc
out
fmuls
dec
test
add
mov
lock
imul
sbb
xor
mov
addr16
std
fadd
notl
xor
dec
add
sbb
adc
sbb
mov
or
call
pop
pop
daa
or
sub
xchg
sub
ss
lahf
mov
mov
add
adc
and
mov
add
cmc
adc
add
mov
fimuls
pop
add
push
cmp
ja
sub
bound
pinsrw
sbb
in
movsb
jns
bound
pop
sbb
add
std
sub
pop
mov
cmp
jbe
insl
ljmp
inc
cmp
repz
je
movzbl
push
push
jmp
xchg
daa
imul
lret
cmpsl
jne
std
mov
add
ds
mov
mov
jbe
in
or
sar
dec
movsl
cmp
out
and
sti
je
fldl
add
in
out
sbb
push
pop
inc
pop
cmp
cld
dec
psrld
cmp
push
outsb
jne
lock
lock
addr16
push
sub
mov
add
push
inc
add
sahf
outsl
dec
jl
enter
outsb
xchg
dec
pusha
fmul
sete
aaa
pop
xchg
pop
sti
rcll
push
jg
jae
sub
ljmp
hlt
idiv
popf
pop
add
repz
cmpb
jbe
adc
or
xor
aaa
clc
push
sub
inc
jno
clc
cmp
ss
iret
jecxz
push
sub
xor
mov
mov
js
jmp
cmpsl
pop
cwtl
add
lret
mov
mov
jecxz
test
ss
add
mov
daa
xchg
call
mov
call
sub
mov
add
sub
jb
sub
je
decb
fdivs
jae
cmp
jl
inc
mov
pop
mov
rolb
push
stc
aas
lods
pop
xor
or
sbb
jae
inc
jnp
pop
jmp
jne
mov
movsl
icebp
mov
sarb
aam
push
mov
inc
dec
mov
or
or
xor
div
dec
sub
cmp
push
ret
push
hlt
ljmp
adc
shll
add
cli
test
ljmp
mov
sub
xor
push
outsb
cltd
cmp
repnz
mov
add
xor
sub
mov
jo
pushl
mov
test
out
pop
jae
and
fadd
in
sub
mov
add
jl
add
add
fldcw
mov
movsl
mov
mov
mov
andl
push
and
fcomip
in
pop
mov
roll
add
sub
add
rorl
sub
sub
fdivr
mov
cmp
ds
sti
outsl
add
rcrl
loope
push
addb
ffree
ffree
ffree
ffree
pop
aad
adcb
pop
push
sbb
frstor
push
test
loopne
or
jecxz
pop
cmp
cli
jle
inc
push
push
mov
in
push
xchg
aad
xchg
xorb
hlt
and
or
lock
sbb
xchg
or
or
lret
test
inc
out
push
and
pusha
lock
ja
out
sbb
imul
pop
cmovo
mov
pop
pop
outsl
mov
scas
mov
mov
pop
or
ds
inc
test
dec
mov
dec
cs
mov
push
or
mov
outsb
insb
shl
icebp
and
mov
mov
fistpll
movb
repnz
jl
push
pushf
addb
mov
lahf
dec
and
cmp
jmp
mov
mov
push
mov
pminub
cmpl
pop
test
mov
adc
insl
lock
adc
inc
setne
jmp
ss
push
pushl
xchg
jb
pop
addr16
inc
mov
or
sbb
ja
pop
or
xor
adc
out
mov
std
and
loop
aaa
jmp
and
inc
mov
mov
adc
shlb
xchg
cmp
das
clc
or
mov
insb
cmp
ja
add
mov
lock
inc
ja
int3
xchg
add
neg
sub
add
dec
mov
push
jo
lret
mov
daa
cmp
xor
mov
movsb
xor
rolb
pop
je
iret
push
pop
push
push
and
in
ss
push
pop
insb
add
push
push
dec
clc
xchg
rclb
adc
pop
dec
jmp
xchg
or
push
add
sbb
das
add
cld
lock
ja
push
cmp
push
call
sbb
add
push
cld
out
dec
mov
and
bnd
pushl
insl
sbb
fdivl
pop
inc
sbb
mov
ds
jle
xchg
inc
js
mov
imul
scas
jne
dec
dec
push
jg
aaa
les
ss
add
mov
cmpsl
test
jne
inc
jle
cmpb
inc
gs
notb
lret
dec
cmp
pusha
test
xchg
out
mov
lahf
pop
cmp
popa
aas
js
inc
sarl
push
xchg
rolb
test
lea
xor
dec
pop
mov
loope
inc
xor
loopne
enter
and
fucomp
bound
mov
out
lock
fldl2e
cmp
xor
icebp
xchg
fsubrs
imull
mov
mov
jle
adc
pop
shlb
adc
push
les
addl
cld
inc
sub
adc
ret
sbb
cli
mov
mov
push
ss
mov
mov
out
lea
daa
adc
cmp
or
fsubrs
not
mov
dec
lret
pop
add
insb
rep
dec
movsb
pop
and
mov
pop
ret
mov
lret
dec
fidivrl
push
adc
sub
pop
lret
mov
int3
pop
fxch
pop
pusha
adc
or
lods
mov
pop
adc
mov
popa
push
cwtl
outsl
cmp
arpl
enter
pop
or
sahf
clc
pop
jns
xor
xor
repz
mov
mov
jnp
in
lock
inc
je
dec
ds
clc
inc
xchg
pop
cmp
cli
ljmp
je
outsl
xlat
enter
adc
ret
das
rcr
iret
add
pop
mov
stc
das
add
xchg
int3
dec
jmp
test
sti
popf
add
adc
fimull
in
push
stos
jmp
je
inc
or
stos
movsl
mov
std
je
mov
mov
pop
sub
jbe
sbb
pop
jl
inc
dec
lock
sbb
mov
jne
test
lea
fcmovb
mov
mov
subl
mov
pop
add
sub
imul
clc
push
icebp
mov
in
inc
idivl
lds
ja
inc
ret
sbb
pop
jbe
mov
stc
ljmp
clc
sahf
push
scas
fs
jbe
mov
push
scas
push
mov
pop
adcb
je
cmp
test
bound
and
mov
sbb
or
add
or
mov
rcrl
arpl
inc
push
cmpsl
popf
dec
add
aas
push
addr16
push
andb
into
loopne
insb
sbbb
add
jge
adc
push
jle
das
rcrb
or
and
rep
xchg
push
inc
les
and
sub
out
fistps
sub
enter
mov
cmp
jne
sub
insb
jg
mov
cmp
jne
cs
and
lods
jmp
adc
mov
aaa
cmp
sub
inc
sub
mov
call
jnp
pop
mov
jae
pop
outsl
scas
xor
cmpb
or
lret
sarl
lock
fadds
rep
sbb
cmpl
fwait
push
jns
pop
pop
mov
dec
fldt
jmp
sub
jb
lock
cmp
ja
imul
mov
add
cld
add
sub
pop
dec
sbb
and
pop
add
decl
cld
or
jl
jmp
sarl
fisttps
pop
push
cmp
pop
imul
pop
jne
lea
mov
lcall
mov
jne
jns
pop
mov
das
cmpsl
xchg
pop
inc
push
imul
push
push
sbb
mov
in
xchg
mov
loopne
push
mov
sub
loopne
sub
lea
and
jmp
adc
inc
je
pop
sahf
dec
and
push
xor
in
shr
jmp
push
pop
outsb
adc
in
imul
sub
movntq
jnp
cmp
jne
sar
ret
sbb
lock
jbe
mov
aad
or
jmp
aaa
push
popf
fnstenv
leave
inc
inc
hlt
lods
and
jmp
sti
mov
loopne
add
jne
aas
std
cltd
cmp
and
call
pop
add
mov
jl
aaa
add
stos
pop
mov
cmp
ja
push
into
int3
fmuls
scas
jmp
add
es
dec
mov
mov
out
push
leave
mov
sahf
jno
lods
out
adc
fbld
mov
outsb
mov
inc
je
mov
or
je
mov
fsubp
fwait
add
adc
dec
jl
inc
clc
xchg
mov
mov
ret
mov
clc
ss
xchg
adc
mov
cmp
pop
mov
inc
mov
xchg
mov
inc
iret
dec
sbb
xor
push
clc
xchg
ret
xor
and
lret
lahf
ds
movb
aas
daa
aam
or
test
enter
or
push
push
jne
loope
push
mov
mov
daa
pop
push
repnz
mov
aaa
dec
and
cli
filds
mov
xchg
or
xchg
push
jle
outsl
pop
shlb
xchg
sub
das
les
mov
cmp
insb
jge
sbb
lea
clc
out
js
pushl
push
test
xchg
incb
jl
jmp
add
or
mov
jecxz
mov
dec
push
xchg
jne
pop
xlat
das
cmp
dec
arpl
lea
add
lds
xchg
imulb
push
xchg
pushf
dec
jg
jge
mov
neg
jmp
or
or
mov
hlt
and
mov
mov
movsb
sub
adc
pushf
clc
decl
jg
dec
mov
stos
cmp
jne
pop
pop
ja
pop
xor
aam
andb
or
sti
mov
jl
sbb
pop
repz
adc
sub
icebp
test
pop
xchg
jge
into
mov
add
cmp
push
lods
daa
hlt
adc
jb
incb
cmp
and
mov
ja
rclb
sub
int3
push
sbb
dec
add
mov
sub
cld
xlat
lods
pop
sbb
adc
ja
movswl
mov
call
or
pop
pop
sbb
sti
mov
rorl
fstpl
fidivrs
mov
xchg
dec
dec
inc
dec
inc
dec
lods
or
dec
jge
dec
xchg
popa
jnp
jo
ret
std
mov
aam
push
push
mov
jg
jg
cmp
jl
pop
sbb
pop
outsl
aaa
lods
or
mov
stos
neg
sbb
stos
jmp
xorl
mov
stos
loop
movlps
pop
pop
cs
add
add
push
loop
mov
mov
push
mov
cwtl
dec
pop
push
mov
cmp
add
leave
lea
mov
mov
mov
int3
insl
sbb
jl
jl
cli
adc
mov
clc
sbb
add
je
loopne
mov
hlt
div
mov
inc
test
jne
or
jbe
sbb
add
stos
xor
call
dec
push
sti
add
je
inc
jne
pop
push
lcall
repnz
xchg
and
sbb
mov
fbstp
push
lea
mov
jle
inc
je
inc
cmp
mov
or
or
add
movsl
mov
inc
loop
loopne
mov
push
mov
or
popf
add
and
and
adc
and
fucomp
sub
sub
xor
inc
jne
xor
push
sbb
and
sub
jae
outsl
adc
xor
mov
loopne
sub
xor
sbb
loopne
js
dec
aam
add
cmp
std
xor
pop
adc
scas
shr
ret
movsb
cmp
testl
pop
adc
cmpl
add
movb
adcl
sub
pushf
imul
or
dec
enter
pop
jo
xchg
loope
push
pop
mov
negb
rcr
scas
push
fnstsw
fwait
mov
testb
je
fidivl
xor
pop
fbstp
lea
mov
inc
sub
push
cmp
ja
shr
and
add
push
cmp
add
mov
add
jns
icebp
jg
jge
cmp
jge
pushf
or
cmpb
jb
movb
fisttps
dec
js
decb
and
pop
data16
pusha
xor
outsb
push
ja
jmp
mov
xor
sti
add
notb
scas
shr
mov
sahf
lock
add
xchg
out
jb
neg
adc
push
adc
xchg
push
add
loopne
scas
ds
je
mov
neg
sbb
or
or
jbe
rcrl
mov
repnz
jl
sbb
jae
dec
add
add
jle
mov
fildll
cli
dec
or
jg
ret
fidivl
shl
jo
fwait
mov
push
sub
cmc
add
and
jne
dec
sub
cmp
les
and
pusha
sarl
dec
adc
sub
movb
cmpb
popa
shll
jmp
mov
xlat
add
sbb
inc
pop
inc
dec
sbb
or
jns
pop
adc
fwait
push
js
fldz
ror
add
cmpsb
test
cmp
lods
test
sub
test
mov
cmp
or
cmp
icebp
je
pop
out
fnstsw
inc
jne
inc
push
sub
pop
add
jg
jne
add
loopne
mov
sahf
add
inc
jbe
push
push
mov
adc
jmp
jmp
fstpt
int3
test
add
pop
shlb
fsubrl
insl
and
push
int
cmp
mov
test
or
fimull
add
jmp
aaa
mov
idiv
or
push
inc
imul
sarb
cli
hlt
nop
jb
aaa
add
mov
push
inc
test
lret
push
insb
push
and
sub
out
add
adc
and
sbb
add
xor
pop
std
pop
jmp
mov
iret
mov
arpl
cmp
and
push
fwait
dec
es
push
push
flds
fcmovnb
out
out
fiaddl
lahf
xor
ret
or
or
sub
adc
adc
mov
xor
push
adc
adc
mov
or
pop
pop
out
and
sbb
int
jae
or
cmp
inc
stc
inc
gs
int3
push
outsl
fisubs
out
ss
imul
cmpsb
jne
ret
cmp
sbb
xchg
stos
pop
ds
sbb
mov
lret
movsb
dec
outsl
lods
mov
pushl
lea
sbb
shlb
cld
lea
mov
inc
xor
xchg
adc
push
cmp
xchg
mov
and
mulb
xchg
enter
loopne
lock
mov
insb
mov
test
jne
rcr
fcompl
nop
add
rolb
das
mulb
xor
shl
jg
add
add
fdivl
maskmovq
testl
ss
ja
outsl
adc
ja
sti
push
jno
jne
pop
inc
test
pop
inc
ja
sbb
into
or
sub
inc
dec
jne
dec
std
pop
outsl
xor
dec
mov
dec
cltd
idiv
imul
daa
test
mov
ds
cmp
stc
add
pop
ret
or
mov
rorl
xchg
mov
in
push
dec
aas
dec
call
mov
movsb
popf
push
or
jb
or
push
outsb
rolb
inc
pusha
aaa
xor
dec
data16
or
stc
mov
add
jl
addl
aam
add
and
push
cmp
loop
lods
mov
push
decw
cmpl
fistpl
push
fcoms
lcall
ja
push
shl
cmp
dec
xor
dec
pop
xor
mov
jbe
mov
in
push
mov
dec
mov
mov
out
out
lods
fdivrs
push
jb
sbb
pop
push
or
inc
jmp
ret
sbb
rorl
and
and
hlt
je
movsb
pop
push
push
mov
lock
dec
fldt
sbb
pop
mov
cmp
clc
xchg
cld
mov
mov
orb
jbe
jp
mov
sbb
cli
inc
push
sub
pop
pop
rorl
push
sbb
adcb
inc
imul
ss
sub
aas
mov
cli
xor
ret
fcompl
mov
dec
adc
add
loopne
in
call
or
add
add
test
jbe
js
rcrb
in
aaa
add
movsl
test
adc
sarl
jmp
push
adc
sti
je
add
cld
inc
nop
inc
hlt
mov
pop
outsl
pop
cmpb
jne
xlat
mov
jo
add
push
lea
or
lahf
repnz
sti
jmp
adcb
in
add
jecxz
pop
mov
push
jge
call
ljmp
cmc
pop
in
push
aam
sbb
xchg
xchg
lcall
sub
cmp
enter
adc
ljmp
pop
mov
push
mov
ret
push
in
call
shlb
inc
std
movsl
and
xchg
lea
negb
jg
dec
jne
mov
sahf
je
or
mov
jge
add
or
ss
pusha
cmpl
push
fdivs
sub
adc
pop
jp
inc
push
leave
mov
fldenv
dec
loopne
ret
test
xchg
pop
psubsw
mov
adc
mov
ret
aaa
cs
mov
mov
enter
arpl
repnz
out
addr16
xlat
in
sbb
scas
popa
lret
sbbb
out
repnz
mull
aad
popf
jmp
sbb
nop
mov
in
in
or
xor
in
jne
dec
add
popa
clc
cmp
jne
push
mov
dec
jb
lret
test
arpl
pop
mov
pop
icebp
out
jns
add
cltd
pop
call
aam
xorl
push
jne
push
and
push
adc
push
xor
mov
pop
add
dec
pop
incl
and
pusha
push
jecxz
push
xchg
pop
jo
scas
fimuls
and
mov
daa
aad
mov
push
popf
nop
and
pop
fidivs
imull
mov
push
xchg
jge
mov
push
popa
xchg
aam
lahf
mov
xchg
into
jnp
adc
inc
dec
jne
push
adc
cs
mov
in
mov
mov
ja
xor
xchg
sahf
pushf
and
int3
or
in
mov
or
or
jbe
or
or
sbb
push
pop
add
or
or
ds
popa
xchg
or
or
push
pop
repz
mov
jns
or
movsb
dec
loope
dec
jns
mov
sbb
pop
push
inc
and
xchg
icebp
icebp
mov
mov
inc
in
adc
mov
push
out
stc
dec
push
pushw
and
mov
pop
aam
mov
or
dec
mov
into
sbb
xor
push
push
jecxz
or
add
mov
outsb
pop
pop
xor
leave
fcmovnbe
push
inc
mov
add
jmp
mov
cmpb
out
aad
push
mov
mov
sbb
add
rorl
mov
mov
repz
jge
pop
sub
mov
cmp
push
and
adc
pop
inc
movzbl
dec
outsb
mov
js
pusha
call
add
mov
sbb
bound
je
or
je
jmp
nop
cltd
xchg
push
outsl
mov
fdiv
fwait
and
push
sarb
sub
push
test
add
sbb
hlt
add
pop
in
xor
mov
pushl
cmp
or
mov
rolb
mov
test
sub
push
mov
jmp
or
or
or
xchg
orl
or
adc
sub
push
and
inc
call
fs
pop
adc
pushf
push
mov
jbe
lea
mov
lret
hlt
out
popf
cmp
mov
jmp
push
into
mov
or
cmpl
inc
cmp
rcrl
push
add
add
push
jl
cmp
xor
add
hlt
loope
inc
lea
jge
adc
xchg
imul
and
dec
es
scas
sbb
xchg
lea
push
test
jne
adc
or
out
sub
cwtl
push
jmp
push
mov
adc
andl
lods
or
cs
test
repnz
mov
cmpb
mov
inc
addl
inc
or
gs
jmp
or
aad
rorl
jge
pop
dec
subb
je
lds
sbb
dec
and
rcll
push
fmul
push
ret
sbb
push
jmp
sbb
push
cmc
cmp
fidivl
adc
xchg
sbb
andb
daa
mov
mov
dec
in
xor
dec
add
dec
adc
in
add
or
jns
clc
pop
test
xorb
movntps
inc
ret
ja
or
mov
sbb
outsb
lea
popa
shll
mov
aaa
stos
or
fcoml
xor
cmpsl
pop
je
xchg
pusha
add
cmp
cld
and
pop
xchg
mov
cmp
adc
jbe
dec
es
pop
pop
sbb
cltd
xor
add
loopne
xor
xchg
dec
inc
hlt
loopne
pop
jbe
mov
imul
sarb
add
sub
pop
pop
jmp
jb
lret
stos
jno
adc
cmpsb
mov
fisttpll
pop
pop
sbb
xor
rolb
push
in
testl
cli
adc
rol
and
cmp
inc
dec
adc
shrl
or
sub
jp
add
mov
rol
and
sub
in
xor
test
mov
pushf
mov
or
jg
fwait
pop
xchg
adc
push
cmp
add
adc
incl
pop
lahf
call
mov
mov
jmp
sub
je
inc
pop
or
dec
je
sub
sub
je
adc
es
mov
jmp
push
push
push
and
push
inc
mov
data16
clc
jle
fadd
addr16
dec
scas
push
cmpb
jl
or
cli
das
mov
cmp
jl
pop
pop
adc
inc
or
push
mov
out
xlat
inc
xor
mov
mov
inc
push
sub
enter
pop
scas
mov
mov
or
jno
push
or
jne
push
inc
out
nop
and
xchg
sar
add
jne
cmp
jg
xlat
mov
and
cltd
xor
sub
add
add
aas
hlt
cmovae
imul
add
js
add
adc
pop
cld
jmp
in
cld
gs
fbstp
fadds
fimuls
push
xor
stos
mov
sbb
inc
out
in
andb
test
push
jle
pusha
xchg
lahf
xchg
insb
mov
ljmp
sarl
xor
loopne
jne
fistl
data16
or
mov
sbb
outsl
jl
cwtl
add
rclb
in
sbb
stos
xorb
mov
sub
lods
push
and
lods
xchg
adc
jle
int
mov
outsb
and
pop
repnz
sub
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sarb
cmp
push
lods
lock
test
or
call
cmp
outsl
es
in
jmp
aaa
repnz
xor
int
sbb
jmp
sbb
jge
push
decb
sbbl
add
fildll
cs
add
fsubs
push
fldcw
xchg
imul
fmull
cmp
mov
cmp
jle
and
fs
jne
ret
mov
testb
or
mov
adc
ja,pt
adc
pop
gs
add
leave
mov
hlt
test
aaa
loopne
fwait
imul
and
jmp
adc
mov
fcmovu
jne
sarl
add
pop
push
mov
mov
mov
das
fbstp
fcomps
fsubrs
xor
xchg
repnz
out
and
pop
dec
xchg
testl
xchg
cwtl
mov
adc
jno
gs
vpmacsdql
add
add
add
test
or
push
dec
mov
loope
fstl
mov
lods
mov
and
jmp
push
cwtl
cmp
xorl
ljmp
lds
mov
pop
xor
mov
inc
inc
add
sbb
or
pop
test
nop
lret
sub
pusha
pcmpgtb
add
pop
inc
stc
in
inc
push
or
push
mov
sbb
mov
sbb
test
test
xor
and
pop
xor
or
jne,pt
fmull
xchg
add
add
mov
or
popf
loopne
lock
push
pop
sub
sub
pop
xor
push
out
shrb
stc
xchg
push
adc
mov
pusha
and
xchg
into
jge
xchg
fwait
hlt
add
xchg
lcall
testb
and
add
mov
rcrb
out
std
gs
cltd
mov
mov
sbb
mov
cmp
ret
jne
les
fisubs
popf
lcall
sbb
cmpsl
jb
sbb
fwait
jmp
sbb
xor
test
xchg
add
dec
push
pop
jp
dec
push
push
xor
nop
jmp
fdivr
aas
add
push
mov
sub
jb
or
and
or
xchg
and
es
out
mov
leave
int
lea
popf
push
clc
mov
or
add
add
je
jp
pop
adc
icebp
xor
xor
dec
jl
lret
push
lahf
push
xor
mov
add
movsl
push
stc
scas
call
sbb
lods
xor
movsl
sahf
rol
roll
loope
mov
or
lcall
push
js
repnz
mov
test
sbb
jecxz
icebp
mov
push
mov
mov
std
addr16
rorl
inc
inc
dec
push
lahf
push
mov
lock
cmp
inc
mov
add
sahf
mov
roll
or
out
push
pop
push
xchg
push
in
std
movsb
adc
jle
xor
out
xchg
add
loopne
or
or
arpl
fdivl
push
adc
xor
pop
xor
add
push
bound
je
jp
mov
add
push
push
mov
or
xchg
mov
mov
sub
sub
inc
daa
cmpb
pop
mov
ss
mov
je
aad
push
or
scas
out
in
mov
mov
push
cmpsl
mov
clc
es
popa
pusha
fadds
sti
fidivrl
add
mov
std
addl
in
jno
das
push
mov
xlat
pop
repnz
sbb
jne
push
push
or
rcrb
sub
mov
push
ja
jne
mov
movsb
and
dec
xor
repz
daa
test
addb
sub
out
mov
jmp
decb
sub
je
sub
je
scas
lea
push
ret
les
andl
cs
sbb
dec
lea
sarl
lock
fcomi
lods
add
jg
mov
inc
pop
ljmp
sbb
mov
jle
and
add
inc
sahf
dec
adc
ret
add
push
mov
les
je
push
jns
add
push
test
in
dec
aas
xchg
dec
in
jle
out
cmpsb
dec
add
push
xor
adc
dec
xor
jbe
ja
push
addr16
jo
add
add
sub
and
xor
sub
push
sar
cmp
dec
add
cld
mov
sbb
fcompl
pop
jne
sub
add
in
mov
shrb
mov
ficoms
xor
mov
or
mov
xor
dec
jle
mov
xor
jl
rolb
out
pop
arpl
pusha
popa
or
js
hlt
mov
sub
clc
scas
lock
lods
movsl
adc
loop
and
add
mov
outsl
or
pop
pop
cmpb
je
jae
or
push
mov
add
cmp
enter
xchg
add
faddp
sti
pop
mov
movb
lods
movsl
adc
hlt
push
mov
shlb
mov
aas
push
cmpsl
pop
push
enter
add
mov
xchg
lea
inc
sub
es
jge
or
call
sub
pop
dec
mov
cmp
rcrb
pushf
sbb
pusha
sahf
inc
push
mov
inc
rcr
adc
js
mov
mov
and
or
testl
push
cmp
shll
push
mov
inc
lds
pop
andb
cs
mov
ret
sahf
ret
pop
jne
inc
add
cld
test
push
push
mov
sub
push
dec
insl
xchg
xorl
add
icebp
dec
or
jge
push
les
push
les
mov
add
popa
sti
mov
rorl
jecxz
push
cmp
enter
jnp
mov
out
fiaddl
and
xchg
xchg
das
mov
sub
pop
inc
adc
pop
dec
cmpb
add
jmp
pusha
mov
or
dec
push
adc
or
jp
jg
mov
fnclex
clc
das
xchg
sbb
sbb
cmp
pop
cmp
sbb
cmp
jbe
int3
jno
cmp
movb
shrb
or
mov
loopne
fidivrl
loopne
or
sti
stos
add
sar
lret
push
adc
ljmp
or
adc
dec
lock
movsl
push
xchg
and
cltd
ret
inc
or
aad
mov
or
pop
adc
mov
pop
aaa
loopne
inc
add
cld
loope
in
mov
adc
leave
popa
and
pop
add
xchg
adc
cmp
cmpsb
adc
mov
or
fmull
int
hlt
clc
push
in
push
loopne
push
dec
loopne
aam
xor
test
insb
js
push
lock
or
mov
bound
and
dec
jo
ja
test
adc
clc
aas
xor
jb
into
xor
jl
imul
dec
scas
nop
add
push
adc
stos
mov
push
add
daa
aas
xor
inc
xor
lcall
and
add
push
imul
sbbb
inc
in
xor
rolb
jb
pop
mov
mov
or
fists
fwait
mov
lret
cmpl
inc
mov
inc
in
inc
sbb
popa
push
dec
add
in
or
data16
adc
mov
xor
or
loopne
int3
xchg
mov
cltd
fs
or
pop
insb
lar
mov
subl
adc
jae
or
int
enter
mov
xor
addl
pop
out
cmp
pop
pushf
or
jns
stc
push
cmp
pop
xor
lret
and
xchg
lock
mov
mov
pushf
jb
cmp
ja
xor
aad
fsubrs
sub
dec
ja
mov
fwait
or
sub
adc
dec
push
or
xorl
mov
loop
push
addr16
clc
xor
pop
cmp
jl
cmpsb
pop
push
xlat
lock
jl
cmp
pop
xchg
jb
addb
pop
or
mov
stc
lea
clc
dec
lahf
push
cmp
push
mov
and
mov
enter
clc
jne
es
movsl
push
push
test
rclb
iret
lret
js
add
xchg
stc
insl
mov
cwtl
adc
scas
fnstsw
test
add
mov
sbb
mov
jnp
sbb
pop
add
or
cmp
xchg
xchg
adc
inc
aaa
or
sbb
add
js
and
pushf
test
mov
inc
pushf
lcall
jae
daa
add
mov
or
repnz
enter
nop
sbb
mov
repnz
mov
out
push
dec
push
adc
cmp
loopne
mov
jbe
in
push
fidivrs
add
jne
cmp
dec
inc
or
and
add
mov
xlat
cld
fmull
inc
mov
xor
int
jne
pop
pushf
xor
pop
jae
inc
lock
aad
lods
or
mov
push
push
into
jle
push
movsb
push
popf
mov
or
popa
cmpb
xchg
fdivrl
test
fstl
cmc
cld
add
fstpl
shlb
cmp
sarb
or
dec
mov
dec
jmp
dec
mov
sti
or
xor
jmp
fs
and
jmp
add
jns
dec
or
inc
xchg
add
add
adc
out
xchg
add
loopne
test
inc
dec
pushf
push
je
sbb
loopne
add
xor
cmp
daa
lods
mov
add
insl
pop
jno
jle
adc
rol
mov
scas
push
xor
aad
in
add
xchg
imul
xor
cmp
jl
dec
inc
fdivrs
fimull
sub
inc
dec
jge
inc
push
leave
dec
scas
pushf
cltd
nop
adc
adc
jg
and
shlb
mov
cmp
jge
outsb
repz
jl
jne
sbb
push
jns
mov
sbb
lock
fmull
or
xchg
aaa
in
mov
and
cs
mov
cli
mov
dec
cmp
test
testl
jae
mov
mov
inc
ss
mov
push
addr16
ret
iret
es
jge
imul
cmp
fidivl
ret
ljmp
fsubrs
jecxz
fcomp
sub
mov
sbbl
icebp
adc
mov
xor
movsl
lcall
data16
popa
ret
int3
and
movsb
push
loop
shlb
enter
mov
xor
adc
add
test
push
xchg
in
setne
mov
shl
ds
fiaddl
mov
lock
es
push
mov
sub
loopne
sbb
stos
es
dec
call
jecxz
test
add
in
xchg
andl
xchg
inc
and
js
test
loop
pusha
xlat
sub
pop
inc
pop
out
and
sti
adc
add
add
push
cmpsb
or
sub
addr16
aaa
shll
mov
mov
and
xchg
les
lds
cmpsl
push
xlat
sub
xor
pop
and
cmp
outsb
sbb
dec
adc
inc
push
call
and
mov
add
cltd
mov
pop
sub
loope
push
add
adc
je
test
add
adc
dec
jne
sbb
stc
inc
loopne
out
push
je
cmpsl
rolb
push
clc
shlb
sarb
xor
pop
xchg
aam
inc
pop
stos
mov
fnstsw
pop
adc
les
dec
jge
out
daa
mov
cmp
mov
fwait
mov
or
push
mov
sub
jb
inc
mov
lods
repnz
push
mov
jne
dec
loopne
jne
test
pop
or
jmp
mov
mov
mov
shlb
or
aam
lock
inc
fs
das
movl
inc
add
pop
out
daa
adc
movsb
mov
enter
jo
mov
mov
mov
mov
mov
sti
sub
push
dec
dec
add
test
cmp
add
ja
sahf
jmp
cmp
push
add
mov
mov
dec
and
popa
mov
push
xchg
pusha
mov
inc
inc
cmp
sbb
dec
mov
xchg
call
add
sbb
cmpl
mov
mov
or
test
lret
jmp
pop
mov
in
mov
shlb
xor
push
js
add
xchg
cld
sarl
xor
stc
push
and
das
mov
jl
movsb
jecxz
daa
sub
pop
mov
dec
xor
mov
or
mov
inc
pop
add
rolb
inc
sub
add
xchg
sbb
fmuls
mov
mov
fdivrl
inc
mov
push
adcl
sbb
test
mov
sbb
and
adc
sub
fisubl
mov
pop
jo
enter
aam
fdivrs
ds
mov
jle
fwait
in
mov
xchg
int3
inc
dec
push
nop
dec
xchg
sub
mov
or
push
hlt
enter
mov
and
add
mov
lods
sbb
repnz
dec
xor
aas
inc
rolb
rol
mov
sub
sbb
push
fcomps
push
hlt
mov
push
cmc
xor
xor
dec
add
pmaxsw
mov
xor
jno
in
jg
jle
test
fs
pop
lock
in
dec
scas
insl
add
fs
cmpsl
data16
pop
jo
ljmp
push
cmp
cltd
pop
sbb
and
cmp
pop
push
cmp
clc
push
cmp
ss
cltd
dec
aas
out
in
pop
jecxz
cmp
test
push
call
popf
adc
jmp
test
call
inc
cld
gs
xor
mov
add
sarb
and
sub
loopne
out
testb
xchg
mov
jo
jne
push
pop
mov
push
jmp
mov
imul
hlt
mov
or
fwait
or
cwtl
ficoml
inc
and
rorb
ljmp
dec
pusha
insl
loopne
bound
add
clc
sbb
xor
in
jl
daa
pop
push
sbb
hlt
push
aam
and
push
or
sbb
int
mov
pop
or
inc
clc
and
pop
adc
jb
gs
jo
mov
js
inc
xchg
lock
inc
inc
loope
and
xchg
or
mov
inc
or
daa
lock
je
add
add
or
inc
lahf
cs
add
and
jecxz
cltd
in
fnstsw
add
jne
mov
in
ret
loop
and
xor
pop
lds
clc
sbb
fsubs
push
mov
enter
add
inc
jmp
loope
mov
ss
xchg
mov
mov
test
inc
add
mov
filds
push
adc
push
inc
out
jb
gs
cmp
test
inc
or
cmpsl
push
mov
lea
rcll
addr16
xor
add
push
sahf
and
inc
and
pop
fdivrs
xor
roll
cs
and
insb
xchg
mov
add
fbld
je
adcl
xchg
test
push
sbb
push
jecxz
rorb
cmp
inc
jb
incl
sub
mov
xchg
mov
adc
sbb
test
xchg
psubusw
dec
jl
lock
loop
mov
lret
pop
mov
stc
adc
int3
dec
andl
mov
pop
aas
inc
push
push
lock
push
or
in
dec
cs
sbb
inc
pop
jmp
outsl
call
mov
clc
cmp
test
mov
ss
or
or
cmpl
les
sarb
mov
jmp
adc
fwait
cmc
xchg
push
repnz
xor
inc
jne
mov
in
pop
mov
sub
in
xchg
ret
incl
pop
add
mov
or
daa
or
and
dec
sbb
jnp
xchg
lock
fiaddl
inc
stc
ret
mov
or
or
ja
nop
pop
andb
mov
inc
or
jg
int3
pop
add
inc
cmp
push
jbe
xchg
mov
inc
jecxz
rcll
stos
xchg
mov
daa
mov
mov
int
jg
dec
or
dec
xor
dec
in
inc
or
inc
xor
ror
cmp
pop
hlt
jmp
lods
adc
loope
in
repnz
mov
xchg
mov
bound
outsb
dec
mov
or
movb
mov
sbbl
adc
ja
pop
push
dec
cmp
dec
and
clc
test
fdivrl
mov
fdivs
fcomps
jne
cmp
jne
add
cmpsl
push
xchg
pop
ret
pop
add
push
insb
xor
mov
aaa
or
add
rolb
dec
cwtl
push
or
lea
pop
or
inc
sbb
dec
repz
dec
mov
rcrb
jo
or
add
jmp
cmp
xchg
push
rorb
in
push
fs
jns
in
inc
fdivl
aam
in
idivl
xor
push
je
repz
mov
lods
push
shlb
pushf
mov
fisubrs
mov
lods
pop
test
mov
cmp
jns
je
pop
insb
shlb
repz
push
dec
cs
mov
incb
or
xor
loopne
imull
sub
push
mov
int3
pop
ss
test
add
loopne
sbb
push
mov
adc
push
das
or
pop
or
das
ficomps
mov
xchg
ljmp
clc
cld
inc
hlt
ja
outsb
add
lock
in
push
mov
stos
rolb
dec
fsubrp
mov
loopne
push
sahf
sub
push
sarb
mov
pushf
les
mov
pop
fcomps
lock
out
outsb
iret
mov
xlat
mov
pop
lods
sbb
sbb
fbld
fucomip
mov
pushf
push
inc
mov
push
filds
push
pop
nop
push
mov
dec
pop
mov
mov
out
notb
pusha
push
sub
faddl
es
popa
rol
inc
cmp
cwtl
pop
mov
enter
or
iret
add
and
sub
nop
dec
in
mov
xchg
mov
enter
adc
lods
mov
in
cmp
test
movsb
dec
mov
jge
orb
add
in
inc
mov
or
sub
xorb
enter
xchg
mov
jl
nop
rolb
mov
nop
sbb
add
pop
mov
jae
mov
cmpb
ljmp
xchg
pop
call
test
mov
jp
jo
xor
lock
adc
pushf
mov
loop
out
cmp
outsb
not
outsl
push
int3
pop
fisttps
cmpl
sub
pop
mov
pop
data16
pusha
and
aaa
dec
cmp
adc
mov
lret
pop
dec
inc
pop
or
inc
mov
cwtl
das
pop
pop
inc
ficoml
and
inc
inc
or
mov
loop
sbb
test
xchg
mov
push
mov
ret
nop
mov
popf
xor
pop
fadds
leave
addl
mov
shll
flds
sbb
fldcw
test
test
dec
add
imul
arpl
sub
push
adc
jg
jae
jecxz
jge
add
sbb
je
mov
arpl
inc
mov
xchg
cwtl
xchg
xor
add
xchg
adc
xor
sbb
add
push
fdivl
adc
stc
push
adc
cmp
add
add
xchg
fsubl
push
leave
or
fistl
mov
leave
pop
std
dec
fdivl
inc
lea
jae
sbb
inc
repnz
jg
stos
xchg
into
shlb
mov
or
mov
jns
mov
mov
sub
fildll
mov
shld
ret
push
out
push
push
jmp
dec
push
mov
mov
lret
movsb
pop
mov
fs
dec
je
movsb
clc
xchg
fisubrs
mov
xor
and
mov
mov
and
shlb
xchg
dec
xor
cmp
inc
int3
cs
push
mov
cwtl
cmp
xchg
push
push
aam
fsubs
push
cs
fdivs
fsubrl
xchg
push
faddl
cs
cmp
in
mov
call
das
xchg
push
movsb
shl
fildl
xchg
and
je
xorl
push
adc
cmp
dec
add
pop
mov
inc
fs
jne
dec
loopne
add
fisttpll
cmovns
outsl
dec
inc
outsb
sti
jnp
dec
jb
pop
outsl
jb
inc
insl
jo
xor
jb
insl
and
fstl
sub
push
cmp
out
xor
insb
and
push
imul
inc
jae
pop
dec
add
push
roll
add
or
cwtl
cmp
clc
and
pop
xor
insb
mov
mov
test
and
jecxz
subb
cmp
mov
inc
fisttps
or
loop
idiv
fildll
insb
add
push
cld
push
xor
mov
dec
clc
push
insb
add
movsb
cmp
push
lods
sub
pop
pusha
push
inc
aas
push
in
fsubs
cld
push
adc
dec
dec
inc
or
nop
adc
dec
pop
xor
lea
sbb
pop
jae
and
xchg
add
ds
js
dec
pusha
jnp
inc
push
inc
mov
inc
add
push
addr16
or
pop
in
adc
mov
sub
xchg
ds
add
fildl
pop
ret
adc
addr16
sbb
mov
je
divl
adc
jl
add
mov
cs
xchg
fs
loopne
sbbb
sbb
sbb
outsl
repnz
add
outsl
dec
jecxz
pusha
mov
ds
or
loopne
iret
inc
jb
sbb
mov
add
cmp
adc
jo
adc
push
adc
ds
xor
mov
pushf
and
divb
adc
loopne
loopne
and
mov
dec
jo
aas
nop
pop
outsl
arpl
out
xor
mov
fmuls
cld
mov
nop
out
dec
in
adc
outsb
xor
add
in
in
pusha
in
fcmovne
mov
ds
or
call
mov
mov
sbbb
lock
mov
cmp
daa
fbstp
out
enter
cmp
adc
mov
push
and
in
lahf
add
shl
cmp
daa
inc
and
in
nop
pop
enter
sub
mov
test
push
push
add
cmp
test
sbb
cwtl
inc
sbb
scas
test
cs
add
in
fistps
jg
cmc
sub
dec
je
sbb
mov
gs
add
fs
dec
std
add
aam
repnz
ss
adc
inc
mov
mov
testl
pop
clc
mov
cmpsb
stos
clc
lret
pop
dec
hlt
mov
imul
sbb
dec
lock
in
enter
nop
lahf
in
fs
jae
scas
call
enter
add
xor
push
jnp
jae
rcrb
out
xor
push
mov
mov
int3
or
add
push
and
les
sbb
sub
fcoml
enter
add
sarb
or
add
loopne
or
faddp
mov
into
ret
xlat
sub
add
pop
sub
jmp
sub
or
into
xor
aad
jmp
adc
jb
das
and
scas
or
adc
xchg
in
xchg
xor
adc
cmpsl
push
xchg
jp
test
cli
pop
filds
cmp
add
add
vunpcklps
cmpb
add
lahf
ret
popa
je
sahf
add
jecxz
iret
push
xchg
pop
push
push
repnz
ss
insb
jnp
mov
add
ljmp
pop
dec
adc
mov
lret
subb
mov
hlt
loop
mov
sub
outsl
mov
call
add
test
or
inc
add
sub
mov
add
andb
sub
nop
fstpt
push
psadbw
and
les
inc
sbb
je
dec
and
outsl
negb
fcoml
and
fimuls
mov
lock
pop
inc
imul
lea
push
or
dec
or
lea
push
jno
popf
pop
mov
lea
filds
inc
sub
inc
pop
mov
inc
sahf
jmp
inc
addb
mov
adc
dec
repz
dec
testl
pop
test
test
out
sbb
faddl
cmp
fsts
push
jne
pop
and
mov
push
sub
pop
movsb
call
xorb
push
aas
jmp
cli
add
mov
mov
lret
jmp
sub
or
adc
xor
div
and
mov
jmp
inc
notb
cs
fnstenv
or
pop
pop
cmpsb
mov
sub
add
pop
ret
aas
leave
test
fdiv
faddl
fimull
mov
mov
or
jmp
sbb
add
adc
fmuls
cmp
test
adc
fsubr
and
lock
pop
das
fisttpl
test
inc
mov
aam
aas
fdivrl
or
adc
and
mov
enter
xchg
call
icebp
pop
mov
dec
call
dec
call
push
and
in
add
jp
push
xlat
inc
sub
adc
add
daa
sub
mov
push
lds
cmp
push
push
jne
jns
cmp
jb
inc
scas
or
push
add
je
dec
adc
cmp
aas
dec
in
xor
adc
loope
inc
add
fstl
sub
add
xor
inc
sbb
call
sub
mov
paddd
cmp
je
pop
jne
or
imul
pop
mov
inc
add
or
or
inc
iret
hlt
cltd
fistpll
xlat
in
fiadds
popf
or
in
call
cwtl
inc
mov
cmc
mov
shlb
pop
iret
outsl
pop
lahf
xchg
add
xlat
inc
arpl
sarl
mov
add
xchg
test
cmp
or
aam
in
dec
je
and
inc
mov
add
adc
in
fldl
clc
mov
pop
popf
cmp
jmp
inc
lock
sbb
aam
and
add
frstor
fs
xchg
mov
call
and
bnd
pop
lock
push
mov
or
fadds
pop
mov
cmp
mov
xchg
xchg
lds
int3
pop
movsl
aaa
dec
aas
or
xchg
cmp
out
xchg
pop
add
xchg
ljmp
shl
ss
test
or
shlb
sbbb
mov
adc
jecxz
mov
xchg
sbb
pop
dec
loopne
sbb
loopne
add
pop
add
enter
cmpb
jne
push
push
fiaddl
add
jne
or
jb
pop
sbb
test
ret
mov
push
or
or
pusha
mov
iret
pop
test
mov
clc
adc
pop
inc
sbb
mov
cmp
ja
adc
dec
mov
xor
out
icebp
or
sub
out
imul
cmc
jle
push
push
cmp
pop
pop
es
sbb
aaa
push
pop
inc
movsb
push
xor
out
cmpb
addb
add
pop
sbb
xor
sbb
ret
fimull
fimuls
movswl
xorl
ss
sub
xor
add
xor
test
xchg
pop
push
inc
lock
mov
or
or
loopne
sti
cmp
pusha
add
sub
inc
imul
jg
movsb
jne
orl
data16
xor
and
andb
movsbl
fcoms
mov
fcom
pop
inc
mov
mov
cmp
stos
jp
jno
adc
int3
and
push
mov
out
pop
adc
daa
loope
push
enter
add
ljmp
je
jbe
loop
jmp
cmp
cmp
sbb
mov
je
mov
repnz
adc
add
int
mov
pop
sub
dec
xchg
ds
stos
leave
call
cmpsb
cmp
xor
push
xor
mov
mov
rol
inc
add
xchg
mov
cwtl
aaa
mov
xchg
mov
frstor
sub
fs
xchg
sub
cmp
mov
xlat
cmp
jecxz
shr
mov
adc
add
test
inc
out
jo
popf
test
fldl
mov
enter
mov
sbb
push
pushf
xor
stos
cwtl
ss
push
loopne
in
dec
mov
or
nop
inc
sub
or
jecxz
mov
sbb
clc
push
fs
push
test
push
or
or
test
insb
xor
and
inc
and
fsqrt
clc
push
mov
or
push
lods
shr
push
test
adc
cmp
add
jmp
add
dec
push
adc
andl
mov
loopne
cmpsb
and
dec
and
frstor
jo
pop
cli
jne
dec
sbb
push
mov
mov
sbb
push
cli
add
pandn
mov
cmp
push
lods
rolb
xor
push
cmp
cmp
pop
insl
mov
adc
out
sahf
cmpsl
sub
mov
ja
nop
mov
pop
les
mov
adc
sub
dec
dec
js
inc
fistps
push
and
cmp
dec
adc
cmp
xor
inc
cmp
dec
cmp
inc
adc
cmp
adc
test
pop
in
pop
imul
or
fsubl
roll
and
xchg
popa
inc
pusha
xor
loopne
pop
mov
pop
jne
lock
int
int
call
fwait
ja
and
cld
mov
enter
enter
add
jmp
in
incb
cmp
mov
std
inc
or
mov
pop
pop
sub
jg
and
pushf
and
les
shlb
xchg
lea
cs
mov
mov
imul
mov
mov
pusha
ret
popa
pusha
cmp
mov
dec
mov
and
test
test
ficoml
cmp
mov
dec
dec
out
add
xor
and
mov
add
dec
mov
sahf
xor
xchg
and
in
jb
and
push
in
pusha
jmp
call
clc
mov
cwtl
mov
ss
cmp
addr16
and
subl
dec
pushl
testl
das
mov
and
bnd
stos
inc
xor
data16
add
mov
mov
cmp
push
or
add
inc
xchg
in
push
mov
stc
ret
sbb
dec
movsl
movlps
xlat
pop
mov
xchg
fstpl
fwait
sub
pop
inc
mov
fistpll
sub
stc
out
adcl
mov
add
push
push
jg
adc
mov
cmp
jb
rcr
cli
clc
lret
dec
sub
lock
pushf
add
out
aaa
inc
insl
jo
jns
dec
jne
add
sub
pop
xor
or
push
mov
and
mov
stos
jle
insl
cmp
add
inc
outsl
jne
or
decl
inc
jne
jb
outsb
arpl
pop
or
add
pusha
and
adc
rcl
or
xchg
xor
fwait
pop
xor
mov
push
outsb
imul
aas
inc
arpl
ss
xor
push
xorl
xchg
pop
dec
pop
inc
jbe
adc
aaa
call
push
add
sahf
dec
test
jmp
adc
mov
cli
ja
sti
and
es
test
es
dec
data16
pop
repz
inc
sti
rcrl
les
push
lods
dec
cmp
lea
sbb
jl
cmp
or
xorb
ret
xor
loopne
sbb
mov
cmp
popa
xlat
push
mov
hlt
pop
dec
pusha
add
imul
xchg
push
nop
xchg
outsl
and
enter
and
mov
in
jns
dec
xchg
xor
outsb
jns
das
popa
sbb
test
outsl
rcl
bound
gs
push
push
dec
and
pop
jo
pop
jle
sahf
repz
lea
sahf
aam
push
xor
sbb
loopne
jne
push
ljmp
push
movsb
addr16
push
push
insb
jnp
pop
aas
test
dec
xorl
pop
mov
cwtl
cmp
negl
jne
pop
add
jo
jb
push
mov
sub
sbb
icebp
jle
popa
push
orl
adc
push
dec
push
jl
adc
jmp
lds
clc
jp
insl
jge
cmpsb
les
cmp
je
pop
adc
bound
xchg
or
dec
das
pop
pop
push
jb
fadds
mov
cmp
inc
call
lea
add
add
sets
push
dec
push
mov
lock
push
mov
call
cli
adc
dec
jo
mov
xchg
push
pusha
xor
fstpl
cs
iret
add
xor
js
lock
je
adc
push
mov
push
adc
repz
add
mov
push
and
sbb
fsubs
or
call
push
push
stos
push
das
shrd
add
inc
adc
mov
xor
psubusw
test
testb
enter
pop
and
dec
mov
scas
push
addl
cmp
or
add
jb
or
jbe
dec
pusha
sbb
or
cld
inc
pop
mov
jns
xchg
sti
cmp
out
divb
xchg
cmp
setg
inc
mov
lods
movsl
sahf
and
fnstenv
loope
pop
jbe
sbb
xchg
sbb
add
lock
andb
cmp
daa
or
adcb
cld
pop
je
xchg
jl
inc
xor
inc
sbb
ljmp
or
xchg
leave
lahf
sbb
and
mov
mov
lea
pop
js,pn
subl
dec
jne
movl
or
xor
mov
xor
pop
ficoml
cmpsl
add
mov
scas
pop
mov
push
jb
pop
lock
pusha
mov
xchg
mov
loop
xchg
fs
out
xor
cld
sbb
mov
and
mov
pop
or
jne
stos
test
repz
mov
outsl
loopne
mov
mov
or
mov
push
jl
iret
aam
and
inc
sbb
call
repz
mov
xor
cld
xor
mov
loopne
push
pusha
sub
and
jmp
in
lods
shrd
in
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwtl
cltd
lcall
popf
sahf
lahf
in
in
addb
in
test
or
xchg
les
mov
cmp
mov
add
dec
pop
jbe
add
pop
xor
sub
mov
rolb
adc
ljmp
sbb
decl
adc
sbb
test
jne
sbb
data16
push
cs
dec
xor
cmp
jle
loope
dec
popa
sub
cmpb
testl
les
aaa
stos
fcomp
cmp
jge
loopne
cmp
inc
pop
scas
cmpsl
mov
sub
lods
imul
out
add
jl
test
pop
inc
gs
push
or
testb
mov
lock
pop
xor
fbld
sbb
mov
add
or
push
or
out
test
insb
cmp
je
mov
dec
js
and
xor
mov
loopne
mov
jle
in
je
jmp
cmp
or
test
out
jne
scas
xor
cmp
aas
pop
je
scas
add
outsl
outsl
push
lar
decb
ja
fwait
add
sti
adc
sbb
add
mov
aam
add
jb
cld
push
add
add
jae
es
add
mov
fimull
pop
jle
xchg
call
into
sti
adc
aaa
mov
in
ds
call
push
adc
mov
mov
shll
ja
jb
xor
xor
push
add
out
lret
xchg
das
lock
mov
or
xor
sahf
push
fdivs
jnp
jle
adc
add
call
dec
push
out
jne
xlat
or
xchg
outsl
decl
mov
lods
cmp
lcall
and
inc
and
xlat
pop
loope
xorb
adc
adc
test
outsb
adcl
push
push
add
clc
sub
xor
push
bswap
je
js
or
cs
or
jbe
popa
xlat
push
add
psubusb
mov
sbb
stc
add
out
cwtl
adc
adc
inc
add
jno
sbb
lods
rorb
mov
add
add
or
pushf
inc
movl
pusha
adc
cmp
lods
hlt
and
inc
fwait
test
decl
fadds
jecxz
test
inc
xor
cmp
lret
idiv
and
add
xchg
add
mov
xchg
in
lds
cmp
push
mov
mov
xor
iret
lods
pop
add
test
dec
or
outsb
push
cmp
ja
mov
adc
scas
cmp
test
out
and
jnp
cmp
and
or
inc
mov
xchg
repz
mov
push
fistl
or
sbb
fldl
add
inc
add
cmp
or
cmp
or
mov
andb
pop
lret
add
sub
pop
inc
jo
sarl
jecxz
test
out
and
fadds
in
add
out
sub
and
or
mov
push
out
sub
fst
scas
test
dec
push
mov
and
jg
mov
sub
inc
imul
loopne
sahf
jge
mov
inc
shr
pop
jmp
sbb
sub
fucomp
push
and
int
inc
sbb
inc
mov
in
loopne
jp
aam
mov
jp
shll
shlb
pushl
pushl
jge
add
call
js
mov
add
adc
pop
add
out
loopne
fdivl
mov
ja
jae
jne
mov
cmc
pop
adc
sbb
jecxz
clc
dec
or
dec
add
jmp
icebp
jbe
fnstcw
mov
aam
js
cmp
lret
sub
jbe
mov
inc
fwait
or
sahf
adc
jo
loope
rcrb
pop
scas
das
jno
stos
pop
adc
pop
mov
mov
test
fbstp
push
xor
jb
popa
mov
pop
pop
cs
cwtl
adc
pop
in
inc
test
add
push
inc
imul
test
data16
cs
data16
outsl
push
sarl
ja
sbb
sbb
adc
pusha
pop
mov
outsb
sbb
scas
rorb
les
jns
movsb
add
pop
inc
insb
popa
aam
sbb
xchg
sahf
movsl
mov
roll
shrb
push
push
mov
mov
inc
je
insb
or
cmpsl
or
dec
imul
inc
adc
out
nop
insb
test
or
clc
rcrl
test
or
dec
sarb
xorl
gs
add
icebp
sbb
or
or
cmp
or
dec
gs
xor
jae
sub
cmpsl
outsb
fldl
je
aaa
int3
xchg
loope
cs
aaa
jnp
lret
jb
jns
jbe
push
mov
xchg
packssdw
push
fs
adc
add
mov
mov
shlb
sbb
daa
cmpsb
push
icebp
adc
sub
dec
and
mov
mov
pop
lods
pop
jl
jl
mov
push
xor
lods
outsb
mov
scas
mov
daa
or
cmp
ds
mov
or
das
push
and
in
test
or
mov
scas
jmp
push
inc
jo
ljmp
nop
cmp
orl
or
mov
xchg
mov
popa
add
imul
scas
in
jb
jo
inc
int3
jae
inc
sbb
pop
mov
add
fwait
imul
mov
les
outsb
insl
jo
xchg
sub
xor
sbb
dec
and
sub
jo
or
enter
cwtl
fsubs
arpl
pop
mov
outsb
adc
das
adc
in
inc
xor
xor
mov
or
cmp
cmp
cwtl
outsb
push
sub
add
pop
add
and
jmp
lcall
aas
or
mov
js
roll
dec
pushl
xchg
push
outsb
cmpsl
or
mov
push
out
add
ss
push
inc
pusha
inc
push
push
sbb
loop
lcall
sbb
arpl
mov
jae
test
or
add
movl
fwait
jo
test
mull
sbb
mov
mov
xor
adc
sub
xor
mov
cs
dec
push
aaa
in
cmp
pop
add
push
xchg
loopne
add
sbbb
addb
cwtl
lahf
fbstp
dec
cmpsl
adc
sub
movsl
adc
xorb
xor
fstpl
sbb
nop
sub
cmovns
jae
outsl
jo
inc
fs
jo
lds
das
pushf
jae
push
rclb
sahf
cmpsb
or
scas
cmp
into
test
scas
sbb
sbb
inc
pop
push
fidivrs
push
adc
testl
mov
inc
nop
inc
xor
xor
cmpsl
sbb
jl
sbb
mov
push
cmp
cld
test
jbe
xor
mov
fadds
xor
push
sub
push
dec
dec
mov
mov
push
mov
pop
cmpsl
cmp
jl
in
push
mov
sbb
or
rorl
stc
sbb
ljmp
adc
cmp
mov
mov
ret
out
fadds
pop
sbb
imul
insb
push
push
mov
movsb
test
pop
sbb
push
js
jl
outsl
xchg
mov
cld
push
and
push
xchg
xor
push
lods
push
je
pop
jb
push
inc
push
push
push
pop
jnp
mov
push
movsb
inc
hlt
jle
mov
push
imul
xchg
push
gs
dec
adc
lock
lahf
or
inc
ret
das
adc
sahf
dec
pop
cs
jae
mov
push
pop
aam
pop
push
ljmp
fistpll
mov
push
fists
cmp
roll
movsb
inc
push
fbld
sub
mov
push
dec
loop
repnz
jne
fsubr
hlt
adc
and
in
inc
fs
ds
inc
shll
addr16
and
or
or
push
sbb
popa
xor
adc
aaa
xchg
dec
fistps
xchg
enter
dec
adc
mov
jae
enter
popa
inc
int3
pusha
xlat
repz
xchg
jl
inc
and
and
fsubl
cmpsl
sbb
testl
mov
repz
in
or
cmp
nop
add
nop
adc
sbb
nop
add
and
mov
add
jbe
insb
adc
adc
mov
push
push
out
and
sahf
out
sahf
jno
lea
out
and
or
xchg
faddl
sub
pop
cld
sbb
mov
pop
cmpsb
sarb
rolb
shl
sahf
mov
int3
fcoms
inc
pop
movsl
push
fbld
mov
shll
aas
or
leave
or
push
adc
sarb
push
leave
jae
sub
rcl
cmpsl
arpl
aaa
adc
inc
and
push
es
inc
lahf
jl
and
xchg
out
push
enter
mov
lods
or
jge
mov
ds
sbb
loopne
andl
popa
test
ret
pop
inc
xor
push
lahf
ds
pop
or
lfs
jo
pop
ss
enter
gs
inc
sarb
cmp
mov
stos
mov
xchg
sbb
aas
test
fmuls
push
mov
inc
das
inc
adc
outsl
xchg
addl
fs
add
aaa
lret
std
and
push
xor
pushf
aas
add
sbb
inc
int
dec
sbb
cmpsb
clc
inc
push
in
dec
and
mov
dec
pop
ss
lock
fdivrs
lock
in
mov
xor
xchg
push
xor
leave
push
push
cmp
inc
les
das
lock
inc
enter
out
mov
rcrb
loopne
or
js
inc
pop
mov
adc
pop
adcb
inc
cli
stc
clc
push
mov
idiv
cmc
push
push
push
loop
push
jl
test
jns
out
mov
fidivrs
mov
push
pop
test
icebp
sahf
negl
mov
js
push
or
push
xlat
pop
and
pop
nop
mov
inc
mov
flds
inc
jne
add
nop
fstl
xor
pop
add
test
push
popa
scas
daa
out
ret
push
aad
jo
adc
aam
iret
repz
rolb
or
test
and
inc
push
in
jge
mov
imul
loope
imul
push
and
push
xchg
pop
push
pop
push
and
sub
and
sbbb
mov
sbb
into
repz
and
inc
and
mov
push
aaa
sub
sbb
and
imul
dec
push
dec
dec
fs
add
jb
dec
add
xchg
add
add
clc
push
push
data16
push
sti
nop
adc
icebp
xchg
push
fiaddl
popf
gs
mov
push
add
dec
adc
cmpl
sub
je
sub
jno
xchg
pop
ds
or
pop
adc
ss
jle
add
jb
jne
lods
scas
roll
test
ds
cmp
cs
inc
les
mov
int
add
js
clc
xchg
jmp
cmp
jo
dec
cmpb
sbb
bound
xchg
cmpsl
ss
iret
je
test
push
aad
and
jmp
add
push
les
outsl
pop
or
shl
lret
lcall
outsb
add
cld
sub
cli
jne
lahf
outsb
pusha
jae
and
jmp
sbb
adc
adc
add
adc
or
mov
push
inc
ljmp
mov
pop
sbb
sbb
sbb
cmpl
ret
aaa
ja
jl
mov
adc
rorl
punpckhbw
or
push
add
aas
lcall
add
xor
clc
mov
imul
and
enter
out
push
pop
xlat
cmc
and
push
and
pop
sbb
test
mov
or
sbb
mov
pop
or
push
inc
push
int3
sbb
mov
or
in
add
cmp
hlt
loopne
or
dec
xor
filds
cld
cld
push
sub
xchg
std
add
dec
or
inc
mov
mov
or
loop
sbb
jno
push
lods
inc
fldcw
ret
xchg
mov
mov
xlat
inc
fcmovu
scas
jecxz
sub
or
sub
pop
cmp
lods
add
pop
inc
inc
hlt
cmp
jecxz
popa
cwtl
dec
addr16
cmp
pusha
xchg
and
sbb
pop
or
sub
subl
popa
loopne
push
nop
add
or
lods
call
imul
imul
dec
imul
sbb
pop
add
dec
sbb
adc
aad
xor
imul
xchg
sbb
les
push
imul
mov
inc
test
cwtl
jp
repnz
pop
xchg
test
call
lea
arpl
ds
or
cld
lds
jl
sbb
movb
push
movsl
cmp
cmc
iret
fucom
negl
push
pusha
subl
xchg
jmp
ja
jl
inc
push
dec
call
dec
jne
mov
push
stos
add
xchg
call
outsb
lds
inc
sbb
xchg
or
jg
lock
sarb
xor
add
lcall
cmpsb
dec
outsb
test
inc
xchg
dec
in
xchg
enter
dec
lahf
das
mov
or
push
pop
jg
sbbl
xchg
sbb
jmp
mov
outsb
jns
call
adc
dec
cmp
push
nop
lock
inc
ret
jne
push
sbb
sbb
mov
leave
and
mov
xchg
shlb
inc
or
jl
inc
push
call
or
push
in
xor
xorb
add
imul
jae
sbb
icebp
cmp
pop
push
xor
cmpsb
pop
icebp
in
mov
decl
jne
ja
add
js
rcrb
lock
add
mull
lahf
adcb
inc
aaa
sbb
sbbl
outsb
ja
push
pusha
jge
jle
push
es
jge
and
int
sarl
and
mov
outsl
push
mov
xorl
dec
dec
scas
rol
loop
out
ficoml
lea
mov
pop
icebp
mov
hlt
adc
popa
add
rclb
mov
pushf
or
test
mov
add
mov
insl
lods
loopne
jmp
mov
adc
mov
mov
leave
enter
add
cmp
rolb
mov
xor
dec
addl
mov
xchg
jae
sub
xchg
stos
and
pop
aas
cs
nop
dec
adc
inc
xor
add
push
push
nop
push
arpl
or
push
sub
add
gs
incl
rol
xchg
and
and
cmpsl
add
clc
jecxz
mov
xor
pop
add
lods
ret
adcb
mov
jae
pop
orl
and
aam
mov
loopne
fbstp
or
mov
ret
adc
dec
sub
xor
sub
adc
mov
aaa
lock
arpl
dec
loop
loopne
sbb
sbb
loop
ds
jmp
jmp
push
je
lods
sbb
cmp
and
mov
and
mov
fisttps
xor
dec
and
adc
xchg
push
and
or
dec
push
pop
mov
cwtl
ss
cmpsl
popf
into
fildl
in
pop
test
scas
enter
adcb
ss
shll
sbb
icebp
or
scas
pop
lar
roll
aas
js
dec
inc
or
or
pop
ss
addr16
dec
inc
cmp
add
or
or
xchg
aam
jnp
or
mov
mov
adc
pushf
es
pop
mov
mov
fisttps
mov
cmp
inc
das
jo
ss
pop
popa
and
ljmp
or
push
mov
cmp
sbb
jmp
movsb
pop
mov
mov
add
fwait
clc
mov
lea
add
jae
mov
dec
cld
mov
jmp
sbb
xor
mov
inc
pop
lret
jmp
push
jle
push
inc
sarb
jne
pop
add
sbb
sbb
mov
or
sub
sbb
lret
mov
push
sbb
pop
mov
mov
add
or
mov
mov
sbb
loop
xlat
adc
xor
pop
mov
fcmovb
es
pop
mov
call
je
in
movsl
in
ss
jbe
clc
and
unpckhps
sub
ret
clc
jmp
inc
ja
push
mov
lods
push
aad
mov
insl
rol
sbb
xchg
dec
push
xor
cmp
cld
cmp
push
sbb
popl
cmp
push
adc
mov
pusha
pop
add
test
ss
or
sbb
sahf
mov
aam
add
xlat
arpl
pop
mov
loopne
pop
insb
mov
out
push
xchg
pop
lcall
push
add
fisttps
xor
sub
cmp
fbstp
adc
cmpl
or
xchg
je
dec
inc
cmpsb
cld
not
fs
imul
imul
xor
cmp
cmp
pop
cmp
clc
je
ficoml
hlt
ret
adc
cmp
mov
insb
xchg
rclb
mov
or
test
arpl
cmp
adc
sbb
jno
mov
pop
push
cmp
dec
cmp
jge
and
pop
or
negb
inc
or
cmpl
cmp
imul
xchg
test
pushf
push
arpl
sbb
pop
das
nop
and
push
dec
sub
sbb
jge,pt
or
imul
ja
add
pop
push
or
psrlq
or
scas
test
adc
cmp
incl
out
cmpb
xor
popf
add
ret
scas
push
mov
or
adc
in
jmp
jb
push
push
cwtl
or
adc
mov
pop
cld
shlb
xorb
cmc
decl
loop
jge
sub
xor
shl
loop
adc
or
aaa
fs
inc
cmc
mov
icebp
mov
or
push
inc
xchg
sub
and
mov
loop
sub
add
dec
pop
aaa
sub
sahf
adc
mov
adc
addl
mov
into
ljmp
mov
xchg
mov
popa
jo
mov
mov
aam
sbb
test
outsb
aaa
mov
in
mov
lret
xor
or
and
jmp
and
push
mov
mov
lret
jmp
popl
lret
loope
xchg
aad
sub
add
dec
pop
mov
ret
pop
add
xor
sbb
jp
decl
jle
sbb
jae
or
sbb
and
inc
push
out
or
add
cmp
ret
fmulp
shlb
call
xchg
xor
loop
mov
sbbl
enter
xchg
xor
or
xchg
insb
roll
push
cmc
shl
xlat
sbb
sbb
incl
loope
dec
enter
in
rorl
or
inc
inc
inc
loop
cwtl
xchg
add
sub
or
das
add
dec
mov
sub
jg
dec
hlt
dec
and
cmpb
xor
loope
outsl
out
mov
xor
rol
mov
mov
and
je
pop
mov
aas
inc
and
and
aaa
fucomp
mov
shrl
mov
pusha
mov
movb
push
int3
inc
arpl
cmp
enter
js
inc
flds
jne
scas
jmp
dec
pop
insl
cmpsl
loop
jne
add
cmp
or
rclb
ja
and
push
mov
aaa
ret
adc
test
mov
and
scas
shrl
add
and
imul
ret
daa
mov
scas
ja
cmp
push
mov
es
out
add
popl
and
jge
xchg
xor
clc
aas
adc
pop
sar
mov
shl
pop
int3
push
push
in
cmp
je
inc
xor
dec
or
je
popa
sbb
mov
inc
adc
fisubl
inc
jnp
shlb
push
out
clc
push
ss
popa
sub
adc
mov
sbb
cmp
jae
add
pop
pop
dec
or
je
stos
adc
btr
push
hlt
lock
add
mov
push
push
inc
adc
fs
mov
fadds
add
outsb
mov
int3
fimuls
mov
add
cmp
inc
stos
mov
push
and
bt
jb
ja
jg
ss
mov
ret
ret
popa
mov
push
inc
cmp
jne
inc
decl
jne
les
pop
inc
mov
inc
mov
xchg
subl
imul
movb
adc
fwait
or
inc
mov
push
add
push
inc
or
adc
pop
pop
adc
lea
inc
in
mov
ret
or
sbb
mov
cmpl
mov
mov
xchg
mov
add
sbb
rorl
imul
fst
aaa
rorb
addr16
mov
fdivrp
adc
out
ret
mov
pop
stos
shlb
jb
sbb
rclb
adc
lret
mov
adc
js
cmp
jno
jne
inc
adc
dec
lods
aaa
ja
addl
inc
mov
cmp
mov
pop
mov
jae
or
add
data16
ljmp
push
or
inc
jno
jg
mov
cmp
sbb
lahf
or
hlt
sbb
cmpsb
fbstp
loop
jmp
inc
jle
push
dec
xor
push
or
out
pop
cltd
in
inc
pop
or
sbb
std
pop
pop
jns
sub
andb
push
or
xor
sub
movsl
push
frstor
sahf
int
cwtl
or
pusha
cwtl
adc
and
rclb
daa
mov
js
rcrb
inc
dec
mull
adc
sub
pop
imul
lock
lock
inc
jb
sub
call
jno
lret
enter
jnp
pop
xor
fstpt
mov
mov
or
xchg
xchg
rcl
push
add
shrl
inc
cs
xchg
shll
mov
rcrb
push
mov
adc
pop
push
add
xchg
out
add
test
inc
and
js
xchg
xchg
call
adc
outsb
cmpb
add
and
daa
dec
clc
xchg
nop
jge
enter
jmp
and
rol
inc
mov
sbb
in
inc
inc
and
xor
push
push
dec
lock
mov
jnp
lret
imul
xor
push
dec
shll
jae
jmp
dec
dec
in
inc
mov
test
lea
mov
xor
fdivrs
push
cs
cmp
lcall
scas
in
sbb
rcll
ret
or
xchg
into
sbb
pop
push
leave
mov
out
out
cmp
pop
aaa
dec
adc
movb
iret
lds
mov
jo
inc
pop
shlb
add
push
or
dec
lock
sarb
rcr
pop
adc
popa
dec
stos
and
loope
aad
sbb
cmc
or
imul
ret
inc
movlps
lds
inc
inc
jae
fstl
dec
into
mov
sbb
mov
push
inc
arpl
add
pop
loopne
push
cmpsl
call
ret
adc
cmpsb
sahf
sub
mov
loopne
mov
cmpb
orb
sbbb
add
aas
pop
or
add
add
call
cmp
inc
lret
push
mov
fs
fistpl
cmp
ret
stos
lcall
adc
rcr
add
in
in
adc
mov
add
loop
shlb
xchg
cld
test
sbb
inc
ret
addr16
test
subl
hlt
scas
cmp
insb
xchg
adc
loopne
imul
dec
and
and
fcoml
add
cmp
pop
das
pop
pop
sub
lahf
pop
in
mov
and
fiaddl
lret
shlb
and
add
loopne
inc
mov
and
or
mov
nop
loopne
bound
adc
sub
dec
mov
and
subb
popl
divb
xchg
cli
push
jmp
lcall
jecxz
negl
adc
scas
shr
lahf
and
ds
cmp
je
inc
xor
push
cmp
or
pop
push
popa
nop
sub
xor
dec
or
and
pop
jno
loop
push
lret
pop
das
jp
adc
xor
enter
inc
andb
out
daa
ljmp
pop
subb
push
push
nop
inc
add
cmp
dec
cld
loope
jmp
sub
lret
push
or
mov
out
sub
adc
cmc
inc
dec
mov
test
addr16
push
and
push
popa
adc
cwtl
cmp
dec
cmp
mov
imul
bound
jo
add
dec
inc
dec
push
adc
push
and
or
rcrl
call
out
sub
imul
les
jmp
hlt
imul
iret
iret
dec
xchg
shrb
mov
or
dec
sub
aad
pop
mov
mov
push
cmp
dec
sti
dec
scas
sbb
push
ds
inc
sub
mov
aas
movsl
push
pop
adc
push
gs
pop
cmpsl
jge
sbb
dec
mov
push
out
adc
out
orb
adc
dec
mov
push
pop
jno
lea
jno
loope
adc
repnz
pop
lods
out
mov
das
push
rcl
mov
sub
push
cwtl
push
enter
std
daa
xor
push
sub
rcll
mov
jmp
fdiv
mov
mov
ss
or
je
or
or
enter
jle
test
std
cmpb
jne
or
push
cmp
ret
push
sub
notl
cmp
mov
adcl
popa
pushf
adc
push
add
push
clc
js
fimull
push
test
aam
lods
add
aas
jecxz
mov
add
aas
les
incb
mov
jg
pop
pop
jne
je
mov
testb
orb
sbb
dec
inc
loope
mov
sbb
je
sub
in
scas
stos
fcompl
neg
inc
or
push
or
add
scas
sub
inc
mov
test
daa
inc
addr16
xor
loope
add
adc
cs
pusha
or
adc
pop
cmp
sbb
insb
mov
cmp
lahf
jo
out
leave
fdivrs
inc
dec
mov
xchg
mov
ret
addr16
dec
pop
data16
sub
mov
mov
enter
aaa
sub
sub
adc
mov
xchg
test
pusha
dec
adc
inc
shrl
sub
push
addb
and
pop
adc
test
lea
cmp
imul
adc
or
push
movsb
sbb
roll
or
aas
xchg
push
xor
in
inc
int3
frstor
imul
inc
dec
rorb
mov
mov
testb
pop
add
pop
add
add
push
loopne
testl
pop
das
ficoml
js
je
jg
xor
fisttpl
shr
sub
pop
sbb
jge
insb
xor
lea
mov
dec
add
shl
or
or
mov
aam
jbe
jge
xchg
mov
xor
push
sub
int
cmpsl
adc
pusha
inc
popa
xchg
cltd
cmpsl
bound
test
inc
adc
aas
add
pop
ret
aam
add
mov
dec
xor
jns
pop
add
mov
push
fcmovbe
or
mov
cmp
mov
push
mov
imul
es
add
push
pop
mov
xor
inc
lds
movsl
xor
pop
adc
scas
adc
inc
sbb
scas
inc
int3
or
cmp
sbb
or
nop
and
ret
jns
mov
mov
xor
jl
dec
add
mov
xchg
push
add
lret
push
sarl
in
jl
nop
xchg
cwtl
mov
dec
push
push
jne
add
push
cmp
shr
out
mov
or
and
mov
push
jl
jp
arpl
and
test
mov
or
or
jecxz
jge
inc
dec
inc
jge
sbb
jle
xchg
clc
mov
ret
pop
pop
inc
mov
and
inc
fsubl
jl
xor
pusha
clc
add
rcr
lock
xor
je
add
cltd
rol
push
nop
lock
xor
push
xor
or
in
sahf
clc
lret
or
enter
mov
shr
xchg
xchg
inc
push
jge
or
or
and
dec
bound
loopne
out
adc
sbb
sub
mov
mov
ret
cmpxchg
pop
sbb
mov
push
sti
pop
ss
cmp
scas
lock
icebp
inc
xchg
test
pop
insl
ret
jno
dec
fsubr
ss
sub
fwait
call
dec
mov
mov
or
ja
jle
inc
movsb
cmpl
cmpl
xorb
add
add
sti
jb
sbb
pop
mov
add
outsb
adc
jo
jecxz
cmpsl
lcall
mov
sbb
andb
stos
xor
mov
cmpsl
outsb
insl
mov
lea
or
mov
sbb
call
or
hlt
out
xor
add
inc
sbb
es
dec
add
adc
movsb
bound
inc
std
mov
xor
push
out
mov
jecxz
sub
push
movsb
aam
rcrb
lret
mov
cmp
fisubl
mov
push
mov
leave
mov
ret
mov
cwtl
loopne
add
pop
outsl
mov
in
adc
cmp
vcmppd
shl
inc
pop
in
sbb
xchg
xor
adc
cld
loop
bound
mov
pop
stos
add
push
or
jnp
sbb
jmp
push
dec
xor
outsl
cwtl
sbbb
cltd
cmp
add
jbe
bound
scas
add
pop
mov
push
stc
dec
inc
adc
dec
dec
in
sub
push
dec
cmp
repz
mov
xchg
jne
rclb
rclb
sub
cmpsl
movsb
or
adc
push
enter
sub
push
clc
clc
or
jae
lahf
pop
mov
out
call
negl
cs
filds
mov
adc
sbbb
add
xor
mov
pushf
int3
shrb
jo
cmp
push
pusha
out
insb
mov
add
inc
in
out
dec
dec
push
push
jg
adc
lahf
mov
and
data16
test
or
sub
mov
fdivrl
add
push
push
push
in
icebp
inc
jbe
rcl
jmp
pop
addl
xlat
xor
add
add
add
nop
icebp
dec
cmpsb
adc
mov
mov
or
test
jbe
ret
or
flds
sub
repz
or
fwait
cmp
out
add
xor
aam
add
fucomp
arpl
xchg
jae
sarl
xchg
loopne
loopne
in
inc
pusha
popf
inc
and
xor
ret
sbb
lret
pop
jno
mov
sarb
pop
les
sub
xor
pop
shlb
sub
or
clc
jo
aam
or
and
mov
pop
sub
test
jle
cmp
push
cmc
push
and
icebp
or
ror
or
mov
imulb
cmc
add
je
dec
or
pushf
or
add
add
sbb
or
push
and
fadd
or
push
je
rcrl
xchg
or
lods
mov
jne
icebp
mov
inc
ficoms
imul
mov
sub
dec
sbb
or
icebp
adc
mov
add
movsl
movsb
cmp
jge
data16
xor
lods
lock
sub
lcall
test
imul
add
cmp
clc
ficoms
jne
dec
pop
pop
adc
mov
mov
add
lods
mov
or
add
daa
or
sub
rorb
adc
shl
ljmp
in
out
in
ja
clc
xor
clc
add
dec
sub
jnp
jle
or
mov
adc
mov
xor
dec
mov
lret
and
dec
mov
in
filds
inc
inc
or
insl
enter
pop
mov
insb
insl
stos
xchg
dec
add
ret
mov
or
repnz
and
and
in
add
fst
pop
adc
pop
sbb
mov
test
mov
push
push
stc
xor
adc
and
xchg
sbb
out
nop
pop
pop
movb
jg
dec
fstl
pop
or
jns
mov
pop
popf
ret
inc
lahf
mov
or
lods
pop
or
fisttpl
sbb
ret
ja
jmp
nop
sbb
xchg
adc
pop
js
dec
sbb
in
arpl
lock
push
sbb
or
fcoms
dec
and
pop
adc
incl
push
push
jb
jo
imul
xchg
fs
sbb
arpl
sub
iret
out
mov
rolb
push
mov
adc
imul
or
inc
imul
adc
and
movsl
or
pushf
xchg
sbb
ja
int
lods
fidivs
pop
push
cli
outsl
fs
mov
sub
mov
lea
sti
mov
xchg
aaa
cmp
inc
cwtl
add
scas
lret
push
shrl
or
rolb
cld
dec
fistps
je
cmc
push
add
sub
faddl
mov
add
push
aaa
push
movb
movb
sar
sub
adc
pop
fidivrs
and
cmpsb
mov
cwtl
addb
aas
xchg
inc
clc
jecxz
data16
and
addr16
jmp
mov
lods
sbb
jo
add
jae
scas
out
dec
imul
test
mov
cmp
push
xchg
mull
shlb
mulb
xor
data16
and
outsl
outsb
sbb
mov
nop
out
and
sbb
and
idivb
sub
outsl
add
mov
loop
cld
xchg
xor
inc
clc
aaa
adc
inc
lea
pop
xchg
push
xor
jp
outsb
cmpl
sbb
pop
push
in
cld
adc
rorb
cmp
and
adcl
add
movaps
fdivs
xor
or
incb
push
test
mov
movl
jo
fwait
aas
in
or
aad
or
test
inc
cmp
inc
add
or
push
or
sub
push
inc
jmp
dec
jp
adc
pop
andw
rcr
mov
pop
cmp
inc
ret
jo
outsl
xor
push
arpl
filds
aaa
test
adc
pop
add
rcrb
and
imul
das
lock
lock
xor
fisubl
jge
and
xor
mov
fstl
pop
mov
add
and
sti
sub
adc
imul
imul
sub
add
xlat
xorl
push
daa
pop
and
aad
mov
xorps
aas
dec
mov
orl
cmp
repz
lods
rcll
pop
adc
jg
mov
mov
js
add
sar
adc
adc
xor
push
jo
pop
sub
inc
cmp
jle
adc
xchg
jle
jp
ret
pop
and
jb
xorb
into
adc
push
inc
adc
push
xchg
xor
jo
aaa
adc
sbb
push
jb
pusha
cmc
out
mov
cmp
cmpsl
ds
adc
sub
add
push
dec
cmp
cmp
inc
add
add
lea
cwtl
fisubl
xchg
rclb
add
adc
xchg
loop
std
rcrb
push
je
hlt
aaa
insb
sbb
xchg
test
ljmp
mov
adc
ja
lea
pop
decl
mov
fiaddl
pop
and
adc
int3
push
inc
lret
inc
lcall
pop
call
add
jne
loopne
cmpsl
push
mov
and
mov
aad
leave
pop
lods
call
push
mov
sahf
jnp
pop
pop
test
les
xor
and
pop
lods
in
test
outsl
in
jbe
push
mov
imul
cmp
jne
push
or
push
push
fistpll
sub
in
insb
icebp
ret
mov
fwait
js
xlat
lret
insl
lds
dec
in
sub
insl
sbb
mov
push
div
pop
or
jecxz
fstp
loop
push
add
and
pop
ror
and
or
inc
xor
cmp
xor
lock
int3
hlt
movsl
shl
ja
sbb
mov
sub
adcl
pop
jno
shrl
mov
and
sub
outsl
dec
cmp
pushf
and
and
inc
outsb
adc
inc
pop
inc
pop
dec
add
je
sarb
push
lahf
push
xlat
es
cmp
in
and
ja
sbb
jecxz
cmc
dec
rol
mov
jmp
jp
popa
add
movswl
jne
jecxz
lahf
mov
iret
inc
xchg
pop
jle
pop
sbb
adc
pushl
dec
jne
dec
push
nop
cmp
aam
mov
je
mov
mov
mov
adc
cmpsl
and
sbb
rcll
sub
movsl
jmp
xchg
lret
cli
pop
mov
in
std
inc
test
xchg
mov
xchg
xorb
or
das
push
lock
fsts
lret
shlb
test
dec
mov
movl
or
in
adc
pop
scas
jge
imul
outsb
sbb
adc
and
xor
jns
or
data16
outsl
or
xlat
dec
jle
leave
push
scas
cli
outsl
inc
pop
push
adc
outsl
push
dec
pop
or
cmp
sbb
call
hlt
jmp
lods
in
and
jae
push
cmp
and
jmp
cmpsb
int
jnp
jo
je
cmp
mov
loop
dec
pop
cmpsl
jo
pusha
pusha
mov
mov
ljmp
dec
and
cs
dec
pop
add
pushf
adc
fwait
adc
and
dec
sbb
dec
and
fsub
xchg
daa
mov
popf
pop
js
and
insb
testb
inc
mov
inc
inc
pop
jge
cmp
imul
push
pop
mov
cld
push
cmpsl
pop
repz
fistpll
pop
fld
iret
add
inc
cmpb
out
jg
call
mov
or
fs
mov
xor
not
and
aaa
add
ret
dec
xchg
inc
pop
pop
jecxz
jne
leave
lock
imul
lea
push
les
cmp
call
pop
shl
pop
push
popf
or
and
roll
fdivrp
sub
cltd
int
add
adcb
push
xor
int
xor
in
addb
mov
test
lock
int
dec
push
idivb
jo
imul
ret
mov
pop
xchg
in
dec
jno
push
js
xor
jae
stc
sub
mov
dec
sbb
adc
pusha
add
or
pop
dec
sub
lret
add
jmp
loope
insb
insl
add
daa
mov
jb
xor
bound
movsb
add
sbb
pop
hlt
adc
rclb
mov
ss
sbb
sbb
je
in
pop
out
xchg
or
in
movsb
and
pop
leave
subl
xchg
je
sub
dec
cs
xor
mov
into
inc
mov
ficoml
cmovne
xor
inc
icebp
movsb
fisttps
fsubs
adc
aam
xorl
pushf
popa
loope
test
add
pusha
divl
and
adc
or
orl
adc
movsb
imul
mov
scas
fsubrl
push
notb
mov
push
sbb
arpl
pop
ss
shr
aad
cmp
jae
jbe
cmp
and
popa
adc
mov
in
in
out
mov
pop
popf
jne
arpl
sub
cmp
pop
sub
dec
cmc
pop
mov
sbb
shr
in
adc
fwait
ljmp
in
lods
mov
jne
adc
pusha
sbb
push
je
into
les
mov
push
inc
cs
stc
adc
outsb
sarb
xor
mov
push
aaa
nop
sbb
scas
lret
xor
nop
cmpsb
xlat
cmp
xchg
nop
aaa
out
pusha
cmp
insb
inc
or
sub
fsub
add
mov
mov
cld
adc
fst
mov
mov
inc
test
test
jno
push
sbb
ja
dec
cwtl
popf
dec
push
addr16
loop
repz
les
add
adc
or
jmp
cmp
nopl
or
sbb
sub
mov
pusha
sar
fwait
aaa
sub
js
mov
imul
jge
popa
sub
xchg
adc
shrl
out
push
mov
and
insl
or
adc
sub
xchg
dec
inc
mov
xchg
in
push
add
jbe
lds
ret
icebp
out
jmp
aam
rol
adc
scas
out
fildll
sub
or
push
xchg
dec
pop
xor
nop
xchg
repz
add
add
sbb
xchg
xchg
flds
or
adc
jb
or
shrb
xchg
pop
xchg
adcl
add
adc
or
dec
sbb
sbb
fldl
insl
push
and
and
or
mov
imul
or
xchg
add
mov
add
jp
movsl
sub
push
out
sbb
repz
add
sahf
add
shlb
arpl
mov
xchg
sub
notl
and
popa
das
sbb
out
out
inc
adc
pop
clc
les
sub
test
dec
add
iret
pop
jl
xor
iret
std
sub
adc
and
and
cli
push
ss
inc
lahf
add
add
movsbl
cld
xor
mov
push
and
loop
adc
dec
cmpsl
daa
cmp
mov
cltd
ret
shufps
and
insb
adc
inc
sub
push
jnp
imulb
inc
push
mov
jne
mov
push
mov
testb
mov
mov
and
aaa
add
xchg
popa
mov
les
imul
sti
les
dec
add
xor
add
lods
push
sub
xor
xor
pop
inc
pop
loopne
mov
or
movsl
es
or
inc
icebp
and
imul
xor
dec
push
jl
out
mov
hlt
lret
mov
and
cmp
pop
hlt
in
sub
inc
jle
stc
jge
sub
rcrb
mov
clc
cmc
sahf
ret
into
or
fisttpll
dec
sbb
lea
jne
xor
add
mov
xchg
std
pushf
cmp
push
cld
sti
push
cmp
pop
dec
insb
cld
mov
pop
jae
rorb
push
pop
xor
adc
jnp
ret
loop
inc
jmp
push
add
outsl
xchg
sahf
lcall
scas
lock
mov
add
mov
or
sbb
sbb
jl
push
packssdw
inc
ficompl
ret
sbb
ret
mov
js
push
push
fldt
jo
xchg
adc
rorb
icebp
xlat
push
push
pop
dec
shl
dec
aam
out
es
outsb
popf
call
rorb
imul
stos
inc
dec
insb
andl
cmp
hlt
je
and
repnz
adc
jg
mov
mov
lock
pop
sbbb
fs
jo
test
mov
inc
ret
xor
lods
push
sbb
or
aaa
outsl
mov
lods
js
aas
rorb
add
inc
or
aad
xchg
and
std
xchg
icebp
inc
mov
cld
inc
jge
push
pop
xor
fs
mov
out
jg
xchg
inc
loope
add
add
mov
es
cmp
xor
inc
sub
sub
push
add
jnp
mov
or
or
inc
sub
add
inc
xor
test
int3
push
adc
lahf
out
jb
lret
inc
daa
out
mov
nop
pushf
pop
pop
mov
pusha
mov
push
sub
in
push
out
aad
push
push
jb
xor
loope
pushl
pop
movsb
lcall
in
ret
and
test
gs
arpl
mov
mov
cmp
cmp
fdivrl
fimuls
or
mov
mov
in
cli
sub
or
add
iret
xchg
push
or
lret
xor
or
cld
rcll
leave
xor
fcomps
mov
iret
sbb
mov
in
push
push
add
jmp
mov
adc
cmp
mov
cld
daa
neg
adc
je
jb
daa
push
fildll
arpl
pop
inc
jnp
push
cli
andl
pop
lret
lods
inc
shlb
pop
in
popa
sub
push
adc
out
dec
gs
mov
dec
mov
pop
jmp
inc
push
jge
sub
mov
mov
imul
xorb
or
movb
and
jae
and
aam
aam
push
rcr
in
inc
xchg
rcr
jnp
aaa
inc
cmp
sub
repz
dec
or
movsb
sbb
sbb
out
sti
jmp
xor
or
and
add
push
sub
lock
pop
add
jmp
hlt
shlb
hlt
mov
gs
jbe
daa
jmp
sub
lar
shlb
out
jb
out
fisttpll
shlb
addr16
jl
dec
orb
or
je
mov
ljmp
scas
xor
or
call
rorb
lahf
imul
sub
dec
sbb
adc
mov
xor
pop
inc
add
in
or
test
fcoms
mov
xor
or
push
sub
or
fcoms
aam
xor
fistps
dec
jl
dec
je
in
pop
ret
jecxz
lock
ret
shrl
mov
dec
xorb
mov
daa
pop
or
adcl
hlt
add
inc
js
xchg
ja
cmp
push
add
movsb
cmp
mov
ss
or
lea
or
or
pop
cmp
and
sub
adc
lea
fnstsw
xchg
push
loopne
stos
ret
jmp
adc
pop
jecxz
xchg
dec
test
verw
rclb
aad
and
and
in
sbb
mov
sub
fwait
sbb
addb
xlat
stos
push
mov
add
adc
mov
push
test
mov
mov
push
mov
and
adc
inc
stos
push
xor
push
jge
cld
fstps
cmp
jb
jp
outsb
or
mov
or
sub
push
pop
cmp
addr16
push
int3
loopne
or
out
adc
inc
add
mov
lcall
and
or
ds
dec
mov
pusha
dec
xchg
cmp
xorl
cltd
adc
dec
mov
icebp
or
adc
xor
sbb
call
repz
mov
cwtl
mov
lods
add
mov
outsl
ds
aam
mov
add
jl
out
pop
out
adc
pop
hlt
mov
iret
fidivl
dec
fcoml
and
scas
shll
add
lds
and
leave
das
pusha
repz
lock
mov
add
test
jno
out
mov
dec
call
daa
daa
iret
jnp
sbb
sub
dec
jns
int
pop
mov
mov
jns
out
test
jmp
push
ja
pop
pop
mov
adc
add
or
xchg
or
sahf
call
pop
jns
pop
xor
pusha
mov
pop
push
adc
push
enter
mov
or
dec
sub
loopne
inc
pusha
rcrl
popa
push
das
adc
sub
mov
xchg
cmp
ja
hlt
mov
xor
sub
hlt
in
pop
and
push
adc
mov
pop
push
mov
call
adcl
and
stos
pop
clc
sbb
push
sbb
lret
aad
jae
jb
adc
fnstsw
popa
mov
inc
in
test
inc
push
push
sbb
sub
call
cmp
jp
subb
mov
pop
test
cvtps2pi
or
sbb
mov
push
xlat
dec
rorb
push
sub
cmpb
clc
push
sbb
pop
add
inc
call
jmp
in
mov
push
sbb
fldcw
rcl
pop
ss
cmpsb
sbb
cmpsl
xchg
or
push
enter
mov
arpl
or
loope
sarl
mov
sbb
mov
dec
sbb
das
jae
sub
fs
push
cmp
pop
or
sub
sbb
or
xor
sarl
mov
pop
pop
jns
add
popa
imul
mov
pop
aam
xor
sbb
sbb
add
mov
sub
bound
dec
cwtl
push
inc
or
and
inc
sbb
mov
imul
dec
lods
imul
jmp
mov
ret
cmp
int
testl
push
mov
or
or
loop
test
inc
xchg
add
push
mov
push
dec
or
dec
decb
cmp
or
clc
stc
mov
sbb
dec
xor
das
mov
mov
mov
sub
aas
sbb
je
cmc
xor
movsl
addl
in
rcrb
neg
mov
pop
adc
out
mov
das
ficoms
fidivs
addr16
push
pushf
hlt
loope
testb
pcmpeqw
add
cmpsb
test
xor
xorb
lret
js
aaa
rorb
mov
add
mov
pop
cs
push
xchg
xchg
stos
mov
cmp
shlb
imul
pop
inc
inc
clc
xor
insl
mov
sti
mov
jl
push
daa
pusha
icebp
fisttps
ret
in
jmp
push
mov
push
jg
xchg
pop
lea
mov
movsl
leave
push
shr
cwtl
xor
xchg
cmp
les
cmp
cmp
loopne
mov
in
je
xor
dec
or
dec
adc
ret
sub
push
bound
int3
pop
sahf
add
add
dec
mov
mov
fs
mov
xchg
mov
mov
dec
js
data16
mov
and
scas
add
xor
jle
add
jg
sbb
cmp
mov
fs
cmpl
hlt
jl
adc
sbb
mov
push
add
add
xorb
push
lret
idivl
sbb
movsl
push
outsl
mov
flds
and
adc
push
rol
in
and
fisttps
pop
sbb
leave
add
sbb
or
aad
and
jp
xchg
cmp
pop
sysret
loope
andl
mov
adc
sub
nop
scas
rcrl
push
cltd
inc
push
fnsave
lods
mov
or
mov
inc
inc
jmp
or
cmp
xchg
jl
ret
mov
push
push
push
push
pop
push
inc
test
lock
add
loopne
pop
mov
adc
cmp
sbb
fwait
cld
dec
fcoms
dec
jl
pop
and
jl
cltd
sub
xchg
mov
daa
xor
xchg
aaa
sti
xor
dec
push
push
push
mov
xchg
lea
mov
add
or
or
jle
or
and
sbb
les
pop
mov
jns
dec
mov
cmp
je
adc
mov
nop
cmpb
iret
sbb
push
xchg
xor
popf
imul
pop
and
dec
xchg
lahf
pop
pushf
push
fisubrs
and
jbe
fistps
cli
mov
inc
and
or
sub
push
sbbl
or
dec
pop
add
or
mov
test
adc
or
gs
loop
push
je
cmpl
lea
adc
sub
outsl
mov
adc
int3
dec
jecxz
dec
scas
ret
rorb
or
mov
cli
mov
aas
jnp
cmp
je
cmp
or
lea
push
sub
cwtl
fisttps
adc
cmp
js
sti
xchg
dec
sbb
and
push
aas
sbb
data16
daa
sbb
out
dec
decl
mov
sbb
push
sbb
dec
or
xrelease
mov
cmp
lock
push
push
adc
or
pusha
rcll
push
cmp
mov
cmc
mov
pusha
push
push
mov
adc
xor
testb
and
bound
push
scas
add
push
dec
xchg
dec
xchg
bound
popf
adc
push
mov
lock
sub
js
cmpl
scas
and
cwtl
cmc
jae
sub
cmp
mov
adc
leave
xor
sub
stos
adc
scas
adc
sub
dec
or
mov
ds
mov
inc
jo
inc
xchg
adc
clc
mov
orb
pop
push
stos
sbb
dec
fcoms
scas
dec
pop
cmp
mov
jmp
mov
mov
je
mov
aad
inc
xorb
je
paddd
and
push
push
dec
adc
mov
jl
add
ss
dec
movsl
das
scas
lods
xor
aad
and
int
loopne
push
negb
push
setne
mov
stc
ficoml
add
mov
rolb
sbb
mov
sbb
js
jne
cmpsl
lret
test
pop
cmpsl
aaa
push
outsl
jo
cmpsl
adc
filds
cmp
pop
or
inc
inc
pop
mov
notl
arpl
incb
int
dec
dec
pop
data16
xchg
shrb
sbb
dec
cvtpi2ps
or
push
inc
pushl
jbe
sti
dec
jne
cmp
pop
call
daa
call
movsl
pop
out
dec
hlt
dec
mov
pop
sbb
loopne
or
add
sub
nop
inc
addr16
ret
adcb
jnp
ret
pextrw
xor
sub
push
sub
xor
sbb
pushf
inc
aad
imul
loopne
arpl
inc
dec
jne
in
mov
add
ret
xchg
popa
iret
pop
sbb
clc
fsubrs
andl
fildll
push
mov
andb
sahf
xchg
jnp
sbb
jmp
sbb
inc
stos
and
pop
ffreep
scas
and
push
add
add
pusha
pop
leave
inc
xchg
orb
cmpsl
mov
ret
push
insb
adc
mov
push
leave
aas
ficoml
fs
push
aaa
dec
or
cmp
jg
test
mov
push
dec
cmp
xlat
xor
daa
mov
jmp
gs
xlat
clc
mov
mov
jmp
or
sbb
fwait
clc
add
pop
cmp
lods
sbb
rolb
lock
imul
add
add
sub
push
cs
aam
out
loopne
and
add
cmp
jmp
pusha
dec
leave
sub
xor
add
in
mov
sbb
sbb
pop
sub
cmp
and
cltd
daa
icebp
les
outsl
or
call
jge
jne
es
jne
scas
pop
adc
popf
adcb
sbb
inc
arpl
into
lcall
mov
mov
scas
aas
or
inc
add
add
or
sbb
push
pop
out
inc
aam
xchg
add
nop
adc
mov
ljmp
inc
xchg
inc
push
mov
out
mov
insb
lret
rcrl
popa
pusha
sti
pop
cmpsl
nop
hlt
xor
ds
fisttps
add
jo
or
add
xor
adc
pop
jmp
adc
incb
stos
outsb
xor
insl
pop
adc
mov
aas
push
ficoms
pop
sbb
push
pop
out
inc
push
adc
rolb
pop
das
jae
sub
jns
add
in
or
ja
jbe
and
into
pop
push
inc
ret
arpl
mov
bound
lahf
push
fwait
push
fcoms
in
adc
into
cmp
rorb
inc
je
dec
push
cltd
sub
adc
sbb
adc
mov
addr16
out
mov
fnstsw
and
add
or
test
xchg
adcl
ror
cmp
jne
sbb
and
es
frstor
adc
dec
push
dec
insb
pop
mov
mov
jl
shll
inc
adc
sbb
push
sbb
and
iret
daa
mov
leave
out
mov
mov
orb
or
add
jne
inc
dec
adc
cmpl
outsb
adc
adc
cmp
shr
mov
or
rorb
push
pop
leave
adc
add
iret
push
loope
inc
xlat
pop
adc
orb
nopl
mov
cs
add
add
push
xchg
inc
lret
push
test
popf
push
or
daa
or
call
sub
movsb
inc
add
insb
xlat
pop
sti
lea
push
sbb
xlat
loope
adc
push
adc
imul
fwait
adc
xchg
inc
lret
or
iret
shr
dec
sub
dec
pop
xlat
xchg
movsl
sbb
push
adc
movl
rclb
or
in
push
xchg
dec
jo
movsl
lret
cs
dec
jp
adc
add
sbb
sbb
adc
pop
jne
cmp
clc
jne
push
imul
xchg
fcomi
movsb
fisttpl
pop
mov
pop
adc
testb
stos
add
mov
add
pop
push
cmp
jo
or
fwait
adc
inc
das
adc
cs
jnp
add
addb
orl
pop
or
ret
test
pop
daa
mov
decl
and
xchg
dec
je
push
aad
out
sub
and
loopne
push
push
outsb
popf
sbb
adc
cld
ja
rcll
cld
decb
inc
sbb
loopne
cmp
in
arpl
popf
outsb
call
push
or
mov
adc
lds
into
mov
pushf
push
sbb
fdivl
cmp
fcmovb
adc
sbb
popf
jo
push
lahf
push
mov
ror
enter
pop
daa
sbb
jge
mul
cmpsb
aam
aas
dec
sub
add
inc
dec
icebp
push
jo
into
sub
sbb
push
adc
sub
call
mov
insl
dec
iret
or
inc
ss
jne
subl
das
aad
pusha
dec
shll
xor
cmpsl
xor
add
push
push
mov
or
pop
cmp
les
nop
stos
mov
sahf
mov
adc
mov
adc
adc
popf
pop
mov
test
mov
rorl
lock
and
pop
push
push
mov
add
in
push
pusha
or
mov
add
mov
inc
inc
pop
or
add
jle
testl
pop
or
or
js
cld
pcmpeqb
xor
test
pop
adc
or
jge
sbb
sub
mov
cmpsb
push
mov
push
call
jae
aaa
call
add
sbb
insb
dec
push
push
clc
loop
or
dec
and
mov
and
jbe
pop
pop
inc
cmc
mov
push
pop
lock
push
mov
mov
je
push
addr16
scas
pop
mov
pop
mov
xchg
add
cld
push
test
mov
xchg
add
cld
mov
or
test
cmp
xchg
jbe
pop
cmpl
test
sbb
jge
lret
out
sbb
dec
xlat
inc
pusha
js
sbb
arpl
test
pop
icebp
xchg
sbb
mov
jmp
outsl
test
inc
inc
mov
test
pusha
pop
sbb
subl
pop
jns
flds
cltd
pusha
lret
daa
call
jnp
dec
add
js
add
clc
lock
sbb
mov
sbb
sbb
xchg
jg
cs
xchg
mov
loopne
decl
mov
mov
dec
lea
dec
dec
jno
jae
dec
dec
dec
dec
jne
ja
dec
dec
dec
dec
jns
jnp
dec
dec
dec
dec
jge
jg
dec
dec
dec
dec
popa
bound
dec
dec
dec
dec
gs
dec
dec
imul
dec
insl
outsb
outsl
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
push
jns
lods
mov
inc
loope
pop
cmp
add
xor
pop
cmpsb
insb
outsl
insl
mov
lods
out
mov
cltd
and
push
data16
xchg
ds
and
xchg
mov
add
push
inc
sbb
cli
fisttpll
mov
fstl
or
dec
ret
cltd
adc
inc
out
fwait
fwait
call
cwtl
push
or
mov
test
add
pop
and
jl
xor
je
insb
loope
cwtl
inc
cmp
xor
data16
sub
mov
enter
je
arpl
adc
jo
pop
add
gs
imul
mov
mov
rcr
adc
insb
or
sub
adc
push
pop
push
outsb
int
xchg
pop
xchg
sub
pop
jo
outsl
sbb
push
inc
popa
jae
repnz
push
or
adc
xor
inc
jl
or
or
divl
iret
or
pusha
std
sbb
iret
int
inc
insb
mov
push
push
push
je
into
insl
dec
outsl
jo
je
jae
fcomi
insl
inc
push
jns
sbb
mov
aam
addr16
and
add
out
ret
sbb
xchg
jge
ss
xor
aas
mov
push
loop
pop
xchg
imul
jbe
dec
and
jb
fimull
ds
xchg
add
pop
bound
add
dec
jl
jp
or
push
arpl
ds
lret
or
fiadds
cs
inc
outsl
jb
jae
shrl
out
es
mov
cmp
and
sub
sbb
aad
xlat
mov
add
test
decl
sti
push
adc
mov
dec
mov
pop
sub
pop
test
jl
xor
mov
dec
loope
mov
push
pop
push
cmp
cmp
imul
mov
cmpsl
inc
xchg
insl
pop
loop
push
dec
inc
orl
hlt
jg
cmpsl
push
push
pusha
jge
push
push
push
and
enter
jno
js
lds
pushf
push
dec
cmpsl
fs
and
lret
mov
xor
call
cmpl
mov
push
js
lret
add
fcomps
pop
xor
fadd
inc
cmpsb
jo
xchg
push
add
ds
enter
sarl
push
push
dec
gs
xchg
cld
adc
mul
fs
inc
add
cltd
shlb
cmp
jne
jmp
pop
ss
add
adc
pusha
adc
jnp
movsb
mov
sbb
jl
and
sbb
je
jnp
pop
mov
lahf
pop
sbb
sbb
add
cmpl
add
push
roll
xlat
add
sub
xor
cmp
adc
aas
enter
fstp
sarb
lsl
push
inc
mov
add
fs
pop
mov
sbb
cmp
jmp
jp
fs
push
cmp
lret
and
outsb
add
add
test
lds
je
movb
test
iret
inc
dec
lds
xchg
mov
cmc
pop
insb
dec
pop
inc
pop
daa
jl
or
rorb
scas
or
inc
inc
popa
sbb
inc
icebp
mov
push
movsl
mov
lret
insb
aam
rcrb
add
pop
pop
loopne
test
mov
lods
adc
or
push
aam
cmpsb
out
mov
xchg
adc
aam
lods
sub
xchg
into
xchg
xor
add
ret
sbb
mov
mov
les
adc
cmp
jge
int3
pop
mov
adc
cli
mov
mov
iret
lret
mov
es
push
rorb
sub
out
mov
sub
and
lods
sbb
push
add
mov
adc
push
sub
push
sub
xchg
pop
dec
jmp
ljmp
jmp
pop
loopne
push
in
pop
jnp
iret
in
fs
bswap
int3
pop
fsubl
call
adc
cs
popl
mov
fadds
and
inc
and
cwtl
mov
push
shrb
call
push
xchg
gs
insl
popa
addr16
hlt
mov
clc
enter
dec
xor
aaa
icebp
loop
outsl
adc
jo
pop
insb
inc
push
push
mov
pop
les
loop
cmp
mov
mov
int3
js
and
inc
cmpsl
xor
cld
add
push
lock
dec
dec
add
cmp
push
xor
or
inc
adc
fmull
xor
inc
or
xor
adc
nop
add
shlb
or
mov
mov
fiadds
mov
pusha
cli
imul
or
hlt
fmuls
mov
mov
repnz
ret
xor
xor
inc
fs
or
push
xchg
lea
out
ds
xlat
inc
push
xlat
enter
mov
push
enter
fcoml
sti
push
xchg
xchg
push
or
add
aam
adc
imul
insb
mov
je
and
popa
xchg
mov
call
mov
outsb
nop
sub
incl
pop
mov
mov
xor
rol
xor
dec
jne
notb
mov
mov
test
jne
mov
pop
push
push
pop
movsb
mov
or
mov
or
imul
shl
test
inc
add
orb
clc
mov
mov
or
push
daa
je
sbb
add
add
mov
xorb
rol
sti
cmc
ss
inc
cmp
xor
add
or
loop
or
xchg
sub
dec
imul
mov
decl
or
mov
and
sbb
flds
scas
or
movsb
popl
pop
mov
test
mov
in
decl
in
cwtl
or
repz
adc
dec
pop
push
cmp
dec
jmp
into
sahf
andb
add
loopne
repz
mov
inc
mov
das
lods
sbb
adc
sbb
stc
inc
pop
inc
cwtl
lods
sarb
xor
xlat
cmp
or
je
xchg
fsubrs
cmpsb
in
pushf
mov
mov
push
scas
mov
cmc
fidivrl
sbb
inc
add
jecxz
fimuls
test
jmp
mov
mov
sbb
xor
shlb
and
loopne
jge
push
jge
sub
or
das
arpl
addb
mov
mov
or
leave
jmp
mov
xchg
out
add
lahf
push
ret
add
xor
divb
xlat
mov
mov
test
pop
rcrb
mov
add
loope
or
or
and
in
or
adc
and
shrb
scas
xchg
fiadds
pop
arpl
pop
xchg
add
outsl
rclb
lcall
jl
pop
scas
pop
dec
insb
int3
pop
push
shlb
add
gs
jle
xchg
gs
insb
pop
or
pop
int3
cmp
imul
or
imul
add
outsl
ja
dec
in
rcrl
arpl
imul
jno
popa
mov
pop
pop
or
jnp
adc
jmp
jns
jbe
bound
in
dec
and
push
filds
mov
adcb
cltd
push
test
mov
pop
jo
into
xchg
jo
pop
imul
mov
push
addr16
mov
adc
inc
je
inc
push
xchg
cltd
cmp
insb
pop
das
or
inc
add
xor
xchg
out
sub
cmp
dec
daa
or
sub
push
inc
inc
sbb
pop
daa
pop
xchg
imul
sbb
mov
xchg
add
mov
or
outsl
sbb
fsts
adc
movsl
andl
inc
add
lods
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
daa
mov
or
imul
daa
or
mov
sub
in
out
jge
fcompl
loop
lcall
ret
push
mov
test
pop
dec
data16
inc
ret
or
add
sub
mov
or
pop
pop
cmpsl
pop
or
testl
dec
inc
push
push
inc
push
add
rcr
jg
inc
inc
inc
push
dec
push
xor
mov
and
inc
dec
dec
arpl
inc
inc
push
or
dec
inc
push
dec
dec
push
mov
jnp
inc
inc
push
xchg
inc
dec
dec
and
stc
ret
popa
out
inc
inc
xor
xor
pop
add
inc
inc
dec
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
sbb
push
push
push
dec
sub
dec
pop
fcmovnbe
lcall
inc
mov
aam
inc
inc
inc
das
mov
push
push
push
test
mov
xor
push
xlat
adc
push
push
and
outsl
push
push
dec
push
inc
scas
dec
inc
dec
les
mov
inc
cld
mov
pop
jmp
mov
js
push
pop
test
je
pop
dec
andps
push
push
pop
or
nop
sahf
jl
add
cmc
roll
clc
mov
inc
sahf
out
testb
sbbb
add
add
jns
or
out
movsb
fimull
lea
bound
and
mov
xchg
sbb
inc
or
sub
mov
dec
sbb
mov
iret
or
or
or
xlat
inc
ror
add
mov
dec
pusha
jg
cmpsl
push
or
shlb
mov
bound
andb
and
std
adc
mov
imul
mov
inc
insb
xchg
test
mov
in
rolb
test
mov
sub
mov
mov
push
js
pushl
sbb
imul
call
lods
cmp
pop
nop
and
mov
sbb
jne
pop
out
mov
jae
xchg
mov
call
imul
imul
fcoms
xor
push
cli
das
cwtl
add
push
sbb
jne
lret
jae
push
lock
shlb
push
cmp
xchg
push
and
mov
lcall
mov
icebp
jne
push
jg
push
sbb
filds
dec
rcrb
out
mov
pop
sub
adc
cs
dec
jmp
test
inc
sbb
fstp
call
jmp
adc
popw
pop
cwtl
mov
sbb
or
mov
adc
add
xlat
dec
incb
js
sarl
xor
dec
sbb
and
add
ja
jmp
sti
and
lods
adc
fiaddl
push
aam
mov
flds
jecxz
push
jecxz
ficompl
jb
jmp
sub
dec
or
inc
or
push
test
in
enter
rolb
and
test
out
inc
dec
jl
inc
ret
push
mov
cli
cmpsb
mov
repz
aam
inc
loop
push
gs
mov
or
inc
mov
xor
insb
loopne
lahf
mov
push
insl
pusha
popa
mov
insb
sub
sbb
sbb
jbe
testl
lea
push
mov
sub
aaa
xor
subl
in
sub
fsub
pushf
dec
mov
std
outsb
mov
dec
xor
sbb
jno
neg
addr16
push
movd
ficoml
jp
mov
test
ret
pop
jo
mov
lods
dec
les
xor
outsb
inc
sbb
sbb
div
sti
xchg
pop
add
loope
pop
sbb
push
mov
adcb
add
pusha
add
fdivrl
adc
mov
repnz
cmpl
nop
inc
cs
lret
fmull
mov
movl
xor
dec
add
dec
push
pop
in
mov
xchg
xchg
or
mov
pop
add
pop
add
jne
fists
in
mov
sub
inc
sbb
mov
inc
mov
insl
nop
pop
and
in
add
nop
pop
jbe
xor
jns
psubsb
repnz
pop
mov
cmp
adc
mov
push
xor
mov
pop
sbb
lods
lea
push
xor
xchg
cwtl
scas
and
loopne
loopne
mov
inc
mov
dec
and
mov
xlat
int
adc
inc
loopne
ficoms
sub
nop
mov
outsl
push
mov
pop
push
aas
inc
xor
cmp
je
mov
push
aas
push
dec
mov
fisttpll
inc
mov
add
subl
mov
clc
or
jne
nop
or
xor
or
and
lock
imul
pop
inc
popf
movsl
dec
xor
nop
iret
fistpll
adc
aam
fadds
xchg
pop
insb
das
dec
cmp
cmp
sbb
into
jmp
dec
push
es
decb
jmp
sub
jmp
je
js
add
push
adc
int
mov
popa
gs
lock
mov
xor
push
push
aas
inc
jmp
pusha
adc
aad
or
cmp
xlat
ret
mov
lea
in
dec
test
adc
add
pop
sbb
mov
movl
outsl
xorl
inc
mov
sub
cwtl
mov
movsb
repnz
inc
and
mov
pop
sub
lods
popf
das
mov
jmp
imul
push
dec
lds
ror
lea
push
pusha
adc
cmp
das
jecxz
jge
rorl
fbld
add
cwtl
shll
out
jle
and
push
or
push
add
or
pop
or
or
pop
jnp
adc
push
or
jnp
add
push
push
outsl
push
xor
or
add
cmpsb
pop
jl
cmp
xchg
mov
or
sarb
in
ret
hlt
lods
mov
flds
sub
xchg
mov
add
and
mov
test
iret
roll
sbb
cmpsl
stos
in
push
xchg
adcb
rcrl
in
and
push
push
in
pop
test
rcll
pop
iret
leave
jge
xchg
jbe
and
insl
push
nop
rep
mov
bound
jno
inc
push
popa
mov
sbb
inc
mov
and
mov
rcrl
fidivs
popl
mov
sbb
pop
dec
rclb
imul
or
add
xchg
hlt
sarb
inc
sub
in
ret
jnp
jo
jo
sub
je
sub
imul
aaa
popa
pop
enter
les
lods
daa
mov
adc
jnp
dec
mov
adc
in
pop
sub
pop
inc
stos
nop
in
dec
jb
sbb
test
ljmp
xor
and
xchg
pusha
or
mov
add
enter
push
cwtl
aam
pop
or
sbb
pushf
pop
shlb
xchg
gs
sbbb
fwait
sti
loopnew
jecxz
icebp
mov
aam
jmp
xchg
int
dec
cmpsl
loop
aad
inc
or
sub
je
push
add
iret
add
out
dec
jge
jp
push
in
pop
inc
jae
sti
in
dec
mov
and
mov
cmp
je
mov
xor
fistpl
jne
aam
dec
mov
push
jp
arpl
mov
cwtl
andb
cmpl
andb
mov
orb
mov
adc
push
cwtl
scas
imul
or
shll
sbb
mov
je
rol
xchg
or
and
push
lret
lcall
ljmp
add
push
in
push
add
adc
push
add
or
or
psrld
xor
push
xor
pop
movsl
bound
mov
add
push
or
call
orb
lahf
bound
jl
test
sti
cmp
push
or
aam
cmp
sbb
mov
in
add
test
movsb
movl
cmc
push
shld
inc
jno
push
je
xor
sti
pusha
mov
lret
ja
add
jo
add
jno
or
cwtl
aas
mov
or
mov
dec
call
test
in
mov
in
ret
nop
pop
rcr
mov
fcoms
fdivl
mov
ss
sub
sub
inc
or
cmc
pop
push
xchg
lea
movsl
and
cld
das
lea
sbb
lea
cmp
insb
sub
pop
inc
push
dec
loopne
or
lods
ret
jo
jns
xlat
dec
jg
mov
jge
not
jo
fnstcw
and
nop
call
mov
push
push
jae
xor
sbb
dec
xchg
push
and
mov
test
xchg
fcmovne
cmc
fwait
jmp
or
mov
pop
lock
ja
dec
mov
inc
movsl
pop
loopne
loopne
pop
push
push
dec
pusha
shll
sub
sub
sbb
lock
scas
push
aam
sarb
push
out
pop
mov
cmp
in
xchg
or
add
sti
xor
insl
outsl
xchg
stos
adc
lock
adc
jbe
adc
add
frstor
or
pop
cmp
enter
inc
adc
push
sbb
xor
not
and
jmp
mov
clc
pop
sar
daa
fmull
sub
push
push
sbb
mov
rcrb
inc
fucomp
mov
pop
sub
test
sbb
mov
sub
and
addb
xchg
loopne
ror
test
out
xor
push
stc
xchg
fstpt
stos
add
sbb
jo
aam
add
fldlg2
leave
lea
push
popf
cwtl
adc
mov
inc
lahf
clc
out
insb
jo
mov
cmpsl
cmp
sbb
xchg
or
lock
push
push
fmuls
sbb
and
fdivl
stos
pushw
sub
dec
jmp
jns
arpl
fisubrl
pop
mov
mov
sbb
add
sbb
faddl
cmp
push
and
inc
add
hlt
fs
fs
ds
loopne
loopne
movb
mov
les
movb
add
sub
pop
mov
out
mov
insb
sub
sub
and
mov
pop
add
push
lds
bsr
mov
movb
adc
add
xor
lock
lock
mov
nop
lea
int
push
xor
mov
add
aaa
add
add
loopne
xor
lock
jo
add
mov
add
lea
cwtl
cmpsb
imul
pop
pop
mov
add
jne
cmpl
or
cmpsb
insl
dec
inc
mov
add
pusha
add
dec
fcompl
cmp
test
pusha
or
aam
imul
ret
out
dec
js
and
cmc
in
das
test
adc
mov
enter
mov
dec
jns
jmp
push
out
pop
and
mov
sub
shl
mov
mov
mov
jp
jmp
cli
movl
add
outsl
mov
repz
movsb
xchg
cld
push
mov
inc
fwait
or
sbb
fbld
push
mov
add
into
in
pusha
test
ss
pop
cmp
in
sbb
rolb
xor
add
and
mov
or
std
lea
xor
push
cs
dec
pop
ss
jmp
addr16
data16
outsb
jo
outsl
insb
fs
xchg
pop
pop
icebp
jno
das
shll
mov
rcrb
cmp
fdivl
cmp
clc
dec
push
loopne
clc
adc
das
jp
pop
data16
icebp
dec
das
or
enter
and
loop
je
or
cmc
or
push
adcb
mov
mov
adc
lds
push
cld
pop
roll
pop
pop
push
push
addr16
mov
xor
stc
dec
sbb
addr16
xor
sarl
aas
push
dec
jmp
es
mov
pop
outsb
adc
pop
loop
adc
int3
sub
sbb
movups
add
jae
lock
xchg
mov
invd
sbb
into
or
gs
xchg
or
inc
add
push
imul
scas
ffree
lahf
dec
fnstenv
push
push
mov
sub
xchg
fadds
inc
push
arpl
cmp
sarb
jae
rorb
mov
add
push
cmp
filds
lret
mov
loope
test
je
sbb
das
mov
orb
ret
push
icebp
sbb
shrb
or
sbb
jne
push
adc
scas
xlat
gs
push
mov
jge
loope
jle
lds
cmp
mov
cmpsl
push
push
faddl
xchg
out
jmp
sub
ret
orl
movsl
xchg
or
pop
movl
push
xchg
and
pop
dec
fldcw
xor
add
in
jle
cld
push
push
add
repnz
inc
pusha
dec
jge
test
mov
leave
lock
dec
mov
psubsb
mov
loopne
fwait
dec
cs
push
mov
mov
sub
or
sti
loope
iret
or
pop
add
movzbl
sbb
adc
cmp
jo
mov
mov
mov
out
scas
adc
es
jle
cmp
jl
mov
por
imul
or
mov
cmp
jle
inc
insl
add
iret
mov
fwait
rolb
stos
pop
jo
sti
jne
enter
icebp
jb
ss
icebp
inc
ss
jnp
aam
xchg
add
lock
push
mov
and
pop
lods
push
pop
or
jmp
call
push
test
or
fdivrs
xchg
mov
mov
xchg
ds
sbb
scas
fisubs
jbe
in
test
lods
or
aad
outsb
xor
jmp
pusha
mov
sub
stos
lcall
push
inc
jo
mov
iret
dec
imul
inc
js
mov
jg
or
jl
push
cmp
mov
dec
orb
pop
push
jl
mov
cmpsl
xchg
std
testb
mov
mov
inc
sbb
pop
fsub
loop
xchg
xor
cli
nop
movb
out
call
repnz
add
sub
outsb
adc
mov
lods
adc
dec
notb
and
dec
enter
test
lods
push
dec
lcall
movsl
sbb
int3
les
pop
xchg
mov
lahf
jne
or
outsl
jne
sbb
sub
sub
das
shlb
ret
push
rclb
ss
mov
and
js
ja
aas
adc
arpl
xchg
jle
mov
es
dec
push
nop
sti
or
push
sbb
sub
pushf
mov
or
jno
aam
xchg
rol
ljmp
jbe
test
add
xor
scas
daa
andb
push
outsl
mov
pop
mov
in
adc
sbbl
adc
push
sub
or
popa
fdivl
mov
add
and
lods
mov
cmovs
push
jle
lock
jmp
test
inc
mov
push
int3
jmp
ret
stos
insb
and
sbb
cmp
orb
cmp
inc
and
add
pushf
pop
pop
in
xchg
adc
sub
add
out
fmull
mov
xchg
adc
push
mov
pusha
mov
jg
sbb
addb
adc
push
add
mov
sub
add
sub
adc
fiaddl
outsb
ret
add
or
lret
pop
iret
add
fs
fcomip
push
das
add
fisttps
sub
and
movsl
inc
sbb
jno
das
pushl
sbb
int3
push
pop
mov
xorl
push
mov
cmp
lret
xor
cmp
pusha
clc
and
hlt
xor
lcall
aam
or
fistl
mov
fcoms
decl
jb
add
in
sbb
and
lods
adc
push
call
ljmp
dec
pop
push
cmp
int3
inc
call
or
loopne
subl
sbb
pop
call
dec
jae
hlt
loopne
es
fdiv
inc
dec
pop
xor
rclb
xor
add
shrb
add
adc
mov
push
stos
mov
data16
fidivl
mov
pop
lods
mov
mov
or
lods
data16
push
add
push
scas
test
sbb
in
mov
jbe
push
push
lods
mov
mov
dec
hlt
sub
sbb
mov
fsubr
in
test
sub
bound
ljmp
lcall
out
sbb
test
int3
sbbl
adc
and
stos
inc
aas
sub
movb
pop
adc
test
jo
adc
xchg
pop
jmp
shlb
aaa
pop
mov
adc
mov
sbb
rcl
or
adc
mov
les
das
push
test
fnsave
nop
addr16
mov
add
xlat
and
hlt
push
daa
and
jmp
addr16
rorb
js
movsb
xor
dec
mov
adc
cmp
sub
fmull
sbb
ss
mov
sub
and
arpl
lods
repz
xchg
lock
in
sti
and
sub
mov
dec
mov
mov
hlt
rorb
cli
pop
test
push
add
out
repnz
lock
push
cmp
cmp
cs
push
inc
cmp
out
in
ret
add
in
push
add
clc
xorl
xor
xor
push
xor
decl
or
sbb
jo
testb
mov
repz
cltd
sbb
sub
aam
loop
pop
ret
fistpll
adc
lahf
lods
jg
push
and
mov
jae
fcomps
shr
out
pop
lds
add
out
pop
pusha
pop
add
xor
dec
call
jp
jg
out
pop
inc
cmp
or
jl
movl
ss
js
sbb
mov
out
sub
movsb
add
pusha
cmp
or
pop
bound
sarl
je
jbe
int3
xor
out
xor
adc
mov
sbb
dec
decl
pushl
or
mov
dec
sub
push
push
mov
or
imul
pushf
mov
xor
es
addb
in
pop
jp
push
sub
add
sbb
xchg
cmp
fisubl
movsl
es
xchg
add
test
xor
mov
xlat
out
add
mov
dec
adc
push
mov
insl
ret
sbb
test
push
ret
iret
pop
jmp
add
xor
adc
repnz
testb
pushl
fdivs
sub
lds
mov
adc
icebp
dec
pop
or
aas
inc
pop
shlb
sub
imull
aaa
pop
xor
aam
add
xchg
and
cmc
fcomp
sub
hlt
aam
dec
and
push
dec
loopne
pop
jmp
xor
imul
lret
fsubs
mov
repnz
fsub
aad
mov
lcall
orb
push
sub
mov
jne
loope
adc
fadd
and
adc
pop
lahf
fcoms
imul
xchg
lea
int
mov
adcb
sti
out
add
cmpsl
cmp
je
mov
mov
xor
push
fildl
pop
and
push
out
or
adc
cwtl
sahf
xor
jns
or
xchg
cmp
lahf
sarb
xor
cltd
andb
sarb
sbb
out
aaa
mov
test
push
add
test
fdivrs
scas
clc
andl
push
and
fiaddl
jne
mov
sbbb
pop
movl
or
loopne
dec
pop
call
jle
and
add
or
add
add
stos
pop
test
into
cld
hlt
sub
mov
les
rcll
sbb
repz
and
sbb
lea
or
subb
cmc
add
sbb
jne
fdivrl
rcrb
dec
in
xchg
xchg
ss
sbb
cmp
int
mov
jne
jecxz
stc
ljmp
jae
outsb
dec
mov
xor
or
je
jo
mov
jne
scas
or
mov
add
dec
insb
pop
push
and
les
sub
xchg
insb
xor
imulb
adc
cwtl
add
test
adcb
adc
sub
test
or
call
scas
pop
ja
dec
lock
loopne
push
jge
jo
mov
test
sbb
lret
repz
lods
xchg
fistpl
int3
sub
push
or
into
mov
rorb
and
add
sbb
sub
or
jb
cmp
inc
mov
aad
mov
imul
add
mov
mov
inc
ret
dec
xor
out
adc
cmp
and
or
rcrb
push
mov
pop
into
mov
mov
adc
adc
sub
dec
lock
and
sbb
push
add
xor
push
mov
adc
push
mov
ret
push
mov
test
or
inc
xorb
jbe
xchg
dec
imul
xchg
jp
add
jmp
sbb
inc
and
lock
stos
enter
mov
fsts
mov
sbb
fdivs
movsb
sbb
pop
mov
inc
pop
add
xchg
mov
mov
mov
fs
ficompl
dec
dec
add
sbb
sub
ss
push
and
xor
pop
pusha
push
and
aam
jle
and
jnp
adc
jmp
jmp
test
cmp
push
or
addr16
repnz
ret
sbb
cmp
push
out
fstp
movsb
xchg
pop
mov
pop
sbb
sbb
adc
inc
mov
mov
stc
dec
xchg
cmp
decl
call
push
and
add
xchg
sbb
jne
dec
out
cmp
adc
jecxz
sahf
pusha
out
nop
fstpt
sub
int3
insl
dec
loope
jmp
adc
mov
pop
mov
leave
xchg
jo
and
ljmp
lock
lock
mov
inc
outsl
fisttpll
fadd
cmpb
or
add
xor
fbstp
addl
xor
xor
sub
add
or
push
fcmovnbe
xchg
fcmovnb
std
pop
out
fsub
movsl
bound
dec
sarb
sub
inc
fldl
test
push
out
inc
mov
and
add
in
cmpsb
pop
mov
inc
addr16
fisubrl
jmp
leave
xchg
lcall
movsb
cs
mov
loopne
out
add
test
test
inc
sbb
call
push
sub
mov
xchg
inc
push
fwait
gs
cmpsb
lock
dec
mov
insb
imul
jge
loopne
adc
mov
sti
out
scas
in
insb
dec
and
in
ds
rorl
inc
jecxz
rorl
bound
jmp
cs
mov
insl
mov
sub
hlt
mov
loope
cmpb
cmp
pop
mov
les
das
or
inc
sub
push
lea
dec
cmp
adc
or
mov
lea
jnp
jmp
inc
loopne
pushf
adc
sub
xor
jg
inc
and
and
sub
movsl
and
cmp
add
dec
enter
fs
xchg
push
and
sbb
test
iret
add
sbb
push
inc
mov
js
js
movsb
dec
jno
or
pusha
inc
dec
or
lcall
inc
incb
xor
mov
clc
mov
jmp
jo
ret
cmpsl
mov
pushf
roll
inc
jo
add
mov
test
jmp
clc
inc
jl
push
add
cld
sbb
mov
icebp
xchg
mov
pop
mov
push
add
mov
movb
ret
lahf
xchg
mov
xor
sub
lods
sbb
daa
mov
xor
jno
push
scas
push
push
test
mov
dec
push
cltd
jae
adc
js
cmp
rol
syscall
pushf
pusha
scas
xor
mov
cmp
orb
imul
mov
movzwl
push
dec
sub
scas
shll
fcoms
dec
jae
push
pop
lds
and
lds
push
sbb
pcmpeqd
dec
lock
popa
es
push
jmp
shlb
add
sbb
ror
imul
leave
fildl
adc
sti
inc
sbb
loopne
loope
call
movsb
sbb
call
xchg
dec
lock
shlb
pop
and
sub
inc
mov
leave
popa
inc
test
and
adc
inc
pop
mov
sub
cmc
push
mov
and
sbb
add
ret
or
lods
icebp
adc
sbb
xchg
jge
sub
out
ret
fsubs
loope
xchg
bound
loopne
jle
jge
add
cmpb
mov
aad
test
push
mov
enter
js
jmp
and
mov
fldt
push
add
sub
sub
sub
ds
test
aas
imul
out
add
or
loopne
or
je
jmp
add
cld
adc
movl
xlat
jbe
inc
rcr
subb
adc
mov
dec
adc
adc
paddd
adc
pop
sbb
pusha
inc
imul
add
jmp
cmovb
call
inc
sub
xor
sbb
outsl
lahf
or
sbb
mov
pop
je
push
addb
pop
aam
call
xor
inc
jne
mov
fwait
mov
mov
ret
dec
jecxz
pop
es
xchg
mov
mov
jl
pop
jb
gs
push
idivb
pop
fists
dec
sub
push
jnp
jp
mov
add
dec
inc
or
or
data16
inc
insb
scas
pop
je
adc
push
ja
jae
add
sub
jo
jmp
lahf
push
sub
ret
or
cmpsl
scas
cs
mov
outsl
imul
inc
insb
push
inc
dec
push
cltd
add
ljmp
pop
pop
add
xchg
cltd
fnstcw
xchg
dec
insb
fnstenv
ja
lods
push
bound
push
fstl
add
shr
push
mov
clc
pop
bound
pop
imul
or
xor
fcmovb
test
add
adc
mov
sbb
ljmp
push
xor
call
clc
mov
cmpb
das
mov
jge
adc
adc
mov
adc
in
dec
dec
xchg
cmp
fmuls
push
and
or
mov
ss
adc
inc
sub
movsl
scas
push
pushf
sbb
push
push
fldenv
shlb
push
sub
ljmp
sbb
push
loopne
pop
jno
and
or
push
test
xor
test
adc
iret
jne
push
sbb
xchg
or
lahf
push
test
loope
dec
pop
mov
test
pop
adc
not
inc
inc
incb
jns
mov
insb
adcb
xchg
jne
shll
jmp
dec
adc
sub
cld
xor
mov
pop
pop
and
in
sub
or
addl
pop
es
jp
mov
push
push
cld
jo
dec
sub
out
fcoml
dec
clc
dec
test
insb
and
mov
je
pop
inc
ja
sub
pop
fs
ret
adc
sbb
in
pop
push
mov
pusha
pop
insl
pusha
std
hlt
lock
or
aaa
dec
pop
imul
xlat
push
nop
push
sbb
mov
rorb
shlb
adc
loopne
ljmp
or
ffreep
cmp
mov
filds
lcall
push
rorb
add
sarl
inc
mov
dec
push
orl
loope
mov
mov
addr16
xchg
or
xor
mov
push
std
jns
pushw
or
push
sub
pop
cmp
jp
or
call
mov
les
cmp
shl
xor
enter
mov
pop
lahf
add
in
push
aam
inc
pop
subl
pop
sbb
and
dec
mov
and
inc
mov
pop
pop
and
xchg
loopne
add
mov
mov
neg
pop
loope
mov
dec
or
bound
filds
call
out
loopne
pop
loopne
add
sub
pop
popf
aad
or
push
push
lods
int
dec
sbb
push
in
fimull
inc
xorl
jno
or
or
push
mov
orb
dec
loopne
aam
dec
and
pushf
and
adc
mov
xor
lock
loopne
iret
jbe
test
scas
add
mov
cwtl
hlt
int
jns
inc
mov
jne
or
cmp
xor
loope
addb
dec
mov
xor
push
movsb
into
pop
lods
and
fstl
sbb
test
fdivrl
lret
int3
jmp
jbe
mov
arpl
in
not
xor
shrb
pop
std
pop
repz
mov
xor
adc
addb
inc
cmc
jg
push
mov
adc
xchg
inc
addr16
aam
sbb
sbb
dec
popa
xor
or
int
add
or
cmp
orb
cmp
inc
pusha
fadds
cmp
and
dec
fdivs
sub
add
pop
loop
out
or
mov
or
jbe
adc
adc
dec
and
xor
adc
fs
movsl
cmpsl
pop
cmp
mov
xchg
adc
add
dec
jae
pushf
push
add
enter
xor
test
f2xm1
and
insl
lock
in
enter
mov
fcomps
loope
mov
mov
inc
out
mov
fs
mov
push
fisttps
cwtl
lds
sbb
cmp
retw
xchg
test
push
mov
push
dec
negl
mov
test
dec
or
ret
xor
or
scas
add
ret
jle
insl
adcl
sbb
or
enter
inc
push
jbe
fsts
xchg
xchg
mov
adc
addr16
and
pop
lods
rolb
and
cmpb
mov
test
sub
jne
or
sbb
bound
flds
jbe
sub
or
sub
push
sbbb
jo
inc
push
incb
add
call
fmul
js
jno
or
sti
sbb
loop
push
cwtl
mov
adc
adc
push
jo
push
push
xchg
push
xchg
int
and
dec
push
out
mov
lea
dec
adc
inc
jns
ror
nop
fmul
add
nop
lea
dec
and
or
sbb
mov
xchg
sub
dec
testl
call
push
addb
lea
sbb
or
jmp
push
sbb
push
fiaddl
adcl
icebp
and
or
fimuls
add
sbb
and
dec
pop
adcb
ret
xchg
fadd
movsl
push
adc
jnp
imul
or
lods
push
jnp,pt
add
roll
shl
or
sub
mov
mov
adc
movl
lahf
data16
imul
inc
int
or
pop
jb
arpl
stc
xchg
push
testl
mov
lret
xchg
lahf
adc
inc
pop
iret
push
jne
or
cmp
sbb
and
dec
sbb
bound
cli
push
rcll
sbb
sbb
aas
inc
rorb
xor
add
inc
das
aam
inc
mov
inc
leave
mov
cmpsl
fidivrs
es
lds
xorb
or
push
xor
jl
add
dec
pop
insb
fbstp
inc
mov
jmp
rolb
fstpt
outsb
sub
sub
push
inc
arpl
jl
mov
or
jge
cmp
or
mov
ss
ja
test
inc
test
add
add
xchg
int3
scas
lcall
cmp
adc
sub
gs
push
addr16
xlat
push
or
into
subb
inc
xor
fcomps
inc
pop
imul
sbb
cmp
jae
inc
arpl
cmp
push
cmp
je
lods
sub
data16
pop
inc
or
addl
cltd
loope
xor
sbb
adc
iret
inc
call
in
xchg
repnz
push
jbe
jp
aaa
bound
mov
cmp
mov
cwtl
rclb
push
add
sub
adc
and
es
inc
push
loope
jle
test
pop
push
addr16
jmp
mov
mov
inc
push
add
dec
fsts
je
pop
xchg
movsl
sarb
int3
loope
test
sub
push
mov
mov
xchg
cmp
and
mov
mov
jp
dec
jb
mov
push
add
addb
mov
das
adc
pop
jmp
add
arpl
xlat
mov
subb
mov
adc
js
mov
loope
or
sbb
inc
add
mov
add
out
cmp
aas
push
mov
or
movb
movsb
inc
pusha
xchg
outsb
lock
and
inc
xchg
fistpll
jmp
mov
dec
loop
xor
loop
mov
cmp
sti
mov
lret
mov
lock
add
adcb
adc
adc
adc
adc
xchg
pop
pop
rolb
jl
push
sbb
sub
loope
or
insb
ret
movsb
pop
add
jne
icebp
mov
adc
mov
daa
adc
shlb
js
test
aas
gs
jp
test
clc
add
call
mov
add
and
orb
mov
adc
cmp
shrl
gs
or
mov
sbb
or
fs
cmpsb
in
or
adc
outsl
push
mov
adc
roll
push
imulb
insl
stos
sarl
pop
xchg
test
movsb
cmpsl
add
mov
jecxz
push
cmpsl
pop
add
adc
mov
pop
sub
lock
jae
stos
pop
addb
lret
insl
pop
or
jno
inc
stos
pusha
stc
mov
inc
loop
lahf
test
xchg
int
jnp
cmpb
or
ret
add
cmp
enter
inc
rolb
add
shlb
mov
cmp
decb
jns
cwtl
push
jp
fidivs
ret
mov
scas
jns
ja
sub
mov
addr16
nop
xchg
sub
or
ficompl
mov
xchg
daa
push
or
ficompl
push
pop
pop
inc
mov
dec
push
sarl
in
stos
call
add
pop
enter
cmp
mov
mov
js
mov
incl
pop
and
jnp
push
push
iret
cmp
cmp
mov
add
cmp
cmp
mov
into
or
sub
shrl
sarb
sbb
push
jns
subb
subb
sbbl
dec
test
add
rorl
das
int3
dec
mov
lods
lods
test
push
js
and
sub
movl
or
xor
xor
shl
pop
adc
xlat
push
inc
ss
mov
mov
adc
inc
add
mov
addb
loop
or
popa
stos
ss
mov
fwait
sbb
cmc
pusha
xor
push
add
mov
add
add
out
dec
add
mov
das
push
and
add
inc
adc
lods
and
jno
or
jnp
mov
xor
inc
pop
call
outsb
arpl
ja
mov
dec
inc
or
add
or
loope
sbb
lock
jns
ret
mov
sbb
and
or
enter
sbb
cli
addr16
inc
cmp
add
dec
mov
xor
mov
jne
inc
cmp
ret
shlb
sub
jg
pusha
test
nop
out
add
sub
add
sbb
pop
daa
mov
adc
insb
rcr
loopne
loope
sbb
subb
aas
adc
je
pusha
lret
inc
pop
ret
nopl
mov
mov
mov
es
push
incl
enter
sub
mov
cmp
das
mov
andb
adc
loopne
or
inc
pusha
and
pusha
mov
loop
adc
imul
cmp
arpl
js
sub
sbb
push
xchg
ret
jp
in
loope
rcll
and
jl
push
fwait
pusha
mov
fldcw
pop
pushf
or
mov
int
mov
mov
sub
ret
test
dec
xor
sub
fdivrl
fisubs
or
xor
test
mov
iret
lods
mov
neg
sbb
cmp
mov
pushf
mov
les
xchg
in
lods
ret
nop
cmp
jg
sets
adc
pop
in
mov
mov
ja
rolb
loopne
mov
ds
imul
jo
sahf
adcl
inc
sbb
inc
sub
flds
fmull
iret
push
ds
movsb
mov
callw
push
or
and
mov
leave
add
pop
insl
dec
mov
dec
xchg
xlat
iret
or
inc
sbb
push
nop
xchg
subb
das
sub
lods
ja
inc
out
loope
aas
push
push
dec
adc
add
sub
and
lods
jae
sbb
or
in
xchg
lock
and
adc
ja
movsl
test
push
dec
add
mov
filds
dec
or
or
imul
xor
lods
push
hlt
sub
movsb
imul
das
outsl
cmp
lock
and
in
imul
ret
in
sbb
fnstsw
adc
daa
adc
or
cmp
mov
cld
pushf
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
pop
mov
fsub
sub
nop
hlt
xor
cmp
add
and
mov
xor
cmpb
jle
jbe
cmp
jbe
fdiv
sbb
sub
or
and
push
test
sbb
or
inc
add
adc
pop
aas
mov
sub
xchg
std
loope
adc
fisubrs
jnp
mov
add
andb
push
dec
testl
lcall
add
loopne
dec
imul
out
inc
inc
sbb
cmp
or
inc
adc
in
adc
push
jmp
ljmp
rcl
ret
ljmp
cli
cmp
dec
adc
adc
jmp
addr16
or
dec
push
push
jae
repnz
or
push
sub
cmp
push
push
jge
sbb
and
xor
pop
aaa
call
cmp
inc
dec
cmp
loopne
loopne
fwait
testb
and
or
push
popa
insb
aaa
insl
jg
add
push
pop
cmp
mov
loope
cmp
mov
sub
int3
daa
mov
add
and
jae
out
les
cld
mov
pop
stos
pop
jmp
jmp
push
sbb
scas
mov
enter
mov
mov
pop
mov
or
lock
push
adc
or
adc
adc
xor
and
rcll
ss
es
mov
inc
inc
push
pop
pushl
shlb
sub
es
enter
lock
xor
loope
mov
or
pop
sub
mov
das
adc
arpl
loope
fbstp
add
sub
daa
std
outsb
xor
dec
rorb
xor
call
ret
les
sub
cmpl
jb
push
ret
shrl
pop
enter
push
jl
aad
or
xor
jg
inc
call
push
lea
lea
call
ds
inc
inc
jl
jb
push
sub
pusha
add
adc
dec
xlat
pop
daa
lahf
dec
add
push
dec
inc
pop
cmpsl
and
inc
sub
loop
add
shlb
and
iret
cmpsl
xchg
lret
es
push
add
mov
aam
push
stc
adcl
cmpsl
cs
add
pop
out
mov
push
shrl
nop
fcoms
movsl
mov
push
add
xchg
gs
push
sbb
sub
xchg
test
pushf
or
pop
nop
pop
sbb
pop
lock
add
test
ss
sub
in
ljmp
ds
shrl
mov
adc
and
mov
adc
cmp
xchg
jne
clc
push
pop
xchg
push
insb
popa
jns
jae
push
jne
xchg
rol
stos
sub
adc
inc
mov
jmp
cmpsl
bnd
or
jo
or
daa
jns
lahf
adc
sub
ret
push
push
inc
push
fadds
dec
dec
dec
push
jb
sub
mov
lods
pop
cmp
add
mov
jg
sub
aaa
xchg
add
cmp
push
mov
decb
dec
add
pop
xor
cld
mov
pop
rcll
mov
lods
cmp
inc
pop
movsl
adc
dec
aaa
cmp
or
mov
mov
adc
mov
push
imul
in
test
lods
adc
and
popa
enter
nop
sarw
xor
push
call
dec
add
jnp
cld
es
test
imull
sub
rolb
sub
inc
fs
add
add
lcall
dec
mov
sub
shlb
push
test
xor
xor
fdivrl
add
mov
mov
int3
push
jns
mov
push
cmp
jb
and
cwtl
daa
lods
mov
add
sbb
mov
or
ja
mov
push
push
pop
xor
out
cmp
mov
out
outsl
ja
xchg
mov
push
push
mov
xchg
leave
sbb
ss
jl
sbb
iret
add
xor
sbb
shrb
cmp
js
bound
add
or
mov
adc
and
push
fsts
push
xor
xor
sarb
mov
sbb
imul
das
aaa
inc
cli
jo
cmpl
in
movsl
cs
mov
cmc
lds
jno
inc
add
insb
or
nop
nop
push
push
test
pop
mov
das
sub
clc
dec
or
fnstsw
mov
test
out
adc
add
cmp
xchg
pop
sub
das
xchg
pop
adc
adc
xchg
sbb
sbb
inc
sbb
add
lea
cli
jmp
int
or
shrb
stos
xchg
lods
and
sbb
adc
mov
adc
dec
lock
or
fsubrl
sub
mov
mov
hlt
hlt
or
cltd
inc
sbb
xor
mov
rcll
and
out
pop
push
sbb
cwtl
test
inc
call
xor
adcl
sub
js
lods
jle
push
jb
es
pop
dec
push
adc
add
jb
addr16
ss
and
imull
sbb
xchg
sub
ljmp
f2xm1
push
jb
fcoms
add
pusha
add
rcrb
sbb
fcoms
inc
wrmsr
mov
sbb
and
sub
sbb
pop
xchg
into
adc
jp
lea
and
cs
mov
popa
pop
loope
and
or
and
push
sbb
cmc
adc
fnstsw
inc
inc
mov
hlt
jne
add
cs
xchg
nop
popf
pop
testl
adc
test
and
xor
call
jle
cmc
test
and
loopne
and
cwtl
subb
leave
jns
mov
xchg
test
pop
fimull
or
xor
push
jne
xor
mov
and
loope
adc
sub
jle
dec
jne
mov
xchg
xor
cld
dec
leave
and
push
xor
lret
cli
into
and
inc
xchg
push
inc
push
cmp
add
lock
adc
fiadds
ss
jmp
daa
frstor
inc
adc
movsl
add
out
shlb
mov
and
add
xorl
es
orl
popf
sub
cmp
jmp
and
inc
rolb
inc
pop
fsubrl
imul
cs
sub
sub
or
lods
mov
mov
jmp
add
push
mov
dec
add
add
in
pop
insl
jle
aaa
adc
test
mov
push
and
mov
mov
or
push
shr
cmp
xlat
push
adc
dec
pushf
in
sbb
dec
push
dec
rcr
les
xchg
jb
add
jne
inc
dec
xchg
jmp
jbe
jmp
cmp
mov
icebp
loopne
jg
cli
loopne
shl
fucomi
and
dec
icebp
outsb
xor
sti
rolb
gs
shrb
push
ja
fcmove
nop
daa
call
mov
inc
adc
sub
sbb
inc
dec
ljmp
adc
jne
mov
xorb
test
jmp
lock
lock
pop
js
or
inc
xchg
or
call
outsl
push
push
cld
loopne
imul
xor
cmp
xchg
push
inc
and
cmp
mov
jbe
fldcw
xchg
cmp
and
or
js
xor
int3
xlat
push
pop
repnz
shrb
mov
pxor
adc
aam
lock
push
loope
inc
push
stos
flds
or
les
out
inc
push
cmp
scas
loopne
in
sbb
sbb
popf
add
xchg
fwait
or
jecxz
icebp
sub
loope
add
sub
sar
dec
je
or
sbb
pop
adc
int3
xchg
loopne
push
clc
enter
and
push
inc
shlb
xchg
adc
lods
cmp
and
and
or
mov
pop
notl
sub
cmp
jne
push
aaa
fcomp
sbb
dec
enter
adc
test
sbb
sbb
shlb
push
lock
cs
cmpl
arpl
push
test
imul
int
xor
in
pop
cwtl
dec
pop
ret
cmp
shrd
jmp
xor
cmp
cmp
imul
sbbl
test
out
lret
xchg
arpl
leave
xchg
popf
mov
sbb
leave
ljmp
test
mov
xchg
push
insb
daa
arpl
push
lock
cmp
dec
push
push
jo
push
push
xor
outsb
push
pop
jo
test
test
stos
fildl
divb
sub
lods
inc
out
pop
rolb
inc
mov
xchg
inc
int3
dec
fs
dec
in
jb
xchg
lret
cld
push
add
or
push
adc
nop
lret
push
je
push
and
push
push
cmp
pop
cmp
gs
add
test
outsl
insl
arpl
xor
mov
andl
shrl
push
sub
adc
jb
inc
inc
and
push
loope
loope
inc
outsb
dec
fcmovb
or
ja
dec
add
or
aad
roll
outsl
jae
daa
or
adc
shll
inc
jns
pusha
mov
xor
sbb
shrb
outsl
add
jbe
ds
outsl
lock
pusha
aas
or
push
and
xchg
adcl
nop
inc
aas
dec
ds
inc
xchg
jo
ds
test
fsubrs
in
push
inc
jb
xchg
test
add
xchg
testl
out
lods
das
mov
inc
inc
dec
lods
adc
int3
push
xchg
sarl
xor
pop
push
and
dec
je
inc
cmp
and
je
mov
std
cmp
sub
leave
cmp
add
decl
adc
pop
jo
test
pop
mov
cmp
cwtl
push
enter
jl
test
mov
enter
movsb
test
enter
mov
mov
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
enter
adc
enter
sbb
and
push
push
lret
enter
adc
push
sub
push
hlt
sbb
xorb
je
sub
jne
lds
pop
arpl
test
xchg
mov
mov
movsb
pop
sbb
or
fmul
adcb
subb
sbb
mov
inc
sub
xor
fstl
lret
push
cwtl
push
nop
test
inc
sub
or
shlb
and
add
push
movsb
xor
cmp
inc
sbb
int3
inc
sub
push
insb
sarb
dec
gs
fcomps
lods
loopne
push
push
movsb
in
push
sbb
cld
lret
add
adc
hlt
add
nop
and
xor
repnz
dec
sub
pop
gs
sub
add
or
test
test
adc
lret
push
sbb
sbb
push
sbb
nop
lret
adc
xor
push
sbb
xor
add
inc
cmc
xchg
inc
pushl
inc
mov
aaa
jne
je
gs
sti
xor
gs
lahf
adc
jae
and
sbb
lds
push
and
xor
or
imul
popa
jb
mov
daa
mov
je
mov
push
or
test
mov
xchg
gs
rcrl
add
pop
dec
and
mov
sbb
je
fs
test
mov
insb
jns
jp
jae
mov
addb
pop
jae
pop
pop
pop
add
sahf
and
pop
outsb
pusha
int
test
or
xchg
xchg
push
or
arpl
cmpl
mov
adc
push
mov
iret
outsb
ret
or
dec
xor
outsb
imul
jo
out
cmp
lods
sub
and
and
inc
push
or
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
jge
or
ja
and
rcll
jns
in
icebp
and
xchg
jne
insl
outsb
jo
mov
das
pop
fs
fcomps
jo
inc
imul
icebp
mov
mov
or
and
xor
sub
push
xchg
fwait
mov
add
sbb
adc
adc
fs
mov
dec
enter
dec
xor
adc
xchg
push
cmp
xor
pop
sbb
loope
repnz
aad
faddl
subl
cmpsb
sar
xchg
xor
or
mov
xchg
js
cwtl
inc
and
imul
cmp
push
outsl
nop
and
nop
dec
pop
dec
fs
sbb
inc
mov
add
xchg
add
push
and
in
stc
push
add
xchg
add
push
xor
push
in
push
cmp
and
nop
dec
pop
jo
sbb
inc
mov
fnstcw
xchg
add
sbb
out
pop
js
mov
notl
cwtl
push
pop
iret
adcl
push
push
sbb
dec
inc
clc
dec
jl
int3
dec
push
add
out
adc
or
decl
ljmp
mov
sbb
add
and
out
xchg
flds
xor
enter
push
stos
mov
adc
inc
andb
mov
pop
cmp
cmp
ficoms
arpl
add
mov
jns
cmpb
sahf
into
mov
push
push
lods
xor
sub
inc
xor
test
movb
faddl
inc
mov
cs
push
aaa
xchg
push
inc
cld
imul
scas
aaa
inc
adc
adc
js
jbe
pop
jg
adc
cmp
loopne
rcr
rol
mov
rol
pop
adc
xor
inc
push
xor
push
jbe
es
pusha
xor
mov
pop
dec
sub
dec
call
mov
xor
hlt
mov
push
fwait
dec
popa
in
jno
adc
push
push
or
dec
arpl
leave
out
js
mov
rclb
pop
pop
cmp
xlat
sub
jne
mov
add
fidivrl
loop
mov
dec
mov
inc
insl
dec
lock
push
dec
mov
adc
popa
dec
mov
xlat
and
cs
inc
push
add
int3
mov
pop
cmp
pop
xchg
mov
add
or
aaa
adc
add
xor
xchg
pop
addr16
nop
outsb
popf
add
push
push
test
pusha
cwtl
push
mov
test
out
adc
dec
dec
pop
dec
dec
outsl
add
adcb
aaa
lods
imul
pop
push
push
add
dec
outsb
inc
gs
fsubrs
pop
push
outsl
pop
cmp
or
and
mov
shrb
add
mov
mov
ds
sbb
ret
and
dec
jne
arpl
enter
pop
push
out
and
and
hlt
pusha
xor
jge
ja
mov
dec
jnp
push
insl
fs
addr16
push
pop
cwtl
adc
add
sub
arpl
and
or
and
leave
aaa
aaa
add
mov
outsb
iret
dec
lahf
mov
test
nop
mov
xorb
iret
lods
jb
xor
je
pop
jo
enter
inc
insb
aam
push
jns
iret
xor
xlat
xor
push
push
insb
iret
leave
lods
sub
pop
or
push
push
sbb
adc
lods
out
xorps
cmp
mov
mov
aaa
sbb
outsl
push
push
pop
loopne
mov
inc
push
and
arpl
mov
adc
pop
mov
test
add
pop
fcoms
push
lds
rcl
les
lock
icebp
cwtl
jle
push
inc
push
imul
testl
mov
jo
or
loopne
mov
jae
sbb
push
jns
pop
and
mov
xor
push
pusha
cltd
orl
mov
sbb
pop
dec
stos
adc
comiss
jl
sbb
add
lock
push
cmp
mov
pop
jle
and
test
add
rorb
je
pop
jg
movsl
xchg
xor
adcl
lahf
test
inc
ret
jmp
lods
cli
add
loope
push
cltd
test
aad
add
nop
out
fmul
jmp
mov
inc
mov
inc
cmpb
xor
je
sbb
fs
xor
pop
push
inc
pop
cmp
xchg
pop
adc
adc
repnz
lahf
pusha
xor
mov
cmp
je
sub
or
xor
jbe
js
jnp
iret
and
or
sub
repnz
dec
inc
xor
addr16
pop
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
and
and
cmp
cmp
cmp
cmp
sub
sub
cmp
cmp
cmp
cmp
adc
adc
cmp
cmp
cmp
cmp
sbb
sbb
cmp
cmp
cmp
cmp
add
add
and
cmp
cmpsl
stc
mov
push
lods
clc
cwtl
movsb
sahf
out
sahf
lock
call
sahf
out
fadds
sahf
out
shrb
out
sahf
mov
test
mov
jns
inc
nop
cmp
out
sahf
out
subb
sahf
out
sahf
jo
push
lahf
out
pop
add
cld
push
dec
repz
repz
inc
in
cmp
iret
repz
xor
sub
and
cmp
repz
les
mov
repz
lods
clc
xchg
movsb
out
sahf
out
pushf
call
jns
mov
test
jl
jns
out
je
insb
mov
out
pop
test
mov
dec
cwtl
inc
out
je
cli
ror
je
mov
je
adc
pop
dec
loopne
push
sbb
mov
in
jo
adc
sub
and
div
cmpsb
pop
enter
outsl
sbb
mov
dec
cmpb
push
addb
pop
pop
xor
std
and
mov
jo
sarb
push
mov
and
arpl
bound
pop
popl
mov
aaa
or
add
or
add
or
xchg
in
mov
push
loopne
ja
dec
sahf
sub
sub
push
sahf
xchg
iret
enter
hlt
mov
in
das
sbb
les
inc
adc
cmpsl
lahf
js
movsl
imul
mov
scas
dec
cmp
push
xchg
sti
jg
pop
mov
jle
mov
mov
repnz
in
jo
sarl
es
pop
xchg
xchg
sahf
pop
daa
lcall
cltd
inc
shrl
mov
xchg
dec
push
pusha
iret
mov
xchg
inc
cmpsl
les
sbb
iret
dec
inc
push
dec
jg
stos
dec
cmp
loopne
test
repnz
or
clc
xor
mov
or
das
adc
ja
scas
sub
in
int3
sbb
adc
insb
pop
fld
sarb
mov
loope
pop
push
int3
scas
popf
push
xor
fcoms
ret
cld
pop
outsl
add
and
test
mov
lods
pop
test
push
or
cmp
push
push
adc
inc
outsl
jb
popa
je
outsl
shlb
and
jb
xor
ret
mov
cld
rcr
dec
or
js
xchg
scas
sbb
or
or
or
inc
rcrl
leave
les
adc
pop
pop
fcompl
dec
movsb
or
or
popf
sub
maskmovq
negl
lahf
inc
cmpb
adc
mov
adc
mov
jl
out
pushf
stos
xchg
pop
jo,pt
les
iret
test
push
popa
pop
push
push
push
adcb
push
test
mov
inc
daa
sub
insl
pusha
jg
and
xor
xor
dec
imul
sub
push
add
mov
or
add
sbb
neg
imul
pop
adc
outsl
pop
js
out
jnp
fsubl
add
es
jb
jb
dec
mov
sbb
es
out
inc
pop
bound
jbe
es
or
jne
pop
addr16
jb
addr16
add
fidivrl
mov
arpl
insb
daa
stc
mov
jg
sub
in
jnp
in
insb
das
je
cmpsl
sbb
ss
mov
imul
ret
and
mov
idivl
jb
arpl
sbb
fnstsw
jb
pushw
das
gs
mov
imul
jmp
pop
xlat
sub
ret
and
and
outsb
xor
sahf
es
mov
dec
dec
cmp
cmpsb
ficompl
add
push
mov
shrb
push
xchg
adc
fisttpl
push
divl
outsb
sub
sbb
ret
pushf
sti
and
mov
add
inc
sahf
sub
mov
movsb
pop
sbb
add
and
jl
or
xchg
cltd
insl
ss
inc
mov
insb
insb
push
loope
mov
mov
rolb
dec
lahf
mov
mov
mov
inc
push
jne
pop
call
sbb
add
repnz
std
xorl
push
out
xchg
mov
enter
or
pop
xchg
jg
mov
cli
or
xorb
push
jae
xor
xor
mov
sbb
cmp
cvttps2pi
adc
xchg
movsl
mov
or
int
test
jp
out
cmpsb
or
pop
xor
jmp
lret
dec
nop
cltd
adc
inc
movsl
repnz
movsb
jmp
sbb
or
nop
js
and
sub
inc
mov
inc
jae
int3
jbe
fs
psubq
dec
call
stc
bound
arpl
dec
shll
add
add
push
pop
pop
or
or
or
or
or
or
iret
movups
adc
adc
iret
repz
push
pop
sbb
aas
iret
repz
sbb
push
pop
and
and
and
push
data16
imul
loopne
fs
sbb
ds
repz
dec
pusha
jno
xchg
movsb
cmp
repz
xlat
call
stc
or
sub
dec
out
sahf
out
jo
xchg
mov
mov
in
repz
push
insb
push
push
sbb
cmp
xchg
test
ss
mov
add
pop
push
or
add
push
push
adc
adc
push
movsb
jb
in
sbb
sbb
sbb
push
sub
push
and
and
adc
in
sub
xor
pop
push
mov
adc
push
cs
and
pop
dec
dec
in
lret
sbb
mov
sbb
cs
pusha
dec
movsl
repnz
ja
push
popa
imul
bound
arpl
push
sub
and
push
sub
xor
and
repnz
adc
xorl
and
stos
add
in
popf
test
les
push
divb
jo
mov
adc
fmull
fmul
inc
loope
inc
mov
test
add
pop
dec
out
xor
lea
lret
mov
mov
push
js
lock
out
je
or
pop
push
jns
sub
clc
push
adc
push
add
inc
outsl
and
sbb
sbb
lock
ja
notl
daa
sbb
pop
xchg
or
loopne
xchg
jne
ficomps
loopne
jl
outsb
imul
jl
mov
dec
push
pushf
pop
sbb
push
jno
inc
cltd
lret
hlt
pusha
mov
loope
push
mov
push
orb
sbb
test
cmp
sub
push
mov
jae
adc
popf
cmp
mov
pop
adc
pop
cmp
mov
imul
lcall
pop
jno
enter
enter
movb
sahf
push
cmp
xchg
inc
add
es
pop
iret
jnp
stc
push
add
sbb
xchg
push
inc
push
lock
push
adc
push
push
adc
add
push
inc
xor
fs
ret
push
adc
je
pusha
mov
outsl
outsb
sub
imul
push
dec
push
or
fwait
inc
inc
push
lcall
jno
aam
cld
dec
push
xor
inc
adc
add
or
cmp
inc
mov
pop
into
aam
out
mov
ds
push
enter
test
xor
ds
enter
mov
push
aam
jbe
push
and
insb
lret
aad
cmp
fcomps
scas
mov
mov
loopne
fdivl
les
pop
xlat
mov
nop
adc
dec
repz
add
int
jge
aam
push
dec
cmpb
cmp
cli
cmpsb
les
cmp
mov
orb
xchg
popa
xchg
rclb
iret
push
or
sub
outsl
pop
sub
adc
and
push
je
call
pop
lock
pop
imul
fisubs
lods
push
fiadds
sbb
sbb
and
add
jae
sbb
jne
push
out
dec
aam
je
add
mov
mov
mov
idiv
enter
faddl
pusha
jbe
push
loopne
loope
divl
pop
icebp
jmp
inc
sahf
xchg
pop
sbb
adc
lds
add
inc
sub
test
or
ja
popa
stos
dec
push
xor
xor
mov
inc
push
in
ds
leave
pusha
mov
mov
mov
mov
pop
inc
jo
js
inc
dec
add
jns
dec
pop
int3
adc
lret
jb
cmpsb
jge
sti
sub
push
test
nop
dec
ret
lock
je
arpl
clc
fdivr
push
adc
test
pop
jae
adc
je
clc
mov
mov
iret
or
cmp
pop
inc
hlt
hlt
adc
or
call
xor
cmpsb
movsb
addb
pop
lea
movsb
sahf
xlat
or
sbb
pop
pusha
add
orl
push
cmp
pop
test
mov
lock
insb
pop
jne
test
in
test
or
xchg
lcall
fs
popa
nop
jae
int
adc
adc
sbb
pop
or
sbb
mov
push
sbb
push
cs
pop
out
lcall
fwait
into
dec
mov
add
sbb
or
sahf
out
loop
jne
dec
cwtl
cltd
movsb
outsb
mov
sbb
fadds
pusha
aas
pop
push
ret
xor
inc
mov
sub
inc
into
inc
ss
inc
mov
into
je
rcrl
icebp
mov
jae
aam
or
les
and
rcl
adcb
sub
and
pop
push
ja
pop
in
and
into
cmpl
xchg
xchg
cmp
push
cmp
inc
in
ss
or
negl
data16
push
push
and
push
cmp
push
dec
adc
lock
mov
and
fdivrs
fmull
in
lcall
bound
sbb
es
mov
rol
daa
mov
inc
nop
inc
enter
aas
aad
inc
inc
js
je
nop
add
idivb
fadds
int
mov
ja
aam
loopne
in
js
pop
sub
jae
pop
enter
call
or
dec
push
jo
mov
push
xchg
pusha
mov
inc
in
sbb
fldenv
inc
fmuls
roll
loopne
roll
shrl
fiadds
xchg
fcompl
push
inc
loope
cmp
das
xchg
rcl
out
loop
clc
pusha
adc
dec
xor
call
xor
xchg
aam
in
jne
add
adc
push
xlat
add
or
enter
dec
jl
pop
cmp
inc
pop
cmp
loop
push
mov
pop
xor
popf
lock
orb
push
and
jb
mov
int3
aaa
adc
cmp
jmp
pop
add
inc
out
add
sbb
add
mov
pop
ss
popf
rolb
setge
rorl
pop
add
pop
pop
push
ret
adc
mov
orl
and
cmc
adc
inc
pusha
pop
sub
cli
jl
js
call
mov
inc
jne
loope
jl
ljmp
push
xor
dec
sub
mov
std
adcl
jmp
cmpb
cmpsl
popa
add
add
js
aam
push
insl
push
xor
and
cmc
mov
add
fisttps
add
dec
adc
lea
jp
sub
cmpsl
push
cmp
xchg
clc
repz
adc
inc
lock
js
movsb
idivl
add
cli
orl
sub
or
cwtl
push
jno
out
add
push
push
mov
mov
pop
pop
jl
sbb
sbb
inc
mov
fwait
das
hlt
mov
push
mov
cwtl
insl
and
sahf
mov
shlb
rorl
fildl
cmc
lret
test
lods
and
fdivrl
repnz
hlt
loop
or
jg
test
and
cmp
je
push
xlat
push
rclb
push
add
mov
sbb
mov
mov
xorb
aas
xlat
clc
pop
cmc
les
add
mov
movsb
or
lock
pop
je
or
or
push
push
dec
dec
in
sahf
jge
xlat
add
movsb
dec
mov
and
jp
pop
cwtl
jmp
out
icebp
jbe
inc
xor
or
mov
sbb
adc
sub
pop
sub
test
adc
adc
and
fwait
dec
rcrb
inc
cmp
jmp
and
push
add
cmpsl
push
jb
or
push
xor
push
cmp
add
push
inc
in
cmp
mov
adc
aaa
mov
pop
jbe
xchg
ret
out
das
test
jle
adc
xchg
call
mov
pop
jmp
jnp
xchg
adc
shr
fbstp
repz
dec
push
jge
movsl
cmpsl
pop
aas
lods
or
inc
mov
movsb
shrb
dec
mov
cmp
cmp
add
mov
jo
push
jg
jmp
push
xchg
cwtl
inc
loop
lods
inc
jg
test
push
scas
mov
mov
push
or
int
lcall
xorl
loope
sbb
and
outsb
jae
ret
cs
dec
dec
loop
mov
inc
inc
cmp
sbb
add
xchg
mov
leave
add
js
imul
jb
jno
movd
outsl
sub
dec
dec
mov
outsl
and
inc
insb
pushf
mov
addr16
dec
outsb
pcmpeqb
adc
dec
mov
cld
jns
push
pop
sahf
out
cmp
add
sbb
jns
xor
push
dec
jmp
aad
pop
mov
icebp
cmpsb
fs
and
pop
mov
dec
jp
cmpsl
adc
push
pop
lahf
dec
add
mov
and
aam
test
std
or
add
push
cmc
lods
shlb
cmp
or
out
sub
xchg
loope
sbb
stos
sub
push
or
mov
sbb
iret
and
sbbl
push
cmpl
decb
adc
cwtl
sub
dec
mov
into
push
cld
mov
fwait
cmp
xor
xor
loope
sub
scas
cli
pop
dec
add
dec
testb
lea
test
dec
fimull
add
or
movsb
add
push
jmp
sbb
xor
and
push
and
mov
loopne
mov
dec
imul
xor
rorb
add
xor
ret
adc
jns
add
loope
jmp
lret
xchg
adc
push
lods
lahf
sbb
jl
add
sub
inc
shr
cmp
push
inc
into
jno
dec
pop
jge
insl
sbb
ret
jae
add
push
in
ret
loope
mov
pop
imul
add
sub
cs
mov
nop
inc
lock
or
mov
push
pop
mov
sub
and
jmp
sub
pop
and
inc
clc
mov
inc
loopne
fmuls
lea
inc
in
cmp
mov
and
enter
pop
fs
push
jne
in
adc
dec
inc
call
sahf
adc
roll
mov
clc
stc
sub
rol
xchg
fistl
and
jne
mul
aaa
std
decl
arpl
cs
sub
sub
and
sub
sub
fucomi
push
pop
sbb
cmp
sub
sub
and
xor
push
or
cs
xchg
xchg
or
movb
add
in
push
les
out
xor
or
dec
cmpsl
aas
mov
int3
xor
and
mov
and
mov
aam
mov
jg
popf
pop
adc
subb
mov
mov
jno
aad
push
mov
mov
and
fldcw
push
mov
mov
inc
repz
mov
dec
xchg
test
stc
mov
cmp
sub
incb
insl
jo
inc
call
mov
xchg
push
cmp
dec
mov
mov
or
add
push
pop
imul
pop
push
addr16
mov
loope
mov
mov
pop
imul
or
sbb
mov
adc
ret
cltd
inc
movsl
ja
das
sbb
pusha
adc
cmc
je
sub
pushl
or
pusha
nop
andl
or
or
aas
sub
sbb
add
add
jo
adc
mov
xchg
cwtd
inc
fiaddl
subl
adc
adc
inc
loope
add
in
js
or
adc
xor
dec
fildl
stos
adc
sub
jae
mov
or
das
dec
insb
adc
sub
addr16
jl
xchg
and
ja
pop
push
or
or
mov
xor
test
mov
mov
mov
dec
dec
dec
inc
dec
push
add
pop
shlb
mov
dec
and
test
xor
aaa
aaa
les
or
or
sbb
push
dec
xchg
lret
aad
mov
scas
add
aas
sbb
mov
sub
xorb
ljmp
cmp
jne
sub
jb
jne
mov
insl
insl
mov
inc
sti
jmp
cmp
cmpsb
mov
loopne
mov
dec
pop
add
cmpsl
inc
daa
adc
xor
xor
leave
mov
push
jp
inc
mov
add
shll
pushf
subb
and
push
dec
pop
adc
or
cmp
cmp
popa
test
sbb
loopne
adc
mov
aaa
xchg
xchg
test
inc
push
adc
sbb
imul
pusha
pop
sub
sub
addb
jmp
nop
inc
push
adc
or
add
push
cli
mov
or
xor
inc
loopne
adc
dec
xchg
jno
mov
fdivs
cmp
adc
xlat
xchg
add
outsl
ss
adc
clc
inc
or
and
xor
scas
cmp
mov
out
loop
mov
jae
lock
push
pop
test
dec
mov
lock
aaa
lret
test
add
shlb
mov
cmp
or
ss
push
mov
add
jle
ss
add
push
jne
ficoms
jmp
push
jbe
pop
add
add
or
inc
outsl
mov
sub
lea
and
sbb
pop
outsb
adc
xor
or
inc
xchg
add
xchg
jmp
xor
push
lods
sub
ret
push
mov
jne
pop
mov
out
out
int3
push
xor
nop
in
call
push
rorb
sub
cld
add
or
mov
and
insb
xor
insb
xchg
cwtl
ds
jl
jns
pusha
jl
fsubrl
lods
mov
pusha
push
push
pop
pusha
lock
gs
nop
outsl
mov
pop
cmp
or
sbb
cmpsl
test
ss
pop
ds
and
xchg
lods
jbe
loopne
dec
add
xor
push
push
adc
add
jg
pop
nop
xchg
pushf
pop
call
add
and
adc
xchg
js
dec
mov
jo,pt
faddl
in
insb
pop
push
scas
mov
mov
inc
push
sub
inc
push
pusha
push
mov
mov
pushf
or
inc
jnp
pop
sub
xor
sbb
xchg
xor
test
sbb
in
scas
xchg
adc
popa
and
outsb
xor
mov
enter
out
cmp
inc
and
jge
fs
push
fldl
nop
movl
outsl
adc
aaa
dec
mov
mov
addl
or
aaa
or
test
mov
lds
in
sbb
and
push
mov
adcb
mov
push
jbe
fidivs
icebp
sbb
xor
insl
bound
push
ret
and
push
jns
adc
and
jo
sbb
loopne
or
inc
sub
mov
inc
jne
push
arpl
dec
push
xor
pop
ja
mov
jbe
pop
xor
or
outsl
shlb
pop
adc
sbb
or
push
dec
jo
push
jo
pmaxub
movsb
cs
imul
imul
mov
data16
push
or
xchg
dec
add
or
cmp
mov
pusha
sbb
add
or
rorl
imul
fidivrs
or
pusha
push
sub
add
pop
jp
jg
insb
pusha
cmpsl
test
hlt
pop
fsubl
mov
rol
out
push
test
adc
in
sbb
mov
hlt
sbb
adc
sub
sbb
outsl
or
pushf
add
or
push
add
hlt
js
inc
or
mov
or
pop
sarb
xchg
inc
adc
xchg
imul
ffreep
decl
or
and
roll
xor
and
push
add
and
jmp
xor
sti
insl
xchg
inc
mov
pop
jno
pop
shr
test
add
xchg
add
pop
in
adc
decb
bound
mov
jb
add
cmp
xchg
out
add
add
and
mov
adc
pop
stos
insl
adc
xchg
dec
dec
push
add
loopne
pusha
in
sub
adc
ja
xchg
fldcw
jmp
add
inc
pop
cmp
popf
add
jo
xchg
repz
faddl
adc
mov
pop
inc
nop
pushf
cmovb
adc
in
ret
ror
into
cld
nop
cmpsl
icebp
andb
push
dec
or
pop
jmp
cmp
imul
inc
sub
mov
mov
call
xor
xchg
pop
mov
and
pop
pop
pop
mov
xchg
iret
add
iret
mov
mov
adc
push
stos
or
cwtl
pop
adcb
and
inc
or
mov
xchg
gs
or
sub
jl
jle
cmp
jnp
add
paddusb
push
outsb
xor
add
mov
mov
fmull
add
orb
aad
adc
bound
arpl
fst
xlat
outsb
add
jmp
push
mov
add
adc
add
je
push
and
scas
pop
jo
add
shrb
add
loope
cmp
push
pop
add
mov
sub
js
push
jg
xchg
sarb
ficoms
xlat
gs
mov
out
mov
push
mov
mov
les
dec
sbb
das
shlb
pop
adc
or
lock
imul
popa
bound
or
popa
lret
syscall
push
ret
or
sub
pcmpgtb
add
push
jo
test
or
repz
out
and
adc
or
test
les
iret
jl
inc
or
push
pop
and
pop
add
mov
pop
ljmp
enter
sbbb
inc
das
mov
jno
dec
in
enter
dec
fcmovnb
das
in
rolb
push
push
adc
call
cs
jge
int3
mov
push
xchg
dec
sub
add
add
add
add
add
ljmp
xchg
push
or
pop
add
or
cli
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fistps
jmp
ljmp
jmp
jmp
jmp
jmp
or
loop
loope
loopne
fdivrp
fdivr
fisubl
call
call
call
call
call
call
call
call
dec
dec
fdivr
aaa
lret
int
int3
dec
dec
icebp
dec
lcall
in
push
sub
js
jns
jnp
push
push
mov
lahf
out
daa
xchg
lock
cwtl
lock
test
push
or
adc
repz
loope
cmpsl
dec
and
lock
push
cmp
push
out
push
mov
sahf
divl
push
push
je
inc
sbb
mov
fcomp
jnp
inc
xchg
out
out
jno
mov
fisttps
sbb
je
iret
sbb
insb
loopne
lahf
out
jl
ffree
dec
fisubrs
loop
and
xor
cmp
and
push
push
push
out
xchg
data16
adc
enter
imul
or
inc
out
sbb
push
fdivr
or
mov
cs
jle
mov
push
leave
xor
imul
pop
sbb
adcl
out
or
adc
int
sahf
out
or
cmp
clc
inc
add
add
sub
and
add
jmp
dec
inc
mov
cs
push
sub
pusha
fdivrs
je
call
incl
test
push
dec
cmp
cmp
sarb
xor
pop
xor
pop
inc
or
sbb
jbe
xchg
mov
cmp
xlat
sub
pop
add
test
push
icebp
mov
jg
fwait
cmp
pop
call
dec
jg
dec
ret
movsb
inc
jle
dec
jp
or
add
fwait
pop
dec
pop
pusha
sti
mov
push
xor
xchg
lds
and
mov
mov
lcall
jns
sbb
add
or
jo
call
or
add
bound
inc
push
out
sar
add
adc
jns
iret
jl
inc
sarl
sbb
dec
cmp
and
push
push
iret
mov
adc
dec
add
aaa
outsb
adc
adc
add
jbe
jge
and
add
add
pop
or
adc
das
add
clc
insl
add
addl
cmp
test
adc
sbb
sbb
pop
sbb
add
add
aaa
mov
mov
jo
inc
stos
xchg
or
adc
adc
and
and
mov
mov
mov
mov
mov
add
push
mov
xor
cmp
push
rcrl
add
in
inc
inc
inc
inc
inc
incl
inc
inc
ss
cmpsb
std
mov
lock
pop
andl
mov
mov
mov
mov
pop
add
and
add
and
cmp
repz
mov
cld
sarl
and
inc
int3
mov
fdivl
sti
out
adc
push
lods
sub
sub
sub
int
sub
shl
and
jbe
lahf
pop
jl
xchg
dec
or
push
and
jle
push
imul
mov
and
lahf
out
pusha
int3
dec
jbe
cmpsb
push
insb
sti
cmp
repz
test
and
push
sahf
out
mov
xor
mov
iret
mov
movsb
push
sbb
mov
sbb
repnz
cwtl
push
mov
mov
aaa
xchg
push
test
mov
test
ds
sub
sub
jge
pushw
insb
sahf
pushf
dec
push
push
dec
sarb
out
jge
int
cmp
clc
es
jge,pt
iret
repz
or
mov
sub
pop
or
sbb
jnp
dec
jnp
sub
push
orl
push
data16
lods
sbb
sbb
push
mov
push
xorl
loopne
test
ja
fbstp
mov
mov
xchg
rolb
inc
or
jb
test
mov
pop
push
mov
bound
loopne
push
daa
sbb
aas
pop
sub
push
outsl
add
cmpsb
cmp
pop
in
mov
push
pop
lahf
mov
and
adc
dec
orb
dec
and
push
xchg
dec
push
rcl
push
sub
push
or
clc
es
adc
in
add
mov
push
fs
aam
repz
mov
pop
and
leave
mov
rorb
add
xchg
or
inc
rorl
pop
mov
outsl
mov
jmp
nopl
mov
or
xor
add
or
adc
xor
add
and
adc
les
inc
sub
lahf
daa
push
mov
add
mov
mov
xchg
popf
movsl
mov
cmp
repz
repz
mov
test
sub
je
or
inc
push
int3
push
pusha
mov
xchg
js
js
fs
mov
or
inc
add
inc
pop
mov
adc
pusha
rol
ja
je
pop
add
out
push
jb
push
movsb
lahf
dec
inc
popa
mov
lahf
sbb
push
aad
push
xchg
fwait
lea
mov
xchg
nop
or
orb
sub
lock
xor
push
push
and
cmp
sbb
add
pop
nop
xor
inc
sbb
imull
stc
add
inc
movl
add
add
push
insb
sbb
cltd
sbb
push
push
icebp
in
sbb
rcrb
loopne
dec
std
sub
cltd
pop
mov
jno
inc
push
int
add
and
jne
xor
and
lock
andb
jne
adc
clc
inc
subl
or
xchg
or
pop
inc
add
or
pop
lods
sbb
adc
out
mov
or
orb
sub
out
mov
rcrb
pop
adc
jns
dec
inc
or
or
outsb
adc
lods
movsb
push
xchg
daa
push
fmuls
push
leave
inc
push
push
inc
push
inc
cs
pop
daa
push
jo
daa
or
shr
addb
sbbl
rorb
xchg
daa
dec
push
jo
imul
or
psubusb
push
popa
push
daa
add
xchg
inc
inc
and
hlt
sbb
das
loopne
lcall
in
or
inc
fbstp
mov
push
lcall
inc
cmp
les
ret
or
adc
in
jmp
inc
lret
dec
cmpsl
scas
lods
mov
jl
xchg
test
adc
and
loope
das
xchg
push
les
js
je
ret
sbb
jbe
call
cmp
jo
xchg
mov
sbb
repnz
rcrl
push
out
sub
xchg
adc
psrlq
push
and
mov
sbb
leave
sbb
es
out
adc
pusha
xor
push
cwtl
test
add
fs
nop
sub
push
push
xchg
adc
jo
mov
incl
xor
fildll
cmp
jl
mov
aas
imul
mov
sbb
lret
or
and
imul
ret
cltd
adc
les
jno
add
xlat
sub
fsubl
fnstsw
mov
sbb
leave
das
add
mov
sbb
sub
lods
push
adc
xchg
aas
adcb
dec
jne
out
adcl
push
cmp
cmp
aam
mov
shlb
shll
jg
addb
push
push
sbb
stc
add
add
adc
rcrb
dec
rcll
inc
or
adc
adc
sbb
xor
shll
and
sub
pop
xor
sub
scas
push
push
xchg
or
icebp
pop
mov
in
push
in
jg
inc
add
jne
add
test
push
bound
je
cmpl
adc
adc
inc
sub
mov
sbb
or
je
lock
xchg
dec
je
pop
and
ja
xchg
scas
sub
and
cmp
cmp
dec
sbb
mov
jo
and
popf
cwtl
adc
add
cmp
push
adc
mov
xchg
adc
popa
sub
adc
sub
je
rcrb
push
cmpsl
add
sub
sub
ss
and
in
dec
shrb
mov
or
nop
fadd
repz
or
ja
jae
jg
xor
push
lods
or
lock
loope
adc
add
xchg
je
mov
jmp
es
sbb
cmpb
mov
inc
je
inc
adc
and
jle
or
mov
and
and
int
push
add
repnz
xor
mov
fbstp
inc
add
iret
outsl
add
sbb
push
jp
and
add
bound
mov
sub
icebp
mov
pop
inc
movsb
mov
add
inc
pop
cmp
inc
dec
mov
add
daa
jae
mov
sbb
into
and
mov
xor
bound
xchg
lds
pop
adc
mov
aaa
and
push
xchg
mov
pop
push
insb
insb
jbe
iret
mov
lea
add
add
mov
rolb
sub
addr16
add
bound
pop
xor
rcll
inc
arpl
adc
sahf
popf
jne
add
push
rorb
pusha
and
adcl
sbb
mov
adc
or
es
push
sub
lock
xchg
mov
les
mov
in
jle
or
rclb
addr16
push
or
neg
xchg
inc
inc
aad
and
cmp
daa
fiaddl
cmpsl
test
pusha
sbb
pop
mull
mov
cmp
adc
push
call
pop
cmp
idiv
ja
add
push
add
incl
dec
outsl
pusha
sarl
jb
mov
adc
jmp
cmp
test
int3
adc
test
dec
add
xchg
or
mov
rolb
add
not
movsb
and
jl
xchg
pushf
in
push
rcrl
xor
sbb
sti
xor
fiadds
outsb
sub
mov
notl
xor
xor
or
cmp
lods
cmpsl
popf
mov
test
mov
and
sti
push
mov
sub
icebp
adc
jbe
push
lods
inc
imul
popa
sti
or
add
sti
mov
push
xlat
jle
xor
dec
inc
lea
push
and
cltd
dec
aaa
push
adc
dec
sbb
and
js
sarb
aaa
adc
in
sub
add
mov
adcb
shlb
mov
mov
push
xchg
add
in
pop
lods
loopne
dec
in
incl
xchg
sub
mov
js
jmp
lock
mov
push
pop
cmpl
cs
jo
push
aam
sub
je
ror
xorb
sbb
mov
outsl
ret
xorb
sbb
adc
sub
push
lea
imul
mov
pop
lea
mov
sub
push
or
insb
add
jecxz
shll
mov
sbb
jle
inc
push
mov
sub
daa
mov
dec
arpl
cmpsl
fstl
sti
add
add
and
pop
or
cmp
jne
add
mov
or
sub
sbb
and
mov
or
sub
je
popf
sbb
mov
push
cmp
push
cmpsb
jo
xor
inc
jne
and
adc
divb
shlb
adc
outsb
test
dec
mov
movsb
fimull
pusha
pop
in
sbb
lock
push
xchg
jbe
jbe
push
pop
mov
mov
push
add
loope
dec
test
lock
out
and
pop
inc
sub
cmp
xor
js
lods
ss
jmp
fmuls
fwait
inc
cs
mov
test
leave
and
int
mov
mov
adc
jmp
scas
movsl
test
sub
jmp
push
test
jmp
or
insb
jmp
mov
pushf
sbb
inc
mov
pop
shlb
push
pop
fisubl
arpl
test
pop
cmp
push
xchg
mov
pop
jne
pop
or
inc
enter
out
sbb
jl
mov
cmpl
subb
mov
adc
mov
xchg
push
loopne
mov
add
je
out
shrb
rolb
in
push
pushf
sub
and
dec
cli
mov
sbb
mov
push
adc
mov
mov
sti
or
add
mov
sub
mov
insb
sub
or
pop
push
clc
mov
push
sbb
pop
dec
sbb
jnp
xchg
mov
mov
xor
inc
inc
pusha
lea
mov
movb
pop
mov
insb
xchg
add
xor
sti
lea
adc
jmp
out
jae
mov
cmp
cmovae
adc
pop
loop
add
ficompl
mov
pop
pop
inc
es
add
lds
or
mov
shll
js
inc
lods
les
and
cmp
cmovae
and
push
push
testb
fists
push
sbb
std
dec
adc
pusha
jne
mov
xor
cmovno
xor
and
jmp
pop
mov
mov
fsubrl
sub
and
push
or
cmovb
mov
aas
push
andl
clc
push
cmp
jl
push
inc
fcoml
pop
lea
popa
adc
adc
push
mov
dec
xor
mov
dec
mov
mov
out
out
sbb
icebp
push
pop
lret
int
sti
sub
jbe
not
or
stos
xor
xor
dec
pop
fdivrl
rol
ret
stc
cmp
jge
mov
xchg
or
mov
mov
adc
mov
inc
imul
cmp
out
aas
add
imul
inc
inc
push
or
stc
icebp
imulb
nop
and
cmp
fistpl
dec
or
call
stc
fstpl
fwait
jmp
inc
and
rolb
cmp
out
and
lret
inc
mov
adc
cli
imul
arpl
insl
pop
sub
rclb
lcall
sbb
fcomp
hlt
cmp
outsl
jmp
sub
add
adc
mov
xchg
pusha
jo
cmp
xchg
add
add
outsl
inc
clc
mov
es
sub
pop
mov
iret
add
mov
or
sub
add
dec
add
lret
dec
or
add
lea
and
add
xchg
jecxz
sbb
jns
les
mov
out
fisttpl
sbb
addr16
mov
cmpl
mov
mov
imul
dec
or
or
inc
pop
sub
imul
mov
nop
mov
js
call
in
mov
push
dec
sub
add
mov
xchg
popa
out
push
fcomps
push
dec
xchg
shlb
push
cli
fst
and
push
mov
cmp
dec
xor
xor
ror
ficoms
mov
jne
sbb
popl
xor
fisubs
sbb
jne
js
mov
jbe
jo
cwtl
or
push
pop
or
stos
ss
jo
ds
inc
incb
or
lods
add
sbb
cmpsl
fwait
mov
mov
mov
sti
movb
adc
adc
push
cltd
mov
and
adcb
punpckhdq
stos
adc
andb
xlat
insb
cmp
add
cmp
and
jmp
inc
mov
loop
je
pop
mov
or
add
enter
icebp
push
and
mov
jmp
mov
push
pop
outsl
je
les
add
test
cmp
addb
add
cmp
sbb
stos
and
or
jmp
mov
xlat
push
cmp
mov
mov
ja
shll
push
sub
cltd
dec
imul
pop
daa
ljmp
fdivrs
adc
cmp
bound
jo
xchg
aaa
subl
arpl
mov
mov
xchg
add
pop
and
sbb
and
notb
outsb
adc
mov
ss
loopne
mov
jl
ljmp
mov
daa
xchg
add
outsb
sbb
daa
dec
ret
jecxz
dec
mov
sahf
fwait
push
repz
lds
push
imul
faddp
inc
les
jno
lods
pop
xchg
les
sbb
cs
cwtl
sbbb
enter
dec
add
sbb
or
dec
push
push
inc
push
dec
adc
inc
addr16
push
mov
bound
stos
iret
and
add
rsqrtps
outsl
add
sbb
add
add
mov
test
mov
push
imul
roll
ret
or
lock
mov
mov
lea
push
pop
daa
insb
cld
xchg
inc
pusha
mov
movsb
sti
push
jnp
dec
jecxz
mov
mov
sbb
mov
add
mov
cs
lahf
dec
xchg
mov
cmp
ja
movb
sub
inc
sbb
mov
hlt
imul
or
es
add
xor
push
push
mov
lahf
pop
loopne
test
fwait
test
outsb
add
dec
sub
icebp
mov
jmp
lret
out
andl
pop
lea
push
insl
cmp
std
mov
jo
iret
scas
icebp
and
jb
pop
mov
clts
push
sub
and
pop
adc
shrl
or
pop
outsb
pusha
mov
sbb
add
xchg
jae
sub
jns
and
int3
sbb
pop
pop
mov
addb
xchg
fiadds
arpl
mov
out
movb
add
fnstenv
lea
dec
rcrl
or
or
jne
xor
pop
or
xor
mov
sub
movzwl
decl
lret
add
jmp
cmp
je
mov
test
jbe
xor
push
adc
or
mov
ss
and
push
or
adc
add
aaa
fists
pop
cmp
cmp
sbb
dec
cmp
or
jmp
sbb
clc
add
test
xor
cmp
sub
add
cli
adc
sub
xchg
rol
lods
mov
pop
push
or
pop
mov
cmp
sbb
cmpl
in
and
popf
pop
inc
lahf
jne
adc
addb
test
mov
add
loopne
pusha
add
adc
insl
in
cmpsl
pop
and
push
sub
sbb
lret
dec
stos
jmp
pop
mov
inc
push
sbb
bound
aad
lock
shrl
inc
sub
dec
pop
sbb
jecxz
push
js
sbb
or
mov
daa
in
xchg
sbb
or
mov
inc
push
gs
jle
adc
mov
add
cmp
mov
dec
and
dec
mov
push
orb
push
cmp
scas
imul
pusha
lock
cmp
jp
mov
jb
adc
pop
cmp
jo
xchg
adc
imul
pushl
push
add
cmp
pop
in
jne
cmp
mov
cld
subl
cmp
and
cmpsl
xor
or
or
mov
aaa
sbb
enter
fisubrl
cwtl
lret
xlat
xor
ss
mov
es
push
orb
cmp
adc
movsb
push
sti
jae
mov
sbb
add
pop
cmp
inc
popa
loopne
push
xor
jmp
ljmp
dec
sti
rcrl
inc
movl
push
add
pop
pop
mov
sbbl
add
test
hlt
jmp
shlb
ds
add
dec
or
ret
cs
ja
or
add
mov
push
mov
mov
insb
out
cmpsl
push
lea
shrb
inc
xchg
ljmp
aad
jmp
push
inc
insb
xor
shrb
je
push
jge
dec
call
movsl
nop
popf
push
pop
ljmp
sbb
das
inc
and
cmp
xor
inc
movsb
sbb
addl
loopne
pop
call
cmpb
pop
mov
insb
xlat
icebp
cmp
inc
xor
movsl
xchg
hlt
or
les
pop
in
fsub
mov
pop
dec
daa
sub
sti
call
push
cmpsb
lds
and
cwtl
xor
sbb
lods
or
fadds
cmp
or
pop
mov
pop
xlat
mov
mov
adc
ret
bnd
push
mov
pop
sbb
sbb
xor
sbb
mov
push
cmp
mov
arpl
mov
push
xchg
test
loop
test
out
in
add
xor
inc
pop
popa
and
or
int3
ds
mov
mov
push
xor
inc
das
push
adc
lock
push
cmp
cli
adc
subl
loopne
sbb
xchg
clc
or
mov
mov
dec
dec
push
jle
int3
xor
xlat
adc
cmpsl
and
mov
push
arpl
xor
lock
nop
call
fdivl
and
jb
xor
mov
cmpsl
xor
and
sahf
mov
cmp
jne
stc
or
and
cmp
jne
sub
js
push
add
pop
call
inc
int3
xchg
clc
leave
mov
xor
jbe
jne
test
cmpl
aam
lods
pop
push
je
cmp
push
movsb
mov
sub
sahf
xor
jle
ret
ljmp
cs
lds
inc
pop
mov
scas
inc
dec
push
push
testb
push
inc
xchg
test
into
or
and
rcl
and
sbb
dec
dec
xchg
clc
push
dec
or
fstpl
cmc
sbb
jne
pop
dec
jne
or
imul
and
ret
cmp
push
lret
mov
inc
mov
or
cld
lock
jl
inc
add
rorb
iret
and
dec
addb
jle
pusha
add
jecxz
cmpsl
sub
test
mov
cmp
frstor
sarl
cmp
xchg
nop
jle
cmp
insl
and
mov
dec
mov
push
adc
adc
sar
pop
cwtl
add
pop
or
dec
push
jmp
inc
adc
fs
sub
jo
imul
cmp
and
incb
sub
jg
hlt
pop
popl
inc
xor
push
pop
push
push
insl
mov
das
pop
dec
xor
loope
xchg
outsl
das
push
push
loopne
mov
roll
mov
cwtl
cld
inc
inc
lret
mov
push
inc
dec
add
push
insb
pusha
push
fistl
inc
push
xchg
or
in
ss
add
in
outsb
bound
outsl
mov
inc
adc
in
and
cmp
and
dec
sbb
adc
mov
or
imul
fcoms
dec
arpl
jge
xchg
mov
mov
push
aad
cmp
cli
clc
dec
mov
pop
rcrb
arpl
adc
pop
scas
lds
out
jmp
sbb
out
rorl
mov
fadds
call
sti
cltd
and
lods
sbb
mov
imul
or
adc
or
add
in
dec
xor
rolb
hlt
addb
cmp
cld
or
pop
fs
cmpsl
pop
mov
or
outsb
dec
add
push
cmp
mov
pop
sbb
fsubs
ret
cmp
in
pop
pop
ljmp
adc
and
xor
cmp
push
pop
sub
inc
xchg
mov
mov
jo
add
mov
mov
inc
shr
aam
fdivrl
cmpsb
or
adc
lods
pop
pop
mov
push
pop
insl
insl
ror
inc
inc
call
bound
addl
movups
sbb
fiadds
push
or
lret
sbbb
push
and
stos
mov
mov
add
mov
sbb
mov
sub
jb
cmp
mov
or
roll
pop
dec
stos
mov
jo
outsl
nop
sub
pop
xor
and
cmp
mov
movsl
nop
jo
adc
mov
inc
and
push
inc
or
mov
out
and
push
imul
dec
nop
ret
or
dec
fadds
pop
dec
andl
scas
inc
les
sbb
orl
ss
movsb
ss
call
imulb
adc
inc
jo
dec
inc
ds
sbb
movsb
sub
sarb
push
out
mov
mov
xor
mov
mov
sub
test
mov
insb
in
jl
mov
nop
add
pop
ret
ja
ss
lcall
pop
in
daa
or
cmp
and
and
test
in
and
sbb
add
pop
ret
xorb
pop
push
and
pop
cmpb
add
push
push
bound
xchg
adc
test
jge
out
je
jecxz
xchg
and
adc
xlat
add
stos
sub
adc
inc
xor
ret
adc
mov
and
leave
and
aam
inc
push
and
ja
dec
mov
lahf
pusha
mov
push
inc
sbb
lods
push
mov
and
jne
add
scas
push
rorl
jne
pusha
leave
int3
call
dec
shlb
mov
loopne
xor
clc
mov
adc
push
adc
sbb
inc
dec
movsb
mov
mov
push
inc
inc
scas
movsb
cmpsl
sbb
aas
cmp
in
push
sbb
aam
add
dec
adc
or
dec
int
stc
nop
out
lock
imul
sub
jp
pop
mov
adc
orb
test
jne
mov
je
mov
imul
cs
push
add
or
sbb
jle
adc
cltd
xchg
fadds
es
scas
pop
sbb
mov
jo
add
lock
adc
and
push
xor
idivb
dec
adc
add
les
cltd
aad
loopne
lods
mov
sbb
or
xchg
or
sbb
stc
loope
and
mov
mov
xchg
je
mov
movb
dec
ret
addl
cmp
cmpsb
pop
sub
lcall
insl
push
pop
pop
push
cmp
xor
cmp
adc
les
jecxz
inc
push
out
add
push
or
jno
xor
call
aas
mov
xor
adc
jnp
je
mov
push
cmpsb
roll
dec
aas
jge
push
dec
cmp
shufps
dec
and
je
mov
sbb
mov
push
jo
and
imul
adc
pop
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
xchg
rorl
pmaxsw
or
rorb
jl
outsl
sub
js
loope
loope
mov
xor
push
outsl
add
ret
scas
sub
or
insb
mov
inc
mov
in
pushf
xor
imul
xor
sbb
pop
push
jle
sarb
je
sti
shll
decb
sbb
xor
sti
push
mov
mov
push
mov
ret
div
cmc
or
sbbb
mov
loope
lea
mov
sbb
mov
sbb
fisubl
xchg
movsb
mov
add
popa
lahf
imul
mov
rcrb
cmp
push
lock
dec
xchg
cmpb
ret
cmp
inc
mov
add
cmp
xchg
xlat
jns
jnp
pop
adc
sub
sub
push
rorb
mov
add
push
decl
lea
mov
imul
push
add
adc
push
imul
lea
jmp
add
pop
pusha
outsl
je
push
stos
or
adc
adc
adc
push
cs
outsl
addl
jl
bound
iret
popa
adc
fidivs
sbb
pop
push
shlb
inc
rcr
add
inc
pop
ja
push
add
pop
out
or
movsb
sbb
lock
int3
cmpsl
sub
loopne
xor
out
cmp
jne
sbb
xor
mov
cmpsb
pop
outsl
inc
inc
sub
stc
rcl
imul
cmpsb
pop
inc
sbb
add
push
popa
clc
adc
fcompl
fsts
inc
popa
mov
mov
test
jo
sbbl
add
jne
packssdw
and
dec
push
inc
fcoms
jp
repnz
cmpsl
pop
das
add
add
outsb
pop
adc
test
push
xlat
data16
adc
enter
jg
loopew
xchg
and
and
mov
lea
fsubrs
or
ljmp
gs
push
js
leave
adc
test
pop
imul
lock
ret
lea
les
inc
test
nop
add
aad
addl
jo
mov
inc
sbb
mov
or
sbb
add
movsl
pop
ja
movb
lcall
clc
sub
dec
or
push
lret
test
in
mov
push
push
pop
fnstsw
xor
call
sub
inc
fadds
add
in
leave
adc
xchg
sbb
outsl
movsb
std
cmpsb
sbb
sbb
xchg
jo
fisubrl
and
sbb
mov
mov
hlt
inc
sub
adc
ss
adc
mov
and
inc
or
loope
xor
ds
mov
adc
pop
add
fwait
lea
fnstsw
aaa
sub
jl
pushf
mov
fucomp
adc
sbb
decl
add
mov
lea
pop
sub
inc
inc
mov
fsts
je
cwtl
jl
mov
push
insb
push
mov
add
mov
pop
mov
fildl
inc
jecxz
adc
mov
adc
pop
or
pusha
js
or
add
es
add
arpl
push
cmpsb
xchg
or
aas
sbb
fwait
jb
mov
notb
xchg
adc
roll
adc
movsb
rclb
insl
adc
pushf
shlb
xchg
sub
mov
pop
inc
lock
neg
pop
lea
dec
mov
mov
loope
shl
xor
adc
loopne
mov
mov
movsl
addl
aam
and
inc
push
cwtl
add
je
or
inc
push
cmp
add
add
or
fnsave
or
pop
jl
in
insl
ja
dec
bound
dec
dec
lahf
add
adcb
inc
inc
shrb
mov
push
pop
loopne
mov
outsl
arpl
icebp
lcall
dec
sub
sub
out
stos
lock
scas
pop
loop
fs
icebp
inc
call
add
call
mov
ret
cmp
push
testb
dec
test
frstor
jecxz
adc
cmp
aaa
fidivs
sub
sub
das
in
or
mov
aam
inc
in
push
xor
add
fsubl
sub
imul
mov
jl
leave
call
stc
es
iret
mov
xchg
les
in
outsl
or
xchg
rorb
aaa
push
notl
enter
in
das
xchg
sahf
push
inc
cmp
xor
inc
add
add
je
sbbb
cmp
push
and
shld
inc
or
fwait
or
inc
loopne
push
mov
mov
adc
mov
add
xor
lret
data16
inc
imul
or
test
or
pop
mov
xchg
movsb
jo
cmp
add
fcmovb
push
jmp
push
fmull
mov
mov
inc
mov
loopne
sub
jp
aaa
sbb
add
push
adc
test
xor
push
pop
hlt
push
hlt
into
insb
es
xchg
enter
stos
in
lods
cli
popf
jle
aad
sahf
sti
jmp
arpl
sbb
jo
inc
and
lds
adc
adc
and
and
hlt
jo
xchg
pop
sub
in
or
add
rcl
xor
sbb
xor
push
pop
testl
xchg
jne
dec
pop
adc
js
jb
test
jne
pop
push
imul
ja
and
and
vaddsd
sbbb
aaa
aam
push
xorb
jl
shl
out
clc
mov
push
or
das
pop
rcrl
cmp
xchg
insb
mov
sbb
sub
xchg
push
cs
or
and
cmc
or
pop
ds
pop
add
add
jo
mov
les
xor
add
add
inc
adc
je
out
fidivs
dec
add
adc
or
cmp
lods
mov
movsb
test
sar
into
orl
mov
jmp
sub
int3
or
cmp
ret
pop
inc
mov
mov
fucomip
pop
xlat
cltd
xor
and
or
adc
rcll
shll
xchg
out
or
cltd
je
out
int3
enter
clc
sar
jl
or
push
insl
jp
clts
pusha
add
outsl
cltd
cli
stos
sbb
add
xor
divb
add
push
and
add
lahf
outsl
push
push
je
push
mov
jbe
insb
xor
or
adc
jb
xchg
push
sub
sub
ret
in
jb
or
xchg
cmp
notb
push
fnstsw
mov
pusha
adc
fdivrs
mov
dec
mov
sub
add
roll
or
or
dec
repz
add
jmp
sub
push
add
push
inc
add
icebp
or
add
jl
aad
add
cmpsb
adc
pop
add
and
pop
dec
push
rcrl
or
daa
sub
dec
mov
rcll
dec
mov
or
mov
mov
pop
inc
jae
addr16
xor
and
inc
fimuls
inc
xchg
pop
mov
or
outsb
fimull
jmp
xchg
sbb
sub
dec
aaa
sub
inc
rolb
and
je
add
imul
xchg
mov
loopne
sbbb
cmpb
and
test
and
add
inc
dec
add
mov
xchg
dec
jle
xchg
pushf
jne
faddl
sub
fiaddl
stos
jb
divl
cmp
sti
nop
jp
push
xorb
add
xchg
in
subl
inc
sub
dec
je
add
pop
jmp
ret
mov
pusha
mov
cs
jne
pop
add
sub
lods
dec
push
or
push
jmp
out
dec
push
outsl
xchg
pop
add
pop
popa
les
sub
or
cmp
jne
lret
jg
adc
push
clc
xor
and
sub
xor
negb
push
pop
adc
and
cmp
push
pusha
mov
loopne
sub
ror
in
inc
xchg
fucomip
pop
roll
je
test
add
jmp
fisubl
movsb
addr16
loopne
fdivl
and
test
inc
inc
subl
dec
jmp
outsb
pop
cmp
xor
ja
inc
int
xchg
adc
dec
andl
push
sbb
add
fldt
std
pop
nop
mov
xor
pop
sub
enter
popf
push
insl
sbb
cmp
sbbb
sub
inc
pop
or
je
and
sub
inc
cli
stos
iret
push
clc
adc
dec
shrb
mov
jmp
and
push
adc
popf
push
movsl
sbb
filds
es
ss
or
xorl
rcrl
arpl
imul
ss
in
xchg
ret
jmp
popf
push
arpl
sub
fists
dec
lret
aaa
sub
sub
lods
xor
xor
dec
jp
je
add
std
xor
aam
inc
cmp
adc
mov
xchg
inc
pop
xor
jg
call
rorb
das
or
les
pop
dec
jmp
shr
dec
pop
or
fcom
daa
adc
dec
aad
movswl
or
sbb
mov
dec
add
add
iret
rorl
rolb
mov
add
jle
mov
or
in
add
dec
mov
push
test
fdivl
movsl
faddl
fld
mov
scas
rcl
jnp
nop
out
movsl
jmp
dec
xor
jl
rcrb
mov
jmp
rcrl
push
add
sub
add
ret
popa
andl
adc
jo
xor
or
int3
pop
invd
mov
fwait
jne
sahf
icebp
or
test
dec
rorb
pop
xchg
loope
lahf
movsl
bound
loope
dec
out
jno
jno
sub
pop
dec
je
fiaddl
mov
dec
mov
inc
mov
outsl
push
fidivl
mov
movl
repnz
cmp
dec
fs
cmpl
sub
bound
mov
push
addb
pop
pop
push
jns
insl
mov
inc
stc
cs
enter
in
xor
dec
mov
xor
inc
data16
dec
inc
and
mov
mov
push
sbb
push
push
cmp
inc
in
incl
xchg
rolb
and
xchg
bound
ret
cmc
or
jecxz
addl
mov
inc
aas
loopne
sub
add
xchg
jb
xchg
jne
sbb
dec
loope
mov
shlb
inc
mov
add
xorb
mov
and
and
jne
iret
aam
jns
xor
movb
mov
xchg
cwtl
xor
cmp
and
scas
in
or
das
fdiv
aam
jno
jle
je
push
lock
add
inc
bnd
adc
adc
jle
sbb
dec
dec
cmp
adc
dec
lds
sub
test
add
sbb
inc
sbb
cmp
inc
cmp
sub
sub
or
sbbl
scas
jbe
loopne
sbb
add
push
fidivrl
fwait
jg
lods
daa
test
jp
decb
lock
lea
mov
fs
jo
mov
cmpsl
popa
pusha
je
jp
jae
or
ljmp
mov
jle
aam
push
lods
dec
push
or
push
add
loop
or
inc
ja
add
test
inc
mov
mov
aaa
or
and
cmp
jg
mov
xor
mov
and
cmp
out
pop
adc
daa
push
inc
push
cmp
mov
loope
and
and
ds
movl
pop
insb
ret
push
sbb
sbb
das
adc
inc
add
sub
divl
sti
clc
test
inc
pop
cmp
adc
jecxz
add
les
or
xchg
xchg
incl
ss
fists
in
shl
and
sarb
popa
loopne
sbb
loopne
orb
mov
sub
pop
fcomps
xor
sub
dec
or
ret
or
lock
xor
mov
sub
pop
aad
outsl
mov
dec
push
mov
movl
add
xchg
jbe
push
loopne
and
mov
push
adc
clc
adc
or
sub
leave
push
pop
daa
pushf
add
inc
pop
sbb
dec
fs
push
push
ss
and
sbb
mov
aad
rcrl
outsl
adc
daa
mov
or
pop
push
clc
or
repz
xchg
outsb
mov
push
fs
xchg
adc
insb
bound
dec
pop
or
inc
incb
jae
cmp
outsl
mov
outsb
jg
push
cmpb
or
inc
loope
lahf
jo
fs
xor
xchg
stc
pop
inc
or
jnp
jl
adc
inc
sub
dec
jo
negb
andl
jne
les
cmp
jecxz
mov
test
fidivl
or
mov
movsl
xchg
push
and
mov
cmp
xchg
mov
and
mov
sti
inc
xor
leave
push
shlb
and
mov
nop
push
aaa
fdiv
xor
cltd
push
mov
xor
ret
sbb
adc
mov
mov
mov
out
xchg
dec
add
dec
adc
jle
xor
movsl
fcomip
inc
pushf
js
xor
scas
cmp
and
pop
inc
mov
push
fcompl
mov
adc
inc
and
aaa
test
sub
arpl
enter
popa
or
push
dec
js
jle
and
add
lds
mov
jmp
fidivrs
add
insl
cmp
push
add
test
into
dec
loopne
inc
push
lock
dec
cmp
xchg
aam
fwait
subb
adc
sahf
ja
nop
xor
xor
and
test
fwait
mov
pop
cmp
sti
add
xchg
outsl
mov
dec
je
add
jmp
bnd
in
mov
add
adc
outsb
ret
push
sbb
in
test
sbb
insb
jae
out
data16
sbb
jns
push
dec
push
push
dec
ret
leave
fcoml
pop
add
ss
popl
imul
out
add
aad
aas
ljmp
cmp
js
pop
add
cmpb
cld
pop
pop
inc
or
or
or
adc
ljmp
inc
push
sbb
loopne
lea
xchg
or
jmp
mov
add
xchg
and
sbb
ret
mov
push
or
jne
inc
and
out
pop
das
rcr
or
sbb
mov
cmpb
mov
sbb
jnp
mov
sbb
push
fs
int3
dec
js
cld
ret
add
inc
sub
cmp
push
rcr
cmpsl
xor
js
xchg
and
cmp
inc
push
xor
movsb
fildll
or
cmp
pop
mov
inc
mov
xor
sbb
cld
les
xor
push
add
push
rorb
sub
jo
out
in
or
xlat
pop
cmp
and
mov
adc
lock
adc
lea
xchg
shrb
push
fmuls
mov
pusha
das
mov
andl
arpl
jo
testb
fs
push
shll
cld
pusha
mov
aad
push
mov
popf
xchg
fimuls
or
sbb
rol
adc
call
xchg
jecxz
and
pop
xchg
and
neg
dec
inc
cmpsb
cmp
faddl
jmp
ret
mov
icebp
sti
sbb
rorb
cli
cmpsl
sti
sbb
stc
dec
jbe
pop
nop
neg
cld
push
jne
shlb
cwtl
dec
pop
or
add
mov
dec
cmpsl
xchg
pop
push
int
add
hlt
jbe
std
js
jns
cltd
pop
sahf
sbb
adc
or
lret
and
mov
xor
nop
sub
frstor
jbe
pop
jge
push
dec
fsubs
enter
sbb
in
pop
pop
stc
xor
icebp
mov
addb
fistpl
or
dec
popf
cmpsb
out
add
test
jbe
sub
enter
mov
lahf
sub
sub
mov
pop
in
or
adc
addr16
mov
pop
cmpsl
jb
add
outsl
lahf
push
push
pop
push
mov
jb
and
jnp
out
xchg
mov
mov
daa
shl
push
inc
cmp
setg
jmp
dec
mov
dec
dec
movb
dec
cmp
setle
push
lcall
es
add
adc
or
mov
jl
push
test
pop
sarb
in
loope
cli
push
inc
sti
gs
inc
popa
add
push
adc
nop
xchg
xchg
inc
ficompl
aam
xchg
adc
xchg
adc
mov
dec
push
inc
js
ret
xor
push
xchg
and
stos
pop
test
gs
les
xor
pop
xor
push
sbb
add
clc
popa
mov
lea
je
adc
adcb
subl
mov
in
jmp
aaa
hlt
jmp
xorl
sub
faddl
and
in
ret
or
mov
xchg
mov
xchg
lock
add
inc
dec
xchg
in
or
movb
pop
xchg
sbb
add
movd
sbb
xchg
or
in
push
jne
ret
pop
icebp
xor
push
push
push
cmpsl
add
jl
push
sub
ds
jb
sub
or
pop
or
add
adc
out
imul
lret
push
mov
lock
cld
push
incl
scas
shlb
out
mov
lods
push
shll
in
orl
jns
add
or
pop
jle
sub
lods
or
xor
fcmovu
paddsb
adc
push
sbb
test
cmp
sbb
inc
mov
rorb
xchg
and
or
push
sub
add
inc
jb
add
push
pmulhw
cs
push
mov
cli
add
xchg
push
mov
sahf
out
jecxz
add
lea
mov
sub
call
aas
adc
inc
cmp
sbb
fisubs
pop
orl
aam
hlt
sub
inc
sub
mov
outsl
sbb
sbb
sub
bound
cmp
pop
jne
std
cltd
sbb
loope
sub
or
bound
cmp
and
jo
cmpb
mov
scas
bound
inc
xchg
adc
or
dec
push
cmp
addr16
idivb
push
je
inc
mov
add
add
inc
divb
cmp
adc
sbb
jge
inc
out
pop
xor
and
sarl
iret
xor
jne
pop
fidivl
aas
and
mov
int
and
push
ror
call
pop
cmpsl
jne
inc
or
shrl
pop
sub
es
sub
insb
sub
pop
outsb
sbb
push
jne
das
addl
pushl
pop
test
push
adc
inc
incl
dec
cmp
lock
mov
fisubrs
pop
add
pop
mov
push
std
and
stos
hlt
cwtl
pop
cmp
sub
xchg
in
xchg
mov
pop
iret
add
push
out
repz
add
push
add
push
out
adc
lea
ja
mov
ja
cmpsb
sbb
adc
pop
add
jbe
push
out
adc
pusha
nopl
pop
pop
rorl
jb
push
jnp
push
outsl
cmp
and
pushf
mov
test
pusha
push
out
lods
mov
xlat
call
ffreep
push
mov
adc
std
jne
and
pop
dec
add
bound
jb
jo
mov
xchg
hlt
out
subb
or
dec
xchg
mov
fdivs
inc
xchg
pop
imul
xor
inc
push
and
inc
scas
pop
cmc
xor
lret
dec
sub
pop
cld
shll
cmpsl
add
mov
add
inc
mov
adcl
test
pop
cmp
xchg
fbld
sub
jo
sbb
hlt
xchg
fwait
test
test
or
push
xor
jl
inc
dec
inc
or
aas
ds
inc
dec
jne
push
shrb
mov
dec
test
cmpsl
adc
sarb
jmp
mov
adc
insb
enter
pop
les
bound
add
out
fs
mov
jmp
pop
xor
aad
xor
xchg
add
dec
mov
into
orb
or
ss
sub
sbb
int3
jne
push
push
mov
shrb
add
aam
test
and
mov
mov
xchg
push
sbb
or
xor
sub
jl
xor
jl
push
mov
mov
test
repz
mov
pop
dec
shll
ret
and
movsb
test
or
xor
ret
inc
or
xlat
fstpt
pop
mov
xor
dec
add
push
xchg
ss
shlb
sar
iret
aas
jmp
adc
jmp
lds
fiadds
mov
mov
pusha
xchg
filds
movsb
fisttpll
sub
xor
lahf
push
push
push
sub
add
sbb
cmp
jle
mov
rcl
sub
jnp
push
addb
lock
in
imul
adc
sbb
mov
inc
fidivs
lea
test
mov
cmp
push
jle
mov
mov
mov
xchg
mov
movzwl
or
rolb
cs
cmp
out
aam
and
mov
xchg
sbb
inc
movsb
push
or
xchg
push
pop
and
js
imul
jnp
xor
and
pop
and
add
or
sbb
jbe
lock
push
orl
loop
mov
add
push
sub
jnp
lods
mov
sub
inc
mov
inc
mov
push
xchg
push
loopne
mov
or
push
dec
mov
add
inc
clc
dec
fcoms
lea
cld
adc
pop
lods
add
dec
sub
mov
adc
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
mov
mov
sbb
xor
sub
loopne
nop
xchg
out
je
add
pop
sbb
mov
push
sbb
mov
dec
add
xor
stos
jo
push
dec
and
push
pop
adc
inc
test
xor
inc
mov
jo
aaa
xchg
adc
movups
cli
sub
je
adc
cwtl
xchg
and
jae
test
inc
int3
sub
inc
pop
adc
or
push
sbb
test
out
inc
nop
jmp
add
inc
inc
jp
arpl
test
or
ficoms
out
sbb
shll
and
mov
cvtps2pd
jp
test
inc
inc
add
sti
out
and
cmp
and
or
mov
add
cmp
out
cwtl
scas
and
data16
mov
andb
add
dec
push
mov
jo
scas
xchg
mov
in
add
sub
mov
outsb
loope
test
add
icebp
shrb
mov
or
loopne
out
js
test
test
jmp
cmp
fadds
push
cmp
cmp
adc
xchg
lock
shll
cli
adc
jne
add
daa
addb
sbb
xchg
out
mov
push
mov
xchg
xor
mov
dec
adc
mov
insl
pop
cmp
mov
mov
sbb
inc
pop
mov
mov
or
aaa
sbb
mov
outsl
or
and
lea
jecxz
adc
testb
and
ret
loop
add
pusha
cmp
fimuls
or
popa
lea
popa
jne
loopne
push
pushf
lea
or
jo
inc
and
rcrl
adc
pop
mov
sahf
imul
xor
mov
and
push
lods
push
or
shl
add
or
fildll
ljmp
iret
rol
imul
jge
mov
sbb
fstps
inc
add
clc
enter
sbb
imul
pusha
push
outsl
add
pop
lahf
data16
and
cmp
adc
xchg
nop
dec
and
shr
inc
arpl
push
int3
shl
bound
gs
or
xchg
add
lds
mov
notl
jmp
push
shl
fcompl
sbb
rcrb
and
inc
popa
pusha
movntq
out
push
out
test
sub
and
das
adc
or
sti
nop
and
adc
stos
ret
gs
inc
push
lea
mov
add
mov
test
jbe
xor
mov
mov
mov
scas
mov
nop
cmpl
or
mov
clc
repnz
xchg
pop
dec
mov
or
jne
int3
ret
xor
xchg
stos
popa
fbstp
fwait
adc
xchg
icebp
ja
or
push
or
adcb
mov
sbb
xchg
daa
lds
adc
rcl
mov
rclb
pusha
je
jbe
xchg
jb
orb
je
sbb
mov
nop
push
loopne
adc
int
xchg
popa
add
sbb
push
xor
mov
pop
arpl
sar
movsb
movsl
jo
jmp
hlt
sub
int3
xchg
ret
mov
mov
adcb
pop
data16
inc
mov
mov
js
mov
je
aad
sbb
dec
faddl
cmp
iret
and
mov
jl
mov
xchg
sub
mov
mov
lods
test
daa
add
out
mov
mov
mov
imull
or
mov
add
inc
sbb
adc
inc
cli
mov
xor
imul
push
or
movntq
pop
push
add
ret
push
loopne
push
inc
mov
and
mov
addr16
cmp
pushl
add
sbb
icebp
push
push
xlat
int3
test
sub
inc
fsubrs
jne
push
inc
cmp
mov
sbb
sub
or
inc
mov
inc
and
or
xor
mov
mov
mov
inc
adc
xchg
cmp
add
fstp
add
cs
stos
push
roll
dec
push
and
mov
or
lods
xor
insl
cwtl
imul
cmpsl
mov
add
mov
js
pop
adc
fisubs
mov
test
sub
and
faddl
or
jo
js
out
cli
mov
dec
mov
lds
sbb
or
or
nop
icebp
add
add
or
rolb
cmp
mov
shr
adc
je
push
popf
sub
add
sbb
or
jo
or
adc
ret
dec
or
or
insl
and
insb
not
adc
mov
jmp
out
and
test
push
jge
mov
fadd
inc
rcr
inc
insb
pop
loope
mov
push
rcrb
xor
incl
testl
push
sbb
insb
jo,pn
jae
cwtl
xor
push
push
adc
dec
mov
pop
loop
jmp
dec
pop
cmp
sbb
cmp
and
insl
dec
call
cmp
inc
pop
jecxz
cmp
mov
mov
les
xlat
test
call
in
xchg
push
rcll
into
fldl
jb
add
mov
adc
pop
mov
push
mov
leave
lock
cmp
adc
dec
imul
xorl
xor
cmc
fnsave
sub
cmp
mov
repz
pop
pop
pop
pop
mov
mov
ja
pop
xabort
jne
das
xor
mov
mov
pop
repnz
sbb
orl
or
inc
fwait
pusha
fstpl
jb
scas
or
xor
add
cmpsl
add
pop
adc
dec
mov
sbb
sbb
ja
rorl
rcrb
cmp
mov
cli
lock
loope
into
mov
mov
or
inc
adc
mov
fnsave
adc
mov
sub
and
call
inc
xor
mov
mov
sub
adc
sbb
push
pop
xchg
hlt
int3
jl
test
push
pushf
aaa
add
faddl
cmp
jne
dec
cwtl
movl
xchg
movsl
stos
adc
inc
mov
clc
add
loopne
mov
or
inc
push
push
and
call
aas
sub
subb
fildll
rorl
or
jge
and
fstpt
lea
cmp
jo
loopne
movsl
add
loopne
adc
adcb
popf
or
dec
inc
hlt
enter
jmp
push
rol
push
xchg
push
add
or
push
pop
clc
cmp
sub
loope
rorb
test
movsl
outsl
inc
mov
mov
fbld
data16
inc
arpl
inc
imul
or
adc
stos
push
mov
fidivs
inc
stos
mov
lock
mov
dec
xchg
fldenv
mov
js
scas
orb
cwtl
sbb
sbb
dec
fnstsw
push
push
adc
or
mov
test
cltd
inc
decl
add
and
xor
and
in
push
and
out
pop
jae
mov
xchg
pmaddwd
jmp
jmp
sub
leave
test
les
push
push
fdivp
inc
test
jne
inc
add
adc
push
ja
pusha
push
negb
or
nop
push
mov
fucom
and
xchg
xchg
aad
leave
pop
imul
das
pop
cmp
cmp
mov
aas
xor
repz
inc
dec
push
sub
add
push
scas
lock
ret
arpl
lds
cmpsl
xchg
sub
xor
sar
jecxz
fdivs
hlt
and
into
into
inc
inc
or
ja
cmp
adc
rorl
sbb
pop
movsb
pop
rorb
mov
sbb
push
pop
arpl
push
arpl
cld
add
push
aas
or
and
adc
mov
and
shrb
stmxcsr
mov
pop
aaa
jecxz
subps
nop
fsts
xchg
adc
roll
or
data16
iret
sahf
js
push
test
stos
insl
daa
mov
es
aas
sub
add
add
and
lods
sub
and
adc
test
sub
ja
mov
mov
adc
daa
pusha
inc
add
push
lds
ss
mov
bound
jg
mov
jg
add
and
test
jno
adc
outsb
call
cmpsb
pushl
or
scas
lea
aam
pusha
jmp
pop
inc
sbb
bound
movsl
cmp
mov
lods
adc
mov
or
push
xchg
sahf
in
cmpsl
sbb
pop
xor
sbb
xchg
push
inc
inc
adcb
add
inc
xlat
and
adc
test
sub
out
dec
inc
mov
loope
lea
repnz
sbb
shlb
cmp
aas
fcmovu
imul
cmpsl
fcoms
fcmove
push
push
dec
adc
push
adc
push
add
bound
or
clc
insl
or
ret
adc
add
xor
mov
or
test
cmp
xor
xchg
sahf
in
cmp
adc
cs
push
mov
repnz
cmp
inc
sahf
test
mov
and
repz
and
test
and
jle
nop
cmpsb
mov
js
inc
jnp
push
add
pop
movswl
repz
cld
ja
jmp
cmpw
ss
xor
sbb
sbb
sbb
mov
icebp
enter
push
ret
mov
fs
scas
mov
faddl
add
and
jns
pop
movb
sbb
daa
add
add
outsl
fmul
push
es
mov
add
mov
dec
loop
cld
out
repz
bound
repz
dec
sub
movsl
jmp
rolb
xchg
test
push
ficoms
stos
cmp
push
lahf
inc
jno
xchg
xchg
js
and
adc
aas
pop
lea
adc
mov
shr
jle
test
or
xor
pop
jno
cmp
and
xor
inc
sbb
sub
aaa
xor
push
mov
sarb
add
gs
int3
enter
dec
pop
mov
cmp
push
lock
mov
test
pop
ds
adc
inc
or
pop
dec
mov
adc
mov
mov
mov
or
nop
mov
push
out
mov
mov
add
ret
pop
pop
rcrb
cmpsl
pop
cld
lahf
xchg
mov
add
movsl
ror
hlt
lock
fcomps
cmp
mov
lods
popf
mov
jl
pop
push
rcrb
add
mov
jo
lock
sbbb
gs
push
jne
jne
jge
xlat
mov
xchg
mov
adc
lret
inc
fsubrs
pusha
xor
test
xchg
add
push
in
sbb
ljmp
ljmp
out
mov
and
aaa
mov
or
nop
jge
daa
adc
push
rclb
and
fcompl
jl
or
sbb
dec
dec
ds
ja
arpl
sub
sub
lahf
in
je
mov
sbb
fs
push
inc
pop
sub
icebp
xchg
dec
push
pop
xchg
push
push
dec
pushf
mov
int
xlat
dec
imul
cmp
loope
adc
inc
push
sub
ret
aam
enter
adc
dec
pop
aam
int
call
jmp
dec
dec
inc
sub
cmp
sbb
inc
inc
iret
xor
dec
movb
push
pop
push
mov
add
sbb
int3
sub
or
movsb
out
add
iret
enter
inc
sbb
int3
ret
pop
cmc
push
rorb
adc
and
popa
mov
jns
aaa
add
notl
enter
xlat
add
lea
mov
and
dec
mov
rolb
aaa
or
pop
mov
sbb
cmp
add
sbb
fcoml
pop
nop
mov
pop
lock
shl
dec
outsl
ja
sbb
cmc
push
mov
or
iret
add
sub
scas
inc
lds
dec
add
inc
sbb
loop
or
sarb
inc
jns
les
cltd
ret
aam
pop
cmpsl
xchg
dec
nop
sbb
pop
inc
mov
xor
jb
test
push
iret
ljmp
sbb
and
xchg
lods
dec
dec
ror
push
push
sbbb
loopne
xchg
in
mov
inc
adc
sbb
xor
aam
cs
ss
adc
divb
sbbb
mov
xor
das
dec
mov
popa
nop
sbb
push
mov
je
fdivs
push
rorb
push
pop
je
rorb
je
je
mov
loopne
pop
scas
cld
out
adc
mov
cs
and
cmpsl
sbbl
push
arpl
xchg
ret
sbb
adc
loopne
scas
mov
jmp
call
sub
sbb
mov
or
je
adc
bound
adc
or
adc
fnstcw
pop
inc
jo
insl
or
outsl
add
and
add
push
jne
push
sbb
push
cmp
ljmp
loopne
adc
fimuls
test
mov
xchg
and
pop
mov
cmp
xchg
daa
sbb
ret
icebp
or
mov
sahf
jno
addr16
xorl
insl
xor
shlb
imul
orl
ds
mov
sbb
movsl
addl
test
jne
std
push
add
adc
fadds
jne
movl
cmp
push
mov
add
add
add
dec
aas
xor
cmp
dec
push
mov
jl
outsl
add
int3
push
into
adc
xchg
cmpsb
mov
ret
daa
inc
inc
dec
mov
pop
push
das
mov
leave
cmp
lds
xchg
out
xchg
pop
pusha
jmp
dec
cmp
adc
mov
ret
fisubl
ret
or
xor
mov
rolb
flds
outsl
icebp
jg
test
rcpps
imul
clc
fdiv
xor
aaa
mov
mov
ja
or
adc
mov
loop
sti
sbb
jge
xchg
pop
cwtl
ret
scas
inc
mov
aas
into
pop
add
adc
push
jns
xor
gs
inc
test
outsb
xor
andl
dec
or
jo
imul
jae
rclb
pusha
sbb
pop
xchg
jo
xchg
test
int
cwtl
or
in
xor
mov
jae
and
inc
mull
xlat
lock
xor
jns
cmpb
xchg
dec
dec
das
dec
rorl
and
ss
inc
push
inc
jle
pop
dec
test
push
adc
or
xlat
dec
xor
jmp
push
xor
adc
inc
inc
idivl
shrl
mov
mov
add
add
pusha
mov
sbbl
or
inc
clc
push
or
push
jmp
imul
iret
add
xor
inc
stos
jne
lods
subb
add
aad
jecxz
adc
pop
mov
or
mov
stos
inc
je
xor
mov
das
cltd
and
rclb
adc
xchg
and
mov
sarl
arpl
popf
lcall
pop
popa
dec
fisubrs
add
push
subl
xchg
pushf
inc
out
add
pop
mov
js
subl
insl
and
adc
mov
adc
lods
dec
add
jae,pn
lods
xchg
popa
xor
xor
cmp
jg
je
dec
mov
or
and
std
stos
call
add
adc
mov
mov
pop
or
out
movsb
add
sub
adc
cmp
add
add
subl
popf
out
or
gs
xchg
cmpsb
pushl
push
mov
jle
push
test
dec
push
sbb
lock
jne
pop
iret
cmp
pop
and
cmp
jns
test
push
jno
xchg
push
pop
add
out
mov
xor
sub
loopne
and
lahf
test
jle
and
and
sbb
mov
adc
repz
sbb
gs
or
test
cmpsb
jecxz
jne
push
xor
rcll
or
or
sbb
xchg
cmp
inc
aam
mov
fsubrs
add
mov
xchg
les
cwtl
pop
push
xchg
inc
pop
sub
add
pop
pop
pop
fwait
movb
pushl
fidivs
push
jae
rclb
fld
mov
imul
das
bound
mov
sbb
cltd
into
pop
adc
test
sub
adc
adc
xchg
hlt
push
push
inc
cli
add
aaa
notl
cmp
sbbb
cs
incl
sbb
in
dec
jmp
hlt
dec
add
cld
push
or
jne
push
mov
sbb
cmp
mov
movsb
outsl
dec
clc
mov
bound
sbb
adc
xlat
push
jnp
sub
and
ljmp
jmp
lret
jne
cmp
addr16
xor
add
sbb
add
inc
and
mov
int
lods
xor
pop
dec
pop
pop
or
dec
pushf
pop
sbb
or
xor
lahf
pop
nop
cwtl
cmp
ja
lods
mov
js
push
ja
shlb
inc
or
mov
loope
jg
les
dec
ret
cmp
rcrl
pop
nop
xchg
out
adc
sub
js
neg
daa
mov
shrb
loope
pop
popf
jmp
sub
xor
daa
icebp
adcl
aas
or
pop
cs
mov
arpl
bound
roll
add
aad
in
sub
imul
out
add
mov
dec
je
push
dec
mov
mov
add
mov
mov
push
dec
sbb
loope
push
and
dec
pop
shll
dec
and
jge
scas
pop
ss
push
and
sarb
jo
or
mov
or
sbb
pop
daa
pusha
dec
sbb
xor
sahf
in
fildll
subb
pop
or
xchg
xor
clc
aaa
pop
or
rcrb
pop
fcoms
add
cmc
inc
push
adcl
test
xor
add
xor
xlat
and
daa
push
and
cs
rorb
or
sbb
adc
out
and
insb
sbb
mov
sbb
jmp
push
rorb
or
sbb
mov
and
dec
ret
dec
pop
push
sub
aaa
clc
js
adc
pop
mov
or
loopne
aaa
push
and
shrl
dec
inc
test
or
sarb
testb
pop
push
xor
and
or
jle
adc
or
or
cmpsb
scas
notb
dec
ficoml
push
subb
xchg
cmpsl
sbb
mov
push
fs
sbb
loope
js
xor
pop
pushf
mov
imul
in
lock
cmpb
insb
lods
adc
jl
cmp
outsl
inc
pusha
adcb
movb
dec
adc
test
xchg
aam
push
pusha
xchg
xlat
sub
mov
inc
ds
insb
stos
arpl
sub
xor
cmp
cltd
xchg
mov
loop
sbb
jnp
and
cmp
lret
test
les
mov
andb
fiadds
fwait
dec
mov
jae
nop
ret
jae
insb
cmp
cmp
pop
mulb
cmp
stc
sub
adc
mov
mov
adc
out
das
mov
adc
repnz
mov
ret
orl
jns
ret
inc
and
inc
stos
lcall
hlt
je
loop
mov
and
push
add
adc
sbb
xlat
jle
or
mov
jno
andl
scas
out
pop
add
push
push
lret
clc
test
push
mov
out
lea
add
pusha
or
or
adc
mov
scas
cmpsl
test
adc
cltd
push
pop
cmp
fstps
push
add
rcrb
inc
dec
je
mov
dec
mov
jmp
jne
loope
aaa
adc
pop
iret
sti
mov
or
push
test
mov
adc
or
lock
inc
fildl
xchg
adc
mov
cltd
loope
add
int
jne
mov
sub
mov
addr16
sub
jle
ret
test
or
lock
ds
or
push
mov
adc
test
fldenv
mov
or
ja
dec
jl
inc
xor
sub
add
xchg
add
jo
adcb
jo
jle
adc
aas
push
insl
mov
add
add
mov
xor
xchg
sbb
add
push
cmp
mov
push
add
mov
insb
or
mov
lea
loop
inc
dec
lods
dec
cmc
shrb
arpl
ret
sub
add
sub
fidivrs
or
and
je
push
jo
hlt
jbe
push
lods
pop
or
mov
xchg
pop
adc
mov
adc
jbe
mov
pop
and
inc
in
mov
xor
pusha
cmp
ja
pop
dec
xchg
adc
ret
cmp
mov
lret
fnstcw
jbe
subl
ja
sbb
mov
sbb
mov
je
bnd
inc
mov
mov
inc
repz
dec
dec
scas
sub
sub
lods
movsb
rcrl
ret
loope
pusha
cmp
repnz
pop
lcall
or
sub
pushf
push
or
call
insb
cli
inc
inc
enter
fmul
rclb
xor
aam
cli
inc
js
xor
mov
push
inc
rolb
adc
in
jae
cmovno
mov
pop
push
pop
adc
int3
adc
add
rorl
jp
pop
jg
mov
inc
xchg
push
mov
pop
lds
add
cmp
add
mov
mov
mov
scas
fs
xor
pushf
or
shlb
add
adc
adc
jmp
pop
add
testb
adc
push
je
mov
mov
dec
mov
inc
adc
insl
sbb
out
cs
mov
dec
jnp
imul
push
mov
mov
or
or
or
jle
pop
jmp
inc
and
fs
jge
fsub
push
rclb
dec
dec
or
loopne
adc
jp
jl
outsl
das
or
mov
mov
push
mov
adc
mov
sub
add
add
dec
sub
xchg
iret
dec
adc
into
adc
fmul
adc
ja
add
mov
xlat
jecxz
pop
mov
and
into
adc
cld
push
fmul
inc
dec
add
add
ljmp
mov
sbb
arpl
sbb
dec
xor
fcomps
add
sbb
fsubr
adc
shll
in
xchg
xor
mov
dec
sbb
xchg
insl
cltd
sbb
scas
cmp
push
int
xlat
cmp
xchg
aam
adc
or
dec
sbb
adc
bound
push
insb
and
jb
add
add
xor
das
mov
push
or
dec
mov
xor
inc
and
xchg
mov
add
sbb
bound
sbb
pop
push
dec
fs
push
cltd
scas
and
hlt
adc
lret
xor
test
jge
mov
aaa
enter
push
mov
add
xor
insl
add
pop
add
pushf
inc
test
into
xchg
ret
fdivrs
insb
sbb
insb
mov
and
shlb
testl
jns
data16
aad
jno
jle
cs
dec
mov
int3
stos
dec
pusha
sub
mov
test
imulb
push
lock
sarb
outsb
movsb
jle
push
sub
inc
sub
add
shl
pop
decb
rorl
cmp
lock
inc
mov
sbb
fstp
inc
sbb
mov
push
jo
push
cmpsb
add
into
xchg
je
sub
sub
movsb
jmp
aam
dec
movsl
rolb
mov
test
pop
xchg
popa
add
sbb
jle
and
out
pop
adc
xor
das
fcompl
mov
adc
int
cli
dec
addl
fs
sub
mov
nop
dec
add
adc
inc
cltd
adc
jbe
imul
inc
ds
xor
and
jge
repz
addl
mov
inc
aam
loope
arpl
imul
xor
lret
pop
cmpsl
push
outsb
dec
add
int3
adc
lods
scas
aam
jge
decl
insb
or
cmp
aam
adc
es
and
xor
and
test
sub
push
add
lahf
push
jnp
pop
aam
add
cltd
cmc
pop
es
add
test
or
adc
xchg
xor
xchg
arpl
loopne
dec
add
push
jo
xchg
orl
int3
test
adc
movsl
fmuls
enter
into
enter
test
fs
addr16
lock
sub
push
mov
dec
cmp
jne
pop
jmp
inc
negl
sbb
lea
bound
xor
aaa
sbb
xchg
cld
dec
mov
or
adc
cmp
mov
orb
in
popa
inc
sub
add
subl
dec
adc
cmp
fsub
lods
xchg
sbb
icebp
push
jmp
and
sub
xor
mov
add
adc
cmp
add
imul
jl
and
or
or
enter
inc
out
adc
test
adc
cmp
inc
add
or
orb
in
add
push
mov
sbb
rolb
mov
cmp
addl
shrl
cmp
xor
addr16
fmull
or
in
les
inc
dec
cmp
sbb
call
cld
js
jmp
addb
adc
mov
or
nop
lcall
inc
cmp
cmp
push
arpl
xchg
inc
sbb
mov
inc
push
add
pop
dec
inc
sub
enter
movl
lea
test
ret
mov
hlt
add
sub
scas
gs
jmp
push
add
fldenv
sbb
push
jns
sbbb
pop
cmp
sub
leave
or
and
inc
add
sbb
scas
lret
pop
jbe
mov
subl
mov
cmp
xor
fdivs
aam
sub
addb
push
imul
or
shlb
mov
jo
cltd
out
push
iret
jno
call
adc
dec
js
stos
jno
mov
ret
mov
push
and
rorb
imul
aam
push
and
pop
pop
xchg
repnz
xor
mov
sub
xor
addb
jecxz
push
inc
pop
cmp
mov
fcomps
add
in
mov
mov
adc
aam
stc
data16
clc
inc
dec
call
clc
outsb
call
out
mov
jle
pop
sub
hlt
mov
or
push
fwait
lock
push
movsl
sbb
fdivrs
mov
pop
mov
lock
push
cmp
push
icebp
les
dec
insb
xchg
data16
adc
jno
popf
add
push
cmc
push
in
pop
inc
mov
mov
or
sbb
les
inc
ds
test
je
inc
and
das
and
mov
scas
adc
call
xor
shrl
shrb
sbb
iret
and
sub
add
data16
repnz
push
jecxz
rcrb
incl
rolb
lahf
push
cs
shlb
ljmp
pop
repnz
push
lds
xchg
pop
push
push
or
pop
or
in
daa
inc
jno
pop
mov
clc
adc
push
xor
xchg
sbb
mov
xor
pop
push
fcoms
adc
sub
ret
sbb
shl
inc
push
sub
dec
loop
add
dec
shrb
dec
cld
mov
sti
sub
sub
mov
add
push
in
pushf
outsl
jne
add
hlt
jae
push
mov
push
imul
arpl
mov
add
xor
movswl
xchg
dec
mov
fs
xorb
popa
loopne
add
call
dec
mov
cmp
out
clc
pop
sub
loope
push
push
pop
xchg
mov
sub
dec
jp
jae
mov
arpl
test
clc
cmp
ret
testb
cs
dec
enter
or
cmp
arpl
mov
stc
inc
xor
popa
fisttps
cmpb
sbb
loopne
add
push
js
cmp
jl
inc
ret
jbe
xor
lea
rcrb
mov
lahf
imull
adc
arpl
ret
ljmp
je
pop
xor
sbb
pop
insb
pop
test
xchg
hlt
imul
xchg
adc
adc
add
sahf
or
push
popaw
mov
or
and
fistps
fprem1
or
inc
fadds
dec
sbb
jg
aam
dec
aam
xor
add
lahf
das
dec
and
inc
lods
cltd
movb
out
ret
leave
rorb
ret
inc
inc
sub
loopne
insb
mov
test
mov
enter
jno
cmp
push
sbb
sbbl
sbb
in
cmp
test
jp
mov
or
or
pop
notl
sarb
mov
mov
cmp
add
and
xor
enter
fcomps
push
xchg
insb
push
dec
rclb
pop
movsb
sbb
cmpsb
jbe
or
fwait
dec
mov
mov
hlt
lret
jle
hlt
dec
and
cmpb
push
sbb
inc
les
jne
fs
js
add
mov
movups
inc
cmp
push
inc
mov
out
jge
push
ret
fmuls
sub
adc
loopne
les
imul
inc
push
add
add
push
xor
push
xchg
dec
es
xor
or
gs
rorl
roll
outsb
mov
cmp
aas
arpl
cmp
fs
mov
or
jecxz
xor
xor
jo
jo
pusha
pop
push
sti
out
shrl
dec
and
mov
shr
add
add
cmp
mov
or
add
jmp
sub
test
hlt
push
jno
data16
push
mov
xor
sbb
das
mov
pushf
or
and
xchg
push
rolb
loope
adc
cwtl
pop
fs
inc
or
fs
jne
negl
sbb
inc
outsl
fmuls
ss
adc
mov
iret
inc
add
add
enter
push
xor
lcall
mov
fwait
jl
or
dec
sub
sub
jmp
aam
ljmp
adc
fs
mov
adc
sub
dec
ret
pop
dec
into
cmp
jge
sbb
cld
mov
jmp
jmp
xchg
icebp
pop
xchg
xor
mov
push
add
adc
lret
adc
call
aaa
inc
xchg
cmc
push
sub
stos
adc
and
rolb
or
data16
rorl
xchg
das
sbb
ret
sub
sub
or
xor
or
dec
xor
xor
pop
mov
xor
mov
hlt
out
mov
arpl
pop
mov
mov
inc
cmp
jp
mov
mov
loop
and
adc
mov
dec
cmp
cmp
js
pop
xchg
push
or
push
push
adc
cwtl
push
rolb
lret
les
shl
rcrb
sub
mov
jno
lds
add
jecxz
xchg
scas
adc
sbb
cmc
cmpsb
and
jp
push
test
in
push
adc
xchg
cmp
push
scas
sub
loope
outsl
cmc
cli
mov
pop
out
in
dec
call
adc
flds
push
jne
push
repz
cmpsb
push
and
in
repnz
imul
fcoml
jl
sub
cmp
loope
fs
fwait
js
cmpsb
xor
add
push
lcall
sbb
std
dec
loopne
mov
pop
cmp
mov
push
push
sbb
scas
fmuls
bound
flds
enter
mov
push
stos
js
int3
and
inc
dec
sbb
or
jp
jne
jbe
sub
out
cmpsb
pop
or
and
js
push
xor
inc
or
sub
fld
shlb
out
lret
adc
jo
pop
push
outsl
orb
push
xor
lret
fs
cmp
data16
fildll
stc
rcrb
sbb
add
add
add
call
and
sbb
hlt
inc
rolb
stos
ret
cmp
cmp
cmp
pop
dec
xor
notl
js
add
fs
adc
mov
ss
ret
fnstenv
fsubr
push
enter
mov
test
subb
aas
test
in
outsb
ja
setge
pop
adc
adc
sub
jmp
popa
fisttpll
xor
cmp
add
and
cmp
sub
mov
and
xchg
imul
xchg
or
sbb
mov
lahf
push
push
frstor
and
add
add
addl
incl
push
dec
insb
daa
or
inc
mov
adc
dec
outsl
xorl
nop
mov
inc
inc
clc
test
dec
stos
mov
gs
lods
sbb
loopne
aaa
addl
or
repnz
or
push
or
xchg
mov
js
sub
jo
and
pop
mov
jbe
lods
test
mov
pop
mov
and
add
fs
xor
daa
icebp
and
add
xor
jmp
ja
daa
in
mov
and
fistpl
inc
scas
nop
bound
aad
hlt
aad
imul
mov
movb
mov
xor
cmp
mov
cmc
or
es
dec
out
adc
mov
inc
adc
jge
lock
arpl
xchg
aam
sub
sbb
add
aaa
push
add
adc
sub
cmp
mov
and
rolb
outsl
add
rcl
and
cltd
mov
dec
xor
push
xor
inc
inc
cmp
sbb
push
adc
sub
jne
rcl
mov
insl
jno
mov
fs
sub
fldenv
sub
push
sbb
dec
mov
cmp
jne
mov
xor
scas
mov
in
jmp
adc
xorb
int
mov
fisttpll
rorb
xor
mov
jmp
push
add
xchg
or
add
xchg
cmp
pusha
daa
pushf
pop
jnp
push
into
push
testb
push
idivl
add
rcll
sbb
jo
hlt
das
adc
inc
pushf
fdivrs
pusha
fucomi
sbb
notl
push
dec
imul
sbb
or
sub
mov
fdivr
insb
mov
push
js
test
iret
push
push
xchg
inc
daa
or
testl
inc
movl
xor
push
cwtl
add
or
pop
idivb
sub
mov
cwtl
pop
add
bound
les
insb
xor
sbb
mov
mov
and
test
jns
dec
inc
rclb
inc
xchg
data16
addl
cmpl
or
test
sbb
inc
lcall
or
sbb
mov
adc
and
aas
pop
adc
push
mov
lock
push
push
in
bound
js
jmp
push
cmp
or
aam
inc
nop
or
jb
add
daa
and
push
clc
push
pop
or
fidivs
or
pop
popa
jne
sbb
sub
sbb
addb
push
inc
mov
xor
push
jmp
sub
xchg
or
insb
add
cmp
sbb
out
loopne
mov
movhps
dec
add
enter
pop
and
sti
and
xor
clc
iret
add
mov
ljmp
xchg
movl
testb
jne
xor
in
add
add
pop
test
shlb
scas
xor
clc
shlb
push
jbe
test
imul
sbb
inc
xchg
jb
cmp
xor
outsl
fnstenv
sbb
arpl
mov
mov
sub
aas
adc
sbb
sbb
insb
insb
and
aaa
pop
sub
inc
jg
jnp
js
pop
jg
cmp
and
push
jl
sti
popl
push
add
loop
add
pusha
push
sti
jmp
popf
addl
adc
pop
jecxz
repz
push
sbb
notb
pop
dec
in
in
es
addb
add
ret
clc
mov
add
cmp
mov
xor
orb
push
jge
mov
pop
nop
mov
nop
dec
inc
imul
clc
inc
pop
data16
test
pop
pop
add
in
sub
rdtsc
adc
pop
cwtl
pop
sbb
insl
or
scas
mov
icebp
adc
dec
das
and
dec
pop
xlat
leave
cmp
stc
jo
and
ret
and
sub
push
daa
shrl
jne
testl
mov
push
xchg
push
lds
ret
adc
dec
mov
mov
sbb
adc
cmpsl
sar
insb
clc
icebp
jno,pn
repnz
nop
rorb
cltd
nop
int
inc
in
inc
mov
mov
sbbl
jge
xchg
or
xchg
test
fs
xchg
sbb
inc
mov
sbb
ljmp
clc
sti
cmp
jne
sub
cltd
add
mov
adc
add
adc
push
add
push
adc
cmpsl
push
and
loopne
enter
pop
imul
ret
mov
or
dec
add
test
jmp
inc
add
adc
in
sbbb
or
inc
sub
test
imul
jge
sbb
movsl
xchg
in
rclb
pop
lcall
negl
imul
dec
mov
andl
int3
sbb
popa
inc
cmp
int
push
pop
pusha
mov
add
and
sub
sub
pop
mov
iret
add
mov
adc
addl
sub
sub
scas
or
adc
in
mov
xlat
enter
orb
adcb
in
enter
lret
dec
and
add
aaa
outsb
js
adc
test
add
push
shlb
push
enter
add
sbb
add
sub
xchg
sbb
dec
sbb
inc
push
imul
push
adc
inc
sbb
mov
xorl
cmp
cmp
cltd
and
add
mov
dec
or
and
sub
push
iret
ret
ljmp
xor
scas
or
adc
outsl
imul
das
push
sub
lahf
and
xchg
add
sub
cmp
jne
mov
rcrb
sub
shrb
push
imul
addl
pop
in
push
inc
lcall
inc
adc
jnp
orb
pop
sbb
das
mov
xchg
movsl
roll
pusha
orl
test
ja
cmp
popa
sbb
test
push
sub
jb
test
mov
fld
sbb
adc
jl
lods
and
and
leave
cwtl
xorb
xor
add
and
sbb
sub
push
push
or
or
cmp
or
loope
sub
shrl
sub
mov
pusha
das
add
jnp
stos
ficoms
add
jae
dec
je
sbb
mov
or
and
dec
mov
jns
inc
dec
jmp
inc
pop
in
push
sub
and
or
jne
add
sub
hlt
add
or
hlt
popf
lahf
lock
js
mov
pop
push
scas
pop
or
push
dec
mov
cwtl
movsb
pop
insb
dec
and
fsts
adc
push
movsl
dec
push
popa
aad
fildl
push
dec
icebp
or
sbb
or
mov
cmp
or
imul
fs
pusha
cld
inc
mov
rcl
ss
push
insb
rol
jecxz
movb
or
or
aad
inc
pop
push
push
fdivrl
mov
ret
popa
xchg
mov
and
xor
jl
or
aaa
inc
push
nop
inc
lock
shrb
dec
sbb
xor
mov
or
scas
sub
dec
subl
or
clc
pop
mov
and
push
push
inc
sub
js
and
push
and
xchg
lods
and
adc
push
mov
jb
jp
push
cmpsl
and
add
pop
jnp
pusha
out
divl
ret
call
into
sahf
nop
cld
jecxz
test
daa
xor
inc
sbb
push
xchg
into
movsb
push
jge
nop
enter
inc
daa
mov
sbb
sub
pop
or
cmp
out
sbb
and
pushf
adc
das
cmp
fwait
jmp
pop
sbb
mov
sub
fstpl
or
pop
mov
sahf
flds
adcl
sub
or
cmp
adc
addb
dec
jge
js
add
dec
xor
bound
jle
adc
sbb
movsl
sbb
test
adc
dec
adc
adc
push
sbb
push
mov
jl
push
sbb
push
add
sahf
loope
dec
dec
push
sbb
std
cmc
fldt
mov
shll
mov
arpl
cmp
jecxz
cld
mov
or
push
insb
clc
push
xchg
stos
mov
push
fstpt
push
test
push
cmp
test
xor
lahf
inc
fisttpl
and
fmull
adc
and
push
cld
lds
add
adcl
push
mov
cli
stos
jle
icebp
mov
cmp
shll
outsb
jbe
pop
pop
adc
test
nop
popf
out
and
test
xor
add
and
in
imul
cmp
daa
jl
gs
out
cmp
popa
push
pop
inc
sub
inc
nop
dec
sahf
or
daa
ja
adcb
lea
lea
punpckhwd
jo
sbb
adc
pop
movsb
adc
sbb
add
sub
or
insl
mov
inc
and
in
cmpb
pop
faddl
hlt
in
sahf
dec
pusha
sbb
lea
inc
push
mov
xor
or
or
or
adc
jnp
push
addr16
mov
mov
mov
pop
daa
pop
data16
dec
jno
pop
jne
mov
mov
lods
push
xor
dec
jae
adc
ljmp
adc
add
adc
orb
sub
add
push
lret
imul
mov
mov
push
call
push
xchg
loope
jb
push
add
adc
dec
sbb
mov
or
mov
sub
cmp
inc
pop
imul
adc
inc
pop
mov
push
push
mov
test
nop
or
xchg
cmp
sahf
pop
sbbb
jbe
adc
cmpb
dec
lods
add
push
xchg
sub
push
arpl
and
and
pop
push
pusha
pushf
cmc
xor
movsb
je
and
add
or
jne
and
sbb
pop
lahf
xor
mov
adc
jmp
mov
fadds
dec
sub
or
dec
mov
movsl
sub
shr
inc
cld
pop
mov
daa
add
jmp
sub
and
jo
movsl
repz
lods
cmp
test
adc
adc
cmp
sub
lret
sbb
or
test
arpl
test
adcb
pop
sub
pop
cld
int3
popa
icebp
and
inc
push
and
ret
arpl
xchg
jo
sub
sbb
ret
and
sbb
xor
add
clc
mov
imul
dec
cwtl
dec
iret
clc
or
or
add
fistpl
sbb
add
outsb
mov
push
push
mov
xchg
xchg
push
mov
pusha
adc
adc
shl
mov
sbb
jg
fldl
and
or
add
rcrl
push
lock
popa
fcomip
out
daa
ss
ss
es
push
sub
and
in
fisubl
mov
js
and
adc
and
loopne
enter
adcl
xlat
and
mov
imul
add
test
sub
and
push
ret
cmp
xchg
aad
and
cs
aas
aad
gs
shrl
pop
adc
or
jmp
sub
dec
pop
insb
outsb
pop
cltd
jbe
xchg
jge
and
jo
es
cmp
push
push
insb
adc
loop
sub
cmp
sbb
pop
sahf
and
aas
cltd
pop
fisttpl
subb
xchg
adc
imulb
inc
lods
inc
pop
das
mov
pop
inc
das
push
les
or
insl
push
ret
pop
or
enter
ret
pop
hlt
sbb
and
pop
adc
lcall
mov
inc
loopne
cwtl
subb
push
or
imul
test
mov
push
push
test
aam
cltd
inc
enter
adc
mov
xchg
lahf
dec
nop
or
pop
add
ret
repz
sti
sbb
push
jl
or
dec
push
mov
mov
sub
jg
jmp
push
dec
leave
enter
push
jg
test
mov
fistpll
sbb
xchg
jg
mov
shr
adc
and
fsubs
aas
cs
dec
mov
clc
psllq
sub
pop
xlat
sbb
jne
cmp
sub
scas
sbb
dec
xchg
lock
in
outsb
test
jo
mov
pusha
outsb
pop
aas
xor
lret
xchg
shll
rclb
outsb
dec
outsl
or
push
test
das
sbb
sub
cmp
sarl
xor
stos
adc
fadds
add
add
insb
enter
hlt
xchg
sbb
outsl
mov
jne
cmp
lahf
imul
mov
icebp
sbb
or
sbb
add
in
mov
mov
dec
adc
lea
subl
sti
leave
js
mov
jg
in
jmp
push
mov
add
lods
inc
inc
ret
and
mov
test
xchg
addb
mov
mov
loope
inc
cmc
mov
add
sub
or
or
add
dec
sbb
sub
xchg
fstpt
imul
mov
dec
add
push
test
subb
das
and
inc
xor
push
xor
mov
mov
add
xchg
mov
xchg
lds
push
inc
cmp
jnp
cltd
push
xchg
sahf
or
inc
movsl
lret
mov
repz
gs
in
sub
adc
repz
int3
jp
in
int3
bound
nop
xlat
cmp
adc
xchg
pusha
sbb
xor
test
lock
inc
js
lea
jmp
pusha
add
lods
or
orl
scas
and
jg
mov
pop
sub
adc
push
inc
xchg
cs
out
xor
cmp
daa
jg
adc
pusha
in
dec
and
or
addr16
pop
inc
or
pop
add
scas
pop
rolb
lds
push
add
les
sub
xor
fs
push
push
or
push
cmp
mov
mov
rcrb
push
cmp
inc
mov
lcall
adc
sahf
jb
roll
aaa
adc
clc
adc
and
pop
push
es
adcl
mov
pop
imul
adc
out
or
pop
jmp
push
popf
sbb
and
dec
out
or
cmpb
addr16
jmp
popa
pop
cmpb
sbb
insb
imulb
pusha
cs
jno
cmpl
pop
mov
lcall
mov
mov
dec
sbb
shr
cltd
dec
mov
movb
jecxz
loope
push
aam
mov
push
dec
in
push
sarb
cmp
or
cwtl
test
add
push
shlb
lret
clc
mov
dec
gs
sub
xchg
or
dec
movsb
jb
js
jl
lret
js
nop
sub
push
mov
jo
out
mov
imul
dec
mov
scas
push
mov
push
pop
loopne
push
rorl
imul
imul
fwait
or
dec
aam
xchg
out
inc
cmp
test
movsl
lods
adc
das
push
adc
push
insl
jo
cmp
das
lea
out
fadds
outsl
lahf
mov
nop
pop
cmp
jno
das
mov
jo
cmc
sbb
push
lret
jae
and
iret
sbb
fnstenv
mov
pop
add
mov
push
mov
add
ja
js
mov
sbb
mov
test
sbb
test
sub
or
maxps
cmpsb
xchg
dec
push
sub
nop
popa
out
xor
adc
nop
nop
xor
hlt
cmp
jecxz
ret
movb
lds
sbb
pop
xlat
dec
push
pop
adc
js
lret
xchg
pop
out
sub
sub
pop
mov
sub
std
pop
mov
pusha
and
push
mov
fldenv
xor
sbb
lock
push
cwtl
daa
popa
dec
cmpsb
pop
inc
pop
mov
sub
aam
leave
and
shl
std
xor
mov
fcoms
mov
adc
aaa
pusha
or
shr
pushf
or
inc
fistpl
shlb
clc
push
dec
jnp
pop
cld
mov
and
mov
loopne
pop
daa
sub
pop
cmp
jne
sub
gs
and
test
aas
subb
cmp
pushf
mov
fisttps
mov
test
fsubrs
aas
xor
ret
cmpsl
nop
cltd
add
fdivrl
inc
xchg
dec
test
xchg
push
rolb
add
cltd
fwait
cmp
or
adc
inc
iret
adc
or
into
cmpb
jmp
xchg
mov
jae
xlat
jmp
outsb
pop
leave
aam
xor
mov
xchg
aas
test
sbb
cmp
mov
in
adc
outsb
sarb
mov
push
std
xchg
test
repz
popa
pop
mov
push
mov
subl
mov
setae
push
sbb
pop
popf
repnz
cmp
leave
mov
inc
lea
cmp
sbb
mov
clc
call
loopne
andl
addl
aaa
adc
inc
adc
inc
test
and
inc
testl
dec
pop
pop
inc
out
scas
add
xor
xchg
jnp
fs
je
adc
and
inc
dec
and
xchg
xor
cmovns
push
out
jge
jp
outsb
jl
rcr
into
xor
movsb
pusha
pop
outsb
cmp
or
addr16
push
push
into
nop
mov
clc
pop
adc
push
loop
push
dec
pushf
xchg
inc
rclb
xor
xchg
fsubrp
xor
jo
add
scas
repz
sub
cmp
sahf
pop
adc
subl
or
xchg
add
mov
sbb
sbb
daa
call
or
or
or
pop
pop
popa
xchg
sub
mov
pop
fcoml
and
xor
or
pop
inc
add
cmpsb
add
xchg
inc
dec
add
ror
in
vmread
lock
out
outsb
sub
push
push
or
or
lahf
pop
sub
xchg
add
nop
inc
pop
add
out
pop
test
jo
push
daa
inc
sbb
and
jg
repz
mov
xchg
push
lock
repz
inc
inc
dec
dec
cmp
repz
push
pop
pop
pusha
hlt
fldl
push
or
arpl
push
push
pop
in
gs
add
fs
cmpsb
pop
daa
jmp
mov
push
xor
sub
aaa
xor
sbb
xor
movsb
add
out
ret
xor
mov
adc
inc
and
aaa
sbb
adcl
subb
adc
pop
sub
incb
pop
mov
inc
inc
xor
mov
fwait
rol
cmpsb
sub
ljmp
mov
int
jecxz
sub
sbb
sub
add
xchg
xchg
jnp
lock
test
jnp
lret
test
adc
xor
mov
ret
mov
and
dec
adc
fsubl
loopne
cmpsb
mov
pop
test
mov
mov
or
mov
add
inc
or
adc
js
jecxz
adc
mov
aad
adc
add
adc
cmovnp
test
sbb
ja
sub
xor
push
push
in
add
sbb
or
pop
and
lcall
xor
clc
add
iret
adc
mov
mov
xor
pop
mov
cmp
cmpsl
cmp
shrb
mov
adc
xchg
les
and
cmp
jne
jle
sub
mov
cmp
roll
mov
push
lods
mov
sbb
xchg
sub
icebp
ret
adc
sbb
nop
jo
jge
inc
xor
xchg
adc
pop
jmp
cmc
xor
dec
or
lock
jo
stos
icebp
dec
or
pusha
loop
test
adc
mov
and
xchg
arpl
add
xchg
inc
xlat
inc
pop
mov
cld
or
dec
loopne
call
popf
popa
dec
pop
stc
push
and
pop
pushf
ss
jo
add
stos
test
sbb
push
loope
jno
popf
lea
aad
mov
inc
mov
adc
push
movsl
jmp
adc
lods
fwait
cmp
mov
cmp
orb
push
cmp
push
test
and
push
stos
sub
and
cs
inc
insb
and
daa
lods
das
jl
push
les
inc
add
enter
sbb
aas
add
jmp
pop
imul
pushf
js
jo
movsb
mov
lea
jmp
push
and
push
fs
out
test
inc
imul
mov
lcall
jl
or
mov
inc
sbb
mov
mov
or
jae
add
ret
xor
xchg
mov
inc
dec
or
xor
sarl
cmp
test
or
iret
popa
xor
mov
adc
xchg
add
rclb
imul
push
dec
scas
fmull
inc
fs
fbstp
mov
pop
xchg
pop
dec
inc
xor
xchg
jnp
out
out
adc
sbb
fnstsw
pop
imul
add
sub
adc
xchg
adc
or
dec
jne
dec
mov
sub
jnp
inc
nop
scas
loope
test
clc
movsl
inc
add
popf
push
shrb
std
jo
je
lds
mov
insb
sbb
ja
arpl
ret
rcll
or
sub
mov
gs
sahf
cs
pop
jecxz
je
fisttpll
pop
cmp
mov
loop
or
xchg
cmc
sub
xor
lds
add
xor
inc
inc
sub
xchg
dec
js
lods
xor
ret
sbb
or
test
rorb
leave
pusha
call
push
dec
or
cmp
aas
test
daa
je
push
dec
scas
sub
jl
inc
xor
jl
sbb
mov
or
inc
jne
mov
divl
lock
test
sub
data16
jnp
mov
mov
push
cmp
adc
xor
mov
sti
jl
jae
rorl
aam
lods
aas
push
into
cmc
imul
or
pop
movb
addb
push
sbb
jo
in
dec
popf
nop
fadd
xor
adc
mov
lods
or
push
sbb
pop
mov
mov
jnp
sub
sbb
pop
mov
adc
push
mov
sbb
iret
clc
pop
or
lds
pop
sbb
pop
jne
andb
adc
and
repz
or
xchg
or
and
repnz
mov
jmp
push
or
ret
pusha
or
imul
pop
dec
sub
add
adc
stos
addb
jge
nop
jg
dec
add
test
outsl
mov
aad
int
xor
mov
jno
add
push
or
inc
xchg
push
rolb
inc
or
mov
sbb
and
das
fcoms
nop
mov
imull
cmc
pop
mov
enter
stos
rolb
xchg
mov
scas
mov
push
pop
ds
mov
mov
and
test
les
adc
and
pop
imul
aaa
pop
xor
in
pop
pop
subl
dec
push
sub
dec
inc
inc
ljmp
dec
outsl
out
out
adc
test
push
fidivrs
loopw
movsl
and
inc
xor
lods
inc
dec
imul
andl
xchg
lock
imul
inc
and
xchg
push
aaa
xchg
dec
cmp
aam
push
je
xchg
inc
aas
lods
mov
imul
mov
or
ljmp
or
loopne
mov
adc
pop
push
rol
inc
cmp
jge
push
into
inc
mov
lea
int
cs
jne
dec
sub
add
dec
sub
mov
mov
cmp
add
add
mov
test
pop
push
movsb
scas
inc
movsb
jg
mov
daa
pop
cmp
xor
push
test
push
add
loope
xor
dec
jmp
loop
push
inc
add
ret
jmp
sub
sbb
je
js
push
push
int
pop
subl
push
mov
clc
xor
adc
mov
sub
fadd
aam
pop
sbb
hlt
mov
xor
xor
mov
sub
test
mov
jae
lcall
jbe
mov
mov
and
xor
add
icebp
sub
orl
push
cmp
fs
add
cmpb
cwtl
push
lret
lock
int
add
or
outsl
add
sub
movsb
jno
cmp
adc
mov
test
xchg
sub
clc
xor
enter
mov
mov
jecxz
mov
dec
cmp
fnstenv
mov
push
adc
movsb
jmp
xor
adc
shlb
inc
adcl
mov
movsb
adc
shlb
mov
cmp
fsubs
push
mov
js
adc
push
cmp
movsb
arpl
xor
add
bound
mov
addr16
movsl
cmc
loope
adc
xchg
clc
cmp
jl
pop
xchg
xor
push
xchg
cld
shll
movsl
mull
sbb
nop
shlb
sbb
ret
push
inc
nop
andl
out
test
jg
incb
movsl
sbb
xchg
push
les
test
xor
fistpl
cmpsb
fimuls
xchg
cmp
inc
push
cmp
rclb
jmp
cs
cmp
psraw
incl
incl
xchg
jo
xchg
inc
jmp
add
arpl
nop
dec
jmp
cmp
xor
add
pop
pop
pop
aaa
push
lret
jb
std
add
mov
and
add
rclb
mov
push
adc
xorl
and
pusha
and
pop
push
outsb
inc
cmp
pop
adc
loopne
inc
pop
loop
push
adc
out
or
pop
inc
imul
icebp
mov
push
out
bound
xor
mov
push
inc
pop
test
pop
and
loop
push
inc
push
push
xlat
rcl
es
mov
loopne
cmp
adc
or
xchg
rorb
and
mov
adc
xor
jo
sahf
sub
sbb
clc
rorl
dec
dec
xchg
mov
in
addr16
outsb
subb
xor
xchg
aam
test
sbb
repz
lea
mov
sub
inc
cmp
cwtl
xbegin
fiaddl
insb
int3
add
das
testl
sbb
mov
orl
sbb
adc
xor
xlat
inc
cmpsl
shrl
add
sbb
leave
sub
test
clc
mov
lock
mov
enter
inc
scas
test
push
cwtl
lret
test
xchg
aas
jne
mov
test
mov
test
inc
inc
mov
or
mov
sbb
inc
cmc
push
inc
inc
ret
or
push
cmp
mov
xor
pop
and
sub
movsl
jno
jne
add
js
sub
add
arpl
fisubs
cmpsl
test
add
arpl
pop
and
das
add
push
sbb
cmp
or
and
data16
sbb
adc
lds
je
mov
dec
adc
jmp
jl
xchg
dec
and
mov
jmp
rcrb
pop
jg
cmp
and
divl
jo
inc
dec
fldenv
and
aas
mov
or
inc
bound
pop
adc
mov
adc
and
pop
ljmp
xor
dec
sub
cmp
xchg
adcl
and
pop
fildl
jo
push
aam
pop
sub
mov
out
mov
daa
inc
dec
outsl
xchg
inc
loope
loop
add
je
dec
mulb
push
cwtl
popf
cmp
add
cmp
aam
cld
lods
jmp
mov
mov
dec
hlt
mov
dec
clc
sub
mov
fadds
lock
add
lea
jecxz
lret
xorb
or
adc
add
popf
nop
sbb
sbb
filds
setg
xchg
adc
mov
sbb
outsl
jae
push
adc
pop
mov
jle
or
mov
add
and
mov
scas
rorb
mov
scas
add
loop
insb
add
dec
mov
xchg
test
jo
adc
inc
add
in
insl
or
ss
xor
xor
sub
lock
sub
cmp
push
xchg
outsl
jb
in
cmp
imul
sbb
shlb
xor
jp
movsl
jge
dec
xor
xchg
dec
adc
shl
add
jo
mov
sub
std
xchg
out
test
push
mov
push
movsl
hlt
add
or
xlat
fisubs
ret
xor
add
pop
adc
adc
lock
dec
in
mov
sub
push
inc
in
mov
dec
inc
push
loopne
scas
push
push
push
aas
adc
jo
xchg
push
xor
pop
jmp
mov
dec
mov
test
into
inc
cmp
test
push
int3
mov
push
mov
aam
nop
sub
fstl
push
xchg
sahf
sub
fwait
mov
js
das
test
adc
jns
lret
out
mov
pop
inc
cmp
xchg
fidivs
push
ret
mov
adc
sub
out
loopne
aam
pop
lock
dec
xchg
mov
jne
dec
cmp
fidivs
es
or
xchg
push
orl
sbb
xchg
xor
loopne
enter
fdivs
jecxz
mov
clc
add
and
sub
inc
das
leave
lock
push
aam
adc
inc
adc
mov
and
sbb
rorl
dec
mov
jns
test
pop
rcrb
xchg
cmp
jne
ja
lock
jae
shlb
mov
loopne
sbb
cmpl
mov
ljmp
das
ss
or
and
mov
cmp
mov
pop
push
push
push
and
mov
xchg
sbb
aam
inc
nop
sbb
dec
loop
sbb
add
call
les
push
jmp
outsl
mov
in
lock
fldt
and
incb
les
pop
jg
jl
mov
ret
push
adc
pop
or
jle
decl
cmpb
inc
add
out
fs
test
add
sbb
loopne
jg
xor
test
xchg
mov
icebp
add
in
cmpsl
jne,pt
inc
or
inc
pop
and
push
xchg
mov
inc
xchg
movsb
mov
mov
das
push
dec
push
aaa
lock
mov
pop
or
or
popa
jb
add
popa
jle
mov
sahf
adc
adc
adc
xor
adc
or
add
push
bound
adcl
insb
arpl
mov
mov
sbbb
les
dec
mov
movsl
xor
add
add
mov
xor
clc
test
sbb
js
arpl
add
cmp
bound
or
mov
push
sbbl
and
aam
ljmp
mov
add
jp
push
add
jp
es
or
es
jge
and
adc
pusha
lret
cmp
in
sub
insl
ftst
add
cwtl
mov
dec
adc
inc
xchg
xchg
jnp
jp
lret
movsb
int3
inc
in
sahf
or
aas
lret
push
cmp
fdivr
inc
jl
lret
sets
or
cmp
int3
in
or
sub
iret
sbb
int
scas
push
lods
mov
scas
pmullw
lock
mov
les
pop
sar
push
lods
mov
xchg
into
testl
adc
in
shlb
inc
mov
push
clc
pop
jmp
mov
xor
icebp
inc
dec
xorl
xlat
xor
pop
clc
es
fistps
clc
loop
fcmovnb
and
hlt
pop
cld
out
mov
inc
inc
jp
push
pop
pop
in
xorl
in
sub
add
mov
sbb
repz
inc
cmpsl
or
gs
mov
xchg
add
test
or
adc
inc
fcmovbe
pop
cmp
mov
mov
pushf
push
inc
les
jns
lret
rorl
or
inc
add
movsb
push
and
fs
int3
push
roll
pusha
and
sub
pop
cmp
scas
dec
cwtl
pop
in
inc
dec
add
mov
ds
inc
idivb
insb
sbb
dec
repnz
add
fsubl
or
js
pop
fcompl
add
or
add
pusha
adc
jmp
cmp
pop
roll
inc
cmp
ret
xor
adc
or
push
outsl
cmp
inc
aas
int
xchg
add
xor
popa
jbe
dec
pop
xchg
mov
push
ja
mov
or
aas
inc
pop
setae
inc
or
jae
loopne
xor
loope
mov
xor
popa
cmp
lock
push
popa
fs
aam
add
cmp
jns
push
inc
push
lea
inc
dec
or
in
popf
adc
jmp
sbb
mov
adc
xor
daa
mov
cmp
or
mov
sbb
adc
cwtl
ret
shll
cmp
add
pop
ficompl
dec
xlat
add
rolb
in
cltd
pop
mov
or
pop
icebp
shrb
add
or
xchg
icebp
ds
pop
jo
xor
neg
dec
inc
pusha
outsb
jl
aaa
xchg
xchg
test
call
es
stc
pop
inc
inc
insb
push
push
push
add
inc
pop
adc
sbb
pushf
ffreep
pop
or
add
xor
lods
pop
add
pop
les
aaa
dec
mov
push
out
adc
roll
ret
mov
outsl
mov
pop
adc
lods
pop
and
cld
or
stos
and
ret
push
mov
add
or
add
fadds
bound
add
mov
icebp
cmp
xor
push
add
inc
test
jo
dec
shrb
mov
mov
movsb
ds
les
lea
push
jnp
mov
iret
or
inc
lods
cs
cmpsl
inc
mov
dec
pop
cmpsl
add
push
pushf
insb
sbb
or
mov
and
out
andps
add
pop
cmp
jnp
cmp
insl
ljmp
shll
adc
sub
or
push
cs
scas
dec
mov
or
je
imul
xor
jg
ljmp
jo
mov
adc
push
hlt
test
pushf
test
dec
ret
sti
sbb
sbb
jo
in
pop
jbe
push
sbb
and
push
sbb
shll
rcll
fwait
add
push
shll
rcrb
js
test
and
and
push
out
push
or
push
nop
pop
pop
and
mov
or
push
movsb
sub
mov
and
popf
inc
stos
daa
or
roll
orl
sbb
leave
adc
mov
mov
mov
in
in
fisttps
insl
or
imul
addl
mov
and
rcrl
pop
dec
or
test
sbb
out
in
jo
add
paddsb
outsb
out
and
mov
and
jmp
cmpsl
cwtl
adc
rcrb
nop
jl
mov
and
ret
cmc
jge
cmpsl
shlb
xor
xor
xor
inc
call
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
push
push
push
push
pop
pop
pop
mov
dec
cmp
daa
push
rcl
add
mov
xor
dec
fs
push
dec
hlt
adc
mov
push
imul
shll
push
xor
rclb
adc
testb
data16
and
cs
in
add
add
mov
jns
or
and
ljmp
cmp
pop
xchg
incb
pop
jp
push
pop
lods
push
sarb
icebp
or
pusha
sbb
xchg
mov
mov
dec
loopne
inc
xchg
clc
sub
clc
and
fsubrl
into
push
push
aam
inc
mov
mov
mov
push
inc
jge
shll
xchg
lea
or
in
sarb
stos
pop
cli
xor
xor
mov
in
mov
jbe
sub
je
sbb
push
mov
mov
add
or
nop
xchg
or
and
mov
add
es
jmp
fsubs
and
inc
inc
inc
pusha
dec
xchg
inc
cli
loope
dec
call
mov
xchg
dec
mov
or
xchg
sbbl
and
aas
les
or
enter
and
mov
mov
cmpsb
adc
pop
xchg
mov
lock
dec
test
sub
push
inc
loope
mov
or
cltd
cvtps2pd
pop
call
mov
inc
ss
or
or
mov
adc
sub
sbb
jne
inc
sub
jl
add
pop
lahf
lcall
pushf
sbb
jo
pushl
ss
dec
push
outsl
push
adc
out
mov
add
inc
das
inc
jmp
popa
mov
and
sub
imul
dec
add
mov
xchg
in
outsl
cmp
sti
jmp
inc
sti
test
inc
jmp
add
out
enter
adc
clc
sub
or
mov
vpshab
fildl
add
loop
xor
fisttps
lahf
test
popa
fistpll
push
mov
push
cmp
ja
fdivs
shr
adc
xor
pusha
je
mov
add
enter
or
sub
outsb
fidivrs
mov
ret
add
or
mov
cmp
xor
stc
insl
adc
and
clc
icebp
or
xchg
fiadds
loope
imul
jmp
push
and
inc
adc
mov
sbb
arpl
es
sub
aad
insb
mov
jmp
cmp
cmp
jo
sbb
pop
mov
pop
xor
jmp
ss
xor
hlt
xor
scas
mov
pushl
aaa
in
xlat
nop
fistl
mov
icebp
jns
jb
in
lods
inc
ret
inc
jg
push
fisubrs
and
sub
insl
sbb
pop
mov
xchg
and
lea
inc
imul
imul
add
jg
movsb
roll
mov
dec
mov
inc
cmp
pushf
pop
push
mov
xchg
add
push
jb
ss
pop
pusha
xor
pop
jo
push
inc
addl
arpl
mov
cmpb
or
sbb
test
pop
in
aas
cmp
filds
shll
repz
add
mov
push
mov
test
aas
mov
pushf
dec
es
dec
ret
inc
imul
or
cmp
testl
mov
fsubr
dec
xor
fisubrs
int
inc
dec
xor
orb
outsl
or
or
sarl
push
mov
jb
sbb
inc
aas
xor
inc
inc
adc
test
movsl
xchg
jmp
dec
sti
inc
movb
push
cmp
add
ret
pop
aas
add
movl
pop
icebp
js
clc
sub
mov
sahf
sbb
add
xor
sbb
loop
mov
imul
adc
mov
dec
jg
cmpl
cmp
mov
js
fcomps
adc
int
femms
js
rcr
nop
push
data16
dec
pop
push
lods
xor
add
xor
repnz
popf
dec
fcomps
fbstp
xor
clc
push
dec
cmp
jne
cs
jecxz
jnp
or
or
push
xor
push
imul
sub
xchg
fucomi
dec
pop
pusha
mov
jae
push
pushf
fs
fmul
xor
cmp
mov
jne
in
mov
push
stos
pushw
imul
sarb
addb
adc
sub
or
clc
xor
aam
cmpb
and
add
dec
inc
cmpsb
jbe
inc
dec
popf
mov
shlb
enter
add
adc
adc
pop
test
loopne
cmp
data16
leave
mov
or
repz
je
call
xor
into
lock
fmulp
sarb
rclb
cmp
dec
xor
push
into
or
pop
or
aam
push
test
and
jo
movsl
or
push
xor
andb
imul
roll
xor
lods
adc
sti
cmp
sub
test
mov
fistpl
mov
sub
push
in
jmp
lods
inc
test
pop
adcl
lds
bound
xchg
inc
rclb
mov
imul
test
inc
je
pop
imul
mov
test
rclb
ds
pop
push
cltd
je
in
das
inc
fsubr
ljmp
cli
add
adc
sub
cs
fnstcw
out
divl
sbb
sbbb
push
add
mov
or
add
add
mov
rolb
dec
adc
inc
ret
enter
inc
fnstenv
mov
mov
gs
adc
xor
aas
sti
insb
mov
mov
sbb
mov
lods
lret
out
ret
and
fiadds
call
add
adc
test
je
jp
mov
mov
call
test
adc
je
je
negb
in
xchg
insb
out
pop
and
push
jo
xchg
mov
add
popa
decb
inc
jnp
or
sub
pop
movb
call
bound
and
insb
mov
gs
add
jbe
je
shll
xor
inc
shl
cmc
and
mov
dec
adc
xchg
fsts
mov
sub
cmp
pushf
aad
mov
jecxz
cmp
jae
mov
cld
jmp
add
sbb
jbe
sbb
jle
es
sub
inc
mov
pusha
xchg
add
cmp
mov
or
cwtl
push
or
test
in
data16
sub
mov
pop
ds
fmull
clc
fcom
inc
out
ljmp
lds
push
xor
test
imul
int3
and
adc
scas
or
shll
loope
mov
loopne
xorb
or
jmp
mov
add
push
and
inc
loopne
faddl
or
push
aas
mov
and
fstpl
cmp
jne
vmread
push
shl
fiadds
jns
sub
movsl
fnstenv
dec
push
dec
inc
and
pushw
movsb
mov
daa
ja
mov
mov
jge
jecxz
aad
jle
ja
js
mov
insl
dec
add
hlt
les
mov
inc
or
and
inc
add
inc
lea
ret
xchg
rcll
pop
arpl
movsb
push
fldenv
test
mov
or
mov
push
mov
ret
cwtl
jecxz
test
out
push
lock
or
xor
aaa
and
xchg
xor
pop
icebp
mov
scas
xchg
add
push
mov
dec
push
nop
or
inc
sbb
jge
loopne
fiadds
jns
imulb
adc
dec
cltd
adc
aas
fdivrs
add
jmp
sub
and
lret
insl
leave
xor
xlat
enter
or
sbb
cmp
inc
movb
push
ss
jne
rorb
sub
xchg
xor
enter
xchg
pop
das
loopne
sbb
pop
pop
lock
hlt
enter
sbb
das
std
inc
enter
jne
hlt
sub
mov
mov
es
cltd
pop
inc
data16
dec
movsb
jle
sbb
shl
pop
inc
jbe
sub
les
push
sbb
rclb
adc
xchg
mov
mov
xor
sbb
pop
and
mov
lock
movsb
lock
loopne
mov
add
mov
enter
jmp
push
popa
orl
cld
jno
fisubl
mov
push
in
mov
ljmp
or
sub
mov
fadds
jns
rolb
insb
and
addl
jmp
outsb
and
movsl
subl
cmp
push
mov
or
inc
jno
fadds
pop
scas
imul
aaa
pop
push
push
fildll
lret
dec
lock
adc
jno
xlat
xchg
dec
int3
scas
mov
xchg
mov
pop
pop
mov
ret
push
popa
and
mov
sub
add
popf
fwait
add
pop
push
or
imul
sub
sub
shll
ret
incb
push
sub
xchg
cmp
sub
roll
mov
cwtl
movsl
or
adc
test
lds
add
jl
lea
movsb
cmp
popa
xor
dec
cmc
sub
and
mov
or
subl
stos
mov
iret
insb
and
xchg
iret
hlt
cmp
adc
iret
hlt
hlt
fwait
xchg
adc
xchg
add
and
ret
or
movsb
inc
push
add
imul
clc
or
pop
jns
lret
inc
push
xor
insl
sbb
sub
add
xor
leave
lock
rorl
add
sar
and
sti
or
in
pop
fildll
push
push
enter
movb
push
pop
xchg
ret
fdivs
nop
dec
pop
sub
mov
xor
ja
pusha
pop
je
inc
or
xchg
fistps
scas
adc
addl
loopne
and
ja
dec
add
jne
lock
add
dec
mov
aaa
test
xchg
popa
xchg
dec
or
out
aam
xlat
sbb
pusha
adc
jge
sub
ret
sbb
add
sahf
push
push
or
or
movsb
imul
dec
fisttpl
cmp
addl
or
pushf
or
xchg
add
and
cmp
adc
test
sbb
bnd
cwtl
pop
sub
push
or
sub
xchg
sub
add
sub
adc
and
mov
pop
push
xor
xchg
adcb
ret
pop
lods
dec
in
push
add
fs
out
out
pusha
adc
hlt
aad
in
inc
or
adc
loopne
xor
xor
mov
in
jmp
les
add
rorl
dec
mov
or
arpl
and
inc
jb
mov
pop
clc
sub
inc
fs
jno
mov
lock
clc
aad
stos
and
into
in
enter
in
and
ret
mov
mov
imull
rclb
pop
pop
and
inc
pop
clc
push
pop
sbb
jb
sbb
and
pop
in
pop
add
or
pop
and
add
movsb
jmp
and
test
and
jge
mov
icebp
adc
fs
mov
cmp
sbb
sub
sbb
sub
jmp
add
pop
mov
jmp
arpl
fisubrl
shl
mov
mov
adc
add
mov
adc
inc
inc
and
test
or
ficomps
sbb
push
pop
mov
push
sbb
pop
shrb
pushf
lcall
push
mov
mov
outsl
dec
xlat
dec
dec
fsubrs
pusha
dec
jecxz
push
je
jp
push
pusha
jnp
pop
rcrb
mov
sbbl
and
adc
dec
das
xor
pop
pop
jl
rolb
push
ds
fs
incb
cmpw
repz
lock
or
insl
loop
ret
pop
dec
daa
jge
or
test
cmc
rorl
push
add
add
aam
push
xor
sub
add
cwtl
test
xor
test
test
xor
in
sbb
or
add
inc
and
loopne
mov
mov
mov
add
add
adc
hlt
loop
push
in
mov
mov
pop
pop
cmpsb
pop
adcl
test
sbb
pop
xchg
mov
call
push
sbb
insl
jnp
lods
in
or
jmp
dec
push
stos
add
es
shrb
cltd
push
sar
mov
sbb
xor
int
mov
push
cmpsb
ds
sub
iret
or
or
xchg
add
sub
ss
push
jno
sbb
subl
pop
pusha
in
ja
cmpl
jbe
pop
or
mov
fdivl
xor
mov
sbb
je
cmpsl
rclb
cmp
pushf
inc
push
and
push
and
int
add
xchg
cmpsl
pop
movsb
in
xor
or
testl
add
pusha
mov
mov
call
movsb
fstl
outsb
dec
inc
in
faddl
pushf
xchg
test
push
push
movl
or
dec
das
push
ret
add
inc
xor
lea
xor
inc
ret
dec
pop
or
aas
insb
and
mov
jle
ret
in
fs
pop
or
jp
push
aas
cmp
pop
adc
inc
dec
pop
loop
pop
and
ljmp
outsb
test
add
jne
or
les
sub
push
daa
lock
xchg
push
lock
inc
aas
sub
fstl
outsl
cmpsl
cmp
pop
dec
test
mov
sbb
adc
pop
push
pop
stos
orl
mov
insl
popa
mov
mov
xor
cmp
or
fsubrs
pop
add
hlt
mov
push
mov
mov
inc
dec
gs
xchg
adc
add
fbld
add
sbb
fcomps
lds
jg
jno
insb
shll
mov
mov
push
fidivrs
ds
inc
or
adc
pop
or
lods
loopne
dec
je
outsb
vpextrw
jne
lds
ret
mov
xor
jg
mov
and
jnp
sub
add
loopne
aas
rolb
insl
cmp
daa
adc
sbb
das
out
sub
je
pop
pop
addb
jecxz
push
inc
pop
cmp
cmp
or
sbb
fs
push
notb
sbbb
lds
pop
subl
fimuls
or
adc
jge
sbb
test
je
sub
inc
and
push
pop
add
fcmovnb
mov
sub
inc
push
orb
aad
dec
imul
ljmp
mov
popl
movsb
mov
in
lock
mov
sub
cmpsb
mov
jp
or
movsb
jp
adc
xor
mov
xchg
test
pusha
and
adc
cmpsb
mov
dec
out
ss
xchg
jg
xchg
sub
into
fdivrl
mov
or
lcall
xlat
orb
cmp
sahf
adc
mov
cmpsl
stos
sbb
and
xchg
outsb
jmp
jne
xor
fbld
fstl
mov
xor
and
add
mov
inc
jmp
jmp
mov
xchg
sub
xchg
mov
das
add
pop
xor
xchg
mov
xchg
into
adc
push
xor
and
inc
cmp
jl
xor
inc
mov
dec
sbb
movsl
push
dec
mov
push
in
mov
js
rclb
jmp
pop
lahf
ret
fdivs
sub
cwtl
jnp
sti
fbstp
xlat
and
add
loope
shr
jg
or
incb
out
pop
inc
popf
test
dec
jno
mov
push
iret
dec
or
popf
push
push
add
jne
sub
dec
mov
test
dec
sub
and
xor
inc
cmpsl
loopnew
cmp
xor
push
sub
xor
mov
fdivrs
mov
inc
lods
out
add
adc
jp
add
fwait
add
jo
iret
int
lret
jno
mov
aaa
enter
inc
sbb
pop
cmp
sbbb
cmp
imul
ss
mov
xlat
sti
sbb
lret
push
cmp
xchg
rolb
es
jnp
and
lret
or
xchg
push
xchg
sti
dec
cmp
mov
mov
pop
cwtl
std
fimull
mov
notl
test
enter
mov
fdivrs
cltd
pop
mov
mov
push
push
mov
mov
pop
dec
rcr
les
lea
clc
popfw
mov
in
adc
aas
movsl
insb
aam
mov
jae
inc
inc
xchg
or
lahf
pusha
jne
pop
in
nop
mov
jno
pusha
push
push
data16
sarb
dec
mov
dec
pop
lret
dec
dec
dec
adc
das
dec
jg
adc
popf
push
das
pop
xlat
xor
pop
stos
inc
fdiv
or
xlat
adc
and
mov
mov
add
aaa
and
inc
pop
orb
mov
mov
adc
mov
add
pop
xchg
dec
mov
inc
mov
add
ds
pop
test
mov
push
xchg
and
adc
popf
or
jecxz
jmp
jae
int
pop
call
jne
jns
inc
mov
pop
jg
in
enter
jl
adc
call
add
rolb
xor
mov
pop
and
xlat
ret
insb
xchg
and
fisttpl
inc
imulb
inc
mov
int
pop
mov
add
ret
lea
and
inc
out
movsb
add
bound
fmul
adc
xor
xchg
fmuls
adc
pushf
xor
mov
shrb
call
dec
sbb
repnz
mov
cli
xor
arpl
fidivrs
cmp
mov
inc
push
sbb
iret
adc
add
sub
or
out
jmp
shlb
add
push
stos
add
mov
ffreep
les
sub
enter
push
fstpt
lea
lods
lock
or
cld
push
sarb
repnz
sti
popf
fwait
jmp
pushl
dec
inc
add
adc
loope
movsb
mov
adc
add
and
inc
and
repz
sbb
mov
add
jae
es
sub
dec
roll
add
rol
cmpsb
fldl
int3
add
call
pop
flds
jecxz
inc
inc
out
aam
sbb
cli
lea
mov
sub
cltd
icebp
mov
mov
or
xor
popa
sbb
jno
imul
adc
test
fcomip
sbb
and
clc
inc
in
mov
inc
add
enter
dec
cmpxchg
pop
sbb
insl
sbb
loopne
ret
les
dec
push
cmp
test
add
xchg
shrl
inc
les
ret
in
fadds
sbb
jne
dec
push
pop
fsubr
xchg
cmp
sbb
int
jmp
jp
aam
sbb
aam
je
push
sbb
lods
push
dec
repz
xorb
push
out
rorb
adc
xlat
jno
shll
and
into
lea
movsl
adc
cmp
stos
mov
inc
push
outsb
vcmppd
int3
inc
add
imul
adc
push
daa
adc
pushf
scas
mov
adc
and
inc
jmp
aaa
frstor
jle
rorl
mov
jns
je
and
xor
xor
std
mov
dec
add
pusha
jmp
push
mov
fisubl
add
dec
sbb
sub
inc
pop
mov
or
push
and
cmp
mov
cmp
adc
pop
stc
call
push
jns
mov
pop
cmp
in
fsub
adc
cmpsl
pop
push
sbb
mov
iret
add
cwtl
fxch
cltd
inc
add
popa
orb
jbe
xor
and
std
mov
into
add
push
or
push
aas
push
pusha
dec
ret
test
cmc
sbb
inc
mov
add
xchg
es
xchg
adc
mov
int
bound
sub
cmp
or
fcoms
mov
lcall
dec
int3
jg
xor
push
add
data16
sub
pop
cmp
jle
pop
or
mov
and
add
iret
mov
dec
das
loopne
leave
inc
mov
sbb
xor
pushf
xchg
inc
adc
mov
movsl
insl
jno
cmp
roll
ja
sti
mov
cmp
test
sahf
add
mov
mov
and
scas
inc
xchg
sarl
dec
ret
inc
sbbl
mov
cmpb
movb
sub
lods
daa
add
or
sbb
add
call
cwtl
adc
mov
jle
aaa
dec
and
inc
jb
adc
mov
idivb
mov
xchg
cmp
inc
cmp
cmp
cs
mov
and
jnp
push
cmp
rolb
xchg
or
add
mov
addl
test
mulps
mov
inc
std
cmp
mov
subb
inc
mov
loopne
xchg
sbb
xor
jl
cmp
pop
popa
inc
cmp
dec
push
add
push
sti
out
xor
pop
inc
inc
repz
dec
xor
xor
xchg
lods
repz
and
aaa
inc
stc
and
loope
pop
addb
sub
mov
ret
pop
xor
cmp
mov
xchg
jmp
xor
ss
ret
add
clc
sub
pop
nop
daa
mov
add
xor
add
xchg
add
sub
shll
adc
xchg
mov
fildll
jmp
pop
add
mov
icebp
cmc
and
jo
push
pushl
add
scas
daa
mov
mov
gs
mov
call
lahf
cmp
jmp
aam
or
sub
movsb
int3
movsb
push
and
add
int3
js
and
rcrb
pop
mov
insl
xchg
pop
mov
cltd
mov
jle
inc
mov
sub
dec
fs
and
mov
adc
dec
sbb
inc
jo
inc
into
gs
ret
testl
or
cmp
or
mov
out
adc
adcl
adcl
in
mov
mov
ret
push
inc
arpl
or
dec
cmp
rclb
sbb
mov
dec
lods
int
nop
das
subl
movsb
popa
jno
pop
adc
sbb
add
pop
sub
cmp
push
push
add
movb
icebp
push
test
mov
loope
insb
lock
push
cli
in
mov
add
loop,pn
mov
pop
dec
add
inc
dec
shlb
fxch
cmp
add
cmp
lock
push
cmp
jp
and
push
inc
and
bound
jnp
pop
inc
sub
loop
dec
sbb
cs
add
mov
adc
jmp
dec
add
shll
jo
mov
sbb
add
push
cli
data16
insl
movsb
cli
add
cmp
cmp
jge
push
mov
and
and
int3
scas
push
or
je
subb
jne
fucomp
and
adc
or
filds
inc
cltd
cmp
rcr
mov
rcll
push
add
push
cltd
daa
push
js
sbb
adc
aaa
es
out
cs
addr16
lea
mov
mov
add
pop
push
sbb
roll
pop
clc
mov
xor
filds
lods
lds
inc
cmpsl
sbb
xchg
push
or
stos
jb
ja
iret
testl
push
push
inc
sbb
cmp
scas
sub
orb
pop
inc
inc
pop
push
mov
loop
cs
mov
rolb
ret
xor
movsb
fists
lahf
dec
fistpl
rol
or
mov
and
inc
cmp
andl
cmp
inc
stos
imul
fs
add
test
daa
sbb
add
stos
clc
out
xor
sub
push
xchg
icebp
icebp
add
insl
lret
mov
std
cld
mov
jb
xor
sub
pop
lock
movb
pop
leave
leave
jmp
cld
pop
or
mov
jb
add
or
pop
inc
or
add
add
jb
jo
push
sbb
test
int3
loopne
cmp
enter
adc
sub
ret
ds
clc
xor
cmp
pop
or
xchg
jl
sbb
and
je
stos
push
sarb
add
xor
mov
ds
pop
lods
movsb
test
lods
shll
dec
push
das
jmp
add
mov
gs
test
cli
or
sbb
add
sti
push
mov
push
jno
out
movsb
xlat
fisttpll
dec
mov
test
and
das
mov
aam
inc
shl
prefetch
or
stc
pop
cwtl
cwtl
addb
sbb
pop
adc
adc
rclb
int
xor
mov
rolb
xor
mov
fmuls
mov
cmp
out
or
inc
test
cmc
jo
pop
add
jb
push
cmp
pop
nop
das
dec
or
sbb
inc
dec
inc
dec
xorb
fwait
jno
dec
push
ja
push
lock
rcrb
jb
cltd
aas
xor
incb
ret
sbb
push
cwtl
or
jmp
in
add
xor
cmp
cmp
popa
xchg
cmp
js
inc
xor
lret
test
mov
add
push
mov
jmp
cmp
testb
push
add
clc
fsubr
sub
jb
or
xchg
cmp
push
inc
xor
movl
mov
dec
mov
xchg
ficoms
mov
and
pop
call
loopne
push
push
stos
inc
xor
shl
cmpsl
push
jno
out
push
in
shr
movsb
add
cmpsl
call
xchg
aam
movsb
or
fimuls
lahf
test
ja,pn
fldt
inc
adc
insl
push
aas
rolb
pop
insb
clc
push
mov
xor
inc
or
dec
cwtl
rdmsr
jge
adc
inc
loope
push
jmp
sbb
imul
jns
pop
pop
adc
shlb
jl
adc
mov
call
dec
add
std
cmc
mov
xchg
lret
jno
imulb
xorb
xchg
mov
inc
sbb
or
xchg
xor
or
ficoms
nop
lock
in
std
adc
mov
cld
pop
hlt
fcomps
insb
mov
ss
iret
jo
hlt
leave
push
clc
pushf
or
mov
std
test
xchg
cmp
adc
mov
sbb
addr16
pcmpeqd
jmp
jb
inc
mov
lcall
and
cmp
lock
inc
xor
inc
push
add
je
inc
xor
adc
add
sbb
sbb
sbbb
push
mov
push
movsb
mov
push
adc
cmp
and
or
push
cmp
cmpb
ljmp
cmp
xor
cmp
xchg
add
je
push
sbb
and
mov
adc
xorb
mov
icebp
dec
and
stos
sub
in
lock
mov
daa
add
mov
sbb
loopne
cmc
cld
push
js
or
or
fisttpll
sub
pop
ret
inc
adc
loopne
adc
dec
xor
or
xchg
test
add
dec
shll
test
aaa
push
pop
scas
pop
les
aas
jbe
inc
enter
scas
adc
mov
rcrb
lret
adc
movsb
xchg
sub
test
push
stos
pop
insb
dec
or
push
out
pop
xchg
sbb
je
sub
je
add
mov
inc
pop
add
sub
mov
xchg
es
or
and
xor
sub
sbb
mov
inc
sub
imul
rol
pop
xor
inc
push
test
add
popf
mov
call
pop
mov
movzwl
inc
in
adc
push
or
inc
mov
fiaddl
hlt
iret
and
xchg
add
xchg
pop
lds
mov
xchg
cli
inc
pop
orl
and
sbb
cmp
and
insb
int
lea
hlt
int3
and
mov
xor
into
nop
and
jbe
rol
aam
or
movsb
sub
data16
ficoms
mov
sub
or
sbb
fcoml
testb
adc
add
enter
add
pusha
add
sti
jo
imul
and
add
out
push
push
push
mov
adc
push
xor
cmp
or
scas
dec
call
js
push
sbb
xor
stos
daa
push
mov
inc
lret
push
mov
sbb
add
mov
sbb
pop
mov
xchg
cli
out
xchg
fsubs
pop
mov
nop
push
mov
jb
das
cmp
je
fsub
outsb
add
sub
push
subl
daa
in
inc
arpl
sbb
lock
pop
sbbl
adc
in
dec
pusha
roll
mov
imul
ret
and
push
jecxz
adc
sbb
cmp
and
mov
je
mov
xor
sbb
push
dec
mov
dec
and
lock
les
push
add
add
lods
pusha
jbe
sbb
push
insb
add
inc
jecxz
push
or
mov
add
rclb
fwait
pop
test
movsl
iret
push
adc
and
push
push
sti
push
mov
cmp
fildll
sbb
jl
loop
fstps
mov
rorb
insb
movl
xor
outsb
cli
mov
mov
sbb
sub
add
pusha
mov
xchg
mov
or
arpl
or
aaa
sbb
aaa
divb
push
sub
jl
add
cmpl
sbb
push
push
into
mov
aaa
pushl
subb
ficompl
loope
std
jmp
jge
add
fcoml
cmp
jns
pushf
nop
sub
xchg
inc
cwtl
sub
mov
lods
call
inc
insb
pop
xor
cwtl
ret
sbb
and
cmc
pop
stc
mov
pop
fstpl
cli
adc
dec
push
sarl
inc
xor
insw
into
out
in
shrb
test
ficompl
aam
dec
roll
ja
inc
aam
pusha
lcall
sub
sbb
aaa
sub
testl
shl
or
add
rorb
jnp
push
stos
daa
pop
inc
test
clc
or
adc
pop
sti
cmp
ret
lcall
dec
cmp
jne
or
inc
xchg
xor
adc
fadds
fsubs
jl
add
sub
or
and
sbb
push
and
push
sbb
cmp
inc
jle
xorb
sbb
mov
pop
xor
push
mov
sbb
stos
enter
dec
and
dec
pop
cmp
or
jo
mov
jmp
mov
cmp
mov
jmp
cmp
jne
pop
add
bnd
xchg
nop
xchg
dec
push
lock
adc
das
inc
clc
xlat
mov
jne
jae
dec
imul
shrl
jne
fdivrs
pop
inc
jg
test
add
out
movb
test
mov
push
cli
cmp
aaa
call
jmp
cmp
and
lock
pop
or
jl
inc
sbb
push
lds
inc
js
ret
sub
or
inc
sti
ss
jge
and
jp
clc
lods
lock
adc
nop
sub
test
ret
aad
movsl
es
jb
inc
jns
aam
mov
jle
push
test
mov
push
ficoms
push
mov
jo
mov
repz
outsb
insb
enter
les
repz
jnp
pusha
aas
push
pop
push
pop
pop
adc
jnp
mov
push
push
push
dec
dec
push
fs
pushf
mul
mov
pop
js
sbb
add
roll
cltd
cli
mov
jb
mov
or
sbb
pop
sub
cs
jl
mov
mov
pop
test
and
dec
mov
mov
push
je
sbb
stc
sbb
outsl
aas
and
ret
inc
mov
xor
xor
mov
pusha
stos
dec
sbb
add
and
dec
outsb
arpl
mov
stc
sahf
sub
push
sbb
testb
cmp
andb
insb
ss
inc
mov
adc
or
push
add
add
dec
add
sbb
jbe
add
cmpsb
adc
xchg
adc
test
add
or
push
cmp
push
lock
mov
add
shr
adc
scas
push
push
xchg
inc
push
rcr
mov
or
pop
int3
loopne
xchg
aas
or
or
ja
inc
push
and
scas
cmp
sbb
add
aad
js
adc
inc
xorb
or
xlat
jl
inc
adc
sub
sahf
ja
ds
pop
adc
mov
stos
mov
push
stc
pop
cmp
add
cmp
test
xor
fildl
or
push
add
push
pop
insb
pop
adc
pop
mov
or
divb
inc
sbb
lea
sbb
pop
pop
js
nop
cs
mov
mov
dec
cld
push
sub
pop
shl
jae
into
les
inc
jbe
pop
dec
inc
imul
xchg
push
jb
decb
push
movsb
and
fs
mov
sbb
dec
jne
push
dec
dec
inc
and
inc
and
push
push
in
inc
add
aam
pusha
lcall
sete
add
outsl
hlt
dec
movsb
dec
pop
add
push
fcoms
ja
mov
fcompl
mov
and
and
imul
push
adc
push
inc
xor
bound
sbb
lods
ret
nop
xchg
pop
xor
add
sbb
mov
outsb
or
mov
aaa
stos
push
or
inc
jp
dec
or
dec
or
or
cmp
xor
dec
and
adc
adc
mov
movsb
jno
sbb
push
bound
and
or
or
jo
add
mov
subb
outsl
subb
jae
nop
movzwl
nop
mov
les
lcall
add
sub
dec
mov
das
mov
pop
in
out
pop
and
mov
into
push
ds
sub
adc
int
sbb
add
in
xchg
or
test
cs
xor
rorw
adc
push
adc
push
dec
or
jle
out
adc
jns
outsb
ret
out
mov
sahf
cmp
or
lods
add
push
mov
loopne
in
jae
pop
cwtl
in
outsb
jne
sbb
jnp
pop
or
push
mov
push
or
jae
xchg
dec
and
xchg
hlt
cmp
mov
outsl
testb
adc
adc
jbe
sbb
data16
adc
cs
out
icebp
and
gs
add
lea
outsl
add
jl
shlb
and
shll
inc
and
mov
cmp
fs
mov
push
jb
ret
insb
xchg
test
or
mov
iret
andb
cmpsl
xchg
and
sarl
push
outsb
adc
lock
addb
push
data16
pop
and
cmpl
push
ds
add
test
add
movl
xchg
mov
or
imul
or
iret
push
nop
jge
and
cmp
popl
push
rcr
jnp
add
roll
xchg
adc
jp
xchg
xor
lcall
add
push
call
or
daa
adcl
dec
jae
push
add
dec
add
mov
clc
cmp
out
cwtl
ja
push
pop
nop
mov
adc
cmp
or
inc
loopne
cld
pop
or
or
out
mov
or
and
and
pop
orb
jl
outsb
scas
and
pop
mov
push
inc
sbb
add
mov
push
jle
push
imull
pop
inc
push
add
push
mov
inc
dec
cmp
add
loopne
push
testl
pop
inc
dec
or
inc
sbb
int3
cs
or
jg
repnz
negb
loopne
rcll
data16
ja
js
nop
out
xchg
loope
add
xchg
push
imull
inc
push
jnp
push
out
negb
lcall
push
adc
sahf
popa
inc
repz
lock
push
test
push
push
mov
fs
das
and
mov
add
add
add
dec
adc
add
adc
push
test
inc
push
mov
sub
js
pop
add
mov
scas
movsb
subb
push
mov
lcall
sub
adc
inc
mov
pushl
mov
mov
scas
ljmp
push
jo
or
stc
jmp
imul
dec
sbb
jge
int
call
mov
jns
cs
push
push
test
mov
mov
aam
mov
cld
mov
lcall
out
cmp
ds
js
pushf
push
mov
sarl
enter
cmp
mov
rcr
sub
repz
sbb
insb
pop
jo
jns
or
clc
mov
out
mov
orb
mov
or
fs
sbb
or
pop
mov
rcrb
and
add
mov
push
out
nop
sub
test
pop
jo
add
inc
and
jne
xlat
outsl
pop
sbb
jo
pop
lret
push
cmp
push
std
orl
insl
pop
push
or
adc
mov
xor
lret
rol
sbbb
icebp
cmp
lahf
add
jo,pt
popa
inc
pop
repnz
dec
loope
adcb
dec
shll
into
pop
imul
or
loope
xchg
mov
shrb
shlb
sbb
sbb
loope
dec
data16
nop
or
sti
adc
xchg
jbe
test
inc
lcall
repz
orl
dec
aam
fldenv
mov
les
xor
or
ret
push
aas
sbb
cmp
xchg
or
pop
popf
fisubl
mov
scas
fimull
jecxz
sarb
and
dec
pop
inc
lock
inc
enter
iret
dec
push
cltd
dec
sbb
dec
fstp
inc
ret
pop
add
hlt
xlat
inc
fdiv
mov
mov
mov
mov
and
push
xchg
nop
jl
scas
in
push
fs
add
shrl
pop
movsl
push
push
dec
adc
mov
imul
inc
stos
dec
mov
push
push
jae
mov
loopne
mov
or
and
cmp
in
mov
sub
mov
inc
leave
add
push
sbbb
in
adc
xchg
in
mov
sub
popf
lea
out
insl
int
or
leave
outsb
or
pop
push
leave
push
insb
es
incl
popa
mov
mov
cmp
shll
inc
cltd
add
dec
inc
popf
add
ficoms
cwtl
test
ja
fwait
sub
and
or
jbe
mov
shlb
jle
inc
sbb
out
sbb
cmp
sub
outsl
push
dec
insb
fs
or
cmp
sbb
int3
outsb
das
rolb
xor
popa
and
xor
clc
fidivs
mov
imul
push
js
mov
xor
loopne
imul
jae
add
icebp
imul
inc
cmp
xorl
and
xchg
ljmp
adc
pop
jecxz
mov
push
hlt
inc
out
push
sbb
andl
xchg
and
stc
fldl
pop
in
in
or
mov
pop
xchg
incb
gs
sbb
inc
dec
cltd
add
pop
mov
or
bound
pop
adc
add
push
sub
es
dec
dec
mov
cmp
test
in
xchg
pop
pop
lock
pusha
xchg
or
adc
cltd
dec
pop
dec
cmp
out
mov
pop
xchg
fcoms
es
push
dec
cmp
fimuls
subl
ds
and
push
test
fnstcw
push
repnz
cwtl
cwtl
mov
ss
inc
insl
dec
xchg
inc
bound
sldt
or
dec
repz
pop
push
inc
inc
lds
sti
out
leave
enter
mov
subl
push
inc
inc
jmp
adc
mov
iret
dec
fadds
fmuls
pop
jae
pop
clc
jns
mov
fdivp
push
rolb
cmc
pushf
xchg
cmp
out
sbb
push
roll
mov
mov
pop
add
dec
mov
mov
push
cltd
jmp
sbb
loope
jmp
pusha
or
vpshad
dec
dec
adc
addb
movsb
dec
add
pusha
das
orl
mov
ds
je
ret
and
push
in
inc
stos
xchg
add
pusha
pusha
orl
addl
dec
push
sbb
pop
add
push
add
pusha
push
add
dec
push
add
fmul
cmp
add
inc
xchg
pusha
xchg
mov
inc
inc
push
shr
and
orl
sahf
dec
dec
push
adc
or
fdiv
das
mov
sbbl
xchg
mov
pop
pop
pop
and
pusha
ja
fistpl
mov
rcrl
shrb
adc
pop
xchg
push
sbb
into
lock
xlat
pop
sbb
lahf
or
jo
pop
add
hlt
dec
and
pop
aaa
aas
nop
cmp
aam
mov
mov
test
sub
inc
adc
add
or
mov
test
pop
mov
ja
xor
sbb
mov
insb
push
cmpxchg
test
jmp
pop
sub
rolb
mov
mov
daa
in
nop
or
inc
xor
imull
pop
mov
pusha
scas
nop
push
mov
mov
ret
clc
movsl
inc
jo
outsb
inc
dec
mov
xchg
add
and
mov
pop
sbb
and
and
rclb
fidivs
loopne
xor
adc
xchg
cmp
and
cmpsb
cmp
pop
add
inc
add
sbb
mov
and
in
mov
mov
aad
aas
cmp
test
andps
dec
or
mov
inc
adc
push
and
lock
addr16
and
sbb
push
mov
and
out
adc
fidivrl
mov
repz
cli
std
add
jmp
push
je
and
sbb
push
inc
pop
mov
and
mov
js
push
clc
sub
nop
mov
cltd
stos
adc
adc
pop
dec
cmp
jns
inc
ljmp
jae
xlat
sub
cmp
adc
dec
bound
cmp
xor
xchg
and
pop
leave
jb
imul
jae
hlt
mov
xor
sbb
jo
inc
subl
push
lods
or
sub
push
jae
sahf
mov
adc
inc
push
xor
lea
xchg
jle
hlt
loop
mov
dec
loope
fiaddl
push
or
pop
aam
and
jmp
jecxz
inc
mov
popa
add
inc
fs
sti
leave
ret
les
lahf
cmpsl
dec
loope
mov
aam
je
mov
and
push
cmc
test
fcmovnu
outsb
mov
cmp
mov
lods
rcrl
jl
fnstenv
xor
cmp
mov
je
mov
hlt
xor
inc
mov
filds
push
cmpl
insl
popa
mov
testl
cmp
mov
cmp
lcall
sub
pop
mov
test
repz
jp
popf
call
xchg
dec
jnp
and
jns
jg
xor
add
cmp
cmp
aad
cli
cmp
and
aam
and
test
fwait
enter
cmp
js
cmp
cmp
inc
lock
jae
scas
xchg
push
add
add
pop
sahf
lret
add
add
adc
dec
push
roll
adc
sbb
jae
cmp
loopne
faddl
mov
and
nop
pop
push
fidivrs
inc
adc
rclb
adc
add
cs
mov
and
add
mov
in
sbb
dec
sub
push
leave
test
xchg
ds
xlat
push
adc
pop
add
add
dec
inc
ss
sahf
inc
sete
int
xor
pushf
jge
dec
adc
add
sub
mov
sbbl
push
jl
sbb
mov
sarb
sarl
mov
xorl
inc
sbb
jae
or
or
mov
sub
sub
push
inc
aas
mov
jo
mov
clc
dec
loop
sbb
sub
inc
push
fadds
xor
sarb
or
xor
add
pop
push
sbb
xlat
popf
add
lcall
fcomps
fistpl
outsb
sub
or
adc
das
and
push
mov
add
jmp
sub
add
rclb
std
addb
inc
popa
mov
sub
or
push
inc
add
mov
popa
nop
and
push
xor
or
add
cmpsb
je
movsl
ret
xlat
dec
leave
out
test
add
inc
or
in
inc
inc
dec
adc
inc
adc
mov
ss
and
mov
inc
dec
pop
inc
ret
sub
xchg
outsl
movsl
hlt
mov
pop
xchg
imul
sub
push
push
cmp
test
jmp
sub
pop
adc
mov
out
add
push
mov
aam
rclb
lea
inc
fs
fstl
scas
sub
dec
jmp
cmp
inc
push
adc
sbb
add
add
lock
icebp
inc
out
test
jmp
sbb
pop
outsb
sbb
mov
outsl
push
add
fmul
fdivs
test
xlat
adc
sti
pusha
adc
cmp
jne
pop
adc
adc
xchg
lock
sbb
inc
and
adc
pop
hlt
mull
daa
in
fucomi
arpl
je
sub
sbb
jmp
dec
cli
jno
mov
test
cwtl
mov
pop
adc
push
mov
push
cmp
inc
pop
mov
dec
ret
fdivs
jmp
das
aas
adc
inc
test
xor
imull
sarb
mov
sub
or
sbb
xchg
cli
pushf
xlat
xor
mov
sbb
pop
or
aas
mov
movswl
and
adc
rcll
popf
and
jne
and
ja
or
js
adc
jg
sbb
jae
or
jmp
mov
jo
mov
fcmovb
fldl
cmp
sete
jmp
inc
inc
or
rorb
fildl
cmp
cs
inc
cmp
xchg
push
lret
les
mov
mov
repz
loop
pushl
cmp
jge
leave
and
xor
stos
xor
loopne
and
sti
jne
iret
jp
or
jmp
push
adc
push
sti
mov
aaa
and
bound
adc
add
mov
mov
lret
push
push
stos
aas
or
je
ret
sbb
scas
enter
add
or
push
in
ljmp
ja
sarl
inc
mov
shr
cmovbe
mov
cmp
pusha
cltd
movsl
icebp
cmp
push
inc
push
je
sub
add
and
sbb
sbb
movsb
inc
bswap
mov
mov
inc
pop
adc
pop
outsb
push
fsubs
jmp
test
push
push
and
dec
mov
sbb
addb
push
mov
push
adc
push
cld
or
mov
push
and
inc
movb
jne
mov
lret
mov
cmpsb
inc
scas
add
imul
cmp
jno
add
das
sub
or
inc
sub
dec
clc
or
xchg
inc
lahf
sub
mov
sub
js
mov
sub
rolb
mov
loope
jo
aaa
in
rcll
or
push
inc
sarb
inc
loopne
daa
push
jp
addr16
imul
add
cmpsb
lea
cmp
je
pop
sub
add
das
cs
jl
xchg
or
enter
cmp
pop
mov
lahf
es
sub
subb
xchg
inc
push
loop
lahf
cmp
je
jp
mov
mov
xchg
dec
inc
mov
enter
sbb
or
mov
outsl
inc
mov
ss
das
mov
out
adc
jge
sbb
loopne
lahf
rcll
fcmovb
orl
ret
cmp
pusha
xor
mov
sbb
cld
addr16
or
sub
lahf
jb
js
sbb
and
and
add
jo
hlt
popa
dec
pop
and
sub
xchg
cmpsb
stos
and
push
pop
jb
adc
cmp
xchg
xor
push
mov
jb
push
sub
xor
adc
test
fcoml
jmp
xchg
or
xor
mov
add
lock
mov
into
mov
push
push
rcll
repnz
stc
push
mov
clc
push
popa
dec
in
cwtl
push
inc
clc
movl
inc
push
adc
sbb
dec
call
mov
sub
rcll
push
notb
popa
adc
lret
lods
pop
pop
mov
xchg
loop
mov
sub
mov
push
popa
es
pushf
rcll
rorb
sub
into
xor
popa
mov
je
sbb
xchg
movsb
mov
or
sub
add
pop
add
sub
jo
or
add
and
idivl
fcmovb
xchg
push
sub
call
cmovae
cmp
movl
push
inc
jp
cld
andl
and
movsb
pop
adc
mull
ja
cs
stos
movsb
sbb
rolb
iret
daa
sub
iret
lahf
add
in
mov
lods
adc
add
inc
sbb
push
push
add
cli
sarl
sbb
mov
aam
mov
jo
lret
testl
bndstx
shrl
aaa
inc
pop
fcmovnb
sub
add
lock
add
jne
int3
ss
pop
inc
jmp
mov
and
push
in
push
inc
add
xor
call
add
mov
sbb
jmp
ja
mov
rcr
lcall
or
fidivrs
pop
je
mov
lea
adc
jmp
or
sbb
roll
add
stc
jb
lea
or
lds
sub
fcmovne
fisttpll
mov
dec
movb
pop
in
xor
fistpl
jp
or
inc
pop
divb
pop
dec
outsl
cmp
and
xchg
add
dec
icebp
mov
xor
sahf
pusha
push
addr16
lahf
enter
push
loopne
sbb
cmc
mov
mov
mov
xor
movsb
imul
xor
dec
and
gs
or
sbb
adc
mov
je
add
sbb
ja
call
fcomps
push
lea
push
inc
add
lods
mov
mov
jg
movq
add
cmp
daa
out
in
lds
sbb
out
sbb
pop
mov
divb
push
jle
mov
xchg
or
mov
inc
mov
jnp
test
sbb
jnp
add
aaa
mov
pop
mov
or
add
push
lahf
fmuls
pop
enter
xchg
push
hlt
fimuls
ss
adc
jle
sbb
aam
mov
stos
inc
fcompl
rolb
fcmovbe
jo
stc
or
sbb
mov
outsl
repnz
add
or
add
clc
xchg
aad
fsubr
incl
pcmpeqd
aad
push
add
dec
push
jns
pop
dec
je
cwtl
add
xor
ret
inc
xor
mov
aam
mov
decl
stos
sub
sti
pop
mov
pop
test
jnp
add
fstpt
pusha
jne
jg
add
mov
adc
xor
jns
or
mov
sbb
and
sbb
xchg
pop
xor
xchg
dec
push
adc
fldl
adc
cmp
sbb
fadds
pop
xchg
mov
jae
push
shlb
adc
xchg
xchg
inc
in
jo
pusha
leave
xchg
push
test
sarb
sub
add
inc
out
mov
fdivs
mov
mov
add
or
xchg
xlat
pop
movb
cmpsb
pop
adc
popf
adc
fldenv
fs
mov
scas
push
das
inc
xor
rcrb
or
sub
movzbl
dec
nop
jno
sub
add
mov
pop
sbb
pop
add
mov
gs
nop
xor
or
sub
add
inc
ja
xchg
mov
lea
leave
daa
or
lds
fisttps
push
sbb
adc
inc
mov
xor
lea
dec
add
or
mov
jp
mov
stc
or
aam
push
mov
scas
add
imul
movsb
push
cmp
mov
dec
sarl
pop
jp
push
icebp
testb
or
daa
cld
push
andl
shll
sub
jbe
hlt
mov
fcoml
push
and
push
aam
add
dec
and
dec
push
dec
add
jmp
inc
cmp
cmpsl
push
jbe
adc
and
out
das
xor
mov
mov
adc
push
pop
das
mov
cmp
mov
rolb
or
repz
sub
or
add
add
add
aam
sub
filds
fstl
loope
pusha
inc
fmull
sub
ret
push
push
andb
out
enter
push
sbb
inc
dec
add
jge
movl
bts
and
push
ficomps
sti
push
jl
pop
add
mov
fs
imul
xchg
shrb
scas
outsb
ja
jne
lods
pop
or
mov
push
xchg
fwait
mov
cmc
cs
loopne
rol
jo
imul
pop
jns
mov
inc
adc
lock
enter
xor
cmp
jns
push
mov
sbbb
mov
add
xor
fmuls
rclb
pop
xor
mov
xchg
rorb
inc
pop
dec
shll
mov
lods
shlb
ret
leave
cltd
mov
sub
cmp
mov
xchg
and
inc
dec
pop
sub
pop
cmp
ret
jb
nopl
shll
lds
pushf
and
and
xlat
jp
sub
mov
jmp
mov
fcomip
inc
or
add
mov
jne
sub
ja
dec
lea
das
push
lret
sub
iret
movsl
and
addb
xchg
jnp
add
shrb
sbbl
jp
jle
jne
pop
iret
or
adc
fdivrs
xchg
sbb
cmp
vpor
mov
cmp
pop
sbb
jae
pop
in
pusha
enter
adc
xchg
dec
es
add
cmpl
bound
mov
adc
pop
pop
fildl
adc
jne
mov
or
xor
mov
pop
push
sbb
test
lret
mov
pop
jo
dec
mov
cli
mov
cmp
adc
jge
das
daa
push
mov
adc
push
iret
mov
jp
xchg
ret
xchg
push
and
dec
sahf
adc
cmp
inc
ficoms
or
and
push
add
inc
sub
and
aaa
add
and
push
adc
insl
not
sbb
or
fidivl
mov
adc
ljmp
outsl
in
pop
movsl
xor
shlb
clc
loop
and
mov
jo
mov
add
and
cmp
push
mov
mov
adc
shrl
cmpsl
dec
mov
xor
mov
es
clc
sbb
adc
fdivrs
das
dec
in
adc
xor
adc
add
aas
xor
push
sahf
and
adc
and
aas
cmp
pop
insl
or
js
dec
out
in
push
sub
or
adc
fsubr
mov
call
or
mov
leave
lods
daa
sahf
cmpsl
or
xor
arpl
addl
or
movb
call
xor
lock
xor
push
imul
sub
stc
rcrl
inc
mov
test
aas
cmpb
mov
jno
shlb
dec
mov
subb
cmp
sti
mov
pop
cld
inc
cmp
adc
mov
add
add
add
outsl
pop
pushf
sbb
dec
sbb
mov
mov
sub
xchg
pop
lcall
lea
adc
xchg
sub
out
aas
mov
cmp
pop
xchg
aas
int3
adc
cwtl
pop
enter
add
xor
pusha
mov
xchg
mov
or
into
xor
les
shl
cmp
ljmp
mov
dec
xor
add
push
mov
push
cs
repnz
insl
cmpsl
fs
fidivs
cmp
add
sub
lods
std
inc
xor
fisubs
int
add
in
adc
mov
test
xor
ss
in
jecxz
push
mov
sub
jno
pop
call
xorl
mov
inc
scas
dec
dec
sub
imul
and
inc
pusha
imul
cmp
ret
int
cmp
dec
test
aam
adc
int3
pusha
dec
and
not
arpl
sub
cmp
rcrb
pop
lock
aaa
cld
lea
mov
xchg
fisubl
or
orl
aad
repnz
inc
or
adc
and
iret
testb
je
orb
jmp
andb
loopne
idivb
pop
push
popa
bound
inc
leave
sub
inc
jb
icebp
popa
lret
cmpsb
pushf
push
jne
nop
mov
les
add
inc
mov
loop
lret
pop
ja
in
and
or
jmp
mov
xlat
or
adc
aas
add
or
mov
test
dec
jmp
sbb
adc
dec
jp
addl
and
adcl
push
and
push
jl
or
test
pop
mov
and
mov
out
dec
je
daa
dec
pushf
dec
sub
std
dec
stos
lret
cld
cmp
jne
and
test
daa
cmp
jne
aas
pop
mov
sbb
or
xor
cmp
mov
xor
sbb
mov
pop
gs
inc
out
mov
nop
or
fs
and
mov
in
mov
inc
xlat
leave
xchg
dec
xor
mov
orl
test
addl
mov
add
inc
sub
sbb
movsb
pop
or
mov
fisubrl
test
xchg
adc
rcrl
cmp
jnp
test
pand
or
mov
jmp
mov
push
test
fs
xorl
xchg
pop
push
lods
ljmp
out
in
in
mov
in
int3
je
fistl
xchg
push
notb
sahf
mov
inc
dec
enter
sbb
hlt
nop
add
pop
push
out
arpl
imul
ret
and
add
sub
shll
daa
push
lock
sub
and
push
gs
or
jmp
sbb
or
adc
cmp
add
mov
and
pop
and
and
and
add
or
xor
loop
out
iret
jb
sub
add
pusha
xchg
or
fdivrs
test
je
push
cmpb
cmc
jmp
addr16
add
cli
add
test
and
sbb
mov
add
add
add
dec
adc
sub
scas
add
inc
loopne
pcmpgtb
sub
lods
pop
roll
sbb
imul
add
mov
pop
adc
adc
adc
push
xchg
stc
out
es
pusha
sbbb
sbb
in
ret
imul
lds
xchg
loopne
subl
push
mov
sbb
das
std
roll
shr
add
loope
sub
ret
or
mov
mov
cmp
push
out
jb
add
or
aas
or
mov
fimuls
push
mov
inc
xor
neg
xchg
movsb
neg
add
in
loopne
inc
ficoms
mov
sbb
pop
mov
sub
sti
in
mov
test
dec
std
inc
daa
dec
push
das
inc
jne
pop
mov
and
sub
push
adc
add
cmp
push
push
push
icebp
pop
inc
loopne
mov
xor
daa
sbb
mov
pushf
cmp
or
dec
dec
and
dec
inc
sbb
pop
adc
sbbl
aaa
add
mov
add
aad
incl
lods
jno
out
fwait
jno
push
stc
popf
push
mov
repz
jp
or
sbb
rcr
jle
icebp
adc
fcomps
cwtl
mov
or
fists
push
adc
inc
js
imul
sub
ret
jg
mov
cmp
mov
jl
mov
jecxz
xor
add
adcb
int3
xor
lods
adc
add
popa
fistpll
xor
arpl
adc
cmp
sub
arpl
cli
push
mov
add
insl
jmp
sbb
cmp
out
push
ret
mov
loope
outsb
movsl
and
jl
mov
xor
nop
out
jo
xlat
and
aas
aaa
cmp
and
cs
sbb
xorl
movl
lods
xchg
xchg
mov
nop
and
cmp
and
add
add
pop
sbb
and
mov
daa
mov
pop
clc
nop
mov
cmp
lret
mov
cltd
test
push
xchg
adc
sbb
test
mov
sub
add
orb
adc
ret
cmp
fldt
stc
sub
pusha
sub
addr16
adc
or
push
nop
mov
pop
jge
fstpt
mov
loopne
rorb
or
pop
inc
bswap
add
mov
lret
aam
pop
pop
rclb
scas
pop
je
enter
mov
cmpb
xor
jne
inc
mov
add
mov
movsw
rorl
es
jne
loopne
stos
push
push
inc
sahf
jecxz
mov
cmpl
lods
test
aad
ss
int3
and
adc
pushf
js
les
loope
into
xchg
dec
xchg
sbb
push
pop
sbb
push
push
adc
fimull
adc
or
out
sub
cmp
ljmp
add
outsb
adc
pop
dec
mov
aad
adc
dec
dec
dec
shll
cld
popa
js
sbb
mov
cmp
std
inc
daa
fdivs
dec
sbb
mov
imul
sbb
sub
xchg
mov
jne
ljmp
cli
adc
or
adc
mov
sub
cmpsl
push
test
and
mov
sbb
fmuls
push
dec
je
add
mov
jno
ret
scas
or
push
clc
je
cmp
inc
ficompl
in
sbb
jmp
int
cs
lahf
iret
flds
imul
aaa
cs
loopne
pop
lahf
popf
xchg
adcl
xlat
rcl
nop
lea
pusha
or
lea
xchg
aam
push
push
pusha
or
jl
testb
clc
mov
pop
loope
mov
xchg
xor
and
sahf
xor
leave
add
pop
ss
pop
aam
mov
popa
dec
inc
outsb
or
orb
test
add
loopne
and
mov
rolb
call
add
inc
imul
scas
add
adc
xlat
ja
and
pop
cmp
cmp
jne
fstl
or
jnp
rcr
lret
ret
xor
sbb
fisubrl
popa
add
mov
jmp
sub
sub
pop
and
sbb
test
and
adc
dec
cmp
xor
bound
and
jecxz
xor
je
adc
ds
mov
add
in
in
shrb
push
push
cltd
add
push
cmp
cwtl
xor
add
mov
test
sbb
movsl
outsl
dec
js
mov
adc
test
cmp
push
nop
dec
scas
push
outsb
sbb
outsl
push
push
jne
sub
retw
inc
adc
jp
rcr
test
mov
das
mov
shrb
push
fisttps
xchg
or
xchg
in
sub
adc
add
push
cmp
push
dec
inc
call
arpl
lock
add
out
pop
aad
test
cmp
sti
sbb
imul
sub
jmp
sub
xor
xchg
and
nop
add
add
xor
shll
push
sub
in
push
dec
jp
pop
jb
or
mov
xor
mov
inc
or
xor
popa
push
pusha
pop
ja
mov
push
or
push
push
mov
push
mov
adc
stos
push
bound
fimuls
insb
daa
jne
adcb
mov
jne
cmpl
push
push
push
jo
negb
data16
cld
mov
adc
or
pop
out
icebp
mov
out
xchg
push
and
adc
sbb
cmp
xchg
sbb
mov
cmpb
aam
cltd
add
cmpb
pop
or
jbe
idivb
ret
pop
std
cmc
sbb
pop
psrld
mov
rclb
testb
dec
pop
sub
push
ror
cmp
jmp
mov
or
sbb
or
lods
lea
adc
xchg
add
loopne
mov
or
push
mov
fdivs
sub
add
mov
jbe
add
xchg
clc
push
inc
sbb
or
and
mov
push
add
fidivs
push
sbb
in
sbb
jmp
rclb
sbb
aas
add
mov
add
sbb
pop
jge
jmp
or
sub
push
add
movsl
xchg
setg
nop
ja
ret
or
sbb
les
or
sbbl
rolb
test
repz
xchg
add
stos
imul
incl
xchg
mov
mov
pop
es
add
push
lods
jmp
cs
adc
and
xchg
mov
add
cmpb
and
filds
push
push
je
pop
or
imul
insb
test
mov
push
xor
push
bound
push
sti
incl
sahf
pop
dec
inc
dec
dec
inc
dec
push
sbbb
iret
dec
jg
test
pop
adc
and
es
adc
nop
lods
or
call
jne
xchg
add
daa
lea
cs
das
mov
dec
movsb
pushf
faddl
xor
push
loopne
xor
rcll
xchg
or
adc
adc
push
push
shl
sbb
lret
clc
or
and
push
imul
mov
imul
inc
lock
jb
jo
mov
clc
cli
mov
pop
incl
les
dec
mov
decl
sub
pop
adc
add
stc
jp
dec
shlb
adc
je
push
add
int
or
in
add
mov
fbld
jne
subl
scas
cmp
mov
xor
decl
xor
add
xchg
jnp
cmp
stos
das
mov
inc
cmp
je
lock
push
rcrl
push
jne
or
ret
movsl
jne
aaa
test
mov
loop
bound
iret
sub
adc
xchg
iret
adc
sub
or
lds
sbb
enter
xor
mov
cmp
pop
ret
lahf
sahf
cs
cs
ss
mov
pop
das
insb
pop
int3
psubusb
pop
dec
mov
inc
mov
subl
mov
push
bound
adc
push
jae
mov
pop
sbb
roll
sub
cltd
nop
xchg
insb
dec
dec
jmp
or
cmpl
inc
filds
loopne
cli
lret
fsubl
jg
call
add
fwait
cmp
cmpsl
pushf
push
mov
jle
lock
je
jbe
bound
jne
daa
sbb
jle
into
mov
sub
pop
add
outsb
leave
cmp
insl
js
dec
add
test
in
fwait
sub
ret
orl
and
mov
addr16
and
sbb
rcr
push
adc
push
mov
ret
dec
xchg
adc
jmp
xchg
add
cmp
in
push
dec
sbb
and
and
jne
fs
mov
insl
and
test
es
fs
cmp
outsb
add
pop
popl
outsl
mov
sahf
xlat
inc
pusha
arpl
sub
sti
sub
adc
and
pop
mov
or
xchg
adc
bound
call
jg
and
or
test
das
scas
aad
push
inc
push
lock
xchg
pop
xor
jne
mov
xchg
or
test
aaa
cmpl
pop
inc
ret
dec
ror
leave
dec
cmpsl
pushf
ret
sahf
add
aad
nop
mov
cmp
jo
filds
movsb
sbb
push
push
and
shll
jl
lods
sub
dec
pop
sbb
lahf
push
adc
push
xor
jmp
stc
cmp
popf
jns
pop
mov
cli
fincstp
inc
cmpl
inc
inc
je
pop
std
cmp
test
dec
cmpb
add
inc
and
and
jmp
fwait
jns
rclb
push
mov
arpl
fwait
lea
mov
call
scas
adc
dec
mov
mov
adc
push
test
filds
and
push
cmp
fimull
cmp
inc
fs
loop
mov
xchg
adcb
jo
or
sub
add
mov
add
gs
dec
mov
cmp
mov
inc
or
mov
xchg
daa
xor
lock
andl
inc
imul
cmpl
and
shrb
lods
pop
adc
movsl
lahf
or
dec
sub
push
and
add
xlat
mov
and
ficompl
call
enter
xor
dec
aam
xchg
ljmp
push
push
add
inc
pop
lods
dec
jno
lods
clc
cmp
pop
dec
movsl
push
int3
dec
jne
arpl
add
jnp
arpl
and
scas
shrb
mov
insb
adc
lea
add
jmp
push
ret
pop
shl
or
add
cmp
sbb
mov
cmpsl
xor
lahf
inc
adc
add
adc
rcrl
test
mov
movsb
out
sub
daa
dec
xchg
and
sbb
sbbb
rclb
rorb
cmpsl
and
jmp
and
int3
imul
test
mov
mov
inc
call
icebp
es
rcrb
aas
push
sbb
adc
sbb
add
arpl
dec
jbe
inc
or
push
and
xchg
xchg
xor
rorl
out
aad
gs
ljmp
sub
adc
jmp
ret
das
movsl
mov
or
stos
fwait
add
pop
and
push
shlb
shl
pop
frstor
adc
pop
push
push
pusha
mov
test
xor
xchg
scas
adc
lar
adc
mov
or
and
dec
or
jp
mov
add
and
fildll
mov
xor
repz
movsb
dec
adc
and
orl
loope
mov
mov
add
mov
or
leave
adcl
cmpsl
add
and
popa
cmp
pop
xchg
les
jp
call
rcl
push
out
sub
push
or
mov
add
inc
fmull
mov
inc
pop
inc
enter
dec
xchg
jo
adc
sbb
ss
cmp
inc
pop
bound
and
or
sbb
ja
in
sbb
dec
movb
pop
je
mov
pop
add
sub
arpl
xchg
xchg
and
push
nop
add
pop
aam
sbb
adc
mov
sbb
mov
mov
adc
or
push
xchg
push
or
cmpb
jns
pop
fdivl
push
push
dec
pop
das
sbb
or
lock
test
inc
xchg
sbb
sbb
rcr
inc
cmp
out
popa
arpl
xchg
mov
adc
shl
sbbb
xchg
xlat
insb
mov
cmpsl
call
adc
pop
mov
sub
or
out
dec
jmp
cmp
mov
subl
mov
test
xor
lahf
push
mov
pop
xor
cmp
or
pop
mov
inc
xor
shlb
sub
add
mov
or
inc
or
pop
into
cltd
cmovno
lret
add
mov
es
mov
push
cmp
test
xchg
push
inc
mov
ret
push
dec
add
js
sub
sbb
neg
lds
xor
xlat
out
jo
adc
push
sbbb
popa
pop
shrb
inc
sbb
pop
adc
dec
push
leave
xor
rcll
cmpl
rcll
jbe
sub
sub
or
add
mov
imul
jne
outsb
adc
pop
sub
xchg
xchg
imul
pop
xor
push
add
jmp
mov
rcll
in
or
xor
dec
adc
or
stc
push
sub
sbb
call
imul
cmp
or
fcompl
jmp
js
pop
nop
lcall
ds
shll
xchg
insl
insb
mov
inc
jl
cltd
or
nop
pop
testb
outsb
cmpsb
jne
rolb
in
gs
outsb
ret
push
mov
imul
sub
mov
jo
lret
add
lock
les
mov
jg
adc
imul
inc
push
jp
out
dec
push
enter
dec
sbb
adc
sahf
sbb
adc
mov
sub
or
rcrl
or
push
push
and
sbb
shl
mov
xchg
adc
test
jne
add
sub
push
and
pop
inc
cld
punpckhbw
icebp
mov
pop
mov
sarl
mov
sbb
xchg
or
inc
adc
mov
inc
loope
jne
mov
sub
insb
push
and
stos
std
fsts
jl
pop
aas
or
imul
gs
and
loope
and
push
adc
and
mov
sub
les
push
addb
aam
shl
sub
fcoms
movsb
cs
xchg
dec
mov
xor
or
cmp
setge
pop
jbe
shll
or
add
movsb
push
cli
daa
mov
sbb
or
je
add
xchg
imul
push
stos
adc
xor
mov
add
or
bound
adc
inc
outsl
clc
stos
aam
inc
xchg
inc
sub
mov
mov
xchg
add
cmp
add
add
mov
scas
dec
cmp
loopne
xchg
xor
pop
push
add
rolb
cmp
aaa
cmc
and
subb
dec
sar
pop
add
or
roll
aaa
test
lcall
xor
xchg
enter
push
cmp
sub
sbb
or
xor
sub
adc
xchg
mov
mov
sub
outsb
bound
cli
or
sub
dec
jge
xchg
jo
jmp
jne
sbb
cmp
ds
jmp
and
or
add
bound
lret
rorb
or
add
leave
mov
cmp
nop
mov
clc
sub
dec
xchg
adc
jb
mov
fistl
push
sub
daa
push
dec
jmp
cmp
add
sub
jecxz
and
xchg
inc
dec
dec
inc
movsb
xchg
ja
adc
in
lods
add
add
aas
ud2
jbe
sub
aad
mov
in
aaa
mov
scas
aad
mov
sti
insb
hlt
or
icebp
mov
or
adc
pop
push
lea
stos
in
cmp
jnp
mov
jo
dec
cltd
mov
loope
or
fldl
push
and
jmp
loope
mov
sar
inc
mov
imul
call
or
push
leave
lahf
cld
stc
dec
cmp
in
mov
das
xchg
and
adc
inc
push
adc
lock
xchg
sbb
lret
ss
xchg
or
bound
ret
cmp
je
loope
push
pop
pop
jmp
cmp
push
pusha
jno
mov
repnz
adc
xchg
cmp
pop
add
xchg
adc
lea
inc
in
add
out
push
mov
adc
xor
insl
jb
dec
or
adc
fisttps
clc
jmp
or
jmp
cltd
mov
cmpsb
loop
or
rolb
cmp
imul
icebp
sti
dec
sbb
jne
sub
cmp
xor
rolb
sbbb
test
fbld
add
push
xlat
sbb
pop
cmp
add
ret
cmpsb
xor
cwtl
lret
pushf
cwtl
inc
push
or
enter
xchg
mov
imul
push
xor
cltd
addb
por
je
jmp
cwtl
nop
mov
or
mov
sbb
or
ret
mov
shl
and
add
xor
fwait
push
jmp
std
xchg
jne
shll
incl
mov
lahf
loopne
xchg
mov
cmpsl
call
or
popf
loopne
add
or
repnz
lods
push
push
loopne
and
nop
add
movb
sbb
mov
sti
xor
cld
xor
cltd
stc
cwtl
nop
push
fimuls
add
or
jge
js
xor
imul
divl
data16
cmpl
sub
insl
push
mov
rorb
out
test
stc
insb
sub
or
push
popf
in
cmp
cmp
lahf
mov
sub
xchg
loopne
jge
movl
sbb
daa
sbb
cmp
dec
pop
and
fmuls
add
subps
mov
mov
movsb
add
std
jl
cmpsl
shlb
testb
jo
test
push
jno
jl
and
js
cmc
pop
add
test
pop
cmp
and
lock
scas
cs
dec
rcrb
xchg
jecxz
negl
nop
mov
outsb
call
out
cmp
movsb
mov
lock
data16
push
or
mov
pop
test
je
pop
inc
add
and
adc
out
js
push
cmp
sbb
dec
hlt
pop
xor
rolb
insb
sarb
aam
mov
cwtl
or
xchg
inc
xor
loope
dec
jmp
pop
mov
mov
ret
add
pop
push
fsub
push
push
sarb
adc
mov
jg
mov
cmp
cmp
das
jne
subb
xchg
das
sbb
call
inc
repz
and
mov
and
or
pop
dec
mov
add
mov
adc
insl
sub
xor
cmp
fiadds
mov
ss
or
je
sbb
dec
test
mov
push
rcll
test
insl
dec
and
push
mov
mov
mov
lock
movsb
push
pop
sarb
mov
cmp
sub
lods
lcall
push
add
and
aas
or
pop
das
imull
or
adc
lret
dec
mov
xor
mov
loopne
inc
test
mov
fcmovnb
sbb
test
xchg
adc
sub
xor
je
push
xchg
mov
adc
or
add
xchg
sbb
inc
pop
sbb
sahf
cs
add
xor
cli
addl
inc
cmp
or
push
and
xor
sbb
xchg
or
filds
mov
out
je
testl
dec
add
data16
xchg
mov
jecxz
push
jmp
call
mov
cmp
clc
in
add
or
jmp
and
push
add
xchg
nop
loopne
js
movsb
mov
std
ret
es
cmp
ja
push
dec
call
aam
and
and
mov
mov
pusha
test
or
push
stc
imul
inc
xchg
addr16
xchg
loopne
push
mov
add
mov
enter
pop
int3
or
pop
stc
mov
dec
gs
mov
popa
pop
pop
andb
sbb
sbb
inc
ja
or
sbb
xor
and
leave
outsb
ljmp
nop
and
sub
fiadds
xchg
and
gs
sti
adc
mov
stc
mov
lods
fsubs
add
add
mov
pop
add
test
insl
pop
add
fmull
or
pop
movb
or
push
std
inc
rcrl
int3
filds
in
sub
lock
cmpsl
orl
rorb
pop
mov
push
mov
cmpsl
dec
in
adc
jge
je
adc
pop
pop
fnstcw
cmp
pop
stos
xchg
pushf
cmp
aam
add
movsb
ret
test
scas
insb
xor
and
loopne
mov
push
and
xor
add
mov
sbb
add
sbb
xor
fwait
mov
pop
mov
jbe
sub
sbb
pusha
xchg
loop
sub
cmp
loop
and
jmp
sbb
cld
cld
imul
sarl
leave
sbbl
cmp
add
or
aaa
incl
sbb
mov
mov
cmp
adc
jbe
pop
push
subl
sub
shlb
push
imul
xchg
cmp
cltd
or
das
das
adc
in
adc
cmp
das
push
movsl
in
or
lahf
fcmovb
sbb
mov
sub
outsb
mov
divl
sti
test
inc
sub
sub
xor
adc
mov
sbb
movl
mov
sbb
push
negl
pop
sbb
mov
sub
xor
adc
push
push
pop
inc
dec
adc
jl
push
mov
es
pop
rclb
sub
push
pop
mov
mov
test
add
shlb
push
pop
lcall
adc
andb
add
imul
inc
push
dec
xor
jl
add
and
les
mov
jp
mov
fildl
rclb
ret
lds
aas
push
in
popa
sub
ret
cld
pop
dec
xchg
dec
cs
pop
insb
inc
fbstp
sbb
or
dec
jnp
or
push
push
daa
cmpsb
fcom
mov
dec
cmpsl
dec
inc
jns,pn
ss
push
std
cmpsb
hlt
inc
fsubrs
sbb
or
roll
push
xchg
mov
push
sub
or
xchg
cmp
sbb
rclb
dec
adc
mov
push
and
or
sbb
inc
pop
inc
push
leave
ljmp
pop
data16
call
loop
movsl
mov
adc
iret
idiv
out
jl
or
jle
cs
nop
lret
lea
add
or
cltd
sub
pop
call
mov
pop
out
adc
push
sbb
pop
fsubs
ret
ret
and
out
jo
sub
push
enter
push
sbb
sbb
mov
xorl
ret
cmp
mov
pop
outsb
pop
pop
rorl
mov
mov
mov
pop
js
and
cmpsl
fmull
sar
xchg
adc
scas
mov
add
mov
pop
pop
aam
xchg
inc
addr16
add
mov
sub
xlat
inc
out
adc
xchg
inc
test
lock
jmp
js
add
insb
lret
jbe
in
jno
add
in
fisubrl
fucom
std
or
inc
pop
sbb
mov
aam
push
sub
and
sbb
dec
imul
call
pop
pop
imulb
repz
dec
out
jae
faddl
jbe
dec
cmp
lea
xor
sbb
pop
jecxz
inc
xor
dec
jo
jne
out
jno
rorl
and
mov
sub
mov
negb
mov
inc
sbb
leave
dec
and
adcl
orl
mov
imul
fdivrl
je
adc
and
bound
adc
pop
insb
and
outsl
jne
jae
jbe
outsb
adc
pop
insb
sbb
sub
or
xor
dec
test
inc
popa
scas
popw
es
and
ffreep
mov
mov
sar
add
das
cmpl
pop
sub
push
imul
pop
lods
mov
push
xor
cmp
insl
adc
dec
or
adc
or
adc
sbb
add
add
nop
dec
xor
pop
or
pop
cmp
shll
mov
data16
add
call
rcl
lock
inc
test
into
call
cmc
fsubrs
std
dec
mov
fucomip
insl
push
adc
xor
insb
aad
cmp
sbb
push
sub
filds
or
dec
and
push
ret
and
push
jne
sub
mov
mov
cs
icebp
lods
dec
or
jo
xor
cmp
pop
popa
mov
and
add
rcl
sub
inc
jl
nop
jmp
and
pop
movl
es
pop
nop
imul
iret
and
loope
lods
pop
pop
popa
out
dec
notb
fstpt
push
pusha
aam
nop
pop
jecxz
add
sar
or
adc
arpl
push
mov
es
ret
push
mov
rorl
movsl
sub
push
testb
stos
add
adc
jle
lahf
xchg
xor
loopne
jns
adc
shlb
in
outsl
das
pushf
and
pop
jb
outsl
adc
and
cltd
rolb
es
out
daa
std
test
xor
or
sub
pop
mov
aaa
and
push
add
mov
add
add
popf
pop
push
add
jl
dec
and
mov
test
test
sarb
mov
mov
or
mov
cli
pop
movsl
add
mov
mov
cmp
xor
push
lock
xor
je
jmp
sbb
push
loop
xor
mov
jo
sbbb
inc
into
push
repz
mov
test
jp
push
or
jne
sub
add
imul
adcl
pop
in
mov
mov
adcl
loop
mov
in
cmc
sbb
jns
push
push
push
adc
pop
mov
xor
jmp
and
add
sub
das
inc
daa
fcomp
andb
inc
jmp
sbb
xchg
movsb
mov
cwtl
shlb
shlb
hlt
mov
roll
sub
mov
mov
cmp
xchg
fcomi
gs
jbe
xchg
xor
inc
cmp
or
adc
mov
jne
or
imul
cmpsl
push
xor
xchg
push
popf
hlt
cmp
inc
mov
xor
push
sbb
orl
inc
pusha
add
cmp
xchg
cmp
adc
add
in
orl
xorb
adc
subl
dec
shrl
and
aas
sub
pop
out
scas
hlt
insl
fucomip
divl
add
sysret
pop
stos
test
or
adc
or
and
sub
xchg
mov
lock
loopne
pop
mov
les
cmpsb
dec
scas
rolb
mov
pop
add
fs
inc
fidivrl
adc
add
adc
jle
sbb
add
in
pop
mov
das
ljmp
sbb
cmp
and
sbb
ss
xlat
frstor
lcall
xchg
loopne
in
xchg
mov
out
aas
sahf
add
in
shrb
pop
add
and
mov
or
mov
nop
dec
mov
inc
stos
nop
cli
and
jno
add
rol
mov
xor
les
subb
xchg
push
pop
cmp
mov
sbb
sub
aam
push
test
mov
jnp
cmc
or
mov
js
les
mov
call
adc
ja
in
mov
mov
fwait
inc
pop
cmp
call
jno
hlt
fsub
pop
or
cwtl
fidivrs
push
push
pusha
into
xor
xchg
shrl
dec
sbb
adc
push
movsl
cli
loop
popf
pop
adcb
push
jbe
or
add
les
pop
and
mov
mov
push
mov
loope
push
and
ret
leave
je
pop
loopne
or
aaa
shl
cmpsb
jmp
arpl
or
mov
lock
lods
push
mov
xchg
push
adc
xchg
or
popa
or
into
subl
es
cmp
in
lea
dec
xchg
sub
dec
daa
add
sbb
and
movsl
sbbb
push
in
leave
cmc
mov
shlb
and
mov
cmpsl
fildl
ss
mov
lods
cli
mov
ficoml
jne
pop
sub
ss
imul
movsb
into
adc
std
xorb
adcl
leave
and
sbb
imul
movl
outsb
dec
outsb
jnp
test
ja
je
or
loop
jno
or
bound
mov
or
ret
sbb
shr
push
xor
arpl
popl
fsub
in
or
cmp
hlt
aam
sub
jne
fdivs
or
and
iret
les
xchg
sub
imulb
ja
dec
les
iret
adc
jnp
mov
hlt
adc
mov
sbb
pop
rolb
xor
inc
pop
out
sahf
aaa
inc
std
pop
test
or
movsl
mov
dec
dec
dec
inc
outsb
jecxz
or
mov
test
adc
shrl
loopne
fsubl
in
or
jp
cmc
pop
xchg
inc
or
mov
sbb
sbb
or
xchg
fldl
orl
xchg
rolb
rclb
inc
mov
pop
pop
test
movsb
push
insb
pop
rcll
je
popa
fildl
xor
pop
push
fwait
loopne
mov
inc
and
dec
sub
xchg
movsb
adc
sbb
add
incl
dec
test
ss
aas
mov
fwait
daa
inc
mov
xchg
push
sbb
pop
push
mov
inc
inc
mov
adc
xchg
xor
push
out
sti
sbb
mov
or
rorb
sub
adc
dec
push
sbb
pop
add
jecxz
mov
icebp
push
ss
test
xor
push
and
cmp
dec
mov
ret
xor
xor
dec
sub
add
in
dec
roll
fdivs
call
shlb
shlb
mov
inc
jno
les
or
dec
call
mov
push
push
dec
stos
rolb
outsb
xor
mov
push
fs
sbb
dec
subb
push
rol
imul
in
xchg
filds
daa
pop
sbb
adc
cltd
push
je
pop
cwtl
cmp
inc
pop
jmp
dec
sbb
js
test
outsl
sbb
add
nop
add
divl
add
or
xor
rorb
movsb
xchg
pop
dec
xlat
jp
stc
cmpl
aaa
orl
sbb
nop
loopne
pop
into
dec
jns
fidivs
call
or
and
and
stos
inc
pop
lret
mov
pop
call
icebp
sub
add
jp
adc
in
imul
xor
decl
outsl
cwtl
inc
dec
lret
mov
or
shlb
push
mov
sub
dec
add
call
pop
stos
dec
ret
lock
cld
ucomiss
je
loopne
or
and
mov
jne
adc
mov
sbb
test
push
cs
pop
xor
orb
adc
rcll
aas
fwait
les
jne
mov
pandn
lcall
push
shlb
jo
daa
mov
and
or
and
xchg
xchg
push
test
push
shll
mov
test
cwtl
das
inc
in
fs
je
imul
int
pop
mov
and
cmp
es
hlt
mov
mov
daa
lahf
lds
clc
cmp
sub
mov
mov
daa
loope
fiaddl
pop
mov
pop
sub
ret
lods
pop
jmp
sbb
mov
cmp
sbb
fisttps
scas
sbb
in
data16
sbb
jg
adc
ret
xor
mov
or
add
push
hlt
int3
in
les
idivb
shlb
rorl
pop
rcrb
les
lcall
insl
repz
sbb
add
push
cmpsb
jge
mov
sbb
stos
adc
fisubl
call
cmp
data16
je
push
cmp
sub
pop
inc
ja
bound
jb
mov
and
cmp
add
pop
in
add
adc
jae,pn
ficoms
push
dec
out
add
popa
jge
addr16
lret
test
lods
mov
sahf
xchg
sub
adc
sub
icebp
mov
pop
into
mov
mov
push
and
pop
cmpsl
sbb
xor
sbb
das
mov
fbld
push
jg
sub
clc
lea
pop
jne
imul
js
cmp
sub
adc
jp
decb
and
loop
lods
fs
add
sub
pop
mov
pop
icebp
sub
xor
dec
js
aas
jmp
or
lods
dec
mov
fwait
repz
in
sub
sbbb
push
and
les
std
clc
add
jp
adc
inc
mov
or
and
add
fldt
push
fimuls
test
ficomps
mov
push
loopne
push
dec
enter
mov
mov
sub
add
aad
sbb
xor
mov
out
loopne
push
cltd
push
mov
jno
jl
sbb
movsl
movsb
clc
loope
pop
aas
adc
call
sbb
jo
add
imul
xor
jp
out
dec
or
iret
js
jecxz
xor
inc
fs
popa
xchg
out
and
sti
es
mov
ljmp
movsb
aad
rcr
xchg
xchg
addb
add
lahf
addb
or
cmp
fistl
push
shr
jae
xor
pushf
mov
vmaxps
inc
or
jns
orl
and
pop
pop
mov
and
cltd
lods
dec
mov
andl
mov
shlb
mov
into
scas
gs
sub
push
pop
das
test
pushf
push
inc
enter
jmp
in
mov
jmp
xor
mov
or
lock
mov
jmp
pusha
push
sub
cli
fadd
rcrl
nop
jmp
add
mov
mov
xorl
pop
xorl
fbstp
insb
je
xor
sub
add
adcb
rorl
cmp
aaa
cmp
jo
mov
loope
cmc
cld
cwtl
adc
mov
movb
pop
call
imul
je
and
lret
inc
adc
out
adc
push
dec
xchg
loope
mov
cwtl
xchg
push
lea
jmp
xchg
push
and
ret
sub
daa
push
dec
mov
test
push
cmp
pop
dec
andl
pop
icebp
or
enter
add
and
or
mov
fmul
out
fistl
lods
mov
dec
cmp
mov
jg
mov
or
or
lea
adc
push
jl
dec
push
sub
clc
adc
clc
sub
sub
or
mov
push
adc
sarb
add
mov
shrl
insl
and
lods
scas
addl
fadds
inc
inc
cmp
lock
jne
or
out
add
pop
in
mov
sbb
push
ficoml
fcomps
adcb
push
jb
add
mov
xchg
sbb
jne
mov
sbb
test
mulb
ss
push
mov
lret
inc
inc
mov
and
jmp
ret
fcompl
add
adc
std
insl
test
cmp
xor
and
and
cli
fisubrs
test
mov
fsubr
mov
cmc
adc
xchg
arpl
ljmp
aas
int3
or
leave
mov
adc
es
nop
jecxz
stos
and
push
loop
adcl
test
cmpsb
daa
push
xlat
cmp
add
add
add
cwtl
jne
outsb
push
daa
mov
or
mov
ja
xchg
fcom
test
nop
mov
loopne
ret
sahf
mov
daa
cmp
mov
das
aas
adc
js
cmp
adc
xlat
loopne
jp
inc
cmp
lcall
int3
pop
in
test
jbe
sbb
xchg
xor
xchg
std
xor
rorb
leave
mov
testb
ret
mov
jge
and
dec
mov
sarb
mov
add
imul
push
int
inc
aam
inc
lods
jecxz
jecxz
es
int
daa
fs
sub
or
sbb
pop
or
mov
inc
xchg
mov
mov
lahf
in
movsl
subl
inc
add
loope
loop,pt
or
xchg
je
adc
cltd
dec
sub
lock
call
inc
mov
or
mov
ror
xor
push
cmpsl
add
stc
and
rorb
mov
xor
lock
icebp
push
push
sbb
popl
add
add
or
add
lea
nop
cmc
xchg
and
or
push
add
sbb
push
xchg
xchg
dec
ret
jo
mov
mov
or
fstps
push
or
orl
add
mov
pop
daa
js
scas
scas
popf
inc
rclb
pop
cmp
js
mov
jmp
sub
jmp
in
sub
lods
jae
lods
sbb
stc
push
rclb
sbb
cmpsl
sub
xchg
jo
jmp
pusha
movl
jp
and
es
dec
cmp
insl
aaa
sbb
mov
sar
or
mov
xor
mov
push
mov
outsl
mov
lock
xchg
add
test
inc
mov
inc
mov
addb
dec
jno
cs
cmp
mov
imul
sbbl
hlt
jecxz
dec
adc
add
or
xchg
sub
sbb
iret
sbb
or
je
leave
adc
icebp
mov
mov
adc
sbb
jmp
popa
js
xor
push
or
mov
fiadds
aaa
ret
pop
cmp
pcmpgtd
pop
jo
jns
cwtl
sub
add
add
cmpsl
dec
or
int3
sub
push
js
xchg
inc
mov
sub
or
push
sbb
xchg
xchg
test
es
mov
xchg
add
hlt
jae
loopne
adc
mov
imul
jbe
add
push
add
inc
lret
fsubrl
fadds
add
inc
fsubrs
adc
push
or
cmp
push
pop
loope
sbb
out
loopne
xchg
int3
cmp
or
add
pop
dec
inc
inc
dec
push
addb
push
push
bound
repnz
xor
aam
cmp
icebp
add
scas
mov
mov
cs
or
xchg
insl
jg
sbb
mov
sbb
mov
push
je,pt
movsl
push
xchg
xchg
pop
shr
sub
push
and
and
rorb
push
ret
imul
out
push
arpl
rcrl
lods
adc
cmp
mov
pop
sahf
shl
sub
es
add
iret
cmp
lea
and
popa
add
dec
dec
pop
pop
pusha
xorb
push
rcrb
mov
inc
xor
sub
sbbl
xor
out
add
insb
js
or
mov
lods
sub
dec
or
push
rorb
sbb
mov
pushf
pop
jecxz
adc
push
loop
or
sbb
mov
dec
add
or
rcll
xor
add
sub
sub
adc
inc
in
xor
add
sbb
ja
sub
mov
and
mov
push
negb
jnp
je
orl
cmp
xor
push
push
cmp
jne
out
and
adc
dec
xchg
and
push
inc
dec
adc
ds
inc
aad
fdivr
clc
mov
cmc
ret
sbb
cs
push
sbb
mov
scas
loope
ficoml
jecxz
lret
adc
inc
cld
lahf
movsb
and
add
cmp
adc
add
mov
xchg
mov
adc
or
rorb
add
inc
shrl
mov
cmpsl
adc
or
xor
add
mov
push
cmpsb
es
sub
cmpsl
jmp
jnp
xor
jl
fsqrt
mov
les
mov
xchg
and
jbe
pop
xor
adc
cmpsb
test
shr
dec
scas
cwtl
jmp
ja
cmpsl
or
jle
push
sub
aad
cmp
push
rcrb
jg
vmaxsd
mov
jmp
push
add
divl
sbb
lock
fs
or
lcall
imull
pop
add
lahf
insb
mov
pop
or
sub
push
xlat
test
daa
push
inc
adc
xor
imul
icebp
ljmp
or
sbb
inc
aas
faddl
or
push
sarl
mov
out
add
cmp
shlb
xchg
mov
mov
std
lcall
jno
inc
loope
data16
mov
jo
mull
adc
push
pop
inc
data16
sub
nop
ret
dec
dec
jmp
add
loope
mov
xchg
in
test
mov
loop
xor
pop
cltd
std
aaa
xchg
lock
or
jmp
pusha
jne
jo
les
or
jl
add
jns
jg
inc
pop
mov
mov
fsubrl
bt
out
js
or
and
stos
and
jo
inc
jmp
daa
mov
mulb
inc
and
clc
shl
pop
cmp
or
lock
mov
inc
dec
mov
add
lret
pop
cmpsl
in
and
mov
mov
enter
or
xchg
add
rclb
xor
in
rclb
sub
das
cmpsb
adc
push
les
dec
das
dec
inc
lret
pop
fcom
xchg
test
subb
movsb
mov
and
shlb
adc
and
push
dec
inc
lcall
mov
das
xor
rcl
fisubs
orb
es
xchg
mov
add
enter
mov
and
dec
sbb
lock
ja
fstps
dec
cmp
sbbb
and
push
clc
call
insb
push
imul
add
and
test
cli
ja
dec
call
sub
test
xlat
adc
sub
lcall
or
jp
nop
pop
fwait
sbb
scas
cltd
adc
adc
push
sub
and
out
push
loopne
rcl
sbb
add
xor
jnp
inc
call
pop
in
fwait
aam
mov
push
sub
sub
jp
repz
aad
and
mov
je
pop
mov
and
pushf
add
push
or
jne
jnp
pop
mov
loope
pop
jo
les
adc
pop
mov
jno
inc
mov
cmp
push
or
and
or
xor
inc
mov
and
rcll
lock
outsb
add
jg
or
or
arpl
fistl
mov
sbb
xor
sub
xlat
je
sub
roll
jmp
cmp
sub
imul
jo
fdiv
pop
pop
out
mull
or
je
fistpl
fwait
push
movlps
sbb
add
pop
adc
ficoms
jne
inc
imul
inc
add
mov
lods
jno
add
mov
cmpsb
cmpsb
imul
push
pop
mov
andb
mov
in
sbbb
mov
adc
xchg
jo
fwait
daa
and
mov
adc
lahf
and
jo
add
push
gs
arpl
sbb
pop
popa
lods
loop
sub
mov
lock
pushw
int
imul
repnz
cmp
inc
pop
ss
jp
pop
fistpll
rcll
pushf
adc
or
rcrb
push
aam
mov
movsb
sub
and
cmp
adc
xor
push
add
ret
jge
xchg
sub
lahf
sbb
ss
pop
pop
jecxz
xor
cltd
ficoms
mov
dec
push
int
mov
pop
pop
ret
pop
xchg
add
dec
rcrb
test
adc
sar
lret
repz
mov
nop
ljmp
push
fisubrl
jle
shl
shlb
sub
in
pop
dec
flds
sub
adc
fsub
pop
nop
popa
push
add
scas
mov
js
xchg
mov
adc
sbb
dec
shrb
xchg
ret
pcmpgtw
push
pusha
imul
or
je
push
add
imul
fucomip
sub
dec
lods
sbb
test
cmpsl
mov
shll
sbb
stos
fwait
inc
outsl
fisubrl
ja
push
dec
mov
nop
imul
adc
sti
sbb
push
pop
fcomip
jbe
imul
xor
xor
push
mov
or
inc
outsb
inc
cmp
je
test
or
shll
lds
cs
pop
xchg
sbb
pusha
sub
add
rorl
je
rorb
mov
mov
mov
or
imul
adc
lock
mov
mov
push
adcb
mov
les
jo
inc
je
xor
out
push
or
dec
stos
loopne
movb
add
jb
pop
dec
test
mov
mov
subb
loope
sub
addr16
pusha
stos
add
es
and
sbb
sub
inc
fcoml
imul
pop
xchg
add
xlat
mov
dec
fildll
test
sbb
mov
add
xchg
inc
lea
mov
daa
enter
es
xor
bound
mov
fs
aam
add
push
enter
jl
js
loop
out
push
cld
mov
mov
inc
sbb
loop
fdivrs
xor
cmp
sbb
or
std
pusha
and
pop
xor
movl
xchg
mov
loopne
dec
je
dec
push
cmp
xchg
xor
jg
adc
mov
xor
adc
jae
jae
cld
fsts
int3
cs
adc
push
jae
jae
js
xor
dec
fsubs
add
pusha
jae
jae
mov
jecxz
cwtl
test
fdivs
jae
jae
test
xchg
rcl
dec
adc
popa
add
loope
xchg
int
xor
lods
dec
test
cmpsl
jne
ret
int
int
test
gs
and
push
mov
std
ss
imul
or
mov
mov
aas
add
jae
mov
rorb
inc
int3
pop
in
mov
pop
in
inc
ret
shlb
add
mov
sbb
rcrl
jp
sbb
mov
mov
js
mov
adc
fstp
or
scas
and
push
and
loopne
stos
jo
shufps
aad
stc
or
les
imul
int
in
test
sub
or
xor
outsb
mov
testb
jl
adc
les
jbe
dec
scas
and
mov
and
int
int
rorb
lods
stos
jge
out
arpl
fildl
fistpll
test
jmp
inc
mov
stc
insl
outsb
outsb
and
out
jl
int
adcb
insl
fbstp
mov
cltd
into
lret
test
jne
imulb
sbb
fdivrp
inc
js
jg
cmp
xor
ret
aaa
jle
test
push
jb
out
mov
sbb
xor
mov
test
pushf
out
sbb
mov
push
push
add
lahf
cmp
inc
add
sub
aaa
aaa
mov
or
stc
inc
push
push
pop
add
rclb
inc
cwtl
js
push
pusha
loopne
and
fdivl
fmull
int
dec
push
sbb
rorb
and
mov
icebp
push
stos
loope
mov
push
jp
test
adc
lock
cli
jo
sub
inc
roll
stos
fistps
loop
mul
adc
jle
in
cmp
adc
stos
cmpsb
stos
arpl
jnp
mov
mov
xchg
loope
nopl
or
xchg
iret
mov
cmp
push
adc
ret
push
pop
push
loope
cmp
push
cmp
scas
lret
push
mov
repnz
ret
repz
icebp
es
gs
push
add
cmpsl
clc
jecxz
out
cmp
push
push
fldcw
mov
mov
mov
dec
insb
jle
lahf
cwtl
mov
lret
scas
cld
fadds
pop
mov
rorb
loopne
sub
cmp
dec
aaa
jnp
push
rorb
sarb
inc
pop
mov
mov
xor
popa
fs
jmp
nop
pop
pop
or
jae
xchg
movsb
bound
xor
jae
in
cmp
dec
push
fisubl
adcl
pop
xlat
mov
loop
mov
rorl
ja
sbb
cmp
imul
pop
adc
jb
jl
pusha
cmpsl
jle
adc
xchg
dec
in
stos
rcll
add
dec
es
movsb
jb
jnp
lock
mov
movsl
jg
repnz
movsl
jb
vmwrite
dec
sub
sarl
xor
jge
rorl
mov
push
jle
xor
mov
js
inc
sbb
rcr
push
push
nop
cmp
mov
mov
and
inc
mov
sub
jmp
lret
cmpsb
push
leave
out
push
ds
insb
push
add
add
scas
jle
pusha
jno
loopne
fistpl
lods
add
cli
dec
pusha
push
xchg
pop
inc
jl
orb
push
repnz
sub
mov
pop
inc
clc
roll
popf
add
insl
outsb
or
inc
mov
repnz
inc
xchg
pusha
fwait
repnz
js
stc
add
cmp
jle
addr16
mov
xor
push
fs
pop
pshufw
int3
or
lahf
ret
add
cmp
fldl
incl
or
scas
pop
iret
inc
sbb
mov
push
dec
sub
outsb
mov
ja
cmc
int3
mov
push
popf
mov
mov
cmc
jecxz
movsl
xchg
jb
or
jp
sbb
jno
xor
ds
lods
inc
fildll
cmp
pop
mov
jno
ja
enter
lahf
mov
out
cmc
insb
mov
push
mov
or
sub
lret
push
adc
inc
push
scas
add
sbb
or
outsl
pushl
inc
xchg
lret
fstpl
cs
xor
xor
cltd
movsb
jb
cmpxchg
stc
dec
in
jb
mov
push
sahf
push
cs
dec
pusha
nop
or
jo
fcmove
test
out
lahf
adc
inc
je
push
adc
rolb
and
mov
mov
scas
es
mov
mov
jbe
aam
dec
rorb
mov
or
rorb
out
cmovge
fnstcw
stos
cmpsb
or
push
pop
rorb
mov
rorb
push
mov
cmp
daa
cmp
pop
push
or
es
lods
ds
rol
push
jg
dec
sub
js
shlb
push
mov
mov
rclb
rorb
cs
jle
pop
pop
push
push
xor
mov
shlb
sbb
rorb
out
fiadds
xchg
js
test
sub
andb
popf
inc
dec
arpl
sub
jle,pt
pop
add
scas
aam
pop
lahf
cld
scas
jno
repnz
les
and
or
shlb
cli
mov
mov
mov
and
cmp
lods
sarb
jle
call
cmp
cs
setg
outsb
repnz
lods
mov
pop
std
cli
fcmovb
cmp
in
je
shl
jecxz
je
ror
stos
xchg
popf
mov
repz
xchg
or
dec
mov
pop
jno
push
dec
rcrb
jae
ds
pop
push
push
or
or
in
js
xor
sarb
out
inc
xchg
fwait
mov
dec
loop
push
mov
pop
mov
rorb
in
shlb
push
push
push
ss
stos
add
push
icebp
icebp
push
jle
cmp
mov
push
mov
les
sarl
adc
lock
fnstsw
push
sbb
adc
dec
ds
daa
daa
ss
cld
mov
push
cmpsb
add
pop
fisubl
jp
push
jle
rolb
inc
mov
fs
out
jle
mov
dec
mov
rolb
rorb
test
sub
icebp
test
out
or
int
repnz
mov
hlt
sarb
jle
pop
ret
mov
imul
inc
mov
mov
sar
rclb
shr
cmp
inc
inc
pop
mov
arpl
jb
shlb
pop
pushf
rcrb
sarb
ret
mov
inc
sbb
out
mov
cmp
sub
cmp
adc
lock
scas
lahf
dec
imull
push
lahf
call
jle
sarb
icebp
jb
lods
xchg
nop
push
push
out
push
out
call
xor
cmp
adc
inc
push
and
push
cmp
jae
bound
mov
cmp
shlb
out
and
mov
sub
sub
cli
adc
shlb
mov
jle
cmp
mov
fiaddl
jnp
pop
lods
ljmp
fcmovbe
outsb
shrb
lret
cmp
mov
into
inc
or
jmp
and
shlb
xchg
rorb
mov
inc
mov
inc
push
add
jmp
sbb
lds
emms
pusha
movsb
xchg
movsl
mov
inc
sahf
movaps
test
mov
jb
js
sub
cmp
ret
movsb
jmp
push
mov
movsb
jb
jbe
and
imul
stos
sbbl
cmp
or
jb
mov
dec
sub
cmp
out
mov
insb
xlat
xor
mov
push
inc
adc
push
inc
push
push
sub
dec
pop
repnz
pop
repnz
sbb
gs
dec
push
xchg
push
pop
test
xlat
call
rol
push
lock
mov
popf
hlt
into
push
subb
fcoms
push
outsl
stos
inc
push
cmp
das
cmp
push
scas
add
push
lret
lea
mov
jle
sahf
xchg
in
or
dec
cmp
lods
jg
adc
fs
add
pop
xchg
jg
push
push
lahf
shrl
mov
pop
stos
push
push
jg
call
repnz
add
shll
shr
add
test
inc
stos
fwait
pusha
mov
jg
outsb
push
icebp
mov
sarl
mov
or
cmp
call
xchg
loope,pn
dec
adc
sbb
js
push
inc
addr16
je
fsts
mov
ds
addr16
sbb
jecxz
and
iret
adc
rcrb
jle
add
jns
jp
mov
jle
test
out
icebp
dec
addr16
jecxz
jmp
dec
cmp
dec
sbb
mov
sub
movsb
sub
ds
repz
jg
aas
hlt
cmpl
push
mov
jae
rep
or
std
call
xor
pop
loop
mov
sbb
mov
xchg
js
iret
leave
jecxz
ds
loopne
jecxz
arpl
sbb
dec
xchg
iret
and
jge
repz
mov
cmp
lahf
out
mov
int
inc
pusha
dec
outsl
pop
loop
cmp
jle
jnp
iret
out
std
test
repz
mov
ret
cld
jge
dec
loop
cmp
cmp
dec
out
pop
incb
iret
aam
sti
leave
femms
jp
xor
psubsb
xor
ficompl
addl
popa
test
jle
fs
rcll
out
icebp
sahf
incl
jno
cmpsb
sub
pop
pushf
out
das
adc
push
js
stc
cmp
dec
incb
or
adc
daa
jmp
popa
and
dec
in
repnz
lods
mov
popa
repz
shll
fs
imul
cmp
repz
incb
sbb
adc
sub
jno
out
cmp
cmp
iret
out
mov
cmc
fldenv
jns
aad
adc
iret
repz
aas
movsl
call
test
cmp
shrb
iret
notb
out
jl
sub
lahf
dec
cmp
cwtl
cs
cmpsl
mov
out
mov
repz
xchg
decb
or
and
loope
shlb
jl
sbb
pop
sub
xchg
and
cmp
shrl
sahf
inc
andb
outsb
rol
cwtl
scas
mov
inc
xor
xchg
jecxz
rorb
iret
leave
mov
mov
jno
or
mov
or
push
aam
pop
jg
out
jb
pushf
xor
pop
or
xchg
xchg
lret
movsl
mov
jb
mov
and
xchg
lret
push
push
movsb
push
jo
fs
mov
outsl
js
or
dec
outsl
and
bound
imul
clc
int3
mov
js
loopne
jg
add
aad
clc
out
cmp
and
inc
push
mov
cmpl
pop
loop
scas
pusha
out
pop
movsb
xor
stos
xchg
ret
insl
add
scas
dec
call
ss
sub
cmp
outsb
sbb
mov
xchg
outsw
dec
mov
or
es
or
adc
lret
shlb
push
call
xchg
out
xchg
xor
cmp
filds
cmp
test
push
cmp
mov
jl
testl
jle
addr16
movsl
xor
jle
das
sbb
ljmp
jg
cmovg
push
and
dec
test
lock
mov
sti
mov
xchg
jno
add
pop
jle
jp
sbb
mov
sahf
cmp
sbb
jg
inc
call
sbbl
and
cmpb
mov
movsl
scas
clc
scas
jle
pusha
in
lods
repz
loopne
loop
mov
or
and
popa
xchg
jg
xchg
in
jle
push
mov
mov
jp
lahf
push
outsb
rolb
and
mov
sbbb
lea
cmpl
inc
mov
xchg
decb
enter
add
mov
mov
loop
pop
push
dec
adc
mov
mov
cmp
incb
mov
loop
jmp
cmp
lahf
adc
das
push
xchg
clc
xor
xchg
and
mov
cmp
xchg
pop
ret
pop
clc
movsl
aam
pop
sub
popf
repnz
addr16
and
jae
inc
adc
lds
and
jg
mov
divl
cmp
sub
test
mov
mov
jbe
push
bound
mov
cmp
setb
test
nopl
mov
jle
in
ja
lock
mov
cli
imul
fsubr
adc
inc
xor
nop
pop
lods
rol
jecxz
mov
faddl
jo
cmp
cmp
jnp
inc
jle
jo
cwtl
cmp
insb
clc
iret
js
hlt
mov
leave
jo
lds
lock
xorl
jl
roll
iret
sub
sti
jbe
sbb
aaa
jle
jle
rcll
pop
mov
inc
pusha
ljmp
addb
jle
test
mov
out
loopne
jg
mov
mov
pop
in
mov
xchg
sbb
jl
mov
gs
adc
fbstp
add
repnz
hlt
cmc
ljmp
in
repz
dec
dec
dec
adc
incb
pop
push
mov
pushf
jg
cld
fs
outsb
rolb
adc
adc
sub
fdivp
std
lret
xchg
mov
cld
jbe
roll
cmp
jle
push
cmp
push
add
fdivrp
clc
les
mov
mov
aaa
cmpsb
ficomps
test
flds
in
mov
js
ret
mov
pop
adc
test
cmp
shll
sub
cmp
mov
jmp
mov
cmp
shrb
mov
js
and
lock
in
pop
into
addr16
rorl
push
push
shl
ret
icebp
rol
xor
movsb
stc
lods
mov
aad
mov
xor
adc
cmpsl
jg
add
cmp
xchg
xlat
ror
iret
or
popa
pop
xor
sti
push
pop
pop
mov
std
repnz
add
lret
xchg
stos
aad
psubsb
sbb
stos
and
jg
call
movsl
out
xchg
loop
sub
jo
push
mov
and
jg
mov
jns
jle
faddp
adc
aad
mov
jnp
pushf
sbb
sub
and
js
icebp
es
jns
adc
js
sti
mov
push
outsb
popa
mov
out
xlat
dec
scas
sarl
inc
je
push
pop
dec
jecxz
clc
sahf
jo
xchg
mov
mov
pop
push
clc
pop
add
adc
or
int
nop
pusha
mov
js
add
jg
mov
movsb
cmp
ss
test
idivb
mov
push
out
adc
jp
mov
in
jo
fs
pop
adc
fadds
in
jle
ret
incl
push
in
call
aas
outsb
push
and
rorb
aaa
decl
repnz
loop
hlt
jmp
jb
add
mov
movsb
je
call
push
rolb
shrb
add
pop
and
xchg
xor
subl
jle
push
imul
push
jl
push
jle
loopne
lea
rcll
sbb
rorb
add
pop
dec
nop
or
push
loopne
jl
shlb
fistps
xchg
sub
jle
pushl
mov
pop
mov
add
cmp
orb
call
push
shl
pop
push
jo
hlt
ljmp
inc
pop
pusha
jp
addl
bound
dec
pop
mov
fdivrs
int3
sarb
push
xor
testl
fisttpl
mov
inc
fidivrl
jbe
aas
mov
jl
loope
mov
jle
in
mov
loope
pop
aas
cld
cmp
and
xor
jne
popf
sarl
jp
jecxz
or
test
jno
rcrl
push
mov
stos
rorb
or
test
loop
lahf
add
sahf
adc
push
push
cwtl
sarb
jg
adc
scas
sbb
xchg
cmp
in
push
jp
repz
mov
cmp
mov
ljmp
cmp
jmp
dec
mov
jle
call
sub
aam
dec
clc
icebp
mov
push
jmp
sub
mov
ja
mov
and
add
push
jge
addr16
mov
mov
cmpl
push
insl
insb
fstpl
or
clc
cmc
jle
add
stos
aaa
in
sbb
pushf
xlat
fildll
push
mov
cmpsb
aad
sahf
js
jge
jl,pt
xchg
pop
jle
push
or
movsl
es
pop
imulb
rol
pop
ss
fadds
jl
xchg
push
xor
ds
push
xchg
push
stos
xlat
lods
jg
push
loopne
jg
pushf
sub
mov
push
pop
in
call
dec
sbbb
inc
sar
lock
mov
movsb
push
aad
dec
push
jg
incb
dec
jg
pop
ret
push
sar
or
pusha
pop
pop
push
shl
shlb
rolb
int3
mov
test
sarl
call
inc
rclb
sar
js
sbb
pop
test
jle
shlb
addr16
rcrb
jg
rorl
and
shlb
fsts
rorb
add
mov
xchg
mov
mov
je
rcrb
pop
cs
mov
push
mulb
jo
mov
sbb
fwait
dec
pop
lahf
movb
and
push
push
xchg
or
shrb
lock
push
xchg
dec
out
je
xchg
adc
test
popl
mov
inc
popf
push
lahf
mov
fbstp
sub
xchg
lcall
push
xchg
fisubrl
pop
pop
aas
lock
fists
mov
cmp
dec
cmp
push
sbb
jb
js
jle
in
and
mull
insl
pushf
shlb
loopne
int
bnd
inc
xchg
movsb
push
das
push
cld
stc
out
insb
sar
mov
inc
outsb
bound
cs
testb
bound
inc
into
incb
movsl
insb
mov
lds
shlb
pop
jo
xchg
sub
cmp
or
orb
aad
mov
pop
sub
cmpsb
test
call
push
aam
cmpb
loopne
add
into
add
outsb
lcall
test
mov
std
or
jle
cmc
jbe
fmuls
mov
xor
clc
cmp
mov
jge
or
insb
add
pop
in
sahf
insb
add
cld
mov
sahf
mov
shll
mov
cmc
js
fsubl
cmp
sbb
or
add
notb
rorl
pop
lods
les
movsb
dec
xchg
fcompl
dec
jne
jge,pt
push
js
jl
xchg
int
xorb
js
test
xor
pushf
mov
loopne
push
sahf
loop
sub
push
mov
dec
mov
or
cli
stos
lock
icebp
je
mov
test
cs
cmp
je
pop
push
pop
mov
rcrb
adc
xor
sahf
outsl
mov
mov
ljmp
cmp
nop
fs
imulb
mov
lock
adcl
jge,pt
jp
icebp
push
cmp
jle
fiaddl
cmp
std
insb
aam
adc
jp
jecxz
test
lcall
mov
xchg
or
pop
pop
sbb
lock
ljmp
push
out
cltd
loop
ret
pop
out
push
or
ficompl
jle
ljmp
jno
lods
mov
cmp
and
clc
shll
xor
cmp
mov
loop
lods
sub
xorb
mov
jbe
jl
test
sub
lock
sti
insb
lret
dec
mov
sahf
movsl
mov
ds
out
and
mov
jge
js
jmp
pop
adc
scas
push
jmp
out
mov
add
popf
mov
push
xor
mov
mov
aam
cmpsb
js
scas
push
jp
and
jp
into
loop
cli
cli
fnstcw
or
mov
mov
pop
jl
out
lods
push
ss
ds
mov
sub
test
mov
inc
push
jle
test
pop
pop
sahf
test
shll
sbb
dec
jo
pop
fistl
or
or
xchg
push
fcoml
xor
adc
lods
shlb
nop
clc
mov
jp
movsl
test
dec
insl
in
sahf
xor
hlt
lock
cwtl
xchg
int
loope
and
add
js
pop
pop
cmpsb
hlt
inc
bound
vunpckhpd
loopne
mov
or
lahf
jbe
xor
cwtl
sub
loope
cmovg
mov
fidivs
orps
rorl
jp
mov
out
mov
and
repnz
push
mov
dec
push
lds
inc
mov
repnz
aas
ficomps
sub
pusha
test
add
jp,pt
jle
adc
mov
stos
mov
pop
lahf
mov
test
bound
jbe
loope
clc
adc
into
inc
fisubs
dec
call
pop
pop
cli
mov
insb
gs
adc
fisttpl
mov
lods
sub
in
push
pop
pop
divps
lods
loopne
mov
sar
pop
pop
je
xchg
pop
int3
cmpsb
mov
insl
push
pop
or
mov
push
or
push
out
xor
mov
mov
je
or
mov
ds
pop
or
int
insb
add
sti
test
rol
fdivrs
stos
bnd
cmp
cmp
jl
mov
dec
subl
pop
js
ds
add
pushf
xchg
ljmp
pop
cld
outsl
cmp
add
addl
lcall
cwtl
mov
push
loopne
hlt
icebp
mov
clc
pop
dec
lret
popa
movsl
push
loopne
xor
sub
je
jge
or
sbb
push
mov
jl
mov
cmpb
les
mov
xor
fiadds
arpl
ret
cltd
cli
lods
mov
inc
aas
cld
cli
icebp
pop
push
push
and
fs
add
rcrl
jle
out
push
dec
clc
cmp
dec
ret
into
enter
in
cmpsl
jnp
inc
push
cmpsb
push
mov
pop
loope
add
and
xlat
sub
testl
adc
jns
dec
xor
into
add
sub
push
sbb
add
cld
cli
xchg
mov
xchg
aas
notl
notl
test
and
je
loopne
inc
das
outsb
out
sahf
lock
bound
outsb
inc
aaa
js
mov
or
mov
in
jp
sbb
and
push
pop
fwait
jnp
lcall
scas
je
pushl
ljmp
cli
cmc
xchg
lcall
mov
xchg
xor
les
lds
js
cmp
push
lock
dec
mov
dec
jl
push
in
insb
pop
imul
lock
push
pop
test
stc
ljmp
mov
jo
movsb
inc
jg
clc
push
sbb
fisttps
shll
clc
fdivrs
mov
dec
mov
mov
cmpsl
aas
sub
shlb
mov
mov
enter
xor
xor
out
jecxz
scas
ret
into
pop
int3
inc
inc
pandn
mov
pop
fdivr
in
jbe
jo
cmpsb
mov
add
mov
add
dec
sti
or
pop
push
sub
xor
sbb
jge
jle
sbb
ds
mov
aam
imul
or
pop
push
or
scas
mov
out
fisubrs
dec
int3
cmp
pop
fildll
xchg
xor
clc
es
mov
jmp
sbb
pusha
cs
lock
pop
mov
repz
jne
test
xchg
pop
adc
jp
cmp
xlat
test
loop
arpl
or
mov
test
xor
mov
xor
cs
test
scas
pop
fisubrs
jl
movsb
ds
adc
push
jecxz
and
es
adc
push
push
fidivrs
repz
js
psadbw
add
xchg
mov
xchg
lock
pop
test
js
outsl
stos
inc
in
pop
test
push
mov
cli
js
pop
or
nop
je
js
orl
repz
lods
jo
and
pusha
xchg
pop
call
adc
mov
fimuls
dec
add
pop
ret
rolb
bound
getsec
jmp
enter
cli
dec
pop
jl
add
insb
in
out
jge
incb
or
xor
in
fldcw
mov
sahf
and
jl
ds
dec
xor
stos
pop
add
out
js
adc
jmp
mov
jbe
push
inc
out
jle
stos
sub
xchg
ja
mov
repz
loop
adc
sbb
xlat
mov
pop
pop
mov
sbb
clc
dec
mov
add
clc
loopne
cld
shlb
jnp
jo
cltd
data16
xor
pop
sbb
dec
sti
mov
das
loope
dec
insb
pushf
repz
dec
movsl
out
xchg
fidivrl
lock
cmp
fdivs
dec
es
xchg
aam
call
mov
push
inc
xor
mov
add
loop
loopne
imul
jo
jge
push
jnp
dec
pop
inc
push
lea
fimuls
fildll
pop
mov
dec
sahf
insl
mov
scas
inc
xchg
sub
data16
mov
jbe
js
cmp
mov
xor
mov
jle
sub
jb
ss
stos
adc
cmp
or
jl
mov
sbb
xchg
mov
pop
mov
and
lods
idivl
mov
mov
pushl
pop
cmp
jle
xchg
inc
inc
ljmp
lock
inc
xor
out
push
cmc
push
jp
cli
fiadds
dec
jbe
mov
jmp
cmp
ret
in
stos
mov
mov
fisttpll
repnz
cmp
push
inc
cmp
push
mov
das
jge
mov
pop
std
loopne
xchg
push
xor
pop
mov
nop
hlt
sarb
ljmp
ret
or
inc
iret
imul
rorb
std
clc
lock
pop
xor
shrl
push
rcrl
clc
clc
shlb
sbb
cmp
inc
xadd
cmp
add
push
pop
cmp
or
sub
jecxz
testl
add
aas
bound
or
sbb
lock
cli
icebp
and
pop
fcompl
push
pop
add
dec
jnp
jge
cli
out
pop
pusha
sub
dec
lret
inc
subb
push
aaa
lret
into
fcoml
clc
mov
jp
ret
push
xchg
push
add
cmp
mov
es
mov
push
cld
dec
fmul
call
jl
andb
xor
dec
sbb
aas
out
cmpsl
and
pop
mov
je
pop
mov
inc
fidivs
lods
cld
es
int3
pop
clc
jmp
pushf
dec
xor
test
rcrl
inc
cmp
push
clc
pusha
stos
dec
or
sti
dec
jmp
xchg
movsl
push
fisttpll
cmp
lods
decb
js
jmp
sub
cmp
inc
adc
xor
loope
rclb
es
div
mov
aas
inc
lcall
xchg
pop
aas
pop
jl
and
mov
ret
scas
push
cs
dec
cmp
pop
jo
fadds
push
ss
ret
cmp
in
mov
or
cmpsl
rolb
jge
ljmp
clc
loopne
mov
rcr
bound
pop
js
mov
insl
pop
jl
push
in
cld
daa
push
call
sbb
enter
sbb
ss
pop
aam
mov
cltd
jae
ds
lods
aaa
aam
fwait
movb
pop
push
cmp
dec
jns
lock
shrl
shl
shll
je
test
or
insb
mov
pop
sbb
ficompl
fsub
cmpb
pop
xchg
and
xchg
mov
xor
inc
dec
mov
aaa
shlb
fnsave
add
les
mov
mov
sub
sub
and
pushf
dec
cld
push
fs
orb
jp
xchg
bound
jb
mov
insb
cmp
and
lods
xchg
les
je
jae
mov
inc
mov
cmpsl
enter
das
pop
fisttps
das
shlb
jl
sbb
mov
cmp
pop
js
bound
and
jp
add
test
out
push
fsubr
and
jle
jp
xor
out
call
repz
mul
clc
or
push
mov
std
inc
sub
mov
jl
lock
addl
rcpps
xchg
lods
and
pop
loopne
ljmp
les
js
std
addl
fistpll
jle
mov
xor
js
fsubl
add
std
clc
mov
es
int3
outsb
ret
outsb
cmp
or
or
adc
loope
testl
hlt
add
icebp
aad
mulb
sbb
not
dec
push
outsb
fbld
inc
das
cltd
jle
js
int3
repnz
lahf
mov
jp
aas
jl
cld
in
pop
int3
data16
push
and
fiadds
jmp
jle
or
add
addr16
xor
orl
jecxz
xor
out
sbb
repnz
sar
pop
lods
jp
push
subl
jle
jp
imul
test
add
inc
scas
add
ja
je
pop
out
pop
push
jl
mov
lahf
cmp
xor
les
divb
mov
jl
iret
and
arpl
shlb
sub
mov
cli
sub
lods
push
dec
call
jl
mov
int
and
pop
nop
add
add
rcl
inc
clc
clc
loop
pusha
jbe
repnz
pop
sbb
lds
push
js
loop
dec
jecxz
fimull
add
mov
mov
xor
cmp
sbb
xchg
sbb
mov
clc
push
ret
fnsave
push
mov
in
cs
mov
inc
cmpsl
xor
sbb
mov
clc
cli
fsubrl
lock
icebp
or
dec
imul
std
mov
cmp
ror
out
jmp
mov
cmp
xchg
idivl
fmuls
cs
dec
clc
push
jecxz
and
mov
push
xor
pop
cmp
push
stos
rolb
add
nopl
inc
rcrb
push
ja
roll
ds
push
cltd
pop
xadd
les
or
scas
pop
clc
fidivs
sub
push
stos
mov
dec
sahf
mov
nop
js
mov
ljmp
jno
popf
testl
ss
subl
ljmp
insb
icebp
ret
icebp
call
ss
repnz
out
xorl
int
cmp
xor
xor
xchg
mov
and
scas
call
jmp
mov
jp
xrelease
pop
insb
or
pop
mov
inc
out
das
inc
shr
lods
mov
cli
cmp
push
addr16
mov
cmpsl
mov
xchg
add
cmp
xchg
sub
pusha
mov
jle
sarb
movsb
sahf
mov
sbb
scas
jle
cmp
or
xchg
or
rcr
rcrl
xor
insb
or
cs
lock
pop
or
ss
jmp
jg
pop
loop
out
adc
xor
push
sub
jl
nop
mov
movsb
add
sub
dec
ret
and
dec
test
insl
out
dec
mov
adc
lods
imul
mov
cmp
jne
mov
bound
pushf
out
lret
jge
sti
popa
test
sub
hlt
cmp
sub
xchg
mov
jbe
out
stos
out
push
dec
inc
gs
mov
pop
mov
mov
or
push
pop
ret
js
and
scas
xchg
sbb
xor
mov
adc
xor
mov
cli
loope
xlat
mov
xchg
push
or
js
xchg
sbb
ficomps
bound
or
cmp
xchg
lock
into
mov
xor
clc
push
cmp
imul
in
xor
scas
jecxz
jnp
mov
inc
in
scas
pushf
mov
mov
or
jno
shlb
insl
out
mov
sti
mov
cmp
cli
insb
outsb
aas
mov
cwtl
add
sti
cmpl
sahf
es
jg
jp
add
fcoms
lock
sahf
sub
les
cltd
in
cmp
in
add
pop
and
ret
call
div
je
insl
jb
dec
fcom
mov
fmuls
cmp
les
lock
js
add
sub
mov
or
pop
pop
pop
mov
pushf
or
or
xlat
mov
out
mov
jge
call
mov
add
in
js
sar
ds
push
cmp
loopne
loop
repz
mov
cmc
push
mov
jle
xor
lret
insb
xchg
xchg
ds
mov
inc
mov
imul
sub
std
inc
xor
rcll
add
pusha
pop
ds
cli
data16
mov
adc
and
mov
xor
cmp
xor
stos
inc
mov
ret
bound
push
ret
jae
push
aas
lret
pmulhuw
loopne
or
js
jbe
ds
jl
jbe
imul
fldt
rorl
gs
mov
and
pop
mov
scas
ret
push
inc
mov
mov
stos
not
int3
inc
stos
cmp
inc
popa
pop
sub
popf
jle
sbb
sbb
ljmp
aad
popf
add
mov
dec
scas
mov
std
in
push
inc
jl
mov
mov
fadds
bound
les
push
into
pop
xchg
aam
ret
idivl
loop
addb
mov
mov
cmp
ljmp
jo
nop
repnz
popa
pop
push
dec
dec
sub
sub
push
pop
mov
pop
xor
js
xchg
add
jp
push
fistl
orb
push
cmp
fs
push
sub
out
test
aam
sub
push
jp
jge
dec
movsb
push
xor
cmp
clc
imul
push
sbb
std
add
aaa
xor
fadd
adc
cmp
leave
in
in
xlat
inc
mov
js
scas
pop
dec
fmuls
enter
popl
jl
push
jge
or
out
xor
mov
negl
clc
pop
pop
fidivs
cmpsl
sbb
dec
shrl
jnp
sub
movsb
xor
mov
jge
push
jo,pt
cmpb
into
add
stc
rol
pop
shr
add
sbb
in
pop
jg
adc
daa
adc
cmc
loopne
cmpsl
mov
pusha
cli
lock
test
fcompl
xor
ds
pushf
cltd
mov
or
cli
and
cli
mov
loop
pop
cmp
push
push
pop
jno
subl
xchg
sub
loope
ljmp
aaa
cwtl
ficoms
cmc
cli
ds
shlb
jge
adc
xor
es
pop
in
lds
pop
add
xchg
pop
sub
std
clc
loop
mov
ss
sub
cmp
mov
pushf
cmp
orl
mulb
pop
rolb
lds
cmc
dec
pop
lods
add
push
ss
cmpsb
lods
and
ret
sbb
iret
push
hlt
push
rorl
shll
out
push
jl
out
jmp
fiaddl
inc
mov
lret
cmc
sbb
push
shl
lods
pop
repz
add
mov
ret
cmp
inc
mov
sbb
pop
js
sub
cmp
mov
mov
lcall
flds
cmc
jle
pop
cld
test
fsubl
sti
ljmp
rcrb
ss
cwtl
push
push
mov
add
jmp
rol
xchg
xchg
pop
vmaxpd
lret
and
push
cmp
loopne
out
mov
int3
inc
dec
push
loopne
jo
idivl
or
fiadds
adc
mov
enter
aaa
loope
xor
loopne
sbb
fcomp
loopne
mov
rcrl
jecxz
bound
cld
clc
icebp
call
xchg
ds
cmp
or
shll
in
jns
jo
js
fwait
ljmp
mov
icebp
hlt
dec
dec
jbe
mov
xor
into
mov
mov
ds
fisubs
pop
dec
ret
mov
aad
jge
push
jge
push
adc
inc
or
sti
cld
push
xor
mov
push
jae
dec
push
push
cltd
movl
sbb
sbb
std
cmc
mov
data16
or
mul
xchg
aam
in
push
ljmp
and
test
nop
jnp
pop
ret
shrl
test
mov
lock
shr
pusha
ss
and
test
cmpsl
out
shll
jbe
bound
aaa
dec
out
mov
clc
push
loope
imull
addr16
repz
lds
sbb
pop
pop
xchg
xchg
gs
xor
xor
lret
stos
fisttps
mov
sbb
in
sub
push
loope
push
es
lahf
cmp
jo
mov
dec
imul
dec
ljmp
mov
bnd
xor
sub
sbb
loope
sub
rorl
ds
les
cld
mov
mov
rorl
mov
arpl
ds
mov
insl
fcoms
mov
test
mov
pop
data16
sub
sbb
cld
icebp
mov
test
test
ds
repnz
rolb
movswl
sub
fdivrs
stos
add
loop
enter
push
xchg
lds
mov
mov
outsb
mov
in
jle
lock
xor
fwait
push
sbb
das
or
jp
xchg
pop
jl
in
jle
xor
cmpsb
into
pop
mov
ficomps
movd
mov
mov
jecxz
cmp
sbb
sahf
push
mov
pop
and
sub
cmp
je
push
mov
dec
call
inc
or
pop
mov
ret
push
xchg
push
cmc
loop
push
jbe
repz
rclb
jp
mov
add
shlb
std
clc
or
mov
sbb
ljmp
sub
mov
pop
mov
fcoml
and
mov
pop
ds
or
or
dec
sub
cmpsb
test
decb
cmovs
adc
pop
fdivs
aad
sti
cmp
sbb
jbe
pop
int3
roll
outsl
in
and
pop
aaa
in
jp
loopne
rcr
push
js
pop
out
in
cs
insb
mov
xlat
or
jb
stos
dec
scas
dec
sar
in
ds
xchg
test
sub
add
pushf
sarb
or
dec
sbb
mov
cwtl
mov
lahf
cs
jecxz,pt
repnz
jo
pop
aas
mov
outsl
cmp
arpl
mov
jae
enter
sti
loopne
or
sbb
rcr
in
rolb
mov
jle
vmread
sub
stc
mov
fisttpll
sbb
or
jecxz
daa
aas
cmp
xor
mov
roll
lahf
decb
xchg
call
add
and
cmp
or
lock
jge
dec
lahf
inc
sub
iret
dec
cmp
test
mov
rcll
aas
jo,pt
pop
push
xchg
fs
mov
hlt
xlat
sbb
int
sub
mov
jle
add
jmp
ljmp
es
inc
inc
dec
cmp
roll
not
sbb
hlt
lock
cmpsb
jno
xor
scas
inc
cmp
mov
cld
or
mov
andb
sbbl
jp
add
mov
push
lock
cmp
fisubl
orl
push
loop
jmp
pop
insl
mov
loopne
testb
sbbl
mov
js
lock
insb
xchg
shrl
sbb
mov
xor
cli
imul
xor
fwait
das
mov
call
mov
pop
cs
popa
xor
bound
pushf
repz
sbb
mov
lods
call
shll
inc
mov
sti
call
call
jbe
in
clc
inc
mov
sub
inc
in
push
je
push
ja
sub
adc
add
sahf
fisttpl
stos
out
inc
test
xchg
xchg
xor
cmc
jmp
sbb
jno
shll
cmp
jae
xchg
addr16
inc
clc
loopne
adc
add
cs
pop
into
adc
shrb
cwtl
mov
dec
jl
push
pop
jecxz
sahf
push
inc
xchg
xor
std
int3
in
fsubp
mov
xchg
jo
pop
iret
mov
sub
out
cmpl
cmp
fdivl
push
cmp
and
mov
jmp
in
shrb
aam
es
pop
pop
sbb
bound
sub
mov
push
push
lcall
cmp
clc
sahf
mov
push
adc
xor
cmp
or
dec
add
cmpsb
xor
inc
xchg
mov
jo
xchg
out
add
jge
loop
scas
ds
mov
xchg
mov
mov
dec
scas
xlat
dec
loop
mov
dec
lock
loope
mov
mov
ficomps
adc
test
or
jle
rcll
inc
mov
push
and
pop
and
jge
sbb
inc
subb
cmp
in
or
mov
and
cmp
scas
out
aad
les
fldl
rcrb
push
hlt
jecxz
mull
pushf
popa
add
jb
pushf
pop
fwait
je
cwtl
xor
faddl
nop
clc
lock
or
fcompl
testb
repnz
or
cmp
repz
aad
xchg
fnstenv
push
stc
clc
popa
cmpsb
xchg
lods
insb
pop
lock
sar
ret
xor
pop
mov
sbb
jl
jnp
loopne
pop
sbb
out
cld
mov
clc
movsb
jbe
sbb
jb
std
ds
loop
pop
fsubrl
pop
in
ljmp
sub
sti
lock
sbb
rorb
push
push
jno,pt
adc
cmp
mov
or
test
outsb
int3
insl
lock
cmpsb
movsl
xchg
push
hlt
js
cmp
filds
mov
adc
pop
add
aad
mov
sbb
stos
lock
push
jbe
mov
aad
adc
test
imul
adc
xchg
lods
jbe
clc
push
pop
cld
ss
stc
push
imul
addr16
movsb
and
loopne
scas
pop
push
push
cmpsb
mov
add
cmc
push
subl
fucomp
mov
outsb
adc
sbb
fbstp
enter
les
push
fs
xchg
orl
pop
test
mov
stc
scas
lcall
dec
pop
ljmp
leave
pop
movsb
stos
pop
push
xchg
ds
jl
add
jo
jb
mov
pop
std
cli
cmc
cmp
pop
mov
mov
and
test
loope
jl
push
sbb
pusha
sbb
rcrl
in
cmp
out
mov
stos
add
je
rorb
push
lea
jle
jge
ljmp
push
and
mov
pushf
push
sbb
orl
mov
mov
pusha
adc
stc
add
sbb
cmp
out
iret
add
xchg
out
bound
ss
cmp
push
dec
ret
cltd
xchg
js
loopne
inc
cmp
ret
mov
imul
clc
lds
ds
test
cmp
lods
or
xchg
addr16
mov
fucompp
shrl
clc
cmp
mov
idiv
test
shrb
pop
push
test
adc
sub
cmp
push
mov
es
jl,pt
out
sub
in
iret
nop
push
jmp
jo
je
and
fdivrs
pop
sbb
lds
mov
out
inc
or
out
mov
das
lock
fisttpl
pushf
int
cwtl
test
js
mov
push
jmp
push
pop
lret
jp,pt
mov
call
notl
sbb
add
je
jbe
rcl
and
fimull
lahf
ficomps
and
rcrl
xchg
es
mov
mov
insb
test
jbe
mov
mov
xchg
mov
ret
mov
lock
insb
and
rolb
into
out
les
pop
cmp
bound
inc
int3
repnz
add
pop
or
pop
xchg
mov
xchg
fisubrs
mov
pop
jp
mov
pop
js
pop
jle
je
in
jl
hlt
lock
jnp
dec
push
cli
bound
clc
repnz
mov
jne
push
lds
imul
repz
pop
cld
lock
movsl
adc
sbb
jg
mov
push
mov
int
cs
mov
out
icebp
xchg
clc
mov
mov
add
shrl
aam
xchg
sub
sbbb
loope
xchg
mov
std
test
aaa
ret
insb
adc
scas
iret
jle
lods
mov
jecxz
roll
mov
data16
jle
push
testl
push
cmp
mov
lods
outsb
sahf
and
orl
inc
in
jns
dec
ljmp
jle
pop
dec
or
pop
pop
js
jle
lret
dec
fdivs
add
mov
mov
cmp
pop
js
cli
push
sahf
and
roll
mov
and
rol
xchg
dec
cld
pushf
pop
xchg
cltd
push
add
shrl
sbb
out
sub
cmp
clc
loopne
lods
lods
jbe
sub
outsl
fisubs
fs
jbe
loope
jle
in
dec
or
mov
aaa
dec
xor
pop
aad
sub
xor
jle
inc
call
mov
pushf
dec
cmpb
loope
mov
push
clc
arpl
jge
sbb
testb
js
addl
ljmp
cli
cs
sti
xor
sti
popf
push
cmp
aad
jmp
or
jp
mov
cli
hlt
test
pop
dec
cmp
hlt
out
adc
loopne
les
add
outsl
and
xor
hlt
xchg
mov
cmp
loop
ljmp
in
shlb
add
adc
test
roll
lret
and
fbld
pop
or
add
nop
dec
add
ds
in
dec
stc
xchg
insb
xor
jg
inc
rclb
fsubl
adc
jnp
out
clc
jp
daa
bound
testl
ds
jp
icebp
test
mov
ss
arpl
out
mov
out
push
xchg
cmc
mov
popa
aam
add
pop
aam
js
mov
pop
mov
iret
jp
pop
ds
das
sbb
jp
les
pop
pop
rolb
in
daa
loop
bound
xor
test
pushf
push
xchg
shrb
mov
aaa
and
xlat
mov
test
orb
push
test
add
popf
xor
scas
ds
ds
cmpsb
fadd
mov
rcrl
test
push
orb
cmp
mov
popa
jl
loopne
mov
hlt
jnp
mov
sub
test
sub
or
adc
call
clc
cmpsl
imul
cmp
jb
shlb
mov
and
or
lods
fsubp
cmp
or
fldl
ret
push
sub
xchg
sarb
pop
push
jp
clc
in
cmp
hlt
repnz
xchg
jbe
les
cmp
cmpsl
push
mov
into
push
xchg
mov
mov
mov
faddl
fsubr
dec
push
test
clc
imul
xor
cmp
add
pop
xchg
fiaddl
in
pshufw
mov
sbb
fcmovb
dec
dec
push
mov
ss
sbb
fldl
cmp
and
clc
icebp
add
pop
jns
adcb
test
clc
icebp
ds
and
pop
push
lcall
lds
faddl
out
mov
mov
jmp
push
aaa
dec
cld
adc
stos
mov
repz
sub
stos
jl
cmpb
mov
mov
in
inc
lret
and
dec
mov
jl
enter
repnz
mov
pop
dec
mov
out
dec
pop
pop
ds
lods
in
jge
xor
lock
sti
and
dec
daa
pop
push
loop
ja
jl
mov
xchg
inc
mov
jp
icebp
loop
rol
je
push
mov
or
add
stc
jg
cwtl
int3
addr16
jae
lods
sub
add
pop
add
mov
subb
ret
sub
fmuls
enter
shr
sti
icebp
lret
add
loopne
out
jle
push
ds
cmc
sub
or
and
fisubrs
scas
cmp
mov
js
sahf
js,pt
ds
inc
mov
push
push
mov
mov
imul
xchg
das
ds
mov
adc
incb
nop
mov
cmp
push
repz
adc
into
decb
aam
add
pop
inc
orl
push
push
xor
loopne
aas
mov
lock
lods
pop
int3
out
cmp
xor
cmp
push
fcomip
rclb
es
leave
mov
cld
das
loopne
jp
xor
stos
push
loopne
fadds
xchg
dec
popf
dec
jl
push
xchg
sbb
into
dec
je
mov
sub
cmpsl
add
mov
or
mov
pop
inc
mov
add
decb
inc
ljmp
lods
inc
sahf
sub
or
xchg
loope
leave
adc
mov
xchg
es
jle
movsl
and
dec
add
pop
in
rol
loop
push
lock
push
mov
push
mov
inc
sub
clc
icebp
loope
add
cmpsl
push
adc
out
rorl
jne
and
iret
js
fildl
xchg
out
cmp
std
std
jl,pt
mov
and
mov
cmpsl
mov
clc
cld
jle
lods
xor
pop
push
inc
sbb
loop
push
std
push
fdivs
mov
sbb
push
push
mov
sub
out
sti
shll
xor
inc
sbb
ret
out
jo
enter
mov
out
clc
icebp
ljmp
and
jnp
mov
adc
lock
jge
inc
add
call
testb
cli
jle
int
shrb
mov
jmp
push
ret
mov
mov
pop
push
mov
mov
cmp
ret
inc
clc
in
mov
enter
loopne
xor
add
lahf
jp
cmc
dec
mov
mov
insb
cs
fimuls
scas
jns
es
inc
fstps
xor
cmp
mov
sbb
imul
fwait
mov
xor
xchg
sbb
xchg
shll
insl
ret
cwtl
imul
in
or
or
adc
test
ljmp
xor
cld
cmpsb
jle
jle
js
mov
cs
aaa
popf
inc
cli
sbb
out
jl,pt
sti
aam
ret
cmp
jle,pt
mov
iret
lcall
cmpsb
or
lds
jp
les
out
sahf
dec
js
adc
sub
mov
out
rorl
sub
xchg
std
pop
cmp
cmp
cs
scas
xlat
aam
sysenter
inc
push
scas
push
push
xchg
sti
lock
testb
outsb
jp
lock
mov
sbb
sbb
stc
push
jl
cmc
mov
fcomp
out
xchg
mov
add
and
xor
jo
mov
cld
test
xchg
lcall
push
sbb
push
ja
sub
push
xor
mov
sbb
xchg
push
nop
pop
mov
out
movsl
pushl
scas
pop
out
arpl
cs
pop
cmc
mov
or
xor
add
rclb
lcall
mov
sub
jg
shll
adc
into
push
inc
repz
pop
lock
sub
cmpsl
notl
mov
xor
ret
and
ret
mov
cmp
das
lods
mov
imul
mov
sub
lock
test
or
add
js
pusha
xor
inc
cmp
notb
icebp
aam
push
mov
cmp
mov
jp
movsb
push
ljmp
stos
inc
out
cs
jo
mov
jo
repnz
roll
push
popf
xchg
xor
ds
int3
out
dec
std
clc
or
scas
mov
dec
xor
pop
filds
rclb
repnz
sarb
cli
out
rcrb
add
jo
shrl
pfpnacc
xchg
cmp
pop
into
xchg
mov
adc
or
xor
cmp
lret
jbe
or
int
int
aad
imulw
mov
push
or
int
pop
push
sbb
pop
repnz
loopne
sbbl
dec
mov
ja
inc
js
or
cmp
mov
xchg
hlt
aad
imul
rorl
jae
fimull
fst
sbb
pop
xchg
leave
and
jg
jl
cmc
pusha
mov
push
testb
dec
int3
add
ret
cmpsb
mov
jl
jle
push
pop
push
inc
insb
call
mov
jns
ds
test
sub
jle
dec
cmp
div
push
pop
sahf
aaa
cld
mov
xchg
ss
mov
into
inc
inc
adc
or
mov
fildll
rcl
cld
pop
fadds
and
jle,pt
push
clc
inc
test
roll
jl
cs
fnsave
ficompl
jno
sub
add
jge
push
adc
ja
lock
jg
xchg
cld
cmp
popa
fldenv
cmp
jp
pop
cmp
movsb
push
imull
rcr
pop
rolb
jl
clc
jb
jp
sub
jp
cs
ljmp
mov
nop
out
mov
cmp
ficomps
mov
pushf
xchg
lock
mov
pusha
divl
add
out
cmpsl
out
jge
pushf
and
ficompl
add
lret
call
clc
cltd
int3
cmpsl
sbb
imul
xor
cli
push
ret
je
jmp
sub
mov
inc
sbb
fstpt
push
js,pt
mov
and
cmp
jge
shrd
cmpsb
xchg
cs
jl
and
add
jns
jnp
jne
jle
xorl
mov
bound
mov
cmp
shrl
in
movsb
push
pop
lods
inc
shl
into
inc
pop
out
mov
and
mov
daa
fidivs
inc
xchg
clc
and
fisubs
push
mov
rorl
mov
sti
pusha
mov
sbb
dec
xchg
and
push
dec
mov
inc
and
iret
mov
push
fisttps
cmp
mov
sub
fcoms
pop
movsl
hlt
fisubs
test
test
jle
and
loop
cmp
push
push
addl
jb
mov
mov
jno
pop
sub
icebp
loopne
outsb
aas
sbb
mov
insl
es
or
enter
sbb
out
aad
jle
outsb
jge
xchg
cmp
push
sub
jmp
cmp
ficoml
into
sbb
mov
out
inc
call
jp
pop
mov
rorb
push
mov
das
cli
mov
nop
mov
icebp
sbb
pop
inc
push
xor
adc
loope
lahf
jp
fwait
dec
push
mov
aaa
sbb
mov
sub
lock
inc
lcallw
shlb
popw
and
loope
out
data16
sub
or
cli
pop
sbb
sbb
and
bound
cli
jno
loope
mov
pop
popa
xor
push
mov
inc
dec
fstpt
notl
lea
sbb
ljmp
rclb
dec
pusha
je
jle
scas
js
or
jbe
imul
lock
ds
mov
push
fwait
jl
andb
cld
insb
outsb
outsb
or
in
cmp
divb
loopne
fsubrl
mov
outsl
and
fs
test
lret
es
cmp
lods
inc
mov
xor
pop
aas
xchg
mov
add
xchg
mov
fidivrs
mov
jmp
mov
mov
push
jb
hlt
adc
mov
aam
cmc
scas
dec
pop
or
movsb
inc
or
xlat
cmpsl
pop
psrad
mov
xchg
je
xor
xchg
inc
push
dec
mov
xor
adcl
xchg
cs
sub
in
stos
adc
and
das
jl
dec
and
cmp
mov
and
js
decl
inc
inc
xchg
je
cmc
imul
mov
cmpl
pop
into
jbe
outsl
es
test
mov
shlb
call
xchg
xchg
mov
or
xchg
xchg
cmp
icebp
jle
bound
sub
in
fidivs
stc
stc
clc
shl
push
fsts
pop
sub
int
loop
out
xor
cmc
cmc
movsl
sti
test
mov
scas
cs
call
cli
loopne
loopne
xor
cs
lock
cmpsl
pop
pop
or
pop
or
push
cmp
je
add
jo
repnz
clc
fdiv
dec
lods
insb
xchg
push
jo
and
mov
mov
add
push
bound
fdivrl
adc
dec
lods
dec
out
test
in
mov
dec
adc
pop
inc
std
dec
jbe
mov
out
in
inc
dec
lock
aaa
sbb
dec
xchg
rorb
andb
shlb
xchg
inc
out
sti
hlt
cmp
sahf
pop
xor
add
sbb
xor
loope
shll
ret
or
jecxz
sahf
xchg
and
adc
sbb
loope
icebp
fadd
rcll
sti
add
lds
divl
xchg
sbb
mov
cmc
jge
cwtl
call
jl,pt
jl
loop
add
xchg
push
loop
cmp
popa
add
call
leave
push
pushf
push
jge
lcall
lods
cmp
repnz
por
add
xchg
push
shrb
xor
insb
cld
insb
cmp
jl
lock
sarb
push
push
mov
cli
icebp
lds
fidivl
int3
pop
fwait
das
ds
jl
cmp
mov
stos
andb
mov
adcl
mov
push
imul
cmp
xchg
or
ss
repnz
sbbb
xor
mov
mov
pusha
ljmp
call
lcall
loopne
ret
fdivrl
fldl
sbb
sub
js
adc
sahf
and
lret
outsb
std
sub
pop
push
cmp
and
addb
andb
xchg
imul
pusha
iret
testb
cmc
loopne
notl
es
insb
gs
jle
push
inc
test
ds
mov
xchg
push
int3
mul
mov
mov
cli
add
add
inc
xor
jo
leave
out
int3
lret
sbbl
loopne
xchg
mov
mov
aas
cmp
mov
xor
sbb
loop
cmp
imul
push
loopne
dec
adcb
rolb
push
dec
mov
jno
mov
nop
pop
jo
add
fdivrl
dec
mulb
add
test
out
addl
outsb
fwait
jp
or
fists
xchg
je
mov
or
xchg
mov
cmc
sbb
pusha
inc
cmp
jecxz
cli
mov
ds
adc
push
lods
xorb
xlat
mov
or
test
stos
pop
mov
push
inc
inc
into
xchg
mov
sbb
jle
adc
or
pop
out
call
das
addb
test
or
std
jle
jp
std
xchg
or
scas
fidivrl
dec
pop
clc
ds
loopne
inc
mov
repz
ret
int
negl
cmp
test
sub
ret
sti
and
mov
aas
mov
xor
cmp
clc
pop
cs
ret
add
lret
loop
icebp
add
fiadds
add
cmpsl
in
shrl
push
adc
lds
lahf
jle
sti
push
push
mov
dec
mov
cwtl
subb
add
mov
add
cmpsl
out
sbb
divps
pop
push
sahf
add
icebp
fndisi(8087
pop
test
movsb
mov
push
sbb
clc
jle
icebp
sbb
xor
xchg
sahf
xchg
jl
loopne
jl
out
pop
enter
push
ds
into
adc
pop
movsl
lods
sar
lahf
inc
cli
push
lock
adc
xchg
lods
lcall
pop
aas
sub
xchg
fnstsw
xchg
dec
aam
lock
add
or
cmp
lahf
add
insb
bound
cmp
push
cld
ds
loopne
jb
js
xor
aad
sub
lock
mov
mov
jmp
aam
rolb
cld
cmc
pop
fwait
nop
hlt
dec
sbb
adcb
sahf
loop
gs
and
in
ds
mov
jle
mov
fwait
rolb
icebp
jbe
push
loope
leave
pop
add
push
sbb
push
cmp
sub
insb
adc
pop
loope
add
inc
out
and
loopne
adc
and
mov
cld
jge
into
in
rorb
hlt
sub
pop
mov
test
shl
pop
mov
cmp
loopne
ret
pushf
es
cmc
inc
cltd
out
cld
in
add
pop
clc
cmp
xor
lock
rorb
mov
clc
jge
aad
mov
push
jb
or
popf
mov
xor
call
rclb
mov
mov
movsl
lods
jl
leave
movsb
testl
ljmp
push
hlt
push
cli
scas
mov
gs
fwait
pop
add
cmp
jle
icebp
lock
jno
xor
sar
mov
adc
mov
cwtl
sub
jmp
cmp
das
cmp
int3
pop
dec
inc
loopne
pop
add
fidivs
leave
or
sbb
in
mov
movsb
outsb
pop
into
jge
push
cld
cli
mov
mov
cli
mov
testl
jl
fisttps
jbe
inc
mov
mov
add
imul
test
mov
fsubr
outsb
notb
adc
jbe
cwtl
xchg
fs
push
lock
addr16
push
outsb
or
sbb
mov
inc
faddl
or
shl
cmp
adcb
cli
ret
mov
faddp
aad
mov
rorl
sbb
in
jp
mov
pop
mov
lret
xchg
xlat
lds
dec
adc
insb
pop
fdivrs
dec
stc
sub
pop
fmull
lock
iret
inc
inc
cli
push
push
lods
shl
std
into
lret
pushw
fiaddl
mov
mov
cmp
add
jg
pushf
mov
or
rol
popl
mov
inc
std
inc
out
loope
pop
stos
lret
fidivl
loop
mov
mov
jecxz
into
add
cli
jecxz
testl
and
dec
mull
cmp
dec
enter
loopne
fistpll
bound
add
xor
and
dec
popa
push
or
nop
lock
add
dec
add
inc
add
mov
rol
mov
or
pop
scas
fiadds
dec
xchg
inc
sub
lcall
jecxz
jnp
xor
sub
jo
jmp
ss
mov
movsl
icebp
dec
sbb
sbb
xorb
mov
nop
pop
gs
data16
and
clc
pop
bound
ss
cmp
push
add
cmp
cli
scas
pop
mov
xor
jge
je
xchg
xchg
or
jge
sbb
loop
jge
adc
lock
outsb
pushf
in
fisubs
pusha
adc
ret
add
fdivrs
pop
adcl
repnz
and
or
daa
shrb
or
add
clc
jecxz
call
fnstenv
and
mov
psadbw
aam
sbbb
shrb
jnp
push
push
push
sub
jnp
push
xor
js
jmp
cltd
mov
fdivrl
jne
out
or
hlt
jl
test
les
lahf
js
ljmp
push
ret
and
mov
in
mov
xor
sbb
stos
lock
xor
mov
loopne
les
mov
sub
xchg
pusha
and
and
jae
pop
bound
mov
stos
mov
add
shll
out
test
add
xchg
adc
out
push
in
maxps
add
mov
insb
rolb
push
cli
xor
cmp
lahf
rol
pop
scas
pushf
xlat
je
daa
or
dec
mov
mov
outsl
add
ret
pop
jle
pop
pop
cs
cli
rol
ret
jg
lret
pop
pop
pop
ljmp
cwtl
out
popw
ret
inc
les
notb
mov
cwtl
rclb
mov
mov
inc
jle
push
icebp
ds
jo
push
in
jg
push
jae
ret
clc
cli
das
ds
cld
lcall
and
add
xchg
push
mov
hlt
loopne
out
add
dec
inc
jnp
inc
jle
xchg
xchg
and
into
das
jmp
or
xlat
and
test
mov
fdivrl
cmp
fiaddl
push
push
jge
hlt
jmp
insl
fcoml
lret
lock
leave
and
popa
jmp
out
andl
ds
cmp
sub
in
mov
pop
std
lock
xchg
fs
push
push
daa
push
and
jl
push
pusha
pop
sbb
mov
xchg
mov
into
leave
mov
sbb
and
hlt
dec
push
test
mov
cmp
inc
cmpsl
sbb
jns
mov
mov
xchg
outsb
inc
js
cld
icebp
sbb
xor
insl
jb
mov
mov
mov
fdivr
xchg
add
fs
lret
gs
jle
xor
js
ficoms
enter
cwtl
fadds
dec
sbb
jne
iret
add
mov
rorb
cmpb
push
loop
xor
sbb
cld
call
popa
je
mov
imul
inc
daa
add
adc
cld
jne
enter
cwtl
repnz
xor
movsl
push
mov
add
or
into
push
pop
mov
xor
clc
ljmp
test
push
mov
rclb
mov
jae
ret
jmp
clts
and
or
jno
fwait
pop
cmp
mov
adc
lret
and
out
or
sbb
inc
subb
mov
mov
fcomip
into
sbb
aam
push
and
ret
pop
dec
arpl
sub
pop
daa
jmp
out
out
adc
outsb
pop
dec
call
mov
addb
js
xor
or
xor
rclb
fiadds
dec
cld
cli
out
das
push
fiaddl
jne
test
mov
out
pop
xor
clc
add
xor
pop
push
push
cmp
mov
push
clc
sub
ret
adcl
repnz
pop
push
xchg
stos
push
arpl
addr16
bound
mov
and
loopne
mov
jmp
sbb
js
pop
or
push
jo
sbb
jp
pop
xlat
test
sub
js
hlt
rep
mov
mov
xchg
sub
jo
out
out
lret
adc
or
sti
dec
xchg
xchg
out
out
lods
jae
or
and
aaa
sarl
jmp
or
push
mov
dec
mov
mov
jnp
adc
fs
mov
jnp
lock
repz
and
mov
out
mov
xchg
lret
iret
mov
push
push
jle
jno
enter
mulb
jle
daa
lahf
mov
xchg
scas
jmp
sbb
lcall
dec
cmp
insb
dec
or
lcall
sti
jmp
cmpsb
xchg
sub
clc
rolb
xchg
push
xor
mov
loopne
roll
push
cmc
loope
inc
pop
cmp
lds
in
sub
jge
lock
pop
das
fidivs
push
mov
lds
mov
push
test
mov
xor
lea
loop
lahf
jl,pt
es
mov
sub
mov
xchg
push
adc
or
bound
add
push
scas
mov
xor
or
cmp
cmp
inc
jb
pop
jnp
sub
aam
clc
push
mov
jle
js
repnz
push
sub
xchg
lcall
call
ret
fimull
pop
loop
in
jae
cli
in
push
jp
rcrl
mov
imul
loopne
out
lahf
stos
pop
push
leave
cwtl
les
pop
inc
cmc
ljmp
push
lock
mov
pusha
aaa
cwtl
mov
pop
inc
jo
popf
xchg
cmp
arpl
ljmp
add
add
shl
mov
aam
aam
push
cmp
je
xor
fdivl
dec
mov
loop
mov
inc
nopl
inc
sub
in
lock
ficoms
aas
adc
inc
outsl
sahf
xchg
lock
mov
je
inc
ret
scas
rorb
call
adc
lahf
push
in
in
lods
mov
mov
xchg
out
cmp
pandn
lds
stos
pop
cmp
push
dec
mov
daa
daa
je
mov
clc
lock
or
jle
or
dec
jl
pushw
mov
sub
mov
mov
pop
or
sub
shlb
pop
mov
dec
or
pop
int3
mov
test
push
movsb
ss
push
push
or
push
ljmp
iret
subb
std
push
add
xor
push
jle
push
std
cmp
dec
dec
imul
add
inc
test
push
mov
dec
mov
inc
mov
data16
and
xchg
cld
adc
jmp
outsb
add
mov
stos
lock
clc
mov
enter
jnp
loope
pop
push
call
dec
in
test
xchg
mov
mov
insb
xor
pop
pop
inc
push
jp
cmp
sbb
xchg
or
or
fsubrs
mov
test
nop
inc
js
mov
pusha
enter
and
data16
ret
push
icebp
push
movsl
les
je
hlt
sbb
pop
popa
test
ret
inc
mov
push
imul
jecxz
lock
in
int3
add
dec
clc
mov
pop
or
push
xor
push
pop
push
pop
faddl
jge
pop
pop
in
cmpsb
sub
repz
sbb
call
push
pop
inc
nop
pop
mov
pop
mov
adc
sbbl
mov
ds
out
rcrl
arpl
xchg
imul
sti
mov
xchg
and
dec
cmpsl
mov
aaa
mov
or
or
or
clc
dec
jp
mov
rcl
pop
push
jle
mov
test
js
jecxz
jecxz
es
xchg
pop
jae
orl
jbe
push
fwait
cmpsl
jecxz
sbb
mov
popa
daa
cli
aas
or
out
aam
and
sahf
mov
arpl
enter
fs
rclb
lods
sbb
hlt
ds
push
aam
aam
mov
setp
in
pop
push
inc
xor
loope
mov
and
xor
jo
jle,pn
cmp
out
xchg
pop
notl
shlb
and
fisubs
bound
js
mov
ljmp
xor
dec
int3
int
mov
lods
pop
aas
in
test
xchg
lock
dec
loope
sbb
cwtl
sbb
push
jl
cmp
push
das
jb
add
cmp
jmp
clc
into
aam
add
imul
xor
sub
push
mov
dec
sub
lret
and
arpl
loop
mov
mov
mov
xchg
cs
mov
pop
dec
sub
cwtl
and
shr
cmpsl
lsl
jmp
and
cmp
cmc
lret
into
in
aad
int
filds
sbb
movsl
push
popf
or
push
cmp
mov
xchg
cli
or
pop
dec
pcmpeqb
movsb
ficoms
cmp
pinsrw
loope
aam
les
mov
test
lock
shlb
adc
jno
faddl
xchg
mov
sbb
pop
push
push
jb,pn
cs
lcall
pop
jge
mov
jle
and
loopne
hlt
push
pop
jbe
scas
lcall
cmc
loopne
ds
movsb
ljmp
std
cmp
and
jns
dec
test
out
lds
shrb
push
or
shlb
push
loopne
je
adc
mov
sbb
ds
and
inc
push
mov
jle
insb
jb
pop
jl
aas
pop
addb
ret
xchg
mov
pusha
mov
or
mov
rolb
jmp
mov
shrb
mov
addb
push
sbb
pushf
mov
lods
mov
int
insl
rolb
push
out
push
in
lods
cmp
repnz
jp
stos
iret
or
dec
ljmp
xchg
loopne
test
sbb
popa
mov
movl
sub
jmp
cmpl
sbb
sub
mov
mov
or
pop
mov
repnz
pop
in
es
cmc
loope
push
cmp
jae
sbb
jge
pop
rcr
out
pusha
clc
dec
jnp
js
cmp
mull
les
xchg
adc
xchg
push
xor
xchg
insb
loop
jo
cs
hlt
jmp
inc
push
shl
dec
xchg
push
mov
inc
enter
mov
orps
inc
pop
mov
dec
sbbb
loop
pusha
insb
cld
aam
add
or
cwtl
imul
lock
jno
cmpsb
mov
xor
les
cmp
lock
inc
jp
pop
push
cwtl
mov
clc
mov
jle
sarl
cmp
loop
sbb
sbb
push
jle
movsl
xchg
stos
cmp
shl
out
jns
and
sbb
push
inc
aad
xchg
ret
sahf
mov
repnz
je
jo
loopne
ret
pop
out
cli
add
shrb
dec
inc
xor
add
aaa
test
mov
push
nopl
xchg
lahf
pop
ja
dec
mov
movsb
push
mov
pop
inc
popa
or
inc
rolb
adc
or
push
loopne
pop
popf
inc
or
mov
push
and
insl
cmp
scas
das
push
add
aas
mov
cmpsl
jle
scas
push
out
out
jne
cs
cmp
pop
push
stos
push
and
pop
movsl
adc
sahf
mov
fisttps
stos
loop
fsub
push
cmp
add
cld
data16
xorb
test
or
out
and
jmp
setle
xorb
ds
pushf
fs
xchg
cmp
xor
push
loop
add
fildl
jl
test
popa
mov
sahf
cmpsb
mov
neg
stos
push
pop
loopne
jle
cs
push
and
inc
jg
push
xchg
push
enter
loopne
rcl
stc
or
and
shlb
cmp
ds
outsb
inc
es
je
adc
loop
ret
push
negb
ss
lret
xchg
inc
outsb
mov
xchg
mov
pop
idivb
fidivs
push
adcl
roll
push
jle
pop
dec
mov
repz
jle
int3
ds
sbb
iret
jbe
cli
mov
or
iret
repz
push
pop
add
cld
cmp
mov
sub
push
jle
dec
divl
push
mov
cmp
mov
fimuls
mov
shrb
pushf
shlb
leave
out
out
mov
into
xorb
jns
sahf
lahf
mov
mov
mov
stc
jo
clc
inc
test
sahf
stc
jns
sahf
dec
mov
test
dec
push
mov
cmp
inc
call
mov
push
jge
bound
mov
sub
pop
push
out
loope
sbb
jle
mov
jnp
jge
lahf
pusha
mov
push
flds
dec
mov
repz
jle
xchg
mov
cmp
iret
jbe
jecxz
scas
adc
iret
repz
push
cmpsl
pop
aam
insl
add
cmpsb
bound
loopne
loopne
bound
cwtl
cwtl
and
data16
call
mov
das
xchg
scas
js
js
adc
pop
jle
or
nop
sub
lods
hlt
cld
adc
int3
fidivs
pop
mov
cmpl
mov
rcr
loop
sub
dec
mov
jle
shlb
fldcw
inc
jle
pop
int3
add
fsub
out
popa
es
xchg
into
ss
orl
insb
int3
je
jno
lods
dec
cmp
les
data16
sarl
ficoml
arpl
mov
push
mov
xchg
lods
loop
jl
lock
add
sub
stos
sahf
and
adc
ds
aas
add
roll
pop
jae
jle
out
cmc
aad
testl
scas
add
pushf
jl
nop
loope
cli
hlt
mov
sub
jl
pushf
fcmovbe
dec
aaa
sbb
cld
popf
ljmp
dec
leave
xor
shlb
gs
inc
daa
ds
push
loop
mov
sahf
pusha
pop
ds
xor
adc
popa
pop
push
add
jle
lock
xchg
pop
into
rcl
fimuls
mov
sbb
popl
sub
mov
jp
or
xlat
inc
sbb
lock
jnp
cmpsb
stc
fcoml
stc
sbbb
push
or
sbb
mov
pop
mov
in
outsb
aam
or
cmp
or
cmp
scas
or
xchg
loop
cmp
or
push
loopne
cmp
std
push
dec
push
cmp
xor
dec
fimull
add
inc
or
mov
add
push
roll
popa
insb
sub
out
jp
movsb
aas
push
and
jbe
rcll
rcrb
cmp
pop
fs
adc
push
shrb
mov
sbb
push
cmp
cmp
lock
mov
pop
cmpsb
icebp
xor
lock
mov
lods
pop
jl,pt
adc
lods
mov
movsb
jle
into
repz
sahf
cmc
stos
add
and
iret
repz
int3
push
pop
loopne
push
imul
inc
add
sbb
imul
bound
rorb
sbb
push
cld
inc
dec
jb
sub
pop
test
bound
pop
bound
out
inc
cmpsb
into
fcoms
js
jbe
sbb
sbb
xor
cld
mov
hlt
dec
mov
pop
aam
cmpsb
xlat
stos
out
ret
call
arpl
les
mov
mov
push
pop
repnz
in
push
inc
pop
not
pop
ror
and
lock
push
dec
stos
fldt
mov
push
fs
push
cs
push
push
jecxz
jge
jl
loopne
mov
movsb
xor
popa
lcall
mov
das
in
mov
inc
mov
test
ficoml
push
sahf
test
pop
pusha
das
cs
shlb
xor
loopne
dec
jp
cmp
xchg
dec
inc
sub
push
clc
jbe
shrb
rcrl
loop
or
enter
add
pop
push
lret
pop
stos
jg
or
jbe
fistl
cltd
xchg
out
xor
lods
mov
sar
lock
lods
cmpsl
cmc
ret
loopne
fisubrl
mov
sbb
or
sub
add
std
das
loope
paddsb
pop
xchg
out
pop
add
loopne
incl
dec
test
push
maxps
test
in
mov
mov
mov
aas
dec
fidivrs
jne
and
or
out
ljmp
les
fimull
adcl
lock
fimull
cli
rol
or
jnp
iret
out
jmp
sbb
into
loop
jns
loopne
es
or
clc
or
outsl
mov
push
jmp
clc
out
xor
cld
xchg
cli
push
cli
and
test
sahf
lock
mov
stos
inc
push
mov
jg
push
sbb
push
sbb
cmp
pop
mov
aas
cmp
fcom
jle
clc
loop
adc
sahf
mov
jae
out
lds
out
mov
fcoml
ret
out
and
in
jnp
test
sub
scas
aas
orb
jo
repz
pop
jl
into
mov
or
jnp
jg
inc
push
ret
lods
jmp
cli
lret
std
dec
mov
aam
hlt
mov
sub
ficompl
mov
insb
push
adcb
mov
pop
pop
and
mov
fiadds
cld
mov
sub
and
stos
sub
sbb
scas
ficoms
sbb
xor
sbb
cmp
xchg
xor
ret
fisubl
jmp
fwait
mov
jnp
lcall
popf
lods
sub
icebp
cmp
jne
shl
mov
adc
ds
or
mov
adc
cmp
mov
sub
mov
jl
sbb
push
fdivrs
fcompl
mov
nop
push
in
mov
pop
aas
pop
cld
lock
lods
shlb
std
inc
jp
sbb
sbb
dec
fisubrl
add
cld
shlb
inc
aam
je
mov
fs
js
out
repz
jp
hlt
icebp
ret
lcall
jecxz
add
lock
adc
scas
loop
test
je
push
or
cmp
push
mov
pop
std
mov
test
or
rclb
outsb
mov
pusha
sub
test
xor
cs
rolb
pop
fisttps
mov
stos
insb
mov
addb
adc
cmpsb
lock
sbb
mov
popf
pop
jbe
cmpsb
push
gs
inc
or
xlat
pop
outsb
adc
insl
cmp
sub
push
mov
or
adc
psubb
out
bound
adc
jp
ds
xchg
loop
test
jle
enter
icebp
push
in
addr16
cmp
dec
out
push
shrl
js
in
addl
pusha
pop
scas
ret
sub
ss
mov
testb
mov
jbe
dec
enter
inc
ljmp
test
mov
aam
pop
nop
push
mulb
iret
cs
and
clc
lock
std
jmp
mov
ja
std
pop
repnz
call
dec
sbb
data16
push
out
push
mov
sub
sbb
jo
xor
xor
xchg
lock
push
rol
adc
jno
xor
lcall
in
pop
push
push
cmp
cmp
call
cld
pop
dec
mov
lock
cmp
adc
push
std
push
cli
mov
repnz
paddusb
in
inc
fsubs
jmp
lock
lock
ret
ficoml
rolb
mov
dec
dec
imul
ds
lcall
clc
or
test
out
mov
mov
adc
rcrb
mov
rolb
in
mov
mov
xor
xor
notl
pop
clc
lock
jge
xor
fisubrl
loop
push
les
test
lock
subb
js
jbe
xor
in
hlt
adc
loop
xor
jg
jmp
adc
cld
mov
in
cli
sbb
sub
pop
adc
outsl
xor
mov
test
std
cli
jp
mov
stos
xchg
adc
dec
fdivrl
jne
ds
and
pop
jge
inc
ljmp
ss
xchg
lock
adc
outsl
xchg
lea
notl
cmp
cmp
dec
add
xchg
jg
js
repnz
push
ljmp
xchg
dec
sub
out
xor
fcompl
adc
mov
xchg
ds
lods
add
sbb
into
cmpsb
outsl
hlt
ficoms
xchg
rorb
mov
inc
aam
test
add
mov
push
jecxz
mul
xor
int3
add
or
sbb
sbb
cltd
jo
pcmpeqd
add
jp
test
mov
lock
das
mov
dec
mov
sub
mov
movl
and
cmp
mov
into
xorb
lds
in
hlt
xchg
cmp
cmp
ds
mull
out
shrb
sbbb
mov
dec
cmp
push
xchg
adc
ljmp
cmp
push
mov
dec
pop
add
adc
lock
xchg
fs
mov
or
pusha
xlat
outsb
push
cmp
sti
fadds
xor
div
and
jno
in
jo
arpl
ljmp
cmp
lods
je
push
xor
repnz
pop
push
cmp
push
popa
sbb
mov
or
fwait
rol
push
sub
cmp
wbinvd
fsub
movsb
enter
pop
cmp
rcl
pop
jmp
adc
mov
js
mov
fdivs
jo
ret
push
lds
adc
or
das
orl
nop
sbb
mov
sub
push
lock
push
sub
cmp
test
sbb
int3
enter
in
inc
pop
in
ret
test
hlt
jge
rorb
mov
mov
cmpsb
add
mov
mov
out
ja
xchg
push
xchg
cmp
xor
rolb
insb
cld
fstpl
or
and
mov
mov
or
in
sub
inc
call
int3
pop
inc
les
repz
sbb
jnp
cwtl
sbb
lock
icebp
jmp
push
xchg
pushaw
cmp
jl
cmp
movd
and
lds
lods
add
fsts
jno
push
xchg
xchg
pop
pop
lahf
pop
pop
jl
scas
sbb
clc
mov
dec
mov
lods
xchg
xchg
jg
scas
jle
jbe
pusha
push
xor
cs
iret
sbb
inc
dec
jle
hlt
arpl
hlt
sub
or
cli
adc
orps
xor
addr16
loope
stos
mov
pusha
mov
cmp
pop
jl
ret
addr16
in
in
movsb
pop
imul
mov
inc
clc
and
inc
loopne
dec
pop
mov
sarl
jmp
push
fimull
loope
ds
dec
addr16
inc
cmp
or
loopne
jo
xor
push
jg
sahf
shrb
xor
jge
roll
jge
loop
daa
fs
fs
aaa
insb
cmp
ret
sub
lret
cmp
cmpsb
rclb
lock
lods
popa
call
inc
jl
mov
test
cmp
js
loope
jg
cli
in
and
sbb
ds
dec
fs
push
jns
jl
stos
dec
push
xchg
cmp
dec
out
add
add
outsl
pop
outsb
pushf
mov
adc
mov
sub
movsw
cmp
add
add
cld
andl
cmp
push
cmp
cmc
rcll
fucomi
clc
cs
pop
int3
das
data16
xor
ds
daa
fs
loop
aam
movswl
xor
mov
inc
jle
pop
mov
ret
scas
add
pusha
movsb
popl
or
jge
insb
mov
xor
enter
xchg
les
mov
xor
xor
mov
insb
mov
mov
and
je
fbld
push
fdivr
mov
pop
fdivrl
pushf
test
and
hlt
les
into
add
pop
clc
lock
jno
fwait
loopne
pop
shlb
cs
mov
insb
les
out
or
dec
mov
inc
subl
lock
in
cmp
dec
push
sbb
loopne,pn
je
pusha
mov
adc
aam
es
je
or
stos
inc
jmp
mov
or
js
ret
in
clc
add
lods
mov
or
push
mov
outsb
mov
adc
adc
cmpsb
lds
out
shll
loope
mov
and
cs
es
cmp
cmpsl
pushf
nop
jge
cmc
xor
pop
mov
adc
pop
into
jo
sub
out
mov
sub
popa
call
je
pop
orl
movsb
or
scas
mov
scas
push
sbb
movsl
pop
xor
fbld
cmp
pop
scas
test
dec
and
movsb
push
pop
and
mov
pop
andb
push
lahf
push
cmp
push
adc
enter
lret
fimull
dec
idiv
push
inc
cmp
test
or
mov
mov
ret
outsb
in
sahf
mov
cwtl
lock
add
xchg
ds
mov
rorb
outsl
add
adc
pop
ret
push
mov
lds
insb
les
and
shl
cwtl
fsts
loopne
fwait
cs
push
or
cli
xchg
outsl
std
mov
aas
les
mov
xchg
hlt
es
jo
adc
shlb
xchg
adc
push
jbe
fistpll
adc
mov
adc
adc
adcl
sub
dec
or
pop
into
lds
push
inc
xchg
jns
xchg
cli
sbb
mov
cld
push
push
xchg
push
dec
inc
mov
xor
adc
push
enter
outsb
lock
mov
push
adc
enter
mov
inc
xor
pop
jne
pop
fcomp
xchg
adc
push
sub
dec
mov
cmp
xchg
dec
sahf
mov
bound
ret
std
js
imul
hlt
mov
cwtl
xor
push
dec
clc
jle
scas
repnz
icebp
lea
dec
repz
pop
mov
xchg
clc
ret
cwtl
int
es
push
fabs
dec
sub
add
fst
dec
pop
push
insb
xor
cmpsb
or
scas
sbb
mov
aad
call
jle
js
xor
cmp
mov
pop
dec
xor
cmc
sbb
pop
add
test
roll
scas
xchg
shrb
or
testl
mov
jmp
dec
add
mov
loop
xchg
scas
inc
lock
test
jbe
adc
dec
loopne
xchg
mov
dec
pop
pcmpeqd
cmpb
jl
xor
out
stc
aaa
into
daa
add
loopne
push
lods
dec
movsb
push
loop
fnsave
mov
add
jb
xor
pop
xor
scas
push
stos
aas
mov
inc
insb
loope
fldt
pusha
in
orl
imul
dec
mov
jl
sahf
lcall
sub
cli
movsb
bt
insb
mov
fmuls
ljmp
in
nop
and
sbb
lock
fdivl
loop
out
sti
dec
mov
jbe
in
dec
out
negl
sahf
das
scas
mov
cmp
jnp
xor
fidivrl
cld
adc
lahf
or
mov
push
lret
and
int
int
cmp
les
sub
arpl
out
test
pop
jge
dec
int3
sub
daa
adc
mov
stos
es
add
out
ljmp
push
std
adc
push
sahf
sbb
roll
rclb
mov
mov
push
mov
aam
lahf
dec
push
add
mov
push
jo
shll
jne
insb
test
cwtl
std
cmp
jmp
push
addb
jbe
ret
jle
js
fdivrs
rcrl
scas
adc
ljmp
pop
cmc
mov
jmp
lret
icebp
jmp
push
cmpsb
fildll
data16
xchg
jl
nop
sahf
sahf
call
ret
je
aas
pusha
iret
test
js
paddsb
ret
or
pop
pop
sbb
push
jnp
xor
int
out
cmpsl
pop
and
push
data16
mov
adc
jmp
pop
inc
es
dec
sub
cltd
in
js
jl
loopne
lret
mul
popa
push
xor
mov
andb
bound
ljmp
ja
push
push
jecxz
cmp
xchg
mov
push
clc
cli
adc
dec
add
mov
add
daa
sub
ret
mov
enter
movsl
out
movsb
repz
mov
addr16
and
js
pop
mov
hlt
push
in
jb
or
jbe
jl
mov
mov
jle
lcall
fs
jnp
push
addr16
test
ror
inc
mov
xor
jle
das
mov
cs
mov
pop
pop
jl
xor
mov
sub
ret
rorl
scas
cmp
xchg
clc
jno
cltd
ss
lock
cmpsl
adc
inc
fisttpll
ds
sar
pop
dec
mov
sahf
aas
xchg
mov
dec
les
push
push
fmuls
insb
and
sub
add
push
xor
cs
add
hlt
pop
loop
mov
cmpsb
out
lahf
loope
test
paddsb
bound
lods
movsl
jl
and
out
aas
push
jge
in
dec
insb
movsb
and
xor
mov
sub
cmp
jl
js
push
fs
stos
aas
jl
or
cmp
push
jecxz
cmc
mov
mov
call
sahf
push
xchg
adc
push
sbb
sbb
clc
mov
cmp
mov
mov
call
adcl
pop
sub
mov
cwtl
out
jge
pop
int3
pop
pushf
cmp
sti
and
push
iret
out
adc
das
icebp
loopne
or
shrl
pop
push
jp
loopne
cmp
stos
inc
mov
data16
mov
xchg
cmp
cmc
push
and
xlat
cli
icebp
js
call
or
pop
ds
aaa
jg
aam
pop
mov
lahf
add
xchg
push
pop
das
sbb
sub
rorb
pop
mov
jge
mov
xor
sbb
dec
jle
mov
mov
cli
icebp
add
pop
mov
pop
mov
adc
lea
mov
push
outsl
fwait
jp
pop
pop
out
pop
mov
jbe
popf
repnz
or
xchg
mov
sub
pop
mov
sbb
hlt
loopne
pop
and
jp
lcall
sahf
pop
inc
pop
lret
or
jmp
js
and
xchg
xor
mov
jmp
hlt
loop
fcoms
inc
enter
filds
sub
inc
jle
add
lods
dec
xor
pop
add
clc
mov
mov
loope
cld
cs
aam
and
add
jns
pop
pop
aam
jp
loopne
inc
jo
in
shrb
icebp
icebp
mov
cmp
inc
shrb
lea
cltd
cmp
inc
xorb
cmp
call
out
mov
dec
mov
lods
stos
aam
xchg
or
es
xchg
std
xorb
mov
lea
pop
push
mov
sub
shrl
in
lods
pushf
cmpsl
xchg
daa
sub
jns
call
sbb
pop
jl
push
fsubrl
orb
add
loop
fldl
jmp
mov
cmp
mov
mov
pop
jl
out
and
xchg
movsl
femms
mov
xlat
jecxz,pt
repnz
mul
sbb
xor
jle
out
push
es
lret
and
cmc
dec
add
or
das
cmp
dec
jl
sub
pusha
jl
pop
clc
mov
xor
imul
sub
stos
cmp
mov
dec
pop
pop
imulb
sbb
lods
stos
add
jl
add
rol
enter
loopne
lahf
sarb
dec
xor
jle
rorb
mov
loope
cmp
ds
sub
incl
mov
lcall
shll
push
scas
lods
negb
inc
ds
rclb
dec
fbstp
sub
pop
lret
sub
pop
xchg
xor
int
push
sub
pop
jl
insb
sbb
out
mov
cmpl
add
out
dec
rorb
fadds
scas
xlat
push
cld
inc
cmpsb
stos
rcrb
fisubs
cwtl
or
fwait
sbbb
mov
add
mov
jb
sub
orps
mov
movsb
jg
fnstcw
jo
ja
sahf
push
jle
dec
insl
mov
fadd
pop
daa
loop
mov
std
jnp
inc
xchg
je
cmp
push
rcrl
cmp
cli
push
addl
fadds
jp
pop
jl
hlt
andl
out
inc
icebp
add
test
outsl
loope
shll
out
mov
push
fdivr
mov
sahf
inc
lds
adc
pop
cld
loopne
inc
test
add
test
sub
mov
sbb
jmp
xchg
adc
mov
ret
dec
add
pop
sbb
out
stos
or
jno
loope
je
ds
js
loopne
sahf
jge
cmp
xor
cmp
pop
mov
loope
cli
pop
repnz
andl
movsl
fildll
sbb
and
mov
pop
pop
scas
add
and
mov
add
ljmp
push
addr16
rolb
sahf
pop
je
sbb
sub
xchg
sub
ret
loope
jo
ja
ds
test
clc
stos
lock
nop
xchg
in
fadds
in
add
iret
cmpsl
adc
stc
push
push
pop
push
lock
dec
mov
or
inc
lock
imul
adc
jp
pop
std
shlb
ret
hlt
imul
js
cmp
hlt
loop
or
xchg
js
int
hlt
push
dec
aas
test
add
mov
out
std
mov
mov
xlat
pop
mov
hlt
jge
add
fwait
sub
mov
jb
sbb
lods
pop
sbb
fxch
cs
inc
pop
scas
into
fadds
adc
fcompl
lods
aaa
cmpb
lock
fldcw
enter
cwtl
cmc
ds
push
fisubl
pushf
lahf
mov
test
mov
lock
inc
xchg
add
cmpsb
clc
adc
imul
push
aam
out
dec
or
insl
js
je
xor
lods
test
lods
dec
sub
jnp
mov
cmp
int
mov
add
ret
sti
jecxz
push
jb
call
jp
test
fdivp
lds
lock
xchg
jecxz
add
push
pop
or
adc
sbb
mov
hlt
loop
add
scas
sub
repz
dec
js
jmp
xchg
pop
insb
jge
orb
movsb
pop
or
sbb
and
cmc
sbb
dec
in
insb
in
fs
pop
dec
clc
lock
mov
les
cld
lock
cmp
in
jl
jo
aaa
call
dec
frstor
inc
cmp
je
inc
mov
lock
mov
scas
fisubl
mov
imul
cmp
popa
mov
mov
pushf
and
cs
fcmovbe
pop
test
nop
lock
je
push
adc
mov
out
push
and
mov
cmpsb
stos
xchg
mov
inc
insb
std
aad
sbb
dec
out
push
xor
cs
inc
mov
lock
iret
inc
add
add
in
packsswb
into
mov
mov
outsb
mov
mov
lods
cmpsb
fdiv
jge
add
popl
push
inc
fdivrl
sbb
jl
lods
mov
fbld
pop
pop
ss
jno
mov
rcrl
mov
mov
and
pop
and
sbb
movb
adc
xor
and
xor
and
jge,pt
and
mov
lds
add
andb
inc
clc
sub
rolb
lock
mov
mov
adc
pop
jge
cmp
gs
push
movsl
mov
insl
ret
mov
sub
pop
flds
rolb
push
in
sbb
pop
cli
jmp
push
data16
and
dec
jl
pop
sbb
or
ds
dec
xor
adc
loopne
test
aaa
test
xchg
hlt
js
ds
xchg
xor
dec
xor
in
sub
das
jne
bound
dec
sub
xchg
push
bound
scas
xlat
shlb
mov
or
andb
rorl
cmp
add
dec
repz
pop
push
loopne
jnp
fisttpll
sub
and
jnp
xor
and
insl
call
mov
shrb
mov
inc
pop
push
lea
loopne
jge
repnz
adc
jecxz
icebp
ds
mov
push
jbe
mov
lds
push
mov
dec
in
sti
lock
test
xor
jmp
int
int
adc
lea
pusha
sbb
int
int
xchg
sub
mov
jl
push
mov
dec
int3
push
dec
cld
clc
add
lahf
or
sti
je
loop
lods
shlb
in
hlt
and
lds
pop
xchg
jne
inc
jp
xor
ret
mov
cwtl
movsb
cmpsb
insb
push
dec
leave
jg
ret
xorb
pop
scas
imul
push
iret
inc
mov
pop
mov
pushf
mov
rorb
cmpb
sar
xlat
mov
jb
in
mov
in
push
sbb
rclb
sbbb
push
push
rolb
in
shr
jnp
xchg
mov
sub
loopne
or
cwtl
pop
mov
shlb
mov
inc
icebp
fimull
sahf
insb
rolb
cmpl
in
aad
test
insl
rcl
pop
adc
mov
les
push
fs
jnp
and
outsl
mov
xchg
sbb
jae
aas
or
aaa
cld
mov
loope
pop
dec
mov
jl
fs
in
cmp
sub
leave
fdivr
daa
inc
push
leave
roll
inc
cli
inc
sub
xchg
xchg
sbb
lock
loopne
rcr
mov
lods
mov
scas
and
orl
movsb
loop
mov
push
subl
ja
mov
in
cmp
adc
aas
lcall
inc
xchg
in
loop
movsl
sarl
out
std
mov
shll
inc
push
push
xchg
or
jecxz
fsubp
cmp
pop
add
rcrl
fldl
push
filds
adcb
mov
xor
loope
add
and
push
call
xchg
das
out
sbb
std
mov
sahf
inc
in
aaa
sbb
call
jns
lcall
js
insb
cld
and
xchg
or
adc
dec
dec
lds
nop
pop
add
fnstcw
xor
mov
xchg
pop
add
jge
push
loopne
push
push
popw
pop
mov
and
out
fidivs
sbb
sti
mov
inc
and
es
fidivrl
cwtl
in
sti
jmp
lcall
rcll
rcr
not
aad
jo
repnz
inc
inc
lret
xchg
pop
jle
jp
inc
xchg
cs
jp
shlb
daa
movsl
hlt
mov
orl
cltd
inc
insb
sbb
mov
xorb
and
pop
gs
add
pop
ss
xchg
dec
fidivl
mov
aam
mov
clc
jb
xor
push
cmp
lock
addr16
cmpsb
dec
loopne
call
sub
xchg
sub
loopne
and
mov
cmp
push
pusha
xchg
pushl
cmp
and
mov
adc
ficoml
mov
mov
ss
outsl
push
arpl
push
pop
pop
out
pusha
pusha
or
pop
dec
xchg
enter
inc
cmp
movb
pop
add
pop
loop
sub
jl
imul
iret
call
sbb
or
mov
mov
sub
aad
ret
pop
stos
je
mov
dec
inc
jle
hlt
out
ljmp
xor
movd
mov
or
and
cmp
fidivrs
mov
sti
jnp
jle
cmc
clc
lea
or
inc
lret
jno
cmp
cmp
clc
clc
gs
jmp
std
xor
outsl
xchg
pop
and
jle
pinsrw
test
rcl
sbbl
cltd
mov
cmp
filds
xchg
in
outsb
xchg
cmpsb
push
xchg
sbb
lea
jp
push
mov
lret
bound
or
movb
sbb
cwtl
push
clc
jmp
cmova
test
sahf
jmp
mov
shl
bound
lds
mov
mov
xchg
push
out
pop
cmp
xor
mov
mov
cmp
dec
push
test
pop
mov
pop
stc
cli
jecxz
cmpb
hlt
fiadds
iret
add
push
xor
fstpt
es
xchg
and
or
rorl
jp
sbb
mov
jge
and
mov
xlat
aad
cmp
inc
jae
test
lock
mov
cmc
addl
push
sbb
fsubrs
push
int3
adc
cli
imul
jbe
aas
test
inc
jb
mov
rolb
loop
shlb
outsl
adc
cmp
xor
lahf
call
mov
sbb
push
cmp
pop
lahf
subl
std
test
mov
push
insb
outsb
das
inc
push
mov
insb
jo
and
cmpsb
jecxz
test
ljmp
enter
sub
dec
inc
loop
sbb
push
sub
loopne
js
add
cmc
jmp
push
movsb
scas
scas
inc
lods
push
cmc
adc
push
clc
mov
jl
scas
emms
call
dec
outsb
xchg
xchg
ror
and
jb
inc
inc
out
loopne
sti
loopne
fsubr
jmp
in
pusha
jecxz
aad
call
sarl
or
lock
in
xor
push
add
fcmove
xchg
mov
imul
lds
mov
dec
fcoml
push
inc
xchg
imul
cs
jecxz
xor
sbbb
sub
popa
ret
fbstp
sbb
mov
repnz
jmp
shrb
lret
and
push
mov
rcl
aam
cmpsl
fstpl
jle
add
imul
jmp
out
mov
hlt
ret
pop
cmc
jl
movb
bound
cmp
add
jne
stos
adcb
pop
add
js
sub
adc
es
push
push
add
cmpsl
outsb
call
sbb
jle
cmpsb
enter
loop
xchg
std
lods
sbbb
cld
andl
add
fstps
cld
cwtl
test
out
xlat
stc
jl
pop
aas
xor
jo
sub
fstpl
fisttps
xor
jg
mov
xchg
lods
xor
bound
daa
jl
aam
sub
jle
ret
scas
push
add
cmpsb
fisubs
pusha
jno
ds
arpl
icebp
dec
cmp
clc
int3
dec
mov
or
sub
mov
mov
adc
pop
cli
jle,pn
add
bound
out
xchg
push
out
mov
cmp
jp
jl
fs
pop
test
sbb
imul
sub
cwtl
ljmp
cs
cmp
std
add
rolb
pop
add
xchg
outsl
pop
mov
adc
stos
notb
pop
adc
enter
mov
xor
mov
sahf
jb
cmc
insb
loopne
popa
push
jl
insb
pop
inc
mov
imul
test
push
jmp
fwait
sbb
mov
stos
aas
mov
ljmp
pop
push
jle
daa
loopne
mov
pop
sbb
rclb
xor
fdivrs
lcall
ja
pop
push
fwait
and
cmp
aam
addl
xor
mov
sub
jle
cli
bound
pop
mov
and
adc
and
adc
push
mov
mov
sbb
dec
cmpsl
push
popa
daa
xchg
mov
add
sub
pop
sbb
pop
pop
jl
cld
adc
iret
cmp
in
inc
sbbb
jmp
scas
push
aas
or
lock
adc
mov
lock
or
inc
repnz
lods
sarl
mov
clc
inc
or
aam
test
les
enter
jo
pusha
push
cmp
aas
shr
jp
or
push
ds
enter
and
push
adc
sub
test
mov
ljmp
push
test
cli
dec
pop
dec
das
ss
imul
add
aas
add
js
les
or
std
fisubl
loop
fisubl
sub
inc
jno
call
add
mov
ret
push
dec
ds
jbe
das
test
and
add
dec
jge
inc
cmp
fidivrl
inc
rol
cmp
imul
jae
jl,pt
adc
daa
mov
mov
mov
jo
rol
gs
sub
jge
je
mov
xchg
rclb
lret
mov
into
enter
mov
out
jge
sub
popf
arpl
js
lods
enter
addr16
arpl
and
pop
bound
jle
pop
adc
or
cmp
add
in
jl
shrl
mov
mov
js
adc
push
cmc
xlat
mov
insb
and
mov
mull
inc
and
cli
std
mov
mov
shll
cmp
lods
mov
stc
sarb
inc
pop
lea
jbe
push
ljmp
add
pop
push
mov
adc
hlt
cmc
sub
push
jle
push
dec
loopne
mulb
mov
add
pop
cld
icebp
jecxz
mov
inc
shlb
mulb
js
scas
jle
ds
in
cmp
test
das
loopne
cmp
xor
pop
rolb
or
mov
adc
in
jbe
imul
jp
icebp
daa
rorl
jo
sub
rorb
stos
mov
sub
loope
divb
loop
xchg
popf
pop
negl
ret
out
roll
or
inc
in
xchg
push
ds
ret
cmp
add
js
call
mov
loopne
nop
fisttps
aas
and
bound
rcl
inc
cmpsb
movl
cmpsb
hlt
pop
jl
push
inc
xchg
dec
orl
push
pop
push
mov
push
lahf
in
mov
dec
fdivs
fstl
ds
les
xor
mov
sub
xchg
lret
lret
mov
dec
adc
popa
aam
pop
testl
inc
jg
shl
insl
pop
mov
shlb
pop
push
sub
sbb
mov
push
aaa
loopne
mov
in
js
push
mov
ds
out
jae
outsb
mov
roll
loope
mov
jb,pt
aam
xor
mov
xor
cwtl
xchg
ds
cmp
mov
mov
mov
imul
jp
dec
in
jmp
scas
bound
push
mov
loope
xchg
ret
sar
ret
ret
lock
and
adc
cs
mov
call
lock
cmpsl
xchg
sti
sbb
adc
pop
push
jno
cmc
push
sub
sub
mov
scas
lcall
mov
clc
jge
imul
scas
mov
lahf
push
in
pop
insl
mov
or
cltd
sbb
xor
pop
fisubs
nop
mov
xor
test
ffreep
rorb
shll
sub
bound
dec
sarb
aas
cmp
cli
ljmp
mov
daa
loope
orps
js
shr
lret
sub
ror
addl
xchg
ljmp
ja
rol
push
cmc
fdivrl
movsl
dec
pop
cmp
jb
mov
rclb
js
lock
aam
sti
cmc
pusha
push
jl
out
sub
adc
js
movsb
ret
inc
bound
mov
add
mov
jnp
dec
in
mov
adc
jge
dec
daa
jbe
int3
dec
adc
sbb
jno
decb
dec
jecxz
dec
xchg
leave
dec
loopne
pop
lret
add
movsl
push
pop
mov
add
loopne
subl
add
pop
pop
mov
rorb
cli
jmp
cwtl
inc
imul
cwtl
cmpsb
pop
test
call
adc
add
hlt
and
lret
inc
pusha
adc
ljmp
sub
push
push
mov
out
xor
orl
add
loope
push
push
push
fidivrl
jmp
cmpl
sbbb
and
sbb
cwtl
enter
push
cli
lock
inc
sub
adc
jnp
in
ljmp
and
loop
jp
push
sbb
dec
inc
xor
jge
mov
cmpsl
and
lds
popa
mov
pusha
clc
xor
pxor
outsl
dec
cmpsb
sbb
pusha
cli
sbb
out
lcall
xchg
jl
out
lds
jle
fistl
mov
addr16
in
add
fmuls
rcrb
je
in
in
inc
pop
les
out
lods
inc
xchg
pminub
roll
sbb
pop
pop
mov
sub
mov
or
push
pop
ret
out
out
or
add
sbb
insl
ret
pop
stc
inc
xor
lock
or
mov
cld
in
dec
mull
scas
mov
out
mov
push
fsubrs
arpl
mov
sarb
jecxz
sub
push
mov
rolb
and
sub
mov
iret
ljmp
add
sub
mov
xor
jecxz
cli
pusha
clc
mov
icebp
xchg
sar
xchg
cmp
icebp
les
mov
jbe
mov
mov
pop
mov
rcr
mov
fsubs
add
out
sub
cmp
mov
out
pop
call
psubsb
or
movsb
sti
bound
cmp
dec
ret
orl
add
lds
icebp
xchg
sbb
arpl
clc
jo
jl
jnp
out
or
dec
cmp
mov
scas
xorb
les
loope
xchg
rclb
loopne
negl
or
mov
xchg
mov
cld
icebp
rol
or
sub
mov
je
mov
scas
div
jl
mov
cmp
jg
xor
push
pop
dec
mov
cld
add
dec
pop
add
fdivr
add
or
adc
sub
sahf
fisubrs
addb
xchg
sub
std
bound
ss
xchg
mov
popa
add
in
rorb
subb
hlt
call
cltd
mov
call
test
push
add
cld
test
cmp
dec
pusha
scas
xchg
movsb
addr16
cmpsb
mov
lds
out
lds
push
mov
or
xor
dec
mov
cmp
jae
inc
jl
pop
out
push
mov
adc
mov
call
ficoml
inc
std
nop
mov
into
pop
out
js
pusha
faddl
lret
xchg
cmp
jle
hlt
loope
inc
hlt
popf
addr16
test
sub
fwait
cwtl
je
cs
push
pusha
inc
pop
std
js
mov
and
jb
insl
pop
ljmp
cwtl
call
xchg
inc
sarl
sbb
shrl
fs
push
stos
std
cli
and
inc
adc
mov
sub
icebp
pushf
or
cld
lock
pop
je
sbb
lea
jl
inc
out
es
addl
sarb
ret
mov
scas
icebp
jecxz
push
jb
inc
adc
cs
test
push
sbbb
lea
test
sbb
rolb
sub
iret
sar
ficoms
xchg
xchg
adc
loopne
add
sbb
mov
or
imul
push
imulb
mov
bound
fcoms
push
dec
inc
xchg
repnz
inc
sbb
dec
pop
inc
pop
shr
mov
adc
js
icebp
scas
stos
adc
mov
mov
jcxz
call
sarl
cmp
inc
es
pop
jle
fnstsw
test
dec
push
xor
cmpsl
test
jnp
mov
movsl
test
pop
les
sahf
enter
and
adc
pop
inc
icebp
call
clc
push
jbe
mov
pop
in
int3
dec
dec
push
push
push
fdivrl
xchg
inc
mov
lcall
test
rorl
pop
aaa
or
xchg
pop
jle
insb
jb
and
in
sbb
dec
push
es
cli
rol
jmp
ljmp
call
pop
inc
jle
push
mov
inc
into
mov
adc
adcb
pop
and
call
sub
lods
mov
jge
cs
xor
loop
ljmp
inc
jle
pop
test
adc
jle
add
cmpsb
xchg
loopne
or
add
jp
pusha
pop
pop
pop
mov
jno
out
pop
xchg
add
int
int
shlb
or
xor
pop
pusha
enter
movsb
das
xor
sahf
clc
jo
leave
pop
icebp
push
dec
pop
les
testl
push
or
pop
jg
rorb
xchg
sysret
aas
mov
data16
mov
mov
daa
mov
cwtl
pop
test
sbb
call
cwtl
xlat
mov
or
xchg
sub
adc
xchg
push
scas
rolb
sub
test
xlat
push
pop
xchg
cmp
ret
ret
sbbl
cld
push
cld
leave
cld
imul
jp
mov
shlb
dec
aas
push
loop
mov
inc
mov
roll
ljmp
data16
fwait
ret
cmp
push
loope
pop
push
jle
add
and
jne
push
add
push
mov
xchg
cmpb
mov
jle
xchg
loop
mov
out
sbb
dec
aam
pop
cmp
shrl
mov
mov
push
daa
or
jge
jl
push
inc
push
push
inc
je
cmovb
movsb
jp
scas
push
sbb
lods
pushf
in
lea
mov
mov
ret
jnp
hlt
sti
lcall
call
out
aad
inc
add
push
mov
pushf
push
lock
mov
es
add
mov
pop
cmp
daa
mov
push
pop
push
cmp
into
xlat
mov
push
loopne
repnz
sbb
bound
jp
clc
mov
cmp
cmp
push
fsubl
or
or
push
std
mov
mov
mov
fidivl
jo
xchg
xchg
dec
push
inc
push
ficoms
hlt
sti
mov
fbld
call
mov
lock
ja
mov
ficompl
orl
movb
lcall
inc
and
fidivl
jp
repz
pop
push
popf
cmp
xor
sahf
call
add
add
mov
aam
or
jl
xor
xor
mov
bound
sbb
add
pop
jae
orl
inc
xchg
scas
cmpb
mov
jle
hlt
ret
call
insb
insb
mov
clc
push
sub
stos
data16
inc
push
outsb
mov
or
jno
ret
loopne
mov
mov
add
mov
sub
lcall
mov
icebp
loopne
inc
divb
mov
imul
sbb
cmp
insb
jecxz
jb
mov
loop
cld
cltd
and
cmpb
push
clc
add
inc
pop
jl
push
pop
push
mov
clc
inc
mov
adc
xor
rorl
in
cld
xchg
jbe
pushf
push
js
pop
sbb
push
mov
xchg
in
adc
call
loope
arpl
enter
dec
out
es
sub
mov
insb
mov
dec
push
insb
incl
icebp
add
movsb
int
xchg
pop
xor
popa
jne
mov
mov
outsb
popa
fs
xlat
das
mov
lret
lret
mov
fxch
or
cmp
push
jbe
lock
orb
xor
xchg
lock
jle
ret
xchg
lods
jbe
call
push
sbb
int3
scas
addr16
std
mov
and
mov
das
pop
jl
push
pop
sarb
dec
inc
mov
xchg
mov
inc
cld
clc
scas
or
mov
push
dec
filds
data16
xor
mov
or
repnz
in
jge
dec
jmp
jbe
adc
mov
cs
popl
les
mov
mov
inc
insl
fmul
pop
fidivrl
cmc
mov
push
std
aad
clc
add
fs
xlat
test
movsl
xchg
mov
mov
mov
cli
fcomp
pop
xor
loope
mov
cmp
cmp
pop
imul
aas
into
mov
push
rorl
fdiv
mov
inc
cmovle
out
cmpsl
js
xchg
pop
jp
adc
inc
pop
sbb
cmp
sub
jns
mov
sbb
mov
add
mov
jecxz
aaa
jmp
jbe
sbb
testl
out
jp
sub
pop
hlt
xor
sbb
lock
test
mov
cmp
pop
pop
cmp
mov
jecxz
shll
lods
mov
xchg
out
fsub
in
nop
inc
push
ret
push
cmp
or
jge
pop
imul
add
inc
repnz
cltd
push
push
cmp
mov
mov
xchg
pop
loope
mov
out
clc
push
xor
mov
mov
xchg
mov
clc
cmp
sbb
nop
js
pop
hlt
sub
push
ret
out
fistps
adc
cmp
sub
sti
loop
pop
repz
push
cmp
inc
pop
scas
dec
push
dec
outsl
stos
das
movsl
outsl
pop
fidivrs
mov
sbb
dec
sahf
and
pop
inc
rol
cvtpi2ps
mov
mov
icebp
aad
xchg
push
dec
out
imul
aam
jmp
aaa
loope
repnz
xchg
push
pop
xor
loop
jbe
sahf
and
lahf
pop
sbb
out
xchg
in
clc
icebp
add
andb
ret
jl
inc
sbbl
pop
cmpsb
mov
dec
xchg
mov
jl
inc
and
pop
cmp
je
clc
lock
push
stos
test
sti
rcl
pop
cmpsb
sbb
outsb
ret
filds
xor
clc
shrb
lock
lcall
out
add
in
push
jl
cwtl
rcl
mov
xchg
lcall
lcall
cmpsl
jo
pop
out
xor
icebp
adc
mov
lock
xor
std
hlt
loope
mov
mulb
cmpsl
inc
lods
mov
dec
ret
fdivrl
inc
pop
shlb
mov
pop
inc
adc
lahf
shl
loope
dec
dec
pusha
push
pop
mov
lock
pop
enter
out
dec
cld
xchg
leave
xor
pop
mov
pusha
hlt
jnp
dec
dec
in
les
adcb
jmp
insl
push
xor
aas
jge
icebp
push
inc
or
cmp
cs
ds
addl
mov
jge
ds
stos
add
int3
test
pop
sbb
pop
or
clc
rcrl
push
xchg
inc
andb
dec
mov
movl
pushf
xchg
jne
std
aad
inc
push
mov
mov
scas
ret
in
sbb
out
push
cmp
test
dec
in
out
les
aas
stos
imul
add
mov
mov
adc
mov
in
adc
sbb
and
ficompl
push
pushf
xchg
add
add
add
push
push
ret
fists
notb
mov
shl
ret
outsb
push
add
or
jb
orl
xchg
es
repz
mov
cmpsb
xchg
cmc
mov
aaa
dec
enter
mul
sti
jb
xchg
adc
mov
rcl
insl
mov
xchg
cmp
dec
mov
bound
push
inc
or
out
iret
mov
bound
div
les
filds
scas
push
outsb
lods
mul
xchg
xor
sbb
test
lahf
adc
xor
or
nop
icebp
mov
cmp
jnp
mov
inc
jl
mov
jbe
xor
fcmovnb
mov
mov
decl
lock
shl
sahf
pop
je
adc
dec
setnp
data16
push
inc
imul
push
loopne
xchg
imul
xchg
shlb
jp
xor
imul
dec
in
shlb
in
pop
sti
call
sahf
out
mov
das
mov
jb
jnp
mov
mov
xchg
js
sub
cltd
mov
int
add
mov
inc
bound
add
out
mov
insb
jns
xchg
cmp
lcall
or
repnz
sub
ja
pop
fsubrp
sub
addr16
mov
xchg
in
rclb
mov
repz
push
fiadds
mov
rcrl
xor
xchg
jp
into
popf
dec
hlt
lock
jnp
test
insb
scas
add
es
jp
icebp
pop
das
mov
jp
push
js
pusha
add
add
bound
repnz
shlb
in
loopne
mov
pop
ss
fistl
dec
leave
mov
mov
shl
arpl
jle
pop
lock
xor
loopne
or
aam
mov
lcall
aas
add
cld
mov
ds
aad
jmp
les
mov
inc
xchg
enter
sbb
sub
mov
into
mov
mov
cmp
or
pop
pop
movb
sbb
lcall
fisubrs
pop
outsb
push
xlat
jp
xchg
push
data16
out
cmp
and
ljmp
jl
push
mov
js
or
xchg
mov
test
pop
dec
loop
faddp
out
add
cmp
pop
sbb
ret
xchg
push
das
pushf
xor
cmpb
jl
sub
pop
in
inc
dec
pop
insb
ret
and
jb
cwtl
call
setle
test
ss
lcall
push
inc
mov
movsb
in
jmp
enter
jmp
int3
and
cmp
mov
test
aam
sarb
cmp
add
test
xchg
add
ss
cmpl
cmp
test
out
push
push
jle
mov
fsubp
stos
mov
mov
lock
pusha
test
fs
push
add
and
jo
out
cmpsl
xchg
outsb
dec
push
sar
arpl
js
pop
aam
dec
xor
fsubrl
mov
push
xchg
push
adc
ja
mov
cli
lss
in
cmp
in
cmp
mov
jmp
cmpsb
adc
addr16
aad
mov
push
jl
movsl
aad
jecxz
fdiv
out
xlat
rcll
add
adc
enter
movsb
xchg
call
pop
sbb
lret
notl
cmp
mov
sub
push
fidivrs
dec
andb
add
loop
out
std
clc
mov
mov
or
jp
loope
enter
rorb
add
imul
daa
imul
ret
sbb
lcall
mov
insb
push
aas
sub
subps
cmp
xchg
rcrl
testb
daa
popf
outsb
mov
jle
int
in
sub
sahf
rorb
push
sub
lahf
pop
in
push
aas
out
mov
dec
jp
clc
adc
out
scas
inc
movsb
lock
pop
scas
push
push
leave
dec
mov
movsb
lock
les
push
movsb
push
ljmp
xor
jg
xchg
dec
fidivl
bound
cmp
sub
add
out
mov
std
icebp
add
cmpsb
es
adc
jl
lock
sbb
pop
push
hlt
and
mov
push
ja
loopne
push
push
dec
sub
stos
jl
adc
mov
movsb
and
jbe
mov
and
cmpl
lds
fcompl
mov
mov
jb
and
cs
mov
mov
lds
sub
fcoml
jle
add
rcrb
or
rcll
in
lock
or
rcl
jnp
jle
movq
mov
jo
stos
xlat
cwtl
pop
fildl
sub
or
jns,pt
cmpsl
pop
cmpsb
mov
jp
iret
pop
xchg
repnz
movsl
clc
lock
fs
xor
loopne
js
scas
call
and
cli
inc
xchg
or
mov
dec
sbb
mov
adcl
jmp
xchg
lods
mov
mov
mov
sub
jl
ljmp
cmpsl
outsl
sub
xchg
inc
stos
and
push
jmp
js
lcall
lods
ds
push
dec
ds
sahf
iret
es
pop
andl
cmp
pop
jge
inc
add
dec
rorl
pop
es
hlt
push
xchg
gs
in
cld
cli
sbb
fimuls
call
scas
inc
mov
xor
arpl
data16
pop
js
lea
mov
pop
es
cld
scas
out
or
orb
cmp
scas
sub
movsl
push
fisubl
add
pop
add
jp
mov
xorl
push
and
inc
mov
xchg
add
and
push
push
jl
fcompl
sti
ret
divb
xchg
in
inc
ss
out
and
js
fidivrl
xor
enter
ds
pop
sub
pusha
mov
out
and
clc
icebp
adc
and
sbb
fsts
mov
jge
and
loop
popf
lea
jge
or
sar
in
lret
mov
pop
xchg
pushf
pop
lret
push
cmpl
push
cltd
outsb
popa
push
std
push
pop
cld
pop
inc
les
push
mov
push
lahf
insl
jecxz
es
lahf
lock
out
mov
inc
test
sub
sub
cli
insb
mov
xchg
and
jmp
xor
dec
fisubrs
or
inc
sbb
sbb
jp
es
ljmp
push
clc
push
mov
out
idivl
dec
mov
xor
lods
push
mov
pop
mov
jle
loopne
fisubs
lret
inc
cmp
mov
mov
and
fdivrl
adc
or
gs
mov
cli
flds
fists
nop
or
outsb
mov
cmp
loopne
loop
xchg
mov
lea
bound
fimull
jp
xor
pop
sbb
jmp
lea
push
sbb
and
push
pushf
or
sahf
arpl
pop
pop
fsubs
cmp
div
mov
insl
sub
lock
dec
jbe
rcr
add
push
pop
mov
push
sbb
hlt
rol
cmpsl
adc
pop
scas
jle
inc
js
mov
inc
pop
js
mov
lock
adc
add
jp
mov
xor
dec
test
hlt
cmp
and
sub
adc
sahf
mov
maskmovq
sti
cmpsb
lods
int
push
xchg
insb
sub
sub
insb
ljmp
cs
es
mov
push
aam
les
clc
fmulp
or
mov
popf
out
or
mov
cmpsb
pop
mov
dec
xor
cmp
test
scas
ds
adc
add
sbb
clts
mov
in
push
cld
ds
loope
xor
gs
pop
cli
jecxz
add
pushl
jp
lcall
cmp
ficompl
dec
arpl
jg
or
in
sbb
add
negl
cmp
dec
jo
xchg
mov
jbe
mov
cld
dec
popa
push
mov
add
mov
sub
lock
testl
push
cld
adc
pusha
insl
mov
cmp
jp
jb
xor
cmpsl
dec
sbb
push
mov
add
dec
sbb
std
cli
pusha
mov
add
adc
and
stos
clc
mov
mov
imul
push
cmp
lods
xchg
roll
mov
pop
subb
clts
pop
stc
shlb
lret
sti
inc
cltd
pop
por
mov
nop
insb
sub
jmp
das
je
cmp
lock
popa
mov
or
ret
push
mov
loopne
int3
imul
dec
mov
in
rcr
js
add
mov
imul
pop
insb
and
jo
stos
mov
out
push
ds
fsubrl
fisubs
push
cmp
imul
dec
mov
xchg
push
mov
testl
push
mov
xor
cmp
cmp
add
sbb
sahf
sub
loopne
arpl
mov
mov
sahf
xor
push
loop
lods
push
mov
push
lods
push
add
xchg
enter
test
mov
add
and
sbb
jecxz
inc
gs
xchg
ss
aam
clc
loope
lods
mov
mov
mov
push
cmpsb
or
mov
xchg
jle
dec
sahf
shl
ljmp
adc
jl
jnp
ljmp
repnz
pop
loopne
pop
jg
sbb
out
shl
stos
aam
pop
test
xchg
mov
lds
orb
push
std
or
pushw
xor
push
pop
aad
mov
js
or
ret
test
pop
lahf
bnd
dec
das
aad
push
pop
shrb
pushf
sbbb
jecxz
mov
adc
mov
movaps
push
fdivrs
loop
out
scas
in
cltd
repnz
aam
pop
fisttps
mov
insb
pop
not
pop
xchg
fwait
pop
and
jl
sub
stos
xor
pop
addb
fiadds
xor
mov
loope
into
xor
xor
fstpt
fcomip
aad
in
mov
mov
jno
add
cwtl
cmp
jp
loopne
fs
into
fcomps
test
mov
sub
sub
ljmp
nop
cmp
out
mov
repz
js
jg
je
movsb
stos
lahf
mov
jmp
lock
xlat
mov
jle
fs
int3
cmp
mov
mov
and
sub
shlb
xor
jae
test
repnz
inc
xor
clc
loopne
ror
cmp
ljmp
rol
popf
movsl
add
lret
mov
mov
cld
add
cli
movsb
enter
mov
pop
and
add
mov
push
cmp
lret
pop
dec
jg
mov
mov
fmulp
clc
add
jle
sub
or
dec
sbb
sarb
jge
jno
jmp
insl
sub
aas
outsl
clc
mov
push
adc
in
bound
shll
dec
mov
movl
mov
sarb
cs
shrl
pusha
mov
add
add
maxps
sahf
sub
pushf
sbb
cmp
jecxz
lock
les
jmp
inc
and
leave
xchg
hlt
xor
and
jle
jbe
js
test
int3
xchg
inc
inc
xchg
jl
call
adc
pop
fildll
mov
out
or
icebp
nop
xchg
push
mov
sahf
and
xchg
cmp
xchg
enter
xchg
bnd
mov
push
inc
test
xchg
xor
in
dec
inc
inc
das
mov
stc
sahf
mov
pop
fildll
in
aam
dec
in
and
cmp
sbb
or
xchg
cmp
stos
jo,pt
ds
clc
jo
sbb
and
insl
imul
xor
fwait
push
pop
pop
test
bound
cmpsb
mov
scas
cs
mov
add
ret
lds
jp
mov
push
std
and
outsw
roll
xchg
adc
ss
xor
push
adc
mul
dec
and
cmp
loopne
loopne
pop
lea
int
arpl
mov
bound
pop
xor
inc
in
and
andb
jmp
aam
cmp
pop
mov
orb
imul
mov
and
push
mov
add
lods
pushf
nopl
sub
sbb
lock
add
push
mov
pop
push
js
and
pop
aad
in
mov
mov
insb
andb
mov
mov
subl
sbb
adc
scas
mov
adc
inc
mov
jo
add
popa
mov
lock
sbb
js
push
mov
or
cmp
push
js
jecxz
pop
jp
push
andb
aam
clc
jne
or
pusha
fdivs
sbb
mov
cli
into
inc
test
jle
xor
cld
les
cwtl
loope
es
cmpb
or
fsub
lret
adc
adc
mov
hlt
cmpl
hlt
mov
repnz
cmc
inc
xchg
mov
pusha
cltd
mov
inc
int
mov
cmovg
clc
sub
and
jecxz
pop
testb
inc
or
mov
mov
popl
cmp
inc
xor
repnz
or
pop
add
js,pt
sbb
ds
ret
scas
inc
and
and
xlat
or
fcompl
push
cmp
hlt
popa
lcall
fldl
push
inc
and
mov
out
jge
das
adc
insl
in
in
mov
rcrl
cmp
push
cmp
dec
jle
hlt
data16
mov
nop
cli
pop
jl
fdivs
xchg
xchg
xchg
inc
mov
pop
jle
xchg
enter
aam
jecxz
nop
lods
out
rol
push
sahf
aam
push
push
out
decb
js
mov
in
pushf
mov
xor
clc
clc
jne
idiv
jbe
rol
mov
ss
sbb
out
push
xlat
js
mov
idivb
pop
shr
add
mov
cmp
or
jecxz
lock
cld
xor
cmpsb
push
mov
or
cmpl
adc
add
data16
mov
insb
mov
sti
lret
sbb
or
lds
cmp
loopne
mov
ds
jle
ds
out
fimull
icebp
add
inc
data16
testl
loope
mov
movsb
subb
sub
add
cmc
dec
sub
stos
pop
sbbl
xor
jp
sti
sub
insb
add
mov
xchg
pop
ljmp
inc
xor
jp
push
ljmp
adc
inc
mov
push
pop
and
jbe
inc
loopne
push
and
jle
pop
xlat
sahf
push
add
cli
jmp
cmp
mov
mov
or
lret
repnz
adc
or
les
les
pop
scas
test
test
push
pop
ffreep
bndldx
stos
xchg
fs
cmp
lods
mov
or
cltd
cmp
mov
and
mov
pop
pop
out
jnp
xlat
ljmp
mov
mov
pop
arpl
xor
mov
or
push
stos
imul
fidivrl
lock
cmp
rep
pop
add
pop
ss
push
daa
cmp
js
jmp
scas
dec
pop
pop
ljmp
sbb
out
ss
repz
pusha
add
cmp
xchg
in
xor
jne
rorb
adc
mov
jecxz
jle
jge
mov
xchg
adc
lea
fsub
push
push
inc
rcrb
lret
pop
les
add
cmp
rorl
js
nop
scas
mov
cs
stos
out
adc
jl
xchg
add
lea
adc
pop
lahf
sub
xor
push
lock
ljmp
lds
mov
cmpsl
sub
inc
or
inc
mov
adc
sbb
insb
dec
xchg
mov
pushf
jle
cli
dec
les
imul
in
outsl
pop
movl
mov
mul
cmp
outsl
xor
or
push
sbbl
dec
ja
ds
cmp
jno
jge
mov
push
add
mov
mov
loop
or
mov
sbbl
loopne
adc
scas
std
ljmp
push
cs
scas
and
roll
cmc
mov
popa
lods
cld
lock
sbb
pop
push
icebp
sbb
mov
ljmp
jp
xchg
lock
and
xchg
loope
add
js
lcall
sahf
add
icebp
push
mov
mov
icebp
clc
popa
add
in
dec
jle
in
inc
cmp
inc
mov
and
xor
movsl
lods
test
cmp
sbb
rolb
cmpsb
cwtl
ret
dec
outsb
or
adc
fbld
lods
cs
xor
fstp
mull
mov
clc
loop
push
mov
jg
mov
mov
loopne
push
push
sahf
jns
or
scas
pushl
scas
add
shl
sub
aad
clc
jle
inc
lret
jge
and
push
cli
sarb
add
orps
ficoml
push
out
rorl
push
pop
jp
popf
stos
rorl
mov
cmpsw
inc
pop
jmp
add
push
pop
mov
das
pop
shlb
out
pop
rcl
fdivs
pushf
xchg
rclb
je
lea
sbb
mov
fwait
insb
out
push
enter
inc
sbb
gs
sub
push
into
pop
lahf
dec
cmp
jns
push
imul
cmpb
mov
js
fcomi
mov
and
push
add
cwtl
pop
je
lock
xor
mov
rcrl
mov
sti
inc
out
jecxz
jns
and
sub
jp
loope
push
sahf
jno
push
mov
add
pop
xchg
insb
shrb
les
mov
mov
jne
popl
cmp
in
sbb
adc
adc
ret
pop
sbb
mov
mov
or
clflush
clc
inc
int3
push
mov
call
cmpsl
pop
or
shlb
loopne
es
sub
inc
mov
xchg
mov
mov
adc
dec
cmpsb
jecxz
mov
mov
push
inc
sbb
fsubrl
cwtl
jp
std
fistps
pop
lret
mov
scas
mov
divl
shl
inc
jmp
or
ss
mov
mov
sbb
mov
int
ret
in
cmpsl
lock
cwtl
push
addr16
test
xchg
adc
jle
cmp
lock
mov
mov
div
inc
xor
scas
insb
pusha
call
popf
xor
sbb
xchg
sub
mov
cmp
xor
sbb
xchg
call
pop
xchg
dec
or
inc
push
loope
cwtl
adc
sub
jno
imul
test
jg
mov
sub
push
ficoms
dec
add
sti
push
pop
aad
loopne
or
cmp
lock
sbb
inc
mov
aas
cld
test
mov
push
xor
iret
push
cmp
or
cmp
sub
loope
sub
pop
mov
dec
mov
dec
mov
scas
stos
jge
hlt
xor
in
subb
sarl
sbb
jo
push
loop
add
push
and
sti
jecxz
and
xchg
pushf
ret
nop
mov
scas
ret
xchg
and
nop
pop
sub
push
lret
cli
mov
xor
lods
jp
call
clc
or
xchg
out
pushf
cmc
fs
cmpsl
lock
jl
test
es
mov
rolb
or
sbbl
dec
cld
jp
in
icebp
jo
push
testl
gs
aam
or
cwtl
loope
pop
iret
mov
xchg
pushf
pop
cmpsb
mov
jle
ja
jl
sbb
xchg
sarb
add
dec
sbb
ret
inc
subb
push
fldcw
iret
std
add
mov
mov
loop
std
mov
pop
dec
pop
add
xbegin
pop
fcmovu
loope
or
or
mov
aas
test
dec
loopne
inc
lock
sbb
or
loopne
imul
or
into
push
lret
inc
sti
push
sub
rorb
cld
icebp
inc
scas
out
pop
loopne
test
sti
icebp
popa
ret
into
jb
dec
xor
std
loopne
sub
xchg
stc
sbb
pusha
xchg
push
pop
xor
push
aam
xchg
test
adc
xchg
pop
mov
sub
ret
outsb
inc
mov
cld
js
jno
rcll
dec
xchg
sbb
mov
rorl
add
and
and
jl
add
sar
ljmp
adc
call
sbb
inc
dec
dec
inc
lret
cmp
push
jno
std
jbe
data16
fs
into
int3
loopne
xchg
xor
test
fsqrt
imul
and
xchg
sahf
les
mov
cmp
cli
push
and
bnd
jp
jmp
cmp
out
lock
lds
sbb
rolb
jp
push
mov
insb
insb
add
int3
push
shl
scas
filds
lret
dec
test
adc
xor
mov
cmp
js
inc
xor
sub
xabort
inc
loope
int
dec
xor
sbb
out
mov
jp
clc
std
and
adc
aam
push
cmp
loopne
sbb
mov
jmp
cmp
loopne
loope
and
aad
icebp
push
sbb
pusha
cmp
ss
repnz
cmp
fs
cmp
mov
push
call
dec
outsb
into
js
into
into
mul
sti
out
fcmovb
xchg
clc
cmp
sbb
rol
push
cmp
das
test
call
fiadds
mov
lahf
roll
jne
xor
mov
mov
insb
or
pop
iret
aam
mov
adc
xchg
push
inc
xor
pop
rorb
je
inc
repz
dec
call
jle
stos
xor
sub
mov
mov
out
ret
cwtl
mov
or
out
pop
xor
mov
lret
addl
pusha
and
movb
shrb
sub
dec
jp,pt
orb
xchg
mov
icebp
mov
inc
stos
add
add
push
inc
sbb
lcall
sub
mov
lock
push
fmull
mov
out
inc
loope
enter
into
mov
push
in
clc
aas
mov
lcall
call
jb
in
hlt
lock
mov
das
or
decb
xlat
rolb
fildll
xor
sbb
cli
and
scas
pop
sarb
cmp
out
xchg
mov
xchg
bound
sbb
jno
inc
bound
jne
mov
out
adc
jl
and
mov
arpl
jmp
comiss
push
jge
pop
sub
mov
clc
ret
mov
test
xchg
outsb
clc
stc
jo
adc
leave
xor
mov
bound
and
pop
movsbl
mov
jbe
mov
test
mov
or
in
jl
mov
cmp
mov
and
mov
andl
ret
sub
mov
sbb
cmc
xor
je
cmp
add
in
mov
xor
jp
cmpb
insb
ret
lahf
pop
mov
jb
shlb
inc
pop
cmp
push
call
test
sbb
and
test
testb
cli
dec
ret
pop
and
pop
fs
insl
xchg
jl
clc
icebp
push
push
inc
je
in
cmp
add
aas
adc
call
nopl
pop
divb
aam
jmp
cmp
nop
testb
mov
xchg
movsb
lcall
rcrb
lods
jl
out
jge
mov
pop
adc
bound
cmp
stc
test
or
adc
mov
mov
repz
xchg
int3
sbb
ret
fidivrs
xchg
mov
mov
or
mov
ret
mov
and
or
jle
push
inc
insb
rorl
test
cmp
pop
idiv
icebp
jmp
jle
movsl
ret
subb
jecxz
std
adc
cmp
ret
push
icebp
sarb
push
push
shrb
cmpl
jp
mov
adc
clc
cli
add
pop
ljmp
and
jl
lock
idivb
pop
call
sahf
lea
inc
or
jns
shrl
mov
cmp
dec
pop
pop
push
fsubs
ljmp
out
pop
mov
xchg
ja
pop
mov
subb
dec
pop
sbb
inc
cmp
arpl
push
rolb
cld
cltd
fadds
test
stos
cld
cli
bound
out
inc
adc
ret
pop
rolb
dec
mov
clc
push
jle
pushf
fsubrl
dec
divps
xchg
cli
adc
int3
xor
out
mov
jb
jle
mov
sub
xchg
filds
out
outsb
lock
fstpl
xor
add
jo
mov
push
rcrb
sub
ljmp
mov
xchg
cwtl
pop
cli
mov
or
in
xabort
add
sbb
dec
mov
adc
mov
aad
mov
fimuls
sbb
pop
mov
mov
movsl
push
mov
jo
imul
fimull
jl
dec
test
cmp
outsl
filds
scas
pop
lock
cmp
and
je
mov
xchg
loope
sti
add
jae
sub
xchg
adc
add
fwait
jo
push
push
push
aas
sub
or
js
sbbl
je
fisubrl
or
aas
dec
hlt
pop
jle
mov
out
loopne
and
mov
mov
dec
lcall
cld
mov
push
add
dec
dec
mov
inc
push
lods
addr16
pop
and
in
mov
lds
push
add
and
icebp
cmc
adc
pop
lea
lahf
scas
sub
or
mov
sub
xchg
scas
or
das
scas
cmp
mov
in
xor
mov
mov
insb
push
addr16
adc
sub
push
pop
push
sahf
dec
xchg
cwtl
lods
mul
add
jae
adc
sub
mov
mov
in
into
sbb
mov
cs
cld
icebp
jp
lret
xchg
sub
les
add
test
cli
movsl
pusha
cld
xor
testb
icebp
mov
add
std
xchg
sub
rorb
pusha
jecxz
lds
aas
fmuls
push
iret
call
push
faddl
add
mov
stos
add
jmp
sti
ds
xchg
fisubrl
adc
cwtl
arpl
xchg
jo
out
cmpsb
or
outsb
mov
sub
lods
fwait
shlb
sub
jle
mov
dec
inc
loope
xchg
les
lock
repz
icebp
loop
shll
std
enter
pusha
or
or
repnz
fsubrp
sbb
rcll
push
out
and
sub
les
push
and
xor
lcall
rol
data16
add
mov
loope
mov
daa
jle
push
test
bound
jecxz
pop
cmp
add
or
mov
cmp
jle
adc
xchg
sbb
lock
adc
inc
xor
icebp
mov
pop
cli
or
inc
fiadds
addr16
scas
inc
add
pushf
sbbb
out
aam
jns
jle
jl
lock
out
push
jle
pop
sbb
pushf
sbb
ficomps
aad
and
fcoms
sbb
bound
push
adc
cmpsl
test
cmc
sarb
repnz
add
aaa
mov
xor
test
or
popa
add
aaa
aaa
aaa
mov
loop
iret
mov
ds
adcb
fwait
cli
hlt
xchg
push
push
test
icebp
loop
out
mov
dec
adc
jl,pt
js
and
imul
rol
xchg
mov
inc
jbe
and
fisubl
or
or
pushf
jno
insb
fpatan
in
aam
xchg
jp
test
daa
movsb
cmpsb
repz
inc
mov
cmp
leave
icebp
popl
lods
dec
ss
mov
jge
pop
pavgb
mov
test
inc
enter
jns
sub
or
lock
div
roll
mov
inc
jp
push
cli
fmul
lea
mov
je
cltd
push
arpl
ja
jo
and
dec
les
shl
lds
sbb
jecxz
sbb
filds
loopne
xor
inc
scas
ret
push
jecxz
add
es
shrb
pop
dec
or
cld
push
mov
add
jno
or
sbb
call
pop
dec
xchg
mov
mov
sbb
jp
cmp
push
ret
scas
xchg
dec
adc
mov
and
loop
sub
cmp
fdivrs
jo
mov
fisttps
enter
es
js
insl
cmc
fsubp
xorl
ret
lods
push
mov
cli
loopne
add
pop
mov
jo
sti
insl
pop
pop
pop
inc
cmp
clc
xchg
ljmp
mov
inc
push
addr16
or
aad
notb
call
mov
aad
in
insb
jecxz
clc
cmc
xchg
mov
enter
shll
mov
hlt
sahf
mov
lock
es
shlb
push
xchg
dec
loop
les
sar
adcb
call
dec
adc
pop
push
cmc
loop
mulb
jo
sbb
add
cld
imul
sub
fildl
out
test
dec
or
cli
ljmp
lret
fsubl
cmp
mov
or
mov
lock
fisubs
std
push
jge
repnz
dec
add
mov
jne
stos
icebp
lds
loop
sbb
cmp
push
cld
and
mov
ds
jle
jbe
adc
sbb
imul
adc
pop
adc
and
sub
sbbl
int3
xor
and
loopne
rolb
xchg
mov
sbb
push
cltd
mov
xor
mov
pop
and
movsb
jle
rolb
adc
cmc
loope
es
sub
xchg
ret
dec
movsb
sbb
es
add
sub
shll
test
jbe
jnp
outsl
mov
pop
inc
sbb
jle
out
cmp
sarb
fisttpl
test
insb
or
loop
test
pop
or
push
cmpsb
sbb
adc
add
adc
jae
and
jle
lock
and
test
lea
and
mov
and
xchg
loope
fstl
ljmp
out
adc
push
loopne
out
repnz
jecxz
jbe
ja
dec
adc
mov
in
hlt
ljmp
or
inc
and
lock
lock
sub
sub
iret
in
sub
rcl
or
fisubrs
and
popa
insb
mov
pop
call
daa
adc
mov
std
js
adc
jl
inc
lds
inc
jle
jns
mov
jo
adc
sarb
fidivl
movsl
cmpsl
push
sbb
lock
js
adc
or
dec
stos
jecxz
or
dec
sbb
loop
sti
rcrb
fisubl
ljmp
jl
rolb
add
pop
in
ret
movsb
inc
and
inc
push
addr16
add
cmp
repnz
fs
sbb
jb
cmovno
add
gs
dec
adc
pop
push
jecxz
push
jecxz
lock
mov
mov
mov
sbb
xor
iret
rorl
xchg
es
jge
loopne
xlat
jp
repnz
mov
inc
int
push
sbb
sarb
xchg
ret
fld
js
sub
push
out
sub
ja
enter
push
jmp
pushf
test
jl
cli
xor
add
mov
xor
inc
out
pop
aas
inc
jb
adc
out
sbb
or
and
jb
sbb
xor
rolb
dec
fidivl
movsl
shlb
sub
push
jmp
add
loope
cmp
push
shll
adc
jo
ret
shll
inc
mov
inc
xorb
dec
lret
sahf
cmp
inc
adc
outsl
sbb
or
cwtl
xchg
inc
scas
jl
clc
jmp
arpl
ss
push
and
sub
adc
xadd
je
cmp
bound
cld
fistpl
adcb
and
leave
jp
xorl
ficomps
orb
mov
les
mov
xchg
mov
jo
test
mov
dec
adc
and
sahf
mov
pop
ds
mov
cltd
adc
sbb
sub
jnp
mov
out
notb
ret
scas
fbld
xor
pop
push
cmp
push
pop
mov
mov
add
sub
xor
and
cld
jp
mov
jge
jne
add
sbb
dec
xchg
scas
xchg
loope
xor
push
dec
cmp
mov
dec
xchg
mov
mov
mov
mov
rorl
add
out
sti
call
jbe
or
mov
mov
movsbl
add
lret
mov
inc
xlat
addl
jbe
test
xor
mov
fcom
mov
lock
adc
imul
push
push
js
cmpsl
mov
inc
lret
fldl
cld
and
je
pop
icebp
push
mov
cmc
loopne
cmpsb
ficoms
inc
or
mov
sti
sbb
mov
mov
lock
inc
bnd
lcall
mov
jl
mov
mov
xor
js
dec
ljmp
pop
lds
sti
mov
test
jg
outsl
push
xor
loopne
rol
push
add
push
sti
or
pop
stos
pop
clc
cmp
outsb
shl
cmp
mov
sahf
and
call
dec
hlt
add
add
mov
push
lods
pusha
popa
jl
aam
stos
into
cld
jge
xor
mov
xlat
loop
insl
loopne
repz
inc
jecxz
popa
js
jns
xchg
shl
ret
sti
add
pop
addb
loope
jne
cmpsb
jl
and
jge
lock
lret
jo
xor
ja
popa
adc
pop
pusha
je
dec
jmp
pop
cltd
call
orb
adc
bndldx
push
mov
test
test
dec
les
mov
jg
outsl
pop
xor
sbb
jbe
mov
dec
mov
jo
aad
out
loopne
xchg
fiadds
add
daa
mov
icebp
inc
fcomps
lcall
icebp
shlb
leave
ficoms
xchg
jmp
adc
cli
bound
pop
cli
xor
nop
cmp
sahf
aad
lock
pusha
cmpsb
xchg
and
xchg
mov
pop
pop
mov
cmp
inc
nop
mov
clc
cli
repz
cld
icebp
hlt
and
mov
jno
sbb
push
dec
add
or
sub
cwtl
fnstcw
jbe
xlat
orb
lds
inc
fbld
jge
out
mov
ds
into
xor
test
mov
mov
adc
or
clc
es
daa
lods
hlt
insb
imul
or
test
sbb
std
add
fidivrs
mov
dec
add
gs
add
adc
pop
faddl
into
mov
sti
loop
jg
mov
push
xchg
sbbb
vpsllq
ret
and
push
js
pushf
and
jl
out
mov
sub
pop
aam
mov
roll
lock
xchg
imul
gs
ja
push
pop
shlb
lock
push
push
jg
inc
mov
xor
subb
ret
inc
in
adc
fmul
pop
lods
sub
nop
outsb
ss
and
insl
std
push
push
loopne
mov
cwtl
jno
jb
loopne
sbb
jp
ds
call
dec
scas
stos
ds
dec
dec
bound
add
roll
insb
cltd
bound
mov
cmpb
leave
sbb
jp
out
add
mov
jo
outsb
xchg
xor
sub
insb
and
push
pop
push
pop
lods
mov
dec
sti
push
mov
imul
push
dec
mov
imul
xor
xchg
adc
adc
popa
jo
pop
das
mov
idiv
pop
mov
lea
push
movsl
lds
mov
out
add
push
xor
dec
clc
mov
das
adc
scas
push
sub
shlb
cmp
push
pop
loopne
fiaddl
ljmp
cmp
sbb
jecxz
mov
jne
push
jle
out
les
faddp
sti
or
pop
fnstsw
fidivl
ljmp
in
enter
push
outsb
sbb
mov
js
stos
inc
or
xchg
sahf
ljmp
les
ficoms
push
xchg
ds
sbb
pop
fs
stos
call
push
lret
mov
cld
inc
daa
es
sti
inc
lock
dec
mov
or
arpl
add
jo
dec
lea
xchg
mov
mov
adc
lods
dec
ja
jle
cwtl
pandn
pop
sub
jle
jmp
mov
xlat
adc
jl
mov
jo
test
shll
push
sub
loope
clc
icebp
enter
lret
fidivrs
pop
pop
mov
fwait
and
push
mov
hlt
dec
adc
add
adcb
ds
testl
mov
push
mov
mov
mov
mov
sbb
sub
test
ds
das
jl
mov
lret
data16
shl
popa
xor
cli
aam
test
mov
divps
les
fdivs
xchg
ljmp
pop
adc
mov
mov
gs
rcll
rol
or
push
or
sbb
xchg
cmpsb
pop
in
push
mov
movb
adc
xor
push
or
test
arpl
bound
pop
es
mov
clc
sbb
and
insb
and
dec
in
push
xor
mov
cmpb
push
jl
inc
lods
loope
xchg
cwtl
cmpsl
hlt
jbe
xchg
xor
push
mov
data16
pop
lret
jmp
lds
lock
push
mov
cwtl
add
push
inc
and
or
pop
dec
outsb
xchg
pop
push
loopne
sbb
ss
jg
cmp
inc
mov
jg
js
or
and
ficoml
mov
cwtl
out
add
js
idivl
push
jno
sbb
dec
mov
mov
dec
lds
cmpsl
call
push
pandn
insb
xchg
sbb
ljmp
das
push
lret
fdivrl
xchg
push
xchg
ret
sbb
mov
xchg
xor
jo
or
xchg
or
clc
ss
cwtl
mov
push
push
repnz
push
ret
mov
out
mov
aam
rcrb
add
inc
mov
rol
jnp
into
xor
mov
jecxz
loope
xor
arpl
dec
push
loop
xchg
js
dec
cmp
and
pop
pop
les
shlb
lods
jo
mov
pop
lret
cmpb
sub
xor
push
mov
jmp
clc
and
cs
mov
dec
fistps
in
aam
push
ja
lds
ds
mov
fsubs
jmp
add
mov
nop
mov
rolb
sahf
mov
cld
js
jecxz
mov
ds
nopl
fmull
bound
push
push
xor
sub
cmpsl
pop
pop
mov
lods
cmp
js
pop
xchg
dec
push
test
lcall
jbe
push
fs
ja
jb
sbb
je
fsubrp
loop
dec
loope
push
jbe
cmp
xchg
sbb
xor
jle
jp
mov
add
int3
lret
inc
inc
mov
inc
add
cld
mov
out
adc
lahf
ds
sbb
jb
loope,pt
or
addb
dec
call
lret
inc
sbb
aas
shr
pop
mov
outsb
jmp
dec
and
sub
enter
or
mov
mov
out
es
loopne
lcall
inc
pop
jl
xor
mov
add
es
call
mov
jmp
popf
mov
add
hlt
jo
seta
aaa
aaa
aaa
and
jg
cwtl
xchg
fs
or
sbb
aaa
aaa
aaa
outsb
lea
lods
adc
cli
jle
ss
sbb
lea
mov
insb
mov
bound
js
adc
int
mov
scas
test
jle,pn
loope
push
popa
adc
sahf
mov
xchg
shll
cmp
cmp
sub
je
cld
push
loopne
push
int3
addr16
aam
push
mov
cs
and
or
cmc
mov
sbb
mov
icebp
icebp
roll
jbe
jb
xchg
push
mov
and
xor
out
cmp
rorl
jb
pop
adc
pop
orl
or
sub
movsl
rcl
mov
mov
dec
push
addr16
or
mov
outsb
pop
es
in
xchg
stos
inc
xchg
or
std
jp
inc
push
cmp
xor
roll
sub
cs
decl
push
mov
sti
xor
add
add
repz
rcl
pushf
ds
jo
push
addr16
pop
arpl
aas
xor
jg
dec
jp
out
ret
sub
push
pop
out
rclb
ja
pop
sub
push
cmp
in
add
loopne
add
outsl
sub
pop
jno
cmp
cli
jo
int
popa
movsb
pop
and
mov
add
pushf
cwtl
data16
rolb
pop
ja
fidivrs
out
imul
or
pop
mov
stos
cmp
test
sbb
push
fldt
mov
mov
fdivrp
mov
mov
out
aad
daa
inc
pop
mov
out
push
push
xorb
jecxz
xor
pusha
fwait
xchg
aam
out
jle
dec
sbb
or
leave
mov
ucomiss
fdivrp
xor
jb
pop
jp
cmc
rcrl
rolb
mov
jp
fnstsw
clc
lock
cli
lret
loopne
in
mov
out
test
cmc
hlt
cmpb
scas
shrb
sub
cld
push
fs
mul
jnp
inc
jb
mov
rcl
loope
out
mov
fisubrl
insb
sbb
cld
js
adc
int3
and
mov
nop
push
sahf
xor
inc
arpl
lcall
fistpll
mov
enter
clc
lock
dec
fmul
dec
bound
lret
in
or
popf
sub
mov
mov
in
adcb
das
cli
insb
fcoms
aas
sbbl
gs
fisubrs
cmpsl
je
ret
mov
std
add
dec
loop
outsl
mov
jl
fwait
lahf
int
or
push
adc
sbb
out
loop
and
jp
mov
icebp
jmp
sub
je
lds
loopne
xchg
nop
xor
fdivrs
cli
mov
mov
xor
adc
mov
icebp
adcl
fdivrl
mov
cs
daa
jmp
mov
xchg
test
sbb
sbb
ret
divl
loope
mov
leave
les
jge
jg
fcoml
push
cmp
pop
push
push
je
pop
ret
es
out
movsb
or
loope
pop
js
gs
inc
ficomps
jbe
cmp
cwtl
and
rep
add
inc
cwtl
mov
std
xor
dec
mov
lcall
rcl
pop
adc
scas
xor
push
inc
xchg
lods
into
in
pop
inc
add
mov
xor
xchg
dec
pop
dec
fildll
push
cmpsl
cwtl
outsl
js
js
data16
dec
jp
sti
xchg
idivb
pop
fidivl
adc
dec
push
lret
and
mov
std
and
xchg
js
movb
mov
ljmp
adc
push
push
imul
mov
stos
sbb
push
xchg
dec
call
adc
mov
jecxz
pop
out
daa
test
fsubrl
imul
lods
push
rcl
pop
inc
and
push
sar
hlt
pop
mov
dec
or
xchg
add
pop
pushf
jl
fs
and
ret
xchg
push
adc
lock
jl
popa
stos
mov
negb
loop
push
bound
mov
mov
sbb
jno
push
push
inc
add
xor
loopne
add
mov
fimuls
es
fs
cmp
clc
mov
aad
and
scas
and
mov
jmp
cltd
test
inc
mov
cli
mov
mov
int3
fimull
inc
mov
push
andb
xchg
ret
pop
fisubs
inc
jbe
xchg
js,pt
outsb
pop
add
xor
or
fbstp
sub
out
xchg
pusha
push
inc
inc
lods
push
lret
packssdw
inc
notl
arpl
adc
mov
xor
out
and
setp
ret
pop
cmp
mov
xchg
loop
movsb
mov
cld
scas
cmpb
adc
cmpsb
jno
hlt
loop
push
sarb
pop
pop
push
mov
pop
ds
rcrb
pop
fildll
dec
pop
bound
pop
jg
fnstsw
out
cmp
pushw
pop
test
sti
mov
mov
shll
push
test
push
pop
aam
dec
sahf
loopne
test
clc
bnd
pop
loop
cmp
cmp
cli
ds
sbb
aam
mov
test
lock
sahf
fwait
ret
pop
int
inc
test
insb
je
lods
or
push
imul
test
xchg
sti
daa
in
loop
jge
push
loop
sahf
add
std
mov
std
cli
icebp
div
or
das
loop
loop
rolb
cli
arpl
inc
fwait
push
dec
hlt
dec
stc
pop
adc
wrmsr
sahf
xor
mov
adc
ljmp
jp
mov
or
pop
pop
jg
cmp
xchg
lock
outsb
xchg
mov
js
int3
sbb
out
sbb
cld
rcr
push
pop
pop
das
and
sbb
push
push
pushf
push
cmp
xchg
xor
sbb
lock
jp
mov
jbe
cmp
into
pop
mov
pop
adc
pop
push
outsb
out
mov
jl
cmp
int
jge
jbe
mov
inc
sahf
test
and
inc
mov
xor
push
or
sub
and
je
pop
xchg
or
cld
icebp
xchg
cmp
fidivrl
inc
lret
clc
jmp
loop
inc
pop
loope
ret
pop
sahf
dec
cmp
cmc
loopne
daa
ret
rcrb
roll
clc
shlb
ret
aas
dec
xchg
jl
inc
cmp
out
and
mov
sbb
lods
enter
xor
cmp
xchg
in
jbe
rol
xchg
sbb
xchg
nop
lret
inc
clc
push
inc
xor
subb
loopne
pop
pop
jle
arpl
incl
out
pushf
xor
xor
rcrb
xchg
cmp
pop
aad
ret
mov
insb
or
daa
jecxz
or
jbe
cmc
cmp
fdecstp
lret
and
push
cmp
jb
daa
rorb
cwtl
jmp
add
insl
ret
jno
scas
dec
mov
in
fwait
rcl
pop
pop
lock
hlt
push
bound
ds
cmp
les
mov
mov
pop
imul
and
inc
pop
xchg
or
cmpsb
bound
mov
adc
push
call
andps
repnz
add
insl
cs
clc
lock
loop
adc
and
bound
shlb
ret
pop
pop
pop
jle
jne
cwtl
lret
call
or
mov
test
loope
js
push
les
std
or
insb
or
or
jmp
jecxz
push
mov
cmp
les
add
cmp
sub
mulb
js
sub
xchg
cmp
or
push
cmp
into
icebp
pop
jl
and
mov
or
in
jbe
lock
push
ret
xorb
push
clc
and
mov
dec
mulps
ret
adc
int
ja
adc
mov
ja
cmc
and
push
pop
or
xor
cmc
ret
sti
fmull
fstpt
jns
cmp
or
mov
adc
js
clc
and
loop
mov
add
cmp
mov
pop
pop
pop
push
pop
and
push
cld
nop
mov
pop
mov
xchg
mov
xor
roll
shll
inc
dec
addr16
jge
loop
aas
lcall
inc
dec
test
ja
lock
sbb
aaa
insb
pop
pusha
stos
scas
add
mov
cmp
sbb
mov
jl
and
and
into
and
add
push
shrb
ret
sbbl
dec
jp
mov
push
in
mov
rolb
out
push
sub
xchg
mov
testb
jo
push
push
les
lds
push
and
enter
call
fucomp
jbe
cwtl
cmp
sbb
xor
jbe
ret
adc
les
push
sub
es
inc
and
inc
pop
sahf
fnstsw
lods
pop
pop
cmp
in
dec
cmc
into
sbb
aas
sub
jle
add
aas
insb
bound
xchg
xchg
stos
dec
outsb
cmp
fiadds
std
jge
icebp
cmp
aas
dec
lcall
cmp
push
dec
mov
xlat
mov
and
je
lds
jg
pop
lcall
fmuls
je
xchg
jnp
inc
cmpsl
lahf
push
add
mov
repnz
cmp
aad
idivb
std
clc
cmp
push
sub
and
sbb
sub
lahf
int3
sti
leave
and
int3
add
cmp
jmp
push
jmp
add
addr16
aam
into
inc
hlt
add
and
std
fs
shl
inc
out
mov
or
sub
ljmp
jbe
mov
push
orl
mov
nop
fmuls
cmp
mov
ss
enter
dec
repnz
and
sub
fcoml
rclb
jmp
sahf
push
and
dec
cwtl
shll
xchg
sub
test
imul
mov
js
cmp
push
jb
dec
test
outsb
xchg
ljmp
cmp
insl
cld
xchg
add
xchg
xchg
xor
dec
inc
or
mov
loop
aaa
icebp
outsb
mov
int3
sarl
inc
cmp
jge
push
jecxz
xor
lea
out
stos
pop
push
test
xchg
fidivl
int3
mov
cs
imulb
inc
pop
iret
push
mov
sbb
jl
rolb
add
test
popl
add
shll
mov
fimuls
pusha
sbb
insb
sbb
jecxz
gs
jmp
add
pop
and
jle
bound
add
cmp
pop
sub
push
jle
inc
pop
jle
rol
pop
js
loope
jl
add
out
jmp
aam
lret
bound
add
aam
mov
xor
sub
add
mov
lock
adc
sbb
xor
mov
jp
mov
les
cmp
insb
outsl
fcmove
jno
loopne
sbb
les
stos
adc
jg
add
mov
or
xor
jo
mov
outsb
test
jno
lcall
jge
mov
cmp
jne
inc
and
incl
fisttps
mov
push
sub
loop
adcl
or
and
cmp
mov
mov
and
and
inc
mov
jle
mov
dec
lret
inc
rcrb
je
and
sub
pop
sbb
mov
jle
dec
scas
js
jecxz
fs
popa
and
lahf
push
cmp
mov
rcll
pop
or
lret
iret
lds
lahf
repnz
stos
pop
sub
sbbl
mov
and
loope
xchg
pop
dec
or
xor
and
jecxz
loope
mov
cmp
push
cs
hlt
or
addr16
xlat
inc
lahf
jl,pt
adc
pop
push
inc
cmp
push
not
scas
stos
dec
les
jnp
out
jge
sbb
dec
jecxz
and
dec
icebp
add
std
pop
lock
aam
cwtl
adc
outsl
mov
mov
enter
fidivrl
leave
dec
mov
mov
cmp
shlb
sub
gs
xor
sub
sahf
ds
mov
sbb
inc
cmp
mov
nop
push
mov
mov
and
inc
cwtl
out
testl
mov
les
push
or
pushf
pop
lods
xchg
jl
sbb
sbb
mov
testb
inc
dec
inc
dec
push
lret
ror
loop
popa
pop
call
adc
xchg
cs
xchg
cld
push
jne
adc
dec
mov
dec
and
or
xchg
sarl
add
inc
mov
add
pop
aas
int3
mov
push
mov
cmp
xor
test
movb
inc
or
inc
cli
loop
paddw
push
and
icebp
std
adc
insb
enter
aad
mov
lahf
sub
ds
cli
push
mov
cli
test
mov
sbb
dec
adc
out
mov
test
pusha
test
js
loope
cli
sbb
jp
adc
or
sub
clc
push
ret
add
addb
in
ret
jp
es
sti
jp
pushf
mov
shrb
in
jne,pn
sbbl
cmp
stos
out
pop
sub
fiadds
push
bound
pop
fstpl
pop
push
sub
xchg
sbb
adc
rolb
ds
dec
inc
ja
imul
sub
dec
mov
in
cmp
arpl
stc
xor
or
out
cwtl
mov
lea
loope
inc
repnz
sub
push
loopne
jbe
imul
dec
andl
add
add
push
xchg
arpl
sbb
daa
adc
cld
les
out
scas
fdivrl
cmpb
xor
xchg
jge
mov
loop
pop
sbb
call
test
cmp
clc
loope
pop
sarl
sar
jmp
inc
mov
pop
push
outsl
jge
mov
push
stos
and
js
xor
gs
push
andb
jge
pop
dec
xchg
xchg
cmp
push
loope
test
jp
bound
inc
push
jo
jl,pt
dec
push
mov
add
testl
mov
clc
inc
mov
or
sub
and
adc
rcr
lcall
pop
loop
mov
cmc
xlat
cmp
cmc
loop
sub
jmp
test
repz
rorb
or
jecxz
adc
push
sahf
sub
sbb
pop
loop
fbld
addb
into
sub
lea
sub
subb
jg
js
or
out
adc
mov
ret
and
cmp
pop
je
jge
rolb
or
enter
pop
cmpsb
sbb
or
adc
or
jne
cld
mov
fld
cwtl
aam
sbb
push
push
clc
mov
pop
es
sbb
out
out
push
js
mov
js
mov
pop
cli
out
jle
js
aas
sub
push
js
lock
movsb
sbb
mov
mov
mov
in
ljmp
lcall
je
jl
fimuls
test
jecxz
xchg
gs
pop
jbe
push
lods
ljmp
push
adc
ljmp
in
add
rol
jmp
lcall
aas
mov
sub
xchg
cmp
sbbl
lock
popa
movsl
jle
push
mov
subb
sbb
push
out
fmul
cmpl
clc
lock
and
out
xchg
xor
jle
add
mov
inc
or
ss
add
xchg
aas
sbb
dec
fisttps
push
or
packuswb
pop
xchg
inc
icebp
mov
jl
mov
data16
enter
mov
repnz
les
inc
loope
inc
sbb
mov
sub
mov
clc
jne
scas
and
sub
cmc
daa
add
push
out
mov
pop
jge
cmp
inc
or
mov
imul
bound
jmp
push
push
test
push
ljmp
and
rol
addr16
das
scas
mov
xchg
enter
enter
jnp
jns
dec
cmp
xchg
ret
outsl
loope
dec
fisubrs
mov
ja
loope
imul
pop
scas
pop
push
inc
mov
sub
cmpsb
mov
jb
movsb
ret
dec
jl
in
push
icebp
sub
negl
pop
adc
les
hlt
bound
adcl
aas
nop
hlt
pusha
repnz
push
mov
cmp
cmp
js
jp
in
jbe
frstor
dec
mov
stos
jg
faddl
jle
loopne
and
lods
call
stos
call
into
cwtl
add
dec
sahf
mov
clc
loopne
xchg
jns
repnz
icebp
mov
or
cs
cmpsb
stos
xchg
xchg
int3
sarl
cld
out
mov
lahf
add
dec
dec
mov
sub
shl
sbb
and
sbb
or
aad
pop
cld
sahf
mov
jle
mov
call
dec
xor
xchg
hlt
add
ljmp
and
fsub
and
pop
fistps
mov
mov
jo
gs
cltd
clc
js
and
sbb
and
mov
xchg
pop
pop
mov
fdivs
enter
adc
fwait
adc
sub
or
xor
in
cmp
mov
addb
and
xchg
pop
or
mov
mov
jb
xchg
jmp
rclb
xchg
and
lock
add
inc
sysret
aam
pop
add
fsub
mov
imul
jge
sti
iret
push
xchg
pop
fcoml
adcb
mov
push
xor
cli
dec
sti
lds
aas
jle
hlt
je
stos
iret
js
xchg
cmpsl
push
cli
icebp
loope
ror
add
inc
pushf
fiadds
pop
cmp
xchg
rolb
push
leave
fildl
lcall
mov
pop
mov
repnz
or
fwait
cmp
cli
xchg
pop
clc
dec
cld
sahf
xor
clc
jge,pt
jo
or
jp
hlt
dec
pop
aas
fisubrs
notb
fidivs
imul
aam
arpl
jl
dec
cmp
fldt
dec
fbstp
sub
inc
rorb
pop
sbb
mov
or
aad
bound
add
clc
hlt
popa
insl
bound
lods
fistl
pop
test
push
mov
out
xchg
sbbb
pop
mov
scas
cmp
pop
test
popa
out
adcb
adc
sub
cmp
xchg
gs
subl
dec
popf
xor
sub
cmp
fadd
pop
or
cltd
std
sahf
scas
mov
mov
add
jle
icebp
mov
or
cmovb
fidivrl
inc
push
scas
les
push
pop
mov
mov
xchg
xchg
sbb
dec
jmp
fiadds
sahf
adc
clc
mov
lods
test
sbb
sbb
lods
rolb
shlb
xlat
lods
sbb
outsl
pop
push
js
repnz
or
xchg
mov
mov
mov
push
push
ljmp
scas
xchg
cmpxchg
ds
adc
xor
call
out
ja
test
cltd
and
xor
das
mov
call
dec
add
shlb
aas
inc
js
jecxz
mov
cmp
jge
adc
dec
sbb
test
ljmp
adcl
mov
xchg
lock
push
adc
pop
add
mov
sbb
xchg
lods
sbb
and
fs
jns
aas
aad
mov
clc
ret
imul
mov
roll
xchg
cmc
mov
jo
pop
imul
or
clc
mov
rorl
cs
call
pop
out
pop
nop
orb
rol
ret
xchg
rcr
test
jle
sbb
jmp
sub
cmpl
push
xor
sbb
lock
adc
mov
mov
test
push
sahf
into
and
int
shll
loop
mov
cli
xor
sarb
sub
pop
aas
mov
jb
dec
loopne
push
dec
or
or
roll
or
outsl
mov
inc
sbbl
xlat
movl
add
dec
arpl
mov
xor
pop
push
cmp
pop
adc
jge
out
sbb
push
push
rclb
adc
test
test
dec
ds
test
aam
cmp
xor
lahf
mov
xor
pusha
add
mov
pop
jo
loop
sarl
stos
imul
icebp
and
rorb
bnd
negb
fucom
insb
xchg
mov
sub
enter
cmc
and
inc
mov
cmp
jo
fidivl
lret
dec
je
les
xchg
cmp
sub
lret
xchg
jmp
hlt
in
pop
inc
bound
cltd
repz
lcall
repnz
js
clc
xor
and
cli
add
push
fiaddl
inc
dec
sti
xchg
mov
mov
or
mov
inc
push
loopne
pushl
push
jmp
clc
jp,pt
xchg
xor
mov
test
sar
add
pop
dec
add
lock
rcr
bound
pop
add
sbb
test
out
ljmp
loopne
jmp
ret
movb
lock
sarl
out
test
lcall
pusha
push
xchg
xlat
in
push
jno
and
pop
aam
fnsave
jle
sbb
jle
adc
sbb
mov
je
out
scas
mov
aad
repnz
adc
ret
imul
push
pop
add
rcll
clc
test
sti
lds
sbb
xchg
jl
cmp
xor
std
rclb
xor
push
push
jl
mov
leave
das
add
jl
cmp
pushf
dec
mov
mov
fidivl
test
cld
clc
loope
dec
in
inc
inc
mov
push
mov
std
jle
call
jmp
bound
dec
insb
xor
hlt
xlat
xor
insb
pusha
sahf
jo
and
je
sbb
repz
pop
push
cmp
ljmp
lret
dec
cwtl
jne
xor
xchg
xchg
nop
fsubrs
fldl
mov
xor
adc
lods
mov
pop
fs
cli
sbb
dec
aam
jne
hlt
sbb
les
test
adc
aam
fdivrl
pushf
outsb
add
stos
das
xor
jns
jl
icebp
loope
idivb
les
xor
arpl
add
fs
push
iret
je
movsb
stos
in
jle
js
inc
push
inc
test
scas
xchg
mov
call
xchg
mov
cmpsl
xor
pop
ljmp
pop
xchg
fisubl
nop
inc
hlt
jbe
in
in
ret
mov
les
jp
sbb
out
mov
adcb
mov
push
aam
bound
popl
movsb
repz
cli
sahf
mov
shlb
arpl
mull
mov
mov
push
paddq
int3
out
push
xor
decb
cmc
gs
fnstsw
mov
pop
push
out
in
orb
leave
test
addr16
sbb
dec
cli
jmp
sub
icebp
adc
jo
push
addb
mov
adc
push
mov
xor
pushfw
and
out
push
mov
inc
jl
jl
aaa
add
lock
sub
dec
adc
cld
cmp
nop
and
scas
jecxz
adcb
pop
jne
and
cmpsb
jecxz
jecxz
mov
aad
mov
loop
je
adc
pop
dec
cmp
adcb
pop
xor
cmpsb
js
sub
inc
loop
mov
std
clc
xor
call
fisubrs
push
pop
les
jno
and
jp
sbb
inc
push
test
es
mov
sub
mov
stos
and
aas
inc
subb
std
mov
fnstenv
js
adc
bound
mov
push
sbbl
loop
scas
cltd
fsubl
into
add
shlb
call
mov
idivl
xor
ret
jmp
jge
mov
add
jbe
xchg
iret
push
cs
push
ds
jl
inc
dec
push
or
dec
mov
outsl
or
paddq
fwait
out
int3
mov
call
sbb
add
std
insl
pusha
hlt
push
in
dec
cmp
jne
lcall
out
stos
push
in
xchg
jbe
ljmp
xor
cld
ss
mov
inc
jnp
ja
jge
loope
popa
test
mov
mov
mov
adc
inc
rorb
pop
inc
pushf
sbb
repnz
sbb
sbb
mov
lods
xchg
js
icebp
jecxz
les
mov
enter
xchg
add
lds
push
data16
push
loopne
mov
pop
pop
mov
cli
mov
bswap
sub
test
sahf
ss
jl
sti
jge
sbb
xor
cs
insb
ljmp
xchg
lods
push
mov
xchg
mov
out
dec
das
sub
mov
cmc
xlat
adcl
mov
jl
icebp
add
push
jo
rclb
daa
mov
xchg
lods
clc
push
ljmp
test
lahf
pop
out
cs
repnz
nop
xchg
rcrb
insb
xor
cs
pop
icebp
jmp
push
and
cld
mov
dec
imul
ljmp
dec
sahf
xchg
repnz
jmp
dec
cli
cwtl
mov
and
and
les
lret
sbb
jbe
mov
sti
inc
shlb
adc
ljmp
cwtl
push
mov
jno
jo
jp
mov
insb
push
sbb
sbb
hlt
insb
loopne
faddl
xor
ret
inc
je
lods
ret
cmp
loope
dec
cmp
fmull
cmc
pop
movsl
daa
movsb
ds
xchg
cmp
jno
sbb
imul
add
mov
mov
aad
icebp
lds
clc
inc
arpl
fisttpll
into
push
sbb
push
cmp
cmp
push
dec
jmp
pop
in
icebp
add
push
and
sbb
enter
or
or
addb
adc
mov
mov
pop
cmp
icebp
scas
andb
insl
pop
xorb
push
sbbb
cs
adc
and
dec
push
jge
roll
and
inc
push
out
jae
dec
inc
mov
mov
jg
pop
jnp
iret
out
dec
ret
mov
jnp
jg
cmp
sti
push
loop
out
lret
js
lock
jp
pusha
test
inc
mov
mov
sub
call
push
cmpsb
sti
lock
or
into
outsb
inc
mov
cli
jo
test
pusha
pop
out
mov
iret
fisubs
sbb
int3
fists
mov
fistps
mov
jl
enter
cmovle
testl
push
sar
lods
mov
adc
xchg
adc
jae
jae
sahf
pop
fildl
mov
icebp
les
lcall
and
fbstp
mov
jecxz
xor
movsb
outsl
nop
jo,pn
add
adc
fs
ss
xchg
push
and
enter
fnstcw
cli
loop
add
test
jmp
negl
sbb
loope,pt
lea
xchg
pop
cwtl
inc
jle
es
fistpl
cld
int
and
sub
testb
sub
pop
int3
stc
jno
insl
loopne
inc
sbb
cmp
mov
movsl
jno
mov
cmp
sub
jo
cltd
cmp
inc
mov
mov
out
adc
push
xchg
pop
push
inc
inc
je
fiaddl
mov
or
cld
cmpsl
cs
sbbl
xor
mov
filds
pop
in
ret
mov
mov
xor
pop
insb
add
pop
sbb
jg
jge,pt
dec
cmp
adc
push
xchg
ljmp
jl
sti
testl
mov
clc
das
ds
loopne
cli
pusha
scas
ljmp
jb
push
call
ds
pop
mov
out
cmp
rorl
push
push
xor
bound
call
mov
ficompl
jnp
dec
pop
jo
clc
sub
adc
mov
icebp
lret
mov
int
popa
sbb
dec
sub
test
aam
xchg
icebp
ret
scas
pop
sub
mov
fcom
ljmp
outsb
mov
lcall
add
sub
dec
push
xor
test
pop
pop
jecxz
adc
sahf
test
sub
push
cmp
jno
mov
sbb
jbe
add
pop
pop
in
jmp
shrl
jl
sbb
lret
sub
mov
xor
jb
mov
xor
aad
sbb
jbe
sub
js
mov
fs
jecxz
inc
shrb
push
mov
sar
mov
xchg
pop
clc
or
loopne
aam
cmovle
clc
xchg
push
pop
cmp
cmp
cs
fistps
pop
xor
and
mov
jbe
dec
xor
pop
sarl
push
aam
aad
mov
out
popl
shrb
pop
in
inc
fildll
mov
sub
push
lcall
jb
cmp
push
dec
jmp
pop
clc
out
xor
dec
cmp
fcoml
scas
xchg
mov
outsb
xchg
and
int3
in
cld
cmc
add
ss
pop
dec
scas
fcmovbe
or
sti
and
inc
dec
cli
jp
hlt
mov
pop
pop
enter
add
sarb
clc
mov
pop
dec
popa
pop
addb
scas
loop
add
or
push
dec
xor
lock
inc
push
mov
enter
xchg
js
and
add
insl
loopne
pop
je
lods
fwait
mov
lea
sahf
push
xchg
out
orl
inc
sbb
jo
cli
mov
rolb
popl
inc
sbb
and
cmp
xlat
adc
or
out
xor
out
scas
add
and
pop
mov
xor
dec
sub
ret
xchg
icebp
xlat
and
ficomps
dec
ljmp
shrl
clc
insl
aam
shrb
inc
out
pop
in
sahf
lods
pandn
dec
inc
jle
cmpb
dec
xchg
mov
test
fidivrs
lcall
ds
pop
mov
aam
fsubrl
pushf
mov
das
lock
adc
add
jbe
lock
lock
data16
pop
cltd
or
jge
movsb
in
fnstenv
mov
push
inc
xor
add
or
test
leave
loope
js
push
push
sbb
xchg
jge
jo
data16
dec
pop
pop
mov
add
adc
fnsave
outsl
pop
pop
lods
xor
pop
cltd
mov
scas
add
fdivr
out
adcb
ficoml
adc
add
push
mov
ret
mov
mov
and
sar
add
mov
cltd
out
cwtl
adc
mov
and
jle
pop
ret
push
sub
inc
cs
stos
rorl
mov
sub
jl
shlb
mov
or
mov
enter
sbb
add
jle
clc
cwtl
push
stos
push
sub
icebp
mov
insb
or
fcompl
aad
fcompl
clc
adc
jo
pop
mov
xchg
imul
mov
xor
jecxz
or
jb
movl
icebp
cwtl
loopne
lcall
lahf
add
call
sub
loopne
rclb
mov
test
mov
pop
jbe
dec
jl
leave
mov
filds
lods
rorl
xorb
cmpsl
adc
pop
lea
mov
cmpsl
pop
fisubrs
testb
dec
adc
cli
cmc
call
mov
mov
adc
mov
jno
mov
push
pop
jge
sbb
jbe
lods
mov
fisttps
add
adc
or
cmp
add
or
loop
lock
jle
xchg
addr16
adc
arpl
out
sarb
mov
hlt
and
not
push
test
sub
xchg
push
cld
les
mov
dec
mov
jns
sbb
jl
sub
repnz
out
add
jmp
jb
gs
ds
and
fbstp
icebp
mov
sbb
and
xchg
in
inc
clc
movsb
mov
xor
xchg
scas
pop
mov
movsb
mov
icebp
daa
and
pop
pop
lock
adc
pop
and
mov
es
pop
pop
mov
push
pop
imul
push
lret
cli
jmp
pop
jl
lahf
xchg
test
mov
xlat
dec
outsb
mov
in
xor
pusha
and
inc
das
js
lods
fisubl
in
jl,pt
jp
push
push
inc
mov
add
adc
xchg
loope
ss
pushf
je
xor
or
or
xchg
hlt
loopne
dec
inc
push
hlt
sub
js
dec
stos
inc
lods
shlb
call
mov
jmp
aaa
outsl
addr16
movsb
out
lock
clc
and
test
shl
orl
mov
mov
cmp
inc
adc
cld
clc
enter
sar
ret
and
je
popa
push
shlb
scas
jo
jecxz
adc
sub
repnz
clc
insb
or
bound
dec
and
xor
mov
sbb
add
pop
cmpsl
push
mov
pop
mov
cmp
mov
xchg
cld
lock
mov
or
clc
push
movsb
push
pushf
cmp
cmp
inc
insl
pop
jl
icebp
mov
dec
cmc
fsubl
sbb
out
mov
mov
dec
fs
xchg
add
pop
mov
dec
js
jl
or
fcomi
jge
jl
into
popa
cmp
push
into
adc
cmc
out
lock
jno
fs
jo
push
jge
xor
idivb
jp
and
aam
add
call
push
xor
mov
xchg
mov
shlb
mov
push
fxch
cmp
xor
push
adc
xorl
adc
mov
pop
popa
ja
mov
iret
push
fmuls
faddl
in
push
jo
ret
push
sbb
pusha
mov
mov
jle
aas
dec
mov
mov
mov
imul
adcb
clc
push
shll
jo
data16
dec
jne
lret
inc
push
cmc
fs
ja
loopne
in
stc
test
xor
sti
loope
fldcw
jo
jle
das
rorl
rolb
insl
cmp
inc
mov
adc
hlt
mov
orl
rcr
and
fwait
push
stos
push
jp
xor
loop
sbb
xchg
xor
cmp
sbb
push
scas
add
xor
dec
xlat
xorb
loop
out
jmp
or
xor
ficoml
ss
xor
sub
mov
clc
test
pushf
and
sti
scas
mov
mov
cmp
scas
cmp
in
cmp
pop
aam
mov
push
jecxz
test
mov
pop
test
lock
enter
loop
push
mov
jp
bound
test
into
and
and
pop
pop
fiadds
loop
shrb
dec
push
fcomip
std
pop
movsl
cmp
clc
inc
jno
pop
pop
cmpsb
adc
loope
mov
mov
and
cld
out
movsb
sub
clc
ret
push
xor
push
push
and
jns
sti
ds
push
repnz
sahf
bound
shlb
cwtl
div
loopne
out
and
out
js
jp,pn
mov
pop
je
popf
loopne
lahf
stos
test
adc
xchg
lcall
xchg
ds
or
pop
push
int3
arpl
adc
mov
cli
push
insb
and
mov
repnz
or
movb
dec
push
mov
pop
mov
adc
cmp
mov
imul
sub
inc
mov
adc
and
dec
xlat
mov
stc
scas
push
loop
aam
mov
inc
fisubs
mov
mov
sahf
dec
mov
outsb
ret
mov
and
js
sar
mov
je
pop
aas
popa
sbb
or
pop
ds
loope
mov
imul
loopne
sti
mov
aaa
add
mov
ljmp
sbbb
sub
mov
jp
sbb
jg
inc
shr
add
test
xor
ret
push
test
xchg
popf
int3
jo
mul
pop
jg
xor
dec
or
adc
push
mov
clc
ljmp
mov
addb
or
cmp
xor
push
add
test
data16
in
clc
cmc
leave
mov
pop
out
aas
and
mov
insb
sub
cltd
cli
xchg
adc
gs
sub
ds
nop
jg
push
cmpsl
jmp
rcll
pop
xchg
inc
xchg
pop
cld
lock
test
sbb
loopne
inc
lock
or
cmp
or
pop
clc
cmp
shl
or
pop
jmp
pop
cld
clc
push
bound
push
in
sbb
outsb
imul
pop
pop
push
pop
adc
adc
flds
and
and
jp
mov
pop
add
sbb
cvtdq2ps
daa
mov
jg
and
xor
sbb
mov
inc
pop
je
pop
popa
push
lcall
push
into
add
sbb
adc
dec
les
sbb
mov
movsl
out
enter
cli
jno
jecxz
daa
cli
in
adc
add
push
mov
adc
mov
aad
mov
sbbl
fcomp
pop
dec
les
icebp
aad
loope
les
push
sbb
mov
or
lds
cwtl
addr16
adc
inc
test
rol
ss
pop
nopl
xchg
cld
inc
sbb
mov
or
mov
sbb
test
out
cmp
out
sub
push
lcall
ds
sbb
push
out
std
and
daa
pop
loop
mov
xor
in
not
js
cmp
iret
mov
mov
popa
push
pop
data16
fwait
cmc
jge
shll
js
imul
and
push
xchg
cmpl
lock
js
xchg
inc
jns
push
es
clc
adc
mov
clc
jbe
scas
pop
push
mov
bound
jmp
icebp
imul
jle
aaa
jle
mov
inc
shlb
adc
fiadds
add
cmp
mov
cld
clc
sub
push
in
and
lock
xchg
or
inc
add
orb
nop
or
mov
jle
pop
lahf
mov
or
call
out
nopl
cmpsl
jge
addb
pop
mov
js
pop
mov
sbb
or
adc
xlat
pop
xchg
jg
xor
lret
jmp
jmpw
cs
test
clc
add
repnz
movsb
stc
stos
jnp
mov
sbb
dec
or
jmp
jns
outsl
cld
iret
fiadds
sbb
ror
int
in
icebp
orb
add
fs
das
xor
pop
or
iret
int
enter
testb
cmp
cmpsb
jle
loope
adc
push
aaa
imul
hlt
enter
pop
cmpsb
mov
xchg
mov
cmp
cmc
xchg
or
out
pop
popa
subb
mov
pop
mov
bound
xchg
xor
mov
pop
add
xorb
xchg
ss
pop
pushf
xchg
loop
push
test
cmp
cmp
loop
jp
dec
test
pop
pop
push
sub
outsb
mov
filds
bound
mov
cmc
sbb
push
add
add
loop
test
das
mov
jl
ss
addr16
and
pcmpgtb
adc
rolb
lock
mov
push
cmp
movsl
int3
mov
fwait
js
dec
jp
push
pushf
jae
scas
jle
jp
adc
lock
dec
push
clc
add
adc
in
imul
dec
jle
mov
jl
scas
notb
or
bound
inc
or
cmovl
enter
hlt
loope
cmp
sarb
jg
sbb
push
or
xlat
or
pop
fwait
pop
sub
sub
jecxz
push
xchg
test
fcmovu
pminsw
mov
mov
and
mov
xor
pop
cld
js
andb
hlt
out
jp
incb
pop
pop
repnz
insb
and
testl
lods
pop
shr
and
adc
add
std
jp
jbe
push
sub
leave
mov
inc
dec
aad
xchg
outsl
pop
mov
xor
xor
lcall
sbb
pop
int
loopne
popl
loop
ljmp
mov
icebp
push
arpl
pop
inc
clc
jle
inc
aas
ljmp
je
call
pop
int
shrb
jbe
je
lods
ret
xorl
cld
icebp
push
push
mov
xchg
and
add
push
pushf
sahf
push
xchg
lea
sub
rcrl
xchg
or
leave
xchg
mov
jns
enter
je
pop
das
inc
loopne
mov
out
jnp
adc
mov
ds
es
jecxz
je
sub
push
je
loop
icebp
pop
cmp
fildl
mov
movd
sub
data16
loope
push
pop
add
dec
pusha
and
mov
dec
jae
pusha
jecxz
adcb
push
clc
jo
cmpsb
xor
push
lods
aas
sbbb
cmove
mov
fdivrs
adc
nop
ret
test
dec
shlb
not
sti
mov
insl
in
sbb
push
data16
and
in
cmp
out
jbe
sub
cmp
dec
idivl
arpl
sbb
xor
bound
es
add
mov
sbb
arpl
push
clc
sub
imul
adc
loopne
adc
mov
ds
pushf
test
clc
add
loopne
daa
cld
inc
mov
jecxz
test
lret
xchg
adc
mov
and
xchg
aad
xorb
ficoml
pop
or
pop
cmpsb
mov
jmp
mov
mull
jl
ss
cmp
aad
mov
rolb
sub
adc
adc
and
ficomps
xchg
mov
es
lds
adc
nop
adc
dec
and
stos
psrad
xor
xor
xchg
jbe
out
mov
mov
xor
lret
out
std
jp
cli
test
xchg
add
jge
clc
insb
sbb
popa
push
push
imul
xchg
sub
rol
movsl
dec
dec
cmpsb
sbb
clc
mov
ja
nop
loop
xchg
push
xchg
clc
jb
jle
jnp
icebp
sub
pop
inc
pop
push
loopne
push
push
scas
mov
fs
pop
mov
add
pop
sub
dec
push
pop
call
push
cli
loopne
in
mov
adc
nopl
aam
repz
add
cmp
sti
test
push
rcl
mov
cmp
jmp
add
inc
add
push
pop
mov
and
loop
orl
mov
jb
insb
into
movzbl
dec
clc
cmc
lcall
sbb
lock
data16
sub
repnz
inc
dec
inc
mov
cli
pop
push
adcb
cli
add
jg
lock
mov
cltd
xchg
repnz
pop
ds
push
scas
insb
loop
cmc
bnd
loop
mov
add
lock
add
pop
pandn
dec
xbegin
mov
rclb
mov
ret
lds
incb
sahf
mov
xchg
sbb
pop
out
sti
fcoms
inc
out
mov
cmp
xchg
repnz
out
rclb
dec
mov
rcrl
xorl
or
add
mov
pushf
pop
mov
dec
ss
mov
xchg
hlt
cmc
loope
and
dec
popf
or
push
sub
xchg
fs
rolb
mov
ds
lret
jecxz
inc
lret
dec
aad
es
andl
mov
popl
sbb
out
pusha
sbb
subl
mov
mov
sbb
pop
cs
sub
sbb
cmc
aad
jle
ss
pop
test
adc
add
mov
mov
add
in
jecxz
sti
jmp
out
enter
in
out
imul
or
push
pop
adc
mov
subl
mov
mov
lds
loop
xor
mov
es
cld
sbb
dec
mov
push
outsb
sub
pop
xchg
ds
mov
mov
dec
sbb
data16
inc
std
mov
xchg
in
push
jb
imul
jnp
add
mov
and
ljmp
rcll
adc
filds
pop
lds
fs
adc
jnp
aam
test
cmp
mov
xchg
stos
mov
mov
jbe
mov
jl
leave
js
cld
pop
es
loopne
jmp
mov
cmp
cmp
fs
lcall
arpl
mov
das
lods
xor
hlt
fcmovb
ret
push
and
lret
loop
adc
loop
lret
cli
or
leave
int
xlat
negl
inc
mov
sbb
stos
mov
imul
push
pop
lret
aam
call
push
xlat
push
push
out
jp
ljmp
add
movsl
inc
jecxz
xchg
clc
mov
sbb
adc
into
ret
js
push
inc
xchg
mov
repnz
js
cltd
cwtl
xchg
aam
inc
jge
iret
xor
enter
cs
repz
inc
test
adc
cmp
clc
js
das
movsb
imull
stos
in
cmpsl
sub
movsl
add
sub
pop
cmp
mov
mov
mov
into
or
xor
cmp
rolb
jp
icebp
js
stc
add
sub
in
or
sbb
loop
xchg
push
add
and
jmp
pushl
scas
or
in
das
mov
aam
mov
fisubrl
mov
inc
out
pop
sarb
jl
movsb
mov
loopne
gs
cmp
push
les
mov
add
mov
enter
hlt
dec
aas
jbe
push
ror
mov
jbe
inc
stos
fdivrp
js
loop
fstps
shll
daa
sbb
aad
and
xor
sub
pusha
fbld
mov
pop
test
hlt
dec
arpl
andl
push
fildll
push
xchg
pop
mov
sbb
test
bswap
in
sbb
adc
and
cmp
mov
mov
sbb
xor
mov
jbe
or
cmovle
xor
xchg
jp
arpl
ss
sub
adcb
aaa
cltd
outsb
out
clc
jp
pop
adc
fwait
inc
outsb
shl
jp
orl
ljmp
push
add
pushf
add
outsl
rorl
mov
sbb
dec
mov
cmp
shll
repnz
push
jp
ret
pop
leave
js,pn
inc
cmp
in
imul
sahf
out
cmp
fisubrl
lcall
loope
inc
adc
daa
sbb
and
ret
push
sahf
sahf
bound
mov
addl
pop
nop
jp
and
aaa
mov
mov
and
pop
pop
push
mov
mov
dec
mov
cli
sub
mov
xor
pop
pop
out
xchg
or
xchg
adc
ds
ret
pop
fs
dec
mov
jle
pop
jle
jle
push
in
jge
mov
test
test
lret
push
ja
outsb
push
pop
sbb
adc
ret
cmp
outsb
xchg
pop
add
sbb
shl
push
icebp
mov
out
xlat
pop
inc
adc
sbb
mov
add
pusha
push
xchg
fidivs
js
insl
inc
call
lret
add
rorb
enter
xchg
cwtl
jae
inc
pusha
and
nop
test
notb
push
pop
ja
cli
aam
es
fildll
jb
clc
push
mov
ljmp
xor
ss
sbb
xchg
jne
icebp
mov
xchg
inc
test
mov
sahf
stos
into
out
shl
mov
pop
das
cld
sub
mov
pop
jbe
cmp
sti
jmp
sbb
fdivl
out
mov
or
shrl
mov
adc
scas
add
and
and
add
lcall
scas
pop
stos
push
mov
imul
mov
xchg
inc
fistpll
leave
fsubs
sub
sbbb
out
rclb
and
out
jp
push
es
stos
dec
pop
pop
pop
js
inc
lret
mov
mov
cmp
mov
loop
je
push
jg
inc
xor
or
movsl
mov
es
ljmp
aas
out
sub
aam
hlt
sbb
ficompl
call
js
mov
lea
sbb
jg
dec
aas
std
je
pop
pop
scas
test
lods
rorl
mov
xchg
test
jnp
bound
insl
sahf
xor
pop
cli
call
dec
push
ss
aam
pop
fmuls
cli
mov
pop
imul
push
mov
stos
lock
cltd
xchg
and
adc
pop
jl
imul
addb
in
cmp
or
push
jp
lock
lcall
pop
pop
or
push
xor
icebp
loop
ret
fnstsw
push
mov
jno
jge
lahf
shll
ret
and
insl
or
pop
cmp
sahf
ret
ljmp
jle
jl
mov
inc
adc
cmpsb
dec
out
scas
outsl
jno
shlb
ret
ret
xor
out
or
and
out
es
dec
xchg
orl
adc
jmp
mov
lcall
sysenter
pop
sti
repnz
daa
test
test
ss
add
pusha
jecxz
sbb
sbb
out
cld
adcb
push
mov
rcl
std
jle
lret
push
jge
clc
pushf
cs
inc
shrb
jbe
or
es
fs
or
les
gs
les
ljmp
lock
cwtl
stc
add
inc
sub
xlat
xor
xchg
scas
mov
repnz
jmp
cltd
out
rorb
or
test
xchg
mov
scas
test
loop
sbb
and
mov
push
sbb
ret
cli
and
repnz
pop
pop
js
jecxz
push
push
jl
in
jo
add
cmpb
jp
inc
sbbl
dec
push
sti
ret
aam
rol
sbb
mov
pop
mov
or
es
jbe
stos
or
sbb
outsl
push
fcoml
mov
imul
and
outsb
adc
xor
out
call
dec
inc
xchg
ds
ret
call
pop
pop
dec
pop
mov
ljmp
ljmp
jp
inc
dec
push
sbb
xchg
push
pushf
fcmovu
xchg
adc
test
aad
jle
sahf
lock
bound
ret
dec
loop
clc
mov
xor
ds
les
data16
sbb
int3
sub
push
shl
mov
test
hlt
xchg
aam
xorb
mov
test
es
test
and
shl
lock
pushf
sahf
push
and
ficomps
negl
inc
in
fs
rol
pop
mov
std
or
ljmp
das
jle
clc
in
jecxz
push
sbbb
stos
rcrl
loopne
sub
dec
pop
xchg
lret
addb
mov
scas
sbb
clc
out
test
pop
cli
testl
imul
insb
cmp
push
iret
cwtl
mov
ja
loope
dec
sahf
scas
pop
sahf
scas
cmp
sbb
ret
add
sbb
insb
jnp
adc
test
inc
insb
aas
repnz
dec
nop
ja
mov
jp
imul
sbb
push
pop
shl
add
push
jmp
xchg
popf
fdiv
jl
jge
dec
loop
inc
ljmp
mov
outsb
and
push
jl
shr
aaa
sbb
andb
xor
jg
inc
orb
push
adc
add
sub
mov
xchg
ror
and
mov
leave
dec
mov
aas
fstl
lods
jp
mov
pop
pop
add
lods
ret
stos
fimull
push
aad
inc
mov
inc
pop
or
dec
pop
push
bound
jo
cs
jo
lahf
out
cmpsl
cmc
repnz
out
dec
mov
or
push
pusha
jge
test
push
jb
jge
js
or
pop
pop
cmp
jbe
dec
fcom
push
rolb
sbb
sbb
mov
enter
fs
fisubl
hlt
clc
or
xchg
jge
pop
sbb
dec
subb
aas
mov
aaa
faddl
mov
xchg
dec
jb
repnz
xchg
mov
or
push
mov
cmp
clc
je
mov
xchg
xchg
pop
jp
aas
mov
mov
es
inc
addr16
and
pop
inc
ret
add
js
and
in
push
lret
sti
pusha
ljmp
push
loopne
sti
loope
stos
dec
pop
cli
adc
lahf
hlt
rorl
enter
ss
ficompl
xor
cld
or
cwtl
das
and
pop
sub
ud2
xlat
cmpb
fisubrl
ret
mov
cmpl
fs
push
cs
add
mov
jbe
mov
cmc
negb
xchg
insb
adc
or
xchg
push
mov
int
push
mov
inc
out
and
sti
adc
jb
pop
ffreep
cmp
inc
cmp
daa
loop
mov
xchg
insb
pop
sbb
pop
mov
dec
aam
mov
and
lods
imul
movsb
xorl
es
pop
cmp
icebp
push
mov
loopne
pop
push
scas
inc
out
hlt
ss
mov
pushw
ds
es
or
xchg
jp
hlt
jecxz
ja
lret
lret
xor
insb
jl
lock
adc
xor
cltd
pushf
pop
xchg
cmpsl
imul
cmp
enter
sub
je
add
dec
pop
out
test
decb
in
xor
mov
ds
lea
xchg
mov
adc
cmp
fadds
mov
xchg
sub
cs
xchg
pop
adc
rclb
add
inc
jmp
jbe
inc
xchg
dec
loope
sbb
dec
mov
xabort
sarb
jmp
in
int
sub
xor
clc
push
fadd
dec
lahf
loop
cwtl
lret
mov
faddl
js
fisttpl
loopne
lods
dec
leave
inc
lods
inc
sub
clc
cld
icebp
fwait
mov
es
xor
cld
insb
repnz
fimuls
rcll
sbb
fiadds
xor
pop
clc
push
add
xchg
jmp
maxps
push
icebp
fcoms
gs
shlb
mov
adc
fwait
dec
mov
or
cwtl
bound
jp
gs
rolb
inc
cld
mov
pushl
nop
cs
test
out
add
loopne
out
lods
sub
pop
add
jp
pop
xor
int3
adc
push
push
repnz
pop
and
xchg
jp
jne
inc
in
push
out
sub
mov
inc
jle
dec
in
mov
ss
pop
add
test
mov
pop
cmp
add
sbb
jmp
jne
push
aas
jle
leave
xchg
loopne
xor
das
pop
jl
inc
mov
mov
xorb
add
mov
rcl
lret
jbe
xchg
dec
popf
lods
dec
push
xchg
std
repnz
jl
mov
pop
pop
xchg
add
jge
cwtl
mov
orb
call
hlt
cmp
or
in
sub
jnp
addr16
cmp
cli
and
fstl
sub
popa
loopne
jmp
cld
hlt
cmp
call
mov
jecxz
pop
clc
sarl
push
sar
xor
daa
or
and
push
mov
cmp
loop
bound
mov
or
pop
push
cltd
mov
into
into
lea
scas
sub
inc
push
push
test
sub
lahf
sub
lahf
xchg
mov
add
sbbb
mov
ret
and
xor
push
xor
punpcklwd
into
movsb
pop
mov
push
div
sti
aad
lret
mov
sub
es
and
hlt
push
repnz
addb
mov
and
sub
popl
mov
stos
aam
icebp
xchg
rclb
or
mov
pop
jge
mov
jl
push
addl
ficomps
out
jnp
loope
pop
cmpsb
sti
out
push
jbe
sahf
jp
clc
xchg
rolb
data16
loop
call
stc
mov
xchg
movsb
jo
xor
push
and
pop
adc
xchg
push
movsb
in
jne
shll
jp
add
outsl
addr16
lds
jbe
fcompl
mov
loop
scas
outsb
fwait
cmp
jg
inc
les
xor
jecxz
sti
cld
ljmp
sbb
cmp
cmp
stc
push
hlt
imul
sub
lahf
xor
fstl
loop
push
inc
cmp
sahf
sub
inc
jecxz
dec
and
fs
push
jo
pop
jo
lods
mov
cmc
add
test
sbb
sub
ret
add
cmp
cld
jno
jbe
mov
adc
sub
rol
hlt
cmc
jbe,pn
dec
loopne
js
xchg
push
aas
rorb
adc
ret
test
imul
mov
push
mov
hlt
call
sub
inc
loope
cwtl
pop
xchg
test
sbb
test
insb
shlb
and
aas
scas
pusha
xor
mov
mov
mov
pop
faddl
js
add
fs
out
fsqrt
and
and
mov
inc
lea
pop
inc
cld
mov
out
or
hlt
call
or
lock
jl,pt
cltd
aad
adc
pop
add
jbe
lds
push
fdivrl
or
cmp
xor
ja
push
cmc
lahf
in
add
xchg
rcl
xor
stos
xchg
clc
add
shlb
mov
aas
jl
lret
cmp
xchg
push
and
xor
mov
mov
sbb
mov
and
rorb
add
imul
movsb
fs
cmc
fstl
push
mov
shr
fbld
subb
or
roll
pusha
jp
or
out
lock
loope
pop
cs
push
sarb
or
push
mov
sub
jp
pop
incb
inc
push
or
aaa
adcl
shrb
jmp
xor
loop
sub
ret
mov
cmpsb
push
pop
gs
test
mov
mov
dec
inc
mov
cli
out
fcmovnb
inc
inc
std
fwait
adc
jge
mov
inc
leave
shr
ds
push
push
adc
pop
adc
sbb
stos
xchg
mov
mov
cmp
or
movsl
and
pop
loope
xor
pop
insb
imul
push
or
push
shlb
loopne
and
xorb
ds
and
stc
popa
jge
cmc
fcmove
xor
in
mov
dec
mov
fists
mov
inc
xchg
shl
add
or
cli
lock
mov
mov
je
xchg
shrb
lods
insb
in
push
js
xchg
call
out
inc
sti
pandn
mov
loopne
ficoml
loopne
inc
inc
add
add
xor
orl
add
inc
adc
mov
dec
ffreep
mull
rolb
mov
movsb
push
shlb
shlb
or
mov
push
stos
pop
inc
mov
push
or
rol
dec
repnz
pop
out
and
fldenv
xchg
loop
lret
jg
push
into
xor
andl
mov
loop
icebp
cs
mov
ds
insb
pop
xchg
adc
xchg
mov
push
aad
mov
sbb
enter
ret
rol
sub
cmp
push
loopne
xchg
lds
sub
cwtl
inc
out
clc
sub
out
iret
adc
xlat
ficomps
push
xchg
aaa
mov
mov
lock
mov
xor
or
roll
outsb
daa
or
mov
mov
in
mov
cmp
sbb
cli
pop
into
pavgb
cmp
cmpsb
je
inc
cs
addb
cmp
fidivs
sbb
cli
ds
xchg
mov
push
test
jle
jl
out
shlb
call
mov
sti
mov
xor
fimull
pop
dec
ret
pop
loop
ret
dec
movsb
pusha
call
xor
sti
insb
jl
pop
mov
jno
icebp
sbb
ret
adc
or
inc
pushf
aas
pop
js
xchg
cmc
inc
or
test
pop
xor
testl
or
das
adc
and
sub
mov
pop
out
mov
clc
mov
xor
icebp
movb
ds
cmpb
loope
inc
ret
inc
xchg
or
leave
out
dec
sbb
push
mov
inc
jp
movb
clc
sahf
xor
shlb
jecxz
movsl
and
xor
lcall
mov
jbe
push
xchg
mov
cmp
jle
inc
mov
movsb
dec
sbb
cmp
call
mov
cmp
ret
clc
or
clc
push
mov
pop
addb
cli
and
xor
adcb
dec
xchg
and
popf
mov
inc
jecxz
sub
daa
hlt
jecxz
mov
or
jmp
jne
pop
mov
call
mov
adc
in
cli
lods
push
cmp
or
add
ss
sti
inc
push
ret
dec
outsb
jnp
popa
inc
aas
push
sbb
aam
int3
and
outsb
cmp
iret
add
and
clc
mov
rol
movb
adc
add
int
cli
mov
je
roll
call
cli
lock
loop
sub
mov
dec
loop
mov
outsb
cmp
cmpsb
pop
pop
paddsb
sbb
mov
popa
loope
fwait
pushf
sub
mov
or
xor
and
jo
lods
sbb
push
imul
mov
iret
mov
pop
arpl
or
loope
mov
cmc
mov
mov
jle
mov
fs
and
mov
inc
cli
scas
ds
lock
or
dec
pop
push
push
sub
adc
mov
mov
xorb
scas
add
ror
lahf
orl
fiaddl
out
inc
out
pop
out
aaa
scas
inc
mov
notl
add
add
ret
adc
xchg
and
mov
jbe
mov
aad
xchg
in
sub
dec
hlt
lcall
jbe
or
out
ljmp
pushf
orb
jp
adc
inc
movsb
out
fiaddl
les
dec
adc
mov
pop
jo
fisubl
scas
fadds
bound
in
jo
push
lock
clc
push
fsubrl
pop
push
mov
iret
ss
repnz
rolb
mov
inc
mov
push
mov
addr16
pop
cmp
ljmp
cld
push
cld
jnp
xchg
sub
call
pop
fadds
arpl
test
inc
mov
sbb
pop
ljmp
push
repnz
jle
insb
call
pop
lea
jge
pop
test
pop
mov
cmc
sahf
sub
jecxz
push
insb
cmp
xchg
js
jl
dec
jge
cltd
jo
jmp
pop
mov
rcl
outsb
insb
orl
je
test
jmp
and
std
in
dec
mov
cs
es
outsl
test
std
xlat
or
subb
pop
jp
pop
shlb
or
lret
add
js
add
pop
jmp
icebp
ret
sbb
cmpsb
in
lea
xorb
test
mov
out
mov
jl
mov
push
inc
pop
push
sbb
adc
adc
pop
fcomps
loopne
negb
push
loopne
jl
jecxz
shrl
int3
loopne
or
ficoml
mov
xor
mov
xlat
in
sbb
inc
mov
sbb
cmp
ds
push
mov
lcall
orl
inc
fists
insb
outsl
jbe
fimull
mov
bound
cmp
call
fcompl
cmp
cmp
fidivrl
dec
cmp
push
inc
pop
inc
sbb
icebp
dec
aam
rcl
setl
jg
into
sahf
sbb
shl
mov
pop
inc
add
lret
jge
jo
scas
dec
push
cmc
mov
push
scas
scas
push
pop
or
cmp
cs
mov
scas
fistpl
ds
cltd
clc
sub
negb
push
sub
xchg
movb
add
mov
ret
jge
scas
inc
cli
rol
call
js
lods
push
inc
rcrb
pop
rclb
dec
dec
das
sbb
int3
movlps
xchg
stos
loope
pop
pcmpgtd
sub
sbb
push
mov
jne
mov
hlt
xchg
nop
mov
loopne
cld
inc
mov
sbb
add
es
sub
sub
cmp
add
sbb
icebp
mov
stc
sub
or
popf
js
adc
push
dec
push
in
inc
ljmp
je
pop
cmp
test
test
add
out
dec
push
jge
cmpb
cvtps2pi
jbe
pop
inc
rol
clts
xchg
in
mov
movsb
dec
fstpl
ret
jle
nop
jp
sub
fdiv
add
pop
jle
mov
rorl
loop
loopne
in
sahf
mov
xor
data16
jmp
inc
call
xor
or
add
scas
sahf
fnstcw
jl
insb
sub
pop
mov
gs
xor
insb
mov
addl
cmp
push
mov
fldt
repnz
push
and
sbb
ss
cwtl
scas
lock
mov
cwtl
in
insl
inc
sub
cmp
sub
lahf
xchg
dec
cmpb
icebp
jmp
pushf
pop
cld
outsb
mov
or
jge
dec
and
cmpsl
rorl
cwtl
sbb
icebp
loop
imul
xchg
js
mull
mov
ljmp
sbb
pop
and
ja
popf
out
rclb
test
and
cmpsb
lods
mov
push
push
mov
mov
sti
inc
jmp
shlb
xor
ret
lock
aam
xchg
sub
ds
into
imul
cli
ficompl
pop
lock
mov
je
mov
test
xchg
pusha
mov
hlt
mov
xor
inc
pop
mov
inc
sbb
mov
lds
mov
adc
jl
js
dec
shrb
test
fucomip
add
sbb
jno
dec
jbe
jo
ljmp
and
sbb
mov
push
dec
cli
and
sbb
sbb
rcrl
push
push
bnd
mov
mov
addr16
cmc
cltd
orb
ds
dec
cwtl
out
lock
punpckhdq
testb
dec
in
push
jle
push
sti
hlt
aas
sub
lea
sbb
inc
push
insb
cmpsb
xor
mov
clc
push
xor
scas
and
ja
not
js
jle
fcoms
mov
out
or
rcrl
stc
test
add
dec
shll
and
es
push
ret
sbb
es
call
xorl
shl
int
pop
loope
xchg
imul
idivl
cmp
test
dec
sbb
pop
cltd
mov
in
cmp
pop
add
mov
mov
mov
call
mov
cmp
cmc
pop
rolb
xchg
ss
and
imul
js
xor
clc
imul
and
xor
dec
cli
mov
mov
loop
jb
sbb
out
adc
push
bnd
ljmp
mov
jnp
mov
loope
add
and
shrb
scas
pop
add
outsb
mov
lock
out
lock
test
cs
cs
ret
shrb
lods
sub
lea
mov
dec
or
mov
subb
pusha
stos
xor
xchg
mov
adc
xchg
cvtps2pd
sbb
hlt
call
sub
in
ds
rol
xchg
loopne
sub
xchg
xor
insb
push
es
dec
sbb
ljmp
loop
jbe
aas
mov
sbb
add
xchg
sub
fwait
lock
sahf
xchg
bound
lock
add
jb
in
jno
sub
pushf
fimull
add
lds
push
mov
int3
sub
mov
ds
xchg
push
ljmp
leave
inc
pushf
sbb
pop
sahf
lods
pop
mov
cld
orb
jecxz
repz
xor
outsl
loopne
stos
int3
and
cmp
mov
push
cmc
jno
xchg
push
insl
inc
pop
push
mov
clc
jecxz
into
movsb
push
jo
or
jecxz
scas
shl
sub
sahf
incb
fisubs
pop
out
dec
outsb
sarl
pop
lcall
movsb
mov
xchg
fists
xchg
jne
xor
dec
jge
je
dec
sahf
pop
jge
jo
test
sub
or
jge
xor
test
daa
test
mov
rcrb
shrl
cli
xchg
jo
adc
jmp
mov
into
xchg
je
icebp
xchg
mov
emms
push
js,pt
jmp
mov
fiaddl
or
add
jecxz
jo
push
push
inc
inc
cld
dec
fsubrl
in
or
cli
adc
inc
sbb
fs
and
setle
cmp
cmp
xchg
dec
xchg
ja
daa
inc
pop
aam
andl
push
pop
loopne
cmpsl
movsl
push
jo
push
repnz
jle
cmc
lods
inc
scas
and
outsl
pop
push
adc
icebp
jecxz
mov
ss
fsts
mov
fdiv
mov
ja
sub
add
xor
jle
ljmp
pop
pop
pop
incb
push
movups
inc
lea
jo
and
push
ss
data16
sbb
jae
and
scas
jle
cmpsl
jle
in
fisttpll
loope
jecxz
mov
jmp
addr16
inc
mov
cli
sbb
sahf
fs
repnz
fsubl
sbbl
jge
xor
cmp
cs
rcrb
jmp
mov
sahf
test
mov
push
jle
das
pop
pop
dec
aam
hlt
add
ljmp
sbb
insl
mov
xor
cmpsb
sub
add
add
mov
push
jge
sbb
cmc
sbb
div
dec
mov
or
mov
divb
or
pushf
jecxz
mov
loopne
shll
mov
or
bnd
dec
das
outsb
lret
test
add
add
fst
in
scas
neg
fdivrl
shlb
add
cmpsl
lds
nop
cmp
loopne
hlt
adc
mov
mov
and
cmp
popa
jecxz
mov
pop
ljmp
cmp
out
adc
leave
clc
std
inc
or
icebp
loope
jae
fistl
mov
sti
arpl
add
sahf
stos
lods
fimuls
add
stc
psubb
xchg
data16
lcall
cli
lock
mov
sbb
lock
add
clc
fcoml
mov
lods
js
test
xor
loop
and
xchg
js
andb
cmp
or
dec
push
stos
roll
popf
and
fistps
cmc
push
push
xor
xor
mov
pop
mov
push
es
jp
mov
jecxz
add
pop
pop
and
mov
outsl
out
rcll
movsb
mov
mov
nop
mov
loopew
shrb
data16
and
call
stos
pop
xor
ret
mov
ljmp
cmp
loop
popa
std
int3
cltd
sub
dec
mov
sub
inc
sub
adc
mull
lock
lods
cmp
jmp
rorl
mov
ja
das
mov
fisttpll
jle
cli
data16
out
insb
mov
stos
add
mov
mov
push
jl
js
stc
movsb
mov
inc
loopne
ret
push
sub
jge
js
or
mov
push
cmpsl
push
in
mov
lcall
shlb
mov
sahf
xlat
mov
mov
inc
call
mov
jle
push
call
popa
sbb
push
shrb
sub
out
xchg
sahf
jo
sahf
jb
sbb
cmpsl
pop
xorb
dec
aas
pop
data16
jp
adc
sub
stos
push
inc
sarb
cmp
scas
in
inc
test
mov
push
cmpsb
lock
cmp
cmc
loope
mov
fwait
pop
les
pop
je
std
insb
pushf
imul
jp
call
mov
sar
pop
push
sub
es
mov
lods
dec
dec
cli
ret
cld
out
mul
add
dec
push
out
addr16
or
ficomps
lea
or
leave
dec
mov
jno
sub
jne
add
pop
stos
mov
jp
or
jmp
rcl
lods
shrb
push
dec
shlb
push
lcall
sub
xorb
xor
gs
out
or
scas
mov
mov
xor
daa
ljmp
jecxz
rorb
aam
fiadds
loope
repnz
dec
jbe
sbb
xchg
adc
insb
mov
cmp
push
in
push
sarb
rolb
lock
pop
enter
out
add
mov
mov
in
ss
pop
cmp
cmpb
pop
icebp
mov
clc
sub
fimuls
lock
xchg
es
or
fcoms
add
mov
shll
pop
inc
jl
mov
jle
icebp
ret
fsubrp
cmp
std
lcall
dec
dec
cmpsb
fstpt
or
adcb
ss
enter
jg
cmp
xchg
shl
push
pop
pusha
lret
test
scas
outsb
clc
loope
or
outsl
adc
mov
ret
adc
rorb
ss
pop
les
ret
cmp
jge
inc
lret
dec
aas
jle
rclb
sbb
repnz
test
xorb
outsb
fimuls
cld
jb
aad
push
adc
movsb
movsb
inc
pop
loopne
lock
xor
push
cmp
xor
push
cld
test
sbbb
push
add
add
jo
fdivrp
mov
mov
mov
mov
mov
cmp
sbb
push
hlt
sub
iret
outsl
lret
dec
loopne
popa
cmp
les
sub
or
scas
push
sub
sub
fsubrp
fists
mov
jno
xchg
xchg
fdivl
call
or
je
scas
dec
jl
sub
cmpsb
lcall
push
negl
sub
push
inc
test
movsb
testb
outsb
add
pop
lcall
int
cs
fcomip
loope
add
in
mulb
add
idivl
movsl
push
fimull
test
xor
clc
cli
jge
fcmovb
mov
sbb
cmpsb
imul
or
add
push
pop
push
into
mov
inc
inc
and
cmp
mov
loop
sub
rorb
call
mov
nop
push
je,pt
add
sbb
je
push
repnz
js
adc
je
jl
ds
mov
icebp
loopne
inc
aas
dec
je
fwait
ja
andl
pop
jbe
aam
pop
push
push
testb
pop
cltd
ret
data16
mov
fildll
mov
mov
repnz
mov
inc
mov
xchg
lock
xchg
sbbb
daa
or
mov
aam
cli
adc
push
ds
outsb
in
adc
add
arpl
inc
int3
cli
shrb
pop
jl
stos
push
out
icebp
pop
sub
pop
mov
push
shrb
adc
mov
inc
jge
repz
scas
enter
addb
inc
xlat
ds
xlat
orb
outsb
test
or
cld
lock
sbb
and
shlb
sbb
lods
lods
mov
cmp
mov
rcrl
ds
and
aas
mov
mulb
or
inc
add
xchg
jne
sahf
clc
mov
rcl
jle
into
push
xchg
lcall
cmpsl
mov
jl
hlt
mov
add
pop
bound
jnp
inc
test
mov
inc
clc
cli
jb
sub
shrb
ds
pop
ds
jmp
jmp
lds
rcrb
mov
daa
xor
shr
xor
and
jg
pop
repnz
push
sbb
clc
or
mov
push
xchg
sbb
mov
xor
push
mov
xor
sub
jmp
xchg
pop
and
shll
lcall
dec
xchg
lret
jb
xor
mov
test
div
jge
ss
mov
int3
push
mov
and
loope
aam
hlt
mov
sahf
out
aad
cmp
rol
jp
ret
out
das
or
add
mov
repnz
push
xor
nop
jle
jle
or
dec
cmp
clc
scas
pop
mov
adc
mov
dec
xchg
dec
mov
xor
push
in
ret
adc
mov
push
mov
pop
jle
loopne
inc
mov
push
shlb
xchg
into
loop
jmp
scas
movsb
ljmp
iret
shlb
lea
jge
jecxz
pushf
jmp
cs
or
cmp
pop
jnp
ljmp
adc
dec
insb
push
std
pop
iret
imul
xlat
mov
push
pop
push
adc
std
pop
mov
inc
test
or
mov
jo
loop
inc
pop
push
and
sti
inc
shlb
push
dec
call
call
ficoms
jle
loope
ss
pushf
test
imul
ret
shrb
mov
loopne
loop
fimull
mov
inc
movsb
mov
adc
inc
adc
sbb
imul
sbb
scas
add
push
sbb
fisttps
aad
repnz
mov
popf
stos
stos
mov
sbb
inc
mov
je
call
jle
in
pushf
dec
jne
mov
out
addl
jg
and
loop
adc
in
pop
ret
cli
mov
out
bound
pop
sti
cld
mov
xlat
arpl
push
and
inc
dec
fwait
sbb
and
cmc
xor
sti
push
mov
ss
inc
xchg
fisubrl
in
cli
testb
fidivrs
jmp
enter
and
sbb
js
pop
jp
add
push
fidivrl
ds
cli
enter
add
adc
sbb
mov
aas
jo
hlt
inc
add
mov
mov
adc
adc
jp
push
mov
and
cmp
pop
xchg
std
or
sub
dec
cmp
jl
cmp
out
mov
lods
popf
out
dec
xchg
call
pushf
lret
add
or
sub
push
add
scas
aam
push
lods
ret
daa
jmp
adc
out
add
stos
jae
cli
ss
mov
daa
and
arpl
cmc
ret
jp
inc
inc
xor
xor
pop
icebp
shl
push
je
lods
shr
rol
aaa
lahf
pop
daa
stos
in
loope
push
out
inc
mov
sub
adc
scas
add
mov
mov
lahf
test
mov
clc
cmp
jbe
jle
call
int3
out
test
inc
jne
hlt
xchg
icebp
or
mov
cmp
lret
or
cs
ret
js
icebp
add
insb
add
sbb
dec
movsb
xchg
jle
in
and
jle
out
cmpb
push
or
mov
pushf
and
sub
repnz
pop
dec
mov
fucomip
adc
add
add
sub
rol
cmp
jle
pop
mov
adc
pop
ja
mov
mov
test
mov
shrl
cmpsl
jbe
or
jb
push
xor
fwait
ljmp
jb
ret
je
inc
loop
mov
mov
iret
pushf
out
cli
testb
inc
mov
fisubrl
jbe
xorl
mov
std
add
sbb
jbe
jge
comiss
sbb
and
sub
add
cli
mov
hlt
mov
xchg
adc
lods
dec
mov
pop
mov
in
out
xor
push
pop
mov
dec
push
fdivl
stos
lahf
imulb
dec
mov
shlb
inc
clc
add
xchg
test
aas
jbe
sbb
sbb
std
nop
lock
add
push
aas
and
lahf
data16
pop
jl
rcr
fisubs
in
clc
pushf
mov
rsm
nop
les
and
ljmp
aas
jge
jno
adc
jmp
je
hlt
sub
jno
aas
jge
dec
stos
clc
les
int
es
js
mov
add
adc
cmp
xor
shrb
bound
add
xor
out
pop
cmp
es
cld
push
loop
mov
test
imul
adc
hlt
mov
pushf
in
mov
cmp
mov
sbb
xor
push
loopne
movb
mov
movsb
mov
movsb
insl
in
add
jecxz
mov
push
mov
mov
cmp
or
adc
aas
pop
aas
popa
pop
cmp
mov
mov
mov
mov
inc
mov
mov
cmp
mov
inc
es
ljmp
mov
lods
add
add
icebp
daa
lret
cmp
icebp
adc
mov
ss
add
jb
cmpsb
sbb
push
and
lret
ficoms
dec
bound
sub
jo
pop
out
popl
ja,pt
pop
in
xchg
in
mov
and
push
fsts
push
ja
loop
leave
cmp
in
pop
mov
mov
cmp
fs
mov
mov
jl
cmp
jge
jp
lret
or
inc
aas
and
mov
rol
jnp
repnz
fisubl
pop
push
cmp
cmpsb
jb
aad
adc
push
cmp
dec
dec
sbb
ret
push
push
xor
jp
out
test
jo
cs
mov
fmul
pop
scas
adc
lods
push
into
jo
and
or
ret
push
push
pop
mov
inc
sarb
adc
push
mov
mov
sub
or
gs
adc
cmpsl
incb
cli
repnz
rol
mov
push
or
inc
jo
mov
je
sub
nop
mov
push
pop
dec
lock
mov
pusha
xor
or
pop
mov
mov
orl
test
mov
inc
adc
hlt
jecxz
das
scas
jb
add
pop
mov
cmpsb
mov
jp
sti
loopne
inc
aam
dec
jnp
shlb
add
xor
or
xchg
add
inc
or
fdivr
and
add
cmp
cld
dec
inc
jbe
jecxz
pop
sub
clc
lret
out
data16
lds
rolb
lods
addr16
xchg
hlt
xor
push
xchg
je,pt
lock
sbb
jmp
loop
pop
dec
mov
pop
dec
adc
lahf
jmp
or
jb
in
jle
icebp
mov
inc
jbe
mov
in
cmp
or
shlb
test
out
jbe
and
out
dec
jb
jbe
or
cld
cli
movsb
xchg
pop
faddl
loop
test
inc
pop
cmpsl
xchg
fisttps
adc
sarl
es
cmp
sarb
push
pop
je
lock
rorl
push
jecxz
fdivr
pop
xchg
hlt
ljmp
cmp
cmc
jno
hlt
mov
jp
jo
xor
pop
in
fisubrl
pop
lock
jg
ljmp
loope
inc
sbb
sub
repnz
mov
xor
dec
int
cmpsb
pop
dec
loopne
cmp
sti
push
xchg
lock
sub
js
clc
hlt
fwait
xchg
xor
or
pop
jge
loopne
xchg
loope
mov
subl
lods
jle
lahf
xor
into
cmp
mov
sti
pop
mov
out
fisubrl
xor
xchg
adc
inc
je
loop
loop
jge
xchg
push
push
pop
mov
mov
lock
jl
mov
dec
add
inc
and
sub
ret
push
popa
xchg
sub
cwtl
xor
xor
nop
xor
orl
and
insb
dec
mov
rolb
and
fistl
mov
rolb
sbb
lods
inc
std
mov
test
out
mov
xchg
movsl
pop
sbb
std
inc
loope
mov
loope
xorb
popa
insb
aam
add
fbld
ret
cmp
jle
mov
mov
loop
leave
js
ljmp
lock
cmpsb
ret
call
mov
push
ss
sub
pop
fiadds
pushf
and
cmp
mov
mov
clc
inc
pop
dec
scas
inc
push
insl
mov
test
sti
in
ja
adc
fcoms
ds
push
int
out
rcl
mov
mov
dec
js
aam
sbb
in
stos
pop
out
orl
cmp
sub
ds
jle
push
insb
ret
ss
pusha
hlt
add
xchg
imul
sahf
sbb
stos
adc
sbb
mov
ret
push
aam
sarb
movsb
mov
xchg
jl
out
movsl
xor
popl
rorb
dec
xchg
lds
mov
cmpsb
mov
std
adc
xchg
cmpsb
xorb
out
daa
pop
inc
loopne,pn
adc
in
inc
sbb
jle
pop
lahf
scas
xor
sahf
add
cmpsl
pop
repnz
test
in
or
jo
ljmp
test
push
mov
pushf
lods
cmc
rcl
xchg
test
jl
sub
jecxz
mov
and
clc
and
sub
lcall
xor
mov
leave
jns
call
data16
cwtl
mov
jnp
loope
pushl
das
add
mov
add
sbb
aam
xor
ret
adc
hlt
leave
pop
pop
das
push
cmp
xor
mov
fsub
mov
js
lods
mov
xchg
test
mov
or
mov
repnz
add
xchg
sbb
ljmp
inc
mov
mov
and
out
push
pop
inc
push
arpl
cld
mov
fmulp
scas
push
and
xor
repz
mov
pop
jge
pop
jle
nop
push
cmp
dec
loope
aad
in
sub
cmpsl
sbb
xchg
in
test
mov
add
sub
in
pop
dec
aaa
es
dec
mov
ret
add
sbb
and
xchg
movb
inc
movsl
ret
das
call
pop
dec
jge
call
pop
jo
data16
rclb
lret
arpl
and
sub
xchg
loopne
rcl
inc
fidivs
ss
mov
or
jae
push
push
sub
inc
jne
outsl
ljmp
call
or
mov
pop
out
add
outsb
xchg
les
insb
xor
ret
inc
inc
addr16
and
lahf
jne
loopne
hlt
test
sbb
ljmp
cmp
ss
popf
lods
pop
mov
nop
cmp
insl
in
and
in
push
or
ss
pop
scas
sahf
dec
pop
jg
fdivs
xchg
mov
lea
and
push
jne
jns
shlb
outsl
xor
out
insb
in
lock
sahf
add
jge
fistpll
andb
jb
divl
and
hlt
inc
scas
jecxz
push
sbb
mov
loopne
add
jl
enter
mov
jle
mov
pop
mov
xchg
pushf
pop
movsl
cwtl
mov
movsb
dec
adc
addr16
mov
dec
out
sbb
ret
jle
adc
clc
cld
divb
jecxz
adc
sub
cmc
hlt
cld
and
sub
mov
lods
inc
pushf
cs
mov
pop
push
dec
sbb
sbb
and
fs
hlt
hlt
loop
adcl
push
std
icebp
jmp
sarb
cld
pop
sti
scas
cmp
fwait
ljmp
xor
xor
lret
inc
dec
jno
clc
jle
js
jge
cwtl
sub
jle
shlb
pop
testb
jge,pt
xchg
out
call
inc
cmp
rolb
push
jns
mov
push
sbb
sbb
out
xlat
testl
ret
nop
rorl
pop
movsb
sbb
out
or
movsb
mov
dec
cmpsb
sbb
clts
push
aam
pop
scas
jle
adc
in
ret
cld
push
pop
sbb
pop
lahf
and
loope
ss
push
out
shrl
call
ret
inc
or
add
push
sbb
ficoml
inc
cs
scas
scas
je
jle
adc
add
out
add
aad
or
or
test
aad
push
push
in
jle
xor
rcr
bound
dec
nop
mov
mov
bound
lret
pop
fbld
dec
mov
repnz
push
add
addl
xlat
mul
ds
adc
and
xor
mov
aas
push
adc
movsb
lcall
pop
insb
jecxz,pt
add
mov
cmp
je
jle
test
pushf
pop
sarl
mov
push
add
cs
ljmp
rolb
enter
movsb
dec
and
lods
test
mov
test
insb
loop
ss
mov
out
and
test
cmp
ds
test
add
mov
divb
pop
das
sub
xor
mov
adc
cmp
adc
stos
sahf
inc
mov
lcallw
and
call
loop
lock
mov
mov
mov
jecxz
inc
mov
jo
hlt
xor
cmp
les
mov
lods
into
xchg
dec
arpl
loop
gs
enter
sahf
push
scas
and
nopl
push
imul
pop
sbb
mov
aaa
lods
inc
es
cmp
inc
push
jp
jo
nop
mov
push
mov
mov
pop
jp
dec
or
push
mov
cmp
or
clc
das
push
sub
gs
mov
lahf
xor
fisubl
cmp
mov
and
jb
adc
lds
fnstsw
adc
sub
adc
aam
out
cmp
pop
mov
mov
and
inc
lock
lcall
push
cmp
cmpb
sub
sbb
enter
push
insl
int3
fcmovbe
inc
mov
bound
testl
out
fimull
loope
inc
cmpsb
loopne
jp
popa
aaa
push
testb
loope
inc
fadd
pop
sbb
out
aaa
hlt
rolb
sar
insb
sub
xchg
movb
in
clc
pop
lret
cmp
cmp
adc
cmpsb
pop
enter
jl
pop
lock
pop
mov
inc
adc
pop
cmp
in
sub
and
dec
add
pop
fdivr
inc
pusha
pop
mov
jge
pop
movsb
jb
xchg
sbb
mov
jl
cli
div
jge
fisubrl
cmpsb
mov
sbbl
ss
mov
jo
repz
cmp
dec
insb
xchg
mov
cmp
pop
mov
loop
add
and
jns
hlt
pop
std
movsb
and
orb
dec
test
loop
inc
xchg
mov
pusha
out
shrb
fldl
dec
xchg
pusha
es
fsubp
dec
pop
mov
xor
pop
out
or
jle
test
jb
sbb
or
sub
xchg
ds
mov
pop
cli
imul
inc
dec
push
bound
das
ds
jb
aas
cmp
jne
sarb
or
bound
push
pop
adc
je
ljmp
clc
loopne
lret
cwtl
enter
sub
jmp
and
aas
into
insl
inc
dec
pop
repnz
mov
ret
int
add
jle
bound
mov
insb
addr16
fcoms
inc
aam
pop
sub
xchg
pop
fbld
loope
aas
fs
jns
aam
jnp
xchg
ror
call
notl
loope
pop
hlt
push
int3
mov
pop
data16
mov
mov
pop
pop
push
mov
mov
loopne
daa
test
mov
sub
xorb
mov
add
sbb
jp
mov
ret
pop
test
pop
pop
xchg
mov
das
stc
mov
pop
mov
or
jmp
lret
clc
stos
pop
aas
add
imul
sbb
xchg
jne
xor
addr16
sub
push
bound
cmpsl
shr
mov
js
fs
cmpsb
add
jl
ret
mov
in
add
xchg
and
nop
lock
jb
mov
sar
ds
popa
and
test
in
ret
test
loop
std
lock
cltd
bound
and
lahf
ss
in
add
xlat
rclb
fidivl
sbb
push
outsb
cmpb
sub
mov
mull
test
mov
testb
into
lcall
sub
mov
pop
mov
cwtl
or
rcrb
fidivrs
pop
dec
loopne
ja
inc
rorl
jl
aad
hlt
and
andb
sbb
call
shl
xor
xchg
ds
or
lods
add
inc
mov
add
lds
add
loope
push
mov
adc
pop
inc
pop
add
sub
adc
les
pop
or
push
mov
mov
fs
xchg
out
fs
stos
mov
adc
mov
and
fsubr
or
sbb
movsl
aad
movsl
cmp
out
dec
mov
roll
jb
call
popf
out
adc
add
mov
bound
mov
loopne
mov
std
push
fcmove
mov
sti
adc
jp,pn
or
out
push
das
cwtl
jae
jae
jo
popa
dec
xor
xchg
fcmovne
add
jae
data16
push
xor
popa
imul
mov
scas
mov
xchg
mov
addr16
and
cli
pop
add
mov
xchg
push
xchg
loopne
cwtl
sahf
fcoml
xchg
cmc
pushf
adc
pushf
push
add
or
cmovp
mov
test
cmc
lret
subb
jg
into
push
aad
out
stos
mul
sub
out
clc
xchg
jo
orb
and
rol
xor
iret
xchg
lds
jecxz
dec
ret
mov
imul
ret
push
rolb
inc
inc
clc
fcmovnb
inc
call
jnp
jg
add
sahf
mov
inc
pop
pusha
ret
rorb
scas
nop
inc
pop
adcb
in
dec
jecxz
scas
cmp
inc
sbb
ficoms
push
pop
sub
xchg
jbe
sti
or
imul
sub
cwtl
add
aad
test
adc
orb
adc
pushf
iret
pushf
inc
mov
ffree
cmp
arpl
push
push
pop
mov
loope
sub
les
pop
jecxz
mov
mov
inc
out
sub
enter
bound
test
lock
push
clc
jecxz
and
int
push
xchg
inc
adc
es
out
xchg
out
xchg
pop
rcrb
or
stos
orl
sbb
xchg
test
dec
mov
orb
adc
push
mov
mov
pop
sub
mov
sbb
mov
mov
jl
sbbl
in
mov
call
aam
ja
jp
inc
ljmp
pop
adc
and
pop
xchg
in
shlb
std
inc
mov
pusha
add
and
mov
in
mov
test
adc
xchg
xor
xor
in
icebp
and
loop
lds
fs
es
leave
jp
imul
sbb
mov
ret
cmp
or
sub
ret
mov
or
sub
cmp
sbb
mov
add
lock
mov
aas
mov
cmp
ljmp
cmp
test
xchg
push
push
das
sbb
pop
jecxz
lahf
and
push
sbb
adc
jp
fisubrl
xchg
insl
lcall
paddb
inc
idivb
lcall
insb
mov
scas
sub
jecxz
dec
shlb
mov
mov
add
sbb
adc
cwtl
xchg
testb
and
cmp
dec
es
adc
loop
push
repnz
insb
ret
out
ret
in
cli
cmc
add
xchg
pop
fdivrl
jnp
push
je
loopne
sub
xchg
movsb
xchg
insb
push
bnd
data16
iret
repnz
lds
mov
lock
nop
cmp
sub
pushf
lcall
dec
mov
push
xor
adc
mov
adc
pop
fcoml
loop
adc
jbe
mov
or
push
mov
push
inc
bound
loope
and
dec
pop
lods
cmp
sub
insl
fisubrs
inc
out
mov
clc
rol
push
faddl
out
xchg
movsb
push
sbb
pop
xchg
jle
adc
scas
pusha
push
imull
push
pop
out
pop
clc
adc
int3
scas
sbb
cld
mov
rorb
jne
jle
aad
repnz
mov
cmp
loopne
xor
jge
xchg
sbb
test
push
fiaddl
xchg
lret
and
and
and
cld
dec
pop
mov
jg
mov
or
rol
add
jnp
loope
out
sbb
mov
sbb
push
clc
mov
xchg
mov
rcrb
sbb
push
mov
fld
out
xchg
test
dec
cltd
lods
lahf
mov
sub
xchg
jne
aaa
or
or
inc
insb
push
xchg
icebp
or
out
aad
icebp
dec
sarb
in
pop
xor
jecxz
cld
push
mov
or
mov
jnp
mov
ljmp
es
inc
ja
test
or
mov
das
inc
cs
mov
cmp
sub
jnp
add
fs
inc
jl
mov
xchg
xchg
aam
cmp
icebp
dec
call
pop
xor
jecxz
ret
push
xchg
out
jo
mov
rorb
into
clc
nop
mov
jo
ljmp
call
mov
adc
dec
call
mov
icebp
ds
xorb
int3
rolb
pop
aam
in
mov
das
mov
ljmp
ret
or
pusha
mov
pop
cmp
insl
ret
jae
dec
xchg
jno
or
jne
add
pop
push
mov
sbb
push
jge
jl,pt
cs
pop
cmp
jp
inc
lds
repnz
jg
femms
jbe
aam
ss
pop
sbb
lret
pop
xor
jp
sub
sub
fisubs
psraw
xchg
or
clc
cmc
scas
inc
cli
push
mov
mov
jle
mov
xchg
test
jge
jp
dec
fldcw
into
subl
gs
mov
cmpsl
test
mov
aad
push
dec
inc
xchg
or
cli
inc
ljmp
jle
loope
jmp
mov
clc
or
repnz
push
push
xor
adc
pop
loopne
dec
aas
addb
lret
loop
xor
jge
les
pop
rol
ss
add
jp
adc
montmul
cmpsb
shll
mov
out
jmp
adc
jbe
jle
jnp
loop
sub
xor
cmp
dec
ret
sbb
mov
mov
mov
xor
cmp
or
and
cmp
fs
mov
cmpsb
push
push
inc
arpl
push
inc
stc
xchg
mov
pop
sarl
and
jle
mov
inc
popf
xor
movsl
es
les
jl
subw
dec
das
outsb
js
add
nop
loopne
or
adc
xchg
lcall
inc
adc
push
int3
add
js
lock
or
in
lods
mov
fcmovb
cltd
js
mov
xchg
jle
sbbl
loope
andb
movsb
add
jp
inc
outsb
rcrl
out
shr
mov
pop
aam
mov
daa
dec
ds
add
sahf
bound
loop
test
mov
jne
mov
mov
push
jge
shrb
into
mov
test
cmc
hlt
sbb
dec
outsl
fisubrl
inc
pusha
std
push
mov
cmp
mov
inc
lds
jle
push
mov
mov
inc
or
jb
cmp
rol
pop
fdivrl
or
ret
cmp
popa
fistps
int3
movsl
pop
loope
cmp
fs
add
outsl
push
xlat
mov
lcall
mov
dec
les
push
pop
inc
jle
push
ficomps
xor
push
jno
lret
ds
mov
cmpsb
lea
add
lock
dec
inc
pop
int
imul
mov
xlat
roll
adc
mov
cmpsl
rclb
push
add
loopne
icebp
xchg
mov
aam
or
mov
sub
test
adc
push
sbb
pushl
sbb
ret
jle
fdivs
stos
add
cli
ret
imul
cwtl
mov
into
cmp
mov
dec
inc
fxch
lods
mov
xchg
pusha
xor
aam
mov
xor
pusha
adc
mov
push
cmp
pop
lea
jge
sbb
xor
icebp
xchg
or
add
orl
sahf
in
les
jnp
pusha
je
jp
lods
lock
lcall
nop
in
push
mov
aad
das
jecxz
pushf
xor
loopne
sbb
cmp
clc
sub
dec
call
sub
ds
sahf
dec
out
xchg
fdivp
xchg
jmp
rcr
cli
sbb
lods
ljmp
mov
xor
cli
or
pop
mull
add
xor
inc
jmp
mov
imulb
fisubs
pop
mov
add
stos
out
jns
mov
jmp
and
or
pop
inc
and
pop
mov
in
rcrb
dec
mov
mov
movl
ret
jb
inc
loope
das
sub
or
xchg
jb
in
pushf
mov
imul
shl
pop
lock
sbb
mov
cmp
and
dec
pushf
sbb
push
push
pop
ret
jbe
and
sbb
and
mov
mov
jnp
push
shlb
insb
dec
adc
stos
js
push
test
sarb
dec
mov
push
mov
mov
out
pop
inc
or
inc
mov
fisttps
outsb
mov
clc
inc
hlt
stos
mov
sbb
je
mov
clc
jbe
fmuls
push
enter
mov
pop
es
xchg
or
rcr
sbbb
insb
cmpsl
mov
jp
scas
xor
add
ret
movl
dec
mov
add
pop
jecxz
aad
dec
ret
call
lods
inc
mov
popa
insl
add
pop
xchg
orl
out
push
cmp
aas
push
loop
test
lret
sbb
jl
xor
lahf
divl
mov
js
jbe
sbb
pop
lret
jp
loopne
orl
jp
cs
cli
jmp
jnp
std
lock
xchg
dec
push
inc
xchg
pop
js
ret
clc
xchg
shll
pop
cmpsb
or
cmp
mul
movsl
mov
jle
clc
push
pusha
xchg
ret
dec
cli
inc
jmp
xchg
loop
sbb
sar
cmp
add
mov
es
lock
cmpsb
mov
push
andb
mov
test
les
sub
xchg
out
adc
sub
out
xchg
mov
inc
inc
adc
cmp
push
push
mov
das
or
lock
sbb
fs
dec
add
inc
pop
sub
sahf
jl
push
int
jg
lahf
movb
cmp
aam
mov
or
jmp
lds
push
push
dec
cmp
cmpb
xchg
mov
loope
mov
out
mov
mov
mov
mov
adc
hlt
pop
aam
nop
jle
sub
shl
js,pt
push
sahf
add
jo
out
mov
pop
je
push
inc
adc
add
jns
scas
lods
pop
push
mov
xor
rcll
lahf
test
jbe
and
pop
push
gs
rolb
push
lods
fidivs
jmp
aad
stos
xchg
cwtl
loopne
inc
test
dec
cli
cmc
nop
mov
mov
cmp
xor
cwtl
sahf
rcr
and
ret
or
lret
dec
pop
mov
xchg
shrl
and
lods
mov
and
cli
jl
test
or
xchg
mov
ret
xor
pusha
pop
mov
hlt
ss
add
or
movsb
ret
jb
lea
pop
aas
push
pop
cmp
or
imul
pop
sahf
test
outsl
xchg
mov
lcall
add
push
ds
ffreep
mov
sti
ljmp
in
push
adc
push
lock
push
push
mov
scas
push
lock
inc
aaa
hlt
push
jl
cmp
adc
ss
in
popl
and
test
fcompl
scas
push
jl
cli
adc
inc
jnp
dec
addr16
aas
fisubs
fcmovb
lahf
push
cli
lea
call
subl
rcrb
add
jnp
jle
sbbb
push
fbld
cld
test
and
jne
ret
jmp
cs
adc
xchg
hlt
pop
xor
call
cwtl
cli
popa
mov
addl
bnd
movl
and
pop
out
jle
mov
or
std
jbe
push
mov
in
mov
out
push
pop
ret
xor
lds
mov
sar
add
notl
das
rorb
inc
js
ljmp
dec
or
pop
fcomip
sbb
dec
outsb
mov
mov
out
jge
aad
add
cmp
cmpsb
sbbl
inc
xchg
push
sahf
insb
pop
je
xchg
psubusb
sub
lds
jle
repnz
sub
dec
js
and
cmp
mov
jle
push
and
mov
test
push
orb
mov
xor
gs
outsb
and
ljmp
mov
ret
adc
inc
faddl
cs
shrb
lods
lahf
pop
test
loope
dec
loope
mov
fimuls
fildll
push
pop
sbb
stos
mov
insb
je
dec
loopne
aas
jle
push
mov
js
fxch
mov
or
mov
inc
jp
pop
xor
addb
adc
and
dec
mov
lcall
cmpsl
add
cld
nop
or
push
stos
mov
sbb
out
pop
ds
test
or
inc
aaa
loopne
pop
and
andl
ret
adcl
cwtl
pop
cmp
cld
inc
clc
lock
and
std
push
dec
out
enter
push
sbb
test
movswl
lahf
adc
mov
hlt
daa
mov
sbb
fadds
fwait
psllq
in
cmp
insb
mov
lock
ds
mov
test
loope
push
in
cmp
xchg
cmp
push
pusha
mov
adc
push
imul
sub
aas
push
mov
frstor
or
test
mov
xchg
popa
mov
es
in
ljmp
sub
ds
fldt
stos
xchg
adc
mov
cmpsb
jle
mov
pop
mov
lock
mov
push
xchg
fdivrs
jg
mov
cmp
lock
out
xchg
sub
cld
xor
test
rol
notl
fisubs
je
test
push
push
jl
or
aam
addr16
dec
xchg
and
das
lods
rcll
sub
sub
pop
addl
lret
mov
das
mov
jbe
mov
jge
pop
pop
mov
jp
mov
stos
insb
push
jo
cmpsb
fimull
and
sub
mov
xchg
mov
jo
dec
xorl
or
insl
cmpb
or
and
jmp
jno
cmpsb
out
sbb
or
daa
mov
jae
xchg
mov
sub
shrl
jg
rcrb
test
sub
xor
test
gs
clc
cs
cmp
jne
aad
inc
cmpsb
clc
icebp
test
cmp
xor
test
es
test
mov
pop
mov
jp
popa
inc
leave
mov
pop
aas
mov
xor
mov
mov
shll
dec
mov
pushf
inc
jne
pop
pop
mov
fiadds
ror
mov
dec
mov
bound
jo
jp
lock
aad
lret
arpl
adc
mov
ss
mov
push
mov
mov
cmp
shl
dec
pushf
shlb
jl
ss
mov
dec
adc
sbb
ljmp
mulb
adc
cwtl
adc
pop
mulb
rolb
jle
xchg
xchg
xor
mov
shll
xchg
or
jae
ret
ret
pop
pop
push
push
xchg
push
mov
cmc
rorl
push
cmpb
push
xor
push
scas
les
sub
test
mov
int
dec
cmp
pop
jl
loop
jl
ds
jmp
es
mov
stos
sub
adc
xorl
inc
xchg
jl
fsts
xor
call
xor
fisttpl
clc
cmp
xor
cmp
comiss
repz
hlt
add
cmp
adc
pop
fiaddl
push
imul
jg
mov
leave
aam
rol
test
mov
add
jbe
add
lods
jecxz
cmp
or
xchg
or
jp
scas
icebp
add
mov
xor
adc
mov
mov
jle
jl
pop
xor
cli
add
and
push
mov
push
push
adc
xchg
mov
dec
push
fs
enter
mov
addr16
ficompl
adc
inc
cld
out
aas
adc
pop
jl
push
es
js
adc
clc
ja
cs
mov
mov
lds
xchg
test
cli
aaa
mov
lahf
cmp
push
xlat
add
pxor
fs
imul
sbb
inc
out
shrb
cmp
adc
add
divl
ret
popl
jle
stc
pushf
mov
xor
cmc
cmp
rclb
arpl
lock
pop
inc
sub
xchg
mov
scas
dec
mov
jo
insb
loopne
sbb
out
mov
dec
loopne
sub
push
xchg
icebp
aad
pop
mov
orb
mov
fcomp
cmp
and
add
data16
jmp
inc
or
daa
jno
sub
sahf
leave
inc
add
test
sbb
jge
pop
fstl
popa
jge
sub
and
sbb
xchg
sub
in
idivb
xor
xor
jge
pop
push
ds
je
fidivrl
add
mov
out
mov
loop,pt
cmpsb
mov
add
cmp
addb
pushw
pop
movsl
jb
fcomip
lock
inc
loop
adc
mov
lock
or
loop
jo
imul
cli
or
mov
fstp
push
xchg
inc
out
cwtl
jg
jge
aam
mov
ljmp
jne
push
inc
jle
mov
mov
fimuls
icebp
inc
sbb
insl
sbb
add
xlat
pop
sbb
movsb
mov
cld
sbb
add
out
mov
mov
cld
test
jp
adc
sub
mov
enter
xchg
pop
iret
aam
test
cld
inc
movswl
lock
cli
mov
roll
cld
mov
lret
jo
inc
xor
into
cmp
mov
sahf
scas
insl
sbb
es
movsb
xchg
sbb
mov
hlt
jmp
xor
cmp
movsb
xchg
xor
jnp
sub
ds
mov
adc
repz
hlt
jmp
lahf
adc
mov
xchg
stos
or
lahf
push
mov
lods
lock
inc
stos
rorb
add
cltd
ds
ds
int3
std
pop
fiaddl
mov
inc
push
xchg
cmp
rclb
fdivrp
rol
test
inc
movb
fsubrl
nop
cli
rol
push
cli
cmp
rorl
dec
les
hlt
rcrb
stos
cmp
cmp
ss
fcomps
and
rcrb
add
xor
adc
inc
sub
push
jp
cmp
hlt
dec
add
xor
push
sbb
movsl
mov
mov
out
lock
mov
push
push
xchg
push
cmp
cli
inc
jnp
data16
dec
je
pop
inc
cmp
clc
fsubr
mov
sub
scas
xchg
movsb
addr16
jb
sub
mov
fmulp
xchg
or
jp
out
hlt
sbb
iret
push
movsl
aam
xor
sub
scas
push
int3
push
bound
jge
xchg
mov
enter
sbb
sub
sub
clc
insb
cmp
scas
repnz
ja
jno
xor
pop
and
pop
test
jb
insl
fs
inc
leave
cmp
inc
inc
sub
and
mov
jmp
aam
hlt
cmp
testl
popa
bound
jl
dec
push
sarb
mov
clc
jmp
mov
rcrl
xchg
inc
hlt
or
xor
adc
sbb
dec
mov
jecxz
pop
das
push
aam
sub
roll
push
jmp
test
or
pop
and
push
cmpl
rol
test
mov
out
loopne
movsb
out
xlat
cmp
es
push
popa
adc
mov
scas
push
mov
les
pop
rcrb
ror
inc
comiss
mov
ret
cli
cs
icebp
shlb
movsb
push
xchg
loopne
insb
jl
clc
js
add
jge
loop
lods
es
adc
cmc
cmp
xor
push
aaa
push
cld
js
xor
ret
insb
dec
jecxz
adcl
clc
adc
jo
mov
cwtl
mov
aad
loopne
test
aam
inc
sub
xchg
jge
cmp
rcrb
sbb
pop
cs
pop
dec
jns
adc
pop
mov
loop
fsub
dec
into
mov
push
movsl
rorl
lret
pop
jp
sub
push
fists
jmp
mov
mov
or
sar
xchg
xchg
in
mov
inc
incb
push
mov
mov
lahf
push
pop
aas
bnd
out
sbb
pusha
inc
mov
push
shlb
push
out
adc
cwtl
inc
sub
pop
fisubl
xor
xchg
push
lock
ficoms
cmp
jne
and
je
push
cmp
sbb
mov
and
pop
add
and
xchg
xchg
icebp
xlat
daa
push
mov
mov
mov
aam
dec
push
les
and
in
je
add
loop
or
and
mov
inc
push
inc
mov
pop
mov
out
xorl
es
clc
std
push
ret
daa
ljmp
pop
cmpsb
dec
fisubrs
mov
pop
pop
pop
outsb
xchg
pop
pushf
sub
cmp
lret
rclb
pop
push
sti
cli
jl
xor
mov
mov
lret
pop
ljmp
clc
mov
xor
test
jmp
mov
cmpsb
jne
cmp
jno
sbb
std
insb
bound
testb
mov
add
mov
call
adc
hlt
shlb
cmc
and
jno
sub
dec
xchg
pop
test
mov
pop
cli
cmc
add
rclb
sbb
movsb
jns
add
mov
sbb
movsl
push
sahf
mov
sub
arpl
xor
mov
xor
es
shrl
adc
sbb
push
mov
std
aas
mov
inc
mov
hlt
mov
mov
hlt
xchg
ljmp
xlat
xchg
pusha
xchg
inc
fsubrl
sbb
adc
or
adc
cmpsb
test
aas
gs
sbb
inc
lret
push
sub
js
cmc
clc
shlb
jle
lock
iret
test
inc
out
mov
ljmp
jmp
popf
jle
mov
mov
pop
aad
jo
leave
jmp
mov
xchg
or
test
clc
lock
jle
sarb
pop
add
mov
loopne
lea
pop
inc
pop
mov
push
dec
inc
adc
arpl
mov
add
pop
ds
mov
inc
shr
roll
outsb
test
pop
mull
js
mov
pop
int
aad
mov
pop
shl
imul
enter
inc
jle,pt
cli
push
jecxz
adc
xchg
adc
or
call
mov
pop
data16
sub
loopne
orl
jecxz
pop
es
xchg
cmp
inc
ret
ret
push
push
adc
mov
mov
loope
dec
adc
adc
or
loop
sarl
int3
add
out
loop
seta
and
add
pop
cmpsb
ss
xor
dec
es
divb
adc
jle
mov
das
mov
push
inc
xchg
pop
cwtl
jb
mov
inc
setle
cltd
lock
or
cwtl
rolb
xor
sbb
setae
fsubp
jno
add
and
in
fcompl
rolb
rcl
test
sub
mov
fisubs
sbbb
inc
push
orl
jle
jle
arpl
jo
loopne
sbbl
push
sbb
push
jg
ss
test
addr16
push
mov
mov
fwait
leave
ficompl
mov
xchg
cmc
imul
sub
push
jne
add
rol
into
cmp
loope
jno
jne
dec
call
cmpsl
lea
data16
lods
pop
out
or
in
and
jmp
fdivrp
push
pop
fmul
nop
jne
cmp
jg
test
es
and
cld
sbbb
push
insb
xchg
xchg
shr
adc
fs
lock
adc
adc
inc
xchg
adc
push
mov
push
and
fs
cmp
mov
jmp
xchg
in
xchg
pop
jmp
insb
jno
ljmp
mov
enter
inc
ds
xor
roll
ror
xor
loop
or
inc
mov
repz
xchg
hlt
lods
outsb
inc
or
jp
cmp
or
or
ret
push
and
inc
loop
or
mov
xchg
sahf
scas
xchg
adc
jg
movb
rolb
push
rol
jp
jl
loop
mov
in
xor
adc
cli
lock
aaa
loop
loopne
mov
std
dec
rcrb
dec
mov
addl
hlt
data16
in
sub
sbb
add
bound
cwtl
xchg
imul
add
shrb
icebp
rcl
shr
cmp
jp
inc
movsl
dec
sbb
push
sub
xchg
imul
inc
jle
xlat
add
mov
das
pop
mov
dec
divl
or
jo
js
jmp
jp
scas
cli
fstp
lock
jp
insb
shrb
jbe
or
pop
jne
add
add
push
sub
out
loopne
inc
rorb
fnstcw
mov
test
aas
mov
bound
and
gs
js
sbb
mov
pop
jl
push
add
pop
sub
rorb
out
pop
mov
fisubs
or
cld
and
mov
push
imul
fcoms
add
inc
insl
pop
repnz
mov
sti
mov
testb
cltd
jmp
jl
sub
scas
mov
out
mov
adc
jno
mov
push
jp
ficomps
adc
inc
mov
std
dec
bound
inc
mov
jmp
ds
sub
pop
push
xabort
je
aas
sub
jb
dec
xchg
cli
inc
rclb
inc
xor
jmp
mov
aad
cmp
fsubrs
add
pop
dec
adc
cmp
inc
jno
pusha
and
fiadds
scas
or
fwait
mov
cmp
pop
test
scas
sbb
cmpb
xchg
mov
adc
stc
dec
pop
push
xchg
inc
sbb
push
push
daa
pop
sbb
mov
push
pushf
lods
aas
adc
xor
adc
fisttpll
pop
pop
int
popa
dec
sbb
movsl
mov
xchg
mov
ds
ret
mov
insb
lods
shlb
mov
xchg
jne
testl
mov
mov
xlat
add
jmp
ret
dec
cwtl
and
xchg
xchg
out
or
aam
mov
sub
lcall
clc
push
orl
jbe
pop
test
lods
call
jge
push
popa
aam
dec
in
xchg
iret
mov
pop
inc
xor
pop
mov
xchg
stos
add
and
outsl
mov
test
dec
xlat
or
lock
insb
cmpsb
dec
xlat
sbb
js
or
pop
call
add
shrl
test
clc
push
dec
jl
popf
jl
lds
cs
lret
sub
push
cld
and
dec
push
xor
in
or
fsubr
ret
test
push
shl
add
xor
or
sahf
lcall
inc
leave
in
mov
iret
adc
add
scas
test
daa
hlt
insl
jmp
mov
lock
das
and
fcmove
fnstcw
xchg
cwtl
addr16
push
push
test
sub
mov
aas
cli
push
repz
sbb
mov
jecxz
nop
xchg
stc
or
pop
or
sub
dec
and
cmc
ljmp
mov
neg
js
push
xor
jecxz
inc
dec
loopne
rorb
int3
mov
js
ja
pushf
sbb
push
and
pop
pop
out
mov
mov
fisubs
stc
xchg
aas
scas
and
inc
gs
icebp
sbb
jp
xchg
pop
or
dec
sbb
roll
xor
lea
out
xchg
bound
pop
movsb
inc
cli
negl
das
inc
mov
xor
int3
je
and
pop
mov
cmpsb
popa
xor
cmovo
mov
fsts
inc
loop
jmp
add
testl
nop
mov
xlat
out
jae
call
or
mov
xor
jl
add
cld
testb
jb
clc
jg
push
nop
mov
adc
xlat
mov
push
and
mov
aad
out
fwait
cmp
mov
dec
push
out
cmpsl
sub
sub
pop
and
add
xor
test
push
mov
push
xchg
mov
jecxz
xor
cltd
ljmp
test
mov
push
inc
inc
es
out
adc
hlt
pop
mov
loopne
sub
lods
cmp
pop
mov
int
scas
sahf
pop
inc
mov
hlt
cmp
andl
mov
fcomps
inc
mov
dec
popf
push
inc
cmp
xlat
push
mov
jge
pop
push
pusha
aas
dec
sbb
or
and
push
jno
jge
adc
cwtl
loop
xchg
cltd
mov
jb
or
inc
dec
sub
add
orb
cmp
cmp
dec
sbb
insb
inc
loop
push
jle
lods
mov
cmp
or
ljmp
iret
adc
pop
push
movsl
cmp
and
jl
xor
and
cmpl
repnz
jp
push
push
fcompl
clc
lock
push
push
inc
adc
cld
jb
jp
sbbl
shrl
mov
cltd
push
cmp
les
mov
sbb
call
fsubrs
add
mov
inc
cmpsb
nop
sbb
insb
mov
add
aas
nop
lcall
out
daa
inc
inc
popa
or
fisttpl
mov
xor
out
rcr
lock
rol
imul
cmc
add
and
inc
xchg
xor
icebp
and
adc
les
out
cmc
in
arpl
clc
mov
rolb
lea
sbb
mov
and
adc
pop
inc
mov
jl
cmp
ds
jl
cmp
cltd
out
les
and
enter
pop
subb
pop
xor
xchg
sbb
xchg
dec
cmc
or
pop
lahf
pop
jle
push
sub
in
jge
dec
mov
push
aad
inc
sbb
mov
mov
sbb
out
aas
in
pop
int
ja
or
mov
sub
imul
sti
nop
lock
lret
mov
cmc
loopne
and
xor
xchg
rorb
movsl
popa
add
mov
push
mov
dec
mov
js
jp
test
push
mov
test
add
hlt
movl
bnd
mov
add
xchg
les
jmp
test
dec
xchg
loopne
js
fdivr
sbb
push
cmpsl
xor
pop
testl
ds
je
ljmp
cmp
icebp
mov
out
mov
xchg
adc
dec
pop
mov
nop
push
jle
std
push
shl
push
shl
xchg
fidivrs
test
out
out
jne
pushf
add
dec
fildll
xor
insb
jmp
mov
dec
cwtl
cmc
mov
rolb
sahf
fwait
adc
mov
and
jg
adc
adc
sbbb
or
and
jp
jp
sub
jle
lods
mov
movsbl
testl
verw
out
dec
bound
lahf
test
push
adc
movl
sub
scas
jl
jp
jmp
xor
xor
xlat
jnp
mov
xchg
rcrb
addr16
jp
jbe
stos
addl
js
loop
rorb
pop
shrl
insl
adc
add
and
fists
xchg
or
mov
mov
ss
mov
inc
shrb
loope
xchg
cwtl
out
ret
push
lret
fisubs
jmp
push
adc
andl
jmp
ds
lea
das
and
inc
test
loope
out
push
out
or
por
dec
inc
in
fistps
aaa
loopne
mov
scas
es
jmp
push
mov
ds
clc
add
jne
and
lret
divb
jle
mov
adcb
out
lock
lods
into
add
and
push
mov
clc
outsb
push
dec
adc
sub
ljmp
xor
and
scas
xchg
xchg
fisubrs
outsb
sub
out
mov
aaa
inc
pusha
inc
mov
mov
aad
lcall
dec
dec
inc
mov
hlt
fmull
cmpsb
lock
dec
add
xchg
mov
pop
hlt
cltd
push
inc
cmp
bound
icebp
mov
inc
add
adc
xchg
mov
faddl
dec
or
loopne
ret
push
dec
sahf
xor
jge
sbb
testb
loope
mov
cs
xchg
rol
punpckhwd
mov
xor
push
lret
cmp
dec
xchg
cmp
dec
bt
mov
jecxz
inc
sbb
int
mov
fs
in
xor
call
sub
int3
xlat
inc
icebp
idivb
adc
ret
add
jo
mov
test
cmpsl
incb
pop
mov
adc
mov
push
mov
pushf
in
bound
movsbl
icebp
fsubrl
lret
adc
mov
xor
ljmp
inc
lods
dec
loop
jmp
adc
xchg
inc
clc
mov
sbb
dec
sbb
pop
or
fdivs
sti
mov
mov
loopne
lea
mov
add
inc
sbb
and
imul
hlt
rcrl
in
mov
and
rclb
movsl
adc
cli
cmc
xchg
sahf
js
inc
sbb
shrb
pop
xor
decl
imul
or
jecxz
outsb
dec
ljmp
cmp
cmp
ret
xor
adc
mov
cmpsb
add
dec
movsb
inc
aaa
stos
lahf
push
addl
sbb
or
lods
scas
fidivrl
cmp
mov
jne
push
adc
mov
rorl
cmc
pop
aam
mov
imul
mov
loop
cli
out
enter
mov
inc
add
lock
jl
pusha
dec
cwtl
sbb
aad
add
insb
mov
hlt
jnp
jl
cld
and
adc
daa
add
in
xlat
outsl
inc
rolb
cmpb
push
jb
mov
inc
xchg
out
mov
les
or
scas
sub
hlt
cmpsb
xchg
jo
mov
mov
lds
sub
cmp
int
cmp
pusha
popf
js
adc
inc
xchg
mov
xor
test
cmp
xor
mov
push
jg
pop
add
sbb
loopne
push
fidivrl
stos
or
test
push
lret
cmp
and
dec
cltd
insb
jp
push
cmpb
call
stos
add
mov
fbld
jl
stos
fdivp
mov
je
daa
mov
jno
shl
xchg
cmp
mov
jmp
fstp
or
mov
loop
xchg
xchg
mov
inc
push
sbb
sbb
sar
and
sbb
jle
and
adc
dec
rcll
cmp
mov
int3
mov
sub
fucom
jo
mov
adc
lahf
popl
jl
mov
and
loopne
sbb
or
pop
test
js
push
iret
and
pop
or
lret
ret
pop
jo
cmc
adc
sahf
lea
out
imulb
aas
push
cli
jp
xchg
and
cs
pop
inc
lea
add
lods
add
cpuid
sahf
cmp
shl
lds
shr
out
push
xchg
lods
aam
xchg
and
clc
fcoml
cmpb
in
mov
std
add
test
or
mov
mov
clc
xlat
jl
js
jle
test
orl
xor
lods
add
mov
sub
sbb
and
ds
and
popa
or
push
andb
jle
cltd
ds
or
pop
jge
dec
outsl
inc
xchg
sub
jp
mov
fs
push
insb
and
add
adc
add
aaa
data16
dec
icebp
and
inc
and
js
lea
cmc
icebp
call
aas
pop
add
pushf
jge
imul
test
testl
mov
mov
sub
sub
mov
add
shlb
movsb
dec
inc
jmp
pop
xor
in
sub
pop
cld
mov
xor
call
lahf
adc
push
and
fwait
aam
rclb
vpavgb
jns
inc
jne
fwait
cli
lock
inc
or
jl
icebp
mov
stc
dec
xchg
nop
inc
mov
mov
jbe
xchg
les
call
inc
outsb
enter
or
jp
dec
jecxz
insl
insb
aad
lret
or
call
call
popa
sbbb
jno
cmp
sahf
aad
push
sub
out
jecxz
test
repz
sub
cltd
in
or
adc
ret
mov
jge
jmp
fldl
xchg
adc
mov
fcmovbe
xchg
jo
sbb
ret
sahf
mov
ljmp
outsb
scas
inc
pop
dec
pushf
movsl
lea
sub
jp
adc
icebp
jnp
lds
dec
pop
push
ds
mov
loop
pop
xlat
jle
movsb
pop
cwtl
pop
pop
pop
dec
cmpsl
lods
pop
sub
or
fstps
mov
lds
js
loop
jle
dec
lret
inc
cli
loop
movsl
mov
push
out
pop
mov
imul
js
lods
pop
ss
mov
jl
ret
test
outsb
xchg
push
subb
xchg
xchg
or
orb
xchg
cld
mov
js
test
add
mov
es
ds
stos
dec
sbb
addr16
push
or
cmp
shrb
daa
js
pusha
add
pop
jae
xchg
cli
lcall
es
pop
cmp
dec
sub
sub
es
xchg
jp
push
ds
push
stos
cmp
js
aam
in
mov
mov
and
push
inc
outsb
movsl
fdivp
lds
mov
mov
xchg
inc
out
mov
mov
ret
test
js
sub
pusha
adc
scas
pop
or
lods
ljmp
test
and
push
js
jge
or
lret
inc
aas
data16
rcll
rcll
cmp
cmp
sub
adc
xchg
mov
movsb
pop
mov
rcl
outsb
jbe
pop
push
mov
push
pop
and
jne
gs
push
cmpb
inc
jns
adc
out
add
fisttpl
xchg
fwait
or
jae
imul
enter
jne
push
dec
mov
cli
mov
and
test
inc
pop
mov
or
mov
push
pushf
test
insl
mov
inc
das
or
and
fldl
mov
mov
and
repnz
call
push
inc
lock
imul
add
adc
and
jbe
xor
push
lcall
andl
rcll
das
pusha
add
mov
push
pmaxub
sarl
hlt
pop
shlb
loop
dec
push
loopne
jo
or
mov
nopl
in
mov
adc
inc
sbb
push
enter
rcl
sub
clc
lock
inc
movl
jp
mov
sbbb
insb
loopne
cmpb
cmpsl
mov
lods
test
subb
testb
cmpsl
mov
aad
test
shrb
sar
pop
sbb
xor
fsubl
loope
inc
sbb
test
out
cli
jge
lock
push
push
push
popf
icebp
stos
rcrl
sbb
nop
mov
loop
repnz
int
fmull
dec
cwtl
repz
push
cmp
shrl
hlt
jle
mov
mov
sub
jno
push
ljmp
xchg
movd
pop
cmpsb
and
into
cld
pop
mov
insl
rcll
mov
scas
and
stos
sub
adc
subps
push
inc
or
mov
fisttps
cwtl
mov
repnz
loop
xchg
test
into
jmp
pop
adc
xor
clc
inc
lea
mov
in
jmp
jl
es
add
and
sar
cld
icebp
mov
xchg
mov
mov
pop
cmp
push
cmp
push
xchg
xor
loop
mov
pusha
int
pop
jo
cld
js
mov
inc
int3
lcall
shrb
lds
test
aaa
not
mull
loope
add
jb
arpl
xor
xchg
or
fsubrl
arpl
jg
jp
hlt
and
aam
sbb
mov
mov
insl
cli
fstpt
add
adc
push
seta
push
and
xor
xor
xor
call
loopne
inc
push
outsb
jp
in
pop
push
push
sahf
loop
fsubs
inc
jae
ret
push
mov
xchg
std
mov
jae
nop
push
repz
gs
shll
push
mov
scas
mov
ss
push
dec
sbb
mov
cmp
and
cwtl
mov
arpl
xchg
gs
clc
adc
fidivl
mov
ds
push
lcall
ret
mov
adc
bound
mov
mov
sbb
add
hlt
bound
enter
cld
and
ret
lahf
addl
aas
xor
in
sarl
pop
pop
jecxz
mov
xchg
xchg
inc
pop
pop
dec
dec
out
xchg
cmc
jmp
ljmp
mov
and
mov
mov
mov
inc
inc
xor
enter
mov
inc
test
popa
push
or
ret
bound
outsl
in
rol
xlat
sub
push
sub
data16
pusha
inc
aam
loop
dec
mov
mov
das
or
lods
fcmovu
sti
fwait
shlb
pop
insb
and
xlat
orl
inc
call
jl
fucom
xchg
jo
pusha
mov
and
sbb
jmp
ret
in
dec
jl
mov
dec
sbb
mov
aas
mov
icebp
or
mov
mov
cld
js
and
lock
push
test
add
cmp
dec
pushf
add
lds
incb
mov
jecxz
or
inc
push
maxps
mov
enter
insb
cmp
out
in
call
stos
adc
data16
pushf
mov
ljmp
stos
bound
hlt
add
ret
jle
outsl
and
cmp
daa
mov
enter
cmp
push
movb
loope
xor
lds
inc
mov
or
jnp
sub
mov
shll
sbb
add
leave
push
jbe
sbbb
not
dec
jl
dec
inc
xchg
mov
andl
and
in
and
popa
mov
jp
adc
sbb
add
sub
jmp
inc
xor
js
or
jl
lods
dec
fsub
or
call
mov
mov
jg
sbb
dec
aam
call
mov
clc
adc
add
hlt
jb
idivl
test
jge
add
mov
je
ds
xchg
cmc
shlb
lret
jns
push
lods
mov
sub
fucom
cwtl
rcl
push
pusha
xchg
nop
adc
jl
and
xchg
adc
insb
xchg
dec
push
push
push
loopne
orl
adc
push
lock
sbb
push
add
jl
out
loop
imul
ja
test
lret
popa
movsl
adc
pop
add
icebp
ljmp
sahf
mov
jp
dec
sub
xor
lahf
push
leave
push
inc
dec
je
rclb
cld
sar
adc
and
test
cmp
out
add
out
les
jo
out
push
mov
jno
pop
mov
mov
add
add
cmpsl
jb
push
lret
or
loopne
outsb
btr
sbb
xchg
nop
lds
add
ljmp
cld
xor
push
data16
lods
add
adc
dec
vlddqu
jo
or
xchg
cmp
ja
xchg
jl
movsl
push
pop
add
cs
xchg
push
sti
xchg
aad
aam
loopne
cwtl
mov
cld
out
fstps
imul
lahf
ds
sub
push
dec
faddl
dec
pop
int
cs
jge
dec
cmp
es
dec
hlt
dec
bound
in
rolb
sub
cmp
scas
pop
and
push
into
cwtl
rcrb
addps
and
sub
jmp
push
pushf
dec
jmp
js
les
test
jp
shrb
repnz
mov
jge
gs
or
mov
js
inc
mov
lcall
ss
iret
or
movsl
adc
ds
mov
fistps
pop
mov
lcall
inc
inc
fistpll
mov
xchg
inc
pop
pushf
push
xorb
pushf
mov
roll
test
xlat
out
shll
ljmp
inc
es
jne
jge
pop
jo
sbb
je
adc
xor
fmulp
clc
hlt
cli
test
pop
in
push
sahf
idivl
jl
mov
popa
in
xchg
fs
pop
movsl
daa
sbb
mov
popa
in
shlb
out
adc
mov
push
adc
xchg
idivb
adcb
cli
cmpb
shl
outsb
push
sub
and
lds
rcl
outsl
les
fcoml
cwtl
loop
pop
pop
sbb
xchg
lock
loop
mov
pushf
mov
cwtl
loop
nop
mov
rol
push
mov
jg
enter
mov
addl
jbe
add
or
and
fiadds
fnstcw
fcompl
mov
mov
shrb
sub
dec
arpl
push
lock
or
and
fcomps
sarb
in
bound
sub
push
in
or
clc
or
aam
cmp
xor
cmp
inc
adc
lret
pop
ret
mov
movsb
in
out
lret
lock
mov
jo
pop
loopne
bound
insl
adc
test
sub
jo
loope
loopne
inc
push
ds
movsl
icebp
xchg
les
adc
cmc
rcrl
sub
ret
inc
mov
loop
inc
clc
push
mov
adc
cmpsl
pop
cli
inc
pop
cmc
xor
ret
out
sub
jb
mov
outsb
ja
shlb
popf
mov
addr16
std
insb
nop
jb
jle
es
ja
rcll
mov
lahf
sbb
dec
pop
fmul
loopne
mov
repnz
roll
inc
icebp
mov
jnp
sbb
dec
mov
cmp
movlhps
ret
popa
cmp
clc
jle
inc
rorl
push
jmp
int3
pop
mov
pop
adcl
push
cmc
ds
ds
inc
mov
xchg
test
lret
pop
pop
add
out
jb
push
adc
and
add
pop
lock
and
jle
into
clc
das
or
fdiv
cs
fwait
loopne
cmc
xchg
push
and
jg
clc
std
shlb
popf
mov
jge
dec
inc
push
and
or
jl
sub
outsl
pop
push
movb
jg
fcoml
repnz
sub
scas
fsubs
loopne
rclb
lret
cwtl
ret
pop
clc
ljmp
cmp
jns
and
stc
movsb
imul
test
in
lea
push
shll
mov
mov
test
inc
mov
and
outsb
outsb
outsb
inc
add
fwait
mov
and
jge
pop
mov
jae
repnz
popl
push
je
js
adc
jcxz
movsl
sbb
and
mov
mov
xchg
fsub
cli
and
or
push
je
rcrb
inc
or
out
lods
nop/reserved
sub
fisubrs
ja
cmp
icebp
hlt
cmpsb
add
jns
fs
rcr
ljmp
jbe
imul
dec
clc
add
mov
or
insl
and
shl
inc
loope
mov
or
fwait
ds
sarb
dec
inc
es
or
push
cld
jo
lock
subl
fwait
jecxz
cmpb
adc
xor
lcall
ja
cmc
addr16
out
cltd
js
popa
xchg
adcb
or
popa
jo
dec
aas
jl
lods
pusha
cs
add
inc
pop
mov
ret
rol
mov
xor
loope
shl
inc
add
xor
dec
stc
addr16
jmp
orb
mov
jp
loopne
clc
hlt
sub
push
daa
rcll
adc
stos
icebp
jo
or
and
pusha
lcall
adc
sbb
stos
addl
xchg
jo
adc
repz
fs
scas
popf
and
arpl
bound
jecxz
push
loop
mov
adc
sbbb
das
push
fs
xor
out
adc
jne
xchg
mov
es
push
data16
pop
popf
ret
adc
xor
test
movsl
bound
sub
sub
push
sbb
add
movsl
mov
jl
pop
icebp
add
jmp
rol
mov
add
lret
jno
cli
mov
sbb
pusha
in
out
sti
pop
mov
mov
mov
aad
inc
mov
pop
dec
add
loopne
aaa
repnz
adc
mov
icebp
and
test
and
shlb
jmp
dec
lret
jmp
arpl
sub
mov
ljmp
cmp
cmc
adc
xchg
mov
adcl
js
sub
sbb
fidivs
mov
mov
xchg
fisttps
sbbb
adc
mov
sub
push
mov
jle
adc
shll
mov
lock
int3
les
loope
xchg
test
push
jge
jg
cmp
inc
sahf
push
int
iret
out
sbb
sub
and
jg
mov
adc
pop
dec
pop
jg
mov
mov
scas
xorl
jo
shlb
loope
fdivrs
gs
mov
pop
aas
ljmp
loopne
loope
fcmovb
mov
xor
lcall
notl
push
jbe
or
rclb
loopne
pop
pop
loop
cmp
int3
xor
xchg
push
mov
xchg
sub
adc
sub
orb
or
mov
adc
jg
jne
cmp
xor
xchg
sbb
cmp
xchg
or
and
xchg
es
ret
bound
pop
ret
loop
aam
loopne
add
mov
mov
push
repnz
nop
sbb
fdivl
sub
fsubs
xor
push
xor
jl
pop
cmp
xchg
mov
lret
rclb
movsl
mov
pop
mov
jae
mov
insb
push
add
mov
push
push
rorb
inc
xchg
sub
imul
pop
sbb
mov
loop
push
mov
dec
pop
imull
push
push
arpl
mov
cli
insb
adc
fwait
lock
mov
sub
mov
add
scas
out
lret
jae
jno
push
mov
ja
aam
push
cmp
pop
sub
ret
or
loop,pt
fldenv
sbb
sub
insl
pop
cmp
or
mov
adc
out
sbbl
push
mov
dec
pop
fisttps
mov
into
cmp
add
jg
add
scas
in
inc
andb
orl
lock
hlt
mov
mov
inc
loopne
pop
call
mov
lahf
or
fcompl
inc
loopne
rcl
xchg
inc
out
add
or
xlat
pop
mov
daa
enter
cmpsl
imul
inc
inc
jns
lods
negl
jbe
bound
add
in
mov
stos
outsl
xchg
mov
dec
rcrb
or
jge
sub
jo
fs
sbb
cmp
push
nop
adc
lock
jl
js
movsl
cmpb
cli
cwtd
movsb
mov
fcompl
dec
pop
es
popf
xor
cmpsb
mov
jecxz
add
adc
pop
jnp
push
fbld
push
jbe
ret
das
xor
xchg
cmp
shll
loopne
push
inc
push
pop
pop
lods
cltd
cmp
xlat
add
pop
pusha
jb
and
sbb
xor
movsl
jecxz
rcrb
xchg
scas
js
hlt
or
les
cmpb
loope
cmp
cmpsb
fnstcw
cmp
cmp
cltd
dec
or
xlat
and
rolb
and
lahf
xor
mov
jp
loopne
xor
das
lods
xor
imul
pusha
mov
and
aad
ret
sub
push
sti
lcall
je
adc
cmp
call
push
add
mov
shlb
addb
inc
clc
sarb
mov
movb
ret
jl
xchg
nop
shr
jge
in
jge
mov
addb
mov
in
fldenv
decb
loop
jne
cs
fwait
dec
pop
insl
xor
pop
xor
cli
mov
push
push
push
cmp
adc
cmp
sub
and
test
ja
clc
enter
push
mov
rcrb
rorl
push
pop
cmp
jo
or
add
jae
icebp
jnp
call
insb
popf
jecxz
or
es
or
cmp
es
rcl
xchg
and
jp
push
mov
fnstsw
or
loopne
rolb
mov
ret
cmpl
jp
push
fsubrs
mov
cs
adc
cwtl
movsl
rorl
and
mov
je
pop
mov
and
cwtl
xchg
cmpsb
mov
lret
lret
movsb
pop
or
add
outsb
ret
hlt
jle
jo
dec
ficoml
ret
cmc
adc
cltd
dec
jge
jmp
fisubrs
loopne
sahf
lcall
in
rclb
mov
xor
lods
test
dec
repnz
aas
push
cmpsb
dec
cmp
jle
mov
lock
cmp
mov
pusha
xor
add
test
sbb
pop
adcl
and
adc
insb
cmc
ss
movsl
hlt
cmp
lods
ljmp
xchg
insb
fimuls
inc
mov
mov
mov
orb
sahf
repnz
les
jb
sbb
jl
mov
jle
sbb
out
dec
call
in
clc
not
pop
fists
jbe
add
ficoms
xchg
stos
cli
cmp
or
jge,pt
or
push
sub
mov
test
pop
fs
cmc
rol
sub
sbb
es
clc
inc
ret
jns
pushf
aaa
adc
add
cs
in
es
pop
loop
enter
repnz
iret
cmp
cmp
pop
out
jo
loopne
hlt
loopne
and
add
clc
ds
lret
pop
fidivrl
push
clc
lock
in
lea
xor
dec
subb
in
loope
stc
push
adc
std
mov
xor
mov
inc
and
push
daa
pop
mov
data16
mov
inc
add
pop
push
jg
push
mov
je
mov
dec
and
sbb
adc
and
push
or
pusha
mov
jbe
pop
rorb
int3
pop
dec
clc
cmc
loopne
lods
lret
pop
out
int3
cmpb
test
fmul
sub
or
xor
icebp
faddp
ss
sub
sbb
add
loopne
ds
mov
pop
clc
lock
imulb
mov
popa
jo
or
mov
addr16
inc
clc
sub
mov
add
sbb
cwtl
sub
mov
push
clc
dec
push
pushf
sub
push
inc
shr
shl
mov
stc
xor
mov
push
mov
push
cmp
push
andb
mov
xor
mov
loopne
mov
inc
jb
adc
dec
sti
ljmp
fimull
pop
dec
ds
and
mov
or
jp
and
shl
sbbl
push
mov
sbb
jbe
inc
push
mov
inc
mov
scas
lods
neg
orps
aad
sub
pop
jmp
and
ds
loope
sbb
mov
and
fsubrl
jg
ds
add
insb
jb
inc
jl
shrb
lods
cwtl
into
mov
inc
mov
data16
lods
add
imul
bts
push
fmuls
loope
mov
cs
mov
fsubrl
pop
pop
and
iret
ja,pt
adc
nop
insb
in
xchg
dec
adcl
jno
test
push
pop
lahf
shrl
push
inc
pop
js
subl
pop
push
scas
or
pop
or
ljmp
cwtl
pushf
mov
inc
push
jb
mov
ss
test
pop
push
jmp
std
push
subb
lock
jp
pop
fisubrl
mov
or
outsb
jb
shll
clc
sub
or
jo
mov
idivl
push
adc
out
mov
sbb
in
xor
mov
ja
jo
js
xchg
addb
test
cld
lock
and
sbb
mov
mov
adcb
fs
pop
xorl
pop
dec
mov
hlt
in
scas
mov
fidivrl
call
hlt
add
xchg
jl
imul
mov
cmp
fcmovb
mov
cmp
fsubrl
push
push
mov
orl
dec
push
jmp
mov
adc
and
sbb
divps
fs
out
repnz
pop
addr16
lock
dec
mov
cs
adc
pop
shrb
dec
sahf
inc
fisttps
pusha
inc
negb
fcom
mov
mov
sub
lret
and
stos
mov
stc
sub
movsl
rol
arpl
gs
rorb
pop
xor
or
push
aam
daa
push
shlb
pushl
loopne
or
clc
aam
sub
xchg
add
call
popa
sub
cmp
pop
jl
dec
ds
fmuls
repnz
mov
xchg
cs
div
loope
stos
sbb
inc
ss
movsb
dec
mov
cld
adcb
mov
jl
outsl
add
jb
xor
jge
mov
inc
test
jle
mov
cmp
pop
sbb
lods
cli
cltd
add
je
dec
mov
cmp
ljmp
sbb
sbb
inc
mov
pop
std
test
fidivrl
and
roll
mov
inc
xchg
mov
sbb
orl
or
notb
inc
imul
fdivl
testl
sub
push
add
inc
or
inc
outsl
in
sbb
int3
fisttps
push
push
xchg
jns
xchg
rcrb
sbb
cli
jle
mov
js
inc
movsb
and
adc
adcb
frstor
mov
sub
mov
pop
loop
push
adc
aad
dec
clc
or
mov
bnd
idivb
and
fidivrl
ss
into
jecxz
inc
icebp
jp
mov
cli
add
das
or
loopne
lea
rorb
or
xor
xor
cmp
inc
loopne
out
xor
in
mov
cs
sbb
jmp
pop
mov
sti
cwtl
xchg
inc
cmp
cli
mov
out
dec
mov
and
leave
rclb
adc
fs
mov
mov
dec
sbb
or
test
jp
loop
mov
jbe
test
push
sub
mulb
lods
je
xor
sub
in
cli
push
xchg
lock
sbb
lret
sbb
dec
pop
out
xchg
or
dec
jmp
sub
sbb
or
pushf
dec
inc
pop
jle
fidivrl
jle
pop
jne
lock
dec
popw
pop
std
mov
pushf
scas
clc
xor
iret
lock
mov
cli
dec
sti
mov
inc
mov
addl
mov
stc
jbe
cltd
sub
add
cmp
sub
adc
inc
or
pop
cmovl
pop
stos
ja
call
jle
adc
int3
in
loope
aas
inc
loopne
add
and
lahf
inc
sbb
push
loope
pop
push
xlat
mov
ret
std
mov
cmc
mov
je
movb
push
inc
lahf
mov
xchg
test
jl
ret
add
bnd
out
and
sar
hlt
jo
cmpsb
add
repnz
iret
sbb
mov
sub
dec
or
push
test
addr16
test
push
mov
cmpl
push
mov
rcrb
loop
dec
jg
pop
cmp
jbe
mov
mov
cld
fmulp
lret
loope
jnp
aaa
sbb
mov
xor
adcl
pop
rcl
dec
or
pop
mov
js
lock
sub
pop
movsb
cwtl
fstpl
pop
pop
imul
sbb
jo
movsb
pop
mov
loopne
into
xchg
out
rorb
jle
add
clc
in
arpl
aas
mov
out
inc
jge
and
adc
cmp
jno
loop
pusha
cmp
fisttpl
mov
ret
in
cmpsb
jmp
shrl
push
ret
xor
clc
mov
jle
jmp
cmp
adc
dec
jp
pop
lcall
es
cld
shlb
add
sub
push
insb
out
insl
loop
int
xlat
iret
out
in
fwait
or
data16
or
cmp
filds
ss
mov
aaa
imul
mov
je
xor
shrl
push
pusha
call
jp
pusha
xor
es
and
jmp
cmp
scas
pusha
loopne
xchg
out
mov
lods
sbb
stos
add
pop
xchg
loopne
xor
sbb
jl
shrb
cmp
fadd
shrl
imul
cmp
fsubr
sti
icebp
xchg
clc
jl
or
scas
jge
js
sub
xor
cmp
cmp
rorb
bound
mov
add
mov
dec
mov
rcrl
pop
push
mov
fsubl
cmpb
test
and
movsb
lock
inc
inc
xchg
js
lock
cmp
dec
inc
jmp
xchg
cmp
into
ret
addr16
iret
jl,pt
icebp
ljmp
cmp
data16
mov
test
stc
fdivl
cmp
mov
push
in
les
xor
cmpsl
out
mov
jno
cmp
je
fidivs
adc
rcrl
mov
dec
ret
scas
lock
rolb
or
mov
pop
cmp
ror
pop
mov
inc
das
add
jl
scas
pop
inc
movsb
dec
pop
mov
mov
out
repnz
jbe
shll
in
aaa
rol
inc
mov
repz
pop
xor
cli
nop
jo
push
test
cwtl
and
xor
xchg
scas
dec
cmp
push
mov
mov
idiv
sub
lret
cs
out
dec
iret
xchg
push
mov
pop
pop
mov
add
data16
push
pop
push
lcall
dec
hlt
jnp
sub
cwtl
stos
xchg
mov
call
in
out
std
mov
inc
jno
xchg
xor
lret
fcoms
mov
mov
push
out
xlat
ja
inc
sarl
js
insb
shl
lret
rorl
popl
mov
sub
js
loopne
mov
pusha
mov
cs
add
jge
arpl
adc
movsb
xor
xor
sar
mov
inc
rolb
jle
cld
hlt
into
inc
dec
repnz
mov
hlt
cmc
imul
adc
lret
div
xor
in
or
mov
je,pn
inc
out
mov
lea
dec
ficompl
pop
jge
add
scas
and
and
xor
aaa
pop
and
push
loop
mul
adc
sub
dec
aam
lcall
jbe
dec
call
in
clc
adc
pop
push
leave
out
insl
lods
test
lahf
mov
cmpsl
adc
nop
jo
idiv
dec
pop
shlb
pop
or
iret
jb
cmp
xor
idivl
inc
es
insb
cmp
test
sub
je
xchg
sti
or
xor
lea
add
xorb
dec
mov
sbb
inc
rclb
arpl
fs
push
cmp
pop
pop
mov
ds
or
push
sub
fisubl
bound
ret
pop
adc
fcompl
jnp
jecxz
sub
dec
xchg
filds
jl
mov
push
pop
sbb
xchg
dec
inc
pcmpeqb
add
mov
icebp
ljmp
addr16
push
cmp
lcall
cmp
push
clc
xor
sbb
es
and
fdivr
mov
repz
dec
push
mov
in
out
inc
jp
jecxz
mov
imul
mov
gs
leave
pop
ds
pop
ret
xchg
repnz
ja
sahf
jnp
call
shlb
cli
aad
cli
sub
mov
pop
or
inc
aam
jmp
js
shrb
ret
mov
test
jge
loopne
mov
clc
pop
stos
outsb
or
push
out
shl
xchg
add
pop
cld
pop
adc
add
test
jp
jbe
xor
dec
cli
les
mov
loopne
in
ficoml
sbb
loop
push
pop
sbb
jl
iret
mov
xchg
test
fadds
cmp
dec
mov
sub
mov
ret
and
xor
aam
adc
fidivrl
pop
push
xchg
and
call
push
pop
lock
movsl
dec
jb
in
jne
fstpt
rclb
call
loope
push
pushf
pop
repnz
sbb
ficoml
xchg
orl
pop
mov
fst
push
out
rclb
xor
jbe
lock
jle
jle
sub
mov
es
lcall
ficoml
les
inc
insb
sbb
mov
lods
shlb
mov
push
or
sbb
mov
out
jmp
mov
cmpsb
jge
xor
jecxz
cmp
out
decb
sub
add
xorb
xor
loopne
in
or
cmp
fidivs
xor
mov
and
mov
les
in
lret
or
addl
or
and
sub
add
xor
mov
loopne
and
and
fcmovnbe
stos
int3
or
mov
lock
or
js
add
pushf
jmp
ljmp
adc
je
cmpsb
ds
push
icebp
lock
fistpl
jl
pusha
daa
fists
mov
orl
xchg
js
jmp
add
pop
clc
push
inc
loope
imulb
testb
repnz
jl
pop
dec
lea
mov
ds
cld
xor
pop
test
sbb
xlat
es
hlt
dec
inc
scas
mov
sbb
mov
sbb
dec
adc
shrd
call
sub
xor
add
dec
or
push
mov
jge
push
xor
xchg
or
test
pop
cmpb
int
pusha
jo
sbbl
mov
lock
mov
cwtl
push
fwait
into
cmp
sti
jl
jno
pop
inc
inc
add
inc
imul
lock
push
pop
enter
cli
cmc
sti
xor
test
push
or
mov
test
data16
pop
mov
jno
loopne
sbbb
mov
movsb
xchg
cmc
jecxz
pusha
lret
and
js
loopne
loope
in
rcrb
jp
enter
sbb
fcomps
add
xchg
or
sbb
mov
xchg
adc
sub
neg
orl
add
sahf
imul
mov
jp
fidivrl
rorl
pusha
jl
inc
jge
lods
ljmp
add
js,pn
movsb
mulb
mov
jo
pop
or
out
out
imul
mov
adc
int
lcall
cmp
cwtl
cmp
inc
test
cs
fsub
xchg
std
sahf
lcall
loope
xchg
adc
or
fiaddl
loopne
into
inc
jl
femms
sbb
testb
and
pop
fidivl
popa
push
sub
push
loope
xchg
test
pop
mov
and
xor
and
sarl
imul
mov
cmp
in
adc
mov
in
dec
lods
push
pop
mov
maxps
int3
insl
pop
jle
int3
sub
sbb
jo
arpl
out
dec
aas
xchg
inc
stos
xchg
add
decb
rcl
mov
rclb
jmp
sbbl
add
shlb
or
mov
mov
aas
in
push
rclb
push
sahf
je
dec
sub
outsb
insl
rclb
sbb
add
into
cli
xor
and
jbe
and
jo
adc
jle
outsb
outsl
mov
jle
jp
mov
add
fisubrs
in
ret
test
push
mov
in
pop
cmp
iret
xchg
mov
jne
adcb
test
jge
jge
je
repnz
mov
lcall
mov
sbb
jecxz
dec
or
into
sbb
daa
pop
or
sbb
rolb
dec
out
mov
std
jbe
ss
fsubl
add
neg
ror
imul
xor
das
push
cmc
jmp
test
not
clc
mov
iret
mov
xlat
jno
adc
arpl
js
outsb
or
movsb
pushaw
mov
inc
les
sub
loope
iret
sub
sar
data16
mov
jbe
mov
sbb
fnsave
fisubs
mov
and
clc
or
int
push
aaa
loop
mov
mov
aam
pop
cmp
pop
nop
jbe
xchg
adc
loop
clc
inc
adc
loope
and
mov
or
pop
lcall
shll
mov
aad
daa
popa
lea
and
arpl
clc
loopne
les
push
xlat
or
pop
hlt
add
jg
fbstp
repnz
call
and
add
jmp
push
cmp
mov
jnp
xor
cmp
ret
adc
cli
sub
rolb
std
popa
loop
cmp
dec
ds
bswap
enter
and
fldcw
push
icebp
or
ret
fs
cli
fiadds
js
hlt
imul
mov
cmp
outsb
cmp
cli
jecxz
fiaddl
fimuls
mov
insb
add
orb
and
sbb
rcrb
inc
adc
jo
mov
lock
mov
test
jle
mov
xchg
ds
aaa
push
aad
mov
xor
xchg
andb
lret
fmulp
js
jp
jg
inc
xor
ss
fnop
movsl
xor
push
das
mov
push
xchg
cmpsb
or
xlat
pop
push
std
cmc
dec
jmp
mov
push
sti
mov
in
adc
adc
inc
outsb
pop
sbb
hlt
leave
shlb
cmp
lcall
rorl
jp
pop
cli
ret
daa
sbb
lds
clc
push
leave
scas
cmpsl
xchg
adc
cmp
mov
lcall
scas
out
mov
into
or
cmp
jo
sbb
imul
mov
jb
push
repz
cmc
test
iret
test
mov
pop
test
and
testl
aad
add
pushw
fcmove
mov
jne
clc
mov
hlt
cli
fcompl
push
jo
popf
pop
pop
sbb
adc
xor
loopne
dec
sarl
pop
push
jg
cwtl
xchg
popf
daa
sbb
enter
loopne
es
cmp
lock
bound
jp
cmp
or
sti
jp
sbb
push
cltd
loop
mov
inc
test
mov
sub
nop
sub
test
loopne
sbb
into
outsl
adc
popf
rol
orl
add
cmp
insb
mov
or
lock
lock
push
sti
pop
out
out
xchg
adc
ss
fcoml
mov
shrl
negl
jp
and
cli
pop
sub
sti
loopne
adcb
mov
ss
inc
jl
loop
out
mov
jns
xor
xor
sbb
gs
dec
add
clc
inc
sbb
cmp
rorb
loop
inc
adcl
mov
insb
push
enter
push
dec
dec
mov
lret
sub
mull
xchg
mov
and
mov
loop
inc
add
jnp
test
sub
inc
sub
jmp
xchg
cmp
inc
mov
jle
shrb
xchg
sbb
adc
sahf
jp
inc
add
shlb
cmp
imul
test
push
add
mov
lods
sbb
mov
fs
test
lret
leave
mul
add
jbe
or
cmp
outsl
loop
add
pop
ds
sub
cli
add
call
mov
or
or
nop
cmc
add
mov
mov
ljmp
and
and
push
lock
push
cmpsb
shlb
std
popa
sbb
or
leave
in
popl
ficoms
xchg
sub
sarb
mov
mov
jnp
xor
and
jmp
cs
sub
ljmp
pop
ljmp
aaa
push
xor
mov
push
cwtl
les
and
popa
scas
pop
mov
shll
clc
mov
loop
or
dec
adc
push
cmovbe
dec
push
aam
js
gs
xchg
sub
and
adc
pop
clc
pop
icebp
jnp
popf
push
pop
icebp
adc
lds
fisttps
pop
dec
lds
out
and
loop
sbb
inc
jae
push
cmp
lock
insl
in
adc
or
mov
sub
mov
mov
fsubr
sahf
push
jno
fists
push
es
mov
out
cmc
call
mov
sbb
push
sbb
clc
es
mov
loope
add
lods
aam
push
adc
movsl
movsb
xchg
call
rcrl
pop
sub
or
push
lret
lock
push
in
aaa
jbe
cmpsl
pop
mov
and
movsb
push
pop
movsb
mov
icebp
push
pop
js
outsb
add
cmp
loope
mov
ss
rclb
sbb
sub
les
xchg
fstps
mov
shr
std
hlt
xchg
jle
mov
push
inc
sti
psubsw
adc
clc
lcall
pop
test
roll
cmpsb
call
clc
icebp
adc
ret
xor
jge
jl
lret
pop
and
mov
push
popw
fnsave
fildl
repnz
mov
mov
jle
pop
and
daa
jmp
sbb
or
cmp
pop
push
xor
je
out
cmpsb
jp
jecxz
stos
mov
int3
cmp
or
jl
sahf
sub
push
pop
add
cmp
dec
js
push
stos
xlat
shl
pop
js
call
hlt
sub
push
cli
ret
out
out
shll
mov
and
ja
mov
and
cmp
in
cmp
ja
xchg
hlt
lock
lcall
ds
stos
push
sbb
dec
test
or
xchg
lods
scas
pop
mov
xchg
sub
cld
jle
lcall
enter
cmp
out
loope
idivl
lret
mov
add
or
jno
addb
negb
jbe
lods
icebp
icebp
mov
mov
lcall
mov
bound
mov
lock
test
dec
movsl
test
pop
adc
inc
out
jb
hlt
xchg
cmp
xor
into
cmpsb
in
or
dec
mov
cs
sbb
fcomp
cli
mov
mov
lock
idiv
ds
fisttps
imul
adc
aad
mov
sarb
les
mov
sbb
es
out
movl
inc
push
xor
iret
nop
fimuls
int
mov
jbe
xchg
push
jl
ljmp
mov
sbb
and
jbe
sub
xor
negl
adc
mov
rclb
mov
xchg
repnz
sbb
negl
push
cmp
mov
cmp
xchg
mov
mov
jl
sbb
into
rorb
sub
push
sbb
jo
and
repz
add
or
fcompl
add
ljmp
les
xchg
insb
dec
stos
int
les
sbb
or
aad
xlat
stos
shl
xchg
dec
mov
or
cmp
or
insl
adc
xor
xor
xor
xchg
xor
mov
pop
xchg
aaa
xchg
jp
add
call
cld
and
ret
sti
jecxz
shlb
dec
fs
loope
cmc
dec
xchg
rol
mov
add
sarl
jns
jg
shl
rcrb
or
adc
push
jle
jo
add
scas
adc
int3
or
mov
lock
cmp
dec
loop
adc
shr
sub
lock
notl
mov
or
dec
out
lds
dec
sbb
xchg
dec
cmp
cli
fs
and
data16
dec
mov
and
insl
cli
add
jl
and
add
sbb
mov
cmc
pop
test
fiadds
pop
clc
cmp
loopne
sarb
xchg
bound
sbb
xchg
add
lock
loope
jo
and
xchg
js
loop
pop
fidivl
jl
leave
sbb
js
mov
call
jmp
testl
xor
cmp
push
hlt
inc
sbb
pop
notl
mov
mov
xchg
push
sub
call
in
mov
out
cmc
xlat
dec
mov
inc
push
test
lock
add
xchg
ret
lea
fcoml
call
pop
inc
das
or
cli
jbe
loop
pop
xchg
inc
mov
push
shr
clc
or
inc
sub
rcrb
jge
loopne
fcomip
mov
and
lods
mov
xchg
mov
xor
or
js
add
or
sbbb
push
pop
lock
pandn
or
mov
dec
cs
test
and
out
bound
mov
xchg
rcl
jecxz
sub
pop
mov
pminsw
and
clc
aaa
xchg
scas
mov
mov
test
fcomip
loopne
int3
ret
push
and
clc
mov
in
mov
pop
lods
adcb
push
fbld
loop
add
mov
pop
adc
stc
cmp
jne
repnz
ss
lods
push
mov
lods
cld
popa
pop
adc
cmp
cmp
xchg
inc
imull
je
add
pop
out
scas
jecxz
test
mov
mov
add
pop
nop
push
jl
xchg
pop
ss
pop
in
pop
adcl
mov
push
negl
lds
sbb
ljmp
xlat
pop
sub
and
fbld
adc
sar
mov
cwtl
setbe
into
mov
pop
push
ja
mov
push
jge
add
xchg
mov
mov
mov
mov
bound
pop
cmc
inc
mov
pop
pop
ret
mov
aaa
clc
inc
pop
push
add
xor
ror
rol
lds
cs
out
mov
push
bound
data16
add
lock
stos
cmp
std
cmc
loopne
out
sub
pop
int
cmp
push
fmull
dec
sbb
mov
inc
cmp
xchg
or
mov
popa
xchg
dec
push
sbb
xchg
sub
adc
adc
inc
enter
fldl
jo
scas
cld
jbe
mov
sbb
insb
jl
loope
lods
mov
cwtl
test
sti
cld
icebp
push
cmp
inc
xlat
cmp
daa
and
sub
add
daa
nop
push
pop
mov
mov
xor
ds
es
pop
test
mov
ret
lock
popf
cmp
push
rcrl
dec
xchg
data16
aam
out
or
jnp
xchg
sti
dec
call
cmc
cmp
or
jg
nop
or
jo
dec
lcall
lock
mov
dec
loopne
cwtl
push
lea
or
ret
daa
add
mov
js
ljmp
lods
push
dec
sbb
adc
dec
sti
dec
pop
sbb
sbb
lods
jmp
ret
sub
sub
call
stos
rcr
or
int3
in
lock
mov
sarb
jbe
cmp
cmp
sbb
aam
mov
loop
cmp
or
test
push
fdivs
cmpl
loope
pop
shr
int
or
fs
push
push
inc
cli
inc
add
das
push
mov
mov
movl
es
inc
mov
nop
pop
vcvttpd2dqx
test
xchg
scas
add
sbb
and
xchg
addps
and
scas
add
mov
loope
ficompl
adc
mov
adc
fdivr
xlat
jecxz
fdivs
xor
fs
mov
or
push
movsl
push
mov
mov
iret
es
fdivl
jge
mov
adc
add
adc
inc
mov
add
push
fsubrs
inc
out
mov
xchg
test
jl
mov
push
or
inc
pop
int3
push
shl
dec
mov
jl
adc
fs
jmp
mov
jo
sub
xchg
sub
cmp
loopne
je
cmc
loope
mov
andb
sahf
leave
mov
rol
and
loope
icebp
call
pop
push
xor
insb
test
js
out
xchg
int3
sbb
sahf
insb
loopne
mov
ds
fldl
fimull
flds
enter
movsb
sahf
mov
decb
nop
mov
ljmp
dec
das
arpl
bound
inc
cmp
push
lcall
pop
add
hlt
dec
add
xchg
daa
inc
outsl
inc
dec
cli
add
sub
divps
sbb
idivb
std
push
pop
ficoml
xchg
xchg
lock
ficoms
mov
cwtl
rep
pusha
ljmp
clc
in
jl
test
shlb
pop
push
or
aam
repnz
ret
sub
jge
mov
add
jae
inc
add
mov
bound
sbb
out
roll
shlb
inc
adc
and
imul
cmp
and
ss
arpl
jb
pop
out
pop
shll
mov
cmp
push
outsl
pop
jle
inc
mov
fcoms
pop
jl
aas
arpl
mov
outsl
aad
aaa
push
mov
jae
cld
sub
inc
cld
clc
push
pusha
push
cmp
hlt
popf
lcall
rorb
lock
rcr
orb
xchg
add
je
push
dec
push
inc
xchg
inc
loop
outsb
outsb
aas
or
dec
adcb
pop
pusha
testl
pop
aad
imul
pushf
pop
pop
enter
mov
and
lea
call
scas
add
cmp
shlb
xorb
jl
mov
or
sbb
stos
arpl
push
gs
cmpsl
mov
push
sub
loope
daa
adc
cwtl
mov
push
xchg
dec
mov
cli
dec
lahf
andl
cli
dec
loopne
addr16
mov
jnp
jecxz
nop
aam
xor
clc
xorb
mov
and
cld
pop
jnp
or
mov
and
lds
adc
pusha
mov
clc
pop
and
push
dec
fists
sti
jmp
cmp
pushw
mov
ds
stc
daa
pop
mov
ds
pop
dec
divl
mov
dec
mov
lock
ja
cmpsl
adc
ljmp
cmpsl
pop
inc
sbb
dec
cmc
imul
hlt
mov
inc
nop
mov
jl
iret
int
in
ja
or
lods
repz
pushf
insl
bound
je
rolb
pop
or
mov
decl
repz
shl
sub
call
xor
cwtl
push
sar
arpl
nop
repz
sbbl
adc
loop
in
pop
sbb
xchg
dec
pop
or
add
filds
rol
inc
les
push
hlt
std
add
bound
jae
or
pop
hlt
bound
jecxz
xor
lcall
outsb
jbe
push
dec
sbb
add
jmp
mov
orb
pop
rolb
and
xchg
ds
mov
sti
mov
insb
inc
pop
sub
add
or
jl
sbb
fidivrl
dec
jecxz
push
mov
adc
int3
mov
cmpsb
inc
push
add
pop
jle
cld
jle
in
testb
mov
jge
sub
xchg
test
aam
mov
loopne
add
and
jnp
add
fs
sbb
pop
lock
jo
dec
jle
ret
shld
sbb
mov
enter
cmp
jl
xchg
ljmp
dec
in
lods
mov
mov
aas
add
or
sub
cmpsl
mov
and
ss
call
call
jns
xchg
push
cld
clc
lock
xor
push
aas
xchg
lcall
push
ret
mov
mov
lods
int3
fists
test
imul
sbb
es
adc
gs
add
in
es
loope
pop
xchg
jo
sarb
or
clc
and
es
lds
ret
adc
rep
sbb
add
scas
or
clc
hlt
inc
xchg
insl
cmp
cwtl
scas
xchg
pushf
xlat
loopne
or
dec
in
clc
dec
add
xchg
adc
std
fsubp
xor
sahf
clc
out
mov
subl
clc
mov
outsb
xor
and
jne
out
xchg
fs
sti
jmp
call
orb
cmp
adc
push
clc
sbb
lahf
aam
sti
mov
or
scas
inc
push
mov
insb
xchg
lret
xchg
lock
in
jbe,pt
xor
loop
push
sar
js
pusha
js
cmc
js
pop
movl
and
jns
roll
jle
clc
or
loope
xor
insb
scas
je
pop
pop
rcrl
sub
sub
movsl
addl
pop
push
pusha
pcmpeqd
xlat
cmp
sbb
sub
stos
inc
xchg
pop
stos
dec
lds
shrb
xchg
pusha
adc
adc
cmpsb
jge
xor
add
mov
cld
je
push
mov
mov
and
jge
mov
cmp
add
xchg
movsl
mov
mov
outsb
pop
and
iret
add
fidivs
cmp
pop
out
sbb
mov
mov
test
ds
add
or
pusha
mov
mov
mov
das
lods
inc
mov
mov
fdivl
pop
arpl
jl
sar
dec
xor
pop
and
addl
push
repz
aad
jmp
xor
cmc
push
and
push
jp
inc
cmp
mov
std
arpl
pop
xchg
xor
push
call
movl
push
hlt
icebp
mov
and
mov
aam
push
mov
pop
mov
mov
iret
nop
xor
xchg
pop
cli
dec
loopne
pop
inc
push
lahf
dec
cmpsl
cmpsb
pop
rol
fwait
lock
test
test
aad
cwtl
push
mov
lcall
pop
mov
mov
mov
mov
lock
inc
idiv
icebp
add
out
dec
orb
mov
pusha
pushf
jb
pushf
sarb
mov
xor
pop
sbb
ja
out
and
add
add
mov
dec
or
repz
test
dec
aaa
aaa
aaa
aaa
sahf
cmpsb
push
or
mov
inc
sub
aaa
aaa
aaa
sub
ffree
mov
add
ds
add
inc
pop
add
mov
and
or
outsb
pop
sub
add
inc
xchg
adc
pop
lock
addb
insl
jl
lahf
and
or
cmp
jne
loopne
sbb
lods
and
jne
les
or
sbb
loop
rolb
push
jl
lock
lods
pop
sbb
test
ret
ljmp
jge
dec
and
sbb
mov
and
out
sbb
mov
je
bound
insb
outsb
mov
add
repnz
lahf
mov
push
stos
sub
int
adc
cmp
xchg
xchg
adc
pop
popf
lods
sti
push
jecxz
jmp
inc
pop
loop
jge
add
mov
sub
jle,pt
push
mov
cmp
mov
ds
out
lods
jns
adc
repz
outsb
aad
mov
push
fldcw
sbb
arpl
inc
mov
js
lock
adc
fisubl
negl
cwtl
test
push
adc
into
js
mov
sub
lret
rcrl
ror
das
pop
jmp
xchg
jle
fcomip
cli
out
lds
popa
push
xchg
fdivrl
mov
ret
push
es
scas
mov
cmp
sbb
js
ds
xchg
push
pop
cltd
or
das
mov
ret
lret
mov
sub
ret
cli
jo
scas
mov
movsb
and
out
add
out
fidivl
jp
loop
roll
fsubl
fs
jne
cmp
lods
pop
pop
sbb
nop
rcll
stc
sti
push
inc
and
xchg
leave
inc
adc
and
and
or
ret
and
call
or
xchg
std
js
arpl
int
divps
in
sub
in
dec
cmp
aas
ds
addr16
fmuls
xorb
insb
push
inc
mov
loopne
jle
sbb
nop
inc
jge
sahf
loope
cmp
cmc
arpl
and
popf
ds
mov
lahf
fcom
jbe
je
mov
adc
pop
xor
inc
inc
sub
add
in
adc
outsb
mov
out
add
xlat
add
icebp
cld
add
xchg
hlt
out
mov
mov
push
xchg
jns
ljmp
add
jno
dec
xchg
ss
inc
mov
add
push
lahf
movsl
arpl
adc
add
movsl
inc
nop
addr16
fcmovu
xchg
jbe
cmp
sarb
es
js
rclb
push
lods
int3
lods
gs
jmp
mov
lea
cli
pop
adc
imul
loop
push
xchg
in
and
jp
test
lds
mov
lock
call
pop
js
add
lods
daa
scas
ss
add
ds
data16
bsf
lods
push
inc
push
inc
je
lret
mov
cld
mov
mov
sti
inc
or
sub
adc
or
test
adc
arpl
xchg
adc
andb
push
jl
clc
sub
and
mov
cmp
movsb
inc
xor
pop
lock
pushf
incb
xor
cmpsb
inc
or
lods
sar
in
aam
jo
fdivrs
push
lahf
add
mov
negb
add
aaa
mov
sahf
shlb
sti
hlt
repnz
call
hlt
adcl
fimuls
cld
loop
mov
incb
mov
outsl
xchg
sahf
gs
cmp
ret
rcl
add
data16
cmp
jmp
movsl
mov
push
pop
test
pop
xchg
sti
jle
loop
jb
ret
add
ss
pop
inc
nop
test
shlb
movsb
xchg
cmpsb
mov
inc
lahf
and
out
mov
fidivrl
aam
das
push
pop
ss
into
push
ret
cmpb
push
pop
jge
in
imul
pop
inc
js
pop
pusha
pop
mov
push
pop
fisubrl
in
cs
add
inc
imul
stos
imul
push
mov
pop
dec
jmp
mov
mov
mov
pusha
sub
mov
loop
rorb
and
sti
adc
mov
sbb
push
xlat
xlat
fadds
in
sub
sub
adc
movsb
outsl
jmp
fsub
daa
dec
adc
pop
sub
scas
or
mov
sarb
add
lock
bswap
mov
cli
sahf
mov
shlb
push
addr16
jecxz
inc
loope
jno
and
fcomip
scas
lods
inc
rorb
or
pop
jmp
sbb
fisubrs
icebp
sbbb
jp
xchg
add
sbb
lods
lds
insb
popf
jl
push
ja
jmp
pop
pop
subb
push
sbb
jo
xor
mov
lods
or
maxps
cmp
imul
adc
inc
lods
add
dec
sbb
pop
xchg
push
int
shll
test
sub
addr16
xchg
push
jg
fmull
or
push
mov
cmp
sbb
imul
mov
push
push
aam
jge
push
out
dec
shrl
aad
pop
inc
pop
mov
mov
push
jnp
jl,pt
add
push
cmp
in
fwait
inc
xor
idivb
xchg
dec
cmp
ret
and
xchg
loop
fisubrs
adc
adc
cmpsl
xor
mov
xchg
mov
add
lods
dec
mov
mov
popl
add
adc
adc
xor
jl
adc
push
out
rorb
mov
pop
mov
mov
adc
mov
sti
push
sti
jle
cmp
xor
add
cli
push
and
dec
dec
xchg
dec
add
lahf
ds
jo
mov
push
push
push
ljmp
aad
xor
bound
cli
shlb
insb
cmp
cmpxchg
stos
rcrb
ficoms
sbb
pop
adc
movsl
mov
shrb
insl
js
fidivs
cmpsl
dec
sarl
mul
xor
rolb
shrb
leave
out
xor
sub
lods
jne
xor
sahf
mov
push
sbb
ret
hlt
test
scas
sub
push
push
lea
mov
mov
icebp
ljmp
inc
out
in
cmp
icebp
movsl
dec
and
loopne
nop
shlb
add
mov
add
mov
sbb
inc
xor
js
js
xchg
loop
scas
adc
and
push
and
or
loop
cmpsb
xorb
adc
leave
icebp
jnp
clc
lock
cli
negl
repnz
xchg
je
mov
rcr
xchg
inc
jl
pop
hlt
push
jecxz
idivl
mov
adc
lea
test
aam
or
inc
xor
test
pop
flds
jo
mov
je
fs
mov
mov
xchg
pop
stos
loop
pop
dec
push
inc
test
loop
cmp
pop
xchg
pop
xor
add
push
subb
cmp
test
adc
int3
adc
dec
adc
pop
or
rcrb
shrl
stos
inc
adc
sbb
ds
mov
inc
push
sahf
mov
or
mov
push
pop
testb
mov
es
or
push
inc
fisttps
xchg
push
cli
jle
jp
imul
xor
addl
fidivs
int3
js
mull
adc
out
mov
sahf
sub
sarb
adc
push
aaa
mov
stos
wrmsr
push
adc
pop
pop
imul
data16
loopne
movsb
push
mov
call
ds
clc
xchg
sbb
inc
push
mov
mov
inc
loopne
fwait
test
push
sbb
and
and
xchg
mov
adc
adc
or
sub
mov
jo
icebp
ret
mov
mov
js
fbstp
mov
mov
jne
jl
mov
jbe
jge
jge
cli
or
jecxz
mov
push
and
xchg
gs
ljmp
mov
mov
dec
mov
test
cmp
int
xchg
mov
mov
dec
jecxz
mov
shrb
inc
cmp
cli
neg
es
dec
sbb
pop
loopne
xchg
scas
push
fsubl
xchg
cmp
dec
ljmp
xacquire
push
and
loope
dec
mov
pushf
adc
sti
add
mov
add
inc
pop
or
int3
pop
mov
enter
dec
sub
pop
mov
xchg
pop
pop
jecxz
mov
dec
dec
ja
shrb
inc
inc
sbb
jne
decl
cmpsb
push
pop
outsl
add
ss
insl
jmp
mov
out
jmp
loopne
pop
inc
cld
in
loopne
sub
push
decl
std
icebp
popa
cmp
pop
pop
xchg
je
negl
dec
push
movl
sbbl
push
es
nop
cmp
mov
in
and
cmpsl
lahf
or
repz
fwait
aam
sbbb
arpl
ss
repnz
lcall
lock
jge
sub
js
sti
mov
and
fadd
sti
add
xor
cmp
sar
fistpl
cltd
jg
add
inc
jp
push
push
std
call
ds
jge
ljmp
pop
push
sub
fs
inc
sbb
pop
jb
dec
les
mov
addr16
xchg
mov
pop
cmp
repnz
push
ss
lods
jb
mov
test
push
cli
lock
xor
and
pop
sub
jno
jle
xchg
push
xchg
lods
icebp
dec
shlb
mov
mov
or
icebp
add
inc
pop
pop
xor
xor
add
ret
xor
hlt
push
inc
inc
fwait
in
aam
sti
hlt
pusha
sbbl
orl
pop
mov
mov
ret
or
inc
xor
or
pop
loope
nop
sahf
xchg
adc
jns
pop
rolb
sar
push
sbb
or
mov
ret
nop
dec
mov
mov
xchg
clc
add
test
mov
mov
movsl
mov
inc
jp
les
add
je
jp
clc
sbbl
xor
pop
dec
fs
xchg
xor
sbb
xchg
adc
inc
icebp
loopne
ret
inc
mov
shll
loop
inc
daa
pop
sbbb
lcall
das
lock
clc
les
daa
dec
stc
mov
rcll
movsl
shld
je
testl
sbb
clc
jecxz
shr
xor
add
push
lods
push
push
and
fdivrs
mov
sbb
lds
clc
outsl
lock
mov
pop
inc
js
call
out
mov
lock
call
lock
ds
jmp
es
sub
lock
pusha
mov
jle
cs
mov
std
aam
add
insb
imulb
sahf
es
jbe
pop
adc
out
xchg
add
adc
aam
ror
cmp
ret
mov
les
or
mov
sub
push
mov
mov
cmp
jle
xlat
addb
pop
scas
icebp
mov
add
out
es
mov
lahf
mov
sbb
cmpb
in
xchg
push
mov
js
cmpsb
adc
js
scas
xor
cs
insb
shlb
sub
testb
dec
rorb
or
call
ljmp
mov
jle
push
mov
int
rcrb
scas
aad
je
out
jge
jecxz
lret
shl
shlb
push
sbb
ret
enter
pop
bound
clc
and
mov
dec
popw
cs
cli
into
insb
loope
cmpsl
jno
jp
les
ja
jmp
imull
stc
rclb
mov
clc
add
mov
sbb
outsb
test
cmp
pop
pop
clc
outsb
in
mov
jae
popl
pop
mov
lcall
dec
rorb
sub
in
push
int3
loopne
and
movsb
lods
pop
loopne
or
pop
dec
mov
loop
mov
mov
sbb
push
xchg
sub
cmp
xor
ds
std
xchg
adc
loopne
ja
fiadds
cmp
inc
ljmp
sub
jbe
sbb
lods
shlb
push
pop
cmp
shrb
les
fidivrs
cwtl
sbb
cmpb
mov
daa
sbb
stos
inc
loop
xchg
mov
mov
or
ficoms
inc
aas
shr
adc
cld
cmp
pushf
repnz
in
pop
pop
pop
dec
lcall
xchg
ds
xchg
sub
mov
add
dec
mov
test
lock
scas
loop
aas
dec
sub
add
sub
in
jmp
mov
fidivrs
arpl
scas
cmc
dec
cmp
in
les
pop
mov
les
add
cli
loope
sbb
je
fmulp
insb
aad
lds
cmp
mov
out
outsl
cmp
xchg
xor
xor
xchg
jp
clc
jp
dec
mov
fisttps
in
pop
mov
enter
in
movsl
andl
psubsb
pop
dec
das
ds
cld
cs
push
mov
push
mov
jecxz
aam
sbb
cmc
mov
gs
repz
clc
popa
mov
sti
outsb
adcl
lods
or
ret
rcl
dec
or
sahf
aad
jne
call
sahf
mov
clc
jno
cwtl
sub
mov
aam
dec
lahf
add
add
jle
sub
dec
int3
push
mov
jle
neg
adc
mov
loopne
and
xor
xlat
dec
jl
inc
xchg
adc
enter
mov
and
pushfw
xchg
shrb
jae
jle
xchg
add
pop
test
sti
inc
mov
out
and
and
inc
and
adc
add
xor
xor
dec
cs
cmp
xchg
mov
cld
xor
ds
jae
aam
push
movsb
idivl
pop
sahf
xor
inc
ret
push
repnz
push
shrl
clc
jecxz
test
and
jbe
xor
pop
sbb
sub
mov
out
cld
push
mov
jge
loopne
std
mov
rolb
or
pusha
and
cmp
cld
pop
add
out
aam
inc
fidivs
fistl
rolb
lods
imul
mov
pop
and
test
rorb
fs
lods
add
movb
popl
jnp
jge
cmp
loopne
ret
scas
push
mov
and
cmp
dec
or
jge
push
fdivl
dec
jl
ljmp
and
push
loop
les
fmulp
insb
xchg
mov
mov
movl
rol
scas
loopne
loopne
call
ficoml
pop
stos
hlt
cmc
add
inc
jp
mov
lea
mov
je
int3
mov
cli
lahf
sub
inc
mov
outsl
insb
cld
lret
cld
jno
pop
and
movsb
sahf
or
pop
pop
push
cmp
loope
in
lcall
test
cmc
fldt
sahf
pop
adc
mov
or
inc
xchg
pushf
cmc
fiaddl
pop
movb
lret
das
pusha
insl
ret
leave
mov
push
mov
xchg
leave
push
test
sbb
cmp
shlb
push
pusha
sub
jnp
in
lcall
xchg
lock
mov
dec
pop
adcl
push
sub
xor
sub
and
je
prefetch
idivb
subb
jno
pushf
dec
mov
xor
jns
jge,pt
mov
mov
jb
adcl
adc
aaa
adc
cwtl
push
pop
dec
pop
loope
cmp
dec
add
push
aas
fidivrl
sub
dec
jg
or
push
stos
xor
jmp
je
jbe
push
stos
adc
push
cli
jp
imul
pop
jl
je
jo
pop
ljmp
jp
in
loop
out
ljmp
push
test
lea
pop
pop
stos
pop
pop
pop
sub
pop
mull
mov
std
jp
push
adc
jno
out
andl
mov
mov
cs
cmp
cwtl
loopne
test
push
aas
mov
pop
dec
mov
in
test
jge
xor
pop
pusha
xor
or
ret
jl
cs
cltd
push
sub
loopnew
aad
and
sbb
lock
jae
cmc
jo
push
dec
shl
sahf
or
test
cmpl
insb
lods
and
jmp
movl
inc
dec
cli
cmc
cmp
pop
test
pop
push
cli
cmp
cmpsb
push
test
dec
mov
mov
scas
jge
fiadds
cmc
add
and
cmpb
xor
and
incb
lahf
adc
ds
inc
fmul
cwtl
push
add
xchg
les
mov
clc
cltd
inc
cwtl
or
mov
and
xchg
lds
pop
jl
dec
ror
mov
and
cs
inc
daa
jb
inc
int
jle
jp
pop
mov
es
mov
push
sub
dec
mov
xchg
insb
xlat
sbb
cmc
mov
dec
and
js
sti
js
mov
push
pop
pop
mov
dec
push
jo
pop
adc
pop
scas
adc
pop
xor
movsb
inc
test
push
fwait
sbb
xor
or
fs
insb
add
pop
inc
fmull
clc
push
jae
or
adc
xchg
hlt
int3
add
addr16
push
ret
sub
test
dec
sahf
mov
mov
or
mov
scas
mov
mov
ficoms
mov
mov
add
bound
pop
subl
mov
icebp
jmp
push
out
fldt
ds
adc
sub
out
iret
test
cmp
mov
push
test
jl
xchg
cld
xchg
pusha
cmp
in
loope
or
addr16
xchg
lods
ja
xlat
mov
sbbb
adc
push
dec
mov
mov
fisttps
xor
test
mov
aas
dec
popf
push
jno
fsts
jle
scas
inc
and
cmpsl
enter
dec
leave
bound
or
add
jecxz
mov
test
jg
dec
les
in
out
cli
js
xchg
shlb
fistpll
jbe
adc
sub
icebp
dec
mov
call
add
bound
xor
repnz
sub
cmp
cmc
fs
adc
mov
xor
fcompl
aam
pop
stos
icebp
js,pt
ds
mov
or
mov
sbb
mov
pop
xor
mov
jl
out
dec
loope
pusha
pushf
sahf
scas
jb
jecxz
loopne
cmpsb
scas
out
movsb
int3
dec
mov
add
mov
add
fbld
scas
outsb
push
jecxz
js
cli
mov
insb
mov
mov
lods
fimuls
cmp
cmpb
inc
pushf
out
lods
test
xchg
shl
and
dec
add
movsb
fmull
xchg
or
and
negl
shrl
xor
lds
push
and
out
or
dec
cmpsb
jle
push
sbb
fstp
sub
mov
inc
mov
or
jb
fldcw
addr16
daa
movsb
mov
test
pop
shl
mov
or
shlb
dec
aas
mov
fistpll
inc
inc
mov
rol
int3
mov
push
fdivr
sbb
and
pop
fisubrl
add
mov
sub
jge
or
push
loop
jo
in
push
push
xchg
clc
into
filds
mov
sbb
idivb
in
xor
dec
lahf
push
clc
mov
mov
stos
mov
scas
or
outsl
xchg
pop
outsb
xorb
cmpsb
call
sub
cwtl
xor
inc
add
icebp
pop
lods
negl
xchg
movsb
jo
setp
pusha
cltd
dec
xchg
movb
icebp
mov
test
hlt
jns
sub
sti
sub
idivb
xor
or
add
and
call
mov
movsl
ljmp
cmp
mov
ret
mov
and
jecxz
cmc
sub
sbb
dec
shrb
push
dec
mov
mov
cmp
jb
outsb
es
call
adc
mov
add
clc
pusha
push
mov
jl
ds
mov
sbb
inc
sbb
pop
subb
push
das
jmp
dec
lods
push
ret
sbb
rorb
and
adc
shll
add
scas
mov
call
ljmp
rorb
ljmp
push
aad
test
lds
adc
cmpsb
pop
mov
cmp
xor
xor
fbld
fimull
inc
jl
mov
out
mov
xor
inc
aad
mov
add
pop
adc
xchg
test
leave
sub
jne
jge
jno
xchg
fnsave
mov
jmp
mov
dec
cli
jb
popf
je
inc
xor
jecxz
xchg
int
cmp
cmpsb
in
ficomps
pop
dec
in
jo
mov
pop
adcl
pop
add
sbb
stc
mov
jbe
lock
mov
fsubrl
repnz
in
stc
fsubrp
ficoms
pop
sbb
fwait
push
ljmp
lret
mov
cmp
sbb
cli
ss
pop
aad
ja
push
arpl
ss
xchg
pop
xchg
or
fstpt
testl
push
mov
mov
dec
mov
std
fimuls
add
repz
je
mov
mov
das
adc
xchg
dec
sub
shll
pop
insb
push
mov
fwait
int3
adc
mov
sbb
mov
xchg
and
inc
jl
push
mov
xchg
subb
shlb
or
and
rclb
rorb
adcb
in
fcomps
inc
loopne
and
adc
stos
sbb
movsb
xor
hlt
dec
inc
mov
push
pop
cmp
pop
lret
mov
outsb
push
int3
jp
ror
and
sbb
cmp
jp
hlt
and
jg
les
insb
dec
loop
clc
dec
call
sub
js
orb
clc
jle
jle
sbb
sahf
inc
sub
lods
sbb
push
orb
js
add
inc
loopne
cmpsl
sbb
add
je
out
xchg
outsl
sbb
cli
ljmp
sbb
xor
jno
pop
xor
movsb
shlb
lock
mov
cmpsl
xchg
inc
adc
jp
jmp
clc
test
clc
add
dec
movsl
mov
aas
mov
test
mov
ret
loop
sbbl
mov
clc
push
into
fstp
insl
push
mov
dec
push
loope
test
cmp
mov
lods
jnp
add
mov
sahf
adc
nop
lock
and
movsl
movsb
fadds
push
xchg
jno
jmp
jb
add
fwait
bound
cli
hlt
add
sub
enter
add
mov
jp
jo
cmp
cli
jg
fists
or
shrl
movsl
xchg
adc
mov
or
pop
movsb
xor
loopne
add
cmpsl
pop
clc
cmpsb
mov
dec
cmc
mov
insb
jecxz
sub
js
jbe
ja
xor
xor
or
pop
js
adc
xchg
fldl
imul
lea
inc
popl
and
flds
int3
in
cmpsb
or
aad
fs
inc
push
mov
jp
push
or
xor
sub
mov
loope
lock
mov
subb
adc
rolb
xor
cmc
push
dec
in
fbld
pop
shr
mov
mov
hlt
aam
adc
xor
mov
jnp
jl
cmp
dec
pop
push
test
push
xchg
ss
clc
cmc
jmp
sbb
aam
in
add
jg
fdivp
push
lods
hlt
popf
stos
push
mov
cmp
lods
es
mov
int3
lcall
cmpsb
push
iretw
push
and
cli
push
pop
dec
lldt
sbbb
js
mov
std
cld
push
pop
jle
or
cmpsb
and
cltd
push
jnp
loop
js
pcmpeqd
neg
ret
xabort
idivb
xor
rcll
lahf
dec
and
pop
pop
cmp
push
jb
cli
clc
icebp
rorl
pop
jmp
clc
loopne
or
cld
cmp
jle
into
inc
imul
inc
dec
adc
or
and
mov
and
loope
cmp
fidivrl
stos
mov
aas
gs
cli
dec
mov
cmp
push
sub
mov
jp
jmp
add
jge
xchg
dec
or
mov
hlt
lahf
mov
add
clc
xchg
dec
sub
push
into
aam
fmulp
sbb
sbb
add
add
mov
mov
push
insb
cld
push
xor
test
out
add
fnsave
ret
cmp
mov
cli
push
mov
mov
xor
mov
sbb
sbb
in
shlb
andl
inc
add
dec
or
mov
mov
xor
mov
pusha
add
mov
pop
stos
xchg
jo
push
xchg
fdivl
jo
mov
ficoms
and
inc
sbb
mov
imul
out
rcl
cmpb
mov
jge
cmp
cmpb
pmaxsw
stos
jnp
dec
mov
inc
dec
shrb
rolb
ror
cwtl
in
mov
inc
psubusb
cli
hlt
sbb
test
insb
jge
incb
inc
sbbb
sbb
mov
cmpsl
xor
sub
jg
mov
loop
cmpsl
pop
imulb
jo
mov
mov
enter
add
and
pop
adc
scas
mov
mov
sub
ds
mov
xor
add
push
dec
aad
push
dec
add
or
adc
je
pop
pop
mov
mov
add
adc
and
push
push
pop
cli
mov
je
mov
ljmp
clc
mov
shl
bound
clc
xchg
lock
ficoml
rolb
add
or
mov
nop
xchg
mov
cmpsb
mov
push
jne
lahf
dec
cmp
js
nop
mov
add
xorl
and
push
mov
adc
cli
and
xorb
fwait
pop
sti
jmp
jns
inc
pop
es
in
jb
stos
mov
mov
outsb
or
test
push
fsubs
clc
pusha
js
hlt
ss
pop
or
lea
xchg
loopne
stc
pop
pop
fiadds
cmc
shlb
lret
mov
mov
mov
push
xchg
cmp
rorb
std
mov
xlat
mov
mov
cmc
aas
xchg
lea
cld
pop
jns,pn
ljmp
popf
inc
cld
ret
xor
test
stc
cmp
inc
jo
or
sbb
movsb
fldl
cwtl
ljmp
test
push
sub
xor
shlb
test
pop
std
mov
rcll
pushf
movsl
xlat
adc
daa
jbe
sti
inc
push
cli
mov
fadds
pop
lahf
movsb
or
push
cmp
jmp
vpsraw
inc
aam
clc
jo
cld
je
int
pop
repz
adc
dec
lock
ds
sar
popf
pop
jg
or
jecxz
fnstcw
hlt
jmp
loop
adc
mov
lock
mov
pop
mov
call
out
mov
pop
ss
lds
jne
lret
shll
inc
mov
dec
add
pop
lock
pop
or
ror
hlt
xchg
jne
ja
in
mov
jbe
sbb
sub
ret
ficomps
sbb
mov
rcll
sub
push
jmp
div
outsb
repz
cmp
insb
mov
dec
and
scas
fsts
loopne
sub
mov
mov
mov
int3
xchg
jmp
cs
push
mov
clc
mov
and
cmp
xor
dec
push
add
andl
enter
push
mov
mov
cmp
lds
mov
xor
ljmp
jge
xor
add
push
aas
cld
sub
jle
add
inc
fisttps
lahf
add
lods
push
push
adc
mov
fs
xchg
mov
mov
ror
and
mov
std
lods
inc
push
in
push
idivl
mov
mov
or
test
cmp
test
pop
add
mov
mov
stos
cmpsb
dec
stos
mov
xor
xor
loopne
es
jmp
or
jge
mov
rcr
fbstp
jo
pop
and
ja
scas
push
and
xorl
cmp
ret
ret
inc
cmp
subl
adc
sub
hlt
repnz
out
jnp
mov
xchg
je
loopne
jl
rcr
ljmpw
jg
fisttpll
clc
cmp
fdivr
cmp
jb
sahf
addb
lahf
ds
mov
lret
jle
jg
push
jl
push
sub
cs
push
lahf
jmp
dec
xchg
sub
pop
ljmp
ljmp
mov
dec
cli
xchg
cmp
pop
adc
pop
mov
sbb
int3
out
xor
mov
dec
inc
pop
cwtl
out
jp
in
lret
jne
lds
scas
movsb
mov
lret
js
jp
sti
cmpl
jg
sbb
addb
lret
movsl
jae
sub
daa
sbbl
fmuls
pusha
mov
mov
jne
sbb
mov
inc
mov
cmp
mov
push
jo
jbe
into
shlb
lock
dec
popa
pop
jl
jo
ret
xor
sbb
pop
xor
mov
and
je
aam
fadds
clc
pop
rolb
sub
and
les
mov
xor
pop
mov
dec
adc
addr16
or
movhps
iretw
xchg
pop
jl
rolb
mov
jle
sbb
pop
std
addb
sub
adc
icebp
lock
add
fistps
imul
addl
mov
shld
cmovs
movsl
cmpsb
sbb
ret
inc
es
adc
nop
sub
jge
ret
add
mov
js
mov
js
sbb
jbe
pop
pop
and
divb
popa
add
ficoms
stc
sub
sub
sahf
adc
lret
dec
adc
ds
nop
mov
jge
and
sub
xchg
pop
jns
and
jge
outsb
ja
in
out
and
and
xchg
jo
push
push
roll
push
xchg
inc
adc
out
mov
pop
or
mov
es
add
or
cli
adc
js
fadds
hlt
loop
and
test
sub
cmpsl
addr16
ss
aam
dec
add
cmp
xor
or
xchg
hlt
pop
cmpsl
mov
sub
xchg
push
sub
add
loop
jbe
mov
or
push
fbstp
push
or
add
stos
or
cli
add
add
adc
pushf
sbb
inc
jnp
hlt
jecxz
pop
out
jns
mov
rolb
xchg
push
dec
and
or
outsl
cmp
adc
adc
fisubrl
pop
movmskps
fisubrl
pop
loopne
fildl
mov
pop
inc
mov
adc
mov
xchg
lods
cli
out
xor
mov
xchg
pop
mov
pop
and
jb
dec
add
inc
rcrb
scas
jle
push
and
data16
mov
push
pusha
add
test
fisttps
aas
cmp
in
push
ret
hlt
push
push
nop
mov
outsb
push
or
pushf
sub
pop
aam
pop
pop
std
test
sub
inc
xor
adc
movsb
pop
popa
cmpsl
add
mov
mov
pop
ljmp
shlb
out
mov
je
xchg
ret
lea
insb
out
into
scas
or
jbe
scas
fsubrp
clc
sbb
adc
popf
xor
roll
or
lods
and
lea
or
jle
popa
ret
icebp
fwait
icebp
shll
jl
fwait
mov
sub
jmp
sub
es
jmp
mov
xchg
pop
ja
mov
testl
loop
pop
jo
mov
les
nop
in
pop
or
jp
pop
ljmp
test
cmc
cmpb
dec
adc
movsl
dec
into
out
test
mov
lock
adcl
roll
pop
adc
shrl
jl
mov
loopne
push
je
pop
inc
mov
aaa
adc
cltd
sarl
add
mov
faddl
add
cmp
in
xor
adc
jp
rolb
mov
jo
fisubrs
or
and
inc
movl
lock
insb
shlb
cs
ljmp
cmc
jecxz
les
fisttpll
xor
fs
jl
jb
ds
call
das
pop
pop
adc
imul
es
mov
into
xor
shl
push
cli
pop
mov
add
rcl
lock
cs
mov
inc
clc
mov
add
rcr
clc
push
scas
imul
in
inc
js
xor
mov
or
mov
mov
arpl
push
inc
sbb
push
shrb
and
sahf
adc
sarl
imul
and
in
sbb
js
js
inc
xor
sbb
add
inc
mov
cmp
cmpsb
shl
out
mov
movsb
scas
dec
jle
lcall
fwait
cmp
cli
sbb
iret
dec
add
aam
arpl
jecxz
mov
sbb
fildll
andb
xlat
sbb
xor
or
jl
hlt
add
sar
clc
mov
fs
movsl
test
or
ds
sarb
ljmp
xchg
shll
sub
test
jmp
push
jo
mov
psllw
insl
pop
ret
mov
jnp
mov
sbb
xchg
cmpl
neg
push
mov
test
cltd
xlat
sub
outsl
or
icebp
dec
pop
mov
lahf
dec
and
inc
clc
mov
or
clc
jl
out
addr16
test
out
ret
adc
jp
sbb
cmp
cmp
mov
xor
cmpb
or
inc
push
lret
sar
jl
xchg
movsb
mov
cld
scas
sub
mov
imul
jp
mov
out
adcl
push
movsb
comiss
xchg
mov
inc
or
loop
and
jle
mov
mov
mov
dec
jle
push
sbb
sub
leave
adc
add
das
insl
loop
or
jno
test
gs
loopne
insb
lods
lods
inc
add
push
pop
mov
dec
mov
rcl
nop
pop
jl
and
add
je
jl
pop
adc
inc
fstpt
lcall
jae
sarb
inc
push
dec
cwtl
in
ja
fiadds
pop
imul
test
add
push
mov
dec
mov
mov
or
movhps
lock
neg
rol
sub
cmp
cmc
loopne
xor
fs
mov
aas
jo
test
jge
insl
dec
and
push
pushf
out
pop
jmp
test
ds
loop
imul
stos
jp
cmp
hlt
call
neg
test
out
xchg
push
dec
inc
clc
test
lock
orb
mov
pop
and
cli
stos
arpl
filds
ja
push
push
add
movsb
push
mov
movsb
adc
jnp
shrl
pop
pop
push
dec
or
add
inc
sub
inc
dec
gs
ret
and
into
mov
movsb
xor
call
inc
jecxz
jo
fmuls
xchg
clc
add
adc
sub
hlt
ljmp
push
fwait
loope
test
mov
inc
loopne
or
jecxz
and
mov
sbb
insb
les
ds
sbb
mov
ret
sar
data16
scas
inc
in
cld
std
jp
loopne
data16
pop
outsb
cs
js
icebp
add
fimuls
mov
pop
pop
or
pop
scas
push
lock
pop
scas
shl
inc
push
shl
pop
iret
push
or
xchg
sub
mov
inc
in
cmc
pop
aad
push
cmp
cmp
repz
insl
jl
subb
bound
xor
xor
jl
lock
dec
mov
jno
pusha
dec
xchg
or
movsb
lods
jg
icebp
mov
mov
sub
mov
inc
shlb
xlat
cld
jle
mov
mov
lock
or
push
push
mov
orb
or
add
mov
test
add
xchg
fcomp
mov
or
or
xor
test
add
fsubl
push
ret
ljmp
pop
mov
loope
add
mov
jle
add
std
cwtl
xchg
dec
mov
ret
or
and
mov
loope
lea
mov
add
adc
add
dec
ret
sarb
sub
rorb
pop
xchg
mov
stc
hlt
or
andb
add
notb
lock
jecxz
ret
das
push
or
xchg
dec
pusha
and
ret
cmpsb
dec
mov
repnz
loopne
movsl
lock
sbbb
jp
sbb
cli
push
dec
repz
roll
xchg
inc
add
sub
mov
pop
jg
push
daa
xchg
movsb
adc
pop
das
push
loopne
pusha
cld
adc
mov
fsubrp
icebp
call
sub
mov
jns
mov
daa
dec
dec
pop
cmp
stos
add
jnp
xor
dec
jge
lds
mul
rcr
adc
sbb
mov
push
enter
clc
clc
jne
loopne
cmp
pop
das
insl
or
call
adc
movsb
mov
mov
adc
fimull
cmp
push
rorl
pushf
out
aam
xor
fmull
cmp
in
dec
clc
jmp
bnd
push
js
jo
imul
negb
cs
fimuls
pop
and
or
xor
or
pop
ficoml
add
and
ret
pop
pop
add
xor
inc
cmp
jne
rcrb
jle
aad
sar
sbbl
and
mov
jge
ljmp
pop
dec
daa
mov
pop
hlt
int3
das
fldenv
jl
pop
ret
sbb
and
add
pop
add
sti
cli
add
outsl
movsb
enter
push
rcl
jl
mov
push
push
jnp
jmp
cmp
xor
mov
inc
inc
add
cmpsb
or
lahf
push
add
mov
push
push
arpl
sarb
sbb
ret
push
jbe,pt
xorl
xchg
out
sbb
insb
add
ret
out
dec
pop
popl
pop
jbe
xchg
lret
shlb
jle
jae
xchg
mov
cmp
aas
or
nop
inc
lods
hlt
repnz
pop
cli
cli
mov
out
inc
fcomip
mov
cmp
scas
xchg
lods
mov
lds
and
cmp
ret
push
dec
adc
add
dec
ds
aaa
and
jge
loope
es
and
rol
add
or
outsb
jl
cmp
xchg
mov
loopne
pusha
into
cs
clc
jmp
orb
mov
mov
fiaddl
jle
sahf
push
call
pop
iret
insl
das
adc
mov
pop
mov
jno
mov
loop
fs
hlt
insl
imul
into
repnz
and
lret
movsl
push
xlat
not
jp
mov
xor
or
lret
into
icebp
cmpsl
loopne
sbb
mov
sbb
lods
sub
xchg
or
mov
add
sahf
xor
cmp
aas
mov
scas
sbb
je
mov
mov
xor
scas
mov
jle
mov
adc
mov
pop
aaa
mov
push
fcomip
or
lock
out
hlt
mov
aam
lea
sub
mov
out
repnz
loopne
testl
out
orl
pop
mov
sbb
scas
xor
cmc
jge
pop
xor
int
adc
jo
mov
mov
test
adc
loopne
rol
pop
mov
clc
sbb
sub
negl
xchg
in
sub
fcom
imul
rclb
jns
push
adcl
pop
inc
inc
jo
jmp
insl
jge
push
inc
add
adc
nop
clc
cwtl
mov
jnp
call
lret
xchg
push
sbb
or
and
test
and
js
and
cmp
call
xor
xor
push
or
lods
inc
push
mov
shrl
sub
shlb
cmp
out
push
mov
xchg
stos
setnp
mov
mov
lahf
test
inc
mov
test
adc
in
pop
mov
cli
loop
ljmp
dec
sbb
dec
jge
sbb
in
clc
lock
lods
hlt
xchg
movsb
hlt
mov
push
fdivl
femms
mov
les
das
xchg
pop
in
sub
adc
cmp
jo
fsubs
lret
mov
int
ficoms
fnstcw
inc
xor
or
sar
sahf
ds
adc
xor
shlb
jp
and
push
nop
in
adc
push
mov
cmp
push
cs
lock
fimuls
pop
fsubrs
nop
cmp
enter
sbb
xchg
lahf
test
xchg
jb
cmp
shrb
mov
sub
enter
ds
mov
loopne
mov
dec
test
hlt
cwtl
xchg
mov
in
adc
rol
cmpsl
cmp
jbe
outsl
and
mov
and
xor
fstpt
ret
imulb
mov
jbe
pushf
and
adc
mov
clc
mov
lods
loope
mov
loopne
mov
adc
adc
pushf
or
lock
js
int
sub
scas
paddw
inc
xor
rorb
fcomps
add
pop
shrb
js
fs
rolb
mov
pop
pop
sahf
xor
fists
pavgw
rcll
xchg
pop
popf
fisubrl
mov
jmp
bound
jge
inc
xor
bound
push
das
dec
jle
xchg
comiss
dec
lock
dec
push
mov
rol
cmpl
out
push
outsl
fstpt
icebp
dec
add
test
push
push
pushl
pop
pushf
mov
divb
popl
xchg
scas
xchg
sahf
sbb
fsubrp
mov
and
pusha
sahf
std
lods
adc
dec
lret
inc
push
mov
popa
push
push
push
cmp
inc
enter
mov
mov
jge
or
push
sbb
xchg
push
add
push
sbb
or
dec
inc
mov
pop
ljmp
sub
pop
push
sub
fdivl
sbb
adc
fldl
or
std
lock
int
je
sub
mov
lds
mov
stos
cmpsb
fs
loopne
sahf
popa
and
ljmp
out
cltd
xor
or
out
mov
cmpsl
nop
hlt
add
ds
js
sbb
out
andb
adc
cmp
and
lods
arpl
jmp
out
stos
addl
popa
imul
mov
sbb
loope
ret
mov
xchg
lods
inc
clc
xor
cmpxchg
test
jp,pt
test
pusha
ja
rolb
mov
rcrl
out
push
test
jmp
jge
pop
cmp
cmp
add
push
fisttps
mov
popf
pushf
fdivrl
or
shl
jl
ljmp
cmp
sarb
ficomps
repnz
out
es
pop
lods
or
pusha
inc
dec
dec
je
sarb
orl
jle
aam
fnstsw
jle
mov
add
pop
sbb
push
fs
test
ss
imul
jo,pt
movl
out
jno
and
outsb
xlat
repz
pop
insl
jne
lahf
mov
or
xlat
orl
mov
ljmp
and
imul
nop
aad
test
sahf
push
jmp
addl
fcomps
mov
sarl
and
xchg
movsb
sub
std
icebp
fld
xor
inc
push
mov
xlat
ret
inc
testl
enter
out
popf
fmull
jo
and
or
stos
pop
dec
mov
and
mov
ret
pushf
pop
mov
paddd
adc
cmpsb
icebp
jbe
shlb
insb
jno
js
fcmovbe
out
pop
mov
int3
and
and
mov
lock
add
out
in
out
or
xlat
idivl
std
lret
test
sbb
mov
cmc
mov
mov
xlat
stos
push
je
xor
mov
ljmp
sub
aaa
cmp
mov
lods
sahf
aaa
dec
icebp
pop
pop
add
nop
data16
or
insb
sub
push
pop
es
test
out
add
mov
hlt
addr16
jbe
call
push
sbb
mov
jnp
cli
fcomps
add
xor
push
out
aas
dec
cmp
mov
pop
sbbl
and
sbb
fdivrs
ret
adc
scas
add
pushf
mov
cmp
xchg
pop
xor
pop
push
and
test
loopne
ja
js
aam
mov
xor
add
lods
insb
jge
fnstsw
or
jp
ss
loopne
pop
dec
xchg
cs
sbb
dec
cld
push
push
ljmp
int3
push
lods
push
je
loope
sbb
xchg
mov
lods
dec
int3
loopne
push
push
jecxz
cmpsl
or
cmpsb
pop
aad
stc
hlt
push
cmp
jl
xchg
inc
jg
push
jne
pop
cmc
inc
fs
loope
pop
js
add
outsb
mov
mov
cmpb
add
cmpsb
mov
shlb
sarl
pop
fsubl
nop
jno
loope
push
adc
sbb
inc
mov
clc
add
cmpsl
roll
test
fwait
cli
jle
pop
xor
test
outsb
ljmp
rcll
sbb
and
push
or
lahf
push
push
cmpsb
cmp
and
loope
fcomp
sbb
pop
xor
imul
xchg
icebp
cmp
jnp
dec
jmp
jl
popa
stos
mov
sti
push
ds
sti
jo
ficompl
movb
insb
sahf
pop
test
mov
jp
xchg
movsb
push
leave
add
mov
fs
cli
lock
sbb
add
jecxz
orb
sbb
pop
outsl
es
and
ror
imul
fistpl
pavgw
sbb
sbb
call
mov
imul
hlt
sbb
test
es
shrl
cmp
lahf
mov
xchg
ljmp
add
stos
pop
push
test
sbb
fisttpl
es
insb
xor
mov
mov
ds
inc
sub
dec
and
icebp
lock
dec
loope
cmpsb
sahf
add
loope
mov
jp
sbb
sub
clc
and
mov
movsl
bound
dec
cmp
in
mov
outsl
das
ficomps
cmp
sahf
rcr
pop
mov
loop
inc
dec
mov
mov
jo
es
or
je
push
in
fs
mov
xchg
sbb
dec
jle
out
sbb
push
cmp
insb
push
jle
mov
jnp
clc
in
mov
push
test
mov
mov
test
sbb
clc
lock
push
push
cmp
sar
cmp
stos
push
mov
xchg
xor
sbb
pusha
add
xchg
es
dec
dec
jecxz
push
data16
mov
sub
pop
addl
fcmovb
fidivs
mov
in
sarb
push
rclb
inc
nop
push
test
repnz
and
jecxz
dec
push
clc
fildl
std
mov
push
pop
hlt
jecxz
ror
and
das
ret
and
repnz
pusha
xchg
mov
mov
cmp
adc
dec
mov
scas
mov
add
xchg
pop
andl
mov
clc
mov
in
dec
jle
bound
out
scas
cmp
js
cmp
cmp
xor
xor
cmp
or
jecxz
roll
sbb
shr
cmpb
mov
mov
inc
clc
ja
add
or
fbstp
std
adc
sbb
sbb
shl
pop
sbb
stos
pushw
icebp
ret
cmpsl
adc
cmp
xchg
cltd
sbb
push
adc
or
popa
jl
pop
pushfw
xor
push
outsl
scas
outsl
inc
dec
pop
or
inc
add
movsb
mov
xor
sti
and
cwtl
and
in
aas
jle
sub
sub
push
scas
ds
and
sub
jl
aam
iret
xchg
fiadds
cli
loop
shrb
inc
mov
ret
rolb
mov
lds
rolb
jp
daa
negb
das
push
jl
or
xor
js
cmpsb
loopne
lock
mov
stc
mov
aas
xchg
stos
add
and
or
mov
jge
inc
loope
jecxz
nop
and
push
push
lcall
mov
out
and
sub
incb
fisubs
dec
pop
xlat
nop
adc
nop
cmp
nop
sbb
mov
jge
clc
insb
cmc
mov
dec
lock
scas
and
and
sbb
push
subl
adc
cltd
or
out
push
and
aas
sbb
push
in
or
and
scas
pop
push
call
cmpsl
call
insb
nop
cli
push
dec
or
les
jae
ja
clts
int
hlt
sub
daa
out
mov
das
jl
push
pop
mov
fisubrl
fldl
add
popf
bound
cmp
clc
push
addl
data16
mov
in
les
push
lcall
mov
ret
xlat
adc
sahf
pop
dec
in
add
sub
or
mov
cld
push
pop
add
jno
loopne
imul
jmp
push
movsb
movsl
xchg
xor
cmc
xchg
inc
cld
cmp
xor
mov
stos
jl
shrb
mov
dec
cmp
dec
mov
dec
sub
adc
or
add
sbb
mov
pop
outsb
mov
inc
sti
loop
test
push
pusha
sub
popa
inc
fnstenv
and
jo
sbb
js
adcl
push
cltd
push
mov
imul
loope
adc
repnz
sub
dec
cmp
sub
mov
push
test
pop
pop
jg
cmp
and
mov
mov
xlat
xor
decb
sbb
loope
loopne
pushf
out
fwait
xor
cld
sbb
ret
ret
das
pop
mov
jl
jmp
mov
jno
mov
jbe
and
cmpsb
push
adc
jbe
sbb
ljmp
mov
dec
pop
cltd
movsl
mov
mov
in
aas
jb
ficomps
das
mov
or
stos
int3
pop
mov
xchg
mov
fdivrl
adc
push
or
or
mov
clc
or
stos
mov
movsl
icebp
subb
insb
mov
lods
mov
xor
outsb
or
inc
call
sbbl
daa
jb
jb
clc
icebp
add
xor
jl
jno
test
sarl
js
les
push
pop
inc
or
pop
mov
xor
lahf
pusha
jl
cmp
cmc
jecxz
scas
mov
jmp
rcrl
sub
inc
lods
test
jnp
loope
inc
dec
xchg
push
and
lock
mov
xchg
mov
ret
and
jp
stos
sub
cmp
icebp
jge
js
pop
and
jo
outsl
xchg
ret
pop
adc
xchg
push
ss
mov
stos
jge
xchg
ds
or
push
push
mov
in
push
out
push
lahf
mov
nop
pop
ss
push
pop
adc
mov
inc
mov
outsl
test
lock
cmpsb
dec
dec
lahf
xor
out
xor
jo
movsl
xor
loop
add
inc
xchg
push
ljmp
hlt
loope
pop
cmpsb
xor
loop
mov
add
jae
out
or
loope
mov
mov
inc
rolb
mov
mov
dec
push
adc
lahf
pushf
dec
xor
adc
icebp
sarl
clc
add
adc
clc
icebp
dec
jl
push
pop
sbb
push
xchg
push
fsubp
lret
inc
push
movsb
pop
jle
es
or
ljmp
ds
xchg
inc
nop
fimuls
mov
cmp
rcl
cmpsl
mov
add
bound
adc
mov
sbb
test
xor
or
sbb
rorb
mov
test
clc
add
leave
cs
and
sbb
lahf
sti
loopne
mov
mov
dec
jg
cltd
clc
hlt
inc
mov
in
mov
add
mov
mov
pop
pop
pushf
bound
ss
enter
add
ja
push
inc
dec
pushf
mov
mov
rol
testl
cmp
sti
mov
orl
test
push
jle
push
fucomip
xchg
into
xor
movsl
mov
adc
mov
ljmp
js
add
xchg
les
testb
xchg
adc
out
pop
xchg
repz
mov
test
pop
and
push
dec
jbe
inc
lock
adcb
cwtl
push
call
add
jno
movsl
divl
in
adc
sar
mov
fmuls
mov
clc
sbb
dec
test
lock
mov
cs
push
cmp
lock
push
out
lods
out
add
push
popf
inc
shlb
dec
xchg
test
aaa
int3
inc
adc
icebp
or
sbb
insb
push
jge
ds
cmp
in
cs
out
mov
and
xor
pop
std
cmp
or
loopne
dec
lods
es
sbb
mov
shl
mov
xchg
mov
call
outsb
rclb
push
xchg
out
ja
je
push
fs
mov
xchg
outsb
mov
mov
scas
and
das
pop
and
push
cmp
ljmp
addr16
bound
lods
mov
dec
clc
adc
jnp
push
and
xchg
sbbb
mov
aad
stc
jmp
dec
cmp
adc
push
mov
pop
adc
adc
cmp
lods
add
ds
fiadds
lods
fldl2e
std
dec
xor
imul
fs
enter
push
push
pop
mov
fwait
dec
cmp
xor
hlt
hlt
call
sbb
jl
loopne
into
cld
inc
mov
insl
fnstenv
outsl
jle
scas
or
pop
aad
sahf
push
xor
inc
and
cmp
loope
xor
cmp
sbb
sti
divb
clc
cmp
js
fsubrl
adc
dec
mov
mov
push
ja
mov
cmp
stos
inc
cmp
js
inc
dec
push
xchg
jp
out
cmpsl
push
pop
loopne
insl
into
jmp
data16
push
xor
add
insb
push
shll
mov
ret
or
xor
incl
adc
jp
nop
mov
cmc
dec
add
enter
pop
icebp
jmp
dec
mov
lahf
out
mov
mov
lock
pop
cmpsb
dec
in
xchg
les
rcl
lcall
popa
loop
xchg
pop
sbb
inc
mov
bound
loop
cmp
js
cmp
loopne
icebp
loopne
push
test
shlb
sbb
outsb
inc
mov
fcoms
push
popf
mov
push
out
adc
inc
outsb
pop
mov
xchg
in
dec
stos
leave
cltd
push
arpl
call
sbb
in
xchg
adc
jbe
mov
insb
into
xor
pop
es
mov
das
xchg
scas
mov
fdivrl
repz
cmp
jo
stos
sbb
insl
cmp
lcall
fwait
les
mov
icebp
xchg
xchg
sahf
adc
inc
xor
addl
dec
jle
dec
and
inc
inc
pop
lods
push
sbb
sbb
test
xchg
xor
pop
adc
mov
pop
repnz
leave
js
loope
ret
push
dec
pop
clc
dec
loopne
cmp
inc
xchg
push
sub
xchg
or
call
push
sub
push
fs
scas
mov
mov
mov
dec
sahf
push
pop
das
mov
js
js
out
loop
or
gs
fwait
sahf
ja
loope
jg
mov
stc
inc
pop
mov
inc
ljmp
lcall
bound
dec
and
icebp
jge
popa
adc
mov
jge
mov
or
inc
sub
add
ljmp
rorb
addb
dec
pop
and
scas
je
fcomps
dec
faddp
fiaddl
aas
cmpl
stc
push
pop
popf
lahf
and
mov
shrl
push
icebp
in
cmp
mov
clc
cmc
ljmp
xchg
xchg
test
scas
add
push
adc
int
ret
jns
cmp
add
mov
jle
fisubrl
add
lea
out
popa
mov
mov
mov
cli
push
inc
and
ss
inc
shlb
cwtl
add
in
mov
xor
in
repz
hlt
fabs
jge
pusha
sub
add
dec
fidivrl
jle
cmp
inc
and
icebp
or
movsl
addr16
hlt
jmp
clc
cmp
adc
stos
inc
loope
testl
jnp
ja
roll
or
lret
fsubrs
cmp
sbb
subb
in
sub
sbb
or
pusha
mov
insb
loope
mov
jmp
sub
das
jbe
cli
cmp
jge
cld
movsb
lret
lcall
icebp
cltd
in
vpsraw
or
jge
gs
je
popa
push
ds
mov
clc
scas
icebp
pop
enter
jle
out
sbb
sarb
out
sub
and
dec
jecxz
jnp
jecxz
xchg
jo
out
int3
push
add
jg
movsb
test
ss
push
adc
add
mov
cli
out
adc
mov
fiadds
fs
clc
loope
mov
add
mov
jecxz
bound
jbe
rcrb
das
xabort
lret
mov
sbb
pop
cltd
mov
or
inc
aas
cwtl
into
popf
push
push
out
stos
and
xlat
pop
inc
cmp
mov
cmp
jns
mov
fstps
ds
jl
xchg
adc
aaa
rolb
test
call
cmc
ret
push
fisubl
punpckhwd
iret
sbb
add
fsubl
fadd
loope
int3
int
mov
icebp
icebp
rcrl
mov
mov
ret
xchg
inc
mov
mov
mov
lock
rolb
lea
jle
icebp
cmp
rorb
inc
mov
dec
clc
inc
xor
pop
xor
fsubs
inc
rcrb
ret
pop
pop
ret
fdivr
fstl
fdivr
xchg
or
sbb
inc
out
in
or
inc
js
aad
call
dec
movsl
mov
cmc
ror
cld
sbb
lods
push
inc
jecxz
mov
dec
cld
aaa
pushf
mov
pop
out
jne
cs
cld
out
icebp
sahf
insl
movsw
dec
cs
jb
mov
and
wbinvd
or
dec
imul
cmpsb
jecxz
mov
and
test
rorl
imul
icebp
hlt
inc
push
jp
outsb
cltd
mov
shlb
add
push
mov
inc
cmp
rcrb
inc
jl
movb
lock
repnz
cs
fcmovnbe
movsb
pop
cmp
mov
pop
insb
xchg
sbb
rol
pop
fidivs
adc
pop
popl
push
mov
xchg
xorl
inc
fisubs
mov
pushf
shll
pop
scas
movsl
rolb
clc
jmp
lret
add
pop
push
cmp
sbb
js
lock
sub
pop
ret
lods
les
inc
inc
ret
pop
pop
scas
jle
insb
jb
loop
int3
pop
adc
addr16
jl
mov
pop
push
mov
ds
ja
lods
lcall
push
dec
cmp
icebp
xchg
and
mov
and
sarl
clc
add
sbb
test
or
insl
shlb
mov
out
mov
add
cmp
rcr
add
aas
xchg
inc
sub
xlat
dec
imul
ss
sbb
dec
pop
sub
xor
or
jl
cs
repnz
mov
ljmp
test
nop
out
mov
nop
and
loop
push
mov
add
clc
in
jbe
pop
lahf
sahf
push
xchg
into
push
stos
xlat
add
xchg
les
lods
loop
les
icebp
loop
arpl
ljmp
out
push
or
inc
idivl
les
pop
xchg
mov
loop
mov
mov
pop
or
cmp
cmp
mov
js
les
aaa
xchg
fbld
mov
les
push
icebp
jp
inc
pop
or
sbb
cmp
inc
xchg
lods
lock
fidivrl
lock
mov
pop
sub
xchg
rcrb
arpl
sbb
mov
stos
daa
sbb
movsb
push
inc
pop
dec
cmp
xchg
inc
in
movsl
jne
loop
insb
mov
pop
push
cmpb
xor
pop
xorb
dec
dec
dec
add
addb
xchg
out
ja
call
adc
push
push
dec
repnz
xor
lret
mov
pop
movsb
mov
stos
xchg
push
clc
add
shll
push
push
xor
jno
jmp
sbb
insb
push
mov
clc
jge
jnp
stos
and
int
cmpsl
mov
or
mov
jge
sub
arpl
mov
movsb
daa
sbb
pop
jbe
sbb
xchg
loop
jge,pt
pop
pop
dec
jg
xorb
scas
out
inc
sbb
lods
pop
lock
sahf
xchg
mov
out
sahf
data16
data16
xorb
jb
sbbb
in
xor
jb
addr16
loopne
hlt
lods
inc
and
leave
std
test
inc
pop
or
mov
pop
push
imul
lock
or
rcll
insb
aaa
push
jecxz
and
pushf
mov
add
jl
loop
mov
pusha
clc
lods
lea
cld
lock
pop
mov
outsb
and
push
jg
call
xchg
gs
pusha
adc
inc
cmp
xor
jno
jns
or
cld
inc
into
fucomp
jge
or
jge
lahf
pop
fldt
sub
dec
roll
pop
mov
jne
cmp
les
out
test
xchg
pop
cltd
sub
ljmp
xorb
jl
xor
push
imul
and
xchg
lods
push
pop
into
ljmp
and
or
adc
clc
vpsllvd
cmp
pop
and
testl
pop
pop
dec
iret
ljmp
clc
popf
je,pn
popa
insb
mov
inc
mov
loop
cs
inc
ja
clc
lock
push
fnsave
stc
inc
rol
ret
mov
hlt
clc
aas
bound
pusha
mov
sahf
repnz
gs
add
dec
mov
popa
jge
shlb
sub
jae
lock
jbe
push
clc
aaa
adc
cli
cmpsb
popa
std
ljmp
dec
xor
adc
inc
subl
inc
add
notl
sahf
or
inc
xchg
inc
mov
jo
lods
sbb
das
out
roll
test
test
mov
push
cwtl
test
xor
or
lcall
or
adc
sahf
mov
ror
mov
inc
mov
cmp
pop
out
jo
mov
or
push
clc
sahf
or
fwait
sahf
pop
and
adc
outsb
mov
push
xor
out
ret
jae
mov
repz
testl
jbe
fwait
pop
lock
jmp
pushf
mov
inc
clc
xchg
bound
pop
rcrl
out
cmp
popf
addl
loope
mov
xchg
xlat
cld
or
pop
mov
roll
andb
sbb
jmp
push
push
adc
out
sti
loop
imul
out
aaa
in
test
cwtl
push
fildll
sahf
jp
lock
scas
and
sub
aad
dec
cmp
jo
rorb
jl
adc
adc
popf
add
push
cmp
sub
sub
push
cmpl
rorl
mov
cmp
adc
jmp
rolb
test
std
pop
test
sarb
out
push
imul
loopne
mov
xchg
xor
cltd
aam
mov
ljmp
icebp
loopne
rorb
jg
push
gs
push
mov
mov
pop
fmul
jge
dec
scas
test
gs
xor
mov
push
cmp
cld
lods
xchg
js
clc
dec
mov
add
repnz
cs
orb
xchg
out
inc
xchg
sbb
ds
jecxz
lods
xor
cwtl
jmp
icebp
jge
pop
mov
out
ret
es
stos
xlat
in
xor
xor
inc
xor
aam
es
and
xchg
jp
jmp
push
sahf
ret
add
hlt
cmp
les
xor
sarb
mov
imul
or
das
sub
test
loopne
adc
rcrb
and
add
mov
mov
lea
sbb
xor
repz
or
movsl
cmp
jg
sbb
fucomip
jmp
pushf
dec
lods
mov
stos
xchg
rcl
aad
or
aas
push
test
mov
popa
fdivrp
and
push
dec
xor
inc
aaa
loopne
test
sbb
ja
pop
mov
lahf
in
dec
cs
push
push
mov
and
mov
sti
sub
mov
aad
jno
xchg
mov
adc
hlt
and
js
adc
jg
aad
and
inc
lock
xchg
call
fcoml
bound
clc
mov
es
rcll
mov
push
int
mov
repz
sbb
repz
jg
sbb
jle
sbb
cmp
test
cmpsl
arpl
dec
mov
jmp
dec
repz
xchg
ss
jp
loopne
mov
movb
inc
mov
cmpsl
mov
aas
faddp
mov
pop
xchg
push
sti
add
pushf
mov
xor
mov
call
popa
and
cld
adc
ds
dec
inc
ss
imul
rcrb
outsl
cmpsl
out
ret
pop
xchg
jno
loopne
sbb
add
jle,pt
shlb
in
fcoms
mov
roll
packssdw
jmp
lret
fmull
fistps
js
add
sahf
rclb
sub
jae
shrb
cmpsl
pshufw
aam
ret
fwait
mov
xchg
es
jo
mov
xchg
adc
aam
repnz
out
push
adc
push
jmp
mov
inc
lret
push
pop
and
andb
pop
mov
ds
jge
sbb
nop
lods
les
cmp
push
inc
dec
hlt
inc
mov
sub
repz
pop
push
pop
xchg
fdivrp
cmc
push
mul
jnp
out
inc
lcall
add
or
notb
loopne
and
adc
mov
bound
mov
out
imul
pop
inc
insb
out
jns
das
and
enter
mov
mov
lock
and
clc
inc
aam
daa
loopne
repnz
movsb
adc
mov
inc
sub
out
inc
dec
inc
scas
pop
data16
lock
scas
or
xlat
shrl
sbb
test
movsl
ds
push
mov
lret
mov
testb
cmp
sahf
pop
jecxz
push
mov
bound
mov
nop
cmc
cld
push
repnz
or
mov
inc
mov
test
adc
mov
sub
xchg
mov
clc
inc
and
and
cmpsl
in
cli
push
adcb
xor
pop
push
mov
sbb
add
push
in
xor
js
mov
lret
mov
add
cmp
or
sub
insb
rcll
adc
in
loopne
cs
push
xor
mov
loope
pop
mov
add
sbb
jl
sub
orl
pop
xchg
lds
call
mov
inc
loopne
add
push
pop
mov
je
bound
daa
mov
jnp
or
test
adc
mov
push
lea
notb
cmp
imul
ret
test
mov
mov
pop
pop
pop
and
lods
lods
mov
mov
cld
jns
popl
dec
cld
cmc
cmp
mov
mov
dec
shlb
int3
sub
rcl
adc
clc
dec
andl
sbb
mov
pop
push
subb
inc
xchg
aas
jle,pt
pop
inc
adc
cli
cmp
aam
pop
push
fstps
dec
push
shrl
push
push
mov
aas
mov
or
add
xor
mov
jge
xor
lds
mov
aam
mov
mov
xchg
and
pop
ss
add
add
insb
add
pop
jg
pop
pop
inc
leave
faddl
popa
js
inc
push
inc
stos
sbb
sbb
mov
dec
push
mov
ret
sti
inc
test
add
push
mov
pop
fincstp
jecxz
pop
bnd
fdivrs
sbbb
add
loop
mov
cmp
sbb
stc
aad
filds
push
mov
pop
add
mov
pop
mov
cld
or
xchg
mov
inc
add
mov
cmc
push
and
les
lahf
inc
pop
arpl
and
orb
addr16
mov
rcl
scas
push
cmp
insb
cmp
xor
push
dec
cmp
loope
subl
xchg
cmp
mov
jecxz
pop
cmpsb
cmp
pop
xchg
ficomps
out
mov
lret
jge
xor
icebp
hlt
lods
es
add
call
dec
sbb
sahf
lock
adc
clc
call
or
js
fcoms
dec
push
sub
push
mov
outsb
cmpsb
mov
cmc
jecxz
ret
and
mov
lds
rolb
insl
jge
sbb
imul
es
jo
mov
insb
fdivrs
xchg
jecxz
inc
ffreep
push
mov
and
mov
inc
push
lret
mov
clc
mov
pop
sbb
push
ss
xor
push
inc
repnz
mov
dec
fldenv
sahf
pop
out
inc
call
mov
movl
push
xchg
ret
loopne
in
out
fstps
cmc
sarb
jp
add
test
dec
adc
dec
or
enter
and
mov
or
adc
ds
mov
sti
dec
outsb
lock
xor
sub
mov
jns
sti
loopne
aad
xchg
stos
push
into
cmp
jmp
int3
push
sub
imul
loope
std
inc
mov
push
push
icebp
pop
cmp
fsubl
scas
fwait
pop
rorb
bound
leave
les
adc
or
test
push
outsl
in
jl
push
dec
int3
adc
imul
or
int3
sarb
mov
push
and
jae
ja
jle
mov
cmp
add
pop
xchg
adc
call
jmp
cli
cmp
push
shrl
lret
shll
scas
sti
dec
jecxz
loop
mov
imul
movaps
movsl
subb
stos
clc
inc
es
cmpsb
sahf
jecxz
je
leave
sbb
aaa
cli
pop
cmp
ljmp
or
sub
pop
cmp
xor
xchg
sub
iret
stos
push
and
shlb
test
test
lock
sbb
repnz
jl
dec
adc
clc
insl
lods
rolb
xchg
ljmp
push
loope
mov
scas
lds
pop
mov
cwtl
cli
jmp
xchg
or
scas
mov
imul
pop
mov
movsb
ds
xor
sbb
lahf
aam
push
adc
dec
call
push
imul
insb
xor
jle
or
out
js
clc
sbb
bound
jmp
dec
cld
ss
fsts
pop
add
imul
pop
pop
jp
cwtl
icebp
out
mov
stos
mov
inc
dec
loope
xor
mov
add
js
mov
xchg
pop
mov
addr16
test
in
pop
aas
pusha
jge
dec
mov
daa
mov
push
xchg
jge
lods
lcall
mov
pop
loop
leave
sbb
inc
sti
cmp
inc
bound
adc
xor
andb
jle
jp
fidivl
loop
cmp
mov
mov
add
icebp
xchg
or
popf
cmp
add
test
add
xchg
sbb
cmp
loopne
aam
js
fcoms
push
add
cmp
add
testl
in
fisubs
and
mov
sbb
xchg
push
add
cmp
sarb
adc
loopne
jmp
shlb
lock
pop
in
mov
pop
scas
ds
js
pop
dec
cli
sbb
mov
sub
out
cmc
jmp
mov
add
out
insl
sub
pop
xchg
mov
shll
cs
divl
mov
mov
nop
sahf
icebp
dec
shrb
mov
jp
out
outsb
idivb
test
pop
sbb
jle
inc
stc
mov
out
pop
push
mov
mov
in
xchg
xchg
mov
movsb
jne
nop
xor
xchg
test
jbe
je
jmp
popf
les
movsl
cmp
push
sub
rorb
shlb
aas
mov
ljmp
popf
ds
dec
mov
cli
lea
push
cmp
mov
xor
icebp
cmp
push
ret
jmp
aaa
and
cmp
pop
jle
imul
xchg
mov
mov
pushf
out
add
aas
ss
loop
lods
es
mov
outsb
es
add
mov
jo
test
shlb
dec
rcll
push
paddq
fs
mov
pop
in
js
mov
push
push
test
aad
dec
jae
jg
mov
mov
or
dec
xchg
push
xor
cmp
lret
pushf
repnz
adc
xor
mov
push
cltd
scas
dec
iret
cmpsb
mov
jo
lret
loopne
mov
inc
out
pusha
pop
mov
sub
idivl
bound
movsb
or
lret
lret
mov
loop
mov
ret
pop
icebp
ret
sti
loope
rcr
xchg
jne
add
sub
cmc
and
cli
push
lret
jmp
jge,pn
cmc
aam
dec
repnz
push
ret
xchg
subb
mov
jmp
mov
add
ret
mov
inc
cld
test
sbb
iret
mov
sbb
dec
nop
pop
push
popa
hlt
ljmp
inc
fsubrs
into
mov
sub
shlb
repnz
call
cs
jge
out
mov
jo
mov
cmpsb
xchg
jle
ficoms
daa
mov
repnz
push
sbb
rcr
lock
rorb
rolb
add
rolb
push
mov
or
and
mov
adc
sub
xor
and
fisttps
imul
sbb
pop
sbb
and
sbb
jp
push
mull
jge
rcrb
outsb
shl
mov
cmp
sbb
cmp
gs
cs
sahf
pushf
push
inc
dec
push
xchg
cmc
mov
lcall
fistl
or
sarl
jge
add
aas
fwait
fwait
mov
ds
enter
addl
sub
or
out
mul
shrl
cmc
into
push
ljmp
outsl
mov
inc
test
insl
jbe
pop
mov
cltd
test
sub
xor
push
insb
lock
rcrb
sub
pop
cwtl
dec
shlb
movsl
lods
repz
mov
scas
push
pop
test
outsb
sbb
mov
push
or
popa
xor
push
lds
cmp
stos
ret
std
addb
rcrl
cwtl
mov
idivl
add
xor
insb
rcr
push
pop
inc
js
js
mov
ret
sti
mov
or
clc
je
cmp
repnz
mov
pop
xchg
or
sbb
fistpl
inc
mov
inc
and
and
sub
add
add
xchg
rcl
push
mov
rclb
pushf
push
add
or
jle
pusha
lock
insl
mov
xor
aam
cmp
or
xchg
cmp
jl
dec
call
inc
pop
and
daa
movsl
rcrl
movsb
pop
dec
and
xlat
or
mov
sub
ficompl
sub
test
xchg
pop
js
ss
fs
sub
cmpsl
inc
push
cli
scas
pop
xor
jbe
mov
pusha
shlb
inc
inc
jb
pop
mov
js
cmp
push
aas
push
sbb
push
and
aaa
adc
xchg
test
jle
pop
pop
es
lcall
mov
xchg
and
mov
cmp
adc
lock
fcompl
out
testl
mov
test
push
push
lock
sbb
in
jo
mov
push
dec
jl
push
insb
cld
xorl
pop
push
out
int3
fiadds
out
or
test
or
adc
ret
jle
jle
cld
shlb
les
jg
clc
nop
lods
mov
pop
mov
out
push
adc
pop
cwtl
xor
jge
outsl
ret
push
sub
sbb
pusha
out
sub
jl
rclb
mov
sbb
pop
mov
enterw
rol
cmp
hlt
loopne
fucomp
sarl
mov
sbb
insb
or
mov
mov
ficoml
inc
and
jp
pushf
hlt
cs
out
loopne
hlt
clc
fmull
mov
loope
pop
push
pushf
jne
xor
or
jge
or
movsb
int
push
jl
pop
sub
cli
hlt
cs
shlb
add
mov
movsl
mov
popa
inc
mov
dec
xchg
fimuls
dec
test
fldenv
push
scas
and
sbb
mov
js
ficomps
sbb
test
pop
lcall
or
insb
por
add
adc
adc
jle,pn
mov
jl
xchg
lock
fdivrl
subb
clc
jle
dec
lock
subb
pop
sti
pusha
jns
in
cmpb
mov
insb
call
sbb
mov
std
mov
pop
js
jge
push
push
cmc
insb
or
leave
cmp
adc
cld
mov
jb
cmp
in
out
sub
and
pop
jbe
mov
loop
js
sbb
push
sbb
gs
push
hlt
in
add
cmp
sub
aad
popa
jns
scas
pop
pop
sbb
mov
fsubs
add
je
movsb
popf
adc
jl
add
xchg
loopne
mov
ficoms
insl
fistpl
lock
mov
imulb
lods
mov
mov
inc
mov
sbb
bound
aam
dec
out
movsl
int3
cmp
cli
test
push
ucomiss
mov
push
push
dec
mov
lea
ficoms
pop
sub
enter
mov
dec
add
mov
or
add
mov
ljmp
and
imull
xor
loopne
aam
scas
xchg
pushf
pop
std
enter
hlt
pushf
daa
lea
lods
inc
mov
dec
shlb
xor
push
es
dec
pop
lods
add
push
pusha
ret
aas
jb
xchg
fs
mov
pop
fbld
cld
mov
imul
enter
and
sbb
jge
cli
add
pop
dec
mov
inc
lret
mov
pop
loopne
dec
lock
xlat
lods
sub
jl
sbb
or
jl
sub
or
or
push
jbe
pop
jl
scas
xchg
pusha
cltd
or
pop
fs
ret
push
add
loope
stos
push
daa
ret
jl
jle
dec
ljmp
xor
mov
aam
xor
js
mov
jmp
sub
mov
xchg
test
push
orb
jl
loopne
pop
mov
call
rorl
les
xor
out
aad
pop
popf
push
incb
inc
popa
jnp
in
ror
cmp
negl
push
rorb
fs
clc
sbb
out
or
jo
rol
test
push
adc
push
dec
and
or
pop
mov
rcr
mov
clc
pop
xor
fadds
mov
repnz
add
mov
jge
es
das
ficomps
pop
xchg
divb
cmp
popa
pop
sub
cmp
test
mov
shl
inc
test
dec
pop
xchg
js
push
in
xchg
adc
movsb
idivl
add
lock
mov
movsl
mov
add
jnp
in
jo
and
or
or
jae
push
les
add
in
push
js
mov
and
jbe
out
roll
xchg
sbb
out
mov
jnp
inc
pop
push
orl
ret
movsl
and
jg
xchg
ss
and
cmpsl
pushf
adc
pop
cs
js
and
pop
cmp
pop
scas
jle
enter
pop
arpl
pop
push
cmp
jns
clc
or
roll
mov
pop
inc
sahf
mov
pop
enter
in
test
je
repnz
mov
lds
fimuls
outsl
fdiv
sub
mov
loop
xor
int
shlb
loop
inc
nopl
xor
mov
mov
fcoml
push
jmp
dec
jbe
lea
das
sbb
aas
add
adc
mov
jl
inc
add
mov
xchg
lods
add
and
xchg
and
ljmp
loopne
sub
pop
mov
cs
cmpsb
xchg
or
ret
cmpsl
inc
xor
int
xor
jnp
and
cmp
es
out
lods
sbb
iret
xor
lods
jne
fbld
enter
xor
test
mov
jle
pop
jge
jb
repnz
loop
pop
xor
mov
push
ret
addr16
jmp
pop
dec
sti
loopne
adc
aam
test
fistps
add
inc
or
lods
xor
ljmp
xor
mov
mov
in
add
mov
lods
lret
inc
scas
xor
lcall
fstpt
jg
es
lea
add
popa
mov
fwait
lock
lods
cmp
imul
jg
jno
pop
sarb
movsb
cmpsl
jp
decb
add
insl
into
dec
pop
add
scas
sbb
dec
mov
iret
add
mov
mov
xor
movhps
sbbb
push
enter
sar
repnz
mov
push
lret
std
push
cmp
loopne
pusha
mov
xchg
test
testl
mov
inc
inc
mov
mov
jle
hlt
loopne
cmp
clc
sbb
adcl
sbb
test
mov
fisttpl
loop
mov
pusha
add
xchg
mov
mov
cmp
jp
push
add
les
xchg
or
jo
mov
mov
mov
mov
xchg
or
das
add
jl
mov
test
or
mov
sbb
jl
clc
xlat
mov
mov
imul
mov
int3
push
ss
sbb
and
clc
adc
ffree
ds
lock
data16
loop
jp
fidivs
adc
sahf
xor
pop
xchg
outsb
jl
sbb
cs
lock
ja
sti
sbb
nop
je
les
mov
sarb
and
jno
mov
insb
cld
mov
xor
pop
jecxz
hlt
popf
mov
mov
cmc
add
sub
fisttps
shlb
clc
mov
loopne
dec
out
into
scas
outsl
xor
call
mov
push
inc
clc
loope
cwtl
lock
xchg
lock
jl
mov
add
inc
dec
or
cmpsl
mov
mov
pop
push
cmp
int
rcr
adc
pop
and
jae
cmpsl
dec
int
pushf
mov
data16
or
xchg
and
js
ljmp
pop
or
cld
or
and
aaa
lea
fistpll
icebp
pop
pusha
jb
arpl
outsl
sbb
adc
push
movsb
cs
push
adc
xchg
into
add
test
mov
fsincos
cmp
inc
or
pop
mov
cmp
out
sahf
jne
adc
repnz
popf
add
push
cmc
bound
and
inc
mov
call
psubusb
out
lds
aaa
mov
or
adc
sub
hlt
cmp
aaa
aaa
or
or
xchg
addl
insl
mov
jg
sbb
addr16
les
xchg
jbe,pn
jl
loope
and
lret
mov
adc
xlat
daa
or
cmp
call
sub
sbb
gs
jbe
jb
lds
data16
outsb
jp
rcrl
sar
cld
orb
les
lock
mov
stos
pop
adc
fistpll
or
loop
xor
inc
or
add
addr16
xchg
sbb
out
icebp
adc
loopne
cwtl
scas
test
icebp
cmp
sarb
or
jg
mov
cmp
rcrb
mov
bound
and
xchg
add
and
pmaxub
xchg
inc
inc
jbe
and
inc
pop
fs
dec
ret
je
and
pop
movsb
xchg
push
dec
add
clc
cmpb
into
out
movsb
aas
push
xor
roll
mov
adc
xchg
or
fildll
ret
push
loop
js,pt
dec
rcr
or
je
out
shll
pop
lret
jl
push
add
aam
cmc
push
pop
pusha
nop
ds
mov
rcrl
mov
mov
cmp
cmp
stos
add
js
hlt
jmp
jge
jmp
inc
add
enter
cmpsl
inc
iret
hlt
xor
out
xlat
xor
mov
lds
mov
xor
iret
pop
cli
mov
icebp
sub
loop
cli
and
mul
adc
movb
fiaddl
xlat
ret
push
pop
sub
rol
pop
jp
push
das
add
mov
testl
in
push
and
xchg
sub
jns
jnp
out
dec
out
movsb
mov
shlb
negl
testl
adc
jle
inc
or
pop
cli
lock
jg
jbe,pn
xchg
add
scas
lods
outsl
lcall
jle
mov
popa
inc
cmp
daa
push
pop
lahf
stos
dec
xor
pop
push
or
das
sbb
sbb
aas
mov
out
mov
ljmp
cld
inc
jbe
jmp
test
into
outsb
in
enter
clc
out
les
mov
or
shll
clc
pusha
jecxz
rolb
fildll
imul
push
sub
aad
xchg
mov
lods
add
ret
sbb
insb
lret
repnz
cwtl
movl
mov
jmp
jl
cmp
xor
out
or
sub
ret
mov
jnp
fucom
jbe
jns
add
cmpsb
int3
push
cltd
mov
lock
xor
call
fcmovu
fidivs
loopne
or
data16
popa
add
mov
out
enter
clc
cmp
clc
aam
jo
mov
cld
mov
int
dec
pop
mov
mov
dec
mov
lods
xchg
mov
jnp
je
sbbl
dec
xlat
cmpsb
jge
int
jge
jg
ret
xor
bound
cmpsb
in
rcrb
clc
shrb
adc
icebp
loop
inc
or
mov
fidivrs
fnstcw
inc
rclb
xor
mov
subb
ret
dec
xchg
ds
dec
dec
rcrb
push
iret
add
xchg
leave
je
lea
inc
scas
mov
in
lcall
movsb
mov
lock
xchg
ljmp
xor
push
js
cwtl
sarb
repnz
sbb
cmc
add
sbb
xorb
stos
scas
mov
cwtl
pusha
in
enter
pop
xchg
push
fdivp
ljmp
lods
out
adc
jo
jb
mov
out
sbb
je
bound
icebp
jp
sub
adc
out
inc
push
mov
movb
orl
ret
ret
jl
cmp
rcr
sbb
aad
pushaw
test
jbe
inc
addb
popa
cmpsl
add
into
xor
push
rcl
xchg
lods
fiaddl
clc
clc
lock
cmpsb
sbb
sbb
jg
cmc
or
jle
repnz
outsb
rolb
dec
add
mov
mov
leave
cli
or
sbb
mov
push
cmp
sahf
cli
and
push
out
into
mov
popa
and
push
stc
clc
cmc
enter
add
fs
jle
add
dec
xor
mov
jo
call
into
xor
movsb
dec
sbb
test
mov
dec
pop
pop
push
out
dec
sbb
mov
pop
jl
dec
scas
aam
or
cmp
jle
cmp
inc
dec
pop
mov
into
push
lcall
pushf
mov
pusha
add
shr
adcb
fdivrs
fsubr
xor
js
push
and
mov
les
mov
jg
jo
xor
das
fiadds
mov
inc
inc
pop
pop
xor
xchg
mov
ljmp
enter
movsb
stos
inc
outsl
mov
mov
je
pop
imul
push
mov
rclb
dec
pop
adc
jp
push
push
lea
aas
test
push
pop
cmp
fistpll
mov
jp
mov
cmp
test
xor
xor
sub
cmp
pop
adc
lock
je
inc
pop
cmp
mov
cli
stos
jno
ficompl
testb
pop
out
call
mov
test
int3
icebp
sub
fisubrs
sub
cmp
lock
xchg
cld
pop
hlt
aad
sbb
adc
andb
mov
cmp
mov
aad
andl
pop
jle
push
sub
jle
ficoml
fdiv
sti
pusha
or
mov
rorb
or
cli
ds
add
xchg
lret
outsb
mov
cmp
testl
cli
sbb
push
lods
xchg
out
mov
jge
dec
es
mov
xchg
ret
movsb
inc
popf
filds
fdiv
vpmacsdqh
mov
pusha
jl
loopne
cmp
in
mov
addb
mov
ret
imul
arpl
testl
and
fimuls
repnz
sub
hlt
add
loop
fimuls
inc
pop
nop
push
lock
push
adc
loopne
xchg
cmpsb
cld
mov
mov
inc
sbb
stos
xor
clc
loopne
push
push
adc
scas
adc
ljmp
xchg
test
cli
mov
cld
push
bound
jns
mov
outsb
push
mov
sti
mov
dec
mov
sbb
jne
js
push
nop
in
jbe
mov
call
lods
add
lea
jbe
inc
aas
and
mov
aam
dec
and
js
mov
fiaddl
xor
sbb
loop
les
push
sbb
cs
and
es
out
cmp
jp
adc
in
pushf
push
jle
mov
xor
mov
cmp
jbe
inc
dec
pop
and
vfrczpd
sbb
cmc
icebp
sbb
jb
clc
add
jp,pt
lock
clc
or
add
data16
push
fs
fidivrl
jl
test
or
data16
jl
ss
dec
jmp
sbb
or
into
mov
add
xor
cmpsb
icebp
js
or
add
clc
lcall
and
push
add
sub
add
nop
mov
pop
jge
jo
add
xchg
clc
ret
xchg
lods
les
mov
inc
push
int3
mov
dec
cmpb
jge
inc
xchg
xor
cmc
cli
dec
bound
sar
cmp
notl
movsb
int3
push
les
in
cmp
inc
fimull
and
es
jne
std
mov
dec
scas
inc
push
xchg
mov
andl
je
mov
sarb
xchg
xchg
ret
popa
loope
mov
loope
pop
enter
mov
adc
negl
xorb
gs
mov
sbb
enter
pop
add
jle
and
push
sub
rcrb
mov
data16
cmp
jle
jns
clc
rcll
mov
dec
rcpps
cli
loop
mov
fnstenv
cmovle
mov
jge
out
push
jb,pt
push
lret
xlat
fisubrs
jp,pt
call
xor
icebp
daa
movb
jp
pop
sahf
inc
jbe
mov
loope
inc
or
mov
mov
lds
scas
js
mov
mov
pop
add
pusha
sbbb
jp
dec
xchg
inc
sub
mov
fdiv
ret
mov
xchg
loopne
mov
sbb
jno
xchg
xchg
hlt
ret
movsb
add
scas
add
mov
adc
testb
mov
insb
cld
clc
and
lods
mov
in
sbb
repz
inc
mov
cmp
insb
sub
add
push
lahf
jle
ljmp
lock
roll
mov
cli
rclb
mov
jmp
ds
cmc
adc
bound
testl
std
push
je
in
dec
movsb
or
push
lods
fldl
cmp
lret
test
cli
jmp
xor
clc
mov
push
fs
mov
adc
sbb
or
pop
jle
repnz
test
pop
push
out
sbb
xor
fsubrs
mov
nop
or
xor
push
call
cmp
rorl
cmp
jmp
mov
outsb
in
lahf
test
jo
and
lsl
cmp
loope
mul
leave
pusha
adc
in
mov
xor
mov
xor
bound
push
loop
inc
cli
outsb
cmp
les
xchg
mov
leave
rorb
outsl
pop
iret
mov
into
dec
adc
rol
movsb
outsl
jnp
mov
jo
jp
dec
mov
cmp
bound
jle
test
ret
fsts
add
pop
mov
cld
loope
ret
or
mov
pop
inc
and
roll
je
dec
shlb
shll
xor
mov
cld
mov
xor
xor
mov
cli
and
mov
mov
hlt
sub
cmp
into
mov
or
loopne
dec
push
cmp
pop
pop
gs
sub
pop
fstpl
cmc
clc
nop
icebp
jmp
mov
int3
sub
fucomip
add
call
lret
pop
rolb
insb
data16
mov
jo
inc
icebp
notb
shl
dec
lods
adc
sbb
cwtl
test
jle
add
add
add
icebp
loope
popf
out
dec
xchg
xor
and
sub
xor
mov
rol
aam
pop
pushw
lock
inc
jb
es
ret
fs
xor
clc
jo
add
push
gs
push
fbld
add
cld
pop
ss
jle
loope
in
mov
fwait
adc
sbb
pop
fsubr
les
add
fsubl
loopne
mov
adc
dec
js
add
das
add
cld
pop
clc
sub
sbb
movsl
adc
and
jl
sub
pop
xchg
push
es
in
and
scas
jle
mov
std
jno
call
inc
call
mov
cld
push
push
ds
ljmp
mov
bound
cs
push
xchg
shl
fsts
push
aam
and
jge
jno
mov
or
adc
divb
push
shl
and
xchg
and
pop
sub
jle
adc
dec
xor
test
les
int3
jge
and
xor
cli
leave
aam
stos
test
pop
out
sbb
mov
ds
enter
sarb
call
push
pop
std
cli
or
cli
jl
adc
ds
in
push
cli
fimuls
push
dec
xorb
cmpsb
inc
inc
clc
adc
mov
sub
es
xchg
faddl
push
inc
add
mov
testl
and
addr16
out
in
mull
movsb
push
test
negl
inc
cmpb
and
pop
es
filds
jle
mov
shlb
cmpsb
mov
js
add
das
adc
loop
or
sub
jnp
bound
mov
push
cmpb
push
mov
pop
or
and
cld
dec
push
icebp
pop
xor
push
sbb
or
push
pop
cmpsl
pop
scas
sub
clc
les
or
add
mov
insl
mov
or
fbstp
push
lock
mov
fcom
nop
std
xor
cmc
out
cld
jecxz
jl
fisubrs
lods
mov
insb
out
mov
mov
mov
call
int
aam
orb
xorb
dec
sbb
mov
xchg
adcb
pop
js
into
cmp
fisubrl
pop
push
xor
lock
xor
sub
add
iret
js
scas
cmp
imul
mov
es
xchg
push
lods
arpl
add
push
xor
rsqrtps
ljmp
mov
inc
and
lahf
cmc
nop
xor
add
lret
mov
add
add
sbb
clc
pushf
ss
rol
xchg
clc
inc
insb
inc
dec
repz
pop
movsl
xlat
ret
repnz
nop
pop
std
or
int3
mov
inc
cld
icebp
fwait
fs
outsb
and
cli
or
test
sbb
adc
loopne
mov
mov
xor
jle
in
jle
nop
cmc
mov
dec
dec
add
cmp
in
loop
jmp
popa
aas
jno
jbe
push
clc
and
mov
test
xor
fsubrs
cli
lock
js
mov
jle
int3
andb
jle
outsl
sbb
call
lret
add
push
xchg
lock
cmp
ljmp
call
scas
dec
fbstp
das
lret
ljmpw
es
jbe
bound
or
shlb
movsl
dec
mov
or
movswl
push
inc
in
push
aaa
add
xchg
dec
jecxz
addl
add
cmovae
sub
mov
into
les
xor
pop
pop
and
and
and
jp
shlb
pop
test
mov
adc
fadds
inc
push
out
adc
sbb
pop
dec
sahf
and
js
cmp
movb
pusha
jge
adc
push
or
push
das
or
icebp
jl
cmp
cmp
jne
cld
push
scas
xor
dec
jo
add
xor
hlt
fwait
mov
push
push
mov
sub
bound
out
rorl
lock
jle
adc
jnp
push
pushf
lock
clc
xor
mov
cmp
mov
loope
sarb
jae
sarl
sub
ds
jno
adc
insl
cmpsl
pop
lahf
ds
imul
pop
xor
sti
jecxz
in
sbbb
in
roll
pop
jge
mov
mov
xchg
fsubs
inc
xor
pop
lea
push
rolb
mov
push
rclb
aam
dec
fistps
movsl
jmp
xor
push
aas
cld
cmpsb
lock
push
es
mov
cmpb
xor
xor
lahf
jle
push
xchg
cmpsb
ret
call
call
in
sbb
jp
fs
loopne
ds
cmp
cmp
mov
into
fldenv
push
xor
loop
hlt
dec
fisttpll
stc
es
cmp
sub
xchg
jb
mov
adc
rcrl
mov
pop
add
dec
js
push
leave
loope
jle
cmpsb
lds
lods
inc
mov
inc
or
sbbb
sub
and
mov
adc
push
adc
bound
mov
mov
sub
test
mov
imul
js
xorb
insb
in
clc
jo
and
cwtl
pop
sub
es
je
dec
ljmp
pusha
mov
mov
mov
inc
xor
test
int
add
cmpl
and
scas
xchg
mov
arpl
push
xchg
rorb
mov
lahf
orb
pop
shlb
dec
insl
cltd
cmp
mov
mov
dec
aas
jbe
ret
inc
sbb
push
pop
js
fldl
nop
dec
mov
adc
pop
mov
out
pop
loopne
test
cmp
out
cmp
push
inc
add
adc
inc
arpl
ret
inc
in
and
imul
mov
dec
jp
xor
jp
pop
rolb
hlt
cli
jge,pt
push
xor
fdivl
fistl
aas
pop
cmp
cwtl
cli
xchg
les
ds
dec
out
ds
clc
adc
xchg
dec
pop
pop
jbe
xchg
dec
xor
rorl
es
aas
mov
mov
pop
pop
imulb
clc
pop
or
outsl
faddp
addl
xlat
in
in
shr
std
hlt
loopne
inc
lret
add
sbb
adc
mov
jno
sub
push
ret
std
add
arpl
mov
lock
sbb
cmp
adc
popa
push
push
mov
je
test
inc
sbbb
call
jle
js
shlb
jl
mov
mov
cmp
sub
jo
out
das
jno
push
cmc
dec
rclb
sbb
inc
ret
mov
mov
cmpb
pop
ljmp
mov
aad
xor
rcrl
add
mov
jp
cs
sbb
andl
rcrl
xchg
cmp
aas
xchg
and
orl
cmpb
pop
clc
and
adc
adc
nop
subl
lods
inc
fsubrs
dec
and
shr
stos
xlat
push
jo
jecxz
pusha
stc
xorl
add
adc
add
adc
or
inc
hlt
sub
xchg
in
loopne
xchg
mov
rcrb
dec
sbb
jo
loope
inc
stos
push
add
mov
testl
rorb
lock
pop
jb
nop
rcl
jo
loop
sbb
adc
out
add
mov
pop
xor
jg
scas
inc
mov
orb
pop
scas
lea
repz
ja
mov
enter
lea
inc
fldl
sbb
mov
mov
inc
dec
imul
bnd
mov
icebp
arpl
mov
push
ljmp
into
jle
inc
mov
popa
mov
sbb
mov
add
cmp
test
jnp
lds
pop
adc
add
ficoml
dec
mov
sbb
adc
std
jp
loop
lods
mul
leave
push
pop
dec
add
je
add
loopne
nop
dec
cld
dec
cli
xchg
jne
fs
mov
pop
rol
mull
sbb
xchg
push
nop
lcall
in
adc
std
push
mov
jp
sahf
lea
shr
mov
mov
and
sub
push
test
das
lods
addr16
fdivr
dec
jge
lods
pop
frstor
daa
inc
js
and
jbe
movb
inc
das
inc
cmp
add
push
mov
stc
jge
cmc
popa
add
mov
add
dec
mov
adc
mov
adc
in
fcomps
push
lahf
filds
cltd
mov
iret
fistps
ret
push
nop
push
fdivs
js
cmp
lret
test
mov
ds
and
imul
in
mov
jl
enter
pop
movsl
lahf
mov
clc
add
imul
hlt
inc
es
dec
stos
sbb
sbb
and
js
mov
xlat
push
rolb
cmp
xor
cld
push
mov
xchg
sti
mov
mov
pushf
cld
mov
jno
testl
mov
icebp
cmp
jnp
lcall
xchg
push
or
or
pop
jl
movsb
add
cli
sbb
adc
dec
jmp
push
push
xchg
lret
push
mov
cmc
sub
inc
adc
lock
ljmp
xor
xor
cs
push
mov
xchg
or
out
arpl
aas
add
addr16
rol
dec
sbb
inc
inc
jb
cmp
ljmp
out
lcall
stos
sub
jecxz
and
lock
dec
pop
fidivrl
das
test
push
fstl
loop
pop
inc
pop
repnz
mov
add
pshufw
xchg
inc
mov
jge
cmc
add
mov
xchg
dec
das
pop
mov
or
cltd
scas
nop
mov
adc
inc
out
lret
ficomps
scas
dec
mov
push
xor
adc
ret
push
mov
enter
inc
dec
cmp
xchg
test
cmc
cmp
inc
push
add
clc
or
dec
loopne
adc
loopne
push
sub
pushf
jnp
jl
mov
test
sbbb
ds
push
inc
pop
cld
adc
pop
icebp
xchg
jp
into
add
in
mov
cmp
inc
mov
add
cmp
je
arpl
clc
dec
mov
adc
add
stos
mov
fsubr
mov
daa
in
sub
push
andl
xor
fimuls
or
subb
pop
pop
mov
mov
int3
adcl
add
dec
ror
es
sbb
dec
cmp
gs
rcrl
in
add
add
xchg
lcall
or
imul
cli
movsb
push
xchg
pop
pop
ds
or
repnz
ja
jmp
subb
push
add
out
cmp
clc
pop
push
cwtl
fs
in
sub
loop
inc
mov
rorb
ret
lahf
cs
xchg
cwtl
adc
inc
push
pmaxsw
cmp
clc
mov
test
cmpsb
scas
scas
pop
inc
cli
ds
jecxz
test
imul
push
clc
ficoms
cmp
repnz
jecxz
cwtl
ds
sub
or
xorb
add
add
xor
sub
insb
jle
pop
mov
or
push
cmp
push
cmc
jecxz
xlat
jl
lock
adc
mov
clc
imul
and
add
jge
in
icebp
ds
sbb
nopl
and
mov
jl
pop
lods
add
xchg
rolb
jmp
dec
cld
js
stc
cli
mov
loope
xchg
out
dec
arpl
js
jl
cs
cmp
cs
dec
jl
ds
pop
mov
pop
xchg
or
ds
xor
adc
lock
and
xor
mov
cmp
pop
jge
js
jle
lret
cmp
cli
mov
cmc
add
cmpsb
push
mov
pop
jmp
cld
cmp
movsb
mov
out
sbb
adc
and
mov
cmp
jne
rcll
clc
dec
ss
js
mov
or
sub
sahf
and
lock
push
xor
rorb
ret
cli
jecxz
js
inc
mov
sahf
int3
jne
idivb
cmc
push
dec
xor
lcall
inc
dec
push
jl
js
push
test
aad
mov
mov
lret
js
add
jp
pop
pop
inc
pop
add
aas
mov
loop
arpl
add
jmp
cmpl
subl
loopne
in
les
popa
jmp
aam
and
jecxz
xchg
jne
jmp
jp
imul
jecxz
loopne
xchg
loop
add
xchg
xchg
in
add
mov
push
pop
mov
dec
xchg
add
or
mov
mov
roll
sarb
xchg
andl
add
and
mov
jecxz
roll
jp
ds
jl
bound
movsb
pop
sti
adc
add
not
xchg
inc
xor
bound
ds
repnz
cmp
xor
mov
fwait
stos
xchg
jno
scas
or
xor
stos
out
sti
nop
movsl
fs
mov
xchg
inc
or
icebp
add
pop
inc
sbb
gs
sub
jmp
les
std
sub
insb
jp
dec
nop
and
lock
sbb
rorl
in
into
in
adc
jecxz
pop
nop
enter
scas
adc
jecxz
lock
ljmp
or
outsb
ds
pop
pop
jbe
pop
aam
dec
std
inc
xor
out
xchg
das
stos
inc
jge
mov
push
xor
gs
mov
inc
push
fdivr
lock
sbb
jle
mov
sbb
cli
clc
lock
lahf
jle
fidivrs
daa
jl
pop
aas
sub
fmull
cld
inc
loopne
test
test
hlt
jmp
jbe
fdivs
jl
sub
repnz
jge
jno
sti
mov
or
xor
inc
adc
movsb
and
clc
mov
jnp
movl
leave
loopne
jmp
inc
cs
shll
filds
and
lods
testl
fs
ljmp
cmp
clc
lock
js
cmp
mov
jle
enter
sub
pop
fcompl
testb
dec
and
xchg
add
gs
add
stos
dec
lcall
es
and
ret
or
mov
test
mov
ljmp
xchg
sub
sbb
loop
movsl
test
inc
inc
inc
add
lock
or
pop
sbb
mov
xchg
mov
sbb
lods
and
fidivl
fwait
or
or
mov
or
mov
push
popa
cmp
cmp
add
mov
in
inc
clc
aam
sbb
mov
int
int
loope
dec
xor
cmpsl
xor
xchg
sahf
int
pusha
pop
and
pop
pop
call
es
push
mov
push
aad
jno
stos
or
jl
mov
jp
jge
dec
scas
test
push
fstl
pop
push
mov
dec
mov
cmc
jecxz
fisttpl
lcall
ret
xlat
sbb
jbe
or
fsubrs
adc
xlat
adc
sub
cltd
mov
adc
insb
cmp
idivb
arpl
jl
mov
ss
cli
je
ss
pop
cli
and
mov
mulb
adc
cmp
and
cmpb
sahf
cmc
out
or
push
out
push
adc
and
and
jg
mov
out
xor
in
mov
cwtl
jp
ljmp
pop
add
adc
mov
iret
xchg
xchg
fcomps
xchg
mov
pop
pop
insb
mov
jo
push
icebp
jecxz
les
and
ljmp
stos
pop
das
sub
cs
push
insb
pop
pop
out
mov
mov
push
xor
cmp
aam
pop
adcb
leave
xchg
lock
subb
lcall
aam
in
nop
inc
les
mov
add
call
xor
dec
sarb
negb
jbe
sti
pop
mov
js
push
aad
cmp
sbb
repnz
test
pop
pop
sarb
sub
mov
ret
rolb
shrb
mov
ret
test
jne
push
stos
clc
sbb
fstpt
hlt
sahf
jl
fsubl
call
adc
mov
js
adc
push
fistpll
test
and
js
and
jmp
fbstp
lock
fsubrs
add
sbb
mov
jp
inc
clc
and
clc
ljmp
fcoml
in
lret
clc
mov
sub
dec
push
mov
xchg
fldenv
adc
aad
sti
clc
ljmp
mov
mov
mov
mov
jno
jge
push
fsubp
fdivrs
dec
imul
ds
xchg
pop
inc
mov
mov
and
mov
and
jle
push
cmp
popf
sub
cmp
clc
add
fidivrl
jmp
dec
dec
add
push
clc
mov
dec
loopne
insl
mov
icebp
xchg
fidivs
roll
call
adc
adc
add
inc
fdivr
scas
or
add
out
adc
nop
js
lret
addl
adc
mov
dec
inc
clc
and
hlt
loope
cmp
pop
push
stos
sti
clc
cmp
bound
or
or
loop
fnstenv
cmp
jle
or
mov
movswl
push
enter
push
mov
jp
cmp
mov
std
in
scas
or
cwtl
pop
fists
cmp
shll
clc
mov
adc
pop
cld
sub
int
fcoml
sub
inc
cmp
call
in
sbb
clc
and
adcb
call
rol
xor
sbb
add
loop,pn
aam
jmp
pop
cld
add
cmp
lea
ja
fdivs
aad
ret
ljmp
pop
fmul
lret
pop
jo
mov
inc
scas
shlb
lds
dec
inc
mov
add
xlat
ret
imul
sbb
bound
sbb
xchg
sbb
jbe,pt
ret
sarb
lock
sbb
pop
push
mov
out
cli
adc
mov
add
xchg
stos
cmovp
xchg
fcmove
shlb
xlat
mov
mov
repz
lcall
mov
ret
pop
cmp
movsl
ficoms
mov
jb
roll
mov
mov
sub
inc
add
jl
cmc
xor
nop
shl
jle
push
js
ficoml
ljmp
jl
sar
rclb
jle
lock
into
sbb
movb
pusha
mov
jg
xlat
and
push
xor
test
filds
mov
data16
jle,pt
je
jg
add
sub
add
fisubs
mov
fiadds
movsl
adc
fidivs
pop
xchg
jno
cmc
rclb
jp
aas
lcall
cmp
pop
lock
and
test
ds
and
sub
add
jl
cld
inc
clc
sbb
fwait
nop
stos
leave
mov
cs
clc
std
cli
mov
dec
mov
clc
mov
sahf
add
mov
sahf
cmp
sysenter
sahf
and
in
es
mov
pop
aas
sbb
add
sarb
and
sub
imul
fwait
out
stos
arpl
cmp
inc
xchg
pushf
scas
xor
clc
aaa
xchg
sub
mov
loopne
push
dec
push
movsb
dec
dec
loopne
pushf
outsb
jne
mov
jno
mov
lahf
inc
loope,pn
int3
loop
and
xor
xchg
mov
push
and
dec
fs
les
mov
loope
xor
fimuls
sub
ret
jmp
mov
xlat
and
stos
mov
and
lods
insl
pop
sbb
mov
jb
repz
pop
rol
pop
push
add
jo
push
mov
push
and
loope
xlat
or
pop
or
mov
jl
mov
imul
loope
ret
or
lret
mov
inc
xchg
and
pushf
mov
cmp
push
inc
xchg
xor
popa
shll
mov
jp
adc
das
or
add
call
jmp
inc
jmp
shlb
jl
shrb
sub
loop
jo
xchg
and
mov
test
sbb
ret
xlat
in
adc
and
mov
push
testb
push
lahf
sti
jle
ret
xchg
in
add
es
out
inc
sbb
mov
sub
rorb
in
xchg
lock
push
dec
addl
lahf
ljmp
pop
cmp
adc
jo
out
aad
jle
dec
mov
pop
add
nop
xchg
add
or
jns
sbbl
sbb
pop
repnz
mov
lahf
dec
js
ljmp
push
xor
dec
jo
jne
pop
aam
xchg
jle
clc
push
push
cmp
pop
pop
pop
stos
call
js
imul
dec
sbb
xchg
and
jnp
add
xor
aas
popa
loopne
hlt
sub
sbb
dec
or
jo
lea
push
inc
int3
pusha
xor
aad
pop
xor
add
cs
push
movsb
repz
pop
out
aaa
fdiv
cmp
out
mov
outsb
mov
test
push
repz
cld
icebp
inc
rcr
mov
movsb
sbb
pop
mov
xchg
fcomps
cmp
or
mov
mov
xchg
xchg
jo,pn
lock
mov
push
pop
xor
pop
push
pop
js
jbe
in
sub
xchg
test
mov
jo
add
jo
cmc
push
loope
push
adc
lcall
pop
pop
cld
xor
addr16
test
mov
pop
mov
push
clc
daa
fcomp
es
clc
or
inc
fimull
filds
rcrb
lcall
pop
pop
inc
hlt
push
divl
jge
daa
mov
adc
icebp
and
ret
inc
scas
ds
xchg
add
dec
add
mov
in
fwait
icebp
jecxz
lods
sbb
xchg
shrb
jl
push
mov
pop
fimuls
jae
scas
add
loopne
and
inc
xchg
and
jmp
test
push
and
loop
or
addr16
std
mov
pushf
js
es
or
inc
adc
pop
dec
dec
mov
sub
inc
push
sbb
js
popa
jmp
jo
movsl
sub
jle
add
loop
bound
pop
sar
pop
jg
js
mov
ret
ljmp
pop
push
xchg
mov
rcl
and
mov
and
shl
fstps
cwtl
inc
test
mov
mov
je
imul
mov
hlt
mov
stos
and
jp
dec
cli
sbb
xchg
jbe
fiaddl
cmp
or
dec
and
jl
adc
push
cmpsb
xor
sti
cmp
xchg
fcompl
ss
cmovg
mov
adc
in
xorl
mov
ret
and
jle
push
push
jns
mov
cmpsl
pop
mov
mov
push
out
or
pushf
adc
mov
pop
sub
stos
adc
jle
imulb
jo
add
dec
mov
xor
std
lock
jp
pop
push
xor
stos
bound
jle
push
outsb
mov
aam
xchg
mov
dec
cwtl
js
ds
loopne
mov
sub
test
add
scas
pop
clc
icebp
sahf
dec
repz
jl
cmp
clc
jle
pop
aam
jo
clc
popa
inc
clc
lock
xor
es
js
pop
xchg
movsb
in
fnsetpm(287
inc
iret
loope
cmc
loope
out
xor
out
push
pusha
mov
addb
sbb
push
gs
cmp
sub
ret
orl
fld
sarb
jno
cmpsl
lock
jl
and
mov
jp
jl
add
cli
insb
mov
repnz
ljmp
or
and
pop
sbb
lock
movsb
jecxz
inc
stos
outsl
xor
out
stos
mov
les
or
clc
ret
xchg
lret
cld
mov
or
icebp
jecxz
dec
jns
fs
out
int3
fimull
push
insb
cltd
aam
cmpb
mov
pop
mov
xchg
ficoml
iret
test
jp
ljmp
sub
or
jbe
loope
or
insb
cs
sub
lret
add
lods
lret
pop
jge
add
mov
push
push
mov
fiaddl
push
aam
and
sarb
sahf
mov
loop
int3
je
scas
mov
rorb
jg
stc
mov
sti
dec
cmpsb
in
push
inc
add
mov
sub
or
push
jnp
jge
xor
js
push
loop
push
aas
imul
dec
sahf
and
jp
test
inc
ljmp
adc
inc
das
nop
fs
enter
push
dec
or
in
aam
jno
icebp
push
loopne
xor
adc
mov
adc
mov
insb
xchg
add
adc
pop
rcr
lahf
adcb
loop
pop
mov
mov
dec
inc
mov
test
clc
mov
adcb
ds
rolb
addb
dec
arpl
pop
jge
idivl
jge
pop
sub
push
push
pmulhuw
ret
mov
lret
call
es
fs
xchg
sbb
add
cmpsl
lcall
enter
sub
fidivrl
daa
in
call
inc
pop
cmpsb
in
in
std
fwait
jbe
add
mov
sub
push
adc
or
loopne
dec
cli
jb
pusha
jns
fwait
jle
dec
clc
add
add
push
add
stos
adc
ds
loop
aas
mov
pop
gs
adc
hlt
movsl
mov
test
and
sub
cmp
sbb
push
aad
push
cld
clc
fcmovbe
mov
cmp
imul
adc
xchg
lock
mov
les
inc
lods
cli
jg
push
jno
repnz
fwait
movsb
and
pop
out
sub
pop
mov
aaa
clc
ret
mov
dec
add
rcl
cld
lret
mov
inc
xchg
or
faddl
lods
lods
dec
movsl
push
xchg
sub
pop
aam
lret
loope
stos
prefetcht2
jp
inc
xlat
in
clc
sbb
dec
ret
lahf
xor
sbb
cli
and
movsb
stos
pop
aas
mov
mov
or
rcr
lods
pop
jb
clc
xor
aaa
insb
je
push
mov
ret
or
push
test
insb
je
add
xchg
out
sub
push
fbld
add
imul
cmp
dec
push
daa
jle
mov
pop
mov
cmp
cmpsl
stos
and
inc
idivl
pushf
cmp
mov
mov
mov
bound
shll
mov
mov
call
mov
sbb
cmp
je
push
mov
lds
push
mov
xor
cmp
mov
mov
loope
ficoms
daa
pop
push
dec
nop
jle
je
dec
pop
loopne
push
lret
loope
mov
je
test
mov
negl
mov
cld
ja
mov
jbe
ds
push
cmpsl
push
mov
loope
int3
xchg
out
mov
adc
inc
out
mov
or
outsl
xchg
xchg
mov
cmpb
shll
mov
sbb
pmaxub
cli
rorb
imul
sbb
pop
bound
mov
lret
mov
shrb
push
in
xchg
mov
fdivrs
lcall
cmp
loopne
push
arpl
jl
bound
adc
hlt
inc
cli
rolb
pop
push
adcb
cmp
les
mov
push
xchg
xchg
rorl
xchg
outsl
adc
pop
adc
sti
cs
insb
mov
jl
lock
subl
rcl
pop
dec
sbb
mov
out
push
and
dec
mov
loop
add
repnz
xchg
jbe
and
inc
mov
daa
call
cmpsl
xor
inc
dec
pop
xor
jle
ret
addr16
jae
mov
pop
outsl
loope
jo
xor
xorl
dec
call
lret
clc
loopne
cmp
jge
sub
mov
mov
faddp
xchg
mov
mov
inc
insb
loop
cs
sahf
cli
xchg
nop
mov
xchg
neg
sub
adc
and
icebp
push
cmp
push
repz
adc
dec
and
jne
mov
icebp
idivb
dec
pop
xor
out
sar
fisubs
pop
icebp
add
cmpsl
jbe
pop
subb
mov
xor
lock
sbb
push
test
out
mov
clc
fidivrl
js
cmp
mov
int
ss
decb
mov
or
fs
cmp
icebp
adc
or
dec
sub
xchg
inc
insb
fstpt
sahf
loop
mov
pop
mov
mov
hlt
ljmp
adc
add
cs
inc
imul
mov
loop
inc
add
push
shlb
mov
cmpsb
pop
imul
sbb
mov
ret
push
mov
sub
jo
incb
decl
adc
stc
sub
jle
inc
ss
out
ret
add
pop
mov
shlb
jo
pop
jle
pop
js
xor
adc
push
push
scas
inc
mov
mov
cmpsl
out
in
mov
insl
subb
mov
lock
push
mov
stos
mov
lcall
cmp
mov
inc
addl
mov
sub
scas
cmp
adc
jle
jp
addr16
scas
mov
icebp
je
call
mov
dec
push
mov
xchg
in
ss
jnp
cmpsl
sub
pushfw
xlat
sahf
and
lods
in
sub
lds
test
daa
inc
push
inc
pop
push
rcrb
rcl
jge
sarl
jecxz
pop
adc
jne
mov
push
jnp
fs
pop
rcl
fbstp
xlat
fucom
jnp
xchg
adc
and
nop
sbb
cmp
mov
push
mov
iret
dec
xor
add
adc
pop
and
xchg
jle
aaa
sbb
ss
dec
js
jecxz
xchg
sub
pop
push
pop
jl
loop
repnz
je
clc
stos
mov
add
dec
enter
int
addr16
movsb
pop
stos
scas
jmp
mov
mov
lret
mov
mov
add
sub
adc
icebp
push
xchg
insb
arpl
clc
arpl
movsl
stos
not
aad
cmpsb
lahf
in
sbb
sbb
pushf
icebp
pop
aas
insl
sbb
mov
loopne
clc
gs
sbb
inc
cmp
pushf
adc
xor
in
and
jle
lret
sbb
sub
dec
cmp
notl
test
es
insb
test
xchg
popf
lock
loop
push
xchg
sbb
ss
pop
lock
push
add
jecxz
push
inc
push
shll
dec
inc
insb
cld
aad
in
and
xchg
stos
sbb
out
nop
push
pop
pop
lock
mov
mov
shrb
mov
sbb
sbb
pop
dec
add
pop
mov
cld
shrl
mov
push
clc
sub
pop
inc
cli
xchg
shrb
push
push
xor
outsb
mov
mov
xor
flds
fisubs
jge
mov
pusha
fwait
and
shlb
rclb
mov
jne
pushf
jl
or
sar
jns
out
cmp
mov
aaa
cmp
mov
or
ljmp
cmpsb
rorl
cli
jno
pop
push
mov
mov
outsl
movsb
enter
xlat
testl
cmpsb
stos
mov
cltd
loopne
pushf
xchg
mov
repz
pop
adc
xchg
jo
test
inc
push
jl
fmuls
xorb
push
jecxz
shl
cli
iret
inc
add
push
xchg
xchg
xor
xor
clc
xchg
pop
aam
sub
fbstp
pop
cmc
add
jecxz
cli
xchg
aad
hlt
popa
push
sbb
cmp
sbb
push
push
clc
and
fs
lds
sub
insl
xlat
out
mov
jl
loop
sbb
ljmp
loop
and
xlat
inc
cmp
lock
jnp
rorl
into
js
dec
pop
into
dec
bound
push
jg
xor
rorl
dec
add
pop
aam
pushf
sub
or
fs
add
lods
test
outsl
adc
lahf
jne
mov
and
adc
and
adc
stos
push
pushf
push
hlt
rclb
loopne
mov
and
add
dec
das
jecxz
mov
je
xchg
test
test
cmp
loop
inc
call
and
movsb
pop
mov
mov
push
or
aas
or
adc
jmp
hlt
pusha
cmpsb
mov
xor
loope
mov
mov
add
push
xchg
fadd
pop
jmp
nopl
test
jb
imul
jl
and
jecxz
add
test
scas
imul
ss
fdiv
or
mov
dec
in
nop
xor
jecxz
mov
xchg
fwait
mov
push
in
scas
push
add
push
in
out
jnp
idivb
sub
add
cltd
into
sub
sarl
xor
jp
or
ljmp
or
ljmp
pop
stos
into
mov
cwtl
mov
sub
add
punpcklbw
mov
mov
sbb
pop
dec
std
push
xor
jbe
ret
arpl
loop
push
les
cs
xchg
ja
std
cmp
mov
js
daa
mov
mov
dec
fsubr
sub
insl
jge
les
cs
push
push
dec
sbb
notl
xor
in
pop
jp
loop
repnz
jp
or
dec
lret
xchg
mov
mov
mov
mov
lds
dec
jmp
mov
mov
out
imul
in
mov
mov
loope
mov
xor
pop
pop
inc
cwtl
mov
in
lea
std
lret
dec
rcl
out
mov
pop
es
inc
ret
dec
fptan
jnp
loop
adcb
add
insb
insb
test
add
test
xor
add
cmp
das
les
test
pop
pushf
loope
mov
add
sub
js
les
cmp
js
adc
pop
cmp
push
call
lcall
arpl
fisubrs
ja
fcoms
dec
xchg
cli
insb
rorb
push
cld
movl
es
dec
dec
test
sbb
sti
stos
test
icebp
dec
or
inc
shrl
push
inc
enter
call
cmp
movsb
or
pushf
pop
jae
shl
jle
cmp
fists
or
push
bound
dec
or
aad
mov
jmp
pop
lret
inc
dec
mov
jno
popa
cmp
cltd
aam
out
dec
loope
jne
push
mov
sub
cmp
mov
or
jmp
test
xchg
popf
ljmp
shrb
cli
jle
lock
and
mov
dec
mov
mov
xor
pusha
sbb
cmc
movsb
icebp
shlb
sbb
mov
sahf
push
aaa
pop
ds
mov
in
dec
mov
jo
cld
jle
and
int3
dec
sbb
sub
jecxz
mov
jbe
ljmp
xchg
push
rolb
fildll
mov
xchg
mov
mov
mov
in
push
pop
das
mov
data16
xor
idivb
fldt
addr16
mov
xchg
in
insl
loopne
insb
push
adc
lock
cwtl
adc
pop
sbb
decl
adc
hlt
and
mov
pop
hlt
loopne
roll
and
ljmp
comiss
dec
push
xor
xchg
daa
cmp
in
jle
paddd
fisubs
pop
dec
rcrb
ret
ljmp
das
mov
push
xor
imul
mov
negb
or
add
mov
xor
stos
mov
js
add
aad
sbb
jge
mov
hlt
test
clc
dec
fldcw
or
inc
dec
pop
outsb
icebp
mov
rclb
mov
cvttps2pi
sti
pop
cmp
ds
xlat
call
mov
ret
mov
clc
cmp
movsb
pmaxub
in
mov
notl
inc
leave
jle
std
mov
dec
ljmp
test
cmp
js
push
xchg
mov
or
repz
push
cs
jl
mov
insb
outsl
imul
lea
sub
jo
and
pop
adc
xchg
loopne
lods
aas
add
dec
push
dec
lds
push
rolb
negl
push
js
add
mov
mov
in
and
lods
cmp
sub
xor
icebp
add
jl
pop
mov
nop
push
cmp
scas
shl
cmc
movsl
xor
jge
xor
cmp
mov
js
hlt
or
enter
idivb
jb
fcoms
ret
aam
out
out
xchg
mov
push
test
subl
out
out
pop
mov
pop
pop
leave
adc
dec
movl
mov
das
inc
push
stos
es
jno
lea
xchg
sbb
ljmp
dec
adc
arpl
inc
addl
mov
dec
dec
iret
sarb
add
adc
cmp
lock
or
pop
xor
das
add
jb
pushf
adc
test
mov
fnstsw
out
inc
adc
fcoml
inc
mov
push
into
xchg
stos
cmp
mov
dec
popa
fidivrl
cmovs
pop
mov
adc
popl
sub
or
mov
inc
addr16
loope
and
xor
popf
std
xor
lods
aad
push
lock
incb
jecxz
loopne
push
xchg
test
lock
sub
repz
jle
xchg
or
pmuludq
mov
mov
fbld
xor
sar
jl
cwtl
and
pushf
ret
js
lock
maxps
jbe
in
mul
or
cmpsl
out
aad
aaa
fdivrs
jbe
mov
sbb
cmpsl
dec
push
inc
test
nop
clc
cmc
sbb
ss
fsubrl
cmp
aad
cmp
rcll
neg
orb
out
mov
andl
aam
je
repz
repnz
aam
int3
inc
xchg
cli
or
xor
push
std
mov
mov
mulb
or
lahf
jle
in
add
push
jmp
dec
or
test
subb
pop
fs
adc
jne
loope
push
sub
cmp
out
xchg
push
sbb
das
loop
sbb
mov
filds
sbb
sahf
push
adc
jecxz
pop
insl
lods
test
pop
scas
mov
mov
repz
mov
inc
sarl
clc
lock
aas
mov
push
push
rcrl
pop
mov
test
cmpl
scas
dec
je
mov
sbb
xchg
sub
arpl
xchg
push
js
add
fwait
movsb
leave
cmp
push
jp
xchg
clc
xor
lea
loopne
fsubs
and
pop
jge
sub
push
cmp
iret
mov
arpl
mov
or
daa
or
js
mov
cmp
jbe
aam
rorb
xchg
cli
push
xchg
push
rolb
or
xlat
movsb
mov
or
adc
jnp
sbb
dec
sarb
pop
daa
sbb
add
pop
insb
daa
dec
xorb
or
mov
out
jecxz
jl
aaa
rcrl
or
add
adc
push
sbb
pop
add
fwait
mov
mov
hlt
shll
fidivs
js
sarb
dec
scas
mov
mov
and
cld
and
dec
xor
jp
test
mov
dec
pop
ds
scas
and
pop
stos
sbb
bound
pop
dec
int
ljmp
outsl
mov
fsubs
pminub
cli
and
mov
out
ret
rcrl
shlb
jg
bound
cmp
hlt
hlt
pop
aam
ljmp
lret
std
or
ret
les
or
inc
aam
xchg
push
xchg
ja
pop
add
adc
push
or
xchg
lahf
mov
out
dec
dec
adc
ljmp
les
gs
lock
mov
pop
pushf
orb
jno
icebp
call
push
call
mov
dec
mov
lods
pop
addr16
pop
and
sub
pop
stos
clc
std
clc
xorb
jbe
and
pop
xchg
imul
mov
inc
cmpsl
sahf
mov
addl
cld
ds
cmpsl
mov
or
js
push
out
orb
pop
mov
cwtl
sub
setg
jno
dec
inc
mov
xchg
fmuls
jecxz
mov
pop
sarb
xchg
mov
scas
push
pop
cmpsb
add
jecxz
or
call
sbb
mov
stos
lahf
sbb
negb
inc
fcomps
sbb
rolb
repz
nop
mov
push
mov
push
out
pop
pop
inc
mov
xor
push
add
pop
xor
pop
cmpsb
jbe
jp
mov
js
jb
out
mov
hlt
fiaddl
mov
notb
arpl
or
aam
clc
push
pop
or
sahf
fs
sbb
stos
push
cwtl
test
push
xlat
adc
inc
inc
loope
dec
mov
pmaxub
in
sub
aas
ds
adc
scas
mov
bound
out
cwtl
hlt
shlb
lock
outsl
in
jnp
pop
cld
lock
adc
cmp
mov
sbb
es
inc
pop
shrb
rclb
shll
sbb
inc
mov
push
mov
sbb
and
mov
pop
inc
add
pop
sahf
or
test
test
mov
mov
loopne
sub
loopne
mov
repnz
out
or
js
dec
mov
outsb
jae
inc
rolb
push
xlat
jmp
sbb
push
out
jle
fisttps
mov
cmp
js
mov
sbb
adc
mov
jle
fmul
xor
rcl
mov
mov
mov
imul
je
push
adcb
pusha
pop
mov
xor
xor
and
push
ja
loop
sbb
not
shrb
inc
insl
gs
stos
rorb
ss
mov
test
xchg
push
fidivl
mov
jns
xchg
les
mov
pop
insl
mov
push
clc
enter
push
jl
jnp
loope
dec
pusha
adc
sbb
sub
jecxz
push
data16
or
jl
cltd
in
nop
dec
cmp
cmp
testb
adc
testl
and
dec
pop
push
sahf
sub
and
add
mov
push
outsb
xchg
dec
outsl
jle
adc
mov
mov
ret
inc
pop
mov
push
push
and
sub
rclb
add
out
inc
adc
or
mov
lods
les
inc
dec
in
sbb
cmp
scas
clc
push
movsb
add
adc
sub
adc
sti
mov
adc
mov
roll
pop
dec
mov
je
adc
jp
clc
cwtl
jp
mov
out
sar
leave
sbb
jle
or
ds
add
es
cltd
dec
mov
adc
and
mov
cmp
cs
sbbb
add
in
xchg
loop
div
shrl
jp
cmp
sbb
shl
data16
jno
test
outsb
xor
ret
inc
pcmpgtd
push
loop
shlb
pop
cmc
dec
jle
cmp
jge
dec
mov
fnstenv
dec
sub
pop
test
dec
cmp
lahf
and
ljmp
and
cmp
shlb
jecxz
pusha
outsb
mov
xorb
inc
jge
mov
sahf
adc
mov
ja
lret
nop
jp
inc
fstl
xchg
scas
out
sti
mov
sbb
jp
insb
ja
or
adc
ret
idivb
insb
mov
pop
mov
mov
mov
bound
jmp
mov
pop
inc
inc
mov
mov
lea
push
sub
dec
aam
xchg
mov
enter
loopne
orb
test
sub
out
lss
mov
loop
mov
testl
loop
aaa
lea
dec
push
movsl
nop
fwait
cmp
das
and
push
idivl
loop
cmpb
or
repnz
divb
ljmp
mov
xchg
es
jge
inc
shrl
push
xor
mov
out
xlat
test
mov
cli
aam
ret
add
cs
xchg
adc
cmovno
ss
rclb
cli
mov
insb
mov
sub
dec
jmp
test
lahf
fwait
sarb
pop
sub
xchg
jle
ljmp
jp
lea
cmp
aam
and
loopne
mov
stos
pop
movlps
js
jnp
mov
xchg
inc
cmp
or
clc
movsb
fists
push
roll
in
inc
mov
push
mov
add
daa
pop
movsb
sahf
int3
shrb
scas
jno
add
mov
and
aam
fbstp
sub
int
xchg
mov
test
push
loopne
ret
call
mov
xchg
inc
inc
cmp
clc
mov
dec
pop
xchg
imul
lods
push
movsb
pop
xlat
shl
jecxz
xchg
adc
jmp
cwtl
mov
adc
les
mov
mov
and
js
inc
outsl
inc
jbe
loop
subl
push
or
and
outsl
cmpl
jl
mov
mov
xor
adc
mov
gs
jg
lods
shrl
xor
mov
pop
push
sbb
or
pop
loop
rclb
loopne
push
loop,pt
lcall
sbb
pop
lods
fbstp
loop
not
movsb
pop
push
mov
cmp
fsts
or
add
call
pop
test
mov
in
mov
orl
adc
dec
pop
mov
lds
mov
negb
cmpsb
pusha
xor
xor
pop
pop
xchg
sti
hlt
jle
mov
push
push
lock
fildl
jp
mov
fdivl
jl
cli
test
fstpt
outsb
pop
bndldx
xor
pop
sbb
xor
mov
fwait
pop
clc
add
lcall
sarb
mov
sbb
scas
icebp
nop
cli
sub
jg
in
imul
insl
cmpsb
pop
lods
mov
adc
imul
loop
adc
adc
roll
inc
ss
jge
jmp
or
mov
add
in
cltd
js
cmc
cmp
mov
add
loop
divb
inc
xchg
lods
pop
sbb
mov
int
dec
dec
mov
adc
clc
std
clc
mov
loope
adc
sbb
inc
loopne
js
pop
mov
push
dec
xchg
rorb
or
ficoms
popa
and
cmpl
sub
sbb
sub
loop
cmp
jb
rcl
ret
clc
sarb
js
loope
les
sbb
bnd
add
push
jb
stos
xchg
mov
divps
xor
les
inc
test
sub
subl
dec
cwtl
iret
mov
loop
xchg
fdivrp
cmp
dec
mov
jbe
insl
sbbb
out
sbb
mov
add
sub
clc
lret
jp
scas
je
nop
std
jp
mov
mov
push
push
inc
xchg
fisttps
xor
daa
pop
jecxz
jle
subl
add
addb
mov
rcr
std
sbb
jge
mov
fsub
lods
mov
jle
push
cwtl
cmp
js
pushf
leave
dec
scas
in
out
psubsb
or
jp
cwtl
dec
loopne
addr16
mov
inc
gs
jbe
ss
rcl
inc
mov
sbb
imul
ljmp
sub
mov
sub
ljmp
loopne
push
push
aas
or
clts
cmc
add
and
jge
mov
or
push
pop
out
sub
push
pop
insb
movsb
and
icebp
push
sbb
push
je
fs
add
ds
sub
lds
inc
in
enter
testl
les
mov
lods
pushw
aam
pop
sbbb
es
cmpsl
mov
inc
js
and
xchg
mov
ret
lock
out
imul
xor
orl
pop
and
test
insb
sub
or
add
mov
adc
leave
roll
inc
sbb
xor
cli
loope
popf
cmp
sbb
sbb
add
jbe
mov
sub
dec
es
inc
lods
dec
jmp
stos
mov
dec
outsb
cmp
adc
mov
or
out
out
movsb
repnz
in
sbb
sbb
subl
mov
add
push
jmp
lea
inc
js
rclb
sub
dec
shl
dec
in
inc
push
es
add
mov
lahf
push
xor
sub
jnp
cld
cmp
cld
add
dec
xor
pusha
lods
xlat
xlat
sti
bound
orl
testl
decb
lds
pop
popf
jge
adcl
jmp
mov
push
shr
imul
lock
mov
push
jge
sbbb
sbb
sbb
and
mov
ljmp
add
push
xchg
fst
rorb
fcom
push
sti
and
sahf
leave
rcr
dec
loopne
push
test
jnp
adc
stos
pop
movsbl
push
push
mov
push
jo
sub
xchg
test
jno
dec
sub
rclb
js
adc
loopne
clc
hlt
loopne
loopne
add
fbstp
fidivrl
mov
movsb
lock
pop
sbb
mov
fisubrs
dec
js
jle
sub
or
cmpl
xchg
subl
mov
shl
loopne
es
sarb
xor
out
shr
shlb
xchg
dec
inc
or
inc
ljmp
rcll
sbb
adc
test
pop
inc
jle,pn
cmp
sbb
mov
fcoml
xor
stos
push
mov
push
movsl
insb
sub
mov
add
mov
aas
jle
and
push
inc
jb,pn
jg
cmc
sarl
and
push
mov
call
xchg
adc
pop
jno
pop
jne
jle
arpl
or
lods
lcall
mov
lods
scas
shrb
or
inc
scas
pusha
inc
insl
jmp
mov
inc
pushfw
nop
adc
mov
cmp
xor
sbb
jp
mov
icebp
rolb
cs
test
adc
cmpsb
mov
adc
add
daa
and
xchg
pusha
pop
les
jo
push
pop
call
movsl
cmpb
in
jle
cmc
jmp
mov
clc
stc
push
fidivs
aaa
adc
clc
push
lcall
hlt
aaa
and
pop
std
jp
add
js
psubusb
js
movsl
inc
xchg
sbb
fprem
add
pop
push
lea
mov
jle
sbb
xor
mov
nop
xchg
push
or
adc
mov
es
jmp
dec
fmull
addb
xchg
and
sahf
push
adc
shrb
clc
hlt
enter
test
je
imulb
pop
mov
fsubs
jmp
jecxz
mov
dec
xchg
cmpsl
icebp
scas
lock
jo
xchg
testl
aad
addb
mov
loopne
inc
push
and
test
push
loop
jo
cmp
add
lret
xor
cmpsl
aas
popl
push
loopne
jge
shlb
xor
bound
adc
push
xor
jp
xchg
lock
pop
repnz
dec
and
pop
clc
nop
inc
decb
fldl
and
sti
out
js
fisubs
loopne
bound
popf
adc
inc
xchg
ds
data16
xor
mov
out
xchg
add
xchg
roll
push
aad
push
dec
std
clc
push
bnd
xor
jno
test
xchg
sub
fsubrs
ds
jp
xor
decb
fldl
inc
cmpsb
mov
mov
lds
add
incl
mov
sbb
mov
jge,pt
dec
es
lods
lea
test
push
aaa
fsubrs
mov
lods
mov
flds
cli
jbe
sbb
xchg
insl
clc
jnp
sub
adc
push
js
jp
test
test
bound
dec
rorb
lock
ds
or
xchg
or
add
cmp
mov
dec
shlb
sti
add
aad
mov
mov
adc
insb
add
lds
mov
pop
push
jg
test
sub
aam
xor
es
es
js
sbb
loop
sbb
rcl
filds
dec
mov
add
jns
cmc
fadd
rol
cmpsl
cmp
and
mov
mov
int
in
sbb
ja
std
fsubrp
mov
mov
cld
pop
es
cmpb
xlat
stc
stc
xor
lds
xor
push
test
jb
mov
packsswb
sub
mov
out
bound
jle
xchg
push
shrb
imul
dec
loopne
fimull
add
int
cwtl
cmp
pop
aas
push
or
mov
add
xor
dec
movsb
sahf
sbb
rcll
test
sbb
push
xchg
lock
mov
outsl
sub
into
jl
jle
cli
aas
movsl
fimull
and
cltd
pushf
and
loopne
mov
setg
push
faddp
xchg
bound
dec
mov
das
ds
test
and
xlat
imul
mov
mov
push
mov
jmp
andl
jo
mov
mov
in
sub
loopne
sub
push
cli
inc
cmpb
adc
push
clc
dec
insl
mov
ret
cld
nop
icebp
fs
test
and
mov
pop
pop
mov
xor
jp
mov
movsb
push
nop
lock
notl
js
pop
add
adc
nop
call
cmpsl
lock
mov
mov
push
sahf
sbb
pusha
shrb
in
testl
movsb
xchg
mov
pop
test
insl
and
data16
cmp
mov
or
andb
pop
and
cmp
xchg
sbb
inc
loop
clc
xor
mov
fs
jge
cmpsl
lock
pop
ljmp
fidivrs
sbb
sbb
cmp
sub
out
fsubl
ja
fdivrs
dec
mov
jns
cli
cli
jmp
outsb
mov
repz
xlat
daa
or
shll
mov
adc
inc
mov
jo
mov
mov
ret
cmpsl
lea
xlat
clc
mov
inc
and
hlt
inc
dec
lds
fdivp
mov
mov
mov
sub
cmp
loop
movsb
jb
xchg
std
outsb
jl
inc
pusha
sub
jecxz
sbb
push
es
mov
stos
loopne
test
adc
not
sti
dec
leave
ss
xor
add
dec
mov
pop
dec
scas
dec
mov
sub
mov
pop
xchg
sbb
stos
hlt
ds
notb
mov
in
in
imul
mov
jbe
mov
mov
subb
out
dec
js
loope
xor
in
test
sub
js
les
std
or
mov
push
xchg
loopne
mov
xchg
xchg
popa
xor
xchg
in
ret
ret
pop
das
add
hlt
sbb
loop
pop
push
das
sbb
pop
sbb
push
mov
rorl
xor
cld
ds
add
mov
mov
popl
xor
dec
and
jl
and
lahf
shll
pop
js
scas
jp
lock
ds
xor
mov
sahf
jle
pop
test
ljmp
sahf
sub
scas
mov
add
fcomip
jge
cmp
or
sbb
xlat
xchg
mov
insb
mov
pushf
cmpb
add
out
pop
cld
shr
mov
adc
jo
or
xchg
or
es
mov
xlat
aam
out
ffree
pop
cmp
pop
mov
mov
xchg
adc
mov
mov
xchg
push
push
je
xor
fwait
pop
dec
seto
xor
cs
jo
iret
jmp
push
hlt
jb
xor
or
in
andl
add
in
pop
and
loopne
rcl
xchg
lret
cmp
mov
inc
xor
mov
mov
cmpl
test
xor
cmc
sbb
mov
mov
fildll
sbb
jno
xchg
pop
punpckhbw
cli
rcll
mov
inc
out
sbb
sbb
lock
adc
lea
jle
js
jmp
cmp
cwtl
jge,pt
clc
fdivp
fdivrs
test
mov
icebp
inc
add
push
xor
adc
inc
mov
jb
sbb
insb
shr
loopne
scas
mov
sahf
mov
mov
jmp
stos
add
test
adc
jle
push
js
mov
jg
mov
pop
inc
pushf
or
xchg
add
jb
lods
inc
sbb
rcl
xchg
push
out
add
cmp
test
fcoms
test
xchg
pop
pop
sbb
sub
shlb
fsubl
push
pushf
adc
aam
lods
mull
inc
adc
fstps
jo
test
js
add
lock
sub
cld
pop
dec
testl
iret
jo
rol
jmp
jle
sub
dec
push
sahf
xor
popa
jmp
test
lods
lret
mov
lret
jge
test
test
cmp
cli
and
pop
add
lahf
push
mov
sbb
push
divps
mov
punpckldq
das
loop
pop
repnz
imul
inc
js
aad
out
sub
dec
mov
pop
or
clc
cmp
xchg
cmp
into
add
mov
and
sbb
xor
or
insb
sti
icebp
loope
mov
dec
mov
add
test
test
mov
adc
movsl
icebp
adc
xor
inc
cmp
push
cltd
mov
sub
shrl
fsubs
loop
rolb
negb
sbb
nop
stos
push
std
sahf
sahf
add
inc
int3
cld
dec
loopne
lahf
dec
das
in
in
fidivrl
push
sbb
cmpsb
shl
dec
or
imul
es
pop
adc
scas
mov
outsb
nop
shll
js
cmp
les
xchg
xchg
scas
insb
adc
mov
fmul
loop,pn
aas
inc
loopne
popa
incb
xchg
test
xor
inc
loopne
cmpb
loopne
xchg
fsubs
sbb
addl
sub
pushf
icebp
mov
add
rcrb
sbb
jmp
mov
push
push
aas
mov
sub
mov
sbb
psraw
pop
inc
and
mov
pop
test
inc
mov
cmpsl
push
stc
ret
inc
xorl
jg
outsb
aad
fdivr
mov
movsl
ds
pop
xorb
jge
dec
jl
jle
add
xchg
pop
inc
clc
or
jbe
int3
sub
shlb
dec
inc
fs
jl
out
idivl
pop
bsf
xchg
in
fimuls
cmp
cmc
inc
jmp
inc
sbb
dec
rorb
cmp
inc
add
xlat
mov
mov
sbb
insb
decb
mov
ret
jnp
or
addr16
pop
je
ljmp
mull
inc
data16
xor
xchg
popa
mov
cmp
xchg
repnz
insb
movd
arpl
lods
pop
xor
lods
pop
ja
mov
xor
mov
je
jmp
loop
push
or
push
jle
ret
enter
pusha
mov
xchg
cmp
fimull
scas
movsb
aam
cmp
rol
clc
out
mov
mov
out
ds
jge
pop
roll
data16
inc
jmp
in
fcoms
xor
dec
fsubrp
inc
cli
mov
sbbb
shr
lret
and
adc
testl
mov
xor
and
shrb
jmp
mov
ret
jg
dec
popa
push
cmp
dec
cli
adc
pop
dec
mov
add
test
mov
cli
mov
dec
fucomi
jbe
dec
aas
mov
shll
fstps
mov
inc
inc
push
or
inc
dec
cltd
mov
sbb
xadd
mov
inc
mov
xor
test
imul
lret
iret
mov
inc
and
ljmp
cmp
into
cs
xchg
inc
mov
push
lea
pop
out
js
mov
mov
cmpsl
dec
cvttps2pi
insb
xor
dec
out
shr
aam
and
or
xchg
inc
xor
push
mov
xor
jecxz
outsb
arpl
loop
cmp
sub
gs
adc
pushf
sti
jns
or
out
out
stos
inc
dec
push
adc
mov
push
cmpsb
repnz
push
fistpll
bound
mov
cmp
and
cmp
mov
inc
mov
lahf
mov
xlat
mov
mov
fmull
cmp
into
push
mov
fldcw
pop
inc
pop
mov
lret
dec
das
mov
fiadds
loop
pop
push
enter
adc
inc
push
bswap
mov
dec
jecxz
lock
mov
and
jl
std
das
sti
jge
jo
jne
xchg
outsl
bound
pop
fildll
out
ds
fsub
sub
and
xor
lidtl
dec
test
lcall
call
inc
ljmp
les
mov
shl
pop
leave
jecxz
dec
not
mov
cmc
sbb
orl
nop
sbb
pop
pop
ret
pop
pushf
cli
leave
rorl
mov
adc
je
in
jnp
sbb
nop
sub
mov
inc
cld
xor
pop
mov
and
mov
pusha
mov
loop
xchg
mov
sbb
sbbb
pop
ljmp
imul
mov
pop
xchg
sbb
inc
adc
lea
cli
xchg
add
sbb
add
jle
sbb
popf
and
js
nop
and
and
or
mov
xor
sar
cmp
in
sbbl
fs
fdiv
jnp
mov
or
cwtl
add
pop
shlb
mov
jecxz
test
pop
sarb
mov
dec
out
sarl
adc
xchg
xlat
lds
adc
sub
xchg
inc
lahf
enter
enter
xchg
adc
jle
test
lea
loopne
lods
dec
jle
int3
into
cmp
ret
pop
ja
lods
jge
movsl
sti
or
mov
ljmp
cmc
cli
sub
adc
clc
dec
out
jnp
jbe
mov
cwtl
jo
icebp
ret
add
test
xor
cmp
mov
push
mov
inc
or
ret
inc
loop
push
or
add
sub
xor
std
xchg
lock
lcall
or
pop
dec
ficompl
cmp
loopne
lret
clc
jp
sahf
xor
mov
pop
add
data16
cmp
fcmovnbe
rcrl
test
cltd
sbb
mov
or
xchg
mov
fs
mov
pop
adc
jns
shlb
in
shrb
movsb
movsl
outsb
shlb
pop
mov
aad
xor
in
lock
sbb
nop
push
or
sbb
mov
sahf
sub
add
mov
rolb
or
xchg
movsb
dec
cmp
cmp
das
out
jecxz
or
nop
cmp
add
bswap
or
mov
pop
or
rcl
sub
jnp
dec
movsb
and
aaa
test
cmp
inc
loop
sahf
push
repnz
scas
popl
mov
jp
loop
lea
ficompl
add
or
sahf
es
inc
cs
cmp
cmp
xor
hlt
sahf
fmull
xlat
shlb
insb
add
dec
popa
xchg
aas
sahf
ret
sub
pop
sbb
mov
aad
sub
inc
jecxz
dec
mov
add
mov
sahf
outsl
popa
xchg
sbb
sbb
fisubl
loopne
dec
push
mov
ret
push
push
rolb
pop
lret
clc
out
stc
xor
cs
shll
stos
mov
loop
sbbb
sbb
int3
pop
push
cs
pop
ss
nop
repz
stos
inc
shlb
decb
sbb
xor
jmp
xlat
mov
pop
cmp
push
daa
and
add
fidivrs
pop
sarb
push
push
inc
sarb
clc
or
int
cld
movsb
hlt
jle
stos
ret
adc
and
xchg
mov
mov
sti
ret
mov
adc
in
inc
push
pop
sub
scas
aas
lods
or
clc
icebp
insb
ret
call
adc
out
mov
push
pop
pop
dec
jbe
pusha
call
mov
jne
imul
sarl
lret
dec
jecxz
insl
loopne
rclb
push
adc
xchg
pop
push
adcb
imull
pop
pop
cmpsb
jle
icebp
stc
test
scas
push
sbb
cld
cmpb
sub
inc
xchg
jle
popf
xor
pop
fsubs
push
inc
add
sbb
xor
loopne
dec
adc
sub
cli
sub
dec
jl
inc
punpcklwd
sbb
sbb
lock
fadd
and
sbb
ret
sbb
mov
insb
lods
xchg
adc
jmp
cmpb
ret
cmpsl
scas
sub
mov
push
cwtl
sbb
sarb
add
js
cmc
cmp
test
mov
ret
dec
add
xchg
push
or
mov
into
adc
mov
jge
xor
cmp
xor
dec
loop
aam
push
roll
pop
add
push
push
test
jl
fiaddl
xchg
iret
xor
inc
or
push
or
mov
mov
loopne
pushf
add
outsb
sahf
jns
rorl
ljmp
push
cmp
push
dec
sahf
or
cltd
dec
dec
mov
int3
scas
out
loop
inc
rcrb
xorb
jecxz
push
xchg
cmp
icebp
mov
mov
jo
jecxz
iret
mov
add
add
xchg
bound
pop
mov
ljmp
rcl
jecxz
push
push
push
dec
loope
cmp
jbe
dec
sbb
xor
cmc
ret
pop
and
mov
push
js
int
daa
mov
imul
in
dec
repnz
ret
push
test
scas
sub
mov
rorb
cmp
outsb
or
lea
inc
xchg
daa
or
mov
outsb
outsb
loop
adc
mov
outsb
outsb
outsb
outsb
add
scas
dec
push
outsb
outsb
outsb
outsb
paddsw
sbb
repnz
mov
iret
xor
pop
mov
cli
mov
push
test
cmp
jp
pop
stc
inc
enter
aas
jl
xchg
push
add
addl
jne
daa
outsl
add
sub
and
adc
andl
adc
repnz
arpl
xor
sub
popf
call
jo
cmpsl
push
mov
mov
divb
scas
pop
jl
mov
repnz
fwait
aaa
sti
enter
mov
xor
xchg
in
lock
pop
mov
or
adc
insb
loop
insb
cs
adc
orl
ficoml
std
mov
scas
pop
ret
mov
pop
push
das
stos
cmc
jmp
xor
inc
js
lahf
cmpsl
inc
jge
mov
adc
sub
imul
mov
aas
sub
loope
movsb
dec
push
lds
adc
cwtl
out
xchg
add
es
xchg
mov
scas
movb
movsb
loop
cmpsl
inc
js
icebp
sbb
imul
pop
inc
es
mulb
mov
mov
sub
fcmovu
loop
mov
sub
mov
adc
dec
imul
sahf
scas
cmpsb
out
and
or
xor
scas
pop
mov
or
loope
add
ret
mov
mov
push
pop
ds
cmp
addb
popf
add
rcrl
call
fwait
mov
or
fs
or
out
lock
jl
or
repnz
mov
mov
inc
sub
rorb
insb
mov
adc
movsl
test
xor
aam
mov
add
fsubr
aas
jp
push
cmovb
incl
push
mov
sub
xor
loop
rolb
js
rcrb
call
add
movsl
insl
sbb
das
test
stos
lahf
jle
mov
dec
aas
pop
and
or
push
or
sbb
jecxz
je
and
mov
sub
sbb
cmc
sahf
fldcw
pusha
int
inc
or
fdivp
das
pop
test
push
call
adc
outsb
hlt
aas
ss
adc
es
or
into
sbb
call
xchg
add
adc
ss
popa
and
mull
mov
outsb
push
je
or
lea
inc
shrb
mov
outsb
fstps
cmp
add
inc
mov
add
mov
jns
mov
cld
add
adcb
cmp
mov
jno
jp
fadd
das
pop
inc
fcmovbe
test
fisubs
ret
sbb
adc
scas
sahf
xchg
lods
test
xchg
mov
inc
les
jg
sub
jmp
jns
add
ret
xchg
pop
cmp
lods
ja
js
jl
dec
nop
insb
cld
inc
in
int3
sub
xor
ds
fnop
xlat
jecxz
add
and
ljmp
loopne
adc
sub
adc
jp
mov
inc
sub
rolb
xor
jae
jbe
call
ret
push
cmp
das
mov
out
push
jo
sub
push
fisttpl
mov
cmp
cmp
or
adc
subb
inc
sbb
jno
rorl
xor
jl
sbb
in
pop
iret
mov
js
bound
push
add
mov
xchg
push
scas
add
fcmovb
inc
lds
jmp
lahf
ds
lock
jmp
xchg
cld
sub
fidivrs
sub
mov
call
pop
aas
cld
pop
movsl
jnp
push
repnz
jge
sti
add
jns
cmp
clc
dec
out
xchg
pop
sbb
loop,pt
fisubrl
dec
mov
push
or
mov
bound
xor
cmp
lds
mov
in
push
sbb
call
and
aas
or
sub
pop
mov
mov
mov
js
jne
cld
sbb
mov
movsl
pop
fists
mov
sbb
rcl
test
scas
or
nop
push
or
test
repnz
loopne
sbb
jl
xor
inc
mov
add
cmp
cmp
mov
psrld
aam
sbb
and
jl
jp
scas
sti
mov
mov
ds
mov
push
push
cmp
or
push
mov
cli
into
inc
sbb
xor
pushf
out
and
pop
jl
xchg
loopne
add
fbstp
mov
xchg
std
fcomps
jmp
pop
lock
cltd
mov
gs
loop
fmul
xchg
adc
jae
push
mov
xlat
mov
cwtl
mov
rcrb
fimuls
in
repnz
jle
adc
movsb
adc
mov
jne
and
hlt
jge
icebp
xchg
jo
into
mov
je
fildll
and
sbb
add
js
loop
mov
aas
aam
push
pop
mov
sbb
mov
test
inc
gs
popf
movl
adc
cli
call
js
add
cmp
ret
das
add
sub
dec
add
daa
push
push
mov
pop
bound
out
fs
loope
mov
imul
stc
sub
push
aas
and
stc
int3
cmp
orb
adc
stos
sbb
or
jge
add
xchg
icebp
je
outsb
jnp
mov
jb
push
pop
lods
mov
inc
add
cmp
xor
push
sub
lods
cs
sub
imul
dec
sub
fs
les
hlt
add
call
call
ss
adc
enter
and
bound
xor
and
mov
dec
xor
js
ljmp
sarl
js
lret
add
or
in
cmp
mov
int3
movsl
test
pop
sbb
pop
or
adc
aam
fsubrp
aad
inc
mov
shrl
adc
loope
jb
fsubrs
push
sbb
mov
push
xor
push
cmpsb
inc
pop
lcall
mov
scas
mov
push
push
cmp
inc
add
mov
cmp
aam
fisubl
mov
sub
jge
add
xchg
enter
hlt
loope,pt
ret
and
dec
push
push
dec
cmp
rcl
push
pop
add
cmp
jl
clc
dec
loopne
add
xor
fisubl
arpl
loope
mov
fwait
sti
into
add
jl
push
dec
dec
and
repz
add
pop
and
push
ret
sahf
fmuls
cmp
fisubrl
stos
shlb
inc
mov
aaa
insb
xchg
inc
sbb
pop
add
mull
xchg
je
hlt
or
push
cltd
or
imul
sti
popa
lock
mov
push
cmpsb
pop
and
inc
rolb
pop
mov
add
sarb
ljmp
out
repz
cmpsl
mulb
jno
inc
xor
clc
loopne
dec
xchg
mov
mov
sbb
andl
xor
inc
pop
mov
sbb
mov
xchg
jo
cmp
push
xchg
inc
lods
inc
push
popf
mov
test
xchg
or
adc
ja
mov
push
add
scas
add
lock
fisubl
fisubrl
loope
pop
ficomps
jge
sub
js
pop
mov
shrl
fucom
dec
movsb
icebp
xchg
add
popf
loopne
dec
cmp
mov
mov
sbb
cwtl
lods
lahf
xchg
mov
fwait
js
xor
clc
jle
test
and
jl
cmp
enter
cmpl
xchg
rorb
jo
cld
xchg
pushf
dec
cmpsb
inc
fidivs
sbb
adc
icebp
insb
mov
mov
daa
loop
movsb
shl
xor
imul
add
xor
mov
mov
cld
xor
pop
popf
sub
push
mov
fisubrs
inc
notl
mov
pop
rorb
push
ja
pop
test
add
mov
jo
inc
jmp
pop
mov
pop
sbb
jnp
movsb
cmp
rclb
xor
dec
loopne
add
outsl
test
mov
adc
mov
pop
xchg
or
or
xchg
in
push
into
xor
or
sbbb
aas
pop
pop
jge
and
jg,pn
loop
pop
push
mov
and
shrb
mov
mov
inc
xlat
rolb
mov
inc
add
mov
rorb
cmc
repz
in
pop
xchg
aam
aam
cmp
sbb
pop
jns
rorb
adc
lret
xchg
stos
pusha
add
xchg
cwtl
mov
and
lock
mov
mov
cmpsl
mov
push
mov
push
and
cld
jbe
jae
mov
add
repz
js
mov
shlb
xor
adc
aam
push
mov
lods
das
sub
inc
in
addl
or
shl
inc
xor
adc
pop
jge
push
cmp
pinsrw
cmpl
mov
ds
lahf
out
xor
xor
les
and
clc
and
ret
bound
daa
xor
push
xchg
insb
jge
xor
jo
loopne
xor
icebp
lods
xchg
sub
push
fwait
mov
lea
arpl
cs
out
xor
pop
rolb
test
sahf
sub
into
mov
adc
loopne
ret
je
fists
data16
or
hlt
jmp
hlt
pop
or
addl
adc
notb
stos
ret
inc
pop
jge
into
xchg
call
pop
ffreep
imul
cmp
in
fcomps
insb
lret
pop
xchg
orb
notb
xlat
add
mov
cs
cmc
inc
jge
pop
in
rcl
jmp
mov
lock
dec
addb
fisttpll
jge
std
xor
int
adc
clc
ror
sbb
icebp
std
ret
dec
mov
bound
xchg
inc
add
daa
lods
mul
ja
mov
je
sarl
out
stos
fsubrs
xchg
adc
and
clc
jae
stc
dec
inc
sarl
cmc
dec
pushf
mov
cmp
notl
movb
es
mov
mov
mov
pop
mov
lret
scas
push
mov
push
out
or
fsin
push
test
insl
mov
loope
push
adc
popl
cwtl
mov
push
js
mov
inc
rcl
mov
pop
in
mov
nop
jmp
xorb
push
pop
fsubs
callw
inc
dec
sub
sbb
outsl
loopne
xchg
sbb
pop
insb
cmpsb
rorl
fucompp
addr16
enter
mov
sub
mov
mov
sbb
lods
pop
and
notl
jne
add
lcall
or
adc
xor
and
icebp
loop
test
aad
lock
nop
jns
pop
bound
ret
cmp
sarb
sbb
or
ret
sahf
mov
fcomi
inc
xchg
adc
insb
cmp
loop
lea
dec
js
jecxz
in
nop
dec
lods
mov
push
dec
inc
lcall
cmpsb
mov
loop
les
pop
mov
bound
imul
cmpsb
cmp
pop
pop
lret
shl
mov
mov
push
lock
imul
mov
test
loopne
jg
ret
mov
sub
jo
inc
rol
decb
aas
mov
bound
inc
mov
xchg
cmp
clc
push
mov
xor
loopne
rclb
fiaddl
scas
pop
aam
loopne
cli
lahf
xchg
cli
dec
call
enter
iret
push
pop
popf
pop
cwtl
push
aaa
lea
pop
adc
cli
nop
out
jno
mull
mov
es
mov
roll
and
icebp
outsb
push
inc
xsaveopt
hlt
pop
int3
ffree
enter
and
and
mov
xor
push
or
push
iret
xor
push
out
out
xor
lahf
adc
iret
rcll
and
dec
arpl
sbb
push
aam
inc
jbe
xor
pop
mov
test
pop
xchg
sub
scas
pop
iret
lods
xchg
clc
or
icebp
mov
movsb
pop
xor
jo
test
cmp
in
pop
sbb
xchg
ret
ret
ficomps
test
jb
adc
jge
mov
mov
jg
mov
pusha
jno
loop
idiv
push
aam
in
repnz
clc
adc
push
sbb
fidivrs
scas
sub
sub
out
stos
outsl
inc
jp
dec
and
insb
sbb
jecxz
pop
rclb
cld
mov
jmp
mov
cs
jns
xlat
xorl
mov
or
pop
add
push
pop
aaa
push
sub
cli
loop
dec
cli
or
mov
sbb
dec
sub
sbb
icebp
shr
add
cld
cmpsb
out
xchg
popa
cmpsb
inc
push
movb
push
movsb
sbb
fimuls
push
movsl
pop
and
lods
fcmovu
inc
loop
inc
cmp
sub
pop
lahf
test
imulb
push
push
jno
push
dec
loop
and
sbb
mov
push
push
out
adc
sub
add
fsubrl
mov
inc
je
fmul
mov
or
jns
jl
adc
fisttps
cli
push
ret
jno
jl
hlt
shll
lods
js
shrb
xchg
mov
ror
and
faddl
sbb
sbb
inc
adc
mov
and
clc
jle
and
fisubl
and
inc
clc
ds
ss
push
sbb
fstl
lahf
xor
cmp
adc
cmp
xchg
loop
in
jo
xlat
out
std
lock
mov
jle
push
inc
pop
push
dec
mov
mov
fldl
pop
sahf
pop
cmp
or
loopne
fstps
fiadds
inc
arpl
ret
in
xor
jge
or
test
xchg
popl
fldl
ret
ficoms
pop
mov
pop
or
add
xor
adc
std
add
xor
leave
js
mov
jne
mov
push
loope
sbb
out
adcl
mov
lods
add
mov
mov
pusha
rcrb
loopne
cmpsl
sbb
pop
or
push
add
fcmovnbe
cmpsl
xorb
push
and
jle,pn
jmp
shr
fidivrl
mov
pusha
adc
iret
dec
inc
nop
adc
inc
push
das
add
pop
jmp
loope
pop
add
std
icebp
popa
xchg
mov
test
or
push
jge
xchg
roll
mov
sub
jbe
push
jl
sbb
mov
lret
or
mov
shl
cltd
add
cli
loope
les
pusha
scas
shrb
dec
cmp
js
lock
divb
loope
rol
push
mov
cmc
loopne
jle
mov
fidivrl
jo
lods
pop
das
xchg
mov
xchg
push
addb
cmpsb
cmc
loopne
ljmp
push
cld
mov
inc
jo
pop
addr16
mov
ds
rcrl
sarb
bound
repnz
loopne
xchg
and
loopne
loopne
inc
dec
cwtl
mov
cmp
sbb
dec
sahf
mov
out
xchg
adc
xchg
data16
imul
scas
pop
mov
xchg
push
pusha
pushf
rorb
in
jl
and
jmp
add
sbb
sarl
loopne
jecxz
lock
push
xchg
out
sub
andl
cmp
shlb
rorb
loopne
sub
test
jbe
or
sbbl
push
push
mov
test
jae
push
out
addr16
and
popf
aas
xchg
imul
pop
inc
cmpsb
js
imul
in
sbb
sarl
add
dec
adc
push
pusha
or
out
push
cltd
jbe
lock
inc
pop
clc
inc
stos
inc
pop
das
insb
jl
jecxz
aad
pushf
dec
jmp
xor
popf
inc
insl
or
sbb
push
ds
jge
sar
imul
jp
pop
fs
testb
fabs
lds
cmp
les
jl
pop
sbb
shl
out
femms
imul
mov
jge
icebp
cmp
pop
push
jp
mov
enter
adc
jo
ds
adc
add
inc
jecxz
pop
xor
inc
mov
add
mov
ja
inc
or
cmp
push
subl
and
cvtpi2ps
jmp
rol
xchg
cld
xchg
loopne
jo
jge
jp
cmp
insb
orl
mov
push
mov
aas
ds
movsb
and
mov
inc
ljmp
push
push
or
jno
into
dec
sarb
cmp
or
outsb
scas
pusha
or
xor
cmp
sbb
mov
pop
xchg
test
xchg
xor
sbb
loopw
mov
pop
cmpsb
fisubrs
cmp
insb
aas
ds
mov
test
ret
mov
pop
lahf
push
test
xchg
js
dec
inc
jl
daa
loop
jge
roll
mov
push
sbb
cmp
mov
xchg
mov
cwtl
mov
cmpsl
inc
ds
aam
pusha
jb
clc
push
and
cmp
out
push
cld
add
ror
mov
mov
mov
mov
mov
jo
ror
clc
sbb
rolb
push
std
hlt
xchg
loop
cmp
cli
jge
cwtl
and
loope
rcrb
insb
sbb
aam
insl
mov
sti
and
clc
repnz
fisubs
cmc
sbb
jbe
pop
xchg
jnp
or
xor
stc
pop
movsb
icebp
fsub
fimull
movsl
push
xor
movsl
fdiv
enter
pop
sub
cmp
and
xor
icebp
bound
inc
add
xchg
mov
mov
int
and
mov
test
clc
push
shrb
mov
negl
test
or
ret
int
ret
mov
arpl
lea
and
loop
int3
xor
shlb
add
sub
pop
test
stc
sarb
cvttps2pi
jmp
mov
ljmp
push
jp,pt
in
div
xlat
int
pop
test
jecxz
fistl
pushf
cmp
daa
mov
or
xor
fidivrl
mov
fisubrs
push
ljmp
in
hlt
leave
sbb
jmp
xor
sub
sbbl
dec
mov
mul
fcmovnbe
imul
out
enter
int
clc
lods
notl
push
mov
sbb
jl
cmp
mov
sub
or
adc
pop
pop
or
mov
pop
cmp
dec
js
xor
or
xchg
test
sbb
jno
scas
push
mov
or
push
mov
jmp
adc
mov
es
clc
dec
mov
xor
rcll
ss
js
jle
jp
and
push
es
cmpsl
jo
sbb
xchg
out
inc
cli
roll
inc
adc
ret
push
jl
out
test
sahf
loopne
cli
loope
pushf
insl
jp
out
cmp
or
xchg
pusha
cwtl
loope
sub
cmpsl
and
shrb
xchg
xlat
das
repnz
ja
xchg
hlt
mov
mov
jnp
test
sub
xchg
insb
insb
ret
sub
mov
int3
test
xor
sbb
xchg
movb
xlat
mov
xlat
cmp
mov
sahf
sub
push
or
cwtl
movb
jp
xor
imul
cmp
jbe
roll
js
xchg
je
les
mov
or
mov
js
scas
ffreep
pop
movb
and
pop
xor
mov
cmp
cmp
aad
pop
sub
sub
cmpsl
nop
dec
push
jl
jbe
roll
jo
xor
repnz
loop
and
in
mov
dec
mov
xorb
test
ja
jecxz
cmpsb
andb
jnp
cmpsl
dec
xor
je
scas
pop
sti
iret
push
dec
mov
in
shll
cmp
xor
hlt
lret
jb
push
xchg
lret
mov
std
jp
loopne
inc
pop
ss
shll
sbb
pop
dec
ficomps
clc
hlt
in
divl
cld
or
lahf
sahf
adc
mov
jp
hlt
das
add
inc
pop
addb
pop
sbb
pushfw
inc
cmpsl
dec
cmpsb
js
mov
fidivrs
in
rclb
adc
pop
pop
cld
orb
push
ret
rolb
push
aad
mov
pop
inc
inc
clc
or
add
pushf
mov
pop
out
cmpsl
fsubl
scas
mov
xor
les
ja
cmpb
xchg
addl
aaa
imul
inc
lahf
add
ljmp
xchg
cs
hlt
loopne
lock
cwtl
inc
jg
xor
fiadds
or
stos
mov
std
push
push
idiv
pop
mov
leave
push
mov
lcall
call
mov
pop
cmp
cmp
xor
mov
pop
and
dec
push
testl
les
and
push
rcrl
cs
push
imul
xorl
push
and
mov
mov
xchg
sub
lods
sbb
inc
push
push
push
sarl
adc
mov
mov
dec
testb
lahf
mov
jcxz
shlb
xor
or
xor
shlb
push
fsts
pop
jl
pop
es
mov
add
in
lret
clc
icebp
cmp
cmpsl
andb
testl
dec
push
mov
push
jmp
pop
cwtl
pop
mov
add
sbb
dec
in
inc
popl
loopne
add
xor
ret
add
divb
test
sahf
xor
shll
add
mov
mov
push
loopne
scas
mov
fsts
xlat
pop
out
rcr
mov
push
cld
enter
hlt
lock
jo
push
bound
mov
idiv
xor
pop
pop
xchg
bsf
pop
loope
adc
pop
les
cld
bound
cmp
sub
enter
icebp
icebp
roll
adc
hlt
push
push
js,pt
xchg
lock
jne
cli
je
jle
mov
jns
inc
jae
mov
daa
cli
mov
jmp
or
and
adc
repnz
and
or
and
sbb
ret
shll
mov
inc
js
push
or
pop
lret
adc
les
test
mov
push
ret
rcrb
addr16
adc
xchg
sub
dec
ret
pop
or
jbe,pn
sbb
and
xor
mov
rcrb
mov
enter
xor
jns
cmc
jnp
xor
lcall
sub
in
mov
or
inc
mov
stos
sahf
push
lahf
pop
pop
enter
js
cmp
notb
movsl
cmp
mov
push
and
xor
ss
inc
push
sysret
mov
packuswb
mov
ds
mov
push
das
push
xchg
cmc
jecxz
or
cmpsb
mov
stos
mov
or
push
push
sub
inc
aam
out
mov
jecxz
lahf
jo
dec
push
hlt
jae
rolb
fcmovne
xor
out
xchg
mov
loopne
lods
xor
idiv
lock
xchg
sub
sub
dec
loope
hlt
xchg
mov
js
les
int
cld
pop
loope
xchg
adc
mov
cmp
adc
sub
add
or
lock
mov
hlt
cmpsb
push
iret
out
sti
inc
shlb
dec
jg
dec
jecxz
push
imul
adc
and
mov
pop
mov
mov
xchg
sub
pop
dec
mov
or
cwtl
repz
inc
jmp
ljmp
push
sahf
mov
iret
and
adc
sbb
push
loopne
stos
and
pushf
inc
jl
dec
xchg
aam
fwait
js
jo
and
testb
inc
cmpl
clc
pop
mull
repnz
and
arpl
hlt
inc
aas
orl
notb
fwait
dec
cwtl
fstpt
or
call
sub
je
lock
sub
data16
test
andl
xor
lods
je
mov
jle
js
ljmp
test
arpl
pop
outsl
int3
add
inc
fcomi
rol
jo
xor
adc
cmpsl
out
xor
hlt
movsl
jecxz
ret
sub
std
jmp
pop
pop
daa
into
sbb
jp
andl
pop
mov
sbb
gs
fwait
lock
jg
xor
loopne
out
ja
psrad
cmp
or
add
pop
mov
lock
add
inc
test
mov
jecxz
mov
push
jb
dec
dec
sbb
test
inc
out
lea
test
out
fcomp
std
mov
psadbw
cmp
sbb
in
mov
fs
dec
clc
xchg
rclb
sbb
pop
rolb
js
out
sti
push
inc
mov
jge
xor
aad
xchg
loopne
mov
cmc
add
adc
pop
adcl
repnz
lock
mov
add
adc
shlb
push
push
and
je
imulb
sti
cmc
adc
xlat
outsb
lret
ljmp
sar
mov
and
xor
dec
mov
je
das
adc
sub
pop
scas
rorl
inc
addb
fucomip
cmp
dec
mov
xchg
jp
or
mulb
pop
inc
cli
pop
fs
fdivs
mov
orb
or
bound
mov
cmp
or
cmp
push
les
lods
inc
pop
mov
filds
or
xchg
push
ds
dec
lock
pop
lods
mov
ss
loop
clc
adc
repz
and
xor
into
sub
mov
xchg
cli
es
mov
cmp
les
xor
dec
push
cmp
adc
lock
mov
out
jmp
xorb
mov
sub
adc
xor
cmpsl
imul
mov
dec
mov
inc
sub
add
cli
jbe
mov
hlt
pusha
icebp
jne
loopne
xor
shl
mov
in
cmp
popf
aam
mov
es
lret
jle
aas
add
mov
cmp
fwait
enter
mov
mov
pop
or
add
lods
push
jbe
ljmp
adc
xor
lret
call
dec
inc
jg
lods
lea
xorl
in
push
push
dec
jne
rcl
dec
call
push
adc
ret
cmp
inc
pop
mov
add
xchg
mov
xor
add
ret
mov
dec
ds
icebp
xchg
aam
incb
mov
pop
cmpsl
insb
clc
mov
adc
lahf
cmp
mov
pop
sahf
sub
sub
xchg
dec
push
pop
jecxz
daa
mov
cmp
aas
ljmp
mov
js
call
rclb
mov
aad
popf
xchg
and
adc
std
adc
testb
scas
in
pushf
mov
pushf
leave
jns
das
cmp
clc
push
adc
mov
fisttpll
inc
mov
pop
fs
push
add
adc
dec
push
negl
aam
inc
dec
into
enter
ljmp
mov
test
lods
std
sbb
inc
adc
call
add
fbld
sbb
fldt
movntq
movsl
ret
out
call
fwait
adc
bound
lock
lahf
into
lcall
jae
pop
icebp
cli
mov
sub
pushf
sbb
data16
popa
fisubrl
sbb
icebp
loope
pop
je
pop
hlt
mov
jmp
cli
jmp
rclb
mov
add
ret
mov
lahf
test
jmp
fisttpll
adc
daa
aas
lea
sub
jnp
push
ret
xlat
pop
inc
xor
pand
mov
sar
loopne
stos
and
icebp
cmp
es
jecxz
idivb
out
xchg
and
cmc
sbb
xor
insb
fistps
dec
pop
cmp
xor
mov
lds
jbe
loope
and
or
ds
mov
xor
push
and
xchg
dec
aas
loop
movsb
mov
lret
ljmp
inc
out
out
mov
rolb
and
lock
fiaddl
push
fmull
scas
iret
movl
mov
inc
std
pop
jmp
in
shrb
push
sahf
cli
push
out
and
xchg
sbb
stos
jo
test
or
into
pop
sub
cs
mov
icebp
mov
adcb
jp
shll
insl
pop
flds
push
jg
adc
and
or
loope
scas
xchg
xchg
jnp
or
stos
xchg
cmc
jbe
pop
faddl
jg
push
sbb
icebp
ljmp
cltd
push
inc
call
cmp
jne
mov
jp
mov
cmp
xor
das
or
jge
rorl
and
pop
pop
cs
xchg
aaa
push
mov
lods
push
ret
jl
add
mov
pop
pop
bound
subb
adc
pop
cld
dec
pop
rorb
scas
lods
or
inc
rclb
cmp
orl
es
push
clc
sbb
adc
jle
ljmp
das
test
ficoml
mov
fs
test
jp
fld
lds
mov
sbb
cli
js
mov
jg
pusha
mov
es
orb
std
push
xchg
xchg
lods
loopne
sbb
fmuls
jmp
mov
inc
and
cmp
nop
scas
push
rcrb
xor
aam
cmp
icebp
ret
lret
nop
and
insb
lea
push
xchg
cli
cmp
stos
bound
dec
jo
jb
or
jecxz
lods
push
mov
mov
js
dec
or
sti
js
adc
das
push
and
xor
lock
pop
add
xchg
clc
add
inc
imul
and
js
clc
ret
jns
mov
les
mov
mov
pop
pop
cmc
cmp
jmp
sarb
and
fldenv
push
insl
add
out
cli
dec
sbb
mov
add
fisubs
jl
add
mov
es
lea
or
dec
icebp
or
lock
fwait
add
xchg
mov
ret
lock
test
pop
negl
fadds
subb
add
arpl
lcall
and
imul
pop
push
sbb
sbb
outsb
das
xor
je
sbb
aam
and
popf
adc
daa
adc
gs
call
lods
loopne
cld
push
push
std
lock
ret
adc
cmc
loopne
mov
sarb
and
inc
arpl
ja
hlt
sbb
rcl
stos
insb
sbb
ret
jg
mov
js
notl
popa
in
sub
hlt
xchg
js
mov
and
add
movl
cmc
lret
movsl
xchg
movsb
js
inc
mov
jp
jmp
pop
or
fiaddl
pop
dec
int
dec
dec
xchg
xchg
ret
adc
js
ljmp
dec
and
and
sub
jge
dec
push
add
imul
lods
cmc
test
movsl
xor
pop
jno
cli
dec
mov
mov
dec
pop
or
jl
testb
jge
out
aaa
jno
stos
iret
scas
inc
rolb
aas
pop
or
into
nop
ja
cmp
pop
jg
fwait
leave
pop
cld
pusha
fdivrs
pushf
xchg
aam
xor
pushf
leave
ret
cmpsl
mov
pop
divps
adc
add
pop
add
jecxz
rclb
sbb
dec
pop
bnd
mov
nop
mov
movsb
call
mov
rcrb
out
xor
or
aas
inc
adc
je
clc
xchg
je
push
adc
ret
jno
jb
xor
sub
pop
or
jg
sub
sbb
pop
cmp
scas
cmc
pop
pop
hlt
into
mov
dec
aad
jle
mov
lret
jge
jmp
out
mov
xchg
imul
ds
lock
js
mov
loop
mov
xchg
rcl
dec
lahf
cli
and
jp
jecxz
inc
lcall
lock
xorl
pop
test
les
cmp
push
adc
and
inc
jno
or
add
insb
insb
aas
cmp
xor
bound
sbb
jle
dec
add
xchg
cmp
sbb
push
inc
out
dec
adc
jge
xchg
pop
int3
sbb
js
stos
cmp
in
out
mov
dec
inc
jp
mov
out
lods
sbb
xor
xor
scas
adc
shll
std
jle
cwtl
jbe
int3
iret
clc
mov
fprem
pop
data16
cmc
inc
jecxz
mov
insb
mov
loop
popl
jmp
xchg
xor
inc
les
mov
in
inc
loope
mov
in
ret
orl
sbb
lods
stos
sbb
inc
push
xchg
movsb
jns
in
jno
aas
lret
xchg
lcall
sti
add
push
subb
dec
pusha
pop
or
lds
pop
cli
loopne
sub
add
cwtl
out
mov
or
ret
outsl
and
arpl
or
ret
shll
jmp
lds
pop
cmp
shrl
rclb
fiadds
fistpll
imul
xchg
push
insb
inc
mov
xor
imull
mov
sub
loopne
clc
pop
fldcw
std
js
mov
fidivrl
push
dec
pop
cmp
xchg
arpl
sbbl
mov
sahf
imul
ja
xchg
xor
loope
xor
pop
outsb
filds
sbb
jno
clc
adc
test
movsl
mov
mov
push
out
xchg
sti
push
lret
pop
in
pop
out
mov
and
mov
mov
adc
add
pop
inc
nop
arpl
loopne
fldenv
fildl
or
nop
jl
js
push
xorl
jo
dec
dec
mov
mov
aas
or
inc
inc
fildll
or
cmp
fidivrs
je
lds
mov
dec
loopne
cld
clc
sub
into
sub
add
mov
or
inc
jl
ret
push
push
cs
lahf
push
pop
fisttps
jl
jge
gs
clc
stc
pop
loopne
inc
ret
cmpsb
sub
ds
lahf
adc
mov
test
sub
rorb
xchg
fs
shlb
pop
inc
rolb
xor
mov
lock
jg
jnp
mov
cli
push
out
enter
in
ljmp
adc
mov
fs
inc
andl
mov
cmp
pusha
xchg
movsl
inc
pusha
and
rorl
push
add
cld
movsb
int3
in
xor
packsswb
ljmp
lods
adcl
js
mov
imul
ds
pusha
adc
cmpb
push
jbe
popl
repnz
adc
inc
in
mov
inc
cs
jmp
and
pop
les
or
sti
and
pop
add
addr16
sub
and
pop
cs
xor
ret
cmp
loope
or
sbb
fsubrs
lds
or
xorb
push
outsb
in
lcall
xor
stc
loopne
push
jo
fsubs
pop
xor
xchg
stos
or
ds
sahf
xorl
gs
aas
mov
mov
cli
add
inc
faddl
mov
mov
dec
or
xor
aas
jmp
adc
cs
mov
jbe
cmp
inc
daa
xor
pop
arpl
pop
sbb
outsb
mov
daa
dec
xlat
cmpsb
mov
mov
inc
insb
popl
xor
inc
test
insb
push
xor
jo
nop
lcall
aam
sti
adc
jb
js
add
rolb
scas
add
pop
stos
lods
sbb
adc
mov
and
sahf
lcall
jp
sub
shl
push
or
fisttps
sub
loopne
cmp
push
push
push
stos
nop
add
jmp
cmp
pusha
push
mov
shlb
jb
icebp
rol
pop
stc
mov
sbb
mov
clc
pop
mov
aad
js
push
ret
dec
outsl
jmp
mov
das
outsb
mov
orb
fsubl
mov
test
xchg
and
mov
xorb
and
fs
jne
inc
fnstcw
shll
and
shlb
lock
rcll
adc
cld
push
cld
cmc
adc
cmp
push
mov
movsl
jnp
sbb
in
add
dec
dec
fwait
daa
icebp
roll
cli
cmp
out
loope,pn
xchg
sbb
icebp
sbb
call
outsb
jecxz
test
pop
ret
push
lds
shrl
cld
xchg
push
lret
pop
ficomps
jne
int
cwtl
mov
jle
pop
push
push
sbb
xlat
and
mov
and
cmp
fiaddl
push
fbstp
fists
test
jae
nop
jno
imul
pushf
xchg
dec
push
sbb
clc
push
or
or
std
mov
lahf
or
cmpsb
xor
add
mov
test
jmp
mov
sbb
nop
ret
pop
mov
into
xorb
mov
test
mov
push
pop
xchg
and
bnd
jnp
mov
ds
ror
inc
mov
filds
aad
in
cmp
push
pop
aam
pop
or
jne
lock
loop
and
adc
inc
jge
jmp
je
stos
out
pop
and
mov
xchg
scas
inc
pop
jno
vmovups
pop
mov
mov
pop
mov
mov
mov
cmpsl
adc
out
fidivl
add
enter
push
addb
out
sahf
and
das
icebp
add
push
ja
mov
inc
pop
push
pop
je
lea
loope
and
repz
push
out
add
xor
adc
jecxz
mov
cmpl
fsubrs
das
push
add
push
mov
std
and
shlb
rol
pop
pop
pop
orl
or
add
cmp
push
cs
out
xor
push
stos
js
jle
and
cmc
insb
testl
xchg
jmp
js
rol
idivl
clc
push
xorb
adc
rclb
test
mov
loop
rcrb
das
mov
adc
fbld
lock
xchg
mov
into
nop
push
iret
rclb
int
push
movsb
ss
out
movl
sbb
mov
or
xor
loopne
test
xchg
push
and
ljmp
adcb
jle
mov
mov
lahf
inc
jge
bound
xor
pusha
out
or
sub
sahf
adc
mul
std
pop
fcomps
imul
sub
out
mov
out
daa
jo
sbb
push
cltd
cmp
xchg
lret
nop
push
clc
push
xchg
push
lahf
mov
insb
or
jecxz
shrb
ljmp
add
cwtl
jb
xorb
push
jecxz
mov
test
cmpsl
mov
fisubs
mov
fdivr
mov
fisubs
imul
dec
adcl
loop
outsb
cwtl
push
lock
pop
cld
adc
inc
popf
cmp
rorl
clc
push
cmpsl
test
push
rorb
lock
inc
cmp
or
adc
roll
dec
or
inc
das
sub
in
jl
ficomps
movsw
adc
ret
scas
dec
les
jo
inc
adc
call
int
xchg
inc
lahf
test
pop
aas
sub
lcall
jecxz
imul
test
lcall
push
pop
jg
lahf
push
dec
stos
mov
mov
iret
out
pop
dec
cmpb
mov
sub
imul
sti
push
lock
daa
cmpb
cmp
js
adc
decl
lea
cmp
push
jecxz
mov
inc
imul
sbb
or
stos
in
movsl
je
pop
inc
xor
ljmp
popf
enter
jae
pop
cmp
testl
push
or
lods
addr16
push
shl
rorl
jb
jne
loop
and
filds
and
insb
xor
mov
add
xor
popa
cmpsl
pop
adc
ficomps
xchg
or
sbb
loopne
hlt
lret
add
mov
sbb
faddl
movsl
inc
add
mov
je
pusha
add
mov
aam
das
arpl
and
mov
out
sbb
stos
jnp
inc
jl
sbb
fldl
rolb
stc
mov
mov
push
es
mov
sbb
lds
outsl
mov
das
mov
test
movsb
cmpsl
mov
mov
add
push
mov
in
lcall
lahf
xor
clc
cmpsb
sahf
cld
inc
int3
jns
and
lock
xchg
inc
and
or
mov
loope
adc
out
add
add
cmp
rorl
pop
sub
or
push
into
nop
fmul
fbld
mov
es
addr16
push
mov
cs
nop
add
shlb
dec
in
xor
outsb
outsb
les
popa
out
or
stos
das
ret
lock
fisttpll
shl
int3
aam
int3
mov
loop
add
daa
lcall
jl
add
push
insl
jl
inc
sub
ljmp
rclb
mov
loope
mov
lock
mov
ja
das
and
push
xor
mov
cmpsl
test
push
pop
je
mov
outsl
call
mov
scas
xor
sub
xor
and
and
adc
mov
les
jmp
add
or
add
nop
jmp
sti
lock
mov
sbb
ja
rcll
lock
xchg
lcall
push
add
hlt
test
mov
cld
icebp
in
punpckhdq
roll
cmp
pusha
sbb
sbb
jge
pop
aas
mov
js
and
sar
sbb
adc
fnstenv
mov
xor
jle
jp
sbb
in
cmp
xchg
mov
bound
xchg
sub
push
and
sbb
mov
lods
jge
inc
cmp
sub
int
lea
ja
loope
mov
mov
fs
xor
pop
std
jle
push
adc
mov
jmp
scas
and
jmp
xor
mov
mov
ret
cmp
lock
loopne
jne
pop
xchg
jg
jp
imul
je
bound
pop
iret
cs
out
loope
in
loopne
xchg
mov
push
mov
rol
bound
repz
push
sbb
inc
or
cmp
mov
pop
cs
adc
cld
loop
int
adc
adc
fidivrs
inc
jle
xor
pop
andb
or
lret
ja
loop
dec
push
into
insb
pop
shlb
insb
call
add
repnz
pop
sub
push
push
cvtps2pd
mov
fcomi
xchg
and
or
jmp
mov
fwait
jbe
scas
into
push
adc
sbb
sub
cltd
xor
cld
and
sbb
mov
cmc
fs
scas
mov
xor
addr16
lock
or
push
test
jge
outsb
and
cmp
ljmpw
add
or
outsb
mov
in
add
arpl
jb
or
push
xor
icebp
es
push
mov
cmp
mov
cmp
loop
sbbb
out
xor
imul
push
push
mov
lret
push
scas
sbb
adc
xchg
fdivp
ret
push
or
lcall
icebp
and
xor
fs
outsb
xorl
bound
clc
stc
fildl
lret
cmp
push
clc
push
inc
ret
jecxz
inc
lea
inc
clc
and
xor
xchg
popf
cmc
dec
loop
add
sub
cld
adc
jle
fcoml
dec
mov
femms
xor
jecxz
les
cmc
loope
sti
ljmp
fistpll
dec
cltd
popa
sbb
push
jp
outsb
dec
add
ret
jge
insl
scas
das
push
push
ja
and
mov
and
jge
icebp
movsb
fldl
adc
dec
and
ds
sbb
cs
loop
pop
pushf
cltd
push
push
cs
jnp
leave
aaa
xchg
int3
call
jp
mov
bound
fnop
sub
rol
jb
pop
inc
cld
inc
loopne
mov
push
nop
fcompl
mov
ja
jmp
movsb
xor
lea
les
push
lea
fisubl
add
inc
inc
sbbl
xchg
cmp
cmp
gs
call
dec
sbb
sahf
dec
mov
in
cmpsl
ds
pop
add
or
hlt
and
rcrb
add
mov
nop
mov
cwtl
and
jb
mov
in
pop
cwtl
push
imul
and
out
cmpb
test
out
pop
sbb
loop
dec
and
mov
jl
jle
add
rcrl
iret
add
jbe
pop
pop
cmpsb
js
shlb
inc
loopne
dec
scas
mov
loop
mov
aaa
in
aaa
decb
es
andb
cmc
cmp
dec
ret
lret
insb
in
aam
pop
adc
out
and
enter
or
jns
bound
pop
mov
icebp
rcll
fimull
push
sub
test
dec
jo
cmpsl
push
and
mov
ret
icebp
clc
sarl
or
rcl
inc
aam
pop
dec
loope
jl
hlt
mov
dec
dec
js
mov
pop
add
push
test
xor
fs
ja
call
sahf
loop
adc
in
movsl
add
push
jg
xor
lods
push
das
push
fistpll
in
test
call
sbb
add
or
daa
fidivrs
inc
cli
je
jmp
aas
lock
pop
cmp
inc
add
mov
popf
inc
mov
in
clc
fsubrp
xor
fbld
adc
ficoml
icebp
jp
jg
lock
insl
fwait
sub
cmp
xchg
sbb
call
adc
out
lods
xchg
bound
mov
mulb
stc
inc
push
mov
ds
mov
sub
jmp
cmpsb
scas
mov
cmc
mov
push
inc
mov
popf
cmp
test
mov
push
sbb
cmp
sub
xchg
out
and
scas
push
dec
ss
pusha
xor
pusha
ja
jmp
stos
mov
inc
shrb
push
pop
or
cmp
roll
cmp
sbbl
inc
sbb
test
xchg
add
push
mov
xor
scas
mov
or
push
jge
lock
sti
hlt
jmp
or
stc
test
xchg
cmp
dec
ret
xor
hlt
div
adc
sub
mov
test
call
idivl
push
popf
xchg
dec
out
dec
mov
dec
pop
mov
insb
cmp
sub
lods
arpl
popl
repz
dec
mov
cmp
or
adc
loop
outsl
rolb
mov
cmp
xor
mov
dec
aaa
cli
js
inc
and
cmp
jae
inc
loopne
pop
fisubs
mov
and
push
andl
push
cltd
cli
cmp
jb
loop
movsl
pop
mov
test
jle
jl
xchg
or
jo
jb
dec
rcl
mov
add
sahf
lods
fld
mov
fwait
sti
mov
pusha
loope
push
push
jbe
mov
nop
and
fsubl
js
pop
sbb
adc
aad
inc
push
pop
notb
test
xor
inc
imul
jne
xlat
xor
rolb
movsb
dec
arpl
cwtl
dec
inc
clc
dec
jge
or
std
outsb
test
inc
mov
jl
nop
and
sti
xchg
add
pop
cmpsb
js
push
adc
dec
sub
mov
cmpsb
sahf
pusha
sbb
push
cmp
iret
push
pop
sahf
fisubl
lock
adc
sub
mov
inc
inc
loopne
pop
pop
dec
out
xor
xor
and
lds
aas
mov
mov
mov
fadd
fcmove
sub
push
jle
sub
push
dec
es
pop
ja
cmc
loope
mov
popa
adc
jnp
mov
std
clc
pusha
or
jl
sub
push
arpl
je
cmpsl
and
mov
aaa
cmp
pop
mov
and
adc
orb
maxps
push
imul
inc
xchg
cmp
jp
cli
out
mov
loopne
jae
add
add
pop
xor
mov
mov
jle
mov
sti
ret
dec
imul
lods
sti
mov
mov
icebp
sub
and
and
push
cmp
js
test
cmp
jecxz
daa
adcl
dec
mov
out
cld
dec
lock
mov
ljmp
pop
lods
adc
comiss
xor
sbb
add
and
into
enter
jmp
mov
fcmove
xor
bound
sbb
lret
lea
pop
fbld
inc
adc
jmp
rcrb
add
stos
push
push
insl
insb
loopne
lock
push
mov
inc
adc
pusha
jge
in
imul
xchg
mov
sbb
sub
repnz
jl
enter
add
pop
pop
adc
aam
jp
loopne
adc
out
inc
std
mov
les
mov
enterw
icebp
es
pushf
sbb
cmp
iret
hlt
jo
adc
dec
mov
jmp
js
fwait
and
cmp
xchg
xchg
mov
xchg
std
mov
scas
sub
push
bound
or
roll
test
push
mov
fs
sub
pop
cs
dec
enter
cs
lock
push
xor
push
add
negl
pop
xor
pop
add
and
call
cmpsb
xlat
lret
js
fcmovb
push
cmp
dec
loope
add
push
rcl
rcll
cli
lock
inc
js
pop
js
repnz
xchg
loope
hlt
cmpsb
loop
xor
ret
inc
jmp
mov
push
cld
fidivrl
insb
add
daa
jmp
xchg
jge
cmpsb
hlt
push
add
pushf
enter
push
cmp
ss
jbe
je
xchg
push
push
adcl
mov
or
hlt
mov
clc
loopne
test
mov
add
into
mov
mov
clc
repz
adc
repnz
mov
lock
jnp
and
ret
jbe
mov
xchg
cmp
and
jge
add
inc
xor
jbe
sahf
stos
subb
or
sahf
xchg
and
ret
dec
sub
dec
or
push
fidivs
in
add
lds
jbe
add
fildll
pop
push
and
sub
adc
stc
dec
push
leave
push
mov
cltd
xor
out
xor
xchg
imul
and
xor
aas
pop
push
mov
test
ret
fsincos
cmp
ret
cmp
int3
add
cmp
rorb
and
sbbb
sarb
rclb
leave
push
xchg
sarb
hlt
shlb
rolb
aaa
sahf
dec
and
fcmovbe
push
notb
add
fsubs
rcr
sarb
sarb
aam
adcb
cli
add
and
inc
mov
lcall
pop
push
sub
and
mov
js
fidivrl
and
dec
imul
cld
pop
ljmp
lods
sahf
inc
and
pop
dec
cmp
mov
sahf
dec
repz
add
inc
outsb
lods
mov
arpl
ret
xchg
pop
fucomip
sahf
jmp
adc
cmp
mov
jmp
stos
rcl
sti
jns
fiadds
sahf
or
bound
dec
ffreep
add
mov
sub
out
insl
sub
add
sub
jbe
pop
repz
out
mov
push
inc
ret
mov
or
jecxz
inc
fisubl
inc
lahf
jae
out
mov
dec
out
push
sahf
and
jbe
test
and
sahf
movsl
adcb
das
push
inc
xor
in
aad
mov
movsl
lea
pop
jbe
mov
negl
in
int
mov
popf
jbe
sahf
or
out
bound
cli
mov
lret
ds
and
inc
mov
or
mov
lods
imul
test
jno
push
shlb
sbb
jl
mov
es
stos
outsl
pop
subb
xchg
imul
mov
loopne
xchg
leave
push
mov
mov
mov
xor
out
sahf
sbb
mov
mov
cmpsl
subl
push
lea
inc
clc
push
push
les
icebp
hlt
jecxz
scas
nop
nop
adc
fadd
sub
dec
shlb
xor
cmp
mov
hlt
clc
mov
or
sub
xor
cli
mov
jg
shlb
or
adc
mov
ret
repz
subl
jp
push
add
sub
orl
sar
call
loope
js
les
scas
sub
fimuls
bound
adc
test
xchg
js
xor
mov
loop
inc
rolb
stos
sbb
xor
adc
pop
mov
sti
cs
insl
scas
test
cmp
xor
testl
and
scas
pop
divb
mov
mov
or
push
clc
xchg
mov
clc
push
jge
lock
jle
sbb
cmp
rorb
sbb
or
sbb
bound
or
inc
jmp
cmp
push
out
add
pop
push
xchg
push
xchg
cmp
mov
stos
mov
aam
arpl
jge
or
xor
or
addr16
or
stc
inc
cltd
cvtpi2ps
mov
jae
mulb
insb
pusha
aaa
shll
es
pop
hlt
loopne
ret
add
scas
lahf
mov
das
cwtl
mov
ret
test
lods
dec
leave
jge
clc
enter
push
lret
jle
inc
movsb
out
loopne
or
mov
inc
or
cmpsl
enter
adc
jo
arpl
aaa
fcom
cmp
pop
inc
movb
ljmp
dec
andb
mov
xchg
mov
inc
cmpsl
jl
clc
mov
rsqrtps
mov
jne
bound
and
lock
or
call
test
fsub
bound
add
mov
add
cwtl
bound
dec
push
ja
xchg
movsb
pop
sub
mov
adc
sbb
rcr
cld
aas
cmp
inc
movhlps
dec
mov
or
cwtl
loop
xchg
lret
ljmp
es
add
sbb
lret
xor
aam
push
or
and
out
mov
movsl
jnp
cmp
clc
ficoml
mov
adc
jecxz
add
arpl
xchg
sbb
adcl
mov
fdivrp
icebp
scas
shl
repnz
dec
mov
pop
sbb
jae
and
inc
pop
pop
sub
jecxz
push
sub
icebp
popa
fwait
sub
dec
fwait
out
clc
bound
out
push
inc
ret
clc
push
pop
frndint
push
hlt
movl
mul
mov
cwtl
mov
out
jle
jmp
cmpsb
inc
enter
mov
pop
xchg
jbe
mov
pop
mov
lretw
rorb
xor
loope
sbb
adc
mov
add
sub
outsb
ret
xor
icebp
jecxz
mov
xor
lock
mov
cli
mov
cmp
test
clc
dec
mov
inc
jecxz
jo
push
enter
mov
mov
inc
push
push
orps
aaa
add
inc
lods
outsl
cmpsl
pop
jg
dec
sub
lods
or
or
pop
arpl
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
or
push
je
sub
in
push
ficoml
add
ss
mov
push
rol
add
and
pop
push
dec
bound
arpl
pop
sbb
mov
shl
jae
insl
sbb
and
sbb
jb
popa
arpl
add
aas
mov
add
inc
and
clc
jmp
neg
and
adc
dec
push
in
int
pop
xchg
xchg
gs
ffreep
loopne
jno
out
add
aas
or
mov
add
cmp
je
test
push
notrack
paddq
daa
daa
daa
ror
enter
daa
daa
call
daa
daa
mov
daa
daa
daa
test
mov
daa
cwtl
in
nop
daa
daa
daa
daa
mov
clc
hlt
xchg
daa
daa
daa
mov
xchg
or
aas
jl
js
loope
dec
je
add
mov
outsb
call
outsb
add
subb
add
xor
ret
in
jbe
push
jo
insb
punpckhbw
in
pusha
pop
pop
push
mov
mov
cmp
jne
push
add
add
mov
cmpl
xor
mov
jmp
mov
mov
jge
mov
pop
mov
add
mov
mov
roll
push
lret
or
inc
cmp
iret
xor
mov
pushf
sub
js
cpuid
mov
mov
data16
or
mov
add
push
push
lcall
repnz
ljmp
add
int
jl
jmp
mov
lahf
inc
add
adc
aaa
fcomp
test
cmpsl
adc
and
in
jge
push
fcmovnbe
mov
pop
pop
pop
mov
cmpl
mov
adc
dec
cmp
jae
sub
or
dec
add
in
or
add
push
push
outsl
mov
mov
fcompl
push
pop
push
push
repz
mov
sti
rcll
lret
add
cmp
jne
xor
ja
add
inc
or
or
pop
jmp
pop
mov
cmp
jne
cmp
cwtl
rorl
rorl
shl
cmp
jo
addr16
or
aam
push
mov
fimuls
addb
pop
sub
add
femms
outsb
enter
push
and
push
add
lsl
ret
push
sub
cmpl
push
push
add
ret
dec
in
jmp
imul
sbb
pop
jecxz
sub
pop
mov
add
sub
mov
loope
adc
enter
lea
pop
jmp
cmp
xchg
lret
and
push
push
cmp
jne
adc
insb
js
mov
cmp
testl
jmp
add
push
call
mov
push
push
cmp
ret
push
sbb
clc
mov
test
je
xor
call
imul
dec
orb
and
int3
pop
push
pop
subb
jnp
sti
mov
lahf
push
pop
icebp
dec
xchg
int
push
push
dec
pushf
sbb
sbb
in
mov
call
xchg
cmp
sub
repz
mov
xchg
sbb
add
rcll
cmp
imul
mov
mov
cmp
lcall
jo
ja
and
jae
pushf
mov
mov
add
insb
cwtl
jbe
or
std
std
test
arpl
add
or
add
dec
ud0
scas
push
insl
cmp
jne
inc
pop
xchg
cs
push
sub
je
jno
inc
sub
sbb
mov
fistps
mov
xchg
ljmp
lock
dec
xorl
mov
loop
mov
jmp
stos
adc
adc
cmp
xor
push
add
add
out
pop
cmp
or
jmp
jbe
ja
or
outsl
adc
jns
aas
cmp
push
push
es
cmp
andl
fcmovnbe
jmp
lcall
lret
inc
mov
pop
loopne
repnz
add
cmp
nop
mov
inc
pop
push
orb
jns
ja
and
jmp
adc
add
outsb
dec
cmp
xorl
mov
div
inc
mov
mov
aas
sar
addl
or
xor
lret
xlat
inc
pop
xor
push
pop
mov
add
pand
repnz
jnp
inc
fucomp
ds
shrb
jne
out
sbb
lea
and
dec
jl
sti
orb
add
push
mov
sbb
cmp
dec
inc
mov
pop
push
add
cli
or
pop
scas
mov
into
push
sbb
cmp
je
or
jne
or
shll
pushf
pop
mov
sub
out
mov
add
repnz
cmp
xor
adc
or
push
add
sub
sub
les
jo
xchg
inc
out
rorb
sub
stos
mov
adc
push
xchg
pop
cld
shll
jmp
stc
cmp
jne
pop
jg
js
addl
add
push
cs
inc
pop
add
rcll
push
mov
pushf
pop
cmp
stc
lock
shlb
test
adc
jbe
pop
fisttps
pop
test
jmp
ret
sarl
test
je
ret
roll
inc
cmp
or
mov
xchg
push
push
js
ja
adc
int
pop
mov
mov
push
dec
push
push
pushl
lcall
push
cmp
or
xchg
and
adc
mov
clc
jge
jle
sub
mov
negl
hlt
inc
cmp
movl
or
cld
js
adc
mov
cld
xor
add
pop
pop
fs
cmpsl
add
inc
dec
das
pop
ret
push
sub
jmp
mov
scas
add
push
pop
add
test
cld
xchg
inc
insb
adc
and
loopne
mov
lea
inc
clc
jmp
or
adc
pop
cmp
push
jne
dec
mov
jge
popf
and
xor
and
add
xchg
jmp
dec
sbb
aaa
fs
fcmovnb
push
ljmp
pop
xlat
clc
cmp
test
adc
cmp
into
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
jno
mov
mov
mov
adc
mov
or
pop
pop
jle
setg
int3
push
pop
mov
jmp
mov
negl
and
add
adc
mov
xor
mov
jno
add
sub
test
lock
mov
cmp
jl
cli
movl
mull
rorl
and
jl
jbe
addr16
outsl
leave
add
inc
or
add
fmulp
rolb
cld
dec
adc
in
into
lock
mov
or
aas
leave
idivl
push
pusha
fwait
or
ret
call
push
push
push
xchg
xor
cmp
iret
push
daa
add
and
xor
idiv
mov
lock
lret
add
sbb
or
xor
jo
push
jmp
xchg
xchg
or
mov
mov
xor
mov
test
shll
fsubs
test
jne
sub
jle
mov
and
mov
pop
cmpsl
jbe
inc
pop
hlt
pop
xor
mov
imul
mov
add
ret
rorb
in
addb
sub
push
movl
push
aad
push
dec
mov
xchg
or
fisttps
dec
dec
adc
xor
cmp
loope
adc
aad
push
and
sbb
sahf
jp
mov
shlb
jo
in
or
test
pop
test
dec
pop
insb
mov
push
mov
mov
add
and
cmp
or
movsb
sti
jbe
test
xchg
in
sbb
sar
loope
push
loope
mov
mov
cmpb
aas
mov
xchg
adc
pop
leave
inc
mov
or
cmp
adc
sub
or
inc
mov
out
cltd
scas
lock
push
mov
sbb
fs
mov
adc
or
pop
jb
sub
add
sub
fisttpll
or
loopne
sbb
ret
push
test
cld
dec
adc
fadds
mov
rcll
jae
xchg
lods
sub
add
ljmp
add
jae
jecxz
insl
inc
sub
addl
into
cmp
roll
mov
mov
mov
xor
sbb
enter
inc
pop
or
mov
add
mov
add
ret
lea
fisttpll
pushf
pop
mov
mov
push
mov
or
insb
xor
jg
lahf
adc
hlt
cmp
out
inc
lods
jmp
int
mov
jno
jne
or
push
popf
pop
jb
mov
sbb
pop
imul
or
mov
or
cmp
jg
pop
jbe
test
mov
pop
je
cwtl
jbe
push
sbb
fstpt
xchg
push
addb
lock
push
adc
cmp
mov
js
pop
insb
or
xor
mov
out
sub
sbb
add
push
addr16
dec
or
bnd
push
mov
inc
mov
mov
jae
push
cli
mov
and
pusha
aaa
pop
cmpb
xchg
imul
dec
scas
dec
jne
lahf
orb
xchg
dec
mov
ficomps
adc
cmp
aad
andb
pop
pop
in
push
mov
clc
inc
mov
je
je
push
pop
mov
xlat
inc
cld
adc
jae
jo
cmp
ret
pop
and
cmp
add
out
sbb
jmp
insb
or
mov
fmuls
push
in
push
sub
sbb
mov
add
push
jne
aaa
jmp
das
adc
lock
scas
jecxz
jno
inc
insb
jbe
xor
sub
pop
push
mov
mov
mov
add
pop
repnz
sarl
sbb
lods
jp
ljmp
add
lds
mov
mov
jmp
movsl
mov
imul
loop
and
sub
les
add
xchg
mov
jne
out
xchg
js
cmp
or
test
pop
dec
insl
inc
daa
mov
out
loopne
inc
sub
adc
jne
mov
or
ret
out
out
sbb
push
add
sbb
and
test
mov
sub
cltd
test
mov
fstl
or
mov
sbb
cmp
jo
loop
adc
mov
enter
loopne
fbld
sbb
test
je
addr16
add
cmp
cmp
or
jmp
push
insb
lock
js
or
orb
fadd
jle
or
sbb
into
pop
or
roll
mov
dec
lods
dec
daa
dec
lods
shrb
jge
mov
mov
and
pop
xchg
lret
cmp
or
add
sbb
scas
nop
out
mov
jmp
cmp
adc
lea
add
sub
push
push
testl
inc
add
adc
push
pmullw
mov
mov
push
sub
xchg
scas
push
jle
cltd
cmpsl
mov
sub
jno
cmp
jg
sub
add
negl
jnp
push
leave
movb
push
pop
rorl
add
pop
or
das
inc
or
orb
lock
cmp
mov
lds
std
push
lock
adc
mov
dec
add
pop
lret
dec
add
pop
mov
cmp
lahf
sub
sbb
lret
xlat
aaa
cmpsl
sbb
push
xor
rorl
cmp
sub
sbb
test
pop
adc
push
and
adc
or
xchg
adc
pop
push
ficoml
push
sbb
jmp
fistl
rclb
xchg
jo
push
mov
push
jge
cmp
je
call
lret
xchg
push
sbb
jle
test
sbb
aaa
push
adc
jle
pop
xor
nop
sub
or
fs
push
fs
movsb
jmp
stos
scas
ja
rcr
test
inc
jno
mov
jnp
or
ret
mov
or
shlb
mov
dec
inc
pop
or
add
dec
mov
xor
fidivl
sub
bound
rorb
add
out
jl
out
mov
movsl
cld
add
test
sbb
jo
ret
xor
push
inc
adc
jg
xchg
cs
cltd
dec
and
cld
push
push
or
adc
adc
cmp
frstor
jle
test
jne
cwtl
fdivr
aas
fs
cmp
ja
mov
mov
cmp
dec
jae
out
and
add
inc
jne
sbb
add
jne
xor
aas
rcr
maskmovq
aas
mov
pop
adc
mov
inc
or
je
ljmp
sbb
ret
sub
inc
add
adc
sarl
mov
inc
repz
mov
mov
leave
jmp
mov
jmp
mov
mov
ret
pop
adc
repnz
sbb
mov
call
cmp
ja
je
sar
js
rep
xchg
in
insl
divl
inc
je
cld
lea
xor
std
xor
jle
jnp
cld
inc
mov
fldcw
fdivl
add
mov
fists
fwait
mov
mov
push
sbb
popa
test
mov
clc
mov
mov
sub
cli
dec
sub
jae
mov
call
dec
add
adc
sbb
jmp
es
sar
push
lock
cmp
and
dec
pop
lock
xor
push
sbb
cmpsb
sub
in
inc
xlat
in
fbstp
or
and
jne
pop
lods
int3
call
mov
test
adc
int3
push
or
sahf
jmp
cmp
rol
jg
mov
sbb
lret
jbe
lret
mov
inc
inc
and
ds
dec
fists
push
xor
mov
mov
inc
inc
dec
ja
das
sar
add
push
shr
je
mov
cmp
jne
dec
mov
xchg
pop
add
aaa
mov
or
lcall
push
adc
add
and
je
mov
cmp
jne
push
adc
cmpsb
imul
dec
add
adc
add
jne
add
adc
cmp
jne
shr
aam
sbb
mov
add
push
mov
shr
or
ds
dec
dec
pop
cmp
jb
or
inc
pop
and
mov
cmp
jne
dec
dec
dec
and
mov
mov
jecxz
cmp
dec
loop
mov
je
loopne
in
push
fistl
data16
stos
adc
lock
xchg
push
mov
mov
jp
mov
pusha
and
add
imul
js
pop
pop
je
fwait
sub
fnsave
jne
dec
and
out
and
add
sub
or
cmp
ja
lea
push
add
mov
mov
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fnstsw
je
andb
xchg
and
popa
add
rolb
pushf
add
or
cwtl
aad
cwtl
pop
xor
mov
pop
mov
ljmp
pop
cmpb
add
sub
inc
mov
dec
jne
pop
cmp
ret
mov
inc
sub
shlb
xchg
jl
pop
sub
pop
mov
test
andl
adc
fldt
pushf
fnstsw
jns
pcmpeqb
lods
xor
popa
adc
inc
xor
push
pop
xchg
xchg
push
xchg
jge
mov
xor
call
jmp
fstp
fldt
pusha
xor
adc
out
mov
dec
jg
aas
mov
inc
sahf
enter
inc
pushf
or
and
and
adc
xchg
jl
mov
out
sbb
xchg
sti
lock
and
inc
mov
mov
lock
sbb
js
out
xchg
add
hlt
and
mov
adc
jle
pop
jecxz
add
leave
sbb
mov
jg
inc
jbe
imul
cmp
mov
mov
bound
fwait
jg
outsl
cmpb
xlat
fadds
outsb
xor
xchg
push
or
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
push
lcall
nop
mov
inc
push
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
ljmp
pushl
lds
iret
decl
js
inc
mov
stos
mov
cmp
decl
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
pushl
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
pushl
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
ljmp
inc
pop
or
addl
cmp
xor
in
cmp
ja
decl
lock
mov
popa
movsb
mov
and
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
adc
fcmovnbe
and
clc
pop
jne
push
pop
and
add
lret
hlt
rol
fcomp
andb
clc
xchg
pop
hlt
movzwl
adc
fisubrl
push
mov
jo
mov
or
push
fmuls
push
xor
inc
hlt
mov
clc
data16
loopne
xchg
pop
add
mov
test
test
mov
jmp
data16
and
leave
out
add
inc
push
call
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
sahf
jo
loope
insb
jne
fninit
fwait
sub
push
and
add
clc
jmp
xlat
mov
xor
mov
inc
lret
adc
mov
rorb
mov
or
dec
cld
jne
dec
mov
loope
das
shlb
ss
jne
mov
or
fisubrl
inc
fsubl
divb
pop
or
or
mov
jmp
mov
aaa
int3
or
fcomp
daa
push
sti
outsl
test
or
daa
mov
bswap
mov
out
adc
fs
xchg
or
mov
in
pop
daa
lock
pop
add
sub
call
ret
cmpsb
ret
jl
mov
pop
lock
xor
rep
pop
loope
rorb
loop
mov
fmull
scas
inc
add
sbb
in
cmp
je
pop
mov
add
jae
loope
mov
into
push
mov
mov
push
sbb
cmp
addr16
call
ja
mov
mov
mov
shl
clc
push
stos
lock
mov
dec
jmp
stc
or
adc
jb
bswap
add
inc
roll
add
adc
push
dec
mov
mov
fs
lock
scas
xor
lea
and
out
mov
adc
and
pop
pop
mov
adc
mov
or
lea
inc
push
sbb
div
fcomps
in
inc
mov
jbe
setne
mov
mov
cmp
mov
ficoms
pop
xor
mov
shrb
mov
sub
sub
xor
xor
jb
cmp
inc
push
or
jne
or
or
adc
fsubrl
lods
xor
or
add
mov
cmp
daa
test
mov
pop
rclb
rorl
lods
inc
push
dec
jle
jne
mov
jecxz
test
xchg
jmp
loop
shl
or
aam
push
add
repnz
je
pop
add
add
inc
pop
inc
sub
mov
pop
push
mov
inc
pop
pop
out
mov
pop
mov
mov
cmp
cmpsb
push
mov
les
mov
inc
orb
popa
dec
ret
pop
push
les
or
inc
mov
inc
fadd
cmp
pop
pop
clc
push
mov
icebp
pop
mov
in
lock
pop
dec
out
dec
sub
decl
mov
je
add
mov
cmp
sbb
add
dec
jne
add
jmp
push
jmp
add
sbb
jecxz
dec
je
jo
cmp
xlat
lahf
push
popf
enter
repnz
sbb
pop
imul
pop
jmp
push
xor
call
xchg
in
push
pop
add
mov
jl
decl
rol
mov
mov
mov
movl
pop
cld
mov
and
out
pop
test
ljmp
and
mov
push
stos
pop
rcll
pop
test
sbb
xchg
in
icebp
lret
outsb
jg
mov
xlat
int
and
pop
movb
adc
incl
or
int3
in
push
call
cwtl
js
mov
push
cmp
cmpsl
mov
pop
iret
cs
mov
xchg
loopne
scas
or
mov
jge
jae
sub
pop
push
push
and
in
ljmp
cmpb
je
or
jne
movsbl
inc
inc
jmp
fadds
add
addr16
icebp
sub
xchg
push
add
adc
loop
fiaddl
push
fdivrl
adc
xchg
outsb
pop
loopne
inc
add
mov
sbb
jne
fiadds
dec
adc
pop
jne
lods
outsb
add
mov
xchg
je
jp
shl
adc
sar
js
mov
out
push
je
dec
js
push
lods
sbb
sub
jbe
test
jmp
rorl
testb
ss
pop
jbe
dec
cmc
enter
in
or
xor
or
adc
adc
push
jns
movsl
sarb
je
orl
adc
sbb
push
sbb
push
sub
adc
test
mov
push
out
sub
mov
lea
js
inc
add
xchg
adcl
mov
insb
jmp
mov
mov
nop
cmovno
xor
push
xchg
dec
test
or
push
add
rol
and
mov
pop
cwtl
push
or
sbb
pop
add
lds
mov
out
sub
add
push
loope
sbb
fdivs
mov
adc
mov
mov
fsubl
jne
testb
fiaddl
cld
outsl
xor
faddp
inc
jmp
sbb
push
cmp
shlb
adc
daa
adc
lds
add
cmp
sub
pop
adc
xchg
mov
daa
dec
jge
pop
jmp
punpcklbw
adc
loope
cmpsb
movl
or
jo
call
inc
jg
and
fdivr
js
push
push
push
push
push
add
pop
sarl
push
fildl
xor
mov
cmp
sbb
cwtl
mov
cmp
andl
out
xor
jle
fbld
adc
adc
adc
mov
cmpxchg
lea
cmp
mov
ljmp
enter
xor
pusha
inc
sbb
das
xchg
xor
xchg
ret
data16
mov
xchg
cmp
std
push
jg
je
cmp
push
sub
fbld
xchg
jmp
add
sub
jb
je
jmp
cmp
xchg
push
adc
sub
adc
jmp
sub
std
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
loopne
jg
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aam
or
and
sbb
popa
pop
data16
ljmp
lea
pop
insb
jb
je
push
outsl
xchg
call
sahf
cmp
dec
add
lock
je
add
and
mov
or
push
addl
popf
inc
sti
sub
mov
or
insb
subb
fnstenv
mov
add
ja
test
ret
scas
mov
or
enter
push
ret
mov
sbb
cmp
fcos
xchg
xchg
push
repnz
cmp
jne
and
xchg
data16
aas
mov
pop
mov
or
mov
imul
dec
sbb
add
jno
jle
dec
mov
hlt
inc
fcomp
fiadds
sbb
dec
add
push
clc
xor
in
sbb
test
jmp
mov
adc
jecxz
jae
in
mov
outsb
testl
jle
flds
subb
rcrb
xor
fbld
cmp
loop
or
mov
mov
lock
inc
pop
adc
xchg
mov
sub
dec
or
jg
ret
ds
test
sbb
jbe
aas
shl
add
xor
test
dec
jne
pop
pop
pop
inc
push
push
push
nop
pusha
sbb
add
lea
inc
and
fcomps
dec
or
adc
adc
sbb
pop
cltd
idiv
add
rcr
lods
xor
es
xchg
mov
mov
mov
sub
mov
fisttpl
cmp
shll
pop
out
jb
add
cmpsl
neg
sbb
inc
lcall
mov
pushl
add
dec
aad
cmc
mov
mov
leave
inc
push
push
imul
cmpl
cmpl
dec
mov
xor
ljmp
push
push
add
inc
adc
add
inc
inc
pop
ret
mov
jo
test
loope
cwtl
outsb
add
sub
or
add
inc
cmpb
push
cmpl
sbb
xor
mov
orb
inc
and
inc
sbb
push
fbstp
mov
int3
or
pop
fsubs
push
add
add
ds
ljmp
dec
xor
xor
jnp
adc
xor
dec
pusha
mov
jne
cmp
je
outsb
push
mov
inc
insl
adc
add
ret
call
aad
cs
mov
adc
jo
lret
sti
shr
adc
mov
ja
in
nop
popl
xlat
in
xchg
repnz
pop
or
dec
jl
lock
or
inc
clc
lahf
outsb
sbb
mov
adc
movl
mov
jne
popf
clc
or
inc
jg
mov
imul
mov
pop
push
dec
sbb
pop
pop
jmp
pusha
pop
mov
jbe
xchg
adc
xchg
or
test
and
add
and
push
inc
pop
movw
add
adc
push
cld
fists
jns
jl
mov
loopne
cwtl
mov
mov
das
stc
mov
ljmp
mov
cmp
cmp
xor
cmpsl
sahf
out
push
add
or
push
mov
pop
in
movsl
jle
mov
cmpsl
add
lret
lds
xabort
jg
icebp
jmp
pop
bound
cmp
push
xorb
xor
cld
out
push
movb
jl
mov
jae
repz
jmp
mov
add
sbb
cmp
pop
sbb
cs
fstps
add
cmp
mov
loop
or
ss
ret
cmp
je
cmp
or
je
add
jb
pop
add
call
pop
sub
jmp
repz
sub
and
pop
pop
or
jnp
bound
or
addr16
in
add
jae
jbe
cmp
add
push
mov
scas
clc
mov
add
rcrl
rcrl
mov
stos
loop
outsl
push
and
pop
cld
add
mov
repnz
fnstcw
or
mov
fcoml
xchg
aas
mov
loop
cld
ret
push
aas
je
xchg
mov
es
cld
add
cmp
lods
lods
js
pop
and
mov
adc
or
sub
xlat
or
xchg
cmp
adc
or
mov
xor
sub
hlt
mov
into
sbb
add
inc
jg
fmuls
lds
push
sbb
pop
push
rolb
mov
add
fmul
jmp
jle
or
cmpsb
xor
mov
loope
test
cld
dec
jmp
dec
sub
fisttpll
or
push
cmp
fs
dec
jne
mov
jl
ss
jge
and
aaa
add
dec
jmp
maxps
inc
pushf
sbb
lock
into
pop
dec
jne
mov
sbb
add
pop
shl
and
lea
jmp
xchg
mov
cmpsl
psrad
rcr
sub
imul
mov
iret
pop
adc
inc
cs
and
push
inc
push
pop
xor
or
and
sarb
shr
adc
add
aam
testl
clc
inc
das
lods
movsl
push
xchg
jle
ret
add
lahf
cmp
dec
jno
xor
cmc
mov
insb
mov
dec
adc
movsb
inc
es
mov
and
ss
lsl
sbb
sub
dec
jl
cmp
jge
sub
ljmp
jg
add
or
mov
shr
in
jmp
and
cmp
xor
and
in
pop
hlt
push
pop
xchg
lret
sub
jge
lock
outsl
mov
mov
add
stc
add
lea
pop
or
movsb
push
push
cli
mov
insl
or
lahf
cltd
mov
jg
mov
inc
dec
jge
cmp
adc
imul
mov
gs
cmp
pop
mov
mov
lea
add
or
clc
mov
sbb
add
xchg
xor
mov
push
mov
dec
js
mov
inc
jb
adc
adc
sub
in
pop
push
faddl
xchg
fsubl
and
subl
cld
aas
inc
aaa
test
lods
and
sbb
aam
and
loopne,pn
je
adc
mov
jo
cld
jmp
divb
push
rorb
ret
aad
icebp
pop
icebp
or
adc
ret
push
push
xchg
rolb
add
pop
ret
in
cmpsl
push
push
das
loopne
daa
push
adc
mull
in
cmpsl
push
cmp
les
call
mov
adc
push
push
dec
fsub
jno
pop
adc
jmp
pushf
test
imul
add
sub
enter
ret
pop
ret
sbb
push
leave
and
sub
dec
das
int3
sbbl
pushl
mov
and
jecxz
popa
add
add
sbb
add
insl
pop
shrb
and
pop
add
cmp
je
mov
add
nop
and
mov
and
pop
inc
fstl
sbb
or
sbb
dec
jecxz
push
ss
stc
mov
cmp
cmp
jge
inc
mull
pop
dec
cmp
nop
pushf
lcall
sub
adc
out
ret
cmp
push
lods
add
push
or
adc
loopne
xchg
loopne
xchg
bound
mov
fidivs
push
mov
xorb
adc
fadds
out
cmpsb
cmp
push
lods
jo
aas
lods
sar
push
mov
push
lea
add
push
mov
push
movsb
aas
cmp
out
jne
test
fbstp
mov
je
cmp
je
cmp
je
cmp
clc
mov
cmp
je
cmp
cmp
je
mov
add
cwtl
cmpsb
xor
inc
adc
or
adc
jmp
lcall
add
in
ficomps
dec
cs
adc
cmp
pop
jmp
cmp
adc
lcall
rolb
cmp
adcb
cmp
sbb
pop
call
call
mov
std
ret
cmp
jae
mov
lcall
push
mov
mov
test
int3
jg
in
mov
mov
mov
push
inc
enter
cmp
jmp
subb
pusha
es
repnz
dec
pop
inc
and
jmp
adc
enter
jmp
test
mov
or
test
cmp
inc
icebp
jmp
mov
fcomps
pop
adc
inc
push
imul
cld
scas
inc
xor
mov
lea
outsl
cld
pop
icebp
jbe
or
clc
push
push
add
sarl
add
pop
ud2
stc
mov
ficoms
mov
sbb
xor
pop
cmp
lods
pop
dec
or
pop
jo
sbb
adc
bound
sbb
dec
sub
pop
xor
cs
or
inc
push
fisttpl
jge
cmp
insb
lea
push
mov
xchg
adc
cmp
mov
orb
mov
fsubrp
cmp
add
sarl
xor
mov
int3
inc
push
dec
cld
adc
and
add
dec
dec
jne
adc
pop
shr
test
daa
mov
ljmp
mov
in
inc
push
or
test
pushf
loop
test
ret
dec
jne
sub
jae
push
jmp
cmpsl
std
lds
imul
dec
xor
loopne
out
cmp
cmp
or
ja
sti
add
add
mov
into
cs
icebp
mov
xor
movl
je
cmp
fcomps
or
adc
popa
pop
or
sbb
sub
pop
jl
aaa
mov
nop
mov
fnstcw
mov
mov
jne
and
add
ss
jae
adc
pop
pop
ret
pop
push
outsb
and
xchg
aas
test
mov
jne
cmp
cmc
mov
cmpsl
mov
dec
hlt
mov
mov
bnd
call
fmuls
pop
mov
popf
mov
dec
mov
nop
inc
jns
lcall
jge
orb
xlat
dec
loop
adc
movzbl
add
jb
push
push
push
sbb
adc
inc
or
out
push
imul
mov
imul
mov
add
push
push
in
sti
jle
test
test
rcr
testb
ret
sub
pop
enter
push
inc
in
jmp
dec
lock
push
call
lock
jge
mov
mov
mov
xor
jo
mov
add
mov
sbb
pop
pop
lret
into
xor
int3
push
std
sbb
push
add
int3
mov
out
xchg
mov
adc
sub
mov
or
add
mov
hlt
add
or
dec
jle
mov
xor
movsb
outsb
lea
fadd
pop
rol
hlt
xchg
fadds
jne
aad
mov
mov
pop
rolb
js
add
scas
aaa
adc
pop
mov
dec
clc
jne
inc
xor
fidivs
inc
pop
pushf
in
inc
sub
cld
xchg
sbb
pushf
je
test
sti
jecxz
xor
push
push
mov
incl
das
pop
pop
out
or
ret
add
xor
sub
sub
inc
loope
adc
push
add
ljmp
fadds
cs
fdivs
cmp
pop
mov
mov
adc
sbb
inc
inc
xlat
xchg
xor
inc
adc
adc
pop
or
and
xchg
mov
mov
pop
push
push
add
mov
pop
sbb
aam
ss
jne
mov
clc
xchg
cmp
mov
pop
and
push
xchg
lea
hlt
xor
sub
add
mov
sub
sub
sti
pop
jne
sbb
add
movsb
pop
pusha
mov
insl
lar
push
inc
ja
mov
inc
push
rcll
push
xchg
lock
iret
test
outsb
mov
push
clc
push
sub
scas
jge
std
inc
mov
cmpb
inc
vmread
pop
sbb
fsubl
jle
fiadds
lahf
mov
add
xor
inc
sub
in
lock
das
cmc
orb
mov
pop
in
mov
inc
add
jmp
cmp
out
in
sub
adc
pop
insl
mov
inc
cmp
mov
push
mov
xor
stos
pop
ret
rclb
fwait
cmp
andl
aad
mov
pushl
xor
cwtl
lea
sbb
outsb
divl
mov
sbb
sub
dec
push
push
mov
fdivrs
sbb
add
test
dec
popa
add
andl
push
imul
gs
xor
cs
insb
test
pushl
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
mov
into
push
movsb
push
fucomip
fmuls
sti
outsl
outsl
pop
movb
push
push
js
scas
add
add
jbe
sub
add
push
sbb
fadds
mov
es
cmp
or
sub
test
ds
add
mov
aas
iret
cmp
loope
addl
repnz
xorl
push
inc
mov
pop
mov
rorl
add
pop
xlat
add
js
push
xor
cmpb
test
jle
repz
or
push
jmp
jnp
xchg
pop
repnz
mov
inc
jmp
stos
in
arpl
in
or
je
inc
cmp
jne
adc
xchg
incl
test
int3
icebp
in
rolb
mov
and
add
and
jb
cs
insl
or
repz
int3
fs
mov
mov
push
outsl
data16
popa
jb
orps
popa
insb
gs
aaa
mov
inc
ret
inc
dec
jecxz
lock
insb
xlat
mov
dec
xchg
adc
aam
adc
lcall
lock
mov
sbb
daa
sar
jne
das
in
mov
loopne
shr
adc
aas
pop
outsb
xorb
mov
sbb
and
out
add
xor
rcrb
xchg
sarb
scas
je
sbb
or
pop
cli
addb
push
ret
loope
xchg
cmp
sub
push
jno
and
push
jne
daa
in
xor
or
mov
and
in
mov
inc
out
mov
hlt
mov
add
ret
sbb
int
or
cmc
cmp
roll
sarb
cmp
je
scas
sub
add
out
push
jo
ja
sbb
js
mov
add
pop
mov
fmull
add
jl
pop
pusha
dec
sub
pop
mov
inc
push
mov
addr16
stos
rol
filds
sbb
mov
mov
les
loope
push
les
dec
lock
mov
push
and
mov
add
test
fidivrs
jecxz
and
adc
inc
push
nop
add
sub
subb
scas
les
andb
pop
test
add
js
inc
fistpll
or
adc
lock
push
decl
loopne
push
xor
popa
mov
mov
xchg
movzwl
add
call
inc
cmp
ja
mov
inc
jmp
cmp
out
pop
cld
pop
add
pop
cld
ja
fcmovb
jmp
or
mov
adc
sbb
in
outsl
sbb
and
lret
add
lods
rclb
jmp
pusha
add
dec
lret
shlb
xor
inc
add
dec
or
cmp
jb
or
pop
rcrl
or
xor
push
adc
or
add
adc
cmp
lea
ret
push
bound
into
lock
cmp
and
lock
cli
push
mov
add
imul
cmp
dec
xor
add
inc
test
and
mov
adcl
aas
and
je
cmp
adc
jg
sarb
mov
sti
orb
mov
bswap
mov
and
ffreep
mov
or
mov
pop
lea
dec
dec
cld
mov
mov
inc
push
inc
lcall
cmp
pop
ja
xlat
or
movl
mov
scas
imul
ret
xor
fsubs
xorb
sbb
or
jb
inc
and
push
mov
add
lods
sbb
pop
pop
in
cmp
test
xor
pusha
ret
pop
adc
lea
incl
dec
and
pop
xor
inc
push
cli
pop
dec
and
ss
testb
das
cmp
lea
outsl
jmp
adc
enter
mov
or
add
stc
xchg
mov
dec
pop
jo
adcb
cltd
cmc
dec
adc
test
pop
and
and
or
xchg
cmova
outsl
inc
out
nop
inc
jo
inc
cmp
push
hlt
inc
push
or
cmp
lods
jne
mov
fmuls
dec
or
add
fistl
lods
dec
pop
cmp
jge
outsb
pusha
aam
jl
inc
nop
aad
rep
add
or
adcb
addr16
out
aam
imul
pop
mov
push
push
push
push
lea
push
push
push
xchg
and
and
add
xor
mov
push
mov
or
jp
adc
inc
xchg
jno
bound
mov
dec
repz
push
mov
mov
in
mov
or
out
aaa
jns
mov
or
mov
outsb
scas
clc
subl
test
cld
movb
test
mov
dec
mov
adc
add
adc
fbld
cmp
xlat
adc
rcrl
dec
mov
mov
add
int
sub
push
inc
jbe
divl
and
or
mov
imul
xor
jmp
sbb
sbb
daa
adc
push
dec
or
mov
or
call
and
inc
cmpl
lcall
call
or
jmp
push
mov
jg
xchg
sub
test
jne
mov
sub
cmpb
lods
sahf
ret
add
mov
and
mov
inc
adc
out
lods
loope
mov
mov
out
jbe
mov
or
mov
jge
das
sbb
jecxz
fstps
pusha
push
add
test
addb
xchg
push
push
sbb
xchg
rorb
cmc
xchg
add
jbe
add
cmp
add
push
or
nop
dec
fsubrp
inc
popa
jo
popa
mov
add
cs
jnp
sbb
insb
pop
and
outsl
fs
gs
iret
fisubrs
or
jb
jns
es
pushl
popa
bound
inc
push
outsl
arpl
ja
sti
das
inc
gs
jne
je
dec
outsl
je
imul
lahf
imul
mov
gs
outsl
inc
arpl
or
pop
xor
or
or
jb
xor
lock
fbstp
push
outsl
insl
bound
outsl
js
imul
ja
nop
or
adcb
pop
cmp
andps
outsb
dec
inc
xor
je
dec
in
mov
addl
xlat
xor
sub
in
in
sub
inc
in
in
inc
cmp
xor
cs
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
ret
jb
daa
daa
lock
call
in
jb
jb
aam
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
insb
push
fs
pop
pop
jb
jb
push
push
dec
dec
jbe
jb
inc
inc
cmp
lahf
repnz
sbb
andps
les
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
in
jbe
jb
add
clc
bswap
leave
leave
leave
hlt
lock
call
in
leave
leave
leave
leave
aam
int3
enter
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
movsb
mov
in
mov
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
lds
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movsb
mov
jb
xchg
nop
mov
jb
mov
fsubrl
js
je
insb
leave
test
leave
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
clc
hlt
lock
in
in
call
in
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwtl
xchg
nop
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
push
out
in
in
dec
inc
movzwl
leave
mov
clc
shl
or
adc
push
mov
nop
gs
jo
fnsave
or
push
and
mov
cmp
or
lock
mov
add
inc
and
mov
mov
call
and
cmp
sub
pop
add
movsb
pop
sbb
aas
inc
push
or
cld
orl
out
aas
jmp
sbb
and
push
push
push
mov
sbb
popf
mov
lret
sbb
mov
jle
mov
std
pop
ret
nop
scas
cmpsl
push
stos
push
cwtl
dec
adc
mov
lock
repnz
or
jne
loopne
sbb
fs
pusha
jb
and
pop
shlb
mulb
sbb
pop
jo
cmp
pop
fs
sub
or
or
pop
repnz
imul
inc
pop
enter
or
inc
adc
insl
lea
lret
popa
gs
sbb
jg
add
dec
push
push
dec
inc
inc
dec
add
outsl
sti
fcmove
scas
add
and
dec
push
inc
push
dec
pop
and
pop
icebp
push
push
in
push
push
pop
sub
push
inc
jns
mov
dec
pop
dec
dec
dec
inc
push
das
xchg
push
je
insl
je
xchg
movsb
inc
lock
icebp
dec
dec
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
rcl
dec
dec
dec
dec
rcl
aam
dec
dec
dec
dec
xlat
fcomp
dec
dec
dec
dec
fcmovu
dec
dec
dec
dec
rol
dec
dec
dec
ret
lds
dec
dec
mov
leave
dec
dec
dec
dec
lret
int
dec
dec
dec
into
iret
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsb
cmpsl
test
es
dec
stos
lcall
cltd
jo
cs
jb
mov
add
add
aas
xor
push
or
loopne
jne
pop
push
mov
xchg
andb
xchg
orl
js
gs
pop
add
jo
imul
bound
in
aam
jo
push
mov
push
inc
dec
gs
jo
nop
mov
leave
mov
dec
jne
dec
dec
mov
outsl
jb
mov
and
outsl
inc
imul
outsb
mov
jo
or
adc
xchg
add
dec
cs
enter
jb
sbb
jae
add
or
xchg
loope
sbb
scas
push
leave
sbbl
fmull
in
insl
incl
imul
nop
fsubrs
or
popa
outsb
xor
or
ds
fsubrl
pusha
xchg
dec
jbe
insb
outsl
ja
fsubs
ds
mov
dec
mov
gs
in
in
je
mov
xor
dec
jo
cmp
adc
adc
push
push
xchg
insl
jle
gs
scas
mov
pop
lods
and
in
scas
in
mov
push
and
push
outsb
fs
add
inc
ret
inc
jbe
sidtl
ret
adc
mov
pop
mov
fsubs
add
xor
mov
push
jae
fdivrp
mov
cmp
inc
dec
ror
adc
mov
jl
pushf
adcb
push
or
rolb
insb
popa
sbb
mov
xchg
push
jb
insb
hlt
nop
and
outsl
outsl
mov
cmpsl
push
inc
repnz
sub
mov
lods
popa
inc
xchg
fbstp
inc
les
ds
cmp
pop
mov
sbb
and
sbb
ds
mov
addb
jb
xchg
fs
mov
add
mov
add
fdivl
fcoml
rcll
cmp
scas
add
aas
or
stos
or
push
fbstp
popa
gs
push
add
add
aaa
xor
sub
fsubl
push
push
inc
xor
out
inc
cmp
loop
push
inc
jnp
mov
inc
xchg
sub
int3
dec
adc
jb
popa
rcrb
in
les
int3
add
fistl
lock
hlt
das
and
adc
cmp
jge
mov
addl
pop
aaa
cmp
repz
imul
jecxz
jnp
sbb
push
loopne
sbb
aaa
and
cmp
call
test
jg
adc
and
dec
imulb
test
and
out
or
push
sbb
ljmp
jp
addr16
lock
je
shr
div
lcall
cmp
adc
out
fmuls
dec
test
add
mov
lock
imul
sbb
xor
mov
addr16
std
fadd
notl
xor
dec
add
sbb
adc
sbb
mov
or
call
pop
pop
daa
or
sub
xchg
sub
ss
lahf
mov
mov
add
adc
and
mov
add
cmc
adc
add
mov
fimuls
pop
add
push
cmp
ja
sub
bound
pinsrw
sbb
in
movsb
jns
bound
pop
sbb
add
std
sub
pop
mov
cmp
jbe
insl
ljmp
inc
cmp
repz
je
movzbl
push
push
jmp
xchg
daa
imul
lret
cmpsl
jne
std
mov
add
ds
mov
mov
jbe
in
or
sar
dec
movsl
cmp
out
and
sti
je
fldl
add
in
out
sbb
push
pop
inc
pop
cmp
cld
dec
psrld
cmp
push
outsb
jne
lock
lock
addr16
push
sub
mov
add
push
inc
add
sahf
outsl
dec
jl
enter
outsb
xchg
dec
pusha
fmul
sete
aaa
pop
xchg
pop
sti
rcll
push
jg
jae
sub
ljmp
hlt
idiv
popf
pop
add
repz
cmpb
jbe
adc
or
xor
aaa
clc
push
sub
inc
jno
clc
cmp
ss
iret
jecxz
push
sub
xor
mov
mov
js
jmp
cmpsl
pop
cwtl
add
lret
mov
mov
jecxz
test
ss
add
mov
daa
xchg
call
mov
call
sub
mov
add
sub
jb
sub
je
decb
fdivs
jae
cmp
jl
inc
mov
pop
mov
rolb
push
stc
aas
lods
pop
xor
or
sbb
jae
inc
jnp
pop
jmp
jne
mov
movsl
icebp
mov
sarb
aam
push
mov
inc
dec
mov
or
or
xor
div
dec
sub
cmp
push
ret
push
hlt
ljmp
adc
shll
add
cli
test
ljmp
mov
sub
xor
push
outsb
cltd
cmp
repnz
mov
add
xor
sub
mov
jo
pushl
mov
test
out
pop
jae
and
fadd
in
sub
mov
add
jl
add
add
fldcw
mov
movsl
mov
mov
mov
andl
push
and
fcomip
in
pop
mov
roll
add
sub
add
rorl
sub
sub
fdivr
mov
cmp
ds
sti
outsl
add
rcrl
loope
push
addb
ffree
ffree
ffree
ffree
pop
aad
adcb
pop
push
sbb
frstor
push
test
loopne
or
jecxz
pop
cmp
cli
jle
inc
push
push
mov
in
push
xchg
aad
xchg
xorb
hlt
and
or
lock
sbb
xchg
or
or
lret
test
inc
out
push
and
pusha
lock
ja
out
sbb
imul
pop
cmovo
mov
pop
pop
outsl
mov
scas
mov
mov
pop
or
ds
inc
test
dec
mov
dec
cs
mov
push
or
mov
outsb
insb
shl
icebp
and
mov
mov
fistpll
movb
repnz
jl
push
pushf
addb
mov
lahf
dec
and
cmp
jmp
mov
mov
push
mov
pminub
cmpl
pop
test
mov
adc
insl
lock
adc
inc
setne
jmp
ss
push
pushl
xchg
jb
pop
addr16
inc
mov
or
sbb
ja
pop
or
xor
adc
out
mov
std
and
loop
aaa
jmp
and
inc
mov
mov
adc
shlb
xchg
cmp
das
clc
or
mov
insb
cmp
ja
add
mov
lock
inc
ja
int3
xchg
add
neg
sub
add
dec
mov
push
jo
lret
mov
daa
cmp
xor
mov
movsb
xor
rolb
pop
je
iret
push
pop
push
push
and
in
ss
push
pop
insb
add
push
push
dec
clc
xchg
rclb
adc
pop
dec
jmp
xchg
or
push
add
sbb
das
add
cld
lock
ja
push
cmp
push
call
sbb
add
push
cld
out
dec
mov
and
bnd
pushl
insl
sbb
fdivl
pop
inc
sbb
mov
ds
jle
xchg
inc
js
mov
imul
scas
jne
dec
dec
push
jg
aaa
les
ss
add
mov
cmpsl
test
jne
inc
jle
cmpb
inc
gs
notb
lret
dec
cmp
pusha
test
xchg
out
mov
lahf
pop
cmp
popa
aas
js
inc
sarl
push
xchg
rolb
test
lea
xor
dec
pop
mov
loope
inc
xor
loopne
enter
and
fucomp
bound
mov
out
lock
fldl2e
cmp
xor
icebp
xchg
fsubrs
imull
mov
mov
jle
adc
pop
shlb
adc
push
les
addl
cld
inc
sub
adc
ret
sbb
cli
mov
mov
push
ss
mov
mov
out
lea
daa
adc
cmp
or
fsubrs
not
mov
dec
lret
pop
add
insb
rep
dec
movsb
pop
and
mov
pop
ret
mov
lret
dec
fidivrl
push
adc
sub
pop
lret
mov
int3
pop
fxch
pop
pusha
adc
or
lods
mov
pop
adc
mov
popa
push
cwtl
outsl
cmp
arpl
enter
pop
or
sahf
clc
pop
jns
xor
xor
repz
mov
mov
jnp
in
lock
inc
je
dec
ds
clc
inc
xchg
pop
cmp
cli
ljmp
je
outsl
xlat
enter
adc
ret
das
rcr
iret
add
pop
mov
stc
das
add
xchg
int3
dec
jmp
test
sti
popf
add
adc
fimull
in
push
stos
jmp
je
inc
or
stos
movsl
mov
std
je
mov
mov
pop
sub
jbe
sbb
pop
jl
inc
dec
lock
sbb
mov
jne
test
lea
fcmovb
mov
mov
subl
mov
pop
add
sub
imul
clc
push
icebp
mov
in
inc
idivl
lds
ja
inc
ret
sbb
pop
jbe
mov
stc
ljmp
clc
sahf
push
scas
fs
jbe
mov
push
scas
push
mov
pop
adcb
je
cmp
test
bound
and
mov
sbb
or
add
or
mov
rcrl
arpl
inc
push
cmpsl
popf
dec
add
aas
push
addr16
push
andb
into
loopne
insb
sbbb
add
jge
adc
push
jle
das
rcrb
or
and
rep
xchg
push
inc
les
and
sub
out
fistps
sub
enter
mov
cmp
jne
sub
insb
jg
mov
cmp
jne
cs
and
lods
jmp
adc
mov
aaa
cmp
sub
inc
sub
mov
call
jnp
pop
mov
jae
pop
outsl
scas
xor
cmpb
or
lret
sarl
lock
fadds
rep
sbb
cmpl
fwait
push
jns
pop
pop
mov
dec
fldt
jmp
sub
jb
lock
cmp
ja
imul
mov
add
cld
add
sub
pop
dec
sbb
and
pop
add
decl
cld
or
jl
jmp
sarl
fisttps
pop
push
cmp
pop
imul
pop
jne
lea
mov
lcall
mov
jne
jns
pop
mov
das
cmpsl
xchg
pop
inc
push
imul
push
push
sbb
mov
in
xchg
mov
loopne
push
mov
sub
loopne
sub
lea
and
jmp
adc
inc
je
pop
sahf
dec
and
push
xor
in
shr
jmp
push
pop
outsb
adc
in
imul
sub
movntq
jnp
cmp
jne
sar
ret
sbb
lock
jbe
mov
aad
or
jmp
aaa
push
popf
fnstenv
leave
inc
inc
hlt
lods
and
jmp
sti
mov
loopne
add
jne
aas
std
cltd
cmp
and
call
pop
add
mov
jl
aaa
add
stos
pop
mov
cmp
ja
push
into
int3
fmuls
scas
jmp
add
es
dec
mov
mov
out
push
leave
mov
sahf
jno
lods
out
adc
fbld
mov
outsb
mov
inc
je
mov
or
je
mov
fsubp
fwait
add
adc
dec
jl
inc
clc
xchg
mov
mov
ret
mov
clc
ss
xchg
adc
mov
cmp
pop
mov
inc
mov
xchg
mov
inc
iret
dec
sbb
xor
push
clc
xchg
ret
xor
and
lret
lahf
ds
movb
aas
daa
aam
or
test
enter
or
push
push
jne
loope
push
mov
mov
daa
pop
push
repnz
mov
aaa
dec
and
cli
filds
mov
xchg
or
xchg
push
jle
outsl
pop
shlb
xchg
sub
das
les
mov
cmp
insb
jge
sbb
lea
clc
out
js
pushl
push
test
xchg
incb
jl
jmp
add
or
mov
jecxz
mov
dec
push
xchg
jne
pop
xlat
das
cmp
dec
arpl
lea
add
lds
xchg
imulb
push
xchg
pushf
dec
jg
jge
mov
neg
jmp
or
or
mov
hlt
and
mov
mov
movsb
sub
adc
pushf
clc
decl
jg
dec
mov
stos
cmp
jne
pop
pop
ja
pop
xor
aam
andb
or
sti
mov
jl
sbb
pop
repz
adc
sub
icebp
test
pop
xchg
jge
into
mov
add
cmp
push
lods
daa
hlt
adc
jb
incb
cmp
and
mov
ja
rclb
sub
int3
push
sbb
dec
add
mov
sub
cld
xlat
lods
pop
sbb
adc
ja
movswl
mov
call
or
pop
pop
sbb
sti
mov
rorl
fstpl
fidivrs
mov
xchg
dec
dec
inc
dec
inc
dec
lods
or
dec
jge
dec
xchg
popa
jnp
jo
ret
std
mov
aam
push
push
mov
jg
jg
cmp
jl
pop
sbb
pop
outsl
aaa
lods
or
mov
stos
neg
sbb
stos
jmp
xorl
mov
stos
loop
movlps
pop
pop
cs
add
add
push
loop
mov
mov
push
mov
cwtl
dec
pop
push
mov
cmp
add
leave
lea
mov
mov
mov
int3
insl
sbb
jl
jl
cli
adc
mov
clc
sbb
add
je
loopne
mov
hlt
div
mov
inc
test
jne
or
jbe
sbb
add
stos
xor
call
dec
push
sti
add
je
inc
jne
pop
push
lcall
repnz
xchg
and
sbb
mov
fbstp
push
lea
mov
jle
inc
je
inc
cmp
mov
or
or
add
movsl
mov
inc
loop
loopne
mov
push
mov
or
popf
add
and
and
adc
and
fucomp
sub
sub
xor
inc
jne
xor
push
sbb
and
sub
jae
outsl
adc
xor
mov
loopne
sub
xor
sbb
loopne
js
dec
aam
add
cmp
std
xor
pop
adc
scas
shr
ret
movsb
cmp
testl
pop
adc
cmpl
add
movb
adcl
sub
pushf
imul
or
dec
enter
pop
jo
xchg
loope
push
pop
mov
negb
rcr
scas
push
fnstsw
fwait
mov
testb
je
fidivl
xor
pop
fbstp
lea
mov
inc
sub
push
cmp
ja
shr
and
add
push
cmp
add
mov
add
jns
icebp
jg
jge
cmp
jge
pushf
or
cmpb
jb
movb
fisttps
dec
js
decb
and
pop
data16
pusha
xor
outsb
push
ja
jmp
mov
xor
sti
add
notb
scas
shr
mov
sahf
lock
add
xchg
out
jb
neg
adc
push
adc
xchg
push
add
loopne
scas
ds
je
mov
neg
sbb
or
or
jbe
rcrl
mov
repnz
jl
sbb
jae
dec
add
add
jle
mov
fildll
cli
dec
or
jg
ret
fidivl
shl
jo
fwait
mov
push
sub
cmc
add
and
jne
dec
sub
cmp
les
and
pusha
sarl
dec
adc
sub
movb
cmpb
popa
shll
jmp
mov
xlat
add
sbb
inc
pop
inc
dec
sbb
or
jns
pop
adc
fwait
push
js
fldz
ror
add
cmpsb
test
cmp
lods
test
sub
test
mov
cmp
or
cmp
icebp
je
pop
out
fnstsw
inc
jne
inc
push
sub
pop
add
jg
jne
add
loopne
mov
sahf
add
inc
jbe
push
push
mov
adc
jmp
jmp
fstpt
int3
test
add
pop
shlb
fsubrl
insl
and
push
int
cmp
mov
test
or
fimull
add
jmp
aaa
mov
idiv
or
push
inc
imul
sarb
cli
hlt
nop
jb
aaa
add
mov
push
inc
test
lret
push
insb
push
and
sub
out
add
adc
and
sbb
add
xor
pop
std
pop
jmp
mov
iret
mov
arpl
cmp
and
push
fwait
dec
es
push
push
flds
fcmovnb
out
out
fiaddl
lahf
xor
ret
or
or
sub
adc
adc
mov
xor
push
adc
adc
mov
or
pop
pop
out
and
sbb
int
jae
or
cmp
inc
stc
inc
gs
int3
push
outsl
fisubs
out
ss
imul
cmpsb
jne
ret
cmp
sbb
xchg
stos
pop
ds
sbb
mov
lret
movsb
dec
outsl
lods
mov
pushl
lea
sbb
shlb
cld
lea
mov
inc
xor
xchg
adc
push
cmp
xchg
mov
and
mulb
xchg
enter
loopne
lock
mov
insb
mov
test
jne
rcr
fcompl
nop
add
rolb
das
mulb
xor
shl
jg
add
add
fdivl
maskmovq
testl
ss
ja
outsl
adc
ja
sti
push
jno
jne
pop
inc
test
pop
inc
ja
sbb
into
or
sub
inc
dec
jne
dec
std
pop
outsl
xor
dec
mov
dec
cltd
idiv
imul
daa
test
mov
ds
cmp
stc
add
pop
ret
or
mov
rorl
xchg
mov
in
push
dec
aas
dec
call
mov
movsb
popf
push
or
jb
or
push
outsb
rolb
inc
pusha
aaa
xor
dec
data16
or
stc
mov
add
jl
addl
aam
add
and
push
cmp
loop
lods
mov
push
decw
cmpl
fistpl
push
fcoms
lcall
ja
push
shl
cmp
dec
xor
dec
pop
xor
mov
jbe
mov
in
push
mov
dec
mov
mov
out
out
lods
fdivrs
push
jb
sbb
pop
push
or
inc
jmp
ret
sbb
rorl
and
and
hlt
je
movsb
pop
push
push
mov
lock
dec
fldt
sbb
pop
mov
cmp
clc
xchg
cld
mov
mov
orb
jbe
jp
mov
sbb
cli
inc
push
sub
pop
pop
rorl
push
sbb
adcb
inc
imul
ss
sub
aas
mov
cli
xor
ret
fcompl
mov
dec
adc
add
loopne
in
call
or
add
add
test
jbe
js
rcrb
in
aaa
add
movsl
test
adc
sarl
jmp
push
adc
sti
je
add
cld
inc
nop
inc
hlt
mov
pop
outsl
pop
cmpb
jne
xlat
mov
jo
add
push
lea
or
lahf
repnz
sti
jmp
adcb
in
add
jecxz
pop
mov
push
jge
call
ljmp
cmc
pop
in
push
aam
sbb
xchg
xchg
lcall
sub
cmp
enter
adc
ljmp
pop
mov
push
mov
ret
push
in
call
shlb
inc
std
movsl
and
xchg
lea
negb
jg
dec
jne
mov
sahf
je
or
mov
jge
add
or
ss
pusha
cmpl
push
fdivs
sub
adc
pop
jp
inc
push
leave
mov
fldenv
dec
loopne
ret
test
xchg
pop
psubsw
mov
adc
mov
ret
aaa
cs
mov
mov
enter
arpl
repnz
out
addr16
xlat
in
sbb
scas
popa
lret
sbbb
out
repnz
mull
aad
popf
jmp
sbb
nop
mov
in
in
or
xor
in
jne
dec
add
popa
clc
cmp
jne
push
mov
dec
jb
lret
test
arpl
pop
mov
pop
icebp
out
jns
add
cltd
pop
call
aam
xorl
push
jne
push
and
push
adc
push
xor
mov
pop
add
dec
pop
incl
and
pusha
push
jecxz
push
xchg
pop
jo
scas
fimuls
and
mov
daa
aad
mov
push
popf
nop
and
pop
fidivs
imull
mov
push
xchg
jge
mov
push
popa
xchg
aam
lahf
mov
xchg
into
jnp
adc
inc
dec
jne
push
adc
cs
mov
in
mov
mov
ja
xor
xchg
sahf
pushf
and
int3
or
in
mov
or
or
jbe
or
or
sbb
push
pop
add
or
or
ds
popa
xchg
or
or
push
pop
repz
mov
jns
or
movsb
dec
loope
dec
jns
mov
sbb
pop
push
inc
and
xchg
icebp
icebp
mov
mov
inc
in
adc
mov
push
out
stc
dec
push
pushw
and
mov
pop
aam
mov
or
dec
mov
into
sbb
xor
push
push
jecxz
or
add
mov
outsb
pop
pop
xor
leave
fcmovnbe
push
inc
mov
add
jmp
mov
cmpb
out
aad
push
mov
mov
sbb
add
rorl
mov
mov
repz
jge
pop
sub
mov
cmp
push
and
adc
pop
inc
movzbl
dec
outsb
mov
js
pusha
call
add
mov
sbb
bound
je
or
je
jmp
nop
cltd
xchg
push
outsl
mov
fdiv
fwait
and
push
sarb
sub
push
test
add
sbb
hlt
add
pop
in
xor
mov
pushl
cmp
or
mov
rolb
mov
test
sub
push
mov
jmp
or
or
or
xchg
orl
or
adc
sub
push
and
inc
call
fs
pop
adc
pushf
push
mov
jbe
lea
mov
lret
hlt
out
popf
cmp
mov
jmp
push
into
mov
or
cmpl
inc
cmp
rcrl
push
add
add
push
jl
cmp
xor
add
hlt
loope
inc
lea
jge
adc
xchg
imul
and
dec
es
scas
sbb
xchg
lea
push
test
jne
adc
or
out
sub
cwtl
push
jmp
push
mov
adc
andl
lods
or
cs
test
repnz
mov
cmpb
mov
inc
addl
inc
or
gs
jmp
or
aad
rorl
jge
pop
dec
subb
je
lds
sbb
dec
and
rcll
push
fmul
push
ret
sbb
push
jmp
sbb
push
cmc
cmp
fidivl
adc
xchg
sbb
andb
daa
mov
mov
dec
in
xor
dec
add
dec
adc
in
add
or
jns
clc
pop
test
xorb
movntps
inc
ret
ja
or
mov
sbb
outsb
lea
popa
shll
mov
aaa
stos
or
fcoml
xor
cmpsl
pop
je
xchg
pusha
add
cmp
cld
and
pop
xchg
mov
cmp
adc
jbe
dec
es
pop
pop
sbb
cltd
xor
add
loopne
xor
xchg
dec
inc
hlt
loopne
pop
jbe
mov
imul
sarb
add
sub
pop
pop
jmp
jb
lret
stos
jno
adc
cmpsb
mov
fisttpll
pop
pop
sbb
xor
rolb
push
in
testl
cli
adc
rol
and
cmp
inc
dec
adc
shrl
or
sub
jp
add
mov
rol
and
sub
in
xor
test
mov
pushf
mov
or
jg
fwait
pop
xchg
adc
push
cmp
add
adc
incl
pop
lahf
call
mov
mov
jmp
sub
je
inc
pop
or
dec
je
sub
sub
je
adc
es
mov
jmp
push
push
push
and
push
inc
mov
data16
clc
jle
fadd
addr16
dec
scas
push
cmpb
jl
or
cli
das
mov
cmp
jl
pop
pop
adc
inc
or
push
mov
out
xlat
inc
xor
mov
mov
inc
push
sub
enter
pop
scas
mov
mov
or
jno
push
or
jne
push
inc
out
nop
and
xchg
sar
add
jne
cmp
jg
xlat
mov
and
cltd
xor
sub
add
add
aas
hlt
cmovae
imul
add
js
add
adc
pop
cld
jmp
in
cld
gs
fbstp
fadds
fimuls
push
xor
stos
mov
sbb
inc
out
in
andb
test
push
jle
pusha
xchg
lahf
xchg
insb
mov
ljmp
sarl
xor
loopne
jne
fistl
data16
or
mov
sbb
outsl
jl
cwtl
add
rclb
in
sbb
stos
xorb
mov
sub
lods
push
and
lods
xchg
adc
jle
int
mov
outsb
and
pop
repnz
sub
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sarb
cmp
push
lods
lock
test
or
call
cmp
outsl
es
in
jmp
aaa
repnz
xor
int
sbb
jmp
sbb
jge
push
decb
sbbl
add
fildll
cs
add
fsubs
push
fldcw
xchg
imul
fmull
cmp
mov
cmp
jle
and
fs
jne
ret
mov
testb
or
mov
adc
ja,pt
adc
pop
gs
add
leave
mov
hlt
test
aaa
loopne
fwait
imul
and
jmp
adc
mov
fcmovu
jne
sarl
add
pop
push
mov
mov
mov
das
fbstp
fcomps
fsubrs
xor
xchg
repnz
out
and
pop
dec
xchg
testl
xchg
cwtl
mov
adc
jno
gs
vpmacsdql
add
add
add
test
or
push
dec
mov
loope
fstl
mov
lods
mov
and
jmp
push
cwtl
cmp
xorl
ljmp
lds
mov
pop
xor
mov
inc
inc
add
sbb
or
pop
test
nop
lret
sub
pusha
pcmpgtb
add
pop
inc
stc
in
inc
push
or
push
mov
sbb
mov
sbb
test
test
xor
and
pop
xor
or
jne,pt
fmull
xchg
add
add
mov
or
popf
loopne
lock
push
pop
sub
sub
pop
xor
push
out
shrb
stc
xchg
push
adc
mov
pusha
and
xchg
into
jge
xchg
fwait
hlt
add
xchg
lcall
testb
and
add
mov
rcrb
out
std
gs
cltd
mov
mov
sbb
mov
cmp
ret
jne
les
fisubs
popf
lcall
sbb
cmpsl
jb
sbb
fwait
jmp
sbb
xor
test
xchg
add
dec
push
pop
jp
dec
push
push
xor
nop
jmp
fdivr
aas
add
push
mov
sub
jb
or
and
or
xchg
and
es
out
mov
leave
int
lea
popf
push
clc
mov
or
add
add
je
jp
pop
adc
icebp
xor
xor
dec
jl
lret
push
lahf
push
xor
mov
add
movsl
push
stc
scas
call
sbb
lods
xor
movsl
sahf
rol
roll
loope
mov
or
lcall
push
js
repnz
mov
test
sbb
jecxz
icebp
mov
push
mov
mov
std
addr16
rorl
inc
inc
dec
push
lahf
push
mov
lock
cmp
inc
mov
add
sahf
mov
roll
or
out
push
pop
push
xchg
push
in
std
movsb
adc
jle
xor
out
xchg
add
loopne
or
or
arpl
fdivl
push
adc
xor
pop
xor
add
push
bound
je
jp
mov
add
push
push
mov
or
xchg
mov
mov
sub
sub
inc
daa
cmpb
pop
mov
ss
mov
je
aad
push
or
scas
out
in
mov
mov
push
cmpsl
mov
clc
es
popa
pusha
fadds
sti
fidivrl
add
mov
std
addl
in
jno
das
push
mov
xlat
pop
repnz
sbb
jne
push
push
or
rcrb
sub
mov
push
ja
jne
mov
movsb
and
dec
xor
repz
daa
test
addb
sub
out
mov
jmp
decb
sub
je
sub
je
scas
lea
push
ret
les
andl
cs
sbb
dec
lea
sarl
lock
fcomi
lods
add
jg
mov
inc
pop
ljmp
sbb
mov
jle
and
add
inc
sahf
dec
adc
ret
add
push
mov
les
je
push
jns
add
push
test
in
dec
aas
xchg
dec
in
jle
out
cmpsb
dec
add
push
xor
adc
dec
xor
jbe
ja
push
addr16
jo
add
add
sub
and
xor
sub
push
sar
cmp
dec
add
cld
mov
sbb
fcompl
pop
jne
sub
add
in
mov
shrb
mov
ficoms
xor
mov
or
mov
xor
dec
jle
mov
xor
jl
rolb
out
pop
arpl
pusha
popa
or
js
hlt
mov
sub
clc
scas
lock
lods
movsl
adc
loop
and
add
mov
outsl
or
pop
pop
cmpb
je
jae
or
push
mov
add
cmp
enter
xchg
add
faddp
sti
pop
mov
movb
lods
movsl
adc
hlt
push
mov
shlb
mov
aas
push
cmpsl
pop
push
enter
add
mov
xchg
lea
inc
sub
es
jge
or
call
sub
pop
dec
mov
cmp
rcrb
pushf
sbb
pusha
sahf
inc
push
mov
inc
rcr
adc
js
mov
mov
and
or
testl
push
cmp
shll
push
mov
inc
lds
pop
andb
cs
mov
ret
sahf
ret
pop
jne
inc
add
cld
test
push
push
mov
sub
push
dec
insl
xchg
xorl
add
icebp
dec
or
jge
push
les
push
les
mov
add
popa
sti
mov
rorl
jecxz
push
cmp
enter
jnp
mov
out
fiaddl
and
xchg
xchg
das
mov
sub
pop
inc
adc
pop
dec
cmpb
add
jmp
pusha
mov
or
dec
push
adc
or
jp
jg
mov
fnclex
clc
das
xchg
sbb
sbb
cmp
pop
cmp
sbb
cmp
jbe
int3
jno
cmp
movb
shrb
or
mov
loopne
fidivrl
loopne
or
sti
stos
add
sar
lret
push
adc
ljmp
or
adc
dec
lock
movsl
push
xchg
and
cltd
ret
inc
or
aad
mov
or
pop
adc
mov
pop
aaa
loopne
inc
add
cld
loope
in
mov
adc
leave
popa
and
pop
add
xchg
adc
cmp
cmpsb
adc
mov
or
fmull
int
hlt
clc
push
in
push
loopne
push
dec
loopne
aam
xor
test
insb
js
push
lock
or
mov
bound
and
dec
jo
ja
test
adc
clc
aas
xor
jb
into
xor
jl
imul
dec
scas
nop
add
push
adc
stos
mov
push
add
daa
aas
xor
inc
xor
lcall
and
add
push
imul
sbbb
inc
in
xor
rolb
jb
pop
mov
mov
or
fists
fwait
mov
lret
cmpl
inc
mov
inc
in
inc
sbb
popa
push
dec
add
in
or
data16
adc
mov
xor
or
loopne
int3
xchg
mov
cltd
fs
or
pop
insb
lar
mov
subl
adc
jae
or
int
enter
mov
xor
addl
pop
out
cmp
pop
pushf
or
jns
stc
push
cmp
pop
xor
lret
and
xchg
lock
mov
mov
pushf
jb
cmp
ja
xor
aad
fsubrs
sub
dec
ja
mov
fwait
or
sub
adc
dec
push
or
xorl
mov
loop
push
addr16
clc
xor
pop
cmp
jl
cmpsb
pop
push
xlat
lock
jl
cmp
pop
xchg
jb
addb
pop
or
mov
stc
lea
clc
dec
lahf
push
cmp
push
mov
and
mov
enter
clc
jne
es
movsl
push
push
test
rclb
iret
lret
js
add
xchg
stc
insl
mov
cwtl
adc
scas
fnstsw
test
add
mov
sbb
mov
jnp
sbb
pop
add
or
cmp
xchg
xchg
adc
inc
aaa
or
sbb
add
js
and
pushf
test
mov
inc
pushf
lcall
jae
daa
add
mov
or
repnz
enter
nop
sbb
mov
repnz
mov
out
push
dec
push
adc
cmp
loopne
mov
jbe
in
push
fidivrs
add
jne
cmp
dec
inc
or
and
add
mov
xlat
cld
fmull
inc
mov
xor
int
jne
pop
pushf
xor
pop
jae
inc
lock
aad
lods
or
mov
push
push
into
jle
push
movsb
push
popf
mov
or
popa
cmpb
xchg
fdivrl
test
fstl
cmc
cld
add
fstpl
shlb
cmp
sarb
or
dec
mov
dec
jmp
dec
mov
sti
or
xor
jmp
fs
and
jmp
add
jns
dec
or
inc
xchg
add
add
adc
out
xchg
add
loopne
test
inc
dec
pushf
push
je
sbb
loopne
add
xor
cmp
daa
lods
mov
add
insl
pop
jno
jle
adc
rol
mov
scas
push
xor
aad
in
add
xchg
imul
xor
cmp
jl
dec
inc
fdivrs
fimull
sub
inc
dec
jge
inc
push
leave
dec
scas
pushf
cltd
nop
adc
adc
jg
and
shlb
mov
cmp
jge
outsb
repz
jl
jne
sbb
push
jns
mov
sbb
lock
fmull
or
xchg
aaa
in
mov
and
cs
mov
cli
mov
dec
cmp
test
testl
jae
mov
mov
inc
ss
mov
push
addr16
ret
iret
es
jge
imul
cmp
fidivl
ret
ljmp
fsubrs
jecxz
fcomp
sub
mov
sbbl
icebp
adc
mov
xor
movsl
lcall
data16
popa
ret
int3
and
movsb
push
loop
shlb
enter
mov
xor
adc
add
test
push
xchg
in
setne
mov
shl
ds
fiaddl
mov
lock
es
push
mov
sub
loopne
sbb
stos
es
dec
call
jecxz
test
add
in
xchg
andl
xchg
inc
and
js
test
loop
pusha
xlat
sub
pop
inc
pop
out
and
sti
adc
add
add
push
cmpsb
or
sub
addr16
aaa
shll
mov
mov
and
xchg
les
lds
cmpsl
push
xlat
sub
xor
pop
and
cmp
outsb
sbb
dec
adc
inc
push
call
and
mov
add
cltd
mov
pop
sub
loope
push
add
adc
je
test
add
adc
dec
jne
sbb
stc
inc
loopne
out
push
je
cmpsl
rolb
push
clc
shlb
sarb
xor
pop
xchg
aam
inc
pop
stos
mov
fnstsw
pop
adc
les
dec
jge
out
daa
mov
cmp
mov
fwait
mov
or
push
mov
sub
jb
inc
mov
lods
repnz
push
mov
jne
dec
loopne
jne
test
pop
or
jmp
mov
mov
mov
shlb
or
aam
lock
inc
fs
das
movl
inc
add
pop
out
daa
adc
movsb
mov
enter
jo
mov
mov
mov
mov
mov
sti
sub
push
dec
dec
add
test
cmp
add
ja
sahf
jmp
cmp
push
add
mov
mov
dec
and
popa
mov
push
xchg
pusha
mov
inc
inc
cmp
sbb
dec
mov
xchg
call
add
sbb
cmpl
mov
mov
or
test
lret
jmp
pop
mov
in
mov
shlb
xor
push
js
add
xchg
cld
sarl
xor
stc
push
and
das
mov
jl
movsb
jecxz
daa
sub
pop
mov
dec
xor
mov
or
mov
inc
pop
add
rolb
inc
sub
add
xchg
sbb
fmuls
mov
mov
fdivrl
inc
mov
push
adcl
sbb
test
mov
sbb
and
adc
sub
fisubl
mov
pop
jo
enter
aam
fdivrs
ds
mov
jle
fwait
in
mov
xchg
int3
inc
dec
push
nop
dec
xchg
sub
mov
or
push
hlt
enter
mov
and
add
mov
lods
sbb
repnz
dec
xor
aas
inc
rolb
rol
mov
sub
sbb
push
fcomps
push
hlt
mov
push
cmc
xor
xor
dec
add
pmaxsw
mov
xor
jno
in
jg
jle
test
fs
pop
lock
in
dec
scas
insl
add
fs
cmpsl
data16
pop
jo
ljmp
push
cmp
cltd
pop
sbb
and
cmp
pop
push
cmp
clc
push
cmp
ss
cltd
dec
aas
out
in
pop
jecxz
cmp
test
push
call
popf
adc
jmp
test
call
inc
cld
gs
xor
mov
add
sarb
and
sub
loopne
out
testb
xchg
mov
jo
jne
push
pop
mov
push
jmp
mov
imul
hlt
mov
or
fwait
or
cwtl
ficoml
inc
and
rorb
ljmp
dec
pusha
insl
loopne
bound
add
clc
sbb
xor
in
jl
daa
pop
push
sbb
hlt
push
aam
and
push
or
sbb
int
mov
pop
or
inc
clc
and
pop
adc
jb
gs
jo
mov
js
inc
xchg
lock
inc
inc
loope
and
xchg
or
mov
inc
or
daa
lock
je
add
add
or
inc
lahf
cs
add
and
jecxz
cltd
in
fnstsw
add
jne
mov
in
ret
loop
and
xor
pop
lds
clc
sbb
fsubs
push
mov
enter
add
inc
jmp
loope
mov
ss
xchg
mov
mov
test
inc
add
mov
filds
push
adc
push
inc
out
jb
gs
cmp
test
inc
or
cmpsl
push
mov
lea
rcll
addr16
xor
add
push
sahf
and
inc
and
pop
fdivrs
xor
roll
cs
and
insb
xchg
mov
add
fbld
je
adcl
xchg
test
push
sbb
push
jecxz
rorb
cmp
inc
jb
incl
sub
mov
xchg
mov
adc
sbb
test
xchg
psubusw
dec
jl
lock
loop
mov
lret
pop
mov
stc
adc
int3
dec
andl
mov
pop
aas
inc
push
push
lock
push
or
in
dec
cs
sbb
inc
pop
jmp
outsl
call
mov
clc
cmp
test
mov
ss
or
or
cmpl
les
sarb
mov
jmp
adc
fwait
cmc
xchg
push
repnz
xor
inc
jne
mov
in
pop
mov
sub
in
xchg
ret
incl
pop
add
mov
or
daa
or
and
dec
sbb
jnp
xchg
lock
fiaddl
inc
stc
ret
mov
or
or
ja
nop
pop
andb
mov
inc
or
jg
int3
pop
add
inc
cmp
push
jbe
xchg
mov
inc
jecxz
rcll
stos
xchg
mov
daa
mov
mov
int
jg
dec
or
dec
xor
dec
in
inc
or
inc
xor
ror
cmp
pop
hlt
jmp
lods
adc
loope
in
repnz
mov
xchg
mov
bound
outsb
dec
mov
or
movb
mov
sbbl
adc
ja
pop
push
dec
cmp
dec
and
clc
test
fdivrl
mov
fdivs
fcomps
jne
cmp
jne
add
cmpsl
push
xchg
pop
ret
pop
add
push
insb
xor
mov
aaa
or
add
rolb
dec
cwtl
push
or
lea
pop
or
inc
sbb
dec
repz
dec
mov
rcrb
jo
or
add
jmp
cmp
xchg
push
rorb
in
push
fs
jns
in
inc
fdivl
aam
in
idivl
xor
push
je
repz
mov
lods
push
shlb
pushf
mov
fisubrs
mov
lods
pop
test
mov
cmp
jns
je
pop
insb
shlb
repz
push
dec
cs
mov
incb
or
xor
loopne
imull
sub
push
mov
int3
pop
ss
test
add
loopne
sbb
push
mov
adc
push
das
or
pop
or
das
ficomps
mov
xchg
ljmp
clc
cld
inc
hlt
ja
outsb
add
lock
in
push
mov
stos
rolb
dec
fsubrp
mov
loopne
push
sahf
sub
push
sarb
mov
pushf
les
mov
pop
fcomps
lock
out
outsb
iret
mov
xlat
mov
pop
lods
sbb
sbb
fbld
fucomip
mov
pushf
push
inc
mov
push
filds
push
pop
nop
push
mov
dec
pop
mov
mov
out
notb
pusha
push
sub
faddl
es
popa
rol
inc
cmp
cwtl
pop
mov
enter
or
iret
add
and
sub
nop
dec
in
mov
xchg
mov
enter
adc
lods
mov
in
cmp
test
movsb
dec
mov
jge
orb
add
in
inc
mov
or
sub
xorb
enter
xchg
mov
jl
nop
rolb
mov
nop
sbb
add
pop
mov
jae
mov
cmpb
ljmp
xchg
pop
call
test
mov
jp
jo
xor
lock
adc
pushf
mov
loop
out
cmp
outsb
not
outsl
push
int3
pop
fisttps
cmpl
sub
pop
mov
pop
data16
pusha
and
aaa
dec
cmp
adc
mov
lret
pop
dec
inc
pop
or
inc
mov
cwtl
das
pop
pop
inc
ficoml
and
inc
inc
or
mov
loop
sbb
test
xchg
mov
push
mov
ret
nop
mov
popf
xor
pop
fadds
leave
addl
mov
shll
flds
sbb
fldcw
test
test
dec
add
imul
arpl
sub
push
adc
jg
jae
jecxz
jge
add
sbb
je
mov
arpl
inc
mov
xchg
cwtl
xchg
xor
add
xchg
adc
xor
sbb
add
push
fdivl
adc
stc
push
adc
cmp
add
add
xchg
fsubl
push
leave
or
fistl
mov
leave
pop
std
dec
fdivl
inc
lea
jae
sbb
inc
repnz
jg
stos
xchg
into
shlb
mov
or
mov
jns
mov
mov
sub
fildll
mov
shld
ret
push
out
push
push
jmp
dec
push
mov
mov
lret
movsb
pop
mov
fs
dec
je
movsb
clc
xchg
fisubrs
mov
xor
and
mov
mov
and
shlb
xchg
dec
xor
cmp
inc
int3
cs
push
mov
cwtl
cmp
xchg
push
push
aam
fsubs
push
cs
fdivs
fsubrl
xchg
push
faddl
cs
cmp
in
mov
call
das
xchg
push
movsb
shl
fildl
xchg
and
je
xorl
push
adc
cmp
dec
add
pop
mov
inc
fs
jne
dec
loopne
add
fisttpll
cmovns
outsl
dec
inc
outsb
sti
jnp
dec
jb
pop
outsl
jb
inc
insl
jo
xor
jb
insl
and
fstl
sub
push
cmp
out
xor
insb
and
push
imul
inc
jae
pop
dec
add
push
roll
add
or
cwtl
cmp
clc
and
pop
xor
insb
mov
mov
test
and
jecxz
subb
cmp
mov
inc
fisttps
or
loop
idiv
fildll
insb
add
push
cld
push
xor
mov
dec
clc
push
insb
add
movsb
cmp
push
lods
sub
pop
pusha
push
inc
aas
push
in
fsubs
cld
push
adc
dec
dec
inc
or
nop
adc
dec
pop
xor
lea
sbb
pop
jae
and
xchg
add
ds
js
dec
pusha
jnp
inc
push
inc
mov
inc
add
push
addr16
or
pop
in
adc
mov
sub
xchg
ds
add
fildl
pop
ret
adc
addr16
sbb
mov
je
divl
adc
jl
add
mov
cs
xchg
fs
loopne
sbbb
sbb
sbb
outsl
repnz
add
outsl
dec
jecxz
pusha
mov
ds
or
loopne
iret
inc
jb
sbb
mov
add
cmp
adc
jo
adc
push
adc
ds
xor
mov
pushf
and
divb
adc
loopne
loopne
and
mov
dec
jo
aas
nop
pop
outsl
arpl
out
xor
mov
fmuls
cld
mov
nop
out
dec
in
adc
outsb
xor
add
in
in
pusha
in
fcmovne
mov
ds
or
call
mov
mov
sbbb
lock
mov
cmp
daa
fbstp
out
enter
cmp
adc
mov
push
and
in
lahf
add
shl
cmp
daa
inc
and
in
nop
pop
enter
sub
mov
test
push
push
add
cmp
test
sbb
cwtl
inc
sbb
scas
test
cs
add
in
fistps
jg
cmc
sub
dec
je
sbb
mov
gs
add
fs
dec
std
add
aam
repnz
ss
adc
inc
mov
mov
testl
pop
clc
mov
cmpsb
stos
clc
lret
pop
dec
hlt
mov
imul
sbb
dec
lock
in
enter
nop
lahf
in
fs
jae
scas
call
enter
add
xor
push
jnp
jae
rcrb
out
xor
push
mov
mov
int3
or
add
push
and
les
sbb
sub
fcoml
enter
add
sarb
or
add
loopne
or
faddp
mov
into
ret
xlat
sub
add
pop
sub
jmp
sub
or
into
xor
aad
jmp
adc
jb
das
and
scas
or
adc
xchg
in
xchg
xor
adc
cmpsl
push
xchg
jp
test
cli
pop
filds
cmp
add
add
vunpcklps
cmpb
add
lahf
ret
popa
je
sahf
add
jecxz
iret
push
xchg
pop
push
push
repnz
ss
insb
jnp
mov
add
ljmp
pop
dec
adc
mov
lret
subb
mov
hlt
loop
mov
sub
outsl
mov
call
add
test
or
inc
add
sub
mov
add
andb
sub
nop
fstpt
push
psadbw
and
les
inc
sbb
je
dec
and
outsl
negb
fcoml
and
fimuls
mov
lock
pop
inc
imul
lea
push
or
dec
or
lea
push
jno
popf
pop
mov
lea
filds
inc
sub
inc
pop
mov
inc
sahf
jmp
inc
addb
mov
adc
dec
repz
dec
testl
pop
test
test
out
sbb
faddl
cmp
fsts
push
jne
pop
and
mov
push
sub
pop
movsb
call
xorb
push
aas
jmp
cli
add
mov
mov
lret
jmp
sub
or
adc
xor
div
and
mov
jmp
inc
notb
cs
fnstenv
or
pop
pop
cmpsb
mov
sub
add
pop
ret
aas
leave
test
fdiv
faddl
fimull
mov
mov
or
jmp
sbb
add
adc
fmuls
cmp
test
adc
fsubr
and
lock
pop
das
fisttpl
test
inc
mov
aam
aas
fdivrl
or
adc
and
mov
enter
xchg
call
icebp
pop
mov
dec
call
dec
call
push
and
in
add
jp
push
xlat
inc
sub
adc
add
daa
sub
mov
push
lds
cmp
push
push
jne
jns
cmp
jb
inc
scas
or
push
add
je
dec
adc
cmp
aas
dec
in
xor
adc
loope
inc
add
fstl
sub
add
xor
inc
sbb
call
sub
mov
paddd
cmp
je
pop
jne
or
imul
pop
mov
inc
add
or
or
inc
iret
hlt
cltd
fistpll
xlat
in
fiadds
popf
or
in
call
cwtl
inc
mov
cmc
mov
shlb
pop
iret
outsl
pop
lahf
xchg
add
xlat
inc
arpl
sarl
mov
add
xchg
test
cmp
or
aam
in
dec
je
and
inc
mov
add
adc
in
fldl
clc
mov
pop
popf
cmp
jmp
inc
lock
sbb
aam
and
add
frstor
fs
xchg
mov
call
and
bnd
pop
lock
push
mov
or
fadds
pop
mov
cmp
mov
xchg
xchg
lds
int3
pop
movsl
aaa
dec
aas
or
xchg
cmp
out
xchg
pop
add
xchg
ljmp
shl
ss
test
or
shlb
sbbb
mov
adc
jecxz
mov
xchg
sbb
pop
dec
loopne
sbb
loopne
add
pop
add
enter
cmpb
jne
push
push
fiaddl
add
jne
or
jb
pop
sbb
test
ret
mov
push
or
or
pusha
mov
iret
pop
test
mov
clc
adc
pop
inc
sbb
mov
cmp
ja
adc
dec
mov
xor
out
icebp
or
sub
out
imul
cmc
jle
push
push
cmp
pop
pop
es
sbb
aaa
push
pop
inc
movsb
push
xor
out
cmpb
addb
add
pop
sbb
xor
sbb
ret
fimull
fimuls
movswl
xorl
ss
sub
xor
add
xor
test
xchg
pop
push
inc
lock
mov
or
or
loopne
sti
cmp
pusha
add
sub
inc
imul
jg
movsb
jne
orl
data16
xor
and
andb
movsbl
fcoms
mov
fcom
pop
inc
mov
mov
cmp
stos
jp
jno
adc
int3
and
push
mov
out
pop
adc
daa
loope
push
enter
add
ljmp
je
jbe
loop
jmp
cmp
cmp
sbb
mov
je
mov
repnz
adc
add
int
mov
pop
sub
dec
xchg
ds
stos
leave
call
cmpsb
cmp
xor
push
xor
mov
mov
rol
inc
add
xchg
mov
cwtl
aaa
mov
xchg
mov
frstor
sub
fs
xchg
sub
cmp
mov
xlat
cmp
jecxz
shr
mov
adc
add
test
inc
out
jo
popf
test
fldl
mov
enter
mov
sbb
push
pushf
xor
stos
cwtl
ss
push
loopne
in
dec
mov
or
nop
inc
sub
or
jecxz
mov
sbb
clc
push
fs
push
test
push
or
or
test
insb
xor
and
inc
and
fsqrt
clc
push
mov
or
push
lods
shr
push
test
adc
cmp
add
jmp
add
dec
push
adc
andl
mov
loopne
cmpsb
and
dec
and
frstor
jo
pop
cli
jne
dec
sbb
push
mov
mov
sbb
push
cli
add
pandn
mov
cmp
push
lods
rolb
xor
push
cmp
cmp
pop
insl
mov
adc
out
sahf
cmpsl
sub
mov
ja
nop
mov
pop
les
mov
adc
sub
dec
dec
js
inc
fistps
push
and
cmp
dec
adc
cmp
xor
inc
cmp
dec
cmp
inc
adc
cmp
adc
test
pop
in
pop
imul
or
fsubl
roll
and
xchg
popa
inc
pusha
xor
loopne
pop
mov
pop
jne
lock
int
int
call
fwait
ja
and
cld
mov
enter
enter
add
jmp
in
incb
cmp
mov
std
inc
or
mov
pop
pop
sub
jg
and
pushf
and
les
shlb
xchg
lea
cs
mov
mov
imul
mov
mov
pusha
ret
popa
pusha
cmp
mov
dec
mov
and
test
test
ficoml
cmp
mov
dec
dec
out
add
xor
and
mov
add
dec
mov
sahf
xor
xchg
and
in
jb
and
push
in
pusha
jmp
call
clc
mov
cwtl
mov
ss
cmp
addr16
and
subl
dec
pushl
testl
das
mov
and
bnd
stos
inc
xor
data16
add
mov
mov
cmp
push
or
add
inc
xchg
in
push
mov
stc
ret
sbb
dec
movsl
movlps
xlat
pop
mov
xchg
fstpl
fwait
sub
pop
inc
mov
fistpll
sub
stc
out
adcl
mov
add
push
push
jg
adc
mov
cmp
jb
rcr
cli
clc
lret
dec
sub
lock
pushf
add
out
aaa
inc
insl
jo
jns
dec
jne
add
sub
pop
xor
or
push
mov
and
mov
stos
jle
insl
cmp
add
inc
outsl
jne
or
decl
inc
jne
jb
outsb
arpl
pop
or
add
pusha
and
adc
rcl
or
xchg
xor
fwait
pop
xor
mov
push
outsb
imul
aas
inc
arpl
ss
xor
push
xorl
xchg
pop
dec
pop
inc
jbe
adc
aaa
call
push
add
sahf
dec
test
jmp
adc
mov
cli
ja
sti
and
es
test
es
dec
data16
pop
repz
inc
sti
rcrl
les
push
lods
dec
cmp
lea
sbb
jl
cmp
or
xorb
ret
xor
loopne
sbb
mov
cmp
popa
xlat
push
mov
hlt
pop
dec
pusha
add
imul
xchg
push
nop
xchg
outsl
and
enter
and
mov
in
jns
dec
xchg
xor
outsb
jns
das
popa
sbb
test
outsl
rcl
bound
gs
push
push
dec
and
pop
jo
pop
jle
sahf
repz
lea
sahf
aam
push
xor
sbb
loopne
jne
push
ljmp
push
movsb
addr16
push
push
insb
jnp
pop
aas
test
dec
xorl
pop
mov
cwtl
cmp
negl
jne
pop
add
jo
jb
push
mov
sub
sbb
icebp
jle
popa
push
orl
adc
push
dec
push
jl
adc
jmp
lds
clc
jp
insl
jge
cmpsb
les
cmp
je
pop
adc
bound
xchg
or
dec
das
pop
pop
push
jb
fadds
mov
cmp
inc
call
lea
add
add
sets
push
dec
push
mov
lock
push
mov
call
cli
adc
dec
jo
mov
xchg
push
pusha
xor
fstpl
cs
iret
add
xor
js
lock
je
adc
push
mov
push
adc
repz
add
mov
push
and
sbb
fsubs
or
call
push
push
stos
push
das
shrd
add
inc
adc
mov
xor
psubusw
test
testb
enter
pop
and
dec
mov
scas
push
addl
cmp
or
add
jb
or
jbe
dec
pusha
sbb
or
cld
inc
pop
mov
jns
xchg
sti
cmp
out
divb
xchg
cmp
setg
inc
mov
lods
movsl
sahf
and
fnstenv
loope
pop
jbe
sbb
xchg
sbb
add
lock
andb
cmp
daa
or
adcb
cld
pop
je
xchg
jl
inc
xor
inc
sbb
ljmp
or
xchg
leave
lahf
sbb
and
mov
mov
lea
pop
js,pn
subl
dec
jne
movl
or
xor
mov
xor
pop
ficoml
cmpsl
add
mov
scas
pop
mov
push
jb
pop
lock
pusha
mov
xchg
mov
loop
xchg
fs
out
xor
cld
sbb
mov
and
mov
pop
or
jne
stos
test
repz
mov
outsl
loopne
mov
mov
or
mov
push
jl
iret
aam
and
inc
sbb
call
repz
mov
xor
cld
xor
mov
loopne
push
pusha
sub
and
jmp
in
lods
shrd
in
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwtl
cltd
lcall
popf
sahf
lahf
in
in
addb
in
test
or
xchg
les
mov
cmp
mov
add
dec
pop
jbe
add
pop
xor
sub
mov
rolb
adc
ljmp
sbb
decl
adc
sbb
test
jne
sbb
data16
push
cs
dec
xor
cmp
jle
loope
dec
popa
sub
cmpb
testl
les
aaa
stos
fcomp
cmp
jge
loopne
cmp
inc
pop
scas
cmpsl
mov
sub
lods
imul
out
add
jl
test
pop
inc
gs
push
or
testb
mov
lock
pop
xor
fbld
sbb
mov
add
or
push
or
out
test
insb
cmp
je
mov
dec
js
and
xor
mov
loopne
mov
jle
in
je
jmp
cmp
or
test
out
jne
scas
xor
cmp
aas
pop
je
scas
add
outsl
outsl
push
lar
decb
ja
fwait
add
sti
adc
sbb
add
mov
aam
add
jb
cld
push
add
add
jae
es
add
mov
fimull
pop
jle
xchg
call
into
sti
adc
aaa
mov
in
ds
call
push
adc
mov
mov
shll
ja
jb
xor
xor
push
add
out
lret
xchg
das
lock
mov
or
xor
sahf
push
fdivs
jnp
jle
adc
add
call
dec
push
out
jne
xlat
or
xchg
outsl
decl
mov
lods
cmp
lcall
and
inc
and
xlat
pop
loope
xorb
adc
adc
test
outsb
adcl
push
push
add
clc
sub
xor
push
bswap
je
js
or
cs
or
jbe
popa
xlat
push
add
psubusb
mov
sbb
stc
add
out
cwtl
adc
adc
inc
add
jno
sbb
lods
rorb
mov
add
add
or
pushf
inc
movl
pusha
adc
cmp
lods
hlt
and
inc
fwait
test
decl
fadds
jecxz
test
inc
xor
cmp
lret
idiv
and
add
xchg
add
mov
xchg
in
lds
cmp
push
mov
mov
xor
iret
lods
pop
add
test
dec
or
outsb
push
cmp
ja
mov
adc
scas
cmp
test
out
and
jnp
cmp
and
or
inc
mov
xchg
repz
mov
push
fistl
or
sbb
fldl
add
inc
add
cmp
or
cmp
or
mov
andb
pop
lret
add
sub
pop
inc
jo
sarl
jecxz
test
out
and
fadds
in
add
out
sub
and
or
mov
push
out
sub
fst
scas
test
dec
push
mov
and
jg
mov
sub
inc
imul
loopne
sahf
jge
mov
inc
shr
pop
jmp
sbb
sub
fucomp
push
and
int
inc
sbb
inc
mov
in
loopne
jp
aam
mov
jp
shll
shlb
pushl
pushl
jge
add
call
js
mov
add
adc
pop
add
out
loopne
fdivl
mov
ja
jae
jne
mov
cmc
pop
adc
sbb
jecxz
clc
dec
or
dec
add
jmp
icebp
jbe
fnstcw
mov
aam
js
cmp
lret
sub
jbe
mov
inc
fwait
or
sahf
adc
jo
loope
rcrb
pop
scas
das
jno
stos
pop
adc
pop
mov
mov
test
fbstp
push
xor
jb
popa
mov
pop
pop
cs
cwtl
adc
pop
in
inc
test
add
push
inc
imul
test
data16
cs
data16
outsl
push
sarl
ja
sbb
sbb
adc
pusha
pop
mov
outsb
sbb
scas
rorb
les
jns
movsb
add
pop
inc
insb
popa
aam
sbb
xchg
sahf
movsl
mov
roll
shrb
push
push
mov
mov
inc
je
insb
or
cmpsl
or
dec
imul
inc
adc
out
nop
insb
test
or
clc
rcrl
test
or
dec
sarb
xorl
gs
add
icebp
sbb
or
or
cmp
or
dec
gs
xor
jae
sub
cmpsl
outsb
fldl
je
aaa
int3
xchg
loope
cs
aaa
jnp
lret
jb
jns
jbe
push
mov
xchg
packssdw
push
fs
adc
add
mov
mov
shlb
sbb
daa
cmpsb
push
icebp
adc
sub
dec
and
mov
mov
pop
lods
pop
jl
jl
mov
push
xor
lods
outsb
mov
scas
mov
daa
or
cmp
ds
mov
or
das
push
and
in
test
or
mov
scas
jmp
push
inc
jo
ljmp
nop
cmp
orl
or
mov
xchg
mov
popa
add
imul
scas
in
jb
jo
inc
int3
jae
inc
sbb
pop
mov
add
fwait
imul
mov
les
outsb
insl
jo
xchg
sub
xor
sbb
dec
and
sub
jo
or
enter
cwtl
fsubs
arpl
pop
mov
outsb
adc
das
adc
in
inc
xor
xor
mov
or
cmp
cmp
cwtl
outsb
push
sub
add
pop
add
and
jmp
lcall
aas
or
mov
js
roll
dec
pushl
xchg
push
outsb
cmpsl
or
mov
push
out
add
ss
push
inc
pusha
inc
push
push
sbb
loop
lcall
sbb
arpl
mov
jae
test
or
add
movl
fwait
jo
test
mull
sbb
mov
mov
xor
adc
sub
xor
mov
cs
dec
push
aaa
in
cmp
pop
add
push
xchg
loopne
add
sbbb
addb
cwtl
lahf
fbstp
dec
cmpsl
adc
sub
movsl
adc
xorb
xor
fstpl
sbb
nop
sub
cmovns
jae
outsl
jo
inc
fs
jo
lds
das
pushf
jae
push
rclb
sahf
cmpsb
or
scas
cmp
into
test
scas
sbb
sbb
inc
pop
push
fidivrs
push
adc
testl
mov
inc
nop
inc
xor
xor
cmpsl
sbb
jl
sbb
mov
push
cmp
cld
test
jbe
xor
mov
fadds
xor
push
sub
push
dec
dec
mov
mov
push
mov
pop
cmpsl
cmp
jl
in
push
mov
sbb
or
rorl
stc
sbb
ljmp
adc
cmp
mov
mov
ret
out
fadds
pop
sbb
imul
insb
push
push
mov
movsb
test
pop
sbb
push
js
jl
outsl
xchg
mov
cld
push
and
push
xchg
xor
push
lods
push
je
pop
jb
push
inc
push
push
push
pop
jnp
mov
push
movsb
inc
hlt
jle
mov
push
imul
xchg
push
gs
dec
adc
lock
lahf
or
inc
ret
das
adc
sahf
dec
pop
cs
jae
mov
push
pop
aam
pop
push
ljmp
fistpll
mov
push
fists
cmp
roll
movsb
inc
push
fbld
sub
mov
push
dec
loop
repnz
jne
fsubr
hlt
adc
and
in
inc
fs
ds
inc
shll
addr16
and
or
or
push
sbb
popa
xor
adc
aaa
xchg
dec
fistps
xchg
enter
dec
adc
mov
jae
enter
popa
inc
int3
pusha
xlat
repz
xchg
jl
inc
and
and
fsubl
cmpsl
sbb
testl
mov
repz
in
or
cmp
nop
add
nop
adc
sbb
nop
add
and
mov
add
jbe
insb
adc
adc
mov
push
push
out
and
sahf
out
sahf
jno
lea
out
and
or
xchg
faddl
sub
pop
cld
sbb
mov
pop
cmpsb
sarb
rolb
shl
sahf
mov
int3
fcoms
inc
pop
movsl
push
fbld
mov
shll
aas
or
leave
or
push
adc
sarb
push
leave
jae
sub
rcl
cmpsl
arpl
aaa
adc
inc
and
push
es
inc
lahf
jl
and
xchg
out
push
enter
mov
lods
or
jge
mov
ds
sbb
loopne
andl
popa
test
ret
pop
inc
xor
push
lahf
ds
pop
or
lfs
jo
pop
ss
enter
gs
inc
sarb
cmp
mov
stos
mov
xchg
sbb
aas
test
fmuls
push
mov
inc
das
inc
adc
outsl
xchg
addl
fs
add
aaa
lret
std
and
push
xor
pushf
aas
add
sbb
inc
int
dec
sbb
cmpsb
clc
inc
push
in
dec
and
mov
dec
pop
ss
lock
fdivrs
lock
in
mov
xor
xchg
push
xor
leave
push
push
cmp
inc
les
das
lock
inc
enter
out
mov
rcrb
loopne
or
js
inc
pop
mov
adc
pop
adcb
inc
cli
stc
clc
push
mov
idiv
cmc
push
push
push
loop
push
jl
test
jns
out
mov
fidivrs
mov
push
pop
test
icebp
sahf
negl
mov
js
push
or
push
xlat
pop
and
pop
nop
mov
inc
mov
flds
inc
jne
add
nop
fstl
xor
pop
add
test
push
popa
scas
daa
out
ret
push
aad
jo
adc
aam
iret
repz
rolb
or
test
and
inc
push
in
jge
mov
imul
loope
imul
push
and
push
xchg
pop
push
pop
push
and
sub
and
sbbb
mov
sbb
into
repz
and
inc
and
mov
push
aaa
sub
sbb
and
imul
dec
push
dec
dec
fs
add
jb
dec
add
xchg
add
add
clc
push
push
data16
push
sti
nop
adc
icebp
xchg
push
fiaddl
popf
gs
mov
push
add
dec
adc
cmpl
sub
je
sub
jno
xchg
pop
ds
or
pop
adc
ss
jle
add
jb
jne
lods
scas
roll
test
ds
cmp
cs
inc
les
mov
int
add
js
clc
xchg
jmp
cmp
jo
dec
cmpb
sbb
bound
xchg
cmpsl
ss
iret
je
test
push
aad
and
jmp
add
push
les
outsl
pop
or
shl
lret
lcall
outsb
add
cld
sub
cli
jne
lahf
outsb
pusha
jae
and
jmp
sbb
adc
adc
add
adc
or
mov
push
inc
ljmp
mov
pop
sbb
sbb
sbb
cmpl
ret
aaa
ja
jl
mov
adc
rorl
punpckhbw
or
push
add
aas
lcall
add
xor
clc
mov
imul
and
enter
out
push
pop
xlat
cmc
and
push
and
pop
sbb
test
mov
or
sbb
mov
pop
or
push
inc
push
int3
sbb
mov
or
in
add
cmp
hlt
loopne
or
dec
xor
filds
cld
cld
push
sub
xchg
std
add
dec
or
inc
mov
mov
or
loop
sbb
jno
push
lods
inc
fldcw
ret
xchg
mov
mov
xlat
inc
fcmovu
scas
jecxz
sub
or
sub
pop
cmp
lods
add
pop
inc
inc
hlt
cmp
jecxz
popa
cwtl
dec
addr16
cmp
pusha
xchg
and
sbb
pop
or
sub
subl
popa
loopne
push
nop
add
or
lods
call
imul
imul
dec
imul
sbb
pop
add
dec
sbb
adc
aad
xor
imul
xchg
sbb
les
push
imul
mov
inc
test
cwtl
jp
repnz
pop
xchg
test
call
lea
arpl
ds
or
cld
lds
jl
sbb
movb
push
movsl
cmp
cmc
iret
fucom
negl
push
pusha
subl
xchg
jmp
ja
jl
inc
push
dec
call
dec
jne
mov
push
stos
add
xchg
call
outsb
lds
inc
sbb
xchg
or
jg
lock
sarb
xor
add
lcall
cmpsb
dec
outsb
test
inc
xchg
dec
in
xchg
enter
dec
lahf
das
mov
or
push
pop
jg
sbbl
xchg
sbb
jmp
mov
outsb
jns
call
adc
dec
cmp
push
nop
lock
inc
ret
jne
push
sbb
sbb
mov
leave
and
mov
xchg
shlb
inc
or
jl
inc
push
call
or
push
in
xor
xorb
add
imul
jae
sbb
icebp
cmp
pop
push
xor
cmpsb
pop
icebp
in
mov
decl
jne
ja
add
js
rcrb
lock
add
mull
lahf
adcb
inc
aaa
sbb
sbbl
outsb
ja
push
pusha
jge
jle
push
es
jge
and
int
sarl
and
mov
outsl
push
mov
xorl
dec
dec
scas
rol
loop
out
ficoml
lea
mov
pop
icebp
mov
hlt
adc
popa
add
rclb
mov
pushf
or
test
mov
add
mov
insl
lods
loopne
jmp
mov
adc
mov
mov
leave
enter
add
cmp
rolb
mov
xor
dec
addl
mov
xchg
jae
sub
xchg
stos
and
pop
aas
cs
nop
dec
adc
inc
xor
add
push
push
nop
push
arpl
or
push
sub
add
gs
incl
rol
xchg
and
and
cmpsl
add
clc
jecxz
mov
xor
pop
add
lods
ret
adcb
mov
jae
pop
orl
and
aam
mov
loopne
fbstp
or
mov
ret
adc
dec
sub
xor
sub
adc
mov
aaa
lock
arpl
dec
loop
loopne
sbb
sbb
loop
ds
jmp
jmp
push
je
lods
sbb
cmp
and
mov
and
mov
fisttps
xor
dec
and
adc
xchg
push
and
or
dec
push
pop
mov
cwtl
ss
cmpsl
popf
into
fildl
in
pop
test
scas
enter
adcb
ss
shll
sbb
icebp
or
scas
pop
lar
roll
aas
js
dec
inc
or
or
pop
ss
addr16
dec
inc
cmp
add
or
or
xchg
aam
jnp
or
mov
mov
adc
pushf
es
pop
mov
mov
fisttps
mov
cmp
inc
das
jo
ss
pop
popa
and
ljmp
or
push
mov
cmp
sbb
jmp
movsb
pop
mov
mov
add
fwait
clc
mov
lea
add
jae
mov
dec
cld
mov
jmp
sbb
xor
mov
inc
pop
lret
jmp
push
jle
push
inc
sarb
jne
pop
add
sbb
sbb
mov
or
sub
sbb
lret
mov
push
sbb
pop
mov
mov
add
or
mov
mov
sbb
loop
xlat
adc
xor
pop
mov
fcmovb
es
pop
mov
call
je
in
movsl
in
ss
jbe
clc
and
unpckhps
sub
ret
clc
jmp
inc
ja
push
mov
lods
push
aad
mov
insl
rol
sbb
xchg
dec
push
xor
cmp
cld
cmp
push
sbb
popl
cmp
push
adc
mov
pusha
pop
add
test
ss
or
sbb
sahf
mov
aam
add
xlat
arpl
pop
mov
loopne
pop
insb
mov
out
push
xchg
pop
lcall
push
add
fisttps
xor
sub
cmp
fbstp
adc
cmpl
or
xchg
je
dec
inc
cmpsb
cld
not
fs
imul
imul
xor
cmp
cmp
pop
cmp
clc
je
ficoml
hlt
ret
adc
cmp
mov
insb
xchg
rclb
mov
or
test
arpl
cmp
adc
sbb
jno
mov
pop
push
cmp
dec
cmp
jge
and
pop
or
negb
inc
or
cmpl
cmp
imul
xchg
test
pushf
push
arpl
sbb
pop
das
nop
and
push
dec
sub
sbb
jge,pt
or
imul
ja
add
pop
push
or
psrlq
or
scas
test
adc
cmp
incl
out
cmpb
xor
popf
add
ret
scas
push
mov
or
adc
in
jmp
jb
push
push
cwtl
or
adc
mov
pop
cld
shlb
xorb
cmc
decl
loop
jge
sub
xor
shl
loop
adc
or
aaa
fs
inc
cmc
mov
icebp
mov
or
push
inc
xchg
sub
and
mov
loop
sub
add
dec
pop
aaa
sub
sahf
adc
mov
adc
addl
mov
into
ljmp
mov
xchg
mov
popa
jo
mov
mov
aam
sbb
test
outsb
aaa
mov
in
mov
lret
xor
or
and
jmp
and
push
mov
mov
lret
jmp
popl
lret
loope
xchg
aad
sub
add
dec
pop
mov
ret
pop
add
xor
sbb
jp
decl
jle
sbb
jae
or
sbb
and
inc
push
out
or
add
cmp
ret
fmulp
shlb
call
xchg
xor
loop
mov
sbbl
enter
xchg
xor
or
xchg
insb
roll
push
cmc
shl
xlat
sbb
sbb
incl
loope
dec
enter
in
rorl
or
inc
inc
inc
loop
cwtl
xchg
add
sub
or
das
add
dec
mov
sub
jg
dec
hlt
dec
and
cmpb
xor
loope
outsl
out
mov
xor
rol
mov
mov
and
je
pop
mov
aas
inc
and
and
aaa
fucomp
mov
shrl
mov
pusha
mov
movb
push
int3
inc
arpl
cmp
enter
js
inc
flds
jne
scas
jmp
dec
pop
insl
cmpsl
loop
jne
add
cmp
or
rclb
ja
and
push
mov
aaa
ret
adc
test
mov
and
scas
shrl
add
and
imul
ret
daa
mov
scas
ja
cmp
push
mov
es
out
add
popl
and
jge
xchg
xor
clc
aas
adc
pop
sar
mov
shl
pop
int3
push
push
in
cmp
je
inc
xor
dec
or
je
popa
sbb
mov
inc
adc
fisubl
inc
jnp
shlb
push
out
clc
push
ss
popa
sub
adc
mov
sbb
cmp
jae
add
pop
pop
dec
or
je
stos
adc
btr
push
hlt
lock
add
mov
push
push
inc
adc
fs
mov
fadds
add
outsb
mov
int3
fimuls
mov
add
cmp
inc
stos
mov
push
and
bt
jb
ja
jg
ss
mov
ret
ret
popa
mov
push
inc
cmp
jne
inc
decl
jne
les
pop
inc
mov
inc
mov
xchg
subl
imul
movb
adc
fwait
or
inc
mov
push
add
push
inc
or
adc
pop
pop
adc
lea
inc
in
mov
ret
or
sbb
mov
cmpl
mov
mov
xchg
mov
add
sbb
rorl
imul
fst
aaa
rorb
addr16
mov
fdivrp
adc
out
ret
mov
pop
stos
shlb
jb
sbb
rclb
adc
lret
mov
adc
js
cmp
jno
jne
inc
adc
dec
lods
aaa
ja
addl
inc
mov
cmp
mov
pop
mov
jae
or
add
data16
ljmp
push
or
inc
jno
jg
mov
cmp
sbb
lahf
or
hlt
sbb
cmpsb
fbstp
loop
jmp
inc
jle
push
dec
xor
push
or
out
pop
cltd
in
inc
pop
or
sbb
std
pop
pop
jns
sub
andb
push
or
xor
sub
movsl
push
frstor
sahf
int
cwtl
or
pusha
cwtl
adc
and
rclb
daa
mov
js
rcrb
inc
dec
mull
adc
sub
pop
imul
lock
lock
inc
jb
sub
call
jno
lret
enter
jnp
pop
xor
fstpt
mov
mov
or
xchg
xchg
rcl
push
add
shrl
inc
cs
xchg
shll
mov
rcrb
push
mov
adc
pop
push
add
xchg
out
add
test
inc
and
js
xchg
xchg
call
adc
outsb
cmpb
add
and
daa
dec
clc
xchg
nop
jge
enter
jmp
and
rol
inc
mov
sbb
in
inc
inc
and
xor
push
push
dec
lock
mov
jnp
lret
imul
xor
push
dec
shll
jae
jmp
dec
dec
in
inc
mov
test
lea
mov
xor
fdivrs
push
cs
cmp
lcall
scas
in
sbb
rcll
ret
or
xchg
into
sbb
pop
push
leave
mov
out
out
cmp
pop
aaa
dec
adc
movb
iret
lds
mov
jo
inc
pop
shlb
add
push
or
dec
lock
sarb
rcr
pop
adc
popa
dec
stos
and
loope
aad
sbb
cmc
or
imul
ret
inc
movlps
lds
inc
inc
jae
fstl
dec
into
mov
sbb
mov
push
inc
arpl
add
pop
loopne
push
cmpsl
call
ret
adc
cmpsb
sahf
sub
mov
loopne
mov
cmpb
orb
sbbb
add
aas
pop
or
add
add
call
cmp
inc
lret
push
mov
fs
fistpl
cmp
ret
stos
lcall
adc
rcr
add
in
in
adc
mov
add
loop
shlb
xchg
cld
test
sbb
inc
ret
addr16
test
subl
hlt
scas
cmp
insb
xchg
adc
loopne
imul
dec
and
and
fcoml
add
cmp
pop
das
pop
pop
sub
lahf
pop
in
mov
and
fiaddl
lret
shlb
and
add
loopne
inc
mov
and
or
mov
nop
loopne
bound
adc
sub
dec
mov
and
subb
popl
divb
xchg
cli
push
jmp
lcall
jecxz
negl
adc
scas
shr
lahf
and
ds
cmp
je
inc
xor
push
cmp
or
pop
push
popa
nop
sub
xor
dec
or
and
pop
jno
loop
push
lret
pop
das
jp
adc
xor
enter
inc
andb
out
daa
ljmp
pop
subb
push
push
nop
inc
add
cmp
dec
cld
loope
jmp
sub
lret
push
or
mov
out
sub
adc
cmc
inc
dec
mov
test
addr16
push
and
push
popa
adc
cwtl
cmp
dec
cmp
mov
imul
bound
jo
add
dec
inc
dec
push
adc
push
and
or
rcrl
call
out
sub
imul
les
jmp
hlt
imul
iret
iret
dec
xchg
shrb
mov
or
dec
sub
aad
pop
mov
mov
push
cmp
dec
sti
dec
scas
sbb
push
ds
inc
sub
mov
aas
movsl
push
pop
adc
push
gs
pop
cmpsl
jge
sbb
dec
mov
push
out
adc
out
orb
adc
dec
mov
push
pop
jno
lea
jno
loope
adc
repnz
pop
lods
out
mov
das
push
rcl
mov
sub
push
cwtl
push
enter
std
daa
xor
push
sub
rcll
mov
jmp
fdiv
mov
mov
ss
or
je
or
or
enter
jle
test
std
cmpb
jne
or
push
cmp
ret
push
sub
notl
cmp
mov
adcl
popa
pushf
adc
push
add
push
clc
js
fimull
push
test
aam
lods
add
aas
jecxz
mov
add
aas
les
incb
mov
jg
pop
pop
jne
je
mov
testb
orb
sbb
dec
inc
loope
mov
sbb
je
sub
in
scas
stos
fcompl
neg
inc
or
push
or
add
scas
sub
inc
mov
test
daa
inc
addr16
xor
loope
add
adc
cs
pusha
or
adc
pop
cmp
sbb
insb
mov
cmp
lahf
jo
out
leave
fdivrs
inc
dec
mov
xchg
mov
ret
addr16
dec
pop
data16
sub
mov
mov
enter
aaa
sub
sub
adc
mov
xchg
test
pusha
dec
adc
inc
shrl
sub
push
addb
and
pop
adc
test
lea
cmp
imul
adc
or
push
movsb
sbb
roll
or
aas
xchg
push
xor
in
inc
int3
frstor
imul
inc
dec
rorb
mov
mov
testb
pop
add
pop
add
add
push
loopne
testl
pop
das
ficoml
js
je
jg
xor
fisttpl
shr
sub
pop
sbb
jge
insb
xor
lea
mov
dec
add
shl
or
or
mov
aam
jbe
jge
xchg
mov
xor
push
sub
int
cmpsl
adc
pusha
inc
popa
xchg
cltd
cmpsl
bound
test
inc
adc
aas
add
pop
ret
aam
add
mov
dec
xor
jns
pop
add
mov
push
fcmovbe
or
mov
cmp
mov
push
mov
imul
es
add
push
pop
mov
xor
inc
lds
movsl
xor
pop
adc
scas
adc
inc
sbb
scas
inc
int3
or
cmp
sbb
or
nop
and
ret
jns
mov
mov
xor
jl
dec
add
mov
xchg
push
add
lret
push
sarl
in
jl
nop
xchg
cwtl
mov
dec
push
push
jne
add
push
cmp
shr
out
mov
or
and
mov
push
jl
jp
arpl
and
test
mov
or
or
jecxz
jge
inc
dec
inc
jge
sbb
jle
xchg
clc
mov
ret
pop
pop
inc
mov
and
inc
fsubl
jl
xor
pusha
clc
add
rcr
lock
xor
je
add
cltd
rol
push
nop
lock
xor
push
xor
or
in
sahf
clc
lret
or
enter
mov
shr
xchg
xchg
inc
push
jge
or
or
and
dec
bound
loopne
out
adc
sbb
sub
mov
mov
ret
cmpxchg
pop
sbb
mov
push
sti
pop
ss
cmp
scas
lock
icebp
inc
xchg
test
pop
insl
ret
jno
dec
fsubr
ss
sub
fwait
call
dec
mov
mov
or
ja
jle
inc
movsb
cmpl
cmpl
xorb
add
add
sti
jb
sbb
pop
mov
add
outsb
adc
jo
jecxz
cmpsl
lcall
mov
sbb
andb
stos
xor
mov
cmpsl
outsb
insl
mov
lea
or
mov
sbb
call
or
hlt
out
xor
add
inc
sbb
es
dec
add
adc
movsb
bound
inc
std
mov
xor
push
out
mov
jecxz
sub
push
movsb
aam
rcrb
lret
mov
cmp
fisubl
mov
push
mov
leave
mov
ret
mov
cwtl
loopne
add
pop
outsl
mov
in
adc
cmp
vcmppd
shl
inc
pop
in
sbb
xchg
xor
adc
cld
loop
bound
mov
pop
stos
add
push
or
jnp
sbb
jmp
push
dec
xor
outsl
cwtl
sbbb
cltd
cmp
add
jbe
bound
scas
add
pop
mov
push
stc
dec
inc
adc
dec
dec
in
sub
push
dec
cmp
repz
mov
xchg
jne
rclb
rclb
sub
cmpsl
movsb
or
adc
push
enter
sub
push
clc
clc
or
jae
lahf
pop
mov
out
call
negl
cs
filds
mov
adc
sbbb
add
xor
mov
pushf
int3
shrb
jo
cmp
push
pusha
out
insb
mov
add
inc
in
out
dec
dec
push
push
jg
adc
lahf
mov
and
data16
test
or
sub
mov
fdivrl
add
push
push
push
in
icebp
inc
jbe
rcl
jmp
pop
addl
xlat
xor
add
add
add
nop
icebp
dec
cmpsb
adc
mov
mov
or
test
jbe
ret
or
flds
sub
repz
or
fwait
cmp
out
add
xor
aam
add
fucomp
arpl
xchg
jae
sarl
xchg
loopne
loopne
in
inc
pusha
popf
inc
and
xor
ret
sbb
lret
pop
jno
mov
sarb
pop
les
sub
xor
pop
shlb
sub
or
clc
jo
aam
or
and
mov
pop
sub
test
jle
cmp
push
cmc
push
and
icebp
or
ror
or
mov
imulb
cmc
add
je
dec
or
pushf
or
add
add
sbb
or
push
and
fadd
or
push
je
rcrl
xchg
or
lods
mov
jne
icebp
mov
inc
ficoms
imul
mov
sub
dec
sbb
or
icebp
adc
mov
add
movsl
movsb
cmp
jge
data16
xor
lods
lock
sub
lcall
test
imul
add
cmp
clc
ficoms
jne
dec
pop
pop
adc
mov
mov
add
lods
mov
or
add
daa
or
sub
rorb
adc
shl
ljmp
in
out
in
ja
clc
xor
clc
add
dec
sub
jnp
jle
or
mov
adc
mov
xor
dec
mov
lret
and
dec
mov
in
filds
inc
inc
or
insl
enter
pop
mov
insb
insl
stos
xchg
dec
add
ret
mov
or
repnz
and
and
in
add
fst
pop
adc
pop
sbb
mov
test
mov
push
push
stc
xor
adc
and
xchg
sbb
out
nop
pop
pop
movb
jg
dec
fstl
pop
or
jns
mov
pop
popf
ret
inc
lahf
mov
or
lods
pop
or
fisttpl
sbb
ret
ja
jmp
nop
sbb
xchg
adc
pop
js
dec
sbb
in
arpl
lock
push
sbb
or
fcoms
dec
and
pop
adc
incl
push
push
jb
jo
imul
xchg
fs
sbb
arpl
sub
iret
out
mov
rolb
push
mov
adc
imul
or
inc
imul
adc
and
movsl
or
pushf
xchg
sbb
ja
int
lods
fidivs
pop
push
cli
outsl
fs
mov
sub
mov
lea
sti
mov
xchg
aaa
cmp
inc
cwtl
add
scas
lret
push
shrl
or
rolb
cld
dec
fistps
je
cmc
push
add
sub
faddl
mov
add
push
aaa
push
movb
movb
sar
sub
adc
pop
fidivrs
and
cmpsb
mov
cwtl
addb
aas
xchg
inc
clc
jecxz
data16
and
addr16
jmp
mov
lods
sbb
jo
add
jae
scas
out
dec
imul
test
mov
cmp
push
xchg
mull
shlb
mulb
xor
data16
and
outsl
outsb
sbb
mov
nop
out
and
sbb
and
idivb
sub
outsl
add
mov
loop
cld
xchg
xor
inc
clc
aaa
adc
inc
lea
pop
xchg
push
xor
jp
outsb
cmpl
sbb
pop
push
in
cld
adc
rorb
cmp
and
adcl
add
movaps
fdivs
xor
or
incb
push
test
mov
movl
jo
fwait
aas
in
or
aad
or
test
inc
cmp
inc
add
or
push
or
sub
push
inc
jmp
dec
jp
adc
pop
andw
rcr
mov
pop
cmp
inc
ret
jo
outsl
xor
push
arpl
filds
aaa
test
adc
pop
add
rcrb
and
imul
das
lock
lock
xor
fisubl
jge
and
xor
mov
fstl
pop
mov
add
and
sti
sub
adc
imul
imul
sub
add
xlat
xorl
push
daa
pop
and
aad
mov
xorps
aas
dec
mov
orl
cmp
repz
lods
rcll
pop
adc
jg
mov
mov
js
add
sar
adc
adc
xor
push
jo
pop
sub
inc
cmp
jle
adc
xchg
jle
jp
ret
pop
and
jb
xorb
into
adc
push
inc
adc
push
xchg
xor
jo
aaa
adc
sbb
push
jb
pusha
cmc
out
mov
cmp
cmpsl
ds
adc
sub
add
push
dec
cmp
cmp
inc
add
add
lea
cwtl
fisubl
xchg
rclb
add
adc
xchg
loop
std
rcrb
push
je
hlt
aaa
insb
sbb
xchg
test
ljmp
mov
adc
ja
lea
pop
decl
mov
fiaddl
pop
and
adc
int3
push
inc
lret
inc
lcall
pop
call
add
jne
loopne
cmpsl
push
mov
and
mov
aad
leave
pop
lods
call
push
mov
sahf
jnp
pop
pop
test
les
xor
and
pop
lods
in
test
outsl
in
jbe
push
mov
imul
cmp
jne
push
or
push
push
fistpll
sub
in
insb
icebp
ret
mov
fwait
js
xlat
lret
insl
lds
dec
in
sub
insl
sbb
mov
push
div
pop
or
jecxz
fstp
loop
push
add
and
pop
ror
and
or
inc
xor
cmp
xor
lock
int3
hlt
movsl
shl
ja
sbb
mov
sub
adcl
pop
jno
shrl
mov
and
sub
outsl
dec
cmp
pushf
and
and
inc
outsb
adc
inc
pop
inc
pop
dec
add
je
sarb
push
lahf
push
xlat
es
cmp
in
and
ja
sbb
jecxz
cmc
dec
rol
mov
jmp
jp
popa
add
movswl
jne
jecxz
lahf
mov
iret
inc
xchg
pop
jle
pop
sbb
adc
pushl
dec
jne
dec
push
nop
cmp
aam
mov
je
mov
mov
mov
adc
cmpsl
and
sbb
rcll
sub
movsl
jmp
xchg
lret
cli
pop
mov
in
std
inc
test
xchg
mov
xchg
xorb
or
das
push
lock
fsts
lret
shlb
test
dec
mov
movl
or
in
adc
pop
scas
jge
imul
outsb
sbb
adc
and
xor
jns
or
data16
outsl
or
xlat
dec
jle
leave
push
scas
cli
outsl
inc
pop
push
adc
outsl
push
dec
pop
or
cmp
sbb
call
hlt
jmp
lods
in
and
jae
push
cmp
and
jmp
cmpsb
int
jnp
jo
je
cmp
mov
loop
dec
pop
cmpsl
jo
pusha
pusha
mov
mov
ljmp
dec
and
cs
dec
pop
add
pushf
adc
fwait
adc
and
dec
sbb
dec
and
fsub
xchg
daa
mov
popf
pop
js
and
insb
testb
inc
mov
inc
inc
pop
jge
cmp
imul
push
pop
mov
cld
push
cmpsl
pop
repz
fistpll
pop
fld
iret
add
inc
cmpb
out
jg
call
mov
or
fs
mov
xor
not
and
aaa
add
ret
dec
xchg
inc
pop
pop
jecxz
jne
leave
lock
imul
lea
push
les
cmp
call
pop
shl
pop
push
popf
or
and
roll
fdivrp
sub
cltd
int
add
adcb
push
xor
int
xor
in
addb
mov
test
lock
int
dec
push
idivb
jo
imul
ret
mov
pop
xchg
in
dec
jno
push
js
xor
jae
stc
sub
mov
dec
sbb
adc
pusha
add
or
pop
dec
sub
lret
add
jmp
loope
insb
insl
add
daa
mov
jb
xor
bound
movsb
add
sbb
pop
hlt
adc
rclb
mov
ss
sbb
sbb
je
in
pop
out
xchg
or
in
movsb
and
pop
leave
subl
xchg
je
sub
dec
cs
xor
mov
into
inc
mov
ficoml
cmovne
xor
inc
icebp
movsb
fisttps
fsubs
adc
aam
xorl
pushf
popa
loope
test
add
pusha
divl
and
adc
or
orl
adc
movsb
imul
mov
scas
fsubrl
push
notb
mov
push
sbb
arpl
pop
ss
shr
aad
cmp
jae
jbe
cmp
and
popa
adc
mov
in
in
out
mov
pop
popf
jne
arpl
sub
cmp
pop
sub
dec
cmc
pop
mov
sbb
shr
in
adc
fwait
ljmp
in
lods
mov
jne
adc
pusha
sbb
push
je
into
les
mov
push
inc
cs
stc
adc
outsb
sarb
xor
mov
push
aaa
nop
sbb
scas
lret
xor
nop
cmpsb
xlat
cmp
xchg
nop
aaa
out
pusha
cmp
insb
inc
or
sub
fsub
add
mov
mov
cld
adc
fst
mov
mov
inc
test
test
jno
push
sbb
ja
dec
cwtl
popf
dec
push
addr16
loop
repz
les
add
adc
or
jmp
cmp
nopl
or
sbb
sub
mov
pusha
sar
fwait
aaa
sub
js
mov
imul
jge
popa
sub
xchg
adc
shrl
out
push
mov
and
insl
or
adc
sub
xchg
dec
inc
mov
xchg
in
push
add
jbe
lds
ret
icebp
out
jmp
aam
rol
adc
scas
out
fildll
sub
or
push
xchg
dec
pop
xor
nop
xchg
repz
add
add
sbb
xchg
xchg
flds
or
adc
jb
or
shrb
xchg
pop
xchg
adcl
add
adc
or
dec
sbb
sbb
fldl
insl
push
and
and
or
mov
imul
or
xchg
add
mov
add
jp
movsl
sub
push
out
sbb
repz
add
sahf
add
shlb
arpl
mov
xchg
sub
notl
and
popa
das
sbb
out
out
inc
adc
pop
clc
les
sub
test
dec
add
iret
pop
jl
xor
iret
std
sub
adc
and
and
cli
push
ss
inc
lahf
add
add
movsbl
cld
xor
mov
push
and
loop
adc
dec
cmpsl
daa
cmp
mov
cltd
ret
shufps
and
insb
adc
inc
sub
push
jnp
imulb
inc
push
mov
jne
mov
push
mov
testb
mov
mov
and
aaa
add
xchg
popa
mov
les
imul
sti
les
dec
add
xor
add
lods
push
sub
xor
xor
pop
inc
pop
loopne
mov
or
movsl
es
or
inc
icebp
and
imul
xor
dec
push
jl
out
mov
hlt
lret
mov
and
cmp
pop
hlt
in
sub
inc
jle
stc
jge
sub
rcrb
mov
clc
cmc
sahf
ret
into
or
fisttpll
dec
sbb
lea
jne
xor
add
mov
xchg
std
pushf
cmp
push
cld
sti
push
cmp
pop
dec
insb
cld
mov
pop
jae
rorb
push
pop
xor
adc
jnp
ret
loop
inc
jmp
push
add
outsl
xchg
sahf
lcall
scas
lock
mov
add
mov
or
sbb
sbb
jl
push
packssdw
inc
ficompl
ret
sbb
ret
mov
js
push
push
fldt
jo
xchg
adc
rorb
icebp
xlat
push
push
pop
dec
shl
dec
aam
out
es
outsb
popf
call
rorb
imul
stos
inc
dec
insb
andl
cmp
hlt
je
and
repnz
adc
jg
mov
mov
lock
pop
sbbb
fs
jo
test
mov
inc
ret
xor
lods
push
sbb
or
aaa
outsl
mov
lods
js
aas
rorb
add
inc
or
aad
xchg
and
std
xchg
icebp
inc
mov
cld
inc
jge
push
pop
xor
fs
mov
out
jg
xchg
inc
loope
add
add
mov
es
cmp
xor
inc
sub
sub
push
add
jnp
mov
or
or
inc
sub
add
inc
xor
test
int3
push
adc
lahf
out
jb
lret
inc
daa
out
mov
nop
pushf
pop
pop
mov
pusha
mov
push
sub
in
push
out
aad
push
push
jb
xor
loope
pushl
pop
movsb
lcall
in
ret
and
test
gs
arpl
mov
mov
cmp
cmp
fdivrl
fimuls
or
mov
mov
in
cli
sub
or
add
iret
xchg
push
or
lret
xor
or
cld
rcll
leave
xor
fcomps
mov
iret
sbb
mov
in
push
push
add
jmp
mov
adc
cmp
mov
cld
daa
neg
adc
je
jb
daa
push
fildll
arpl
pop
inc
jnp
push
cli
andl
pop
lret
lods
inc
shlb
pop
in
popa
sub
push
adc
out
dec
gs
mov
dec
mov
pop
jmp
inc
push
jge
sub
mov
mov
imul
xorb
or
movb
and
jae
and
aam
aam
push
rcr
in
inc
xchg
rcr
jnp
aaa
inc
cmp
sub
repz
dec
or
movsb
sbb
sbb
out
sti
jmp
xor
or
and
add
push
sub
lock
pop
add
jmp
hlt
shlb
hlt
mov
gs
jbe
daa
jmp
sub
lar
shlb
out
jb
out
fisttpll
shlb
addr16
jl
dec
orb
or
je
mov
ljmp
scas
xor
or
call
rorb
lahf
imul
sub
dec
sbb
adc
mov
xor
pop
inc
add
in
or
test
fcoms
mov
xor
or
push
sub
or
fcoms
aam
xor
fistps
dec
jl
dec
je
in
pop
ret
jecxz
lock
ret
shrl
mov
dec
xorb
mov
daa
pop
or
adcl
hlt
add
inc
js
xchg
ja
cmp
push
add
movsb
cmp
mov
ss
or
lea
or
or
pop
cmp
and
sub
adc
lea
fnstsw
xchg
push
loopne
stos
ret
jmp
adc
pop
jecxz
xchg
dec
test
verw
rclb
aad
and
and
in
sbb
mov
sub
fwait
sbb
addb
xlat
stos
push
mov
add
adc
mov
push
test
mov
mov
push
mov
and
adc
inc
stos
push
xor
push
jge
cld
fstps
cmp
jb
jp
outsb
or
mov
or
sub
push
pop
cmp
addr16
push
int3
loopne
or
out
adc
inc
add
mov
lcall
and
or
ds
dec
mov
pusha
dec
xchg
cmp
xorl
cltd
adc
dec
mov
icebp
or
adc
xor
sbb
call
repz
mov
cwtl
mov
lods
add
mov
outsl
ds
aam
mov
add
jl
out
pop
out
adc
pop
hlt
mov
iret
fidivl
dec
fcoml
and
scas
shll
add
lds
and
leave
das
pusha
repz
lock
mov
add
test
jno
out
mov
dec
call
daa
daa
iret
jnp
sbb
sub
dec
jns
int
pop
mov
mov
jns
out
test
jmp
push
ja
pop
pop
mov
adc
add
or
xchg
or
sahf
call
pop
jns
pop
xor
pusha
mov
pop
push
adc
push
enter
mov
or
dec
sub
loopne
inc
pusha
rcrl
popa
push
das
adc
sub
mov
xchg
cmp
ja
hlt
mov
xor
sub
hlt
in
pop
and
push
adc
mov
pop
push
mov
call
adcl
and
stos
pop
clc
sbb
push
sbb
lret
aad
jae
jb
adc
fnstsw
popa
mov
inc
in
test
inc
push
push
sbb
sub
call
cmp
jp
subb
mov
pop
test
cvtps2pi
or
sbb
mov
push
xlat
dec
rorb
push
sub
cmpb
clc
push
sbb
pop
add
inc
call
jmp
in
mov
push
sbb
fldcw
rcl
pop
ss
cmpsb
sbb
cmpsl
xchg
or
push
enter
mov
arpl
or
loope
sarl
mov
sbb
mov
dec
sbb
das
jae
sub
fs
push
cmp
pop
or
sub
sbb
or
xor
sarl
mov
pop
pop
jns
add
popa
imul
mov
pop
aam
xor
sbb
sbb
add
mov
sub
bound
dec
cwtl
push
inc
or
and
inc
sbb
mov
imul
dec
lods
imul
jmp
mov
ret
cmp
int
testl
push
mov
or
or
loop
test
inc
xchg
add
push
mov
push
dec
or
dec
decb
cmp
or
clc
stc
mov
sbb
dec
xor
das
mov
mov
mov
sub
aas
sbb
je
cmc
xor
movsl
addl
in
rcrb
neg
mov
pop
adc
out
mov
das
ficoms
fidivs
addr16
push
pushf
hlt
loope
testb
pcmpeqw
add
cmpsb
test
xor
xorb
lret
js
aaa
rorb
mov
add
mov
pop
cs
push
xchg
xchg
stos
mov
cmp
shlb
imul
pop
inc
inc
clc
xor
insl
mov
sti
mov
jl
push
daa
pusha
icebp
fisttps
ret
in
jmp
push
mov
push
jg
xchg
pop
lea
mov
movsl
leave
push
shr
cwtl
xor
xchg
cmp
les
cmp
cmp
loopne
mov
in
je
xor
dec
or
dec
adc
ret
sub
push
bound
int3
pop
sahf
add
add
dec
mov
mov
fs
mov
xchg
mov
mov
dec
js
data16
mov
and
scas
add
xor
jle
add
jg
sbb
cmp
mov
fs
cmpl
hlt
jl
adc
sbb
mov
push
add
add
xorb
push
lret
idivl
sbb
movsl
push
outsl
mov
flds
and
adc
push
rol
in
and
fisttps
pop
sbb
leave
add
sbb
or
aad
and
jp
xchg
cmp
pop
sysret
loope
andl
mov
adc
sub
nop
scas
rcrl
push
cltd
inc
push
fnsave
lods
mov
or
mov
inc
inc
jmp
or
cmp
xchg
jl
ret
mov
push
push
push
push
pop
push
inc
test
lock
add
loopne
pop
mov
adc
cmp
sbb
fwait
cld
dec
fcoms
dec
jl
pop
and
jl
cltd
sub
xchg
mov
daa
xor
xchg
aaa
sti
xor
dec
push
push
push
mov
xchg
lea
mov
add
or
or
jle
or
and
sbb
les
pop
mov
jns
dec
mov
cmp
je
adc
mov
nop
cmpb
iret
sbb
push
xchg
xor
popf
imul
pop
and
dec
xchg
lahf
pop
pushf
push
fisubrs
and
jbe
fistps
cli
mov
inc
and
or
sub
push
sbbl
or
dec
pop
add
or
mov
test
adc
or
gs
loop
push
je
cmpl
lea
adc
sub
outsl
mov
adc
int3
dec
jecxz
dec
scas
ret
rorb
or
mov
cli
mov
aas
jnp
cmp
je
cmp
or
lea
push
sub
cwtl
fisttps
adc
cmp
js
sti
xchg
dec
sbb
and
push
aas
sbb
data16
daa
sbb
out
dec
decl
mov
sbb
push
sbb
dec
or
xrelease
mov
cmp
lock
push
push
adc
or
pusha
rcll
push
cmp
mov
cmc
mov
pusha
push
push
mov
adc
xor
testb
and
bound
push
scas
add
push
dec
xchg
dec
xchg
bound
popf
adc
push
mov
lock
sub
js
cmpl
scas
and
cwtl
cmc
jae
sub
cmp
mov
adc
leave
xor
sub
stos
adc
scas
adc
sub
dec
or
mov
ds
mov
inc
jo
inc
xchg
adc
clc
mov
orb
pop
push
stos
sbb
dec
fcoms
scas
dec
pop
cmp
mov
jmp
mov
mov
je
mov
aad
inc
xorb
je
paddd
and
push
push
dec
adc
mov
jl
add
ss
dec
movsl
das
scas
lods
xor
aad
and
int
loopne
push
negb
push
setne
mov
stc
ficoml
add
mov
rolb
sbb
mov
sbb
js
jne
cmpsl
lret
test
pop
cmpsl
aaa
push
outsl
jo
cmpsl
adc
filds
cmp
pop
or
inc
inc
pop
mov
notl
arpl
incb
int
dec
dec
pop
data16
xchg
shrb
sbb
dec
cvtpi2ps
or
push
inc
pushl
jbe
sti
dec
jne
cmp
pop
call
daa
call
movsl
pop
out
dec
hlt
dec
mov
pop
sbb
loopne
or
add
sub
nop
inc
addr16
ret
adcb
jnp
ret
pextrw
xor
sub
push
sub
xor
sbb
pushf
inc
aad
imul
loopne
arpl
inc
dec
jne
in
mov
add
ret
xchg
popa
iret
pop
sbb
clc
fsubrs
andl
fildll
push
mov
andb
sahf
xchg
jnp
sbb
jmp
sbb
inc
stos
and
pop
ffreep
scas
and
push
add
add
pusha
pop
leave
inc
xchg
orb
cmpsl
mov
ret
push
insb
adc
mov
push
leave
aas
ficoml
fs
push
aaa
dec
or
cmp
jg
test
mov
push
dec
cmp
xlat
xor
daa
mov
jmp
gs
xlat
clc
mov
mov
jmp
or
sbb
fwait
clc
add
pop
cmp
lods
sbb
rolb
lock
imul
add
add
sub
push
cs
aam
out
loopne
and
add
cmp
jmp
pusha
dec
leave
sub
xor
add
in
mov
sbb
sbb
pop
sub
cmp
and
cltd
daa
icebp
les
outsl
or
call
jge
jne
es
jne
scas
pop
adc
popf
adcb
sbb
inc
arpl
into
lcall
mov
mov
scas
aas
or
inc
add
add
or
sbb
push
pop
out
inc
aam
xchg
add
nop
adc
mov
ljmp
inc
xchg
inc
push
mov
out
mov
insb
lret
rcrl
popa
pusha
sti
pop
cmpsl
nop
hlt
xor
ds
fisttps
add
jo
or
add
xor
adc
pop
jmp
adc
incb
stos
outsb
xor
insl
pop
adc
mov
aas
push
ficoms
pop
sbb
push
pop
out
inc
push
adc
rolb
pop
das
jae
sub
jns
add
in
or
ja
jbe
and
into
pop
push
inc
ret
arpl
mov
bound
lahf
push
fwait
push
fcoms
in
adc
into
cmp
rorb
inc
je
dec
push
cltd
sub
adc
sbb
adc
mov
addr16
out
mov
fnstsw
and
add
or
test
xchg
adcl
ror
cmp
jne
sbb
and
es
frstor
adc
dec
push
dec
insb
pop
mov
mov
jl
shll
inc
adc
sbb
push
sbb
and
iret
daa
mov
leave
out
mov
mov
orb
or
add
jne
inc
dec
adc
cmpl
outsb
adc
adc
cmp
shr
mov
or
rorb
push
pop
leave
adc
add
iret
push
loope
inc
xlat
pop
adc
orb
nopl
mov
cs
add
add
push
xchg
inc
lret
push
test
popf
push
or
daa
or
call
sub
movsb
inc
add
insb
xlat
pop
sti
lea
push
sbb
xlat
loope
adc
push
adc
imul
fwait
adc
xchg
inc
lret
or
iret
shr
dec
sub
dec
pop
xlat
xchg
movsl
sbb
push
adc
movl
rclb
or
in
push
xchg
dec
jo
movsl
lret
cs
dec
jp
adc
add
sbb
sbb
adc
pop
jne
cmp
clc
jne
push
imul
xchg
fcomi
movsb
fisttpl
pop
mov
pop
adc
testb
stos
add
mov
add
pop
push
cmp
jo
or
fwait
adc
inc
das
adc
cs
jnp
add
addb
orl
pop
or
ret
test
pop
daa
mov
decl
and
xchg
dec
je
push
aad
out
sub
and
loopne
push
push
outsb
popf
sbb
adc
cld
ja
rcll
cld
decb
inc
sbb
loopne
cmp
in
arpl
popf
outsb
call
push
or
mov
adc
lds
into
mov
pushf
push
sbb
fdivl
cmp
fcmovb
adc
sbb
popf
jo
push
lahf
push
mov
ror
enter
pop
daa
sbb
jge
mul
cmpsb
aam
aas
dec
sub
add
inc
dec
icebp
push
jo
into
sub
sbb
push
adc
sub
call
mov
insl
dec
iret
or
inc
ss
jne
subl
das
aad
pusha
dec
shll
xor
cmpsl
xor
add
push
push
mov
or
pop
cmp
les
nop
stos
mov
sahf
mov
adc
mov
adc
adc
popf
pop
mov
test
mov
rorl
lock
and
pop
push
push
mov
add
in
push
pusha
or
mov
add
mov
inc
inc
pop
or
add
jle
testl
pop
or
or
js
cld
pcmpeqb
xor
test
pop
adc
or
jge
sbb
sub
mov
cmpsb
push
mov
push
call
jae
aaa
call
add
sbb
insb
dec
push
push
clc
loop
or
dec
and
mov
and
jbe
pop
pop
inc
cmc
mov
push
pop
lock
push
mov
mov
je
push
addr16
scas
pop
mov
pop
mov
xchg
add
cld
push
test
mov
xchg
add
cld
mov
or
test
cmp
xchg
jbe
pop
cmpl
test
sbb
jge
lret
out
sbb
dec
xlat
inc
pusha
js
sbb
arpl
test
pop
icebp
xchg
sbb
mov
jmp
outsl
test
inc
inc
mov
test
pusha
pop
sbb
subl
pop
jns
flds
cltd
pusha
lret
daa
call
jnp
dec
add
js
add
clc
lock
sbb
mov
sbb
sbb
xchg
jg
cs
xchg
mov
loopne
decl
mov
mov
dec
lea
dec
dec
jno
jae
dec
dec
dec
dec
jne
ja
dec
dec
dec
dec
jns
jnp
dec
dec
dec
dec
jge
jg
dec
dec
dec
dec
popa
bound
dec
dec
dec
dec
gs
dec
dec
imul
dec
insl
outsb
outsl
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
push
jns
lods
mov
inc
loope
pop
cmp
add
xor
pop
cmpsb
insb
outsl
insl
mov
lods
out
mov
cltd
and
push
data16
xchg
ds
and
xchg
mov
add
push
inc
sbb
cli
fisttpll
mov
fstl
or
dec
ret
cltd
adc
inc
out
fwait
fwait
call
cwtl
push
or
mov
test
add
pop
and
jl
xor
je
insb
loope
cwtl
inc
cmp
xor
data16
sub
mov
enter
je
arpl
adc
jo
pop
add
gs
imul
mov
mov
rcr
adc
insb
or
sub
adc
push
pop
push
outsb
int
xchg
pop
xchg
sub
pop
jo
outsl
sbb
push
inc
popa
jae
repnz
push
or
adc
xor
inc
jl
or
or
divl
iret
or
pusha
std
sbb
iret
int
inc
insb
mov
push
push
push
je
into
insl
dec
outsl
jo
je
jae
fcomi
insl
inc
push
jns
sbb
mov
aam
addr16
and
add
out
ret
sbb
xchg
jge
ss
xor
aas
mov
push
loop
pop
xchg
imul
jbe
dec
and
jb
fimull
ds
xchg
add
pop
bound
add
dec
jl
jp
or
push
arpl
ds
lret
or
fiadds
cs
inc
outsl
jb
jae
shrl
out
es
mov
cmp
and
sub
sbb
aad
xlat
mov
add
test
decl
sti
push
adc
mov
dec
mov
pop
sub
pop
test
jl
xor
mov
dec
loope
mov
push
pop
push
cmp
cmp
imul
mov
cmpsl
inc
xchg
insl
pop
loop
push
dec
inc
orl
hlt
jg
cmpsl
push
push
pusha
jge
push
push
push
and
enter
jno
js
lds
pushf
push
dec
cmpsl
fs
and
lret
mov
xor
call
cmpl
mov
push
js
lret
add
fcomps
pop
xor
fadd
inc
cmpsb
jo
xchg
push
add
ds
enter
sarl
push
push
dec
gs
xchg
cld
adc
mul
fs
inc
add
cltd
shlb
cmp
jne
jmp
pop
ss
add
adc
pusha
adc
jnp
movsb
mov
sbb
jl
and
sbb
je
jnp
pop
mov
lahf
pop
sbb
sbb
add
cmpl
add
push
roll
xlat
add
sub
xor
cmp
adc
aas
enter
fstp
sarb
lsl
push
inc
mov
add
fs
pop
mov
sbb
cmp
jmp
jp
fs
push
cmp
lret
and
outsb
add
add
test
lds
je
movb
test
iret
inc
dec
lds
xchg
mov
cmc
pop
insb
dec
pop
inc
pop
daa
jl
or
rorb
scas
or
inc
inc
popa
sbb
inc
icebp
mov
push
movsl
mov
lret
insb
aam
rcrb
add
pop
pop
loopne
test
mov
lods
adc
or
push
aam
cmpsb
out
mov
xchg
adc
aam
lods
sub
xchg
into
xchg
xor
add
ret
sbb
mov
mov
les
adc
cmp
jge
int3
pop
mov
adc
cli
mov
mov
iret
lret
mov
es
push
rorb
sub
out
mov
sub
and
lods
sbb
push
add
mov
adc
push
sub
push
sub
xchg
pop
dec
jmp
ljmp
jmp
pop
loopne
push
in
pop
jnp
iret
in
fs
bswap
int3
pop
fsubl
call
adc
cs
popl
mov
fadds
and
inc
and
cwtl
mov
push
shrb
call
push
xchg
gs
insl
popa
addr16
hlt
mov
clc
enter
dec
xor
aaa
icebp
loop
outsl
adc
jo
pop
insb
inc
push
push
mov
pop
les
loop
cmp
mov
mov
int3
js
and
inc
cmpsl
xor
cld
add
push
lock
dec
dec
add
cmp
push
xor
or
inc
adc
fmull
xor
inc
or
xor
adc
nop
add
shlb
or
mov
mov
fiadds
mov
pusha
cli
imul
or
hlt
fmuls
mov
mov
repnz
ret
xor
xor
inc
fs
or
push
xchg
lea
out
ds
xlat
inc
push
xlat
enter
mov
push
enter
fcoml
sti
push
xchg
xchg
push
or
add
aam
adc
imul
insb
mov
je
and
popa
xchg
mov
call
mov
outsb
nop
sub
incl
pop
mov
mov
xor
rol
xor
dec
jne
notb
mov
mov
test
jne
mov
pop
push
push
pop
movsb
mov
or
mov
or
imul
shl
test
inc
add
orb
clc
mov
mov
or
push
daa
je
sbb
add
add
mov
xorb
rol
sti
cmc
ss
inc
cmp
xor
add
or
loop
or
xchg
sub
dec
imul
mov
decl
or
mov
and
sbb
flds
scas
or
movsb
popl
pop
mov
test
mov
in
decl
in
cwtl
or
repz
adc
dec
pop
push
cmp
dec
jmp
into
sahf
andb
add
loopne
repz
mov
inc
mov
das
lods
sbb
adc
sbb
stc
inc
pop
inc
cwtl
lods
sarb
xor
xlat
cmp
or
je
xchg
fsubrs
cmpsb
in
pushf
mov
mov
push
scas
mov
cmc
fidivrl
sbb
inc
add
jecxz
fimuls
test
jmp
mov
mov
sbb
xor
shlb
and
loopne
jge
push
jge
sub
or
das
arpl
addb
mov
mov
or
leave
jmp
mov
xchg
out
add
lahf
push
ret
add
xor
divb
xlat
mov
mov
test
pop
rcrb
mov
add
loope
or
or
and
in
or
adc
and
shrb
scas
xchg
fiadds
pop
arpl
pop
xchg
add
outsl
rclb
lcall
jl
pop
scas
pop
dec
insb
int3
pop
push
shlb
add
gs
jle
xchg
gs
insb
pop
or
pop
int3
cmp
imul
or
imul
add
outsl
ja
dec
in
rcrl
arpl
imul
jno
popa
mov
pop
pop
or
jnp
adc
jmp
jns
jbe
bound
in
dec
and
push
filds
mov
adcb
cltd
push
test
mov
pop
jo
into
xchg
jo
pop
imul
mov
push
addr16
mov
adc
inc
je
inc
push
xchg
cltd
cmp
insb
pop
das
or
inc
add
xor
xchg
out
sub
cmp
dec
daa
or
sub
push
inc
inc
sbb
pop
daa
pop
xchg
imul
sbb
mov
xchg
add
mov
or
outsl
sbb
fsts
adc
movsl
andl
inc
add
lods
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
daa
mov
or
imul
daa
or
mov
sub
in
out
jge
fcompl
loop
lcall
ret
push
mov
test
pop
dec
data16
inc
ret
or
add
sub
mov
or
pop
pop
cmpsl
pop
or
testl
dec
inc
push
push
inc
push
add
rcr
jg
inc
inc
inc
push
dec
push
xor
mov
and
inc
dec
dec
arpl
inc
inc
push
or
dec
inc
push
dec
dec
push
mov
jnp
inc
inc
push
xchg
inc
dec
dec
and
stc
ret
popa
out
inc
inc
xor
xor
pop
add
inc
inc
dec
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
sbb
push
push
push
dec
sub
dec
pop
fcmovnbe
lcall
inc
mov
aam
inc
inc
inc
das
mov
push
push
push
test
mov
xor
push
xlat
adc
push
push
and
outsl
push
push
dec
push
inc
scas
dec
inc
dec
les
mov
inc
cld
mov
pop
jmp
mov
js
push
pop
test
je
pop
dec
andps
push
push
pop
or
nop
sahf
jl
add
cmc
roll
clc
mov
inc
sahf
out
testb
sbbb
add
add
jns
or
out
movsb
fimull
lea
bound
and
mov
xchg
sbb
inc
or
sub
mov
dec
sbb
mov
iret
or
or
or
xlat
inc
ror
add
mov
dec
pusha
jg
cmpsl
push
or
shlb
mov
bound
andb
and
std
adc
mov
imul
mov
inc
insb
xchg
test
mov
in
rolb
test
mov
sub
mov
mov
push
js
pushl
sbb
imul
call
lods
cmp
pop
nop
and
mov
sbb
jne
pop
out
mov
jae
xchg
mov
call
imul
imul
fcoms
xor
push
cli
das
cwtl
add
push
sbb
jne
lret
jae
push
lock
shlb
push
cmp
xchg
push
and
mov
lcall
mov
icebp
jne
push
jg
push
sbb
filds
dec
rcrb
out
mov
pop
sub
adc
cs
dec
jmp
test
inc
sbb
fstp
call
jmp
adc
popw
pop
cwtl
mov
sbb
or
mov
adc
add
xlat
dec
incb
js
sarl
xor
dec
sbb
and
add
ja
jmp
sti
and
lods
adc
fiaddl
push
aam
mov
flds
jecxz
push
jecxz
ficompl
jb
jmp
sub
dec
or
inc
or
push
test
in
enter
rolb
and
test
out
inc
dec
jl
inc
ret
push
mov
cli
cmpsb
mov
repz
aam
inc
loop
push
gs
mov
or
inc
mov
xor
insb
loopne
lahf
mov
push
insl
pusha
popa
mov
insb
sub
sbb
sbb
jbe
testl
lea
push
mov
sub
aaa
xor
subl
in
sub
fsub
pushf
dec
mov
std
outsb
mov
dec
xor
sbb
jno
neg
addr16
push
movd
ficoml
jp
mov
test
ret
pop
jo
mov
lods
dec
les
xor
outsb
inc
sbb
sbb
div
sti
xchg
pop
add
loope
pop
sbb
push
mov
adcb
add
pusha
add
fdivrl
adc
mov
repnz
cmpl
nop
inc
cs
lret
fmull
mov
movl
xor
dec
add
dec
push
pop
in
mov
xchg
xchg
or
mov
pop
add
pop
add
jne
fists
in
mov
sub
inc
sbb
mov
inc
mov
insl
nop
pop
and
in
add
nop
pop
jbe
xor
jns
psubsb
repnz
pop
mov
cmp
adc
mov
push
xor
mov
pop
sbb
lods
lea
push
xor
xchg
cwtl
scas
and
loopne
loopne
mov
inc
mov
dec
and
mov
xlat
int
adc
inc
loopne
ficoms
sub
nop
mov
outsl
push
mov
pop
push
aas
inc
xor
cmp
je
mov
push
aas
push
dec
mov
fisttpll
inc
mov
add
subl
mov
clc
or
jne
nop
or
xor
or
and
lock
imul
pop
inc
popf
movsl
dec
xor
nop
iret
fistpll
adc
aam
fadds
xchg
pop
insb
das
dec
cmp
cmp
sbb
into
jmp
dec
push
es
decb
jmp
sub
jmp
je
js
add
push
adc
int
mov
popa
gs
lock
mov
xor
push
push
aas
inc
jmp
pusha
adc
aad
or
cmp
xlat
ret
mov
lea
in
dec
test
adc
add
pop
sbb
mov
movl
outsl
xorl
inc
mov
sub
cwtl
mov
movsb
repnz
inc
and
mov
pop
sub
lods
popf
das
mov
jmp
imul
push
dec
lds
ror
lea
push
pusha
adc
cmp
das
jecxz
jge
rorl
fbld
add
cwtl
shll
out
jle
and
push
or
push
add
or
pop
or
or
pop
jnp
adc
push
or
jnp
add
push
push
outsl
push
xor
or
add
cmpsb
pop
jl
cmp
xchg
mov
or
sarb
in
ret
hlt
lods
mov
flds
sub
xchg
mov
add
and
mov
test
iret
roll
sbb
cmpsl
stos
in
push
xchg
adcb
rcrl
in
and
push
push
in
pop
test
rcll
pop
iret
leave
jge
xchg
jbe
and
insl
push
nop
rep
mov
bound
jno
inc
push
popa
mov
sbb
inc
mov
and
mov
rcrl
fidivs
popl
mov
sbb
pop
dec
rclb
imul
or
add
xchg
hlt
sarb
inc
sub
in
ret
jnp
jo
jo
sub
je
sub
imul
aaa
popa
pop
enter
les
lods
daa
mov
adc
jnp
dec
mov
adc
in
pop
sub
pop
inc
stos
nop
in
dec
jb
sbb
test
ljmp
xor
and
xchg
pusha
or
mov
add
enter
push
cwtl
aam
pop
or
sbb
pushf
pop
shlb
xchg
gs
sbbb
fwait
sti
loopnew
jecxz
icebp
mov
aam
jmp
xchg
int
dec
cmpsl
loop
aad
inc
or
sub
je
push
add
iret
add
out
dec
jge
jp
push
in
pop
inc
jae
sti
in
dec
mov
and
mov
cmp
je
mov
xor
fistpl
jne
aam
dec
mov
push
jp
arpl
mov
cwtl
andb
cmpl
andb
mov
orb
mov
adc
push
cwtl
scas
imul
or
shll
sbb
mov
je
rol
xchg
or
and
push
lret
lcall
ljmp
add
push
in
push
add
adc
push
add
or
or
psrld
xor
push
xor
pop
movsl
bound
mov
add
push
or
call
orb
lahf
bound
jl
test
sti
cmp
push
or
aam
cmp
sbb
mov
in
add
test
movsb
movl
cmc
push
shld
inc
jno
push
je
xor
sti
pusha
mov
lret
ja
add
jo
add
jno
or
cwtl
aas
mov
or
mov
dec
call
test
in
mov
in
ret
nop
pop
rcr
mov
fcoms
fdivl
mov
ss
sub
sub
inc
or
cmc
pop
push
xchg
lea
movsl
and
cld
das
lea
sbb
lea
cmp
insb
sub
pop
inc
push
dec
loopne
or
lods
ret
jo
jns
xlat
dec
jg
mov
jge
not
jo
fnstcw
and
nop
call
mov
push
push
jae
xor
sbb
dec
xchg
push
and
mov
test
xchg
fcmovne
cmc
fwait
jmp
or
mov
pop
lock
ja
dec
mov
inc
movsl
pop
loopne
loopne
pop
push
push
dec
pusha
shll
sub
sub
sbb
lock
scas
push
aam
sarb
push
out
pop
mov
cmp
in
xchg
or
add
sti
xor
insl
outsl
xchg
stos
adc
lock
adc
jbe
adc
add
frstor
or
pop
cmp
enter
inc
adc
push
sbb
xor
not
and
jmp
mov
clc
pop
sar
daa
fmull
sub
push
push
sbb
mov
rcrb
inc
fucomp
mov
pop
sub
test
sbb
mov
sub
and
addb
xchg
loopne
ror
test
out
xor
push
stc
xchg
fstpt
stos
add
sbb
jo
aam
add
fldlg2
leave
lea
push
popf
cwtl
adc
mov
inc
lahf
clc
out
insb
jo
mov
cmpsl
cmp
sbb
xchg
or
lock
push
push
fmuls
sbb
and
fdivl
stos
pushw
sub
dec
jmp
jns
arpl
fisubrl
pop
mov
mov
sbb
add
sbb
faddl
cmp
push
and
inc
add
hlt
fs
fs
ds
loopne
loopne
movb
mov
les
movb
add
sub
pop
mov
out
mov
insb
sub
sub
and
mov
pop
add
push
lds
bsr
mov
movb
adc
add
xor
lock
lock
mov
nop
lea
int
push
xor
mov
add
aaa
add
add
loopne
xor
lock
jo
add
mov
add
lea
cwtl
cmpsb
imul
pop
pop
mov
add
jne
cmpl
or
cmpsb
insl
dec
inc
mov
add
pusha
add
dec
fcompl
cmp
test
pusha
or
aam
imul
ret
out
dec
js
and
cmc
in
das
test
adc
mov
enter
mov
dec
jns
jmp
push
out
pop
and
mov
sub
shl
mov
mov
mov
jp
jmp
cli
movl
add
outsl
mov
repz
movsb
xchg
cld
push
mov
inc
fwait
or
sbb
fbld
push
mov
add
into
in
pusha
test
ss
pop
cmp
in
sbb
rolb
xor
add
and
mov
or
std
lea
xor
push
cs
dec
pop
ss
jmp
addr16
data16
outsb
jo
outsl
insb
fs
xchg
pop
pop
icebp
jno
das
shll
mov
rcrb
cmp
fdivl
cmp
clc
dec
push
loopne
clc
adc
das
jp
pop
data16
icebp
dec
das
or
enter
and
loop
je
or
cmc
or
push
adcb
mov
mov
adc
lds
push
cld
pop
roll
pop
pop
push
push
addr16
mov
xor
stc
dec
sbb
addr16
xor
sarl
aas
push
dec
jmp
es
mov
pop
outsb
adc
pop
loop
adc
int3
sub
sbb
movups
add
jae
lock
xchg
mov
invd
sbb
into
or
gs
xchg
or
inc
add
push
imul
scas
ffree
lahf
dec
fnstenv
push
push
mov
sub
xchg
fadds
inc
push
arpl
cmp
sarb
jae
rorb
mov
add
push
cmp
filds
lret
mov
loope
test
je
sbb
das
mov
orb
ret
push
icebp
sbb
shrb
or
sbb
jne
push
adc
scas
xlat
gs
push
mov
jge
loope
jle
lds
cmp
mov
cmpsl
push
push
faddl
xchg
out
jmp
sub
ret
orl
movsl
xchg
or
pop
movl
push
xchg
and
pop
dec
fldcw
xor
add
in
jle
cld
push
push
add
repnz
inc
pusha
dec
jge
test
mov
leave
lock
dec
mov
psubsb
mov
loopne
fwait
dec
cs
push
mov
mov
sub
or
sti
loope
iret
or
pop
add
movzbl
sbb
adc
cmp
jo
mov
mov
mov
out
scas
adc
es
jle
cmp
jl
mov
por
imul
or
mov
cmp
jle
inc
insl
add
iret
mov
fwait
rolb
stos
pop
jo
sti
jne
enter
icebp
jb
ss
icebp
inc
ss
jnp
aam
xchg
add
lock
push
mov
and
pop
lods
push
pop
or
jmp
call
push
test
or
fdivrs
xchg
mov
mov
xchg
ds
sbb
scas
fisubs
jbe
in
test
lods
or
aad
outsb
xor
jmp
pusha
mov
sub
stos
lcall
push
inc
jo
mov
iret
dec
imul
inc
js
mov
jg
or
jl
push
cmp
mov
dec
orb
pop
push
jl
mov
cmpsl
xchg
std
testb
mov
mov
inc
sbb
pop
fsub
loop
xchg
xor
cli
nop
movb
out
call
repnz
add
sub
outsb
adc
mov
lods
adc
dec
notb
and
dec
enter
test
lods
push
dec
lcall
movsl
sbb
int3
les
pop
xchg
mov
lahf
jne
or
outsl
jne
sbb
sub
sub
das
shlb
ret
push
rclb
ss
mov
and
js
ja
aas
adc
arpl
xchg
jle
mov
es
dec
push
nop
sti
or
push
sbb
sub
pushf
mov
or
jno
aam
xchg
rol
ljmp
jbe
test
add
xor
scas
daa
andb
push
outsl
mov
pop
mov
in
adc
sbbl
adc
push
sub
or
popa
fdivl
mov
add
and
lods
mov
cmovs
push
jle
lock
jmp
test
inc
mov
push
int3
jmp
ret
stos
insb
and
sbb
cmp
orb
cmp
inc
and
add
pushf
pop
pop
in
xchg
adc
sub
add
out
fmull
mov
xchg
adc
push
mov
pusha
mov
jg
sbb
addb
adc
push
add
mov
sub
add
sub
adc
fiaddl
outsb
ret
add
or
lret
pop
iret
add
fs
fcomip
push
das
add
fisttps
sub
and
movsl
inc
sbb
jno
das
pushl
sbb
int3
push
pop
mov
xorl
push
mov
cmp
lret
xor
cmp
pusha
clc
and
hlt
xor
lcall
aam
or
fistl
mov
fcoms
decl
jb
add
in
sbb
and
lods
adc
push
call
ljmp
dec
pop
push
cmp
int3
inc
call
or
loopne
subl
sbb
pop
call
dec
jae
hlt
loopne
es
fdiv
inc
dec
pop
xor
rclb
xor
add
shrb
add
adc
mov
push
stos
mov
data16
fidivl
mov
pop
lods
mov
mov
or
lods
data16
push
add
push
scas
test
sbb
in
mov
jbe
push
push
lods
mov
mov
dec
hlt
sub
sbb
mov
fsubr
in
test
sub
bound
ljmp
lcall
out
sbb
test
int3
sbbl
adc
and
stos
inc
aas
sub
movb
pop
adc
test
jo
adc
xchg
pop
jmp
shlb
aaa
pop
mov
adc
mov
sbb
rcl
or
adc
mov
les
das
push
test
fnsave
nop
addr16
mov
add
xlat
and
hlt
push
daa
and
jmp
addr16
rorb
js
movsb
xor
dec
mov
adc
cmp
sub
fmull
sbb
ss
mov
sub
and
arpl
lods
repz
xchg
lock
in
sti
and
sub
mov
dec
mov
mov
hlt
rorb
cli
pop
test
push
add
out
repnz
lock
push
cmp
cmp
cs
push
inc
cmp
out
in
ret
add
in
push
add
clc
xorl
xor
xor
push
xor
decl
or
sbb
jo
testb
mov
repz
cltd
sbb
sub
aam
loop
pop
ret
fistpll
adc
lahf
lods
jg
push
and
mov
jae
fcomps
shr
out
pop
lds
add
out
pop
pusha
pop
add
xor
dec
call
jp
jg
out
pop
inc
cmp
or
jl
movl
ss
js
sbb
mov
out
sub
movsb
add
pusha
cmp
or
pop
bound
sarl
je
jbe
int3
xor
out
xor
adc
mov
sbb
dec
decl
pushl
or
mov
dec
sub
push
push
mov
or
imul
pushf
mov
xor
es
addb
in
pop
jp
push
sub
add
sbb
xchg
cmp
fisubl
movsl
es
xchg
add
test
xor
mov
xlat
out
add
mov
dec
adc
push
mov
insl
ret
sbb
test
push
ret
iret
pop
jmp
add
xor
adc
repnz
testb
pushl
fdivs
sub
lds
mov
adc
icebp
dec
pop
or
aas
inc
pop
shlb
sub
imull
aaa
pop
xor
aam
add
xchg
and
cmc
fcomp
sub
hlt
aam
dec
and
push
dec
loopne
pop
jmp
xor
imul
lret
fsubs
mov
repnz
fsub
aad
mov
lcall
orb
push
sub
mov
jne
loope
adc
fadd
and
adc
pop
lahf
fcoms
imul
xchg
lea
int
mov
adcb
sti
out
add
cmpsl
cmp
je
mov
mov
xor
push
fildl
pop
and
push
out
or
adc
cwtl
sahf
xor
jns
or
xchg
cmp
lahf
sarb
xor
cltd
andb
sarb
sbb
out
aaa
mov
test
push
add
test
fdivrs
scas
clc
andl
push
and
fiaddl
jne
mov
sbbb
pop
movl
or
loopne
dec
pop
call
jle
and
add
or
add
add
stos
pop
test
into
cld
hlt
sub
mov
les
rcll
sbb
repz
and
sbb
lea
or
subb
cmc
add
sbb
jne
fdivrl
rcrb
dec
in
xchg
xchg
ss
sbb
cmp
int
mov
jne
jecxz
stc
ljmp
jae
outsb
dec
mov
xor
or
je
jo
mov
jne
scas
or
mov
add
dec
insb
pop
push
and
les
sub
xchg
insb
xor
imulb
adc
cwtl
add
test
adcb
adc
sub
test
or
call
scas
pop
ja
dec
lock
loopne
push
jge
jo
mov
test
sbb
lret
repz
lods
xchg
fistpl
int3
sub
push
or
into
mov
rorb
and
add
sbb
sub
or
jb
cmp
inc
mov
aad
mov
imul
add
mov
mov
inc
ret
dec
xor
out
adc
cmp
and
or
rcrb
push
mov
pop
into
mov
mov
adc
adc
sub
dec
lock
and
sbb
push
add
xor
push
mov
adc
push
mov
ret
push
mov
test
or
inc
xorb
jbe
xchg
dec
imul
xchg
jp
add
jmp
sbb
inc
and
lock
stos
enter
mov
fsts
mov
sbb
fdivs
movsb
sbb
pop
mov
inc
pop
add
xchg
mov
mov
mov
fs
ficompl
dec
dec
add
sbb
sub
ss
push
and
xor
pop
pusha
push
and
aam
jle
and
jnp
adc
jmp
jmp
test
cmp
push
or
addr16
repnz
ret
sbb
cmp
push
out
fstp
movsb
xchg
pop
mov
pop
sbb
sbb
adc
inc
mov
mov
stc
dec
xchg
cmp
decl
call
push
and
add
xchg
sbb
jne
dec
out
cmp
adc
jecxz
sahf
pusha
out
nop
fstpt
sub
int3
insl
dec
loope
jmp
adc
mov
pop
mov
leave
xchg
jo
and
ljmp
lock
lock
mov
inc
outsl
fisttpll
fadd
cmpb
or
add
xor
fbstp
addl
xor
xor
sub
add
or
push
fcmovnbe
xchg
fcmovnb
std
pop
out
fsub
movsl
bound
dec
sarb
sub
inc
fldl
test
push
out
inc
mov
and
add
in
cmpsb
pop
mov
inc
addr16
fisubrl
jmp
leave
xchg
lcall
movsb
cs
mov
loopne
out
add
test
test
inc
sbb
call
push
sub
mov
xchg
inc
push
fwait
gs
cmpsb
lock
dec
mov
insb
imul
jge
loopne
adc
mov
sti
out
scas
in
insb
dec
and
in
ds
rorl
inc
jecxz
rorl
bound
jmp
cs
mov
insl
mov
sub
hlt
mov
loope
cmpb
cmp
pop
mov
les
das
or
inc
sub
push
lea
dec
cmp
adc
or
mov
lea
jnp
jmp
inc
loopne
pushf
adc
sub
xor
jg
inc
and
and
sub
movsl
and
cmp
add
dec
enter
fs
xchg
push
and
sbb
test
iret
add
sbb
push
inc
mov
js
js
movsb
dec
jno
or
pusha
inc
dec
or
lcall
inc
incb
xor
mov
clc
mov
jmp
jo
ret
cmpsl
mov
pushf
roll
inc
jo
add
mov
test
jmp
clc
inc
jl
push
add
cld
sbb
mov
icebp
xchg
mov
pop
mov
push
add
mov
movb
ret
lahf
xchg
mov
xor
sub
lods
sbb
daa
mov
xor
jno
push
scas
push
push
test
mov
dec
push
cltd
jae
adc
js
cmp
rol
syscall
pushf
pusha
scas
xor
mov
cmp
orb
imul
mov
movzwl
push
dec
sub
scas
shll
fcoms
dec
jae
push
pop
lds
and
lds
push
sbb
pcmpeqd
dec
lock
popa
es
push
jmp
shlb
add
sbb
ror
imul
leave
fildl
adc
sti
inc
sbb
loopne
loope
call
movsb
sbb
call
xchg
dec
lock
shlb
pop
and
sub
inc
mov
leave
popa
inc
test
and
adc
inc
pop
mov
sub
cmc
push
mov
and
sbb
add
ret
or
lods
icebp
adc
sbb
xchg
jge
sub
out
ret
fsubs
loope
xchg
bound
loopne
jle
jge
add
cmpb
mov
aad
test
push
mov
enter
js
jmp
and
mov
fldt
push
add
sub
sub
sub
ds
test
aas
imul
out
add
or
loopne
or
je
jmp
add
cld
adc
movl
xlat
jbe
inc
rcr
subb
adc
mov
dec
adc
adc
paddd
adc
pop
sbb
pusha
inc
imul
add
jmp
cmovb
call
inc
sub
xor
sbb
outsl
lahf
or
sbb
mov
pop
je
push
addb
pop
aam
call
xor
inc
jne
mov
fwait
mov
mov
ret
dec
jecxz
pop
es
xchg
mov
mov
jl
pop
jb
gs
push
idivb
pop
fists
dec
sub
push
jnp
jp
mov
add
dec
inc
or
or
data16
inc
insb
scas
pop
je
adc
push
ja
jae
add
sub
jo
jmp
lahf
push
sub
ret
or
cmpsl
scas
cs
mov
outsl
imul
inc
insb
push
inc
dec
push
cltd
add
ljmp
pop
pop
add
xchg
cltd
fnstcw
xchg
dec
insb
fnstenv
ja
lods
push
bound
push
fstl
add
shr
push
mov
clc
pop
bound
pop
imul
or
xor
fcmovb
test
add
adc
mov
sbb
ljmp
push
xor
call
clc
mov
cmpb
das
mov
jge
adc
adc
mov
adc
in
dec
dec
xchg
cmp
fmuls
push
and
or
mov
ss
adc
inc
sub
movsl
scas
push
pushf
sbb
push
push
fldenv
shlb
push
sub
ljmp
sbb
push
loopne
pop
jno
and
or
push
test
xor
test
adc
iret
jne
push
sbb
xchg
or
lahf
push
test
loope
dec
pop
mov
test
pop
adc
not
inc
inc
incb
jns
mov
insb
adcb
xchg
jne
shll
jmp
dec
adc
sub
cld
xor
mov
pop
pop
and
in
sub
or
addl
pop
es
jp
mov
push
push
cld
jo
dec
sub
out
fcoml
dec
clc
dec
test
insb
and
mov
je
pop
inc
ja
sub
pop
fs
ret
adc
sbb
in
pop
push
mov
pusha
pop
insl
pusha
std
hlt
lock
or
aaa
dec
pop
imul
xlat
push
nop
push
sbb
mov
rorb
shlb
adc
loopne
ljmp
or
ffreep
cmp
mov
filds
lcall
push
rorb
add
sarl
inc
mov
dec
push
orl
loope
mov
mov
addr16
xchg
or
xor
mov
push
std
jns
pushw
or
push
sub
pop
cmp
jp
or
call
mov
les
cmp
shl
xor
enter
mov
pop
lahf
add
in
push
aam
inc
pop
subl
pop
sbb
and
dec
mov
and
inc
mov
pop
pop
and
xchg
loopne
add
mov
mov
neg
pop
loope
mov
dec
or
bound
filds
call
out
loopne
pop
loopne
add
sub
pop
popf
aad
or
push
push
lods
int
dec
sbb
push
in
fimull
inc
xorl
jno
or
or
push
mov
orb
dec
loopne
aam
dec
and
pushf
and
adc
mov
xor
lock
loopne
iret
jbe
test
scas
add
mov
cwtl
hlt
int
jns
inc
mov
jne
or
cmp
xor
loope
addb
dec
mov
xor
push
movsb
into
pop
lods
and
fstl
sbb
test
fdivrl
lret
int3
jmp
jbe
mov
arpl
in
not
xor
shrb
pop
std
pop
repz
mov
xor
adc
addb
inc
cmc
jg
push
mov
adc
xchg
inc
addr16
aam
sbb
sbb
dec
popa
xor
or
int
add
or
cmp
orb
cmp
inc
pusha
fadds
cmp
and
dec
fdivs
sub
add
pop
loop
out
or
mov
or
jbe
adc
adc
dec
and
xor
adc
fs
movsl
cmpsl
pop
cmp
mov
xchg
adc
add
dec
jae
pushf
push
add
enter
xor
test
f2xm1
and
insl
lock
in
enter
mov
fcomps
loope
mov
mov
inc
out
mov
fs
mov
push
fisttps
cwtl
lds
sbb
cmp
retw
xchg
test
push
mov
push
dec
negl
mov
test
dec
or
ret
xor
or
scas
add
ret
jle
insl
adcl
sbb
or
enter
inc
push
jbe
fsts
xchg
xchg
mov
adc
addr16
and
pop
lods
rolb
and
cmpb
mov
test
sub
jne
or
sbb
bound
flds
jbe
sub
or
sub
push
sbbb
jo
inc
push
incb
add
call
fmul
js
jno
or
sti
sbb
loop
push
cwtl
mov
adc
adc
push
jo
push
push
xchg
push
xchg
int
and
dec
push
out
mov
lea
dec
adc
inc
jns
ror
nop
fmul
add
nop
lea
dec
and
or
sbb
mov
xchg
sub
dec
testl
call
push
addb
lea
sbb
or
jmp
push
sbb
push
fiaddl
adcl
icebp
and
or
fimuls
add
sbb
and
dec
pop
adcb
ret
xchg
fadd
movsl
push
adc
jnp
imul
or
lods
push
jnp,pt
add
roll
shl
or
sub
mov
mov
adc
movl
lahf
data16
imul
inc
int
or
pop
jb
arpl
stc
xchg
push
testl
mov
lret
xchg
lahf
adc
inc
pop
iret
push
jne
or
cmp
sbb
and
dec
sbb
bound
cli
push
rcll
sbb
sbb
aas
inc
rorb
xor
add
inc
das
aam
inc
mov
inc
leave
mov
cmpsl
fidivrs
es
lds
xorb
or
push
xor
jl
add
dec
pop
insb
fbstp
inc
mov
jmp
rolb
fstpt
outsb
sub
sub
push
inc
arpl
jl
mov
or
jge
cmp
or
mov
ss
ja
test
inc
test
add
add
xchg
int3
scas
lcall
cmp
adc
sub
gs
push
addr16
xlat
push
or
into
subb
inc
xor
fcomps
inc
pop
imul
sbb
cmp
jae
inc
arpl
cmp
push
cmp
je
lods
sub
data16
pop
inc
or
addl
cltd
loope
xor
sbb
adc
iret
inc
call
in
xchg
repnz
push
jbe
jp
aaa
bound
mov
cmp
mov
cwtl
rclb
push
add
sub
adc
and
es
inc
push
loope
jle
test
pop
push
addr16
jmp
mov
mov
inc
push
add
dec
fsts
je
pop
xchg
movsl
sarb
int3
loope
test
sub
push
mov
mov
xchg
cmp
and
mov
mov
jp
dec
jb
mov
push
add
addb
mov
das
adc
pop
jmp
add
arpl
xlat
mov
subb
mov
adc
js
mov
loope
or
sbb
inc
add
mov
add
out
cmp
aas
push
mov
or
movb
movsb
inc
pusha
xchg
outsb
lock
and
inc
xchg
fistpll
jmp
mov
dec
loop
xor
loop
mov
cmp
sti
mov
lret
mov
lock
add
adcb
adc
adc
adc
adc
xchg
pop
pop
rolb
jl
push
sbb
sub
loope
or
insb
ret
movsb
pop
add
jne
icebp
mov
adc
mov
daa
adc
shlb
js
test
aas
gs
jp
test
clc
add
call
mov
add
and
orb
mov
adc
cmp
shrl
gs
or
mov
sbb
or
fs
cmpsb
in
or
adc
outsl
push
mov
adc
roll
push
imulb
insl
stos
sarl
pop
xchg
test
movsb
cmpsl
add
mov
jecxz
push
cmpsl
pop
add
adc
mov
pop
sub
lock
jae
stos
pop
addb
lret
insl
pop
or
jno
inc
stos
pusha
stc
mov
inc
loop
lahf
test
xchg
int
jnp
cmpb
or
ret
add
cmp
enter
inc
rolb
add
shlb
mov
cmp
decb
jns
cwtl
push
jp
fidivs
ret
mov
scas
jns
ja
sub
mov
addr16
nop
xchg
sub
or
ficompl
mov
xchg
daa
push
or
ficompl
push
pop
pop
inc
mov
dec
push
sarl
in
stos
call
add
pop
enter
cmp
mov
mov
js
mov
incl
pop
and
jnp
push
push
iret
cmp
cmp
mov
add
cmp
cmp
mov
into
or
sub
shrl
sarb
sbb
push
jns
subb
subb
sbbl
dec
test
add
rorl
das
int3
dec
mov
lods
lods
test
push
js
and
sub
movl
or
xor
xor
shl
pop
adc
xlat
push
inc
ss
mov
mov
adc
inc
add
mov
addb
loop
or
popa
stos
ss
mov
fwait
sbb
cmc
pusha
xor
push
add
mov
add
add
out
dec
add
mov
das
push
and
add
inc
adc
lods
and
jno
or
jnp
mov
xor
inc
pop
call
outsb
arpl
ja
mov
dec
inc
or
add
or
loope
sbb
lock
jns
ret
mov
sbb
and
or
enter
sbb
cli
addr16
inc
cmp
add
dec
mov
xor
mov
jne
inc
cmp
ret
shlb
sub
jg
pusha
test
nop
out
add
sub
add
sbb
pop
daa
mov
adc
insb
rcr
loopne
loope
sbb
subb
aas
adc
je
pusha
lret
inc
pop
ret
nopl
mov
mov
mov
es
push
incl
enter
sub
mov
cmp
das
mov
andb
adc
loopne
or
inc
pusha
and
pusha
mov
loop
adc
imul
cmp
arpl
js
sub
sbb
push
xchg
ret
jp
in
loope
rcll
and
jl
push
fwait
pusha
mov
fldcw
pop
pushf
or
mov
int
mov
mov
sub
ret
test
dec
xor
sub
fdivrl
fisubs
or
xor
test
mov
iret
lods
mov
neg
sbb
cmp
mov
pushf
mov
les
xchg
in
lods
ret
nop
cmp
jg
sets
adc
pop
in
mov
mov
ja
rolb
loopne
mov
ds
imul
jo
sahf
adcl
inc
sbb
inc
sub
flds
fmull
iret
push
ds
movsb
mov
callw
push
or
and
mov
leave
add
pop
insl
dec
mov
dec
xchg
xlat
iret
or
inc
sbb
push
nop
xchg
subb
das
sub
lods
ja
inc
out
loope
aas
push
push
dec
adc
add
sub
and
lods
jae
sbb
or
in
xchg
lock
and
adc
ja
movsl
test
push
dec
add
mov
filds
dec
or
or
imul
xor
lods
push
hlt
sub
movsb
imul
das
outsl
cmp
lock
and
in
imul
ret
in
sbb
fnstsw
adc
daa
adc
or
cmp
mov
cld
pushf
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
pop
mov
fsub
sub
nop
hlt
xor
cmp
add
and
mov
xor
cmpb
jle
jbe
cmp
jbe
fdiv
sbb
sub
or
and
push
test
sbb
or
inc
add
adc
pop
aas
mov
sub
xchg
std
loope
adc
fisubrs
jnp
mov
add
andb
push
dec
testl
lcall
add
loopne
dec
imul
out
inc
inc
sbb
cmp
or
inc
adc
in
adc
push
jmp
ljmp
rcl
ret
ljmp
cli
cmp
dec
adc
adc
jmp
addr16
or
dec
push
push
jae
repnz
or
push
sub
cmp
push
push
jge
sbb
and
xor
pop
aaa
call
cmp
inc
dec
cmp
loopne
loopne
fwait
testb
and
or
push
popa
insb
aaa
insl
jg
add
push
pop
cmp
mov
loope
cmp
mov
sub
int3
daa
mov
add
and
jae
out
les
cld
mov
pop
stos
pop
jmp
jmp
push
sbb
scas
mov
enter
mov
mov
pop
mov
or
lock
push
adc
or
adc
adc
xor
and
rcll
ss
es
mov
inc
inc
push
pop
pushl
shlb
sub
es
enter
lock
xor
loope
mov
or
pop
sub
mov
das
adc
arpl
loope
fbstp
add
sub
daa
std
outsb
xor
dec
rorb
xor
call
ret
les
sub
cmpl
jb
push
ret
shrl
pop
enter
push
jl
aad
or
xor
jg
inc
call
push
lea
lea
call
ds
inc
inc
jl
jb
push
sub
pusha
add
adc
dec
xlat
pop
daa
lahf
dec
add
push
dec
inc
pop
cmpsl
and
inc
sub
loop
add
shlb
and
iret
cmpsl
xchg
lret
es
push
add
mov
aam
push
stc
adcl
cmpsl
cs
add
pop
out
mov
push
shrl
nop
fcoms
movsl
mov
push
add
xchg
gs
push
sbb
sub
xchg
test
pushf
or
pop
nop
pop
sbb
pop
lock
add
test
ss
sub
in
ljmp
ds
shrl
mov
adc
and
mov
adc
cmp
xchg
jne
clc
push
pop
xchg
push
insb
popa
jns
jae
push
jne
xchg
rol
stos
sub
adc
inc
mov
jmp
cmpsl
bnd
or
jo
or
daa
jns
lahf
adc
sub
ret
push
push
inc
push
fadds
dec
dec
dec
push
jb
sub
mov
lods
pop
cmp
add
mov
jg
sub
aaa
xchg
add
cmp
push
mov
decb
dec
add
pop
xor
cld
mov
pop
rcll
mov
lods
cmp
inc
pop
movsl
adc
dec
aaa
cmp
or
mov
mov
adc
mov
push
imul
in
test
lods
adc
and
popa
enter
nop
sarw
xor
push
call
dec
add
jnp
cld
es
test
imull
sub
rolb
sub
inc
fs
add
add
lcall
dec
mov
sub
shlb
push
test
xor
xor
fdivrl
add
mov
mov
int3
push
jns
mov
push
cmp
jb
and
cwtl
daa
lods
mov
add
sbb
mov
or
ja
mov
push
push
pop
xor
out
cmp
mov
out
outsl
ja
xchg
mov
push
push
mov
xchg
leave
sbb
ss
jl
sbb
iret
add
xor
sbb
shrb
cmp
js
bound
add
or
mov
adc
and
push
fsts
push
xor
xor
sarb
mov
sbb
imul
das
aaa
inc
cli
jo
cmpl
in
movsl
cs
mov
cmc
lds
jno
inc
add
insb
or
nop
nop
push
push
test
pop
mov
das
sub
clc
dec
or
fnstsw
mov
test
out
adc
add
cmp
xchg
pop
sub
das
xchg
pop
adc
adc
xchg
sbb
sbb
inc
sbb
add
lea
cli
jmp
int
or
shrb
stos
xchg
lods
and
sbb
adc
mov
adc
dec
lock
or
fsubrl
sub
mov
mov
hlt
hlt
or
cltd
inc
sbb
xor
mov
rcll
and
out
pop
push
sbb
cwtl
test
inc
call
xor
adcl
sub
js
lods
jle
push
jb
es
pop
dec
push
adc
add
jb
addr16
ss
and
imull
sbb
xchg
sub
ljmp
f2xm1
push
jb
fcoms
add
pusha
add
rcrb
sbb
fcoms
inc
wrmsr
mov
sbb
and
sub
sbb
pop
xchg
into
adc
jp
lea
and
cs
mov
popa
pop
loope
and
or
and
push
sbb
cmc
adc
fnstsw
inc
inc
mov
hlt
jne
add
cs
xchg
nop
popf
pop
testl
adc
test
and
xor
call
jle
cmc
test
and
loopne
and
cwtl
subb
leave
jns
mov
xchg
test
pop
fimull
or
xor
push
jne
xor
mov
and
loope
adc
sub
jle
dec
jne
mov
xchg
xor
cld
dec
leave
and
push
xor
lret
cli
into
and
inc
xchg
push
inc
push
cmp
add
lock
adc
fiadds
ss
jmp
daa
frstor
inc
adc
movsl
add
out
shlb
mov
and
add
xorl
es
orl
popf
sub
cmp
jmp
and
inc
rolb
inc
pop
fsubrl
imul
cs
sub
sub
or
lods
mov
mov
jmp
add
push
mov
dec
add
add
in
pop
insl
jle
aaa
adc
test
mov
push
and
mov
mov
or
push
shr
cmp
xlat
push
adc
dec
pushf
in
sbb
dec
push
dec
rcr
les
xchg
jb
add
jne
inc
dec
xchg
jmp
jbe
jmp
cmp
mov
icebp
loopne
jg
cli
loopne
shl
fucomi
and
dec
icebp
outsb
xor
sti
rolb
gs
shrb
push
ja
fcmove
nop
daa
call
mov
inc
adc
sub
sbb
inc
dec
ljmp
adc
jne
mov
xorb
test
jmp
lock
lock
pop
js
or
inc
xchg
or
call
outsl
push
push
cld
loopne
imul
xor
cmp
xchg
push
inc
and
cmp
mov
jbe
fldcw
xchg
cmp
and
or
js
xor
int3
xlat
push
pop
repnz
shrb
mov
pxor
adc
aam
lock
push
loope
inc
push
stos
flds
or
les
out
inc
push
cmp
scas
loopne
in
sbb
sbb
popf
add
xchg
fwait
or
jecxz
icebp
sub
loope
add
sub
sar
dec
je
or
sbb
pop
adc
int3
xchg
loopne
push
clc
enter
and
push
inc
shlb
xchg
adc
lods
cmp
and
and
or
mov
pop
notl
sub
cmp
jne
push
aaa
fcomp
sbb
dec
enter
adc
test
sbb
sbb
shlb
push
lock
cs
cmpl
arpl
push
test
imul
int
xor
in
pop
cwtl
dec
pop
ret
cmp
shrd
jmp
xor
cmp
cmp
imul
sbbl
test
out
lret
xchg
arpl
leave
xchg
popf
mov
sbb
leave
ljmp
test
mov
xchg
push
insb
daa
arpl
push
lock
cmp
dec
push
push
jo
push
push
xor
outsb
push
pop
jo
test
test
stos
fildl
divb
sub
lods
inc
out
pop
rolb
inc
mov
xchg
inc
int3
dec
fs
dec
in
jb
xchg
lret
cld
push
add
or
push
adc
nop
lret
push
je
push
and
push
push
cmp
pop
cmp
gs
add
test
outsl
insl
arpl
xor
mov
andl
shrl
push
sub
adc
jb
inc
inc
and
push
loope
loope
inc
outsb
dec
fcmovb
or
ja
dec
add
or
aad
roll
outsl
jae
daa
or
adc
shll
inc
jns
pusha
mov
xor
sbb
shrb
outsl
add
jbe
ds
outsl
lock
pusha
aas
or
push
and
xchg
adcl
nop
inc
aas
dec
ds
inc
xchg
jo
ds
test
fsubrs
in
push
inc
jb
xchg
test
add
xchg
testl
out
lods
das
mov
inc
inc
dec
lods
adc
int3
push
xchg
sarl
xor
pop
push
and
dec
je
inc
cmp
and
je
mov
std
cmp
sub
leave
cmp
add
decl
adc
pop
jo
test
pop
mov
cmp
cwtl
push
enter
jl
test
mov
enter
movsb
test
enter
mov
mov
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
enter
adc
enter
sbb
and
push
push
lret
enter
adc
push
sub
push
hlt
sbb
xorb
je
sub
jne
lds
pop
arpl
test
xchg
mov
mov
movsb
pop
sbb
or
fmul
adcb
subb
sbb
mov
inc
sub
xor
fstl
lret
push
cwtl
push
nop
test
inc
sub
or
shlb
and
add
push
movsb
xor
cmp
inc
sbb
int3
inc
sub
push
insb
sarb
dec
gs
fcomps
lods
loopne
push
push
movsb
in
push
sbb
cld
lret
add
adc
hlt
add
nop
and
xor
repnz
dec
sub
pop
gs
sub
add
or
test
test
adc
lret
push
sbb
sbb
push
sbb
nop
lret
adc
xor
push
sbb
xor
add
inc
cmc
xchg
inc
pushl
inc
mov
aaa
jne
je
gs
sti
xor
gs
lahf
adc
jae
and
sbb
lds
push
and
xor
or
imul
popa
jb
mov
daa
mov
je
mov
push
or
test
mov
xchg
gs
rcrl
add
pop
dec
and
mov
sbb
je
fs
test
mov
insb
jns
jp
jae
mov
addb
pop
jae
pop
pop
pop
add
sahf
and
pop
outsb
pusha
int
test
or
xchg
xchg
push
or
arpl
cmpl
mov
adc
push
mov
iret
outsb
ret
or
dec
xor
outsb
imul
jo
out
cmp
lods
sub
and
and
inc
push
or
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
jge
or
ja
and
rcll
jns
in
icebp
and
xchg
jne
insl
outsb
jo
mov
das
pop
fs
fcomps
jo
inc
imul
icebp
mov
mov
or
and
xor
sub
push
xchg
fwait
mov
add
sbb
adc
adc
fs
mov
dec
enter
dec
xor
adc
xchg
push
cmp
xor
pop
sbb
loope
repnz
aad
faddl
subl
cmpsb
sar
xchg
xor
or
mov
xchg
js
cwtl
inc
and
imul
cmp
push
outsl
nop
and
nop
dec
pop
dec
fs
sbb
inc
mov
add
xchg
add
push
and
in
stc
push
add
xchg
add
push
xor
push
in
push
cmp
and
nop
dec
pop
jo
sbb
inc
mov
fnstcw
xchg
add
sbb
out
pop
js
mov
notl
cwtl
push
pop
iret
adcl
push
push
sbb
dec
inc
clc
dec
jl
int3
dec
push
add
out
adc
or
decl
ljmp
mov
sbb
add
and
out
xchg
flds
xor
enter
push
stos
mov
adc
inc
andb
mov
pop
cmp
cmp
ficoms
arpl
add
mov
jns
cmpb
sahf
into
mov
push
push
lods
xor
sub
inc
xor
test
movb
faddl
inc
mov
cs
push
aaa
xchg
push
inc
cld
imul
scas
aaa
inc
adc
adc
js
jbe
pop
jg
adc
cmp
loopne
rcr
rol
mov
rol
pop
adc
xor
inc
push
xor
push
jbe
es
pusha
xor
mov
pop
dec
sub
dec
call
mov
xor
hlt
mov
push
fwait
dec
popa
in
jno
adc
push
push
or
dec
arpl
leave
out
js
mov
rclb
pop
pop
cmp
xlat
sub
jne
mov
add
fidivrl
loop
mov
dec
mov
inc
insl
dec
lock
push
dec
mov
adc
popa
dec
mov
xlat
and
cs
inc
push
add
int3
mov
pop
cmp
pop
xchg
mov
add
or
aaa
adc
add
xor
xchg
pop
addr16
nop
outsb
popf
add
push
push
test
pusha
cwtl
push
mov
test
out
adc
dec
dec
pop
dec
dec
outsl
add
adcb
aaa
lods
imul
pop
push
push
add
dec
outsb
inc
gs
fsubrs
pop
push
outsl
pop
cmp
or
and
mov
shrb
add
mov
mov
ds
sbb
ret
and
dec
jne
arpl
enter
pop
push
out
and
and
hlt
pusha
xor
jge
ja
mov
dec
jnp
push
insl
fs
addr16
push
pop
cwtl
adc
add
sub
arpl
and
or
and
leave
aaa
aaa
add
mov
outsb
iret
dec
lahf
mov
test
nop
mov
xorb
iret
lods
jb
xor
je
pop
jo
enter
inc
insb
aam
push
jns
iret
xor
xlat
xor
push
push
insb
iret
leave
lods
sub
pop
or
push
push
sbb
adc
lods
out
xorps
cmp
mov
mov
aaa
sbb
outsl
push
push
pop
loopne
mov
inc
push
and
arpl
mov
adc
pop
mov
test
add
pop
fcoms
push
lds
rcl
les
lock
icebp
cwtl
jle
push
inc
push
imul
testl
mov
jo
or
loopne
mov
jae
sbb
push
jns
pop
and
mov
xor
push
pusha
cltd
orl
mov
sbb
pop
dec
stos
adc
comiss
jl
sbb
add
lock
push
cmp
mov
pop
jle
and
test
add
rorb
je
pop
jg
movsl
xchg
xor
adcl
lahf
test
inc
ret
jmp
lods
cli
add
loope
push
cltd
test
aad
add
nop
out
fmul
jmp
mov
inc
mov
inc
cmpb
xor
je
sbb
fs
xor
pop
push
inc
pop
cmp
xchg
pop
adc
adc
repnz
lahf
pusha
xor
mov
cmp
je
sub
or
xor
jbe
js
jnp
iret
and
or
sub
repnz
dec
inc
xor
addr16
pop
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
and
and
cmp
cmp
cmp
cmp
sub
sub
cmp
cmp
cmp
cmp
adc
adc
cmp
cmp
cmp
cmp
sbb
sbb
cmp
cmp
cmp
cmp
add
add
and
cmp
cmpsl
stc
mov
push
lods
clc
cwtl
movsb
sahf
out
sahf
lock
call
sahf
out
fadds
sahf
out
shrb
out
sahf
mov
test
mov
jns
inc
nop
cmp
out
sahf
out
subb
sahf
out
sahf
jo
push
lahf
out
pop
add
cld
push
dec
repz
repz
inc
in
cmp
iret
repz
xor
sub
and
cmp
repz
les
mov
repz
lods
clc
xchg
movsb
out
sahf
out
pushf
call
jns
mov
test
jl
jns
out
je
insb
mov
out
pop
test
mov
dec
cwtl
inc
out
je
cli
ror
je
mov
je
adc
pop
dec
loopne
push
sbb
mov
in
jo
adc
sub
and
div
cmpsb
pop
enter
outsl
sbb
mov
dec
cmpb
push
addb
pop
pop
xor
std
and
mov
jo
sarb
push
mov
and
arpl
bound
pop
popl
mov
aaa
or
add
or
add
or
xchg
in
mov
push
loopne
ja
dec
sahf
sub
sub
push
sahf
xchg
iret
enter
hlt
mov
in
das
sbb
les
inc
adc
cmpsl
lahf
js
movsl
imul
mov
scas
dec
cmp
push
xchg
sti
jg
pop
mov
jle
mov
mov
repnz
in
jo
sarl
es
pop
xchg
xchg
sahf
pop
daa
lcall
cltd
inc
shrl
mov
xchg
dec
push
pusha
iret
mov
xchg
inc
cmpsl
les
sbb
iret
dec
inc
push
dec
jg
stos
dec
cmp
loopne
test
repnz
or
clc
xor
mov
or
das
adc
ja
scas
sub
in
int3
sbb
adc
insb
pop
fld
sarb
mov
loope
pop
push
int3
scas
popf
push
xor
fcoms
ret
cld
pop
outsl
add
and
test
mov
lods
pop
test
push
or
cmp
push
push
adc
inc
outsl
jb
popa
je
outsl
shlb
and
jb
xor
ret
mov
cld
rcr
dec
or
js
xchg
scas
sbb
or
or
or
inc
rcrl
leave
les
adc
pop
pop
fcompl
dec
movsb
or
or
popf
sub
maskmovq
negl
lahf
inc
cmpb
adc
mov
adc
mov
jl
out
pushf
stos
xchg
pop
jo,pt
les
iret
test
push
popa
pop
push
push
push
adcb
push
test
mov
inc
daa
sub
insl
pusha
jg
and
xor
xor
dec
imul
sub
push
add
mov
or
add
sbb
neg
imul
pop
adc
outsl
pop
js
out
jnp
fsubl
add
es
jb
jb
dec
mov
sbb
es
out
inc
pop
bound
jbe
es
or
jne
pop
addr16
jb
addr16
add
fidivrl
mov
arpl
insb
daa
stc
mov
jg
sub
in
jnp
in
insb
das
je
cmpsl
sbb
ss
mov
imul
ret
and
mov
idivl
jb
arpl
sbb
fnstsw
jb
pushw
das
gs
mov
imul
jmp
pop
xlat
sub
ret
and
and
outsb
xor
sahf
es
mov
dec
dec
cmp
cmpsb
ficompl
add
push
mov
shrb
push
xchg
adc
fisttpl
push
divl
outsb
sub
sbb
ret
pushf
sti
and
mov
add
inc
sahf
sub
mov
movsb
pop
sbb
add
and
jl
or
xchg
cltd
insl
ss
inc
mov
insb
insb
push
loope
mov
mov
rolb
dec
lahf
mov
mov
mov
inc
push
jne
pop
call
sbb
add
repnz
std
xorl
push
out
xchg
mov
enter
or
pop
xchg
jg
mov
cli
or
xorb
push
jae
xor
xor
mov
sbb
cmp
cvttps2pi
adc
xchg
movsl
mov
or
int
test
jp
out
cmpsb
or
pop
xor
jmp
lret
dec
nop
cltd
adc
inc
movsl
repnz
movsb
jmp
sbb
or
nop
js
and
sub
inc
mov
inc
jae
int3
jbe
fs
psubq
dec
call
stc
bound
arpl
dec
shll
add
add
push
pop
pop
or
or
or
or
or
or
iret
movups
adc
adc
iret
repz
push
pop
sbb
aas
iret
repz
sbb
push
pop
and
and
and
push
data16
imul
loopne
fs
sbb
ds
repz
dec
pusha
jno
xchg
movsb
cmp
repz
xlat
call
stc
or
sub
dec
out
sahf
out
jo
xchg
mov
mov
in
repz
push
insb
push
push
sbb
cmp
xchg
test
ss
mov
add
pop
push
or
add
push
push
adc
adc
push
movsb
jb
in
sbb
sbb
sbb
push
sub
push
and
and
adc
in
sub
xor
pop
push
mov
adc
push
cs
and
pop
dec
dec
in
lret
sbb
mov
sbb
cs
pusha
dec
movsl
repnz
ja
push
popa
imul
bound
arpl
push
sub
and
push
sub
xor
and
repnz
adc
xorl
and
stos
add
in
popf
test
les
push
divb
jo
mov
adc
fmull
fmul
inc
loope
inc
mov
test
add
pop
dec
out
xor
lea
lret
mov
mov
push
js
lock
out
je
or
pop
push
jns
sub
clc
push
adc
push
add
inc
outsl
and
sbb
sbb
lock
ja
notl
daa
sbb
pop
xchg
or
loopne
xchg
jne
ficomps
loopne
jl
outsb
imul
jl
mov
dec
push
pushf
pop
sbb
push
jno
inc
cltd
lret
hlt
pusha
mov
loope
push
mov
push
orb
sbb
test
cmp
sub
push
mov
jae
adc
popf
cmp
mov
pop
adc
pop
cmp
mov
imul
lcall
pop
jno
enter
enter
movb
sahf
push
cmp
xchg
inc
add
es
pop
iret
jnp
stc
push
add
sbb
xchg
push
inc
push
lock
push
adc
push
push
adc
add
push
inc
xor
fs
ret
push
adc
je
pusha
mov
outsl
outsb
sub
imul
push
dec
push
or
fwait
inc
inc
push
lcall
jno
aam
cld
dec
push
xor
inc
adc
add
or
cmp
inc
mov
pop
into
aam
out
mov
ds
push
enter
test
xor
ds
enter
mov
push
aam
jbe
push
and
insb
lret
aad
cmp
fcomps
scas
mov
mov
loopne
fdivl
les
pop
xlat
mov
nop
adc
dec
repz
add
int
jge
aam
push
dec
cmpb
cmp
cli
cmpsb
les
cmp
mov
orb
xchg
popa
xchg
rclb
iret
push
or
sub
outsl
pop
sub
adc
and
push
je
call
pop
lock
pop
imul
fisubs
lods
push
fiadds
sbb
sbb
and
add
jae
sbb
jne
push
out
dec
aam
je
add
mov
mov
mov
idiv
enter
faddl
pusha
jbe
push
loopne
loope
divl
pop
icebp
jmp
inc
sahf
xchg
pop
sbb
adc
lds
add
inc
sub
test
or
ja
popa
stos
dec
push
xor
xor
mov
inc
push
in
ds
leave
pusha
mov
mov
mov
mov
pop
inc
jo
js
inc
dec
add
jns
dec
pop
int3
adc
lret
jb
cmpsb
jge
sti
sub
push
test
nop
dec
ret
lock
je
arpl
clc
fdivr
push
adc
test
pop
jae
adc
je
clc
mov
mov
iret
or
cmp
pop
inc
hlt
hlt
adc
or
call
xor
cmpsb
movsb
addb
pop
lea
movsb
sahf
xlat
or
sbb
pop
pusha
add
orl
push
cmp
pop
test
mov
lock
insb
pop
jne
test
in
test
or
xchg
lcall
fs
popa
nop
jae
int
adc
adc
sbb
pop
or
sbb
mov
push
sbb
push
cs
pop
out
lcall
fwait
into
dec
mov
add
sbb
or
sahf
out
loop
jne
dec
cwtl
cltd
movsb
outsb
mov
sbb
fadds
pusha
aas
pop
push
ret
xor
inc
mov
sub
inc
into
inc
ss
inc
mov
into
je
rcrl
icebp
mov
jae
aam
or
les
and
rcl
adcb
sub
and
pop
push
ja
pop
in
and
into
cmpl
xchg
xchg
cmp
push
cmp
inc
in
ss
or
negl
data16
push
push
and
push
cmp
push
dec
adc
lock
mov
and
fdivrs
fmull
in
lcall
bound
sbb
es
mov
rol
daa
mov
inc
nop
inc
enter
aas
aad
inc
inc
js
je
nop
add
idivb
fadds
int
mov
ja
aam
loopne
in
js
pop
sub
jae
pop
enter
call
or
dec
push
jo
mov
push
xchg
pusha
mov
inc
in
sbb
fldenv
inc
fmuls
roll
loopne
roll
shrl
fiadds
xchg
fcompl
push
inc
loope
cmp
das
xchg
rcl
out
loop
clc
pusha
adc
dec
xor
call
xor
xchg
aam
in
jne
add
adc
push
xlat
add
or
enter
dec
jl
pop
cmp
inc
pop
cmp
loop
push
mov
pop
xor
popf
lock
orb
push
and
jb
mov
int3
aaa
adc
cmp
jmp
pop
add
inc
out
add
sbb
add
mov
pop
ss
popf
rolb
setge
rorl
pop
add
pop
pop
push
ret
adc
mov
orl
and
cmc
adc
inc
pusha
pop
sub
cli
jl
js
call
mov
inc
jne
loope
jl
ljmp
push
xor
dec
sub
mov
std
adcl
jmp
cmpb
cmpsl
popa
add
add
js
aam
push
insl
push
xor
and
cmc
mov
add
fisttps
add
dec
adc
lea
jp
sub
cmpsl
push
cmp
xchg
clc
repz
adc
inc
lock
js
movsb
idivl
add
cli
orl
sub
or
cwtl
push
jno
out
add
push
push
mov
mov
pop
pop
jl
sbb
sbb
inc
mov
fwait
das
hlt
mov
push
mov
cwtl
insl
and
sahf
mov
shlb
rorl
fildl
cmc
lret
test
lods
and
fdivrl
repnz
hlt
loop
or
jg
test
and
cmp
je
push
xlat
push
rclb
push
add
mov
sbb
mov
mov
xorb
aas
xlat
clc
pop
cmc
les
add
mov
movsb
or
lock
pop
je
or
or
push
push
dec
dec
in
sahf
jge
xlat
add
movsb
dec
mov
and
jp
pop
cwtl
jmp
out
icebp
jbe
inc
xor
or
mov
sbb
adc
sub
pop
sub
test
adc
adc
and
fwait
dec
rcrb
inc
cmp
jmp
and
push
add
cmpsl
push
jb
or
push
xor
push
cmp
add
push
inc
in
cmp
mov
adc
aaa
mov
pop
jbe
xchg
ret
out
das
test
jle
adc
xchg
call
mov
pop
jmp
jnp
xchg
adc
shr
fbstp
repz
dec
push
jge
movsl
cmpsl
pop
aas
lods
or
inc
mov
movsb
shrb
dec
mov
cmp
cmp
add
mov
jo
push
jg
jmp
push
xchg
cwtl
inc
loop
lods
inc
jg
test
push
scas
mov
mov
push
or
int
lcall
xorl
loope
sbb
and
outsb
jae
ret
cs
dec
dec
loop
mov
inc
inc
cmp
sbb
add
xchg
mov
leave
add
js
imul
jb
jno
movd
outsl
sub
dec
dec
mov
outsl
and
inc
insb
pushf
mov
addr16
dec
outsb
pcmpeqb
adc
dec
mov
cld
jns
push
pop
sahf
out
cmp
add
sbb
jns
xor
push
dec
jmp
aad
pop
mov
icebp
cmpsb
fs
and
pop
mov
dec
jp
cmpsl
adc
push
pop
lahf
dec
add
mov
and
aam
test
std
or
add
push
cmc
lods
shlb
cmp
or
out
sub
xchg
loope
sbb
stos
sub
push
or
mov
sbb
iret
and
sbbl
push
cmpl
decb
adc
cwtl
sub
dec
mov
into
push
cld
mov
fwait
cmp
xor
xor
loope
sub
scas
cli
pop
dec
add
dec
testb
lea
test
dec
fimull
add
or
movsb
add
push
jmp
sbb
xor
and
push
and
mov
loopne
mov
dec
imul
xor
rorb
add
xor
ret
adc
jns
add
loope
jmp
lret
xchg
adc
push
lods
lahf
sbb
jl
add
sub
inc
shr
cmp
push
inc
into
jno
dec
pop
jge
insl
sbb
ret
jae
add
push
in
ret
loope
mov
pop
imul
add
sub
cs
mov
nop
inc
lock
or
mov
push
pop
mov
sub
and
jmp
sub
pop
and
inc
clc
mov
inc
loopne
fmuls
lea
inc
in
cmp
mov
and
enter
pop
fs
push
jne
in
adc
dec
inc
call
sahf
adc
roll
mov
clc
stc
sub
rol
xchg
fistl
and
jne
mul
aaa
std
decl
arpl
cs
sub
sub
and
sub
sub
fucomi
push
pop
sbb
cmp
sub
sub
and
xor
push
or
cs
xchg
xchg
or
movb
add
in
push
les
out
xor
or
dec
cmpsl
aas
mov
int3
xor
and
mov
and
mov
aam
mov
jg
popf
pop
adc
subb
mov
mov
jno
aad
push
mov
mov
and
fldcw
push
mov
mov
inc
repz
mov
dec
xchg
test
stc
mov
cmp
sub
incb
insl
jo
inc
call
mov
xchg
push
cmp
dec
mov
mov
or
add
push
pop
imul
pop
push
addr16
mov
loope
mov
mov
pop
imul
or
sbb
mov
adc
ret
cltd
inc
movsl
ja
das
sbb
pusha
adc
cmc
je
sub
pushl
or
pusha
nop
andl
or
or
aas
sub
sbb
add
add
jo
adc
mov
xchg
cwtd
inc
fiaddl
subl
adc
adc
inc
loope
add
in
js
or
adc
xor
dec
fildl
stos
adc
sub
jae
mov
or
das
dec
insb
adc
sub
addr16
jl
xchg
and
ja
pop
push
or
or
mov
xor
test
mov
mov
mov
dec
dec
dec
inc
dec
push
add
pop
shlb
mov
dec
and
test
xor
aaa
aaa
les
or
or
sbb
push
dec
xchg
lret
aad
mov
scas
add
aas
sbb
mov
sub
xorb
ljmp
cmp
jne
sub
jb
jne
mov
insl
insl
mov
inc
sti
jmp
cmp
cmpsb
mov
loopne
mov
dec
pop
add
cmpsl
inc
daa
adc
xor
xor
leave
mov
push
jp
inc
mov
add
shll
pushf
subb
and
push
dec
pop
adc
or
cmp
cmp
popa
test
sbb
loopne
adc
mov
aaa
xchg
xchg
test
inc
push
adc
sbb
imul
pusha
pop
sub
sub
addb
jmp
nop
inc
push
adc
or
add
push
cli
mov
or
xor
inc
loopne
adc
dec
xchg
jno
mov
fdivs
cmp
adc
xlat
xchg
add
outsl
ss
adc
clc
inc
or
and
xor
scas
cmp
mov
out
loop
mov
jae
lock
push
pop
test
dec
mov
lock
aaa
lret
test
add
shlb
mov
cmp
or
ss
push
mov
add
jle
ss
add
push
jne
ficoms
jmp
push
jbe
pop
add
add
or
inc
outsl
mov
sub
lea
and
sbb
pop
outsb
adc
xor
or
inc
xchg
add
xchg
jmp
xor
push
lods
sub
ret
push
mov
jne
pop
mov
out
out
int3
push
xor
nop
in
call
push
rorb
sub
cld
add
or
mov
and
insb
xor
insb
xchg
cwtl
ds
jl
jns
pusha
jl
fsubrl
lods
mov
pusha
push
push
pop
pusha
lock
gs
nop
outsl
mov
pop
cmp
or
sbb
cmpsl
test
ss
pop
ds
and
xchg
lods
jbe
loopne
dec
add
xor
push
push
adc
add
jg
pop
nop
xchg
pushf
pop
call
add
and
adc
xchg
js
dec
mov
jo,pt
faddl
in
insb
pop
push
scas
mov
mov
inc
push
sub
inc
push
pusha
push
mov
mov
pushf
or
inc
jnp
pop
sub
xor
sbb
xchg
xor
test
sbb
in
scas
xchg
adc
popa
and
outsb
xor
mov
enter
out
cmp
inc
and
jge
fs
push
fldl
nop
movl
outsl
adc
aaa
dec
mov
mov
addl
or
aaa
or
test
mov
lds
in
sbb
and
push
mov
adcb
mov
push
jbe
fidivs
icebp
sbb
xor
insl
bound
push
ret
and
push
jns
adc
and
jo
sbb
loopne
or
inc
sub
mov
inc
jne
push
arpl
dec
push
xor
pop
ja
mov
jbe
pop
xor
or
outsl
shlb
pop
adc
sbb
or
push
dec
jo
push
jo
pmaxub
movsb
cs
imul
imul
mov
data16
push
or
xchg
dec
add
or
cmp
mov
pusha
sbb
add
or
rorl
imul
fidivrs
or
pusha
push
sub
add
pop
jp
jg
insb
pusha
cmpsl
test
hlt
pop
fsubl
mov
rol
out
push
test
adc
in
sbb
mov
hlt
sbb
adc
sub
sbb
outsl
or
pushf
add
or
push
add
hlt
js
inc
or
mov
or
pop
sarb
xchg
inc
adc
xchg
imul
ffreep
decl
or
and
roll
xor
and
push
add
and
jmp
xor
sti
insl
xchg
inc
mov
pop
jno
pop
shr
test
add
xchg
add
pop
in
adc
decb
bound
mov
jb
add
cmp
xchg
out
add
add
and
mov
adc
pop
stos
insl
adc
xchg
dec
dec
push
add
loopne
pusha
in
sub
adc
ja
xchg
fldcw
jmp
add
inc
pop
cmp
popf
add
jo
xchg
repz
faddl
adc
mov
pop
inc
nop
pushf
cmovb
adc
in
ret
ror
into
cld
nop
cmpsl
icebp
andb
push
dec
or
pop
jmp
cmp
imul
inc
sub
mov
mov
call
xor
xchg
pop
mov
and
pop
pop
pop
mov
xchg
iret
add
iret
mov
mov
adc
push
stos
or
cwtl
pop
adcb
and
inc
or
mov
xchg
gs
or
sub
jl
jle
cmp
jnp
add
paddusb
push
outsb
xor
add
mov
mov
fmull
add
orb
aad
adc
bound
arpl
fst
xlat
outsb
add
jmp
push
mov
add
adc
add
je
push
and
scas
pop
jo
add
shrb
add
loope
cmp
push
pop
add
mov
sub
js
push
jg
xchg
sarb
ficoms
xlat
gs
mov
out
mov
push
mov
mov
les
dec
sbb
das
shlb
pop
adc
or
lock
imul
popa
bound
or
popa
lret
syscall
push
ret
or
sub
pcmpgtb
add
push
jo
test
or
repz
out
and
adc
or
test
les
iret
jl
inc
or
push
pop
and
pop
add
mov
pop
ljmp
enter
sbbb
inc
das
mov
jno
dec
in
enter
dec
fcmovnb
das
in
rolb
push
push
adc
call
cs
jge
int3
mov
push
xchg
dec
sub
add
add
add
add
add
ljmp
xchg
push
or
pop
add
or
cli
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fistps
jmp
ljmp
jmp
jmp
jmp
jmp
or
loop
loope
loopne
fdivrp
fdivr
fisubl
call
call
call
call
call
call
call
call
dec
dec
fdivr
aaa
lret
int
int3
dec
dec
icebp
dec
lcall
in
push
sub
js
jns
jnp
push
push
mov
lahf
out
daa
xchg
lock
cwtl
lock
test
push
or
adc
repz
loope
cmpsl
dec
and
lock
push
cmp
push
out
push
mov
sahf
divl
push
push
je
inc
sbb
mov
fcomp
jnp
inc
xchg
out
out
jno
mov
fisttps
sbb
je
iret
sbb
insb
loopne
lahf
out
jl
ffree
dec
fisubrs
loop
and
xor
cmp
and
push
push
push
out
xchg
data16
adc
enter
imul
or
inc
out
sbb
push
fdivr
or
mov
cs
jle
mov
push
leave
xor
imul
pop
sbb
adcl
out
or
adc
int
sahf
out
or
cmp
clc
inc
add
add
sub
and
add
jmp
dec
inc
mov
cs
push
sub
pusha
fdivrs
je
call
incl
test
push
dec
cmp
cmp
sarb
xor
pop
xor
pop
inc
or
sbb
jbe
xchg
mov
cmp
xlat
sub
pop
add
test
push
icebp
mov
jg
fwait
cmp
pop
call
dec
jg
dec
ret
movsb
inc
jle
dec
jp
or
add
fwait
pop
dec
pop
pusha
sti
mov
push
xor
xchg
lds
and
mov
mov
lcall
jns
sbb
add
or
jo
call
or
add
bound
inc
push
out
sar
add
adc
jns
iret
jl
inc
sarl
sbb
dec
cmp
and
push
push
iret
mov
adc
dec
add
aaa
outsb
adc
adc
add
jbe
jge
and
add
add
pop
or
adc
das
add
clc
insl
add
addl
cmp
test
adc
sbb
sbb
pop
sbb
add
add
aaa
mov
mov
jo
inc
stos
xchg
or
adc
adc
and
and
mov
mov
mov
mov
mov
add
push
mov
xor
cmp
push
rcrl
add
in
inc
inc
inc
inc
inc
incl
inc
inc
ss
cmpsb
std
mov
lock
pop
andl
mov
mov
mov
mov
pop
add
and
add
and
cmp
repz
mov
cld
sarl
and
inc
int3
mov
fdivl
sti
out
adc
push
lods
sub
sub
sub
int
sub
shl
and
jbe
lahf
pop
jl
xchg
dec
or
push
and
jle
push
imul
mov
and
lahf
out
pusha
int3
dec
jbe
cmpsb
push
insb
sti
cmp
repz
test
and
push
sahf
out
mov
xor
mov
iret
mov
movsb
push
sbb
mov
sbb
repnz
cwtl
push
mov
mov
aaa
xchg
push
test
mov
test
ds
sub
sub
jge
pushw
insb
sahf
pushf
dec
push
push
dec
sarb
out
jge
int
cmp
clc
es
jge,pt
iret
repz
or
mov
sub
pop
or
sbb
jnp
dec
jnp
sub
push
orl
push
data16
lods
sbb
sbb
push
mov
push
xorl
loopne
test
ja
fbstp
mov
mov
xchg
rolb
inc
or
jb
test
mov
pop
push
mov
bound
loopne
push
daa
sbb
aas
pop
sub
push
outsl
add
cmpsb
cmp
pop
in
mov
push
pop
lahf
mov
and
adc
dec
orb
dec
and
push
xchg
dec
push
rcl
push
sub
push
or
clc
es
adc
in
add
mov
push
fs
aam
repz
mov
pop
and
leave
mov
rorb
add
xchg
or
inc
rorl
pop
mov
outsl
mov
jmp
nopl
mov
or
xor
add
or
adc
xor
add
and
adc
les
inc
sub
lahf
daa
push
mov
add
mov
mov
xchg
popf
movsl
mov
cmp
repz
repz
mov
test
sub
je
or
inc
push
int3
push
pusha
mov
xchg
js
js
fs
mov
or
inc
add
inc
pop
mov
adc
pusha
rol
ja
je
pop
add
out
push
jb
push
movsb
lahf
dec
inc
popa
mov
lahf
sbb
push
aad
push
xchg
fwait
lea
mov
xchg
nop
or
orb
sub
lock
xor
push
push
and
cmp
sbb
add
pop
nop
xor
inc
sbb
imull
stc
add
inc
movl
add
add
push
insb
sbb
cltd
sbb
push
push
icebp
in
sbb
rcrb
loopne
dec
std
sub
cltd
pop
mov
jno
inc
push
int
add
and
jne
xor
and
lock
andb
jne
adc
clc
inc
subl
or
xchg
or
pop
inc
add
or
pop
lods
sbb
adc
out
mov
or
orb
sub
out
mov
rcrb
pop
adc
jns
dec
inc
or
or
outsb
adc
lods
movsb
push
xchg
daa
push
fmuls
push
leave
inc
push
push
inc
push
inc
cs
pop
daa
push
jo
daa
or
shr
addb
sbbl
rorb
xchg
daa
dec
push
jo
imul
or
psubusb
push
popa
push
daa
add
xchg
inc
inc
and
hlt
sbb
das
loopne
lcall
in
or
inc
fbstp
mov
push
lcall
inc
cmp
les
ret
or
adc
in
jmp
inc
lret
dec
cmpsl
scas
lods
mov
jl
xchg
test
adc
and
loope
das
xchg
push
les
js
je
ret
sbb
jbe
call
cmp
jo
xchg
mov
sbb
repnz
rcrl
push
out
sub
xchg
adc
psrlq
push
and
mov
sbb
leave
sbb
es
out
adc
pusha
xor
push
cwtl
test
add
fs
nop
sub
push
push
xchg
adc
jo
mov
incl
xor
fildll
cmp
jl
mov
aas
imul
mov
sbb
lret
or
and
imul
ret
cltd
adc
les
jno
add
xlat
sub
fsubl
fnstsw
mov
sbb
leave
das
add
mov
sbb
sub
lods
push
adc
xchg
aas
adcb
dec
jne
out
adcl
push
cmp
cmp
aam
mov
shlb
shll
jg
addb
push
push
sbb
stc
add
add
adc
rcrb
dec
rcll
inc
or
adc
adc
sbb
xor
shll
and
sub
pop
xor
sub
scas
push
push
xchg
or
icebp
pop
mov
in
push
in
jg
inc
add
jne
add
test
push
bound
je
cmpl
adc
adc
inc
sub
mov
sbb
or
je
lock
xchg
dec
je
pop
and
ja
xchg
scas
sub
and
cmp
cmp
dec
sbb
mov
jo
and
popf
cwtl
adc
add
cmp
push
adc
mov
xchg
adc
popa
sub
adc
sub
je
rcrb
push
cmpsl
add
sub
sub
ss
and
in
dec
shrb
mov
or
nop
fadd
repz
or
ja
jae
jg
xor
push
lods
or
lock
loope
adc
add
xchg
je
mov
jmp
es
sbb
cmpb
mov
inc
je
inc
adc
and
jle
or
mov
and
and
int
push
add
repnz
xor
mov
fbstp
inc
add
iret
outsl
add
sbb
push
jp
and
add
bound
mov
sub
icebp
mov
pop
inc
movsb
mov
add
inc
pop
cmp
inc
dec
mov
add
daa
jae
mov
sbb
into
and
mov
xor
bound
xchg
lds
pop
adc
mov
aaa
and
push
xchg
mov
pop
push
insb
insb
jbe
iret
mov
lea
add
add
mov
rolb
sub
addr16
add
bound
pop
xor
rcll
inc
arpl
adc
sahf
popf
jne
add
push
rorb
pusha
and
adcl
sbb
mov
adc
or
es
push
sub
lock
xchg
mov
les
mov
in
jle
or
rclb
addr16
push
or
neg
xchg
inc
inc
aad
and
cmp
daa
fiaddl
cmpsl
test
pusha
sbb
pop
mull
mov
cmp
adc
push
call
pop
cmp
idiv
ja
add
push
add
incl
dec
outsl
pusha
sarl
jb
mov
adc
jmp
cmp
test
int3
adc
test
dec
add
xchg
or
mov
rolb
add
not
movsb
and
jl
xchg
pushf
in
push
rcrl
xor
sbb
sti
xor
fiadds
outsb
sub
mov
notl
xor
xor
or
cmp
lods
cmpsl
popf
mov
test
mov
and
sti
push
mov
sub
icebp
adc
jbe
push
lods
inc
imul
popa
sti
or
add
sti
mov
push
xlat
jle
xor
dec
inc
lea
push
and
cltd
dec
aaa
push
adc
dec
sbb
and
js
sarb
aaa
adc
in
sub
add
mov
adcb
shlb
mov
mov
push
xchg
add
in
pop
lods
loopne
dec
in
incl
xchg
sub
mov
js
jmp
lock
mov
push
pop
cmpl
cs
jo
push
aam
sub
je
ror
xorb
sbb
mov
outsl
ret
xorb
sbb
adc
sub
push
lea
imul
mov
pop
lea
mov
sub
push
or
insb
add
jecxz
shll
mov
sbb
jle
inc
push
mov
sub
daa
mov
dec
arpl
cmpsl
fstl
sti
add
add
and
pop
or
cmp
jne
add
mov
or
sub
sbb
and
mov
or
sub
je
popf
sbb
mov
push
cmp
push
cmpsb
jo
xor
inc
jne
and
adc
divb
shlb
adc
outsb
test
dec
mov
movsb
fimull
pusha
pop
in
sbb
lock
push
xchg
jbe
jbe
push
pop
mov
mov
push
add
loope
dec
test
lock
out
and
pop
inc
sub
cmp
xor
js
lods
ss
jmp
fmuls
fwait
inc
cs
mov
test
leave
and
int
mov
mov
adc
jmp
scas
movsl
test
sub
jmp
push
test
jmp
or
insb
jmp
mov
pushf
sbb
inc
mov
pop
shlb
push
pop
fisubl
arpl
test
pop
cmp
push
xchg
mov
pop
jne
pop
or
inc
enter
out
sbb
jl
mov
cmpl
subb
mov
adc
mov
xchg
push
loopne
mov
add
je
out
shrb
rolb
in
push
pushf
sub
and
dec
cli
mov
sbb
mov
push
adc
mov
mov
sti
or
add
mov
sub
mov
insb
sub
or
pop
push
clc
mov
push
sbb
pop
dec
sbb
jnp
xchg
mov
mov
xor
inc
inc
pusha
lea
mov
movb
pop
mov
insb
xchg
add
xor
sti
lea
adc
jmp
out
jae
mov
cmp
cmovae
adc
pop
loop
add
ficompl
mov
pop
pop
inc
es
add
lds
or
mov
shll
js
inc
lods
les
and
cmp
cmovae
and
push
push
testb
fists
push
sbb
std
dec
adc
pusha
jne
mov
xor
cmovno
xor
and
jmp
pop
mov
mov
fsubrl
sub
and
push
or
cmovb
mov
aas
push
andl
clc
push
cmp
jl
push
inc
fcoml
pop
lea
popa
adc
adc
push
mov
dec
xor
mov
dec
mov
mov
out
out
sbb
icebp
push
pop
lret
int
sti
sub
jbe
not
or
stos
xor
xor
dec
pop
fdivrl
rol
ret
stc
cmp
jge
mov
xchg
or
mov
mov
adc
mov
inc
imul
cmp
out
aas
add
imul
inc
inc
push
or
stc
icebp
imulb
nop
and
cmp
fistpl
dec
or
call
stc
fstpl
fwait
jmp
inc
and
rolb
cmp
out
and
lret
inc
mov
adc
cli
imul
arpl
insl
pop
sub
rclb
lcall
sbb
fcomp
hlt
cmp
outsl
jmp
sub
add
adc
mov
xchg
pusha
jo
cmp
xchg
add
add
outsl
inc
clc
mov
es
sub
pop
mov
iret
add
mov
or
sub
add
dec
add
lret
dec
or
add
lea
and
add
xchg
jecxz
sbb
jns
les
mov
out
fisttpl
sbb
addr16
mov
cmpl
mov
mov
imul
dec
or
or
inc
pop
sub
imul
mov
nop
mov
js
call
in
mov
push
dec
sub
add
mov
xchg
popa
out
push
fcomps
push
dec
xchg
shlb
push
cli
fst
and
push
mov
cmp
dec
xor
xor
ror
ficoms
mov
jne
sbb
popl
xor
fisubs
sbb
jne
js
mov
jbe
jo
cwtl
or
push
pop
or
stos
ss
jo
ds
inc
incb
or
lods
add
sbb
cmpsl
fwait
mov
mov
mov
sti
movb
adc
adc
push
cltd
mov
and
adcb
punpckhdq
stos
adc
andb
xlat
insb
cmp
add
cmp
and
jmp
inc
mov
loop
je
pop
mov
or
add
enter
icebp
push
and
mov
jmp
mov
push
pop
outsl
je
les
add
test
cmp
addb
add
cmp
sbb
stos
and
or
jmp
mov
xlat
push
cmp
mov
mov
ja
shll
push
sub
cltd
dec
imul
pop
daa
ljmp
fdivrs
adc
cmp
bound
jo
xchg
aaa
subl
arpl
mov
mov
xchg
add
pop
and
sbb
and
notb
outsb
adc
mov
ss
loopne
mov
jl
ljmp
mov
daa
xchg
add
outsb
sbb
daa
dec
ret
jecxz
dec
mov
sahf
fwait
push
repz
lds
push
imul
faddp
inc
les
jno
lods
pop
xchg
les
sbb
cs
cwtl
sbbb
enter
dec
add
sbb
or
dec
push
push
inc
push
dec
adc
inc
addr16
push
mov
bound
stos
iret
and
add
rsqrtps
outsl
add
sbb
add
add
mov
test
mov
push
imul
roll
ret
or
lock
mov
mov
lea
push
pop
daa
insb
cld
xchg
inc
pusha
mov
movsb
sti
push
jnp
dec
jecxz
mov
mov
sbb
mov
add
mov
cs
lahf
dec
xchg
mov
cmp
ja
movb
sub
inc
sbb
mov
hlt
imul
or
es
add
xor
push
push
mov
lahf
pop
loopne
test
fwait
test
outsb
add
dec
sub
icebp
mov
jmp
lret
out
andl
pop
lea
push
insl
cmp
std
mov
jo
iret
scas
icebp
and
jb
pop
mov
clts
push
sub
and
pop
adc
shrl
or
pop
outsb
pusha
mov
sbb
add
xchg
jae
sub
jns
and
int3
sbb
pop
pop
mov
addb
xchg
fiadds
arpl
mov
out
movb
add
fnstenv
lea
dec
rcrl
or
or
jne
xor
pop
or
xor
mov
sub
movzwl
decl
lret
add
jmp
cmp
je
mov
test
jbe
xor
push
adc
or
mov
ss
and
push
or
adc
add
aaa
fists
pop
cmp
cmp
sbb
dec
cmp
or
jmp
sbb
clc
add
test
xor
cmp
sub
add
cli
adc
sub
xchg
rol
lods
mov
pop
push
or
pop
mov
cmp
sbb
cmpl
in
and
popf
pop
inc
lahf
jne
adc
addb
test
mov
add
loopne
pusha
add
adc
insl
in
cmpsl
pop
and
push
sub
sbb
lret
dec
stos
jmp
pop
mov
inc
push
sbb
bound
aad
lock
shrl
inc
sub
dec
pop
sbb
jecxz
push
js
sbb
or
mov
daa
in
xchg
sbb
or
mov
inc
push
gs
jle
adc
mov
add
cmp
mov
dec
and
dec
mov
push
orb
push
cmp
scas
imul
pusha
lock
cmp
jp
mov
jb
adc
pop
cmp
jo
xchg
adc
imul
pushl
push
add
cmp
pop
in
jne
cmp
mov
cld
subl
cmp
and
cmpsl
xor
or
or
mov
aaa
sbb
enter
fisubrl
cwtl
lret
xlat
xor
ss
mov
es
push
orb
cmp
adc
movsb
push
sti
jae
mov
sbb
add
pop
cmp
inc
popa
loopne
push
xor
jmp
ljmp
dec
sti
rcrl
inc
movl
push
add
pop
pop
mov
sbbl
add
test
hlt
jmp
shlb
ds
add
dec
or
ret
cs
ja
or
add
mov
push
mov
mov
insb
out
cmpsl
push
lea
shrb
inc
xchg
ljmp
aad
jmp
push
inc
insb
xor
shrb
je
push
jge
dec
call
movsl
nop
popf
push
pop
ljmp
sbb
das
inc
and
cmp
xor
inc
movsb
sbb
addl
loopne
pop
call
cmpb
pop
mov
insb
xlat
icebp
cmp
inc
xor
movsl
xchg
hlt
or
les
pop
in
fsub
mov
pop
dec
daa
sub
sti
call
push
cmpsb
lds
and
cwtl
xor
sbb
lods
or
fadds
cmp
or
pop
mov
pop
xlat
mov
mov
adc
ret
bnd
push
mov
pop
sbb
sbb
xor
sbb
mov
push
cmp
mov
arpl
mov
push
xchg
test
loop
test
out
in
add
xor
inc
pop
popa
and
or
int3
ds
mov
mov
push
xor
inc
das
push
adc
lock
push
cmp
cli
adc
subl
loopne
sbb
xchg
clc
or
mov
mov
dec
dec
push
jle
int3
xor
xlat
adc
cmpsl
and
mov
push
arpl
xor
lock
nop
call
fdivl
and
jb
xor
mov
cmpsl
xor
and
sahf
mov
cmp
jne
stc
or
and
cmp
jne
sub
js
push
add
pop
call
inc
int3
xchg
clc
leave
mov
xor
jbe
jne
test
cmpl
aam
lods
pop
push
je
cmp
push
movsb
mov
sub
sahf
xor
jle
ret
ljmp
cs
lds
inc
pop
mov
scas
inc
dec
push
push
testb
push
inc
xchg
test
into
or
and
rcl
and
sbb
dec
dec
xchg
clc
push
dec
or
fstpl
cmc
sbb
jne
pop
dec
jne
or
imul
and
ret
cmp
push
lret
mov
inc
mov
or
cld
lock
jl
inc
add
rorb
iret
and
dec
addb
jle
pusha
add
jecxz
cmpsl
sub
test
mov
cmp
frstor
sarl
cmp
xchg
nop
jle
cmp
insl
and
mov
dec
mov
push
adc
adc
sar
pop
cwtl
add
pop
or
dec
push
jmp
inc
adc
fs
sub
jo
imul
cmp
and
incb
sub
jg
hlt
pop
popl
inc
xor
push
pop
push
push
insl
mov
das
pop
dec
xor
loope
xchg
outsl
das
push
push
loopne
mov
roll
mov
cwtl
cld
inc
inc
lret
mov
push
inc
dec
add
push
insb
pusha
push
fistl
inc
push
xchg
or
in
ss
add
in
outsb
bound
outsl
mov
inc
adc
in
and
cmp
and
dec
sbb
adc
mov
or
imul
fcoms
dec
arpl
jge
xchg
mov
mov
push
aad
cmp
cli
clc
dec
mov
pop
rcrb
arpl
adc
pop
scas
lds
out
jmp
sbb
out
rorl
mov
fadds
call
sti
cltd
and
lods
sbb
mov
imul
or
adc
or
add
in
dec
xor
rolb
hlt
addb
cmp
cld
or
pop
fs
cmpsl
pop
mov
or
outsb
dec
add
push
cmp
mov
pop
sbb
fsubs
ret
cmp
in
pop
pop
ljmp
adc
and
xor
cmp
push
pop
sub
inc
xchg
mov
mov
jo
add
mov
mov
inc
shr
aam
fdivrl
cmpsb
or
adc
lods
pop
pop
mov
push
pop
insl
insl
ror
inc
inc
call
bound
addl
movups
sbb
fiadds
push
or
lret
sbbb
push
and
stos
mov
mov
add
mov
sbb
mov
sub
jb
cmp
mov
or
roll
pop
dec
stos
mov
jo
outsl
nop
sub
pop
xor
and
cmp
mov
movsl
nop
jo
adc
mov
inc
and
push
inc
or
mov
out
and
push
imul
dec
nop
ret
or
dec
fadds
pop
dec
andl
scas
inc
les
sbb
orl
ss
movsb
ss
call
imulb
adc
inc
jo
dec
inc
ds
sbb
movsb
sub
sarb
push
out
mov
mov
xor
mov
mov
sub
test
mov
insb
in
jl
mov
nop
add
pop
ret
ja
ss
lcall
pop
in
daa
or
cmp
and
and
test
in
and
sbb
add
pop
ret
xorb
pop
push
and
pop
cmpb
add
push
push
bound
xchg
adc
test
jge
out
je
jecxz
xchg
and
adc
xlat
add
stos
sub
adc
inc
xor
ret
adc
mov
and
leave
and
aam
inc
push
and
ja
dec
mov
lahf
pusha
mov
push
inc
sbb
lods
push
mov
and
jne
add
scas
push
rorl
jne
pusha
leave
int3
call
dec
shlb
mov
loopne
xor
clc
mov
adc
push
adc
sbb
inc
dec
movsb
mov
mov
push
inc
inc
scas
movsb
cmpsl
sbb
aas
cmp
in
push
sbb
aam
add
dec
adc
or
dec
int
stc
nop
out
lock
imul
sub
jp
pop
mov
adc
orb
test
jne
mov
je
mov
imul
cs
push
add
or
sbb
jle
adc
cltd
xchg
fadds
es
scas
pop
sbb
mov
jo
add
lock
adc
and
push
xor
idivb
dec
adc
add
les
cltd
aad
loopne
lods
mov
sbb
or
xchg
or
sbb
stc
loope
and
mov
mov
xchg
je
mov
movb
dec
ret
addl
cmp
cmpsb
pop
sub
lcall
insl
push
pop
pop
push
cmp
xor
cmp
adc
les
jecxz
inc
push
out
add
push
or
jno
xor
call
aas
mov
xor
adc
jnp
je
mov
push
cmpsb
roll
dec
aas
jge
push
dec
cmp
shufps
dec
and
je
mov
sbb
mov
push
jo
and
imul
adc
pop
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
xchg
rorl
pmaxsw
or
rorb
jl
outsl
sub
js
loope
loope
mov
xor
push
outsl
add
ret
scas
sub
or
insb
mov
inc
mov
in
pushf
xor
imul
xor
sbb
pop
push
jle
sarb
je
sti
shll
decb
sbb
xor
sti
push
mov
mov
push
mov
ret
div
cmc
or
sbbb
mov
loope
lea
mov
sbb
mov
sbb
fisubl
xchg
movsb
mov
add
popa
lahf
imul
mov
rcrb
cmp
push
lock
dec
xchg
cmpb
ret
cmp
inc
mov
add
cmp
xchg
xlat
jns
jnp
pop
adc
sub
sub
push
rorb
mov
add
push
decl
lea
mov
imul
push
add
adc
push
imul
lea
jmp
add
pop
pusha
outsl
je
push
stos
or
adc
adc
adc
push
cs
outsl
addl
jl
bound
iret
popa
adc
fidivs
sbb
pop
push
shlb
inc
rcr
add
inc
pop
ja
push
add
pop
out
or
movsb
sbb
lock
int3
cmpsl
sub
loopne
xor
out
cmp
jne
sbb
xor
mov
cmpsb
pop
outsl
inc
inc
sub
stc
rcl
imul
cmpsb
pop
inc
sbb
add
push
popa
clc
adc
fcompl
fsts
inc
popa
mov
mov
test
jo
sbbl
add
jne
packssdw
and
dec
push
inc
fcoms
jp
repnz
cmpsl
pop
das
add
add
outsb
pop
adc
test
push
xlat
data16
adc
enter
jg
loopew
xchg
and
and
mov
lea
fsubrs
or
ljmp
gs
push
js
leave
adc
test
pop
imul
lock
ret
lea
les
inc
test
nop
add
aad
addl
jo
mov
inc
sbb
mov
or
sbb
add
movsl
pop
ja
movb
lcall
clc
sub
dec
or
push
lret
test
in
mov
push
push
pop
fnstsw
xor
call
sub
inc
fadds
add
in
leave
adc
xchg
sbb
outsl
movsb
std
cmpsb
sbb
sbb
xchg
jo
fisubrl
and
sbb
mov
mov
hlt
inc
sub
adc
ss
adc
mov
and
inc
or
loope
xor
ds
mov
adc
pop
add
fwait
lea
fnstsw
aaa
sub
jl
pushf
mov
fucomp
adc
sbb
decl
add
mov
lea
pop
sub
inc
inc
mov
fsts
je
cwtl
jl
mov
push
insb
push
mov
add
mov
pop
mov
fildl
inc
jecxz
adc
mov
adc
pop
or
pusha
js
or
add
es
add
arpl
push
cmpsb
xchg
or
aas
sbb
fwait
jb
mov
notb
xchg
adc
roll
adc
movsb
rclb
insl
adc
pushf
shlb
xchg
sub
mov
pop
inc
lock
neg
pop
lea
dec
mov
mov
loope
shl
xor
adc
loopne
mov
mov
movsl
addl
aam
and
inc
push
cwtl
add
je
or
inc
push
cmp
add
add
or
fnsave
or
pop
jl
in
insl
ja
dec
bound
dec
dec
lahf
add
adcb
inc
inc
shrb
mov
push
pop
loopne
mov
outsl
arpl
icebp
lcall
dec
sub
sub
out
stos
lock
scas
pop
loop
fs
icebp
inc
call
add
call
mov
ret
cmp
push
testb
dec
test
frstor
jecxz
adc
cmp
aaa
fidivs
sub
sub
das
in
or
mov
aam
inc
in
push
xor
add
fsubl
sub
imul
mov
jl
leave
call
stc
es
iret
mov
xchg
les
in
outsl
or
xchg
rorb
aaa
push
notl
enter
in
das
xchg
sahf
push
inc
cmp
xor
inc
add
add
je
sbbb
cmp
push
and
shld
inc
or
fwait
or
inc
loopne
push
mov
mov
adc
mov
add
xor
lret
data16
inc
imul
or
test
or
pop
mov
xchg
movsb
jo
cmp
add
fcmovb
push
jmp
push
fmull
mov
mov
inc
mov
loopne
sub
jp
aaa
sbb
add
push
adc
test
xor
push
pop
hlt
push
hlt
into
insb
es
xchg
enter
stos
in
lods
cli
popf
jle
aad
sahf
sti
jmp
arpl
sbb
jo
inc
and
lds
adc
adc
and
and
hlt
jo
xchg
pop
sub
in
or
add
rcl
xor
sbb
xor
push
pop
testl
xchg
jne
dec
pop
adc
js
jb
test
jne
pop
push
imul
ja
and
and
vaddsd
sbbb
aaa
aam
push
xorb
jl
shl
out
clc
mov
push
or
das
pop
rcrl
cmp
xchg
insb
mov
sbb
sub
xchg
push
cs
or
and
cmc
or
pop
ds
pop
add
add
jo
mov
les
xor
add
add
inc
adc
je
out
fidivs
dec
add
adc
or
cmp
lods
mov
movsb
test
sar
into
orl
mov
jmp
sub
int3
or
cmp
ret
pop
inc
mov
mov
fucomip
pop
xlat
cltd
xor
and
or
adc
rcll
shll
xchg
out
or
cltd
je
out
int3
enter
clc
sar
jl
or
push
insl
jp
clts
pusha
add
outsl
cltd
cli
stos
sbb
add
xor
divb
add
push
and
add
lahf
outsl
push
push
je
push
mov
jbe
insb
xor
or
adc
jb
xchg
push
sub
sub
ret
in
jb
or
xchg
cmp
notb
push
fnstsw
mov
pusha
adc
fdivrs
mov
dec
mov
sub
add
roll
or
or
dec
repz
add
jmp
sub
push
add
push
inc
add
icebp
or
add
jl
aad
add
cmpsb
adc
pop
add
and
pop
dec
push
rcrl
or
daa
sub
dec
mov
rcll
dec
mov
or
mov
mov
pop
inc
jae
addr16
xor
and
inc
fimuls
inc
xchg
pop
mov
or
outsb
fimull
jmp
xchg
sbb
sub
dec
aaa
sub
inc
rolb
and
je
add
imul
xchg
mov
loopne
sbbb
cmpb
and
test
and
add
inc
dec
add
mov
xchg
dec
jle
xchg
pushf
jne
faddl
sub
fiaddl
stos
jb
divl
cmp
sti
nop
jp
push
xorb
add
xchg
in
subl
inc
sub
dec
je
add
pop
jmp
ret
mov
pusha
mov
cs
jne
pop
add
sub
lods
dec
push
or
push
jmp
out
dec
push
outsl
xchg
pop
add
pop
popa
les
sub
or
cmp
jne
lret
jg
adc
push
clc
xor
and
sub
xor
negb
push
pop
adc
and
cmp
push
pusha
mov
loopne
sub
ror
in
inc
xchg
fucomip
pop
roll
je
test
add
jmp
fisubl
movsb
addr16
loopne
fdivl
and
test
inc
inc
subl
dec
jmp
outsb
pop
cmp
xor
ja
inc
int
xchg
adc
dec
andl
push
sbb
add
fldt
std
pop
nop
mov
xor
pop
sub
enter
popf
push
insl
sbb
cmp
sbbb
sub
inc
pop
or
je
and
sub
inc
cli
stos
iret
push
clc
adc
dec
shrb
mov
jmp
and
push
adc
popf
push
movsl
sbb
filds
es
ss
or
xorl
rcrl
arpl
imul
ss
in
xchg
ret
jmp
popf
push
arpl
sub
fists
dec
lret
aaa
sub
sub
lods
xor
xor
dec
jp
je
add
std
xor
aam
inc
cmp
adc
mov
xchg
inc
pop
xor
jg
call
rorb
das
or
les
pop
dec
jmp
shr
dec
pop
or
fcom
daa
adc
dec
aad
movswl
or
sbb
mov
dec
add
add
iret
rorl
rolb
mov
add
jle
mov
or
in
add
dec
mov
push
test
fdivl
movsl
faddl
fld
mov
scas
rcl
jnp
nop
out
movsl
jmp
dec
xor
jl
rcrb
mov
jmp
rcrl
push
add
sub
add
ret
popa
andl
adc
jo
xor
or
int3
pop
invd
mov
fwait
jne
sahf
icebp
or
test
dec
rorb
pop
xchg
loope
lahf
movsl
bound
loope
dec
out
jno
jno
sub
pop
dec
je
fiaddl
mov
dec
mov
inc
mov
outsl
push
fidivl
mov
movl
repnz
cmp
dec
fs
cmpl
sub
bound
mov
push
addb
pop
pop
push
jns
insl
mov
inc
stc
cs
enter
in
xor
dec
mov
xor
inc
data16
dec
inc
and
mov
mov
push
sbb
push
push
cmp
inc
in
incl
xchg
rolb
and
xchg
bound
ret
cmc
or
jecxz
addl
mov
inc
aas
loopne
sub
add
xchg
jb
xchg
jne
sbb
dec
loope
mov
shlb
inc
mov
add
xorb
mov
and
and
jne
iret
aam
jns
xor
movb
mov
xchg
cwtl
xor
cmp
and
scas
in
or
das
fdiv
aam
jno
jle
je
push
lock
add
inc
bnd
adc
adc
jle
sbb
dec
dec
cmp
adc
dec
lds
sub
test
add
sbb
inc
sbb
cmp
inc
cmp
sub
sub
or
sbbl
scas
jbe
loopne
sbb
add
push
fidivrl
fwait
jg
lods
daa
test
jp
decb
lock
lea
mov
fs
jo
mov
cmpsl
popa
pusha
je
jp
jae
or
ljmp
mov
jle
aam
push
lods
dec
push
or
push
add
loop
or
inc
ja
add
test
inc
mov
mov
aaa
or
and
cmp
jg
mov
xor
mov
and
cmp
out
pop
adc
daa
push
inc
push
cmp
mov
loope
and
and
ds
movl
pop
insb
ret
push
sbb
sbb
das
adc
inc
add
sub
divl
sti
clc
test
inc
pop
cmp
adc
jecxz
add
les
or
xchg
xchg
incl
ss
fists
in
shl
and
sarb
popa
loopne
sbb
loopne
orb
mov
sub
pop
fcomps
xor
sub
dec
or
ret
or
lock
xor
mov
sub
pop
aad
outsl
mov
dec
push
mov
movl
add
xchg
jbe
push
loopne
and
mov
push
adc
clc
adc
or
sub
leave
push
pop
daa
pushf
add
inc
pop
sbb
dec
fs
push
push
ss
and
sbb
mov
aad
rcrl
outsl
adc
daa
mov
or
pop
push
clc
or
repz
xchg
outsb
mov
push
fs
xchg
adc
insb
bound
dec
pop
or
inc
incb
jae
cmp
outsl
mov
outsb
jg
push
cmpb
or
inc
loope
lahf
jo
fs
xor
xchg
stc
pop
inc
or
jnp
jl
adc
inc
sub
dec
jo
negb
andl
jne
les
cmp
jecxz
mov
test
fidivl
or
mov
movsl
xchg
push
and
mov
cmp
xchg
mov
and
mov
sti
inc
xor
leave
push
shlb
and
mov
nop
push
aaa
fdiv
xor
cltd
push
mov
xor
ret
sbb
adc
mov
mov
mov
out
xchg
dec
add
dec
adc
jle
xor
movsl
fcomip
inc
pushf
js
xor
scas
cmp
and
pop
inc
mov
push
fcompl
mov
adc
inc
and
aaa
test
sub
arpl
enter
popa
or
push
dec
js
jle
and
add
lds
mov
jmp
fidivrs
add
insl
cmp
push
add
test
into
dec
loopne
inc
push
lock
dec
cmp
xchg
aam
fwait
subb
adc
sahf
ja
nop
xor
xor
and
test
fwait
mov
pop
cmp
sti
add
xchg
outsl
mov
dec
je
add
jmp
bnd
in
mov
add
adc
outsb
ret
push
sbb
in
test
sbb
insb
jae
out
data16
sbb
jns
push
dec
push
push
dec
ret
leave
fcoml
pop
add
ss
popl
imul
out
add
aad
aas
ljmp
cmp
js
pop
add
cmpb
cld
pop
pop
inc
or
or
or
adc
ljmp
inc
push
sbb
loopne
lea
xchg
or
jmp
mov
add
xchg
and
sbb
ret
mov
push
or
jne
inc
and
out
pop
das
rcr
or
sbb
mov
cmpb
mov
sbb
jnp
mov
sbb
push
fs
int3
dec
js
cld
ret
add
inc
sub
cmp
push
rcr
cmpsl
xor
js
xchg
and
cmp
inc
push
xor
movsb
fildll
or
cmp
pop
mov
inc
mov
xor
sbb
cld
les
xor
push
add
push
rorb
sub
jo
out
in
or
xlat
pop
cmp
and
mov
adc
lock
adc
lea
xchg
shrb
push
fmuls
mov
pusha
das
mov
andl
arpl
jo
testb
fs
push
shll
cld
pusha
mov
aad
push
mov
popf
xchg
fimuls
or
sbb
rol
adc
call
xchg
jecxz
and
pop
xchg
and
neg
dec
inc
cmpsb
cmp
faddl
jmp
ret
mov
icebp
sti
sbb
rorb
cli
cmpsl
sti
sbb
stc
dec
jbe
pop
nop
neg
cld
push
jne
shlb
cwtl
dec
pop
or
add
mov
dec
cmpsl
xchg
pop
push
int
add
hlt
jbe
std
js
jns
cltd
pop
sahf
sbb
adc
or
lret
and
mov
xor
nop
sub
frstor
jbe
pop
jge
push
dec
fsubs
enter
sbb
in
pop
pop
stc
xor
icebp
mov
addb
fistpl
or
dec
popf
cmpsb
out
add
test
jbe
sub
enter
mov
lahf
sub
sub
mov
pop
in
or
adc
addr16
mov
pop
cmpsl
jb
add
outsl
lahf
push
push
pop
push
mov
jb
and
jnp
out
xchg
mov
mov
daa
shl
push
inc
cmp
setg
jmp
dec
mov
dec
dec
movb
dec
cmp
setle
push
lcall
es
add
adc
or
mov
jl
push
test
pop
sarb
in
loope
cli
push
inc
sti
gs
inc
popa
add
push
adc
nop
xchg
xchg
inc
ficompl
aam
xchg
adc
xchg
adc
mov
dec
push
inc
js
ret
xor
push
xchg
and
stos
pop
test
gs
les
xor
pop
xor
push
sbb
add
clc
popa
mov
lea
je
adc
adcb
subl
mov
in
jmp
aaa
hlt
jmp
xorl
sub
faddl
and
in
ret
or
mov
xchg
mov
xchg
lock
add
inc
dec
xchg
in
or
movb
pop
xchg
sbb
add
movd
sbb
xchg
or
in
push
jne
ret
pop
icebp
xor
push
push
push
cmpsl
add
jl
push
sub
ds
jb
sub
or
pop
or
add
adc
out
imul
lret
push
mov
lock
cld
push
incl
scas
shlb
out
mov
lods
push
shll
in
orl
jns
add
or
pop
jle
sub
lods
or
xor
fcmovu
paddsb
adc
push
sbb
test
cmp
sbb
inc
mov
rorb
xchg
and
or
push
sub
add
inc
jb
add
push
pmulhw
cs
push
mov
cli
add
xchg
push
mov
sahf
out
jecxz
add
lea
mov
sub
call
aas
adc
inc
cmp
sbb
fisubs
pop
orl
aam
hlt
sub
inc
sub
mov
outsl
sbb
sbb
sub
bound
cmp
pop
jne
std
cltd
sbb
loope
sub
or
bound
cmp
and
jo
cmpb
mov
scas
bound
inc
xchg
adc
or
dec
push
cmp
addr16
idivb
push
je
inc
mov
add
add
inc
divb
cmp
adc
sbb
jge
inc
out
pop
xor
and
sarl
iret
xor
jne
pop
fidivl
aas
and
mov
int
and
push
ror
call
pop
cmpsl
jne
inc
or
shrl
pop
sub
es
sub
insb
sub
pop
outsb
sbb
push
jne
das
addl
pushl
pop
test
push
adc
inc
incl
dec
cmp
lock
mov
fisubrs
pop
add
pop
mov
push
std
and
stos
hlt
cwtl
pop
cmp
sub
xchg
in
xchg
mov
pop
iret
add
push
out
repz
add
push
add
push
out
adc
lea
ja
mov
ja
cmpsb
sbb
adc
pop
add
jbe
push
out
adc
pusha
nopl
pop
pop
rorl
jb
push
jnp
push
outsl
cmp
and
pushf
mov
test
pusha
push
out
lods
mov
xlat
call
ffreep
push
mov
adc
std
jne
and
pop
dec
add
bound
jb
jo
mov
xchg
hlt
out
subb
or
dec
xchg
mov
fdivs
inc
xchg
pop
imul
xor
inc
push
and
inc
scas
pop
cmc
xor
lret
dec
sub
pop
cld
shll
cmpsl
add
mov
add
inc
mov
adcl
test
pop
cmp
xchg
fbld
sub
jo
sbb
hlt
xchg
fwait
test
test
or
push
xor
jl
inc
dec
inc
or
aas
ds
inc
dec
jne
push
shrb
mov
dec
test
cmpsl
adc
sarb
jmp
mov
adc
insb
enter
pop
les
bound
add
out
fs
mov
jmp
pop
xor
aad
xor
xchg
add
dec
mov
into
orb
or
ss
sub
sbb
int3
jne
push
push
mov
shrb
add
aam
test
and
mov
mov
xchg
push
sbb
or
xor
sub
jl
xor
jl
push
mov
mov
test
repz
mov
pop
dec
shll
ret
and
movsb
test
or
xor
ret
inc
or
xlat
fstpt
pop
mov
xor
dec
add
push
xchg
ss
shlb
sar
iret
aas
jmp
adc
jmp
lds
fiadds
mov
mov
pusha
xchg
filds
movsb
fisttpll
sub
xor
lahf
push
push
push
sub
add
sbb
cmp
jle
mov
rcl
sub
jnp
push
addb
lock
in
imul
adc
sbb
mov
inc
fidivs
lea
test
mov
cmp
push
jle
mov
mov
mov
xchg
mov
movzwl
or
rolb
cs
cmp
out
aam
and
mov
xchg
sbb
inc
movsb
push
or
xchg
push
pop
and
js
imul
jnp
xor
and
pop
and
add
or
sbb
jbe
lock
push
orl
loop
mov
add
push
sub
jnp
lods
mov
sub
inc
mov
inc
mov
push
xchg
push
loopne
mov
or
push
dec
mov
add
inc
clc
dec
fcoms
lea
cld
adc
pop
lods
add
dec
sub
mov
adc
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
mov
mov
sbb
xor
sub
loopne
nop
xchg
out
je
add
pop
sbb
mov
push
sbb
mov
dec
add
xor
stos
jo
push
dec
and
push
pop
adc
inc
test
xor
inc
mov
jo
aaa
xchg
adc
movups
cli
sub
je
adc
cwtl
xchg
and
jae
test
inc
int3
sub
inc
pop
adc
or
push
sbb
test
out
inc
nop
jmp
add
inc
inc
jp
arpl
test
or
ficoms
out
sbb
shll
and
mov
cvtps2pd
jp
test
inc
inc
add
sti
out
and
cmp
and
or
mov
add
cmp
out
cwtl
scas
and
data16
mov
andb
add
dec
push
mov
jo
scas
xchg
mov
in
add
sub
mov
outsb
loope
test
add
icebp
shrb
mov
or
loopne
out
js
test
test
jmp
cmp
fadds
push
cmp
cmp
adc
xchg
lock
shll
cli
adc
jne
add
daa
addb
sbb
xchg
out
mov
push
mov
xchg
xor
mov
dec
adc
mov
insl
pop
cmp
mov
mov
sbb
inc
pop
mov
mov
or
aaa
sbb
mov
outsl
or
and
lea
jecxz
adc
testb
and
ret
loop
add
pusha
cmp
fimuls
or
popa
lea
popa
jne
loopne
push
pushf
lea
or
jo
inc
and
rcrl
adc
pop
mov
sahf
imul
xor
mov
and
push
lods
push
or
shl
add
or
fildll
ljmp
iret
rol
imul
jge
mov
sbb
fstps
inc
add
clc
enter
sbb
imul
pusha
push
outsl
add
pop
lahf
data16
and
cmp
adc
xchg
nop
dec
and
shr
inc
arpl
push
int3
shl
bound
gs
or
xchg
add
lds
mov
notl
jmp
push
shl
fcompl
sbb
rcrb
and
inc
popa
pusha
movntq
out
push
out
test
sub
and
das
adc
or
sti
nop
and
adc
stos
ret
gs
inc
push
lea
mov
add
mov
test
jbe
xor
mov
mov
mov
scas
mov
nop
cmpl
or
mov
clc
repnz
xchg
pop
dec
mov
or
jne
int3
ret
xor
xchg
stos
popa
fbstp
fwait
adc
xchg
icebp
ja
or
push
or
adcb
mov
sbb
xchg
daa
lds
adc
rcl
mov
rclb
pusha
je
jbe
xchg
jb
orb
je
sbb
mov
nop
push
loopne
adc
int
xchg
popa
add
sbb
push
xor
mov
pop
arpl
sar
movsb
movsl
jo
jmp
hlt
sub
int3
xchg
ret
mov
mov
adcb
pop
data16
inc
mov
mov
js
mov
je
aad
sbb
dec
faddl
cmp
iret
and
mov
jl
mov
xchg
sub
mov
mov
lods
test
daa
add
out
mov
mov
mov
imull
or
mov
add
inc
sbb
adc
inc
cli
mov
xor
imul
push
or
movntq
pop
push
add
ret
push
loopne
push
inc
mov
and
mov
addr16
cmp
pushl
add
sbb
icebp
push
push
xlat
int3
test
sub
inc
fsubrs
jne
push
inc
cmp
mov
sbb
sub
or
inc
mov
inc
and
or
xor
mov
mov
mov
inc
adc
xchg
cmp
add
fstp
add
cs
stos
push
roll
dec
push
and
mov
or
lods
xor
insl
cwtl
imul
cmpsl
mov
add
mov
js
pop
adc
fisubs
mov
test
sub
and
faddl
or
jo
js
out
cli
mov
dec
mov
lds
sbb
or
or
nop
icebp
add
add
or
rolb
cmp
mov
shr
adc
je
push
popf
sub
add
sbb
or
jo
or
adc
ret
dec
or
or
insl
and
insb
not
adc
mov
jmp
out
and
test
push
jge
mov
fadd
inc
rcr
inc
insb
pop
loope
mov
push
rcrb
xor
incl
testl
push
sbb
insb
jo,pn
jae
cwtl
xor
push
push
adc
dec
mov
pop
loop
jmp
dec
pop
cmp
sbb
cmp
and
insl
dec
call
cmp
inc
pop
jecxz
cmp
mov
mov
les
xlat
test
call
in
xchg
push
rcll
into
fldl
jb
add
mov
adc
pop
mov
push
mov
leave
lock
cmp
adc
dec
imul
xorl
xor
cmc
fnsave
sub
cmp
mov
repz
pop
pop
pop
pop
mov
mov
ja
pop
xabort
jne
das
xor
mov
mov
pop
repnz
sbb
orl
or
inc
fwait
pusha
fstpl
jb
scas
or
xor
add
cmpsl
add
pop
adc
dec
mov
sbb
sbb
ja
rorl
rcrb
cmp
mov
cli
lock
loope
into
mov
mov
or
inc
adc
mov
fnsave
adc
mov
sub
and
call
inc
xor
mov
mov
sub
adc
sbb
push
pop
xchg
hlt
int3
jl
test
push
pushf
aaa
add
faddl
cmp
jne
dec
cwtl
movl
xchg
movsl
stos
adc
inc
mov
clc
add
loopne
mov
or
inc
push
push
and
call
aas
sub
subb
fildll
rorl
or
jge
and
fstpt
lea
cmp
jo
loopne
movsl
add
loopne
adc
adcb
popf
or
dec
inc
hlt
enter
jmp
push
rol
push
xchg
push
add
or
push
pop
clc
cmp
sub
loope
rorb
test
movsl
outsl
inc
mov
mov
fbld
data16
inc
arpl
inc
imul
or
adc
stos
push
mov
fidivs
inc
stos
mov
lock
mov
dec
xchg
fldenv
mov
js
scas
orb
cwtl
sbb
sbb
dec
fnstsw
push
push
adc
or
mov
test
cltd
inc
decl
add
and
xor
and
in
push
and
out
pop
jae
mov
xchg
pmaddwd
jmp
jmp
sub
leave
test
les
push
push
fdivp
inc
test
jne
inc
add
adc
push
ja
pusha
push
negb
or
nop
push
mov
fucom
and
xchg
xchg
aad
leave
pop
imul
das
pop
cmp
cmp
mov
aas
xor
repz
inc
dec
push
sub
add
push
scas
lock
ret
arpl
lds
cmpsl
xchg
sub
xor
sar
jecxz
fdivs
hlt
and
into
into
inc
inc
or
ja
cmp
adc
rorl
sbb
pop
movsb
pop
rorb
mov
sbb
push
pop
arpl
push
arpl
cld
add
push
aas
or
and
adc
mov
and
shrb
stmxcsr
mov
pop
aaa
jecxz
subps
nop
fsts
xchg
adc
roll
or
data16
iret
sahf
js
push
test
stos
insl
daa
mov
es
aas
sub
add
add
and
lods
sub
and
adc
test
sub
ja
mov
mov
adc
daa
pusha
inc
add
push
lds
ss
mov
bound
jg
mov
jg
add
and
test
jno
adc
outsb
call
cmpsb
pushl
or
scas
lea
aam
pusha
jmp
pop
inc
sbb
bound
movsl
cmp
mov
lods
adc
mov
or
push
xchg
sahf
in
cmpsl
sbb
pop
xor
sbb
xchg
push
inc
inc
adcb
add
inc
xlat
and
adc
test
sub
out
dec
inc
mov
loope
lea
repnz
sbb
shlb
cmp
aas
fcmovu
imul
cmpsl
fcoms
fcmove
push
push
dec
adc
push
adc
push
add
bound
or
clc
insl
or
ret
adc
add
xor
mov
or
test
cmp
xor
xchg
sahf
in
cmp
adc
cs
push
mov
repnz
cmp
inc
sahf
test
mov
and
repz
and
test
and
jle
nop
cmpsb
mov
js
inc
jnp
push
add
pop
movswl
repz
cld
ja
jmp
cmpw
ss
xor
sbb
sbb
sbb
mov
icebp
enter
push
ret
mov
fs
scas
mov
faddl
add
and
jns
pop
movb
sbb
daa
add
add
outsl
fmul
push
es
mov
add
mov
dec
loop
cld
out
repz
bound
repz
dec
sub
movsl
jmp
rolb
xchg
test
push
ficoms
stos
cmp
push
lahf
inc
jno
xchg
xchg
js
and
adc
aas
pop
lea
adc
mov
shr
jle
test
or
xor
pop
jno
cmp
and
xor
inc
sbb
sub
aaa
xor
push
mov
sarb
add
gs
int3
enter
dec
pop
mov
cmp
push
lock
mov
test
pop
ds
adc
inc
or
pop
dec
mov
adc
mov
mov
mov
or
nop
mov
push
out
mov
mov
add
ret
pop
pop
rcrb
cmpsl
pop
cld
lahf
xchg
mov
add
movsl
ror
hlt
lock
fcomps
cmp
mov
lods
popf
mov
jl
pop
push
rcrb
add
mov
jo
lock
sbbb
gs
push
jne
jne
jge
xlat
mov
xchg
mov
adc
lret
inc
fsubrs
pusha
xor
test
xchg
add
push
in
sbb
ljmp
ljmp
out
mov
and
aaa
mov
or
nop
jge
daa
adc
push
rclb
and
fcompl
jl
or
sbb
dec
dec
ds
ja
arpl
sub
sub
lahf
in
je
mov
sbb
fs
push
inc
pop
sub
icebp
xchg
dec
push
pop
xchg
push
push
dec
pushf
mov
int
xlat
dec
imul
cmp
loope
adc
inc
push
sub
ret
aam
enter
adc
dec
pop
aam
int
call
jmp
dec
dec
inc
sub
cmp
sbb
inc
inc
iret
xor
dec
movb
push
pop
push
mov
add
sbb
int3
sub
or
movsb
out
add
iret
enter
inc
sbb
int3
ret
pop
cmc
push
rorb
adc
and
popa
mov
jns
aaa
add
notl
enter
xlat
add
lea
mov
and
dec
mov
rolb
aaa
or
pop
mov
sbb
cmp
add
sbb
fcoml
pop
nop
mov
pop
lock
shl
dec
outsl
ja
sbb
cmc
push
mov
or
iret
add
sub
scas
inc
lds
dec
add
inc
sbb
loop
or
sarb
inc
jns
les
cltd
ret
aam
pop
cmpsl
xchg
dec
nop
sbb
pop
inc
mov
xor
jb
test
push
iret
ljmp
sbb
and
xchg
lods
dec
dec
ror
push
push
sbbb
loopne
xchg
in
mov
inc
adc
sbb
xor
aam
cs
ss
adc
divb
sbbb
mov
xor
das
dec
mov
popa
nop
sbb
push
mov
je
fdivs
push
rorb
push
pop
je
rorb
je
je
mov
loopne
pop
scas
cld
out
adc
mov
cs
and
cmpsl
sbbl
push
arpl
xchg
ret
sbb
adc
loopne
scas
mov
jmp
call
sub
sbb
mov
or
je
adc
bound
adc
or
adc
fnstcw
pop
inc
jo
insl
or
outsl
add
and
add
push
jne
push
sbb
push
cmp
ljmp
loopne
adc
fimuls
test
mov
xchg
and
pop
mov
cmp
xchg
daa
sbb
ret
icebp
or
mov
sahf
jno
addr16
xorl
insl
xor
shlb
imul
orl
ds
mov
sbb
movsl
addl
test
jne
std
push
add
adc
fadds
jne
movl
cmp
push
mov
add
add
add
dec
aas
xor
cmp
dec
push
mov
jl
outsl
add
int3
push
into
adc
xchg
cmpsb
mov
ret
daa
inc
inc
dec
mov
pop
push
das
mov
leave
cmp
lds
xchg
out
xchg
pop
pusha
jmp
dec
cmp
adc
mov
ret
fisubl
ret
or
xor
mov
rolb
flds
outsl
icebp
jg
test
rcpps
imul
clc
fdiv
xor
aaa
mov
mov
ja
or
adc
mov
loop
sti
sbb
jge
xchg
pop
cwtl
ret
scas
inc
mov
aas
into
pop
add
adc
push
jns
xor
gs
inc
test
outsb
xor
andl
dec
or
jo
imul
jae
rclb
pusha
sbb
pop
xchg
jo
xchg
test
int
cwtl
or
in
xor
mov
jae
and
inc
mull
xlat
lock
xor
jns
cmpb
xchg
dec
dec
das
dec
rorl
and
ss
inc
push
inc
jle
pop
dec
test
push
adc
or
xlat
dec
xor
jmp
push
xor
adc
inc
inc
idivl
shrl
mov
mov
add
add
pusha
mov
sbbl
or
inc
clc
push
or
push
jmp
imul
iret
add
xor
inc
stos
jne
lods
subb
add
aad
jecxz
adc
pop
mov
or
mov
stos
inc
je
xor
mov
das
cltd
and
rclb
adc
xchg
and
mov
sarl
arpl
popf
lcall
pop
popa
dec
fisubrs
add
push
subl
xchg
pushf
inc
out
add
pop
mov
js
subl
insl
and
adc
mov
adc
lods
dec
add
jae,pn
lods
xchg
popa
xor
xor
cmp
jg
je
dec
mov
or
and
std
stos
call
add
adc
mov
mov
pop
or
out
movsb
add
sub
adc
cmp
add
add
subl
popf
out
or
gs
xchg
cmpsb
pushl
push
mov
jle
push
test
dec
push
sbb
lock
jne
pop
iret
cmp
pop
and
cmp
jns
test
push
jno
xchg
push
pop
add
out
mov
xor
sub
loopne
and
lahf
test
jle
and
and
sbb
mov
adc
repz
sbb
gs
or
test
cmpsb
jecxz
jne
push
xor
rcll
or
or
sbb
xchg
cmp
inc
aam
mov
fsubrs
add
mov
xchg
les
cwtl
pop
push
xchg
inc
pop
sub
add
pop
pop
pop
fwait
movb
pushl
fidivs
push
jae
rclb
fld
mov
imul
das
bound
mov
sbb
cltd
into
pop
adc
test
sub
adc
adc
xchg
hlt
push
push
inc
cli
add
aaa
notl
cmp
sbbb
cs
incl
sbb
in
dec
jmp
hlt
dec
add
cld
push
or
jne
push
mov
sbb
cmp
mov
movsb
outsl
dec
clc
mov
bound
sbb
adc
xlat
push
jnp
sub
and
ljmp
jmp
lret
jne
cmp
addr16
xor
add
sbb
add
inc
and
mov
int
lods
xor
pop
dec
pop
pop
or
dec
pushf
pop
sbb
or
xor
lahf
pop
nop
cwtl
cmp
ja
lods
mov
js
push
ja
shlb
inc
or
mov
loope
jg
les
dec
ret
cmp
rcrl
pop
nop
xchg
out
adc
sub
js
neg
daa
mov
shrb
loope
pop
popf
jmp
sub
xor
daa
icebp
adcl
aas
or
pop
cs
mov
arpl
bound
roll
add
aad
in
sub
imul
out
add
mov
dec
je
push
dec
mov
mov
add
mov
mov
push
dec
sbb
loope
push
and
dec
pop
shll
dec
and
jge
scas
pop
ss
push
and
sarb
jo
or
mov
or
sbb
pop
daa
pusha
dec
sbb
xor
sahf
in
fildll
subb
pop
or
xchg
xor
clc
aaa
pop
or
rcrb
pop
fcoms
add
cmc
inc
push
adcl
test
xor
add
xor
xlat
and
daa
push
and
cs
rorb
or
sbb
adc
out
and
insb
sbb
mov
sbb
jmp
push
rorb
or
sbb
mov
and
dec
ret
dec
pop
push
sub
aaa
clc
js
adc
pop
mov
or
loopne
aaa
push
and
shrl
dec
inc
test
or
sarb
testb
pop
push
xor
and
or
jle
adc
or
or
cmpsb
scas
notb
dec
ficoml
push
subb
xchg
cmpsl
sbb
mov
push
fs
sbb
loope
js
xor
pop
pushf
mov
imul
in
lock
cmpb
insb
lods
adc
jl
cmp
outsl
inc
pusha
adcb
movb
dec
adc
test
xchg
aam
push
pusha
xchg
xlat
sub
mov
inc
ds
insb
stos
arpl
sub
xor
cmp
cltd
xchg
mov
loop
sbb
jnp
and
cmp
lret
test
les
mov
andb
fiadds
fwait
dec
mov
jae
nop
ret
jae
insb
cmp
cmp
pop
mulb
cmp
stc
sub
adc
mov
mov
adc
out
das
mov
adc
repnz
mov
ret
orl
jns
ret
inc
and
inc
stos
lcall
hlt
je
loop
mov
and
push
add
adc
sbb
xlat
jle
or
mov
jno
andl
scas
out
pop
add
push
push
lret
clc
test
push
mov
out
lea
add
pusha
or
or
adc
mov
scas
cmpsl
test
adc
cltd
push
pop
cmp
fstps
push
add
rcrb
inc
dec
je
mov
dec
mov
jmp
jne
loope
aaa
adc
pop
iret
sti
mov
or
push
test
mov
adc
or
lock
inc
fildl
xchg
adc
mov
cltd
loope
add
int
jne
mov
sub
mov
addr16
sub
jle
ret
test
or
lock
ds
or
push
mov
adc
test
fldenv
mov
or
ja
dec
jl
inc
xor
sub
add
xchg
add
jo
adcb
jo
jle
adc
aas
push
insl
mov
add
add
mov
xor
xchg
sbb
add
push
cmp
mov
push
add
mov
insb
or
mov
lea
loop
inc
dec
lods
dec
cmc
shrb
arpl
ret
sub
add
sub
fidivrs
or
and
je
push
jo
hlt
jbe
push
lods
pop
or
mov
xchg
pop
adc
mov
adc
jbe
mov
pop
and
inc
in
mov
xor
pusha
cmp
ja
pop
dec
xchg
adc
ret
cmp
mov
lret
fnstcw
jbe
subl
ja
sbb
mov
sbb
mov
je
bnd
inc
mov
mov
inc
repz
dec
dec
scas
sub
sub
lods
movsb
rcrl
ret
loope
pusha
cmp
repnz
pop
lcall
or
sub
pushf
push
or
call
insb
cli
inc
inc
enter
fmul
rclb
xor
aam
cli
inc
js
xor
mov
push
inc
rolb
adc
in
jae
cmovno
mov
pop
push
pop
adc
int3
adc
add
rorl
jp
pop
jg
mov
inc
xchg
push
mov
pop
lds
add
cmp
add
mov
mov
mov
scas
fs
xor
pushf
or
shlb
add
adc
adc
jmp
pop
add
testb
adc
push
je
mov
mov
dec
mov
inc
adc
insl
sbb
out
cs
mov
dec
jnp
imul
push
mov
mov
or
or
or
jle
pop
jmp
inc
and
fs
jge
fsub
push
rclb
dec
dec
or
loopne
adc
jp
jl
outsl
das
or
mov
mov
push
mov
adc
mov
sub
add
add
dec
sub
xchg
iret
dec
adc
into
adc
fmul
adc
ja
add
mov
xlat
jecxz
pop
mov
and
into
adc
cld
push
fmul
inc
dec
add
add
ljmp
mov
sbb
arpl
sbb
dec
xor
fcomps
add
sbb
fsubr
adc
shll
in
xchg
xor
mov
dec
sbb
xchg
insl
cltd
sbb
scas
cmp
push
int
xlat
cmp
xchg
aam
adc
or
dec
sbb
adc
bound
push
insb
and
jb
add
add
xor
das
mov
push
or
dec
mov
xor
inc
and
xchg
mov
add
sbb
bound
sbb
pop
push
dec
fs
push
cltd
scas
and
hlt
adc
lret
xor
test
jge
mov
aaa
enter
push
mov
add
xor
insl
add
pop
add
pushf
inc
test
into
xchg
ret
fdivrs
insb
sbb
insb
mov
and
shlb
testl
jns
data16
aad
jno
jle
cs
dec
mov
int3
stos
dec
pusha
sub
mov
test
imulb
push
lock
sarb
outsb
movsb
jle
push
sub
inc
sub
add
shl
pop
decb
rorl
cmp
lock
inc
mov
sbb
fstp
inc
sbb
mov
push
jo
push
cmpsb
add
into
xchg
je
sub
sub
movsb
jmp
aam
dec
movsl
rolb
mov
test
pop
xchg
popa
add
sbb
jle
and
out
pop
adc
xor
das
fcompl
mov
adc
int
cli
dec
addl
fs
sub
mov
nop
dec
add
adc
inc
cltd
adc
jbe
imul
inc
ds
xor
and
jge
repz
addl
mov
inc
aam
loope
arpl
imul
xor
lret
pop
cmpsl
push
outsb
dec
add
int3
adc
lods
scas
aam
jge
decl
insb
or
cmp
aam
adc
es
and
xor
and
test
sub
push
add
lahf
push
jnp
pop
aam
add
cltd
cmc
pop
es
add
test
or
adc
xchg
xor
xchg
arpl
loopne
dec
add
push
jo
xchg
orl
int3
test
adc
movsl
fmuls
enter
into
enter
test
fs
addr16
lock
sub
push
mov
dec
cmp
jne
pop
jmp
inc
negl
sbb
lea
bound
xor
aaa
sbb
xchg
cld
dec
mov
or
adc
cmp
mov
orb
in
popa
inc
sub
add
subl
dec
adc
cmp
fsub
lods
xchg
sbb
icebp
push
jmp
and
sub
xor
mov
add
adc
cmp
add
imul
jl
and
or
or
enter
inc
out
adc
test
adc
cmp
inc
add
or
orb
in
add
push
mov
sbb
rolb
mov
cmp
addl
shrl
cmp
xor
addr16
fmull
or
in
les
inc
dec
cmp
sbb
call
cld
js
jmp
addb
adc
mov
or
nop
lcall
inc
cmp
cmp
push
arpl
xchg
inc
sbb
mov
inc
push
add
pop
dec
inc
sub
enter
movl
lea
test
ret
mov
hlt
add
sub
scas
gs
jmp
push
add
fldenv
sbb
push
jns
sbbb
pop
cmp
sub
leave
or
and
inc
add
sbb
scas
lret
pop
jbe
mov
subl
mov
cmp
xor
fdivs
aam
sub
addb
push
imul
or
shlb
mov
jo
cltd
out
push
iret
jno
call
adc
dec
js
stos
jno
mov
ret
mov
push
and
rorb
imul
aam
push
and
pop
pop
xchg
repnz
xor
mov
sub
xor
addb
jecxz
push
inc
pop
cmp
mov
fcomps
add
in
mov
mov
adc
aam
stc
data16
clc
inc
dec
call
clc
outsb
call
out
mov
jle
pop
sub
hlt
mov
or
push
fwait
lock
push
movsl
sbb
fdivrs
mov
pop
mov
lock
push
cmp
push
icebp
les
dec
insb
xchg
data16
adc
jno
popf
add
push
cmc
push
in
pop
inc
mov
mov
or
sbb
les
inc
ds
test
je
inc
and
das
and
mov
scas
adc
call
xor
shrl
shrb
sbb
iret
and
sub
add
data16
repnz
push
jecxz
rcrb
incl
rolb
lahf
push
cs
shlb
ljmp
pop
repnz
push
lds
xchg
pop
push
push
or
pop
or
in
daa
inc
jno
pop
mov
clc
adc
push
xor
xchg
sbb
mov
xor
pop
push
fcoms
adc
sub
ret
sbb
shl
inc
push
sub
dec
loop
add
dec
shrb
dec
cld
mov
sti
sub
sub
mov
add
push
in
pushf
outsl
jne
add
hlt
jae
push
mov
push
imul
arpl
mov
add
xor
movswl
xchg
dec
mov
fs
xorb
popa
loopne
add
call
dec
mov
cmp
out
clc
pop
sub
loope
push
push
pop
xchg
mov
sub
dec
jp
jae
mov
arpl
test
clc
cmp
ret
testb
cs
dec
enter
or
cmp
arpl
mov
stc
inc
xor
popa
fisttps
cmpb
sbb
loopne
add
push
js
cmp
jl
inc
ret
jbe
xor
lea
rcrb
mov
lahf
imull
adc
arpl
ret
ljmp
je
pop
xor
sbb
pop
insb
pop
test
xchg
hlt
imul
xchg
adc
adc
add
sahf
or
push
popaw
mov
or
and
fistps
fprem1
or
inc
fadds
dec
sbb
jg
aam
dec
aam
xor
add
lahf
das
dec
and
inc
lods
cltd
movb
out
ret
leave
rorb
ret
inc
inc
sub
loopne
insb
mov
test
mov
enter
jno
cmp
push
sbb
sbbl
sbb
in
cmp
test
jp
mov
or
or
pop
notl
sarb
mov
mov
cmp
add
and
xor
enter
fcomps
push
xchg
insb
push
dec
rclb
pop
movsb
sbb
cmpsb
jbe
or
fwait
dec
mov
mov
hlt
lret
jle
hlt
dec
and
cmpb
push
sbb
inc
les
jne
fs
js
add
mov
movups
inc
cmp
push
inc
mov
out
jge
push
ret
fmuls
sub
adc
loopne
les
imul
inc
push
add
add
push
xor
push
xchg
dec
es
xor
or
gs
rorl
roll
outsb
mov
cmp
aas
arpl
cmp
fs
mov
or
jecxz
xor
xor
jo
jo
pusha
pop
push
sti
out
shrl
dec
and
mov
shr
add
add
cmp
mov
or
add
jmp
sub
test
hlt
push
jno
data16
push
mov
xor
sbb
das
mov
pushf
or
and
xchg
push
rolb
loope
adc
cwtl
pop
fs
inc
or
fs
jne
negl
sbb
inc
outsl
fmuls
ss
adc
mov
iret
inc
add
add
enter
push
xor
lcall
mov
fwait
jl
or
dec
sub
sub
jmp
aam
ljmp
adc
fs
mov
adc
sub
dec
ret
pop
dec
into
cmp
jge
sbb
cld
mov
jmp
jmp
xchg
icebp
pop
xchg
xor
mov
push
add
adc
lret
adc
call
aaa
inc
xchg
cmc
push
sub
stos
adc
and
rolb
or
data16
rorl
xchg
das
sbb
ret
sub
sub
or
xor
or
dec
xor
xor
pop
mov
xor
mov
hlt
out
mov
arpl
pop
mov
mov
inc
cmp
jp
mov
mov
loop
and
adc
mov
dec
cmp
cmp
js
pop
xchg
push
or
push
push
adc
cwtl
push
rolb
lret
les
shl
rcrb
sub
mov
jno
lds
add
jecxz
xchg
scas
adc
sbb
cmc
cmpsb
and
jp
push
test
in
push
adc
xchg
cmp
push
scas
sub
loope
outsl
cmc
cli
mov
pop
out
in
dec
call
adc
flds
push
jne
push
repz
cmpsb
push
and
in
repnz
imul
fcoml
jl
sub
cmp
loope
fs
fwait
js
cmpsb
xor
add
push
lcall
sbb
std
dec
loopne
mov
pop
cmp
mov
push
push
sbb
scas
fmuls
bound
flds
enter
mov
push
stos
js
int3
and
inc
dec
sbb
or
jp
jne
jbe
sub
out
cmpsb
pop
or
and
js
push
xor
inc
or
sub
fld
shlb
out
lret
adc
jo
pop
push
outsl
orb
push
xor
lret
fs
cmp
data16
fildll
stc
rcrb
sbb
add
add
add
call
and
sbb
hlt
inc
rolb
stos
ret
cmp
cmp
cmp
pop
dec
xor
notl
js
add
fs
adc
mov
ss
ret
fnstenv
fsubr
push
enter
mov
test
subb
aas
test
in
outsb
ja
setge
pop
adc
adc
sub
jmp
popa
fisttpll
xor
cmp
add
and
cmp
sub
mov
and
xchg
imul
xchg
or
sbb
mov
lahf
push
push
frstor
and
add
add
addl
incl
push
dec
insb
daa
or
inc
mov
adc
dec
outsl
xorl
nop
mov
inc
inc
clc
test
dec
stos
mov
gs
lods
sbb
loopne
aaa
addl
or
repnz
or
push
or
xchg
mov
js
sub
jo
and
pop
mov
jbe
lods
test
mov
pop
mov
and
add
fs
xor
daa
icebp
and
add
xor
jmp
ja
daa
in
mov
and
fistpl
inc
scas
nop
bound
aad
hlt
aad
imul
mov
movb
mov
xor
cmp
mov
cmc
or
es
dec
out
adc
mov
inc
adc
jge
lock
arpl
xchg
aam
sub
sbb
add
aaa
push
add
adc
sub
cmp
mov
and
rolb
outsl
add
rcl
and
cltd
mov
dec
xor
push
xor
inc
inc
cmp
sbb
push
adc
sub
jne
rcl
mov
insl
jno
mov
fs
sub
fldenv
sub
push
sbb
dec
mov
cmp
jne
mov
xor
scas
mov
in
jmp
adc
xorb
int
mov
fisttpll
rorb
xor
mov
jmp
push
add
xchg
or
add
xchg
cmp
pusha
daa
pushf
pop
jnp
push
into
push
testb
push
idivl
add
rcll
sbb
jo
hlt
das
adc
inc
pushf
fdivrs
pusha
fucomi
sbb
notl
push
dec
imul
sbb
or
sub
mov
fdivr
insb
mov
push
js
test
iret
push
push
xchg
inc
daa
or
testl
inc
movl
xor
push
cwtl
add
or
pop
idivb
sub
mov
cwtl
pop
add
bound
les
insb
xor
sbb
mov
mov
and
test
jns
dec
inc
rclb
inc
xchg
data16
addl
cmpl
or
test
sbb
inc
lcall
or
sbb
mov
adc
and
aas
pop
adc
push
mov
lock
push
push
in
bound
js
jmp
push
cmp
or
aam
inc
nop
or
jb
add
daa
and
push
clc
push
pop
or
fidivs
or
pop
popa
jne
sbb
sub
sbb
addb
push
inc
mov
xor
push
jmp
sub
xchg
or
insb
add
cmp
sbb
out
loopne
mov
movhps
dec
add
enter
pop
and
sti
and
xor
clc
iret
add
mov
ljmp
xchg
movl
testb
jne
xor
in
add
add
pop
test
shlb
scas
xor
clc
shlb
push
jbe
test
imul
sbb
inc
xchg
jb
cmp
xor
outsl
fnstenv
sbb
arpl
mov
mov
sub
aas
adc
sbb
sbb
insb
insb
and
aaa
pop
sub
inc
jg
jnp
js
pop
jg
cmp
and
push
jl
sti
popl
push
add
loop
add
pusha
push
sti
jmp
popf
addl
adc
pop
jecxz
repz
push
sbb
notb
pop
dec
in
in
es
addb
add
ret
clc
mov
add
cmp
mov
xor
orb
push
jge
mov
pop
nop
mov
nop
dec
inc
imul
clc
inc
pop
data16
test
pop
pop
add
in
sub
rdtsc
adc
pop
cwtl
pop
sbb
insl
or
scas
mov
icebp
adc
dec
das
and
dec
pop
xlat
leave
cmp
stc
jo
and
ret
and
sub
push
daa
shrl
jne
testl
mov
push
xchg
push
lds
ret
adc
dec
mov
mov
sbb
adc
cmpsl
sar
insb
clc
icebp
jno,pn
repnz
nop
rorb
cltd
nop
int
inc
in
inc
mov
mov
sbbl
jge
xchg
or
xchg
test
fs
xchg
sbb
inc
mov
sbb
ljmp
clc
sti
cmp
jne
sub
cltd
add
mov
adc
add
adc
push
add
push
adc
cmpsl
push
and
loopne
enter
pop
imul
ret
mov
or
dec
add
test
jmp
inc
add
adc
in
sbbb
or
inc
sub
test
imul
jge
sbb
movsl
xchg
in
rclb
pop
lcall
negl
imul
dec
mov
andl
int3
sbb
popa
inc
cmp
int
push
pop
pusha
mov
add
and
sub
sub
pop
mov
iret
add
mov
adc
addl
sub
sub
scas
or
adc
in
mov
xlat
enter
orb
adcb
in
enter
lret
dec
and
add
aaa
outsb
js
adc
test
add
push
shlb
push
enter
add
sbb
add
sub
xchg
sbb
dec
sbb
inc
push
imul
push
adc
inc
sbb
mov
xorl
cmp
cmp
cltd
and
add
mov
dec
or
and
sub
push
iret
ret
ljmp
xor
scas
or
adc
outsl
imul
das
push
sub
lahf
and
xchg
add
sub
cmp
jne
mov
rcrb
sub
shrb
push
imul
addl
pop
in
push
inc
lcall
inc
adc
jnp
orb
pop
sbb
das
mov
xchg
movsl
roll
pusha
orl
test
ja
cmp
popa
sbb
test
push
sub
jb
test
mov
fld
sbb
adc
jl
lods
and
and
leave
cwtl
xorb
xor
add
and
sbb
sub
push
push
or
or
cmp
or
loope
sub
shrl
sub
mov
pusha
das
add
jnp
stos
ficoms
add
jae
dec
je
sbb
mov
or
and
dec
mov
jns
inc
dec
jmp
inc
pop
in
push
sub
and
or
jne
add
sub
hlt
add
or
hlt
popf
lahf
lock
js
mov
pop
push
scas
pop
or
push
dec
mov
cwtl
movsb
pop
insb
dec
and
fsts
adc
push
movsl
dec
push
popa
aad
fildl
push
dec
icebp
or
sbb
or
mov
cmp
or
imul
fs
pusha
cld
inc
mov
rcl
ss
push
insb
rol
jecxz
movb
or
or
aad
inc
pop
push
push
fdivrl
mov
ret
popa
xchg
mov
and
xor
jl
or
aaa
inc
push
nop
inc
lock
shrb
dec
sbb
xor
mov
or
scas
sub
dec
subl
or
clc
pop
mov
and
push
push
inc
sub
js
and
push
and
xchg
lods
and
adc
push
mov
jb
jp
push
cmpsl
and
add
pop
jnp
pusha
out
divl
ret
call
into
sahf
nop
cld
jecxz
test
daa
xor
inc
sbb
push
xchg
into
movsb
push
jge
nop
enter
inc
daa
mov
sbb
sub
pop
or
cmp
out
sbb
and
pushf
adc
das
cmp
fwait
jmp
pop
sbb
mov
sub
fstpl
or
pop
mov
sahf
flds
adcl
sub
or
cmp
adc
addb
dec
jge
js
add
dec
xor
bound
jle
adc
sbb
movsl
sbb
test
adc
dec
adc
adc
push
sbb
push
mov
jl
push
sbb
push
add
sahf
loope
dec
dec
push
sbb
std
cmc
fldt
mov
shll
mov
arpl
cmp
jecxz
cld
mov
or
push
insb
clc
push
xchg
stos
mov
push
fstpt
push
test
push
cmp
test
xor
lahf
inc
fisttpl
and
fmull
adc
and
push
cld
lds
add
adcl
push
mov
cli
stos
jle
icebp
mov
cmp
shll
outsb
jbe
pop
pop
adc
test
nop
popf
out
and
test
xor
add
and
in
imul
cmp
daa
jl
gs
out
cmp
popa
push
pop
inc
sub
inc
nop
dec
sahf
or
daa
ja
adcb
lea
lea
punpckhwd
jo
sbb
adc
pop
movsb
adc
sbb
add
sub
or
insl
mov
inc
and
in
cmpb
pop
faddl
hlt
in
sahf
dec
pusha
sbb
lea
inc
push
mov
xor
or
or
or
adc
jnp
push
addr16
mov
mov
mov
pop
daa
pop
data16
dec
jno
pop
jne
mov
mov
lods
push
xor
dec
jae
adc
ljmp
adc
add
adc
orb
sub
add
push
lret
imul
mov
mov
push
call
push
xchg
loope
jb
push
add
adc
dec
sbb
mov
or
mov
sub
cmp
inc
pop
imul
adc
inc
pop
mov
push
push
mov
test
nop
or
xchg
cmp
sahf
pop
sbbb
jbe
adc
cmpb
dec
lods
add
push
xchg
sub
push
arpl
and
and
pop
push
pusha
pushf
cmc
xor
movsb
je
and
add
or
jne
and
sbb
pop
lahf
xor
mov
adc
jmp
mov
fadds
dec
sub
or
dec
mov
movsl
sub
shr
inc
cld
pop
mov
daa
add
jmp
sub
and
jo
movsl
repz
lods
cmp
test
adc
adc
cmp
sub
lret
sbb
or
test
arpl
test
adcb
pop
sub
pop
cld
int3
popa
icebp
and
inc
push
and
ret
arpl
xchg
jo
sub
sbb
ret
and
sbb
xor
add
clc
mov
imul
dec
cwtl
dec
iret
clc
or
or
add
fistpl
sbb
add
outsb
mov
push
push
mov
xchg
xchg
push
mov
pusha
adc
adc
shl
mov
sbb
jg
fldl
and
or
add
rcrl
push
lock
popa
fcomip
out
daa
ss
ss
es
push
sub
and
in
fisubl
mov
js
and
adc
and
loopne
enter
adcl
xlat
and
mov
imul
add
test
sub
and
push
ret
cmp
xchg
aad
and
cs
aas
aad
gs
shrl
pop
adc
or
jmp
sub
dec
pop
insb
outsb
pop
cltd
jbe
xchg
jge
and
jo
es
cmp
push
push
insb
adc
loop
sub
cmp
sbb
pop
sahf
and
aas
cltd
pop
fisttpl
subb
xchg
adc
imulb
inc
lods
inc
pop
das
mov
pop
inc
das
push
les
or
insl
push
ret
pop
or
enter
ret
pop
hlt
sbb
and
pop
adc
lcall
mov
inc
loopne
cwtl
subb
push
or
imul
test
mov
push
push
test
aam
cltd
inc
enter
adc
mov
xchg
lahf
dec
nop
or
pop
add
ret
repz
sti
sbb
push
jl
or
dec
push
mov
mov
sub
jg
jmp
push
dec
leave
enter
push
jg
test
mov
fistpll
sbb
xchg
jg
mov
shr
adc
and
fsubs
aas
cs
dec
mov
clc
psllq
sub
pop
xlat
sbb
jne
cmp
sub
scas
sbb
dec
xchg
lock
in
outsb
test
jo
mov
pusha
outsb
pop
aas
xor
lret
xchg
shll
rclb
outsb
dec
outsl
or
push
test
das
sbb
sub
cmp
sarl
xor
stos
adc
fadds
add
add
insb
enter
hlt
xchg
sbb
outsl
mov
jne
cmp
lahf
imul
mov
icebp
sbb
or
sbb
add
in
mov
mov
dec
adc
lea
subl
sti
leave
js
mov
jg
in
jmp
push
mov
add
lods
inc
inc
ret
and
mov
test
xchg
addb
mov
mov
loope
inc
cmc
mov
add
sub
or
or
add
dec
sbb
sub
xchg
fstpt
imul
mov
dec
add
push
test
subb
das
and
inc
xor
push
xor
mov
mov
add
xchg
mov
xchg
lds
push
inc
cmp
jnp
cltd
push
xchg
sahf
or
inc
movsl
lret
mov
repz
gs
in
sub
adc
repz
int3
jp
in
int3
bound
nop
xlat
cmp
adc
xchg
pusha
sbb
xor
test
lock
inc
js
lea
jmp
pusha
add
lods
or
orl
scas
and
jg
mov
pop
sub
adc
push
inc
xchg
cs
out
xor
cmp
daa
jg
adc
pusha
in
dec
and
or
addr16
pop
inc
or
pop
add
scas
pop
rolb
lds
push
add
les
sub
xor
fs
push
push
or
push
cmp
mov
mov
rcrb
push
cmp
inc
mov
lcall
adc
sahf
jb
roll
aaa
adc
clc
adc
and
pop
push
es
adcl
mov
pop
imul
adc
out
or
pop
jmp
push
popf
sbb
and
dec
out
or
cmpb
addr16
jmp
popa
pop
cmpb
sbb
insb
imulb
pusha
cs
jno
cmpl
pop
mov
lcall
mov
mov
dec
sbb
shr
cltd
dec
mov
movb
jecxz
loope
push
aam
mov
push
dec
in
push
sarb
cmp
or
cwtl
test
add
push
shlb
lret
clc
mov
dec
gs
sub
xchg
or
dec
movsb
jb
js
jl
lret
js
nop
sub
push
mov
jo
out
mov
imul
dec
mov
scas
push
mov
push
pop
loopne
push
rorl
imul
imul
fwait
or
dec
aam
xchg
out
inc
cmp
test
movsl
lods
adc
das
push
adc
push
insl
jo
cmp
das
lea
out
fadds
outsl
lahf
mov
nop
pop
cmp
jno
das
mov
jo
cmc
sbb
push
lret
jae
and
iret
sbb
fnstenv
mov
pop
add
mov
push
mov
add
ja
js
mov
sbb
mov
test
sbb
test
sub
or
maxps
cmpsb
xchg
dec
push
sub
nop
popa
out
xor
adc
nop
nop
xor
hlt
cmp
jecxz
ret
movb
lds
sbb
pop
xlat
dec
push
pop
adc
js
lret
xchg
pop
out
sub
sub
pop
mov
sub
std
pop
mov
pusha
and
push
mov
fldenv
xor
sbb
lock
push
cwtl
daa
popa
dec
cmpsb
pop
inc
pop
mov
sub
aam
leave
and
shl
std
xor
mov
fcoms
mov
adc
aaa
pusha
or
shr
pushf
or
inc
fistpl
shlb
clc
push
dec
jnp
pop
cld
mov
and
mov
loopne
pop
daa
sub
pop
cmp
jne
sub
gs
and
test
aas
subb
cmp
pushf
mov
fisttps
mov
test
fsubrs
aas
xor
ret
cmpsl
nop
cltd
add
fdivrl
inc
xchg
dec
test
xchg
push
rolb
add
cltd
fwait
cmp
or
adc
inc
iret
adc
or
into
cmpb
jmp
xchg
mov
jae
xlat
jmp
outsb
pop
leave
aam
xor
mov
xchg
aas
test
sbb
cmp
mov
in
adc
outsb
sarb
mov
push
std
xchg
test
repz
popa
pop
mov
push
mov
subl
mov
setae
push
sbb
pop
popf
repnz
cmp
leave
mov
inc
lea
cmp
sbb
mov
clc
call
loopne
andl
addl
aaa
adc
inc
adc
inc
test
and
inc
testl
dec
pop
pop
inc
out
scas
add
xor
xchg
jnp
fs
je
adc
and
inc
dec
and
xchg
xor
cmovns
push
out
jge
jp
outsb
jl
rcr
into
xor
movsb
pusha
pop
outsb
cmp
or
addr16
push
push
into
nop
mov
clc
pop
adc
push
loop
push
dec
pushf
xchg
inc
rclb
xor
xchg
fsubrp
xor
jo
add
scas
repz
sub
cmp
sahf
pop
adc
subl
or
xchg
add
mov
sbb
sbb
daa
call
or
or
or
pop
pop
popa
xchg
sub
mov
pop
fcoml
and
xor
or
pop
inc
add
cmpsb
add
xchg
inc
dec
add
ror
in
vmread
lock
out
outsb
sub
push
push
or
or
lahf
pop
sub
xchg
add
nop
inc
pop
add
out
pop
test
jo
push
daa
inc
sbb
and
jg
repz
mov
xchg
push
lock
repz
inc
inc
dec
dec
cmp
repz
push
pop
pop
pusha
hlt
fldl
push
or
arpl
push
push
pop
in
gs
add
fs
cmpsb
pop
daa
jmp
mov
push
xor
sub
aaa
xor
sbb
xor
movsb
add
out
ret
xor
mov
adc
inc
and
aaa
sbb
adcl
subb
adc
pop
sub
incb
pop
mov
inc
inc
xor
mov
fwait
rol
cmpsb
sub
ljmp
mov
int
jecxz
sub
sbb
sub
add
xchg
xchg
jnp
lock
test
jnp
lret
test
adc
xor
mov
ret
mov
and
dec
adc
fsubl
loopne
cmpsb
mov
pop
test
mov
mov
or
mov
add
inc
or
adc
js
jecxz
adc
mov
aad
adc
add
adc
cmovnp
test
sbb
ja
sub
xor
push
push
in
add
sbb
or
pop
and
lcall
xor
clc
add
iret
adc
mov
mov
xor
pop
mov
cmp
cmpsl
cmp
shrb
mov
adc
xchg
les
and
cmp
jne
jle
sub
mov
cmp
roll
mov
push
lods
mov
sbb
xchg
sub
icebp
ret
adc
sbb
nop
jo
jge
inc
xor
xchg
adc
pop
jmp
cmc
xor
dec
or
lock
jo
stos
icebp
dec
or
pusha
loop
test
adc
mov
and
xchg
arpl
add
xchg
inc
xlat
inc
pop
mov
cld
or
dec
loopne
call
popf
popa
dec
pop
stc
push
and
pop
pushf
ss
jo
add
stos
test
sbb
push
loope
jno
popf
lea
aad
mov
inc
mov
adc
push
movsl
jmp
adc
lods
fwait
cmp
mov
cmp
orb
push
cmp
push
test
and
push
stos
sub
and
cs
inc
insb
and
daa
lods
das
jl
push
les
inc
add
enter
sbb
aas
add
jmp
pop
imul
pushf
js
jo
movsb
mov
lea
jmp
push
and
push
fs
out
test
inc
imul
mov
lcall
jl
or
mov
inc
sbb
mov
mov
or
jae
add
ret
xor
xchg
mov
inc
dec
or
xor
sarl
cmp
test
or
iret
popa
xor
mov
adc
xchg
add
rclb
imul
push
dec
scas
fmull
inc
fs
fbstp
mov
pop
xchg
pop
dec
inc
xor
xchg
jnp
out
out
adc
sbb
fnstsw
pop
imul
add
sub
adc
xchg
adc
or
dec
jne
dec
mov
sub
jnp
inc
nop
scas
loope
test
clc
movsl
inc
add
popf
push
shrb
std
jo
je
lds
mov
insb
sbb
ja
arpl
ret
rcll
or
sub
mov
gs
sahf
cs
pop
jecxz
je
fisttpll
pop
cmp
mov
loop
or
xchg
cmc
sub
xor
lds
add
xor
inc
inc
sub
xchg
dec
js
lods
xor
ret
sbb
or
test
rorb
leave
pusha
call
push
dec
or
cmp
aas
test
daa
je
push
dec
scas
sub
jl
inc
xor
jl
sbb
mov
or
inc
jne
mov
divl
lock
test
sub
data16
jnp
mov
mov
push
cmp
adc
xor
mov
sti
jl
jae
rorl
aam
lods
aas
push
into
cmc
imul
or
pop
movb
addb
push
sbb
jo
in
dec
popf
nop
fadd
xor
adc
mov
lods
or
push
sbb
pop
mov
mov
jnp
sub
sbb
pop
mov
adc
push
mov
sbb
iret
clc
pop
or
lds
pop
sbb
pop
jne
andb
adc
and
repz
or
xchg
or
and
repnz
mov
jmp
push
or
ret
pusha
or
imul
pop
dec
sub
add
adc
stos
addb
jge
nop
jg
dec
add
test
outsl
mov
aad
int
xor
mov
jno
add
push
or
inc
xchg
push
rolb
inc
or
mov
sbb
and
das
fcoms
nop
mov
imull
cmc
pop
mov
enter
stos
rolb
xchg
mov
scas
mov
push
pop
ds
mov
mov
and
test
les
adc
and
pop
imul
aaa
pop
xor
in
pop
pop
subl
dec
push
sub
dec
inc
inc
ljmp
dec
outsl
out
out
adc
test
push
fidivrs
loopw
movsl
and
inc
xor
lods
inc
dec
imul
andl
xchg
lock
imul
inc
and
xchg
push
aaa
xchg
dec
cmp
aam
push
je
xchg
inc
aas
lods
mov
imul
mov
or
ljmp
or
loopne
mov
adc
pop
push
rol
inc
cmp
jge
push
into
inc
mov
lea
int
cs
jne
dec
sub
add
dec
sub
mov
mov
cmp
add
add
mov
test
pop
push
movsb
scas
inc
movsb
jg
mov
daa
pop
cmp
xor
push
test
push
add
loope
xor
dec
jmp
loop
push
inc
add
ret
jmp
sub
sbb
je
js
push
push
int
pop
subl
push
mov
clc
xor
adc
mov
sub
fadd
aam
pop
sbb
hlt
mov
xor
xor
mov
sub
test
mov
jae
lcall
jbe
mov
mov
and
xor
add
icebp
sub
orl
push
cmp
fs
add
cmpb
cwtl
push
lret
lock
int
add
or
outsl
add
sub
movsb
jno
cmp
adc
mov
test
xchg
sub
clc
xor
enter
mov
mov
jecxz
mov
dec
cmp
fnstenv
mov
push
adc
movsb
jmp
xor
adc
shlb
inc
adcl
mov
movsb
adc
shlb
mov
cmp
fsubs
push
mov
js
adc
push
cmp
movsb
arpl
xor
add
bound
mov
addr16
movsl
cmc
loope
adc
xchg
clc
cmp
jl
pop
xchg
xor
push
xchg
cld
shll
movsl
mull
sbb
nop
shlb
sbb
ret
push
inc
nop
andl
out
test
jg
incb
movsl
sbb
xchg
push
les
test
xor
fistpl
cmpsb
fimuls
xchg
cmp
inc
push
cmp
rclb
jmp
cs
cmp
psraw
incl
incl
xchg
jo
xchg
inc
jmp
add
arpl
nop
dec
jmp
cmp
xor
add
pop
pop
pop
aaa
push
lret
jb
std
add
mov
and
add
rclb
mov
push
adc
xorl
and
pusha
and
pop
push
outsb
inc
cmp
pop
adc
loopne
inc
pop
loop
push
adc
out
or
pop
inc
imul
icebp
mov
push
out
bound
xor
mov
push
inc
pop
test
pop
and
loop
push
inc
push
push
xlat
rcl
es
mov
loopne
cmp
adc
or
xchg
rorb
and
mov
adc
xor
jo
sahf
sub
sbb
clc
rorl
dec
dec
xchg
mov
in
addr16
outsb
subb
xor
xchg
aam
test
sbb
repz
lea
mov
sub
inc
cmp
cwtl
xbegin
fiaddl
insb
int3
add
das
testl
sbb
mov
orl
sbb
adc
xor
xlat
inc
cmpsl
shrl
add
sbb
leave
sub
test
clc
mov
lock
mov
enter
inc
scas
test
push
cwtl
lret
test
xchg
aas
jne
mov
test
mov
test
inc
inc
mov
or
mov
sbb
inc
cmc
push
inc
inc
ret
or
push
cmp
mov
xor
pop
and
sub
movsl
jno
jne
add
js
sub
add
arpl
fisubs
cmpsl
test
add
arpl
pop
and
das
add
push
sbb
cmp
or
and
data16
sbb
adc
lds
je
mov
dec
adc
jmp
jl
xchg
dec
and
mov
jmp
rcrb
pop
jg
cmp
and
divl
jo
inc
dec
fldenv
and
aas
mov
or
inc
bound
pop
adc
mov
adc
and
pop
ljmp
xor
dec
sub
cmp
xchg
adcl
and
pop
fildl
jo
push
aam
pop
sub
mov
out
mov
daa
inc
dec
outsl
xchg
inc
loope
loop
add
je
dec
mulb
push
cwtl
popf
cmp
add
cmp
aam
cld
lods
jmp
mov
mov
dec
hlt
mov
dec
clc
sub
mov
fadds
lock
add
lea
jecxz
lret
xorb
or
adc
add
popf
nop
sbb
sbb
filds
setg
xchg
adc
mov
sbb
outsl
jae
push
adc
pop
mov
jle
or
mov
add
and
mov
scas
rorb
mov
scas
add
loop
insb
add
dec
mov
xchg
test
jo
adc
inc
add
in
insl
or
ss
xor
xor
sub
lock
sub
cmp
push
xchg
outsl
jb
in
cmp
imul
sbb
shlb
xor
jp
movsl
jge
dec
xor
xchg
dec
adc
shl
add
jo
mov
sub
std
xchg
out
test
push
mov
push
movsl
hlt
add
or
xlat
fisubs
ret
xor
add
pop
adc
adc
lock
dec
in
mov
sub
push
inc
in
mov
dec
inc
push
loopne
scas
push
push
push
aas
adc
jo
xchg
push
xor
pop
jmp
mov
dec
mov
test
into
inc
cmp
test
push
int3
mov
push
mov
aam
nop
sub
fstl
push
xchg
sahf
sub
fwait
mov
js
das
test
adc
jns
lret
out
mov
pop
inc
cmp
xchg
fidivs
push
ret
mov
adc
sub
out
loopne
aam
pop
lock
dec
xchg
mov
jne
dec
cmp
fidivs
es
or
xchg
push
orl
sbb
xchg
xor
loopne
enter
fdivs
jecxz
mov
clc
add
and
sub
inc
das
leave
lock
push
aam
adc
inc
adc
mov
and
sbb
rorl
dec
mov
jns
test
pop
rcrb
xchg
cmp
jne
ja
lock
jae
shlb
mov
loopne
sbb
cmpl
mov
ljmp
das
ss
or
and
mov
cmp
mov
pop
push
push
push
and
mov
xchg
sbb
aam
inc
nop
sbb
dec
loop
sbb
add
call
les
push
jmp
outsl
mov
in
lock
fldt
and
incb
les
pop
jg
jl
mov
ret
push
adc
pop
or
jle
decl
cmpb
inc
add
out
fs
test
add
sbb
loopne
jg
xor
test
xchg
mov
icebp
add
in
cmpsl
jne,pt
inc
or
inc
pop
and
push
xchg
mov
inc
xchg
movsb
mov
mov
das
push
dec
push
aaa
lock
mov
pop
or
or
popa
jb
add
popa
jle
mov
sahf
adc
adc
adc
xor
adc
or
add
push
bound
adcl
insb
arpl
mov
mov
sbbb
les
dec
mov
movsl
xor
add
add
mov
xor
clc
test
sbb
js
arpl
add
cmp
bound
or
mov
push
sbbl
and
aam
ljmp
mov
add
jp
push
add
jp
es
or
es
jge
and
adc
pusha
lret
cmp
in
sub
insl
ftst
add
cwtl
mov
dec
adc
inc
xchg
xchg
jnp
jp
lret
movsb
int3
inc
in
sahf
or
aas
lret
push
cmp
fdivr
inc
jl
lret
sets
or
cmp
int3
in
or
sub
iret
sbb
int
scas
push
lods
mov
scas
pmullw
lock
mov
les
pop
sar
push
lods
mov
xchg
into
testl
adc
in
shlb
inc
mov
push
clc
pop
jmp
mov
xor
icebp
inc
dec
xorl
xlat
xor
pop
clc
es
fistps
clc
loop
fcmovnb
and
hlt
pop
cld
out
mov
inc
inc
jp
push
pop
pop
in
xorl
in
sub
add
mov
sbb
repz
inc
cmpsl
or
gs
mov
xchg
add
test
or
adc
inc
fcmovbe
pop
cmp
mov
mov
pushf
push
inc
les
jns
lret
rorl
or
inc
add
movsb
push
and
fs
int3
push
roll
pusha
and
sub
pop
cmp
scas
dec
cwtl
pop
in
inc
dec
add
mov
ds
inc
idivb
insb
sbb
dec
repnz
add
fsubl
or
js
pop
fcompl
add
or
add
pusha
adc
jmp
cmp
pop
roll
inc
cmp
ret
xor
adc
or
push
outsl
cmp
inc
aas
int
xchg
add
xor
popa
jbe
dec
pop
xchg
mov
push
ja
mov
or
aas
inc
pop
setae
inc
or
jae
loopne
xor
loope
mov
xor
popa
cmp
lock
push
popa
fs
aam
add
cmp
jns
push
inc
push
lea
inc
dec
or
in
popf
adc
jmp
sbb
mov
adc
xor
daa
mov
cmp
or
mov
sbb
adc
cwtl
ret
shll
cmp
add
pop
ficompl
dec
xlat
add
rolb
in
cltd
pop
mov
or
pop
icebp
shrb
add
or
xchg
icebp
ds
pop
jo
xor
neg
dec
inc
pusha
outsb
jl
aaa
xchg
xchg
test
call
es
stc
pop
inc
inc
insb
push
push
push
add
inc
pop
adc
sbb
pushf
ffreep
pop
or
add
xor
lods
pop
add
pop
les
aaa
dec
mov
push
out
adc
roll
ret
mov
outsl
mov
pop
adc
lods
pop
and
cld
or
stos
and
ret
push
mov
add
or
add
fadds
bound
add
mov
icebp
cmp
xor
push
add
inc
test
jo
dec
shrb
mov
mov
movsb
ds
les
lea
push
jnp
mov
iret
or
inc
lods
cs
cmpsl
inc
mov
dec
pop
cmpsl
add
push
pushf
insb
sbb
or
mov
and
out
andps
add
pop
cmp
jnp
cmp
insl
ljmp
shll
adc
sub
or
push
cs
scas
dec
mov
or
je
imul
xor
jg
ljmp
jo
mov
adc
push
hlt
test
pushf
test
dec
ret
sti
sbb
sbb
jo
in
pop
jbe
push
sbb
and
push
sbb
shll
rcll
fwait
add
push
shll
rcrb
js
test
and
and
push
out
push
or
push
nop
pop
pop
and
mov
or
push
movsb
sub
mov
and
popf
inc
stos
daa
or
roll
orl
sbb
leave
adc
mov
mov
mov
in
in
fisttps
insl
or
imul
addl
mov
and
rcrl
pop
dec
or
test
sbb
out
in
jo
add
paddsb
outsb
out
and
mov
and
jmp
cmpsl
cwtl
adc
rcrb
nop
jl
mov
and
ret
cmc
jge
cmpsl
shlb
xor
xor
xor
inc
call
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
push
push
push
push
pop
pop
pop
mov
dec
cmp
daa
push
rcl
add
mov
xor
dec
fs
push
dec
hlt
adc
mov
push
imul
shll
push
xor
rclb
adc
testb
data16
and
cs
in
add
add
mov
jns
or
and
ljmp
cmp
pop
xchg
incb
pop
jp
push
pop
lods
push
sarb
icebp
or
pusha
sbb
xchg
mov
mov
dec
loopne
inc
xchg
clc
sub
clc
and
fsubrl
into
push
push
aam
inc
mov
mov
mov
push
inc
jge
shll
xchg
lea
or
in
sarb
stos
pop
cli
xor
xor
mov
in
mov
jbe
sub
je
sbb
push
mov
mov
add
or
nop
xchg
or
and
mov
add
es
jmp
fsubs
and
inc
inc
inc
pusha
dec
xchg
inc
cli
loope
dec
call
mov
xchg
dec
mov
or
xchg
sbbl
and
aas
les
or
enter
and
mov
mov
cmpsb
adc
pop
xchg
mov
lock
dec
test
sub
push
inc
loope
mov
or
cltd
cvtps2pd
pop
call
mov
inc
ss
or
or
mov
adc
sub
sbb
jne
inc
sub
jl
add
pop
lahf
lcall
pushf
sbb
jo
pushl
ss
dec
push
outsl
push
adc
out
mov
add
inc
das
inc
jmp
popa
mov
and
sub
imul
dec
add
mov
xchg
in
outsl
cmp
sti
jmp
inc
sti
test
inc
jmp
add
out
enter
adc
clc
sub
or
mov
vpshab
fildl
add
loop
xor
fisttps
lahf
test
popa
fistpll
push
mov
push
cmp
ja
fdivs
shr
adc
xor
pusha
je
mov
add
enter
or
sub
outsb
fidivrs
mov
ret
add
or
mov
cmp
xor
stc
insl
adc
and
clc
icebp
or
xchg
fiadds
loope
imul
jmp
push
and
inc
adc
mov
sbb
arpl
es
sub
aad
insb
mov
jmp
cmp
cmp
jo
sbb
pop
mov
pop
xor
jmp
ss
xor
hlt
xor
scas
mov
pushl
aaa
in
xlat
nop
fistl
mov
icebp
jns
jb
in
lods
inc
ret
inc
jg
push
fisubrs
and
sub
insl
sbb
pop
mov
xchg
and
lea
inc
imul
imul
add
jg
movsb
roll
mov
dec
mov
inc
cmp
pushf
pop
push
mov
xchg
add
push
jb
ss
pop
pusha
xor
pop
jo
push
inc
addl
arpl
mov
cmpb
or
sbb
test
pop
in
aas
cmp
filds
shll
repz
add
mov
push
mov
test
aas
mov
pushf
dec
es
dec
ret
inc
imul
or
cmp
testl
mov
fsubr
dec
xor
fisubrs
int
inc
dec
xor
orb
outsl
or
or
sarl
push
mov
jb
sbb
inc
aas
xor
inc
inc
adc
test
movsl
xchg
jmp
dec
sti
inc
movb
push
cmp
add
ret
pop
aas
add
movl
pop
icebp
js
clc
sub
mov
sahf
sbb
add
xor
sbb
loop
mov
imul
adc
mov
dec
jg
cmpl
cmp
mov
js
fcomps
adc
int
femms
js
rcr
nop
push
data16
dec
pop
push
lods
xor
add
xor
repnz
popf
dec
fcomps
fbstp
xor
clc
push
dec
cmp
jne
cs
jecxz
jnp
or
or
push
xor
push
imul
sub
xchg
fucomi
dec
pop
pusha
mov
jae
push
pushf
fs
fmul
xor
cmp
mov
jne
in
mov
push
stos
pushw
imul
sarb
addb
adc
sub
or
clc
xor
aam
cmpb
and
add
dec
inc
cmpsb
jbe
inc
dec
popf
mov
shlb
enter
add
adc
adc
pop
test
loopne
cmp
data16
leave
mov
or
repz
je
call
xor
into
lock
fmulp
sarb
rclb
cmp
dec
xor
push
into
or
pop
or
aam
push
test
and
jo
movsl
or
push
xor
andb
imul
roll
xor
lods
adc
sti
cmp
sub
test
mov
fistpl
mov
sub
push
in
jmp
lods
inc
test
pop
adcl
lds
bound
xchg
inc
rclb
mov
imul
test
inc
je
pop
imul
mov
test
rclb
ds
pop
push
cltd
je
in
das
inc
fsubr
ljmp
cli
add
adc
sub
cs
fnstcw
out
divl
sbb
sbbb
push
add
mov
or
add
add
mov
rolb
dec
adc
inc
ret
enter
inc
fnstenv
mov
mov
gs
adc
xor
aas
sti
insb
mov
mov
sbb
mov
lods
lret
out
ret
and
fiadds
call
add
adc
test
je
jp
mov
mov
call
test
adc
je
je
negb
in
xchg
insb
out
pop
and
push
jo
xchg
mov
add
popa
decb
inc
jnp
or
sub
pop
movb
call
bound
and
insb
mov
gs
add
jbe
je
shll
xor
inc
shl
cmc
and
mov
dec
adc
xchg
fsts
mov
sub
cmp
pushf
aad
mov
jecxz
cmp
jae
mov
cld
jmp
add
sbb
jbe
sbb
jle
es
sub
inc
mov
pusha
xchg
add
cmp
mov
or
cwtl
push
or
test
in
data16
sub
mov
pop
ds
fmull
clc
fcom
inc
out
ljmp
lds
push
xor
test
imul
int3
and
adc
scas
or
shll
loope
mov
loopne
xorb
or
jmp
mov
add
push
and
inc
loopne
faddl
or
push
aas
mov
and
fstpl
cmp
jne
vmread
push
shl
fiadds
jns
sub
movsl
fnstenv
dec
push
dec
inc
and
pushw
movsb
mov
daa
ja
mov
mov
jge
jecxz
aad
jle
ja
js
mov
insl
dec
add
hlt
les
mov
inc
or
and
inc
add
inc
lea
ret
xchg
rcll
pop
arpl
movsb
push
fldenv
test
mov
or
mov
push
mov
ret
cwtl
jecxz
test
out
push
lock
or
xor
aaa
and
xchg
xor
pop
icebp
mov
scas
xchg
add
push
mov
dec
push
nop
or
inc
sbb
jge
loopne
fiadds
jns
imulb
adc
dec
cltd
adc
aas
fdivrs
add
jmp
sub
and
lret
insl
leave
xor
xlat
enter
or
sbb
cmp
inc
movb
push
ss
jne
rorb
sub
xchg
xor
enter
xchg
pop
das
loopne
sbb
pop
pop
lock
hlt
enter
sbb
das
std
inc
enter
jne
hlt
sub
mov
mov
es
cltd
pop
inc
data16
dec
movsb
jle
sbb
shl
pop
inc
jbe
sub
les
push
sbb
rclb
adc
xchg
mov
mov
xor
sbb
pop
and
mov
lock
movsb
lock
loopne
mov
add
mov
enter
jmp
push
popa
orl
cld
jno
fisubl
mov
push
in
mov
ljmp
or
sub
mov
fadds
jns
rolb
insb
and
addl
jmp
outsb
and
movsl
subl
cmp
push
mov
or
inc
jno
fadds
pop
scas
imul
aaa
pop
push
push
fildll
lret
dec
lock
adc
jno
xlat
xchg
dec
int3
scas
mov
xchg
mov
pop
pop
mov
ret
push
popa
and
mov
sub
add
popf
fwait
add
pop
push
or
imul
sub
sub
shll
ret
incb
push
sub
xchg
cmp
sub
roll
mov
cwtl
movsl
or
adc
test
lds
add
jl
lea
movsb
cmp
popa
xor
dec
cmc
sub
and
mov
or
subl
stos
mov
iret
insb
and
xchg
iret
hlt
cmp
adc
iret
hlt
hlt
fwait
xchg
adc
xchg
add
and
ret
or
movsb
inc
push
add
imul
clc
or
pop
jns
lret
inc
push
xor
insl
sbb
sub
add
xor
leave
lock
rorl
add
sar
and
sti
or
in
pop
fildll
push
push
enter
movb
push
pop
xchg
ret
fdivs
nop
dec
pop
sub
mov
xor
ja
pusha
pop
je
inc
or
xchg
fistps
scas
adc
addl
loopne
and
ja
dec
add
jne
lock
add
dec
mov
aaa
test
xchg
popa
xchg
dec
or
out
aam
xlat
sbb
pusha
adc
jge
sub
ret
sbb
add
sahf
push
push
or
or
movsb
imul
dec
fisttpl
cmp
addl
or
pushf
or
xchg
add
and
cmp
adc
test
sbb
bnd
cwtl
pop
sub
push
or
sub
xchg
sub
add
sub
adc
and
mov
pop
push
xor
xchg
adcb
ret
pop
lods
dec
in
push
add
fs
out
out
pusha
adc
hlt
aad
in
inc
or
adc
loopne
xor
xor
mov
in
jmp
les
add
rorl
dec
mov
or
arpl
and
inc
jb
mov
pop
clc
sub
inc
fs
jno
mov
lock
clc
aad
stos
and
into
in
enter
in
and
ret
mov
mov
imull
rclb
pop
pop
and
inc
pop
clc
push
pop
sbb
jb
sbb
and
pop
in
pop
add
or
pop
and
add
movsb
jmp
and
test
and
jge
mov
icebp
adc
fs
mov
cmp
sbb
sub
sbb
sub
jmp
add
pop
mov
jmp
arpl
fisubrl
shl
mov
mov
adc
add
mov
adc
inc
inc
and
test
or
ficomps
sbb
push
pop
mov
push
sbb
pop
shrb
pushf
lcall
push
mov
mov
outsl
dec
xlat
dec
dec
fsubrs
pusha
dec
jecxz
push
je
jp
push
pusha
jnp
pop
rcrb
mov
sbbl
and
adc
dec
das
xor
pop
pop
jl
rolb
push
ds
fs
incb
cmpw
repz
lock
or
insl
loop
ret
pop
dec
daa
jge
or
test
cmc
rorl
push
add
add
aam
push
xor
sub
add
cwtl
test
xor
test
test
xor
in
sbb
or
add
inc
and
loopne
mov
mov
mov
add
add
adc
hlt
loop
push
in
mov
mov
pop
pop
cmpsb
pop
adcl
test
sbb
pop
xchg
mov
call
push
sbb
insl
jnp
lods
in
or
jmp
dec
push
stos
add
es
shrb
cltd
push
sar
mov
sbb
xor
int
mov
push
cmpsb
ds
sub
iret
or
or
xchg
add
sub
ss
push
jno
sbb
subl
pop
pusha
in
ja
cmpl
jbe
pop
or
mov
fdivl
xor
mov
sbb
je
cmpsl
rclb
cmp
pushf
inc
push
and
push
and
int
add
xchg
cmpsl
pop
movsb
in
xor
or
testl
add
pusha
mov
mov
call
movsb
fstl
outsb
dec
inc
in
faddl
pushf
xchg
test
push
push
movl
or
dec
das
push
ret
add
inc
xor
lea
xor
inc
ret
dec
pop
or
aas
insb
and
mov
jle
ret
in
fs
pop
or
jp
push
aas
cmp
pop
adc
inc
dec
pop
loop
pop
and
ljmp
outsb
test
add
jne
or
les
sub
push
daa
lock
xchg
push
lock
inc
aas
sub
fstl
outsl
cmpsl
cmp
pop
dec
test
mov
sbb
adc
pop
push
pop
stos
orl
mov
insl
popa
mov
mov
xor
cmp
or
fsubrs
pop
add
hlt
mov
push
mov
mov
inc
dec
gs
xchg
adc
add
fbld
add
sbb
fcomps
lds
jg
jno
insb
shll
mov
mov
push
fidivrs
ds
inc
or
adc
pop
or
lods
loopne
dec
je
outsb
vpextrw
jne
lds
ret
mov
xor
jg
mov
and
jnp
sub
add
loopne
aas
rolb
insl
cmp
daa
adc
sbb
das
out
sub
je
pop
pop
addb
jecxz
push
inc
pop
cmp
cmp
or
sbb
fs
push
notb
sbbb
lds
pop
subl
fimuls
or
adc
jge
sbb
test
je
sub
inc
and
push
pop
add
fcmovnb
mov
sub
inc
push
orb
aad
dec
imul
ljmp
mov
popl
movsb
mov
in
lock
mov
sub
cmpsb
mov
jp
or
movsb
jp
adc
xor
mov
xchg
test
pusha
and
adc
cmpsb
mov
dec
out
ss
xchg
jg
xchg
sub
into
fdivrl
mov
or
lcall
xlat
orb
cmp
sahf
adc
mov
cmpsl
stos
sbb
and
xchg
outsb
jmp
jne
xor
fbld
fstl
mov
xor
and
add
mov
inc
jmp
jmp
mov
xchg
sub
xchg
mov
das
add
pop
xor
xchg
mov
xchg
into
adc
push
xor
and
inc
cmp
jl
xor
inc
mov
dec
sbb
movsl
push
dec
mov
push
in
mov
js
rclb
jmp
pop
lahf
ret
fdivs
sub
cwtl
jnp
sti
fbstp
xlat
and
add
loope
shr
jg
or
incb
out
pop
inc
popf
test
dec
jno
mov
push
iret
dec
or
popf
push
push
add
jne
sub
dec
mov
test
dec
sub
and
xor
inc
cmpsl
loopnew
cmp
xor
push
sub
xor
mov
fdivrs
mov
inc
lods
out
add
adc
jp
add
fwait
add
jo
iret
int
lret
jno
mov
aaa
enter
inc
sbb
pop
cmp
sbbb
cmp
imul
ss
mov
xlat
sti
sbb
lret
push
cmp
xchg
rolb
es
jnp
and
lret
or
xchg
push
xchg
sti
dec
cmp
mov
mov
pop
cwtl
std
fimull
mov
notl
test
enter
mov
fdivrs
cltd
pop
mov
mov
push
push
mov
mov
pop
dec
rcr
les
lea
clc
popfw
mov
in
adc
aas
movsl
insb
aam
mov
jae
inc
inc
xchg
or
lahf
pusha
jne
pop
in
nop
mov
jno
pusha
push
push
data16
sarb
dec
mov
dec
pop
lret
dec
dec
dec
adc
das
dec
jg
adc
popf
push
das
pop
xlat
xor
pop
stos
inc
fdiv
or
xlat
adc
and
mov
mov
add
aaa
and
inc
pop
orb
mov
mov
adc
mov
add
pop
xchg
dec
mov
inc
mov
add
ds
pop
test
mov
push
xchg
and
adc
popf
or
jecxz
jmp
jae
int
pop
call
jne
jns
inc
mov
pop
jg
in
enter
jl
adc
call
add
rolb
xor
mov
pop
and
xlat
ret
insb
xchg
and
fisttpl
inc
imulb
inc
mov
int
pop
mov
add
ret
lea
and
inc
out
movsb
add
bound
fmul
adc
xor
xchg
fmuls
adc
pushf
xor
mov
shrb
call
dec
sbb
repnz
mov
cli
xor
arpl
fidivrs
cmp
mov
inc
push
sbb
iret
adc
add
sub
or
out
jmp
shlb
add
push
stos
add
mov
ffreep
les
sub
enter
push
fstpt
lea
lods
lock
or
cld
push
sarb
repnz
sti
popf
fwait
jmp
pushl
dec
inc
add
adc
loope
movsb
mov
adc
add
and
inc
and
repz
sbb
mov
add
jae
es
sub
dec
roll
add
rol
cmpsb
fldl
int3
add
call
pop
flds
jecxz
inc
inc
out
aam
sbb
cli
lea
mov
sub
cltd
icebp
mov
mov
or
xor
popa
sbb
jno
imul
adc
test
fcomip
sbb
and
clc
inc
in
mov
inc
add
enter
dec
cmpxchg
pop
sbb
insl
sbb
loopne
ret
les
dec
push
cmp
test
add
xchg
shrl
inc
les
ret
in
fadds
sbb
jne
dec
push
pop
fsubr
xchg
cmp
sbb
int
jmp
jp
aam
sbb
aam
je
push
sbb
lods
push
dec
repz
xorb
push
out
rorb
adc
xlat
jno
shll
and
into
lea
movsl
adc
cmp
stos
mov
inc
push
outsb
vcmppd
int3
inc
add
imul
adc
push
daa
adc
pushf
scas
mov
adc
and
inc
jmp
aaa
frstor
jle
rorl
mov
jns
je
and
xor
xor
std
mov
dec
add
pusha
jmp
push
mov
fisubl
add
dec
sbb
sub
inc
pop
mov
or
push
and
cmp
mov
cmp
adc
pop
stc
call
push
jns
mov
pop
cmp
in
fsub
adc
cmpsl
pop
push
sbb
mov
iret
add
cwtl
fxch
cltd
inc
add
popa
orb
jbe
xor
and
std
mov
into
add
push
or
push
aas
push
pusha
dec
ret
test
cmc
sbb
inc
mov
add
xchg
es
xchg
adc
mov
int
bound
sub
cmp
or
fcoms
mov
lcall
dec
int3
jg
xor
push
add
data16
sub
pop
cmp
jle
pop
or
mov
and
add
iret
mov
dec
das
loopne
leave
inc
mov
sbb
xor
pushf
xchg
inc
adc
mov
movsl
insl
jno
cmp
roll
ja
sti
mov
cmp
test
sahf
add
mov
mov
and
scas
inc
xchg
sarl
dec
ret
inc
sbbl
mov
cmpb
movb
sub
lods
daa
add
or
sbb
add
call
cwtl
adc
mov
jle
aaa
dec
and
inc
jb
adc
mov
idivb
mov
xchg
cmp
inc
cmp
cmp
cs
mov
and
jnp
push
cmp
rolb
xchg
or
add
mov
addl
test
mulps
mov
inc
std
cmp
mov
subb
inc
mov
loopne
xchg
sbb
xor
jl
cmp
pop
popa
inc
cmp
dec
push
add
push
sti
out
xor
pop
inc
inc
repz
dec
xor
xor
xchg
lods
repz
and
aaa
inc
stc
and
loope
pop
addb
sub
mov
ret
pop
xor
cmp
mov
xchg
jmp
xor
ss
ret
add
clc
sub
pop
nop
daa
mov
add
xor
add
xchg
add
sub
shll
adc
xchg
mov
fildll
jmp
pop
add
mov
icebp
cmc
and
jo
push
pushl
add
scas
daa
mov
mov
gs
mov
call
lahf
cmp
jmp
aam
or
sub
movsb
int3
movsb
push
and
add
int3
js
and
rcrb
pop
mov
insl
xchg
pop
mov
cltd
mov
jle
inc
mov
sub
dec
fs
and
mov
adc
dec
sbb
inc
jo
inc
into
gs
ret
testl
or
cmp
or
mov
out
adc
adcl
adcl
in
mov
mov
ret
push
inc
arpl
or
dec
cmp
rclb
sbb
mov
dec
lods
int
nop
das
subl
movsb
popa
jno
pop
adc
sbb
add
pop
sub
cmp
push
push
add
movb
icebp
push
test
mov
loope
insb
lock
push
cli
in
mov
add
loop,pn
mov
pop
dec
add
inc
dec
shlb
fxch
cmp
add
cmp
lock
push
cmp
jp
and
push
inc
and
bound
jnp
pop
inc
sub
loop
dec
sbb
cs
add
mov
adc
jmp
dec
add
shll
jo
mov
sbb
add
push
cli
data16
insl
movsb
cli
add
cmp
cmp
jge
push
mov
and
and
int3
scas
push
or
je
subb
jne
fucomp
and
adc
or
filds
inc
cltd
cmp
rcr
mov
rcll
push
add
push
cltd
daa
push
js
sbb
adc
aaa
es
out
cs
addr16
lea
mov
mov
add
pop
push
sbb
roll
pop
clc
mov
xor
filds
lods
lds
inc
cmpsl
sbb
xchg
push
or
stos
jb
ja
iret
testl
push
push
inc
sbb
cmp
scas
sub
orb
pop
inc
inc
pop
push
mov
loop
cs
mov
rolb
ret
xor
movsb
fists
lahf
dec
fistpl
rol
or
mov
and
inc
cmp
andl
cmp
inc
stos
imul
fs
add
test
daa
sbb
add
stos
clc
out
xor
sub
push
xchg
icebp
icebp
add
insl
lret
mov
std
cld
mov
jb
xor
sub
pop
lock
movb
pop
leave
leave
jmp
cld
pop
or
mov
jb
add
or
pop
inc
or
add
add
jb
jo
push
sbb
test
int3
loopne
cmp
enter
adc
sub
ret
ds
clc
xor
cmp
pop
or
xchg
jl
sbb
and
je
stos
push
sarb
add
xor
mov
ds
pop
lods
movsb
test
lods
shll
dec
push
das
jmp
add
mov
gs
test
cli
or
sbb
add
sti
push
mov
push
jno
out
movsb
xlat
fisttpll
dec
mov
test
and
das
mov
aam
inc
shl
prefetch
or
stc
pop
cwtl
cwtl
addb
sbb
pop
adc
adc
rclb
int
xor
mov
rolb
xor
mov
fmuls
mov
cmp
out
or
inc
test
cmc
jo
pop
add
jb
push
cmp
pop
nop
das
dec
or
sbb
inc
dec
inc
dec
xorb
fwait
jno
dec
push
ja
push
lock
rcrb
jb
cltd
aas
xor
incb
ret
sbb
push
cwtl
or
jmp
in
add
xor
cmp
cmp
popa
xchg
cmp
js
inc
xor
lret
test
mov
add
push
mov
jmp
cmp
testb
push
add
clc
fsubr
sub
jb
or
xchg
cmp
push
inc
xor
movl
mov
dec
mov
xchg
ficoms
mov
and
pop
call
loopne
push
push
stos
inc
xor
shl
cmpsl
push
jno
out
push
in
shr
movsb
add
cmpsl
call
xchg
aam
movsb
or
fimuls
lahf
test
ja,pn
fldt
inc
adc
insl
push
aas
rolb
pop
insb
clc
push
mov
xor
inc
or
dec
cwtl
rdmsr
jge
adc
inc
loope
push
jmp
sbb
imul
jns
pop
pop
adc
shlb
jl
adc
mov
call
dec
add
std
cmc
mov
xchg
lret
jno
imulb
xorb
xchg
mov
inc
sbb
or
xchg
xor
or
ficoms
nop
lock
in
std
adc
mov
cld
pop
hlt
fcomps
insb
mov
ss
iret
jo
hlt
leave
push
clc
pushf
or
mov
std
test
xchg
cmp
adc
mov
sbb
addr16
pcmpeqd
jmp
jb
inc
mov
lcall
and
cmp
lock
inc
xor
inc
push
add
je
inc
xor
adc
add
sbb
sbb
sbbb
push
mov
push
movsb
mov
push
adc
cmp
and
or
push
cmp
cmpb
ljmp
cmp
xor
cmp
xchg
add
je
push
sbb
and
mov
adc
xorb
mov
icebp
dec
and
stos
sub
in
lock
mov
daa
add
mov
sbb
loopne
cmc
cld
push
js
or
or
fisttpll
sub
pop
ret
inc
adc
loopne
adc
dec
xor
or
xchg
test
add
dec
shll
test
aaa
push
pop
scas
pop
les
aas
jbe
inc
enter
scas
adc
mov
rcrb
lret
adc
movsb
xchg
sub
test
push
stos
pop
insb
dec
or
push
out
pop
xchg
sbb
je
sub
je
add
mov
inc
pop
add
sub
mov
xchg
es
or
and
xor
sub
sbb
mov
inc
sub
imul
rol
pop
xor
inc
push
test
add
popf
mov
call
pop
mov
movzwl
inc
in
adc
push
or
inc
mov
fiaddl
hlt
iret
and
xchg
add
xchg
pop
lds
mov
xchg
cli
inc
pop
orl
and
sbb
cmp
and
insb
int
lea
hlt
int3
and
mov
xor
into
nop
and
jbe
rol
aam
or
movsb
sub
data16
ficoms
mov
sub
or
sbb
fcoml
testb
adc
add
enter
add
pusha
add
sti
jo
imul
and
add
out
push
push
push
mov
adc
push
xor
cmp
or
scas
dec
call
js
push
sbb
xor
stos
daa
push
mov
inc
lret
push
mov
sbb
add
mov
sbb
pop
mov
xchg
cli
out
xchg
fsubs
pop
mov
nop
push
mov
jb
das
cmp
je
fsub
outsb
add
sub
push
subl
daa
in
inc
arpl
sbb
lock
pop
sbbl
adc
in
dec
pusha
roll
mov
imul
ret
and
push
jecxz
adc
sbb
cmp
and
mov
je
mov
xor
sbb
push
dec
mov
dec
and
lock
les
push
add
add
lods
pusha
jbe
sbb
push
insb
add
inc
jecxz
push
or
mov
add
rclb
fwait
pop
test
movsl
iret
push
adc
and
push
push
sti
push
mov
cmp
fildll
sbb
jl
loop
fstps
mov
rorb
insb
movl
xor
outsb
cli
mov
mov
sbb
sub
add
pusha
mov
xchg
mov
or
arpl
or
aaa
sbb
aaa
divb
push
sub
jl
add
cmpl
sbb
push
push
into
mov
aaa
pushl
subb
ficompl
loope
std
jmp
jge
add
fcoml
cmp
jns
pushf
nop
sub
xchg
inc
cwtl
sub
mov
lods
call
inc
insb
pop
xor
cwtl
ret
sbb
and
cmc
pop
stc
mov
pop
fstpl
cli
adc
dec
push
sarl
inc
xor
insw
into
out
in
shrb
test
ficompl
aam
dec
roll
ja
inc
aam
pusha
lcall
sub
sbb
aaa
sub
testl
shl
or
add
rorb
jnp
push
stos
daa
pop
inc
test
clc
or
adc
pop
sti
cmp
ret
lcall
dec
cmp
jne
or
inc
xchg
xor
adc
fadds
fsubs
jl
add
sub
or
and
sbb
push
and
push
sbb
cmp
inc
jle
xorb
sbb
mov
pop
xor
push
mov
sbb
stos
enter
dec
and
dec
pop
cmp
or
jo
mov
jmp
mov
cmp
mov
jmp
cmp
jne
pop
add
bnd
xchg
nop
xchg
dec
push
lock
adc
das
inc
clc
xlat
mov
jne
jae
dec
imul
shrl
jne
fdivrs
pop
inc
jg
test
add
out
movb
test
mov
push
cli
cmp
aaa
call
jmp
cmp
and
lock
pop
or
jl
inc
sbb
push
lds
inc
js
ret
sub
or
inc
sti
ss
jge
and
jp
clc
lods
lock
adc
nop
sub
test
ret
aad
movsl
es
jb
inc
jns
aam
mov
jle
push
test
mov
push
ficoms
push
mov
jo
mov
repz
outsb
insb
enter
les
repz
jnp
pusha
aas
push
pop
push
pop
pop
adc
jnp
mov
push
push
push
dec
dec
push
fs
pushf
mul
mov
pop
js
sbb
add
roll
cltd
cli
mov
jb
mov
or
sbb
pop
sub
cs
jl
mov
mov
pop
test
and
dec
mov
mov
push
je
sbb
stc
sbb
outsl
aas
and
ret
inc
mov
xor
xor
mov
pusha
stos
dec
sbb
add
and
dec
outsb
arpl
mov
stc
sahf
sub
push
sbb
testb
cmp
andb
insb
ss
inc
mov
adc
or
push
add
add
dec
add
sbb
jbe
add
cmpsb
adc
xchg
adc
test
add
or
push
cmp
push
lock
mov
add
shr
adc
scas
push
push
xchg
inc
push
rcr
mov
or
pop
int3
loopne
xchg
aas
or
or
ja
inc
push
and
scas
cmp
sbb
add
aad
js
adc
inc
xorb
or
xlat
jl
inc
adc
sub
sahf
ja
ds
pop
adc
mov
stos
mov
push
stc
pop
cmp
add
cmp
test
xor
fildl
or
push
add
push
pop
insb
pop
adc
pop
mov
or
divb
inc
sbb
lea
sbb
pop
pop
js
nop
cs
mov
mov
dec
cld
push
sub
pop
shl
jae
into
les
inc
jbe
pop
dec
inc
imul
xchg
push
jb
decb
push
movsb
and
fs
mov
sbb
dec
jne
push
dec
dec
inc
and
inc
and
push
push
in
inc
add
aam
pusha
lcall
sete
add
outsl
hlt
dec
movsb
dec
pop
add
push
fcoms
ja
mov
fcompl
mov
and
and
imul
push
adc
push
inc
xor
bound
sbb
lods
ret
nop
xchg
pop
xor
add
sbb
mov
outsb
or
mov
aaa
stos
push
or
inc
jp
dec
or
dec
or
or
cmp
xor
dec
and
adc
adc
mov
movsb
jno
sbb
push
bound
and
or
or
jo
add
mov
subb
outsl
subb
jae
nop
movzwl
nop
mov
les
lcall
add
sub
dec
mov
das
mov
pop
in
out
pop
and
mov
into
push
ds
sub
adc
int
sbb
add
in
xchg
or
test
cs
xor
rorw
adc
push
adc
push
dec
or
jle
out
adc
jns
outsb
ret
out
mov
sahf
cmp
or
lods
add
push
mov
loopne
in
jae
pop
cwtl
in
outsb
jne
sbb
jnp
pop
or
push
mov
push
or
jae
xchg
dec
and
xchg
hlt
cmp
mov
outsl
testb
adc
adc
jbe
sbb
data16
adc
cs
out
icebp
and
gs
add
lea
outsl
add
jl
shlb
and
shll
inc
and
mov
cmp
fs
mov
push
jb
ret
insb
xchg
test
or
mov
iret
andb
cmpsl
xchg
and
sarl
push
outsb
adc
lock
addb
push
data16
pop
and
cmpl
push
ds
add
test
add
movl
xchg
mov
or
imul
or
iret
push
nop
jge
and
cmp
popl
push
rcr
jnp
add
roll
xchg
adc
jp
xchg
xor
lcall
add
push
call
or
daa
adcl
dec
jae
push
add
dec
add
mov
clc
cmp
out
cwtl
ja
push
pop
nop
mov
adc
cmp
or
inc
loopne
cld
pop
or
or
out
mov
or
and
and
pop
orb
jl
outsb
scas
and
pop
mov
push
inc
sbb
add
mov
push
jle
push
imull
pop
inc
push
add
push
mov
inc
dec
cmp
add
loopne
push
testl
pop
inc
dec
or
inc
sbb
int3
cs
or
jg
repnz
negb
loopne
rcll
data16
ja
js
nop
out
xchg
loope
add
xchg
push
imull
inc
push
jnp
push
out
negb
lcall
push
adc
sahf
popa
inc
repz
lock
push
test
push
push
mov
fs
das
and
mov
add
add
add
dec
adc
add
adc
push
test
inc
push
mov
sub
js
pop
add
mov
scas
movsb
subb
push
mov
lcall
sub
adc
inc
mov
pushl
mov
mov
scas
ljmp
push
jo
or
stc
jmp
imul
dec
sbb
jge
int
call
mov
jns
cs
push
push
test
mov
mov
aam
mov
cld
mov
lcall
out
cmp
ds
js
pushf
push
mov
sarl
enter
cmp
mov
rcr
sub
repz
sbb
insb
pop
jo
jns
or
clc
mov
out
mov
orb
mov
or
fs
sbb
or
pop
mov
rcrb
and
add
mov
push
out
nop
sub
test
pop
jo
add
inc
and
jne
xlat
outsl
pop
sbb
jo
pop
lret
push
cmp
push
std
orl
insl
pop
push
or
adc
mov
xor
lret
rol
sbbb
icebp
cmp
lahf
add
jo,pt
popa
inc
pop
repnz
dec
loope
adcb
dec
shll
into
pop
imul
or
loope
xchg
mov
shrb
shlb
sbb
sbb
loope
dec
data16
nop
or
sti
adc
xchg
jbe
test
inc
lcall
repz
orl
dec
aam
fldenv
mov
les
xor
or
ret
push
aas
sbb
cmp
xchg
or
pop
popf
fisubl
mov
scas
fimull
jecxz
sarb
and
dec
pop
inc
lock
inc
enter
iret
dec
push
cltd
dec
sbb
dec
fstp
inc
ret
pop
add
hlt
xlat
inc
fdiv
mov
mov
mov
mov
and
push
xchg
nop
jl
scas
in
push
fs
add
shrl
pop
movsl
push
push
dec
adc
mov
imul
inc
stos
dec
mov
push
push
jae
mov
loopne
mov
or
and
cmp
in
mov
sub
mov
inc
leave
add
push
sbbb
in
adc
xchg
in
mov
sub
popf
lea
out
insl
int
or
leave
outsb
or
pop
push
leave
push
insb
es
incl
popa
mov
mov
cmp
shll
inc
cltd
add
dec
inc
popf
add
ficoms
cwtl
test
ja
fwait
sub
and
or
jbe
mov
shlb
jle
inc
sbb
out
sbb
cmp
sub
outsl
push
dec
insb
fs
or
cmp
sbb
int3
outsb
das
rolb
xor
popa
and
xor
clc
fidivs
mov
imul
push
js
mov
xor
loopne
imul
jae
add
icebp
imul
inc
cmp
xorl
and
xchg
ljmp
adc
pop
jecxz
mov
push
hlt
inc
out
push
sbb
andl
xchg
and
stc
fldl
pop
in
in
or
mov
pop
xchg
incb
gs
sbb
inc
dec
cltd
add
pop
mov
or
bound
pop
adc
add
push
sub
es
dec
dec
mov
cmp
test
in
xchg
pop
pop
lock
pusha
xchg
or
adc
cltd
dec
pop
dec
cmp
out
mov
pop
xchg
fcoms
es
push
dec
cmp
fimuls
subl
ds
and
push
test
fnstcw
push
repnz
cwtl
cwtl
mov
ss
inc
insl
dec
xchg
inc
bound
sldt
or
dec
repz
pop
push
inc
inc
lds
sti
out
leave
enter
mov
subl
push
inc
inc
jmp
adc
mov
iret
dec
fadds
fmuls
pop
jae
pop
clc
jns
mov
fdivp
push
rolb
cmc
pushf
xchg
cmp
out
sbb
push
roll
mov
mov
pop
add
dec
mov
mov
push
cltd
jmp
sbb
loope
jmp
pusha
or
vpshad
dec
dec
adc
addb
movsb
dec
add
pusha
das
orl
mov
ds
je
ret
and
push
in
inc
stos
xchg
add
pusha
pusha
orl
addl
dec
push
sbb
pop
add
push
add
pusha
push
add
dec
push
add
fmul
cmp
add
inc
xchg
pusha
xchg
mov
inc
inc
push
shr
and
orl
sahf
dec
dec
push
adc
or
fdiv
das
mov
sbbl
xchg
mov
pop
pop
pop
and
pusha
ja
fistpl
mov
rcrl
shrb
adc
pop
xchg
push
sbb
into
lock
xlat
pop
sbb
lahf
or
jo
pop
add
hlt
dec
and
pop
aaa
aas
nop
cmp
aam
mov
mov
test
sub
inc
adc
add
or
mov
test
pop
mov
ja
xor
sbb
mov
insb
push
cmpxchg
test
jmp
pop
sub
rolb
mov
mov
daa
in
nop
or
inc
xor
imull
pop
mov
pusha
scas
nop
push
mov
mov
ret
clc
movsl
inc
jo
outsb
inc
dec
mov
xchg
add
and
mov
pop
sbb
and
and
rclb
fidivs
loopne
xor
adc
xchg
cmp
and
cmpsb
cmp
pop
add
inc
add
sbb
mov
and
in
mov
mov
aad
aas
cmp
test
andps
dec
or
mov
inc
adc
push
and
lock
addr16
and
sbb
push
mov
and
out
adc
fidivrl
mov
repz
cli
std
add
jmp
push
je
and
sbb
push
inc
pop
mov
and
mov
js
push
clc
sub
nop
mov
cltd
stos
adc
adc
pop
dec
cmp
jns
inc
ljmp
jae
xlat
sub
cmp
adc
dec
bound
cmp
xor
xchg
and
pop
leave
jb
imul
jae
hlt
mov
xor
sbb
jo
inc
subl
push
lods
or
sub
push
jae
sahf
mov
adc
inc
push
xor
lea
xchg
jle
hlt
loop
mov
dec
loope
fiaddl
push
or
pop
aam
and
jmp
jecxz
inc
mov
popa
add
inc
fs
sti
leave
ret
les
lahf
cmpsl
dec
loope
mov
aam
je
mov
and
push
cmc
test
fcmovnu
outsb
mov
cmp
mov
lods
rcrl
jl
fnstenv
xor
cmp
mov
je
mov
hlt
xor
inc
mov
filds
push
cmpl
insl
popa
mov
testl
cmp
mov
cmp
lcall
sub
pop
mov
test
repz
jp
popf
call
xchg
dec
jnp
and
jns
jg
xor
add
cmp
cmp
aad
cli
cmp
and
aam
and
test
fwait
enter
cmp
js
cmp
cmp
inc
lock
jae
scas
xchg
push
add
add
pop
sahf
lret
add
add
adc
dec
push
roll
adc
sbb
jae
cmp
loopne
faddl
mov
and
nop
pop
push
fidivrs
inc
adc
rclb
adc
add
cs
mov
and
add
mov
in
sbb
dec
sub
push
leave
test
xchg
ds
xlat
push
adc
pop
add
add
dec
inc
ss
sahf
inc
sete
int
xor
pushf
jge
dec
adc
add
sub
mov
sbbl
push
jl
sbb
mov
sarb
sarl
mov
xorl
inc
sbb
jae
or
or
mov
sub
sub
push
inc
aas
mov
jo
mov
clc
dec
loop
sbb
sub
inc
push
fadds
xor
sarb
or
xor
add
pop
push
sbb
xlat
popf
add
lcall
fcomps
fistpl
outsb
sub
or
adc
das
and
push
mov
add
jmp
sub
add
rclb
std
addb
inc
popa
mov
sub
or
push
inc
add
mov
popa
nop
and
push
xor
or
add
cmpsb
je
movsl
ret
xlat
dec
leave
out
test
add
inc
or
in
inc
inc
dec
adc
inc
adc
mov
ss
and
mov
inc
dec
pop
inc
ret
sub
xchg
outsl
movsl
hlt
mov
pop
xchg
imul
sub
push
push
cmp
test
jmp
sub
pop
adc
mov
out
add
push
mov
aam
rclb
lea
inc
fs
fstl
scas
sub
dec
jmp
cmp
inc
push
adc
sbb
add
add
lock
icebp
inc
out
test
jmp
sbb
pop
outsb
sbb
mov
outsl
push
add
fmul
fdivs
test
xlat
adc
sti
pusha
adc
cmp
jne
pop
adc
adc
xchg
lock
sbb
inc
and
adc
pop
hlt
mull
daa
in
fucomi
arpl
je
sub
sbb
jmp
dec
cli
jno
mov
test
cwtl
mov
pop
adc
push
mov
push
cmp
inc
pop
mov
dec
ret
fdivs
jmp
das
aas
adc
inc
test
xor
imull
sarb
mov
sub
or
sbb
xchg
cli
pushf
xlat
xor
mov
sbb
pop
or
aas
mov
movswl
and
adc
rcll
popf
and
jne
and
ja
or
js
adc
jg
sbb
jae
or
jmp
mov
jo
mov
fcmovb
fldl
cmp
sete
jmp
inc
inc
or
rorb
fildl
cmp
cs
inc
cmp
xchg
push
lret
les
mov
mov
repz
loop
pushl
cmp
jge
leave
and
xor
stos
xor
loopne
and
sti
jne
iret
jp
or
jmp
push
adc
push
sti
mov
aaa
and
bound
adc
add
mov
mov
lret
push
push
stos
aas
or
je
ret
sbb
scas
enter
add
or
push
in
ljmp
ja
sarl
inc
mov
shr
cmovbe
mov
cmp
pusha
cltd
movsl
icebp
cmp
push
inc
push
je
sub
add
and
sbb
sbb
movsb
inc
bswap
mov
mov
inc
pop
adc
pop
outsb
push
fsubs
jmp
test
push
push
and
dec
mov
sbb
addb
push
mov
push
adc
push
cld
or
mov
push
and
inc
movb
jne
mov
lret
mov
cmpsb
inc
scas
add
imul
cmp
jno
add
das
sub
or
inc
sub
dec
clc
or
xchg
inc
lahf
sub
mov
sub
js
mov
sub
rolb
mov
loope
jo
aaa
in
rcll
or
push
inc
sarb
inc
loopne
daa
push
jp
addr16
imul
add
cmpsb
lea
cmp
je
pop
sub
add
das
cs
jl
xchg
or
enter
cmp
pop
mov
lahf
es
sub
subb
xchg
inc
push
loop
lahf
cmp
je
jp
mov
mov
xchg
dec
inc
mov
enter
sbb
or
mov
outsl
inc
mov
ss
das
mov
out
adc
jge
sbb
loopne
lahf
rcll
fcmovb
orl
ret
cmp
pusha
xor
mov
sbb
cld
addr16
or
sub
lahf
jb
js
sbb
and
and
add
jo
hlt
popa
dec
pop
and
sub
xchg
cmpsb
stos
and
push
pop
jb
adc
cmp
xchg
xor
push
mov
jb
push
sub
xor
adc
test
fcoml
jmp
xchg
or
xor
mov
add
lock
mov
into
mov
push
push
rcll
repnz
stc
push
mov
clc
push
popa
dec
in
cwtl
push
inc
clc
movl
inc
push
adc
sbb
dec
call
mov
sub
rcll
push
notb
popa
adc
lret
lods
pop
pop
mov
xchg
loop
mov
sub
mov
push
popa
es
pushf
rcll
rorb
sub
into
xor
popa
mov
je
sbb
xchg
movsb
mov
or
sub
add
pop
add
sub
jo
or
add
and
idivl
fcmovb
xchg
push
sub
call
cmovae
cmp
movl
push
inc
jp
cld
andl
and
movsb
pop
adc
mull
ja
cs
stos
movsb
sbb
rolb
iret
daa
sub
iret
lahf
add
in
mov
lods
adc
add
inc
sbb
push
push
add
cli
sarl
sbb
mov
aam
mov
jo
lret
testl
bndstx
shrl
aaa
inc
pop
fcmovnb
sub
add
lock
add
jne
int3
ss
pop
inc
jmp
mov
and
push
in
push
inc
add
xor
call
add
mov
sbb
jmp
ja
mov
rcr
lcall
or
fidivrs
pop
je
mov
lea
adc
jmp
or
sbb
roll
add
stc
jb
lea
or
lds
sub
fcmovne
fisttpll
mov
dec
movb
pop
in
xor
fistpl
jp
or
inc
pop
divb
pop
dec
outsl
cmp
and
xchg
add
dec
icebp
mov
xor
sahf
pusha
push
addr16
lahf
enter
push
loopne
sbb
cmc
mov
mov
mov
xor
movsb
imul
xor
dec
and
gs
or
sbb
adc
mov
je
add
sbb
ja
call
fcomps
push
lea
push
inc
add
lods
mov
mov
jg
movq
add
cmp
daa
out
in
lds
sbb
out
sbb
pop
mov
divb
push
jle
mov
xchg
or
mov
inc
mov
jnp
test
sbb
jnp
add
aaa
mov
pop
mov
or
add
push
lahf
fmuls
pop
enter
xchg
push
hlt
fimuls
ss
adc
jle
sbb
aam
mov
stos
inc
fcompl
rolb
fcmovbe
jo
stc
or
sbb
mov
outsl
repnz
add
or
add
clc
xchg
aad
fsubr
incl
pcmpeqd
aad
push
add
dec
push
jns
pop
dec
je
cwtl
add
xor
ret
inc
xor
mov
aam
mov
decl
stos
sub
sti
pop
mov
pop
test
jnp
add
fstpt
pusha
jne
jg
add
mov
adc
xor
jns
or
mov
sbb
and
sbb
xchg
pop
xor
xchg
dec
push
adc
fldl
adc
cmp
sbb
fadds
pop
xchg
mov
jae
push
shlb
adc
xchg
xchg
inc
in
jo
pusha
leave
xchg
push
test
sarb
sub
add
inc
out
mov
fdivs
mov
mov
add
or
xchg
xlat
pop
movb
cmpsb
pop
adc
popf
adc
fldenv
fs
mov
scas
push
das
inc
xor
rcrb
or
sub
movzbl
dec
nop
jno
sub
add
mov
pop
sbb
pop
add
mov
gs
nop
xor
or
sub
add
inc
ja
xchg
mov
lea
leave
daa
or
lds
fisttps
push
sbb
adc
inc
mov
xor
lea
dec
add
or
mov
jp
mov
stc
or
aam
push
mov
scas
add
imul
movsb
push
cmp
mov
dec
sarl
pop
jp
push
icebp
testb
or
daa
cld
push
andl
shll
sub
jbe
hlt
mov
fcoml
push
and
push
aam
add
dec
and
dec
push
dec
add
jmp
inc
cmp
cmpsl
push
jbe
adc
and
out
das
xor
mov
mov
adc
push
pop
das
mov
cmp
mov
rolb
or
repz
sub
or
add
add
add
aam
sub
filds
fstl
loope
pusha
inc
fmull
sub
ret
push
push
andb
out
enter
push
sbb
inc
dec
add
jge
movl
bts
and
push
ficomps
sti
push
jl
pop
add
mov
fs
imul
xchg
shrb
scas
outsb
ja
jne
lods
pop
or
mov
push
xchg
fwait
mov
cmc
cs
loopne
rol
jo
imul
pop
jns
mov
inc
adc
lock
enter
xor
cmp
jns
push
mov
sbbb
mov
add
xor
fmuls
rclb
pop
xor
mov
xchg
rorb
inc
pop
dec
shll
mov
lods
shlb
ret
leave
cltd
mov
sub
cmp
mov
xchg
and
inc
dec
pop
sub
pop
cmp
ret
jb
nopl
shll
lds
pushf
and
and
xlat
jp
sub
mov
jmp
mov
fcomip
inc
or
add
mov
jne
sub
ja
dec
lea
das
push
lret
sub
iret
movsl
and
addb
xchg
jnp
add
shrb
sbbl
jp
jle
jne
pop
iret
or
adc
fdivrs
xchg
sbb
cmp
vpor
mov
cmp
pop
sbb
jae
pop
in
pusha
enter
adc
xchg
dec
es
add
cmpl
bound
mov
adc
pop
pop
fildl
adc
jne
mov
or
xor
mov
pop
push
sbb
test
lret
mov
pop
jo
dec
mov
cli
mov
cmp
adc
jge
das
daa
push
mov
adc
push
iret
mov
jp
xchg
ret
xchg
push
and
dec
sahf
adc
cmp
inc
ficoms
or
and
push
add
inc
sub
and
aaa
add
and
push
adc
insl
not
sbb
or
fidivl
mov
adc
ljmp
outsl
in
pop
movsl
xor
shlb
clc
loop
and
mov
jo
mov
add
and
cmp
push
mov
mov
adc
shrl
cmpsl
dec
mov
xor
mov
es
clc
sbb
adc
fdivrs
das
dec
in
adc
xor
adc
add
aas
xor
push
sahf
and
adc
and
aas
cmp
pop
insl
or
js
dec
out
in
push
sub
or
adc
fsubr
mov
call
or
mov
leave
lods
daa
sahf
cmpsl
or
xor
arpl
addl
or
movb
call
xor
lock
xor
push
imul
sub
stc
rcrl
inc
mov
test
aas
cmpb
mov
jno
shlb
dec
mov
subb
cmp
sti
mov
pop
cld
inc
cmp
adc
mov
add
add
add
outsl
pop
pushf
sbb
dec
sbb
mov
mov
sub
xchg
pop
lcall
lea
adc
xchg
sub
out
aas
mov
cmp
pop
xchg
aas
int3
adc
cwtl
pop
enter
add
xor
pusha
mov
xchg
mov
or
into
xor
les
shl
cmp
ljmp
mov
dec
xor
add
push
mov
push
cs
repnz
insl
cmpsl
fs
fidivs
cmp
add
sub
lods
std
inc
xor
fisubs
int
add
in
adc
mov
test
xor
ss
in
jecxz
push
mov
sub
jno
pop
call
xorl
mov
inc
scas
dec
dec
sub
imul
and
inc
pusha
imul
cmp
ret
int
cmp
dec
test
aam
adc
int3
pusha
dec
and
not
arpl
sub
cmp
rcrb
pop
lock
aaa
cld
lea
mov
xchg
fisubl
or
orl
aad
repnz
inc
or
adc
and
iret
testb
je
orb
jmp
andb
loopne
idivb
pop
push
popa
bound
inc
leave
sub
inc
jb
icebp
popa
lret
cmpsb
pushf
push
jne
nop
mov
les
add
inc
mov
loop
lret
pop
ja
in
and
or
jmp
mov
xlat
or
adc
aas
add
or
mov
test
dec
jmp
sbb
adc
dec
jp
addl
and
adcl
push
and
push
jl
or
test
pop
mov
and
mov
out
dec
je
daa
dec
pushf
dec
sub
std
dec
stos
lret
cld
cmp
jne
and
test
daa
cmp
jne
aas
pop
mov
sbb
or
xor
cmp
mov
xor
sbb
mov
pop
gs
inc
out
mov
nop
or
fs
and
mov
in
mov
inc
xlat
leave
xchg
dec
xor
mov
orl
test
addl
mov
add
inc
sub
sbb
movsb
pop
or
mov
fisubrl
test
xchg
adc
rcrl
cmp
jnp
test
pand
or
mov
jmp
mov
push
test
fs
xorl
xchg
pop
push
lods
ljmp
out
in
in
mov
in
int3
je
fistl
xchg
push
notb
sahf
mov
inc
dec
enter
sbb
hlt
nop
add
pop
push
out
arpl
imul
ret
and
add
sub
shll
daa
push
lock
sub
and
push
gs
or
jmp
sbb
or
adc
cmp
add
mov
and
pop
and
and
and
add
or
xor
loop
out
iret
jb
sub
add
pusha
xchg
or
fdivrs
test
je
push
cmpb
cmc
jmp
addr16
add
cli
add
test
and
sbb
mov
add
add
add
dec
adc
sub
scas
add
inc
loopne
pcmpgtb
sub
lods
pop
roll
sbb
imul
add
mov
pop
adc
adc
adc
push
xchg
stc
out
es
pusha
sbbb
sbb
in
ret
imul
lds
xchg
loopne
subl
push
mov
sbb
das
std
roll
shr
add
loope
sub
ret
or
mov
mov
cmp
push
out
jb
add
or
aas
or
mov
fimuls
push
mov
inc
xor
neg
xchg
movsb
neg
add
in
loopne
inc
ficoms
mov
sbb
pop
mov
sub
sti
in
mov
test
dec
std
inc
daa
dec
push
das
inc
jne
pop
mov
and
sub
push
adc
add
cmp
push
push
push
icebp
pop
inc
loopne
mov
xor
daa
sbb
mov
pushf
cmp
or
dec
dec
and
dec
inc
sbb
pop
adc
sbbl
aaa
add
mov
add
aad
incl
lods
jno
out
fwait
jno
push
stc
popf
push
mov
repz
jp
or
sbb
rcr
jle
icebp
adc
fcomps
cwtl
mov
or
fists
push
adc
inc
js
imul
sub
ret
jg
mov
cmp
mov
jl
mov
jecxz
xor
add
adcb
int3
xor
lods
adc
add
popa
fistpll
xor
arpl
adc
cmp
sub
arpl
cli
push
mov
add
insl
jmp
sbb
cmp
out
push
ret
mov
loope
outsb
movsl
and
jl
mov
xor
nop
out
jo
xlat
and
aas
aaa
cmp
and
cs
sbb
xorl
movl
lods
xchg
xchg
mov
nop
and
cmp
and
add
add
pop
sbb
and
mov
daa
mov
pop
clc
nop
mov
cmp
lret
mov
cltd
test
push
xchg
adc
sbb
test
mov
sub
add
orb
adc
ret
cmp
fldt
stc
sub
pusha
sub
addr16
adc
or
push
nop
mov
pop
jge
fstpt
mov
loopne
rorb
or
pop
inc
bswap
add
mov
lret
aam
pop
pop
rclb
scas
pop
je
enter
mov
cmpb
xor
jne
inc
mov
add
mov
movsw
rorl
es
jne
loopne
stos
push
push
inc
sahf
jecxz
mov
cmpl
lods
test
aad
ss
int3
and
adc
pushf
js
les
loope
into
xchg
dec
xchg
sbb
push
pop
sbb
push
push
adc
fimull
adc
or
out
sub
cmp
ljmp
add
outsb
adc
pop
dec
mov
aad
adc
dec
dec
dec
shll
cld
popa
js
sbb
mov
cmp
std
inc
daa
fdivs
dec
sbb
mov
imul
sbb
sub
xchg
mov
jne
ljmp
cli
adc
or
adc
mov
sub
cmpsl
push
test
and
mov
sbb
fmuls
push
dec
je
add
mov
jno
ret
scas
or
push
clc
je
cmp
inc
ficompl
in
sbb
jmp
int
cs
lahf
iret
flds
imul
aaa
cs
loopne
pop
lahf
popf
xchg
adcl
xlat
rcl
nop
lea
pusha
or
lea
xchg
aam
push
push
pusha
or
jl
testb
clc
mov
pop
loope
mov
xchg
xor
and
sahf
xor
leave
add
pop
ss
pop
aam
mov
popa
dec
inc
outsb
or
orb
test
add
loopne
and
mov
rolb
call
add
inc
imul
scas
add
adc
xlat
ja
and
pop
cmp
cmp
jne
fstl
or
jnp
rcr
lret
ret
xor
sbb
fisubrl
popa
add
mov
jmp
sub
sub
pop
and
sbb
test
and
adc
dec
cmp
xor
bound
and
jecxz
xor
je
adc
ds
mov
add
in
in
shrb
push
push
cltd
add
push
cmp
cwtl
xor
add
mov
test
sbb
movsl
outsl
dec
js
mov
adc
test
cmp
push
nop
dec
scas
push
outsb
sbb
outsl
push
push
jne
sub
retw
inc
adc
jp
rcr
test
mov
das
mov
shrb
push
fisttps
xchg
or
xchg
in
sub
adc
add
push
cmp
push
dec
inc
call
arpl
lock
add
out
pop
aad
test
cmp
sti
sbb
imul
sub
jmp
sub
xor
xchg
and
nop
add
add
xor
shll
push
sub
in
push
dec
jp
pop
jb
or
mov
xor
mov
inc
or
xor
popa
push
pusha
pop
ja
mov
push
or
push
push
mov
push
mov
adc
stos
push
bound
fimuls
insb
daa
jne
adcb
mov
jne
cmpl
push
push
push
jo
negb
data16
cld
mov
adc
or
pop
out
icebp
mov
out
xchg
push
and
adc
sbb
cmp
xchg
sbb
mov
cmpb
aam
cltd
add
cmpb
pop
or
jbe
idivb
ret
pop
std
cmc
sbb
pop
psrld
mov
rclb
testb
dec
pop
sub
push
ror
cmp
jmp
mov
or
sbb
or
lods
lea
adc
xchg
add
loopne
mov
or
push
mov
fdivs
sub
add
mov
jbe
add
xchg
clc
push
inc
sbb
or
and
mov
push
add
fidivs
push
sbb
in
sbb
jmp
rclb
sbb
aas
add
mov
add
sbb
pop
jge
jmp
or
sub
push
add
movsl
xchg
setg
nop
ja
ret
or
sbb
les
or
sbbl
rolb
test
repz
xchg
add
stos
imul
incl
xchg
mov
mov
pop
es
add
push
lods
jmp
cs
adc
and
xchg
mov
add
cmpb
and
filds
push
push
je
pop
or
imul
insb
test
mov
push
xor
push
bound
push
sti
incl
sahf
pop
dec
inc
dec
dec
inc
dec
push
sbbb
iret
dec
jg
test
pop
adc
and
es
adc
nop
lods
or
call
jne
xchg
add
daa
lea
cs
das
mov
dec
movsb
pushf
faddl
xor
push
loopne
xor
rcll
xchg
or
adc
adc
push
push
shl
sbb
lret
clc
or
and
push
imul
mov
imul
inc
lock
jb
jo
mov
clc
cli
mov
pop
incl
les
dec
mov
decl
sub
pop
adc
add
stc
jp
dec
shlb
adc
je
push
add
int
or
in
add
mov
fbld
jne
subl
scas
cmp
mov
xor
decl
xor
add
xchg
jnp
cmp
stos
das
mov
inc
cmp
je
lock
push
rcrl
push
jne
or
ret
movsl
jne
aaa
test
mov
loop
bound
iret
sub
adc
xchg
iret
adc
sub
or
lds
sbb
enter
xor
mov
cmp
pop
ret
lahf
sahf
cs
cs
ss
mov
pop
das
insb
pop
int3
psubusb
pop
dec
mov
inc
mov
subl
mov
push
bound
adc
push
jae
mov
pop
sbb
roll
sub
cltd
nop
xchg
insb
dec
dec
jmp
or
cmpl
inc
filds
loopne
cli
lret
fsubl
jg
call
add
fwait
cmp
cmpsl
pushf
push
mov
jle
lock
je
jbe
bound
jne
daa
sbb
jle
into
mov
sub
pop
add
outsb
leave
cmp
insl
js
dec
add
test
in
fwait
sub
ret
orl
and
mov
addr16
and
sbb
rcr
push
adc
push
mov
ret
dec
xchg
adc
jmp
xchg
add
cmp
in
push
dec
sbb
and
and
jne
fs
mov
insl
and
test
es
fs
cmp
outsb
add
pop
popl
outsl
mov
sahf
xlat
inc
pusha
arpl
sub
sti
sub
adc
and
pop
mov
or
xchg
adc
bound
call
jg
and
or
test
das
scas
aad
push
inc
push
lock
xchg
pop
xor
jne
mov
xchg
or
test
aaa
cmpl
pop
inc
ret
dec
ror
leave
dec
cmpsl
pushf
ret
sahf
add
aad
nop
mov
cmp
jo
filds
movsb
sbb
push
push
and
shll
jl
lods
sub
dec
pop
sbb
lahf
push
adc
push
xor
jmp
stc
cmp
popf
jns
pop
mov
cli
fincstp
inc
cmpl
inc
inc
je
pop
std
cmp
test
dec
cmpb
add
inc
and
and
jmp
fwait
jns
rclb
push
mov
arpl
fwait
lea
mov
call
scas
adc
dec
mov
mov
adc
push
test
filds
and
push
cmp
fimull
cmp
inc
fs
loop
mov
xchg
adcb
jo
or
sub
add
mov
add
gs
dec
mov
cmp
mov
inc
or
mov
xchg
daa
xor
lock
andl
inc
imul
cmpl
and
shrb
lods
pop
adc
movsl
lahf
or
dec
sub
push
and
add
xlat
mov
and
ficompl
call
enter
xor
dec
aam
xchg
ljmp
push
push
add
inc
pop
lods
dec
jno
lods
clc
cmp
pop
dec
movsl
push
int3
dec
jne
arpl
add
jnp
arpl
and
scas
shrb
mov
insb
adc
lea
add
jmp
push
ret
pop
shl
or
add
cmp
sbb
mov
cmpsl
xor
lahf
inc
adc
add
adc
rcrl
test
mov
movsb
out
sub
daa
dec
xchg
and
sbb
sbbb
rclb
rorb
cmpsl
and
jmp
and
int3
imul
test
mov
mov
inc
call
icebp
es
rcrb
aas
push
sbb
adc
sbb
add
arpl
dec
jbe
inc
or
push
and
xchg
xchg
xor
rorl
out
aad
gs
ljmp
sub
adc
jmp
ret
das
movsl
mov
or
stos
fwait
add
pop
and
push
shlb
shl
pop
frstor
adc
pop
push
push
pusha
mov
test
xor
xchg
scas
adc
lar
adc
mov
or
and
dec
or
jp
mov
add
and
fildll
mov
xor
repz
movsb
dec
adc
and
orl
loope
mov
mov
add
mov
or
leave
adcl
cmpsl
add
and
popa
cmp
pop
xchg
les
jp
call
rcl
push
out
sub
push
or
mov
add
inc
fmull
mov
inc
pop
inc
enter
dec
xchg
jo
adc
sbb
ss
cmp
inc
pop
bound
and
or
sbb
ja
in
sbb
dec
movb
pop
je
mov
pop
add
sub
arpl
xchg
xchg
and
push
nop
add
pop
aam
sbb
adc
mov
sbb
mov
mov
adc
or
push
xchg
push
or
cmpb
jns
pop
fdivl
push
push
dec
pop
das
sbb
or
lock
test
inc
xchg
sbb
sbb
rcr
inc
cmp
out
popa
arpl
xchg
mov
adc
shl
sbbb
xchg
xlat
insb
mov
cmpsl
call
adc
pop
mov
sub
or
out
dec
jmp
cmp
mov
subl
mov
test
xor
lahf
push
mov
pop
xor
cmp
or
pop
mov
inc
xor
shlb
sub
add
mov
or
inc
or
pop
into
cltd
cmovno
lret
add
mov
es
mov
push
cmp
test
xchg
push
inc
mov
ret
push
dec
add
js
sub
sbb
neg
lds
xor
xlat
out
jo
adc
push
sbbb
popa
pop
shrb
inc
sbb
pop
adc
dec
push
leave
xor
rcll
cmpl
rcll
jbe
sub
sub
or
add
mov
imul
jne
outsb
adc
pop
sub
xchg
xchg
imul
pop
xor
push
add
jmp
mov
rcll
in
or
xor
dec
adc
or
stc
push
sub
sbb
call
imul
cmp
or
fcompl
jmp
js
pop
nop
lcall
ds
shll
xchg
insl
insb
mov
inc
jl
cltd
or
nop
pop
testb
outsb
cmpsb
jne
rolb
in
gs
outsb
ret
push
mov
imul
sub
mov
jo
lret
add
lock
les
mov
jg
adc
imul
inc
push
jp
out
dec
push
enter
dec
sbb
adc
sahf
sbb
adc
mov
sub
or
rcrl
or
push
push
and
sbb
shl
mov
xchg
adc
test
jne
add
sub
push
and
pop
inc
cld
punpckhbw
icebp
mov
pop
mov
sarl
mov
sbb
xchg
or
inc
adc
mov
inc
loope
jne
mov
sub
insb
push
and
stos
std
fsts
jl
pop
aas
or
imul
gs
and
loope
and
push
adc
and
mov
sub
les
push
addb
aam
shl
sub
fcoms
movsb
cs
xchg
dec
mov
xor
or
cmp
setge
pop
jbe
shll
or
add
movsb
push
cli
daa
mov
sbb
or
je
add
xchg
imul
push
stos
adc
xor
mov
add
or
bound
adc
inc
outsl
clc
stos
aam
inc
xchg
inc
sub
mov
mov
xchg
add
cmp
add
add
mov
scas
dec
cmp
loopne
xchg
xor
pop
push
add
rolb
cmp
aaa
cmc
and
subb
dec
sar
pop
add
or
roll
aaa
test
lcall
xor
xchg
enter
push
cmp
sub
sbb
or
xor
sub
adc
xchg
mov
mov
sub
outsb
bound
cli
or
sub
dec
jge
xchg
jo
jmp
jne
sbb
cmp
ds
jmp
and
or
add
bound
lret
rorb
or
add
leave
mov
cmp
nop
mov
clc
sub
dec
xchg
adc
jb
mov
fistl
push
sub
daa
push
dec
jmp
cmp
add
sub
jecxz
and
xchg
inc
dec
dec
inc
movsb
xchg
ja
adc
in
lods
add
add
aas
ud2
jbe
sub
aad
mov
in
aaa
mov
scas
aad
mov
sti
insb
hlt
or
icebp
mov
or
adc
pop
push
lea
stos
in
cmp
jnp
mov
jo
dec
cltd
mov
loope
or
fldl
push
and
jmp
loope
mov
sar
inc
mov
imul
call
or
push
leave
lahf
cld
stc
dec
cmp
in
mov
das
xchg
and
adc
inc
push
adc
lock
xchg
sbb
lret
ss
xchg
or
bound
ret
cmp
je
loope
push
pop
pop
jmp
cmp
push
pusha
jno
mov
repnz
adc
xchg
cmp
pop
add
xchg
adc
lea
inc
in
add
out
push
mov
adc
xor
insl
jb
dec
or
adc
fisttps
clc
jmp
or
jmp
cltd
mov
cmpsb
loop
or
rolb
cmp
imul
icebp
sti
dec
sbb
jne
sub
cmp
xor
rolb
sbbb
test
fbld
add
push
xlat
sbb
pop
cmp
add
ret
cmpsb
xor
cwtl
lret
pushf
cwtl
inc
push
or
enter
xchg
mov
imul
push
xor
cltd
addb
por
je
jmp
cwtl
nop
mov
or
mov
sbb
or
ret
mov
shl
and
add
xor
fwait
push
jmp
std
xchg
jne
shll
incl
mov
lahf
loopne
xchg
mov
cmpsl
call
or
popf
loopne
add
or
repnz
lods
push
push
loopne
and
nop
add
movb
sbb
mov
sti
xor
cld
xor
cltd
stc
cwtl
nop
push
fimuls
add
or
jge
js
xor
imul
divl
data16
cmpl
sub
insl
push
mov
rorb
out
test
stc
insb
sub
or
push
popf
in
cmp
cmp
lahf
mov
sub
xchg
loopne
jge
movl
sbb
daa
sbb
cmp
dec
pop
and
fmuls
add
subps
mov
mov
movsb
add
std
jl
cmpsl
shlb
testb
jo
test
push
jno
jl
and
js
cmc
pop
add
test
pop
cmp
and
lock
scas
cs
dec
rcrb
xchg
jecxz
negl
nop
mov
outsb
call
out
cmp
movsb
mov
lock
data16
push
or
mov
pop
test
je
pop
inc
add
and
adc
out
js
push
cmp
sbb
dec
hlt
pop
xor
rolb
insb
sarb
aam
mov
cwtl
or
xchg
inc
xor
loope
dec
jmp
pop
mov
mov
ret
add
pop
push
fsub
push
push
sarb
adc
mov
jg
mov
cmp
cmp
das
jne
subb
xchg
das
sbb
call
inc
repz
and
mov
and
or
pop
dec
mov
add
mov
adc
insl
sub
xor
cmp
fiadds
mov
ss
or
je
sbb
dec
test
mov
push
rcll
test
insl
dec
and
push
mov
mov
mov
lock
movsb
push
pop
sarb
mov
cmp
sub
lods
lcall
push
add
and
aas
or
pop
das
imull
or
adc
lret
dec
mov
xor
mov
loopne
inc
test
mov
fcmovnb
sbb
test
xchg
adc
sub
xor
je
push
xchg
mov
adc
or
add
xchg
sbb
inc
pop
sbb
sahf
cs
add
xor
cli
addl
inc
cmp
or
push
and
xor
sbb
xchg
or
filds
mov
out
je
testl
dec
add
data16
xchg
mov
jecxz
push
jmp
call
mov
cmp
clc
in
add
or
jmp
and
push
add
xchg
nop
loopne
js
movsb
mov
std
ret
es
cmp
ja
push
dec
call
aam
and
and
mov
mov
pusha
test
or
push
stc
imul
inc
xchg
addr16
xchg
loopne
push
mov
add
mov
enter
pop
int3
or
pop
stc
mov
dec
gs
mov
popa
pop
pop
andb
sbb
sbb
inc
ja
or
sbb
xor
and
leave
outsb
ljmp
nop
and
sub
fiadds
xchg
and
gs
sti
adc
mov
stc
mov
lods
fsubs
add
add
mov
pop
add
test
insl
pop
add
fmull
or
pop
movb
or
push
std
inc
rcrl
int3
filds
in
sub
lock
cmpsl
orl
rorb
pop
mov
push
mov
cmpsl
dec
in
adc
jge
je
adc
pop
pop
fnstcw
cmp
pop
stos
xchg
pushf
cmp
aam
add
movsb
ret
test
scas
insb
xor
and
loopne
mov
push
and
xor
add
mov
sbb
add
sbb
xor
fwait
mov
pop
mov
jbe
sub
sbb
pusha
xchg
loop
sub
cmp
loop
and
jmp
sbb
cld
cld
imul
sarl
leave
sbbl
cmp
add
or
aaa
incl
sbb
mov
mov
cmp
adc
jbe
pop
push
subl
sub
shlb
push
imul
xchg
cmp
cltd
or
das
das
adc
in
adc
cmp
das
push
movsl
in
or
lahf
fcmovb
sbb
mov
sub
outsb
mov
divl
sti
test
inc
sub
sub
xor
adc
mov
sbb
movl
mov
sbb
push
negl
pop
sbb
mov
sub
xor
adc
push
push
pop
inc
dec
adc
jl
push
mov
es
pop
rclb
sub
push
pop
mov
mov
test
add
shlb
push
pop
lcall
adc
andb
add
imul
inc
push
dec
xor
jl
add
and
les
mov
jp
mov
fildl
rclb
ret
lds
aas
push
in
popa
sub
ret
cld
pop
dec
xchg
dec
cs
pop
insb
inc
fbstp
sbb
or
dec
jnp
or
push
push
daa
cmpsb
fcom
mov
dec
cmpsl
dec
inc
jns,pn
ss
push
std
cmpsb
hlt
inc
fsubrs
sbb
or
roll
push
xchg
mov
push
sub
or
xchg
cmp
sbb
rclb
dec
adc
mov
push
and
or
sbb
inc
pop
inc
push
leave
ljmp
pop
data16
call
loop
movsl
mov
adc
iret
idiv
out
jl
or
jle
cs
nop
lret
lea
add
or
cltd
sub
pop
call
mov
pop
out
adc
push
sbb
pop
fsubs
ret
ret
and
out
jo
sub
push
enter
push
sbb
sbb
mov
xorl
ret
cmp
mov
pop
outsb
pop
pop
rorl
mov
mov
mov
pop
js
and
cmpsl
fmull
sar
xchg
adc
scas
mov
add
mov
pop
pop
aam
xchg
inc
addr16
add
mov
sub
xlat
inc
out
adc
xchg
inc
test
lock
jmp
js
add
insb
lret
jbe
in
jno
add
in
fisubrl
fucom
std
or
inc
pop
sbb
mov
aam
push
sub
and
sbb
dec
imul
call
pop
pop
imulb
repz
dec
out
jae
faddl
jbe
dec
cmp
lea
xor
sbb
pop
jecxz
inc
xor
dec
jo
jne
out
jno
rorl
and
mov
sub
mov
negb
mov
inc
sbb
leave
dec
and
adcl
orl
mov
imul
fdivrl
je
adc
and
bound
adc
pop
insb
and
outsl
jne
jae
jbe
outsb
adc
pop
insb
sbb
sub
or
xor
dec
test
inc
popa
scas
popw
es
and
ffreep
mov
mov
sar
add
das
cmpl
pop
sub
push
imul
pop
lods
mov
push
xor
cmp
insl
adc
dec
or
adc
or
adc
sbb
add
add
nop
dec
xor
pop
or
pop
cmp
shll
mov
data16
add
call
rcl
lock
inc
test
into
call
cmc
fsubrs
std
dec
mov
fucomip
insl
push
adc
xor
insb
aad
cmp
sbb
push
sub
filds
or
dec
and
push
ret
and
push
jne
sub
mov
mov
cs
icebp
lods
dec
or
jo
xor
cmp
pop
popa
mov
and
add
rcl
sub
inc
jl
nop
jmp
and
pop
movl
es
pop
nop
imul
iret
and
loope
lods
pop
pop
popa
out
dec
notb
fstpt
push
pusha
aam
nop
pop
jecxz
add
sar
or
adc
arpl
push
mov
es
ret
push
mov
rorl
movsl
sub
push
testb
stos
add
adc
jle
lahf
xchg
xor
loopne
jns
adc
shlb
in
outsl
das
pushf
and
pop
jb
outsl
adc
and
cltd
rolb
es
out
daa
std
test
xor
or
sub
pop
mov
aaa
and
push
add
mov
add
add
popf
pop
push
add
jl
dec
and
mov
test
test
sarb
mov
mov
or
mov
cli
pop
movsl
add
mov
mov
cmp
xor
push
lock
xor
je
jmp
sbb
push
loop
xor
mov
jo
sbbb
inc
into
push
repz
mov
test
jp
push
or
jne
sub
add
imul
adcl
pop
in
mov
mov
adcl
loop
mov
in
cmc
sbb
jns
push
push
push
adc
pop
mov
xor
jmp
and
add
sub
das
inc
daa
fcomp
andb
inc
jmp
sbb
xchg
movsb
mov
cwtl
shlb
shlb
hlt
mov
roll
sub
mov
mov
cmp
xchg
fcomi
gs
jbe
xchg
xor
inc
cmp
or
adc
mov
jne
or
imul
cmpsl
push
xor
xchg
push
popf
hlt
cmp
inc
mov
xor
push
sbb
orl
inc
pusha
add
cmp
xchg
cmp
adc
add
in
orl
xorb
adc
subl
dec
shrl
and
aas
sub
pop
out
scas
hlt
insl
fucomip
divl
add
sysret
pop
stos
test
or
adc
or
and
sub
xchg
mov
lock
loopne
pop
mov
les
cmpsb
dec
scas
rolb
mov
pop
add
fs
inc
fidivrl
adc
add
adc
jle
sbb
add
in
pop
mov
das
ljmp
sbb
cmp
and
sbb
ss
xlat
frstor
lcall
xchg
loopne
in
xchg
mov
out
aas
sahf
add
in
shrb
pop
add
and
mov
or
mov
nop
dec
mov
inc
stos
nop
cli
and
jno
add
rol
mov
xor
les
subb
xchg
push
pop
cmp
mov
sbb
sub
aam
push
test
mov
jnp
cmc
or
mov
js
les
mov
call
adc
ja
in
mov
mov
fwait
inc
pop
cmp
call
jno
hlt
fsub
pop
or
cwtl
fidivrs
push
push
pusha
into
xor
xchg
shrl
dec
sbb
adc
push
movsl
cli
loop
popf
pop
adcb
push
jbe
or
add
les
pop
and
mov
mov
push
mov
loope
push
and
ret
leave
je
pop
loopne
or
aaa
shl
cmpsb
jmp
arpl
or
mov
lock
lods
push
mov
xchg
push
adc
xchg
or
popa
or
into
subl
es
cmp
in
lea
dec
xchg
sub
dec
daa
add
sbb
and
movsl
sbbb
push
in
leave
cmc
mov
shlb
and
mov
cmpsl
fildl
ss
mov
lods
cli
mov
ficoml
jne
pop
sub
ss
imul
movsb
into
adc
std
xorb
adcl
leave
and
sbb
imul
movl
outsb
dec
outsb
jnp
test
ja
je
or
loop
jno
or
bound
mov
or
ret
sbb
shr
push
xor
arpl
popl
fsub
in
or
cmp
hlt
aam
sub
jne
fdivs
or
and
iret
les
xchg
sub
imulb
ja
dec
les
iret
adc
jnp
mov
hlt
adc
mov
sbb
pop
rolb
xor
inc
pop
out
sahf
aaa
inc
std
pop
test
or
movsl
mov
dec
dec
dec
inc
outsb
jecxz
or
mov
test
adc
shrl
loopne
fsubl
in
or
jp
cmc
pop
xchg
inc
or
mov
sbb
sbb
or
xchg
fldl
orl
xchg
rolb
rclb
inc
mov
pop
pop
test
movsb
push
insb
pop
rcll
je
popa
fildl
xor
pop
push
fwait
loopne
mov
inc
and
dec
sub
xchg
movsb
adc
sbb
add
incl
dec
test
ss
aas
mov
fwait
daa
inc
mov
xchg
push
sbb
pop
push
mov
inc
inc
mov
adc
xchg
xor
push
out
sti
sbb
mov
or
rorb
sub
adc
dec
push
sbb
pop
add
jecxz
mov
icebp
push
ss
test
xor
push
and
cmp
dec
mov
ret
xor
xor
dec
sub
add
in
dec
roll
fdivs
call
shlb
shlb
mov
inc
jno
les
or
dec
call
mov
push
push
dec
stos
rolb
outsb
xor
mov
push
fs
sbb
dec
subb
push
rol
imul
in
xchg
filds
daa
pop
sbb
adc
cltd
push
je
pop
cwtl
cmp
inc
pop
jmp
dec
sbb
js
test
outsl
sbb
add
nop
add
divl
add
or
xor
rorb
movsb
xchg
pop
dec
xlat
jp
stc
cmpl
aaa
orl
sbb
nop
loopne
pop
into
dec
jns
fidivs
call
or
and
and
stos
inc
pop
lret
mov
pop
call
icebp
sub
add
jp
adc
in
imul
xor
decl
outsl
cwtl
inc
dec
lret
mov
or
shlb
push
mov
sub
dec
add
call
pop
stos
dec
ret
lock
cld
ucomiss
je
loopne
or
and
mov
jne
adc
mov
sbb
test
push
cs
pop
xor
orb
adc
rcll
aas
fwait
les
jne
mov
pandn
lcall
push
shlb
jo
daa
mov
and
or
and
xchg
xchg
push
test
push
shll
mov
test
cwtl
das
inc
in
fs
je
imul
int
pop
mov
and
cmp
es
hlt
mov
mov
daa
lahf
lds
clc
cmp
sub
mov
mov
daa
loope
fiaddl
pop
mov
pop
sub
ret
lods
pop
jmp
sbb
mov
cmp
sbb
fisttps
scas
sbb
in
data16
sbb
jg
adc
ret
xor
mov
or
add
push
hlt
int3
in
les
idivb
shlb
rorl
pop
rcrb
les
lcall
insl
repz
sbb
add
push
cmpsb
jge
mov
sbb
stos
adc
fisubl
call
cmp
data16
je
push
cmp
sub
pop
inc
ja
bound
jb
mov
and
cmp
add
pop
in
add
adc
jae,pn
ficoms
push
dec
out
add
popa
jge
addr16
lret
test
lods
mov
sahf
xchg
sub
adc
sub
icebp
mov
pop
into
mov
mov
push
and
pop
cmpsl
sbb
xor
sbb
das
mov
fbld
push
jg
sub
clc
lea
pop
jne
imul
js
cmp
sub
adc
jp
decb
and
loop
lods
fs
add
sub
pop
mov
pop
icebp
sub
xor
dec
js
aas
jmp
or
lods
dec
mov
fwait
repz
in
sub
sbbb
push
and
les
std
clc
add
jp
adc
inc
mov
or
and
add
fldt
push
fimuls
test
ficomps
mov
push
loopne
push
dec
enter
mov
mov
sub
add
aad
sbb
xor
mov
out
loopne
push
cltd
push
mov
jno
jl
sbb
movsl
movsb
clc
loope
pop
aas
adc
call
sbb
jo
add
imul
xor
jp
out
dec
or
iret
js
jecxz
xor
inc
fs
popa
xchg
out
and
sti
es
mov
ljmp
movsb
aad
rcr
xchg
xchg
addb
add
lahf
addb
or
cmp
fistl
push
shr
jae
xor
pushf
mov
vmaxps
inc
or
jns
orl
and
pop
pop
mov
and
cltd
lods
dec
mov
andl
mov
shlb
mov
into
scas
gs
sub
push
pop
das
test
pushf
push
inc
enter
jmp
in
mov
jmp
xor
mov
or
lock
mov
jmp
pusha
push
sub
cli
fadd
rcrl
nop
jmp
add
mov
mov
xorl
pop
xorl
fbstp
insb
je
xor
sub
add
adcb
rorl
cmp
aaa
cmp
jo
mov
loope
cmc
cld
cwtl
adc
mov
movb
pop
call
imul
je
and
lret
inc
adc
out
adc
push
dec
xchg
loope
mov
cwtl
xchg
push
lea
jmp
xchg
push
and
ret
sub
daa
push
dec
mov
test
push
cmp
pop
dec
andl
pop
icebp
or
enter
add
and
or
mov
fmul
out
fistl
lods
mov
dec
cmp
mov
jg
mov
or
or
lea
adc
push
jl
dec
push
sub
clc
adc
clc
sub
sub
or
mov
push
adc
sarb
add
mov
shrl
insl
and
lods
scas
addl
fadds
inc
inc
cmp
lock
jne
or
out
add
pop
in
mov
sbb
push
ficoml
fcomps
adcb
push
jb
add
mov
xchg
sbb
jne
mov
sbb
test
mulb
ss
push
mov
lret
inc
inc
mov
and
jmp
ret
fcompl
add
adc
std
insl
test
cmp
xor
and
and
cli
fisubrs
test
mov
fsubr
mov
cmc
adc
xchg
arpl
ljmp
aas
int3
or
leave
mov
adc
es
nop
jecxz
stos
and
push
loop
adcl
test
cmpsb
daa
push
xlat
cmp
add
add
add
cwtl
jne
outsb
push
daa
mov
or
mov
ja
xchg
fcom
test
nop
mov
loopne
ret
sahf
mov
daa
cmp
mov
das
aas
adc
js
cmp
adc
xlat
loopne
jp
inc
cmp
lcall
int3
pop
in
test
jbe
sbb
xchg
xor
xchg
std
xor
rorb
leave
mov
testb
ret
mov
jge
and
dec
mov
sarb
mov
add
imul
push
int
inc
aam
inc
lods
jecxz
jecxz
es
int
daa
fs
sub
or
sbb
pop
or
mov
inc
xchg
mov
mov
lahf
in
movsl
subl
inc
add
loope
loop,pt
or
xchg
je
adc
cltd
dec
sub
lock
call
inc
mov
or
mov
ror
xor
push
cmpsl
add
stc
and
rorb
mov
xor
lock
icebp
push
push
sbb
popl
add
add
or
add
lea
nop
cmc
xchg
and
or
push
add
sbb
push
xchg
xchg
dec
ret
jo
mov
mov
or
fstps
push
or
orl
add
mov
pop
daa
js
scas
scas
popf
inc
rclb
pop
cmp
js
mov
jmp
sub
jmp
in
sub
lods
jae
lods
sbb
stc
push
rclb
sbb
cmpsl
sub
xchg
jo
jmp
pusha
movl
jp
and
es
dec
cmp
insl
aaa
sbb
mov
sar
or
mov
xor
mov
push
mov
outsl
mov
lock
xchg
add
test
inc
mov
inc
mov
addb
dec
jno
cs
cmp
mov
imul
sbbl
hlt
jecxz
dec
adc
add
or
xchg
sub
sbb
iret
sbb
or
je
leave
adc
icebp
mov
mov
adc
sbb
jmp
popa
js
xor
push
or
mov
fiadds
aaa
ret
pop
cmp
pcmpgtd
pop
jo
jns
cwtl
sub
add
add
cmpsl
dec
or
int3
sub
push
js
xchg
inc
mov
sub
or
push
sbb
xchg
xchg
test
es
mov
xchg
add
hlt
jae
loopne
adc
mov
imul
jbe
add
push
add
inc
lret
fsubrl
fadds
add
inc
fsubrs
adc
push
or
cmp
push
pop
loope
sbb
out
loopne
xchg
int3
cmp
or
add
pop
dec
inc
inc
dec
push
addb
push
push
bound
repnz
xor
aam
cmp
icebp
add
scas
mov
mov
cs
or
xchg
insl
jg
sbb
mov
sbb
mov
push
je,pt
movsl
push
xchg
xchg
pop
shr
sub
push
and
and
rorb
push
ret
imul
out
push
arpl
rcrl
lods
adc
cmp
mov
pop
sahf
shl
sub
es
add
iret
cmp
lea
and
popa
add
dec
dec
pop
pop
pusha
xorb
push
rcrb
mov
inc
xor
sub
sbbl
xor
out
add
insb
js
or
mov
lods
sub
dec
or
push
rorb
sbb
mov
pushf
pop
jecxz
adc
push
loop
or
sbb
mov
dec
add
or
rcll
xor
add
sub
sub
adc
inc
in
xor
add
sbb
ja
sub
mov
and
mov
push
negb
jnp
je
orl
cmp
xor
push
push
cmp
jne
out
and
adc
dec
xchg
and
push
inc
dec
adc
ds
inc
aad
fdivr
clc
mov
cmc
ret
sbb
cs
push
sbb
mov
scas
loope
ficoml
jecxz
lret
adc
inc
cld
lahf
movsb
and
add
cmp
adc
add
mov
xchg
mov
adc
or
rorb
add
inc
shrl
mov
cmpsl
adc
or
xor
add
mov
push
cmpsb
es
sub
cmpsl
jmp
jnp
xor
jl
fsqrt
mov
les
mov
xchg
and
jbe
pop
xor
adc
cmpsb
test
shr
dec
scas
cwtl
jmp
ja
cmpsl
or
jle
push
sub
aad
cmp
push
rcrb
jg
vmaxsd
mov
jmp
push
add
divl
sbb
lock
fs
or
lcall
imull
pop
add
lahf
insb
mov
pop
or
sub
push
xlat
test
daa
push
inc
adc
xor
imul
icebp
ljmp
or
sbb
inc
aas
faddl
or
push
sarl
mov
out
add
cmp
shlb
xchg
mov
mov
std
lcall
jno
inc
loope
data16
mov
jo
mull
adc
push
pop
inc
data16
sub
nop
ret
dec
dec
jmp
add
loope
mov
xchg
in
test
mov
loop
xor
pop
cltd
std
aaa
xchg
lock
or
jmp
pusha
jne
jo
les
or
jl
add
jns
jg
inc
pop
mov
mov
fsubrl
bt
out
js
or
and
stos
and
jo
inc
jmp
daa
mov
mulb
inc
and
clc
shl
pop
cmp
or
lock
mov
inc
dec
mov
add
lret
pop
cmpsl
in
and
mov
mov
enter
or
xchg
add
rclb
xor
in
rclb
sub
das
cmpsb
adc
push
les
dec
das
dec
inc
lret
pop
fcom
xchg
test
subb
movsb
mov
and
shlb
adc
and
push
dec
inc
lcall
mov
das
xor
rcl
fisubs
orb
es
xchg
mov
add
enter
mov
and
dec
sbb
lock
ja
fstps
dec
cmp
sbbb
and
push
clc
call
insb
push
imul
add
and
test
cli
ja
dec
call
sub
test
xlat
adc
sub
lcall
or
jp
nop
pop
fwait
sbb
scas
cltd
adc
adc
push
sub
and
out
push
loopne
rcl
sbb
add
xor
jnp
inc
call
pop
in
fwait
aam
mov
push
sub
sub
jp
repz
aad
and
mov
je
pop
mov
and
pushf
add
push
or
jne
jnp
pop
mov
loope
pop
jo
les
adc
pop
mov
jno
inc
mov
cmp
push
or
and
or
xor
inc
mov
and
rcll
lock
outsb
add
jg
or
or
arpl
fistl
mov
sbb
xor
sub
xlat
je
sub
roll
jmp
cmp
sub
imul
jo
fdiv
pop
pop
out
mull
or
je
fistpl
fwait
push
movlps
sbb
add
pop
adc
ficoms
jne
inc
imul
inc
add
mov
lods
jno
add
mov
cmpsb
cmpsb
imul
push
pop
mov
andb
mov
in
sbbb
mov
adc
xchg
jo
fwait
daa
and
mov
adc
lahf
and
jo
add
push
gs
arpl
sbb
pop
popa
lods
loop
sub
mov
lock
pushw
int
imul
repnz
cmp
inc
pop
ss
jp
pop
fistpll
rcll
pushf
adc
or
rcrb
push
aam
mov
movsb
sub
and
cmp
adc
xor
push
add
ret
jge
xchg
sub
lahf
sbb
ss
pop
pop
jecxz
xor
cltd
ficoms
mov
dec
push
int
mov
pop
pop
ret
pop
xchg
add
dec
rcrb
test
adc
sar
lret
repz
mov
nop
ljmp
push
fisubrl
jle
shl
shlb
sub
in
pop
dec
flds
sub
adc
fsub
pop
nop
popa
push
add
scas
mov
js
xchg
mov
adc
sbb
dec
shrb
xchg
ret
pcmpgtw
push
pusha
imul
or
je
push
add
imul
fucomip
sub
dec
lods
sbb
test
cmpsl
mov
shll
sbb
stos
fwait
inc
outsl
fisubrl
ja
push
dec
mov
nop
imul
adc
sti
sbb
push
pop
fcomip
jbe
imul
xor
xor
push
mov
or
inc
outsb
inc
cmp
je
test
or
shll
lds
cs
pop
xchg
sbb
pusha
sub
add
rorl
je
rorb
mov
mov
mov
or
imul
adc
lock
mov
mov
push
adcb
mov
les
jo
inc
je
xor
out
push
or
dec
stos
loopne
movb
add
jb
pop
dec
test
mov
mov
subb
loope
sub
addr16
pusha
stos
add
es
and
sbb
sub
inc
fcoml
imul
pop
xchg
add
xlat
mov
dec
fildll
test
sbb
mov
add
xchg
inc
lea
mov
daa
enter
es
xor
bound
mov
fs
aam
add
push
enter
jl
js
loop
out
push
cld
mov
mov
inc
sbb
loop
fdivrs
xor
cmp
sbb
or
std
pusha
and
pop
xor
movl
xchg
mov
loopne
dec
je
dec
push
cmp
xchg
xor
jg
adc
mov
xor
adc
jae
jae
cld
fsts
int3
cs
adc
push
jae
jae
js
xor
dec
fsubs
add
pusha
jae
jae
mov
jecxz
cwtl
test
fdivs
jae
jae
test
xchg
rcl
dec
adc
popa
add
loope
xchg
int
xor
lods
dec
test
cmpsl
jne
ret
int
int
test
gs
and
push
mov
std
ss
imul
or
mov
mov
aas
add
jae
mov
rorb
inc
int3
pop
in
mov
pop
in
inc
ret
shlb
add
mov
sbb
rcrl
jp
sbb
mov
mov
js
mov
adc
fstp
or
scas
and
push
and
loopne
stos
jo
shufps
aad
stc
or
les
imul
int
in
test
sub
or
xor
outsb
mov
testb
jl
adc
les
jbe
dec
scas
and
mov
and
int
int
rorb
lods
stos
jge
out
arpl
fildl
fistpll
test
jmp
inc
mov
stc
insl
outsb
outsb
and
out
jl
int
adcb
insl
fbstp
mov
cltd
into
lret
test
jne
imulb
sbb
fdivrp
inc
js
jg
cmp
xor
ret
aaa
jle
test
push
jb
out
mov
sbb
xor
mov
test
pushf
out
sbb
mov
push
push
add
lahf
cmp
inc
add
sub
aaa
aaa
mov
or
stc
inc
push
push
pop
add
rclb
inc
cwtl
js
push
pusha
loopne
and
fdivl
fmull
int
dec
push
sbb
rorb
and
mov
icebp
push
stos
loope
mov
push
jp
test
adc
lock
cli
jo
sub
inc
roll
stos
fistps
loop
mul
adc
jle
in
cmp
adc
stos
cmpsb
stos
arpl
jnp
mov
mov
xchg
loope
nopl
or
xchg
iret
mov
cmp
push
adc
ret
push
pop
push
loope
cmp
push
cmp
scas
lret
push
mov
repnz
ret
repz
icebp
es
gs
push
add
cmpsl
clc
jecxz
out
cmp
push
push
fldcw
mov
mov
mov
dec
insb
jle
lahf
cwtl
mov
lret
scas
cld
fadds
pop
mov
rorb
loopne
sub
cmp
dec
aaa
jnp
push
rorb
sarb
inc
pop
mov
mov
xor
popa
fs
jmp
nop
pop
pop
or
jae
xchg
movsb
bound
xor
jae
in
cmp
dec
push
fisubl
adcl
pop
xlat
mov
loop
mov
rorl
ja
sbb
cmp
imul
pop
adc
jb
jl
pusha
cmpsl
jle
adc
xchg
dec
in
stos
rcll
add
dec
es
movsb
jb
jnp
lock
mov
movsl
jg
repnz
movsl
jb
vmwrite
dec
sub
sarl
xor
jge
rorl
mov
push
jle
xor
mov
js
inc
sbb
rcr
push
push
nop
cmp
mov
mov
and
inc
mov
sub
jmp
lret
cmpsb
push
leave
out
push
ds
insb
push
add
add
scas
jle
pusha
jno
loopne
fistpl
lods
add
cli
dec
pusha
push
xchg
pop
inc
jl
orb
push
repnz
sub
mov
pop
inc
clc
roll
popf
add
insl
outsb
or
inc
mov
repnz
inc
xchg
pusha
fwait
repnz
js
stc
add
cmp
jle
addr16
mov
xor
push
fs
pop
pshufw
int3
or
lahf
ret
add
cmp
fldl
incl
or
scas
pop
iret
inc
sbb
mov
push
dec
sub
outsb
mov
ja
cmc
int3
mov
push
popf
mov
mov
cmc
jecxz
movsl
xchg
jb
or
jp
sbb
jno
xor
ds
lods
inc
fildll
cmp
pop
mov
jno
ja
enter
lahf
mov
out
cmc
insb
mov
push
mov
or
sub
lret
push
adc
inc
push
scas
add
sbb
or
outsl
pushl
inc
xchg
lret
fstpl
cs
xor
xor
cltd
movsb
jb
cmpxchg
stc
dec
in
jb
mov
push
sahf
push
cs
dec
pusha
nop
or
jo
fcmove
test
out
lahf
adc
inc
je
push
adc
rolb
and
mov
mov
scas
es
mov
mov
jbe
aam
dec
rorb
mov
or
rorb
out
cmovge
fnstcw
stos
cmpsb
or
push
pop
rorb
mov
rorb
push
mov
cmp
daa
cmp
pop
push
or
es
lods
ds
rol
push
jg
dec
sub
js
shlb
push
mov
mov
rclb
rorb
cs
jle
pop
pop
push
push
xor
mov
shlb
sbb
rorb
out
fiadds
xchg
js
test
sub
andb
popf
inc
dec
arpl
sub
jle,pt
pop
add
scas
aam
pop
lahf
cld
scas
jno
repnz
les
and
or
shlb
cli
mov
mov
mov
and
cmp
lods
sarb
jle
call
cmp
cs
setg
outsb
repnz
lods
mov
pop
std
cli
fcmovb
cmp
in
je
shl
jecxz
je
ror
stos
xchg
popf
mov
repz
xchg
or
dec
mov
pop
jno
push
dec
rcrb
jae
ds
pop
push
push
or
or
in
js
xor
sarb
out
inc
xchg
fwait
mov
dec
loop
push
mov
pop
mov
rorb
in
shlb
push
push
push
ss
stos
add
push
icebp
icebp
push
jle
cmp
mov
push
mov
les
sarl
adc
lock
fnstsw
push
sbb
adc
dec
ds
daa
daa
ss
cld
mov
push
cmpsb
add
pop
fisubl
jp
push
jle
rolb
inc
mov
fs
out
jle
mov
dec
mov
rolb
rorb
test
sub
icebp
test
out
or
int
repnz
mov
hlt
sarb
jle
pop
ret
mov
imul
inc
mov
mov
sar
rclb
shr
cmp
inc
inc
pop
mov
arpl
jb
shlb
pop
pushf
rcrb
sarb
ret
mov
inc
sbb
out
mov
cmp
sub
cmp
adc
lock
scas
lahf
dec
imull
push
lahf
call
jle
sarb
icebp
jb
lods
xchg
nop
push
push
out
push
out
call
xor
cmp
adc
inc
push
and
push
cmp
jae
bound
mov
cmp
shlb
out
and
mov
sub
sub
cli
adc
shlb
mov
jle
cmp
mov
fiaddl
jnp
pop
lods
ljmp
fcmovbe
outsb
shrb
lret
cmp
mov
into
inc
or
jmp
and
shlb
xchg
rorb
mov
inc
mov
inc
push
add
jmp
sbb
lds
emms
pusha
movsb
xchg
movsl
mov
inc
sahf
movaps
test
mov
jb
js
sub
cmp
ret
movsb
jmp
push
mov
movsb
jb
jbe
and
imul
stos
sbbl
cmp
or
jb
mov
dec
sub
cmp
out
mov
insb
xlat
xor
mov
push
inc
adc
push
inc
push
push
sub
dec
pop
repnz
pop
repnz
sbb
gs
dec
push
xchg
push
pop
test
xlat
call
rol
push
lock
mov
popf
hlt
into
push
subb
fcoms
push
outsl
stos
inc
push
cmp
das
cmp
push
scas
add
push
lret
lea
mov
jle
sahf
xchg
in
or
dec
cmp
lods
jg
adc
fs
add
pop
xchg
jg
push
push
lahf
shrl
mov
pop
stos
push
push
jg
call
repnz
add
shll
shr
add
test
inc
stos
fwait
pusha
mov
jg
outsb
push
icebp
mov
sarl
mov
or
cmp
call
xchg
loope,pn
dec
adc
sbb
js
push
inc
addr16
je
fsts
mov
ds
addr16
sbb
jecxz
and
iret
adc
rcrb
jle
add
jns
jp
mov
jle
test
out
icebp
dec
addr16
jecxz
jmp
dec
cmp
dec
sbb
mov
sub
movsb
sub
ds
repz
jg
aas
hlt
cmpl
push
mov
jae
rep
or
std
call
xor
pop
loop
mov
sbb
mov
xchg
js
iret
leave
jecxz
ds
loopne
jecxz
arpl
sbb
dec
xchg
iret
and
jge
repz
mov
cmp
lahf
out
mov
int
inc
pusha
dec
outsl
pop
loop
cmp
jle
jnp
iret
out
std
test
repz
mov
ret
cld
jge
dec
loop
cmp
cmp
dec
out
pop
incb
iret
aam
sti
leave
femms
jp
xor
psubsb
xor
ficompl
addl
popa
test
jle
fs
rcll
out
icebp
sahf
incl
jno
cmpsb
sub
pop
pushf
out
das
adc
push
js
stc
cmp
dec
incb
or
adc
daa
jmp
popa
and
dec
in
repnz
lods
mov
popa
repz
shll
fs
imul
cmp
repz
incb
sbb
adc
sub
jno
out
cmp
cmp
iret
out
mov
cmc
fldenv
jns
aad
adc
iret
repz
aas
movsl
call
test
cmp
shrb
iret
notb
out
jl
sub
lahf
dec
cmp
cwtl
cs
cmpsl
mov
out
mov
repz
xchg
decb
or
and
loope
shlb
jl
sbb
pop
sub
xchg
and
cmp
shrl
sahf
inc
andb
outsb
rol
cwtl
scas
mov
inc
xor
xchg
jecxz
rorb
iret
leave
mov
mov
jno
or
mov
or
push
aam
pop
jg
out
jb
pushf
xor
pop
or
xchg
xchg
lret
movsl
mov
jb
mov
and
xchg
lret
push
push
movsb
push
jo
fs
mov
outsl
js
or
dec
outsl
and
bound
imul
clc
int3
mov
js
loopne
jg
add
aad
clc
out
cmp
and
inc
push
mov
cmpl
pop
loop
scas
pusha
out
pop
movsb
xor
stos
xchg
ret
insl
add
scas
dec
call
ss
sub
cmp
outsb
sbb
mov
xchg
outsw
dec
mov
or
es
or
adc
lret
shlb
push
call
xchg
out
xchg
xor
cmp
filds
cmp
test
push
cmp
mov
jl
testl
jle
addr16
movsl
xor
jle
das
sbb
ljmp
jg
cmovg
push
and
dec
test
lock
mov
sti
mov
xchg
jno
add
pop
jle
jp
sbb
mov
sahf
cmp
sbb
jg
inc
call
sbbl
and
cmpb
mov
movsl
scas
clc
scas
jle
pusha
in
lods
repz
loopne
loop
mov
or
and
popa
xchg
jg
xchg
in
jle
push
mov
mov
jp
lahf
push
outsb
rolb
and
mov
sbbb
lea
cmpl
inc
mov
xchg
decb
enter
add
mov
mov
loop
pop
push
dec
adc
mov
mov
cmp
incb
mov
loop
jmp
cmp
lahf
adc
das
push
xchg
clc
xor
xchg
and
mov
cmp
xchg
pop
ret
pop
clc
movsl
aam
pop
sub
popf
repnz
addr16
and
jae
inc
adc
lds
and
jg
mov
divl
cmp
sub
test
mov
mov
jbe
push
bound
mov
cmp
setb
test
nopl
mov
jle
in
ja
lock
mov
cli
imul
fsubr
adc
inc
xor
nop
pop
lods
rol
jecxz
mov
faddl
jo
cmp
cmp
jnp
inc
jle
jo
cwtl
cmp
insb
clc
iret
js
hlt
mov
leave
jo
lds
lock
xorl
jl
roll
iret
sub
sti
jbe
sbb
aaa
jle
jle
rcll
pop
mov
inc
pusha
ljmp
addb
jle
test
mov
out
loopne
jg
mov
mov
pop
in
mov
xchg
sbb
jl
mov
gs
adc
fbstp
add
repnz
hlt
cmc
ljmp
in
repz
dec
dec
dec
adc
incb
pop
push
mov
pushf
jg
cld
fs
outsb
rolb
adc
adc
sub
fdivp
std
lret
xchg
mov
cld
jbe
roll
cmp
jle
push
cmp
push
add
fdivrp
clc
les
mov
mov
aaa
cmpsb
ficomps
test
flds
in
mov
js
ret
mov
pop
adc
test
cmp
shll
sub
cmp
mov
jmp
mov
cmp
shrb
mov
js
and
lock
in
pop
into
addr16
rorl
push
push
shl
ret
icebp
rol
xor
movsb
stc
lods
mov
aad
mov
xor
adc
cmpsl
jg
add
cmp
xchg
xlat
ror
iret
or
popa
pop
xor
sti
push
pop
pop
mov
std
repnz
add
lret
xchg
stos
aad
psubsb
sbb
stos
and
jg
call
movsl
out
xchg
loop
sub
jo
push
mov
and
jg
mov
jns
jle
faddp
adc
aad
mov
jnp
pushf
sbb
sub
and
js
icebp
es
jns
adc
js
sti
mov
push
outsb
popa
mov
out
xlat
dec
scas
sarl
inc
je
push
pop
dec
jecxz
clc
sahf
jo
xchg
mov
mov
pop
push
clc
pop
add
adc
or
int
nop
pusha
mov
js
add
jg
mov
movsb
cmp
ss
test
idivb
mov
push
out
adc
jp
mov
in
jo
fs
pop
adc
fadds
in
jle
ret
incl
push
in
call
aas
outsb
push
and
rorb
aaa
decl
repnz
loop
hlt
jmp
jb
add
mov
movsb
je
call
push
rolb
shrb
add
pop
and
xchg
xor
subl
jle
push
imul
push
jl
push
jle
loopne
lea
rcll
sbb
rorb
add
pop
dec
nop
or
push
loopne
jl
shlb
fistps
xchg
sub
jle
pushl
mov
pop
mov
add
cmp
orb
call
push
shl
pop
push
jo
hlt
ljmp
inc
pop
pusha
jp
addl
bound
dec
pop
mov
fdivrs
int3
sarb
push
xor
testl
fisttpl
mov
inc
fidivrl
jbe
aas
mov
jl
loope
mov
jle
in
mov
loope
pop
aas
cld
cmp
and
xor
jne
popf
sarl
jp
jecxz
or
test
jno
rcrl
push
mov
stos
rorb
or
test
loop
lahf
add
sahf
adc
push
push
cwtl
sarb
jg
adc
scas
sbb
xchg
cmp
in
push
jp
repz
mov
cmp
mov
ljmp
cmp
jmp
dec
mov
jle
call
sub
aam
dec
clc
icebp
mov
push
jmp
sub
mov
ja
mov
and
add
push
jge
addr16
mov
mov
cmpl
push
insl
insb
fstpl
or
clc
cmc
jle
add
stos
aaa
in
sbb
pushf
xlat
fildll
push
mov
cmpsb
aad
sahf
js
jge
jl,pt
xchg
pop
jle
push
or
movsl
es
pop
imulb
rol
pop
ss
fadds
jl
xchg
push
xor
ds
push
xchg
push
stos
xlat
lods
jg
push
loopne
jg
pushf
sub
mov
push
pop
in
call
dec
sbbb
inc
sar
lock
mov
movsb
push
aad
dec
push
jg
incb
dec
jg
pop
ret
push
sar
or
pusha
pop
pop
push
shl
shlb
rolb
int3
mov
test
sarl
call
inc
rclb
sar
js
sbb
pop
test
jle
shlb
addr16
rcrb
jg
rorl
and
shlb
fsts
rorb
add
mov
xchg
mov
mov
je
rcrb
pop
cs
mov
push
mulb
jo
mov
sbb
fwait
dec
pop
lahf
movb
and
push
push
xchg
or
shrb
lock
push
xchg
dec
out
je
xchg
adc
test
popl
mov
inc
popf
push
lahf
mov
fbstp
sub
xchg
lcall
push
xchg
fisubrl
pop
pop
aas
lock
fists
mov
cmp
dec
cmp
push
sbb
jb
js
jle
in
and
mull
insl
pushf
shlb
loopne
int
bnd
inc
xchg
movsb
push
das
push
cld
stc
out
insb
sar
mov
inc
outsb
bound
cs
testb
bound
inc
into
incb
movsl
insb
mov
lds
shlb
pop
jo
xchg
sub
cmp
or
orb
aad
mov
pop
sub
cmpsb
test
call
push
aam
cmpb
loopne
add
into
add
outsb
lcall
test
mov
std
or
jle
cmc
jbe
fmuls
mov
xor
clc
cmp
mov
jge
or
insb
add
pop
in
sahf
insb
add
cld
mov
sahf
mov
shll
mov
cmc
js
fsubl
cmp
sbb
or
add
notb
rorl
pop
lods
les
movsb
dec
xchg
fcompl
dec
jne
jge,pt
push
js
jl
xchg
int
xorb
js
test
xor
pushf
mov
loopne
push
sahf
loop
sub
push
mov
dec
mov
or
cli
stos
lock
icebp
je
mov
test
cs
cmp
je
pop
push
pop
mov
rcrb
adc
xor
sahf
outsl
mov
mov
ljmp
cmp
nop
fs
imulb
mov
lock
adcl
jge,pt
jp
icebp
push
cmp
jle
fiaddl
cmp
std
insb
aam
adc
jp
jecxz
test
lcall
mov
xchg
or
pop
pop
sbb
lock
ljmp
push
out
cltd
loop
ret
pop
out
push
or
ficompl
jle
ljmp
jno
lods
mov
cmp
and
clc
shll
xor
cmp
mov
loop
lods
sub
xorb
mov
jbe
jl
test
sub
lock
sti
insb
lret
dec
mov
sahf
movsl
mov
ds
out
and
mov
jge
js
jmp
pop
adc
scas
push
jmp
out
mov
add
popf
mov
push
xor
mov
mov
aam
cmpsb
js
scas
push
jp
and
jp
into
loop
cli
cli
fnstcw
or
mov
mov
pop
jl
out
lods
push
ss
ds
mov
sub
test
mov
inc
push
jle
test
pop
pop
sahf
test
shll
sbb
dec
jo
pop
fistl
or
or
xchg
push
fcoml
xor
adc
lods
shlb
nop
clc
mov
jp
movsl
test
dec
insl
in
sahf
xor
hlt
lock
cwtl
xchg
int
loope
and
add
js
pop
pop
cmpsb
hlt
inc
bound
vunpckhpd
loopne
mov
or
lahf
jbe
xor
cwtl
sub
loope
cmovg
mov
fidivs
orps
rorl
jp
mov
out
mov
and
repnz
push
mov
dec
push
lds
inc
mov
repnz
aas
ficomps
sub
pusha
test
add
jp,pt
jle
adc
mov
stos
mov
pop
lahf
mov
test
bound
jbe
loope
clc
adc
into
inc
fisubs
dec
call
pop
pop
cli
mov
insb
gs
adc
fisttpl
mov
lods
sub
in
push
pop
pop
divps
lods
loopne
mov
sar
pop
pop
je
xchg
pop
int3
cmpsb
mov
insl
push
pop
or
mov
push
or
push
out
xor
mov
mov
je
or
mov
ds
pop
or
int
insb
add
sti
test
rol
fdivrs
stos
bnd
cmp
cmp
jl
mov
dec
subl
pop
js
ds
add
pushf
xchg
ljmp
pop
cld
outsl
cmp
add
addl
lcall
cwtl
mov
push
loopne
hlt
icebp
mov
clc
pop
dec
lret
popa
movsl
push
loopne
xor
sub
je
jge
or
sbb
push
mov
jl
mov
cmpb
les
mov
xor
fiadds
arpl
ret
cltd
cli
lods
mov
inc
aas
cld
cli
icebp
pop
push
push
and
fs
add
rcrl
jle
out
push
dec
clc
cmp
dec
ret
into
enter
in
cmpsl
jnp
inc
push
cmpsb
push
mov
pop
loope
add
and
xlat
sub
testl
adc
jns
dec
xor
into
add
sub
push
sbb
add
cld
cli
xchg
mov
xchg
aas
notl
notl
test
and
je
loopne
inc
das
outsb
out
sahf
lock
bound
outsb
inc
aaa
js
mov
or
mov
in
jp
sbb
and
push
pop
fwait
jnp
lcall
scas
je
pushl
ljmp
cli
cmc
xchg
lcall
mov
xchg
xor
les
lds
js
cmp
push
lock
dec
mov
dec
jl
push
in
insb
pop
imul
lock
push
pop
test
stc
ljmp
mov
jo
movsb
inc
jg
clc
push
sbb
fisttps
shll
clc
fdivrs
mov
dec
mov
mov
cmpsl
aas
sub
shlb
mov
mov
enter
xor
xor
out
jecxz
scas
ret
into
pop
int3
inc
inc
pandn
mov
pop
fdivr
in
jbe
jo
cmpsb
mov
add
mov
add
dec
sti
or
pop
push
sub
xor
sbb
jge
jle
sbb
ds
mov
aam
imul
or
pop
push
or
scas
mov
out
fisubrs
dec
int3
cmp
pop
fildll
xchg
xor
clc
es
mov
jmp
sbb
pusha
cs
lock
pop
mov
repz
jne
test
xchg
pop
adc
jp
cmp
xlat
test
loop
arpl
or
mov
test
xor
mov
xor
cs
test
scas
pop
fisubrs
jl
movsb
ds
adc
push
jecxz
and
es
adc
push
push
fidivrs
repz
js
psadbw
add
xchg
mov
xchg
lock
pop
test
js
outsl
stos
inc
in
pop
test
push
mov
cli
js
pop
or
nop
je
js
orl
repz
lods
jo
and
pusha
xchg
pop
call
adc
mov
fimuls
dec
add
pop
ret
rolb
bound
getsec
jmp
enter
cli
dec
pop
jl
add
insb
in
out
jge
incb
or
xor
in
fldcw
mov
sahf
and
jl
ds
dec
xor
stos
pop
add
out
js
adc
jmp
mov
jbe
push
inc
out
jle
stos
sub
xchg
ja
mov
repz
loop
adc
sbb
xlat
mov
pop
pop
mov
sbb
clc
dec
mov
add
clc
loopne
cld
shlb
jnp
jo
cltd
data16
xor
pop
sbb
dec
sti
mov
das
loope
dec
insb
pushf
repz
dec
movsl
out
xchg
fidivrl
lock
cmp
fdivs
dec
es
xchg
aam
call
mov
push
inc
xor
mov
add
loop
loopne
imul
jo
jge
push
jnp
dec
pop
inc
push
lea
fimuls
fildll
pop
mov
dec
sahf
insl
mov
scas
inc
xchg
sub
data16
mov
jbe
js
cmp
mov
xor
mov
jle
sub
jb
ss
stos
adc
cmp
or
jl
mov
sbb
xchg
mov
pop
mov
and
lods
idivl
mov
mov
pushl
pop
cmp
jle
xchg
inc
inc
ljmp
lock
inc
xor
out
push
cmc
push
jp
cli
fiadds
dec
jbe
mov
jmp
cmp
ret
in
stos
mov
mov
fisttpll
repnz
cmp
push
inc
cmp
push
mov
das
jge
mov
pop
std
loopne
xchg
push
xor
pop
mov
nop
hlt
sarb
ljmp
ret
or
inc
iret
imul
rorb
std
clc
lock
pop
xor
shrl
push
rcrl
clc
clc
shlb
sbb
cmp
inc
xadd
cmp
add
push
pop
cmp
or
sub
jecxz
testl
add
aas
bound
or
sbb
lock
cli
icebp
and
pop
fcompl
push
pop
add
dec
jnp
jge
cli
out
pop
pusha
sub
dec
lret
inc
subb
push
aaa
lret
into
fcoml
clc
mov
jp
ret
push
xchg
push
add
cmp
mov
es
mov
push
cld
dec
fmul
call
jl
andb
xor
dec
sbb
aas
out
cmpsl
and
pop
mov
je
pop
mov
inc
fidivs
lods
cld
es
int3
pop
clc
jmp
pushf
dec
xor
test
rcrl
inc
cmp
push
clc
pusha
stos
dec
or
sti
dec
jmp
xchg
movsl
push
fisttpll
cmp
lods
decb
js
jmp
sub
cmp
inc
adc
xor
loope
rclb
es
div
mov
aas
inc
lcall
xchg
pop
aas
pop
jl
and
mov
ret
scas
push
cs
dec
cmp
pop
jo
fadds
push
ss
ret
cmp
in
mov
or
cmpsl
rolb
jge
ljmp
clc
loopne
mov
rcr
bound
pop
js
mov
insl
pop
jl
push
in
cld
daa
push
call
sbb
enter
sbb
ss
pop
aam
mov
cltd
jae
ds
lods
aaa
aam
fwait
movb
pop
push
cmp
dec
jns
lock
shrl
shl
shll
je
test
or
insb
mov
pop
sbb
ficompl
fsub
cmpb
pop
xchg
and
xchg
mov
xor
inc
dec
mov
aaa
shlb
fnsave
add
les
mov
mov
sub
sub
and
pushf
dec
cld
push
fs
orb
jp
xchg
bound
jb
mov
insb
cmp
and
lods
xchg
les
je
jae
mov
inc
mov
cmpsl
enter
das
pop
fisttps
das
shlb
jl
sbb
mov
cmp
pop
js
bound
and
jp
add
test
out
push
fsubr
and
jle
jp
xor
out
call
repz
mul
clc
or
push
mov
std
inc
sub
mov
jl
lock
addl
rcpps
xchg
lods
and
pop
loopne
ljmp
les
js
std
addl
fistpll
jle
mov
xor
js
fsubl
add
std
clc
mov
es
int3
outsb
ret
outsb
cmp
or
or
adc
loope
testl
hlt
add
icebp
aad
mulb
sbb
not
dec
push
outsb
fbld
inc
das
cltd
jle
js
int3
repnz
lahf
mov
jp
aas
jl
cld
in
pop
int3
data16
push
and
fiadds
jmp
jle
or
add
addr16
xor
orl
jecxz
xor
out
sbb
repnz
sar
pop
lods
jp
push
subl
jle
jp
imul
test
add
inc
scas
add
ja
je
pop
out
pop
push
jl
mov
lahf
cmp
xor
les
divb
mov
jl
iret
and
arpl
shlb
sub
mov
cli
sub
lods
push
dec
call
jl
mov
int
and
pop
nop
add
add
rcl
inc
clc
clc
loop
pusha
jbe
repnz
pop
sbb
lds
push
js
loop
dec
jecxz
fimull
add
mov
mov
xor
cmp
sbb
xchg
sbb
mov
clc
push
ret
fnsave
push
mov
in
cs
mov
inc
cmpsl
xor
sbb
mov
clc
cli
fsubrl
lock
icebp
or
dec
imul
std
mov
cmp
ror
out
jmp
mov
cmp
xchg
idivl
fmuls
cs
dec
clc
push
jecxz
and
mov
push
xor
pop
cmp
push
stos
rolb
add
nopl
inc
rcrb
push
ja
roll
ds
push
cltd
pop
xadd
les
or
scas
pop
clc
fidivs
sub
push
stos
mov
dec
sahf
mov
nop
js
mov
ljmp
jno
popf
testl
ss
subl
ljmp
insb
icebp
ret
icebp
call
ss
repnz
out
xorl
int
cmp
xor
xor
xchg
mov
and
scas
call
jmp
mov
jp
xrelease
pop
insb
or
pop
mov
inc
out
das
inc
shr
lods
mov
cli
cmp
push
addr16
mov
cmpsl
mov
xchg
add
cmp
xchg
sub
pusha
mov
jle
sarb
movsb
sahf
mov
sbb
scas
jle
cmp
or
xchg
or
rcr
rcrl
xor
insb
or
cs
lock
pop
or
ss
jmp
jg
pop
loop
out
adc
xor
push
sub
jl
nop
mov
movsb
add
sub
dec
ret
and
dec
test
insl
out
dec
mov
adc
lods
imul
mov
cmp
jne
mov
bound
pushf
out
lret
jge
sti
popa
test
sub
hlt
cmp
sub
xchg
mov
jbe
out
stos
out
push
dec
inc
gs
mov
pop
mov
mov
or
push
pop
ret
js
and
scas
xchg
sbb
xor
mov
adc
xor
mov
cli
loope
xlat
mov
xchg
push
or
js
xchg
sbb
ficomps
bound
or
cmp
xchg
lock
into
mov
xor
clc
push
cmp
imul
in
xor
scas
jecxz
jnp
mov
inc
in
scas
pushf
mov
mov
or
jno
shlb
insl
out
mov
sti
mov
cmp
cli
insb
outsb
aas
mov
cwtl
add
sti
cmpl
sahf
es
jg
jp
add
fcoms
lock
sahf
sub
les
cltd
in
cmp
in
add
pop
and
ret
call
div
je
insl
jb
dec
fcom
mov
fmuls
cmp
les
lock
js
add
sub
mov
or
pop
pop
pop
mov
pushf
or
or
xlat
mov
out
mov
jge
call
mov
add
in
js
sar
ds
push
cmp
loopne
loop
repz
mov
cmc
push
mov
jle
xor
lret
insb
xchg
xchg
ds
mov
inc
mov
imul
sub
std
inc
xor
rcll
add
pusha
pop
ds
cli
data16
mov
adc
and
mov
xor
cmp
xor
stos
inc
mov
ret
bound
push
ret
jae
push
aas
lret
pmulhuw
loopne
or
js
jbe
ds
jl
jbe
imul
fldt
rorl
gs
mov
and
pop
mov
scas
ret
push
inc
mov
mov
stos
not
int3
inc
stos
cmp
inc
popa
pop
sub
popf
jle
sbb
sbb
ljmp
aad
popf
add
mov
dec
scas
mov
std
in
push
inc
jl
mov
mov
fadds
bound
les
push
into
pop
xchg
aam
ret
idivl
loop
addb
mov
mov
cmp
ljmp
jo
nop
repnz
popa
pop
push
dec
dec
sub
sub
push
pop
mov
pop
xor
js
xchg
add
jp
push
fistl
orb
push
cmp
fs
push
sub
out
test
aam
sub
push
jp
jge
dec
movsb
push
xor
cmp
clc
imul
push
sbb
std
add
aaa
xor
fadd
adc
cmp
leave
in
in
xlat
inc
mov
js
scas
pop
dec
fmuls
enter
popl
jl
push
jge
or
out
xor
mov
negl
clc
pop
pop
fidivs
cmpsl
sbb
dec
shrl
jnp
sub
movsb
xor
mov
jge
push
jo,pt
cmpb
into
add
stc
rol
pop
shr
add
sbb
in
pop
jg
adc
daa
adc
cmc
loopne
cmpsl
mov
pusha
cli
lock
test
fcompl
xor
ds
pushf
cltd
mov
or
cli
and
cli
mov
loop
pop
cmp
push
push
pop
jno
subl
xchg
sub
loope
ljmp
aaa
cwtl
ficoms
cmc
cli
ds
shlb
jge
adc
xor
es
pop
in
lds
pop
add
xchg
pop
sub
std
clc
loop
mov
ss
sub
cmp
mov
pushf
cmp
orl
mulb
pop
rolb
lds
cmc
dec
pop
lods
add
push
ss
cmpsb
lods
and
ret
sbb
iret
push
hlt
push
rorl
shll
out
push
jl
out
jmp
fiaddl
inc
mov
lret
cmc
sbb
push
shl
lods
pop
repz
add
mov
ret
cmp
inc
mov
sbb
pop
js
sub
cmp
mov
mov
lcall
flds
cmc
jle
pop
cld
test
fsubl
sti
ljmp
rcrb
ss
cwtl
push
push
mov
add
jmp
rol
xchg
xchg
pop
vmaxpd
lret
and
push
cmp
loopne
out
mov
int3
inc
dec
push
loopne
jo
idivl
or
fiadds
adc
mov
enter
aaa
loope
xor
loopne
sbb
fcomp
loopne
mov
rcrl
jecxz
bound
cld
clc
icebp
call
xchg
ds
cmp
or
shll
in
jns
jo
js
fwait
ljmp
mov
icebp
hlt
dec
dec
jbe
mov
xor
into
mov
mov
ds
fisubs
pop
dec
ret
mov
aad
jge
push
jge
push
adc
inc
or
sti
cld
push
xor
mov
push
jae
dec
push
push
cltd
movl
sbb
sbb
std
cmc
mov
data16
or
mul
xchg
aam
in
push
ljmp
and
test
nop
jnp
pop
ret
shrl
test
mov
lock
shr
pusha
ss
and
test
cmpsl
out
shll
jbe
bound
aaa
dec
out
mov
clc
push
loope
imull
addr16
repz
lds
sbb
pop
pop
xchg
xchg
gs
xor
xor
lret
stos
fisttps
mov
sbb
in
sub
push
loope
push
es
lahf
cmp
jo
mov
dec
imul
dec
ljmp
mov
bnd
xor
sub
sbb
loope
sub
rorl
ds
les
cld
mov
mov
rorl
mov
arpl
ds
mov
insl
fcoms
mov
test
mov
pop
data16
sub
sbb
cld
icebp
mov
test
test
ds
repnz
rolb
movswl
sub
fdivrs
stos
add
loop
enter
push
xchg
lds
mov
mov
outsb
mov
in
jle
lock
xor
fwait
push
sbb
das
or
jp
xchg
pop
jl
in
jle
xor
cmpsb
into
pop
mov
ficomps
movd
mov
mov
jecxz
cmp
sbb
sahf
push
mov
pop
and
sub
cmp
je
push
mov
dec
call
inc
or
pop
mov
ret
push
xchg
push
cmc
loop
push
jbe
repz
rclb
jp
mov
add
shlb
std
clc
or
mov
sbb
ljmp
sub
mov
pop
mov
fcoml
and
mov
pop
ds
or
or
dec
sub
cmpsb
test
decb
cmovs
adc
pop
fdivs
aad
sti
cmp
sbb
jbe
pop
int3
roll
outsl
in
and
pop
aaa
in
jp
loopne
rcr
push
js
pop
out
in
cs
insb
mov
xlat
or
jb
stos
dec
scas
dec
sar
in
ds
xchg
test
sub
add
pushf
sarb
or
dec
sbb
mov
cwtl
mov
lahf
cs
jecxz,pt
repnz
jo
pop
aas
mov
outsl
cmp
arpl
mov
jae
enter
sti
loopne
or
sbb
rcr
in
rolb
mov
jle
vmread
sub
stc
mov
fisttpll
sbb
or
jecxz
daa
aas
cmp
xor
mov
roll
lahf
decb
xchg
call
add
and
cmp
or
lock
jge
dec
lahf
inc
sub
iret
dec
cmp
test
mov
rcll
aas
jo,pt
pop
push
xchg
fs
mov
hlt
xlat
sbb
int
sub
mov
jle
add
jmp
ljmp
es
inc
inc
dec
cmp
roll
not
sbb
hlt
lock
cmpsb
jno
xor
scas
inc
cmp
mov
cld
or
mov
andb
sbbl
jp
add
mov
push
lock
cmp
fisubl
orl
push
loop
jmp
pop
insl
mov
loopne
testb
sbbl
mov
js
lock
insb
xchg
shrl
sbb
mov
xor
cli
imul
xor
fwait
das
mov
call
mov
pop
cs
popa
xor
bound
pushf
repz
sbb
mov
lods
call
shll
inc
mov
sti
call
call
jbe
in
clc
inc
mov
sub
inc
in
push
je
push
ja
sub
adc
add
sahf
fisttpl
stos
out
inc
test
xchg
xchg
xor
cmc
jmp
sbb
jno
shll
cmp
jae
xchg
addr16
inc
clc
loopne
adc
add
cs
pop
into
adc
shrb
cwtl
mov
dec
jl
push
pop
jecxz
sahf
push
inc
xchg
xor
std
int3
in
fsubp
mov
xchg
jo
pop
iret
mov
sub
out
cmpl
cmp
fdivl
push
cmp
and
mov
jmp
in
shrb
aam
es
pop
pop
sbb
bound
sub
mov
push
push
lcall
cmp
clc
sahf
mov
push
adc
xor
cmp
or
dec
add
cmpsb
xor
inc
xchg
mov
jo
xchg
out
add
jge
loop
scas
ds
mov
xchg
mov
mov
dec
scas
xlat
dec
loop
mov
dec
lock
loope
mov
mov
ficomps
adc
test
or
jle
rcll
inc
mov
push
and
pop
and
jge
sbb
inc
subb
cmp
in
or
mov
and
cmp
scas
out
aad
les
fldl
rcrb
push
hlt
jecxz
mull
pushf
popa
add
jb
pushf
pop
fwait
je
cwtl
xor
faddl
nop
clc
lock
or
fcompl
testb
repnz
or
cmp
repz
aad
xchg
fnstenv
push
stc
clc
popa
cmpsb
xchg
lods
insb
pop
lock
sar
ret
xor
pop
mov
sbb
jl
jnp
loopne
pop
sbb
out
cld
mov
clc
movsb
jbe
sbb
jb
std
ds
loop
pop
fsubrl
pop
in
ljmp
sub
sti
lock
sbb
rorb
push
push
jno,pt
adc
cmp
mov
or
test
outsb
int3
insl
lock
cmpsb
movsl
xchg
push
hlt
js
cmp
filds
mov
adc
pop
add
aad
mov
sbb
stos
lock
push
jbe
mov
aad
adc
test
imul
adc
xchg
lods
jbe
clc
push
pop
cld
ss
stc
push
imul
addr16
movsb
and
loopne
scas
pop
push
push
cmpsb
mov
add
cmc
push
subl
fucomp
mov
outsb
adc
sbb
fbstp
enter
les
push
fs
xchg
orl
pop
test
mov
stc
scas
lcall
dec
pop
ljmp
leave
pop
movsb
stos
pop
push
xchg
ds
jl
add
jo
jb
mov
pop
std
cli
cmc
cmp
pop
mov
mov
and
test
loope
jl
push
sbb
pusha
sbb
rcrl
in
cmp
out
mov
stos
add
je
rorb
push
lea
jle
jge
ljmp
push
and
mov
pushf
push
sbb
orl
mov
mov
pusha
adc
stc
add
sbb
cmp
out
iret
add
xchg
out
bound
ss
cmp
push
dec
ret
cltd
xchg
js
loopne
inc
cmp
ret
mov
imul
clc
lds
ds
test
cmp
lods
or
xchg
addr16
mov
fucompp
shrl
clc
cmp
mov
idiv
test
shrb
pop
push
test
adc
sub
cmp
push
mov
es
jl,pt
out
sub
in
iret
nop
push
jmp
jo
je
and
fdivrs
pop
sbb
lds
mov
out
inc
or
out
mov
das
lock
fisttpl
pushf
int
cwtl
test
js
mov
push
jmp
push
pop
lret
jp,pt
mov
call
notl
sbb
add
je
jbe
rcl
and
fimull
lahf
ficomps
and
rcrl
xchg
es
mov
mov
insb
test
jbe
mov
mov
xchg
mov
ret
mov
lock
insb
and
rolb
into
out
les
pop
cmp
bound
inc
int3
repnz
add
pop
or
pop
xchg
mov
xchg
fisubrs
mov
pop
jp
mov
pop
js
pop
jle
je
in
jl
hlt
lock
jnp
dec
push
cli
bound
clc
repnz
mov
jne
push
lds
imul
repz
pop
cld
lock
movsl
adc
sbb
jg
mov
push
mov
int
cs
mov
out
icebp
xchg
clc
mov
mov
add
shrl
aam
xchg
sub
sbbb
loope
xchg
mov
std
test
aaa
ret
insb
adc
scas
iret
jle
lods
mov
jecxz
roll
mov
data16
jle
push
testl
push
cmp
mov
lods
outsb
sahf
and
orl
inc
in
jns
dec
ljmp
jle
pop
dec
or
pop
pop
js
jle
lret
dec
fdivs
add
mov
mov
cmp
pop
js
cli
push
sahf
and
roll
mov
and
rol
xchg
dec
cld
pushf
pop
xchg
cltd
push
add
shrl
sbb
out
sub
cmp
clc
loopne
lods
lods
jbe
sub
outsl
fisubs
fs
jbe
loope
jle
in
dec
or
mov
aaa
dec
xor
pop
aad
sub
xor
jle
inc
call
mov
pushf
dec
cmpb
loope
mov
push
clc
arpl
jge
sbb
testb
js
addl
ljmp
cli
cs
sti
xor
sti
popf
push
cmp
aad
jmp
or
jp
mov
cli
hlt
test
pop
dec
cmp
hlt
out
adc
loopne
les
add
outsl
and
xor
hlt
xchg
mov
cmp
loop
ljmp
in
shlb
add
adc
test
roll
lret
and
fbld
pop
or
add
nop
dec
add
ds
in
dec
stc
xchg
insb
xor
jg
inc
rclb
fsubl
adc
jnp
out
clc
jp
daa
bound
testl
ds
jp
icebp
test
mov
ss
arpl
out
mov
out
push
xchg
cmc
mov
popa
aam
add
pop
aam
js
mov
pop
mov
iret
jp
pop
ds
das
sbb
jp
les
pop
pop
rolb
in
daa
loop
bound
xor
test
pushf
push
xchg
shrb
mov
aaa
and
xlat
mov
test
orb
push
test
add
popf
xor
scas
ds
ds
cmpsb
fadd
mov
rcrl
test
push
orb
cmp
mov
popa
jl
loopne
mov
hlt
jnp
mov
sub
test
sub
or
adc
call
clc
cmpsl
imul
cmp
jb
shlb
mov
and
or
lods
fsubp
cmp
or
fldl
ret
push
sub
xchg
sarb
pop
push
jp
clc
in
cmp
hlt
repnz
xchg
jbe
les
cmp
cmpsl
push
mov
into
push
xchg
mov
mov
mov
faddl
fsubr
dec
push
test
clc
imul
xor
cmp
add
pop
xchg
fiaddl
in
pshufw
mov
sbb
fcmovb
dec
dec
push
mov
ss
sbb
fldl
cmp
and
clc
icebp
add
pop
jns
adcb
test
clc
icebp
ds
and
pop
push
lcall
lds
faddl
out
mov
mov
jmp
push
aaa
dec
cld
adc
stos
mov
repz
sub
stos
jl
cmpb
mov
mov
in
inc
lret
and
dec
mov
jl
enter
repnz
mov
pop
dec
mov
out
dec
pop
pop
ds
lods
in
jge
xor
lock
sti
and
dec
daa
pop
push
loop
ja
jl
mov
xchg
inc
mov
jp
icebp
loop
rol
je
push
mov
or
add
stc
jg
cwtl
int3
addr16
jae
lods
sub
add
pop
add
mov
subb
ret
sub
fmuls
enter
shr
sti
icebp
lret
add
loopne
out
jle
push
ds
cmc
sub
or
and
fisubrs
scas
cmp
mov
js
sahf
js,pt
ds
inc
mov
push
push
mov
mov
imul
xchg
das
ds
mov
adc
incb
nop
mov
cmp
push
repz
adc
into
decb
aam
add
pop
inc
orl
push
push
xor
loopne
aas
mov
lock
lods
pop
int3
out
cmp
xor
cmp
push
fcomip
rclb
es
leave
mov
cld
das
loopne
jp
xor
stos
push
loopne
fadds
xchg
dec
popf
dec
jl
push
xchg
sbb
into
dec
je
mov
sub
cmpsl
add
mov
or
mov
pop
inc
mov
add
decb
inc
ljmp
lods
inc
sahf
sub
or
xchg
loope
leave
adc
mov
xchg
es
jle
movsl
and
dec
add
pop
in
rol
loop
push
lock
push
mov
push
mov
inc
sub
clc
icebp
loope
add
cmpsl
push
adc
out
rorl
jne
and
iret
js
fildl
xchg
out
cmp
std
std
jl,pt
mov
and
mov
cmpsl
mov
clc
cld
jle
lods
xor
pop
push
inc
sbb
loop
push
std
push
fdivs
mov
sbb
push
push
mov
sub
out
sti
shll
xor
inc
sbb
ret
out
jo
enter
mov
out
clc
icebp
ljmp
and
jnp
mov
adc
lock
jge
inc
add
call
testb
cli
jle
int
shrb
mov
jmp
push
ret
mov
mov
pop
push
mov
mov
cmp
ret
inc
clc
in
mov
enter
loopne
xor
add
lahf
jp
cmc
dec
mov
mov
insb
cs
fimuls
scas
jns
es
inc
fstps
xor
cmp
mov
sbb
imul
fwait
mov
xor
xchg
sbb
xchg
shll
insl
ret
cwtl
imul
in
or
or
adc
test
ljmp
xor
cld
cmpsb
jle
jle
js
mov
cs
aaa
popf
inc
cli
sbb
out
jl,pt
sti
aam
ret
cmp
jle,pt
mov
iret
lcall
cmpsb
or
lds
jp
les
out
sahf
dec
js
adc
sub
mov
out
rorl
sub
xchg
std
pop
cmp
cmp
cs
scas
xlat
aam
sysenter
inc
push
scas
push
push
xchg
sti
lock
testb
outsb
jp
lock
mov
sbb
sbb
stc
push
jl
cmc
mov
fcomp
out
xchg
mov
add
and
xor
jo
mov
cld
test
xchg
lcall
push
sbb
push
ja
sub
push
xor
mov
sbb
xchg
push
nop
pop
mov
out
movsl
pushl
scas
pop
out
arpl
cs
pop
cmc
mov
or
xor
add
rclb
lcall
mov
sub
jg
shll
adc
into
push
inc
repz
pop
lock
sub
cmpsl
notl
mov
xor
ret
and
ret
mov
cmp
das
lods
mov
imul
mov
sub
lock
test
or
add
js
pusha
xor
inc
cmp
notb
icebp
aam
push
mov
cmp
mov
jp
movsb
push
ljmp
stos
inc
out
cs
jo
mov
jo
repnz
roll
push
popf
xchg
xor
ds
int3
out
dec
std
clc
or
scas
mov
dec
xor
pop
filds
rclb
repnz
sarb
cli
out
rcrb
add
jo
shrl
pfpnacc
xchg
cmp
pop
into
xchg
mov
adc
or
xor
cmp
lret
jbe
or
int
int
aad
imulw
mov
push
or
int
pop
push
sbb
pop
repnz
loopne
sbbl
dec
mov
ja
inc
js
or
cmp
mov
xchg
hlt
aad
imul
rorl
jae
fimull
fst
sbb
pop
xchg
leave
and
jg
jl
cmc
pusha
mov
push
testb
dec
int3
add
ret
cmpsb
mov
jl
jle
push
pop
push
inc
insb
call
mov
jns
ds
test
sub
jle
dec
cmp
div
push
pop
sahf
aaa
cld
mov
xchg
ss
mov
into
inc
inc
adc
or
mov
fildll
rcl
cld
pop
fadds
and
jle,pt
push
clc
inc
test
roll
jl
cs
fnsave
ficompl
jno
sub
add
jge
push
adc
ja
lock
jg
xchg
cld
cmp
popa
fldenv
cmp
jp
pop
cmp
movsb
push
imull
rcr
pop
rolb
jl
clc
jb
jp
sub
jp
cs
ljmp
mov
nop
out
mov
cmp
ficomps
mov
pushf
xchg
lock
mov
pusha
divl
add
out
cmpsl
out
jge
pushf
and
ficompl
add
lret
call
clc
cltd
int3
cmpsl
sbb
imul
xor
cli
push
ret
je
jmp
sub
mov
inc
sbb
fstpt
push
js,pt
mov
and
cmp
jge
shrd
cmpsb
xchg
cs
jl
and
add
jns
jnp
jne
jle
xorl
mov
bound
mov
cmp
shrl
in
movsb
push
pop
lods
inc
shl
into
inc
pop
out
mov
and
mov
daa
fidivs
inc
xchg
clc
and
fisubs
push
mov
rorl
mov
sti
pusha
mov
sbb
dec
xchg
and
push
dec
mov
inc
and
iret
mov
push
fisttps
cmp
mov
sub
fcoms
pop
movsl
hlt
fisubs
test
test
jle
and
loop
cmp
push
push
addl
jb
mov
mov
jno
pop
sub
icebp
loopne
outsb
aas
sbb
mov
insl
es
or
enter
sbb
out
aad
jle
outsb
jge
xchg
cmp
push
sub
jmp
cmp
ficoml
into
sbb
mov
out
inc
call
jp
pop
mov
rorb
push
mov
das
cli
mov
nop
mov
icebp
sbb
pop
inc
push
xor
adc
loope
lahf
jp
fwait
dec
push
mov
aaa
sbb
mov
sub
lock
inc
lcallw
shlb
popw
and
loope
out
data16
sub
or
cli
pop
sbb
sbb
and
bound
cli
jno
loope
mov
pop
popa
xor
push
mov
inc
dec
fstpt
notl
lea
sbb
ljmp
rclb
dec
pusha
je
jle
scas
js
or
jbe
imul
lock
ds
mov
push
fwait
jl
andb
cld
insb
outsb
outsb
or
in
cmp
divb
loopne
fsubrl
mov
outsl
and
fs
test
lret
es
cmp
lods
inc
mov
xor
pop
aas
xchg
mov
add
xchg
mov
fidivrs
mov
jmp
mov
mov
push
jb
hlt
adc
mov
aam
cmc
scas
dec
pop
or
movsb
inc
or
xlat
cmpsl
pop
psrad
mov
xchg
je
xor
xchg
inc
push
dec
mov
xor
adcl
xchg
cs
sub
in
stos
adc
and
das
jl
dec
and
cmp
mov
and
js
decl
inc
inc
xchg
je
cmc
imul
mov
cmpl
pop
into
jbe
outsl
es
test
mov
shlb
call
xchg
xchg
mov
or
xchg
xchg
cmp
icebp
jle
bound
sub
in
fidivs
stc
stc
clc
shl
push
fsts
pop
sub
int
loop
out
xor
cmc
cmc
movsl
sti
test
mov
scas
cs
call
cli
loopne
loopne
xor
cs
lock
cmpsl
pop
pop
or
pop
or
push
cmp
je
add
jo
repnz
clc
fdiv
dec
lods
insb
xchg
push
jo
and
mov
mov
add
push
bound
fdivrl
adc
dec
lods
dec
out
test
in
mov
dec
adc
pop
inc
std
dec
jbe
mov
out
in
inc
dec
lock
aaa
sbb
dec
xchg
rorb
andb
shlb
xchg
inc
out
sti
hlt
cmp
sahf
pop
xor
add
sbb
xor
loope
shll
ret
or
jecxz
sahf
xchg
and
adc
sbb
loope
icebp
fadd
rcll
sti
add
lds
divl
xchg
sbb
mov
cmc
jge
cwtl
call
jl,pt
jl
loop
add
xchg
push
loop
cmp
popa
add
call
leave
push
pushf
push
jge
lcall
lods
cmp
repnz
por
add
xchg
push
shrb
xor
insb
cld
insb
cmp
jl
lock
sarb
push
push
mov
cli
icebp
lds
fidivl
int3
pop
fwait
das
ds
jl
cmp
mov
stos
andb
mov
adcl
mov
push
imul
cmp
xchg
or
ss
repnz
sbbb
xor
mov
mov
pusha
ljmp
call
lcall
loopne
ret
fdivrl
fldl
sbb
sub
js
adc
sahf
and
lret
outsb
std
sub
pop
push
cmp
and
addb
andb
xchg
imul
pusha
iret
testb
cmc
loopne
notl
es
insb
gs
jle
push
inc
test
ds
mov
xchg
push
int3
mul
mov
mov
cli
add
add
inc
xor
jo
leave
out
int3
lret
sbbl
loopne
xchg
mov
mov
aas
cmp
mov
xor
sbb
loop
cmp
imul
push
loopne
dec
adcb
rolb
push
dec
mov
jno
mov
nop
pop
jo
add
fdivrl
dec
mulb
add
test
out
addl
outsb
fwait
jp
or
fists
xchg
je
mov
or
xchg
mov
cmc
sbb
pusha
inc
cmp
jecxz
cli
mov
ds
adc
push
lods
xorb
xlat
mov
or
test
stos
pop
mov
push
inc
inc
into
xchg
mov
sbb
jle
adc
or
pop
out
call
das
addb
test
or
std
jle
jp
std
xchg
or
scas
fidivrl
dec
pop
clc
ds
loopne
inc
mov
repz
ret
int
negl
cmp
test
sub
ret
sti
and
mov
aas
mov
xor
cmp
clc
pop
cs
ret
add
lret
loop
icebp
add
fiadds
add
cmpsl
in
shrl
push
adc
lds
lahf
jle
sti
push
push
mov
dec
mov
cwtl
subb
add
mov
add
cmpsl
out
sbb
divps
pop
push
sahf
add
icebp
fndisi(8087
pop
test
movsb
mov
push
sbb
clc
jle
icebp
sbb
xor
xchg
sahf
xchg
jl
loopne
jl
out
pop
enter
push
ds
into
adc
pop
movsl
lods
sar
lahf
inc
cli
push
lock
adc
xchg
lods
lcall
pop
aas
sub
xchg
fnstsw
xchg
dec
aam
lock
add
or
cmp
lahf
add
insb
bound
cmp
push
cld
ds
loopne
jb
js
xor
aad
sub
lock
mov
mov
jmp
aam
rolb
cld
cmc
pop
fwait
nop
hlt
dec
sbb
adcb
sahf
loop
gs
and
in
ds
mov
jle
mov
fwait
rolb
icebp
jbe
push
loope
leave
pop
add
push
sbb
push
cmp
sub
insb
adc
pop
loope
add
inc
out
and
loopne
adc
and
mov
cld
jge
into
in
rorb
hlt
sub
pop
mov
test
shl
pop
mov
cmp
loopne
ret
pushf
es
cmc
inc
cltd
out
cld
in
add
pop
clc
cmp
xor
lock
rorb
mov
clc
jge
aad
mov
push
jb
or
popf
mov
xor
call
rclb
mov
mov
movsl
lods
jl
leave
movsb
testl
ljmp
push
hlt
push
cli
scas
mov
gs
fwait
pop
add
cmp
jle
icebp
lock
jno
xor
sar
mov
adc
mov
cwtl
sub
jmp
cmp
das
cmp
int3
pop
dec
inc
loopne
pop
add
fidivs
leave
or
sbb
in
mov
movsb
outsb
pop
into
jge
push
cld
cli
mov
mov
cli
mov
testl
jl
fisttps
jbe
inc
mov
mov
add
imul
test
mov
fsubr
outsb
notb
adc
jbe
cwtl
xchg
fs
push
lock
addr16
push
outsb
or
sbb
mov
inc
faddl
or
shl
cmp
adcb
cli
ret
mov
faddp
aad
mov
rorl
sbb
in
jp
mov
pop
mov
lret
xchg
xlat
lds
dec
adc
insb
pop
fdivrs
dec
stc
sub
pop
fmull
lock
iret
inc
inc
cli
push
push
lods
shl
std
into
lret
pushw
fiaddl
mov
mov
cmp
add
jg
pushf
mov
or
rol
popl
mov
inc
std
inc
out
loope
pop
stos
lret
fidivl
loop
mov
mov
jecxz
into
add
cli
jecxz
testl
and
dec
mull
cmp
dec
enter
loopne
fistpll
bound
add
xor
and
dec
popa
push
or
nop
lock
add
dec
add
inc
add
mov
rol
mov
or
pop
scas
fiadds
dec
xchg
inc
sub
lcall
jecxz
jnp
xor
sub
jo
jmp
ss
mov
movsl
icebp
dec
sbb
sbb
xorb
mov
nop
pop
gs
data16
and
clc
pop
bound
ss
cmp
push
add
cmp
cli
scas
pop
mov
xor
jge
je
xchg
xchg
or
jge
sbb
loop
jge
adc
lock
outsb
pushf
in
fisubs
pusha
adc
ret
add
fdivrs
pop
adcl
repnz
and
or
daa
shrb
or
add
clc
jecxz
call
fnstenv
and
mov
psadbw
aam
sbbb
shrb
jnp
push
push
push
sub
jnp
push
xor
js
jmp
cltd
mov
fdivrl
jne
out
or
hlt
jl
test
les
lahf
js
ljmp
push
ret
and
mov
in
mov
xor
sbb
stos
lock
xor
mov
loopne
les
mov
sub
xchg
pusha
and
and
jae
pop
bound
mov
stos
mov
add
shll
out
test
add
xchg
adc
out
push
in
maxps
add
mov
insb
rolb
push
cli
xor
cmp
lahf
rol
pop
scas
pushf
xlat
je
daa
or
dec
mov
mov
outsl
add
ret
pop
jle
pop
pop
cs
cli
rol
ret
jg
lret
pop
pop
pop
ljmp
cwtl
out
popw
ret
inc
les
notb
mov
cwtl
rclb
mov
mov
inc
jle
push
icebp
ds
jo
push
in
jg
push
jae
ret
clc
cli
das
ds
cld
lcall
and
add
xchg
push
mov
hlt
loopne
out
add
dec
inc
jnp
inc
jle
xchg
xchg
and
into
das
jmp
or
xlat
and
test
mov
fdivrl
cmp
fiaddl
push
push
jge
hlt
jmp
insl
fcoml
lret
lock
leave
and
popa
jmp
out
andl
ds
cmp
sub
in
mov
pop
std
lock
xchg
fs
push
push
daa
push
and
jl
push
pusha
pop
sbb
mov
xchg
mov
into
leave
mov
sbb
and
hlt
dec
push
test
mov
cmp
inc
cmpsl
sbb
jns
mov
mov
xchg
outsb
inc
js
cld
icebp
sbb
xor
insl
jb
mov
mov
mov
fdivr
xchg
add
fs
lret
gs
jle
xor
js
ficoms
enter
cwtl
fadds
dec
sbb
jne
iret
add
mov
rorb
cmpb
push
loop
xor
sbb
cld
call
popa
je
mov
imul
inc
daa
add
adc
cld
jne
enter
cwtl
repnz
xor
movsl
push
mov
add
or
into
push
pop
mov
xor
clc
ljmp
test
push
mov
rclb
mov
jae
ret
jmp
clts
and
or
jno
fwait
pop
cmp
mov
adc
lret
and
out
or
sbb
inc
subb
mov
mov
fcomip
into
sbb
aam
push
and
ret
pop
dec
arpl
sub
pop
daa
jmp
out
out
adc
outsb
pop
dec
call
mov
addb
js
xor
or
xor
rclb
fiadds
dec
cld
cli
out
das
push
fiaddl
jne
test
mov
out
pop
xor
clc
add
xor
pop
push
push
cmp
mov
push
clc
sub
ret
adcl
repnz
pop
push
xchg
stos
push
arpl
addr16
bound
mov
and
loopne
mov
jmp
sbb
js
pop
or
push
jo
sbb
jp
pop
xlat
test
sub
js
hlt
rep
mov
mov
xchg
sub
jo
out
out
lret
adc
or
sti
dec
xchg
xchg
out
out
lods
jae
or
and
aaa
sarl
jmp
or
push
mov
dec
mov
mov
jnp
adc
fs
mov
jnp
lock
repz
and
mov
out
mov
xchg
lret
iret
mov
push
push
jle
jno
enter
mulb
jle
daa
lahf
mov
xchg
scas
jmp
sbb
lcall
dec
cmp
insb
dec
or
lcall
sti
jmp
cmpsb
xchg
sub
clc
rolb
xchg
push
xor
mov
loopne
roll
push
cmc
loope
inc
pop
cmp
lds
in
sub
jge
lock
pop
das
fidivs
push
mov
lds
mov
push
test
mov
xor
lea
loop
lahf
jl,pt
es
mov
sub
mov
xchg
push
adc
or
bound
add
push
scas
mov
xor
or
cmp
cmp
inc
jb
pop
jnp
sub
aam
clc
push
mov
jle
js
repnz
push
sub
xchg
lcall
call
ret
fimull
pop
loop
in
jae
cli
in
push
jp
rcrl
mov
imul
loopne
out
lahf
stos
pop
push
leave
cwtl
les
pop
inc
cmc
ljmp
push
lock
mov
pusha
aaa
cwtl
mov
pop
inc
jo
popf
xchg
cmp
arpl
ljmp
add
add
shl
mov
aam
aam
push
cmp
je
xor
fdivl
dec
mov
loop
mov
inc
nopl
inc
sub
in
lock
ficoms
aas
adc
inc
outsl
sahf
xchg
lock
mov
je
inc
ret
scas
rorb
call
adc
lahf
push
in
in
lods
mov
mov
xchg
out
cmp
pandn
lds
stos
pop
cmp
push
dec
mov
daa
daa
je
mov
clc
lock
or
jle
or
dec
jl
pushw
mov
sub
mov
mov
pop
or
sub
shlb
pop
mov
dec
or
pop
int3
mov
test
push
movsb
ss
push
push
or
push
ljmp
iret
subb
std
push
add
xor
push
jle
push
std
cmp
dec
dec
imul
add
inc
test
push
mov
dec
mov
inc
mov
data16
and
xchg
cld
adc
jmp
outsb
add
mov
stos
lock
clc
mov
enter
jnp
loope
pop
push
call
dec
in
test
xchg
mov
mov
insb
xor
pop
pop
inc
push
jp
cmp
sbb
xchg
or
or
fsubrs
mov
test
nop
inc
js
mov
pusha
enter
and
data16
ret
push
icebp
push
movsl
les
je
hlt
sbb
pop
popa
test
ret
inc
mov
push
imul
jecxz
lock
in
int3
add
dec
clc
mov
pop
or
push
xor
push
pop
push
pop
faddl
jge
pop
pop
in
cmpsb
sub
repz
sbb
call
push
pop
inc
nop
pop
mov
pop
mov
adc
sbbl
mov
ds
out
rcrl
arpl
xchg
imul
sti
mov
xchg
and
dec
cmpsl
mov
aaa
mov
or
or
or
clc
dec
jp
mov
rcl
pop
push
jle
mov
test
js
jecxz
jecxz
es
xchg
pop
jae
orl
jbe
push
fwait
cmpsl
jecxz
sbb
mov
popa
daa
cli
aas
or
out
aam
and
sahf
mov
arpl
enter
fs
rclb
lods
sbb
hlt
ds
push
aam
aam
mov
setp
in
pop
push
inc
xor
loope
mov
and
xor
jo
jle,pn
cmp
out
xchg
pop
notl
shlb
and
fisubs
bound
js
mov
ljmp
xor
dec
int3
int
mov
lods
pop
aas
in
test
xchg
lock
dec
loope
sbb
cwtl
sbb
push
jl
cmp
push
das
jb
add
cmp
jmp
clc
into
aam
add
imul
xor
sub
push
mov
dec
sub
lret
and
arpl
loop
mov
mov
mov
xchg
cs
mov
pop
dec
sub
cwtl
and
shr
cmpsl
lsl
jmp
and
cmp
cmc
lret
into
in
aad
int
filds
sbb
movsl
push
popf
or
push
cmp
mov
xchg
cli
or
pop
dec
pcmpeqb
movsb
ficoms
cmp
pinsrw
loope
aam
les
mov
test
lock
shlb
adc
jno
faddl
xchg
mov
sbb
pop
push
push
jb,pn
cs
lcall
pop
jge
mov
jle
and
loopne
hlt
push
pop
jbe
scas
lcall
cmc
loopne
ds
movsb
ljmp
std
cmp
and
jns
dec
test
out
lds
shrb
push
or
shlb
push
loopne
je
adc
mov
sbb
ds
and
inc
push
mov
jle
insb
jb
pop
jl
aas
pop
addb
ret
xchg
mov
pusha
mov
or
mov
rolb
jmp
mov
shrb
mov
addb
push
sbb
pushf
mov
lods
mov
int
insl
rolb
push
out
push
in
lods
cmp
repnz
jp
stos
iret
or
dec
ljmp
xchg
loopne
test
sbb
popa
mov
movl
sub
jmp
cmpl
sbb
sub
mov
mov
or
pop
mov
repnz
pop
in
es
cmc
loope
push
cmp
jae
sbb
jge
pop
rcr
out
pusha
clc
dec
jnp
js
cmp
mull
les
xchg
adc
xchg
push
xor
xchg
insb
loop
jo
cs
hlt
jmp
inc
push
shl
dec
xchg
push
mov
inc
enter
mov
orps
inc
pop
mov
dec
sbbb
loop
pusha
insb
cld
aam
add
or
cwtl
imul
lock
jno
cmpsb
mov
xor
les
cmp
lock
inc
jp
pop
push
cwtl
mov
clc
mov
jle
sarl
cmp
loop
sbb
sbb
push
jle
movsl
xchg
stos
cmp
shl
out
jns
and
sbb
push
inc
aad
xchg
ret
sahf
mov
repnz
je
jo
loopne
ret
pop
out
cli
add
shrb
dec
inc
xor
add
aaa
test
mov
push
nopl
xchg
lahf
pop
ja
dec
mov
movsb
push
mov
pop
inc
popa
or
inc
rolb
adc
or
push
loopne
pop
popf
inc
or
mov
push
and
insl
cmp
scas
das
push
add
aas
mov
cmpsl
jle
scas
push
out
out
jne
cs
cmp
pop
push
stos
push
and
pop
movsl
adc
sahf
mov
fisttps
stos
loop
fsub
push
cmp
add
cld
data16
xorb
test
or
out
and
jmp
setle
xorb
ds
pushf
fs
xchg
cmp
xor
push
loop
add
fildl
jl
test
popa
mov
sahf
cmpsb
mov
neg
stos
push
pop
loopne
jle
cs
push
and
inc
jg
push
xchg
push
enter
loopne
rcl
stc
or
and
shlb
cmp
ds
outsb
inc
es
je
adc
loop
ret
push
negb
ss
lret
xchg
inc
outsb
mov
xchg
mov
pop
idivb
fidivs
push
adcl
roll
push
jle
pop
dec
mov
repz
jle
int3
ds
sbb
iret
jbe
cli
mov
or
iret
repz
push
pop
add
cld
cmp
mov
sub
push
jle
dec
divl
push
mov
cmp
mov
fimuls
mov
shrb
pushf
shlb
leave
out
out
mov
into
xorb
jns
sahf
lahf
mov
mov
mov
stc
jo
clc
inc
test
sahf
stc
jns
sahf
dec
mov
test
dec
push
mov
cmp
inc
call
mov
push
jge
bound
mov
sub
pop
push
out
loope
sbb
jle
mov
jnp
jge
lahf
pusha
mov
push
flds
dec
mov
repz
jle
xchg
mov
cmp
iret
jbe
jecxz
scas
adc
iret
repz
push
cmpsl
pop
aam
insl
add
cmpsb
bound
loopne
loopne
bound
cwtl
cwtl
and
data16
call
mov
das
xchg
scas
js
js
adc
pop
jle
or
nop
sub
lods
hlt
cld
adc
int3
fidivs
pop
mov
cmpl
mov
rcr
loop
sub
dec
mov
jle
shlb
fldcw
inc
jle
pop
int3
add
fsub
out
popa
es
xchg
into
ss
orl
insb
int3
je
jno
lods
dec
cmp
les
data16
sarl
ficoml
arpl
mov
push
mov
xchg
lods
loop
jl
lock
add
sub
stos
sahf
and
adc
ds
aas
add
roll
pop
jae
jle
out
cmc
aad
testl
scas
add
pushf
jl
nop
loope
cli
hlt
mov
sub
jl
pushf
fcmovbe
dec
aaa
sbb
cld
popf
ljmp
dec
leave
xor
shlb
gs
inc
daa
ds
push
loop
mov
sahf
pusha
pop
ds
xor
adc
popa
pop
push
add
jle
lock
xchg
pop
into
rcl
fimuls
mov
sbb
popl
sub
mov
jp
or
xlat
inc
sbb
lock
jnp
cmpsb
stc
fcoml
stc
sbbb
push
or
sbb
mov
pop
mov
in
outsb
aam
or
cmp
or
cmp
scas
or
xchg
loop
cmp
or
push
loopne
cmp
std
push
dec
push
cmp
xor
dec
fimull
add
inc
or
mov
add
push
roll
popa
insb
sub
out
jp
movsb
aas
push
and
jbe
rcll
rcrb
cmp
pop
fs
adc
push
shrb
mov
sbb
push
cmp
cmp
lock
mov
pop
cmpsb
icebp
xor
lock
mov
lods
pop
jl,pt
adc
lods
mov
movsb
jle
into
repz
sahf
cmc
stos
add
and
iret
repz
int3
push
pop
loopne
push
imul
inc
add
sbb
imul
bound
rorb
sbb
push
cld
inc
dec
jb
sub
pop
test
bound
pop
bound
out
inc
cmpsb
into
fcoms
js
jbe
sbb
sbb
xor
cld
mov
hlt
dec
mov
pop
aam
cmpsb
xlat
stos
out
ret
call
arpl
les
mov
mov
push
pop
repnz
in
push
inc
pop
not
pop
ror
and
lock
push
dec
stos
fldt
mov
push
fs
push
cs
push
push
jecxz
jge
jl
loopne
mov
movsb
xor
popa
lcall
mov
das
in
mov
inc
mov
test
ficoml
push
sahf
test
pop
pusha
das
cs
shlb
xor
loopne
dec
jp
cmp
xchg
dec
inc
sub
push
clc
jbe
shrb
rcrl
loop
or
enter
add
pop
push
lret
pop
stos
jg
or
jbe
fistl
cltd
xchg
out
xor
lods
mov
sar
lock
lods
cmpsl
cmc
ret
loopne
fisubrl
mov
sbb
or
sub
add
std
das
loope
paddsb
pop
xchg
out
pop
add
loopne
incl
dec
test
push
maxps
test
in
mov
mov
mov
aas
dec
fidivrs
jne
and
or
out
ljmp
les
fimull
adcl
lock
fimull
cli
rol
or
jnp
iret
out
jmp
sbb
into
loop
jns
loopne
es
or
clc
or
outsl
mov
push
jmp
clc
out
xor
cld
xchg
cli
push
cli
and
test
sahf
lock
mov
stos
inc
push
mov
jg
push
sbb
push
sbb
cmp
pop
mov
aas
cmp
fcom
jle
clc
loop
adc
sahf
mov
jae
out
lds
out
mov
fcoml
ret
out
and
in
jnp
test
sub
scas
aas
orb
jo
repz
pop
jl
into
mov
or
jnp
jg
inc
push
ret
lods
jmp
cli
lret
std
dec
mov
aam
hlt
mov
sub
ficompl
mov
insb
push
adcb
mov
pop
pop
and
mov
fiadds
cld
mov
sub
and
stos
sub
sbb
scas
ficoms
sbb
xor
sbb
cmp
xchg
xor
ret
fisubl
jmp
fwait
mov
jnp
lcall
popf
lods
sub
icebp
cmp
jne
shl
mov
adc
ds
or
mov
adc
cmp
mov
sub
mov
jl
sbb
push
fdivrs
fcompl
mov
nop
push
in
mov
pop
aas
pop
cld
lock
lods
shlb
std
inc
jp
sbb
sbb
dec
fisubrl
add
cld
shlb
inc
aam
je
mov
fs
js
out
repz
jp
hlt
icebp
ret
lcall
jecxz
add
lock
adc
scas
loop
test
je
push
or
cmp
push
mov
pop
std
mov
test
or
rclb
outsb
mov
pusha
sub
test
xor
cs
rolb
pop
fisttps
mov
stos
insb
mov
addb
adc
cmpsb
lock
sbb
mov
popf
pop
jbe
cmpsb
push
gs
inc
or
xlat
pop
outsb
adc
insl
cmp
sub
push
mov
or
adc
psubb
out
bound
adc
jp
ds
xchg
loop
test
jle
enter
icebp
push
in
addr16
cmp
dec
out
push
shrl
js
in
addl
pusha
pop
scas
ret
sub
ss
mov
testb
mov
jbe
dec
enter
inc
ljmp
test
mov
aam
pop
nop
push
mulb
iret
cs
and
clc
lock
std
jmp
mov
ja
std
pop
repnz
call
dec
sbb
data16
push
out
push
mov
sub
sbb
jo
xor
xor
xchg
lock
push
rol
adc
jno
xor
lcall
in
pop
push
push
cmp
cmp
call
cld
pop
dec
mov
lock
cmp
adc
push
std
push
cli
mov
repnz
paddusb
in
inc
fsubs
jmp
lock
lock
ret
ficoml
rolb
mov
dec
dec
imul
ds
lcall
clc
or
test
out
mov
mov
adc
rcrb
mov
rolb
in
mov
mov
xor
xor
notl
pop
clc
lock
jge
xor
fisubrl
loop
push
les
test
lock
subb
js
jbe
xor
in
hlt
adc
loop
xor
jg
jmp
adc
cld
mov
in
cli
sbb
sub
pop
adc
outsl
xor
mov
test
std
cli
jp
mov
stos
xchg
adc
dec
fdivrl
jne
ds
and
pop
jge
inc
ljmp
ss
xchg
lock
adc
outsl
xchg
lea
notl
cmp
cmp
dec
add
xchg
jg
js
repnz
push
ljmp
xchg
dec
sub
out
xor
fcompl
adc
mov
xchg
ds
lods
add
sbb
into
cmpsb
outsl
hlt
ficoms
xchg
rorb
mov
inc
aam
test
add
mov
push
jecxz
mul
xor
int3
add
or
sbb
sbb
cltd
jo
pcmpeqd
add
jp
test
mov
lock
das
mov
dec
mov
sub
mov
movl
and
cmp
mov
into
xorb
lds
in
hlt
xchg
cmp
cmp
ds
mull
out
shrb
sbbb
mov
dec
cmp
push
xchg
adc
ljmp
cmp
push
mov
dec
pop
add
adc
lock
xchg
fs
mov
or
pusha
xlat
outsb
push
cmp
sti
fadds
xor
div
and
jno
in
jo
arpl
ljmp
cmp
lods
je
push
xor
repnz
pop
push
cmp
push
popa
sbb
mov
or
fwait
rol
push
sub
cmp
wbinvd
fsub
movsb
enter
pop
cmp
rcl
pop
jmp
adc
mov
js
mov
fdivs
jo
ret
push
lds
adc
or
das
orl
nop
sbb
mov
sub
push
lock
push
sub
cmp
test
sbb
int3
enter
in
inc
pop
in
ret
test
hlt
jge
rorb
mov
mov
cmpsb
add
mov
mov
out
ja
xchg
push
xchg
cmp
xor
rolb
insb
cld
fstpl
or
and
mov
mov
or
in
sub
inc
call
int3
pop
inc
les
repz
sbb
jnp
cwtl
sbb
lock
icebp
jmp
push
xchg
pushaw
cmp
jl
cmp
movd
and
lds
lods
add
fsts
jno
push
xchg
xchg
pop
pop
lahf
pop
pop
jl
scas
sbb
clc
mov
dec
mov
lods
xchg
xchg
jg
scas
jle
jbe
pusha
push
xor
cs
iret
sbb
inc
dec
jle
hlt
arpl
hlt
sub
or
cli
adc
orps
xor
addr16
loope
stos
mov
pusha
mov
cmp
pop
jl
ret
addr16
in
in
movsb
pop
imul
mov
inc
clc
and
inc
loopne
dec
pop
mov
sarl
jmp
push
fimull
loope
ds
dec
addr16
inc
cmp
or
loopne
jo
xor
push
jg
sahf
shrb
xor
jge
roll
jge
loop
daa
fs
fs
aaa
insb
cmp
ret
sub
lret
cmp
cmpsb
rclb
lock
lods
popa
call
inc
jl
mov
test
cmp
js
loope
jg
cli
in
and
sbb
ds
dec
fs
push
jns
jl
stos
dec
push
xchg
cmp
dec
out
add
add
outsl
pop
outsb
pushf
mov
adc
mov
sub
movsw
cmp
add
add
cld
andl
cmp
push
cmp
cmc
rcll
fucomi
clc
cs
pop
int3
das
data16
xor
ds
daa
fs
loop
aam
movswl
xor
mov
inc
jle
pop
mov
ret
scas
add
pusha
movsb
popl
or
jge
insb
mov
xor
enter
xchg
les
mov
xor
xor
mov
insb
mov
mov
and
je
fbld
push
fdivr
mov
pop
fdivrl
pushf
test
and
hlt
les
into
add
pop
clc
lock
jno
fwait
loopne
pop
shlb
cs
mov
insb
les
out
or
dec
mov
inc
subl
lock
in
cmp
dec
push
sbb
loopne,pn
je
pusha
mov
adc
aam
es
je
or
stos
inc
jmp
mov
or
js
ret
in
clc
add
lods
mov
or
push
mov
outsb
mov
adc
adc
cmpsb
lds
out
shll
loope
mov
and
cs
es
cmp
cmpsl
pushf
nop
jge
cmc
xor
pop
mov
adc
pop
into
jo
sub
out
mov
sub
popa
call
je
pop
orl
movsb
or
scas
mov
scas
push
sbb
movsl
pop
xor
fbld
cmp
pop
scas
test
dec
and
movsb
push
pop
and
mov
pop
andb
push
lahf
push
cmp
push
adc
enter
lret
fimull
dec
idiv
push
inc
cmp
test
or
mov
mov
ret
outsb
in
sahf
mov
cwtl
lock
add
xchg
ds
mov
rorb
outsl
add
adc
pop
ret
push
mov
lds
insb
les
and
shl
cwtl
fsts
loopne
fwait
cs
push
or
cli
xchg
outsl
std
mov
aas
les
mov
xchg
hlt
es
jo
adc
shlb
xchg
adc
push
jbe
fistpll
adc
mov
adc
adc
adcl
sub
dec
or
pop
into
lds
push
inc
xchg
jns
xchg
cli
sbb
mov
cld
push
push
xchg
push
dec
inc
mov
xor
adc
push
enter
outsb
lock
mov
push
adc
enter
mov
inc
xor
pop
jne
pop
fcomp
xchg
adc
push
sub
dec
mov
cmp
xchg
dec
sahf
mov
bound
ret
std
js
imul
hlt
mov
cwtl
xor
push
dec
clc
jle
scas
repnz
icebp
lea
dec
repz
pop
mov
xchg
clc
ret
cwtl
int
es
push
fabs
dec
sub
add
fst
dec
pop
push
insb
xor
cmpsb
or
scas
sbb
mov
aad
call
jle
js
xor
cmp
mov
pop
dec
xor
cmc
sbb
pop
add
test
roll
scas
xchg
shrb
or
testl
mov
jmp
dec
add
mov
loop
xchg
scas
inc
lock
test
jbe
adc
dec
loopne
xchg
mov
dec
pop
pcmpeqd
cmpb
jl
xor
out
stc
aaa
into
daa
add
loopne
push
lods
dec
movsb
push
loop
fnsave
mov
add
jb
xor
pop
xor
scas
push
stos
aas
mov
inc
insb
loope
fldt
pusha
in
orl
imul
dec
mov
jl
sahf
lcall
sub
cli
movsb
bt
insb
mov
fmuls
ljmp
in
nop
and
sbb
lock
fdivl
loop
out
sti
dec
mov
jbe
in
dec
out
negl
sahf
das
scas
mov
cmp
jnp
xor
fidivrl
cld
adc
lahf
or
mov
push
lret
and
int
int
cmp
les
sub
arpl
out
test
pop
jge
dec
int3
sub
daa
adc
mov
stos
es
add
out
ljmp
push
std
adc
push
sahf
sbb
roll
rclb
mov
mov
push
mov
aam
lahf
dec
push
add
mov
push
jo
shll
jne
insb
test
cwtl
std
cmp
jmp
push
addb
jbe
ret
jle
js
fdivrs
rcrl
scas
adc
ljmp
pop
cmc
mov
jmp
lret
icebp
jmp
push
cmpsb
fildll
data16
xchg
jl
nop
sahf
sahf
call
ret
je
aas
pusha
iret
test
js
paddsb
ret
or
pop
pop
sbb
push
jnp
xor
int
out
cmpsl
pop
and
push
data16
mov
adc
jmp
pop
inc
es
dec
sub
cltd
in
js
jl
loopne
lret
mul
popa
push
xor
mov
andb
bound
ljmp
ja
push
push
jecxz
cmp
xchg
mov
push
clc
cli
adc
dec
add
mov
add
daa
sub
ret
mov
enter
movsl
out
movsb
repz
mov
addr16
and
js
pop
mov
hlt
push
in
jb
or
jbe
jl
mov
mov
jle
lcall
fs
jnp
push
addr16
test
ror
inc
mov
xor
jle
das
mov
cs
mov
pop
pop
jl
xor
mov
sub
ret
rorl
scas
cmp
xchg
clc
jno
cltd
ss
lock
cmpsl
adc
inc
fisttpll
ds
sar
pop
dec
mov
sahf
aas
xchg
mov
dec
les
push
push
fmuls
insb
and
sub
add
push
xor
cs
add
hlt
pop
loop
mov
cmpsb
out
lahf
loope
test
paddsb
bound
lods
movsl
jl
and
out
aas
push
jge
in
dec
insb
movsb
and
xor
mov
sub
cmp
jl
js
push
fs
stos
aas
jl
or
cmp
push
jecxz
cmc
mov
mov
call
sahf
push
xchg
adc
push
sbb
sbb
clc
mov
cmp
mov
mov
call
adcl
pop
sub
mov
cwtl
out
jge
pop
int3
pop
pushf
cmp
sti
and
push
iret
out
adc
das
icebp
loopne
or
shrl
pop
push
jp
loopne
cmp
stos
inc
mov
data16
mov
xchg
cmp
cmc
push
and
xlat
cli
icebp
js
call
or
pop
ds
aaa
jg
aam
pop
mov
lahf
add
xchg
push
pop
das
sbb
sub
rorb
pop
mov
jge
mov
xor
sbb
dec
jle
mov
mov
cli
icebp
add
pop
mov
pop
mov
adc
lea
mov
push
outsl
fwait
jp
pop
pop
out
pop
mov
jbe
popf
repnz
or
xchg
mov
sub
pop
mov
sbb
hlt
loopne
pop
and
jp
lcall
sahf
pop
inc
pop
lret
or
jmp
js
and
xchg
xor
mov
jmp
hlt
loop
fcoms
inc
enter
filds
sub
inc
jle
add
lods
dec
xor
pop
add
clc
mov
mov
loope
cld
cs
aam
and
add
jns
pop
pop
aam
jp
loopne
inc
jo
in
shrb
icebp
icebp
mov
cmp
inc
shrb
lea
cltd
cmp
inc
xorb
cmp
call
out
mov
dec
mov
lods
stos
aam
xchg
or
es
xchg
std
xorb
mov
lea
pop
push
mov
sub
shrl
in
lods
pushf
cmpsl
xchg
daa
sub
jns
call
sbb
pop
jl
push
fsubrl
orb
add
loop
fldl
jmp
mov
cmp
mov
mov
pop
jl
out
and
xchg
movsl
femms
mov
xlat
jecxz,pt
repnz
mul
sbb
xor
jle
out
push
es
lret
and
cmc
dec
add
or
das
cmp
dec
jl
sub
pusha
jl
pop
clc
mov
xor
imul
sub
stos
cmp
mov
dec
pop
pop
imulb
sbb
lods
stos
add
jl
add
rol
enter
loopne
lahf
sarb
dec
xor
jle
rorb
mov
loope
cmp
ds
sub
incl
mov
lcall
shll
push
scas
lods
negb
inc
ds
rclb
dec
fbstp
sub
pop
lret
sub
pop
xchg
xor
int
push
sub
pop
jl
insb
sbb
out
mov
cmpl
add
out
dec
rorb
fadds
scas
xlat
push
cld
inc
cmpsb
stos
rcrb
fisubs
cwtl
or
fwait
sbbb
mov
add
mov
jb
sub
orps
mov
movsb
jg
fnstcw
jo
ja
sahf
push
jle
dec
insl
mov
fadd
pop
daa
loop
mov
std
jnp
inc
xchg
je
cmp
push
rcrl
cmp
cli
push
addl
fadds
jp
pop
jl
hlt
andl
out
inc
icebp
add
test
outsl
loope
shll
out
mov
push
fdivr
mov
sahf
inc
lds
adc
pop
cld
loopne
inc
test
add
test
sub
mov
sbb
jmp
xchg
adc
mov
ret
dec
add
pop
sbb
out
stos
or
jno
loope
je
ds
js
loopne
sahf
jge
cmp
xor
cmp
pop
mov
loope
cli
pop
repnz
andl
movsl
fildll
sbb
and
mov
pop
pop
scas
add
and
mov
add
ljmp
push
addr16
rolb
sahf
pop
je
sbb
sub
xchg
sub
ret
loope
jo
ja
ds
test
clc
stos
lock
nop
xchg
in
fadds
in
add
iret
cmpsl
adc
stc
push
push
pop
push
lock
dec
mov
or
inc
lock
imul
adc
jp
pop
std
shlb
ret
hlt
imul
js
cmp
hlt
loop
or
xchg
js
int
hlt
push
dec
aas
test
add
mov
out
std
mov
mov
xlat
pop
mov
hlt
jge
add
fwait
sub
mov
jb
sbb
lods
pop
sbb
fxch
cs
inc
pop
scas
into
fadds
adc
fcompl
lods
aaa
cmpb
lock
fldcw
enter
cwtl
cmc
ds
push
fisubl
pushf
lahf
mov
test
mov
lock
inc
xchg
add
cmpsb
clc
adc
imul
push
aam
out
dec
or
insl
js
je
xor
lods
test
lods
dec
sub
jnp
mov
cmp
int
mov
add
ret
sti
jecxz
push
jb
call
jp
test
fdivp
lds
lock
xchg
jecxz
add
push
pop
or
adc
sbb
mov
hlt
loop
add
scas
sub
repz
dec
js
jmp
xchg
pop
insb
jge
orb
movsb
pop
or
sbb
and
cmc
sbb
dec
in
insb
in
fs
pop
dec
clc
lock
mov
les
cld
lock
cmp
in
jl
jo
aaa
call
dec
frstor
inc
cmp
je
inc
mov
lock
mov
scas
fisubl
mov
imul
cmp
popa
mov
mov
pushf
and
cs
fcmovbe
pop
test
nop
lock
je
push
adc
mov
out
push
and
mov
cmpsb
stos
xchg
mov
inc
insb
std
aad
sbb
dec
out
push
xor
cs
inc
mov
lock
iret
inc
add
add
in
packsswb
into
mov
mov
outsb
mov
mov
lods
cmpsb
fdiv
jge
add
popl
push
inc
fdivrl
sbb
jl
lods
mov
fbld
pop
pop
ss
jno
mov
rcrl
mov
mov
and
pop
and
sbb
movb
adc
xor
and
xor
and
jge,pt
and
mov
lds
add
andb
inc
clc
sub
rolb
lock
mov
mov
adc
pop
jge
cmp
gs
push
movsl
mov
insl
ret
mov
sub
pop
flds
rolb
push
in
sbb
pop
cli
jmp
push
data16
and
dec
jl
pop
sbb
or
ds
dec
xor
adc
loopne
test
aaa
test
xchg
hlt
js
ds
xchg
xor
dec
xor
in
sub
das
jne
bound
dec
sub
xchg
push
bound
scas
xlat
shlb
mov
or
andb
rorl
cmp
add
dec
repz
pop
push
loopne
jnp
fisttpll
sub
and
jnp
xor
and
insl
call
mov
shrb
mov
inc
pop
push
lea
loopne
jge
repnz
adc
jecxz
icebp
ds
mov
push
jbe
mov
lds
push
mov
dec
in
sti
lock
test
xor
jmp
int
int
adc
lea
pusha
sbb
int
int
xchg
sub
mov
jl
push
mov
dec
int3
push
dec
cld
clc
add
lahf
or
sti
je
loop
lods
shlb
in
hlt
and
lds
pop
xchg
jne
inc
jp
xor
ret
mov
cwtl
movsb
cmpsb
insb
push
dec
leave
jg
ret
xorb
pop
scas
imul
push
iret
inc
mov
pop
mov
pushf
mov
rorb
cmpb
sar
xlat
mov
jb
in
mov
in
push
sbb
rclb
sbbb
push
push
rolb
in
shr
jnp
xchg
mov
sub
loopne
or
cwtl
pop
mov
shlb
mov
inc
icebp
fimull
sahf
insb
rolb
cmpl
in
aad
test
insl
rcl
pop
adc
mov
les
push
fs
jnp
and
outsl
mov
xchg
sbb
jae
aas
or
aaa
cld
mov
loope
pop
dec
mov
jl
fs
in
cmp
sub
leave
fdivr
daa
inc
push
leave
roll
inc
cli
inc
sub
xchg
xchg
sbb
lock
loopne
rcr
mov
lods
mov
scas
and
orl
movsb
loop
mov
push
subl
ja
mov
in
cmp
adc
aas
lcall
inc
xchg
in
loop
movsl
sarl
out
std
mov
shll
inc
push
push
xchg
or
jecxz
fsubp
cmp
pop
add
rcrl
fldl
push
filds
adcb
mov
xor
loope
add
and
push
call
xchg
das
out
sbb
std
mov
sahf
inc
in
aaa
sbb
call
jns
lcall
js
insb
cld
and
xchg
or
adc
dec
dec
lds
nop
pop
add
fnstcw
xor
mov
xchg
pop
add
jge
push
loopne
push
push
popw
pop
mov
and
out
fidivs
sbb
sti
mov
inc
and
es
fidivrl
cwtl
in
sti
jmp
lcall
rcll
rcr
not
aad
jo
repnz
inc
inc
lret
xchg
pop
jle
jp
inc
xchg
cs
jp
shlb
daa
movsl
hlt
mov
orl
cltd
inc
insb
sbb
mov
xorb
and
pop
gs
add
pop
ss
xchg
dec
fidivl
mov
aam
mov
clc
jb
xor
push
cmp
lock
addr16
cmpsb
dec
loopne
call
sub
xchg
sub
loopne
and
mov
cmp
push
pusha
xchg
pushl
cmp
and
mov
adc
ficoml
mov
mov
ss
outsl
push
arpl
push
pop
pop
out
pusha
pusha
or
pop
dec
xchg
enter
inc
cmp
movb
pop
add
pop
loop
sub
jl
imul
iret
call
sbb
or
mov
mov
sub
aad
ret
pop
stos
je
mov
dec
inc
jle
hlt
out
ljmp
xor
movd
mov
or
and
cmp
fidivrs
mov
sti
jnp
jle
cmc
clc
lea
or
inc
lret
jno
cmp
cmp
clc
clc
gs
jmp
std
xor
outsl
xchg
pop
and
jle
pinsrw
test
rcl
sbbl
cltd
mov
cmp
filds
xchg
in
outsb
xchg
cmpsb
push
xchg
sbb
lea
jp
push
mov
lret
bound
or
movb
sbb
cwtl
push
clc
jmp
cmova
test
sahf
jmp
mov
shl
bound
lds
mov
mov
xchg
push
out
pop
cmp
xor
mov
mov
cmp
dec
push
test
pop
mov
pop
stc
cli
jecxz
cmpb
hlt
fiadds
iret
add
push
xor
fstpt
es
xchg
and
or
rorl
jp
sbb
mov
jge
and
mov
xlat
aad
cmp
inc
jae
test
lock
mov
cmc
addl
push
sbb
fsubrs
push
int3
adc
cli
imul
jbe
aas
test
inc
jb
mov
rolb
loop
shlb
outsl
adc
cmp
xor
lahf
call
mov
sbb
push
cmp
pop
lahf
subl
std
test
mov
push
insb
outsb
das
inc
push
mov
insb
jo
and
cmpsb
jecxz
test
ljmp
enter
sub
dec
inc
loop
sbb
push
sub
loopne
js
add
cmc
jmp
push
movsb
scas
scas
inc
lods
push
cmc
adc
push
clc
mov
jl
scas
emms
call
dec
outsb
xchg
xchg
ror
and
jb
inc
inc
out
loopne
sti
loopne
fsubr
jmp
in
pusha
jecxz
aad
call
sarl
or
lock
in
xor
push
add
fcmove
xchg
mov
imul
lds
mov
dec
fcoml
push
inc
xchg
imul
cs
jecxz
xor
sbbb
sub
popa
ret
fbstp
sbb
mov
repnz
jmp
shrb
lret
and
push
mov
rcl
aam
cmpsl
fstpl
jle
add
imul
jmp
out
mov
hlt
ret
pop
cmc
jl
movb
bound
cmp
add
jne
stos
adcb
pop
add
js
sub
adc
es
push
push
add
cmpsl
outsb
call
sbb
jle
cmpsb
enter
loop
xchg
std
lods
sbbb
cld
andl
add
fstps
cld
cwtl
test
out
xlat
stc
jl
pop
aas
xor
jo
sub
fstpl
fisttps
xor
jg
mov
xchg
lods
xor
bound
daa
jl
aam
sub
jle
ret
scas
push
add
cmpsb
fisubs
pusha
jno
ds
arpl
icebp
dec
cmp
clc
int3
dec
mov
or
sub
mov
mov
adc
pop
cli
jle,pn
add
bound
out
xchg
push
out
mov
cmp
jp
jl
fs
pop
test
sbb
imul
sub
cwtl
ljmp
cs
cmp
std
add
rolb
pop
add
xchg
outsl
pop
mov
adc
stos
notb
pop
adc
enter
mov
xor
mov
sahf
jb
cmc
insb
loopne
popa
push
jl
insb
pop
inc
mov
imul
test
push
jmp
fwait
sbb
mov
stos
aas
mov
ljmp
pop
push
jle
daa
loopne
mov
pop
sbb
rclb
xor
fdivrs
lcall
ja
pop
push
fwait
and
cmp
aam
addl
xor
mov
sub
jle
cli
bound
pop
mov
and
adc
and
adc
push
mov
mov
sbb
dec
cmpsl
push
popa
daa
xchg
mov
add
sub
pop
sbb
pop
pop
jl
cld
adc
iret
cmp
in
inc
sbbb
jmp
scas
push
aas
or
lock
adc
mov
lock
or
inc
repnz
lods
sarl
mov
clc
inc
or
aam
test
les
enter
jo
pusha
push
cmp
aas
shr
jp
or
push
ds
enter
and
push
adc
sub
test
mov
ljmp
push
test
cli
dec
pop
dec
das
ss
imul
add
aas
add
js
les
or
std
fisubl
loop
fisubl
sub
inc
jno
call
add
mov
ret
push
dec
ds
jbe
das
test
and
add
dec
jge
inc
cmp
fidivrl
inc
rol
cmp
imul
jae
jl,pt
adc
daa
mov
mov
mov
jo
rol
gs
sub
jge
je
mov
xchg
rclb
lret
mov
into
enter
mov
out
jge
sub
popf
arpl
js
lods
enter
addr16
arpl
and
pop
bound
jle
pop
adc
or
cmp
add
in
jl
shrl
mov
mov
js
adc
push
cmc
xlat
mov
insb
and
mov
mull
inc
and
cli
std
mov
mov
shll
cmp
lods
mov
stc
sarb
inc
pop
lea
jbe
push
ljmp
add
pop
push
mov
adc
hlt
cmc
sub
push
jle
push
dec
loopne
mulb
mov
add
pop
cld
icebp
jecxz
mov
inc
shlb
mulb
js
scas
jle
ds
in
cmp
test
das
loopne
cmp
xor
pop
rolb
or
mov
adc
in
jbe
imul
jp
icebp
daa
rorl
jo
sub
rorb
stos
mov
sub
loope
divb
loop
xchg
popf
pop
negl
ret
out
roll
or
inc
in
xchg
push
ds
ret
cmp
add
js
call
mov
loopne
nop
fisttps
aas
and
bound
rcl
inc
cmpsb
movl
cmpsb
hlt
pop
jl
push
inc
xchg
dec
orl
push
pop
push
mov
push
lahf
in
mov
dec
fdivs
fstl
ds
les
xor
mov
sub
xchg
lret
lret
mov
dec
adc
popa
aam
pop
testl
inc
jg
shl
insl
pop
mov
shlb
pop
push
sub
sbb
mov
push
aaa
loopne
mov
in
js
push
mov
ds
out
jae
outsb
mov
roll
loope
mov
jb,pt
aam
xor
mov
xor
cwtl
xchg
ds
cmp
mov
mov
mov
imul
jp
dec
in
jmp
scas
bound
push
mov
loope
xchg
ret
sar
ret
ret
lock
and
adc
cs
mov
call
lock
cmpsl
xchg
sti
sbb
adc
pop
push
jno
cmc
push
sub
sub
mov
scas
lcall
mov
clc
jge
imul
scas
mov
lahf
push
in
pop
insl
mov
or
cltd
sbb
xor
pop
fisubs
nop
mov
xor
test
ffreep
rorb
shll
sub
bound
dec
sarb
aas
cmp
cli
ljmp
mov
daa
loope
orps
js
shr
lret
sub
ror
addl
xchg
ljmp
ja
rol
push
cmc
fdivrl
movsl
dec
pop
cmp
jb
mov
rclb
js
lock
aam
sti
cmc
pusha
push
jl
out
sub
adc
js
movsb
ret
inc
bound
mov
add
mov
jnp
dec
in
mov
adc
jge
dec
daa
jbe
int3
dec
adc
sbb
jno
decb
dec
jecxz
dec
xchg
leave
dec
loopne
pop
lret
add
movsl
push
pop
mov
add
loopne
subl
add
pop
pop
mov
rorb
cli
jmp
cwtl
inc
imul
cwtl
cmpsb
pop
test
call
adc
add
hlt
and
lret
inc
pusha
adc
ljmp
sub
push
push
mov
out
xor
orl
add
loope
push
push
push
fidivrl
jmp
cmpl
sbbb
and
sbb
cwtl
enter
push
cli
lock
inc
sub
adc
jnp
in
ljmp
and
loop
jp
push
sbb
dec
inc
xor
jge
mov
cmpsl
and
lds
popa
mov
pusha
clc
xor
pxor
outsl
dec
cmpsb
sbb
pusha
cli
sbb
out
lcall
xchg
jl
out
lds
jle
fistl
mov
addr16
in
add
fmuls
rcrb
je
in
in
inc
pop
les
out
lods
inc
xchg
pminub
roll
sbb
pop
pop
mov
sub
mov
or
push
pop
ret
out
out
or
add
sbb
insl
ret
pop
stc
inc
xor
lock
or
mov
cld
in
dec
mull
scas
mov
out
mov
push
fsubrs
arpl
mov
sarb
jecxz
sub
push
mov
rolb
and
sub
mov
iret
ljmp
add
sub
mov
xor
jecxz
cli
pusha
clc
mov
icebp
xchg
sar
xchg
cmp
icebp
les
mov
jbe
mov
mov
pop
mov
rcr
mov
fsubs
add
out
sub
cmp
mov
out
pop
call
psubsb
or
movsb
sti
bound
cmp
dec
ret
orl
add
lds
icebp
xchg
sbb
arpl
clc
jo
jl
jnp
out
or
dec
cmp
mov
scas
xorb
les
loope
xchg
rclb
loopne
negl
or
mov
xchg
mov
cld
icebp
rol
or
sub
mov
je
mov
scas
div
jl
mov
cmp
jg
xor
push
pop
dec
mov
cld
add
dec
pop
add
fdivr
add
or
adc
sub
sahf
fisubrs
addb
xchg
sub
std
bound
ss
xchg
mov
popa
add
in
rorb
subb
hlt
call
cltd
mov
call
test
push
add
cld
test
cmp
dec
pusha
scas
xchg
movsb
addr16
cmpsb
mov
lds
out
lds
push
mov
or
xor
dec
mov
cmp
jae
inc
jl
pop
out
push
mov
adc
mov
call
ficoml
inc
std
nop
mov
into
pop
out
js
pusha
faddl
lret
xchg
cmp
jle
hlt
loope
inc
hlt
popf
addr16
test
sub
fwait
cwtl
je
cs
push
pusha
inc
pop
std
js
mov
and
jb
insl
pop
ljmp
cwtl
call
xchg
inc
sarl
sbb
shrl
fs
push
stos
std
cli
and
inc
adc
mov
sub
icebp
pushf
or
cld
lock
pop
je
sbb
lea
jl
inc
out
es
addl
sarb
ret
mov
scas
icebp
jecxz
push
jb
inc
adc
cs
test
push
sbbb
lea
test
sbb
rolb
sub
iret
sar
ficoms
xchg
xchg
adc
loopne
add
sbb
mov
or
imul
push
imulb
mov
bound
fcoms
push
dec
inc
xchg
repnz
inc
sbb
dec
pop
inc
pop
shr
mov
adc
js
icebp
scas
stos
adc
mov
mov
jcxz
call
sarl
cmp
inc
es
pop
jle
fnstsw
test
dec
push
xor
cmpsl
test
jnp
mov
movsl
test
pop
les
sahf
enter
and
adc
pop
inc
icebp
call
clc
push
jbe
mov
pop
in
int3
dec
dec
push
push
push
fdivrl
xchg
inc
mov
lcall
test
rorl
pop
aaa
or
xchg
pop
jle
insb
jb
and
in
sbb
dec
push
es
cli
rol
jmp
ljmp
call
pop
inc
jle
push
mov
inc
into
mov
adc
adcb
pop
and
call
sub
lods
mov
jge
cs
xor
loop
ljmp
inc
jle
pop
test
adc
jle
add
cmpsb
xchg
loopne
or
add
jp
pusha
pop
pop
pop
mov
jno
out
pop
xchg
add
int
int
shlb
or
xor
pop
pusha
enter
movsb
das
xor
sahf
clc
jo
leave
pop
icebp
push
dec
pop
les
testl
push
or
pop
jg
rorb
xchg
sysret
aas
mov
data16
mov
mov
daa
mov
cwtl
pop
test
sbb
call
cwtl
xlat
mov
or
xchg
sub
adc
xchg
push
scas
rolb
sub
test
xlat
push
pop
xchg
cmp
ret
ret
sbbl
cld
push
cld
leave
cld
imul
jp
mov
shlb
dec
aas
push
loop
mov
inc
mov
roll
ljmp
data16
fwait
ret
cmp
push
loope
pop
push
jle
add
and
jne
push
add
push
mov
xchg
cmpb
mov
jle
xchg
loop
mov
out
sbb
dec
aam
pop
cmp
shrl
mov
mov
push
daa
or
jge
jl
push
inc
push
push
inc
je
cmovb
movsb
jp
scas
push
sbb
lods
pushf
in
lea
mov
mov
ret
jnp
hlt
sti
lcall
call
out
aad
inc
add
push
mov
pushf
push
lock
mov
es
add
mov
pop
cmp
daa
mov
push
pop
push
cmp
into
xlat
mov
push
loopne
repnz
sbb
bound
jp
clc
mov
cmp
cmp
push
fsubl
or
or
push
std
mov
mov
mov
fidivl
jo
xchg
xchg
dec
push
inc
push
ficoms
hlt
sti
mov
fbld
call
mov
lock
ja
mov
ficompl
orl
movb
lcall
inc
and
fidivl
jp
repz
pop
push
popf
cmp
xor
sahf
call
add
add
mov
aam
or
jl
xor
xor
mov
bound
sbb
add
pop
jae
orl
inc
xchg
scas
cmpb
mov
jle
hlt
ret
call
insb
insb
mov
clc
push
sub
stos
data16
inc
push
outsb
mov
or
jno
ret
loopne
mov
mov
add
mov
sub
lcall
mov
icebp
loopne
inc
divb
mov
imul
sbb
cmp
insb
jecxz
jb
mov
loop
cld
cltd
and
cmpb
push
clc
add
inc
pop
jl
push
pop
push
mov
clc
inc
mov
adc
xor
rorl
in
cld
xchg
jbe
pushf
push
js
pop
sbb
push
mov
xchg
in
adc
call
loope
arpl
enter
dec
out
es
sub
mov
insb
mov
dec
push
insb
incl
icebp
add
movsb
int
xchg
pop
xor
popa
jne
mov
mov
outsb
popa
fs
xlat
das
mov
lret
lret
mov
fxch
or
cmp
push
jbe
lock
orb
xor
xchg
lock
jle
ret
xchg
lods
jbe
call
push
sbb
int3
scas
addr16
std
mov
and
mov
das
pop
jl
push
pop
sarb
dec
inc
mov
xchg
mov
inc
cld
clc
scas
or
mov
push
dec
filds
data16
xor
mov
or
repnz
in
jge
dec
jmp
jbe
adc
mov
cs
popl
les
mov
mov
inc
insl
fmul
pop
fidivrl
cmc
mov
push
std
aad
clc
add
fs
xlat
test
movsl
xchg
mov
mov
mov
cli
fcomp
pop
xor
loope
mov
cmp
cmp
pop
imul
aas
into
mov
push
rorl
fdiv
mov
inc
cmovle
out
cmpsl
js
xchg
pop
jp
adc
inc
pop
sbb
cmp
sub
jns
mov
sbb
mov
add
mov
jecxz
aaa
jmp
jbe
sbb
testl
out
jp
sub
pop
hlt
xor
sbb
lock
test
mov
cmp
pop
pop
cmp
mov
jecxz
shll
lods
mov
xchg
out
fsub
in
nop
inc
push
ret
push
cmp
or
jge
pop
imul
add
inc
repnz
cltd
push
push
cmp
mov
mov
xchg
pop
loope
mov
out
clc
push
xor
mov
mov
xchg
mov
clc
cmp
sbb
nop
js
pop
hlt
sub
push
ret
out
fistps
adc
cmp
sub
sti
loop
pop
repz
push
cmp
inc
pop
scas
dec
push
dec
outsl
stos
das
movsl
outsl
pop
fidivrs
mov
sbb
dec
sahf
and
pop
inc
rol
cvtpi2ps
mov
mov
icebp
aad
xchg
push
dec
out
imul
aam
jmp
aaa
loope
repnz
xchg
push
pop
xor
loop
jbe
sahf
and
lahf
pop
sbb
out
xchg
in
clc
icebp
add
andb
ret
jl
inc
sbbl
pop
cmpsb
mov
dec
xchg
mov
jl
inc
and
pop
cmp
je
clc
lock
push
stos
test
sti
rcl
pop
cmpsb
sbb
outsb
ret
filds
xor
clc
shrb
lock
lcall
out
add
in
push
jl
cwtl
rcl
mov
xchg
lcall
lcall
cmpsl
jo
pop
out
xor
icebp
adc
mov
lock
xor
std
hlt
loope
mov
mulb
cmpsl
inc
lods
mov
dec
ret
fdivrl
inc
pop
shlb
mov
pop
inc
adc
lahf
shl
loope
dec
dec
pusha
push
pop
mov
lock
pop
enter
out
dec
cld
xchg
leave
xor
pop
mov
pusha
hlt
jnp
dec
dec
in
les
adcb
jmp
insl
push
xor
aas
jge
icebp
push
inc
or
cmp
cs
ds
addl
mov
jge
ds
stos
add
int3
test
pop
sbb
pop
or
clc
rcrl
push
xchg
inc
andb
dec
mov
movl
pushf
xchg
jne
std
aad
inc
push
mov
mov
scas
ret
in
sbb
out
push
cmp
test
dec
in
out
les
aas
stos
imul
add
mov
mov
adc
mov
in
adc
sbb
and
ficompl
push
pushf
xchg
add
add
add
push
push
ret
fists
notb
mov
shl
ret
outsb
push
add
or
jb
orl
xchg
es
repz
mov
cmpsb
xchg
cmc
mov
aaa
dec
enter
mul
sti
jb
xchg
adc
mov
rcl
insl
mov
xchg
cmp
dec
mov
bound
push
inc
or
out
iret
mov
bound
div
les
filds
scas
push
outsb
lods
mul
xchg
xor
sbb
test
lahf
adc
xor
or
nop
icebp
mov
cmp
jnp
mov
inc
jl
mov
jbe
xor
fcmovnb
mov
mov
decl
lock
shl
sahf
pop
je
adc
dec
setnp
data16
push
inc
imul
push
loopne
xchg
imul
xchg
shlb
jp
xor
imul
dec
in
shlb
in
pop
sti
call
sahf
out
mov
das
mov
jb
jnp
mov
mov
xchg
js
sub
cltd
mov
int
add
mov
inc
bound
add
out
mov
insb
jns
xchg
cmp
lcall
or
repnz
sub
ja
pop
fsubrp
sub
addr16
mov
xchg
in
rclb
mov
repz
push
fiadds
mov
rcrl
xor
xchg
jp
into
popf
dec
hlt
lock
jnp
test
insb
scas
add
es
jp
icebp
pop
das
mov
jp
push
js
pusha
add
add
bound
repnz
shlb
in
loopne
mov
pop
ss
fistl
dec
leave
mov
mov
shl
arpl
jle
pop
lock
xor
loopne
or
aam
mov
lcall
aas
add
cld
mov
ds
aad
jmp
les
mov
inc
xchg
enter
sbb
sub
mov
into
mov
mov
cmp
or
pop
pop
movb
sbb
lcall
fisubrs
pop
outsb
push
xlat
jp
xchg
push
data16
out
cmp
and
ljmp
jl
push
mov
js
or
xchg
mov
test
pop
dec
loop
faddp
out
add
cmp
pop
sbb
ret
xchg
push
das
pushf
xor
cmpb
jl
sub
pop
in
inc
dec
pop
insb
ret
and
jb
cwtl
call
setle
test
ss
lcall
push
inc
mov
movsb
in
jmp
enter
jmp
int3
and
cmp
mov
test
aam
sarb
cmp
add
test
xchg
add
ss
cmpl
cmp
test
out
push
push
jle
mov
fsubp
stos
mov
mov
lock
pusha
test
fs
push
add
and
jo
out
cmpsl
xchg
outsb
dec
push
sar
arpl
js
pop
aam
dec
xor
fsubrl
mov
push
xchg
push
adc
ja
mov
cli
lss
in
cmp
in
cmp
mov
jmp
cmpsb
adc
addr16
aad
mov
push
jl
movsl
aad
jecxz
fdiv
out
xlat
rcll
add
adc
enter
movsb
xchg
call
pop
sbb
lret
notl
cmp
mov
sub
push
fidivrs
dec
andb
add
loop
out
std
clc
mov
mov
or
jp
loope
enter
rorb
add
imul
daa
imul
ret
sbb
lcall
mov
insb
push
aas
sub
subps
cmp
xchg
rcrl
testb
daa
popf
outsb
mov
jle
int
in
sub
sahf
rorb
push
sub
lahf
pop
in
push
aas
out
mov
dec
jp
clc
adc
out
scas
inc
movsb
lock
pop
scas
push
push
leave
dec
mov
movsb
lock
les
push
movsb
push
ljmp
xor
jg
xchg
dec
fidivl
bound
cmp
sub
add
out
mov
std
icebp
add
cmpsb
es
adc
jl
lock
sbb
pop
push
hlt
and
mov
push
ja
loopne
push
push
dec
sub
stos
jl
adc
mov
movsb
and
jbe
mov
and
cmpl
lds
fcompl
mov
mov
jb
and
cs
mov
mov
lds
sub
fcoml
jle
add
rcrb
or
rcll
in
lock
or
rcl
jnp
jle
movq
mov
jo
stos
xlat
cwtl
pop
fildl
sub
or
jns,pt
cmpsl
pop
cmpsb
mov
jp
iret
pop
xchg
repnz
movsl
clc
lock
fs
xor
loopne
js
scas
call
and
cli
inc
xchg
or
mov
dec
sbb
mov
adcl
jmp
xchg
lods
mov
mov
mov
sub
jl
ljmp
cmpsl
outsl
sub
xchg
inc
stos
and
push
jmp
js
lcall
lods
ds
push
dec
ds
sahf
iret
es
pop
andl
cmp
pop
jge
inc
add
dec
rorl
pop
es
hlt
push
xchg
gs
in
cld
cli
sbb
fimuls
call
scas
inc
mov
xor
arpl
data16
pop
js
lea
mov
pop
es
cld
scas
out
or
orb
cmp
scas
sub
movsl
push
fisubl
add
pop
add
jp
mov
xorl
push
and
inc
mov
xchg
add
and
push
push
jl
fcompl
sti
ret
divb
xchg
in
inc
ss
out
and
js
fidivrl
xor
enter
ds
pop
sub
pusha
mov
out
and
clc
icebp
adc
and
sbb
fsts
mov
jge
and
loop
popf
lea
jge
or
sar
in
lret
mov
pop
xchg
pushf
pop
lret
push
cmpl
push
cltd
outsb
popa
push
std
push
pop
cld
pop
inc
les
push
mov
push
lahf
insl
jecxz
es
lahf
lock
out
mov
inc
test
sub
sub
cli
insb
mov
xchg
and
jmp
xor
dec
fisubrs
or
inc
sbb
sbb
jp
es
ljmp
push
clc
push
mov
out
idivl
dec
mov
xor
lods
push
mov
pop
mov
jle
loopne
fisubs
lret
inc
cmp
mov
mov
and
fdivrl
adc
or
gs
mov
cli
flds
fists
nop
or
outsb
mov
cmp
loopne
loop
xchg
mov
lea
bound
fimull
jp
xor
pop
sbb
jmp
lea
push
sbb
and
push
pushf
or
sahf
arpl
pop
pop
fsubs
cmp
div
mov
insl
sub
lock
dec
jbe
rcr
add
push
pop
mov
push
sbb
hlt
rol
cmpsl
adc
pop
scas
jle
inc
js
mov
inc
pop
js
mov
lock
adc
add
jp
mov
xor
dec
test
hlt
cmp
and
sub
adc
sahf
mov
maskmovq
sti
cmpsb
lods
int
push
xchg
insb
sub
sub
insb
ljmp
cs
es
mov
push
aam
les
clc
fmulp
or
mov
popf
out
or
mov
cmpsb
pop
mov
dec
xor
cmp
test
scas
ds
adc
add
sbb
clts
mov
in
push
cld
ds
loope
xor
gs
pop
cli
jecxz
add
pushl
jp
lcall
cmp
ficompl
dec
arpl
jg
or
in
sbb
add
negl
cmp
dec
jo
xchg
mov
jbe
mov
cld
dec
popa
push
mov
add
mov
sub
lock
testl
push
cld
adc
pusha
insl
mov
cmp
jp
jb
xor
cmpsl
dec
sbb
push
mov
add
dec
sbb
std
cli
pusha
mov
add
adc
and
stos
clc
mov
mov
imul
push
cmp
lods
xchg
roll
mov
pop
subb
clts
pop
stc
shlb
lret
sti
inc
cltd
pop
por
mov
nop
insb
sub
jmp
das
je
cmp
lock
popa
mov
or
ret
push
mov
loopne
int3
imul
dec
mov
in
rcr
js
add
mov
imul
pop
insb
and
jo
stos
mov
out
push
ds
fsubrl
fisubs
push
cmp
imul
dec
mov
xchg
push
mov
testl
push
mov
xor
cmp
cmp
add
sbb
sahf
sub
loopne
arpl
mov
mov
sahf
xor
push
loop
lods
push
mov
push
lods
push
add
xchg
enter
test
mov
add
and
sbb
jecxz
inc
gs
xchg
ss
aam
clc
loope
lods
mov
mov
mov
push
cmpsb
or
mov
xchg
jle
dec
sahf
shl
ljmp
adc
jl
jnp
ljmp
repnz
pop
loopne
pop
jg
sbb
out
shl
stos
aam
pop
test
xchg
mov
lds
orb
push
std
or
pushw
xor
push
pop
aad
mov
js
or
ret
test
pop
lahf
bnd
dec
das
aad
push
pop
shrb
pushf
sbbb
jecxz
mov
adc
mov
movaps
push
fdivrs
loop
out
scas
in
cltd
repnz
aam
pop
fisttps
mov
insb
pop
not
pop
xchg
fwait
pop
and
jl
sub
stos
xor
pop
addb
fiadds
xor
mov
loope
into
xor
xor
fstpt
fcomip
aad
in
mov
mov
jno
add
cwtl
cmp
jp
loopne
fs
into
fcomps
test
mov
sub
sub
ljmp
nop
cmp
out
mov
repz
js
jg
je
movsb
stos
lahf
mov
jmp
lock
xlat
mov
jle
fs
int3
cmp
mov
mov
and
sub
shlb
xor
jae
test
repnz
inc
xor
clc
loopne
ror
cmp
ljmp
rol
popf
movsl
add
lret
mov
mov
cld
add
cli
movsb
enter
mov
pop
and
add
mov
push
cmp
lret
pop
dec
jg
mov
mov
fmulp
clc
add
jle
sub
or
dec
sbb
sarb
jge
jno
jmp
insl
sub
aas
outsl
clc
mov
push
adc
in
bound
shll
dec
mov
movl
mov
sarb
cs
shrl
pusha
mov
add
add
maxps
sahf
sub
pushf
sbb
cmp
jecxz
lock
les
jmp
inc
and
leave
xchg
hlt
xor
and
jle
jbe
js
test
int3
xchg
inc
inc
xchg
jl
call
adc
pop
fildll
mov
out
or
icebp
nop
xchg
push
mov
sahf
and
xchg
cmp
xchg
enter
xchg
bnd
mov
push
inc
test
xchg
xor
in
dec
inc
inc
das
mov
stc
sahf
mov
pop
fildll
in
aam
dec
in
and
cmp
sbb
or
xchg
cmp
stos
jo,pt
ds
clc
jo
sbb
and
insl
imul
xor
fwait
push
pop
pop
test
bound
cmpsb
mov
scas
cs
mov
add
ret
lds
jp
mov
push
std
and
outsw
roll
xchg
adc
ss
xor
push
adc
mul
dec
and
cmp
loopne
loopne
pop
lea
int
arpl
mov
bound
pop
xor
inc
in
and
andb
jmp
aam
cmp
pop
mov
orb
imul
mov
and
push
mov
add
lods
pushf
nopl
sub
sbb
lock
add
push
mov
pop
push
js
and
pop
aad
in
mov
mov
insb
andb
mov
mov
subl
sbb
adc
scas
mov
adc
inc
mov
jo
add
popa
mov
lock
sbb
js
push
mov
or
cmp
push
js
jecxz
pop
jp
push
andb
aam
clc
jne
or
pusha
fdivs
sbb
mov
cli
into
inc
test
jle
xor
cld
les
cwtl
loope
es
cmpb
or
fsub
lret
adc
adc
mov
hlt
cmpl
hlt
mov
repnz
cmc
inc
xchg
mov
pusha
cltd
mov
inc
int
mov
cmovg
clc
sub
and
jecxz
pop
testb
inc
or
mov
mov
popl
cmp
inc
xor
repnz
or
pop
add
js,pt
sbb
ds
ret
scas
inc
and
and
xlat
or
fcompl
push
cmp
hlt
popa
lcall
fldl
push
inc
and
mov
out
jge
das
adc
insl
in
in
mov
rcrl
cmp
push
cmp
dec
jle
hlt
data16
mov
nop
cli
pop
jl
fdivs
xchg
xchg
xchg
inc
mov
pop
jle
xchg
enter
aam
jecxz
nop
lods
out
rol
push
sahf
aam
push
push
out
decb
js
mov
in
pushf
mov
xor
clc
clc
jne
idiv
jbe
rol
mov
ss
sbb
out
push
xlat
js
mov
idivb
pop
shr
add
mov
cmp
or
jecxz
lock
cld
xor
cmpsb
push
mov
or
cmpl
adc
add
data16
mov
insb
mov
sti
lret
sbb
or
lds
cmp
loopne
mov
ds
jle
ds
out
fimull
icebp
add
inc
data16
testl
loope
mov
movsb
subb
sub
add
cmc
dec
sub
stos
pop
sbbl
xor
jp
sti
sub
insb
add
mov
xchg
pop
ljmp
inc
xor
jp
push
ljmp
adc
inc
mov
push
pop
and
jbe
inc
loopne
push
and
jle
pop
xlat
sahf
push
add
cli
jmp
cmp
mov
mov
or
lret
repnz
adc
or
les
les
pop
scas
test
test
push
pop
ffreep
bndldx
stos
xchg
fs
cmp
lods
mov
or
cltd
cmp
mov
and
mov
pop
pop
out
jnp
xlat
ljmp
mov
mov
pop
arpl
xor
mov
or
push
stos
imul
fidivrl
lock
cmp
rep
pop
add
pop
ss
push
daa
cmp
js
jmp
scas
dec
pop
pop
ljmp
sbb
out
ss
repz
pusha
add
cmp
xchg
in
xor
jne
rorb
adc
mov
jecxz
jle
jge
mov
xchg
adc
lea
fsub
push
push
inc
rcrb
lret
pop
les
add
cmp
rorl
js
nop
scas
mov
cs
stos
out
adc
jl
xchg
add
lea
adc
pop
lahf
sub
xor
push
lock
ljmp
lds
mov
cmpsl
sub
inc
or
inc
mov
adc
sbb
insb
dec
xchg
mov
pushf
jle
cli
dec
les
imul
in
outsl
pop
movl
mov
mul
cmp
outsl
xor
or
push
sbbl
dec
ja
ds
cmp
jno
jge
mov
push
add
mov
mov
loop
or
mov
sbbl
loopne
adc
scas
std
ljmp
push
cs
scas
and
roll
cmc
mov
popa
lods
cld
lock
sbb
pop
push
icebp
sbb
mov
ljmp
jp
xchg
lock
and
xchg
loope
add
js
lcall
sahf
add
icebp
push
mov
mov
icebp
clc
popa
add
in
dec
jle
in
inc
cmp
inc
mov
and
xor
movsl
lods
test
cmp
sbb
rolb
cmpsb
cwtl
ret
dec
outsb
or
adc
fbld
lods
cs
xor
fstp
mull
mov
clc
loop
push
mov
jg
mov
mov
loopne
push
push
sahf
jns
or
scas
pushl
scas
add
shl
sub
aad
clc
jle
inc
lret
jge
and
push
cli
sarb
add
orps
ficoml
push
out
rorl
push
pop
jp
popf
stos
rorl
mov
cmpsw
inc
pop
jmp
add
push
pop
mov
das
pop
shlb
out
pop
rcl
fdivs
pushf
xchg
rclb
je
lea
sbb
mov
fwait
insb
out
push
enter
inc
sbb
gs
sub
push
into
pop
lahf
dec
cmp
jns
push
imul
cmpb
mov
js
fcomi
mov
and
push
add
cwtl
pop
je
lock
xor
mov
rcrl
mov
sti
inc
out
jecxz
jns
and
sub
jp
loope
push
sahf
jno
push
mov
add
pop
xchg
insb
shrb
les
mov
mov
jne
popl
cmp
in
sbb
adc
adc
ret
pop
sbb
mov
mov
or
clflush
clc
inc
int3
push
mov
call
cmpsl
pop
or
shlb
loopne
es
sub
inc
mov
xchg
mov
mov
adc
dec
cmpsb
jecxz
mov
mov
push
inc
sbb
fsubrl
cwtl
jp
std
fistps
pop
lret
mov
scas
mov
divl
shl
inc
jmp
or
ss
mov
mov
sbb
mov
int
ret
in
cmpsl
lock
cwtl
push
addr16
test
xchg
adc
jle
cmp
lock
mov
mov
div
inc
xor
scas
insb
pusha
call
popf
xor
sbb
xchg
sub
mov
cmp
xor
sbb
xchg
call
pop
xchg
dec
or
inc
push
loope
cwtl
adc
sub
jno
imul
test
jg
mov
sub
push
ficoms
dec
add
sti
push
pop
aad
loopne
or
cmp
lock
sbb
inc
mov
aas
cld
test
mov
push
xor
iret
push
cmp
or
cmp
sub
loope
sub
pop
mov
dec
mov
dec
mov
scas
stos
jge
hlt
xor
in
subb
sarl
sbb
jo
push
loop
add
push
and
sti
jecxz
and
xchg
pushf
ret
nop
mov
scas
ret
xchg
and
nop
pop
sub
push
lret
cli
mov
xor
lods
jp
call
clc
or
xchg
out
pushf
cmc
fs
cmpsl
lock
jl
test
es
mov
rolb
or
sbbl
dec
cld
jp
in
icebp
jo
push
testl
gs
aam
or
cwtl
loope
pop
iret
mov
xchg
pushf
pop
cmpsb
mov
jle
ja
jl
sbb
xchg
sarb
add
dec
sbb
ret
inc
subb
push
fldcw
iret
std
add
mov
mov
loop
std
mov
pop
dec
pop
add
xbegin
pop
fcmovu
loope
or
or
mov
aas
test
dec
loopne
inc
lock
sbb
or
loopne
imul
or
into
push
lret
inc
sti
push
sub
rorb
cld
icebp
inc
scas
out
pop
loopne
test
sti
icebp
popa
ret
into
jb
dec
xor
std
loopne
sub
xchg
stc
sbb
pusha
xchg
push
pop
xor
push
aam
xchg
test
adc
xchg
pop
mov
sub
ret
outsb
inc
mov
cld
js
jno
rcll
dec
xchg
sbb
mov
rorl
add
and
and
jl
add
sar
ljmp
adc
call
sbb
inc
dec
dec
inc
lret
cmp
push
jno
std
jbe
data16
fs
into
int3
loopne
xchg
xor
test
fsqrt
imul
and
xchg
sahf
les
mov
cmp
cli
push
and
bnd
jp
jmp
cmp
out
lock
lds
sbb
rolb
jp
push
mov
insb
insb
add
int3
push
shl
scas
filds
lret
dec
test
adc
xor
mov
cmp
js
inc
xor
sub
xabort
inc
loope
int
dec
xor
sbb
out
mov
jp
clc
std
and
adc
aam
push
cmp
loopne
sbb
mov
jmp
cmp
loopne
loope
and
aad
icebp
push
sbb
pusha
cmp
ss
repnz
cmp
fs
cmp
mov
push
call
dec
outsb
into
js
into
into
mul
sti
out
fcmovb
xchg
clc
cmp
sbb
rol
push
cmp
das
test
call
fiadds
mov
lahf
roll
jne
xor
mov
mov
insb
or
pop
iret
aam
mov
adc
xchg
push
inc
xor
pop
rorb
je
inc
repz
dec
call
jle
stos
xor
sub
mov
mov
out
ret
cwtl
mov
or
out
pop
xor
mov
lret
addl
pusha
and
movb
shrb
sub
dec
jp,pt
orb
xchg
mov
icebp
mov
inc
stos
add
add
push
inc
sbb
lcall
sub
mov
lock
push
fmull
mov
out
inc
loope
enter
into
mov
push
in
clc
aas
mov
lcall
call
jb
in
hlt
lock
mov
das
or
decb
xlat
rolb
fildll
xor
sbb
cli
and
scas
pop
sarb
cmp
out
xchg
mov
xchg
bound
sbb
jno
inc
bound
jne
mov
out
adc
jl
and
mov
arpl
jmp
comiss
push
jge
pop
sub
mov
clc
ret
mov
test
xchg
outsb
clc
stc
jo
adc
leave
xor
mov
bound
and
pop
movsbl
mov
jbe
mov
test
mov
or
in
jl
mov
cmp
mov
and
mov
andl
ret
sub
mov
sbb
cmc
xor
je
cmp
add
in
mov
xor
jp
cmpb
insb
ret
lahf
pop
mov
jb
shlb
inc
pop
cmp
push
call
test
sbb
and
test
testb
cli
dec
ret
pop
and
pop
fs
insl
xchg
jl
clc
icebp
push
push
inc
je
in
cmp
add
aas
adc
call
nopl
pop
divb
aam
jmp
cmp
nop
testb
mov
xchg
movsb
lcall
rcrb
lods
jl
out
jge
mov
pop
adc
bound
cmp
stc
test
or
adc
mov
mov
repz
xchg
int3
sbb
ret
fidivrs
xchg
mov
mov
or
mov
ret
mov
and
or
jle
push
inc
insb
rorl
test
cmp
pop
idiv
icebp
jmp
jle
movsl
ret
subb
jecxz
std
adc
cmp
ret
push
icebp
sarb
push
push
shrb
cmpl
jp
mov
adc
clc
cli
add
pop
ljmp
and
jl
lock
idivb
pop
call
sahf
lea
inc
or
jns
shrl
mov
cmp
dec
pop
pop
push
fsubs
ljmp
out
pop
mov
xchg
ja
pop
mov
subb
dec
pop
sbb
inc
cmp
arpl
push
rolb
cld
cltd
fadds
test
stos
cld
cli
bound
out
inc
adc
ret
pop
rolb
dec
mov
clc
push
jle
pushf
fsubrl
dec
divps
xchg
cli
adc
int3
xor
out
mov
jb
jle
mov
sub
xchg
filds
out
outsb
lock
fstpl
xor
add
jo
mov
push
rcrb
sub
ljmp
mov
xchg
cwtl
pop
cli
mov
or
in
xabort
add
sbb
dec
mov
adc
mov
aad
mov
fimuls
sbb
pop
mov
mov
movsl
push
mov
jo
imul
fimull
jl
dec
test
cmp
outsl
filds
scas
pop
lock
cmp
and
je
mov
xchg
loope
sti
add
jae
sub
xchg
adc
add
fwait
jo
push
push
push
aas
sub
or
js
sbbl
je
fisubrl
or
aas
dec
hlt
pop
jle
mov
out
loopne
and
mov
mov
dec
lcall
cld
mov
push
add
dec
dec
mov
inc
push
lods
addr16
pop
and
in
mov
lds
push
add
and
icebp
cmc
adc
pop
lea
lahf
scas
sub
or
mov
sub
xchg
scas
or
das
scas
cmp
mov
in
xor
mov
mov
insb
push
addr16
adc
sub
push
pop
push
sahf
dec
xchg
cwtl
lods
mul
add
jae
adc
sub
mov
mov
in
into
sbb
mov
cs
cld
icebp
jp
lret
xchg
sub
les
add
test
cli
movsl
pusha
cld
xor
testb
icebp
mov
add
std
xchg
sub
rorb
pusha
jecxz
lds
aas
fmuls
push
iret
call
push
faddl
add
mov
stos
add
jmp
sti
ds
xchg
fisubrl
adc
cwtl
arpl
xchg
jo
out
cmpsb
or
outsb
mov
sub
lods
fwait
shlb
sub
jle
mov
dec
inc
loope
xchg
les
lock
repz
icebp
loop
shll
std
enter
pusha
or
or
repnz
fsubrp
sbb
rcll
push
out
and
sub
les
push
and
xor
lcall
rol
data16
add
mov
loope
mov
daa
jle
push
test
bound
jecxz
pop
cmp
add
or
mov
cmp
jle
adc
xchg
sbb
lock
adc
inc
xor
icebp
mov
pop
cli
or
inc
fiadds
addr16
scas
inc
add
pushf
sbbb
out
aam
jns
jle
jl
lock
out
push
jle
pop
sbb
pushf
sbb
ficomps
aad
and
fcoms
sbb
bound
push
adc
cmpsl
test
cmc
sarb
repnz
add
aaa
mov
xor
test
or
popa
add
aaa
aaa
aaa
mov
loop
iret
mov
ds
adcb
fwait
cli
hlt
xchg
push
push
test
icebp
loop
out
mov
dec
adc
jl,pt
js
and
imul
rol
xchg
mov
inc
jbe
and
fisubl
or
or
pushf
jno
insb
fpatan
in
aam
xchg
jp
test
daa
movsb
cmpsb
repz
inc
mov
cmp
leave
icebp
popl
lods
dec
ss
mov
jge
pop
pavgb
mov
test
inc
enter
jns
sub
or
lock
div
roll
mov
inc
jp
push
cli
fmul
lea
mov
je
cltd
push
arpl
ja
jo
and
dec
les
shl
lds
sbb
jecxz
sbb
filds
loopne
xor
inc
scas
ret
push
jecxz
add
es
shrb
pop
dec
or
cld
push
mov
add
jno
or
sbb
call
pop
dec
xchg
mov
mov
sbb
jp
cmp
push
ret
scas
xchg
dec
adc
mov
and
loop
sub
cmp
fdivrs
jo
mov
fisttps
enter
es
js
insl
cmc
fsubp
xorl
ret
lods
push
mov
cli
loopne
add
pop
mov
jo
sti
insl
pop
pop
pop
inc
cmp
clc
xchg
ljmp
mov
inc
push
addr16
or
aad
notb
call
mov
aad
in
insb
jecxz
clc
cmc
xchg
mov
enter
shll
mov
hlt
sahf
mov
lock
es
shlb
push
xchg
dec
loop
les
sar
adcb
call
dec
adc
pop
push
cmc
loop
mulb
jo
sbb
add
cld
imul
sub
fildl
out
test
dec
or
cli
ljmp
lret
fsubl
cmp
mov
or
mov
lock
fisubs
std
push
jge
repnz
dec
add
mov
jne
stos
icebp
lds
loop
sbb
cmp
push
cld
and
mov
ds
jle
jbe
adc
sbb
imul
adc
pop
adc
and
sub
sbbl
int3
xor
and
loopne
rolb
xchg
mov
sbb
push
cltd
mov
xor
mov
pop
and
movsb
jle
rolb
adc
cmc
loope
es
sub
xchg
ret
dec
movsb
sbb
es
add
sub
shll
test
jbe
jnp
outsl
mov
pop
inc
sbb
jle
out
cmp
sarb
fisttpl
test
insb
or
loop
test
pop
or
push
cmpsb
sbb
adc
add
adc
jae
and
jle
lock
and
test
lea
and
mov
and
xchg
loope
fstl
ljmp
out
adc
push
loopne
out
repnz
jecxz
jbe
ja
dec
adc
mov
in
hlt
ljmp
or
inc
and
lock
lock
sub
sub
iret
in
sub
rcl
or
fisubrs
and
popa
insb
mov
pop
call
daa
adc
mov
std
js
adc
jl
inc
lds
inc
jle
jns
mov
jo
adc
sarb
fidivl
movsl
cmpsl
push
sbb
lock
js
adc
or
dec
stos
jecxz
or
dec
sbb
loop
sti
rcrb
fisubl
ljmp
jl
rolb
add
pop
in
ret
movsb
inc
and
inc
push
addr16
add
cmp
repnz
fs
sbb
jb
cmovno
add
gs
dec
adc
pop
push
jecxz
push
jecxz
lock
mov
mov
mov
sbb
xor
iret
rorl
xchg
es
jge
loopne
xlat
jp
repnz
mov
inc
int
push
sbb
sarb
xchg
ret
fld
js
sub
push
out
sub
ja
enter
push
jmp
pushf
test
jl
cli
xor
add
mov
xor
inc
out
pop
aas
inc
jb
adc
out
sbb
or
and
jb
sbb
xor
rolb
dec
fidivl
movsl
shlb
sub
push
jmp
add
loope
cmp
push
shll
adc
jo
ret
shll
inc
mov
inc
xorb
dec
lret
sahf
cmp
inc
adc
outsl
sbb
or
cwtl
xchg
inc
scas
jl
clc
jmp
arpl
ss
push
and
sub
adc
xadd
je
cmp
bound
cld
fistpl
adcb
and
leave
jp
xorl
ficomps
orb
mov
les
mov
xchg
mov
jo
test
mov
dec
adc
and
sahf
mov
pop
ds
mov
cltd
adc
sbb
sub
jnp
mov
out
notb
ret
scas
fbld
xor
pop
push
cmp
push
pop
mov
mov
add
sub
xor
and
cld
jp
mov
jge
jne
add
sbb
dec
xchg
scas
xchg
loope
xor
push
dec
cmp
mov
dec
xchg
mov
mov
mov
mov
rorl
add
out
sti
call
jbe
or
mov
mov
movsbl
add
lret
mov
inc
xlat
addl
jbe
test
xor
mov
fcom
mov
lock
adc
imul
push
push
js
cmpsl
mov
inc
lret
fldl
cld
and
je
pop
icebp
push
mov
cmc
loopne
cmpsb
ficoms
inc
or
mov
sti
sbb
mov
mov
lock
inc
bnd
lcall
mov
jl
mov
mov
xor
js
dec
ljmp
pop
lds
sti
mov
test
jg
outsl
push
xor
loopne
rol
push
add
push
sti
or
pop
stos
pop
clc
cmp
outsb
shl
cmp
mov
sahf
and
call
dec
hlt
add
add
mov
push
lods
pusha
popa
jl
aam
stos
into
cld
jge
xor
mov
xlat
loop
insl
loopne
repz
inc
jecxz
popa
js
jns
xchg
shl
ret
sti
add
pop
addb
loope
jne
cmpsb
jl
and
jge
lock
lret
jo
xor
ja
popa
adc
pop
pusha
je
dec
jmp
pop
cltd
call
orb
adc
bndldx
push
mov
test
test
dec
les
mov
jg
outsl
pop
xor
sbb
jbe
mov
dec
mov
jo
aad
out
loopne
xchg
fiadds
add
daa
mov
icebp
inc
fcomps
lcall
icebp
shlb
leave
ficoms
xchg
jmp
adc
cli
bound
pop
cli
xor
nop
cmp
sahf
aad
lock
pusha
cmpsb
xchg
and
xchg
mov
pop
pop
mov
cmp
inc
nop
mov
clc
cli
repz
cld
icebp
hlt
and
mov
jno
sbb
push
dec
add
or
sub
cwtl
fnstcw
jbe
xlat
orb
lds
inc
fbld
jge
out
mov
ds
into
xor
test
mov
mov
adc
or
clc
es
daa
lods
hlt
insb
imul
or
test
sbb
std
add
fidivrs
mov
dec
add
gs
add
adc
pop
faddl
into
mov
sti
loop
jg
mov
push
xchg
sbbb
vpsllq
ret
and
push
js
pushf
and
jl
out
mov
sub
pop
aam
mov
roll
lock
xchg
imul
gs
ja
push
pop
shlb
lock
push
push
jg
inc
mov
xor
subb
ret
inc
in
adc
fmul
pop
lods
sub
nop
outsb
ss
and
insl
std
push
push
loopne
mov
cwtl
jno
jb
loopne
sbb
jp
ds
call
dec
scas
stos
ds
dec
dec
bound
add
roll
insb
cltd
bound
mov
cmpb
leave
sbb
jp
out
add
mov
jo
outsb
xchg
xor
sub
insb
and
push
pop
push
pop
lods
mov
dec
sti
push
mov
imul
push
dec
mov
imul
xor
xchg
adc
adc
popa
jo
pop
das
mov
idiv
pop
mov
lea
push
movsl
lds
mov
out
add
push
xor
dec
clc
mov
das
adc
scas
push
sub
shlb
cmp
push
pop
loopne
fiaddl
ljmp
cmp
sbb
jecxz
mov
jne
push
jle
out
les
faddp
sti
or
pop
fnstsw
fidivl
ljmp
in
enter
push
outsb
sbb
mov
js
stos
inc
or
xchg
sahf
ljmp
les
ficoms
push
xchg
ds
sbb
pop
fs
stos
call
push
lret
mov
cld
inc
daa
es
sti
inc
lock
dec
mov
or
arpl
add
jo
dec
lea
xchg
mov
mov
adc
lods
dec
ja
jle
cwtl
pandn
pop
sub
jle
jmp
mov
xlat
adc
jl
mov
jo
test
shll
push
sub
loope
clc
icebp
enter
lret
fidivrs
pop
pop
mov
fwait
and
push
mov
hlt
dec
adc
add
adcb
ds
testl
mov
push
mov
mov
mov
mov
sbb
sub
test
ds
das
jl
mov
lret
data16
shl
popa
xor
cli
aam
test
mov
divps
les
fdivs
xchg
ljmp
pop
adc
mov
mov
gs
rcll
rol
or
push
or
sbb
xchg
cmpsb
pop
in
push
mov
movb
adc
xor
push
or
test
arpl
bound
pop
es
mov
clc
sbb
and
insb
and
dec
in
push
xor
mov
cmpb
push
jl
inc
lods
loope
xchg
cwtl
cmpsl
hlt
jbe
xchg
xor
push
mov
data16
pop
lret
jmp
lds
lock
push
mov
cwtl
add
push
inc
and
or
pop
dec
outsb
xchg
pop
push
loopne
sbb
ss
jg
cmp
inc
mov
jg
js
or
and
ficoml
mov
cwtl
out
add
js
idivl
push
jno
sbb
dec
mov
mov
dec
lds
cmpsl
call
push
pandn
insb
xchg
sbb
ljmp
das
push
lret
fdivrl
xchg
push
xchg
ret
sbb
mov
xchg
xor
jo
or
xchg
or
clc
ss
cwtl
mov
push
push
repnz
push
ret
mov
out
mov
aam
rcrb
add
inc
mov
rol
jnp
into
xor
mov
jecxz
loope
xor
arpl
dec
push
loop
xchg
js
dec
cmp
and
pop
pop
les
shlb
lods
jo
mov
pop
lret
cmpb
sub
xor
push
mov
jmp
clc
and
cs
mov
dec
fistps
in
aam
push
ja
lds
ds
mov
fsubs
jmp
add
mov
nop
mov
rolb
sahf
mov
cld
js
jecxz
mov
ds
nopl
fmull
bound
push
push
xor
sub
cmpsl
pop
pop
mov
lods
cmp
js
pop
xchg
dec
push
test
lcall
jbe
push
fs
ja
jb
sbb
je
fsubrp
loop
dec
loope
push
jbe
cmp
xchg
sbb
xor
jle
jp
mov
add
int3
lret
inc
inc
mov
inc
add
cld
mov
out
adc
lahf
ds
sbb
jb
loope,pt
or
addb
dec
call
lret
inc
sbb
aas
shr
pop
mov
outsb
jmp
dec
and
sub
enter
or
mov
mov
out
es
loopne
lcall
inc
pop
jl
xor
mov
add
es
call
mov
jmp
popf
mov
add
hlt
jo
seta
aaa
aaa
aaa
and
jg
cwtl
xchg
fs
or
sbb
aaa
aaa
aaa
outsb
lea
lods
adc
cli
jle
ss
sbb
lea
mov
insb
mov
bound
js
adc
int
mov
scas
test
jle,pn
loope
push
popa
adc
sahf
mov
xchg
shll
cmp
cmp
sub
je
cld
push
loopne
push
int3
addr16
aam
push
mov
cs
and
or
cmc
mov
sbb
mov
icebp
icebp
roll
jbe
jb
xchg
push
mov
and
xor
out
cmp
rorl
jb
pop
adc
pop
orl
or
sub
movsl
rcl
mov
mov
dec
push
addr16
or
mov
outsb
pop
es
in
xchg
stos
inc
xchg
or
std
jp
inc
push
cmp
xor
roll
sub
cs
decl
push
mov
sti
xor
add
add
repz
rcl
pushf
ds
jo
push
addr16
pop
arpl
aas
xor
jg
dec
jp
out
ret
sub
push
pop
out
rclb
ja
pop
sub
push
cmp
in
add
loopne
add
outsl
sub
pop
jno
cmp
cli
jo
int
popa
movsb
pop
and
mov
add
pushf
cwtl
data16
rolb
pop
ja
fidivrs
out
imul
or
pop
mov
stos
cmp
test
sbb
push
fldt
mov
mov
fdivrp
mov
mov
out
aad
daa
inc
pop
mov
out
push
push
xorb
jecxz
xor
pusha
fwait
xchg
aam
out
jle
dec
sbb
or
leave
mov
ucomiss
fdivrp
xor
jb
pop
jp
cmc
rcrl
rolb
mov
jp
fnstsw
clc
lock
cli
lret
loopne
in
mov
out
test
cmc
hlt
cmpb
scas
shrb
sub
cld
push
fs
mul
jnp
inc
jb
mov
rcl
loope
out
mov
fisubrl
insb
sbb
cld
js
adc
int3
and
mov
nop
push
sahf
xor
inc
arpl
lcall
fistpll
mov
enter
clc
lock
dec
fmul
dec
bound
lret
in
or
popf
sub
mov
mov
in
adcb
das
cli
insb
fcoms
aas
sbbl
gs
fisubrs
cmpsl
je
ret
mov
std
add
dec
loop
outsl
mov
jl
fwait
lahf
int
or
push
adc
sbb
out
loop
and
jp
mov
icebp
jmp
sub
je
lds
loopne
xchg
nop
xor
fdivrs
cli
mov
mov
xor
adc
mov
icebp
adcl
fdivrl
mov
cs
daa
jmp
mov
xchg
test
sbb
sbb
ret
divl
loope
mov
leave
les
jge
jg
fcoml
push
cmp
pop
push
push
je
pop
ret
es
out
movsb
or
loope
pop
js
gs
inc
ficomps
jbe
cmp
cwtl
and
rep
add
inc
cwtl
mov
std
xor
dec
mov
lcall
rcl
pop
adc
scas
xor
push
inc
xchg
lods
into
in
pop
inc
add
mov
xor
xchg
dec
pop
dec
fildll
push
cmpsl
cwtl
outsl
js
js
data16
dec
jp
sti
xchg
idivb
pop
fidivl
adc
dec
push
lret
and
mov
std
and
xchg
js
movb
mov
ljmp
adc
push
push
imul
mov
stos
sbb
push
xchg
dec
call
adc
mov
jecxz
pop
out
daa
test
fsubrl
imul
lods
push
rcl
pop
inc
and
push
sar
hlt
pop
mov
dec
or
xchg
add
pop
pushf
jl
fs
and
ret
xchg
push
adc
lock
jl
popa
stos
mov
negb
loop
push
bound
mov
mov
sbb
jno
push
push
inc
add
xor
loopne
add
mov
fimuls
es
fs
cmp
clc
mov
aad
and
scas
and
mov
jmp
cltd
test
inc
mov
cli
mov
mov
int3
fimull
inc
mov
push
andb
xchg
ret
pop
fisubs
inc
jbe
xchg
js,pt
outsb
pop
add
xor
or
fbstp
sub
out
xchg
pusha
push
inc
inc
lods
push
lret
packssdw
inc
notl
arpl
adc
mov
xor
out
and
setp
ret
pop
cmp
mov
xchg
loop
movsb
mov
cld
scas
cmpb
adc
cmpsb
jno
hlt
loop
push
sarb
pop
pop
push
mov
pop
ds
rcrb
pop
fildll
dec
pop
bound
pop
jg
fnstsw
out
cmp
pushw
pop
test
sti
mov
mov
shll
push
test
push
pop
aam
dec
sahf
loopne
test
clc
bnd
pop
loop
cmp
cmp
cli
ds
sbb
aam
mov
test
lock
sahf
fwait
ret
pop
int
inc
test
insb
je
lods
or
push
imul
test
xchg
sti
daa
in
loop
jge
push
loop
sahf
add
std
mov
std
cli
icebp
div
or
das
loop
loop
rolb
cli
arpl
inc
fwait
push
dec
hlt
dec
stc
pop
adc
wrmsr
sahf
xor
mov
adc
ljmp
jp
mov
or
pop
pop
jg
cmp
xchg
lock
outsb
xchg
mov
js
int3
sbb
out
sbb
cld
rcr
push
pop
pop
das
and
sbb
push
push
pushf
push
cmp
xchg
xor
sbb
lock
jp
mov
jbe
cmp
into
pop
mov
pop
adc
pop
push
outsb
out
mov
jl
cmp
int
jge
jbe
mov
inc
sahf
test
and
inc
mov
xor
push
or
sub
and
je
pop
xchg
or
cld
icebp
xchg
cmp
fidivrl
inc
lret
clc
jmp
loop
inc
pop
loope
ret
pop
sahf
dec
cmp
cmc
loopne
daa
ret
rcrb
roll
clc
shlb
ret
aas
dec
xchg
jl
inc
cmp
out
and
mov
sbb
lods
enter
xor
cmp
xchg
in
jbe
rol
xchg
sbb
xchg
nop
lret
inc
clc
push
inc
xor
subb
loopne
pop
pop
jle
arpl
incl
out
pushf
xor
xor
rcrb
xchg
cmp
pop
aad
ret
mov
insb
or
daa
jecxz
or
jbe
cmc
cmp
fdecstp
lret
and
push
cmp
jb
daa
rorb
cwtl
jmp
add
insl
ret
jno
scas
dec
mov
in
fwait
rcl
pop
pop
lock
hlt
push
bound
ds
cmp
les
mov
mov
pop
imul
and
inc
pop
xchg
or
cmpsb
bound
mov
adc
push
call
andps
repnz
add
insl
cs
clc
lock
loop
adc
and
bound
shlb
ret
pop
pop
pop
jle
jne
cwtl
lret
call
or
mov
test
loope
js
push
les
std
or
insb
or
or
jmp
jecxz
push
mov
cmp
les
add
cmp
sub
mulb
js
sub
xchg
cmp
or
push
cmp
into
icebp
pop
jl
and
mov
or
in
jbe
lock
push
ret
xorb
push
clc
and
mov
dec
mulps
ret
adc
int
ja
adc
mov
ja
cmc
and
push
pop
or
xor
cmc
ret
sti
fmull
fstpt
jns
cmp
or
mov
adc
js
clc
and
loop
mov
add
cmp
mov
pop
pop
pop
push
pop
and
push
cld
nop
mov
pop
mov
xchg
mov
xor
roll
shll
inc
dec
addr16
jge
loop
aas
lcall
inc
dec
test
ja
lock
sbb
aaa
insb
pop
pusha
stos
scas
add
mov
cmp
sbb
mov
jl
and
and
into
and
add
push
shrb
ret
sbbl
dec
jp
mov
push
in
mov
rolb
out
push
sub
xchg
mov
testb
jo
push
push
les
lds
push
and
enter
call
fucomp
jbe
cwtl
cmp
sbb
xor
jbe
ret
adc
les
push
sub
es
inc
and
inc
pop
sahf
fnstsw
lods
pop
pop
cmp
in
dec
cmc
into
sbb
aas
sub
jle
add
aas
insb
bound
xchg
xchg
stos
dec
outsb
cmp
fiadds
std
jge
icebp
cmp
aas
dec
lcall
cmp
push
dec
mov
xlat
mov
and
je
lds
jg
pop
lcall
fmuls
je
xchg
jnp
inc
cmpsl
lahf
push
add
mov
repnz
cmp
aad
idivb
std
clc
cmp
push
sub
and
sbb
sub
lahf
int3
sti
leave
and
int3
add
cmp
jmp
push
jmp
add
addr16
aam
into
inc
hlt
add
and
std
fs
shl
inc
out
mov
or
sub
ljmp
jbe
mov
push
orl
mov
nop
fmuls
cmp
mov
ss
enter
dec
repnz
and
sub
fcoml
rclb
jmp
sahf
push
and
dec
cwtl
shll
xchg
sub
test
imul
mov
js
cmp
push
jb
dec
test
outsb
xchg
ljmp
cmp
insl
cld
xchg
add
xchg
xchg
xor
dec
inc
or
mov
loop
aaa
icebp
outsb
mov
int3
sarl
inc
cmp
jge
push
jecxz
xor
lea
out
stos
pop
push
test
xchg
fidivl
int3
mov
cs
imulb
inc
pop
iret
push
mov
sbb
jl
rolb
add
test
popl
add
shll
mov
fimuls
pusha
sbb
insb
sbb
jecxz
gs
jmp
add
pop
and
jle
bound
add
cmp
pop
sub
push
jle
inc
pop
jle
rol
pop
js
loope
jl
add
out
jmp
aam
lret
bound
add
aam
mov
xor
sub
add
mov
lock
adc
sbb
xor
mov
jp
mov
les
cmp
insb
outsl
fcmove
jno
loopne
sbb
les
stos
adc
jg
add
mov
or
xor
jo
mov
outsb
test
jno
lcall
jge
mov
cmp
jne
inc
and
incl
fisttps
mov
push
sub
loop
adcl
or
and
cmp
mov
mov
and
and
inc
mov
jle
mov
dec
lret
inc
rcrb
je
and
sub
pop
sbb
mov
jle
dec
scas
js
jecxz
fs
popa
and
lahf
push
cmp
mov
rcll
pop
or
lret
iret
lds
lahf
repnz
stos
pop
sub
sbbl
mov
and
loope
xchg
pop
dec
or
xor
and
jecxz
loope
mov
cmp
push
cs
hlt
or
addr16
xlat
inc
lahf
jl,pt
adc
pop
push
inc
cmp
push
not
scas
stos
dec
les
jnp
out
jge
sbb
dec
jecxz
and
dec
icebp
add
std
pop
lock
aam
cwtl
adc
outsl
mov
mov
enter
fidivrl
leave
dec
mov
mov
cmp
shlb
sub
gs
xor
sub
sahf
ds
mov
sbb
inc
cmp
mov
nop
push
mov
mov
and
inc
cwtl
out
testl
mov
les
push
or
pushf
pop
lods
xchg
jl
sbb
sbb
mov
testb
inc
dec
inc
dec
push
lret
ror
loop
popa
pop
call
adc
xchg
cs
xchg
cld
push
jne
adc
dec
mov
dec
and
or
xchg
sarl
add
inc
mov
add
pop
aas
int3
mov
push
mov
cmp
xor
test
movb
inc
or
inc
cli
loop
paddw
push
and
icebp
std
adc
insb
enter
aad
mov
lahf
sub
ds
cli
push
mov
cli
test
mov
sbb
dec
adc
out
mov
test
pusha
test
js
loope
cli
sbb
jp
adc
or
sub
clc
push
ret
add
addb
in
ret
jp
es
sti
jp
pushf
mov
shrb
in
jne,pn
sbbl
cmp
stos
out
pop
sub
fiadds
push
bound
pop
fstpl
pop
push
sub
xchg
sbb
adc
rolb
ds
dec
inc
ja
imul
sub
dec
mov
in
cmp
arpl
stc
xor
or
out
cwtl
mov
lea
loope
inc
repnz
sub
push
loopne
jbe
imul
dec
andl
add
add
push
xchg
arpl
sbb
daa
adc
cld
les
out
scas
fdivrl
cmpb
xor
xchg
jge
mov
loop
pop
sbb
call
test
cmp
clc
loope
pop
sarl
sar
jmp
inc
mov
pop
push
outsl
jge
mov
push
stos
and
js
xor
gs
push
andb
jge
pop
dec
xchg
xchg
cmp
push
loope
test
jp
bound
inc
push
jo
jl,pt
dec
push
mov
add
testl
mov
clc
inc
mov
or
sub
and
adc
rcr
lcall
pop
loop
mov
cmc
xlat
cmp
cmc
loop
sub
jmp
test
repz
rorb
or
jecxz
adc
push
sahf
sub
sbb
pop
loop
fbld
addb
into
sub
lea
sub
subb
jg
js
or
out
adc
mov
ret
and
cmp
pop
je
jge
rolb
or
enter
pop
cmpsb
sbb
or
adc
or
jne
cld
mov
fld
cwtl
aam
sbb
push
push
clc
mov
pop
es
sbb
out
out
push
js
mov
js
mov
pop
cli
out
jle
js
aas
sub
push
js
lock
movsb
sbb
mov
mov
mov
in
ljmp
lcall
je
jl
fimuls
test
jecxz
xchg
gs
pop
jbe
push
lods
ljmp
push
adc
ljmp
in
add
rol
jmp
lcall
aas
mov
sub
xchg
cmp
sbbl
lock
popa
movsl
jle
push
mov
subb
sbb
push
out
fmul
cmpl
clc
lock
and
out
xchg
xor
jle
add
mov
inc
or
ss
add
xchg
aas
sbb
dec
fisttps
push
or
packuswb
pop
xchg
inc
icebp
mov
jl
mov
data16
enter
mov
repnz
les
inc
loope
inc
sbb
mov
sub
mov
clc
jne
scas
and
sub
cmc
daa
add
push
out
mov
pop
jge
cmp
inc
or
mov
imul
bound
jmp
push
push
test
push
ljmp
and
rol
addr16
das
scas
mov
xchg
enter
enter
jnp
jns
dec
cmp
xchg
ret
outsl
loope
dec
fisubrs
mov
ja
loope
imul
pop
scas
pop
push
inc
mov
sub
cmpsb
mov
jb
movsb
ret
dec
jl
in
push
icebp
sub
negl
pop
adc
les
hlt
bound
adcl
aas
nop
hlt
pusha
repnz
push
mov
cmp
cmp
js
jp
in
jbe
frstor
dec
mov
stos
jg
faddl
jle
loopne
and
lods
call
stos
call
into
cwtl
add
dec
sahf
mov
clc
loopne
xchg
jns
repnz
icebp
mov
or
cs
cmpsb
stos
xchg
xchg
int3
sarl
cld
out
mov
lahf
add
dec
dec
mov
sub
shl
sbb
and
sbb
or
aad
pop
cld
sahf
mov
jle
mov
call
dec
xor
xchg
hlt
add
ljmp
and
fsub
and
pop
fistps
mov
mov
jo
gs
cltd
clc
js
and
sbb
and
mov
xchg
pop
pop
mov
fdivs
enter
adc
fwait
adc
sub
or
xor
in
cmp
mov
addb
and
xchg
pop
or
mov
mov
jb
xchg
jmp
rclb
xchg
and
lock
add
inc
sysret
aam
pop
add
fsub
mov
imul
jge
sti
iret
push
xchg
pop
fcoml
adcb
mov
push
xor
cli
dec
sti
lds
aas
jle
hlt
je
stos
iret
js
xchg
cmpsl
push
cli
icebp
loope
ror
add
inc
pushf
fiadds
pop
cmp
xchg
rolb
push
leave
fildl
lcall
mov
pop
mov
repnz
or
fwait
cmp
cli
xchg
pop
clc
dec
cld
sahf
xor
clc
jge,pt
jo
or
jp
hlt
dec
pop
aas
fisubrs
notb
fidivs
imul
aam
arpl
jl
dec
cmp
fldt
dec
fbstp
sub
inc
rorb
pop
sbb
mov
or
aad
bound
add
clc
hlt
popa
insl
bound
lods
fistl
pop
test
push
mov
out
xchg
sbbb
pop
mov
scas
cmp
pop
test
popa
out
adcb
adc
sub
cmp
xchg
gs
subl
dec
popf
xor
sub
cmp
fadd
pop
or
cltd
std
sahf
scas
mov
mov
add
jle
icebp
mov
or
cmovb
fidivrl
inc
push
scas
les
push
pop
mov
mov
xchg
xchg
sbb
dec
jmp
fiadds
sahf
adc
clc
mov
lods
test
sbb
sbb
lods
rolb
shlb
xlat
lods
sbb
outsl
pop
push
js
repnz
or
xchg
mov
mov
mov
push
push
ljmp
scas
xchg
cmpxchg
ds
adc
xor
call
out
ja
test
cltd
and
xor
das
mov
call
dec
add
shlb
aas
inc
js
jecxz
mov
cmp
jge
adc
dec
sbb
test
ljmp
adcl
mov
xchg
lock
push
adc
pop
add
mov
sbb
xchg
lods
sbb
and
fs
jns
aas
aad
mov
clc
ret
imul
mov
roll
xchg
cmc
mov
jo
pop
imul
or
clc
mov
rorl
cs
call
pop
out
pop
nop
orb
rol
ret
xchg
rcr
test
jle
sbb
jmp
sub
cmpl
push
xor
sbb
lock
adc
mov
mov
test
push
sahf
into
and
int
shll
loop
mov
cli
xor
sarb
sub
pop
aas
mov
jb
dec
loopne
push
dec
or
or
roll
or
outsl
mov
inc
sbbl
xlat
movl
add
dec
arpl
mov
xor
pop
push
cmp
pop
adc
jge
out
sbb
push
push
rclb
adc
test
test
dec
ds
test
aam
cmp
xor
lahf
mov
xor
pusha
add
mov
pop
jo
loop
sarl
stos
imul
icebp
and
rorb
bnd
negb
fucom
insb
xchg
mov
sub
enter
cmc
and
inc
mov
cmp
jo
fidivl
lret
dec
je
les
xchg
cmp
sub
lret
xchg
jmp
hlt
in
pop
inc
bound
cltd
repz
lcall
repnz
js
clc
xor
and
cli
add
push
fiaddl
inc
dec
sti
xchg
mov
mov
or
mov
inc
push
loopne
pushl
push
jmp
clc
jp,pt
xchg
xor
mov
test
sar
add
pop
dec
add
lock
rcr
bound
pop
add
sbb
test
out
ljmp
loopne
jmp
ret
movb
lock
sarl
out
test
lcall
pusha
push
xchg
xlat
in
push
jno
and
pop
aam
fnsave
jle
sbb
jle
adc
sbb
mov
je
out
scas
mov
aad
repnz
adc
ret
imul
push
pop
add
rcll
clc
test
sti
lds
sbb
xchg
jl
cmp
xor
std
rclb
xor
push
push
jl
mov
leave
das
add
jl
cmp
pushf
dec
mov
mov
fidivl
test
cld
clc
loope
dec
in
inc
inc
mov
push
mov
std
jle
call
jmp
bound
dec
insb
xor
hlt
xlat
xor
insb
pusha
sahf
jo
and
je
sbb
repz
pop
push
cmp
ljmp
lret
dec
cwtl
jne
xor
xchg
xchg
nop
fsubrs
fldl
mov
xor
adc
lods
mov
pop
fs
cli
sbb
dec
aam
jne
hlt
sbb
les
test
adc
aam
fdivrl
pushf
outsb
add
stos
das
xor
jns
jl
icebp
loope
idivb
les
xor
arpl
add
fs
push
iret
je
movsb
stos
in
jle
js
inc
push
inc
test
scas
xchg
mov
call
xchg
mov
cmpsl
xor
pop
ljmp
pop
xchg
fisubl
nop
inc
hlt
jbe
in
in
ret
mov
les
jp
sbb
out
mov
adcb
mov
push
aam
bound
popl
movsb
repz
cli
sahf
mov
shlb
arpl
mull
mov
mov
push
paddq
int3
out
push
xor
decb
cmc
gs
fnstsw
mov
pop
push
out
in
orb
leave
test
addr16
sbb
dec
cli
jmp
sub
icebp
adc
jo
push
addb
mov
adc
push
mov
xor
pushfw
and
out
push
mov
inc
jl
jl
aaa
add
lock
sub
dec
adc
cld
cmp
nop
and
scas
jecxz
adcb
pop
jne
and
cmpsb
jecxz
jecxz
mov
aad
mov
loop
je
adc
pop
dec
cmp
adcb
pop
xor
cmpsb
js
sub
inc
loop
mov
std
clc
xor
call
fisubrs
push
pop
les
jno
and
jp
sbb
inc
push
test
es
mov
sub
mov
stos
and
aas
inc
subb
std
mov
fnstenv
js
adc
bound
mov
push
sbbl
loop
scas
cltd
fsubl
into
add
shlb
call
mov
idivl
xor
ret
jmp
jge
mov
add
jbe
xchg
iret
push
cs
push
ds
jl
inc
dec
push
or
dec
mov
outsl
or
paddq
fwait
out
int3
mov
call
sbb
add
std
insl
pusha
hlt
push
in
dec
cmp
jne
lcall
out
stos
push
in
xchg
jbe
ljmp
xor
cld
ss
mov
inc
jnp
ja
jge
loope
popa
test
mov
mov
mov
adc
inc
rorb
pop
inc
pushf
sbb
repnz
sbb
sbb
mov
lods
xchg
js
icebp
jecxz
les
mov
enter
xchg
add
lds
push
data16
push
loopne
mov
pop
pop
mov
cli
mov
bswap
sub
test
sahf
ss
jl
sti
jge
sbb
xor
cs
insb
ljmp
xchg
lods
push
mov
xchg
mov
out
dec
das
sub
mov
cmc
xlat
adcl
mov
jl
icebp
add
push
jo
rclb
daa
mov
xchg
lods
clc
push
ljmp
test
lahf
pop
out
cs
repnz
nop
xchg
rcrb
insb
xor
cs
pop
icebp
jmp
push
and
cld
mov
dec
imul
ljmp
dec
sahf
xchg
repnz
jmp
dec
cli
cwtl
mov
and
and
les
lret
sbb
jbe
mov
sti
inc
shlb
adc
ljmp
cwtl
push
mov
jno
jo
jp
mov
insb
push
sbb
sbb
hlt
insb
loopne
faddl
xor
ret
inc
je
lods
ret
cmp
loope
dec
cmp
fmull
cmc
pop
movsl
daa
movsb
ds
xchg
cmp
jno
sbb
imul
add
mov
mov
aad
icebp
lds
clc
inc
arpl
fisttpll
into
push
sbb
push
cmp
cmp
push
dec
jmp
pop
in
icebp
add
push
and
sbb
enter
or
or
addb
adc
mov
mov
pop
cmp
icebp
scas
andb
insl
pop
xorb
push
sbbb
cs
adc
and
dec
push
jge
roll
and
inc
push
out
jae
dec
inc
mov
mov
jg
pop
jnp
iret
out
dec
ret
mov
jnp
jg
cmp
sti
push
loop
out
lret
js
lock
jp
pusha
test
inc
mov
mov
sub
call
push
cmpsb
sti
lock
or
into
outsb
inc
mov
cli
jo
test
pusha
pop
out
mov
iret
fisubs
sbb
int3
fists
mov
fistps
mov
jl
enter
cmovle
testl
push
sar
lods
mov
adc
xchg
adc
jae
jae
sahf
pop
fildl
mov
icebp
les
lcall
and
fbstp
mov
jecxz
xor
movsb
outsl
nop
jo,pn
add
adc
fs
ss
xchg
push
and
enter
fnstcw
cli
loop
add
test
jmp
negl
sbb
loope,pt
lea
xchg
pop
cwtl
inc
jle
es
fistpl
cld
int
and
sub
testb
sub
pop
int3
stc
jno
insl
loopne
inc
sbb
cmp
mov
movsl
jno
mov
cmp
sub
jo
cltd
cmp
inc
mov
mov
out
adc
push
xchg
pop
push
inc
inc
je
fiaddl
mov
or
cld
cmpsl
cs
sbbl
xor
mov
filds
pop
in
ret
mov
mov
xor
pop
insb
add
pop
sbb
jg
jge,pt
dec
cmp
adc
push
xchg
ljmp
jl
sti
testl
mov
clc
das
ds
loopne
cli
pusha
scas
ljmp
jb
push
call
ds
pop
mov
out
cmp
rorl
push
push
xor
bound
call
mov
ficompl
jnp
dec
pop
jo
clc
sub
adc
mov
icebp
lret
mov
int
popa
sbb
dec
sub
test
aam
xchg
icebp
ret
scas
pop
sub
mov
fcom
ljmp
outsb
mov
lcall
add
sub
dec
push
xor
test
pop
pop
jecxz
adc
sahf
test
sub
push
cmp
jno
mov
sbb
jbe
add
pop
pop
in
jmp
shrl
jl
sbb
lret
sub
mov
xor
jb
mov
xor
aad
sbb
jbe
sub
js
mov
fs
jecxz
inc
shrb
push
mov
sar
mov
xchg
pop
clc
or
loopne
aam
cmovle
clc
xchg
push
pop
cmp
cmp
cs
fistps
pop
xor
and
mov
jbe
dec
xor
pop
sarl
push
aam
aad
mov
out
popl
shrb
pop
in
inc
fildll
mov
sub
push
lcall
jb
cmp
push
dec
jmp
pop
clc
out
xor
dec
cmp
fcoml
scas
xchg
mov
outsb
xchg
and
int3
in
cld
cmc
add
ss
pop
dec
scas
fcmovbe
or
sti
and
inc
dec
cli
jp
hlt
mov
pop
pop
enter
add
sarb
clc
mov
pop
dec
popa
pop
addb
scas
loop
add
or
push
dec
xor
lock
inc
push
mov
enter
xchg
js
and
add
insl
loopne
pop
je
lods
fwait
mov
lea
sahf
push
xchg
out
orl
inc
sbb
jo
cli
mov
rolb
popl
inc
sbb
and
cmp
xlat
adc
or
out
xor
out
scas
add
and
pop
mov
xor
dec
sub
ret
xchg
icebp
xlat
and
ficomps
dec
ljmp
shrl
clc
insl
aam
shrb
inc
out
pop
in
sahf
lods
pandn
dec
inc
jle
cmpb
dec
xchg
mov
test
fidivrs
lcall
ds
pop
mov
aam
fsubrl
pushf
mov
das
lock
adc
add
jbe
lock
lock
data16
pop
cltd
or
jge
movsb
in
fnstenv
mov
push
inc
xor
add
or
test
leave
loope
js
push
push
sbb
xchg
jge
jo
data16
dec
pop
pop
mov
add
adc
fnsave
outsl
pop
pop
lods
xor
pop
cltd
mov
scas
add
fdivr
out
adcb
ficoml
adc
add
push
mov
ret
mov
mov
and
sar
add
mov
cltd
out
cwtl
adc
mov
and
jle
pop
ret
push
sub
inc
cs
stos
rorl
mov
sub
jl
shlb
mov
or
mov
enter
sbb
add
jle
clc
cwtl
push
stos
push
sub
icebp
mov
insb
or
fcompl
aad
fcompl
clc
adc
jo
pop
mov
xchg
imul
mov
xor
jecxz
or
jb
movl
icebp
cwtl
loopne
lcall
lahf
add
call
sub
loopne
rclb
mov
test
mov
pop
jbe
dec
jl
leave
mov
filds
lods
rorl
xorb
cmpsl
adc
pop
lea
mov
cmpsl
pop
fisubrs
testb
dec
adc
cli
cmc
call
mov
mov
adc
mov
jno
mov
push
pop
jge
sbb
jbe
lods
mov
fisttps
add
adc
or
cmp
add
or
loop
lock
jle
xchg
addr16
adc
arpl
out
sarb
mov
hlt
and
not
push
test
sub
xchg
push
cld
les
mov
dec
mov
jns
sbb
jl
sub
repnz
out
add
jmp
jb
gs
ds
and
fbstp
icebp
mov
sbb
and
xchg
in
inc
clc
movsb
mov
xor
xchg
scas
pop
mov
movsb
mov
icebp
daa
and
pop
pop
lock
adc
pop
and
mov
es
pop
pop
mov
push
pop
imul
push
lret
cli
jmp
pop
jl
lahf
xchg
test
mov
xlat
dec
outsb
mov
in
xor
pusha
and
inc
das
js
lods
fisubl
in
jl,pt
jp
push
push
inc
mov
add
adc
xchg
loope
ss
pushf
je
xor
or
or
xchg
hlt
loopne
dec
inc
push
hlt
sub
js
dec
stos
inc
lods
shlb
call
mov
jmp
aaa
outsl
addr16
movsb
out
lock
clc
and
test
shl
orl
mov
mov
cmp
inc
adc
cld
clc
enter
sar
ret
and
je
popa
push
shlb
scas
jo
jecxz
adc
sub
repnz
clc
insb
or
bound
dec
and
xor
mov
sbb
add
pop
cmpsl
push
mov
pop
mov
cmp
mov
xchg
cld
lock
mov
or
clc
push
movsb
push
pushf
cmp
cmp
inc
insl
pop
jl
icebp
mov
dec
cmc
fsubl
sbb
out
mov
mov
dec
fs
xchg
add
pop
mov
dec
js
jl
or
fcomi
jge
jl
into
popa
cmp
push
into
adc
cmc
out
lock
jno
fs
jo
push
jge
xor
idivb
jp
and
aam
add
call
push
xor
mov
xchg
mov
shlb
mov
push
fxch
cmp
xor
push
adc
xorl
adc
mov
pop
popa
ja
mov
iret
push
fmuls
faddl
in
push
jo
ret
push
sbb
pusha
mov
mov
jle
aas
dec
mov
mov
mov
imul
adcb
clc
push
shll
jo
data16
dec
jne
lret
inc
push
cmc
fs
ja
loopne
in
stc
test
xor
sti
loope
fldcw
jo
jle
das
rorl
rolb
insl
cmp
inc
mov
adc
hlt
mov
orl
rcr
and
fwait
push
stos
push
jp
xor
loop
sbb
xchg
xor
cmp
sbb
push
scas
add
xor
dec
xlat
xorb
loop
out
jmp
or
xor
ficoml
ss
xor
sub
mov
clc
test
pushf
and
sti
scas
mov
mov
cmp
scas
cmp
in
cmp
pop
aam
mov
push
jecxz
test
mov
pop
test
lock
enter
loop
push
mov
jp
bound
test
into
and
and
pop
pop
fiadds
loop
shrb
dec
push
fcomip
std
pop
movsl
cmp
clc
inc
jno
pop
pop
cmpsb
adc
loope
mov
mov
and
cld
out
movsb
sub
clc
ret
push
xor
push
push
and
jns
sti
ds
push
repnz
sahf
bound
shlb
cwtl
div
loopne
out
and
out
js
jp,pn
mov
pop
je
popf
loopne
lahf
stos
test
adc
xchg
lcall
xchg
ds
or
pop
push
int3
arpl
adc
mov
cli
push
insb
and
mov
repnz
or
movb
dec
push
mov
pop
mov
adc
cmp
mov
imul
sub
inc
mov
adc
and
dec
xlat
mov
stc
scas
push
loop
aam
mov
inc
fisubs
mov
mov
sahf
dec
mov
outsb
ret
mov
and
js
sar
mov
je
pop
aas
popa
sbb
or
pop
ds
loope
mov
imul
loopne
sti
mov
aaa
add
mov
ljmp
sbbb
sub
mov
jp
sbb
jg
inc
shr
add
test
xor
ret
push
test
xchg
popf
int3
jo
mul
pop
jg
xor
dec
or
adc
push
mov
clc
ljmp
mov
addb
or
cmp
xor
push
add
test
data16
in
clc
cmc
leave
mov
pop
out
aas
and
mov
insb
sub
cltd
cli
xchg
adc
gs
sub
ds
nop
jg
push
cmpsl
jmp
rcll
pop
xchg
inc
xchg
pop
cld
lock
test
sbb
loopne
inc
lock
or
cmp
or
pop
clc
cmp
shl
or
pop
jmp
pop
cld
clc
push
bound
push
in
sbb
outsb
imul
pop
pop
push
pop
adc
adc
flds
and
and
jp
mov
pop
add
sbb
cvtdq2ps
daa
mov
jg
and
xor
sbb
mov
inc
pop
je
pop
popa
push
lcall
push
into
add
sbb
adc
dec
les
sbb
mov
movsl
out
enter
cli
jno
jecxz
daa
cli
in
adc
add
push
mov
adc
mov
aad
mov
sbbl
fcomp
pop
dec
les
icebp
aad
loope
les
push
sbb
mov
or
lds
cwtl
addr16
adc
inc
test
rol
ss
pop
nopl
xchg
cld
inc
sbb
mov
or
mov
sbb
test
out
cmp
out
sub
push
lcall
ds
sbb
push
out
std
and
daa
pop
loop
mov
xor
in
not
js
cmp
iret
mov
mov
popa
push
pop
data16
fwait
cmc
jge
shll
js
imul
and
push
xchg
cmpl
lock
js
xchg
inc
jns
push
es
clc
adc
mov
clc
jbe
scas
pop
push
mov
bound
jmp
icebp
imul
jle
aaa
jle
mov
inc
shlb
adc
fiadds
add
cmp
mov
cld
clc
sub
push
in
and
lock
xchg
or
inc
add
orb
nop
or
mov
jle
pop
lahf
mov
or
call
out
nopl
cmpsl
jge
addb
pop
mov
js
pop
mov
sbb
or
adc
xlat
pop
xchg
jg
xor
lret
jmp
jmpw
cs
test
clc
add
repnz
movsb
stc
stos
jnp
mov
sbb
dec
or
jmp
jns
outsl
cld
iret
fiadds
sbb
ror
int
in
icebp
orb
add
fs
das
xor
pop
or
iret
int
enter
testb
cmp
cmpsb
jle
loope
adc
push
aaa
imul
hlt
enter
pop
cmpsb
mov
xchg
mov
cmp
cmc
xchg
or
out
pop
popa
subb
mov
pop
mov
bound
xchg
xor
mov
pop
add
xorb
xchg
ss
pop
pushf
xchg
loop
push
test
cmp
cmp
loop
jp
dec
test
pop
pop
push
sub
outsb
mov
filds
bound
mov
cmc
sbb
push
add
add
loop
test
das
mov
jl
ss
addr16
and
pcmpgtb
adc
rolb
lock
mov
push
cmp
movsl
int3
mov
fwait
js
dec
jp
push
pushf
jae
scas
jle
jp
adc
lock
dec
push
clc
add
adc
in
imul
dec
jle
mov
jl
scas
notb
or
bound
inc
or
cmovl
enter
hlt
loope
cmp
sarb
jg
sbb
push
or
xlat
or
pop
fwait
pop
sub
sub
jecxz
push
xchg
test
fcmovu
pminsw
mov
mov
and
mov
xor
pop
cld
js
andb
hlt
out
jp
incb
pop
pop
repnz
insb
and
testl
lods
pop
shr
and
adc
add
std
jp
jbe
push
sub
leave
mov
inc
dec
aad
xchg
outsl
pop
mov
xor
xor
lcall
sbb
pop
int
loopne
popl
loop
ljmp
mov
icebp
push
arpl
pop
inc
clc
jle
inc
aas
ljmp
je
call
pop
int
shrb
jbe
je
lods
ret
xorl
cld
icebp
push
push
mov
xchg
and
add
push
pushf
sahf
push
xchg
lea
sub
rcrl
xchg
or
leave
xchg
mov
jns
enter
je
pop
das
inc
loopne
mov
out
jnp
adc
mov
ds
es
jecxz
je
sub
push
je
loop
icebp
pop
cmp
fildl
mov
movd
sub
data16
loope
push
pop
add
dec
pusha
and
mov
dec
jae
pusha
jecxz
adcb
push
clc
jo
cmpsb
xor
push
lods
aas
sbbb
cmove
mov
fdivrs
adc
nop
ret
test
dec
shlb
not
sti
mov
insl
in
sbb
push
data16
and
in
cmp
out
jbe
sub
cmp
dec
idivl
arpl
sbb
xor
bound
es
add
mov
sbb
arpl
push
clc
sub
imul
adc
loopne
adc
mov
ds
pushf
test
clc
add
loopne
daa
cld
inc
mov
jecxz
test
lret
xchg
adc
mov
and
xchg
aad
xorb
ficoml
pop
or
pop
cmpsb
mov
jmp
mov
mull
jl
ss
cmp
aad
mov
rolb
sub
adc
adc
and
ficomps
xchg
mov
es
lds
adc
nop
adc
dec
and
stos
psrad
xor
xor
xchg
jbe
out
mov
mov
xor
lret
out
std
jp
cli
test
xchg
add
jge
clc
insb
sbb
popa
push
push
imul
xchg
sub
rol
movsl
dec
dec
cmpsb
sbb
clc
mov
ja
nop
loop
xchg
push
xchg
clc
jb
jle
jnp
icebp
sub
pop
inc
pop
push
loopne
push
push
scas
mov
fs
pop
mov
add
pop
sub
dec
push
pop
call
push
cli
loopne
in
mov
adc
nopl
aam
repz
add
cmp
sti
test
push
rcl
mov
cmp
jmp
add
inc
add
push
pop
mov
and
loop
orl
mov
jb
insb
into
movzbl
dec
clc
cmc
lcall
sbb
lock
data16
sub
repnz
inc
dec
inc
mov
cli
pop
push
adcb
cli
add
jg
lock
mov
cltd
xchg
repnz
pop
ds
push
scas
insb
loop
cmc
bnd
loop
mov
add
lock
add
pop
pandn
dec
xbegin
mov
rclb
mov
ret
lds
incb
sahf
mov
xchg
sbb
pop
out
sti
fcoms
inc
out
mov
cmp
xchg
repnz
out
rclb
dec
mov
rcrl
xorl
or
add
mov
pushf
pop
mov
dec
ss
mov
xchg
hlt
cmc
loope
and
dec
popf
or
push
sub
xchg
fs
rolb
mov
ds
lret
jecxz
inc
lret
dec
aad
es
andl
mov
popl
sbb
out
pusha
sbb
subl
mov
mov
sbb
pop
cs
sub
sbb
cmc
aad
jle
ss
pop
test
adc
add
mov
mov
add
in
jecxz
sti
jmp
out
enter
in
out
imul
or
push
pop
adc
mov
subl
mov
mov
lds
loop
xor
mov
es
cld
sbb
dec
mov
push
outsb
sub
pop
xchg
ds
mov
mov
dec
sbb
data16
inc
std
mov
xchg
in
push
jb
imul
jnp
add
mov
and
ljmp
rcll
adc
filds
pop
lds
fs
adc
jnp
aam
test
cmp
mov
xchg
stos
mov
mov
jbe
mov
jl
leave
js
cld
pop
es
loopne
jmp
mov
cmp
cmp
fs
lcall
arpl
mov
das
lods
xor
hlt
fcmovb
ret
push
and
lret
loop
adc
loop
lret
cli
or
leave
int
xlat
negl
inc
mov
sbb
stos
mov
imul
push
pop
lret
aam
call
push
xlat
push
push
out
jp
ljmp
add
movsl
inc
jecxz
xchg
clc
mov
sbb
adc
into
ret
js
push
inc
xchg
mov
repnz
js
cltd
cwtl
xchg
aam
inc
jge
iret
xor
enter
cs
repz
inc
test
adc
cmp
clc
js
das
movsb
imull
stos
in
cmpsl
sub
movsl
add
sub
pop
cmp
mov
mov
mov
into
or
xor
cmp
rolb
jp
icebp
js
stc
add
sub
in
or
sbb
loop
xchg
push
add
and
jmp
pushl
scas
or
in
das
mov
aam
mov
fisubrl
mov
inc
out
pop
sarb
jl
movsb
mov
loopne
gs
cmp
push
les
mov
add
mov
enter
hlt
dec
aas
jbe
push
ror
mov
jbe
inc
stos
fdivrp
js
loop
fstps
shll
daa
sbb
aad
and
xor
sub
pusha
fbld
mov
pop
test
hlt
dec
arpl
andl
push
fildll
push
xchg
pop
mov
sbb
test
bswap
in
sbb
adc
and
cmp
mov
mov
sbb
xor
mov
jbe
or
cmovle
xor
xchg
jp
arpl
ss
sub
adcb
aaa
cltd
outsb
out
clc
jp
pop
adc
fwait
inc
outsb
shl
jp
orl
ljmp
push
add
pushf
add
outsl
rorl
mov
sbb
dec
mov
cmp
shll
repnz
push
jp
ret
pop
leave
js,pn
inc
cmp
in
imul
sahf
out
cmp
fisubrl
lcall
loope
inc
adc
daa
sbb
and
ret
push
sahf
sahf
bound
mov
addl
pop
nop
jp
and
aaa
mov
mov
and
pop
pop
push
mov
mov
dec
mov
cli
sub
mov
xor
pop
pop
out
xchg
or
xchg
adc
ds
ret
pop
fs
dec
mov
jle
pop
jle
jle
push
in
jge
mov
test
test
lret
push
ja
outsb
push
pop
sbb
adc
ret
cmp
outsb
xchg
pop
add
sbb
shl
push
icebp
mov
out
xlat
pop
inc
adc
sbb
mov
add
pusha
push
xchg
fidivs
js
insl
inc
call
lret
add
rorb
enter
xchg
cwtl
jae
inc
pusha
and
nop
test
notb
push
pop
ja
cli
aam
es
fildll
jb
clc
push
mov
ljmp
xor
ss
sbb
xchg
jne
icebp
mov
xchg
inc
test
mov
sahf
stos
into
out
shl
mov
pop
das
cld
sub
mov
pop
jbe
cmp
sti
jmp
sbb
fdivl
out
mov
or
shrl
mov
adc
scas
add
and
and
add
lcall
scas
pop
stos
push
mov
imul
mov
xchg
inc
fistpll
leave
fsubs
sub
sbbb
out
rclb
and
out
jp
push
es
stos
dec
pop
pop
pop
js
inc
lret
mov
mov
cmp
mov
loop
je
push
jg
inc
xor
or
movsl
mov
es
ljmp
aas
out
sub
aam
hlt
sbb
ficompl
call
js
mov
lea
sbb
jg
dec
aas
std
je
pop
pop
scas
test
lods
rorl
mov
xchg
test
jnp
bound
insl
sahf
xor
pop
cli
call
dec
push
ss
aam
pop
fmuls
cli
mov
pop
imul
push
mov
stos
lock
cltd
xchg
and
adc
pop
jl
imul
addb
in
cmp
or
push
jp
lock
lcall
pop
pop
or
push
xor
icebp
loop
ret
fnstsw
push
mov
jno
jge
lahf
shll
ret
and
insl
or
pop
cmp
sahf
ret
ljmp
jle
jl
mov
inc
adc
cmpsb
dec
out
scas
outsl
jno
shlb
ret
ret
xor
out
or
and
out
es
dec
xchg
orl
adc
jmp
mov
lcall
sysenter
pop
sti
repnz
daa
test
test
ss
add
pusha
jecxz
sbb
sbb
out
cld
adcb
push
mov
rcl
std
jle
lret
push
jge
clc
pushf
cs
inc
shrb
jbe
or
es
fs
or
les
gs
les
ljmp
lock
cwtl
stc
add
inc
sub
xlat
xor
xchg
scas
mov
repnz
jmp
cltd
out
rorb
or
test
xchg
mov
scas
test
loop
sbb
and
mov
push
sbb
ret
cli
and
repnz
pop
pop
js
jecxz
push
push
jl
in
jo
add
cmpb
jp
inc
sbbl
dec
push
sti
ret
aam
rol
sbb
mov
pop
mov
or
es
jbe
stos
or
sbb
outsl
push
fcoml
mov
imul
and
outsb
adc
xor
out
call
dec
inc
xchg
ds
ret
call
pop
pop
dec
pop
mov
ljmp
ljmp
jp
inc
dec
push
sbb
xchg
push
pushf
fcmovu
xchg
adc
test
aad
jle
sahf
lock
bound
ret
dec
loop
clc
mov
xor
ds
les
data16
sbb
int3
sub
push
shl
mov
test
hlt
xchg
aam
xorb
mov
test
es
test
and
shl
lock
pushf
sahf
push
and
ficomps
negl
inc
in
fs
rol
pop
mov
std
or
ljmp
das
jle
clc
in
jecxz
push
sbbb
stos
rcrl
loopne
sub
dec
pop
xchg
lret
addb
mov
scas
sbb
clc
out
test
pop
cli
testl
imul
insb
cmp
push
iret
cwtl
mov
ja
loope
dec
sahf
scas
pop
sahf
scas
cmp
sbb
ret
add
sbb
insb
jnp
adc
test
inc
insb
aas
repnz
dec
nop
ja
mov
jp
imul
sbb
push
pop
shl
add
push
jmp
xchg
popf
fdiv
jl
jge
dec
loop
inc
ljmp
mov
outsb
and
push
jl
shr
aaa
sbb
andb
xor
jg
inc
orb
push
adc
add
sub
mov
xchg
ror
and
mov
leave
dec
mov
aas
fstl
lods
jp
mov
pop
pop
add
lods
ret
stos
fimull
push
aad
inc
mov
inc
pop
or
dec
pop
push
bound
jo
cs
jo
lahf
out
cmpsl
cmc
repnz
out
dec
mov
or
push
pusha
jge
test
push
jb
jge
js
or
pop
pop
cmp
jbe
dec
fcom
push
rolb
sbb
sbb
mov
enter
fs
fisubl
hlt
clc
or
xchg
jge
pop
sbb
dec
subb
aas
mov
aaa
faddl
mov
xchg
dec
jb
repnz
xchg
mov
or
push
mov
cmp
clc
je
mov
xchg
xchg
pop
jp
aas
mov
mov
es
inc
addr16
and
pop
inc
ret
add
js
and
in
push
lret
sti
pusha
ljmp
push
loopne
sti
loope
stos
dec
pop
cli
adc
lahf
hlt
rorl
enter
ss
ficompl
xor
cld
or
cwtl
das
and
pop
sub
ud2
xlat
cmpb
fisubrl
ret
mov
cmpl
fs
push
cs
add
mov
jbe
mov
cmc
negb
xchg
insb
adc
or
xchg
push
mov
int
push
mov
inc
out
and
sti
adc
jb
pop
ffreep
cmp
inc
cmp
daa
loop
mov
xchg
insb
pop
sbb
pop
mov
dec
aam
mov
and
lods
imul
movsb
xorl
es
pop
cmp
icebp
push
mov
loopne
pop
push
scas
inc
out
hlt
ss
mov
pushw
ds
es
or
xchg
jp
hlt
jecxz
ja
lret
lret
xor
insb
jl
lock
adc
xor
cltd
pushf
pop
xchg
cmpsl
imul
cmp
enter
sub
je
add
dec
pop
out
test
decb
in
xor
mov
ds
lea
xchg
mov
adc
cmp
fadds
mov
xchg
sub
cs
xchg
pop
adc
rclb
add
inc
jmp
jbe
inc
xchg
dec
loope
sbb
dec
mov
xabort
sarb
jmp
in
int
sub
xor
clc
push
fadd
dec
lahf
loop
cwtl
lret
mov
faddl
js
fisttpl
loopne
lods
dec
leave
inc
lods
inc
sub
clc
cld
icebp
fwait
mov
es
xor
cld
insb
repnz
fimuls
rcll
sbb
fiadds
xor
pop
clc
push
add
xchg
jmp
maxps
push
icebp
fcoms
gs
shlb
mov
adc
fwait
dec
mov
or
cwtl
bound
jp
gs
rolb
inc
cld
mov
pushl
nop
cs
test
out
add
loopne
out
lods
sub
pop
add
jp
pop
xor
int3
adc
push
push
repnz
pop
and
xchg
jp
jne
inc
in
push
out
sub
mov
inc
jle
dec
in
mov
ss
pop
add
test
mov
pop
cmp
add
sbb
jmp
jne
push
aas
jle
leave
xchg
loopne
xor
das
pop
jl
inc
mov
mov
xorb
add
mov
rcl
lret
jbe
xchg
dec
popf
lods
dec
push
xchg
std
repnz
jl
mov
pop
pop
xchg
add
jge
cwtl
mov
orb
call
hlt
cmp
or
in
sub
jnp
addr16
cmp
cli
and
fstl
sub
popa
loopne
jmp
cld
hlt
cmp
call
mov
jecxz
pop
clc
sarl
push
sar
xor
daa
or
and
push
mov
cmp
loop
bound
mov
or
pop
push
cltd
mov
into
into
lea
scas
sub
inc
push
push
test
sub
lahf
sub
lahf
xchg
mov
add
sbbb
mov
ret
and
xor
push
xor
punpcklwd
into
movsb
pop
mov
push
div
sti
aad
lret
mov
sub
es
and
hlt
push
repnz
addb
mov
and
sub
popl
mov
stos
aam
icebp
xchg
rclb
or
mov
pop
jge
mov
jl
push
addl
ficomps
out
jnp
loope
pop
cmpsb
sti
out
push
jbe
sahf
jp
clc
xchg
rolb
data16
loop
call
stc
mov
xchg
movsb
jo
xor
push
and
pop
adc
xchg
push
movsb
in
jne
shll
jp
add
outsl
addr16
lds
jbe
fcompl
mov
loop
scas
outsb
fwait
cmp
jg
inc
les
xor
jecxz
sti
cld
ljmp
sbb
cmp
cmp
stc
push
hlt
imul
sub
lahf
xor
fstl
loop
push
inc
cmp
sahf
sub
inc
jecxz
dec
and
fs
push
jo
pop
jo
lods
mov
cmc
add
test
sbb
sub
ret
add
cmp
cld
jno
jbe
mov
adc
sub
rol
hlt
cmc
jbe,pn
dec
loopne
js
xchg
push
aas
rorb
adc
ret
test
imul
mov
push
mov
hlt
call
sub
inc
loope
cwtl
pop
xchg
test
sbb
test
insb
shlb
and
aas
scas
pusha
xor
mov
mov
mov
pop
faddl
js
add
fs
out
fsqrt
and
and
mov
inc
lea
pop
inc
cld
mov
out
or
hlt
call
or
lock
jl,pt
cltd
aad
adc
pop
add
jbe
lds
push
fdivrl
or
cmp
xor
ja
push
cmc
lahf
in
add
xchg
rcl
xor
stos
xchg
clc
add
shlb
mov
aas
jl
lret
cmp
xchg
push
and
xor
mov
mov
sbb
mov
and
rorb
add
imul
movsb
fs
cmc
fstl
push
mov
shr
fbld
subb
or
roll
pusha
jp
or
out
lock
loope
pop
cs
push
sarb
or
push
mov
sub
jp
pop
incb
inc
push
or
aaa
adcl
shrb
jmp
xor
loop
sub
ret
mov
cmpsb
push
pop
gs
test
mov
mov
dec
inc
mov
cli
out
fcmovnb
inc
inc
std
fwait
adc
jge
mov
inc
leave
shr
ds
push
push
adc
pop
adc
sbb
stos
xchg
mov
mov
cmp
or
movsl
and
pop
loope
xor
pop
insb
imul
push
or
push
shlb
loopne
and
xorb
ds
and
stc
popa
jge
cmc
fcmove
xor
in
mov
dec
mov
fists
mov
inc
xchg
shl
add
or
cli
lock
mov
mov
je
xchg
shrb
lods
insb
in
push
js
xchg
call
out
inc
sti
pandn
mov
loopne
ficoml
loopne
inc
inc
add
add
xor
orl
add
inc
adc
mov
dec
ffreep
mull
rolb
mov
movsb
push
shlb
shlb
or
mov
push
stos
pop
inc
mov
push
or
rol
dec
repnz
pop
out
and
fldenv
xchg
loop
lret
jg
push
into
xor
andl
mov
loop
icebp
cs
mov
ds
insb
pop
xchg
adc
xchg
mov
push
aad
mov
sbb
enter
ret
rol
sub
cmp
push
loopne
xchg
lds
sub
cwtl
inc
out
clc
sub
out
iret
adc
xlat
ficomps
push
xchg
aaa
mov
mov
lock
mov
xor
or
roll
outsb
daa
or
mov
mov
in
mov
cmp
sbb
cli
pop
into
pavgb
cmp
cmpsb
je
inc
cs
addb
cmp
fidivs
sbb
cli
ds
xchg
mov
push
test
jle
jl
out
shlb
call
mov
sti
mov
xor
fimull
pop
dec
ret
pop
loop
ret
dec
movsb
pusha
call
xor
sti
insb
jl
pop
mov
jno
icebp
sbb
ret
adc
or
inc
pushf
aas
pop
js
xchg
cmc
inc
or
test
pop
xor
testl
or
das
adc
and
sub
mov
pop
out
mov
clc
mov
xor
icebp
movb
ds
cmpb
loope
inc
ret
inc
xchg
or
leave
out
dec
sbb
push
mov
inc
jp
movb
clc
sahf
xor
shlb
jecxz
movsl
and
xor
lcall
mov
jbe
push
xchg
mov
cmp
jle
inc
mov
movsb
dec
sbb
cmp
call
mov
cmp
ret
clc
or
clc
push
mov
pop
addb
cli
and
xor
adcb
dec
xchg
and
popf
mov
inc
jecxz
sub
daa
hlt
jecxz
mov
or
jmp
jne
pop
mov
call
mov
adc
in
cli
lods
push
cmp
or
add
ss
sti
inc
push
ret
dec
outsb
jnp
popa
inc
aas
push
sbb
aam
int3
and
outsb
cmp
iret
add
and
clc
mov
rol
movb
adc
add
int
cli
mov
je
roll
call
cli
lock
loop
sub
mov
dec
loop
mov
outsb
cmp
cmpsb
pop
pop
paddsb
sbb
mov
popa
loope
fwait
pushf
sub
mov
or
xor
and
jo
lods
sbb
push
imul
mov
iret
mov
pop
arpl
or
loope
mov
cmc
mov
mov
jle
mov
fs
and
mov
inc
cli
scas
ds
lock
or
dec
pop
push
push
sub
adc
mov
mov
xorb
scas
add
ror
lahf
orl
fiaddl
out
inc
out
pop
out
aaa
scas
inc
mov
notl
add
add
ret
adc
xchg
and
mov
jbe
mov
aad
xchg
in
sub
dec
hlt
lcall
jbe
or
out
ljmp
pushf
orb
jp
adc
inc
movsb
out
fiaddl
les
dec
adc
mov
pop
jo
fisubl
scas
fadds
bound
in
jo
push
lock
clc
push
fsubrl
pop
push
mov
iret
ss
repnz
rolb
mov
inc
mov
push
mov
addr16
pop
cmp
ljmp
cld
push
cld
jnp
xchg
sub
call
pop
fadds
arpl
test
inc
mov
sbb
pop
ljmp
push
repnz
jle
insb
call
pop
lea
jge
pop
test
pop
mov
cmc
sahf
sub
jecxz
push
insb
cmp
xchg
js
jl
dec
jge
cltd
jo
jmp
pop
mov
rcl
outsb
insb
orl
je
test
jmp
and
std
in
dec
mov
cs
es
outsl
test
std
xlat
or
subb
pop
jp
pop
shlb
or
lret
add
js
add
pop
jmp
icebp
ret
sbb
cmpsb
in
lea
xorb
test
mov
out
mov
jl
mov
push
inc
pop
push
sbb
adc
adc
pop
fcomps
loopne
negb
push
loopne
jl
jecxz
shrl
int3
loopne
or
ficoml
mov
xor
mov
xlat
in
sbb
inc
mov
sbb
cmp
ds
push
mov
lcall
orl
inc
fists
insb
outsl
jbe
fimull
mov
bound
cmp
call
fcompl
cmp
cmp
fidivrl
dec
cmp
push
inc
pop
inc
sbb
icebp
dec
aam
rcl
setl
jg
into
sahf
sbb
shl
mov
pop
inc
add
lret
jge
jo
scas
dec
push
cmc
mov
push
scas
scas
push
pop
or
cmp
cs
mov
scas
fistpl
ds
cltd
clc
sub
negb
push
sub
xchg
movb
add
mov
ret
jge
scas
inc
cli
rol
call
js
lods
push
inc
rcrb
pop
rclb
dec
dec
das
sbb
int3
movlps
xchg
stos
loope
pop
pcmpgtd
sub
sbb
push
mov
jne
mov
hlt
xchg
nop
mov
loopne
cld
inc
mov
sbb
add
es
sub
sub
cmp
add
sbb
icebp
mov
stc
sub
or
popf
js
adc
push
dec
push
in
inc
ljmp
je
pop
cmp
test
test
add
out
dec
push
jge
cmpb
cvtps2pi
jbe
pop
inc
rol
clts
xchg
in
mov
movsb
dec
fstpl
ret
jle
nop
jp
sub
fdiv
add
pop
jle
mov
rorl
loop
loopne
in
sahf
mov
xor
data16
jmp
inc
call
xor
or
add
scas
sahf
fnstcw
jl
insb
sub
pop
mov
gs
xor
insb
mov
addl
cmp
push
mov
fldt
repnz
push
and
sbb
ss
cwtl
scas
lock
mov
cwtl
in
insl
inc
sub
cmp
sub
lahf
xchg
dec
cmpb
icebp
jmp
pushf
pop
cld
outsb
mov
or
jge
dec
and
cmpsl
rorl
cwtl
sbb
icebp
loop
imul
xchg
js
mull
mov
ljmp
sbb
pop
and
ja
popf
out
rclb
test
and
cmpsb
lods
mov
push
push
mov
mov
sti
inc
jmp
shlb
xor
ret
lock
aam
xchg
sub
ds
into
imul
cli
ficompl
pop
lock
mov
je
mov
test
xchg
pusha
mov
hlt
mov
xor
inc
pop
mov
inc
sbb
mov
lds
mov
adc
jl
js
dec
shrb
test
fucomip
add
sbb
jno
dec
jbe
jo
ljmp
and
sbb
mov
push
dec
cli
and
sbb
sbb
rcrl
push
push
bnd
mov
mov
addr16
cmc
cltd
orb
ds
dec
cwtl
out
lock
punpckhdq
testb
dec
in
push
jle
push
sti
hlt
aas
sub
lea
sbb
inc
push
insb
cmpsb
xor
mov
clc
push
xor
scas
and
ja
not
js
jle
fcoms
mov
out
or
rcrl
stc
test
add
dec
shll
and
es
push
ret
sbb
es
call
xorl
shl
int
pop
loope
xchg
imul
idivl
cmp
test
dec
sbb
pop
cltd
mov
in
cmp
pop
add
mov
mov
mov
call
mov
cmp
cmc
pop
rolb
xchg
ss
and
imul
js
xor
clc
imul
and
xor
dec
cli
mov
mov
loop
jb
sbb
out
adc
push
bnd
ljmp
mov
jnp
mov
loope
add
and
shrb
scas
pop
add
outsb
mov
lock
out
lock
test
cs
cs
ret
shrb
lods
sub
lea
mov
dec
or
mov
subb
pusha
stos
xor
xchg
mov
adc
xchg
cvtps2pd
sbb
hlt
call
sub
in
ds
rol
xchg
loopne
sub
xchg
xor
insb
push
es
dec
sbb
ljmp
loop
jbe
aas
mov
sbb
add
xchg
sub
fwait
lock
sahf
xchg
bound
lock
add
jb
in
jno
sub
pushf
fimull
add
lds
push
mov
int3
sub
mov
ds
xchg
push
ljmp
leave
inc
pushf
sbb
pop
sahf
lods
pop
mov
cld
orb
jecxz
repz
xor
outsl
loopne
stos
int3
and
cmp
mov
push
cmc
jno
xchg
push
insl
inc
pop
push
mov
clc
jecxz
into
movsb
push
jo
or
jecxz
scas
shl
sub
sahf
incb
fisubs
pop
out
dec
outsb
sarl
pop
lcall
movsb
mov
xchg
fists
xchg
jne
xor
dec
jge
je
dec
sahf
pop
jge
jo
test
sub
or
jge
xor
test
daa
test
mov
rcrb
shrl
cli
xchg
jo
adc
jmp
mov
into
xchg
je
icebp
xchg
mov
emms
push
js,pt
jmp
mov
fiaddl
or
add
jecxz
jo
push
push
inc
inc
cld
dec
fsubrl
in
or
cli
adc
inc
sbb
fs
and
setle
cmp
cmp
xchg
dec
xchg
ja
daa
inc
pop
aam
andl
push
pop
loopne
cmpsl
movsl
push
jo
push
repnz
jle
cmc
lods
inc
scas
and
outsl
pop
push
adc
icebp
jecxz
mov
ss
fsts
mov
fdiv
mov
ja
sub
add
xor
jle
ljmp
pop
pop
pop
incb
push
movups
inc
lea
jo
and
push
ss
data16
sbb
jae
and
scas
jle
cmpsl
jle
in
fisttpll
loope
jecxz
mov
jmp
addr16
inc
mov
cli
sbb
sahf
fs
repnz
fsubl
sbbl
jge
xor
cmp
cs
rcrb
jmp
mov
sahf
test
mov
push
jle
das
pop
pop
dec
aam
hlt
add
ljmp
sbb
insl
mov
xor
cmpsb
sub
add
add
mov
push
jge
sbb
cmc
sbb
div
dec
mov
or
mov
divb
or
pushf
jecxz
mov
loopne
shll
mov
or
bnd
dec
das
outsb
lret
test
add
add
fst
in
scas
neg
fdivrl
shlb
add
cmpsl
lds
nop
cmp
loopne
hlt
adc
mov
mov
and
cmp
popa
jecxz
mov
pop
ljmp
cmp
out
adc
leave
clc
std
inc
or
icebp
loope
jae
fistl
mov
sti
arpl
add
sahf
stos
lods
fimuls
add
stc
psubb
xchg
data16
lcall
cli
lock
mov
sbb
lock
add
clc
fcoml
mov
lods
js
test
xor
loop
and
xchg
js
andb
cmp
or
dec
push
stos
roll
popf
and
fistps
cmc
push
push
xor
xor
mov
pop
mov
push
es
jp
mov
jecxz
add
pop
pop
and
mov
outsl
out
rcll
movsb
mov
mov
nop
mov
loopew
shrb
data16
and
call
stos
pop
xor
ret
mov
ljmp
cmp
loop
popa
std
int3
cltd
sub
dec
mov
sub
inc
sub
adc
mull
lock
lods
cmp
jmp
rorl
mov
ja
das
mov
fisttpll
jle
cli
data16
out
insb
mov
stos
add
mov
mov
push
jl
js
stc
movsb
mov
inc
loopne
ret
push
sub
jge
js
or
mov
push
cmpsl
push
in
mov
lcall
shlb
mov
sahf
xlat
mov
mov
inc
call
mov
jle
push
call
popa
sbb
push
shrb
sub
out
xchg
sahf
jo
sahf
jb
sbb
cmpsl
pop
xorb
dec
aas
pop
data16
jp
adc
sub
stos
push
inc
sarb
cmp
scas
in
inc
test
mov
push
cmpsb
lock
cmp
cmc
loope
mov
fwait
pop
les
pop
je
std
insb
pushf
imul
jp
call
mov
sar
pop
push
sub
es
mov
lods
dec
dec
cli
ret
cld
out
mul
add
dec
push
out
addr16
or
ficomps
lea
or
leave
dec
mov
jno
sub
jne
add
pop
stos
mov
jp
or
jmp
rcl
lods
shrb
push
dec
shlb
push
lcall
sub
xorb
xor
gs
out
or
scas
mov
mov
xor
daa
ljmp
jecxz
rorb
aam
fiadds
loope
repnz
dec
jbe
sbb
xchg
adc
insb
mov
cmp
push
in
push
sarb
rolb
lock
pop
enter
out
add
mov
mov
in
ss
pop
cmp
cmpb
pop
icebp
mov
clc
sub
fimuls
lock
xchg
es
or
fcoms
add
mov
shll
pop
inc
jl
mov
jle
icebp
ret
fsubrp
cmp
std
lcall
dec
dec
cmpsb
fstpt
or
adcb
ss
enter
jg
cmp
xchg
shl
push
pop
pusha
lret
test
scas
outsb
clc
loope
or
outsl
adc
mov
ret
adc
rorb
ss
pop
les
ret
cmp
jge
inc
lret
dec
aas
jle
rclb
sbb
repnz
test
xorb
outsb
fimuls
cld
jb
aad
push
adc
movsb
movsb
inc
pop
loopne
lock
xor
push
cmp
xor
push
cld
test
sbbb
push
add
add
jo
fdivrp
mov
mov
mov
mov
mov
cmp
sbb
push
hlt
sub
iret
outsl
lret
dec
loopne
popa
cmp
les
sub
or
scas
push
sub
sub
fsubrp
fists
mov
jno
xchg
xchg
fdivl
call
or
je
scas
dec
jl
sub
cmpsb
lcall
push
negl
sub
push
inc
test
movsb
testb
outsb
add
pop
lcall
int
cs
fcomip
loope
add
in
mulb
add
idivl
movsl
push
fimull
test
xor
clc
cli
jge
fcmovb
mov
sbb
cmpsb
imul
or
add
push
pop
push
into
mov
inc
inc
and
cmp
mov
loop
sub
rorb
call
mov
nop
push
je,pt
add
sbb
je
push
repnz
js
adc
je
jl
ds
mov
icebp
loopne
inc
aas
dec
je
fwait
ja
andl
pop
jbe
aam
pop
push
push
testb
pop
cltd
ret
data16
mov
fildll
mov
mov
repnz
mov
inc
mov
xchg
lock
xchg
sbbb
daa
or
mov
aam
cli
adc
push
ds
outsb
in
adc
add
arpl
inc
int3
cli
shrb
pop
jl
stos
push
out
icebp
pop
sub
pop
mov
push
shrb
adc
mov
inc
jge
repz
scas
enter
addb
inc
xlat
ds
xlat
orb
outsb
test
or
cld
lock
sbb
and
shlb
sbb
lods
lods
mov
cmp
mov
rcrl
ds
and
aas
mov
mulb
or
inc
add
xchg
jne
sahf
clc
mov
rcl
jle
into
push
xchg
lcall
cmpsl
mov
jl
hlt
mov
add
pop
bound
jnp
inc
test
mov
inc
clc
cli
jb
sub
shrb
ds
pop
ds
jmp
jmp
lds
rcrb
mov
daa
xor
shr
xor
and
jg
pop
repnz
push
sbb
clc
or
mov
push
xchg
sbb
mov
xor
push
mov
xor
sub
jmp
xchg
pop
and
shll
lcall
dec
xchg
lret
jb
xor
mov
test
div
jge
ss
mov
int3
push
mov
and
loope
aam
hlt
mov
sahf
out
aad
cmp
rol
jp
ret
out
das
or
add
mov
repnz
push
xor
nop
jle
jle
or
dec
cmp
clc
scas
pop
mov
adc
mov
dec
xchg
dec
mov
xor
push
in
ret
adc
mov
push
mov
pop
jle
loopne
inc
mov
push
shlb
xchg
into
loop
jmp
scas
movsb
ljmp
iret
shlb
lea
jge
jecxz
pushf
jmp
cs
or
cmp
pop
jnp
ljmp
adc
dec
insb
push
std
pop
iret
imul
xlat
mov
push
pop
push
adc
std
pop
mov
inc
test
or
mov
jo
loop
inc
pop
push
and
sti
inc
shlb
push
dec
call
call
ficoms
jle
loope
ss
pushf
test
imul
ret
shrb
mov
loopne
loop
fimull
mov
inc
movsb
mov
adc
inc
adc
sbb
imul
sbb
scas
add
push
sbb
fisttps
aad
repnz
mov
popf
stos
stos
mov
sbb
inc
mov
je
call
jle
in
pushf
dec
jne
mov
out
addl
jg
and
loop
adc
in
pop
ret
cli
mov
out
bound
pop
sti
cld
mov
xlat
arpl
push
and
inc
dec
fwait
sbb
and
cmc
xor
sti
push
mov
ss
inc
xchg
fisubrl
in
cli
testb
fidivrs
jmp
enter
and
sbb
js
pop
jp
add
push
fidivrl
ds
cli
enter
add
adc
sbb
mov
aas
jo
hlt
inc
add
mov
mov
adc
adc
jp
push
mov
and
cmp
pop
xchg
std
or
sub
dec
cmp
jl
cmp
out
mov
lods
popf
out
dec
xchg
call
pushf
lret
add
or
sub
push
add
scas
aam
push
lods
ret
daa
jmp
adc
out
add
stos
jae
cli
ss
mov
daa
and
arpl
cmc
ret
jp
inc
inc
xor
xor
pop
icebp
shl
push
je
lods
shr
rol
aaa
lahf
pop
daa
stos
in
loope
push
out
inc
mov
sub
adc
scas
add
mov
mov
lahf
test
mov
clc
cmp
jbe
jle
call
int3
out
test
inc
jne
hlt
xchg
icebp
or
mov
cmp
lret
or
cs
ret
js
icebp
add
insb
add
sbb
dec
movsb
xchg
jle
in
and
jle
out
cmpb
push
or
mov
pushf
and
sub
repnz
pop
dec
mov
fucomip
adc
add
add
sub
rol
cmp
jle
pop
mov
adc
pop
ja
mov
mov
test
mov
shrl
cmpsl
jbe
or
jb
push
xor
fwait
ljmp
jb
ret
je
inc
loop
mov
mov
iret
pushf
out
cli
testb
inc
mov
fisubrl
jbe
xorl
mov
std
add
sbb
jbe
jge
comiss
sbb
and
sub
add
cli
mov
hlt
mov
xchg
adc
lods
dec
mov
pop
mov
in
out
xor
push
pop
mov
dec
push
fdivl
stos
lahf
imulb
dec
mov
shlb
inc
clc
add
xchg
test
aas
jbe
sbb
sbb
std
nop
lock
add
push
aas
and
lahf
data16
pop
jl
rcr
fisubs
in
clc
pushf
mov
rsm
nop
les
and
ljmp
aas
jge
jno
adc
jmp
je
hlt
sub
jno
aas
jge
dec
stos
clc
les
int
es
js
mov
add
adc
cmp
xor
shrb
bound
add
xor
out
pop
cmp
es
cld
push
loop
mov
test
imul
adc
hlt
mov
pushf
in
mov
cmp
mov
sbb
xor
push
loopne
movb
mov
movsb
mov
movsb
insl
in
add
jecxz
mov
push
mov
mov
cmp
or
adc
aas
pop
aas
popa
pop
cmp
mov
mov
mov
mov
inc
mov
mov
cmp
mov
inc
es
ljmp
mov
lods
add
add
icebp
daa
lret
cmp
icebp
adc
mov
ss
add
jb
cmpsb
sbb
push
and
lret
ficoms
dec
bound
sub
jo
pop
out
popl
ja,pt
pop
in
xchg
in
mov
and
push
fsts
push
ja
loop
leave
cmp
in
pop
mov
mov
cmp
fs
mov
mov
jl
cmp
jge
jp
lret
or
inc
aas
and
mov
rol
jnp
repnz
fisubl
pop
push
cmp
cmpsb
jb
aad
adc
push
cmp
dec
dec
sbb
ret
push
push
xor
jp
out
test
jo
cs
mov
fmul
pop
scas
adc
lods
push
into
jo
and
or
ret
push
push
pop
mov
inc
sarb
adc
push
mov
mov
sub
or
gs
adc
cmpsl
incb
cli
repnz
rol
mov
push
or
inc
jo
mov
je
sub
nop
mov
push
pop
dec
lock
mov
pusha
xor
or
pop
mov
mov
orl
test
mov
inc
adc
hlt
jecxz
das
scas
jb
add
pop
mov
cmpsb
mov
jp
sti
loopne
inc
aam
dec
jnp
shlb
add
xor
or
xchg
add
inc
or
fdivr
and
add
cmp
cld
dec
inc
jbe
jecxz
pop
sub
clc
lret
out
data16
lds
rolb
lods
addr16
xchg
hlt
xor
push
xchg
je,pt
lock
sbb
jmp
loop
pop
dec
mov
pop
dec
adc
lahf
jmp
or
jb
in
jle
icebp
mov
inc
jbe
mov
in
cmp
or
shlb
test
out
jbe
and
out
dec
jb
jbe
or
cld
cli
movsb
xchg
pop
faddl
loop
test
inc
pop
cmpsl
xchg
fisttps
adc
sarl
es
cmp
sarb
push
pop
je
lock
rorl
push
jecxz
fdivr
pop
xchg
hlt
ljmp
cmp
cmc
jno
hlt
mov
jp
jo
xor
pop
in
fisubrl
pop
lock
jg
ljmp
loope
inc
sbb
sub
repnz
mov
xor
dec
int
cmpsb
pop
dec
loopne
cmp
sti
push
xchg
lock
sub
js
clc
hlt
fwait
xchg
xor
or
pop
jge
loopne
xchg
loope
mov
subl
lods
jle
lahf
xor
into
cmp
mov
sti
pop
mov
out
fisubrl
xor
xchg
adc
inc
je
loop
loop
jge
xchg
push
push
pop
mov
mov
lock
jl
mov
dec
add
inc
and
sub
ret
push
popa
xchg
sub
cwtl
xor
xor
nop
xor
orl
and
insb
dec
mov
rolb
and
fistl
mov
rolb
sbb
lods
inc
std
mov
test
out
mov
xchg
movsl
pop
sbb
std
inc
loope
mov
loope
xorb
popa
insb
aam
add
fbld
ret
cmp
jle
mov
mov
loop
leave
js
ljmp
lock
cmpsb
ret
call
mov
push
ss
sub
pop
fiadds
pushf
and
cmp
mov
mov
clc
inc
pop
dec
scas
inc
push
insl
mov
test
sti
in
ja
adc
fcoms
ds
push
int
out
rcl
mov
mov
dec
js
aam
sbb
in
stos
pop
out
orl
cmp
sub
ds
jle
push
insb
ret
ss
pusha
hlt
add
xchg
imul
sahf
sbb
stos
adc
sbb
mov
ret
push
aam
sarb
movsb
mov
xchg
jl
out
movsl
xor
popl
rorb
dec
xchg
lds
mov
cmpsb
mov
std
adc
xchg
cmpsb
xorb
out
daa
pop
inc
loopne,pn
adc
in
inc
sbb
jle
pop
lahf
scas
xor
sahf
add
cmpsl
pop
repnz
test
in
or
jo
ljmp
test
push
mov
pushf
lods
cmc
rcl
xchg
test
jl
sub
jecxz
mov
and
clc
and
sub
lcall
xor
mov
leave
jns
call
data16
cwtl
mov
jnp
loope
pushl
das
add
mov
add
sbb
aam
xor
ret
adc
hlt
leave
pop
pop
das
push
cmp
xor
mov
fsub
mov
js
lods
mov
xchg
test
mov
or
mov
repnz
add
xchg
sbb
ljmp
inc
mov
mov
and
out
push
pop
inc
push
arpl
cld
mov
fmulp
scas
push
and
xor
repz
mov
pop
jge
pop
jle
nop
push
cmp
dec
loope
aad
in
sub
cmpsl
sbb
xchg
in
test
mov
add
sub
in
pop
dec
aaa
es
dec
mov
ret
add
sbb
and
xchg
movb
inc
movsl
ret
das
call
pop
dec
jge
call
pop
jo
data16
rclb
lret
arpl
and
sub
xchg
loopne
rcl
inc
fidivs
ss
mov
or
jae
push
push
sub
inc
jne
outsl
ljmp
call
or
mov
pop
out
add
outsb
xchg
les
insb
xor
ret
inc
inc
addr16
and
lahf
jne
loopne
hlt
test
sbb
ljmp
cmp
ss
popf
lods
pop
mov
nop
cmp
insl
in
and
in
push
or
ss
pop
scas
sahf
dec
pop
jg
fdivs
xchg
mov
lea
and
push
jne
jns
shlb
outsl
xor
out
insb
in
lock
sahf
add
jge
fistpll
andb
jb
divl
and
hlt
inc
scas
jecxz
push
sbb
mov
loopne
add
jl
enter
mov
jle
mov
pop
mov
xchg
pushf
pop
movsl
cwtl
mov
movsb
dec
adc
addr16
mov
dec
out
sbb
ret
jle
adc
clc
cld
divb
jecxz
adc
sub
cmc
hlt
cld
and
sub
mov
lods
inc
pushf
cs
mov
pop
push
dec
sbb
sbb
and
fs
hlt
hlt
loop
adcl
push
std
icebp
jmp
sarb
cld
pop
sti
scas
cmp
fwait
ljmp
xor
xor
lret
inc
dec
jno
clc
jle
js
jge
cwtl
sub
jle
shlb
pop
testb
jge,pt
xchg
out
call
inc
cmp
rolb
push
jns
mov
push
sbb
sbb
out
xlat
testl
ret
nop
rorl
pop
movsb
sbb
out
or
movsb
mov
dec
cmpsb
sbb
clts
push
aam
pop
scas
jle
adc
in
ret
cld
push
pop
sbb
pop
lahf
and
loope
ss
push
out
shrl
call
ret
inc
or
add
push
sbb
ficoml
inc
cs
scas
scas
je
jle
adc
add
out
add
aad
or
or
test
aad
push
push
in
jle
xor
rcr
bound
dec
nop
mov
mov
bound
lret
pop
fbld
dec
mov
repnz
push
add
addl
xlat
mul
ds
adc
and
xor
mov
aas
push
adc
movsb
lcall
pop
insb
jecxz,pt
add
mov
cmp
je
jle
test
pushf
pop
sarl
mov
push
add
cs
ljmp
rolb
enter
movsb
dec
and
lods
test
mov
test
insb
loop
ss
mov
out
and
test
cmp
ds
test
add
mov
divb
pop
das
sub
xor
mov
adc
cmp
adc
stos
sahf
inc
mov
lcallw
and
call
loop
lock
mov
mov
mov
jecxz
inc
mov
jo
hlt
xor
cmp
les
mov
lods
into
xchg
dec
arpl
loop
gs
enter
sahf
push
scas
and
nopl
push
imul
pop
sbb
mov
aaa
lods
inc
es
cmp
inc
push
jp
jo
nop
mov
push
mov
mov
pop
jp
dec
or
push
mov
cmp
or
clc
das
push
sub
gs
mov
lahf
xor
fisubl
cmp
mov
and
jb
adc
lds
fnstsw
adc
sub
adc
aam
out
cmp
pop
mov
mov
and
inc
lock
lcall
push
cmp
cmpb
sub
sbb
enter
push
insl
int3
fcmovbe
inc
mov
bound
testl
out
fimull
loope
inc
cmpsb
loopne
jp
popa
aaa
push
testb
loope
inc
fadd
pop
sbb
out
aaa
hlt
rolb
sar
insb
sub
xchg
movb
in
clc
pop
lret
cmp
cmp
adc
cmpsb
pop
enter
jl
pop
lock
pop
mov
inc
adc
pop
cmp
in
sub
and
dec
add
pop
fdivr
inc
pusha
pop
mov
jge
pop
movsb
jb
xchg
sbb
mov
jl
cli
div
jge
fisubrl
cmpsb
mov
sbbl
ss
mov
jo
repz
cmp
dec
insb
xchg
mov
cmp
pop
mov
loop
add
and
jns
hlt
pop
std
movsb
and
orb
dec
test
loop
inc
xchg
mov
pusha
out
shrb
fldl
dec
xchg
pusha
es
fsubp
dec
pop
mov
xor
pop
out
or
jle
test
jb
sbb
or
sub
xchg
ds
mov
pop
cli
imul
inc
dec
push
bound
das
ds
jb
aas
cmp
jne
sarb
or
bound
push
pop
adc
je
ljmp
clc
loopne
lret
cwtl
enter
sub
jmp
and
aas
into
insl
inc
dec
pop
repnz
mov
ret
int
add
jle
bound
mov
insb
addr16
fcoms
inc
aam
pop
sub
xchg
pop
fbld
loope
aas
fs
jns
aam
jnp
xchg
ror
call
notl
loope
pop
hlt
push
int3
mov
pop
data16
mov
mov
pop
pop
push
mov
mov
loopne
daa
test
mov
sub
xorb
mov
add
sbb
jp
mov
ret
pop
test
pop
pop
xchg
mov
das
stc
mov
pop
mov
or
jmp
lret
clc
stos
pop
aas
add
imul
sbb
xchg
jne
xor
addr16
sub
push
bound
cmpsl
shr
mov
js
fs
cmpsb
add
jl
ret
mov
in
add
xchg
and
nop
lock
jb
mov
sar
ds
popa
and
test
in
ret
test
loop
std
lock
cltd
bound
and
lahf
ss
in
add
xlat
rclb
fidivl
sbb
push
outsb
cmpb
sub
mov
mull
test
mov
testb
into
lcall
sub
mov
pop
mov
cwtl
or
rcrb
fidivrs
pop
dec
loopne
ja
inc
rorl
jl
aad
hlt
and
andb
sbb
call
shl
xor
xchg
ds
or
lods
add
inc
mov
add
lds
add
loope
push
mov
adc
pop
inc
pop
add
sub
adc
les
pop
or
push
mov
mov
fs
xchg
out
fs
stos
mov
adc
mov
and
fsubr
or
sbb
movsl
aad
movsl
cmp
out
dec
mov
roll
jb
call
popf
out
adc
add
mov
bound
mov
loopne
mov
std
push
fcmove
mov
sti
adc
jp,pn
or
out
push
das
cwtl
jae
jae
jo
popa
dec
xor
xchg
fcmovne
add
jae
data16
push
xor
popa
imul
mov
scas
mov
xchg
mov
addr16
and
cli
pop
add
mov
xchg
push
xchg
loopne
cwtl
sahf
fcoml
xchg
cmc
pushf
adc
pushf
push
add
or
cmovp
mov
test
cmc
lret
subb
jg
into
push
aad
out
stos
mul
sub
out
clc
xchg
jo
orb
and
rol
xor
iret
xchg
lds
jecxz
dec
ret
mov
imul
ret
push
rolb
inc
inc
clc
fcmovnb
inc
call
jnp
jg
add
sahf
mov
inc
pop
pusha
ret
rorb
scas
nop
inc
pop
adcb
in
dec
jecxz
scas
cmp
inc
sbb
ficoms
push
pop
sub
xchg
jbe
sti
or
imul
sub
cwtl
add
aad
test
adc
orb
adc
pushf
iret
pushf
inc
mov
ffree
cmp
arpl
push
push
pop
mov
loope
sub
les
pop
jecxz
mov
mov
inc
out
sub
enter
bound
test
lock
push
clc
jecxz
and
int
push
xchg
inc
adc
es
out
xchg
out
xchg
pop
rcrb
or
stos
orl
sbb
xchg
test
dec
mov
orb
adc
push
mov
mov
pop
sub
mov
sbb
mov
mov
jl
sbbl
in
mov
call
aam
ja
jp
inc
ljmp
pop
adc
and
pop
xchg
in
shlb
std
inc
mov
pusha
add
and
mov
in
mov
test
adc
xchg
xor
xor
in
icebp
and
loop
lds
fs
es
leave
jp
imul
sbb
mov
ret
cmp
or
sub
ret
mov
or
sub
cmp
sbb
mov
add
lock
mov
aas
mov
cmp
ljmp
cmp
test
xchg
push
push
das
sbb
pop
jecxz
lahf
and
push
sbb
adc
jp
fisubrl
xchg
insl
lcall
paddb
inc
idivb
lcall
insb
mov
scas
sub
jecxz
dec
shlb
mov
mov
add
sbb
adc
cwtl
xchg
testb
and
cmp
dec
es
adc
loop
push
repnz
insb
ret
out
ret
in
cli
cmc
add
xchg
pop
fdivrl
jnp
push
je
loopne
sub
xchg
movsb
xchg
insb
push
bnd
data16
iret
repnz
lds
mov
lock
nop
cmp
sub
pushf
lcall
dec
mov
push
xor
adc
mov
adc
pop
fcoml
loop
adc
jbe
mov
or
push
mov
push
inc
bound
loope
and
dec
pop
lods
cmp
sub
insl
fisubrs
inc
out
mov
clc
rol
push
faddl
out
xchg
movsb
push
sbb
pop
xchg
jle
adc
scas
pusha
push
imull
push
pop
out
pop
clc
adc
int3
scas
sbb
cld
mov
rorb
jne
jle
aad
repnz
mov
cmp
loopne
xor
jge
xchg
sbb
test
push
fiaddl
xchg
lret
and
and
and
cld
dec
pop
mov
jg
mov
or
rol
add
jnp
loope
out
sbb
mov
sbb
push
clc
mov
xchg
mov
rcrb
sbb
push
mov
fld
out
xchg
test
dec
cltd
lods
lahf
mov
sub
xchg
jne
aaa
or
or
inc
insb
push
xchg
icebp
or
out
aad
icebp
dec
sarb
in
pop
xor
jecxz
cld
push
mov
or
mov
jnp
mov
ljmp
es
inc
ja
test
or
mov
das
inc
cs
mov
cmp
sub
jnp
add
fs
inc
jl
mov
xchg
xchg
aam
cmp
icebp
dec
call
pop
xor
jecxz
ret
push
xchg
out
jo
mov
rorb
into
clc
nop
mov
jo
ljmp
call
mov
adc
dec
call
mov
icebp
ds
xorb
int3
rolb
pop
aam
in
mov
das
mov
ljmp
ret
or
pusha
mov
pop
cmp
insl
ret
jae
dec
xchg
jno
or
jne
add
pop
push
mov
sbb
push
jge
jl,pt
cs
pop
cmp
jp
inc
lds
repnz
jg
femms
jbe
aam
ss
pop
sbb
lret
pop
xor
jp
sub
sub
fisubs
psraw
xchg
or
clc
cmc
scas
inc
cli
push
mov
mov
jle
mov
xchg
test
jge
jp
dec
fldcw
into
subl
gs
mov
cmpsl
test
mov
aad
push
dec
inc
xchg
or
cli
inc
ljmp
jle
loope
jmp
mov
clc
or
repnz
push
push
xor
adc
pop
loopne
dec
aas
addb
lret
loop
xor
jge
les
pop
rol
ss
add
jp
adc
montmul
cmpsb
shll
mov
out
jmp
adc
jbe
jle
jnp
loop
sub
xor
cmp
dec
ret
sbb
mov
mov
mov
xor
cmp
or
and
cmp
fs
mov
cmpsb
push
push
inc
arpl
push
inc
stc
xchg
mov
pop
sarl
and
jle
mov
inc
popf
xor
movsl
es
les
jl
subw
dec
das
outsb
js
add
nop
loopne
or
adc
xchg
lcall
inc
adc
push
int3
add
js
lock
or
in
lods
mov
fcmovb
cltd
js
mov
xchg
jle
sbbl
loope
andb
movsb
add
jp
inc
outsb
rcrl
out
shr
mov
pop
aam
mov
daa
dec
ds
add
sahf
bound
loop
test
mov
jne
mov
mov
push
jge
shrb
into
mov
test
cmc
hlt
sbb
dec
outsl
fisubrl
inc
pusha
std
push
mov
cmp
mov
inc
lds
jle
push
mov
mov
inc
or
jb
cmp
rol
pop
fdivrl
or
ret
cmp
popa
fistps
int3
movsl
pop
loope
cmp
fs
add
outsl
push
xlat
mov
lcall
mov
dec
les
push
pop
inc
jle
push
ficomps
xor
push
jno
lret
ds
mov
cmpsb
lea
add
lock
dec
inc
pop
int
imul
mov
xlat
roll
adc
mov
cmpsl
rclb
push
add
loopne
icebp
xchg
mov
aam
or
mov
sub
test
adc
push
sbb
pushl
sbb
ret
jle
fdivs
stos
add
cli
ret
imul
cwtl
mov
into
cmp
mov
dec
inc
fxch
lods
mov
xchg
pusha
xor
aam
mov
xor
pusha
adc
mov
push
cmp
pop
lea
jge
sbb
xor
icebp
xchg
or
add
orl
sahf
in
les
jnp
pusha
je
jp
lods
lock
lcall
nop
in
push
mov
aad
das
jecxz
pushf
xor
loopne
sbb
cmp
clc
sub
dec
call
sub
ds
sahf
dec
out
xchg
fdivp
xchg
jmp
rcr
cli
sbb
lods
ljmp
mov
xor
cli
or
pop
mull
add
xor
inc
jmp
mov
imulb
fisubs
pop
mov
add
stos
out
jns
mov
jmp
and
or
pop
inc
and
pop
mov
in
rcrb
dec
mov
mov
movl
ret
jb
inc
loope
das
sub
or
xchg
jb
in
pushf
mov
imul
shl
pop
lock
sbb
mov
cmp
and
dec
pushf
sbb
push
push
pop
ret
jbe
and
sbb
and
mov
mov
jnp
push
shlb
insb
dec
adc
stos
js
push
test
sarb
dec
mov
push
mov
mov
out
pop
inc
or
inc
mov
fisttps
outsb
mov
clc
inc
hlt
stos
mov
sbb
je
mov
clc
jbe
fmuls
push
enter
mov
pop
es
xchg
or
rcr
sbbb
insb
cmpsl
mov
jp
scas
xor
add
ret
movl
dec
mov
add
pop
jecxz
aad
dec
ret
call
lods
inc
mov
popa
insl
add
pop
xchg
orl
out
push
cmp
aas
push
loop
test
lret
sbb
jl
xor
lahf
divl
mov
js
jbe
sbb
pop
lret
jp
loopne
orl
jp
cs
cli
jmp
jnp
std
lock
xchg
dec
push
inc
xchg
pop
js
ret
clc
xchg
shll
pop
cmpsb
or
cmp
mul
movsl
mov
jle
clc
push
pusha
xchg
ret
dec
cli
inc
jmp
xchg
loop
sbb
sar
cmp
add
mov
es
lock
cmpsb
mov
push
andb
mov
test
les
sub
xchg
out
adc
sub
out
xchg
mov
inc
inc
adc
cmp
push
push
mov
das
or
lock
sbb
fs
dec
add
inc
pop
sub
sahf
jl
push
int
jg
lahf
movb
cmp
aam
mov
or
jmp
lds
push
push
dec
cmp
cmpb
xchg
mov
loope
mov
out
mov
mov
mov
mov
adc
hlt
pop
aam
nop
jle
sub
shl
js,pt
push
sahf
add
jo
out
mov
pop
je
push
inc
adc
add
jns
scas
lods
pop
push
mov
xor
rcll
lahf
test
jbe
and
pop
push
gs
rolb
push
lods
fidivs
jmp
aad
stos
xchg
cwtl
loopne
inc
test
dec
cli
cmc
nop
mov
mov
cmp
xor
cwtl
sahf
rcr
and
ret
or
lret
dec
pop
mov
xchg
shrl
and
lods
mov
and
cli
jl
test
or
xchg
mov
ret
xor
pusha
pop
mov
hlt
ss
add
or
movsb
ret
jb
lea
pop
aas
push
pop
cmp
or
imul
pop
sahf
test
outsl
xchg
mov
lcall
add
push
ds
ffreep
mov
sti
ljmp
in
push
adc
push
lock
push
push
mov
scas
push
lock
inc
aaa
hlt
push
jl
cmp
adc
ss
in
popl
and
test
fcompl
scas
push
jl
cli
adc
inc
jnp
dec
addr16
aas
fisubs
fcmovb
lahf
push
cli
lea
call
subl
rcrb
add
jnp
jle
sbbb
push
fbld
cld
test
and
jne
ret
jmp
cs
adc
xchg
hlt
pop
xor
call
cwtl
cli
popa
mov
addl
bnd
movl
and
pop
out
jle
mov
or
std
jbe
push
mov
in
mov
out
push
pop
ret
xor
lds
mov
sar
add
notl
das
rorb
inc
js
ljmp
dec
or
pop
fcomip
sbb
dec
outsb
mov
mov
out
jge
aad
add
cmp
cmpsb
sbbl
inc
xchg
push
sahf
insb
pop
je
xchg
psubusb
sub
lds
jle
repnz
sub
dec
js
and
cmp
mov
jle
push
and
mov
test
push
orb
mov
xor
gs
outsb
and
ljmp
mov
ret
adc
inc
faddl
cs
shrb
lods
lahf
pop
test
loope
dec
loope
mov
fimuls
fildll
push
pop
sbb
stos
mov
insb
je
dec
loopne
aas
jle
push
mov
js
fxch
mov
or
mov
inc
jp
pop
xor
addb
adc
and
dec
mov
lcall
cmpsl
add
cld
nop
or
push
stos
mov
sbb
out
pop
ds
test
or
inc
aaa
loopne
pop
and
andl
ret
adcl
cwtl
pop
cmp
cld
inc
clc
lock
and
std
push
dec
out
enter
push
sbb
test
movswl
lahf
adc
mov
hlt
daa
mov
sbb
fadds
fwait
psllq
in
cmp
insb
mov
lock
ds
mov
test
loope
push
in
cmp
xchg
cmp
push
pusha
mov
adc
push
imul
sub
aas
push
mov
frstor
or
test
mov
xchg
popa
mov
es
in
ljmp
sub
ds
fldt
stos
xchg
adc
mov
cmpsb
jle
mov
pop
mov
lock
mov
push
xchg
fdivrs
jg
mov
cmp
lock
out
xchg
sub
cld
xor
test
rol
notl
fisubs
je
test
push
push
jl
or
aam
addr16
dec
xchg
and
das
lods
rcll
sub
sub
pop
addl
lret
mov
das
mov
jbe
mov
jge
pop
pop
mov
jp
mov
stos
insb
push
jo
cmpsb
fimull
and
sub
mov
xchg
mov
jo
dec
xorl
or
insl
cmpb
or
and
jmp
jno
cmpsb
out
sbb
or
daa
mov
jae
xchg
mov
sub
shrl
jg
rcrb
test
sub
xor
test
gs
clc
cs
cmp
jne
aad
inc
cmpsb
clc
icebp
test
cmp
xor
test
es
test
mov
pop
mov
jp
popa
inc
leave
mov
pop
aas
mov
xor
mov
mov
shll
dec
mov
pushf
inc
jne
pop
pop
mov
fiadds
ror
mov
dec
mov
bound
jo
jp
lock
aad
lret
arpl
adc
mov
ss
mov
push
mov
mov
cmp
shl
dec
pushf
shlb
jl
ss
mov
dec
adc
sbb
ljmp
mulb
adc
cwtl
adc
pop
mulb
rolb
jle
xchg
xchg
xor
mov
shll
xchg
or
jae
ret
ret
pop
pop
push
push
xchg
push
mov
cmc
rorl
push
cmpb
push
xor
push
scas
les
sub
test
mov
int
dec
cmp
pop
jl
loop
jl
ds
jmp
es
mov
stos
sub
adc
xorl
inc
xchg
jl
fsts
xor
call
xor
fisttpl
clc
cmp
xor
cmp
comiss
repz
hlt
add
cmp
adc
pop
fiaddl
push
imul
jg
mov
leave
aam
rol
test
mov
add
jbe
add
lods
jecxz
cmp
or
xchg
or
jp
scas
icebp
add
mov
xor
adc
mov
mov
jle
jl
pop
xor
cli
add
and
push
mov
push
push
adc
xchg
mov
dec
push
fs
enter
mov
addr16
ficompl
adc
inc
cld
out
aas
adc
pop
jl
push
es
js
adc
clc
ja
cs
mov
mov
lds
xchg
test
cli
aaa
mov
lahf
cmp
push
xlat
add
pxor
fs
imul
sbb
inc
out
shrb
cmp
adc
add
divl
ret
popl
jle
stc
pushf
mov
xor
cmc
cmp
rclb
arpl
lock
pop
inc
sub
xchg
mov
scas
dec
mov
jo
insb
loopne
sbb
out
mov
dec
loopne
sub
push
xchg
icebp
aad
pop
mov
orb
mov
fcomp
cmp
and
add
data16
jmp
inc
or
daa
jno
sub
sahf
leave
inc
add
test
sbb
jge
pop
fstl
popa
jge
sub
and
sbb
xchg
sub
in
idivb
xor
xor
jge
pop
push
ds
je
fidivrl
add
mov
out
mov
loop,pt
cmpsb
mov
add
cmp
addb
pushw
pop
movsl
jb
fcomip
lock
inc
loop
adc
mov
lock
or
loop
jo
imul
cli
or
mov
fstp
push
xchg
inc
out
cwtl
jg
jge
aam
mov
ljmp
jne
push
inc
jle
mov
mov
fimuls
icebp
inc
sbb
insl
sbb
add
xlat
pop
sbb
movsb
mov
cld
sbb
add
out
mov
mov
cld
test
jp
adc
sub
mov
enter
xchg
pop
iret
aam
test
cld
inc
movswl
lock
cli
mov
roll
cld
mov
lret
jo
inc
xor
into
cmp
mov
sahf
scas
insl
sbb
es
movsb
xchg
sbb
mov
hlt
jmp
xor
cmp
movsb
xchg
xor
jnp
sub
ds
mov
adc
repz
hlt
jmp
lahf
adc
mov
xchg
stos
or
lahf
push
mov
lods
lock
inc
stos
rorb
add
cltd
ds
ds
int3
std
pop
fiaddl
mov
inc
push
xchg
cmp
rclb
fdivrp
rol
test
inc
movb
fsubrl
nop
cli
rol
push
cli
cmp
rorl
dec
les
hlt
rcrb
stos
cmp
cmp
ss
fcomps
and
rcrb
add
xor
adc
inc
sub
push
jp
cmp
hlt
dec
add
xor
push
sbb
movsl
mov
mov
out
lock
mov
push
push
xchg
push
cmp
cli
inc
jnp
data16
dec
je
pop
inc
cmp
clc
fsubr
mov
sub
scas
xchg
movsb
addr16
jb
sub
mov
fmulp
xchg
or
jp
out
hlt
sbb
iret
push
movsl
aam
xor
sub
scas
push
int3
push
bound
jge
xchg
mov
enter
sbb
sub
sub
clc
insb
cmp
scas
repnz
ja
jno
xor
pop
and
pop
test
jb
insl
fs
inc
leave
cmp
inc
inc
sub
and
mov
jmp
aam
hlt
cmp
testl
popa
bound
jl
dec
push
sarb
mov
clc
jmp
mov
rcrl
xchg
inc
hlt
or
xor
adc
sbb
dec
mov
jecxz
pop
das
push
aam
sub
roll
push
jmp
test
or
pop
and
push
cmpl
rol
test
mov
out
loopne
movsb
out
xlat
cmp
es
push
popa
adc
mov
scas
push
mov
les
pop
rcrb
ror
inc
comiss
mov
ret
cli
cs
icebp
shlb
movsb
push
xchg
loopne
insb
jl
clc
js
add
jge
loop
lods
es
adc
cmc
cmp
xor
push
aaa
push
cld
js
xor
ret
insb
dec
jecxz
adcl
clc
adc
jo
mov
cwtl
mov
aad
loopne
test
aam
inc
sub
xchg
jge
cmp
rcrb
sbb
pop
cs
pop
dec
jns
adc
pop
mov
loop
fsub
dec
into
mov
push
movsl
rorl
lret
pop
jp
sub
push
fists
jmp
mov
mov
or
sar
xchg
xchg
in
mov
inc
incb
push
mov
mov
lahf
push
pop
aas
bnd
out
sbb
pusha
inc
mov
push
shlb
push
out
adc
cwtl
inc
sub
pop
fisubl
xor
xchg
push
lock
ficoms
cmp
jne
and
je
push
cmp
sbb
mov
and
pop
add
and
xchg
xchg
icebp
xlat
daa
push
mov
mov
mov
aam
dec
push
les
and
in
je
add
loop
or
and
mov
inc
push
inc
mov
pop
mov
out
xorl
es
clc
std
push
ret
daa
ljmp
pop
cmpsb
dec
fisubrs
mov
pop
pop
pop
outsb
xchg
pop
pushf
sub
cmp
lret
rclb
pop
push
sti
cli
jl
xor
mov
mov
lret
pop
ljmp
clc
mov
xor
test
jmp
mov
cmpsb
jne
cmp
jno
sbb
std
insb
bound
testb
mov
add
mov
call
adc
hlt
shlb
cmc
and
jno
sub
dec
xchg
pop
test
mov
pop
cli
cmc
add
rclb
sbb
movsb
jns
add
mov
sbb
movsl
push
sahf
mov
sub
arpl
xor
mov
xor
es
shrl
adc
sbb
push
mov
std
aas
mov
inc
mov
hlt
mov
mov
hlt
xchg
ljmp
xlat
xchg
pusha
xchg
inc
fsubrl
sbb
adc
or
adc
cmpsb
test
aas
gs
sbb
inc
lret
push
sub
js
cmc
clc
shlb
jle
lock
iret
test
inc
out
mov
ljmp
jmp
popf
jle
mov
mov
pop
aad
jo
leave
jmp
mov
xchg
or
test
clc
lock
jle
sarb
pop
add
mov
loopne
lea
pop
inc
pop
mov
push
dec
inc
adc
arpl
mov
add
pop
ds
mov
inc
shr
roll
outsb
test
pop
mull
js
mov
pop
int
aad
mov
pop
shl
imul
enter
inc
jle,pt
cli
push
jecxz
adc
xchg
adc
or
call
mov
pop
data16
sub
loopne
orl
jecxz
pop
es
xchg
cmp
inc
ret
ret
push
push
adc
mov
mov
loope
dec
adc
adc
or
loop
sarl
int3
add
out
loop
seta
and
add
pop
cmpsb
ss
xor
dec
es
divb
adc
jle
mov
das
mov
push
inc
xchg
pop
cwtl
jb
mov
inc
setle
cltd
lock
or
cwtl
rolb
xor
sbb
setae
fsubp
jno
add
and
in
fcompl
rolb
rcl
test
sub
mov
fisubs
sbbb
inc
push
orl
jle
jle
arpl
jo
loopne
sbbl
push
sbb
push
jg
ss
test
addr16
push
mov
mov
fwait
leave
ficompl
mov
xchg
cmc
imul
sub
push
jne
add
rol
into
cmp
loope
jno
jne
dec
call
cmpsl
lea
data16
lods
pop
out
or
in
and
jmp
fdivrp
push
pop
fmul
nop
jne
cmp
jg
test
es
and
cld
sbbb
push
insb
xchg
xchg
shr
adc
fs
lock
adc
adc
inc
xchg
adc
push
mov
push
and
fs
cmp
mov
jmp
xchg
in
xchg
pop
jmp
insb
jno
ljmp
mov
enter
inc
ds
xor
roll
ror
xor
loop
or
inc
mov
repz
xchg
hlt
lods
outsb
inc
or
jp
cmp
or
or
ret
push
and
inc
loop
or
mov
xchg
sahf
scas
xchg
adc
jg
movb
rolb
push
rol
jp
jl
loop
mov
in
xor
adc
cli
lock
aaa
loop
loopne
mov
std
dec
rcrb
dec
mov
addl
hlt
data16
in
sub
sbb
add
bound
cwtl
xchg
imul
add
shrb
icebp
rcl
shr
cmp
jp
inc
movsl
dec
sbb
push
sub
xchg
imul
inc
jle
xlat
add
mov
das
pop
mov
dec
divl
or
jo
js
jmp
jp
scas
cli
fstp
lock
jp
insb
shrb
jbe
or
pop
jne
add
add
push
sub
out
loopne
inc
rorb
fnstcw
mov
test
aas
mov
bound
and
gs
js
sbb
mov
pop
jl
push
add
pop
sub
rorb
out
pop
mov
fisubs
or
cld
and
mov
push
imul
fcoms
add
inc
insl
pop
repnz
mov
sti
mov
testb
cltd
jmp
jl
sub
scas
mov
out
mov
adc
jno
mov
push
jp
ficomps
adc
inc
mov
std
dec
bound
inc
mov
jmp
ds
sub
pop
push
xabort
je
aas
sub
jb
dec
xchg
cli
inc
rclb
inc
xor
jmp
mov
aad
cmp
fsubrs
add
pop
dec
adc
cmp
inc
jno
pusha
and
fiadds
scas
or
fwait
mov
cmp
pop
test
scas
sbb
cmpb
xchg
mov
adc
stc
dec
pop
push
xchg
inc
sbb
push
push
daa
pop
sbb
mov
push
pushf
lods
aas
adc
xor
adc
fisttpll
pop
pop
int
popa
dec
sbb
movsl
mov
xchg
mov
ds
ret
mov
insb
lods
shlb
mov
xchg
jne
testl
mov
mov
xlat
add
jmp
ret
dec
cwtl
and
xchg
xchg
out
or
aam
mov
sub
lcall
clc
push
orl
jbe
pop
test
lods
call
jge
push
popa
aam
dec
in
xchg
iret
mov
pop
inc
xor
pop
mov
xchg
stos
add
and
outsl
mov
test
dec
xlat
or
lock
insb
cmpsb
dec
xlat
sbb
js
or
pop
call
add
shrl
test
clc
push
dec
jl
popf
jl
lds
cs
lret
sub
push
cld
and
dec
push
xor
in
or
fsubr
ret
test
push
shl
add
xor
or
sahf
lcall
inc
leave
in
mov
iret
adc
add
scas
test
daa
hlt
insl
jmp
mov
lock
das
and
fcmove
fnstcw
xchg
cwtl
addr16
push
push
test
sub
mov
aas
cli
push
repz
sbb
mov
jecxz
nop
xchg
stc
or
pop
or
sub
dec
and
cmc
ljmp
mov
neg
js
push
xor
jecxz
inc
dec
loopne
rorb
int3
mov
js
ja
pushf
sbb
push
and
pop
pop
out
mov
mov
fisubs
stc
xchg
aas
scas
and
inc
gs
icebp
sbb
jp
xchg
pop
or
dec
sbb
roll
xor
lea
out
xchg
bound
pop
movsb
inc
cli
negl
das
inc
mov
xor
int3
je
and
pop
mov
cmpsb
popa
xor
cmovo
mov
fsts
inc
loop
jmp
add
testl
nop
mov
xlat
out
jae
call
or
mov
xor
jl
add
cld
testb
jb
clc
jg
push
nop
mov
adc
xlat
mov
push
and
mov
aad
out
fwait
cmp
mov
dec
push
out
cmpsl
sub
sub
pop
and
add
xor
test
push
mov
push
xchg
mov
jecxz
xor
cltd
ljmp
test
mov
push
inc
inc
es
out
adc
hlt
pop
mov
loopne
sub
lods
cmp
pop
mov
int
scas
sahf
pop
inc
mov
hlt
cmp
andl
mov
fcomps
inc
mov
dec
popf
push
inc
cmp
xlat
push
mov
jge
pop
push
pusha
aas
dec
sbb
or
and
push
jno
jge
adc
cwtl
loop
xchg
cltd
mov
jb
or
inc
dec
sub
add
orb
cmp
cmp
dec
sbb
insb
inc
loop
push
jle
lods
mov
cmp
or
ljmp
iret
adc
pop
push
movsl
cmp
and
jl
xor
and
cmpl
repnz
jp
push
push
fcompl
clc
lock
push
push
inc
adc
cld
jb
jp
sbbl
shrl
mov
cltd
push
cmp
les
mov
sbb
call
fsubrs
add
mov
inc
cmpsb
nop
sbb
insb
mov
add
aas
nop
lcall
out
daa
inc
inc
popa
or
fisttpl
mov
xor
out
rcr
lock
rol
imul
cmc
add
and
inc
xchg
xor
icebp
and
adc
les
out
cmc
in
arpl
clc
mov
rolb
lea
sbb
mov
and
adc
pop
inc
mov
jl
cmp
ds
jl
cmp
cltd
out
les
and
enter
pop
subb
pop
xor
xchg
sbb
xchg
dec
cmc
or
pop
lahf
pop
jle
push
sub
in
jge
dec
mov
push
aad
inc
sbb
mov
mov
sbb
out
aas
in
pop
int
ja
or
mov
sub
imul
sti
nop
lock
lret
mov
cmc
loopne
and
xor
xchg
rorb
movsl
popa
add
mov
push
mov
dec
mov
js
jp
test
push
mov
test
add
hlt
movl
bnd
mov
add
xchg
les
jmp
test
dec
xchg
loopne
js
fdivr
sbb
push
cmpsl
xor
pop
testl
ds
je
ljmp
cmp
icebp
mov
out
mov
xchg
adc
dec
pop
mov
nop
push
jle
std
push
shl
push
shl
xchg
fidivrs
test
out
out
jne
pushf
add
dec
fildll
xor
insb
jmp
mov
dec
cwtl
cmc
mov
rolb
sahf
fwait
adc
mov
and
jg
adc
adc
sbbb
or
and
jp
jp
sub
jle
lods
mov
movsbl
testl
verw
out
dec
bound
lahf
test
push
adc
movl
sub
scas
jl
jp
jmp
xor
xor
xlat
jnp
mov
xchg
rcrb
addr16
jp
jbe
stos
addl
js
loop
rorb
pop
shrl
insl
adc
add
and
fists
xchg
or
mov
mov
ss
mov
inc
shrb
loope
xchg
cwtl
out
ret
push
lret
fisubs
jmp
push
adc
andl
jmp
ds
lea
das
and
inc
test
loope
out
push
out
or
por
dec
inc
in
fistps
aaa
loopne
mov
scas
es
jmp
push
mov
ds
clc
add
jne
and
lret
divb
jle
mov
adcb
out
lock
lods
into
add
and
push
mov
clc
outsb
push
dec
adc
sub
ljmp
xor
and
scas
xchg
xchg
fisubrs
outsb
sub
out
mov
aaa
inc
pusha
inc
mov
mov
aad
lcall
dec
dec
inc
mov
hlt
fmull
cmpsb
lock
dec
add
xchg
mov
pop
hlt
cltd
push
inc
cmp
bound
icebp
mov
inc
add
adc
xchg
mov
faddl
dec
or
loopne
ret
push
dec
sahf
xor
jge
sbb
testb
loope
mov
cs
xchg
rol
punpckhwd
mov
xor
push
lret
cmp
dec
xchg
cmp
dec
bt
mov
jecxz
inc
sbb
int
mov
fs
in
xor
call
sub
int3
xlat
inc
icebp
idivb
adc
ret
add
jo
mov
test
cmpsl
incb
pop
mov
adc
mov
push
mov
pushf
in
bound
movsbl
icebp
fsubrl
lret
adc
mov
xor
ljmp
inc
lods
dec
loop
jmp
adc
xchg
inc
clc
mov
sbb
dec
sbb
pop
or
fdivs
sti
mov
mov
loopne
lea
mov
add
inc
sbb
and
imul
hlt
rcrl
in
mov
and
rclb
movsl
adc
cli
cmc
xchg
sahf
js
inc
sbb
shrb
pop
xor
decl
imul
or
jecxz
outsb
dec
ljmp
cmp
cmp
ret
xor
adc
mov
cmpsb
add
dec
movsb
inc
aaa
stos
lahf
push
addl
sbb
or
lods
scas
fidivrl
cmp
mov
jne
push
adc
mov
rorl
cmc
pop
aam
mov
imul
mov
loop
cli
out
enter
mov
inc
add
lock
jl
pusha
dec
cwtl
sbb
aad
add
insb
mov
hlt
jnp
jl
cld
and
adc
daa
add
in
xlat
outsl
inc
rolb
cmpb
push
jb
mov
inc
xchg
out
mov
les
or
scas
sub
hlt
cmpsb
xchg
jo
mov
mov
lds
sub
cmp
int
cmp
pusha
popf
js
adc
inc
xchg
mov
xor
test
cmp
xor
mov
push
jg
pop
add
sbb
loopne
push
fidivrl
stos
or
test
push
lret
cmp
and
dec
cltd
insb
jp
push
cmpb
call
stos
add
mov
fbld
jl
stos
fdivp
mov
je
daa
mov
jno
shl
xchg
cmp
mov
jmp
fstp
or
mov
loop
xchg
xchg
mov
inc
push
sbb
sbb
sar
and
sbb
jle
and
adc
dec
rcll
cmp
mov
int3
mov
sub
fucom
jo
mov
adc
lahf
popl
jl
mov
and
loopne
sbb
or
pop
test
js
push
iret
and
pop
or
lret
ret
pop
jo
cmc
adc
sahf
lea
out
imulb
aas
push
cli
jp
xchg
and
cs
pop
inc
lea
add
lods
add
cpuid
sahf
cmp
shl
lds
shr
out
push
xchg
lods
aam
xchg
and
clc
fcoml
cmpb
in
mov
std
add
test
or
mov
mov
clc
xlat
jl
js
jle
test
orl
xor
lods
add
mov
sub
sbb
and
ds
and
popa
or
push
andb
jle
cltd
ds
or
pop
jge
dec
outsl
inc
xchg
sub
jp
mov
fs
push
insb
and
add
adc
add
aaa
data16
dec
icebp
and
inc
and
js
lea
cmc
icebp
call
aas
pop
add
pushf
jge
imul
test
testl
mov
mov
sub
sub
mov
add
shlb
movsb
dec
inc
jmp
pop
xor
in
sub
pop
cld
mov
xor
call
lahf
adc
push
and
fwait
aam
rclb
vpavgb
jns
inc
jne
fwait
cli
lock
inc
or
jl
icebp
mov
stc
dec
xchg
nop
inc
mov
mov
jbe
xchg
les
call
inc
outsb
enter
or
jp
dec
jecxz
insl
insb
aad
lret
or
call
call
popa
sbbb
jno
cmp
sahf
aad
push
sub
out
jecxz
test
repz
sub
cltd
in
or
adc
ret
mov
jge
jmp
fldl
xchg
adc
mov
fcmovbe
xchg
jo
sbb
ret
sahf
mov
ljmp
outsb
scas
inc
pop
dec
pushf
movsl
lea
sub
jp
adc
icebp
jnp
lds
dec
pop
push
ds
mov
loop
pop
xlat
jle
movsb
pop
cwtl
pop
pop
pop
dec
cmpsl
lods
pop
sub
or
fstps
mov
lds
js
loop
jle
dec
lret
inc
cli
loop
movsl
mov
push
out
pop
mov
imul
js
lods
pop
ss
mov
jl
ret
test
outsb
xchg
push
subb
xchg
xchg
or
orb
xchg
cld
mov
js
test
add
mov
es
ds
stos
dec
sbb
addr16
push
or
cmp
shrb
daa
js
pusha
add
pop
jae
xchg
cli
lcall
es
pop
cmp
dec
sub
sub
es
xchg
jp
push
ds
push
stos
cmp
js
aam
in
mov
mov
and
push
inc
outsb
movsl
fdivp
lds
mov
mov
xchg
inc
out
mov
mov
ret
test
js
sub
pusha
adc
scas
pop
or
lods
ljmp
test
and
push
js
jge
or
lret
inc
aas
data16
rcll
rcll
cmp
cmp
sub
adc
xchg
mov
movsb
pop
mov
rcl
outsb
jbe
pop
push
mov
push
pop
and
jne
gs
push
cmpb
inc
jns
adc
out
add
fisttpl
xchg
fwait
or
jae
imul
enter
jne
push
dec
mov
cli
mov
and
test
inc
pop
mov
or
mov
push
pushf
test
insl
mov
inc
das
or
and
fldl
mov
mov
and
repnz
call
push
inc
lock
imul
add
adc
and
jbe
xor
push
lcall
andl
rcll
das
pusha
add
mov
push
pmaxub
sarl
hlt
pop
shlb
loop
dec
push
loopne
jo
or
mov
nopl
in
mov
adc
inc
sbb
push
enter
rcl
sub
clc
lock
inc
movl
jp
mov
sbbb
insb
loopne
cmpb
cmpsl
mov
lods
test
subb
testb
cmpsl
mov
aad
test
shrb
sar
pop
sbb
xor
fsubl
loope
inc
sbb
test
out
cli
jge
lock
push
push
push
popf
icebp
stos
rcrl
sbb
nop
mov
loop
repnz
int
fmull
dec
cwtl
repz
push
cmp
shrl
hlt
jle
mov
mov
sub
jno
push
ljmp
xchg
movd
pop
cmpsb
and
into
cld
pop
mov
insl
rcll
mov
scas
and
stos
sub
adc
subps
push
inc
or
mov
fisttps
cwtl
mov
repnz
loop
xchg
test
into
jmp
pop
adc
xor
clc
inc
lea
mov
in
jmp
jl
es
add
and
sar
cld
icebp
mov
xchg
mov
mov
pop
cmp
push
cmp
push
xchg
xor
loop
mov
pusha
int
pop
jo
cld
js
mov
inc
int3
lcall
shrb
lds
test
aaa
not
mull
loope
add
jb
arpl
xor
xchg
or
fsubrl
arpl
jg
jp
hlt
and
aam
sbb
mov
mov
insl
cli
fstpt
add
adc
push
seta
push
and
xor
xor
xor
call
loopne
inc
push
outsb
jp
in
pop
push
push
sahf
loop
fsubs
inc
jae
ret
push
mov
xchg
std
mov
jae
nop
push
repz
gs
shll
push
mov
scas
mov
ss
push
dec
sbb
mov
cmp
and
cwtl
mov
arpl
xchg
gs
clc
adc
fidivl
mov
ds
push
lcall
ret
mov
adc
bound
mov
mov
sbb
add
hlt
bound
enter
cld
and
ret
lahf
addl
aas
xor
in
sarl
pop
pop
jecxz
mov
xchg
xchg
inc
pop
pop
dec
dec
out
xchg
cmc
jmp
ljmp
mov
and
mov
mov
mov
inc
inc
xor
enter
mov
inc
test
popa
push
or
ret
bound
outsl
in
rol
xlat
sub
push
sub
data16
pusha
inc
aam
loop
dec
mov
mov
das
or
lods
fcmovu
sti
fwait
shlb
pop
insb
and
xlat
orl
inc
call
jl
fucom
xchg
jo
pusha
mov
and
sbb
jmp
ret
in
dec
jl
mov
dec
sbb
mov
aas
mov
icebp
or
mov
mov
cld
js
and
lock
push
test
add
cmp
dec
pushf
add
lds
incb
mov
jecxz
or
inc
push
maxps
mov
enter
insb
cmp
out
in
call
stos
adc
data16
pushf
mov
ljmp
stos
bound
hlt
add
ret
jle
outsl
and
cmp
daa
mov
enter
cmp
push
movb
loope
xor
lds
inc
mov
or
jnp
sub
mov
shll
sbb
add
leave
push
jbe
sbbb
not
dec
jl
dec
inc
xchg
mov
andl
and
in
and
popa
mov
jp
adc
sbb
add
sub
jmp
inc
xor
js
or
jl
lods
dec
fsub
or
call
mov
mov
jg
sbb
dec
aam
call
mov
clc
adc
add
hlt
jb
idivl
test
jge
add
mov
je
ds
xchg
cmc
shlb
lret
jns
push
lods
mov
sub
fucom
cwtl
rcl
push
pusha
xchg
nop
adc
jl
and
xchg
adc
insb
xchg
dec
push
push
push
loopne
orl
adc
push
lock
sbb
push
add
jl
out
loop
imul
ja
test
lret
popa
movsl
adc
pop
add
icebp
ljmp
sahf
mov
jp
dec
sub
xor
lahf
push
leave
push
inc
dec
je
rclb
cld
sar
adc
and
test
cmp
out
add
out
les
jo
out
push
mov
jno
pop
mov
mov
add
add
cmpsl
jb
push
lret
or
loopne
outsb
btr
sbb
xchg
nop
lds
add
ljmp
cld
xor
push
data16
lods
add
adc
dec
vlddqu
jo
or
xchg
cmp
ja
xchg
jl
movsl
push
pop
add
cs
xchg
push
sti
xchg
aad
aam
loopne
cwtl
mov
cld
out
fstps
imul
lahf
ds
sub
push
dec
faddl
dec
pop
int
cs
jge
dec
cmp
es
dec
hlt
dec
bound
in
rolb
sub
cmp
scas
pop
and
push
into
cwtl
rcrb
addps
and
sub
jmp
push
pushf
dec
jmp
js
les
test
jp
shrb
repnz
mov
jge
gs
or
mov
js
inc
mov
lcall
ss
iret
or
movsl
adc
ds
mov
fistps
pop
mov
lcall
inc
inc
fistpll
mov
xchg
inc
pop
pushf
push
xorb
pushf
mov
roll
test
xlat
out
shll
ljmp
inc
es
jne
jge
pop
jo
sbb
je
adc
xor
fmulp
clc
hlt
cli
test
pop
in
push
sahf
idivl
jl
mov
popa
in
xchg
fs
pop
movsl
daa
sbb
mov
popa
in
shlb
out
adc
mov
push
adc
xchg
idivb
adcb
cli
cmpb
shl
outsb
push
sub
and
lds
rcl
outsl
les
fcoml
cwtl
loop
pop
pop
sbb
xchg
lock
loop
mov
pushf
mov
cwtl
loop
nop
mov
rol
push
mov
jg
enter
mov
addl
jbe
add
or
and
fiadds
fnstcw
fcompl
mov
mov
shrb
sub
dec
arpl
push
lock
or
and
fcomps
sarb
in
bound
sub
push
in
or
clc
or
aam
cmp
xor
cmp
inc
adc
lret
pop
ret
mov
movsb
in
out
lret
lock
mov
jo
pop
loopne
bound
insl
adc
test
sub
jo
loope
loopne
inc
push
ds
movsl
icebp
xchg
les
adc
cmc
rcrl
sub
ret
inc
mov
loop
inc
clc
push
mov
adc
cmpsl
pop
cli
inc
pop
cmc
xor
ret
out
sub
jb
mov
outsb
ja
shlb
popf
mov
addr16
std
insb
nop
jb
jle
es
ja
rcll
mov
lahf
sbb
dec
pop
fmul
loopne
mov
repnz
roll
inc
icebp
mov
jnp
sbb
dec
mov
cmp
movlhps
ret
popa
cmp
clc
jle
inc
rorl
push
jmp
int3
pop
mov
pop
adcl
push
cmc
ds
ds
inc
mov
xchg
test
lret
pop
pop
add
out
jb
push
adc
and
add
pop
lock
and
jle
into
clc
das
or
fdiv
cs
fwait
loopne
cmc
xchg
push
and
jg
clc
std
shlb
popf
mov
jge
dec
inc
push
and
or
jl
sub
outsl
pop
push
movb
jg
fcoml
repnz
sub
scas
fsubs
loopne
rclb
lret
cwtl
ret
pop
clc
ljmp
cmp
jns
and
stc
movsb
imul
test
in
lea
push
shll
mov
mov
test
inc
mov
and
outsb
outsb
outsb
inc
add
fwait
mov
and
jge
pop
mov
jae
repnz
popl
push
je
js
adc
jcxz
movsl
sbb
and
mov
mov
xchg
fsub
cli
and
or
push
je
rcrb
inc
or
out
lods
nop/reserved
sub
fisubrs
ja
cmp
icebp
hlt
cmpsb
add
jns
fs
rcr
ljmp
jbe
imul
dec
clc
add
mov
or
insl
and
shl
inc
loope
mov
or
fwait
ds
sarb
dec
inc
es
or
push
cld
jo
lock
subl
fwait
jecxz
cmpb
adc
xor
lcall
ja
cmc
addr16
out
cltd
js
popa
xchg
adcb
or
popa
jo
dec
aas
jl
lods
pusha
cs
add
inc
pop
mov
ret
rol
mov
xor
loope
shl
inc
add
xor
dec
stc
addr16
jmp
orb
mov
jp
loopne
clc
hlt
sub
push
daa
rcll
adc
stos
icebp
jo
or
and
pusha
lcall
adc
sbb
stos
addl
xchg
jo
adc
repz
fs
scas
popf
and
arpl
bound
jecxz
push
loop
mov
adc
sbbb
das
push
fs
xor
out
adc
jne
xchg
mov
es
push
data16
pop
popf
ret
adc
xor
test
movsl
bound
sub
sub
push
sbb
add
movsl
mov
jl
pop
icebp
add
jmp
rol
mov
add
lret
jno
cli
mov
sbb
pusha
in
out
sti
pop
mov
mov
mov
aad
inc
mov
pop
dec
add
loopne
aaa
repnz
adc
mov
icebp
and
test
and
shlb
jmp
dec
lret
jmp
arpl
sub
mov
ljmp
cmp
cmc
adc
xchg
mov
adcl
js
sub
sbb
fidivs
mov
mov
xchg
fisttps
sbbb
adc
mov
sub
push
mov
jle
adc
shll
mov
lock
int3
les
loope
xchg
test
push
jge
jg
cmp
inc
sahf
push
int
iret
out
sbb
sub
and
jg
mov
adc
pop
dec
pop
jg
mov
mov
scas
xorl
jo
shlb
loope
fdivrs
gs
mov
pop
aas
ljmp
loopne
loope
fcmovb
mov
xor
lcall
notl
push
jbe
or
rclb
loopne
pop
pop
loop
cmp
int3
xor
xchg
push
mov
xchg
sub
adc
sub
orb
or
mov
adc
jg
jne
cmp
xor
xchg
sbb
cmp
xchg
or
and
xchg
es
ret
bound
pop
ret
loop
aam
loopne
add
mov
mov
push
repnz
nop
sbb
fdivl
sub
fsubs
xor
push
xor
jl
pop
cmp
xchg
mov
lret
rclb
movsl
mov
pop
mov
jae
mov
insb
push
add
mov
push
push
rorb
inc
xchg
sub
imul
pop
sbb
mov
loop
push
mov
dec
pop
imull
push
push
arpl
mov
cli
insb
adc
fwait
lock
mov
sub
mov
add
scas
out
lret
jae
jno
push
mov
ja
aam
push
cmp
pop
sub
ret
or
loop,pt
fldenv
sbb
sub
insl
pop
cmp
or
mov
adc
out
sbbl
push
mov
dec
pop
fisttps
mov
into
cmp
add
jg
add
scas
in
inc
andb
orl
lock
hlt
mov
mov
inc
loopne
pop
call
mov
lahf
or
fcompl
inc
loopne
rcl
xchg
inc
out
add
or
xlat
pop
mov
daa
enter
cmpsl
imul
inc
inc
jns
lods
negl
jbe
bound
add
in
mov
stos
outsl
xchg
mov
dec
rcrb
or
jge
sub
jo
fs
sbb
cmp
push
nop
adc
lock
jl
js
movsl
cmpb
cli
cwtd
movsb
mov
fcompl
dec
pop
es
popf
xor
cmpsb
mov
jecxz
add
adc
pop
jnp
push
fbld
push
jbe
ret
das
xor
xchg
cmp
shll
loopne
push
inc
push
pop
pop
lods
cltd
cmp
xlat
add
pop
pusha
jb
and
sbb
xor
movsl
jecxz
rcrb
xchg
scas
js
hlt
or
les
cmpb
loope
cmp
cmpsb
fnstcw
cmp
cmp
cltd
dec
or
xlat
and
rolb
and
lahf
xor
mov
jp
loopne
xor
das
lods
xor
imul
pusha
mov
and
aad
ret
sub
push
sti
lcall
je
adc
cmp
call
push
add
mov
shlb
addb
inc
clc
sarb
mov
movb
ret
jl
xchg
nop
shr
jge
in
jge
mov
addb
mov
in
fldenv
decb
loop
jne
cs
fwait
dec
pop
insl
xor
pop
xor
cli
mov
push
push
push
cmp
adc
cmp
sub
and
test
ja
clc
enter
push
mov
rcrb
rorl
push
pop
cmp
jo
or
add
jae
icebp
jnp
call
insb
popf
jecxz
or
es
or
cmp
es
rcl
xchg
and
jp
push
mov
fnstsw
or
loopne
rolb
mov
ret
cmpl
jp
push
fsubrs
mov
cs
adc
cwtl
movsl
rorl
and
mov
je
pop
mov
and
cwtl
xchg
cmpsb
mov
lret
lret
movsb
pop
or
add
outsb
ret
hlt
jle
jo
dec
ficoml
ret
cmc
adc
cltd
dec
jge
jmp
fisubrs
loopne
sahf
lcall
in
rclb
mov
xor
lods
test
dec
repnz
aas
push
cmpsb
dec
cmp
jle
mov
lock
cmp
mov
pusha
xor
add
test
sbb
pop
adcl
and
adc
insb
cmc
ss
movsl
hlt
cmp
lods
ljmp
xchg
insb
fimuls
inc
mov
mov
mov
orb
sahf
repnz
les
jb
sbb
jl
mov
jle
sbb
out
dec
call
in
clc
not
pop
fists
jbe
add
ficoms
xchg
stos
cli
cmp
or
jge,pt
or
push
sub
mov
test
pop
fs
cmc
rol
sub
sbb
es
clc
inc
ret
jns
pushf
aaa
adc
add
cs
in
es
pop
loop
enter
repnz
iret
cmp
cmp
pop
out
jo
loopne
hlt
loopne
and
add
clc
ds
lret
pop
fidivrl
push
clc
lock
in
lea
xor
dec
subb
in
loope
stc
push
adc
std
mov
xor
mov
inc
and
push
daa
pop
mov
data16
mov
inc
add
pop
push
jg
push
mov
je
mov
dec
and
sbb
adc
and
push
or
pusha
mov
jbe
pop
rorb
int3
pop
dec
clc
cmc
loopne
lods
lret
pop
out
int3
cmpb
test
fmul
sub
or
xor
icebp
faddp
ss
sub
sbb
add
loopne
ds
mov
pop
clc
lock
imulb
mov
popa
jo
or
mov
addr16
inc
clc
sub
mov
add
sbb
cwtl
sub
mov
push
clc
dec
push
pushf
sub
push
inc
shr
shl
mov
stc
xor
mov
push
mov
push
cmp
push
andb
mov
xor
mov
loopne
mov
inc
jb
adc
dec
sti
ljmp
fimull
pop
dec
ds
and
mov
or
jp
and
shl
sbbl
push
mov
sbb
jbe
inc
push
mov
inc
mov
scas
lods
neg
orps
aad
sub
pop
jmp
and
ds
loope
sbb
mov
and
fsubrl
jg
ds
add
insb
jb
inc
jl
shrb
lods
cwtl
into
mov
inc
mov
data16
lods
add
imul
bts
push
fmuls
loope
mov
cs
mov
fsubrl
pop
pop
and
iret
ja,pt
adc
nop
insb
in
xchg
dec
adcl
jno
test
push
pop
lahf
shrl
push
inc
pop
js
subl
pop
push
scas
or
pop
or
ljmp
cwtl
pushf
mov
inc
push
jb
mov
ss
test
pop
push
jmp
std
push
subb
lock
jp
pop
fisubrl
mov
or
outsb
jb
shll
clc
sub
or
jo
mov
idivl
push
adc
out
mov
sbb
in
xor
mov
ja
jo
js
xchg
addb
test
cld
lock
and
sbb
mov
mov
adcb
fs
pop
xorl
pop
dec
mov
hlt
in
scas
mov
fidivrl
call
hlt
add
xchg
jl
imul
mov
cmp
fcmovb
mov
cmp
fsubrl
push
push
mov
orl
dec
push
jmp
mov
adc
and
sbb
divps
fs
out
repnz
pop
addr16
lock
dec
mov
cs
adc
pop
shrb
dec
sahf
inc
fisttps
pusha
inc
negb
fcom
mov
mov
sub
lret
and
stos
mov
stc
sub
movsl
rol
arpl
gs
rorb
pop
xor
or
push
aam
daa
push
shlb
pushl
loopne
or
clc
aam
sub
xchg
add
call
popa
sub
cmp
pop
jl
dec
ds
fmuls
repnz
mov
xchg
cs
div
loope
stos
sbb
inc
ss
movsb
dec
mov
cld
adcb
mov
jl
outsl
add
jb
xor
jge
mov
inc
test
jle
mov
cmp
pop
sbb
lods
cli
cltd
add
je
dec
mov
cmp
ljmp
sbb
sbb
inc
mov
pop
std
test
fidivrl
and
roll
mov
inc
xchg
mov
sbb
orl
or
notb
inc
imul
fdivl
testl
sub
push
add
inc
or
inc
outsl
in
sbb
int3
fisttps
push
push
xchg
jns
xchg
rcrb
sbb
cli
jle
mov
js
inc
movsb
and
adc
adcb
frstor
mov
sub
mov
pop
loop
push
adc
aad
dec
clc
or
mov
bnd
idivb
and
fidivrl
ss
into
jecxz
inc
icebp
jp
mov
cli
add
das
or
loopne
lea
rorb
or
xor
xor
cmp
inc
loopne
out
xor
in
mov
cs
sbb
jmp
pop
mov
sti
cwtl
xchg
inc
cmp
cli
mov
out
dec
mov
and
leave
rclb
adc
fs
mov
mov
dec
sbb
or
test
jp
loop
mov
jbe
test
push
sub
mulb
lods
je
xor
sub
in
cli
push
xchg
lock
sbb
lret
sbb
dec
pop
out
xchg
or
dec
jmp
sub
sbb
or
pushf
dec
inc
pop
jle
fidivrl
jle
pop
jne
lock
dec
popw
pop
std
mov
pushf
scas
clc
xor
iret
lock
mov
cli
dec
sti
mov
inc
mov
addl
mov
stc
jbe
cltd
sub
add
cmp
sub
adc
inc
or
pop
cmovl
pop
stos
ja
call
jle
adc
int3
in
loope
aas
inc
loopne
add
and
lahf
inc
sbb
push
loope
pop
push
xlat
mov
ret
std
mov
cmc
mov
je
movb
push
inc
lahf
mov
xchg
test
jl
ret
add
bnd
out
and
sar
hlt
jo
cmpsb
add
repnz
iret
sbb
mov
sub
dec
or
push
test
addr16
test
push
mov
cmpl
push
mov
rcrb
loop
dec
jg
pop
cmp
jbe
mov
mov
cld
fmulp
lret
loope
jnp
aaa
sbb
mov
xor
adcl
pop
rcl
dec
or
pop
mov
js
lock
sub
pop
movsb
cwtl
fstpl
pop
pop
imul
sbb
jo
movsb
pop
mov
loopne
into
xchg
out
rorb
jle
add
clc
in
arpl
aas
mov
out
inc
jge
and
adc
cmp
jno
loop
pusha
cmp
fisttpl
mov
ret
in
cmpsb
jmp
shrl
push
ret
xor
clc
mov
jle
jmp
cmp
adc
dec
jp
pop
lcall
es
cld
shlb
add
sub
push
insb
out
insl
loop
int
xlat
iret
out
in
fwait
or
data16
or
cmp
filds
ss
mov
aaa
imul
mov
je
xor
shrl
push
pusha
call
jp
pusha
xor
es
and
jmp
cmp
scas
pusha
loopne
xchg
out
mov
lods
sbb
stos
add
pop
xchg
loopne
xor
sbb
jl
shrb
cmp
fadd
shrl
imul
cmp
fsubr
sti
icebp
xchg
clc
jl
or
scas
jge
js
sub
xor
cmp
cmp
rorb
bound
mov
add
mov
dec
mov
rcrl
pop
push
mov
fsubl
cmpb
test
and
movsb
lock
inc
inc
xchg
js
lock
cmp
dec
inc
jmp
xchg
cmp
into
ret
addr16
iret
jl,pt
icebp
ljmp
cmp
data16
mov
test
stc
fdivl
cmp
mov
push
in
les
xor
cmpsl
out
mov
jno
cmp
je
fidivs
adc
rcrl
mov
dec
ret
scas
lock
rolb
or
mov
pop
cmp
ror
pop
mov
inc
das
add
jl
scas
pop
inc
movsb
dec
pop
mov
mov
out
repnz
jbe
shll
in
aaa
rol
inc
mov
repz
pop
xor
cli
nop
jo
push
test
cwtl
and
xor
xchg
scas
dec
cmp
push
mov
mov
idiv
sub
lret
cs
out
dec
iret
xchg
push
mov
pop
pop
mov
add
data16
push
pop
push
lcall
dec
hlt
jnp
sub
cwtl
stos
xchg
mov
call
in
out
std
mov
inc
jno
xchg
xor
lret
fcoms
mov
mov
push
out
xlat
ja
inc
sarl
js
insb
shl
lret
rorl
popl
mov
sub
js
loopne
mov
pusha
mov
cs
add
jge
arpl
adc
movsb
xor
xor
sar
mov
inc
rolb
jle
cld
hlt
into
inc
dec
repnz
mov
hlt
cmc
imul
adc
lret
div
xor
in
or
mov
je,pn
inc
out
mov
lea
dec
ficompl
pop
jge
add
scas
and
and
xor
aaa
pop
and
push
loop
mul
adc
sub
dec
aam
lcall
jbe
dec
call
in
clc
adc
pop
push
leave
out
insl
lods
test
lahf
mov
cmpsl
adc
nop
jo
idiv
dec
pop
shlb
pop
or
iret
jb
cmp
xor
idivl
inc
es
insb
cmp
test
sub
je
xchg
sti
or
xor
lea
add
xorb
dec
mov
sbb
inc
rclb
arpl
fs
push
cmp
pop
pop
mov
ds
or
push
sub
fisubl
bound
ret
pop
adc
fcompl
jnp
jecxz
sub
dec
xchg
filds
jl
mov
push
pop
sbb
xchg
dec
inc
pcmpeqb
add
mov
icebp
ljmp
addr16
push
cmp
lcall
cmp
push
clc
xor
sbb
es
and
fdivr
mov
repz
dec
push
mov
in
out
inc
jp
jecxz
mov
imul
mov
gs
leave
pop
ds
pop
ret
xchg
repnz
ja
sahf
jnp
call
shlb
cli
aad
cli
sub
mov
pop
or
inc
aam
jmp
js
shrb
ret
mov
test
jge
loopne
mov
clc
pop
stos
outsb
or
push
out
shl
xchg
add
pop
cld
pop
adc
add
test
jp
jbe
xor
dec
cli
les
mov
loopne
in
ficoml
sbb
loop
push
pop
sbb
jl
iret
mov
xchg
test
fadds
cmp
dec
mov
sub
mov
ret
and
xor
aam
adc
fidivrl
pop
push
xchg
and
call
push
pop
lock
movsl
dec
jb
in
jne
fstpt
rclb
call
loope
push
pushf
pop
repnz
sbb
ficoml
xchg
orl
pop
mov
fst
push
out
rclb
xor
jbe
lock
jle
jle
sub
mov
es
lcall
ficoml
les
inc
insb
sbb
mov
lods
shlb
mov
push
or
sbb
mov
out
jmp
mov
cmpsb
jge
xor
jecxz
cmp
out
decb
sub
add
xorb
xor
loopne
in
or
cmp
fidivs
xor
mov
and
mov
les
in
lret
or
addl
or
and
sub
add
xor
mov
loopne
and
and
fcmovnbe
stos
int3
or
mov
lock
or
js
add
pushf
jmp
ljmp
adc
je
cmpsb
ds
push
icebp
lock
fistpl
jl
pusha
daa
fists
mov
orl
xchg
js
jmp
add
pop
clc
push
inc
loope
imulb
testb
repnz
jl
pop
dec
lea
mov
ds
cld
xor
pop
test
sbb
xlat
es
hlt
dec
inc
scas
mov
sbb
mov
sbb
dec
adc
shrd
call
sub
xor
add
dec
or
push
mov
jge
push
xor
xchg
or
test
pop
cmpb
int
pusha
jo
sbbl
mov
lock
mov
cwtl
push
fwait
into
cmp
sti
jl
jno
pop
inc
inc
add
inc
imul
lock
push
pop
enter
cli
cmc
sti
xor
test
push
or
mov
test
data16
pop
mov
jno
loopne
sbbb
mov
movsb
xchg
cmc
jecxz
pusha
lret
and
js
loopne
loope
in
rcrb
jp
enter
sbb
fcomps
add
xchg
or
sbb
mov
xchg
adc
sub
neg
orl
add
sahf
imul
mov
jp
fidivrl
rorl
pusha
jl
inc
jge
lods
ljmp
add
js,pn
movsb
mulb
mov
jo
pop
or
out
out
imul
mov
adc
int
lcall
cmp
cwtl
cmp
inc
test
cs
fsub
xchg
std
sahf
lcall
loope
xchg
adc
or
fiaddl
loopne
into
inc
jl
femms
sbb
testb
and
pop
fidivl
popa
push
sub
push
loope
xchg
test
pop
mov
and
xor
and
sarl
imul
mov
cmp
in
adc
mov
in
dec
lods
push
pop
mov
maxps
int3
insl
pop
jle
int3
sub
sbb
jo
arpl
out
dec
aas
xchg
inc
stos
xchg
add
decb
rcl
mov
rclb
jmp
sbbl
add
shlb
or
mov
mov
aas
in
push
rclb
push
sahf
je
dec
sub
outsb
insl
rclb
sbb
add
into
cli
xor
and
jbe
and
jo
adc
jle
outsb
outsl
mov
jle
jp
mov
add
fisubrs
in
ret
test
push
mov
in
pop
cmp
iret
xchg
mov
jne
adcb
test
jge
jge
je
repnz
mov
lcall
mov
sbb
jecxz
dec
or
into
sbb
daa
pop
or
sbb
rolb
dec
out
mov
std
jbe
ss
fsubl
add
neg
ror
imul
xor
das
push
cmc
jmp
test
not
clc
mov
iret
mov
xlat
jno
adc
arpl
js
outsb
or
movsb
pushaw
mov
inc
les
sub
loope
iret
sub
sar
data16
mov
jbe
mov
sbb
fnsave
fisubs
mov
and
clc
or
int
push
aaa
loop
mov
mov
aam
pop
cmp
pop
nop
jbe
xchg
adc
loop
clc
inc
adc
loope
and
mov
or
pop
lcall
shll
mov
aad
daa
popa
lea
and
arpl
clc
loopne
les
push
xlat
or
pop
hlt
add
jg
fbstp
repnz
call
and
add
jmp
push
cmp
mov
jnp
xor
cmp
ret
adc
cli
sub
rolb
std
popa
loop
cmp
dec
ds
bswap
enter
and
fldcw
push
icebp
or
ret
fs
cli
fiadds
js
hlt
imul
mov
cmp
outsb
cmp
cli
jecxz
fiaddl
fimuls
mov
insb
add
orb
and
sbb
rcrb
inc
adc
jo
mov
lock
mov
test
jle
mov
xchg
ds
aaa
push
aad
mov
xor
xchg
andb
lret
fmulp
js
jp
jg
inc
xor
ss
fnop
movsl
xor
push
das
mov
push
xchg
cmpsb
or
xlat
pop
push
std
cmc
dec
jmp
mov
push
sti
mov
in
adc
adc
inc
outsb
pop
sbb
hlt
leave
shlb
cmp
lcall
rorl
jp
pop
cli
ret
daa
sbb
lds
clc
push
leave
scas
cmpsl
xchg
adc
cmp
mov
lcall
scas
out
mov
into
or
cmp
jo
sbb
imul
mov
jb
push
repz
cmc
test
iret
test
mov
pop
test
and
testl
aad
add
pushw
fcmove
mov
jne
clc
mov
hlt
cli
fcompl
push
jo
popf
pop
pop
sbb
adc
xor
loopne
dec
sarl
pop
push
jg
cwtl
xchg
popf
daa
sbb
enter
loopne
es
cmp
lock
bound
jp
cmp
or
sti
jp
sbb
push
cltd
loop
mov
inc
test
mov
sub
nop
sub
test
loopne
sbb
into
outsl
adc
popf
rol
orl
add
cmp
insb
mov
or
lock
lock
push
sti
pop
out
out
xchg
adc
ss
fcoml
mov
shrl
negl
jp
and
cli
pop
sub
sti
loopne
adcb
mov
ss
inc
jl
loop
out
mov
jns
xor
xor
sbb
gs
dec
add
clc
inc
sbb
cmp
rorb
loop
inc
adcl
mov
insb
push
enter
push
dec
dec
mov
lret
sub
mull
xchg
mov
and
mov
loop
inc
add
jnp
test
sub
inc
sub
jmp
xchg
cmp
inc
mov
jle
shrb
xchg
sbb
adc
sahf
jp
inc
add
shlb
cmp
imul
test
push
add
mov
lods
sbb
mov
fs
test
lret
leave
mul
add
jbe
or
cmp
outsl
loop
add
pop
ds
sub
cli
add
call
mov
or
or
nop
cmc
add
mov
mov
ljmp
and
and
push
lock
push
cmpsb
shlb
std
popa
sbb
or
leave
in
popl
ficoms
xchg
sub
sarb
mov
mov
jnp
xor
and
jmp
cs
sub
ljmp
pop
ljmp
aaa
push
xor
mov
push
cwtl
les
and
popa
scas
pop
mov
shll
clc
mov
loop
or
dec
adc
push
cmovbe
dec
push
aam
js
gs
xchg
sub
and
adc
pop
clc
pop
icebp
jnp
popf
push
pop
icebp
adc
lds
fisttps
pop
dec
lds
out
and
loop
sbb
inc
jae
push
cmp
lock
insl
in
adc
or
mov
sub
mov
mov
fsubr
sahf
push
jno
fists
push
es
mov
out
cmc
call
mov
sbb
push
sbb
clc
es
mov
loope
add
lods
aam
push
adc
movsl
movsb
xchg
call
rcrl
pop
sub
or
push
lret
lock
push
in
aaa
jbe
cmpsl
pop
mov
and
movsb
push
pop
movsb
mov
icebp
push
pop
js
outsb
add
cmp
loope
mov
ss
rclb
sbb
sub
les
xchg
fstps
mov
shr
std
hlt
xchg
jle
mov
push
inc
sti
psubsw
adc
clc
lcall
pop
test
roll
cmpsb
call
clc
icebp
adc
ret
xor
jge
jl
lret
pop
and
mov
push
popw
fnsave
fildl
repnz
mov
mov
jle
pop
and
daa
jmp
sbb
or
cmp
pop
push
xor
je
out
cmpsb
jp
jecxz
stos
mov
int3
cmp
or
jl
sahf
sub
push
pop
add
cmp
dec
js
push
stos
xlat
shl
pop
js
call
hlt
sub
push
cli
ret
out
out
shll
mov
and
ja
mov
and
cmp
in
cmp
ja
xchg
hlt
lock
lcall
ds
stos
push
sbb
dec
test
or
xchg
lods
scas
pop
mov
xchg
sub
cld
jle
lcall
enter
cmp
out
loope
idivl
lret
mov
add
or
jno
addb
negb
jbe
lods
icebp
icebp
mov
mov
lcall
mov
bound
mov
lock
test
dec
movsl
test
pop
adc
inc
out
jb
hlt
xchg
cmp
xor
into
cmpsb
in
or
dec
mov
cs
sbb
fcomp
cli
mov
mov
lock
idiv
ds
fisttps
imul
adc
aad
mov
sarb
les
mov
sbb
es
out
movl
inc
push
xor
iret
nop
fimuls
int
mov
jbe
xchg
push
jl
ljmp
mov
sbb
and
jbe
sub
xor
negl
adc
mov
rclb
mov
xchg
repnz
sbb
negl
push
cmp
mov
cmp
xchg
mov
mov
jl
sbb
into
rorb
sub
push
sbb
jo
and
repz
add
or
fcompl
add
ljmp
les
xchg
insb
dec
stos
int
les
sbb
or
aad
xlat
stos
shl
xchg
dec
mov
or
cmp
or
insl
adc
xor
xor
xor
xchg
xor
mov
pop
xchg
aaa
xchg
jp
add
call
cld
and
ret
sti
jecxz
shlb
dec
fs
loope
cmc
dec
xchg
rol
mov
add
sarl
jns
jg
shl
rcrb
or
adc
push
jle
jo
add
scas
adc
int3
or
mov
lock
cmp
dec
loop
adc
shr
sub
lock
notl
mov
or
dec
out
lds
dec
sbb
xchg
dec
cmp
cli
fs
and
data16
dec
mov
and
insl
cli
add
jl
and
add
sbb
mov
cmc
pop
test
fiadds
pop
clc
cmp
loopne
sarb
xchg
bound
sbb
xchg
add
lock
loope
jo
and
xchg
js
loop
pop
fidivl
jl
leave
sbb
js
mov
call
jmp
testl
xor
cmp
push
hlt
inc
sbb
pop
notl
mov
mov
xchg
push
sub
call
in
mov
out
cmc
xlat
dec
mov
inc
push
test
lock
add
xchg
ret
lea
fcoml
call
pop
inc
das
or
cli
jbe
loop
pop
xchg
inc
mov
push
shr
clc
or
inc
sub
rcrb
jge
loopne
fcomip
mov
and
lods
mov
xchg
mov
xor
or
js
add
or
sbbb
push
pop
lock
pandn
or
mov
dec
cs
test
and
out
bound
mov
xchg
rcl
jecxz
sub
pop
mov
pminsw
and
clc
aaa
xchg
scas
mov
mov
test
fcomip
loopne
int3
ret
push
and
clc
mov
in
mov
pop
lods
adcb
push
fbld
loop
add
mov
pop
adc
stc
cmp
jne
repnz
ss
lods
push
mov
lods
cld
popa
pop
adc
cmp
cmp
xchg
inc
imull
je
add
pop
out
scas
jecxz
test
mov
mov
add
pop
nop
push
jl
xchg
pop
ss
pop
in
pop
adcl
mov
push
negl
lds
sbb
ljmp
xlat
pop
sub
and
fbld
adc
sar
mov
cwtl
setbe
into
mov
pop
push
ja
mov
push
jge
add
xchg
mov
mov
mov
mov
bound
pop
cmc
inc
mov
pop
pop
ret
mov
aaa
clc
inc
pop
push
add
xor
ror
rol
lds
cs
out
mov
push
bound
data16
add
lock
stos
cmp
std
cmc
loopne
out
sub
pop
int
cmp
push
fmull
dec
sbb
mov
inc
cmp
xchg
or
mov
popa
xchg
dec
push
sbb
xchg
sub
adc
adc
inc
enter
fldl
jo
scas
cld
jbe
mov
sbb
insb
jl
loope
lods
mov
cwtl
test
sti
cld
icebp
push
cmp
inc
xlat
cmp
daa
and
sub
add
daa
nop
push
pop
mov
mov
xor
ds
es
pop
test
mov
ret
lock
popf
cmp
push
rcrl
dec
xchg
data16
aam
out
or
jnp
xchg
sti
dec
call
cmc
cmp
or
jg
nop
or
jo
dec
lcall
lock
mov
dec
loopne
cwtl
push
lea
or
ret
daa
add
mov
js
ljmp
lods
push
dec
sbb
adc
dec
sti
dec
pop
sbb
sbb
lods
jmp
ret
sub
sub
call
stos
rcr
or
int3
in
lock
mov
sarb
jbe
cmp
cmp
sbb
aam
mov
loop
cmp
or
test
push
fdivs
cmpl
loope
pop
shr
int
or
fs
push
push
inc
cli
inc
add
das
push
mov
mov
movl
es
inc
mov
nop
pop
vcvttpd2dqx
test
xchg
scas
add
sbb
and
xchg
addps
and
scas
add
mov
loope
ficompl
adc
mov
adc
fdivr
xlat
jecxz
fdivs
xor
fs
mov
or
push
movsl
push
mov
mov
iret
es
fdivl
jge
mov
adc
add
adc
inc
mov
add
push
fsubrs
inc
out
mov
xchg
test
jl
mov
push
or
inc
pop
int3
push
shl
dec
mov
jl
adc
fs
jmp
mov
jo
sub
xchg
sub
cmp
loopne
je
cmc
loope
mov
andb
sahf
leave
mov
rol
and
loope
icebp
call
pop
push
xor
insb
test
js
out
xchg
int3
sbb
sahf
insb
loopne
mov
ds
fldl
fimull
flds
enter
movsb
sahf
mov
decb
nop
mov
ljmp
dec
das
arpl
bound
inc
cmp
push
lcall
pop
add
hlt
dec
add
xchg
daa
inc
outsl
inc
dec
cli
add
sub
divps
sbb
idivb
std
push
pop
ficoml
xchg
xchg
lock
ficoms
mov
cwtl
rep
pusha
ljmp
clc
in
jl
test
shlb
pop
push
or
aam
repnz
ret
sub
jge
mov
add
jae
inc
add
mov
bound
sbb
out
roll
shlb
inc
adc
and
imul
cmp
and
ss
arpl
jb
pop
out
pop
shll
mov
cmp
push
outsl
pop
jle
inc
mov
fcoms
pop
jl
aas
arpl
mov
outsl
aad
aaa
push
mov
jae
cld
sub
inc
cld
clc
push
pusha
push
cmp
hlt
popf
lcall
rorb
lock
rcr
orb
xchg
add
je
push
dec
push
inc
xchg
inc
loop
outsb
outsb
aas
or
dec
adcb
pop
pusha
testl
pop
aad
imul
pushf
pop
pop
enter
mov
and
lea
call
scas
add
cmp
shlb
xorb
jl
mov
or
sbb
stos
arpl
push
gs
cmpsl
mov
push
sub
loope
daa
adc
cwtl
mov
push
xchg
dec
mov
cli
dec
lahf
andl
cli
dec
loopne
addr16
mov
jnp
jecxz
nop
aam
xor
clc
xorb
mov
and
cld
pop
jnp
or
mov
and
lds
adc
pusha
mov
clc
pop
and
push
dec
fists
sti
jmp
cmp
pushw
mov
ds
stc
daa
pop
mov
ds
pop
dec
divl
mov
dec
mov
lock
ja
cmpsl
adc
ljmp
cmpsl
pop
inc
sbb
dec
cmc
imul
hlt
mov
inc
nop
mov
jl
iret
int
in
ja
or
lods
repz
pushf
insl
bound
je
rolb
pop
or
mov
decl
repz
shl
sub
call
xor
cwtl
push
sar
arpl
nop
repz
sbbl
adc
loop
in
pop
sbb
xchg
dec
pop
or
add
filds
rol
inc
les
push
hlt
std
add
bound
jae
or
pop
hlt
bound
jecxz
xor
lcall
outsb
jbe
push
dec
sbb
add
jmp
mov
orb
pop
rolb
and
xchg
ds
mov
sti
mov
insb
inc
pop
sub
add
or
jl
sbb
fidivrl
dec
jecxz
push
mov
adc
int3
mov
cmpsb
inc
push
add
pop
jle
cld
jle
in
testb
mov
jge
sub
xchg
test
aam
mov
loopne
add
and
jnp
add
fs
sbb
pop
lock
jo
dec
jle
ret
shld
sbb
mov
enter
cmp
jl
xchg
ljmp
dec
in
lods
mov
mov
aas
add
or
sub
cmpsl
mov
and
ss
call
call
jns
xchg
push
cld
clc
lock
xor
push
aas
xchg
lcall
push
ret
mov
mov
lods
int3
fists
test
imul
sbb
es
adc
gs
add
in
es
loope
pop
xchg
jo
sarb
or
clc
and
es
lds
ret
adc
rep
sbb
add
scas
or
clc
hlt
inc
xchg
insl
cmp
cwtl
scas
xchg
pushf
xlat
loopne
or
dec
in
clc
dec
add
xchg
adc
std
fsubp
xor
sahf
clc
out
mov
subl
clc
mov
outsb
xor
and
jne
out
xchg
fs
sti
jmp
call
orb
cmp
adc
push
clc
sbb
lahf
aam
sti
mov
or
scas
inc
push
mov
insb
xchg
lret
xchg
lock
in
jbe,pt
xor
loop
push
sar
js
pusha
js
cmc
js
pop
movl
and
jns
roll
jle
clc
or
loope
xor
insb
scas
je
pop
pop
rcrl
sub
sub
movsl
addl
pop
push
pusha
pcmpeqd
xlat
cmp
sbb
sub
stos
inc
xchg
pop
stos
dec
lds
shrb
xchg
pusha
adc
adc
cmpsb
jge
xor
add
mov
cld
je
push
mov
mov
and
jge
mov
cmp
add
xchg
movsl
mov
mov
outsb
pop
and
iret
add
fidivs
cmp
pop
out
sbb
mov
mov
test
ds
add
or
pusha
mov
mov
mov
das
lods
inc
mov
mov
fdivl
pop
arpl
jl
sar
dec
xor
pop
and
addl
push
repz
aad
jmp
xor
cmc
push
and
push
jp
inc
cmp
mov
std
arpl
pop
xchg
xor
push
call
movl
push
hlt
icebp
mov
and
mov
aam
push
mov
pop
mov
mov
iret
nop
xor
xchg
pop
cli
dec
loopne
pop
inc
push
lahf
dec
cmpsl
cmpsb
pop
rol
fwait
lock
test
test
aad
cwtl
push
mov
lcall
pop
mov
mov
mov
mov
lock
inc
idiv
icebp
add
out
dec
orb
mov
pusha
pushf
jb
pushf
sarb
mov
xor
pop
sbb
ja
out
and
add
add
mov
dec
or
repz
test
dec
aaa
aaa
aaa
aaa
sahf
cmpsb
push
or
mov
inc
sub
aaa
aaa
aaa
sub
ffree
mov
add
ds
add
inc
pop
add
mov
and
or
outsb
pop
sub
add
inc
xchg
adc
pop
lock
addb
insl
jl
lahf
and
or
cmp
jne
loopne
sbb
lods
and
jne
les
or
sbb
loop
rolb
push
jl
lock
lods
pop
sbb
test
ret
ljmp
jge
dec
and
sbb
mov
and
out
sbb
mov
je
bound
insb
outsb
mov
add
repnz
lahf
mov
push
stos
sub
int
adc
cmp
xchg
xchg
adc
pop
popf
lods
sti
push
jecxz
jmp
inc
pop
loop
jge
add
mov
sub
jle,pt
push
mov
cmp
mov
ds
out
lods
jns
adc
repz
outsb
aad
mov
push
fldcw
sbb
arpl
inc
mov
js
lock
adc
fisubl
negl
cwtl
test
push
adc
into
js
mov
sub
lret
rcrl
ror
das
pop
jmp
xchg
jle
fcomip
cli
out
lds
popa
push
xchg
fdivrl
mov
ret
push
es
scas
mov
cmp
sbb
js
ds
xchg
push
pop
cltd
or
das
mov
ret
lret
mov
sub
ret
cli
jo
scas
mov
movsb
and
out
add
out
fidivl
jp
loop
roll
fsubl
fs
jne
cmp
lods
pop
pop
sbb
nop
rcll
stc
sti
push
inc
and
xchg
leave
inc
adc
and
and
or
ret
and
call
or
xchg
std
js
arpl
int
divps
in
sub
in
dec
cmp
aas
ds
addr16
fmuls
xorb
insb
push
inc
mov
loopne
jle
sbb
nop
inc
jge
sahf
loope
cmp
cmc
arpl
and
popf
ds
mov
lahf
fcom
jbe
je
mov
adc
pop
xor
inc
inc
sub
add
in
adc
outsb
mov
out
add
xlat
add
icebp
cld
add
xchg
hlt
out
mov
mov
push
xchg
jns
ljmp
add
jno
dec
xchg
ss
inc
mov
add
push
lahf
movsl
arpl
adc
add
movsl
inc
nop
addr16
fcmovu
xchg
jbe
cmp
sarb
es
js
rclb
push
lods
int3
lods
gs
jmp
mov
lea
cli
pop
adc
imul
loop
push
xchg
in
and
jp
test
lds
mov
lock
call
pop
js
add
lods
daa
scas
ss
add
ds
data16
bsf
lods
push
inc
push
inc
je
lret
mov
cld
mov
mov
sti
inc
or
sub
adc
or
test
adc
arpl
xchg
adc
andb
push
jl
clc
sub
and
mov
cmp
movsb
inc
xor
pop
lock
pushf
incb
xor
cmpsb
inc
or
lods
sar
in
aam
jo
fdivrs
push
lahf
add
mov
negb
add
aaa
mov
sahf
shlb
sti
hlt
repnz
call
hlt
adcl
fimuls
cld
loop
mov
incb
mov
outsl
xchg
sahf
gs
cmp
ret
rcl
add
data16
cmp
jmp
movsl
mov
push
pop
test
pop
xchg
sti
jle
loop
jb
ret
add
ss
pop
inc
nop
test
shlb
movsb
xchg
cmpsb
mov
inc
lahf
and
out
mov
fidivrl
aam
das
push
pop
ss
into
push
ret
cmpb
push
pop
jge
in
imul
pop
inc
js
pop
pusha
pop
mov
push
pop
fisubrl
in
cs
add
inc
imul
stos
imul
push
mov
pop
dec
jmp
mov
mov
mov
pusha
sub
mov
loop
rorb
and
sti
adc
mov
sbb
push
xlat
xlat
fadds
in
sub
sub
adc
movsb
outsl
jmp
fsub
daa
dec
adc
pop
sub
scas
or
mov
sarb
add
lock
bswap
mov
cli
sahf
mov
shlb
push
addr16
jecxz
inc
loope
jno
and
fcomip
scas
lods
inc
rorb
or
pop
jmp
sbb
fisubrs
icebp
sbbb
jp
xchg
add
sbb
lods
lds
insb
popf
jl
push
ja
jmp
pop
pop
subb
push
sbb
jo
xor
mov
lods
or
maxps
cmp
imul
adc
inc
lods
add
dec
sbb
pop
xchg
push
int
shll
test
sub
addr16
xchg
push
jg
fmull
or
push
mov
cmp
sbb
imul
mov
push
push
aam
jge
push
out
dec
shrl
aad
pop
inc
pop
mov
mov
push
jnp
jl,pt
add
push
cmp
in
fwait
inc
xor
idivb
xchg
dec
cmp
ret
and
xchg
loop
fisubrs
adc
adc
cmpsl
xor
mov
xchg
mov
add
lods
dec
mov
mov
popl
add
adc
adc
xor
jl
adc
push
out
rorb
mov
pop
mov
mov
adc
mov
sti
push
sti
jle
cmp
xor
add
cli
push
and
dec
dec
xchg
dec
add
lahf
ds
jo
mov
push
push
push
ljmp
aad
xor
bound
cli
shlb
insb
cmp
cmpxchg
stos
rcrb
ficoms
sbb
pop
adc
movsl
mov
shrb
insl
js
fidivs
cmpsl
dec
sarl
mul
xor
rolb
shrb
leave
out
xor
sub
lods
jne
xor
sahf
mov
push
sbb
ret
hlt
test
scas
sub
push
push
lea
mov
mov
icebp
ljmp
inc
out
in
cmp
icebp
movsl
dec
and
loopne
nop
shlb
add
mov
add
mov
sbb
inc
xor
js
js
xchg
loop
scas
adc
and
push
and
or
loop
cmpsb
xorb
adc
leave
icebp
jnp
clc
lock
cli
negl
repnz
xchg
je
mov
rcr
xchg
inc
jl
pop
hlt
push
jecxz
idivl
mov
adc
lea
test
aam
or
inc
xor
test
pop
flds
jo
mov
je
fs
mov
mov
xchg
pop
stos
loop
pop
dec
push
inc
test
loop
cmp
pop
xchg
pop
xor
add
push
subb
cmp
test
adc
int3
adc
dec
adc
pop
or
rcrb
shrl
stos
inc
adc
sbb
ds
mov
inc
push
sahf
mov
or
mov
push
pop
testb
mov
es
or
push
inc
fisttps
xchg
push
cli
jle
jp
imul
xor
addl
fidivs
int3
js
mull
adc
out
mov
sahf
sub
sarb
adc
push
aaa
mov
stos
wrmsr
push
adc
pop
pop
imul
data16
loopne
movsb
push
mov
call
ds
clc
xchg
sbb
inc
push
mov
mov
inc
loopne
fwait
test
push
sbb
and
and
xchg
mov
adc
adc
or
sub
mov
jo
icebp
ret
mov
mov
js
fbstp
mov
mov
jne
jl
mov
jbe
jge
jge
cli
or
jecxz
mov
push
and
xchg
gs
ljmp
mov
mov
dec
mov
test
cmp
int
xchg
mov
mov
dec
jecxz
mov
shrb
inc
cmp
cli
neg
es
dec
sbb
pop
loopne
xchg
scas
push
fsubl
xchg
cmp
dec
ljmp
xacquire
push
and
loope
dec
mov
pushf
adc
sti
add
mov
add
inc
pop
or
int3
pop
mov
enter
dec
sub
pop
mov
xchg
pop
pop
jecxz
mov
dec
dec
ja
shrb
inc
inc
sbb
jne
decl
cmpsb
push
pop
outsl
add
ss
insl
jmp
mov
out
jmp
loopne
pop
inc
cld
in
loopne
sub
push
decl
std
icebp
popa
cmp
pop
pop
xchg
je
negl
dec
push
movl
sbbl
push
es
nop
cmp
mov
in
and
cmpsl
lahf
or
repz
fwait
aam
sbbb
arpl
ss
repnz
lcall
lock
jge
sub
js
sti
mov
and
fadd
sti
add
xor
cmp
sar
fistpl
cltd
jg
add
inc
jp
push
push
std
call
ds
jge
ljmp
pop
push
sub
fs
inc
sbb
pop
jb
dec
les
mov
addr16
xchg
mov
pop
cmp
repnz
push
ss
lods
jb
mov
test
push
cli
lock
xor
and
pop
sub
jno
jle
xchg
push
xchg
lods
icebp
dec
shlb
mov
mov
or
icebp
add
inc
pop
pop
xor
xor
add
ret
xor
hlt
push
inc
inc
fwait
in
aam
sti
hlt
pusha
sbbl
orl
pop
mov
mov
ret
or
inc
xor
or
pop
loope
nop
sahf
xchg
adc
jns
pop
rolb
sar
push
sbb
or
mov
ret
nop
dec
mov
mov
xchg
clc
add
test
mov
mov
movsl
mov
inc
jp
les
add
je
jp
clc
sbbl
xor
pop
dec
fs
xchg
xor
sbb
xchg
adc
inc
icebp
loopne
ret
inc
mov
shll
loop
inc
daa
pop
sbbb
lcall
das
lock
clc
les
daa
dec
stc
mov
rcll
movsl
shld
je
testl
sbb
clc
jecxz
shr
xor
add
push
lods
push
push
and
fdivrs
mov
sbb
lds
clc
outsl
lock
mov
pop
inc
js
call
out
mov
lock
call
lock
ds
jmp
es
sub
lock
pusha
mov
jle
cs
mov
std
aam
add
insb
imulb
sahf
es
jbe
pop
adc
out
xchg
add
adc
aam
ror
cmp
ret
mov
les
or
mov
sub
push
mov
mov
cmp
jle
xlat
addb
pop
scas
icebp
mov
add
out
es
mov
lahf
mov
sbb
cmpb
in
xchg
push
mov
js
cmpsb
adc
js
scas
xor
cs
insb
shlb
sub
testb
dec
rorb
or
call
ljmp
mov
jle
push
mov
int
rcrb
scas
aad
je
out
jge
jecxz
lret
shl
shlb
push
sbb
ret
enter
pop
bound
clc
and
mov
dec
popw
cs
cli
into
insb
loope
cmpsl
jno
jp
les
ja
jmp
imull
stc
rclb
mov
clc
add
mov
sbb
outsb
test
cmp
pop
pop
clc
outsb
in
mov
jae
popl
pop
mov
lcall
dec
rorb
sub
in
push
int3
loopne
and
movsb
lods
pop
loopne
or
pop
dec
mov
loop
mov
mov
sbb
push
xchg
sub
cmp
xor
ds
std
xchg
adc
loopne
ja
fiadds
cmp
inc
ljmp
sub
jbe
sbb
lods
shlb
push
pop
cmp
shrb
les
fidivrs
cwtl
sbb
cmpb
mov
daa
sbb
stos
inc
loop
xchg
mov
mov
or
ficoms
inc
aas
shr
adc
cld
cmp
pushf
repnz
in
pop
pop
pop
dec
lcall
xchg
ds
xchg
sub
mov
add
dec
mov
test
lock
scas
loop
aas
dec
sub
add
sub
in
jmp
mov
fidivrs
arpl
scas
cmc
dec
cmp
in
les
pop
mov
les
add
cli
loope
sbb
je
fmulp
insb
aad
lds
cmp
mov
out
outsl
cmp
xchg
xor
xor
xchg
jp
clc
jp
dec
mov
fisttps
in
pop
mov
enter
in
movsl
andl
psubsb
pop
dec
das
ds
cld
cs
push
mov
push
mov
jecxz
aam
sbb
cmc
mov
gs
repz
clc
popa
mov
sti
outsb
adcl
lods
or
ret
rcl
dec
or
sahf
aad
jne
call
sahf
mov
clc
jno
cwtl
sub
mov
aam
dec
lahf
add
add
jle
sub
dec
int3
push
mov
jle
neg
adc
mov
loopne
and
xor
xlat
dec
jl
inc
xchg
adc
enter
mov
and
pushfw
xchg
shrb
jae
jle
xchg
add
pop
test
sti
inc
mov
out
and
and
inc
and
adc
add
xor
xor
dec
cs
cmp
xchg
mov
cld
xor
ds
jae
aam
push
movsb
idivl
pop
sahf
xor
inc
ret
push
repnz
push
shrl
clc
jecxz
test
and
jbe
xor
pop
sbb
sub
mov
out
cld
push
mov
jge
loopne
std
mov
rolb
or
pusha
and
cmp
cld
pop
add
out
aam
inc
fidivs
fistl
rolb
lods
imul
mov
pop
and
test
rorb
fs
lods
add
movb
popl
jnp
jge
cmp
loopne
ret
scas
push
mov
and
cmp
dec
or
jge
push
fdivl
dec
jl
ljmp
and
push
loop
les
fmulp
insb
xchg
mov
mov
movl
rol
scas
loopne
loopne
call
ficoml
pop
stos
hlt
cmc
add
inc
jp
mov
lea
mov
je
int3
mov
cli
lahf
sub
inc
mov
outsl
insb
cld
lret
cld
jno
pop
and
movsb
sahf
or
pop
pop
push
cmp
loope
in
lcall
test
cmc
fldt
sahf
pop
adc
mov
or
inc
xchg
pushf
cmc
fiaddl
pop
movb
lret
das
pusha
insl
ret
leave
mov
push
mov
xchg
leave
push
test
sbb
cmp
shlb
push
pusha
sub
jnp
in
lcall
xchg
lock
mov
dec
pop
adcl
push
sub
xor
sub
and
je
prefetch
idivb
subb
jno
pushf
dec
mov
xor
jns
jge,pt
mov
mov
jb
adcl
adc
aaa
adc
cwtl
push
pop
dec
pop
loope
cmp
dec
add
push
aas
fidivrl
sub
dec
jg
or
push
stos
xor
jmp
je
jbe
push
stos
adc
push
cli
jp
imul
pop
jl
je
jo
pop
ljmp
jp
in
loop
out
ljmp
push
test
lea
pop
pop
stos
pop
pop
pop
sub
pop
mull
mov
std
jp
push
adc
jno
out
andl
mov
mov
cs
cmp
cwtl
loopne
test
push
aas
mov
pop
dec
mov
in
test
jge
xor
pop
pusha
xor
or
ret
jl
cs
cltd
push
sub
loopnew
aad
and
sbb
lock
jae
cmc
jo
push
dec
shl
sahf
or
test
cmpl
insb
lods
and
jmp
movl
inc
dec
cli
cmc
cmp
pop
test
pop
push
cli
cmp
cmpsb
push
test
dec
mov
mov
scas
jge
fiadds
cmc
add
and
cmpb
xor
and
incb
lahf
adc
ds
inc
fmul
cwtl
push
add
xchg
les
mov
clc
cltd
inc
cwtl
or
mov
and
xchg
lds
pop
jl
dec
ror
mov
and
cs
inc
daa
jb
inc
int
jle
jp
pop
mov
es
mov
push
sub
dec
mov
xchg
insb
xlat
sbb
cmc
mov
dec
and
js
sti
js
mov
push
pop
pop
mov
dec
push
jo
pop
adc
pop
scas
adc
pop
xor
movsb
inc
test
push
fwait
sbb
xor
or
fs
insb
add
pop
inc
fmull
clc
push
jae
or
adc
xchg
hlt
int3
add
addr16
push
ret
sub
test
dec
sahf
mov
mov
or
mov
scas
mov
mov
ficoms
mov
mov
add
bound
pop
subl
mov
icebp
jmp
push
out
fldt
ds
adc
sub
out
iret
test
cmp
mov
push
test
jl
xchg
cld
xchg
pusha
cmp
in
loope
or
addr16
xchg
lods
ja
xlat
mov
sbbb
adc
push
dec
mov
mov
fisttps
xor
test
mov
aas
dec
popf
push
jno
fsts
jle
scas
inc
and
cmpsl
enter
dec
leave
bound
or
add
jecxz
mov
test
jg
dec
les
in
out
cli
js
xchg
shlb
fistpll
jbe
adc
sub
icebp
dec
mov
call
add
bound
xor
repnz
sub
cmp
cmc
fs
adc
mov
xor
fcompl
aam
pop
stos
icebp
js,pt
ds
mov
or
mov
sbb
mov
pop
xor
mov
jl
out
dec
loope
pusha
pushf
sahf
scas
jb
jecxz
loopne
cmpsb
scas
out
movsb
int3
dec
mov
add
mov
add
fbld
scas
outsb
push
jecxz
js
cli
mov
insb
mov
mov
lods
fimuls
cmp
cmpb
inc
pushf
out
lods
test
xchg
shl
and
dec
add
movsb
fmull
xchg
or
and
negl
shrl
xor
lds
push
and
out
or
dec
cmpsb
jle
push
sbb
fstp
sub
mov
inc
mov
or
jb
fldcw
addr16
daa
movsb
mov
test
pop
shl
mov
or
shlb
dec
aas
mov
fistpll
inc
inc
mov
rol
int3
mov
push
fdivr
sbb
and
pop
fisubrl
add
mov
sub
jge
or
push
loop
jo
in
push
push
xchg
clc
into
filds
mov
sbb
idivb
in
xor
dec
lahf
push
clc
mov
mov
stos
mov
scas
or
outsl
xchg
pop
outsb
xorb
cmpsb
call
sub
cwtl
xor
inc
add
icebp
pop
lods
negl
xchg
movsb
jo
setp
pusha
cltd
dec
xchg
movb
icebp
mov
test
hlt
jns
sub
sti
sub
idivb
xor
or
add
and
call
mov
movsl
ljmp
cmp
mov
ret
mov
and
jecxz
cmc
sub
sbb
dec
shrb
push
dec
mov
mov
cmp
jb
outsb
es
call
adc
mov
add
clc
pusha
push
mov
jl
ds
mov
sbb
inc
sbb
pop
subb
push
das
jmp
dec
lods
push
ret
sbb
rorb
and
adc
shll
add
scas
mov
call
ljmp
rorb
ljmp
push
aad
test
lds
adc
cmpsb
pop
mov
cmp
xor
xor
fbld
fimull
inc
jl
mov
out
mov
xor
inc
aad
mov
add
pop
adc
xchg
test
leave
sub
jne
jge
jno
xchg
fnsave
mov
jmp
mov
dec
cli
jb
popf
je
inc
xor
jecxz
xchg
int
cmp
cmpsb
in
ficomps
pop
dec
in
jo
mov
pop
adcl
pop
add
sbb
stc
mov
jbe
lock
mov
fsubrl
repnz
in
stc
fsubrp
ficoms
pop
sbb
fwait
push
ljmp
lret
mov
cmp
sbb
cli
ss
pop
aad
ja
push
arpl
ss
xchg
pop
xchg
or
fstpt
testl
push
mov
mov
dec
mov
std
fimuls
add
repz
je
mov
mov
das
adc
xchg
dec
sub
shll
pop
insb
push
mov
fwait
int3
adc
mov
sbb
mov
xchg
and
inc
jl
push
mov
xchg
subb
shlb
or
and
rclb
rorb
adcb
in
fcomps
inc
loopne
and
adc
stos
sbb
movsb
xor
hlt
dec
inc
mov
push
pop
cmp
pop
lret
mov
outsb
push
int3
jp
ror
and
sbb
cmp
jp
hlt
and
jg
les
insb
dec
loop
clc
dec
call
sub
js
orb
clc
jle
jle
sbb
sahf
inc
sub
lods
sbb
push
orb
js
add
inc
loopne
cmpsl
sbb
add
je
out
xchg
outsl
sbb
cli
ljmp
sbb
xor
jno
pop
xor
movsb
shlb
lock
mov
cmpsl
xchg
inc
adc
jp
jmp
clc
test
clc
add
dec
movsl
mov
aas
mov
test
mov
ret
loop
sbbl
mov
clc
push
into
fstp
insl
push
mov
dec
push
loope
test
cmp
mov
lods
jnp
add
mov
sahf
adc
nop
lock
and
movsl
movsb
fadds
push
xchg
jno
jmp
jb
add
fwait
bound
cli
hlt
add
sub
enter
add
mov
jp
jo
cmp
cli
jg
fists
or
shrl
movsl
xchg
adc
mov
or
pop
movsb
xor
loopne
add
cmpsl
pop
clc
cmpsb
mov
dec
cmc
mov
insb
jecxz
sub
js
jbe
ja
xor
xor
or
pop
js
adc
xchg
fldl
imul
lea
inc
popl
and
flds
int3
in
cmpsb
or
aad
fs
inc
push
mov
jp
push
or
xor
sub
mov
loope
lock
mov
subb
adc
rolb
xor
cmc
push
dec
in
fbld
pop
shr
mov
mov
hlt
aam
adc
xor
mov
jnp
jl
cmp
dec
pop
push
test
push
xchg
ss
clc
cmc
jmp
sbb
aam
in
add
jg
fdivp
push
lods
hlt
popf
stos
push
mov
cmp
lods
es
mov
int3
lcall
cmpsb
push
iretw
push
and
cli
push
pop
dec
lldt
sbbb
js
mov
std
cld
push
pop
jle
or
cmpsb
and
cltd
push
jnp
loop
js
pcmpeqd
neg
ret
xabort
idivb
xor
rcll
lahf
dec
and
pop
pop
cmp
push
jb
cli
clc
icebp
rorl
pop
jmp
clc
loopne
or
cld
cmp
jle
into
inc
imul
inc
dec
adc
or
and
mov
and
loope
cmp
fidivrl
stos
mov
aas
gs
cli
dec
mov
cmp
push
sub
mov
jp
jmp
add
jge
xchg
dec
or
mov
hlt
lahf
mov
add
clc
xchg
dec
sub
push
into
aam
fmulp
sbb
sbb
add
add
mov
mov
push
insb
cld
push
xor
test
out
add
fnsave
ret
cmp
mov
cli
push
mov
mov
xor
mov
sbb
sbb
in
shlb
andl
inc
add
dec
or
mov
mov
xor
mov
pusha
add
mov
pop
stos
xchg
jo
push
xchg
fdivl
jo
mov
ficoms
and
inc
sbb
mov
imul
out
rcl
cmpb
mov
jge
cmp
cmpb
pmaxsw
stos
jnp
dec
mov
inc
dec
shrb
rolb
ror
cwtl
in
mov
inc
psubusb
cli
hlt
sbb
test
insb
jge
incb
inc
sbbb
sbb
mov
cmpsl
xor
sub
jg
mov
loop
cmpsl
pop
imulb
jo
mov
mov
enter
add
and
pop
adc
scas
mov
mov
sub
ds
mov
xor
add
push
dec
aad
push
dec
add
or
adc
je
pop
pop
mov
mov
add
adc
and
push
push
pop
cli
mov
je
mov
ljmp
clc
mov
shl
bound
clc
xchg
lock
ficoml
rolb
add
or
mov
nop
xchg
mov
cmpsb
mov
push
jne
lahf
dec
cmp
js
nop
mov
add
xorl
and
push
mov
adc
cli
and
xorb
fwait
pop
sti
jmp
jns
inc
pop
es
in
jb
stos
mov
mov
outsb
or
test
push
fsubs
clc
pusha
js
hlt
ss
pop
or
lea
xchg
loopne
stc
pop
pop
fiadds
cmc
shlb
lret
mov
mov
mov
push
xchg
cmp
rorb
std
mov
xlat
mov
mov
cmc
aas
xchg
lea
cld
pop
jns,pn
ljmp
popf
inc
cld
ret
xor
test
stc
cmp
inc
jo
or
sbb
movsb
fldl
cwtl
ljmp
test
push
sub
xor
shlb
test
pop
std
mov
rcll
pushf
movsl
xlat
adc
daa
jbe
sti
inc
push
cli
mov
fadds
pop
lahf
movsb
or
push
cmp
jmp
vpsraw
inc
aam
clc
jo
cld
je
int
pop
repz
adc
dec
lock
ds
sar
popf
pop
jg
or
jecxz
fnstcw
hlt
jmp
loop
adc
mov
lock
mov
pop
mov
call
out
mov
pop
ss
lds
jne
lret
shll
inc
mov
dec
add
pop
lock
pop
or
ror
hlt
xchg
jne
ja
in
mov
jbe
sbb
sub
ret
ficomps
sbb
mov
rcll
sub
push
jmp
div
outsb
repz
cmp
insb
mov
dec
and
scas
fsts
loopne
sub
mov
mov
mov
int3
xchg
jmp
cs
push
mov
clc
mov
and
cmp
xor
dec
push
add
andl
enter
push
mov
mov
cmp
lds
mov
xor
ljmp
jge
xor
add
push
aas
cld
sub
jle
add
inc
fisttps
lahf
add
lods
push
push
adc
mov
fs
xchg
mov
mov
ror
and
mov
std
lods
inc
push
in
push
idivl
mov
mov
or
test
cmp
test
pop
add
mov
mov
stos
cmpsb
dec
stos
mov
xor
xor
loopne
es
jmp
or
jge
mov
rcr
fbstp
jo
pop
and
ja
scas
push
and
xorl
cmp
ret
ret
inc
cmp
subl
adc
sub
hlt
repnz
out
jnp
mov
xchg
je
loopne
jl
rcr
ljmpw
jg
fisttpll
clc
cmp
fdivr
cmp
jb
sahf
addb
lahf
ds
mov
lret
jle
jg
push
jl
push
sub
cs
push
lahf
jmp
dec
xchg
sub
pop
ljmp
ljmp
mov
dec
cli
xchg
cmp
pop
adc
pop
mov
sbb
int3
out
xor
mov
dec
inc
pop
cwtl
out
jp
in
lret
jne
lds
scas
movsb
mov
lret
js
jp
sti
cmpl
jg
sbb
addb
lret
movsl
jae
sub
daa
sbbl
fmuls
pusha
mov
mov
jne
sbb
mov
inc
mov
cmp
mov
push
jo
jbe
into
shlb
lock
dec
popa
pop
jl
jo
ret
xor
sbb
pop
xor
mov
and
je
aam
fadds
clc
pop
rolb
sub
and
les
mov
xor
pop
mov
dec
adc
addr16
or
movhps
iretw
xchg
pop
jl
rolb
mov
jle
sbb
pop
std
addb
sub
adc
icebp
lock
add
fistps
imul
addl
mov
shld
cmovs
movsl
cmpsb
sbb
ret
inc
es
adc
nop
sub
jge
ret
add
mov
js
mov
js
sbb
jbe
pop
pop
and
divb
popa
add
ficoms
stc
sub
sub
sahf
adc
lret
dec
adc
ds
nop
mov
jge
and
sub
xchg
pop
jns
and
jge
outsb
ja
in
out
and
and
xchg
jo
push
push
roll
push
xchg
inc
adc
out
mov
pop
or
mov
es
add
or
cli
adc
js
fadds
hlt
loop
and
test
sub
cmpsl
addr16
ss
aam
dec
add
cmp
xor
or
xchg
hlt
pop
cmpsl
mov
sub
xchg
push
sub
add
loop
jbe
mov
or
push
fbstp
push
or
add
stos
or
cli
add
add
adc
pushf
sbb
inc
jnp
hlt
jecxz
pop
out
jns
mov
rolb
xchg
push
dec
and
or
outsl
cmp
adc
adc
fisubrl
pop
movmskps
fisubrl
pop
loopne
fildl
mov
pop
inc
mov
adc
mov
xchg
lods
cli
out
xor
mov
xchg
pop
mov
pop
and
jb
dec
add
inc
rcrb
scas
jle
push
and
data16
mov
push
pusha
add
test
fisttps
aas
cmp
in
push
ret
hlt
push
push
nop
mov
outsb
push
or
pushf
sub
pop
aam
pop
pop
std
test
sub
inc
xor
adc
movsb
pop
popa
cmpsl
add
mov
mov
pop
ljmp
shlb
out
mov
je
xchg
ret
lea
insb
out
into
scas
or
jbe
scas
fsubrp
clc
sbb
adc
popf
xor
roll
or
lods
and
lea
or
jle
popa
ret
icebp
fwait
icebp
shll
jl
fwait
mov
sub
jmp
sub
es
jmp
mov
xchg
pop
ja
mov
testl
loop
pop
jo
mov
les
nop
in
pop
or
jp
pop
ljmp
test
cmc
cmpb
dec
adc
movsl
dec
into
out
test
mov
lock
adcl
roll
pop
adc
shrl
jl
mov
loopne
push
je
pop
inc
mov
aaa
adc
cltd
sarl
add
mov
faddl
add
cmp
in
xor
adc
jp
rolb
mov
jo
fisubrs
or
and
inc
movl
lock
insb
shlb
cs
ljmp
cmc
jecxz
les
fisttpll
xor
fs
jl
jb
ds
call
das
pop
pop
adc
imul
es
mov
into
xor
shl
push
cli
pop
mov
add
rcl
lock
cs
mov
inc
clc
mov
add
rcr
clc
push
scas
imul
in
inc
js
xor
mov
or
mov
mov
arpl
push
inc
sbb
push
shrb
and
sahf
adc
sarl
imul
and
in
sbb
js
js
inc
xor
sbb
add
inc
mov
cmp
cmpsb
shl
out
mov
movsb
scas
dec
jle
lcall
fwait
cmp
cli
sbb
iret
dec
add
aam
arpl
jecxz
mov
sbb
fildll
andb
xlat
sbb
xor
or
jl
hlt
add
sar
clc
mov
fs
movsl
test
or
ds
sarb
ljmp
xchg
shll
sub
test
jmp
push
jo
mov
psllw
insl
pop
ret
mov
jnp
mov
sbb
xchg
cmpl
neg
push
mov
test
cltd
xlat
sub
outsl
or
icebp
dec
pop
mov
lahf
dec
and
inc
clc
mov
or
clc
jl
out
addr16
test
out
ret
adc
jp
sbb
cmp
cmp
mov
xor
cmpb
or
inc
push
lret
sar
jl
xchg
movsb
mov
cld
scas
sub
mov
imul
jp
mov
out
adcl
push
movsb
comiss
xchg
mov
inc
or
loop
and
jle
mov
mov
mov
dec
jle
push
sbb
sub
leave
adc
add
das
insl
loop
or
jno
test
gs
loopne
insb
lods
lods
inc
add
push
pop
mov
dec
mov
rcl
nop
pop
jl
and
add
je
jl
pop
adc
inc
fstpt
lcall
jae
sarb
inc
push
dec
cwtl
in
ja
fiadds
pop
imul
test
add
push
mov
dec
mov
mov
or
movhps
lock
neg
rol
sub
cmp
cmc
loopne
xor
fs
mov
aas
jo
test
jge
insl
dec
and
push
pushf
out
pop
jmp
test
ds
loop
imul
stos
jp
cmp
hlt
call
neg
test
out
xchg
push
dec
inc
clc
test
lock
orb
mov
pop
and
cli
stos
arpl
filds
ja
push
push
add
movsb
push
mov
movsb
adc
jnp
shrl
pop
pop
push
dec
or
add
inc
sub
inc
dec
gs
ret
and
into
mov
movsb
xor
call
inc
jecxz
jo
fmuls
xchg
clc
add
adc
sub
hlt
ljmp
push
fwait
loope
test
mov
inc
loopne
or
jecxz
and
mov
sbb
insb
les
ds
sbb
mov
ret
sar
data16
scas
inc
in
cld
std
jp
loopne
data16
pop
outsb
cs
js
icebp
add
fimuls
mov
pop
pop
or
pop
scas
push
lock
pop
scas
shl
inc
push
shl
pop
iret
push
or
xchg
sub
mov
inc
in
cmc
pop
aad
push
cmp
cmp
repz
insl
jl
subb
bound
xor
xor
jl
lock
dec
mov
jno
pusha
dec
xchg
or
movsb
lods
jg
icebp
mov
mov
sub
mov
inc
shlb
xlat
cld
jle
mov
mov
lock
or
push
push
mov
orb
or
add
mov
test
add
xchg
fcomp
mov
or
or
xor
test
add
fsubl
push
ret
ljmp
pop
mov
loope
add
mov
jle
add
std
cwtl
xchg
dec
mov
ret
or
and
mov
loope
lea
mov
add
adc
add
dec
ret
sarb
sub
rorb
pop
xchg
mov
stc
hlt
or
andb
add
notb
lock
jecxz
ret
das
push
or
xchg
dec
pusha
and
ret
cmpsb
dec
mov
repnz
loopne
movsl
lock
sbbb
jp
sbb
cli
push
dec
repz
roll
xchg
inc
add
sub
mov
pop
jg
push
daa
xchg
movsb
adc
pop
das
push
loopne
pusha
cld
adc
mov
fsubrp
icebp
call
sub
mov
jns
mov
daa
dec
dec
pop
cmp
stos
add
jnp
xor
dec
jge
lds
mul
rcr
adc
sbb
mov
push
enter
clc
clc
jne
loopne
cmp
pop
das
insl
or
call
adc
movsb
mov
mov
adc
fimull
cmp
push
rorl
pushf
out
aam
xor
fmull
cmp
in
dec
clc
jmp
bnd
push
js
jo
imul
negb
cs
fimuls
pop
and
or
xor
or
pop
ficoml
add
and
ret
pop
pop
add
xor
inc
cmp
jne
rcrb
jle
aad
sar
sbbl
and
mov
jge
ljmp
pop
dec
daa
mov
pop
hlt
int3
das
fldenv
jl
pop
ret
sbb
and
add
pop
add
sti
cli
add
outsl
movsb
enter
push
rcl
jl
mov
push
push
jnp
jmp
cmp
xor
mov
inc
inc
add
cmpsb
or
lahf
push
add
mov
push
push
arpl
sarb
sbb
ret
push
jbe,pt
xorl
xchg
out
sbb
insb
add
ret
out
dec
pop
popl
pop
jbe
xchg
lret
shlb
jle
jae
xchg
mov
cmp
aas
or
nop
inc
lods
hlt
repnz
pop
cli
cli
mov
out
inc
fcomip
mov
cmp
scas
xchg
lods
mov
lds
and
cmp
ret
push
dec
adc
add
dec
ds
aaa
and
jge
loope
es
and
rol
add
or
outsb
jl
cmp
xchg
mov
loopne
pusha
into
cs
clc
jmp
orb
mov
mov
fiaddl
jle
sahf
push
call
pop
iret
insl
das
adc
mov
pop
mov
jno
mov
loop
fs
hlt
insl
imul
into
repnz
and
lret
movsl
push
xlat
not
jp
mov
xor
or
lret
into
icebp
cmpsl
loopne
sbb
mov
sbb
lods
sub
xchg
or
mov
add
sahf
xor
cmp
aas
mov
scas
sbb
je
mov
mov
xor
scas
mov
jle
mov
adc
mov
pop
aaa
mov
push
fcomip
or
lock
out
hlt
mov
aam
lea
sub
mov
out
repnz
loopne
testl
out
orl
pop
mov
sbb
scas
xor
cmc
jge
pop
xor
int
adc
jo
mov
mov
test
adc
loopne
rol
pop
mov
clc
sbb
sub
negl
xchg
in
sub
fcom
imul
rclb
jns
push
adcl
pop
inc
inc
jo
jmp
insl
jge
push
inc
add
adc
nop
clc
cwtl
mov
jnp
call
lret
xchg
push
sbb
or
and
test
and
js
and
cmp
call
xor
xor
push
or
lods
inc
push
mov
shrl
sub
shlb
cmp
out
push
mov
xchg
stos
setnp
mov
mov
lahf
test
inc
mov
test
adc
in
pop
mov
cli
loop
ljmp
dec
sbb
dec
jge
sbb
in
clc
lock
lods
hlt
xchg
movsb
hlt
mov
push
fdivl
femms
mov
les
das
xchg
pop
in
sub
adc
cmp
jo
fsubs
lret
mov
int
ficoms
fnstcw
inc
xor
or
sar
sahf
ds
adc
xor
shlb
jp
and
push
nop
in
adc
push
mov
cmp
push
cs
lock
fimuls
pop
fsubrs
nop
cmp
enter
sbb
xchg
lahf
test
xchg
jb
cmp
shrb
mov
sub
enter
ds
mov
loopne
mov
dec
test
hlt
cwtl
xchg
mov
in
adc
rol
cmpsl
cmp
jbe
outsl
and
mov
and
xor
fstpt
ret
imulb
mov
jbe
pushf
and
adc
mov
clc
mov
lods
loope
mov
loopne
mov
adc
adc
pushf
or
lock
js
int
sub
scas
paddw
inc
xor
rorb
fcomps
add
pop
shrb
js
fs
rolb
mov
pop
pop
sahf
xor
fists
pavgw
rcll
xchg
pop
popf
fisubrl
mov
jmp
bound
jge
inc
xor
bound
push
das
dec
jle
xchg
comiss
dec
lock
dec
push
mov
rol
cmpl
out
push
outsl
fstpt
icebp
dec
add
test
push
push
pushl
pop
pushf
mov
divb
popl
xchg
scas
xchg
sahf
sbb
fsubrp
mov
and
pusha
sahf
std
lods
adc
dec
lret
inc
push
mov
popa
push
push
push
cmp
inc
enter
mov
mov
jge
or
push
sbb
xchg
push
add
push
sbb
or
dec
inc
mov
pop
ljmp
sub
pop
push
sub
fdivl
sbb
adc
fldl
or
std
lock
int
je
sub
mov
lds
mov
stos
cmpsb
fs
loopne
sahf
popa
and
ljmp
out
cltd
xor
or
out
mov
cmpsl
nop
hlt
add
ds
js
sbb
out
andb
adc
cmp
and
lods
arpl
jmp
out
stos
addl
popa
imul
mov
sbb
loope
ret
mov
xchg
lods
inc
clc
xor
cmpxchg
test
jp,pt
test
pusha
ja
rolb
mov
rcrl
out
push
test
jmp
jge
pop
cmp
cmp
add
push
fisttps
mov
popf
pushf
fdivrl
or
shl
jl
ljmp
cmp
sarb
ficomps
repnz
out
es
pop
lods
or
pusha
inc
dec
dec
je
sarb
orl
jle
aam
fnstsw
jle
mov
add
pop
sbb
push
fs
test
ss
imul
jo,pt
movl
out
jno
and
outsb
xlat
repz
pop
insl
jne
lahf
mov
or
xlat
orl
mov
ljmp
and
imul
nop
aad
test
sahf
push
jmp
addl
fcomps
mov
sarl
and
xchg
movsb
sub
std
icebp
fld
xor
inc
push
mov
xlat
ret
inc
testl
enter
out
popf
fmull
jo
and
or
stos
pop
dec
mov
and
mov
ret
pushf
pop
mov
paddd
adc
cmpsb
icebp
jbe
shlb
insb
jno
js
fcmovbe
out
pop
mov
int3
and
and
mov
lock
add
out
in
out
or
xlat
idivl
std
lret
test
sbb
mov
cmc
mov
mov
xlat
stos
push
je
xor
mov
ljmp
sub
aaa
cmp
mov
lods
sahf
aaa
dec
icebp
pop
pop
add
nop
data16
or
insb
sub
push
pop
es
test
out
add
mov
hlt
addr16
jbe
call
push
sbb
mov
jnp
cli
fcomps
add
xor
push
out
aas
dec
cmp
mov
pop
sbbl
and
sbb
fdivrs
ret
adc
scas
add
pushf
mov
cmp
xchg
pop
xor
pop
push
and
test
loopne
ja
js
aam
mov
xor
add
lods
insb
jge
fnstsw
or
jp
ss
loopne
pop
dec
xchg
cs
sbb
dec
cld
push
push
ljmp
int3
push
lods
push
je
loope
sbb
xchg
mov
lods
dec
int3
loopne
push
push
jecxz
cmpsl
or
cmpsb
pop
aad
stc
hlt
push
cmp
jl
xchg
inc
jg
push
jne
pop
cmc
inc
fs
loope
pop
js
add
outsb
mov
mov
cmpb
add
cmpsb
mov
shlb
sarl
pop
fsubl
nop
jno
loope
push
adc
sbb
inc
mov
clc
add
cmpsl
roll
test
fwait
cli
jle
pop
xor
test
outsb
ljmp
rcll
sbb
and
push
or
lahf
push
push
cmpsb
cmp
and
loope
fcomp
sbb
pop
xor
imul
xchg
icebp
cmp
jnp
dec
jmp
jl
popa
stos
mov
sti
push
ds
sti
jo
ficompl
movb
insb
sahf
pop
test
mov
jp
xchg
movsb
push
leave
add
mov
fs
cli
lock
sbb
add
jecxz
orb
sbb
pop
outsl
es
and
ror
imul
fistpl
pavgw
sbb
sbb
call
mov
imul
hlt
sbb
test
es
shrl
cmp
lahf
mov
xchg
ljmp
add
stos
pop
push
test
sbb
fisttpl
es
insb
xor
mov
mov
ds
inc
sub
dec
and
icebp
lock
dec
loope
cmpsb
sahf
add
loope
mov
jp
sbb
sub
clc
and
mov
movsl
bound
dec
cmp
in
mov
outsl
das
ficomps
cmp
sahf
rcr
pop
mov
loop
inc
dec
mov
mov
jo
es
or
je
push
in
fs
mov
xchg
sbb
dec
jle
out
sbb
push
cmp
insb
push
jle
mov
jnp
clc
in
mov
push
test
mov
mov
test
sbb
clc
lock
push
push
cmp
sar
cmp
stos
push
mov
xchg
xor
sbb
pusha
add
xchg
es
dec
dec
jecxz
push
data16
mov
sub
pop
addl
fcmovb
fidivs
mov
in
sarb
push
rclb
inc
nop
push
test
repnz
and
jecxz
dec
push
clc
fildl
std
mov
push
pop
hlt
jecxz
ror
and
das
ret
and
repnz
pusha
xchg
mov
mov
cmp
adc
dec
mov
scas
mov
add
xchg
pop
andl
mov
clc
mov
in
dec
jle
bound
out
scas
cmp
js
cmp
cmp
xor
xor
cmp
or
jecxz
roll
sbb
shr
cmpb
mov
mov
inc
clc
ja
add
or
fbstp
std
adc
sbb
sbb
shl
pop
sbb
stos
pushw
icebp
ret
cmpsl
adc
cmp
xchg
cltd
sbb
push
adc
or
popa
jl
pop
pushfw
xor
push
outsl
scas
outsl
inc
dec
pop
or
inc
add
movsb
mov
xor
sti
and
cwtl
and
in
aas
jle
sub
sub
push
scas
ds
and
sub
jl
aam
iret
xchg
fiadds
cli
loop
shrb
inc
mov
ret
rolb
mov
lds
rolb
jp
daa
negb
das
push
jl
or
xor
js
cmpsb
loopne
lock
mov
stc
mov
aas
xchg
stos
add
and
or
mov
jge
inc
loope
jecxz
nop
and
push
push
lcall
mov
out
and
sub
incb
fisubs
dec
pop
xlat
nop
adc
nop
cmp
nop
sbb
mov
jge
clc
insb
cmc
mov
dec
lock
scas
and
and
sbb
push
subl
adc
cltd
or
out
push
and
aas
sbb
push
in
or
and
scas
pop
push
call
cmpsl
call
insb
nop
cli
push
dec
or
les
jae
ja
clts
int
hlt
sub
daa
out
mov
das
jl
push
pop
mov
fisubrl
fldl
add
popf
bound
cmp
clc
push
addl
data16
mov
in
les
push
lcall
mov
ret
xlat
adc
sahf
pop
dec
in
add
sub
or
mov
cld
push
pop
add
jno
loopne
imul
jmp
push
movsb
movsl
xchg
xor
cmc
xchg
inc
cld
cmp
xor
mov
stos
jl
shrb
mov
dec
cmp
dec
mov
dec
sub
adc
or
add
sbb
mov
pop
outsb
mov
inc
sti
loop
test
push
pusha
sub
popa
inc
fnstenv
and
jo
sbb
js
adcl
push
cltd
push
mov
imul
loope
adc
repnz
sub
dec
cmp
sub
mov
push
test
pop
pop
jg
cmp
and
mov
mov
xlat
xor
decb
sbb
loope
loopne
pushf
out
fwait
xor
cld
sbb
ret
ret
das
pop
mov
jl
jmp
mov
jno
mov
jbe
and
cmpsb
push
adc
jbe
sbb
ljmp
mov
dec
pop
cltd
movsl
mov
mov
in
aas
jb
ficomps
das
mov
or
stos
int3
pop
mov
xchg
mov
fdivrl
adc
push
or
or
mov
clc
or
stos
mov
movsl
icebp
subb
insb
mov
lods
mov
xor
outsb
or
inc
call
sbbl
daa
jb
jb
clc
icebp
add
xor
jl
jno
test
sarl
js
les
push
pop
inc
or
pop
mov
xor
lahf
pusha
jl
cmp
cmc
jecxz
scas
mov
jmp
rcrl
sub
inc
lods
test
jnp
loope
inc
dec
xchg
push
and
lock
mov
xchg
mov
ret
and
jp
stos
sub
cmp
icebp
jge
js
pop
and
jo
outsl
xchg
ret
pop
adc
xchg
push
ss
mov
stos
jge
xchg
ds
or
push
push
mov
in
push
out
push
lahf
mov
nop
pop
ss
push
pop
adc
mov
inc
mov
outsl
test
lock
cmpsb
dec
dec
lahf
xor
out
xor
jo
movsl
xor
loop
add
inc
xchg
push
ljmp
hlt
loope
pop
cmpsb
xor
loop
mov
add
jae
out
or
loope
mov
mov
inc
rolb
mov
mov
dec
push
adc
lahf
pushf
dec
xor
adc
icebp
sarl
clc
add
adc
clc
icebp
dec
jl
push
pop
sbb
push
xchg
push
fsubp
lret
inc
push
movsb
pop
jle
es
or
ljmp
ds
xchg
inc
nop
fimuls
mov
cmp
rcl
cmpsl
mov
add
bound
adc
mov
sbb
test
xor
or
sbb
rorb
mov
test
clc
add
leave
cs
and
sbb
lahf
sti
loopne
mov
mov
dec
jg
cltd
clc
hlt
inc
mov
in
mov
add
mov
mov
pop
pop
pushf
bound
ss
enter
add
ja
push
inc
dec
pushf
mov
mov
rol
testl
cmp
sti
mov
orl
test
push
jle
push
fucomip
xchg
into
xor
movsl
mov
adc
mov
ljmp
js
add
xchg
les
testb
xchg
adc
out
pop
xchg
repz
mov
test
pop
and
push
dec
jbe
inc
lock
adcb
cwtl
push
call
add
jno
movsl
divl
in
adc
sar
mov
fmuls
mov
clc
sbb
dec
test
lock
mov
cs
push
cmp
lock
push
out
lods
out
add
push
popf
inc
shlb
dec
xchg
test
aaa
int3
inc
adc
icebp
or
sbb
insb
push
jge
ds
cmp
in
cs
out
mov
and
xor
pop
std
cmp
or
loopne
dec
lods
es
sbb
mov
shl
mov
xchg
mov
call
outsb
rclb
push
xchg
out
ja
je
push
fs
mov
xchg
outsb
mov
mov
scas
and
das
pop
and
push
cmp
ljmp
addr16
bound
lods
mov
dec
clc
adc
jnp
push
and
xchg
sbbb
mov
aad
stc
jmp
dec
cmp
adc
push
mov
pop
adc
adc
cmp
lods
add
ds
fiadds
lods
fldl2e
std
dec
xor
imul
fs
enter
push
push
pop
mov
fwait
dec
cmp
xor
hlt
hlt
call
sbb
jl
loopne
into
cld
inc
mov
insl
fnstenv
outsl
jle
scas
or
pop
aad
sahf
push
xor
inc
and
cmp
loope
xor
cmp
sbb
sti
divb
clc
cmp
js
fsubrl
adc
dec
mov
mov
push
ja
mov
cmp
stos
inc
cmp
js
inc
dec
push
xchg
jp
out
cmpsl
push
pop
loopne
insl
into
jmp
data16
push
xor
add
insb
push
shll
mov
ret
or
xor
incl
adc
jp
nop
mov
cmc
dec
add
enter
pop
icebp
jmp
dec
mov
lahf
out
mov
mov
lock
pop
cmpsb
dec
in
xchg
les
rcl
lcall
popa
loop
xchg
pop
sbb
inc
mov
bound
loop
cmp
js
cmp
loopne
icebp
loopne
push
test
shlb
sbb
outsb
inc
mov
fcoms
push
popf
mov
push
out
adc
inc
outsb
pop
mov
xchg
in
dec
stos
leave
cltd
push
arpl
call
sbb
in
xchg
adc
jbe
mov
insb
into
xor
pop
es
mov
das
xchg
scas
mov
fdivrl
repz
cmp
jo
stos
sbb
insl
cmp
lcall
fwait
les
mov
icebp
xchg
xchg
sahf
adc
inc
xor
addl
dec
jle
dec
and
inc
inc
pop
lods
push
sbb
sbb
test
xchg
xor
pop
adc
mov
pop
repnz
leave
js
loope
ret
push
dec
pop
clc
dec
loopne
cmp
inc
xchg
push
sub
xchg
or
call
push
sub
push
fs
scas
mov
mov
mov
dec
sahf
push
pop
das
mov
js
js
out
loop
or
gs
fwait
sahf
ja
loope
jg
mov
stc
inc
pop
mov
inc
ljmp
lcall
bound
dec
and
icebp
jge
popa
adc
mov
jge
mov
or
inc
sub
add
ljmp
rorb
addb
dec
pop
and
scas
je
fcomps
dec
faddp
fiaddl
aas
cmpl
stc
push
pop
popf
lahf
and
mov
shrl
push
icebp
in
cmp
mov
clc
cmc
ljmp
xchg
xchg
test
scas
add
push
adc
int
ret
jns
cmp
add
mov
jle
fisubrl
add
lea
out
popa
mov
mov
mov
cli
push
inc
and
ss
inc
shlb
cwtl
add
in
mov
xor
in
repz
hlt
fabs
jge
pusha
sub
add
dec
fidivrl
jle
cmp
inc
and
icebp
or
movsl
addr16
hlt
jmp
clc
cmp
adc
stos
inc
loope
testl
jnp
ja
roll
or
lret
fsubrs
cmp
sbb
subb
in
sub
sbb
or
pusha
mov
insb
loope
mov
jmp
sub
das
jbe
cli
cmp
jge
cld
movsb
lret
lcall
icebp
cltd
in
vpsraw
or
jge
gs
je
popa
push
ds
mov
clc
scas
icebp
pop
enter
jle
out
sbb
sarb
out
sub
and
dec
jecxz
jnp
jecxz
xchg
jo
out
int3
push
add
jg
movsb
test
ss
push
adc
add
mov
cli
out
adc
mov
fiadds
fs
clc
loope
mov
add
mov
jecxz
bound
jbe
rcrb
das
xabort
lret
mov
sbb
pop
cltd
mov
or
inc
aas
cwtl
into
popf
push
push
out
stos
and
xlat
pop
inc
cmp
mov
cmp
jns
mov
fstps
ds
jl
xchg
adc
aaa
rolb
test
call
cmc
ret
push
fisubl
punpckhwd
iret
sbb
add
fsubl
fadd
loope
int3
int
mov
icebp
icebp
rcrl
mov
mov
ret
xchg
inc
mov
mov
mov
lock
rolb
lea
jle
icebp
cmp
rorb
inc
mov
dec
clc
inc
xor
pop
xor
fsubs
inc
rcrb
ret
pop
pop
ret
fdivr
fstl
fdivr
xchg
or
sbb
inc
out
in
or
inc
js
aad
call
dec
movsl
mov
cmc
ror
cld
sbb
lods
push
inc
jecxz
mov
dec
cld
aaa
pushf
mov
pop
out
jne
cs
cld
out
icebp
sahf
insl
movsw
dec
cs
jb
mov
and
wbinvd
or
dec
imul
cmpsb
jecxz
mov
and
test
rorl
imul
icebp
hlt
inc
push
jp
outsb
cltd
mov
shlb
add
push
mov
inc
cmp
rcrb
inc
jl
movb
lock
repnz
cs
fcmovnbe
movsb
pop
cmp
mov
pop
insb
xchg
sbb
rol
pop
fidivs
adc
pop
popl
push
mov
xchg
xorl
inc
fisubs
mov
pushf
shll
pop
scas
movsl
rolb
clc
jmp
lret
add
pop
push
cmp
sbb
js
lock
sub
pop
ret
lods
les
inc
inc
ret
pop
pop
scas
jle
insb
jb
loop
int3
pop
adc
addr16
jl
mov
pop
push
mov
ds
ja
lods
lcall
push
dec
cmp
icebp
xchg
and
mov
and
sarl
clc
add
sbb
test
or
insl
shlb
mov
out
mov
add
cmp
rcr
add
aas
xchg
inc
sub
xlat
dec
imul
ss
sbb
dec
pop
sub
xor
or
jl
cs
repnz
mov
ljmp
test
nop
out
mov
nop
and
loop
push
mov
add
clc
in
jbe
pop
lahf
sahf
push
xchg
into
push
stos
xlat
add
xchg
les
lods
loop
les
icebp
loop
arpl
ljmp
out
push
or
inc
idivl
les
pop
xchg
mov
loop
mov
mov
pop
or
cmp
cmp
mov
js
les
aaa
xchg
fbld
mov
les
push
icebp
jp
inc
pop
or
sbb
cmp
inc
xchg
lods
lock
fidivrl
lock
mov
pop
sub
xchg
rcrb
arpl
sbb
mov
stos
daa
sbb
movsb
push
inc
pop
dec
cmp
xchg
inc
in
movsl
jne
loop
insb
mov
pop
push
cmpb
xor
pop
xorb
dec
dec
dec
add
addb
xchg
out
ja
call
adc
push
push
dec
repnz
xor
lret
mov
pop
movsb
mov
stos
xchg
push
clc
add
shll
push
push
xor
jno
jmp
sbb
insb
push
mov
clc
jge
jnp
stos
and
int
cmpsl
mov
or
mov
jge
sub
arpl
mov
movsb
daa
sbb
pop
jbe
sbb
xchg
loop
jge,pt
pop
pop
dec
jg
xorb
scas
out
inc
sbb
lods
pop
lock
sahf
xchg
mov
out
sahf
data16
data16
xorb
jb
sbbb
in
xor
jb
addr16
loopne
hlt
lods
inc
and
leave
std
test
inc
pop
or
mov
pop
push
imul
lock
or
rcll
insb
aaa
push
jecxz
and
pushf
mov
add
jl
loop
mov
pusha
clc
lods
lea
cld
lock
pop
mov
outsb
and
push
jg
call
xchg
gs
pusha
adc
inc
cmp
xor
jno
jns
or
cld
inc
into
fucomp
jge
or
jge
lahf
pop
fldt
sub
dec
roll
pop
mov
jne
cmp
les
out
test
xchg
pop
cltd
sub
ljmp
xorb
jl
xor
push
imul
and
xchg
lods
push
pop
into
ljmp
and
or
adc
clc
vpsllvd
cmp
pop
and
testl
pop
pop
dec
iret
ljmp
clc
popf
je,pn
popa
insb
mov
inc
mov
loop
cs
inc
ja
clc
lock
push
fnsave
stc
inc
rol
ret
mov
hlt
clc
aas
bound
pusha
mov
sahf
repnz
gs
add
dec
mov
popa
jge
shlb
sub
jae
lock
jbe
push
clc
aaa
adc
cli
cmpsb
popa
std
ljmp
dec
xor
adc
inc
subl
inc
add
notl
sahf
or
inc
xchg
inc
mov
jo
lods
sbb
das
out
roll
test
test
mov
push
cwtl
test
xor
or
lcall
or
adc
sahf
mov
ror
mov
inc
mov
cmp
pop
out
jo
mov
or
push
clc
sahf
or
fwait
sahf
pop
and
adc
outsb
mov
push
xor
out
ret
jae
mov
repz
testl
jbe
fwait
pop
lock
jmp
pushf
mov
inc
clc
xchg
bound
pop
rcrl
out
cmp
popf
addl
loope
mov
xchg
xlat
cld
or
pop
mov
roll
andb
sbb
jmp
push
push
adc
out
sti
loop
imul
out
aaa
in
test
cwtl
push
fildll
sahf
jp
lock
scas
and
sub
aad
dec
cmp
jo
rorb
jl
adc
adc
popf
add
push
cmp
sub
sub
push
cmpl
rorl
mov
cmp
adc
jmp
rolb
test
std
pop
test
sarb
out
push
imul
loopne
mov
xchg
xor
cltd
aam
mov
ljmp
icebp
loopne
rorb
jg
push
gs
push
mov
mov
pop
fmul
jge
dec
scas
test
gs
xor
mov
push
cmp
cld
lods
xchg
js
clc
dec
mov
add
repnz
cs
orb
xchg
out
inc
xchg
sbb
ds
jecxz
lods
xor
cwtl
jmp
icebp
jge
pop
mov
out
ret
es
stos
xlat
in
xor
xor
inc
xor
aam
es
and
xchg
jp
jmp
push
sahf
ret
add
hlt
cmp
les
xor
sarb
mov
imul
or
das
sub
test
loopne
adc
rcrb
and
add
mov
mov
lea
sbb
xor
repz
or
movsl
cmp
jg
sbb
fucomip
jmp
pushf
dec
lods
mov
stos
xchg
rcl
aad
or
aas
push
test
mov
popa
fdivrp
and
push
dec
xor
inc
aaa
loopne
test
sbb
ja
pop
mov
lahf
in
dec
cs
push
push
mov
and
mov
sti
sub
mov
aad
jno
xchg
mov
adc
hlt
and
js
adc
jg
aad
and
inc
lock
xchg
call
fcoml
bound
clc
mov
es
rcll
mov
push
int
mov
repz
sbb
repz
jg
sbb
jle
sbb
cmp
test
cmpsl
arpl
dec
mov
jmp
dec
repz
xchg
ss
jp
loopne
mov
movb
inc
mov
cmpsl
mov
aas
faddp
mov
pop
xchg
push
sti
add
pushf
mov
xor
mov
call
popa
and
cld
adc
ds
dec
inc
ss
imul
rcrb
outsl
cmpsl
out
ret
pop
xchg
jno
loopne
sbb
add
jle,pt
shlb
in
fcoms
mov
roll
packssdw
jmp
lret
fmull
fistps
js
add
sahf
rclb
sub
jae
shrb
cmpsl
pshufw
aam
ret
fwait
mov
xchg
es
jo
mov
xchg
adc
aam
repnz
out
push
adc
push
jmp
mov
inc
lret
push
pop
and
andb
pop
mov
ds
jge
sbb
nop
lods
les
cmp
push
inc
dec
hlt
inc
mov
sub
repz
pop
push
pop
xchg
fdivrp
cmc
push
mul
jnp
out
inc
lcall
add
or
notb
loopne
and
adc
mov
bound
mov
out
imul
pop
inc
insb
out
jns
das
and
enter
mov
mov
lock
and
clc
inc
aam
daa
loopne
repnz
movsb
adc
mov
inc
sub
out
inc
dec
inc
scas
pop
data16
lock
scas
or
xlat
shrl
sbb
test
movsl
ds
push
mov
lret
mov
testb
cmp
sahf
pop
jecxz
push
mov
bound
mov
nop
cmc
cld
push
repnz
or
mov
inc
mov
test
adc
mov
sub
xchg
mov
clc
inc
and
and
cmpsl
in
cli
push
adcb
xor
pop
push
mov
sbb
add
push
in
xor
js
mov
lret
mov
add
cmp
or
sub
insb
rcll
adc
in
loopne
cs
push
xor
mov
loope
pop
mov
add
sbb
jl
sub
orl
pop
xchg
lds
call
mov
inc
loopne
add
push
pop
mov
je
bound
daa
mov
jnp
or
test
adc
mov
push
lea
notb
cmp
imul
ret
test
mov
mov
pop
pop
pop
and
lods
lods
mov
mov
cld
jns
popl
dec
cld
cmc
cmp
mov
mov
dec
shlb
int3
sub
rcl
adc
clc
dec
andl
sbb
mov
pop
push
subb
inc
xchg
aas
jle,pt
pop
inc
adc
cli
cmp
aam
pop
push
fstps
dec
push
shrl
push
push
mov
aas
mov
or
add
xor
mov
jge
xor
lds
mov
aam
mov
mov
xchg
and
pop
ss
add
add
insb
add
pop
jg
pop
pop
inc
leave
faddl
popa
js
inc
push
inc
stos
sbb
sbb
mov
dec
push
mov
ret
sti
inc
test
add
push
mov
pop
fincstp
jecxz
pop
bnd
fdivrs
sbbb
add
loop
mov
cmp
sbb
stc
aad
filds
push
mov
pop
add
mov
pop
mov
cld
or
xchg
mov
inc
add
mov
cmc
push
and
les
lahf
inc
pop
arpl
and
orb
addr16
mov
rcl
scas
push
cmp
insb
cmp
xor
push
dec
cmp
loope
subl
xchg
cmp
mov
jecxz
pop
cmpsb
cmp
pop
xchg
ficomps
out
mov
lret
jge
xor
icebp
hlt
lods
es
add
call
dec
sbb
sahf
lock
adc
clc
call
or
js
fcoms
dec
push
sub
push
mov
outsb
cmpsb
mov
cmc
jecxz
ret
and
mov
lds
rolb
insl
jge
sbb
imul
es
jo
mov
insb
fdivrs
xchg
jecxz
inc
ffreep
push
mov
and
mov
inc
push
lret
mov
clc
mov
pop
sbb
push
ss
xor
push
inc
repnz
mov
dec
fldenv
sahf
pop
out
inc
call
mov
movl
push
xchg
ret
loopne
in
out
fstps
cmc
sarb
jp
add
test
dec
adc
dec
or
enter
and
mov
or
adc
ds
mov
sti
dec
outsb
lock
xor
sub
mov
jns
sti
loopne
aad
xchg
stos
push
into
cmp
jmp
int3
push
sub
imul
loope
std
inc
mov
push
push
icebp
pop
cmp
fsubl
scas
fwait
pop
rorb
bound
leave
les
adc
or
test
push
outsl
in
jl
push
dec
int3
adc
imul
or
int3
sarb
mov
push
and
jae
ja
jle
mov
cmp
add
pop
xchg
adc
call
jmp
cli
cmp
push
shrl
lret
shll
scas
sti
dec
jecxz
loop
mov
imul
movaps
movsl
subb
stos
clc
inc
es
cmpsb
sahf
jecxz
je
leave
sbb
aaa
cli
pop
cmp
ljmp
or
sub
pop
cmp
xor
xchg
sub
iret
stos
push
and
shlb
test
test
lock
sbb
repnz
jl
dec
adc
clc
insl
lods
rolb
xchg
ljmp
push
loope
mov
scas
lds
pop
mov
cwtl
cli
jmp
xchg
or
scas
mov
imul
pop
mov
movsb
ds
xor
sbb
lahf
aam
push
adc
dec
call
push
imul
insb
xor
jle
or
out
js
clc
sbb
bound
jmp
dec
cld
ss
fsts
pop
add
imul
pop
pop
jp
cwtl
icebp
out
mov
stos
mov
inc
dec
loope
xor
mov
add
js
mov
xchg
pop
mov
addr16
test
in
pop
aas
pusha
jge
dec
mov
daa
mov
push
xchg
jge
lods
lcall
mov
pop
loop
leave
sbb
inc
sti
cmp
inc
bound
adc
xor
andb
jle
jp
fidivl
loop
cmp
mov
mov
add
icebp
xchg
or
popf
cmp
add
test
add
xchg
sbb
cmp
loopne
aam
js
fcoms
push
add
cmp
add
testl
in
fisubs
and
mov
sbb
xchg
push
add
cmp
sarb
adc
loopne
jmp
shlb
lock
pop
in
mov
pop
scas
ds
js
pop
dec
cli
sbb
mov
sub
out
cmc
jmp
mov
add
out
insl
sub
pop
xchg
mov
shll
cs
divl
mov
mov
nop
sahf
icebp
dec
shrb
mov
jp
out
outsb
idivb
test
pop
sbb
jle
inc
stc
mov
out
pop
push
mov
mov
in
xchg
xchg
mov
movsb
jne
nop
xor
xchg
test
jbe
je
jmp
popf
les
movsl
cmp
push
sub
rorb
shlb
aas
mov
ljmp
popf
ds
dec
mov
cli
lea
push
cmp
mov
xor
icebp
cmp
push
ret
jmp
aaa
and
cmp
pop
jle
imul
xchg
mov
mov
pushf
out
add
aas
ss
loop
lods
es
mov
outsb
es
add
mov
jo
test
shlb
dec
rcll
push
paddq
fs
mov
pop
in
js
mov
push
push
test
aad
dec
jae
jg
mov
mov
or
dec
xchg
push
xor
cmp
lret
pushf
repnz
adc
xor
mov
push
cltd
scas
dec
iret
cmpsb
mov
jo
lret
loopne
mov
inc
out
pusha
pop
mov
sub
idivl
bound
movsb
or
lret
lret
mov
loop
mov
ret
pop
icebp
ret
sti
loope
rcr
xchg
jne
add
sub
cmc
and
cli
push
lret
jmp
jge,pn
cmc
aam
dec
repnz
push
ret
xchg
subb
mov
jmp
mov
add
ret
mov
inc
cld
test
sbb
iret
mov
sbb
dec
nop
pop
push
popa
hlt
ljmp
inc
fsubrs
into
mov
sub
shlb
repnz
call
cs
jge
out
mov
jo
mov
cmpsb
xchg
jle
ficoms
daa
mov
repnz
push
sbb
rcr
lock
rorb
rolb
add
rolb
push
mov
or
and
mov
adc
sub
xor
and
fisttps
imul
sbb
pop
sbb
and
sbb
jp
push
mull
jge
rcrb
outsb
shl
mov
cmp
sbb
cmp
gs
cs
sahf
pushf
push
inc
dec
push
xchg
cmc
mov
lcall
fistl
or
sarl
jge
add
aas
fwait
fwait
mov
ds
enter
addl
sub
or
out
mul
shrl
cmc
into
push
ljmp
outsl
mov
inc
test
insl
jbe
pop
mov
cltd
test
sub
xor
push
insb
lock
rcrb
sub
pop
cwtl
dec
shlb
movsl
lods
repz
mov
scas
push
pop
test
outsb
sbb
mov
push
or
popa
xor
push
lds
cmp
stos
ret
std
addb
rcrl
cwtl
mov
idivl
add
xor
insb
rcr
push
pop
inc
js
js
mov
ret
sti
mov
or
clc
je
cmp
repnz
mov
pop
xchg
or
sbb
fistpl
inc
mov
inc
and
and
sub
add
add
xchg
rcl
push
mov
rclb
pushf
push
add
or
jle
pusha
lock
insl
mov
xor
aam
cmp
or
xchg
cmp
jl
dec
call
inc
pop
and
daa
movsl
rcrl
movsb
pop
dec
and
xlat
or
mov
sub
ficompl
sub
test
xchg
pop
js
ss
fs
sub
cmpsl
inc
push
cli
scas
pop
xor
jbe
mov
pusha
shlb
inc
inc
jb
pop
mov
js
cmp
push
aas
push
sbb
push
and
aaa
adc
xchg
test
jle
pop
pop
es
lcall
mov
xchg
and
mov
cmp
adc
lock
fcompl
out
testl
mov
test
push
push
lock
sbb
in
jo
mov
push
dec
jl
push
insb
cld
xorl
pop
push
out
int3
fiadds
out
or
test
or
adc
ret
jle
jle
cld
shlb
les
jg
clc
nop
lods
mov
pop
mov
out
push
adc
pop
cwtl
xor
jge
outsl
ret
push
sub
sbb
pusha
out
sub
jl
rclb
mov
sbb
pop
mov
enterw
rol
cmp
hlt
loopne
fucomp
sarl
mov
sbb
insb
or
mov
mov
ficoml
inc
and
jp
pushf
hlt
cs
out
loopne
hlt
clc
fmull
mov
loope
pop
push
pushf
jne
xor
or
jge
or
movsb
int
push
jl
pop
sub
cli
hlt
cs
shlb
add
mov
movsl
mov
popa
inc
mov
dec
xchg
fimuls
dec
test
fldenv
push
scas
and
sbb
mov
js
ficomps
sbb
test
pop
lcall
or
insb
por
add
adc
adc
jle,pn
mov
jl
xchg
lock
fdivrl
subb
clc
jle
dec
lock
subb
pop
sti
pusha
jns
in
cmpb
mov
insb
call
sbb
mov
std
mov
pop
js
jge
push
push
cmc
insb
or
leave
cmp
adc
cld
mov
jb
cmp
in
out
sub
and
pop
jbe
mov
loop
js
sbb
push
sbb
gs
push
hlt
in
add
cmp
sub
aad
popa
jns
scas
pop
pop
sbb
mov
fsubs
add
je
movsb
popf
adc
jl
add
xchg
loopne
mov
ficoms
insl
fistpl
lock
mov
imulb
lods
mov
mov
inc
mov
sbb
bound
aam
dec
out
movsl
int3
cmp
cli
test
push
ucomiss
mov
push
push
dec
mov
lea
ficoms
pop
sub
enter
mov
dec
add
mov
or
add
mov
ljmp
and
imull
xor
loopne
aam
scas
xchg
pushf
pop
std
enter
hlt
pushf
daa
lea
lods
inc
mov
dec
shlb
xor
push
es
dec
pop
lods
add
push
pusha
ret
aas
jb
xchg
fs
mov
pop
fbld
cld
mov
imul
enter
and
sbb
jge
cli
add
pop
dec
mov
inc
lret
mov
pop
loopne
dec
lock
xlat
lods
sub
jl
sbb
or
jl
sub
or
or
push
jbe
pop
jl
scas
xchg
pusha
cltd
or
pop
fs
ret
push
add
loope
stos
push
daa
ret
jl
jle
dec
ljmp
xor
mov
aam
xor
js
mov
jmp
sub
mov
xchg
test
push
orb
jl
loopne
pop
mov
call
rorl
les
xor
out
aad
pop
popf
push
incb
inc
popa
jnp
in
ror
cmp
negl
push
rorb
fs
clc
sbb
out
or
jo
rol
test
push
adc
push
dec
and
or
pop
mov
rcr
mov
clc
pop
xor
fadds
mov
repnz
add
mov
jge
es
das
ficomps
pop
xchg
divb
cmp
popa
pop
sub
cmp
test
mov
shl
inc
test
dec
pop
xchg
js
push
in
xchg
adc
movsb
idivl
add
lock
mov
movsl
mov
add
jnp
in
jo
and
or
or
jae
push
les
add
in
push
js
mov
and
jbe
out
roll
xchg
sbb
out
mov
jnp
inc
pop
push
orl
ret
movsl
and
jg
xchg
ss
and
cmpsl
pushf
adc
pop
cs
js
and
pop
cmp
pop
scas
jle
enter
pop
arpl
pop
push
cmp
jns
clc
or
roll
mov
pop
inc
sahf
mov
pop
enter
in
test
je
repnz
mov
lds
fimuls
outsl
fdiv
sub
mov
loop
xor
int
shlb
loop
inc
nopl
xor
mov
mov
fcoml
push
jmp
dec
jbe
lea
das
sbb
aas
add
adc
mov
jl
inc
add
mov
xchg
lods
add
and
xchg
and
ljmp
loopne
sub
pop
mov
cs
cmpsb
xchg
or
ret
cmpsl
inc
xor
int
xor
jnp
and
cmp
es
out
lods
sbb
iret
xor
lods
jne
fbld
enter
xor
test
mov
jle
pop
jge
jb
repnz
loop
pop
xor
mov
push
ret
addr16
jmp
pop
dec
sti
loopne
adc
aam
test
fistps
add
inc
or
lods
xor
ljmp
xor
mov
mov
in
add
mov
lods
lret
inc
scas
xor
lcall
fstpt
jg
es
lea
add
popa
mov
fwait
lock
lods
cmp
imul
jg
jno
pop
sarb
movsb
cmpsl
jp
decb
add
insl
into
dec
pop
add
scas
sbb
dec
mov
iret
add
mov
mov
xor
movhps
sbbb
push
enter
sar
repnz
mov
push
lret
std
push
cmp
loopne
pusha
mov
xchg
test
testl
mov
inc
inc
mov
mov
jle
hlt
loopne
cmp
clc
sbb
adcl
sbb
test
mov
fisttpl
loop
mov
pusha
add
xchg
mov
mov
cmp
jp
push
add
les
xchg
or
jo
mov
mov
mov
mov
xchg
or
das
add
jl
mov
test
or
mov
sbb
jl
clc
xlat
mov
mov
imul
mov
int3
push
ss
sbb
and
clc
adc
ffree
ds
lock
data16
loop
jp
fidivs
adc
sahf
xor
pop
xchg
outsb
jl
sbb
cs
lock
ja
sti
sbb
nop
je
les
mov
sarb
and
jno
mov
insb
cld
mov
xor
pop
jecxz
hlt
popf
mov
mov
cmc
add
sub
fisttps
shlb
clc
mov
loopne
dec
out
into
scas
outsl
xor
call
mov
push
inc
clc
loope
cwtl
lock
xchg
lock
jl
mov
add
inc
dec
or
cmpsl
mov
mov
pop
push
cmp
int
rcr
adc
pop
and
jae
cmpsl
dec
int
pushf
mov
data16
or
xchg
and
js
ljmp
pop
or
cld
or
and
aaa
lea
fistpll
icebp
pop
pusha
jb
arpl
outsl
sbb
adc
push
movsb
cs
push
adc
xchg
into
add
test
mov
fsincos
cmp
inc
or
pop
mov
cmp
out
sahf
jne
adc
repnz
popf
add
push
cmc
bound
and
inc
mov
call
psubusb
out
lds
aaa
mov
or
adc
sub
hlt
cmp
aaa
aaa
or
or
xchg
addl
insl
mov
jg
sbb
addr16
les
xchg
jbe,pn
jl
loope
and
lret
mov
adc
xlat
daa
or
cmp
call
sub
sbb
gs
jbe
jb
lds
data16
outsb
jp
rcrl
sar
cld
orb
les
lock
mov
stos
pop
adc
fistpll
or
loop
xor
inc
or
add
addr16
xchg
sbb
out
icebp
adc
loopne
cwtl
scas
test
icebp
cmp
sarb
or
jg
mov
cmp
rcrb
mov
bound
and
xchg
add
and
pmaxub
xchg
inc
inc
jbe
and
inc
pop
fs
dec
ret
je
and
pop
movsb
xchg
push
dec
add
clc
cmpb
into
out
movsb
aas
push
xor
roll
mov
adc
xchg
or
fildll
ret
push
loop
js,pt
dec
rcr
or
je
out
shll
pop
lret
jl
push
add
aam
cmc
push
pop
pusha
nop
ds
mov
rcrl
mov
mov
cmp
cmp
stos
add
js
hlt
jmp
jge
jmp
inc
add
enter
cmpsl
inc
iret
hlt
xor
out
xlat
xor
mov
lds
mov
xor
iret
pop
cli
mov
icebp
sub
loop
cli
and
mul
adc
movb
fiaddl
xlat
ret
push
pop
sub
rol
pop
jp
push
das
add
mov
testl
in
push
and
xchg
sub
jns
jnp
out
dec
out
movsb
mov
shlb
negl
testl
adc
jle
inc
or
pop
cli
lock
jg
jbe,pn
xchg
add
scas
lods
outsl
lcall
jle
mov
popa
inc
cmp
daa
push
pop
lahf
stos
dec
xor
pop
push
or
das
sbb
sbb
aas
mov
out
mov
ljmp
cld
inc
jbe
jmp
test
into
outsb
in
enter
clc
out
les
mov
or
shll
clc
pusha
jecxz
rolb
fildll
imul
push
sub
aad
xchg
mov
lods
add
ret
sbb
insb
lret
repnz
cwtl
movl
mov
jmp
jl
cmp
xor
out
or
sub
ret
mov
jnp
fucom
jbe
jns
add
cmpsb
int3
push
cltd
mov
lock
xor
call
fcmovu
fidivs
loopne
or
data16
popa
add
mov
out
enter
clc
cmp
clc
aam
jo
mov
cld
mov
int
dec
pop
mov
mov
dec
mov
lods
xchg
mov
jnp
je
sbbl
dec
xlat
cmpsb
jge
int
jge
jg
ret
xor
bound
cmpsb
in
rcrb
clc
shrb
adc
icebp
loop
inc
or
mov
fidivrs
fnstcw
inc
rclb
xor
mov
subb
ret
dec
xchg
ds
dec
dec
rcrb
push
iret
add
xchg
leave
je
lea
inc
scas
mov
in
lcall
movsb
mov
lock
xchg
ljmp
xor
push
js
cwtl
sarb
repnz
sbb
cmc
add
sbb
xorb
stos
scas
mov
cwtl
pusha
in
enter
pop
xchg
push
fdivp
ljmp
lods
out
adc
jo
jb
mov
out
sbb
je
bound
icebp
jp
sub
adc
out
inc
push
mov
movb
orl
ret
ret
jl
cmp
rcr
sbb
aad
pushaw
test
jbe
inc
addb
popa
cmpsl
add
into
xor
push
rcl
xchg
lods
fiaddl
clc
clc
lock
cmpsb
sbb
sbb
jg
cmc
or
jle
repnz
outsb
rolb
dec
add
mov
mov
leave
cli
or
sbb
mov
push
cmp
sahf
cli
and
push
out
into
mov
popa
and
push
stc
clc
cmc
enter
add
fs
jle
add
dec
xor
mov
jo
call
into
xor
movsb
dec
sbb
test
mov
dec
pop
pop
push
out
dec
sbb
mov
pop
jl
dec
scas
aam
or
cmp
jle
cmp
inc
dec
pop
mov
into
push
lcall
pushf
mov
pusha
add
shr
adcb
fdivrs
fsubr
xor
js
push
and
mov
les
mov
jg
jo
xor
das
fiadds
mov
inc
inc
pop
pop
xor
xchg
mov
ljmp
enter
movsb
stos
inc
outsl
mov
mov
je
pop
imul
push
mov
rclb
dec
pop
adc
jp
push
push
lea
aas
test
push
pop
cmp
fistpll
mov
jp
mov
cmp
test
xor
xor
sub
cmp
pop
adc
lock
je
inc
pop
cmp
mov
cli
stos
jno
ficompl
testb
pop
out
call
mov
test
int3
icebp
sub
fisubrs
sub
cmp
lock
xchg
cld
pop
hlt
aad
sbb
adc
andb
mov
cmp
mov
aad
andl
pop
jle
push
sub
jle
ficoml
fdiv
sti
pusha
or
mov
rorb
or
cli
ds
add
xchg
lret
outsb
mov
cmp
testl
cli
sbb
push
lods
xchg
out
mov
jge
dec
es
mov
xchg
ret
movsb
inc
popf
filds
fdiv
vpmacsdqh
mov
pusha
jl
loopne
cmp
in
mov
addb
mov
ret
imul
arpl
testl
and
fimuls
repnz
sub
hlt
add
loop
fimuls
inc
pop
nop
push
lock
push
adc
loopne
xchg
cmpsb
cld
mov
mov
inc
sbb
stos
xor
clc
loopne
push
push
adc
scas
adc
ljmp
xchg
test
cli
mov
cld
push
bound
jns
mov
outsb
push
mov
sti
mov
dec
mov
sbb
jne
js
push
nop
in
jbe
mov
call
lods
add
lea
jbe
inc
aas
and
mov
aam
dec
and
js
mov
fiaddl
xor
sbb
loop
les
push
sbb
cs
and
es
out
cmp
jp
adc
in
pushf
push
jle
mov
xor
mov
cmp
jbe
inc
dec
pop
and
vfrczpd
sbb
cmc
icebp
sbb
jb
clc
add
jp,pt
lock
clc
or
add
data16
push
fs
fidivrl
jl
test
or
data16
jl
ss
dec
jmp
sbb
or
into
mov
add
xor
cmpsb
icebp
js
or
add
clc
lcall
and
push
add
sub
add
nop
mov
pop
jge
jo
add
xchg
clc
ret
xchg
lods
les
mov
inc
push
int3
mov
dec
cmpb
jge
inc
xchg
xor
cmc
cli
dec
bound
sar
cmp
notl
movsb
int3
push
les
in
cmp
inc
fimull
and
es
jne
std
mov
dec
scas
inc
push
xchg
mov
andl
je
mov
sarb
xchg
xchg
ret
popa
loope
mov
loope
pop
enter
mov
adc
negl
xorb
gs
mov
sbb
enter
pop
add
jle
and
push
sub
rcrb
mov
data16
cmp
jle
jns
clc
rcll
mov
dec
rcpps
cli
loop
mov
fnstenv
cmovle
mov
jge
out
push
jb,pt
push
lret
xlat
fisubrs
jp,pt
call
xor
icebp
daa
movb
jp
pop
sahf
inc
jbe
mov
loope
inc
or
mov
mov
lds
scas
js
mov
mov
pop
add
pusha
sbbb
jp
dec
xchg
inc
sub
mov
fdiv
ret
mov
xchg
loopne
mov
sbb
jno
xchg
xchg
hlt
ret
movsb
add
scas
add
mov
adc
testb
mov
insb
cld
clc
and
lods
mov
in
sbb
repz
inc
mov
cmp
insb
sub
add
push
lahf
jle
ljmp
lock
roll
mov
cli
rclb
mov
jmp
ds
cmc
adc
bound
testl
std
push
je
in
dec
movsb
or
push
lods
fldl
cmp
lret
test
cli
jmp
xor
clc
mov
push
fs
mov
adc
sbb
or
pop
jle
repnz
test
pop
push
out
sbb
xor
fsubrs
mov
nop
or
xor
push
call
cmp
rorl
cmp
jmp
mov
outsb
in
lahf
test
jo
and
lsl
cmp
loope
mul
leave
pusha
adc
in
mov
xor
mov
xor
bound
push
loop
inc
cli
outsb
cmp
les
xchg
mov
leave
rorb
outsl
pop
iret
mov
into
dec
adc
rol
movsb
outsl
jnp
mov
jo
jp
dec
mov
cmp
bound
jle
test
ret
fsts
add
pop
mov
cld
loope
ret
or
mov
pop
inc
and
roll
je
dec
shlb
shll
xor
mov
cld
mov
xor
xor
mov
cli
and
mov
mov
hlt
sub
cmp
into
mov
or
loopne
dec
push
cmp
pop
pop
gs
sub
pop
fstpl
cmc
clc
nop
icebp
jmp
mov
int3
sub
fucomip
add
call
lret
pop
rolb
insb
data16
mov
jo
inc
icebp
notb
shl
dec
lods
adc
sbb
cwtl
test
jle
add
add
add
icebp
loope
popf
out
dec
xchg
xor
and
sub
xor
mov
rol
aam
pop
pushw
lock
inc
jb
es
ret
fs
xor
clc
jo
add
push
gs
push
fbld
add
cld
pop
ss
jle
loope
in
mov
fwait
adc
sbb
pop
fsubr
les
add
fsubl
loopne
mov
adc
dec
js
add
das
add
cld
pop
clc
sub
sbb
movsl
adc
and
jl
sub
pop
xchg
push
es
in
and
scas
jle
mov
std
jno
call
inc
call
mov
cld
push
push
ds
ljmp
mov
bound
cs
push
xchg
shl
fsts
push
aam
and
jge
jno
mov
or
adc
divb
push
shl
and
xchg
and
pop
sub
jle
adc
dec
xor
test
les
int3
jge
and
xor
cli
leave
aam
stos
test
pop
out
sbb
mov
ds
enter
sarb
call
push
pop
std
cli
or
cli
jl
adc
ds
in
push
cli
fimuls
push
dec
xorb
cmpsb
inc
inc
clc
adc
mov
sub
es
xchg
faddl
push
inc
add
mov
testl
and
addr16
out
in
mull
movsb
push
test
negl
inc
cmpb
and
pop
es
filds
jle
mov
shlb
cmpsb
mov
js
add
das
adc
loop
or
sub
jnp
bound
mov
push
cmpb
push
mov
pop
or
and
cld
dec
push
icebp
pop
xor
push
sbb
or
push
pop
cmpsl
pop
scas
sub
clc
les
or
add
mov
insl
mov
or
fbstp
push
lock
mov
fcom
nop
std
xor
cmc
out
cld
jecxz
jl
fisubrs
lods
mov
insb
out
mov
mov
mov
call
int
aam
orb
xorb
dec
sbb
mov
xchg
adcb
pop
js
into
cmp
fisubrl
pop
push
xor
lock
xor
sub
add
iret
js
scas
cmp
imul
mov
es
xchg
push
lods
arpl
add
push
xor
rsqrtps
ljmp
mov
inc
and
lahf
cmc
nop
xor
add
lret
mov
add
add
sbb
clc
pushf
ss
rol
xchg
clc
inc
insb
inc
dec
repz
pop
movsl
xlat
ret
repnz
nop
pop
std
or
int3
mov
inc
cld
icebp
fwait
fs
outsb
and
cli
or
test
sbb
adc
loopne
mov
mov
xor
jle
in
jle
nop
cmc
mov
dec
dec
add
cmp
in
loop
jmp
popa
aas
jno
jbe
push
clc
and
mov
test
xor
fsubrs
cli
lock
js
mov
jle
int3
andb
jle
outsl
sbb
call
lret
add
push
xchg
lock
cmp
ljmp
call
scas
dec
fbstp
das
lret
ljmpw
es
jbe
bound
or
shlb
movsl
dec
mov
or
movswl
push
inc
in
push
aaa
add
xchg
dec
jecxz
addl
add
cmovae
sub
mov
into
les
xor
pop
pop
and
and
and
jp
shlb
pop
test
mov
adc
fadds
inc
push
out
adc
sbb
pop
dec
sahf
and
js
cmp
movb
pusha
jge
adc
push
or
push
das
or
icebp
jl
cmp
cmp
jne
cld
push
scas
xor
dec
jo
add
xor
hlt
fwait
mov
push
push
mov
sub
bound
out
rorl
lock
jle
adc
jnp
push
pushf
lock
clc
xor
mov
cmp
mov
loope
sarb
jae
sarl
sub
ds
jno
adc
insl
cmpsl
pop
lahf
ds
imul
pop
xor
sti
jecxz
in
sbbb
in
roll
pop
jge
mov
mov
xchg
fsubs
inc
xor
pop
lea
push
rolb
mov
push
rclb
aam
dec
fistps
movsl
jmp
xor
push
aas
cld
cmpsb
lock
push
es
mov
cmpb
xor
xor
lahf
jle
push
xchg
cmpsb
ret
call
call
in
sbb
jp
fs
loopne
ds
cmp
cmp
mov
into
fldenv
push
xor
loop
hlt
dec
fisttpll
stc
es
cmp
sub
xchg
jb
mov
adc
rcrl
mov
pop
add
dec
js
push
leave
loope
jle
cmpsb
lds
lods
inc
mov
inc
or
sbbb
sub
and
mov
adc
push
adc
bound
mov
mov
sub
test
mov
imul
js
xorb
insb
in
clc
jo
and
cwtl
pop
sub
es
je
dec
ljmp
pusha
mov
mov
mov
inc
xor
test
int
add
cmpl
and
scas
xchg
mov
arpl
push
xchg
rorb
mov
lahf
orb
pop
shlb
dec
insl
cltd
cmp
mov
mov
dec
aas
jbe
ret
inc
sbb
push
pop
js
fldl
nop
dec
mov
adc
pop
mov
out
pop
loopne
test
cmp
out
cmp
push
inc
add
adc
inc
arpl
ret
inc
in
and
imul
mov
dec
jp
xor
jp
pop
rolb
hlt
cli
jge,pt
push
xor
fdivl
fistl
aas
pop
cmp
cwtl
cli
xchg
les
ds
dec
out
ds
clc
adc
xchg
dec
pop
pop
jbe
xchg
dec
xor
rorl
es
aas
mov
mov
pop
pop
imulb
clc
pop
or
outsl
faddp
addl
xlat
in
in
shr
std
hlt
loopne
inc
lret
add
sbb
adc
mov
jno
sub
push
ret
std
add
arpl
mov
lock
sbb
cmp
adc
popa
push
push
mov
je
test
inc
sbbb
call
jle
js
shlb
jl
mov
mov
cmp
sub
jo
out
das
jno
push
cmc
dec
rclb
sbb
inc
ret
mov
mov
cmpb
pop
ljmp
mov
aad
xor
rcrl
add
mov
jp
cs
sbb
andl
rcrl
xchg
cmp
aas
xchg
and
orl
cmpb
pop
clc
and
adc
adc
nop
subl
lods
inc
fsubrs
dec
and
shr
stos
xlat
push
jo
jecxz
pusha
stc
xorl
add
adc
add
adc
or
inc
hlt
sub
xchg
in
loopne
xchg
mov
rcrb
dec
sbb
jo
loope
inc
stos
push
add
mov
testl
rorb
lock
pop
jb
nop
rcl
jo
loop
sbb
adc
out
add
mov
pop
xor
jg
scas
inc
mov
orb
pop
scas
lea
repz
ja
mov
enter
lea
inc
fldl
sbb
mov
mov
inc
dec
imul
bnd
mov
icebp
arpl
mov
push
ljmp
into
jle
inc
mov
popa
mov
sbb
mov
add
cmp
test
jnp
lds
pop
adc
add
ficoml
dec
mov
sbb
adc
std
jp
loop
lods
mul
leave
push
pop
dec
add
je
add
loopne
nop
dec
cld
dec
cli
xchg
jne
fs
mov
pop
rol
mull
sbb
xchg
push
nop
lcall
in
adc
std
push
mov
jp
sahf
lea
shr
mov
mov
and
sub
push
test
das
lods
addr16
fdivr
dec
jge
lods
pop
frstor
daa
inc
js
and
jbe
movb
inc
das
inc
cmp
add
push
mov
stc
jge
cmc
popa
add
mov
add
dec
mov
adc
mov
adc
in
fcomps
push
lahf
filds
cltd
mov
iret
fistps
ret
push
nop
push
fdivs
js
cmp
lret
test
mov
ds
and
imul
in
mov
jl
enter
pop
movsl
lahf
mov
clc
add
imul
hlt
inc
es
dec
stos
sbb
sbb
and
js
mov
xlat
push
rolb
cmp
xor
cld
push
mov
xchg
sti
mov
mov
pushf
cld
mov
jno
testl
mov
icebp
cmp
jnp
lcall
xchg
push
or
or
pop
jl
movsb
add
cli
sbb
adc
dec
jmp
push
push
xchg
lret
push
mov
cmc
sub
inc
adc
lock
ljmp
xor
xor
cs
push
mov
xchg
or
out
arpl
aas
add
addr16
rol
dec
sbb
inc
inc
jb
cmp
ljmp
out
lcall
stos
sub
jecxz
and
lock
dec
pop
fidivrl
das
test
push
fstl
loop
pop
inc
pop
repnz
mov
add
pshufw
xchg
inc
mov
jge
cmc
add
mov
xchg
dec
das
pop
mov
or
cltd
scas
nop
mov
adc
inc
out
lret
ficomps
scas
dec
mov
push
xor
adc
ret
push
mov
enter
inc
dec
cmp
xchg
test
cmc
cmp
inc
push
add
clc
or
dec
loopne
adc
loopne
push
sub
pushf
jnp
jl
mov
test
sbbb
ds
push
inc
pop
cld
adc
pop
icebp
xchg
jp
into
add
in
mov
cmp
inc
mov
add
cmp
je
arpl
clc
dec
mov
adc
add
stos
mov
fsubr
mov
daa
in
sub
push
andl
xor
fimuls
or
subb
pop
pop
mov
mov
int3
adcl
add
dec
ror
es
sbb
dec
cmp
gs
rcrl
in
add
add
xchg
lcall
or
imul
cli
movsb
push
xchg
pop
pop
ds
or
repnz
ja
jmp
subb
push
add
out
cmp
clc
pop
push
cwtl
fs
in
sub
loop
inc
mov
rorb
ret
lahf
cs
xchg
cwtl
adc
inc
push
pmaxsw
cmp
clc
mov
test
cmpsb
scas
scas
pop
inc
cli
ds
jecxz
test
imul
push
clc
ficoms
cmp
repnz
jecxz
cwtl
ds
sub
or
xorb
add
add
xor
sub
insb
jle
pop
mov
or
push
cmp
push
cmc
jecxz
xlat
jl
lock
adc
mov
clc
imul
and
add
jge
in
icebp
ds
sbb
nopl
and
mov
jl
pop
lods
add
xchg
rolb
jmp
dec
cld
js
stc
cli
mov
loope
xchg
out
dec
arpl
js
jl
cs
cmp
cs
dec
jl
ds
pop
mov
pop
xchg
or
ds
xor
adc
lock
and
xor
mov
cmp
pop
jge
js
jle
lret
cmp
cli
mov
cmc
add
cmpsb
push
mov
pop
jmp
cld
cmp
movsb
mov
out
sbb
adc
and
mov
cmp
jne
rcll
clc
dec
ss
js
mov
or
sub
sahf
and
lock
push
xor
rorb
ret
cli
jecxz
js
inc
mov
sahf
int3
jne
idivb
cmc
push
dec
xor
lcall
inc
dec
push
jl
js
push
test
aad
mov
mov
lret
js
add
jp
pop
pop
inc
pop
add
aas
mov
loop
arpl
add
jmp
cmpl
subl
loopne
in
les
popa
jmp
aam
and
jecxz
xchg
jne
jmp
jp
imul
jecxz
loopne
xchg
loop
add
xchg
xchg
in
add
mov
push
pop
mov
dec
xchg
add
or
mov
mov
roll
sarb
xchg
andl
add
and
mov
jecxz
roll
jp
ds
jl
bound
movsb
pop
sti
adc
add
not
xchg
inc
xor
bound
ds
repnz
cmp
xor
mov
fwait
stos
xchg
jno
scas
or
xor
stos
out
sti
nop
movsl
fs
mov
xchg
inc
or
icebp
add
pop
inc
sbb
gs
sub
jmp
les
std
sub
insb
jp
dec
nop
and
lock
sbb
rorl
in
into
in
adc
jecxz
pop
nop
enter
scas
adc
jecxz
lock
ljmp
or
outsb
ds
pop
pop
jbe
pop
aam
dec
std
inc
xor
out
xchg
das
stos
inc
jge
mov
push
xor
gs
mov
inc
push
fdivr
lock
sbb
jle
mov
sbb
cli
clc
lock
lahf
jle
fidivrs
daa
jl
pop
aas
sub
fmull
cld
inc
loopne
test
test
hlt
jmp
jbe
fdivs
jl
sub
repnz
jge
jno
sti
mov
or
xor
inc
adc
movsb
and
clc
mov
jnp
movl
leave
loopne
jmp
inc
cs
shll
filds
and
lods
testl
fs
ljmp
cmp
clc
lock
js
cmp
mov
jle
enter
sub
pop
fcompl
testb
dec
and
xchg
add
gs
add
stos
dec
lcall
es
and
ret
or
mov
test
mov
ljmp
xchg
sub
sbb
loop
movsl
test
inc
inc
inc
add
lock
or
pop
sbb
mov
xchg
mov
sbb
lods
and
fidivl
fwait
or
or
mov
or
mov
push
popa
cmp
cmp
add
mov
in
inc
clc
aam
sbb
mov
int
int
loope
dec
xor
cmpsl
xor
xchg
sahf
int
pusha
pop
and
pop
pop
call
es
push
mov
push
aad
jno
stos
or
jl
mov
jp
jge
dec
scas
test
push
fstl
pop
push
mov
dec
mov
cmc
jecxz
fisttpl
lcall
ret
xlat
sbb
jbe
or
fsubrs
adc
xlat
adc
sub
cltd
mov
adc
insb
cmp
idivb
arpl
jl
mov
ss
cli
je
ss
pop
cli
and
mov
mulb
adc
cmp
and
cmpb
sahf
cmc
out
or
push
out
push
adc
and
and
jg
mov
out
xor
in
mov
cwtl
jp
ljmp
pop
add
adc
mov
iret
xchg
xchg
fcomps
xchg
mov
pop
pop
insb
mov
jo
push
icebp
jecxz
les
and
ljmp
stos
pop
das
sub
cs
push
insb
pop
pop
out
mov
mov
push
xor
cmp
aam
pop
adcb
leave
xchg
lock
subb
lcall
aam
in
nop
inc
les
mov
add
call
xor
dec
sarb
negb
jbe
sti
pop
mov
js
push
aad
cmp
sbb
repnz
test
pop
pop
sarb
sub
mov
ret
rolb
shrb
mov
ret
test
jne
push
stos
clc
sbb
fstpt
hlt
sahf
jl
fsubl
call
adc
mov
js
adc
push
fistpll
test
and
js
and
jmp
fbstp
lock
fsubrs
add
sbb
mov
jp
inc
clc
and
clc
ljmp
fcoml
in
lret
clc
mov
sub
dec
push
mov
xchg
fldenv
adc
aad
sti
clc
ljmp
mov
mov
mov
mov
jno
jge
push
fsubp
fdivrs
dec
imul
ds
xchg
pop
inc
mov
mov
and
mov
and
jle
push
cmp
popf
sub
cmp
clc
add
fidivrl
jmp
dec
dec
add
push
clc
mov
dec
loopne
insl
mov
icebp
xchg
fidivs
roll
call
adc
adc
add
inc
fdivr
scas
or
add
out
adc
nop
js
lret
addl
adc
mov
dec
inc
clc
and
hlt
loope
cmp
pop
push
stos
sti
clc
cmp
bound
or
or
loop
fnstenv
cmp
jle
or
mov
movswl
push
enter
push
mov
jp
cmp
mov
std
in
scas
or
cwtl
pop
fists
cmp
shll
clc
mov
adc
pop
cld
sub
int
fcoml
sub
inc
cmp
call
in
sbb
clc
and
adcb
call
rol
xor
sbb
add
loop,pn
aam
jmp
pop
cld
add
cmp
lea
ja
fdivs
aad
ret
ljmp
pop
fmul
lret
pop
jo
mov
inc
scas
shlb
lds
dec
inc
mov
add
xlat
ret
imul
sbb
bound
sbb
xchg
sbb
jbe,pt
ret
sarb
lock
sbb
pop
push
mov
out
cli
adc
mov
add
xchg
stos
cmovp
xchg
fcmove
shlb
xlat
mov
mov
repz
lcall
mov
ret
pop
cmp
movsl
ficoms
mov
jb
roll
mov
mov
sub
inc
add
jl
cmc
xor
nop
shl
jle
push
js
ficoml
ljmp
jl
sar
rclb
jle
lock
into
sbb
movb
pusha
mov
jg
xlat
and
push
xor
test
filds
mov
data16
jle,pt
je
jg
add
sub
add
fisubs
mov
fiadds
movsl
adc
fidivs
pop
xchg
jno
cmc
rclb
jp
aas
lcall
cmp
pop
lock
and
test
ds
and
sub
add
jl
cld
inc
clc
sbb
fwait
nop
stos
leave
mov
cs
clc
std
cli
mov
dec
mov
clc
mov
sahf
add
mov
sahf
cmp
sysenter
sahf
and
in
es
mov
pop
aas
sbb
add
sarb
and
sub
imul
fwait
out
stos
arpl
cmp
inc
xchg
pushf
scas
xor
clc
aaa
xchg
sub
mov
loopne
push
dec
push
movsb
dec
dec
loopne
pushf
outsb
jne
mov
jno
mov
lahf
inc
loope,pn
int3
loop
and
xor
xchg
mov
push
and
dec
fs
les
mov
loope
xor
fimuls
sub
ret
jmp
mov
xlat
and
stos
mov
and
lods
insl
pop
sbb
mov
jb
repz
pop
rol
pop
push
add
jo
push
mov
push
and
loope
xlat
or
pop
or
mov
jl
mov
imul
loope
ret
or
lret
mov
inc
xchg
and
pushf
mov
cmp
push
inc
xchg
xor
popa
shll
mov
jp
adc
das
or
add
call
jmp
inc
jmp
shlb
jl
shrb
sub
loop
jo
xchg
and
mov
test
sbb
ret
xlat
in
adc
and
mov
push
testb
push
lahf
sti
jle
ret
xchg
in
add
es
out
inc
sbb
mov
sub
rorb
in
xchg
lock
push
dec
addl
lahf
ljmp
pop
cmp
adc
jo
out
aad
jle
dec
mov
pop
add
nop
xchg
add
or
jns
sbbl
sbb
pop
repnz
mov
lahf
dec
js
ljmp
push
xor
dec
jo
jne
pop
aam
xchg
jle
clc
push
push
cmp
pop
pop
pop
stos
call
js
imul
dec
sbb
xchg
and
jnp
add
xor
aas
popa
loopne
hlt
sub
sbb
dec
or
jo
lea
push
inc
int3
pusha
xor
aad
pop
xor
add
cs
push
movsb
repz
pop
out
aaa
fdiv
cmp
out
mov
outsb
mov
test
push
repz
cld
icebp
inc
rcr
mov
movsb
sbb
pop
mov
xchg
fcomps
cmp
or
mov
mov
xchg
xchg
jo,pn
lock
mov
push
pop
xor
pop
push
pop
js
jbe
in
sub
xchg
test
mov
jo
add
jo
cmc
push
loope
push
adc
lcall
pop
pop
cld
xor
addr16
test
mov
pop
mov
push
clc
daa
fcomp
es
clc
or
inc
fimull
filds
rcrb
lcall
pop
pop
inc
hlt
push
divl
jge
daa
mov
adc
icebp
and
ret
inc
scas
ds
xchg
add
dec
add
mov
in
fwait
icebp
jecxz
lods
sbb
xchg
shrb
jl
push
mov
pop
fimuls
jae
scas
add
loopne
and
inc
xchg
and
jmp
test
push
and
loop
or
addr16
std
mov
pushf
js
es
or
inc
adc
pop
dec
dec
mov
sub
inc
push
sbb
js
popa
jmp
jo
movsl
sub
jle
add
loop
bound
pop
sar
pop
jg
js
mov
ret
ljmp
pop
push
xchg
mov
rcl
and
mov
and
shl
fstps
cwtl
inc
test
mov
mov
je
imul
mov
hlt
mov
stos
and
jp
dec
cli
sbb
xchg
jbe
fiaddl
cmp
or
dec
and
jl
adc
push
cmpsb
xor
sti
cmp
xchg
fcompl
ss
cmovg
mov
adc
in
xorl
mov
ret
and
jle
push
push
jns
mov
cmpsl
pop
mov
mov
push
out
or
pushf
adc
mov
pop
sub
stos
adc
jle
imulb
jo
add
dec
mov
xor
std
lock
jp
pop
push
xor
stos
bound
jle
push
outsb
mov
aam
xchg
mov
dec
cwtl
js
ds
loopne
mov
sub
test
add
scas
pop
clc
icebp
sahf
dec
repz
jl
cmp
clc
jle
pop
aam
jo
clc
popa
inc
clc
lock
xor
es
js
pop
xchg
movsb
in
fnsetpm(287
inc
iret
loope
cmc
loope
out
xor
out
push
pusha
mov
addb
sbb
push
gs
cmp
sub
ret
orl
fld
sarb
jno
cmpsl
lock
jl
and
mov
jp
jl
add
cli
insb
mov
repnz
ljmp
or
and
pop
sbb
lock
movsb
jecxz
inc
stos
outsl
xor
out
stos
mov
les
or
clc
ret
xchg
lret
cld
mov
or
icebp
jecxz
dec
jns
fs
out
int3
fimull
push
insb
cltd
aam
cmpb
mov
pop
mov
xchg
ficoml
iret
test
jp
ljmp
sub
or
jbe
loope
or
insb
cs
sub
lret
add
lods
lret
pop
jge
add
mov
push
push
mov
fiaddl
push
aam
and
sarb
sahf
mov
loop
int3
je
scas
mov
rorb
jg
stc
mov
sti
dec
cmpsb
in
push
inc
add
mov
sub
or
push
jnp
jge
xor
js
push
loop
push
aas
imul
dec
sahf
and
jp
test
inc
ljmp
adc
inc
das
nop
fs
enter
push
dec
or
in
aam
jno
icebp
push
loopne
xor
adc
mov
adc
mov
insb
xchg
add
adc
pop
rcr
lahf
adcb
loop
pop
mov
mov
dec
inc
mov
test
clc
mov
adcb
ds
rolb
addb
dec
arpl
pop
jge
idivl
jge
pop
sub
push
push
pmulhuw
ret
mov
lret
call
es
fs
xchg
sbb
add
cmpsl
lcall
enter
sub
fidivrl
daa
in
call
inc
pop
cmpsb
in
in
std
fwait
jbe
add
mov
sub
push
adc
or
loopne
dec
cli
jb
pusha
jns
fwait
jle
dec
clc
add
add
push
add
stos
adc
ds
loop
aas
mov
pop
gs
adc
hlt
movsl
mov
test
and
sub
cmp
sbb
push
aad
push
cld
clc
fcmovbe
mov
cmp
imul
adc
xchg
lock
mov
les
inc
lods
cli
jg
push
jno
repnz
fwait
movsb
and
pop
out
sub
pop
mov
aaa
clc
ret
mov
dec
add
rcl
cld
lret
mov
inc
xchg
or
faddl
lods
lods
dec
movsl
push
xchg
sub
pop
aam
lret
loope
stos
prefetcht2
jp
inc
xlat
in
clc
sbb
dec
ret
lahf
xor
sbb
cli
and
movsb
stos
pop
aas
mov
mov
or
rcr
lods
pop
jb
clc
xor
aaa
insb
je
push
mov
ret
or
push
test
insb
je
add
xchg
out
sub
push
fbld
add
imul
cmp
dec
push
daa
jle
mov
pop
mov
cmp
cmpsl
stos
and
inc
idivl
pushf
cmp
mov
mov
mov
bound
shll
mov
mov
call
mov
sbb
cmp
je
push
mov
lds
push
mov
xor
cmp
mov
mov
loope
ficoms
daa
pop
push
dec
nop
jle
je
dec
pop
loopne
push
lret
loope
mov
je
test
mov
negl
mov
cld
ja
mov
jbe
ds
push
cmpsl
push
mov
loope
int3
xchg
out
mov
adc
inc
out
mov
or
outsl
xchg
xchg
mov
cmpb
shll
mov
sbb
pmaxub
cli
rorb
imul
sbb
pop
bound
mov
lret
mov
shrb
push
in
xchg
mov
fdivrs
lcall
cmp
loopne
push
arpl
jl
bound
adc
hlt
inc
cli
rolb
pop
push
adcb
cmp
les
mov
push
xchg
xchg
rorl
xchg
outsl
adc
pop
adc
sti
cs
insb
mov
jl
lock
subl
rcl
pop
dec
sbb
mov
out
push
and
dec
mov
loop
add
repnz
xchg
jbe
and
inc
mov
daa
call
cmpsl
xor
inc
dec
pop
xor
jle
ret
addr16
jae
mov
pop
outsl
loope
jo
xor
xorl
dec
call
lret
clc
loopne
cmp
jge
sub
mov
mov
faddp
xchg
mov
mov
inc
insb
loop
cs
sahf
cli
xchg
nop
mov
xchg
neg
sub
adc
and
icebp
push
cmp
push
repz
adc
dec
and
jne
mov
icebp
idivb
dec
pop
xor
out
sar
fisubs
pop
icebp
add
cmpsl
jbe
pop
subb
mov
xor
lock
sbb
push
test
out
mov
clc
fidivrl
js
cmp
mov
int
ss
decb
mov
or
fs
cmp
icebp
adc
or
dec
sub
xchg
inc
insb
fstpt
sahf
loop
mov
pop
mov
mov
hlt
ljmp
adc
add
cs
inc
imul
mov
loop
inc
add
push
shlb
mov
cmpsb
pop
imul
sbb
mov
ret
push
mov
sub
jo
incb
decl
adc
stc
sub
jle
inc
ss
out
ret
add
pop
mov
shlb
jo
pop
jle
pop
js
xor
adc
push
push
scas
inc
mov
mov
cmpsl
out
in
mov
insl
subb
mov
lock
push
mov
stos
mov
lcall
cmp
mov
inc
addl
mov
sub
scas
cmp
adc
jle
jp
addr16
scas
mov
icebp
je
call
mov
dec
push
mov
xchg
in
ss
jnp
cmpsl
sub
pushfw
xlat
sahf
and
lods
in
sub
lds
test
daa
inc
push
inc
pop
push
rcrb
rcl
jge
sarl
jecxz
pop
adc
jne
mov
push
jnp
fs
pop
rcl
fbstp
xlat
fucom
jnp
xchg
adc
and
nop
sbb
cmp
mov
push
mov
iret
dec
xor
add
adc
pop
and
xchg
jle
aaa
sbb
ss
dec
js
jecxz
xchg
sub
pop
push
pop
jl
loop
repnz
je
clc
stos
mov
add
dec
enter
int
addr16
movsb
pop
stos
scas
jmp
mov
mov
lret
mov
mov
add
sub
adc
icebp
push
xchg
insb
arpl
clc
arpl
movsl
stos
not
aad
cmpsb
lahf
in
sbb
sbb
pushf
icebp
pop
aas
insl
sbb
mov
loopne
clc
gs
sbb
inc
cmp
pushf
adc
xor
in
and
jle
lret
sbb
sub
dec
cmp
notl
test
es
insb
test
xchg
popf
lock
loop
push
xchg
sbb
ss
pop
lock
push
add
jecxz
push
inc
push
shll
dec
inc
insb
cld
aad
in
and
xchg
stos
sbb
out
nop
push
pop
pop
lock
mov
mov
shrb
mov
sbb
sbb
pop
dec
add
pop
mov
cld
shrl
mov
push
clc
sub
pop
inc
cli
xchg
shrb
push
push
xor
outsb
mov
mov
xor
flds
fisubs
jge
mov
pusha
fwait
and
shlb
rclb
mov
jne
pushf
jl
or
sar
jns
out
cmp
mov
aaa
cmp
mov
or
ljmp
cmpsb
rorl
cli
jno
pop
push
mov
mov
outsl
movsb
enter
xlat
testl
cmpsb
stos
mov
cltd
loopne
pushf
xchg
mov
repz
pop
adc
xchg
jo
test
inc
push
jl
fmuls
xorb
push
jecxz
shl
cli
iret
inc
add
push
xchg
xchg
xor
xor
clc
xchg
pop
aam
sub
fbstp
pop
cmc
add
jecxz
cli
xchg
aad
hlt
popa
push
sbb
cmp
sbb
push
push
clc
and
fs
lds
sub
insl
xlat
out
mov
jl
loop
sbb
ljmp
loop
and
xlat
inc
cmp
lock
jnp
rorl
into
js
dec
pop
into
dec
bound
push
jg
xor
rorl
dec
add
pop
aam
pushf
sub
or
fs
add
lods
test
outsl
adc
lahf
jne
mov
and
adc
and
adc
stos
push
pushf
push
hlt
rclb
loopne
mov
and
add
dec
das
jecxz
mov
je
xchg
test
test
cmp
loop
inc
call
and
movsb
pop
mov
mov
push
or
aas
or
adc
jmp
hlt
pusha
cmpsb
mov
xor
loope
mov
mov
add
push
xchg
fadd
pop
jmp
nopl
test
jb
imul
jl
and
jecxz
add
test
scas
imul
ss
fdiv
or
mov
dec
in
nop
xor
jecxz
mov
xchg
fwait
mov
push
in
scas
push
add
push
in
out
jnp
idivb
sub
add
cltd
into
sub
sarl
xor
jp
or
ljmp
or
ljmp
pop
stos
into
mov
cwtl
mov
sub
add
punpcklbw
mov
mov
sbb
pop
dec
std
push
xor
jbe
ret
arpl
loop
push
les
cs
xchg
ja
std
cmp
mov
js
daa
mov
mov
dec
fsubr
sub
insl
jge
les
cs
push
push
dec
sbb
notl
xor
in
pop
jp
loop
repnz
jp
or
dec
lret
xchg
mov
mov
mov
mov
lds
dec
jmp
mov
mov
out
imul
in
mov
mov
loope
mov
xor
pop
pop
inc
cwtl
mov
in
lea
std
lret
dec
rcl
out
mov
pop
es
inc
ret
dec
fptan
jnp
loop
adcb
add
insb
insb
test
add
test
xor
add
cmp
das
les
test
pop
pushf
loope
mov
add
sub
js
les
cmp
js
adc
pop
cmp
push
call
lcall
arpl
fisubrs
ja
fcoms
dec
xchg
cli
insb
rorb
push
cld
movl
es
dec
dec
test
sbb
sti
stos
test
icebp
dec
or
inc
shrl
push
inc
enter
call
cmp
movsb
or
pushf
pop
jae
shl
jle
cmp
fists
or
push
bound
dec
or
aad
mov
jmp
pop
lret
inc
dec
mov
jno
popa
cmp
cltd
aam
out
dec
loope
jne
push
mov
sub
cmp
mov
or
jmp
test
xchg
popf
ljmp
shrb
cli
jle
lock
and
mov
dec
mov
mov
xor
pusha
sbb
cmc
movsb
icebp
shlb
sbb
mov
sahf
push
aaa
pop
ds
mov
in
dec
mov
jo
cld
jle
and
int3
dec
sbb
sub
jecxz
mov
jbe
ljmp
xchg
push
rolb
fildll
mov
xchg
mov
mov
mov
in
push
pop
das
mov
data16
xor
idivb
fldt
addr16
mov
xchg
in
insl
loopne
insb
push
adc
lock
cwtl
adc
pop
sbb
decl
adc
hlt
and
mov
pop
hlt
loopne
roll
and
ljmp
comiss
dec
push
xor
xchg
daa
cmp
in
jle
paddd
fisubs
pop
dec
rcrb
ret
ljmp
das
mov
push
xor
imul
mov
negb
or
add
mov
xor
stos
mov
js
add
aad
sbb
jge
mov
hlt
test
clc
dec
fldcw
or
inc
dec
pop
outsb
icebp
mov
rclb
mov
cvttps2pi
sti
pop
cmp
ds
xlat
call
mov
ret
mov
clc
cmp
movsb
pmaxub
in
mov
notl
inc
leave
jle
std
mov
dec
ljmp
test
cmp
js
push
xchg
mov
or
repz
push
cs
jl
mov
insb
outsl
imul
lea
sub
jo
and
pop
adc
xchg
loopne
lods
aas
add
dec
push
dec
lds
push
rolb
negl
push
js
add
mov
mov
in
and
lods
cmp
sub
xor
icebp
add
jl
pop
mov
nop
push
cmp
scas
shl
cmc
movsl
xor
jge
xor
cmp
mov
js
hlt
or
enter
idivb
jb
fcoms
ret
aam
out
out
xchg
mov
push
test
subl
out
out
pop
mov
pop
pop
leave
adc
dec
movl
mov
das
inc
push
stos
es
jno
lea
xchg
sbb
ljmp
dec
adc
arpl
inc
addl
mov
dec
dec
iret
sarb
add
adc
cmp
lock
or
pop
xor
das
add
jb
pushf
adc
test
mov
fnstsw
out
inc
adc
fcoml
inc
mov
push
into
xchg
stos
cmp
mov
dec
popa
fidivrl
cmovs
pop
mov
adc
popl
sub
or
mov
inc
addr16
loope
and
xor
popf
std
xor
lods
aad
push
lock
incb
jecxz
loopne
push
xchg
test
lock
sub
repz
jle
xchg
or
pmuludq
mov
mov
fbld
xor
sar
jl
cwtl
and
pushf
ret
js
lock
maxps
jbe
in
mul
or
cmpsl
out
aad
aaa
fdivrs
jbe
mov
sbb
cmpsl
dec
push
inc
test
nop
clc
cmc
sbb
ss
fsubrl
cmp
aad
cmp
rcll
neg
orb
out
mov
andl
aam
je
repz
repnz
aam
int3
inc
xchg
cli
or
xor
push
std
mov
mov
mulb
or
lahf
jle
in
add
push
jmp
dec
or
test
subb
pop
fs
adc
jne
loope
push
sub
cmp
out
xchg
push
sbb
das
loop
sbb
mov
filds
sbb
sahf
push
adc
jecxz
pop
insl
lods
test
pop
scas
mov
mov
repz
mov
inc
sarl
clc
lock
aas
mov
push
push
rcrl
pop
mov
test
cmpl
scas
dec
je
mov
sbb
xchg
sub
arpl
xchg
push
js
add
fwait
movsb
leave
cmp
push
jp
xchg
clc
xor
lea
loopne
fsubs
and
pop
jge
sub
push
cmp
iret
mov
arpl
mov
or
daa
or
js
mov
cmp
jbe
aam
rorb
xchg
cli
push
xchg
push
rolb
or
xlat
movsb
mov
or
adc
jnp
sbb
dec
sarb
pop
daa
sbb
add
pop
insb
daa
dec
xorb
or
mov
out
jecxz
jl
aaa
rcrl
or
add
adc
push
sbb
pop
add
fwait
mov
mov
hlt
shll
fidivs
js
sarb
dec
scas
mov
mov
and
cld
and
dec
xor
jp
test
mov
dec
pop
ds
scas
and
pop
stos
sbb
bound
pop
dec
int
ljmp
outsl
mov
fsubs
pminub
cli
and
mov
out
ret
rcrl
shlb
jg
bound
cmp
hlt
hlt
pop
aam
ljmp
lret
std
or
ret
les
or
inc
aam
xchg
push
xchg
ja
pop
add
adc
push
or
xchg
lahf
mov
out
dec
dec
adc
ljmp
les
gs
lock
mov
pop
pushf
orb
jno
icebp
call
push
call
mov
dec
mov
lods
pop
addr16
pop
and
sub
pop
stos
clc
std
clc
xorb
jbe
and
pop
xchg
imul
mov
inc
cmpsl
sahf
mov
addl
cld
ds
cmpsl
mov
or
js
push
out
orb
pop
mov
cwtl
sub
setg
jno
dec
inc
mov
xchg
fmuls
jecxz
mov
pop
sarb
xchg
mov
scas
push
pop
cmpsb
add
jecxz
or
call
sbb
mov
stos
lahf
sbb
negb
inc
fcomps
sbb
rolb
repz
nop
mov
push
mov
push
out
pop
pop
inc
mov
xor
push
add
pop
xor
pop
cmpsb
jbe
jp
mov
js
jb
out
mov
hlt
fiaddl
mov
notb
arpl
or
aam
clc
push
pop
or
sahf
fs
sbb
stos
push
cwtl
test
push
xlat
adc
inc
inc
loope
dec
mov
pmaxub
in
sub
aas
ds
adc
scas
mov
bound
out
cwtl
hlt
shlb
lock
outsl
in
jnp
pop
cld
lock
adc
cmp
mov
sbb
es
inc
pop
shrb
rclb
shll
sbb
inc
mov
push
mov
sbb
and
mov
pop
inc
add
pop
sahf
or
test
test
mov
mov
loopne
sub
loopne
mov
repnz
out
or
js
dec
mov
outsb
jae
inc
rolb
push
xlat
jmp
sbb
push
out
jle
fisttps
mov
cmp
js
mov
sbb
adc
mov
jle
fmul
xor
rcl
mov
mov
mov
imul
je
push
adcb
pusha
pop
mov
xor
xor
and
push
ja
loop
sbb
not
shrb
inc
insl
gs
stos
rorb
ss
mov
test
xchg
push
fidivl
mov
jns
xchg
les
mov
pop
insl
mov
push
clc
enter
push
jl
jnp
loope
dec
pusha
adc
sbb
sub
jecxz
push
data16
or
jl
cltd
in
nop
dec
cmp
cmp
testb
adc
testl
and
dec
pop
push
sahf
sub
and
add
mov
push
outsb
xchg
dec
outsl
jle
adc
mov
mov
ret
inc
pop
mov
push
push
and
sub
rclb
add
out
inc
adc
or
mov
lods
les
inc
dec
in
sbb
cmp
scas
clc
push
movsb
add
adc
sub
adc
sti
mov
adc
mov
roll
pop
dec
mov
je
adc
jp
clc
cwtl
jp
mov
out
sar
leave
sbb
jle
or
ds
add
es
cltd
dec
mov
adc
and
mov
cmp
cs
sbbb
add
in
xchg
loop
div
shrl
jp
cmp
sbb
shl
data16
jno
test
outsb
xor
ret
inc
pcmpgtd
push
loop
shlb
pop
cmc
dec
jle
cmp
jge
dec
mov
fnstenv
dec
sub
pop
test
dec
cmp
lahf
and
ljmp
and
cmp
shlb
jecxz
pusha
outsb
mov
xorb
inc
jge
mov
sahf
adc
mov
ja
lret
nop
jp
inc
fstl
xchg
scas
out
sti
mov
sbb
jp
insb
ja
or
adc
ret
idivb
insb
mov
pop
mov
mov
mov
bound
jmp
mov
pop
inc
inc
mov
mov
lea
push
sub
dec
aam
xchg
mov
enter
loopne
orb
test
sub
out
lss
mov
loop
mov
testl
loop
aaa
lea
dec
push
movsl
nop
fwait
cmp
das
and
push
idivl
loop
cmpb
or
repnz
divb
ljmp
mov
xchg
es
jge
inc
shrl
push
xor
mov
out
xlat
test
mov
cli
aam
ret
add
cs
xchg
adc
cmovno
ss
rclb
cli
mov
insb
mov
sub
dec
jmp
test
lahf
fwait
sarb
pop
sub
xchg
jle
ljmp
jp
lea
cmp
aam
and
loopne
mov
stos
pop
movlps
js
jnp
mov
xchg
inc
cmp
or
clc
movsb
fists
push
roll
in
inc
mov
push
mov
add
daa
pop
movsb
sahf
int3
shrb
scas
jno
add
mov
and
aam
fbstp
sub
int
xchg
mov
test
push
loopne
ret
call
mov
xchg
inc
inc
cmp
clc
mov
dec
pop
xchg
imul
lods
push
movsb
pop
xlat
shl
jecxz
xchg
adc
jmp
cwtl
mov
adc
les
mov
mov
and
js
inc
outsl
inc
jbe
loop
subl
push
or
and
outsl
cmpl
jl
mov
mov
xor
adc
mov
gs
jg
lods
shrl
xor
mov
pop
push
sbb
or
pop
loop
rclb
loopne
push
loop,pt
lcall
sbb
pop
lods
fbstp
loop
not
movsb
pop
push
mov
cmp
fsts
or
add
call
pop
test
mov
in
mov
orl
adc
dec
pop
mov
lds
mov
negb
cmpsb
pusha
xor
xor
pop
pop
xchg
sti
hlt
jle
mov
push
push
lock
fildl
jp
mov
fdivl
jl
cli
test
fstpt
outsb
pop
bndldx
xor
pop
sbb
xor
mov
fwait
pop
clc
add
lcall
sarb
mov
sbb
scas
icebp
nop
cli
sub
jg
in
imul
insl
cmpsb
pop
lods
mov
adc
imul
loop
adc
adc
roll
inc
ss
jge
jmp
or
mov
add
in
cltd
js
cmc
cmp
mov
add
loop
divb
inc
xchg
lods
pop
sbb
mov
int
dec
dec
mov
adc
clc
std
clc
mov
loope
adc
sbb
inc
loopne
js
pop
mov
push
dec
xchg
rorb
or
ficoms
popa
and
cmpl
sub
sbb
sub
loop
cmp
jb
rcl
ret
clc
sarb
js
loope
les
sbb
bnd
add
push
jb
stos
xchg
mov
divps
xor
les
inc
test
sub
subl
dec
cwtl
iret
mov
loop
xchg
fdivrp
cmp
dec
mov
jbe
insl
sbbb
out
sbb
mov
add
sub
clc
lret
jp
scas
je
nop
std
jp
mov
mov
push
push
inc
xchg
fisttps
xor
daa
pop
jecxz
jle
subl
add
addb
mov
rcr
std
sbb
jge
mov
fsub
lods
mov
jle
push
cwtl
cmp
js
pushf
leave
dec
scas
in
out
psubsb
or
jp
cwtl
dec
loopne
addr16
mov
inc
gs
jbe
ss
rcl
inc
mov
sbb
imul
ljmp
sub
mov
sub
ljmp
loopne
push
push
aas
or
clts
cmc
add
and
jge
mov
or
push
pop
out
sub
push
pop
insb
movsb
and
icebp
push
sbb
push
je
fs
add
ds
sub
lds
inc
in
enter
testl
les
mov
lods
pushw
aam
pop
sbbb
es
cmpsl
mov
inc
js
and
xchg
mov
ret
lock
out
imul
xor
orl
pop
and
test
insb
sub
or
add
mov
adc
leave
roll
inc
sbb
xor
cli
loope
popf
cmp
sbb
sbb
add
jbe
mov
sub
dec
es
inc
lods
dec
jmp
stos
mov
dec
outsb
cmp
adc
mov
or
out
out
movsb
repnz
in
sbb
sbb
subl
mov
add
push
jmp
lea
inc
js
rclb
sub
dec
shl
dec
in
inc
push
es
add
mov
lahf
push
xor
sub
jnp
cld
cmp
cld
add
dec
xor
pusha
lods
xlat
xlat
sti
bound
orl
testl
decb
lds
pop
popf
jge
adcl
jmp
mov
push
shr
imul
lock
mov
push
jge
sbbb
sbb
sbb
and
mov
ljmp
add
push
xchg
fst
rorb
fcom
push
sti
and
sahf
leave
rcr
dec
loopne
push
test
jnp
adc
stos
pop
movsbl
push
push
mov
push
jo
sub
xchg
test
jno
dec
sub
rclb
js
adc
loopne
clc
hlt
loopne
loopne
add
fbstp
fidivrl
mov
movsb
lock
pop
sbb
mov
fisubrs
dec
js
jle
sub
or
cmpl
xchg
subl
mov
shl
loopne
es
sarb
xor
out
shr
shlb
xchg
dec
inc
or
inc
ljmp
rcll
sbb
adc
test
pop
inc
jle,pn
cmp
sbb
mov
fcoml
xor
stos
push
mov
push
movsl
insb
sub
mov
add
mov
aas
jle
and
push
inc
jb,pn
jg
cmc
sarl
and
push
mov
call
xchg
adc
pop
jno
pop
jne
jle
arpl
or
lods
lcall
mov
lods
scas
shrb
or
inc
scas
pusha
inc
insl
jmp
mov
inc
pushfw
nop
adc
mov
cmp
xor
sbb
jp
mov
icebp
rolb
cs
test
adc
cmpsb
mov
adc
add
daa
and
xchg
pusha
pop
les
jo
push
pop
call
movsl
cmpb
in
jle
cmc
jmp
mov
clc
stc
push
fidivs
aaa
adc
clc
push
lcall
hlt
aaa
and
pop
std
jp
add
js
psubusb
js
movsl
inc
xchg
sbb
fprem
add
pop
push
lea
mov
jle
sbb
xor
mov
nop
xchg
push
or
adc
mov
es
jmp
dec
fmull
addb
xchg
and
sahf
push
adc
shrb
clc
hlt
enter
test
je
imulb
pop
mov
fsubs
jmp
jecxz
mov
dec
xchg
cmpsl
icebp
scas
lock
jo
xchg
testl
aad
addb
mov
loopne
inc
push
and
test
push
loop
jo
cmp
add
lret
xor
cmpsl
aas
popl
push
loopne
jge
shlb
xor
bound
adc
push
xor
jp
xchg
lock
pop
repnz
dec
and
pop
clc
nop
inc
decb
fldl
and
sti
out
js
fisubs
loopne
bound
popf
adc
inc
xchg
ds
data16
xor
mov
out
xchg
add
xchg
roll
push
aad
push
dec
std
clc
push
bnd
xor
jno
test
xchg
sub
fsubrs
ds
jp
xor
decb
fldl
inc
cmpsb
mov
mov
lds
add
incl
mov
sbb
mov
jge,pt
dec
es
lods
lea
test
push
aaa
fsubrs
mov
lods
mov
flds
cli
jbe
sbb
xchg
insl
clc
jnp
sub
adc
push
js
jp
test
test
bound
dec
rorb
lock
ds
or
xchg
or
add
cmp
mov
dec
shlb
sti
add
aad
mov
mov
adc
insb
add
lds
mov
pop
push
jg
test
sub
aam
xor
es
es
js
sbb
loop
sbb
rcl
filds
dec
mov
add
jns
cmc
fadd
rol
cmpsl
cmp
and
mov
mov
int
in
sbb
ja
std
fsubrp
mov
mov
cld
pop
es
cmpb
xlat
stc
stc
xor
lds
xor
push
test
jb
mov
packsswb
sub
mov
out
bound
jle
xchg
push
shrb
imul
dec
loopne
fimull
add
int
cwtl
cmp
pop
aas
push
or
mov
add
xor
dec
movsb
sahf
sbb
rcll
test
sbb
push
xchg
lock
mov
outsl
sub
into
jl
jle
cli
aas
movsl
fimull
and
cltd
pushf
and
loopne
mov
setg
push
faddp
xchg
bound
dec
mov
das
ds
test
and
xlat
imul
mov
mov
push
mov
jmp
andl
jo
mov
mov
in
sub
loopne
sub
push
cli
inc
cmpb
adc
push
clc
dec
insl
mov
ret
cld
nop
icebp
fs
test
and
mov
pop
pop
mov
xor
jp
mov
movsb
push
nop
lock
notl
js
pop
add
adc
nop
call
cmpsl
lock
mov
mov
push
sahf
sbb
pusha
shrb
in
testl
movsb
xchg
mov
pop
test
insl
and
data16
cmp
mov
or
andb
pop
and
cmp
xchg
sbb
inc
loop
clc
xor
mov
fs
jge
cmpsl
lock
pop
ljmp
fidivrs
sbb
sbb
cmp
sub
out
fsubl
ja
fdivrs
dec
mov
jns
cli
cli
jmp
outsb
mov
repz
xlat
daa
or
shll
mov
adc
inc
mov
jo
mov
mov
ret
cmpsl
lea
xlat
clc
mov
inc
and
hlt
inc
dec
lds
fdivp
mov
mov
mov
sub
cmp
loop
movsb
jb
xchg
std
outsb
jl
inc
pusha
sub
jecxz
sbb
push
es
mov
stos
loopne
test
adc
not
sti
dec
leave
ss
xor
add
dec
mov
pop
dec
scas
dec
mov
sub
mov
pop
xchg
sbb
stos
hlt
ds
notb
mov
in
in
imul
mov
jbe
mov
mov
subb
out
dec
js
loope
xor
in
test
sub
js
les
std
or
mov
push
xchg
loopne
mov
xchg
xchg
popa
xor
xchg
in
ret
ret
pop
das
add
hlt
sbb
loop
pop
push
das
sbb
pop
sbb
push
mov
rorl
xor
cld
ds
add
mov
mov
popl
xor
dec
and
jl
and
lahf
shll
pop
js
scas
jp
lock
ds
xor
mov
sahf
jle
pop
test
ljmp
sahf
sub
scas
mov
add
fcomip
jge
cmp
or
sbb
xlat
xchg
mov
insb
mov
pushf
cmpb
add
out
pop
cld
shr
mov
adc
jo
or
xchg
or
es
mov
xlat
aam
out
ffree
pop
cmp
pop
mov
mov
xchg
adc
mov
mov
xchg
push
push
je
xor
fwait
pop
dec
seto
xor
cs
jo
iret
jmp
push
hlt
jb
xor
or
in
andl
add
in
pop
and
loopne
rcl
xchg
lret
cmp
mov
inc
xor
mov
mov
cmpl
test
xor
cmc
sbb
mov
mov
fildll
sbb
jno
xchg
pop
punpckhbw
cli
rcll
mov
inc
out
sbb
sbb
lock
adc
lea
jle
js
jmp
cmp
cwtl
jge,pt
clc
fdivp
fdivrs
test
mov
icebp
inc
add
push
xor
adc
inc
mov
jb
sbb
insb
shr
loopne
scas
mov
sahf
mov
mov
jmp
stos
add
test
adc
jle
push
js
mov
jg
mov
pop
inc
pushf
or
xchg
add
jb
lods
inc
sbb
rcl
xchg
push
out
add
cmp
test
fcoms
test
xchg
pop
pop
sbb
sub
shlb
fsubl
push
pushf
adc
aam
lods
mull
inc
adc
fstps
jo
test
js
add
lock
sub
cld
pop
dec
testl
iret
jo
rol
jmp
jle
sub
dec
push
sahf
xor
popa
jmp
test
lods
lret
mov
lret
jge
test
test
cmp
cli
and
pop
add
lahf
push
mov
sbb
push
divps
mov
punpckldq
das
loop
pop
repnz
imul
inc
js
aad
out
sub
dec
mov
pop
or
clc
cmp
xchg
cmp
into
add
mov
and
sbb
xor
or
insb
sti
icebp
loope
mov
dec
mov
add
test
test
mov
adc
movsl
icebp
adc
xor
inc
cmp
push
cltd
mov
sub
shrl
fsubs
loop
rolb
negb
sbb
nop
stos
push
std
sahf
sahf
add
inc
int3
cld
dec
loopne
lahf
dec
das
in
in
fidivrl
push
sbb
cmpsb
shl
dec
or
imul
es
pop
adc
scas
mov
outsb
nop
shll
js
cmp
les
xchg
xchg
scas
insb
adc
mov
fmul
loop,pn
aas
inc
loopne
popa
incb
xchg
test
xor
inc
loopne
cmpb
loopne
xchg
fsubs
sbb
addl
sub
pushf
icebp
mov
add
rcrb
sbb
jmp
mov
push
push
aas
mov
sub
mov
sbb
psraw
pop
inc
and
mov
pop
test
inc
mov
cmpsl
push
stc
ret
inc
xorl
jg
outsb
aad
fdivr
mov
movsl
ds
pop
xorb
jge
dec
jl
jle
add
xchg
pop
inc
clc
or
jbe
int3
sub
shlb
dec
inc
fs
jl
out
idivl
pop
bsf
xchg
in
fimuls
cmp
cmc
inc
jmp
inc
sbb
dec
rorb
cmp
inc
add
xlat
mov
mov
sbb
insb
decb
mov
ret
jnp
or
addr16
pop
je
ljmp
mull
inc
data16
xor
xchg
popa
mov
cmp
xchg
repnz
insb
movd
arpl
lods
pop
xor
lods
pop
ja
mov
xor
mov
je
jmp
loop
push
or
push
jle
ret
enter
pusha
mov
xchg
cmp
fimull
scas
movsb
aam
cmp
rol
clc
out
mov
mov
out
ds
jge
pop
roll
data16
inc
jmp
in
fcoms
xor
dec
fsubrp
inc
cli
mov
sbbb
shr
lret
and
adc
testl
mov
xor
and
shrb
jmp
mov
ret
jg
dec
popa
push
cmp
dec
cli
adc
pop
dec
mov
add
test
mov
cli
mov
dec
fucomi
jbe
dec
aas
mov
shll
fstps
mov
inc
inc
push
or
inc
dec
cltd
mov
sbb
xadd
mov
inc
mov
xor
test
imul
lret
iret
mov
inc
and
ljmp
cmp
into
cs
xchg
inc
mov
push
lea
pop
out
js
mov
mov
cmpsl
dec
cvttps2pi
insb
xor
dec
out
shr
aam
and
or
xchg
inc
xor
push
mov
xor
jecxz
outsb
arpl
loop
cmp
sub
gs
adc
pushf
sti
jns
or
out
out
stos
inc
dec
push
adc
mov
push
cmpsb
repnz
push
fistpll
bound
mov
cmp
and
cmp
mov
inc
mov
lahf
mov
xlat
mov
mov
fmull
cmp
into
push
mov
fldcw
pop
inc
pop
mov
lret
dec
das
mov
fiadds
loop
pop
push
enter
adc
inc
push
bswap
mov
dec
jecxz
lock
mov
and
jl
std
das
sti
jge
jo
jne
xchg
outsl
bound
pop
fildll
out
ds
fsub
sub
and
xor
lidtl
dec
test
lcall
call
inc
ljmp
les
mov
shl
pop
leave
jecxz
dec
not
mov
cmc
sbb
orl
nop
sbb
pop
pop
ret
pop
pushf
cli
leave
rorl
mov
adc
je
in
jnp
sbb
nop
sub
mov
inc
cld
xor
pop
mov
and
mov
pusha
mov
loop
xchg
mov
sbb
sbbb
pop
ljmp
imul
mov
pop
xchg
sbb
inc
adc
lea
cli
xchg
add
sbb
add
jle
sbb
popf
and
js
nop
and
and
or
mov
xor
sar
cmp
in
sbbl
fs
fdiv
jnp
mov
or
cwtl
add
pop
shlb
mov
jecxz
test
pop
sarb
mov
dec
out
sarl
adc
xchg
xlat
lds
adc
sub
xchg
inc
lahf
enter
enter
xchg
adc
jle
test
lea
loopne
lods
dec
jle
int3
into
cmp
ret
pop
ja
lods
jge
movsl
sti
or
mov
ljmp
cmc
cli
sub
adc
clc
dec
out
jnp
jbe
mov
cwtl
jo
icebp
ret
add
test
xor
cmp
mov
push
mov
inc
or
ret
inc
loop
push
or
add
sub
xor
std
xchg
lock
lcall
or
pop
dec
ficompl
cmp
loopne
lret
clc
jp
sahf
xor
mov
pop
add
data16
cmp
fcmovnbe
rcrl
test
cltd
sbb
mov
or
xchg
mov
fs
mov
pop
adc
jns
shlb
in
shrb
movsb
movsl
outsb
shlb
pop
mov
aad
xor
in
lock
sbb
nop
push
or
sbb
mov
sahf
sub
add
mov
rolb
or
xchg
movsb
dec
cmp
cmp
das
out
jecxz
or
nop
cmp
add
bswap
or
mov
pop
or
rcl
sub
jnp
dec
movsb
and
aaa
test
cmp
inc
loop
sahf
push
repnz
scas
popl
mov
jp
loop
lea
ficompl
add
or
sahf
es
inc
cs
cmp
cmp
xor
hlt
sahf
fmull
xlat
shlb
insb
add
dec
popa
xchg
aas
sahf
ret
sub
pop
sbb
mov
aad
sub
inc
jecxz
dec
mov
add
mov
sahf
outsl
popa
xchg
sbb
sbb
fisubl
loopne
dec
push
mov
ret
push
push
rolb
pop
lret
clc
out
stc
xor
cs
shll
stos
mov
loop
sbbb
sbb
int3
pop
push
cs
pop
ss
nop
repz
stos
inc
shlb
decb
sbb
xor
jmp
xlat
mov
pop
cmp
push
daa
and
add
fidivrs
pop
sarb
push
push
inc
sarb
clc
or
int
cld
movsb
hlt
jle
stos
ret
adc
and
xchg
mov
mov
sti
ret
mov
adc
in
inc
push
pop
sub
scas
aas
lods
or
clc
icebp
insb
ret
call
adc
out
mov
push
pop
pop
dec
jbe
pusha
call
mov
jne
imul
sarl
lret
dec
jecxz
insl
loopne
rclb
push
adc
xchg
pop
push
adcb
imull
pop
pop
cmpsb
jle
icebp
stc
test
scas
push
sbb
cld
cmpb
sub
inc
xchg
jle
popf
xor
pop
fsubs
push
inc
add
sbb
xor
loopne
dec
adc
sub
cli
sub
dec
jl
inc
punpcklwd
sbb
sbb
lock
fadd
and
sbb
ret
sbb
mov
insb
lods
xchg
adc
jmp
cmpb
ret
cmpsl
scas
sub
mov
push
cwtl
sbb
sarb
add
js
cmc
cmp
test
mov
ret
dec
add
xchg
push
or
mov
into
adc
mov
jge
xor
cmp
xor
dec
loop
aam
push
roll
pop
add
push
push
test
jl
fiaddl
xchg
iret
xor
inc
or
push
or
mov
mov
loopne
pushf
add
outsb
sahf
jns
rorl
ljmp
push
cmp
push
dec
sahf
or
cltd
dec
dec
mov
int3
scas
out
loop
inc
rcrb
xorb
jecxz
push
xchg
cmp
icebp
mov
mov
jo
jecxz
iret
mov
add
add
xchg
bound
pop
mov
ljmp
rcl
jecxz
push
push
push
dec
loope
cmp
jbe
dec
sbb
xor
cmc
ret
pop
and
mov
push
js
int
daa
mov
imul
in
dec
repnz
ret
push
test
scas
sub
mov
rorb
cmp
outsb
or
lea
inc
xchg
daa
or
mov
outsb
outsb
loop
adc
mov
outsb
outsb
outsb
outsb
add
scas
dec
push
outsb
outsb
outsb
outsb
paddsw
sbb
repnz
mov
iret
xor
pop
mov
cli
mov
push
test
cmp
jp
pop
stc
inc
enter
aas
jl
xchg
push
add
addl
jne
daa
outsl
add
sub
and
adc
andl
adc
repnz
arpl
xor
sub
popf
call
jo
cmpsl
push
mov
mov
divb
scas
pop
jl
mov
repnz
fwait
aaa
sti
enter
mov
xor
xchg
in
lock
pop
mov
or
adc
insb
loop
insb
cs
adc
orl
ficoml
std
mov
scas
pop
ret
mov
pop
push
das
stos
cmc
jmp
xor
inc
js
lahf
cmpsl
inc
jge
mov
adc
sub
imul
mov
aas
sub
loope
movsb
dec
push
lds
adc
cwtl
out
xchg
add
es
xchg
mov
scas
movb
movsb
loop
cmpsl
inc
js
icebp
sbb
imul
pop
inc
es
mulb
mov
mov
sub
fcmovu
loop
mov
sub
mov
adc
dec
imul
sahf
scas
cmpsb
out
and
or
xor
scas
pop
mov
or
loope
add
ret
mov
mov
push
pop
ds
cmp
addb
popf
add
rcrl
call
fwait
mov
or
fs
or
out
lock
jl
or
repnz
mov
mov
inc
sub
rorb
insb
mov
adc
movsl
test
xor
aam
mov
add
fsubr
aas
jp
push
cmovb
incl
push
mov
sub
xor
loop
rolb
js
rcrb
call
add
movsl
insl
sbb
das
test
stos
lahf
jle
mov
dec
aas
pop
and
or
push
or
sbb
jecxz
je
and
mov
sub
sbb
cmc
sahf
fldcw
pusha
int
inc
or
fdivp
das
pop
test
push
call
adc
outsb
hlt
aas
ss
adc
es
or
into
sbb
call
xchg
add
adc
ss
popa
and
mull
mov
outsb
push
je
or
lea
inc
shrb
mov
outsb
fstps
cmp
add
inc
mov
add
mov
jns
mov
cld
add
adcb
cmp
mov
jno
jp
fadd
das
pop
inc
fcmovbe
test
fisubs
ret
sbb
adc
scas
sahf
xchg
lods
test
xchg
mov
inc
les
jg
sub
jmp
jns
add
ret
xchg
pop
cmp
lods
ja
js
jl
dec
nop
insb
cld
inc
in
int3
sub
xor
ds
fnop
xlat
jecxz
add
and
ljmp
loopne
adc
sub
adc
jp
mov
inc
sub
rolb
xor
jae
jbe
call
ret
push
cmp
das
mov
out
push
jo
sub
push
fisttpl
mov
cmp
cmp
or
adc
subb
inc
sbb
jno
rorl
xor
jl
sbb
in
pop
iret
mov
js
bound
push
add
mov
xchg
push
scas
add
fcmovb
inc
lds
jmp
lahf
ds
lock
jmp
xchg
cld
sub
fidivrs
sub
mov
call
pop
aas
cld
pop
movsl
jnp
push
repnz
jge
sti
add
jns
cmp
clc
dec
out
xchg
pop
sbb
loop,pt
fisubrl
dec
mov
push
or
mov
bound
xor
cmp
lds
mov
in
push
sbb
call
and
aas
or
sub
pop
mov
mov
mov
js
jne
cld
sbb
mov
movsl
pop
fists
mov
sbb
rcl
test
scas
or
nop
push
or
test
repnz
loopne
sbb
jl
xor
inc
mov
add
cmp
cmp
mov
psrld
aam
sbb
and
jl
jp
scas
sti
mov
mov
ds
mov
push
push
cmp
or
push
mov
cli
into
inc
sbb
xor
pushf
out
and
pop
jl
xchg
loopne
add
fbstp
mov
xchg
std
fcomps
jmp
pop
lock
cltd
mov
gs
loop
fmul
xchg
adc
jae
push
mov
xlat
mov
cwtl
mov
rcrb
fimuls
in
repnz
jle
adc
movsb
adc
mov
jne
and
hlt
jge
icebp
xchg
jo
into
mov
je
fildll
and
sbb
add
js
loop
mov
aas
aam
push
pop
mov
sbb
mov
test
inc
gs
popf
movl
adc
cli
call
js
add
cmp
ret
das
add
sub
dec
add
daa
push
push
mov
pop
bound
out
fs
loope
mov
imul
stc
sub
push
aas
and
stc
int3
cmp
orb
adc
stos
sbb
or
jge
add
xchg
icebp
je
outsb
jnp
mov
jb
push
pop
lods
mov
inc
add
cmp
xor
push
sub
lods
cs
sub
imul
dec
sub
fs
les
hlt
add
call
call
ss
adc
enter
and
bound
xor
and
mov
dec
xor
js
ljmp
sarl
js
lret
add
or
in
cmp
mov
int3
movsl
test
pop
sbb
pop
or
adc
aam
fsubrp
aad
inc
mov
shrl
adc
loope
jb
fsubrs
push
sbb
mov
push
xor
push
cmpsb
inc
pop
lcall
mov
scas
mov
push
push
cmp
inc
add
mov
cmp
aam
fisubl
mov
sub
jge
add
xchg
enter
hlt
loope,pt
ret
and
dec
push
push
dec
cmp
rcl
push
pop
add
cmp
jl
clc
dec
loopne
add
xor
fisubl
arpl
loope
mov
fwait
sti
into
add
jl
push
dec
dec
and
repz
add
pop
and
push
ret
sahf
fmuls
cmp
fisubrl
stos
shlb
inc
mov
aaa
insb
xchg
inc
sbb
pop
add
mull
xchg
je
hlt
or
push
cltd
or
imul
sti
popa
lock
mov
push
cmpsb
pop
and
inc
rolb
pop
mov
add
sarb
ljmp
out
repz
cmpsl
mulb
jno
inc
xor
clc
loopne
dec
xchg
mov
mov
sbb
andl
xor
inc
pop
mov
sbb
mov
xchg
jo
cmp
push
xchg
inc
lods
inc
push
popf
mov
test
xchg
or
adc
ja
mov
push
add
scas
add
lock
fisubl
fisubrl
loope
pop
ficomps
jge
sub
js
pop
mov
shrl
fucom
dec
movsb
icebp
xchg
add
popf
loopne
dec
cmp
mov
mov
sbb
cwtl
lods
lahf
xchg
mov
fwait
js
xor
clc
jle
test
and
jl
cmp
enter
cmpl
xchg
rorb
jo
cld
xchg
pushf
dec
cmpsb
inc
fidivs
sbb
adc
icebp
insb
mov
mov
daa
loop
movsb
shl
xor
imul
add
xor
mov
mov
cld
xor
pop
popf
sub
push
mov
fisubrs
inc
notl
mov
pop
rorb
push
ja
pop
test
add
mov
jo
inc
jmp
pop
mov
pop
sbb
jnp
movsb
cmp
rclb
xor
dec
loopne
add
outsl
test
mov
adc
mov
pop
xchg
or
or
xchg
in
push
into
xor
or
sbbb
aas
pop
pop
jge
and
jg,pn
loop
pop
push
mov
and
shrb
mov
mov
inc
xlat
rolb
mov
inc
add
mov
rorb
cmc
repz
in
pop
xchg
aam
aam
cmp
sbb
pop
jns
rorb
adc
lret
xchg
stos
pusha
add
xchg
cwtl
mov
and
lock
mov
mov
cmpsl
mov
push
mov
push
and
cld
jbe
jae
mov
add
repz
js
mov
shlb
xor
adc
aam
push
mov
lods
das
sub
inc
in
addl
or
shl
inc
xor
adc
pop
jge
push
cmp
pinsrw
cmpl
mov
ds
lahf
out
xor
xor
les
and
clc
and
ret
bound
daa
xor
push
xchg
insb
jge
xor
jo
loopne
xor
icebp
lods
xchg
sub
push
fwait
mov
lea
arpl
cs
out
xor
pop
rolb
test
sahf
sub
into
mov
adc
loopne
ret
je
fists
data16
or
hlt
jmp
hlt
pop
or
addl
adc
notb
stos
ret
inc
pop
jge
into
xchg
call
pop
ffreep
imul
cmp
in
fcomps
insb
lret
pop
xchg
orb
notb
xlat
add
mov
cs
cmc
inc
jge
pop
in
rcl
jmp
mov
lock
dec
addb
fisttpll
jge
std
xor
int
adc
clc
ror
sbb
icebp
std
ret
dec
mov
bound
xchg
inc
add
daa
lods
mul
ja
mov
je
sarl
out
stos
fsubrs
xchg
adc
and
clc
jae
stc
dec
inc
sarl
cmc
dec
pushf
mov
cmp
notl
movb
es
mov
mov
mov
pop
mov
lret
scas
push
mov
push
out
or
fsin
push
test
insl
mov
loope
push
adc
popl
cwtl
mov
push
js
mov
inc
rcl
mov
pop
in
mov
nop
jmp
xorb
push
pop
fsubs
callw
inc
dec
sub
sbb
outsl
loopne
xchg
sbb
pop
insb
cmpsb
rorl
fucompp
addr16
enter
mov
sub
mov
mov
sbb
lods
pop
and
notl
jne
add
lcall
or
adc
xor
and
icebp
loop
test
aad
lock
nop
jns
pop
bound
ret
cmp
sarb
sbb
or
ret
sahf
mov
fcomi
inc
xchg
adc
insb
cmp
loop
lea
dec
js
jecxz
in
nop
dec
lods
mov
push
dec
inc
lcall
cmpsb
mov
loop
les
pop
mov
bound
imul
cmpsb
cmp
pop
pop
lret
shl
mov
mov
push
lock
imul
mov
test
loopne
jg
ret
mov
sub
jo
inc
rol
decb
aas
mov
bound
inc
mov
xchg
cmp
clc
push
mov
xor
loopne
rclb
fiaddl
scas
pop
aam
loopne
cli
lahf
xchg
cli
dec
call
enter
iret
push
pop
popf
pop
cwtl
push
aaa
lea
pop
adc
cli
nop
out
jno
mull
mov
es
mov
roll
and
icebp
outsb
push
inc
xsaveopt
hlt
pop
int3
ffree
enter
and
and
mov
xor
push
or
push
iret
xor
push
out
out
xor
lahf
adc
iret
rcll
and
dec
arpl
sbb
push
aam
inc
jbe
xor
pop
mov
test
pop
xchg
sub
scas
pop
iret
lods
xchg
clc
or
icebp
mov
movsb
pop
xor
jo
test
cmp
in
pop
sbb
xchg
ret
ret
ficomps
test
jb
adc
jge
mov
mov
jg
mov
pusha
jno
loop
idiv
push
aam
in
repnz
clc
adc
push
sbb
fidivrs
scas
sub
sub
out
stos
outsl
inc
jp
dec
and
insb
sbb
jecxz
pop
rclb
cld
mov
jmp
mov
cs
jns
xlat
xorl
mov
or
pop
add
push
pop
aaa
push
sub
cli
loop
dec
cli
or
mov
sbb
dec
sub
sbb
icebp
shr
add
cld
cmpsb
out
xchg
popa
cmpsb
inc
push
movb
push
movsb
sbb
fimuls
push
movsl
pop
and
lods
fcmovu
inc
loop
inc
cmp
sub
pop
lahf
test
imulb
push
push
jno
push
dec
loop
and
sbb
mov
push
push
out
adc
sub
add
fsubrl
mov
inc
je
fmul
mov
or
jns
jl
adc
fisttps
cli
push
ret
jno
jl
hlt
shll
lods
js
shrb
xchg
mov
ror
and
faddl
sbb
sbb
inc
adc
mov
and
clc
jle
and
fisubl
and
inc
clc
ds
ss
push
sbb
fstl
lahf
xor
cmp
adc
cmp
xchg
loop
in
jo
xlat
out
std
lock
mov
jle
push
inc
pop
push
dec
mov
mov
fldl
pop
sahf
pop
cmp
or
loopne
fstps
fiadds
inc
arpl
ret
in
xor
jge
or
test
xchg
popl
fldl
ret
ficoms
pop
mov
pop
or
add
xor
adc
std
add
xor
leave
js
mov
jne
mov
push
loope
sbb
out
adcl
mov
lods
add
mov
mov
pusha
rcrb
loopne
cmpsl
sbb
pop
or
push
add
fcmovnbe
cmpsl
xorb
push
and
jle,pn
jmp
shr
fidivrl
mov
pusha
adc
iret
dec
inc
nop
adc
inc
push
das
add
pop
jmp
loope
pop
add
std
icebp
popa
xchg
mov
test
or
push
jge
xchg
roll
mov
sub
jbe
push
jl
sbb
mov
lret
or
mov
shl
cltd
add
cli
loope
les
pusha
scas
shrb
dec
cmp
js
lock
divb
loope
rol
push
mov
cmc
loopne
jle
mov
fidivrl
jo
lods
pop
das
xchg
mov
xchg
push
addb
cmpsb
cmc
loopne
ljmp
push
cld
mov
inc
jo
pop
addr16
mov
ds
rcrl
sarb
bound
repnz
loopne
xchg
and
loopne
loopne
inc
dec
cwtl
mov
cmp
sbb
dec
sahf
mov
out
xchg
adc
xchg
data16
imul
scas
pop
mov
xchg
push
pusha
pushf
rorb
in
jl
and
jmp
add
sbb
sarl
loopne
jecxz
lock
push
xchg
out
sub
andl
cmp
shlb
rorb
loopne
sub
test
jbe
or
sbbl
push
push
mov
test
jae
push
out
addr16
and
popf
aas
xchg
imul
pop
inc
cmpsb
js
imul
in
sbb
sarl
add
dec
adc
push
pusha
or
out
push
cltd
jbe
lock
inc
pop
clc
inc
stos
inc
pop
das
insb
jl
jecxz
aad
pushf
dec
jmp
xor
popf
inc
insl
or
sbb
push
ds
jge
sar
imul
jp
pop
fs
testb
fabs
lds
cmp
les
jl
pop
sbb
shl
out
femms
imul
mov
jge
icebp
cmp
pop
push
jp
mov
enter
adc
jo
ds
adc
add
inc
jecxz
pop
xor
inc
mov
add
mov
ja
inc
or
cmp
push
subl
and
cvtpi2ps
jmp
rol
xchg
cld
xchg
loopne
jo
jge
jp
cmp
insb
orl
mov
push
mov
aas
ds
movsb
and
mov
inc
ljmp
push
push
or
jno
into
dec
sarb
cmp
or
outsb
scas
pusha
or
xor
cmp
sbb
mov
pop
xchg
test
xchg
xor
sbb
loopw
mov
pop
cmpsb
fisubrs
cmp
insb
aas
ds
mov
test
ret
mov
pop
lahf
push
test
xchg
js
dec
inc
jl
daa
loop
jge
roll
mov
push
sbb
cmp
mov
xchg
mov
cwtl
mov
cmpsl
inc
ds
aam
pusha
jb
clc
push
and
cmp
out
push
cld
add
ror
mov
mov
mov
mov
mov
jo
ror
clc
sbb
rolb
push
std
hlt
xchg
loop
cmp
cli
jge
cwtl
and
loope
rcrb
insb
sbb
aam
insl
mov
sti
and
clc
repnz
fisubs
cmc
sbb
jbe
pop
xchg
jnp
or
xor
stc
pop
movsb
icebp
fsub
fimull
movsl
push
xor
movsl
fdiv
enter
pop
sub
cmp
and
xor
icebp
bound
inc
add
xchg
mov
mov
int
and
mov
test
clc
push
shrb
mov
negl
test
or
ret
int
ret
mov
arpl
lea
and
loop
int3
xor
shlb
add
sub
pop
test
stc
sarb
cvttps2pi
jmp
mov
ljmp
push
jp,pt
in
div
xlat
int
pop
test
jecxz
fistl
pushf
cmp
daa
mov
or
xor
fidivrl
mov
fisubrs
push
ljmp
in
hlt
leave
sbb
jmp
xor
sub
sbbl
dec
mov
mul
fcmovnbe
imul
out
enter
int
clc
lods
notl
push
mov
sbb
jl
cmp
mov
sub
or
adc
pop
pop
or
mov
pop
cmp
dec
js
xor
or
xchg
test
sbb
jno
scas
push
mov
or
push
mov
jmp
adc
mov
es
clc
dec
mov
xor
rcll
ss
js
jle
jp
and
push
es
cmpsl
jo
sbb
xchg
out
inc
cli
roll
inc
adc
ret
push
jl
out
test
sahf
loopne
cli
loope
pushf
insl
jp
out
cmp
or
xchg
pusha
cwtl
loope
sub
cmpsl
and
shrb
xchg
xlat
das
repnz
ja
xchg
hlt
mov
mov
jnp
test
sub
xchg
insb
insb
ret
sub
mov
int3
test
xor
sbb
xchg
movb
xlat
mov
xlat
cmp
mov
sahf
sub
push
or
cwtl
movb
jp
xor
imul
cmp
jbe
roll
js
xchg
je
les
mov
or
mov
js
scas
ffreep
pop
movb
and
pop
xor
mov
cmp
cmp
aad
pop
sub
sub
cmpsl
nop
dec
push
jl
jbe
roll
jo
xor
repnz
loop
and
in
mov
dec
mov
xorb
test
ja
jecxz
cmpsb
andb
jnp
cmpsl
dec
xor
je
scas
pop
sti
iret
push
dec
mov
in
shll
cmp
xor
hlt
lret
jb
push
xchg
lret
mov
std
jp
loopne
inc
pop
ss
shll
sbb
pop
dec
ficomps
clc
hlt
in
divl
cld
or
lahf
sahf
adc
mov
jp
hlt
das
add
inc
pop
addb
pop
sbb
pushfw
inc
cmpsl
dec
cmpsb
js
mov
fidivrs
in
rclb
adc
pop
pop
cld
orb
push
ret
rolb
push
aad
mov
pop
inc
inc
clc
or
add
pushf
mov
pop
out
cmpsl
fsubl
scas
mov
xor
les
ja
cmpb
xchg
addl
aaa
imul
inc
lahf
add
ljmp
xchg
cs
hlt
loopne
lock
cwtl
inc
jg
xor
fiadds
or
stos
mov
std
push
push
idiv
pop
mov
leave
push
mov
lcall
call
mov
pop
cmp
cmp
xor
mov
pop
and
dec
push
testl
les
and
push
rcrl
cs
push
imul
xorl
push
and
mov
mov
xchg
sub
lods
sbb
inc
push
push
push
sarl
adc
mov
mov
dec
testb
lahf
mov
jcxz
shlb
xor
or
xor
shlb
push
fsts
pop
jl
pop
es
mov
add
in
lret
clc
icebp
cmp
cmpsl
andb
testl
dec
push
mov
push
jmp
pop
cwtl
pop
mov
add
sbb
dec
in
inc
popl
loopne
add
xor
ret
add
divb
test
sahf
xor
shll
add
mov
mov
push
loopne
scas
mov
fsts
xlat
pop
out
rcr
mov
push
cld
enter
hlt
lock
jo
push
bound
mov
idiv
xor
pop
pop
xchg
bsf
pop
loope
adc
pop
les
cld
bound
cmp
sub
enter
icebp
icebp
roll
adc
hlt
push
push
js,pt
xchg
lock
jne
cli
je
jle
mov
jns
inc
jae
mov
daa
cli
mov
jmp
or
and
adc
repnz
and
or
and
sbb
ret
shll
mov
inc
js
push
or
pop
lret
adc
les
test
mov
push
ret
rcrb
addr16
adc
xchg
sub
dec
ret
pop
or
jbe,pn
sbb
and
xor
mov
rcrb
mov
enter
xor
jns
cmc
jnp
xor
lcall
sub
in
mov
or
inc
mov
stos
sahf
push
lahf
pop
pop
enter
js
cmp
notb
movsl
cmp
mov
push
and
xor
ss
inc
push
sysret
mov
packuswb
mov
ds
mov
push
das
push
xchg
cmc
jecxz
or
cmpsb
mov
stos
mov
or
push
push
sub
inc
aam
out
mov
jecxz
lahf
jo
dec
push
hlt
jae
rolb
fcmovne
xor
out
xchg
mov
loopne
lods
xor
idiv
lock
xchg
sub
sub
dec
loope
hlt
xchg
mov
js
les
int
cld
pop
loope
xchg
adc
mov
cmp
adc
sub
add
or
lock
mov
hlt
cmpsb
push
iret
out
sti
inc
shlb
dec
jg
dec
jecxz
push
imul
adc
and
mov
pop
mov
mov
xchg
sub
pop
dec
mov
or
cwtl
repz
inc
jmp
ljmp
push
sahf
mov
iret
and
adc
sbb
push
loopne
stos
and
pushf
inc
jl
dec
xchg
aam
fwait
js
jo
and
testb
inc
cmpl
clc
pop
mull
repnz
and
arpl
hlt
inc
aas
orl
notb
fwait
dec
cwtl
fstpt
or
call
sub
je
lock
sub
data16
test
andl
xor
lods
je
mov
jle
js
ljmp
test
arpl
pop
outsl
int3
add
inc
fcomi
rol
jo
xor
adc
cmpsl
out
xor
hlt
movsl
jecxz
ret
sub
std
jmp
pop
pop
daa
into
sbb
jp
andl
pop
mov
sbb
gs
fwait
lock
jg
xor
loopne
out
ja
psrad
cmp
or
add
pop
mov
lock
add
inc
test
mov
jecxz
mov
push
jb
dec
dec
sbb
test
inc
out
lea
test
out
fcomp
std
mov
psadbw
cmp
sbb
in
mov
fs
dec
clc
xchg
rclb
sbb
pop
rolb
js
out
sti
push
inc
mov
jge
xor
aad
xchg
loopne
mov
cmc
add
adc
pop
adcl
repnz
lock
mov
add
adc
shlb
push
push
and
je
imulb
sti
cmc
adc
xlat
outsb
lret
ljmp
sar
mov
and
xor
dec
mov
je
das
adc
sub
pop
scas
rorl
inc
addb
fucomip
cmp
dec
mov
xchg
jp
or
mulb
pop
inc
cli
pop
fs
fdivs
mov
orb
or
bound
mov
cmp
or
cmp
push
les
lods
inc
pop
mov
filds
or
xchg
push
ds
dec
lock
pop
lods
mov
ss
loop
clc
adc
repz
and
xor
into
sub
mov
xchg
cli
es
mov
cmp
les
xor
dec
push
cmp
adc
lock
mov
out
jmp
xorb
mov
sub
adc
xor
cmpsl
imul
mov
dec
mov
inc
sub
add
cli
jbe
mov
hlt
pusha
icebp
jne
loopne
xor
shl
mov
in
cmp
popf
aam
mov
es
lret
jle
aas
add
mov
cmp
fwait
enter
mov
mov
pop
or
add
lods
push
jbe
ljmp
adc
xor
lret
call
dec
inc
jg
lods
lea
xorl
in
push
push
dec
jne
rcl
dec
call
push
adc
ret
cmp
inc
pop
mov
add
xchg
mov
xor
add
ret
mov
dec
ds
icebp
xchg
aam
incb
mov
pop
cmpsl
insb
clc
mov
adc
lahf
cmp
mov
pop
sahf
sub
sub
xchg
dec
push
pop
jecxz
daa
mov
cmp
aas
ljmp
mov
js
call
rclb
mov
aad
popf
xchg
and
adc
std
adc
testb
scas
in
pushf
mov
pushf
leave
jns
das
cmp
clc
push
adc
mov
fisttpll
inc
mov
pop
fs
push
add
adc
dec
push
negl
aam
inc
dec
into
enter
ljmp
mov
test
lods
std
sbb
inc
adc
call
add
fbld
sbb
fldt
movntq
movsl
ret
out
call
fwait
adc
bound
lock
lahf
into
lcall
jae
pop
icebp
cli
mov
sub
pushf
sbb
data16
popa
fisubrl
sbb
icebp
loope
pop
je
pop
hlt
mov
jmp
cli
jmp
rclb
mov
add
ret
mov
lahf
test
jmp
fisttpll
adc
daa
aas
lea
sub
jnp
push
ret
xlat
pop
inc
xor
pand
mov
sar
loopne
stos
and
icebp
cmp
es
jecxz
idivb
out
xchg
and
cmc
sbb
xor
insb
fistps
dec
pop
cmp
xor
mov
lds
jbe
loope
and
or
ds
mov
xor
push
and
xchg
dec
aas
loop
movsb
mov
lret
ljmp
inc
out
out
mov
rolb
and
lock
fiaddl
push
fmull
scas
iret
movl
mov
inc
std
pop
jmp
in
shrb
push
sahf
cli
push
out
and
xchg
sbb
stos
jo
test
or
into
pop
sub
cs
mov
icebp
mov
adcb
jp
shll
insl
pop
flds
push
jg
adc
and
or
loope
scas
xchg
xchg
jnp
or
stos
xchg
cmc
jbe
pop
faddl
jg
push
sbb
icebp
ljmp
cltd
push
inc
call
cmp
jne
mov
jp
mov
cmp
xor
das
or
jge
rorl
and
pop
pop
cs
xchg
aaa
push
mov
lods
push
ret
jl
add
mov
pop
pop
bound
subb
adc
pop
cld
dec
pop
rorb
scas
lods
or
inc
rclb
cmp
orl
es
push
clc
sbb
adc
jle
ljmp
das
test
ficoml
mov
fs
test
jp
fld
lds
mov
sbb
cli
js
mov
jg
pusha
mov
es
orb
std
push
xchg
xchg
lods
loopne
sbb
fmuls
jmp
mov
inc
and
cmp
nop
scas
push
rcrb
xor
aam
cmp
icebp
ret
lret
nop
and
insb
lea
push
xchg
cli
cmp
stos
bound
dec
jo
jb
or
jecxz
lods
push
mov
mov
js
dec
or
sti
js
adc
das
push
and
xor
lock
pop
add
xchg
clc
add
inc
imul
and
js
clc
ret
jns
mov
les
mov
mov
pop
pop
cmc
cmp
jmp
sarb
and
fldenv
push
insl
add
out
cli
dec
sbb
mov
add
fisubs
jl
add
mov
es
lea
or
dec
icebp
or
lock
fwait
add
xchg
mov
ret
lock
test
pop
negl
fadds
subb
add
arpl
lcall
and
imul
pop
push
sbb
sbb
outsb
das
xor
je
sbb
aam
and
popf
adc
daa
adc
gs
call
lods
loopne
cld
push
push
std
lock
ret
adc
cmc
loopne
mov
sarb
and
inc
arpl
ja
hlt
sbb
rcl
stos
insb
sbb
ret
jg
mov
js
notl
popa
in
sub
hlt
xchg
js
mov
and
add
movl
cmc
lret
movsl
xchg
movsb
js
inc
mov
jp
jmp
pop
or
fiaddl
pop
dec
int
dec
dec
xchg
xchg
ret
adc
js
ljmp
dec
and
and
sub
jge
dec
push
add
imul
lods
cmc
test
movsl
xor
pop
jno
cli
dec
mov
mov
dec
pop
or
jl
testb
jge
out
aaa
jno
stos
iret
scas
inc
rolb
aas
pop
or
into
nop
ja
cmp
pop
jg
fwait
leave
pop
cld
pusha
fdivrs
pushf
xchg
aam
xor
pushf
leave
ret
cmpsl
mov
pop
divps
adc
add
pop
add
jecxz
rclb
sbb
dec
pop
bnd
mov
nop
mov
movsb
call
mov
rcrb
out
xor
or
aas
inc
adc
je
clc
xchg
je
push
adc
ret
jno
jb
xor
sub
pop
or
jg
sub
sbb
pop
cmp
scas
cmc
pop
pop
hlt
into
mov
dec
aad
jle
mov
lret
jge
jmp
out
mov
xchg
imul
ds
lock
js
mov
loop
mov
xchg
rcl
dec
lahf
cli
and
jp
jecxz
inc
lcall
lock
xorl
pop
test
les
cmp
push
adc
and
inc
jno
or
add
insb
insb
aas
cmp
xor
bound
sbb
jle
dec
add
xchg
cmp
sbb
push
inc
out
dec
adc
jge
xchg
pop
int3
sbb
js
stos
cmp
in
out
mov
dec
inc
jp
mov
out
lods
sbb
xor
xor
scas
adc
shll
std
jle
cwtl
jbe
int3
iret
clc
mov
fprem
pop
data16
cmc
inc
jecxz
mov
insb
mov
loop
popl
jmp
xchg
xor
inc
les
mov
in
inc
loope
mov
in
ret
orl
sbb
lods
stos
sbb
inc
push
xchg
movsb
jns
in
jno
aas
lret
xchg
lcall
sti
add
push
subb
dec
pusha
pop
or
lds
pop
cli
loopne
sub
add
cwtl
out
mov
or
ret
outsl
and
arpl
or
ret
shll
jmp
lds
pop
cmp
shrl
rclb
fiadds
fistpll
imul
xchg
push
insb
inc
mov
xor
imull
mov
sub
loopne
clc
pop
fldcw
std
js
mov
fidivrl
push
dec
pop
cmp
xchg
arpl
sbbl
mov
sahf
imul
ja
xchg
xor
loope
xor
pop
outsb
filds
sbb
jno
clc
adc
test
movsl
mov
mov
push
out
xchg
sti
push
lret
pop
in
pop
out
mov
and
mov
mov
adc
add
pop
inc
nop
arpl
loopne
fldenv
fildl
or
nop
jl
js
push
xorl
jo
dec
dec
mov
mov
aas
or
inc
inc
fildll
or
cmp
fidivrs
je
lds
mov
dec
loopne
cld
clc
sub
into
sub
add
mov
or
inc
jl
ret
push
push
cs
lahf
push
pop
fisttps
jl
jge
gs
clc
stc
pop
loopne
inc
ret
cmpsb
sub
ds
lahf
adc
mov
test
sub
rorb
xchg
fs
shlb
pop
inc
rolb
xor
mov
lock
jg
jnp
mov
cli
push
out
enter
in
ljmp
adc
mov
fs
inc
andl
mov
cmp
pusha
xchg
movsl
inc
pusha
and
rorl
push
add
cld
movsb
int3
in
xor
packsswb
ljmp
lods
adcl
js
mov
imul
ds
pusha
adc
cmpb
push
jbe
popl
repnz
adc
inc
in
mov
inc
cs
jmp
and
pop
les
or
sti
and
pop
add
addr16
sub
and
pop
cs
xor
ret
cmp
loope
or
sbb
fsubrs
lds
or
xorb
push
outsb
in
lcall
xor
stc
loopne
push
jo
fsubs
pop
xor
xchg
stos
or
ds
sahf
xorl
gs
aas
mov
mov
cli
add
inc
faddl
mov
mov
dec
or
xor
aas
jmp
adc
cs
mov
jbe
cmp
inc
daa
xor
pop
arpl
pop
sbb
outsb
mov
daa
dec
xlat
cmpsb
mov
mov
inc
insb
popl
xor
inc
test
insb
push
xor
jo
nop
lcall
aam
sti
adc
jb
js
add
rolb
scas
add
pop
stos
lods
sbb
adc
mov
and
sahf
lcall
jp
sub
shl
push
or
fisttps
sub
loopne
cmp
push
push
push
stos
nop
add
jmp
cmp
pusha
push
mov
shlb
jb
icebp
rol
pop
stc
mov
sbb
mov
clc
pop
mov
aad
js
push
ret
dec
outsl
jmp
mov
das
outsb
mov
orb
fsubl
mov
test
xchg
and
mov
xorb
and
fs
jne
inc
fnstcw
shll
and
shlb
lock
rcll
adc
cld
push
cld
cmc
adc
cmp
push
mov
movsl
jnp
sbb
in
add
dec
dec
fwait
daa
icebp
roll
cli
cmp
out
loope,pn
xchg
sbb
icebp
sbb
call
outsb
jecxz
test
pop
ret
push
lds
shrl
cld
xchg
push
lret
pop
ficomps
jne
int
cwtl
mov
jle
pop
push
push
sbb
xlat
and
mov
and
cmp
fiaddl
push
fbstp
fists
test
jae
nop
jno
imul
pushf
xchg
dec
push
sbb
clc
push
or
or
std
mov
lahf
or
cmpsb
xor
add
mov
test
jmp
mov
sbb
nop
ret
pop
mov
into
xorb
mov
test
mov
push
pop
xchg
and
bnd
jnp
mov
ds
ror
inc
mov
filds
aad
in
cmp
push
pop
aam
pop
or
jne
lock
loop
and
adc
inc
jge
jmp
je
stos
out
pop
and
mov
xchg
scas
inc
pop
jno
vmovups
pop
mov
mov
pop
mov
mov
mov
cmpsl
adc
out
fidivl
add
enter
push
addb
out
sahf
and
das
icebp
add
push
ja
mov
inc
pop
push
pop
je
lea
loope
and
repz
push
out
add
xor
adc
jecxz
mov
cmpl
fsubrs
das
push
add
push
mov
std
and
shlb
rol
pop
pop
pop
orl
or
add
cmp
push
cs
out
xor
push
stos
js
jle
and
cmc
insb
testl
xchg
jmp
js
rol
idivl
clc
push
xorb
adc
rclb
test
mov
loop
rcrb
das
mov
adc
fbld
lock
xchg
mov
into
nop
push
iret
rclb
int
push
movsb
ss
out
movl
sbb
mov
or
xor
loopne
test
xchg
push
and
ljmp
adcb
jle
mov
mov
lahf
inc
jge
bound
xor
pusha
out
or
sub
sahf
adc
mul
std
pop
fcomps
imul
sub
out
mov
out
daa
jo
sbb
push
cltd
cmp
xchg
lret
nop
push
clc
push
xchg
push
lahf
mov
insb
or
jecxz
shrb
ljmp
add
cwtl
jb
xorb
push
jecxz
mov
test
cmpsl
mov
fisubs
mov
fdivr
mov
fisubs
imul
dec
adcl
loop
outsb
cwtl
push
lock
pop
cld
adc
inc
popf
cmp
rorl
clc
push
cmpsl
test
push
rorb
lock
inc
cmp
or
adc
roll
dec
or
inc
das
sub
in
jl
ficomps
movsw
adc
ret
scas
dec
les
jo
inc
adc
call
int
xchg
inc
lahf
test
pop
aas
sub
lcall
jecxz
imul
test
lcall
push
pop
jg
lahf
push
dec
stos
mov
mov
iret
out
pop
dec
cmpb
mov
sub
imul
sti
push
lock
daa
cmpb
cmp
js
adc
decl
lea
cmp
push
jecxz
mov
inc
imul
sbb
or
stos
in
movsl
je
pop
inc
xor
ljmp
popf
enter
jae
pop
cmp
testl
push
or
lods
addr16
push
shl
rorl
jb
jne
loop
and
filds
and
insb
xor
mov
add
xor
popa
cmpsl
pop
adc
ficomps
xchg
or
sbb
loopne
hlt
lret
add
mov
sbb
faddl
movsl
inc
add
mov
je
pusha
add
mov
aam
das
arpl
and
mov
out
sbb
stos
jnp
inc
jl
sbb
fldl
rolb
stc
mov
mov
push
es
mov
sbb
lds
outsl
mov
das
mov
test
movsb
cmpsl
mov
mov
add
push
mov
in
lcall
lahf
xor
clc
cmpsb
sahf
cld
inc
int3
jns
and
lock
xchg
inc
and
or
mov
loope
adc
out
add
add
cmp
rorl
pop
sub
or
push
into
nop
fmul
fbld
mov
es
addr16
push
mov
cs
nop
add
shlb
dec
in
xor
outsb
outsb
les
popa
out
or
stos
das
ret
lock
fisttpll
shl
int3
aam
int3
mov
loop
add
daa
lcall
jl
add
push
insl
jl
inc
sub
ljmp
rclb
mov
loope
mov
lock
mov
ja
das
and
push
xor
mov
cmpsl
test
push
pop
je
mov
outsl
call
mov
scas
xor
sub
xor
and
and
adc
mov
les
jmp
add
or
add
nop
jmp
sti
lock
mov
sbb
ja
rcll
lock
xchg
lcall
push
add
hlt
test
mov
cld
icebp
in
punpckhdq
roll
cmp
pusha
sbb
sbb
jge
pop
aas
mov
js
and
sar
sbb
adc
fnstenv
mov
xor
jle
jp
sbb
in
cmp
xchg
mov
bound
xchg
sub
push
and
sbb
mov
lods
jge
inc
cmp
sub
int
lea
ja
loope
mov
mov
fs
xor
pop
std
jle
push
adc
mov
jmp
scas
and
jmp
xor
mov
mov
ret
cmp
lock
loopne
jne
pop
xchg
jg
jp
imul
je
bound
pop
iret
cs
out
loope
in
loopne
xchg
mov
push
mov
rol
bound
repz
push
sbb
inc
or
cmp
mov
pop
cs
adc
cld
loop
int
adc
adc
fidivrs
inc
jle
xor
pop
andb
or
lret
ja
loop
dec
push
into
insb
pop
shlb
insb
call
add
repnz
pop
sub
push
push
cvtps2pd
mov
fcomi
xchg
and
or
jmp
mov
fwait
jbe
scas
into
push
adc
sbb
sub
cltd
xor
cld
and
sbb
mov
cmc
fs
scas
mov
xor
addr16
lock
or
push
test
jge
outsb
and
cmp
ljmpw
add
or
outsb
mov
in
add
arpl
jb
or
push
xor
icebp
es
push
mov
cmp
mov
cmp
loop
sbbb
out
xor
imul
push
push
mov
lret
push
scas
sbb
adc
xchg
fdivp
ret
push
or
lcall
icebp
and
xor
fs
outsb
xorl
bound
clc
stc
fildl
lret
cmp
push
clc
push
inc
ret
jecxz
inc
lea
inc
clc
and
xor
xchg
popf
cmc
dec
loop
add
sub
cld
adc
jle
fcoml
dec
mov
femms
xor
jecxz
les
cmc
loope
sti
ljmp
fistpll
dec
cltd
popa
sbb
push
jp
outsb
dec
add
ret
jge
insl
scas
das
push
push
ja
and
mov
and
jge
icebp
movsb
fldl
adc
dec
and
ds
sbb
cs
loop
pop
pushf
cltd
push
push
cs
jnp
leave
aaa
xchg
int3
call
jp
mov
bound
fnop
sub
rol
jb
pop
inc
cld
inc
loopne
mov
push
nop
fcompl
mov
ja
jmp
movsb
xor
lea
les
push
lea
fisubl
add
inc
inc
sbbl
xchg
cmp
cmp
gs
call
dec
sbb
sahf
dec
mov
in
cmpsl
ds
pop
add
or
hlt
and
rcrb
add
mov
nop
mov
cwtl
and
jb
mov
in
pop
cwtl
push
imul
and
out
cmpb
test
out
pop
sbb
loop
dec
and
mov
jl
jle
add
rcrl
iret
add
jbe
pop
pop
cmpsb
js
shlb
inc
loopne
dec
scas
mov
loop
mov
aaa
in
aaa
decb
es
andb
cmc
cmp
dec
ret
lret
insb
in
aam
pop
adc
out
and
enter
or
jns
bound
pop
mov
icebp
rcll
fimull
push
sub
test
dec
jo
cmpsl
push
and
mov
ret
icebp
clc
sarl
or
rcl
inc
aam
pop
dec
loope
jl
hlt
mov
dec
dec
js
mov
pop
add
push
test
xor
fs
ja
call
sahf
loop
adc
in
movsl
add
push
jg
xor
lods
push
das
push
fistpll
in
test
call
sbb
add
or
daa
fidivrs
inc
cli
je
jmp
aas
lock
pop
cmp
inc
add
mov
popf
inc
mov
in
clc
fsubrp
xor
fbld
adc
ficoml
icebp
jp
jg
lock
insl
fwait
sub
cmp
xchg
sbb
call
adc
out
lods
xchg
bound
mov
mulb
stc
inc
push
mov
ds
mov
sub
jmp
cmpsb
scas
mov
cmc
mov
push
inc
mov
popf
cmp
test
mov
push
sbb
cmp
sub
xchg
out
and
scas
push
dec
ss
pusha
xor
pusha
ja
jmp
stos
mov
inc
shrb
push
pop
or
cmp
roll
cmp
sbbl
inc
sbb
test
xchg
add
push
mov
xor
scas
mov
or
push
jge
lock
sti
hlt
jmp
or
stc
test
xchg
cmp
dec
ret
xor
hlt
div
adc
sub
mov
test
call
idivl
push
popf
xchg
dec
out
dec
mov
dec
pop
mov
insb
cmp
sub
lods
arpl
popl
repz
dec
mov
cmp
or
adc
loop
outsl
rolb
mov
cmp
xor
mov
dec
aaa
cli
js
inc
and
cmp
jae
inc
loopne
pop
fisubs
mov
and
push
andl
push
cltd
cli
cmp
jb
loop
movsl
pop
mov
test
jle
jl
xchg
or
jo
jb
dec
rcl
mov
add
sahf
lods
fld
mov
fwait
sti
mov
pusha
loope
push
push
jbe
mov
nop
and
fsubl
js
pop
sbb
adc
aad
inc
push
pop
notb
test
xor
inc
imul
jne
xlat
xor
rolb
movsb
dec
arpl
cwtl
dec
inc
clc
dec
jge
or
std
outsb
test
inc
mov
jl
nop
and
sti
xchg
add
pop
cmpsb
js
push
adc
dec
sub
mov
cmpsb
sahf
pusha
sbb
push
cmp
iret
push
pop
sahf
fisubl
lock
adc
sub
mov
inc
inc
loopne
pop
pop
dec
out
xor
xor
and
lds
aas
mov
mov
mov
fadd
fcmove
sub
push
jle
sub
push
dec
es
pop
ja
cmc
loope
mov
popa
adc
jnp
mov
std
clc
pusha
or
jl
sub
push
arpl
je
cmpsl
and
mov
aaa
cmp
pop
mov
and
adc
orb
maxps
push
imul
inc
xchg
cmp
jp
cli
out
mov
loopne
jae
add
add
pop
xor
mov
mov
jle
mov
sti
ret
dec
imul
lods
sti
mov
mov
icebp
sub
and
and
push
cmp
js
test
cmp
jecxz
daa
adcl
dec
mov
out
cld
dec
lock
mov
ljmp
pop
lods
adc
comiss
xor
sbb
add
and
into
enter
jmp
mov
fcmove
xor
bound
sbb
lret
lea
pop
fbld
inc
adc
jmp
rcrb
add
stos
push
push
insl
insb
loopne
lock
push
mov
inc
adc
pusha
jge
in
imul
xchg
mov
sbb
sub
repnz
jl
enter
add
pop
pop
adc
aam
jp
loopne
adc
out
inc
std
mov
les
mov
enterw
icebp
es
pushf
sbb
cmp
iret
hlt
jo
adc
dec
mov
jmp
js
fwait
and
cmp
xchg
xchg
mov
xchg
std
mov
scas
sub
push
bound
or
roll
test
push
mov
fs
sub
pop
cs
dec
enter
cs
lock
push
xor
push
add
negl
pop
xor
pop
add
and
call
cmpsb
xlat
lret
js
fcmovb
push
cmp
dec
loope
add
push
rcl
rcll
cli
lock
inc
js
pop
js
repnz
xchg
loope
hlt
cmpsb
loop
xor
ret
inc
jmp
mov
push
cld
fidivrl
insb
add
daa
jmp
xchg
jge
cmpsb
hlt
push
add
pushf
enter
push
cmp
ss
jbe
je
xchg
push
push
adcl
mov
or
hlt
mov
clc
loopne
test
mov
add
into
mov
mov
clc
repz
adc
repnz
mov
lock
jnp
and
ret
jbe
mov
xchg
cmp
and
jge
add
inc
xor
jbe
sahf
stos
subb
or
sahf
xchg
and
ret
dec
sub
dec
or
push
fidivs
in
add
lds
jbe
add
fildll
pop
push
and
sub
adc
stc
dec
push
leave
push
mov
cltd
xor
out
xor
xchg
imul
and
xor
aas
pop
push
mov
test
ret
fsincos
cmp
ret
cmp
int3
add
cmp
rorb
and
sbbb
sarb
rclb
leave
push
xchg
sarb
hlt
shlb
rolb
aaa
sahf
dec
and
fcmovbe
push
notb
add
fsubs
rcr
sarb
sarb
aam
adcb
cli
add
and
inc
mov
lcall
pop
push
sub
and
mov
js
fidivrl
and
dec
imul
cld
pop
ljmp
lods
sahf
inc
and
pop
dec
cmp
mov
sahf
dec
repz
add
inc
outsb
lods
mov
arpl
ret
xchg
pop
fucomip
sahf
jmp
adc
cmp
mov
jmp
stos
rcl
sti
jns
fiadds
sahf
or
bound
dec
ffreep
add
mov
sub
out
insl
sub
add
sub
jbe
pop
repz
out
mov
push
inc
ret
mov
or
jecxz
inc
fisubl
inc
lahf
jae
out
mov
dec
out
push
sahf
and
jbe
test
and
sahf
movsl
adcb
das
push
inc
xor
in
aad
mov
movsl
lea
pop
jbe
mov
negl
in
int
mov
popf
jbe
sahf
or
out
bound
cli
mov
lret
ds
and
inc
mov
or
mov
lods
imul
test
jno
push
shlb
sbb
jl
mov
es
stos
outsl
pop
subb
xchg
imul
mov
loopne
xchg
leave
push
mov
mov
mov
xor
out
sahf
sbb
mov
mov
cmpsl
subl
push
lea
inc
clc
push
push
les
icebp
hlt
jecxz
scas
nop
nop
adc
fadd
sub
dec
shlb
xor
cmp
mov
hlt
clc
mov
or
sub
xor
cli
mov
jg
shlb
or
adc
mov
ret
repz
subl
jp
push
add
sub
orl
sar
call
loope
js
les
scas
sub
fimuls
bound
adc
test
xchg
js
xor
mov
loop
inc
rolb
stos
sbb
xor
adc
pop
mov
sti
cs
insl
scas
test
cmp
xor
testl
and
scas
pop
divb
mov
mov
or
push
clc
xchg
mov
clc
push
jge
lock
jle
sbb
cmp
rorb
sbb
or
sbb
bound
or
inc
jmp
cmp
push
out
add
pop
push
xchg
push
xchg
cmp
mov
stos
mov
aam
arpl
jge
or
xor
or
addr16
or
stc
inc
cltd
cvtpi2ps
mov
jae
mulb
insb
pusha
aaa
shll
es
pop
hlt
loopne
ret
add
scas
lahf
mov
das
cwtl
mov
ret
test
lods
dec
leave
jge
clc
enter
push
lret
jle
inc
movsb
out
loopne
or
mov
inc
or
cmpsl
enter
adc
jo
arpl
aaa
fcom
cmp
pop
inc
movb
ljmp
dec
andb
mov
xchg
mov
inc
cmpsl
jl
clc
mov
rsqrtps
mov
jne
bound
and
lock
or
call
test
fsub
bound
add
mov
add
cwtl
bound
dec
push
ja
xchg
movsb
pop
sub
mov
adc
sbb
rcr
cld
aas
cmp
inc
movhlps
dec
mov
or
cwtl
loop
xchg
lret
ljmp
es
add
sbb
lret
xor
aam
push
or
and
out
mov
movsl
jnp
cmp
clc
ficoml
mov
adc
jecxz
add
arpl
xchg
sbb
adcl
mov
fdivrp
icebp
scas
shl
repnz
dec
mov
pop
sbb
jae
and
inc
pop
pop
sub
jecxz
push
sub
icebp
popa
fwait
sub
dec
fwait
out
clc
bound
out
push
inc
ret
clc
push
pop
frndint
push
hlt
movl
mul
mov
cwtl
mov
out
jle
jmp
cmpsb
inc
enter
mov
pop
xchg
jbe
mov
pop
mov
lretw
rorb
xor
loope
sbb
adc
mov
add
sub
outsb
ret
xor
icebp
jecxz
mov
xor
lock
mov
cli
mov
cmp
test
clc
dec
mov
inc
jecxz
jo
push
enter
mov
mov
inc
push
push
orps
aaa
add
inc
lods
outsl
cmpsl
pop
jg
dec
sub
lods
or
or
pop
arpl
jp
popf
hlt
cmc
outsl
mov
mov
movsb
adc
mov
outsb
mov
das
xchg
dec
pop
pop
test
lret
icebp
and
push
cwtl
nop
leave
add
mov
subb
insl
loop
shl
xor
and
rol
shlb
push
out
push
push
xchg
mov
imul
adc
movsb
cmp
inc
pop
adc
outsl
push
pandn
cmpsb
or
jl
cmp
cmc
sbb
mov
jb
dec
push
aas
inc
sti
xor
push
repnz
jp
sbbl
pop
xor
adc
mov
sbb
outsl
cmpsb
je
push
insb
arpl
rcrb
movsb
and
shrl
popa
mov
in
jle
lock
aas
mov
sbb
push
inc
jmp
ret
jl
or
adc
or
sub
cmp
inc
loope
cmp
jp
es
icebp
dec
stos
sub
inc
jo
mov
jbe
es
or
sbb
cmc
adc
outsb
dec
push
test
arpl
fiaddl
push
mov
adc
out
xor
not
mov
xor
fisttps
pop
bound
adc
jae
cmp
lahf
lahf
adc
jl
mov
sbb
inc
pop
cmp
or
hlt
jge
add
addl
push
lret
mov
xchg
das
or
sub
inc
movsb
pop
mov
es
sbb
out
mov
orl
xorl
nop
or
rcrb
rolb
ret
loope
cmp
ljmp
clc
dec
arpl
dec
mov
pop
jbe
push
clc
lock
in
lods
xchg
dec
xchg
jl
mov
or
clc
sahf
mov
cs
sub
and
add
ficoms
inc
push
mov
cmc
dec
lcall
cld
clc
xor
ds
sarb
jb
in
scas
fs
pop
mov
inc
push
push
mov
pop
idivb
addl
sub
fistps
add
sub
sarb
sbb
cmc
ds
jl
iret
enter
jge
aam
or
aaa
dec
cmp
out
lahf
pop
mov
xor
stos
arpl
loopne
adc
loope
or
push
les
mov
into
sub
lods
stc
jbe
jp
popf
inc
add
imulb
out
js
cmpsl
out
ret
mov
or
pop
jmp
fisubs
cli
jne
popf
push
push
xor
jl
xor
inc
mov
stos
imul
jmp
pop
or
add
out
xchg
aas
sti
scas
dec
or
mov
lahf
les
sbb
ret
xchg
cmp
push
sti
push
dec
fs
or
dec
xchg
es
xor
or
enter
mov
icebp
clc
cmpb
adc
dec
mov
insb
les
adc
test
or
push
aam
cmp
loope
lods
xchg
push
btc
xchg
sbb
mov
pusha
insl
hlt
xlat
dec
adc
and
or
mov
or
lock
mov
loop
jp
fs
inc
imull
fldt
jmp
dec
jmp
ret
stos
orl
cmp
enter
mov
call
test
shrl
mov
fwait
ljmp
jb
insl
dec
dec
cmc
jnp
ljmp
pop
push
and
add
icebp
mov
aad
adc
inc
sbb
lods
test
mov
mov
clc
fildll
orl
add
mov
jle
test
dec
inc
pop
rcl
sub
shlb
push
fiadds
cmp
je
jge
es
mov
xchg
icebp
adc
mov
add
sbb
hlt
jg
push
clc
pop
add
es
loop
or
jno
jmp
inc
mov
push
jb
fs
xor
icebp
cld
lock
inc
mov
and
loope
scas
sti
enter
mov
jle
mov
mov
push
jmp
inc
into
ljmp
clc
xor
adc
shlb
jbe
push
mov
shr
pop
jg
stos
push
lret
xchg
or
xchg
or
adc
loop
xchg
dec
popa
ss
xchg
mov
sbb
sbb
les
mov
or
push
mov
jae
fdivrs
mov
js
mov
jp
loopne
leave
inc
dec
dec
in
dec
cli
cmc
add
mov
lock
aas
scas
add
mov
loop
or
jl
sbb
lods
pop
hlt
rcl
cmp
rorb
sbb
adc
nopl
insl
push
sbb
sbb
dec
out
cmp
js
popa
cmpsl
cmpsl
repz
add
aam
adc
daa
adc
cwtl
out
andb
add
lock
or
les
mov
into
jl
pusha
push
pop
in
xor
xchg
mov
cmp
call
ret
sbb
pop
jle
call
out
sbbb
mov
mov
pop
cwtl
mov
jp
add
enter
dec
and
rcl
repnz
dec
mov
pusha
dec
jge
fadd
adc
sbb
inc
mov
clc
call
pusha
dec
push
pop
and
cld
int3
sub
cld
inc
popa
cmp
ret
and
inc
lea
hlt
adc
je
sti
adc
adc
es
xchg
mov
aad
pop
dec
or
inc
mov
fimull
xchg
mov
das
ljmp
mov
daa
pop
xlat
cmp
call
jae
std
mov
insb
cld
adc
inc
mov
mov
roll
mov
pusha
sahf
out
dec
pop
jg
std
in
nop
mov
rolb
push
xor
lret
repz
ljmp
sub
add
fisubrs
clc
mov
int
dec
or
or
cmp
movsb
inc
sub
sbb
adc
shll
test
or
push
pusha
test
adc
push
aaa
and
pop
mov
negl
push
add
jbe
pusha
jmp
or
sub
pop
ret
mov
or
sbb
into
lcall
mov
daa
push
je
dec
xchg
jno
std
jbe
fistpll
inc
xor
idivb
or
mov
cmp
push
push
fcmovnb
enter
mov
fdivr
rolb
je
out
pusha
mov
pushf
adc
clc
mov
out
xchg
adc
mov
or
loopne
insl
clc
push
icebp
jo
push
xor
sub
repz
dec
pop
mov
dec
gs
out
mov
int3
cs
in
xor
sbbb
jno
and
sub
pop
mov
rclb
jl
jne
divb
mulps
cs
mov
mov
pop
pop
push
sahf
dec
pop
push
add
jb
sahf
scas
mov
cmp
pushf
rolb
std
cmc
xorb
daa
int
js
mov
clc
dec
mov
cmp
adc
test
jp
mov
jle
ds
or
cmp
xchg
dec
mov
cltd
push
and
adc
popa
shll
xadd
popf
out
imul
loope
xor
lret
int
and
out
stos
or
or
and
or
sbbl
cmpsl
fildl
push
jp
xor
dec
or
adc
addb
outsl
sub
call
mov
or
push
jo
movsb
rorb
cmp
int3
sub
mov
hlt
mov
insb
inc
cwtl
ret
out
jecxz
dec
pop
cwtl
xchg
scas
jle
pop
scas
aaa
test
or
lea
int3
sub
sub
mov
pop
adc
or
cmpsb
xor
add
fs
pusha
cmp
push
mov
xchg
rcrl
lods
lock
filds
shlb
add
les
adc
xlat
jbe
rolb
sub
in
push
sbb
idiv
and
cltd
lock
rclb
pop
mov
cmp
push
pop
push
lods
pusha
rolb
push
dec
adcl
mov
enter
bnd
loope
out
test
clc
xorb
pop
insb
xlat
sub
adc
daa
pop
jl
fs
in
pop
mov
cmpb
idivl
rep
push
lea
loopne
push
callw
pop
aaa
rcr
clc
cmc
or
pop
xchg
cmp
shlb
das
and
imul
loop
pop
push
mov
adc
pop
mov
adc
cmpsl
push
pop
jbe
pop
dec
bound
js
mulps
mov
dec
lods
fwait
add
imul
leave
xchg
fdiv
adc
lcall
xchg
mov
cmp
setle
fisubs
xorb
mov
dec
dec
pop
dec
jl
jb
bound
sbb
mov
pop
push
mov
aam
test
cmc
rclb
orl
test
cmp
bswap
cmp
mov
pop
test
nop
shr
dec
cmp
fists
push
dec
push
xchg
cmp
or
mov
out
cmp
add
out
cmpsl
dec
adcb
jecxz
in
js
sub
xchg
and
jp
repnz
fbstp
jmp
add
dec
loop
jne
lret
and
pop
inc
sub
scas
add
or
push
adc
jp
mov
dec
andb
add
push
mov
adc
dec
inc
cmpsl
lahf
scas
les
shll
add
pop
sahf
mov
xchg
icebp
sub
push
mov
jle
shl
aam
jb
pop
jno
push
mov
mov
jne
adc
or
enter
jmp
nop
insl
cmc
gs
mov
fbld
cmc
or
out
andl
push
pushf
dec
daa
add
js
pop
cli
jmp
insb
mov
mov
or
enter
hlt
js
jne
mov
or
lods
mov
fmuls
xchg
cld
cli
sbb
scas
icebp
xchg
roll
out
fsubr
testb
dec
mov
ss
cli
testb
jb
icebp
mov
pop
js
insb
jg
xchg
xchg
sarb
enter
pop
cmpl
mov
lea
daa
dec
xor
cwtl
push
add
sub
xor
mov
cmc
jecxz
ds
mov
je
and
mov
and
fdivs
jge
xor
fcmovnb
xchg
ljmp
push
sub
push
cmp
sahf
idivl
mov
mov
pop
sub
xchg
xor
movlps
push
loop
xor
jl
dec
push
pop
dec
or
lods
stos
test
push
icebp
inc
jmp
inc
jbe
push
sbb
mov
in
lock
ret
mov
filds
jne
and
test
test
lods
inc
cld
es
cmp
cld
cmpl
in
int3
cld
pop
mov
pushf
in
xchg
xchg
fiadds
mov
mov
push
cmpl
jbe
nop
xchg
cmc
push
cmpsb
jle
mov
fistps
cmp
cmp
add
out
pop
rcr
int
cs
js
sub
push
inc
sbb
loop
sbb
in
adc
or
adc
lods
decb
clc
popa
or
std
je
jl
push
js
aam
cli
ficomps
xor
push
ret
xchg
clc
xchg
sbb
dec
nop/reserved
addl
xor
call
inc
jecxz
sti
test
adc
or
mov
je
iret
not
aas
push
sbb
pop
lcall
inc
add
jge
data16
clc
mov
sbb
fsts
push
insb
push
xorl
outsl
push
push
push
ficompl
js
push
push
dec
dec
mov
ds
cld
cmpb
lahf
les
push
or
imul
bound
ss
sbb
addl
add
adc
adc
adcb
cs
sbb
into
mov
movsb
jmp
je
jo
imul
xchg
xor
xchg
mov
push
mov
popa
jo
lods
mov
shl
ret
divl
scas
inc
mov
sub
and
lods
cmp
clc
jmp
sub
fwait
inc
dec
mov
dec
or
cmp
jge
fimull
cwtl
jp
loop
pop
nop
sub
insb
rorb
dec
mov
sbb
sbb
fisubrl
fs
and
mov
mov
sub
push
sbb
pop
or
cs
scas
ss
or
call
mov
xor
mov
sarb
xchg
mov
add
mov
movsl
xchg
cmc
pop
lock
rcrb
sahf
lahf
mov
add
loop
pop
jl
les
push
pop
xor
pop
inc
adc
addb
sub
clc
lock
xor
inc
int3
inc
outsl
add
xlat
add
inc
pop
stos
push
dec
loopne
dec
mov
xor
enter
sbb
faddl
test
jg
ja
dec
jle
adc
jmp
mov
push
add
dec
or
sbb
pcmpeqb
add
arpl
rol
push
pop
adc
popa
sbb
prefetcht2
cmp
mov
jno
adc
inc
jnp
jo
jae,pn
xor
sub
sbb
shr
xchg
adc
push
jle
sbb
arpl
mov
push
loope
mov
addr16
lret
les
jnp
in
in
jle
shlb
sbb
js
mov
jns
test
pop
lock
pop
jne
cmp
jle
ret
in
out
ss
into
jge
hlt
ds
pop
add
movb
ret
xchg
and
push
sbb
mov
add
aam
pop
push
stos
sti
cmp
lea
add
fiadds
sbb
pop
xlat
mov
jecxz
in
das
fimull
imulb
loopne
push
cmp
mov
ret
push
mov
dec
icebp
mov
xor
mov
sbb
xorl
sar
xor
push
xchg
add
xor
hlt
es
adc
in
mov
mov
js
pop
loopne
dec
cmc
aad
dec
jp
loopne
sbb
inc
call
sbb
mov
pop
add
jl
jg
mov
lock
lods
mov
sub
test
lcall
push
stos
dec
xchg
divps
js
imul
out
divl
push
sbb
cld
mov
hlt
xchg
loopne
mov
add
into
rclb
jbe
cs
pop
push
iret
add
jbe
adc
mov
inc
hlt
fmull
xor
repnz
jg
outsl
sbb
jg
or
pop
cmp
add
pop
jp
fcmovbe
push
scas
rcll
mov
daa
les
loopne
mov
incb
sbb
js
hlt
sti
inc
out
cmp
es
cli
outsb
cmp
ficoms
leave
or
vshufpd
js
pop
ds
xchg
mov
cmpsb
xchg
hlt
mov
mov
mov
incb
bound
and
sbb
add
mov
pop
outsb
stc
push
test
icebp
jle
adcb
pop
sbb
js
hlt
std
loopne
inc
lret
das
es
add
sbb
les
inc
sub
sub
jo
mov
and
xchg
outsl
mov
inc
adc
xor
or
js
in
les
push
sahf
dec
sbb
cmpb
pusha
xor
dec
pop
insb
scas
xchg
bound
pop
jp
bound
hlt
addl
lods
in
add
aad
jnp
jbe
bound
mov
dec
pop
jg
and
or
xorl
pop
aas
mov
test
imul
jbe
mov
xor
pop
loop
int3
cmp
sahf
addr16
loope
xor
in
loopne
inc
in
sbb
jnp
or
pop
out
sub
call
jecxz
jmp
mov
insb
cmp
clc
imul
arpl
movsb
pop
push
je
es
jp
pop
inc
mov
push
push
cmp
push
jle
xchg
add
push
cld
je
or
pop
sub
and
mov
test
mov
sbb
adc
mov
inc
sahf
insb
aam
clc
arpl
loop
push
mov
mov
jmp
or
bound
lock
mov
inc
adc
lret
loop
push
jge
add
add
lea
iret
ss
fiaddl
test
leave
mov
add
clc
xchg
and
or
jmp
and
cli
lea
mov
es
jo
fwait
sub
sub
mov
loop
xchg
sub
and
mov
jg
test
aad
test
dec
fcomps
jne
loopne
mov
mov
cmc
repnz
inc
bound
repnz
push
xchg
cmp
rcrb
loop
ret
das
add
nop
rcrb
xchg
add
daa
pop
sbb
hlt
pop
shrb
xchg
pop
jecxz
or
lock
xor
sub
jo
jmp
jecxz
adc
mov
adc
or
mov
mov
out
inc
out
push
xor
andl
shr
hlt
mov
lock
adc
ret
jnp
jge
js
sub
shlb
aaa
cwtl
adc
mov
test
stos
out
inc
pop
cmp
adc
dec
jae
inc
jp
mov
cmp
sub
shl
roll
int
push
loop
or
orb
push
clc
xorb
pop
or
jo
aam
jecxz
rep
adc
jo
test
rcrb
fnstsw
mov
lock
adc
insl
cmp
popw
les
aas
lcall
mov
les
inc
dec
nop
sub
test
das
cmp
mov
dec
outsb
adc
pop
and
add
pop
addb
outsl
sbb
or
stos
xor
dec
enter
sub
std
jg
cli
inc
movsb
cwtl
mov
cli
xchg
inc
xchg
sub
mov
ucomiss
push
push
push
push
sarl
or
mov
outsb
mov
ficomps
in
sbb
shlb
pop
divps
mov
inc
push
pop
orl
mov
repz
mov
mov
sbb
mov
pusha
sub
cmp
xlat
rcl
jle
or
outsb
cmp
push
ret
mov
outsb
div
std
ds
lock
scas
mov
addr16
loope
xchg
in
pop
pop
or
fwait
js
subb
inc
jp
mov
nop
mov
clc
jns
mov
jle
or
xor
mov
push
jno
popa
pop
push
fstpl
cmc
sti
push
and
sbb
jno
in
cmp
cmp
int3
xchg
imulb
fnstsw
xlat
stos
cmp
jo
dec
adc
pushf
push
arpl
cmpsb
lock
cmp
shr
lds
jl
lock
into
inc
es
add
mov
pop
enter
inc
subb
mov
xor
mov
xchg
cmp
out
push
cld
repnz
inc
xor
xlat
cmp
xchg
mov
jnp
adc
outsb
sbb
js
hlt
xor
sub
cs
mov
jmp
xchg
mov
rorb
or
nop
inc
das
scas
mov
je
outsb
bound
inc
adc
or
mov
stos
jmp
mov
inc
lcall
in
mov
nop
insb
and
jl
pandn
and
push
cmp
sub
xchg
mov
inc
imul
popf
ss
mov
mov
sbb
mov
dec
dec
clc
mov
inc
jg
push
loopne
arpl
jecxz
jb
sahf
cmpsb
icebp
mov
mov
push
scas
sahf
mov
add
cmp
mov
jo
fstps
xchg
and
add
inc
fisttps
sbb
xchg
shll
inc
lret
cld
rcll
add
stos
mov
clc
jmp
rolb
cmp
dec
mov
jge
cs
xor
push
pop
ljmpw
clc
daa
add
mov
rolb
rcl
cli
into
xlat
fs
add
sti
test
call
in
leave
scas
aas
sbb
int3
mov
in
xchg
rcl
das
add
icebp
sbb
pushf
mov
imul
enter
das
pop
das
fsubp
loope
fcomi
rcll
xor
lcall
sbb
adc
int3
sbb
add
inc
scas
xor
js
and
mov
imul
es
mov
test
or
add
dec
xor
xchg
sbb
insb
out
bound
scas
lock
bound
lret
insb
out
cmp
out
fcom
sbb
push
in
xor
sbb
push
pop
sar
xchg
in
mov
clc
inc
mov
test
decl
enter
xor
or
mov
clc
cmc
clc
mov
scas
sti
jl
inc
jle
jl
mov
xchg
insb
pop
adc
clc
loop
pop
lock
mov
aam
pop
out
adc
out
xchg
sbb
sbb
push
sbb
jnp
push
pop
imul
mov
and
push
cmp
pop
pop
icebp
sahf
jp
mov
arpl
push
shll
div
ss
call
xchg
mov
cmp
rcrl
test
jle
and
inc
insb
cwtl
mov
mov
insb
cld
jbe
dec
loope
fdivrs
cmc
dec
push
rclb
pusha
jnp
xor
sub
hlt
jl
gs
adc
push
or
xchg
fsubp
ljmp
sti
je
daa
push
ficomps
ds
pop
loope
outsb
clc
push
es
dec
jecxz
js
pop
adc
mov
rorl
mov
cmpsb
fs
sub
inc
bound
push
lock
ret
shrb
lock
mov
and
data16
push
in
jp
les
adc
es
or
test
outsb
rolb
cwtl
es
ljmp
imul
adc
xlat
adc
cld
cmp
mov
mov
ljmp
push
insb
and
loopne
and
test
pusha
or
shll
jb,pt
push
ret
push
in
fcmovbe
out
fidivrs
xchg
dec
pop
mov
aam
addr16
jge
pmaxub
cmp
dec
dec
inc
lret
jb
filds
sbb
xchg
adc
into
add
cmp
scas
out
lds
cmpsb
rcl
push
cs
jl
add
or
ret
repnz
pop
cmovne
mov
and
je
sub
cmp
and
sbb
or
sub
scas
or
pop
popa
ds
xor
popa
insl
jle
push
or
pop
mov
aas
mov
cld
xchg
out
stos
push
loopne
adc
jle
jge
out
xchg
mov
sub
mov
push
or
testb
cmp
les
cmp
push
cmp
je
cmp
add
sti
es
sbbb
sbb
pop
sbb
mov
inc
push
push
and
cli
sub
cmp
cmp
rclb
jecxz
out
out
pop
xor
adc
mull
ljmp
push
xor
mov
push
add
lahf
aam
les
inc
fucomp
mov
stos
mov
or
xlat
test
sbb
divps
xchg
and
xchg
mov
loopne
push
lods
loopne
js
loop
mov
and
je
ret
cmp
mov
pop
test
cmp
arpl
cli
dec
rclb
pop
inc
mov
or
fisubl
cld
or
test
push
or
hlt
cmpsb
mov
xchg
xorl
or
movl
movsb
adc
iret
dec
aas
pop
repnz
mov
nop
fs
adc
pusha
rolb
clc
js
pop
les
push
mov
inc
scas
es
inc
pusha
dec
cmp
loopne
mov
pop
out
jbe
fisttpl
lock
test
pop
ljmp
bound
mov
popl
cmp
push
add
mov
sti
call
xorb
pop
rol
dec
xor
insb
psllw
fcmovu
testl
sbb
shll
pop
je
cmp
mov
inc
xchg
cs
data16
adcl
mov
push
push
mov
lds
insl
shl
sub
add
hlt
es
clc
imul
jne
xor
xchg
clc
imul
or
xor
icebp
mov
rcrb
movsl
inc
xor
xor
sbb
dec
clc
popa
cmp
xor
pop
sbb
inc
iret
sti
bound
pop
aam
rol
xchg
imul
cmp
dec
repnz
and
xchg
je
jp
pop
dec
or
imul
loopne,pt
dec
cwtl
and
mov
add
rcrb
movl
cmp
jbe
cmc
icebp
xor
sbb
add
mov
adc
ljmp
mov
add
or
es
xor
push
aas
cld
xor
sub
pop
pop
jmp
repnz
mov
pop
mov
or
jl
dec
lock
mov
adc
pop
jg
inc
sbb
mov
cmp
adcb
mov
cmp
push
bound
and
dec
push
orl
cmp
cmpsb
sub
loope
cmp
es
call
mov
add
sarl
sbb
or
push
dec
inc
dec
sbb
icebp
and
dec
add
clc
insb
ljmp
icebp
push
out
jnp
pop
fwait
or
mov
ljmp
les
adc
jl
rcrb
movsl
insb
rcl
lods
into
push
adc
ss
in
xchg
lret
ja
ds
xor
mov
loope
push
in
mov
movsb
ret
test
loopne
lods
and
clc
sbb
add
in
lret
jo
lret
xor
pop
sbb
push
mov
mov
mov
loopne
push
sub
mov
rorb
aas
test
mov
int3
addr16
mov
jb
dec
adc
or
les
mov
cli
je
into
lods
lods
nop
inc
stos
mov
icebp
shrb
cwtl
aad
mov
or
pop
aas
inc
cmpl
in
loop,pt
insb
aam
pop
fidivrs
adc
adcl
mov
out
cli
loopne
sti
jb
sahf
push
es
mov
lods
icebp
icebp
cwtl
jl
jecxz
add
mov
inc
jle
mov
push
movl
out
sbb
mov
lcall
sbb
rcll
clc
add
mov
rorl
rcr
stc
fidivrs
ljmp
in
pop
xor
jle
pop
pushf
add
xchg
aam
xchg
mov
cmpsb
fisubrl
mov
rcrl
pop
lea
call
rcr
mov
shll
dec
cmp
insb
leave
fstl
pop
rep
pusha
or
ret
pop
or
jl
les
jge
and
shlb
lods
and
nop
pop
jp
jl
out
mov
push
mov
sub
cld
inc
or
aas
push
dec
ficomps
xchg
sub
jmp
or
push
adc
scas
shr
test
into
cmp
mov
scas
sub
leave
loope
xchg
cld
xchg
cltd
push
or
jle
jecxz
pop
cmovge
mov
test
roll
lcall
xchg
pop
xchg
and
pop
fld
cmp
mov
mov
nop
jl
mov
bound
subb
mov
mov
dec
call
or
mov
pop
popf
dec
sahf
push
and
lds
clc
mov
xchg
fisttps
lcall
pop
mov
std
push
mov
adc
pop
mov
hlt
loopne
cli
lock
call
das
sbb
clc
in
les
lock
mov
aam
sub
sbb
push
cmp
jg
jnp
mov
rol
mov
inc
inc
es
loop
aad
enter
je
xchg
cmc
sti
push
mov
cmc
icebp
andb
add
mov
fisubs
mov
lds
adc
adc
mov
call
sub
jg
adc
jo
adc
jge
add
ss
jp
inc
loop
pop
lret
add
push
mov
mov
cmpsl
pop
push
push
xchg
adc
cmc
jl
dec
scas
push
lods
out
fistpl
mov
stc
pop
dec
aaa
sbb
das
adc
push
xchg
movswl
ret
and
lahf
and
mov
add
in
pop
and
add
psubsb
lret
clc
inc
inc
cmp
je
pop
mov
xchg
pop
mov
shrb
pushf
bound
out
test
or
fnstcw
aas
call
push
iret
sub
test
aas
fists
adc
and
adcb
sub
adcb
and
addr16
stc
push
inc
lcall
inc
xlat
fnsave
push
push
rclb
cwtl
push
cmc
adc
inc
push
ret
inc
sbb
neg
mov
adc
dec
sbb
jmp
push
lods
mov
sbb
sub
jo
inc
adc
rcrl
sub
cld
fwait
add
mull
push
cwtl
inc
shlb
sbb
lcall
rcrb
sti
pushl
jbe
and
pop
xchg
fsubs
push
push
leave
out
std
mov
ljmp
adc
lcall
movsb
shlb
adc
imul
ret
xchg
leave
adc
push
sar
fcoms
shlb
ja
adc
or
ja
jo
in
rcrl
out
mov
fs
mov
mov
gs
mov
jle
fldcw
fs
js
adc
ds
jo
ss
inc
out
inc
lds
xlat
sbb
push
push
aam
xlat
je
jo
iret
imul
inc
push
fidivrl
ss
data16
insl
fidivs
adc
lcall
xor
push
movsb
mov
stc
push
push
cmpsl
push
inc
test
stos
jbe
insb
fildll
lods
xchg
lods
pop
push
scas
jae
jnp
jnp
scas
rcrl
rclb
jbe
mov
loopne
ds
jnp
jns
add
std
xor
adc
movl
insl
and
lcall
add
cltd
add
lcall
nop
rep
mov
xchg
fisubl
lret
cmp
or
std
sti
xchg
ret
inc
lcall
or
ficoml
lcall
mov
dec
dec
lods
xor
lods
push
stos
ljmp
pop
in
push
sbb
cli
add
xchg
rclb
jae
push
dec
jecxz
mov
rcrb
inc
sbb
cmp
ret
pop
sbbb
icebp
out
fs
cld
dec
dec
dec
lcall
mov
clc
addl
pop
push
pop
push
xchg
mov
mov
push
lcall
lret
push
cmp
imul
push
loopne
adc
stc
in
ljmp
push
test
sbb
xor
sub
push
dec
shlb
out
mov
enter
jmp
inc
daa
int
mov
xchg
mov
shlb
lret
dec
add
das
dec
push
sub
aam
push
gs
jle
push
arpl
and
lahf
push
imul
inc
or
pop
xchg
loope
movsl
hlt
jg
cld
outsl
and
insl
mov
jecxz
in
ss
lcall
push
push
fmull
ljmp
inc
mov
popf
aas
lret
jbe
dec
push
shrl
pop
sub
jmp
and
xchg
mov
jnp
pop
ljmp
push
mov
sub
or
scas
les
mov
adc
xchg
das
loopne
xchg
sbb
fisttps
jmp
leave
mov
push
dec
jg
jne
dec
and
dec
xchg
rol
loope
dec
inc
in
cmp
cmc
sarl
xchg
mov
mov
jg
xchg
subb
addb
scas
push
inc
pop
dec
push
imul
add
or
repz
dec
ljmp
and
je
ja
xchg
out
int3
ret
pop
push
iret
cmp
aas
je
aam
pusha
jno
fcomip
decl
and
or
lock
sbb
push
sar
jmp
adc
cmc
inc
dec
sbbb
sbbl
push
jg
adc
in
and
outsb
fs
or
imul
sub
lcall
decl
jge
icebp
mov
roll
and
cmp
add
fcom
mov
sbb
scas
mov
xchg
sbb
imul
test
cmp
pop
ret
sbb
js
jg
out
into
xchg
adc
dec
mov
xchg
pop
clc
xchg
daa
incl
jo
pop
sarl
xor
push
mov
in
xchg
incb
pop
push
daa
sbb
push
test
or
pop
and
cltd
shl
mov
clc
jg
push
cld
inc
push
dec
push
jns
scas
cld
movl
jmp
mov
adc
pop
jle
test
je
pop
aas
ja
dec
jnp
loopne
leave
cs
ljmp
or
les
sbb
decl
xchg
xchg
test
mov
inc
push
loop
sbb
and
ja
testl
jmp
inc
adc
push
inc
jp
lcall
cltd
pop
and
pop
cltd
lods
fucomp
mov
addr16
ljmp
fs
mov
rep
addr16
std
test
lcall
xor
inc
lret
mov
repnz
jmp
aam
sub
or
scas
mov
sub
fwait
call
mov
pop
inc
jle
fiadds
aas
cld
mov
mov
pop
and
dec
or
repz
loop
xor
hlt
ficomps
mov
mov
insl
mov
idivb
sbb
std
aaa
aad
adc
call
cmp
jmp
xchg
jl
sbb
das
in
xor
or
inc
rcl
ret
imul
pushf
push
daa
lcall
pop
test
inc
jae
in
sbb
or
xchg
mov
scas
pop
in
int
iret
mov
adc
pop
push
xchg
int3
dec
js
xchg
sbb
subl
jp
lcall
pop
adc
and
or
fcomip
pop
mov
ret
push
mov
cmp
and
fcmove
xor
mov
sbb
lds
aad
mov
mov
cmp
int
fs
pop
xchg
sbb
mov
mov
jnp
adc
sub
dec
adc
mov
leave
je
nop
xchg
lahf
test
aaa
inc
adc
decl
dec
sbb
sbb
mov
mov
dec
mov
and
stos
xor
sub
aad
cmp
mov
or
fwait
push
int3
adc
xor
xchg
push
call
lcall
mov
mov
xlat
stc
push
int3
sub
or
adc
scas
and
ds
push
out
mov
inc
fidivl
mov
lcall
mov
ljmp
idivl
mov
ret
fwait
add
test
daa
or
add
pushl
cmp
movsb
push
and
test
xor
or
call
or
mov
cld
xchg
stos
mov
gs
sub
pop
mov
pop
sub
mov
xor
test
scas
les
or
mov
mov
xchg
xor
in
jg
call
enter
push
dec
push
imul
cs
and
adc
xor
xchg
mov
sub
shll
mov
push
or
cmpsl
jo
add
mov
outsl
mov
fcomip
incl
cmp
imul
jmp
scas
xor
adc
cmp
or
loop
call
adc
cmpsl
mov
cmp
push
ljmp
lret
push
jge
es
addr16
mov
lret
jge
xor
lods
inc
lods
sbb
cmp
stos
or
pusha
outsl
jmp
in
jbe
cltd
mov
mov
adc
dec
cmp
jmp
sbb
or
roll
movsl
call
push
dec
sti
jle
sbb
inc
js
adc
rorl
scas
pop
pop
sbb
jns
xchg
pop
inc
aaa
xor
pushl
stc
sarb
pop
jmp
loope
js
leave
dec
cld
movsb
pop
lahf
aad
movsb
icebp
sbb
xchg
jecxz
aad
mov
adc
arpl
stos
and
pop
lock
jle
insb
das
mov
icebp
das
jo
popf
push
mov
mov
repnz
insl
jmp
dec
stc
sub
push
testl
jecxz
fistpl
cmc
adc
mov
push
dec
pop
cmp
js
inc
jge
lock
sbb
sbb
decl
jg
dec
push
stos
mov
pusha
pop
push
and
fmul
mov
in
add
xor
outsb
jne
jae
cmp
pop
inc
sub
shl
test
push
cmp
nop
xchg
jle
sbb
ljmp
out
shl
test
sbb
jbe
pushaw
data16
js
imul
mov
jmp
inc
jbe
es
ret
cmp
jl
imul
xchg
jg
inc
or
ja
push
push
cmpsl
mov
mov
bound
pop
pop
decl
imul
xor
mov
jmp
pop
std
pop
add
testb
inc
outsl
dec
insl
jae
mov
out
scas
xchg
inc
pusha
pop
inc
pusha
inc
jb
dec
pop
pop
arpl
pop
push
jp
inc
inc
inc
push
pop
pop
gs
push
jge
rolb
lcall
inc
inc
jbe
inc
push
and
cmp
dec
and
sub
ja
push
popf
out
adc
cmp
nop
dec
dec
inc
inc
jno
aam
cmp
icebp
push
and
xor
iret
xchg
push
xchg
inc
es
jl
push
test
int3
pop
js
popa
cmpsl
stc
xor
and
sbb
int
in
aam
xlat
push
push
inc
fdivrs
adc
push
loopne
sarl
mov
inc
push
jl
dec
push
mov
fisubs
push
push
test
repz
int3
pop
push
inc
and
out
jl
cmp
and
insb
lods
push
cmp
push
push
push
jl
push
nop
negl
dec
mov
enter
ds
inc
add
dec
test
out
ds
or
aam
int3
pushf
xor
jnp
xchg
fs
inc
push
test
js
int
stc
pop
ja
sub
clc
insb
push
jl
neg
xor
lods
inc
jl
in
sbb
jnp
mov
rclb
ss
pop
xchg
sub
mov
hlt
out
or
cld
pop
outsb
push
xlat
mov
test
dec
push
fsubl
pop
pop
sahf
lock
jns
and
jle
js
xchg
sbb
mov
jo
and
loopne
mov
sub
ffreep
out
pop
xor
negb
inc
push
lahf
sub
shlb
push
mov
pop
nop
test
testb
call
jecxz
orl
and
enter
inc
or
or
mov
jno
rcll
cmp
fcoms
divb
test
mov
loopne
outsl
and
out
mov
xor
das
ljmp
movl
or
clc
shrb
jmp
test
cli
mov
mov
std
ss
cmp
sbb
ret
inc
sbb
or
cld
push
xor
push
fbstp
inc
pop
cld
cmp
cmc
adc
sbb
in
cmp
test
xchg
add
and
pop
cmc
nop
pop
aad
sub
clc
cmc
xor
nop
lea
clc
fs
decl
cmpl
jne
sub
in
movsb
mov
mov
es
inc
inc
mov
cmp
mov
flds
cmp
dec
mov
scas
sub
xor
sti
ret
repnz
in
dec
add
jo
cmp
dec
push
jae
pop
sbb
dec
inc
push
pushl
ja
push
cli
call
fldenv
ret
dec
jno
push
adc
or
jo
adc
or
push
or
inc
sbb
notb
push
and
push
lods
mov
pop
adc
jnp
jmp
mov
rclb
pop
cmp
mov
adc
mov
es
aas
roll
fldl
lret
rol
adc
daa
xchg
push
adc
inc
inc
push
sub
jo
aaa
xor
ss
add
les
add
jg
adc
cmp
add
pop
dec
aam
push
cmp
pushl
es
int3
enter
enter
fcomp
fxch
loopne
jecxz
into
or
pop
pop
jne
iret
adc
xchg
outsb
je
insl
and
and
dec
fiadds
popa
je
xor
xor
test
xlat
inc
out
mov
xor
add
jo
or
hlt
jp
ljmp
push
add
jne
loope
shlb
outsl
sub
lret
insb
outsb
mov
push
jns
sub
inc
aas
scas
sbb
nop
test
es
and
dec
push
push
cmp
repz
fs
je
repz
repz
cmp
lods
mov
int3
aam
iret
repz
in
hlt
cld
jns
cmpsl
stc
add
or
sbb
out
sahf
out
xor
inc
dec
and
sahf
push
pop
fs
add
add
add
mov
push
enter
fmuls
xor
in
in
jne
in
mov
cmp
mov
pop
test
daa
sub
pop
nop
jp
rcrl
and
and
ret
paddusw
clts
lahf
or
cmp
inc
fstl
or
or
stc
sbb
in
hlt
push
add
out
sahf
cmpsl
sbb
cmp
sahf
out
sahf
insb
jl
mov
out
shl
in
test
adc
addr16
and
add
clc
lcall
pushf
push
lods
or
push
or
test
push
push
inc
xor
mov
subl
ret
push
mov
pop
fdivs
popa
push
mov
inc
rep
ja
sbb
push
adc
push
push
adc
mov
pop
add
xor
or
push
sahf
jnp
mov
jl
adc
mov
aas
add
aas
push
aam
loop
jmp
fdiv
cmpsb
lret
imul
and
mov
bound
pop
or
sahf
out
je
mov
movsb
out
sahf
out
mov
fistpll
in
clc
add
adc
push
sbb
jae
push
and
sbb
push
adc
repz
repz
nop
sbb
or
cmpsl
stc
cmp
adc
pop
sub
sahf
out
cmp
dec
sbb
out
js
fistps
mov
and
repz
push
enter
iret
repz
lock
aaa
inc
das
mov
lahf
test
add
mov
int3
xor
sahf
out
cmp
repz
xchg
inc
mov
cmp
js
nop
mov
cmp
repz
ror
cmpsb
clc
cmp
fdivp
out
or
mov
jecxz
mov
pop
dec
popf
push
addb
dec
cmp
or
or
push
int
loopne
or
pop
mov
outsb
fisttpll
cmp
cmp
adcb
mov
out
out
or
ja
mov
jbe
jns
stos
pushw
adc
add
dec
jl
cmpsl
add
call
cmp
rcll
xor
push
jns
neg
fs
data16
xor
dec
out
sahf
out
pop
fs
je
lds
mov
mov
adc
mov
scas
pop
insb
pusha
pop
lods
add
jmp
pushl
jle
jmp
das
sti
seta
xchg
xchg
xchg
out
xchg
lar
xchg
xchg
xchg
xchg
unpcklps
adc
xor
jb
prefetchw
or
jb
jb
adc
pop
add
shrb
inc
shll
daa
daa
mov
movhps
js
push
lods
stos
mov
int3
mov
aam
in
stc
stos
add
hlt
pop
inc
clc
push
push
pop
mov
mov
pop
pop
xor
dec
dec
ret
mov
outsb
pushf
push
sarl
aam
hlt
add
iret
repz
sub
push
push
cmp
xchg
lods
mov
repz
clc
or
and
popf
out
dec
cmpsl
pop
and
add
or
nop
pop
ror
repz
lcall
hlt
cld
sahf
out
ds
cli
adc
sub
out
clc
cmp
push
mul
jns
out
cmc
js
mov
pushf
repnz
les
out
lock
in
out
repz
repz
jae
cmp
jmp
ljmp
add
mov
pop
pushl
mov
adc
andb
testl
andb
insl
fcomp
inc
or
or
add
add
mov
fidivrs
les
add
lcall
iret
add
inc
imul
push
and
mov
inc
addr16
mov
or
adc
pop
in
clc
mov
add
pop
cmpsl
push
mov
outsb
aas
adc
shrb
pop
adc
in
adc
mov
clts
xchg
pop
add
mov
fidivs
stc
mov
repz
mov
cmp
repz
incb
add
jns
iret
repz
add
stos
adc
add
movsb
mov
aaa
add
pop
xor
inc
push
scas
add
repnz
mov
inc
push
push
mov
jne
xchg
or
push
les
es
fidivs
cs
jmp
imul
mov
paddusb
pop
push
adc
add
lods
out
jbe
dec
jnp
adc
cs
mov
cld
push
hlt
jbe
push
inc
add
xchg
jnp
xchg
fdivr
inc
push
xchg
push
cmp
mov
and
sbb
add
lods
aaa
jle
and
movsb
push
mov
dec
out
pop
cmp
mov
and
add
fidivrs
mov
js
inc
cmp
cs
push
mov
push
push
and
sbb
addr16
xchg
or
fisubrs
in
push
push
je
ror
mov
xchg
add
mov
loopne
int3
adc
addl
mov
pushf
push
or
repz
cmp
sahf
inc
outsb
push
cmp
ret
fnsave
mov
iret
jnp
je
je
mov
clts
sbb
outsb
sub
in
push
js
out
cs
push
push
les
aam
mov
push
insb
out
mov
push
push
sbb
sbb
mov
jnp
andb
inc
mov
jnp
jl
pop
push
jnp
push
cmp
mov
out
inc
jbe
ss
sub
movsb
push
xor
fisubrs
lahf
push
in
fiadds
out
outsb
adc
in
push
out
push
cmp
pop
mov
and
sub
push
xor
mov
bsr
push
pop
mov
ret
repz
jnp
test
mov
push
fimuls
ret
sbb
push
xchg
fisttps
iret
rcrl
xor
ja
add
jge
push
ja
push
adc
mov
inc
ja
dec
sahf
or
lods
push
sbb
jnp
dec
xlat
push
pushf
scas
into
hlt
loop
addr16
cmpsb
sub
push
mov
sbb
divps
fcoml
filds
test
dec
push
faddl
pop
into
lods
mov
pop
push
xlat
pop
mov
es
mov
push
pop
iret
loope
in
push
shlb
jp
xchg
out
les
ja
hlt
cmp
dec
mov
into
adc
dec
inc
mov
push
das
mov
roll
push
das
sbb
pushf
clts
mov
fdivrl
movsb
push
or
fs
hlt
loopne
cmp
cmp
test
addl
dec
lahf
and
push
xor
push
jo
add
adc
subb
clc
ds
pushf
nop
push
add
loop
and
fldl
adc
enter
rorb
add
outsl
add
insb
gs
sub
mov
insb
jae
enter
mov
inc
addb
popa
int
mov
ret
stos
arpl
sub
fs
mov
add
testl
sub
and
adc
jns
ret
ds
inc
insl
jo
sub
adc
adc
repz
clc
adc
loopne
add
xchg
popa
leave
push
imul
dec
mov
sbb
aad
jne
jg
add
stos
or
popf
mov
gs
xchg
and
push
testl
mov
sbb
dec
sbb
push
mul
sbb
sub
inc
imul
xchg
sbb
sbb
jb
jb
fnstcw
xchg
movsb
andb
push
outsb
fstps
fisttpll
aam
xor
insb
loopne
sbb
popa
sub
sbb
add
imul
dec
inc
jae
cmp
inc
gs
mov
or
mov
and
sbb
sub
outsl
pop
push
imul
add
repz
pop
mov
add
aas
mov
push
nop
adc
inc
and
loopne
sbbl
dec
repnz
push
stc
sbb
aas
pusha
enter
dec
daa
rcrl
fs
xor
imul
adc
cmp
inc
mov
insb
repz
sub
and
inc
gs
pop
cmp
mov
rcr
fs
scas
cmpsb
sub
cltd
sbb
push
push
scas
or
dec
fbld
add
repz
inc
lea
jmp
in
mov
jg
sbb
cmp
jae
addl
js
and
adc
and
stos
je
ret
sbb
inc
sbb
cwtl
shl
pop
cmp
out
push
loopne
mov
dec
push
mov
cmpsb
add
cwtl
adc
pop
adc
pop
inc
test
mov
mov
xorb
or
adc
pop
pop
enter
imul
inc
jns
hlt
adc
sub
jae
shrl
cs
loop
add
lods
xor
xor
push
cli
outsb
lret
adc
idivl
loope
cmpsl
not
inc
adcl
shll
jp
or
inc
or
xor
out
add
xchg
stc
mov
xor
push
sub
scas
sbb
shll
and
cmp
jnp
jbe
sbb
mov
hlt
mov
fmuls
adc
add
xor
nop
cmpl
and
dec
push
xor
mov
das
sub
dec
outsl
mov
fmuls
fisubrl
cmovge
xchg
stos
sub
add
xchg
test
add
and
push
mov
ja
add
sub
imul
push
or
xor
pop
out
pop
rcrl
fs
in
or
jmp
add
add
jecxz
iret
movl
mov
lods
inc
in
shlb
pop
jl
cmp
or
or
pusha
pop
stc
nop
pop
arpl
insb
pop
clc
inc
flds
inc
xchg
xorl
pop
adc
and
mov
aad
jge
ds
dec
mov
adc
push
cmpsb
fsts
inc
dec
inc
gs
popa
bound
nop
adc
mov
int
test
arpl
shl
sbb
ss
je
sbb
cmp
inc
inc
xorl
jo
inc
add
sbb
xor
jnp
lds
sub
sarb
and
mov
mov
jo
xchg
xchg
or
mov
pop
test
faddl
xor
sub
daa
lcall
pusha
push
sbb
lea
pop
in
insl
dec
adc
dec
inc
mov
adc
call
push
cmpsb
adc
mov
pop
or
pop
leave
inc
outsl
pop
sbb
ret
mov
cmp
mov
or
mov
sbb
es
dec
roll
push
hlt
mov
fstpt
pop
and
mov
outsb
sub
lock
adc
sub
pop
js
ret
and
je
pop
mov
push
or
add
loopne
lock
mov
js
xor
xor
popa
gs
mov
push
lret
sahf
and
bound
mov
daa
dec
dec
or
mov
mov
push
mov
mov
adc
pop
test
add
and
clc
xor
sbb
popf
mov
dec
sub
test
jle
mov
push
inc
inc
lds
jb
aas
out
lock
int3
dec
mov
enter
aas
sub
das
add
cltd
sub
in
adc
xchg
push
jo
jno
mov
mov
xchg
outsl
adc
sbb
aas
jae
adc
lea
add
insb
outsb
lea
jo
and
cltd
push
dec
out
dec
pop
sub
add
jb
or
adc
cmp
add
rcrb
jecxz
inc
enter
mov
and
inc
xor
bound
lret
pop
cmp
mov
in
in
arpl
ficompl
add
xchg
sbb
sbb
and
add
mov
insl
shrl
xsavec
or
dec
popf
sub
sub
or
push
nop
int
or
adc
push
fidivs
xchg
push
mov
aaa
or
scas
int
cmp
outsl
outsb
cmp
inc
mov
test
aad
and
cmpsl
rorl
lret
add
daa
jno
orl
sub
push
sub
and
dec
jg
je
jne
movsl
adc
push
je
sbb
data16
dec
jb
or
dec
mov
mov
int
jae
les
xor
jo
cmpsb
rcrl
sub
das
insb
je
fcoms
adc
ja
mov
jne
jae
add
fs
mov
aas
inc
mov
add
loope
arpl
sub
push
push
test
pushf
or
fdivs
cmpb
sub
jae
mov
push
repz
and
add
das
sbb
fwait
ss
mov
pop
imul
inc
pop
jno
mov
stos
cmpsl
inc
pop
and
loopne
sub
out
sbb
loope
lock
jbe
or
inc
ja
sbb
push
lods
sub
sbb
dec
inc
mov
lods
loopne
xor
out
mov
sbb
push
inc
inc
cmp
add
sub
jmp
mov
dec
or
insl
mov
shlb
or
outsl
xor
andb
ja
or
in
jns
movsl
jecxz
lret
adc
push
push
sarl
and
inc
pusha
mov
mov
iret
mov
inc
jno
loopne
mov
adc
adc
jge
xchg
popa
test
xchg
adc
fildll
shll
aaa
sub
gs
mov
adc
rcrl
dec
dec
pop
pop
and
fisubrl
or
inc
nop
sbb
fistpl
lods
sbb
sub
ss
mov
shlb
popa
pop
fildl
lea
and
or
stc
and
lea
mov
dec
movsl
loope
xor
push
mov
dec
push
sbb
jmp
ss
int
dec
push
mov
inc
fs
mov
daa
xor
movsb
xchg
lods
add
test
jp
adc
add
and
xchg
push
or
rorl
xor
in
dec
add
lss
and
add
sbb
jbe
fcompp
push
adc
sbb
hlt
sbb
sti
mov
lods
xlat
sldt
push
jbe
mov
adc
rcrb
and
jo
cmp
mov
cmpsl
mov
adc
jno
sbb
inc
dec
inc
inc
adc
nop
pop
addl
sbbb
sub
inc
inc
push
push
dec
adc
adc
jp
sti
xorl
push
push
pop
or
sbb
adc
xor
shll
shrb
popa
add
sarb
lock
dec
lahf
je,pn
jae
lock
scas
lahf
jb
cmpsb
das
mov
xchg
dec
sahf
push
cs
lock
and
adc
in
mov
dec
jae
dec
fisttpl
or
push
aaa
dec
jle
and
js
xchg
add
add
incl
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
mov
add
nop
dec
inc
rorl
fadd
or
dec
rorl
clc
rorb
pop
rorl
add
or
rorl
or
or
je
or
adc
or
jle
or
sbb
or
mov
or
and
or
xchg
rorl
sub
or
mov
rorl
lods
rorl
cmp
or
mov
rorl
rorl
out
or
hlt
rorl
add
or
add
add
adc
or
add
add
push
ret
add
add
cs
add
add
inc
ret
add
add
dec
ret
add
add
pop
ret
add
add
retw
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
imul
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
dec
insl
popa
addr16
imul
add
add
je
popa
jbe
inc
imul
add
push
popa
jbe
inc
inc
add
push
gs
imul
popa
addr16
jb
jo
add
jb
popa
outsb
je
outsl
jo
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
je
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
