push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
mov
push
clc
arpl
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
aas
enter
dec
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
cmp
scas
pop
push
test
pusha
push
subb
adcl
out
push
mov
or
outsb
ja
push
xor
fmulp
jb
pop
mov
xor
pop
hlt
cmpsl
push
push
jge
cld
push
add
adc
ret
sarb
ljmp
mov
pop
ret
outsl
inc
popf
mov
pop
mov
leave
pop
mov
sub
loopne
dec
mov
sbb
shrb
repz
push
xor
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
lret
insb
mov
out
in
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
cmp
push
movsl
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
int3
jmp
or
push
mov
adc
jno
ds
mov
sbb
shrb
xchg
fcompl
sub
lock
ds
xchg
push
out
jbe
xchg
ficomps
add
jns
mov
sbb
shrb
inc
xor
sbb
pop
adc
or
sub
cmpsl
loope
push
or
sarb
and
popa
test
cmpsl
sub
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
add
cwtl
cmpsb
xor
or
icebp
xor
cltd
aas
shll
negl
cmp
stos
js
pop
bnd
or
jmp
and
nop
fnstsw
jle
sbb
out
data16
roll
add
data16
divl
cs
aaa
ja
push
mov
filds
dec
xchg
push
pop
adc
mov
test
or
dec
mov
dec
sub
jmp
dec
mov
cmp
fstps
into
arpl
cmpsb
dec
sbb
in
inc
mov
shrb
std
mov
pop
mov
ret
pop
aam
cmp
in
push
adc
inc
push
sub
ret
lods
pop
leave
inc
sbb
std
xor
pop
lcall
cmpsl
push
iret
into
rclb
stos
pushf
inc
inc
push
in
and
mov
add
inc
fwait
je
mov
push
stc
dec
sbb
stos
daa
xchg
out
popa
into
push
mov
in
mov
test
fildll
mov
cltd
into
rcll
mov
add
inc
das
adc
sarb
movsl
or
out
cwtl
push
push
inc
outsb
cmpsb
and
test
mov
and
sbb
xchg
push
jl
aad
xchg
fwait
sub
cltd
sub
sub
mov
shrb
in
jb
sub
xchg
aas
pop
jmp
ja
sbb
jge
lret
mov
lret
sub
mull
dec
ljmp
pop
adc
push
call
mov
or
xor
scas
mov
loop
mov
jecxz
mov
sub
cld
fcmovnbe
cmp
mov
adc
xor
xchg
mov
jb
mov
cli
mov
sub
in
bound
dec
mov
rcrb
inc
repnz
sub
mov
cmp
sbb
xor
inc
xor
xchg
or
jb
cli
js
scas
jne
fwait
mov
fcomi
arpl
mov
leave
fnstenv
inc
ficompl
add
xor
or
xor
add
mov
fcomps
mov
dec
pop
adc
xchg
dec
scas
pop
sbb
push
cmp
movswl
sub
aas
inc
sbb
ret
insl
fsubl
or
sub
xchg
mov
or
or
and
inc
sbb
ds
adc
ret
jb
jl
mov
xor
negb
movsb
xlat
push
mov
inc
adc
dec
adc
and
mov
add
adc
adc
or
fstl
lds
in
mov
shlb
dec
push
cmp
imul
imul
dec
jmp
cmpsb
movd
lcallw
rcll
mov
adc
sub
push
lahf
ss
popa
out
mov
pop
add
mov
int
cli
xor
out
cmc
movsl
std
sbb
std
sub
and
outsb
call
mov
and
add
push
or
jg
dec
pushf
dec
fcompl
or
cmp
test
xor
xchg
jmp
cld
xor
inc
daa
pop
cli
loopne
push
dec
add
stc
xchg
sbb
ret
mov
daa
js
cmpsb
cmpsb
lods
and
jl
into
out
push
out
or
xchg
sub
cltd
cli
hlt
cmc
jnp
adcb
and
ja
sbb
pop
gs
push
pop
adc
leave
and
dec
outsb
ss
gs
cli
and
inc
aaa
adc
clc
sbb
inc
mov
push
mov
fstpt
in
les
js
arpl
movsl
sahf
jno
sub
lret
outsb
sbb
das
sti
fcmovne
nop
push
jle
imul
popa
cmp
enter
imul
inc
jmp
int
inc
das
mov
sbb
leave
les
mov
mov
pushf
cmpsb
lea
movsl
sub
fs
roll
and
xchg
aas
in
mov
outsl
add
outsl
sbb
in
mov
cmpsb
jg
ret
lds
add
sub
andb
clc
push
outsb
repnz
push
xlat
scas
adc
js
jle
pop
mov
std
xchg
pop
add
test
stos
out
push
push
and
xchg
dec
subl
sub
add
push
sub
loop
lahf
push
mov
push
pop
sbb
loop
cmpsl
mov
add
push
inc
lds
mov
cltd
push
repnz
xor
or
fldl
adc
pushf
or
jecxz
jmp
xchg
arpl
inc
jnp
lret
and
push
jle
cmc
xor
xchg
fcoms
mov
pop
mov
push
insl
and
imul
out
test
enter
xor
test
out
lea
cltd
ss
std
faddl
filds
mov
iret
jne
or
push
adcb
xchg
mov
pop
push
roll
popf
cmp
dec
movsl
jle
xchg
dec
stc
repnz
mov
call
ljmp
stos
or
mov
push
mov
sbb
orb
loopne
inc
xor
pop
xor
mov
push
push
sbb
inc
push
inc
imul
or
outsb
movsb
push
jo
sub
lcall
aaa
xor
lods
cmpsb
inc
xor
mov
orl
ret
xorl
addr16
mov
test
gs
test
jl
xor
shrl
enter
dec
loopne
adc
adc
fadds
dec
pop
dec
inc
dec
cld
xchg
or
hlt
and
lret
addr16
dec
xor
int
mov
rorb
jmp
aaa
mov
inc
and
pop
pop
jno
sahf
jne
fcmovnb
dec
push
bound
pushf
dec
mov
insl
pop
and
icebp
popl
js
xor
out
push
arpl
nop
fstpl
inc
outsb
in
bound
mov
push
xchg
cmpsb
daa
lcall
movsl
mov
sbb
shrb
scas
sbb
fisttpl
pushf
lds
mov
sbb
xchg
cmp
sub
movsb
jns
imul
les
and
or
mov
dec
pop
xor
fwait
out
sub
loopne
or
push
mov
mov
rclb
dec
mov
cmpsl
dec
xchg
popf
adc
cltd
scas
push
jmp
ds
mov
cmpsl
dec
xchg
popf
push
mov
imul
cltd
cwtl
out
mov
cwtl
dec
jns
jb
shrb
icebp
mov
xorl
dec
mov
stos
jnp
dec
cmpsl
jae
sub
bound
call
add
and
xor
out
dec
push
xor
lret
sub
or
pusha
mov
enter
or
and
mov
insb
pop
subl
mov
xor
fisubl
push
push
xlat
popa
xchg
lods
lock
xor
sbb
pop
xchg
mov
movsb
or
jg
xor
test
sbb
lret
jge
mov
cmp
shrl
or
jg
xor
outsb
rcrl
push
in
sbb
mov
or
jg
xor
sub
popf
ret
mov
or
jg
xor
fbld
dec
push
cmpsb
pop
xchg
jp
pop
das
sahf
ffreep
or
adc
lcall
mov
xchg
sbb
adc
sub
sbb
subb
data16
push
rorl
push
fs
xchg
add
push
sbb
popf
cmp
shll
jle
insb
cli
mov
clc
push
inc
and
sbb
add
mov
lcall
dec
mov
jmp
mov
or
xchg
iret
lret
jge
mov
sbb
jle
clc
jae
add
push
adc
or
iret
lret
jge
mov
or
fmuls
mov
adc
loopw
xchg
inc
lahf
repnz
xor
pop
faddl
data16
push
rorl
clc
aas
jle
push
dec
aad
out
pop
out
sti
fwait
mov
imul
push
inc
stc
adc
xor
jne
popa
cmpsb
loope
push
inc
mov
mov
test
fs
lcall
xor
inc
jl
imul
cli
imul
popf
mov
dec
push
les
in
ror
adc
or
arpl
aaa
jne
shll
jno
sbb
fdivs
lret
je
pop
stos
popa
cmpsb
loope
push
inc
mov
sbb
shrb
cwtl
inc
ss
mov
test
mov
aam
popw
cmp
xchg
imul
int3
test
dec
mov
jae
push
jbe
aas
sahf
cwtl
xchg
jg
test
mov
je
mul
das
mull
aad
cmp
xchg
lret
cmp
iret
movsb
mov
scas
push
mov
jecxz
adc
mov
subl
hlt
pop
cmp
pop
fcmovnb
mov
sbb
shrb
nop
sub
aad
adc
aas
pop
push
clc
cli
aaa
jne
xchg
lret
pop
jecxz
pop
call
pop
pop
xchg
mov
jp
mov
loope
shl
jns
sahf
mov
scas
in
push
add
sub
sub
or
add
adc
ret
scas
imul
je
cmpsl
sbb
inc
negb
notb
sub
and
pop
xchg
sbb
jae
inc
inc
dec
clc
add
hlt
clc
jne
add
push
into
sub
sbb
xor
or
cmpsl
cmp
mov
dec
jle
fistl
dec
sarb
pop
out
into
and
test
adc
negl
push
nop
mov
out
outsb
push
jmp
outsb
push
xor
inc
stos
cmp
inc
xchg
outsl
mov
int
push
sub
adc
jmp
lods
andb
fwait
mov
push
dec
cld
mov
std
ja
adc
rorb
dec
adc
test
test
stos
lahf
cmp
sbb
scas
sahf
movntps
scas
mov
lods
dec
push
sub
jbe
fadd
lds
rcrl
xorl
stc
mov
or
xor
shl
add
in
das
jp
test
add
mov
rcrb
push
mov
aam
test
cltd
cmp
in
xor
xor
add
ss
mov
loopne
popf
sbb
mov
out
cmp
outsl
pop
loope
jmp
jns
into
pop
ljmp
mov
ds
icebp
pop
xor
mov
mov
into
inc
or
ror
or
loope
adcb
mov
test
cmp
adc
stos
icebp
mov
std
popl
sub
daa
xchg
dec
arpl
jmp
cmp
pop
mov
outsb
mov
cwtl
jbe
push
movsl
sbb
ja
int
lahf
cs
pop
shrl
mov
mov
cld
test
push
cli
sub
push
leave
pop
lods
rol
cmc
and
mov
mov
nop
stos
outsb
arpl
cmpsl
dec
add
sbbl
mov
pop
or
push
mov
rol
and
lahf
int3
dec
pavgb
leave
call
pusha
or
push
popa
arpl
mov
arpl
rcl
mov
mov
mov
mov
lods
pop
lea
or
push
lea
xchg
pop
xorl
mov
inc
push
inc
sub
outsb
xchg
or
mov
mov
lcall
and
and
popa
xor
xchg
in
mov
mov
pop
sbb
out
fidivs
lcall
loope
lods
push
add
lods
inc
mov
adc
pop
xchg
in
or
inc
inc
cmpsb
test
test
aaa
pop
xchg
cmpsl
stos
shrl
loope
jbe
int
imul
lock
mov
sbb
pop
jo
jecxz
outsb
and
mov
mov
push
and
jbe
and
dec
pop
add
add
add
fdivr
orl
add
stos
lds
sub
popf
sub
sarb
cmovle
stos
aas
call
and
inc
jmp
nop
adc
cmp
stos
push
push
adc
insl
pop
or
xchg
icebp
repz
stc
push
cmp
shr
xchg
pop
sahf
push
das
pop
ja
mov
xor
stos
out
sbb
mov
enter
or
repz
lods
and
fnstcw
hlt
mov
xchg
xchg
sub
aad
adc
aas
pop
push
clc
cli
aaa
jne
xchg
int3
ja
cmpsl
pop
adc
imul
out
jp
mov
mov
gs
jns
sahf
mov
scas
in
push
jle
ja
call
mov
or
mov
faddp
scas
imul
shlb
sbb
inc
negb
xchg
fcmove
and
mov
push
and
pop
mov
fists
hlt
clc
jne
add
push
into
sub
sbb
xor
or
xchg
adc
sub
mov
dec
jle
popf
sbb
lahf
xor
test
adc
dec
push
xor
imul
jo
mov
xor
inc
decl
push
xor
inc
stos
repnz
jae
pop
push
sub
stos
dec
adc
push
xchg
jae
fwait
mov
cwtl
inc
nop
jno
xor
jne
push
cld
rorb
dec
adc
test
test
stos
lahf
cmp
and
sahf
movntps
scas
mov
jg
lahf
imul
fadd
lds
rcrl
jnp
pop
xlat
int
inc
shlb
jbe
shl
add
or
nop
notl
mov
inc
xor
sbb
pop
sub
push
mov
aam
hlt
sbb
jns
in
xor
xor
test
mov
lcall
cmp
xor
cmp
sub
xchg
repnz
outsl
jns
into
pop
ljmp
cmp
icebp
pop
xor
dec
lds
mov
addr16
inc
or
jne
xchg
mov
out
push
out
test
jne
loope
cltd
adc
adc
divl
imul
repnz
popl
addl
xchg
dec
arpl
jmp
cmp
pop
mov
outsb
mov
adc
lahf
vpshad
ja
int
mov
xchg
insb
hlt
data16
fidivs
push
cmp
pusha
adc
cli
sub
push
leave
pop
in
leave
jge
pop
push
iret
cmp
or
sahf
shl
lret
xchg
popa
xchg
jne
push
mulb
cld
xor
repnz
sbb
or
push
mov
rol
and
imul
fld1
push
std
jbe
pusha
or
push
popa
arpl
mov
arpl
rcl
pushf
cli
mov
mov
lods
enter
lock
push
lret
or
push
lea
xchg
pop
sbb
cmp
mov
std
mov
jmp
sub
mov
mov
pop
dec
jns
or
and
and
popa
xor
add
adc
sbb
out
fidivs
push
cmp
loope
lods
push
add
lods
inc
mov
adc
pop
xchg
in
or
sbb
outsl
test
fcmovbe
aaa
pop
sub
dec
mov
es
int
imul
mov
idiv
sbb
pop
dec
lods
sub
movsl
add
mov
jg
add
and
jle
and
dec
pop
add
sub
jae
sub
lea
lods
add
push
mov
cmp
les
aad
xor
dec
in
aas
call
xchg
movsb
int
mov
in
adc
cmp
sbb
push
adc
insl
pop
or
sbb
aas
stos
shr
cmc
test
sbb
addl
pop
ja
mov
xor
sarl
and
mov
dec
push
inc
sub
in
test
and
idiv
insb
insl
mov
mov
mov
or
or
push
pusha
roll
cmc
scas
scas
stos
fisubl
mov
sbb
js
pop
ficompl
fstl
push
hlt
xchg
popf
outsb
mov
imul
xchg
push
pop
js
sti
inc
in
xchg
nop
int
and
imul
add
push
repz
imul
xor
ret
aam
cmp
cmc
or
sub
xchg
mov
fmuls
das
pusha
xor
aad
mov
sbb
inc
cwtl
dec
repnz
fstl
or
scas
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
fldt
jns
je
jns
je
jecxz
sbb
mov
leave
jecxz
sbb
mov
jns
test
int
mov
test
int
ds
mov
outsb
je
sahf
ds
mov
outsb
je
or
push
lahf
jmp
push
popf
cmpsb
sub
dec
pop
xchg
insb
fwait
cmp
lds
mov
sbb
shrb
ret
popa
test
fldt
jns
je
jecxz
sbb
mov
jns
test
int
ds
mov
outsb
je
or
push
mov
push
lods
lock
mov
jp
push
cmpl
and
pop
stos
cmp
lock
scas
push
orl
xor
ret
xor
mov
pop
scas
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
push
subl
in
push
je
xchg
and
lahf
inc
add
data16
xor
outsb
pop
mov
pushf
jle
sbb
mov
shlb
and
jle
mov
jbe
mov
cltd
inc
add
psubd
sbb
dec
mov
rolb
adc
roll
mov
sub
mov
ja
ja
js
xchg
mov
mov
cmp
pop
aad
push
stos
outsb
out
adc
pop
xchg
push
dec
mov
xchg
dec
test
enter
sub
int
cltd
or
imul
pushf
push
jns
data16
test
xchg
cmp
daa
shld
outsb
jle
cmp
or
rcll
lret
ds
cwtl
xor
pop
in
add
cmp
mov
hlt
out
push
dec
pusha
push
lcall
pop
xchg
cmp
rclb
pusha
out
stos
sub
int3
mov
mov
xor
jo
inc
lahf
xchg
je
clc
sub
mov
aam
mov
int
mov
push
jge
cmp
in
adc
dec
mov
push
insb
imul
pusha
jle
xor
and
and
movsl
mov
shll
loope
pushf
push
cmp
pop
mov
lods
xchg
into
lods
popf
jne
lods
sbb
sbb
and
pushf
adc
pop
push
xor
mov
shl
pop
mov
jl
push
adc
fstl
popf
mov
add
cmp
lcall
insb
pushf
push
jnp
or
loop
sub
into
outsl
adc
add
and
add
sbb
cmp
ret
test
mov
notl
dec
dec
add
jb
sub
imul
adc
call
dec
dec
add
xlat
mov
adc
out
pop
xor
dec
add
shlb
dec
xor
xchg
fidivs
sub
or
cmp
imul
xchg
lret
push
cmp
cmp
and
sarb
mov
andl
sub
loopne
ret
jp
adc
add
or
sti
aaa
xchg
clc
sub
adc
inc
jg
xchg
adc
cmp
mov
pop
bound
movups
gs
mov
mov
sbbl
push
cmp
sarl
cmc
xor
jecxz
fimull
int
out
jp
sarb
push
push
push
addr16
add
mov
or
xchg
ss
pop
push
out
test
mov
lcall
sbb
sub
cli
mov
sti
inc
mov
mov
inc
jns
inc
jecxz
sbb
lret
pop
xchg
sahf
sub
in
pop
sub
mov
and
or
inc
mov
xor
adcb
sbb
dec
enter
mov
dec
data16
test
popa
add
mov
out
mov
out
jg
and
fwait
pop
pop
pop
mov
or
jnp
and
lods
push
or
push
jo
lods
aas
lahf
mov
jae
inc
sub
out
ret
and
test
fmull
pop
icebp
in
cltd
sub
xor
cmc
out
insl
adcl
dec
dec
out
push
jge
lret
mov
pop
js
jp
scas
or
xchg
pop
dec
pop
outsb
mov
fsubrp
jb
out
aad
push
into
pop
mov
mov
cld
and
outsl
mov
insb
pop
call
sub
arpl
je
and
mov
sbb
pusha
mov
popa
xor
test
jns
loope
loop
push
cli
adc
rcll
jecxz
push
inc
out
and
aam
enter
pop
xor
aad
lcall
push
fidivrl
pushf
sbb
das
or
cmp
loop
fdivl
orl
sbb
xchg
xchg
add
dec
jb
and
fwait
jge
jae
leave
movsl
xchg
stc
aam
subl
cmp
lret
neg
mov
adc
inc
mov
int
xor
jb
cwtl
cmpsb
aas
dec
mov
cmp
aam
fbstp
mov
arpl
and
jmp
fs
push
dec
pop
in
cmpsl
xlat
and
popf
mov
push
adc
out
fldl
imul
test
imul
pop
mov
mov
adc
add
sti
pop
mov
adc
push
lret
lods
xchg
cwtl
inc
mov
xchg
cwtl
inc
mov
and
xchg
xor
es
xor
es
xor
es
xor
loop
jle
and
hlt
loop
jle
and
hlt
loop
jle
and
hlt
loop
jle
and
hlt
or
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
dec
cmpsl
dec
mov
push
ja
add
mov
ret
test
ret
test
ret
test
ret
test
ret
test
ret
test
ret
push
mov
adc
out
jmp
mov
sar
xor
test
mov
icebp
xor
mov
pop
add
adcb
adc
add
adc
sub
mov
sub
mov
sub
mov
sub
mov
rclb
ja
xor
or
push
lcall
push
lcall
push
lcall
mov
add
mov
lock
add
mov
lock
add
mov
lock
add
mov
lock
add
mov
lock
add
mov
lock
add
mov
lock
add
mov
scas
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
inc
out
loop
sub
in
ja
aad
sub
and
daa
and
jo
aad
inc
xor
lock
inc
pusha
mov
and
movsl
xor
enter
dec
sub
jne
or
stos
add
movl
pop
and
xor
xlat
lcall
in
leave
jge
dec
or
adc
leave
jge
dec
or
adc
sar
xor
sar
xor
test
mov
lds
pusha
inc
icebp
xor
mov
pop
add
icebp
xor
mov
pop
add
adcb
adc
add
adc
add
adc
add
adc
sub
mov
sub
mov
sub
mov
sub
mov
rclb
ja
xor
or
push
lcall
push
lcall
cltd
jmp
sub
pusha
cmc
cmp
jmp
subl
in
push
je
test
orb
loope
xchg
bnd
inc
lods
loopne
sbb
loope
push
jae
xchg
loop
fucomip
rorl
mov
ja
das
icebp
adc
out
outsb
stos
iret
leave
wbinvd
out
mov
hlt
in
mov
cwtl
fcmovne
ljmp
aaa
stos
loopne
cwtl
and
pop
adc
mov
mov
add
popa
test
shrl
pusha
cmc
cmp
jmp
subl
in
push
je
inc
inc
lods
inc
cmp
mov
test
pop
lea
imul
or
mov
dec
pop
sbb
sbb
rclb
cmp
je
jge
popa
ljmp
sub
jne
mov
xor
pop
es
cmp
mov
addr16
push
inc
xor
scas
in
pop
inc
shll
pop
divb
dec
rorb
psubusw
sbb
aaa
stc
adc
cmovl
not
push
sbb
push
push
add
xchg
cmp
mov
vandnps
or
push
cmpsb
and
sub
ja
add
inc
add
ds
pop
mov
mov
adc
cmp
xor
test
mov
xor
jo
clc
stc
gs
mov
roll
adc
pushf
shlb
repnz
adcb
fisubrs
inc
repz
mov
aas
call
inc
xchg
enter
pusha
mov
fwait
mov
mov
sbb
pop
leave
bound
daa
out
jge
or
lcall
das
fs
loope
mov
pusha
cld
rorl
shr
adc
ss
inc
mov
xchg
imul
subb
lods
mov
das
push
mov
xchg
outsb
loopne
pusha
jnp
insb
pop
or
loop
hlt
cmc
stos
lret
imul
imul
pushf
cmp
mov
test
in
dec
jne
subl
int3
aad
sub
stc
je
mov
jnp
sub
or
mov
mov
fwait
cli
cmpsb
cmp
lock
push
daa
xchg
scas
push
sbb
mov
pop
push
mov
jns
jo
stc
inc
movsl
sub
popf
mov
insb
test
xor
pushf
pushf
cmc
and
cltd
sub
arpl
outsb
or
orb
ljmp
sub
xchg
imul
mov
dec
negb
sbb
out
push
add
fsubl
pop
pop
push
enter
cli
lret
mov
imul
lods
pop
lret
or
adc
out
test
or
jne
sub
shrb
push
push
jp
lret
push
jno
mov
js
pop
insb
jge
xchg
out
pop
fsubs
mov
mov
xchg
mov
jmp
cmp
adc
push
adc
mov
in
jne
fnstenv
int
lret
sbb
push
pop
scas
int
andb
xor
in
sbb
ds
aad
nop
cmpsb
daa
data16
insl
jmp
imul
jns
push
inc
pop
stos
out
dec
cmp
push
shr
out
stos
jg
cltd
ja
scas
adc
iret
daa
add
xor
sahf
lret
mov
stos
sbb
add
sub
shlb
in
push
les
and
jp
jnp
repz
jne
pop
loopne
mov
mov
adc
add
lock
and
cld
movl
hlt
sub
jp
addl
inc
push
test
xchg
in
jbe
xchg
ror
repnz
int
sbb
xchg
jns
sbbl
xchg
jne
push
subl
outsl
push
jecxz
notl
movl
mov
mov
jg
add
outsl
jp
icebp
shll
adc
insl
sbb
add
mov
jg
xchg
test
cmp
rcrb
add
push
pop
popf
push
fwait
xor
sub
cld
shlb
mov
daa
pop
imul
jmp
cmpsl
adc
in
cmp
push
sahf
mov
pushf
fs
frstor
dec
push
mov
filds
xchg
cli
in
sbb
mul
loopne
inc
mov
out
ret
xlat
in
cld
pop
jecxz
xchg
jnp
sbb
lds
inc
ret
add
mov
aaa
mov
fimuls
sti
jl
cmp
leave
pop
jg
aas
mov
loopne
test
int3
xchg
pop
repnz
imul
aad
cmpsl
aaa
test
or
pop
pop
out
push
dec
mov
sub
scas
into
out
push
or
pusha
imul
jnp
out
add
xchg
jbe
addr16
ret
cmp
lock
in
mull
or
cltd
ret
ret
int
mov
xor
pop
jns
sbb
negl
mov
xchg
xor
fs
mov
push
aam
sbb
jmp
fidivl
mov
test
pop
mov
mov
cmp
aas
or
ret
mov
gs
xchg
or
arpl
xchg
in
push
mov
adc
dec
push
es
adc
ljmp
mov
jecxz
outsb
xor
scas
add
popf
fimuls
fdivrp
add
rcll
xor
sar
push
fsts
data16
in
inc
mov
popf
jmp
mov
push
xor
xor
fcompl
shrb
push
inc
in
cmp
in
popf
pop
xlat
mov
test
out
loop
xor
jns
pusha
stos
cmpsl
adc
int
fisubrs
inc
xchg
and
xchg
jecxz
pop
lea
jecxz
mov
aad
daa
jmp
test
fsts
xchg
jne
popa
xor
jno
pop
push
mov
push
shl
lea
push
jbe
sub
lock
dec
popa
out
xor
movsl
addr16
xchg
push
notb
jge
jns
stc
cmpsl
das
push
loope
in
in
cmp
jmp
sub
sarb
sbbb
pop
adc
in
dec
pop
dec
pop
shll
or
jp
inc
add
cmp
add
fnstsw
cmpsl
mov
cld
dec
mov
ss
jno
push
dec
push
xchg
test
pop
imul
bound
loope
loope
shlb
loope
push
sbb
or
jns
cmpsl
xchg
push
lahf
cli
insb
hlt
test
sbb
xchg
jbe
int3
shll
cmpsb
adc
inc
push
add
insb
cmpsb
inc
pop
aam
pop
jae
mov
xor
je
pop
inc
jle
and
int
cmp
pop
dec
out
or
imul
mov
jp
out
jecxz
fs
lret
pop
and
xchg
neg
push
mov
out
stos
addr16
in
xor
sbb
add
jb
lea
insl
test
jmp
std
dec
out
push
nop
fildll
addb
rcrb
adc
stos
sub
lods
loope
add
fs
nop
out
in
cltd
jl
insb
or
adc
ffree
dec
or
fcomps
fidivl
adc
aam
sbb
jmp
xor
dec
jno
inc
cmp
cmp
pushf
jb
movsb
or
jns
rorb
adc
xor
into
pushf
lock
dec
repz
mov
aaa
mov
popa
dec
xor
cli
out
mov
adc
and
cltd
iret
fs
popa
lahf
xor
jmp
cmpsl
add
je
stc
shll
lcall
mov
out
mov
cwtl
xlat
or
pop
push
inc
addl
jl
mov
into
int3
dec
mull
push
mov
mov
jmp
sbb
jmp
mov
mov
adc
xor
mov
addb
js
daa
sbb
jg
pop
roll
jb
xor
movsl
xor
lock
mov
jnp
hlt
aaa
xchg
jecxz
push
pop
pop
clc
xor
jle
mov
ljmp
dec
add
push
aad
in
jo
push
sarb
or
cs
sbb
hlt
lret
repnz
test
jmp
and
fwait
xchg
jp
jge
inc
mov
into
ss
adc
shlb
dec
rcll
or
popa
xchg
push
aas
sbb
jmp
add
aas
in
lock
scas
repnz
or
pop
inc
and
repz
aas
fsubrs
dec
call
mov
dec
sar
add
mov
addb
cmp
mov
inc
clc
jbe
or
loopne
cmpsb
push
sub
lock
imul
dec
lods
and
ljmp
or
jle
fldt
jo
inc
cmp
jno
push
dec
adc
enter
jbe
push
pop
stos
adc
pop
or
push
cwtl
mov
outsb
rcll
mov
and
pop
adc
es
or
lahf
stos
mov
xor
jle
pop
mov
push
stc
in
stos
mov
dec
loope
mov
stos
iret
xchg
je
pop
and
push
movl
clc
bound
fidivrl
pop
xchg
adc
xor
ljmp
ds
ja
nopl
stos
adc
scas
int
out
jne
mov
sbb
jg
call
in
inc
mov
push
adc
mov
sub
mov
jo
repz
and
fdivrs
inc
cmc
cmp
gs
mov
js
in
idivb
imul
add
lret
cltd
cmpsl
xor
xchg
incl
xchg
lods
subl
cmp
push
cltd
mov
cmp
int3
mov
inc
or
addb
dec
in
mov
adc
lods
or
pop
dec
jge
int
add
pushf
xchg
lods
xchg
sub
push
movsb
jmp
es
xchg
in
sub
stc
inc
nop
fwait
dec
add
rclb
push
adc
or
dec
mov
mov
cmp
js
imul
mov
cmpsl
inc
popa
call
out
pop
pop
inc
jmp
pop
mov
in
sbb
cli
xor
mov
jle
push
add
popf
jp
mov
adc
fscale
aaa
idivl
cmpl
sti
les
mov
pop
adc
sarb
inc
add
jnp
loope
pop
scas
flds
mov
mov
cmpsl
mov
push
pop
pop
movsb
sub
mov
adc
mov
mov
les
out
cwtl
cmp
int3
cmpsb
repnz
and
fsubl
push
cld
fisttpll
and
jnp
cmpb
or
and
cmpb
cmp
imull
scas
ss
cmpsb
sub
shl
subl
mov
movsb
pop
scas
push
jmp
lods
mov
sbb
cli
and
pop
test
cmc
jmp
cmpsl
sbb
push
xchg
sub
xor
mov
jb
cli
shl
push
xchg
mov
and
bound
sbb
lret
scas
cmpsl
sbb
fdivl
loop
mov
mov
rorb
daa
cmp
push
pop
aaa
loope
jge
mov
add
sbb
sarl
das
jno
cmp
mov
push
add
roll
ljmp
mov
sub
xchg
sub
imul
and
cmpb
mov
mov
fstps
jmp
neg
sub
push
sbb
pop
int
test
pop
sub
shlb
mov
xor
xchg
fsubrs
in
jmp
int
sahf
test
jmp
rclb
xor
ficoms
repnz
sbb
ds
mov
adc
fs
add
enter
ret
xchg
xchg
mov
dec
hlt
insb
xor
andl
xchg
lcall
mov
rorl
imul
outsl
loop
sahf
in
sub
push
jmp
add
dec
mov
mov
mov
sbb
shlb
je
fldt
push
pusha
xor
dec
and
or
pushf
imul
int
mov
mov
je
adc
aam
ret
and
mov
push
and
dec
pop
sti
add
jno
popa
addr16
add
pop
imul
in
por
mov
fucom
mov
andl
xor
mov
jmp
mov
fidivs
inc
lret
dec
daa
pop
test
sbb
mov
pop
inc
pop
mov
addr16
pusha
rcl
cld
stos
call
mov
dec
and
test
sub
in
test
shlb
subl
scas
cmp
popf
mov
pop
push
ljmp
popf
repz
add
adc
mov
test
lret
mov
push
mov
mov
xchg
out
addr16
orb
mov
mov
pop
mov
das
mov
arpl
lods
mov
inc
pop
cmpsl
mov
dec
lret
mov
and
in
push
mov
ja
sti
push
sbb
mov
repnz
fcmovnb
pop
pop
das
push
fidivs
les
add
fdivrl
int
mov
cwtl
mov
das
movsl
xchg
jmp
outsb
cs
xor
xor
fdivrs
clc
ffree
sub
xchg
xor
inc
mov
cmp
dec
ror
std
rcrl
xor
popa
iret
ljmp
inc
jo
mov
lods
or
mov
das
mov
stos
cmp
mov
outsl
iret
dec
and
adc
sub
sbb
inc
xor
iret
cmp
jb
jl
lret
dec
test
cmp
mov
call
push
imul
movsl
fmul
xchg
jle
enter
push
jno
mov
jb
jl
ja
dec
adc
int
cmpsb
mov
int
shlb
lods
inc
stc
pop
inc
sbbb
pop
scas
pop
mov
into
movsl
enter
jae
fcmove
imulb
mov
dec
lret
adc
rcl
in
inc
lcall
fwait
ret
xchg
fiaddl
pop
in
arpl
pop
add
sarb
mov
pop
dec
and
xchg
jae
inc
jecxz
imul
pop
pop
test
jbe
xor
mov
adc
loope
cmp
mov
mov
xchg
xchg
call
mov
and
icebp
subb
fldenv
mov
outsl
jno
notl
enter
mov
add
mov
shrb
gs
xchg
inc
sbb
out
pop
icebp
stos
dec
scas
push
test
es
adc
xor
push
dec
mov
ja
mov
lcall
push
inc
lock
lea
adc
mov
imul
scas
call
jge
rorl
mov
enter
cmp
xchg
jns
negl
std
loopne
test
mov
dec
mov
aad
ljmp
fbstp
test
dec
cmp
xchg
pop
add
dec
dec
sub
pop
xorb
mov
push
dec
cmp
xchg
sbb
push
fwait
push
jns
mov
cmpsb
pushf
rcrl
subb
std
in
lret
inc
cltd
fwait
cld
xchg
test
fnstcw
push
sbb
push
sub
pop
aaa
add
push
or
pop
mov
lods
inc
push
inc
mov
sahf
imul
and
pusha
lahf
sub
shl
scas
stos
dec
dec
dec
popf
fimuls
pop
mov
movsl
pusha
test
and
sub
clc
loop
es
mov
das
arpl
jns
mov
inc
adc
mov
inc
aas
jge
push
add
dec
add
std
mov
cmp
adc
jno
cmp
push
inc
sti
pop
decl
xchg
shr
int
mov
adc
fs
cltd
inc
fisttps
stos
jmp
sub
push
push
lea
jnp
loopne
sub
movsl
loop
lret
int
xchg
fptan
jne
notb
cmp
enter
arpl
bound
mov
cld
xor
mov
mov
int3
test
inc
mov
sbb
mov
dec
sbbb
scas
xchg
loopne
fneni(8087
adc
xor
push
pop
aam
cld
mov
sbb
es
inc
in
mov
push
pushf
inc
dec
lcall
dec
mov
test
pop
push
sahf
fcomps
add
arpl
cmpsl
out
adc
das
bound
xor
popf
pop
xchg
push
pop
out
lock
add
lahf
adcl
xchg
xor
into
inc
sub
and
test
cmp
aas
mov
jnp
movsl
inc
stos
sbb
fistpll
sub
mov
mov
jle
call
stc
test
pop
es
pop
popf
mov
jbe
in
sub
add
xchg
mov
jmp
sub
fistps
subl
lret
testb
xchg
jo
insl
dec
aad
ds
lret
scas
xchg
adc
mov
pop
sbb
sar
push
aaa
or
ljmp
outsb
cmp
ljmp
icebp
lret
jl
loope
push
pop
daa
gs
adc
add
out
ss
das
sbb
aad
mov
xchg
adc
mov
test
repz
lds
movsb
add
int3
push
mull
mov
inc
inc
adc
sub
mov
mov
iret
out
fcmovb
sbb
push
inc
mov
ds
push
push
cmpsb
ja
scas
cmpsb
mov
jo
mov
xchg
lds
push
frstor
shll
xchg
ret
sub
shrl
cltd
cmp
shlb
xchg
inc
and
dec
xor
pop
rcrb
movsl
push
mov
mov
cmp
int
scas
pop
insl
and
inc
inc
or
add
xchg
sbb
jg
imul
cld
cmp
andl
aas
bound
fildll
dec
in
pop
sbb
mov
cld
scas
push
rcrb
xchg
test
xor
mov
jnp
pop
aas
jbe
inc
adc
scas
add
jl
lret
push
sub
push
mov
fildl
push
fbstp
mov
int
dec
loopne
aad
cld
mov
int3
xchg
adc
fsubl
dec
mov
and
mov
inc
in
loopne
mov
test
mov
jle
fisttps
cmpl
daa
dec
es
insl
hlt
jmp
jmp
enter
sub
cwtl
pop
lods
sbb
add
pop
push
das
sub
inc
sub
aaa
sbb
pop
xor
lea
push
xor
dec
daa
sub
xchg
dec
jle
mov
stos
adcb
test
lods
push
mov
cmp
outsl
sub
mov
mov
mov
xchg
sbb
loop
sbb
lds
cmp
cmp
fidivrs
pop
cmp
in
in
lret
hlt
insb
push
push
ret
push
in
imul
stc
leave
xor
cmp
xchg
ss
adcl
mov
pop
and
sti
mov
roll
jg
std
mov
or
mov
or
aam
pop
mov
ja
xchg
sbb
mov
inc
or
insl
xor
testb
dec
stos
mov
jmp
ss
jne
cmp
out
pop
inc
scas
pop
mov
cmp
lret
inc
loopne
testl
jecxz
aam
ret
add
adc
push
xchg
mov
loope
add
mov
sbb
cld
dec
add
jle
sbb
mov
cmc
stos
lea
jmp
jge
cmp
sbb
push
test
mov
ror
mov
ret
iret
ret
loopne
cmp
jno
sbb
out
popf
dec
dec
jecxz
aad
adc
push
jnp
test
push
js
pop
lahf
test
xchg
jp
setg
adc
mov
insl
push
in
cmc
test
sub
sub
movsb
pusha
daa
xchg
mov
cmp
xor
jo
mov
mov
in
jo
sub
pop
imul
aaa
push
inc
mov
stc
hlt
adcb
mov
daa
jmp
insl
bnd
jae
or
xchg
push
lret
add
mulb
rcrl
sub
fs
ljmp
loop
xor
lahf
push
sbb
xor
lahf
fimuls
into
xchg
pop
dec
stos
clc
aas
add
cli
shr
insb
push
pushf
outsb
in
imul
sbb
cmpsl
aad
add
ljmp
into
jo
push
out
filds
xor
ljmp
jb
xorl
enter
or
jo
cmp
repnz
and
pop
sbb
push
fnstcw
add
leave
inc
addl
scas
in
negb
mov
and
inc
pop
sub
stc
out
and
shlb
loope
faddl
shrl
cmpb
cmpsb
xchg
stos
lret
fidivs
rol
add
cmc
lds
xchg
dec
push
xchg
inc
fsts
das
mov
data16
cmp
adc
mov
adc
pusha
sub
mov
ds
xchg
jno
lahf
jnp
inc
cld
pop
sub
das
nop
sub
adcl
in
xor
ja
mov
adc
inc
test
add
clc
inc
sub
imul
sbb
inc
mov
ss
add
arpl
add
xchg
les
sbb
lock
iret
nop
jnp
fnstcw
cmc
insb
fimuls
unpckhps
add
in
adc
add
cs
stc
ja
out
mov
xorl
cmp
es
and
sahf
add
xlat
xchg
jbe
repz
lret
inc
mov
pop
push
mov
fisubl
mov
scas
cmpsl
nop
mov
enter
inc
leave
sbb
mov
cmp
shl
inc
lea
out
mov
cmp
xor
inc
out
adc
mull
or
cltd
sbbl
loope
sub
pop
loopne
jb
and
in
mov
mov
jg
push
add
daa
xchg
inc
dec
out
xchg
or
pushl
push
xlat
test
mov
push
cwtl
cs
sbb
std
and
popa
pop
mov
sahf
or
push
add
mov
lcall
repnz
push
repnz
sahf
sbb
adc
loope
out
push
cmp
pop
xor
xor
mov
jle
clc
mulb
pop
mov
dec
aad
jb
and
push
jne
xorb
fdivrl
movsl
imul
adc
fsubrp
cmpsl
dec
in
mov
and
jle
pop
mov
xchg
xor
inc
test
xor
aas
cwtl
xchg
sbb
repnz
insl
aam
and
subb
push
mov
mov
jns
sbb
andl
sbb
jo
aaa
sub
dec
cmp
jae
mov
sbb
stc
out
movsb
sbb
or
mov
in
mov
cwtl
push
dec
or
mov
cltd
cmp
or
xchg
mov
jb
or
nop
stos
pop
dec
mov
cmpsl
jnp
jne
jmp
cwtl
sub
xor
in
icebp
pusha
add
fwait
mov
and
loop
mov
scas
loope
sub
out
xor
int3
stc
mov
inc
push
es
movaps
movsb
jl
adcb
divb
add
inc
xor
dec
push
mov
mov
push
fmull
lss
dec
xor
cwtl
cmc
ljmp
xor
pop
rcrb
ret
add
loope
jns
rcl
mov
push
pop
mov
mov
dec
rcl
pop
mov
fsts
xchg
fisubs
clc
inc
push
sub
clc
pop
test
add
popf
repnz
sar
lcall
cmc
subl
mov
or
repz
test
cmpl
scas
xchg
fdivrs
insb
fiaddl
push
and
jo
jle
push
push
mov
and
adc
cmp
in
lods
jp
cmp
lea
rcr
mov
add
aam
nop
dec
jbe
inc
lods
andl
lds
inc
ja
push
pop
daa
stc
shl
xchg
push
mov
test
jbe
pop
lcall
sbb
xor
push
sub
ret
pusha
xor
cmp
movsb
push
daa
jge
dec
popl
out
pushf
rol
push
push
dec
icebp
and
jmp
fsubl
lret
push
sub
int
push
not
loope
jg
out
mov
lret
push
and
pop
std
or
lret
jmp
jne
sub
push
pop
sub
or
out
adc
mov
test
xor
fwait
dec
mov
xchg
clc
out
xor
ds
orb
negl
sub
mov
xchg
out
push
add
lock
sub
pusha
outsb
mov
cmp
push
outsb
pop
push
xchg
sti
nop
rcll
sub
jb
inc
adc
inc
mov
mov
mov
mov
inc
fadds
movsb
pusha
int
test
test
imull
push
jno
lods
leave
rcr
or
scas
xlat
or
mov
jbe
pop
dec
movsl
push
outsb
sbb
mov
adc
aas
pusha
sti
mov
lea
imul
out
mov
cmc
mov
cmpl
xor
sbb
add
add
jmp
sub
into
gs
fisubs
inc
insb
in
sbb
test
mov
loope
push
pop
insl
mov
lds
insb
je
pop
insb
das
mov
outsl
push
cmpsl
cli
ret
pop
addb
cmc
or
xchg
and
lods
xor
mov
mov
and
dec
ret
jno
dec
aas
mov
loop
ds
loopne
iret
fxch
mov
iret
mov
out
rol
xor
mov
js
fucomip
movsl
or
adc
test
mov
pushf
sub
jne
mov
adc
test
incb
test
mov
xor
inc
sbb
xor
gs
addr16
dec
mov
cmp
xchg
fs
gs
pop
jnp
jnp
repnz
adc
pop
call
xchg
jl
mov
adc
dec
adc
dec
cmovne
ret
mov
sbb
and
inc
mov
xor
xor
sbb
mov
icebp
sub
jo
jp
or
fcomip
cs
iret
jmp
mov
repz
xor
scas
mov
shr
mov
jne,pt
mov
aad
nop
dec
insl
popa
xchg
adc
out
xchg
js
cmpl
fmull
adc
pop
jg
dec
sti
fwait
das
sbb
mov
insb
jmp
rcrl
or
jecxz
les
dec
push
add
fcomps
jecxz
push
aaa
jl
int3
inc
mov
cltd
adc
inc
enter
xchg
push
enter
sub
pop
mov
ret
adc
movsb
negl
xchg
xor
arpl
out
xchg
mov
inc
cs
std
xor
lock
mov
mov
push
in
cmp
call
repz
push
lret
pop
test
roll
adc
xchg
lock
xor
stos
sub
imul
fadd
push
jnp
add
jecxz
mov
mov
cld
clc
mov
into
sbb
sbb
adc
repz
imul
dec
mov
les
mov
push
adc
or
rorb
sbb
aad
cs
outsl
addr16
mov
andb
subb
push
fwait
aam
cmp
pop
sub
fwait
jns
stos
shlb
cmp
fildll
insl
jge
fsub
daa
ja
sbb
pusha
or
repz
or
jp
daa
xor
test
xchg
adc
stos
sar
push
or
and
lcall
inc
xor
push
add
or
fisubl
xor
inc
cmpl
cli
xlat
lock
outsl
or
clc
gs
out
movsl
or
ret
out
mov
nop
mov
xor
jo
call
loopne
out
addr16
sti
push
mov
sub
and
daa
outsl
add
push
mov
enter
sub
mov
sbb
push
fchs
push
aaa
or
mov
outsb
mov
imul
push
vpaddd
imul
idivb
pushf
popa
push
pusha
inc
cmp
mov
data16
mov
cmp
mov
js
adc
or
inc
xchg
gs
inc
sub
rcrl
aam
sub
ret
push
mov
cs
jne
push
jmp
jmp
or
adc
jge
xorb
push
repz
leave
lods
pop
lds
imul
outsb
fdivs
mov
add
jl
fists
mov
sub
ss
scas
xchg
sub
sbb
lret
mov
sbb
dec
aam
aad
shr
mov
sbb
ret
add
push
imul
mov
and
xchg
popa
lret
dec
fcoml
movq
stc
sahf
clc
sub
pop
xor
jae
cmp
int
xor
and
test
scas
fbstp
inc
push
lds
mov
inc
sahf
cli
jp
sahf
and
cmc
clc
push
sub
and
adc
loopne
stos
cmpsb
lods
mov
test
jbe
push
dec
aaa
sub
popa
fistps
mov
sbb
jns
xor
cltd
xchg
mov
dec
xor
imull
fwait
xor
in
xchg
sub
cmp
jnp
dec
lock
or
mov
movsb
dec
dec
pop
and
cmpsl
xchg
pop
cmpsb
pop
add
adc
xchg
mov
dec
in
cltd
int3
pop
adc
dec
inc
imul
pop
out
mov
pop
jle
stos
mov
dec
ljmp
out
into
enter
lea
or
ja
fidivs
ret
ljmp
les
pop
mov
jns
cmp
jnp
dec
lock
inc
mov
int3
pop
mov
pop
dec
addb
bsf
pop
js
sbb
sub
or
inc
sbb
mov
inc
adc
jl
jo
cwtl
fbstp
cld
cs
xchg
nop
jmp
xor
or
ds
jo
or
pusha
add
or
push
cmp
movsl
in
and
clc
cmp
inc
add
xchg
into
cmpsl
mov
mov
pop
pushf
les
fsts
pop
sbb
mov
cwtl
lea
pop
int3
pusha
fidivrs
inc
int3
dec
dec
psraw
xchg
or
lods
xchg
mov
outsb
jns
or
add
lds
icebp
mov
hlt
push
or
jb
push
sub
xchg
lahf
nop
cmp
movsb
xor
shlb
pushf
incl
jne
enter
ljmp
xchg
leave
xlat
push
and
xor
adc
mov
jle
call
adc
enter
push
or
push
icebp
add
mov
mov
cmp
inc
ret
aas
pop
clc
mov
push
jl
outsl
movsb
mov
scas
js
les
out
cmp
arpl
orl
jmp
or
mov
xor
fucomp
fmull
in
inc
and
je
lret
sub
lods
jecxz
arpl
inc
mov
lahf
jns
imul
out
inc
icebp
jne
mov
push
sub
in
movsb
xor
int
lods
daa
stos
mov
mov
aam
adc
or
aaa
push
test
ret
adc
xor
pop
aaa
pop
cld
jns
mov
pop
and
jae
sub
inc
ja
sbb
inc
jns
iret
in
lret
xchg
sbb
into
xor
ret
xor
cmc
or
js
and
lret
push
stos
xchg
pop
leave
inc
cld
in
mov
xchg
cmc
loop
mov
das
add
or
add
and
pop
mov
jmp
ljmp
sub
not
test
cmp
xchg
or
dec
lahf
ss
adc
adc
fwait
sub
mov
clts
sbb
sti
or
shll
mov
push
insl
or
das
inc
push
enter
xchg
mov
test
cmp
mov
lods
jg
sub
mov
mov
test
cmpb
jns
pop
lods
inc
jmp
in
push
and
mov
and
test
pop
outsb
mov
scas
popa
dec
out
dec
out
ret
ret
cmove
dec
jg
pop
es
popf
loope
cmp
sub
mov
in
es
test
cmp
sti
sub
sbb
test
add
inc
insl
enter
popf
xchg
or
mov
in
je
push
les
mov
rorl
lcall
xchg
xchg
pushf
add
repz
sub
shlb
mov
clc
lods
pusha
add
icebp
cmpsb
jns
shlb
mov
call
imull
nop
ret
notl
sahf
addr16
fldcw
repnz
jns
mov
ss
dec
notb
lret
popf
push
push
mov
add
shrb
push
cmpb
cmp
out
lods
ret
or
call
mov
iret
lock
out
imull
shl
in
push
jge
sbb
ret
shld
adc
mov
in
inc
sub
jmp
shr
xor
popl
mov
lods
sub
ss
and
xor
pop
inc
dec
fisttpl
scas
gs
add
sub
xchg
cwtl
inc
mov
ss
dec
lods
xor
bound
sarl
loop
test
cmpsl
dec
loop
rol
repz
inc
jb
ret
in
cwtl
pop
mov
push
xchg
das
sar
lds
cmp
out
push
ja
xor
inc
mov
cwtl
fs
jno
jno
sub
sbb
sarl
out
out
cmp
add
xchg
add
leave
jge
bound
ret
mov
ss
adc
je
sub
pop
adc
out
xchg
sub
pop
cmp
fldenv
pushf
jae
pop
push
hlt
dec
sbb
pop
and
aad
push
cwtl
stos
add
dec
jbe
and
xchg
fldlg2
pop
lds
aaa
mov
jle
mov
xlat
fimull
xlat
testb
pop
pop
cmc
pushf
and
push
ds
aam
cli
sub
push
cwtl
pushf
iret
sub
sbb
int
mov
push
cld
mov
or
fstl
inc
adc
mov
mov
jp
leave
pusha
fbstp
addr16
xor
jae
or
scas
xrstor
or
std
inc
lret
xchg
ret
inc
push
pop
xchg
adcl
and
nop
mov
dec
jp
es
mov
cmp
mov
mov
inc
call
mov
lahf
aaa
cmp
add
fs
mov
stos
into
pop
addr16
and
dec
subl
aam
adc
orb
fwait
movsl
dec
xchg
pop
inc
mov
jmp
js
addr16
roll
js
fistl
stos
xlat
cmp
loope
xchg
divb
and
adc
clc
mov
adc
mov
sub
push
insl
pop
addr16
adc
fisubrl
inc
and
xor
xchg
ja
jno
sbb
xchg
mov
sbb
mov
mov
mov
pushf
fistpll
js
ret
pop
rorb
fdivs
push
call
add
arpl
cwtl
jle
dec
loopne
xor
jno
movsb
or
mov
repnz
pushf
inc
loope
push
test
mull
js
xor
addr16
clc
outsl
push
sarl
mov
outsl
sub
pop
sbbb
pop
gs
outsb
loopne
inc
adc
dec
sub
int3
mov
pop
jnp
adc
mov
out
outsl
gs
xchg
mov
jno
push
aad
push
push
pop
mov
push
or
shl
rcl
adc
mov
leave
xchg
loope
cld
call
xor
sbb
mov
mov
and
dec
and
sbb
sub
xor
flds
mov
clc
cmc
lcall
sub
loop
rcrb
sbb
divl
dec
jle
les
adc
pop
mov
sub
push
cmp
jb
repz
jo
push
dec
xor
inc
inc
jp
mov
outsl
leave
ja
jmp
gs
mov
adc
cltd
sub
loopne
mov
xorl
or
mov
dec
jo
hlt
shll
adc
stos
repz
hlt
das
jp
inc
ja
cmp
subl
and
das
clc
rcr
aam
adc
insl
sbb
xchg
mov
fildll
pop
inc
les
cmp
and
hlt
xchg
cmp
jb
push
cs
repz
std
stos
iret
ja
insb
sbbl
scas
pop
and
bound
push
xchg
test
xchg
add
outsl
jo
mov
test
mov
pusha
out
outsl
cmp
push
pop
out
or
shlb
pop
mov
inc
ret
divb
insb
ffreep
xchg
fsubrp
into
jmp
dec
mov
xor
outsl
icebp
insl
movsb
sub
out
inc
xchg
cmp
fcoml
xchg
mov
cmp
mov
scas
sbb
cmp
xchg
test
push
punpcklwd
cmp
aaa
sbb
cltd
jne
out
out
jmp
fs
add
daa
jle
mov
jnp
mov
cmpsl
orl
clc
dec
cmp
repz
cmp
mov
rorl
and
mov
sbb
mov
in
fsts
add
stc
mov
std
mov
inc
gs
stos
lock
xor
fsubl
imul
mov
scas
push
jmp
inc
les
or
xchg
push
ja
in
xchg
popa
fnstenv
lcall
sti
xor
jno
sahf
push
addr16
popf
or
arpl
arpl
jne
push
pop
mov
and
lods
xchg
cld
loop
sbb
iret
in
cli
addr16
imul
push
imul
and
lea
and
sbb
pop
aaa
in
lods
jge
and
lret
mov
xor
or
sub
xchg
std
mov
mov
or
lods
sub
push
clc
ja
arpl
xor
add
mov
cli
call
out
mov
mov
or
jl
cltd
cltd
mov
xor
sbb
lret
fisubrs
add
mov
xor
jl
dec
repz
inc
fwait
mov
cmp
or
rcrl
scas
fnstsw
jns
jne
and
mov
jle
mov
mov
arpl
cmp
jge
repz
sub
inc
std
popa
xor
mov
pop
xlat
fidivl
insl
mov
rcrb
inc
stc
ds
stos
xchg
pop
cmp
cmp
lods
loope
add
das
popa
ljmp
xor
pop
add
xchg
ds
sarb
ficoms
and
shrb
dec
pushf
pop
pop
add
imul
pop
push
and
in
ffreep
push
in
mov
jns
dec
mov
cld
inc
ss
jge,pt
xor
and
cli
fwait
sub
test
pop
push
popa
gs
cmp
cmp
and
test
sti
mov
setge
mov
aad
add
out
icebp
push
mov
mov
or
pop
push
cmp
out
push
das
mov
loope
sarl
iret
add
cmp
xchg
pop
and
out
jmp
aaa
xor
mov
or
xor
loop
shl
push
rcll
nop
jnp
aas
cmp
add
sbb
lret
mov
cmp
cmpb
xchg
mov
push
in
or
sbb
stc
pop
inc
pop
mov
sbb
sbb
icebp
repnz
sahf
dec
fsub
pop
xor
cmc
jmp
flds
cmpb
ror
adc
and
or
sub
push
sahf
mov
push
inc
mov
xchg
sub
push
add
mov
shlb
jmp
scas
mov
pop
cmpsb
cs
and
jmp
pop
mov
mov
mov
lea
or
dec
movsl
mov
out
hlt
hlt
adc
adcb
testb
out
jb
mov
call
fsubrs
pop
xchg
inc
mov
cmp
sbb
repz
lret
cs
or
lea
pop
xor
or
fisubrs
mov
inc
push
push
movsl
jne
clc
lods
push
ja
xlat
push
cmpsb
ret
add
mov
jnp
mov
jb
or
sbb
mov
loopne
add
mov
xchg
out
dec
jae
iret
mov
inc
mov
xchg
aas
lret
mov
xor
in
ret
icebp
dec
pop
mov
or
inc
push
lcall
movsb
pop
es
xchg
xchg
test
addb
fs
addr16
pop
orl
cmp
mov
out
xor
ds
xor
mov
xchg
fisubrs
aad
mov
test
stos
in
jp
push
adc
jae
push
shlb
jp
jae
into
mov
out
adc
xchg
xchg
addl
jnp
pop
push
mov
aas
ja
mov
dec
leave
mov
xchg
ja
xor
push
mov
sub
mov
mov
ffreep
adc
push
movsb
movsl
xchg
xorl
jmp
xlat
xchg
xchg
adc
sahf
mov
ljmp
mov
cmc
jle
test
inc
push
sub
push
sub
pop
loope
mov
shl
in
bound
mov
push
adc
sti
lock
mov
leave
jae
lahf
mov
inc
in
les
leave
jns
jne
test
sarl
adc
js
inc
and
mov
lods
adc
scas
sbb
xor
and
adc
jecxz
stc
sbb
xor
movsl
ret
clc
out
gs
and
push
imul
movsb
adc
cmpsl
loop
xlat
push
pop
pushf
xchg
aam
jae
jge
push
mov
int3
or
adc
pop
addr16
pop
cwtl
adc
cmpsl
divl
sbb
outsl
jp
test
loopne
xor
fs
es
pop
cmp
jns
jnp
je
xchg
ja
into
fistpl
inc
loop
orl
mov
lret
jo
sub
fsubrs
bound
mov
popf
jnp
mov
lahf
mov
aaa
xor
out
ret
xor
lods
adc
mov
fs
arpl
or
push
pop
sub
mov
daa
pop
loopne
or
mov
adc
mov
stc
shll
sti
movsb
and
inc
lds
adc
sub
cmpsb
in
mov
loopne
mov
add
mov
lods
push
jae
mov
mov
in
adc
scas
insl
xor
aaa
sub
jmp
mov
and
push
popa
push
pop
sahf
das
mov
push
mov
pop
bound
adc
mull
push
xchg
or
stos
data16
enter
mov
pop
scas
add
cld
leave
cltd
cmc
jno
xchg
cmpsl
scas
mov
inc
jo
insl
dec
in
scas
out
sbbl
sub
adc
into
rcll
cwtl
popa
push
in
jae
dec
js
mov
imul
and
bnd
and
icebp
out
sub
xchg
in
inc
dec
lahf
sti
add
roll
mov
adc
dec
inc
jg
xchg
jbe
aaa
in
repz
sbb
pop
cld
nop
dec
sbb
xor
imul
and
scas
sub
enter
lret
cld
in
inc
sbb
or
test
xchg
xchg
sub
pusha
xchg
stc
movsl
sub
pop
packuswb
iret
lret
in
pop
pop
repnz
and
dec
and
push
sub
dec
lea
cld
cmpsl
fwait
out
imul
adc
jp
pop
lcall
sbb
cmp
sbb
xor
das
outsl
mov
mov
daa
rorl
testl
in
xor
call
sbb
les
mov
xor
movsl
rorb
pop
xor
mov
jae
lock
jns
xchg
cmpsl
and
xlat
cmpsl
or
imul
fabs
jl
outsl
scas
fimuls
push
cmp
pop
idivl
cmpsl
adc
xchg
rol
xchg
push
shlb
inc
add
mov
pop
lea
or
jp
sub
cmpsl
xchg
push
lods
fistps
inc
xchg
stos
notb
sub
or
lret
mov
cs
out
nop
aam
cs
add
adc
xor
inc
inc
and
fcmovnu
adc
fstp
insb
shl
stos
push
dec
add
cs
and
mov
mov
loope
and
jne
ja
scas
jno
repnz
add
icebp
aam
mov
xchg
ret
add
mov
sbb
xchg
out
push
test
push
cmp
fwait
xor
inc
sub
clc
out
daa
and
xchg
es
inc
add
aam
adc
in
mov
incl
inc
dec
sub
dec
bound
outsb
loop
lcall
out
popf
xchg
in
paddb
mov
jle
movsl
xor
iret
aas
mov
jge
ds
lahf
jne
xchg
inc
cmp
rorb
andb
fiaddl
sahf
push
jp
cmp
adc
mov
and
add
ljmp
jp
add
or
xchg
scas
data16
push
mov
xchg
scas
movsl
push
je
pop
lock
movsl
adc
icebp
xor
xchg
cmp
hlt
cmp
pop
sub
nop
jne
add
je
pop
loope
mov
dec
ja
ss
cmpsb
inc
pushf
outsb
sbb
aad
out
mov
pop
push
out
test
rcr
imul
inc
icebp
hlt
mov
lcall
xchg
rcr
gs
neg
gs
xchg
cwtl
ret
cmp
xchg
pop
lods
or
inc
adc
loope
bound
ss
mov
inc
and
cmp
inc
and
mov
add
add
xor
xor
repnz
out
jl
in
test
aad
std
sbb
dec
and
popa
mov
and
das
rorl
xchg
outsb
pushf
std
sbb
jge
pop
stos
add
inc
addr16
xchg
nop
out
fisubs
pop
lods
int3
mov
leave
dec
add
loop
jnp
mov
mov
pop
and
inc
sbb
leave
jecxz
sub
iret
pusha
or
sbb
and
or
icebp
cs
sbb
mov
cwtl
jmp
mov
cmpb
ret
cmp
push
jnp
daa
out
lahf
inc
das
dec
jecxz
jne
lock
jmp
out
lea
push
lcall
or
mov
pop
jge
mov
jbe
adc
aam
cmp
mov
fidivl
xlat
pop
mov
cmp
clc
leave
mov
mov
xor
loop
mov
nop
jg
pop
mov
icebp
lock
cmp
test
jge
sbb
sti
cmp
lea
inc
or
xchg
add
jae
imul
loopne
cltd
mov
lcall
test
pop
mov
and
push
lods
cmp
rcll
in
out
jmp
push
or
pop
sub
or
cs
mov
mov
daa
xchg
insl
xor
cmp
and
inc
push
and
stc
jl
clc
and
stos
mov
shl
imul
sbb
push
push
pusha
add
pusha
xchg
push
test
xchg
xchg
mov
or
mov
pusha
lret
mov
imul
lret
inc
adc
push
jmp
lret
mov
out
xor
or
mov
dec
repz
cmpsl
sbb
loopne
add
mov
and
mov
stos
clc
mov
repnz
sub
imul
movl
sbbl
mov
loopne
movq
xchg
cmc
pop
icebp
sahf
cld
mov
hlt
adcl
call
cmp
cmpb
mov
ficoml
sti
lock
or
dec
lahf
icebp
repz
addr16
in
cmp
idivl
ret
sbbl
cmp
ret
mov
mov
fcoml
adc
int3
jmp
pop
add
adc
imul
clc
shrl
adc
inc
adcl
sti
js
insb
dec
or
outsb
add
mov
mov
sbbb
stos
daa
jo
orl
dec
insb
mov
rep
rcrb
fmuls
rcr
rclb
mov
mov
test
fstpt
jecxz
inc
out
shlb
mov
ror
std
outsl
jb
bound
test
ret
and
cmp
mov
cmp
sbb
push
cs
pop
push
and
repnz
fbld
out
jecxz
push
adc
xchg
lds
add
hlt
call
xor
dec
cmp
mov
popf
test
int3
popa
dec
insb
lcall
and
mov
scas
stc
pop
pop
cmpsl
fisubl
jl
mov
pop
sbb
ror
add
add
cltd
mov
mov
cmp
stos
or
mov
mov
cmp
roll
shl
sbb
popf
and
jecxz
loopne
fstl
jno
add
jmp
lret
and
test
divl
xchg
sub
cmp
ret
add
mov
out
cmp
mov
clc
cmpsl
bound
mov
pop
add
jle
aad
ret
cld
adc
lods
js
push
pop
divl
xor
fcmovu
cmp
inc
cmp
xchg
lods
dec
in
cmp
dec
call
ss
inc
jp
test
push
mov
movsl
ljmp
and
adc
in
dec
sub
and
push
adc
sub
and
or
pop
xchg
and
add
adc
mov
sahf
jnp
ja
push
daa
jp
loopne
and
std
mov
popa
fs
test
divl
insb
fldcw
mov
dec
sbb
popa
test
jne
jno
aaa
xchg
fisubrl
call
daa
xchg
popf
enter
sahf
jbe
outsb
in
push
inc
xchg
mov
lods
test
ss
push
mov
or
mov
bound
sbb
sbbb
mov
lahf
lods
lods
push
push
or
mov
push
rcrl
lock
fstps
in
repnz
lret
sbb
addr16
insb
frstor
dec
mov
aad
xor
adc
sub
insb
lret
add
mov
push
in
inc
mov
cmpb
in
push
push
stos
add
sub
aad
rcll
and
fdecstp
pop
inc
test
out
and
out
xchg
fisttpl
jmp
loope
sub
cmpsl
cmp
repnz
xor
loopne
adc
inc
and
or
lcall
sub
jbe
cmpsb
movsb
lds
inc
leave
mov
push
je
cmp
iret
outsb
push
pop
sub
inc
cmp
clc
mov
test
or
sbb
push
lahf
jmp
call
sub
pop
pop
sbb
cmc
cli
cld
xor
mov
mov
test
push
in
xor
lock
clc
pop
xchg
xchg
nop
or
xchg
mov
shrb
xor
sbb
mov
prefetch
aaa
fisubl
cmp
mov
push
push
mov
mov
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
fs
jecxz
or
inc
out
shl
inc
push
or
jo
sub
adc
cltd
lds
mov
insb
aam
sbb
push
push
dec
cmpsl
fmulp
loope
loop
std
aaa
mov
cmp
cli
sbb
push
push
dec
cmpsl
fmulp
loope
fistpll
lock
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
jge
bound
std
bound
std
bound
std
bound
std
bound
std
bound
and
stos
ja
aad
int3
cwtl
jle
mov
cmp
fisttps
in
std
bound
std
bound
std
bound
cmp
fisttps
in
std
bound
std
bound
std
bound
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
out
dec
pop
lea
push
cmpsb
movsb
lds
cmpsb
movsb
lds
inc
data16
cld
sub
jbe
cmpsb
movsb
lds
cmpsb
movsb
lds
cmpsb
movsb
lds
cmpsb
movsb
lds
cmpsb
movsb
lds
cmpsb
movsb
lds
cmpsb
movsb
lds
inc
data16
cld
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
jnp
sbb
lahf
insl
xor
and
jo
xchg
mov
insl
cmp
subl
aad
xor
push
adc
mov
jnp
test
sub
clc
push
mov
xlat
lods
ss
or
push
sub
call
inc
movsb
ja
fcomps
mov
mov
aaa
or
xor
outsb
loopne
ret
iret
fsts
xlat
js
mov
cmp
jnp
xorb
out
mov
std
jo
pop
adc
cmp
xor
xchg
loopne
fwait
add
mov
pop
adc
pusha
insl
xor
fidivl
lea
daa
out
cmp
push
les
push
cltd
push
xchg
xchg
imul
hlt
jns
stos
push
and
inc
or
sti
dec
and
outsl
cltd
inc
add
mov
movb
dec
mov
or
scas
iret
xor
ljmp
gs
jmp
or
mov
ret
imul
addl
mov
stos
test
out
int
jg
imul
xor
inc
rol
arpl
mov
stos
in
insb
jns
xchg
stos
leave
xchg
pop
sbb
jl
cmc
aam
push
clc
imul
leave
xchg
pop
sbb
inc
ss
dec
lods
xchg
lahf
dec
adcb
stos
push
and
stos
ja
aad
sub
test
ret
stos
adc
add
push
sub
outsl
mov
shrb
xor
push
aas
ds
addl
insl
mov
loop
inc
push
or
jo
and
push
fs
push
nop
cmpsl
lea
lds
sub
cmpsl
fmulp
loope
lds
leave
cld
nop
cltd
cmp
cli
sbb
push
push
dec
cmpsl
fmulp
loope
movsl
pop
outsb
or
sti
xor
mov
jecxz
mov
gs
push
mov
mov
ret
xchg
test
test
cmp
mov
add
in
test
cmp
xorb
out
call
push
stos
cwtl
push
mov
shl
outsb
jnp
into
fwait
dec
or
sub
xor
pop
adc
clc
push
adc
inc
sub
in
fucom
test
fmul
pop
mov
cwtl
movsl
jns
push
and
stos
ja
aad
sub
test
ret
stos
adc
add
push
sub
outsl
mov
shrb
xor
push
aas
ds
addl
insl
mov
loop
inc
push
or
jo
and
push
fs
push
nop
cmpsl
lea
lds
sub
cmpsl
fmulp
loope
lds
leave
cld
and
fsubl
out
aad
addb
jmp
fcompl
popa
sbb
pop
les
sbb
xor
mov
jecxz
mov
gs
push
mov
mov
ret
xchg
test
test
cmp
mov
add
in
test
cmp
xorb
out
call
push
stos
cwtl
push
mov
shl
outsb
jnp
into
fwait
dec
or
sub
xor
pop
adc
clc
push
adc
inc
sub
in
fucom
test
fmul
pop
mov
cwtl
movsl
jns
pop
incb
ja
jmp
popa
test
mov
sbb
shrb
ret
popa
test
push
inc
jle
sti
adc
aam
pop
sbb
ret
popa
test
mov
sbb
shrb
inc
jle
sti
adc
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
xor
imul
ret
popa
test
mov
sbb
shrb
ret
popa
test
dec
mov
rorl
mov
sbb
shrb
ret
popa
test
push
inc
jle
sti
adc
ds
adc
mov
sbb
shrb
ret
popa
test
stos
and
stos
add
cld
cmp
fdivs
mov
sbb
shrb
ret
popa
test
testb
sub
lahf
push
adc
cmp
fdivs
mov
sbb
shrb
ret
popa
test
cmp
adc
xchg
movsb
or
mov
sbb
shrb
ret
popa
test
mov
sub
stos
imul
mov
sbb
shrb
ret
popa
test
ja
pop
xchg
jge
mov
or
jbe
add
and
popa
test
mov
sbb
shrb
push
fisubrl
shll
xor
adc
mov
add
mov
jecxz
repz
inc
jmp
cmp
or
stos
add
movl
leave
movl
cld
pushf
push
int
popa
xchg
cmp
or
stos
add
movl
leave
movl
xor
push
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
insb
inc
push
je
adc
or
int3
lret
dec
sub
mov
enter
or
mov
repnz
mov
pop
out
mov
fisubs
push
xor
js
sbb
and
adc
movl
sbb
mov
fwait
xlat
sub
lods
shrl
daa
icebp
jo
xchg
ja
jb
lea
daa
loop
mov
data16
pop
jg
jge
pop
ror
xor
inc
out
lret
or
push
dec
popa
mov
sarl
cmp
inc
jns
dec
movsb
jo
pop
sub
lods
add
inc
mov
jl
inc
hlt
aas
pop
and
loope
ret
cmp
daa
xor
inc
mov
jl
ja
sub
es
add
ret
push
pushf
int
xchg
push
sbb
pop
mov
jae
and
cmpsb
add
pushf
add
xor
fnsave
movb
ljmp
fdivl
cmpsb
ss
jg
xorl
or
into
bound
imul
pop
ja
arpl
call
and
leave
imul
fistps
je
in
cmp
xchg
movsb
cs
inc
xor
dec
cld
add
jmp
icebp
jge
pop
stos
cmp
cld
and
enter
mov
xorl
ror
pusha
inc
push
int
in
sub
pop
pop
std
sahf
push
xor
scas
xlat
test
adc
lret
sti
dec
enter
popf
fst
out
jae
fildl
cmp
inc
push
push
mov
loop
out
in
mov
test
test
dec
inc
push
iret
inc
shll
sub
push
shl
mov
lds
xor
mov
in
cltd
das
cmp
aad
mov
or
push
xor
les
adc
sbb
xchg
and
or
jmp
cmpsl
inc
call
jne
fildll
add
push
or
out
sub
pop
lods
jp
cmpsb
popf
mov
adc
pop
xchg
mov
xlat
cwtl
mov
popa
dec
sub
jne
mov
sub
mov
pop
lods
test
bound
stc
ja
mov
scas
and
cmp
pop
mov
mov
or
jae
mov
sub
mov
rclb
int3
mov
xor
mov
adc
icebp
mov
pop
and
jb
and
into
sbb
outsl
pop
xor
jmp
sbb
pushf
and
mov
scas
and
stc
notb
or
ds
and
xor
jle
lods
push
fs
mov
into
push
mov
arpl
out
jno
dec
add
ljmp
adc
or
mov
addr16
xchg
insl
mov
mov
cltd
xor
push
clc
or
jp
dec
out
daa
mov
in
repnz
enter
shll
ret
lds
fildl
mov
mov
mov
ret
sub
push
and
mov
mov
sbb
dec
xchg
pusha
stc
arpl
push
imul
aam
mov
jmp
adc
or
repnz
and
mov
pushf
mov
ss
mov
out
mov
or
test
jmp
or
sarb
ja
push
repz
out
movsb
pop
sbb
push
fistps
add
je
in
sbb
and
into
js
sbb
cmpsl
push
mov
sbb
mov
cwtl
dec
push
dec
adc
xor
and
les
ljmp
or
inc
cmc
inc
or
lret
ss
cltd
mulb
popf
or
cmpsl
lea
in
mov
mov
mov
lods
data16
fildll
test
xchg
xor
iret
sbb
fadd
jns
mov
leave
sub
jp
pop
pop
cs
sbb
scas
sub
sbb
or
dec
xchg
mov
movb
vpmulhw
push
test
or
repnz
and
jnp
push
stos
xor
mov
inc
lea
and
sti
es
push
lock
stc
call
cmc
mov
cli
popf
dec
push
jo
xchg
dec
fs
sahf
sbb
push
ds
jp
xchg
dec
repz
fwait
lea
fdivrl
scas
pop
jb
scas
aam
repnz
nop
push
dec
rolb
jbe
lds
add
fcomps
dec
clc
and
mov
jp
jmp
jne
mov
popf
sub
sub
addl
loop
hlt
imul
or
add
and
rorb
jb
or
add
mov
stos
xchg
std
xor
or
clc
inc
mov
xchg
jmp
test
in
ret
jns
test
sahf
xchg
mov
lcall
fnstcw
jle
lds
mov
out
lock
mov
push
jb,pt
add
movsb
sarl
aam
fnstenv
addb
int
ja
rcrb
orl
dec
rcr
andl
std
dec
cmpb
xchg
jl
lar
test
insl
xchg
mov
xchg
sbb
loope
pop
xchg
repnz
sti
mov
lods
sub
jae
hlt
popf
or
dec
iret
or
or
and
out
dec
repz
pop
sbbb
adc
fwait
jne
mov
mov
mov
mov
out
xchg
pop
jbe
out
cli
and
push
push
movsl
inc
mov
fxch
subb
jp
arpl
dec
js
into
ljmp
dec
push
dec
cmc
dec
push
ret
loope
lds
ret
testb
add
adc
mov
out
nop
arpl
mov
icebp
dec
mov
fsubr
pop
ljmp
mov
call
sub
xor
fistpll
test
xchg
cmpsb
xchg
inc
movb
mov
sti
pop
stc
or
mov
xchg
testl
adc
jg
or
pushf
mov
push
dec
js
jp
aas
popaw
xor
popf
cld
sarb
xchg
jno
daa
movd
push
adc
outsl
in
xchg
xchg
adc
inc
nop
lods
sarl
mov
or
imul
nop
jle
inc
mov
or
imul
mov
push
add
popf
icebp
mov
cmp
in
adc
test
rorb
xchg
jp
or
add
rcll
pop
stos
mov
pop
sahf
imull
in
add
xchg
imul
xchg
inc
inc
mov
pop
adc
sbb
sbb
mov
push
cmc
jbe
in
push
es
mov
cmp
sti
es
cltd
jne
js
add
cmp
and
xchg
pop
pushf
mov
jo
xchg
push
nop
test
fcmovnb
sarl
jnp
sbb
mov
sub
jp,pt
aad
mov
mov
pop
and
push
fistps
cmpsb
into
pop
jle
je
out
outsl
loopne
lahf
mov
shlb
mov
mov
in
mov
cmp
fwait
pop
xchg
lret
aam
jb
and
divl
or
stos
arpl
mov
jae
or
ret
mov
into
in
lahf
xchg
sbb
mov
xor
hlt
and
jp
pop
jb
jg
jecxz
inc
into
mov
gs
xchg
mov
mov
push
movsb
mov
sbb
fistpl
and
fsubs
push
pop
mov
daa
jo
xchg
mov
hlt
pop
jnp
xor
xor
sarb
movsl
movsb
cmpsl
int
idiv
mov
adc
adc
shll
push
jb
int
or
jb
inc
sbb
push
test
cld
cvtps2pi
jmp
test
shrb
pop
imul
dec
mov
mov
add
in
push
sbb
aad
clc
int3
int3
adc
out
sub
sub
test
int3
int3
adc
add
lahf
jmp
sbb
shrb
mov
test
sub
dec
sti
enter
pop
push
mov
or
pusha
aad
jne
mov
mov
mov
xor
out
outsl
inc
dec
pushf
dec
push
mov
repz
fcmovbe
cmc
or
int3
xor
adc
pop
es
cmp
ja
push
test
pop
es
cmp
pop
out
jecxz
test
aam
es
cmp
or
icebp
inc
cld
shrb
mov
fsubr
je
rcr
shlb
cld
shrb
mov
fsubr
je
lock
insb
lret
pop
fisubl
push
fcoml
in
and
inc
adc
pop
lods
sub
sbb
sbb
cmp
mov
mov
jne
mov
push
sub
mov
or
xor
call
or
jbe
pushf
dec
xchg
sub
mov
mov
into
into
dec
filds
jno
cltd
and
cwtl
lods
lret
test
nop
sahf
sub
outsb
rcrb
es
addl
pop
mov
scas
rcrl
out
sahf
mov
push
in
popa
mov
inc
addl
pop
mov
scas
roll
mov
out
xchg
mov
dec
xlat
sub
sbb
dec
mov
ja
add
sbb
jae
jb
ljmp
jl
push
out
hlt
gs
imul
shlb
in
jne
xor
mov
fs
cltd
push
jp
jmp
pushf
dec
cmp
pop
push
call
clc
mov
pop
sti
dec
cmp
pop
push
call
jle
scas
rcrl
stos
incb
mov
jae
sub
mov
loop
imul
int
add
out
cld
sub
icebp
adc
pop
imul
jns
out
jnp
loope
push
sub
mov
mov
xor
enter
adc
mov
sbb
shrb
outsl
and
cli
jle
jecxz
sar
add
js
dec
nop
outsb
loopne
adc
es
pop
sub
cld
pop
lret
sarl
aam
push
je
jnp
lret
inc
add
push
push
mov
cs
in
adcb
movsl
pop
mov
ror
fsubrl
xor
xchg
xchg
xchg
mov
aad
mov
xchg
and
cmc
mov
xorb
test
fwait
andb
ret
sub
inc
push
jae
sti
lcall
pop
std
adc
bound
notl
sub
lret
pop
daa
xchg
jnp
insl
fisttpl
icebp
push
or
inc
xchg
mov
test
sub
mov
lret
popf
js
and
pop
xor
ret
sti
add
cli
jnp
cmp
and
sbb
mov
sti
add
rorb
dec
rep
jne
mov
stos
loop
dec
out
xchg
stc
enter
testb
mov
insl
orb
inc
imul
mov
sbb
inc
fldl
sbb
fimuls
and
sarl
xor
negb
mov
cmpsl
jle
mov
jns
jns
jecxz
adc
push
jge
iret
push
rorl
repz
lcall
dec
popa
xchg
push
inc
xchg
es
cmp
add
leave
add
insl
orb
pusha
inc
mov
test
testl
out
mov
les
jno
sbb
mov
fnstenv
mov
mov
jmp
call
cmp
xchg
pop
cmp
mov
push
lea
popa
adc
push
xor
mov
fbstp
xor
test
mov
pop
pushf
in
add
fildll
arpl
leave
sub
test
enter
cli
sarl
js
enter
pop
mov
add
xor
lcall
dec
inc
push
jnp
adc
pop
in
xchg
in
insb
fnstcw
xchg
aas
dec
insb
test
mov
out
jbe
mov
sub
test
int3
int3
adc
out
sub
sub
test
int3
int3
adc
mov
movlps
add
xchg
imul
andl
fdivl
stos
mov
in
dec
xchg
mov
lock
cltd
xchg
and
push
cwtl
daa
sub
add
mov
popa
mov
bound
push
mov
mov
add
dec
rcl
sbb
aaa
and
cmpsl
jb
std
pop
adc
fidivs
jbe
jno
inc
jg
pop
sbb
xchg
lods
add
test
or
and
mov
call
push
push
mov
jp
ret
mov
dec
sub
fldcw
mov
mov
arpl
imul
scas
dec
cwtl
int
out
cmp
sti
aad
pop
pop
push
scas
sbb
sub
stos
jne
mov
fldt
jmp
mov
adc
fldcw
ret
divb
pop
stos
mov
mov
jno
inc
xchg
pop
or
mov
mov
arpl
test
xchg
aad
xchg
into
jae
pop
mov
fistps
mov
mov
insb
lret
pop
fiaddl
cmp
dec
mov
xrelease
dec
add
cs
shl
push
insl
pop
cmp
xchg
push
ljmp
dec
in
lods
pusha
push
adc
dec
jo
dec
aam
xchg
add
xor
sbb
xchg
mov
sbb
gs
fs
jg
push
pop
mov
scas
dec
inc
aam
dec
push
shr
adc
mov
mov
adc
lea
xchg
and
xchg
push
popl
inc
popf
mov
cmpsb
mov
shl
sub
lock
test
je
ljmp
sbb
mov
pop
sbb
shll
outsl
inc
sub
inc
dec
jo
sub
shrb
pop
adc
xor
jnp
ja
iret
jns
and
push
movsl
int3
loop
mov
aad
jle
outsb
repz
mov
xor
ds
xchg
and
cld
xchg
sbb
imul
stos
mov
fiaddl
mov
fstp
or
scas
hlt
leave
jg
in
cmp
adc
cmp
gs
xor
pop
sbb
or
jge
inc
sar
pop
gs
cmpsb
popa
bound
movsb
sbb
push
push
sub
jp
sbb
cmp
inc
pop
adc
mov
push
pop
add
sbb
add
repz
nop
test
dec
in
clts
push
mov
sub
ret
leave
jbe
lods
pop
adc
inc
fs
sti
or
cmp
ret
jl
jnp
mov
adc
popa
in
push
lods
push
cmp
divb
mov
or
mov
pop
pop
outsb
ja
adc
rcr
mov
mov
inc
dec
imul
repnz
rclb
pop
cs
pushf
mov
lods
dec
cmpsb
hlt
addb
jb
test
push
xchg
inc
pop
xchg
sub
out
or
ret
icebp
mov
out
jle
xchg
and
jecxz
pusha
out
out
add
jmp
fidivl
out
mov
xchg
ret
test
or
jg
sbb
jne
lods
xor
into
lods
dec
mov
inc
mov
gs
push
jmp
int
mov
mov
add
mov
pop
pop
rclb
cmp
nop
sbb
int3
mov
scas
andnps
dec
and
in
push
pop
mov
xlat
adc
push
inc
fwait
aaa
xor
mov
sbb
and
int3
test
xchg
cmpsb
std
pop
add
cmc
jmp
sti
jo
pop
loop
iret
movsl
cmpb
clc
fwait
jmp
stc
xor
lods
cmp
inc
inc
mov
or
xchg
push
push
pusha
push
stc
adc
inc
shr
cmp
rclb
push
mov
pop
movsl
shll
xchg
fwait
aaa
adc
pop
rcrb
cmp
hlt
js
popf
pusha
inc
adc
out
int
les
sbbl
mov
pop
sub
push
lea
xor
push
hlt
mov
imul
jb
jae
into
jnp
sub
addr16
or
xchg
sub
jae
fstpt
in
jecxz
popa
incl
repnz
jne
repnz
out
push
pop
mov
sahf
sub
push
test
or
rorb
cmp
push
into
or
int3
aam
call
push
ret
shll
xor
push
sub
ja
dec
adc
pop
pop
aad
sarb
aad
xor
fwait
and
mov
sub
inc
sar
scas
enter
stos
lahf
in
mov
arpl
pop
push
int
cld
aas
lock
add
or
inc
mov
divb
dec
cmp
fnsave
sub
fldl
pop
adc
dec
ljmp
hlt
pop
xchg
adc
inc
adc
repz
mov
push
sbb
push
mov
xor
rcrb
add
dec
mov
sbb
divl
cmp
xchg
gs
ss
pop
fisttps
bound
xchg
xchg
push
mov
jge
xchg
inc
aas
adc
and
rclb
mov
push
sub
lods
div
sub
decl
idiv
shrb
cltd
sarb
nop
insl
cld
fwait
push
sbb
xor
xlat
adc
push
scas
pop
add
shlb
lds
lods
scas
sbb
fs
leave
cmpsl
pop
add
stos
xor
xor
lret
mov
sbb
xchg
xor
test
jo
mov
jmp
inc
dec
pop
push
out
iret
fs
xor
ss
shlb
and
in
dec
fldt
lds
push
push
ret
into
add
pusha
iret
aas
mov
pop
inc
xlat
stos
out
inc
xchg
insl
push
popa
es
xchg
sbb
ret
in
pop
adc
enter
sarb
dec
and
jge
pop
sub
cli
dec
ret
xchg
test
cmp
pop
jecxz
es
xlat
je
jl,pn
test
cmp
notb
ret
mov
jg
loop
lcall
sbb
and
aad
add
aaa
fldl
add
out
movsl
mov
pop
adc
mov
cmp
fidivrs
or
in
mov
push
aaa
push
imul
jne
in
out
cltd
pop
dec
sbb
pop
aas
and
mov
mov
rcr
sub
fstps
lods
stc
adc
and
jg
push
inc
icebp
aam
cld
repnz
jmp
xchg
sub
stos
lahf
jns
data16
insl
mov
cmp
test
inc
mov
int3
adc
leave
push
rolb
test
cmp
sbb
xchg
push
ljmp
sbb
mov
adc
mov
aad
jnp
scas
subb
repnz
add
in
jmp
stos
and
jbe
in
push
and
mov
not
mov
pop
rclb
ret
mov
stos
test
or
jno
or
inc
mov
mov
out
sbb
insl
aaa
sub
out
mov
mov
jl
jg
pop
push
xchg
mov
mov
xor
adcb
xor
jae
push
push
sahf
inc
gs
xor
das
out
inc
shrl
fmul
cwtl
scas
lret
cmpsb
adc
add
arpl
pop
ret
test
jne
movsl
jne
ss
pop
stos
mov
jg
push
roll
jbe
mov
push
pop
push
dec
jl
mov
lret
imul
xchg
movsl
in
add
mov
insl
js
popa
ficomps
aas
dec
scas
mov
imul
sbb
add
out
loop
stos
mov
incl
mov
stc
clc
jno
hlt
xchg
adc
fistl
push
mov
mov
push
mov
out
add
rolb
ret
filds
fst
call
inc
outsb
addr16
ret
push
sub
leave
or
cld
cmp
mov
jl
out
inc
loope
mov
pop
in
aad
inc
push
mov
jb
mov
leave
in
mov
push
lahf
nop
mov
in
or
xchg
inc
iret
adc
mov
and
push
mov
scas
inc
lret
xchg
adc
mov
lret
xchg
cmp
arpl
jo
call
jl
fstl
push
xchg
push
mov
cmc
shl
adc
clc
jmp
mov
lock
sbb
or
cmp
andl
push
mov
pop
sbb
fsub
pop
fwait
dec
stc
mov
mov
pop
into
btr
in
les
mov
ss
and
iret
sub
sbb
incb
ja
and
sbb
and
xor
push
outsl
lret
lret
insb
mov
xor
pusha
arpl
fdivl
dec
mov
lahf
lcall
shr
mov
enter
lcall
add
imul
xor
cli
fcoms
aam
daa
cmp
adc
test
pop
shl
cltd
std
jecxz
pop
inc
movsl
ret
mov
inc
adcb
sub
lods
mov
inc
fimull
lahf
or
rcrl
sbb
lahf
jg
sbb
inc
lret
and
pop
add
mov
xor
fs
cwtl
mov
sub
incb
mov
outsl
dec
ljmp
pop
out
cmp
sub
xor
sbb
mov
gs
lods
push
vmwrite
dec
cli
movsl
or
xor
jb
je
cmp
test
in
in
add
out
lret
push
pop
icebp
icebp
and
pop
cmp
jg
lds
in
int3
and
jno
xchg
lds
mov
jns
fadds
ret
cmp
pop
ret
adc
pop
mov
lods
js
je
inc
cli
fidivrl
int3
cmpsl
test
or
sub
pushf
push
mov
push
lcall
les
inc
add
add
jno
push
push
rolb
movsl
push
aas
sbb
cld
mov
and
jle
subl
inc
loop
adc
fucom
stc
shr
and
dec
aam
dec
push
dec
jne
sub
sbb
addb
cmp
pop
jns
jns
mov
sahf
xchg
lahf
loop
jne
and
or
mov
cmpsb
sti
cmpsl
js
mov
and
fldpi
pop
mov
add
sahf
mov
out
test
icebp
pop
pop
and
dec
pop
outsb
jae
cmpsl
dec
loope
shrl
inc
jbe
pop
lock
mov
sub
xor
pop
or
and
rcr
gs
rorl
push
cmp
es
sbb
les
out
jmp
add
dec
pop
sti
insl
fstps
sbb
dec
push
popa
xchg
jo
pop
jbe
sbb
sbb
xorl
aaa
mov
test
sub
repz
and
jmp
pop
mov
bound
insl
or
fwait
das
or
pusha
sub
inc
adc
cli
pop
push
andl
sub
sub
jne
and
jo
and
jg
lods
push
fwait
xorl
jb
arpl
push
or
adc
jl
xchg
mov
jb
mov
mov
adc
in
inc
inc
das
loop
pop
js
lds
cmp
cmp
sti
pop
stos
cmp
xchg
and
test
or
inc
cmc
fs
je
sarl
pop
movsb
dec
es
aas
test
decb
add
sub
mov
sahf
stos
add
jl
outsb
out
fdivrs
jo
clc
lahf
or
orl
jno
aam
loope
loop
clc
xor
dec
cwtl
loop
lds
mov
lret
sti
loope
clc
add
aam
adcb
dec
push
sbb
or
mov
sbb
push
pop
aaa
lds
test
sub
aaa
jns
inc
or
hlt
fsubrs
into
xchg
mov
sub
add
dec
cmpsl
repz
into
mov
stos
jg
push
dec
lock
lds
lret
pop
sbb
sub
mov
out
aaa
inc
loopne
cmp
rorb
testb
imul
jo
adc
outsl
mov
mov
inc
sahf
cmc
mov
sbbl
outsl
cmc
jo
cmpb
std
pop
aas
and
cmp
int
movsb
xor
mov
or
filds
xchg
outsl
sbb
cmpb
jno,pt
nop
push
fidivl
fldl
jbe
lods
popa
lods
cmp
add
stos
cld
ja
in
testl
rcrb
lcall
mov
jmp
fcoms
fwait
loopne
inc
in
or
shll
and
out
mov
test
and
push
push
pop
xor
scas
xor
mov
movsl
scas
sar
shrl
or
jae
and
fwait
out
int
fdiv
sub
mov
stc
std
add
int3
insb
loop
add
jp
push
jae
xor
dec
mull
data16
add
pop
add
mov
xchg
and
sbb
shlb
mov
les
lds
orl
sahf
xorb
mov
faddp
cmp
repz
leave
cwtl
jge
xchg
lods
shr
sbb
push
or
jnp
pop
jmp
adc
test
cs
xor
pop
cmp
mov
inc
fcoml
lret
aam
call
xchg
dec
sub
pop
cltd
or
cmp
in
xchg
pusha
push
loopne
xchg
outsl
shl
in
jmp
idivb
je
repz
and
inc
es
dec
hlt
mov
popf
loopne
ss
fwait
lret
jmp
cmp
orl
dec
or
lods
es
jnp
sub
push
out
lcall
mov
fsubrl
dec
in
divl
fisubrs
push
mov
lea
mov
das
jle
daa
adc
fwait
pop
or
sub
mov
jbe
and
in
hlt
jo
or
mov
cmp
xchg
mov
xor
addr16
sbb
adc
pop
pushf
push
pop
dec
mov
adc
cmp
pop
xor
inc
ds
lcall
mov
xor
push
fbld
sbb
loop
popa
out
mov
xchg
mov
push
xor
pop
mov
loopne
jbe
jg
push
in
movsl
sub
pop
push
sub
mov
dec
hlt
bound
pop
ja
or
mov
jbe
jo
push
adc
test
add
idiv
inc
andl
ret
or
movsl
cli
dec
xchg
jmp
stos
cmp
sub
mov
lock
in
dec
add
hlt
insl
push
int
cmp
push
xchg
jge
out
mov
inc
daa
pop
aaa
fmull
in
std
or
es
xor
rclb
lods
test
jne
jae
lahf
popa
into
xor
call
add
adc
insl
sar
mov
cmc
cli
mov
test
aas
pop
push
adc
je
out
mov
lcall
xchg
inc
faddp
int3
pop
and
test
mov
and
mov
in
mov
mov
add
lds
mov
and
jecxz
mov
pop
pop
aam
mov
jb
xchg
jmp
xchg
adcb
cmpsb
mov
lods
inc
neg
lret
jno
or
mov
outsl
scas
lock
aas
dec
out
lock
sahf
je
dec
orl
mov
cmpsl
lcall
xor
in
sub
out
fcom
repz
insb
outsl
inc
das
dec
mov
movsl
lods
and
out
pop
leave
jecxz
call
jns
nop
cmpsb
cmp
cmp
push
int3
sub
xor
or
movsb
mov
or
jecxz
nop
arpl
adc
pop
push
pop
nop
ljmp
out
add
or
leave
or
sbb
int
ret
paddusb
imul
or
xchg
mov
sahf
sub
and
enter
cld
mov
xchg
and
xchg
cmp
lret
outsb
xor
cmp
out
jbe
jmp
push
in
mov
adc
pop
lcall
push
or
jp
movsl
lret
push
xchg
pusha
sbb
popf
loope
and
jmp
push
sbb
lret
add
cmp
das
leave
faddl
mov
xor
add
sub
cmp
out
int3
cmpl
movsb
or
jnp
scas
cmp
push
imul
adc
loop
or
clc
ja
fisubl
in
or
add
mov
dec
or
jmp
xchg
addb
out
dec
jg
testl
jp
leave
rolb
inc
or
mov
jns
mov
cli
loopne
xchg
mov
cmc
sub
shrb
shlb
or
cltd
mov
dec
dec
les
inc
icebp
scas
mov
or
sub
scas
daa
int
cwtl
out
pop
pusha
ret
insb
cwtl
pop
std
sub
jle
sub
add
mov
mov
sub
xchg
cmp
mov
pop
js
jo
mov
lahf
aaa
jl
loop
fsubrl
pop
loopne
inc
lods
and
sbb
inc
loope
mov
cmp
dec
adc
mov
sbb
shrb
in
repnz
xchg
inc
aad
enter
loop
jle
dec
xor
testb
std
fmull
in
jmp
fcompl
popa
sbb
inc
ret
sbb
xchg
pop
add
push
push
jno
loop
xor
pop
xchg
cld
lret
mov
sub
xchg
clc
pop
icebp
leave
repz
jnp
or
sahf
cmpsl
imul
xchg
test
jae
cs
xchg
sbb
outsb
mov
mov
fwait
orl
xchg
xor
xchg
or
push
jp
mov
stos
cmp
jbe
fiaddl
popf
inc
movd
mov
fsubl
push
adc
cmp
jo
insb
adc
inc
xchg
jle
je
push
lcall
or
jbe
stc
sub
adc
in
pop
mov
jp
fldt
lea
int3
sbb
xchg
and
mov
mov
xor
mov
insb
pop
push
add
push
add
popa
jb
test
popa
inc
push
lds
xchg
mov
imul
xor
popa
sub
das
push
xchg
jae
xchg
arpl
mov
mov
pop
xlat
xchg
push
aaa
dec
pop
push
push
inc
hlt
mov
xchg
jle
dec
sahf
xor
cli
ficoms
loop
adc
data16
xor
dec
gs
in
fistpl
jne
es
xor
outsl
sub
sarb
addr16
insb
inc
or
cld
jmp
cmp
xchg
pop
add
outsb
arpl
push
pushf
imul
xor
les
fldt
push
nop
mov
pop
mov
arpl
jge
xchg
pusha
mov
inc
inc
jg
mov
loop
fstpt
lock
cltd
jecxz
xor
xor
ret
popa
test
out
out
movsl
add
cmp
adc
mov
xor
mov
cmp
shrb
mov
scas
xor
jg
pusha
mov
dec
adc
or
sub
add
cli
adc
in
mov
stos
lea
mov
and
jb
in
fcoml
scas
ljmp
pop
pop
mov
xor
ror
movsb
push
jno
fcompl
push
jno
sbbb
das
ret
mov
leave
pop
test
mov
pop
daa
les
cmpsb
stos
mov
mov
movsl
loop
lret
rorb
pop
test
pop
lods
sbb
xchg
inc
stos
fmull
pop
inc
mov
shrb
jl
push
or
addb
or
cmpsl
add
iret
xor
cmp
cmpsb
shl
aam
xchg
xor
sti
mov
test
xchg
push
js
cmp
push
mov
out
xchg
gs
jg
mov
sub
or
sti
fwait
xor
testl
in
cmp
rolb
push
inc
jmp
jl
dec
inc
ss
xchg
sbb
jg
cltd
xor
fxtract
aad
cld
mov
das
dec
enter
adc
pop
cltd
aam
cmc
sahf
sub
mov
mov
xor
push
test
int
or
mov
idivl
jg
adc
int3
pop
xchg
dec
cmpsl
cltd
pop
jecxz
xor
or
mov
stos
inc
insl
cmc
mov
aam
rolb
fildll
pop
int3
movsl
dec
mov
mov
pop
or
in
or
sub
xorl
bndldx
or
jae
and
push
jbe
sbb
add
jp
pop
imul
push
mov
jo
into
callw
das
clc
stos
fiadds
xor
xchg
xchg
repz
push
cld
sbb
insb
stos
aam
scas
roll
add
cmpsl
xor
idiv
mov
pop
shl
xchg
lret
dec
push
push
xchg
xlat
rol
lcall
out
test
pushf
jno
inc
jle
jge
mov
jp
pop
mov
jb
sarl
xchg
les
pop
mov
push
scas
repz
mov
cmp
sub
popf
mov
xor
ljmp
pop
mov
inc
stos
ret
jmp
sbb
sbb
cmc
jg
sbb
mov
pop
sti
sbb
and
push
jge
lahf
xchg
aam
bound
jg
xlat
jecxz
loope
lea
push
test
inc
xor
add
xor
inc
test
leave
ret
or
loope
aad
sbb
xchg
mov
or
movsb
dec
in
lahf
ljmp
xchg
pop
sti
dec
xor
add
nop
push
cmp
movsb
leave
cmpsl
push
cwtl
mov
pop
inc
outsb
sub
pop
loop
stos
cmpxchg
and
in
jge
jns
adc
sahf
xchg
adc
test
add
jmp
inc
mov
pop
xor
lahf
aad
inc
sub
cmc
lods
xor
inc
adc
xor
leave
rcrb
fsub
or
aad
mov
hlt
pushf
andl
mov
inc
mov
pop
in
mov
stos
lahf
mov
aam
sub
pop
xor
sub
int
fdivrl
mov
div
xchg
js
lods
movsl
mov
push
popf
scas
and
push
aam
pop
inc
test
les
loopne
loope
cli
cwtl
outsl
push
rolb
and
or
or
movsl
sarb
jne
xchg
add
xor
cli
pop
ds
fnstsw
call
subl
lea
xchg
push
inc
dec
out
jle
adc
popa
xchg
jmp
scas
mov
leave
mov
ds
stc
js
push
pop
sbb
cs
sti
add
pop
mov
ret
dec
jno
mov
or
or
test
lret
ss
jb
xchg
lahf
in
rolb
push
push
adc
lcall
mov
aas
into
shll
paddsb
sub
out
mov
movsb
xchg
sbb
inc
fstl
adc
dec
lods
lock
cmpsb
jno
xor
pushf
bound
pop
divb
imul
jbe
or
scas
mov
push
popf
frstor
aas
xor
jmp
mov
leave
ds
scas
shl
mov
imul
pop
data16
xchg
aas
inc
imulb
adc
and
adc
push
cs
xchg
pop
sbb
dec
add
jmp
dec
mov
arpl
xlat
sbb
outsb
mov
or
enter
mov
and
add
fimuls
pop
mov
call
and
xor
repz
xchg
mov
inc
rclb
iret
xor
xchg
xor
fxch
jb
cwtl
aad
inc
iret
scas
lret
push
sub
push
xchg
push
stos
aam
jne
push
stc
ss
dec
jmp
divb
aam
mov
loop
repz
aad
ja
push
sub
fisttpl
test
xor
aas
stos
or
sar
daa
adc
les
daa
inc
sti
inc
pop
repz
popl
dec
cli
vpshufd
jp
ja
mov
mov
mov
jp
cmp
in
mov
mov
cmpsl
mov
notb
push
clc
mov
aam
adc
rcll
xor
push
dec
and
aaa
arpl
jbe
out
scas
lret
push
sub
or
pop
xchg
pop
or
fmull
jmp
fnstsw
shll
sahf
jb
sti
pop
lock
mov
mov
push
lcall
push
push
repz
jb
jbe
xchg
jmp
add
mov
push
subl
mov
das
xchg
dec
popa
dec
mov
sti
fdivl
push
js
sub
dec
test
mov
out
dec
insb
into
cs
mov
in
mov
inc
dec
lods
sahf
ret
mov
mov
in
movsb
xor
dec
daa
and
pop
lcall
jnp
mov
pop
xchg
stos
call
je
dec
lea
gs
jmp
jbe
push
addb
das
mov
mov
nop
lahf
jne
nop
test
daa
push
mov
out
ds
dec
lret
cmovg
xor
ret
orl
popa
orl
into
loopne
dec
pusha
stos
dec
mov
mov
dec
mov
cmp
mov
aaa
das
icebp
jge
jmp
int3
mov
test
xchg
add
scas
xor
mov
ja
mov
lret
call
and
push
sbb
shr
mov
and
int
lret
jge
insl
dec
enter
arpl
sbb
cmc
cmpsl
ss
pop
popf
sbbl
push
push
in
sahf
daa
pop
inc
or
mov
inc
mov
pop
test
inc
sbb
into
xchg
xchg
movsb
dec
ret
xor
xchg
push
dec
mov
mov
and
and
sub
outsb
test
and
or
adc
jmp
in
in
dec
das
jg
mov
add
push
cs
xor
sar
xchg
js
adc
jge
push
cmpsb
pop
outsb
cmp
fisubrl
in
dec
mov
out
cmp
inc
insl
cmp
jge
add
insb
testb
lods
dec
ds
sbb
enter
scas
fstps
pusha
adc
test
mov
mov
pop
and
xchg
and
and
shll
add
gs
inc
out
push
add
insl
mov
cltd
pop
std
cmp
pop
call
test
dec
add
inc
cwtl
sub
sub
ss
sub
sbb
stc
std
fisttps
or
imul
mov
enter
mov
sbb
or
in
push
addr16
jl
out
test
loope
and
pushf
dec
mov
outsb
cmc
mov
test
jne
icebp
call
adc
bound
pop
daa
push
cmp
mov
pop
lret
fcomps
rcr
mov
mov
out
mov
jnp
daa
or
int
dec
push
cmp
inc
movsl
sub
push
push
repz
inc
xor
mov
cli
fnstcw
enter
mov
sub
push
aaa
aam
gs
push
xor
sub
test
push
inc
out
mov
ret
imul
cmc
shl
cwtl
ror
inc
jecxz
sar
mov
stos
andl
pop
pop
lods
push
enter
sbb
and
push
repz
mov
jns
cs
repz
or
rolb
repz
fcompl
imul
and
mov
lahf
cs
dec
cmp
add
stos
aad
popa
mov
movsb
xor
mov
fnsave
pop
loop
shll
popf
cmpsl
adc
popf
repnz
jl
negb
pusha
jge
jo
jbe
fnstenv
addr16
fsubrp
repnz
data16
ret
lahf
pushl
iret
jbe
lods
add
jle
inc
mov
pop
mov
mov
inc
xchg
jne
sti
xchg
or
jo
or
sbb
in
xor
push
dec
add
or
ja
ror
push
or
push
xor
lock
cmp
mov
pop
out
testl
addl
rolb
nop
mov
inc
inc
popf
inc
xchg
dec
sahf
inc
pop
pop
push
pusha
in
imul
xchg
jne
incb
jno
aaa
xor
dec
rcr
adc
add
lock
scas
push
sub
test
cwtl
sub
mov
pushf
or
mov
push
jle
lahf
xor
inc
fwait
adc
cs
shll
add
mov
dec
cmp
and
xchg
or
mov
dec
ljmp
xchg
fldt
lahf
xchg
out
jl
enter
mov
test
mov
and
lea
loopne
inc
mov
sahf
pop
pop
mov
stos
sarb
or
inc
bound
data16
push
sti
mov
icebp
nop
pop
mov
test
sub
adcl
cwtl
push
out
cmp
jg
dec
inc
cmp
jno
and
push
inc
fisttpll
jns
adc
in
xchg
orb
mov
ljmp
xor
inc
aaa
lahf
sub
add
mov
sub
xchg
adc
or
jno
scas
fld
push
shrb
xor
fnstenv
mov
lods
jl
push
daa
sti
push
pusha
cmpsb
xchg
cmp
test
int3
cwtl
jmp
imul
sbb
sbb
cli
outsb
push
test
inc
repz
adc
mov
jl
and
dec
jmp
aas
imull
or
daa
push
fwait
cli
fnsave
in
cmpsl
pop
data16
and
xchg
adc
mov
std
jnp
add
cmp
dec
out
and
aas
inc
push
arpl
pop
adc
or
movsl
sbb
dec
and
jbe
lods
pop
add
and
aaa
jg
xchg
repz
add
mov
ret
pop
cmpsl
mov
cwtl
mov
sub
xchg
inc
add
pop
dec
out
pushf
cmpsb
and
adc
adc
test
mov
inc
xor
cmc
inc
sub
movsb
stos
xchg
out
imul
mov
out
jg,pt
scas
lea
inc
cs
loope
push
test
jecxz
cmp
and
mov
int
push
jnp
insl
cmpsb
jmp
aam
orb
sti
jnp
jnp
inc
or
cs
fucom
bound
cmc
push
ds
iret
ja
pusha
push
stos
hlt
add
pop
dec
dec
xchg
sahf
mov
daa
cmp
rcrl
or
test
dec
data16
rcr
cmp
ljmp
imul
jns
out
push
mov
mov
mov
xchg
push
out
jle
cmpsl
cmp
mov
sub
push
pop
cmpsb
test
into
out
sbb
pushf
jb
jo
push
fldt
xchg
jl
jae
jbe
cld
jp
pop
or
inc
dec
mov
and
movsb
iret
fstp
and
inc
mov
out
cs
lahf
ljmp
jle
sub
sub
sub
cmpsb
add
in
sbb
push
inc
inc
leave
stc
enter
xor
lods
xor
add
push
icebp
sub
int
xor
fucomi
jge
jno
mov
jns
lods
push
gs
mov
out
jecxz
jo
andl
mov
mov
aam
or
pop
nop
in
stos
rolb
push
mov
mov
inc
loop
outsl
or
daa
scas
mov
popa
push
es
dec
or
jg
in
dec
cld
lahf
nop
scas
lahf
shl
cltd
outsb
mov
outsl
adc
sub
nop
out
mov
push
out
mov
mov
adc
lea
mov
jno
sar
adc
pushf
jae
lcall
lds
jge
mov
fwait
jno
in
push
push
sbb
fists
mov
cltd
sti
cmpsb
or
shrl
jl
aaa
push
in
xchg
inc
sub
lods
aad
jp
jmp
and
scas
ret
cmpsb
in
fsubrl
and
daa
mov
sub
je
jmp
xchg
cwtl
cwtl
aam
push
daa
stc
push
test
loop
movsb
aaa
mov
or
jae
adc
push
stos
cmp
or
mov
sbb
shr
test
aad
int
rcrb
mov
fnstcw
dec
lret
xchg
cwtl
test
into
lret
inc
lea
mov
hlt
aad
mov
fmuls
lcall
pop
pop
ret
dec
mov
xor
scas
shrl
fdivr
test
add
jae
lret
aam
aaa
add
and
jg
mov
pop
push
dec
xchg
or
je
jl
pop
sbb
dec
jne
data16
xchg
in
jl
pop
adc
cwtl
sbb
add
mov
mov
lods
and
dec
out
lods
adc
bound
hlt
xor
xor
jae
scas
inc
sahf
cmp
sbb
dec
int
test
and
bound
aas
add
sbb
cmpsl
add
pop
lods
sbb
cmp
clc
repnz
pop
into
leave
enter
xor
xor
or
sub
pop
sub
jae
cltd
sub
adc
lahf
pop
inc
ror
lock
xchg
mov
stc
jge
pop
xor
mov
adc
xchg
ret
mov
ret
dec
dec
xchg
adc
cld
sahf
outsb
xchg
cmp
xchg
add
sub
mov
aas
cwtl
push
dec
mov
fstpt
xor
imul
cmp
mov
pop
ljmp
sahf
ret
and
je
int
add
std
int3
and
js
xchg
push
push
jnp
mov
jnp
jnp
jecxz
inc
sub
nop
pop
dec
jae
dec
xor
push
cs
cmc
mov
inc
and
test
cmp
jecxz
fisubs
and
dec
xchg
int
outsb
push
dec
cmpsl
push
in
jmp
mov
fimull
push
xor
inc
dec
test
mov
jne
mov
push
push
aam
sbb
aad
outsl
sub
sbb
mov
push
daa
pop
js
aad
shrb
push
mov
sbb
add
sbb
jmp
pusha
hlt
and
mov
test
dec
fwait
leave
cmpsl
push
mov
div
lahf
sbb
adc
insb
dec
adc
out
das
dec
cmc
and
sub
sahf
ret
jb
das
cli
cld
movsl
cmpl
xor
subl
shlb
or
scas
repnz
sub
and
int
mov
cs
stc
mov
fists
mov
mov
iret
mov
dec
jae
enter
pusha
or
fisubrl
jmp
or
sbb
jmp
jg
in
orb
inc
call
pop
iret
jp
adc
push
xchg
sbb
xchg
push
gs
or
or
push
stos
adc
ds
jno
inc
jbe
stos
nop
adc
and
fadd
ret
adc
sbb
cmc
sub
jbe
jns
sete
pop
sub
dec
aas
xor
xor
mov
adc
daa
xbegin
jne
pop
jge
xlat
cmp
outsb
inc
fisttps
lcall
mov
pushf
in
dec
push
xchg
dec
jge
mov
cs
aam
fcoms
fistl
fcmove
adc
xchg
push
sti
insl
mov
push
xchg
jnp
mov
ja
pushf
in
cwtl
addr16
sub
out
aaa
dec
push
jno
in
into
push
pushl
and
ds
repnz
jo
popf
pop
pop
cmp
xor
mov
shl
lods
add
test
push
roll
mov
popf
or
mov
shrl
mov
dec
mov
cmp
shll
lret
and
push
jo
into
pop
adc
jns
push
mov
cs
and
sbb
data16
pusha
or
ret
cli
pop
outsl
jns
ds
ds
das
lret
or
andl
adc
jae
addl
insl
mov
sarb
dec
out
icebp
es
pop
sub
sub
ja
cmp
push
inc
adc
jl
jno
popa
js
fisubl
sub
pop
and
dec
or
stos
sbb
repz
cli
div
aam
insb
mov
or
inc
or
mov
adc
push
mov
lcall
mov
mov
scas
sbb
xor
aad
aaa
mov
jb
mov
and
xor
inc
sbb
scas
sub
add
cmp
call
xor
jecxz
ds
pop
mov
inc
in
mov
and
repz
sbb
fucomip
xorl
shll
adc
and
cs
inc
shlb
or
add
sub
test
mov
nop
cld
sub
jecxz
fucom
jecxz
aaa
mov
aas
insb
out
mov
inc
and
add
mov
or
jmp
sub
mov
pop
inc
xlat
xchg
gs
mov
rclb
mov
jmp
jmp
je
mov
test
test
fdivs
mov
enter
pop
enter
lock
dec
and
es
push
fbstp
test
cwtl
sbb
imul
pushf
push
data16
jmp
cwtl
movl
imul
pop
cld
imull
push
je
fcmovnbe
mov
mov
push
cli
stos
pop
cmc
mov
mov
mov
mov
add
leave
push
add
cmpsb
pop
dec
adc
out
xlat
movsl
cmp
lcall
add
sbb
call
lock
dec
sahf
enter
jno
out
adc
aam
xchg
xchg
sbb
push
and
dec
pop
dec
jbe
push
mov
mov
xchg
jne
mull
mov
jecxz
movsl
in
mov
add
and
adc
sbb
in
xchg
or
movsb
mov
sbb
pop
enter
mov
imul
pusha
mov
jns
jecxz
cmc
xor
xchg
add
fisubrl
jbe
sbb
std
leave
aaa
push
sbb
cmpsl
jo
xchg
dec
out
test
mov
outsl
jle
inc
xor
clc
sub
or
mov
imul
movsl
std
ds
xchg
dec
incl
jp
sti
jmp
ss
icebp
sbb
jno
movsl
cmp
cwtl
pushf
stos
mov
mov
subl
dec
addr16
nop
shll
aam
orl
addl
xchg
pushf
jg
xchg
push
nop
push
shrl
enter
cld
cmpsl
out
push
test
test
xor
pusha
pop
iret
mov
add
aam
mov
je
sbb
movb
loopne
mov
or
aad
repnz
scas
lret
jne
inc
pop
sarb
cmc
negb
mov
fstl
sbb
inc
ficomps
cmovae
sbb
js
push
movsb
cmpsb
push
jle
cltd
rol
add
jl
in
movq
sbb
mov
daa
mov
daa
sbbb
xor
cmp
xchg
cli
je
cmp
sti
mov
cmp
push
fidivs
mov
fcompl
adc
sbb
sbb
and
add
scas
mov
ss
mov
mov
rclb
jg
outsl
outsl
insb
lret
sub
xchg
sbb
push
cwtl
scas
mov
dec
loop
lret
jbe
fidivrl
pop
mov
rolb
mov
add
fstpl
mov
movb
pop
mov
inc
adc
xchg
cmp
jp
and
mov
outsl
mov
mov
cmc
jg
adc
test
sbb
cmpsb
pop
pusha
xor
and
cmp
inc
push
out
mov
push
xor
add
movsb
sbb
mov
push
push
data16
ja
jl
repnz
daa
aaa
mov
lock
in
xchg
adc
jp
stos
push
std
les
mov
imull
inc
lahf
loope
mov
in
inc
sbb
mov
jmp
mov
pop
in
sti
jle
or
sub
add
mov
hlt
pop
or
lahf
inc
mov
mov
mov
or
mov
loopne
stos
bnd
outsb
xchg
adc
nop
insb
daa
scas
fnstcw
pop
xor
pop
les
and
std
ss
xchg
fsub
jne
insb
sbb
mov
je
hlt
cs
pop
push
xor
sub
mov
mov
jle
pop
add
sbb
sahf
push
sbb
push
mulb
mov
je
or
sub
push
rcll
bound
jb
sbb
lods
push
iret
adc
xor
rcrb
dec
leave
sbb
sbb
lds
pushf
jmp
scas
add
lret
and
negb
jbe
sub
mov
mov
push
mov
inc
scas
in
mov
inc
out
test
jnp
aaa
jbe
or
cld
in
out
sub
pop
xor
cmp
add
sub
mov
fmull
jecxz
inc
sbb
xor
sbb
add
es
cmp
xchg
aaa
adc
sti
mov
imul
dec
pop
sub
sbb
add
and
mov
ret
call
test
sub
inc
sbb
push
fs
stos
cmpsl
fs
loope
test
test
outsb
cmp
nop
aaa
ficompl
loope
push
inc
push
mov
outsl
mov
aas
jne
jo
fimuls
or
mov
in
and
js
jns
ss
in
shll
roll
fbld
and
xlat
jg
push
lds
xchg
sub
jle
scas
pushf
and
imul
push
lds
and
out
stos
shlb
fwait
lock
in
and
pop
inc
ljmp
mov
pop
pusha
pop
jg
jns
lds
in
arpl
and
nop
mov
and
or
dec
fnstsw
inc
andb
push
adc
popf
insb
scas
lods
inc
pusha
loop
mov
fs
xor
int
push
or
ljmp
mov
not
xor
loope
adc
out
push
gs
sub
sbb
push
lcall
lds
mov
pop
inc
sub
ja
pop
pop
out
sbb
int
jle
ffreep
enter
das
repnz
lds
call
inc
out
das
std
add
adc
jne
jbe
ret
inc
sahf
jbe
pop
mov
daa
fstpt
add
stos
push
xor
scas
loope
push
cmp
mov
in
sub
lahf
xchg
jnp
adc
push
or
scas
data16
mov
andb
in
add
jne
lret
in
leave
dec
cmp
lods
mov
xchg
es
and
jmp
push
xor
sahf
sar
mov
inc
pushw
in
mov
mov
xchg
insl
pop
mov
jmp
xor
cmp
mov
decl
fsts
dec
cmp
aam
lret
pop
mov
jb
pop
fs
mov
lret
push
or
sub
mov
mov
daa
xor
pusha
out
xor
pop
mov
fidivl
xor
les
add
mov
pop
sub
mov
aaa
sub
xchg
into
cmp
xor
xchg
lods
fmull
rclb
arpl
or
lods
std
jg,pn
je
gs
push
test
add
and
cld
xchg
pop
int
sbb
add
pop
sbb
aaa
sub
in
hlt
mov
in
xchg
loope
pop
sahf
sub
cmp
cmc
outsl
push
stos
sub
in
sub
cmp
lret
mov
ds
call
fidivs
out
push
ljmp
inc
dec
fnstsw
inc
subb
lock
bound
fisubrs
jmp
push
out
mov
push
aad
lret
mov
outsb
in
cmpsb
rcrb
int
push
clc
jne
fmul
sbb
jge
js
out
test
std
iret
xchg
sub
fxch
in
loop
aam
push
mov
lds
or
and
in
adc
js
xchg
mov
lcall
adc
js
sub
push
scas
cmp
js
jmp
outsb
sbb
mov
sbb
imul
cmpl
nop
loope
fbstp
sahf
je
sbb
iret
push
or
pop
mov
sahf
push
ja
sbb
and
cmp
daa
mov
adc
inc
lret
rcrb
test
shl
sub
or
sub
xchg
popf
sbb
lock
imul
cld
sbb
jecxz
lret
sub
mov
fdivr
and
mov
mov
fbstp
and
test
int3
int
ja
shlb
iret
add
mov
adc
and
inc
mov
lds
inc
xlat
dec
mov
dec
cltd
scas
not
jp
inc
push
subb
jo
jecxz
sub
inc
scas
test
pop
aaa
pop
mov
lods
stos
in
and
inc
insb
addb
insl
and
mov
stos
in
push
add
test
pop
dec
imul
add
or
xor
xor
push
mov
jae
add
fucomp
mov
enter
mov
in
inc
movsb
aad
ljmp
jp
adc
int
outsl
inc
push
mov
insb
pop
loope
add
jl
push
mov
add
inc
outsl
mov
push
add
mov
repz
mov
stos
push
fisttpll
mov
aas
sbb
outsl
test
cs
imul
incl
fldt
popf
in
sbb
xor
mov
xchg
leave
mov
sub
fsubrl
mov
mov
pusha
mov
and
icebp
sbb
cmp
lahf
xchg
xchg
sub
test
mov
push
negb
push
addr16
dec
mov
jle
xlat
stos
scas
lods
lods
sub
addr16
cs
in
jl
xchg
pop
mov
in
and
adc
jg
or
and
aaa
das
cmp
test
out
fcoml
ds
dec
iret
mov
test
jle
icebp
push
fadds
es
aad
inc
pop
dec
jmp
mov
subl
sahf
push
ret
jge
inc
xchg
arpl
jmp
xchg
cmpsl
xor
push
push
hlt
adc
mov
mov
shlb
in
xchg
test
aad
aaa
pop
inc
mov
or
push
je
les
cwtl
jbe
ficomps
jnp
popf
push
xchg
mov
add
adc
cmp
mov
or
popf
inc
sub
xchg
pop
out
frstor
outsl
mov
fwait
insl
jl
sti
push
sti
aam
or
adc
push
cmpsb
lret
xchg
sbb
fstp
adc
ljmp
sahf
mov
les
test
movsb
outsb
incb
leave
or
aaa
xchg
sarl
mov
ret
out
cltd
xchg
stc
jno
aad
ja
sub
xor
jecxz
jmp
jle
inc
cmp
pop
ljmp
sarb
sbb
inc
lret
test
and
push
sub
sub
das
fs
lahf
mov
out
int3
ss
cmp
lret
sbb
popa
decb
iret
psubusw
pop
jmp
loop
sti
sub
push
push
inc
sbb
scas
xchg
inc
dec
mov
int3
in
cli
inc
lcall
xlat
in
cmpsl
lret
pop
imull
xor
xor
pop
int
sub
sbb
mov
sar
mov
push
inc
or
and
dec
jge
pop
rclb
clc
and
or
xor
push
xchg
lods
scas
lock
cltd
repnz
mov
ja
adc
fs
xchg
jno
test
add
lods
in
out
mov
aaa
adc
cmp
rorb
mov
jbe
and
orl
icebp
xchg
adc
test
mov
pop
iret
shr
adc
es
mov
jbe
add
cmp
xchg
inc
arpl
cmp
inc
jne
daa
incb
push
outsl
xchg
push
dec
inc
rolb
shlb
dec
cwtl
clc
xchg
lods
xchg
pop
out
hlt
dec
jbe
cmpsl
push
sbb
leave
cmpsl
pop
lret
pop
xchg
xor
cmp
mov
es
pop
lock
jle
out
into
add
or
pop
inc
mov
cmp
repz
cli
cli
sub
aad
cmp
scas
and
out
testb
dec
out
or
lcall
xchg
in
cli
and
fsubp
ljmp
out
inc
dec
aam
pop
push
aas
lods
cmp
push
xchg
shrl
ds
sti
jmp
inc
clts
xor
cmp
loop
lret
fildl
cmp
imul
aam
mov
mov
mov
or
das
mov
jl
mov
push
in
loop
push
push
fsts
xor
dec
pusha
ret
or
mov
push
mov
or
jbe
jo
xor
xor
jmp
cmp
fdivrl
enter
int3
jnp
test
stos
cmp
jmp
xchg
jbe
ja
push
xor
ficoms
or
jo
enter
arpl
out
jne
push
sub
data16
daa
and
pop
mov
les
clc
popa
cmpsl
adcb
out
xchg
inc
gs
lods
fdivl
mov
push
call
dec
repnz
clc
sti
mov
stos
clc
movsb
clc
or
add
jae
inc
sub
rcl
lcall
mov
or
je
or
lods
or
mov
pop
push
aas
push
dec
push
into
outsb
mov
xlat
inc
adcl
pop
cwtl
and
jns
sub
icebp
or
fcomps
dec
mov
arpl
pop
jmp
fcoms
cltd
call
js
or
cltd
repnz
mov
popf
test
add
dec
pop
nop
subb
pop
shlb
aam
mov
ret
sti
inc
push
je
jb
mov
mov
rolb
ret
jmp
sti
and
mov
and
shr
adc
mov
add
dec
movsl
adc
jae
adc
shl
test
sbb
popf
mov
outsb
rcrb
lock
sbbb
inc
mov
shll
mov
jae
insl
cld
xor
ljmp
cmp
insl
cmpsb
xor
into
lock
rcr
jns
jle
dec
orb
xor
dec
adc
sti
sub
pop
adc
jmp
sbbl
in
test
es
xchg
outsl
sub
sbb
cmpsl
stos
pop
ret
lock
inc
sub
testl
int
insl
dec
mov
ret
loope
js
jge
and
inc
jmp
add
stos
jae
inc
mov
mov
pop
xchg
add
lods
scas
jb
fistl
fldenv
pushf
sub
int
mov
adc
pop
dec
int3
fcoml
popf
and
out
jp
mov
push
gs
dec
and
or
int
aad
push
lret
adc
adc
scas
jno
out
cmpl
jnp
mov
push
push
and
negb
sub
xchg
insb
fcompl
divb
lds
fidivl
lea
ret
jg
fiadds
xor
jg
mov
xchg
imul
xchg
push
cmp
push
xor
sbb
pusha
inc
inc
cmp
mov
inc
mov
aad
xor
lock
xor
leave
scas
inc
enter
or
inc
ja
push
and
jmp
pushl
push
push
xchg
in
adc
add
insb
jbe
pop
sub
stos
dec
sbb
and
es
mov
gs
stos
insl
in
std
xchg
out
xchg
jl
clc
xchg
inc
dec
lea
xchg
lret
mov
jbe
sahf
lea
repnz
mov
mov
ss
dec
daa
loopne
lods
es
push
mov
sbb
inc
sub
orl
popa
mov
mov
dec
sbb
leave
xor
adc
in
adc
mov
enter
push
ss
add
jl
push
sbb
aas
out
mov
dec
mov
imulb
and
cltd
out
jg
push
iret
repnz
or
mov
mov
dec
xchg
adc
stc
xlat
in
jb
mov
sbb
mov
repnz
call
lcall
sbb
shlb
xchg
pop
aaa
mov
movsb
sbb
adc
jns
ds
stc
adc
jmp
add
add
adc
sub
lock
test
nop
sbb
sti
or
lods
pop
call
push
pop
xor
xor
sub
std
cmpsl
push
cmp
loope
inc
inc
adc
je
mov
test
dec
fbstp
test
scas
pop
leave
jne
mov
lahf
mov
xchg
ljmp
dec
jnp
jg
ret
stc
sti
popf
popf
mov
das
lods
cmp
xlat
sti
cli
iret
popf
lret
mov
sahf
aaa
or
jno
mov
cmp
in
mov
inc
jmp
adc
popf
arpl
push
cmpsl
aas
lret
stos
push
fnstenv
jmp
out
ficoms
adc
or
xlat
xchg
mov
lds
js
dec
sti
mov
cmpsl
icebp
aas
or
fxtract
aam
sbb
and
xchg
test
inc
cli
sub
popa
mov
fnsave
mov
mov
mov
dec
mov
arpl
dec
dec
xor
mov
mov
loope
roll
sbb
inc
jge
xchg
adc
fidivl
fwait
jae
sarl
test
dec
xchg
outsb
or
xchg
pop
mov
mov
int
push
pop
je
std
and
cld
lret
inc
cmp
mov
dec
push
rol
ljmp
ret
loope
add
sbb
inc
sub
adc
repz
push
mov
fwait
and
and
adc
enter
lahf
and
pop
and
ret
aam
stc
aam
jg
les
mov
lods
mov
sarb
decb
lahf
xorl
and
dec
mov
gs
jp
stos
add
push
loope
popa
add
daa
inc
push
mov
ljmp
inc
repnz
fcoml
addr16
stc
lret
pop
inc
cmpsb
std
repnz
lds
inc
or
scas
xchg
in
jae
sbbb
rcll
add
ret
or
jnp
pop
sbb
mov
sbb
outsl
stos
shlb
mov
je
rclb
cmp
xor
mov
mov
sub
adc
fcomi
xchg
fucomp
aad
jge
clc
mov
sbb
fwait
cs
adc
ja
fs
arpl
ret
inc
mov
cmpb
cmp
aad
fisubrl
sahf
cmp
out
adc
inc
je
cmc
inc
mov
out
add
adc
jb
loope
repnz
repz
jp
outsb
addr16
stos
call
and
incl
pop
cmc
xchg
enter
mov
dec
push
dec
jle
sbb
mov
and
mov
imul
outsb
out
mov
mov
inc
mov
xchg
pop
adc
inc
ds
pop
xlat
inc
xchg
inc
pop
dec
xchg
sub
mov
mov
test
add
lahf
gs
fdivrs
or
push
movsl
inc
push
cmc
inc
int3
or
xchg
lret
pop
jmp
cmp
adc
adc
xor
std
sti
pushf
pop
cmp
lds
pop
imul
xlat
shll
xchg
insl
fistpl
popf
in
lea
shrl
sub
sub
ja
test
xor
jbe
incl
leave
imul
pop
jne
mov
mov
add
jae
adc
inc
mov
push
lea
fisttpl
push
test
daa
rclb
mov
into
xor
mov
nop
mov
or
repnz
adc
test
mov
test
lret
cli
adc
sub
cmp
jno
and
cltd
stos
idiv
add
andl
or
sub
std
mov
into
sbbl
imul
adc
stc
outsl
xor
pop
in
cmp
jmp
roll
repz
scas
stos
sbb
add
lea
outsb
push
test
adc
cli
jle
gs
cs
clc
sbb
pusha
adc
mov
lahf
mov
out
sbb
and
jnp
das
dec
sub
cmp
dec
movsb
aad
sbb
push
fisubl
iret
cmpsl
jbe
or
mov
mov
out
add
add
xlat
repnz
jge
jnp
lea
sub
fmuls
aas
in
das
pop
adc
hlt
xor
jo
pop
adc
pop
push
jns
movsl
pop
je
ficoml
ret
cs
movsb
inc
inc
loopne
jne
jnp
push
xchg
dec
fnstsw
enter
inc
int3
jecxz
clc
pop
in
test
imul
dec
xchg
in
mov
push
adc
outsb
fs
mov
jae
pop
and
and
cmp
jns
xchg
cmp
lods
rol
cmpb
mov
fs
lret
scas
lcall
aam
int
in
cmp
or
ja
mov
and
stc
gs
dec
xchg
cld
loop
out
xchg
scas
inc
xchg
subb
stos
jns
add
jno
cmpsl
loope
pop
call
pop
and
jno
dec
add
xchg
arpl
mov
and
loope
mov
leave
insl
xor
adc
push
mov
xlat
jge
sbb
xchg
add
mov
mov
aaa
mov
or
stc
ret
xchg
dec
hlt
pop
dec
jp,pt
outsl
mov
imul
insb
xchg
data16
imul
or
push
pop
adc
mov
cmp
loope
cmc
xor
cmc
mov
cmp
sti
nop
mov
jns
daa
cmp
lock
in
scas
jnp
push
into
dec
jecxz
cwtl
pop
xchg
dec
inc
inc
imul
inc
insb
xor
inc
call
push
xor
in
fdivrp
push
mov
outsl
sahf
rolb
les
dec
and
sub
je
repnz
int
les
aaa
mov
mov
dec
addl
fdivl
loope
outsl
insl
cli
jl
cmp
out
push
cmpsb
call
repz
fwait
scas
enter
lods
add
add
ficompl
orb
push
in
jmp
push
xor
pop
arpl
nop
test
stc
cmp
mov
ds
pop
mov
push
lret
loopne
xchg
sub
push
xchg
imul
insl
popf
push
daa
fs
and
xchg
cmp
test
out
mov
test
sti
mov
and
in
into
mul
jne
lods
rclb
pop
test
cltd
push
xchg
xor
or
das
inc
fimuls
shrb
adc
lret
iret
jo
jb
in
or
mov
cmc
xor
mov
cmp
out
mov
je
fildl
push
lods
ret
flds
or
subl
inc
mov
xchg
frstor
das
jge
mov
jns
mov
jb
movsl
fsubs
rorl
ljmp
cmp
loop
aad
int3
out
aaa
loopne
sbbb
mov
xlat
inc
mov
ret
neg
and
popf
out
add
fld
adc
ficoml
test
loope
outsb
cli
mov
jae
gs
imull
add
push
test
sbb
push
pop
jmp
mov
or
clc
and
test
push
or
je
add
pop
out
push
dec
pop
jnp
mov
adc
pop
leave
aam
hlt
std
jl
imulb
jecxz
cs
cmc
orl
shrl
ret
mov
mov
add
mov
inc
cmpsb
dec
ret
stos
adc
inc
mov
fistpl
mov
cmp
and
inc
sub
adc
mov
jae
and
xor
or
mov
gs
in
into
mov
mov
outsl
sub
insb
push
stc
add
push
addr16
out
xor
mov
gs
inc
into
nop
push
sub
les
mov
xchg
inc
jbe
lret
add
lock
xchg
fisttpl
jnp
ds
daa
xchg
std
idiv
addb
mov
stc
mov
stos
mov
cmp
inc
and
je
in
inc
mov
xchg
bound
mov
fidivl
inc
pop
enter
cmp
or
ja
outsl
dec
int3
push
int
into
push
pop
add
push
jg
adc
insl
loopne
sbb
add
fildl
adc
scas
jmp
jno
js
stc
jge
ja
xchg
xchg
ret
lods
push
iret
xor
inc
ljmp
xlat
push
mov
adc
cmpsb
iret
insl
rolb
ds
add
or
imul
pop
or
sti
add
ljmp
aaa
out
sbb
insb
xor
in
js
jle
sub
adc
inc
mov
inc
xchg
dec
jbe
data16
loope
and
xor
jnp
push
es
xor
roll
fnstsw
inc
sbb
add
loopne
xor
in
movsl
or
dec
aas
and
adc
arpl
push
repz
cmp
cwtl
in
mov
pop
popf
repz
sbb
cmp
adc
int3
dec
mov
subb
add
int
andb
fxch
xchg
sbb
mov
fildll
cwtl
xor
aas
mov
int3
hlt
ja
xchg
repnz
pop
mov
sbb
out
jae
jle
imull
fcmovb
shl
fstpl
inc
inc
mov
dec
movsl
das
inc
mov
movsl
je
sub
mov
cmp
sub
mov
dec
aam
inc
and
mov
call
daa
outsb
or
cltd
and
cmp
mov
mov
dec
icebp
jb
fnstsw
and
mov
cmp
mov
loopne
dec
sbb
scas
stos
sub
jle
jge
shrl
aaa
negl
cmp
les
jne
or
std
enter
sbb
xchg
and
out
dec
sar
mov
popf
mov
mov
jo
adc
xor
mull
add
leave
fdivl
mov
pop
fnstsw
cmpsl
push
xor
int
or
lods
or
rorb
jbe
pop
dec
sbb
pop
and
sbb
mov
gs
and
jl
int3
adc
lret
clc
pop
gs
cmc
ret
push
xchg
jb
andb
insl
mov
loopne
dec
sbb
inc
mov
testb
jmp
push
xor
les
jne
or
cmpsl
inc
cmp
lods
test
add
jle
mov
jnp
sub
jns
mov
sahf
add
cmpsb
mov
fnstenv
mov
jns
or
inc
aad
pop
outsb
lods
ret
xchg
sbb
sub
xorl
adc
adc
pop
or
dec
dec
lds
pop
push
cwtl
xchg
xor
mov
pop
pop
adc
fstpt
aas
leave
push
scas
testl
out
movsl
jp
mov
xchg
xor
pop
inc
sbb
mov
push
xchg
mov
xchg
push
add
cmp
mov
add
xlat
prefetch
gs
in
inc
or
loop
cs
and
push
loopne
lahf
inc
ret
push
jmp
push
popa
fwait
shrb
lock
add
cmp
push
insb
loopne
cli
cmpsb
jmp
adc
lcall
jmp
pop
loop
cmp
jl
inc
xchg
xor
mov
mov
daa
xor
in
ret
test
movsl
pop
into
sbb
arpl
fidivrl
pop
lock
stc
sbb
add
icebp
jne
mov
dec
movsl
add
aad
xchg
xchg
cld
lock
inc
stos
bound
adc
es
pop
movsl
nop
lds
mov
mov
dec
sbb
push
shll
imul
inc
in
loopne
jmp
mov
push
idivl
pop
out
xor
pop
xor
cli
inc
popf
mov
pushw
jmp
pop
xor
test
fstpt
movsb
ds
mov
mov
sub
testb
loope
jle
rorl
lret
mov
das
scas
xorb
jb
or
rcrl
rcrl
cwtl
dec
pop
mov
lds
addr16
xor
sarl
jnp
sbb
in
xor
sahf
stos
fisubl
pop
cs
addr16
adc
push
and
push
pushf
and
pop
xchg
cltd
xchg
jecxz
inc
add
mov
sbb
mov
pop
out
pop
adcl
dec
sub
and
jne
push
and
popa
sub
mov
nop
adc
js
lods
ja
repnz
xor
xchg
adc
ret
test
sbb
jo
sbb
add
xchg
or
scas
mov
cmp
ret
arpl
lds
adc
xor
jmp
add
test
notl
mov
push
rcl
xor
add
push
cmp
and
jbe
mov
in
xor
jg
sbb
orb
or
add
les
sub
out
push
insb
xchg
call
insb
aad
jnp
mov
lods
cltd
jb
sbb
scas
inc
or
jno
cltd
pop
jle
arpl
push
xchg
out
outsl
shrl
imulb
xlat
psrlq
adc
jne
inc
imul
jge
mov
loopne
push
ficompl
push
mov
jae
jge
fs
jle
dec
out
lock
cmc
push
xchg
stos
rorb
popa
mov
imull
push
std
xor
and
ret
shrb
mov
cwtl
fdivs
fdiv
xchg
push
and
in
sahf
rol
and
inc
push
mov
dec
leave
xor
adc
insb
aam
aas
les
cmc
xor
mov
das
les
or
and
inc
xchg
sbbb
mov
mov
icebp
dec
jae
push
cmp
stos
cmp
mov
xchg
adc
add
out
aas
bound
repnz
mov
adc
adc
jmp
std
aas
xor
xchg
lods
pop
adc
xchg
movsl
int
mov
jl
add
mov
in
mov
mov
ja
push
mov
adc
lock
push
ror
mov
out
mov
data16
imul
or
mov
mov
in
int3
insl
xchg
fbstp
jmp
addr16
adc
popf
sub
dec
sub
stc
push
ret
cmp
in
xchg
mov
adc
jmp
jg
icebp
cwtl
fstp
and
xchg
and
fstpl
cmpsb
pop
lock
xlat
imul
sarl
lods
pop
fistl
movsb
pop
inc
sbb
xor
sbb
movsb
fdivl
vmaxsd
fwait
in
insb
adc
mov
add
push
pop
jge
ds
xchg
outsb
or
ret
andl
mov
nop
shlb
sarb
test
jecxz
cmp
mov
and
xchg
mov
fldenv
xchg
lahf
scas
and
xor
push
push
cld
aam
ljmp
data16
loop
adc
pusha
adc
add
jne
fidivl
dec
movsl
roll
loopne
jge
andl
cmc
sbb
fdivs
sub
cmpsb
fistpll
neg
cwtl
test
sbb
repnz
adc
mov
adc
sarb
scas
sahf
fstpl
mov
inc
mov
and
dec
ret
adc
fsubr
call
ret
push
orl
aaa
cmp
in
popf
inc
mov
insl
das
out
jle
xor
jne
push
mov
sbb
fs
cltd
pop
jae
sub
mov
pop
fcmovu
mov
dec
cmpsb
mov
push
addb
pop
xchg
pop
push
sub
sbb
cmp
je
sbb
xor
scas
inc
pop
pop
inc
mov
sub
push
sub
out
fwait
sarl
push
push
ljmp
sarb
ja
fisttpl
ja
cmpsl
clc
in
ss
cwtl
sbb
cmpsb
dec
xor
pop
add
pop
xor
dec
mov
xchg
stos
mov
xchg
push
pushf
dec
pop
les
jecxz
mov
int3
loope
lock
add
mov
outsl
mov
rcrb
test
adc
loopne
mov
lds
add
jle
imul
je
pop
sub
fsubrl
aaa
xchg
mov
data16
jne
pushf
dec
sub
fs
je
mov
jno
cmc
pop
push
dec
dec
loop
jmp
xor
sub
fsubs
lods
cmp
xor
pusha
pop
pop
push
iret
fwait
jbe
dec
xor
and
xchg
roll
aad
push
or
aas
rcl
inc
mov
int3
add
mov
popa
ret
lret
sub
out
repnz
dec
pop
jb
jg
dec
cmp
test
pop
push
movsb
xchg
and
call
jmp
sahf
mov
inc
test
or
xchg
filds
mov
fadds
cld
or
mov
inc
add
ja,pn
stos
lods
stos
inc
dec
test
sbb
lahf
data16
pop
negl
jecxz
in
lahf
or
push
sar
adc
inc
sbb
mov
sub
mov
sub
mov
clc
nop
test
aaa
push
insb
and
pop
ljmp
daa
cs
or
sti
aaa
lret
mov
jo
or
adc
mov
cltd
ljmp
xchg
cmp
xchg
ds
aam
cmp
pop
hlt
mov
aaa
sbb
aam
ret
xchg
cmpl
pop
out
pop
add
adc
das
js
add
in
aad
cmp
mov
stos
test
dec
xor
xchg
fldcw
lods
jo
pop
push
int3
xor
lods
mov
outsl
or
sub
and
or
mov
cmp
jg
or
popf
or
push
inc
xchg
in
aam
jle
pop
out
cmp
pusha
nop
pop
lret
mov
sbb
cli
arpl
xchg
das
faddl
ds
fs
inc
hlt
dec
lahf
dec
cmp
insl
push
ret
and
leave
stc
mov
xor
cmp
add
fdivrs
mov
sub
insb
or
xor
mov
xor
inc
test
pop
dec
aad
mov
adc
xchg
or
and
push
xor
enter
outsl
popf
push
mov
xor
jns
xchg
les
call
bound
inc
dec
and
push
movsl
cs
push
push
outsb
jecxz
pop
lcall
push
les
daa
and
addr16
pop
in
outsb
or
xchg
mov
or
xchg
out
jo
movsb
fldl
nop
stc
aam
mov
xchg
arpl
cld
cmp
sahf
ficompl
cmp
push
mov
insl
shlb
lcall
gs
mov
sbb
cmc
mov
and
cmc
into
cmp
out
push
lock
cmc
aaa
insb
mov
clc
movsl
jmp
pop
sub
and
call
in
lods
adc
pop
mov
lds
dec
pop
ljmp
inc
push
test
inc
cld
loopne
jo
push
les
add
adc
ljmp
rcrl
fisubrs
jns
push
xchg
rolb
inc
pushf
push
fisubs
xor
push
enter
pop
push
imul
or
pop
sbb
lock
testl
rcl
push
sbbb
out
sbb
adc
outsl
ret
mov
xchg
or
lahf
inc
pop
movl
mov
pop
jne
adc
das
adc
fwait
sbb
add
fwait
pusha
scas
jne
outsb
pop
mov
hlt
imul
push
mov
mov
cmp
adc
mov
mov
insb
out
mov
std
push
in
mov
sub
mov
cmp
sub
add
rorb
jmp
out
or
jg
mov
jo
sub
adc
imul
loope
sub
push
stos
cmp
fs
scas
jb
add
push
sub
jne
leave
int3
mov
gs
jl
ja
test
mov
xor
call
or
dec
xchg
add
lods
lods
inc
sbb
mov
push
out
mov
push
test
aas
cmp
fsubs
out
dec
test
lea
xor
add
add
sbb
mov
inc
adc
mov
rclb
clc
and
je
jae,pn
iret
imul
push
push
cwtl
in
lret
push
enter
xchg
outsb
push
hlt
inc
js
sbb
test
rclb
jg
insb
mov
mov
repnz
out
insb
into
clc
in
mov
int
and
xchg
add
ret
call
mov
rcrb
ret
ss
mov
dec
push
mov
sbb
adcl
xlat
in
aad
push
pop
cltd
mov
xchg
ds
sbb
jbe
jb
add
aam
inc
sub
ljmp
xchg
jge
pusha
rolb
imul
addb
pop
cs
and
lret
jne
pop
in
pusha
lahf
je
repz
repnz
dec
mov
xorb
imul
adc
jl
push
inc
mov
iret
mov
or
insb
popa
cmc
jg
and
popf
or
mov
adc
dec
sahf
xor
ss
adc
out
or
and
inc
jae
pop
jmp
pop
lods
xchg
and
test
pop
sub
icebp
std
icebp
pop
stos
pop
mov
cmp
mov
jnp
cmp
daa
add
pop
xor
movsb
mov
xchg
daa
pushl
std
sbb
push
xor
arpl
push
enter
push
lcall
jge
insl
jns
jns
test
mov
jmp
xor
sub
sbb
and
ret
mov
sbb
cmpsl
mov
pop
push
inc
iret
sbb
mov
mov
mov
sub
std
dec
loopne
mov
sbb
inc
in
xor
inc
dec
xor
fwait
adc
fistpll
aad
in
les
repz
ror
mov
jae
mov
adc
sti
ljmp
ja
dec
mov
lret
mov
pushf
enter
pop
icebp
mov
pop
daa
sbb
adc
outsb
adcl
out
xor
cmpb
push
push
dec
dec
enter
inc
imul
cld
cmpsl
jns
imul
xchg
aaa
mov
lahf
jmp
ss
push
rcll
repnz
sbb
push
into
fisttpl
jmp
mov
push
xor
popa
nop
add
add
xorb
mov
add
push
scas
test
stos
pop
or
dec
inc
add
sbbl
dec
pop
add
xchg
negl
and
push
inc
cld
mov
inc
pop
pushf
iret
gs
sahf
push
mov
push
adc
sbb
movsb
loop
mov
mov
hlt
fbstp
shll
mov
into
push
ret
test
test
adc
icebp
adc
les
fimuls
dec
fimull
sub
add
stos
mov
addl
ret
push
sub
dec
cld
fcoms
or
mov
shrb
mov
sub
icebp
ret
sub
cmp
cmpsb
out
ds
sub
xlat
xchg
dec
out
dec
std
pop
out
into
into
sub
fildll
lret
cmpb
sub
add
cmp
mov
add
icebp
or
repnz
or
and
insl
or
cmp
sub
pop
xchg
pop
sarl
pop
mov
movsl
ljmp
add
pop
mov
pusha
fsub
cmovp
rcrb
cmpsl
pop
inc
cli
jo
add
add
push
movsb
and
jne
mov
scas
adc
jmp
dec
sti
mov
lock
xchg
push
repnz
and
jns
lock
shll
lds
jb
cmp
jmp
add
sbb
jo
mov
inc
jl
mov
and
test
out
adc
sarl
sahf
xlat
fildll
pop
mov
xchg
lock
daa
ret
lods
sub
outsl
cmp
in
out
inc
leave
repz
aad
add
pop
ljmp
stc
xor
push
pop
ret
lds
mov
add
mov
inc
ds
xchg
cmp
icebp
mov
pop
loope
fsubr
add
loope
xor
mov
mov
mov
cmpsl
icebp
mov
mov
out
frstors
push
mov
scas
push
add
adc
gs
ss
stos
stos
add
daa
push
outsb
gs
push
les
daa
in
in
inc
adc
mov
cmpsl
es
ss
push
leave
leave
push
adc
dec
and
sti
test
sbb
adc
in
sub
leave
or
jae
stos
pop
xchg
inc
mov
test
mov
es
xchg
popa
mov
aam
jl
aam
dec
cmp
adc
sbb
add
xor
mov
adc
es
pop
movsl
jge
aaa
push
xchg
jle
lods
int3
fs
mov
mov
into
mov
outsb
ljmp
pop
jne
pop
dec
push
xchg
call
mov
out
dec
shl
sub
jmp
add
jns
push
jns
pop
mov
and
mov
jnp
sub
add
pop
lods
ljmp
rorl
in
sbb
jg
inc
leave
lea
mov
pop
in
adc
pop
sub
rolb
test
stc
mov
jne
icebp
lcall
inc
int
push
aaa
scas
push
adcb
push
add
dec
lods
pop
xchg
imul
shll
movaps
ror
enter
push
jne
loopne
cwtl
and
test
imul
das
mov
or
fs
scas
inc
dec
dec
mov
sub
shrl
imul
shr
shl
imul
xchg
xchg
daa
scas
xchg
jge
sbb
hlt
outsb
clc
sub
movsb
jae
push
xchg
out
divb
pop
out
fistl
inc
movsb
mov
xor
iret
lret
and
dec
cmp
xor
jae
cs
fsubr
mov
mov
adc
mov
pop
adc
stos
or
les
jae
testl
inc
mov
adc
mov
pop
lahf
clc
fcomp
dec
mov
scas
mov
jle
popf
mov
add
push
lea
outsl
xchg
pop
pop
mov
stos
push
loopne
in
adc
in
scas
sar
notb
mov
adc
in
repnz
mov
jp
jp
movsl
dec
lea
cmp
lds
jle
sub
pop
fld
sti
sub
mov
mov
xchg
addr16
cld
nop
fs
mov
mov
mov
jo
lods
ret
dec
inc
dec
jae
push
aas
enter
test
popf
cmpsb
mov
lcall
sub
jg
mov
ret
jbe
mov
movb
pop
imul
test
mov
scas
mov
and
xchg
xchg
lods
inc
mov
cld
pop
mov
pop
xor
dec
loope
addl
icebp
fidivrl
movsb
xchg
fs
loopne
and
ret
pop
lods
in
dec
mov
inc
ss
ja
sub
xchg
add
or
mov
std
movsl
mov
xor
bound
ljmp
mov
xor
xor
cmpsl
cmp
push
icebp
cmp
ds
mov
into
and
les
subl
mov
int3
xchg
shll
mov
sbb
outsb
popf
out
mov
add
jnp
inc
sbb
pop
inc
cmp
dec
xor
xorps
cmp
jl
call
sub
cwtl
inc
nop
je
dec
lcall
mov
mov
aam
cmpsb
cmp
push
clc
sbb
inc
fnstenv
pop
xchg
jo
leave
inc
roll
pop
inc
sub
je
call
dec
push
mov
xchg
or
das
inc
cs
les
fimuls
movsb
jl
arpl
mov
lret
test
sub
rolb
mov
fistl
pop
push
icebp
pop
sub
loopne
jno
les
fadds
sbb
ljmp
mov
jg
push
mov
push
dec
sbb
ds
ds
jle
add
scas
and
lea
jae
mov
xchg
push
test
test
fstl
sub
mov
mov
test
xchg
mov
data16
repz
scas
add
cmovge
lret
jnp
mov
aad
call
cmp
cs
subl
in
sbb
add
push
lret
loopne
jp
pop
mov
add
cmp
inc
or
dec
or
aaa
push
repnz
sbb
sub
push
insb
loopne
in
cmc
dec
dec
dec
cli
push
mov
js
les
out
js
inc
lahf
mov
outsl
in
mov
mov
fstl
lds
xchg
test
push
cmp
scas
aas
pop
in
cmc
rclb
push
mov
jae
lods
ljmp
in
stc
popf
sub
adc
xchg
and
iret
xchg
inc
mov
mov
adc
std
xchg
jmp
inc
cli
jle
adc
push
xchg
jle
lods
int3
pop
test
jmp
divl
sub
popa
fcoml
mov
call
cmp
jae
loope
adc
leave
adc
cmp
fs
jge
xor
test
xchg
in
ljmp
aam
inc
cmp
dec
das
jecxz
rcrb
das
add
jnp
loop,pn
pop
sub
mov
cmp
setae
addr16
fwait
jbe
ret
dec
das
jmp
xchg
xchg
cli
xor
dec
cmp
pusha
dec
adc
lds
xchg
xchg
clc
mov
les
imul
into
fildl
push
mov
mov
dec
daa
adc
sbb
xor
cltd
pop
push
fimuls
jp
lcall
les
mov
mov
aaa
outsl
sbb
jae
outsb
push
mov
cmpsl
push
iret
mov
xchg
fldcw
cmp
imul
sub
out
aad
xchg
daa
inc
fisttpl
pop
pushf
mov
cmp
cmp
adc
fstpl
add
aam
inc
sub
leave
add
mov
pop
mov
ret
test
adc
or
mov
jmp
and
dec
call
mov
add
cmp
jg
xchg
mov
lret
push
mov
jno
adc
inc
jg
ret
test
adc
and
mulb
std
adc
scas
xchg
loopne
inc
pop
inc
push
or
mov
loopne
js
fbld
mov
jae
stos
mov
push
mov
aad
jmp
cmp
jne
ja
mov
mov
jle
ljmp
nop
pop
out
mov
or
xor
jb
dec
inc
xchg
das
std
xchg
dec
andl
incb
repnz
adc
inc
fmull
lret
lret
shlb
xor
mov
call
cmp
repnz
mov
jmp
pop
pop
jge
ljmp
lret
jg
cmpsb
ret
into
ds
filds
pop
fxch
leave
sub
in
jno
xor
cmp
lret
out
inc
xor
loopne
cmp
aam
mov
pusha
imul
mov
mov
jge
lahf
mov
mov
mov
repnz
push
mov
xor
xor
scas
mov
fsub
leave
pop
adc
inc
inc
xchg
mov
and
outsl
lods
cmp
mov
mov
pop
cli
enter
adc
inc
call
lea
enter
dec
rclb
sbb
ss
xor
movsl
xor
addb
sbb
std
cmpsl
adc
xchg
dec
fs
addr16
cwtl
mov
xchg
test
out
aas
dec
lods
es
out
push
lods
jl
or
je
bnd
mov
mov
pushf
and
loope
mov
lahf
add
xor
loop
into
movb
bound
xor
rcrl
jno
enter
dec
lcall
sti
or
and
repnz
xchg
retw
ret
popa
cld
pusha
jnp
xlat
mov
sarl
bound
lret
mov
mov
adc
mov
adc
dec
loopne
add
mov
sbb
dec
insb
clc
dec
lods
xchg
addr16
jb
lock
push
test
outsl
dec
out
xor
aas
mov
pop
cld
mov
pop
sub
mov
fsubl
push
pop
test
sarb
je
mov
aaa
pop
ja
inc
push
js
or
lea
das
popa
and
loopne
xchg
push
std
pushf
testb
sahf
cli
or
scas
loop
into
pop
lret
pushf
test
test
pop
cmpsb
ja
xor
leave
mov
scas
jg
fnstsw
aad
jmp
push
adc
shll
sub
push
sub
lds
inc
pop
ja
mov
jg
test
pusha
dec
mov
dec
dec
xor
mov
adc
pop
cmp
movsl
fildll
mov
ret
mov
add
and
out
shlb
inc
cmc
cmpsb
outsb
inc
adc
push
sub
out
dec
or
sti
fwait
sbb
adc
cltd
push
dec
add
bound
adc
mov
mov
xchg
jbe
aad
sub
pushf
mov
mov
push
stos
xchg
sarb
es
aad
and
and
aam
mov
lret
mov
fcoms
jbe
xchg
loop
ljmp
inc
lods
xchg
cmc
loope
xchg
fisubl
sbb
mov
leave
mov
jp
js
mov
push
dec
mov
icebp
pop
mov
push
in
adc
cld
scas
pusha
push
pushf
cmp
sub
pop
sub
jo
jmp
rclb
jae
xchg
mov
cmp
xchg
lock
out
push
add
and
pop
jle
inc
mov
cmpsl
add
imul
mov
nop
push
xorl
dec
leave
sub
jmp
mov
cmp
daa
das
cmp
push
adc
inc
adc
jle
xchg
out
add
jne
ss
jnp
push
push
xor
dec
add
cltd
sarb
test
sub
dec
adc
lret
add
scas
jg
push
sbb
cmpb
and
outsb
jl
jp
test
xchg
mov
add
movsb
imul
shll
mov
popf
js
aad
out
cmpsl
loop
pop
and
addr16
xchg
jns
jnp
push
cmp
dec
pushf
sub
xchg
aad
loope
jns
pop
jge
xor
aas
sbb
leave
loop
push
call
aad
dec
jecxz
sub
hlt
nop
std
mov
add
push
mov
movsl
stos
and
jnp
and
int3
hlt
lods
fisttps
push
push
jmp
loopne
daa
mov
int
inc
push
adc
jb
clc
int3
in
xchg
cmp
dec
cwtl
and
xchg
adc
jp
cmp
das
out
or
jl
push
push
scas
xchg
ds
lahf
cmp
jge
fists
xor
xor
mov
ja
push
lock
and
lds
shlb
push
mov
sub
and
lds
cmp
fcoms
aaa
cmp
fdivs
inc
cmp
jbe
pop
ja
xor
call
mov
and
out
stos
shr
inc
scas
mov
mov
push
fistpll
cmc
es
cs
fcomps
sub
xor
clc
sub
dec
cltd
cmp
jno
mov
xor
std
pushf
or
shll
arpl
in
push
out
mov
sahf
ret
mov
popa
call
jecxz
lahf
mov
sahf
or
xchg
cmc
jmp
dec
stc
push
jle
sub
pop
ret
jo
add
cmc
imul
fwait
mov
xor
test
pop
sub
mov
arpl
scas
or
clc
jns
in
and
cwtl
int
mov
les
cmpsb
mov
lds
int3
mov
sbb
stos
movsl
imul
sbb
aaa
mov
lods
adc
lock
cmp
sub
ret
xor
loope
ret
pop
or
sbb
ret
push
mov
stc
aas
call
mov
scas
jnp
aaa
mov
mov
add
mov
aas
fnstenv
test
aad
sbb
add
cld
lret
shlb
and
into
xor
adc
fs
daa
sub
mov
pop
fidivrs
adc
mov
pop
addr16
shll
cli
in
push
je
popf
int3
shll
frstor
add
lcall
mov
stos
cmp
pop
add
fcmovnb
cmp
pop
dec
movsl
lea
testl
mov
mov
mov
or
lock
test
mov
and
and
fsub
push
sahf
pop
push
cltd
adc
jo
pop
movsb
mov
jae
pushf
mov
adc
xchg
shrb
das
negl
daa
cli
lret
dec
out
jne
dec
mov
int3
sub
cmp
sahf
es
faddl
cwtl
daa
into
and
sahf
dec
sub
fs
mov
insb
popf
pop
jmp
mov
out
push
adcl
cmp
inc
js
and
jle
mov
popf
fprem
inc
into
sub
inc
out
ficoml
fidivs
jg
popa
mov
add
push
aam
iret
mov
loop
or
mov
dec
pop
js
fwait
mov
lock
frstor
repnz
out
neg
mov
adc
dec
adc
or
aad
jl
sbb
jl
pop
push
mov
and
cmpsb
iret
xor
idiv
cli
pushw
movsb
jg
icebp
lcall
jb
ss
jmp
int
jl
stc
jns
xor
pushf
insl
jg
rcll
xor
sub
es
cmp
and
xlat
jecxz
inc
jle
loop
add
movsl
adc
mov
xchg
pop
sbb
test
mov
push
nop
cld
int
js
into
jg
dec
mov
rcll
out
aaa
or
mov
add
jno
loop
scas
insl
mov
lret
ret
add
fnstsw
test
movsl
adc
out
xchg
cli
ss
scas
sbb
mov
sti
call
push
test
or
out
cwtl
ljmp
xchg
enter
stos
incb
movsl
pop
mov
and
ret
or
imul
outsl
hlt
aad
sub
add
repz
sub
repz
push
push
mov
or
and
mov
mov
nop
xchg
jbe
hlt
xor
scas
push
or
sub
push
jmp
std
inc
pop
sub
icebp
std
icebp
pop
stos
lret
jne
jge
xchg
test
inc
gs
gs
add
sti
int3
cmc
dec
adc
gs
aad
jmp
mov
rcrl
enter
gs
jns
dec
push
xor
je
push
data16
push
repnz
stos
fidivrl
loopne
cwtl
addl
sbbl
mov
in
sub
lods
mov
xor
xchg
call
xor
and
mov
sub
je
mov
mov
movsl
aas
in
jmp
cs
jge
and
lods
mov
in
pop
cmp
lcall
lahf
inc
ficoms
mov
sub
add
inc
das
cmp
dec
jns
mov
jne
lcall
xchg
inc
lea
add
shrl
or
test
imul
inc
inc
jg
mov
outsl
xor
daa
leave
inc
out
mov
sub
push
mov
imul
adc
cmp
sbb
aam
dec
or
inc
adc
push
aas
mov
neg
mov
lret
inc
mov
and
outsl
mov
or
inc
ror
ja
push
mov
and
jns
scas
xchg
jmp
sbb
inc
cwtl
sub
and
je
jo
aaa
je
lea
or
mov
pop
andl
test
adc
icebp
aaa
mull
loope
push
pop
shl
or
adc
lock
lea
idiv
mov
dec
mov
xchg
xchg
dec
fstpl
jbe
jle
mov
pushf
cli
push
sub
cmc
cmp
inc
daa
leavew
fs
mov
rorb
ss
sbb
js
js
shll
mov
mov
mov
movsl
dec
pop
stos
mov
mov
inc
xor
inc
push
cli
call
dec
movsl
fwait
dec
push
fidivs
out
mov
xor
adc
ja
out
dec
xorb
jb
and
and
in
or
lahf
lods
push
dec
les
cmp
loope
mov
mov
lahf
mov
sub
add
dec
mov
jle
in
jno
icebp
stos
adc
adc
inc
add
pop
xor
das
sbb
lea
fsubrp
mov
and
loopne
cmp
inc
rcrl
mov
xor
lods
push
clc
push
sahf
imul
pop
scas
xchg
repnz
cmp
sti
cmpsb
jl
test
shrl
pop
test
das
sub
stos
nop
adc
cmp
mov
xchg
insl
in
ret
ja
gs
adc
adc
das
sbb
inc
cs
int3
shr
test
sub
adc
and
jp
int3
mov
dec
sub
mov
pushf
loop
test
cmp
pop
ffreep
inc
cmovae
or
mov
sub
fadd
dec
adc
mov
fninit
orl
cmp
inc
or
je
ss
sarl
and
or
imul
jp
mov
subl
mov
dec
std
and
ds
je
scas
adc
inc
cmc
xorb
add
arpl
xchg
sarl
test
xor
in
push
outsl
lahf
and
stos
rcrb
xlat
mov
ss
in
adc
push
clc
push
xor
inc
out
mov
fwait
xor
and
inc
push
mov
jp
add
xchg
sbb
add
je
ja
or
sbb
push
ja
cmp
xchg
add
stos
sarb
shlb
or
call
scas
pop
in
sub
std
lea
lret
sub
movsb
iret
test
xchg
std
jmp
pusha
scas
aad
sbb
orl
sbb
out
nop
inc
adc
xor
cs
pop
mov
out
pop
imul
jns
sar
push
dec
inc
jle
nop
inc
lods
jno
mov
aas
ss
add
fwait
xchg
push
inc
lods
mov
cltd
mov
in
out
push
leave
js
subb
loop
loop
mov
mov
or
mov
adc
ret
mov
adc
clc
xchg
lods
scas
out
pop
int3
and
cmpsb
dec
das
and
mov
adc
dec
inc
sub
jecxz
and
xor
std
inc
mov
fwait
sbb
pop
dec
xchg
add
pop
and
fistl
out
into
adc
and
sbb
das
icebp
pop
pop
ja
jg
ds
mov
sbb
inc
mov
out
xchg
les
outsb
clc
adc
add
pop
test
sbb
lods
inc
mov
add
add
fwait
int
lret
fisttpll
sub
test
cltd
push
push
sti
pop
mov
js
pop
scas
xchg
add
push
or
mov
jg
sub
cmp
out
pop
daa
and
xchg
fisttps
aad
sub
xor
push
nop
lods
sbb
sub
gs
out
jae
lods
cltd
in
jo
daa
pusha
mov
outsb
insl
ficompl
or
filds
ds
cmpl
or
aaa
mov
mov
and
cmp
xor
sbb
push
aad
idivb
and
jl
push
cmp
ds
jge
in
ss
xor
lea
imul
lretw
and
mov
sbb
sub
cmp
ds
push
mov
pop
cmpsl
aam
daa
sbb
popa
sbb
push
dec
mov
push
pop
pop
push
je
andl
test
dec
mov
push
insb
mov
int
xchg
or
frstor
mov
lcall
out
or
mov
sbb
sub
pop
ljmp
and
xorl
inc
jnp
push
inc
cmp
or
sbb
insl
cmc
sbb
pop
adc
mov
jbe
dec
mov
mov
outsb
cmovb
aas
sub
out
js
outsl
stos
mov
scas
xor
loop
pushf
sbb
add
aas
and
push
test
lret
mov
pop
out
mov
xchg
fnstcw
scas
xchg
shll
xor
jle
cmpsl
mov
in
jmp
cmpsb
fmul
jo
mov
ds
xchg
es
out
xor
stos
stc
cmp
mov
loopne
mov
pusha
push
shlb
arpl
orb
fadds
andl
cwtl
lcall
scas
push
inc
xor
mov
scas
dec
cmc
lods
mov
int3
or
int
mov
and
push
push
outsb
pushf
shrb
push
cmp
das
adc
mov
mov
and
sub
lods
scas
and
inc
into
adc
mov
mov
mov
test
xor
and
pop
jae
mov
xchg
daa
or
arpl
jecxz
mov
ret
es
add
jmp
jg
sub
out
cmpsl
mov
jno
mov
outsl
or
fs
out
sti
xchg
mov
aas
xchg
jge
push
mov
in
popa
jns
int3
in
iret
mov
je
rol
repz
xchg
imul
scas
gs
outsb
and
xchg
push
cmc
stos
cmp
fwait
cli
int3
lret
icebp
dec
fcmovu
sbb
mov
lock
aam
xchg
cwtl
and
mov
jns
fdiv
or
push
ret
xorl
test
test
push
cmp
mov
mov
insb
nop
pop
push
ja
bound
ficoml
xor
push
aaa
inc
lcall
push
stos
dec
into
cwtl
inc
adc
icebp
loope
push
daa
inc
call
dec
jns
out
jno
cmp
test
test
imul
jle
dec
sbb
and
pop
inc
mov
sub
xchg
or
mov
jmp
mov
jecxz
fbstp
outsb
outsb
lahf
xor
int
out
je
call
adc
orb
hlt
add
fldcw
arpl
mov
cmp
jl
xor
repz
dec
mov
sub
mov
xchg
loopne
lock
scas
js
jo
fisttpll
jg
mov
push
icebp
aaa
in
dec
mov
pop
add
xchg
mov
shl
fldt
or
movsb
fxch
push
mov
xor
mov
jl
iret
mov
ss
push
push
adc
ret
fwait
sub
sub
xchg
popa
movsb
std
jns
jmp
inc
pop
lods
loope
xorl
ficoms
aam
dec
mov
mov
xor
mov
das
add
sti
pop
mov
and
pop
das
dec
out
dec
pop
xchg
and
and
cmp
hlt
pushf
jns
push
lods
sti
outsb
xchg
call
sub
push
inc
leave
loopne
jge
push
mov
sub
push
pushf
cmc
add
xchg
sbb
sahf
dec
filds
mov
cmp
ss
adc
xchg
inc
add
lods
and
call
adc
push
inc
add
sub
pop
cmc
shrl
mov
inc
in
loopne
cwtl
ret
rolb
stc
out
lods
lods
jg
out
sbb
jl
cmpsl
cmpb
or
mov
imul
mov
sub
fsts
pop
stc
pop
cmp
push
stc
adc
push
cmp
xchg
aaa
lods
sbb
adc
pop
dec
mov
xor
push
cmp
sub
es
scas
in
mov
bound
mov
repz
xlat
jg
cs
mov
inc
sub
xchg
push
dec
shrb
out
neg
and
push
inc
hlt
inc
or
xchg
mov
and
movsl
lods
mov
jecxz
sbb
ja
push
repnz
mov
xchg
je
lds
lret
pop
cmp
scas
popa
pop
sbb
jle
or
outsl
test
stc
iret
mov
dec
arpl
faddl
bound
in
adc
dec
sbb
push
insl
clc
in
push
sahf
mov
jo
inc
dec
repnz
sti
pusha
repz
clc
lret
out
sbb
nop
fdivs
cwtl
pop
bound
cmp
mov
ljmp
lods
out
dec
das
jae
jg
xor
adc
or
inc
adc
inc
or
in
icebp
mov
shrb
arpl
dec
push
lea
adc
sahf
mov
bound
cli
int3
jne
repz
mov
aam
in
or
rorb
ret
std
sbb
jle
inc
jbe
inc
sti
xchg
fstpl
popa
rcll
popa
mov
lea
adc
xchg
lods
mov
sti
aad
call
leave
jg
fidivrl
cld
ja
dec
mov
sbb
inc
addr16
scas
cmp
mov
and
fnstsw
imul
push
add
aas
shrb
jecxz
in
push
ja
sbb
pop
push
dec
cmp
push
jmp
mov
loopne
popf
or
fcomip
jecxz
inc
hlt
mov
test
cmp
or
push
ret
cmc
or
or
loopne
sbb
or
adc
pop
jl
fnstsw
xor
scas
xchg
mov
loop
mov
mov
test
and
xor
cmp
sbb
daa
pop
cmpsb
mov
xchg
pop
mov
mov
sub
out
sub
mov
out
mov
es
aam
mov
xchg
loopne
movsb
pop
fs
imul
add
jp
pop
mov
cmc
mov
xor
imul
adc
cld
cmpsb
outsb
fsubrs
push
adc
sbb
aas
mov
in
nop
stc
insb
dec
call
fsubs
and
dec
aas
pusha
sarl
adc
mull
jo
adc
adc
aaa
int
outsb
pusha
ds
pop
je
das
add
in
fsubs
push
repz
mov
scas
cli
push
fidivrl
in
fistl
loopne
sub
and
mov
addb
inc
repnz
or
dec
movsb
test
xchg
mov
mov
sbb
jg
jmp
pop
mov
loop
or
mov
test
dec
aaa
lret
lods
xchg
lea
xchg
jbe
clc
push
das
and
repnz
loope
adc
pop
sub
loop
add
adc
mov
sbb
sbb
mov
scas
out
ja,pt
adc
stos
xchg
or
adc
mov
add
and
or
ret
inc
adc
jge
aam
push
ds
or
fs
fwait
test
in
push
out
pop
iret
fcmovnu
pop
inc
fidivrs
mov
ss
test
out
mov
dec
iret
adc
movsb
js
ss
xchg
out
sbb
stos
fcomi
cwtl
sub
movsl
scas
repz
jg
push
pop
sbb
test
adc
test
movsb
dec
inc
push
mov
cs
add
or
mov
dec
xor
setl
adc
adc
or
lea
push
cmp
shlb
aaa
add
mov
imul
adc
out
sub
adc
jmp
mov
pop
pop
mov
call
inc
push
insl
cwtl
xchg
scas
mov
je
lret
and
loopne
cld
fadds
add
testl
jns
lea
push
andl
jmp
fwait
pop
mov
lock
das
or
cs
adc
test
xor
adc
cmpsl
enter
mov
and
dec
orb
cli
mov
mul
stos
repz
mov
data16
dec
jae
in
popa
mov
pop
dec
sti
int3
insb
adc
jg
push
xchg
mov
fnstenv
scas
push
lcall
inc
movsl
cs
mov
jge
push
adcl
add
ja
ret
xor
gs
loop
jbe
ret
repz
jae
and
fistl
xchg
fnstenv
jg
shlb
repz
lahf
pop
push
add
xchg
movsl
add
stc
into
scas
push
clc
loop
push
adc
mov
test
out
loop
divl
add
jae
into
pop
loop
adcl
mov
add
leave
test
add
cmpsb
lar
mov
loop
xchg
repnz
shll
jp
enter
or
ret
mov
cli
adc
fcmovnb
and
loop
aas
or
sub
ja
mov
dec
cmp
insl
jle
push
lahf
or
jle
lret
dec
fildll
loopne
or
jp
sti
and
sub
jecxz
jle
adc
lea
enter
pop
cs
jne
lock
sbb
mov
stc
jne
fucomi
jo
mov
lea
xor
mov
iret
enter
jb
popf
and
loope
pop
push
dec
test
jnp
mov
sbb
aad
cs
adc
xor
imul
ja
jb
arpl
push
mov
add
sbb
mov
out
fwait
inc
cmpsl
es
mov
lods
inc
dec
cmpl
mov
push
mov
jmp
and
jecxz
pop
mov
pop
rcrl
imul
fcmovu
frstor
push
out
lea
cli
insl
pop
lods
lahf
fwait
and
std
cmpl
cmp
xchg
push
cmpsb
mov
cltd
aam
ljmp
inc
loope
jns
dec
mov
inc
sbb
mov
enter
ss
jecxz
or
nop
pop
xchg
ret
sbb
loope
add
sbb
pusha
insl
dec
out
and
mov
andb
int3
mov
push
xor
outsb
inc
jecxz
mov
imul
movsb
outsl
test
xor
insb
test
out
mov
mov
cmp
lods
aad
in
push
add
adc
mov
incb
inc
or
dec
push
scas
in
and
inc
loope
cmp
pop
fnsave
mov
cmp
xchg
inc
push
lahf
xor
xor
adc
sbb
jnp
ss
xchg
out
std
xor
out
rolb
xor
jno
xor
ljmp
into
rolb
mov
jbe
cmpsb
movsl
sbb
xlat
jg
xor
pusha
movsb
movsb
jp
dec
add
pop
xchg
fadd
pop
out
ja
xchg
repz
xor
fbld
sbb
inc
push
xor
aas
pusha
xor
and
mov
adcl
jo
pop
jl
adc
in
cld
fisubrs
push
mov
pop
aaa
xchg
lods
int
std
sub
push
shll
xor
pop
mov
movsb
inc
int3
fcmovne
cli
dec
dec
divl
xor
xlat
push
fdivl
and
test
jns
aad
adc
dec
imul
or
adc
inc
jnp
imul
add
pop
sub
into
dec
repnz
push
mov
inc
mov
aam
js
mov
inc
push
jbe
in
adc
xor
call
stos
jbe
clc
xor
cltd
xor
inc
mov
into
lea
outsb
xor
ds
inc
xor
jle
jae
xchg
test
test
inc
and
and
lcall
sub
loop
test
and
xchg
dec
movsl
add
sbb
daa
shlb
cmpsl
add
cmc
xor
and
cmp
add
clc
int
dec
mov
mov
sbb
cmc
xchg
xlat
clc
outsl
dec
ret
fsubr
aaa
popa
sub
in
cwtl
cltd
push
inc
pop
pop
add
icebp
pop
lock
leave
mov
ror
mov
mov
dec
xor
popa
jb
sbb
shlb
shrl
cld
sbb
push
cld
inc
dec
int3
pop
push
and
inc
js
sti
rcrl
or
stos
push
add
mov
mov
lea
int
addr16
iret
dec
pushf
mov
imul
repz
cwtl
fildl
jo
out
push
pop
or
cmc
leave
or
lcall
cmp
adc
pop
sahf
or
push
adc
mov
outsb
cmc
fstps
aad
idiv
inc
clc
jg
sub
and
bound
sub
mov
mov
mov
xchg
in
mov
xlat
mov
addr16
mov
mov
inc
jmp
jo
mov
mov
and
lock
xchg
pop
lahf
push
xchg
cmpb
cs
inc
fcomps
pop
outsb
aad
cli
out
out
inc
aam
mov
mov
cli
jecxz
push
stos
and
add
int
or
les
lock
lret
fs
lods
lret
mov
popa
xor
dec
sbb
arpl
push
push
xor
movsl
imul
sbb
stos
mov
pop
jbe
out
xchg
aaa
test
mov
fs
xor
xchg
sub
nop
scas
iret
enter
jae
arpl
adc
enter
xor
rcll
xor
shrb
outsb
mov
sbb
mov
sub
int3
cltd
loop
jb
bound
inc
loopne
ret
adc
or
dec
push
or
jl
imul
imul
fldl
popa
add
scas
pop
test
and
mov
cmc
lods
repz
test
inc
pop
add
mov
pop
or
sbb
xor
in
ja
mov
xor
jecxz
and
imul
and
pop
int3
push
or
iret
movsl
xchg
pop
bt
fildll
in
dec
lea
adc
arpl
push
fsub
mov
or
sub
lds
repnz
popf
cmc
inc
xlat
aas
sub
jae
icebp
rorb
aad
or
lahf
lcall
push
sub
add
adc
sbb
lcall
cwtl
xchg
xlat
and
pop
packssdw
sub
cmp
test
mov
hlt
mov
mov
or
mov
shll
lods
call
and
popa
dec
xor
adc
add
push
pop
andb
push
xor
test
int
sbbl
aaa
cld
cltd
jno
nop
cmp
int3
negb
iret
vmread
les
dec
sti
add
or
fcmovne
in
loope
jg
mov
iret
mov
fildl
cli
das
push
lret
pusha
lea
or
jns
hlt
lcall
imul
pop
inc
sub
jmp
stos
pop
jmp
jbe
jae
lea
arpl
mul
mov
or
push
data16
cltd
lock
cmp
in
jo
js
mov
and
stos
js
inc
daa
adc
sub
test
dec
xchg
dec
xchg
xchg
adc
outsb
ds
in
push
jb
lret
cmp
notl
iret
andb
daa
mov
mov
mov
inc
jge
aam
loop
xchg
and
leave
cwtl
dec
int3
gs
nop
movsl
mov
pop
mov
fcmovnu
imul
pop
int3
or
and
ret
sbb
fcmovb
or
jns
jl
stc
inc
push
scas
mov
cmc
dec
mov
cmp
inc
xchg
pop
sti
mov
out
ss
sahf
or
push
lcall
out
mov
out
xchg
fldl
xchg
jae
aas
pop
jno
fs
stos
pop
mov
mov
xor
shrb
into
pop
push
sbb
xchg
jl
or
dec
popa
std
push
scas
into
mov
insl
jae
jl
ret
jg
rcrl
adc
jb
scas
loop
inc
or
mov
mov
add
repnz
push
in
fbld
xor
enter
sbb
xor
je
lock
inc
and
sbb
fcoml
test
adc
dec
mov
int3
idivl
arpl
adc
ficoms
inc
popf
cmpsb
addr16
popa
push
scas
sub
ss
sub
inc
mov
pop
pop
rolb
jae
daa
jl
repnz
sbb
adc
iret
das
in
xchg
pop
andnps
push
stos
sbb
dec
gs
shrl
test
out
pushf
jg
mov
ljmp
add
and
jae
daa
lea
int3
lcall
pop
mov
push
test
insb
call
in
and
mov
jns
shll
sub
mov
orl
mov
push
mov
cmp
pop
adc
xchg
loop
stos
or
nop
sbb
sbb
js
jl
or
aad
rclb
sti
mov
icebp
mov
inc
ret
gs
add
shll
cmp
pop
mov
mov
mov
jecxz
dec
test
nop
adc
into
cwtl
sti
rcrb
fadds
mov
push
sbb
pop
push
call
mov
xchg
mov
mov
jmp
or
fcoml
jne
push
add
ljmp
jbe
scas
mov
jns
mov
mov
sbb
jb
test
push
inc
aad
ror
lret
push
mov
mov
and
pop
jp
or
sbb
lea
push
mov
leave
lret
pop
rorl
ja
lock
cwtl
fidivl
sub
mov
jl
or
and
imul
push
dec
or
mov
xor
xor
cmp
leave
psrlw
cmp
repnz
and
mov
fwait
cmpsl
push
lods
mov
push
std
lds
out
push
pop
adc
push
scas
dec
pusha
stos
das
ss
xor
dec
or
aas
adc
fisubrl
pop
enter
jbe
imul
adc
ja
push
dec
xor
jnp
xchg
jne
call
sub
lods
push
pop
add
inc
out
push
insl
lret
mov
stos
notb
cmpsb
sub
hlt
sub
xor
pop
mov
stc
ljmp
fs
add
or
daa
scas
adc
test
outsl
cmp
test
repz
jb
mov
leave
mov
test
out
pop
xchg
pushf
xor
xchg
push
das
testb
addb
push
inc
inc
push
out
ss
and
cmp
int3
sti
out
mov
lods
repnz
dec
outsl
aaa
scas
push
cwtl
into
sbb
add
loop
add
dec
insb
je
and
push
xlat
imul
aas
movsb
cli
mov
lds
rcll
mov
xor
lods
jl
xor
xchg
fcomps
ljmp
jno
pop
dec
scas
cmp
mov
mov
mov
pop
xor
xchg
sub
xchg
vmwrite
jg
sbb
test
cmp
mov
vpshlq
in
pop
mov
pop
add
pop
pop
xor
cld
es
lods
adc
lret
cli
popf
stos
xchg
add
mov
push
sub
dec
scas
push
jge
mov
push
aam
mov
xor
mov
imul
repz
mov
mov
in
int
adc
mov
jo
rclb
hlt
mov
in
orb
rep
insl
push
ror
sahf
ljmp
negb
insl
iret
xor
es
mov
pop
sbbb
sbb
sub
lock
push
orb
add
call
lea
test
jg
mov
add
lahf
movsl
jmp
xchg
jecxz
sub
xor
shr
xchg
pop
pop
fsts
dec
or
scas
jecxz
repnz
pop
out
ss
testb
pop
push
jno
fmulp
xlat
in
pop
adc
int
imul
aaa
scas
and
xor
add
inc
adc
iret
cmp
adc
outsb
outsb
add
rolb
dec
xchg
fidivl
divb
xchg
jae
jb
push
add
pop
mov
mov
inc
call
repnz
jb
sub
mov
dec
mov
scas
and
mov
or
jbe
pcmpgtb
mov
scas
xchg
sbb
inc
test
movsl
int
mov
loope
mov
mov
jno
mov
cmpxchg
jmp
das
icebp
lcall
pop
es
addr16
or
dec
mov
cmpsb
cltd
aad
loope
iret
pop
add
outsl
dec
out
xchg
out
push
stc
lods
jae
das
push
jmp
inc
es
cmp
ss
lret
lock
clc
shrl
cmpsl
js
dec
int3
les
bound
sti
loopne
gs
pusha
push
ja
hlt
faddp
mov
sarb
in
and
push
pop
mov
xor
xor
lock
popf
iret
xchg
fwait
fwait
inc
popf
insl
and
push
cltd
inc
cwtl
out
insl
pop
sbb
cmc
pop
es
movsb
mov
mov
enter
sbb
iret
or
aad
adc
sub
cmc
push
addb
rorl
add
ret
mov
xor
outsb
xor
stc
in
scas
mov
jle
xchg
cwtl
lcall
jecxz
les
xor
mov
and
or
outsb
data16
push
sahf
ficoms
adc
arpl
add
insb
je
xchg
push
roll
flds
daa
inc
lods
loop
popf
mov
sbb
add
gs
jbe
and
ret
or
cmp
sahf
mov
mov
lods
imul
or
jnp
xchg
jle
inc
ficoms
pop
scas
mov
mov
movsb
stc
sub
inc
or
test
decl
mov
lret
lods
lods
stos
adc
or
or
jae
adc
cs
dec
cmp
jb
push
ds
or
jae
adc
int
jae
pop
cmpsl
inc
loop
addr16
movzbl
aad
inc
pop
mov
cmpsl
jle
jne
in
mov
test
pop
ret
sti
push
shlb
pop
lret
das
js
in
jg
mov
fs
mov
push
stc
sbb
lcall
lret
mov
imul
les
pushf
mov
das
xchg
xor
mov
xchg
loope
or
repz
adc
fdivrs
inc
push
sarl
leave
mov
ret
arpl
arpl
iret
sub
jb
shr
negl
pop
int3
pop
and
xchg
iret
mov
icebp
cld
scas
mov
imul
jne
and
cmp
fimull
aad
pop
fsubs
lcall
and
or
add
out
inc
lods
scas
mov
xor
push
push
or
in
idivl
cli
mov
mov
inc
adc
xchg
lahf
repz
hlt
or
ror
lahf
loop
push
xor
sar
xlat
cmp
out
add
mov
add
not
jg
inc
jge
xchg
mov
popf
stos
mov
dec
shr
lds
rorl
in
lahf
mov
xchg
add
mov
sub
sub
out
in
mov
sbb
ret
mov
mov
mov
es
jne
popa
leave
pop
mov
rorl
test
arpl
add
lahf
inc
adcb
mov
jp
call
inc
lods
sbb
or
pushf
mov
mov
push
out
and
xchg
outsb
imul
rol
jmp
int
mov
and
jl
mov
outsl
push
dec
scas
cs
sub
push
lcall
pop
add
xchg
or
add
xchg
inc
mov
insb
pop
fmul
jge
dec
je
dec
jg
add
shlb
neg
add
mov
out
xchg
xor
sub
nop
or
pop
stos
cmp
imul
xor
jno
xchg
adc
pop
cmp
mov
std
scas
mov
sbb
pop
ds
dec
jle
lret
jmp
imul
xor
cld
push
ja
das
inc
pop
int3
inc
adc
andl
ljmp
mov
sbb
lcall
xchg
pusha
inc
pop
lds
andb
jno
es
mov
icebp
aad
fwait
lcall
add
roll
les
jp
mov
dec
xchg
inc
pop
xchg
ja
mov
pop
sub
mov
rcl
mov
mov
in
xchg
shl
cmp
jecxz
push
mov
cmp
icebp
sahf
push
nop
lods
lret
dec
xor
sbb
pusha
xor
xchg
imul
mov
cmpsl
fadds
out
test
mov
insb
loopne
jecxz
mov
mov
jno
sarb
push
xchg
fistl
mov
sub
cmp
add
xor
shrl
dec
std
cmp
movsw
cs
xchg
sub
in
dec
xchg
mov
dec
rorl
call
adc
fs
xor
push
loopne
outsl
and
sbb
ret
aad
mov
clc
cmpsl
xchg
add
mov
add
add
cmp
mov
dec
adc
js
inc
add
andnps
fcomi
dec
aas
stos
jns
cmp
clc
sub
adc
movsb
and
adc
jb
js
mov
repnz
adc
in
sub
cld
clc
or
int3
loope
cwtl
daa
pop
test
shlb
sti
push
pop
inc
sub
xchg
xchg
mov
xchg
fnsave
cld
push
and
cltd
cltd
pusha
popf
enter
jmp
mov
out
ret
push
ret
in
pop
mov
lock
push
imul
mov
mov
popa
into
mov
std
fistpll
std
lcall
push
fldenv
mov
lods
mov
stc
in
out
icebp
xor
mov
fldenv
aad
adc
outsl
ja
out
pop
lods
mov
inc
scas
cmpsl
movsb
arpl
xor
sti
adc
scas
jbe
fildll
popa
fsubp
push
fistps
int3
mov
jp
sub
repnz
xlat
add
jnp
xchg
cmp
lds
pusha
arpl
cmp
sbbb
xchg
adc
sub
cmp
fs
out
lcall
xchg
out
repnz
jno
or
and
xchg
inc
pop
push
lds
mov
lods
pop
add
out
cmpsl
fadds
and
jle
call
pop
insb
in
xor
dec
or
add
pusha
ja
or
pop
xor
mov
movsb
jp
shlb
mov
add
jb
push
ds
sbb
mov
in
fisttps
cltd
push
push
push
and
xor
mov
push
dec
inc
pop
dec
pop
push
fnsave
add
lahf
mov
xlat
and
imull
mov
bound
push
add
pop
fadds
insb
outsl
inc
dec
imul
mov
cmp
jbe
push
gs
int
xchg
jge
clc
les
out
stos
cmp
mov
test
and
jmp
sbb
cmpsb
pop
iret
dec
pop
js
add
pop
in
mov
ljmp
nop
call
call
imul
cld
inc
dec
inc
das
out
jp
and
pop
add
cmp
push
sub
out
lock
lret
add
jle
xor
test
xor
adc
or
xor
dec
mov
lock
dec
fs
enter
icebp
xchg
inc
leave
pop
sarb
lods
pop
imul
push
loopne
mov
dec
inc
shl
xchg
push
lods
xor
popa
mov
cmpsb
jge
push
push
movsb
lods
ret
daa
jne
dec
and
lods
cli
stos
sbb
inc
cltd
dec
mov
into
inc
je
rclb
pop
sarl
cwtl
sarl
mov
push
call
pop
out
push
or
xchg
imul
or
push
fnstsw
dec
ja
test
pusha
sahf
mov
pop
xchg
sbb
push
sub
adc
xor
mov
xor
out
adc
cmp
lock
mov
mov
shl
jbe
or
fsubl
adc
and
nop
test
mov
cmp
cwtl
xor
add
dec
mov
xchg
cmp
mov
mov
mov
rorb
xor
jb
scas
adc
scas
jge
fdivl
inc
insb
rcrl
mov
popf
aam
pop
add
out
rorl
xlat
cmp
inc
lock
cmp
mov
cld
cwtl
cs
xlat
push
jae
je
jmp
fildl
dec
or
cmp
mov
cmpsl
ret
or
stos
push
into
repnz
mov
int3
lret
stc
mov
dec
dec
sub
sbb
mov
push
dec
adc
mov
cltd
and
add
enter
cli
mov
dec
mov
xor
daa
pop
xor
icebp
aas
inc
js
jne
lcall
xchg
push
mov
scas
rolb
sbbb
scas
imul
inc
pop
xchg
inc
ret
xchg
lods
mov
xor
cltd
cmpsl
les
ljmp
adcb
repz
sbb
ret
xor
lock
into
leave
imul
clc
adc
dec
test
push
mov
int
inc
bound
pop
das
addb
lcall
add
sarb
mov
inc
xchg
ja
shrb
bound
mov
int
loop
sbb
mov
sahf
cld
mov
pop
adc
xchg
push
inc
test
cmp
mov
lds
out
or
and
jae
pusha
pop
std
sub
cmc
popa
cmp
shll
out
push
popl
lcall
push
cmp
xchg
je
xor
adc
ret
leave
stos
ds
or
push
push
lock
push
sub
cmpsb
push
mov
js
push
pop
inc
jecxz
mov
frstor
loopne
insb
pop
and
dec
jo
push
loope
stos
cmp
ficomps
ret
xchg
push
push
in
push
adc
outsl
int3
xor
or
daa
jle
mov
test
les
sahf
xchg
or
cmp
fldcw
test
push
inc
jnp
lds
fs
lret
sti
call
call
fcmovnu
outsl
lds
fldcw
cwtl
sub
fldl
repnz
jp
push
jecxz
sbb
ljmp
call
insl
sub
sti
lret
mov
ja
pop
jmp
adc
into
or
in
sarl
aam
ss
hlt
push
fnstsw
sbb
addr16
jp
jle
xchg
std
in
or
xlat
les
std
setns
inc
dec
into
fcoml
pop
and
mov
mov
xchg
gs
bound
cmc
push
mov
cli
mov
push
ljmp
shl
add
mov
jmp
std
pop
pop
gs
xchg
jnp
out
cs
das
jb
idivl
mov
pop
jge
inc
cmp
push
lcall
lahf
push
push
mov
ret
lods
arpl
mov
test
aas
xchg
mov
push
adc
je
dec
mov
jp
push
and
push
sbb
push
ret
adc
aaa
xor
fisubrs
aaa
pop
clc
arpl
cltd
or
popa
mov
push
fnstenv
cmp
pushf
adcb
mov
xor
test
inc
or
xchg
popa
push
dec
jp
sub
repz
scas
fldt
inc
call
jle
sub
les
sbb
adc
fwait
mov
add
or
ja
or
inc
es
push
cmp
out
cmp
sbb
mov
jmp
dec
mov
cli
jmp
inc
test
lds
cwtl
fcompl
and
call
or
aas
sahf
cwtl
inc
jne
data16
in
cmpsb
decl
jmp
dec
stc
notl
lret
or
mov
popa
xor
mov
lret
insl
adc
into
pop
jb
jl
out
imul
out
pop
lods
xchg
imul
test
inc
mov
mov
outsl
pop
insl
mov
lea
out
or
xchg
dec
jl
imul
sarb
rcll
pop
cmp
jg
movsl
push
or
adc
jg
xor
dec
jns
jnp
mov
out
orb
and
xchg
outsl
dec
rcrb
std
adc
jge
pop
imul
xor
dec
sub
scas
pop
sbb
jne
pop
std
mov
or
mov
push
jae
sbbl
mov
adcb
adc
xchg
pop
mov
or
les
mov
sub
aas
js
jne
pop
test
adc
mov
pop
dec
and
sbb
in
xchg
cmpxchg
and
or
cmp
pop
aam
aad
cli
pop
push
rolb
cmpsb
jne
neg
mov
int
ret
mov
cmp
movsl
push
xchg
sarb
cmp
fwait
mov
loopne
pop
add
mov
sbb
sbb
test
repnz
mov
jnp
fidivs
inc
rolb
cmp
popa
mov
es
adc
mov
adcb
adc
mov
inc
movsb
jle
fists
sbb
jge
shrl
dec
push
cmp
push
stos
repnz
add
cmpsl
js
test
nop
push
arpl
les
add
pop
jae
mov
cmp
xchg
cmp
sbb
repz
loope
dec
adc
movsl
push
shl
out
in
mov
test
add
nop
mov
test
sbb
out
jmp
add
xor
sbb
mov
fs
lcall
insl
subl
clc
and
xor
insb
push
mov
pop
pushf
stos
xchg
lret
ret
pop
cmc
les
fisubrl
jg
daa
aas
enter
push
nop
jg
mov
or
xor
mov
sti
outsb
ja
lea
sbbb
mov
loope
add
jle
mov
and
xor
sbb
iret
aad
mov
rorl
mov
ja
inc
push
mov
pop
xchg
or
add
or
and
cmp
outsb
xchg
jge
mov
mov
aas
cmpsl
push
pop
sub
in
xchg
push
mov
cmp
mov
pop
repz
inc
fadds
dec
lds
lods
sub
push
or
mov
popf
jne
insl
pop
aaa
hlt
xor
aad
lea
push
pop
in
lock
jl
sub
pushf
cmpsb
dec
cwtl
xor
imul
icebp
std
or
popa
pop
sbb
test
pop
push
xor
pop
mov
jne
cs
mov
nop
inc
int3
jb
add
push
je
inc
pusha
cmp
mov
repnz
and
add
xchg
mov
lds
std
xchg
sbb
push
das
adc
add
mov
incl
outsl
push
mov
dec
push
cmpsb
lds
lds
dec
movsb
sbb
pop
imul
fcoml
ss
push
loop
inc
lea
sub
gs
jp
xor
sub
sbb
mov
aas
aaa
out
or
sub
or
pop
jecxz
test
cmpsl
push
mov
adc
push
jp
hlt
xchg
xor
stos
imul
movsl
cmp
int
imul
xchg
xor
lds
cwtl
jge
inc
cs
iret
and
sbb
or
jg
nop
iret
in
inc
out
ficoml
cwtl
and
pushl
xchg
sbb
lods
enter
cmp
imul
sbb
filds
sub
adc
or
lds
mov
pop
fsubrp
in
xchg
lret
imul
out
in
shrl
adc
push
test
mov
sbb
push
inc
sbb
xchg
dec
sub
outsb
pop
imul
pushl
fmull
scas
jp
inc
je
jmp
call
sti
shl
rep
stos
movsl
add
sbb
je
jne
xchg
dec
ss
stos
and
shll
fwait
lods
ljmp
outsl
cltd
add
in
sti
dec
int
push
adc
mov
imul
mov
les
aas
cmpl
pop
cmc
imul
jb
jge
dec
adc
ja
jo
jno
test
or
incl
ret
test
jb
movsl
lods
ljmp
push
rcll
xchg
ret
pop
imul
stc
xor
ficompl
pusha
jle
dec
movsb
cmp
mov
xchg
pop
out
mov
sub
fs
mov
and
mov
push
dec
mov
adc
or
imul
push
loopne
mov
cltd
lods
sub
xchg
push
lods
xor
popa
mov
cmpsb
jbe,pt
lret
sub
add
xor
pop
push
inc
test
sub
jae
xchg
and
jl
out
sbb
add
lock
imul
mov
jo
xchg
pop
es
out
and
and
mov
pop
jecxz
adc
adc
hlt
mov
pop
mov
into
push
shlb
xor
pop
pop
ficomps
sub
push
mov
aas
cmpsl
jle
xchg
push
and
xor
and
rol
cmp
ret
or
xor
add
andb
mov
mov
adc
push
sub
movb
mov
jmp
movsb
lock
rcr
cmp
test
cmp
idiv
daa
ss
test
test
push
xchg
imul
jge
sbbb
xrelease
sti
repnz
aam
test
inc
pushf
shlb
mov
adc
xor
push
aam
outsb
sub
leave
call
push
inc
mov
pop
adc
cmp
cld
and
out
lds
xor
push
xchg
lret
repz
dec
or
int3
cmp
sbb
imul
push
setns
mov
xchg
cmc
loope
dec
fs
cmpsb
sub
bound
ss
or
js
cmp
mov
mov
lds
scas
push
pop
test
test
pop
ret
push
push
adc
je
das
lea
push
repnz
lods
fdivrp
mov
rcll
adcb
inc
adcb
rclb
es
imul
add
into
cmp
pop
xchg
out
cli
xor
xchg
cli
dec
fisubrl
leave
rol
sub
aaa
adc
call
les
add
cmp
loop
sub
or
xchg
pop
jle
mov
gs
jo
cs
add
cmpsb
inc
test
lods
add
lea
stos
lods
lods
popa
testl
ds
loope
jmp
movsb
jl
jmp
imul
xlat
lret
pop
lods
nop
jne
jmp
xor
jmp
or
lods
jne
sub
ret
mov
mov
mov
pop
mov
shlb
mov
dec
mov
shlb
int
xabort
jne
mov
fsubr
jne
or
mov
add
pop
in
es
hlt
sti
pop
cmp
scas
sbb
xor
mov
xchg
cmc
loope
insl
mov
dec
lret
push
mov
pusha
out
jle
lods
imul
out
mov
cmp
xchg
mov
pop
jmp
sbb
xor
pop
sub
or
adc
addl
jnp
add
jecxz
imul
mov
cmpsl
jno
aas
jp
into
adc
pop
push
mov
mov
cmp
xchg
xchg
fstps
sbb
and
adc
or
lock
xorb
mov
lods
lods
mov
push
pushf
jl
aad
daa
test
push
jmp
out
mov
jnp
mov
sarb
sub
iret
out
inc
jo
decb
mov
jae
aad
aam
xor
leave
xor
ret
fstpt
add
or
pushf
jecxz
or
mov
xorl
adc
ja
ret
scas
pop
idiv
ret
sbb
fsub
fldt
cmp
add
js
clc
mov
adc
jecxz
xchg
adc
cmp
movsb
shll
mov
faddp
les
xchg
cld
cmp
mov
sub
push
jns
cmpsl
sar
adc
add
push
das
test
hlt
or
inc
int3
outsb
icebp
pop
jl
cli
add
mov
dec
xchg
shll
xor
stos
cltd
add
add
shll
out
adc
adc
jmp
pop
sti
add
rcl
inc
lahf
pop
stos
dec
dec
jl,pn
and
das
test
ja
xchg
imul
mov
aad
xor
pop
xchg
mov
lods
scas
out
pop
clc
cld
sub
xchg
aad
in
adc
je
mov
je
sub
sub
in
movsl
aaa
scas
xor
ljmp
int3
pop
out
cmpsb
int3
add
dec
cltd
cs
push
imul
push
popf
jmp
jecxz
or
pusha
outsb
xchg
mov
cmp
dec
ficompl
add
inc
popa
nop
bound
mov
cwtl
ret
in
sbb
mov
rclb
inc
lret
mov
cmp
dec
push
call
push
shll
aas
call
jge
xchg
adc
adc
adc
stc
push
push
mov
sbb
push
sbb
mov
lods
out
js
add
nop
add
inc
lds
jmp
push
push
dec
aaa
cmc
outsl
sar
scas
xor
push
add
cld
mov
jl
or
add
mov
lods
outsl
lret
lcall
xor
cmp
inc
xlat
ret
pusha
jo
pop
cltd
and
pop
inc
xchg
add
pop
ja
cmp
push
inc
sub
jp
adc
inc
test
or
daa
cld
and
mov
mov
rcll
inc
and
or
pop
or
das
jmp
movsl
ret
cmpsb
outsb
jl
jne
or
sbb
adc
sub
icebp
std
icebp
pop
stos
mov
pop
test
jnp
mov
les
or
stos
jne
es
xor
or
fs
dec
out
mov
jbe
cmp
lcall
jo
add
jecxz
add
xchg
je
xchg
shrl
iret
and
in
pusha
andb
pop
pop
pop
mov
push
insl
mov
or
popf
xchg
inc
shrb
das
cmpb
inc
leave
inc
and
pop
xor
mov
xor
leave
inc
push
or
jg
mov
add
and
cmp
test
into
xor
test
mov
jne
jp
or
mov
pushf
xchg
sbb
and
jnp
popa
jbe
cmpb
scas
int3
shrb
and
and
rclb
nop
inc
fcoms
lret
movsl
scas
int3
push
test
clc
gs
lret
pop
das
lret
iret
cwtl
popf
cmp
aam
arpl
and
pop
xchg
nop
clc
dec
dec
dec
adc
xor
adc
jp
jmp
pusha
fimuls
js
dec
mov
stos
lods
jecxz
outsb
std
bound
jnp
js
stos
aaa
xchg
ds
aaa
sti
push
cmpsl
xor
out
sarl
and
mov
xor
out
and
xlat
cmp
int3
mov
cmpsl
dec
adc
cmp
pop
xor
imul
jl
test
pushf
xchg
int
jb
lods
test
js
cmc
mov
jne
sbb
sub
push
and
fucompp
mov
sub
adc
sbb
lds
in
xchg
xorb
inc
pop
pushf
xchg
lcall
xchg
add
jl
stc
addl
ficompl
lods
stc
repz
pop
jne
shrl
jns
cmpsl
add
push
mov
imul
xchg
gs
push
fisttpll
cmpsl
call
jns
xchg
aad
xchg
lahf
stc
shlb
and
cmp
adc
ficoms
das
adc
sbb
dec
xchg
dec
cmp
inc
ret
mov
push
test
imul
and
and
and
adc
jbe
imul
pop
loope
mov
xlat
mov
cmpsl
clc
test
add
pop
jnp
out
dec
inc
fisubrl
js
loope
cli
lret
call
test
xchg
adc
mov
mov
inc
test
dec
stos
hlt
scas
mov
dec
xor
cs
out
repz
in
adcb
mov
adc
inc
aas
aad
mov
pusha
scas
test
xor
fucomip
xchg
in
jp
mov
mov
fbstp
cmpsl
mov
mov
xchg
xchg
das
pop
out
and
pusha
imul
xchg
adc
and
mov
jecxz
mov
out
mov
inc
mov
test
xlat
aad
sub
rol
arpl
shr
pop
mov
mov
xor
jecxz
pop
fistl
sub
jb
andl
clc
inc
jp
je
mov
imul
sbb
orb
jnp
repz
gs
or
dec
sbb
mov
xlat
mov
sbb
fwait
enter
adc
test
sub
fsts
je
pop
mov
fldl
push
jnp
pop
aad
fnsave
cmp
or
ret
out
cmp
fiadds
cltd
faddl
push
mov
in
inc
or
repnz
and
into
les
daa
je
test
xchg
pop
shll
jl
aaa
pop
test
into
out
pushf
dec
mov
inc
int
pushf
jnp
cs
ds
mov
adc
cmpsb
scas
dec
pop
in
popaw
pop
pop
cmp
repnz
leave
aam
call
clc
push
push
cmp
orps
xor
fcomps
mov
std
push
add
enter
mov
and
adc
pop
stos
pop
ret
stos
ds
shlb
adc
pop
sbb
cltd
sub
pop
gs
jno
in
insb
mov
sub
outsl
mov
out
in
add
int3
repnz
dec
cmp
and
popa
xor
aad
cmpsl
movmskps
pop
lds
push
rcrb
pop
jne
jle
lock
add
mulb
push
mov
test
sarl
xchg
dec
in
add
ficompl
imul
xchg
jle
orl
dec
jecxz
sti
and
lcall
push
xchg
xorb
shlb
xor
cmp
in
jle
push
mov
bound
push
loope
mov
aaa
dec
test
jp
jle
add
rcrb
dec
shll
sub
cmp
xlat
xchg
inc
std
push
sbb
cmpl
dec
jo
pop
out
clc
pop
pop
push
mov
cmpsl
cmc
sbb
loope
and
jp
push
loopne
pop
inc
test
inc
dec
jge
call
adc
scas
nop
pop
pusha
shrl
dec
push
fnstcw
les
scas
sti
dec
mov
in
fidivrl
or
std
pop
shrl
lcall
into
mov
mov
shlb
rolb
push
mov
cmc
dec
data16
movsl
lods
xorb
lods
dec
data16
ja
mov
out
into
addr16
jne
push
addb
xor
dec
mov
mov
in
clc
mov
sti
movsb
outsb
add
fstpt
jge
sti
mov
js
push
test
sbb
shrl
jg
and
add
subl
loopne
xor
sub
out
mov
add
xor
mov
mov
loope
loope
adc
cmc
cmp
cltd
fmull
repnz
sahf
sti
or
es
std
mov
imul
addr16
imul
sbb
pop
xchg
jmp
cmpsl
mov
adc
jbe
sub
popf
ss
fistps
in
pop
lods
insb
cmc
lods
rcrl
div
addr16
push
addb
pop
push
sub
pop
mov
call
and
in
xchg
dec
mov
adc
enter
bound
out
movsl
ret
daa
stc
mov
movsl
or
fistps
cmc
cmp
adcb
ss
push
insl
xor
jae
sbb
mov
jns
gs
and
cmpsb
add
push
lret
fmuls
hlt
lock
dec
mov
inc
inc
push
bound
mov
mov
pop
adc
imul
jnp
jl
mov
adc
gs
mov
inc
out
pushf
pop
ss
adc
push
icebp
fisttps
pop
test
xchg
push
push
mov
sbb
xchg
sub
ljmp
imul
jno
or
popa
dec
inc
inc
std
loopne
add
or
lret
repnz
jl
jb
cmp
push
mov
jge
cmp
int
adc
movsb
push
sbb
hlt
rcrb
imul
jg
rcrl
xor
nop
addr16
vpandn
pop
test
leave
xchg
mov
fwait
je
jge
inc
add
imul
jno
inc
ljmp
out
call
adc
mov
ds
lahf
mov
xchg
cmc
je
mov
xor
sub
ss
sahf
aad
add
loopne
outsb
adcb
jae
pop
add
mov
pop
adc
fs
mov
out
fldt
jnp
xor
xchg
les
dec
jno
jo
insb
inc
aas
cmpsb
fcoms
sub
add
loope
lock
je
rcll
adc
mov
and
sar
movsb
je
xchg
ds
addl
mov
jg
and
test
dec
cmp
shl
dec
imul
imulb
out
adc
pop
scas
ja
ret
out
stc
les
rcll
dec
pop
or
jg
inc
ds
mov
push
cmp
add
mov
lods
sub
pushf
mov
mov
out
cmp
sub
or
fwait
lret
fdivs
cmp
das
loope
in
push
jno
bound
or
sahf
pop
mov
inc
movsl
arpl
subb
cltd
mov
jle
mov
cmpl
jbe
mov
stos
movsb
sbb
mov
dec
dec
das
scas
push
mov
push
stos
clc
test
inc
sub
rolb
mov
cmpsl
mov
test
out
add
jl
xchg
repz
sub
movsl
push
aam
loop
mov
aaa
int3
push
push
pop
add
icebp
fs
test
jnp
and
xchg
mov
sub
jg
inc
fbld
jg
pusha
cs
dec
fucom
aas
jle
inc
leave
adc
testb
std
adc
loop
test
xor
xchg
insl
psubd
orb
fs
hlt
lea
scas
jb
test
jmp
outsb
inc
jno
insl
test
dec
stos
sar
pop
sbb
leave
shll
push
lcall
ds
cmp
add
jmp
lahf
inc
sarl
je
pusha
push
mov
mov
mov
mov
jg
jo
out
dec
jo
in
inc
sub
push
push
mov
movl
or
lds
push
mov
sbb
fwait
sub
dec
dec
adc
push
stos
sarl
stos
mov
stos
xchg
cli
push
add
push
sbb
sub
dec
nop
mov
ret
test
xchg
clc
std
mov
add
es
outsl
cmc
cmp
or
push
rcrl
or
jge
jb
sti
dec
in
js
mov
out
sbb
hlt
cmp
jmp
shrb
adc
cmp
movsb
les
mov
hlt
inc
pop
lcall
push
pop
sarb
gs
push
jmp
dec
cmp
xchg
es
sbb
pop
cmc
push
sub
outsl
test
inc
std
in
xchg
out
pusha
out
out
cmpsb
fs
push
sub
pop
adc
test
dec
sbb
xchg
sub
push
push
into
push
sub
or
repnz
push
or
pop
sub
xor
pop
aas
sub
cmp
outsl
mov
jae
lret
push
and
aad
xchg
jl
popa
outsb
sarb
push
sbb
fstp
fsubr
and
push
lds
mov
out
int
xchg
fwait
stc
sbb
neg
cmp
pop
loope
bound
dec
lcall
sub
scas
fsubs
jns
in
fidivrl
mov
cmp
push
mov
movsl
or
and
xor
or
push
dec
pop
sub
outsl
outsl
mov
mov
push
fwait
mov
mov
mov
into
mov
je
int
push
adc
dec
sub
test
inc
mov
loope
and
lods
dec
aam
subl
fadds
push
aaa
xor
aam
dec
fimull
cmp
dec
iret
and
mov
jo
cmp
cwtl
sahf
sub
ljmp
push
out
lcall
pop
push
jmp
aas
rcll
inc
push
ret
add
flds
mov
test
lock
and
inc
mov
out
sub
cmpsl
test
inc
cmpsb
shrb
inc
sub
loop
lock
add
xlat
call
or
add
sbbb
cmp
fs
mov
outsl
cmp
or
sub
mov
je
jno
or
ljmp
sub
shrb
or
mov
jecxz
fsubl
xor
faddl
stos
jno
jmp
mov
xlat
das
pusha
shll
shrb
inc
mov
lods
cli
int
xor
push
mov
jg
dec
jmp
shll
mov
mov
mov
movsb
clc
and
pusha
sahf
mov
ret
push
pop
add
lcall
mov
stos
pop
call
cltd
or
xchg
mov
add
mull
jb
jge
xchg
into
fsubl
clc
fisubrs
add
cmp
repz
mov
jns
inc
aaa
fisttpl
mov
cmp
test
pop
mov
push
jno
rcrb
scas
fnstcw
xchg
push
xor
cs
cmc
stos
lret
ret
stos
mov
out
out
sub
outsl
out
dec
and
imul
dec
icebp
scas
sbb
ja
mov
lds
mov
jp
out
mov
xor
cmp
adc
mov
mov
daa
sbb
popa
pop
mov
scas
pop
aas
arpl
inc
xchg
jmp
sbb
stos
push
inc
addr16
push
jg
lods
cltd
jns
cmp
mov
or
lds
mov
sbb
push
mov
aaa
push
adc
push
lea
sub
ret
sbb
ljmp
movsb
hlt
pop
test
xchg
pop
sbb
stos
or
out
cs
adc
movsl
and
fs
sahf
fdivr
jmp
mov
lock
idivl
fucomip
mov
cmp
xor
inc
xchg
cmp
test
idivb
test
xor
pop
sbb
push
and
add
repnz
adc
pop
mov
xor
cmp
xlat
jmp
adcl
inc
or
push
pop
xlat
dec
cmp
scas
enter
imulb
andl
or
adc
pop
jne
neg
inc
mov
les
cs
push
or
mov
xor
mov
add
jnp
call
ret
dec
push
mov
lret
lods
sbb
inc
xchg
cmc
jecxz
pop
inc
adc
sub
jb
fists
subl
dec
jae
outsb
adc
add
lods
pop
pop
in
pop
xor
std
cmpsb
imul
inc
movsb
js
scas
ret
das
mov
pop
adc
pop
inc
lret
adc
ds
mov
mov
ret
jp
add
push
js
xchg
dec
mov
adc
push
test
sar
std
clc
adc
fld
xchg
call
mov
mov
mov
xor
cmp
movsb
je
xchg
ret
int3
js
cmpl
mov
adc
dec
in
or
or
jnp
adc
or
stos
fcoms
fsubs
lea
aam
nop
and
mov
dec
sbb
push
add
in
dec
pop
popf
mov
sub
je
pop
jl
in
lds
push
ja
sub
nop
out
gs
adc
les
mov
sbb
jno
test
enter
popa
pop
push
es
inc
fistps
aaa
call
fs
add
xchg
test
sahf
decl
les
or
cmpsl
aad
aad
and
pusha
sbb
adc
bound
lds
lods
cld
fldenv
pop
sbb
mov
mov
and
mov
test
or
pop
stos
push
pop
and
and
mov
or
or
add
jns
push
dec
mov
add
mov
lea
jge
or
hlt
dec
cmpsb
dec
adc
fmuls
xchg
sbb
fwait
daa
aad
and
adc
imul
lsl
icebp
pushf
sub
cli
gs
into
pop
fmul
pop
hlt
mov
mov
stc
in
sahf
shlb
repz
pushf
jbe
push
sarb
aam
lock
sub
jne
mov
mov
std
test
test
paddusb
dec
mov
mov
or
cmp
mov
and
leave
cltd
inc
mov
pop
scas
gs
cli
pop
jae
mov
adc
cwtl
roll
mov
repz
outsb
pop
ss
xchg
and
xchg
mov
jp
icebp
mov
cmp
adc
sub
popa
mov
cs
mov
divl
cmp
loope
sbb
ret
xchg
gs
sbb
mov
ja
cmp
jnp
ss
addr16
sbb
xchg
out
repnz
dec
cmp
das
mov
in
aas
inc
inc
push
inc
cmc
test
mov
sarb
add
std
mov
mov
mov
push
nop
mov
push
mov
mov
iret
aas
push
cmp
mov
xor
xchg
adc
mov
jno
and
test
lds
jae
and
cmp
and
push
xchg
jle
out
xor
cmc
ss
mov
call
xchg
xor
imul
mov
mov
xchg
aam
xchg
aaa
inc
hlt
lret
mov
jge
int3
mov
inc
push
pop
enter
stos
lds
es
clc
cmp
pop
dec
lret
lret
insb
fstpl
enter
xchg
and
outsb
xchg
adc
mov
test
add
dec
cwtl
pushf
mov
xchg
rep
add
or
aaa
push
push
das
push
movsb
popf
bnd
fimull
mov
dec
movsb
mov
sbb
jp
add
nop
jb
ud0
aas
jmp
sub
jnp
insb
jae
xchg
cmpsl
popf
shl
test
rorb
mov
lret
dec
bnd
pop
or
mov
sahf
mov
stc
jle
decl
out
test
push
sub
in
jae
jno,pn
cs
popf
pop
jle
call
test
insb
in
jecxz
cmp
repnz
ljmp
cld
out
das
mov
mov
cli
dec
and
stos
cmp
outsl
jle
cmpsb
jb
dec
les
and
push
bound
sub
adc
and
dec
cli
das
lods
cmp
movsb
psraw
add
cltd
jbe
jno
cli
mov
loop
xchg
and
ficomps
dec
loop
sub
push
jle
jl
sbb
movsl
mov
std
and
inc
cld
jo
add
mov
sbb
inc
inc
loopne
push
pop
push
shrb
clc
loopne
popf
les
lahf
enter
mov
aad
int3
inc
xchg
sbb
sarb
aaa
arpl
xor
mov
lret
in
das
stos
movsl
inc
adc
mov
ret
in
sbb
fs
fists
out
push
fwait
add
sbb
jmp
cli
and
xor
mov
xor
xor
test
xor
dec
xchg
aas
lahf
lods
int3
iret
xor
cli
sub
push
bound
cltd
fsubrs
pop
in
mov
ljmp
addr16
jbe
jns
arpl
sub
cmp
mov
outsb
push
pop
out
mov
mov
je
or
inc
mov
or
cs
cmpb
shl
test
data16
sub
mov
stc
ja
pushf
jnp
gs
inc
lods
mov
cmp
ljmp
push
imul
pop
sub
cmp
xchg
sbb
test
mov
xorl
int3
push
push
pop
adc
jge
sarl
cltd
bound
xor
and
push
aad
pop
daa
dec
dec
mov
lcall
cmp
fldenv
inc
jl
xor
add
dec
jl
fisttpl
pop
ficoms
pop
push
pusha
rcrb
lods
dec
les
add
and
and
outsb
hlt
sbb
test
push
idiv
mov
ret
rorb
leave
in
cld
out
pop
push
jp
push
cld
cmp
cld
clc
and
addl
sarb
push
add
jg
lret
add
inc
xchg
mov
in
inc
jecxz
lods
inc
jne
bound
outsl
push
and
std
movsl
mov
adc
fldt
sarb
jp
lods
push
adc
add
add
dec
aas
jnp
inc
sub
mov
adc
mov
js
ds
fcmovnb
mov
xor
ds
rcrb
jl
shr
mov
int3
popf
aas
cmp
jo
enter
out
pop
notl
pop
lock
adc
imul
cmp
shl
cmpsb
lock
mov
ja
sbb
mov
and
cmc
fcomp
adc
fsubl
test
insb
dec
dec
clc
jb
into
mov
jnp
cmpsb
or
out
in
jg
les
cmp
fiaddl
sbb
ja
mov
mov
add
incl
out
or
imul
neg
ja
sub
or
or
into
push
pop
pusha
sub
or
add
sub
test
insb
insb
xchg
sete
popl
adc
push
xchg
push
lea
dec
and
add
imul
or
xchg
dec
mov
sbb
and
adc
outsb
xchg
add
cmp
and
lret
sub
dec
and
and
or
mov
xor
aad
mov
add
insb
mov
in
push
add
cs
inc
ret
inc
in
add
jl
fldl
std
cld
test
xor
test
mov
adc
jb
mov
int3
jo
sub
sub
push
jmp
jns
push
outsl
cmp
inc
jbe
lock
jo
xchg
shlb
cmp
icebp
or
in
mov
cmp
add
mov
mov
push
pop
pop
sar
mov
xor
test
add
cmp
enter
or
std
xchg
in
pop
fldcw
mov
jbe
pusha
daa
test
xor
or
and
insb
cmp
mov
mov
das
lods
popf
push
ljmp
insb
aaa
sti
inc
fwait
movsl
gs
pop
aad
mov
adc
sbb
in
aaa
mov
push
icebp
mov
or
andl
outsl
and
mov
dec
fwait
mov
add
mov
int3
fs
add
xlat
repz
mov
adc
mov
sbb
inc
mov
rcr
insb
stos
lods
pop
adc
lcall
xor
cmpsb
sub
out
push
mov
push
xor
mov
std
inc
sbbb
div
hlt
arpl
ss
xchg
js
dec
adc
adc
dec
jmp
dec
insb
je
jmp
xchg
cltd
cmp
imul
jb
jnp
popl
lock
sbb
out
mov
lock
in
gs
ja
lcall
push
xor
adc
outsb
call
lea
jp
test
dec
out
cmc
leave
in
scas
rcrb
aaa
xchg
out
rcrb
aaa
mov
dec
lret
out
nop
add
dec
xorl
daa
in
lds
xor
jl
scas
sub
icebp
push
adc
mov
outsb
sub
into
inc
mov
pushf
xor
sahf
ds
add
fisttpll
repz
pop
dec
faddp
loop
sub
mov
mov
push
rclb
add
adc
das
jl
and
push
fisttpll
lahf
das
call
or
fdiv
ret
lcall
jno
pop
jb
mov
aam
mov
fnstsw
imul
int3
cmp
mov
shr
dec
push
jbe
and
loope
dec
fwait
pusha
cmp
jl
jge
pushf
jecxz
pop
lods
cmp
repnz
sbbb
sahf
fs
popf
cmpsl
sbb
mov
push
inc
jmp
data16
and
and
decl
sbb
ljmp
push
xchg
fsubl
mov
loope
test
int3
filds
cmp
push
cmp
sbb
pop
jb
cs
lods
pop
dec
ffreep
stos
or
inc
xchg
iret
stc
add
arpl
dec
int3
xchg
mov
xchg
mov
adc
daa
mov
sub
movsl
push
cs
pop
push
in
adc
jge
icebp
and
dec
pop
test
repnz
shrl
clc
push
mov
mov
fs
and
mov
and
push
inc
lahf
jp
outsb
addb
mov
stc
sbb
and
adc
sti
mov
xchg
outsb
mov
cmp
mov
pop
outsb
adc
cmp
nop
fsubrp
adc
int3
inc
adc
enter
xchg
in
inc
push
test
cmp
xchg
push
pop
scas
mov
sub
leave
stc
sub
andl
jp
shl
mov
shlb
outsl
test
adc
arpl
mov
out
sbb
outsl
rcrb
mov
into
sbb
push
sbb
shrl
jl
loope
pop
sahf
sbb
test
loopne
mov
es
outsb
sub
or
cli
push
mov
fimuls
xor
lods
sbb
add
sub
pop
push
mov
add
xchg
cwtl
pop
sar
jg
arpl
ficompl
cli
mov
inc
jg
xchg
jno
hlt
out
push
push
clc
inc
repz
outsb
hlt
into
mov
fsub
cmpsb
and
outsl
fdiv
aas
sub
jge
rcrl
and
sub
add
adc
lock
loop
popa
dec
pop
cltd
mov
ss
rcr
std
rorb
lock
add
movsl
pushf
push
sbb
pop
jge
jne
adc
ret
jb
add
test
mov
xor
lods
push
into
popf
pop
xchg
push
inc
pop
fldcw
shll
push
pop
andb
jmp
test
cmp
repnz
mov
rclb
popa
pop
mov
sahf
and
cmc
mov
sbb
xor
fistpll
jne
test
in
sbb
adc
jbe
jb
fwait
dec
jl
nop
sti
pshufw
jb
push
sbb
push
rorl
add
adc
clc
or
and
mov
mov
push
jl
xchg
call
sarb
mov
sub
sbbl
add
xor
in
test
loopne
cs
arpl
out
add
movsb
inc
in
push
cwtl
call
dec
imul
out
outsl
sub
test
cmpxchg
cmc
mov
ret
lock
ss
fistl
adc
mov
add
push
rcrb
inc
aad
lods
jne
dec
sub
shl
in
jp
push
mov
gs
sbb
ja
sbb
add
push
ja
cld
pause
std
ficoml
mov
stc
aam
aam
push
pop
inc
dec
pop
mov
or
int3
and
imul
mov
add
mov
mov
pop
fcompl
jecxz
push
js
frstor
add
inc
inc
popa
pop
dec
clc
dec
pop
adc
jnp
cmpsb
mov
push
sub
jle
js
push
xchg
loop
dec
mov
in
rcrl
mov
movsb
sub
add
mov
out
add
pop
dec
and
push
mov
cwtl
xor
mov
clc
add
cmp
shr
mov
mov
hlt
outsb
js
jp
cltd
sahf
cltd
nop
ljmp
jl
fidivl
cltd
addr16
addr16
inc
cwtl
ds
mov
lock
pop
push
cmp
aaa
fistl
xor
andl
adc
jg
mov
pop
jnp
pop
dec
stos
xchg
push
and
xor
and
pop
mov
outsb
push
sbb
or
sbb
test
mov
cmp
push
sbb
add
mov
pop
nop
in
sub
mov
stos
pushf
mov
pop
xorl
inc
iret
and
push
movl
xor
stos
stos
sti
sbb
mul
cs
sbb
cwtl
jp
adcb
int
jne
pusha
repz
mov
mov
jle
mov
stos
mov
add
ja
in
lahf
test
mov
int3
sub
xlat
dec
out
cmp
and
testb
xchg
outsb
orl
into
ret
sarl
xor
mov
in
inc
and
pop
add
cld
loope
pop
jo
movsl
repnz
fs
cwtl
js
mov
push
or
sbb
add
mov
dec
push
ja
inc
int
mov
or
inc
psrlw
pop
in
jp
adc
mov
out
scas
aaa
setb
loope
pop
jo
jnp
adcb
inc
pop
jl
nop
add
nop
into
jae
cwtl
loop
call
push
cmpsl
pop
add
pushf
lods
insl
add
xchg
and
out
inc
and
or
imul
test
cwtl
inc
dec
andb
sahf
xor
pusha
mov
das
je
xor
daa
call
pop
ficomps
shrl
add
dec
cwtl
fistpl
pop
pop
xchg
xchg
mov
mov
inc
adc
xchg
xlat
insl
or
js
outsb
mov
push
cli
inc
mov
sbb
aam
xchg
mov
xchg
icebp
xor
mov
scas
out
mov
bound
push
adc
incl
rcll
rcll
in
add
icebp
xor
mov
lret
fs
sub
js
ret
inc
pop
jecxz
loop
xchg
call
cmp
incl
mov
or
lods
daa
insl
or
imul
je
leave
add
push
in
repnz
lret
pop
out
xchg
jg
scas
dec
xchg
aam
adcb
out
dec
insb
into
cs
pop
mov
stc
push
add
hlt
dec
fisubrl
shlb
mov
dec
das
inc
lods
idivl
clc
mov
aad
std
mov
shll
sbb
int
ret
int3
adc
push
insb
dec
call
inc
mov
mov
jge
popa
ret
pop
leave
cwtl
mov
in
inc
inc
es
out
sbb
jmp
adcl
pusha
pop
or
and
push
cmc
sbb
or
ret
push
adc
sub
repz
mov
idivb
dec
lcall
mov
mov
bound
mov
mov
loope
test
div
dec
repz
adc
das
or
jnp
push
in
leave
popf
mov
cmpsl
popa
rcrl
adc
int
sahf
mov
mov
sbb
icebp
xor
mov
jns
mov
jl
jg
jmp
push
stos
sub
aam
lds
and
push
lds
outsl
inc
sub
mov
sub
mov
jns
out
xor
cltd
sbb
dec
or
jmp
jg
push
inc
mov
je
ret
fnstsw
fwait
xchg
enter
pop
dec
repz
pop
ret
xchg
sbb
aam
xchg
outsl
inc
loope
push
jae
pop
push
arpl
mov
mov
sbb
das
add
dec
in
adc
outsb
add
mov
stc
add
mov
add
fstpl
mov
add
xlat
sub
mov
rcrb
lods
pop
pop
push
aas
int
xchg
push
aas
dec
inc
mov
adc
or
lea
rol
pop
js
into
jl
pop
fidivs
fcompl
sbb
mov
xor
mov
cli
add
add
add
sbb
out
pop
lods
add
xor
mov
repz
pusha
movsb
data16
push
subb
jbe
arpl
loopne
or
mov
push
aad
mov
xchg
and
xchg
mov
jns
mov
jnp
push
fiadds
mov
out
dec
dec
adc
lcall
mov
or
mov
aam
les
jp
and
xchg
mov
or
daa
xchg
stos
aad
xlat
and
mov
pop
sti
xchg
jmp
sub
xor
fs
insl
mov
xchg
add
in
push
sahf
jbe
jno
mov
ficoms
sub
mov
mov
arpl
and
mov
stc
fimuls
mov
movq
das
sarb
insl
cmp
arpl
in
inc
mov
nop
repnz
sbb
pop
imul
movsl
pop
hlt
dec
pop
stos
push
xchg
les
jae
loop
pop
pop
inc
adc
push
data16
xchg
jno
cmp
pop
add
or
add
sbb
rolb
repz
gs
call
loope
xor
subl
pop
popa
cli
dec
adc
dec
fs
sbb
inc
dec
pop
lcall
das
sub
cwtl
lahf
jno
fisubs
nop
inc
sahf
or
sbb
stos
pusha
int3
inc
mov
push
je
and
mov
inc
sbb
mov
adc
jno
dec
mov
scas
xor
lahf
push
and
jge
subl
leave
es
gs
icebp
int
add
mov
xchg
pop
iret
pop
fcomps
jl
inc
mov
fistps
lods
lods
mov
xchg
adc
js
lea
sbb
mov
imul
shr
pop
push
xchg
or
daa
mov
cmp
sahf
inc
cs
out
mov
dec
adc
xor
mov
daa
iret
sti
loopne
cmpsl
sub
inc
lock
add
ja
jmp
mov
fstp
pop
call
test
shrb
leave
sbb
popf
pop
and
push
mov
and
scas
popf
scas
and
xchg
and
fnstenv
xor
push
jno
mov
cmp
or
xchg
xchg
inc
or
pop
sub
xchg
psubw
fnstcw
aaa
mov
idivb
fsubp
movsb
pushf
mov
xor
push
test
test
jnp
fwait
bound
js
bound
scas
out
push
iretw
xor
mov
mov
push
inc
out
pop
sbb
or
sub
cltd
jmp
movl
dec
and
mov
and
shl
inc
sbb
imul
lea
dec
fcompl
sbb
out
cmp
stos
rcrl
sti
test
jbe
inc
or
xor
fldcw
ds
test
fistpll
xchg
ret
push
sub
xchg
jnp
mov
lock
sbb
pop
sbb
inc
pop
imul
xor
dec
fwait
loop
jg
aas
clc
cmpsb
fnstsw
jbe
dec
lcall
es
dec
pushf
inc
cwtl
aas
or
movsl
jae
es
rolb
jmp
add
xchg
mov
sub
cmpsb
mov
leave
mov
out
hlt
mov
popa
fstp
sbb
clc
add
nop
push
pop
cmp
cmp
cmp
mov
push
cs
jmp
sub
and
hlt
push
sbb
leave
adc
sahf
inc
in
test
and
mov
mov
arpl
gs
arpl
fdivl
or
jl
outsb
jae
js
dec
ljmp
lret
imul
xchg
inc
js
popf
mov
mov
cmp
popf
xor
pop
push
aam
stos
stos
pop
sbb
cmc
hlt
dec
hlt
sbb
rorl
or
cs
dec
rorl
ljmp
push
mov
pop
or
mov
cmp
push
mov
mov
shrl
mov
test
call
xchg
adc
fldcw
negl
stos
or
sub
gs
cmp
rorl
call
rcr
iret
or
push
pop
mov
imul
fists
cmp
inc
icebp
or
inc
inc
push
add
push
mov
aaa
ljmp
adc
and
sub
jp
lahf
mov
or
ret
mov
imul
push
adc
pop
dec
mov
push
int3
pushf
sahf
cltd
xor
insl
add
hlt
mov
aam
push
and
std
ret
pop
xorl
xchg
jno
adc
mov
flds
out
sub
movl
movsl
call
out
add
lret
push
out
mov
movsb
sbb
sub
imul
xor
fdivp
xchg
cmpsb
push
stos
ror
xor
sbb
scas
out
loope
gs
insl
nop
daa
dec
add
or
shrl
add
mov
cmp
cli
or
xchg
add
dec
cmp
ficoml
in
pop
lds
pop
pop
scas
push
mov
xor
in
and
fcoms
mov
pop
mov
into
pop
jns
inc
pop
dec
shll
das
add
imul
mov
inc
mov
pusha
push
adc
fiaddl
xor
xchg
hlt
cmc
das
stos
mov
or
test
add
mov
mov
stos
cmpb
std
and
sub
ret
sub
insb
out
insl
mov
in
xor
cmp
mov
stos
or
push
jecxz
repnz
fs
cs
sub
js
xchg
sbbb
ret
repnz
mov
leave
xchg
in
sub
push
sub
ja
in
sub
jne
ret
movsl
fstpt
out
sub
mov
mov
mov
scas
and
pop
mov
sbb
insb
mov
add
push
or
adc
aaa
cs
push
push
dec
fidivrl
lods
push
pop
out
jecxz
cwtl
icebp
mov
push
pop
loope
enter
imul
dec
xchg
and
aad
inc
inc
mov
jmp
loopne
lret
pop
test
nop
mov
xor
mov
mov
sti
stos
in
or
xor
sahf
lret
stos
xor
les
mov
and
mov
cmp
enter
cmp
xor
ret
cld
ds
or
les
cmp
mov
jl
call
inc
lock
andl
lcall
sub
push
leave
test
xchg
cmpl
mov
sub
inc
or
sub
dec
push
je
mov
xor
cltd
mov
dec
addr16
dec
fiaddl
jp
hlt
push
shr
fwait
insb
fidivs
mov
lahf
ss
mov
int
icebp
sub
cmp
cmp
imul
adc
jge
aas
pop
fisubl
jb
mov
fwait
rolb
mov
mov
xor
scas
mov
lds
stos
and
loopne
lahf
add
jmp
test
or
gs
dec
lcall
cmp
mov
adc
std
cld
outsb
je
bound
bound
ret
movsl
test
dec
call
mov
mov
repnz
and
cmp
or
shll
loopne
loopne
sbbl
jb
mov
lea
xchg
cmp
push
jge
pop
pop
jbe
jnp
push
inc
dec
imul
sbb
dec
sub
cltd
pop
sbb
add
popl
jo
sahf
pop
movsb
imul
add
js
sub
sbb
subb
sub
decl
and
mov
adc
mov
jne
pop
sbb
orb
add
xlat
scas
or
mov
push
pop
adc
cmpsb
jmp
inc
data16
sub
mov
ficomps
push
sbb
adc
push
test
dec
push
adc
mov
test
out
xchg
xchg
sbb
insl
fimull
data16
sti
add
or
repz
ret
stos
out
adc
mov
cld
sub
mov
cmpsb
jle
jmp
shrb
lock
push
inc
rcrb
or
test
fsts
pop
inc
or
inc
cmpsb
ss
aad
or
fnstenv
cmp
mov
jl
sub
addl
mov
sti
mov
cmp
faddl
call
pop
xchg
adc
data16
or
or
js
fwait
sub
xchg
push
cwtl
jmp
divb
or
and
mov
in
mov
pop
hlt
in
outsb
loop
mov
inc
add
and
pop
push
and
call
xchg
sbb
fnsave
ret
push
fnstcw
inc
mov
rol
andl
dec
and
and
js
aam
dec
and
pop
sbb
xor
xchg
bound
or
pop
pop
push
in
test
testb
shll
js
not
pop
jae
ret
fs
pop
xchg
sar
inc
sbb
ret
test
jg
ljmp
into
jo
mov
mov
or
fisubrl
jp
lahf
iret
and
aaa
mov
mov
fnsave
xlat
loop
push
sbb
out
mov
test
js
jbe
xchg
mov
jp
cld
jo
bound
call
sbb
and
fstpt
jns
push
clc
into
bsf
les
push
les
in
sti
dec
mov
pop
test
or
dec
scas
loope
pop
push
imul
jg
xlat
insb
add
add
jne
fisubs
jmp
xchg
jno
inc
cmpl
pop
push
pushf
loopne
fs
int
mov
sbb
pop
fwait
or
push
aam
or
mov
dec
cmpsb
push
mov
stc
inc
mov
xor
push
clc
ljmp
pop
add
lahf
scas
xchg
pop
leave
notb
out
mov
pushf
int3
mov
or
mov
push
and
lcall
test
mov
xchg
xchg
js
in
pusha
mov
sbb
iret
popf
sub
mov
out
mov
and
jno
cmpsb
int
sub
mov
jl
jae
and
xchg
in
popa
mov
dec
cmp
mov
fsubp
fidivl
xchg
push
fdivs
rcrb
call
int3
or
adc
std
jmp
or
lahf
xchg
sbb
push
sahf
mov
aam
nop
mov
or
pop
fildl
clc
xor
sti
jg
cmp
enter
mov
sbb
mov
sbb
dec
repnz
mov
xchg
lods
push
outsb
and
pop
and
cmc
inc
les
xchg
push
addr16
fimull
call
scas
mov
gs
cmp
jb
aam
push
cmpsl
jle
and
mov
pop
and
dec
cmp
loopne
les
test
in
and
aam
mov
dec
mov
stos
idivb
jne
xor
sti
dec
sub
enter
lods
xlat
cli
mov
in
sub
js
pop
jl
repz
andl
cmp
outsb
or
or
inc
xchg
rcr
mov
mov
int
jge
sti
xchg
mov
imulb
mov
arpl
ljmp
aaa
or
test
jnp
ret
data16
push
dec
pop
scas
jne
jbe
aad
dec
push
inc
ss
pushl
mov
cltd
xor
imul
jb
mov
int3
roll
push
pcmpgtw
or
je
add
xor
sbb
repz
add
pop
push
cltd
cmpsb
xor
lahf
notb
dec
sti
xor
lret
into
mov
fsubrs
shl
cmp
push
pop
lods
cmp
mov
je
dec
fstpt
xchg
lahf
imul
jae
inc
imul
lret
iret
les
in
or
dec
push
jp
lds
pop
or
xchg
pop
mov
or
push
lods
push
pop
popf
mov
push
repnz
jmp
sub
sbb
xor
test
addl
xor
mov
xor
cmp
sub
daa
xor
or
movl
repz
mov
xchg
rcr
xchg
and
insb
test
sub
dec
pop
fidivl
xor
sbb
sub
shll
jmp
inc
clc
sub
push
cmp
shlb
and
out
fiaddl
sti
xchg
mov
lock
sbb
scas
sub
push
or
movsb
mov
push
inc
and
stc
or
push
lods
fs
mov
mov
stos
testl
ds
jae
out
push
sbb
mov
sub
int3
pop
syscall
xor
arpl
lock
or
sti
pusha
dec
push
das
inc
pop
int
inc
cmp
sub
mov
js
flds
sbb
mov
not
fidivrs
push
xchg
cmpsl
popa
add
pop
aas
xchg
jb
loop
lcall
outsb
push
sub
jbe
into
inc
sbb
mov
ret
roll
pop
fdiv
sbb
or
mov
mov
popa
rcrb
jecxz
out
lcall
push
adc
sahf
sbb
pop
inc
jge
jno
aaa
jnp
push
or
movsb
push
mov
ja
push
jg
xor
pop
mov
ficoms
cmp
push
xchg
sbb
fdivl
cmp
out
push
push
push
pop
pop
cli
pop
fistpll
push
in
loop
dec
lret
cltd
in
mov
inc
cmp
loopne
or
sbb
cwtl
roll
adcb
daa
ret
mov
or
fwait
pop
xor
add
pushf
sarl
pop
ljmp
mov
dec
push
lret
or
jp
js
adc
mov
std
out
mov
pusha
or
jmp
les
notb
xchg
xchg
jecxz
dec
sub
call
xchg
sub
aad
sbb
cld
add
out
rcrl
dec
mov
jae
xor
jp
aam
in
adc
add
push
mov
arpl
cmp
add
std
stc
aas
mov
clc
xchg
fcmovne
inc
cltd
cld
call
aam
jecxz
mov
sti
mov
divl
mov
jno
aas
out
push
movsl
imul
aad
push
imul
xchg
sbb
scas
add
and
out
repz
test
jmp
movsb
insb
and
imul
loop
mov
mov
fsts
cltd
add
dec
popa
cmp
out
lock
ds
push
mov
add
test
push
and
pop
pop
scas
inc
subb
xlat
test
ljmp
test
inc
sub
mov
dec
pop
sar
pop
jae
push
sub
imul
cltd
jno
inc
push
cld
imul
je
fmul
outsl
cs
stos
sub
pop
dec
lods
es
fisttpll
lods
movsl
rorb
cwtl
icebp
or
out
shll
jns
sti
ret
gs
sbb
push
and
fbld
xor
call
inc
push
sbb
loopne
pop
dec
xchg
imull
nop
shll
add
mov
outsl
adc
adcl
int3
dec
jnp
mov
scas
mov
movsl
inc
insb
jno
jecxz
out
xor
pop
stos
and
insl
rorl
aaa
add
jl
lret
test
leave
pop
nop
popf
adc
lds
cmpb
sub
jg
or
jecxz
xor
dec
pop
and
lret
fs
lea
and
cmp
add
orb
jb
mov
test
out
in
mov
inc
pop
mov
and
jne
ss
cld
xor
les
fmuls
iret
mov
mov
mov
mov
cmp
icebp
dec
inc
sbb
std
in
out
inc
sahf
fsub
mov
fwait
mov
fadds
leave
sbb
xchg
repnz
cmp
inc
push
movsl
push
inc
and
or
andl
pop
scas
insb
fstl
pop
scas
push
and
sbb
mov
jne
fdivrs
in
mov
icebp
aam
xchg
loope
mov
jbe
mov
xor
loope
sbbl
mov
arpl
or
pop
pop
sbb
xchg
mov
jne
push
jmp
inc
add
cmp
js
ljmp
movsb
jp
and
push
pop
and
jl
push
insl
xlat
pop
push
cmpsl
out
sbb
hlt
inc
fs
ficompl
add
idivl
and
xlat
mov
inc
rcll
jmp
cmp
outsb
and
sub
rolb
pop
pop
xor
leave
arpl
hlt
outsb
sub
dec
rorl
data16
out
movsl
adc
mov
jle
sbb
pushf
jbe
data16
test
mov
mull
jg
xor
lret
std
cmp
jmp
add
push
jo
adcb
mov
mov
in
mov
dec
add
orl
pop
cwtl
sbb
mov
pop
pop
mov
mov
lock
movsb
ss
mov
ljmp
dec
icebp
jae
push
or
gs
xchg
xchg
inc
add
mov
mov
push
mov
aad
nop
inc
nop
mov
pop
stos
adc
popa
cli
jle
mov
lret
cltd
cmp
iret
outsb
hlt
pop
out
mov
into
mov
mov
pushf
push
add
jg
mov
inc
sub
pop
pop
shl
cmp
adc
mov
dec
inc
mov
imul
daa
addr16
add
push
pop
sbb
xchg
sbb
lock
push
mov
int3
or
cmpsb
popf
iret
sbb
inc
insb
add
lret
das
lret
pop
ljmp
adc
nop
je
lea
adc
stc
test
subb
jae
cmovg
jo
in
icebp
pop
cld
jle
aam
push
hlt
mov
icebp
dec
dec
daa
pop
sub
cmpsl
cmp
pop
xchg
or
inc
dec
jecxz
mov
adc
cmpb
push
packsswb
pop
sub
and
push
cmp
repz
and
sbb
sbb
mov
mov
hlt
jge
dec
inc
push
adc
add
pop
orb
iret
and
icebp
out
xor
ljmp
sbb
inc
repnz
into
stc
bound
mov
pop
xor
sahf
rcr
loop
push
inc
xchg
mov
stc
cld
adc
imull
pop
aas
lcall
push
cmp
scas
sub
or
sbb
xchg
cmpsb
std
test
adc
aam
insl
cmp
lret
aam
sbbl
jg
orb
cwtl
lea
insb
inc
dec
cmp
inc
or
in
imul
cmpsl
cmp
lcall
adc
inc
push
cwtl
ret
out
popa
pop
mov
loopne
test
sbb
out
aad
mov
xor
mov
push
icebp
insl
adc
andb
in
in
pop
sbb
push
dec
icebp
pop
or
dec
fmuls
test
mov
int3
popa
roll
mov
in
inc
mov
push
adc
mov
fisttps
xor
test
bound
mov
dec
ret
xor
xchg
fsubrl
fidivrl
pop
push
lahf
adc
mov
dec
fnstsw
fdiv
mov
cmpsl
shlb
xor
xchg
fdivl
lds
repz
gs
mov
jl
stc
dec
int3
or
adc
pop
subb
ret
mov
je
adc
mov
ds
addr16
pop
xlat
push
jbe
inc
shll
xchg
cmp
mov
sbbl
jg
add
aas
jecxz
mov
inc
dec
mov
rclb
nop
mov
in
dec
mov
mov
rcrl
scas
and
pop
or
gs
or
mov
xchg
or
adc
pop
hlt
or
push
xor
cmp
adc
add
fstpl
and
inc
push
pslld
mov
mov
push
pop
bound
in
aam
jp
es
fdivl
mov
insl
incb
pop
movsb
fs
xchg
and
sub
mov
push
test
popf
lahf
inc
mov
xchg
fisubrs
pop
in
jg
mov
cli
xchg
pop
loopne
loope
fstp
leave
test
insl
cmc
jl
test
aas
clc
imul
sti
flds
mov
and
ljmp
cmp
or
cmp
daa
das
push
out
mov
pop
sbb
xchg
loopne
scas
xchg
sub
pop
and
push
sti
mov
in
int3
sbb
jecxz
sub
fwait
outsb
jle
leave
xchg
js
pop
mov
sbb
je
cwtl
insb
movb
xchg
push
xor
sbb
cmp
xchg
stos
mov
outsl
and
test
push
cmc
dec
in
mov
popa
lods
std
adc
dec
push
jmp
inc
ret
jp
sti
mov
daa
dec
in
test
out
test
push
cmpsb
jmp
xchg
stc
push
out
enter
mov
dec
push
fisttpl
push
in
push
xchg
ljmp
pusha
lock
leave
fdivrs
rclb
mov
mov
push
adc
or
add
sub
leave
xchg
aad
adc
dec
jns
mov
xor
inc
cmp
imul
loop
jmp
sbbl
into
enter
add
xlat
daa
subl
xchg
pop
dec
icebp
pop
xor
push
mov
jmp
out
pop
int3
cmpsb
shlb
sbb
fisubs
push
fs
xchg
cwtl
xchg
adc
xchg
xlat
pop
ffree
in
movsl
cmpsb
xchg
icebp
xor
movsb
sbb
cmp
dec
mov
pop
dec
pop
fadd
xor
mov
pop
lods
pop
shll
cmp
xlat
shrl
pop
outsb
adc
pop
mov
lret
xchg
adcl
xchg
mov
push
adc
mov
test
and
in
mov
mov
cs
cmpsl
and
andb
in
push
or
pop
and
push
jl
push
pop
xchg
adc
popf
pop
insl
push
cld
cmp
punpcklwd
xor
add
adc
mov
lret
stos
dec
inc
jle
arpl
repz
push
ret
hlt
and
sbb
adc
inc
stos
pop
je
pop
jecxz
shl
sbb
aad
xchg
test
imul
push
mov
adc
lods
aad
andb
cli
sub
and
or
pusha
mov
jne
jmp
mov
outsl
idivb
sub
add
js
add
out
lea
daa
mov
inc
adc
repnz
adc
xor
or
mov
dec
jnp
sbb
cli
out
mov
lock
pusha
lods
xchg
xchg
icebp
popa
repz
fistps
imul
adc
cli
mov
xchg
pushf
data16
mov
inc
es
push
mov
mov
and
push
sub
leave
mov
enter
inc
clc
lods
mov
add
popf
add
pop
or
sbb
inc
rclb
xchg
push
cmpsb
rclb
mov
push
cmp
mov
fnstcw
out
add
fs
mov
shrl
pop
jae
in
fdivr
mov
mov
xor
mulb
int
imul
mov
mov
test
xchg
sbb
cld
fmuls
adc
push
sti
jle
femms
mov
dec
cld
icebp
pushf
dec
mov
cmp
and
jne
sbbb
out
mov
hlt
pop
add
pop
add
test
mov
mov
dec
jecxz
adc
mov
out
push
lret
cmpsl
in
ljmp
popa
icebp
aam
jmp
inc
dec
jg
xchg
aam
inc
adc
mov
test
push
decl
mov
and
mov
xchg
pop
pusha
pop
add
adc
push
int
mov
add
loopne
sub
jne
je
xchg
adc
lret
add
ss
xchg
jnp
cmp
loopne
push
int
xchg
or
sbb
bound
dec
lock
in
popa
imul
xchg
mov
push
cs
and
lock
iret
fistl
jl
sahf
sbb
test
scas
cmp
es
testb
xchg
movb
xor
xchg
out
stos
call
cltd
ss
dec
enter
mov
pop
std
stc
bnd
scas
scas
pop
jecxz
jge
push
sub
add
jo
stos
ficoml
leave
sub
fs
in
fsub
xchg
aam
mov
mov
stos
shl
cmp
outsl
shl
cmpsb
push
jecxz
sbb
sbb
in
dec
or
adc
nop
mov
jne
pop
lcall
loopne
mov
add
lcall
cld
adc
xor
mov
sub
cwtl
sub
xchg
dec
fnstenv
lock
test
mov
mov
mov
mov
imul
cmc
jl
out
pop
cwtl
ss
xor
pusha
cmpsl
scas
mov
mov
push
jle
hlt
jae
aaa
push
lods
shrl
xchg
gs
mov
insb
cmp
push
cwtl
test
clc
push
in
repz
sbb
test
out
pushf
jo
lods
cmpsl
jmp
push
daa
daa
mov
pop
ficomps
jns
jp
gs
sbb
mov
stos
int3
cmc
jno
data16
loope
mov
mov
jmp
xor
push
adc
ja
cmp
movsl
dec
data16
add
xchg
mov
das
hlt
sbb
repz
mov
fiaddl
pop
dec
loope
in
push
roll
add
test
nop
sub
scas
jp
movb
sbb
out
fimull
jno
adc
in
add
sbb
sub
movups
pop
sub
or
ds
xchg
test
jmp
fwait
imul
dec
test
pop
andl
mov
or
push
imul
leave
dec
dec
pop
sub
mov
xor
sahf
test
mov
cld
loopne
imulb
xchg
fs
orb
lahf
cmpsl
cmpsl
mov
mov
std
hlt
cwtl
aas
inc
mov
stc
jae
aad
or
test
or
xchg
adc
jae
popf
imul
mov
cmp
xor
cmp
in
icebp
push
inc
imul
sub
iret
call
mov
jae
sbb
in
xchg
jp
lret
or
outsl
clc
or
cld
insl
ja
int
das
sub
pop
cmp
pop
testl
jae
mov
jl
aam
enter
stos
mov
ficoms
cmp
pop
dec
xor
repz
cltd
pop
dec
iret
push
adc
and
fcompl
push
jg
inc
ffree
mov
ja
test
sbb
jl
xlat
es
enter
and
aad
dec
cli
mov
aaa
add
pop
pop
dec
sub
dec
pop
in
sbb
fstl
jns
xchg
sub
push
sub
jl
lods
popf
pop
and
xchg
iret
push
dec
xchg
in
int3
or
pop
ja
cmpsl
cmp
into
adc
lea
rcrb
adc
push
sbb
dec
js
push
decb
push
jp
dec
and
cld
lds
push
jmp
por
lock
mov
pop
push
aas
mov
lcall
rolb
frstor
ja
dec
ret
xchg
aas
adc
sbb
sub
mov
shl
call
mov
or
and
jb
pop
idivl
inc
push
ret
cld
cmpsb
ja
dec
fistl
loop
xchg
ljmp
inc
mov
stos
and
xor
cmp
add
add
lods
cld
dec
arpl
dec
fadds
pop
xlat
mov
and
pop
dec
inc
popf
scas
rcr
sub
jp
sub
or
push
push
les
pusha
inc
mov
mov
mov
mov
icebp
iret
pop
pop
cmp
adc
inc
lret
sbb
pop
or
lret
pop
dec
outsb
cmpl
es
and
dec
shlb
jnp
call
adc
repz
negl
cli
mov
pop
fwait
cmp
aad
cmp
xor
out
test
inc
cmpb
ljmp
jmp
and
dec
mov
jne
jb
pushf
xor
lahf
cmc
xchg
data16
cmp
jb
push
jge
pop
mov
jo
inc
shll
scas
sbb
or
or
loop
jmp
stos
insb
iret
lret
cwtl
adc
dec
or
icebp
daa
push
push
das
mov
ss
push
dec
pop
stos
enter
hlt
pop
add
xor
lea
mov
lahf
cmpsb
cmpsb
sbb
in
pop
adc
dec
loop
mov
cmc
int3
out
test
sti
mov
mov
sbb
mov
dec
pop
arpl
int3
iret
incl
push
pop
mov
arpl
xlat
mov
dec
scas
ret
mov
js
mov
inc
mov
sub
out
push
and
jo
hlt
ss
pop
jle
xor
test
jmp
stc
pop
jmp
test
or
lcall
xchg
inc
inc
inc
adc
js
mov
lcall
xchg
jle
mov
call
add
pop
fidivrl
iret
notl
addr16
and
dec
call
out
mov
rcll
sbb
rep
out
pop
pusha
or
push
and
stos
sahf
bound
mov
rorb
incb
cwtl
and
sub
sbb
jg
mov
sub
xchg
pop
mov
push
das
xchg
push
adc
inc
int3
adc
out
pop
fwait
mov
andb
scas
icebp
aaa
or
inc
adcb
xor
imulb
shrl
mov
or
repz
mov
xchg
inc
bound
cli
scas
ret
push
das
test
mov
xchg
and
in
jbe
hlt
dec
sub
jae
cmp
adc
dec
push
adc
test
stos
and
scas
inc
adc
jne
je
lds
orb
cmp
inc
pop
push
add
lods
jp
fdivs
out
xchg
jo
adc
sub
mov
inc
lahf
jbe
mov
add
pop
mov
bound
push
ss
jae
xor
cmpsl
xor
mov
cmp
jae
cld
scas
xor
mov
and
je
xchg
js
testl
inc
test
sub
scas
roll
add
cmp
mov
cmpsb
push
pop
jp
pop
sahf
sbb
sub
daa
push
das
stc
push
inc
ljmp
cmp
js
pop
iret
das
cmc
in
xchg
inc
inc
data16
shlb
dec
int3
data16
pop
mov
pop
into
rcr
add
shrl
dec
cmp
push
es
fadds
pop
add
dec
fsts
dec
mov
xlat
jo
push
fdiv
sbb
movsl
cmp
push
inc
aaa
jb
push
pushf
sub
in
inc
fstpt
scas
daa
lahf
adc
pop
add
cwtl
shlb
out
pop
push
scas
sbb
mov
rcrb
in
cli
fsubrs
out
pop
les
js
push
inc
nop
pusha
or
sub
lods
les
imul
addl
stc
mov
inc
gs
jmp
fistps
int3
xchg
shlb
fadds
hlt
enter
xchg
dec
and
add
pop
in
std
nop
stc
stos
adc
std
fwait
add
dec
loope
aam
push
push
mov
inc
push
mov
push
dec
sahf
mov
push
sub
out
fidivl
mov
sbb
and
stc
push
ret
sahf
les
iret
imul
movsl
icebp
add
mov
addl
fcoml
movsl
mov
divb
push
push
call
test
cmp
pushf
gs
adc
ret
shll
xchg
sbb
out
inc
cmp
mov
inc
dec
adc
out
push
popa
xor
pop
int
ljmp
pop
call
bound
int
lds
adc
add
jp
movsb
lcall
cmp
jae
gs
xchg
xchg
push
dec
ljmp
mov
stos
xchg
jae
pusha
mov
aam
or
xor
inc
sub
pop
mov
jns
cmpb
lds
jg
add
xor
test
push
mov
push
push
aad
das
call
pushf
sbb
sub
mov
ss
ss
jle
xchg
mov
lcall
enter
sub
sbb
dec
adc
adc
lret
or
push
jp
mov
cld
clc
test
out
cmp
xchg
inc
and
cmpsl
ret
test
nop
mov
pop
mov
pop
arpl
jg
scas
xchg
ret
enterw
scas
sahf
xchg
cmc
pusha
inc
stos
sub
jmp
xor
test
testl
jae
jl
sbb
mov
cmp
adc
movl
js
cmpsb
push
iret
mov
push
pop
dec
scas
hlt
daa
ljmp
jp
dec
pop
into
shll
aad
cmp
loopne
das
inc
xchg
adc
cld
mov
add
outsl
dec
out
inc
xchg
xor
cld
cmc
enter
test
push
pop
hlt
rol
aas
push
ds
pop
insb
adc
xor
mov
adc
jp
clc
cwtl
iret
xor
lods
lret
ret
push
ljmp
fs
fisubs
push
setg
mov
push
jb
xor
cmp
scas
sub
cmp
imul
out
or
mov
in
mov
jae
sbb
mov
scas
and
mov
stos
sub
mov
imul
push
imul
mov
xchg
adc
in
jne
das
xchg
nop
push
xchg
sub
sub
std
clc
sbb
push
pop
int3
or
pusha
movsl
loopne
enter
nop
inc
inc
daa
push
aaa
mov
mov
test
cmpsl
iret
lret
or
fldt
movsl
inc
loop
push
daa
dec
and
xchg
cld
cmpb
add
outsl
cmp
pop
aas
dec
iret
mov
fcoms
inc
nop
cs
mov
lcall
sbb
or
das
pop
fwait
lahf
loopne
bound
cmpb
sbb
push
jl
ret
fucom
hlt
pop
shlb
cmp
cmp
dec
stos
out
ss
inc
hlt
or
push
data16
into
rcll
in
push
dec
arpl
push
xchg
call
stc
outsb
test
add
popf
add
sahf
rcll
aad
hlt
out
add
iret
test
lea
sub
add
sbb
fadds
lret
enter
popf
daa
sub
ds
jge
scas
test
pop
addr16
mov
popa
jg
jae
pop
addr16
mov
xor
sbb
data16
in
xor
inc
sbb
push
out
rcrl
lret
mov
dec
stos
in
cmp
call
test
scas
hlt
lock
cmpsb
and
outsb
adc
lea
or
lods
int3
mov
or
pminub
sbb
int3
push
lds
sub
sbb
inc
mov
or
out
push
pushl
aas
nop
jp
push
mov
repnz
fwait
iret
movsb
xchg
jmp
or
orl
outsl
add
inc
push
test
hlt
test
jmp
xchg
fs
xor
ret
xchg
addb
data16
adc
cmp
adc
xchg
std
aad
and
cmp
and
mov
mov
push
repz
dec
jmp
jg
push
adc
ficoms
in
cmpsl
cmpsb
sbb
add
jno
or
lea
fsubrs
cmp
and
jbe
loop
pop
jo
ret
xor
in
pusha
add
or
jp
je
xchg
mov
push
pop
xor
call
sub
lret
lea
in
add
mov
inc
test
mov
aad
enter
popa
xor
cmp
scas
outsl
cld
push
xorl
std
mov
pop
pop
pop
push
mov
xlat
aas
mov
cwtl
and
push
cltd
outsb
add
movsb
and
je
sub
popa
cs
pop
fnstsw
mov
jae
in
add
and
jae
leave
punpcklbw
stos
aas
ss
mov
inc
scas
mov
popl
out
pop
push
rorb
mov
rcrb
inc
enter
ret
mov
movsb
fsubr
data16
scas
jnp
jmp
jle
nopl
pop
enter
dec
and
popf
pop
in
out
sub
mov
in
fmuls
dec
add
mov
xor
iret
and
btr
jmp
lods
inc
pop
lea
icebp
fimull
into
and
xchg
fistpll
xchg
cmp
daa
push
sub
jg
cmc
sub
iret
push
in
jmp
sbb
popf
inc
fisttps
stos
sub
xchg
out
adcb
jnp
lock
pop
enter
sub
clc
pop
jae
pop
je
bound
sub
jge
mov
mov
inc
ret
daa
adc
xchg
push
mov
int3
into
xchg
dec
bndstx
xor
or
cmp
loope
cmp
int3
pop
bound
mov
aad
jb
sbb
test
jne
out
pop
bound
or
mov
pop
pop
mov
xor
hlt
inc
jae
pop
mov
dec
mov
cwtl
fidivrs
jae
addl
pushf
lret
add
aad
test
imul
stos
leave
sahf
xor
inc
xor
test
cltd
or
inc
push
xor
lret
lret
dec
pop
in
mov
mov
add
adc
cli
or
aad
clc
stc
sub
scas
fildl
mov
outsb
pop
sti
sub
insl
pushf
xchg
mov
jmp
xor
xchg
dec
ljmp
jb
jnp
dec
and
call
xchg
dec
lods
nop
ret
fsincos
ds
mov
pop
sbb
je
sahf
or
add
adc
sbb
push
dec
xlat
popf
mov
pop
sub
ja
pop
mov
push
dec
cmp
lock
aad
ja
inc
les
pop
out
and
lods
mov
loope
sub
nop
jae
mov
sub
popf
in
push
rorl
fwait
enter
add
cwtl
popf
adc
notl
and
push
jg
mov
jge
push
push
and
jl
cmpsl
cli
lods
clc
jecxz
sahf
mov
jmp
jns
ret
pop
neg
scas
jo
cmp
and
push
ljmp
loop
pop
daa
neg
jp
or
or
push
add
dec
add
xorl
mov
sub
push
mov
adc
shlb
sbb
push
andb
add
fisttpl
cmp
jp
cmp
xor
mov
jmp
repnz
ss
stos
fsub
mov
cltd
and
mov
cmpsl
sub
data16
mov
xor
aas
leave
test
cmc
insl
xchg
dec
scas
sbb
stos
pop
dec
int3
rclb
dec
adc
pop
fs
aas
loopne
sub
fimuls
outsb
les
repz
push
pop
jg
or
loopne
in
add
lea
pop
dec
cmp
enter
aas
decb
test
popa
mov
cli
aaa
test
mov
ret
ret
jmp
cmp
lds
int
dec
lock
aas
decb
test
popa
ja
cwtl
mov
scas
dec
adc
int3
scas
add
mov
sahf
shll
mov
loop
lods
mov
pop
xchg
mov
dec
pushf
or
jp
lea
cltd
pushf
push
pop
int
mov
fsub
sub
cli
repnz
ret
mov
gs
pushf
int3
aaa
mov
or
cltd
add
stos
jg
mov
push
sarl
jnp
and
in
dec
aas
movsl
sbbl
push
push
cmpsl
push
xchg
xlat
adc
out
je
fistpll
inc
int
mov
aas
rcl
cltd
mov
dec
jbe
and
arpl
push
outsl
ja
xchg
sub
jnp
out
cltd
sbb
shrb
cmp
mov
jmp
imul
adc
mov
push
sbbb
dec
xor
fisubrl
adc
dec
int
jns
push
mov
mov
sahf
mov
xor
mov
mov
lea
mov
fs
out
adc
cmp
sub
fdivrp
cmc
mul
add
add
mov
leave
popf
xchg
add
mov
cmc
shr
addr16
xlat
and
test
dec
rcl
jp
nop
mov
push
mov
and
sti
cli
push
push
adc
call
mov
lea
mov
add
movsb
enter
out
push
jl
aam
lcall
jle
imul
movsl
cltd
mov
lahf
fwait
jns
push
jae
mov
icebp
repz
sbb
mov
pop
mov
popf
dec
rorl
push
or
adc
cli
xor
xchg
inc
insb
sbb
lahf
je
idivb
rolb
out
push
push
scas
add
icebp
push
loop
cmc
rcrl
pop
sbb
push
cmc
fildl
jne
repnz
mov
adc
sti
je
or
jle
mov
clc
rcr
mov
sub
insl
sub
cltd
push
insb
mov
mov
or
imul
or
ret
push
add
pop
and
sbb
push
adc
inc
div
or
xchg
lods
xchg
adcb
xor
out
cmp
sbb
arpl
jge
fadds
bound
xchg
out
pop
js
scas
loop
jl
jo
pop
loope
or
or
jge
popa
pushf
mov
insb
cli
fnstsw
or
pop
xor
fwait
mov
fsts
out
cltd
mov
inc
and
adc
int
inc
jg
out
dec
mov
add
xor
add
ja
mov
xchg
mov
mov
icebp
cwtl
fiaddl
mov
loope
in
cld
push
dec
jp
test
mov
loope
fidivrs
cmpsb
ror
dec
pushf
inc
xor
cmpsb
mov
jmp
jnp
cs
dec
or
xor
mov
xor
imul
mov
addl
test
loopne
jg
das
push
pop
add
jecxz
pop
shrl
mov
add
add
mov
out
adc
sarl
pop
ja
out
inc
test
ret
orb
cld
mov
pop
subb
ja
data16
fptan
sub
sub
add
int3
lea
jge
push
dec
lret
clc
sub
xchg
in
pushf
fs
aaa
jns
mov
cmp
insl
adc
pop
stos
sub
bound
fildll
mov
or
ja
lea
sub
mov
mov
ret
push
fwait
je
je
cmp
mov
hlt
scas
or
lret
cwtl
adc
popf
fs
add
data16
jmp
je
pop
xor
aaa
pop
dec
dec
sub
cs
int
and
or
mov
xchg
xchg
and
lods
inc
mov
cmp
pop
out
rcrb
adc
les
and
inc
push
pop
cmp
add
loope
mov
jmp
jne
adc
cmp
xchg
repnz
inc
mov
jmp
outsl
pushf
test
and
stos
lret
das
push
pop
add
stc
jl
mov
jl
jg
or
cmpsl
mov
cmp
arpl
push
adc
jns
sub
loopne
stc
xor
xchg
mov
test
jge
lea
adc
mov
pop
push
scas
lcall
xchg
sarb
dec
frstor
jge
mov
pop
jb
sbb
xchg
pop
fldl
fsubs
pop
test
aam
push
addl
and
pushf
xor
scas
jnp
test
sbb
mov
lahf
and
mov
inc
imul
inc
sub
mov
mov
sbb
jmp
jle
or
and
mov
xchg
hlt
adc
scas
int
xor
inc
popf
movsl
mov
out
add
or
aam
push
xor
push
cmp
loop
movl
lahf
clc
stos
sbb
cmpsb
push
xchg
ds
imul
adc
add
mov
or
pop
dec
sbbl
addl
lret
lods
mov
sbb
inc
insb
decl
fmull
leave
mov
cmp
sub
mov
std
stc
aam
mov
adc
jo
imul
xor
mov
push
cltd
or
jns
sahf
sti
dec
roll
out
cmpsl
pop
mov
into
lods
mov
lahf
mov
mov
mov
xchg
xchg
pop
in
jbe
and
inc
xor
add
or
or
sub
jmp
mov
test
fmulp
mov
loop
ljmp
mull
in
pop
shrb
loop
adc
loope
aaa
xor
cmp
jbe
mov
call
fs
or
cwtl
xor
cmp
shrl
inc
sbbl
movsb
out
gs
push
out
jmp
sub
pop
and
and
or
lods
cli
cmpsl
repnz
push
sbb
imul
sub
or
inc
aam
ljmp
lcall
xlat
imul
in
push
cltd
mov
lahf
divl
cmp
aaa
lret
fistl
jae
xor
es
mov
pusha
in
dec
adc
adc
xchg
mull
lret
pop
and
test
popa
ja
mov
xor
cmp
xor
cld
pusha
je
sbb
shlb
sub
test
mov
repnz
inc
cmp
xchg
testb
gs
jae
repnz
das
out
or
xor
lea
inc
mov
adc
jle
xchg
or
inc
pop
pop
lret
add
int3
add
or
das
cs
or
lcall
and
clc
dec
test
xor
jp
cli
jnp
push
loop
stos
inc
mov
dec
mov
imul
pop
sti
push
cmp
mov
jnp
stos
cmp
cmpsl
int3
imul
sbb
ds
jns
mov
add
jbe
iret
fdivrs
cltd
test
sti
xchg
addr16
adc
in
mov
mov
lret
fldenv
mov
dec
mov
out
in
push
push
stos
mov
fsub
adc
in
and
jae
fucomp
addr16
lcall
aaa
aad
or
nop
roll
push
sub
and
add
popa
notb
insl
mov
fcomps
lea
pop
push
out
in
lods
pop
push
outsb
ret
pop
and
stc
fwait
or
mov
movsl
cwtl
push
jmp
jp
add
pusha
push
movsb
mov
lcall
out
dec
dec
push
cmc
and
or
fsubr
inc
pop
push
cli
test
pushf
and
mov
xchg
pop
in
out
fldt
mov
sub
and
sbb
jl
insb
cmc
ret
xor
mov
js
cmp
and
nop
mov
xchg
lods
fistl
arpl
mov
fisubl
lods
cmp
sti
or
rcrb
or
add
adc
sbb
and
lcall
pop
inc
cwtl
pop
add
in
sub
xchg
hlt
rcrl
je
es
es
imul
mov
out
ja
push
jns
je
and
aaa
mov
push
mov
inc
xchg
shl
pop
sub
cli
or
push
dec
inc
pop
nopl
cld
or
xor
mov
xor
cmp
dec
outsb
bound
jmp
inc
iret
xlat
movsb
jns
das
scas
mov
dec
imul
and
loop
aad
inc
call
xor
cmp
aam
xor
push
aam
outsb
pop
mov
push
pop
mov
call
or
and
jle
jg
fidivs
jnp
pop
and
mov
sbb
in
mov
mov
jge
push
pop
pusha
xchg
outsb
out
lds
in
sbb
push
roll
xchg
xchg
in
dec
cmp
xchg
push
pop
or
ret
add
fcoms
imul
movl
inc
and
repnz
lahf
dec
stos
stc
fmulp
xchg
mov
mov
out
xor
ror
and
int3
test
push
ja
es
jb
popf
mov
movsb
adc
pop
lahf
inc
dec
js
adc
sub
jb
mov
pusha
sarb
enter
shl
xchg
adc
adc
push
pop
fsubrl
sti
shll
clc
andb
sbb
jae
pushf
rclb
cs
push
or
mov
mov
add
jmp
dec
mov
lods
mov
push
jne
dec
popa
test
cmpsl
repnz
cli
xor
mov
dec
orb
out
in
dec
and
sbb
and
ljmp
adc
dec
popa
add
aas
pop
lahf
mov
push
clc
js
xor
adc
lds
hlt
jne
and
pop
rolb
fdivrp
jbe
inc
cltd
sti
test
mov
adc
push
push
icebp
call
addr16
xchg
fldl
cmp
sub
outsl
loope
xchg
mov
or
out
lret
leave
stos
push
cltd
and
and
negl
mov
mov
and
gs
mov
mov
gs
mov
call
ret
jge
in
dec
popf
ljmp
scas
test
out
shlb
sbb
fcmovnu
pop
inc
mov
xchg
and
adc
ret
adc
addl
es
in
loop
ss
mov
xlat
into
jbe
pop
sahf
or
stc
sub
mov
xchg
fdivr
push
inc
mov
mov
xor
or
or
mov
dec
cmpsl
xchg
fisttpll
add
in
jmp
repz
xchg
sub
pop
in
call
lods
xchg
mov
add
pop
or
jmp
sub
adc
aad
adc
fisubl
in
stos
addr16
push
mov
push
lea
addr16
test
lcall
sub
les
aam
inc
out
daa
test
icebp
je
nop
ret
push
mov
inc
cmp
xchg
repnz
sti
jnp
xchg
int
push
stos
inc
out
mov
lock
cmp
addps
and
int
insb
test
call
push
cmp
jge
inc
jbe
jns
or
xchg
es
push
cli
dec
roll
inc
xor
fcomps
loope
pop
cmpsb
mov
jns
cmpb
adc
jo
mov
out
push
pop
fs
repz
push
jecxz
mov
loope
push
mov
mov
jne
jo
fimuls
or
repnz
das
push
and
push
or
dec
pop
imul
cmp
mov
adcb
jmp
test
mov
mov
arpl
out
aaa
adc
jmp
call
or
addl
outsb
insw
ss
inc
mov
inc
mov
inc
lods
jne
push
xchg
xchg
negl
mov
and
xchg
fcomps
push
ficomps
lea
lahf
insb
and
mov
fidivs
mov
push
inc
mov
jecxz
mov
xorl
in
enter
xor
loope
arpl
in
lcall
push
adc
mov
adc
inc
pushf
xchg
mov
scas
xor
xchg
sti
dec
and
sub
das
fisttpl
movsl
mov
and
int
and
daa
xor
dec
inc
mov
push
mov
negb
mov
or
shr
int
jg
inc
add
shufps
cmpl
out
mov
dec
jg
push
dec
inc
sbb
addr16
dec
mov
and
pop
ret
cmp
inc
sbb
or
xor
jg
push
gs
test
xchg
andb
pop
lahf
cmp
sbb
cmp
add
dec
pop
pop
cmpsb
aam
jae
in
loop
fisttpll
jecxz
repnz
adc
pop
jbe
lahf
xchg
and
push
int
sti
imul
scas
lcall
popf
ljmp
les
lods
pushf
and
loopne
push
int
stos
mov
xor
mov
pushf
daa
adc
inc
jl
imul
add
cmp
jmp
mov
jno
xor
lahf
cld
lea
sbbb
lret
jne
mov
js
repz
dec
jg
lock
pushl
clc
shll
mov
push
insb
add
rcrl
inc
lahf
insl
xchg
add
dec
lahf
adc
mov
add
into
mov
mov
imul
mov
jp
cmp
xchg
pop
into
ljmp
cltd
inc
xchg
mov
mul
cmpsb
or
hlt
dec
add
push
mov
inc
stos
jne
fadds
or
cmc
lret
mov
pop
iret
inc
sub
and
fdivs
and
jmp
sub
cmpsl
arpl
xor
xor
out
loope
or
push
mov
xchg
aas
add
inc
push
inc
inc
push
in
push
mov
xor
rclb
add
insl
pop
or
xor
ljmp
cmpsb
sub
inc
jae
xchg
in
mov
pop
jo
rcrl
push
jo
push
push
sbb
icebp
mov
jl
bound
mov
push
enter
inc
divps
or
or
dec
lock
mov
pushf
in
xchg
es
shll
rcll
pusha
add
adc
mov
jp
cmp
cmp
int3
pop
cmpl
inc
jnp
imul
ret
and
scas
icebp
popa
aam
aas
xor
daa
xor
and
fildll
mov
lds
mov
adc
lret
jne
inc
jb
jecxz
adc
pop
xor
movsb
cmp
lret
jnp
cmp
in
ja
leave
jo
rorl
jle
rclb
lcall
orl
xchg
mov
ret
dec
mov
mov
andnps
subb
data16
les
add
jg
cld
mov
lret
pushf
out
pop
sbb
adcl
out
insl
push
mov
int3
adc
jmp
sbb
stc
int3
in
adc
es
lods
inc
mov
loopne
fsubl
ja
jge
lret
cmpsb
loopne
sbb
ret
bound
sbbb
negl
test
sbb
flds
jl
or
dec
out
add
sub
mov
in
add
push
mov
cmpl
jb
idiv
pop
dec
loope
push
xor
popf
sub
repnz
insl
mov
dec
xor
clc
leave
xchg
jb
fnstsw
push
jae
push
sub
mov
inc
ror
cmpsb
add
lcall
outsb
xchg
xor
int
dec
ja
imul
popa
lret
mov
mov
cmp
fsubl
adc
mov
pop
cmp
inc
ret
push
mov
aad
cmp
popf
jbe
std
aad
movb
in
sub
fildl
icebp
fisubrl
shr
fwait
jmp
adcl
xchg
out
or
pop
mov
aas
push
in
pop
push
sbb
out
cmp
hlt
lods
mov
aad
iret
xor
pop
aaa
loope
push
out
pushf
imulb
mov
cmp
mov
sbb
lcall
jae
loop
jp
push
push
cs
fidivrs
aas
outsl
repnz
and
add
into
dec
repnz
push
mov
popa
jns
mov
or
ret
sub
clc
pop
pop
ficomps
sub
out
jge
mov
loope
inc
aad
pop
mov
push
add
pop
mov
mov
mov
pop
pop
jl
add
mov
repnz
mov
xor
fcmovnu
adc
jo
mov
into
rcll
push
xchg
xor
mov
andl
and
jecxz
dec
and
push
cmp
jl
cwtl
jge
aad
cli
in
std
cmp
in
mov
mov
lds
ret
orl
lcall
and
jmp
and
aaa
push
lea
xor
enter
inc
arpl
mov
lret
xor
cmp
mov
xor
mov
adc
mov
cld
aas
pop
jnp
xchg
adc
ret
shll
pop
stc
dec
iret
mov
lret
loopne
loopne
mov
ja
arpl
pop
test
dec
fwait
es
pusha
mov
test
or
imul
ss
mov
mov
mov
fbstp
out
push
movsl
jmp
push
sub
fld
mov
insl
add
mov
push
push
dec
cmp
push
pushf
mov
sub
mov
xor
cwtl
xchg
sub
or
popl
or
cli
shl
repz
gs
arpl
xor
xlat
in
mov
xchg
and
push
es
and
out
pop
sub
dec
cmovno
fs
fwait
movsl
sub
push
sti
jo
aas
xchg
jns
mov
sar
mov
mov
mov
aam
sbb
cmp
pop
sub
sub
dec
gs
or
pop
push
scas
or
xlat
shrb
fidivrl
sbb
xchg
or
iret
mov
xchg
mov
push
xchg
push
outsl
mov
movsb
repz
sbb
or
cli
outsl
mov
lods
sub
push
mov
inc
outsl
and
push
and
sbb
or
mov
lds
fdiv
pop
mov
and
repnz
jl
mov
mov
int
cmp
pop
push
adc
movsl
fdivrl
fwait
pop
test
aas
add
ds
pop
inc
pop
ret
out
and
jno
mov
or
mov
mov
mov
clc
fcoml
adc
and
in
movsb
fisttps
jne
flds
into
std
fmul
xchg
jb
out
or
dec
adc
push
in
mov
and
fiaddl
inc
inc
mov
sarl
mov
push
dec
adc
xchg
cli
and
prefetch
shlb
mov
fmulp
aam
xor
xchg
cmpsl
imul
imul
dec
jl
inc
jbe
adc
imul
cmc
les
cmp
aas
xlat
push
fcomps
and
mov
in
jg
imulb
pop
aad
cltd
cmp
add
add
or
adc
push
mov
or
nop
pushl
scas
mov
pop
push
xchg
dec
negb
inc
test
lret
and
fs
mov
aad
ljmp
xchg
xor
push
mov
mov
or
add
sub
mov
movsl
push
sbb
pop
jge
xor
sbb
aam
daa
nop
daa
call
repnz
sub
stc
jp
imul
adc
inc
cmp
xor
out
or
push
inc
pop
sbb
mov
rorb
rol
dec
test
sti
loopne
shrl
sti
sub
mov
pop
inc
bound
mov
lret
sbb
insl
adc
data16
mov
in
cmpsb
adc
popa
xchg
inc
pop
enter
xorl
push
hlt
ljmp
xchg
popa
mov
loop
icebp
or
in
xchg
in
mov
jnp
pop
mov
test
sbb
sub
cmp
or
popa
mov
enter
lods
int3
xchg
pop
into
pop
rol
or
xorl
adc
add
xlat
loope
mov
out
adc
sub
push
push
push
iret
out
xorb
repz
nop
and
loope
jb
in
in
fnsave
xor
push
hlt
negb
pop
test
icebp
mov
out
fiaddl
push
insl
je
jbe
push
addb
jne
aaa
imul
jge
stos
lods
shll
jo
ljmp
jae
xor
popa
or
mov
mov
in
mov
xchg
outsl
jecxz
dec
sub
subl
sub
pop
fadd
cltd
ret
xor
cmc
bound
loop
fadds
out
inc
adc
xor
outsl
cltd
push
shll
mov
fnstenv
sub
pop
lcall
or
shrb
xchg
dec
mov
or
fidivl
imul
pop
push
xor
jp
cwtl
pop
inc
aam
icebp
and
or
out
aaa
test
jns
xchg
pop
in
pop
bound
sbb
xor
incb
xchg
inc
addr16
push
or
xchg
pushf
pushf
fisubs
popf
jmp
mov
push
jb
mov
pop
out
push
pop
shrb
in
cltd
dec
iret
shrl
out
in
sub
jbe
fsubp
pop
push
xchg
add
push
loop
int3
pop
out
sbb
add
lods
popf
mov
test
xor
in
cmpsb
push
pop
pop
xchg
xchg
sbb
repz
mov
inc
and
scas
mov
or
fwait
xchg
push
mov
insl
idivl
xchg
sbb
insb
dec
push
sub
and
pusha
push
int
mov
mov
ds
sub
mov
mov
and
notl
and
fwait
jbe
push
enter
movsb
sti
sub
push
mov
clc
xchg
push
movsl
sti
jmp
xor
mov
decl
ret
mov
push
aam
adc
mov
dec
and
lds
dec
clc
ja
nop
or
adc
pop
es
ljmp
js
test
imul
push
jp
popf
lret
ss
mov
repz
inc
aas
out
stos
test
imul
pop
mov
out
sbb
mov
lods
icebp
iret
scas
cs
jl
pop
js
mov
int3
mov
mov
add
mull
aaa
or
xor
sub
and
ss
xchg
dec
jae
cmpsl
ds
jnp
daa
popf
xchg
sub
les
pop
fisttpll
mov
cmpsb
push
fildl
and
inc
or
add
mov
push
icebp
test
jle
shll
mov
cli
cmp
adc
and
rcll
sti
mov
adc
fbstp
mov
mov
cs
xor
xchg
clc
sub
das
cmp
mov
in
sarb
test
insb
sub
jmp
and
jno
push
xchg
rcrb
ds
lea
jno
dec
mov
pusha
add
jne
mov
int
cs
andb
out
fxch
sbb
push
mov
addr16
jmp
mov
cli
pop
xchg
loope
enter
test
and
out
lods
pop
xchg
repnz
add
test
out
or
xchg
and
stos
adc
leave
test
mov
out
insl
imull
scas
ss
mov
mov
loop
negb
sbb
es
mov
xor
cld
sahf
sahf
xor
repnz
or
xchg
pop
test
xlat
cwtl
adc
fs
int3
insb
sbb
stos
testb
daa
and
cwtl
pop
idiv
sbb
orb
add
fld
repnz
sub
imul
jge
aam
xchg
test
pop
jb
fmul
adc
fildl
rcrl
xorl
add
cmpsl
sub
xchg
push
outsb
imul
outsl
push
or
imul
pop
je
in
sub
shl
call
bound
xchg
daa
out
pop
xor
xlat
cwtl
xchg
iret
xor
inc
push
add
push
fsubl
gs
xor
filds
xchg
imul
inc
pop
sbb
sbb
sahf
sbb
ret
std
add
fstpt
dec
test
push
mov
sbb
divb
scas
pop
insl
cmpsb
cmp
pushf
cltd
dec
jbe
data16
jnp
fdivrl
pop
dec
movl
imul
mov
xchg
adc
nopl
lods
test
pop
or
cli
test
fxam
xchg
icebp
dec
mov
pop
add
ret
aad
adc
push
lods
xchg
andl
ret
push
xchg
sahf
movsb
clc
pushf
mov
dec
push
adc
je
shll
scas
icebp
xor
in
cmc
adc
dec
inc
mov
mov
mov
add
lea
add
testl
or
inc
pop
fdivrp
sbb
mov
stc
add
add
das
or
sub
lret
daa
push
cmpsb
scas
pop
popa
xchg
inc
in
push
orb
rcrl
rorl
xchg
mov
inc
mov
sub
ss
adc
dec
imul
in
fnstcw
mov
adc
adc
push
xchg
test
push
adcl
sbb
fwait
stc
popf
clc
into
aas
xor
mov
mov
fs
or
sbb
pop
stos
cmp
push
out
aad
js
pop
cpuid
imul
mov
jp
test
dec
pop
or
cmc
adc
sbb
jge
pop
and
jns
sar
inc
inc
lds
arpl
or
sbb
or
out
daa
xor
stos
sub
scas
pop
stos
push
fildl
inc
mov
sub
push
cmovge
fistpl
xlat
cltd
out
lcall
cs
xchg
push
stc
add
jno
cld
test
xchg
inc
mov
pop
lds
mov
mov
add
fistpl
sub
xor
scas
outsb
inc
mov
adc
push
rorb
push
or
xchg
jns
lock
cwtl
inc
mov
mov
enter
jae
mov
cmp
push
cmpsb
mov
add
inc
lods
inc
ss
cwtl
xor
xor
sbb
out
bound
iret
add
pop
orb
add
jne
or
inc
into
lahf
cld
sbb
lock
pop
call
lret
sbb
xchg
xor
lds
movsl
enter
mov
pop
enter
fmuls
push
and
sbb
mov
insl
mov
cmp
xchg
mov
ljmp
out
movsb
inc
dec
pop
mov
std
jae
and
rcrl
mov
test
cmp
out
mov
cld
or
stc
adc
and
xor
pop
push
loop
sbb
cwtl
push
sub
mov
inc
movsl
lods
mov
xchg
mov
mov
in
sahf
fnstenv
shlb
dec
neg
inc
mov
dec
mov
nop
mov
and
push
cmp
stos
iret
mov
sub
fmull
adc
nop
fisubrs
hlt
xor
das
mov
mov
push
mov
jne
mov
rep
jne
cmp
mov
bnd
mov
or
or
ja
cmp
mov
lds
cmc
xor
pop
mov
jp
mov
cld
and
loope
xor
mov
pop
pop
test
mov
add
push
notl
fcmovnb
lea
sub
inc
in
lods
sbb
dec
pop
sub
dec
pop
xchg
sbb
clc
in
mov
sbb
jno
jnp
pop
mov
jns
test
sub
shlb
loope
inc
rcl
push
addr16
adc
mov
orb
inc
mov
js
jo
mov
adc
lds
dec
push
cs
and
sub
mov
jnp
out
mov
enter
stc
sbb
cltd
jl
sbb
ja
orb
xchg
and
lret
mov
imul
and
cli
add
icebp
add
aad
ja
xor
mov
ja
lock
xor
outsb
loop
inc
pop
sahf
push
fsubrl
cld
idiv
xor
dec
stc
push
push
jne
sbb
jo
addr16
int
arpl
int
std
jmp
push
fisttpll
fs
mov
ficoms
mov
cmp
mov
ret
mov
xchg
stos
negb
adc
adc
and
push
dec
adc
mov
dec
xchg
add
adc
orb
fcmovnu
inc
sbb
leave
pop
jbe
cmp
push
cs
das
dec
mov
faddl
push
push
movsb
sbb
add
xor
add
dec
mov
in
mov
sub
push
in
inc
iret
in
and
push
push
push
dec
fidivrl
and
add
dec
out
lea
sbb
jne
cld
jnp
and
sbb
aad
mov
sbb
or
lret
cmp
cmc
in
mov
push
das
sahf
inc
dec
adc
jno
in
or
lods
cmp
pushf
cmpsl
stos
aam
jge
sbb
mov
pop
dec
xor
xchg
loopne
mov
adc
jae
inc
add
imul
inc
inc
fs
adc
cmp
sbb
inc
or
pusha
push
pusha
pop
fs
cs
int
out
cmpsb
pop
pop
scas
in
mov
dec
aad
pop
jb
repnz
stc
aad
fbstp
ljmp
loope
loope
jecxz
imull
mov
add
dec
mov
lock
les
loopne
adc
jnp
loope
add
mov
sub
mov
mov
mov
xor
scas
xchg
sahf
out
lret
jp
pop
adc
cmp
dec
and
dec
add
mov
and
mov
into
test
in
push
loope
sub
lcall
cmp
lret
fcos
xchg
jmp
icebp
jmp
adc
cli
insb
pop
fstl
jl
insl
movsl
cmc
inc
jae
jne
testb
xchg
sbb
cmp
fs
out
inc
xchg
jg
mov
xchg
cli
inc
rdpmc
aaa
in
dec
test
lcall
scas
push
fcomp
jb
popf
jno
pop
cli
pop
in
dec
xchg
or
mov
jge
subl
pop
xchg
aam
js
rcrl
add
test
pop
xchg
dec
aam
cmpsb
dec
fisttpl
bound
in
ds
test
fs
adc
test
mov
mov
push
adc
mov
xchg
stos
out
lock
dec
jg
add
mov
sbb
mov
cltd
rolb
insl
inc
mov
out
add
adc
inc
out
rol
pop
xchg
mov
mov
out
add
add
mov
pop
enter
xor
add
inc
mov
xlat
pop
adc
dec
and
pop
sti
aad
pop
sbb
pop
fiadds
mov
scas
icebp
mull
pop
mov
fidivl
repz
cli
xchg
jg
sub
les
dec
pop
loop
data16
clc
das
mov
adc
cltd
aas
push
inc
and
jae
dec
mov
sbb
iret
mov
add
mov
clc
xchg
push
and
or
cltd
xchg
fnstcw
popf
stos
notb
fadd
dec
daa
js
movd
mov
fidivl
xchg
cs
pop
jne
push
xchg
or
pop
call
push
arpl
popa
cmp
push
stos
sbb
xchg
mov
inc
sbb
inc
pop
xchg
sbb
pop
roll
jp
xchg
cmp
pop
dec
fwait
mov
cmp
aaa
xchg
cs
sbb
xor
jmp
hlt
adc
imul
js
mov
xor
ja
outsl
push
xor
and
mov
or
dec
pop
ficomps
mov
decb
mov
addr16
xor
sbb
imulb
jno
adc
pop
and
jmp
movsl
pop
xlat
addb
loopne
mov
adc
mov
andb
lret
mov
jnp
dec
out
add
mov
scas
popf
cltd
sbb
roll
andl
xchg
inc
stos
mov
mov
xor
mov
dec
ret
mov
sbb
sub
jp
cltd
loop
push
add
mov
icebp
jmp
mov
cmp
dec
and
ret
push
fadds
inc
rclb
dec
adc
xchg
rcll
pop
pop
loopne
test
jne
pop
jge
cld
push
mov
cmpsl
fdivl
iret
out
mov
mov
dec
push
popl
out
add
in
cmpsb
jmp
aas
outsw
out
call
movl
sbb
jecxz
cwtl
xchg
xchg
jle
shll
sbbl
mov
fwait
rcr
push
fcom
cmp
dec
addr16
push
jo
cmc
mov
insl
dec
cs
add
je
loope
cmpsl
cld
aaa
mov
lods
pop
mov
clc
xchg
js
sbb
scas
add
fistpll
mov
gs
cmp
cmp
mov
mov
push
loope
lret
xchg
out
aam
call
adc
cmpsl
sub
aas
mov
clc
test
mov
mov
mulb
out
fsubrl
jmp
out
test
adc
out
test
int3
push
push
jp
out
pop
mov
inc
cwtl
pop
popf
imul
or
cvtdq2ps
jae
mov
adc
cmp
mov
and
insb
jb
shrl
adc
and
mov
outsl
xchg
push
into
mov
and
lahf
popa
daa
int3
pop
aad
iret
cmp
mov
jnp
mov
std
add
das
nop
pop
or
or
icebp
bound
sub
pop
sbb
sbbb
outsb
mov
sahf
or
out
gs
and
xchg
cmp
push
adc
setns
mov
jg
mov
mov
cld
inc
stos
icebp
push
fsubr
iret
cmpsl
sahf
stc
and
mov
loop
add
jle
outsl
adc
clc
push
enter
jne
mov
sub
push
aas
sub
xchg
push
popf
jp
cmp
orl
dec
cmp
jmp
pop
mov
mov
sub
std
fdivrs
daa
fdivr
hlt
loope
mov
and
ss
leave
push
push
loop
lahf
sbb
mov
lods
enter
sub
test
cmp
or
dec
pop
ficomps
mov
call
xchg
mov
lea
imulb
jno
adc
pop
cwtl
jmp
subb
test
into
jne
sub
out
and
sub
testl
push
mov
xchg
ret
call
pop
push
dec
push
cmp
push
or
sub
mov
xchg
push
repnz
sub
cwtl
xor
mov
push
pop
jnp
cwtl
jae
stos
pusha
push
inc
xlat
hlt
mov
sub
mov
aad
xor
mov
push
cmp
iret
cmpsl
mov
in
pop
dec
ret
dec
jb
push
push
lock
fsub
scas
sbbl
adc
add
aam
pop
xchg
adc
inc
notb
pop
pop
movsb
add
lock
pop
jnp
and
jmp
mov
sarl
nop
push
lds
cmp
inc
fcoms
outsl
pusha
adc
xchg
cmp
mov
xor
inc
jmp
mov
and
xor
ljmp
repnz
mov
ljmp
imul
cmpb
pop
cs
or
push
jge
sub
popf
pop
aad
jge
sub
popf
pop
aad
jge
xor
lret
cs
or
cld
sub
fs
lret
or
lret
and
int3
pop
mov
in
adc
sbb
xchg
dec
rcr
adc
push
loop
or
loopne
dec
ss
xchg
mov
cmp
push
fs
and
je
lea
dec
jp
dec
loop
mov
mov
push
sub
mov
xor
lret
cmpsb
jle
fstl
mov
dec
xchg
cmc
xor
decb
xchg
test
push
cmp
out
or
stos
mov
mov
loopne
pop
adc
sub
adc
call
stc
in
aas
jge
xchg
push
not
movd
dec
add
pop
xor
pop
lods
inc
cltd
inc
repz
add
pop
dec
mov
mov
xchg
cmp
ffreep
jb
mov
loop
xchg
insl
jo
sbb
jp
or
jb
fabs
imul
scas
adc
hlt
sub
jae
std
xchg
or
xor
and
mov
xchg
das
dec
cmpb
xchg
mov
or
pop
dec
repz
mov
inc
addr16
arpl
hlt
stos
sub
leave
inc
movsl
xchg
jno
cmp
xor
mov
ja
xchg
divb
idivb
jne
add
ror
push
int
and
movsl
pop
dec
mov
mov
mov
adc
pop
les
ret
popa
mov
stc
dec
inc
mov
sub
hlt
push
push
ret
mov
imul
inc
fistps
outsl
dec
ror
push
sbb
call
ljmp
push
lret
sbb
jne
daa
ljmp
and
les
push
addl
pop
xchg
insl
lods
and
enter
mov
cmp
lahf
push
inc
xlat
out
fnsave
stc
jo
cli
cli
mov
jle
shr
inc
mov
and
lea
adc
mov
add
cmpl
fs
xor
lret
or
in
imul
push
dec
lret
lret
inc
sub
popa
int3
stos
and
xorb
jl
xchg
cmp
jl
jae
inc
or
das
idivb
cmp
jp
loope
mov
rorl
dec
pop
mov
xor
fildl
sbb
daa
sbb
ss
xchg
arpl
jno
clc
xor
in
and
stos
in
sub
cmpsl
jnp
adc
adc
mov
push
lods
cmp
jmp
jle
imul
mov
dec
jmp
sub
mov
sub
adc
push
and
cmpsl
imul
shll
scas
cmc
jbe
push
jns
hlt
cwtl
out
jne
or
out
xor
mov
fsubrs
or
xlat
push
inc
or
push
cltd
jmp
jnp
push
sub
test
outsb
in
arpl
inc
sbb
in
adc
fldcw
in
popl
out
dec
mov
lods
mov
xchg
sub
adc
xchg
or
mov
or
xchg
mov
sbb
xchg
test
ret
pop
mov
add
cltd
xchg
pop
xor
cli
divb
sti
pop
rcll
adc
out
mov
dec
insl
mov
fsubs
nop
cs
add
cmp
inc
pop
or
int3
push
push
cmp
mov
jae
adc
daa
xlat
push
jl
push
lret
or
popf
add
pop
xchg
lahf
pushf
out
daa
movsl
pop
pop
scas
test
push
in
cmpsl
mov
movsb
mov
bound
inc
mov
popf
lea
cmp
inc
arpl
ljmp
xchg
pop
jbe
call
jbe
pop
out
mov
sub
adc
shr
cld
cmp
mov
xchg
fbld
out
stos
rclb
xor
push
icebp
ja
inc
add
push
or
into
stc
ds
cs
nop
lahf
dec
enter
inc
sub
je,pt
cmp
insl
mov
addr16
rcrl
dec
les
out
mov
test
push
cwtl
and
and
stos
mov
push
fxrstor
into
mov
stos
sub
jecxz
pop
xchg
pusha
pushf
outsl
aas
inc
push
outsl
jns
pop
rolb
jl
fldenv
mov
arpl
sub
cmp
sub
sub
and
nop
fxch
cmp
cmp
clc
inc
orl
xor
incl
mov
jbe
or
out
ficoms
rorl
in
cmpsb
std
jmp
ret
or
mov
daa
xchg
mov
push
jl
mov
inc
enter
push
mov
inc
xor
ljmp
xchg
add
inc
out
mov
and
jge
call
push
push
mov
scas
hlt
pop
ret
aas
wbinvd
mov
pop
out
pop
xlat
ja
pop
lods
mov
int
push
xchg
push
fdivs
leave
pop
insl
lock
repz
je
push
jecxz
jbe
gs
call
mov
int3
cmp
pop
inc
cltd
xchg
pusha
mov
out
dec
or
in
add
mov
in
iretw
loop
sbb
push
mov
repnz
into
leave
or
int3
jl
sub
push
insb
call
jb
pcmpeqb
mov
rolb
sub
jnp
add
insl
icebp
pop
xlat
xor
adc
mov
xchg
mov
adc
push
mov
ret
aas
leave
test
cltd
sub
lret
add
lds
out
sti
icebp
pop
out
mov
ret
fisubl
lcall
push
sahf
mov
jl
popf
push
rclb
sub
push
dec
mov
and
not
cmp
add
fstps
inc
sub
mov
inc
cmpb
pop
es
rcll
push
daa
test
mov
movb
cmpl
fistps
sub
adc
jne
imul
inc
std
lret
and
aad
movsb
jg
or
lea
push
adc
nop
ljmp
popa
mov
xlat
repz
jnp
add
lock
lahf
daa
out
into
aad
fildl
pop
jg
push
push
or
mov
notl
add
imul
popf
and
and
mov
pop
mov
gs
and
imul
fisttpl
jmp
push
sub
cli
pop
imul
outsl
jmp
jp
dec
pop
mov
mov
add
icebp
or
sti
pusha
pop
sub
xlat
mov
mov
or
mov
dec
sahf
push
mov
jmp
ljmp
outsl
push
adc
push
push
dec
out
cmp
mov
cli
dec
in
mov
mov
arpl
scas
add
add
cli
cld
les
xchg
add
xchg
mov
jbe
inc
js
inc
call
or
cwtl
sub
repz
cltd
fisubs
sub
push
orb
ja
add
jns
lds
int3
pop
sarl
ficomps
nop
pop
stos
jle
cmpl
pop
xor
xor
movsb
in
xchg
or
test
loopne
nop
pop
sahf
dec
xchg
xchg
je
push
lds
sti
fstp
xor
mov
in
arpl
jnp
lods
add
jnp
mov
pusha
mov
fstpt
inc
jnp
pop
testb
aaa
and
sbb
ds
outsl
cmp
cli
push
addb
mov
inc
jnp
jae
clc
leave
add
inc
js
jb
cmp
push
push
loope
insl
adc
push
pop
xchg
pop
repnz
rol
dec
push
push
cli
scas
mov
mov
test
mov
xchg
mov
sbb
mov
jo
fstps
push
cmp
xorb
sbb
xchg
cmpps
jecxz
hlt
jl
test
and
inc
pop
sub
mov
adc
aam
stc
stc
add
fsub
mov
pop
push
imull
fistpl
inc
lea
and
scas
xchg
loop
lods
xchg
fsubl
mov
pushf
push
lods
xchg
pushw
jne
push
insl
mov
add
cs
xor
push
push
leave
inc
hlt
out
mov
mov
mov
mov
inc
lret
insl
mov
std
mov
test
int
jne
insb
sbb
test
lock
insl
sub
cmp
loop
xor
rclb
insl
pop
insb
mov
push
fistpll
push
enter
inc
push
stos
imull
inc
iret
fidivrl
jmp
bnd
subb
popf
jmp
movsb
jmp
outsl
sbb
in
jno
dec
repnz
add
xchg
int3
shlb
sbb
nop
xchg
xor
mov
js
fidivl
sub
cmpsb
lock
add
dec
ss
fidivrs
dec
or
xor
add
push
push
out
fiaddl
ds
add
mov
xor
mov
push
mov
clc
rorb
fldcw
or
pop
mov
ss
das
int3
mov
insl
pop
inc
popf
aas
mov
idivl
sub
push
ret
or
iret
inc
or
test
add
into
add
loope
pushl
es
push
xchg
test
sbb
push
fisttps
mov
dec
mov
aaa
rcll
aaa
add
out
cmpsl
scas
xchg
xchg
fwait
xchg
jbe
cmpsl
enter
add
loop
xorb
in
jecxz
lods
add
dec
jae
int
icebp
sbb
jmp
sbb
dec
mov
les
xchg
mov
cltd
adc
js
outsl
jecxz
leave
inc
nop
push
pop
pop
mov
fbld
and
scas
jp
jo
cmp
xchg
xorb
xor
div
sbb
ljmp
mov
jg
cld
push
or
cs
loope
fisttpl
mov
dec
loopne
stos
aaa
push
push
cmp
lods
out
int3
or
mov
ret
scas
add
push
sub
pop
push
out
sahf
int
xchg
std
jns
or
dec
ss
adc
scas
aam
cmp
mov
test
mov
mov
arpl
cli
test
cli
or
pop
add
lods
sbb
int
loope
or
std
loop
icebp
jo
lods
daa
sub
andb
jle
cld
cmp
shrb
loop
inc
sbbb
mov
xchg
sarb
out
cmp
or
add
push
adc
movsl
push
jg
shrb
not
dec
xchg
mov
lret
sbb
nop
push
outsb
int3
jle
js
mov
test
adc
insb
sbb
dec
add
jmp
outsb
add
andl
scas
push
adc
mov
jg
ficoms
mov
add
and
cmpsl
push
xchg
repnz
inc
sbbl
add
cmp
pop
inc
mov
mov
fbld
sub
dec
ds
adc
clc
sahf
leave
xor
fdivrs
and
adc
or
jno
add
adc
setb
gs
or
push
in
or
push
pop
sbb
jp
cwtl
addr16
imul
jg
jg
cmp
pop
pop
cmp
popa
ja
loope
iret
mov
mov
data16
xchg
repnz
out
popa
mov
cwtl
loop
stos
or
nop
sbb
lret
and
into
in
outsl
push
push
das
and
stc
jp
js
adc
sbb
outsb
jae
dec
dec
ja
faddp
insl
fldl
nop
test
lods
gs
shrb
sbb
xchg
inc
aam
and
xor
cmpsb
and
dec
adc
jecxz
gs
mov
std
jl
mov
jno
dec
cmp
pop
test
jp
xchg
dec
decl
insl
fs
push
cltd
fldcw
ror
mov
call
addr16
mov
stc
dec
add
das
and
arpl
mov
loopne
cli
sti
pushf
mov
and
sbb
int
mov
in
or
clc
add
int3
mov
cmc
and
push
roll
fbld
or
dec
fidivrs
into
xchg
call
jp
xor
cmpsl
inc
scas
ljmp
movsl
sarl
mov
sti
mov
popf
sbb
mov
insl
or
jne
hlt
dec
lods
jo
jb
cmp
sbb
mov
push
mov
dec
xchg
adc
push
test
jmp
test
inc
clc
aas
push
arpl
xchg
fadds
pop
repz
sbb
scas
movsl
loope
mov
mov
jle
mov
mov
sbb
sbb
pop
arpl
loope
ds
pop
loop
mov
jp
out
or
testb
out
jnp
fbstp
sti
cmpl
and
lret
jnp
xor
dec
outsb
or
lahf
jnp
xchg
rcrl
lods
pop
lcall
mov
in
loope
in
xchg
jb
repz
mov
cli
jb
push
xor
das
jo
loop
aam
sub
cmpsl
add
mov
mov
cs
xor
lahf
xchg
je
insb
ljmp
fsubl
inc
dec
sbb
jae
xchg
push
fs
inc
cmp
push
pop
call
cltd
mov
sti
out
ret
push
mov
adc
fdivl
cmp
xchg
or
addb
call
lahf
push
inc
or
negb
ss
test
xchg
cmpsb
jp
inc
test
cmp
and
inc
clc
add
in
ret
ret
clc
pusha
daa
sub
scas
xchg
push
insl
push
rorb
test
cs
and
cld
cmc
push
ljmp
fstp
loope
aad
fsubl
pop
popl
cmc
add
lods
xchg
mov
xor
insl
cwtl
push
push
leave
and
mov
test
lahf
xchg
ret
cli
insl
aas
xor
enter
and
pop
bound
icebp
mov
inc
cmp
ror
xlat
fxch
clc
and
out
cmp
push
out
sbb
fdivl
inc
lahf
jmp
rcrl
mov
dec
sbbl
pop
push
clc
mov
mov
jge
sub
sarb
xchg
pop
add
xchg
or
pop
fadds
dec
ljmp
jno
jmp
lret
out
mov
push
mov
fdivs
pop
lahf
test
negl
pop
fcmovb
inc
lods
or
inc
mov
xor
jge
test
xchg
and
cwtl
mov
pop
adcl
mov
aaa
cltd
fld
cltd
test
insl
cs
stc
mov
enter
xor
xor
cmp
or
cmpsb
pop
adc
ljmp
pop
xlat
lret
idivb
std
push
sub
fsubrs
dec
jo
xor
aaa
test
mov
icebp
cli
aam
sbb
push
mov
push
mov
sub
push
sbb
call
push
stos
push
ret
repz
xchg
pop
mov
pop
inc
rcl
cmpsl
and
movsl
xchg
pop
cmp
push
lea
mov
in
arpl
dec
adc
mov
loopne
jg
sbb
and
adc
cmpl
push
cmc
imul
icebp
jae
mov
cmp
imul
jns
ret
sub
nop
int
push
push
jae
decb
push
mov
cmp
jno
icebp
adc
push
shll
mov
movsl
cwtl
mov
or
es
sbb
xor
aad
call
aam
fisttpl
sti
stc
adc
psrad
les
add
sub
push
dec
popa
icebp
cmp
sub
dec
cli
or
add
pop
sbb
sbb
dec
int3
test
xchg
ljmp
sbb
and
mov
in
cs
sar
sub
push
stc
lock
stos
xchg
aas
jnp
sahf
push
push
fsubrl
fwait
and
and
cmc
lods
push
cltd
lret
sti
rorl
add
ja
xor
lea
clc
xchg
lods
xchg
loope
or
lret
mov
mov
cmpsb
bound
testl
pop
pop
cmpsb
aam
jae
jmp
mov
dec
stos
adc
dec
or
push
add
mov
jp
and
push
sbb
pop
sbb
xchg
sar
sti
int
inc
test
inc
cs
mov
popa
sub
das
lret
cmp
inc
adc
inc
jne
shll
stos
idivb
jne
xor
push
js
and
pushw
adc
sbb
cmp
or
cli
xor
sub
push
adc
pop
cmpl
aaa
jg
stos
icebp
push
rcl
rolb
xor
mov
aam
mov
xor
mov
xchg
std
mov
jge
jbe
scas
repz
cmp
scas
sbb
add
cltd
enter
mov
lahf
push
mov
push
test
test
mov
cmp
add
inc
inc
dec
inc
sbbb
pop
in
mov
sbb
xchg
dec
testl
pop
sbb
ljmp
rorb
push
call
add
pop
and
jl
inc
xchg
add
dec
dec
call
mov
mov
pop
sub
in
in
adc
into
loop
dec
std
dec
repz
push
mov
push
scas
cmp
inc
mov
lds
cmove
push
inc
xchg
mov
popa
dec
and
jg
mov
jo
and
aaa
das
cmp
lods
inc
mov
sbb
outsl
repnz
dec
or
decl
in
pusha
sub
add
aad
gs
jb
sub
cmp
imul
or
insl
scas
mov
mov
jecxz
scas
aam
fldln2
inc
xor
xchg
insb
cmp
cmp
pop
jle,pn
cmpl
cmp
mov
in
daa
inc
int3
clc
or
add
call
bound
mov
mov
dec
mov
jmp
inc
lret
ret
addl
jge
add
cmp
outsb
sarb
lahf
push
and
fninit
cmpsb
jnp
in
ret
int3
mov
pop
pop
leave
aas
jmp
adc
rcl
stc
pop
fsubrl
ret
or
mov
cmp
imul
xchg
in
shl
mov
inc
mov
rclb
jmp
add
and
aad
mov
js
popa
loopne
movsb
mov
rolb
jnp
adc
adc
shrl
adc
jnp
imul
mov
xchg
jmp
js
cmp
xchg
mov
test
push
xor
fwait
leave
ja
inc
mov
mov
pusha
hlt
jo
shrb
gs
in
mov
in
jl
mov
cmc
and
lcall
inc
sbb
mov
fdivl
xchg
andl
pushf
sub
mov
mov
or
dec
sub
cli
ficoml
leave
xchg
jl
and
inc
xchg
xchg
and
mov
inc
mov
xchg
or
sub
jb
or
mov
imul
pop
notl
jl
sub
mov
mov
push
mov
mov
xchg
in
push
les
sub
sub
mov
jns
pop
inc
mov
gs
sbb
gs
sub
lret
ret
push
and
call
add
fidivs
cmp
lods
jnp
cmpsb
pop
mov
int
scas
mov
mov
iret
les
jp
push
adc
adc
fists
mov
test
imul
mov
pop
xlat
adc
jp
jbe
jge
push
inc
inc
mov
test
popa
inc
in
fdivp
or
rcrb
rolb
mov
mov
cmp
mov
jb
out
cwtl
mov
cmpsb
aad
add
jmp
fisubrl
test
jbe
mov
movsb
rorb
insb
int3
enter
std
jo
add
sti
insl
in
adc
and
jbe
add
in
pusha
scas
push
dec
inc
jg
xchg
inc
push
out
loope
adc
sub
test
ss
or
push
or
mov
fsubr
andl
scas
stos
push
dec
adc
iret
pop
mov
leave
sbb
hlt
mov
mov
lret
mov
xchg
mov
into
push
mov
mov
jecxz
ret
mov
aam
fisttps
jmp
and
lret
jo
cli
cmp
pop
xor
dec
mov
mov
andl
push
pushf
fcmovb
jl
fs
or
pusha
aas
jmp
jecxz
xchg
sahf
jmp
push
push
lea
sub
xlat
inc
or
jg
sbb
inc
mov
movsb
insl
jb
negl
jnp
cld
mov
mov
cltd
popf
lahf
xor
dec
mov
int
jns
jne
inc
or
jg
sbb
rcrl
jle
push
pop
das
aad
imul
mov
adc
loope
xlat
imul
enter
in
ljmp
ja
outsl
push
mov
jl
repz
test
icebp
scas
cmp
sub
divb
add
inc
sub
push
popf
adcb
pushl
das
sbb
sbb
std
sbb
test
and
idivb
call
das
fwait
or
cmc
xlat
test
xchg
je
frstor
mov
imul
cmp
daa
jecxz
cltd
push
test
dec
adc
jbe
shll
outsl
or
rorb
fidivrl
stos
lahf
stc
frstor
adc
adc
mov
pop
ss
add
movsl
pusha
ds
xchg
cmp
mov
ret
jo
mov
jb
inc
bound
adc
loopne
add
mov
daa
cmp
in
mov
mov
lret
aas
lods
scas
scas
push
push
pop
fwait
mov
jecxz
push
and
cmc
dec
xor
pushf
sysenter
decb
jge
sub
mov
mov
in
les
test
shll
dec
sti
mul
adc
insb
push
lods
mov
ss
fidivrs
in
inc
fdivrl
adc
into
mov
jb
sar
lods
lods
jno
add
pop
das
sub
jbe
or
jge
mov
in
std
cmp
addb
loope
jae
arpl
mov
add
push
lcall
sbb
mov
pop
dec
cmp
std
mov
mov
arpl
mov
fcmovu
pop
fstpl
ret
inc
xor
pop
pusha
pop
and
repnz
mov
mov
jl,pn
pop
in
neg
sbb
inc
test
jecxz
xchg
push
and
ret
mov
jmp
popf
lahf
cmp
cmp
cmp
or
dec
or
aad
pop
push
daa
adc
xchg
pop
xchg
adc
leave
add
lcall
call
movsb
stos
mov
pop
divb
sbb
jmp
jb
push
jg
add
sbb
xchg
dec
xchg
int
aam
mov
inc
test
mov
mov
and
mov
in
lcall
mov
adc
sbb
es
fnstsw
divb
inc
and
ret
mov
test
cmpsb
and
dec
pop
push
ret
lret
test
divb
mov
fcoml
repz
or
add
popf
add
push
jle
dec
lahf
pop
icebp
aas
dec
stc
sbb
scas
push
xor
pop
adc
mov
ss
and
cmp
push
push
mov
cmpsb
pop
push
push
lret
sbb
mov
mov
mov
push
lock
imul
add
and
sbb
sbb
or
xchg
mov
mov
adc
icebp
repz
icebp
mov
outsl
daa
push
add
xor
dec
dec
imul
int3
mov
mov
daa
and
jo
inc
adcl
stos
mov
arpl
cli
push
ds
and
push
enter
xchg
sbb
dec
inc
inc
inc
pop
popa
jbe
push
or
arpl
and
and
cmpsb
insl
mov
inc
xchg
ljmp
and
cmp
in
or
rcrb
or
sub
inc
mov
xchg
inc
sti
add
int
fdivrl
mov
push
mov
js
fildll
rorb
loope
sub
inc
sub
ret
insb
adc
jecxz
jne
jno
push
mov
loop
das
shll
mov
xchg
mov
outsl
mov
xor
push
sbb
lods
cli
cld
mov
mov
xchg
xchg
pusha
inc
stos
push
pop
xlat
test
pop
fdivl
cmc
sbb
loope
leave
js
mov
jp
fimuls
push
lcall
ja
sub
aam
jns
movsl
lea
push
inc
in
sbb
sbb
iret
mov
loope
je
mov
aad
xor
push
out
jp
jnp
push
push
jle
scas
xor
and
nop
bnd
fidivrs
cltd
ret
jl
pusha
rcll
cmc
cmpsl
int
xchg
scas
xor
paddsw
fwait
cmc
in
adc
dec
cld
test
inc
idivl
andnps
sbb
adc
or
xchg
add
jl
cmp
dec
mov
les
push
gs
pop
pop
cmp
inc
lahf
or
jecxz
aaa
pop
pop
aad
ljmpw
stc
loopne
or
shr
or
clc
mov
negl
iret
rol
mov
pusha
push
push
mov
sahf
jno
enter
dec
cli
sbb
push
movsb
mov
adc
insb
mov
pusha
enter
js
bound
or
out
mov
fdivr
test
lds
repz
adc
pop
mov
cltd
sbb
sub
cmp
ss
jle
shll
xlat
sub
add
jge
in
fistl
std
pusha
add
dec
es
bound
jecxz
das
call
fwait
xor
movsb
jp
leave
cli
leave
or
inc
pop
arpl
jecxz
or
fidivs
lods
jecxz
negb
push
sub
loope
rcll
fs
insb
dec
mov
cmp
and
xchg
cmpsl
push
stc
lock
dec
jle
fdiv
adc
lcall
hlt
dec
pop
push
pop
test
or
movsl
mov
inc
hlt
sbb
and
std
popf
add
sarl
xchg
dec
leave
sub
xor
or
xor
xchg
add
adc
int
xchg
jle
iret
les
xor
into
inc
rorb
mov
fists
fwait
aaa
xlat
in
mov
pop
fcompl
out
mov
adc
pop
mov
out
outsb
jnp
pop
mulps
out
popf
sub
pop
lret
test
stos
or
sbb
jecxz
pop
push
call
sub
pop
adc
xlat
mov
repz
fnstsw
rorb
jp
push
mov
ja
fisubl
fdivs
dec
addr16
imul
iret
das
cmp
pop
adc
cmp
cwtl
mov
mov
xchg
bnd
sbb
cmpsl
fninit
sbb
gs
aaa
pop
sbb
add
fucomp
mov
les
mov
loopne
xor
das
bound
mov
arpl
mov
popf
inc
cmpl
hlt
bound
push
pop
ret
cwtl
xchg
or
pop
cwtl
in
sub
add
cltd
mov
cwtl
mov
pop
fsubs
pop
pop
add
movsb
xchg
lock
loop
shlb
clc
icebp
xchg
and
lea
or
test
call
or
push
mov
or
movsl
push
enter
or
hlt
mov
aas
negb
xchg
fnstsw
mov
inc
xor
adc
aas
adc
movsl
add
test
cli
add
dec
ss
fidivrs
and
inc
xchg
jno
test
jnp
push
mov
jae
xlat
sbb
pusha
movsb
pop
mov
ret
xchg
xchg
adc
shl
enter
inc
adc
inc
bound
xor
cmc
or
shl
popa
int3
mov
push
ret
jecxz
hlt
jl
sub
lock
jg
mov
xor
jg
xor
mov
dec
push
sti
jp
adc
mov
icebp
test
ss
mov
test
aam
push
mov
fadds
ror
xchg
cmp
xchg
xor
shlb
push
xor
push
mov
fmul
movsl
inc
outsb
in
outsb
fldcw
mov
lahf
xchg
xor
jno
dec
sbb
xchg
mov
push
addr16
aam
xorb
fisttpll
aam
fisttpl
lcall
and
xchg
outsb
dec
inc
mov
andb
scas
and
jl
xor
daa
cltd
fstp
adc
sbb
addr16
lods
loope
loopne
mov
outsb
cmp
fisubrl
pop
mov
lea
and
adc
add
xchg
lret
pop
insl
lahf
jl
faddl
or
push
mov
cmp
push
lret
cwtl
mov
fcoml
cmp
push
cltd
cmpsl
repz
pop
or
mov
pop
and
inc
imul
inc
adc
hlt
xor
sub
push
movsl
lds
scas
xor
ja
jmp
ljmp
inc
dec
out
aam
mov
push
dec
mov
sbbb
jecxz
mov
xchg
bound
pop
jge
add
jl
into
cmpsb
xchg
xor
gs
jg
xchg
inc
inc
enter
ljmp
leave
xchg
jle
xor
cmp
or
jae
daa
mov
inc
mov
inc
push
das
loopne
outsl
jge
int3
call
das
mov
jbe
out
inc
je
ficomps
xchg
mov
fwait
sub
movsb
sbb
cltd
jae
loopne
sbb
ljmp
or
dec
mov
cmp
adc
push
add
iret
add
pop
cltd
xor
mov
mov
inc
div
mov
mov
mov
pusha
lcall
sub
xchg
subl
andl
data16
fbstp
jne
mov
pop
pop
xor
adc
xor
mov
push
inc
mov
and
dec
push
shlb
hlt
mov
adc
jge
push
out
es
dec
pop
add
xor
test
daa
sbb
push
pop
xchg
fldl
inc
mov
divb
add
cld
jnp
insl
nop
clc
xor
insb
and
cmpsb
sbb
out
orl
or
pop
ja
pop
out
lcall
js
or
cmp
in
add
jno
mov
cli
dec
xlat
popa
loope
or
repz
outsl
mov
cmp
push
mov
cmp
inc
fists
ret
or
jno
imul
sahf
aam
outsb
dec
sti
push
outsb
pop
mov
jg
or
dec
mov
loope
cmp
out
movsb
cmpsb
dec
adc
fcompp
fcmovne
mov
xlat
push
inc
hlt
inc
and
cmp
subb
dec
xchg
icebp
call
pop
stos
lret
dec
in
stos
xor
fstpl
movsb
mov
xor
mov
hlt
mov
int
fcomip
repnz
inc
das
cwtl
add
or
jle
jnp
sahf
aam
jbe
movq
je
cmc
fwait
xchg
sub
mov
imul
mov
bound
dec
sbb
cmp
dec
mov
sbb
bound
jne
lods
dec
and
dec
push
jmp
andl
pop
repz
in
xchg
scas
xchg
call
adc
cli
lret
pop
jo
dec
mov
jge
dec
fmull
lcall
sub
popf
cmp
inc
sbb
sub
ja
aaa
scas
aam
and
pop
stos
dec
xchg
mov
out
sahf
hlt
sbb
cmpsl
pop
imulb
xor
or
bound
xchg
sbb
pop
std
jmp
mov
cmc
pop
je
outsl
mov
orb
repnz
repnz
sbb
adc
call
cmc
xor
ljmp
push
add
test
and
dec
cmp
mov
ret
push
repz
xlat
xchg
popf
adc
pop
and
xchg
push
out
hlt
push
repnz
sarl
mov
les
xor
fisttpll
outsb
xchg
pop
test
adc
fldl
repz
sub
jg
jle
lret
mov
xchg
leave
test
dec
arpl
ror
dec
ja
sub
mov
cmp
test
popf
inc
daa
xchg
pop
lods
sub
or
subl
mov
movsb
and
cmp
insb
out
mov
je
out
xchg
mov
ror
sbb
push
frstor
mov
and
aas
mov
out
mov
inc
fdivs
out
cmc
cwtl
jg
test
jmp
pop
xchg
addr16
mov
mov
mov
mov
ret
mov
fadds
mov
sahf
and
sub
jp
pop
mov
mov
ja
jbe
sub
inc
jl
jge
push
dec
mov
dec
and
mov
dec
inc
clc
mov
mov
add
mov
push
adc
push
aas
sbb
clc
push
cmp
ljmp
pop
adc
sahf
jg
imul
push
xor
sbb
lahf
or
cwtl
jbe
jp
nop
popf
test
jg
ss
fmuls
cmp
leave
push
lcall
imul
xor
popf
push
inc
std
xchg
shl
cli
cmpsl
jae
adc
stos
popf
rcr
insb
xlat
cwtl
rcrb
inc
movsl
fisubrs
cmpsl
fwait
nop
aad
add
xchg
mov
add
mov
xlat
lahf
cmp
rol
dec
push
cld
stc
mov
imul
enter
adc
fstpl
pcmpgtw
insl
pop
clc
sahf
pop
cmpl
cmp
pop
stos
mov
xchg
xor
jge
sbb
insl
shlb
add
cmp
imul
incb
sub
push
adc
push
in
xchg
xor
insl
xchg
sub
jae
popa
push
jecxz
sbb
mov
popf
mov
iret
fcoms
repz
scas
adc
inc
sub
inc
or
xchg
sbb
imul
dec
pop
hlt
inc
mov
xor
push
cmp
add
mov
dec
mov
mov
fld
andl
nop
out
cmp
push
lods
inc
xor
xor
and
sub
pusha
mov
xor
pusha
scas
lret
pop
stc
mov
pop
dec
jno
test
mov
xchg
and
cli
adc
and
out
jns
rcll
sahf
mov
and
mov
es
sahf
xor
inc
jle
out
push
mov
push
rcrl
jne
pop
push
lahf
jl
xchg
adc
popa
movsl
xor
mov
jae
jno
pop
or
sub
mov
stos
stos
push
mov
lahf
fcoms
pop
shrb
lret
cmc
mov
jbe
lods
clc
jecxz
sahf
mov
rol
sub
adc
push
mov
cmpsb
daa
xchg
inc
testb
dec
popf
icebp
or
gs
push
mov
ljmp
insl
cli
es
aaa
mov
push
imul
xlat
sub
pusha
hlt
push
ljmp
bound
filds
shrb
sub
scas
pop
xchg
dec
inc
inc
lock
mov
dec
out
mov
sti
push
mov
cmp
push
in
hlt
xchg
push
mov
aas
loope
cmpb
cmpsl
cmpl
xchg
adc
filds
sbb
inc
into
push
mov
movsl
pop
pusha
jmp
out
stos
fwait
mov
ja
outsl
cmp
lods
mov
cmpsl
cmpl
inc
push
cmp
lcall
and
pop
push
and
push
xchg
mov
pop
mov
test
clc
js
pop
test
adc
cld
xchg
or
outsl
add
mov
jnp
aam
dec
mov
sub
pop
sub
pop
mov
das
sbb
in
sbb
hlt
mov
insl
mov
fldl
insl
ljmp
mov
and
mov
push
push
flds
cmp
xchg
dec
ud2
inc
or
adcl
jg
add
or
xor
jecxz
popf
push
mov
call
testl
in
adc
clc
pushf
aaa
pop
and
or
push
xlat
cmp
sbb
add
leave
movsl
enter
movsl
mov
dec
cltd
add
mov
mov
adc
sbb
cs
enter
fbld
mov
mov
stos
mov
xchg
icebp
push
dec
mov
sbb
movsb
fimull
mov
adc
xor
in
adc
dec
push
rorl
mov
sub
hlt
push
aaa
test
pushf
adc
pusha
sbb
notl
cwtl
insl
mov
mov
dec
inc
adc
sbb
pop
pusha
push
sub
repnz
dec
jl
add
popf
aam
sarb
mov
lretw
jmp
leave
xor
mov
rcll
daa
bound
push
aas
or
addr16
sub
xchg
enter
movsl
dec
loope
sub
nop
jae
insb
loop
add
dec
out
jp
arpl
jmp
inc
icebp
push
add
sub
lds
push
sub
mov
je
sahf
jno
dec
mov
cmc
sub
imul
xchg
and
jo
fsubs
mov
jp
outsl
add
mov
and
jge
sub
stc
or
lcall
aam
adc
fwait
xchg
mov
dec
jo
mov
outsb
addl
repnz
mov
lds
cwtl
jge
inc
xor
add
lret
mov
jmp
cmp
ret
jbe
stc
push
cmp
mov
xlat
test
mov
pushf
dec
psrld
cmc
cmp
repz
pop
outsl
cmpsb
test
dec
dec
pop
stos
cli
ss
jl
movsb
cmp
inc
inc
mov
orl
or
mov
jnp
jge
aaa
xor
call
or
mov
outsl
adc
repnz
push
ljmp
pop
pop
push
cmp
fwait
cwtl
das
jns
stc
pop
pop
or
cltd
sbb
fs
cmp
jno
sbb
or
mov
add
mov
inc
addb
pop
xor
cld
ds
mov
loop
cmp
xchg
rolb
jmp
mov
std
adc
test
in
lahf
loopne
inc
data16
rorl
addr16
into
lahf
cmp
fstpl
ficompl
mov
fsubp
xor
fcompl
pop
or
mov
out
lods
test
outsb
push
lea
add
leave
pop
aad
dec
sub
int
daa
inc
pop
into
mov
push
adc
aad
data16
adc
fcmovbe
cmpsb
inc
js
dec
cwtl
pushf
dec
mov
fpatan
xchg
dec
jecxz
xor
or
ss
lock
adc
negl
mov
xor
sub
xchg
xchg
mov
adc
jne
inc
mov
add
sub
sub
xor
dec
mov
in
push
movsb
cmpsl
lods
sub
push
nop
jle
xor
pop
iret
int3
fcmovu
and
bound
sbb
lret
arpl
xchg
add
xchg
mov
or
mov
pop
mov
mov
pop
fwait
cltd
jg
push
and
sarb
lcall
mov
cli
cltd
inc
sub
cmp
xchg
lret
pusha
push
scas
mov
fwait
pushf
in
pop
punpckhbw
pop
jno
mov
jp
push
int
insl
push
xchg
xor
leave
sahf
aas
jae,pt
ret
xchg
xchg
sbb
ss
test
int
aas
jge
cmp
xchg
ret
sub
adc
sahf
scas
and
adc
inc
jg
mov
test
xchg
ret
cs
mov
inc
jno
stc
cmp
pop
push
dec
in
int3
arpl
ret
loope
gs
call
mov
fucomp
push
mov
movsl
mov
push
jno
fsts
dec
into
test
in
pop
xchg
adc
add
cmp
mov
xlat
jl
ja
cmpsb
cli
stos
popf
lcall
fstps
std
lret
decb
xchg
jmp
movsl
in
pop
dec
sub
adc
dec
lods
fmull
enter
inc
and
pop
test
xchg
mov
mov
and
and
or
mov
lcall
xor
mov
fistps
and
sbb
imul
ds
mov
cmp
adc
jge
mov
mov
push
mov
lds
inc
out
and
xchg
and
pop
daa
xor
sbb
leave
add
push
out
mov
ficoml
jmp
lcall
addb
dec
xor
dec
out
push
xchg
xchg
js
push
arpl
mov
aad
xchg
sarl
push
in
daa
aad
inc
int
fsubl
mov
jne
or
mov
mov
sbb
daa
in
outsl
and
lds
inc
mov
dec
sub
sub
jnp
pushf
outsb
mov
leave
push
ret
mov
cld
push
mov
mov
dec
push
sub
lods
leave
fdiv
clc
iret
sub
ljmp
pop
push
pop
es
lods
adc
pop
imul
push
fs
mov
adc
adcb
lcall
mov
jp
divl
fnstcw
mov
loopne
mov
shrl
outsb
add
je
and
mov
call
into
jp
lods
xchg
stos
mov
test
push
pusha
mov
mov
sti
loopne
dec
xor
xchg
mov
mov
ds
push
xor
pop
out
rep
mov
and
sub
je
sub
cli
add
mov
leave
aam
dec
outsb
dec
jo
fs
fwait
sbb
mov
test
sbb
push
inc
shlb
stc
orb
xchg
pop
repnz
cltd
xchg
mov
jae
push
mov
dec
mov
jl
inc
push
mov
pushf
les
pop
jmp
jo
test
scas
add
dec
arpl
hlt
out
mov
cmp
out
pop
mov
mov
adcl
xchg
fsub
imul
mov
jle
xchg
xchg
repnz
nop
add
sub
test
sbb
fnstcw
sbb
arpl
mov
fwait
ljmp
mov
les
xchg
fs
inc
cltd
rclb
add
jmp
icebp
sub
cmp
sub
andl
gs
xchg
and
shlb
mov
loope
or
cmpb
jl
mov
pop
xor
dec
jmp
sarl
lahf
rorb
stc
gs
movsb
iret
xor
into
mov
adc
mov
xlat
inc
mov
in
ss
lcall
push
mov
add
mov
outsl
lea
and
jg
and
int3
mov
push
imul
mov
cmc
std
je
adc
enter
xchg
addl
and
jecxz
shl
sub
in
setp
add
mov
inc
xchg
inc
jmp
push
mov
push
insl
sbb
lret
test
dec
out
lock
pop
bound
lret
dec
inc
into
rolb
insb
int3
mov
push
mov
ljmp
sbb
or
aad
mov
fwait
add
int3
into
dec
movsb
xlat
stos
mov
and
test
int
xchg
adc
mov
adc
pop
stos
dec
sbb
cli
inc
lds
mov
pop
int
mov
dec
dec
sbb
jno
xor
repz
aaa
mov
je
int3
stc
test
mov
mov
xor
loopne
mov
pop
fs
add
pop
dec
mov
pop
in
or
sub
add
lahf
fadd
ljmpw
adc
sahf
add
lods
or
mov
add
cmp
push
mov
or
push
push
jmp
popf
sbb
dec
jne
inc
jecxz
jne
out
push
fbld
add
les
jge
cmpsl
and
pusha
ret
pop
mov
push
sub
das
jmp
xor
xor
and
popa
and
sub
and
sub
jg
sahf
pop
mov
cmp
sub
inc
mov
and
std
addr16
sbb
in
stos
negb
pusha
mov
rcr
jmp
imul
cmp
sti
inc
or
mov
ja
mov
mov
jecxz
cmpsb
xchg
xor
xor
push
mov
mov
or
xchg
mov
dec
dec
inc
push
jb
cmc
shl
call
test
mov
rcrl
cmc
fwait
out
imul
mov
fldl
sub
cmp
shr
mov
xchg
xchg
pop
dec
ss
jp
imulb
add
pop
gs
xor
sub
pushf
shr
mov
cmp
adc
in
push
int3
in
pop
popf
xchg
jmp
dec
pop
dec
aad
addr16
sbbl
jp
insb
xchg
jb
lock
enter
aaa
mov
mov
loope
fs
push
jmp
out
aas
cmp
jg
nop
pusha
push
cmp
pop
stos
dec
or
mov
pop
jecxz
imul
inc
lea
sub
setnp
cmp
shr
sub
adc
scas
sub
test
fcmove
into
in
fsubrl
aas
jp
or
es
test
pop
cmp
pop
and
jbe
jl
lds
js
dec
sar
add
in
lods
movb
lock
xor
into
xor
xor
jle
lret
mov
fdivrl
js
int
outsl
dec
jnp
or
scas
sahf
mov
out
shlb
int
xor
jbe
dec
push
aas
dec
jae
aam
in
fs
jbe
dec
xchg
dec
push
cmp
mov
push
jo
lret
or
xchg
stos
jnp
add
xchg
push
pop
pop
pushf
sub
adc
pop
sub
lret
xchg
and
jno
hlt
rolb
pushf
je
int3
push
mov
push
fs
sti
or
into
pop
enter
add
cmp
aam
fs
fs
dec
cmp
mov
mov
out
xchg
hlt
pop
mov
fldt
roll
lahf
inc
cmp
inc
push
aas
jbe
outsl
loope
xor
decb
push
mov
or
cli
cmpl
mov
jae
movsb
orl
push
push
sbb
add
and
test
stos
les
jnp
ret
mov
push
mov
pop
shlb
adc
mov
fdivl
sbbb
sbb
pop
jo
or
inc
ss
in
icebp
sub
mov
stos
mov
clc
js
ja
and
fistl
add
lahf
test
daa
inc
cli
and
ficomps
ret
cmp
xorb
pusha
mov
fidivs
shrl
stos
jae
lret
sbb
lret
mov
cmp
xor
fdiv
ljmp
fldl
xor
push
pop
xchg
xchg
inc
mov
ss
and
jl
or
icebp
test
mov
mov
xchg
aad
ret
push
ret
outsb
es
fs
pop
jno
cli
lret
and
add
sbb
lret
cmp
inc
mov
cmp
test
mov
shrl
inc
bswap
aaa
push
sbb
mov
sub
test
push
inc
test
pop
mov
sbb
cmp
mov
lcall
pop
test
mov
scas
mov
sbbl
xchg
adc
jl
arpl
cwtl
jge
inc
loop,pn
shrl
mov
and
push
xchg
decb
and
and
push
aad
jnp
jl
test
sub
lret
sbb
add
stos
adc
add
insl
jns
addr16
mov
mov
sbb
xor
lea
dec
add
mov
nop
dec
add
fbstp
sahf
cmpsb
inc
rcr
fwait
pop
jb
imul
shlb
cmc
cwtl
iret
inc
sar
and
outsl
add
daa
sti
add
ss
lret
or
inc
jns
out
xchg
push
rolb
in
xor
ficompl
pop
lods
js
vphaddbq
xor
addl
dec
push
inc
imull
xor
sbb
jb
dec
ja
mov
test
js
leave
ljmp
popa
je
jg
jbe
xor
sar
out
out
pop
mov
inc
arpl
ljmp
push
mov
dec
mov
sub
pop
test
icebp
test
and
lret
mov
addr16
inc
in
ljmp
leave
push
ret
lods
fisubs
out
jge
sbb
dec
ja
insb
xlat
fs
and
scas
outsl
mov
jg
stos
lret
jmp
inc
xor
cli
xchg
subb
je
or
dec
movsl
cmp
fildl
adc
int
jl
mov
in
std
and
or
std
and
addb
cmovns
fists
cli
or
ret
add
dec
fcoms
jo
jp
adc
cli
cmp
jecxz
sub
dec
sub
ljmp
ss
adc
stos
repz
fwait
scas
cmp
cltd
mov
xor
hlt
and
xchg
imul
mov
or
movsb
mov
ljmp
cwtl
mov
add
sbb
push
push
or
cmp
cmp
lret
dec
sbb
and
ret
popf
sarl
in
loope
stc
repnz
jp
sbb
mov
mov
fstpl
push
ret
ficomps
popa
lret
push
ljmp
lcall
fsubl
sbb
test
sbbl
push
popf
mov
sub
cmp
inc
shll
xchg
fnsave
fwait
loop
arpl
mov
jl
outsb
es
push
dec
sub
add
pop
pop
mov
mov
arpl
pavgw
lock
pop
repz
and
sbb
mov
test
xor
push
sbb
cwtl
in
cmp
jb
cmp
icebp
adc
mov
jb
mov
pop
push
sub
push
aam
insb
mov
repnz
push
mov
dec
and
loop
ja
xlat
les
insb
shlb
lea
enter
mov
dec
clc
fwait
cmp
ret
in
lcall
movsl
ljmp
cmpsl
or
in
lock
or
and
jae
pop
je
mov
int3
xchg
jb
cltd
push
int
aam
mov
pop
or
inc
jns
shrl
dec
adc
popa
movsl
or
ljmp
push
imul
sub
fisubrs
lret
out
push
xor
push
add
mov
pusha
popa
or
stc
out
xor
push
xchg
sub
or
mov
adc
xchg
insl
mov
out
xor
popa
push
int
dec
pop
cwtl
sar
fistpl
inc
jnp
jmp
jnp
pop
aad
lret
jnp
xor
xchg
jg
popl
inc
add
clc
iret
ret
inc
adc
xchg
sbb
xchg
add
fsincos
mov
mov
lret
cmp
jecxz
add
or
sub
push
add
test
adc
sbb
hlt
adc
dec
sbb
cltd
ficoms
lret
adc
mov
mov
shll
gs
inc
aad
adc
mov
adc
test
jo
and
in
imul
test
jle
xchg
negl
adc
or
lds
mov
mov
mov
dec
jle
xchg
testb
iret
sub
sub
fdivrl
test
orl
mov
out
mov
adc
push
inc
xor
daa
sbb
pop
dec
jbe
gs
mov
mov
stos
sbb
or
sbb
sub
cmp
nop
and
mov
ret
dec
cmp
push
or
pusha
mov
mov
mov
scas
jg
shrl
insl
js
adc
sbb
add
xchg
mov
nopl
ret
outsb
jle,pt
xor
mov
jecxz
sahf
xchg
add
mov
scas
adc
sub
fidivs
xchg
sbb
push
pushf
sub
in
in
aam
push
mov
push
fidivrl
lock
inc
dec
jo
lret
cmp
mov
andl
fwait
dec
stos
fwait
outsb
cmpsl
adc
cwtl
sub
add
stos
loope
fwait
mov
lock
sbb
xor
and
push
pop
imul
sub
jno
lods
fs
fcoml
sahf
insl
jbe
andl
gs
popf
into
or
xchg
pop
xchg
repnz
adc
in
data16
push
stos
aas
or
sahf
ds
inc
repnz
adc
lret
pop
jb
rcr
xchg
inc
call
in
mov
xchg
test
nop
ja
jb
and
sbb
jecxz
mov
loopne
test
inc
xchg
sbb
xchg
sahf
jge
cmp
adc
clc
stos
xor
cli
inc
out
lahf
or
mov
and
dec
jo
sbb
inc
lret
jb
xchg
mov
xchg
loope
inc
mov
aam
jae
fucomi
xchg
in
mov
and
cmp
sbb
popf
js
ss
and
mov
adc
into
mov
out
lret
add
and
or
adc
or
out
mov
iret
pusha
out
lahf
sbb
cltd
cmpsb
adc
pop
rol
fistps
add
popa
adc
and
fs
sub
jnp
mov
add
xlat
lret
idivb
and
jg
cs
aad
cmp
pusha
xlat
jg
dec
jl
mov
lds
jp
xchg
xchg
adc
movsl
je
outsb
cld
imul
lods
dec
jno
cmpsl
in
icebp
mov
or
jb
xor
xchg
testl
inc
jns
pop
mov
push
cltd
leave
jmp
xor
cltd
inc
es
movl
xchg
mov
and
xor
push
mov
rolb
push
test
aas
test
daa
je
lcall
add
push
lock
pushf
xchg
loope
xchg
mov
movsl
jns
outsl
fisttps
stos
insl
subl
outsb
xor
sbb
rorb
ds
jg
push
test
xchg
jb
push
dec
fidivs
mov
in
popf
mov
adc
out
xchg
fisttpll
mov
fisubrs
sbb
lods
lds
ljmp
shll
add
jno
dec
sbbb
mov
out
aad
sbbb
jae,pt
and
pop
adc
jp
stos
mov
pop
rorl
orb
push
test
gs
pop
ret
cmp
divb
adc
std
jmp
push
pop
test
cli
fsts
gs
lahf
sti
mov
or
paddusw
in
pop
cmp
fisubrl
jg
cmp
jae
sbb
inc
test
mov
mov
jne
pop
and
xor
dec
sbbl
sbb
sub
mov
cmp
sbb
fucomip
inc
mov
jg
mov
adc
push
add
add
aad
movl
lods
mov
mov
test
cmp
call
imul
gs
sub
fcoml
lods
dec
jg
jb
mov
imul
gs
lret
mov
and
loope
dec
xor
iret
cmp
xchg
pop
mov
mov
mov
adc
add
pop
add
scas
pop
sub
inc
xor
rcll
scas
bound
mov
xchg
xchg
sbb
xor
pop
lock
mov
inc
xchg
dec
lret
mov
or
push
mov
idivb
bound
mov
xor
fidivs
pop
dec
add
out
xorb
jno
enter
dec
pop
je
gs
adc
imul
push
mov
jae
dec
fcomi
dec
mov
mov
cmp
ds
pop
push
jmp
pop
push
adc
cmp
push
jmp
xor
jp
xchg
scas
loope
pop
out
scas
movsb
mov
repz
fwait
pop
mov
sbb
sbb
in
scas
stc
mov
push
jecxz
enter
or
sahf
inc
add
out
xchg
sbb
ficoml
jg
arpl
test
pop
sub
xchg
in
sbb
pop
and
mov
repnz
int
popa
pop
div
enter
jge
ja
out
outsb
pop
das
fcomi
push
incb
xchg
dec
or
lods
mov
adc
sahf
add
pusha
data16
cmp
xor
test
loopne
inc
xor
andb
xchg
pop
or
repnz
and
xchg
dec
add
push
in
stc
insl
cmp
add
dec
aaa
and
pop
ss
jno
pop
fnstsw
xchg
or
mov
div
pushf
push
xchg
fmuls
mov
mov
jnp
ljmp
pop
andb
cli
enter
ljmp
dec
arpl
pop
imul
insl
dec
aas
outsl
repnz
js
popa
stc
les
arpl
out
cmpsb
sbb
out
add
rorl
jg
std
inc
sahf
ja
fildll
add
iret
mov
mov
jmp
add
rcll
dec
or
mov
aam
orb
nop
ret
inc
pop
out
sbb
jbe
das
dec
divl
and
dec
mov
mov
in
cmp
xchg
mov
addl
int3
adc
jl
imul
cs
icebp
cmp
mov
mov
inc
insb
loop
rorb
xor
cmp
xchg
jbe
loopne
pop
mov
jns
push
ret
cwtl
mov
test
add
push
hlt
sbb
shll
dec
nop
loop
xlat
push
leave
and
dec
mov
call
jns
aas
adc
loope
push
and
pop
sbb
pop
xor
push
cmova
mov
cmc
mov
mov
test
jl
inc
aas
dec
add
gs
call
loop
adc
pop
gs
mov
sub
inc
push
cli
cld
out
jl
pop
fists
xchg
cmp
add
popa
fidivl
push
jns
cmp
ret
dec
mov
lret
imul
sub
mov
pusha
mov
dec
stos
and
push
test
mov
ja
out
popf
jne
outsl
inc
aaa
ficomps
cmp
lretw
shl
cs
movsb
pop
xchg
out
cs
nop
mov
push
leave
cmpsl
aad
sub
sub
sbb
out
pop
popf
or
xchg
mov
pop
or
lahf
lret
pop
stos
xchg
outsl
inc
aaa
ss
pop
inc
shrl
ds
push
push
mov
push
mov
rolb
add
rcrl
lock
ja
xor
sub
mov
addl
mov
pop
aas
loopne
sub
into
int
out
divl
int3
das
dec
enter
dec
call
imul
jbe
pop
sub
psadbw
cmp
dec
mov
ret
in
pop
jns
stos
stc
xchg
sbbl
and
adc
cmpsl
sub
fldenv
movsl
out
ljmp
fmull
and
or
pop
scas
repz
xorl
stos
repnz
push
aas
cltd
dec
dec
iret
pusha
push
pushf
out
shr
jnp
mov
dec
adcl
xlat
rcrb
pop
hlt
ljmp
std
xorl
je
lcall
jns
pop
push
mov
out
inc
nop
insb
cltd
arpl
xor
out
push
sti
jnp
mov
repz
ror
sbbl
push
sbb
dec
jbe
mov
sub
inc
xchg
inc
popf
jl
and
test
push
std
cmp
jns
adc
mov
add
jg
in
jb
add
inc
and
insb
stc
inc
fisubl
fwait
or
into
cmp
and
lea
call
hlt
test
xor
pop
mov
data16
sub
add
popa
lods
or
inc
out
int3
xchg
cwtl
push
sbb
ret
inc
int
sub
pop
insb
iret
xchg
loope
jne
lret
insl
in
out
mov
test
stc
shll
jmp
cwtl
ret
stos
lea
in
lahf
sbb
jle
iret
ds
or
adc
xor
cmp
dec
orb
sub
and
jae
test
lds
pushf
sahf
es
pop
mov
in
js
js
fisubs
mov
jno
cmc
movlps
stc
or
inc
jns
rcrl
int3
xchg
xchg
lods
push
lcall
lret
xor
inc
ss
mov
sbb
inc
outsb
jbe
sbbl
jmp
jge
or
sbb
fnstcw
push
scas
lahf
pop
cmpb
nop
xchg
idivl
mov
xchg
xor
adc
push
addr16
rep
push
mov
xchg
xor
dec
lahf
inc
pusha
pop
inc
push
int3
jae
add
fmull
addb
adc
rdtsc
jae
sbb
xchg
xchg
lods
jmp
in
inc
push
fwait
push
loopne
xchg
xor
stos
pop
insl
ss
jecxz
fildl
jae
mov
xchg
mov
dec
mov
test
aaa
gs
add
mov
xchg
jo
into
int
xchg
mov
pop
push
jae
and
shl
cmp
in
outsl
mov
dec
mov
gs
aam
push
insl
aam
sar
insl
adc
or
and
cmp
and
aad
pop
inc
jne
into
sub
add
sbb
jae
inc
xor
ss
dec
dec
imul
adc
fyl2xp1
das
fwait
xchg
inc
icebp
pop
jne
arpl
push
xchg
or
xchg
pop
aaa
pop
out
inc
dec
in
push
cmp
decb
pop
jb
addr16
xor
or
sbb
cmpsb
out
push
xchg
xor
mov
add
mov
lods
xor
cmpl
mov
das
mov
rorl
or
movsb
inc
sub
dec
loope
cmp
iret
xchg
mov
xor
jae
xor
xor
mov
pusha
or
ret
and
add
push
pop
bound
add
inc
in
xchg
xor
cmpsl
adc
shl
icebp
ja
stos
lcall
add
int
lcall
jbe
movsb
aas
push
mov
mov
dec
pop
pusha
and
adc
addr16
jne
or
jo
add
ja
mov
inc
inc
xor
scas
pop
pop
ja
sub
out
sub
jmp
int3
outsl
push
mov
xchg
push
cltd
jae
sub
sub
cltd
cs
pop
shlb
adc
and
in
mov
mov
and
lcall
stos
test
lcall
and
mov
mov
test
ljmp
dec
mov
mov
push
sar
lret
and
loop
ds
xor
pop
les
and
sbb
sub
mov
ret
int
outsb
sub
xchg
jl
sub
cltd
dec
jmp
shl
or
std
xchg
mov
add
xchg
pushf
push
lcall
fmul
mov
jl
add
outsl
inc
stc
xchg
mov
mov
vpcomud
dec
bound
movsl
jl
pop
jo
cmc
ret
clc
loopne
add
adc
imul
push
loope
mov
out
aam
rcrb
xlat
das
popf
inc
sub
dec
rclb
xorb
or
lea
add
enter
mov
dec
in
scas
push
add
shl
scas
lret
ret
mov
dec
cld
imul
and
cmp
jns
popa
mov
pop
and
pushf
cmc
mov
mov
lcall
cli
daa
xchg
jl
popf
fwait
cli
fwait
mov
lahf
loopne
jno
xorb
sbb
adc
aam
add
dec
test
push
int3
xchg
inc
and
arpl
ret
jne
and
cltd
dec
aas
test
jmp
mov
add
cmp
daa
pop
fidivrs
mov
or
pop
xchg
xor
mov
push
push
xchg
ds
data16
add
mov
arpl
sub
cltd
mov
out
stos
push
cmp
and
xor
scas
movsb
and
sahf
xlat
add
ret
mov
scas
adc
pushf
jo
jle
cltd
mov
adc
xchg
fimuls
mov
xor
in
sbbb
pop
orl
pop
lods
mov
outsb
xor
cmp
repz
mov
pusha
stc
shll
or
jbe
in
xlat
sub
rorl
daa
or
cmp
scas
add
lock
xor
lods
xor
icebp
pop
movsl
mov
inc
and
inc
jnp
shll
pop
int
or
insl
mov
pop
rclb
daa
sub
loope
fistpll
add
xchg
inc
inc
sub
adc
inc
movsl
test
ss
shl
sub
xchg
xlat
clc
outsl
dec
ret
fadd
mov
add
movsb
in
das
mov
dec
push
and
or
insb
je
cmc
dec
xor
pop
std
xchg
pop
in
ja
and
out
gs
mov
pop
adc
inc
ljmp
sub
dec
jbe
lods
push
sarb
xor
shll
dec
aad
lock
push
push
and
mov
mov
popf
inc
rcrl
cmpsl
out
push
into
mov
std
xor
sub
sub
jmp
imul
sub
cmp
mov
push
xchg
xchg
or
adc
jno
ss
mov
adc
and
test
dec
push
lods
stos
xorl
inc
jne,pn
loopne
imul
pop
fwait
xor
movsb
out
xor
fisttpl
xchg
ljmp
jp
inc
adc
or
add
sbb
idiv
inc
mov
sbb
testb
aam
or
out
adc
fnstsw
jg
aam
ss
in
or
inc
cmp
or
repz
outsb
dec
xor
inc
test
add
mov
cmpl
push
ret
imul
push
mov
push
dec
pop
xor
xchg
insb
arpl
lahf
scas
cld
mov
push
or
or
and
sub
popf
pop
lcall
aam
push
adc
ret
ficompl
jle
iret
xchg
or
std
sbb
test
movsl
push
or
dec
repz
mov
and
in
mov
loop
cs
fcomip
jmp
adc
xor
in
xchg
mov
shrl
adc
mov
popa
cld
pop
bnd
add
repz
mov
arpl
data16
fdivrs
dec
xchg
dec
gs
dec
repz
mov
pusha
mov
push
or
mov
int
aad
gs
leave
in
cmp
sti
cmp
imulb
inc
imul
dec
dec
jp
mov
cmp
xor
xchg
dec
or
movsb
mov
mov
adcb
xchg
insb
mov
or
out
push
and
add
or
add
rorb
pop
sbb
aaa
fstpt
lret
xchg
push
fcomp
icebp
pop
stos
fmull
outsb
rclb
cmp
dec
adc
inc
loopne
testl
push
stos
mov
int
push
dec
jne
fsubr
push
push
out
mov
mov
pop
jb
scas
lcall
push
shll
cmpb
cwtl
cli
hlt
dec
sbb
fxch
insl
lcall
push
sub
pop
mov
adc
fadds
lods
and
push
je
jecxz
add
and
aaa
mov
mov
lcall
mov
sbb
daa
orl
add
popa
xchg
jl
sub
jmp
fistpl
adc
fwait
sbb
dec
movsb
lods
clc
sbb
or
call
xor
jge
inc
sub
insb
popa
mov
sbb
or
sub
rclb
mov
jl
cmp
nop
mov
fwait
aad
sub
insl
jns
cli
clc
addb
icebp
mov
lret
xchg
xchg
cld
lock
inc
stos
xchg
jae
nop
adc
clc
adc
and
repz
repnz
xor
push
inc
mov
loopne
daa
mull
movsl
cmp
lods
mov
js
into
loop
aam
cmp
shlb
xor
repnz
xor
push
inc
mov
lea
adc
lahf
pop
sti
into
mov
mov
mov
jp
xor
in
and
loopne
jbe
adc
xchg
xchg
pop
sub
jae
sub
fucom
xchg
and
push
cld
or
dec
and
push
mov
int3
rcr
fcmovu
jae
xor
shr
push
xchg
cmpsb
mov
fstpt
and
sbb
sahf
fisttpll
mov
inc
ftst
pusha
iret
enter
push
jmp
mov
cltd
je
jl
int3
mov
jg
and
and
dec
std
dec
jo
pop
push
jnp
jb
push
std
cltd
xchg
inc
sarl
outsb
mov
fmuls
mov
fwait
sub
jp
leave
xchg
mov
mov
imul
and
mov
push
inc
jb
mov
scas
xchg
lods
cmpsl
xchg
dec
mov
leave
cmp
push
shll
mov
dec
arpl
arpl
addr16
jge
mov
fdivrs
adc
xor
in
push
movsb
dec
movsl
test
xchg
ja,pn
aaa
outsl
or
xchg
mov
jge
out
sub
mov
mov
xchg
adc
push
mov
add
push
loopne
aad
mov
xchg
pop
pop
jg
mov
repz
fwait
test
lahf
lcall
out
mov
sbb
pop
adc
mov
insb
test
push
repz
rclb
arpl
push
sbb
jg
mov
pop
pop
xchg
shl
push
and
notb
mov
hlt
cmpsl
jl
cld
stos
and
rcr
test
or
sub
mov
pop
xor
sub
repnz
out
pop
pop
adc
cwtl
ret
out
ficomps
inc
pop
outsb
xchg
ret
jnp
fs
jno
and
in
or
loop
or
mov
jp
push
movsb
cli
xchg
addr16
sub
fisttpl
scas
fists
jns
sub
xor
cmc
mov
cmpsl
ja
aad
cmp
addr16
insl
jle
ja
pop
fld
mov
jbe
adc
test
add
mov
pop
dec
xchg
jle
sbbl
jge
or
jbe
imul
mov
push
xchg
stos
stos
jae
adc
stos
pop
mov
in
mov
loope
enter
jb
mov
pop
xchg
push
sbb
push
sahf
popf
sbb
jmp
jmp
xchg
fxch
nop
adcb
push
negl
push
xor
sbb
or
pop
jl
cmp
lret
adc
mov
ljmp
iret
add
adc
mov
adc
or
outsb
push
pop
je
lret
and
mov
lcall
std
test
jo
data16
xor
test
mov
test
sub
pop
and
push
add
and
loopne
stos
inc
movl
fcoms
cld
sahf
int3
mov
mov
in
cmpsb
hlt
jge
mov
mov
cmp
jno
ret
mov
push
leave
dec
test
sub
jo
fs
or
add
xor
cli
test
aaa
addb
inc
or
add
mov
shlb
out
das
jp
push
mov
pop
loop
add
jnp
in
mov
jg
lcall
aas
mov
and
cmc
repz
or
fldcw
pop
pop
pop
ret
add
mov
fstl
nop
lret
jmp
pop
cmp
enter
mov
cmpsl
test
inc
inc
int3
shr
or
sbb
in
mov
jle
and
jecxz
lock
mov
inc
aaa
add
or
fbstp
fdivl
dec
scas
mov
fwait
daa
mov
cmp
fnstenv
imul
mov
test
jl
mov
pushf
stc
je
lahf
push
mov
js
inc
cs
dec
inc
lods
pop
stos
adc
add
pop
mov
lds
inc
mov
adc
pop
popf
movl
outsb
je
mov
fcmove
xchg
cmc
cmp
sub
xchg
xchg
mov
push
adc
add
inc
or
sbb
outsb
sbb
sub
mov
fwait
cmpsl
rcl
inc
jle
lcall
test
adc
and
dec
out
cmpsl
in
jno
scas
mov
mov
sub
mov
rol
adc
xor
jns
dec
inc
xor
jl
and
cmp
lds
loopne
out
ds
jp
clc
xchg
ds
jp
cmp
jae
jae
add
inc
adc
movsb
jge
pop
cmp
fbstp
xchg
pushf
add
push
mov
xchg
ficoms
imul
or
iret
aam
adc
xchg
inc
xor
push
rclb
push
xchg
jmp
cmc
and
lret
insb
ds
cli
cld
jmp
fldl
test
int
fildl
jnp
jno
leave
xchg
xchg
lds
mov
addr16
ljmp
out
adc
jg
cmp
jno
mov
pop
mov
xor
jmp
inc
ss
mov
loop
xchg
leave
out
cld
stos
add
jbe
inc
xor
lds
jns
cs
xor
sub
cwtl
in
test
inc
mov
cmc
imul
push
addb
ja
into
add
inc
mov
add
das
push
mull
push
push
pop
mov
outsb
or
cltd
lcall
dec
or
mov
mov
push
cwtl
cltd
xchg
or
push
jp
lahf
xchg
inc
sub
xchg
jl
sti
fstp
shrb
mov
and
and
test
xor
jmp
aam
insb
or
nopl
repnz
loopne
pushf
jo
ljmp
js
inc
sub
mov
outsl
cmp
adc
dec
imul
inc
xchg
aas
das
mov
jns
rcl
cli
adc
fildll
outsl
sbb
aad
pop
repnz
dec
aas
int3
mov
push
xchg
xchg
jae
shll
loop
loop
stc
mov
mov
test
fcmovnb
push
push
lahf
mov
call
pop
insl
mov
cli
ret
fsubp
enter
mov
in
cmp
aas
ljmp
in
xchg
push
xor
movl
inc
jo
lods
push
or
mov
push
testl
inc
push
or
cli
xor
mov
test
dec
mov
mov
pop
pop
sbb
cmp
and
sbb
jne
imul
cld
push
sti
jnp
sub
cmc
inc
loop
jo
ds
mov
cmp
dec
bound
adc
and
sbb
xchg
jno
fwait
hlt
js
in
incl
out
sub
adc
sbb
scas
mov
das
and
cmpsb
ljmp
int3
nop
xchg
sub
test
fistps
jne
arpl
test
jge
repnz
addr16
mov
jbe
sbb
push
enter
jmp
inc
stos
out
fwait
pushf
pop
pusha
mov
imul
jns
cmp
mov
xor
or
xor
cmp
cli
scas
dec
mov
dec
sahf
aas
sbb
iret
dec
xchg
pop
mov
cltd
int3
adc
xchg
dec
les
fisubs
mov
lock
into
inc
push
xchg
lods
fucomi
std
in
pop
inc
jno
addr16
int
cmpsl
mov
jae
jbe
flds
ret
shrb
repnz
shld
shr
jnp
loop
jl
mov
and
call
out
xorb
push
adc
int3
insb
cmp
cmp
test
and
shll
shlb
mov
out
iretw
jae
mov
pop
and
ret
mov
cmp
dec
outsl
push
lock
xchg
inc
fmull
dec
dec
mov
xor
jecxz
fldl
jge
cmp
movsb
insl
popf
mov
xchg
mov
lea
push
pop
mov
push
sarb
sub
pop
mov
cmp
jmp
adcb
ja
xor
xchg
fcmovnu
mov
nop
mov
cmc
mov
loop
sbb
and
mov
sub
jb
push
mov
xchg
fiaddl
sbb
fnstsw
mov
pop
fmuls
pop
mov
pop
jmp
pop
inc
fstpl
movsb
add
lods
jnp
arpl
inc
jb
leave
pusha
stos
mov
jnp
sti
gs
add
jg
in
loope
cmpsb
test
dec
add
stc
insl
repnz
mov
ja
push
adc
lcall
mov
roll
sbb
imul
repz
cmp
icebp
ss
cwtl
outsb
aam
sub
fdivrs
and
jbe
pop
inc
movsl
inc
sub
cmc
andb
jae
in
push
pop
test
adc
pop
xchg
shll
mov
inc
jns
pusha
push
adc
mov
hlt
inc
ja
popa
orb
fnstsw
scas
pop
sbb
shlb
mov
aam
inc
cmp
scas
push
dec
jl
popf
sub
jb
les
out
roll
jne
xor
sbb
push
fwait
adc
enter
pusha
sarb
mov
fdivl
shl
addr16
jae
and
mov
mov
cli
aad
sbb
and
add
es
insl
and
js
xchg
es
or
fisttpll
divl
fistps
or
adc
jnp
imul
mov
cli
or
xchg
out
jp
jne
icebp
inc
mov
aam
jl
inc
std
mov
xchg
test
repz
xor
push
inc
outsb
mov
shl
ss
cmp
adc
repnz
aas
aad
jecxz
mov
cs
addr16
insl
imul
insb
jmp
lock
pop
in
scas
lea
int
inc
out
sub
pop
sbb
mov
cmp
pop
repnz
sbb
mov
loope
pop
jnp
push
inc
push
mov
int
popa
mov
clc
pop
out
clc
mov
mov
repz
negb
aam
dec
jb
dec
jne
pop
sub
imul
sbb
sub
jno
sub
sbb
or
lret
aad
out
dec
and
sbb
mov
or
ja
fidivrs
decl
shll
inc
mov
dec
adc
cmp
mov
lcall
adc
push
cld
fisttpll
arpl
scas
push
ja
xor
inc
or
add
ja
stc
ds
nop
sub
imul
int3
test
push
sub
cmp
aaa
lods
mov
add
push
aam
ficomps
pop
push
popf
sahf
mov
jb
js
mov
push
or
scas
jp
gs
mov
push
xchg
cld
lods
lock
lds
sub
lods
push
dec
or
sbb
pop
loope
cmp
sbb
inc
in
js
adc
fwait
mov
je
sub
push
push
mov
in
or
fists
out
inc
jae
mov
jge
nop
loope
cmc
int
xor
hlt
mov
inc
jge
xchg
adc
jp
xchg
divl
mov
ja
mov
loope
sub
addr16
js
jae
bound
pop
mov
enter
push
or
jns
cmpsb
mov
adc
inc
arpl
and
vmovsd
iret
or
mov
aaa
push
aaa
dec
push
pop
es
rclb
lds
shrl
in
push
push
and
call
mov
push
dec
sets
jo
sarl
lret
fisttpll
pop
jno
pop
fmul
adcl
or
mov
dec
sub
mov
cli
jo
cld
int
lret
popa
sbb
lock
fisubs
add
jmp
fadd
mov
ror
or
xor
inc
dec
shll
xor
ds
mov
aad
mov
jns
out
sub
inc
ret
fisubl
lcall
pop
shrb
jne
mov
and
mov
xor
xor
sbb
xchg
popa
jb
cli
jmp
mov
push
dec
mov
mov
mov
hlt
out
fwait
test
jle
adc
sub
jnp
scas
fwait
lret
sbb
inc
dec
jecxz
insb
ret
sbb
mov
enter
loop
or
add
out
push
adc
mov
or
cmp
popf
mov
ret
mov
jecxz
cwtl
jo
sbb
or
mov
cld
imul
call
and
outsb
ja
inc
push
mov
cmpsl
push
dec
cs
sti
cmp
lock
jg
fs
cwtl
xor
mov
out
push
dec
pop
or
hlt
adc
dec
dec
cmpsl
je
xchg
push
lret
mov
xor
mov
xlat
xchg
clc
int3
insl
les
les
or
insb
pop
and
dec
sub
lods
inc
ffreep
das
repnz
movsb
dec
and
cmp
jns
pop
xor
mov
jecxz
js
xor
add
andb
xchg
mov
inc
dec
test
inc
movsl
cld
jl
mov
imul
aam
adc
imul
dec
cmp
dec
or
mov
sarb
lret
cmp
cmp
out
fdivs
aad
add
scas
int
mov
or
sub
mul
xchg
leave
in
lcall
mov
cs
inc
jne
pop
mov
not
push
leave
sub
shrb
and
mov
mov
gs
push
fldt
cwtl
jg
xchg
xchg
rcll
adc
mov
aaa
push
dec
inc
push
gs
cs
hlt
arpl
aaa
test
xchg
push
repnz
xchg
lods
insb
test
rcrl
rcr
stos
sub
lahf
mov
mov
jge
push
in
mov
dec
inc
or
pop
jo
sbb
ds
mov
and
test
pop
or
or
sahf
movsb
repnz
push
scas
jnp
out
push
adc
jg
popf
addr16
sub
push
cmpsb
inc
push
pop
xchg
jl
into
mov
movsl
pop
add
fimuls
fdivs
cmp
and
add
sub
fdivp
jge
aad
dec
xchg
dec
xor
stos
andb
mov
lds
pop
pop
out
popf
push
pop
cmp
lds
mov
sahf
movsb
mov
mov
test
adc
jle
lcall
mov
mov
ljmp
pop
or
mov
icebp
jecxz
cmpsb
repnz
push
pop
sar
dec
cmp
outsb
dec
push
pavgw
int3
fisubs
and
cmpl
cmp
fisttps
sub
fcompl
and
loope
cli
sbb
sub
xor
push
mov
cmp
lahf
push
lods
fs
dec
out
adc
adc
mov
fsub
pop
ljmp
scas
cs
mov
lcall
mov
xchg
mov
or
xchg
xchg
ret
mov
push
pop
mov
jns
inc
mov
fwait
add
mov
mov
adc
popa
inc
dec
pushf
inc
out
lahf
and
push
in
mov
std
fstpl
adc
push
push
ljmp
or
sub
in
inc
xor
and
xchg
lahf
jge
pop
cmpsl
loop
das
sbb
sub
inc
mov
inc
mov
call
sahf
xlat
mov
jnp
int3
jo
hlt
add
adc
cmp
fdivrs
mov
jl
dec
movsb
adc
pop
pop
pop
xor
pop
enter
sbb
cmc
push
fisubrl
sub
jp
movsb
push
jae
stos
leave
scas
adc
es
cld
mov
in
pop
loopne
mov
dec
sbb
cmpsb
fiaddl
dec
xor
stos
mov
jg
and
dec
popf
inc
stos
mov
xor
push
pop
xor
pop
imul
lods
int3
dec
ret
test
xor
pop
aad
jns
push
xor
add
pop
addl
adcb
or
and
mov
fimull
push
stos
lret
pop
lock
insl
xchg
inc
pushf
or
mov
push
mov
loopne
push
push
or
add
cmc
xchg
xlat
clc
outsl
dec
ret
fcomps
popa
xchg
aad
mov
add
imul
add
lcall
mov
nop
xlat
ss
xlat
fdiv
std
jns
sub
cwtl
sub
add
divb
jmp
sub
jge
mov
and
push
fadd
and
jo
aaa
movsb
nop
push
imul
int
in
sbb
dec
sbb
dec
int3
stos
push
dec
aaa
ss
cmpl
ficompl
hlt
pop
int3
lcall
inc
icebp
xor
lret
mov
jp
je
ffreep
adc
mov
adcb
ss
cmpl
cmp
rol
lock
repz
jb
pop
pop
sahf
adc
xlat
dec
push
add
inc
popl
sahf
ja
mov
ficompl
js
insl
sub
jns
inc
fiaddl
repnz
sub
xchg
mov
mov
jo
ret
sbb
mov
cmp
pop
aad
adc
xor
adc
cmpsb
and
push
and
add
es
mov
pop
ljmp
xor
icebp
rcr
xchg
enter
ja
mov
pop
int
leave
cmpsl
enter
cmp
sub
and
pop
es
mov
push
or
aam
or
sub
xor
xchg
lahf
aam
adc
jmp
imul
fbld
rcll
inc
pop
ror
dec
popf
dec
out
inc
mov
add
push
pushw
mov
movsl
les
sub
ret
mov
mov
cmp
outsl
lea
cmpsl
dec
pusha
sub
pop
or
or
imul
pop
xchg
out
sbbl
fisubrl
jg
lock
test
fsubp
dec
lods
sub
pop
ja
push
lods
mov
pop
push
inc
fwait
mov
push
dec
je
mov
sbb
gs
in
mov
cmp
popa
lds
push
xchg
push
sub
insb
out
mov
push
inc
out
sub
mov
add
adc
stos
outsl
or
ja
add
fsub
in
nop
dec
mov
clc
sub
mov
dec
xor
test
inc
jns
dec
lods
cmpb
insb
imul
mov
adc
inc
xchg
arpl
pushf
popa
iret
aad
adc
xor
psllq
in
and
pushf
aam
std
cmp
outsl
pop
sbb
imul
add
imull
xor
mov
insl
call
xorl
dec
dec
lods
jae
js
cwtl
pop
sub
repnz
outsl
mov
adc
ljmp
std
adc
pop
pop
push
mov
dec
loopne
add
sbb
test
mov
push
pushf
scas
cmp
jne
push
insb
test
cmp
arpl
and
in
or
fidivl
lret
and
or
idivl
adcb
mov
clc
rolb
clc
jno
push
xor
sahf
aaa
enter
mov
pop
test
xor
in
push
loopne
mov
jg
int
mov
or
cwtl
cmp
imul
ljmp
xchg
pop
fwait
add
dec
cs
into
xchg
adc
and
and
inc
inc
inc
jg
pop
sbb
fdivs
cmp
and
lods
mov
arpl
add
fldenv
dec
xor
mov
js
fdivrp
push
ficomps
mov
cmp
or
push
dec
lock
sub
popa
and
aad
ret
jnp
cmp
pop
out
adc
add
dec
insl
fsts
aaa
iret
loope
jmp
stos
push
mov
cmp
or
cmp
out
or
inc
orl
xor
test
xchg
pop
insl
fcoml
out
decl
pop
dec
xor
cmpsl
outsl
adc
icebp
cmpl
jmp
mov
mov
pusha
mov
xchg
mov
xor
pop
imul
adc
out
cmp
in
repz
loop
mov
xor
loop
loop
xor
rolb
iret
leave
add
ret
mov
add
mov
bound
filds
lock
xchg
lods
push
divl
pop
or
and
mov
sar
pop
js
addr16
mov
mull
inc
jae
aad
xor
sbb
enter
int3
cmp
mov
xchg
add
stc
inc
push
push
mov
sub
aaa
jge
ljmp
mov
lock
lret
adc
lods
les
sub
dec
sbb
test
scas
mov
pop
cmp
fsubl
mov
test
push
mov
inc
shl
jb
test
mov
insl
pop
sub
jnp
mov
push
cwtl
mov
and
jno
or
cli
sub
hlt
in
pop
lcall
std
jne
std
and
pop
shl
fcmovnu
cmp
xchg
xchg
jp
push
mov
mov
mov
adc
aaa
jl
popf
fdivl
repz
pushf
lcall
test
bound
cs
insb
mov
jbe
cmp
push
mov
xor
cmpsl
mov
jb
inc
enter
call
xchg
ret
dec
adc
add
adc
pop
mov
push
xor
push
sub
int3
pop
js
loopne
movsl
cltd
idivb
jge
mov
call
mov
inc
jmp
xchg
sti
push
pop
add
aaa
cmpsl
jae
test
dec
adc
daa
jb
shll
aam
data16
scas
sub
mov
xorb
adc
out
fsubrs
push
push
stos
aaa
std
or
lcall
repz
call
push
pop
push
dec
addr16
pop
js
loopne
movsl
adc
push
push
dec
add
pushf
pop
sahf
jb
cmp
out
aas
pop
clc
mov
mov
cmp
xchg
in
shlb
testb
and
sti
addr16
fwait
sub
pop
test
stos
xor
movd
mov
ljmp
sti
movsb
pop
jno
push
jecxz
popa
inc
div
les
aad
mov
fimull
sahf
jne
mov
pop
jp
js
in
xlat
xchg
push
sbb
rcrb
sbb
cmp
cmp
loope
pop
xor
fisttps
insb
or
scas
pop
sbb
repz
cld
test
rclb
sbb
cmp
mov
jo
outsl
lods
ficoms
stos
or
js
in
sub
inc
push
outsb
add
pop
cltd
out
xchg
ficompl
jbe
pop
pop
fisubrl
or
mov
pop
mov
or
add
mov
mov
mov
inc
in
mov
lahf
out
scas
pop
or
dec
sbb
xchg
and
xor
xchg
or
test
push
loope
lds
test
call
or
cwtl
stos
adc
pop
sbb
mov
or
fidivrl
adc
push
jbe
mov
xlat
lods
push
idivb
mov
in
pop
jnp
jge
xchg
sarl
or
inc
into
add
xchg
arpl
jo
or
xchg
push
mov
stos
or
js
icebp
shl
xlat
inc
adc
dec
bound
fnstenv
add
and
dec
sbb
lahf
sarl
adc
pop
outsl
ja
pop
jle
je
add
enter
cmp
sahf
in
ds
inc
pop
xor
xchg
popf
adc
inc
insl
int3
mov
jo
into
jb
cmp
in
sbb
gs
push
push
pop
popa
lods
mov
xchg
cmc
adc
cmp
hlt
sbb
fs
movsl
fnsave
idivb
dec
push
xor
xchg
pop
and
dec
in
or
xchg
outsb
xor
lods
jns
pusha
mov
push
xchg
xchg
arpl
fnstcw
pop
dec
pop
jnp
sbb
das
push
add
adc
loop
mov
push
sbb
ss
mov
hlt
or
cltd
jns
shrb
or
mov
dec
dec
cmc
inc
cmp
jnp
inc
rcrb
sbb
mov
jge
out
in
call
xchg
add
sarb
jge
stc
adc
lret
or
loopne
sub
mov
xor
push
and
xchg
test
bnd
repz
cmp
mov
and
shlb
shrb
pop
fstl
in
mov
mov
sub
jmp
lods
or
xchg
lret
mov
adc
sbb
insb
scas
or
or
aas
xchg
test
pop
pop
mov
pop
adc
out
add
jne
jno
xchg
pop
jne
fcoml
or
sbb
mov
aaa
mov
adc
movsl
push
loop
jno
enter
dec
and
push
mov
mov
stc
push
inc
inc
sarl
rclb
sbb
sub
in
fdivrs
mov
xchg
stos
cmp
dec
call
xchg
leave
imul
inc
cli
push
pop
add
and
xor
mov
cmp
movsb
sbb
inc
pop
jmp
fs
lea
inc
mov
push
orl
movsl
enter
jnp
sahf
sbb
leave
test
outsb
xchg
cmc
fbstp
test
mov
cmp
popf
ret
fmuls
aas
popf
cmp
pop
mov
leave
loopne
jp
jp
test
test
add
testb
sbb
test
cltd
fldl
pop
jecxz
push
les
repz
sub
mov
in
and
inc
or
lods
push
inc
lret
cltd
dec
jmp
inc
jae
loope
xlat
dec
add
sahf
in
adcb
push
adc
mov
push
cli
insl
loop
mov
aad
xchg
cmp
aaa
outsb
cs
pushf
je
mov
mov
rcll
jbe
mov
xor
mov
testl
cmpsl
inc
adc
push
add
xchg
jae
scas
push
adc
push
addr16
clc
mov
dec
cmp
out
cmp
adc
ljmp
popa
mov
or
dec
enter
cli
sub
xchg
jmp
aas
lods
out
jle
lods
repnz
jne
lret
jno
lods
mov
xor
sub
sbb
add
mov
mov
insl
mov
cwtl
ret
in
sbb
jae
dec
orl
ret
xchg
sub
jge
imul
and
hlt
cltd
jnp
es
cmp
mulb
int3
push
call
nop
pop
sub
pushf
mov
shlb
adc
cmp
arpl
mov
nop
mov
insb
pop
pop
popf
add
popa
arpl
dec
js
mov
push
xchg
call
or
jae
push
sti
call
test
dec
ret
call
jmp
xchg
mov
dec
loopne
dec
stos
cmp
stos
int
xlat
dec
inc
mov
stos
jle
in
or
jnp
lods
dec
lcall
adcb
adc
mov
push
loopne
pop
leave
fdiv
jb
mov
dec
xlat
push
mov
popa
jle
pop
lea
push
sub
movsb
scas
scas
movsl
and
inc
pop
fsubs
pop
lods
out
push
dec
testl
divl
fdivl
rcl
pop
xchg
push
int3
aad
pop
sahf
std
xor
imul
adc
imulb
aad
mov
xchg
andb
mov
mov
dec
cmp
xor
test
cltd
das
lods
pop
orb
pop
fidivrs
mov
rorb
push
clc
les
cmc
ss
inc
push
push
add
and
daa
cmp
sub
mov
inc
inc
rcrb
out
fwait
mov
pushf
imul
add
push
inc
jns,pt
jle
cmpsl
fldcw
movsl
fcompl
xor
sub
xchg
leave
movsb
jmp
jo
mov
sbb
cmp
je
andb
fists
mov
pop
lods
and
pop
mov
sbb
js
lods
jns
aam
mov
aad
gs
jp
cmpsb
lock
xchg
xor
pop
cwtl
es
sub
stc
jp
js
adc
push
inc
les
or
cmp
addl
roll
mov
dec
shrb
sbb
faddp
test
bnd
mov
jl
add
out
mov
xor
mov
jae
test
aas
mov
jecxz
add
mov
jb
aad
mov
sub
mov
pop
or
pop
in
inc
movsb
pop
addb
cmp
mov
sub
and
lods
js
mov
pop
cmpsl
push
lds
pop
pushw
fldt
loopne
pop
jg
mov
popa
sbb
sbbb
icebp
loopne
test
psubq
inc
push
xor
lea
sub
mov
xor
insb
es
add
dec
call
sub
test
xchg
mov
inc
xor
jge
aaa
inc
jbe
push
sub
inc
sbb
pcmpeqb
rdtsc
dec
push
and
dec
pop
lahf
jne
or
fcmove
rcrl
scas
in
sub
push
fnsave
fmulp
gs
pop
dec
sub
mov
push
pop
xchg
sbb
push
outsb
repz
push
jl
add
cmp
inc
cmpl
dec
data16
lret
adc
nop
test
loope
jbe
lock
rcll
icebp
or
aas
fildl
sahf
push
fmul
je
lahf
or
popa
test
in
ret
sbb
mov
test
sbb
xor
test
lcall
cmp
push
mov
fsubrl
std
dec
test
lret
movsl
loop
scas
xchg
jge
test
sarl
gs
pop
sbb
or
mov
popa
cld
or
fwait
inc
mov
es
jl
adc
movsb
hlt
mov
es
jecxz
dec
cwtl
jo
pop
mov
lods
sbb
clc
jle
mov
dec
sbb
ret
pop
or
aas
fmull
paddusw
or
xor
xchg
loop
jl
mov
insb
dec
mov
xchg
cld
fs
push
xchg
fiaddl
or
es
inc
mov
dec
pop
loop
pop
pop
ljmp
inc
enter
pusha
dec
xchg
pop
xor
pop
jne
add
push
lret
lods
leave
jl
sbb
inc
xchg
xor
push
sti
stos
sub
sbbb
outsb
les
and
iret
rcpps
inc
and
jo
dec
or
fisttpl
jle
fcomps
jecxz
push
scas
rolb
push
enter
fidivl
fnstenv
mov
into
jecxz
push
scas
rolb
push
repnz
int
sub
dec
aad
nop
mov
mov
shll
jne
pop
jae
mov
pop
pop
adc
push
ret
inc
aam
mov
nop
or
xor
or
loopne
add
dec
push
sarb
jmp
mov
lds
mov
sbb
or
inc
add
cmp
mov
push
cld
fs
lcall
push
outsl
mov
int
push
adc
or
mov
push
lea
inc
xor
lods
fwait
mov
pop
mov
mov
in
mov
in
add
adc
push
sub
std
jle
cltd
push
dec
mov
sti
cmpsb
fisttpll
mov
stos
adc
mov
mov
js
sbb
xchg
in
mov
pushf
mov
outsl
jns
mov
push
lock
imul
leave
mov
sbb
and
repz
jb
mov
addl
insb
ficoms
lgs
rcrb
mov
mov
fldl
sbb
or
add
rcrl
fwait
mov
and
out
repz
dec
shr
popa
dec
aas
leave
imul
xor
mov
and
nop
addl
in
cld
push
adc
test
jb
pusha
inc
xchg
std
push
jno
or
fwait
in
sbb
cmp
stos
fsubl
leave
sbb
xchg
fldl
pop
cmp
mov
xchg
mov
mov
jbe
dec
movsb
sub
fiaddl
mov
push
dec
dec
sbb
sbb
push
jmp
mov
stos
add
mov
test
cltd
rcrl
mov
sbb
rep
scas
cld
sti
test
loopne
fisubrl
insl
dec
aas
outsl
repnz
mov
push
fcoms
popa
aam
lods
add
dec
push
loopne
jmp
loopne
xor
push
out
in
repnz
ffreep
push
push
mov
jb
jg
or
mov
hlt
es
mov
sub
bound
push
aaa
and
shl
in
dec
mov
dec
push
test
pop
daa
add
mov
mov
sub
fmuls
and
orl
cmp
mov
lea
inc
mov
test
lret
imul
bnd
cli
add
aaa
mov
hlt
dec
mov
inc
mov
or
jb
fstpl
jno
mov
aam
jnp
add
sbb
xchg
mov
rorb
addr16
jns
loope
insb
add
in
adc
mov
outsl
aas
pushl
mov
jae
mov
mov
mov
aad
push
arpl
push
jle
ss
movsb
shrb
shl
mov
mov
mov
std
pop
in
aaa
cmp
inc
mov
out
cld
test
aam
into
mov
dec
enter
dec
sub
leave
jmp
inc
cld
pusha
add
jb
and
jecxz
flds
les
push
mov
das
mov
cmp
push
sbb
insl
inc
out
not
push
sub
jp
fwait
adc
adc
lods
outsl
mov
mov
jns
addl
cli
fiadds
pop
xchg
or
repz
inc
in
add
fcompl
sbb
pusha
out
lret
jecxz
in
in
orb
xchg
push
add
and
push
scas
lret
xchg
mov
mov
adc
mov
daa
inc
int
ljmp
addr16
out
mov
xchg
xchg
push
loop
inc
cltd
iret
push
adcb
add
cmp
cmc
jb
hlt
add
hlt
xchg
out
cld
les
or
pop
and
pop
ret
clc
push
pop
cs
movsb
xor
mov
push
push
pop
lret
lods
nop
pop
mov
add
xor
push
cmpsb
mov
mov
cmp
inc
fildll
ljmp
mov
jbe
cmp
pusha
imul
mov
ljmp
jmp
xchg
cli
jae
add
imul
test
hlt
imul
adc
aas
andb
or
push
fwait
adc
hlt
cs
pop
mov
add
roll
stos
ss
mov
pop
dec
pushl
sbb
push
scas
jno
mov
icebp
pop
repnz
jle
sarb
stc
mov
sbb
out
out
sbb
xchg
lods
stos
in
xchg
imul
adcl
mov
and
mov
out
or
iret
out
adc
or
add
cmp
or
dec
sbb
stc
mov
push
jle
xor
mov
fisubs
xor
dec
pusha
sar
lods
mov
fldl
pop
scas
or
push
dec
shl
adc
pusha
cmp
sbb
aad
call
add
cli
stc
mov
sbb
sbb
fisubs
xor
dec
pusha
shr
ds
stos
leave
rol
jp
fldl
pop
scas
or
mov
sbb
xor
decb
in
das
aad
out
jo
bound
sbb
and
dec
xor
in
iret
jp
int3
icebp
iret
pusha
sarb
dec
add
push
cmp
xchg
xor
xor
add
cmp
sub
push
call
mov
cwtl
testb
in
adc
pop
push
out
pushf
and
sarl
cmp
xchg
outsl
dec
mov
scas
rep
mov
add
push
sbbl
push
adc
push
hlt
fldcw
pop
les
push
imul
mov
jae
add
ffreep
es
or
arpl
xor
jae
xor
push
and
movb
aam
call
inc
call
mov
sub
aas
push
pop
push
push
icebp
mov
inc
int
inc
out
decb
sbb
and
loop
sub
fldenv
sub
pop
jnp
sbb
sbb
aaa
pop
iret
jp
pop
and
mov
cmp
pop
push
or
fistpll
cli
push
mov
ja
mov
add
push
loopne
stc
sbb
lea
push
adcb
xor
out
sub
addl
inc
adc
int
and
jae
out
repnz
cmp
mov
frstor
enter
pop
rclb
fdivl
adc
lret
jbe
addr16
adc
pop
pushf
cmp
sub
mov
das
and
jg
dec
or
jbe
fsubrs
push
bound
icebp
jne
in
xchg
aad
cmpl
ja
mov
dec
sub
lods
inc
xchg
sbb
int
dec
int3
std
ja
stos
iret
push
pop
bswap
xor
fists
cmp
jg
fcoml
jo
pop
ret
mov
sahf
and
movsl
cwtl
outsl
aam
ljmp
test
dec
out
enter
xlat
sub
imul
jno
js
aad
cmp
js
lds
cmp
orl
mov
das
aad
rcrb
xchg
sti
cwtl
inc
dec
loopne
sub
pop
in
mov
scas
or
cmp
mov
scas
mov
dec
imul
mulb
loope
pushf
cmp
xchg
ret
mov
mov
xor
cmc
andl
adc
xlat
cwtl
jb
jae
shlb
mov
or
xor
and
sbbl
sub
fistpll
xlat
push
jb
in
xor
fwait
pop
fisubrs
inc
pop
decb
mov
rcll
sbb
data16
pop
adc
and
mov
sti
mov
xchg
or
repz
mov
push
pop
pushl
les
scas
fistl
stos
aam
ja
jb
pop
mov
dec
scas
or
cwtl
inc
push
push
out
sahf
mov
sub
pop
sub
mov
out
sbb
xor
repz
les
into
clc
or
push
and
in
adc
push
mov
adc
cmpsl
mov
fcmovbe
and
stos
sbb
cwtl
pop
movsb
scas
cltd
cmpsb
scas
popf
shlb
push
mov
hlt
jb
sarb
fwait
insb
test
lock
dec
mov
shrl
jp
roll
sub
in
repz
lfs
insl
fcoms
xchg
sti
shrb
imul
pop
icebp
jl
push
cli
xchg
test
pushf
shrb
shll
pop
mov
int
shl
pop
decl
mov
jb
ret
mov
stos
inc
mov
sbb
outsl
xor
fbstp
fsubr
stos
pop
mov
shrb
stc
jns
xor
out
mov
out
mov
iret
daa
dec
outsb
push
xor
mov
inc
call
out
xchg
add
jne
adc
popa
fs
test
gs
and
or
push
enter
jp
jmp
shl
mov
add
movsb
jbe
enter
xor
sbb
cmp
pusha
fwait
push
cs
ficoms
popw
stos
mov
jl
cmp
pop
sbb
nop
icebp
xor
lock
sbb
pushf
xor
ret
and
insb
inc
lods
push
sbbb
and
call
aam
sub
call
dec
fcompl
in
add
mov
sub
cmp
fwait
push
jl
cwtl
int3
or
dec
icebp
clc
lret
loope
xor
jns
lcall
cli
or
lods
sbb
les
and
lea
mov
or
addr16
sub
fcomp
fwait
sbb
mov
adc
in
aas
lock
in
sub
es
jp
push
xchg
jl
and
mov
xor
jp
outsl
push
pop
out
cmpb
xchg
mov
and
xlat
lods
fs
inc
pop
sbbl
decb
or
mov
add
adc
repnz
or
cmc
mov
xchg
xchg
ret
and
inc
dec
insl
mov
dec
mov
cmp
or
lea
roll
jle
bnd
mov
stc
add
inc
mov
sbb
jb
cmc
rcrl
jecxz
inc
lods
cli
mov
std
mov
out
cwtl
enter
ljmp
push
data16
gs
leave
cli
mov
xor
cmp
push
out
repz
test
xchg
mov
cwtl
add
in
jb
mov
jp
xchg
jge
repz
clc
scas
and
mov
xlat
rcr
sub
adc
xor
fdivrl
popa
in
mov
sub
jae
cmp
lock
mov
and
dec
adc
pusha
or
push
ds
jge
ss
fmuls
js
nop
leave
test
inc
xchg
into
pushf
xchg
xchg
andb
cli
movsb
pop
nop
cld
add
aam
inc
push
and
out
cwtl
andl
sbb
sbb
lods
clc
jecxz
sahf
mov
icebp
test
imul
pop
cld
out
aam
mov
push
addl
sti
in
xchg
rcll
mov
lret
sub
add
stc
mov
push
insb
insl
inc
dec
cmp
imul
and
push
gs
jmp
xchg
movsl
ds
xor
aaa
xor
repnz
stos
jae
into
sbb
scas
movsl
or
hlt
inc
jg
and
jns
jl
int3
mov
inc
push
cmp
add
insl
mulps
or
testb
jmp
lcall
mov
jmp
or
mov
push
iret
cmp
add
mov
scas
add
cmp
sub
jo
sbb
shrb
mov
repnz
pop
stc
and
jp
pop
push
jbe
js
dec
enter
inc
xlat
jbe
insb
dec
push
xor
dec
mov
jo
frstor
mov
insb
cmp
pop
mov
stos
mov
pop
pop
xchg
scas
stos
in
div
lods
loopne
mov
fsubrl
mov
sbb
enter
push
add
popa
inc
lahf
pop
pusha
cmp
xchg
jecxz
cmpsb
mov
into
xor
jp
push
in
push
ret
add
or
dec
xchg
pop
mov
or
dec
mov
pop
insl
dec
cs
xsha1
cmpsb
lret
inc
andl
icebp
pop
ja
movsb
mov
add
dec
or
pop
loope
rcrl
frstor
dec
inc
pop
mov
dec
ss
dec
in
mov
out
cwtl
movsl
cld
push
and
repnz
mov
imul
mov
xchg
mov
cmpsb
jmp
insl
les
and
add
in
call
outsb
mov
jle
xchg
in
push
inc
enter
aaa
pop
xchg
ds
mov
outsl
and
jmp
bound
jne
aad
or
cs
outsl
lret
mov
fwait
addr16
movsl
imul
sub
enter
mov
pop
push
nop
xchg
xlat
inc
repnz
or
pop
inc
fs
mov
mov
dec
inc
sbb
aas
lods
jle
and
fcompl
mov
xchg
sbb
insl
shlb
add
cmp
out
mov
sahf
sahf
outsb
stos
ficompl
lock
push
in
xchg
xor
insl
mov
popa
xchg
mov
rcl
push
pop
ljmp
cmp
jmp
int
call
icebp
adc
jne
stos
mov
xor
fwait
cmp
notl
or
lret
fdivrs
out
idivb
jmp
xchg
pop
sbb
jae
fwait
mov
repnz
in
daa
test
or
push
test
add
pop
xor
inc
scas
pop
test
dec
adc
pop
test
dec
xchg
inc
xor
mov
mov
popf
xor
pop
mov
jmp
subb
mov
test
push
jno
or
mov
dec
or
cltd
and
lret
dec
jne
xorb
mov
jge
inc
cs
add
add
cmp
jp
lock
in
add
in
push
movsb
es
mov
lret
xchg
xor
pop
rcrb
mov
es
scas
inc
lahf
pusha
sti
push
mov
out
xchg
dec
or
pushf
mov
inc
inc
icebp
inc
iret
pop
cmp
inc
pop
inc
push
sti
cltd
lds
hlt
adc
scas
xor
xchg
je
stos
add
adc
aam
shlb
mov
out
test
cli
push
xorl
and
xchg
lret
xor
ss
inc
xchg
insb
push
mov
leave
ret
and
in
leave
lret
out
repz
leave
repnz
cmp
cmp
fmulp
adc
lock
arpl
aad
sahf
out
pop
test
imul
push
clc
rcrb
jbe,pt
mov
xchg
inc
iret
push
mov
xor
xor
movsl
jb
inc
ss
cs
rcr
fsubl
dec
push
xor
mov
movsb
cmp
adc
lret
pslld
xchg
shlb
lahf
fcomps
fwait
cwtl
les
dec
jl
mov
insl
cmpsb
lcall
or
jnp
loop
movsb
jecxz
in
sbb
xor
int
loopne
sub
or
jg
push
add
and
dec
add
add
je
sbb
push
jb
subb
insl
iret
and
dec
or
sub
xor
push
ficoms
cmp
xchg
jmp
aam
jnp
call
ret
out
and
jg
loopne
iret
pushf
dec
test
bound
inc
adc
ds
mov
lcall
xchg
imul
ss
mov
loop
in
mov
aas
js
cmovae
test
mov
in
xor
sbb
testb
jl
mov
jns
add
testl
mov
bound
int3
das
add
and
mov
add
mov
pop
in
ret
mov
repz
loopne
imul
push
jbe
into
mov
pop
jecxz
xorl
ss
inc
mov
ret
cmpl
pop
in
shll
movsb
sbb
pop
dec
cmp
mov
pusha
sbb
ja
dec
iret
cwtl
lock
ljmp
clc
stos
or
push
xor
push
frstor
adcb
push
jno
dec
movsl
test
inc
add
testl
mov
jae
in
inc
dec
pop
cld
cli
mov
popa
enter
lcall
pop
int
push
mov
inc
jmp
mov
jle
sbb
add
dec
inc
xchg
add
sub
mov
push
sub
cld
xchg
enter
in
bound
inc
dec
push
pop
mov
add
xor
or
fstpl
pusha
xchg
sub
inc
sbb
dec
cmp
xchg
adc
fbstp
pop
adc
push
cmpsb
negw
xchg
ret
adc
and
mov
idivl
and
jmp
sbb
jbe
jge
mov
loope
add
data16
mov
popa
jecxz
sub
push
mov
cltd
mov
sbbb
pop
mov
and
jns
xor
pop
or
pop
and
pushf
stos
jecxz
add
repnz
cmp
push
jle
mov
rcl
gs
icebp
mov
mov
inc
in
out
cli
shlb
mov
mov
arpl
mov
sub
xchg
dec
gs
enter
je
jo
add
sbb
test
lods
jle
popa
cltd
mov
mov
push
jg
mov
aas
ss
adc
cmp
inc
invd
gs
enter
in
mov
push
fldcw
rdpmc
lret
test
jp
aaa
lret
push
divl
inc
cmp
sub
test
jb
mov
jmp
pop
into
adc
test
add
mov
shll
jp
pmulhw
sbb
daa
ja
rorb
and
mov
inc
cmpsb
stos
xchg
outsl
mov
pop
sbb
sarb
mov
and
mov
out
decb
cmp
cmp
xor
pop
or
mov
in
pop
sbb
fucomip
lods
mov
adc
inc
or
ds
stc
mov
test
xor
popf
sti
adc
filds
insb
enter
add
cmp
xlat
lds
int
in
scas
fs
pop
mov
pop
inc
or
in
dec
mov
or
sbb
and
mov
das
imul
les
jne
jle
clc
into
inc
fistps
sbb
cmpsb
es
mov
pusha
sarl
fcomip
in
jne
push
cmp
cltd
add
ds
int3
sbb
dec
into
sarl
jle
fucomip
movsl
add
in
cmpsb
xchg
and
jns
pop
outsb
xchg
int
dec
enter
sub
xchg
cmp
add
fwait
push
jp
popf
pop
dec
movb
dec
mov
decl
pop
mov
scas
cmp
add
jnp
xor
cmc
clc
outsb
push
push
inc
or
and
mov
dec
shll
sahf
mov
xchg
pop
mov
fwait
xchg
jb
adc
in
push
sbb
xchg
outsb
pop
push
jae
ljmp
mov
jmp
out
movsb
clc
loope
push
bound
insl
mov
sub
inc
mov
pop
cmp
data16
cld
or
int3
ret
pop
cmc
cwtl
bound
scas
popf
or
call
dec
cltd
jp
mov
ds
dec
push
sbb
pop
dec
test
or
or
and
dec
or
cltd
push
mov
push
shrb
push
mov
cmpsl
fimuls
dec
adc
sub
mov
addr16
fst
rcr
shrb
shll
test
aam
test
pop
in
push
test
out
sub
dec
jnp
lret
movsl
push
pusha
adc
jmp
cmp
ficoms
outsl
cld
mov
test
nop
push
ljmp
lea
fucomi
insb
jmp
add
pusha
loop
call
loop
mov
push
mov
dec
dec
repz
mov
sbbb
out
push
pop
mov
subl
bound
andb
repnz
out
fnstcw
imul
lock
sbb
xchg
int
lock
decb
testb
roll
dec
xchg
xchg
rcrb
pop
push
jo
test
jp
movsb
inc
cmc
out
cmp
mov
cmpl
xor
out
sub
movsl
fcmovnu
xor
into
int3
adcb
adc
dec
xor
in
lods
push
jmp
inc
xor
push
mov
inc
imul
xor
lret
push
addr16
insb
push
popa
jae,pn
xchg
mov
add
insl
pop
inc
sbb
mov
lret
cltd
pushl
jmp
add
nop
add
sbbb
or
mov
testl
or
mov
test
sbb
fwait
mov
dec
push
sub
mov
jg
out
xchg
out
xor
mov
insb
pop
pop
lods
mov
inc
sti
mov
iret
fisubrl
out
push
stc
js
push
shlb
xchg
pusha
cmp
fs
gs
jno
nop
in
pop
mov
push
aam
movsl
in
test
into
stc
mov
jo
fsubrs
pop
or
inc
dec
pop
pop
jno
add
lock
mov
stos
call
stc
lods
icebp
ud2
dec
loope
mov
jb
pushf
sub
mov
jb
in
sub
push
dec
mov
jmp
test
push
mov
es
fldl
adc
sti
mov
cmp
out
aas
adc
and
push
sbb
add
jge
adc
inc
lds
stc
sbb
scas
xor
adc
sub
add
xor
sub
negl
imul
push
adc
inc
decl
jecxz
add
jge
and
clc
test
sahf
push
push
rclb
scas
and
out
stc
mov
pop
fld
dec
loopne
jb
data16
xchg
or
and
push
adc
inc
jmp
scas
jne
es
cmpsb
and
or
stos
jmp
shll
fisttps
mov
sub
fisttpl
pushf
shr
sub
adc
repz
es
fadd
imul
mov
inc
test
jno
addb
rclb
data16
lcall
scas
idivl
out
xor
dec
inc
jnp
adc
sbbb
push
mull
outsl
pop
ret
icebp
lods
hlt
and
and
subb
mov
or
inc
pusha
test
or
xor
xchg
in
inc
jae
jo
pop
dec
loope
inc
and
loope
push
daa
dec
adc
sub
xor
push
jo
out
inc
jle
dec
cltd
lret
xchg
jg
add
sbb
xchg
cmpsb
xor
bound
mov
or
lds
adc
inc
or
rcrb
push
adc
cld
mov
sarl
pop
xchg
addl
jno
lahf
mov
inc
push
leave
dec
jne
ljmp
roll
cmove
hlt
testl
jge
add
mov
mov
inc
push
fbstp
insb
pop
scas
push
out
pop
push
push
test
arpl
sub
rcrb
mov
push
hlt
loopne
dec
in
pop
sub
push
jne
add
jo
sub
stc
je
addl
xchg
cs
cmc
push
aam
popf
sub
sarl
cmp
push
rol
jno
add
lods
mov
or
pop
mov
pop
push
pusha
mov
pop
jnp
sub
and
std
divb
testb
push
out
inc
loope
mov
daa
lods
test
or
das
mov
call
xlat
add
and
addr16
aad
int
jecxz
shll
cmp
shl
pop
repnz
push
cmc
cmp
outsl
or
jle
cwtl
vmwrite
scas
test
stos
mov
adc
and
mov
mov
mov
in
pop
das
and
pop
repnz
jp
icebp
mov
cmp
je
jmp
lds
mov
fldenv
clc
xchg
subb
add
fisubrl
fs
sbb
pop
sub
xlat
ret
cli
jg
xchg
negb
rorl
aaa
scas
test
leave
sub
jno
add
or
push
sub
cmpsl
out
mov
inc
or
fldz
ret
push
mov
jae
xchg
adc
insb
adc
sub
cmp
sahf
imul
call
xor
or
lret
jne
or
mov
mov
clc
rcrl
aad
sbb
sbb
sbb
test
loop
pop
aas
dec
pop
jb
iret
and
fcom
and
dec
or
xor
scas
or
sahf
xchg
jecxz
jbe
mov
mov
mov
inc
lods
insb
sub
pop
mov
sub
inc
dec
add
xor
inc
aas
push
dec
jmp
push
mov
dec
sbb
mov
int3
pop
sti
ja
out
ja
adc
push
lahf
cmp
jns
xor
int
cmp
mov
cld
mov
cmp
inc
and
in
sub
adc
andl
daa
fcompl
shl
int
inc
pushf
in
cltd
mov
movsl
push
mov
sub
jns
xor
sub
xchg
rorb
pop
les
lea
cmp
jb
and
stc
and
lret
mov
cli
in
xchg
mov
pop
jmp
daa
mov
loop
aam
jmp
adc
xlat
adc
lods
outsl
ret
pop
xchg
scas
rcrl
rol
add
add
bound
sti
mov
mov
imul
mov
xchg
mov
es
pop
mov
dec
movsb
movsb
sbb
xor
mov
or
inc
fcomps
pop
pusha
int
fs
mov
pop
jae
stos
or
sub
pushf
push
orb
das
cmp
dec
iret
mov
movsb
jg
mov
pop
push
call
inc
push
xor
push
cmpsl
jnp
fmull
mov
aam
add
outsl
popa
dec
shrb
mov
aas
mov
dec
icebp
inc
arpl
clc
xor
test
scas
popa
push
orl
sub
add
out
arpl
adc
pop
test
xchg
jge
aaa
xchg
mov
mov
scas
js
mov
movsl
xor
xchg
push
xchg
out
test
mov
xchg
mov
xchg
test
lcall
out
rcrl
jnp
inc
xor
and
outsl
pop
mov
test
cmpsl
push
jb
std
stos
xchg
mov
adc
mov
icebp
jg
ljmp
or
fldt
mov
lods
scas
bswap
inc
pop
push
push
mov
shlb
in
cltd
mov
roll
mov
and
lret
pop
repnz
pop
movsb
fistpl
sbb
jg
xor
xchg
or
daa
popa
bound
jecxz,pt
sub
cli
dec
fimull
stos
jae
xorb
call
aad
popf
cmp
ja
mov
push
mov
mov
pop
push
cwtl
repz
mov
pushf
xor
push
ljmp
pop
cmp
cmp
rolb
sub
adc
in
repnz
push
xchg
pop
dec
hlt
fadds
aad
push
mov
adc
es
sub
jg
mov
sbb
jmp
inc
and
out
dec
cmp
movsb
fsubrs
fs
out
adc
ss
adc
rcrl
mov
sub
sub
adc
iret
add
mov
outsl
pop
shll
jo
jle
sub
xor
inc
dec
test
or
rcrl
insl
ss
int
popf
sub
mov
or
add
cli
cmpsl
je
dec
or
pop
pusha
cmp
scas
fcmove
jecxz
dec
jbe
sar
jl
add
fcmovnu
adc
jnp
dec
pop
lock
movsl
lret
stc
push
pop
roll
mov
sahf
aaa
in
scas
mov
inc
and
or
ds
pop
push
cmp
mov
sbb
jl
xchg
dec
or
jl
xlat
jae
aaa
sahf
lret
jg
sbb
icebp
mov
rolb
shrl
out
ja
cwtl
hlt
adc
dec
push
sub
icebp
xor
nop
pushf
stos
sub
and
dec
test
xchg
xor
pop
jb
xchg
fimuls
sbb
test
cmpl
xor
aam
insl
xchg
push
test
in
stc
arpl
jmp
in
sub
andl
test
add
add
push
and
outsb
sbb
test
cmp
in
inc
movsb
roll
cwtl
aad
cmp
insb
jnp
xchg
pusha
xor
jnp
cmpsl
pop
push
outsl
bound
dec
inc
xchg
mov
mov
test
pop
pop
mov
setle
lods
adc
and
push
inc
jbe
mov
out
addr16
xchg
loope
dec
push
sarb
fwait
test
xor
shr
inc
icebp
stos
mov
or
adc
sbb
test
leave
mov
sbb
bound
push
rep
jae
mov
mov
shl
aam
sbb
call
lret
or
aad
and
dec
lahf
pop
lea
in
xor
hlt
lock
adc
scas
fsub
xchg
dec
jg
push
cs
inc
fs
psubd
stc
lret
inc
popf
insb
dec
inc
mov
ffree
test
push
and
mov
iret
loopne
sub
dec
mov
add
and
pop
fs
xchg
jb
xchg
mov
push
add
lea
xchg
add
jnp
jge
cs
sub
sub
cmc
cmp
mov
inc
push
or
gs
stos
in
gs
mov
outsl
push
hlt
push
pop
rorl
fimull
int3
loopne
adc
je
lahf
mov
push
sub
aas
xchg
mov
test
test
and
les
mov
adc
xlat
aaa
call
cmp
push
cmpsl
mov
inc
scas
mov
fildll
gs
imul
cmp
nop
cwtl
pop
push
ficoml
xchg
dec
loop
stos
ret
stos
xor
jg
fistl
push
cmp
call
lock
pushf
push
mov
or
mov
and
and
les
in
insb
push
hlt
sbb
orl
cmp
inc
aad
dec
das
adc
sub
imul
jle
scas
sar
dec
xchg
dec
inc
inc
mov
stos
mov
es
inc
jae
adc
imulb
js
jp
ret
cmp
lea
push
sbb
sahf
or
xchg
leave
or
aad
call
mov
dec
fbld
sbb
sub
push
mov
lods
add
mov
inc
push
and
cmp
or
xchg
xchg
sahf
mov
xchg
or
jl
dec
popf
mov
pop
adc
bound
mov
ficomps
jb
cmp
lods
movsl
sbb
mov
or
add
push
arpl
mov
stc
sahf
jmp
popf
aaa
mov
push
xlat
lret
dec
mov
inc
enter
negl
inc
shl
pop
xor
jle
dec
gs
add
out
xor
loop
lahf
mov
cltd
adc
xchg
dec
in
pusha
cltd
push
cmp
xchg
xor
and
add
mov
push
adc
sbb
jns
mov
daa
into
aas
cli
inc
sub
jmp
popa
or
mov
sbb
repz
sbb
pop
mov
xchg
imul
and
daa
jg
mov
and
popa
xchg
pop
stos
pop
sarb
fsubrl
rorl
in
mov
ja
hlt
mull
fisttpl
enter
jp
je
call
xor
test
mov
insl
xchg
ljmp
mov
out
sub
push
xchg
adc
xlat
sahf
cltd
outsb
flds
sbb
adc
test
test
jecxz
outsl
leave
lcall
mov
xchg
insb
xor
pop
add
lea
adc
xlat
mov
add
xor
mov
jl
rcrb
loop
arpl
or
outsb
xlat
push
and
xchg
adc
add
sti
jmp
arpl
stos
or
xor
push
pusha
mov
test
clc
inc
out
push
cmp
xchg
and
or
pop
add
sub
loope
inc
decb
mov
jo
push
mov
addr16
jns
sbb
in
sbb
ret
pop
jbe
mov
ret
repnz
cmp
cmp
call
sahf
jo
lret
sar
and
adc
imul
mov
cli
or
sub
and
xchg
jnp
pop
mov
mov
xor
popl
xor
xchg
movsb
sub
add
mov
shrl
dec
jae
aas
mov
data16
mov
inc
add
mov
dec
sbb
pop
jnp
push
mov
in
cmp
es
pop
xchg
push
push
jg
adc
ljmp
cmp
ror
popf
adc
or
or
fcomi
cmp
mov
push
ret
sbb
stos
pop
or
or
jae
xchg
popa
inc
fnstsw
lahf
jbe
mov
rclb
push
into
mov
es
adc
push
std
mov
rolb
lret
sarl
mov
nop
roll
sub
mov
add
pop
add
jp
lcall
das
out
mov
sbb
xchg
cltd
mov
in
lds
and
loopne
dec
jbe
pop
dec
shlb
loope
cmc
gs
mov
test
sub
pop
xchg
and
jbe
shlb
iret
movsl
repz
dec
and
push
pop
sub
or
jge
mov
mov
scas
fists
ljmp
cmovg
or
and
cmp
push
outsl
mov
mov
lahf
fistps
push
mov
das
stc
stos
pushf
mov
iret
xor
push
das
jne
rcrb
lahf
cltd
pop
mov
mov
xchg
inc
mov
sti
ss
mov
popa
adcl
add
mov
iret
jmp
lret
ficoms
stos
adc
cli
sbb
adc
mov
push
mov
stos
jbe
loope
pop
jge
pop
cli
out
push
lock
xor
push
inc
jmp
xor
in
add
nop
inc
aad
movsl
mov
xchg
hlt
xchg
sbb
sti
test
imul
aam
es
lcall
sub
add
jno
sub
sbb
cmp
outsl
popa
loopne
add
dec
add
push
popa
sub
divb
scas
sbb
mov
stos
sbbl
ss
xor
mov
dec
mov
roll
fs
mov
cmp
add
cwtl
cmovae
inc
shll
mov
jl
ret
jno
xchg
movsb
mov
or
test
cmp
dec
outsl
in
pusha
nop
dec
outsl
xlat
clc
sbb
in
adc
stc
in
xor
jae
shrl
adc
add
decl
test
es
adc
bound
stos
pushf
imul
dec
or
into
mov
jno
data16
fistps
mov
fwait
adc
adc
jo
lods
addr16
into
data16
push
divb
std
jge
add
idivl
lret
inc
hlt
out
or
adc
addr16
ret
inc
and
lahf
pop
hlt
sub
jp
icebp
jge
xor
iret
mov
or
push
outsb
xchg
sbb
sub
pushf
jg
xchg
jae
cmp
fwait
lock
out
xchg
mov
pop
xchg
mov
jp
cld
jo
sti
pop
add
ret
adc
sbb
cmpsb
xchg
jle
mov
lcall
sbb
popa
xlat
in
ja
pop
int
inc
add
outsl
test
cmp
or
or
cli
mov
fstpt
jl
push
lret
test
fcomi
stos
add
jecxz
rcll
lret
comiss
dec
dec
insb
jg
lods
inc
xlat
dec
pop
cwtl
in
xchg
push
and
loop
sbb
fmull
add
inc
sub
mov
or
movsl
cltd
push
fistps
cltd
xor
iret
test
dec
dec
sub
inc
or
push
jno
cld
inc
lret
cs
cmpsl
adc
inc
fcomps
aam
cld
xor
cmpsl
mov
movsb
and
push
repz
mov
ss
push
cmp
xorb
inc
mov
lret
or
ret
mov
aad
inc
into
sub
lret
in
into
aas
jge
hlt
popa
movsb
iret
pop
xlat
repnz
fsubrl
jns
mov
pop
outsb
or
push
mov
dec
fs
pop
jp
enter
orl
shll
xor
rcrb
mov
bound
mov
bound
test
sub
pushf
les
add
testb
call
jb
lock
cmp
movsl
leave
mov
push
in
movsb
push
mov
repz
mov
mov
jnp
outsb
and
xchg
add
fwait
inc
and
cmc
jnp
xchg
outsl
mov
sub
lcall
sti
test
int
dec
pusha
negb
sahf
iret
mov
in
int
or
nop
adc
std
scas
cwtl
mov
jo
xchg
push
mov
enter
addr16
push
scas
lods
sub
lock
xor
sbb
add
dec
jo
cltd
xor
in
jle
jae
inc
sub
rcll
cwtl
fwait
js
push
sub
inc
fcompl
mov
pop
in
out
rcll
xor
mov
jb
jne
addr16
out
test
mov
xchg
xchg
jg
sub
pop
ret
shlb
iret
jp
movsl
lods
jge
xlat
dec
lret
inc
in
faddl
mov
xchg
sahf
mov
lods
cmp
movsl
jmp
sub
repnz
mov
sub
xchg
mov
sbb
fsts
sub
inc
inc
insl
insb
call
pusha
movsl
xchg
insl
mov
pop
push
arpl
pop
mov
dec
in
or
dec
loope
add
scas
mov
jp
mov
std
daa
lcall
add
testb
call
jb
cmp
inc
cltd
adc
test
sbb
ds
pop
dec
fidivrs
ds
or
inc
bound
dec
xchg
cmpsl
add
outsl
adc
inc
das
lret
inc
inc
add
iret
cmpsb
cmc
sarl
stos
lcall
push
js
xchg
cmp
roll
out
shll
inc
mov
imul
adcl
add
dec
fdivrl
jmp
mov
and
mov
dec
test
dec
add
fcomi
sub
and
das
cmp
enter
adc
mov
pop
sbb
dec
xchg
addl
jg
bound
mov
pop
jl
pop
jbe
ds
push
adc
jmp
ss
das
in
pop
fnstenv
out
loop
mov
adc
es
jne
mov
adcl
cs
pop
call
push
mov
je
outsl
xor
cmpsb
stc
mov
or
les
inc
fwait
aam
mov
pop
movsb
fisubl
mov
gs
cld
lahf
loop
xchg
mov
inc
dec
rol
lods
divb
arpl
mov
cs
pop
call
adc
pop
xorb
insb
scas
sbb
js
std
loopne
ljmp
jle
or
push
pop
mov
cmp
sbb
sub
or
inc
subb
inc
lret
jle
lods
insl
lods
cld
pop
xchg
lea
call
out
arpl
mov
jp
push
in
dec
ds
loopne
sbb
in
xchg
mov
jbe
movsl
jbe
testb
ds
fiadds
lcall
ja
ljmp
mov
push
clc
mov
repz
and
mov
fisttps
decl
js
into
sub
add
jge
add
sbb
push
sti
pop
xor
cwtl
sub
jnp
jns
pop
and
cltd
jns
std
xor
pop
fdiv
movsl
push
cld
mov
movsb
push
fcompl
pop
and
das
loop
notb
mov
mov
inc
xchg
inc
push
xchg
ret
pop
pushf
dec
fldl
std
popa
inc
mov
lret
jbe
cmp
fwait
pop
repz
push
inc
xchg
js
jne
inc
andb
adc
aas
inc
sub
and
stc
dec
sbb
sbb
aam
dec
mov
insl
mov
pop
aad
out
lock
dec
pop
stc
imul
cwtl
mov
pop
pushf
bnd
movsl
dec
gs
mov
mov
insb
cmp
jnp
inc
lret
aam
xor
outsb
popa
sbbl
and
lods
in
gs
idiv
imul
lea
mov
shrb
sbb
and
cmp
roll
popf
sarb
push
push
mov
pop
in
or
cmp
inc
pop
or
popa
cmpsb
lcall
add
cmp
sbb
fistl
inc
movsb
mov
sbb
inc
scas
mov
mov
xchg
dec
faddl
pop
jns
imul
fs
inc
cli
jno
aam
test
xor
movsl
das
sahf
and
mov
adc
xor
jno
daa
data16
mov
mov
push
je
into
sbb
push
sub
xor
in
sbb
loope
roll
jbe
lret
dec
imul
das
sbb
fildll
imul
jnp
sbbl
jo
push
push
xchg
mov
mov
push
or
cs
icebp
imul
gs
inc
aad
in
xchg
lret
add
mov
xor
mulb
mov
fs
inc
adc
mov
add
sub
cs
pusha
inc
movsb
mov
aaa
mov
and
mov
pop
js
ret
xor
frstor
xchg
push
mov
and
add
jb
mov
push
mov
mov
out
fcmovb
push
lret
sub
test
lret
out
pop
sbb
pop
movd
fnstcw
roll
mov
aas
hlt
jb
fcomps
or
stos
jnp
dec
test
sahf
orps
mov
cmp
scas
mov
sub
lods
insb
and
xor
pop
stc
adc
nop
xchg
jp
lods
sbb
pop
sahf
adc
mov
lahf
movsb
add
cmp
jg
mov
sti
inc
insb
daa
mov
pushf
fs
push
fwait
mov
or
inc
xchg
inc
fldenv
imul
xchg
jmp
fwait
xchg
mov
repnz
sahf
mov
ffree
mov
sub
call
cld
addr16
stos
mov
and
popf
dec
movsl
clc
in
fucomi
ljmp
aam
xlat
std
push
mov
mov
cwtl
push
outsl
jg
push
les
and
bnd
adc
mov
push
dec
mov
mov
mov
and
mov
testb
add
mov
push
lahf
mov
and
loopne
lea
pop
aaa
mov
aad
xor
popf
mov
cmp
cmc
subl
and
push
xchg
adc
mov
enter
dec
lods
in
sbb
inc
xor
jp
subl
icebp
xchg
xchg
fs
push
push
aam
mov
mov
bound
xor
out
mov
and
push
insb
imul
test
arpl
mov
push
stos
arpl
cmp
cmp
dec
addr16
or
and
push
dec
add
dec
xorl
mov
mov
push
fildl
cmp
sbb
fbld
push
mov
fadd
add
lods
negb
int3
push
jmp
jns
out
cmc
fnstcw
sub
adc
icebp
mov
imul
sub
xchg
icebp
nop
mov
cmpsb
orb
mov
test
or
pop
cwtl
out
mov
sbb
mov
mov
cmp
testb
adc
out
dec
jno
add
ljmp
dec
or
das
rorl
test
inc
pop
fsubrl
aaa
insl
mov
sahf
mov
xchg
mov
and
loope
es
inc
mov
xor
das
rcrl
aam
clc
in
je
fadds
pop
push
ffree
mov
xchg
push
or
lret
mov
rcr
mov
pop
mov
arpl
rcll
xor
mov
mov
adc
cmp
sbb
enter
out
dec
scas
mov
pop
stc
jno
mov
aas
aad
cmp
jno
xchg
sahf
sub
bound
sahf
sub
sbb
jge
sub
dec
insl
lds
neg
inc
xchg
out
mov
cmp
mov
cmpsb
pop
inc
in
pop
inc
lods
arpl
stos
cmpsb
loop
stos
fcmovnbe
js
push
bound
push
jo
cmpsb
add
sub
icebp
leave
jl
test
movsl
loop
sbbl
xor
rclb
mov
pop
or
and
fists
jle
aaa
inc
int
leave
dec
push
sbb
inc
mov
aas
pop
js
jae
andl
lock
jp
cli
sbb
add
push
push
sbb
out
rcrl
jmp
pop
sahf
fadd
fildll
xlat
mov
cmp
out
push
mov
daa
call
mov
or
or
mov
mov
scas
into
addr16
add
cmpl
lock
cmpl
add
xchg
sbb
pushf
inc
push
jbe
xchg
lret
adc
add
dec
add
cmpb
stos
jecxz
sarl
lret
jle
add
add
xchg
aam
lret
in
sahf
xchg
mov
inc
lods
loop
aad
mov
jge
xchg
jmp
adc
lret
rcrl
ljmp
jg
ss
add
mov
inc
and
scas
hlt
pop
dec
mov
ret
adc
lcall
aas
mov
xor
push
lods
lods
or
cmp
adc
testb
lcall
arpl
xlat
or
cmpsl
js
rcr
mov
sub
icebp
jg
loop
mov
push
adc
lods
or
fst
mov
cs
into
xlat
mov
or
add
mov
daa
push
imul
mov
push
mov
cmp
sbb
jnp
movsl
lret
cs
and
bound
ljmp
or
adc
mov
sahf
and
xor
gs
mov
adc
sub
js
jecxz
xchg
xor
rep
test
sub
xor
mov
cmp
add
pop
sbb
lods
dec
aaa
movsb
dec
push
jle
mov
stc
es
inc
stos
xchg
fimull
cwtl
pop
cmp
sti
adcl
push
cmpb
and
add
and
mov
jne
push
or
stc
jo
int3
lock
jp
jnp
pusha
xchg
iret
outsb
xchg
arpl
addl
adc
cli
cmp
sbb
and
out
xor
shlb
rcrb
in
jno
jp
mov
es
mov
push
mov
aas
mov
sub
push
mov
out
mov
es
add
xor
xor
push
cmpsl
and
sbb
je
push
scas
jns
xchg
rcrb
push
ret
dec
jle
jbe
movsl
mov
mov
fistpll
xchg
daa
mov
pusha
adc
mov
mov
shl
test
push
xchg
enter
push
or
inc
pop
movsb
gs
shl
sub
lods
sbb
xor
lods
subl
pop
push
rclb
sub
cmp
and
lret
fwait
jecxz
outsl
xor
leave
mov
adc
hlt
mov
lret
mov
hlt
mov
cmpsb
ret
dec
xor
push
sub
jle
ret
jbe
call
dec
push
imul
inc
adc
lods
leave
scas
mov
dec
pusha
inc
push
incb
xlat
test
aaa
cmp
loop
sahf
outsl
sbb
aad
add
jnp
stc
stc
cltd
fisubs
nop
jecxz
mov
dec
dec
jae
lods
add
jnp
push
jns
out
inc
jmp
sbb
xchg
je
pop
stos
popf
aas
fcmovu
js
jo
sub
lcall
popf
mov
fstpl
cmpsl
fadds
dec
mov
pop
sub
xchg
dec
daa
sbb
add
cwtl
lea
jl
dec
mov
push
cmp
lret
jno
das
cli
es
inc
jp
or
outsl
out
fcmovu
mov
int3
pop
insb
lret
mov
cmp
lods
fwait
pause
in
imul
inc
jb
hlt
test
fiaddl
fwait
sub
in
popf
cmpsl
scas
fisttpll
loop
in
test
cmp
jns
jg
xchg
orb
pop
pop
inc
scas
mov
jno
ljmp
out
dec
cld
bound
and
xchg
ljmp
std
or
popf
cmpsl
jp
je
lods
xchg
dec
sbbb
mov
mov
push
aaa
outsl
sub
and
cmp
aas
icebp
mov
push
mov
scas
movsb
ret
vpsrlw
push
cmpb
inc
adc
gs
ja
leave
sbb
cmp
cwtl
pop
sti
je
cmp
lcall
stos
mov
lods
jg
sarb
pushf
aas
mov
out
jb
or
cltd
test
dec
dec
mov
int
sub
push
sub
sub
cmpsb
scas
loop
icebp
jmp
adc
nop
ror
in
jle
xor
lahf
push
ljmp
push
scas
mov
je
fwait
lahf
or
rcrb
inc
and
cmpsb
push
icebp
mov
stos
push
add
fisttpll
dec
mov
loop
pop
mov
sub
sbb
cmc
or
out
and
into
push
push
addl
mov
lods
xchg
dec
jge
mov
mov
and
sbb
dec
push
mov
pop
sub
inc
dec
lret
imul
loop
aam
pushf
cmc
jp
loopne
ljmp
sub
xlat
imul
jecxz
cmpb
mov
ljmp
pop
cld
pop
fnsave
ljmp
rclb
cs
mov
and
cmp
rcll
outsb
mov
mov
or
pop
mov
in
adc
aam
xchg
jl
hlt
or
sti
inc
jo
repz
rolb
testl
pop
adc
lods
mov
call
xor
xchg
in
mov
pop
lods
movsl
dec
mov
aad
jo
push
cmp
jl
sub
pop
add
in
fnstenv
push
movsl
fs
or
or
ljmp
pop
mov
sub
aam
incb
sbb
mov
sbb
pop
insl
arpl
aam
mov
rolb
clc
and
out
dec
dec
in
enter
outsl
shl
scas
add
stos
or
cs
jns
mov
xchg
add
or
mov
es
xchg
out
mov
filds
arpl
hlt
push
flds
loopne
mov
push
les
pop
add
mov
fnstenv
dec
cltd
mov
shll
pop
xchg
jbe
lea
stos
jns
mov
fbld
or
lock
mov
mov
jae
pop
jl
movsb
adc
mov
mov
scas
enter
out
ljmp
lock
pop
inc
jo
movsb
and
rcll
hlt
dec
mov
push
divl
jno
shrb
aad
les
and
movsl
fsub
lods
adc
adc
adc
xchg
idivb
nop
xlat
jl
idiv
push
or
sbb
add
imul
cmc
push
js
add
mov
inc
add
jo
insb
and
xor
and
jecxz
jecxz
xor
push
adc
jbe
mov
mov
inc
fiadds
shr
xchg
loop
outsl
repz
adc
adc
data16
mov
imul
cmpsl
inc
mov
sahf
and
xchg
jno
jp
mov
adc
mov
push
pop
pop
popf
aam
mov
mov
enter
inc
ja
in
mov
scas
test
lret
test
xor
mov
mov
ret
jl
xor
jns
pop
xor
pushf
inc
mov
sarl
enter
fiadds
mov
pop
mov
popa
pop
adc
inc
xchg
aad
iret
and
mov
ret
in
sub
push
icebp
inc
lods
xor
in
insb
cmp
fstpt
mov
popf
mov
mov
sbb
into
cltd
sahf
scas
pop
hlt
jne
ja
idivb
lods
xor
sti
dec
mov
pop
jb
lcall
loopne
outsl
movsb
cs
lcall
xchg
insl
lcall
mov
enter
scas
jns
arpl
xorb
jecxz
aad
mov
scas
cmc
mov
push
mov
and
ficoms
fucom
dec
ljmp
push
dec
in
shrl
lahf
inc
repz
jmp
daa
xchg
leave
sti
sbb
sbb
out
enter
test
add
sbb
out
iret
add
lahf
ficomps
sub
mov
std
mov
adc
ja
push
mov
xor
push
or
or
in
cmc
xchg
repz
movsb
lods
cmp
jo
mov
or
sbb
mov
enter
jge
lret
add
mov
lods
mov
push
mov
mov
fs
push
mov
les
adc
mov
loope
dec
lret
mov
xchg
out
mov
daa
mov
inc
cmp
imul
and
roll
jbe
sbb
clc
inc
incl
jns
dec
pusha
enter
cmp
mov
fwait
or
mov
dec
sbb
and
sub
and
fstps
hlt
in
cmp
dec
xor
loopne
jno
adc
inc
adc
mov
cld
jno
pop
dec
test
dec
lock
addr16
mov
dec
dec
into
dec
xorl
jp
pop
in
test
mov
jg
mov
push
mov
std
loopne
mov
int3
movsl
dec
adc
push
or
dec
jae
out
xchg
and
aas
ljmp
sbb
dec
clc
fidivrl
push
mov
loopne
or
sar
aad
cmp
ds
lock
loop
gs
mov
fmuls
sub
insb
les
mov
pop
roll
mov
gs
mov
mov
ret
fimuls
and
or
fadds
xchg
rcrb
mov
or
push
outsl
xchg
gs
mov
or
xchg
stos
adc
xchg
hlt
xor
inc
fs
xchg
insb
les
mov
pop
mov
lods
scas
inc
repnz
xor
mov
rolb
roll
dec
js
cmc
mov
adc
data16
aam
cmp
lcall
jnp
subb
add
aad
cmp
leave
jecxz
pop
sbb
dec
push
inc
cmp
mov
pop
in
or
mov
push
xor
in
test
mov
dec
or
out
divl
or
pop
cwtl
insb
pop
cmc
push
in
lods
sbb
imul
xchg
daa
insb
sub
adc
sahf
bnd
fsubr
push
add
jmp
insb
pop
jo
movsl
mov
stos
hlt
lahf
in
test
xchg
int
jge
inc
clc
fsts
insb
or
pusha
out
push
add
jmp
fstl
mov
aaa
lods
inc
jb
imul
cs
push
mov
das
jmp
mov
inc
subl
pop
aaa
sbb
xor
push
out
push
add
jmp
mov
mov
into
adc
mov
sbb
lds
sbb
add
lods
pop
or
ja
movsb
mov
in
out
and
std
mov
pusha
inc
and
pop
push
imul
push
arpl
cmp
xchg
pushf
mov
sahf
decl
aam
dec
mov
mov
rorl
cmpsl
inc
jge
aam
loope
push
add
gs
xor
fidivl
hlt
je
sub
or
and
loopne
add
test
testb
sbb
jbe
dec
gs
shrb
dec
and
add
adc
push
push
add
and
clc
xchg
mov
inc
fisttpl
rcrb
xchg
daa
outsb
mov
jge
cmp
sbb
xchg
imul
sbb
jmp
add
sub
add
std
pop
std
pop
push
stc
xor
movsb
sbb
pop
imul
mov
scas
fstpl
lds
in
outsb
bnd
pop
adcl
arpl
xor
mov
fwait
scas
lcall
push
sti
loop
loopne
mov
lcall
jno
imul
call
jne
jg
nop
iret
in
inc
out
adc
pop
hlt
or
push
data16
xchg
mov
popa
repnz
daa
lds
mov
fwait
scas
lcall
addr16
fisttpl
ffreep
inc
loopne
lea
xor
bound
repnz
in
mov
cmpsb
cltd
test
and
mov
add
inc
and
outsl
adc
jg
test
jle
out
cmp
out
cmp
and
int
lret
jge
fistpll
push
aam
loop
push
pusha
xchg
loop
inc
mov
lea
pop
ret
cmp
test
pop
mov
jg
das
pop
cmp
test
daa
fisttps
xchg
inc
mov
jnp
mov
and
push
clc
ret
inc
push
xchg
add
sti
lcall
mov
mov
inc
mov
in
movsl
jge,pn
test
out
clc
pop
into
inc
lea
mov
out
mov
int3
inc
adc
fcomps
icebp
adc
sbbl
mov
ret
in
cmc
nop
xchg
les
lcall
mov
push
sub
sbb
and
repnz
jb
sbb
sub
cmpb
cli
mov
je
test
loope
ficoms
xchg
inc
or
test
cs
fsubl
adc
pop
lock
ds
inc
insb
pop
xchg
pop
shll
push
xchg
ficoml
add
mov
mov
pop
es
sti
adc
dec
cwtl
into
jo
loopne
adc
or
add
cmp
pusha
mov
cmp
xor
enter
addr16
pop
mov
xchg
jnp
xchg
test
stos
insl
das
aam
bound
add
sbb
xchg
rorl
add
in
pop
in
mov
xor
cmp
pushf
xchg
push
and
scas
and
mov
push
std
adc
push
into
pusha
pop
bound
inc
fdivrl
std
jmp
cmpsb
mov
cld
add
inc
out
loope
imul
test
pop
fdivl
pop
pop
loop
push
adc
imul
or
ret
shr
rclb
or
out
sbb
test
fs
call
loopne
out
xor
out
and
add
mov
sti
sub
and
repz
sti
sti
mov
pushf
insb
pop
cmpsl
pop
mov
and
jae
or
ficomps
jg
xor
cmc
pop
arpl
cmp
and
add
adc
leave
cmp
fstl
test
and
outsl
dec
and
push
imul
xor
push
mov
fwait
dec
test
jge
das
dec
inc
mov
fnstsw
test
adc
ljmp
mov
lea
jno
decl
or
add
decb
dec
push
push
sub
popf
mov
pop
in
pop
dec
psadbw
push
movsb
lods
adc
inc
jb
icebp
insl
jg
icebp
sbb
cmp
push
jno
xchg
sub
sbb
shll
cs
ljmp
std
mov
jg
mov
ljmp
ret
rcrb
arpl
xor
push
dec
jg
test
ss
cld
dec
or
sbb
scas
mov
jnp
aam
adc
fadd
in
jae
pop
aam
sbb
roll
sar
incb
test
adc
xor
mov
mov
inc
mov
fld
cmp
adc
inc
imul
loopne
test
mov
aaa
pushf
add
fldenv
and
mov
mov
mov
xor
xchg
xor
xchg
inc
mov
dec
das
jne
lcall
out
ljmp
pop
cwtl
inc
int
adc
push
inc
int
cmpsb
test
mov
cmp
and
cmpsl
xor
pop
movsb
xor
dec
gs
popa
mov
iret
jecxz
repnz
mov
test
cmpsl
sub
mov
inc
push
data16
fistps
xor
dec
gs
popa
mov
sbb
in
push
inc
push
pop
mov
pop
push
mov
xchg
push
imul
jmp
xor
call
and
add
xor
mov
push
leave
sahf
in
pop
pop
xchg
adc
out
push
or
mov
shrb
mov
inc
data16
sub
stos
repnz
lods
call
cli
fmuls
dec
push
push
jecxz
add
in
adc
test
mov
lock
ret
mov
dec
incb
or
inc
sub
pop
repnz
adc
out
xchg
pop
xchg
push
push
inc
mov
push
jns
push
movsb
call
mov
xchg
sbb
jge
pusha
xor
add
mov
stos
jl
loope
jne
mov
sarb
sub
iret
out
pop
cmc
dec
aad
pop
ja
scas
in
push
adc
out
dec
mov
inc
cmp
stc
mov
xchg
mov
inc
lcall
insl
cmp
pusha
pop
or
pusha
mull
dec
movb
bound
in
popf
lahf
stc
inc
xchg
inc
int
mov
mov
loop
add
outsl
mov
lahf
movsl
push
jp
ljmp
push
popf
xchg
sbb
jmp
rcr
jg
or
or
repz
ss
pop
push
push
xor
cli
into
mov
sub
fstl
add
mov
dec
lret
jnp
pop
stc
sub
aad
and
lods
pop
mov
mov
es
test
lret
icebp
xorl
adc
add
es
fstpt
cmpsb
or
dec
mov
xor
pop
je
into
xchg
cmp
ljmp
sbb
outsl
fisttpl
push
mov
push
xlat
scas
sbb
pop
and
sbb
push
scas
or
daa
ja
lahf
cmp
add
sub
mov
pop
movsb
mov
scas
mov
jmp
or
and
xchg
dec
xor
jge
adc
mov
es
outsl
dec
mov
cld
mov
xlat
mov
cmp
inc
push
test
hlt
test
int3
inc
add
push
and
jns
mov
lea
outsb
cmp
pushf
cmpsb
addr16
data16
addb
gs
and
and
add
push
lcall
cmp
bound
add
loop
lods
inc
ja
mov
popa
or
mov
lcall
mov
jns
xchg
je
loope
leave
pop
sbb
loopne
push
inc
xchg
jecxz
jmp
outsl
jno
mov
ss
push
mov
mov
dec
jecxz
push
jle
in
inc
mov
mov
shl
jno
es
mov
fsubl
adc
sbb
mov
jge
scas
test
push
orb
jae
mov
inc
out
pusha
cmp
aas
add
or
pusha
dec
pop
mov
mov
and
xchg
sbb
sahf
je
cmpsl
adc
mov
ljmp
jle
add
daa
popf
jne
fwait
sub
cmp
inc
sub
lods
add
cmpsl
sti
cmpsb
or
add
inc
test
push
push
lret
adc
loop
add
iret
sti
ret
outsb
add
jecxz
inc
data16
dec
repnz
roll
jae
jg
inc
js
push
cmp
jno
test
mov
push
sbb
es
pop
mov
fcmovnu
mov
mov
test
sbb
push
fcoms
fsubrp
sbb
sub
jnp
cld
movsb
mov
sub
mov
hlt
aam
inc
inc
xchg
inc
popf
xor
iret
nop
iret
leave
stos
cli
leave
cmp
out
ja
inc
xor
or
pop
leave
push
jmp
push
fisubrl
pusha
das
and
mov
mov
cmp
sub
mov
repz
nop
mov
or
imul
pop
stc
xchg
mov
inc
mov
cmp
xchg
call
shll
jno
mov
mov
ret
fisubs
lea
mov
cs
movsb
jmp
mov
mov
pop
out
loope
or
jnp
sub
jg
jnp
push
mov
add
cmpsl
jmp
push
inc
pop
sbb
hlt
nop
fildl
les
idivl
repnz
mov
call
jmp
add
dec
sub
call
mov
cs
jno
aad
cmc
cltd
faddl
adc
xor
cmp
jle
les
xchg
or
mov
das
int
dec
popf
push
icebp
push
leave
sahf
leave
fistl
hlt
and
vcvtsd2ss
mov
stos
fadd
jecxz
les
arpl
shr
inc
aad
fiaddl
fdivl
cmp
aas
rorl
lock
fstpl
clc
mov
dec
push
cmp
xchg
mov
jp
cld
jo
out
or
sub
hlt
sub
clc
mov
shll
lcall
xor
stc
mov
data16
mov
lret
push
push
stc
jmp
pop
mov
std
das
test
leave
xchg
sahf
aam
es
pop
jmp
mov
mov
loop
in
adc
dec
js
push
mov
cs
dec
cmp
cmp
out
repz
jmp
loope
inc
adc
daa
or
inc
pop
add
popf
inc
ja
mov
jmp
adc
scas
test
hlt
adc
sbb
or
sahf
movsb
and
and
das
ljmp
cld
pop
bound
cmp
testb
push
or
pop
lret
dec
sti
xorb
pop
and
inc
jmp
rolb
pusha
je
cmpsl
ljmp
xchg
cmc
outsb
cmp
dec
push
push
lret
pop
dec
ret
js
pop
adc
das
sub
or
push
lods
in
xor
mov
sub
sbb
push
mov
movl
lahf
rcrb
mov
jnp
andnps
aaa
sbb
xchg
aaa
rorb
cmp
cli
enter
test
loop
imul
xcrypt-ecb
cmpsl
mov
ds
jnp
sbb
stos
cmc
outsb
popa
clc
pop
shr
daa
imul
cli
sub
push
add
adc
jae
or
flds
and
ret
insb
xchg
sub
aad
mov
movsl
mov
or
jne
popa
cmp
sbb
fwait
dec
insb
cli
ficomps
das
das
outsb
out
fidivs
fstps
mov
out
mov
add
pushl
mov
orb
es
ljmp
test
repz
and
out
adc
or
jae
test
rcll
adc
pushf
jo
data16
enter
roll
call
cmpsb
jb
push
gs
fnsave
inc
test
into
mov
mov
pusha
jne
enter
mov
cmp
scas
push
sub
xchg
inc
sub
aas
mul
cwtl
cmc
push
sbb
cmpsl
lcall
mov
mov
cmp
mov
mov
shll
lea
pop
stos
movsl
mov
popf
dec
jmp
repz
mov
lods
add
out
adc
leave
or
jbe
fmuls
or
inc
jne
int
popa
inc
jl
xchg
enter
out
les
mov
jns
and
xchg
int3
or
cwtl
jle
mov
xchg
dec
imul
pop
mov
into
push
push
imul
cwtl
jnp
addr16
adcl
jp
pusha
and
cmc
testb
mov
mov
cmp
mov
ret
mov
adc
jo
cmp
xchg
mov
in
jnp
lds
out
jne
lods
imull
sub
xor
in
jl
push
movb
and
sbb
push
in
or
in
jbe
pop
adc
divl
mov
adc
hlt
test
cmp
inc
cmp
pop
mov
mov
loope
mov
push
shll
outsl
cmp
scas
and
push
shlb
fcomi
push
ljmp
int
enter
mov
das
xor
lcall
insb
cwtl
pop
fldcw
cmp
cmc
shrl
ljmp
and
xor
nop
mov
inc
ljmp
sbb
decb
or
add
into
xchg
push
aaa
ss
imul
and
lods
inc
jl
push
mov
mov
out
call
sub
jne,pn
ret
or
jmp
fcomp
mov
mov
dec
mov
popf
lea
xchg
pop
dec
lcall
xchg
inc
imul
addl
pop
push
push
add
or
lods
nop
ret
popa
mov
fldt
fiadds
and
sub
xor
jp
jns
icebp
test
icebp
fwait
mov
loopne
mov
lea
ret
rcrl
test
mov
das
and
mov
inc
adcb
mov
cmp
push
call
cmp
push
xor
push
inc
xor
and
das
mov
leave
out
pop
push
ret
cmpsl
jnp
mov
pushf
lcall
insb
mov
pop
aaa
push
adc
divl
in
xchg
jnp
sahf
pop
pop
add
enter
aaa
push
mov
xchg
push
scas
mov
and
sub
mov
imul
or
xor
sub
sbb
jmp
jne
mov
push
icebp
jno
loopne
jae
popa
push
cwtl
push
sub
pushf
bound
stos
jg
adc
and
loopne
xchg
cmp
rorb
and
adc
push
and
mov
fisubs
push
pusha
pop
mov
cmp
es
jle
or
mov
into
adc
das
push
popa
cltd
gs
aaa
pop
adc
and
pop
sbb
push
mull
add
loopne
pop
stos
jae
pop
mov
jb
push
out
fs
insb
gs
ja
popf
mov
jno
lock
cltd
vsubpd
or
ja
out
outsb
scas
dec
out
lcall
inc
ud0
inc
mov
jge
roll
inc
sti
jnp
xchg
adc
xchg
fldt
hlt
adc
sti
imul
imul
fmuls
sarl
or
cmp
add
ss
aad
pushf
or
bound
into
adc
dec
loope
adc
sub
lret
fimuls
decl
sbb
orb
ds
mov
sbb
out
rorb
notl
or
push
mul
push
sbb
add
pop
aas
aas
shrl
dec
imul
fstl
fisubl
pop
aas
cwtl
or
adc
push
pushf
pop
pop
cltd
or
femms
aaa
ljmp
add
lds
xor
aad
les
cwtl
test
sub
pop
add
xchg
fiaddl
inc
pop
or
add
xchg
inc
push
xor
mov
or
mov
into
jne
subb
clc
mov
sub
add
mov
xlat
addl
pop
push
push
add
or
lods
nop
ret
popa
and
aad
dec
push
mov
push
or
mov
mov
push
xchg
popa
dec
add
pusha
mov
push
pop
and
jecxz
mov
sub
stos
mov
jno
ret
ljmp
adc
jp
sub
or
pushf
push
ss
icebp
push
or
push
rcr
sbb
test
imul
das
inc
mov
xchg
fidivrs
inc
popa
fs
mov
and
or
movsb
andl
inc
in
dec
or
sti
pop
fnsave
lods
push
les
daa
inc
or
maskmovq
testl
mov
shlb
push
incb
dec
aas
push
dec
sbb
or
in
mov
fmulp
std
loop
shrl
mov
imul
ret
dec
xlat
lcall
jp
pushl
pop
fildll
add
push
hlt
cwtl
lret
sbb
mov
scas
or
mov
shlb
fsts
testb
inc
scas
pop
in
ret
push
add
cmp
pusha
mov
inc
shr
lret
jmp
dec
sbb
xor
fbstp
out
pushf
adc
dec
xchg
mov
nop
pop
out
loopne
or
jg
jg
sub
js
mov
dec
xchg
cltd
dec
dec
xor
jne
outsb
or
movsl
fdivs
sahf
jle
lret
mov
cld
pop
addl
xchg
push
out
mov
out
push
insl
xchg
lock
pop
jp
dec
lret
test
or
iret
jmp
push
nop
cmp
loope
push
push
addr16
mov
incb
sub
inc
mov
imul
ror
add
insb
es
mov
mov
div
test
jo
push
inc
das
fidivl
lods
adc
pop
xchg
mov
pop
stc
ficoml
adc
in
xor
adc
jg
xchg
cltd
dec
jl
mov
mov
jle
int3
outsb
lds
xor
cmpsb
mov
jo
sbb
pop
mov
rcrl
dec
int3
outsb
cmp
orb
fcomps
call
mov
dec
dec
jns
test
std
loope
test
sub
pop
ret
cmpsl
test
mov
sbb
bound
xor
iret
outsb
mov
mov
sahf
fstpt
pop
ds
inc
sub
aaa
cltd
dec
aaa
and
and
movsb
mov
mov
outsl
mov
imul
aad
adcl
popa
cmp
insl
xchg
pop
jl
jmp
into
adc
mov
xchg
stc
enter
mov
adc
pop
inc
jp
setns
mov
stos
add
iret
imul
lds
loop
push
sub
ss
add
xadd
stc
into
xor
dec
mov
es
jg
xchg
or
push
cwtl
xchg
adc
and
jge
bound
lea
jmp
test
into
lods
sub
add
xchg
outsl
sbb
sar
pop
mov
popa
icebp
inc
je
mov
xchg
and
jno
mov
shrb
adc
scas
fldenv
or
xchg
dec
je
push
negl
outsb
sbb
loop
inc
add
enter
jae
cmp
sbb
lcall
nop
xor
lahf
outsb
sbb
out
push
jmp
aad
xchg
jb
rcrl
mov
adc
and
mov
sti
popf
mov
jge
mov
lds
jecxz
push
adc
test
pop
and
xchg
das
mov
adc
push
addb
aas
inc
or
das
shl
bnd
push
test
xchg
scas
mov
insl
pusha
adc
fsubl
or
mov
jnp
cmpsl
jo
movl
cmpsb
or
mov
movsb
int3
and
in
jecxz
mov
xchg
and
dec
and
lahf
imul
dec
fldl
add
and
and
fistpll
mov
fs
mov
cmp
add
add
mov
bound
sub
adc
xchg
repz
pop
push
jle
adc
push
add
xchg
cld
sbb
lds
cmpsb
add
push
in
bound
xchg
aam
mov
jnp
xchg
in
push
and
int
cmpsb
and
mov
xor
push
adc
sbb
imul
push
xchg
sub
gs
daa
add
in
into
cmc
shlb
pusha
fadds
andl
scas
out
jne
mov
popa
mov
cmpsb
pop
scas
stos
lea
lret
mov
mov
popa
add
xlat
jb
sbb
repz
flds
mov
and
adc
in
sbbl
and
mov
and
in
mov
sbb
fisttps
sarb
hlt
sub
sub
jns
pusha
aas
loopne
call
xchg
add
inc
dec
sbb
push
xor
jns
mov
sbb
je
mov
mov
push
sub
xchg
in
rcll
imul
cmp
jecxz
inc
std
movsl
pop
pop
push
fcomps
enter
jge
insb
js
lret
insl
ret
mov
pop
outsl
inc
icebp
jns
outsl
rcr
les
and
shlb
cmp
adc
sbb
idivb
jbe
das
add
pop
lahf
sbb
int3
push
repz
xchg
leave
xor
dec
adc
cmc
inc
sub
mov
push
fs
mov
inc
cmp
cmpsb
fwait
leave
mov
adc
movsb
add
pusha
pop
inc
and
lahf
jno
mov
mov
jmp
pop
iret
call
sarb
mov
rclb
jge
ja
aad
popa
aaa
adc
jmp
pop
inc
or
fs
lea
push
daa
xchg
das
push
in
jno
dec
movsb
stc
inc
in
jl
int
fbstp
mov
sbb
repnz
fistl
jmp
dec
cmp
push
int3
pop
sbb
push
movsb
ja
notl
dec
outsl
cmp
xor
pop
aad
clc
push
mov
jg
and
arpl
out
fucom
dec
int
dec
mov
sbb
imul
lahf
insb
loopne
jno
xlat
push
push
pop
dec
xor
insl
loop
sub
fmull
movsl
stc
ret
iret
mov
sub
and
adc
xchg
pushf
lods
adc
pop
xchg
shll
lcall
jmp
dec
fdivl
repz
fsubrl
lock
addw
test
filds
fisubl
mov
movsl
ror
fimuls
repnz
addl
cmp
ljmp
cmp
iret
filds
adc
adc
aaa
push
xchg
cmp
add
ss
mov
rep
sti
mov
cltd
jmp
aas
es
add
clc
pop
sbb
push
movsb
ja
testl
out
lock
scas
xor
fstps
arpl
addr16
jmp
or
xchg
pop
icebp
add
dec
fs
push
fdivrl
jmp
popl
or
lock
add
rclb
cwtl
xchg
xchg
pop
or
leave
adc
jnp
and
fxch
pop
sbb
xor
hlt
mov
sbb
adc
adc
xchg
subb
sarl
inc
xor
mov
gs
stos
fists
aaa
aam
pop
jge
sbb
add
push
js
rcrl
sbb
mov
inc
sarl
and
out
adc
cltd
ret
sub
lret
enter
aas
xchg
mov
cmpsb
dec
ljmp
mov
mov
push
cli
jle
loope
lods
fwait
push
test
xchg
addl
xor
add
inc
sub
je
xor
mov
xor
adc
jmp
mov
imulb
mov
or
dec
inc
jb
test
adc
bound
popa
pop
adc
mov
xchg
sbb
pusha
xchg
ret
shlb
or
push
lods
sbbl
lods
inc
fiaddl
xchg
fisttpl
test
inc
scas
lds
push
je
aam
lret
inc
dec
data16
shll
jno
es
ss
push
add
roll
cltd
inc
divl
aaa
hlt
mov
es
outsb
xor
ds
ds
cmp
push
das
mov
shl
repnz
inc
mov
mov
fisttps
lods
shlb
aam
xor
cwtl
jnp
enter
jae
dec
cltd
std
mov
fsub
mov
or
mov
cmp
adc
mov
or
xchg
dec
and
and
int3
cld
mov
dec
inc
push
cmpsl
loopew
std
mov
push
ret
mov
sub
mov
movsb
cmc
call
pop
inc
data16
addr16
mov
fwait
sbb
mov
sub
mov
into
sbb
mov
cmpl
mov
shlb
lods
js
out
xor
mov
jb
sbb
push
ret
add
rcr
lock
icebp
loopne
gs
inc
aad
push
fcom
fbld
jmp
mov
incb
mov
lock
out
div
mov
dec
push
in
mov
xor
fimull
push
xor
popa
sub
xchg
push
sbb
iret
mov
cwtl
xchg
mov
mov
stc
stos
mov
pop
insl
adc
icebp
icebp
loope
cs
adc
dec
or
lods
push
test
and
xchg
dec
sub
mov
jmp
inc
jne
aam
es
mov
test
mov
cs
popf
dec
xchg
jmp
mov
lcall
mov
fildl
popf
loopne
adc
mov
dec
jns
cli
das
mov
sub
jns
jo
mov
sbb
pop
xor
cwtl
out
xchg
adc
inc
loope
ficoms
shll
cmp
mov
mov
dec
andl
sbb
push
popf
jle
insb
or
dec
popa
gs
movsb
mov
test
dec
pop
scas
scas
or
jg
xor
fnsave
dec
insl
lds
cmp
xchg
fcoml
clc
xlat
lock
frstor
popf
dec
sub
cmpsb
jb
push
inc
lea
mov
out
ret
mov
test
dec
pusha
add
or
iret
jb
lcall
notb
push
aas
inc
xchg
jbe
mov
xchg
jge
add
fimull
push
loope
sahf
shrb
pop
xchg
mov
jo
jmp
sbb
nop
mov
inc
cli
or
ds
xchg
mov
mov
mov
in
jl
push
lock
add
or
mov
push
gs
xchg
xchg
shrb
insl
mov
insl
add
lahf
mov
out
add
std
add
push
js
imul
fwait
push
add
xlat
loope
cmpsb
in
mov
leave
mov
push
mov
pxor
mov
lret
repz
out
adc
ja
dec
lods
roll
inc
aas
mov
rclb
test
decb
aas
push
shrb
outsb
xor
lea
or
and
sbb
sbb
or
mov
pop
xchg
leave
or
pop
jo
outsl
xchg
std
test
mov
test
or
pop
adc
shrl
inc
lahf
rcll
pop
jg
jg
adc
mov
aad
movsb
and
in
jle
sbbl
xchg
out
lcall
stos
push
bound
orl
dec
jne
jns
jne
cmpsl
and
arpl
jl
movsb
pop
into
das
push
rcrb
push
sbb
gs
mov
push
xchg
mov
fisttps
arpl
add
mov
test
pushf
mov
cld
pusha
pop
mov
jmp
clc
insb
push
or
push
sub
dec
jmp
inc
pop
mov
out
jg
arpl
inc
lods
mov
sub
aaa
xor
jp
insl
and
out
adc
pop
es
xchg
xchg
popa
pop
sub
pop
subb
push
repz
cs
or
sub
adc
stc
jae
movb
stos
xchg
cmpb
fdivr
cli
cld
fwait
fwait
repz
or
add
pop
cmp
inc
xchg
subb
ret
xor
mov
push
stos
call
pop
fstps
stos
negl
jo
mov
add
adc
ret
jl
js
adc
mov
cmp
inc
insb
cmp
stos
outsl
scas
enter
mov
xor
test
dec
into
xchg
lahf
inc
imul
sub
in
xchg
jl
fwait
and
lds
into
pop
cltd
jle
in
pop
cmp
sub
cwtl
xchg
cmp
push
push
or
decb
mov
lods
pop
das
lock
push
sub
inc
mov
xor
fisttpll
lods
fcmovbe
mov
out
notb
jmp
decl
or
cmpb
push
xchg
mov
ret
mov
imul
ljmp
sbb
mov
dec
clc
mov
shrl
fisubrl
cmpsl
add
test
xorl
inc
jle
cmp
or
adc
nop
pop
mov
and
inc
stos
xchg
je
shll
cli
push
es
pop
pop
insb
ja
fcompl
pop
stos
add
mov
insl
sahf
sub
mov
imul
lea
cmp
dec
push
cmp
notl
mov
or
jg
addl
push
push
dec
mov
adc
push
cmp
out
bound
cmpsb
push
push
xor
cmp
scas
push
ljmp
pop
push
roll
clc
sahf
mov
pop
test
jno
loop
fdivrp
gs
insl
xchg
and
jno
dec
idivl
mov
popf
or
fimuls
subl
mov
mov
pop
dec
cmpsb
out
or
nop
lahf
pop
mov
add
loopne
int3
addr16
popf
divl
push
pop
adc
insb
xor
push
pop
jle
popf
shl
sub
xor
leave
push
fwait
mov
rorb
inc
xchg
stos
or
cld
dec
cmp
xchg
bnd
jecxz
jg
in
dec
scas
adc
mov
add
in
arpl
sub
mov
push
sbb
jno
imul
cmc
in
shll
rol
mov
jge
push
add
rorb
push
cmp
fstl
mov
mov
sub
js
inc
pop
mov
mov
stos
add
popf
sbb
or
lret
fildll
mov
push
jns
pop
lods
jmp
in
negb
sub
dec
lahf
enter
jno
sbb
filds
push
inc
pop
mov
in
mov
test
jle
imul
cwtl
cld
push
outsb
and
xchg
adc
push
dec
lock
inc
insb
ds
aam
pop
push
std
jb
mov
or
bound
je
cmp
adcb
xor
lods
mov
xorl
cmp
test
shlb
loope
cmpxchg
lret
jmp
mov
call
dec
or
imul
fnsave
fs
out
addr16
jmp
insb
fidivl
or
fidivrs
imul
mov
push
jb
push
mov
or
inc
or
imul
or
and
ss
sbb
pop
es
mov
jmp
push
inc
sbb
add
or
jae
push
jl
int3
faddl
push
out
cmpsl
test
push
or
rorl
cwtl
pop
fwait
push
pop
ss
dec
xchg
lods
or
dec
pop
or
pop
adc
aam
push
mov
shrb
mov
and
sbb
sub
push
xchg
or
dec
pop
jno
fmulp
outsb
and
xchg
lret
popf
push
xor
cltd
data16
pop
hlt
mov
jns
leave
sub
in
sub
movsb
mov
dec
xchg
popa
pop
mov
mov
mov
inc
sar
add
ret
into
imul
mov
xor
inc
imul
adc
push
shr
arpl
fsubs
add
stc
pop
in
pop
add
lahf
mov
rcrb
out
std
rolb
adc
stos
sub
dec
inc
repz
mov
scas
inc
cmp
fxch
faddp
aaa
pop
imul
xchg
repz
or
data16
jb
cmc
adc
xor
ret
add
in
lock
jmp
fisubs
cmp
je
js
imul
jae
outsl
push
lret
lret
adc
pop
nop
cmp
xor
sub
into
sbb
jmp
addr16
gs
rorl
inc
and
insl
xor
inc
cmpsb
addr16
loopne
inc
in
push
into
testb
je
sahf
jne
and
cmp
add
lret
inc
subl
jno
bound
aaa
test
push
sbb
enter
inc
push
inc
xchg
pop
xchg
rcll
cmc
or
adc
mov
cmpsb
sahf
rol
sub
dec
or
movb
shlb
or
in
pop
test
or
les
fstps
sbbl
pop
sub
lahf
inc
andb
or
stos
xor
popa
lret
nop
popa
dec
test
js
pop
adc
mov
sub
jmp
pop
sub
jns
fs
test
sub
push
ficompl
xchg
int
popf
arpl
jl
in
mov
sub
lea
scas
fsubrs
jg
lea
ljmp
pop
adc
pop
and
dec
dec
cmp
push
std
jmp
sbbb
cmp
xchg
aam
jnp
ret
rolb
jne
gs
scas
fisubs
andb
ljmp
shlb
lret
test
sbb
xchg
lods
lods
inc
pusha
jne
ret
sarl
in
fs
dec
in
test
adc
insl
sub
loope
sbb
icebp
es
xor
repnz
jmp
cmc
outsl
lea
cmp
enter
xor
dec
mov
jge
js
cmc
int3
or
imul
xchg
jnp
lock
es
lret
mov
or
or
adc
lret
int
test
jmp
mov
fstps
movsl
inc
mov
sub
sti
lss
mov
cmp
sub
xchg
mov
fldenv
test
push
mov
dec
jecxz
push
les
gs
sahf
iret
std
icebp
push
das
xlat
test
stc
out
cmpsl
cmp
ret
imul
mov
jecxz
aad
jecxz
mov
shll
sbb
xor
sarl
out
loop
push
movsl
loopne
fcompl
inc
cmpsl
mov
in
mov
outsb
sbb
enter
out
addb
mov
cmp
cwtl
dec
imul
gs
adc
cmp
push
cli
xor
movsb
dec
pushf
leave
sub
pop
sbb
add
dec
nop
shll
shll
enter
repz
sbb
int
sbb
or
inc
es
leave
xor
cmp
pop
iret
ss
stos
into
pushf
mov
cmp
fstpt
mov
popf
rorl
cltd
dec
add
dec
mov
out
sbb
sbb
shrl
mov
lds
stc
clc
or
or
test
mov
and
push
mov
adc
mov
jmp
or
mov
nop
dec
dec
xor
lcall
loop
xor
aaa
mov
popl
cmpl
imul
mov
push
aad
inc
stc
out
popf
into
xchg
sub
sahf
rclb
push
push
adc
mov
jmp
mov
sub
jg
std
lods
sub
xor
lds
das
and
in
add
jno
clc
sub
test
mov
aas
xor
add
and
lret
mov
adc
shll
cltd
and
divl
ss
pop
test
scas
orb
lret
ds
data16
ss
inc
xchg
dec
push
leave
aaa
in
subb
movsb
jp
jb
sub
int
jne
mov
insl
inc
icebp
pop
fistl
or
sti
pop
out
sbb
mov
or
adc
adcb
loopne
out
mov
jl
daa
insb
xchg
jno
jl
mov
in
and
and
std
and
jo
in
or
mulw
add
pop
andl
pushf
jns
and
xor
movsb
or
imul
pusha
jbe
ds
loopne
das
bound
mov
pop
xor
test
push
insb
sbb
ds
xchg
fwait
cld
cmpsl
clc
mov
xchg
mov
imul
dec
push
pop
pop
xor
or
xchg
sbb
lds
rolb
insl
fucom
mov
jmp
push
mov
stc
mov
dec
aam
inc
cmp
rcrb
jns
out
lret
dec
mov
xorl
and
out
mov
sub
mov
cmp
pop
rorl
stos
xor
pop
and
mov
fmuls
adc
mov
je
jb
ficoml
imul
test
sub
enter
push
adc
cmpsl
xchg
enter
xor
pop
mov
mov
push
xor
and
loopne
pop
inc
mov
adc
frstor
fstp
adc
or
pop
cmpsb
test
aaa
out
xchg
xchg
adc
mull
jle
in
ret
jle
shl
rorl
jbe
mov
mov
push
and
mov
imul
cmp
mov
movsl
mov
jno
clc
xchg
xor
loopne
adc
fcomip
scas
dec
jbe
cmpsb
mov
jg
lea
arpl
mov
ret
jne
sti
in
addr16
mov
mov
imul
inc
aaa
inc
lret
sub
mov
nop
clc
test
pop
add
push
imul
sarl
mov
cli
outsb
mov
sbb
cltd
sbb
push
incl
inc
add
fldcw
movsb
aas
jbe
repz
lea
mov
fisubs
mov
fldenv
jl
add
and
repnz
loopne
in
inc
push
aas
push
test
loopne
cltd
jbe
cmp
call
fidivrs
jns
add
add
scas
fimuls
iret
xchg
fisttps
repnz
cmpsb
or
aad
ss
xchg
lods
in
push
jns
or
cmpsb
xlat
ljmp
lds
jp
mov
sbb
jno
xchg
lahf
mov
cmp
ljmp
aas
pop
mov
push
popa
mov
add
leave
out
mov
push
xor
outsl
push
mov
mov
and
add
sub
xor
cmp
cli
orb
test
out
cld
imul
test
stos
inc
inc
jmp
mov
shl
je
je
or
xlat
clc
or
cmp
into
xchg
pop
cmp
cmp
xchg
adc
call
pop
repz
add
pop
arpl
mov
push
clc
call
fbld
out
sar
and
mov
cmp
xor
sbb
push
xor
cli
lods
in
sbb
sub
jmp
repz
nop
aaa
fwait
push
sub
sbb
lods
ss
jecxz
xor
jo
loopne
nop
mov
les
and
push
filds
into
repnz
in
jge
push
xchg
rcrb
out
in
outsl
popa
imul
add
and
dec
adc
jg
orb
sahf
mov
xchg
push
test
imul
cld
inc
mov
jno
mov
aas
sbb
add
setp
rcr
mov
dec
test
push
into
adc
arpl
imul
dec
fbld
sahf
or
or
inc
push
adc
das
arpl
sbb
inc
js
adc
pop
loope
std
sbb
pop
mov
jns
push
outsb
inc
aaa
pop
pop
pop
out
inc
inc
fs
or
sbb
jno
leave
popf
cmc
leave
inc
mov
clc
sahf
jb
sar
sti
loopne
lret
repnz
jg
fadd
sub
lock
mov
dec
int
pop
mov
popl
pushf
cli
and
xchg
insb
test
xchg
data16
lds
jmp
ror
adc
jge
dec
arpl
lea
mov
and
cmp
sub
pop
push
std
adc
rcr
loope
xchg
sbb
jnp
push
pushf
out
push
into
and
pop
test
pusha
push
mov
push
out
fsubrl
sub
pop
js
incb
test
push
push
mov
mov
std
ja
xchg
pop
cmp
push
ret
xorb
sbb
mov
push
int
push
or
pop
inc
lret
inc
sub
adc
fs
sub
pop
ror
or
add
in
mov
cmp
xor
mov
mov
pop
lods
ret
ds
sbb
loop
sub
aam
rolb
push
fstpl
lods
ja
fld
sub
out
pop
test
jo
lret
push
lret
addr16
add
or
cmp
sbb
cmpsb
movntps
add
shll
mov
insl
mov
fsubs
mov
xlat
sbb
mov
push
int
push
or
adc
pextrw
jae
orb
into
jmp
push
jl
or
add
outsb
mov
xchg
jp
push
xor
fbld
xchg
cmp
add
add
aam
mov
testb
into
test
hlt
cmpsl
das
or
bound
lods
sbb
mov
jmp
scas
imul
rolb
jne
jne
sub
mov
add
inc
lock
adc
rorl
cmp
adc
sub
mov
pop
or
cltd
inc
decb
fsubl
imul
inc
or
push
movsb
int3
mov
adc
in
mov
out
inc
cltd
gs
fs
lcall
movsl
dec
mov
mov
in
or
rcll
mov
test
or
fs
icebp
push
aas
pop
out
int3
and
stos
sub
test
cmc
sub
mov
dec
sub
or
std
push
push
fbstp
ficoms
out
orl
cli
lcall
lret
fstp
mov
pop
movsl
inc
add
mov
sbb
popf
mov
xchg
mov
mov
mov
xchg
leave
inc
push
fwait
mov
push
outsb
or
push
fildl
scas
sahf
pop
xor
xchg
mov
and
cli
lods
push
xchg
out
test
outsl
fnstenv
outsl
xchg
lea
adc
xchg
js
mov
dec
loop
std
filds
in
fdivl
pop
out
mov
js
lds
jno
sarb
jecxz
push
mov
repz
cmp
pop
dec
lds
pop
lret
sub
xor
xor
fbld
and
sub
mov
xor
leave
jno
sub
repz
inc
mov
adc
sahf
jne
push
push
mov
enter
repnz
inc
int3
dec
imul
xlat
loop
in
dec
sbb
fists
jbe
cmp
lret
inc
mov
inc
fwait
jno
ret
mov
fmuls
in
jecxz
cmp
adc
mov
fcoml
aam
or
insl
jno
ja
rcll
leave
fdivrl
loop
sbb
jmp
cmp
mov
fs
stos
xor
cli
cwtl
cmp
mov
movsl
cmp
in
sbbb
jmp
int
fnstcw
add
gs
or
out
int
sub
jp
add
xchg
pop
cmpsl
pop
addr16
data16
xor
in
add
mov
fidivs
inc
mov
pushf
cmp
js
jmp
dec
stos
stc
add
pusha
repnz
hlt
jo
push
into
jns
ret
push
lret
icebp
push
add
arpl
arpl
push
mov
shrb
push
mov
roll
xchg
xor
or
in
call
dec
xor
jne
push
or
fistl
fisttpl
xchg
ljmp
cmc
fstps
fisttpll
xor
enter
mov
into
jbe
ficoml
repnz
mov
aam
or
out
adc
mov
popf
orb
jge
cli
cmp
mov
test
addr16
aaa
dec
cltd
bound
inc
cmp
pop
mov
sub
adc
adc
xor
jecxz
ja
inc
xor
mov
testb
mov
mov
fs
ret
fs
add
hlt
loop
andl
xor
pushf
or
cmp
ss
fcmovb
sbb
or
jnp
xchg
test
push
fdivl
lret
mov
xlat
aas
mov
sbb
jbe
lock
mov
inc
aas
jge
leave
gs
rcrl
and
mov
or
stos
inc
lahf
dec
dec
hlt
imul
lea
mov
mov
jae
das
mov
mov
add
sahf
shll
sub
cmp
fdivrl
cmp
jae
or
nop
sbb
pop
push
popf
fwait
imul
dec
sti
fistpl
pop
aam
jmp
nop
sbb
mov
inc
rol
sbb
fwait
hlt
sbb
repnz
stos
shlb
ficoml
xor
es
stos
add
cld
loopne
add
imul
xor
or
ja
popa
dec
pop
and
mov
cltd
fucom
push
mov
pop
push
adc
test
rorl
mov
aaa
outsl
mov
sub
sub
test
fs
cmp
lret
mov
iret
fnstenv
fs
push
add
popf
add
pusha
imull
aad
add
mov
aad
std
fdivl
pop
cmp
push
pop
jns
gs
aaa
xchg
xchg
and
in
scas
leave
aam
push
hlt
fbld
adc
in
cmp
mov
mov
sub
fildl
pop
loope
mov
pandn
xchg
mov
cmpsl
adc
push
jae
mov
out
mov
imull
mov
sbb
add
adc
test
lds
mov
stc
mov
idivl
dec
dec
push
in
dec
xchg
nop
in
fstpl
aas
testl
test
jmp
sub
daa
dec
movd
call
push
xlat
insl
and
cmc
adc
xchg
shr
rcrl
cld
popa
jl
mov
sti
cmp
and
aad
adc
mov
test
jne
adc
add
cmpsl
bt
pop
addr16
shll
jge
jge
fstcw
aam
and
clc
xor
pushf
lock
sbb
push
inc
movl
inc
movsl
fmulp
aas
in
sub
cmp
ja
cld
les
xor
mov
pop
subb
jo
xor
ds
sub
inc
stos
cmp
imul
sahf
sbb
push
rcrb
jl
mov
fdivrl
add
mov
outsl
or
add
and
inc
dec
int
lods
lret
push
inc
fsubrl
or
dec
clc
sbb
addl
sbb
shrb
out
fiaddl
repnz
fnstcw
movsb
addl
loopne
pushf
pop
xchg
push
fdivrl
nop
pusha
pop
call
fiadds
loop
mov
sahf
scas
jle
xor
sahf
cmp
xor
out
mov
jbe
xor
daa
push
out
adc
leave
pusha
adc
push
add
movsl
les
ss
orl
es
push
lcall
push
jle
jmp
test
hlt
jg
fisubl
mov
jmp
xor
xchg
test
movsb
test
xchg
mov
sbb
outsl
mov
jmp
and
cld
mov
jnp
or
inc
cmp
dec
sub
xor
sub
adc
add
cmp
mov
scas
xchg
aad
pushf
mov
dec
repz
pop
sbb
das
jb
loope
sub
lods
xor
ss
addl
xchg
push
push
std
sub
and
add
mov
mov
push
arpl
push
in
jb
popa
call
or
clc
loopne
movsl
push
adc
aaa
cs
aas
outsl
pusha
fidivl
mov
ss
lea
jbe
inc
mov
jnp
aam
mov
test
xorl
pop
jl
jo
jp
mov
or
xor
lcall
pop
xor
enter
inc
cltd
movsb
inc
pop
mov
cltd
imul
jp
test
out
adc
lret
jge
orb
ret
out
nop
popa
xor
mov
test
adc
imull
iret
add
mov
and
jp
cmpsb
fdivr
test
test
xor
jge
scas
sub
dec
fdivs
mov
fnsave
repnz
mov
aam
xchg
jne
mov
push
sub
sbb
sbb
inc
mov
adc
fildl
lea
adc
mov
lock
insl
adc
pusha
int3
aas
jl
mov
or
cwtl
addr16
ret
int3
pop
fwait
jg
dec
shrl
add
lret
ret
dec
cmp
push
adc
int3
pusha
test
int
mov
inc
push
cmp
nop
jl
lea
mov
adc
dec
call
ficoms
jle
int
cmp
fwait
imul
xor
aaa
stos
xor
jl
test
fistl
sbb
mov
in
cmp
dec
sub
rclb
stos
xchg
add
mov
or
xchg
pop
mov
mov
cmp
or
movsb
inc
shll
js
ror
outsb
jb
mov
jne
movsl
pop
xchg
mov
adc
jge
push
out
sbb
jnp
add
dec
or
lock
cmp
pop
or
loope
inc
les
pop
xor
mov
dec
fldl
into
aad
cmpsb
mov
jle
std
push
mov
pop
dec
cmp
lret
xor
stos
test
mov
jl
jg
jg
test
es
leave
push
mov
mov
iret
dec
jne
fucomp
xchg
pop
sub
cmpsl
cmp
shrl
jne
cmpsl
addb
test
dec
mov
xor
iret
add
aas
lret
inc
loopne
jge
mov
jb
lret
lret
mov
jg
mov
fs
rcll
rcll
xor
sub
inc
inc
popf
sbb
js
aad
jno
xchg
test
mov
adc
inc
testl
stos
loopne
imul
cltd
arpl
jp
push
insb
adcl
leave
xor
pop
push
jmp
xor
inc
out
insl
jmp
in
jno
jp
mov
fsubrs
fcomi
inc
sbb
ljmp
aam
scas
subl
push
cmp
out
imul
orb
sahf
sub
lahf
mov
pop
aaa
icebp
out
cmp
pop
lock
xor
inc
inc
movsl
in
add
mov
jp
push
xchg
jmp
lods
mov
push
aam
adc
xchg
hlt
dec
enter
add
xchg
mov
xor
and
adc
fcompl
call
dec
nop
cmc
add
mov
jge
fwait
shlb
push
and
movsb
sub
es
pop
pop
into
add
mov
hlt
shll
rcrl
int3
mov
ja
cmp
xchg
cmp
jl
mov
push
ljmp
or
mov
sub
test
sub
sahf
inc
push
iret
aas
jmp
and
mov
test
dec
xchg
adc
mov
bnd
jecxz
cmpl
mov
es
je
or
aaa
leave
add
sbb
and
imul
xchg
and
adcl
xchg
test
sbb
aam
nop
orl
je
inc
or
mov
out
inc
out
mov
lret
mov
inc
push
mov
ja
xor
ja
jle
in
test
add
sub
pop
cmpsl
nop
test
ljmp
xor
push
mov
int
adc
test
repz
loope
and
push
outsl
les
mov
or
inc
lods
mov
sub
movsb
push
rclb
push
iret
lds
lock
push
repnz
add
ffree
addr16
pop
in
lods
jno
pop
hlt
pop
std
pop
cld
fisubrl
sub
or
cmp
mov
call
sub
lahf
mull
inc
push
daa
jne
lock
iret
jp
aas
in
push
les
push
mov
scas
adc
cmp
movsb
sbb
in
dec
jns
ljmp
inc
cmp
imul
movb
mov
fildll
shl
jno
sub
repnz
in
mov
mov
in
add
dec
sub
pop
cwtl
loop
cmc
sbb
cmp
out
dec
pop
adc
xor
or
pop
out
cmpsl
mov
xchg
sbb
inc
das
scas
cmp
xor
nop
roll
and
adc
ja
adc
pop
scas
xchg
pop
xchg
stc
das
aas
or
cmpsl
bound
aam
call
dec
push
pop
enter
loope
das
sub
pop
push
test
xchg
pop
pop
pop
into
sbb
xchg
mov
jmp
jg
andb
in
lods
add
cmpsl
jg
or
mov
inc
dec
loope
inc
push
mov
xchg
ds
xlat
lock
jecxz
insl
fmulp
dec
test
pop
sbb
mov
sub
out
sbb
loopne
mov
gs
je
push
lods
test
in
nop
je
inc
loopne
in
stos
dec
cwtl
fistpl
pop
push
or
mov
cmp
xor
clc
movsl
repz
aaa
dec
addr16
or
sub
jl
cwtl
add
sub
mov
dec
aam
inc
jmp
and
in
ret
call
jo
cmp
movsb
dec
enter
pop
outsb
jb
dec
cli
loope
and
lea
mov
pop
xor
negb
addr16
es
leave
movsb
xor
jno
mov
cmp
push
mov
xchg
push
or
jbe
ds
out
cmp
out
mov
negb
mov
fmull
loop
mov
dec
popa
sahf
stc
aam
cmpsl
test
es
mov
sbb
add
jp
decl
pop
lea
pop
cltd
in
in
scas
aaa
cmpsb
clc
jb
xchg
push
xchg
or
push
in
dec
ds
loopne
aad
push
mov
cmp
out
sbb
les
ficompl
sbb
and
mov
pop
aaa
jle
or
inc
ficomps
test
mov
sub
fstpl
jp
xor
aas
lock
test
push
xchg
pop
hlt
ljmp
inc
loope
stos
adc
xchg
xchg
add
shrb
lods
shll
leave
pop
inc
stos
add
or
pop
xor
negb
pop
mov
fwait
int
stc
leave
dec
popf
jle
std
cmp
push
scas
aaa
jno
in
xchg
lahf
mov
in
mov
loop
lods
dec
les
add
pop
xchg
fidivrs
test
inc
jg
shll
or
fidivrs
xor
in
jns
xchg
inc
inc
dec
xor
lret
mov
bound
les
push
xchg
lret
ljmp
ret
jl
test
push
mov
push
das
movsb
cwtl
stc
sbb
leave
xor
xor
aas
lea
imul
and
jo
pop
hlt
ljmp
inc
loope
insl
insl
dec
repnz
outsb
dec
push
xchg
add
shrb
ret
in
mov
pop
inc
stos
add
or
pop
xor
negb
addr16
es
leave
movsb
xor
push
and
cmp
push
mov
xchg
push
or
popf
imul
mov
int3
mov
xor
mov
or
loop
mov
in
lock
inc
and
fucomip
stos
outsb
rcrl
pop
sbb
shll
addr16
push
lock
jmp
pop
shlb
inc
inc
mov
inc
push
and
pusha
dec
mov
dec
push
sub
xor
mov
jp
jmp
scas
jns
and
in
mov
imul
pop
sub
fcomip
in
mov
push
inc
xchg
rcrl
in
adc
aam
out
fstl
mov
sbb
xchg
push
out
push
out
orl
push
push
inc
loope
mov
dec
push
jg
std
adc
lea
fwait
lret
fwait
addl
hlt
loopne
mov
pop
mov
sbb
mov
push
push
rclb
idivb
jg
pop
repnz
jl
in
jle
dec
hlt
cvtps2pi
xor
push
leave
or
mov
jne
jb
and
gs
push
mov
cltd
iret
push
in
dec
ds
loopne
pop
cmp
cmp
ret
enter
mov
push
cli
cmp
mull
add
or
fwait
mov
shlb
pusha
jno
sbb
pop
cmpl
ret
orl
fidivs
mov
jmp
fbstp
int
pushf
stos
cwtl
negb
xchg
xor
fisubrl
jge
push
clc
pop
pop
mov
add
repnz
insl
push
mov
gs
and
inc
mov
test
repz
cmp
outsl
dec
jle
cmp
xor
call
push
test
lods
aas
adcb
mov
push
cmp
xchg
leave
push
sahf
pop
rcl
movsl
orl
repnz
int3
clc
fmuls
or
pushf
sbb
rcll
iret
lds
lea
mov
shll
pop
mov
and
inc
stos
ljmp
ret
sub
push
add
mov
gs
sub
jge
xor
pushf
jp
push
push
jne
push
out
jmp
sbb
mov
test
stos
sarb
in
out
cmpsl
inc
dec
addb
xchg
inc
mov
mov
or
insl
hlt
xlat
adc
aad
fs
add
fstpt
add
pop
imul
enter
movsl
jle
mov
cmp
pushf
jno
sub
mov
das
std
xor
test
xchg
insb
aas
icebp
insl
rcrb
lock
aaa
fimuls
or
lods
mov
scas
test
jecxz
movb
hlt
cmp
mov
fwait
dec
xchg
ret
int
lahf
jo
dec
fnstenv
mov
loopw
dec
mov
fistpl
sbb
inc
cmpsb
fwait
mov
in
push
outsl
and
out
pop
repz
mov
push
inc
mov
push
test
ret
fisubrs
lea
stc
mov
sub
cmp
mov
pop
dec
dec
xchg
cmp
loopne
jp
cltd
testl
std
or
nop
test
lret
adc
jle
insb
xor
jb
jle
mov
insb
pop
and
shrl
jb
xchg
in
das
mov
lcall
or
push
int
fistpll
ficompl
cmp
push
or
rclb
aaa
jne
and
roll
mov
js
mov
mov
in
and
daa
daa
pushf
dec
mov
dec
inc
mov
lea
mov
stos
ret
iret
inc
mov
sub
sarb
xchg
ljmp
int
sub
insb
into
cmp
xchg
jl
nop
daa
xor
xchg
pop
xchg
stos
popa
xor
xor
sub
sarl
xor
shrb
out
dec
mov
sbbb
xor
inc
jg
adc
pop
fwait
pushf
lods
adc
minps
or
mov
shll
jns
std
mov
imul
lret
sub
inc
jl
add
sub
mov
mov
jmp
pop
outsb
negl
sub
in
push
pop
call
idivl
mov
dec
out
jg
divl
xchg
inc
push
dec
or
scas
sub
idiv
fwait
add
mov
gs
inc
aad
rorl
ret
repz
jae
test
dec
mov
xchg
pop
aaa
ret
xor
add
fdivrp
dec
or
aam
push
or
ret
mov
sbb
jb
sub
jae
out
rcr
and
sbb
rcr
xchg
mov
movsl
sub
mov
push
adc
mov
mov
inc
adc
pushf
mov
fs
cs
add
mov
gs
push
xchg
sub
movsb
push
cmp
les
mov
xchg
inc
call
dec
or
push
inc
lcall
je
jle
leave
adc
jp
aaa
xorl
inc
in
mov
adc
push
dec
mov
out
xchg
sahf
test
pop
lock
aas
adc
clc
icebp
xchg
in
and
sub
push
pushf
jle
sbb
pop
out
push
and
idivb
scas
push
cmpsb
lahf
mov
xchg
or
pop
cmp
mov
mov
xor
jae
outsb
ds
clc
xor
sub
stos
int
lret
rclb
xchg
push
pop
dec
adc
test
enter
lods
das
clc
lea
scas
fcoms
mov
cmp
sbb
cmp
mov
call
in
xor
mov
and
clc
call
dec
int
jl
mov
and
cmpsl
cs
scas
test
data16
fstpt
loop
rclb
ja
adc
and
xchg
int
pop
sub
and
gs
shl
mov
xchg
add
cmp
decl
mov
push
xlat
cld
mov
fsubs
iret
je
mov
mov
lahf
jp
add
movb
mov
sbb
sbb
xchg
fildll
arpl
pop
mov
inc
enter
sub
or
jno
xchg
cmpsb
cltd
inc
mov
mov
aad
push
imul
int
stos
loop
jae
mov
add
ds
test
cmpb
ljmp
ljmp
xchg
popa
adc
push
sbb
fwait
add
adc
cmp
fcompl
inc
inc
push
xorl
jo
lds
sahf
pop
dec
loopne
and
aad
xchg
inc
inc
test
mov
stos
mov
jb
sbb
roll
mov
mov
push
imul
and
ret
sbb
jb
cld
sarb
out
cmp
bound
inc
sbb
jge
push
pop
scas
jl
adc
sub
xchg
rorb
pop
aaa
mov
rcrl
cld
mov
sub
ret
mov
adc
xchg
mov
filds
xor
xor
lea
adc
dec
flds
out
push
in
xchg
dec
pop
xchg
bound
cmp
lea
xor
inc
shl
das
or
cmp
int
testb
dec
jne
push
sbb
imul
mov
xchg
xor
fbstp
cmp
push
jl
sbb
outsl
loope
in
push
ljmp
fstpt
adc
xor
xchg
sub
into
dec
sub
inc
or
add
xchg
pop
mov
push
es
lods
inc
mov
cld
pop
mov
roll
ds
mov
mov
insb
xor
bound
xchg
add
adc
or
movb
cs
mov
ret
push
call
jl
jns
xchg
out
test
mov
test
popa
and
fidivrl
and
jnp
push
into
dec
jecxz
cwtl
sahf
jno
enter
dec
je
pop
addr16
add
roll
shrb
shl
cmp
frstor
sbb
sbb
push
add
jb
shr
xor
jno
test
stos
mov
pop
outsb
rcrb
pop
fstl
repz
add
dec
xchg
dec
mov
sub
test
cmp
rorb
sbb
daa
stos
mov
hlt
mov
jl
and
enter
mov
outsb
pop
fldenv
fldl
fnstenv
std
popf
dec
movsb
nop
or
push
popa
cmc
jp
mov
pop
cmp
and
inc
xchg
pushf
add
lea
inc
and
sub
sub
pop
or
push
xchg
cmp
clc
int
cmpsb
cltd
xchg
shlb
and
jmp
or
ja
mov
xchg
pop
and
outsl
ficompl
push
das
mov
das
pop
test
mov
fdivrl
cmpsl
loope
sti
xorl
pushf
movsl
loop
cmpsl
push
push
out
ret
add
xchg
iret
jmp
pusha
mov
pop
jg
out
ss
lret
or
pushf
lret
gs
or
sbb
daa
stos
mov
test
fbld
and
xchg
mov
ficoml
dec
xor
gs
fwait
rcrb
push
add
in
ss
sbb
ds
movsb
btr
lcall
out
and
fdivl
scas
aad
inc
bound
shl
jb
pop
lahf
movsb
inc
jl
ds
jmp
dec
scas
popa
lret
push
dec
mov
or
sbb
pushf
push
hlt
sub
int
add
dec
iret
xor
imul
push
cmp
cmp
mov
jecxz
pop
add
jae
rclb
lahf
loop
cmc
xor
pop
int
sbb
cmp
scas
scas
ljmp
insl
ss
sbbl
iret
sbb
mov
mov
or
into
fadds
push
outsb
or
nop
pop
mov
mov
popa
lcall
iret
movzbl
andl
mov
xchg
xor
mov
mov
filds
pop
and
lock
xor
test
pop
xchg
mov
jns
aam
or
imul
sub
mov
lods
in
push
shr
out
lret
jo
int
mov
daa
pop
mov
outsl
stos
sub
dec
jg
push
vmovntpd
iret
out
inc
ja
sbb
sub
dec
jg
push
cmpsl
ja
pop
jecxz
call
outsl
stos
sub
dec
jg
js
pop
aad
add
pop
mov
pop
push
jmp
pop
and
dec
mov
mov
lods
sub
fildll
sbb
popa
popa
mov
lret
jg
sti
adc
ffree
and
repnz
or
jno
push
add
pop
lods
jne
je
dec
xchg
push
fdivrp
jo
pop
mov
imul
int
push
insb
aaa
addr16
jecxz
imul
cmpsl
jge
and
das
inc
sub
jo
aas
mov
lret
sub
push
paddd
pop
inc
pop
mov
out
insl
test
pop
push
test
lret
jp
inc
lds
pushf
out
push
inc
jge
insb
arpl
dec
add
add
dec
into
addb
and
xor
jp
xchg
iret
mov
imul
popa
add
inc
dec
dec
je
loop
rorb
std
ficompl
sbb
pop
imul
fldenv
es
loop
ret
adc
shrb
sub
cmovnp
pushl
cmp
andb
mov
add
stos
xlat
mov
or
adc
ret
mov
jbe
push
inc
popa
or
lahf
out
test
scas
in
sbb
pop
inc
mov
jle
mov
dec
sub
mov
sarb
jp
jb
les
test
jae
mov
mov
jae
in
mov
pop
push
xchg
lahf
sbbl
leave
mov
inc
movsb
mov
dec
insb
incb
movsb
ja
mov
pop
xchg
xor
andb
test
adc
pop
push
pop
jp
mov
in
loopne
sub
rcr
pop
xchg
pusha
mov
push
in
lods
ljmp
int
insl
data16
xlat
dec
or
enter
inc
or
push
mov
jb
int
cmpsl
xchg
adc
or
jecxz
fnstenv
dec
mov
les
and
dec
jecxz
adc
das
xchg
mov
inc
lahf
or
cmp
sarb
cmp
mov
outsb
imull
pop
fdivrp
mov
divl
add
add
mov
mov
lods
cmc
adc
dec
in
dec
fwait
jo
push
in
sub
cs
outsb
pop
mov
pop
andb
fistpl
aaa
aaa
rol
mov
sub
cmp
out
sbb
or
aaa
das
icebp
jge
cbtw
mov
and
rolb
mov
scas
jnp
or
pop
mov
add
fwait
jo
popf
jae
add
xor
scas
pop
fwait
loopne
sbb
loopne
cmp
cmc
xor
lock
push
fwait
mov
push
add
test
out
outsl
xchg
jo
jmp
jnp
sti
mov
sbb
and
jbe
mov
mov
adc
fdiv
in
data16
mov
jno
arpl
sbb
jno
mov
xor
jo
repnz
cmpsl
xchg
inc
sub
fiaddl
inc
lods
add
jbe
mov
xchg
rcrl
mov
pop
mov
cmp
cmp
in
cld
mov
cmp
in
adc
jmp
and
mov
or
and
sub
add
jecxz
inc
xchg
jp
xchg
xlat
jmp
pop
out
movsb
and
jns
push
stos
push
idiv
cmpsb
add
loope
gs
loopne
jl
lret
mov
cmp
outsl
adc
int3
mov
rcrl
pop
push
vcvtsi2ssl
hlt
popa
loopne
cltd
pushl
nop
xor
xchg
mov
iret
loop
cmp
imul
push
into
jae
fdivrs
dec
imul
lock
call
in
mov
xor
pop
jbe
cmp
xor
rep
jle
js
xor
push
jno
jne
adc
std
popa
fstpl
lret
testl
inc
lea
sub
shrb
insb
xorb
lods
mov
imul
pmaddwd
sub
xchg
leave
inc
loope
jne
push
mov
xchg
inc
and
or
stc
mov
adc
pushf
pushf
lcall
cmc
mov
dec
push
ds
push
jg
and
sub
push
cmpl
mov
inc
mov
and
cmp
das
pop
mov
inc
sbb
xor
xor
xor
sbb
push
in
movsl
test
xchg
jb
pop
cmpsl
cmc
pop
jb
out
add
lcall
cmpsb
shll
cmp
xchg
aad
std
cld
arpl
sbb
sub
movd
push
vpinsrd
hlt
sub
jp
mov
jmp
adc
mov
stc
hlt
xchg
pushf
pop
jbe
aam
cltd
orl
int3
rcrl
add
lret
pop
mov
xor
mov
imul
and
stos
in
fmuls
mov
pop
push
push
jp
jl
dec
pop
jp
dec
push
pop
loopne
mov
pop
cmp
scas
pop
mov
jmp
xchg
inc
push
je
or
std
daa
and
pop
stos
mov
sub
rcrb
push
daa
aaa
mov
mov
push
lea
scas
mov
lret
xchg
sti
ret
pusha
jne
xchg
movsl
pusha
or
in
jne
rclb
lea
shrb
std
mov
xchg
cltd
into
aam
dec
dec
gs
popa
les
pop
jne
hlt
xlat
pop
and
mov
mov
jbe
xchg
add
cmc
xchg
add
mov
mov
mov
imul
aad
lock
aas
push
repz
mov
sti
out
jecxz
mov
sbb
push
andl
xor
cmp
or
movsb
into
aaa
mov
aaa
cld
jecxz
fsub
xor
shrb
data16
out
jl
jbe
jbe
dec
pop
pop
jo
push
push
lea
orl
sbb
sbb
add
fisubs
and
testb
push
imul
jg
lods
pop
aad
cmp
pop
das
add
aas
push
inc
addb
fidivl
adc
aas
movsb
pop
sub
push
pop
mov
and
pop
ret
in
aas
hlt
xchg
pop
cwtl
add
sbb
inc
addr16
add
fstpt
mov
and
sahf
sbb
dec
or
jno
mov
cmp
addr16
and
jge
mov
movl
enter
stos
dec
fldl
ss
aad
popf
cmpsb
aaa
lods
or
xor
in
pusha
inc
rorl
pop
movsl
push
cmp
mov
sbb
push
bnd
jbe
test
scas
lahf
mov
repnz
mov
call
out
xor
add
sbb
rol
and
cwtl
xor
jle
pop
jno
xor
pop
push
scas
fdivl
xor
and
pop
leave
je
or
into
cmp
aad
push
xor
in
out
test
fs
mov
lods
in
in
push
pop
lret
cwtl
fnstenv
push
fs
shr
inc
fs
data16
imul
ja
ret
arpl
cmpsb
dec
test
mov
fs
pop
scas
mov
mov
dec
dec
dec
testl
sub
testl
lds
test
inc
pop
flds
in
jne
jae
mov
cmp
hlt
ja
inc
or
dec
pushl
lret
cmp
pop
pusha
incl
inc
inc
add
repz
xchg
pop
xor
leave
xor
xchg
icebp
mov
push
in
mov
push
cwtl
cmp
mov
mov
leave
jmp
cmp
aaa
mov
mov
fcmovb
mov
sub
pop
push
clc
xchg
mov
ret
mov
call
ficompl
fdivl
xchg
xor
test
xor
push
lcall
test
mov
mov
scas
fs
addr16
lahf
cld
loopne
and
addr16
sub
pusha
pop
out
shll
sti
jmp
add
xchg
clc
in
mov
dec
icebp
fiadds
stc
or
mov
xchg
rcl
add
cs
add
faddl
push
inc
mov
movsb
rcr
add
xor
xchg
iret
out
sub
lcall
mov
sub
arpl
dec
pop
movsl
je
mov
addr16
icebp
and
push
jbe
insl
adc
sbb
lock
testb
cwtl
jmp
popf
gs
add
xchg
push
enter
inc
mov
nop
sub
js
incb
insl
mov
aam
push
ja
cmp
cmp
push
sub
jle
sbb
out
adcb
rcrb
xor
nop
scas
ds
les
and
or
fidivrs
jp
cmp
xor
ret
cs
xchg
jecxz
pop
jmp
push
ret
aas
dec
dec
divb
jg
push
and
add
movsl
jp
mov
mov
scas
xchg
sbb
out
aam
pop
xlat
adc
imul
jno
pop
mov
ja
mov
loope
cs
mov
push
pop
and
subb
sarb
sub
aad
pop
push
lret
add
adc
cmp
int3
adc
hlt
call
dec
jns
jbe
cmp
adc
or
aas
xchg
xchg
stc
popa
ds
sti
jg
pop
jmp
or
mov
out
and
xchg
aas
scas
jae
add
dec
xor
push
jl
rcrl
add
and
inc
ret
xor
ret
jmp
in
mov
pop
inc
pop
test
rorb
out
cli
dec
scas
std
enter
sahf
test
pop
jmp
mov
push
and
cltd
out
loop
ss
je
lock
notb
dec
js
std
icebp
test
ret
test
mov
push
cs
xor
out
std
aas
data16
push
dec
gs
jns
fimuls
ds
inc
and
insl
or
mov
inc
pop
movsl
push
cmp
mov
sbb
push
bnd
jbe
test
scas
xchg
xor
pusha
jne
lret
fstl
inc
jle
dec
push
dec
mov
sub
jno
stos
mov
das
xor
lret
mov
imul
aad
inc
mov
adc
add
dec
imul
jecxz
jge
mov
out
push
add
loope
jbe
inc
insl
xchg
negb
das
cs
daa
dec
push
pop
les
jne
cmp
negl
xlat
in
rcl
mov
pop
int3
add
faddl
std
into
dec
jp
mov
lods
add
pop
movsb
mov
das
loop
xchg
cmpsb
xchg
and
add
clc
cmp
roll
ret
push
push
mov
xchg
in
frstor
int
push
pop
jmp
fwait
mov
sub
jmp
cwtl
jl
or
lds
pop
lods
fsts
xchg
fisubrs
clc
push
fildl
fs
mov
push
cmp
mov
fstpl
add
aad
push
adc
orl
ret
add
negl
ja
jne
xor
js
or
add
mov
mov
xor
cmovae
xor
scas
insl
xchg
outsl
decb
or
pop
mov
lret
xchg
adc
cs
jo,pt
call
mov
jns
sub
mov
pusha
insl
cmp
fsubrs
fdivr
test
aad
sahf
xor
pop
xchg
movhps
mov
mov
lret
sbbl
add
call
or
movsb
jne
aad
out
cmp
hlt
sahf
sbb
or
inc
mov
pop
add
jmp
lods
testl
and
xchg
cmp
jno
xor
pop
or
mov
bound
cmp
icebp
sub
shll
mov
lods
sbb
jne
iret
cmpsb
mov
dec
and
dec
inc
and
pop
imul
xlat
dec
int3
ffreep
ret
xorb
pop
shlb
jbe
scas
mov
ss
ret
sbb
lock
fprem1
mov
inc
add
ja
fdivrs
push
sub
outsl
push
cwtl
pop
push
pushf
xor
mov
enter
sahf
push
mov
addl
ret
sbb
mov
jns
mov
xchg
shrl
gs
fdivrl
dec
imul
pop
test
xchg
sahf
dec
es
lcall
stc
in
mov
adc
jmp
inc
cmpsl
xchg
fs
jmp
iret
bound
lea
inc
shll
outsl
icebp
xor
popf
cmpsl
nop
into
mov
shlb
jg
mov
clc
xchg
shrb
pusha
stos
dec
xchg
mov
add
push
aaa
or
or
adc
xlat
in
sahf
call
jge
jmp
sub
je
in
sarl
adc
dec
jae
negb
repnz
xor
aas
gs
jbe
pop
mov
push
in
mov
ret
repz
or
aam
rcrl
cmpsb
popf
mov
xor
cmp
fs
aam
fwait
cwtl
inc
loop
sub
fsubl
jp
pop
or
bnd
push
dec
sub
test
repnz
addr16
cmp
enter
push
xchg
sbb
jp
xchg
fstp
cltd
loopne
lods
push
mov
jle
jae
pop
sbb
test
adc
scas
mov
add
out
cmpb
pop
lods
scas
movsb
loopne
mov
stos
rcl
subb
push
add
cld
xor
inc
sahf
loop
xchg
mov
pop
das
or
jnp
lock
push
xor
push
xor
push
clc
xor
push
xor
popf
mov
xor
fwait
insb
in
fidivs
adc
stc
jl
in
in
lahf
mov
inc
in
add
adc
stos
mov
jbe
in
sti
add
out
inc
dec
adc
push
fcomps
or
in
sbb
and
xlat
out
pop
js
cmp
xchg
sbb
push
ret
sub
jp
mov
rolb
inc
mov
dec
call
push
out
adc
xchg
cmp
gs
dec
dec
or
or
call
sti
in
or
mov
jbe
mov
mov
pushl
insl
hlt
insb
sub
hlt
dec
sub
sti
arpl
movsl
fsubrs
push
test
popf
jno
dec
sub
xor
xor
aam
lret
adc
mov
inc
icebp
dec
pusha
cltd
and
inc
xchg
ljmp
adc
push
sbb
jns
and
or
jge
add
adc
aad
loopne
and
mov
in
addr16
mov
inc
dec
cmp
packsswb
clc
mov
xchg
hlt
out
lahf
lods
adc
push
sub
cltd
push
dec
aam
dec
movsb
cmp
sub
ja,pt
popa
outsb
inc
ja
pusha
aam
ret
xchg
mov
je
outsb
repnz
mov
cmp
add
enter
ja
sbb
loope
mov
push
xchg
jmp
adc
or
call
mov
rcrb
insl
pop
dec
cmp
mov
mov
std
clc
bnd
fistl
adc
insb
sbb
jecxz
dec
jmp
adc
add
jmp
test
sbb
push
arpl
es
jae
jae
xchg
jnp
shlw
js
pop
iret
xchg
adc
movsl
enter
or
out
jnp
inc
call
sub
or
scas
add
loop
sbbl
insb
pop
cmp
push
push
fwait
jmp
daa
movsl
mov
nop
das
aam
push
ret
add
enter
inc
ret
sarb
mov
push
jmp
dec
jge
ja
sub
clc
enter
adc
and
aas
arpl
bound
dec
dec
and
mov
jge
dec
sbb
inc
mov
sub
rclb
stos
pop
scas
fidivrs
add
xor
inc
sub
cmp
jbe
rcl
cmp
popl
into
cmp
cmp
in
or
adc
adc
inc
fs
jge
dec
daa
sbb
adc
adc
pushf
fwait
aam
xor
sbb
add
icebp
jae
icebp
dec
jge
fsubrl
adc
hlt
out
out
cmp
xchg
adc
data16
fwait
clc
lock
xor
es
test
fsts
jno
cwtl
es
jne
cs
cmp
xchg
repz
insb
mov
pusha
loopne
adc
and
enter
lret
adc
adc
int3
push
imul
and
adc
cmpsb
lds
repnz
sbb
xchg
mov
jle
adc
in
std
movsl
push
inc
adc
inc
out
ret
into
and
jae
jns
push
lea
sti
call
loop
mov
lahf
movsl
inc
dec
push
jb
ret
daa
rclb
cltd
adc
aas
sub
push
cmp
push
mov
cli
hlt
movsb
mov
popa
loopne
jno
jnp
mov
dec
outsl
fnstsw
in
stos
xchg
cld
outsb
or
sub
test
add
loop
out
sub
das
into
movsl
cmpsl
pusha
and
sub
test
stos
sub
cmovs
add
xchg
inc
je
add
mov
add
push
push
dec
sbb
xchg
xchg
je
insb
add
addb
rolb
or
adc
jl
xor
imul
push
mov
mov
hlt
xchg
mov
fisttpll
fwait
and
cmp
dec
push
das
aas
std
lret
loopne
dec
cmpsl
shlb
push
test
pop
mov
add
fists
xchg
js
jmp
lret
xchg
xchg
insl
test
test
push
aam
and
push
shlb
in
ljmp
repnz
call
push
enter
sub
fcompl
sub
or
ja
cmp
adc
xor
js
push
rcrb
rcl
push
mov
or
test
cwtl
pop
inc
or
xor
jae
insb
dec
pushf
pop
xlat
mov
outsl
loope
lret
jecxz
ret
adc
arpl
cmp
xchg
insb
sbb
ret
mov
fwait
and
jo
xor
je
aad
bound
jmp
call
pop
data16
cmp
add
jns
and
add
push
push
cmp
sbb
popa
nop
push
add
ror
dec
cwtl
xchg
les
jbe
in
pop
pushf
jl
mov
mov
imul
not
aas
jo
lds
push
test
in
shl
xor
mov
lgs
ret
lret
movsb
jno
sbb
fidivs
cli
push
push
ja
mov
pop
ljmp
or
sub
pop
enter
cwtl
inc
pusha
xchg
shll
pop
fiaddl
pusha
mov
icebp
mov
dec
jp
mov
insb
dec
hlt
adc
mov
inc
push
push
pop
inc
mov
out
sub
jb
add
jns
stos
adc
push
aas
and
js
fbstp
data16
icebp
cmp
dec
lret
stos
jp
lods
test
xor
sti
in
push
xor
add
dec
inc
adcb
sbb
dec
xchg
addr16
xchg
sub
movsl
pop
mov
loop
movsb
push
xor
mov
imul
rol
cmp
jge
in
ret
jp
dec
ss
shl
inc
sub
dec
push
in
inc
jne
dec
dec
les
imul
int3
movl
mov
dec
test
dec
popf
jge
pop
ds
stc
call
add
mov
xchg
jae
aas
pop
outsb
jae
inc
fnstsw
push
jmp
xchg
notb
iret
jl
sub
push
inc
ret
bound
fimuls
or
loopne
loopne
nop
lea
loop
sbb
imul
addr16
test
sub
pop
fistps
inc
ds
dec
mov
dec
mov
testl
int3
ret
push
xor
pop
dec
or
testl
jp
out
dec
aas
sub
and
sti
and
mov
out
addb
movsb
data16
fs
inc
sarl
fsubrl
fcmovnb
lret
mov
mov
sub
gs
xchg
imul
out
clc
inc
xchg
filds
xchg
jp
sub
adc
aam
lcall
in
jo
mov
notl
adc
add
jge
inc
mov
lods
movsb
sti
hlt
aaa
ds
jno
leave
jmp
or
sub
ja
adc
inc
addr16
fsubrs
addb
mov
jl
dec
clc
test
push
jg
mov
fsts
pop
pop
sub
daa
mov
rcl
add
add
shrl
cmpsl
shl
dec
add
xchg
call
mov
ret
mov
stc
test
lods
xor
mov
in
xor
loop
cltd
inc
add
mov
ret
out
aaa
sbb
bound
push
int3
aaa
stc
out
push
or
xchg
mov
inc
sbb
aad
int
insb
push
sub
xchg
je
std
push
lcall
popf
pop
push
inc
xor
cmp
dec
ja
jo
jno
lods
fstl
cltd
or
ss
jns
shl
xchg
loop
and
pusha
aad
adc
jge
ret
mov
mov
xor
xchg
or
mov
cmpsb
insl
pop
mov
adc
pushf
mov
add
aaa
jb
inc
mov
insl
call
and
dec
jecxz
xlat
adcl
int3
stc
shrb
mov
sub
mov
or
adc
push
test
push
scas
notl
nop
cmp
cmpsb
add
lret
mov
xor
js
adc
and
and
inc
ret
push
cmp
data16
push
jle
dec
sub
mov
cmp
jo
stos
and
cs
mov
adc
add
sub
rorb
add
mov
push
push
aaa
arpl
xor
aaa
inc
and
insb
sub
insb
ficoml
dec
or
add
mov
jge
call
push
loopne
ficoms
push
sti
arpl
sahf
push
hlt
in
clc
mov
rolb
lea
or
mov
pop
xchg
pandn
xchg
in
mov
mov
mov
mov
mov
ljmp
lcall
or
xchg
pop
adc
jle
out
mov
pushf
jbe
mov
data16
and
adc
xor
out
mov
negb
adc
sub
push
adc
push
pop
xchg
mov
jae
jno
movsb
pop
or
repz
and
sbbb
jno
mov
nop
jne
xchg
imul
arpl
testl
mov
aam
jne
dec
arpl
jl
pop
add
and
clc
mov
stc
inc
push
push
xchg
out
xor
imul
lahf
add
xchg
stos
pop
mov
in
jge
mov
hlt
sub
movsb
jmp
ja
pop
out
cmp
in
pop
pusha
test
mov
mov
fists
mov
adc
mov
sbb
dec
sbb
xor
ret
push
mov
mov
enter
add
mov
stc
ret
inc
mov
dec
loopne
call
push
jne
loope
and
ss
out
inc
inc
cwtl
das
aaa
sub
inc
sbb
adc
add
push
leave
push
aad
cmovle
lds
xor
int3
ljmp
in
pushf
jbe
pop
push
mov
cmp
data16
int3
inc
andl
into
sbb
pop
enter
jo
fldcw
mov
or
xor
sbb
mov
xor
push
mov
dec
fwait
cli
shlb
test
dec
jle
mov
cmp
mov
mov
iret
mov
lods
xor
bound
std
sbb
outsl
mov
call
add
push
sub
mov
adc
pop
gs
mov
inc
jp
setp
jge
add
dec
and
and
and
fstpl
test
adc
or
outsl
sarl
pop
in
jecxz
push
cwtl
mov
cli
pop
push
das
push
pop
int3
xchg
aad
cmpsl
cmp
das
jae
inc
sti
ljmp
popf
pop
pop
insl
dec
xchg
rorb
ja
in
movsl
add
rclb
in
jb
xor
bound
and
in
jb
sbb
push
cmc
pop
push
les
out
ja
ja
fwait
pop
pusha
mov
imull
jmp
leave
in
fsub
loope
push
pop
mov
popa
pop
xchg
add
lods
mov
stc
xchg
insl
push
not
sbb
test
sub
sbb
shll
or
or
movsl
add
pop
in
xchg
cmp
sub
push
push
add
lock
dec
push
jl
nop
mov
mov
int3
or
push
inc
popf
add
repnz
xchg
jmp
adc
icebp
scas
xchg
jmp
rorl
jno
aad
popa
jmp
pop
cmc
sub
dec
cltd
out
mov
into
sbb
mov
loop
adc
fwait
cmp
scas
lea
sub
or
je
addr16
sti
scas
pop
icebp
popf
pop
mov
add
fsubr
aad
fildl
sub
aas
or
sub
mov
cmp
int3
sti
sbb
inc
ljmp
stc
daa
cmp
clc
cli
bound
aaa
sub
mov
inc
in
outsb
pop
mov
lods
mov
adc
mov
adc
into
arpl
sub
subl
sub
mov
mov
pop
fcoms
xchg
mov
lods
cltd
push
mov
and
cmp
cmp
lds
push
cmovb
or
add
js
roll
xor
imull
mov
scas
scas
daa
mov
ds
cmp
push
mov
test
jl
mov
jge
xchg
xor
pop
fwait
sbb
pop
dec
jp
jno
int3
shll
mov
sub
aas
aas
shlb
imul
or
dec
cmp
stos
adc
clc
xchg
hlt
shrl
xchg
call
dec
mov
orl
pop
dec
and
push
mov
adc
gs
shrl
sbb
adc
imul
pop
and
sub
nop
cmp
ret
and
jbe
pop
push
xor
sbb
add
mov
or
push
pop
outsb
and
stos
dec
stos
add
aas
imul
popa
adcl
adc
bound
and
subl
outsl
subb
xchg
inc
dec
and
daa
aas
cmpb
xor
push
sbb
jmp
sbb
test
aaa
mov
mov
push
cmpsl
xchg
test
ds
mov
outsb
stos
mov
push
aad
sub
dec
rolb
cs
mov
push
add
cmpsl
addr16
or
fwait
cmp
or
pop
movsb
adc
xchg
fildl
inc
sbbl
jmp
js
sub
adc
mov
mov
or
std
cmp
add
add
or
jle
pop
push
xchg
int
inc
mov
cmc
es
in
fcomi
nop
add
lcall
insl
das
popf
shrb
mov
pop
orb
adc
jecxz
movsl
jb
das
sbb
dec
sbb
ss
lret
sbb
sub
negb
sbbl
pop
leave
xor
out
sbb
ljmp
jns
test
out
out
pop
xor
mov
popa
test
int
stos
mulb
jge
inc
out
adcb
imul
div
div
sarb
testb
out
jl
and
loopne
cmove
pop
fbstp
dec
cmpsl
shll
cmc
mov
sub
in
sub
pop
ljmp
cmp
inc
add
jns
add
cmpsl
sbb
fidivrs
dec
div
pop
sub
mov
cmpsl
movsw
jno
and
testl
ds
and
or
push
imul
stos
or
jnp
dec
fmul
in
ljmp
mov
and
inc
subb
mov
cs
loopne
mov
xchg
repz
pop
mov
out
xchg
mov
shrb
xlat
jne
pop
inc
pop
ljmp
add
icebp
mov
ja
inc
shrb
jp
repz
lods
jl
mov
ficoms
sbb
es
push
or
insb
mov
mov
ja
xorb
outsb
dec
scas
dec
push
push
lods
mov
std
cwtl
mov
addl
or
push
aad
add
pushf
int3
and
jge
push
mov
scas
repz
imul
or
push
pusha
cld
aas
mov
int3
pop
mov
loop
sti
sub
popa
mov
push
push
fucomip
push
mov
mov
sub
fnstsw
sahf
mov
cmp
and
test
xor
cmp
enter
jp
rcr
adc
lahf
dec
in
data16
sbb
pop
scas
outsl
mov
xor
out
xchg
jl
adc
jl
andl
mov
push
adc
fldenv
and
push
sbb
out
in
fcmovnu
rcr
mov
mov
xlat
stc
lock
repnz
cmp
insb
cmp
lret
aam
or
or
dec
int
add
fisttpll
sti
add
loop
scas
xor
mov
or
shlb
push
call
clc
lahf
xchg
dec
xchg
sub
ja
add
imul
xchg
push
mov
adc
loop
negl
xchg
lcall
pop
outsb
push
add
sub
leave
dec
or
sub
jo
rolb
icebp
notl
cmc
sahf
dec
inc
push
inc
push
dec
loopne
in
outsl
shll
idivb
lahf
incb
mov
les
or
jge
shr
sbb
mov
jle
jp
daa
fcoml
insb
mov
or
test
pop
push
std
lahf
xchg
das
lock
mov
mov
push
rcr
jne
mov
int3
pop
mov
inc
shlb
aaa
sbb
dec
popf
sub
dec
pop
cmp
mov
mov
fadds
dec
mull
jmp
add
imul
out
ret
xor
flds
scas
arpl
xorl
and
mov
xor
dec
test
stc
rcrl
sub
add
rclb
loope
push
or
jecxz
inc
add
mov
imul
mov
in
mov
sar
inc
push
into
and
movsl
mov
sub
pushf
inc
mov
xor
add
aaa
divb
in
xchg
into
imul
aam
dec
jp
mov
pop
shl
xlat
push
pusha
push
mov
mov
xchg
mov
inc
mov
or
leave
jecxz
iret
adc
xchg
xchg
or
mov
xchg
fisubs
mov
insl
gs
mov
inc
cltd
sarb
iret
aaa
ss
fsubrs
ljmp
inc
push
imul
lcall
mov
stos
hlt
lds
pop
enter
mov
ss
ret
int3
cltd
sahf
incl
ljmp
adc
and
pop
adc
imul
pop
sub
cmp
xchg
jl
adc
cld
repnz
push
jne
or
push
xchg
jmp
pop
pop
mov
daa
mov
pushf
ss
rcr
outsl
lahf
xchg
jecxz
inc
add
cmp
pop
mov
add
pop
adc
adc
jae
loopne
fadds
xor
mov
mov
mov
mov
adc
lods
mov
je
lock
push
pop
out
loope
shlb
inc
cmp
cmp
inc
movsb
mov
and
cmp
seta
outsb
out
jge
pcmpgtw
inc
scas
sub
in
ret
mov
test
push
lock
xchg
xor
test
outsb
sub
sub
loop
outsl
xor
xchg
leave
fcoms
iret
mov
stos
fdivrl
test
sub
cmpsl
jle
mov
xor
out
xchg
jl
adc
jnp
jno
mov
mov
cmp
jo
mov
mov
stos
cli
mov
test
sti
shl
sub
jns
pop
outsl
ljmp
mov
mov
cmpsb
jle
outsb
sub
xchg
adc
scas
push
stos
xchg
lods
dec
pop
popf
jbe
sbb
leave
test
out
sahf
xor
mov
cltd
dec
out
pop
in
jmp
cwtl
xchg
cmp
mov
lret
lret
mov
pop
and
repz
nop
xchg
inc
xchg
inc
mov
dec
jne
scas
inc
in
rcl
je
fiaddl
imul
ja
mov
push
stos
push
sbb
inc
cmp
or
and
jle
rcrl
cmpsb
out
pusha
cmpsb
mov
cmp
xlat
push
shl
jne
movsb
mov
sub
push
sahf
out
vmrun
divb
jno
mov
sub
popf
jae
mov
mov
mov
stos
test
mov
mov
xor
test
outsb
sub
in
jecxz
pop
jp
jno
cwtl
push
out
pop
and
add
es
in
mov
ljmp
aas
ret
mov
out
or
mov
jae
cli
inc
cmp
popf
or
mov
les
jo
out
and
mov
and
aam
adc
pop
lds
jmp
enter
adc
mov
shrb
iret
push
inc
pop
mov
mov
or
lds
in
cmp
sub
jnp
push
push
sbb
and
int
cwtl
xlat
inc
adc
stc
and
into
mov
cmpl
cmp
mov
mov
sti
sub
mov
dec
aam
inc
push
outsb
es
pop
push
daa
cli
push
cmp
xchg
or
js
es
in
mov
ljmp
pop
cmp
cmpsl
sub
push
xchg
push
ljmp
cld
sbb
jbe
out
mov
inc
inc
mov
cmp
dec
cmpsb
mov
cs
out
bound
icebp
lock
and
rclb
pushf
xchg
sub
testl
mov
push
imull
stc
dec
inc
add
lods
mov
push
test
mov
repnz
fistl
loope
mov
jb
inc
orl
stos
sti
adc
or
mov
mov
fistl
cmp
dec
dec
mov
fildll
daa
ret
add
cs
and
outsb
lret
sbb
or
aad
mov
push
fdivrl
sbb
mov
jp
arpl
jecxz
dec
mov
scas
fucomi
xor
dec
adc
pop
aad
popa
inc
dec
mull
xor
inc
popa
dec
rcrl
shrl
jb
out
mull
stos
es
test
mov
pop
fcmovb
lret
cmpsl
aaa
cmp
movsb
popa
mov
cmp
sub
lds
roll
sub
push
push
inc
fsubl
jbe
aad
mov
mov
pop
aam
shll
daa
or
popf
push
mov
push
mov
gs
movsl
add
dec
push
cmp
fwait
jmp
xlat
adc
cltd
cmc
mov
in
sbb
ja
sub
pop
cmp
jp
int3
call
push
test
xchg
xchg
adc
adc
out
jnp
fwait
and
jae
test
outsl
push
xor
cmpsb
leave
cmovae
nop
jnp
push
out
sti
inc
in
aas
sub
adc
mov
aam
test
dec
cmp
mov
in
sub
or
cmp
xlat
cmpsb
ret
adc
cmp
lret
enter
cmp
fs
cli
add
inc
arpl
in
mov
in
mov
mov
cmpsb
test
test
mov
hlt
hlt
jno
inc
inc
mov
insl
dec
pop
iret
ss
adc
mov
daa
bound
inc
outsb
int
pop
into
hlt
stc
mov
mov
fbstp
shlb
adc
test
mov
std
aaa
xor
int
pop
adc
std
repnz
call
sbb
inc
ret
ljmp
int
mov
mov
jecxz
jg
std
sbb
xchg
hlt
adc
mov
sti
repz
cld
or
jne
and
dec
jmp
in
mov
popf
fwait
adc
dec
cvtps2pd
bound
dec
inc
xor
stos
pop
push
pop
pusha
adc
add
pushw
fcoml
cmp
inc
adcl
adc
fnstcw
fimull
out
jno
and
inc
push
sbb
push
and
xchg
push
xchg
pcmpeqw
lea
out
ds
je
mov
movsb
xchg
push
or
or
sbb
inc
or
fsubrs
imul
adc
mov
divl
cmp
divb
aam
or
nop
jge
lds
cmpsb
in
fs
cltd
pusha
mov
data16
fld
inc
adc
outsl
push
sub
aas
cmp
mov
cmc
jb
jg
pop
icebp
xchg
jb
in
or
lock
cmpsb
push
dec
adc
pop
aad
inc
xlat
mov
lret
test
jo
fs
pop
mov
insl
add
outsl
icebp
sahf
addr16
jge
ds
push
xchg
call
lock
stos
xchg
dec
xchg
enter
sbb
or
add
in
mov
mov
movsl
rclb
jecxz
xchg
push
sub
pop
lcall
hlt
lret
mov
popa
mov
mov
xsave
mov
jbe
mov
shll
mov
jl
repz
test
inc
cmpsl
xacquire
pusha
ss
fsts
sbb
test
add
sahf
cmp
jne
arpl
jmp
scas
mov
push
rcrb
nop
xor
test
mov
shrb
fsubl
sahf
push
popa
xchg
xor
or
mov
rolb
stc
and
dec
imul
mov
dec
inc
je
frstor
add
push
add
lds
shlb
inc
rcrl
addr16
std
inc
cwtl
stc
mov
cmpsl
jecxz
dec
in
jp
mov
sbb
mov
ss
scas
adc
sub
xor
or
sbb
fs
xor
sbb
aaa
mov
mov
scas
cmp
sbb
mov
mov
pop
or
inc
or
icebp
cmpsb
and
add
xchg
lea
out
xchg
subps
iret
push
or
adc
pop
jmp
or
or
adc
xor
cmp
stc
xchg
sub
std
dec
push
loopne
rorl
mov
push
xchg
cltd
mov
sub
pop
pop
jle
hlt
jecxz
scas
outsl
nop
jne
dec
mov
cmpl
negl
mov
std
cwtl
jne
cmp
mov
cmc
sub
adc
mov
jns
mov
repnz
iret
clc
cli
jo
leave
mov
and
ljmp
arpl
leave
sub
jp
jbe
cmp
xchg
out
in
pop
mov
adc
dec
pop
out
into
inc
hlt
cmpl
test
xchg
push
push
dec
jp
push
mov
or
jbe
add
inc
insb
lcall
mov
mov
dec
in
xlat
ja
mov
adcl
mov
imul
ja
stc
mov
popf
xchg
xchg
cmp
adc
imul
ret
inc
adc
loop
pop
mov
push
mov
pop
xchg
inc
test
sbb
popf
outsb
jecxz
aam
jecxz
lret
sarl
fwait
dec
push
jmp
gs
mov
sbb
lds
pusha
std
mov
dec
jg
dec
fdiv
movsb
aam
ja
or
dec
xchg
jo
aaa
xor
or
adc
lea
lods
lods
mov
jae
xor
int
fwait
or
cltd
cs
cwtl
pusha
repnz
rcrl
push
fists
daa
sub
mov
mov
out
xor
les
sbb
rorl
pop
jns
jb
das
pop
hlt
je
sarb
test
dec
cwtl
xor
fwait
pop
jns
jae
ret
out
fdiv
or
and
imul
filds
scas
test
sub
stos
iret
pop
jne
mov
fwait
lods
loopne
movsl
sbb
sbb
arpl
xchg
and
ds
and
add
sub
icebp
das
lret
and
sbb
push
in
add
adc
cvtpi2ps
mov
cmp
dec
push
mov
xor
fdivs
mov
out
dec
insb
jge
xor
rcl
clc
or
adc
jg
ss
cmp
cmp
cmpsb
mov
xchg
cmpsl
aaa
cld
adc
fwait
xchg
ja
jp
gs
stc
adc
icebp
lea
fs
xor
push
pop
nop
add
sbb
out
jnp
jo
mov
fwait
popl
pop
pop
mov
hlt
xor
pushf
pop
fwait
movsb
push
lahf
shl
cmp
repnz
aaa
fistpll
jns
cmp
mov
fisubrs
xchg
mov
mov
dec
fucom
jno
or
pop
loope
aam
shlb
jbe
pushf
mov
sti
sbb
popf
xchg
and
mov
adc
cs
cmp
xchg
bound
js
push
gs
mov
inc
sahf
mov
rolb
inc
out
sahf
jge
lock
sbb
add
mov
aas
xchg
sub
push
test
pushf
mov
jmp
mov
mov
sub
adcl
adc
lock
mov
mov
or
pop
ljmp
inc
add
and
aad
stos
jae
inc
mov
outsl
int
int
negb
out
jle
stos
int
dec
add
cmpsb
ret
aas
push
push
xor
inc
mov
in
addb
rcrb
test
leave
mov
xchg
sbb
mov
movsl
add
mov
adc
mov
popa
bound
outsl
movsb
lret
out
pop
cld
add
cmpsb
je
ljmp
lret
dec
in
pop
andb
adc
repnz
lods
bound
adc
pop
dec
add
test
jno
aad
push
sbb
jg
hlt
imul
cmp
jle
push
or
sbb
out
jns
adc
into
pop
xchg
test
mov
jl
shrb
jl
addb
aam
sti
adc
cmp
outsl
roll
outsl
and
gs
push
into
adc
hlt
sub
add
js
addr16
sbb
mov
hlt
test
push
jns
lahf
push
mov
ja
gs
fucomip
int3
and
pop
sbb
pop
dec
mov
test
mov
in
or
inc
lahf
cmc
mov
jge
dec
cmp
or
aas
dec
and
dec
ljmp
rolb
and
stos
shll
js
jnp
jo
jge
adc
mov
jl
sbb
or
in
mov
cmp
dec
imul
push
cli
notb
mov
xor
lods
and
enter
in
adc
cmc
xchg
cld
fbld
cmpsl
or
sub
mov
dec
aam
inc
xor
pushl
push
ja
out
pop
and
adc
sub
and
sub
scas
test
dec
ds
pop
push
loop
pop
andb
fst
insl
push
cwtl
adcl
push
movb
rcrb
fs
aas
push
orl
xor
dec
jmp
aas
popa
andl
jl
adc
cmp
test
add
jl
fsubs
das
pushf
cmovge
or
pop
cmp
and
out
aas
icebp
daa
fiaddl
shlb
inc
mov
pop
mov
sub
enter
jecxz
xchg
aam
cld
outsb
push
fst
xor
cmp
jp
stos
cmp
sub
push
int3
mov
fwait
sbb
sbb
ret
cmp
popl
cmpsl
sub
adc
clc
sub
sub
push
filds
xchg
xchg
mov
add
popf
push
cmp
xchg
aam
add
push
movsb
loope
sbb
mov
xor
in
jns
pushf
cmpb
sub
jo
mov
xchg
sub
add
fsubl
dec
jp
imul
fstp
imul
lds
pushf
xlat
cmp
out
inc
pop
mov
pop
push
arpl
mov
out
pop
xchg
nop
mov
cs
mov
mov
ss
ds
sbb
xchg
cltd
lds
jo
insb
insl
push
mov
jae
ja
sbb
out
or
lret
jl
out
gs
pop
push
dec
mov
jnp
ret
mov
add
repz
fcoms
sub
clc
push
pop
xor
in
pop
inc
mov
fstl
and
jge
sub
jnp
stc
push
insl
and
addr16
int
clc
ret
sub
sahf
cmp
push
jbe
sub
rclb
shlb
rcl
iret
push
mov
cltd
jbe
push
push
popa
and
jge
sarb
nop
mov
sub
push
mov
stos
xor
mov
cmp
lret
in
icebp
and
icebp
addr16
test
adc
jns
das
sbb
push
push
cwtl
icebp
adc
mov
cwtl
pushf
fcompl
xchg
test
mov
sarb
xor
mov
or
daa
mov
aas
lret
sbb
sub
fisubl
scas
dec
inc
sbbb
xor
jne
cmp
cs
and
outsb
or
or
jmp
jae
mov
push
or
loope,pt
lds
mov
and
pop
divl
xchg
dec
scas
add
push
sub
mov
mov
sbb
or
or
in
pop
aam
shll
js
aaa
jge
lahf
adc
jb
adc
mov
jl
sbb
or
lahf
jno
push
lods
dec
scas
adc
mov
mov
xor
lods
and
enter
in
adc
cmc
xchg
cld
fbld
cmpsl
or
sub
mov
dec
aam
inc
xlat
pop
push
mov
sbb
int3
xchg
xchg
inc
adc
orb
mov
mov
mov
jp
push
xorl
adc
hlt
andb
push
fs
inc
lret
sbb
decl
outsb
sahf
andl
jns
das
mov
lods
in
lret
cwtl
lret
je
mov
test
push
dec
jne
clc
mov
xor
pop
fidivs
mov
ret
repnz
mov
jo
lods
add
push
push
fabs
xor
push
jnp
call
push
and
pusha
xor
mov
inc
decl
pop
sbb
xor
mov
stos
fists
arpl
cmp
outsl
roll
aad
repnz
mov
ss
stc
ss
pop
inc
iret
lds
xchg
lar
adc
scas
and
shll
stc
jns
cli
leave
lods
daa
fildl
xor
sub
jmp
gs
and
inc
push
mov
arpl
fs
adc
jecxz
and
xorl
pop
pop
pop
outsb
mov
icebp
pushf
inc
push
mov
dec
outsl
out
xchg
in
fwait
pop
sbb
jge
lds
insl
test
cmpsl
push
iret
leave
add
xor
add
cli
sub
xchg
test
rcll
in
push
mov
push
adc
jge
dec
es
in
test
mov
mov
pop
pop
jge
inc
add
arpl
mov
adc
mov
push
push
je
fistpl
or
jl
clc
mov
sub
jae
cmp
mov
addr16
add
mov
sbb
push
or
imul
jns
jbe
fcmovb
lds
cmp
add
mov
xchg
pop
addr16
mov
ljmp
sbb
cmovne
lcall
fdivrs
into
mov
adc
testl
gs
jae
iret
mov
std
adc
adc
sbb
add
je
mov
enter
mov
pop
sbb
xchg
add
repz
scas
test
fwait
repz
sbb
mov
int
stos
sub
xor
xchg
stos
sarl
mov
call
aad
lcall
mov
nop
mov
push
adc
testl
test
andl
xlat
jp
xchg
hlt
imul
insb
cmp
pushf
arpl
test
pop
adc
sbb
lods
aam
push
pushf
cmp
loop
in
movsb
cmp
jns
lds
mov
mov
stos
jb
push
jecxz
fcoml
adc
jg
sbb
bound
popa
sub
daa
and
dec
scas
fcmovb
fwait
dec
repnz
or
add
cmc
pop
jp
test
andl
xlat
jno
imul
xor
arpl
sub
sbb
hlt
mov
pushf
inc
fistl
add
cli
ss
and
cwtl
xor
mov
lret
sbb
jmp
sbb
ret
lds
sbb
into
push
loope
mov
daa
and
dec
scas
fisubrl
pop
mov
and
mov
dec
lea
pop
sub
push
movsl
pusha
xor
aam
test
ja
lock
inc
push
fwait
in
filds
notl
sbb
leave
jne
lock
push
lret
jnp
cmp
mov
xlat
push
push
xchg
dec
rorl
dec
arpl
stos
clc
ljmp
nop
cmp
nop
imul
enter
dec
xorb
call
shr
in
push
aam
add
jg
adc
test
mov
stos
push
cltd
adc
lods
add
cmpsl
insl
mov
sub
pop
push
in
call
sub
jmp
adc
cmpb
cmc
add
sbb
dec
je
push
pop
jae
cmpsb
xor
daa
sub
test
mov
xor
adcl
stos
aas
pop
mov
adc
push
dec
dec
sub
add
inc
faddl
frstor
pusha
js
imulb
push
jg
mov
adc
sub
inc
cmp
movsl
mov
mov
mov
mov
test
xor
mov
push
or
jne
loopne
push
push
fcmovnu
pop
test
int
das
inc
int
jnp
es
repz
jmp
xor
ret
and
fsubrs
pop
int3
out
push
popf
ret
mov
xchg
das
fcompl
stos
jge
xchg
lock
adc
push
sub
je
jle
pop
js
jecxz
sub
int
sar
sbb
sub
movsl
and
in
leave
dec
fmulp
mov
pusha
lods
or
lock
out
push
mov
pop
pop
jge
sub
inc
inc
jecxz
addr16
dec
and
xor
call
add
mov
pop
inc
es
sub
and
pop
cmp
mov
sub
std
fs
cltd
xorl
adc
and
dec
sbb
mov
mov
sbb
imull
cmc
mov
add
dec
pop
inc
dec
mov
dec
inc
sbb
fildl
shll
xor
xor
sbb
movsb
lret
outsb
iret
or
xchg
sub
sub
clc
jmp
xor
sub
out
dec
push
inc
repz
pushf
lods
add
push
lods
xchg
jb
adc
cmc
mov
adc
add
mov
inc
mov
pop
out
mov
xlat
into
sub
xor
sub
pushw
popf
and
xchg
inc
mov
push
xchg
cmp
mov
and
loop
xchg
lds
addr16
cwtl
sahf
dec
and
lock
push
mov
subb
pop
adc
imul
outsb
inc
or
icebp
cmp
or
pop
fidivs
mov
fldl
adc
xchg
out
sub
lods
ss
movsl
dec
mov
test
pop
sub
inc
dec
and
test
dec
adc
das
loop
lds
aam
stc
jae
pop
pop
nop
stc
dec
mov
enter
movsl
mov
jecxz
mov
and
test
mov
push
pop
dec
iret
fistl
mov
ret
inc
adc
dec
lret
cmp
inc
decl
fwait
test
jo
sub
es
sub
in
clc
add
xchg
lds
repnz
push
mov
lods
loop
pushf
dec
mov
xchg
lret
jecxz
hlt
xchg
mov
mov
insb
outsb
inc
or
icebp
cmp
sbb
cmp
lret
sbb
jns
ret
mov
dec
mov
test
shlb
sub
and
cmpsb
out
xchg
xcrypt-ofb
cmpsl
outsb
in
lds
sub
and
mov
pop
loope
sbb
leave
fcoms
iret
mov
ljmp
test
movsl
mov
lcall
xor
pop
stos
testb
in
pusha
rorl
pop
and
sbb
cmpsl
or
xor
inc
cmpsb
mov
lods
dec
popa
pop
push
push
push
push
mov
fnstcw
pop
or
mov
cltd
sahf
incl
lea
inc
scas
xchg
push
pop
ja
push
jno
out
push
push
pushf
xchg
xor
test
outsb
sub
insb
mov
out
filds
push
or
and
push
lea
xchg
dec
xchg
dec
out
mov
add
sub
push
push
mov
add
inc
add
mov
pop
sub
adc
out
fdiv
mov
cmpsl
movsw
jno
inc
xchg
aam
sub
outsb
xor
ret
pop
aaa
shll
pop
pop
xchg
lret
adc
add
adc
cltd
sbb
push
aas
lret
sbb
arpl
scas
pop
or
lods
fstl
inc
jp
std
xor
aam
mov
adc
sbb
sbb
sbb
in
rorl
or
pop
test
inc
sbb
adc
push
in
fcompl
rcrl
mov
sub
mov
ficomps
fwait
pop
arpl
loop
push
lods
psrld
cli
mov
inc
lods
arpl
cmp
add
sqrtps
repz
sahf
sub
push
negl
clc
adcl
mov
push
pop
xchg
movsl
ds
push
inc
and
mov
in
test
mov
jne
lock
sbb
push
addr16
lret
push
ret
dec
sbb
adc
lcall
leave
call
mov
fdivrp
repz
xor
adc
jle
inc
daa
flds
fildll
sar
ret
or
cltd
out
mov
mov
popa
pop
push
push
push
push
mov
adc
into
mov
xchg
repnz
jg
and
scas
mov
cs
ss
jno
mov
xor
xchg
adc
fsub
hlt
jb
push
lahf
cmpsb
js
addr16
popa
pop
push
push
push
push
mov
fnstcw
pop
or
mov
cltd
sahf
incl
fstpl
push
sub
mov
sbb
fcomps
mov
mov
les
inc
andl
sti
shll
shrl
lds
push
repz
jecxz
cmc
cwtl
je
movsl
cmc
popa
mov
xchg
out
add
jnp
mov
jae
sub
jb
inc
test
push
mov
lcall
sbb
stos
ficoml
movsl
pop
scas
jae
in
cmp
popa
mov
sbbl
sahf
inc
push
push
mov
dec
movsl
ds
push
inc
and
mov
sbb
push
mov
sub
mov
push
sbb
bound
loope
sub
test
lods
mov
cli
add
pop
mov
jle
movsl
push
cmp
xchg
sbb
cmp
in
mov
pop
jns
mov
pop
in
xchg
rcl
jle
adcl
jp
mov
lret
sbb
aam
in
push
sub
icebp
fisubs
jno
inc
lods
sub
jl
movsl
mov
jno
cmp
lret
mov
mov
jnp
mov
dec
mov
loop
inc
xchg
pop
push
jl
cmc
pop
rcrb
mov
into
mov
hlt
andb
jg
inc
and
jne
and
stc
inc
adc
lds
push
push
adc
lock
xchg
adc
or
inc
aad
pop
xchg
xchg
mov
aad
daa
inc
add
add
mov
js
addr16
popa
pop
push
push
push
push
mov
fnstcw
pop
or
mov
cltd
sahf
incl
lea
xchg
add
cmp
bound
push
fdivrp
mov
adc
movsb
imul
je
repnz
add
push
test
out
sbb
pop
loope
jno
push
xchg
xor
rolb
out
insl
idivb
mov
sbb
pop
fwait
imul
push
push
pop
adc
cmp
sub
add
movsb
jno
dec
mov
and
mov
shlb
jo
mull
mov
and
and
add
and
sub
jp
fxtract
pusha
pushf
inc
je
pop
les
push
push
andb
mov
and
or
mov
dec
cs
ds
add
adc
add
shlb
repz
xor
jnp
insl
insb
sbb
and
ret
mov
ret
imul
insb
out
ss
leave
adc
inc
in
dec
push
iret
fwait
cmp
jecxz
mov
das
dec
mov
cli
inc
shl
jmp
push
adc
mov
adc
std
cmpsl
jbe
outsl
cli
aad
out
out
dec
fistpl
outsb
dec
pop
push
rclb
or
pop
xor
fwait
dec
xchg
jmp
jp
cltd
mov
pushf
inc
cmc
xor
ja
in
jo
push
mov
rcrb
xor
lds
jbe
push
pop
lds
or
icebp
pop
pop
out
ljmp
in
das
cmp
loop
pop
xorb
cmpsl
dec
or
rcr
cmp
aam
sar
adc
or
stos
loopne
inc
jg
sbb
mov
test
push
and
data16
andb
testb
cs
sub
repnz
cmpsl
dec
or
sti
movb
lds
adc
in
idiv
fsubp
or
sub
mov
fs
inc
sbb
pop
mov
sarl
test
mov
push
loop
cwtl
dec
push
fwait
pop
aad
xchg
cmc
sbb
cltd
lods
adc
add
adc
push
xor
cmp
outsb
dec
pop
push
mov
sbb
bound
adc
ret
iret
roll
ds
lods
insl
test
addr16
dec
xor
out
mov
push
pop
enter
add
inc
addr16
dec
jg
aas
push
pop
sarl
into
pushw
push
jae
xorb
xor
dec
dec
mov
dec
lea
cs
les
cltd
mov
dec
fwait
mov
outsl
xor
add
pop
ret
or
jb
dec
sahf
adcl
and
insl
push
daa
push
in
mov
lea
addr16
adc
mov
sub
test
mov
inc
iret
stos
movsl
rep
xchg
push
pop
pop
mov
mov
dec
jmp
mov
insb
repnz
fwait
rolb
fwait
out
stos
inc
popf
scas
test
or
mov
cmp
mov
clc
imul
rclb
xor
and
xchg
jo
xchg
inc
pop
lahf
mov
mov
sub
push
pop
aad
mov
insb
cmc
or
inc
pop
push
shrl
pop
sbb
mov
dec
inc
xchg
adc
shlb
sub
mov
dec
aam
inc
shrb
loopne
push
xchg
sub
pushf
adc
test
cli
mov
dec
andl
push
cmp
fdivl
out
xor
ja
loope
outsl
addl
push
mov
stos
xor
mov
cmp
lret
in
icebp
and
icebp
addr16
mov
das
lret
mov
aaa
push
insl
mov
das
inc
int
jnp
es
repz
jmp
xor
ret
add
jle
aad
inc
shl
or
inc
jmp
add
push
sub
in
aas
mov
push
es
pusha
push
out
push
loopne
inc
dec
adcl
push
sub
xor
dec
movsl
data16
sarb
dec
add
add
les
pop
jns
sarb
push
push
push
sbb
and
jmp
daa
xor
xor
leave
and
sub
sbbb
jbe
or
mov
test
fs
dec
fwait
xor
sub
roll
ds
lods
insl
test
addr16
dec
xor
lcall
cmpsb
mov
stc
mov
test
in
imul
loopne
mov
pop
int3
out
movsl
jnp
pop
mov
ja
jb
push
xchg
xor
push
dec
pop
push
sbb
jge
aad
jmp
sarb
or
xchg
scas
in
int
jp
shlb
sti
sbb
orb
push
fmulp
push
pop
mov
mov
dec
mov
sub
or
testb
fisubl
pop
mov
push
xchg
fsubr
test
shlb
mov
lea
adc
daa
dec
or
stos
cmp
mov
sub
mov
pop
es
das
addb
test
inc
or
mov
imul
cs
mov
push
cmpsl
adc
push
inc
mov
adc
push
sbb
pop
arpl
out
repnz
cmp
add
fidivrs
xchg
shlb
mov
aas
lret
cmp
sbb
and
frstor
faddl
mov
cmc
add
jge
add
push
iret
loopne
dec
fwait
pop
xor
dec
scas
inc
lcall
cwtl
mov
mov
jecxz
xor
test
cmpsl
cltd
jecxz
add
adc
mov
and
pop
jge
test
in
outsb
push
cs
test
mov
jno
mov
push
insb
add
in
xchg
or
insb
xchg
push
inc
adc
dec
ja
mov
pusha
cmp
mov
adc
arpl
orb
mov
fldl
mov
sub
xlat
xchg
or
inc
push
jmp
cmc
adc
or
ss
or
das
mov
mov
loop
add
repnz
hlt
adc
cwtl
and
js
push
cmpb
cmpsb
fxch
cmp
arpl
or
shlb
dec
push
hlt
mov
in
out
jg
xor
stc
aad
sub
imul
pop
les
mov
mov
mov
push
mov
add
and
ror
stos
pop
sub
std
xor
ljmp
fucomi
or
testb
jl
jns
gs
pop
fistl
enter
push
pushf
and
jecxz
mov
cmp
xor
dec
mov
xchg
sub
sbb
mov
mov
inc
add
ljmp
xchg
cmp
je
addr16
push
cmc
pop
mov
add
mov
insb
ret
xchg
into
xor
mov
and
jbe
push
add
lock
repz
out
pop
inc
repz
scas
or
adc
push
leave
xchg
imul
adc
or
xchg
jo
cld
add
xlat
loopne
stc
std
xchg
sbb
jg
and
daa
dec
cld
dec
call
pop
lods
movsb
pop
mov
adc
cmpsl
pop
lods
inc
sbb
shr
dec
dec
and
sub
sub
leave
lahf
mov
fsubrl
pop
test
roll
jns
lret
push
push
scas
cmp
pop
popf
pusha
sbb
pushf
das
call
mov
sbb
inc
cmpsb
push
rorb
ds
gs
sti
lcall
inc
std
sbb
sbb
out
sbb
jle
xchg
xor
lods
in
mov
imul
cs
xchg
addr16
addl
negb
std
lahf
inc
and
repz
fisubrl
popa
popl
aas
je
dec
je
stc
jbe
cli
cwtl
pop
mov
add
in
add
mov
push
add
jp
mov
rcr
stc
mov
aam
ret
fisubl
je
inc
mov
cmc
sub
loopne
push
sbb
scas
mov
push
push
sbbb
or
popf
xor
xchg
mov
cmp
mov
arpl
pop
xchg
push
outsb
jnp
lret
xor
jecxz
imul
stos
popa
fnsave
mov
mov
aaa
or
out
and
jbe
push
movsb
dec
sub
jge
adc
ret
pushl
cmp
ret
incb
pop
pop
insl
dec
add
jbe
repz
ror
hlt
xchg
cmp
push
xchg
mov
enter
pop
pop
out
sub
in
adc
rolb
inc
dec
stos
insl
jp
mov
pop
mov
loopne
push
xchg
cmp
cwtl
pop
push
int
sarl
dec
addr16
inc
enter
cwtl
xor
and
pop
pop
test
push
pop
adc
pop
cmp
add
in
dec
stos
leave
pop
rolb
repnz
scas
xor
nop
imul
jmp
lods
and
push
in
mov
lcall
sbb
sarb
mov
add
scas
iret
je
push
mov
pop
test
into
jp
xchg
xchg
inc
pop
mov
lcall
into
je
or
jg
dec
pushf
les
push
movsl
mov
push
lahf
pop
mov
or
inc
sub
lret
jg
ss
pop
stc
daa
ja
push
adc
in
iret
inc
dec
and
fisttps
inc
xchg
fstpt
jbe
inc
sbb
fwait
sub
xor
xor
jno
lret
nop
jb
cli
and
in
pusha
xor
fcmovnbe
pop
aaa
mov
push
adc
insl
jae
cmp
jle
xchg
stos
cmpb
inc
xchg
mov
push
shll
stc
iret
inc
out
jne
les
mov
adc
outsl
std
inc
inc
pop
bound
jno
cs
push
mov
fdivs
fwait
jb
fs
inc
jns
or
lea
adc
frstor
xor
aad
repz
inc
into
fistps
fs
pop
lcall
stc
jbe
jl
add
loope
rorb
push
and
pushf
lock
hlt
stos
xor
jmp
mov
out
xor
sahf
pop
inc
jo
fwait
sbb
popf
in
xchg
dec
fmuls
movsb
and
sar
push
fwait
ret
popf
gs
inc
adc
cmp
or
xchg
mov
mov
scas
fsubrs
xchg
mov
push
flds
jecxz
lret
push
scas
pop
test
lret
cmp
mov
mov
cld
test
pop
inc
jg
dec
fcmovb
movsb
xchg
mov
stos
or
xchg
movsl
cwtl
orb
popf
out
dec
dec
or
pop
ds
leave
mov
ss
fcom
fsub
mov
test
lea
pop
push
scas
stc
ret
jle
mov
ror
test
push
in
repnz
repnz
pop
jp
nop
xchg
and
insl
cmp
add
inc
sbb
xor
rolb
lds
add
hlt
inc
inc
sub
int
sahf
and
popf
ds
jmp
lods
in
test
and
rcrb
mov
mov
decb
mov
dec
sub
mov
adc
insb
mov
imul
mov
jnp
xor
aad
aam
sbb
jp
shrl
and
fdivr
and
mov
add
pop
into
sub
mov
loop
and
mov
lock
or
push
jmp
lcall
lcall
int
scas
mov
mov
dec
movsb
fisubrl
cmp
cmc
mov
mov
hlt
jnp
loopne
cld
sub
xchg
loope
mov
xor
js
sub
aaa
lret
add
mov
cltd
mov
stos
and
push
dec
clc
std
adc
sub
out
adc
sub
ljmp
or
test
jb
shll
mov
pop
dec
jmp
add
mov
imul
mov
sahf
fistpll
iret
or
add
ret
sub
in
sbb
mov
mov
jp
lcall
inc
in
mov
sub
mov
mov
mov
testl
adc
sub
dec
xchg
movb
test
adc
movsl
and
adc
imul
js
int
jno
add
xchg
frstor
pop
int3
int3
js
bound
bound
or
arpl
sub
sbb
pop
and
pop
cmp
insb
dec
push
loop
jb
movl
and
pushf
sub
mov
loop
idivb
dec
lret
ja
test
inc
and
shl
pusha
push
scas
mov
cmc
push
leave
mov
mov
nop
cmp
pop
mov
fnsave
enter
enter
lods
push
pop
dec
lret
or
cs
jg
mov
mov
test
icebp
pop
test
mov
jmp
je
jbe
mov
call
lds
sub
dec
sbb
fbld
rcr
sti
adc
out
and
push
repz
sub
push
daa
daa
sbb
jp
out
adc
add
xchg
inc
or
dec
pop
repz
aaa
xchg
jae
fistpll
push
jnp
in
xchg
roll
xchg
pop
sub
push
popf
xchg
jne
stc
mov
xor
jecxz
pop
mov
push
sub
cmovge
daa
inc
pusha
ss
into
out
and
scas
test
jne
js
dec
ja
inc
push
push
in
sub
cmpl
lock
mov
jo
out
lret
lret
inc
mov
jmp
ficoml
xor
mov
test
iret
xchg
insb
lahf
sar
jle
lahf
dec
xor
es
and
push
cli
adc
loope
ret
std
shlb
pop
inc
cmp
xor
push
pop
jne
repnz
and
cmc
push
xchg
and
adc
mov
or
orl
call
or
pop
ds
into
lret
push
xchg
cmc
mov
loop
ret
jge
push
inc
cmp
ja
cltd
iret
loope
test
das
sbb
jg
xor
jmp
in
popa
inc
sahf
adc
mov
sti
adc
jo
mov
shl
data16
add
jg
xchg
daa
push
lahf
bnd
mov
test
sub
call
test
xor
fs
sbb
mov
pop
std
das
rclb
xor
mov
fwait
adc
adc
sbb
pop
adc
push
movl
cmpsl
mov
lret
mov
push
mov
test
addr16
sbb
sbb
testb
aad
and
roll
pop
lods
add
or
data16
sbb
lret
loope
mov
push
xchg
and
ljmp
jg
aaa
stc
lret
and
cltd
mov
icebp
adc
pop
pop
ret
sbb
in
mov
nop
jmp
cmpsl
in
std
push
sarb
xor
or
addr16
cs
jg
mov
inc
arpl
xchg
in
mov
jg
lret
fdivl
jge
lret
jle
pop
aam
sub
push
cli
call
lock
push
lock
dec
stos
mov
push
and
insb
jae
sub
jmp
arpl
aas
pop
lret
sub
insl
test
lods
jg
mov
push
cmp
shll
pop
jb
jae
pop
push
ret
addr16
xor
insb
test
movsl
inc
cltd
mov
jbe
adc
lods
shr
mov
mov
inc
mov
call
inc
repnz
and
jg
xchg
fdivs
rolb
in
icebp
push
inc
in
dec
fs
inc
imul
lret
call
adc
adc
push
sub
xchg
push
adc
xor
ret
ss
jne
pop
dec
fldz
jmp
jns
sbb
les
mov
dec
or
cltd
push
inc
mov
jecxz
lahf
xor
inc
out
iret
or
adc
roll
sub
and
test
or
lea
pusha
outsb
stos
sub
sbb
inc
stos
pop
jmp
data16
mov
pusha
lahf
out
inc
add
adc
out
push
jg
push
xchg
cmp
sub
cmp
mov
mov
icebp
xchg
icebp
add
imul
cmp
std
test
or
movsb
ds
mov
cmc
add
jne
test
jmp
mov
out
ja
call
mov
jle
or
xchg
shll
jne
mulb
incb
rcrb
stos
fcoml
xor
stos
cmp
shrl
add
leave
xorb
lds
pop
aaa
add
mov
push
lods
or
fs
xchg
jo
xchg
outsl
int
loope
shrb
sti
inc
fwait
inc
insb
es
or
pushf
ds
mov
mov
push
sbb
cmp
flds
push
add
fcmovnbe
aaa
inc
out
mov
pop
push
aas
or
pusha
mov
cmp
lods
call
and
push
pop
das
mov
rolb
sbb
inc
cli
mov
pop
data16
scas
mov
lds
push
push
dec
mov
loope
jne
imul
out
adc
mov
pop
mov
cmpb
sbb
sbb
inc
sbb
pop
pop
out
lret
xor
pop
push
adc
cld
lock
sub
jns
cmc
mov
push
fld
lea
repnz
adc
hlt
add
mov
add
cltd
inc
and
xchg
in
fidivrs
mov
inc
call
dec
add
add
shll
lods
dec
aam
mov
dec
adc
les
out
lds
lds
out
xchg
cs
pop
dec
int3
cmp
repz
cltd
mov
outsb
xchg
lcall
push
add
and
mov
push
nop
shl
mov
inc
pushf
lahf
add
out
pushf
xor
xchg
nop
cmp
push
jne
pop
ljmp
lock
iret
sub
or
inc
ja
add
push
aam
lcall
dec
movsl
jo
loope
aaa
jns
cmp
imul
xchg
jl
or
jge
push
cmp
fistps
ds
dec
pop
dec
push
scas
std
pusha
ret
mov
mov
jne
cmp
aas
rcrl
jmp
sahf
mov
mov
dec
cmc
call
cmp
adcb
or
test
pop
add
lcall
adc
decb
stc
lods
fcomp
rorl
sbb
sub
push
adc
in
cwtl
pop
xor
jmp
scas
in
into
lods
dec
sti
mov
fidivl
aam
pop
into
xchg
push
imul
and
push
ficoms
and
jno
jge
inc
arpl
cmp
mov
xchg
mov
push
mov
mov
or
inc
xor
stos
pop
orb
adc
add
jp
sbb
out
dec
xchg
lcall
cs
mov
loope
xchg
inc
or
cmp
jecxz
push
mov
ja
cmp
loope
scas
bound
ficoms
aas
dec
pusha
pop
fcoml
sbb
and
pop
jp
cmp
mov
mov
add
xor
pop
adc
inc
pop
adc
ljmp
pop
stos
and
or
mov
ds
push
xchg
jl
nop
push
dec
sub
mov
xlat
sbb
pop
es
loope
lcall
out
add
into
in
and
or
push
fs
cmp
adc
cmpsb
adc
push
mov
rcll
dec
test
pop
ret
sahf
dec
clc
insb
sbb
cld
mov
pop
test
mov
jo
dec
insl
adc
cmp
mov
loope
sbb
leave
dec
dec
hlt
mov
xchg
push
or
popf
inc
or
add
je
xor
sub
xchg
fstl
xor
fcoms
mov
clc
fiaddl
pushf
adc
and
mov
dec
mov
repnz
cwtl
mov
int3
push
js
sbb
xchg
jg
and
call
je
popa
std
js
jo
popa
cmp
fisttpll
fwait
mov
adc
pop
xor
ret
cmp
and
dec
jmp
sub
sti
movsl
xorb
jne
mov
xor
rcrl
daa
xor
or
fs
stos
mov
inc
xchg
cltd
adc
idivl
ret
push
sbb
ret
mov
mov
or
mov
in
dec
icebp
mov
fnsave
mov
iret
or
push
popf
divb
cld
jo
lods
and
enter
bound
decb
push
push
pusha
xor
loop
or
hlt
adc
int3
mov
mov
fwait
xchg
inc
sbb
test
repnz
nop
sbb
push
jg
popa
push
sub
ret
imul
jg
and
mov
push
lock
and
iret
out
aad
inc
lds
push
or
rorl
jns
popf
jae
pop
ret
jmp
xchg
add
data16
lds
cwtl
jge
inc
cs
leave
inc
pop
mov
jae
push
pop
pop
sub
lahf
cld
pop
push
and
cmp
test
jno
popf
flds
cli
js
notb
mov
cld
repnz
mov
idivl
xchg
dec
fs
test
sub
jns
cld
cmp
sbbl
mov
lds
mov
sbb
push
cmpsl
enter
js
pop
les
shll
fidivs
imul
arpl
ror
and
pusha
mov
adc
repz
inc
stos
sahf
daa
mov
test
sbb
xor
js
out
jno
ds
mov
xor
jne
xor
jg
lahf
xor
shrl
inc
mov
add
mov
test
dec
stc
fmull
js
orl
pushf
mov
stos
ljmp
adc
push
pop
adc
push
dec
cs
lret
lds
addr16
add
lds
cltd
cmp
call
push
inc
add
sub
rorb
lock
jecxz
add
jnp
push
or
or
addr16
clc
sub
inc
out
shl
adc
sti
movsl
jb
rclb
fwait
sub
lcall
push
push
rcll
and
ljmp
mov
aam
and
insb
ror
jp
in
out
insb
stos
fxtract
pop
cltd
movsl
data16
mov
popf
cmp
mov
add
test
xchg
pop
adc
pop
and
das
das
roll
test
pop
inc
xchg
and
inc
mov
rcll
stos
sub
xchg
mov
adc
lcall
je
das
jmp
and
adc
insb
movsl
lods
push
push
into
add
sub
pop
xchg
adc
sahf
int3
das
adc
pop
int3
xchg
rcl
arpl
pop
and
cmpb
cmpsl
imul
aad
adc
imul
lcall
mov
iret
popa
outsl
dec
cmp
and
inc
les
mov
mov
insl
mov
jmp
jp
fwait
adc
adc
xor
pusha
jmp
inc
pop
lret
jne
rcrl
mov
mov
dec
aam
sub
cld
clc
in
push
and
ljmp
push
jbe
mov
fdivl
iret
cmp
and
and
aam
cmp
mov
mov
out
add
aas
jl
rolb
mov
adc
incl
adc
adc
xchg
mov
sarb
jns
loopne
dec
sbb
icebp
je
mov
shrb
jbe
adc
mov
bound
data16
lock
inc
lret
loope
fdiv
aas
dec
arpl
xor
xlat
fmul
out
push
scas
push
push
xchg
adc
cs
fwait
std
jnp
fisttpll
sub
test
int
ja
jg
es
xchg
addl
lods
jl
jnp
push
xor
aas
jns
xchg
push
xchg
mov
fstps
hlt
cmp
addr16
es
pop
shld
bound
push
test
push
shlb
add
or
ret
or
dec
or
push
jne
and
fldt
adc
jg
in
adc
mov
or
inc
or
leave
aaa
lds
sbb
lods
rcrb
mov
mov
mov
mov
pop
push
fildll
mov
dec
iret
dec
fld
in
push
or
call
int3
cmp
jecxz
movd
out
ds
pop
sbb
pop
and
mov
mov
stos
push
or
cmpsb
ds
orb
add
push
arpl
cmc
mov
and
pop
shrl
fmuls
xchg
fwait
dec
jns
sbb
movsl
hlt
sub
mov
jae
fcoms
inc
pop
pusha
sbb
pusha
test
pop
lcall
cwtl
ja
mov
lahf
jae
adc
xchg
mov
insl
jns
movsb
xchg
shlb
push
xor
xchg
out
jl
xchg
cmp
pushf
add
arpl
pop
pop
add
pushf
inc
adc
push
dec
xor
jge
xchg
dec
ja
sub
dec
mov
scas
jle
mov
cli
rolb
xchg
pop
adc
pop
mulps
and
pop
xor
dec
mov
fsubl
mov
ja
insl
in
dec
icebp
jge
es
xor
js
mov
mov
imul
lock
in
inc
sbb
mov
in
xchg
jecxz
add
pop
dec
aam
ds
mov
dec
mov
cmp
adc
add
cmpl
cmpsb
pop
mov
adc
jge
mov
inc
test
clc
loop
xchg
lahf
inc
pop
pop
dec
mov
test
jns
addr16
mov
mov
adc
out
bound
pop
into
dec
or
mov
stos
mov
pushf
into
jmp
jl
pop
dec
loope
mov
mov
sub
fstp
ret
xor
adc
int3
ror
jno
cmp
scas
mov
stos
inc
into
ss
jg
and
lret
repnz
xchg
cli
sub
xor
or
ja
sbb
mov
push
lahf
adc
mov
shll
adc
pushf
testl
loope
cmc
mov
mov
pop
sbb
stos
mov
xor
pusha
outsl
aaa
int
jne
and
cwtl
or
push
stos
out
addr16
or
inc
mov
pop
lock
insw
cmp
inc
inc
jmp
push
sbb
test
mov
mov
das
test
jle
decb
jecxz
mov
icebp
push
and
push
add
pop
add
fs
lret
push
pop
add
jle
rorl
mov
mov
add
dec
xor
pop
imul
fsubl
jge
push
test
in
sbb
inc
pop
fsubp
adcl
lret
mov
test
mov
sahf
in
dec
push
and
fwait
push
aad
cwtl
mov
mov
fsub
mov
and
int
fadd
lods
les
rorl
in
arpl
imull
enter
mov
jno
popf
inc
mov
push
mov
test
out
sub
add
mov
fildl
xchg
les
adcl
cmpl
xchg
mov
cmp
xchg
sbbb
stos
adc
in
dec
sbb
or
aad
lret
loop
mov
push
mov
jecxz
cmp
jb
mov
int3
mov
xor
std
push
inc
or
js
push
jnp
in
pop
cmpsb
mov
push
xor
lret
jns
pop
sbb
adc
inc
mov
sub
inc
or
xchg
mov
lods
aaa
pop
inc
push
jg
dec
gs
sbb
cltd
sub
push
pop
push
xlat
sub
andl
pop
movsl
dec
push
movsb
and
xchg
insb
sub
repz
aaa
shll
jg
jb
inc
mov
in
in
mov
popf
loope
lea
in
ds
sbb
sbb
clc
dec
and
push
xor
or
sub
jmp
sahf
add
aad
xor
xor
or
and
insl
sub
add
and
inc
daa
inc
add
fstl
cli
std
xlat
incb
pop
pop
mov
or
fcoms
push
pop
add
sbb
inc
mov
mov
mov
mov
xor
xor
hlt
jb
cltd
xchg
decl
daa
jnp
js
sbb
fs
jecxz
loope
push
ds
test
mov
lock
inc
sub
cli
jb
push
xor
in
sbb
sbb
in
stos
stc
ja
sbbl
and
inc
mov
and
mov
mov
das
pop
lret
or
pop
nop
stos
cmpb
jae
inc
fimuls
pop
adc
mov
out
sbb
cmc
or
mov
scas
add
repz
or
push
lock
shl
xor
lcall
sub
xor
mov
les
mov
cltd
and
lret
mov
inc
add
ljmp
cmpsl
pop
add
push
pushf
outsl
outsb
xchg
xchg
rorb
in
loop
and
int
xchg
xor
and
mov
sub
mov
and
outsl
in
jmp
imul
shll
test
sbb
mov
iret
jns
test
xchg
sub
xor
cmp
fwait
mov
sbb
mov
and
lock
imul
jno
or
sub
xchg
sub
fdivrp
into
inc
enter
insl
add
in
mov
xor
stos
dec
nop
out
xor
rcl
cmp
and
xchg
orb
popa
js
testb
add
mov
inc
mov
data16
jl
test
push
mov
xor
popf
add
fdivs
sub
enter
shll
arpl
adc
or
bnd
xor
fldl
scas
push
pop
sbb
into
js
std
sub
mov
jne
jg
pop
fisubs
xchg
mov
pop
ret
das
xor
rcrl
xor
ret
into
pop
push
sbb
jge
and
push
bound
sub
adc
aad
mov
and
add
testb
lahf
imulb
xchg
push
push
sub
sbb
jbe
cli
dec
or
fnstsw
mov
push
xor
pop
pop
pop
sbb
fildl
xor
out
jge
addb
jp
mov
dec
push
cmovns
or
dec
lds
cmpsl
dec
or
add
push
mov
flds
mov
push
adc
in
push
mov
and
addr16
jb
inc
fwait
cmc
lods
dec
pop
mov
mov
mov
insb
mov
icebp
add
lahf
jp
cmp
lds
inc
jnp
scas
je
mov
mov
pop
lahf
mov
addb
xchg
shrb
jo
sbb
js
mov
std
or
pop
lods
js
popa
mov
sub
bound
mov
fwait
dec
ljmp
pop
xchg
xchg
mov
movsl
pop
imulb
xchg
call
jle
pop
push
xchg
cmc
push
das
sub
mov
mov
scas
add
mov
enter
repz
stos
mov
jg
stos
or
push
lds
or
pop
dec
sar
jb
aaa
sarl
add
jbe
mov
push
pop
scas
ret
add
mov
jle
insl
cmp
bound
xchg
subl
add
add
iret
jmp
add
push
test
or
sbb
loopne
ljmp
loop
cltd
mov
mov
scas
int
aaa
inc
sbb
fbstp
out
sti
jg
movsl
mov
xor
jecxz
pusha
sub
iret
ret
pusha
bound
pop
call
adc
loope
jns
add
mov
lret
push
je
call
ja
pusha
add
mov
push
inc
dec
xlat
xor
xchg
jmp
pushf
filds
repz
jno
add
push
cmp
dec
dec
mov
dec
push
ret
mov
das
jecxz
hlt
jl
sub
cmp
mov
or
push
jo
pop
mov
jge
mov
adc
icebp
outsb
hlt
imul
add
adc
mov
aam
iret
adc
cld
insb
xlat
ds
outsb
addr16
testl
cmp
mov
add
push
add
movsb
mov
adc
sub
popf
mov
and
push
cli
hlt
into
jae
nop
ja
call
lock
cmc
jge
rolb
dec
inc
sub
sbb
dec
adc
mov
andl
dec
pop
in
jle
test
mov
mov
mov
push
mov
jecxz
mov
movb
pushfw
xor
and
sub
push
xchg
hlt
cmpsb
pop
jbe
xchg
adc
adc
sbb
jl
mov
stos
test
mov
sbb
movsb
into
shll
push
sub
lods
ret
pop
add
sbb
mov
loopne
daa
loope
push
mov
pop
aaa
fsts
sbb
and
mov
inc
push
sub
stos
add
xorb
and
mov
adc
call
fdivs
test
mov
inc
insl
xchg
loope
mov
cli
mov
cmpsb
dec
jns
push
or
int3
cmpsl
stos
pop
dec
cmp
mov
pop
inc
xlat
bnd
dec
aas
and
sbb
jmp
or
mov
pop
push
rcl
mov
test
jnp
es
out
xchg
dec
push
insl
mov
nop
stos
mov
mov
inc
fwait
dec
dec
or
mov
mov
or
rorb
inc
mov
lcall
jge
daa
lods
in
and
push
mov
jle
pusha
mov
scas
fildl
sahf
mov
shrl
jg
popa
cli
cmpsl
add
cwtl
mov
rolb
jmp
pop
adc
inc
out
lahf
iret
stos
pop
add
sti
pop
sahf
sub
add
data16
roll
js
sub
cmpsb
jno
arpl
dec
sti
push
push
add
mov
insb
adc
fnsave
jbe
int
iret
filds
pop
stc
mov
adc
ljmp
sarb
jns
and
lock
jle
subl
jnp
xchg
jae
jb
mov
xchg
pop
mov
push
mov
sub
add
mov
and
pop
icebp
inc
dec
lock
xchg
mov
mov
push
pop
sub
cmpb
pop
inc
xlat
pop
xchg
xor
pop
sub
lea
jb
pop
mov
adc
fdiv
pushl
jo
cmp
jmp
jp
push
cmp
int
pop
adc
fs
in
pushf
adc
cmp
dec
jmp
pop
mov
xor
or
add
xor
inc
jmp
sub
mov
std
or
cmc
rclb
push
dec
mov
jge
cwtl
gs
xchg
add
imul
push
dec
jle
sbb
pusha
dec
test
xchg
andl
mov
cmp
mov
sub
mov
jmp
pop
dec
push
adc
pop
pop
add
jbe
mov
adc
lret
fdivl
leave
ss
lcall
test
xchg
mov
lea
jo
loop
pause
fiadds
outsl
push
aas
and
cmp
mov
rolb
mov
jo
push
cwtl
test
insl
daa
aas
dec
loopne
inc
push
pop
icebp
mov
jg
cld
xor
sahf
aad
mov
sar
xchg
push
add
lcall
les
push
xor
pop
push
repz
in
mov
lds
fwait
repnz
je
mov
inc
test
cli
and
fs
xchg
jmp
std
sar
or
jb
mov
fidivs
test
js
icebp
repnz
jns
insb
into
das
shrb
or
ljmp
dec
test
lock
jp
xchg
push
sub
rcrb
mov
pop
aas
shll
jnp
clc
mov
idivb
cmc
cmp
jmp
jmp
cwtl
xor
sbb
push
dec
push
cmp
loope,pt
addb
cmpsb
mov
inc
scas
hlt
mov
mov
test
cmp
pop
movsb
adc
jecxz
movsl
add
adc
pop
insb
jo
stos
std
out
ljmp
or
movsb
jo
into
xchg
mov
cli
hlt
bound
xchg
jae
fsubp
mov
add
xchg
sub
repz
cs
int3
push
pop
cmc
in
pop
rclb
xor
jl
dec
sub
push
fistps
xor
dec
pop
jmpw
lahf
jecxz
out
dec
push
fmuls
and
call
jecxz
mov
rorb
jmp
mov
movsl
pop
test
cmp
xorl
mov
mov
into
imul
addl
xchg
out
adcl
cmp
dec
pushf
aas
das
loopne
call
add
leave
aad
imul
std
sbb
into
scas
cmp
or
pop
out
jb
push
out
test
test
inc
inc
pop
dec
mov
pusha
das
add
ret
insb
inc
jnp
andl
jp
test
inc
jnp
cmp
das
mov
mov
pop
or
dec
mov
out
dec
les
ja
jae
shll
sbb
add
daa
push
mov
inc
and
dec
xchg
je
mov
data16
ret
and
or
mov
pop
xchg
mov
and
inc
mov
subb
dec
inc
test
mov
cmp
pop
jl
dec
clc
movsl
cwtl
fs
cmpxchg
dec
cmp
sub
stc
lea
cmp
enter
icebp
or
push
cltd
pop
dec
sbb
fidivrs
fisubs
inc
mov
mov
mov
mov
or
pop
bound
js
dec
incb
mov
lea
test
fucomp
in
int
adc
ds
les
mov
aas
lods
stos
nop
mov
dec
or
into
pop
pop
xor
leave
stos
jg
in
push
sbb
cmp
xchg
dec
cmp
shll
inc
int
mov
je
pop
mov
aas
ffree
nop
dec
or
ss
rcrl
test
fcoml
imul
sub
out
jns
or
jmp
pop
mov
loope
ja
cmp
ds
sub
int
icebp
fwait
sub
xchg
inc
aam
and
je
ljmp
insb
out
js
jmp
mov
lods
add
test
roll
xchg
fs
loope
xchg
push
cmp
jno
sbb
inc
gs
xor
scas
xor
shll
jno
movsl
js
loope
cmp
add
or
sbb
aaa
es
cmp
and
movsl
mov
xor
test
inc
orps
jp
shlb
add
xor
push
bound
fwait
pop
mov
dec
xor
sub
aad
mov
or
xchg
dec
inc
and
adc
xor
pop
inc
dec
add
cmp
and
lret
lcall
pop
mov
inc
xor
lcall
mov
loopne
adc
stos
pop
lcall
pop
mov
out
mov
bound
pushf
fs
cli
xchg
hlt
adc
cmp
push
stos
xor
push
movsl
iret
add
in
dec
test
jle
dec
imul
jne
lock
test
in
les
sbb
or
lods
sub
icebp
ljmp
addl
mov
insl
pop
icebp
xchg
in
sbb
scas
dec
push
pop
test
notb
mov
lock
hlt
sub
jmp
stos
xchg
xchg
adc
imul
dec
ljmp
gs
mov
cmp
imul
aaa
xchg
cmpsl
andl
cmp
fcmovne
int
repz
ja
movsl
ss
jb
push
mov
jecxz
roll
pusha
call
fdivrl
add
add
aad
sbb
popf
xchg
aaa
stos
pop
test
jle
int3
lret
icebp
dec
lret
mov
sarb
mov
les
test
out
cmp
mov
je
xor
shll
aas
addr16
xchg
fldl
xchg
test
sti
mov
out
sub
dec
movsl
cmpb
inc
and
ret
push
xlat
pushf
mov
outsb
xor
test
add
mov
jg
cmpsb
ja
aas
sub
mov
mov
fsubs
push
add
rcl
push
mov
and
adc
popa
mov
pop
shl
or
nop
sub
leave
negb
aam
fadds
imul
arpl
adc
cmp
jle
xchg
rcrb
rclb
jo
xchg
xor
sbb
ds
xchg
idivb
in
dec
jl
sbb
push
je
jge
int3
sahf
in
out
fisttpll
cmpsl
lods
lds
ds
repnz
rolb
push
jns
insb
sub
jp
loope
jle
xchg
imul
in
out
stos
jg
xchg
cmp
das
jns
or
test
sbb
pop
xor
incl
inc
lds
loop
movsb
add
mov
out
testb
xor
cmpb
push
adc
shl
jae
loop
push
and
push
or
mov
and
sbb
cmp
ds
jmp
mov
cmpsl
jge
pusha
test
mov
lret
cmc
add
insl
and
outsb
test
jp
cld
push
xchg
in
mov
mov
cmp
jl
mov
adc
sbb
dec
repz
sub
loopne
mov
imul
push
add
jnp
inc
lahf
ds
pop
loopne
jbe
insl
add
inc
call
pusha
popa
mov
loopne
mov
dec
mov
fwait
dec
aaa
push
xchg
in
mov
push
int
push
mov
push
push
mov
or
adc
sar
mov
pop
scas
jb
cmp
outsl
fadds
fimull
push
mov
int
in
insb
scas
stc
jge
lock
test
adc
repnz
lds
stos
bound
into
jle
orl
mov
mov
shll
ss
sbb
mov
adc
adc
add
into
add
lock
push
push
pop
sbb
sbb
add
and
hlt
pop
dec
cs
rclb
out
lds
scas
decl
adc
mov
les
dec
fwait
dec
jnp
mov
mov
sub
xchg
repz
imul
sbb
fldl
mov
sbb
rorl
sti
imul
movsb
sub
sub
lret
adcl
mov
inc
and
adc
rolb
stos
cwtl
in
xor
inc
xor
in
xor
xlat
daa
ljmp
cltd
call
dec
loope
push
adc
rcr
hlt
sbb
xlat
jmp
notb
xchg
scas
bound
test
adc
xchg
mull
scas
cmpsb
sub
dec
pop
push
inc
sub
mov
loopne
decb
and
movsb
inc
push
adc
adc
push
sub
mov
das
and
lds
xchg
out
pusha
ret
adc
out
aas
mov
dec
mov
mov
push
fisubs
mov
repz
out
pop
lcall
ret
dec
loopne
das
mov
jle
popa
fstl
xor
cwtl
add
into
mov
int
pop
clc
cmp
out
mov
pop
jnp
shl
lret
cli
mov
into
fcomps
push
pop
push
scas
or
test
and
mov
adc
xchg
fdivrs
iret
push
cmp
stos
pop
lahf
data16
mov
sub
adc
inc
enter
sub
mov
push
lret
or
lock
cld
adc
jge
out
cmc
test
aad
out
je
push
cmp
test
int3
out
and
jecxz
aaa
dec
pop
pop
sbb
loopne
scas
int
sbb
push
dec
sbb
ljmp
sub
inc
add
addl
xor
lods
pop
pop
lds
pop
pop
sbb
repnz
sar
cmp
pop
addr16
shrl
mov
nop
fs
inc
or
fisttps
dec
ljmp
jecxz
je
pop
xlat
lds
push
out
icebp
ds
push
pop
xor
orl
xor
xchg
mov
int
jp
test
cmp
nop
nop
cmp
aaa
pop
adc
mov
jb
jmp
cmp
fdivrl
shll
mov
dec
push
and
bound
mov
pop
dec
xchg
pusha
in
pop
sub
lock
adc
repnz
je
xchg
imul
add
sbb
xchg
decl
loope
push
xchg
mov
icebp
lcall
sub
out
std
mov
shlb
sub
adc
and
xor
out
xorb
fiadds
xchg
and
addr16
pop
test
fisttps
rcrb
dec
popf
lret
ja
data16
xor
gs
xchg
dec
aad
lods
cli
nop
in
mov
test
lahf
in
xchg
xor
dec
and
dec
out
push
dec
orl
bound
lahf
sbb
std
repz
xchg
hlt
fimuls
bound
lods
or
dec
xor
cmp
in
add
lds
aad
int3
cmp
push
pop
cld
int3
notb
mul
pop
inc
xchg
movsl
xor
add
fisubrs
lret
jb
rolb
pushf
movsb
mov
pop
das
xchg
sti
cmp
jb
lock
outsl
daa
jmp
repz
lcall
rorl
flds
in
mov
or
mov
test
and
stos
push
lock
out
xchg
inc
je
les
xchg
subb
xor
in
add
push
dec
cmpsb
addl
adcb
addr16
lret
lds
inc
lret
movsl
in
add
jb
mov
test
pop
repz
pusha
popa
arpl
loopne
clc
movsl
cmp
roll
pop
pop
lock
xchg
cli
mov
addb
je
lret
push
pop
ret
mov
inc
lcall
pop
movsb
in
pop
mov
mov
inc
ficoms
jno
hlt
je
lods
scas
and
cmp
dec
inc
ss
add
addr16
sub
sub
mov
jns
in
sub
push
mov
loopne
inc
mov
add
push
jnp
cmp
je
add
lret
cmp
ficompl
in
mov
jno
dec
sub
xlat
call
jle
sbb
push
loope
sbb
cwtl
jne
aaa
xchg
xor
xchg
dec
into
aam
ljmp
jp
cltd
leave
fisubl
ret
push
test
aam
jp
loopne
mov
sti
ss
out
jae
cmp
or
aad
cmp
push
cmp
xchg
xchg
inc
mov
pop
adc
sub
testb
dec
dec
fistl
fildl
repz
sbb
les
popf
popf
mov
mov
je
arpl
aaa
push
push
idivb
ret
rolb
jecxz
jle
dec
sub
jo
lret
insl
add
mov
es
push
jae
lret
test
mov
cmp
jnp
mov
mov
sub
jl
gs
dec
dec
cmpsb
dec
jp
rcrl
add
imul
push
ret
iret
ret
jge
add
jb
adc
xchg
ja
dec
push
push
xchg
adc
xor
pop
fiadds
adc
mov
sbb
insl
das
or
dec
sub
sbb
inc
out
gs
xorl
cmpsl
cmpsb
mov
dec
jbe
dec
out
ss
call
int
push
movsb
call
daa
sbb
fnstenv
ret
and
push
icebp
and
jne
xor
add
sar
test
cmp
pop
rorl
aad
les
out
pop
sti
inc
xchg
mov
sub
sahf
ja
andl
test
jl
mov
or
lock
sub
out
cwtl
stc
sbb
loope
andl
mov
lock
lock
das
outsl
mov
dec
add
mov
sbb
push
cmp
mov
mov
mov
inc
stc
call
std
mov
insl
sbb
push
out
or
aam
dec
outsb
pop
dec
addl
lret
push
fisubl
sbb
push
pop
push
les
aaa
mov
xlat
fsubl
xchg
adc
pop
mov
iret
shrb
cs
sti
add
cld
pop
mov
arpl
push
jp
cwtl
pop
jno
adcl
and
out
mov
mov
xor
gs
push
xor
mov
sti
gs
ja
mov
or
ffree
xchg
and
sbb
sti
sub
icebp
repz
fcomp
push
push
add
cmpsb
sahf
insb
repnz
imul
add
mov
mov
adc
pop
add
mov
lcall
xchg
inc
std
movsb
add
pushf
cltd
insb
jae
jecxz
xorb
fistps
mov
popa
lods
das
sbb
cld
sbb
xor
data16
mov
mov
add
sahf
int3
mov
inc
pop
xlat
addr16
arpl
popf
pusha
sub
pop
inc
push
rorb
outsl
mov
lea
and
xor
cmp
mov
sbb
lret
xchg
out
sti
inc
lar
stos
push
or
pusha
cmpsl
jl
in
sub
push
sub
pop
call
testl
rorb
mov
push
sbb
gs
mov
negl
jnp
insb
lahf
mov
mov
gs
int
adc
push
or
mov
shlb
popf
or
mov
cmpsb
out
xchg
je
hlt
push
jmp
xchg
mov
pop
daa
jbe
mov
inc
imul
dec
push
mov
jno
outsw
xchg
cmpl
lret
xorl
push
cld
scas
jp
pop
in
mov
or
bound
rcrl
sub
arpl
or
mov
movsl
jbe
xchg
inc
or
outsl
mov
repnz
cmp
leave
inc
inc
mov
bound
jge
rolb
lods
or
dec
loopne
pop
popa
adc
cld
mov
lea
fstpl
push
xchg
sbb
pop
xor
mov
jbe
cmc
pop
or
adc
shlb
repnz
mov
std
stos
loopw
push
jl
aam
xchg
cmp
lods
pop
out
insb
and
pop
add
push
aam
push
stos
jmp
push
xor
dec
pop
cmp
and
andb
mov
xor
int3
push
jmp
mov
xchg
popf
mov
stos
das
xchg
mov
add
inc
cmpsb
lcall
xchg
shrl
push
dec
pusha
push
pop
mov
pop
pop
aam
or
adc
aas
aam
stos
fs
xchg
insb
mov
and
jnp
sbb
pop
enter
mov
test
adc
xchg
jo
mov
es
jmp
push
add
xor
pushf
lock
es
mov
mov
mov
jno
shll
inc
pop
leave
pop
add
pop
mov
mov
push
cmp
sub
out
sbb
xor
bnd
mov
jecxz
and
cltd
mov
popf
pop
and
cmp
sbb
out
add
fdivl
jecxz
inc
scas
and
mov
leave
mov
jns
lcall
test
rorl
xchg
xchg
lds
lock
pop
repnz
in
es
lock
int
mov
test
mov
leave
imul
cli
sub
shlb
scas
fcmovne
or
push
cmp
and
notl
add
push
mov
pop
sbb
or
mov
push
popa
sti
inc
out
notl
push
cmp
cmp
push
lds
pop
ja
imul
jns
push
inc
mov
enter
push
into
dec
add
cmc
sub
shl
ror
iret
aad
and
scas
dec
xor
jnp
lods
dec
sbb
fucomi
fimuls
ss
out
loop
or
lahf
mov
xor
mov
push
lret
cmp
sub
les
mov
in
jge
jbe
jg
cmc
addr16
jnp
push
mov
adc
cmpsl
xor
add
incb
hlt
int3
fcmovu
pop
mov
mov
das
mov
add
roll
or
rcrb
xchg
xchg
mov
imul
mov
push
lret
loop
daa
or
orb
sbb
jmp
cmc
or
push
push
jmp
mov
lcall
flds
mov
adc
mov
inc
jae
je
cmc
mov
lret
xchg
lock
cmp
dec
fwait
inc
out
jns
bound
cmc
dec
jo
cwtl
push
mov
sti
sahf
in
jae
lods
je
pop
mov
pop
enter
push
add
cmpsl
daa
leave
test
xlat
lret
out
sbb
xchg
or
mov
sub
fwait
bound
push
sbb
or
neg
mov
mov
fsubr
pop
xchg
sbb
icebp
je
out
mov
mov
xor
fwait
repnz
and
sbb
push
subl
cs
sub
jo
ret
xor
inc
stos
mov
scas
pop
popf
idiv
inc
mov
push
test
cmc
ja
xchg
jb
cltd
sbb
xor
cltd
loope
mov
dec
dec
out
or
pop
int
sbb
cltd
or
dec
and
sbb
cmc
lret
sub
mov
mov
push
adc
or
mov
jns
shll
xchg
decl
mov
dec
stos
ret
mov
pop
inc
xchg
in
sub
popa
mov
xchg
out
inc
out
jecxz
insb
aaa
in
push
jne
push
and
loope
dec
or
sub
mov
or
sub
add
pushf
push
outsb
insl
sahf
jecxz
call
arpl
push
idivl
stc
or
mov
cld
xlat
inc
push
jae
add
mov
cmpsb
aaa
arpl
and
add
pop
mov
dec
pop
jp
push
sbb
push
mov
push
lods
jl
and
mov
fwait
mov
jge
out
cmpsb
push
out
xchg
mov
out
pusha
jecxz
fcoms
fimuls
push
pop
aad
fsubrl
out
add
sbb
jg
sbb
inc
test
dec
mov
stc
int
ljmp
lret
movsb
lods
push
push
aaa
sbb
dec
dec
popa
push
jle
add
les
dec
mov
cli
nop
sub
pusha
ja
mov
scas
mov
sub
sub
add
bound
sti
fs
mov
adc
add
es
js
inc
cmp
fisubrs
outsl
sbb
imul
popf
mov
stos
xlat
stos
cwtl
xor
into
lods
enter
mov
inc
enter
mov
jge
cmp
lret
inc
mov
pushf
jns
lcall
and
das
adc
xchg
xor
mov
das
mov
xor
divl
sti
iret
imul
repz
jg
fisttpl
clc
jb
adc
cmp
xchg
and
jne
int
dec
outsb
rclb
jl
cmpsl
mov
dec
sti
bound
out
jl
aas
xchg
bnd
sub
xchg
push
sub
rcrl
mov
jge
imul
sbb
lea
leave
mov
or
out
lret
ja
stc
push
pop
dec
jns
dec
loopne
inc
into
scas
mov
sub
mov
adc
pop
push
stos
ffree
stos
xchg
test
xor
clc
fs
call
mov
subl
or
xor
stc
or
sub
adc
lds
mov
sbb
mov
or
lret
dec
testb
pop
mov
movsl
sbb
jg
cltd
mov
inc
popf
mov
push
dec
in
sbb
into
sbb
push
sub
adc
psadbw
mov
push
and
pop
fadds
imul
jo
dec
dec
adc
jmp
imul
mov
in
dec
and
sub
filds
or
cld
adc
mov
addl
cmp
lcall
jp
mov
cmp
ret
xor
stc
ss
sbb
pop
lods
jp
cmp
fiaddl
or
jns
call
sub
outsl
pop
shlb
cmc
pop
and
imul
jbe
mov
rcll
fadds
pop
pop
stos
dec
ss
lds
sbb
cmpsb
loopne
movsl
js
mov
sbb
fmuls
gs
pop
push
sub
push
call
xor
or
xchg
xchg
xlat
rol
sub
pop
jns
scas
or
fsubs
xchg
fsub
mov
lods
testb
mov
ja
popa
dec
pop
and
ja
adc
lret
call
les
repz
das
mov
adc
pop
hlt
jo
lcall
jg
sub
nop
cmp
movsl
xchg
inc
xor
rorb
insb
fs
jae
fwait
ja
das
cmpb
int
push
pop
add
push
fwait
jp
jmp
pop
mov
cmp
mov
add
mov
mov
pushf
pop
pop
out
mov
jne
sub
lods
push
pop
xchg
lea
add
sbb
push
pop
inc
and
and
outsl
add
xor
call
addl
test
mov
jecxz
lret
scas
jecxz
mov
mov
sbb
xchg
adc
push
mov
cmp
lret
in
notb
mov
jl
in
lahf
adc
aam
xchg
cwtl
fmulp
xor
sbb
dec
insb
xchg
jae
inc
jle
sti
jbe
jecxz
adc
stos
fbstp
pusha
fstpt
jb
out
in
clc
in
inc
xlat
push
fidivl
in
dec
dec
xchg
cmpsl
add
pop
dec
mov
mov
jae
sub
arpl
jnp
fistpl
adc
dec
push
test
mov
adc
xchg
testl
push
dec
push
adc
pop
inc
out
push
xor
adc
jl
jae
xor
out
jge
loopne
scas
add
xor
cwtl
jbe
sbb
inc
mov
cmp
add
and
and
imul
jge
sarb
sbb
je
mov
jl
cmp
sub
push
aad
mov
imul
inc
mov
cmp
adcl
or
mov
leave
negb
jne
out
cmc
and
shr
fwait
jne
and
adc
arpl
loopne
xlat
cmp
lret
sub
add
xchg
aad
mov
adc
fidivs
dec
lahf
stos
add
adc
pop
idiv
outsb
mov
xor
mov
leave
fisttpl
adc
notb
test
jbe
cmp
in
push
enter
sub
data16
les
push
adc
cmp
and
jbe
mov
pop
das
insb
xchg
hlt
xor
push
xor
jle
push
aas
and
fmull
sbb
addr16
nop
in
add
pop
insb
insl
sub
dec
mov
movsl
iret
mov
lea
jo
fwait
pop
aad
addl
pop
jecxz
sub
dec
pusha
aas
push
cmp
sahf
mov
pop
xchg
inc
orb
fisubrs
mul
pop
loopne
mov
cmp
sahf
mov
pop
xchg
inc
orb
or
sub
xor
xor
push
dec
iret
out
push
and
aam
les
mov
dec
in
mulb
roll
rcrl
mov
xchg
movsb
ret
call
mov
icebp
adc
mov
data16
pop
or
jmp
and
xchg
icebp
push
mov
test
cwtl
mov
sti
xor
xor
loop
movsl
mov
mov
push
or
outsl
or
sbb
pushl
into
addr16
xchg
popf
imulb
lret
or
in
push
movsb
add
jge
dec
movsl
hlt
mov
cs
rcrl
lret
das
je
inc
jae
movsb
jmp
adc
rcrb
rcrb
repz
fwait
ljmp
mov
stos
xorb
inc
mov
inc
outsl
push
or
sbb
sub
jae
movsb
sbb
loop
mov
or
arpl
lret
stc
ds
jp
out
inc
shl
mov
adc
sub
mov
or
pop
sub
stos
lods
lea
mov
mov
or
add
test
bound
xchg
outsl
push
hlt
fisubrs
or
dec
hlt
mov
xchg
rcll
fmuls
fcoml
sbb
sarb
lods
pusha
mov
mov
adc
xor
test
xor
push
jp
add
push
xchg
dec
jp
adc
roll
cmp
mov
pushf
fdivr
jb
mov
pusha
adc
lret
mov
repnz
mov
pop
and
clc
cmpsl
lods
repz
ljmp
rcrb
gs
lods
cmpsl
mov
cs
push
aaa
sbb
bndstx
bound
lcall
pop
insb
xchg
hlt
xchg
and
lock
outsl
cs
ja
jg
inc
jl
adc
cmp
ljmp
adc
pop
jae
or
fstpt
push
add
arpl
adc
cmp
stos
clc
jge
out
cmpsb
mov
pop
pop
je
mov
dec
les
xchg
inc
add
mov
aad
jno
sub
pop
mov
enter
outsb
insb
cmpsb
xlat
sbb
iret
inc
aas
sub
pop
in
or
loopne
push
rclb
imul
jbe
sbb
negl
xor
pop
cli
mov
sub
mov
add
mov
or
hlt
jb
in
js
add
aad
in
fcomps
mov
mov
dec
mov
pop
das
insb
xchg
hlt
adc
in
pop
pop
or
push
xor
movb
scas
jmp
xchg
mov
mov
pop
les
sub
movsb
popf
fstpt
icebp
mov
cs
cmpb
scas
pop
cmp
push
jnp
jnp
insl
popa
pop
sub
lret
jb
pop
in
pop
mov
sub
inc
popf
mov
add
mov
xchg
cs
push
aaa
dec
adc
insb
stc
push
int
or
gs
push
push
pop
cmp
js
dec
pushf
adc
jns
mov
adc
imul
stc
xchg
sub
dec
ja
ret
clc
int3
jecxz
frstor
insl
cli
ja
js
fisttpll
mov
dec
sub
adc
pop
mov
into
push
jle
movsb
xor
and
loopne
fsubs
testl
jb
movsl
outsl
add
ret
pop
fwait
push
roll
mov
dec
fstl
daa
mov
addr16
mov
mov
mov
or
mov
xor
das
pusha
inc
and
scas
fsts
iret
insl
lds
adc
pop
imul
inc
popf
xchg
mov
adc
push
pop
sbb
nop
cmpsb
push
xchg
sarl
xchg
sbb
cmpsb
adc
xchg
mov
shl
stc
mov
add
cmp
pop
push
iret
fsub
bound
sti
xchg
pop
cmp
in
jb
mov
lods
sbb
lcall
dec
rcl
ret
test
add
movsl
sbb
xor
xchg
inc
addr16
int
mov
bound
icebp
rorb
sbb
bound
dec
fs
sbb
popf
mov
jnp
int
imul
test
stos
aaa
and
add
stc
xchg
add
push
cld
cmp
cmp
lods
add
and
adc
cmp
dec
and
pop
es
add
jne
pop
and
lock
inc
push
sahf
jne
sarl
outsb
or
test
and
enter
leave
xchg
inc
loope
inc
push
movsb
cmpsb
ret
cvtps2pi
in
call
lcall
hlt
loopne
fidivs
inc
xlat
add
ret
push
add
jbe
adc
or
sarl
mov
dec
xchg
out
mov
lods
and
push
sub
push
sub
xchg
pop
lds
pop
mov
cmp
mov
popa
in
cmp
in
pop
outsl
push
enter
aad
xchg
lahf
movsl
int
out
xorb
add
js
xor
sub
inc
pushf
aas
loope
push
cs
lods
jae
mov
sbb
and
mov
test
mov
addl
push
cld
std
movsl
jno
xlat
popf
test
lods
mov
cmp
int3
mov
sahf
mov
mov
mov
pop
das
insb
xchg
hlt
adc
in
pop
pop
or
push
xor
movb
scas
jmp
adc
lahf
sbb
jb
insl
jp
shll
es
fldt
or
sbb
in
mov
pop
popl
enter
in
mov
sub
test
clc
std
adc
jno
ja
inc
shrl
in
in
cmc
pop
inc
jnp
jmp
addr16
add
mov
mov
test
sbb
jbe
iret
pop
add
inc
push
sbb
lret
sbb
fidivs
scas
mov
test
mov
mov
pushf
sub
cmpsb
inc
mov
stc
addl
push
repnz
cld
add
out
jle
lods
xor
fstpl
push
jp
jb
scas
xor
icebp
mov
add
aaa
call
jnp
insl
ja
out
jae
xor
jl
xchg
cmp
inc
cmc
inc
fcmove
pop
loope
aam
cmpsb
cmp
insl
dec
jae
shld
loope
jno
in
fldl
and
inc
aaa
xchg
test
cltd
js
test
sahf
and
mov
fdivrl
mov
add
sub
dec
push
cmp
pushf
xchg
push
roll
mov
dec
fstl
daa
mov
addr16
mov
mov
mov
or
mov
xor
das
pusha
inc
and
scas
fsts
iret
insl
lds
adc
pop
imul
pusha
push
faddl
dec
daa
es
hlt
int3
jmp
xlat
inc
jne
fnstcw
iret
shrl
data16
in
sub
cmpsb
and
test
xchg
in
xchg
test
push
loope
shl
jg
rcl
mov
jae
rcl
mov
pop
es
ss
mov
lcall
mov
add
clc
xor
sahf
adc
push
mov
jle
loop
sbb
fadds
xor
sub
es
es
pop
sahf
fidivs
mov
aad
fists
and
pushf
mov
push
xor
and
lods
repz
ljmp
repnz
into
arpl
xchg
add
int3
call
orb
arpl
xor
inc
je
pushf
js
repz
dec
push
rolb
dec
or
and
sbb
xchg
sbb
std
bound
inc
or
mov
pop
sbb
nop
jmp
sub
test
jmp
mov
ficompl
cmp
jae
insl
push
cmpsb
sti
mov
stos
add
inc
add
dec
or
outsl
pop
sbbl
sub
xor
into
cltd
and
jg
and
lret
xor
inc
mov
sbb
gs
xchg
sub
stc
jecxz
leave
xor
add
daa
das
add
jg
stos
add
cld
dec
les
movsb
lds
mov
cmpb
fdivrl
lret
push
xlat
scas
fs
inc
cs
std
xor
mov
in
arpl
clc
dec
jo
pop
aas
int3
orl
testl
rcrb
sti
cmpl
lods
sub
negb
into
ljmp
pop
test
das
js
mov
repz
ljmp
sub
push
xor
or
xchg
out
icebp
jnp
mov
xor
push
push
imul
call
cld
push
cmp
mov
jp
pop
lret
xor
inc
push
outsl
jo
mov
out
xor
js
push
sbb
push
mov
mov
jae
mov
pop
das
insb
xchg
hlt
or
aam
mov
xchg
jns
pop
shll
ficompl
ljmp
lds
call
test
mov
jl
push
cmp
pushf
pop
push
dec
int
loopne
mov
insb
and
cmp
inc
loop
es
in
aas
jno
iret
mov
xor
xchg
popa
mov
jmp
sbb
cld
push
xlat
mov
decb
mov
out
sbb
push
add
cmpsb
outsb
ret
adc
test
xchg
scas
xorl
or
push
repz
cli
and
out
xchg
pop
mov
mov
sbb
or
jno
vmread
xor
test
sbb
jmp
out
xchg
xchg
jbe
dec
adc
negl
js
arpl
insb
cmc
fldlg2
js
int
inc
push
push
pop
push
dec
aam
lcall
pop
adc
sbb
adc
inc
pop
std
and
cld
shrl
push
xchg
filds
aaa
pushf
mov
push
ja
sarl
sub
adc
add
adc
inc
push
add
cmpsb
outsb
ret
andl
cmp
les
jae
pop
inc
push
cmp
sbb
shll
aad
xor
js
and
hlt
in
mov
xchg
lret
cmp
in
lea
lret
shrb
mov
xor
add
stos
fadds
nop
cmp
cmc
fstps
push
xchg
sti
mov
or
es
pop
sub
dec
out
clc
inc
aaa
fsts
ja
cmp
adc
lea
add
sbb
push
xor
fisttps
or
notb
out
add
sbb
sbb
dec
xchg
popa
lea
dec
pushf
mov
sub
sbb
sub
imul
cmp
pop
dec
lcall
jmp
out
ljmp
insl
in
lea
movhps
mov
mov
push
ljmp
sub
leave
xlat
testb
test
nop
adc
cmp
jb
ss
aaa
xchg
jg
ficoms
mov
ja
cli
orb
adc
roll
sub
and
jecxz
sarb
test
sti
js
lahf
jnp
xor
bound
icebp
or
mov
pop
lea
loop
lock
imul
repnz
test
imul
jno
push
jle
fstpt
hlt
lret
or
mov
sahf
mov
fnstenv
xor
xlat
push
jnp
loop
mov
fmul
sti
jmp
cmp
out
test
mov
test
pop
jp
mov
hlt
int3
icebp
jne
pop
cmc
pop
cmp
push
jg
aas
fsubr
cltd
loopne,pn
adc
jae
dec
pop
mov
aaa
adc
xchg
fs
test
sbb
test
inc
xchg
or
or
cmp
mov
or
scas
sub
push
mov
shlb
inc
pop
push
mov
int
xor
xor
lds
sbb
stc
ret
xchg
mov
mov
or
int3
adc
leave
push
and
xor
inc
jp
fidivrs
lcall
inc
in
xorl
lods
mov
or
mov
cmc
add
mov
mov
shl
popa
or
sbb
neg
jne
pop
fwait
xchg
cmpl
hlt
call
jecxz
es
ja
jecxz
in
add
or
stos
jmp
into
divl
pop
seto
push
lock
lcall
push
pop
in
sub
subl
into
dec
rorb
pop
and
or
xor
fistpll
sbb
mov
push
cs
xchg
mov
sub
pop
mov
jecxz
ret
iret
cmp
pop
cmp
aas
mov
or
out
add
push
mov
sbb
outsb
xor
ficomps
mov
stc
mov
dec
mov
fnstcw
popf
cwtl
in
adc
mov
das
sub
out
lods
scas
pop
mov
push
addr16
sbb
ss
push
insb
push
inc
pop
les
xor
fdivr
test
mov
ja
pop
mov
subl
fimull
loopne
pop
mov
insl
jbe
arpl
adc
icebp
push
js
pop
mov
and
pushf
and
lahf
dec
movsl
fstps
sbb
and
xlat
gs
sarl
fdiv
xlat
sbb
xchg
mov
jp
lahf
fmuls
bound
popa
pop
arpl
pop
dec
cmp
xchg
fldcw
fld
add
aaa
orps
push
mov
mov
jo
adc
and
cmp
pop
je
add
or
sub
in
xor
insl
mov
cmp
xchg
in
test
pop
mov
jecxz
sub
je
mov
fbstp
sbbb
and
push
pop
or
mov
cmp
imull
fs
jge
test
test
adcl
pop
testb
sbb
dec
in
aas
insb
sub
push
mov
pop
cmpsl
dec
jp
xchg
mov
xchg
mov
push
shr
cmp
sub
dec
adc
mov
jmp
mov
push
pop
outsb
push
mov
pop
adc
and
test
pop
mov
repz
orl
in
mov
clc
dec
lds
push
in
shr
popf
jecxz
ret
or
cmpl
jb
xor
xor
bound
push
pop
outsb
sbb
xor
xorl
xchg
loopne
pop
mov
das
ss
mov
and
sub
jp
mov
lahf
mov
pusha
movsl
jns
into
pushf
jae
or
or
dec
inc
pop
mov
pop
sbb
xchg
push
mov
mov
jle
xor
sbb
dec
movsb
test
dec
das
mov
and
inc
push
cmp
test
jns
andl
or
sbb
inc
add
lods
fwait
pop
jnp
std
mov
add
lds
pusha
mov
jb
inc
decl
loop
mov
pop
cltd
jae
jb
xchg
push
es
pop
mov
fstps
cmp
sub
dec
imul
mov
xchg
ljmp
clc
xchg
pop
mov
pop
movsl
fsub
fnstsw
push
subl
js
fimuls
call
mov
arpl
push
ja
push
jno
out
cld
jmp
ret
sbb
pop
repz
bound
cmp
sub
mull
idivb
mov
sub
push
cmp
jno
inc
stc
lahf
inc
xchg
mov
int3
sahf
xor
ljmp
frstor
sbb
mov
cmp
gs
sarl
pushf
sbb
std
stc
cmp
sti
lock
in
imull
call
mov
arpl
sbb
push
add
lahf
add
js
cmp
inc
inc
lds
mov
xchg
and
mov
add
ds
sub
aad
mov
and
cld
sti
scas
imul
xor
mov
dec
sbb
pop
clc
push
inc
dec
clc
std
jo
ret
lods
in
and
or
sbb
mov
or
ror
insb
sbb
add
movsl
jmp
imul
jb
jmp
ss
sbb
pushw
xchg
lret
imull
call
mov
arpl
sbb
push
add
lahf
add
js
cmp
inc
inc
lds
mov
inc
sub
das
ret
jmp
out
xor
aad
mov
and
loopne
sub
sub
pop
pop
xor
mov
insb
cld
cmpsl
mov
inc
add
mov
adc
or
bound
push
dec
push
mov
iret
xor
popa
loop
jne
jne
dec
lods
jo
mov
or
add
iret
mov
daa
insl
call
lods
movsb
mov
xor
mov
xchg
cwtl
adc
sbb
imul
inc
mov
jno
lods
xchg
outsb
sub
sub
dec
xor
call
xlat
push
sbb
inc
adc
fcmovnbe
or
ja
stc
sub
arpl
loope
xor
fstl
fadds
xorl
lods
mov
or
and
aaa
mov
movups
sub
insl
rcl
cltd
dec
gs
pushf
cmpsl
xor
hlt
or
outsb
push
inc
sbb
jns
xor
lods
cmc
lret
adc
pop
xchg
repnz
out
sub
or
std
insl
jge
ror
dec
jne
fs
sahf
jnp
dec
xchg
dec
scas
push
call
push
xchg
mov
in
loopne
pop
or
mov
cs
ret
lds
es
inc
sub
dec
and
fstpt
cld
mov
repz
jle
sbb
inc
icebp
loope
addr16
pusha
scas
testl
xor
in
fstps
sub
mov
jo
mov
or
push
dec
jno
jg
push
inc
aaa
fcoml
int
jmp
dec
cmp
jl
sahf
into
mov
mov
lret
sbb
popa
and
adc
fstl
cmp
xchg
jle
mov
jl
outsl
mov
pop
pop
inc
lods
loopne
xor
push
mov
pushf
out
pop
mov
mov
pop
fcomi
clc
mov
and
in
enter
stos
test
xor
test
mov
lahf
sbb
push
in
add
mov
popf
rclb
dec
int3
mov
sub
or
movsl
sub
inc
in
xorl
lods
mov
or
and
aaa
mov
and
or
xchg
mov
shlb
shlw
fdivl
outsl
out
sub
dec
mov
aaa
pop
xor
add
xchg
mov
jmp
gs
mov
hlt
jmp
fiaddl
sbb
jnp
out
es
cwtl
push
sbb
sbbl
cwtl
xor
negl
sub
xchg
mull
jecxz
cmp
mov
cmp
cmc
addr16
push
push
out
cs
leave
out
mov
fcmovne
add
mov
shll
jnp
push
aad
sub
add
jne
dec
lods
jo
mov
or
dec
lcall
lret
fdiv
outsb
movl
imul
fidivrl
out
orb
popf
mov
mov
aaa
push
push
out
popf
stos
repz
jae
mov
fst
ja
push
rolb
call
adc
xor
cmpsl
enter
les
negb
test
in
ss
inc
add
inc
jbe
pop
mov
imul
rcl
cmp
sub
dec
adc
mov
mov
adc
sbb
xchg
dec
test
xor
mov
pop
xor
dec
and
rcrb
imul
out
xor
sbb
ret
ss
ss
sbb
ja
js
lret
mov
out
test
sbb
lcall
pop
outsl
sbb
sti
inc
out
lock
les
sub
mov
fisttpll
test
xor
add
sub
ljmp
cs
and
subb
dec
add
mov
pop
inc
cmp
push
cmp
pop
or
push
ss
sub
out
popf
pop
jne
sub
pop
sub
pop
scas
mov
mov
pop
inc
xor
mov
cmp
daa
jecxz
dec
das
dec
push
lea
std
int3
jp
xchg
subb
mov
mov
cmc
cli
inc
into
outsb
cmp
aad
mov
xchg
lcall
les
lds
js
cmp
xchg
cmp
pop
or
jbe
out
stos
shl
adc
add
jne
loopne
xchg
je
xchg
jge
mov
mov
mov
call
das
adc
gs
lea
or
sbb
push
insb
aaa
fisttpl
mov
add
fimull
scas
mov
xchg
mov
sub
xchg
or
sub
iret
lods
inc
js
negl
cmp
inc
jecxz
in
or
popf
add
jne
dec
mov
jne
shrb
jo
jnp
xor
jecxz
jo
xchg
pop
cmp
xchg
mov
mov
mov
adc
lcall
mov
negb
insb
es
hlt
shr
cmp
sub
lret
enter
in
sahf
das
icebp
stos
pop
stos
pop
std
imul
in
pop
jl
fwait
imul
mov
jns
popa
cmp
movb
insb
push
pop
xchg
or
jl
out
mov
xchg
mov
outsl
jbe
aaa
cmpl
xlat
sbb
sub
add
stos
mov
cli
call
imul
mov
adc
mov
adc
cltd
cli
mov
or
sub
mov
adc
in
cmp
sub
pop
ljmp
jns
cmp
lcall
leave
push
das
out
mov
lea
ror
ret
imul
dec
cltd
jg
pop
cmp
mov
mov
sbb
push
mov
or
addr16
xor
rclb
sti
inc
adc
cld
int3
ds
jnp
push
sbb
mov
out
mov
mov
add
jl
pop
cmp
adc
cmp
push
addb
ret
mov
mov
pop
push
loop
movsb
jg
mov
xor
push
ss
iret
mov
sbb
xor
cmp
and
lret
lods
adc
xor
lcall
and
popf
push
lahf
mov
xlat
shrb
lods
lock
mov
and
dec
test
cmc
negl
and
ret
push
dec
imull
fsubrs
cs
das
in
cmp
hlt
pop
inc
cmp
lret
jle
sub
and
gs
rclb
pop
push
les
out
fisubs
or
std
subb
insb
jbe
sbb
rsqrtps
clc
jnp
add
jne
int3
adc
xor
mov
xchg
sahf
mov
mov
hlt
call
out
mov
inc
mov
sbb
filds
sub
sbb
pop
inc
jp
and
test
fdivrs
and
push
jno
imul
sub
xchg
jae
mov
flds
push
add
adc
gs
ret
lods
sbb
fbstp
or
jl
stos
testl
adc
jg
mov
out
pop
addr16
pusha
scas
testl
mov
jmp
and
insl
testb
fisttps
pop
and
xchg
clc
stos
jmp
in
adc
add
adc
ret
or
call
cmp
mov
xchg
add
cs
repnz
and
ret
and
fldl
inc
gs
mov
movb
fs
ds
in
outsb
int
xchg
mov
leave
and
inc
lret
addl
cmp
popa
or
pusha
mov
xchg
scas
in
mov
inc
addr16
stc
imul
sub
clc
add
ja
pop
mov
xor
mov
imul
push
popf
jmp
ss
xchg
add
fstpt
dec
push
js
xor
sbb
jmp
pop
test
fldt
jne
jne
dec
lods
jo
mov
or
jne
das
pop
inc
mov
xchg
addr16
xchg
jne
hlt
inc
stc
or
scas
sub
iret
cmpsb
in
pushf
cmp
les
adc
es
xchg
loope
adc
adc
aad
lods
xchg
or
xorb
sbb
pop
loop
add
ret
pop
fwait
adc
out
add
jne
mov
sub
mov
xchg
sahf
mov
loope
jnp
pop
sub
sub
faddl
imul
adc
call
jns
int3
test
fdivrs
and
push
jno
imul
sub
xchg
jae
mov
flds
push
add
adc
gs
ret
lods
sbb
fisttps
or
dec
andl
decb
add
dec
jae
jl
or
insl
testb
fisttps
pop
and
xchg
clc
stos
jmp
in
adc
add
adc
ret
or
call
cmp
mov
xchg
add
cs
cmp
push
jb
cld
sbb
and
ret
and
fldl
inc
gs
mov
movb
cmpsl
add
cld
xchg
mov
leave
and
sbb
jecxz
pop
iret
xchg
mov
mov
fsubr
jno
mov
sahf
dec
xlat
in
cwtl
pop
cmc
addr16
jne
cmp
ja
addr16
mov
lea
inc
xchg
cmc
dec
les
inc
jmp
jl
mov
jecxz
sub
je
xor
cltd
cltd
or
nop
jmp
or
cmpsl
dec
lea
push
movsl
cmp
xlat
movsb
loop
jmp
in
mov
div
jg
outsl
and
xor
and
lret
icebp
jo
andb
xchg
insb
mov
arpl
icebp
loopne
mov
sahf
adc
jle
lods
push
sbb
pop
addr16
push
adc
fstpt
pop
dec
lea
add
and
jecxz
mov
pop
insl
inc
mov
ret
es
dec
jg
rcll
sbb
pop
sub
mov
dec
test
inc
aad
cmp
add
dec
push
sub
icebp
cmp
adc
sub
cmp
or
cld
pop
cmp
cmc
push
icebp
rcrb
enter
sub
adc
ret
push
mov
dec
inc
out
fadds
cmpsl
lea
sbb
xor
imul
jecxz
gs
pusha
inc
insl
adc
es
cmp
cmp
cmp
lds
mov
and
popa
cmpsb
dec
dec
mov
pop
add
jne
dec
lods
jo
mov
or
cmp
fists
bound
cltd
xorl
into
arpl
ret
out
sti
insb
sbb
pop
or
mov
add
push
in
bound
add
pop
dec
jle
sbb
sbb
fwait
repnz
stos
jnp
ss
dec
sbb
ret
push
add
fs
or
aam
sbb
shl
in
xchg
test
jle
dec
js
push
jp
pop
push
sti
pop
mov
imulb
pushf
xchg
push
into
in
rcr
rolb
lcall
call
cmp
mov
pop
or
cmc
loope
xor
pushf
or
inc
in
xorl
lods
mov
or
and
aaa
mov
sbb
in
fdivl
dec
push
and
je
out
mov
pop
loopne
push
pop
jp
xor
inc
add
fsubs
push
cmpsb
daa
mov
icebp
push
ds
and
fldl
pop
fnstcw
fsubrl
hlt
jle
push
scas
xchg
je
xor
push
add
gs
inc
dec
out
add
add
jecxz
idivl
lret
xor
mov
out
call
mov
out
sbb
outsb
enter
xchg
xchg
addr16
idiv
arpl
jns
pop
imul
mov
push
into
and
imul
xchg
mov
mov
push
fsin
or
jg
int3
pop
out
and
or
iret
les
xchg
pop
mov
mov
mov
dec
test
pop
push
xchg
aam
xor
lods
scas
mov
sbb
push
mov
add
sub
in
xchg
lds
and
es
sub
rorb
sahf
into
ret
sarl
sti
inc
nop
push
adc
add
inc
or
outsl
jp
gs
outsb
pushf
push
lods
xchg
push
das
adc
mov
dec
pop
mov
shl
xchg
out
mov
fnstenv
outsl
out
aam
dec
imul
sbb
pop
inc
lea
and
loop
cld
adc
mov
into
pusha
xchg
pop
pop
jnp
pop
push
imul
xor
lods
movsl
xchg
sub
ret
scas
mov
fwait
xchg
push
mov
inc
adc
sbb
mov
test
xorb
fsubl
push
lods
or
ds
jge
ret
sar
sub
add
jge
call
ljmp
inc
push
push
or
pushl
lods
cli
or
enter
stos
mov
fsubrl
xor
cmp
pop
xlat
jbe
push
orb
cmp
cmp
divb
inc
mov
and
cli
jle
rorl
test
inc
sub
rorl
pop
int
mov
pop
das
insb
xchg
hlt
sub
arpl
inc
fadd
mov
sub
xchg
push
lret
inc
inc
xchg
ss
test
jge
sarb
in
lret
iret
inc
cmpsb
mov
stos
aam
xchg
testl
imul
in
inc
mov
xchg
jns
xor
arpl
pop
das
insb
xchg
hlt
and
loop
mov
xor
stos
mov
mov
xchg
data16
mov
adc
pop
cmp
mov
cmp
hlt
xor
xchg
xchg
imul
pop
cli
jne
lds
jmp
or
pop
xchg
fadd
pop
out
xchg
fstps
or
dec
pushf
jns
scas
mov
leave
addr16
sahf
aas
or
and
mov
mov
mov
iret
xor
dec
in
push
jp
mov
loopne
jne
sub
mov
imul
or
in
jae
inc
or
fadd
pop
out
xchg
fstps
or
fstpt
sti
sahf
in
incb
jnp
xchg
bound
adc
clc
pusha
daa
sbb
adc
neg
xchg
lret
mov
je
clc
movsl
mov
lock
je
int
mov
inc
sbb
add
in
pop
push
rcrl
mov
push
loope
repz
cmpsb
adc
mov
bound
jg
es
test
xor
pop
push
push
cwtl
pop
aam
push
dec
shll
adc
sub
inc
rorl
aas
xor
cmp
sbb
or
rcl
iret
mov
jb
sub
pusha
push
xchg
movsb
xor
lock
inc
or
pop
fists
mov
add
test
stos
cmpsb
in
out
mov
fcmovnbe
int
xor
inc
enter
mov
out
daa
ret
outsl
addb
inc
nop
shll
jb
cmp
mov
daa
jnp
hlt
cld
mov
hlt
inc
stos
xor
dec
xor
adc
test
scas
sbb
and
sub
outsb
aam
jb
adc
enter
mov
in
call
imul
shll
cmp
ljmp
push
push
stc
inc
sub
aam
mov
les
js
mov
shrl
lock
mov
mov
insb
jbe
mov
push
daa
mov
outsb
add
and
inc
xchg
lea
jle
pop
std
cmpl
xor
fcom
rclb
aaa
jp
mov
divl
fcoml
jle
adc
shrb
inc
pop
add
fsubr
pop
pop
dec
ja
loopne
push
and
std
pop
das
insb
xchg
hlt
pop
out
in
xor
jg
test
es
xchg
push
je
jmp
xor
outsl
push
mov
test
lahf
push
pop
fidivrs
push
das
and
addr16
adc
mov
lahf
mov
shrl
cwtl
fwait
in
xchg
sbb
push
jae
xchg
in
adc
repz
xor
or
daa
scas
mov
dec
jne
jo
int
inc
loopne
mov
pushf
jecxz
mov
iret
add
leave
adc
lods
lock
into
out
add
jp
jae
xchg
gs
sbb
xchg
pushf
pop
xor
push
inc
xor
and
loop
add
mov
xlat
or
int
adc
filds
xchg
sbb
shll
sbb
push
adc
and
fildl
push
mov
dec
adc
push
outsb
lret
pop
das
pop
pusha
sub
addr16
outsb
inc
shlb
cmp
inc
mov
notl
push
push
cmp
sbb
jne
pop
loope
out
in
outsb
mov
cld
sub
imul
push
aad
insb
sub
pop
xchg
subl
jg
push
jecxz
fcoms
in
shrb
stos
xchg
push
int
fucomp
mov
dec
lret
xor
and
pusha
insl
call
xchg
pusha
outsb
xchg
shl
pop
ret
fadds
incb
xor
rcrb
mov
adc
adc
icebp
cwtl
icebp
fildll
pop
out
in
xor
cmp
int
test
ret
lahf
subb
dec
jmp
xor
outsl
leave
adc
js
push
pop
fidivrs
dec
mov
cmp
and
mov
negl
in
xchg
push
and
xor
test
insl
mov
shlb
add
sub
mov
lret
xchg
rcll
push
scas
push
adc
mov
lret
bound
sub
cld
xor
adc
and
inc
cld
std
lods
sub
xchg
gs
sbb
mov
repz
add
call
pop
push
mov
in
fstps
jl
inc
in
adc
popf
cmp
ja
imul
nop
shll
sbb
push
adc
and
fildl
push
mov
dec
adc
push
outsb
lret
pop
das
pop
pusha
sub
addr16
outsb
inc
push
es
xor
sub
mov
cmp
sbb
jne
pop
loope
out
in
outsb
mov
cld
sub
imul
push
aad
insb
sub
pop
xchg
subl
jg
push
mov
lcall
or
ret
stos
xchg
push
int
fucomp
mov
dec
lret
xor
and
pusha
insl
call
xchg
pusha
clc
pop
mov
popf
fcompl
mov
popa
cld
pop
inc
pop
jb
rclb
iret
fldt
or
inc
ret
jnp
loope
mov
sbbb
mov
jnp
ret
sbb
xor
xchg
daa
repnz
pop
sub
jmp
inc
pop
mov
in
rol
in
mov
pop
xlat
mov
nop
dec
fsubr
popf
inc
mov
cmc
cmp
jle
mov
xchg
mov
sub
adc
push
scas
push
aam
outsb
insb
repz
push
lret
adc
pushf
test
negl
lds
pop
push
aaa
add
aam
cmp
cmp
sahf
cli
outsb
cs
scas
cwtl
pop
add
popa
sbb
or
aaa
movsl
and
sub
clc
and
and
xchg
shlb
push
mov
outsb
dec
out
inc
aas
fdivrs
aad
pop
jp
cmp
int
push
scas
inc
clc
sbb
fiadds
lods
sahf
sbbl
adcb
decb
sbb
mov
pop
xor
loopne
push
mov
fists
jge
mov
out
in
mov
pop
andl
pop
adc
sbb
fldt
sbb
lods
test
stos
or
push
xchg
sbb
call
mov
scas
jbe
fisubl
out
pop
lcall
repz
xlat
xlat
lahf
test
mov
pop
das
insb
xchg
hlt
inc
jns
loop
pop
mov
insl
cmp
test
add
test
jns
or
out
push
inc
insl
adc
cld
cmc
or
rolb
stos
out
xchg
add
push
push
adc
lods
sub
lods
pop
push
inc
out
roll
mov
xchg
sbb
inc
in
inc
add
imul
cmp
push
cmp
pop
jle
aam
xchg
ljmp
cmp
and
xchg
mov
push
js
in
ljmp
out
and
sub
pop
loopne
dec
aam
xchg
fistpll
pop
aam
pop
rorb
mov
daa
xor
cli
adc
dec
fisubrl
mov
out
and
fwait
adcb
shl
pop
dec
stos
push
pop
rorb
mov
add
inc
dec
jle
iret
mov
inc
cs
jmp
push
pop
vhsubps
lret
mov
push
sub
loop
adc
in
mov
adc
sub
fadds
lods
or
jecxz
clc
push
pusha
lret
xor
mov
lcall
insb
sub
fcoms
rcrl
data16
imulb
ret
mov
or
fcoms
or
clc
jb
xchg
cli
jp
sbb
or
fcoms
or
xchg
adc
aaa
xor
sub
fcoms
or
out
pop
adc
xchg
loope
lock
fstpl
or
fcoms
or
dec
cli
fldt
in
mov
mov
or
fcoms
or
popf
roll
loope
pop
and
fcoms
or
dec
sahf
aas
cmpsl
inc
pushf
aaa
xor
sub
fcoms
or
fisubl
sahf
mov
add
repnz
adc
outsb
lahf
dec
jmp
ret
cvtdq2ps
sbb
inc
stos
push
inc
cmpb
add
and
iret
sbb
shlb
subl
arpl
sbb
inc
push
mov
stc
imul
add
push
nop
cmp
dec
xchg
dec
popa
pop
xchg
add
and
dec
and
dec
mov
int
jecxz
and
inc
pop
adcb
sbb
mov
dec
lds
fimuls
jle
pop
mov
and
loopne
arpl
push
or
pop
mov
test
fsubs
mov
pop
mov
ret
mov
xchg
sahf
cmp
fwait
mov
ret
out
mov
and
mov
shrl
ss
pusha
addb
popf
jne
adcb
nop
jns
or
arpl
jge
pop
out
adc
and
insb
xchg
sbb
insb
jg
pop
test
aaa
xor
mov
cmp
fs
fcompl
adc
pop
jl
jecxz
inc
pop
not
in
in
inc
dec
lock
mov
mov
add
scas
or
subb
fmul
pop
cld
jle
pop
js
push
daa
rcll
outsl
cmp
aad
les
add
ljmp
ljmp
pop
es
xchg
mov
and
push
sahf
pop
movsb
push
lods
mov
xchg
rcll
fstpl
mov
ss
push
movsb
in
xchg
dec
insl
daa
cmp
or
add
loope
fwait
adc
jne
icebp
xchg
fucom
push
ja
repz
pushl
jno
or
gs
jmp
jno
insl
mov
mov
pop
cmpsl
xor
enter
adc
jg
mov
cld
sbb
ds
mov
mov
xchg
push
repz
cmp
inc
cmp
inc
fistpl
mov
fstps
insb
xchg
mov
les
jp
in
fildl
std
es
daa
add
lcall
push
pop
pop
adc
daa
cmp
notl
mulb
lcall
fwait
or
sbb
add
xor
jp
imul
add
popa
mov
add
inc
out
and
mov
xchg
pop
and
mov
jl
push
xor
sbb
dec
mov
roll
mov
cltd
fwait
out
sub
mov
pop
das
insb
xchg
hlt
paddsb
rcr
push
aam
idivb
sbb
daa
adc
popf
xor
test
add
xor
pop
mov
daa
repnz
mov
mov
andl
pop
shrb
test
add
hlt
xchg
cmp
mov
fwait
hlt
and
pminsw
push
pop
das
mov
jnp
inc
mov
xor
mov
push
mov
fldt
into
dec
das
mov
popl
shrl
enter
rcrl
clc
insb
test
les
sbb
sub
arpl
test
std
pop
rcrb
les
cmp
clc
rorl
cmp
out
sub
pusha
fisttpl
sub
jge
jne
fcmovne
or
and
cmpsl
gs
wrmsr
mov
push
andb
or
or
jb
scas
add
je
cli
cmp
mov
dec
xor
sub
mov
mov
inc
sub
mov
xor
and
sbb
out
vpmacssdd
std
xlat
sbb
aaa
mov
scas
push
into
in
cmp
and
std
ja
lahf
outsb
andb
in
fs
les
sbb
filds
mov
pop
sbb
push
mov
add
push
test
xor
mov
loop
movsl
jbe
mov
xchg
js
jo
icebp
jne
cmpsb
inc
lods
push
jecxz
pop
arpl
std
insb
ret
int3
roll
lods
or
add
pop
dec
cltd
xor
ss
push
and
sub
add
xor
add
mov
test
dec
sahf
aas
cmpsl
inc
pushf
jne
mov
call
push
pop
or
mov
adc
lcall
cmc
ja
out
push
pop
or
mov
adc
mov
mov
mov
sub
sub
add
std
into
xchg
sbb
mov
push
sbb
lea
sarl
flds
dec
cmpl
add
xor
dec
cltd
push
insb
pop
inc
jns
jecxz
lahf
rcrl
aam
cmp
jae
dec
out
fnsave
jns
insb
mov
mov
xchg
add
lds
sbb
sbb
add
popf
clc
lahf
lret
cwtl
stos
clc
out
es
fcoml
mov
and
stc
pop
lock
dec
test
adc
dec
into
es
jnp
adc
mov
pop
subb
pop
mov
ss
jmp
pop
push
add
or
lock
test
mov
jo
mov
call
cs
idiv
scas
popa
das
cmp
out
mov
je
push
xor
enter
pop
hlt
add
or
enter
push
xchg
icebp
adc
jno
xor
out
or
push
sbb
and
mov
clc
mov
pushf
loopne
cmc
sbb
and
mov
lods
jecxz
ds
jb
mov
cmpb
scas
int
xchg
movsl
xor
dec
xor
push
pop
xchg
pushf
mov
mov
sbb
mov
imull
pop
mov
dec
ja
jge
das
push
cmp
inc
aaa
fistpll
inc
xlat
push
push
sbb
inc
loop
mov
xor
mov
mov
call
add
daa
mov
loop
sub
xchg
cmp
push
dec
push
daa
mov
loop
sub
data16
pop
or
xchg
jp
or
loopne
lea
xor
js
sarb
or
or
or
sub
pop
mov
jp
mov
or
push
mov
and
jmpw
movsl
cli
sbb
cmp
xchg
movsl
cltd
sub
or
jge
pop
scas
decl
mov
sub
fwait
jne
mov
ljmp
stos
cmp
xchg
arpl
loop
nop
sub
imul
repz
xor
sti
lret
into
fwait
test
lock
push
lods
pop
rcrb
dec
popf
jne
mov
cmc
outsl
or
xor
loopne
cmpl
jecxz
addb
je
psllw
ds
push
les
test
enter
adc
iret
das
jecxz
repz
inc
xor
loop
mov
add
pop
pusha
xchg
pop
aam
int
sti
cld
fwait
stos
pop
dec
out
cltd
fsubrl
jae
xchg
sbb
mov
jecxz
jle
leave
fisttpll
in
pop
cmp
sub
add
pop
mov
push
daa
sub
rorl
jae
faddp
popf
mov
xor
ret
fwait
jg
loop
pop
dec
outsb
rclb
add
ret
call
push
push
cwtl
pusha
ljmp
jge
movb
sti
fstl
roll
ljmp
jmp
pop
bound
sub
aad
push
mov
pusha
inc
mov
cmpsl
jne
shll
xor
in
mov
add
jp
cltd
dec
cmp
inc
dec
sub
shlb
cmp
push
ja
call
push
sarb
jns
add
jae
movb
ret
mov
aas
jno
and
add
stc
aas
sahf
fisttpll
pushf
cmp
scas
lahf
and
inc
das
loopne
lahf
dec
sub
std
inc
lahf
cli
or
push
xor
xor
jne
shl
jle
cli
jbe
jnp
cmpps
cmpsb
sub
addb
inc
mov
pop
das
insb
xchg
hlt
cs
cs
add
mov
and
fdivrl
cmpsl
push
xor
mov
push
subb
lcall
daa
and
jne
loopne
fcmovnbe
or
mov
fwait
jne
nop
fldl
lret
adc
add
subl
add
adc
lahf
push
dec
pop
hlt
mov
jbe
jg
inc
fsts
leave
ljmp
mov
mov
jecxz
sbb
enter
mov
pusha
push
pop
sub
jmp
dec
jl
push
out
cmp
pop
xchg
inc
push
pop
mov
mov
pop
das
insb
xchg
hlt
push
sbb
lret
jge
insl
push
xchg
loope
hlt
and
imul
out
or
mov
sub
cmpsb
test
mov
inc
mov
and
loop
add
lods
jo
shll
inc
or
inc
mov
divl
ds
push
jb
in
cs
fisubl
dec
scas
xchg
imul
or
pushf
gs
icebp
in
int
movsl
jp
out
xorb
addr16
lret
sub
movsb
add
jle
inc
sbb
ret
mov
dec
nop
xchg
pop
xor
in
mov
jge
lock
and
mov
inc
inc
insl
mov
iret
mov
inc
or
fists
es
into
es
inc
cmp
les
shrl
and
pusha
outsl
sbb
push
ret
rol
sub
test
sub
xlat
lahf
insb
scas
sbb
sub
outsl
jmp
inc
daa
mov
out
and
jmp
imul
out
add
cmp
adc
push
aam
pop
jle
int3
loope
pop
cld
pushf
testl
jge
inc
fsubrl
cmp
xacquire
cmp
sub
aas
pusha
outsl
sbb
xor
xchg
inc
insl
js
fdivs
ret
dec
push
pop
rorb
mov
lods
sar
imul
ret
sub
outsl
mov
mov
adc
push
aam
pop
jle
cmpsb
lcall
pop
sbb
lret
push
xchg
or
pop
aam
in
mov
lret
jmp
bound
scas
jbe
ficomps
outsl
testl
setns
es
mov
xacquire
cmp
and
sbb
push
ficomps
pop
rclb
rorb
jecxz
ficoml
rorb
mov
ljmp
mov
dec
roll
mov
mov
xchg
dec
fwait
inc
dec
aam
mov
push
lods
lods
xchg
sub
outsl
pop
test
sti
mov
sbb
xchg
fnstcw
outsl
xor
and
push
jecxz
pop
arpl
std
insb
pop
sbb
or
and
loopne
xchg
sub
fsubrs
bnd
sbb
mov
or
sub
xlat
lahf
insb
scas
sub
mov
cmp
hlt
les
and
mov
and
mov
sbb
add
sub
je
adc
or
fcoms
or
and
add
les
out
sbb
sbb
shl
xchg
cmp
shl
sub
push
ficomps
pop
rclb
mov
xchg
into
push
xchg
dec
dec
jb
fcomi
shl
mov
xor
cmp
cmp
leave
stos
dec
lret
jle
insb
xor
or
push
xchg
adc
ficompl
jmp
inc
pushf
push
jbe
enter
sbb
cmp
mov
imul
or
fcoms
or
add
sub
in
cli
sub
aas
pusha
outsl
sbb
add
test
and
fdivl
cmpsl
sub
jp
fwait
scas
out
aaa
mov
xchg
pop
ds
fucomip
mov
add
mov
and
jo,pt
add
cmp
jecxz
push
xacquire
cmp
mov
inc
mov
jno
test
stos
fisubs
dec
inc
cmp
popf
inc
ljmp
aas
xchg
xchg
and
std
mov
jecxz
jecxz
sub
test
xchg
dec
mov
test
xchg
xchg
xchg
stos
dec
enter
ja
insb
imul
mov
mov
add
loopne
pop
sbbl
mov
lcall
and
push
loop
mov
sbb
repnz
gs
mov
sub
jl
adc
lahf
sub
inc
sbb
push
and
cmp
scas
iret
dec
mov
std
pop
das
insb
xchg
hlt
daa
or
rclb
inc
inc
mov
push
xor
pop
imul
ja
dec
divl
pop
and
stos
into
push
mov
and
jmp
cmp
fs
cwtl
pop
cmovbe
push
or
icebp
rcll
push
fcoms
mov
mov
pop
das
insb
xchg
hlt
sub
arpl
test
std
pop
shlb
in
pop
std
or
sahf
insl
jb
test
xchg
dec
xchg
pop
sarb
dec
in
push
incb
xor
rcrb
add
fidivl
in
arpl
pop
das
insb
xchg
hlt
pop
sub
jns
test
jb
push
and
in
adc
mov
add
fmuls
fidivs
or
mov
push
pop
notl
std
fs
div
mov
lret
cwtl
bnd
or
je
negb
jae
dec
dec
dec
push
sub
inc
inc
imul
push
pop
and
mov
adc
xchg
mov
inc
lds
les
adc
out
cmp
stos
rcl
xchg
pop
push
add
pop
test
or
push
div
cmp
xchg
scas
push
in
divb
in
push
mov
orb
dec
cmpsl
mull
pop
jne
int3
ret
mov
xchg
pop
fdivrl
jge
sbb
rcrb
jae
dec
mov
cs
jmp
push
mov
cmp
in
xor
add
pop
shlb
out
mov
jae
adc
and
je
or
insl
into
movsl
aam
sub
mov
fidivrl
icebp
daa
fsubrl
nop
insb
jbe
push
cli
sub
lods
xchg
loopne
xor
fiadds
aad
mov
int
xor
mov
sbb
sub
cmpsl
xchg
fdivrs
push
push
sub
xor
pushf
pop
cmp
inc
pop
or
cmp
rorb
mov
mov
das
and
sub
xlat
mov
test
inc
lret
lods
jo
mov
fcoms
std
pop
mov
cli
and
inc
in
xchg
push
jns
leave
or
or
fwait
inc
je
outsl
shlb
mov
add
out
shrb
fstps
adc
jbe
push
push
andb
push
orl
mov
jge
dec
leave
jmp
outsl
add
mov
scas
aas
jl
mov
cmpsb
mov
jbe
inc
and
lock
xor
add
fnstsw
mov
insl
aad
jbe
aam
cmpb
push
dec
and
and
mov
imul
xchg
enter
pop
das
insb
xchg
hlt
inc
bound
mov
out
pop
sets
mov
gs
divl
mov
mov
add
mov
inc
sub
mov
out
inc
icebp
dec
mov
add
mov
outsl
sti
mov
mov
mov
ret
fimull
test
and
sbbb
movsb
pop
pop
push
es
stos
dec
cmp
sub
inc
push
push
mov
int
in
cmp
lods
test
mov
std
pop
das
insb
xchg
hlt
cmpsl
rcrb
stos
pop
imull
leave
ds
inc
dec
in
xor
fstpt
dec
or
dec
push
fs
push
aas
xchg
mov
inc
pop
inc
sbb
pop
das
insb
xchg
hlt
lcall
or
lods
xchg
ss
or
xor
je
repz
mov
je
pusha
cmpl
orl
rep
icebp
mov
sbb
add
cmpsb
push
es
les
test
adc
mov
mov
pop
das
insb
xchg
hlt
ja
or
push
mov
cld
pop
pop
mov
scas
lret
stos
test
mov
cmpl
dec
out
add
jp
lods
idivl
in
jmp
mov
mov
rcrl
mov
pop
das
insb
xchg
hlt
ja
or
push
mov
cld
pop
pop
mov
scas
lret
stos
test
mov
inc
and
outsb
cmp
mov
movsb
jp
lods
idivl
in
jmp
mov
mov
rcrl
mov
pop
das
insb
xchg
hlt
cmp
or
adc
cli
testl
jmp
jb
lret
mov
mov
ljmp
popf
testb
data16
dec
mov
inc
push
mov
adc
lds
data16
jmp
out
jae
mov
adc
pop
sub
testb
es
and
call
inc
in
inc
push
and
std
pop
das
insb
xchg
hlt
lret
leave
lret
sbb
jp
or
push
ljmp
clc
or
inc
ljmp
out
xchg
clc
xchg
arpl
int
lahf
ficomps
fwait
aad
or
add
stos
sbb
and
xor
repz
add
or
pop
and
jl
adc
sbb
out
pop
lret
mov
ret
push
adc
popf
pushf
fs
xchg
clc
lcall
jb
sub
add
testb
pop
add
rcll
jp
loope
xchg
dec
daa
enter
push
and
std
pop
das
insb
xchg
hlt
int
insl
jle
out
mov
popf
xchg
xchg
outsb
xlat
push
daa
js
popa
fidivrl
lret
and
imul
out
movl
in
pop
cltd
sbb
repz
outsb
ret
mov
pop
das
insb
xchg
hlt
push
inc
or
or
int
jp
outsl
cli
pop
or
fs
mov
daa
or
lea
mov
scas
js
push
hlt
icebp
cmpsl
xor
data16
adc
push
jb
pop
dec
adc
arpl
pop
fs
add
add
add
jbe
mov
ss
jl
sub
nop
dec
xor
xchg
rcrl
and
icebp
cld
or
mov
mov
insb
xchg
hlt
mov
lret
push
mov
stc
mov
and
inc
lods
cmpsl
ss
xchg
dec
fcoms
xlat
cmc
fcomi
and
hlt
and
jnp
cltd
leave
fsub
xor
push
loop
inc
clc
mov
mov
outsb
imul
xchg
cmp
mov
test
adc
adc
and
lcall
ja
mov
xlat
sbb
fsubrp
scas
mov
fildl
inc
and
pop
or
stos
xor
ret
pop
in
sub
mov
xor
lcall
adc
mov
xchg
pushf
hlt
mov
rcrl
in
jle
ss
lock
mov
xchg
inc
push
and
std
pop
das
insb
xchg
hlt
and
mov
jae
mov
cli
leave
lret
outsb
mov
data16
and
iret
jle
pop
movsl
pop
call
or
popa
and
stos
addl
adc
xchg
xchg
test
push
popf
pop
popl
mov
jo
imul
out
sti
imul
or
inc
test
sub
clc
push
outsb
and
insl
adc
mov
shl
cmpsb
jp
arpl
push
test
nop
mov
add
aam
and
lock
outsb
pop
cmp
pop
push
clc
das
jne
sub
inc
test
mov
mov
mov
pop
cmc
je
dec
call
scas
or
negb
or
xchg
popa
xor
mov
add
lds
mov
mov
mov
aam
inc
int3
push
mov
jno
pop
add
xor
sub
pushl
xchg
or
mov
push
mov
mov
loopne
cmp
in
mov
popf
pshufw
stos
pop
mov
add
or
sub
inc
pop
aaa
mov
cmp
cwtl
movb
push
mov
jnp
cmp
pop
pop
pop
mov
adc
lds
sarl
icebp
repnz
cmpsb
xchg
sbb
lcall
aaa
in
push
xchg
movsl
addr16
test
push
vpunpcklqdq
cmp
subl
out
add
outsb
sub
sub
add
dec
xlat
mov
mov
add
iret
in
jmp
mov
test
inc
loop
scas
imul
or
cmp
sub
das
jp
and
hlt
lods
loope
and
dec
and
lock
mov
das
insb
xchg
hlt
cmpsl
mov
push
or
mov
ja
rcll
outsb
adc
addb
popa
repnz
sarb
jl
mov
mov
push
decl
repz
scas
cld
jns
inc
iret
shrl
enter
cs
inc
out
aam
faddp
testb
xor
push
sub
mov
popa
int3
cmp
shl
sbbb
outsb
pop
adc
les
lahf
push
inc
por
inc
fs
movsb
fwait
mov
cwtl
daa
cmp
addb
movlps
fistpll
pushf
ficoms
enter
jno
fcompl
push
add
or
popa
push
sahf
insl
in
mov
mov
mov
push
in
mov
jmp
push
sbb
mov
jg
xchg
or
insb
xchg
hlt
adc
adcb
push
adc
aaa
ret
sub
jnp
es
push
out
clc
testl
negb
fisubrs
mov
js
mov
jo
fisttpl
fcmovb
inc
aad
xchg
xor
ja
out
dec
jns
jns
insl
lods
lcall
lock
or
lahf
mov
adc
outsb
lcall
mov
aam
lds
or
push
pop
loope
jle
mull
sub
test
or
pop
sub
adc
nop
cmp
push
jb
mov
xchg
push
ret
dec
jns
cmp
orl
push
mov
loopne
loope
dec
mov
dec
cltd
inc
loope
cwtl
cs
sub
jge
fcoms
aad
out
popf
ss
mov
lahf
dec
mov
adc
rol
sbb
popf
into
sub
xchg
add
daa
and
lcall
shll
sbb
loope
push
mov
pop
in
push
inc
jp
mov
shll
dec
mov
shll
adc
adc
aas
ds
inc
and
inc
hlt
das
push
ret
pop
imul
xor
mov
stos
movzwl
xchg
jae
fcmovbe
xchg
lret
dec
jle
sbb
cmp
sbb
fwait
stos
dec
outsb
mov
inc
stos
xchg
lds
pop
rcrb
pushl
ficompl
inc
pop
icebp
adc
ret
fidivrs
xor
mov
mov
dec
ljmp
sti
push
sub
insl
es
cmpsb
or
mov
scas
cmp
xor
or
insl
cmp
fdiv
nop
in
jp
sub
mov
jge
jecxz
push
fnsave
ds
sub
sbb
out
push
or
mov
loope
ficoms
jne
enter
sub
or
pop
out
sbb
fwait
stos
dec
outsb
mov
inc
stos
xchg
lds
pop
rcrb
pushl
ficompl
inc
pop
icebp
adc
ret
fidivrs
xor
mov
mov
dec
ljmp
sti
push
sub
insl
es
cmpsb
or
mov
scas
cmp
mov
mov
cltd
mov
aas
cmp
mulb
dec
xor
pop
jmp
sub
add
stc
push
lods
xor
mov
scas
jmp
dec
outsb
mov
inc
stos
xchg
lds
pop
rcrb
pushl
fisubl
jp
dec
scas
gs
or
or
popa
fdivr
cltd
xor
mov
mov
dec
ljmp
cmp
insb
xchg
dec
cwtl
xor
icebp
push
movb
mov
aaa
xor
mov
inc
fdivrp
mov
lds
stos
shr
push
pushf
sbb
xor
mov
inc
push
pushf
mov
add
xor
mov
or
sbb
lretw
ror
fsubl
lcall
adc
inc
xor
jno
add
stc
ljmp
test
dec
pop
js
mov
fiadds
adc
or
add
in
xlat
mov
or
jns
sub
cmp
scas
and
lret
stos
adc
push
xchg
insb
daa
roll
dec
ja
sub
lret
enter
pop
sub
scas
fdiv
nop
in
jp
sub
mov
jge
jecxz
push
push
xchg
cmp
push
add
mov
lock
jne
or
xchg
movsb
cmp
fwait
lods
scas
stos
scas
pop
loope
jle
imul
lods
lds
pop
add
mov
push
nop
fwait
je
jnp
lret
stc
mov
imul
dec
add
xor
mov
loopne
lods
scas
daa
repnz
add
push
loope
sti
out
test
pop
fs
push
mov
addr16
mov
dec
xchg
pop
sub
mov
adc
xor
push
mov
sub
mov
push
pop
xchg
sbb
test
out
fnstsw
adc
imul
jb
dec
pop
nop
orb
sbb
filds
jmp
mov
shrb
adc
into
adc
xor
mov
mov
adc
js
pop
outsl
mov
lret
loopne
or
insl
jnp
sbb
int
mov
mov
dec
inc
dec
repnz
and
cmp
xchg
fbld
gs
dec
xor
pop
jmp
xchg
push
pop
cmpsb
sbb
aad
add
scas
jmp
dec
outsb
mov
inc
stos
xchg
lds
pop
rcrb
pushl
fisubl
jp
dec
scas
gs
or
or
popa
fdivr
cltd
xor
mov
mov
dec
ljmp
ljmp
xor
icebp
push
xchg
pop
push
int3
xchg
daa
mov
mov
addr16
or
add
mov
add
add
pop
push
in
adc
adc
in
inc
mov
aam
loopw
mov
inc
hlt
adc
or
add
push
pop
in
pop
xchg
bound
sahf
xlat
out
pop
stc
xor
adc
mov
xor
in
or
pop
mov
gs
cmpsb
mov
mov
lock
je
and
push
and
push
pop
aad
adc
cmp
lahf
out
iret
sub
jbe
mov
push
addb
jecxz
in
idiv
ss
add
mov
sbb
jo
inc
in
pop
sbb
nop
push
sub
out
adcl
test
cmp
std
repz
dec
push
inc
xchg
repz
iret
and
push
and
push
pop
aad
adc
cmp
lahf
out
iret
sub
jbe
mov
push
addb
jecxz
in
idiv
ss
add
mov
sbb
jo
inc
in
pop
sbb
nop
push
sub
out
adcl
test
cmp
std
repz
jbe
fdivrl
jno
fsubr
mov
outsl
aas
shll
jo
dec
arpl
jo
mov
leave
mov
inc
xlat
mov
push
out
test
in
cmp
cmp
sarl
pop
xor
inc
jbe
push
jmp
scas
push
insl
into
leave
rcrl
or
add
mov
pop
sbb
pop
imul
sub
mov
iret
inc
push
jno
sbb
divb
inc
xor
push
mov
mov
inc
push
sahf
jecxz
sub
pushf
es
push
add
out
mov
js
lahf
pop
cmp
xchg
fmuls
test
pop
cmpsl
cs
pop
pop
sbb
jge
mov
jl
ljmp
fdivrl
jbe
xor
aam
push
inc
enter
mov
push
pusha
mov
nop
lods
les
std
aad
fwait
mov
push
pop
push
and
cmp
stc
rol
jo
psrad
cmp
add
cmp
push
xor
mov
aad
fcmove
inc
fldl
pop
and
push
adc
push
xchg
aas
mov
iret
cmp
dec
sbb
add
repnz
loop
lcall
and
xor
ffreep
add
mov
lock
movaps
jmp
std
pop
xchg
ja
sti
loopne
add
sbb
inc
mov
jb
lds
into
int3
push
jg
mov
mov
stc
dec
mov
loope
mov
cmc
cmpsb
sbb
xchg
js
cmp
notb
inc
add
push
mov
adc
mov
ret
data16
inc
inc
stos
cmp
fisttpl
lahf
inc
sub
pop
xchg
nop
mov
aas
push
fwait
arpl
fsubrl
add
icebp
mov
jge
xchg
mov
popf
pusha
fsubp
pushf
pushf
jae
aad
sbb
fildll
lcall
nop
mov
fmull
sub
xor
jbe
sub
xor
xor
fnstcw
add
out
adc
in
loop
jge
cmp
mov
repnz
inc
add
push
mov
adc
mov
ret
data16
inc
inc
stos
cmp
fisttpl
lahf
inc
sub
pop
xchg
nop
mov
aas
push
fwait
arpl
fsubrl
adc
xchg
scas
lods
loope
xor
arpl
pop
imul
dec
int
dec
jl
sbb
push
out
out
fidivs
popa
fstl
insl
jne
inc
mov
movsb
mov
xor
cmp
dec
lds
jecxz
aas
push
inc
jle
fistl
jecxz
test
mov
ret
data16
inc
inc
stos
cmp
fisttpl
lahf
inc
sub
pop
xchg
nop
mov
mov
lds
mov
xor
jecxz
stos
sti
jg
gs
mov
lret
stos
adc
push
xchg
insb
jg
xchg
mov
pop
jns
idivb
xor
inc
int3
dec
xor
pushf
push
mov
call
push
les
xchg
mov
pop
imul
pushf
mov
jns
gs
xor
jle
adc
loop
dec
lahf
push
push
xchg
jle
jmp
push
hlt
pop
fists
cwtl
pop
and
test
push
insl
fisttpl
inc
mov
push
mov
inc
sarl
cmp
mov
mov
sti
xchg
fs
repnz
jle
cmp
sub
clc
mov
fwait
loopne
jmp
push
cmp
mov
dec
inc
add
clc
fptan
push
pop
lahf
adc
imul
push
popa
xor
cs
jbe
aad
icebp
or
add
daa
and
into
mov
das
add
cmp
sbb
push
mov
jp
fldcw
jle
repz
out
test
cmp
adc
rcr
mov
jno
popa
jo
add
pop
add
xchg
xchg
ret
pop
jl
loopne
lret
stos
adc
push
xchg
insb
daa
roll
dec
ja
sub
push
faddl
daa
fwait
lahf
dec
adc
sub
je
movups
jae
sbb
data16
push
xchg
insb
xor
inc
mov
pop
mov
aaa
aas
lods
inc
mov
adc
cmc
cld
jge
sub
adc
mov
inc
lea
fldcw
lret
fdivl
jbe
pop
shlb
inc
mov
aaa
mov
pushf
push
stos
pop
mov
jne
scas
mov
cmp
jecxz
inc
lea
sti
loope
sub
pop
and
inc
ret
arpl
stos
leave
dec
push
or
scas
push
cwtl
cmp
or
into
sub
roll
rorb
jns
mov
pop
das
insb
xchg
hlt
repz
adc
lahf
or
cmp
pop
or
jbe
insb
inc
sub
int3
xchg
into
pop
jne
push
mov
sub
sbb
aas
es
addr16
lock
jle
xlat
scas
stos
push
pop
fisttps
repz
xor
xor
pmuludq
cmp
inc
sbb
and
cmp
cmp
or
sahf
mov
mov
cwtl
lock
fs
mov
mov
pop
das
insb
xchg
hlt
setno
adc
imulb
push
xlat
mov
cltd
rcll
hlt
jge
cwtl
and
lea
mov
xlat
pop
xor
jne
shr
outsb
sbbl
sub
or
pop
jmp
xchg
ret
push
inc
mov
mov
mov
xor
imulb
scas
addr16
jmp
jb
lods
add
xchg
imul
fnsave
pop
das
insb
xchg
hlt
setno
adc
mov
push
ret
mov
cltd
shll
sub
insl
xor
imul
sbb
call
mov
jge
cmp
shrl
dec
fdivp
mov
or
lret
mov
and
xor
insb
xchg
hlt
pop
inc
xor
cld
sahf
xor
add
das
pop
xsavec
mov
icebp
adc
mov
cmp
inc
das
cmc
or
pop
js
push
pop
adc
inc
das
cmc
sub
push
jmp
dec
stos
mov
and
clc
add
jmp
inc
mov
xlat
fdivrl
dec
addl
dec
pop
inc
push
mov
sarb
mov
mov
cmpsb
aad
sbb
addb
sbb
jo
sub
or
jo
xchg
xchg
pop
jle
mov
adc
pop
cmp
roll
int
cmp
mov
movsl
sahf
lret
jns
fs
nop
int3
pusha
mov
cmpsl
jbe
jmp
fdiv
aas
xor
add
pop
in
sub
jmp
cltd
xchg
movsl
int3
cmp
adc
pushf
mov
mov
stos
rorl
add
or
lods
repnz
das
or
sub
jb
sub
out
popf
sbb
sbb
in
pop
adc
dec
fbld
adc
jmp
call
pop
mov
push
arpl
add
mov
stc
popf
cmp
cmpsl
lods
cmp
popa
js
cmpsb
inc
sarl
test
or
pushf
shll
mov
adc
shr
add
jne
xor
loop
lcall
jecxz
cmp
out
test
insb
inc
sub
fimull
testb
decb
lea
push
fildl
xchg
dec
mov
add
fidivs
fisubrs
sbbl
ret
pusha
cmpl
lcall
popfw
adc
outsb
mov
fadd
mov
out
xor
add
mov
inc
dec
test
push
shl
addr16
out
inc
stos
mov
fwait
addr16
test
xchg
push
push
pop
push
jne
mov
pop
xor
repnz
scas
mov
out
cmpsb
in
adc
out
outsb
jnp
add
shlb
xchg
lea
test
or
inc
add
addr16
roll
jl
std
mov
fwait
inc
xchg
in
pop
popf
push
jl
mov
mov
xchg
repnz
outsl
mov
mov
iret
in
add
dec
aad
sub
add
test
jae
dec
int3
xor
repz
xor
fistl
lods
out
shrl
or
orl
lahf
std
xor
adc
mov
or
jb
adc
adc
sub
mov
pop
das
insb
xchg
hlt
sbb
or
add
jo
stos
test
es
mov
insb
push
add
sub
lock
dec
daa
and
jg
push
dec
push
jnp
or
ss
mov
xor
add
dec
cltd
cmpsl
adc
lea
arpl
mov
sti
lods
pop
sbb
mov
inc
outsb
scas
sbb
or
and
iret
lock
add
adcb
mov
les
mov
adc
pop
scas
push
jo
out
mov
dec
push
test
mov
hlt
mov
cmp
or
bound
fisubrs
xchg
fistps
movsb
sarl
lods
idiv
add
pop
add
mov
pop
das
insb
xchg
hlt
stos
insl
dec
pop
mov
xor
popa
fidivl
jmp
icebp
test
ljmp
xchg
pop
shr
and
fwait
les
lods
dec
jge
clc
mov
add
jb
aas
and
mov
mov
imul
ret
add
cmp
scas
jp
sbb
std
fcompl
sub
and
fidivs
inc
cwtl
sbbb
jns
inc
xchg
repnz
xor
sti
and
test
xor
movsl
adc
ja
inc
inc
cmc
call
mov
xor
insl
mov
pop
das
insb
xchg
hlt
cmpsl
cmp
and
push
jecxz
push
lods
jle
jecxz
lods
xchg
and
push
mov
mov
mov
cmp
aam
cmp
push
xchg
ret
pop
lcall
push
sbbl
jns
into
jns
fnstenv
or
xorl
fwait
cmp
test
xor
lock
xor
xor
insb
inc
lods
dec
add
cmp
mov
in
dec
ljmp
sbb
dec
adc
addl
add
adc
stos
test
mov
add
sbb
aam
pop
rorl
shrl
or
jne
adcl
and
mov
out
jb
outsl
dec
or
and
xchg
loopne
xor
das
inc
add
mov
pop
sbb
test
aaa
jmp
xor
dec
cs
push
lock
push
sarl
mov
pop
cltd
sub
jns
lds
shlb
jmp
rol
push
sbb
cmp
cld
shrl
cmp
inc
cld
cwtl
inc
movsb
or
es
mov
mov
stc
and
stos
sahf
sub
fcomps
jmp
xor
pop
fildl
out
xchg
lcall
sbb
jo
fnstsw
adcb
xchg
scas
in
in
mov
push
mov
jae
inc
iret
mov
lods
cmpsb
js
pop
cmp
jmp
rcrl
mov
inc
sarb
inc
mov
data16
push
daa
or
sub
out
adcl
test
xlat
ja
push
lea
mov
addb
cmp
inc
and
xchg
sbb
dec
fsubl
imul
aas
orb
jns
push
add
lea
or
push
ret
xor
les
or
lcall
xorb
adc
sub
out
repz
ja
popa
mov
mov
jmp
loope
sub
stc
ficoml
jle
xchg
mov
dec
push
sti
add
cli
sub
jl
pop
sti
outsb
fisttpl
adc
mov
push
out
jae,pn
jns
in
orb
mov
dec
sub
loope
cmp
addr16
js
stc
repz
fisttps
scas
inc
scas
popa
in
mov
inc
int
fwait
enter
mov
or
ljmp
sbb
adc
add
or
mov
push
aaa
cld
out
push
xchg
scas
test
jl
jmp
imul
or
out
ljmp
push
repz
cmp
cmc
adc
pushf
sbbb
adc
mov
mov
mov
fsubs
xor
andl
mov
bound
mov
mov
push
adc
mov
sub
sti
pushf
or
sbb
cmp
xchg
cwtl
xor
ss
test
adc
xchg
dec
add
int3
rcll
fsubs
add
sub
mov
call
out
push
std
call
repz
mov
sbb
dec
add
mov
not
insl
ds
in
sbb
out
push
xchg
scas
test
jl
jmp
imul
or
out
ljmp
push
repz
cmp
cmc
adc
pushf
sbbb
adc
mov
mov
mov
fsubs
xor
andl
mov
bound
mov
mov
push
adc
mov
sub
sti
pushf
or
sbb
cmp
or
sub
out
mov
outsl
in
jbe
nop
dec
xchg
adc
loop
sub
lret
jae,pn
jns
mov
mov
cs
cmp
and
dec
fisubl
repnz
ja
xchg
loopne
lea
arpl
stc
mov
mov
sub
test
imul
fadd
shl
mov
cli
jle
js
sub
in
test
inc
sti
fidivrs
sbb
je
repnz
data16
rol
in
jnp
hlt
ljmp
movsl
gs
xchg
jns
not
leave
or
orl
fdiv
notl
mov
push
imul
push
rcr
jno
pusha
loope
and
adc
sbb
incl
cwtl
xchg
jmp
sar
push
lock
repz
inc
cmp
xor
and
or
push
out
aas
pop
mov
push
out
jae
push
lret
lret
mull
add
push
or
movsb
arpl
cmp
cli
pusha
sub
push
sbb
xor
mov
mov
cmp
fidivrs
jo
inc
lds
lret
pop
inc
jl
int3
int
pop
mov
mov
xor
jmp
stos
inc
lea
push
pushf
jg
or
jp
jno
jae
insb
inc
insl
pop
mov
xchg
sar
daa
pop
es
popf
cmp
add
in
and
adc
jo
sbb
imul
hlt
aaa
and
pop
xchg
cli
pusha
sub
mov
arpl
lret
stos
cmpsb
push
fistpll
inc
fildl
inc
add
loop
mov
mov
mov
dec
cmp
pop
addb
stos
in
ja
cs
xlat
repz
fldcw
ret
sahf
test
mov
inc
fs
decl
xor
pop
add
and
ret
out
leave
mov
jnp
push
jo
push
cmp
pop
je
jno
jne
fnstsw
pop
or
pop
repz
ret
lods
fdivrp
sub
mov
mov
inc
push
imul
push
rcr
jno
pusha
loope
and
adc
cmp
flds
sub
mov
cwtl
xchg
jmp
sar
push
lock
repz
inc
cmp
xor
and
or
push
out
aas
pop
mov
push
fwait
cmp
jmp
sbb
outsb
mov
decl
sub
fsubl
xchg
pop
stc
pop
push
push
stc
ljmp
pop
cmp
add
xchg
jns
imul
pop
movsb
mov
arpl
inc
scas
and
loope
jns
arpl
ret
test
pop
push
sbb
add
lods
jns
sti
fcoms
pusha
loope
pop
mov
in
sbb
cmpsb
outsb
xor
or
std
popf
repz
jmp
cltd
fcoml
shll
stc
inc
cmp
xor
inc
aaa
lods
rorl
stos
cmp
push
rorb
xchg
repz
xor
jns
mov
push
mov
fucomi
sahf
cmpsl
xor
data16
cld
push
jb
or
ucomiss
xor
fnsave
mov
testb
adc
stos
pop
cld
loope
fistl
add
inc
pop
test
lds
lret
out
movsl
test
pop
inc
sbb
pop
mov
jbe
jge
push
lea
mov
out
leave
pop
and
aad
fisttpl
lret
adc
dec
cmp
inc
shrl
add
pop
jl
js
aad
add
sbb
lods
mov
scas
jmp
es
outsl
or
icebp
mov
ja
pop
push
out
sub
pop
sub
pusha
push
dec
pop
call
orb
cli
fbstp
adc
pop
push
outsl
subl
xor
sub
pop
scas
xchg
stc
inc
inc
or
xchg
inc
scas
mov
push
call
mov
pop
pusha
imul
rcrb
mov
std
mov
fiaddl
pop
add
pop
xchg
out
mov
mov
shll
roll
sub
add
aam
aad
sahf
scas
jbe
ret
ret
pop
inc
in
in
imul
arpl
xor
sti
gs
cmpb
decl
loope
sbb
les
loopne
fbstp
mov
jl
mov
cmpl
inc
sbb
and
ds
xchg
loopne
jne
inc
xor
cmp
fwait
cmp
pop
out
movsb
and
int3
test
loop
push
xchg
and
fimull
movsb
fldl
fimull
movsb
fldl
outsl
loope
cmc
cmp
jmp
aad
jl
out
add
xchg
and
mov
push
or
mov
cmc
hlt
int3
cmpsl
jbe
mov
or
push
shr
ljmp
xor
xor
xchg
and
pop
mov
push
lret
and
inc
cs
sub
inc
lds
enter
test
fdiv
push
dec
adc
shrl
cmp
call
fidivrl
cmpsl
jge
pop
ret
cwtl
rolb
jl
out
xlat
push
addr16
sbb
out
dec
ja
mov
mov
in
pop
cmp
and
aas
icebp
imul
push
int3
and
stos
cmpsb
fstpl
pop
xor
sbb
mov
jmp
and
and
or
and
dec
pop
repz
cli
inc
cmc
sbb
jnp
js
fstps
pusha
fsubrp
mov
int3
or
lahf
aas
hlt
arpl
adc
arpl
jo
inc
push
or
push
jge
fisubrs
faddl
jnp
gs
arpl
mov
dec
jle
jbe
push
ja
shr
mov
inc
mov
into
rol
mov
lret
scas
add
aas
dec
cmpsl
fwait
ja
les
pop
sar
add
ss
add
jge
mov
adc
repnz
xchg
lcall
fnstcw
in
fidivrs
mov
or
sarl
jae
in
lods
ret
pop
cmp
daa
sahf
sub
ror
inc
mov
cmpsb
cmc
stos
sbb
imul
dec
push
pop
add
sbb
call
lret
test
sar
pushf
sub
ret
jg
jecxz
lret
test
pop
js
adc
hlt
adc
sbb
fistl
fcoms
lea
adc
cltd
ficoml
sbb
and
xlat
sbb
mov
test
mov
mov
mov
and
pop
jle
jnp
mov
xor
daa
dec
inc
ficomps
cmp
jnp
adc
sub
pop
sti
fstl
cld
sbb
and
js
movsl
frstor
das
repz
int
iret
push
hlt
hlt
call
test
cmpsl
jmp
lea
jno
loop
add
sub
xchg
push
adcb
inc
js
ret
sub
ljmp
scas
or
imul
std
or
lock
mov
cmp
jno
jo
bsf
pop
rcr
js
and
inc
out
sbb
arpl
dec
push
pop
test
fcmovnbe
testb
shlb
xlat
and
mov
jmp
add
je
loop
xor
sbb
in
nop
pop
mov
test
cmpsl
jmp
jp
xor
in
out
roll
sbb
xchg
cmp
shlb
rclb
add
fisubrs
ret
ja
mov
loop
push
push
sub
jne
js
sbb
ret
lods
inc
stos
dec
sbbb
sahf
mov
shlb
nop
adc
mov
mov
mov
pop
les
das
inc
mov
mov
ss
popf
mov
xlat
imul
aaa
add
out
subl
mov
call
jp
dec
mov
push
and
mov
adc
push
mov
jl
cmp
or
test
xchg
add
cmp
xor
xchg
les
pop
add
bound
ret
dec
dec
incb
xchg
loop
push
adc
jge
outsb
xchg
pop
je
cli
xlat
pop
lcall
dec
in
cmp
sbb
mov
inc
jbe
jge
push
out
sub
pushf
push
out
in
andb
dec
nop
push
xor
add
gs
xor
and
and
push
jne
adc
stos
lret
mov
addr16
mov
test
jecxz
pop
inc
jns
lahf
mov
cmc
jnp
std
test
sti
pusha
pop
mov
cmp
cmp
aaa
out
jl
decl
cwtl
js
pop
inc
jno
xor
and
and
push
jne
adc
sahf
push
sub
dec
fidivs
imul
mov
inc
fs
push
rcrl
jle
adcl
push
idivb
popf
mov
fadd
test
xor
popf
mov
mov
shll
fucomp
lahf
mov
mov
jecxz,pt
es
repz
jmp
enter
mov
pop
lods
push
sub
mov
mov
cmp
outsl
rcrb
push
scas
mov
mov
mov
gs
stc
dec
cmpsb
jae
or
add
leave
cmpsl
pop
loop
pop
int3
mov
cmp
mov
das
out
cmp
sub
cmp
stc
push
test
loope
xchg
add
and
mov
out
cmp
call
adc
cmpsl
ljmp
jg
xchg
fstps
pop
imul
or
mov
pop
mov
scas
cltd
pop
lods
jb
xchg
pop
scas
jmp
mov
push
push
pop
adc
out
inc
xchg
mov
fidivrl
cwtl
imul
or
les
pop
push
notl
repnz
lahf
in
inc
cs
cmpsb
jecxz
loopne
mov
outsb
shl
mov
cmc
cmp
mov
js
adc
cmp
jae
xchg
shrl
adc
adc
xlat
subl
mov
sub
adc
xchg
int
xor
push
ja
and
pop
push
and
add
addr16
dec
roll
and
ss
bound
sbb
enter
push
call
xchg
test
or
popf
pop
out
xchg
shl
insb
in
xchg
call
dec
mov
fmuls
xor
mov
mov
mov
xlat
jb
sbb
lret
jecxz
jle
pop
jns
pop
enter
test
jecxz
xchg
lcall
or
mov
cmp
cmp
js
jmp
xchg
repz
nop
scas
std
test
fldl
xor
jbe
mov
mov
pop
das
insb
xchg
hlt
jne
lock
test
lfs
inc
orb
daa
and
movsl
mov
mov
in
aaa
dec
dec
push
sub
jl
adc
cmpsb
add
pop
dec
mov
testl
aam
cmpsl
adc
pop
push
jle
xchg
in
xchg
cmpsl
cmp
mov
pop
push
sbb
lcall
or
enter
aaa
pop
jne
push
adc
in
iret
push
cmpsb
inc
cmp
insb
outsb
dec
jp
mov
daa
dec
mov
andb
xchg
cmpsl
jge
sbb
mov
call
shrb
cmpsb
addr16
pop
pop
or
lock
sub
fimuls
xorb
xlat
mov
pop
jae
jp
sbb
add
fisubrs
mov
or
add
inc
dec
pop
mov
inc
scas
or
movsl
add
imul
out
xchg
adc
push
in
cmp
lds
mov
stos
sbb
stc
stc
das
call
mov
arpl
cmpsl
xchg
mov
dec
sbb
mov
mov
pop
fisttpl
mov
stos
fucom
insb
les
ficomps
aaa
mov
sbb
jecxz
idiv
cmp
xchg
ljmp
add
xor
jle
xor
mov
shl
inc
add
pop
adc
je
mov
aaa
mov
ss
xor
pop
xlat
packssdw
inc
lcall
push
adc
dec
xor
insb
push
push
mov
and
scas
scas
inc
mov
or
mov
mov
sbb
stc
lea
or
adc
fwait
mov
mov
shlb
sub
fsub
inc
mov
jns
lahf
test
pushf
inc
cwtl
ss
imul
mov
sbb
shlb
fisttpll
leave
or
call
pop
nop
mov
mov
add
repnz
pop
cmp
mov
out
push
popa
out
lcall
and
push
lock
jns
xchg
cli
mov
adc
xchg
dec
cltd
fisttps
aaa
jg
lcall
imul
cs
ds
cmp
iret
testl
insl
es
cmp
test
imul
mov
lret
adc
hlt
adc
push
leave
inc
and
cmp
outsl
inc
das
xchg
xor
mov
mov
add
gs
xchg
sbb
pop
and
add
push
add
and
aad
lods
daa
jmp
dec
cmc
stos
jbe
mov
stc
cli
repz
xor
leave
cmc
cmp
push
cmp
mov
pop
jns
data16
inc
add
xorl
andl
test
cmp
shl
in
scas
push
xchg
dec
jmp
sub
pushf
lahf
iret
jno
shrb
push
lcall
test
push
sbb
mov
adc
push
sub
jno
pop
mov
xor
push
stos
adc
xchg
add
inc
dec
fucomip
jb
insl
gs
sbb
arpl
add
dec
out
cmp
bound
lods
adc
xchg
cmp
pop
pop
lcall
inc
add
pop
xchg
push
xorb
in
pop
xor
popa
add
jp
das
pop
mov
lret
xchg
leave
push
cli
mov
std
dec
inc
sarl
sbb
and
fldcw
ds
jnp
xchg
push
and
adc
stos
fstpl
lods
and
pop
dec
push
add
lret
jb
cli
mov
mov
push
scas
add
adc
dec
lds
in
or
and
leave
add
mov
adc
mov
or
mov
and
mov
dec
pop
inc
ljmp
pop
das
insb
xchg
hlt
lea
sbb
std
gs
lock
adc
out
aas
or
les
lret
fisubs
xchg
test
stos
sub
inc
inc
int
sbb
insb
lret
imul
and
das
fcmovu
loop
xchg
loopne
push
and
std
pop
das
insb
xchg
hlt
lods
mov
insb
xchg
and
dec
sbb
and
cmpb
stc
xor
sub
dec
rorb
mov
cmp
daa
dec
inc
add
jmp
shrb
sti
jb
sub
jno
pop
jg
add
test
mov
cld
and
mov
xchg
sbb
adc
cld
adc
xchg
subl
sahf
mov
or
mov
shl
or
pushf
mov
ret
and
mov
xchg
outsb
add
cmpb
push
add
jecxz
ljmp
call
or
jnp
mov
sbb
addr16
push
mov
mov
and
push
adc
dec
scas
out
je
ljmp
inc
xlat
or
icebp
scas
pop
inc
xchg
and
rcr
push
xor
mov
das
insb
xchg
hlt
fmuls
mov
and
ja
mov
outsb
popa
js
mov
mov
xor
mov
mov
mov
and
mov
movl
sti
inc
icebp
mov
pop
das
insb
xchg
hlt
std
iret
jecxz
sbb
fldl
and
pop
pop
jb
pop
loope
jge
add
jg
int
jno
stos
jns
pushf
sub
dec
sub
sub
gs
jb
call
in
fmuls
inc
lock
shlb
mov
and
outsl
popf
js
mov
add
mov
pop
jo
jo
dec
pop
adc
push
jg
adc
mov
mov
pop
das
insb
xchg
hlt
jmp
filds
cmp
insb
push
push
cmp
add
adc
xchg
and
lret
dec
cltd
xor
stos
ja
xor
or
std
xchg
cwtl
test
dec
xchg
nop
mov
or
push
fsubp
and
outsl
inc
clc
dec
push
or
imul
push
fstpt
jb
xchg
push
and
inc
in
or
sti
push
rcr
sbb
and
das
mov
mov
dec
in
jmp
pushf
leave
mov
mov
test
es
add
push
call
jmp
jmp
je
fistps
imul
mov
call
sti
pop
pop
cmpps
and
or
int3
mov
movsl
sub
add
loop
mov
sbb
jne
and
xor
add
int3
inc
mov
and
or
jg
or
mov
jnp
neg
scas
rcrb
int3
sbb
hlt
jecxz
mov
xchg
aaa
adc
orb
mov
xchg
xchg
dec
lods
push
fwait
cltd
jne
lock
mov
mov
divl
pop
or
cld
aam
or
cmp
imul
jl
sbb
jle
test
sbb
xchg
gs
mov
and
jmp
pushf
sarb
mov
and
sbb
mov
les
sub
or
adc
adc
xchg
cld
arpl
rcrb
outsl
sbb
push
stos
stc
dec
fcomps
xchg
mov
pop
fisubs
mov
xchg
mov
stc
inc
mov
push
sti
lcall
addr16
scas
out
add
outsl
cwtl
inc
fisubrl
push
cmp
out
pushf
mov
vmread
outsb
jge
repnz
lret
mov
mov
push
mov
stos
repz
mov
ljmp
dec
mov
out
hlt
push
mov
dec
das
bndldx
inc
jecxz
push
mov
and
addr16
loope
inc
sbb
push
sbb
decb
lods
imul
dec
out
fisttpl
lea
add
mov
or
xor
dec
pusha
mov
mull
mov
xor
das
xchg
mov
push
mov
xchg
cmp
imul
xor
xor
cltd
mov
loop
cmp
jnp
dec
inc
mov
jge
test
xchg
mov
movsb
xchg
mov
scas
in
or
pusha
and
pop
adc
jnp
xor
pop
sbb
add
mov
jne
cmp
jo
inc
test
int
pop
ja
ficomps
js
std
lods
test
push
jg
xor
pusha
mov
push
std
mov
adc
mov
xor
or
xchg
mov
movsl
shll
mov
pop
js
sub
mov
mov
repz
mov
mov
jl
mov
xchg
clc
test
decl
dec
xor
mov
xchg
inc
and
add
rolb
xchg
daa
jp
push
sti
cmp
cltd
jp
icebp
pusha
aas
jno
lret
push
imul
je
jl
pop
cmp
sub
add
pop
mov
fidivrl
bound
mov
adc
stos
stos
mov
mov
push
lret
pop
das
insb
xchg
hlt
push
mov
loopne
imul
sbb
and
movl
fmul
add
mov
jno
inc
sbb
push
jg
fimull
push
pop
js
and
in
std
mov
sub
call
testl
sbb
jb
sbb
lahf
jl
jnp
mov
jmp
pusha
scas
testl
mov
movsb
and
jns
sub
aas
test
jnp
ja
jns
inc
mov
push
adc
lret
aad
xor
xchg
dec
xor
ss
jne
cli
dec
sub
pop
add
shlb
fidivrl
inc
xor
mov
mov
insb
mov
ror
popf
aad
sti
repnz
sbb
rcrl
repnz
sbbb
inc
mov
dec
or
icebp
jne
dec
pop
fwait
mov
add
push
out
insb
shrl
cmp
xchg
push
cli
ss
xor
ljmp
gs
push
nop
mov
shrl
jecxz
sub
fwait
and
test
mov
jecxz
sti
loope
jmp
mov
or
call
pop
mov
jne
xchg
mov
add
xor
push
sub
daa
or
cmp
sub
out
and
pop
outsb
rclb
cmc
xor
movsb
jns
or
jmp
inc
cmp
pushf
sbb
scas
je
cli
out
mov
xorb
dec
stos
cs
cmp
mov
jno
dec
push
test
push
pop
mov
push
mov
dec
popa
cmc
cli
iret
xor
cli
xchg
lods
lds
mov
bound
leave
rcll
cmpsb
sub
sub
lea
sbb
les
sarb
lahf
unpckhps
rorl
jae
or
test
ss
jbe
xor
mov
jmp
cmp
roll
push
decb
sub
imul
cld
pop
jbe
lret
shr
dec
imul
in
xchg
adc
push
test
pop
bound
flds
call
loopne
mov
cmc
icebp
out
mov
add
push
add
sub
nop
adcb
inc
cwtl
push
clc
mov
inc
ss
sti
lcall
mov
jge
outsb
or
inc
and
mov
and
scas
xchg
xchg
sbbl
adc
mov
sbbl
or
in
lret
jnp
jmp
mov
push
test
scas
popf
inc
xor
in
arpl
aaa
rcll
or
mov
push
outsl
popf
loopne
and
jl
addr16
and
mov
fwait
jp
push
test
fincstp
icebp
in
sbb
mov
add
out
mov
stos
das
adc
daa
pop
xchg
lss
mov
jnp
or
popa
inc
push
into
loop
lea
arpl
or
cmp
aas
shl
fwait
xor
stos
jns
in
dec
ja
adc
adc
insb
out
stos
repz
or
in
mov
xchg
fs
jne
cli
mov
sahf
pop
xchg
out
sub
scas
cmp
addr16
xor
mov
and
ret
int3
xchg
in
mov
test
dec
xor
je
mov
cmp
sub
pop
ds
icebp
xchg
loope
stc
push
xchg
dec
fcmovne
inc
loope
das
xor
pop
out
jl
addr16
adc
add
cltd
inc
fs
inc
aaa
jge
cmpsb
loopne
mov
cwtl
outsl
mov
std
pop
das
insb
xchg
hlt
imul
test
jbe
clc
pop
out
pusha
jmp
mov
scas
insl
pop
sub
mov
jecxz
inc
dec
mov
mov
xlat
mov
lret
mov
popl
xchg
hlt
or
or
jle
dec
pop
xchg
jno
sbb
lods
scas
roll
mov
jle
lahf
and
inc
inc
or
lock
pop
enter
loop
sbb
into
inc
xor
xchg
out
pushf
aad
out
mov
repnz
push
cmp
push
push
mov
insb
cmp
lea
sbb
add
cmp
push
dec
into
loope
inc
sbb
push
fidivrl
inc
fstpt
shlb
adc
aam
sub
and
jne
jnp
js
xchg
mov
dec
insl
jne
lds
shrl
xchg
push
adc
sahf
in
mov
in
rorb
test
mov
xchg
adc
dec
scas
sbb
xor
and
mov
rcrl
call
jne
icebp
cmp
xchg
adc
mov
cmpsl
lods
js
or
mov
fwait
out
pop
sbb
lret
fadds
sbb
xchg
sti
and
push
lret
faddl
inc
test
popf
nop
std
das
pushf
flds
mov
dec
jmp
and
or
inc
inc
gs
lahf
shr
jb
mov
and
imul
clc
arpl
xchg
lds
jmp
lock
xchg
xchg
lock
inc
adc
adc
hlt
data16
test
pop
ret
mov
ret
orl
gs
fwait
adc
mov
out
sahf
lods
icebp
aad
enter
repnz
jmp
pop
inc
adc
inc
lret
icebp
sbb
dec
roll
scas
push
mov
sbb
cs
sahf
sub
cmp
cld
sarb
lods
adc
and
ljmp
aad
sub
out
adc
cmp
movsl
negl
mov
or
add
xchg
gs
pop
jo
and
cli
fistpl
pop
mov
jno
imul
frstor
and
sub
jo
sbb
mov
dec
lret
test
inc
cltd
fisubs
ja
in
iret
xor
mov
cmpsb
mov
jmp
test
and
push
repnz
dec
lret
aad
xchg
push
icebp
pop
in
jo
pop
xor
cmpsb
mov
mov
push
dec
mov
mov
lcall
lds
pop
mov
push
mov
imul
arpl
je
mov
add
lods
lds
sbb
push
into
adc
sbb
fiaddl
adc
imul
test
lahf
es
mov
imul
in
jle
rcl
sub
cmp
mov
xor
sti
push
mov
incl
loope
lds
jnp
lret
jl
addr16
add
dec
sbb
xchg
pop
lock
pusha
push
mov
ljmp
mov
cmp
fsubr
into
nop
ret
sbbl
es
cmpsb
inc
mov
dec
in
jle
hlt
inc
int3
or
dec
ja
fnstsw
jno
adc
mov
jnp
or
mov
lahf
mov
fimuls
dec
nop
outsb
rol
ret
popa
test
jb
cmp
daa
mov
subl
sti
aas
mov
or
xor
nop
mov
inc
cli
jne
hlt
sbb
shrb
mov
mov
jge
jo
pushf
pop
push
ret
mov
push
lret
out
and
inc
or
sbb
insb
mov
adc
pop
sub
add
js
or
icebp
ljmp
fstpt
stos
pop
jg
stos
inc
pop
mov
daa
mov
mov
mov
mov
sub
in
mov
test
jae
mov
mov
fs
lcall
cmp
sti
push
push
push
xlat
jg
mov
fcmovnb
stos
pusha
sbb
int3
xchg
fisubrl
push
pop
mov
xor
aad
sahf
imul
add
test
or
or
and
movsl
xchg
push
sub
test
int3
mov
sbb
out
mov
mov
loopne
ficoml
pop
xchg
in
icebp
ljmp
or
enter
movsb
shll
and
popa
mov
cld
dec
repz
xchg
xlat
or
pop
xchg
mov
pop
test
jmp
jecxz
fildl
add
pop
add
mov
in
cmp
mov
enter
mov
ss
into
add
and
imul
test
sub
sub
mov
popa
loope
push
mov
or
xor
fsubrl
or
xor
inc
and
aaa
cmpsb
pop
mov
inc
cmp
testl
or
push
movsb
sbb
jp
mov
pop
jae
dec
enter
sahf
and
aam
stos
pop
inc
jmp
movsl
pop
lret
sbb
jl
inc
lret
pop
clc
leave
int
cld
mov
and
imul
hlt
or
push
xchg
icebp
in
outsl
mull
jg
sbb
sarw
nop
lahf
dec
dec
push
and
in
adc
jne
or
insl
adc
popa
in
in
adc
jne
or
data16
lods
addr16
int3
les
sti
sti
or
sbb
test
cmpsl
popa
ljmp
push
out
aam
pop
sti
or
jg
push
lahf
push
push
mov
jl
xchg
stc
cmpsb
sti
dec
fistpl
inc
dec
mov
icebp
jge
jmp
dec
arpl
out
push
cmp
or
push
or
dec
pop
push
add
aam
mov
lea
test
push
pop
in
stos
inc
push
jp
inc
push
cmp
mov
jl
out
jl
cli
jns
mov
arpl
sub
stos
in
sbb
jne
aas
or
aad
push
outsb
dec
daa
mov
push
inc
xor
icebp
pop
ret
cmpsl
push
xchg
hlt
and
fs
insl
pop
push
xchg
cmp
mov
aam
cld
rcl
or
adc
pop
movsl
xor
xchg
leave
jno
clc
js
jnp
mov
pop
push
imul
mov
int
out
or
leave
jle
out
push
adc
imul
inc
add
pop
fmull
jbe
aad
or
mulb
test
faddl
pop
pop
mov
mov
xorb
psrad
and
adc
test
inc
mov
stos
mov
push
xchg
loopne
sti
lock
shll
pop
jbe
repnz
test
imul
jmp
jp
jg
stos
xor
jecxz
lret
add
inc
jp
and
jae
ret
test
popa
inc
or
xchg
frstor
sub
lds
daa
jno
mov
aaa
mov
mov
add
add
imul
mov
leave
daa
sti
and
mov
cmp
push
mov
rcl
sub
std
inc
mov
mov
scas
mov
cmp
xchg
mov
lahf
dec
mov
adc
push
fwait
ds
dec
cmc
mov
mov
lea
imull
jl
inc
or
sub
addr16
enter
cmp
jecxz
mov
or
jae
inc
sub
rcll
cld
dec
mov
xlat
lret
fistpl
fidivrs
inc
loope
fmull
pop
hlt
cmp
loopne
inc
loope
faddl
sub
pop
popa
adc
ret
xchg
outsl
jnp
push
aas
dec
jmp
sbb
and
or
jb
lods
lret
shr
pusha
out
inc
insb
icebp
call
cwtl
daa
adc
push
and
jo
sbb
pop
add
fsubrl
dec
jecxz
add
inc
sbbb
push
push
out
pop
sub
or
cmp
idivl
test
mov
getsec
in
pop
lods
jae
push
das
and
data16
xor
cmp
in
dec
inc
jne
ficoml
xor
or
aad
pop
xchg
lods
inc
loopne
dec
les
pop
enter
data16
fcompl
inc
sub
rorb
sub
fnstcw
and
jle
dec
ds
and
movsb
cmp
out
dec
sub
fs
scas
jmp
ja
inc
xchg
scas
mov
rcr
mov
sub
mov
idivl
lret
ja
pusha
adc
and
add
inc
or
jb
jle
xor
outsb
ljmp
fidivrs
mov
or
lret
fnstsw
aas
cmc
hlt
pop
mov
jnp
sub
jns
les
test
and
sbbb
imul
adc
and
int3
pop
inc
push
fstpt
lret
dec
ja
mov
xor
sysret
add
roll
in
mov
sbb
or
mov
fs
out
xchg
loop
pop
push
xor
mov
sbb
inc
mov
dec
pop
das
clc
push
jg
lret
test
pop
inc
mov
dec
pop
das
clc
push
data16
mov
lret
sub
adc
arpl
test
cmp
pop
sahf
push
pop
lods
pop
in
add
jl
dec
pop
in
lods
mov
notb
lds
jle
outsb
inc
lret
jns
adc
movsb
adc
mov
jge
rcrb
or
or
pop
xor
ljmp
sub
addr16
jle
ret
xor
inc
mov
dec
mov
lock
rcrb
jb
std
or
xor
mov
jb
and
incb
cmp
inc
and
incb
pop
jl
rcrl
push
jmp
nop
or
call
rcll
push
scas
mov
mov
aaa
jno
jnp
subl
xor
jnp
stos
jecxz
jo
aaa
fdivrs
inc
dec
andl
and
addb
jecxz
stos
xor
test
jbe
scas
out
push
and
dec
push
shl
js
outsl
cmp
or
push
js
sahf
cmp
mov
jle
jmp
jg
jp
inc
fiadds
lcall
xlat
mov
jl
js
clc
in
xchg
adc
xchg
xor
aas
fs
cmp
mov
dec
ja
pop
or
mov
mov
mov
lods
sub
out
leave
sti
int
mov
jns
test
mov
imul
mov
mov
sbb
test
or
mov
lahf
imul
lret
inc
xor
outsl
lret
leave
insb
sub
xor
mov
aad
lfs
cmpsl
popa
pop
inc
icebp
sub
loope
sub
mov
iret
cmp
sbb
push
sub
sbbl
jne
xchg
fwait
jne
int3
fcoms
pop
pop
ror
movsb
aam
test
pop
jb
cmp
jo
jno
les
inc
cmp
hlt
stc
call
popa
push
and
xchg
mov
jnp
sbb
jmp
in
add
fcoml
lahf
arpl
mov
and
dec
sub
int
mov
adc
scas
hlt
jmp
pop
and
or
mov
insl
mov
imul
jae
outsl
adc
mov
out
xor
repnz
mov
jbe
pop
loopne
cmp
or
nop
je
xorb
or
int3
lock
out
and
ret
pop
adc
into
push
ja
xacquire
rcl
notb
mov
filds
cmp
ja
in
lahf
push
sub
mov
loop
lcall
sbbb
sbb
mov
popf
hlt
jns
push
add
sti
adc
int3
jge
pop
xor
mov
mov
cmp
fstpt
imul
js
adc
pop
adc
lret
fst
pop
daa
jae
and
mov
in
or
and
ret
test
addb
fprem
sub
cmp
sub
add
bound
or
fsubr
ja
fnstenvs
fsin
aaa
mov
sub
push
test
cltd
andl
xchg
or
xchg
daa
div
cmpsb
jl
and
in
xor
mov
out
jne
cs
lret
push
aas
mov
mov
jns
mov
or
enter
push
xor
add
pop
rorb
repz
adc
push
or
cld
in
sbb
sub
mov
mov
sbb
mov
cwtl
pop
in
cld
and
es
outsl
adc
add
sbb
dec
cmp
pop
jnp
cmp
iret
addr16
loopne
add
dec
pop
std
gs
cld
fidivrs
or
dec
sub
pop
sub
stc
aad
nop
dec
inc
mov
in
mov
xor
cltd
mov
inc
mov
inc
cs
outsb
pop
ja
xchg
sti
and
popa
ss
stc
ret
arpl
addb
dec
out
mov
punpcklwd
insl
bound
mov
mov
or
push
adc
and
stc
inc
mov
mov
fldt
mov
fistpll
out
xchg
xchg
sti
or
push
scas
sbb
xor
popa
pop
in
lods
gs
cmp
loop
adc
jae
adc
inc
insb
xchg
dec
fstpt
and
aam
movsl
push
adc
mov
test
loop
add
lret
or
add
sbbl
add
subb
mov
sbb
pop
imul
push
xchg
cltd
sbb
hlt
mov
and
shr
inc
push
cmp
ret
and
or
adc
in
pop
dec
xor
fs
sarl
ret
push
sub
ljmp
ret
cmp
ret
ficoms
mov
push
mov
mov
jne
inc
adc
push
not
push
clc
mov
lcall
jnp
jp
and
pusha
lock
ret
enter
jo
mov
testl
out
out
mull
call
jecxz
hlt
lret
int
out
insb
sbb
push
mov
sub
lret
cmp
dec
ret
ret
xor
inc
and
xor
inc
inc
push
pop
push
mov
das
mov
xchg
and
push
out
mov
jle
mov
clc
out
mov
jmp
in
flds
stc
inc
push
das
pop
lds
test
push
sub
pop
cmpsb
hlt
push
and
arpl
cmp
adc
repnz
or
inc
stos
pop
cmp
mov
cmc
sub
shr
xorl
inc
cltd
xchg
mov
lahf
pop
data16
add
jne
inc
mov
sbb
push
add
jecxz
or
in
lods
mov
imul
clc
lret
xchg
shrl
iret
sub
mov
push
popf
outsl
push
push
outsb
sbb
cmp
pop
pop
xrelease
mov
fidivl
sbb
les
adc
push
lret
sbb
out
xchg
jg
scas
pop
movsl
inc
jo
mov
dec
cmpsl
mov
adc
icebp
daa
pop
fldcw
out
shrl
pop
mov
xchg
mov
js
cld
repz
repz
sub
adc
cld
imul
lods
jb
cmp
stos
mov
add
inc
cwtl
int3
add
ret
pop
mov
sahf
fstpt
jle
divl
insl
cli
xor
pushf
mov
dec
inc
and
int
mov
mov
sbb
inc
stos
arpl
lahf
cmc
mov
cmp
mov
sti
aad
popf
enter
jecxz
iret
fdivr
cld
sub
pop
push
xor
std
movsl
mov
push
int3
push
leave
outsl
mov
gs
ss
xchg
xchg
movsl
iret
jno
inc
or
cld
sbbb
js
xchg
out
imul
test
dec
fs
push
add
or
sub
test
pop
aad
lds
out
cmpsl
mov
or
pop
in
adc
outsl
arpl
xchg
aaa
into
in
rolb
push
lds
jb
js
sbb
sbb
mov
sbb
dec
xorl
pop
sub
jmp
cmc
inc
sbb
sub
xchg
xchg
pop
out
cwtl
xchg
adc
and
push
push
push
aam
jo
xchg
push
push
push
pushf
out
xchg
jne
push
and
push
push
arpl
push
inc
stc
cld
dec
pop
pop
call
es
filds
mov
ret
bound
push
inc
pop
lea
mov
cmpb
stos
mov
adc
cwtl
outsb
jo
adc
or
rorb
and
inc
outsb
mov
lret
cmp
mov
in
cmp
scas
in
icebp
js
xor
ljmp
cmpsb
gs
outsl
mov
pop
test
jp
jae
outsl
mov
mov
mov
xor
jg
pushf
and
movq
cwtl
in
ja
add
mov
fnsave
push
add
pushf
mov
jbe
in
movsl
and
xchg
pop
mov
mov
btc
mov
or
pop
mov
xor
loop
ljmp
outsb
daa
cmc
and
cli
jecxz
mov
or
and
repnz
mov
and
dec
sbb
mov
dec
int
mov
popa
jmp
add
or
out
xchg
inc
popf
sbb
dec
xchg
cld
cmp
jns
gs
sbb
pop
jno
ret
cmpsb
sbb
iret
ljmp
jmp
and
arpl
pmaxsw
cmc
les
sub
cmp
xchg
mov
movsb
mov
xor
or
inc
popf
pushf
mov
jp
or
in
lods
sub
popf
sar
hlt
xchg
dec
adcb
in
mov
mov
push
pop
push
jmp
test
mov
ficoml
divl
sbb
sbb
jecxz
or
mov
adc
jmp
pop
out
stos
sub
cmp
or
pop
push
jge
loopne
and
dec
sub
or
stos
outsb
dec
test
mov
stos
and
fcom
lds
std
je
sbb
stos
test
dec
inc
jbe
mov
shll
add
loop
and
mov
int
ds
lods
push
adc
cli
mov
repnz
add
mov
shll
fisubs
js
in
cmp
fld
and
mov
xchg
outsl
fs
xchg
and
out
inc
push
in
test
loopne
sarb
pushf
iret
pop
popa
adc
ret
adc
mov
les
add
sarb
xchg
aam
outsb
shlb
sub
dec
and
cmovge
scas
cmp
sbb
mov
cltd
sub
mov
icebp
icebp
or
lcall
pop
int
rorl
outsb
fbld
cli
stos
bound
addl
xlat
or
cmp
and
xor
sub
fsubrp
sub
xor
loop
xor
aad
jnp
push
push
lahf
sbb
scas
or
mov
insl
xor
push
in
add
dec
push
pop
daa
pop
dec
ret
add
sub
or
mov
cmpl
insb
in
lods
aaa
adc
jle
inc
cli
fmull
sub
pushf
movsb
push
std
mov
and
mov
mov
jmp
icebp
testl
push
loop
rcrb
clc
jae
or
sub
cmpsb
cmc
cmp
xchg
fwait
lock
jns
in
gs
pop
dec
adc
lret
imul
sub
jae
or
sub
cmpsb
cmc
cmp
xchg
fwait
cmp
cmp
xor
insb
pusha
jb
mov
cmpsl
mov
rcr
call
jne
subl
jns
pusha
xor
mov
clc
test
mov
push
jl
jecxz
push
lret
add
pop
and
jns
mov
push
cli
jl
inc
pop
cmp
mov
mov
or
clc
cmp
iret
xlat
adc
gs
cmp
pop
nop
jg
mov
jne
stos
xor
mov
data16
shl
xchg
ljmp
pushf
jns
aad
pop
lahf
mov
pop
shlb
nop
stos
push
ror
test
jl
pop
jge
pop
xchg
or
xchg
add
js
adc
pop
dec
lcall
sbb
aad
push
test
xor
push
dec
dec
xchg
xor
cltd
xor
loopne
outsl
xchg
jp
dec
out
mov
cwtl
outsb
lods
sub
sub
int
dec
lock
push
pusha
jl
xchg
daa
popf
pop
sbb
dec
xor
cmpsb
jp
inc
outsb
jo
inc
sub
dec
loop
add
inc
nop
out
clc
pop
dec
lods
aaa
in
lods
jecxz
pop
fldl
gs
push
imul
outsl
add
fbstp
jecxz
add
sbb
or
loop
mov
or
mov
pop
xchg
xchg
inc
bound
je
push
lcall
rclb
scas
movsl
nop
stc
aad
movsb
mov
sarl
jmp
stc
adc
mov
int3
inc
in
stos
add
and
inc
and
mov
dec
std
int3
or
int3
xchg
rcrb
cmc
and
imul
xlat
xchg
call
push
and
int3
aaa
orb
lcall
imul
cmp
repnz
data16
orl
cmc
and
out
jecxz
in
push
outsl
call
push
and
ljmp
aas
xlat
lds
out
xor
pop
jmp
or
aaa
insl
lods
sub
shrb
lock
mov
push
mov
xchg
int3
std
xchg
int
mov
push
je
dec
adc
cmp
xor
xor
add
fcompl
xchg
ja
or
adc
hlt
mov
mov
jne
in
jmp
xchg
xor
std
fimull
cmp
push
ret
mov
and
stc
rcrb
mov
jge
hlt
ljmp
xor
int
or
loop
adc
adc
in
lret
xor
fisubl
push
inc
lds
and
xor
fs
dec
call
xlat
ljmp
lret
mov
sub
fisubrs
test
test
div
jmp
lods
mov
lea
mov
in
xor
xchg
xchg
pop
adc
test
cmpsb
ljmp
and
sub
test
pop
out
add
dec
push
int
ret
xchg
or
lcall
inc
sbb
jmp
outsb
xor
xchg
aam
xor
loopne
rcrb
sub
push
sub
shlb
bound
sahf
push
nop
mov
arpl
sti
ret
nop
or
xorl
xchg
leave
push
popa
sbb
in
push
or
jp
int
clc
pop
je
jne
mov
adc
fidivs
xor
inc
mov
xchg
lea
das
mov
pop
fldl
sbb
cmpsb
and
je
mov
loope
test
sbb
dec
xlat
pop
sbb
jmp
mov
jmp
push
xor
push
push
ret
xchg
or
jae
push
mov
fstpl
xchg
push
cmpsl
xchg
lahf
jmp
iret
ret
test
jns
lods
jecxz
pop
fldl
gs
xor
ds
aaa
cld
mov
adc
stos
adcl
sub
mov
push
and
popa
mov
and
jnp
iret
addb
mov
fidivrl
pop
xchg
jl
aaa
call
or
cld
rcrb
and
shlb
shlb
inc
les
xor
pop
mov
repnz
mov
loopne
push
jo
cmp
and
cmp
adc
into
sub
repnz
sti
je
inc
mov
inc
aam
dec
insb
mov
lcall
mov
imul
mov
mov
or
popl
lock
xchg
iret
test
in
sub
and
ljmp
cmp
xor
pop
rcrb
or
mov
stos
mov
jmp
cld
push
mov
aad
jae
cmpsl
or
idiv
dec
in
jp
adc
adc
pop
int
or
out
dec
bound
imul
pop
ficompl
adc
fs
pushf
mov
pop
fs
mov
inc
mov
mov
aas
popl
pop
sahf
in
pushf
lret
jl
or
mov
pusha
adc
and
mov
out
sbb
push
ret
xchg
or
adc
ss
idivb
add
in
cmpsb
cmp
xorb
inc
movsl
pop
stos
and
enter
dec
xchg
cmp
dec
or
popa
outsb
push
test
sub
adc
xlat
insb
sahf
push
sti
xchg
int3
std
xchg
int
sub
pop
movsb
mov
dec
jnp
add
rclb
push
push
push
push
and
jo
shlb
sbb
or
inc
jp
pop
add
popa
cmp
add
or
int
inc
and
outsb
imul
movsl
repnz
fimull
xor
scas
mov
adcb
lods
push
call
inc
aaa
fnstsw
fadds
pop
lret
inc
or
cld
rcrb
and
xchg
ljmp
in
sub
in
test
mov
jmp
cld
pop
jl
and
mov
stos
lods
push
xchg
inc
pop
inc
dec
jb
stos
add
sbb
add
stc
jge
fs
xor
push
inc
xchg
orl
orb
dec
pop
sub
pop
sbb
cwtl
sbbl
das
xchg
in
pop
ret
adc
inc
jns
adc
inc
ret
daa
xor
mov
scas
mov
mov
lcall
pop
adc
push
imul
mov
mov
insb
add
lret
leave
sbb
out
jbe
adc
js
cld
jl
push
pop
out
pop
or
xchg
fwait
inc
push
xrelease
gs
leave
cmp
jae
dec
mov
fs
dec
xchg
jmp
push
xlat
or
cmpl
daa
pop
push
outsb
dec
test
mov
and
shr
xor
xor
mov
push
bound
dec
scas
push
dec
enter
push
lea
cmpsb
jle
fs
leave
mov
pusha
sub
mov
jo
push
loopne
fisttpll
mov
cs
xchg
lcall
jmp
out
sti
mov
fsubrl
shr
clc
add
in
inc
push
mov
jbe
cmc
sub
les
mov
mov
xor
mov
mov
rcrb
fisttpll
pop
pop
test
cmpsl
mov
xchg
clc
out
xor
int
std
lock
cs
cmpsb
cmc
cmp
xchg
fwait
inc
dec
xchg
imul
test
push
mov
sub
mov
into
push
jl
std
cmp
lahf
and
push
lret
pop
popl
push
int3
mov
enter
pop
add
push
fnsave
or
daa
jbe
loop
scas
jle
mov
repz
sbb
or
push
mov
ss
mov
rcrl
push
into
adc
mov
push
in
loope
fxch
lods
repnz
sub
dec
sahf
pop
jb
mov
push
add
shll
das
adc
xor
std
xchg
int
cmp
fisttpl
fucom
xchg
sub
xchg
mov
pop
sahf
xchg
mov
cmp
push
iret
xor
push
mov
dec
iret
add
shll
in
nopl
pop
xor
daa
aad
clc
jno
mov
xor
dec
in
pop
lret
cld
xchg
xor
dec
inc
call
mov
cltd
sub
jg
lock
sub
push
and
and
in
xchg
mov
pop
or
add
or
lods
les
insl
lods
sub
push
gs
dec
sub
pop
call
lods
pop
add
ret
xchg
enter
cmc
push
cmp
ljmp
pusha
aad
pop
test
aas
mov
shlb
cmp
fstl
jbe
aam
xor
mov
xor
inc
rcl
das
sbb
outsl
push
dec
push
and
cmp
testl
popf
sub
ret
sub
jecxz
cmp
xor
sub
aaa
sub
in
bound
add
push
rorl
shrl
mov
sub
lds
rcrl
daa
bound
aaa
insb
sbb
mov
repz
and
xchg
add
push
or
stos
into
insl
adc
arpl
fimull
cmp
xchg
rcr
loopne
push
and
push
in
loope
fxch
lods
repnz
sub
dec
sahf
mov
jg
pushf
cltd
in
mov
cmpb
pop
ret
mov
cmp
sbb
or
xchg
stos
scas
pop
jo
sbb
or
cwtl
ljmp
call
lcall
stos
lods
repz
pop
int3
push
aas
xchg
iret
mov
pop
mov
fnstsw
pop
repz
je
hlt
fxam
sbb
mov
xlat
in
xor
pop
inc
in
stos
mov
cmpsb
sbb
sahf
imul
aaa
jo
addb
jl
dec
and
fldl
add
js
je
lret
inc
fcomps
adc
imul
or
add
cmp
push
aam
pop
pop
test
pop
std
sqrtps
roll
and
jl
into
mov
mov
daa
aad
clc
jno
mov
mov
mov
inc
rclb
jp
xor
push
mov
sahf
es
or
sub
jle
jns
loop
test
test
ret
sub
add
pop
cmp
les
fstp
addr16
pop
mov
push
enter
sub
pop
pop
pop
mov
xchg
mov
xor
lcall
lods
xchg
and
cmpsb
jmp
out
mov
sbb
push
andl
xor
push
and
mov
mov
fdivrl
add
sahf
mov
jbe
mov
sbb
shrb
outsb
xchg
xchg
sub
inc
add
fwait
testl
int3
adc
xchg
into
ficomps
mov
fcomps
cli
ds
sbb
shrb
idivl
xchg
xchg
push
lret
out
xorl
pusha
outsb
ret
iret
mov
sbb
shrb
push
or
insl
pop
outsb
shl
je
repz
push
pop
or
jl
add
add
mov
insb
aam
ret
popa
test
cmpsl
pop
cwtl
sbb
add
lods
sub
cltd
insb
sar
push
push
and
sbb
popa
test
bound
sahf
mov
and
xchg
adc
jne
enter
fistpl
mov
mov
mov
sbb
shrb
ret
push
sbb
push
pop
and
push
mov
lds
lahf
clc
testb
andb
popf
mov
ret
popa
test
and
lahf
xchg
add
imul
and
jg
push
xchg
jae
or
enter
and
popa
test
pushf
inc
jg
or
add
mov
out
popf
jmp
lock
bnd
ret
popa
test
mov
sbb
shrb
add
cwtl
cmpsb
xor
or
icebp
xor
cltd
aas
shll
negl
cmp
stos
js
pop
bnd
or
jmp
and
nop
fnstsw
jle
sbb
out
data16
roll
add
data16
divl
cs
aaa
ja
push
mov
filds
dec
xchg
push
pop
adc
mov
test
or
dec
mov
dec
sub
jmp
dec
mov
cmp
fstps
into
arpl
cmpsb
dec
sbb
in
inc
mov
shrb
std
mov
pop
mov
ret
pop
aam
cmp
in
push
adc
inc
push
sub
ret
lods
pop
leave
inc
sbb
std
xor
pop
lcall
cmpsl
push
iret
into
rclb
stos
pushf
inc
inc
push
in
and
mov
add
inc
fwait
je
mov
push
stc
dec
sbb
stos
daa
xchg
out
popa
into
push
mov
in
mov
test
fildll
mov
cltd
into
rcll
mov
add
inc
das
adc
sarb
movsl
or
out
cwtl
push
push
inc
outsb
cmpsb
and
test
mov
and
sbb
xchg
push
jl
aad
xchg
fwait
sub
cltd
sub
sub
mov
shrb
in
jb
sub
xchg
aas
pop
jmp
ja
sbb
jge
lret
mov
lret
sub
mull
dec
ljmp
pop
adc
push
call
mov
or
xor
scas
mov
loop
mov
jecxz
mov
sub
cld
fcmovnbe
cmp
mov
adc
xor
xchg
mov
jb
mov
cli
mov
sub
in
bound
dec
mov
rcrb
inc
repnz
sub
mov
cmp
sbb
xor
inc
xor
xchg
or
jb
cli
js
scas
jne
fwait
mov
fcomi
arpl
mov
leave
fnstenv
inc
ficompl
add
xor
or
xor
add
mov
fcomps
mov
dec
pop
adc
xchg
dec
scas
pop
sbb
push
cmp
movswl
sub
aas
inc
sbb
ret
insl
fsubl
or
sub
xchg
mov
or
or
and
inc
sbb
ds
adc
ret
jb
jl
mov
xor
negb
movsb
xlat
push
mov
inc
adc
dec
adc
and
mov
add
adc
adc
or
fstl
lds
in
mov
shlb
dec
push
cmp
imul
imul
dec
jmp
cmpsb
movd
lcallw
rcll
mov
adc
sub
push
lahf
ss
popa
out
mov
pop
add
mov
int
cli
xor
out
cmc
movsl
std
sbb
std
sub
and
outsb
call
mov
and
add
push
or
jg
dec
pushf
dec
fcompl
or
cmp
test
xor
xchg
jmp
cld
xor
inc
daa
pop
cli
loopne
push
dec
add
stc
xchg
sbb
ret
mov
daa
js
cmpsb
cmpsb
lods
and
jl
into
out
push
out
or
xchg
sub
cltd
cli
hlt
cmc
jnp
adcb
and
ja
sbb
pop
gs
push
pop
adc
leave
and
dec
outsb
ss
gs
cli
and
inc
aaa
adc
clc
sbb
inc
mov
push
mov
fstpt
in
les
js
arpl
movsl
sahf
jno
sub
lret
outsb
sbb
das
sti
fcmovne
nop
push
jle
imul
popa
cmp
enter
imul
inc
jmp
int
inc
das
mov
sbb
leave
les
mov
mov
pushf
cmpsb
lea
movsl
sub
fs
roll
and
xchg
aas
in
mov
outsl
add
outsl
sbb
in
mov
cmpsb
jg
ret
lds
add
sub
andb
clc
push
outsb
repnz
push
xlat
scas
adc
js
jle
pop
mov
std
xchg
pop
add
test
stos
out
push
push
and
xchg
dec
subl
sub
add
push
sub
loop
lahf
push
mov
push
pop
sbb
loop
cmpsl
mov
add
push
inc
lds
mov
cltd
push
repnz
xor
or
fldl
adc
pushf
or
jecxz
jmp
xchg
arpl
inc
jnp
lret
and
push
jle
cmc
xor
xchg
fcoms
mov
pop
mov
push
insl
and
imul
out
test
enter
xor
test
out
lea
cltd
ss
std
faddl
filds
mov
iret
jne
or
push
adcb
xchg
mov
pop
push
roll
popf
cmp
dec
movsl
jle
xchg
dec
stc
repnz
mov
call
ljmp
stos
or
mov
push
mov
sbb
orb
loopne
inc
xor
pop
xor
mov
push
push
sbb
inc
push
inc
imul
or
outsb
movsb
push
jo
sub
lcall
aaa
xor
lods
cmpsb
inc
xor
mov
orl
ret
xorl
addr16
mov
test
gs
test
jl
xor
shrl
enter
dec
loopne
adc
adc
fadds
dec
pop
dec
inc
dec
cld
xchg
or
hlt
and
lret
addr16
dec
xor
int
mov
rorb
jmp
aaa
mov
inc
and
pop
pop
jno
sahf
jne
fcmovnb
dec
push
bound
pushf
dec
mov
insl
pop
and
icebp
popl
js
xor
out
push
arpl
nop
fstpl
inc
outsb
in
bound
mov
push
xchg
cmpsb
daa
lcall
movsl
sbb
pop
adc
adc
ret
pop
and
scas
push
pushf
out
pop
adc
clc
sti
xchg
mov
cmp
fistl
add
or
ret
or
lods
lahf
aam
popa
inc
push
add
pop
xor
mov
xor
out
shl
xchg
jge
arpl
and
xchg
or
rolb
in
loopne
lods
ljmp
call
dec
add
imul
pop
rol
dec
sub
pop
sub
in
test
pop
cld
lret
pop
sti
sbb
jo
icebp
dec
sbb
cmc
sbb
push
push
jle
pop
pushf
bound
fs
mov
in
mov
mov
dec
or
je
jmp
add
jecxz
lret
mov
xchg
push
jmp
outsl
lret
lods
pop
mov
and
xchg
insb
jb
mov
lret
lods
push
stc
loopne
repnz
push
inc
sub
lods
pop
mov
int
ds
or
dec
stc
mov
inc
inc
in
push
fildll
inc
icebp
scas
loopne
filds
call
or
add
cmc
sti
pop
lret
push
and
bound
daa
xor
xor
jae
or
sub
out
sub
jp
add
push
cmpsl
ljmp
faddp
mov
aas
lock
rcrl
shll
sub
inc
mov
decl
dec
stc
sbb
mov
cmpsb
dec
push
das
xchg
lods
push
xchg
jns
int3
icebp
dec
pop
ss
sub
std
sub
outsb
rorb
adcb
fimuls
xchg
pop
cmpsb
cltd
int3
mulb
sub
adc
push
pushf
inc
not
fsts
mov
bound
int
addr16
addr16
cmc
fdivrp
mov
xchg
xchg
add
test
nop
stos
out
sbb
cs
jnp
hlt
sbb
cmpsb
sbbb
jo
add
xor
jl
enter
pop
pop
arpl
mov
scas
push
pop
bound
repnz
clc
mov
pop
sti
adc
jns
push
add
test
stos
mov
pop
sahf
mov
rcl
cmp
mov
test
pop
cli
cmp
dec
mov
nop
jnp
pop
sahf
mov
jo
mov
push
outsb
push
lods
jnp
fdivs
add
xorl
add
pop
lcall
adc
jg
fs
push
adc
mov
inc
sbb
pop
mov
inc
cmpsl
js
test
aam
test
jae
in
add
bound
in
outsb
push
jp
and
push
jmp
shll
repz
pop
sahf
dec
insl
int3
jecxz
mov
fiadds
ljmp
mov
testb
push
dec
shll
lea
testb
sbb
mov
insb
shlb
jecxz
imul
clc
mov
inc
mov
push
dec
push
sbb
or
aas
mov
jne
iret
iret
adc
jmp
push
loope
mov
fwait
mov
imul
fsubs
jle
shlb
loopne
test
push
repnz
cmp
insb
mov
out
repnz
mov
ret
mov
imul
iret
mov
lea
orb
push
test
aam
cmc
ffree
sbb
scas
xchg
stc
pop
xchg
sbb
addb
cmp
insb
orl
adc
lock
add
out
cmp
adc
cmp
movsb
push
sbb
fcomip
mov
push
negl
jne
cmp
dec
mov
movsb
adc
xchg
mov
jg
int
incb
jns
cltd
cmc
mov
out
mov
push
cwtl
add
setl
mov
clc
out
cmp
adc
sub
push
pop
jnp
mov
lret
add
or
rclb
mov
jns
cmp
nop
adc
std
es
imul
ret
mov
imul
mov
jle
xor
scas
xchg
mov
pop
pop
or
fistpl
dec
push
mov
int3
and
bound
mov
fiadds
int3
xchg
and
adc
dec
adc
cli
jno
int3
add
and
add
lea
dec
mov
push
test
enter
imul
clc
adc
mov
mov
and
mov
inc
in
arpl
out
int
push
xor
adc
xor
lods
out
mov
es
or
inc
scas
ficoms
lods
icebp
gs
in
inc
cmc
xor
xor
out
lret
cld
fimull
insb
in
insb
xor
outsb
mov
adc
and
cmpsb
dec
mov
js
lret
sbb
ja
out
jmp
jp
pop
sub
outsb
test
push
cs
sbb
ret
xor
sbb
pop
out
dec
and
sub
inc
fisubl
xor
lret
and
movb
push
ja
fidivs
inc
int
push
mov
movsl
imul
mov
push
in
shl
mov
inc
push
divb
cltd
iret
sub
gs
xor
dec
fwait
adc
and
shlb
lret
sbb
sbb
pop
subl
mov
subl
mov
sub
pop
cmp
dec
test
jmp
mov
xor
mov
mov
hlt
sbb
cmp
mov
jno
push
movsl
insb
sub
xchg
lret
cmp
mov
ja
out
mov
mov
imul
push
es
roll
jo
fidivrl
mov
cld
shlb
cld
andb
bound
and
imul
add
cmp
sub
inc
pop
or
aas
xchg
test
jno
push
push
jge
cmp
xor
jb
mov
arpl
push
int3
dec
xorb
dec
xchg
xchg
push
inc
decl
call
popf
into
jge
mov
pop
into
lds
xor
js
or
and
pushf
imul
jno
push
sub
in
stc
mov
lea
cli
leave
xchg
mov
mov
xor
ja
adc
mov
dec
pop
adc
xor
mov
je
and
xchg
test
insb
jg
sbb
xor
int3
dec
jecxz
and
mov
xor
push
mov
mov
int
lcall
pop
mov
icebp
arpl
sbb
xchg
pop
iret
stos
push
dec
jno
and
in
in
mov
jbe
js
cmpsl
xchg
push
mov
enter
or
gs
mov
leave
jnp
sahf
pop
cli
rcrb
test
sbb
outsl
mov
imul
shrb
push
fsts
outsl
ret
mov
pop
mov
mov
dec
shrl
mov
cld
push
ljmp
cmp
cltd
loopne
faddp
mov
ja
mov
or
mov
shlb
push
xor
in
mov
sbb
mov
aam
xchg
lock
repz
fsubl
xchg
sub
loope
ret
mov
imul
test
dec
addr16
testb
dec
adc
movsb
shll
ds
xor
sbb
cmp
and
jge
push
cltd
jbe
mov
out
pop
xchg
add
cmp
sbb
popf
ret
out
pop
insl
shrb
push
inc
rclb
addl
inc
mov
mov
push
fwait
jne
mov
std
or
sahf
leave
int3
push
shl
lods
arpl
mov
scas
addr16
inc
adc
nop
out
lea
add
add
ret
sub
jns
bswap
mov
int
inc
or
adc
adc
bound
dec
or
sbbb
int
lret
sbb
xchg
mov
mov
mov
mov
pop
rcrl
or
adc
push
cmp
lret
push
js
push
addr16
lods
xor
mov
sbb
ljmp
adc
sahf
inc
stos
outsl
mov
repnz
xchg
sub
cmp
movsb
rolb
jecxz
in
cld
xlat
stos
ret
mov
clc
sub
push
loop
jmp
outsb
dec
out
in
jb
les
push
sahf
sbb
in
sbb
icebp
int3
fidivs
sbb
lock
stc
fmuls
mov
inc
out
jp
mov
mov
push
jecxz
jmp
xor
lret
std
shrb
mov
jl
adc
jae
cltd
cmp
jle
movsb
aas
fstp
sub
ror
repnz
xchg
mov
enter
mov
cmp
ja
adc
call
je
jp
outsb
jl
pop
imul
mov
and
rclb
jge
push
clc
iret
inc
pop
ja
xor
in
pop
sbb
or
lock
xor
xlat
add
push
sub
pop
mov
add
ja
in
pop
iret
adc
sub
out
jmp
es
pop
push
pop
test
cmp
xchg
adc
sbb
xchg
xchg
rcrb
mov
mov
mov
sbb
test
dec
scas
push
xor
xor
mov
mov
mov
mov
xor
mov
mov
inc
sbbb
sub
mov
sub
stos
or
sti
and
add
fcoms
push
divb
cld
je
test
loop
or
mov
jle
dec
stos
jecxz
pop
lds
and
stos
and
and
jno
mov
mov
inc
sahf
xor
sbb
add
out
mov
int3
or
xchg
adc
ret
notb
push
fdivs
shlb
nop
pop
push
jns
in
push
push
adc
clc
push
fcmovu
fiadds
imul
xchg
xchg
movsl
aad
test
sub
addl
repz
xchg
pop
popa
push
push
scas
jge
push
adc
mov
in
pop
push
shrl
pop
lods
pop
and
aas
fcmovnu
xchg
jecxz
sub
sar
movsb
xchg
stos
dec
test
sub
xor
mov
sub
and
scas
dec
push
mov
scas
sarb
xor
ret
daa
movsb
xchg
repnz
arpl
movsl
or
dec
dec
pop
xchg
inc
dec
xchg
push
sub
dec
xlat
jno
out
test
cli
pop
addb
or
push
scas
xchg
outsb
in
lds
pop
repz
data16
cmp
repnz
enter
addr16
in
imul
xchg
mov
sbb
xchg
push
mov
cli
insl
jae
jnp
mov
lods
inc
out
add
sqrtps
stos
mov
xchg
ret
in
pop
ret
insb
xor
cltd
add
jno
inc
sub
repnz
cmp
out
shlb
sti
jns
ja
call
shrb
out
mov
push
ret
adc
pop
scas
shrb
loopne
xor
dec
xchg
in
pop
mov
pop
mov
mov
jmp
jmp
or
in
in
mov
shrb
pop
push
aam
stc
jno
and
add
in
aaa
and
jg
pop
imul
outsl
jge
cmp
icebp
or
in
mov
repz
mov
jge
push
xchg
mov
xlat
mov
rolb
mov
cld
xor
adc
jge
push
push
dec
or
xor
test
les
fs
adc
ret
int
dec
std
pop
xchg
mov
in
loopne
inc
into
push
out
iret
lods
stc
sub
repnz
cmp
jecxz
push
sbb
and
hlt
push
ljmp
fnstenv
add
dec
push
mov
out
sub
xlat
sbb
insl
fs
xor
sti
and
shrb
shll
icebp
pop
jno
fstp
cmp
enter
push
insb
out
rol
push
mov
in
fldenv
in
inc
jb
aam
xor
dec
popa
dec
dec
lods
mov
adc
inc
cvtpi2ps
and
mov
stos
out
pusha
cld
dec
jp
and
dec
std
mov
pop
sub
pop
fmul
mov
stc
and
cs
loopne
test
test
test
sete
fsubl
xchg
sub
loope
rcrb
sbb
addl
mov
jg
lods
sub
push
dec
or
filds
sbb
pushf
jae
mov
jne
mov
xor
mov
xor
fisttpll
outsb
scas
lahf
repnz
pop
in
mov
movsb
clc
mov
test
loope
fsubs
ljmp
xor
cmp
js
addr16
dec
xorb
sti
stos
cmovbe
adcb
adc
js
xorb
inc
pop
jo
movl
std
dec
pop
fisubrs
pop
and
inc
dec
adc
sti
fs
cmp
add
xchg
stc
enter
jbe
and
push
sahf
cmp
addr16
repz
xchg
xchg
xlat
mov
scas
sbb
cltd
flds
xchg
sbb
inc
pop
jo
movl
cmp
xor
jg
iret
xchg
loope
xor
adc
pop
pop
mov
xchg
xor
ret
fcomps
adc
mov
into
loope
fbstp
int3
cmp
fcomip
mov
jo
ljmp
pop
cmp
pop
lods
mov
hlt
jo
add
dec
ret
push
xchg
jo
fidivrs
pop
jne
add
and
pop
inc
xlat
cmpsb
sahf
aam
test
or
in
aas
repz
repnz
andl
add
mov
mov
aaa
jp
subl
movsb
iret
lods
add
mov
push
or
in
or
lcall
icebp
fstl
subl
fistl
sub
and
mov
testb
jne
xor
movsb
pop
xor
and
sahf
adc
iret
js
fnstcw
mov
and
out
xor
dec
push
lret
insl
cmc
mov
bound
jne
mov
jo
inc
cmp
add
jecxz
jb
inc
aaa
fwait
rcll
jmp
cmpsl
popf
mov
sub
cmp
push
xor
insl
ds
in
adc
and
pop
repnz
cmp
jecxz
push
loop
dec
popa
push
xor
sbb
sub
mov
cmp
out
cmp
lods
sbb
push
add
test
pushf
xchg
jae
push
xor
movsb
push
pop
pushf
lret
das
cmp
mov
xchg
push
popa
xchg
sub
push
hlt
push
stos
add
and
mov
loope
mov
pop
sbb
pop
add
mov
dec
je
adc
daa
outsb
adc
lds
pop
xchg
pop
xlat
xor
sti
mov
icebp
movsb
fsubs
addr16
and
scas
mov
xor
lods
adc
cld
rcr
addr16
lock
mov
arpl
clc
loopne
in
imul
enter
push
mov
jae
aad
imul
add
cmc
add
xor
rol
sarl
mov
cmpsl
push
or
scas
bound
push
jo
shr
popw
inc
inc
fcom
das
loopne
out
cmp
rol
push
mov
cmpsl
push
or
scas
push
cmp
and
pop
cltd
push
mov
rcrb
aas
sub
popf
daa
aas
loope
mov
or
mov
sbb
lcall
dec
jp
js
xchg
xor
jl
mov
sub
mov
popa
mov
scas
sub
jae
adc
push
pop
popf
cmpsl
std
movsl
mov
int
inc
sbb
pop
sbb
mov
sti
and
mov
push
leave
cs
aaa
loop
pusha
xchg
stos
negb
addl
mov
shl
div
loop
mov
sti
inc
add
mov
repz
stos
pop
or
jo
mov
iret
cld
pusha
ficoms
daa
cmpsb
inc
cmp
pop
pop
sub
add
inc
test
loopne
dec
push
int3
mov
fnstenv
xchg
dec
incb
cmc
pop
fmuls
jo
outsl
xor
mov
cs
stc
ds
mov
add
sub
loopne
jle
cli
adc
pop
arpl
sub
lods
adc
loop
addb
loope
mov
cmpsb
inc
cmp
pop
pop
movsl
push
out
or
sbb
add
adc
div
jp
push
les
jnp
mov
and
add
pop
add
cmpsl
mov
stos
push
push
movsl
lods
sbb
xor
cmpb
add
adc
cmp
xor
loopne
orl
xchg
pop
lods
out
mov
xchg
ja
fdivrp
sbb
mov
sbb
xchg
mov
imul
push
pop
jle
or
lds
mov
adc
pop
push
lea
imull
jae
call
pop
push
jmp
or
or
lea
cmp
sbb
jbe
sbb
adc
test
test
push
insl
inc
pop
jnp
mov
pusha
push
dec
or
outsl
mov
and
lahf
cmc
dec
xor
insb
add
jle
stos
outsl
add
pop
daa
sbb
iret
pop
mov
in
or
loope
mov
das
addl
add
xchg
cmp
and
mov
aad
pop
inc
sbb
or
data16
sbb
xorb
ret
ret
jmp
jbe
jae
sbb
fstps
or
enter
popf
add
stos
sbb
xchg
push
fbstp
cli
ret
push
iret
mov
cmp
out
out
sti
repz
jno
sub
xchg
adc
jno
test
les
push
dec
lret
adc
push
mov
xchg
aad
jle
hlt
add
and
jle
lea
push
mov
cmp
repnz
dec
sub
cltd
into
sbb
ret
cwtl
mov
rcrl
test
dec
adc
xacquire
mov
mov
push
hlt
js
or
flds
xorl
imul
jmp
mov
aam
adc
icebp
cmp
dec
or
fcomi
loope
mov
das
in
outsb
cmp
cmp
mov
mov
js
mov
mov
mov
or
and
and
into
bound
add
add
adc
adc
int3
mov
mov
fdivs
imul
sarb
stc
jl
cmp
popa
pop
cltd
aad
test
outsl
mov
jbe
addr16
pop
repnz
test
jae
lea
mov
mov
sub
push
mov
inc
lock
cmp
pop
push
inc
sbb
xor
sub
ret
mov
mov
int
loop
sar
pshufw
cmpsb
cmp
cmc
leave
cmp
ss
adc
fld
or
sub
adc
pop
sahf
mov
divl
fstps
out
dec
bound
pop
call
add
fs
mov
push
dec
js
adc
mov
sbb
ss
pop
mov
stos
jp
and
out
les
in
jl
jae
cwtl
sahf
jp
dec
inc
cs
sahf
xor
repz
xor
outsb
popa
mov
fimull
mov
lcall
mov
xchg
mov
cmp
sbb
stos
ljmp
sahf
sub
cmpb
mov
es
imul
jl
in
mov
in
adc
orb
je
mov
scas
or
jnp
mov
sti
das
lods
dec
test
lods
adc
mov
cmp
xor
jb
jmp
das
lods
dec
test
lods
mov
sbbl
inc
cmp
push
jb
and
mov
add
lods
sub
cld
jbe
aad
pop
jle
mov
push
jmp
imul
jno
pushf
arpl
setnp
and
inc
push
jnp
inc
adc
push
bnd
mov
push
fisttps
in
cltd
xor
rorb
icebp
out
adc
or
mov
ret
jmp
cmp
inc
ret
mov
sub
xchg
mov
sbb
xchg
idiv
or
mov
in
out
cltd
push
hlt
add
xchg
movsb
stos
xchg
test
add
jae
inc
into
inc
ljmp
pop
pop
push
jbe
decl
cmp
loopne
leave
ds
sub
loop
or
negb
ja
sbb
arpl
adc
ds
sbb
cs
test
pop
fwait
and
sub
rcr
mov
push
shrb
stc
rep
sbb
call
push
mov
shrb
mov
popf
mov
daa
fs
insb
iret
fisttpll
jge
mov
adc
push
fwait
les
jo
hlt
push
jle
out
outsl
sahf
aaa
scas
sub
or
pop
inc
dec
lcall
cmpb
inc
pop
pushf
lock
adc
xchg
aam
sahf
sahf
std
inc
mov
popa
xchg
sarl
mov
xor
mov
mov
clc
cld
xchg
pop
lock
rclb
lret
sub
mov
pop
lods
out
push
fs
stos
add
jmp
repz
or
jmp
pop
pusha
sub
out
leave
and
mov
adc
pop
daa
mov
mov
cltd
call
mov
lods
into
mov
scas
or
jns
dec
push
add
stos
aas
gs
ret
xor
leave
sahf
xor
loopne
arpl
out
insb
add
xchg
aam
test
xchg
cli
fiadds
adc
xor
leave
mov
sahf
lods
sub
dec
in
pop
xchg
cld
jmp
movsl
dec
push
dec
sahf
pop
lret
sbb
xor
cltd
adc
inc
incl
mov
mov
mov
pusha
gs
lret
xor
sub
dec
lods
sub
mov
dec
sbb
cmp
loope
jmp
xchg
xor
test
jne
jae
test
pop
movsl
or
outsl
lods
js
jecxz
loope
divb
mov
repz
ret
sarb
mov
or
mov
sbb
pop
xchg
stos
inc
push
insb
in
jecxz
loop
push
ret
cmp
push
pop
fucomp
dec
je
jmp
xor
in
sarb
ret
and
icebp
sbb
cmp
mov
xor
cmp
sub
in
push
cmp
xor
pop
xor
das
loopne
sbb
inc
in
push
jae
and
and
loop
in
inc
int3
ss
jecxz
sti
pop
pop
push
ret
movsb
sub
rclb
imul
shl
mov
fxam
push
int
out
shl
xchg
pop
mov
pop
sub
loop
je
sti
cld
mov
orl
push
mov
mov
jns
fadds
mov
adc
and
jg
and
movsl
pop
call
cltd
lods
js
arpl
jno
ret
jg
popf
aas
cli
dec
mov
jg
xor
mov
adc
xchg
push
lahf
nop
icebp
shll
mov
lcall
mov
dec
sbb
xor
test
cmpsl
xor
pusha
or
add
sarb
mov
or
mov
fisttpl
lock
jno
xchg
rcrb
dec
push
or
cmp
lcall
dec
or
add
mov
mov
mov
rol
outsl
les
mov
cltd
aaa
enter
push
dec
lcall
bound
imul
adc
outsl
inc
fs
pop
test
push
push
xchg
into
and
xchg
scas
cmp
inc
pop
jne
adc
jae
in
pop
loope
xor
je
push
mov
cmp
shrl
mov
jbe
xchg
data16
pusha
or
pop
mov
popa
adc
mov
jo
xor
popf
sbb
jp
jge
adc
jp
cmp
and
lock
loop
add
syscall
fstpt
pop
mov
repnz
mov
mov
outsb
jecxz
dec
subl
xchg
loope
or
lahf
jl
lret
aaa
sbb
bound
scas
loopne
iret
xchg
lahf
out
lret
sub
mov
and
xor
inc
into
test
clc
aam
dec
lahf
les
lret
fwait
movsl
aas
in
dec
add
ljmp
roll
pop
and
aam
inc
loopne
adc
fldt
xchg
sahf
mov
or
xchg
loop
sub
gs
pop
ret
nop
push
pop
xchg
xor
ds
testb
xchg
movsb
test
cwtl
push
dec
fcmovu
aad
cli
subl
shlb
push
push
sub
mov
adc
stos
imul
xchg
rol
aam
sub
xchg
inc
imull
mov
or
cltd
cmp
icebp
test
jno
push
popl
cltd
xchg
int
cld
mov
rcr
mov
push
cltd
orl
sbb
mov
dec
mov
inc
or
mov
push
mov
xorl
sub
mov
out
imul
ja
in
test
int3
repnz
add
fidivrs
pop
inc
out
dec
pop
sub
in
push
test
xor
rcr
sub
rcll
mov
push
cmc
cld
aaa
and
pop
jg
rorb
pop
xor
js
inc
sub
loope
test
xchg
cwtl
dec
scas
jp
mov
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
xchg
mov
xchg
cmp
xchg
ljmp
aad
or
pop
sub
xor
xchg
mov
js
sbb
adc
jo
movl
dec
dec
pop
mov
sub
inc
xor
jl
cmpsb
in
roll
clc
mov
sbb
shrb
jecxz
or
ds
lret
dec
fidivl
pop
push
push
mov
push
je
mov
pop
outsl
push
aas
mov
flds
mov
sbb
shrb
out
dec
xchg
sbb
mov
and
and
popa
test
popf
add
lea
mov
mov
sbb
shrb
xchg
sbb
xor
mov
sbb
imul
enter
int
lods
pop
cwtl
sub
add
and
adc
inc
stos
mov
xchg
add
mov
cs
mov
shl
sub
mov
mov
inc
jge
sbb
inc
xor
pop
push
inc
mov
stc
loop
lret
rcr
imul
aas
shll
leave
push
sub
enter
rorl
cwtl
push
push
mov
sbbb
push
lret
scas
repz
mov
adc
pop
sub
jnp
outsl
roll
mov
xor
aas
xor
fistpll
inc
mov
fadd
sti
cmc
repnz
adc
push
in
clc
push
mov
mov
cmpsl
jg
stos
push
and
int
in
xlat
jecxz
call
and
push
cmp
into
inc
jecxz
imul
mov
sub
fdivs
ja
xor
xlat
lahf
js
mov
mov
ss
sbb
lret
sti
adc
sub
sub
jb
sub
fsubrl
add
stos
mov
mov
push
je
or
inc
aad
pop
out
jecxz
xor
cmpl
or
jnp
mov
lret
mov
lret
adc
out
push
inc
and
out
lahf
popa
fstp
pop
xchg
pop
imul
es
les
ficomps
adc
xor
and
xor
dec
mov
scas
jno
popf
outsl
shrb
cmp
xchg
test
lret
or
mov
mov
fidivrs
sub
fisubs
stos
push
test
sarl
int
repz
seto
sbb
mov
xchg
cmp
sub
mov
fisubs
mov
mov
push
sbbl
and
vpsrlw
xchg
insb
xchg
or
xchg
mov
adc
aaa
mov
loopne
ljmp
xchg
in
pop
test
test
ja
jp
xor
jle
lods
bound
cmp
in
sbb
clc
movsb
mov
test
out
aaa
pop
aaa
pop
aas
and
push
adc
bound
fidivrs
fmull
and
fsubr
fdivl
jle
mov
mov
xchg
in
in
or
sbbb
cmpsl
jae
xchg
aaa
sbb
lcall
shrl
test
mov
sbb
shrb
xor
jg
scas
mov
sbb
shrb
cld
lods
push
mov
sbb
shrb
mov
push
xchg
mov
sbb
shrb
inc
pop
push
push
push
mov
sbb
shrb
sbb
mov
popa
test
and
jp
jbe
jae
mov
sbb
shrb
sub
inc
test
add
ret
popa
test
add
jo
mov
popa
test
iret
inc
pop
mov
pusha
mov
popa
test
leave
sbb
xchg
int3
dec
adc
ret
popa
test
out
add
sub
ret
popa
test
push
aad
add
ljmp
popa
test
sbb
test
and
ret
popa
test
leave
mov
mov
sbb
shrb
out
xchg
insl
inc
cld
out
mov
sbb
shrb
xchg
mov
test
ret
popa
test
in
cwtl
fcoms
mov
sbb
shrb
mov
cmp
ret
popa
test
in
dec
xchg
pop
popa
mov
sbb
shrb
mov
xlat
lods
mov
sbb
shrb
sub
pop
xchg
clc
sbb
mov
sbb
shrb
add
repnz
and
popa
test
sub
sbb
mov
sbb
shrb
xor
test
ret
popa
test
stos
cli
cld
jecxz
adc
mov
sbb
shrb
push
adc
test
lcall
shrb
and
popa
insb
aas
cmc
mov
sbb
shrb
pop
xchg
jl
dec
sahf
inc
mov
sbb
shrb
repnz
mov
sbb
shrb
mov
aam
mov
sbb
shrb
rolb
adc
ret
popa
test
and
pop
or
sbb
popa
test
les
stc
jl
mov
sbb
shrb
loop
mov
inc
pop
jb
ret
popa
test
dec
aam
dec
lock
sbb
shrb
movsl
lret
mov
mov
sbb
shrb
xlat
into
dec
sub
sbb
shrb
das
mov
in
stos
mov
sbb
shrb
fsts
lcall
shrb
movsl
cmp
mov
sbb
shrb
movsl
out
out
or
mov
sbb
shrb
mov
in
shlb
popa
test
mov
loop
jno
ret
popa
test
leave
mov
in
pop
mov
sbb
shrb
rcll
mov
sbb
shrb
jle
fmull
ret
popa
test
mov
sub
xor
and
popa
test
aam
mov
mov
sbb
shrb
push
mov
dec
pop
pushf
jp
ret
popa
test
sub
in
mov
sbb
shrb
hlt
xorl
mov
sbb
shrb
sbb
movb
and
popa
test
cmp
cmp
inc
mov
sbb
shrb
loopne
jge
enter
ret
popa
test
jl
xchg
mov
sbb
shrb
scas
xchg
jl
mov
xchg
ret
popa
test
outsb
mov
mov
ret
popa
test
mov
rorb
mov
sbb
shrb
insb
sbb
push
ret
popa
test
loop
jmp
dec
mov
sbb
shrb
xchg
cmc
jns
sbb
mov
sbb
shrb
xor
cmp
mov
sbb
shrb
nop
enter
xor
xchg
xchg
sub
out
and
insl
or
or
lods
jp
sbb
push
pusha
cmp
push
dec
xchg
iret
mov
sub
pop
pop
jno
outsb
mov
js
gs
insl
pop
and
sub
inc
sbb
xchg
clc
add
rcrl
call
push
xchg
push
bound
xor
pop
imul
pop
scas
adc
mov
lds
popa
push
fwait
rolb
mov
push
jmp
jg
xchg
mov
aam
lahf
aas
ss
sbb
adc
test
in
cmpsl
or
ret
popa
test
mov
sbb
shrb
in
fistpl
push
add
jg
sti
xchg
imul
inc
jnp
mov
fimuls
pop
mov
jbe
das
mov
adc
mov
xor
pop
xor
xchg
dec
jbe
pop
lods
ret
xor
orb
rorl
lea
inc
rorb
movsl
jne
mov
cltd
push
pushf
mov
pop
xor
clc
mov
bound
data16
aam
sbb
add
dec
int3
mov
in
loopne
jle
and
jbe
sti
nop
cld
outsb
shrb
push
fwait
das
pop
in
or
and
pop
lret
and
mov
dec
mov
xor
dec
mov
cmpsb
xchg
jo
ljmp
or
jne
cmp
out
sub
adc
mov
mov
adc
xchg
fs
inc
push
push
xchg
sbb
cmp
stos
pusha
int3
pop
add
mov
sbb
cmp
gs
xor
lret
inc
xchg
hlt
and
xchg
divb
pmulhw
jle
xchg
xor
sarl
clc
or
pusha
mov
in
rorb
inc
cmpsl
sub
sub
jns
loope
sub
lea
cmp
lcall
xlat
xor
push
dec
or
add
pop
std
sahf
push
xor
scas
xlat
test
adc
lret
sti
add
out
data16
dec
leave
popf
mov
in
ret
pop
mov
add
lcall
fbstp
pop
in
test
test
in
lahf
xchg
pop
imul
jo
add
push
fsub
leave
test
push
outsb
mov
shll
or
cltd
das
cmp
aad
pop
adc
mov
xor
pop
xor
xchg
sbb
adc
out
adc
add
mov
ja
or
jmp
cmpsl
inc
call
jne
or
add
mov
pusha
stos
dec
fs
xchg
fnstsw
cmp
test
mov
push
jl
mov
popa
dec
fucomi
stos
mov
and
pop
rcll
cmpsl
add
cmp
and
ja
mov
scas
and
cmp
popa
jae
mov
mov
mov
lcall
sub
aad
rcrb
dec
rcl
or
xchg
push
in
mov
es
adc
aaa
nop
inc
sub
fwait
dec
xchg
fstps
dec
stc
mov
aas
push
stc
notb
or
jle
xor
lods
loope
sbb
jno
inc
push
fnstcw
inc
pop
sub
add
dec
add
ljmp
adc
or
popa
mov
push
test
imul
fbld
mov
daa
mov
jge
xor
pop
push
sti
cmpb
emms
outsl
lods
push
das
cmp
push
push
push
and
jne
sub
push
and
mov
mov
xchg
sub
mov
dec
push
or
push
inc
cwtl
pusha
jecxz
lock
dec
mull
add
jg
and
mov
pushf
mov
addl
jne
rorb
icebp
fdivrp
inc
or
push
mov
pop
or
sarb
aas
pop
sub
sub
fstps
cmp
cmpsl
in
fisttpl
jne
cmp
es
js
sbb
cmpsl
push
mov
sbb
jecxz
pop
push
insl
icebp
jmp
adc
pop
jo
mov
pop
push
ja
jae
jns,pn
test
sahf
cmp
mov
jmp
mov
clc
mov
fwait
mov
mov
aad
or
sub
xchg
addr16
inc
inc
add
ljmp
lock
into
fucomi
into
imul
iret
pop
cmp
mov
outsl
shr
or
add
sub
sbb
or
dec
xchg
mov
push
xchg
jmp
jge
inc
leave
aas
cwtl
push
cltd
mov
fidivl
std
loope
xchg
out
push
add
es
and
aad
add
sbb
clc
mov
shll
in
out
cmpsl
add
jp
jo
lret
jp
jo
xchg
cli
popf
dec
push
jo
xchg
dec
inc
ret
push
lret
addl
xor
out
sbb
jnp
add
int
rcrl
shrb
scas
dec
leave
int
jo
enter
rcl
push
dec
mov
movsl
mov
sti
loop
jge
inc
cltd
loop
mov
loopne
loope
xlat
add
in
fmuls
loopne
jle
inc
dec
mov
sarb
mov
iret
jae
sub
sub
push
mov
jle
sub
das
dec
repz
popa
jo
cli
popl
mov
fwait
dec
jo
clc
dec
sbb
cli
xor
push
ret
push
sub
pop
add
push
xchg
into
ja
fldl
xor
adc
pop
mov
or
imul
add
cs
push
rcrb
sbb
in
lods
push
out
cmc
pop
scas
mov
mov
mov
xor
les
imul
add
insb
cs
mov
jl
mov
popa
aas
lods
stc
mov
mov
add
add
push
xor
inc
insl
mov
stos
scas
xor
aam
inc
icebp
imul
dec
jge
push
push
pushf
and
pop
std
mov
sub
rcrl
xlat
movsl
xchg
and
insb
cld
bound
mov
mov
sbb
loop
or
xor
inc
les
push
jb
icebp
hlt
mov
movsb
sbb
lea
adc
lret
adc
scas
or
fldl
push
xor
fcmove
repnz
pusha
fistpll
mov
cmpsb
pop
fsts
inc
mov
fiadds
xlat
mov
mov
push
es
dec
pop
push
push
in
lock
imul
jae
into
adc
test
mov
push
jg
loopne
sub
js
mov
sbb
push
adc
cwtl
sub
xchg
cld
sti
sbb
aaa
add
jne
andl
insl
inc
xchg
pop
addl
clc
lret
and
rcrl
add
mov
sbb
and
mov
cmp
xchg
mov
or
push
seta
icebp
stc
fidivl
leave
lahf
sbb
mov
xor
pop
adc
bound
jb
dec
add
pop
int
mov
and
add
and
pop
pop
jb
cltd
mov
pushf
pop
sbb
mov
jno
aam
je
adc
imul
inc
mov
bound
addr16
js
iret
pop
cmp
pop
mov
push
add
and
test
xor
movsb
insb
cld
inc
sub
stos
lret
and
jmp
jg
push
movsl
iret
sub
inc
sub
mov
and
add
push
fmull
outsb
lods
jl
out
iret
dec
xchg
enter
ret
pop
push
xlat
shlb
pop
mov
bnd
inc
iret
in
and
xor
lods
mov
addr16
xchg
pop
rcrb
inc
aad
add
inc
and
add
mov
mov
sbb
push
pop
fcmovnu
xchg
pop
sbb
pushf
lea
clc
std
mov
dec
push
inc
repnz
xor
jno
test
daa
or
inc
xor
ja
pusha
xor
jae
mov
or
lret
sbb
push
jne
xchg
xor
shr
cmp
lds
bound
je
loope
in
and
and
filds
sbb
cmp
adc
std
int
cmc
fs
ljmp
or
dec
fwait
nop
arpl
add
popf
add
mov
xchg
fistpl
cmp
cmp
inc
add
sbb
rorl
sbb
aad
jmp
mov
xchg
subb
mov
repz
insl
mov
inc
and
mov
and
rcrl
dec
mov
cmp
aaa
lret
push
popa
jns
xchg
loopne
mov
into
sbb
out
icebp
loope
mov
pop
loopne
add
xlat
mov
stos
pop
adc
ljmp
jmp
xor
inc
sbb
negl
dec
pop
stc
incl
jo
jecxz
jne
stos
stos
ror
xlat
lea
jge
and
xchg
sub
lahf
sbb
scas
rcl
mov
dec
inc
mov
mul
mov
out
sub
mov
cmp
out
add
xor
decl
jne
bound
push
sbb
push
mov
push
lock
add
add
lock
aam
sub
lock
and
add
xchg
and
rcr
pusha
mov
mov
ds
popf
jnp
gs
push
add
repnz
jne
mov
mov
or
dec
inc
push
push
outsb
sarb
inc
dec
jbe
cmpsl
dec
rcl
test
imul
dec
inc
js
stos
and
enter
mov
test
xor
ret
lea
mov
mov
in
adc
data16
xchg
add
idivl
lock
out
push
out
sarl
sbb
repnz
aam
imul
pushf
clc
sbb
cld
mov
add
loop
sbb
or
mov
inc
icebp
sub
jno
jecxz
lods
stc
sar
jnp
stos
xor
push
mov
and
mov
push
ret
mov
rorl
mov
imul
nop
repnz
pop
les
xchg
clc
add
dec
sbb
sbb
inc
mov
add
xlat
and
jl
adc
mov
push
inc
ret
inc
and
fucom
sbb
stc
aam
dec
push
dec
and
pop
mov
and
lret
lea
subb
pop
xor
mov
mov
inc
andl
mov
mov
cmc
push
xorb
cld
filds
cmp
cmp
dec
push
jge
mov
or
pop
mov
lea
xor
sar
pop
stc
es
cmpb
icebp
cs
mov
mov
js
lahf
jle
test
jo
shrb
test
idivl
dec
rcpps
lds
aad
xchg
cwtl
scas
or
adc
sbb
cmp
xchg
mov
cmpsl
xchg
or
rol
into
mov
pop
mov
inc
mov
mov
xor
outsl
popa
mov
mov
cld
test
sub
into
into
fstpt
mov
dec
add
in
insl
sahf
xchg
mov
fistpll
push
lret
sub
inc
jmp
xor
mov
jmp
nop
mov
dec
push
cmp
loope
lds
call
idivb
or
adc
test
add
cmp
cmpl
pusha
xchg
jmp
inc
jno
insl
pusha
lahf
lret
jbe
sbb
xor
or
outsb
push
cmp
and
mov
dec
pop
fistl
sbb
jle
stos
push
fstl
aam
sbb
pushf
pusha
scas
mov
mov
mov
mov
test
cmc
dec
mov
jmp
test
lock
adc
xor
scas
sub
adc
and
pop
dec
insb
leave
pusha
icebp
rorb
pop
sbb
repnz
test
imul
idivb
inc
popa
dec
sahf
xor
lock
lods
sbb
xor
or
fsubrp
out
push
shlb
stc
or
orl
movsb
push
shl
addr16
int
pop
push
sarb
xchg
enter
xchg
mov
push
decb
adc
push
je
fnstcw
fmulp
adc
out
sbb
rcr
mov
adc
xor
add
insb
push
int
push
lds
movsb
ret
dec
mov
mov
vmread
divb
push
sub
mov
push
jnp
add
loop
or
and
mov
mov
mov
pushf
mov
fmulp
add
out
xchg
add
pop
int3
jno
mov
testb
movsl
or
mov
jnp
pop
leave
es
mov
pop
cmp
sub
xchg
loopne
loopne
icebp
lret
adc
test
push
pop
push
fadds
divb
stc
push
je
rcrb
xor
cli
sbb
inc
nop
xor
push
cmc
call
jno
xchg
cmp
pop
aaa
lret
int
lret
sub
mov
inc
xor
sbb
ja
pop
and
and
cli
lock
in
dec
mov
inc
jmp
les
xchg
sub
and
cmpsb
arpl
hlt
pushf
adc
jmp
scas
mov
stos
inc
jmp
sbb
decb
pop
in
cmc
jmp
ljmp
dec
loopne
inc
cmp
xchg
cmp
paddusb
orb
mov
add
xchg
sbb
xor
push
push
cmp
push
xchg
lods
sbb
in
movsl
sbb
das
mov
inc
aad
dec
cmp
daa
dec
add
mov
movb
add
cmpsb
lcall
jmp
repnz
add
push
test
pop
pop
fs
out
and
addr16
nopl
sub
repz
xor
test
mov
adc
or
dec
out
outsb
imul
mov
in
sarb
sahf
mov
in
in
ret
adc
push
inc
out
decb
cwtl
lret
repz
pop
mov
daa
cwtl
enter
je
cmp
enter
sub
push
sub
call
pushf
jae
and
sub
xor
shl
xchg
xchg
sbb
std
cmp
jnp
into
jb
add
movq
mov
jno
and
in
mov
dec
sbbb
add
ss
insb
aam
andb
mov
or
add
pop
ret
test
js
pop
dec
fwait
mov
dec
imul
fwait
out
cmp
and
pop
iret
testb
mov
jno
cmc
repnz
mov
pop
mov
add
insb
lahf
fsubl
and
aad
mov
test
pop
push
sub
loopne
dec
outsl
sub
je
repnz
les
fs
rcl
nop
mov
cmc
or
in
mov
mov
mov
shrl
push
std
jne
repnz
jb
adc
dec
mov
aas
adc
ret
inc
sahf
inc
lea
mov
mov
sub
shrl
add
pop
cmp
les
mov
loopne
jp
cmpsl
popa
mov
xchg
hlt
mov
xor
sbb
inc
lret
fsubrs
insb
adc
outsl
mov
dec
nop
lods
scas
sub
dec
out
movsl
sbb
or
push
cmp
pop
fistps
das
mov
sub
push
ljmp
mov
xchg
fprem1
icebp
jle
lock
fstl
lea
ja
sub
inc
roll
ret
adc
rcll
or
inc
aam
adc
xchg
mov
fnstsw
imul
popf
dec
fs
xor
ret
mov
inc
lods
in
mov
iret
adc
or
gs
and
movsl
out
jno
xchg
fs
push
fsubrl
lret
mov
jp
add
jo
adc
sub
jbe
jb
fwait
pop
dec
push
js
adc
jnp
mov
cli
xor
mov
inc
sbb
and
cld
scas
ret
xor
jg
dec
or
imul
cmpsl
add
adc
popa
imul
jle
pushf
lock
jae
mov
jnp
cmp
repz
sbb
sbb
stos
shll
jnp
mov
add
insb
dec
jo
fwait
jbe
inc
inc
sub
stc
xor
test
shr
lret
nop
xchg
and
and
pop
sbb
push
sbb
jge
shl
mov
pop
ljmp
in
nop
imul
es
scas
je
sub
call
arpl
cmc
pop
andl
negb
xor
jecxz
fidivl
sbb
out
mov
lret
out
stos
rcrb
mov
gs
xchg
xchg
sti
mov
pop
mov
jge
sbb
mov
pop
stc
xchg
lret
fisubrl
mov
push
rol
xor
cli
fldenv
push
orb
cmc
fimull
ret
js
push
lret
pop
fcomi
les
jns
addr16
fmul
pop
lret
adc
xchg
test
adc
mov
cmp
sbb
push
xchg
in
xchg
js
dec
ror
push
jmp
or
cmpsb
pop
rorl
inc
js
dec
pop
pop
lds
je
aad
mov
sbb
es
in
mov
in
jecxz
mov
pusha
ror
sub
pusha
sbb
nop
mov
in
jmp
int3
push
xchg
cmp
addr16
cmp
imul
hlt
insb
stc
sub
cmc
in
test
cmc
outsl
mov
push
and
pop
addr16
jge
mov
xor
test
pop
adc
imul
sbb
push
lock
push
outsb
mov
cmp
test
inc
cwtl
out
xor
aam
rorb
cmp
insl
sbb
mov
jns
jne
and
sbb
test
insb
add
std
mov
add
test
sbb
movsl
fs
clc
fistpll
lret
mov
mov
popf
xor
xor
cltd
mov
inc
aaa
notb
cmp
pop
cs
pop
mov
ja
icebp
inc
xorl
icebp
fistl
pop
mov
dec
div
mov
idiv
ljmp
sti
jns
popa
imul
adc
in
ds
sti
arpl
sub
xor
sbb
bswap
dec
fiaddl
ja
cs
adc
push
es
mov
adc
push
test
and
cmp
xchg
int
insb
cmp
arpl
aas
xor
insb
jecxz
jle
fmull
js
cmc
loop
roll
mov
test
push
cltd
mov
jae
sub
mov
xor
push
sub
jbe
jnp
rorb
dec
fimull
dec
lea
xor
enter
fsubrs
leave
scas
xchg
mov
jo
mov
pop
aas
fisttpll
sub
and
jno
leave
sub
ds
es
clc
insl
fwait
es
data16
mov
rcll
jae
mov
hlt
dec
ret
pop
stos
mov
and
fwait
pop
add
mov
int
scas
in
mov
jmp
mov
xchg
jae
add
sbb
fucomip
enter
stos
cltd
jmp
jae
jo
int3
mov
in
mov
cwtl
cmp
cs
sbb
ja
adc
ficompl
push
xlat
icebp
pop
cmc
dec
or
ja
imul
cmp
daa
sub
rcrl
lea
scas
mov
sub
pop
sub
fdivl
xorb
cmpsl
int3
sub
cmp
mov
imul
inc
movsb
mov
pop
fldt
pop
adc
jns
call
test
popa
fcompl
nop
sbb
push
into
cltd
int
jp
sub
push
nop
cwtl
out
std
sahf
out
cmpsb
int
cmp
jge
js
sbb
pop
lods
shl
jg
push
lcall
pop
jo
sbb
jg
lock
dec
sti
lcall
enter
out
push
sbb
dec
jle
mulb
mov
mov
cmp
cmp
jo
sub
out
addb
loopne
js
faddl
and
not
mov
xchg
and
push
jbe
fisttps
adc
and
into
xchg
xchg
push
stos
push
pop
and
add
sti
stos
sbb
or
dec
mov
cmp
shlb
mov
sbb
mov
inc
jp
and
test
cmp
pop
mov
and
mov
repnz
stos
cmp
sbb
into
cmp
adc
mov
popf
adc
insl
fstl
notl
push
mov
and
inc
insl
imul
xchg
into
jmp
fsqrt
push
cld
push
inc
cmp
fidivs
push
repz
pop
int3
int
xchg
xchg
push
test
icebp
fists
repnz
fcom
mov
fdivl
ret
out
pusha
adcb
push
xlat
aad
xchg
test
xchg
cmp
aam
pushf
xchg
into
xlat
cld
daa
ljmp
mov
inc
ret
ljmp
out
push
scas
in
mov
inc
cmp
mov
sti
movsb
aad
loop
xor
sbb
xchg
insl
stos
outsb
mov
mov
repnz
xchg
cmp
jp
pop
es
lret
lret
jle
pop
lea
mov
sbb
add
fucom
or
pop
sbb
cmp
dec
fistpll
jle
iret
in
fists
mov
add
lret
pop
xor
mov
sbb
sbb
mov
add
cld
aaa
push
out
std
fwait
js
jle
push
aad
xor
aaa
bound
xor
sub
mov
loopne
mov
mov
inc
sub
pop
addr16
cmp
mov
add
cmpsb
add
xor
clc
movsb
mov
inc
imul
add
outsb
xor
sub
push
lahf
in
push
rcr
and
scas
cmp
cmc
pop
mov
mov
enter
rcrb
xchg
sbb
rorb
cmp
loop
adc
sbb
bound
ss
dec
jae
push
dec
xchg
aam
mov
sar
add
and
andb
testb
icebp
hlt
jnp
lds
mov
out
jge
xchg
jo
addb
jle
cltd
orl
fnsave
scas
hlt
mov
rcrb
in
inc
cwtl
lret
test
add
aam
mov
gs
push
ficoml
stos
mov
cmp
add
jp
cmpb
lcall
ja
outsb
push
inc
test
leave
xlat
daa
mov
pop
jecxz
imul
std
sbb
out
add
add
mov
pop
mov
dec
dec
xor
das
gs
in
out
cmpsl
push
loope
cmp
sarl
int
insl
cmp
jge
stos
lret
mov
wrmsr
xor
popa
cmp
xor
nop
test
jp
ljmp
xchg
mov
testb
push
cs
jo
jg
in
and
mov
test
out
push
mov
test
outsl
negl
adc
cmpsb
addr16
jne
lret
repnz
jl
fldenv
fxch
lret
in
ret
xchg
sbb
std
fs
js
mov
xchg
repz
fucomi
jmp
jg
push
movsl
mov
hlt
add
loopne
cmp
pop
mov
sbb
dec
xchg
loop
lret
bnd
and
sbb
mov
cmc
mov
sub
mov
pushf
in
cmp
cmp
pop
aad
sub
sti
add
push
or
push
sbb
cs
cmp
mov
movsl
inc
and
notb
adc
sahf
inc
cmp
mov
or
movsl
jne
xor
push
xlat
scas
test
ret
or
and
shll
rcr
xchg
iret
or
cmp
call
js
lock
cld
and
sbbl
insl
in
sar
enter
mov
lds
sbb
inc
pushf
inc
cmp
add
xchg
arpl
pop
push
test
sub
jecxz
negb
xchg
in
adc
test
mov
dec
cmp
push
enter
pusha
mov
test
jmp
test
sub
hlt
jb
add
jmp
sub
push
jp
xchg
sar
xchg
push
cmp
aas
mov
jle
pop
ljmp
fbld
cli
and
fistpl
xchg
cli
push
lret
xchg
jno
scas
icebp
sub
lods
iret
stos
push
cmpsb
ljmp
xchg
mov
imul
cmp
loope
js
dec
xchg
dec
in
loopne
pop
ja
mov
or
inc
add
xchg
sbbl
mov
cli
sbb
mov
pushf
popf
popf
pop
cwtl
add
inc
xchg
and
test
lds
sub
repnz
aad
sti
aam
iret
pop
mov
pop
pop
adc
or
mov
cwtl
and
fcoml
repnz
jno
xchg
imul
mov
jmp
cmpsb
popa
xor
lret
push
xchg
cmp
or
mov
iret
lahf
out
rcll
pop
lcall
cs
js
push
dec
cmpsl
fists
fisubrl
rcrl
stc
cli
add
sbb
mov
addb
ret
icebp
pop
pop
repz
out
lods
push
popa
inc
out
das
xchg
fildll
cwtl
stos
adc
out
push
xlat
and
pop
or
das
jnp
mov
mov
sbb
inc
push
or
dec
mov
sbb
jae
xor
imul
mov
jns
or
jle
push
ret
scas
dec
hlt
sbb
jecxz
data16
dec
jne
lea
imul
cmpl
loop
jno
movsl
popf
jo
call
mov
subl
in
xor
xor
mov
sbbb
or
pop
or
data16
repnz
lret
inc
adc
lret
push
or
pop
cmpsb
push
sub
push
jo
or
stos
xchg
mov
int3
out
lcall
push
pop
xchg
pop
sbb
daa
out
xor
scas
mov
push
and
scas
or
daa
xor
sahf
or
push
lahf
and
push
int3
scas
pop
test
fsubrp
fsts
fcoml
jp
xchg
add
pop
xchg
inc
in
inc
sarl
and
enter
xchg
xchg
aad
lods
mov
add
data16
js
faddl
cmp
pop
test
jmp
paddsb
ja
sbb
xchg
mov
cmpsb
adc
and
adc
and
int3
push
and
cmp
or
scas
lcall
mulps
or
xchg
in
xchg
outsl
sub
hlt
xchg
rol
cltd
adc
shrb
in
add
adc
inc
fs
or
ret
cmc
rcr
hlt
xchg
fnstcw
xor
enter
cmp
pop
mov
lahf
adc
cmp
xor
and
xor
leave
dec
hlt
shrb
adc
xchg
inc
pop
arpl
or
sbb
rorl
js
int
movsl
lcall
push
xor
addl
nopl
loopne
jb
fsubr
mov
push
outsb
in
into
jo
sub
test
and
pop
dec
les
sbb
pushl
jge
xor
cmpsb
add
in
jnp
push
push
aad
push
sub
ds
nop
cmp
test
in
pop
lret
lods
jbe
lock
dec
pop
in
fldl
cwtl
repnz
mov
jge
mov
lcall
repz
insb
inc
pop
arpl
test
mov
xor
lahf
scas
daa
pop
push
push
jecxz
inc
pusha
xchg
push
pop
and
cmp
rolb
push
shrl
pop
test
out
jmp
rcrb
sub
lods
cwtl
add
stos
xchg
aam
xor
lods
cwtl
pop
dec
ret
and
push
popf
repz
fcompl
cltd
leave
scas
je
stc
xchg
lea
or
dec
jns
add
and
sahf
push
dec
sbb
sub
pop
iret
add
push
mov
and
xchg
sbb
cmp
dec
leave
xchg
hlt
in
dec
push
aaa
xor
ret
push
fcoml
push
gs
cs
mov
mov
pop
xchg
out
xor
inc
push
inc
mov
xchg
stc
ss
push
xadd
shr
out
jo
inc
out
xchg
das
push
jno
add
scas
out
stos
std
shlb
jmp
repnz
cmpsl
xchg
pop
xlat
push
pop
xorb
push
mov
out
das
push
xor
mov
aas
scas
and
mov
fld
dec
test
jge
mov
mov
out
jnp
push
sbb
xor
inc
fistpll
pop
xchg
lahf
jo
dec
ds
pop
mov
pusha
mov
daa
mov
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
ret
popa
test
mov
sbb
shrb
add
pop
dec
xor
pop
dec
jo
popa
dec
push
pop
dec
inc
dec
pop
imul
add
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
