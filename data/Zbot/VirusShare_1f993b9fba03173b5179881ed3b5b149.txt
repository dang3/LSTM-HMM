add
or
inc
add
and
push
inc
add
add
inc
add
and
inc
add
and
sub
add
adc
inc
add
add
add
add
add
add
inc
inc
add
or
gs
add
or
outsb
inc
add
or
inc
add
or
jb
add
add
jns
add
add
push
add
test
add
int3
xchg
add
add
lea
add
je
inc
add
add
nop
inc
add
add
xchg
inc
add
pop
xor
inc
add
and
inc
add
add
inc
add
and
es
add
and
inc
add
add
and
xor
add
cmp
add
rolb
add
lock
add
add
dec
test
add
mov
add
add
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
add
xor
mov
mov
shl
sub
shl
add
shl
add
xor
inc
inc
cmp
jl
movl
mov
mov
mov
cltd
idiv
mov
xor
mov
mov
shl
sub
shl
add
shl
add
xor
inc
inc
cmp
jl
movl
lea
mov
movl
movl
mov
call
mov
cmp
jle
cmp
add
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
cmp
jge
push
mov
lea
mov
rep
pop
mov
push
push
push
call
movl
add
lea
inc
add
cmp
jl
jmp
clc
nop
cld
add
shlb
leave
mov
lea
movl
mov
mov
movl
fldl
fdivl
movl
fstp
movl
mov
jmp
rol
clc
xchg
add
inc
fcoml
cwtl
add
add
pop
xor
stc
add
cmp
jle
cmp
mov
mov
xor
pop
pop
pop
mov
pop
ret
add
add
sub
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
push
lea
mov
call
test
jne
mov
jmp
cmpl
je
call
jmp
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
incl
mov
incl
push
push
call
add
push
call
pop
mov
test
je
mov
mov
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
subb
add
add
je
cmp
bound
pop
popa
insb
insb
outsl
arpl
add
add
add
add
add
add
in
add
mov
call
movw
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
add
add
nop
add
xchg
adc
add
fs
popa
insb
insb
outsl
arpl
sub
add
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
inc
add
add
jae
cmp
gs
gs
imul
add
push
mov
mov
pop
ret
nop
nop
push
mov
mov
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
add
mov
call
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
lea
incl
mov
incl
push
push
call
add
mov
pop
ret
push
call
pop
ret
push
mov
add
mov
call
movw
incl
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
subl
push
push
call
add
mov
mov
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
push
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
call
lea
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
call
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
lea
mov
and
andl
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
jmp
jmp
lea
push
call
pop
test
jne
call
push
call
pop
jmp
call
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
call
mov
add
mov
and
add
add
cmp
jae
mov
jmp
lea
and
mov
and
cmp
jne
call
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
jmp
call
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
call
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
call
test
je
mov
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
call
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
push
call
add
push
push
push
push
call
add
push
call
add
ret
nop
nop
nop
push
mov
add
mov
call
movw
push
call
incl
incl
incl
incl
movl
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
call
decl
decl
push
push
call
add
decl
decl
push
push
call
add
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
nop
nop
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
movsb
sub
add
push
add
cmp
bound
pop
arpl
je
add
inc
adc
add
add
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
pusha
sub
add
push
add
cmp
bound
pop
je
jo
imul
add
add
add
add
add
add
xor
incl
add
add
inc
add
add
add
add
add
inc
add
add
push
push
push
push
inc
dec
jne
gs
push
mov
push
mov
test
je
cmpl
je
xor
mov
push
call
testb
je
push
call
pop
pop
pop
ret
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
call
movw
push
call
movl
incl
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
add
mov
call
movl
cmpl
je
movw
mov
mov
mov
decl
push
mov
push
call
add
testb
je
mov
push
call
pop
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
cld
repnz
lea
mov
mov
repnz
not
sub
xchg
mov
shr
shr
cld
rep
mov
and
rep
mov
pop
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
rolb
push
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
add
push
push
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
cmp
jne
mov
jmp
cmpl
je
mov
testb
jne
cmpl
je
mov
testb
je
xor
jmp
push
call
pop
push
push
call
pop
mov
pop
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
sete
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
mov
push
push
push
mov
call
cmpl
mov
jne
lea
mov
push
push
push
push
push
push
push
mov
mov
lea
mov
push
push
call
add
test
je
testb
je
xor
jmp
sub
cmpl
je
push
push
push
call
add
mov
jmp
mov
mov
add
sar
and
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
test
jne
test
jne
push
call
pop
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
cmpl
jne
cmpl
je
mov
jmp
cmpl
jne
mov
jmp
mov
mov
movzbl
lea
push
call
pop
mov
push
inc
push
pushl
call
add
mov
movb
mov
jmp
pushl
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
or
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
dec
add
cmp
je
jo
pop
imul
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
lock
inc
add
add
jns
gs
imul
jae
add
dec
aaa
inc
add
add
add
add
add
in
push
mov
test
je
push
push
call
add
testb
je
push
call
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
push
call
pop
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
push
call
pop
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
mov
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
jmp
add
mov
sub
cmp
jb
mov
sub
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
call
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
push
call
cmpl
pop
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
push
call
pop
mov
pop
pop
pop
ret
nop
push
push
push
push
call
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
testb
je
mov
cmpl
je
push
movsbl
push
call
add
inc
jne
xor
jmp
decl
inc
cmpl
jne
mov
jmp
jmp
mov
test
je
cmp
jb
mov
mov
add
test
jl
test
jne
or
sub
mov
jmp
push
call
pop
test
je
xor
jmp
push
push
mov
push
call
mov
add
add
mov
mov
add
jmp
cmpl
je
cmpl
je
push
call
pop
test
je
xor
jmp
push
push
movsbl
push
call
add
cmp
je
cmp
jbe
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
push
mov
cmpl
jne
push
push
push
call
add
mov
mov
mov
push
call
pop
cmpl
je
call
pop
ret
nop
nop
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
push
push
call
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jl
cmp
jle
mov
call
mov
movsbl
mov
jmp
neg
cmp
jge
call
movl
call
mov
or
pop
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
neg
cmp
jle
push
lea
push
mov
push
call
add
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
mov
test
jne
test
jne
orw
or
jmp
orw
cmpl
je
cmpl
je
push
call
pop
test
je
or
jmp
mov
lea
neg
mov
push
push
mov
push
call
add
lea
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
push
lea
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
lea
call
pop
push
push
push
mov
push
push
push
call
add
mov
push
call
pop
mov
pop
pop
ret
nop
push
mov
push
push
call
add
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
sub
mov
cltd
idiv
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
push
mov
cmpl
jne
push
push
push
call
add
mov
sub
mov
cltd
idiv
mov
mov
push
call
pop
cmpl
je
call
pop
ret
push
mov
push
mov
mov
cmpl
je
mov
test
je
mov
cmp
ja
xor
push
mov
push
mov
push
push
call
add
test
jne
movl
xor
mov
pop
pop
ret
nop
nop
nop
push
mov
push
mov
cmpl
jl
push
call
pop
mov
test
je
mov
cmp
jbe
mov
mov
mov
incl
incl
pop
pop
ret
push
mov
push
mov
mov
mov
add
mov
and
cmp
jge
add
mov
jmp
add
mov
shr
dec
dec
test
jge
pop
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
lea
jmp
xor
mov
mov
inc
test
je
cmp
jne
mov
cmp
jne
inc
xor
mov
testb
je
cmpb
je
lea
push
push
call
add
mov
inc
lea
push
push
call
add
jmp
lea
xor
mov
xor
mov
or
movb
mov
mov
xor
mov
mov
mov
inc
cmp
jl
movsbl
cmp
jg
mov
add
xor
mov
xor
mov
cmp
ja
jmp
mov
add
add
dec
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
inc
add
push
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
dec
inc
add
dec
inc
add
pop
add
or
jmp
test
jg
or
jmp
test
jg
cmpb
je
mov
jmp
and
mov
jmp
or
mov
jmp
test
jg
test
jne
or
mov
jmp
addl
mov
cmp
mov
mov
jge
cmpl
jge
mov
neg
mov
or
jmp
mov
mov
mov
jmp
cmp
jne
mov
inc
mov
jmp
cmp
jge
mov
incl
jmp
add
cmp
jg
cmpl
mov
jne
movsbl
mov
jmp
mov
add
lea
movsbl
add
mov
jmp
cmp
jne
mov
add
lea
movsbl
add
mov
jmp
or
mov
jmp
or
mov
and
jmp
or
mov
and
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
inc
and
mov
jmp
movl
jmp
movl
jmp
movl
lea
mov
movb
xor
jmp
movl
mov
test
je
addl
mov
mov
mov
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
movswl
cltd
mov
mov
jmp
movzwl
xor
mov
mov
jmp
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
lea
mov
cmpl
jne
cmpl
jne
cmpl
jne
mov
movb
jmp
or
mov
push
push
mov
push
mov
push
pushl
pushl
call
add
cmpl
jl
mov
push
call
pop
mov
mov
mov
cmpb
jne
decl
jmp
cmpb
je
incl
decl
mov
mov
mov
mov
cmp
jle
mov
sub
mov
jmp
addl
mov
lea
mov
mov
push
mov
push
call
add
movb
and
lea
mov
jmp
test
jne
or
test
je
addl
mov
lea
mov
mov
movw
movl
mov
movl
jmp
addl
mov
lea
mov
xor
mov
movb
mov
mov
movl
jmp
test
jne
or
test
je
addl
mov
mov
mov
movl
cmpl
jne
movl
jmp
addl
mov
xor
mov
mov
mov
cmpl
jne
movl
cmpl
je
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
add
test
je
cmpw
jne
jmp
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
inc
test
je
cmpb
jne
jmp
test
je
mov
jmp
mov
mov
push
and
lea
push
push
mov
push
cmpl
jge
mov
jmp
mov
push
mov
push
call
add
mov
and
push
mov
push
call
add
mov
test
je
cmpl
jle
mov
push
call
pop
mov
mov
cmpb
jne
decl
mov
cmp
jle
mov
sub
mov
mov
cmpb
je
cmpb
je
mov
cmpb
je
decl
mov
mov
mov
cmpl
jle
decl
mov
push
call
pop
mov
test
je
cmp
jne
cmpl
jg
movl
jmp
cmp
je
cmp
jne
or
subl
subl
jns
xor
mov
mov
add
test
jne
mov
cmp
jle
lea
push
push
call
add
decl
mov
cmp
jg
test
je
lea
push
push
call
add
lea
push
push
call
add
cmpl
jle
mov
sub
mov
sub
mov
cmpb
je
mov
cmpb
je
mov
cmpb
jne
lea
push
mov
incl
mov
push
call
add
decl
decl
jmp
lea
push
push
call
add
mov
addl
test
jne
cmpl
je
mov
xor
mov
mov
mov
mov
jmp
mov
addl
mov
push
lea
push
call
add
mov
cmpl
jle
xor
mov
lea
lea
cmp
jge
mov
inc
mov
inc
incl
inc
cmp
jl
mov
addl
test
jg
lea
mov
mov
mov
cmpl
je
mov
sub
jmp
lea
push
mov
incl
mov
push
call
add
mov
addl
test
jne
jmp
lea
push
push
call
add
mov
addl
test
jg
jmp
addl
mov
test
mov
mov
je
mov
mov
mov
jmp
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
push
push
call
add
mov
incl
mov
test
jne
lea
push
call
cmpl
pop
je
or
jmp
mov
pop
pop
pop
mov
pop
ret
push
push
call
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
call
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
test
je
cmpb
je
test
jne
xor
pop
ret
xor
mov
testb
je
cmp
jl
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
test
je
test
jne
xor
jmp
cmpb
jne
test
je
movw
xor
jmp
mov
cmpl
je
test
je
xor
mov
mov
mov
jmp
xor
mov
testb
je
cmp
jl
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
cmp
jl
cmpb
jne
or
jmp
mov
jmp
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
or
jmp
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
test
jne
xor
pop
pop
ret
mov
cmpl
je
cmpw
jbe
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
xor
lea
mov
push
push
push
push
lea
mov
push
push
push
mov
push
call
test
je
cmpl
je
or
pop
pop
ret
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
xor
test
je
cmpl
jne
xor
jmp
test
je
mov
cmpl
je
cmp
jae
xor
mov
mov
cmpb
jne
mov
jmp
inc
add
cmp
jb
mov
jmp
mov
mov
push
push
push
push
push
mov
push
call
mov
test
je
mov
dec
jmp
call
cmp
je
or
jmp
mov
mov
jmp
xor
mov
testb
je
inc
inc
mov
add
test
je
cmpb
jne
sub
mov
mov
push
push
mov
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
jmp
jmp
mov
cmpl
je
push
call
pop
jmp
push
push
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
dec
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
mov
lea
mov
jmp
add
dec
je
cmpw
jne
test
je
cmpw
jne
sub
sar
jns
adc
inc
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
push
mov
add
xor
push
push
mov
xor
cmpl
je
cmpl
jne
xor
jmp
cmpl
je
mov
cmpl
je
cmp
jae
mov
cmpw
jbe
or
jmp
mov
mov
mov
mov
mov
addl
cmpw
jne
mov
jmp
inc
cmp
jb
mov
jmp
lea
push
push
mov
push
mov
mov
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
jne
mov
dec
jmp
cmpl
jne
call
cmp
je
or
jmp
cmp
jae
lea
lea
push
push
push
push
push
mov
mov
push
push
mov
push
call
mov
cmpl
je
cmpl
je
or
jmp
mov
add
cmp
jbe
mov
jmp
xor
mov
lea
lea
cmp
jge
mov
mov
test
jne
mov
jmp
inc
inc
inc
inc
cmp
jl
addl
cmp
jb
mov
jmp
mov
cmpl
je
mov
push
call
pop
jmp
lea
mov
push
push
push
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
je
or
jmp
mov
dec
pop
pop
mov
pop
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
xor
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xchg
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
pop
pop
pop
ret
div
xchg
xor
jmp
cmp
jl
cmp
jl
xor
xor
ret
mov
shl
xor
ret
shld
shl
ret
cmp
jl
cmp
jl
sar
mov
ret
mov
cltd
sar
ret
shrd
sar
ret
cmp
jl
cmp
jl
xor
xor
ret
mov
xor
shr
ret
shrd
shr
ret
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
jmp
jmp
jmp
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
cmp
jl
cmp
jg
cmpl
jne
cmpl
jae
jmp
jge
cmpb
je
movb
inc
mov
mov
neg
adc
mov
neg
mov
lea
mov
cltd
push
push
mov
mov
call
mov
mov
cltd
push
push
mov
mov
inc
call
mov
mov
cmp
jne
cmp
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
call
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
push
call
mov
call
mov
push
add
call
mov
pop
pop
ret
nop
nop
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
call
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
call
call
call
mov
push
call
pop
call
pop
pop
ret
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
push
push
call
add
ret
nop
nop
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
call
mov
test
je
mov
test
jne
mov
jmp
xor
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
call
mov
incb
inc
add
mov
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
cmpb
mov
jne
movl
push
push
call
movb
push
call
pop
mov
inc
jne
call
movl
or
jmp
cmp
je
cmp
jne
mov
jmp
call
mov
test
jne
or
jmp
mov
test
jne
push
call
pop
mov
test
jne
call
movl
or
jmp
xor
mov
xor
inc
mov
add
cmp
jl
mov
mov
mov
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
cmp
je
cmp
jne
mov
jmp
call
mov
test
je
mov
test
jne
mov
jmp
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
mov
ret
call
mov
ret
push
add
xor
movl
lea
push
call
cmpl
jne
mov
push
lea
push
lea
push
call
call
add
mov
add
pop
ret
nop
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
call
mov
test
jne
call
mov
call
mov
mov
pop
ret
nop
nop
push
mov
push
call
pop
mov
test
je
mov
mov
jmp
push
call
pop
mov
test
je
push
push
push
call
add
test
je
movl
xor
xor
mov
xor
mov
xor
mov
mov
cmpl
jne
mov
push
call
pop
mov
test
jne
push
call
pop
xor
jmp
mov
push
push
mov
push
call
add
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
mov
push
call
pop
mov
mov
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
push
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
mov
push
call
pop
mov
mov
test
jne
pop
pop
ret
nop
push
mov
push
call
cmpl
jl
mov
push
call
pop
mov
shl
lea
add
push
call
mov
mov
shl
lea
add
mov
push
incl
call
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
mov
mov
rep
movsb
mov
push
lea
push
call
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
call
movl
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
mov
inc
add
lahf
inc
add
mov
inc
add
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
int3
int3
inc
outsl
jb
popa
outsb
and
sub
sub
jns
imul
xor
and
jb
popa
outsb
and
jb
outsl
jb
je
outsl
outsb
add
add
add
inc
add
adc
ficoms
inc
add
adc
cmp
add
add
add
add
lret
in
inc
add
flds
aam
inc
add
inc
add
inc
add
add
add
inc
add
nop
out
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
in
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
lea
jmp
bts
xchg
bsr
push
add
add
or
stos
rolb
mov
jmp
bts
xchg
bsr
sub
add
or
or
stos
rolb
mov
mov
call
pop
mov
movb
movb
movb
xor
inc
mov
add
add
mov
add
mov
dec
mov
cmp
jne
mov
cmp
jne
mov
inc
mov
cmp
jne
mov
add
add
mov
mov
test
jl
inc
lea
mov
mov
inc
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
mov
test
jl
inc
lea
xor
mov
xor
mov
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
lea
call
pop
pop
pop
mov
pop
ret
lea
pop
sub
jbe
add
rclb
add
add
add
jbe
add
add
add
xchg
push
push
xchg
adc
xchg
test
test
mov
mov
mov
mov
mov
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
adc
pop
xlat
loop
rcl
pop
xchg
cs
xchg
cs
xchg
ficomps
pop
pop
xchg
pop
pop
xchg
ficomps
push
pop
xchg
push
frstor
notb
scas
call
sub
inc
dec
and
sub
fwait
cli
pop
sub
sub
shrb
sub
cs
mov
pop
mov
pop
leave
pop
leave
pop
mov
in
and
bound
out
rcll
pop
subb
scas
pop
xchg
xchg
xchg
jbe
xchg
insl
xchg
adc
insb
xchg
adc
outsl
sbbb
pop
xchg
lret
sub
mov
pop
test
shrl
pop
add
xor
shrl
pop
test
roll
pop
cwtl
shr
lahf
outsl
cmpsl
nop
pop
cwtl
aad
lahf
insb
cmpsl
call
insl
cmpsl
loope
xchg
xor
add
rcrl
roll
mov
fdivs
jbe
or
add
sbb
xor
roll
pop
xchg
xchg
call
cmp
lcall
push
mov
sub
mov
sub
mov
sub
mov
sub
mov
adc
mov
adc
mov
adc
mov
pop
push
xchg
add
xchg
sub
imulb
shll
xchg
sub
push
xchg
sub
push
xchg
sub
push
xchg
sub
push
xchg
sub
push
lcall
fwait
sub
push
cwtl
sub
push
cltd
sub
push
sahf
sub
push
lahf
sub
push
pushf
sub
push
popf
sub
push
subb
subl
subb
subl
sub
sub
push
in
sub
ljmp
jmp
sub
call
adc
jmp
adc
out
sub
push
out
sub
push
in
sub
push
in
sub
push
xchg
sub
push
xchg
sub
push
nop
sub
push
js
sub
jns
sub
jle
sub
jg
sub
jl
sub
jge
sub
bound
arpl
pusha
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
cmc
sub
push
cli
sub
push
sti
sub
push
clc
sub
push
stc
sub
push
sub
push
ljmp
push
cld
sub
push
std
sub
push
loop
sub
jecxz
sub
loopne
sub
loope
sub
out
sub
lret
sub
push
enter
mov
sub
into
sub
push
iret
sub
push
int3
sub
push
int
sub
repnz
push
repz
push
lock
push
icebp
sub
push
imulb
push
imull
push
fisubrs
push
fildll
push
fsubrl
push
push
ret
sub
sub
push
shrb
shrl
sub
push
sub
push
les
push
lds
push
lret
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
push
js
sub
add
xchg
push
pop
push
push
sub
add
xchg
sbb
hlt
sub
sub
pop
push
lret
sub
sub
pop
push
xchg
sub
sub
push
out
sub
add
xchg
ds
push
or
sub
add
xchg
push
pop
push
js
sub
add
xchg
push
push
sub
push
pop
and
sub
push
pop
and
sub
push
inc
and
sub
inc
jbe
sub
pop
and
sub
xor
sub
sub
sub
inc
je
sub
inc
and
sub
ss
sub
sub
xchg
cmpsl
ja
adc
sub
push
lods
and
sub
push
jo
sub
test
sub
pop
push
je
sub
lods
and
sub
jecxz,pn
push
pop
cs
push
dec
sub
sub
mov
dec
je
sub
shlb
mov
cmp
cmp
pop
push
dec
sub
sub
mov
dec
je
sub
rcl
rcl
adc
sub
pop
push
cmpsb
sub
mov
sub
test
sub
push
mov
sub
xchg
pop
xchg
inc
xchg
push
sub
fldcw
rcl
shrb
sub
cmc
rcl
movsb
addr16
rcl
pop
xchg
push
mov
pop
add
rcl
rcl
mov
es
pop
nop
adc
pop
repz
pop
loope
adc
sbb
cltd
pop
leave
call
pop
lret
call
pop
or
pop
cmpsl
or
sub
sub
rcrb
push
sub
scas
loopne
lahf
inc
rcrl
pop
fistpl
rcrb
rcr
jge
push
xor
or
rcrb
rcr
jge
loope
pop
into
shl
sbb
rcrb
sbb
xchg
int3
pop
xchg
and
jnp
sub
pop
aaa
adc
nop
repz
rcl
pop
shrb
xchg
adc
sub
adcl
int3
rolb
cs
lret
mov
adc
dec
push
xchg
jg
sub
jmp
mov
sub
je
sub
and
sub
push
sti
sub
sub
mov
cmpsl
push
adc
sub
sub
push
adc
sub
je
ja
ret
fisubrs
sub
pop
sub
sub
and
mov
push
sub
scas
mov
lret
adc
push
sub
sub
push
sub
mov
pop
jecxz
mov
lcall
mov
adcb
adc
cmpsl
sub
push
sub
adc
add
imul
lahf
xor
ficoms
sub
adc
sub
mov
sub
repnz
ss
sub
ficomps
sub
sub
icebp
sub
sub
or
and
adc
push
sub
adc
pop
lods
adc
sub
sub
and
imulb
pop
adc
scas
adc
mov
shlb
push
mov
adcb
pop
shrb
xchg
pop
xchg
call
adc
mov
shlb
mov
push
pop
adc
push
sub
sub
fmull
sub
lcall
lahf
and
pop
lock
adc
mov
pop
sub
sub
adc
sub
xorl
sub
sub
inc
stos
sub
mov
lahf
and
mov
adc
mov
add
lcall
adc
call
loope
or
xchg
adc
ljmp
and
sub
jbe
cmpsl
sub
jg
push
imull
sub
call
adc
adc
adcb
cmpsl
push
ret
sub
sub
sub
sub
jge
xchg
stc
and
and
sub
test
pop
xchg
sub
xchg
mov
sub
pop
push
sub
adc
adc
sbb
sub
sub
leave
push
xchg
push
incl
jb
sub
and
sub
sub
mov
adc
fistl
lret
sub
sub
sub
mov
shrb
and
sub
lcall
sub
sub
shrb
mov
mov
xchg
sub
xchg
pop
cmpb
or
sub
sub
sub
push
sub
sub
sub
cmp
subb
xchg
fistl
sub
adc
sub
test
xchg
loope
sub
xchg
fwait
ss
sub
push
sub
call
cli
sub
shrl
push
mov
adc
sub
sub
sub
add
mov
inc
add
mov
inc
add
gs
jae
jb
add
jb
ja
insb
outsl
arpl
add
arpl
jae
popa
jb
and
outsb
jae
jb
arpl
outsb
and
popa
outsb
outsb
imul
xchg
adc
add
add
cld
incl
add
add
add
add
incl
add
add
mov
inc
add
add
add
incl
add
add
mov
inc
add
inc
add
adc
add
adc
inc
add
add
cld
incl
add
add
add
add
incl
add
add
add
add
or
add
fdivr
incl
add
add
adc
add
add
add
add
add
add
add
incl
add
add
add
fdivr
incl
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
rcrb
add
sbb
lock
adc
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
mov
inc
add
inc
add
gs
je
outsb
and
popa
jo
insb
outsl
arpl
add
daa
inc
add
add
add
jecxz
add
inc
add
add
add
jecxz
add
add
clc
jecxz
add
incl
add
add
mov
add
fdivr
incl
add
add
incl
add
add
call
add
add
add
pusha
sub
nop
adc
inc
add
inc
add
inc
add
mov
inc
add
add
add
daa
inc
add
add
add
jecxz
add
incl
add
add
add
add
add
incl
add
add
add
add
and
insl
gs
arpl
je
outsl
outsb
and
outsl
ja
add
and
arpl
je
outsl
outsb
and
outsl
ja
add
and
insb
outsl
arpl
gs
gs
imul
outsl
ja
add
jb
jb
jb
jae
fs
add
add
sub
inc
add
add
add
incl
add
add
rolb
add
add
add
add
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
fdivr
lcall
add
add
add
add
aaa
inc
add
add
add
je
inc
add
incl
add
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
cmp
fdivr
incl
add
add
add
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
cmp
or
add
or
add
add
add
add
add
add
xor
add
add
add
pusha
add
add
add
inc
add
cmp
inc
add
add
add
insb
outsl
arpl
imul
fs
and
imul
popa
bound
arpl
popa
je
outsb
and
outsb
fs
and
imul
insb
outsl
arpl
add
outsb
fs
gs
arpl
arpl
popa
je
outsb
and
outsl
bound
and
outsb
fs
and
imul
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int
add
int
add
inc
add
inc
add
inc
add
inc
add
int
add
int
add
int
add
int
add
int
add
into
inc
add
into
inc
add
into
inc
add
add
inc
add
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
inc
add
rolb
and
inc
add
add
add
jb
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
add
arpl
popa
je
outsb
and
outsl
bound
and
jb
popa
insl
and
imul
insb
insb
outsl
arpl
imul
gs
insl
and
imul
popa
bound
arpl
popa
je
outsb
and
jb
popa
insl
and
imul
je
insl
pop
insb
outsl
arpl
add
jb
popa
insl
jae
arpl
add
outsb
jne
insb
sub
add
add
jne
insb
add
add
add
push
push
add
pop
push
push
push
push
add
push
add
or
add
push
push
push
push
push
push
push
push
adc
nopl
or
push
push
pop
push
sbb
push
push
push
adc
push
push
push
or
push
push
push
push
push
push
adc
invd
or
push
push
push
adc
push
push
push
adc
or
push
or
push
push
push
nop
nop
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aam
add
add
add
aam
add
aam
add
aam
add
add
scas
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
inc
add
aad
add
aad
add
aad
add
aad
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aad
add
add
add
roll
roll
add
add
jl
inc
add
aad
add
inc
add
add
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
sub
inc
add
inc
add
pop
inc
add
pop
inc
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
inc
pop
inc
add
add
inc
add
inc
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
cmp
add
add
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
cmpsb
fbld
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
cmp
inc
add
inc
add
inc
add
addb
addb
addb
test
add
add
dec
outsl
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
jg
add
inc
add
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
jb
popa
je
outsb
and
jbe
jb
outsb
insl
outsb
je
insb
outsl
arpl
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
add
add
arpl
popa
je
outsb
and
gs
je
insb
outsl
arpl
add
add
gs
je
outsb
and
jb
popa
and
popa
and
imul
add
insl
popa
jo
outsl
jb
and
jb
jb
or
inc
add
incl
add
add
inc
add
add
xchg
cwtl
inc
add
incl
add
add
inc
add
add
std
mov
add
adc
add
add
incl
add
add
add
or
add
xchg
fildl
or
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
xor
push
inc
add
sub
add
add
enter
xor
inc
add
or
add
inc
add
sbb
add
add
pop
inc
add
inc
add
jle
add
xchg
inc
add
movsb
inc
add
scas
inc
add
mov
inc
add
loop
add
cli
inc
add
or
add
inc
add
sub
add
inc
add
push
inc
add
pop
inc
add
jo
add
addb
xchg
inc
add
movsb
inc
add
mov
add
les
add
inc
add
ljmp
add
inc
add
push
inc
add
ss
add
inc
inc
add
pop
inc
add
outsb
inc
add
jp
add
xchg
inc
add
movsb
inc
add
mov
add
movb
inc
add
faddl
ljmp
add
add
xor
add
add
pop
inc
add
add
add
dec
inc
add
pop
inc
add
inc
add
jle
add
xchg
inc
add
movsb
inc
add
scas
inc
add
mov
inc
add
loop
add
cli
inc
add
or
add
inc
add
sub
add
inc
add
push
inc
add
pop
inc
add
jo
add
addb
xchg
inc
add
movsb
inc
add
mov
add
les
add
inc
add
ljmp
add
inc
add
push
inc
add
ss
add
inc
inc
add
pop
inc
add
outsb
inc
add
jp
add
xchg
inc
add
movsb
inc
add
mov
add
movb
inc
add
faddl
ljmp
add
add
xor
add
add
pop
inc
add
add
add
fs
add
jp
add
mov
add
inc
add
test
add
mov
add
add
add
add
mov
add
inc
add
test
add
mov
add
add
inc
add
loopne
add
out
inc
add
add
add
int3
inc
add
loopne
add
out
inc
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
gs
imul
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
imul
add
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
push
popa
imul
jo
imul
push
je
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jne
jb
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
imul
add
inc
fs
outsl
outsb
je
gs
jne
arpl
js
add
add
inc
fs
outsl
outsb
je
gs
jne
arpl
add
add
inc
outsb
insb
gs
jb
add
add
inc
jb
add
add
arpl
add
inc
outsl
jo
dec
gs
inc
imul
jb
popa
je
inc
outsl
insb
outsl
jb
jo
arpl
add
add
jne
push
push
push
imul
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
add
cmp
add
add
add
add
add
add
add
sub
add
push
add
cmp
add
mov
add
add
pop
push
add
add
add
push
jb
push
arpl
popa
cs
add
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
nop
add
add
pop
add
in
add
add
add
aam
add
adc
add
in
add
add
add
push
add
add
dec
add
dec
add
add
inc
call
ret
sbb
xchg
shlb
jp
out
leave
pop
push
fsubs
leave
mov
mov
cmp
sub
fsubrs
testb
shll
repz
sbb
ffreep
pop
leave
lcall
bound
enter
inc
sbb
shlb
shrl
pushf
push
loopne
push
cmp
pop
andl
or
sbb
push
jmp
jns
addb
das
sbb
loopne
test
out
push
out
sub
and
sbb
jno
orb
cmp
int
xor
add
icebp
ja
fisttps
outsb
inc
pop
popa
aad
repnz
scas
addl
out
jo
aas
lret
jmp
cltd
xor
cmp
sub
mov
std
pop
mov
pop
pop
scas
jl
add
sub
and
push
dec
push
jg
jmp
and
or
out
dec
rol
in
pop
out
xor
push
fxch
out
mov
push
pop
aad
test
lcall
jmp
data16
dec
icebp
in
mov
fs
pop
push
sbb
das
repz
xchg
popf
push
lcall
xchg
push
jmp
xor
jge
and
in
mov
jae
push
or
in
aad
dec
jno
sub
sub
add
stos
gs
add
inc
inc
repnz
sbb
jg
mov
insl
es
lock
mov
xor
popa
push
push
lock
jbe
add
xchg
or
aas
xorl
add
enter
movsl
xorl
jno
movsb
arpl
mov
jae
xor
aad
cld
pop
sub
sbb
mov
and
repnz
shlb
ds
jmp
mov
es
dec
shlb
cmp
loopne
in
imul
aam
fcoms
or
mov
sarb
clc
pop
mov
jns
aaa
ljmp
gs
fbld
mov
arpl
insl
jne
sub
and
mov
cmpsl
pop
pop
outsl
lret
loop
fucom
cmpsl
adc
stc
mov
in
mov
cmp
fwait
push
inc
adc
aad
cmp
jns
pop
pop
and
ret
rcrl
mov
jno
and
inc
int
or
test
sub
jmp
add
movsl
mov
stc
orl
and
cli
int
sbb
adc
pop
cmc
mov
xchg
add
sub
out
sarb
jmp
inc
add
xchg
dec
lret
inc
pop
jmp
xchg
lods
mov
pop
sub
xor
jb
xor
xchg
icebp
cwtl
lcall
fnstenv
js
scas
or
xor
sbbl
dec
clc
shll
inc
ljmp
cmp
inc
insb
pop
add
std
icebp
pop
mov
sbb
repz
and
mov
jl
ss
add
popf
test
push
jp
int3
inc
popf
mull
int
rsm
lcall
pop
fs
or
sbb
and
test
es
data16
cmp
xchg
push
insl
add
fiaddl
push
cmp
popf
fistpll
xchg
xorl
popf
ror
jbe
out
xchg
or
and
adc
or
fisttpll
adc
dec
inc
cld
rorl
push
cmp
int
pop
cli
lds
popf
mov
push
dec
orl
mov
or
movsb
arpl
mov
imul
sub
addr16
shrl
or
and
sub
mov
sub
std
xchg
lods
pop
xchg
inc
push
incb
notb
push
sbb
push
adc
std
rcrl
dec
fidivl
mov
orb
outsl
lret
mov
mov
jle
push
xchg
cmp
inc
scas
and
cmp
into
fadd
hlt
adc
fdivrl
cli
lock
pop
and
push
lret
adc
mov
rcrb
push
inc
insw
dec
xlat
pusha
test
sbb
sub
inc
into
shl
out
xchg
or
int
insb
xor
in
mov
jmp
pushf
inc
scas
jae
push
mov
hlt
sbb
jae
aas
pop
fs
xchg
mov
jne
aas
add
jmp
test
mov
dec
lret
mov
lods
je
pop
sti
adc
lods
push
rol
push
popf
sbb
xor
jge
fnstenv
sti
aaa
shll
xchg
cmp
sbb
fldcw
dec
mov
add
push
push
dec
iret
push
and
xchg
icebp
pop
inc
jecxz
mov
sbb
cs
sub
adc
mov
std
add
aaa
jmp
sahf
jp
arpl
sbb
mov
add
and
leave
inc
fcmovne
daa
cmp
outsb
mov
inc
pusha
test
jmp
aad
sub
push
pop
shlb
add
loope
imul
inc
add
xor
aas
inc
sub
sub
mov
and
in
cmp
pop
pop
popf
jo
aas
ror
cltd
out
xor
cmp
and
xor
pop
mov
pop
pop
mov
sub
xor
push
dec
inc
jg
std
jbe
lods
in
inc
lods
or
std
dec
rol
in
dec
out
xor
push
frndint
out
mov
pop
adc
sub
nop
pop
xor
mov
stos
pop
mov
sub
sub
pushf
data16
mov
or
cs
aad
mov
xchg
mov
or
repz
xchg
and
lds
adc
mov
jp
cmc
xor
adc
push
mov
pop
lcall
sbb
add
mov
int
int3
out
into
mov
mov
cmp
lods
jbe
pop
stc
adc
fistl
push
sarb
inc
jbe
inc
popf
sti
xchg
test
and
dec
mov
xor
jecxz
xchg
add
imul
ljmp
pop
adc
lret
pop
dec
pop
hlt
jne
sbb
cmc
jb
pop
mov
jae
movsb
clc
xlat
dec
into
lcall
xlat
ret
leave
or
sub
ja
and
jmp
xor
dec
push
bound
popa
lea
xchg
test
push
insb
js
mov
das
repz
xor
pop
mov
or
mov
or
popf
lahf
and
cmc
repz
dec
sahf
push
push
add
adc
int3
dec
dec
add
popf
mov
jnp
push
stos
gs
add
inc
inc
repnz
sbb
jg
mov
push
and
lret
scas
lret
cli
movsb
jo
dec
pop
or
scas
adc
sbb
or
add
jae
xor
in
lcall
shlb
scas
jno
dec
loopne
subl
jbe
mov
pop
xchg
fwait
mov
imul
cmp
stc
sbb
add
xor
or
movl
mov
adc
addr16
jns
aad
ss
insl
and
popa
sbb
cwtl
sub
inc
inc
mov
aad
xchg
das
push
jne
dec
insb
lds
js
bound
sarl
rcr
and
sbb
xor
call
mov
or
push
mov
scas
test
jbe
cmp
ja
pmaxsw
mov
hlt
adc
lahf
pop
stos
fdivl
adc
pop
in
pop
movsb
mov
rol
adc
stos
mov
insb
outsb
ffreep
je
or
and
lahf
aaa
je
loope
std
daa
test
dec
sbb
jle
cmp
out
add
cmp
cmpsl
cmp
fisubs
movsl
add
iret
in
jle
jae
loopne
adc
push
rcrl
jge
or
imul
push
jecxz
cld
mov
add
sub
repz
insb
dec
outsl
fadd
rcrb
lret
data16
xchg
scas
movsl
fnstenv
push
mov
lahf
icebp
loope
xchg
jo
cmp
cwtl
sub
push
clc
lock
scas
movsb
xchg
popl
lahf
into
cld
incl
pusha
sbb
out
jp
mov
ss
cmpsl
sub
fnsave
or
or
jl
cltd
sbb
mov
xchg
xchg
orb
icebp
cltd
dec
out
cmp
pop
mov
dec
scas
inc
popf
leave
inc
inc
pop
sub
pusha
insb
mov
push
mov
aas
test
mov
pop
cmp
jecxz
dec
loop
xchg
sub
js
dec
out
out
push
stc
mov
rcl
fidivrs
cwtl
cmp
pop
mov
xlat
nop
cs
jae
pop
push
lahf
jecxz
and
inc
pop
xor
inc
mov
mov
push
mov
pop
mov
fstl
out
mov
xor
cmp
pop
adc
mov
xor
repz
xor
sub
fstps
adc
clc
cmc
test
inc
ljmp
mov
sbb
push
es
xor
in
xor
scas
sub
les
or
repz
les
int
pop
clc
outsb
ret
jp
and
xor
hlt
adc
add
sbb
filds
in
lods
mov
pop
jge
mov
xchg
sub
push
in
mov
add
cld
cmp
popa
dec
sub
call
cmp
adc
rol
bound
lahf
mov
mov
mov
cmc
sub
xchg
and
cmp
daa
or
dec
out
out
pop
dec
adc
xor
cmp
mov
xchg
stos
mov
mov
imul
fnstenv
dec
pop
mov
add
out
xchg
lret
fs
fldenv
adc
rcrl
jb
jb
push
lods
or
xor
mov
movsl
dec
enter
push
out
xchg
sub
cmp
in
add
mov
mov
aaa
mov
imul
mov
pop
in
insb
sbb
push
test
pop
mov
sub
es
add
mov
frstor
ds
mov
test
pop
arpl
shl
push
out
push
mov
xchg
mov
jns
popa
ljmp
les
lret
jl
push
popf
sub
lea
pop
jne
bound
sti
and
inc
push
in
pop
inc
mov
push
notb
out
rcrb
inc
adc
sbb
stc
je
push
xlat
movsb
xchg
fwait
cmpsb
pop
xor
iret
mov
mov
cmpsb
iret
xor
out
mov
imul
sub
adc
into
xorb
adc
adc
lods
lods
xchg
outsl
mov
pushf
setne
push
pushl
stc
movsl
mov
aaa
add
or
int3
push
out
pop
push
fsubrs
mov
lahf
lds
loope
aas
fsubs
cmp
inc
jge
cmp
or
and
pop
adcb
push
stos
stc
pop
das
mov
fmuls
dec
ja
int
mov
or
sub
cwtl
mov
bound
ss
lret
hlt
mov
cs
add
push
mov
sub
cmp
and
jmp
into
mov
fwait
jo
nop
fcmovnu
and
jo
mov
icebp
fwait
xor
mov
sahf
out
xchg
les
push
add
in
mov
int
das
mov
or
lea
mov
inc
addr16
lods
mov
outsb
test
push
push
adc
pop
out
or
add
popf
dec
daa
call
fnstcw
mov
js
lret
pop
cmpsb
cmpsb
xor
nop
rolb
lods
mov
pushf
loope
in
inc
ljmp
lock
test
mulps
dec
into
dec
jo
pop
cmp
mov
adc
arpl
mov
cmpsl
into
lcall
sub
xlat
xchg
lcall
xchg
mov
shr
mov
rcr
mov
loope
dec
and
rorw
jmp
clc
clc
dec
xchg
es
gs
outsl
popf
xor
icebp
and
fisubs
stos
and
repz
mov
xchg
mov
dec
mov
or
mov
push
out
aam
cltd
addr16
mov
fnstcw
data16
cwtl
lods
jne
inc
int
or
lods
add
pop
mov
ret
xchg
or
mov
jecxz
shrb
or
out
xor
stos
xchg
xor
mov
mov
dec
mov
scas
testb
sti
das
and
mov
xor
jl
fstps
mov
aam
test
testb
stos
inc
adc
fwait
push
push
xor
mov
xor
push
sub
int3
movsl
cmp
xor
gs
rclb
add
jl
nop
lahf
sbb
jnp
dec
sub
repz
sub
add
ret
cmp
xor
out
jae
scas
xor
int3
pop
test
push
cs
js
fldt
std
lret
icebp
push
aad
popf
sahf
mov
push
jo
jno
mov
cmp
xchg
int
jp
in
std
sarb
sahf
mov
std
mov
sub
icebp
mov
loope
mov
add
mov
mov
pop
jecxz
xchg
adc
jle
fmull
mov
filds
push
loop
scas
or
mov
fisttps
sub
jns
xor
xchg
lock
mov
xchg
jmp
andl
mov
push
mov
int3
sbb
push
mov
push
cld
inc
or
cmp
lcall
xor
mov
in
and
lret
jecxz
cmp
sti
sbb
lret
cld
pop
and
lds
pop
daa
es
xchg
jne
mov
popf
into
or
jge
ret
xchg
lods
inc
out
or
test
push
push
inc
sub
jmp
push
dec
adc
xchg
hlt
inc
adc
cltd
dec
popa
bound
loop
scas
daa
push
fstpt
push
adc
jge
loopne
stos
test
mov
in
or
sub
cmpb
jo
mov
sbb
adc
adc
rcll
xchg
mov
insb
ret
leave
pop
or
xor
xor
mov
divl
sbb
adc
arpl
jg
repz
out
jg
mov
jns
mov
addl
lods
jb
scas
pop
in
insl
emms
ret
fcoms
mov
jo
pop
adc
ss
insb
out
stos
hlt
into
or
lds
iret
es
imul
pop
jb
jb
jp
ds
test
push
xor
and
bound
enter
xor
push
mov
inc
sub
or
test
ds
xor
in
lret
call
mov
mov
aad
das
les
xchg
cli
pop
out
push
jl
aas
mov
fidivs
push
cwtl
inc
inc
imul
cmp
into
dec
pop
stos
mov
adc
enter
movsb
mov
scas
enter
pop
cmp
push
or
or
out
push
push
dec
inc
repnz
sub
pop
test
mov
fmuls
rclb
sub
jns
int
xor
lcall
test
lds
mov
xchg
fsubs
and
ficoml
sbb
mov
ds
lret
fyl2x
push
test
sbb
xor
mov
sbb
xor
xor
inc
leave
mov
adc
or
loop
pop
and
add
cmpsb
push
fnsave
insb
push
es
loopne
adc
cmp
sub
sti
dec
sbb
stos
xor
mov
cmc
mov
mov
and
ds
fistps
xor
mov
mov
push
out
sbb
inc
push
jo
fstpl
imul
cli
std
cmp
xchg
mov
push
call
inc
outsl
cmp
push
jbe
addl
fists
daa
jns
xor
adc
push
mov
lea
push
mov
mov
sbb
add
add
enter
xchg
imul
adc
push
call
push
in
mov
lock
mov
xchg
subb
jp
sbb
xchg
loop
add
out
xor
push
jb
sub
pushl
xor
push
mov
push
clc
dec
mov
insb
mov
fwait
fs
mov
xchg
ret
jne
imul
sub
rorb
in
and
das
mov
sti
inc
mov
inc
xor
and
adc
or
or
jb
push
aad
fistl
dec
mov
mov
cmpsl
push
jmp
ftst
mov
dec
jno
fwait
and
xchg
xchg
xchg
xchg
push
or
aas
shl
fwait
inc
pop
int
sbb
pop
xchg
mov
sub
popa
lods
or
leave
iret
cwtl
out
sbbl
jp
pushf
inc
mov
pusha
loope
lret
lret
sub
cmp
mov
or
jnp
int3
loope
ret
sub
mov
insl
dec
jbe
arpl
fistpl
loope
cmp
mov
push
cmp
adcl
sub
ret
das
push
clc
cmp
sbb
iret
outsl
mov
sbb
mov
push
jbe
adc
stos
xchg
push
aam
lea
punpckhbw
jo
jge
inc
and
push
lods
jmp
jl
fsubs
maskmovq
mull
cmp
outsl
jp
shr
jge
mov
rorl
mov
dec
ficomps
mov
xchg
bnd
push
stos
mov
jp
sub
pushf
jl
and
xchg
xchg
int
sti
imul
mov
fdivl
xchg
pop
adc
xor
movsb
clc
mov
cmp
orl
xor
hlt
jg
fcom
cwtl
pop
fldt
aas
jbe
mov
xor
gs
fstpt
ja
mov
imul
scas
fcoms
inc
scas
in
jle
sbb
cmp
xorb
lock
xor
imul
rcrl
cmp
andl
dec
imul
dec
mov
sti
loopne
idivb
fsts
fnsave
rcrl
sub
add
jbe
les
xor
idiv
out
cmp
arpl
clc
mov
lahf
inc
push
pop
sub
and
mov
in
dec
cmp
std
sub
ds
xchg
dec
ds
mov
in
sub
mov
ret
js
and
pop
dec
jbe
out
mov
pop
or
iret
sti
cwtl
outsb
jg
push
fisubs
pop
or
repz
jge
iret
xchg
xchg
or
pop
jns
dec
mov
push
xor
inc
les
fcompl
dec
sbb
inc
jb
inc
out
mov
in
xlat
mov
cmpsl
lret
jbe
je
jmp
xor
addr16
rcl
call
push
adc
movsb
push
sbb
jp
pop
or
inc
and
mov
cmp
push
xor
scas
das
orl
xor
cmp
adc
scas
lods
scas
mov
or
andl
adc
repz
adc
rcl
out
imul
ficoms
dec
fsubl
loopw
lret
jmp
int3
sub
push
out
fs
sbb
xor
repnz
or
and
adc
arpl
mov
scas
xorb
cmp
js
push
mov
and
insb
pop
xor
mov
ret
mov
mov
inc
lcall
mov
outsb
adc
inc
push
inc
mov
xchg
jmp
iret
jecxz
outsl
or
sub
sub
ds
mov
push
lcallw
sbb
mov
mov
ret
xor
push
or
and
in
loop,pn
xor
lds
pop
addb
clc
mov
stc
mov
movsl
gs
xchg
pop
pop
jle
stos
nop
idivb
popf
jne
out
inc
xor
pop
filds
pop
sti
std
mov
loopne
test
scas
aaa
inc
testl
inc
test
xchg
aaa
lea
sub
cwtl
aad
xchg
dec
and
ficoms
cmpsb
sbb
jg
dec
nop
mov
push
int
pop
sub
jns,pn
int
pop
lods
inc
lods
mov
lret
mov
jmp
push
cltd
add
push
shr
pop
icebp
nop
cs
xlat
dec
jmp
lods
jp
jl
pop
nop
push
mov
add
in
ret
xor
dec
aas
dec
push
mov
or
aad
inc
les
push
data16
scas
jne
push
iret
jns
pop
cmpsb
ror
xorl
mov
aas
in
cmpsl
sbb
inc
add
ret
pop
or
jbe
mov
xchg
and
mov
fcoml
in
test
sbb
pop
cmp
pop
sbb
sub
and
lahf
mov
lock
xor
in
out
je
dec
and
sbb
inc
or
push
mov
test
mov
adc
mov
incb
dec
sbb
or
std
aad
pop
mov
pusha
js
pop
popf
in
je
fs
scas
adc
sbb
outsl
cwtl
mov
daa
mov
cli
dec
fisttpll
and
lods
push
scas
andl
xchg
dec
addr16
mov
insb
lcall
std
insb
xor
repnz
inc
xlat
cmc
movsl
cmp
aad
shl
jae
js
xchg
cmpsb
cltd
iret
sahf
sub
jp
adc
out
adc
test
jbe
les
inc
outsl
xlat
mov
test
enter
pop
mov
stos
cmpsb
inc
pop
push
mov
dec
jecxz
popa
into
ja
stc
and
and
and
add
pop
push
je
jecxz
jg
fmull
rorb
es
ficoms
pusha
into
aad
out
xchg
in
pusha
mov
fsts
push
xchg
fisubl
and
cmp
shrl
pop
mov
sbb
mov
js
insl
inc
lock
pop
pusha
leave
cmp
into
mov
cmp
dec
rorb
cs
xor
shll
test
mov
add
push
cs
cli
cli
test
xor
jae
rep
movsl
inc
decl
jbe
out
shrb
scas
inc
out
inc
cmp
cmp
rep
jno
xor
mov
push
or
push
mov
ljmp
or
pop
and
lret
cmp
mov
pop
nop
imul
push
int
sub
nop
push
test
jno
push
aas
inc
sbb
sbb
fmull
daa
jecxz
push
in
or
add
jnp
push
or
add
jmp
sbb
in
sbb
sbb
dec
movsl
mov
dec
lcall
adc
idivb
gs
leave
movaps
loop
sub
addr16
test
daa
je
mov
out
mov
and
and
pop
cmp
cltd
rol
rorl
ljmp
shrb
movsl
jb
sbb
mov
sub
pop
decb
dec
push
movsl
movsb
lods
rolb
cs
iret
subb
adcl
mov
fadds
cwtl
xor
mov
push
cli
sahf
push
xchg
ss
loopne
fs
in
int
lds
fidivrs
sub
dec
jnp
jbe
ret
insb
and
xchg
xor
jo
jmp
jb
cmp
adc
rclb
in
mov
ret
lods
lcall
cmpsb
pop
scas
push
jns
fstpt
iret
mov
in
xchg
jne
push
add
adc
sub
cs
rcrb
outsl
divl
jo
bound
add
xlat
ret
notb
aad
adc
add
xlat
push
adc
push
mov
rol
xor
push
push
and
dec
out
fildl
mov
sub
jle
xchg
sbb
cltd
mov
fwait
dec
daa
lds
flds
negb
mov
lahf
adc
mov
pop
loopne
and
cmp
imul
mov
mov
xor
aad
les
pop
cmp
int
out
xchg
xor
cmc
repz
xor
bound
lret
in
xchg
stc
ss
cld
push
mov
fldt
int
add
mov
adc
mov
ror
sub
fnstenv
dec
lods
adc
lcall
fildl
adcb
jg
add
xchg
les
movsl
xchg
cmc
inc
addl
pop
add
rorl
jbe
pusha
in
xlat
jne
xor
inc
sti
adc
jmp
into
pop
insb
fmulp
fisubrl
pop
adc
pop
js
stos
push
insb
adc
test
mov
repnz
mov
popa
push
out
inc
inc
scas
and
cmp
jb
sub
insl
push
jnp
movsb
xchg
jno
lds
dec
adcb
incl
xchg
jbe
xlat
mov
das
mov
xchg
push
jns
sbb
add
sub
or
adc
jl
loopne
fs
stos
dec
mov
gs
push
add
cmp
fs
dec
mov
fwait
mov
or
push
pop
je
stc
mov
and
and
lret
lret
int3
or
xchg
or
popf
sbb
jecxz
mov
xchg
xchg
movsb
push
popa
xchg
xchg
jo
mov
mov
in
in
add
imull
xor
adc
int
push
mov
sahf
lahf
adc
dec
inc
dec
sub
out
mov
repz
cli
lret
xor
int
mov
pop
sarl
enter
leave
sbb
add
sti
loop
jae
xor
jge
adc
jmp
pop
dec
xor
inc
inc
jmp
clc
cmpxchg
inc
rclb
imul
and
pushf
dec
ljmp
cmc
mov
sub
push
cmp
add
repz
insl
sbb
pop
sub
adc
cmc
shl
mov
add
sti
jbe
and
sbb
mov
faddl
out
out
jp
push
pop
roll
sbb
or
insl
jle
ret
pop
pop
xor
lods
loopne
or
add
scas
add
rcrl
xor
sub
pop
dec
stos
mov
mov
jne
xchg
rorb
into
xor
loopne
in
in
xchg
inc
je
xor
lret
lods
ja
inc
in
pop
cli
xor
aad
fisubl
shrl
cmpsl
push
xlat
xor
repz
dec
movsb
sbb
pop
and
mov
push
sbb
leave
add
imul
xchg
ficoml
lock
and
aad
lcall
jb
repz
xchg
mov
scas
sub
sbb
and
inc
mov
xor
lcall
inc
jns
push
dec
mov
lds
loopne
cmp
jge
loopne
insl
enter
leave
shrb
jo
movsb
stc
call
enter
lret
daa
sbb
jl
xor
aas
sub
xor
mov
jl
xlat
push
ret
pop
push
or
adc
movsb
lods
sbb
push
or
fnstenv
stos
outsb
jne
mov
rcrl
imul
mov
lret
dec
popa
cmp
call
aam
and
mov
push
cltd
cmp
pop
xchg
jb
repz
int
sarb
jnp
push
cmp
scas
fadds
pushw
rcl
or
fs
add
mov
adc
mov
ror
dec
mov
popa
mov
xchg
sub
fstpl
pop
push
jbe
loop
mov
arpl
pop
xchg
ret
fiaddl
fs
push
push
xchg
sub
lods
sbb
std
fldt
enter
pop
mov
push
pop
push
inc
sti
and
out
sbb
scas
and
mov
sbb
test
std
push
lea
fcomps
mov
jne
cld
arpl
mov
fs
cmc
add
mov
leave
rcr
popf
mov
jnp
jp
aaa
mov
ljmp
jmp
insl
cmp
test
sub
jo
pusha
xor
mov
add
lcall
repz
shl
xchg
cs
adc
pop
repz
jle
dec
sbb
lods
into
inc
int3
or
incl
mov
mov
sbb
mov
jecxz
jecxz
int
mov
std
push
pop
xchg
popf
fidivrl
out
jb
test
scas
mov
popf
add
adc
cli
test
fmul
mov
mov
mov
ja
jecxz
xchg
and
add
add
xchg
jp
cmpsb
pushf
addr16
dec
push
sub
dec
jo
lds
outsl
dec
xor
icebp
pop
pop
xchg
adc
enter
out
push
daa
jb
test
sbb
aas
mov
sti
bnd
jae
adc
stos
mov
mov
dec
out
in
icebp
sub
mov
xchg
fstp
iret
xchg
ljmp
out
das
js
cmpsl
jmp
push
xchg
push
xchg
je
aas
cltd
addb
ja
lock
call
nop
push
xchg
inc
sarl
push
pop
jl
fs
sub
add
insl
fidivl
xor
fstl
inc
mov
ss
jp
push
xchg
adc
sub
sbb
and
adc
rclb
adc
cld
bound
iret
adcl
ret
lods
fldl
and
mov
mov
mov
push
and
sub
adc
cmp
inc
cmpb
and
cmp
cwtl
idivb
pop
mov
addr16
xchg
xchg
mov
push
or
push
iret
cmp
pop
and
rol
das
dec
out
xor
loopne
gs
inc
xor
mov
add
lock
nop
pop
xor
push
sub
push
scas
push
scas
mov
stos
sahf
or
imul
add
stos
push
mov
ret
xor
sub
or
mov
cmp
cwtl
in
leave
cmp
push
mov
mov
sub
pop
pop
mov
imul
add
repz
inc
jle
in
adc
dec
push
sbb
cmp
insb
or
mov
jae
sub
push
xor
mov
rolb
pop
ror
pusha
push
jge
fistpll
test
stos
cwtl
in
jecxz
mov
sbb
add
mov
mov
dec
mov
jae
mov
pop
push
dec
mov
out
push
mov
fildl
test
les
mov
mov
shl
incl
jmp
js
push
and
inc
outsb
adc
sbb
call
lds
sbb
sub
sbb
pushf
popf
xor
mov
push
sub
xchg
jp
aaa
or
mov
loopne
inc
mov
mov
add
les
ja
and
lahf
test
es
jae
movsl
stc
testb
or
mov
nop
inc
pop
lret
mov
inc
jne
out
jbe
sub
dec
mov
mov
test
imul
int
push
mov
bound
movsb
mov
leave
cld
add
add
rorl
loopne
or
pusha
aam
inc
hlt
mov
pop
and
inc
pop
push
cmp
add
sub
adc
mov
nop
int3
bound
test
sub
xchg
rolb
outsl
hlt
dec
test
inc
pop
cmp
xchg
data16
xor
imul
jno
es
jae
jnp
mov
inc
push
jo
int3
lahf
icebp
inc
mov
mov
jmp
jns
movsb
jp
xchg
nop
mov
adc
and
les
and
inc
cmpsl
adc
idivl
push
inc
lods
pop
push
aaa
cmp
or
adc
xchg
adc
xor
je
test
imulb
shll
cmp
pop
mov
dec
jl
and
dec
add
mov
mov
sbbl
cmc
push
mov
cmp
nop
cli
enter
loopne
js
cmp
xchg
stos
ljmp
pusha
mov
or
out
push
test
stc
lock
leave
mov
sub
and
cwtl
das
imul
mov
stos
fisubl
cs
rcrl
lods
daa
mov
fstpt
mov
loop
push
ret
and
leave
aas
arpl
jno
mov
fstl
pop
ds
jne
icebp
adc
sub
cltd
xchg
gs
dec
outsb
xor
int
cmp
push
mov
xchg
lret
cs
dec
test
in
push
in
mov
mov
lahf
mov
or
clc
add
cmp
mov
and
mov
rcrl
sbb
jmp
mov
mov
adc
push
jle
into
lds
cmp
enter
push
xchg
dec
imul
xchg
sbb
rcrl
ret
xchg
adcl
aam
dec
clc
push
int3
xor
pusha
je
fildl
sti
xor
inc
jecxz
clc
fwait
adc
incb
ss
daa
std
popf
mov
subb
fxtract
not
leave
xor
fldcw
icebp
add
insl
inc
jmp
mov
mov
sbb
mov
lods
divl
in
xor
cmp
pusha
jge
cmpl
inc
push
xor
jns
dec
xorb
adc
cmp
insb
and
scas
mov
loope
adc
xor
or
repz
inc
mov
xchg
inc
out
xchg
adc
xchg
dec
aas
cmpsb
lcall
shr
push
mov
roll
pop
mov
inc
dec
pop
std
mov
add
mov
jp
ffree
cmp
cmp
cli
insl
adc
add
test
push
push
lock
cltd
popf
dec
dec
push
cmp
push
mov
sub
push
lds
and
mov
jp
out
adc
xor
je
aaa
push
les
dec
mov
pusha
fucomp
cmpsl
pop
mov
jmp
cmp
enter
mov
mov
mov
push
inc
pop
scas
lods
pop
xlat
sbb
scas
sahf
fsubr
daa
xchg
clc
jb
sub
and
mov
and
in
insb
add
test
lcall
rolb
notb
cltd
scas
mov
stos
xchg
push
add
mov
sarl
clc
xchg
insl
mov
mov
or
mov
xchg
inc
fstpl
loope
nop
inc
add
lahf
movsb
bound
inc
pop
sahf
pop
imul
mov
in
test
in
add
lock
jo
pusha
mov
arpl
jns
pop
adc
ds
rcrw
dec
insb
sub
inc
orl
pop
jnp
mov
and
mov
fistpl
stos
aad
sbb
and
insb
clc
out
dec
mov
push
mov
jg
cmpsl
mov
outsl
ret
icebp
add
jmp
xor
test
push
lret
xor
idivb
adc
mov
jl
xlat
mov
push
push
cmpsl
pop
dec
mov
inc
icebp
or
lock
repnz
mov
xor
xchg
and
sarb
rorl
daa
jmp
iret
xchg
fildll
cli
data16
gs
ror
popa
mov
add
sbb
xor
adc
adc
adc
clc
rclb
cmpsl
insl
das
ret
mov
adc
cli
dec
fsubrs
shlb
fs
and
cmp
nop
lret
mov
cltd
lock
or
pop
or
das
les
xchg
pop
outsb
mov
decb
test
inc
cmpsb
push
outsb
or
aad
imul
xor
push
and
jmp
mov
in
xchg
aam
mov
fiadds
jg
ljmp
jecxz
sub
shll
xchg
movsl
fxch
cltd
jb
imul
cmpsl
dec
into
leave
pop
sbb
imul
push
pop
pop
jae
mov
nop
adc
sbbb
xor
cld
xor
pusha
xor
or
cli
fucomp
cmp
adc
xchg
dec
loopne
mov
pop
comiss
sub
daa
fnstenv
test
jbe
out
push
push
jmp
js
fucomp
mov
cmp
out
sbb
fs
dec
inc
push
les
cmp
loop
jae
xor
fadd
cwtl
rcrb
aaa
dec
lock
lcall
xchg
outsb
cmp
mov
mov
popf
shlb
ss
add
pushf
in
inc
lea
std
sbb
cmc
cmp
mov
repnz
push
mov
push
jp
call
int
incb
mov
or
out
mov
cld
pop
js
and
and
imull
dec
pop
ss
push
xor
or
nop
pop
fcomps
cmpsb
xchg
jno
mov
jo
bound
adc
aaa
out
aaa
aas
iret
sub
rcl
negl
and
mov
jle
push
arpl
mov
cmp
xchg
inc
scas
mov
cmp
jnp
jecxz
cmpsb
aad
fcmovbe
and
inc
xchg
sub
xor
repz
jle
dec
pushf
pushf
lods
cltd
inc
fdivrs
jno
fbld
sub
add
fisubrs
cmp
repz
inc
jno
adc
cltd
fcmovb
mov
dec
jb
rolb
scas
cmp
gs
and
and
call
sbb
xchg
mov
mov
adc
rdpmc
jecxz
data16
and
push
mov
cmpsl
pushf
adc
cmp
or
aas
in
push
mov
or
out
dec
iret
in
incl
xchg
xchg
ret
inc
inc
cwtl
popf
push
nop
dec
adc
pop
mov
addr16
test
stc
rorl
ret
lcall
mov
pop
add
mov
enter
jno
push
mov
call
sub
mov
xor
test
hlt
jb
lret
add
or
sub
lcall
inc
hlt
and
inc
pop
pop
aam
xor
roll
adc
pop
mov
dec
icebp
adc
xor
js
es
dec
data16
or
xor
lret
adc
ds
cmc
lahf
shrl
mov
shrb
inc
or
mov
jne
hlt
ret
pop
mov
and
fwait
ret
ljmp
arpl
cmc
sbb
clc
xchg
xorl
outsl
jle
cmp
or
out
adc
test
push
push
scas
icebp
sub
cmpsb
and
ret
add
lret
and
mov
ret
fimull
cmp
pop
shll
xor
adc
outsb
addb
or
xchg
mov
cmp
arpl
fimuls
dec
pushl
mov
inc
pop
xor
rcr
divl
mov
sub
add
or
add
bound
cmp
fcoms
mov
or
and
push
inc
mov
xor
arpl
scas
roll
test
scas
dec
inc
sub
jmp
test
stc
popf
aad
pop
or
loop
push
mov
cmp
xlat
adc
mov
dec
xchg
mov
mov
and
idivb
push
mov
and
outsl
and
xchg
sub
xor
enter
push
pop
push
add
adc
test
xchg
dec
sbb
jno
fnstsw
push
arpl
xchg
and
push
jae
mov
inc
jnp
les
jb
pop
outsb
xchg
sbb
test
mov
dec
mov
xchg
pcmpeqw
call
inc
and
jno
dec
pop
mov
inc
or
arpl
je
xchg
mov
xchg
cmc
xchg
fistpll
idivl
lock
jge
mov
cwtl
adc
jge
idiv
pusha
mov
add
xlat
scas
jge,pt
sbb
adc
in
gs
xchg
ror
pop
xor
sub
je
mov
jmp
das
mov
test
ja
sarb
mov
fldenv
std
insl
mov
push
cmp
jb
push
cmpsl
cs
sub
frstpm(287
test
aaa
out
std
dec
ret
lock
mov
rorb
xchg
fists
or
repnz
pop
test
cld
popa
xchg
movb
out
insb
fwait
push
fnstsw
ret
push
fcmovnu
or
push
negl
ficoml
popf
mov
inc
lods
mov
mov
mov
jb
scas
fnstenv
cltd
int
scas
and
stos
mov
push
faddl
mov
lods
out
jb
addl
data16
pop
xor
int
pop
jg
mov
xchg
inc
pop
addr16
inc
or
aam
call
dec
mov
xchg
imul
sbb
pop
andb
outsl
or
jmp
push
mov
or
inc
sub
jl
mov
aam
roll
movsb
fistl
or
mov
out
pop
cmp
inc
and
ss
lock
jbe
mov
sbb
xor
adc
iret
shll
popf
mov
and
cmp
jge
push
bound
mov
lock
hlt
lock
xlat
jnp
iret
nop
loopne
cmp
adc
aad
xchg
iret
into
lahf
mov
and
fwait
cmp
mov
enter
add
es
pop
dec
shll
shr
jbe
xchg
pop
pusha
in
aaa
add
movsl
imul
cld
sub
add
push
aaa
std
xor
or
pop
rcll
fistpl
fidivrl
cltd
mov
xchg
mov
xor
push
sub
xchg
jbe
sbb
cwtl
outsl
sbb
add
inc
lods
sarb
cmp
aaa
dec
pop
enter
bound
aam
cmp
xchg
roll
sub
jl
out
jp
push
mov
lea
repz
jae
adc
dec
xor
dec
lds
repnz
pop
push
pop
fildl
or
xor
mov
jbe
sub
jmp
int3
stos
fcom
adc
xchg
jne
mov
sbb
shrb
fwait
push
stos
roll
and
jnp
xor
mov
sub
adc
iret
xchg
cmpl
gs
sbb
jmp
faddl
frstor
scas
pop
xor
sbb
and
xchg
sbb
fnsave
push
test
jecxz
push
outsl
cs
mov
stc
popf
or
and
sbb
fistps
mov
mov
push
popa
jae
test
subb
sbb
ret
aaa
xor
push
jnp
test
loope
or
pop
jg
cmpsl
xchg
into
movsl
das
cmp
frstor
adc
sbb
repz
or
lods
mov
sbb
hlt
stc
leave
lock
sbb
out
adc
out
mov
leave
cmp
repz
fnstsw
test
mov
mov
cmp
movsl
mov
inc
mov
mov
out
xlat
push
xchg
test
jecxz
jl
cmp
jne
push
shl
mov
lret
call
repnz
mov
ret
clc
movsb
push
pop
pop
jae
mov
insb
shrb
mov
imul
movb
dec
ror
sbb
push
int
pop
jnp
add
lods
dec
mov
hlt
andb
pop
rcll
fdivr
pop
mov
movsb
fwait
mov
mov
or
lds
mov
mov
pusha
pop
lock
mov
mov
pusha
sub
cmp
adc
dec
sub
fbstp
repnz
cmpsl
adc
shlb
scas
mov
mov
cmc
fcmovb
dec
jl
loop
jne
adcl
ljmp
or
mov
cmp
and
xlat
out
pusha
imul
arpl
jb
addr16
xchg
cmpsb
mov
xchg
sti
dec
mov
mov
test
fsub
add
mov
out
fcoml
cmp
pusha
and
lods
out
jp
repnz
andl
xchg
popf
mov
cmpsl
jmp
movsl
popa
dec
jbe
mov
popl
inc
popa
daa
dec
sub
mov
mov
pop
popf
jmp
fdivl
lahf
mov
jmp
push
jnp
sub
shll
dec
sbb
mov
stc
nop
adc
xchg
adc
mov
int
test
pop
mov
cmp
cmp
inc
mov
ret
inc
outsl
mov
xchg
push
mov
mov
push
outsb
inc
fsubl
ds
or
push
xchg
cli
inc
cmp
scas
push
xchg
in
pop
cmp
xlat
adc
scas
loope
into
cli
imul
adcb
jle
mov
xor
in
das
push
mov
aas
pop
xchg
repnz
mov
aam
push
shrl
cli
aas
cmpsl
dec
out
aas
cwtl
pop
cli
stos
jle
pop
rol
cltd
fs
mov
cmp
cmp
jnp
sbb
inc
sbb
add
iret
push
xchg
add
xor
push
enter
ss
jecxz
xor
mov
out
in
popa
xlat
dec
add
and
mov
push
sbbl
shr
jae
push
sbb
mov
test
pushf
ret
lock
mov
mov
push
push
scas
bnd
aad
cmp
hlt
movsb
push
sahf
stc
mov
jmp
inc
mov
and
ja
cmp
inc
pop
rcl
ret
mov
xchg
icebp
and
jecxz
push
stos
mov
loop
mov
frstor
add
xchg
pop
aam
imul
test
mov
dec
sbb
mov
rorb
mov
xlat
ret
cwtl
xchg
inc
fistpll
mov
jns
inc
fwait
mov
out
or
std
call
cs
adc
roll
pushf
rorb
jne
sbb
popf
mov
pop
fisubl
pusha
and
push
ficompl
sbb
mov
or
add
fisttpll
sbb
mov
ret
mov
data16
push
testb
mov
mov
and
and
mov
pop
dec
push
jns
ja
imul
mov
repnz
jle
iret
lret
cmp
movsl
jo
ret
sar
adc
outsb
es
out
adc
sbb
arpl
add
test
cmp
jno
daa
xchg
mov
pop
ja
push
inc
icebp
mov
push
hlt
jle
test
pop
add
pop
adc
adc
out
mov
mov
cmp
in
int3
pop
lret
add
pusha
cmc
jb
dec
aas
outsl
or
mov
cmp
loopne
lods
mov
sub
rcrl
cmp
imul
xlat
gs
fisttpl
jo
cmp
xchg
cmc
and
mov
cmp
rcr
cmp
mov
mov
lods
jge
insl
shrl
push
dec
jmp
stc
mov
lahf
sbb
cli
aas
ret
and
mov
imul
sbb
movsl
push
in
jb
les
leave
subb
jle
cmovl
iret
roll
sub
popl
andl
inc
ror
jns
mov
icebp
xchg
cmp
gs
imul
dec
out
pop
pop
mov
xchg
cmpsl
add
mov
int
pop
push
stos
sbb
cmp
cltd
pop
loop
jne
xchg
mov
xchg
shrl
ret
jnp
xchg
dec
fidivrl
or
sbb
mov
ret
mov
arpl
clc
xchg
xchg
mov
test
cmp
pop
and
repnz
push
aam
jno
cmpsl
push
in
mov
out
add
xlat
ficompl
sub
or
aas
in
jne
and
shrl
inc
mov
ret
sti
sub
test
xchg
inc
popa
jl
and
fisttps
imul
jl
xchg
adc
sub
jle
test
ret
xchg
mov
and
jmp
push
jl
xchg
out
sub
aaa
adc
pop
rol
mov
jns
mov
addl
inc
dec
leave
inc
shll
insl
fnstcw
psllw
scas
inc
push
inc
lret
pop
cli
mov
jecxz
xchg
mov
stos
xchg
mov
iret
adc
inc
cmovg
sub
xchg
cld
push
neg
loopne
filds
mov
pop
pop
fisttpll
xchg
cmpsb
mov
pushf
xchg
stos
add
ficoms
jne
iret
test
mov
cltd
push
or
movsl
sbb
xchg
daa
add
cmp
loope
jmp
or
not
inc
hlt
dec
mov
mov
xor
mov
sti
shlb
lds
insl
dec
ret
mov
inc
and
jns
mov
adc
jmp
push
enter
fcompl
push
fwait
xor
push
pop
mov
adc
push
fbld
cs
test
cmpsl
xor
xchg
shlb
fiaddl
insb
call
pop
xchg
pop
xor
jb
aaa
out
ds
aad
stos
jg
adc
jb
add
rcll
pop
test
mov
cmp
scas
jle
push
fwait
ljmp
pop
mov
out
fistps
mov
sub
jbe
adc
add
ret
or
call
sbb
and
mov
fwait
sub
pop
pop
lock
dec
outsl
add
or
aas
push
scas
push
shlb
das
aam
mov
xor
imul
inc
push
xor
dec
lods
mov
movsl
or
mov
xchg
push
inc
fisttps
mov
sbb
ja
or
bound
fimuls
pop
mov
jb
fs
outsb
movsb
sbb
ljmp
adc
dec
mov
xchg
ss
sub
add
dec
mov
pop
out
sub
cmpsb
inc
mov
add
aam
sahf
cmp
cmpsb
ljmp
mov
pop
mov
int
xchg
push
imul
dec
cmpsb
ret
jl
add
xchg
sahf
movsl
aam
lret
out
inc
sub
xchg
fnclex
dec
outsb
mov
adc
lds
jb
sub
push
pushf
adc
or
lahf
loope
mov
mov
cmpsb
aas
cwtl
jge
lret
dec
rorl
movsl
pop
repz
push
fstpt
push
clc
inc
enter
in
imul
xchg
sub
cmp
filds
adc
sti
xchg
and
ret
pop
mov
lds
jno
iret
and
mov
out
adc
or
and
jmp
dec
nop
movsb
lcall
cmpsl
inc
cli
pop
inc
out
and
addb
mov
int3
mov
stos
jg
sub
out
xchg
icebp
popf
mov
out
add
mov
gs
jne
loop
jo
jno
ss
add
jmp
mov
xchg
adc
jp
int3
sbb
sbb
popa
mov
pushf
sbb
lcall
shll
out
mov
stos
push
sahf
aaa
arpl
mov
xchg
adc
push
jecxz
ror
pusha
sbb
mov
lret
aaa
pop
fsubl
fucomip
ret
mov
lods
push
fildl
sti
inc
popf
cmc
outsb
push
je
cmp
add
addr16
pop
mov
add
pop
cmpsl
push
dec
inc
and
pop
and
cs
xor
hlt
in
inc
out
shll
lods
dec
lcall
mov
rorb
stos
mov
in
roll
clc
hlt
jecxz
rorl
lds
cmpb
outsl
xlat
add
mov
test
stc
js
and
xor
pop
fidivrs
xchg
lock
mov
inc
sub
mov
lea
push
mov
jp
test
testb
insb
sahf
in
insb
mov
dec
sahf
es
pop
roll
pop
mov
imul
xchg
fwait
cltd
pop
out
dec
movsl
sbb
dec
jne
mov
sub
inc
sbbl
adc
pause
jecxz
out
test
push
add
leave
adc
push
cli
adc
sbb
sub
xor
mov
pop
xchg
xchg
orl
xor
xchg
leave
cmp
stos
fs
iret
mov
hlt
push
cmp
mov
out
sti
pop
shll
push
and
stc
daa
outsl
adc
into
outsb
xor
sti
xor
js
fsubrl
push
dec
push
xchg
mov
insb
jle
insl
inc
add
push
adc
pop
or
mov
xor
ljmp
ja
cmp
fldenv
arpl
out
push
pop
vpunpcklbw
pop
insl
fldl
or
sub
xchg
dec
out
pop
imul
or
enter
jne
imul
out
xchg
dec
adc
mov
sub
push
in
arpl
xorl
mov
daa
js
jg
fldl
incl
jg
fnsave
jecxz
xor
orl
imul
popa
xchg
pop
mov
out
jge
fmull
fnsave
hlt
add
imul
push
fld1
pop
subl
inc
add
shrb
dec
xor
notb
fisttpll
sub
inc
xlat
stos
and
cli
andps
xor
push
jne
mov
sbb
fdivl
lds
sbbl
dec
or
test
xchg
mov
sub
mov
je
fisubl
mov
stc
dec
dec
and
lods
sbb
xor
out
dec
frstor
fbld
mov
test
xchg
add
aad
sub
js
push
adc
mov
mov
fisubl
dec
movsbl
ljmp
sarb
cmp
xchg
add
push
xchg
jo
cmp
xlat
pop
in
dec
mov
dec
mov
xchg
sub
imul
into
sar
fs
es
or
pop
sub
aam
notb
subb
pushf
xchg
scas
js,pn
mov
les
cli
cmpsl
sub
push
mov
in
add
sbb
and
scas
loop
insb
shlb
jb
in
out
push
cmp
int3
xchg
ret
push
jg
mov
cmpsb
and
cmp
mov
cltd
sahf
pop
call
xchg
mov
cs
movsb
xor
jp
dec
pop
push
fcoml
mov
and
mov
or
mov
xchg
fisttpll
fldcw
hlt
jo
inc
out
sub
sub
or
rcrb
es
clc
mov
insb
nop
xor
je
jle
dec
or
aad
and
fisubrl
cmpsl
les
fiaddl
mov
sbb
push
push
or
cli
adc
mov
and
mov
test
push
rcrl
std
popf
inc
iret
mov
pop
and
insl
add
add
sub
sahf
adc
pop
scas
in
ds
mov
dec
imul
push
mov
movsl
xor
and
nop
and
aad
add
xor
shrl
cmpsb
jl
addb
aam
sahf
add
mov
call
sub
mov
xchg
ficoml
and
adcl
test
jge
mov
fiaddl
mov
inc
es
cmovs
jne
pusha
jmp
inc
popf
shlb
pop
jb
pop
fbstp
ret
inc
lcall
pop
mov
mov
xor
mov
mov
ss
adc
sub
xor
pushf
mov
mov
dec
jmp
push
repz
and
xchg
mov
in
addr16
add
and
pop
roll
inc
cmpsb
jecxz
fcmovu
xchg
nop
ljmp
decb
jb
xchg
arpl
xorl
inc
push
out
dec
scas
stc
sbb
mov
mov
int3
lret
or
lret
xchg
xor
and
dec
sbb
std
push
pop
mov
in
mov
push
or
out
nop
lcall
out
mov
fisubrs
jb
sarb
cmp
jns
jecxz
aaa
adc
imul
xor
pop
ficoml
icebp
repz
fcmovnbe
sbb
test
add
repz
jns
xchg
mov
pop
dec
dec
and
sub
add
fisubs
cmp
aam
mov
adcb
aam
sbb
gs
aas
sub
add
pop
in
scas
xor
jbe
push
test
cmp
sbb
sahf
addr16
popf
mov
lock
outsb
je
jp
insl
cmp
loop
scas
dec
mov
pop
leave
gs
pop
roll
pop
outsl
sbb
jmp
or
insl
call
ret
inc
mov
pop
jmp
pop
add
mov
std
push
cmp
js
pop
pop
mov
pusha
xor
call
mov
or
cmp
mov
cltd
push
stos
data16
inc
jns
sbbb
inc
xor
xchg
in
testb
out
pop
ja
cmpb
repnz
sbb
mov
fsubrs
jg
aaa
fwait
mov
and
or
hlt
fmulp
mov
sub
inc
xchg
test
jo
imul
arpl
jb
or
fdivl
mov
movl
mov
xchg
out
pop
mov
fst
sub
xchg
scas
gs
and
cli
stc
insb
mov
sub
aaa
shll
hlt
cld
jae
movsb
repnz
xchg
inc
mov
imul
addr16
xchg
add
pushw
cwtl
lds
paddd
push
dec
out
decb
xchg
subb
ds
add
out
add
mov
stc
and
sbb
or
and
xor
adc
jo
or
add
sti
inc
mov
mov
fdivrl
filds
or
mov
jecxz
mov
outsb
mov
pop
pop
xchg
pop
jno
inc
ret
ss
mov
cmp
pop
ja
jne
mov
enter
xchg
jl
or
jb
into
push
push
repnz
inc
pop
fsubs
cmpsl
stc
mulb
xchg
pop
pop
mov
js
jl
les
cmpsb
or
mov
jecxz
sbb
cmp
and
out
cmp
inc
push
sub
dec
cmp
outsl
sbb
mov
imull
dec
xor
insw
out
pop
andl
mov
jle
adc
xchg
aaa
sti
lea
nop
aad
and
pop
shlb
icebp
pop
xchg
dec
pop
lds
dec
push
cmp
push
mov
jnp
sahf
inc
mov
xchg
mov
dec
and
out
fdecstp
imul
or
dec
aad
sub
lret
call
push
ljmp
mov
mov
les
mov
add
dec
in
imul
rol
arpl
inc
fstl
aam
cli
add
jbe
stos
add
jno
cmpb
jp
jae
les
pop
testb
dec
or
push
and
pushf
insl
jge
push
rorb
ljmp
push
lret
repz
dec
add
nop
xchg
sahf
and
out
jno
ficomps
fs
das
mov
cmpb
xchg
pop
push
pop
cmpsb
dec
mov
pop
push
push
fisttps
push
cmpsb
push
repnz
cs
pop
mov
push
jecxz
test
push
call
sub
xchg
sbb
adc
loopne
lret
leave
sub
leave
and
sbb
jns
xchg
flds
pusha
sti
push
test
sbb
cli
adc
dec
cmp
loopne
aad
sub
cmp
adc
jecxz
xor
jo
fdivrl
cmp
push
rcrl
in
dec
mov
fbstp
call
imulb
sbb
mov
jno
shl
aam
inc
sahf
inc
inc
cli
push
call
and
adc
sbb
pusha
xchg
test
add
cmp
ja
repnz
xchg
jae
repz
xor
add
scas
dec
push
cmp
sbb
test
dec
mov
xlat
outsb
lds
pop
sbb
xchg
pop
flds
lods
adc
aas
test
sarl
mov
je
stos
push
push
sbb
int
clc
out
sbb
insl
dec
jae
outsl
mov
sub
and
imul
ljmp
insb
mov
pop
std
sub
jp
mov
shl
mov
push
rcr
into
ss
ss
fbld
mov
jl
or
fsubp
inc
stc
mov
inc
rol
dec
shlb
and
dec
jge
fldlg2
push
movsl
out
cmpb
loope
daa
cmpsb
or
mov
repnz
xor
mov
fsubrl
aaa
mov
push
lret
inc
ljmp
xchg
push
mov
xchg
sahf
push
fcompl
dec
xchg
ficoml
int3
pop
cld
cmp
mov
add
js
cwtl
inc
into
xor
sti
push
imul
daa
mov
push
or
sar
lods
jl
adc
and
loop
sbb
and
cs
dec
push
mov
addr16
and
push
daa
loopne
sbb
dec
inc
add
jle
ja,pn
test
loope
push
insl
ss
shrb
jp
fsubrl
sub
push
movsl
fldt
or
dec
std
cmp
adc
sub
pop
cld
fcoms
rorl
push
pop
icebp
dec
jmp
mov
stos
cs
in
inc
test
inc
out
cltd
mov
jecxz
scas
dec
shl
fisubrs
into
insb
lcall
add
pop
out
sbb
mov
sub
or
sahf
out
mov
popf
jp
fbstp
ficoms
stos
push
movsb
sub
xchg
sti
xor
pop
mov
jae
dec
push
mov
adc
inc
or
arpl
or
shr
scas
movb
stos
shlb
inc
adc
push
int
or
in
test
mov
jmp
pop
nop
pop
lret
outsb
imul
aas
mov
pusha
mov
inc
loop
lds
das
cmp
push
sub
inc
out
and
ss
mov
jno
xor
lds
int
mov
daa
cmpsl
popa
ret
dec
jmp
or
push
call
lahf
sub
xor
mov
mov
mov
pop
sarb
call
push
add
test
dec
fisttpll
pop
ljmp
or
inc
xlat
into
insl
in
mov
sub
ficompl
pop
cmpsb
cld
gs
ja
cmc
fs
push
movsl
push
cmc
mov
fimuls
mov
fsubs
add
mov
loop
ljmp
lods
mov
fbld
or
lea
cmpsl
sbb
in
xor
imul
test
nop
insl
repz
repnz
mov
add
movsl
jnp
pop
addl
pop
and
or
lds
call
mov
aaa
clc
jno
shrl
push
mov
xlat
push
push
std
inc
lods
pop
jmp
mov
or
and
iret
les
lahf
test
aaa
jo
adc
adc
mov
call
sub
in
jecxz
loope
cmc
cmpsb
popa
fidivl
pop
pop
xchg
repnz
mov
andl
in
test
mov
stos
stc
mov
in
pop
xchg
sbb
loopne
pop
pop
out
mov
pop
test
cmpsb
es
lret
ss
add
shlb
loope
stos
pop
add
pop
out
sbb
mov
shll
inc
stc
popf
jmp
fs
in
das
enter
std
pop
lcall
sbb
clc
jl
imul
out
ret
add
aas
sarl
add
xchg
push
lret
push
cld
or
xor
mov
loop
cli
ja
popf
fucomi
ja
cmp
add
inc
out
mov
adc
fsubl
flds
repnz
rclb
adc
cmp
adc
xchg
subl
popf
shl
jbe
xchg
mov
daa
jmp
mov
pop
xor
or
pusha
out
imul
sub
test
mov
les
inc
out
fs
jl
stos
jnp
shr
faddl
jl
lods
cmp
adc
mov
inc
es
cmc
mov
push
sub
dec
sub
dec
in
jg
or
jne
loope
cmp
out
fwait
jge
pop
enter
in
test
pop
and
cmpsb
push
inc
inc
add
inc
into
inc
sti
out
or
jp
mov
pop
pusha
mov
outsb
jge
push
cmpsb
add
and
pop
cmc
pop
addr16
sub
and
lahf
push
xchg
fmull
sahf
data16
pop
xlat
ret
sarb
loop
and
jle
stos
xor
outsl
in
xor
fxch
daa
pop
ds
jg
mov
insb
jp
jae
pop
pop
adc
subb
add
dec
enter
int3
add
clc
pop
add
adc
cmp
dec
ret
loope
mov
lret
jns
pop
sub
xchg
add
or
repnz
loope
inc
orb
dec
ds
push
mov
insb
aaa
and
into
mov
fcompl
cli
cmp
int
jne
rcll
out
mov
in
inc
push
mov
mov
sub
mov
jb
inc
push
add
mov
pop
or
sbb
jnp
inc
mov
int3
dec
aad
mov
jmp
aaa
cmpsb
push
sbb
es
add
ds
test
es
sub
push
lods
mov
pop
dec
int
fisubl
jb
push
ss
test
pusha
sbb
cmp
dec
mov
mov
mov
dec
dec
lcall
inc
jbe
lock
aaa
lret
push
mov
popa
div
pop
incl
push
out
fsubs
int
rolb
and
sub
xchg
pop
out
nop
fs
jne
inc
out
and
or
ds
out
out
aaa
mov
dec
int3
push
and
test
sub
fstpl
cmp
mov
and
inc
iret
pop
and
push
shlb
in
stc
in
daa
push
js
inc
push
fldl
cs
jmp
push
ljmp
xchg
push
decb
pop
pushf
or
repz
test
and
pushf
add
lods
aas
push
jae
and
xor
push
frstor
dec
aam
xor
iret
and
loop
repnz
push
in
or
jle
or
push
movsb
mov
mov
ret
icebp
and
stos
hlt
or
sub
stos
sub
popa
leave
inc
inc
mov
and
pop
orb
fmuls
adc
jns
add
stos
push
pop
std
adc
jo
clc
sahf
sar
sbb
insl
sysexit
pop
inc
test
dec
mov
xchg
inc
mov
mov
and
cld
xlat
cld
hlt
jl
xchg
mov
adc
lahf
or
mov
out
fisttpl
fxch
mov
adc
push
rolb
jp
shrb
pusha
cltd
mulb
addb
and
dec
movsb
clc
pop
leave
sbbl
in
sub
pop
lds
dec
jecxz
mov
dec
aad
xchg
sub
add
lea
dec
jp
in
mov
xchg
jle
icebp
mov
shlb
pop
pop
btr
xchg
insl
mov
jbe
and
adc
xchg
into
je
jp
lock
xchg
add
mov
sub
sbb
sbb
jmp
ret
cmp
and
xchg
sti
sbb
into
add
std
dec
lret
or
pop
mov
mov
jo
lret
pop
mov
cmpsb
lret
int3
push
inc
mov
les
stos
pushf
jnp
pop
enter
push
adc
adc
scas
xor
mov
xchg
dec
lock
sti
adc
jbe
and
sbb
inc
iret
inc
xchg
lret
push
mov
lret
outsb
sub
mov
je
mov
aas
cmc
adc
movsl
pop
push
dec
jne
stc
lcall
push
scas
sbb
cmpsl
jno
pop
notl
sub
popa
mov
aad
fildl
lret
cmp
pop
sbb
xor
enter
mov
add
fcmovb
imul
lods
inc
aad
add
and
dec
in
push
cmp
dec
je
cmpsl
adc
mov
inc
mov
pop
insb
xor
mov
lret
insl
xchg
sub
and
xor
adc
lcall
test
mov
mov
xor
les
out
arpl
mov
cli
in
loope
orl
or
add
adc
xchg
inc
mov
mov
sarl
mov
dec
sti
js
pop
cmp
sbb
fcomps
mov
or
sti
test
test
pop
xchg
sub
push
xchg
xchg
es
stos
add
and
iret
mov
sbb
push
enter
or
cmp
hlt
subb
pop
sub
mov
cmp
push
pop
inc
les
sub
cmp
add
das
xchg
int3
ja
inc
int3
jne
xor
mov
jecxz
mov
cwtl
dec
pusha
idivb
aas
mov
int3
adc
inc
cmp
imul
test
movsb
dec
fmull
es
mov
jbe
jne
testb
push
lret
cmp
push
in
repnz
stc
jp
adc
fcomps
testl
jb
nop
inc
add
cmpsl
in
inc
sbb
mov
sub
mov
push
sbb
mov
imul
into
int3
call
loopne
lds
adc
push
rol
ss
dec
divb
mov
and
fcmovnu
xchg
dec
cli
or
pop
jle
sbb
cmp
xor
cli
and
sub
xchg
shll
rcr
push
insb
mov
outsl
cmp
jo
cmp
decl
in
lcall
cwtl
mov
dec
stc
out
jo
xor
push
xchg
adc
fisubs
push
push
adc
jge
imul
andl
outsb
out
or
and
push
push
pcmpgtd
push
cmp
xchg
out
or
or
push
pop
into
cs
fistpll
pop
cmp
popa
inc
mov
stos
push
inc
into
jb
jecxz
cmpsl
or
mov
mull
cld
dec
mov
nop
add
fnstsw
add
and
orl
mov
cmpl
sahf
hlt
pop
mov
push
mov
call
pop
xor
sahf
push
popf
outsl
pop
dec
fisubrl
aas
mov
jo
mov
cmp
cmp
jne
jno
inc
cmpsl
enter
push
es
addr16
ret
jecxz
pusha
int3
inc
xchg
push
dec
cmp
or
ret
cmpsb
jl
jp
pop
loope
scas
mov
adc
fdivrs
push
xor
sbb
push
rolb
stos
in
push
mov
inc
clc
pop
and
pop
ljmp
les
jno
or
pop
cmp
mov
push
xor
xchg
and
lret
fs
call
push
mov
mov
xchg
inc
or
adc
mov
or
movsb
data16
push
sub
or
jg
and
sub
mov
aas
pop
std
sub
outsl
hlt
data16
sbb
lock
ret
push
mov
mov
pushf
das
ret
cmp
lds
or
shll
loopne
jl
mov
nop
fwait
mov
sti
inc
ret
xor
inc
pushl
lea
mov
outsb
mov
xchg
cmp
sarb
inc
int3
mov
nop
cmp
rolb
cmp
test
enter
scas
push
aaa
movsb
or
daa
xchg
jle
outsb
sahf
adc
inc
mov
out
shrb
dec
out
daa
mov
ja
pushf
mov
add
add
or
leave
mov
popa
xor
test
icebp
hlt
sbb
xchg
or
mov
pop
cld
lds
push
jb
inc
sarb
repz
inc
test
hlt
mov
fistpl
jge
jle
call
cwtl
and
sub
pop
jmp
ljmp
fistps
xchg
inc
sbb
xor
mov
pop
add
sub
xor
into
push
loope
and
outsl
mov
aam
out
repnz
and
mov
xchg
or
adc
jp
mov
je
lcall
dec
and
cmp
xor
and
and
repz
add
out
add
mov
mov
dec
aas
sbb
bound
mov
mov
stos
inc
in
mov
fadds
sbb
sbb
je
xor
hlt
lods
inc
hlt
pop
ret
icebp
lods
sarb
and
and
sbb
xchg
bound
test
sub
shrb
push
mov
or
out
outsl
test
jbe
add
push
jo
sbb
pop
push
dec
rorl
lds
xchg
pop
leave
cs
imulb
rol
inc
sarl
cltd
fmuls
sbb
shll
cmp
in
les
jge
dec
mov
sbb
push
adc
das
sbb
stc
je
imul
cmp
fs
cs
lea
dec
lahf
cmpsl
sarl
ficoml
mov
and
lods
ficomps
lods
cmp
int3
bound
sub
fs
inc
es
inc
inc
rorl
dec
aad
mov
and
cwtl
addr16
push
fcmovb
push
xchg
pop
loopne
cmp
adc
cmp
movsl
and
not
xchg
js
mov
xchg
add
out
inc
fidivs
fcompl
fdivl
mov
fstps
adc
inc
jl
mov
cli
push
cmp
testl
js
xor
xchg
aaa
xor
xor
test
xchg
js
es
insb
rcr
jbe
fsts
xchg
scas
int
mov
scas
data16
clc
test
cmpsl
mov
push
addl
shrl
add
negb
jle
sti
push
xchg
loope
addr16
arpl
mov
ss
mov
in
imul
das
mov
sub
xor
mov
sbb
out
enter
mov
std
sbb
jo
mov
in
xchg
cmp
sbb
xchg
call
lcall
and
aam
adc
clc
mov
inc
jecxz
jnp
js
ret
lods
jnp
gs
lods
outsb
pop
das
dec
lock
movsb
hlt
test
imul
adc
add
inc
jb
jecxz
xchg
pop
fimull
enter
mov
pop
add
add
icebp
jmp
inc
sub
cmp
cltd
sbb
mov
push
cmp
jno
mov
insb
mov
rcl
das
xchg
jg
push
js
int
scas
cmp
xchg
sub
ljmp
push
ret
subb
inc
mov
insl
divl
nop
pop
or
in
shrb
add
mov
mov
and
out
insl
dec
mov
cmp
pop
mov
push
into
inc
loope
and
fidivrl
test
es
out
cmc
push
jae
sbb
fistpl
pop
scas
int3
mov
fs
mov
xchg
aas
popf
add
dec
out
adc
sbb
pop
lea
xchg
pop
add
ret
xchg
push
add
cmc
inc
jbe
adc
fwait
adc
cmc
sbb
call
imul
pop
push
mov
pop
pop
mov
scas
dec
mov
prefetcht0
scas
pop
ret
shll
jmp
aad
addl
frstor
sbbb
adc
jge
sub
pusha
clc
imul
loop
dec
pushf
push
pop
out
data16
pop
mov
imul
data16
popa
addl
clc
mov
pop
dec
es
xchg
aam
sbb
lahf
repz
mov
sub
xchg
mov
push
into
jns
push
insb
pushf
mov
push
xor
aas
fs
and
mov
mov
push
cwtl
sbb
xchg
pop
mov
push
std
outsl
pushf
arpl
in
scas
sbb
inc
pop
aam
inc
cmpsl
arpl
fistpll
mov
sbb
mov
jp
mov
test
push
cli
call
sub
push
pusha
push
loopne
js
sbb
nop
sub
int
popl
repnz
mov
xchg
push
cmpsl
and
inc
cltd
fcoml
pushl
push
insb
lods
adc
push
xlat
rcrb
movsl
fldt
cld
popa
add
pop
dec
adc
xor
and
rclb
ret
inc
dec
je
jnp
sub
pop
repnz
aaa
loop
test
aas
xchg
lods
lods
leave
orb
jge
inc
inc
and
in
sbb
xchg
jnp
jbe
sbb
jno
add
or
mov
outsl
or
dec
sbbb
xchg
or
or
pop
xor
ss
or
ljmp
call
jge
adc
es
in
inc
in
mov
movb
and
scas
or
data16
test
adc
bswap
icebp
mov
icebp
jg
bound
jbe
xor
out
xor
rcrl
pop
mov
ret
jl
int3
mov
pop
push
mov
ficompl
test
mov
test
lret
out
adc
dec
bound
aas
pop
and
dec
xchg
dec
xchg
bound
mov
ss
in
mov
es
inc
cmp
and
outsb
out
rolb
cmpsl
xor
xor
movsl
push
xchg
sbb
sahf
loope
inc
xchg
pop
imul
add
mov
lret
mov
int3
push
fstpt
enter
add
pop
jo
push
addr16
jl
xlat
mov
jns
fcompl
dec
push
sbb
faddl
in
stc
das
mov
sub
xchg
push
repnz
stos
mulb
pop
fsts
jbe
enter
dec
xor
imul
cld
cmp
jno
aaa
rclb
add
fimull
pop
jns
and
mov
int
dec
or
cmpsb
roll
cwtl
ja
sbb
adc
xchg
and
jl
jmp
repz
push
je
in
insl
fdivl
popf
or
lods
inc
mov
pop
add
mov
mov
cli
or
lret
inc
rcll
mov
fdivrs
adc
pop
sbb
pop
fsubrl
mov
xchg
mul
lods
and
dec
fisubrl
pop
int
in
ror
rcrb
fwait
lock
mov
pop
push
les
inc
out
and
aas
add
cli
pop
ss
dec
cmp
pop
fs
xchg
mov
add
mov
call
pop
test
out
push
int
bswap
shrb
loopne
add
add
dec
insl
xchg
stos
mov
mov
pop
mov
mov
or
mov
mov
add
ja
in
bound
int
out
pop
inc
cmpl
pop
mov
mov
dec
lods
push
xchg
mov
orb
es
push
scas
or
sarl
jge
dec
int3
jno
mov
mov
cmpsb
push
dec
stc
jg
call
hlt
mov
mov
stos
or
mov
pop
fbstp
cmp
push
push
enter
rolb
dec
stos
cltd
jnp
xchg
push
cmpl
ret
pop
dec
or
js
mov
xchg
aad
pop
pop
push
cmc
mov
dec
dec
outsl
jmp
aad
and
dec
or
in
jle
and
std
out
test
popl
add
push
xchg
sbb
mov
add
pop
xchg
adc
pop
ret
das
fnstsw
push
cmp
inc
into
shlb
xor
icebp
sbb
insb
rcr
pop
fnstsw
test
add
cld
sbb
mov
mov
ds
daa
mov
imul
pop
mov
out
loopne
imul
mov
or
and
adc
jbe
outsb
lods
lret
push
shrl
jp
std
mov
push
xchg
inc
ret
and
pop
jns
cmpsb
movsl
pop
faddl
add
jbe
es
fadd
and
adc
inc
xchg
cmpsl
data16
scas
add
mov
subl
and
imul
pop
idivb
ret
jbe
sbb
ss
insl
mull
inc
mov
sahf
addb
adc
push
mov
mov
out
mov
cmp
popa
jno
jno
cmp
test
xor
jge
fsubl
nop
mov
push
mov
fmull
mov
je
or
or
mov
mov
in
les
jno
jecxz
push
lret
pop
mov
push
in
stos
fldcw
in
out
sub
pop
repz
imul
xchg
shrb
in
in
scas
mov
jecxz
mov
cmp
jns
push
addb
int3
push
orl
pusha
push
xchg
lods
rolb
add
xchg
call
inc
xchg
or
dec
in
movsb
inc
xchg
sbb
pop
xorb
sti
popf
stos
pop
xor
push
ja
fucomp
sti
test
pushf
call
je
sbb
inc
sbb
sub
es
repz
aas
fbstp
pop
aaa
pop
xchg
dec
mov
or
xchg
pop
frstor
xor
sbb
jge
int
leave
dec
xchg
xor
push
mov
pop
hlt
xchg
insb
inc
leave
shl
mov
xor
inc
mov
imul
bound
push
jp
jno
jmp
dec
inc
sub
or
loop
hlt
inc
js
pop
cmp
or
mov
cmp
adc
and
scas
fucomi
ret
icebp
mov
stos
sub
adc
test
jmp
sbb
inc
imul
push
cmpsb
movsb
imul
ds
icebp
jns
adc
jge
adc
fcomps
gs
hlt
jb
inc
xchg
pop
and
push
popa
andl
stc
lods
sbb
jg
mov
or
and
push
adc
call
push
dec
mov
inc
repnz
je
rcrb
cld
and
imul
daa
sbb
or
xlat
in
pushf
dec
imul
sbb
mov
inc
fidivrs
push
sub
fsts
test
jno
cmp
add
lods
lahf
int
xor
fdivs
pop
add
jg
jmp
in
push
scas
ret
push
into
aas
aad
lock
jno
in
insl
cmc
je
das
push
mov
scas
cs
adc
push
inc
hlt
xchg
imul
jle
jmp
aaa
movsl
add
mov
in
sub
xorl
test
movsb
pop
ds
jge
int
xchg
sahf
out
arpl
xchg
stc
add
mov
pop
fisttps
bnd
xor
sbb
notb
cwtl
addr16
in
aaa
cmp
push
push
mov
dec
pop
and
aas
test
and
sahf
out
inc
in
stc
and
mov
mov
repz
lods
stc
sbb
test
mov
es
cmpl
out
sub
sub
imul
cld
sahf
adc
ficoms
cmp
push
jmp
xchg
in
push
adc
loop
cmc
out
scas
sbb
sub
mov
jecxz
cs
imul
adc
cmp
pushf
out
int
inc
add
decl
lods
add
jb
jl
dec
mov
stos
xchg
sti
mov
stos
pusha
lods
jno
sahf
add
mov
lret
ljmp
mov
sbb
cli
adc
cltd
mov
pop
in
call
dec
cmpsl
push
movsb
dec
jecxz
jmp
adc
stos
mov
lret
jecxz
xchg
aam
xchg
mov
mov
sti
cmp
cwtl
mov
or
inc
decl
inc
dec
imul
loope
mov
movsl
fistps
imul
clc
or
cmp
dec
adc
fcoml
mov
sbb
xchg
lock
mov
adc
imul
and
adc
in
imul
out
clc
cmp
push
cmp
and
rcl
shr
les
mov
inc
sbb
mov
dec
mov
cmpsb
dec
dec
dec
mov
pop
orb
call
dec
stc
cmpsb
add
pop
aaa
out
cmp
xchg
ja
cmpsl
out
push
mov
mov
out
xchg
popf
sbb
cltd
jecxz
test
es
test
scas
sbb
xchg
mov
mov
jae
or
imul
test
push
cmp
pop
mov
xorl
pop
fdivrp
in
push
mov
xor
scas
leave
inc
pop
push
js
test
scas
imul
scas
sbb
daa
and
fisubrs
mov
repnz
loope
mov
fdivrl
sbb
popf
paddusb
mov
mov
xor
sub
pop
adc
jne
sbb
jbe
dec
rcll
aam
push
shll
cmp
mov
cmp
aam
ret
scas
sbb
fdivr
push
in
test
lea
ljmp
lea
push
xor
pop
adc
lock
mov
popa
mov
gs
or
dec
mov
and
subb
adc
sbb
sub
inc
mov
out
and
xor
push
mov
out
jecxz
dec
or
sbbl
aad
mulb
push
lcall
push
jb
xor
push
fbstp
lock
ljmp
repz
mov
cmp
rorl
gs
out
addr16
sbb
clc
les
push
cmpsl
xchg
xchg
sub
cmp
push
push
stos
xor
shlb
call
xchg
gs
push
jg
popf
adc
inc
mov
push
jle
jmp
jp
mov
inc
push
popa
mov
outsb
xor
dec
jg
pop
xchg
pop
ja
jo
lds
bound
sub
movsb
cmp
out
lea
mov
fisubl
cmp
nop
and
dec
or
dec
add
jne
xlat
mov
xor
movsl
jae
cmc
pop
lret
fwait
pop
test
mov
push
or
fdiv
pop
loop
mov
fldcw
loope
push
jg
aad
inc
scas
imul
out
fildll
sub
push
xchg
lahf
push
sti
dec
loopne
sbb
pop
fbstp
xlat
mov
jbe
cmpsb
and
pop
xchg
xchg
les
lock
data16
adcl
mov
pushf
xor
mov
xor
mov
insl
xor
adc
mov
cmp
dec
inc
mov
cmp
xchg
in
and
xchg
jnp
into
adc
cwtl
push
push
mov
jecxz
jle
out
out
mov
pop
stos
mov
subb
cli
mov
xchg
jle
stc
or
sbb
jmp
xchg
mov
inc
lahf
add
out
adc
in
inc
js
mov
pop
icebp
push
in
push
pop
in
int
or
imul
cmp
mov
shlb
adc
scas
lea
int3
jge
into
sub
fbstp
push
cmpsb
sbb
test
mov
xor
enter
pop
cmp
stc
push
in
xlat
arpl
and
xlat
les
insb
xchg
sub
mov
sub
jmp
sti
out
mov
sub
ja
jns
sti
and
repnz
mov
mov
and
test
popf
add
jp
popf
std
jb
ret
loopne
filds
sub
cmp
xor
fildl
jbe
dec
add
bound
fsubrs
icebp
inc
out
jg
dec
clc
xor
test
xor
cmpsl
adc
add
lock
xchg
mov
pop
dec
sti
lret
test
scas
adc
dec
cmpsl
sbb
das
in
cwtd
pop
test
out
ret
dec
in
jnp
jns
arpl
mov
xchg
into
outsb
jne
loop
push
sarb
mov
clc
in
ljmp
jmp
jae
mov
and
jb
xlat
lock
pop
and
rcrb
stc
lock
dec
sbb
jno
cmp
lcall
lahf
inc
jbe
fwait
pop
mov
inc
xchg
push
loopne
adc
ss
jns
aam
addb
subb
scas
movsl
push
xchg
popf
outsb
cmc
lea
out
pop
ret
lahf
neg
sbb
mov
adc
mov
fstpt
scas
push
cmp
xchg
and
inc
div
int3
in
test
shll
cmp
xor
fdivr
shll
pop
inc
ret
int
sub
xchg
fsubrp
sbb
jbe
stos
insb
pop
fsts
loopne
test
mov
subb
jae
cwtl
in
arpl
mov
jge
sub
xor
push
fmull
adc
daa
scas
sarl
inc
mov
lcall
call
int
xchg
iret
fstl
loope
xchg
jb
pop
inc
or
sub
xchg
stos
push
add
ret
outsl
lcall
je
mov
andl
shrb
into
cmpsl
jp
inc
lods
test
dec
imul
xor
fs
jne
jmp
adc
popf
sarl
pop
aas
pushf
pop
adc
xchg
mov
insb
mov
fdivrs
andb
add
inc
mov
pop
es
sahf
repz
je
ss
cmpsb
mov
cmp
fcmovnu
ret
push
xor
jno
mov
gs
enter
lds
ja
mov
mov
adc
iret
jo
inc
ss
cmpsb
sbb
push
ret
mov
jb
jg
jle
xchg
out
rcrl
les
pushf
inc
mov
inc
inc
xor
or
xchg
aad
in
push
call
inc
cmc
or
mov
loope
lret
fadd
push
stos
mov
das
push
push
xchg
fwait
insl
xor
rclb
cli
and
movsl
addr16
sbb
xor
jo
jecxz
jne
andl
out
jo
outsb
mov
in
notl
mulb
lods
subb
lret
mov
mov
idiv
dec
iret
and
popa
sub
scas
push
mov
aam
ret
mov
xor
push
leave
in
aas
mov
pop
cmpsb
inc
cmp
push
push
in
sbb
push
out
lock
jmp
fwait
std
lds
in
loopne
ss
push
xor
lds
pop
daa
inc
je
repnz
inc
cmp
arpl
test
pop
push
add
sbb
and
mov
sahf
pop
outsl
je
pusha
rorb
movsb
jne
in
outsl
mov
lock
pop
cld
push
pop
outsb
test
fwait
dec
and
inc
inc
inc
push
ret
stos
push
rcr
xchg
jge
dec
adc
push
out
test
cwtl
pop
sbb
aas
xor
add
mov
sub
ret
int
and
mov
and
sub
push
xchg
inc
in
mov
cli
pop
cmpsl
lods
sbb
cmp
sbb
call
popa
inc
mov
andl
dec
fimull
add
mov
out
xchg
sbb
dec
in
mov
jp
inc
es
pushf
leave
mov
mov
sub
cld
lods
jmp
int3
lods
out
outsl
repnz
lds
sarl
dec
push
mov
fistps
enter
pushf
ret
dec
cld
cltd
daa
test
xor
loope
jecxz
sahf
jg
mov
xor
pop
jno
pop
adc
pushf
inc
pop
mov
dec
sub
scas
mov
repnz
cmp
lods
jp
in
pop
data16
rcr
push
sub
pop
mov
xor
mov
out
shll
or
push
pop
xchg
push
fwait
stos
mov
mov
out
iret
addl
mov
push
aaa
cmp
ret
jbe
popf
ficomps
inc
dec
sub
gs
sub
mov
xor
cmc
push
jo
ret
mov
testb
test
sub
mov
sub
mov
xchg
and
jmp
scas
push
jecxz
int3
in
mov
aaa
add
daa
jp
mov
inc
cmp
int3
sub
adc
mov
push
ror
dec
xchg
inc
mov
les
mov
cmp
lods
adc
mov
inc
xor
mov
fists
dec
bound
das
jns
cmpsl
movsl
mov
inc
jmp
lret
add
dec
test
mov
lods
dec
cwtl
pop
lods
pop
arpl
mov
jne
loop
addr16
pop
jecxz
sarb
in
arpl
dec
leave
cmpsb
loop
adc
push
in
gs
mov
repz
or
adc
mov
pop
pushf
loopne
or
mov
daa
mov
jp
xchg
test
jle
cmp
sti
or
and
pop
mov
cli
xchg
push
addr16
rcrl
xor
cs
stos
outsl
stc
movsb
call
and
xchg
cmp
into
sub
xor
xchg
fs
pop
js
cmp
scas
stos
push
push
in
lea
pop
loopne
movsl
and
test
loop
cmp
cmpsl
fdivrs
pop
cmp
jne
push
loop
and
xchg
cmpsb
jmp
mov
cwtl
fs
mov
fstp
or
dec
mov
rolb
sbb
xchg
fisttpll
dec
cmpb
jo
mov
aad
out
pop
ja
arpl
sbb
xor
bnd
jo
out
and
lea
inc
popf
push
adc
shlb
andl
ret
or
fimull
mov
fs
push
xchg
add
pop
mov
jl
lods
sbb
in
lock
pop
data16
lea
je
stos
xor
dec
das
rcll
popa
fwait
mov
gs
lahf
sahf
mov
pop
outsb
sbb
stos
sbb
sub
das
xor
cmp
inc
lods
sub
push
dec
hlt
nop
mov
fwait
je
sub
icebp
jg
lds
testl
lea
in
pop
fbstp
cmp
add
cmp
das
fadds
das
mov
pop
sbb
lods
or
mov
push
aaa
in
fmuls
inc
push
in
pop
aam
pop
mov
arpl
or
adc
out
mov
outsb
rcll
pop
add
out
adcb
out
adc
jp
add
inc
shl
into
mov
js,pn
adc
push
dec
ja
inc
xchg
or
iret
outsl
mov
hlt
inc
and
or
and
lret
cs
ss
outsb
sahf
and
rcl
add
jo
inc
fsubl
adc
dec
push
sbb
into
xchg
test
std
jp
mov
jbe
in
imul
mov
mov
jae
out
jge
fdiv
fcmovnb
jnp
hlt
dec
fnstcw
test
sti
mov
cmp
push
sahf
popa
leave
xor
in
jae
or
scas
js
ja
mov
fnstcw
sbb
sub
jp
sub
mov
pop
lock
inc
lahf
out
add
xlat
lds
pop
sbb
dec
pop
push
outsb
ja
rorl
xor
std
jns
mov
imul
mov
dec
and
ds
lods
jl
fildll
cltd
fs
icebp
mov
mov
ss
das
dec
cmp
lret
aas
inc
icebp
int3
mov
fidivl
sub
push
scas
leave
dec
js
frstpm(287
add
lock
popa
adc
das
sar
loope
cmp
push
dec
adc
hlt
cld
fstps
inc
cld
pop
xchg
cmp
lea
mov
pop
fwait
xchg
and
push
outsb
lret
pop
cmpsl
xor
pop
sbb
jl
push
dec
adc
or
arpl
jl
pop
sbb
pop
sar
sbb
cmp
enter
enter
cli
das
adc
sbb
jae
dec
push
push
sbb
daa
push
sub
pop
movsb
xchg
add
ret
mov
push
mov
mov
mov
hlt
cmp
adc
mov
cmp
clc
les
cmp
mov
dec
cmpsb
std
push
xchg
or
lock
sub
je
sub
or
cmc
popa
mov
adc
jne
jo
xchg
stos
push
cmp
mov
js
add
pop
jge
aam
fildll
mov
sub
jecxz
les
mov
inc
sbb
adc
fists
imul
in
insb
sti
test
stos
outsb
dec
mov
sbb
mov
in
lods
push
add
push
dec
mov
dec
dec
clc
idivb
cmp
lods
movsb
in
sarl
sbb
sub
jp
xchg
mov
fisubl
sbb
jbe
xlat
jns
xchg
sbb
sbbl
add
jge
jge
fstpl
mov
push
in
jae
insl
jb
jg
popa
cmpsl
rcrb
dec
and
stc
test
dec
loopne
mov
out
or
mov
push
mov
lcall
lods
int
push
jae
hlt
subb
gs
pop
dec
add
cmc
mov
les
in
add
or
loope
cmc
repz
sub
stos
fcoms
dec
adc
icebp
xlat
mov
push
jno
inc
lahf
fcomps
dec
test
ja
sub
bound
inc
ret
dec
in
clc
and
dec
xor
xor
js
ret
shll
sub
hlt
adc
jne
push
das
add
pop
dec
sahf
and
fstl
dec
sti
ret
sub
ret
gs
mov
hlt
jg
mov
pop
and
out
repz
cmp
cmp
repnz
inc
nop
pop
or
cmc
dec
jp
je
inc
fwait
and
push
aaa
sbb
fistpll
mov
imulb
adc
or
test
loop
xchg
out
pusha
stos
jp
fstps
sbb
sahf
rcr
jge
jle
jecxz
push
add
mov
mov
sbb
out
cmpsl
mov
sbb
mov
mov
sub
pop
lret
xchg
mov
data16
mov
mov
pusha
fidivs
push
rcrb
cs
or
mov
fistpll
add
jge
jo
dec
cwtl
jno
nop
push
sbb
test
or
push
out
xor
adc
and
push
sub
insb
call
mov
addr16
call
xor
mov
stos
sub
lahf
cmp
cmc
iret
jno
out
nop
imul
xchg
inc
jmp
mov
jle
pusha
push
je
adc
cli
cltd
push
out
jb
push
adc
mov
adc
pushf
dec
or
ret
sti
jno
imul
mov
adc
aaa
lea
xchg
movl
iret
or
ja
mov
in
push
jmp
jbe
fs
rcll
add
push
aas
xchg
adc
adc
pop
out
xor
jg
data16
xchg
mov
mov
into
sub
mov
repz
mov
test
mov
stos
dec
mov
push
push
outsl
hlt
outsb
lret
adc
pop
fidivs
aaa
shlb
mov
dec
cwtl
xchg
js
out
add
adc
and
int
ficoms
fsubl
imul
mov
push
inc
xchg
cs
outsl
je
xchg
or
cli
aad
mov
in
mov
aaa
sub
pop
cltd
inc
dec
sahf
and
push
mov
test
jnp
sub
je
adc
aam
outsl
dec
push
mov
loope
fstl
movsb
jns
fs
loop
sub
in
jne
out
push
sub
mov
iret
lock
mov
xlat
es
je
sahf
sub
jmp
out
sbb
mull
push
int3
lcall
adc
cmpb
loope
frstpm(287
mov
jecxz
inc
insl
dec
adc
jp
jo
imul
icebp
pop
push
sub
inc
xchg
and
add
push
mov
pop
hlt
out
push
std
int
mov
dec
cli
push
adc
sub
or
lahf
adcl
pop
sbb
in
lods
cld
sub
jmp
adc
shll
add
cmp
sub
mov
bswap
cwtl
and
inc
push
aas
mov
inc
icebp
out
out
jno
cmpl
push
loope
sub
inc
cld
cmpsl
jecxz
movsl
movb
lret
inc
fisttpll
push
mov
insb
mov
xchg
pop
mov
sub
adc
mov
js
cltd
push
pop
mov
jae
mov
repz
mov
es
push
xchg
addr16
jg
out
cli
das
lea
and
loop
es
cmp
fst
adc
jbe
cli
mov
gs
loope
aad
cmp
mov
pop
mov
shlb
sub
or
or
lods
and
fldt
cld
mov
test
dec
lds
xor
dec
in
int3
orb
nop
cs
stos
mov
push
jb
nop
or
imul
outsb
add
enter
pop
sarb
mov
decl
pop
push
xor
adc
loop
test
cmp
js
xor
into
dec
popa
mov
rcll
ret
test
dec
sub
jno
mov
jl
fldcw
add
setne
adc
jo
jmp
xchg
shlb
lock
mov
mov
fsubr
lcall
in
mov
jb
add
or
popf
dec
loop
mov
stos
pop
or
mov
xlat
mov
dec
lds
vmaxss
jo
push
pop
pushf
movsb
and
cwtl
sub
pop
adc
mov
lock
fidivs
mov
inc
in
mov
sbb
sub
mov
aad
testl
cli
xchg
and
call
pusha
sbb
cmp
mov
or
loope
and
lds
pop
sbb
gs
out
inc
push
inc
jo
sbb
cltd
cmp
fisttpl
orb
xlat
mov
fsubrl
out
mov
inc
cli
daa
pop
push
xor
das
js
es
pop
xchg
stos
push
or
or
leave
rcrl
mov
mov
or
arpl
mov
ds
popa
imul
shrb
mov
add
jae
pop
fisubrs
push
fbstp
xchg
or
xor
leave
mov
fcomp
repz
hlt
xchg
push
int
mov
inc
clc
add
inc
ret
mov
cli
imul
call
adc
xor
subb
imul
mov
push
adc
inc
leave
ss
jl
jae
mov
xor
mov
mov
shlb
mov
or
push
pop
pushf
xor
ret
inc
mov
scas
jns
mov
insl
mov
and
test
xchg
hlt
add
xchg
rcrb
ja
or
shrb
and
imul
inc
imul
mov
xor
add
nop
shl
mov
fistps
fcmovb
test
mov
jbe
xchg
je
mov
jae
jns
test
adc
scas
stos
stc
mov
xor
in
jge
scas
add
and
mov
cmpsb
mov
rorl
repnz
out
frstor
fst
fs
aam
xlat
pushf
pop
dec
push
mov
mov
stos
lahf
add
les
dec
aas
mov
mov
push
das
fisttps
jmp
iret
inc
jae
inc
mov
cmpsl
data16
loop
jae
adc
scas
lock
sbb
outsb
mov
or
xor
popa
in
xchg
dec
popf
andnps
jae
repnz
rcrl
cltd
lret
pop
ret
jle
roll
cmpsb
or
adc
sbb
pop
inc
fdivrs
lcall
scas
inc
int3
je
test
pop
and
loopne
pop
jmp
fmuls
adc
or
icebp
js
sbb
bnd
aas
lods
add
pop
mov
aas
pushf
cmpsl
adc
add
mul
nop
push
enter
jae
shl
pop
xor
stos
inc
out
into
xchg
jno
sbb
aam
pop
fstpt
cs
and
inc
std
loope
jbe
test
push
sub
repz
lahf
pop
in
fwait
js
push
faddp
jp
push
cmpsb
dec
test
lods
inc
xchg
xorl
cmp
pop
mov
add
mov
mov
sbb
and
test
sti
lcall
push
mull
aaa
cmp
rolb
ljmp
adc
pushf
lock
xchg
xchg
pop
pop
dec
inc
popf
sti
jmp
cwtl
sbb
fld
fsubrl
cmpsb
loop
cmpsb
push
je
mov
adc
inc
adc
sub
fimull
add
es
in
push
xor
stos
jb
mov
stc
mov
push
and
jns
jo
bound
jecxz
xor
mov
rclb
scas
fcomp
popf
add
ret
jno
in
mov
and
pop
into
jge
jno
pop
arpl
dec
std
cmpsb
lea
lock
repnz
loopne
xor
out
fimuls
mov
scas
sbb
rcr
sti
mov
loopne
loope
ret
aaa
cmp
or
push
sarl
adc
iret
jp
or
stos
mov
adc
lds
xchg
insb
push
mov
adc
xchg
xchg
add
aam
lret
loopne
imul
jmp
mov
pop
push
in
mov
xchg
arpl
xchg
push
and
js
imull
sahf
sbb
enter
rcll
lods
sbbl
mov
cld
mov
xor
out
test
mov
xlat
lahf
pop
cmp
fldt
lea
into
adc
nop
sub
loope
rep
test
cmp
mov
push
jae
inc
mov
hlt
aad
sti
dec
push
or
xor
push
daa
dec
jecxz
lock
adc
jg,pn
xchg
out
and
xchg
mov
mov
movsb
aaa
pop
and
ljmp
xchg
push
enter
aad
mov
cmp
adc
ret
aaa
popa
mov
test
pop
sti
aaa
xchg
ss
movsl
xor
fistpll
push
imul
pop
xadd
jl
in
fidivs
aas
dec
sahf
or
sbb
bound
fs
mov
fcmovne
lcall
xor
push
inc
mov
pop
xor
add
test
lods
dec
sub
mov
mov
mov
add
cmp
adc
fmull
addr16
dec
jns
imul
into
adc
addl
int
push
xchg
pop
or
and
add
ror
cs
stc
xor
inc
dec
in
push
cmp
sbb
jns
mov
push
int3
adcl
insb
adc
out
dec
push
call
das
mov
setnp
clc
xor
pop
mov
adc
inc
fnstenv
aas
mov
lret
lods
or
or
in
insb
xorl
stos
incb
add
repnz
imul
insb
aas
pushf
cli
mov
mov
fcoms
jmp
cltd
or
jp
dec
add
outsb
mov
lea
cmp
loop
stc
ja,pt
dec
pop
push
lret
test
xchg
pop
sbb
and
adc
scas
pushf
mov
cmpsb
adc
arpl
push
sbb
mov
ds
sub
and
or
movsb
repz
or
lret
mov
push
push
andl
sub
adc
add
inc
jbe
push
jle
xor
test
mov
jns
sti
insb
sbb
lods
xchg
lds
imul
pop
mov
test
mov
mov
mov
mov
dec
fld
jle
cmp
push
pop
cwtl
xchg
mov
push
mov
cmp
xchg
lcall
sbb
mov
push
xchg
mov
enter
xchg
or
sar
arpl
push
icebp
pop
dec
scas
iret
int3
mov
mov
fidivrl
mov
jle
int3
insl
jbe
or
cs
movsb
or
lds
add
iret
negb
fcoml
sbb
xchg
and
pop
test
xor
push
repz
sub
in
jo
mov
sbb
cmpsl
scas
repnz
sarl
daa
mov
pop
insl
roll
negl
adc
mov
push
ds
out
pop
imul
stos
cs
out
gs
hlt
mov
in
scas
xor
and
in
stos
cmp
mov
xor
jo
push
add
jae
daa
mov
sbb
add
stos
push
sbb
push
jmp
out
xchg
xor
lahf
fs
shlb
push
inc
pushl
pop
std
mov
imul
ficomps
and
xor
addr16
leave
push
jg
jnp
push
xchg
in
loopne
icebp
adc
and
jns
scas
mov
add
pop
push
mov
mov
push
xchg
cmp
jno
pushf
lret
adc
in
call
jp
push
icebp
repz
mov
xor
mov
icebp
mov
mov
mov
nop
loope
dec
je
xchg
movsl
mov
pop
std
lahf
in
loopne
cld
je
outsl
dec
jmp
es
sub
xchg
sub
jns
ss
cltd
cmpsb
bound
call
jge
cld
sarb
push
bound
lock
fistps
ljmp
lock
test
mov
sbb
xchg
insb
adc
movsl
ss
push
lahf
insb
lret
xchg
and
xor
fisubs
out
scas
xchg
cli
iret
inc
jne
jne
cmpb
ror
insb
int3
cld
mov
jle
jb
inc
aas
push
push
lret
test
sti
faddl
ljmp
adc
mov
lea
movb
and
jmp
scas
xor
movsb
sar
scas
fucomi
loopne
out
jge
jnp
fdivrl
lods
dec
lcall
pop
jle
addl
lret
lock
loopne
or
push
andb
rcrb
cmc
hlt
into
and
fcmovne
cmpsb
fwait
int3
rcrl
popf
jns
pusha
addr16
jae
sub
int
das
loope
ret
or
ficomps
push
mov
aad
in
xchg
int3
xchg
loope
xor
mov
loop
ljmp
push
out
jecxz
ds
out
movsl
mov
dec
mov
push
fcomps
dec
lahf
cltd
sub
out
mov
jp
mov
xchg
pusha
sub
repnz
std
ret
inc
les
shlb
popf
bound
mov
test
add
cmp
sar
popa
sbb
mov
pop
sub
or
xchg
push
sbb
lret
fistpl
mov
xorl
sub
hlt
movsb
icebp
push
adc
lahf
xor
lods
sbb
mov
les
rorl
or
pop
sub
xchg
and
cmp
and
ffree
jae
das
push
push
inc
mov
outsb
testl
inc
addl
lret
int
mov
sbb
ret
out
cltd
mov
jg
scas
out
outsb
push
push
mov
int
push
cmp
js
xchg
icebp
repz
incl
sbb
gs
inc
arpl
fstpl
test
sahf
frstor
sbb
jl
add
nop
push
xchg
mov
mov
pop
in
cltd
cmp
push
pop
lock
sbbl
mov
into
pushf
cmp
jle
nop
mov
cmp
jbe
adc
nop
das
out
sbb
mov
call
and
xor
in
clc
loopne
out
dec
jl
cld
sub
cs
clc
cmp
adc
lock
sub
jne
inc
mov
aas
lret
sbb
jge
out
ficoms
ljmp
insb
inc
inc
pop
popf
imul
jecxz
jmp
pop
iret
movl
sbb
add
dec
cmp
shrl
sub
jmp
mov
xor
sub
mov
loop
sub
sahf
mov
mov
aaa
ror
mov
cltd
rcrb
popf
ljmp
bound
aaa
jns
pop
outsb
cmp
jle
cltd
sub
cltd
add
pop
jecxz
lret
push
pop
sbb
mov
stc
movsl
mov
js
sbb
outsb
mov
das
gs
adc
and
lcall
scas
mov
faddl
and
decl
dec
push
idivb
mov
push
fwait
mov
fsubrs
inc
pop
cmp
push
and
stos
in
aaa
pop
inc
out
sub
sbb
xor
pop
add
mov
mov
pop
push
jno
cwtl
jle
data16
rolb
xlat
in
ret
out
inc
notl
mov
add
pop
xor
in
cwtl
shrl
pop
push
pop
movsl
cwtl
aam
inc
je
inc
stc
icebp
out
stc
cmp
cmp
mov
jno
sub
jecxz
repz
inc
sub
xchg
rcl
popf
cmp
mov
push
jl
push
cmp
repnz
mov
lcall
push
sbb
fs
inc
std
das
fbld
ret
loop
es
dec
adc
daa
add
pop
inc
call
adc
rcr
mov
and
call
dec
decl
cwtl
testb
jne
cltd
imul
idivb
in
lret
loope
stos
dec
movsb
jge
push
andb
xor
cmp
es
and
lret
push
xor
sbb
sbb
jl
and
pushf
loop
mov
mov
sbb
inc
push
push
aad
mov
sbb
lock
or
sbb
in
xor
sbb
movnti
lret
test
adc
cltd
test
pop
movb
pop
repnz
fstps
push
movsl
push
cmp
ss
pop
in
testl
popf
sub
daa
push
xchg
jb
push
cmp
sbb
negl
mov
mov
adc
rcr
mov
fdivrl
xchg
lods
xor
inc
pop
subb
subb
inc
inc
subb
out
or
enter
push
adcb
pop
sbb
jle
loope
mov
cmpsb
jo
and
xchg
mov
or
mov
mov
inc
and
jne
jle
daa
out
xor
lret
hlt
mov
rorb
mov
fsubs
adc
push
mov
loope
dec
loope
push
xchg
stc
scas
sti
iret
dec
xor
mov
jno
sbb
sub
mov
movsb
cmp
pop
jmp
jae
mov
jp
dec
and
lods
push
mov
shl
xor
jae
lds
inc
and
mov
inc
jne
insb
pop
mov
add
stos
mov
sub
dec
in
inc
mov
test
jg
jg
sbb
mov
test
pop
lds
out
aam
lods
rcrb
frstor
adc
leave
jecxz
jb
dec
enter
add
push
sbb
inc
fbld
stc
stc
imull
cmpsl
push
pop
fwait
add
pop
xor
mov
in
stc
das
mov
mov
data16
into
loope
adc
lea
adc
push
mov
xor
icebp
shll
jno
into
test
in
test
mov
pop
ljmp
adc
daa
dec
ret
xchg
shll
sbb
aaa
scas
in
lock
push
xchg
rorb
jb
jl
push
inc
lods
loopne
pushf
dec
mov
int3
andl
xor
jecxz
lcall
mov
jbe
lea
inc
dec
jae
jne
aam
xchg
and
sbb
adc
insb
cmpsb
lahf
lahf
lds
mov
mov
into
loop
or
push
and
sbb
pop
out
mov
mov
addb
sbb
cmp
fildll
fld
call
cmp
scas
pop
fstl
pop
inc
in
lret
out
mov
jne
dec
or
faddl
jge
ljmp
aad
mov
nop
xchg
leave
xlat
lods
fidivrs
and
rorb
xor
mov
and
push
or
pop
out
aam
lea
dec
xlat
pop
loopne
movsb
sub
sbb
mov
jg
lret
out
pop
cli
pop
lea
jp
adc
dec
adc
cltd
mov
sbb
rcrl
test
xchg
jp
xor
jecxz
cmpl
push
and
fisubl
mov
jge
in
pop
dec
xchg
lahf
mov
out
pusha
mov
frstor
in
gs
mov
jge
add
lock
movsl
insb
inc
paddd
adc
bound
and
jmp
imul
leave
xchg
outsl
ret
mov
ficomps
pop
xor
mov
push
cmc
dec
jne
push
sub
pop
jmp
shrb
clc
andps
sub
sub
pop
ficomps
pop
cmpl
loop
jne
mov
es
cmpsb
ret
sbb
addr16
push
or
es
hlt
sub
bound
jge
js
dec
dec
mov
push
lock
mov
inc
dec
movsl
push
dec
adc
pop
jmp
ljmp
mov
adc
and
mov
cmp
mov
jns
imul
push
cmpsl
add
in
aam
mov
stos
jl
jo
fsubrs
les
or
mov
cs
xor
xchg
dec
test
aas
jg
xchg
inc
mov
loope
movsl
push
sar
or
stc
xor
in
loope
ds
scas
in
xchg
js
mov
inc
rcl
fstpt
push
sub
cmpsl
push
cmpsl
gs
push
pop
dec
adc
pop
and
idivb
test
cld
push
clc
fiadds
mov
lods
in
lcall
bound
adc
or
leave
jmp
pop
sbb
and
push
mov
test
xchg
sbb
test
mov
xchg
pop
mov
das
mov
push
mov
loop
cli
scas
cmpsl
push
inc
pop
sub
imul
inc
sub
and
push
sar
and
stos
xchg
mov
push
push
nop
scas
lret
lcall
es
pop
mov
push
xchg
leave
dec
jmp
sbb
ficomps
mov
cmp
adc
inc
mov
xor
test
jnp
movsl
dec
xor
xchg
mov
and
mov
and
ficompl
mov
outsb
jp
loop
push
push
or
push
inc
incb
repz
push
in
and
scas
dec
test
push
push
movsl
insb
scas
fisubrs
cmp
xor
mov
mov
jl
roll
mov
sbb
call
sbb
sbb
in
out
je
sahf
mov
repnz
and
push
mov
out
fcoml
flds
mov
jmp
push
cld
hlt
inc
int
dec
hlt
adc
mov
inc
inc
cmpsb
mov
xor
lock
add
sti
xchg
cmp
pop
xchg
jg
mov
jmp
movsb
mov
inc
cmp
adc
subb
mov
shlb
and
dec
popa
and
cmpsb
out
lods
push
cmp
adc
push
adcb
sub
adc
in
pop
mov
in
loopne
cmp
sarl
push
add
fstps
jmp
xchg
lret
jo
int
cwtl
stc
adc
test
dec
xor
pop
and
cmp
add
inc
ret
xlat
push
push
js
movsb
rorl
psubq
test
push
xor
or
pop
div
adc
stos
jecxz
lret
leave
jmp
xchg
xor
jecxz
pop
and
std
sarl
xchg
idivl
out
fistpll
jle
pushf
add
inc
xor
push
mov
fs
xchg
mov
out
inc
cltd
in
jl
adc
sbb
xor
cmovne
jo
mov
in
pop
mov
int3
fistps
add
leave
dec
inc
jns
mov
mov
lea
stos
jb
jb
out
mov
enter
lods
xor
sbb
sbb
test
dec
push
repz
shll
mov
sbb
loope
pop
dec
addl
pusha
mov
lret
cmp
leave
push
movsl
pop
mov
sti
jno
fwait
and
inc
jg
jbe
fcoml
push
inc
push
add
jl
fs
add
sub
aaa
cmp
and
xchg
or
inc
inc
inc
fwait
arpl
and
and
mov
in
insl
push
inc
mov
add
cs
xchg
mov
pop
fisttpl
enter
rcrl
mov
iret
or
dec
xchg
mov
jb
sub
je
ds
fdivrp
jecxz
sub
fs
xchg
lock
or
in
jo
enter
stos
out
push
leave
mov
movsl
and
mov
fwait
aam
pop
mov
into
push
jno
cld
test
loopne
imul
xchg
repz
xor
ror
mov
pop
inc
ds
mov
scas
pop
dec
jg
sbb
pop
sub
mov
fstpt
add
repnz
sahf
jbe
pop
and
fdivl
add
ja
outsb
mov
or
shrb
push
jbe
hlt
shrl
dec
jns
insl
out
cmpsl
addb
jg
cltd
xchg
sahf
xchg
pop
dec
jp
dec
arpl
arpl
pop
and
push
pop
mov
push
popf
bound
mov
adc
fidivrs
stos
jno
mov
call
add
leave
fs
mov
icebp
iret
mov
sub
je
pop
leave
or
sbb
sub
cltd
push
and
vmread
pop
push
je
call
mov
mov
lea
adc
insl
adcb
outsb
cld
mov
xor
out
jmp
mov
fstps
fistps
push
xchg
sub
adc
push
xor
cltd
aas
pop
mov
adc
lcall
icebp
jne
jbe
rolb
xor
lret
push
sub
fdivl
xchg
mov
push
pop
xlat
inc
inc
daa
jl
fidivrl
push
cmp
sub
dec
xor
hlt
scas
lods
pop
mov
mov
je
inc
push
je
sarb
push
and
jnp
fstl
sub
dec
into
clc
push
inc
lods
adc
in
cmpl
mov
into
pop
shlb
xchg
xchg
xchg
jns
xor
push
cmp
pop
int3
xchg
or
xchg
mov
loop
add
jno
push
xor
or
bound
push
in
fstpl
xchg
aam
imul
ljmp
movsl
cmpsb
in
push
or
movsb
jb
jae
outsl
test
pop
push
shlb
fcmovu
pop
xchg
nop
test
fidivs
or
dec
adc
push
pushf
out
stc
enter
js
and
shl
push
jp
ja
sub
and
push
jg
out
sub
stc
dec
inc
xchg
sub
gs
add
push
in
rcrb
lea
xor
jo
imul
jno
out
mov
dec
insb
jae
fistl
hlt
dec
and
sub
jge
dec
loopne
or
and
dec
sbb
mov
pop
jae
notb
outsb
loope
add
scas
cmp
pop
push
inc
cld
mov
xorl
dec
jns
mov
subl
iret
daa
push
jp
gs
xor
and
adc
rolb
xchg
loopne
outsl
loopne
xor
cmpsl
mov
and
dec
push
out
push
mov
dec
lretw
enter
clc
fstpl
orl
add
jp
mov
xor
je
imul
imul
push
jge
fldt
stos
mov
fs
movsl
es
outsl
lea
aam
into
fisubrs
xor
stos
sti
xor
in
adc
outsl
jmp
cmp
mov
jb
pop
out
ss
cmp
sahf
mov
xorl
cmp
call
loope
add
icebp
inc
test
loopne
loopne
out
xor
push
repz
mov
cld
sub
fcomip
mov
sbb
int3
xlat
mov
sub
pushf
mov
and
push
ret
xchg
out
aaa
jbe
insb
sbb
dec
xlat
xchg
mov
shr
add
dec
pop
stc
rorl
mov
insl
lcall
mov
jbe
stc
sub
inc
or
fwait
imul
sbb
mov
mov
outsl
arpl
pop
int
xor
fldenv
or
sahf
inc
add
jns
mov
push
sub
xorl
sub
mov
mov
shlb
std
out
dec
xchg
mov
mov
push
or
push
push
mov
lret
xchg
lock
dec
push
out
sti
lahf
or
and
and
pop
daa
sub
or
imul
jbe
mov
cmp
jno
scas
push
lods
dec
andl
or
loopne
dec
test
cltd
mov
pop
cmp
cmp
mov
fdivrs
mov
daa
adc
outsb
jnp
jns
dec
out
and
pushf
imul
sbb
inc
lret
mov
xor
push
repz
imul
repnz
cmc
cmc
cwtl
andb
sbb
bound
xor
inc
data16
pushf
push
sbb
and
dec
jl
push
mov
mov
adc
xchg
mov
mov
xchg
fisttps
mov
dec
push
ret
sub
unpcklps
push
and
call
mov
pop
lret
sub
scas
add
insb
jno
mov
jns
mov
repnz
jo
or
ret
ficoml
mov
in
sub
rcl
mov
negl
scas
pushf
bound
dec
std
in
stc
xor
ljmp
insb
xor
mov
cmp
add
test
push
fcompl
add
int3
jle
aaa
xor
cmpl
in
lods
scas
stos
add
ret
fcmovu
popa
push
imul
add
pop
cmpsl
xor
les
lret
inc
push
cmp
loope
fdivl
data16
incw
jb
sbb
cmp
or
mov
insb
sbb
popa
stc
call
in
sti
add
enter
add
add
mov
add
clc
add
push
add
cld
lret
mov
stos
jl
cmc
jle
lahf
fnstsw
into
movsb
cmpsb
dec
sbb
sarl
push
adc
das
inc
xchg
leave
jle,pt
push
cmp
cmp
xor
add
cs
gs
push
sarl
xchg
inc
xor
test
push
jne
mov
lahf
inc
fs
fadd
mov
rclb
lea
cmp
jecxz
mov
aaa
push
push
enter
sub
into
mov
mov
ud0
push
test
jle
jns
loop
pop
cs
cmc
outsb
add
adc
imul
out
out
nop
adc
jbe
lods
xchg
xor
inc
outsl
jbe,pt
add
jbe
xchg
jno
test
sub
and
dec
lods
int3
dec
call
or
outsl
ja
dec
mov
add
or
loopne
fimull
mov
dec
mov
les
dec
loopne
or
mov
adc
cmp
pop
pop
movsl
lahf
out
iret
mov
outsb
outsl
aas
sbbb
push
push
dec
cmp
dec
flds
pop
fcmove
test
dec
f2xm1
ljmp
clc
and
sub
bound
insl
cli
int3
xchg
mov
fwait
stc
push
stos
cmp
sub
pop
and
notl
jmp
xchg
not
cmp
xchg
jmp
mov
in
adc
jmp
neg
cwtl
jbe
xlat
mov
fistps
push
sub
in
or
outsb
movsb
adcl
int3
push
movsl
mov
orb
lock
sub
or
adc
jb
mov
clc
fs
mov
insb
adc
fdivrl
mov
lock
jns
lods
pop
and
add
and
scas
adc
add
adc
push
enter
dec
out
mov
pop
dec
mov
aaa
fildl
cmp
jecxz
pop
outsb
icebp
sbb
jge
xor
inc
push
data16
aam
sahf
or
rorb
imulb
jl
imul
pusha
loopne
add
shlb
mov
push
xor
stc
shr
repnz
mov
and
dec
inc
enter
scas
or
hlt
lea
mov
scas
inc
fsubr
and
mul
clc
clc
sbb
adc
aas
lret
shrl
sbbb
push
divl
push
xchg
or
loop
pop
xor
jne
cmpsl
add
jo
mov
ds
negl
pop
cli
mov
bound
mov
and
iret
mov
jb
aam
movsb
dec
fstps
push
sahf
aas
jecxz
out
add
call
lret
fidivrl
cmp
fsqrt
movsb
in
sarb
sbb
popf
shr
popf
xchg
clc
in
lods
addr16
sub
dec
jns
gs
sbb
pop
pusha
data16
push
lods
sbbb
out
out
inc
push
or
xor
sub
add
xchg
je
xor
inc
pop
lods
imul
add
cmp
std
sahf
push
inc
push
sbb
out
pop
aas
sub
add
and
adc
adc
test
repz
jle
mov
xor
mov
mov
jne
mov
repz
loope
xchg
jne
mov
jne
mov
imul
push
pop
mov
push
cwtl
frstor
in
or
lea
inc
sahf
les
mov
clc
fcomps
cmp
sbb
pop
sub
jo
or
dec
ret
nop
sbb
jecxz
and
push
lahf
mov
subps
stc
rclb
in
lea
or
mov
dec
js
push
sbb
lcall
loopne
dec
sbb
fdivl
or
test
lods
fdivl
rorb
cmp
pushl
xchg
repz
inc
dec
mov
mov
or
cmp
fcoms
loope
xor
xchg
adc
movsl
into
mov
push
inc
div
ret
mov
inc
sub
sbb
hlt
and
mov
adc
repz
ljmp
sbb
pop
cmpsb
fsubl
outsb
fimull
movsb
dec
call
or
jecxz
clc
push
scas
xorb
xchg
ret
popa
fimuls
push
or
cmp
sbb
pop
movb
xchg
fistpl
shl
cs
adc
arpl
push
inc
cmpsb
iret
add
pop
fcoml
mov
lcall
pop
xchg
int3
sti
insb
inc
cmc
mov
repz
mov
dec
inc
cmpsb
or
in
out
and
pop
push
lret
arpl
lret
ficomps
pusha
mov
int3
fidivrl
fsubr
push
fisubl
repz
cmp
lahf
lret
xchg
adc
dec
and
xor
push
loop
mov
shr
ffree
stos
ret
icebp
adc
fistpll
lods
pop
and
dec
mov
sbb
pushf
cmp
mov
sub
fsub
js
cmp
cltd
loop
dec
dec
stos
add
ret
jno
aam
aad
jne
mov
inc
and
xchg
ficomps
loopne
xor
mov
or
ja
mov
das
and
popf
adc
iret
mov
xchg
lret
push
popa
stc
sahf
push
sbb
js
inc
fwait
jecxz
pop
lahf
scas
lock
jecxz
insl
sub
popa
and
pop
fidivl
jb
dec
test
push
jmp
pop
lods
popf
and
or
cmpsb
pop
xor
arpl
jp
push
loopne
xor
fdivrp
pop
outsl
testl
rolb
daa
test
mov
push
mov
xor
cmp
lahf
dec
push
imul
xor
dec
jbe
lahf
sub
fisubrl
or
mov
push
mov
mov
leave
je
mov
fimull
mov
jb
fisubs
repz
loop
movsb
add
sahf
xchg
lock
and
xor
call
mov
or
out
aas
jl
lcall
mov
adcl
fstpl
adc
movsl
xor
inc
dec
add
in
call
pop
jbe
fmull
dec
cmp
div
popa
push
cmp
push
insl
mov
in
insb
pop
xchg
movsb
adc
movsb
xorl
jmp
dec
add
mulb
push
push
movsl
or
push
add
fdivs
xor
ljmp
shrl
fwait
rcl
jle
lcall
repz
sub
cmpsl
push
daa
inc
dec
push
and
fadds
pushf
or
xor
sub
mov
xlat
rcr
sahf
repz
cmp
test
jo
jae
inc
pop
pop
jae
fstpt
push
add
add
nop
jae
lahf
lret
push
out
mov
lret
xor
decl
ret
push
sub
repnz
ret
dec
dec
imulb
in
and
insl
leave
xchg
dec
es
rcr
sti
push
xchg
mov
lods
ret
push
mov
cwtl
push
mov
jle
xor
out
imulb
daa
les
inc
int3
or
jle
jne
push
hlt
movsb
mov
push
fcmovnbe
iret
pop
jge
loop
inc
push
sbb
outsl
inc
je
call
xchg
sub
pushf
inc
sbbl
nop
dec
mov
mov
push
push
xchg
fildll
les
sub
icebp
mov
dec
adc
mov
pusha
mov
bound
adc
inc
add
inc
int
jmp
push
imul
inc
out
mov
je
out
in
flds
sbb
and
mov
aas
clc
push
fucomp
xchg
lret
inc
mov
and
jg
andb
push
sub
movsb
xchg
dec
je
pop
mov
pop
cmc
inc
sti
shrb
mov
lds
inc
add
lods
inc
and
shll
or
cmp
inc
mov
inc
mov
dec
cwtl
sbbl
scas
push
cmp
cmp
out
leave
test
nop
push
or
out
mov
or
or
mov
sbb
jne
ja
nopl
cld
rcrb
inc
mov
push
xchg
mov
mov
cltd
enter
jmp
or
and
movsb
sahf
and
mov
mov
push
iret
lcall
test
push
mov
enter
pop
dec
add
jae
test
add
sbb
fmull
xorl
mov
mov
pop
mov
arpl
push
ds
fxam
sbb
rcrl
pop
sbb
ljmp
sbbb
xor
mov
out
repnz
add
ss
repnz
repz
jno,pn
pop
jae
pusha
xchg
nop
mov
push
dec
in
loope
popa
sbb
xchg
push
fs
mov
xchg
cmp
sbb
xor
mov
mov
clts
scas
xlat
sbb
clc
mov
cmp
or
in
dec
jle
rorb
ds
fidivrl
cmp
adc
jbe
dec
push
and
out
cmp
int3
jle
mov
pop
add
inc
into
lock
mov
push
cli
mov
repz
push
rorl
cmp
notl
jns
inc
test
or
popf
adc
dec
roll
and
add
dec
push
stos
or
clc
pushf
inc
aad
out
xor
in
or
ret
dec
xor
aad
test
mov
mov
lret
pop
push
fidivrl
data16
cs
dec
mov
xchg
scas
cwtl
adc
push
movsl
jmp
das
stos
sub
loope
push
cld
push
xchg
pop
es
sbb
add
mov
inc
mov
out
jns
inc
into
pop
mov
jns
xchg
jg
sbb
int
jbe
sub
pusha
fs
mov
repnz
dec
jbe
sub
sub
add
dec
stos
cmp
mov
pushf
mov
inc
jnp
das
loope
jmp
ljmp
movsbl
xlat
pop
test
mov
push
leave
mov
inc
dec
adc
sub
out
fnstenv
mov
popa
xor
mov
in
loopne
rorb
mov
cmpsb
repnz
jecxz
mov
enter
int3
ljmp
pop
mov
or
lds
cmp
push
sbb
or
pop
cmp
jg
jg
test
add
sub
push
dec
xchg
cmp
test
cmpsl
push
ret
jb
rorb
cmp
cmpsb
aam
leave
outsb
int3
cmpsb
clc
cmpsl
pop
pusha
sub
and
lret
or
lods
xchg
jae
push
xorb
ds
sub
xchg
les
clc
xchg
addr16
xor
ret
pop
sahf
sahf
dec
leave
mov
out
subb
xchg
mov
mov
lock
gs
es
lods
js
dec
outsb
pushf
sub
inc
test
and
gs
and
sbb
jne
frndint
daa
iret
cmp
mov
imul
ret
and
push
mov
test
push
cmp
out
xor
sub
cs
jle
pop
mov
divb
sbb
mov
pop
fimuls
idivb
mov
dec
std
sub
sub
gs
ficoms
test
inc
ljmp
ja
xchg
cmp
lods
sub
pushl
mov
repnz
jp
cmpsb
jle
cwtl
fildll
inc
repz
icebp
ret
lret
rorl
and
imul
in
mov
mov
xlat
aas
jnp
mov
fs
mov
faddl
sbb
fiadds
in
add
and
ds
iret
test
cmpl
sahf
push
js
mov
push
mov
jo
push
in
sub
addr16
inc
ljmp
scas
mov
sub
push
dec
icebp
mov
jecxz
jle
adc
addl
jecxz
jge
maxps
orb
and
sub
cmpsl
cmp
pop
stc
inc
mov
jo
rcrl
cwtl
scas
jle
jne
lret
fadds
xor
imul
pop
and
daa
lods
outsl
scas
incb
mov
pop
and
sub
xor
inc
xor
sub
cmp
shll
mov
cmp
jmp
fsubrs
push
xor
or
outsl
arpl
flds
clc
or
xchg
or
stc
and
dec
popa
mov
out
or
jg
bound
cmpsl
mov
mov
add
sahf
js
mov
cmc
xor
mov
push
dec
leave
adc
push
sbb
mov
inc
out
sbbb
les
mov
inc
pop
xor
dec
in
loopne
mov
movsl
sbb
sub
mov
in
push
paddsb
dec
xor
xchg
sbb
loopne
xchg
mov
jmp
cmp
stos
cmp
lea
shrl
cmpsb
pop
pop
scas
cld
mov
pop
in
inc
add
icebp
pop
dec
sub
hlt
mov
sub
addr16
loopne
xor
and
clc
mov
mov
gs
push
leave
in
rcl
mov
mov
jne
cltd
lods
data16
xchg
jnp
push
fdivl
cwtl
fisubrl
addr16
dec
sbb
jo
push
test
lea
lret
pop
xchg
js
pop
xchg
js
gs
mov
sbb
mov
jp
jnp
lret
sub
cmp
lcall
dec
cmp
inc
jmp
inc
inc
jl
lcall
sub
outsb
arpl
bound
shrb
out
mov
ret
es
jae
mov
out
jecxz
push
test
outsb
mov
jle
in
and
icebp
fninit
call
ds
arpl
add
ds
in
popa
or
push
rcl
fdivrl
xlat
frstor
dec
lret
push
dec
mov
mov
rol
and
pop
add
mov
xchg
and
mov
sub
imul
xchg
xchg
sbb
pop
pushf
daa
cmp
or
inc
sbb
push
mov
lods
arpl
sub
add
pop
or
stos
inc
push
into
gs
cmp
mov
cli
mov
rcl
jno
lret
aad
rcrl
data16
mov
xor
xor
adc
dec
inc
mov
cmp
jge
jge
mov
or
add
arpl
inc
push
cmp
mov
lock
loop
stos
or
popf
sbb
into
es
xchg
push
movb
ljmp
stos
inc
cmp
movsl
mov
xorb
faddp
fiadds
sbb
or
dec
arpl
push
push
xchg
pusha
out
add
push
mov
sbb
fistl
stos
shrb
imul
xchg
add
push
fstpt
mov
add
cmpsl
xchg
push
jns
push
cmpsb
cld
outsl
ja
pop
xchg
push
lret
popa
aas
mov
adc
jg
mov
mov
aaa
add
cli
jmp
push
jo
mov
xchg
xchg
cmp
test
push
jno
rolb
xchg
mov
shrb
sub
gs
movsl
push
sbb
mov
in
dec
jo
jle
mov
stos
mov
scas
inc
clc
mov
jmp
pop
in
mov
adc
mov
sub
xlat
sub
sbbl
clts
mov
sbb
pop
xor
sbb
movsb
inc
or
mov
in
gs
jb
pop
sbb
inc
adc
adc
or
xor
adc
and
loope
stos
mov
das
cmp
mov
shrb
or
push
rorl
push
or
dec
xchg
fcmovb
cmp
jg
lds
scas
lock
insb
ret
sbb
leave
xor
cmp
dec
mov
daa
mov
and
mov
dec
mov
in
pop
or
leave
mov
out
pop
sub
rcrb
jmp
lcall
test
lock
mov
invd
fisubs
push
adc
xchg
mov
add
and
xor
pop
jmp
push
enter
sbb
cs
xchg
pop
lret
cmpsb
or
dec
push
call
into
add
jl
or
cmp
data16
outsb
mov
daa
mov
addr16
add
movsb
dec
imul
xchg
mov
dec
mov
pop
or
mov
shlb
cltd
mov
add
int
xor
inc
ja
inc
cs
dec
push
stos
sarb
adc
test
std
nop
pop
sti
daa
xlat
fsts
ret
shlb
inc
loope
or
nop
or
adc
inc
adc
mov
or
sti
fdivrl
loop
mov
daa
mov
mov
xchg
sub
push
mov
ror
push
outsb
and
sbb
mov
jecxz
cmp
pcmpgtb
outsb
ljmp
cmc
test
rcl
addr16
xchg
inc
fldenv
xchg
sub
sbb
dec
xchg
or
pop
xor
movsl
mov
aad
es
jmp
and
cli
pop
inc
inc
insl
mov
add
dec
lea
ret
rcrb
gs
clc
movsb
pop
and
icebp
out
mov
inc
inc
pop
xor
insl
cli
out
ds
int3
cli
in
outsl
inc
xor
stc
inc
xor
cli
jmp
mov
xchg
pop
mov
int
xchg
xlat
cmp
out
pusha
fsubrl
add
stc
pop
push
adc
inc
stos
out
xor
and
inc
lahf
mov
sti
lock
movsl
jle
xchg
insl
aas
jg
fsubrp
pop
stos
inc
ret
mov
lea
iret
push
inc
pop
mov
cli
xchg
xchg
and
sub
dec
icebp
pop
stc
imul
mov
test
adc
fs
scas
xorl
pop
insl
addb
cmp
mov
push
sahf
pop
ljmp
sub
out
or
popl
cwtl
daa
xor
pusha
mov
fmuls
enter
xor
xor
jne
jne
sub
shlb
adc
cmp
in
sti
aas
or
push
mov
fnstsw
ficompl
ret
add
mov
lcall
aaa
ret
shrb
jecxz
cwtl
loop
cltd
adc
pop
sbb
lock
inc
lahf
lods
ds
sbb
xchg
andb
add
loopne
cmp
cs
mov
int
sti
push
mov
aaa
ljmp
ss
mov
dec
pop
mov
sbb
pop
inc
dec
sbb
mov
addb
push
dec
jo
bound
xor
in
mov
cmc
push
fnstcw
cmpsl
xor
or
and
push
test
xchg
daa
aam
out
mov
push
xor
cmp
xchg
push
test
adc
movb
mov
jmp
daa
pop
mov
jl
sbbb
push
cmp
adc
xchg
pop
mov
stos
inc
je
imul
sub
incb
jno
shrl
clc
pop
ret
xor
mov
leave
push
push
out
aaa
ss
inc
lods
push
xchg
dec
call
or
sub
imull
in
adc
in
das
jp
jne
push
lret
rcl
mov
mov
les
lahf
sahf
mov
pop
dec
sub
add
insl
xor
xchg
imul
lcall
sbb
mov
fwait
lds
adc
xor
jmp
ljmp
and
daa
inc
lock
jnp
mov
lret
jb
jge
push
or
lret
push
adc
xlat
scas
fdivrs
scas
xchg
imul
push
popa
jmp
lret
fcompl
cmpsl
push
and
ret
aas
aam
push
push
lret
cmp
cmp
sbb
adc
out
pop
sbb
out
out
int
cmp
push
xchg
adc
into
repnz
mov
adc
adc
jne
push
and
mov
jbe
js
xchg
pop
jae
jmp
nop
push
or
and
cld
dec
fstpt
and
push
cmp
fldpi
sti
insb
pop
jo
push
push
aaa
pop
lock
inc
fs
push
inc
push
cmp
sbb
iret
xchg
inc
and
cltd
push
lret
mov
xor
xchg
jecxz
cld
push
push
xchg
in
or
lds
popf
add
jno
jo
inc
inc
aas
jmp
dec
jle
or
fnsave
pop
add
xlat
jo
add
stc
daa
mov
ds
shlb
pushf
shll
adc
cmp
pop
jmp
stos
je
add
mov
aam
push
daa
add
push
pop
fistpl
and
and
call
mov
xchg
ja
sub
scas
fistps
pop
sbb
dec
pop
shl
je
in
or
aad
out
popa
fldcw
jg
sti
ror
sub
es
dec
out
clc
pop
dec
sbb
or
xor
adc
or
sar
sbb
aam
adc
pop
mov
jmp
sbb
in
test
pop
jecxz
xor
sbb
adc
mov
sub
mov
fucomip
adc
mov
push
dec
mov
stc
jl
cld
push
and
jle
pop
int
addr16
mov
sub
loop
push
psrad
in
jno
sti
mov
jecxz
inc
xchg
popf
in
popa
fdivrs
std
mov
movsb
jo
mov
shlb
out
imul
xchg
xor
test
shll
shrl
in
loopne
sbb
lds
sub
sbb
jmp
sub
and
mov
or
outsl
ss
mov
fwait
dec
mov
jnp
pop
into
test
loop
xchg
lods
std
sub
xor
sub
inc
adc
sub
adc
push
jecxz
add
ret
push
inc
shlb
push
xor
hlt
push
dec
lcall
ud1
xor
dec
sahf
pop
shrb
je
bound
cld
ss
mov
mov
lret
and
add
decb
addr16
and
xor
mov
rcr
add
addr16
push
mulb
pop
sbb
jne
sbb
jge
movsb
test
aaa
push
lret
in
in
loope
cmp
daa
mov
mov
mov
pop
sub
std
mov
push
adc
xchg
push
dec
out
mov
add
repnz
push
push
push
daa
ret
popf
loop
sbb
jne
xchg
mov
cmp
cmpsl
in
stos
sbb
jg
add
imul
pop
in
cmpsb
sub
push
sub
xor
mov
and
lods
inc
mov
fmul
xchg
ret
sbb
outsb
nop
fnstsw
fstps
mov
fists
fwait
cmp
cmpsl
fildll
repz
or
stc
or
adc
inc
rclb
cmc
leave
pop
push
or
push
mov
imul
outsl
mov
dec
xor
jae
sub
lahf
or
or
or
subb
jg
xchg
ljmp
pop
dec
sub
inc
into
and
and
cmpb
fwait
push
and
ret
mov
jl
lods
outsl
xor
mov
stos
xchg
sub
jns
adc
lods
inc
int
adc
sahf
inc
push
leave
cmc
imul
jns
cmpsb
js
scas
pop
mov
push
push
lcall
test
outsb
sarl
push
daa
mov
add
lea
push
cmp
enter
cmp
push
pop
aad
cld
imul
cmc
xchg
mov
aam
leave
je
into
in
call
inc
xchg
xlat
daa
outsb
cmp
aam
jne
std
int
or
sbbl
stos
aas
sub
scas
test
popl
test
sub
mov
xor
aam
jg
push
out
outsl
shrb
adc
adc
jbe
mov
popa
std
popa
mov
leave
and
pop
xchg
xchg
adc
jno
icebp
and
xchg
or
push
sti
dec
hlt
cld
cs
xchg
adc
lahf
dec
or
adc
mov
jne
pop
cmc
adc
leave
sahf
cs
test
dec
ret
in
movsb
ret
lret
lods
les
and
dec
outsl
xchg
push
fwait
xchg
lea
xchg
mov
imull
scas
lods
xchg
cmc
sub
inc
sub
pop
mov
pushf
shll
icebp
cmpsb
adc
mov
scas
fstp
dec
insb
sub
movsl
repnz
mov
dec
mov
jmp
pop
sti
pushf
mov
pop
push
dec
push
je
das
pop
fs
mov
push
nop
fcomi
arpl
out
inc
in
mov
sti
inc
test
add
and
cmpb
sub
adc
jecxz
imul
mov
out
scas
add
in
cmc
dec
cmpsl
sbb
shrl
mov
sahf
pusha
pop
lea
mov
dec
mov
bound
dec
sub
adc
mov
mov
loope
cmp
mov
dec
loop,pt
cwtl
jb
jl
pop
cli
js
dec
cmp
adc
cmp
les
jo
ljmp
cmp
pop
lret
loopne
outsl
xchg
aaa
bound
gs
or
popf
lcall
cmp
xchg
pop
mov
mov
rol
gs
shrb
outsb
fs
or
shlb
cwtl
or
mov
push
data16
fcmovb
pop
das
push
mov
cmp
test
std
or
xchg
ret
pusha
and
push
or
mov
fucomp
dec
xor
std
jge
adc
inc
mov
xchg
fisubrl
outsl
adc
and
inc
xchg
fdivrs
xor
sub
insb
or
sub
das
mov
rcrb
je
iret
cmp
jnp
push
cmp
dec
mov
ret
inc
mov
push
mov
adc
mov
inc
and
jg
lods
sahf
add
bound
in
cltd
sub
mov
dec
out
push
mov
popf
cmp
sub
inc
scas
lahf
pop
adc
xor
stos
pushf
push
je
xor
xor
xchg
push
or
mov
mov
repnz
fidivl
push
sub
mov
cmp
push
lods
dec
test
rol
or
loope
in
mov
inc
sbb
call
cmpsb
mov
fldl2e
xor
cmp
push
cli
popa
xchg
cmp
ljmp
pop
push
pusha
mov
dec
icebp
orb
fiadds
inc
sti
icebp
sub
sbb
push
mov
cmp
test
jle
xchg
jg
cmp
xchg
pop
cmc
jge
arpl
inc
mul
add
cs
cld
ffreep
push
jmp
je
std
mov
xchg
and
jo
xchg
or
fwait
pop
mov
mov
shl
enter
mov
mov
jg
nop
in
sti
add
inc
paddusb
adc
jne
cld
mov
nop
add
inc
xchg
sub
lds
jp
flds
cmpsb
push
lret
pop
aam
incb
ss
arpl
test
or
dec
scas
test
es
push
and
addr16
test
xor
out
lods
and
sub
sub
test
mov
mov
mov
sub
sbb
xchg
arpl
mov
xchg
out
hlt
cwtl
jmp
in
aad
aam
sti
adc
dec
xor
lahf
ja
or
adc
mov
mov
lods
loop
and
cmp
icebp
pop
jae
insb
lock
adc
inc
pop
mov
pop
out
add
shll
insl
jno
cld
sbb
mov
xchg
cmpsb
dec
cmp
mov
dec
fdiv
or
mov
out
lods
mov
cmp
dec
inc
add
out
icebp
add
aas
daa
adc
xchg
push
inc
hlt
dec
dec
cmpsb
dec
mull
stc
ja
pusha
add
push
enter
jno
inc
dec
mov
xchg
dec
adc
in
pusha
cltd
sbb
daa
sahf
adc
sbbb
mov
outsl
loope
mulb
stc
movsl
pop
jns
bound
add
jne
ret
lock
xchg
test
or
pop
rcrb
hlt
pushf
or
rcrl
pop
inc
out
sahf
fidivl
adc
out
mov
adc
pushf
mov
jle
loop
std
aam
push
jnp
add
lcall
and
sbb
mov
xchg
mov
in
push
mov
pop
icebp
xor
jg
mov
xchg
pop
sbb
mov
pop
mov
xor
add
js
mov
inc
loopne
dec
xchg
movsb
push
jb
stos
sub
and
cmp
push
pop
pop
popl
sbb
mov
fwait
fwait
out
std
mov
push
into
adc
cmp
jno
sbb
rep
sbb
xor
sbb
mov
jb
mov
jp
fdivrl
cli
test
mov
mov
pop
sub
insb
jmp
adc
lret
pop
push
fnsave
orb
dec
aas
mov
xlat
les
mov
sub
mov
sbb
ljmp
mov
test
sbb
je
sub
pop
nop
icebp
push
mov
ror
and
sub
out
xchg
ficoms
cmp
or
cmpsb
cmp
xlat
jns
pusha
mov
shl
dec
xor
push
jns
pop
lret
add
mov
dec
jecxz
mov
dec
mov
addr16
fldenv
ja
push
push
lods
cmp
xchg
mov
into
rcrl
jg
inc
movsl
int3
mov
xchg
jnp
push
mov
xchg
inc
dec
pop
sbb
push
les
adc
pop
mov
inc
inc
push
call
gs
mov
sbb
fildll
mov
fisttpll
out
lahf
addb
comiss
imul
and
das
negl
mov
cmp
xchg
adc
lea
insb
xchg
dec
sbb
mov
mov
mov
xor
inc
shll
insl
xor
insl
pop
icebp
xor
pop
int3
adc
ss
xchg
imul
cmpsl
pop
popf
xor
ret
ss
xchg
in
sub
lea
mov
add
adc
dec
mov
pop
ljmp
jle
pop
leave
cmc
cld
xchg
lcall
jle
int
enter
inc
push
or
xchg
add
in
mov
aaa
xor
jp
imul
add
out
cmpsl
add
and
outsl
stos
bound
fnsave
aam
loopne
aaa
and
insb
xchg
insl
push
js
pop
sub
jle
inc
test
movl
push
jle
jmp
sub
ljmp
out
mov
lods
jne
push
icebp
push
or
es
inc
out
out
and
sbb
or
mov
mov
jle
loope
aas
in
mov
jo
call
scas
popa
and
aam
and
adc
sahf
fidivs
insl
mov
mov
adc
add
rolb
sbb
stos
movl
out
or
hlt
mov
and
add
int
fldl
mov
data16
rcll
fs
mov
adc
insb
jge
or
mov
jnp
xor
aad
sbb
into
push
xor
mov
mov
fwait
in
test
mov
push
loope
xchg
pop
and
or
push
dec
or
insl
sub
ucomiss
cmp
jmp
mov
lret
repz
cmc
lcall
mov
lcall
and
arpl
lcall
pop
push
dec
jnp
outsl
cmc
imul
in
sbb
je
out
and
adc
es
clc
enter
sti
std
xchg
es
xor
jl
mov
mov
out
inc
loop
lcall
dec
sub
test
scas
cmp
mov
pop
xchg
loopne
inc
push
xchg
in
lods
push
popf
and
mov
or
cmp
dec
mov
xor
movsb
mulb
jne
xor
cmc
lret
cmpsl
mov
je
jns
adc
int3
or
add
inc
dec
mov
lret
lock
push
jg
push
mov
xchg
bound
shrl
mov
adc
insb
popf
into
rorb
xchg
jb
sbb
mov
movsb
cltd
nop
dec
call
rcrl
sbb
xchg
xchg
xor
ja
jmp
cmp
jbe
repz
cmpsl
or
cmpsl
xchg
mov
inc
lods
nop
xchg
or
mov
orb
roll
push
inc
add
adc
add
fdivs
jp
xchg
shl
cmp
out
std
xor
push
push
adc
aas
movsb
lods
cmp
pushf
mov
pushf
push
jnp
adc
and
cmc
loopne
clc
mov
xlat
dec
pop
xchg
dec
fldl
xchg
add
test
mov
add
xlat
lret
test
pushf
jno
mov
sub
std
adc
lcall
and
out
out
pusha
aas
inc
xchg
jge
fs
and
push
mov
jle
es
cmpsb
loopne
loope
xor
or
or
inc
xor
jp
insb
loope
add
lret
lcall
inc
jp
fistl
inc
inc
js
mov
mov
shlb
push
in
mov
in
fisubrl
leave
jle
sbb
jle
stos
dec
push
stos
sbb
aas
and
clc
jno
mov
test
mov
jae
fidivrs
dec
mov
mov
pop
daa
cmc
ret
mov
insb
incb
jecxz
out
jnp
stos
or
cmpsb
sbb
movsb
sub
add
pop
test
outsl
arpl
and
out
pop
test
subb
cld
ftst
mov
lcall
push
mov
movsl
jge
xchg
test
int3
xchg
push
hlt
sarb
push
sahf
rcrb
xchg
or
shrl
out
push
repz
filds
testl
bnd
testl
push
and
and
pop
testb
dec
xor
mov
in
dec
inc
cmpsb
ja
mov
inc
loop
daa
ret
xchg
lods
call
and
into
loop
test
adcb
mov
jp
xor
add
in
outsl
inc
sti
push
pusha
aaa
adc
dec
push
mov
jbe
xlat
and
imul
inc
out
jns
sub
ljmp
cmp
ss
and
aas
or
jecxz
out
push
imul
push
inc
out
lods
pop
mov
repz
out
or
jl
adc
stc
dec
mov
cmp
int3
pop
mov
lahf
inc
test
inc
repnz
loopne,pt
push
xlat
push
adc
iret
loope
and
dec
adc
fnsave
call
sub
outsb
and
sub
sub
mov
sti
jmp
mov
add
out
add
jnp
shrl
nop
stos
sbb
mov
mov
jo
add
xchg
outsl
xlat
add
inc
ficompl
mov
xor
push
mov
push
mov
jge
push
loopne
pop
out
and
jmp
fidivrs
movsb
popf
and
js
mov
jp
push
dec
in
push
out
std
in
divb
fwait
xchg
cmp
lret
or
fwait
and
shl
fmuls
lods
test
movsl
mov
sub
xchg
stos
ficoms
mov
mov
jle
jecxz
aas
pop
pop
movsl
jbe
test
jno
hlt
push
popa
mov
fcompp
outsb
cld
jo
inc
stc
cltd
xor
ljmp
fcmovne
adc
xchg
mov
mov
js
pop
sbb
in
repnz
jns
adc
test
sub
or
mov
pushl
mov
data16
cmp
push
xor
lret
sbb
mov
pop
out
jae
adc
jecxz
mov
loop
mov
pushf
ljmp
data16
push
lret
push
add
or
ds
inc
xor
imul
lods
fildl
stos
scas
mov
adc
lret
ret
dec
popf
stos
mov
xlat
xchg
pop
mov
fdivrl
and
pop
jo
cmp
fs
insl
mov
nop
inc
rcrl
mov
stos
wbinvd
mov
in
call
in
pop
xchg
call
lods
mov
jg
push
xchg
imul
mov
je
mov
xchg
adc
movsb
add
aad
jb
loop
add
add
movsb
mov
push
cmc
ss
pop
test
mov
lcall
mov
cmpsl
cmp
push
push
pop
fimull
ret
push
jmp
jmp
lcall
xchg
pop
push
ficoml
std
dec
mov
push
jmp
into
jbe
scas
jns
push
popf
in
jns
jae
and
push
out
add
mov
adc
cld
xchg
int
mov
mov
push
jmp
adc
add
jne
jmp
stos
xchg
xchg
faddl
inc
adc
sub
incb
lds
aam
ss
or
pop
aam
lcall
push
push
shlb
outsb
icebp
sub
add
scas
mov
mov
fsubl
push
cmp
push
scas
jno
aas
shl
pop
cmpsb
loopne
sahf
sbb
filds
shr
dec
xor
out
outsb
call
fbstp
addr16
aas
repz
mov
cmp
xchg
sub
push
dec
inc
sbb
push
insl
xchg
mov
pop
sahf
pop
jmp
fwait
xlat
in
xchg
pop
sahf
dec
jbe
jb
decl
push
xchg
xor
into
aaa
clc
jmp
int
ss
cwtl
dec
shll
lds
xchg
dec
fstpl
shl
adc
out
and
cmc
fwait
mov
pop
fcoms
mov
out
xlat
add
loop
adc
push
lock
mov
fs
leave
lcall
cmp
lods
pop
cwtl
lcall
mov
loop
or
lds
popa
dec
dec
mov
lahf
add
jmp
sub
dec
and
sub
sub
inc
or
push
test
mov
cmp
les
sub
adc
sahf
mov
bound
jo
jns
push
xor
cmp
and
push
shlb
pop
cli
into
cmp
cmp
cmc
hlt
cmpb
jg
and
jl
or
xchg
imul
rcrl
dec
rorb
inc
jnp
mov
xchg
icebp
sarl
fs
filds
jl
jecxz
nop
ds
lea
sbb
pop
cmpl
jg
ret
stos
mov
orl
adc
lahf
adc
pop
and
fwait
in
xor
repz
jnp
pop
ficoms
pop
push
dec
iret
jns
movsl
push
mov
mov
push
sbb
mov
sub
cli
mov
out
adc
nop
mov
jl
ds
aam
sbb
xchg
test
sub
and
ljmp
jg
pop
pop
push
pop
jns
dec
outsl
cmc
cmp
xlat
push
inc
test
jmp
pop
cli
rol
dec
ret
dec
jbe
out
and
es
mov
es
insl
mov
imull
negl
dec
shll
xchg
cmp
js
mov
push
mov
cmp
and
push
sub
add
aas
and
xor
fcoml
movsb
pop
push
or
mov
inc
lock
iret
cmp
mov
pop
lea
mov
out
jmp
jne
daa
mov
pop
out
cmp
lea
ret
fsubrs
insl
lds
jmp
fs
call
jno
cmp
shll
cmp
push
shrb
cli
jmp
mov
sub
lea
mov
out
add
jmp
xor
mov
add
popf
add
push
jbe
or
mov
push
clc
repz
pop
test
in
das
adc
repz
mov
mov
sti
jnp
stos
pop
add
imul
int3
xchg
aad
mov
ret
mov
push
sarl
mov
pop
test
fimull
loope
repnz
and
lods
xchg
xor
stos
out
fcompl
imul
lods
lea
add
push
pushf
out
fsubl
fmul
pop
adc
dec
xor
cltd
mov
ffreep
das
ficomps
pop
jo
lods
imul
out
das
roll
bound
inc
cmp
das
add
popa
push
pop
cmpsb
lods
aaa
imul
cmp
mov
ljmp
imul
std
cmp
cld
xor
adc
jnp
push
xlat
sbb
pop
add
mov
das
xor
fidivrl
shrl
jnp
nop
test
and
imul
or
insb
scas
arpl
fs
or
or
hlt
xchg
shl
adc
ss
push
pop
inc
xlat
xor
fstps
mov
push
sahf
int
xchg
jmp
cmp
movsl
outsb
jg
adc
sbb
fs
mov
mov
inc
push
jbe
into
sbb
je
or
icebp
jns
enter
add
sahf
push
fsubl
fmull
int
ljmp
push
enter
adc
int
or
or
add
lock
xchg
adc
data16
mov
add
outsl
lret
repnz
xchg
sub
mov
jnp
sbb
adc
sahf
cmp
pop
test
shlb
in
out
out
jecxz
cli
sbb
outsl
out
mov
stos
inc
in
mov
ficoms
sti
stc
mov
shlb
shlb
adc
stos
sbb
mov
aad
ds
out
jmp
xchg
icebp
mov
add
xchg
add
and
sbb
add
clc
xchg
pop
out
cli
fsts
xchg
xor
jae
jecxz
sub
mov
jns
insl
pop
push
xor
inc
clc
adc
xchg
insb
cmp
mov
ja
scas
mov
lock
jmp
sub
push
cmc
imull
push
mov
in
xor
sahf
repz
push
repnz
je
sbb
jg
out
xor
inc
cmp
dec
jg
mov
and
scas
imul
mov
popa
inc
xor
push
cmp
xor
and
mov
mov
popa
sbb
lret
inc
les
xchg
sarl
ret
ja
pop
fwait
xor
out
cwtl
js
fwait
jno
xchg
test
fwait
inc
xor
lcall
cs
loop
cmp
ljmp
dec
sub
add
push
jmp
xchg
repz
jbe
adc
jg
xor
mov
iret
and
clc
xor
push
pop
daa
push
andb
xor
aad
xchg
mov
lcall
add
mov
bound
mov
or
mov
jg
mov
cmp
mov
or
clc
dec
sti
xchg
cwtl
in
mov
add
ffreep
inc
xor
popf
mov
lods
aam
hlt
mov
rorb
pop
lods
mov
jnp
push
data16
cmp
div
adc
repnz
shll
xor
adc
loop
and
mov
mov
dec
pop
xor
gs
adc
lds
and
jne
loopne
add
mov
test
mov
in
aad
sub
ss
icebp
stos
cmp
ret
jle
movsl
cmp
jns
add
mov
push
cmp
mov
dec
pop
push
push
js
aad
ret
lret
add
mov
cwtl
sarl
lds
sti
adc
daa
imul
xchg
insb
insb
mov
inc
insb
aaa
mov
clc
cld
pop
ret
insl
movsb
nop
fstpt
rcr
cmc
in
scas
dec
in
sbb
sbb
imul
in
shll
int
adc
pop
lods
cmp
lcall
push
leave
je
aam
xor
into
fst
inc
std
mov
out
fwait
jne
push
loop
push
cmc
cmp
cltd
pop
pop
mov
add
mov
pop
xchg
enter
sahf
data16
inc
xchg
in
xlat
jno
push
push
push
add
and
movsb
dec
ja
push
mov
pop
fisubs
sti
in
out
sbb
sbb
or
and
test
leave
pop
fs
sub
adc
add
sub
ror
in
xchg
test
or
lods
arpl
cld
test
mov
pop
cs
lcall
push
iret
push
dec
daa
dec
xchg
inc
mov
into
push
ds
in
into
pop
cli
fidivl
push
pop
push
or
popa
inc
andb
shrl
mov
inc
jnp
inc
loope
mov
insl
adc
cwtl
inc
mov
cltd
aad
push
js
out
cwtl
jb
icebp
push
mov
push
sub
xor
fistpll
repnz
adc
cmp
pusha
fwait
push
cltd
cs
adc
pop
jb
sub
ja
xchg
xor
imul
ja
scas
mov
add
icebp
and
jne
daa
add
test
lahf
xchg
dec
or
sub
js
cs
sbb
and
mov
xor
insb
adc
jecxz
jge
pop
push
add
fldcw
inc
xchg
xor
imul
adc
data16
inc
xor
and
cmpsl
popa
out
inc
mov
leave
popa
mov
inc
cmp
insb
in
xchg
gs
out
pop
sahf
lcall
lods
sub
les
aam
sub
sub
inc
in
in
mov
xlat
mov
mov
pop
clc
fadds
pop
mov
mov
or
stos
sahf
lods
jnp
inc
jp
xchg
sub
cmp
inc
push
hlt
ss
sub
jmp
movsb
mov
cmp
es
inc
in
mov
stos
movl
rcrl
and
loop
jl
insl
cmc
les
int
in
fwait
out
pop
xchg
out
ss
shrl
pushl
inc
stos
hlt
xchg
and
mov
mov
in
adcb
inc
ffree
pop
stos
lahf
out
xor
cltd
push
test
mulb
fldl
stos
push
in
and
iret
xchg
jge
mov
xor
jl
sbb
adc
xchg
mov
dec
ds
ljmp
push
push
pop
lea
dec
add
fcomps
lret
push
sbb
jb
add
fyl2xp1
xor
iret
adc
pop
or
or
aad
jmp
inc
or
mov
cmpsb
iret
or
out
jecxz
sub
inc
sbb
aas
adc
iret
pop
popa
sbb
ss
mov
inc
inc
mov
adc
adc
aam
inc
sbb
dec
pop
jae
insb
and
sti
in
scas
mov
mov
xchg
or
lods
and
dec
and
dec
adc
cmp
sub
mov
decl
and
sub
pop
xor
adc
int3
test
nop
add
loop
movsl
sahf
pop
test
sub
pop
pop
dec
jne
mov
insb
loope
sbb
popl
jle
mov
mov
pushf
mov
cmp
sub
outsl
test
add
cmp
int
stc
mov
xor
push
sbb
inc
cwtl
ljmp
and
cld
sbb
mov
adc
jle
sbb
fwait
es
inc
cltd
mov
int
notl
dec
and
test
mov
add
fldl
jle
movb
xlat
dec
ds
xor
scas
jb
loope
cmp
and
dec
daa
sub
jmp
pop
inc
loop
add
and
aam
or
or
mov
out
js
movsb
fdivp
push
cli
enter
jo
jae
pushf
int3
and
push
mov
imul
test
lcall
jle
loope
mov
sbbb
jp
jge
daa
adc
loope
std
push
xor
pop
gs
fwait
clc
add
arpl
mov
sbb
mov
daa
mov
es
lock
sub
insl
popa
cmc
xchg
mov
mov
mov
leave
std
mov
ficoml
sub
scas
sbb
imul
push
mov
ljmp
lods
lods
out
mov
inc
push
mov
adc
mov
or
fcomi
jnp
jmp
mov
sub
push
push
inc
cmp
xor
aas
mov
lret
test
loop
shr
adcl
inc
cmpsb
and
das
ds
rcr
mov
xchg
aam
daa
cmpsl
and
xor
add
rorb
rorb
flds
jmp
aad
loope
jmp
inc
adc
sub
data16
mov
mov
fistps
mov
test
push
xor
jns
jno
in
add
repnz
sub
cltd
out
test
imul
push
lcall
or
or
cwtl
test
je
adc
mov
idivb
mov
cmp
xor
jmp
xchg
add
fnstenv
pushf
jp
hlt
in
push
js
mov
xchg
in
data16
aas
dec
cld
rol
stos
xchg
in
pop
jmp
aad
push
jp
push
sarb
push
sub
or
call
dec
mov
test
fdivrl
xlat
repz
jbe
aas
xor
mov
movl
xchg
enter
dec
sub
add
jl
icebp
stos
orl
in
mov
inc
popf
push
sub
imul
dec
xor
xchg
das
popf
mov
dec
xor
inc
les
or
cld
mov
mov
pop
aaa
icebp
cs
jecxz
lret
mov
pop
pop
sahf
scas
into
out
imul
cmp
jmp
fldl
and
sbb
fwait
xchg
fstpt
flds
xchg
sbb
jne
dec
sub
test
es
dec
sub
in
ficomps
out
in
and
sbb
sub
ljmp
fwait
dec
push
xchg
jp
add
xchg
cmpsl
jb
mov
mov
cmpsl
add
loope
adc
pop
rorl
movsb
mov
sub
sbb
sub
int
scas
js
push
xchg
push
ficomps
arpl
ret
test
inc
inc
dec
inc
xor
mov
sub
ja
in
xchg
ds
mov
scas
bound
nop
aas
lcall
cmc
xchg
inc
mov
pop
sbb
adc
sti
mov
pop
std
outsl
mov
movnti
pop
sti
adc
les
jnp
sarb
in
sub
mov
in
divb
xchg
daa
xor
mov
mov
int
sub
push
popf
push
add
cmpsb
mov
sbb
xchg
push
xor
lcall
push
loop
sbb
lock
bound
ja
je
lea
fs
or
rcrb
rcrb
dec
test
orb
inc
rorb
shrl
cmp
jns
and
inc
add
fadds
fadds
pusha
jbe
or
jno
push
mov
sahf
lret
dec
jbe
xor
pop
fidivs
jnp
mov
fadds
add
jne
imul
imul
movsl
xchg
fwait
mov
inc
pop
outsb
bound
mov
loop
mov
push
add
xchg
push
push
sbb
aad
decb
mov
push
sub
repnz
mov
shlb
lahf
jne
arpl
sbb
pop
fidivs
mov
shrb
push
mov
rclb
jo
les
sahf
sub
sub
aam
mov
out
pop
adc
out
adc
cmp
xlat
push
mov
jmp
mov
dec
pop
add
push
sar
push
dec
lret
mov
ljmp
xchg
push
push
mov
add
and
imulb
mov
cmp
mov
sbb
mov
ds
and
scas
or
push
movb
in
pop
cmp
sub
test
mov
add
xchg
jo
out
addr16
es
mov
xchg
inc
outsl
xor
adc
mov
sub
les
adc
jg
pusha
rolb
or
stc
aad
fs
or
jl
mov
pop
jns
or
pop
or
xor
jg
push
cmp
int
add
push
stos
aam
sub
test
daa
fnstsw
mov
es
inc
mov
or
xchg
sahf
and
mov
xchg
int
orb
adc
movl
dec
loopne
xor
cli
stos
insb
enter
dec
sub
cmp
xor
sbb
das
daa
jne
jno
test
iret
imul
push
add
adc
jmp
mov
stos
aas
in
out
mov
imul
inc
enter
or
lea
jle
sbb
push
ret
lods
dec
inc
pop
shr
bound
inc
cvtps2pi
test
daa
inc
in
jne
mov
sub
stc
fisttps
inc
in
stc
jl
jle
das
outsl
fstpl
in
lea
jmp
pop
mov
mov
out
jp
sbb
jbe
jmp
jns
cmp
in
iret
lea
adc
insl
jge
and
cltd
jbe
mov
lret
mov
mov
in
sbbb
movsl
loope
inc
insl
add
xchg
pushf
sub
or
pop
clc
lret
dec
lods
dec
sub
dec
jbe
movsl
jmp
mov
push
ficompl
pop
gs
shr
imul
mov
jae
in
cmp
cwtl
sti
pusha
add
cmp
cmp
or
into
inc
xchg
call
add
cmpsb
or
add
imul
shll
lods
push
jne
mov
rol
dec
push
fstl
call
mov
mov
je
push
sar
aas
fstpl
aas
lret
or
int
mov
cli
xor
in
test
push
sub
addr16
cmp
lcall
add
inc
in
sbb
div
mov
push
sahf
repnz
loopne
sbb
in
lret
cmp
imul
push
fldenv
and
ret
sahf
xchg
jnp
fldl
jp
mov
and
mov
xchg
sub
popf
or
test
xor
outsb
retw
sub
stos
out
push
pop
or
xchg
aad
xchg
lea
jmp
mov
and
testl
pop
js
cmpsb
int3
mov
cmc
pop
push
mov
test
sti
jge
rclb
aad
mov
mov
cmp
addr16
cmpsl
mov
add
xor
or
mov
mov
cld
clc
out
std
add
and
dec
addl
xor
sub
ret
cmp
mov
aaa
test
into
xchg
add
fwait
jge
push
test
cs
xchg
dec
fs
jge
incl
movsl
or
aaa
pusha
popa
push
push
xorl
mov
jns
pop
aam
enter
shr
cmp
xchg
scas
lock
fbld
sbb
lock
inc
or
movsl
arpl
jmp
xchg
mov
and
icebp
arpl
xorb
insl
xchg
lods
shll
ret
imul
fistl
lahf
rorb
push
enter
jnp
and
or
cmpsl
pop
sbb
inc
pushf
js
bound
aad
jge
mov
dec
cmp
xchg
lret
rorb
lea
sub
popa
test
shlb
push
and
or
popf
pop
sub
scas
adc
aaa
jmp
lahf
ror
jmp
jp
je
push
push
lds
idivl
shll
clc
cmc
in
dec
add
or
movsl
out
xchg
or
lret
jno
jl
outsb
clc
add
pop
jns
dec
sub
movsl
aad
jp
jl
or
loop
pushf
sub
imul
ret
push
fidivrl
pop
jp
int
cli
outsl
cmpb
add
gs
pop
shl
sti
subb
sbb
and
adc
sahf
je
ficompl
aam
sub
mov
fisttps
pop
push
movsl
push
out
fnstsw
add
mov
push
push
mov
jl
jmp
lea
add
mov
jne
mov
lahf
mov
orb
or
iret
and
pop
and
jge
jp
xchg
fdivr
dec
les
inc
pop
and
out
mov
sbb
mov
and
add
xchg
insl
arpl
jl
push
inc
dec
cmp
sub
cmpsb
sbb
or
mov
in
or
lret
xor
xchg
xor
xchg
outsl
jno
jmp
pop
imul
and
cmp
push
push
pop
xchg
sub
mov
dec
lds
int
movsb
mov
daa
into
inc
mov
divb
out
testb
mov
orb
fs
push
jo
ret
xor
sbb
xchg
mov
mov
jp
jmp
add
loope
jecxz
jne
pop
popf
mov
sub
sti
dec
cmp
mov
xchg
push
aad
out
testl
int3
test
add
dec
jnp
arpl
sub
mov
and
int
aas
test
jmp
dec
xchg
call
fisttpl
add
inc
dec
dec
ja
mov
inc
dec
sahf
dec
push
ss
jno
jle
mov
mov
lds
sbbb
aad
push
shrd
stos
mov
jns
aad
int
adc
jp
mov
test
mov
dec
cmp
lcall
mov
or
jno
push
aad
jne
mov
adc
arpl
inc
jg
and
inc
out
xchg
popl
mov
sub
fwait
int3
dec
outsb
in
into
xor
shlb
ss
adc
unpckhps
and
cmp
popl
sub
pop
rorl
mov
mov
mov
pop
pushl
pop
and
fs
jb
push
pop
push
dec
loope
decl
cmpsb
arpl
pop
aam
std
shll
mov
fidivrl
push
in
ret
cmp
pop
cmp
hlt
xchg
xor
int3
jl
shr
aas
xchg
and
push
add
sar
fwait
xor
lea
data16
xchg
inc
ret
mov
aam
rcrl
jnp
cwtl
fdiv
adc
cmp
pop
aaa
mov
pop
cmpsb
xchg
ja
shrl
movsb
lock
ljmp
fisubrl
rcrb
or
out
add
mov
mov
push
mov
stos
loop
pop
mov
leave
sub
dec
lret
mov
stos
fidivs
ja
mov
and
addr16
mov
xchg
popf
sub
dec
jle
jg
aaa
and
push
jae
fisubl
pusha
jecxz
enter
stos
dec
sbb
xlat
xor
sub
leave
dec
rorb
in
jnp
popa
fwait
pushl
js
stos
iret
jg
mov
leave
stos
push
fsubr
cmp
push
mov
addr16
jmp
rclb
mov
adc
mov
push
jno
pop
push
mov
cld
jnp
sar
sbb
jecxz
ss
leave
ljmp
jg
pop
sub
jno
fnstenv
aam
movd
jne
sub
mov
push
ds
movsl
mov
xchg
ja
scas
mov
jnp
inc
xor
lea
sbb
and
imul
jns
mov
aam
fs
data16
xchg
loope
or
cmp
pop
negl
enter
addl
mov
imul
fiadds
jl
add
test
cmc
add
clc
or
clc
out
jg
push
pop
lods
jns
scas
sbb
cmp
ljmp
into
dec
into
clc
xchg
scas
insb
les
pop
adc
sbb
aam
sub
fstps
das
in
scas
pop
xchg
push
ss
dec
xchg
fiaddl
je
hlt
nop
inc
ret
jg
push
cmp
loope
rcrl
push
mov
xor
jg
mov
xor
jb
arpl
dec
or
xor
insl
lock
xor
imulb
jmp
mov
cwtl
mov
pop
gs
out
icebp
inc
xor
and
push
inc
and
popl
out
adc
cmpsl
mov
enter
or
cmp
rorl
loop
push
and
jb
mov
push
sub
scas
ljmp
pop
jb
mov
shrl
call
lock
andl
push
aad
mov
scas
mov
cmp
sbb
es
adc
cmpsb
int
ja
fsubs
sub
xchg
int
scas
dec
sarl
add
inc
in
jge
mov
test
push
iret
clc
jg
dec
aaa
push
fs
push
jb
icebp
lods
mov
xor
aas
movsl
cmpb
aas
js
jmp
lds
scas
or
pushf
scas
clc
mov
mov
jbe
aad
mov
daa
out
xchg
inc
cmp
dec
repz
test
jne
addb
leave
and
jne
stc
inc
ljmp
sti
pop
ret
lret
fidivl
mov
jmp
mov
lret
lret
fidivrl
sub
push
mov
test
push
jbe
addr16
lods
mov
call
jmp
jmp
stos
lds
hlt
ss
push
leave
enter
idivb
pop
add
shll
in
int
in
add
xor
mov
scas
or
mov
fsubrl
xor
js
jge
std
ljmp
mov
sub
shrl
fsubl
cs
dec
lahf
sub
out
fwait
testb
rolb
mov
es
inc
mov
scas
aad
sarl
push
mov
mov
cmpsb
into
xchg
mov
lea
push
dec
test
pop
mov
jnp
or
and
or
sti
mov
repnz
dec
xchg
add
ds
xchg
ja
adc
filds
cmp
aas
ret
dec
mov
jl
jle
jno
push
popa
xor
pop
test
dec
adc
or
arpl
cmp
pusha
jae
xchg
and
xor
mov
pop
shrb
lods
mov
dec
xor
jno
out
out
dec
or
sub
popa
push
mov
int3
fisubs
lock
mov
rolb
popa
in
jecxz
mov
dec
add
lods
imul
xchg
adc
jge
or
xchg
mov
mov
test
and
cs
dec
sbb
sub
fsts
out
movsl
xchg
outsl
mov
ljmp
sbb
or
ret
sub
mov
arpl
add
das
fbstp
push
cmpsb
mov
data16
cmp
pushf
jmp
sbb
sub
push
lods
and
std
lret
in
push
dec
int
xchg
mov
push
and
mov
rorl
arpl
sbb
dec
mov
cmp
test
pop
dec
add
mov
sbbb
xchg
dec
sub
jnp
outsl
cmp
sarl
fldt
stc
cmp
nop
es
loopne
iret
mov
sbb
imul
jno
mov
pop
fadds
test
push
in
call
stos
ds
rorb
push
bound
roll
lds
sbb
test
jp
cmp
xor
sub
scas
cmpsb
push
cmp
fwait
mov
das
sbb
mov
adc
scas
xor
dec
inc
sub
call
jp
sbb
loop
xor
add
jp
pop
aad
rcll
into
lods
inc
jl
jne
orb
shlb
test
and
cmp
push
cltd
dec
clc
repnz
dec
jecxz
push
xor
insl
and
sbb
ds
pop
push
jne
lret
call
fdivs
fsubp
mov
add
push
nop
aas
inc
sbb
pop
inc
xor
imull
in
imul
mov
adc
arpl
cmp
mov
repnz
fldenv
sub
dec
mov
or
jbe
aad
mov
push
pushf
and
jg
mov
inc
adc
repnz
lret
cmp
add
sub
loope
sub
test
gs
push
inc
call
sub
dec
sub
add
lock
ret
sbb
cltd
mov
cwtl
popa
adc
jecxz
xor
cmp
mov
mov
or
pop
outsl
andnps
push
popf
add
and
mov
in
adc
xchg
testb
adc
stc
stos
push
aad
hlt
pop
mov
jge
adc
leave
popa
or
pop
cmpsb
jnp
mov
adc
das
or
xor
xor
inc
cmp
inc
aas
fildl
pop
push
mov
fs
and
dec
pop
mov
inc
ss
sub
mov
lea
sbb
aas
lods
push
mov
mov
loopne
jle
rcpps
add
stos
push
fwait
in
push
loope
cli
insl
js
arpl
and
or
out
out
jbe
les
pop
lret
mov
fisubrs
addb
mov
xchg
sbb
aaa
insb
xor
inc
mov
out
mov
sub
stc
into
jo
xor
fiadds
xor
divl
mov
iret
nop
jecxz
cli
in
lcall
adc
add
mov
cld
cmpb
ret
lret
addl
push
mov
mov
je
xchg
jp
jl
scas
imul
mov
das
mov
movsb
dec
jmp
shll
xchg
push
pop
lahf
cmp
int
jb
add
adc
fdivs
sbb
movsb
inc
sbb
clc
cmp
clc
popa
fs
into
imul
out
icebp
sbb
daa
fdivl
sbb
aad
sbb
xor
or
inc
cmpb
std
stos
and
adc
int
sub
adc
push
popf
cli
push
inc
js
in
into
mov
mov
push
sbb
in
mov
ljmp
stos
rorb
nop
inc
movsl
mov
cld
or
fsubs
cld
insl
and
lods
xor
lock
int3
test
mov
mov
xchg
fs
pop
int
and
jge,pn
xchg
out
aam
push
fidivrs
test
xchg
and
or
sti
es
cwtl
lahf
lret
adc
sbb
and
cmc
mov
or
xchg
jns
fldenv
inc
push
mov
adc
inc
les
mov
mov
icebp
iret
repz
pusha
cmpsb
jmp
repz
cltd
aaa
sbb
nop
cmpsb
stc
pop
dec
push
pushf
in
iret
and
fstl
jnp
or
out
dec
inc
jg
pop
cmpsl
dec
pusha
jp
and
inc
rcl
call
inc
mov
dec
and
and
fs
mov
cmpsb
fsubrs
lahf
add
dec
sarl
sbb
mov
and
mov
jmp
pop
daa
ret
out
jmp
hlt
lret
fadds
movsl
and
stos
push
jne
popl
loope
mov
adc
rorb
gs
pushf
dec
pusha
fldl
orb
mov
or
cwtl
xor
sub
push
stos
movsb
mov
arpl
mov
frndint
out
push
adc
cld
jmp
cmpl
enter
cld
cltd
sbb
xchg
pop
int3
pusha
lret
outsl
testl
xchg
data16
or
in
lds
fwait
cli
push
mov
cmp
cs
inc
push
xor
pop
adc
ror
cmp
cmpsb
dec
pop
mov
ss
mov
hlt
sub
xor
in
addb
inc
lods
jecxz
mov
dec
jns
mov
adc
cmp
jbe
pop
push
cmp
sub
mov
dec
fcmove
fldt
adc
pop
jnp
jno
in
lahf
or
jp
mov
lret
adc
adc
fidivrl
add
int
test
inc
or
pop
xlat
sub
add
in
mov
and
push
mov
iret
push
fildl
test
inc
icebp
and
and
cld
pop
cltd
dec
ficompl
iret
stos
adc
adc
jmp
add
add
push
and
jg
pop
xor
loope
add
pusha
sbb
or
ret
out
nop
outsb
jns
xor
add
stos
pop
xorl
jnp
imul
sbbb
pop
jg
jo
and
mov
insb
xchg
xor
pop
jno
test
cmpsl
xchg
jecxz
cmpsb
shll
xchg
inc
popa
cld
mov
pop
jb
loope
insl
into
jecxz
adc
pop
pop
inc
test
xchg
loopne
adc
inc
call
adc
into
stos
jg
and
adc
jne
push
xor
adc
imul
push
mov
pop
push
push
xor
jle
outsb
mov
push
or
out
jae
dec
mov
movl
lahf
cmp
adc
bound
cli
pop
add
sti
nop
jle
cmp
bound
dec
and
popf
push
loopne
test
in
push
aaa
outsl
decb
xchg
aas
test
mov
push
ffreep
movsl
sub
mov
arpl
fs
sti
dec
pop
insb
sbb
pop
lods
in
fcom
jno
enter
mov
cmp
data16
cmpsb
jb
jp
pop
xor
or
mov
fidivrs
dec
xor
push
cltd
nop
mov
ja
popa
pop
mov
sbb
lahf
mov
movsl
push
lock
dec
jecxz
cmpl
ret
jo
inc
insl
mov
adc
dec
mov
inc
and
dec
into
out
dec
or
fimuls
push
mov
push
xchg
push
int3
cmp
push
ds
mov
mov
dec
adc
mov
inc
fstpl
push
sbb
lret
sbb
repnz
jp
mov
fmuls
ljmp
xchg
test
add
xchg
xor
sbb
push
test
mov
out
cmp
jmp
jle
xchg
mov
clc
lret
sbb
insb
movsb
inc
mov
rol
cwtl
inc
cmp
in
jp
imul
push
scas
pop
xor
jne
sub
ljmp
rolb
xor
cli
mov
xchg
bound
dec
xchg
mov
push
enter
enter
loopne
cmp
lret
lock
cli
cwtl
mov
pusha
jge
call
xorl
adc
scas
sbb
aas
loope
lea
mov
imul
sbb
cmp
push
cmpsb
sub
sbb
rcl
xchg
mov
negb
leave
mov
or
imul
or
fmulp
sti
popa
or
popf
idivl
add
scas
pop
push
or
outsb
cmp
jno
popa
mov
and
stc
xchg
jb
push
pop
mov
test
popf
lahf
ds
test
outsl
into
adc
sub
imul
lods
pop
mov
mov
pop
aas
inc
test
add
add
inc
mov
std
cmpsb
iret
out
mov
jbe
loopne
roll
mov
push
outsl
ljmp
fisubl
sub
test
or
mov
adc
cli
inc
cmp
outsl
loope
push
lods
add
imul
push
movsb
shlb
add
adc
out
mov
mov
popf
push
cwtl
sub
xchg
mov
aam
jl
or
jle
je
mov
mov
mov
cmp
adc
in
add
andl
cmc
scas
in
cmp
xchg
xlat
pop
arpl
cmpsl
cmp
movsb
sti
popa
mov
sub
push
cwtl
loop
outsl
pushf
test
iret
jbe
mov
xlat
or
sub
rol
dec
subl
data16
jae
mov
stos
push
or
cmpsl
sbb
lret
cmpsl
fs
jg
jnp
xchg
or
ljmp
cld
xchg
daa
fisubs
pushf
testl
aas
jne
inc
adc
inc
inc
bound
out
sub
and
scas
stc
sbb
xchg
push
or
std
mov
jg
and
mov
jb
or
outsl
sbb
mov
pop
inc
add
xor
mov
mov
fcoml
stc
enter
jge
xchg
inc
ret
jns
repnz
xchg
lahf
push
cmpsl
jecxz
outsb
popa
push
xor
movsb
jecxz
arpl
inc
xor
jne
lret
mov
out
icebp
adc
xorb
push
mov
lret
mov
sbb
popf
sub
push
sahf
mov
mov
out
cmp
in
clc
push
dec
xchg
in
addl
iret
inc
pushf
loop
js
cmp
sarb
jnp
mov
mov
imul
pop
fwait
push
fldenv
pusha
stos
inc
hlt
add
push
nop
dec
pushf
mov
imul
pop
lar
push
outsl
cmp
movsb
movsl
es
outsl
fmuls
sbbb
fs
lea
dec
jecxz
jbe
test
or
in
mov
sbb
inc
adc
cmp
sbb
repnz
test
adc
int
pop
cmp
push
mov
mov
pop
inc
mov
repz
fisubrl
mov
or
xcrypt-ecb
cmpsl
mov
pop
push
xchg
xchg
cmp
stos
cmpsl
mov
test
mov
add
test
repnz
jno
icebp
fnsave
ljmp
and
shrb
mov
lret
pop
ret
repnz
aad
cmp
in
xchg
movsb
adc
scas
xchg
bound
loopne
mov
loop
sub
cmp
jns
out
sbb
in
pop
cmp
repnz
fldcw
pop
mov
or
sub
sub
mov
mov
inc
gs
adc
xorl
data16
pop
ud0
mov
pushf
inc
mov
cmp
cmp
lcall
push
cs
push
or
or
cmp
clc
cmc
fbld
mov
push
mov
sub
rolb
dec
xor
cltd
cli
xor
dec
mov
jns
clc
addb
dec
aas
movsl
and
out
xchg
out
cmp
mov
int3
mov
mov
xchg
std
mov
lods
fisttpl
mov
adc
inc
sub
sahf
mov
fcmovu
jl
inc
push
xor
aam
inc
or
stos
xchg
cmp
or
das
xor
mov
cld
dec
imul
scas
inc
movsl
data16
outsl
dec
and
enter
cmp
pop
pop
pushf
jp
inc
pop
jmp
out
hlt
xlat
int
mov
mov
jmp
divl
or
jge
cmp
mov
and
int
or
daa
push
jno
insb
mov
adc
test
mov
dec
loop
xchg
popa
lea
sbb
push
das
push
mov
icebp
dec
mov
call
scas
mov
dec
jge
in
pop
cmp
ds
push
mov
and
push
xor
push
jns
mov
push
mov
leave
xchg
out
add
decl
xor
lock
popa
int
pop
int3
lret
loope
adc
loopne
cs
mov
cli
jge
insl
movsl
in
push
inc
dec
clc
mov
cs
testb
mov
cmp
or
dec
stos
loop
add
sbb
pop
and
mov
js
jae
in
mov
or
push
stos
add
jbe
or
in
jae
xor
push
mov
std
imul
ret
test
push
mov
lock
cli
jp
in
data16
mov
dec
cmp
and
out
add
test
rorl
jns
aaa
insl
stos
das
xor
or
das
sbb
ljmp
loope
aas
mov
cmp
enter
test
in
inc
popa
mov
xorb
cmpb
sbbl
call
lods
fsubp
scas
testb
lods
imul
lock
sti
out
or
lods
mov
stos
jae
mov
add
les
jbe
or
lret
cmp
and
jns
mov
jae
rolb
jge
jno
ror
xor
je
cmp
jns
push
mov
mov
fsts
insl
pop
jle
movsl
cmp
dec
loopne
pop
pop
movsb
adc
sub
cmpsl
inc
lds
lods
add
jns
ja
sbb
xchg
pushf
je
pop
xchg
mov
out
ficoml
fwait
mov
xchg
or
ljmp
insl
test
xor
mov
xchg
jae
push
shll
jp
arpl
adc
das
mov
cmp
cs
jne
sbb
das
or
ret
cltd
jbe
scas
inc
jmp
cmp
dec
les
jns
add
jo
pop
pop
cli
sbb
mov
xor
xor
std
dec
into
sti
xor
sub
mov
pop
test
fnsave
das
push
mov
cld
mov
push
int3
xchg
ficompl
xchg
outsl
ret
mov
js
bound
insl
outsb
cltd
fldcw
sub
fs
mov
mov
pop
into
int
xchg
pop
rol
cmpsb
in
sub
adc
in
sub
shll
cmp
pushf
push
pop
fdivr
mov
aas
mov
test
xchg
mov
sub
shll
icebp
shrl
or
mov
cmp
jle
mov
cwtl
insb
mov
xchg
jp
shll
cltd
jg
fists
data16
adc
cmp
aad
loope
popa
js
shl
cmp
aaa
sbb
xchg
jo,pt
jne
dec
fwait
ja
loope
imul
xchg
xor
cld
lods
outsl
inc
sbb
pop
rcll
int3
ret
sub
and
aas
repz
test
pop
int3
test
popf
or
test
sub
mov
lock
cmp
push
xor
jno
rcrl
or
xor
cmp
inc
movsb
mov
and
std
popa
arpl
dec
cmp
sub
aaa
clc
repnz
mov
adc
shll
and
arpl
dec
pop
cmc
nop
js
jecxz
jb
xchg
gs
push
stc
jg
in
ret
icebp
adc
jb
fbld
std
jae
test
andl
stos
xchg
sub
xlat
xchg
sarb
pushf
push
aas
repz
mov
mov
lahf
pop
push
in
jp
imul
mov
add
aam
movsl
mov
mov
insl
fmull
dec
xor
adc
out
pop
nop
out
insb
inc
ret
psubsw
sahf
sbb
sbbl
and
fbstp
ja
loopne
mov
iret
jmp
ds
pop
stos
aad
sub
sbb
mov
or
flds
jecxz
inc
mov
jbe
xlat
sub
insb
jp
scas
das
push
xor
and
fidivrs
dec
xor
scas
xchg
dec
lahf
xor
lahf
push
imul
daa
push
fdivl
pop
push
pop
gs
pop
inc
cwtl
test
jns
in
add
out
cld
fucomp
lds
js
push
jo
pop
lret
jbe
mov
lea
xor
test
mov
cmp
xchg
pop
mov
fistpl
loope
jo
mov
fildl
test
adc
daa
add
pop
and
int
nop
mov
pop
add
js
arpl
dec
xchg
dec
and
stos
mov
je
lcall
xor
push
push
cmpsb
or
cmp
in
sub
or
dec
ror
push
jne
stos
sahf
roll
mov
adc
data16
rcrl
and
or
jnp
pop
inc
mov
push
inc
cmpsl
push
and
push
inc
jg
inc
adc
outsl
jmp
dec
sub
in
mov
mov
xor
mov
adc
sbb
in
mov
jnp
jmp
cmp
popf
and
dec
jge
inc
movb
mov
mov
sbb
sub
jle
jb
adc
and
lods
daa
mov
shlb
out
and
enter
xor
sahf
and
sbb
or
jp
loopne
fs
pop
push
xor
rcrl
aaa
and
cmp
dec
out
adc
lcall
cmp
push
stc
inc
jnp
pop
mov
stos
jp
ds
jle
pop
sbbb
out
aam
fwait
add
mov
inc
leave
or
cmp
mov
rclb
xor
mov
jle
sbb
mov
jg
xor
adc
mov
movsb
sbb
loop
popa
cli
cltd
mov
mov
les
push
xlat
and
xor
and
popa
dec
dec
push
outsl
js
add
pushf
mov
arpl
test
addl
mov
and
icebp
stos
movsl
sbb
movsb
mov
mov
xor
add
lods
push
movsl
leave
sub
cmp
loopne
jns
mov
inc
mov
loope
les
sbb
shlb
dec
sub
push
mov
jmp
inc
addr16
push
push
inc
lds
adc
mov
adc
and
ljmp
bound
cmp
sbb
push
fistpll
int
mov
jnp
and
lea
push
iret
or
aas
test
scas
neg
pop
repz
mov
mov
push
lret
dec
outsl
xor
cmp
mov
pop
ret
pop
scas
icebp
xchg
mov
sbb
aas
xor
dec
or
cmp
mov
outsl
lods
fwait
insb
inc
jb
adc
lea
popf
rcrl
fidivrs
inc
mov
cmp
push
and
stos
pop
dec
pushf
mov
push
mov
or
call
mov
sbb
mov
inc
mov
lods
rorl
dec
xchg
adc
mov
dec
sbb
mov
rorb
je
sti
mov
in
sti
les
out
repz
iret
pushw
cs
lods
mov
mov
add
popa
sbb
jmp
push
iret
push
jns
mov
cmp
jmp
lcall
cmp
push
pusha
jle,pt
rolb
lea
movb
pop
test
mov
fbstp
pop
inc
mov
in
push
add
add
push
cmp
and
push
dec
mov
test
cmc
cmp
adc
mov
adc
movsl
in
xchg
mov
sub
sub
scas
shlb
sub
sub
inc
pop
cmp
fidivs
nop
lcall
fwait
add
sbb
pop
lds
jg
xchg
push
movsb
scas
sbb
repnz
xchg
in
leave
out
sbb
sub
add
movsl
icebp
mov
fdivl
cmpsl
inc
popf
sti
daa
lea
outsb
imul
push
rolb
mov
dec
inc
sahf
jns
jp
and
mov
lcall
je
cmpsl
mov
leave
sbb
inc
xchg
pop
inc
push
adc
xor
mov
jnp
outsb
out
jecxz
in
outsl
mov
fldt
mov
inc
pop
inc
sub
iret
lea
jae
pop
sbb
pop
push
ret
cmpsb
mov
mov
mov
stos
adc
sbbb
xor
mov
push
lds
rorb
ja
mov
lods
jns
out
mov
nop
jecxz
fwait
jae
js
xor
jmp
mov
mov
lock
popa
and
mov
mov
or
xchg
jo
or
scas
dec
mov
sbb
lea
shrb
or
pop
push
cltd
inc
adc
mov
cmp
add
jo
rcll
push
addr16
addr16
ficoml
ret
push
cmpsb
add
out
or
mov
faddl
pop
pusha
clc
in
push
push
ja
mov
add
mov
mov
jo
adc
jmp
unpcklps
or
lock
movsb
add
in
jge
mov
and
mov
xor
repnz
fbld
out
jg
sub
cmpsl
leave
jmp
in
in
lahf
test
aam
jb
mov
lret
aam
pop
push
data16
adc
mov
inc
sbb
clc
sub
push
inc
fwait
jbe
ficoml
imul
pop
cmp
ja
ret
push
sub
dec
in
faddl
sahf
push
mov
ja
adc
mov
add
jnp
ror
dec
sti
mov
pop
movsl
adc
adc
xchg
push
insb
push
cld
cli
out
cmp
sbb
xchg
out
pop
loope
pop
inc
insb
add
mov
dec
dec
gs
lahf
in
push
adc
fsub
push
lods
sbb
jl
mov
mov
ret
outsl
ja
rorb
cmp
inc
mov
ja
test
add
nop
lods
fcomps
and
scas
test
sub
sbb
test
out
in
fadds
cmp
ds
cmp
jecxz
fistpll
inc
inc
cli
mov
shlb
xchg
fldenv
pop
mov
inc
add
or
adc
fcoms
mov
out
push
cmpsb
stc
imul
add
push
mov
leave
sub
add
mov
push
dec
xchg
push
cmpsl
jecxz
pop
jo
fucomp
out
fbstp
adcb
cmp
and
int
mov
imul
ret
ds
aad
xchg
int
or
dec
sti
xchg
cld
scas
xchg
into
and
fs
stc
fidivs
jmp
sub
adc
mov
xchg
ljmp
ret
sti
sti
outsl
lret
psllq
sahf
add
cli
xchg
roll
jbe
lahf
aam
mov
mov
pushf
jns,pt
mov
pop
dec
push
push
les
mov
mov
mov
int3
mov
xor
push
cwtl
jno
mov
fistps
dec
stc
push
dec
icebp
ljmp
and
out
pop
lret
fs
mov
inc
shrb
mov
pop
mov
cwtl
and
cld
int
push
mov
imul
mov
cmp
fmuls
pop
jle
test
adc
jecxz
jl
mov
in
dec
leave
std
dec
mov
lods
dec
push
inc
stos
mov
cmp
arpl
fwait
add
adc
add
out
or
sbbb
cmp
andl
shrl
push
into
mov
push
lea
push
and
les
xchg
loope
inc
xchg
int3
jge
and
xor
jge
add
dec
pop
xchg
xchg
inc
in
ret
aad
in
arpl
cmp
cmp
outsl
cli
xlat
aas
mov
xor
sbb
repnz
stos
pushf
mov
aad
mull
lret
loope
mov
jg
int3
js
fmuls
gs
inc
push
aas
xchg
dec
dec
popa
mov
cmp
adcl
into
xchg
xchg
jl
fstps
and
scas
sbb
pmaddwd
lds
add
pop
push
push
add
jmp
aaa
fidivrl
push
xchg
fsubs
rcrl
mov
repz
mov
mov
xor
pop
inc
fstps
ret
cwtl
mov
jg
cmp
jno
push
cmpl
fiaddl
fstps
jnp
push
shll
mov
push
dec
mov
sbbb
arpl
enter
inc
push
insl
sub
xor
xorl
inc
dec
jne
iret
pop
inc
test
push
scas
cli
fmulp
mov
mov
pop
xchg
test
sahf
imul
inc
push
cmp
repz
jnp,pn
sahf
ja
cmp
push
rcl
adc
push
inc
sbb
push
fists
cmp
jb
jne
sahf
bound
mov
nop
sbb
sub
cmpsb
popa
or
sub
jge
mov
pop
sub
pusha
sbb
or
jno
shll
push
ficoms
cmp
push
lret
push
and
dec
daa
cli
mov
popa
rep
fistpll
sub
lret
pop
pusha
mov
mov
add
mov
adc
imul
movsb
fwait
or
lahf
mov
pop
jns
jbe
jecxz
ljmp
inc
ret
das
leave
movsl
popf
psrlq
loopne
jb
inc
pop
movsl
das
mov
cld
fimuls
xchg
bound
and
lock
ss
call
lahf
sbb
push
and
jbe
lret
mov
jecxz
imulb
xor
lahf
jne
jnp
out
ret
arpl
in
xlat
jo
mov
push
lods
aad
ret
cmp
or
imul
loope
ljmp
push
mov
icebp
xchg
ss
clc
nop
xchg
sbb
mov
pop
xor
mov
repnz
aas
xor
idivl
inc
and
adc
insl
adc
cs
negb
outsl
add
xchg
xor
xchg
sarb
mov
in
pop
fs
fs
or
clc
jmp
rcrl
and
adc
xor
sub
dec
jbe
arpl
out
cmpsl
out
pushf
jae
out
xor
hlt
or
popa
movsl
inc
cmc
mov
push
mov
addr16
jae
iret
shll
cmp
pushf
xchg
push
lods
popl
je
addr16
bound
inc
sbb
sbb
lcall
mull
fs
subb
test
sbb
cmpsb
mov
imul
adc
xchg
xlat
push
ss
loopne
pop
popa
loop
nop
sti
notl
adc
xorb
mov
je
pop
pop
push
sbb
and
inc
shr
lcall
test
sub
mov
adc
mov
aas
fwait
pop
push
imul
out
out
mov
fldl
out
enter
das
or
fsubr
mov
add
lret
jg
lahf
dec
imul
mov
fbld
xor
xor
fadd
push
repnz
nop
push
shl
fucomip
ljmp
inc
xchg
cwtl
inc
pushl
cmpsb
cmp
jb
xor
adc
movsb
clc
test
out
mov
dec
dec
iret
aaa
add
adc
cmp
stos
dec
aaa
mov
rolb
dec
mov
sbb
sub
aad
movl
mov
js
add
push
push
adc
fsubrl
dec
push
ja
cmpsl
test
in
pop
out
or
jb
pop
idivb
add
shl
ja
int
repnz
pop
ss
push
cmovl
push
add
and
mov
mov
scas
enter
cltd
mov
push
mov
out
jp
dec
mov
dec
add
pop
adc
outsw
imull
bound
ret
sbb
pop
dec
cmpsb
aaa
fstl
mov
adc
dec
mov
jnp
test
out
enter
inc
jb
and
icebp
inc
sub
inc
push
jnp
mov
and
pop
sub
sti
mov
mov
push
inc
mov
pop
setle
or
ja
leave
sbb
mov
pusha
xorl
jp
or
cs
aaa
sbb
mov
cmp
mov
repz
adcb
gs
nop
addr16
ja
scas
repnz
mov
jae
mov
cs
mov
mov
sub
mov
pushf
cmp
xchg
imul
inc
jmp
xchg
or
sbb
loope
pop
jns
das
dec
insb
je
clc
into
push
inc
add
aas
popf
add
and
rorl
test
nop
dec
bnd
xchg
and
pop
mov
loop
call
in
pop
cli
sbb
cmp
add
add
cwtl
stc
push
aam
negl
and
out
outsb
push
pushl
jge
scas
add
out
dec
leave
jg
push
inc
sub
xchg
mov
loop
cld
mov
inc
outsb
in
jnp
adc
or
loop
inc
xor
stos
fldz
iret
repnz
mov
rcl
or
movsb
outsl
adc
lods
push
loope
dec
pop
jno
add
xchg
je
rolb
ror
loopne
push
sub
xchg
adc
mov
add
fldcw
mov
push
or
dec
mov
mov
popa
adc
jae
mov
loop
int
mov
repnz
divl
test
dec
repz
push
jb
mov
lock
jge
out
pop
nop
or
sbb
repz
push
push
add
xchg
shrb
test
mov
mov
nop
inc
iret
rclb
sti
mov
test
push
mov
jmp
fcompl
clc
pushf
js
sti
sti
xor
xlat
negl
loop
shll
aaa
sbb
in
pop
mov
fcoms
xorl
xlat
pop
scas
aam
in
pop
repz
cmpl
xor
jmp
xchg
and
loope
repnz
push
popf
cmpsl
inc
out
fistl
sbb
xchg
popf
jle
cmp
das
mov
mov
inc
push
hlt
or
or
inc
and
cmp
ja
mov
cmp
mov
stc
test
sub
cwtl
dec
ret
sub
out
dec
mov
in
call
sub
and
jl
aas
fsubrl
adc
addr16
mov
xor
or
mov
lds
into
dec
pop
pop
push
add
cmp
adc
and
jo
mov
xchg
inc
lcall
les
sahf
aas
in
xchg
rcr
jo
xchg
sub
mov
mov
imul
ljmp
rcl
mov
enter
pop
sbb
ja
or
mov
mov
movsl
sbb
in
push
scas
in
mov
adc
pop
mov
addr16
add
dec
into
das
sub
mov
jle
inc
mulb
mov
insl
xchg
cmp
aas
adc
push
out
flds
add
fcmove
lods
sub
leave
sbb
push
outsl
push
lret
lods
negl
lcall
pop
mov
sub
inc
cli
adc
fdivrs
test
jp
or
cs
ljmp
stos
cmp
jp,pt
jne
push
shl
repz
scas
pop
or
test
imul
mov
in
pop
or
test
cwtl
fiadds
push
cwtl
lea
or
test
push
push
mov
sub
out
jbe
pop
xor
jno
adc
fdivrl
into
imulb
enter
ficomps
imul
into
xor
jl
jp
cmc
testb
xchg
push
pop
jb
jno
mov
adc
fstps
cmpsl
in
xlat
xor
enter
inc
fiadds
ret
adcb
cmp
lock
mov
pushl
add
jmp
jns
loopne
popa
lcallw
rorb
jmp
xchg
pop
jne
daa
subb
xor
not
push
cld
xor
mov
xchg
punpckhdq
sbb
dec
lock
incb
mov
push
fisubs
fwait
imul
and
xor
in
mov
pop
nop
mov
cltd
dec
push
xchg
xchg
jno
pop
add
sbb
ret
mul
add
push
js
cli
xchg
and
nop
mov
inc
sbb
or
add
sarb
ljmp
sbb
jb
mov
shld
stos
push
dec
mov
adc
mov
rol
and
in
pop
sbb
dec
int
mov
into
xchg
test
nop
mov
mov
adc
stos
inc
sbb
jle
cwtl
cwtl
arpl
jae
xchg
xlat
fdivrp
jne
push
cmp
lret
dec
es
mov
mov
cwtl
or
jbe
and
push
cmp
sbb
pop
inc
cmpsl
sarl
adc
std
sbb
mov
push
and
js
lret
or
ds
sbb
sahf
fwait
xchg
pop
xchg
or
sbbl
pop
dec
test
test
aam
test
int
push
jb
xchg
push
sbb
sub
frstor
shll
lea
sub
jle
xor
flds
es
into
fnstsw
cmpb
adc
cltd
push
sub
sub
movsb
push
cmp
add
or
cmp
lcall
jle
clc
rorb
rol
sub
ss
fs
pop
mov
push
xorb
dec
or
mov
pop
cmp
sbb
cmpsb
pop
jae
sub
addr16
pusha
xor
mov
iret
dec
xor
sti
int3
mov
orb
movswl
sbb
imul
or
sbb
dec
push
sahf
in
or
mov
pusha
xchg
lahf
clc
js
mov
add
stc
mov
mov
mov
arpl
inc
stc
mov
je
jbe
pop
fadds
lds
cli
adc
dec
or
in
gs
jnp
inc
fwait
cs
lcall
mov
dec
nop
cmp
shlb
cmp
jecxz
and
shll
mov
dec
mov
pusha
cmp
icebp
push
call
pop
aam
pop
negl
or
insl
or
pop
movsl
add
in
fs
jb
mov
clc
or
push
inc
and
mov
add
lods
les
xor
int3
add
pop
dec
cmp
call
and
mov
xchg
cmp
sbb
jnp
das
mov
cmc
jbe
mov
movsb
inc
pop
pop
jecxz
pusha
mov
xchg
shlb
pop
adc
rclb
pushf
shrb
je
push
pop
fisubrs
jae
xor
test
in
mov
insl
mov
les
pushf
insl
and
mov
push
outsb
sbb
push
int3
xchg
loop
int
call
mov
loope
das
scas
jns
scas
mov
js
cli
loopne
push
ret
stc
adc
mov
jl
fsubs
or
aaa
sbb
gs
push
jb
jae
fistl
mov
sub
out
rorl
xor
stos
fistpll
add
and
mov
pop
push
push
repnz
pop
lods
cmp
ja
pop
popf
jno
cs
mov
pop
mov
xchg
push
lret
jecxz
jb
or
xor
das
pop
xchg
pop
rcll
mov
jg
stos
arpl
enter
jge
repz
mov
icebp
std
std
dec
rorl
call
mov
sub
imul
inc
inc
fcmovnu
pop
cs
xor
bound
add
pop
lds
cmp
andb
xchg
shlb
sahf
or
lods
loop
int3
test
fstl
or
test
cmp
mov
push
ljmp
push
bound
lods
mov
leave
xor
adc
mov
pop
in
mov
mov
dec
rol
and
cmp
cmpl
shl
xchg
jl
outsl
inc
cs
inc
pop
inc
out
push
insl
xchg
mov
fs
stos
xchg
repz
xchg
xchg
mov
sub
sbb
mov
push
dec
add
mov
loop
cmpsb
push
aaa
pushl
fs
out
pop
je
repz
adc
pop
and
cmp
mov
call
lods
repnz
das
dec
pop
repz
inc
jbe
sbb
loop
cli
sbb
xchg
lcall
cld
sub
jl
jmp
cli
sbbl
pop
std
jb
mov
mov
mov
dec
cmp
ret
into
cwtl
addl
test
add
movb
cmpsl
pop
inc
pushf
push
lods
shld
mov
fwait
inc
mov
xchg
stos
jne
push
hlt
jle
mov
pop
sub
inc
popa
lcall
out
xor
push
jo
add
xchg
jae
mov
mov
mov
bound
pop
outsl
scas
xchg
mov
sbb
pop
mov
sbb
sub
sub
test
sbb
xchg
sbb
shrl
and
push
repz
pusha
leave
jno
std
jo
imull
jge
insl
lahf
push
add
push
mov
pusha
pop
sbb
xchg
ficompl
mov
insl
pop
loopne
insb
nop
lcall
push
xchg
jl
bound
rol
xchg
inc
scas
fidivrs
fs
xchg
push
lahf
scas
mov
jp
scas
inc
out
js
fidivs
mov
pop
test
jns
add
inc
into
sbb
loopne
jne
cmp
hlt
int3
pop
lods
sbbl
mov
mov
scas
inc
dec
imul
mov
mov
inc
ret
dec
fnsetpm(287
aas
fisttpll
mov
lods
mov
mov
adc
ja
ja
cltd
mov
aam
call
sbb
lods
pop
subb
stos
inc
mov
push
mov
push
out
inc
stos
sub
jle
frstor
push
rcl
mov
mov
mov
scas
xchg
mov
cmp
ret
cmpb
in
mov
outsb
dec
push
incb
daa
mov
mov
jno
inc
push
xlat
add
in
push
js
into
sbb
jecxz
mov
shlb
mov
lret
lcall
mov
jg
pop
xchg
aam
int
mov
dec
jmp
repnz
lret
popf
mov
shl
adc
dec
aaa
push
dec
adc
inc
or
aam
cli
cmp
ja
push
outsb
inc
gs
shr
dec
shl
mov
inc
or
add
idivb
js
scas
shrl
mov
hlt
push
mov
pop
pop
jle
push
int
fwait
inc
jge
sbb
and
in
sub
add
lret
and
mov
inc
push
cmp
sub
jmp
cmp
push
inc
xchg
ja
inc
insb
mov
call
dec
call
cmp
aaa
addr16
rcrl
cwtl
cmp
enter
sbb
jno
push
and
or
fldt
sbb
sar
jmp
test
mov
fnstcw
and
pop
push
dec
xor
or
ret
dec
aas
js
xchg
jg
inc
mov
lods
push
push
inc
adc
addb
int3
fstpl
xor
push
in
shl
icebp
dec
outsl
pop
out
jne
stc
xor
adc
iret
outsl
mov
dec
push
repnz
cmpl
mov
pushl
stos
add
add
cmpsl
dec
frstpm(287
xchg
ljmp
pop
jo
lahf
sub
inc
ret
je
pop
dec
sahf
mov
jns
and
mov
or
in
sar
adc
std
jne
pop
les
arpl
adc
push
in
and
xor
daa
dec
pop
lds
inc
subl
ja
insb
les
data16
pop
jbe
out
test
repnz
addr16
shll
mov
pop
cltd
dec
or
inc
ret
lcall
jge
mov
adc
out
or
repnz
fisttpl
out
xchg
mov
iret
mov
xor
mov
pop
int3
test
ja
stos
xchg
xlat
inc
lahf
es
adc
add
frstor
nop
cwtl
ds
imul
mov
scas
or
add
cmp
adc
mov
mov
pop
adc
push
jb
sub
je
xchg
repnz
mov
stos
xchg
sub
xchg
movsb
lea
mov
lds
xor
iret
lret
fsubp
shlb
gs
jp
cld
stos
xchg
outsb
pop
sbb
mov
mov
shll
sub
cmp
lea
dec
inc
xor
lret
sti
cmp
pop
int
inc
arpl
in
sbb
addr16
mov
push
in
adc
mov
and
arpl
outsl
sub
data16
addr16
xchg
dec
mov
lcall
aad
pop
popf
jo
cwtl
imul
das
sbb
sar
or
adc
fs
fptan
inc
clc
mov
push
es
add
pop
popa
mov
insl
pop
jbe
ja
testl
imul
cmp
pop
fldcw
xor
jno
pushf
or
iret
or
fists
and
jl
adc
push
dec
loop
adc
add
ljmp
sbb
jle
jle
adc
les
nop
nop
data16
jmp
adc
add
xchg
in
mov
mov
and
js
mov
add
and
or
jo
cmc
ja
adc
pop
sub
fstps
jmp
inc
mov
sub
mov
or
mov
adc
iret
and
inc
insl
cltd
xor
in
nop
and
jmp
insl
fisttpl
mov
into
inc
loope
fstpl
xor
jecxz
ret
inc
scas
mov
dec
sbb
and
mov
jns
cld
cs
pop
imul
stos
hlt
xor
aad
dec
xchg
pop
cli
je
xor
outsb
or
fdivs
mov
test
out
push
xchg
cmp
jecxz
test
jle
rcrb
stos
lock
dec
nop
dec
sub
xor
dec
andnps
xchg
out
in
inc
sub
aas
xchg
lret
outsb
lods
pop
nop
mov
mov
je
add
mov
fidivrl
xchg
ret
xchg
or
pop
push
mov
push
mov
cmp
sbb
popa
cmp
cmp
out
jg
test
dec
popf
push
js
lea
mov
icebp
insb
addr16
adc
cli
fs
cmp
aaa
das
mov
pop
dec
out
in
adc
and
stos
popf
xchg
adc
adc
movsl
inc
sbb
mov
jno
lods
mov
cwtl
out
lret
scas
mov
sarb
inc
jecxz
mov
and
adc
test
sbb
mov
shll
lcall
pop
jl
cmp
pop
sbb
les
shll
loop
and
mov
and
shl
mov
jle
inc
xchg
fwait
call
cmp
out
int3
ret
testb
sub
ret
int
jb
xchg
mov
mov
nop
outsb
jle
jbe
pop
mov
mov
adc
mov
xor
cmpsb
inc
pop
and
push
rorl
mov
ja
cmp
adc
xor
cmp
in
sub
adc
int
inc
ficomps
cmp
cmpsl
mov
push
ss
xor
dec
sub
inc
sti
xchg
inc
inc
cmp
js
loope,pt
std
add
or
jo
sub
cmpsl
or
push
sub
popa
bound
jle
inc
pop
xor
adc
gs
shll
push
cmpsl
jnp
bound
xchg
jle
out
lcall
gs
imul
xchg
dec
sub
jge
lea
push
stos
inc
dec
test
jo
pushf
leave
add
jmp
mov
add
mov
and
ret
stos
jo
xchg
xor
lea
push
je
and
stos
or
push
xchg
dec
mov
cmp
push
dec
push
imul
xchg
push
or
add
gs
cli
ja
pop
in
popf
mov
pop
jmp
int
pop
dec
xor
jno
push
mov
les
movsl
add
add
insl
mov
inc
jb
xchg
adc
loope
outsb
test
mov
sbb
sub
mov
sub
sub
xchg
pop
pop
dec
dec
push
and
faddl
inc
push
sbb
mov
sbb
dec
stos
or
sbb
fcmove
or
aas
jne
xlat
push
mov
dec
cmp
fistps
cmc
push
cmpsl
sahf
lcall
xor
fnsave
adc
push
outsl
cmp
push
and
adc
ds
imul
rolb
jo
mov
repz
loopne
or
push
mul
mov
or
nop
push
sub
jecxz
cld
repz
xchg
lahf
sbb
cmp
fisubrs
imul
pop
inc
ret
pop
inc
pop
push
jno
cmp
aam
mov
jmp
or
xchg
cli
inc
sbb
in
enter
sbb
test
test
dec
enter
jl
and
lods
inc
sbb
bound
repz
mov
mov
sbbb
mov
movsb
je
fisubl
push
and
push
je
dec
add
shrb
test
mov
ret
fs
mov
shrb
xchg
icebp
insb
push
sahf
mov
out
and
in
cmpsb
int
cld
daa
out
leave
mov
or
push
dec
imul
xchg
scas
in
sub
and
js
mov
daa
das
js
xor
daa
inc
sub
fstl
repnz
sub
out
cmp
jbe
mov
pop
aas
stc
xchg
sbbl
lea
lahf
aaa
xchg
imul
and
addl
adc
lods
iret
lods
cmp
mov
in
add
xchg
rcll
jmp
adc
mov
fsts
outsl
add
xchg
inc
jae,pn
arpl
ljmp
lcall
and
xorl
dec
cli
shlb
arpl
lods
inc
cltd
xchg
mov
push
fimull
sub
pop
cli
jne
pop
push
or
push
in
rcll
pusha
dec
xor
fildl
xor
sbb
push
out
pop
enter
mov
sbb
xor
lds
lret
jnp
lcall
stc
mov
roll
fisubrs
stc
lcall
mov
cltd
mov
jne
mov
popf
pop
les
mov
shrl
xor
xchg
insb
pusha
mov
sbb
xor
outsb
add
mov
sahf
sbb
stos
int3
pop
dec
xor
adc
pop
cli
sub
jae
cmc
or
aaa
cmp
fstsw
pop
iret
xor
ret
push
and
adc
mov
repnz
xchg
in
jns
pop
or
repz
popf
cmp
loopne
out
xchg
nop
int
daa
mov
mov
inc
ss
pop
adcl
outsb
movl
pop
dec
setg
sbbb
adc
neg
scas
out
ror
outsl
lret
mov
lcall
cmpsl
or
push
inc
cmp
iret
dec
mul
jns
hlt
into
sub
add
cmpl
js
fisttps
jg
push
in
test
adc
mov
aam
push
int
cmp
xor
aad
popa
es
cwtl
ljmp
inc
test
jecxz
test
test
and
mov
orb
xchg
ror
fsubp
cmpsl
inc
xor
das
js
sub
sahf
test
mov
movsb
dec
xchg
mov
enter
rol
in
scas
sbb
and
push
adc
ljmp
pop
mov
pop
jl
mov
sub
jecxz
sbb
push
jge
jecxz
push
ja
add
xchg
mov
cwtl
ds
idivb
dec
jle
pop
stos
sbb
inc
cmp
in
push
lods
test
jecxz
les
inc
cmp
lods
sub
cs
in
mov
roll
adc
adc
mov
shrb
adc
fcmovnu
sarl
sub
sub
push
mov
pop
movl
sub
mov
push
in
imul
cmpsl
add
addr16
jne
jb
mov
or
mov
xchg
cmp
sbb
and
ja
outsl
fiadds
mov
push
adc
xor
jge
fdivrl
negl
jo,pn
inc
stos
push
inc
xchg
sbb
inc
jne
xor
mov
dec
xor
mov
xor
inc
popf
rcrb
into
xor
adc
addr16
in
stc
in
sbb
jns
lock
mov
aas
dec
add
mov
push
xor
fistpll
dec
shll
xor
aaa
dec
inc
nop
pop
mov
pop
inc
inc
out
cmp
mov
jge
mov
aaa
cmp
push
ljmp
mov
ret
stos
dec
mov
scas
icebp
mov
push
test
aam
subl
cwtl
repz
pop
out
push
in
push
mov
jecxz
add
loop
cmc
pop
push
stc
aam
jp
xor
cmpl
lds
mov
je
xor
xchg
xchg
test
aaa
lds
pop
mov
mov
and
cmp
add
jb
icebp
inc
mov
outsl
fistl
sbb
mov
inc
jno
ret
jns
mov
lods
data16
push
rcl
push
rol
out
sbb
dec
jecxz
ret
cmp
je
out
dec
jp
outsl
mov
mov
adc
fimuls
dec
cmp
lcall
sub
int
push
fimuls
popf
add
and
shrl
test
sub
lret
in
lahf
sti
cwtl
lock
pop
sub
iret
push
js
dec
xchg
or
icebp
movsb
fidivl
sbb
push
mov
or
push
jp
mov
fldcw
mov
lds
mov
jp
xor
hlt
mov
add
mov
stos
sbb
shrl
cmp
add
mov
and
add
jns
inc
and
or
mov
repnz
add
outsl
test
loopne
fs
sub
in
movsl
mov
fsts
sbb
add
into
mov
jge
into
pushf
sbb
fstps
test
in
xchg
stc
shrb
les
pop
mov
pop
out
lods
int3
js
movsb
and
sbb
jle
sbb
cmp
sub
xor
shlb
fistl
loop
arpl
add
mov
repnz
aam
mov
push
fnsave
mov
cmp
cmc
leave
fwait
mov
lahf
pop
jmp
inc
sahf
nop
popf
test
dec
insl
mov
jecxz
ds
fildl
mov
mov
popf
xchg
loopne
mov
andb
stos
xchg
jge
dec
jl
xor
in
loop
mov
sahf
cld
sub
sub
adc
jl
jno
adc
add
jmp
adc
stos
popf
out
pop
test
test
inc
push
mov
adc
stos
fs
mov
and
or
cmpl
mov
xor
pop
ss
dec
jecxz
hlt
enter
dec
incl
dec
int
cltd
fadd
jbe
lock
cld
in
push
orb
lock
dec
jbe
dec
pop
cmp
movsl
enter
xchg
jae
in
jo
bound
push
push
mov
scas
in
fnsave
adc
jno
mov
adc
insb
xor
lcall
xchg
inc
inc
xchg
out
testb
mov
cmpsl
push
movsl
in
fs
add
or
adc
push
enter
in
dec
jmp
lahf
inc
sub
jo
cmp
clc
or
hlt
push
imul
mov
out
or
push
in
das
and
cmp
inc
addb
inc
stos
sti
pextrw
insl
rol
sbb
add
cmp
stos
scas
movsl
or
cmpsl
xor
sbb
popf
ja
jae
in
jmp
pop
pop
lds
mov
dec
hlt
pushf
push
sti
and
andb
xchg
out
rcl
pop
jo
and
jp
jl
push
repz
insb
adc
out
ds
mov
mov
mov
pop
push
outsl
sbb
adc
dec
inc
cmp
mov
inc
push
or
fs
js
fnstenv
sbb
push
jl
sub
fldl
push
sti
push
push
sbb
mov
add
call
loope
xlat
out
inc
addr16
rclb
stos
cld
iret
dec
xchg
fdivl
jmp
xor
repnz
ds
push
int3
xor
xchg
mov
outsb
or
or
pop
roll
loopne
dec
mov
inc
or
mov
ss
jo
and
cmp
xchg
mov
ret
xchg
stc
cmpsl
orb
xor
es
out
jecxz
jne
xor
movsl
lret
inc
cli
flds
push
aaa
and
ret
cli
xor
daa
and
neg
std
jae
dec
into
adc
or
xlat
in
loop
adc
dec
aad
lock
popl
int
into
fisubs
fdivs
into
mov
xor
pusha
jo
sbb
push
andb
int
xlat
mov
mov
mov
inc
sbb
cli
mov
rcll
xor
push
pushf
pop
pop
cld
cmp
or
ret
das
mov
out
dec
cmp
xchg
and
aad
andl
pop
xchg
repnz
iret
add
iret
leave
aad
cmp
stos
mov
fiaddl
cwtl
adc
pop
and
int3
imul
aad
mov
xlat
mov
or
mov
adc
aam
adc
adc
dec
xchg
mov
stc
and
xchg
add
aas
inc
imul
fmull
inc
dec
lds
dec
jae
pop
shlb
nop
mov
push
pop
into
out
sub
mov
jge
scas
ds
popa
dec
mov
mov
repz
xchg
sbb
jle
aad
inc
icebp
push
pusha
add
jle
fiadds
jns
ret
dec
or
jo
xor
xchg
call
push
orb
insl
jae
sti
cmp
test
je
icebp
or
push
faddl
lods
pop
adc
mov
cmp
sub
add
fsubrs
orb
sti
inc
push
mov
fisttpl
sti
andl
fiadds
push
mov
vunpcklps
imul
scas
imul
cmp
shrd
pop
rclb
fs
pushf
leave
inc
imul
icebp
jg
test
out
ds
in
dec
or
pusha
sub
popa
dec
ljmp
stc
movsb
out
icebp
out
ficomps
adc
shrl
aaa
stos
adc
adc
mov
mov
adc
xor
rcll
scas
stos
addr16
mov
mov
sbb
or
and
jne
add
dec
and
stc
xchg
cmp
imul
xchg
mov
inc
mov
mov
xor
cmp
pop
xchg
xchg
mov
lret
xlat
mov
mov
dec
xor
sub
mov
ret
xor
xor
test
iret
sarl
pop
mov
sub
test
mov
scas
cmp
push
jo
adc
or
add
sub
ror
and
fildl
sbb
push
cmp
add
popf
insb
pop
dec
mov
xchg
cmpl
jl
inc
and
popa
mov
xchg
das
stc
pusha
fs
roll
sub
and
fsub
xor
cmp
cmp
lcall
cmp
push
call
cmpsb
mov
movsl
or
adc
and
pop
jnp
or
inc
test
xchg
ret
push
mov
mov
testl
fwait
lcall
iret
mov
mov
sbb
mov
mov
outsl
movsl
aad
pop
sbb
sbb
test
hlt
sub
fwait
dec
shll
push
mov
fmul
pop
adc
aam
jae
ljmp
rolb
mov
sarl
cmpsl
insb
adc
mov
xor
cmp
sub
xor
add
mov
enter
mov
jns
xchg
stos
adc
jge
push
jp
mov
int3
inc
out
or
jp
sub
push
xchg
xlat
sub
into
inc
inc
xchg
mov
test
lods
test
cld
pushf
mov
addr16
lcall
push
rorl
sarl
pop
ret
mov
inc
test
push
lret
stc
test
mov
and
and
cmp
mov
xor
sbb
mov
adc
repz
mov
push
in
fcmovnb
or
xor
rorb
mov
pop
sub
and
iret
xchg
push
jmp
pusha
stos
test
ret
xor
xchg
out
push
jno
sbb
sbb
or
jb
push
mov
mov
xchg
mov
shl
add
and
inc
xlat
cmpsb
sbb
sbb
inc
fdivs
xchg
repz
push
enter
sahf
xchg
test
mov
cwtl
and
arpl
sub
pop
jno
push
push
repnz
mov
xchg
mov
mov
inc
xchg
repnz
test
roll
mov
lds
shrl
mov
arpl
jnp
fdivl
sarl
leave
push
stos
jmp
cmp
xor
in
dec
jecxz
iret
xor
fistl
or
mov
mov
mov
pop
xchg
pop
adc
or
jns
mov
test
mov
and
jmp
mov
stc
sarl
dec
insl
cmp
push
loop
mov
nop
in
test
pop
js
out
push
push
ret
pop
aam
xchg
sti
das
jbe
pushf
repz
inc
loope
xor
fldenv
adc
push
pop
jp
push
aam
add
sub
enter
das
mov
and
popf
out
scas
call
push
lds
jp
pushf
jl
dec
dec
lock
dec
xchg
pushf
xchg
sti
mov
inc
mov
addr16
mov
xchg
sub
dec
xor
sub
mov
or
xchg
pop
add
add
jb
jo
ret
jmp
sbb
shrl
cmp
push
sbb
sbb
clc
xor
neg
xchg
sbb
pop
movsl
call
add
pop
dec
fistpll
push
jecxz
push
stos
push
inc
shrb
insl
orl
jne
inc
int
test
sbb
call
ret
pop
cmp
int3
pop
xchg
and
in
add
out
call
into
mov
sub
mov
sahf
xchg
jmp
xor
dec
movsl
test
ficoms
std
inc
push
cmp
jg
mov
and
jo
jns
mov
out
out
xchg
mov
xlat
cli
stos
scas
cli
out
ljmp
shl
fcomp
ret
insb
dec
movsb
lods
inc
fcmovnbe
xor
inc
jb
or
adc
loope
lds
addb
lock
push
jne
insl
into
jle
iret
adc
pop
fbstp
mov
lahf
pop
rolb
push
and
je
pop
xchg
out
jno
push
test
xor
push
leave
mov
cmp
dec
pop
mov
mov
mov
dec
and
lds
add
xlat
fldl
xchg
lods
jle
fistpl
dec
sbb
push
jnp
pop
insl
sbbl
clc
adc
cmp
sbb
mov
jl
xchg
inc
call
test
push
adc
jno
pop
dec
dec
jbe
or
mov
mov
sbb
fistps
fwait
test
push
mov
dec
jl
jmp
mov
cmp
xchg
outsl
ja
scas
dec
inc
add
pop
ds
dec
test
adc
in
jbe
mov
mov
in
int
sbb
loope
hlt
xchg
push
out
cmpsl
cltd
in
add
shl
cltd
sub
pushf
out
pusha
testb
xchg
inc
jecxz
adc
sar
or
push
ljmp
xor
jle
sahf
mov
mov
and
push
dec
xchg
xchg
pop
rcl
sbb
push
mov
dec
fnstenv
jl
subl
stc
bound
jo
sub
cmp
inc
add
pop
bnd
jl
push
popa
jo
jae
push
addr16
and
fnsave
outsl
lock
addr16
ret
clc
sub
jns
popf
mov
sbb
das
bound
test
outsb
cwtl
push
shrl
scas
repz
add
out
pop
xor
pop
and
mov
xchg
mov
mov
rcl
sbb
mov
movsb
andb
ficomps
push
daa
in
in
push
out
push
loope
ret
mov
mov
push
adc
sub
mov
sbb
push
push
clc
out
insb
ret
xchg
movsl
jl
sub
and
mov
sub
imull
and
outsb
scas
into
cmpsl
sbb
mov
aad
call
push
dec
shrl
ljmp
repz
mov
jmp
ja
mov
inc
mov
add
xor
pop
xorl
sub
stos
xchg
cmpsb
mov
data16
enter
call
pop
cmp
lock
sbb
add
mov
pop
push
lds
push
sub
std
cmp
mov
inc
pop
testl
push
add
xor
shl
ret
cmpsl
adc
xor
cmp
xorb
xchg
movb
dec
add
xlat
aad
mov
imul
xor
sarb
lds
sub
adc
repnz
clc
cmpsb
sub
das
addr16
pop
das
inc
les
jle
test
addr16
mov
stos
movsl
push
ret
in
pop
push
add
xchg
int
jge
sub
leave
mov
popa
mov
xor
push
unpcklps
and
andb
inc
mov
cmpsl
jge
add
outsl
dec
imulb
cmp
inc
mov
inc
sar
push
movl
inc
or
mov
dec
mov
dec
clc
pop
push
and
fistpl
mov
dec
imul
enter
fs
pop
shr
adc
aam
push
mov
jmp
pop
out
idivl
sub
lods
flds
dec
in
jmp
or
lcall
rcrb
xchg
inc
and
pop
cwtl
lods
push
stos
cmp
idivb
imul
mov
and
pop
pusha
add
out
rorl
cli
push
mov
imul
scas
xlat
push
movsb
jo
popl
mov
inc
stc
mov
or
xchg
mov
les
adcl
cmpsb
rcl
pop
pop
mov
test
sub
scas
add
adc
int3
rorl
test
enter
repnz
imul
loope
pop
popw
loop
pop
outsl
rorl
hlt
test
out
add
xor
lret
mov
dec
adc
xchg
les
xchg
mov
xchg
inc
mov
not
mov
jno
xor
mov
mov
adc
pop
mov
push
adc
iret
mov
jno
popl
outsl
sti
imul
cmp
sub
and
je
insb
or
ret
jp
xchg
dec
inc
in
sub
movsl
or
insl
fmul
xchg
inc
pop
inc
fwait
jl
cmp
jo
cli
daa
iret
mov
inc
push
movsl
xor
xchg
fs
or
xchg
mov
mov
ljmp
fsubs
xchg
lcall
nop
add
lret
cmp
ja
cmp
out
int3
inc
fldcw
mov
xlat
jp
fisttps
sbb
cld
push
lds
clc
popa
enter
aad
mov
push
aad
clc
aas
popf
sbb
cmp
repz
orl
mov
fisttpl
add
lea
pushf
rorb
sbb
out
aaa
out
push
dec
or
jb
es
shlb
jo
mov
mov
into
inc
push
cld
dec
push
mov
imul
fwait
or
leave
jg
sub
cmp
mov
lods
push
sub
gs
gs
aad
loopne
cmpsb
jle
jns
loope
xchg
add
movsl
xchg
cs
mov
mov
sbb
dec
jmp
add
out
jb
xchg
and
icebp
mov
hlt
adc
pop
mov
cli
xor
icebp
mov
sti
icebp
insl
xorl
sub
js
jno
adc
jle
lods
cli
sahf
adc
stc
dec
loop
adcb
nop
pop
insl
or
mov
jmp
xchg
es
xchg
jno
pusha
and
sbb
inc
sti
pusha
test
fcompl
or
iret
cmp
mov
mov
sahf
xchg
jecxz
dec
sbb
dec
outsl
add
push
test
or
test
sub
xor
pusha
cmp
inc
mov
sbb
fwait
in
mov
pop
sub
sahf
mov
sbb
sar
mov
cmp
ret
jmp
neg
cmp
enter
shl
ret
mov
or
push
add
in
clc
outsb
bound
lea
pop
jmp
ja
pop
movsb
mov
stc
aaa
stos
dec
lods
stc
out
cld
or
cld
fidivs
pop
jmp
std
fidivl
xchg
insb
pushf
and
cwtl
or
in
fidivs
push
mov
icebp
fisttpl
ret
mov
cmp
xor
push
push
xchg
cs
imul
adc
mov
stc
mov
fadds
xchg
imul
sbb
inc
pop
adc
push
inc
jp
mov
movsb
sbb
jg
aas
out
std
shrl
sti
jno
imul
inc
and
pop
pop
lahf
dec
repz
fxch
in
out
xchg
and
mov
mov
ja
push
sahf
cmp
scas
push
push
push
jl
push
push
inc
push
xchg
pslld
add
movsb
xchg
orb
pop
push
cmp
cwtl
dec
adc
xor
in
mov
dec
out
jg
jp
iret
or
adc
mov
stc
in
mov
stos
shll
fisubrs
mov
xor
addl
jbe
cmp
lock
mov
out
test
test
sub
mov
xchg
inc
dec
sub
mov
sub
or
ja
test
add
stos
fdivs
mov
push
mov
mov
xor
xor
cmp
push
fs
pop
in
test
cmc
push
fisttpll
ss
jns
arpl
andb
gs
bound
xchg
int
sub
rclb
xor
sub
mov
popa
pop
mov
stos
out
mov
sub
repz
ss
rcr
or
das
lret
jge
jl
repnz
fnstcw
cli
xor
mull
sub
inc
mov
aam
ljmp
clc
inc
add
xor
cmp
pushf
aad
cmp
mov
scas
xchg
movsb
inc
push
leave
pusha
adc
imul
cmp
mov
fmull
xchg
ja
mov
adc
add
xor
test
or
in
adc
push
arpl
jbe
filds
xor
imul
xor
xchg
add
inc
pop
mov
jb
mov
mov
subl
xchg
mov
sub
jmp
sbb
sahf
imul
shl
adc
lea
mov
ljmp
movsl
shrb
outsb
test
mov
sahf
fmull
pop
mov
stos
cmpsb
xor
lret
test
mov
daa
adc
pop
aas
cld
mov
mov
mov
arpl
scas
pop
pusha
in
idivl
mov
mov
std
xchg
mull
jge,pt
pusha
das
mov
mov
out
shrb
cmc
xor
sbb
mov
push
in
mov
push
sbb
fwait
ds
adc
fsts
mov
test
mov
movsb
dec
dec
mov
bound
outsl
rclb
inc
pop
enter
jg
adc
addr16
pop
mov
aas
or
cmpb
test
jg
push
pop
push
and
or
shl
subl
adc
push
orb
pop
ja
add
cmp
xor
jle
adc
sbb
jg
fsubs
fildll
pop
rorl
jns
mov
not
xchg
and
pop
xchg
inc
inc
adc
fwait
aas
scas
adc
mov
push
jge
ret
sbb
ja
sar
loopne
cli
cmc
mov
fs
int
lret
mov
shl
and
cwtl
cmp
insl
mov
cmpsb
dec
sbbl
lahf
cli
sti
lahf
dec
add
lea
fistl
je
adc
lret
push
dec
and
ret
lds
into
adc
lods
es
cmp
or
xor
sahf
out
loope
cwtl
fldl
cwtl
adc
sub
xchg
mov
jae
lods
bound
jns
inc
xchg
push
mov
insb
cmp
shlb
test
orb
je
dec
cmp
xor
push
cmp
aad
dec
jmp
inc
push
mov
scas
ficompl
and
andb
mov
mov
mov
stos
shll
imull
pushf
cltd
aaa
test
stc
movsl
adc
outsb
faddl
pop
out
sbb
movsl
call
mov
add
xor
push
and
or
jg
inc
imul
add
mov
and
pop
std
test
cs
movsb
insb
and
pop
not
pop
notb
xor
addr16
dec
iret
mov
jg
push
scas
jmp
mov
inc
enter
xchg
out
iret
cli
popa
dec
jnp
ror
leave
fwait
and
ss
mov
fcom
mov
push
in
mov
mov
push
jno
lock
les
adc
aaa
xchg
into
cmp
pop
es
or
adc
ss
and
mov
outsb
sbb
aam
sti
fsubs
data16
iret
mov
fiadds
sub
jbe
jne
loope
in
enter
insl
sub
add
jg
lock
cmp
cs
mov
push
test
notb
inc
mov
in
sub
ss
insb
cmp
or
mov
mov
pop
jnp
nop
pop
dec
bound
aaa
cli
pop
or
popa
mov
inc
pop
sub
hlt
dec
addr16
minps
adc
gs
sarl
movups
leave
enter
rol
adc
push
sahf
add
inc
pop
jl
dec
popf
pop
fsubrl
inc
mov
ss
jl
mov
pop
xlat
jbe
and
pusha
jne
jp
out
int
sbb
sbb
xlat
ret
ljmp
add
js
enter
xor
pop
sub
push
push
out
adc
push
pop
xchg
push
cmp
shrl
cmp
mov
scas
scas
xchg
push
mov
inc
out
cmpsl
sub
ret
aaa
push
sub
cmp
and
inc
out
daa
aad
int3
nop
arpl
ret
mov
nop
ss
mov
sub
sub
dec
imul
and
push
pusha
pop
lea
dec
ror
add
xor
inc
call
xor
and
lds
std
push
imull
mov
cmc
push
mov
aas
dec
dec
xor
imul
adc
stos
mov
cli
xchg
repz
and
adc
ret
inc
mov
adc
cmc
inc
movsl
hlt
sbb
xchg
movsb
or
fdiv
lods
sahf
xor
add
jecxz
js
cmpsl
adc
push
int
fucompp
pop
out
xchg
xchg
pushl
fcomps
imull
inc
int
pop
cmp
icebp
jle
cmp
mov
push
lahf
cwtl
push
xchg
call
xor
inc
pushf
jo
xchg
mov
dec
xchg
xor
test
inc
sti
mov
into
mov
inc
repnz
repz
mov
xorb
sub
loopne
xchg
imul
jmp
cmp
je
movsl
data16
xor
xchg
movaps
js
xchg
push
pop
xor
jmp
inc
leave
mov
fsubs
outsb
dec
jae
repnz
xchg
pop
aaa
lret
mov
pusha
push
add
cmp
nop
jne
jne
adc
mov
mov
inc
jmp
fisttpl
adc
bound
stos
imul
ss
sbb
mov
mov
loopne
pop
sbb
dec
lea
xchg
aaa
cmpsl
cwtl
sbb
enter
cmovne
pop
sub
loopne
popa
mov
mov
jbe
cmpsl
icebp
fists
dec
je
push
out
xor
movsb
leave
fsubrl
push
jno
mov
cwtl
and
and
in
pop
jmp
lock
xchg
mov
pop
jae
push
inc
push
push
sahf
ror
jge
mov
lret
shll
xor
cmpl
pusha
inc
adc
je
ljmp
repz
dec
add
out
mov
mov
lock
cmp
push
jg
dec
cmp
push
mov
cmpsb
jmp
cmp
gs
daa
outsb
adc
pop
fimuls
adcl
test
mov
mov
sub
insb
xor
mov
and
mov
xor
out
sub
subl
cmp
inc
dec
jns
out
ret
or
lea
dec
repnz
jg
xor
hlt
shlb
sti
xchg
jp
insl
mov
ror
stos
pop
les
adc
test
or
cmp
push
mov
mov
test
lds
cmp
mov
lret
push
xchg
test
push
in
scas
dec
push
push
xor
gs
sbb
pop
cmp
data16
push
cli
fcoms
pop
jb
sbb
js
mov
push
push
cmp
adc
push
mov
dec
dec
sub
mov
test
cmp
dec
into
xchg
jbe
inc
push
add
lods
vmwrite
sahf
sbb
cmc
notl
xchg
xchg
int
outsl
jnp
out
les
xor
xlat
inc
pop
xchg
js
int3
pop
aad
ret
xor
fstl
ret
clc
jle
fs
fldenv
fwait
sbb
cmp
lock
push
imul
push
repnz
sti
mov
fiadds
stos
shll
aam
orl
xor
scas
push
push
xor
mov
cmc
lahf
fmulp
pop
insl
xchg
inc
ret
jg
stos
dec
cmp
xlat
pop
mov
imull
jne
lods
pop
lds
cmp
ret
andl
cmc
scas
pop
xchg
jo
adc
cld
or
lret
cmp
adc
rcrb
xlat
pop
enter
push
ret
fs
mov
and
jbe
cmc
jecxz
or
shrb
orb
in
inc
insb
xchg
push
sub
mov
sub
mov
sub
mov
or
pop
and
mov
clc
inc
pop
xor
int3
sub
xchg
outsl
jecxz,pn
lahf
mov
cwtl
inc
lahf
loopne
stos
imul
cmp
fs
loop
addr16
adc
mov
subl
cmp
call
hlt
inc
movsb
in
add
pushf
inc
pop
lock
dec
dec
xchg
pop
out
sarl
xchg
outsl
outsl
add
xchg
gs
aaa
add
dec
ss
dec
jge
xchg
fmull
shrb
cs
int
push
xor
call
add
mov
das
test
dec
cmp
or
inc
cmpsb
test
stos
fwait
dec
dec
into
push
push
dec
cmpsb
fiadds
pop
out
lahf
jg
int
fsubr
dec
xchg
push
shl
js
lods
adc
and
and
pop
inc
ret
adc
das
mov
daa
sbb
xchg
sub
ret
pop
call
je
fsubrs
mov
dec
cmp
mov
xchg
xor
and
out
add
or
fnsave
mov
mov
pop
fbld
mov
and
jmp
pop
shlb
sub
inc
lds
in
or
clc
sti
sub
inc
mov
pushf
int
fistpll
ficompl
or
or
hlt
movsb
push
mov
test
ja
lahf
pop
lods
sbb
popf
jg
lret
pop
push
pop
out
cmp
rol
inc
popa
ds
cld
int
shrl
or
xor
in
pop
cmc
sbb
mov
leave
sub
xchg
mov
sbb
jp
aad
adc
jle
icebp
ja
int3
cmpsl
sti
pop
push
lock
pop
out
pop
test
mov
and
and
fwait
rcl
aam
mov
stos
cld
lods
lret
in
sub
adc
stc
push
mov
and
dec
mov
insb
cmpl
sti
test
jno
pop
shlb
add
jb
sbb
jge
sysret
fstpl
lcall
test
incb
adc
js
and
mov
shrb
and
mov
mov
scas
push
sti
lcall
rclb
rol
pusha
mov
or
cmp
push
fld1
aad
sbb
daa
mov
out
add
inc
jl
ret
and
pop
mov
out
lea
repnz
jp
out
add
imul
jl
sub
push
mov
mov
push
sbb
xor
pop
insl
sub
inc
xor
or
jl
out
gs
add
mov
call
icebp
mov
inc
mov
pop
rorb
pop
enter
pop
aam
es
mov
mov
mov
fnstsw
mov
enter
xchg
and
xor
mov
jnp
mov
mov
ljmp
sub
pop
stos
adc
dec
sub
lods
xchg
lock
xlat
hlt
sbb
jge
inc
dec
mov
jb
mov
inc
int3
mov
adc
mov
loop
xor
pop
jle
divb
in
pushf
out
out
mov
xchg
loopne
addb
lea
rol
lret
not
push
test
push
sub
nop
clc
sub
cld
sti
addb
add
add
sbb
push
or
lods
push
push
scas
dec
stos
les
jne
arpl
add
xchg
pop
xchg
mov
xlat
xchg
dec
in
aam
scas
lock
cmp
sahf
jnp
cmp
bound
jmp
ds
in
hlt
lcall
stc
movsb
adc
jg
add
mov
mov
add
cmp
push
std
cwtl
repnz
jo
xor
cmpsl
mov
int3
adc
sbb
gs
and
push
loope
push
adc
add
pusha
cmp
xchg
add
lcall
add
push
andb
rcrl
enter
xchg
jecxz
movsb
es
sidtl
bound
sahf
dec
xchg
aam
xchg
fimuls
jmp
inc
sub
mov
mov
xchg
testb
push
imul
pop
xchg
push
jl
loope
shrl
mov
icebp
mov
dec
and
shll
movsl
mov
jno
mov
cmp
orl
jge
daa
and
lret
aam
xor
ficomps
insb
sbb
sbb
push
sti
inc
mov
jnp
jns
mov
ljmp
mov
inc
clc
scas
mov
jne
or
mov
xor
inc
cmp
fldt
pop
jge
jg
xor
mov
int
jb
and
mov
dec
mov
jmp
stc
hlt
sub
push
add
mov
repz
incb
or
call
pop
test
mov
mov
cmpsl
ret
dec
and
cltd
call
sub
mov
mov
lahf
fsubr
inc
rorb
push
adc
cmp
int
and
out
pop
push
mov
mov
xor
shll
inc
or
outsl
mov
sbb
int
repnz
mov
les
data16
stos
out
out
sbb
ja
sub
jnp
fildll
mov
or
cmpl
les
dec
inc
in
sub
cmp
inc
ss
jb
jle
mov
inc
outsl
test
insb
pop
rorl
cmp
ret
in
cltd
test
adc
aad
mov
out
xor
mov
add
xchg
mov
loop
inc
movsb
adc
int3
fnstcw
or
inc
or
jae
ret
or
sub
daa
push
pusha
imul
movsl
insb
xchg
leave
push
in
leave
out
gs
jl
popa
jno
jge
push
push
fxch
addr16
adc
add
xchg
mov
jg
insb
test
ljmp
add
dec
jmp
cli
add
out
test
stos
sbb
fldenv
push
iret
dec
shlb
jmp
cmp
cmp
sub
add
mov
sbb
xor
inc
pusha
insl
mov
jo
gs
dec
fiadds
push
xor
icebp
in
push
rcrb
mov
pop
mov
nop
mov
js
adc
inc
xchg
fsubs
fisttpll
mulb
xor
cmp
inc
in
mov
rorl
dec
push
and
cli
mov
xchg
add
mov
dec
aas
dec
mov
mov
incb
rorb
mov
add
cmp
aas
clc
das
aad
cwtl
sti
push
dec
mov
lcall
push
lret
fidivl
or
and
inc
jl
sti
sahf
jnp
add
rorl
cmp
push
push
sbb
lret
jns
adc
pop
add
out
js
dec
dec
sub
rcll
ja
mov
or
cwtl
jg
test
jge
xchg
pushf
jbe
loopne
push
es
int
cmc
out
xchg
jle
and
scas
sub
pop
inc
mov
push
mov
dec
out
inc
lret
rcrl
xchg
and
iret
jbe
cmpsl
inc
mov
add
rclb
mov
rcll
shll
outsl
push
insl
jno
fscale
mov
out
iret
mov
loopne
outsl
mov
mov
popa
or
or
movsb
adc
cmc
inc
insb
es
les
arpl
or
or
test
xor
cmp
fiadds
add
add
test
mov
es
pop
mov
movsb
lods
sbb
dec
xchg
inc
inc
fdiv
loopne
dec
mov
xor
rcl
add
clc
xchg
push
arpl
inc
shll
clc
and
cmp
ret
pop
sbb
xchg
addr16
jb
sti
jnp
dec
int3
and
cltd
dec
inc
dec
jmp
pop
jp
inc
mov
pop
popf
clc
mov
cmp
sahf
sub
push
ja
jl
pop
negb
and
mov
and
hlt
shrl
jnp
cmp
inc
or
cmp
aam
sub
shll
dec
xchg
int
push
outsb
shlb
insb
push
jb
fsubs
inc
push
sahf
test
dec
cmpsl
sbb
mov
push
sbb
loopne
jmp
cmc
pop
hlt
out
push
daa
or
xchg
xchg
adc
insb
xchg
adc
push
inc
fdiv
shrl
push
dec
bound
push
inc
dec
mov
xchg
repnz
xor
adc
xchg
mov
pop
sbb
add
or
push
notl
and
or
in
sub
cs
daa
test
inc
fisubl
push
stos
jmp
fmuls
mov
repz
shll
cltd
lret
aas
ljmp
jne
cs
stc
lods
gs
jne
fistl
cs
mov
push
nop
bound
jg
mov
imul
shll
outsb
mov
cmp
sbb
sub
mov
jmp
sbb
pop
aam
mov
push
ljmp
leave
ss
and
adc
ffree
outsl
aas
push
mov
idivl
jbe
std
jns
push
sbb
sbb
push
clc
xor
shlb
mov
or
stos
adc
sub
xor
inc
insb
xchg
in
mov
xchg
mov
sbbb
es
push
sbb
or
jp
in
jl
in
out
out
test
movsb
daa
jb
jecxz
jge
xchg
shrb
or
lock
shr
cmp
xchg
mov
mov
lods
sbbl
out
sbb
js
call
or
dec
push
movsl
mov
movsl
sbb
enter
or
movsl
ljmp
push
mov
jno
test
divb
pop
mov
xchg
sub
and
arpl
lea
movsl
loope
cltd
add
nop
push
movsl
int3
imul
xchg
mov
es
adc
aaa
cmp
frstor
jl
outsl
jl
ror
insb
pop
ret
repz
test
mov
mov
jmp
fdivl
pusha
jae
sbbl
push
xor
cmc
insb
dec
pop
mov
mov
mov
jo
sub
dec
fwait
int3
cs
jg
mov
inc
in
jl
xchg
nop
xchg
lock
sbb
or
push
pop
pop
imul
adc
xor
mov
insl
repz
mov
sbb
xor
cli
mov
rorl
pop
cmp
sar
cli
adc
adc
scas
and
int3
rcl
into
and
or
dec
cmp
insb
sub
test
xor
cmpsb
inc
jg
rorb
adc
sbbl
popw
mov
jns
mov
lret
cmp
cwtl
lahf
push
jecxz
xchg
pop
jecxz
popl
pop
imul
jb
loop
pusha
cmp
popa
push
mov
jge
aad
mov
rolb
push
and
daa
dec
aas
js
cltd
enter
frstor
or
das
ja
mov
jmp
adc
out
pop
fistpll
push
or
dec
mov
movsb
in
cmp
dec
imul
pop
lcall
pop
decl
stos
in
push
std
add
fstps
xchg
nopl
cli
test
pop
xchg
aas
xlat
bound
insl
sbb
sbb
aad
cmpsb
push
push
inc
inc
pop
js
dec
ffreep
lods
and
daa
mov
pop
pop
push
jp
add
sub
jmp
fisubrs
lock
iret
sarb
rcl
repz
sahf
ja
lods
stos
xlat
mov
pop
jge
push
shrl
add
xchg
jl
cmp
mov
adc
fidivl
inc
adc
jp
stos
adc
push
sti
flds
adc
bound
push
hlt
add
cmp
test
pop
mov
sbb
dec
test
push
push
push
mov
mov
jecxz
push
jo
cli
sti
pushf
jmp
stos
lds
pop
inc
nop
or
push
mov
and
dec
jbe
pop
jmp
mov
cmc
test
into
bound
cmp
in
lret
mov
bound
mov
lods
push
dec
jl
out
out
dec
imul
mov
cmovle
cmp
test
pop
lcall
jo
fldlg2
aas
ret
fistl
sbb
and
and
sub
cmp
add
jge
fs
rcrb
xchg
mov
cmpsl
cmp
add
add
outsl
push
test
lcall
subl
push
xorps
call
adc
xchg
lcall
std
adc
hlt
pop
jg
adc
std
std
xchg
pop
or
je
mov
jnp
pop
bound
push
loope
dec
insb
test
push
fidivrs
jae
rcll
fcmovbe
fistpl
movsl
mov
sti
jo
scas
or
int
pop
fidivrs
lds
pop
stos
dec
ja
xchg
lea
sub
stos
inc
mov
or
subb
mov
aaa
outsb
imul
xor
mov
dec
mov
dec
and
in
les
scas
push
xor
push
in
fmuls
mov
pop
mov
push
cmp
mov
int
sub
movl
lock
mov
dec
test
xor
jne
cmp
push
mov
and
test
call
aas
xchg
inc
pop
orb
cld
mov
not
and
pop
and
dec
out
mov
ja
push
sbb
push
scas
push
mov
xchg
push
in
inc
pusha
adcl
lahf
mov
jle
push
test
int3
jecxz
adc
clc
mov
cmpb
mov
cmp
imul
sub
inc
adc
push
es
mov
insl
xchg
cmpsb
enter
push
mov
shrl
fstl
std
or
rorl
pop
mov
dec
xor
rcrl
xchg
dec
and
scas
shll
jnp
das
imul
out
call
mov
mov
out
add
cmpl
push
out
xchg
mov
and
hlt
mov
pop
fiadds
sbb
inc
xchg
fisttpll
lock
es
pop
div
popf
test
pop
jae
movsb
ljmp
mov
cmc
add
fs
push
test
mov
js
jmp
adc
stos
popa
cmp
add
ds
nop
fst
rcl
add
icebp
rclb
je
mov
stos
into
xchg
test
push
xor
cmp
in
push
lods
inc
lds
or
in
stos
jbe
test
outsl
jge
nop
nop
insl
xchg
stos
inc
icebp
push
clc
ficomps
and
aaa
pop
out
icebp
sub
popf
faddl
int3
and
addr16
push
stos
sub
test
pop
mov
leave
pop
push
add
sbb
ret
test
sbb
pop
mov
inc
mov
mov
sti
add
inc
adc
mov
pop
sub
mov
jecxz
sbb
sarb
mov
mov
sti
std
adcb
repz
repnz
ljmp
add
incb
sbb
shlb
or
jge
sub
not
inc
adc
mov
js
shll
add
test
and
push
ficompl
addr16
mov
scas
jmp
adc
das
repz
push
cmp
dec
imul
fnstenv
sub
xchg
mov
mov
incb
adc
mov
xor
stc
jo
and
aam
sbb
lahf
pop
inc
and
lds
fidivs
inc
add
das
xor
ret
fistpl
mov
ja
mov
mov
inc
xchg
stc
push
nop
push
insb
nop
inc
inc
in
xor
int
cmp
adc
dec
cmp
test
stos
ljmp
popf
mov
mov
arpl
mov
aad
pop
sbb
testl
mov
xchg
mov
hlt
adcl
aas
sub
mov
mov
xlat
adc
pushf
out
into
pop
fs
add
cmpsl
or
pop
enter
fs
jmp
pushf
jle
negl
test
inc
xchg
mov
add
lods
cmp
jo
jb
dec
fcmovne
xchg
lcall
inc
dec
pop
bound
sbb
mov
cmpsb
mov
pusha
lods
test
and
pop
into
stos
sbb
cmp
loop
pop
add
loope
movb
lret
rcll
loope
mov
mov
int
fwait
pop
sbb
sbb
jl,pt
mov
mov
ds
cmp
ss
movsb
push
sbb
sub
ds
mov
imul
sbb
xchg
fiaddl
pop
mov
imul
jl
mov
ss
jge
push
push
cmc
ds
jmp
outsb
repnz
or
fwait
dec
fbld
lods
movsb
je
xchg
divb
arpl
cs
push
xor
test
cmc
rep
cmpsb
jno
mov
sahf
jns
mov
mov
sbb
lds
scas
sub
out
sub
cs
dec
push
inc
cmp
nop
jg
mov
jge
cmpsl
mov
in
ret
lahf
loop
int
xchg
mov
adc
push
addr16
sbb
adc
or
pop
xchg
mov
cmpsl
rorl
loop
inc
idivb
ljmp
jne
push
or
and
sbb
imul
mov
and
stc
jno
jp
subl
jmp
adc
cmp
fsubr
stos
hlt
in
xchg
test
sbb
inc
push
add
js
push
sbb
mov
and
pop
ja
imul
xlat
push
insb
std
xchg
cmp
mov
xor
ret
leave
jge
cltd
jle
outsb
xchg
push
sarl
xchg
lcall
subb
mov
insl
cmp
add
push
push
or
jb
shlb
popa
push
std
add
into
inc
push
jne
push
jl
mov
inc
fnsave
push
arpl
xor
mov
cmc
cmc
pop
lds
mov
neg
lods
add
jns
and
test
mov
daa
add
mov
add
fistps
push
int3
das
js
fnstcw
mov
ss
push
test
xchg
mov
in
std
dec
cwtl
mov
stos
mov
mov
lret
pop
adc
ljmp
shll
jmp
test
cmp
or
lea
mov
jl
mov
aaa
int
call
fidivrs
push
dec
je
rcl
fst
das
cmp
sbb
daa
jmp
xor
xchg
jbe
mov
jno
fidivl
mov
ret
rolb
add
sbbb
out
mov
fldt
popf
xchg
pop
lods
je
and
or
icebp
sahf
xchg
loopne
cmp
pop
sti
pop
xchg
jne
push
xchg
add
inc
andb
je
nop
lock
xor
add
sbb
leave
gs
lret
adc
or
repnz
sbb
mov
pop
shlb
xchg
push
pop
hlt
mov
pushf
or
push
jno
adc
shrl
sub
imul
adc
lock
or
in
pop
jmp
cmp
lcall
cmp
mov
and
mov
jbe
xor
xchg
loopne
fistpl
out
loope
adc
data16
sub
jecxz
jge
add
and
mov
das
adc
out
inc
out
inc
imul
arpl
cmp
inc
sarb
push
sub
mov
cltd
fwait
xor
jbe
aam
jbe
stos
jg
jmp
inc
ljmp
loope
jns
std
cmc
sub
gs
xchg
stos
dec
cltd
scas
loope
test
push
sub
xchg
mov
hlt
lds
xorb
sahf
dec
lock
inc
jo
mov
push
fwait
imul
add
imulb
xor
jbe
mov
popl
aam
or
pop
or
stos
ret
enter
std
mov
imul
and
inc
cwtl
stos
jbe
and
mov
jne
xchg
ret
in
cli
ficoml
or
movsb
inc
into
jp
sbb
lcall
in
dec
fisubrs
or
xchg
mov
mov
jae
xchg
sub
bound
out
jno
cmp
lea
fwait
cmpsb
sbb
pop
hlt
scas
inc
xchg
sbb
and
out
jb
pop
sahf
mov
in
loope
fimull
adc
js
rolb
shlb
sub
test
hlt
imul
fcomps
ljmp
addr16
pop
xor
cmc
lahf
shll
inc
call
popa
aas
cltd
call
xchg
inc
mov
mov
lods
icebp
and
pop
xchg
xor
pusha
dec
adc
fldenv
mov
sub
daa
mov
push
sub
sub
cmpsb
or
idivl
push
mov
ret
pop
mov
inc
push
sub
mov
pop
push
jae
or
in
inc
js,pt
cmp
inc
push
jp
add
fsubs
and
cmp
sbb
sbb
push
pop
sbb
scas
mov
fs
pop
nop
inc
xor
popf
cld
or
or
es
in
pop
lahf
arpl
fs
sti
xchg
xor
cwtl
stos
jns
mov
pop
fs
adc
je
cmpsb
repnz
lods
mov
repz
add
movsb
insb
cmp
mov
test
lds
jp
bnd
pop
push
cmp
bound
lret
xchg
cmp
fwait
jmp
in
arpl
iret
insl
mov
xor
inc
aaa
test
popa
or
scas
push
dec
pop
cmc
popa
mov
movsb
add
push
dec
out
imul
mov
mov
mov
xchg
jnp
mov
ljmp
inc
frstor
lea
addr16
rcrl
xor
in
lret
ljmp
sub
sbb
clc
iret
jl
jg
cwtl
mov
out
int3
or
jne
repnz
out
in
outsl
int
mov
jg
inc
lock
fwait
adc
mov
mov
aaa
test
lret
cmp
dec
push
jle
add
sub
or
les
and
xchg
bswap
sub
jp
enter
outsb
jge
mov
in
push
addr16
rclb
lret
jne
or
push
out
mov
mov
sbb
cmp
out
jns
mov
es
cmp
sub
push
daa
push
fadds
in
sbb
stc
jb
aam
call
stos
out
or
jge
jmp
add
fcmovb
fidivrl
jbe
sbb
das
sub
cmp
pop
mov
sar
or
cmp
pop
and
dec
inc
in
mov
nop
enter
inc
mov
pop
cmp
add
cli
outsl
lret
in
inc
ret
adc
adc
lahf
out
repz
pop
jl
call
data16
js
bound
icebp
push
stos
pop
test
scas
add
xor
sbb
inc
cmp
or
push
mov
lds
nop
enter
sub
cmpsb
cmp
lret
test
lods
imul
xchg
or
lods
movsl
or
in
push
cmpsl
adc
sbb
repz
hlt
pop
push
lods
add
dec
sahf
push
fwait
jecxz
xor
or
cmp
cmp
sub
aad
in
leave
cmpsb
fidivrl
subb
xchg
mov
push
into
out
mov
in
mov
jo
or
out
or
rolb
imul
outsl
stos
add
push
lret
dec
roll
nop
sbb
add
or
jle
gs
bound
cwtl
lods
xlat
insb
dec
std
pop
pop
push
insl
xchg
sub
cs
fisttpll
outsb
mov
mov
jp
hlt
je
push
inc
aad
loope
mov
adc
xchg
pop
inc
lods
mov
dec
jmp
ret
mov
and
xor
in
hlt
divl
mov
jo
jae
fistpll
in
and
aad
mov
nop
dec
aad
add
cmp
test
pop
xlat
std
push
imul
or
dec
in
iret
push
sub
jae
fstl
sbb
mov
pop
das
push
add
add
cmp
or
cmp
inc
jmp
idiv
hlt
xchg
sahf
inc
out
out
fildll
shlb
adc
xor
aas
cmp
add
push
jecxz
adc
in
popf
push
shlb
add
int3
popf
movsb
pop
jle
fwait
push
xor
sbb
xchg
je
rcrl
adc
loopne
and
sbb
inc
jge
aas
add
loopne
int3
fucomi
mov
mov
adc
aam
xchg
fdivl
adc
jmp
mov
mov
inc
jge
mov
adc
jp
push
ss
push
xchg
sbb
mov
jae
add
arpl
test
cmpsl
test
xchg
decb
jb
jmp
int
jbe
sbb
xchg
xchg
outsl
add
mov
sbb
xor
call
popf
xchg
out
dec
xchg
rorl
jl
sarb
sub
mov
jmp
inc
or
mov
adc
lods
xchg
jecxz
adc
not
into
mov
dec
lret
int
jp
sub
pop
movsb
mov
xor
fisttpll
out
shlb
push
ja
jnp
jbe
nopl
aad
cmp
or
xchg
jecxz
out
mov
scas
addl
sub
mov
pop
lret
push
push
mov
mov
pop
cmc
jae
rorb
pop
leave
das
sbb
and
movsl
imul
jmp
shll
scas
or
or
bnd
aad
mov
push
stos
or
lret
stc
xor
inc
pop
mov
fs
pop
sub
imul
iret
inc
pop
popf
out
adc
sub
outsl
pop
movsb
cld
xchg
shrb
cs
fidivrl
hlt
pop
inc
pushf
mov
cmp
push
inc
dec
inc
movsb
xchg
jl
rorl
cwtl
push
mov
xchg
repnz
mov
mov
addr16
ret
mov
repz
add
aad
pop
push
jmp
pop
jae
hlt
notb
rcl
in
or
pop
fadds
sbbl
push
sti
scas
in
lret
xor
cmp
and
daa
aaa
cmpsb
ret
aas
shll
std
leave
out
xchg
sbb
xchg
icebp
fs
andl
jecxz
sbb
inc
cmp
dec
jb
adc
lods
aad
push
jne
or
lea
jmp
cmp
fwait
out
in
icebp
jb
mov
xchg
sub
loop
test
ds
sbb
adc
movb
movl
cmp
adc
cmp
orb
ljmp
mov
inc
repz
sbb
jbe
mov
sub
add
pop
cmp
ret
mov
pop
and
pop
into
in
cmpl
jno
out
jmp
jns
inc
sbb
fsubs
mov
stos
enter
add
iret
or
cli
xor
jg
lods
sbb
pop
xchg
and
cmp
inc
jmp
mov
jmp
popf
mov
fidivrs
sub
add
or
dec
jbe
punpcklbw
mov
and
stc
mov
inc
adc
je
cld
fadds
test
lcall
or
push
xor
pop
jns
out
fisubs
adc
mov
sbb
mov
cmp
test
sbb
rolb
xor
jb
stos
push
out
ja
sbb
fimull
movsb
cmpsl
add
dec
repz
inc
and
scas
mov
enter
push
std
sbb
movsl
pop
aaa
stc
inc
fimull
out
outsl
cwtl
shlb
mov
pop
incl
jne
and
movsb
pusha
xor
xchg
pop
or
mov
jp
divl
dec
cmp
push
into
cmp
fs
mov
aam
fistps
inc
pop
fs
xor
add
jmp
icebp
sbb
add
xor
or
inc
add
cmc
jecxz
daa
sti
scas
add
push
jae
std
jp
dec
adc
sbb
cmp
or
sahf
mov
add
rcrl
divb
in
cmc
je
es
ret
leave
jl
jmp
pop
scas
sub
mov
lcall
add
orl
sbb
sbb
insb
add
pusha
mov
lods
cmp
xchg
add
in
jne
cs
loopne
adc
cmc
xor
hlt
xchg
mov
mov
add
mov
out
in
clc
lods
sub
push
pop
or
lret
lret
aad
repz
mov
stos
xchg
mov
cmp
aas
aam
dec
xlat
ret
in
into
out
xlat
sbb
xchg
pop
xchg
add
in
aas
ss
loope
mov
imul
les
es
mov
mov
stos
adc
push
addl
sbb
push
mov
sub
roll
pusha
sar
cmp
mov
shll
cltd
or
inc
push
decb
xchg
cmp
out
scas
loopne
push
stos
rolb
add
lret
dec
fsubl
sub
mov
aad
add
mov
test
repnz
and
movsb
and
mov
jbe
es
out
dec
cmp
aad
jb
adc
jge
xor
pop
pop
shrl
cmpsl
xor
cmp
xor
sbb
xor
enter
int3
mov
adc
add
lods
sbb
jne
sub
clc
lods
push
ret
jns
jbe
sbbl
cmp
gs
fadds
push
out
into
jnp
aad
loope,pn
mov
cmp
jmp
jae
xor
xchg
pop
sub
test
out
adcl
imul
imul
mov
inc
stos
push
push
test
sti
mov
dec
add
inc
pop
enter
lret
push
mov
jno
add
jmp
mov
ljmp
pop
insl
loope
cmp
subb
rcr
push
push
imul
ss
mov
cmp
pop
cs
das
xchg
inc
inc
xor
xchg
xchg
jmp
add
or
cld
dec
fs
push
lcall
inc
dec
fbstp
test
mov
ja
cmpsb
rcrb
push
adc
xorb
pop
add
mov
push
push
scas
loope
inc
outsl
inc
ja
xchg
mov
std
rcrl
gs
mov
and
jge
pop
fmul
xor
lahf
adcb
or
lret
dec
popf
fwait
add
repz
mov
popf
test
repz
mov
xchg
mov
or
cltd
adc
inc
sub
shl
dec
jge
push
or
mov
fadds
bound
mov
cli
push
dec
lcall
jecxz
outsl
rol
subl
repz
mov
lahf
ret
xor
sub
sub
movsl
aas
mov
adc
push
lcall
jo
dec
sahf
push
in
lds
add
push
ja
lods
rcrb
aam
xchg
out
enter
xor
das
notl
push
aas
loop
shlb
sbb
jbe
jo
xchg
dec
notb
shl
icebp
arpl
mov
gs
test
insl
mov
test
loopne
cld
fistps
push
outsb
jg
les
addr16
dec
sbb
jl
das
jns
pop
or
inc
or
jl
ret
leave
popl
icebp
mov
pop
mov
inc
mov
ficomps
mov
aad
mov
pop
ret
sub
test
sbb
cmp
push
mov
mov
mov
sub
lods
xor
push
xchg
cmp
imul
fimull
add
cmpsb
pusha
mov
xchg
inc
push
iret
jbe
pop
lret
pop
cmp
iret
push
popa
lods
dec
mov
mov
xchg
sbb
xorl
out
dec
dec
loopne
stos
arpl
clc
inc
sbb
loop
mov
jmp
outsb
fisubrs
fldcw
rcrl
inc
clc
mov
and
jp
test
fwait
pop
and
inc
dec
cwtl
cmc
loope
and
push
lds
das
fcoml
push
movsl
mov
stc
fidivl
xchg
sbbb
mov
mov
xor
lods
inc
inc
outsl
mov
pop
mov
sub
inc
bound
inc
popa
adc
add
movsl
loop
sbb
sub
push
push
inc
loopne
div
push
mov
in
mov
mov
loop
inc
je
xor
loopne
dec
sahf
cmc
mov
push
pushf
negl
and
hlt
jno
xchg
xor
imul
pop
mov
pop
outsb
dec
jo
stos
out
insl
mov
arpl
insb
dec
xor
pop
inc
mov
test
sbb
ds
test
lods
fsubrl
js
xor
cmpsl
adc
xchg
sbb
pusha
xor
fnsave
imul
sbb
pop
mov
ss
pop
mov
jno
not
cmp
into
fwait
orl
in
pop
mov
add
mov
roll
sub
ret
aad
cmpsl
mov
inc
sbbb
mov
leave
or
xor
pop
adc
xchg
cmp
xor
int3
inc
add
xchg
lret
ja
jae,pt
sbb
test
cmp
aam
mov
insb
mov
add
test
in
inc
pop
inc
xchg
mov
mov
adc
sti
lret
mov
ss
dec
mulb
pop
test
fs
out
shr
sub
dec
sbb
xchg
in
stos
xor
push
movb
pusha
xchg
add
out
aaa
xor
rcl
rcll
push
mov
xor
fs
and
clc
xlat
add
xorb
cmp
inc
xchg
arpl
jg
push
les
xchg
push
aaa
pop
jmp
xor
mov
pop
rcrb
jecxz
mov
or
testl
and
xor
or
fisttpll
mov
sub
add
jne
mov
xchg
es
mov
sarb
mov
nop
nop
or
sbb
in
ficoml
xchg
jns
popa
dec
nop
aam
aaa
fmulp
push
repnz
pop
fsub
add
fs
movsl
ret
push
cwtl
ljmp
jl
pop
test
xor
or
shrb
int3
and
xchg
and
cmpsb
rorl
xchg
jo
nop
dec
test
xor
pop
test
pop
pop
sbb
pop
addl
in
jbe
int
mov
cmp
mov
movsb
addb
jo
adc
rcrl
xchg
sbb
dec
movsb
mov
jno
leave
push
movsb
cmp
adcl
repz
add
enter
mov
pop
sbb
cmc
data16
and
or
out
dec
cmpsb
pop
ss
add
fwait
inc
aas
push
mov
push
ret
sub
push
lock
cmpsl
mov
dec
dec
pop
push
adc
loopne
jle
cltd
pop
inc
xorb
mov
dec
test
out
cmc
mov
jne
popa
das
inc
mov
test
imul
arpl
jle
imul
or
sub
popa
lea
sub
push
add
mov
adc
aad
ret
push
inc
xchg
cmp
pop
movntq
push
xor
lods
test
and
add
je
pop
negl
xor
iret
xchg
or
aaa
je
scas
cmp
jge
or
inc
ja
fimuls
push
out
cs
pop
scas
mov
bound
jge
shr
dec
push
aam
in
shlb
push
lcall
pmuludq
std
dec
adc
mov
jo
cmp
jne
insb
popf
cwtl
jge
jmp
mov
cwtl
repz
sub
cmp
mov
sbb
xor
fcmovb
lds
sbbl
add
insl
cmpsl
or
and
sti
jns
mov
enter
daa
push
imul
inc
push
insl
jae
lds
stos
lret
mov
dec
ds
cwtl
subl
jb
mov
and
std
push
push
pop
rclb
aad
lods
or
sbb
mov
test
lds
push
push
fidivrs
push
push
cmp
cmp
pop
jle
sbb
popw
vpmacsdql
add
jae
rorl
repz
inc
scas
out
mov
ds
push
sbb
clc
pop
and
lea
test
push
push
push
cmpsb
fiadds
or
lcall
in
out
mov
and
pop
lods
cmp
dec
sbb
mov
xchg
int
push
push
ljmp
notl
inc
xchg
or
push
sbb
jno
fsub
cmpsb
push
pusha
add
cmpsl
pusha
pop
push
jp
ss
out
rcrl
lret
mov
add
psllw
repnz
cld
popf
cmp
aaa
je
or
and
mov
xchg
sahf
aad
mov
int3
mov
sub
mov
sarl
and
jmp
sbb
push
fdivrl
ror
ljmp
and
mov
push
xchg
outsl
in
xchg
pop
lahf
imulb
aas
mov
scas
mov
shlb
adcb
pop
adc
sub
pop
xor
rorb
push
sbbl
test
push
rol
xor
scas
pop
aaa
inc
inc
test
sbb
or
sbb
cmp
shll
test
scas
cs
push
adc
and
mov
lcall
push
xor
bound
in
sbb
mov
xchg
xchg
xor
push
insl
out
sbb
inc
xor
test
ja
sub
push
add
fcmovbe
lcall
xchg
sbbl
jae
inc
adc
sub
cmpsl
add
jmp
imul
cwtl
loope
test
jns
xchg
test
cmp
rcrb
ja
add
stos
jl
pop
adc
jnp
jecxz
cmp
jb
js
ja
or
movsl
lahf
sahf
test
outsb
jp
mov
mov
cmpsb
popa
jo
fdivr
hlt
repz
xchg
pop
or
lahf
xor
jle
ret
jo
xchg
lods
jl
add
int3
test
jp
push
mov
jno
or
inc
cs
ljmp
shrl
or
mov
call
inc
cmp
dec
mov
out
rcr
push
adc
mov
push
adc
lea
and
or
sbb
gs
cmpsl
sarb
mov
stos
xchg
or
out
sbb
fldl
aaa
sub
imul
imul
mov
mov
mov
lcall
sbb
sub
frstor
xor
inc
ja
idivb
mov
cmpb
jns
je
xor
out
iret
jmp
sbb
aas
push
sbb
add
push
xchg
mov
mov
in
push
arpl
mov
loope
pushf
cs
push
inc
pop
jno
jle
or
leave
insb
and
lret
jmp
pushf
mov
aaa
adc
mov
and
loop
push
pop
negb
push
sub
outsl
mov
mov
into
xchg
sti
push
pop
dec
mov
dec
cmp
mov
xor
mov
lock
sbb
pop
fsubrs
xor
ret
dec
xlat
repz
call
dec
into
stc
imul
sahf
pop
jbe
out
movsl
cmpsl
push
outsb
and
mov
inc
sub
loopne
mov
adc
arpl
test
dec
sti
mov
mov
cli
pop
push
xchg
fsts
aas
cmp
int3
jo
maxpd
xor
test
in
test
or
fdivrl
sub
lcall
xor
roll
pop
inc
dec
or
sbb
movsb
out
lcall
push
iret
ficomps
push
bound
int
dec
ss
and
cli
dec
out
mov
push
ret
xchg
mov
sub
test
mov
or
insl
sub
cmpb
fidivrs
push
pop
frstor
mov
stos
andl
movb
inc
mov
mov
xor
pop
repz
mov
mov
movsl
push
sub
test
pushf
icebp
jnp
mov
lods
mov
jmp
jle
cmp
cmpsb
icebp
stc
and
ja
sub
fdivrs
ljmp
lods
ret
aas
jmp
mov
jns
sub
xor
push
dec
cmpsb
sub
jecxz
push
jle
dec
inc
inc
outsb
fnstenv
stc
or
inc
push
xor
adc
test
sti
push
mov
pop
sarl
xchg
pushf
mov
jle
xor
lods
push
mov
das
test
enter
in
inc
xor
add
test
call
dec
pop
lock
in
jbe
insl
cmp
jmp
lods
inc
mov
aas
cltd
movsb
fldl2e
pop
loopne
cmp
jnp
in
xchg
and
rolb
cmp
imul
call
xchg
cmp
loop
sub
and
pop
in
outsl
sarb
lret
loope
cmp
je
push
movsb
xchg
pop
cli
in
scas
inc
sub
arpl
aad
in
xorl
movsl
mov
jecxz
sti
frstor
dec
in
cwtl
daa
pop
idiv
xchg
outsl
lods
adc
add
push
dec
inc
push
mov
aas
adc
mov
sbb
push
dec
mov
and
dec
nop
dec
cmpsb
mov
xchg
or
lcall
bound
fcompl
mov
add
stos
cmp
adc
int3
dec
cmpsb
dec
cmc
and
sbb
fs
mov
push
jns
xchg
inc
add
clc
xchg
sub
or
adcl
shrb
imul
jnp
loope
adc
push
insb
sbb
fldl
mov
jbe
sbb
push
or
xor
push
or
popf
jl
xchg
test
mov
xlat
out
and
add
loope
sbb
out
jp
push
dec
sub
xlat
test
stos
nop
lods
cmp
dec
call
xor
aas
adc
rorl
mov
data16
rolb
test
pusha
pop
outsb
xchg
and
pop
jle
inc
js
and
xchg
fs
addb
icebp
xchg
ja
aad
jb
xor
cli
and
push
fists
popa
or
sahf
xchg
sub
dec
ret
clc
jg
mov
mov
lods
pop
xor
mov
mov
in
and
sarl
in
pusha
movsb
sub
addr16
cmp
mov
xchg
jmp
xor
shrl
mov
ffreep
xchg
movsb
sub
adc
sub
inc
pushf
or
in
popf
aas
xchg
out
mov
pop
sub
jge
dec
ja
roll
in
mov
push
pusha
das
fdivrl
imul
inc
addr16
in
shl
inc
push
movsl
xor
push
clc
sbb
push
mov
push
adc
xor
pop
movsb
jbe
xor
divb
lock
addr16
sbb
or
xchg
mov
out
stos
mov
xchg
xor
sub
dec
test
adc
mov
cld
push
fistps
cmpsb
jbe
and
mov
ret
cld
in
push
jp
sarl
loopne
iret
push
movsb
pop
push
cltd
inc
cmpl
pop
add
js
xchg
ret
jb
insb
jge
data16
scas
call
push
push
lods
fs
rol
insb
or
je
inc
fwait
or
inc
mov
add
gs
pushf
mov
sbb
and
aaa
cwtl
cmp
ret
mov
sbb
mov
call
inc
rorl
cmp
clc
push
std
ds
jo
cld
sub
in
jp
mov
add
push
push
xchg
pop
pop
movsb
inc
jnp
push
xor
enter
mov
add
and
in
lcall
pop
pop
lret
dec
inc
ja
xor
fs
mull
dec
mov
mov
mov
pop
pop
scas
out
and
sbb
xlat
xor
mov
insl
pop
jb
jns
adc
call
xchg
jmp
pop
cwtl
mov
xor
shll
pop
pusha
test
pop
in
xchg
hlt
fdivr
in
fisubrl
sahf
xchg
call
aam
outsb
jmp
cltd
cmp
push
enter
push
sub
jae
pusha
test
inc
repnz
loopne
popa
stc
and
cs
pop
outsl
sub
shrl
pop
sti
lahf
inc
loop
and
and
sbb
pop
loopne
xchg
imul
or
filds
mov
cmpb
sub
jge
and
sarb
cmp
mov
das
pusha
xchg
add
mov
jb
pusha
inc
push
xchg
repnz
sbb
add
js
pusha
cmpsl
gs
arpl
dec
into
jg
mov
scas
test
outsb
sbb
ja
xchg
pusha
daa
jge
ja
shrl
push
subl
pop
cmp
in
sbb
sahf
add
mov
mov
inc
ret
jmp
dec
push
fcmovb
sub
cmp
outsb
insb
xor
mov
sbb
in
movsl
sub
or
int3
adc
sti
adcl
xorb
and
xor
in
push
mov
jo
enter
xchg
sbb
sub
xor
test
jbe
adc
iret
gs
pop
inc
bound
jno
andl
push
dec
out
dec
in
jo
call
jp
cmpsb
lds
cmp
ret
mov
stc
mov
test
out
mov
xchg
mov
gs
shlb
and
lods
xor
jmp
addr16
mov
adc
fisttpl
xchg
popw
into
in
ja
and
push
add
xchg
mov
aas
push
lret
mov
cmpl
rorb
nop
mov
popa
or
ror
lret
sub
fdivrs
push
jecxz
out
mov
fstpt
dec
jnp
dec
loop
hlt
or
adc
or
pop
xchg
xchg
hlt
bound
pop
pop
add
cmp
lret
lret
rcrb
lods
jnp
cwtl
movsb
test
bound
xchg
push
mov
mov
std
movsb
inc
xor
and
adc
and
insl
cld
jl
in
xchg
addl
push
lret
insb
sub
mov
pop
sbb
inc
sub
loopne
lods
and
jnp
outsl
xor
rolb
gs
int
jecxz
inc
dec
dec
js
dec
cwtl
sub
jp
mov
cmp
repz
arpl
jo
add
jb
or
jge
into
mov
mov
mov
xchg
gs
fistl
jae
pop
rcrb
es
pop
push
add
mov
mov
outsb
lret
pusha
mov
dec
das
fdiv
loop
pop
stc
pop
mov
arpl
cmc
lds
mov
rclb
fisubrs
leave
mov
pop
out
push
scas
jle
testb
pop
test
lods
das
add
dec
mov
and
push
daa
lret
adc
std
mov
movsl
dec
cmc
lret
lret
lret
mov
mov
pusha
cmp
aas
sbb
ja
mov
xchg
pop
outsl
rorb
and
xchg
mov
scas
lds
out
inc
outsb
sub
sub
cli
sarb
dec
imul
jmp
cmp
dec
call
sbb
clc
mov
dec
xlat
pop
dec
mov
icebp
out
mov
scas
and
aaa
clc
or
ja
jb
sbb
mov
sbb
or
rcrl
lret
pop
lods
jbe
iret
dec
or
or
dec
outsl
icebp
lret
aaa
lods
cmp
dec
std
cmp
imul
sub
inc
lods
dec
mov
fucomip
sub
cmp
loop
gs
stc
aas
mov
mov
pop
and
out
ds
mov
or
mov
pop
pop
or
and
cmpsl
pop
and
and
rcrl
sbb
xchg
in
fdivrs
testl
pop
sub
lods
jp
aam
lahf
sub
cmp
data16
js
xor
out
mov
mov
sub
dec
cmpsl
xor
jnp
aad
outsb
and
xchg
out
pop
pop
sub
je
cltd
in
shlb
push
gs
push
push
mov
sbb
push
adc
mov
dec
sub
mov
cmp
das
inc
loope
jne
jns
cmp
out
jne
jp
adcb
pop
shl
xchg
clc
test
cs
mov
push
mov
dec
xchg
and
jle
out
test
jl
mov
sub
mov
out
leave
addb
out
jp
out
mov
imul
int
mov
cltd
adc
ljmp
scas
icebp
cs
sbb
push
loop
mov
xor
shl
dec
inc
adc
adc
into
test
decl
mov
or
inc
test
fstps
mov
sub
test
gs
xor
add
in
ret
sbb
add
stc
dec
stos
in
aaa
in
lret
sarb
jecxz
pop
jl
mov
mov
add
fstl
push
mov
xor
sub
or
and
cmpsb
mov
repz
add
mov
jecxz
xchg
jg
pop
ds
int3
or
push
pop
adc
push
cmp
or
aad
repz
jae
fstpt
push
pop
pop
add
or
push
lret
out
xor
sbb
sahf
push
push
cmp
out
outsl
scas
fs
lods
push
sti
iret
and
jo
movsl
xor
les
clc
cmp
daa
add
ds
in
je
push
repnz
filds
aam
cltd
je
pop
xor
inc
mov
into
lods
sti
sub
adc
adc
rolb
sub
dec
or
adc
insb
icebp
sub
fwait
xchg
daa
xchg
cmp
or
push
adc
enter
mov
in
pop
dec
cmp
pop
fsubp
fwait
pop
push
mov
test
push
scas
pop
in
lods
orps
add
or
das
outsl
mov
roll
ret
mov
rcrl
pushf
pushf
int3
or
xchg
movb
add
aad
xchg
mov
jae
insb
imul
call
mov
and
imull
pop
mov
push
repz
xchg
data16
xor
cmp
add
mov
jl
adc
or
popf
pushf
filds
in
andl
iret
add
sub
jg
inc
fistps
shrb
lea
pop
dec
push
pop
jo
cmpsl
ret
jle
lods
divb
mov
jmp
push
ret
add
ds
inc
daa
aad
mov
push
xchg
xor
arpl
or
xor
pop
mov
mov
jmp
mov
cld
and
repnz
aas
outsb
sbb
xchg
push
jbe
mov
ret
pop
adc
pop
test
lahf
pop
popf
push
push
out
stos
mov
push
inc
pusha
jns
repnz
mov
sub
in
pop
test
cltd
lret
mov
mov
mov
fistl
jne
pop
stos
push
dec
cmp
xchg
daa
cwtl
arpl
dec
das
lahf
mov
out
cmp
mov
dec
push
mov
mov
mov
pop
push
mov
rcrb
push
shrb
nop
add
pop
dec
add
setb
xor
pop
xor
xchg
aaa
ret
push
fwait
pushf
jl
jmp
std
aas
mov
fnsave
out
fcomps
pop
mov
xor
insb
std
call
dec
mov
insl
jb
cltd
outsb
adc
pop
scas
mov
xchg
cmp
mov
mov
lods
jnp
in
sbb
js
outsl
jnp
mov
mov
ret
mov
std
mov
and
inc
hlt
or
jp
repz
popf
pop
imul
lahf
lds
in
mov
or
or
shlb
mov
fucomp
mov
sbb
cs
dec
cmp
or
andb
test
add
movsb
sbb
sub
xchg
push
add
or
jge
loopne
out
imul
pop
pusha
aam
hlt
bnd
addr16
push
gs
test
add
pop
in
jo
out
lret
mov
mov
gs
xchg
dec
fistps
out
aad
filds
pusha
mov
mov
out
scas
xor
inc
mov
scas
mov
push
cmp
mov
xor
fwait
loope
shlb
inc
cmp
loope
icebp
lea
ja
inc
jmp
cwtl
loop
cld
scas
cs
adc
sub
adc
mov
add
xchg
outsl
lds
inc
std
adc
push
dec
hlt
fwait
push
daa
push
and
adc
call
pop
cmp
inc
inc
shrl
fwait
addl
mov
mov
or
inc
outsl
shrl
cwtl
std
mov
sbb
push
mov
push
add
sbb
rclb
outsl
mov
mov
sahf
sar
mov
aad
jb
xchg
or
xchg
js
shlb
lds
insl
rcl
push
xorl
shrb
stc
lds
call
icebp
dec
roll
jne
jle
and
or
cmp
subl
adc
and
mov
enter
or
sbb
fisttpll
inc
jle
add
adc
cmp
mov
out
inc
in
xchg
dec
sbb
sub
sti
fs
or
idivb
jmp
cltd
rorl
dec
repnz
mov
adcl
and
repnz
lret
jg
jp
or
fdivrs
sbb
mov
cld
jmp
push
stc
cmpsl
out
cmc
add
xchg
fistpl
fstps
out
call
and
cltd
cmp
in
jmp
add
dec
cmp
andb
jno
xchg
jnp
or
bound
xor
inc
xor
aam
jge
jo
pop
lahf
xchg
mov
mov
sub
cltd
aaa
in
jb
pushf
fisttpll
loop
fdivp
repnz
inc
sbb
ljmp
cmp
sub
lea
aad
pusha
jecxz
fwait
xchg
dec
push
repz
or
cmp
mov
fiaddl
lds
xor
pop
cltd
pop
jbe
xchg
ret
jmp
pop
xchg
aas
subl
add
nop
cld
cs
push
jl
add
ret
sti
cmp
or
outsl
sub
and
push
mov
test
outsb
nop
add
aad
dec
scas
mov
mov
ror
pop
out
push
int3
mov
dec
bound
sbb
into
movsb
cmp
and
or
lea
sub
xchg
mov
mov
add
ja
mov
adc
mov
or
aas
lds
and
aaa
stc
pop
mov
xor
mov
inc
mov
jmp
faddl
out
cmpb
lret
mov
push
dec
out
dec
mov
mov
lods
jl
push
daa
add
mov
icebp
mov
enter
bswap
frstor
add
sbb
mov
xchg
shlb
jg
xchg
dec
jb
lods
popf
mov
add
dec
mov
sbb
inc
movsl
mov
adc
lock
add
jmp
jns
inc
ss
mov
jle
sahf
dec
fwait
or
or
mov
adc
scas
das
or
mov
loopne
sahf
ror
dec
push
cmp
subb
fstl
push
mov
mov
xchg
aaa
in
pop
lods
pop
sub
fcompl
out
insb
rorl
jle
sti
xlat
mov
jecxz
in
pop
loopne
outsl
xchg
imul
shll
mov
sbb
imul
sbb
imul
hlt
icebp
out
inc
pop
pop
jmp
cwtl
add
add
or
push
nop
mov
jb
int
and
movsb
jle
ficompl
mov
dec
notl
dec
mov
push
xor
aas
rcr
pusha
in
mov
sbb
dec
push
push
into
fiaddl
jb
out
sbb
sbb
sub
inc
lahf
orl
xchg
jo
icebp
pusha
inc
and
mov
pushf
add
push
cmp
cmp
jne
inc
test
xor
jae
jne
pop
pop
ret
sbb
clc
ret
sub
xlat
mov
cmpsb
add
out
movsb
cmc
fcompl
in
sahf
push
push
cwtl
xor
mov
repnz
cmp
inc
add
mov
lcall
in
aad
mov
inc
inc
and
lods
sahf
loope
sbb
cmp
push
ret
in
stc
inc
sub
daa
adc
movsb
les
clc
out
dec
mov
cmpxchg
data16
mov
add
adc
xor
repnz
xchg
jno
adc
in
and
push
cmc
ja
dec
mov
test
dec
cmp
stc
rcr
sti
xchg
pop
mov
sub
jmp
xchg
pop
sbb
test
ret
or
xchg
xor
or
cmp
mov
outsb
xchg
xchg
add
ficoms
cmp
push
push
cmpsl
xor
mov
or
fincstp
inc
inc
adc
les
push
mov
sub
cmp
fldt
pusha
xor
cltd
into
popf
subl
leave
or
leave
insl
loop
inc
movsb
xchg
insb
adc
and
add
andl
jo
nop
cmp
push
adc
repz
jge
and
movsb
stos
fs
pop
add
je
outsb
test
pop
movsb
inc
loope,pt
add
push
add
xor
cmp
out
popf
adc
add
xor
stos
add
push
xchg
cmp
in
iret
xor
popf
xor
pop
lahf
in
test
bound
cs
jne
shrl
mov
out
jg
mov
jge
outsb
mov
sbb
adc
dec
scas
aad
aam
movsb
push
shl
mov
jne
sub
popa
mov
cli
loopne
lret
outsb
jmp
fcompl
dec
ja
fldcw
jge
insl
test
fs
sbb
mov
inc
push
add
call
ja
cmpsl
cs
sub
inc
pop
dec
sbb
fnsave
mov
ficoms
xchg
and
pop
shlb
sbb
and
pop
add
ret
mov
ret
into
lea
sub
sub
mov
dec
xor
mov
mov
sbb
insb
dec
push
xor
cmp
push
movsb
lods
movsb
subb
adc
pop
jp
aaa
push
popf
imulb
mov
repnz
add
dec
mov
fdivrp
mov
in
mov
in
pop
mov
push
pop
cs
pop
mov
enter
or
add
mov
sbb
xor
add
push
sub
add
inc
lea
icebp
or
jns
es
cmp
pop
ljmp
inc
mov
ret
or
aad
inc
incl
jne
les
jne
loope
rorl
fisubs
jnp
xchg
cmpsb
addr16
cmp
enter
sub
lods
push
arpl
xchg
mov
shll
je
addr16
add
mov
add
and
add
outsl
pop
fwait
sbb
pop
aaa
dec
mov
xchg
xchg
lret
mov
adc
inc
sarb
adc
xor
ljmp
imull
enter
push
sbb
xchg
out
movsl
gs
lods
pop
fdivs
icebp
dec
sbb
push
cwtl
mov
imul
stc
lret
les
enter
inc
inc
sbb
mov
lods
jp
push
notb
shll
into
push
sarb
mov
dec
imulb
adc
xor
pop
jl
adc
or
inc
add
into
repnz
dec
mov
pop
or
fiadds
pop
push
fstps
stos
pop
loope
addb
insb
mov
fs
in
and
or
mov
pop
jmp
movsl
test
dec
shll
jbe,pt
pushf
sub
jmp
js
xor
cmp
adcl
sahf
fnstenv
cmpsb
jns
ret
mov
xor
lahf
xlat
sub
movsb
js
push
sub
sbb
and
jo
movsl
or
push
in
inc
adc
push
push
lods
jno
push
mov
dec
mov
mov
mov
sbb
and
mov
pop
xchg
clc
pop
lock
into
mov
push
xchg
jp
push
mov
mov
test
push
repz
or
ficomps
nop
scas
jecxz
into
jmp
stos
sbb
cmc
das
xchg
xor
idivb
dec
pop
xor
pop
dec
loop
into
pop
nop
jo
mov
movsl
mov
loope
jne
dec
scas
iret
sbb
pop
mov
fwait
and
mov
imulb
movsl
lock
rcll
push
in
add
pop
push
pop
addb
shlb
or
pushf
call
cmp
scas
xchg
fisubs
loope
sbb
xchg
scas
movsl
xchg
insl
mov
jecxz
sub
mov
push
int3
pop
test
cwtl
mov
mov
push
adc
or
lahf
fildll
push
jle
subb
inc
add
push
jl
bound
pushf
idivb
stc
or
xor
stc
sbb
jg
sahf
std
imulb
loop
push
push
mov
inc
cmp
or
mov
jge
mov
scas
int3
jle
fcoml
cld
lret
test
addr16
into
dec
daa
xor
mov
loope
push
mov
pop
xlat
inc
std
jae
sbb
xor
dec
mull
dec
jb
leave
adc
mov
stos
xor
jae
sub
push
pop
add
rolb
inc
insl
or
push
mov
movsb
aam
push
cmpsl
orl
fcomip
sbbl
out
mov
in
sahf
lret
add
decb
cmpsb
bound
fisttpl
inc
outsl
insl
inc
mov
jp
pop
pop
jae
or
push
and
lock
imul
lods
add
xchg
test
mov
test
sbb
pop
out
cmc
pop
sbb
das
push
daa
dec
push
push
mov
flds
xlat
sbb
cmc
cli
push
add
int
adc
cmp
mov
into
xor
aam
outsl
push
jmp
filds
out
insb
lea
nop
xchg
sbb
jg
gs
aam
mov
outsb
sbb
mov
jnp
test
xchg
mov
add
mov
sarl
mov
in
imulb
rclb
ret
and
out
pushw
hlt
fs
ljmp
popa
sub
cld
aas
pop
lods
sub
cli
jne
jo
sub
pop
lea
pop
adc
scas
in
imul
clc
sub
mov
and
aad
jbe
mov
insl
fcos
add
xchg
ss
in
sbbb
and
jbe
popa
inc
jns
push
inc
aaa
sub
ljmp
dec
dec
jle
leave
pop
sbb
inc
pushf
lahf
adc
icebp
std
sbb
xlat
addb
sub
pop
mov
xchg
jnp
pop
cltd
cltd
out
daa
sbb
fsubrs
sbb
adc
enter
push
and
mov
mov
imul
maxps
test
idivl
test
add
sbb
out
test
pop
pop
rcll
inc
cmpsb
fimuls
jb
pop
jmp
arpl
cmp
and
and
lds
mov
jge
xchg
lret
pop
idivb
xchg
push
push
sti
xor
sub
pop
andb
pop
stc
test
mov
movsb
inc
push
cmp
xchg
sbb
push
adc
push
adc
es
imul
int
div
jns
mov
in
stc
cmp
nop
and
inc
adc
dec
pop
push
mov
jbe
mov
xchg
push
inc
cmp
mov
test
sub
adc
sbbb
mov
movsl
pushf
lret
jno
dec
out
aaa
fstp
ret
mov
in
inc
out
jmp
mov
popl
orb
pop
sbb
rolb
dec
fsubrs
mov
or
and
out
jmp
xor
sbb
adc
int3
andb
test
mov
in
sbb
xchg
adc
xchg
pop
push
lret
out
xor
jb
je
out
popl
imul
mov
int3
int3
out
pop
loopne
xor
hlt
inc
inc
sbb
js
mov
out
jle
jno
repnz
adc
ss
lret
push
into
mov
fdiv
xchg
fsub
mov
pop
stos
pop
mov
repnz
mov
das
icebp
pop
pop
jge
push
outsl
dec
cmc
add
mov
lods
cld
scas
push
xchg
sub
mov
mov
fmuls
rorl
ret
aad
adc
mov
jnp
or
mov
shrb
inc
push
sub
mov
mov
std
pop
lcall
sub
gs
sub
int3
cwtl
lret
inc
into
ds
sbb
push
xlat
dec
and
cmp
sub
jg
mov
enter
pop
imul
cld
std
or
inc
dec
into
das
mov
frstor
dec
vpcmpgtd
or
and
xchg
cmp
out
pop
lock
cmpsl
jno
lret
xchg
add
inc
ficompl
xor
cli
or
dec
cmp
adc
and
xor
int
mov
cltd
shlb
fdivs
call
mov
dec
push
jl
xor
mov
mov
dec
stos
es
test
cmp
rorb
xor
pop
insw
btr
add
pop
mov
pop
adc
and
dec
je
push
jo
cs
sbb
push
enter
loope
inc
daa
pop
add
aas
or
addr16
repnz
mov
jo
outsl
movsb
xchg
ljmp
fs
std
cmp
sbb
rcrb
xor
insb
fwait
or
scas
lret
mov
xor
outsl
jb
sub
lret
and
cld
mov
in
lret
cli
fldcw
dec
std
aad
ficoml
adc
icebp
dec
int
mov
pop
mov
add
jmp
pop
xchg
mov
jecxz
sti
sbbb
out
mov
pop
jns
mov
sbb
int3
outsl
and
jbe
movl
jo
decl
mov
mov
push
lods
cmpb
add
pop
test
dec
fildl
mov
sbb
lock
inc
into
cmp
movsb
adc
mov
mov
mov
mov
cmpsb
jle
fsubs
sub
fwait
add
jnp
add
cmp
xchg
xor
xor
dec
dec
daa
add
orl
jbe
and
out
mov
adc
aam
fdivs
out
imul
push
push
pop
mov
dec
lods
xchg
jo
pushf
fxch
lret
fwait
std
icebp
addl
dec
mov
idivb
inc
lret
decl
loope
imul
loope,pn
inc
fisttpl
sub
icebp
addl
inc
stc
in
push
sti
cltd
fstpl
ja
out
mov
push
ret
in
cmpsl
and
xchg
dec
sbb
push
pop
ss
insb
loope
or
push
lahf
movsb
aad
cmpsl
xchg
test
pop
push
das
cmc
mov
inc
add
fdiv
xchg
repnz
push
push
push
xchg
sahf
lcall
iret
fldl
or
cmp
cmp
push
mov
lock
es
scas
mov
push
gs
fistpll
fwait
repnz
mov
scas
sahf
and
push
mov
inc
dec
add
pand
fs
push
test
mov
popf
std
xor
jp
test
out
ljmp
bound
mov
cmp
test
loope
int
push
sbb
out
xor
enter
shl
fwait
dec
outsl
testl
cmpsl
out
sahf
decl
lahf
movsb
bound
into
pop
ret
adc
pop
negl
and
lock
xor
lods
cli
test
jl
inc
cmp
stc
lods
push
scas
cmpsl
loope
arpl
dec
jo
xchg
in
movsb
mov
aaa
and
lods
inc
sub
lds
mov
mov
mov
jp
pop
mov
pop
sbb
pop
in
stos
repz
ja
jecxz
data16
add
pushf
movsl
jno
dec
icebp
aaa
sti
fsubr
mov
dec
mov
cs
stc
rclb
lods
mull
add
rcll
scas
mov
loop
movsl
bound
ds
roll
or
jnp
add
gs
inc
nop
pop
repnz
jns
lds
xchg
fildll
dec
mov
cmpsl
aaa
push
mov
jnp
stos
pop
scas
fwait
and
push
test
lret
ljmp
imul
fiadds
ja
sar
fmulp
pop
shrl
and
and
repnz
cmp
jl
inc
push
in
and
mov
dec
dec
bnd
cltd
mov
cmp
and
mov
mov
push
inc
subb
mov
loopne
cld
inc
push
pop
sub
lea
divl
aam
lcall
fnstenv
mov
mov
push
dec
rorl
xchg
clc
pop
xor
sub
adc
inc
inc
dec
out
pop
iret
cmpsl
test
xor
mov
sub
aaa
loopne
xor
push
lods
xor
pusha
std
ss
add
sub
sub
cmp
lret
pop
and
cli
add
pusha
xchg
and
jl
shll
lods
sbb
outsl
cmc
icebp
pop
sub
clc
adc
push
into
add
ljmp
aaa
xchg
mov
jno
inc
lret
push
push
scas
jl
mov
js
dec
mov
aaa
jmp
sub
fmulp
leave
and
sub
pop
pop
jno
ds
jg
dec
pop
ja
loop
mov
sub
xchg
out
mov
shl
mov
stc
mov
inc
bound
jne
hlt
add
mov
and
dec
lea
stos
xor
sbb
mov
cmp
add
es
fs
rorl
xor
icebp
imul
sub
mov
inc
repz
mov
std
imul
out
lcall
adc
push
mov
std
imul
test
aas
hlt
sub
mov
int
mov
js
int
fcompl
inc
arpl
mov
dec
in
add
mov
push
dec
out
xchg
je
aas
sub
and
jmp
arpl
test
jge
cmp
loope
mov
scas
movsl
or
dec
int3
daa
xchg
jecxz
xor
add
xor
sbb
xchg
add
add
mov
pop
and
xorl
jo
mov
mov
and
dec
aaa
mov
ja
jmp
sub
inc
xchg
lea
stc
sub
add
sub
push
sahf
cmp
inc
paddb
imul
std
test
addr16
mov
cmc
mov
dec
or
out
mov
push
jb
pop
mov
scas
loope
inc
mov
xchg
and
outsl
xchg
lcall
and
testl
xor
test
xor
and
ret
pop
rcrb
fcompl
aaa
js
ljmp
fidivrl
adc
push
rorb
in
dec
rcrb
dec
sbb
xchg
xchg
or
rolb
sub
sahf
gs
fdivrl
mov
outsl
push
push
cmc
mov
pop
loop
testl
sbb
fistps
inc
lret
into
jbe
add
adc
fstpt
add
daa
js
pop
adc
icebp
jge
ljmp
push
mov
out
hlt
popf
fsubrs
leave
fisttpl
pushl
popf
icebp
icebp
decb
ja
inc
mul
lods
and
or
push
xor
scas
cmp
loopne
pop
scas
lret
roll
jg
arpl
xor
negb
sarl
mov
jle
dec
push
popa
popa
scas
push
jecxz
add
and
xor
jb
dec
xor
lods
or
in
add
jae
xchg
jmp
xor
mov
or
dec
or
stos
stc
push
lea
stos
xchg
popa
sti
fimuls
pop
stos
orb
divl
add
fdivs
inc
pop
and
call
jbe
and
and
lods
cltd
dec
jg
and
mov
push
mov
test
xchg
cmp
adc
adc
xor
aam
insb
js
aad
mov
testb
scas
or
jbe
push
xchg
lret
test
push
mov
xor
rorl
cs
add
in
xchg
int
sub
loope
mov
jmp
ja
arpl
or
mov
jp
out
pop
sub
push
jne
shll
mov
scas
or
xchg
adc
pop
mov
xchg
pop
or
enter
inc
scas
dec
fmul
mov
insb
daa
inc
les
cmp
outsb
jb
xchg
repnz
fsubrl
lods
sbb
test
std
add
pop
jmp
sub
inc
mov
aas
ret
adc
out
shlb
mov
add
push
push
pusha
arpl
xor
and
pop
movsb
add
sti
daa
in
pop
or
xchg
cmpsl
mov
andb
rcrl
jmp
testl
push
add
add
aad
adc
stos
shlb
dec
inc
jmp
jl
ret
push
mov
mov
or
fdivr
lret
dec
jle
in
xlat
mov
mov
repnz
mov
pop
insl
and
int3
shrl
ret
sbb
and
mov
and
into
in
lret
stos
push
adc
xchg
cld
in
and
es
cmp
jmp
dec
arpl
repz
sbb
addr16
loopne
pop
addl
test
test
xor
out
add
fsubs
lret
test
fstps
mov
cltd
cli
icebp
js
mov
sbb
jge
jno
out
fisubrs
mov
sbb
ja
fs
xchg
pushf
data16
inc
sbb
sbb
lds
sbb
xor
popa
cli
out
data16
pop
inc
xor
mov
mov
sbb
icebp
dec
cmc
arpl
lods
gs
imul
mov
loop
pop
inc
xor
flds
roll
xor
clc
push
repnz
mov
push
sbb
lods
xor
xchg
jns
divl
bound
mov
fsubrs
sub
xchg
xlat
mov
lea
mov
xchg
mov
ja
popa
loopne
lods
xchg
mov
adc
mov
jae
add
mov
call
icebp
cmp
cmpsb
xchg
mov
dec
scas
repnz
inc
negb
xor
ficoms
movsb
mov
out
cmc
icebp
mov
jb
inc
mov
ja
sar
inc
sub
inc
pop
lock
lea
xchg
push
test
add
inc
add
sub
testl
push
je
push
iret
mov
mov
xor
inc
mov
lea
testb
jb
jg
push
fcmove
jo
loop
clc
ret
rcr
stc
inc
xchg
mov
loop
mov
movsl
data16
cmpsl
ds
xor
adc
aam
inc
pop
test
cmp
pop
cmp
xchg
inc
pusha
popf
fistpl
out
push
jo
and
mov
mov
pop
jecxz
mov
int3
push
add
mov
aad
fwait
movsl
mov
shl
jle
dec
hlt
pop
lods
daa
inc
inc
mov
and
cmp
inc
sub
mov
pusha
popf
in
shr
hlt
mov
cmpsl
and
push
xor
les
and
pushf
inc
ljmp
adc
push
mov
outsl
in
popa
inc
dec
inc
rclb
js
push
cmp
cs
in
std
std
mov
aaa
or
hlt
and
ljmp
mov
arpl
adcl
inc
sub
jecxz,pn
pushf
shl
xchg
push
mov
mov
xor
stos
sub
sbb
enter
int
movsl
ss
int3
add
add
cmpsl
sahf
jns
or
pusha
js
js
cs
fsubr
daa
out
shll
xor
push
lahf
and
mov
jg
add
inc
sti
add
int
or
iret
test
lock
mulb
mov
lods
cmpsb
mov
cli
fs
cs
mov
inc
divb
das
out
xchg
push
cwtl
andb
adc
aad
jae
or
test
sbb
pushf
fs
or
mov
add
inc
out
imul
arpl
jbe
jnp
dec
mov
push
pop
test
inc
jge
mov
mov
in
push
mov
daa
and
outsb
int
lock
push
mov
and
sub
dec
leave
repnz
pop
pop
or
mov
test
jmp
mov
dec
sahf
fdivrs
mov
dec
mov
jg
or
fiaddl
fwait
popa
arpl
cld
xor
sbb
adc
xchg
call
push
pop
das
mov
push
enter
push
jns
inc
cmpb
add
sub
push
xor
and
ss
roll
loope
jmp
scas
icebp
movl
and
xor
addr16
in
ss
xchg
fcomps
or
xchg
pop
and
lods
dec
sub
cli
imull
mov
aad
jmp
pop
scas
ljmp
inc
mov
loopne
push
pop
scas
lea
mov
lea
jecxz
pop
inc
or
iret
stc
push
adc
mov
icebp
cwtl
fcomps
adc
sub
jne
arpl
push
xchg
jae
jne
scas
popa
jle
rcrl
pop
fnstsw
mov
mov
push
mov
pop
decl
icebp
leave
mov
and
mov
in
iret
push
lock
and
inc
pop
xchg
jl
cmp
cmc
mov
outsl
repnz
mov
jle
mov
dec
sbbl
dec
mulb
mov
mov
ret
mulb
jp
ja
add
out
and
cwtl
pop
mov
and
jg
mov
ret
loop
pop
lcall
stos
ds
clc
dec
mov
test
mov
lret
in
xchg
mov
sbb
lds
jno
lahf
sbb
pop
xchg
out
test
jne
mov
push
lds
insl
pusha
rcrl
fnsave
je
xor
stos
lret
xchg
cmp
mov
test
xor
dec
sub
in
lea
cmp
fisubrs
xchg
sbb
mov
sahf
leave
repz
pushf
add
add
push
vpcmpeqd
imul
xor
pop
mov
outsb
pcmpeqb
adc
sbb
je
cmc
out
sbb
je
and
inc
test
push
jmp
jno
sub
xor
jbe
mov
jae
insl
sub
ja
loopne
jo
fmul
inc
sbb
pushf
xchg
cmpsl
push
cld
mov
les
jnp
push
jge
sub
push
fsubrp
cld
cmp
adc
push
nop
push
mov
pop
ret
mov
insl
cltd
mov
decb
sub
xor
mov
inc
mov
fcmovu
push
mov
jle
lahf
or
add
add
xor
cmpsl
xchg
es
ja
cmp
inc
jno
imul
xchg
sub
mov
adc
call
push
ds
inc
out
mov
mov
push
scas
cwtl
mov
xor
dec
into
pop
xchg
inc
inc
outsb
inc
mov
and
mov
mov
lret
enter
xor
xchg
mov
push
hlt
push
lcall
xor
adc
ss
jns
jb
cmp
call
test
pop
or
mov
sti
xlat
inc
lret
xlat
push
xchg
xlat
aaa
add
lea
repnz
adc
insb
inc
mov
sahf
or
pushl
inc
mov
out
inc
or
outsl
pop
fidivrl
jecxz
ret
or
fs
out
repz
mov
es
mov
or
test
push
adc
add
in
dec
dec
lea
out
es
inc
lret
loop
fadds
iret
xchg
xor
test
rcrb
lret
movsl
and
cmp
push
and
mov
dec
sbb
mov
sub
shlb
sbb
fisubs
imul
push
lret
jg
sbb
in
out
shll
lods
rorb
ret
fmull
fldl
push
jnp
inc
sub
dec
mov
or
sahf
jge
pushf
daa
push
test
stos
cmpsb
mov
xor
jbe
or
andl
sbb
dec
or
sti
push
roll
insb
pop
call
adc
adc
sbb
or
inc
sub
aad
inc
popa
cmp
xor
and
jp
pcmpeqd
pop
inc
and
push
addl
shrb
hlt
sub
adc
dec
or
mov
enter
xchg
pop
out
iret
mov
push
sbb
mov
mov
int3
xor
add
add
dec
popf
sbb
add
add
es
xor
test
cwtl
mov
push
inc
cmp
mov
or
mov
xor
mov
push
ror
mov
jns
jbe
jge
mov
push
movsl
inc
jp
or
loopne
scas
pop
es
pop
stos
fnstenv
aas
in
pusha
dec
test
dec
add
mov
mov
stos
enter
bound
popa
mov
sub
dec
mov
dec
lods
cmpl
push
arpl
aas
sbb
stos
shrl
xor
and
aaa
xchg
and
cmp
and
xor
test
mov
test
cmp
aam
stos
jne
cmp
pop
ret
add
imul
xchg
xchg
push
cmc
lahf
inc
insl
sahf
insb
and
mov
mov
sub
mov
jne
or
jecxz
xor
out
and
add
sbb
mov
pop
lea
orb
sti
clc
jge
sbb
mov
pop
push
jge
sub
sbb
insl
mov
or
ljmp
adc
stos
outsl
movsl
push
lret
cmp
push
test
mov
xchg
or
push
es
mov
dec
cmp
sar
stos
mov
out
js
dec
sarl
sti
sub
push
xor
fdivs
inc
fnsave
mov
mov
out
pop
pop
mov
or
es
imul
lret
lahf
inc
mov
jo
sti
outsb
insl
sub
sti
add
popf
cmc
test
or
cmpsl
fcmovb
lock
mov
loop
mov
arpl
and
mov
jmp
jmp
ljmp
pop
or
inc
add
cmp
dec
pop
xchg
push
jg
sbb
cmp
xor
jbe
mov
jo
adc
adc
add
adc
pushl
and
sbb
pop
cs
das
inc
jb
pop
loope
inc
jge
mov
jl
out
insl
push
cmp
lds
dec
pop
andb
xor
inc
mov
or
mov
push
mov
cmpb
push
aam
push
mov
popf
lahf
xor
imul
aad
out
fisttpl
loope
jecxz
jae
mov
xchg
lds
into
push
mov
gs
int
add
jecxz
pusha
outsl
out
sbb
pop
out
jle
push
out
call
fdivs
and
push
push
rclb
or
dec
dec
cltd
jae
je
cmpsl
push
and
in
fsubrp
pop
add
mov
push
lcall
fwait
xchg
adc
aam
and
divl
cmpsl
xlat
jle
sbb
mov
dec
mov
xchg
movsb
sub
or
lea
push
push
shl
lds
testb
lods
movsb
cmc
test
dec
cmc
pop
and
outsb
add
ret
xchg
inc
cmpsb
repnz
out
push
out
rcl
fcomp
inc
cld
jno
out
jge
inc
push
outsb
pop
xor
test
dec
jb
cltd
cli
or
insl
and
loop
fcom
mov
int
nop
cmp
out
imul
push
mov
iret
xchg
jmp
lock
push
push
sub
push
pop
sub
xchg
es
jp
sbbb
adc
imul
jnp
or
mov
pop
and
ss
addr16
sbb
push
cmpsb
xor
and
push
std
sub
or
and
push
cmp
ret
ss
dec
ret
inc
and
pop
das
mov
sarl
pop
mov
pop
lods
popf
pop
mov
and
mov
xchg
or
pop
mov
pop
das
mov
pushf
mov
lock
inc
cmpsb
inc
fmull
jno,pt
mov
xchg
pop
je
test
ljmp
cmovp
js
insb
aaa
jae
cld
sub
jo
adc
add
clc
movsb
mov
dec
scas
and
jo
jne
inc
andb
test
sbb
cltd
movsl
enter
or
mov
dec
sbb
out
mov
xor
jecxz
sbb
cmp
in
jne,pt
lds
out
addr16
ja
mov
mov
cld
inc
aas
cmp
in
xchg
pop
cmc
xor
lahf
test
hlt
mov
scas
mov
out
fdivrp
loopne
negl
sahf
movsl
mov
pusha
hlt
stc
addb
add
data16
int3
out
inc
sti
scas
or
negl
dec
int
or
xchg
sbb
mov
ret
test
jne
mov
iret
and
mov
add
or
insl
xchg
and
xor
out
cld
inc
test
test
cmp
and
cmp
add
mov
mov
or
icebp
fwait
ljmp
hlt
movsl
enter
lods
in
ja
mov
xor
in
mov
mull
test
mov
lret
sbb
out
out
adc
cmp
mov
jb
dec
lcall
pusha
arpl
sub
repz
cwtl
adc
push
jge
stos
dec
hlt
mov
negl
nop
sub
xor
outsb
mov
sbb
jmp
sub
push
dec
sarl
mov
dec
mov
outsl
dec
cmp
jb
xchg
ja
sub
jmp
dec
or
icebp
mov
fdivrl
adc
jns
mov
xchg
sbb
or
push
ret
aas
jp
sub
mov
out
sbbl
hlt
jge
or
js
sub
push
pop
cmpl
push
xchg
test
cmp
push
mov
fmuls
fsubrl
dec
das
bound
jp
cmp
cld
rcrl
or
fsubl
pop
push
adc
inc
insl
mov
lea
es
cmp
orl
aam
xor
fistl
cltd
push
pop
lods
std
dec
aaa
mov
std
pop
ja
sub
cmp
test
test
das
dec
ljmp
in
jb
sub
mov
mov
mov
test
xor
dec
pop
inc
jmp
jl
inc
adc
adc
jo
inc
mov
jp
out
xchg
std
imul
negb
stos
add
push
mov
xor
lea
bound
ss
jge
icebp
mov
cld
fwait
push
mov
xor
push
or
xor
mov
inc
gs
in
adc
ret
fimuls
push
sahf
cmp
adcb
inc
adc
mov
or
inc
sahf
call
cmp
pop
pop
mov
push
pushw
daa
insb
pop
insb
xchg
adc
rolb
and
sbb
sti
xor
aad
rsm
aad
imul
push
cli
mov
das
jno
jnp
xor
fstp
xorb
xor
sbb
push
add
subb
pop
mov
int3
popa
push
xor
sbb
dec
adc
push
sahf
fisttpll
mov
push
pop
mov
pop
lahf
push
sub
sbb
popf
outsl
sbbl
pop
fsubrl
push
ss
lds
out
popa
cmp
in
jp
int
sub
gs
test
jne
xor
addr16
outsb
dec
xchg
mov
push
jmp
sub
rcr
fwait
push
or
sub
dec
inc
cmp
aad
pushf
add
mov
jmp
sbb
xor
dec
push
mull
ret
mov
add
out
xchg
loop
dec
mov
inc
jecxz
insl
inc
mov
xchg
cmp
sbb
or
inc
xchg
in
into
xor
data16
mov
add
xchg
bound
arpl
jns
adc
lret
mov
aaa
xchg
lds
push
adc
lcall
outsl
sahf
inc
je
mov
xchg
xor
pushf
and
jb
negl
add
mov
fstl
lret
rcl
sub
xchg
pop
ljmp
sub
iret
testb
push
mov
nop
aam
cmp
fadd
push
or
push
outsb
jge
out
or
and
stos
cmp
mov
inc
push
fcoml
out
shl
jbe
sbb
xor
lret
push
cmpsb
push
add
stc
adc
dec
cmp
add
movsb
ret
push
leave
adc
cld
xchg
pop
sub
mov
mov
dec
in
pop
nop
out
dec
jne
or
mov
jmp
sbb
scas
test
pop
dec
mov
inc
dec
xchg
sub
stc
sub
sti
movsl
movsb
jl
push
jl
adc
in
mov
icebp
push
lods
aam
push
inc
test
pusha
pushf
aam
cli
adc
outsl
add
aam
stc
sbb
nop
bound
sbb
popf
mov
ds
and
adc
loopne
inc
sbb
cmp
aam
cmp
into
loopne
testb
stc
inc
sbb
sbb
pop
cmp
rcll
cmc
rorl
inc
imulb
jl
shl
mov
shrl
sub
pushf
push
mov
insl
sbb
adc
xor
loopne
adc
sbb
xor
sub
das
shl
in
pop
out
aad
mov
and
inc
sbb
lods
ret
incb
xor
out
cmp
ds
std
std
ret
jne
lds
push
hlt
xchg
int
and
add
fwait
push
loop
leave
int
cwtl
adc
xchg
xchg
fldenv
cmp
xor
ds
pop
enter
mov
ja
les
insb
in
mov
jo
in
cmpb
lret
adc
movswl
add
push
shl
ja
pop
sbb
ficoml
test
cmp
cwtl
mov
cwtl
lea
daa
sub
or
scas
add
sbb
test
js
xor
int
xlat
mov
mov
mov
ja
loopne
jnp
roll
add
ss
shl
adc
xchg
shrb
daa
fbstp
inc
shrl
mov
adc
cmpsb
aad
fnstenv
nop
pop
fisubrs
dec
insb
mov
cmp
add
popf
lods
push
lret
sahf
jns
enter
aad
ljmp
mov
sbb
pop
inc
push
idiv
icebp
sub
pop
push
ss
arpl
sub
jmp
lcall
shll
pop
dec
mov
cmc
in
dec
pushf
cmp
xorl
mov
in
adc
orl
xor
fisubrs
bswap
outsl
xor
pushl
daa
aaa
aaa
pop
or
dec
jbe
pop
jbe
cmp
pusha
fimull
mov
in
sbb
jl
inc
into
out
pop
dec
or
push
cmp
push
enter
pop
xchg
fistps
mov
je
out
pop
dec
bound
mov
mov
xchg
nop
mov
clc
add
cmp
imul
jo
mov
lock
fisubs
div
sbb
sbb
pop
mov
push
fisubs
mov
or
movsb
and
fcmovb
fwait
lret
xor
or
mov
sub
and
adc
fsub
popf
scas
add
into
cmpsb
lret
sub
lcall
dec
out
lods
js
add
shl
mov
and
inc
mov
inc
in
rcrl
xlat
mov
jmp
inc
sub
fisubl
sbb
jge
mov
je
in
cmpb
ljmp
mov
dec
jmp
inc
push
mov
jb
mov
push
scas
jmp
sbb
mov
repnz
cld
adc
sbbl
jae
mov
enter
std
sbb
sbb
icebp
hlt
cld
inc
cmp
adc
xchg
add
aad
inc
sub
pop
pop
not
scas
cmpsl
scas
lret
cs
push
add
test
out
dec
jmp
push
lahf
pushf
test
ds
shl
or
nop
or
orl
in
xor
scas
aas
mov
out
jno
xchg
leave
dec
aad
subb
arpl
and
add
into
nop
cmpsb
or
fmul
ja
pop
pop
and
cltd
loope
xchg
inc
push
pop
mov
add
jb
xchg
into
adc
cmp
add
pop
jg
pusha
push
test
dec
inc
dec
xor
dec
mov
pop
jmp
aam
xchg
xlat
jl
pop
fcompl
insl
cmp
push
fistl
sahf
call
pop
aad
into
enter
xchg
sbb
pop
xor
mov
ljmp
mov
lcall
xchg
push
or
enter
mov
daa
push
neg
sahf
or
sub
dec
pop
mov
insb
inc
loop
push
outsb
and
push
ljmp
xchg
outsl
imul
sbb
callw
mov
add
stc
dec
les
pusha
mov
call
das
mov
pusha
jmp
ret
iret
push
arpl
add
aas
popl
int3
div
jge
sbb
dec
data16
xchg
outsl
stos
jbe
pop
and
xchg
ja
icebp
jb
push
dec
fldenv
jg
test
lods
iret
sbb
int3
adc
pop
cmp
sub
mov
cmp
lock
push
cmpsb
sbbl
cmp
ficoms
out
sub
mov
sbb
dec
jns
fnstcw
push
ja
push
jg
xchg
and
pop
add
mov
xchg
push
mov
in
push
sub
xchg
xchg
popf
jno
mov
lret
aam
mov
jmp
cli
leave
xchg
movsb
in
mov
xchg
inc
pop
jl
sub
sti
dec
mov
jmp
jp
mov
mov
gs
add
je
leave
xchg
push
dec
mov
int3
sbb
pusha
aaa
xor
push
pop
jp
test
jne
test
push
insb
jmp
repnz
pop
dec
and
and
jb
mov
hlt
shlb
jmp
dec
aas
adc
sbbb
and
stc
sub
push
clc
xlat
mov
jle
xchg
mov
outsb
faddp
loope
ljmp
jns
xlat
mov
dec
and
arpl
adc
cwtl
ss
andb
xchg
sub
cmp
pop
loop
pop
out
rcr
xchg
pusha
ret
pop
nop
sub
subb
mov
in
insb
aam
fs
inc
aaa
call
inc
ljmp
and
filds
movb
gs
in
out
sbb
jne
add
or
iret
popf
jne
sbb
pop
xlat
add
jo
xchg
push
mov
or
outsl
add
ret
or
or
pop
xorl
icebp
shlb
xchg
pop
pop
push
jb
mov
lret
adc
or
adc
cmpsb
out
inc
lcall
xchg
xor
pop
insb
sbb
dec
jne
dec
and
xchg
and
push
and
sbb
xor
nop
add
dec
xlat
test
add
int
notl
jmp
arpl
add
jno
leave
jl
jmp
cmp
ds
push
cmp
pop
test
xchg
test
iret
je
mov
adc
call
jb
test
fldt
js
jb
scas
push
mov
cmp
xchg
movsl
mov
xchg
cld
ret
addr16
repz
popa
mov
in
pop
mov
inc
ret
pushf
lock
lock
scas
stos
pop
and
mov
movsl
andps
cmp
sbb
movsb
xchg
mov
or
mov
data16
pop
das
fs
sbb
mov
jbe
mov
mov
dec
jbe
mov
outsb
add
loopne
and
lret
fidivrs
pushf
movsl
cs
arpl
pop
adc
sbb
mov
xchg
repz
loop
add
jo
pop
imul
arpl
sub
mov
mov
mov
adc
in
dec
mov
int3
add
jge
or
fdivs
test
adc
adc
xchg
fnstsw
push
and
insb
inc
je
movsb
das
jle
add
dec
stos
jb
out
mov
jnp
or
popa
inc
inc
aas
sub
into
cmp
arpl
pop
pop
inc
in
pop
int
in
dec
xor
push
aas
inc
inc
lret
pop
leave
add
pop
or
mov
sub
fs
cmovle
cmp
adc
icebp
push
cmp
les
jle
jo
mov
movsl
adc
xlat
out
cli
sbbl
iret
xor
lds
outsl
in
addr16
add
push
xchg
pop
add
ret
sbb
addr16
dec
dec
mov
adc
cmp
dec
rcll
insl
mul
das
cmp
sub
adc
pop
icebp
mov
mov
or
lock
xor
faddl
aas
add
mov
imul
cmp
sbb
adc
push
ss
repz
add
lods
xchg
movsl
or
ret
sarb
lret
jae
sub
inc
or
adc
mov
and
loopne
push
inc
cli
mov
hlt
pop
lods
int
jmp
flds
add
insb
pop
cli
pusha
les
fimuls
stos
xchg
cmpl
out
lds
jmp
add
in
rolb
push
imul
xor
ljmp
inc
jle
push
mov
cmp
lds
mov
jge
sub
test
aam
sub
dec
push
out
repz
jp
or
xor
sub
dec
lahf
arpl
mov
add
cmp
lahf
or
and
lcall
lahf
inc
popf
adc
call
xor
lea
mov
loop
mov
jnp
jns
xchg
xchg
jnp
sbb
jbe
out
jl
dec
nop
aam
jno
hlt
pop
inc
inc
jne
test
lds
sarl
les
sbb
add
mov
push
hlt
xor
fdiv
push
not
ds
cld
jae
lock
mov
fnstsw
dec
data16
lahf
insl
mov
and
nop
aam
lods
sti
lea
pop
sbb
sbb
mov
int3
mov
movsb
cmc
pop
call
mov
fdivs
xor
dec
js
mov
xchg
test
push
xchg
and
mov
jge
dec
xchg
je
movsb
jge
rolb
mov
xorl
dec
lret
add
lods
pop
mov
mov
xor
inc
lods
sub
adc
inc
fdivrs
js
pop
sbb
test
add
sbb
mov
shll
xchg
and
push
pop
daa
mov
xor
lock
pop
sti
int3
pusha
sbb
pop
jns
add
and
fiadds
nop
sub
xor
mov
lret
dec
pop
jne
lock
inc
mov
mov
jp
ud2
cmp
shll
push
out
inc
data16
and
outsb
jae
add
dec
mov
aas
fcomip
push
pusha
lret
adc
dec
and
push
imul
cmpsl
or
int
gs
push
popf
cmp
xor
jno
xchg
das
inc
les
loopne
das
push
scas
aam
es
mov
xor
push
lock
call
lret
inc
jecxz
sub
mov
inc
adc
cmp
sbb
int
lahf
xchg
xor
or
loope
std
das
and
fstps
faddl
into
icebp
adc
cmp
enter
sbb
aas
int
cmpsb
pop
push
addr16
xor
or
fs
idivb
ffreep
mov
cltd
or
push
mov
cmc
lret
ds
cmc
mov
cmovs
movsl
mov
ss
lods
mov
jecxz
loopne
mov
jp
in
cwtl
ja
les
repz
nop
mov
jno
add
dec
xor
jle
loop
and
sub
pop
inc
inc
mov
pop
ss
sub
adc
push
xor
data16
cmp
xor
mov
rorl
mov
addb
lods
xor
arpl
jmp
scas
lcall
popa
jne
sbb
addr16
mov
fcmovnbe
lods
push
pop
fsub
jmp
iret
sbb
jge
test
arpl
lock
loop
stos
das
jge
push
xchg
jb
inc
mov
sub
test
adc
stos
out
xor
xchg
ret
inc
xor
incl
in
inc
fsubrl
cmp
mov
out
imul
xlat
jp
pop
in
stos
shlb
es
shrl
mov
cmp
mov
into
stos
sbbb
dec
or
sbb
cmp
pushf
xlat
cmp
movsl
jecxz
mov
idivl
aad
bound
inc
scas
shl
cmpsl
je
sbb
scas
lret
jae
sub
bnd
addb
fs
sti
loop
pop
in
das
ds
mov
add
subl
test
jo
addb
in
mov
stos
aaa
lock
push
mov
sbb
clc
jns
inc
mov
into
pop
ja
lahf
cwtl
les
mov
dec
sbb
cmp
pushf
insl
imul
fisttpl
dec
add
or
pop
cmp
js
mov
and
dec
mulb
adc
pop
sub
test
cmpsl
add
pop
jnp
jge
cltd
lods
cli
dec
call
pop
mov
in
sbb
adc
lret
push
adc
mov
insl
in
into
sub
cmp
mov
popa
lods
cmp
les
jb
mov
icebp
aaa
dec
and
mov
xrelease
jecxz
das
decl
ja
jbe
and
sbb
mov
std
cmp
xor
pop
mov
fwait
add
cmp
dec
push
push
mov
imul
jno
or
sub
stos
loopne
pop
mov
rcll
je
sbb
jecxz
inc
sbb
loop
xchg
and
sbb
lds
sub
lcall
push
int3
clc
push
pop
xchg
fimuls
cmc
mov
jns
fsubrs
jnp
arpl
inc
pushf
push
sub
sub
es
ljmp
mov
dec
mov
mov
jecxz
int
int
mov
lret
jge
repnz
test
mov
and
in
jmp
jmp
push
mov
sub
mov
xchg
int
push
sub
js
nopl
adc
fwait
or
shlb
fidivs
das
mov
in
out
and
mov
loope
lea
pop
mov
push
push
std
jnp
mov
cmp
push
inc
in
lods
pop
shll
cld
in
aad
scas
ret
lcall
push
loop
call
enter
popa
sbb
push
xor
enter
cs
hlt
sub
push
stos
jnp
or
hlt
jp
push
add
xor
lret
and
pusha
or
push
mov
ret
lods
sbb
jp
sbb
stc
sti
sbb
sub
cmp
das
test
leave
xchg
fcomip
pop
xor
out
jmp
mov
fwait
pop
jmp
and
sbb
ret
ja
adcl
xlat
xor
push
pop
lds
mov
aaa
ret
inc
adc
sahf
aam
adc
jns
std
sarl
test
imul
sbb
gs
and
sbb
aaa
fcmovnu
dec
xor
mov
aam
fsts
lret
test
sub
pusha
int
mov
repz
in
imull
stc
faddl
add
pop
in
jnp
movsl
adc
insl
cmc
cmp
sbb
pop
in
iret
pop
fcom
pop
es
sub
test
xchg
test
cpuid
adc
mov
and
sub
cld
jle
add
lds
cmpsb
stc
aaa
pop
lahf
cmc
roll
cld
mov
enter
or
movsw
jmp
insl
pop
or
sub
sub
loopne
fcmovnb
testb
cmp
jmp
cmp
dec
cmpsl
mov
dec
call
xor
mov
or
dec
inc
jnp
xchg
jmp
es
outsb
clc
xlat
popa
inc
pop
jge
popf
or
mov
add
and
cmp
cmpsl
dec
in
aad
loopne
cmp
repnz
inc
push
addr16
push
sub
jns
fs
or
mov
stos
das
add
jge
ss
add
and
sub
gs
jb
imul
movsb
fidivrs
pop
lods
xor
in
pop
into
scas
out
inc
add
repnz
jl
dec
add
jmp
sub
incb
stc
push
nop
inc
mov
mov
and
fstp
cwtl
lcall
popa
jecxz
mov
pop
xor
mov
push
aas
daa
xchg
int3
mov
rcrb
push
fdivl
iret
dec
cmpsb
jno
sbb
or
sti
inc
stos
sbb
emms
pop
in
add
ret
mov
inc
clc
push
inc
dec
or
jne
mov
bound
lock
pop
sbb
repnz
in
aad
in
mov
push
std
add
and
ds
mov
push
scas
out
rcl
adc
mov
cmp
and
mov
xchg
out
stos
jle
dec
jbe
fcmovb
jle
call
sarb
ja
pop
cltd
cmp
dec
sub
std
data16
xchg
aas
hlt
or
out
sub
jp
mov
adc
aaa
fxam
dec
pusha
lock
add
outsb
test
xchg
push
fcompl
adc
pop
jmp
in
add
loopne
sbb
pop
decl
mov
repnz
sub
sub
jno
les
mov
out
in
ds
add
lods
cltd
cmp
lcall
cltd
dec
cmp
testb
add
lods
sbb
xchg
decl
add
jecxz
cmpb
push
outsl
insb
js
xchg
mov
insb
cmp
xchg
mov
test
dec
sahf
dec
fldt
iret
lods
mov
or
dec
out
cmpsb
jne
add
pop
test
adc
ficomps
pop
flds
dec
fs
and
jl
pop
push
inc
loop
cmp
adc
jp
ret
loop
or
adc
xchg
dec
add
xor
xlat
inc
sub
jge
mov
inc
mov
push
sbb
test
or
popf
sti
int3
hlt
mov
adc
sub
lds
daa
in
push
fcomp
iret
and
jmp
or
out
sub
xchg
repz
add
daa
shrl
or
lahf
lock
adc
cwtl
std
enter
dec
call
ja
call
adc
loope
pushf
filds
inc
inc
and
fadds
bound
pop
or
push
ja
test
cmp
add
subl
xlat
pop
add
subl
xchg
ja
add
jns
sti
popa
jae
cs
inc
mov
push
jge
dec
arpl
pop
push
xchg
mov
stos
inc
adc
flds
jne
sub
mov
lods
mov
imul
call
sub
xchg
enter
sbb
in
cmpsb
dec
in
push
das
or
push
and
cltd
fwait
movl
icebp
adc
xor
fsubrs
divl
jg
inc
insl
xchg
cmp
dec
sub
inc
mov
pushf
adc
loope,pn
jmp
fdiv
pop
jge
movsb
test
inc
fstpt
push
stos
dec
xor
xchg
mov
aad
movsl
push
push
dec
cmp
stc
test
imul
addr16
push
mov
lods
push
arpl
and
cmp
xor
jb
stos
and
outsb
iret
iret
adc
push
dec
xchg
fbld
rolb
pop
ret
push
test
push
std
mov
test
xor
push
rep
loopne
loopne
xchg
dec
mov
divb
popf
push
sbb
sti
subb
push
sbb
push
dec
jo
ds
lds
gs
sahf
loope
fildl
enter
push
ss
orb
xchg
sarb
mov
cmpsb
xchg
inc
xchg
divl
rcll
cmp
stc
clc
mov
xor
aad
xor
ficomps
addr16
pop
sbb
out
pop
loop
hlt
pop
xchg
sub
fidivl
mov
repnz
insb
lret
mov
je
jne
pushf
pushf
push
sub
fnstcw
ss
inc
outsb
pop
add
jae
inc
lea
xchg
js
push
pop
inc
pop
xchg
mov
inc
es
xchg
js
mov
pop
lcall
push
push
jae
xor
mov
movsl
cwtl
push
insb
jmp
stc
lret
das
xchg
fildl
adc
xchg
cs
or
dec
dec
mov
out
out
sbb
fwait
enter
push
xor
mov
lock
dec
sub
andb
jae
in
mov
mov
inc
call
dec
adc
xchg
inc
mov
ss
outsb
fwait
mov
inc
std
xchg
mov
ficoml
sbb
lds
xchg
pusha
inc
stos
cwtl
aad
xchg
push
test
jno
cmp
std
lods
cmp
jg
inc
mov
adc
fs
jbe
nop
gs
xor
jp
clc
test
mov
stc
pop
pop
adc
push
imul
pop
outsb
lea
push
adc
xchg
daa
out
sbb
ljmp
and
lret
mov
inc
shlb
inc
push
fwait
popa
mov
orl
fwait
xor
mov
xorl
adc
mov
inc
mov
jl
std
push
popf
pushaw
jns
or
inc
dec
push
loop
mov
imul
jp
mov
xor
adc
movsl
mov
ret
mov
push
fcomps
scas
int3
dec
int3
mov
and
sbb
lea
lret
xchg
jp
sbb
push
pushf
sub
inc
fists
jecxz
or
aas
pop
push
add
daa
mov
push
mov
in
aam
lcall
daa
dec
mov
stos
cmpsl
mov
ret
dec
cli
repz
iret
add
out
xchg
sarl
in
in
int
hlt
bound
or
cld
addr16
add
mov
cmp
jge
insl
lods
faddl
movsl
es
add
sbb
int3
insb
add
divb
pop
cltd
xchg
add
fisubl
cmc
sub
fsubs
rolb
pop
adc
sub
pop
and
mov
push
loop
aaa
xchg
mov
ss
fstpt
loop
mov
int
dec
push
cmp
and
or
jge
shll
test
jno
mov
add
out
dec
add
xor
test
mov
cmp
in
mov
gs
or
jns
push
cmpsl
in
jl
cltd
mov
popf
pop
xchg
fwait
cld
ss
movl
sbb
push
ds
adc
aad
call
and
add
imul
jmp
jmp
outsl
in
shrl
xchg
and
xor
mov
fsubl
and
adc
mov
push
lret
xor
fcoms
pushf
mov
loopne
push
lods
push
push
mov
push
push
mov
adc
leave
lcall
pop
fs
lods
and
out
mov
xorb
test
shr
xor
sbb
int3
pop
in
stos
mov
mov
mov
into
pushf
ret
push
inc
xlat
jle
popa
pop
mov
or
sbb
mov
movsb
or
adc
cs
movsb
pop
rorb
insl
jo
cmp
add
sti
mov
scas
or
mov
les
lahf
iret
inc
scas
nop
adc
mov
or
xchg
bound
movsb
xor
movsl
push
or
jnp
shr
jnp
sarl
decb
outsl
sbb
je
bound
fiaddl
cmp
inc
test
arpl
cltd
lods
imul
les
sbb
mov
shrb
push
pop
push
add
jb
cmp
xor
lahf
in
lret
data16
xor
jmp
sbbb
rcrl
mov
push
pop
mov
jle
and
or
ret
xor
mov
mov
dec
mov
call
es
mov
mov
push
cmp
dec
fcmovu
movsl
inc
loopne
xchg
fcoml
or
mov
out
popf
dec
jmp
add
dec
sub
cmp
add
shr
fdivrp
lds
or
adc
add
es
loop
and
push
push
out
loop
mov
iret
pop
push
or
std
nopl
in
and
jmp
xor
push
ret
stos
popf
mov
test
or
cmp
add
loope
lods
dec
and
xorb
push
out
test
cmpsl
xor
sahf
inc
or
push
lcall
xor
mov
sub
inc
cmp
into
push
stos
adc
dec
push
sub
in
cmp
jbe
fsubp
push
les
inc
rclb
cld
sbb
push
cld
xchg
fs
inc
xchg
push
cli
fsubp
dec
jg
loope
or
sub
outsl
adc
add
icebp
insl
sbb
mov
jle
fnstenv
or
xor
aad
pop
stc
inc
lock
adcb
popf
mov
mov
repz
decb
add
add
push
xchg
xchg
xchg
mov
mov
call
jns
les
int
jecxz
adc
xor
push
xchg
adc
test
adc
inc
hlt
mov
or
push
scas
ja
cltd
xor
inc
add
or
pop
cmp
cmc
push
stos
jnp
push
cmp
xor
jbe
add
fwait
or
daa
dec
aad
sub
jmp
cs
or
mov
mov
adc
filds
dec
test
or
lret
mov
and
xchg
aaa
xor
jb
outsl
stos
xor
jnp
and
jne
mov
mov
es
xchg
add
fists
rorb
repnz
add
push
neg
push
jbe
test
mov
pop
xabort
or
jne
out
jecxz
fcmovbe
pop
test
mov
test
jo
push
out
lds
add
shll
add
mov
and
and
push
pusha
ret
cmp
fadd
push
pop
push
into
test
ror
jb
pop
xchg
movsb
stc
mov
jl
xchg
cld
and
push
rorl
es
and
jl
xor
loopne
and
repnz
in
push
fcomps
movsl
sub
add
rcl
rclb
ret
sarb
mov
jp
xor
jmp
xor
mov
inc
data16
pop
imul
or
mov
sbb
dec
mov
push
jg
inc
pusha
xchg
movsb
das
mov
mov
fldln2
jns
inc
cwtl
pop
rolb
lds
dec
sub
sti
icebp
inc
pop
cmp
cld
fwait
cmp
cltd
cmpsl
loop
in
movsb
pushf
pop
rcl
xor
sbb
and
sub
gs
add
ret
push
cwtl
and
mov
adcl
sub
inc
fwait
xchg
jl
ss
or
daa
fs
leave
stos
mov
or
xor
dec
pop
jns
xchg
das
or
lods
pushf
cmc
jne
inc
outsb
lcall
push
rcll
sti
or
cmpsb
xchg
sti
pop
mov
jae,pt
jle
mov
pushl
arpl
xor
mov
dec
or
jne
push
xchg
mov
lods
dec
push
in
js
rclb
sarl
fdivrs
mov
adc
push
sbb
add
push
push
adc
xchg
stos
mov
addr16
mov
xchg
lcall
fstl
adcl
fidivrs
push
js
mov
lods
cld
dec
fwait
cld
cltd
rorl
or
insl
and
pop
dec
decb
push
inc
push
lds
test
scas
mov
xchg
imul
out
shl
xor
insl
aam
add
stos
arpl
pop
shl
call
sbb
mov
cmp
sub
mov
mov
cmp
sbb
in
ljmp
enter
add
gs
icebp
jnp
cmpl
inc
xchg
and
pop
std
push
mov
das
mov
dec
loopne
stos
or
push
add
mov
sub
cmpsb
mov
sahf
mov
jns
vpmacsww
repnz
movsl
cltd
mov
cs
iret
cmc
fdivrl
mov
jb
rcrl
nop
mov
jl
adc
enter
test
adc
or
stos
jae
lahf
ss
inc
stc
cmp
test
neg
leave
mov
aad
inc
mov
pop
and
jo
jge
cltd
scas
jo
dec
sub
popa
pusha
dec
idiv
inc
jecxz
cmp
repnz
test
mov
mov
pop
in
jns
mov
scas
test
xchg
shl
lds
sub
add
jmp
mov
cmp
pusha
stos
rcl
pop
cmp
xor
inc
push
movsl
rcll
and
push
push
mov
mov
leave
test
xlat
sarb
in
sbb
jne
into
scas
sahf
dec
sbb
mov
faddp
pop
scas
sub
movsl
or
pop
jl
fstpt
sub
pusha
pop
rclb
push
mov
add
arpl
jecxz
cmp
push
lock
mov
repz
lods
xor
aas
cmc
cmp
mov
push
inc
xlat
test
ljmp
jmp
hlt
xor
mov
dec
pushf
pop
sbb
pop
sahf
lea
mov
xor
add
fidivrl
aam
ja
lret
scas
xchg
jmp
dec
push
mov
dec
push
popf
sub
sbb
jp
movsl
push
lock
mov
mov
mov
sub
push
test
mov
xchg
shrl
xor
mov
xchg
and
xchg
jmp
push
data16
enter
push
push
int3
call
pop
ficoms
outsl
lret
shrl
test
les
je
sahf
mov
int
sahf
cmp
sbb
out
xchg
movsb
fiaddl
aas
mov
cwtl
lock
adcl
movsb
mov
ret
fld
rcr
xor
adc
inc
mov
scas
fmull
ret
or
and
or
and
in
sub
mov
sbb
fsubr
into
xchg
nop
cmp
mov
mov
imul
fdiv
enter
sbb
outsb
out
mov
xor
addr16
fs
movsl
add
fstpl
mov
je
sub
cli
and
insb
rclb
cmpl
pop
ljmp
dec
pusha
int
lahf
mov
sub
lds
int3
pop
gs
arpl
and
mov
dec
frstor
mov
push
pop
sbb
fwait
cwtl
jmp
xlat
ss
sub
jb
gs
jl
out
and
jecxz
mov
jb
dec
push
mov
int
or
stc
dec
les
das
cli
cld
adc
roll
ss
ffree
pop
out
mov
pop
push
dec
pop
push
jbe
xchg
mov
pop
dec
shrb
call
sbb
popa
sahf
mov
pop
push
push
or
sahf
std
mov
aas
xchg
xor
aaa
dec
imull
cwtl
jno
aas
add
push
cmp
fadd
or
fisubrl
add
shrl
sub
cmpl
and
outsb
inc
cmp
cwtl
add
jmp
popf
adc
call
mov
pop
or
call
pop
push
popf
mov
into
cmc
mov
jge
jecxz
add
loopne
and
lret
loopne
lods
test
pop
push
out
mov
adc
and
dec
ds
push
add
seto
lea
outsl
in
and
pop
adc
xor
in
mov
mov
xchg
ret
sub
fnstenv
xor
adc
push
subb
mov
cwtl
movl
adc
pop
int
sti
ss
repnz
lods
mov
outsb
add
test
jne
movl
xor
sub
popf
insl
arpl
ss
and
ret
inc
call
imul
movsb
cli
mov
pop
mov
cmp
jp
push
xchg
sub
dec
jl
vpmulhuw
or
mov
and
jp
test
rcrb
jle
or
out
aas
push
lods
add
lcall
mov
les
mov
mov
mov
xor
in
jg
int3
stos
pop
add
xor
mov
inc
inc
lret
mov
or
ja
push
dec
adc
sbb
mov
or
push
fs
sarl
pop
and
lods
hlt
xor
jmp
ret
rcr
sub
pmullw
xor
fildl
int
and
ljmp
daa
pop
push
add
and
xchg
add
mov
or
mov
iret
fwait
rorl
xlat
stos
inc
xchg
sub
lods
push
mov
out
push
inc
aam
push
js
fisttpll
pusha
cli
push
sti
pushf
mov
in
dec
std
dec
cwtl
push
adc
dec
add
insl
sbb
lods
xchg
addr16
xlat
cmc
out
sbb
insl
jge
jb
ja
inc
in
or
cmp
jmp
push
sbb
mov
movsl
movsl
mov
xor
les
outsl
adc
add
popa
jne
adc
imul
jmp
adc
pop
pop
and
movsb
cli
sbb
stos
mov
lcall
and
add
xor
push
add
call
mov
mov
xchg
hlt
mov
sub
cmp
mov
inc
fsubl
sub
and
pushf
es
jne
xor
movsb
push
fwait
mov
loope
xlat
out
cs
mov
in
ds
and
jle
in
sub
cmp
mov
loope
or
xor
xchg
lcall
addr16
stos
scas
xor
mov
shrb
add
mov
or
mov
mov
in
frstpm(287
xor
xor
imul
mov
es
daa
push
mov
xchg
push
add
jecxz
mov
call
shll
in
mov
dec
add
push
xor
mov
in
and
dec
pop
mov
push
ljmp
montmul
cmpsb
add
jle
imul
dec
dec
dec
mov
das
jbe
mov
or
das
rolb
call
mov
jnp
jl
or
cmpsl
movsb
arpl
dec
sbb
das
out
inc
testb
idiv
mov
ss
xor
cli
add
pop
or
jl
bound
daa
sbb
and
pop
aas
fsub
pushf
popf
or
fisubs
aam
subb
xor
jp
popf
jg
mov
adc
aam
sarl
sub
jmp
adcl
cli
mov
mov
insl
mov
leave
sti
into
xchg
xor
into
and
je
gs
xchg
lods
lahf
mov
lret
jbe
cmpsb
jp
sub
dec
inc
pop
add
rclb
push
shl
lods
inc
inc
in
xor
sbb
sbb
jle
sbb
mov
insl
inc
adc
lea
test
cmpsl
dec
pop
rcll
mov
cli
aas
mov
addr16
popf
mov
push
xor
dec
jmp
fwait
jle
cmp
int
mov
out
mov
mov
insl
dec
shl
imul
jp
add
and
cs
adc
lock
rcll
stos
cld
dec
inc
popa
inc
pusha
xchg
or
sub
sub
xor
mov
pop
lods
cltd
out
pop
push
loopne
imul
inc
pop
mov
cmp
xchg
and
insl
sub
dec
aad
dec
lcall
fisubl
pop
call
lods
add
les
cwtl
sahf
pop
dec
imul
xchg
in
int3
cwtl
hlt
xlat
mov
cmp
lds
mov
bnd
test
inc
push
mov
dec
push
es
mov
mov
add
test
mov
jl
cmc
daa
jno
imul
push
in
movsb
sbb
dec
cmp
cmpsl
ror
aaa
outsl
negl
mov
pop
lods
cwtl
fadd
jp
mov
pushf
into
lcall
and
lods
lock
add
xchg
adc
lea
sub
scas
data16
sarb
mov
rol
loopne
mov
lods
xchg
inc
adc
fdiv
ret
xor
and
sub
daa
and
inc
add
lods
fildl
imul
cld
in
nop
jno
test
addr16
loop
lea
movsb
aaa
and
sbb
fcmovnu
jmp
inc
xlat
leave
jne
pop
pusha
sti
iret
dec
aam
fldcw
sub
inc
jae
ficoms
mov
fwait
adc
jns
ds
inc
ror
mov
les
lcall
cli
or
push
inc
or
add
mov
gs
lea
out
inc
inc
cmp
or
icebp
addr16
sub
and
xor
jbe
push
std
dec
aas
adc
push
sar
iret
loop,pn
add
inc
add
pop
dec
js
xchg
dec
push
flds
xor
cmp
xchg
push
fimull
cmp
jp
stos
rcrl
pop
cmp
daa
jne
xchg
xchg
fwait
sbb
sarl
ret
loope
movsl
push
ljmp
mov
xchg
iret
sub
outsl
mov
sbb
je
stos
test
push
cs
stos
xchg
aas
cmpsb
fs
test
jecxz
jmp
bound
cmp
add
xorl
imul
adc
test
outsl
cs
xor
mov
adc
test
lahf
out
or
out
test
push
cltd
sti
cltd
and
mov
lahf
daa
jl
and
pop
popa
test
push
sti
sbb
add
cld
sahf
or
pop
out
sbb
scas
push
dec
push
push
mov
jne
ds
xchg
inc
mov
pop
mov
jnp
mov
jbe
outsl
xchg
enter
pushf
cmp
icebp
repz
std
jp
jecxz
mov
inc
adc
cmovne
movsl
mov
cwtl
cmp
sti
sbb
push
jnp
mov
jb
pop
dec
je
xchg
std
xor
in
cs
jecxz
out
dec
xchg
enter
inc
out
and
mov
cli
loop
sub
sbb
mov
add
outsl
mulb
push
cmp
push
mov
mov
add
inc
stos
jbe
mov
addr16
push
push
outsl
imul
fdivrs
test
in
insb
ljmp
and
pop
or
les
sbb
xchg
pop
and
sahf
xor
into
aas
jbe
pop
pop
ret
loope
push
cmp
push
inc
out
cld
jle
aad
shrb
lods
dec
shrl
pop
mul
sbb
loope
mov
xchg
sahf
movsb
or
jns
movsl
std
mov
jno
push
pop
jge
pop
lcall
stos
roll
aad
pop
out
daa
xor
bound
adc
lock
dec
inc
mov
mov
mov
loop
ja
imul
pop
dec
jmp
mov
or
xchg
fwait
cmp
mulb
mov
mov
test
adc
dec
fwait
lods
ficoms
cs
out
sub
pop
add
aad
pop
sbb
fdivrs
das
jg
mov
icebp
leave
add
xchg
roll
sub
sub
lods
push
mov
jp
sbb
cmp
mov
enter
pop
pmullw
mov
cmp
push
sbb
mov
xchg
bound
lds
mov
js
mov
push
cmp
dec
pop
lea
add
popw
mov
sbb
das
pop
jge
xchg
dec
fwait
mov
icebp
add
push
inc
dec
adc
jge
sbb
cmp
insb
xchg
fmuls
cmp
jne
iret
xchg
into
jno
enter
gs
xchg
outsl
das
das
mov
adc
int3
pop
cwtl
iret
pop
mov
jp
xor
mov
retw
mov
mov
jne
xor
je
jge
sub
or
pop
int
push
bound
loope
cltd
push
call
adc
xchg
popa
jb
push
mov
inc
xchg
xor
repnz
lahf
mov
subps
push
subb
insl
adc
ret
add
jne
sbb
lcall
ljmp
sbb
push
inc
inc
insl
cmp
push
stos
xchg
sbb
cli
loop
into
add
inc
movsl
mov
adc
js
mov
adc
xor
mov
insl
les
and
cmc
and
jecxz
stos
cmp
repz
mov
fcomip
push
dec
xor
dec
mov
in
rcrb
jae
push
mov
and
pop
ret
xor
cmp
pusha
pop
das
dec
dec
mov
adc
mov
jnp
mov
cmp
inc
aam
push
jne
sbb
inc
jge
dec
cmp
inc
fnclex
rclb
loopne
pop
mov
out
or
aam
out
mov
sbb
test
fs
cwtl
jecxz
sbb
jp
imul
pop
insl
rorl
lcall
rcl
bound
sub
and
cmpsl
mov
xor
mov
ja
add
test
lret
adc
sub
xorb
inc
jne
mov
fs
pop
xor
mov
adc
lret
dec
cmp
sbb
cmp
mov
rcll
mov
lret
and
mov
pop
sub
inc
cmc
mov
adc
mov
int
push
pushf
movsl
xchg
into
aam
rclb
xchg
push
push
fcmovnu
mov
fisttpl
pop
sahf
popf
sub
iret
loop
and
xor
loope
push
mov
cs
xor
inc
adc
shl
cmp
test
pop
push
jo
pop
arpl
push
jne
xlat
mov
xor
pop
das
pop
stc
popf
push
add
movsl
out
rol
xor
push
in
in
call
mov
sub
testb
push
sbb
insb
xor
mov
hlt
imul
xchg
fisubs
inc
icebp
sbb
jl
movd
jg
sub
push
mov
fs
jl
addr16
pop
repz
lock
sub
negl
adc
or
jbe
call
xor
inc
das
rcr
and
addl
sbbb
subb
cld
clc
mov
push
insb
dec
aam
mov
inc
xorl
popa
call
out
and
xor
sbb
jns
add
mov
sbb
aam
push
jmp
popf
std
cmp
repnz
fs
dec
sti
push
push
jnp
cmp
and
pop
add
out
divl
adc
es
push
das
push
jmp
jne
inc
sub
cmp
xchg
mov
cmp
repz
jno
jae
cmp
xlat
fisttpl
jne
push
add
sub
or
icebp
sub
fmul
mov
sub
ljmp
ljmp
or
sbb
cmp
mov
adc
dec
xlat
inc
subb
and
sbb
sbb
inc
sub
es
mov
sbb
mov
rolb
mov
jno
jae
jg
or
gs
test
repz
mov
stc
push
test
call
int
arpl
popa
test
imul
std
arpl
push
dec
in
test
int
xor
jno
and
cmp
and
lock
mov
popf
jmp
jge
scas
loope
ret
icebp
push
push
dec
jg
ret
dec
nop
dec
sahf
push
push
and
ljmp
icebp
nop
jae
stc
mov
arpl
lcall
pop
sbbb
lock
jmp
movsl
es
imul
jmp
dec
sub
pusha
and
sub
mov
pop
or
dec
add
aaa
cmp
pop
les
shlb
xor
fiadds
xor
add
ret
scas
ss
movd
xor
aam
sub
adc
jle
mov
pop
int3
fs
pushf
out
push
and
xor
xchg
popf
and
xor
or
mov
stc
fldenv
repnz
std
es
cmp
in
jne
sbb
mov
aad
lret
out
dec
in
lret
cmp
jae
fwait
sub
jno
inc
icebp
inc
adc
test
inc
out
lds
mov
fistpl
sub
cmp
lret
cltd
dec
xchg
ficoms
lcall
jge
jp
fstpl
push
mov
lret
cmpsb
pop
lcall
mov
aas
sbb
push
pop
cld
xchg
int3
pop
cli
mov
shl
sbb
pcmpeqd
or
inc
cmc
stos
mov
and
mov
mov
and
fdivrs
and
jo
pop
ljmp
xchg
fstpt
fstl
sbb
dec
push
mov
call
mov
mov
pop
dec
push
cmp
aad
push
int
push
mov
dec
addr16
inc
bound
jecxz
iret
dec
cmpsl
sbb
and
jno
lret
mov
cmpsl
je
bound
jl
jb
lahf
cmpsl
adc
notl
insl
es
repnz
sbb
in
popl
jg
in
jns
out
push
mov
xor
jb
add
lods
mov
sub
mov
push
pusha
arpl
cmpsl
add
subl
fimull
inc
test
pop
inc
jb
js
or
mov
dec
jmp
clc
mov
dec
iret
sbb
divb
test
dec
inc
fwait
jecxz
sbb
cmp
adc
pop
jl
jnp
ja
pushl
xchg
inc
sbb
pop
jb
jb
ds
jbe
fidivrl
aam
mov
loope
push
mov
push
cmp
stc
fs
fsts
sbb
lds
mov
les
shlb
pop
dec
pavgw
xchg
imul
dec
jmp
mulb
pop
je
int
jecxz
mov
cltd
add
and
shl
mov
sbb
xor
xor
dec
hlt
adc
mov
and
push
adc
and
notl
sub
pop
xchg
cmp
xor
sahf
add
imul
incb
lret
mov
push
scas
stos
adc
andl
cwtl
stos
je
pusha
ljmp
hlt
xorb
xchg
cli
sbb
jg
pop
aad
rcl
sub
scas
or
add
or
sub
jne
push
cwtl
cmc
pop
dec
ret
xor
les
mov
xchg
dec
pop
inc
push
jae
jmp
int
pop
push
loope
rclb
test
dec
mov
sbb
xor
imul
lcall
jb
in
dec
xchg
mov
repz
inc
adc
popa
scas
sub
sub
mov
pop
dec
shlb
movb
push
pop
mov
mov
adc
pop
das
sub
ljmp
mov
loop
mov
push
les
test
cli
inc
loopne
leave
sub
inc
xor
pop
ret
push
mov
sbb
cmp
push
test
mov
andb
jbe
cld
or
notl
mov
jae
je
xorb
je
movsl
jl
mov
lret
pop
mov
jno
lods
out
adc
push
pushl
and
adc
mov
shlb
data16
inc
adc
mov
js
xorb
clc
sbb
addl
sbb
sbb
lea
pop
enter
mov
mov
loope
lret
sub
xchg
inc
stc
out
shrb
xor
hlt
inc
dec
or
add
mov
inc
aam
std
pop
xor
jl
testl
inc
mov
or
dec
scas
test
lods
fnsave
insb
icebp
cld
ljmp
bound
adc
loope
scas
push
pop
mov
or
add
mov
in
mov
sti
das
xor
insl
push
pop
add
cmp
inc
cmc
sub
mov
loopne
xchg
jmp
scas
fsubrl
push
ret
icebp
pop
cmp
push
jp
seto
addr16
and
cwtl
or
roll
lret
ds
push
lret
mov
xchg
sub
addb
jb
mov
cltd
out
popa
jecxz
add
push
pushf
pop
xchg
pop
xchg
push
add
jnp
je
fiaddl
outsl
out
push
fnstsw
mov
aad
xor
fidivrl
orl
push
popf
cmp
pop
addr16
mov
popa
mov
xchg
cld
cvtpi2ps
xchg
sub
cmc
jbe
xor
ljmp
mov
push
ja
jle
or
lret
inc
jge
pop
mov
cltd
and
mov
mov
movsl
movsb
mov
cmp
hlt
test
jnp
shlb
jg
push
leave
lods
aaa
es
mov
jecxz
call
xchg
push
sub
filds
xor
imul
shrb
inc
hlt
jg
insb
movsb
pop
mov
mov
decb
ret
clc
mov
clc
imulb
fbld
jmp
outsb
adc
xlat
lods
andl
lahf
mov
jmp
mov
or
cmp
push
loope
call
mov
add
xchg
mov
in
cmpb
pushf
lcall
popf
xor
call
hlt
stos
pop
shrl
cmp
sub
adc
cmpsb
push
shll
sbb
ret
int3
mov
iret
jmp
pop
xchg
dec
mov
adc
add
add
sbb
ss
bound
or
adc
inc
gs
in
scas
cmp
mov
mov
scas
lods
adc
dec
push
adc
loop
jle
cli
bound
sub
cmp
aaa
hlt
dec
cld
std
xchg
es
or
mov
mov
pop
int
cmc
jg
mov
jnp
mov
and
mov
jle
int3
shrl
sub
sub
add
fnstcw
shrb
lahf
push
push
xchg
mov
mov
add
fdivrs
rorb
dec
mov
lret
leave
push
inc
jle
xchg
sub
jp
pop
xor
dec
gs
jae
dec
pop
js
jnp
insl
pop
fabs
inc
xchg
xor
mov
pop
std
fs
pop
jbe
out
jle
int3
jnp
icebp
lahf
test
mov
ljmp
xor
xchg
mov
and
icebp
push
mov
jo
imul
or
mov
cld
push
dec
clc
dec
mov
add
lods
int
inc
xlat
in
fisubs
mov
punpckhwd
imul
pmaxsw
dec
dec
and
xchg
sbb
xchg
decl
inc
inc
push
addl
sbb
in
mov
imul
mov
push
dec
cld
pop
mov
pusha
pusha
aas
imul
add
mov
jb
push
mov
fnstsw
cltd
adc
lock
pop
inc
mull
mov
xchg
xlat
stos
lret
add
pop
dec
pushw
pop
lret
lods
scas
out
imul
pop
inc
sbb
mov
push
inc
cmc
enter
test
jns
and
into
loop
sbb
sub
inc
std
inc
in
fildl
jae
sti
inc
lods
movsb
repnz
or
jg
mov
fldcw
pop
lret
inc
jmp
xlat
pop
add
sub
jb
ljmp
adc
add
mov
dec
daa
test
mov
pop
add
stos
inc
sub
shrl
jno
imul
mov
out
jne
test
cmpsl
les
leave
es
pop
call
add
jmp
fimull
daa
iret
cmp
pushf
pop
inc
pop
mov
mov
pop
aas
inc
lds
sbb
cwtl
hlt
fdiv
out
ja
lret
jge
cli
testl
test
sar
push
cmp
mov
ja
mov
adc
int
pop
js
mov
das
sub
jecxz
sbb
outsb
aas
call
imul
mov
xchg
scas
mov
movsl
aad
mov
push
jmp
in
cmc
cmp
push
push
sarb
test
xchg
aaa
and
sbb
xor
jp
repnz
out
sub
dec
mov
and
dec
repnz
xor
call
xchg
mov
das
movsl
mov
aaa
jns
jg
outsl
and
and
xchg
lret
add
call
mov
mov
insb
fnstcw
cmp
mov
lea
popa
das
pushf
subl
movsb
aam
xchg
pop
jae
sub
fcomip
inc
adc
into
and
movb
fcmovnbe
test
negb
mov
xor
loope
mov
sbb
das
imul
jmp
mov
outsl
and
push
dec
scas
add
repz
test
cwtl
or
fadd
dec
dec
push
bound
or
popa
push
aad
xchg
cld
out
cwtl
seta
sahf
sub
jecxz
test
dec
imul
mov
dec
insb
in
out
xor
mov
imul
jmp
sbb
in
xchg
insl
loop
pop
mov
sub
in
mov
jb
imul
test
sbb
inc
xchg
movsl
fs
pop
lahf
dec
int
into
push
cmpsb
testl
in
cmpsl
sti
mull
and
and
rclb
outsl
mov
popa
lea
and
sbb
ret
stos
mov
dec
shrl
aad
xchg
jg
mov
stc
pop
sub
pop
jnp
inc
orl
ret
jae
loop
test
or
arpl
outsl
std
insb
add
out
andb
loopne
nop
sbb
iret
hlt
imul
gs
mov
flds
dec
mov
popa
cli
faddl
test
bound
jo
in
jmp
mov
cmp
mov
mov
shl
in
push
inc
loope
in
jecxz
xor
les
andb
jge
scas
arpl
fcoms
or
sarb
in
push
pop
dec
adcl
scas
xor
lock
sbb
iret
fsubs
movsb
mov
fwait
lea
and
pop
mov
adc
fbstp
es
sub
daa
lods
out
xor
push
fs
sbb
mov
dec
ficompl
mov
ret
jno
sbb
mov
es
lea
mov
mov
scas
add
sarb
loopne
mov
pop
pop
xor
cld
rcl
test
push
mov
push
stos
dec
jno
mov
sub
mov
inc
js
xor
cld
popa
mov
pop
inc
mov
jl
insl
js
dec
ret
sub
fdivp
dec
cmc
jmp
inc
pop
loopne
sarl
enter
incb
jno
push
out
mov
sbb
mov
push
movsb
shrl
lock
or
mov
push
fsubrp
fs
testb
mov
stc
movsb
push
sbb
add
cmc
mov
subb
inc
add
dec
adc
jecxz
gs
xchg
jns
mov
loop
test
jae
sbb
outsl
xchg
push
dec
push
push
fiaddl
inc
or
push
es
jo
cwtl
dec
sbb
mov
mov
dec
cmp
xor
rorl
or
push
aam
orl
inc
jbe
out
pop
jnp
or
adc
dec
mov
inc
not
jle
movsl
jns
inc
mov
loopne
test
cmpsl
xor
jmp
jbe
jmp
popf
jns
mov
test
jmp
add
pusha
push
sub
test
add
sahf
push
mov
jnp
push
inc
inc
jbe
mov
lcall
mov
or
or
pop
in
adc
stc
pop
in
adc
mov
lods
jno
cmpsl
adc
add
cmp
add
adc
inc
sub
sub
pop
mov
je
inc
or
pop
sub
mov
out
dec
je
mov
xchg
cli
adc
and
adc
fistps
add
sbb
xchg
clc
mov
ffreep
je
push
loope
cmp
sub
dec
lret
fbld
jns
repnz
jg
cmp
mov
into
ficoml
dec
shll
push
or
in
mov
xlat
in
ja
cwtl
popf
fidivs
pop
mov
push
adcb
add
adc
aad
sub
lcall
xchg
lods
nop
cmp
sti
sbb
sub
pop
push
testb
sbbl
mov
push
pop
jo
dec
jno
dec
mov
in
into
cmovne
int
sub
xor
mov
dec
inc
iret
sbb
in
sti
daa
jbe
leave
aas
sahf
test
fucomp
cmpsl
cmp
xor
ja
fidivrl
xchg
and
and
dec
sub
fcomps
fidivs
test
dec
icebp
cld
mov
jo
or
or
iret
cmp
add
dec
cli
sub
stos
mov
lret
fs
test
and
add
mov
mov
fwait
and
lahf
push
insl
and
sbb
jp
dec
js
jmp
femms
daa
lcall
lcall
cmp
mov
jns
xchg
mov
int
xchg
mov
or
int3
push
lea
bnd
cmpsb
leave
repz
dec
xchg
dec
out
hlt
pop
daa
lods
add
sub
xor
cmc
stos
xor
push
mov
movsb
movsb
cld
adc
jo
aam
repz
cmp
aas
mov
lods
adc
xlat
daa
in
mov
movsb
mov
incl
movsl
pop
push
adc
xor
adc
or
mov
in
jge
sbb
shrl
lcall
fldl
enter
jge
jmp
ljmp
push
sub
lret
jae
adc
imull
js
fistpll
lret
outsl
dec
jg
cmp
fistpl
jmp
sbb
inc
paddsb
jl
xchg
push
cmp
lcall
sti
pop
pop
or
sbb
movsb
inc
lds
adc
push
mov
mov
test
sarl
popa
insl
xorl
push
cmova
insb
pop
xor
xor
fistps
shrb
cmp
sub
repnz
lods
sub
outsl
mov
cld
rcll
daa
push
mulb
dec
movsl
pandn
repnz
leave
mov
jp
mov
jb
repnz
push
lret
mov
loope
push
dec
aad
in
lods
dec
xor
or
fsubrl
push
sub
lea
xor
jae
and
cmp
jge
mov
stc
push
push
ficoml
fdivrl
mov
bound
cmp
mov
dec
fcoms
xchg
dec
sbb
mov
cmc
mov
dec
mov
loope
mov
nop
insl
ret
mov
inc
nop
dec
mov
testl
pushf
ret
xchg
aas
pop
es
sbb
or
xor
and
xlat
jo
mov
inc
ret
cmp
ret
inc
into
jae
mov
push
pop
jno
adcb
jne
inc
push
add
fst
push
mov
je
cmp
xor
or
cmp
repz
push
lea
xor
adc
push
mov
je
int3
jge
shll
and
mov
sub
inc
mov
fiadds
aas
inc
movsb
or
out
mov
sub
xchg
sbb
mov
fnstcw
mov
lahf
jecxz
adc
push
pop
mulb
shrl
xchg
jmp
repnz
sbb
inc
inc
add
jmp
insl
xchg
popa
fmuls
mov
and
divb
pop
pushl
movsl
xchg
mov
sbb
lret
and
adc
jbe
push
mov
shrl
adc
nop
stc
jbe
ljmp
into
or
mov
fidivl
arpl
repz
jne
rcr
sub
fs
fs
cmp
or
test
lods
call
cmpsl
mov
mov
mov
iret
cmp
mov
adc
std
cmp
ja
xchg
push
mov
xor
sub
mov
mov
cmp
shlb
fiadds
pop
outsb
add
rclb
xchg
movl
or
sbb
sub
or
dec
sub
xor
mov
cmp
sbb
stos
aaa
stc
dec
stos
cmp
xlat
cmp
lds
cld
test
hlt
mov
cmp
sti
mov
mov
jae
cmc
jne
sbb
ja
nop
push
xchg
cmpsb
popa
mov
mov
test
movsl
mov
mov
popa
subb
stos
xchg
pusha
sbb
add
jge
loopne
mov
inc
add
cwtl
jne
add
cld
ljmp
or
mov
fnstenv
data16
and
pop
mov
lods
cs
push
mov
imul
loop
cld
ffree
or
dec
xlat
sub
ljmp
jge
arpl
in
rcr
pop
xchg
and
fldl
inc
cwtl
sbbb
outsb
adcb
push
jecxz
notb
jbe
lods
mov
lock
mov
clc
outsl
sarl
enter
gs
in
xchg
mov
gs
gs
dec
lods
test
and
mov
jmp
loopne
dec
cmp
push
addl
aas
sbb
in
inc
cmp
clc
sarl
mov
push
cmp
jecxz,pt
inc
and
stos
pop
inc
pop
sub
cld
pop
mov
dec
into
fidivrl
mov
call
sbb
mov
insl
ljmp
mov
xor
inc
or
jg
push
push
jl
inc
add
sbb
jnp
out
lds
call
push
cwtl
ja
filds
push
rorl
adc
cli
aam
clc
stos
xchg
jbe
data16
pop
imul
push
cmp
shrl
outsl
add
pop
lock
scas
mov
push
xchg
movsb
out
bound
xbegin
and
or
xchg
fs
and
push
mov
iret
push
sbb
sbb
stos
lods
int
icebp
aaa
inc
fstps
dec
adcl
ret
inc
negb
test
jmp
or
rcrl
mov
push
loope
add
in
call
std
dec
mov
jno
or
stc
mov
inc
in
jg
loope
sahf
and
ljmp
lahf
mov
and
pusha
in
jmp
mov
sti
adc
push
aam
add
in
xor
xchg
jmp
xor
sbb
ret
lds
xchg
testb
jecxz
ud2
jle
xor
lahf
cmpsb
pop
imul
xchg
cmpb
xchg
cmp
leave
mov
insb
ret
cld
les
and
das
mov
sbb
push
iret
or
out
leave
out
sti
mov
push
push
mov
sub
inc
jmp
mov
shrl
pushf
fimull
mov
call
arpl
jne
movsl
int3
sbb
pop
cmp
cwtl
jp
out
addr16
sti
adc
add
clc
jns
or
insb
mov
jbe
imul
push
test
test
testl
iret
sub
popf
into
fldcw
popa
xor
mull
jne
fistps
leave
pop
test
and
mov
or
repz
movaps
xor
and
fldl
stos
jg
push
pop
pop
adc
call
loop
outsb
xchg
movsl
movsl
adc
push
mov
out
dec
shl
lahf
cmp
les
andl
push
mov
testb
sub
iret
ret
or
repnz
xchg
mov
lods
xlat
aad
fsts
jo
push
mov
pop
mov
scas
rcrl
xor
gs
xor
std
inc
mov
insl
mov
add
sub
insb
jns
cmpsb
icebp
int3
add
cmp
mov
xchg
inc
pslld
mov
mov
add
push
test
adc
div
sub
lods
out
popa
stos
call
cmp
push
add
xchg
leave
cmpsb
sub
and
xor
adc
icebp
out
mov
dec
arpl
add
std
inc
popa
pop
addb
cmp
add
jnp
mov
mov
jbe
cmp
sub
fbstp
mov
aas
mov
jg
sub
aas
test
insl
call
and
call
aad
add
or
pushf
dec
push
loope
les
icebp
mov
jne
sbb
mov
adc
xor
mov
cmp
pop
test
stos
ror
clc
pop
xchg
sbb
ja
rcrb
sbb
mov
js
inc
leave
cmc
push
scas
sbb
fmuls
sbb
pop
push
mov
mov
js
cmp
cs
sbb
sub
stc
or
and
ljmp
add
and
ljmp
mov
sub
loope
mov
insb
push
cmp
add
mov
push
mov
jno
jmp
cwtl
leave
loopne
inc
dec
push
push
out
lods
daa
sub
sbb
mov
bound
ja
out
rcrl
stos
cmc
insb
dec
aas
xchg
dec
lret
mov
ret
lret
popl
mov
pop
mov
jle
data16
sbb
jge
and
lret
jo
pop
push
daa
cmp
orb
jne
stos
dec
jne
cmp
ffree
movsb
out
sbb
xor
cmc
xor
push
in
jo
fwait
dec
in
lods
scas
insb
outsl
fs
inc
insl
and
jg
pusha
loope
int
push
ljmp
xchg
cld
dec
imul
dec
call
push
insb
dec
sahf
lahf
sbb
sub
push
repz
stos
test
ror
dec
add
pop
pop
in
or
jae
jnp
imul
inc
sti
mov
dec
lcall
and
repz
ljmp
rorb
cld
outsb
cmp
pop
mov
mov
and
pop
lahf
sti
jl
mov
add
mov
stc
dec
mov
sbb
sub
and
or
fucomp
jb
sbb
mov
jno
sub
adc
lock
mov
sti
andl
lcall
xchg
and
fildl
add
adc
add
push
and
push
sahf
es
push
arpl
xor
mov
test
cmp
fistpl
pop
jno
fs
outsl
mov
aas
rol
lcall
xor
xchg
std
popa
dec
xor
imul
les
adc
loop
sub
mov
inc
xor
jno
out
stos
or
inc
rolb
mov
jno
cmp
lods
popa
cmp
mov
mov
add
cmp
out
push
and
mov
js
or
sahf
cmp
nop
shl
scas
add
xchg
je
insb
fmull
pop
rclb
lock
rcr
or
movsl
in
ss
movd
jbe
cs
lea
fistl
push
mov
in
inc
cmp
mov
aaa
pop
or
push
xor
sarb
dec
pop
add
dec
test
jo
test
adc
mov
cmpl
jp
jecxz
inc
invd
add
jno,pt
pop
sti
lods
aam
and
std
dec
xchg
lock
mov
and
and
xor
pop
jp
add
cli
imul
test
xor
pop
adc
ror
int3
mov
push
aaa
les
xor
mov
add
push
push
nop
lahf
fs
dec
sub
cs
xchg
fsubrs
mov
adc
imul
scas
imul
inc
pop
push
cmpsb
pop
decl
scas
mov
and
mov
or
pop
jp
inc
dec
clc
mov
or
sbb
push
and
sarb
out
xor
jns
inc
and
adc
jno
out
por
cmpsb
cmp
mov
dec
rcl
out
dec
ss
sbb
inc
pop
or
loope
rorb
adc
push
ss
out
fisubl
jo
outsb
aam
das
lds
dec
addb
cwtl
sub
and
dec
ja
mov
mov
pop
push
lock
adc
dec
in
cmp
fcoml
mov
push
cwtd
jbe
cmp
pop
xor
mov
mov
out
mov
push
mov
xor
call
fsubr
ficomps
push
sbb
fmull
and
mov
cmp
mov
or
fstpt
lods
pop
fisttpll
insl
xor
push
mov
sbb
push
xor
adc
int
add
lods
xor
ja
dec
std
cltd
jle
push
inc
fwait
ds
push
jl
sahf
cmp
mov
mov
adcb
jne
mov
pop
xchg
or
mov
jb
jmp
cmc
jne
ljmp
xor
dec
sbb
cmp
cmp
stos
in
loop
test
decl
shlb
sbb
or
dec
pop
subl
sbb
mov
xchg
add
adcl
test
inc
dec
imul
and
ret
or
in
pushf
xchg
imul
sub
xchg
sub
pop
enter
gs
mov
testw
loopne
clc
iret
jecxz
je
pop
aas
fistpll
fwait
xor
mov
dec
scas
push
leave
mov
inc
xor
jp
xchg
imul
lret
and
in
xor
dec
aad
add
outsb
mov
add
insb
into
fildl
sub
cmp
add
mov
faddl
adc
xchg
sti
imul
push
test
mov
out
cmpsb
cmp
mov
jnp
stos
inc
xchg
cmp
jecxz
adc
dec
leave
or
imul
movsb
sbb
adc
jo
enter
jge
jae
out
gs
ja
nop
cmp
pop
and
loopne
hlt
sbb
fldenv
xor
adc
lock
xor
adc
mov
xchg
int
cmp
push
push
mov
in
mov
mov
and
jbe
shl
subl
mov
cli
xchg
adc
aad
cmp
cmp
pop
jp
out
std
push
jno
cvtps2pd
jmp
mov
or
push
adc
and
push
shr
aam
mov
mov
in
cmp
jge
rcr
push
aas
pop
stos
shll
out
dec
bound
inc
fildll
std
lcall
sub
and
cwtl
lcall
out
sbb
sbb
cmp
int3
movsb
xchg
xor
lods
insl
cmpsb
and
sub
pop
test
push
stc
cmp
inc
inc
and
call
cs
decb
icebp
jno
ret
dec
stos
cmp
cld
mov
imul
dec
je
mov
mov
mov
mov
or
xchg
cld
clc
bound
add
lret
fcoml
mov
mov
scas
inc
lret
cmp
loopne
cmp
pop
lret
inc
dec
pop
shll
pushf
and
or
shlb
pop
sbb
shll
icebp
mov
sub
call
fisttps
cmc
cltd
shll
pop
lea
fists
pop
adc
xor
xor
fisttps
in
push
bound
ljmp
sbb
xlat
scas
lds
repz
sub
sbb
out
mov
or
jb
mov
aas
in
enter
fadd
push
fwait
mov
imul
cmp
icebp
cs
mov
lods
aas
les
cmp
xor
and
sub
ljmp
cmpsb
sti
daa
sbb
or
sti
dec
and
fnstcw
ret
fs
loope
dec
sub
insl
add
stos
push
and
mov
mov
xor
push
negb
out
sub
pop
sbbb
and
add
lock
dec
adc
mov
into
xchg
push
fstps
jmp
sbb
add
push
add
scas
inc
cmp
scas
inc
jne
mov
cmp
leave
test
cmpsl
ds
leave
pop
cltd
pop
and
or
int
add
cli
pcmpgtb
add
lea
sbb
xchg
repnz
sub
lret
adc
scas
shll
jbe
pop
lods
jecxz
jmp
call
movsb
shrl
call
xchg
or
and
and
pop
call
xor
push
push
push
fnstsw
dec
cwtl
mov
lds
aaa
fimull
daa
mov
in
inc
sbb
mov
sbb
push
sbb
mov
or
mov
arpl
mov
push
outsb
add
call
cmp
jg
fsubl
fwait
gs
jne
jno
adc
idiv
xorb
lds
cmpsb
outsb
adc
jmp
out
xor
push
adcb
or
xor
out
fiaddl
jno
fisubs
in
push
ret
mov
jne
pop
out
mov
inc
mov
inc
jmp
arpl
push
pop
pop
jbe
cld
pop
pop
lods
cmp
test
mov
add
adc
movl
add
and
or
ljmp
sub
popa
jp
mov
aaa
dec
ficoms
add
lcall
cmp
into
ror
xor
aam
inc
jge
fildll
push
int3
iret
int
and
arpl
jle
cld
and
sbb
jbe
mov
inc
sbbl
out
pop
pop
lcall
bound
cmpl
or
cmp
das
fwait
in
outsb
lods
mov
scas
iret
sbb
call
jo
dec
fnstcw
lds
pop
xchg
mov
ret
js
enter
test
xor
divb
sarl
ds
adc
dec
and
fcom
cli
arpl
out
adc
sbb
faddl
mov
pop
fisubrs
pop
mov
out
cltd
aam
bound
adc
and
lcall
fdivl
nop
les
pop
pop
push
mov
lahf
hlt
das
mov
jmp
test
divl
fldcw
jbe
movsb
pop
cmpsl
es
imul
test
stos
repz
inc
adc
push
add
fisubrl
or
pop
pop
xchg
aam
jecxz
xchg
leave
aas
pop
jae
scas
shl
mov
dec
push
mov
mov
cmp
push
push
and
cmpl
clc
movsb
ret
pop
pop
mov
pop
mov
or
xchg
lds
int3
sbb
in
mov
ds
pop
loopne
xchg
xchg
hlt
add
push
sahf
sbb
lock
test
pop
mov
scas
jb
add
popf
inc
mov
rorb
outsb
dec
stos
mov
push
or
mov
loope
push
jl
jnp
push
dec
dec
add
mulb
mov
add
pop
dec
adc
cld
lds
daa
popf
dec
push
std
add
or
icebp
les
inc
adc
xor
insb
lret
mov
jecxz
fisubs
xchg
lret
and
cmp
inc
mov
mov
loop
fistpll
fwait
loopne
inc
xor
lahf
repz
sub
cltd
imul
sub
xlat
filds
mov
mov
cmp
int3
pushf
loop
xchg
das
mov
mov
pop
dec
ret
fwait
lcall
mov
mov
xor
scas
mov
sbb
daa
add
aad
xor
stos
pop
pop
lret
push
lds
clc
out
mov
fcmovnb
daa
mov
pop
mov
pop
dec
push
jnp
movsl
mov
into
test
pop
lea
xor
repz
insl
xchg
or
pop
xchg
jbe
inc
je
ja
mov
mov
xchg
xchg
stc
inc
or
daa
jb
dec
xor
xchg
push
fisubrs
loope
dec
pop
cmpsb
fs
xchg
dec
icebp
inc
adc
jbe
and
sbb
xchg
movsb
pop
mov
push
and
orl
push
inc
push
jge
or
dec
es
sub
out
mov
sbb
pop
inc
in
popf
jb
outsb
outsl
mov
popf
xchg
and
call
lcall
inc
jo
push
lock
sahf
mov
les
subl
mov
sub
push
js
xchg
xchg
mov
sub
les
aam
mov
adc
test
sub
and
xor
pop
das
jg
add
jge,pn
pop
mov
les
stos
sbb
sub
dec
int
sub
loop
mov
jno
pop
iret
and
mov
cmpsb
jg
addb
jne
sub
push
mov
and
sub
or
loopne
push
inc
icebp
lock
cwtl
daa
push
hlt
insl
jl
popf
and
push
jp
shll
loope
repnz
add
jmp
add
scas
jnp
add
pop
loop
test
jb
inc
mov
and
rcll
mov
icebp
sbb
aad
popa
mov
in
fimuls
fistpll
add
add
shrl
push
mov
push
test
add
and
xchg
xchg
cwtl
ja
adc
sbb
gs
fmull
stc
jne
sbb
sub
jl
push
imul
test
loope
clc
mov
cmp
xchg
pop
mov
dec
jbe
lret
test
cmpb
je
cwtl
stos
xchg
jb
lods
dec
pop
lret
dec
xchg
mov
addb
movsl
and
xchg
sbb
je
clc
insl
fwait
sub
and
cltd
lods
clc
popa
shlb
frstor
push
testl
jecxz
andl
imul
sub
ds
sbb
push
push
mov
fstl
pop
xchg
lock
jp
das
les
lret
cli
mov
or
out
in
cmp
cmp
loop
out
xor
loope
cwtl
int3
push
lods
add
sub
mov
adcl
insb
push
mov
leave
inc
decb
push
lret
mov
jp
dec
fidivs
sbb
iret
adc
or
xchg
movsb
inc
pop
sbb
arpl
insb
arpl
push
xchg
pop
and
inc
jb
jo
sbb
jge
xor
jl
inc
pop
lret
mov
push
inc
fs
xchg
mov
sub
cmpsl
rcrl
add
lret
xor
mov
std
bound
pop
aad
mov
test
nop
pop
pusha
ret
mov
jnp
xor
lds
cmp
popa
stos
into
out
mov
lret
cmpsl
out
xchg
loopne
jb
out
mov
add
sahf
nop
sub
scas
aas
inc
ret
repz
fmull
mov
pop
lock
out
dec
or
insl
insb
je
in
sahf
adc
sub
fnstsw
add
movsl
sbbl
stos
divb
imul
faddl
cli
or
mov
xor
push
sti
das
dec
jo
fdivs
mov
int3
mov
addl
add
push
popw
push
cltd
jecxz
sub
movsl
mov
pop
icebp
cmpsb
jne
call
sbb
negl
and
mov
test
gs
pushl
and
nop
cmp
arpl
setg
xchg
lret
adc
jle
lret
and
push
fmull
ja
xlat
mov
lds
xlat
xor
cmc
je
and
jae
fisttps
ja
mov
jle
xchg
jb
mov
and
xchg
adc
jg
xchg
sbb
int3
mov
push
dec
xor
fsub
fsubr
out
jle
xor
mov
das
in
mov
or
or
pop
sub
popa
xchg
and
xor
push
loope
iret
inc
push
push
jle
aas
mov
add
int3
cltd
jmp
jecxz
sbb
mov
popf
inc
jp
flds
popf
mov
repz
push
in
fiaddl
xchg
int
jle
push
call
out
mov
scas
les
or
lret
cmp
jne
movsb
adc
dec
cmpsl
in
xchg
ja
push
cmp
or
jg
add
sbb
aaa
xchg
or
jns
lock
push
cld
cmp
arpl
xchg
movsl
pop
push
insb
and
leave
adc
cmp
xchg
sub
dec
ja
lock
pop
and
mov
test
xchg
lret
pusha
sbb
pop
push
inc
mov
ja
hlt
out
out
ficoms
pop
push
outsl
nop
das
jbe
js
jo
adc
sar
mov
mov
pop
sub
cmp
jl
or
ja
pop
aaa
fidivrs
adc
push
test
mov
repnz
repz
cmp
lods
cmovle
jecxz
je
xor
jno
fistps
repnz
in
out
mov
sub
es
mov
inc
xchg
pop
mov
test
xchg
pop
and
lret
cmpb
hlt
stc
mov
out
add
xor
adc
and
outsb
repz
push
sub
pop
mov
arpl
popa
out
push
or
cmp
gs
repnz
and
pop
cmp
pusha
xorl
cwtl
fwait
out
sub
xor
out
adc
add
or
ds
jl
lret
and
movsb
pop
repnz
call
lcall
xor
cwtl
xor
push
fsubrs
loopne
mov
loopne
scas
enter
movsb
test
data16
pop
cmp
or
or
shr
push
dec
inc
repnz
sub
push
cltd
inc
jmp
push
cld
mov
mov
mov
ljmp
rcll
lods
inc
or
pop
mov
imul
mov
js
xor
inc
imul
aaa
scas
arpl
lret
xchg
jge
mov
jl
into
out
add
and
push
iret
xor
jp
sub
dec
mov
sub
pop
mov
sbbb
arpl
bnd
or
add
gs
or
fcos
scas
mov
andl
jg
xor
xchg
pop
icebp
or
pop
lds
push
aad
pop
mull
mov
xchg
push
incb
into
and
out
mov
push
loopne
rep
mov
neg
movsb
jmp
scas
cmpl
dec
adc
or
lods
push
adc
mov
inc
js
aaa
push
in
mov
fadd
cmpsb
fwait
je
stos
cmpsl
mov
xchg
rcr
or
imul
cmp
lock
out
xor
and
das
clc
gs
sti
push
mov
inc
add
xor
add
sbb
nop
sub
xchg
sbb
bound
sbb
lcallw
pusha
mov
xchg
pop
dec
je
push
pop
jp
mov
xor
subb
mov
mov
test
pop
aad
lret
shlb
mov
daa
hlt
adc
ljmp
xlat
fs
xchg
fs
inc
hlt
xor
or
sbb
push
xor
scas
loopne
mov
jl
mov
call
add
push
xor
sbb
into
inc
fcompl
xchg
mov
sub
adc
add
stc
or
loope
mov
push
jns
inc
or
imul
dec
jo
pop
adcb
jecxz
cltd
mov
sti
cld
popa
ss
adc
inc
sub
cmp
sbb
lock
inc
adcl
mov
test
cmp
cld
rolb
addr16
and
push
dec
cwtl
outsb
cli
call
or
enter
dec
ret
loope
jbe
cld
in
cltd
or
lods
push
repnz
pop
loope
lahf
dec
mov
inc
ficoml
push
pop
add
outsb
xor
lret
icebp
jnp
test
inc
daa
pop
or
fsubr
out
repnz
xlat
push
insl
pusha
or
sub
insb
add
cld
popf
in
mov
pop
add
push
or
ja
and
mov
cmp
adc
pop
pop
std
sbb
jo
and
movsb
jg
adc
mov
outsl
out
dec
add
lret
icebp
add
cli
rcl
adc
fisubrs
inc
jbe
xchg
jae
or
adc
roll
mov
mov
rcrb
sbb
sub
mov
jl
jp
jno
imull
push
cmp
or
lcall
rol
xor
inc
into
movsl
js
mov
mov
or
or
testl
lcall
daa
mov
rcrb
xchg
xlat
push
roll
dec
adc
sbb
ja
jp
mov
popa
xlat
enter
sub
push
push
loope
dec
int
test
pop
inc
clc
jnp
add
or
add
scas
cli
les
inc
in
sub
movsl
sbbl
and
mov
icebp
cmp
mov
stos
inc
test
popf
sti
jb
or
repz
or
jge
insb
enter
idivb
mov
movsb
add
cmpsb
lods
push
mov
mov
out
faddl
xlat
daa
cld
dec
pop
shrl
add
addr16
jmp
dec
jns
repz
and
ss
xor
mov
out
bound
pop
and
mov
shrl
enter
mov
mov
inc
into
insl
js
push
push
xchg
jle
jno
add
adc
sahf
mov
pushf
ss
and
jae
nop
pop
mov
mov
inc
aaa
push
cmp
jb
testb
loopne
aam
sub
mov
jle
pop
stos
loop
jnp
dec
daa
mov
add
insb
in
xchg
mov
mov
outsb
out
fistl
dec
jmp
fs
or
push
mov
sbb
xchg
jnp
leave
push
ret
or
cli
mov
outsl
or
adc
ljmp
dec
subl
imul
pop
ss
cld
pushf
inc
push
fcomps
in
push
mov
mov
bound
xlat
and
mov
shll
cmp
xchg
aad
sarb
stos
icebp
cmp
and
in
call
test
xchg
xlat
outsl
ret
ret
imul
inc
push
cs
cmc
cli
or
insl
mov
dec
and
jne
gs
or
in
imul
gs
sub
ret
sbb
add
mov
adc
add
jnp
xchg
fwait
sub
cmp
cltd
ja
cmpsl
outsb
sub
pop
jge
xor
dec
pusha
cs
popf
mov
lcall
nop
mov
not
or
cmpsb
pop
mov
xchg
shlb
insl
fwait
imulb
xchg
int3
in
cmp
lods
call
iret
jmp
test
ljmp
rorb
std
mov
mov
pop
mov
mov
mov
add
ss
stos
frstor
cmpl
sbb
sub
leave
and
test
out
pop
lcall
cmc
push
fsub
aaa
sbbl
cwtl
xchg
push
insb
mov
jg
add
fisubl
pop
lds
cmpsl
shrl
xor
lahf
bts
sub
mov
and
and
xor
data16
sahf
mov
mov
jmp
cwtl
scas
and
out
jne
inc
push
cmp
imull
jecxz
clc
pop
fadd
jbe
movsb
clc
dec
sbb
shlb
pop
sti
cs
xor
xor
mov
aam
add
sub
push
lods
lahf
lret
pop
cmpsb
hlt
mov
or
jl
rolb
insb
xor
push
fcoms
inc
daa
adc
pop
out
ds
out
jne
add
and
das
dec
cmpsb
pop
cmc
jecxz
cltd
ret
xchg
std
xor
lahf
call
pop
fists
or
pop
cmc
xchg
xor
enter
out
jge
dec
fs
jle
mov
xchg
stos
aad
ret
jb
dec
out
add
jge
dec
out
jnp
jno
mov
jecxz
out
movsb
push
jno
cs
jbe
outsl
pop
imul
sti
andl
pop
jae
sbb
cmp
cli
adc
lock
pop
sbb
out
mov
imull
fists
daa
stos
in
inc
in
scas
jg
je
and
testb
mov
outsb
outsl
rcrb
out
xchg
xchg
xchg
and
out
push
lods
mov
push
adc
sbb
push
sbb
call
in
jge
aaa
out
cs
cltd
ret
test
xchg
jns
jns
jmp
push
std
mov
mov
in
popf
push
das
inc
ja
imul
and
and
add
cmp
mov
iret
test
mov
insb
sbb
xchg
ss
cmp
aam
daa
insb
hlt
jge
adc
ds
insl
out
subl
mov
cs
and
xor
addr16
and
lods
insb
mov
pop
pop
mov
sub
mov
xor
movsb
xchg
notl
lods
popf
stos
cwtl
shlb
in
call
lret
ret
or
cmp
loope
inc
sti
sub
leave
cwtl
incb
mov
mov
stc
sahf
and
lret
outsl
jg
insl
or
mov
inc
mov
inc
movl
mov
push
fs
sbb
jecxz
sbb
jg
insl
cmp
sbb
mov
and
inc
fwait
out
std
pop
aad
pop
push
push
cmp
xchg
popa
xchg
and
stos
test
jp
sub
fildll
lret
out
iret
lret
or
add
roll
xchg
rol
loop
repz
out
test
sub
sbb
inc
sbb
cmp
push
rcrb
addr16
adc
pop
rorb
es
popa
cs
shll
sub
test
cmc
dec
mov
out
cmp
jecxz
idiv
lds
sbbb
js
jb
repz
enterw
je
ss
sti
or
fbstp
les
cmp
sub
inc
xlat
mov
xor
dec
add
rolb
pop
mov
add
mov
dec
xchg
cmpsl
cld
add
dec
pushf
mov
sbb
fcomi
add
call
es
int3
movsb
jle
test
loop
xchg
xchg
int3
jle
and
lea
mov
mov
adc
xor
mov
pop
out
repnz
xor
popa
clc
roll
jecxz
clc
mov
stos
inc
loopne
jecxz
fisttps
mov
pop
inc
mov
pop
add
xchg
adc
loopne
fstpt
pushf
add
stos
inc
adc
inc
and
dec
xor
imul
dec
add
or
mov
scas
xchg
cld
mov
fists
loopne
popf
adc
fwait
mov
les
mov
mov
fwait
rcll
data16
lret
data16
add
insl
test
push
sbb
test
testb
rolb
mov
and
inc
and
fldt
aaa
push
dec
roll
mov
push
testl
push
cmp
xor
mov
imul
add
fs
rolb
ror
and
jns
mov
pusha
je
int3
insl
lea
in
arpl
test
in
repnz
sub
xchg
out
fs
clc
xchg
jne
pop
mov
jbe
inc
inc
in
cmp
sbb
test
fists
mov
sbb
pusha
nop
xor
cltd
mov
in
popa
call
push
push
cmp
xor
into
push
add
jo
sbb
sbbl
xor
out
mov
sub
mov
dec
test
pop
inc
xor
rcll
outsl
mov
mull
push
sbb
test
inc
in
imul
or
xchg
cmp
push
pusha
push
scas
or
and
test
and
minps
inc
sbb
pushf
jl
mov
mov
inc
or
in
push
or
adc
and
filds
iret
loopne
rolb
pop
call
push
repz
subb
popf
cmpsb
cs
add
fldenv
inc
or
std
pusha
arpl
js
notb
mov
mov
pop
and
inc
xchg
push
sbb
xor
imul
inc
inc
enter
jmp
lea
inc
or
test
sbb
es
mov
test
aad
lahf
mov
jg
jbe
aas
pop
ds
cld
sub
sbb
das
ss
push
pop
adc
add
pop
and
test
mov
movsb
xor
cmp
xorb
inc
sbb
test
cs
pop
push
out
test
xor
pushf
enter
xchg
dec
mov
sub
push
cltd
mov
ret
roll
push
xor
push
into
out
cmpsl
adc
iret
add
dec
fisttpl
scas
or
lock
mov
ret
shll
mov
jmp
xchg
pop
lcall
jo
pushf
fld
mov
sbb
or
cmp
xchg
cli
jl
gs
jmp
adc
and
or
mov
inc
mov
test
dec
bound
sub
lret
nop
mov
xor
mov
and
push
in
inc
xor
mov
xor
cmp
inc
fstp
xchg
daa
fstps
push
das
sub
aad
sbb
imul
sbb
leave
sub
cld
add
jp
mov
xchg
sub
in
jb
lahf
dec
xchg
es
out
mov
dec
pop
divb
push
xchg
adc
cld
cmpsb
pushf
mov
inc
test
dec
cmp
imul
into
cs
pop
mov
sbb
cmpsb
add
lods
xor
push
lods
pop
das
pop
imulb
movsl
lea
mov
and
sarl
clc
sti
jbe
push
mov
add
mov
xor
cwtl
je
cltd
sub
mov
out
enter
jno
jne
jae
xchg
into
arpl
adc
popa
out
shrl
loop
inc
fcoml
pop
stc
ss
iret
in
jecxz
mov
inc
xor
rcrl
xor
cld
jge
push
sub
popl
sub
popf
xchg
cltd
mov
inc
stc
sbb
sub
mov
pop
aam
push
mov
insb
xchg
xor
arpl
lahf
xchg
daa
and
sub
cwtl
test
out
xchg
lea
and
por
sbb
sub
insl
or
test
jbe
mov
lock
loope
cltd
push
dec
je
mov
xchg
add
fldenv
movsl
rclb
dec
inc
ds
gs
push
mov
into
xor
inc
cmp
mov
pop
xor
mov
lock
sub
sbb
jp
sbb
fwait
cmp
int3
xchg
jne
sbb
in
cltd
adc
adc
rorl
fnstenv
or
sbb
push
repz
jno
addr16
stc
xchg
jmp
cmp
iret
jp
mov
testb
outsl
mov
movsb
jle
xor
pusha
jne,pt
mov
das
fdiv
and
rol
imul
mov
push
lcall
movsb
loopne
and
popa
gs
pop
outsb
mov
lock
idivb
aam
sub
cmp
mov
pop
fimuls
jg
cmp
ret
cli
stc
push
movsl
inc
movsl
pop
xchg
lahf
add
sahf
repz
xchg
in
clc
push
mov
lods
jp
mov
nop
test
and
inc
xor
cmc
mov
in
out
std
movsb
dec
pop
pop
dec
and
in
mov
inc
mov
sub
pushf
mov
int
sbb
mov
icebp
enter
fmull
call
mov
or
mov
ret
aaa
cmpsl
xchg
pushf
jp
mov
cli
fmuls
mov
xchg
mov
or
ret
sub
add
syscall
movsl
jo
push
into
inc
ljmp
xor
jle
or
pop
out
dec
or
add
inc
in
sub
jno
jns
pop
and
je
das
aam
sbb
movsb
dec
data16
stos
mov
and
mov
ljmp
xor
ja
and
mov
popf
cld
jae
sti
in
adc
push
push
cs
xor
pop
repz
mov
pop
repz
mov
fbstp
daa
int
scas
jp
out
inc
dec
aad
xchg
jecxz
outsl
sbb
movsl
ds
or
jl
lret
pop
lret
popaw
stos
xor
and
je
stos
rcll
dec
sub
adc
cltd
sahf
jl
test
rcr
cmc
xor
mov
and
scas
pusha
and
fwait
mov
xchg
icebp
scas
cmc
and
fldl
and
mov
jbe
gs
mov
mov
mov
mov
dec
in
cmc
dec
dec
lods
lret
push
xor
mov
cwtl
cld
add
mov
cs
or
rolb
pop
push
jns
jg
cmp
data16
addr16
loop
or
nop
scas
rorb
fbstp
or
xchg
xor
dec
outsl
sub
lock
jecxz
into
dec
test
pop
test
pop
xchg
lods
leave
cmpsb
scas
aaa
mov
lahf
inc
jge
mov
sub
pop
pushf
mov
ret
jecxz
mov
inc
mov
sub
push
adc
adc
lock
push
in
insl
push
mov
cld
rcrl
xchg
jecxz
loop
xchg
add
push
pop
pop
xchg
lret
jmp
leave
pop
lock
mov
inc
dec
jae
leave
sub
add
addr16
les
in
dec
xchg
lods
xchg
inc
jb
test
rcr
ja
sub
dec
jno
bound
and
add
cmp
addl
insl
and
js
into
cmp
xchg
cmp
and
cmp
mov
clc
cmpsb
fimull
insb
push
and
jp
push
and
mov
xchg
ljmp
jo
imul
jmp
gs
mov
ret
mov
iret
cmpsl
add
gs
gs
push
push
mov
mov
dec
lahf
scas
in
cmpl
pop
xchg
rolb
dec
mov
in
mov
pop
push
bound
roll
push
sbb
cli
aaa
cmp
sbb
ss
jmp
iret
stos
in
addr16
or
mov
stos
inc
popa
pop
test
push
stos
mov
or
jb
jl
add
movsl
sbb
repz
stc
cltd
fisttpl
pusha
ret
sbb
imul
mov
xor
icebp
lds
sub
aas
fnstenv
pop
or
test
xor
faddl
jge
inc
test
mov
inc
add
pop
mov
mov
jmp
fadds
dec
lock
je
hlt
in
sub
dec
dec
hlt
mov
inc
xchg
push
xor
push
push
scas
lock
out
mov
lea
mov
mov
inc
dec
add
add
in
mov
nop
mov
repz
lahf
lock
push
test
mov
xchg
pusha
push
cmpsl
ret
xchg
inc
bound
cmp
iret
call
xor
pusha
pop
push
inc
pop
mov
insl
pushf
pop
add
lds
imul
xor
stos
push
dec
loope
dec
ds
hlt
rcll
xor
dec
push
sbbb
shr
sbb
bound
cld
pop
push
lock
jae
daa
sarl
rolb
aad
pop
push
dec
lea
pop
xchg
arpl
xchg
mov
inc
mov
xchg
loope
push
imul
inc
ret
rcll
jge,pn
xchg
mov
es
cs
jo
in
outsl
outsb
aam
xchg
or
sbb
mov
aad
pop
out
icebp
inc
in
insb
add
fwait
mov
jl
xor
and
fidivrl
int3
into
inc
out
scas
adc
lea
adc
bound
and
sub
fmuls
idivl
in
push
or
push
bound
mov
dec
pop
cmp
in
pop
repz
xor
xor
xchg
test
mov
push
push
xorl
mov
mov
jmp
inc
iret
mov
cmp
out
and
scas
rcrl
mov
xchg
push
fnstsw
cmp
inc
mov
out
fcmovnbe
repnz
fmuls
xchg
cmp
ret
ror
dec
std
mov
jns
sbb
mov
dec
vpshufd
or
ljmp
inc
jae
fidivrl
mov
jmp
mov
pop
jp
frstor
and
js
pop
cmp
jmp
cltd
add
dec
std
les
mov
push
cli
xchg
xor
jae
pop
push
std
lods
mov
sti
adc
shlb
cmovns
mov
jnp
leave
xlat
lock
dec
pushf
into
xchg
push
neg
stos
sbb
pop
dec
cmp
lahf
and
mov
mov
pop
xchg
fdivl
inc
add
das
shrb
pop
insb
dec
inc
push
pusha
out
push
sbb
sbb
jbe
xor
ret
cmp
mov
ljmp
jmp
js
icebp
adc
lods
repnz
and
pop
fmuls
pop
jg
fsubr
add
push
test
test
add
sbb
jno
mov
orl
sub
sbb
iret
mov
sub
pusha
add
hlt
scas
mov
icebp
popf
or
jge
sub
pop
pop
jae
ja
mov
mov
outsb
movsl
popa
mov
xor
or
fs
jo
cmp
pop
fbstp
mov
xor
out
sub
jge
sahf
pop
cmp
dec
xchg
aad
lahf
mov
pop
aam
adc
test
into
add
ret
fisubrl
dec
imul
cli
cmc
inc
aaa
push
dec
cld
mov
ss
push
adc
xchg
sbbb
sahf
sub
and
int3
sub
add
insb
mov
loopne
jle
sub
pop
enter
mul
mov
xchg
das
sahf
push
lahf
fucomi
adc
pop
ficomps
add
cmp
xchg
mov
repz
xchg
lahf
call
adc
aad
jne
push
mov
lret
pop
mov
rorb
mov
mov
mov
jge
sub
pusha
leave
test
jge
aaa
scas
mov
addr16
repnz
mov
mov
adc
lcall
and
icebp
ljmp
pop
jg
and
adc
loope
mov
fstl
xor
inc
hlt
xorb
xor
xchg
sub
jecxz
xor
mov
test
fucomip
ret
mov
fsub
shlb
xchg
out
cmpsl
jp
dec
and
call
jg
inc
in
xor
invd
push
add
pushf
add
push
rolb
cmp
and
out
or
push
movsb
push
mov
fisttpl
or
fs
shlb
dec
jge
fcmovnb
pusha
and
mov
or
mov
enter
add
scas
and
and
or
jbe
leave
call
subl
cmpl
xor
ret
loope
push
js
jecxz
push
enter
adc
or
add
inc
or
mov
mov
ffree
xor
and
xor
mov
scas
pushf
mov
and
pusha
inc
sub
out
sub
cmpsl
mov
lds
sbb
fiaddl
popa
aad
inc
mov
dec
callw
dec
repnz
xchg
iret
sub
sub
test
dec
test
in
jne
movsl
jne
outsl
cwtl
xlat
lret
enter
push
sub
mov
test
pop
test
std
push
jo
sarb
fwait
push
cs
pop
push
mov
dec
mov
pop
sub
adc
pop
mov
sbb
sbb
and
cld
mov
cmp
adc
sub
loope
ja
pop
lock
fildl
cmpsb
jae
inc
push
jge
mov
fcmovnb
imul
shll
mov
and
add
sub
pop
cmpl
xchg
fnsave
arpl
or
inc
shlb
pop
aam
addr16
pop
roll
xchg
sub
inc
add
cmc
push
cmpsb
and
jmp
inc
sbbl
mov
ja
sbb
push
lods
int3
insl
lcall
jns
in
mov
push
and
adc
dec
xor
ds
push
xor
pop
lds
popa
pushaw
sub
lcall
mov
inc
frstor
adc
push
icebp
out
add
lret
adc
pop
and
or
fsubr
jne
jle
jnp
inc
xchg
jp
es
jg
scas
fbstp
ja
jle
ds
and
lds
jg,pt
int3
enter
fcmovnb
ret
dec
dec
push
or
sbb
int3
cmp
add
out
das
pop
and
xchg
cwtl
inc
inc
inc
dec
mov
enter
adc
mov
and
lds
lods
je
dec
dec
leave
daa
sbb
enter
mov
aaa
loop
lcall
movsl
mov
mov
es
mov
cltd
rorl
cmpsl
xor
decl
imul
inc
or
mov
imul
movsb
out
les
add
xor
movsb
mov
mov
adc
mov
cmp
mov
sub
aaa
push
lahf
cmp
xchg
lahf
movsb
push
roll
mov
push
mov
or
and
cs
adc
ja
out
stos
sbb
mov
mov
push
cmc
rorl
aas
sub
cmp
push
es
mov
dec
loopne
sbb
and
clc
sbb
jae
cld
pop
jle
loop
imul
in
dec
xchg
pshufw
adc
lea
repz
mov
sub
imul
adc
dec
out
imul
out
shlb
pop
sbb
mov
scas
mov
mov
inc
add
std
popf
mov
repnz
lcall
aam
xchg
and
adc
sar
or
lahf
adc
dec
in
cmc
ljmp
aaa
dec
sbb
sub
leave
out
out
ret
adc
pop
lock
aam
pop
sub
test
pushl
push
cmp
addr16
xor
mov
jae
inc
daa
sbbl
out
dec
test
scas
dec
jg
adc
in
daa
cs
sub
cld
xlat
or
stos
cmc
push
ret
lods
sub
mov
add
rorb
add
xor
sbb
xchg
sbb
jle
outsb
xchg
or
sti
cmpsb
sub
lret
je
cmp
xchg
xchg
pop
pop
cmc
out
cmc
jmp
mov
jo
cs
mov
out
js
sbb
lret
mov
js
mov
jmp
cs
add
and
in
pop
mov
push
test
stos
or
leave
lahf
pusha
inc
jo
test
adc
mov
mov
out
xchg
in
xchg
repnz
mov
scas
or
fmul
shll
ds
sti
repz
pop
jns
inc
cmp
sub
fmulp
push
or
dec
push
je
or
aad
sub
add
and
ss
mov
pop
aad
sbb
cs
pop
out
mov
andb
adc
les
out
adc
pop
lret
mov
pop
lea
leave
arpl
jl
jge
div
xor
and
pop
ret
int3
out
push
or
adc
mov
jmp
mov
mov
aad
add
sub
mov
xor
xchg
adc
xchg
xor
faddl
adcl
sarl
rcr
mov
dec
mov
adc
push
stc
mov
fbld
push
mov
mov
lock
stos
out
add
sahf
fistpl
in
pop
sub
ss
imul
mov
fstps
shll
sbb
and
je
mul
jbe
cwtl
rorl
jnp
pandn
mov
jp
adc
test
loopne
pop
popf
dec
xchg
cld
push
jne
dec
daa
pop
mov
insb
arpl
ljmpw
sbb
nop
mov
dec
rclb
xchg
and
fidivs
out
sub
aam
dec
inc
rcll
dec
fsubrl
aaa
mov
outsb
mov
xchg
and
sub
aaa
in
mov
xchg
iret
inc
jecxz
in
dec
push
or
dec
jmp
push
fnstsw
adc
stos
sti
daa
adc
mov
inc
es
in
cmpsb
pop
incb
stos
jo
pop
fwait
jns
mov
push
dec
push
pop
mov
sub
jno
pop
add
cmp
loopne
inc
loopne
and
jo
data16
ror
in
cwtl
aam
js
cltd
mov
cltd
arpl
jmp
add
mov
xor
mov
cmp
add
inc
pop
jle
stc
sub
rcrb
shll
rcrl
pop
fcmove
pushf
je
in
pop
lahf
add
dec
lret
mov
adc
icebp
push
mov
pop
test
add
lock
clc
pop
stc
pop
mov
popf
cmp
gs
mov
jb
test
lods
jne
test
mov
daa
xchg
rcl
loopne
mov
xor
loop
mov
xor
aas
std
sub
or
cmp
and
je
js
jne
push
hlt
movsb
int
pop
das
pop
test
adc
movsb
lea
cs
cmpsl
push
mov
fmull
in
or
enter
lcall
push
add
cld
idivb
out
or
divl
dec
lahf
jo
fwait
outsl
adc
pop
in
sbb
divl
or
inc
adc
jns
xchg
adc
add
cmc
sahf
scas
lds
fs
in
dec
pop
push
cmp
dec
pop
pop
lea
shlb
push
xchg
push
addr16
mov
push
xchg
cltd
pop
xchg
nop
dec
out
ljmp
pop
clc
adc
in
sbb
loop
xchg
jl
fs
cli
jge
add
push
pushf
clc
pushf
xchg
cmc
add
xor
lcall
lock
lods
xchg
mov
dec
sub
mov
std
push
pusha
pop
jns
sbb
cmc
mov
jae
sbb
loop
rclb
push
inc
sbb
jmp
dec
negl
loope
sbb
fisubrl
sbb
scas
iret
dec
cld
pop
push
lcall
mov
add
sbb
push
dec
movsl
jl
bound
push
mov
mov
pop
dec
iret
cltd
scas
call
cmp
test
rclb
stos
sub
or
cmpl
scas
mov
je
stos
int3
pop
js
iret
out
xlat
in
inc
enter
repz
jge
lret
pop
and
pop
insl
push
dec
xchg
popa
shl
dec
popf
xchg
lea
insb
jo
js
adc
cmp
je
insb
test
inc
icebp
aas
dec
ret
cld
in
scas
imul
add
cmc
mov
adc
inc
aaa
mov
in
in
cli
add
arpl
cwtl
rorl
movsl
sbb
int
arpl
fistps
add
cmp
add
inc
es
aaa
mov
pop
fwait
.byte
.byte
add
add
jl
add
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
test
adc
das
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
pop
cmp
scas
cmp
insl
jae,pt
jnp
cmpl
ds
aas
mov
out
repnz
cmp
xor
xor
xor
xor
xor
xor
insb
xor
fidivl
int3
xor
inc
ss
cmp
inc
outsl
ss
ss
ss
ss
aaa
mov
aaa
repz
add
or
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
sahf
xor
xor
xor
xor
sbb
and
xor
xor
xor
xor
xor
xor
xor
and
add
dec
cmp
xchg
movsb
cmp
cmp
jge
cwtl
cmp
mov
aas
cmp
pop
aas
bound
cmpl
aas
mov
mov
cli
aas
aas
into
add
push
xor
xor
xor
jb
sbb
sub
xor
xor
xor
xor
xor
xor
jge
mov
mov
or
xor
push
xor
xor
xor
xor
inc
ss
ss
ss
mov
ss
mov
mov
shlb
add
adc
sbb
aaa
jl
mov
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
xor
add
add
add
cmp
cmp
cmp
jo
cmpl
pop
cmp
scas
cmp
cmp
mov
sahf
cmp
cmp
cmp
dec
cmp
inc
cmp
pop
cmp
jns
loope
add
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ds
sarl
aas
in
ljmp
xor
sub
xor
xor
xor
cmp
inc
xor
insb
xor
xorb
xor
xor
xor
xor
xor
pop
xor
cmc
xor
out
cmp
push
ss
mov
and
aaa
je
shlb
aaa
daa
cmp
cmp
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
inc
add
cld
add
add
jnp
bnd
cmp
cld
ss
cmp
mov
mov
cmp
cmp
cmp
cmp
divl
xchg
cmp
cmp
cmp
jbe
cld
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
push
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
xor
xor
xor
xor
xor
xor
sub
xor
xor
xor
mov
int3
ss
dec
aaa
xchg
add
add
add
outsl
xor
aaa
ss
ss
ss
aaa
fistpll
stos
shll
sub
data16
mov
cmp
lahf
cmp
daa
cmp
sarb
sub
xchg
cmc
cmp
cmp
mov
cmp
hlt
cmp
ss
bound
js
mov
pop
cmp
idivl
push
aas
sbb
and
sub
sub
aas
push
aas
gs
add
add
add
xor
xor
xor
xor
xor
clc
xor
or
adc
push
cmp
cmp
cmp
xchg
cmp
fdivrl
cmp
push
adc
add
add
add
push
aas
pop
aas
popa
aas
mov
pushf
aas
imul
aas
test
aas
repnz
ja
cmpb
aas
into
aas
in
clc
aas
jl
ret
aas
fnstcw
ja
jge
mov
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
jb
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
cmp
cmp
cmp
aaa
cmp
xchg
cmp
mov
cmp
sbb
push
ds
outsl
ds
test
or
adc
add
add
into
aaa
pop
cmp
push
aaa
in
add
dec
cmp
xchg
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
sti
sbb
jne
lcall
aas
dec
aas
push
aas
pop
aas
arpl
jp
mov
add
xor
xor
xor
cmp
inc
xor
pop
xor
lret
xor
xor
sub
xor
xor
pop
xor
xor
fs
xor
xor
xor
xor
popf
xor
out
cmpsb
xor
sub
xor
js
xchg
sub
inc
ss
ss
cmpsl
shlb
ss
ss
cmp
aaa
mov
aaa
aaa
lret
nop
add
rolb
add
cmp
cmp
dec
cmp
imul
cmp
cmp
pop
cmp
jl
hlt
cmp
cmp
dec
cmp
cmp
cmp
cmp
inc
ds
add
lds
cmp
inc
xor
imul
mov
xchg
xor
xor
ss
xor
aas
fidivrl
fidivrs
loop
out
xor
and
sub
out
inc
ss
fbstp
and
int
call
cmp
sahf
xor
xor
xor
xor
xor
ja
jl
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
cmp
ss
cmp
cmp
cmp
cmp
mov
add
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
sub
cmp
dec
cmp
pop
cmp
jo
jbe
jl
cmpb
cmp
cmpsb
cmp
mov
cmp
cmp
call
cmp
and
sub
out
xor
xor
xor
xor
xorb
xor
lahf
xor
xor
xor
xor
xor
xor
xor
xor
push
ss
outsl
ss
ss
ss
shll
repnz
insl
aaa
jb
mov
cmp
cmp
cmp
arpl
push
cmp
cmp
cmp
cmp
cmp
push
cmp
sub
cmp
cmp
mov
add
pusha
aas
fs
jl
test
push
aas
je
pushf
aas
xor
cmp
cmp
inc
xor
xor
xor
xor
insb
xor
je
js
jle
xorb
xor
mov
mov
mov
xor
cmp
cmp
cmp
cmp
xor
inc
cmp
push
cmp
pop
cmp
jl
mov
cmpb
mov
mov
loopne,pt
in
ds
ds
aas
sbb
inc
aas
dec
aas
push
aas
add
add
test
add
adc
xor
pusha
xor
xor
xor
mov
cmp
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
rolb
add
add
add
push
ss
ss
ss
les
test
lods
aaa
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
push
cmp
mov
loopne
in
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
test
lods
xor
xor
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
xor
or
or
pop
sub
add
aam
mov
.byte
or
