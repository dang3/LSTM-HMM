push
push
push
mov
mov
mov
mov
mov
xor
mov
cmp
jne
mov
mov
jmp
add
movzwl
shl
mov
mov
and
mov
cmpw
jge
mov
jmp
mov
add
mov
mov
xor
mov
imul
mov
mov
mov
shl
mov
mov
mov
test
jne
pushl
movzwl
push
push
call
mov
mov
and
mov
mov
xor
mov
cmpl
jne
mov
mov
jmp
mov
shl
mov
mov
test
je
mov
jmp
test
jne
pushl
push
call
mov
movzwl
and
mov
mov
or
and
mov
cmpl
jne
mov
mov
jmp
mov
imul
mov
mov
test
je
mov
jmp
mov
mov
xor
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shr
mov
movzwl
movzwl
cmp
jle
mov
jmp
mov
mov
movzwl
shl
mov
cmp
jne
movzwl
jmp
mov
xor
movzwl
cmp
je
mov
jmp
mov
movzbl
xor
movzwl
imul
mov
movzwl
or
mov
movzbl
add
mov
cmpb
jne
push
push
movzwl
push
push
call
movzbl
movzwl
xor
mov
mov
xor
mov
add
mov
mov
xor
mov
imul
mov
cmp
je
movzwl
jmp
movzbl
xor
mov
movzwl
sub
mov
mov
test
jne
pushl
call
movzbl
mov
shl
mov
cmpw
jne
mov
mov
jmp
mov
movzbl
xor
div
mov
cmpb
jge
movzbl
jmp
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
mov
mov
imul
movzbl
mov
sub
sub
mov
xor
mov
mov
sub
sub
mov
xor
mov
mov
movzbl
cmpl
jle
mov
mov
jmp
mov
sub
mov
mov
mov
sub
mov
mov
test
je
movzwl
mov
jmp
mov
sub
add
mov
mov
test
je
movw
movzwl
and
xor
mov
cmpw
je
movzwl
mov
jmp
movzwl
xor
movzwl
imul
mov
cmpw
jle
movzwl
jmp
mov
add
mov
mov
movzwl
xor
sub
movzbl
mov
mov
movzwl
shl
mov
cmpw
jne
movzwl
jmp
movzwl
movzwl
xor
add
mov
add
mov
mov
movzwl
add
add
add
movzwl
shr
mov
cmpw
jne
movzwl
mov
jmp
movzwl
add
add
mov
sub
mov
movzwl
imul
mov
add
mov
jmp
mov
add
mov
mov
movzwl
xor
sub
mov
xor
mov
mov
sub
sub
mov
mov
mov
mov
mov
cmpw
jne
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
push
mov
movzwl
mov
shl
mov
mov
sub
movzwl
mov
xor
mov
sub
mov
cmp
jge
mov
mov
jmp
mov
imul
movzwl
test
je
mov
jmp
mov
sub
mov
cmp
jle
mov
mov
jmp
mov
imul
imul
mov
cmp
jne
mov
mov
jmp
mov
xor
divl
movzwl
mov
shl
mov
cmp
jle
mov
mov
jmp
mov
shl
mov
cmp
jge
mov
jmp
mov
sub
mov
cmpb
jge
mov
mov
jmp
mov
test
jne
push
movzbl
push
push
call
mov
mov
imul
mov
cmpb
jge
mov
jmp
mov
cmpl
jge
mov
jmp
mov
cmp
jle
mov
mov
jmp
movzbl
mov
pop
pop
ret
push
mov
mov
mov
movzbl
cmp
jge
mov
mov
jmp
mov
xor
divl
movzbl
mov
test
je
mov
jmp
mov
mov
cmpl
je
mov
jmp
mov
test
jne
movzwl
push
push
call
movzbl
mov
movzwl
xor
or
mov
cmpw
jle
movzwl
jmp
mov
xor
divl
mov
movzwl
shr
mov
mov
add
mov
movzwl
or
and
mov
mov
test
jne
movzwl
push
movzwl
push
movzwl
push
movzwl
push
call
mov
movzwl
and
movzwl
add
mov
cmpw
jle
mov
jmp
movzwl
mov
xor
div
mov
movzwl
or
movzwl
add
mov
movzwl
add
mov
mov
test
je
movzwl
jmp
movzwl
sub
mov
cmpw
jge
movzwl
mov
jmp
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shr
movzwl
mov
test
je
mov
jmp
push
mov
add
add
push
call
mov
test
je
call
mov
and
add
mov
push
mov
or
imul
push
push
mov
imul
add
push
call
mov
or
push
push
call
mov
movzbl
movl
mov
shl
mov
mov
xor
mov
mov
imul
movzwl
cmpb
jge
mov
jmp
mov
or
push
movzbl
xor
push
call
movzbl
mov
test
je
mov
imul
mov
sub
push
call
mov
sub
movzwl
mov
or
xor
push
call
mov
movzbl
and
movzwl
push
mov
or
mov
sub
push
mov
or
movzbl
sub
push
push
movzbl
push
call
push
movzbl
imul
push
call
mov
or
mov
add
push
mov
xor
push
mov
movzbl
or
push
mov
sub
push
call
movzbl
movzbl
mov
mov
mov
add
sub
mov
mov
mov
xor
div
movzbl
cmpb
jne
mov
jmp
mov
sub
mov
sub
mov
mov
shr
mov
cmp
jle
mov
mov
jmp
mov
add
push
mov
xor
push
call
movzwl
mov
test
je
mov
and
push
movzbl
push
call
call
mov
xor
push
push
mov
and
mov
add
push
call
movzbl
mov
xor
div
mov
call
movzbl
sub
mov
sub
movzwl
sub
mov
mov
movzbl
cmp
jle
mov
mov
jmp
mov
imul
mov
sub
mov
mov
add
mov
mov
movzbl
cmp
jne
movzbl
mov
jmp
movzbl
add
push
mov
or
push
call
mov
test
je
push
movzbl
add
push
push
call
movzbl
add
mov
movzwl
cmp
je
mov
mov
movzwl
or
mov
movzwl
shl
mov
cmpw
jne
movzwl
jmp
mov
xor
mov
cmpw
jne
movzwl
jmp
movzwl
movzwl
or
sub
mov
sub
mov
jmp
mov
add
mov
sub
mov
movzbl
and
movzwl
cmp
jle
movzbl
mov
jmp
movzbl
and
add
mov
mov
mov
add
mov
xor
add
mov
mov
mov
xor
div
movzbl
mov
movzbl
imul
sub
mov
mov
mov
add
mov
or
sub
mov
movzbl
xor
mov
cmpb
jge
mov
jmp
movzbl
imul
sub
mov
mov
mov
add
add
mov
movzbl
imul
add
mov
mov
mov
add
mov
movzbl
add
sub
mov
mov
add
mov
mov
test
je
movb
movzbl
mov
movzbl
shl
mov
movzbl
shl
mov
cmpb
jge
movzwl
mov
jmp
mov
sub
mov
mov
test
je
mov
mov
jmp
movzwl
movzbl
and
mov
mov
add
mov
movzwl
and
add
mov
mov
xor
mov
mov
movzbl
imul
mov
mov
movzwl
and
mov
cmpl
je
mov
mov
jmp
movzwl
movzbl
imul
mov
movzbl
mov
movzwl
imul
cmp
je
movl
mov
add
sub
mov
cmpl
jle
movzbl
mov
jmp
mov
imul
add
mov
mov
shl
mov
shr
or
mov
mov
sub
mov
mov
movzbl
or
add
mov
movzbl
xor
mov
add
mov
movzbl
mov
movzwl
movzbl
and
add
mov
add
mov
jmp
movzwl
imul
mov
cmpw
jge
mov
jmp
mov
cmp
jne
mov
mov
movzwl
or
mov
movzwl
imul
mov
movzwl
add
mov
cmpw
jge
movzwl
mov
jmp
movzwl
movzwl
xor
add
mov
mov
sub
movzwl
movzwl
sub
add
sub
mov
movzwl
imul
mov
movzwl
movzwl
sub
add
mov
mov
add
mov
mov
xor
movzwl
sub
mov
mov
add
movzwl
movzwl
imul
sub
sub
mov
movzwl
sub
mov
cmpw
jle
mov
mov
jmp
mov
add
mov
movzwl
mov
movzwl
movzwl
sub
add
mov
mov
mov
add
movzwl
and
sub
sub
mov
movzwl
or
add
mov
add
mov
mov
mov
add
mov
movzwl
xor
divl
mov
mov
movzwl
sub
sub
mov
xor
mov
movzwl
or
movzwl
or
mov
mov
movzwl
add
add
push
mov
movzwl
sub
sub
push
movzwl
movzwl
or
add
push
mov
movzwl
sub
sub
push
call
mov
movzwl
sub
mov
movzwl
sub
sub
mov
sub
mov
mov
mov
and
mov
cmpw
jne
mov
mov
jmp
mov
movzwl
and
sub
mov
add
mov
movzbl
or
mov
cmpw
jle
mov
mov
jmp
mov
sub
mov
movzwl
xor
xor
mov
cmpb
jle
mov
mov
jmp
jmp
movzbl
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
movzwl
mov
add
movzwl
mov
imul
movzwl
cmp
jne
call
movzwl
mov
or
imul
movzwl
mov
test
je
mov
jmp
mov
sub
movzwl
cmp
jle
mov
mov
jmp
mov
xor
or
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
movb
movzbl
shl
movzbl
mov
movzbl
imul
imul
movzbl
mov
sub
mov
cmpb
jne
mov
jmp
mov
test
jne
call
mov
mov
xor
mov
add
movzbl
mov
mov
xor
div
movzbl
cmpb
jge
movzbl
mov
jmp
mov
mov
mov
movzbl
xor
mov
mov
and
movzbl
cmp
jne
movzbl
mov
jmp
cmpb
jne
call
movzbl
mov
sub
mov
cmp
jle
mov
mov
jmp
mov
mov
xor
div
mov
mov
or
mov
sub
mov
cmp
jle
mov
jmp
mov
add
mov
mov
movzbl
cmpb
jne
mov
mov
jmp
mov
pop
pop
pop
ret
push
push
push
mov
mov
shl
movzbl
test
je
mov
mov
jmp
mov
or
movzbl
test
jne
push
push
call
mov
mov
movzbl
mov
mov
xor
div
movzbl
mov
sub
movzbl
mov
shr
mov
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
cmp
je
mov
jmp
mov
mov
movzbl
and
mov
add
mov
mov
cmp
jge
mov
jmp
movzbl
shr
mov
mov
and
imul
mov
cmpl
jge
mov
mov
jmp
movzwl
xor
div
movzwl
mov
sub
mov
cmp
jle
movzwl
jmp
mov
xor
div
movzwl
mov
xor
mov
cmp
je
movzbl
mov
jmp
cmp
jne
push
push
call
movzwl
mov
xor
mov
cmpb
jge
mov
jmp
mov
xor
and
mov
cmp
jne
mov
mov
jmp
mov
xor
div
mov
mov
and
sub
mov
cmpb
je
mov
jmp
mov
sub
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
cmp
jne
mov
mov
jmp
mov
xor
mov
mov
and
movzbl
cmp
jge
mov
jmp
mov
or
add
mov
xor
mov
mov
movzwl
cmp
jge
mov
jmp
mov
imul
add
mov
xor
mov
mov
mov
mov
imul
push
mov
sub
push
call
mov
test
je
mov
add
push
mov
or
push
mov
add
push
call
mov
and
mov
mov
and
mov
mov
mov
mov
shl
mov
mov
xor
sub
mov
mov
test
je
movw
movzwl
shl
mov
movzwl
or
mov
movzbl
movzwl
add
mov
movzbl
mov
mov
movzbl
movzwl
imul
mov
movzwl
movzbl
add
sub
mov
add
mov
movzwl
shr
mov
cmpb
jne
mov
mov
jmp
movzwl
movzbl
or
add
mov
add
mov
movzwl
mov
mov
test
je
movzwl
mov
jmp
movzwl
movzbl
xor
add
mov
sub
mov
jmp
mov
mov
mov
and
add
mov
xor
mov
mov
or
mov
mov
mov
mov
mov
sub
movzwl
cmpl
jle
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
movzwl
mov
or
movzbl
cmp
jne
mov
mov
jmp
mov
movzwl
mov
shr
mov
mov
test
je
mov
mov
jmp
movzwl
imul
imul
movzwl
mov
test
jne
push
push
push
call
movzbl
movzwl
and
mov
imul
movzwl
mov
and
movzbl
cmp
jne
mov
mov
jmp
mov
add
mov
cmpw
jle
movzwl
jmp
movzwl
mov
pop
pop
pop
ret
push
push
movb
movzbl
mov
mov
shr
mov
cmpw
jne
movzbl
mov
jmp
cmpb
jne
push
movzbl
push
call
mov
mov
shl
mov
cmpw
je
movzwl
mov
jmp
movzbl
shl
movzbl
cmp
jge
mov
jmp
movzwl
add
mov
cmpw
jge
mov
jmp
mov
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
or
xor
movzwl
cmp
jne
mov
mov
jmp
mov
or
mov
imul
movzbl
cmp
je
mov
jmp
mov
sub
movzbl
mov
mov
cmp
jge
mov
jmp
mov
xor
sub
mov
cmp
jle
mov
jmp
mov
mov
mov
mov
cmpw
je
movzwl
mov
jmp
cmpb
jne
push
push
movzwl
push
movzbl
push
call
mov
mov
shr
mov
mov
shr
mov
movzbl
add
mov
cmpw
jge
movzbl
jmp
mov
add
mov
cmpw
je
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
movzwl
imul
movzwl
sub
movzbl
mov
sub
movzbl
mov
movzwl
sub
add
mov
xor
mov
mov
mov
movzwl
add
sub
mov
mov
movzwl
imul
sub
mov
xor
mov
mov
mov
mov
mov
movzwl
shr
movzbl
movzwl
movzwl
add
sub
cmp
je
movw
mov
add
sub
mov
movzwl
xor
movzwl
and
mov
cmpb
jge
movzwl
mov
jmp
mov
movzwl
xor
movzwl
add
mov
cmpw
jle
movzwl
jmp
mov
mov
mov
movzwl
sub
add
mov
movzwl
movzwl
or
add
xor
mov
mov
mov
mov
imul
mov
cmpw
jne
mov
mov
jmp
mov
movzwl
and
sub
mov
mov
or
sub
xor
mov
movzwl
sub
mov
cmpw
jge
movzwl
mov
jmp
mov
mov
movzwl
shr
mov
cmpw
jge
mov
jmp
mov
sub
sub
add
movzbl
sub
add
mov
sub
mov
jmp
movzwl
mov
cmpw
jge
movzwl
mov
jmp
movzwl
movzbl
and
sub
mov
xor
mov
movzwl
movzbl
and
sub
mov
call
mov
mov
cmpw
jge
movzwl
mov
jmp
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movb
movzbl
and
movzbl
add
movzbl
cmpb
jge
movzbl
jmp
movzbl
shl
movzbl
mov
mov
movzbl
mov
mov
sub
mov
mov
imul
mov
add
movzbl
cmpl
jne
movzbl
mov
jmp
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
or
mov
imul
mov
cmp
je
mov
jmp
mov
test
jne
movzbl
push
call
mov
mov
or
mov
add
mov
cmpl
jge
mov
jmp
movzbl
xor
div
mov
cmp
jle
mov
jmp
mov
movzbl
mov
imul
mov
sub
movzbl
cmp
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
imul
mov
mov
xor
imul
movzbl
mov
test
je
mov
mov
jmp
mov
sub
mov
mov
test
je
mov
mov
jmp
mov
imul
movzbl
cmp
jge
mov
mov
jmp
mov
and
mov
add
mov
movzwl
and
mov
imul
mov
movzwl
xor
div
mov
cmp
jle
mov
mov
jmp
mov
test
jne
call
movzbl
mov
mov
movzwl
imul
imul
mov
mov
movzbl
cmpw
jne
mov
jmp
movzwl
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
cmpb
jle
mov
mov
jmp
movzbl
shl
movzwl
cmp
jge
mov
mov
jmp
cmp
jne
push
call
mov
mov
shr
movzbl
cmp
jge
movzbl
mov
jmp
mov
add
movzwl
mov
shl
mov
mov
shl
mov
mov
test
je
mov
mov
jmp
mov
test
jne
push
push
pushl
push
call
movzwl
mov
movzbl
xor
mov
movzbl
imul
mov
mov
imul
mov
movzbl
mov
cmp
jge
mov
mov
jmp
movzwl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
sub
movzwl
mov
and
mov
mov
imul
sub
mov
xor
mov
mov
cmpl
jge
mov
jmp
mov
imul
add
mov
xor
mov
mov
xor
xor
movzwl
mov
add
sub
mov
mov
mov
mov
add
add
mov
mov
or
sub
movzwl
cmp
jle
mov
mov
jmp
mov
add
add
cmp
je
movb
movzbl
shl
mov
cmpl
jle
movzbl
jmp
mov
add
mov
cmpb
jge
mov
mov
jmp
mov
movzbl
add
sub
mov
movzbl
mov
mov
movzbl
shl
mov
cmpl
jge
mov
mov
jmp
mov
add
mov
movzbl
movzbl
or
sub
mov
add
mov
mov
xor
movzbl
sub
mov
cmpb
jle
movzbl
mov
jmp
movzbl
add
add
mov
sub
mov
movzbl
add
mov
jmp
mov
or
add
mov
xor
mov
mov
mov
cmp
jle
mov
jmp
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movb
movzbl
shl
movzbl
cmp
jne
mov
jmp
movzbl
sub
movzwl
cmpb
jne
mov
mov
jmp
mov
mov
mov
or
mov
add
movzwl
mov
or
xor
mov
mov
test
je
movzbl
jmp
mov
xor
movzwl
mov
movzbl
xor
mov
sub
mov
cmp
jne
mov
mov
jmp
cmp
jne
pushl
movzbl
push
push
call
movzbl
movzbl
and
mov
mov
xor
add
mov
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
cmp
jle
mov
jmp
mov
mov
mov
test
je
mov
jmp
mov
shl
mov
mov
imul
mov
add
movzwl
cmpl
jne
mov
jmp
mov
or
or
movzwl
cmpl
jge
mov
mov
jmp
mov
movzwl
cmp
jne
push
push
pushl
call
mov
mov
shr
mov
mov
mov
cmpl
jge
mov
mov
jmp
mov
mov
mov
shr
mov
mov
movzwl
cmp
je
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movw
movzwl
xor
movzwl
mov
and
movzwl
cmpw
jge
mov
mov
jmp
mov
xor
mov
movzwl
mov
cmp
jle
mov
jmp
mov
movzwl
or
add
mov
xor
mov
mov
and
mov
imul
mov
mov
movzwl
add
sub
mov
mov
mov
movzwl
movzwl
and
add
mov
movzwl
sub
add
cmp
je
movw
movzwl
mov
movzwl
shr
mov
cmpw
jne
mov
mov
jmp
mov
and
imul
mov
movzwl
mov
cmpl
jle
movzwl
jmp
movzwl
xor
add
movzbl
mov
mov
movzwl
xor
and
mov
cmpw
jne
mov
mov
jmp
mov
add
add
mov
add
mov
mov
or
add
add
mov
imul
mov
cmpl
je
mov
jmp
movzwl
imul
add
mov
sub
mov
mov
and
mov
jmp
mov
and
movzwl
sub
mov
movzwl
add
add
mov
xor
mov
movzwl
and
mov
cmpw
jne
mov
jmp
mov
mov
mov
movzwl
mov
cmp
je
movzbl
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
add
movzbl
mov
imul
imul
movzbl
cmp
jge
mov
mov
jmp
mov
xor
sub
mov
xor
mov
mov
and
add
mov
mov
mov
shl
mov
mov
and
add
mov
sub
mov
mov
mov
mov
movzwl
imul
sub
mov
movzwl
or
add
cmp
je
movl
mov
shr
mov
cmpl
jne
mov
jmp
movzwl
shr
mov
movzwl
and
mov
cmpb
jne
movzbl
jmp
movzbl
sub
sub
cmp
jge
movl
mov
and
mov
mov
shr
mov
mov
test
je
mov
mov
jmp
movzbl
xor
mov
cmpw
jle
mov
mov
jmp
mov
movzwl
xor
sub
movzbl
mov
mov
movzwl
or
movzwl
imul
mov
movzwl
and
add
mov
add
mov
movzbl
sub
mov
mov
add
mov
mov
mov
cmpl
jge
movzwl
mov
jmp
movzwl
movzbl
imul
add
mov
sub
mov
movzwl
mov
cmpb
jge
movzbl
mov
jmp
jmp
movw
movzwl
sub
movzwl
sub
mov
mov
test
je
movzwl
jmp
movzwl
shr
mov
cmpw
jne
movzwl
jmp
movzbl
movzwl
imul
movzwl
add
mov
cmpw
jge
movzbl
mov
jmp
movzbl
shl
mov
movzbl
imul
mov
cmpb
jle
movzwl
jmp
movzbl
movzwl
add
movzbl
shl
mov
movzwl
mov
mov
add
add
mov
movzbl
add
mov
movzwl
movzbl
imul
movzbl
shl
mov
movzbl
sub
mov
mov
add
mov
movzwl
shr
mov
movzbl
mov
add
mov
movzbl
and
mov
add
mov
movzwl
sub
mov
cmpb
jle
movzwl
jmp
movzbl
movzbl
imul
mov
movzbl
mov
cmpl
jne
mov
mov
jmp
movzbl
movzwl
add
sub
mov
mov
cmp
jne
movw
movzwl
add
movzwl
add
mov
movzwl
and
mov
cmpl
je
movzwl
mov
jmp
movzwl
and
add
mov
mov
cmp
jne
movl
mov
add
mov
cmpb
jge
movzbl
mov
jmp
mov
add
add
mov
cmpl
jge
movzbl
mov
jmp
movzbl
xor
divl
mov
movzbl
mov
cmpb
jle
movzbl
jmp
movl
movzwl
shr
mov
movzwl
movzbl
add
add
mov
cmpb
jge
movzwl
jmp
mov
movzwl
xor
add
cmp
je
movb
movzbl
shl
mov
cmpb
jle
movzbl
mov
jmp
movzbl
mov
movzbl
movzbl
and
sub
mov
sub
mov
movzbl
shl
mov
movzbl
movzbl
and
sub
add
movzbl
add
mov
jmp
movb
movzbl
xor
movzbl
or
mov
movzbl
shl
mov
cmpw
jge
movzbl
mov
jmp
movzbl
movzwl
and
movzbl
mov
mov
movzbl
xor
mov
movzwl
movzwl
add
sub
mov
add
mov
movzwl
movzwl
imul
sub
add
movzwl
movzbl
sub
add
mov
sub
mov
movzwl
mov
cmpb
jne
movzwl
mov
jmp
jmp
mov
sub
mov
mov
movzbl
imul
sub
mov
xor
mov
mov
mov
mov
sub
movzbl
mov
sub
shr
mov
movzbl
sub
add
mov
xor
mov
movzbl
shl
mov
cmpb
jle
mov
mov
jmp
mov
mov
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
movzbl
cmp
jle
mov
jmp
mov
movzbl
mov
shr
movzbl
mov
shl
mov
mov
shl
mov
mov
imul
mov
add
movzbl
mov
test
jne
push
movzbl
push
push
call
movzbl
mov
and
movzbl
cmp
jge
mov
mov
jmp
mov
movzbl
mov
test
je
mov
mov
jmp
mov
shr
movzbl
mov
test
jne
movzbl
push
call
mov
movzbl
xor
or
movzbl
cmp
jle
movzbl
mov
jmp
mov
movzbl
cmp
jne
mov
jmp
mov
or
and
mov
mov
mov
pop
pop
pop
mov
pop
ret
ret
jmp
xor
ret
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
sbb
sbb
and
and
and
sbb
daa
adc
sbb
and
and
sbb
and
sbb
adc
and
sbb
pop
daa
es
pop
daa
push
and
sbb
pop
pop
sbb
adc
pop
and
push
push
adc
and
push
push
daa
sbb
adc
adc
pop
and
scas
mulb
mov
adc
xor
add
and
rcrl
lret
jecxz
sub
or
or
out
lds
addb
mov
jmp
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
or
or
dec
lret
out
in
aam
mov
sbb
push
mov
insl
xor
addr16
ljmp
leave
mov
cwtl
inc
or
xchg
jg,pt
in
dec
lret
lret
jge
loopne
mov
dec
cmpsb
stos
and
cltd
sub
clc
push
inc
dec
mov
inc
or
fmul
icebp
jge
pop
inc
mov
xchg
rclb
jle
add
repz
in
adc
sub
sub
and
xchg
xor
shll
inc
xor
lea
pop
inc
xchg
mov
loop
push
imul
lahf
imulb
inc
sub
ficompl
sub
icebp
in
loopne
jmp
push
aam
mov
adc
jecxz
adc
shlb
lret
xchg
aaa
jbe
ljmp
les
push
lret
mov
andb
dec
inc
jge
or
insl
into
jg
or
push
lcall
cwtl
fimull
add
mov
popa
loope
imul
push
mov
outsl
pusha
pop
push
dec
loopne
jb
xor
push
insb
subl
int3
cmpb
rcrl
outsl
js
cmp
xchg
js
cli
repz
jecxz
xchg
test
bswap
addl
movb
in
les
mov
je
dec
idiv
jecxz
mov
jmp
test
xchg
lahf
inc
mov
xor
pop
adc
adc
push
mov
cmp
clc
cld
mov
in
lods
popa
sub
ja
outsb
stos
lret
fdivl
jmp
xor
cwtl
call
aad
aam
dec
loop
mov
outsl
out
cmp
or
lahf
mov
test
add
hlt
fistl
out
dec
pop
sub
imul
inc
dec
xor
lds
fdivl
xchg
sbb
dec
xchg
cmp
mov
lcall
cmp
call
rclb
inc
pop
xor
inc
or
jae
mov
and
jo
cld
mov
scas
test
mov
daa
imul
fdivl
int
std
xor
or
jl
sbbl
andl
sahf
rcrl
aaa
xor
test
xchg
into
int3
addr16
ja
cwtl
adc
imul
add
test
test
stc
stc
out
vexp2ps
lcall
leave
mov
rclb
or
arpl
add
pop
mov
not
dec
je,pt
lods
push
cmp
add
mov
mov
shl
insw
adc
pop
push
add
imul
mov
out
push
ds
adc
or
les
rcll
call
fsubs
xor
adc
pop
xchg
fdivs
inc
cs
movl
mov
ja
pusha
sub
rol
gs
into
mov
into
int3
mov
out
fildll
adc
pushf
mov
or
ret
lds
push
jno
add
dec
loop
add
adc
or
test
out
cmovge
cwtl
js
imul
sahf
lcall
xor
xchg
or
dec
and
dec
int
in
shlb
or
into
mov
fstl
movl
test
in
xchg
xorb
faddl
mov
fisttpll
dec
cmpsl
aam
sub
jno
cld
orl
cld
ret
fimuls
lds
scas
inc
and
add
xchg
aam
adcb
push
cmp
jl
mov
rol
cwtl
fwait
test
aas
xor
mov
adc
pop
rcll
imulb
sub
xor
std
jae
mov
and
dec
and
push
mov
xchg
shlb
xchg
jo
clc
mov
faddl
mov
lds
push
ljmp
dec
mov
lahf
nop
cwtl
fwait
add
and
and
movsl
data16
mov
fdivl
cwtl
int
cmpsb
pop
and
dec
loop
ja
jo
add
mov
sbb
mov
dec
movsl
loopne
test
and
dec
loop
pop
inc
mov
scas
cli
sahf
jb
imul
or
lock
scas
pop
pop
xor
pop
jp
or
fdivl
aad
pop
jecxz
and
xor
cmpsl
aam
les
pop
cmp
push
jnp
dec
jecxz
in
scas
mov
jle
xchg
push
ror
mov
inc
aam
inc
loopne
jno
lods
lcall
fstps
notb
inc
shl
es
push
add
pop
mov
sbb
std
pushf
pop
mov
jecxz
pop
mov
cmp
insl
jecxz
push
cmp
cwtl
mov
mov
xor
pop
jno
scas
adc
ret
and
lret
sahf
cltd
jne
mov
mov
xor
cmpsb
adc
cmp
lea
xchg
insb
push
cwtl
mov
xchg
mov
mov
jecxz
xor
mov
and
cli
ljmp
out
fcmovb
jo
jnp
inc
and
sarb
outsl
mov
mov
xchg
sbb
sub
push
mov
xchg
mov
daa
es
stos
out
mov
jbe
rolb
mov
dec
mov
rorl
adcl
add
orb
insb
test
sub
movb
or
scas
cmpsb
xor
push
repz
fsubrl
push
lret
xor
sbbl
xor
adc
pop
ds
fwait
lea
or
jmp
or
loope
rcrl
xorl
dec
add
pop
push
lret
or
pop
insb
cmp
out
jb
jmp
xor
adc
into
or
cwtl
push
xlat
adc
arpl
icebp
cmp
ds
mov
push
in
loop
imul
mov
lods
xchg
dec
dec
mov
insl
mov
pop
or
jb
push
fwait
ror
xchg
or
repnz
mov
or
out
push
sub
stos
out
mov
push
sbb
mov
and
neg
xchg
sub
leave
sbb
arpl
mov
pop
xchg
jle
enter
repz
int3
add
mov
imul
jl
ljmp
or
jle
fcoml
dec
into
jmp
fistpll
popf
mov
mov
or
push
dec
lret
out
fistps
mov
jnp
push
lret
mov
dec
add
jle
fsubl
lods
movl
and
out
test
push
xchg
cmp
lret
in
loope
sub
scas
jle
sbb
mov
repz
push
mov
aad
or
xchg
imul
data16
push
int
insl
rclb
adc
adc
movb
jo
inc
cmc
push
mov
into
jnp
jle
mov
andl
cwtl
mov
inc
js
icebp
xlat
loopne
popa
push
lods
dec
dec
out
fisttps
int3
jp
rcrl
pop
inc
sbb
aaa
adc
mov
sub
into
push
loope
rorl
shlb
adc
aad
mov
cmpsl
mov
dec
jle
mov
pushf
and
push
adc
dec
aas
mov
cmpsb
lcall
adc
dec
call
outsb
test
push
jb
push
lods
dec
test
push
jnp
das
and
mov
mov
xor
es
sub
xlat
inc
xor
repz
add
push
xchg
push
fcomip
addr16
add
xor
jp
call
aam
or
jle
shr
xchg
int3
rolb
mov
pop
enter
xor
lret
clc
push
pop
notl
pushf
negb
daa
shlb
loop
xchg
in
cmpsb
push
jecxz
fsubrl
mov
cld
jo
das
mov
lret
cwtl
inc
lock
shll
mov
loop
adc
rorl
adc
and
add
in
ds
ficoml
cmp
mov
pop
rcl
cltd
inc
jl
sub
insl
add
lods
shlb
and
mov
mov
ret
push
data16
xor
and
lcall
jns
inc
mov
clc
int3
movsl
and
cmpsb
xor
data16
mov
repnz
jg
popa
pop
insl
idivl
sbb
popa
icebp
insb
xlat
add
mov
cmp
repnz
imulb
adc
popf
mov
push
std
sbb
ret
hlt
rcrl
pop
inc
iret
lahf
icebp
rclb
sub
mov
lcall
mov
aas
inc
lea
je
ret
cmp
decl
xchg
test
sub
xchg
dec
jne
mov
shl
cmc
std
add
pop
inc
imul
jo
mov
push
lods
push
pusha
inc
push
lret
pop
sbb
adc
xchg
out
gs
ljmp
outsl
cmp
dec
int
or
popa
xchg
testl
jle
mov
aam
jae
insb
dec
jmp
jle
rolb
fdivrs
int
in
inc
icebp
jns
xor
push
out
aas
aad
dec
ds
mov
xchg
adc
test
sub
call
xorl
jge
jmp
xor
add
mov
push
shr
sub
daa
add
fs
xchg
pop
inc
or
popf
mov
sbb
adcb
xchg
inc
cmp
insb
int
mov
addl
testl
scas
negl
dec
jecxz
pop
cmp
jne
loop
mov
mov
aaa
pop
cmpsl
cmp
imul
mov
inc
lds
in
cwtl
pop
and
lahf
fwait
adc
add
push
ja
xchg
add
into
insb
stos
ret
dec
in
jnp
xchg
mov
pop
leave
lds
or
outsl
cwtl
pusha
inc
add
pop
xor
fwait
jl
fiadds
xchg
cmp
add
jo
dec
xor
mov
dec
push
minps
xor
push
fmull
mov
arpl
add
xor
roll
pop
inc
cmp
dec
movb
dec
ja
push
and
outsb
ret
loop
cmp
mull
and
int3
shlb
pop
jmp
xchg
ret
cmp
and
imul
inc
sub
jl
pop
push
dec
jl
pop
mov
fcmovb
loop
in
fistpl
jb
sbb
fsubrl
icebp
add
ja
flds
cs
push
mov
lds
in
inc
pusha
cwtl
mov
divb
dec
fwait
clc
xor
in
pop
mov
add
push
xor
pop
inc
ljmp
cmp
cltd
mov
fdivrl
int
cmp
cmp
ja
out
shlb
mov
pop
pop
pop
cwtl
xlat
ljmp
xchg
and
and
xchg
mov
push
sahf
inc
dec
scas
outsb
cwtl
pop
mov
and
sahf
mov
lds
jne
and
std
scas
mov
xchg
adc
jb
icebp
and
call
push
and
jmp
sub
movsl
sub
sub
cwtl
xchg
test
xchg
cmpsb
fwait
dec
mov
movsl
push
pop
inc
pop
add
xchg
dec
rcll
test
test
cwtl
shlb
popf
jne
lds
cmpsb
call
mov
ss
sub
movsb
sbb
sbb
pushf
in
dec
xchg
or
icebp
pusha
sbb
std
jnp
pop
inc
jmp
mov
xlat
adc
or
adc
or
and
dec
push
add
jne
mov
and
scas
leave
adc
stc
dec
in
cmp
out
xor
ficompl
adc
aaa
aas
in
test
sarl
insb
fwait
stc
or
imul
mov
dec
loope
fiaddl
lods
insl
or
jmp
daa
enter
roll
mov
jb
pop
loop
push
dec
push
jp
cmp
les
test
fstl
outsl
jns
jbe
adc
mov
scas
and
mov
pushl
dec
jle
cmpsb
sbb
jb
jno
scas
out
stc
xor
mov
bound
cmpsl
mov
loop
mov
mov
cmp
push
pop
repnz
mov
js
add
jbe
int3
mov
pop
lcall
jns
jae
adc
mov
jbe
jge
jle
andl
jmp
imul
fbld
movsl
outsb
ret
lahf
mov
out
es
shll
jb
mov
push
sbb
xchg
xchg
aas
imul
mov
aas
icebp
pop
push
ds
lods
cmpsb
popf
lock
test
mov
and
loope
inc
xchg
sub
lock
lods
mov
push
cmp
dec
pop
cmp
cmp
dec
sub
xor
or
xchg
sub
cmp
enter
pop
aad
aam
ror
and
cmp
sbb
pop
out
xor
data16
iret
inc
mov
push
cmpsb
stc
call
pop
add
add
jb
and
test
pop
push
shl
dec
push
pop
and
jg
lret
mov
fmull
pop
iret
jae
dec
sub
cmp
stos
inc
pop
jbe
xchg
std
mov
jmp
and
fbld
adc
push
mov
sbb
into
push
scas
les
mov
fwait
add
cmp
mov
movsl
adc
mov
and
fwait
cmc
mov
xchg
fstpt
pop
test
test
pusha
gs
sbb
jl
mov
cmp
fists
cwtl
push
cmp
sub
out
add
nop
jb
pop
sti
sbb
les
pop
dec
sub
test
bound
jp
mov
pop
push
jecxz
pop
das
mov
shll
xchg
in
mov
mov
or
dec
push
cmp
jno
test
daa
or
add
mov
cmc
inc
loop
xor
fbld
je
mov
xchg
aaa
loope
mov
push
mov
adc
pop
mov
xchg
push
imul
inc
sub
popw
shll
scas
cmp
push
or
das
adc
push
jmp
mov
jp
push
imul
jg
dec
test
repz
cmp
pusha
es
dec
mov
xchg
sbb
mov
mov
fldenv
es
jmp
add
mov
fadd
data16
rol
mov
xchg
ljmp
sbb
mov
jb
sbb
push
movsl
add
mov
imul
aam
lods
mov
sbb
sahf
cmc
pop
xor
adc
fadd
mov
push
add
xchg
fldenv
imul
aam
mov
push
lods
test
stos
xchg
movsl
lods
jo
adc
jnp
pop
pop
sub
push
rcrb
fcoml
mov
mov
mov
mov
inc
add
mov
mov
ljmp
mov
add
sbb
psllq
pop
pop
pop
sub
iret
rolb
xchg
aam
xor
int3
mov
and
mov
je
fucom
inc
mov
push
lret
mov
je
xor
jle
imul
or
push
test
sbb
or
lahf
push
xchg
mov
das
mov
mov
mov
push
sbb
push
loopne
cmp
fdivp
xchg
aam
push
or
and
lret
push
xchg
pop
push
cmp
repz
daa
jae
cli
out
out
adc
in
or
sub
pusha
adc
or
xor
jns
push
xorl
inc
or
push
cmp
inc
mov
xor
lret
fmull
jbe
mov
fbld
xchg
lock
push
cmp
pop
xchg
shlb
rclb
pop
pop
cmp
es
jle
gs
mov
enter
mov
movl
push
fists
cmc
sbb
notl
sarb
xchg
rorb
pop
dec
clc
hlt
lea
sub
dec
mov
stos
aas
decb
int
add
mov
stos
mov
stos
je
popa
mov
push
xor
sarl
out
cli
imul
ret
dec
loope
push
push
sub
adc
push
andps
mov
xchg
mov
out
loop
fistps
repnz
or
es
fstpl
into
aas
or
and
rorb
orl
adc
out
adc
pop
stos
clc
mov
insl
cwtl
popl
mov
xchg
in
aas
add
and
lea
mov
push
xchg
mov
or
imul
add
push
pop
xlat
mov
dec
dec
add
push
filds
in
or
and
cmpsb
sub
dec
dec
mov
push
cmp
jno
and
cmp
ljmp
push
rcl
jge
repnz
xchg
dec
scas
out
fists
dec
imul
out
pop
dec
push
jae
push
rcr
add
lock
mul
jp
call
sub
lock
ffreep
jns
and
mov
out
fnstsw
popa
imul
mov
xor
mov
push
push
in
mov
xchg
push
mov
ret
xchg
add
adc
pop
mov
or
adc
adc
loopne
pop
or
and
cmpsb
jg
dec
pop
mov
push
insl
loopne
clc
lock
push
in
mov
pop
push
adc
pop
icebp
clc
fwait
or
adc
xor
loope
mov
cmpsb
scas
pop
dec
sbb
push
push
mov
xchg
or
sub
add
fwait
mov
push
inc
xlat
mov
dec
jno
mov
pcmpgtw
stc
dec
fbstp
push
and
loop
sub
push
cmc
mov
insb
mov
daa
sbb
incb
dec
push
jg
and
pop
out
fbld
sub
jae
push
mov
es
push
shll
sbbl
int3
xchg
test
adc
lea
or
insb
mov
adc
mov
inc
or
andb
push
xchg
mov
lods
mov
daa
xlat
stos
icebp
out
jecxz
push
pop
pop
clc
popa
sti
or
xchg
cwtl
or
adc
adc
sbb
cmc
or
mov
test
xchg
xchg
mov
or
fcoml
adc
adc
ljmp
push
adc
aas
xor
push
and
jns
dec
imul
pop
or
andl
stos
pop
mov
push
xchg
xlat
jae
and
push
dec
add
xchg
filds
sub
cmpsb
jl
dec
mov
xchg
pop
push
jnp
sub
data16
adc
push
add
jecxz
cmp
mov
push
out
adc
pop
test
cmp
xor
adc
or
and
cmpsb
and
push
push
xchg
call
or
decb
or
shrl
adc
lea
cwtl
movsl
or
xchg
adc
xor
lcall
mov
aas
mov
fists
or
aam
xchg
stos
out
mov
push
cltd
xlat
and
sub
xchg
scas
imul
mov
ficoml
fadd
rol
into
fndisi(8087
cli
rcll
and
xor
test
push
inc
fwait
lods
push
hlt
mov
popf
out
fistpll
imul
jg
jecxz
imul
cmp
lahf
loope
shll
std
cmp
and
lods
push
sti
shrb
xchg
sub
xchg
xor
outsb
adc
iret
or
fcoms
add
aas
pop
or
stc
dec
or
cwtl
push
xchg
lock
jno
int
mov
sbb
push
out
mov
push
pop
xlat
fnstcw
js
adc
adc
lret
insb
cmp
xor
popf
adc
sbb
sub
push
mov
ljmp
pushf
cmp
fwait
or
aaa
rcr
and
div
cs
xor
cmp
test
lds
cs
in
insl
add
ret
hlt
stc
mov
fwait
adc
xchg
push
cwtl
mov
dec
arpl
inc
flds
movsb
cmp
cwtl
add
mov
push
mov
test
ret
pop
pop
ja
shr
popf
stos
cmp
lds
test
test
cmpsb
lock
pop
lods
stos
jnp
aam
mov
push
mov
mov
add
cmp
test
mov
inc
incl
lock
lret
xlat
fldenv
or
lods
aas
lods
rclb
hlt
sbb
xor
jmp
and
fidivs
jnp
mov
test
call
pop
fwait
sbb
movsb
repnz
xor
daa
pop
mov
loope
int
cwtl
lea
out
aas
fwait
jp
jo
jo
push
jge
pop
insb
push
add
adc
stc
sbb
jp
dec
pop
mov
roll
and
cmp
subl
push
in
movsl
ja
pop
dec
xchg
inc
jno
testb
fisttpl
inc
fbstp
pop
jb
aad
mov
dec
sub
fdivs
cwtl
hlt
arpl
mull
outsb
pop
arpl
loopne
fcomp
add
sub
mov
es
lds
jl
adc
lahf
inc
mov
xchg
ret
fcoml
inc
out
jne
jecxz
xchg
jo
dec
mov
and
fbstp
fldt
xlat
sbb
repz
call
int3
dec
daa
js
fmull
xchg
cld
mov
mov
ja
sub
xchg
pushf
stc
inc
out
push
sbb
mov
cmp
test
fwait
adc
add
fdivrp
xchg
xchg
adc
in
inc
push
lds
icebp
shrl
pop
push
dec
adc
xor
fwait
xchg
xchg
fstpt
sub
inc
add
inc
mov
and
xor
gs
sbb
out
mov
mov
and
mov
in
les
fisubrl
xchg
fucom
out
pop
lds
xor
loope
out
cmc
fbld
cmp
popa
les
jge
fadds
mov
xchg
loop
inc
ss
sbb
mov
dec
mov
pop
mov
mov
add
fisubrl
jmp
out
push
mov
cltd
imul
mov
xchg
dec
or
inc
cmp
cmp
lcall
int3
jmp
add
inc
sub
push
cmp
cmp
push
mov
push
cwtl
xchg
imul
ficomps
mov
inc
and
cmpsb
int3
in
fwait
sbb
dec
pop
inc
sub
repnz
loop
sbb
mov
int3
imul
les
cli
mov
pusha
and
or
mov
jmp
stc
mov
xor
fildl
mov
and
adc
lea
hlt
add
hlt
xor
lds
xor
sub
cmp
pusha
or
ss
inc
mov
xor
loop
mov
rcr
rcrb
test
ja
inc
insb
jl
mov
pusha
lds
insl
sub
scas
or
xchg
jbe
xchg
jl
pop
xchg
jl
cmpsb
jo
xlat
imul
xchg
inc
sub
jno
dec
outsb
jmp
ja
sbb
ss
fwait
fs
mov
jb
pop
mov
sbb
fisttps
sti
repnz
arpl
pop
aas
sub
push
lds
bound
cwtl
jbe
or
jmp
inc
fwait
pop
sbb
scas
dec
fisttpll
inc
jp
insb
into
movsb
mov
inc
ds
movsb
ja
inc
sbb
into
vmaxps
pop
cwtl
cmp
hlt
shll
hlt
dec
mov
add
popf
dec
insl
cltd
ljmp
sub
lahf
sub
xchg
aaa
out
shll
outsl
adc
lret
mov
dec
push
mov
push
adc
mov
shlb
mov
clc
xlat
sarl
xchg
out
fists
in
imul
and
push
call
cmpsb
into
sbb
fistpll
inc
orl
sti
xchg
or
cmp
inc
test
xchg
pop
mov
or
adc
aas
pop
or
and
mov
push
xchg
xchg
into
or
ret
decb
push
daa
out
stos
out
out
mov
push
xlat
popa
mov
xor
sub
and
loope
or
andb
cmp
cmp
xor
stos
pop
out
mov
push
and
pusha
or
xchg
adc
sarl
pop
or
push
dec
mov
xor
test
decb
stos
addr16
mov
push
inc
xlat
out
mov
adc
push
fists
push
imul
mov
cmpsb
mov
dec
imul
push
add
fisttps
sbb
add
gs
js
push
pop
xlat
mov
dec
jp
add
popa
mov
gs
mov
mov
cmp
inc
into
sbb
jecxz
or
push
jbe
xor
mov
lock
mov
inc
inc
xorb
mov
insb
rcrb
adc
leave
aas
inc
cmpsb
repz
dec
or
push
fistpll
and
cwtl
shr
xchg
pusha
rolb
pop
outsb
clc
or
insb
or
inc
sub
ja
pop
jae
push
mov
mov
mov
lcall
out
mov
push
out
stc
mov
xor
ljmp
dec
push
jae
add
sbb
scas
mov
in
lock
rclb
xor
mov
or
popa
cwtl
push
lods
adc
mov
ljmp
mov
xchg
inc
push
out
je
dec
jl
out
mov
daa
mov
mov
cmp
insl
push
mov
insb
cltd
cwtl
jg
adc
dec
and
pop
push
das
icebp
movl
shll
sbb
and
int
mov
rolb
pop
rclb
popf
mov
insb
outsl
cwtl
sub
adc
aas
xchg
add
sub
jbe
or
xchg
imul
lods
push
mov
fs
jbe
or
cld
inc
adc
decl
in
je
out
adc
aas
jg
mov
scas
cmpsb
lret
jp
pop
mov
push
lahf
mov
xor
cmc
out
mov
clc
repnz
cwtl
dec
notl
cmp
popa
in
aas
xchg
or
pop
cmpsb
gs
dec
cld
mov
push
or
dec
mov
daa
nop
stos
push
out
mov
push
xor
mov
fsub
sbb
nop
arpl
gs
mov
addr16
mov
shll
xchg
cmpsb
rolb
xchg
adc
push
clc
push
lea
gs
pop
cwtl
mov
movb
xchg
or
cwtl
cmpsl
insb
mov
fildll
push
jnp
test
test
xchg
cmp
subps
clc
dec
lea
cwtl
sbb
call
aas
or
xor
and
mov
push
xchg
mov
mov
jbe
jg
jae
movl
mov
ljmp
stos
or
push
lock
mov
pop
into
popf
loope
shrl
scas
xor
lock
xchg
shlb
xor
adc
out
fisttps
sbb
push
mov
ljmp
fistps
test
jo
pop
xchg
jns
push
enter
adc
out
fildll
imul
icebp
mov
das
or
push
xchg
push
push
idivb
push
and
iret
xchg
mov
fidivl
xchg
add
mov
lea
push
imul
pop
cwtl
testl
jns
sbb
cmp
rol
mov
lea
cwtl
insb
and
adc
jl
out
andb
cmpsb
push
rorl
push
xchg
out
push
out
add
nop
mov
daa
insl
stos
xor
and
clc
mov
rorb
mov
pop
adc
adc
sbb
and
cmpsb
xor
jle
rcll
or
sub
mov
stos
out
mov
outsl
push
scas
xlat
mov
dec
cmpsl
out
fbld
loop
les
mov
and
test
dec
xlat
mov
push
lea
jne
aas
daa
jno
jns
addr16
push
rcl
pushf
mov
out
aad
in
in
dec
gs
icebp
dec
bound
push
fcoml
test
jmp
rcll
fbstp
mov
mov
mov
push
test
mov
mov
movsl
filds
imul
jae
push
stc
fcoml
ret
push
into
mov
jge
lcall
nop
icebp
fwait
xchg
ret
out
jg
sub
aad
mov
cwtl
xor
dec
fdivrs
sbb
lods
jns
clc
push
cmp
clc
movsl
push
xor
adc
aaa
int3
aaa
sub
xor
xor
push
sub
xchg
loopne
test
adc
sahf
insb
sbb
fs
adc
mov
sti
xor
popa
mov
cmpsl
cltd
mov
cli
in
ret
jno
loop
mov
add
push
in
add
push
in
add
and
jge
call
or
jecxz
adc
jge
pushf
add
jae
cmp
adc
addl
push
cmp
jo
push
orl
push
sbb
push
adc
or
dec
adcl
push
pop
sbbl
xchg
xor
addr16
add
lea
inc
mov
mov
jp
sub
mov
inc
fisubl
mov
mov
shll
pushf
movb
addr16
iret
pop
mov
out
psubsw
and
cmc
inc
mov
mov
pop
dec
inc
mov
adc
call
and
iret
mov
mov
pop
xchg
pop
std
int3
push
mov
ret
les
push
fmul
pop
ficoml
divb
repnz
jbe
cmp
and
inc
pop
inc
mov
loop
and
repz
pop
xchg
out
pop
ja
or
loop
sti
imul
dec
jp
or
mov
sbb
cmpsb
mov
aad
xchg
cmp
xchg
cmpsb
lods
sbb
shll
push
movsb
lods
inc
aas
fbld
cmp
lods
inc
aas
frstor
ja
test
pop
loop
sti
jnp
scas
jo
loop
sti
jg
lods
jo
loop
sti
movsl
mov
inc
loop
sti
cmp
mov
inc
loop
sti
xor
sar
movsl
mov
dec
loop
sti
aaa
movsl
mov
sti
sub
lret
sti
das
movsl
mov
mov
add
stos
pop
pop
lahf
lock
dec
add
and
cmp
or
mov
test
push
adc
shrl
mov
shrl
mov
shrl
dec
push
adc
lds
roll
dec
dec
adc
shll
xchg
dec
dec
adc
shll
xchg
dec
dec
adc
shll
dec
dec
adc
sarl
popf
dec
inc
adc
sarl
fwait
dec
inc
adc
sarl
cwtl
dec
inc
adc
sarl
dec
inc
adc
ret
and
sbb
pop
pop
push
lods
and
push
es
js
lods
es
push
es
js
lods
and
push
es
js
lods
sub
pop
es
js
lods
sub
pop
es
js
lods
cs
pop
es
js
lods
sub
pop
es
js
lods
xor
inc
es
js
lods
xor
inc
es
js
lods
ss
inc
es
js
lods
xor
inc
es
js
lods
cmp
dec
es
js
lods
cmp
dec
es
inc
lods
add
ss
inc
lods
add
xor
jl
inc
lods
pop
aas
xor
jle
inc
lods
add
js
lods
or
ds
dec
lods
or
cmp
je
dec
lods
cmp
jbe
dec
lods
or
js
lods
adc
es
push
lods
inc
sub
lret
push
inc
inc
adc
push
inc
dec
push
and
push
adc
dec
push
and
adc
pop
inc
push
push
cs
pop
jo
xchg
mov
dec
dec
imul
jne
lea
ljmp
clc
ja
cwtl
or
insl
mov
mov
jae
mov
nop
sbb
mov
sbb
xor
sbb
add
leave
add
sbb
mov
sbb
mov
mov
pop
mov
fcompl
rcrl
add
pop
lret
pop
mov
je
popf
dec
xor
pushf
jae
ret
dec
fimull
cmp
xor
cmp
dec
test
xor
fimull
push
cmp
xor
dec
test
fidivrl
dec
push
cmp
cmp
inc
mov
or
aas
fiaddl
push
aas
into
fisubrl
inc
xor
pop
adc
int
push
mov
push
mov
clc
push
dec
repnz
or
push
push
sahf
xor
fcomps
sub
push
popa
or
jg
sahf
sub
out
outsb
jg
stos
sub
in
jg
sahf
and
jmp
sahf
es
rorb
mov
jg
sahf
and
loop
fs
fs
fwait
cmp
jg
dec
pop
aas
les
cmp
ret
mov
pop
xor
inc
xor
sbb
std
jae
sarb
outsb
mov
pop
sub
loopne
push
les
sub
dec
sub
pop
and
test
and
andb
fsubl
pop
fisubl
pop
fsubs
push
and
push
aam
pop
mov
pop
push
shlb
push
shlb
dec
out
and
dec
enter
mov
pop
dec
enter
mov
push
cmp
inc
test
fidivrl
mov
add
sbb
jl
mov
pop
repnz
test
in
jg
sahf
or
and
jg
arpl
test
jne
sbb
std
bound
mov
sbb
ret
mov
and
divl
mov
cmc
xor
cmpb
sti
xor
mov
mov
test
roll
mov
fwait
roll
lcall
add
pop
stos
mov
fldl
ds
test
jns
fildl
add
sbb
add
pop
lods
mov
movl
xchg
lret
dec
mov
xor
push
mov
test
mov
lahf
push
mov
fldt
mov
in
dec
jg
sahf
mov
jg
lcall
xchg
sahf
cmc
or
in
jg
sahf
sti
or
in
insb
mov
or
mov
cli
ret
mov
or
xchg
adc
xchg
dec
or
arpl
mov
xchg
jp
mov
xchg
popf
lret
call
std
jns
repnz
adc
xchg
imul
and
repnz
add
xchg
push
xchg
imul
icebp
cmpsb
insb
cmp
xor
ret
pushl
dec
shlb
aas
aam
cmp
inc
fdivl
xor
mov
and
cmp
jb
jecxz
xor
imul
pop
xchg
add
dec
nop
cmpsb
sub
xchg
cmpsb
cs
pushf
cmpsb
sub
adc
fs
and
outsb
pop
sub
out
es
sahf
bound
out
in
sbb
ret
sbb
xchg
adc
sbb
xchg
insb
cli
push
jecxz
arpl
jo
adc
cmpsb
push
aas
test
adc
cmpsb
dec
or
ret
fcoml
dec
mov
psubb
pop
dec
adcb
xchg
idivl
loopne
add
add
movl
clc
add
loopne
cmp
and
mov
fcmovu
jnp
mov
push
ret
lret
mov
push
add
push
and
sti
cmpsb
sbb
sub
daa
rep
and
push
cmp
mov
sub
cmp
xchg
gs
repnz
ljmp
ficomps
out
push
cli
sbb
mov
test
push
in
ret
ret
lea
xchg
std
mov
and
jb
jp
sti
xchg
daa
mov
jne
or
std
push
push
xchg
std
sbb
xchg
adc
push
push
adc
xchg
sahf
ud2
int
dec
xchg
mov
add
shl
fwait
inc
sahf
add
addr16
dec
in
out
jnp
mov
cmp
repnz
add
xchg
imul
adc
repnz
adc
xchg
imul
sbb
jno
xchg
adc
xchg
imul
sbb
repnz
adc
xchg
imul
and
imul
imul
and
repnz
sub
cmpsb
adc
repnz
adc
fcomps
ret
fwait
test
ficompl
ret
rcr
lahf
test
ficoml
sbb
or
mov
jno
mov
dec
sbb
sub
push
sub
sub
push
sbb
pop
pop
mov
bound
cs
adc
add
pop
sbb
and
pop
sbb
pop
pop
mov
push
es
sbb
add
and
pop
pop
and
pop
pop
int3
mov
sbb
pop
pop
and
add
sub
push
pop
sub
push
pop
das
mov
sbb
push
pop
sub
add
xor
dec
pop
xor
dec
pop
aaa
mov
sbb
dec
pop
xor
add
cmp
inc
pop
cmp
inc
pop
cmp
add
aaa
add
inc
mov
sbb
mov
sbb
add
inc
mov
xor
jg
inc
mov
sbb
add
dec
mov
sbb
mov
sbb
add
dec
mov
sbb
add
push
mov
sbb
mov
sbb
add
push
mov
and
outsl
pop
push
mov
sbb
add
pop
mov
inc
sarb
jl
sbb
inc
push
cmp
aaa
cltd
inc
sbb
ds
xor
add
pop
cmp
xor
dec
sbb
pop
aas
mov
dec
add
pop
cmp
add
pop
inc
mov
add
pop
inc
mov
xor
sub
inc
mov
xor
cs
inc
mov
xor
and
pop
sbb
add
pop
dec
mov
cmp
and
dec
mov
cmp
es
dec
mov
cmp
pop
pop
push
mov
sbb
add
push
mov
sbb
pop
pop
push
mov
sbb
add
push
mov
pop
pop
mov
sbb
add
pop
mov
sbb
push
pop
pop
mov
sbb
add
pop
mov
pop
arpl
dec
pop
popa
mov
sbb
dec
pop
add
adc
add
sbb
pop
fsts
pop
or
add
inc
out
scas
adc
adc
jge
test
int3
nop
mov
in
popf
fimull
sub
sbb
or
pop
jb
adc
cmovb
jl
adc
testb
pop
xchg
outsb
pop
mov
pusha
sbb
adc
push
out
shlb
scas
mov
jp
lahf
pop
sub
and
cwtl
aad
adc
adc
jp
bound
xor
out
jbe
dec
xor
or
mov
inc
stos
shl
enter
pop
stos
dec
insb
mov
addr16
pusha
jecxz
daa
push
mov
mov
jecxz
enter
mov
in
mov
push
push
xlat
iret
mov
pop
fs
mov
insb
repz
fbld
lock
mov
stos
fildll
jp
or
push
out
pushl
jbe
add
or
stc
push
mov
out
mov
push
in
xlat
mov
dec
ljmp
inc
out
mov
push
sbb
mov
and
cmpsb
jno
dec
mov
dec
xchg
sbb
sub
cmpsb
insl
push
dec
sub
adc
sub
or
jae
std
daa
stc
stos
mov
inc
testl
pushl
or
test
daa
mov
jecxz
mov
mov
mov
xor
gs
jae
push
inc
fcoml
xor
cmc
loope
roll
in
dec
mov
icebp
dec
dec
mov
jp
mov
and
cli
shl
fdivl
or
sub
je
pop
pop
test
and
or
jnp
mov
push
add
shlb
dec
adc
daa
fbstp
imul
dec
es
xor
push
or
push
add
hlt
xchg
xchg
adc
xchg
test
mov
into
pop
push
mov
dec
xorl
rol
add
rcl
fistps
std
inc
fwait
bound
xlat
sub
scas
aad
sti
and
push
mov
push
xchg
stos
push
inc
mov
push
sub
sarb
jno
xchg
inc
and
loop
or
xchg
mov
adc
jno
xchg
mov
bound
xor
mov
and
jne
adc
push
push
push
and
cli
xor
mov
inc
test
jmp
sbb
mov
lock
pop
aam
dec
xchg
repz
adc
repz
mov
lcall
inc
push
xorl
cwtl
and
daa
mov
push
lcall
sbb
mov
mov
xor
adc
pop
and
in
decl
mov
or
out
es
sub
std
adc
jo
int3
mov
int
pop
xor
mov
jnp
mov
filds
iret
pop
or
mov
xchg
or
mov
xor
mov
jecxz
repz
push
sti
sub
inc
cld
je
fdivrl
xchg
push
int
shl
push
adc
out
fstpt
popfw
aaa
pop
lcall
dec
ret
cmp
mov
mov
mov
rol
aam
add
and
mov
je
stos
mov
call
hlt
cmp
add
pop
lcall
out
rcr
jl
add
repz
push
push
movsb
scas
xchg
and
aaa
xchg
rolb
int3
fs
int
pushf
mov
push
cmc
rclb
xor
add
mov
popl
rolb
ret
pop
mov
aam
xor
gs
pop
bound
adc
test
js
push
mov
das
sbb
and
dec
inc
push
xchg
shrb
inc
push
mov
aad
pop
orl
adc
mov
repz
rolb
adc
xchg
data16
push
ficompl
inc
mov
mov
ret
aam
aam
pop
test
sub
aad
loope
inc
dec
mov
mov
inc
sub
sub
out
aam
jae,pt
cmpsb
mov
adc
jge
aam
or
sub
int
push
or
xchg
push
mov
inc
cmp
adc
aam
push
adc
xor
data16
iret
pop
shr
fisttpl
jecxz
sub
fbld
jecxz
or
in
push
mov
mov
enter
enter
repz
ds
adc
cmpsl
cmp
xor
dec
fdivl
movl
inc
adc
rcrb
ret
cli
repz
xor
xor
ja
dec
ja
fwait
into
pop
loopne
or
adc
int
cmp
std
jge
xchg
jge
adc
jae
or
jmp
cmp
stos
enter
ss
cmp
pushl
mov
sub
xchg
pop
pop
mov
jbe
dec
mov
outsb
into
test
sbb
push
aam
mov
push
lret
xor
jp
daa
or
lret
out
mov
hlt
filds
cmp
push
aam
mov
xor
or
and
mov
jo
adc
stc
and
repz
mov
es
or
and
stos
cli
imul
xor
lds
jg
mov
cltd
mov
push
xchg
sbb
loopne
push
mov
pop
push
mov
mov
inc
or
jns
aam
push
and
sbb
mov
je
add
cmp
xchg
inc
out
sbb
push
push
popa
lods
or
mov
out
cmp
sub
push
jno
movb
shlb
adc
mov
push
push
mov
dec
into
repnz
dec
aad
adc
ffreep
xlat
pop
jns
test
or
lods
mov
hlt
mov
paddq
mov
xchg
cld
add
out
mov
adc
xlat
xchg
pop
into
inc
add
mov
push
int
jo
push
adc
mov
adc
xor
sarb
stos
aas
jnp
mov
mov
xor
icebp
in
xchg
cmp
imul
gs
jb
mov
cmpsb
test
pop
fcoms
leave
bswap
mov
mov
mov
jmp
and
mov
xlat
add
test
mov
aam
push
xor
mov
es
adc
inc
adc
jbe
pop
mov
xor
add
inc
xchg
pushf
push
rcll
inc
adc
add
insb
data16
lahf
pop
or
mov
lock
or
sbb
adc
mov
call
scas
into
or
movsl
xchg
cltd
call
out
lock
repz
in
add
adc
into
insb
mov
adc
pop
and
pushf
sub
inc
adc
dec
lret
outsl
cmpsb
inc
pusha
xchg
lods
mov
jl
shlb
orl
repz
and
aam
stos
gs
call
xor
lret
pop
inc
inc
int3
and
add
addr16
in
push
xlat
sub
repz
sub
ljmp
add
ds
in
into
cs
hlt
nop
adc
push
and
stos
push
jnp
scas
jae
jle
cltd
dec
imul
jae
push
aad
jmp
sahf
out
and
roll
lds
popl
scas
xchg
xchg
cmp
shll
dec
bound
lds
push
xchg
inc
adc
gs
or
pusha
mov
cmpsb
push
xor
mov
in
leave
mov
clc
dec
jmp
fstpl
gs
fisubl
flds
xor
loop
insb
lahf
jno
and
repnz
sbb
add
sbbb
mov
fs
call
fs
mov
fs
adc
loopne
push
mov
repz
mull
fstpt
in
mov
ljmp
jg
push
mov
and
mov
xchg
gs
lock
push
ja
ret
xor
push
mov
jb
in
fcom
xchg
cli
cwtl
mov
fwait
jae
cwtl
inc
pop
dec
shlb
sub
insb
inc
movsl
test
daa
sbb
iret
rorb
das
sub
leave
adc
lret
sti
test
int3
arpl
xchg
cwtl
push
add
fbld
cltd
dec
jmp
and
test
mov
adc
pop
imul
loop
push
lock
test
imul
adc
xchg
sbb
in
push
rorb
lods
lds
or
sub
jae
dec
push
js
inc
scas
push
fcompl
push
cld
dec
aas
and
ja
push
mov
insb
jp
insb
pop
into
adc
dec
mov
out
lret
cmp
xor
mov
adc
push
inc
in
rorl
cmpsl
dec
jo
lcall
icebp
data16
ss
xor
and
imul
lock
mov
sarb
and
loope
lods
dec
fldcw
dec
mov
mull
adc
sub
dec
cwtl
and
je
fiaddl
fs
jge
rcrb
inc
shlb
and
outsb
ja
mov
cmovs
lds
shrb
cwtl
fisubs
popf
sbb
movsb
pop
testb
out
push
sbb
int3
popa
mov
int3
xchg
pop
inc
in
shlb
jle
or
sbb
push
inc
inc
movsb
inc
lds
cmp
loop
icebp
aaa
mov
sbb
push
jl
in
add
vpsubb
mov
and
lahf
int3
pop
fdivr
add
pushw
cmp
sbb
xchg
mov
cmpsb
push
push
sub
dec
sbb
movsb
sbb
je
xchg
push
das
shlb
aaa
jb
mov
add
cs
loope
test
mul
movl
jbe
scas
pushf
add
jbe
in
into
xor
adc
loop
dec
jo
sahf
int
pop
fsubrl
fildl
lods
cld
lods
data16
lret
or
cmp
mov
and
andl
mov
sbb
jae
cmp
jp
add
cmpsb
repnz
xchg
dec
hlt
and
sub
lock
repz
rcr
fs
pusha
jbe
or
js
inc
mov
insl
scas
loope
push
int3
xor
insb
mov
ja
fisttps
pop
mov
sbbb
xor
inc
ljmp
or
test
fcmovb
add
incb
jnp
dec
and
fsubs
push
push
daa
sub
xor
loope
mov
mov
mov
mov
flds
add
add
pop
jmp
sub
dec
or
movb
add
cltd
push
cmp
or
or
jg
add
push
outsb
dec
popa
pop
aaa
hlt
push
iret
fcoml
test
adc
jmp
mov
lock
and
orl
incb
out
sub
mov
sbb
jecxz
mov
and
xor
pusha
cli
cmp
or
test
ret
mov
popa
xlat
ja
push
subb
cmp
jmp
sub
lcall
insb
adc
fdivs
mov
scas
jle
addl
add
dec
int
jns
adc
leave
sbb
xchg
dec
movl
repz
push
sbb
into
fsubl
adcb
cs
cwtl
js
pop
enter
out
or
push
loope
dec
scas
sahf
mov
fidivrs
pushw
ret
mov
insl
mov
sub
pop
or
adc
lahf
jecxz
or
gs
jae
orps
inc
or
xorl
pop
iret
and
inc
or
test
stos
scas
iret
mov
repnz
push
ss
add
push
sbbb
addr16
sub
lret
dec
cmc
les
cmpsb
out
sbb
add
sbb
pushfw
cmpsl
jno
cwtl
aam
xor
fninit
fs
xor
je
ljmp
xor
ja
mov
leave
mov
adc
sti
push
movsl
inc
cwtl
mov
jb
or
dec
clc
mov
add
push
and
adc
inc
stos
jg
sarb
or
movsb
push
xor
roll
das
xor
outsl
data16
inc
dec
stos
fwait
and
lock
push
jno
jecxz
loop
stos
mov
jae
xchg
std
adc
lcall
pop
jg
and
dec
dec
mov
imul
or
repz
sub
push
movsl
dec
popf
and
or
jle
xchg
sahf
test
sbb
sub
loop
pushf
mov
xchg
out
jmp
jbe
or
cli
jno
sbb
cld
sahf
lea
jno
addl
xchg
mov
add
dec
leave
ss
test
sbb
xor
test
add
cmp
aad
stos
sti
pop
push
nop
inc
push
mov
sub
mov
ficoms
movsb
push
xchg
xor
out
inc
arpl
xor
repnz
cmp
lea
mov
cwtl
mov
jecxz
lods
jns
cli
mull
pop
mov
xchg
push
cmpsb
addl
sti
lods
inc
push
jae
and
mov
mov
enter
js
leave
sbb
mov
and
pop
xchg
jl
mov
sbb
ret
mov
in
push
fsubrs
scas
call
adc
push
int
pop
dec
push
fs
mov
sub
mov
add
out
xchg
jno
test
jbe
dec
enter
mov
add
adc
adc
out
push
scas
call
pop
push
jae
shrb
lcall
popa
add
add
cmp
data16
xor
js
mov
sub
inc
arpl
xor
mov
cmp
neg
sar
pop
jl
fbld
jle
mov
ffreep
fiaddl
dec
cmp
loope
push
xchg
jg
sbb
clc
lcall
in
in
cmp
cmpsl
idivl
aad
repz
in
dec
ljmp
xor
or
aam
mov
rcll
sub
pusha
mov
xchg
mov
data16
add
add
fdivr
push
mov
cmp
sbb
mov
adc
mov
and
fstpl
stc
cmc
cmp
mov
sub
leave
inc
or
in
cmp
mov
mov
jno
loop
fsubrl
adc
scas
rcrl
xor
add
sahf
fmull
jae
out
mov
cmp
movsb
mov
adc
mov
xchg
adc
lock
mov
adc
mov
mov
dec
push
scas
cltd
mov
or
fbstp
pop
or
stos
adc
out
jmp
sbb
test
push
mov
jg
push
pop
push
test
je
out
jle
xchg
push
pop
adc
sti
int
xchg
pop
adc
xchg
into
dec
sbb
sub
addr16
xor
mov
js
add
js
mov
js
xor
aad
push
jno
and
std
pop
call
jmp
push
jmp
fldcw
ss
mov
subb
rol
inc
push
ret
shll
mov
ss
jns
dec
push
rorb
imul
clc
inc
jae
sbb
out
imul
pushw
mov
adc
mov
lods
jno
pushf
sbb
nop
ds
mov
subb
sbb
mov
sub
xchg
bound
xchg
mov
mov
xchg
jb
loop
fisubs
push
mov
sub
inc
std
inc
jns
lds
ja
popa
fs
lds
push
cld
push
xor
mov
mov
sub
shl
mov
std
loop
leave
jg
fs
fsts
mov
mov
dec
call
pop
sbb
and
adc
ja
and
loope
and
loopne
and
insb
es
inc
loopne
jle
sbb
cli
mov
add
dec
hlt
mov
inc
je
into
imul
xor
movsb
fidivrs
cltd
jnp
inc
jns
jecxz
mov
add
push
or
push
std
inc
sbb
shll
inc
mov
pop
mov
fnstsw
mov
lahf
mov
xlat
leave
mov
in
jae
mov
xchg
push
aam
in
bound
sbb
int
fistpl
lds
mov
fmull
rol
in
pop
loopne
cmp
inc
cli
push
adc
add
jns
icebp
push
pop
push
xchg
popf
jmp
xchg
mov
mov
fsubrl
mov
loop
std
out
adc
ficoms
push
push
rorb
addr16
stos
add
lahf
sub
pop
dec
pop
mov
cmp
pop
jge
les
add
adc
add
cld
stc
dec
add
test
push
rorb
rorl
dec
jmp
jp
test
iret
mov
ss
test
jno
movsb
movsl
imull
mov
lds
lds
lahf
outsb
fisttpl
inc
dec
push
dec
mov
pop
sub
mov
imul
lods
or
sbb
shlb
and
fsubrl
aaa
cmp
js
mov
pop
jno
and
call
pop
lea
aas
jmp
cmp
test
dec
push
pop
test
fisttpll
xchg
cmp
test
jl
xchg
xor
call
or
in
or
fwait
adc
push
sbb
pop
or
inc
lock
push
test
add
lock
iret
push
aad
fistps
sub
faddl
shll
dec
in
leave
data16
jge
xor
xor
mov
insl
int
adc
push
out
lock
test
inc
out
cmpsl
daa
inc
lret
cld
push
call
inc
jo
or
jbe
adc
mov
jle
stos
inc
sbb
mov
mov
test
scas
mov
cmp
testl
into
pushl
xchg
ja
push
push
fiaddl
dec
inc
fstpl
dec
imul
pop
push
movsl
xor
mov
inc
dec
addr16
mov
rcll
fdivrl
adc
fld
stos
push
jecxz
lret
push
es
hlt
sub
ja
out
scas
push
inc
enter
mov
jmp
mov
mov
test
dec
jecxz
loop
imulb
sbb
out
sarb
lock
addr16
inc
jmp
imul
fwait
add
sarl
test
cmp
jae
sbb
in
pop
mov
scas
mov
inc
mov
cmp
jge
cmp
push
push
and
inc
out
lds
add
jmp
jo
ret
psubsb
push
dec
fbld
xor
jns
call
dec
mov
fwait
xor
repnz
jecxz
out
les
movsl
cmp
and
into
jg
jmp
fucom
lds
fnstenv
jnp
dec
je
repz
sbb
xchg
mov
ret
jae
xchg
mov
mov
jp
aad
sbb
or
xor
jnp
lea
cltd
xor
ffreep
or
lds
icebp
pop
stc
mov
mov
fisttps
andl
cmp
pusha
lds
inc
dec
fimull
add
inc
sub
sahf
sub
inc
in
call
mov
movsb
mov
lahf
push
sbb
mov
lcall
xor
jo
sbb
xor
push
xlat
cmp
sahf
rorb
mov
mov
fs
adc
out
dec
pop
iret
jge
enter
mulb
xor
xchg
inc
ret
xchg
mov
pop
push
test
popf
scas
cmp
add
arpl
jb
sbb
dec
es
arpl
pop
adc
mov
cwtl
xor
je
sbb
pop
dec
or
cmp
lods
jecxz
xchg
imul
sub
pop
inc
sbb
loop
xor
out
test
ljmp
xchg
cmc
push
in
mov
ds
jle
mov
out
sbb
in
outsb
test
jp
xchg
mov
jno
mov
mov
dec
push
int3
lcall
rcr
inc
xchg
mov
repnz
fisubs
outsb
or
imul
ret
imul
imul
aas
fwait
sbb
xchg
mov
mov
out
push
xor
add
cmp
cmp
hlt
sub
icebp
out
or
sub
jne
pop
add
mov
mov
push
fsts
dec
mov
fcmovnu
ror
cltd
xchg
add
aaa
jmp
or
lcall
lret
xchg
xchg
inc
repz
fcoml
ja
cld
dec
idivb
hlt
dec
mov
mov
bound
jmp
pusha
aam
cmpsl
es
scas
pop
jne
sbbb
outsl
add
jmp
daa
cltd
je
xchg
push
mov
fwait
adc
mov
inc
repz
hlt
iret
gs
test
aam
pusha
cmp
adc
sub
shll
imul
ljmp
add
cltd
pop
pop
std
shl
test
ss
data16
notl
daa
cmp
cs
int3
inc
mov
idivl
and
cmp
sub
jnp
push
push
cld
add
aaa
hlt
shl
adc
fcompl
sbb
popf
push
pop
scas
sub
jp
cmpsl
notl
sbb
and
scas
add
aad
xor
fdivrs
mov
mov
out
dec
adc
aam
pop
outsl
mov
lock
fisubrl
aad
jne
jne
cmp
jl
jae
lret
sbb
lods
cld
mov
adc
lret
fildll
aam
inc
call
mov
sahf
and
scas
sti
test
xchg
inc
nop
aas
mov
cmp
mov
aaa
add
das
mov
adc
pop
push
fadds
fisttpl
out
inc
outsl
pop
pusha
imul
mov
lods
out
jmp
jle
fiadds
movsl
and
sahf
iret
lret
inc
xchg
mov
idivl
cmpsb
int
jb
insb
outsb
and
cmp
lahf
adc
bound
out
push
mov
insl
xor
aad
and
repz
sub
stos
add
add
test
sub
push
lods
jno
mov
ret
enter
pop
cld
jmp
clc
xchg
jge
sti
gs
sub
dec
push
sub
fisttps
lds
addl
dec
xchg
xlat
xor
mov
dec
in
ja
xchg
lds
mov
into
data16
movsl
pop
push
mov
jmp
and
subb
outsb
icebp
dec
pop
ja
dec
pop
iret
jne
in
jle
aad
es
sub
xor
jne
dec
mov
jp
insl
int3
cwtl
xchg
inc
sbb
push
jns
sbb
fcomps
xchg
stos
jecxz
outsb
xlat
lea
sub
mov
aad
out
addb
testl
adc
popf
mov
fwait
sub
xor
adc
xor
lods
dec
nop
sbb
stc
int3
inc
jecxz
test
pop
aad
lea
aam
push
push
sbb
xor
mov
sbb
mov
rclb
ret
lahf
into
out
dec
repz
clc
add
mov
cwtl
adc
aad
ficoml
push
testb
call
add
mov
mov
pop
push
leave
loop
out
inc
dec
ffreep
jo
loope
pop
sbb
dec
in
iretw
mov
ret
jbe
mov
xor
loopne
sbb
fisubs
mov
dec
dec
lea
cmp
sub
loopne
jmp
fwait
push
fsubp
dec
add
mov
add
ja
leave
cmc
imul
mov
call
or
xchg
mov
ret
cmp
dec
xchg
pop
dec
repnz
push
arpl
rorl
jmp
adc
lret
jae
mov
sbb
lds
ret
lods
pop
inc
adc
sub
pop
iret
adc
fisttpl
cs
das
mov
sti
out
push
jno
andl
movsl
dec
leave
scas
mov
dec
cwtl
inc
add
xchg
xchg
bound
add
xchg
out
test
cmpl
sub
cs
scas
dec
jg
rcrb
ss
push
lret
sahf
or
addr16
and
xchg
ret
lods
out
sbb
mov
fildll
popf
dec
pop
mov
push
gs
out
fmull
jmp
mov
lret
sub
sub
and
pop
mov
jge
dec
jns
loopne
lcall
repnz
pop
push
sbb
icebp
jo
jb
add
mov
scas
or
jbe
cmp
pop
push
fldl
popl
fstps
jb
add
je
and
aaa
fdivp
mov
ja
into
leave
pop
sbb
enter
pushf
xor
icebp
testl
je
imul
mov
lods
pusha
xor
loop
fwait
loop
mov
dec
push
int3
aas
xor
xchg
and
dec
push
cmp
mov
outsb
pop
sub
das
arpl
dec
filds
outsl
push
lea
nop
fs
mov
ja
mov
xor
xchg
sti
xchg
lods
jecxz
or
mov
cmp
adc
mov
mov
lock
jae
arpl
jne
loop
pop
pop
daa
rol
and
into
cmp
and
or
andl
xchg
adc
jg
int3
gs
icebp
imul
add
jle
in
mov
and
and
adc
into
mulb
xor
cmp
sub
mov
loope
stos
aaa
or
jp
dec
out
mov
cmp
push
push
inc
lret
fstpt
pop
mov
loope
nop
mov
xor
cmpb
mov
shl
pop
clc
cltd
aad
je
rorl
sarb
int3
sub
fcoms
mov
ret
xchg
jmp
cmp
xchg
inc
cli
cs
lds
cmp
movsb
in
fwait
popa
push
mov
pop
and
mov
sbbl
xchg
out
scas
out
insb
xor
test
jg
dec
inc
jbe
fs
iret
test
lretw
rcpps
dec
insl
mov
outsl
cmp
sbb
lret
imul
add
jmp
aad
add
scas
mov
inc
fwait
sbb
fcoms
dec
dec
int3
xor
xchg
pop
fucomi
lea
sti
out
xchg
dec
roll
adc
push
and
jns
repnz
mov
dec
repz
mov
ja
xor
mov
and
pop
cld
mov
shlb
fwait
in
mov
movsl
cmp
pop
add
mov
int
pop
mov
pop
pushf
or
xchg
sbb
sbbb
je
mov
ja
pusha
sub
movsb
fcmovnb
orb
in
sub
jmp
pop
lahf
movsl
push
fdiv
push
adc
ds
stos
xchg
repz
sar
fistl
adc
lret
cmpl
out
data16
add
sub
ficomps
or
xchg
xor
dec
push
push
push
sbb
outsb
lcall
dec
push
adc
adc
sub
jecxz
rcll
lods
idivb
addr16
sub
mov
loopne
ret
jnp
aaa
inc
addr16
or
jns
or
xchg
dec
test
rorb
pop
xlat
call
or
dec
inc
jl
push
add
fcoms
mov
fcoms
mov
and
cli
pop
jns
das
aas
mov
push
sub
mov
dec
mov
dec
cld
inc
movsb
js
and
pop
jmp
or
test
xchg
sub
roll
add
pusha
aas
xor
cmp
cmc
popa
cs
push
cmpsb
add
lahf
repnz
mov
jge
dec
inc
adc
sbb
add
dec
add
das
filds
sbb
jbe
jl
ljmp
mov
pop
xchg
adc
in
push
sbb
outsb
and
insl
fst
sub
or
adc
stc
dec
pop
push
js
aam
sbb
add
and
sarb
jle
fidivrl
dec
addb
push
ffreep
pop
add
push
sbb
xchg
adc
pop
inc
add
rcl
pop
adc
int3
pop
inc
hlt
xchg
push
mov
jne
scas
pop
mov
in
lcallw
fdivrl
addl
aad
xchg
cmc
cs
mov
push
repnz
cmpsb
daa
je
scas
jae
icebp
movsl
jae
xor
imul
push
mov
out
mov
lcall
jg
aas
pop
test
jl
jmp
dec
iret
lds
cmp
loop
add
push
call
aad
xor
lods
out
xchg
test
xchg
adc
popw
inc
lcall
insb
mov
mov
pop
add
movsl
stos
sub
mov
and
adc
pop
jae
pop
sub
out
loop
clc
dec
dec
push
lret
into
flds
fwait
call
pop
test
mov
dec
cmp
jns
dec
push
add
loop
shll
ds
inc
lret
xchg
pop
and
cwtl
and
aad
cmp
and
fs
inc
fcmovb
adc
lret
pushf
xor
lods
inc
das
das
cltd
sub
and
into
fstpl
ja
dec
pop
test
sbb
sahf
adcb
and
cwtl
movsb
or
nop
inc
inc
cld
stc
dec
fucom
dec
inc
lret
jb
repnz
in
xchg
shll
add
in
xchg
leave
mov
int
lds
fcom
pop
inc
enter
mov
mov
pop
fsubl
inc
es
int3
popa
lods
out
xor
xchg
push
xor
stos
stos
aaa
sub
divl
pop
xchg
mov
mov
jmp
mov
pop
mov
icebp
loope
in
xchg
add
mov
sub
sahf
pushf
add
mov
cmc
mov
xor
fisttpll
inc
fdivr
push
mov
imulb
mov
movsl
stos
push
pop
loop
xchg
sbb
rcll
ret
movb
std
mov
test
or
push
cld
cmpsl
mov
pop
mov
test
jnp
ljmp
in
test
add
lret
xchg
fwait
imul
push
jnp
xor
jae
sub
mov
inc
xchg
aaa
mov
sbb
adc
push
or
pop
repnz
dec
jnp
mov
cmp
fs
mov
pop
jecxz
pop
ss
sub
fdivl
sbb
fdivl
push
je
inc
push
fidivrl
dec
or
bound
loopne
or
popf
dec
imul
es
dec
and
adc
inc
xor
xor
sbb
or
mov
fistpl
fwait
or
pop
call
xlat
sbb
xchg
xor
test
test
lds
aam
imul
cwtl
mov
jecxz
push
fwait
out
add
lahf
pop
jb
add
cmp
bound
push
inc
vaddsubpd
sbb
push
jb
cmp
lods
test
push
lods
in
and
jo
fwait
dec
mov
and
xchg
fdivrl
xchg
dec
repnz
aam
std
mov
cmp
pop
pop
in
icebp
add
or
adc
dec
add
dec
data16
imul
mov
inc
mov
pop
hlt
dec
add
jle
fnstsw
cwtl
imul
cmpsb
cli
imulb
fnsave
scas
adc
fiaddl
and
add
and
xor
icebp
leave
jp
ret
sub
das
push
sarb
ds
out
add
mov
scas
pop
mov
push
jmp
filds
dec
sbb
loope
insl
insl
into
scas
jp
mov
fs
idivb
mov
dec
xchg
outsb
shrb
cmpsl
loop
push
mov
or
cwtl
movsb
cmp
inc
xor
test
add
mov
inc
scas
xor
xchg
pusha
inc
add
cld
mov
hlt
add
dec
jnp
iret
xchg
sbb
pop
arpl
dec
ds
mov
lret
sub
in
ds
xchg
or
mov
imul
enter
orb
ret
jge
mov
and
mov
mov
pop
and
or
scas
lahf
push
or
push
cmovl
and
xor
xchg
outsb
inc
add
lret
rolb
push
and
popa
cmpsb
adc
xchg
clc
pop
add
data16
mov
lret
xchg
dec
cld
mov
jbe
sub
push
adc
leave
shrb
or
aaa
cmp
mov
stos
fucomi
mov
in
rorl
xchg
mov
mov
jae
jle
mov
pop
push
mov
fldl2e
movsl
push
sbb
jbe
pop
push
sub
push
fstp
xchg
pop
and
xor
loopne
in
mov
xchg
mov
dec
popf
cwtl
fs
insb
mov
or
sti
fisubl
pop
testb
xlat
js
or
jp
jae
loopne
imul
popf
inc
dec
mov
jbe
fwait
rep
pusha
mov
insl
pop
lcall
cli
fs
cwtl
xchg
imull
rcl
js
xchg
mov
push
js
dec
rcl
jg
bound
and
adc
ds
push
pop
mov
mov
mov
dec
inc
sahf
inc
sub
cmp
ljmp
jp
pop
lcall
adc
scas
aas
or
and
std
test
popl
mov
adc
test
lea
mov
cmp
out
cli
push
mov
lock
in
lods
add
movsb
push
cmp
xchg
add
lock
sbb
mov
divl
out
std
cmpsl
fisubrs
adc
inc
inc
loop
pop
inc
xor
test
xlat
lock
cld
nop
mov
xchg
mov
hlt
mov
adc
mov
dec
enter
inc
and
xchg
xchg
int
fs
push
sub
cmpsl
outsl
call
sbb
ss
in
arpl
fwait
push
xchg
push
cmp
sub
adc
leave
jns
fdivp
loop
rorb
push
ljmp
lock
pop
test
pop
mov
stos
inc
push
clc
xchg
cwtl
imul
lahf
rorb
popa
rol
popf
testl
xchg
aad
dec
jg
pop
and
leave
sub
pop
fiadds
mov
in
pop
pop
repnz
push
push
cmc
repz
popl
inc
sbb
jbe
sub
add
ret
lods
mov
ds
test
jo
mov
and
mov
mov
lock
aad
dec
dec
pop
pop
aad
pop
push
out
lock
jns
stos
pop
mov
push
lahf
pop
adc
subb
sub
mov
mov
lods
sbb
jle
push
cli
in
push
dec
mov
scas
js
sti
bound
pop
cmp
notl
sub
jmp
cmp
jne
xchg
jg
mov
pusha
pop
cs
sbb
and
pop
cwtl
jae
aas
pop
jle
sahf
xor
orl
mulb
into
stos
les
out
xchg
into
jle
and
and
jmp
mov
sbb
cs
insb
lahf
mov
shl
and
scas
dec
sarl
xchg
mov
addl
repnz
pop
xchg
js
lret
ret
ja
imul
mov
add
subb
sbb
aad
sub
push
pop
pop
fadds
cmp
cmp
pop
pop
pop
mov
jge
push
push
pop
lods
xchg
jmp
in
add
xchg
scas
sub
enter
jge
out
jle
pop
mov
adcl
jmp
push
mov
jns
add
xchg
dec
out
xor
push
cmp
test
sar
jl
popa
je
jmp
add
adc
inc
mov
mov
inc
icebp
xlat
push
mov
rsqrtps
ficomps
testl
popa
es
inc
lods
sti
int3
xlat
loop
out
cli
hlt
mov
iret
mov
shll
cmpb
lds
fidivs
and
mov
cld
jb
rcrb
aaa
jno
inc
xor
pop
pop
xchg
jg
mov
xchg
int3
pop
lea
jo
xlat
mov
mov
add
mov
pop
fnstenv
mov
dec
jle
mov
push
inc
jne
xchg
dec
repz
or
ljmp
jne
ljmp
mov
jecxz
dec
test
cltd
xor
test
lret
or
mov
and
mov
sub
pop
adc
adc
loop
push
scas
repz
lea
jp
int
popl
dec
lahf
ljmp
into
xor
stos
orl
int3
xchg
jno
push
push
int3
rcrl
sub
push
jno
test
shlb
scas
push
ss
aam
xlat
dec
jnp
cmp
rclb
fiaddl
jae
mov
test
fdivrl
mov
hlt
je
mov
ds
mov
enter
sbb
jmp
jae
out
je
je
push
inc
addb
adc
psubsw
mov
adc
xchg
jl
xchg
ret
mov
pop
pop
daa
test
mov
xchg
ret
loop
pop
adc
clc
insl
rclb
jns
repz
dec
add
dec
pop
mov
aad
jns
loop
push
ljmp
adc
and
cmp
xor
testb
xor
scas
sub
adc
lahf
push
cmpsl
inc
out
jno
ficomps
dec
sub
mov
lret
sbb
jge
push
xor
jg
cltd
ret
add
sub
jl
jge
dec
mov
daa
mov
scas
xor
xor
das
jns
decl
xchg
and
sub
movsb
cwtl
pop
adc
or
xor
les
rcl
pop
dec
dec
dec
sbb
mov
mov
pop
dec
imul
lock
aad
dec
cmpsl
add
or
push
mov
cmp
das
data16
repz
mov
pop
in
inc
mov
cmp
sub
mov
stos
mulb
push
out
insb
jle
adc
adc
jl
pop
or
and
cmpsb
dec
sti
dec
adc
mov
xchg
out
and
scas
adc
nop
jmp
inc
mov
inc
das
adc
test
xor
clc
lahf
shr
nop
add
mov
jl
cltd
jg,pt
pop
push
pop
ret
cmp
aad
pop
out
mov
push
test
cmp
sub
xor
xor
jp
leave
sarb
std
sub
xchg
test
mov
inc
push
insl
dec
jle
stc
xchg
out
xchg
dec
dec
mov
cmp
gs
call
push
xchg
flds
aam
xchg
and
add
popa
mov
pop
pop
mov
sbb
pushw
nop
frstor
lcall
lods
jb
lods
xchg
jg
mov
xor
insb
mov
lods
mov
xlat
fmul
lret
cltd
xchg
test
mov
pushf
das
stos
or
adc
jnp
sbb
aas
cld
xchg
test
clc
push
jnp
repnz
fnstsw
sub
pop
hlt
push
lret
mov
jns
incb
stc
cmp
jnp
fidivl
xchg
xchg
push
cmpsb
xchg
test
dec
outsb
inc
dec
inc
stc
dec
mov
xor
sub
popa
lea
or
mov
stos
lods
out
mov
push
sub
sbb
outsb
add
xchg
in
add
rolb
add
xor
dec
sub
jns
inc
dec
mov
mov
lods
cs
mov
out
out
lahf
jno
std
call
and
adc
bound
cmp
nop
in
dec
sub
icebp
push
lock
dec
outsl
push
aad
push
cmp
test
xchg
mov
aad
stc
xchg
pusha
xchg
mov
add
add
push
sti
addr16
mov
out
and
ret
or
sbb
imul
lret
xchg
add
shrw
js
push
jno
cmp
out
sti
or
xchg
int
imul
fiadds
mov
mov
push
movsl
mov
fsubs
rcrl
and
movsl
lahf
iret
imul
rcll
xlat
loop
into
sbb
xchg
loope
pop
adc
inc
jle
mov
mov
mov
imul
repnz
mov
xor
jbe
push
or
push
mov
cmp
out
mulb
testl
ret
lds
inc
xorb
out
dec
xchg
call
cmp
shll
lret
cmp
add
push
sbb
daa
cmp
insl
mov
lds
or
mov
in
out
inc
mov
sbb
sarb
pop
dec
fnstcw
mov
sbbl
jae
xchg
adc
repnz
fmull
add
adc
shrl
test
into
jmp
mov
adc
dec
rcl
inc
add
in
shl
stos
inc
cmp
loop
aaa
inc
movsl
fucomip
lret
lods
fldl
repnz
ds
addb
xchg
pop
subl
cmp
push
xchg
aam
mov
cmc
inc
clc
sbb
cmpsb
jg
or
cmp
mov
int
cmpl
xchg
rol
rclb
sub
out
daa
lods
mov
icebp
jo
mov
xor
iret
in
lahf
roll
call
inc
cld
in
mov
or
sub
scas
xchg
mov
lods
jne
fmull
aad
xchg
mov
dec
push
cwtl
and
pusha
test
lahf
xlat
jle
dec
stos
push
sarl
rorl
aaa
int3
and
outsl
test
outsb
adc
mov
dec
out
int
clc
fwait
je
jb
push
int
xchg
xchg
movsl
push
es
xorb
ljmp
lock
dec
nop
aas
dec
mov
test
mov
sub
mov
sarl
xchg
int3
and
int
lret
mov
jno
xor
xor
mov
mov
adc
and
cltd
dec
sbb
xlat
dec
dec
sarl
jle
sub
cltd
out
cmp
imul
xchg
dec
xchg
xor
out
movsb
push
jmp
insb
jnp
push
vcvtsd2ss
repz
dec
push
out
movl
inc
in
sbb
xchg
popa
mov
push
loope
xor
fistl
pop
fmul
mov
pop
out
icebp
xchg
adc
sbb
int
stc
xor
push
xlat
popa
test
jl
mov
test
push
dec
test
push
mov
push
lods
push
ret
sbb
inc
mov
ja
outsb
lods
aam
scas
mov
ret
xchg
pop
pop
in
aaa
cmpsl
in
mov
dec
jl
add
cmp
jae
and
std
ljmp
lods
xor
sbb
dec
enter
sub
and
inc
leave
adc
out
hlt
scas
stc
movsl
sub
push
mov
dec
loop
out
fs
jecxz
aad
js
movsb
push
pop
daa
mov
ja
push
pusha
dec
ds
clc
les
xchg
inc
jo
pop
fildll
cltd
jg
fwait
lds
mov
mov
pop
inc
cld
pop
call
xchg
hlt
sbb
sti
or
inc
out
imul
outsb
sar
sbb
in
dec
inc
adc
mov
jmp
adc
out
add
or
inc
jb
int
or
ret
push
xchg
cwtl
sbb
test
das
daa
in
push
pushf
push
dec
daa
xchg
aas
fisubl
push
fistpl
fldl
jnp
cli
xchg
lods
outsl
xchg
out
mov
fnstcw
jecxz
mov
sbb
xor
jnp
mov
les
mov
adc
jo
repz
mov
loop
insl
push
sub
scas
subb
ficoml
xchg
adc
lock
dec
movsb
adc
add
cld
jge
xor
cmp
xor
rorb
push
cmp
xor
sub
cli
sbb
fisttpll
mov
shl
jnp
mov
ret
test
xorb
mov
cmp
dec
cltd
push
push
mov
pushf
daa
push
cmp
scas
push
rolb
mov
in
and
xchg
mov
mov
into
testl
sbb
mov
sbb
popa
or
add
dec
cmp
test
mov
lea
sahf
ljmp
aaa
mov
adc
clc
mov
dec
mov
test
pop
sti
int
movsb
xchg
repnz
movsl
or
pop
je
movsl
cltd
addr16
jmp
xor
push
adc
iret
rcrb
int3
movb
adc
xchg
lret
xor
jge
and
push
mov
arpl
add
out
imul
cmp
outsl
out
jb
inc
sbbb
adc
pop
aaa
imul
push
mov
dec
loop
or
mov
xor
jbe
inc
sahf
leave
adc
xchg
lods
mov
adc
mov
inc
std
out
shll
sbb
push
pop
js
mov
push
int3
mov
jge
roll
addr16
mov
mov
jmp
inc
call
add
jne
and
inc
dec
insl
scas
dec
jl
fistl
jg
out
arpl
in
mov
movsl
jb
mov
mov
cmp
cld
test
repnz
xor
xchg
pop
xchg
xchg
shrb
outsl
cmp
daa
sub
push
cmp
cli
adc
movsl
out
xchg
add
mov
jle
inc
xchg
jae
dec
shll
pop
ret
ja
and
arpl
and
jle
or
cmpsb
hlt
mov
dec
sbb
sub
mulb
inc
lods
pop
mov
xchg
push
or
lret
add
scas
push
mov
pop
mov
xchg
cmp
dec
push
push
notw
hlt
mov
cmc
pusha
rorb
aam
insb
adc
pop
pop
js
subb
out
iret
cli
mov
add
cmpsl
dec
call
adc
or
cltd
inc
push
cmp
fdivs
jnp
aad
add
pop
es
xorl
enter
stc
test
mov
add
aam
xor
fdivrs
push
mov
out
addr16
sub
and
ret
lret
sbb
and
sub
jns
inc
xchg
add
test
iret
jo
pop
outsb
sbb
testb
push
xor
dec
fisttpll
std
add
outsl
imul
fcmovnbe
leave
lahf
lock
dec
inc
mov
sbb
sub
dec
adc
ret
xchg
jmp
movsl
jecxz
in
pop
add
ror
daa
add
out
hlt
jge
fwait
mov
testl
lret
lods
mov
sbb
sbb
sub
iret
jb
inc
xor
push
jge
mov
sub
mov
fdivs
pop
jb
lret
jbe
jo
out
inc
aaa
inc
mov
jp
mov
mov
dec
fcomip
or
jae
dec
cmp
cmovbe
sahf
jo
xor
mov
cmp
fdivrp
std
ss
pop
cs
adc
jnp
insl
dec
mov
cld
or
shll
bound
inc
push
aad
push
arpl
sbb
notb
test
pop
or
lret
and
cmp
ret
jp
mov
xchg
inc
add
mov
xor
push
ret
cmp
sub
mov
cmp
pushf
in
inc
imul
and
ficoms
mov
popa
ja
movsl
stos
loopne
pop
scas
mov
mov
add
and
pop
decb
mov
jns
mov
mov
negl
enter
mov
popa
out
cmp
pop
shrl
sbb
sbb
sbbl
or
ss
dec
aas
mov
lret
enter
lcall
pop
scas
mov
sbb
cmp
xor
mov
shl
push
hlt
push
imul
fadds
add
scas
mov
outsb
push
mov
cwtl
jnp
lret
cmpl
mov
dec
aad
mov
pop
inc
add
sti
adc
xchg
out
sahf
pop
addr16
gs
cs
add
lret
jne
mov
stc
fists
jnp
hlt
ret
xchg
mov
repnz
mov
mov
je
lret
adc
fbstp
cmc
xchg
mov
dec
add
mov
pop
pop
testl
and
mov
jb
mov
mov
jmp
xchg
pop
cmp
mov
mov
adc
stc
in
xchg
movsb
push
cmp
lret
mov
push
pushf
jecxz
mov
adc
icebp
cmp
inc
in
add
out
mov
in
cld
sub
and
sub
and
cwtl
inc
lea
mov
sub
test
out
xchg
ret
pop
icebp
ds
pop
scas
aaa
sbb
stos
ss
sahf
sbb
mov
pop
movsl
iret
xor
rorb
sbb
mov
pop
insb
outsl
add
jo
mov
and
rorl
jp
xor
push
add
adc
js
inc
adc
insb
fstpl
leave
inc
pop
inc
adc
mov
mov
and
mov
ljmp
lahf
in
xchg
add
xchg
adc
leave
enter
ljmp
mov
popa
sbb
or
inc
inc
xchg
dec
xor
int3
xchg
rcll
or
icebp
or
and
xor
jno
push
pop
mov
gs
pop
repz
imul
iret
int3
outsl
test
jbe
mov
add
jnp
sbb
lods
dec
iret
jnp
negb
jge
inc
nop
scas
insl
fisubl
cs
jp
dec
sbb
fscale
outsl
xchg
pusha
jbe
imul
fs
aad
outsl
push
loop
dec
sbb
out
xor
add
add
mov
aad
mov
mov
mov
jno
pop
lea
jle
pop
jle
pop
cmp
push
push
sub
mov
jp
push
and
cmp
clc
ss
ficomps
insl
les
jp
cli
sbb
jne
and
adc
insl
fwait
loop
push
inc
shrb
pop
adc
cwtl
outsl
mov
cmp
fwait
aad
mov
popf
sub
inc
movsb
dec
jbe
shlb
mov
push
sbb
cmp
pop
test
jae
jmp
ja
mov
es
pop
aam
mov
pop
push
inc
mov
jg
xor
cmp
lret
jmp
adc
mov
sub
mov
sub
cld
pop
sti
mov
fdivrs
and
mov
int3
es
fs
aam
stc
mov
inc
sti
mov
arpl
dec
pop
mov
mov
pushf
clc
cwtl
rolb
mov
inc
decb
dec
sub
jp
jae
jmp
or
pop
xchg
leave
lds
shl
xchg
insb
lock
add
mov
push
gs
cmp
int3
loop
test
pop
cmpsl
call
pop
pop
pop
or
xor
pop
loope
imul
rclb
push
push
adc
and
push
push
sbb
xchg
push
fdivl
out
add
sbb
mov
or
cmp
inc
enter
fisttpl
lods
sti
xor
and
paddusw
ss
cmp
jne
pop
xchg
ljmp
arpl
shrl
sub
cwtl
fwait
std
push
sub
fwait
sub
cmp
mov
ja
aaa
rcr
mov
inc
mov
cwtl
test
outsl
push
fnstcw
jge
clc
mov
sub
jb
pop
mov
test
test
flds
lahf
enter
scas
in
jle
add
jp
xchg
xor
sub
jne
ret
or
dec
aaa
push
push
jge
push
push
push
sbbb
aas
dec
add
dec
inc
into
cmp
pop
hlt
push
dec
inc
sbb
or
fldl
out
cmp
lret
pop
and
mov
pop
in
jmp
movsl
fisubrl
test
xchg
xchg
cld
js
imul
mov
lcall
adc
testl
insl
int3
mov
mov
inc
fdivs
jne
ficoml
orl
imul
mov
loop
les
insb
push
xor
arpl
xorl
push
roll
inc
add
mov
loop
mov
add
sbb
mov
lock
jne
arpl
xchg
pop
or
pop
mov
inc
aad
mov
sbb
stos
adc
inc
sub
push
mov
std
mov
roll
or
dec
je
mov
ret
sarb
adc
fidivrl
jecxz
fwait
sbb
popa
loopne
cltd
mov
sub
xchg
xchg
enter
rclb
or
std
sbb
push
into
adc
nop
and
cmpl
mov
cbtw
sbb
jg
repz
adc
sti
lea
icebp
jp
mov
rolb
and
out
subb
mov
or
mov
hlt
cmp
jb
dec
in
test
inc
dec
sbb
cmp
insb
fwait
repnz
and
mov
imul
lret
das
hlt
mov
loope
adc
ss
aad
xchg
sahf
ret
aas
in
mov
fdivr
and
mov
enter
adc
leave
pop
addps
sbb
dec
dec
stos
adc
adc
cwtl
repz
rcrl
pop
movsb
clc
mov
xor
sbb
cmp
sub
popa
sbb
and
adc
mov
mov
jle
cmp
pop
jl
into
rcrb
mov
xor
arpl
lcall
pop
jecxz
jecxz
pop
bound
xchg
je
repz
xlat
inc
adc
adc
jns
cmp
xlat
outsl
leave
movsb
cmc
push
add
outsl
mov
mov
inc
cmp
pop
insl
xor
bound
and
ret
frstor
jno
aaa
outsb
mov
jnp
or
push
mul
lds
ljmp
cmp
and
fisttpl
enter
mov
inc
adc
repnz
inc
pop
pushf
sarl
xlat
scas
das
dec
adc
lret
sbb
jge
outsb
dec
das
lcall
sub
movsb
cs
add
or
les
shl
int
mov
or
cmp
xchg
std
pop
pop
jmp
out
pop
leave
loopne
sbb
sub
mov
ror
inc
adc
dec
loope
movl
popf
daa
adc
in
or
sub
xlat
rcll
bound
stos
nop
scas
xor
ret
dec
jae
out
mov
sbb
jbe
dec
mov
jnp
ds
mov
push
sti
in
mov
daa
lds
scas
xchg
sub
cmp
lock
aam
or
dec
test
fildl
mov
xchg
idivb
movsl
popa
or
movsb
insl
nop
rorb
ds
and
dec
ds
dec
fistl
lea
xchg
jae
mov
mov
orb
jnp
push
mov
xor
aad
cmp
pop
incl
dec
and
mov
add
iret
fmuls
adc
xor
pushf
cmp
pop
add
cmpsl
adc
pop
pop
in
or
das
or
xchg
insb
sub
adc
pushf
mov
in
mov
loope
fistpll
pop
in
dec
ds
xchg
sub
adc
js
das
push
enter
mov
adc
negl
mov
push
cltd
sbb
movsb
fimuls
mov
lods
arpl
dec
gs
sub
cmovg
adc
mov
stc
push
fiaddl
adc
pop
pop
add
mov
aas
dec
adcb
ficompl
pop
xor
movb
add
lods
lret
lret
pusha
add
dec
xchg
pop
adc
xor
js
sbb
xchg
pop
pushf
sbb
push
mov
and
movsb
mov
or
out
hlt
xor
dec
jo
pop
js
mov
cwtl
scas
into
pop
out
sub
in
xlat
push
ror
sub
pop
jne
pushf
sbb
push
add
loopne
jle
mov
sub
add
cmp
xchg
ljmp
pop
mov
jno
sbb
jmp
pusha
sbb
das
gs
repnz
aas
sub
es
jno
mov
and
enter
fxch
popa
lret
jmp
push
mov
repz
sub
inc
inc
addr16
outsl
rolb
and
pusha
sub
fwait
xchg
xor
iret
push
mov
or
sbb
pop
mov
mov
out
push
movsl
lea
jno
cli
js
jns
stos
jbe
addr16
mov
imul
jo
cli
xchg
jb
jbe
pop
inc
jo
out
mov
adc
sbb
dec
jb
xor
aam
push
inc
inc
or
and
repnz
test
sbb
scas
and
lods
or
xor
push
inc
in
out
fcomi
out
fisubs
and
data16
aas
cmpsl
subl
outsb
lret
push
ja
ljmp
hlt
sub
inc
cs
xchg
imul
mov
lahf
xlat
xchg
or
test
addl
test
pop
gs
mov
jae
and
jno
lahf
and
xlat
xor
lds
xlat
adc
mov
psubd
and
push
iret
xor
sub
fcoml
mov
arpl
mov
sbb
fnstsw
dec
imul
out
mov
cmp
int3
arpl
in
lock
cmc
icebp
daa
lock
pop
pop
lret
push
mov
lock
or
mov
jg
lahf
or
hlt
and
loopne
mov
cmpsl
jmp
sub
adc
mov
or
adc
out
mov
sahf
in
inc
sbb
jne
repnz
ficoms
ret
pop
daa
mov
push
pmaxsw
lahf
orl
inc
adc
and
xchg
fisttpl
lock
adc
std
lret
lcall
mov
and
aaa
inc
dec
hlt
mov
jne
adc
or
fwait
sbb
leave
fcmovu
mov
lcall
mov
icebp
xchg
outsl
cli
jno
mov
inc
js
mov
push
fwait
pop
pop
ljmp
add
loope
daa
and
iret
xlat
sbb
dec
jecxz
aam
pop
jae
xchg
xlat
stos
idiv
lock
jge
mov
ja
orl
inc
out
push
rorl
arpl
dec
gs
push
icebp
lret
inc
add
mov
aas
imul
pop
inc
xchg
int
sbb
cmpsb
mov
sub
jo
xchg
repz
out
out
loopne
xchg
jl
jbe
sbb
std
add
cmp
cld
sub
xor
mov
arpl
imul
andl
pop
and
pop
enter
stos
and
int
adc
mov
shl
cmp
scas
iret
fistpll
ret
mov
push
mov
mov
add
fstps
add
or
es
loop
ljmp
add
out
mov
out
jae
enter
fcompl
push
rcll
push
lods
push
js
scas
cmp
pop
imul
dec
dec
push
dec
ficoms
jo
mov
orl
in
mov
pop
xor
push
pop
jno
sbb
sbb
add
sbb
lea
sub
sbb
sarl
mov
fadds
xchg
mov
xchg
dec
int3
push
out
gs
cli
cs
jo
in
gs
dec
cwtl
lret
mov
out
mov
scas
mov
rcll
xchg
xchg
popa
sbb
sub
imul
xchg
pop
cmp
ds
cmp
push
fidivrl
sarb
push
add
adc
lds
mov
adc
xor
lret
sub
cwtl
ret
push
sbb
cwtl
lret
lea
pop
stos
lea
ja
ficomps
inc
cwtl
push
mov
aaa
add
addl
je
cmp
pop
xor
in
aam
mov
xchg
push
enter
jo
xchg
daa
ret
mov
and
push
push
cmpsb
lds
fdivrl
test
scas
push
hlt
cmp
push
hlt
mov
mulb
mov
push
leave
movb
scas
stc
fstpt
or
test
out
mov
or
pop
xchg
lahf
push
pop
test
push
adc
mov
jbe
stc
add
inc
inc
stos
sbb
dec
inc
ljmp
cmp
push
test
or
sti
pop
sarl
mov
dec
lods
push
mov
push
jge
push
ljmp
loope
aad
inc
push
int3
adc
xchg
or
sub
and
setg
xchg
and
and
rcl
inc
fcomps
std
cld
insl
sbb
jbe
lahf
iret
inc
jbe
xchg
xchg
test
xchg
cli
je
arpl
adc
mov
xchg
stos
pop
popf
divps
push
ss
aaa
push
ljmp
pop
inc
test
jp
mov
jo
cltd
mov
std
adc
cmp
mov
mov
pop
adc
jle
aad
enter
xor
jg
nop
xor
orb
mov
xor
dec
stos
sahf
loop
xchg
ljmp
push
mov
rorl
xor
hlt
xlat
adc
fildll
and
imul
jl
lahf
or
lock
jne
jg
popa
jp
inc
movsb
push
push
mov
aaa
loope
outsb
add
mov
cmpsb
dec
jne
or
inc
outsb
sub
int
inc
cmp
stc
push
push
mov
sbb
mov
push
or
out
gs
pop
hlt
sub
out
stos
xor
push
repz
or
dec
in
adc
pop
xchg
pop
cmpsb
fpatan
xchg
mov
inc
xchg
roll
imul
sti
in
daa
push
aaa
fldenv
pop
insb
test
cmpsb
and
jg
mov
aaa
jnp
mov
lea
cmpsb
xchg
out
movsl
push
sarb
push
jbe
fs
insb
and
sub
out
out
dec
jne
jnp
lahf
push
dec
xchg
roll
push
lock
dec
daa
adc
dec
bound
pop
ret
cmpsb
clc
xchg
sub
jno
push
xor
xchg
dec
xorb
sub
pop
pop
test
outsb
int3
addr16
mov
sarl
mov
cmp
sub
in
pop
loope
mov
add
ljmp
sub
sub
loopne
cltd
daa
push
leave
test
lea
pushl
sbb
or
mov
outsb
cmp
loop
lahf
nop
dec
dec
xchg
fistps
mov
sub
mov
lock
loopne
and
lret
rolb
bound
leave
lahf
adc
push
or
stos
jmp
and
push
sub
lret
cmpsl
sbb
cmc
ss
push
pop
ljmp
xchg
xor
push
lock
inc
aam
aaa
cmpsl
enter
shl
mov
xchg
dec
sub
pop
push
jle
sahf
sub
lock
sub
ror
dec
sbb
cli
mov
fildll
push
pop
mov
mov
insl
imul
stos
movsb
dec
or
pop
hlt
pop
insl
xchg
mov
fs
xor
mov
enter
sub
push
imull
mov
mov
test
jg
lret
sbb
pop
and
xchg
or
mov
cmp
mov
pop
insl
and
jae
inc
push
push
mov
scas
jecxz
mov
and
xor
in
or
sarl
cmp
lock
ror
or
adc
iret
rolb
cmp
outsb
xchg
or
mov
sbb
das
fiadds
es
or
mov
hlt
je
mov
popa
sub
adc
aam
and
cmp
and
loope
idivb
lock
outsb
stos
fsubs
clc
pop
popf
subb
fldl
int3
stos
fisubs
mov
cmp
stc
js
mov
lret
cltd
pop
repz
out
add
in
push
cmp
icebp
repnz
inc
stos
push
in
lods
inc
inc
sbb
jp
stos
or
lret
sub
je
cli
dec
ret
push
fimull
sbb
jge
mov
out
xor
test
xlat
push
mov
mov
and
pop
mov
rol
adc
clc
mov
mov
mov
mov
pushf
cmp
xchg
int3
push
jmp
dec
pop
mov
fnstsw
push
add
xchg
sub
mov
or
sarl
add
push
mov
dec
xor
stc
inc
push
inc
int
outsb
fists
sub
idiv
mov
sbb
push
push
mov
mov
sbb
push
push
mov
movsl
popa
jne
mov
push
mov
divl
rcll
ljmp
xor
push
and
in
faddl
cmc
pop
cmpsl
enter
pop
xchg
add
outsb
leave
pop
xchg
aas
sub
imull
repnz
shrl
sub
pushf
sub
mov
out
mov
pop
mov
sahf
or
or
mov
adc
lret
xorb
aaa
das
arpl
sub
cmp
or
lret
sbb
mov
jle
outsl
or
push
inc
ror
aad
mov
jno
adc
push
shr
dec
add
inc
rclb
push
dec
sar
lret
mov
jne
sbb
and
sbb
dec
jae
pop
lock
ja
pusha
mov
jbe
or
push
pop
fdivrl
aad
jne
jmp
jge
or
sub
test
mov
xor
imul
sub
dec
aas
std
add
mov
movsb
loope
stos
aam
rclb
mov
je
pop
xchg
mov
adc
xchg
fnstcw
add
out
xlat
test
test
mull
sbb
inc
movsl
and
or
sbb
lcall
xchg
inc
jo
sbb
iret
dec
inc
pop
mov
cwtl
mov
sub
in
xchg
mov
pop
pop
pop
jns
sbb
lock
int3
daa
lcall
nop
pop
cltd
push
test
xor
aam
sub
repz
mov
push
or
mov
outsb
mov
call
enter
xchg
ljmp
stos
adc
xor
jp
mov
nop
push
sbb
orb
popf
insb
inc
adc
sbb
mov
jp
js
out
xchg
lcall
test
jnp
mov
leave
mov
mov
dec
aaa
fnop
clc
divl
lcall
shlb
movsl
andb
sahf
addl
fcoms
movsl
aas
xlat
adc
pop
bound
sub
pop
xchg
incb
pop
ja
jne
mov
pop
das
ss
divl
pushf
data16
or
icebp
xchg
mov
lret
jmp
mov
lret
push
mov
mov
or
dec
aam
insl
mov
xchg
add
out
jbe
jne
or
lret
jb
xchg
lahf
xchg
or
jo
imul
test
push
dec
pop
dec
nop
test
mov
ja
and
push
fisubrs
sbb
sub
pop
fsubrl
adc
cli
jo
xchg
std
in
ficoms
js
mov
in
add
dec
and
mov
inc
mov
xchg
pop
and
sbb
mov
xor
lret
std
adc
inc
les
ja
out
adc
pop
imul
jb
dec
test
pop
jmp
in
push
fnsave
mov
mov
dec
xchg
push
pushf
push
out
into
mov
movsl
sahf
out
push
xor
push
add
lcall
inc
data16
jnp
mov
push
mov
in
jne
lret
adc
xchg
push
outsb
lret
stos
sbbl
jae
pop
addr16
stos
repz
iret
mov
gs
mov
idivl
jnp
push
shrb
xchg
inc
rorb
jo
rorb
enter
jb
push
push
pop
or
out
cmp
mov
inc
fimull
fisubrl
mov
imul
mov
or
data16
mov
mov
popa
push
push
or
mov
icebp
pop
cmpsl
test
outsb
dec
movsb
aas
sub
mov
sbb
sub
adc
out
push
jnp
fstl
leave
ret
adc
xchg
in
cmpb
and
std
mov
in
repz
test
fstps
icebp
push
jl
lds
xor
adc
imul
sub
cmp
push
jbe
or
push
push
in
sahf
push
cmp
jno
pop
hlt
rcrb
cmp
int3
stc
pop
adc
jae
sbb
jp
sbb
dec
jle
push
sbb
data16
nop
es
outsb
mov
jge
sbb
push
test
fucomp
and
lret
loopne
in
xor
stos
fistl
jbe
dec
stos
aas
out
sub
bound
cmpsb
lret
add
loope
and
mov
sbb
mov
loope
lds
test
imul
and
xchg
inc
add
pop
daa
dec
popf
loop
subl
xorb
shl
sub
xchg
or
lret
dec
dec
mov
xchg
lret
sub
lods
xor
xchg
and
daa
in
sti
jae
push
lock
andl
sti
nop
dec
cmp
add
cmp
dec
cmpsb
pop
scas
xchg
dec
inc
inc
pop
ss
jne
aam
push
dec
push
inc
jl
dec
ja
push
adc
cli
aad
and
popf
xor
xor
rcrl
xlat
fiaddl
daa
add
fisttpll
je
lds
sbb
cld
mov
movsb
jnp
cmpsl
roll
sub
pop
dec
rcl
mov
and
enter
imul
pop
stos
jg
add
sahf
sub
or
or
sbb
add
in
jae
mov
das
lcall
push
test
mov
add
aad
mov
inc
scas
fiaddl
lds
push
pusha
idiv
mov
pop
cmc
or
stc
sbbl
cwtl
insl
inc
jg,pn
sbb
and
push
aaa
cmp
in
jmp
loope
cltd
inc
sbb
add
ljmp
outsl
lods
fidivrl
imul
ret
xchg
push
cmpsb
pop
fldt
push
loope
stc
es
xchg
mov
mov
push
in
imull
ret
dec
icebp
cltd
push
repz
and
jnp
lods
aad
mov
pop
daa
aas
push
out
cmp
sub
insb
or
movsb
sbb
jb
push
jle
add
mov
mov
push
loopne
cmp
repnz
movsl
adcb
pop
cmp
adc
imul
pop
sbb
sub
jbe
lcall
cmp
aam
fldcw
iret
push
and
push
pop
nop
push
push
mov
movsb
lahf
bound
addr16
pop
pop
or
xor
sbb
aam
xor
sub
leave
data16
inc
enter
lea
adc
jnp
lods
rolb
adc
sbb
adc
stc
adc
push
sbb
call
aaa
inc
loopne
dec
or
mov
mov
idivb
mov
adc
les
add
das
jnp
adc
std
pop
into
xor
adc
xor
jg
aas
stos
pop
dec
dec
cmpsl
push
pop
cmpb
das
xor
jg
scas
mov
jno
shl
fiadds
adc
aaa
cmp
jnp
popa
and
xchg
nop
xchg
scas
adc
data16
dec
mov
jnp
notb
loopne
jae
inc
sbb
push
or
inc
stos
pop
sub
or
xor
jb
mov
xchg
in
xchg
dec
jae
cmp
js
out
ret
shlb
jg
aad
adc
jnp
jge
mov
sub
dec
lahf
test
mov
dec
mov
addl
psrlq
cmp
dec
mov
ficoml
inc
mov
sub
mov
pop
inc
stos
or
lock
xchg
sub
push
out
pop
cwtl
insb
push
inc
in
sahf
jae
std
adc
or
push
cmc
push
lods
inc
or
fcmovb
xor
sbb
mov
loope
pushf
xor
cmpsb
xchg
jmp
es
iret
je
nop
mov
lahf
inc
mov
adc
ds
sub
int3
push
cmp
cs
cmp
jne
pop
aaa
repnz
mov
or
popf
aad
negl
dec
or
add
mov
and
jno
pop
std
add
cs
pop
mov
pop
push
xchg
mov
daa
les
jbe
sbb
mov
fsubrp
mov
sbb
rorl
push
mov
fmulp
sub
lods
shlb
test
fldenv
cmp
arpl
or
icebp
andb
imul
outsl
popf
les
fwait
and
out
inc
addb
dec
mov
xor
arpl
xor
lahf
out
rol
out
dec
mov
mov
nop
int3
stc
mov
push
pop
and
je
fcompl
test
sbb
mov
test
loopne
std
lods
jno
pop
pop
push
xchg
mov
call
jge
add
xor
sbb
push
mov
ljmp
rcrb
pusha
adc
inc
movsl
ret
das
pop
lds
jo
pusha
and
mov
dec
enter
loop
mov
dec
lods
pop
ret
out
inc
add
push
rcll
scas
or
xchg
enter
and
cmp
sbb
dec
push
mov
pop
lahf
jae
rclb
test
jae
out
scas
ja
mov
call
mov
dec
xorb
leave
test
mov
push
xlat
loop
push
lcall
jo
hlt
jge
movsb
mov
dec
jne
jo
test
adc
xchg
int3
mov
push
imul
fimuls
test
dec
mov
inc
inc
xlat
or
push
mov
cmc
add
dec
inc
insl
jg
push
aaa
or
pop
testl
das
in
std
addr16
mov
mov
cwtl
inc
inc
leave
popf
pop
dec
sbb
mov
pop
sbb
adc
daa
popa
decb
fistpl
enter
pop
adc
dec
rolb
cltd
gs
incl
mov
cmp
repnz
sub
repz
sbb
push
out
sbb
xchg
jae
repnz
int
leave
jae
mov
or
add
repnz
pavgw
aad
push
loope
pop
gs
mov
sbb
push
subb
or
and
insb
xorl
xor
movsl
adc
xchg
es
cmpsl
inc
dec
outsb
sbb
jo
fwait
ljmp
sbb
push
fnsave
imul
jbe
dec
sub
add
ss
test
mov
mov
movb
lret
mov
repnz
push
cmp
in
dec
and
cld
mov
pop
mov
fmull
xorb
mov
push
pop
pop
xor
or
popa
aas
push
pop
cmc
cmpl
sub
loope
hlt
enter
pusha
cmp
rcrl
pop
cs
sub
dec
stc
in
pop
jo
sub
or
fldenv
shll
arpl
repz
cmc
sbb
adc
test
and
fimuls
data16
and
xchg
rcll
jl
loopne
dec
scas
push
daa
and
into
xor
xlat
movsb
jl
mov
cs
enter
mov
das
test
or
add
call
dec
push
mov
popf
sbb
mov
je
int3
loope
dec
dec
add
adc
add
test
insb
hlt
push
testl
test
mov
mov
add
in
outsb
mov
pop
loopne
icebp
mov
jbe
dec
mov
dec
cltd
mov
mov
push
ljmp
adc
in
dec
add
in
mov
inc
inc
adc
cmp
pop
sbb
mov
mov
cli
outsl
les
adc
adc
sbb
xchg
in
ret
xchg
inc
sbb
xchg
mov
insl
pushf
or
sub
iret
sub
cmpb
or
adc
js
loop
daa
mulb
pop
mov
inc
fstps
cmc
ret
pop
leave
orl
cmp
xchg
imul
pop
push
mov
mov
xor
inc
sbb
test
mov
popf
jmp
mov
and
dec
dec
pop
movsbl
mov
lahf
adc
inc
or
adc
enter
es
push
cltd
addr16
add
adc
loopne
mov
cmpsl
das
sbb
in
inc
icebp
adc
hlt
jae
lods
xchg
pop
das
xlat
adc
aad
leave
andb
push
sbb
enter
sahf
cmp
push
push
cli
sub
fisubrl
inc
xor
mov
mov
push
fsubrs
sti
enter
outsb
mov
xchg
adc
into
pusha
fdivrl
jle
std
insb
sbb
cs
sbb
mov
xorl
call
test
xor
mov
jnp
push
push
imul
pop
adc
in
fistps
mov
xlat
lahf
gs
es
orb
arpl
cli
xchg
pop
dec
adc
xor
in
jns
jnp
jge
jb
das
out
mov
lret
icebp
loopne
inc
fwait
push
mov
fs
cmc
gs
mov
lret
and
mov
xor
cmp
test
mov
mov
cmpsl
jmp
cmp
leave
sbb
call
jp
dec
adc
push
inc
test
leave
ret
popf
cmc
addl
jg
lret
int
add
inc
loope
sbb
out
pop
data16
loop
inc
xchg
aad
push
cli
icebp
mov
xor
jo
aaa
mov
pushf
xchg
clc
pop
nop
xor
imul
sub
push
in
pushf
sub
mov
repz
inc
fbld
pushf
xor
cs
mov
mov
xor
mov
mov
dec
pushl
cmp
cmp
lcall
lock
cmpl
rcr
sub
push
push
xlat
popf
lds
sti
fmul
test
sbb
adc
mov
jno
nop
subb
fisubl
jecxz
or
leave
jl
das
fbld
lret
push
xchg
inc
inc
scas
sbb
cwtl
xchg
in
dec
icebp
and
jge
aaa
aaa
add
das
sub
fdivl
sbb
add
loopne
scas
in
mov
fistpl
icebp
pop
fisttpl
movsb
mov
fisubs
push
xchg
sub
dec
push
jns
fcompl
or
push
cmp
in
hlt
jl
shlb
xor
inc
out
sbb
lods
rclb
mov
jb
mov
pop
das
out
das
hlt
jle
lcall
mov
fs
movsl
int
and
insb
mov
mov
icebp
jb
outsb
cmp
adc
shld
fwait
jp
lods
cmc
xchg
ds
ss
movsb
lds
mov
push
fwait
cmp
xchg
or
mulb
jecxz
jnp
sub
hlt
and
das
cmp
cmpsl
in
adc
push
xchg
push
pop
repz
je
out
xchg
xor
push
sti
sub
jle
aam
and
nop
or
imul
pop
out
pop
or
iret
ja
aad
in
iret
push
mov
enter
aad
mov
adc
xor
ret
mov
in
addr16
adc
xchg
insl
cmc
fcmove
sub
ja
in
pop
jge
pop
push
icebp
xor
loop
stc
outsl
dec
popa
lcall
xor
jnp
iret
jns
mov
sarb
popa
cmpsb
jbe
or
int
or
addb
out
sbb
int
stos
xchg
enter
ljmp
shll
mov
mov
jae
mov
sarb
push
mov
fwait
push
jle
pop
jle
xor
cmp
mov
mov
stos
bound
rclb
cmp
cmc
cmp
jb
dec
sub
inc
xchg
scas
lea
mov
das
inc
imul
sub
or
frstor
xchg
test
mov
jmp
bound
and
xor
loopne
lock
mov
mov
flds
add
out
pop
jo
daa
push
xor
ljmp
pusha
push
mov
ret
je
outsl
xchg
mov
stc
mov
test
ja
fcomps
adc
sbb
cli
push
xchg
push
jmp
lods
sub
cmpsl
into
icebp
outsl
mov
jge
pop
jp
dec
hlt
push
std
sbb
cld
add
aas
dec
lahf
fisttpll
leave
ljmp
lahf
pushf
into
fsubs
lcall
call
mov
pop
pop
push
xorb
jmp
inc
hlt
push
pusha
inc
jnp
sub
mov
adc
mov
jg
repnz
stos
jmp
cld
adc
call
and
jp
cs
cld
mov
pop
decl
arpl
xor
mov
mov
dec
jmp
scas
movsb
push
and
inc
cwtl
pop
sti
or
mov
out
push
add
les
mov
sbb
add
adcl
mov
sbb
push
dec
push
mov
aas
es
fwait
ja
loopne
dec
int3
out
sahf
xor
adc
jp
or
xor
repnz
lcall
mov
mov
mov
adc
jb
inc
pop
lcallw
sub
lret
jo
addr16
pushl
adc
lahf
pop
mov
or
ret
ljmp
mov
dec
fcoms
cmp
in
inc
pusha
cmp
repnz
xchg
and
cmp
dec
jae
out
xor
pop
jnp
ret
pop
aaa
test
sbb
arpl
mov
mov
add
mov
call
mov
stmxcsr
loop
es
push
lret
lahf
stos
mov
add
and
stc
inc
fimuls
pop
cmpsl
jne
into
std
iret
xchg
pop
xchg
cli
int
cltd
es
adc
ret
cmp
aas
pop
call
imul
xchg
jae
pop
in
push
sub
xor
lahf
cli
fs
fisubl
cmpsb
cltd
and
fbstp
iret
popf
arpl
jecxz
roll
mov
xor
xchg
test
xlat
sub
or
div
popf
in
pop
cs
in
mov
xor
test
cmp
aad
dec
push
testl
dec
pusha
ficompl
and
in
jo
icebp
repnz
jle
or
sub
cmpsl
pop
sbb
push
jle
enter
mov
lret
fwait
pop
mov
ret
cs
scas
vdivsd
jb
jl
jecxz
call
add
in
dec
pop
xchg
hlt
xor
cs
sbb
into
jecxz
loop
sarl
iret
test
mov
out
ss
adc
inc
imul
lds
inc
xlat
jle
sarl
add
cmpsb
inc
in
xor
cmp
cltd
dec
xchg
or
mov
imulb
hlt
ret
add
sti
add
fistps
sbb
ljmp
inc
mov
lret
out
mov
pop
outsl
pop
or
scas
xor
mov
mov
cs
add
mov
xor
xorl
std
add
ret
lahf
jl
sub
mov
mov
jle
xor
cs
mov
inc
aad
push
xchg
loop
sbb
jbe
lods
gs
mov
mov
push
lods
mov
jno
jo
mov
jp
xlat
hlt
test
in
jae
popa
add
mov
sub
pop
push
adc
mov
int3
std
rcrl
leave
jge
iret
fbstp
ds
dec
rclb
inc
out
push
insl
mov
iret
inc
inc
dec
push
data16
int3
adc
int
scas
nop
sarl
inc
pushf
add
pop
inc
out
xchg
aad
mov
sub
fs
lea
cmp
pusha
dec
hlt
aam
sti
or
jp
sbb
daa
xor
sbbl
add
cmp
and
test
xchg
repnz
orb
fs
sub
das
fcom
cmc
rcll
add
dec
xorl
sti
enter
xchg
scas
aaa
mov
sarb
popa
shrl
stc
aam
popa
cs
push
outsb
inc
stc
mov
mov
ljmp
mov
inc
pushf
movsb
ret
rclb
cmp
loopne
scas
mov
lea
jns
xor
xor
dec
nop
mov
pop
es
popa
mov
jle
jns
sub
add
scas
cmp
aaa
push
or
mov
inc
scas
andl
dec
loope
jle
mov
out
loope
or
pop
jno
xchg
push
jb
in
or
loope
pop
xchg
fs
sub
inc
sarl
sbb
pop
mov
scas
lds
mov
sarl
adc
pop
insb
pusha
popl
push
xchg
inc
adc
xchg
and
scas
mov
add
repz
jae
mov
inc
shl
add
push
ja
and
push
movsl
testb
push
mov
imul
and
inc
or
les
clc
push
leave
imul
mov
aad
xor
out
scas
in
push
push
cwtl
test
mov
or
push
imull
add
sbb
mov
pop
test
scas
rorb
jp
adc
mov
movsb
push
pop
inc
fidivs
push
xchg
xor
xchg
insb
insb
and
test
icebp
xor
and
ljmp
push
lcall
out
subl
dec
in
pop
jle
hlt
cmp
mov
cltd
cmp
lea
add
inc
push
or
jae
jecxz
pop
and
sub
fcom
pop
sbb
jl
sub
and
pop
inc
sub
pop
shr
sub
lret
pop
scas
sub
psubsw
xchg
xchg
sbb
movsb
ds
and
jbe
inc
sub
cli
or
adc
sbb
lahf
jg
movsl
or
push
sub
push
dec
pop
lahf
clc
repz
insl
rorb
in
js
aad
cmpsb
push
xchg
and
sbb
adc
mov
push
inc
xchg
mov
mov
cmp
push
mov
aas
inc
or
mov
dec
adc
into
xchg
les
dec
add
into
fcoms
adc
xchg
pop
push
clc
in
insl
outsl
lods
cmp
sbb
sti
pop
in
cld
xchg
push
push
inc
jp
sbb
xor
imul
addr16
cmpsb
mov
xchg
push
cmp
jl
outsb
mov
inc
xlat
adc
mov
mov
imul
or
mov
aad
inc
lea
dec
xchg
lock
dec
fstps
outsb
or
das
and
sub
xor
aas
rcll
or
or
stc
dec
xchg
fcmovnu
xor
xor
jmp
aad
jg
enter
pop
mov
js
lahf
push
les
cmpsl
fcompl
mov
adc
mov
sub
sub
mov
cmp
mov
push
subb
ret
push
inc
pop
cmpl
out
cltd
push
xchg
andb
std
pushf
frstor
shrl
scas
xor
xchg
shll
clc
sub
loope
test
and
xchg
push
mov
pop
adc
or
test
xchg
arpl
lds
pusha
inc
popf
xchg
cld
inc
sbb
mov
les
inc
mov
xor
mov
sub
and
data16
stos
scas
add
push
jne
xor
hlt
cli
aad
rcl
xor
pop
movsl
stos
mov
into
mov
sbb
in
mov
fwait
aaa
stos
adc
mov
xchg
int3
leave
mov
xor
inc
rclb
or
dec
je
ss
ljmp
mov
dec
mov
cmp
lahf
enter
mov
enter
push
rolb
jb
aad
and
or
jmp
inc
mov
subl
add
fs
movsl
in
pop
inc
loope
or
xor
rcl
aaa
xchg
adc
inc
out
mov
cs
in
xchg
adc
in
lahf
pushf
sbb
repz
and
inc
mov
mov
aaa
cmp
pop
inc
pop
cmc
push
out
ljmp
mov
rclb
mov
outsb
and
dec
push
push
xchg
fdivs
shlb
scas
out
mov
dec
mov
aam
daa
ret
lret
inc
cs
in
mov
mov
in
int
mov
mov
sub
add
push
jle
imul
in
cli
jnp
loopne
cmp
lods
jle
pop
jge
xor
mov
test
lock
sub
adc
movsl
sbb
lcall
stc
dec
sbb
mov
adc
outsl
shl
jne
pop
push
movq
pop
jo
cmp
add
imul
jg
out
push
lock
imul
pop
outsb
clc
push
mov
lods
mov
inc
aas
lcall
jo
in
jb
cmpsl
push
cmp
sbb
std
mov
pop
push
inc
cwtl
lods
adc
jp,pt
dec
push
lock
mov
mov
cli
fdivrs
aas
inc
and
mov
xchg
sub
mov
mov
mov
aam
jp
jno
jbe
sahf
fldcw
push
adc
cmpb
out
les
inc
and
mov
int3
push
jo
adcl
sub
push
shrl
int
cld
dec
lret
cmp
sbb
xchg
jg
nop
out
lcall
mov
or
les
push
xor
int3
jb
cmc
lret
outsl
lock
push
loope
hlt
jl
jne
cmpsb
pop
in
notb
mov
pop
lret
push
test
subb
jo
outsl
cmp
orl
xchg
add
inc
adc
lods
insl
push
dec
out
cmp
mov
add
lahf
mov
ret
mov
push
push
sahf
test
jecxz
jg
sub
div
lea
sub
jae
repnz
adc
imul
lods
lahf
pop
xchg
test
int3
aas
xchg
adc
jbe
dec
mov
lods
sbb
lahf
jne,pn
dec
insb
mov
add
add
sub
cmp
sbb
mov
jle
in
movsb
cmp
out
xor
call
jno
add
inc
jbe
mov
shl
mov
pop
fcompl
inc
cmp
cmp
imul
in
outsl
sbb
scas
mov
cld
and
jae
and
ljmp
cld
rcrb
shrb
gs
iret
orb
aam
loope
rorb
repnz
aas
xor
gs
les
fs
test
ret
add
xchg
addl
lock
scas
push
insl
cwtl
push
notl
shll
arpl
jne
iret
repz
icebp
xor
lcall
jmp
mov
or
pop
cmp
js
jp
jb
pop
jns
out
out
and
es
pop
ljmp
mov
outsb
fwait
mov
push
sbb
imul
and
sub
jbe
lds
jge
add
into
sbb
add
pop
xchg
push
push
lods
pop
sahf
test
cmp
test
mov
pop
push
pop
lahf
push
into
pop
popl
cmp
sbb
cmp
fisubrl
mov
inc
dec
mov
outsb
out
pop
aam
cmpl
mov
je
out
pop
jle
nop
xchg
hlt
lods
les
mov
xchg
call
cmpps
fxam
mov
mov
mov
mov
xor
loope
daa
roll
sbb
mov
mov
pop
jne
mov
pushf
or
pop
xchg
fwait
mov
lret
adc
mov
add
xchg
sub
mov
inc
xlat
cmp
sahf
mov
divb
cmp
stc
inc
push
xor
cwtl
add
out
test
jne
adc
mov
inc
or
jo
push
mov
push
out
hlt
out
mov
call
add
cmp
sbb
insb
cmpsb
mov
stos
std
ffree
stos
push
pop
xchg
int3
mov
push
push
scas
rcrl
push
push
xor
cmpsb
xchg
adc
decb
jnp
mov
mov
imul
ficomps
int
gs
ja
adc
mov
cmpsl
mov
das
frstor
mov
ror
adcb
jno
mov
inc
dec
sti
push
js
fwait
xchg
xor
mov
sbb
push
sbb
movsl
jae
mov
pop
stc
lcall
sbb
fistps
xchg
add
and
inc
cmp
orb
sbb
mov
jno
lcall
shll
lea
lahf
fcoms
addr16
pusha
mov
sahf
jmp
xchg
sbb
cmp
mov
sbb
icebp
xchg
dec
xor
outsl
pusha
push
test
std
inc
test
aas
add
jnp
scas
or
xorb
xor
xchg
shll
cmp
adc
or
es
pushf
imul
mov
sbb
jae
nop
sbb
jmp
mov
jb
sbb
clc
rol
jno
hlt
test
push
mov
test
inc
das
subl
mov
nop
lods
lock
test
daa
add
je
push
std
imul
push
or
hlt
xor
jb
daa
dec
dec
adc
jns
fwait
jns
and
outsl
and
mov
mov
push
cwtl
fcmovnb
scas
jmp
les
push
xchg
lea
ret
std
sarb
or
addb
ret
push
out
mov
pop
pop
test
lea
stos
pop
push
mov
fidivrl
add
mov
out
mov
mov
idiv
arpl
inc
ret
push
cmp
sar
daa
xor
addr16
and
fldt
push
shlb
dec
pop
stos
rol
jp
cmp
aam
fwait
push
xchg
xor
gs
aad
push
out
iret
inc
sub
cmpsb
mov
addr16
and
pop
or
jo
aam
jge
sub
push
mov
ja
xor
cs
enter
ret
xor
push
sub
stos
xchg
mov
push
dec
loop
dec
cmp
pop
int
fmull
lcall
cmp
and
aas
inc
hlt
lcall
cmp
lret
inc
cmc
push
mov
mov
mov
mov
les
pushf
dec
sbb
int3
and
sarb
mov
xor
jno
mov
mov
jns
cwtl
out
mov
fbstp
mov
gs
movsb
pop
xor
hlt
cmp
xor
cmp
test
dec
pop
fdivrs
xlat
scas
lcall
xchg
push
mov
jne
sbb
push
cmp
mov
enter
or
or
loop
aad
push
cmpsl
dec
adc
movl
sbb
je
push
or
idivb
pusha
cmc
cltd
shrb
jle
and
jo
dec
mov
adc
in
adc
jle
sbb
out
pusha
push
arpl
mov
mov
aam
adc
inc
push
shr
je
push
jp
lahf
testl
lret
push
sub
cmp
es
or
ret
ret
adc
mov
pop
imul
push
fwait
pop
dec
cmp
mov
xlat
sbb
mov
jp
push
sub
pop
scas
ficomps
sbbb
xor
je
call
sbbb
xchg
hlt
pushf
lahf
and
fldt
dec
rol
and
mov
test
sub
push
and
mov
mov
add
and
ret
mov
dec
arpl
mov
loope
add
cltd
icebp
lret
or
xchg
sahf
cmp
test
adc
or
fldenv
cmc
mov
fs
mov
inc
sbb
push
fisubrl
repnz
lret
xchg
add
lret
aad
adc
mov
mov
mov
mov
cwtl
outsl
jmp
psrlw
and
xor
and
js
cli
repnz
mov
int3
sub
jo
add
rorl
add
loop
imulb
jmp
cmpsl
jo
in
sbb
xlat
jnp
xchg
lods
jg
mov
cmc
inc
xchg
roll
jns
js
sahf
mov
xchg
xchg
ja
adc
icebp
mov
popf
int
and
insl
divb
xor
fmull
add
and
add
xor
sbbl
shrl
jg
jo
cwtl
xor
xor
add
mov
and
rcrb
aad
arpl
lret
lret
adc
sahf
mov
scas
idivb
imul
sahf
xorl
cwtl
fadds
sbb
stos
or
mov
and
dec
inc
dec
shrb
mov
push
insb
cmp
ja
in
stc
fmul
test
xchg
add
cltd
hlt
in
xchg
sarb
ficoms
mov
pop
sbb
out
dec
pop
sbb
jns
mov
aaa
adc
push
jae
mov
pop
jl
dec
movsb
jo
cmp
xor
mov
lret
push
sub
mov
and
mov
push
sbb
cmc
popa
mov
movl
aaa
jae
xchg
jmp
ret
xor
xchg
sar
fistpll
xchg
jl
jo
or
call
fucomip
cmp
ret
mov
jo
add
mov
jl
ds
iret
mov
addr16
mov
and
pusha
mov
dec
sti
jns
mov
ret
inc
adc
inc
int3
or
mov
adc
fs
inc
icebp
pop
mov
aad
and
jne
cld
mov
cwtl
call
mov
dec
mov
cmp
jae
lret
push
repz
xchg
mov
mov
dec
addr16
gs
ja
cmp
mov
mov
out
popa
xchg
ja
mov
jae
outsb
xchg
push
out
mov
sbb
push
mov
pop
jle
dec
cmpsb
shl
mov
add
lds
shl
aad
out
scas
repnz
adc
add
inc
add
xchg
fisubl
ljmp
cmp
add
shl
fcmove
push
cmp
jae
add
outsl
outsb
das
jne
pop
jnp
enter
int3
leave
jae
ret
sarl
sub
and
jmp
fisttpl
xchg
dec
ljmp
lret
fimuls
cmp
test
mov
dec
je
adc
aas
xor
add
movsb
fucom
fisttpll
les
dec
out
dec
arpl
push
imul
fadds
rclb
sub
push
in
mov
test
pushf
out
or
pop
jmp
push
insb
lret
icebp
mov
out
mov
cmp
sub
shlb
mov
ficoms
cmp
sahf
cld
push
pop
mov
dec
clc
pushf
test
push
sbb
pop
and
lea
add
insl
push
decl
andb
jbe
dec
das
inc
and
adc
adc
pushf
add
in
mov
fstpl
cmp
inc
xor
movd
ss
mov
mov
cmp
orl
jp
loope
je
inc
xor
test
cmp
lock
int
popf
decb
data16
sub
dec
cs
or
insb
repnz
mov
mov
xorl
adc
mov
fwait
xor
cmp
sub
and
mov
lea
pop
sbb
in
test
fs
dec
mov
push
call
mov
pop
jecxz
jno
sbb
fdivs
into
mov
jb
and
adc
pop
xchg
adc
xlat
pop
lcall
nop
movsb
shr
pop
in
test
icebp
call
pop
xchg
dec
mov
aaa
pop
xor
pop
add
jno
dec
or
push
inc
adc
mov
insb
push
or
cwtl
dec
sbb
sub
adc
sarb
aam
data16
xchg
sub
xor
test
sbb
icebp
add
sub
adc
scas
inc
jae
inc
adc
repnz
xchg
cmc
enter
adc
jae
insb
jo
pop
mov
jnp
sbb
mov
out
mov
dec
jo
pop
pop
pop
xlat
cmp
mov
dec
aas
mov
mov
jno
ljmp
xor
sbb
or
popa
and
xchg
sub
mov
jo
pop
dec
pop
stos
push
adc
add
es
jno
aas
lcall
pop
push
dec
dec
xor
dec
push
fmul
adc
cmp
or
jnp
fcomip
cmpsl
dec
pop
sbb
or
jmp
jb
jg
repz
adc
jae
or
xor
inc
les
sub
sbb
ffreep
in
pushf
sahf
sbb
adc
and
mov
and
mov
mov
lock
cmp
push
sbbl
push
sbb
call
aad
popa
mov
cmpsl
xchg
sub
mov
aas
lock
mov
mov
aas
push
mov
adc
lret
mov
rcll
clc
loop
sbb
cmp
gs
mov
xchg
stos
mov
shll
jns
mov
enter
push
push
test
adc
cld
dec
xor
jae
and
mov
dec
into
in
push
lret
add
mov
xor
mov
adc
push
imul
in
mov
cmpsb
cs
xor
mov
mull
imul
icebp
jle
pop
ss
es
add
enter
arpl
faddp
fucom
add
xor
jge
out
mov
int
out
pop
inc
push
mov
push
out
adc
inc
icebp
shlb
imul
xchg
fdivrl
pop
cwtl
and
enter
bound
xchg
testb
into
mov
call
imul
outsl
aas
mov
popa
ret
int3
or
mov
mov
dec
fdiv
pusha
jae
pop
mul
sarl
lds
mov
test
arpl
push
stc
negb
add
sub
or
andl
movsb
test
jmp
enter
sti
ret
add
mov
cltd
mov
mov
iret
cmpsl
sub
out
add
rcll
lods
pop
mov
lret
or
fsts
shlb
mov
jbe
jmp
and
jno
std
ja
cmpsb
movsl
dec
fnstenv
mov
pusha
int
jae
adcl
pop
cwtl
mov
add
daa
popl
aam
xchg
gs
outsl
pop
fcoms
sarl
xor
pop
out
fs
hlt
stos
jo
in
in
daa
lea
jl
adc
sti
xchg
loop
in
xchg
and
inc
fs
jle
leave
push
or
pop
testb
and
jno
jnp
xchg
push
popf
jnp
ds
loop
adc
inc
iret
mov
clc
das
mov
ja
popa
adc
jecxz
cmpsl
ja
ret
add
sbb
roll
fs
push
stos
xor
add
jg
nop
add
scas
adc
outsb
pop
xlat
add
in
popa
xor
je
cmp
jecxz
iret
push
jne
sbbl
lret
int3
insl
push
dec
shrl
add
sbb
rcrl
subl
xchg
lea
push
add
shll
mov
mov
inc
out
xor
jo
arpl
cmc
push
inc
fists
push
lods
fldt
aam
cltd
add
or
push
int3
mov
jmp
fwait
scas
inc
xchg
das
inc
loope
push
cmc
sbb
jge
xchg
xchg
push
lret
inc
lock
cmp
insb
adcl
xor
sar
ss
repz
por
stc
movsl
mov
mov
sti
aaa
incl
stc
push
test
and
and
inc
icebp
cwtl
xchg
int3
sub
adc
orb
jno
pop
push
jmp
leave
push
subb
icebp
and
lcall
mov
shrb
adc
push
cmc
pop
lcall
ret
fbstp
jnp
rorb
shlb
or
cltd
pop
in
pop
mov
arpl
fdivrl
mov
iret
adc
aam
cwtl
jo
lock
movsl
sub
imulb
jle
fisubl
movl
aam
arpl
sub
mov
mov
jnp
sbb
mov
sub
xchg
std
das
cmp
int3
je
shll
jp
lods
shrb
sbb
fnstsw
dec
popa
inc
iret
add
xor
lods
arpl
mov
ds
out
sahf
sbb
push
fwait
jno
lcall
rcrb
pop
jp
pop
inc
mov
not
xchg
adc
dec
or
cmp
lcall
in
xchg
cmpb
xor
mov
sub
int3
dec
dec
or
mov
inc
dec
adc
bound
push
xor
dec
shrb
nop
mov
xor
xchg
iret
in
push
sbbl
dec
rol
div
push
sbb
jl
sub
xchg
adc
insb
push
pop
xchg
and
repnz
gs
dec
xor
subb
fwait
push
pop
or
mov
push
or
movsl
rclb
xor
into
insb
cltd
hlt
mov
popf
addr16
shl
lahf
dec
mov
push
sbb
push
ret
sbb
push
sbb
jb
fwait
je
or
vpxor
lds
scas
sub
mov
les
in
inc
lahf
fidivrs
out
xor
fsts
shll
pop
jl
add
nop
pusha
push
adc
inc
push
pop
adc
rorb
add
adc
inc
packsswb
cmp
je
or
arpl
cmpsl
lea
lods
xor
mov
enter
shr
rorl
ret
xchg
dec
pop
lds
jle
push
lods
jae
in
sahf
cld
pop
dec
cld
push
xchg
shlb
mov
xchg
inc
inc
dec
sub
and
lods
nop
cmp
push
popf
inc
fstps
aas
mov
lods
and
pop
int
adc
adc
mov
xchg
lock
cmp
pop
cmpsb
dec
cwtl
insl
xlat
xchg
enter
xchg
clc
mov
adc
pop
out
jge
mov
iret
adc
rcrb
in
cmp
rcrb
or
fsubr
pop
test
mov
pusha
insb
movb
mov
fs
test
in
jno
mov
or
cltd
int
popf
daa
and
push
roll
or
pop
jecxz
adc
inc
adc
adc
lret
jne
ljmp
sti
jne
jp
cs
ljmp
outsl
and
sub
sbbb
nop
mov
ret
jbe
jp
adc
stos
aam
fstl
sbb
adc
mov
std
testl
pushf
frstpm(287
bound
movsb
sub
adc
sarb
mov
sbb
and
sbb
stc
xchg
add
xor
mov
outsb
cmc
jnp
js
push
mov
mov
in
fwait
mov
scas
and
push
daa
lods
mov
jmp
lock
cmp
or
pop
jge
push
xlat
mov
arpl
ud0
push
mov
int
jecxz
lret
mov
fdivl
sub
cwtl
gs
mov
pop
jo
je
lret
pop
aas
pop
sbb
xchg
push
xchg
lret
cmp
pop
test
adc
dec
shrb
sbb
xchg
adc
mov
jbe
nop
lret
mov
pop
jno
addr16
stc
popf
inc
and
lahf
mov
mov
xor
lret
push
pop
mov
insl
iret
xor
movsb
pusha
push
movsl
sti
cmpsb
int
jno
sarb
push
mov
fidivrl
repz
in
push
dec
out
fnstsw
movsb
bound
in
adc
fdivs
js
ja
call
or
sbb
cld
or
inc
inc
xchg
repz
clc
xchg
dec
fstp
sbb
hlt
ss
jnp
movsb
mov
repnz
scas
fists
aas
and
and
xchg
test
out
scas
imul
push
sub
sarl
xchg
cmp
push
mov
outsl
mov
add
add
pop
xor
sbb
push
push
imul
iret
into
or
pop
lock
mov
enter
lods
shrb
mov
dec
inc
mov
aam
cmpsb
lods
add
sti
ret
and
xor
sahf
cmp
vandnps
lret
mov
inc
mov
push
divb
shr
cld
mov
sbb
mov
ret
push
ss
xor
add
jmp
mov
inc
pop
lds
and
xchg
dec
aad
lcall
test
inc
cmp
shlb
mov
imul
out
aam
filds
inc
mov
mov
add
adc
jne
into
cmp
aam
addb
push
lods
lret
xchg
mov
int
sti
or
nop
mov
aam
xchg
fdivl
add
mov
repz
lcall
push
cmp
leave
icebp
jne
or
in
xchg
imul
pop
and
insl
jmp
dec
add
cmp
xchg
mov
jmp
jg
mov
adc
mov
jbe
int
and
les
js
sbb
movsl
data16
aaa
gs
or
sbbl
int3
fsubrs
outsl
vpxor
sub
lahf
or
jecxz
nop
das
pushf
mov
aaa
cmp
movsl
insb
jbe
inc
fcmovb
dec
push
mov
das
gs
cmp
mov
dec
arpl
mov
cmp
popa
and
mov
daa
sub
les
or
cmp
sub
cmp
bound
xchg
out
and
dec
call
inc
adc
inc
mov
dec
pop
cmpsb
test
mov
imulb
mov
push
fldenv
push
push
out
mov
les
cmp
cmp
jo
sbbl
leave
shll
fstpt
sub
test
in
xor
cmp
jg
adc
mov
movsb
add
xor
jnp
sub
cmp
cltd
adc
inc
jne
int3
jle
inc
cmp
pop
pop
mov
or
fists
sbb
sbb
cmp
lahf
or
imul
add
cmpxchg
mov
push
bswap
inc
or
push
and
mov
mull
in
push
bnd
repnz
jle
lock
inc
xlat
pop
sub
xchg
hlt
xlat
push
repnz
mov
adc
loop
push
outsl
fs
repnz
dec
js
ljmp
xor
cs
lret
lods
push
and
int3
popa
jmp
xchg
xchg
fnsave
push
or
push
mov
mov
xlat
sbb
sbb
jo
xlat
mov
inc
xor
fldcw
orb
jl
jo
xor
jmp
pop
mov
xchg
rolb
out
xchg
mov
pop
js
stos
add
add
rcrl
xor
mov
call
ja
or
loopne
mov
jo
mov
xor
push
call
push
and
mov
stos
xorl
mov
notl
mov
xchg
mov
lret
out
outsl
sahf
xchg
cmp
and
pop
into
ficoml
mov
inc
jg
sbb
or
jg
cs
xchg
push
adc
cmpsb
sarb
inc
decl
gs
jl
adc
daa
repnz
dec
rcll
pushf
mov
test
or
outsl
test
sbb
in
imul
pop
rcr
mov
cli
dec
add
iret
dec
mov
adc
mov
inc
jmp
ficomps
jle
test
sbb
push
jecxz
lahf
mov
pop
js
cs
out
inc
repnz
push
enter
dec
sub
mov
scas
aam
inc
inc
stos
jae
jg
int3
push
inc
cmpsb
scas
xor
inc
cmp
push
jle
or
pop
jmp
pop
fwait
testl
mov
inc
push
loopne
fsts
lahf
rolb
add
movsl
add
mov
test
pusha
xchg
inc
pop
shll
mov
add
pop
std
ret
fisubl
sbb
inc
inc
popf
push
icebp
inc
sub
push
or
adc
mov
push
je
jo
inc
dec
jne
repnz
aaa
dec
outsb
mov
mov
cmp
jp
adc
inc
xchg
pop
mov
out
mov
jp
pop
add
xor
jo
flds
mov
or
and
aaa
negb
sub
mov
pop
adc
pop
pop
inc
in
scas
insb
bound
addr16
in
cmp
icebp
mov
push
cmp
or
sub
loop
loopew
mov
fdivl
xchg
xchg
into
mov
mov
scas
sti
gs
enter
jne
sbb
jno
jl
xchg
jl
jmp
shlb
in
adc
cmp
fs
repnz
pop
mov
adc
int
dec
sub
sbb
fstpt
dec
lock
fmul
mov
popa
mov
push
or
jl
jo
jb
jl
fadds
sub
pop
and
sub
mov
or
pop
or
push
in
xorl
mov
cmp
jnp
jb
adc
dec
stc
shll
jae
and
call
pop
add
add
fdivrs
mov
lods
xor
pop
cmp
mov
daa
dec
test
es
xchg
adc
leave
xchg
add
or
cmc
jge
lret
mov
add
int
insb
ret
adc
nop
mov
cmpsl
jns
je
rol
mov
lods
inc
pop
xchg
inc
sarb
popf
inc
dec
sarb
cmp
and
sub
and
mov
add
jo
nop
pop
pop
in
lea
pushf
iret
in
sti
je
cld
bnd
jo
stos
adc
dec
mov
mov
jae
es
or
mov
xor
push
mov
sbb
icebp
mov
or
in
sbb
push
sub
cs
cwtl
cmpb
mov
xchg
and
and
and
inc
and
cmp
ljmp
adc
dec
rorl
loop
dec
mov
xchg
sti
movsb
push
shlb
push
sbb
jecxz
sahf
shl
nop
mov
insl
in
int
pop
inc
or
lods
adc
pop
mov
push
inc
jb
jne
popf
sbb
mov
xor
stos
js
call
xchg
cltd
repz
inc
sub
andb
jb
push
jb
jo
lahf
cmpb
xor
mov
push
jmp
movsl
outsl
cmc
and
stc
push
dec
pusha
sub
xchg
jnp
test
loop
mov
mov
mov
or
mov
aam
lock
sub
mov
cmp
data16
rclb
cmp
je
outsl
test
jl
sbb
ret
mov
mov
jae
xor
pop
cs
rclb
fstps
jle
enter
enter
loope
ret
out
aad
xchg
int3
out
xor
pusha
int
aam
out
push
xchg
test
jnp
jnp
mov
xchg
jge
pop
push
lahf
xchg
mov
mov
loopne
mov
fldcw
sbb
cmpsl
mov
fisubrl
cld
mov
jmp
leave
fsubr
xor
dec
dec
stc
dec
out
mov
insl
inc
sub
adc
push
push
jmp
lret
mov
add
jnp
pop
je
out
cmpsb
insl
lods
and
shl
cmpsl
cmp
fcomps
adc
or
jno
rcl
or
dec
outsl
test
sub
out
jl
call
jmp
mov
jno
ljmp
jg
stos
daa
jmp
fidivl
daa
sbb
mov
push
popa
mov
xorb
jo
fists
outsl
dec
outsl
orb
int3
pop
add
scas
lret
fcos
mov
or
mov
dec
rorl
jp
cld
mov
mov
adc
sbbl
adc
inc
or
cmp
adc
push
sbb
out
repnz
leave
jo
pop
cwtl
sub
enter
lods
push
hlt
dec
movsl
xchg
add
aas
dec
sbb
cmpsl
xchg
adc
mov
dec
bound
jecxz
lods
or
inc
in
fstl
aad
mov
mov
mov
testl
xchg
rep
adc
in
rcrb
push
or
mov
push
neg
out
lcall
push
lahf
or
pop
sbb
xor
rorb
hlt
pop
lods
push
and
ret
movsb
mov
les
jo
jae
fisttpl
xchg
xlat
xor
test
push
mov
mov
sbb
in
mov
loop
add
cmc
xor
nop
dec
fnstsw
inc
pop
idivb
les
out
decl
mov
add
daa
xor
mov
lahf
pusha
call
mov
popf
jae
call
test
lret
loope
sbb
add
add
int
pop
into
out
sbb
and
fldt
das
imul
push
pop
cld
xchg
jae
pop
cli
jne
inc
lock
push
fisttps
mov
add
out
inc
xchg
cltd
sbb
jp
dec
push
mov
popf
mov
sub
push
outsl
sbbb
xor
push
mov
mov
lahf
or
pop
repz
mov
daa
adc
adc
adc
fsqrt
rcrl
cmc
mov
lea
imul
les
into
aad
dec
inc
out
loop
lea
aaa
sub
pop
jbe
pop
inc
mov
xchg
mul
roll
sbb
call
inc
mov
lcall
mov
lcall
sbb
lcall
dec
xchg
xchg
fbstp
add
or
iret
push
sub
dec
nop
inc
int
push
dec
out
aaa
jmp
sub
lcall
push
out
mov
jne
mov
lock
into
sub
ds
pusha
pushf
jbe
outsl
popf
jbe
pop
pop
mov
mov
fists
cmp
mov
stos
mov
cmp
lret
mov
or
out
lahf
pushf
popf
or
addr16
mov
pop
adc
stos
shll
sub
and
lea
xchg
insl
inc
ret
and
cmp
or
xchg
mov
dec
icebp
test
mov
push
sti
sub
sbbl
push
cmp
and
cmp
xchg
test
sbb
fs
mov
movsl
mov
movsl
in
and
mulb
imul
push
sub
popa
inc
loopne
mov
arpl
inc
das
ret
jo
fdivrs
rcrb
cmpsb
in
sti
mov
pop
outsl
ficoms
xchg
mov
and
ja
push
push
out
xor
adc
fildll
xor
sbbl
ds
pop
imul
pop
mov
loope
mov
test
push
divb
sbb
loopne
fcmovne
mov
cmp
imul
pusha
pop
adc
out
xchg
popf
mov
fnstcw
in
mov
inc
push
test
test
imul
lret
in
orb
push
jl
sar
xor
hlt
inc
icebp
ficomps
movsl
lret
pop
push
int3
jg
cmpsl
mov
xor
and
iret
sub
pushf
test
xchg
setb
pop
mov
pop
mov
inc
dec
rol
push
sub
pop
les
xor
stc
mov
xor
scas
adc
pop
or
dec
outsb
mov
pop
enter
mov
push
iret
mov
mov
ds
shrl
sub
sub
xchg
xchg
das
jmp
lahf
push
inc
test
push
sbb
popf
adc
sub
sub
out
lea
mov
pop
loop
push
push
mov
xor
cmp
mov
call
cmpsl
push
dec
sbb
fucomp
adc
jo
or
fmuls
cwtl
icebp
xchg
jge
cmp
lahf
adc
ret
popa
jmp
lcall
movsl
fldt
pop
jp
movsl
pop
test
in
push
sbbl
push
push
mov
mov
cmc
fcomip
mov
push
pop
sbb
pushf
sub
pop
lret
loope
repz
ret
mov
xchg
dec
lahf
ret
jo
loop
sub
lods
pop
lahf
enter
insl
pop
inc
shlb
loopne
imul
or
cwtl
loop
push
loopne
or
sbb
xchg
imulb
leave
adc
pop
pop
ljmp
cmp
addb
sbb
fcoml
mov
inc
and
call
pop
pop
lahf
jmp
cs
mov
std
adc
popa
out
jge
imul
mov
jle
inc
loop
or
out
bound
inc
or
aam
mov
in
push
fldenv
jl
rcr
add
neg
adc
leave
hlt
xchg
scas
out
cltd
pop
lods
outsb
and
jg
xlat
mov
fs
sbb
xchg
pop
and
sahf
dec
mov
test
sub
pushf
dec
pop
push
fcoml
shl
ret
mov
int
cwtl
pop
movsl
cli
push
and
rol
mov
hlt
jl
sti
leave
rcrw
mov
gs
out
sti
sub
xor
out
aaa
fistps
push
repnz
xor
test
mov
rcrl
xchg
push
mov
pop
clc
cld
int
mov
insb
jnp
adc
je
pop
push
xlat
or
xor
lret
inc
cmp
popf
stos
into
cli
pop
push
xchg
jge
pop
sti
add
mov
lahf
ja
or
stos
loope
pop
mov
out
or
neg
mov
add
adc
jge
cld
xchg
and
lret
adc
int
fistl
and
sbb
ret
sbbl
jge
mov
jp
pop
cld
sbb
clc
mov
jge
dec
ss
into
push
movsl
cmp
inc
aam
int3
pop
cmc
ret
pop
stos
in
arpl
iret
and
mov
adc
icebp
aad
xchg
jo
enter
jge
jle
add
add
pop
dec
mov
dec
adc
loop
and
pop
lahf
adc
loop
push
cs
add
cmp
imul
sahf
cmp
das
adc
add
cmpl
sti
adc
out
rclb
aad
push
mov
sahf
gs
repnz
inc
bswap
mov
fstpl
in
mov
into
xchg
push
aad
pop
out
negb
fisubrs
dec
adcb
jno
push
mov
jg
push
notl
mov
add
or
pop
inc
jmp
popf
mov
fsubrp
and
lods
test
mov
fmul
xchg
cli
rcll
cmpsb
mul
outsl
add
scas
in
inc
mov
in
aad
pop
shrl
test
repnz
xchg
and
js
mov
pushf
jb
fisttps
cmpsb
lcall
and
int
loope
add
mov
in
mov
adc
outsb
sbb
mov
push
mov
and
loop
dec
aaa
and
xor
xchg
sbb
int
dec
jmp
adc
lret
mov
sub
or
and
mov
sbb
ror
sub
xchg
not
ja
push
adc
cmpsb
xor
div
cmc
int3
sub
add
push
addr16
push
mov
mov
pushf
shrb
cwtl
lods
loop
or
inc
jo
push
inc
aas
cld
fwait
out
call
adc
sub
lods
push
xchg
les
aam
lock
insl
rcrb
lods
adc
inc
and
add
mov
in
sti
pop
or
jecxz
and
sub
push
rcl
dec
xor
js
pop
push
cld
mov
push
mov
rorb
test
imul
jl
push
imull
push
push
enter
les
add
int
loopne
jl
push
mov
mov
sahf
jmp
xor
cmp
push
stos
dec
inc
enter
push
cld
and
push
imulb
xchg
inc
push
mov
dec
icebp
das
cmp
xchg
outsl
mov
mov
rorl
xchg
and
popa
cmpsl
push
mov
adc
stos
lea
add
or
mov
mov
sub
mov
pop
test
pop
xchg
cmp
into
and
mov
pop
aas
scas
mov
mov
movb
incb
movsl
jle
test
mov
push
icebp
icebp
push
jl
xchg
push
mov
push
pop
jo
push
imul
mov
xor
stc
push
loopne
or
aad
lods
adc
cwtl
xchg
dec
lea
movsl
fdivrp
pop
or
sbb
arpl
push
add
cmp
jne
arpl
and
or
jbe
push
loope
push
mov
test
nop
int
and
mov
enter
int
cli
jl
dec
jmp
pusha
and
ja
into
lret
shld
dec
ja
dec
pop
testb
jns
les
pop
imul
adc
jecxz
mov
mov
pop
dec
push
imul
scas
xchg
inc
or
lcall
add
ljmp
shl
cs
mov
xor
test
add
pop
ljmp
lcall
push
xor
jns
xchg
cmovge
jg
je
pop
in
sub
rol
ffreep
lcall
xchg
mull
imul
or
scas
and
in
jns
mov
lock
sbb
dec
aas
sbb
dec
or
and
adc
fscale
incb
in
fisttpl
sub
jp
cltd
push
push
cmp
ja
lea
mov
sbb
aam
xchg
push
adc
pop
mov
mov
sbb
mov
pop
cs
mov
in
push
into
mov
cld
mov
cmc
ror
sbb
mov
and
test
aas
xchg
dec
fprem
pop
movsb
xor
and
pop
daa
jle
pop
int
sar
addr16
mov
jmp
sub
push
or
mov
mov
leave
cli
cwtl
pop
sbb
ret
out
fidivl
stos
xlat
into
jmp
idivl
out
dec
xchg
adc
pusha
inc
scas
sub
inc
enter
dec
mov
lcall
cwtl
add
push
cmpsl
xchg
mov
inc
pushf
test
push
in
adc
lods
mov
mov
imul
push
cmp
sub
sub
inc
orb
pop
cwtl
jae
sub
fimull
jecxz
jg
lea
add
dec
push
dec
jo
cmc
sti
fwait
pop
fnstenv
movsb
cs
inc
fcompl
jecxz
popf
inc
xchg
ret
ret
es
rorl
cmpsl
fsubs
dec
jmp
mov
cmp
and
cld
ljmp
pop
data16
aam
ret
push
imul
rorb
push
push
sbb
adc
call
cmc
lods
daa
pop
loopne
fimull
or
lcall
adc
xchg
mov
push
and
rol
push
ror
jle
jmp
pop
lret
in
in
push
inc
clc
sub
mov
mov
out
scas
pop
mov
mov
cmpl
dec
in
movsl
push
arpl
jae
std
adc
ljmp
sbb
js
push
dec
jnp
mov
stc
push
xlat
nop
pop
add
xchg
sbb
or
das
xlat
pop
in
std
mov
or
int
jno
fstpt
and
fimull
daa
jmp
mov
hlt
leave
jp
loopne
outsb
mov
jnp
imul
cli
xor
sbb
iret
or
pop
hlt
outsb
cmc
mov
rcl
lahf
fs
dec
xor
aaa
mov
cmc
rorb
add
test
dec
outsw
lods
imul
lods
mov
xor
jmp
icebp
adc
aas
cltd
aam
jae
repz
and
pop
fisttps
aaa
popf
pop
jbe
add
testb
frstor
sbb
or
xlat
mov
jbe
jp
insb
out
jns
aad
mov
lea
stc
iret
inc
cmp
imul
enter
dec
icebp
xor
sub
movups
sbb
jbe
loope
stc
rolb
leave
and
jbe
cmp
out
jecxz
loop
or
add
push
fmulp
xchg
repz
inc
pop
or
fidivrs
idivb
inc
xchg
xchg
sub
jmp
mov
pop
data16
sahf
sub
lock
jb
and
xchg
pop
data16
ja
lods
mov
adc
pushf
pop
lods
adc
stos
pop
into
mov
xor
adc
fisttpll
mov
cmp
jnp
mov
xor
jmp
lea
les
jae
add
pop
or
mov
sbb
out
mov
lahf
mov
dec
fisubl
imul
cs
sub
sub
ds
pop
jl
lcall
out
jl
pop
xchg
adc
mov
scas
pop
sbb
out
mov
cmc
sbb
mov
lret
dec
push
jno
ss
stc
and
aam
aad
xchg
insl
in
mov
cmovo
jp
ficoms
jg
sti
ret
adc
pop
jno
mov
adc
inc
jns
pop
sbb
mov
in
aas
pop
adc
mov
add
js
push
xchg
bound
ror
in
pushf
js
mov
add
nop
imul
pop
imul
pop
xchg
mov
fs
jo
jmp
xchg
push
inc
stos
xor
pop
jcxz
mov
dec
in
or
popf
fiaddl
mov
pop
flds
outsl
into
out
sbbl
lret
ss
dec
lahf
xorl
jmp
fistpl
call
dec
icebp
arpl
leave
push
js
clc
inc
push
std
push
inc
xchg
stos
call
inc
sbb
lock
add
jge
test
mov
jecxz
jle
push
test
push
push
xchg
imul
mov
xor
jno
repz
push
push
ret
hlt
decb
push
mov
mov
ljmp
fildll
fildll
mov
jo
jmp
jb
sub
cmp
int
cld
dec
je
cltd
xor
or
jb
movsb
sbb
cmp
push
cs
sub
std
lds
adc
mov
not
shlb
pop
dec
xchg
or
out
out
test
xchg
mov
push
ret
aas
clc
mov
loop
inc
jbe
outsb
ret
dec
fstpt
sub
outsl
ss
cltd
leave
cmpsb
jle
or
xor
pop
mov
xchg
hlt
push
mov
adc
cltd
dec
cwtl
sti
xor
inc
add
outsl
xchg
jge
in
pop
push
mov
push
rol
nop
into
hlt
sbb
xchg
adc
xchg
jns
sbb
dec
fstps
cmp
xor
fidivrs
mov
xor
mulb
add
mov
test
rcrb
rcrl
or
cltd
lods
icebp
mov
pushf
pushf
mov
adc
mov
aaa
aad
push
ffree
pop
scas
jle
dec
cmp
or
mov
xor
ljmp
imul
push
mov
mov
pushf
mov
xor
aas
das
sahf
ficomps
pop
push
add
and
xor
pop
xchg
sbb
pop
xchg
add
ret
fdivp
gs
jns
fcmovu
call
ljmp
cmp
std
test
sub
push
jne
iret
lcall
cmpsb
sbb
cld
fcoml
scas
jno
jb
push
loopne
mov
ljmp
pop
cmp
mov
call
adc
cli
sub
leave
into
out
sbb
in
add
jbe
mov
pop
in
shll
mov
sbb
jae
mov
es
inc
mov
dec
loopne
xchg
or
mov
ljmp
or
push
inc
push
xchg
mov
pop
sub
repz
into
or
and
sub
cmp
add
aad
sub
cmc
jp
sub
cmc
out
out
je
mov
xchg
add
fcomps
int3
imul
rcrl
xchg
outsl
inc
int3
jns
addr16
lcall
aam
mov
adc
and
sahf
lock
dec
mov
ss
push
pop
push
out
ret
adc
mov
fisubl
stc
icebp
push
ret
jg
lds
fwait
mov
adc
push
adc
popf
daa
inc
and
sbb
xor
dec
and
pop
addr16
xchg
push
xor
pushf
adc
push
mov
add
shll
mov
arpl
inc
cmp
and
cmpsb
test
add
test
sahf
mov
mov
enter
movsl
push
cmc
daa
in
insl
out
lods
cltd
in
cmp
jg
lock
scas
add
xchg
std
lods
xchg
xchg
mov
jp
fistpll
loopne
sarb
add
pop
pushf
jp
into
loope
in
and
cmp
ret
ja
push
mov
in
mov
pushf
pop
push
cmp
mov
rcrl
dec
leave
insl
xchg
adc
nop
stc
sub
mov
scas
xchg
xchg
mov
adc
popf
mov
xchg
mov
lcall
in
cmp
imull
std
mov
jno
add
fmul
aaa
decl
pop
mov
mov
lods
rcrb
mov
jecxz
loop
icebp
sbb
xchg
mov
out
aas
stc
je
add
test
pop
cmp
adc
into
es
sbb
lahf
pop
mov
xchg
test
ret
scas
test
jecxz
push
mov
mov
nop
cmp
out
mov
add
or
cmp
inc
mov
mov
fnstenv
lret
xchg
movsl
testl
mov
addr16
arpl
test
out
xchg
jge
add
lahf
out
pop
lret
aad
push
adc
xlat
add
mov
mov
repz
sti
sub
stc
jmp
fs
inc
idivb
dec
or
cmp
int
inc
cmovno
rcl
adc
test
gs
repz
sub
jg
dec
aas
es
fmulp
int3
push
dec
daa
inc
popa
ljmp
pop
jmp
movsl
push
shrb
mov
test
pop
adc
jmp
jg
fbstp
insb
xchg
std
and
jae
inc
jmp
xchg
xor
jecxz
lock
mov
imul
sbb
xchg
imul
lods
ss
mov
iret
or
push
jns
inc
pop
test
repnz
out
jg
out
mov
in
les
jo
sbb
in
push
popa
insb
outsl
add
lret
adc
sahf
int
in
push
lret
insw
mov
dec
cli
clc
push
fsubs
cs
data16
push
mov
mov
divl
dec
xchg
test
sub
ss
or
lock
dec
dec
add
test
push
cmpsl
into
inc
or
test
push
jno
or
repz
stos
in
xchg
or
les
xchg
mov
or
loope
adc
jmp
adc
shlb
and
xchg
fst
lea
gs
data16
cltd
sahf
jmp
test
adc
xchg
sub
call
popa
sbb
push
or
bound
cmpsb
mov
push
push
sub
mov
mov
cs
adc
out
ret
scas
inc
iret
ja
cmp
aaa
popa
addr16
call
dec
jbe
mov
lods
jb
int3
or
add
fstps
out
shll
lahf
xor
out
jns
push
js
or
mov
fsubrl
or
push
or
dec
imul
mov
jg
cltd
or
std
sub
pop
and
aas
fsts
clc
mov
dec
push
int3
jo
outsl
lcall
fiadds
ret
pop
iret
jl
xor
adcb
push
shl
jne
stc
inc
inc
mov
pop
movsl
or
cwtl
pop
pop
lcall
ds
roll
int
jl
mov
pop
push
stc
push
xchg
push
cmp
sub
sti
adc
out
inc
push
lahf
sub
add
lods
loopne
cmpsl
insb
xchg
imul
js
int3
aaa
push
push
test
inc
cmp
lahf
rorb
sar
sbb
add
cmp
insl
pop
xor
inc
js
push
inc
cmpsl
int3
and
mov
jae
or
sbb
std
push
std
jl
xor
pop
or
loop
mov
pop
inc
orl
std
mov
orl
adc
xchg
xor
mov
in
aas
ljmp
outsl
push
pop
scas
sub
sbb
add
cld
and
daa
push
jecxz
jge
lret
int3
imul
jl
sbbl
sti
ret
addr16
outsl
int3
jae
fimuls
dec
cwtl
sti
xchg
pop
call
or
fsts
into
aas
aas
outsl
pop
inc
int
sbb
jne
and
jae
sbbl
lea
mov
mov
push
cltd
popf
out
mov
les
test
xchg
pusha
pusha
mov
add
pop
mov
mov
lods
cmp
cli
inc
cld
push
mov
xchg
mov
or
ja
fs
or
rolb
mov
mov
ret
mov
lods
sub
pop
out
negb
jl
sbb
sbb
into
sbb
scas
rcll
lcall
mov
rcrl
and
clc
clc
roll
imul
mov
fdivl
lahf
pop
push
fdivrs
mov
xchg
sbb
jge
cmp
inc
cmp
xor
shlb
cmp
adc
mov
scas
or
popl
out
lcall
into
xor
int
hlt
mov
cmc
xchg
lock
xor
arpl
xlat
shll
cmpl
xchg
add
out
lock
xor
loop
inc
int
mov
pop
stc
repz
cmpsb
test
mov
dec
sub
push
mov
test
out
adc
jl
cli
add
and
stos
aas
cmp
push
inc
fnsave
push
lcall
sbb
mov
and
fcmovne
inc
lcall
dec
dec
imul
xchg
mov
mov
cld
cld
ficoml
or
pop
cmp
fst
sub
jno
mov
or
push
scas
xor
bound
stos
xchg
imul
mov
sub
pop
jmp
popa
xchg
aas
in
div
mov
inc
fisttpl
xchg
aam
popf
xor
inc
loope
mov
scas
mov
dec
mov
pusha
mov
jp
hlt
add
aaa
sti
iret
jl
mov
iret
dec
imul
fisubrs
sub
outsb
pop
mov
sbb
cld
push
jns
xlat
lods
mov
xor
jl
push
test
cltd
ret
popf
out
or
mov
sbb
pop
mov
call
mov
or
fisttpll
mov
arpl
xor
and
jmp
fldenv
jge
cli
xchg
shr
and
jae
push
lods
xlat
out
adc
inc
and
mov
push
movsb
push
mov
push
jnp
movsb
mov
lods
out
mov
ret
cmpsb
ss
mov
jo
or
test
adc
pop
orl
pop
jmp
or
ret
call
pop
jmp
lcall
xchg
repz
sahf
mov
dec
pop
call
cmp
fisubrs
inc
ja
mov
ret
sub
xchg
xchg
popa
icebp
sbbb
rcrl
cmp
gs
sbb
push
inc
cmp
sbb
fs
out
push
in
pop
xor
popa
decb
outsb
stos
inc
cmp
sbb
cmp
xchg
xchg
in
inc
push
gs
inc
cli
pusha
roll
std
jl
cmpsl
mov
dec
inc
in
int3
cmp
rolb
jbe
dec
push
dec
cmp
rcrb
js
jne
rolb
dec
or
out
int3
hlt
mov
xor
in
insb
xchg
push
push
or
add
and
add
fmull
std
sbb
fucomip
shl
lods
sbb
xlat
pop
mov
adc
sahf
sub
outsl
aad
in
setbe
push
negb
movb
test
test
adc
in
xor
mov
and
lock
shrd
jle
adc
xchg
aas
jecxz
adc
dec
aam
test
add
fcmove
add
outsl
pop
and
hlt
addb
lods
push
mov
cmpxchg
adc
lock
lods
lock
jo
jg
rcrl
leave
ret
das
mov
fadds
push
iret
jo
cwtl
ret
adc
cmp
dec
lock
dec
ds
pop
addr16
mov
mov
pop
xor
vmovdqa
call
sahf
aad
rcr
loope
dec
in
in
repnz
lahf
stc
hlt
popa
sti
inc
nop
sub
sbb
negb
sub
or
sbb
jbe
ss
cltd
gs
add
or
xor
cmp
push
es
and
pop
popf
push
in
addr16
mov
sub
daa
mov
xor
pop
popf
pop
loop
out
xor
and
je
les
or
arpl
mov
mov
lods
sub
adc
cmpsb
adc
cmpsb
jmp
ret
cmpsl
push
enter
jo
and
or
jg
mov
dec
fidivs
cltd
into
add
mov
aam
test
xor
jmp
lahf
rcll
mov
xchg
loopne
push
inc
rolb
fcoml
in
mov
loop
xchg
mov
dec
outsl
mov
lahf
push
or
cmpsb
push
pushf
inc
xlat
pusha
gs
fwait
xchg
or
push
jns
lret
dec
pop
outsl
cmpsb
xor
repnz
or
pop
pop
pop
xchg
mov
mov
imul
aaa
cld
pushf
inc
push
iret
xchg
cltd
jnp
mov
outsl
lea
dec
mov
add
inc
cmp
andb
outsl
add
jge
popf
fisttps
jo
pop
jmp
xchg
add
mov
popa
movl
ret
mov
or
rorl
inc
cmpsl
pop
jbe
jmp
lcall
in
daa
in
jmp
xor
mov
jae
dec
addr16
cmpsb
sub
rcll
fstp
loopne
dec
adc
icebp
out
imul
push
add
sbb
outsb
filds
in
imul
test
in
fcoms
mov
iret
test
loopne
push
sbb
std
xor
mov
mov
push
divb
jl
lcall
sahf
mov
pop
loope
repz
inc
das
dec
xchg
add
xor
ljmp
pop
push
int3
iret
idivl
jbe
adcl
add
into
xchg
nop
dec
or
fmuls
mov
cmc
fnstenv
test
add
aad
hlt
cwtl
sbb
divl
mov
jge
shll
and
out
adc
mov
sti
and
sbb
ljmp
clc
lret
sar
repnz
shll
incl
sbb
mov
xchg
and
cli
adc
js
sbb
arpl
lock
rcrl
push
pop
fildll
lret
or
mov
lret
int3
cmc
mov
and
add
insl
mov
xchg
cmp
pop
add
sub
ficomps
incb
add
xchg
scas
push
cmp
out
cmp
and
mov
pushf
xor
out
test
shll
jbe
arpl
adc
or
adc
mov
and
adc
jnp
mov
xchg
lock
insl
cs
mov
xor
fnstcw
out
mov
adc
pop
neg
out
dec
inc
jne
mov
sbb
pushf
in
xchg
cli
pop
inc
xchg
and
sti
int
imul
sahf
pop
jmp
add
mov
jb
push
pop
fsubs
sahf
lret
cmp
loope
adc
push
or
movsb
gs
pop
int3
out
lret
mov
clc
sbb
xor
mov
shlw
inc
jb
pop
push
scas
ficoms
mov
das
mov
sbb
mull
dec
add
sbb
cli
cvttps2pi
sub
sbbb
mov
and
push
pop
push
xchg
xlat
xchg
imul
push
cmp
mov
jno
sub
push
or
sahf
imul
cmpsl
add
pop
or
xor
push
mov
mov
lea
pushf
idivb
mov
push
sbb
inc
sbb
or
adc
jecxz
sbb
loopne
icebp
inc
je
loop
adc
iret
cwtl
test
fisubrs
insb
out
cmc
adc
adc
in
sbb
sbb
mov
ss
and
cmp
add
mov
ja
fimuls
dec
pop
cmpsb
movl
jo
mov
add
std
inc
sbb
icebp
cs
test
sahf
and
std
insb
xor
xchg
shll
ljmp
jnp
in
loop
shll
push
mov
mov
xor
mov
cmc
mov
mov
call
add
out
push
jmp
ret
stc
cmp
jge
pop
inc
fstl
mov
push
fildll
cli
push
push
mov
dec
dec
jae
sbb
adc
pop
sbb
mov
cwtl
repz
add
scas
inc
push
fbstp
mov
push
inc
mov
lods
jns
aaa
ja
add
addr16
sbb
sbb
cmp
jmp
mov
mov
fcoms
scas
sbb
xchg
jne
sbb
inc
xchg
mov
fistpll
cltd
sbbb
iret
pop
rcrb
movsb
fcomps
test
xchg
pop
pushf
pop
incb
cs
cmpsl
shlb
insl
inc
mov
test
sbb
or
inc
sti
and
pop
in
in
or
fmuls
sub
pop
mov
or
mov
xorl
stos
stc
cld
xchg
xchg
mov
call
xchg
xchg
shlb
or
mov
add
fsubrl
mull
mov
and
inc
cmp
ss
fistl
dec
push
xchg
js
mov
fwait
adc
mov
xchg
and
add
std
inc
sbb
movsl
sbb
cli
mov
mov
cmp
or
jne
push
adc
mov
inc
mov
xchg
add
pop
mov
jbe
add
sub
sub
dec
pop
ret
cmpsb
test
pushf
sbb
mov
aas
inc
mov
out
cmpsb
filds
cmc
and
jbe
repz
fsin
ror
xchg
lret
sub
adc
xchg
std
dec
out
repz
enter
add
int3
mov
mov
sub
repz
pop
inc
lret
jecxz
fmuls
insb
adcb
and
into
inc
out
call
negb
ds
pop
mov
ret
mov
ja
cs
test
sbb
xchg
cli
mov
pop
mov
cmp
inc
or
and
inc
and
lret
les
mov
addr16
int3
lock
pusha
dec
lret
decb
pop
ret
jno
xlat
jns
jl
ss
push
sub
mov
call
xor
sbb
jo
out
lods
sti
hlt
jo
stos
jb
xchg
sub
sbb
and
jge
xchg
fildl
dec
icebp
test
adc
cmp
xlat
js
fmuls
jno
dec
sub
sbb
iret
jae,pt
popf
rol
xor
mov
add
aaa
je
in
test
test
xchg
imul
lahf
xchg
add
inc
xor
incb
sub
pop
sbb
aaa
jno
outsb
inc
hlt
xchg
imul
mov
and
mov
sbb
out
aas
loop
cli
xchg
std
xor
mov
push
pop
mov
jo
xor
push
jl
inc
add
cmp
xor
mov
jg
mov
jnp
jp
inc
jg
sub
mov
and
xchg
pop
sub
call
jbe
add
add
xor
push
or
sbb
xchg
sbb
in
and
shlb
jo
push
test
mov
stos
push
dec
bound
insl
push
add
inc
divl
pop
icebp
mov
add
mov
xchg
ret
adc
xor
cltd
mov
nop
or
jl
movsb
ror
sub
push
test
xor
rolb
sub
movsl
sbb
leave
lret
sbb
ljmp
xchg
fsts
test
lods
in
pushf
icebp
adc
cmc
sub
lds
repnz
add
sub
and
inc
fcmovnb
fwait
pusha
sahf
aaa
and
and
dec
add
mov
or
mov
push
xor
int3
mov
mov
or
inc
lock
cmp
nop
pop
jne
mull
xchg
dec
dec
jne
xor
mov
push
cld
pop
outsl
enter
adc
fcmovne
repnz
xchg
adc
call
aas
fld
cli
xorl
jb
pop
imul
je
mov
push
scas
push
cld
into
fsubs
cmpb
xor
xchg
loopne
and
dec
adc
push
clc
sub
int3
lods
jmp
rclb
fcomps
pushf
mov
adc
call
mov
in
fsubrs
dec
fidivs
cld
dec
ret
and
mov
inc
sub
cld
jne
cwtl
jno
dec
jo
orl
pop
pop
adc
mov
clc
out
int3
add
or
nop
cltd
inc
aad
in
mov
js
in
jae
inc
out
xor
das
xchg
sub
xor
jae
xor
in
and
lcall
sub
leave
jecxz
mov
push
inc
mov
push
sbb
rcll
jno
cld
xchg
sub
jg
dec
cs
sbb
mov
pop
mov
pop
push
dec
rclb
pop
loope
xchg
xlat
ds
dec
cwtl
les
or
aas
inc
or
mov
mov
incl
xor
mov
add
sub
pop
int
enter
add
cmp
dec
es
mov
aaa
cs
and
dec
hlt
sti
lcall
mov
insb
xchg
cltd
mov
jae
cmp
data16
test
xchg
pop
push
cmp
mov
movl
inc
mov
sub
or
test
add
inc
stc
cmp
mov
mov
mov
cmc
mov
outsb
mov
aad
pop
dec
bound
ljmp
arpl
lahf
push
or
adc
addb
add
mov
push
mov
and
mov
and
xchg
fidivrl
outsb
cmp
loopne
cld
sub
enter
into
jb
add
shl
pop
jmp
aas
adc
imul
in
mov
ja
pop
mov
jae
call
mov
mov
shl
sahf
sbb
ljmp
xlat
sti
push
gs
push
int3
xchg
mov
outsb
mov
sbb
cld
iret
and
packuswb
out
imul
outsw
mov
adc
cmp
jo
cmp
and
daa
in
pop
out
inc
inc
push
jmp
jae
inc
aaa
loopne
cmp
mov
jae
xlat
add
or
bound
inc
sub
jnp
inc
mov
ja
bound
rcrb
or
movsl
dec
adc
pop
aaa
inc
inc
mov
add
jp
xchg
inc
std
roll
icebp
in
ficompl
or
xor
mov
mov
pop
jne
mov
scas
push
or
add
cmp
xor
mov
aas
js
mov
adc
repnz
imul
scas
pslld
into
mov
aam
fnstenv
xchg
push
lea
aam
pop
jo
lret
in
scas
pusha
mov
je
sub
jo
dec
jp
cmp
sahf
xchg
vunpckhps
bnd
jl
mov
push
inc
fs
xchg
lret
mov
sbb
lea
aam
xor
jmp
pop
pop
mov
imul
test
popf
cmp
pop
push
mov
jo
jecxz
sahf
ja
aaa
sbb
daa
cltd
repnz
shll
fistl
cmpsb
scas
mov
xlat
lret
add
or
scas
pop
imul
loop
test
fstpl
outsb
jge
lods
or
lock
aas
mov
rcrl
popf
rorl
cwtl
fstpt
enter
je
es
lods
push
or
pop
mov
cmp
mov
fnstsw
stc
and
adc
stos
bound
dec
loopne
jmp
sbb
jg
xchg
stos
mov
popa
fbld
outsb
movl
daa
push
dec
mov
test
std
aaa
adc
and
popf
jne
add
pop
pop
push
test
xor
lret
cmc
cmc
dec
lds
jnp
cmp
xlat
adc
testl
sub
mov
lret
shlb
pushf
lods
jmp
lret
inc
mov
daa
add
sbb
or
xchg
imul
mov
ret
dec
push
push
das
mov
mov
cmp
clc
lods
icebp
push
scas
flds
shl
test
movsb
call
inc
loopne
jp
enter
dec
loope
out
shl
mov
mov
insl
mov
lock
xchg
stos
push
jns
push
jg
ret
popf
lret
imul
cmp
sbb
cmp
xchg
enter
mov
cmp
jmp
lea
mov
ret
stos
add
jo
sbb
arpl
sub
sub
call
fisubrs
mov
repz
orl
outsl
lods
sub
mov
or
mov
fsub
push
scas
test
adc
adc
dec
add
jmp
push
into
push
inc
mov
aad
xchg
insb
jg
cmpsl
pop
popf
jl
cltd
cs
push
cmpl
in
pop
sbb
test
fsubs
ja
aam
xor
pushl
mov
icebp
imul
sub
out
out
xchg
ljmp
sub
cmp
pop
mov
test
cmp
and
and
add
or
push
mov
jo
and
sarb
mov
jb
inc
mov
lahf
out
lcall
xchg
mov
pusha
rolb
sub
add
fidivrl
decb
negl
repz
sti
xor
mov
push
pusha
loop
loop
pop
sbb
arpl
add
adc
loope
or
or
sbb
and
repz
inc
lahf
cmpsl
push
leave
lcall
leave
rcll
push
mov
loope
popf
ljmp
mov
sbbl
or
out
push
push
insb
mov
adc
fdivrl
inc
push
jmp
icebp
mov
mov
cmpsb
shll
pop
xor
lar
sub
rclb
imul
and
rcll
pusha
sarl
and
pop
jbe
ret
and
pop
jle
data16
fisubs
cmp
call
rorb
xor
loope
outsb
xor
push
xchg
mov
xchg
xor
popf
outsl
aam
popa
mov
in
int3
fdivs
xor
mov
sbb
xchg
cmp
enter
into
xor
pushf
sbb
cmpsl
outsl
rcrb
andl
pop
pop
lods
or
jmp
xchg
arpl
stos
and
jle
mov
je
adc
jecxz
xchg
jno
dec
jp
jns
rcll
insl
mov
fsqrt
enter
mul
fstl
fneni(8087
adc
enter
and
ret
dec
into
and
inc
push
pop
or
push
pusha
fisubl
xor
aam
gs
popa
mov
mov
push
mov
shrb
jmp
jmp
fdivrs
imul
adc
cld
jnp
subl
jl
icebp
cld
sahf
xchg
jl
xchg
dec
xchg
adc
or
outsb
push
mov
jecxz
shlb
pop
dec
inc
jge
rcr
lea
mov
add
pop
dec
aam
stc
xchg
mov
mov
cmc
sub
adc
rclb
mov
movsl
fisttpll
sub
roll
jl
mov
mov
cli
cmp
mov
cmpsb
sub
cmp
je
insl
or
icebp
repz
and
mov
cmp
jecxz
cmp
aas
loope
int3
test
pop
mov
out
push
rorb
cmp
xchg
add
pop
pushf
call
xchg
fs
mov
lock
ds
inc
dec
inc
push
les
inc
cmp
or
ret
cld
xchg
xchg
movsb
dec
lock
adc
rcrb
clc
std
push
sub
or
cmp
cmpsl
jne
xchg
icebp
in
call
mov
dec
or
fdivl
sahf
cmpsb
cmp
mov
cwtl
rorl
mov
push
ljmp
cli
pop
add
enter
aad
xchg
or
out
add
adc
add
aaa
add
mov
pop
fbstp
iret
ss
cmc
ror
sbb
les
jae
incb
cli
cld
clc
or
ds
and
outsb
mov
out
jp
shrl
or
or
dec
fldenv
stc
in
negb
inc
imul
out
sbb
sbb
shr
mov
insl
int
movsb
daa
adc
ja
cwtl
xor
xchg
jb
int
jl
push
and
ds
jge
push
adc
pushf
cmp
ret
jg
ljmp
hlt
mov
jb
add
iret
je
repz
pusha
mov
mov
push
and
pop
stos
pushf
adc
ret
popl
dec
mov
fstl
enter
test
shlb
rep
dec
cld
out
lock
push
xchg
sbb
xlat
sub
adcl
push
sub
cld
mov
mov
mov
inc
push
push
inc
adc
xchg
ja
pop
cld
xchg
enter
sbb
insb
lret
ds
hlt
int
ja
mov
cs
bound
loope
iret
inc
imul
sub
gs
fists
cmp
sub
mov
cli
jno
pop
test
popf
repz
push
pushf
enter
pop
jae
mov
push
ss
cmc
jae
add
mov
jge
jecxz
bound
arpl
cmpsb
pop
add
pusha
mov
xchg
negb
pop
or
loop
pusha
sub
nop
gs
jb
ret
lret
pop
adc
mov
popf
jp
mov
lods
dec
cmp
cs
addl
dec
es
imul
xchg
cld
outsl
sarl
jne
out
repz
add
shrb
iret
iret
loope
xchg
fstpt
lret
cmp
call
jg
mov
test
add
pusha
xchg
push
cltd
movsl
pop
cmpsb
dec
mov
orb
pushf
je
adc
pop
xchg
hlt
jne
or
mov
mov
push
dec
repz
fwait
mov
cmpsb
mov
jmp
mov
adc
push
and
dec
mov
jo
fsubl
xchg
push
cwtl
ja
insb
pop
xchg
jae
lock
data16
es
mov
stc
fbstp
or
dec
mov
jns
test
aad
xchg
cmp
sbb
out
movsb
sub
ljmp
outsb
int3
sbb
fcmovnb
ret
loop
cmp
adc
or
gs
jb,pt
stos
subps
nop
sbb
inc
or
aaa
jo
movsl
push
popa
push
ds
sub
rorl
into
push
aaa
stos
xchg
in
repz
sbb
and
inc
lahf
xor
aas
mov
push
insl
cmpsb
fldenv
hlt
cmp
pop
lret
repnz
mov
insb
pop
dec
in
gs
cwtl
out
lea
mull
sti
stos
adc
aam
or
xchg
arpl
mov
repz
and
adc
test
dec
cmp
pop
push
jp
sub
fsubrs
adc
inc
sahf
push
mov
sbb
xchg
xchg
dec
popa
pop
pop
cmp
test
cmp
pop
pop
insl
stos
push
shld
push
jg
lea
loopne
into
xor
xor
inc
scas
push
jae
cmpl
iret
out
inc
cmpsb
jp
aaa
stc
sub
adc
mov
int
dec
fists
hlt
pop
sbb
and
push
pop
push
add
mov
and
int3
dec
xchg
xchg
cmp
test
mov
mov
dec
inc
xchg
adc
xor
aad
fdivrp
adc
adc
push
fadd
sarb
sub
sub
lods
and
ss
out
and
lcall
push
adc
fidivs
or
insb
ljmp
icebp
out
xchg
lea
test
xor
ljmp
mov
xor
movsb
enter
sbb
loopne
pop
int3
pushf
cld
or
jae
add
mov
mov
sbb
rcrb
or
pop
movsb
sub
or
mov
dec
cmpsl
adc
faddl
aam
addr16
cwtl
xor
dec
lcall
stc
sub
test
jp
ror
mov
and
jno
fdivs
in
ret
lahf
call
out
mov
jbe
lcall
or
mov
jg
fildl
xor
mov
pop
pop
inc
push
mov
roll
int3
enter
roll
mov
dec
push
add
insb
gs
clc
jmp
adc
call
stc
push
dec
pop
push
test
or
or
sub
xchg
dec
push
sub
xchg
ret
sbb
adc
mov
jbe
push
pop
je
dec
imulb
inc
scas
loopne
add
pop
adc
dec
invd
stos
cmp
or
jo
shl
sub
mov
or
out
and
loopne
or
ds
pushf
fdivl
mov
inc
and
into
mov
mov
xor
lahf
fs
jl
jg
test
in
push
fbld
lahf
mov
or
sub
imul
cmp
bound
jb
xor
jmp
testl
inc
and
std
jno
dec
test
test
pop
ss
aam
xchg
mov
inc
cli
andl
sbb
loopne
jb
shlb
or
pop
mov
outsb
mov
adc
jg
jp
xor
inc
mov
and
insb
mov
mov
je
sub
loope
mov
mov
pop
ret
aam
cltd
jmp
repnz
leave
pop
sahf
cmpsl
bound
cmp
jge
or
cltd
push
push
dec
mov
push
mov
out
lock
popa
push
adc
sub
xor
int3
sbb
iret
ret
lahf
push
jbe
mov
jno
outsb
lret
push
std
test
jbe
stos
cmpsl
leave
dec
jl,pt
adc
lret
fisubs
inc
ja
mov
call
xchg
sub
sbb
pop
fsubr
cmp
or
lret
cmpsl
sbb
in
aad
or
xor
lock
imul
test
stc
sub
int3
mov
mov
movsl
cmp
and
in
cmpsl
push
and
ljmp
jb
stos
mov
sub
xchg
ljmp
inc
xor
das
pop
sub
lock
xchg
adc
ljmp
push
dec
mov
mov
cli
pop
ds
lock
lret
push
sub
xchg
lcall
stos
mov
dec
adc
mov
mov
sub
or
fs
lods
jo
call
add
hlt
mov
int
sub
call
mov
insb
call
neg
fsubs
xchg
jg
jno
bound
frndint
repz
lock
push
repz
inc
outsl
gs
rcrb
adc
nop
fdivr
mov
stos
jg
inc
cmp
push
mov
inc
lret
in
push
sbb
xchg
loop
dec
neg
inc
sub
dec
pop
lahf
daa
lock
lods
adc
pop
jae
or
nop
loopne
push
cli
push
pop
pop
and
and
movsl
das
jns
pop
ret
xor
lahf
mov
scas
js
xchg
jno
or
in
int
xor
or
xor
mov
sub
fwait
mov
mov
outsl
ljmp
and
adc
cmp
sbb
mov
sub
mov
or
xlat
pusha
mov
aas
adc
aad
sbb
fsts
lds
insb
adc
mov
jbe
hlt
push
or
cmc
adc
mov
ret
xchg
in
inc
or
or
shlb
push
push
pop
inc
jg
in
ret
jp
lret
test
imul
and
test
mov
ljmp
call
cmpsl
mov
setl
dec
shr
and
jno
push
cmp
out
imul
jae
sahf
icebp
mov
pop
inc
mov
iret
imul
fstp
add
xchg
imul
and
jns
mov
push
lea
iret
mov
es
cli
xchg
sub
ljmp
mov
jle
xchg
ror
rorb
push
fcoms
xchg
add
inc
shrb
test
adc
mov
test
cmpsl
test
dec
lcall
xchg
sbb
mov
push
daa
enter
shl
dec
icebp
inc
jecxz
incb
inc
sub
xchg
fsubs
in
ss
xor
xor
insb
iret
bound
jb
cmp
mov
filds
pop
sbb
icebp
sbb
rcrb
out
in
jnp
bound
test
pop
mov
shlb
jle
push
popa
int
in
popf
and
jne
shll
das
jecxz
or
out
not
mov
aam
std
xchg
lds
aad
fsubrl
lock
cwtl
push
sub
loope
mov
or
sub
sub
and
dec
in
in
enter
sbb
outsl
cli
mov
aam
andl
shll
in
lahf
pusha
adc
and
push
xchg
sbb
aas
push
js
push
fldl
xchg
pusha
mov
push
lea
insb
mov
xlat
dec
xor
je
adc
sbb
stos
jo
pop
in
cmp
dec
sub
test
mov
jnp
data16
lods
fs
or
sbb
dec
or
or
xor
pop
jns
dec
test
jb
fwait
mov
pop
popa
psubsb
sub
dec
ja
rorb
cld
cmp
add
xchg
mov
or
aad
das
int
mov
gs
rclb
bound
out
jne
lahf
sub
push
xor
outsb
test
or
sbb
dec
dec
xor
xor
mov
xchg
sbb
daa
jle
jmp
sbb
sbb
add
repz
adc
and
je
adc
xchg
pop
popa
xor
hlt
push
testb
adc
call
jb
adc
sub
mov
int3
ret
xchg
jo
and
xor
lahf
or
lods
inc
xlat
lret
fnstcw
jmp
xchg
sbb
dec
push
mov
jle
add
dec
inc
daa
xchg
mov
xchg
mov
cmpsl
stos
fcomps
xchg
xchg
stos
or
pop
mov
mov
adc
inc
int
pop
push
sub
mov
les
mov
stc
aam
cli
ret
fnstsw
xor
jae
sahf
aam
and
stos
nop
mov
push
cli
pop
insb
jno
mov
inc
or
xchg
inc
and
fwait
in
sbb
push
nop
jns
shll
and
or
je
pop
add
push
rorl
ljmp
adc
jle
icebp
sar
push
adc
in
push
sub
and
pop
sbb
sbb
mov
mov
popf
imul
lds
cmpsb
xlat
sub
es
cs
lahf
out
push
dec
xchg
xor
xchg
ljmp
or
int3
adc
movsl
pop
xor
dec
enter
out
add
addr16
mov
sub
cmp
xchg
nop
pop
adc
sbb
xor
xor
cltd
sub
addr16
jecxz
add
pusha
dec
shll
or
icebp
jo
mov
arpl
addr16
dec
pop
sub
pop
and
das
cwtl
jg
adc
sbb
mov
xchg
lods
sbb
ljmp
test
xchg
sti
aam
pop
jns
sbb
inc
shll
add
cmpsb
xchg
out
xor
pop
or
jnp
or
and
fimull
out
imul
xor
in
or
out
mov
aam
addb
adc
add
push
ljmp
sbb
scas
mov
clc
or
mov
aaa
lret
fiaddl
mov
sub
or
mov
xchg
pusha
repnz
mov
lock
pushf
test
loope
mov
jns
bound
cmovl
test
mulb
fs
lret
pop
push
jmp
ret
mov
outsl
out
fs
imul
and
adc
jle
and
outsb
jae
xor
lods
jmp
dec
gs
sti
mov
outsl
mov
xchg
push
vfmaddsubps
arpl
aam
es
jae
xor
inc
cwtl
lds
pushf
fsubl
in
xchg
xchg
inc
inc
jnp
adc
push
push
pop
stos
pop
or
test
sub
push
pop
icebp
test
fadds
mov
xor
clc
aaa
gs
or
test
lea
and
sahf
add
mov
cltd
mov
jae
add
ja
xchg
xor
mov
push
xchg
mov
cmpsb
xchg
pop
xor
in
and
or
addl
imul
xor
mov
mov
hlt
xchg
mov
pusha
cmp
xor
xchg
imul
out
or
pusha
test
lret
mov
or
gs
lret
push
cmpb
fdivl
pop
push
jnp
dec
insb
dec
adc
cli
ja
insb
fld
inc
test
cld
int3
mov
imul
out
add
and
jns
lock
fwait
movsl
dec
push
push
stos
pushf
adc
jnp
lds
int
fldt
cmpsl
xchg
testb
dec
sbb
jg
xchg
xchg
movsl
insb
cld
lcall
lods
sahf
mov
outsl
mov
bnd
and
add
nop
add
adc
add
pop
pop
cmpsb
mov
inc
arpl
cld
mov
test
test
xchg
fldl
inc
leave
fstps
popa
pop
out
push
push
cli
arpl
xchg
subb
arpl
in
leave
push
jmp
xchg
lahf
sbb
mov
jle
les
int
pop
xchg
lahf
xchg
fnstenv
jp
cld
movb
mov
jl
fcmovb
mov
repz
sbb
fwait
jno
or
dec
xchg
fs
mov
mov
int
adc
cmp
mov
ret
leave
es
arpl
lret
lock
notb
outsl
sbb
pop
cmp
xor
aad
jge
nop
jno
mov
std
push
clc
int
push
dec
sub
fwait
imul
mov
dec
mov
cwtl
mov
jnp
inc
mov
fs
into
popf
push
aad
jnp
inc
pop
dec
jbe
repnz
mov
push
aam
xchg
fld
sbb
sbb
int3
mov
ret
out
mov
outsl
subl
xchg
and
shll
dec
in
mov
sbb
mov
andb
xchg
scas
pushf
add
and
leave
pop
dec
adc
cmp
popa
xor
icebp
adcl
arpl
dec
lock
inc
jp
sbb
cmp
fwait
jmp
ficomps
lds
add
jae
and
jae
xchg
xchg
outsb
dec
and
daa
cs
test
arpl
outsl
fiaddl
into
add
push
adc
ret
cltd
shll
loope
jnp
insl
loop
dec
repz
inc
xchg
inc
sbb
mov
sahf
js
push
hlt
fdivl
gs
adc
sti
xchg
sbb
adc
lret
mov
add
cmc
lods
pop
mov
pop
sub
sub
or
ljmp
ja
out
mov
jo
roll
arpl
subl
or
aad
mov
iret
insl
jae
fdivs
cli
or
adc
in
mov
stos
call
sbb
in
sahf
adc
mov
aad
mov
movsl
in
pusha
lods
mov
mov
mov
ja
insb
cwtl
sahf
push
sub
add
mov
xchg
movsl
ljmp
fcmovne
adc
push
sbb
pushf
ret
pop
push
in
or
xlat
movsl
repnz
call
cli
leave
sub
dec
dec
xor
inc
push
inc
push
imul
mov
stos
fwait
scas
insb
adc
cmp
ljmp
inc
imul
push
bound
mov
mov
fcmovnu
cmpl
fsubl
xchg
or
lret
imul
xlat
call
into
fnstcw
mov
leave
mov
aad
sub
test
sub
cmp
xchg
cmpsb
aas
repz
sbb
mov
cmp
or
add
mov
stos
test
in
add
cwtl
int
stc
xor
rorl
pop
jmp
loop
jo
sbb
push
xor
mov
addr16
popl
dec
xor
ja
sti
pop
mov
xorl
jns
fstpl
test
stc
or
xchg
out
fucomi
pop
hlt
dec
mov
inc
out
int
xor
mov
out
shll
inc
mov
cmp
test
xor
int3
psubusb
dec
xlat
aad
xchg
inc
xchg
cli
cmp
push
in
mov
popf
shrl
mov
lods
outsb
adc
insl
fdivl
xchg
push
pop
mov
rolb
xor
mov
jp
pusha
movsl
push
lret
jmp
and
loop
repz
xchg
and
int3
lcall
push
mov
sti
mov
repz
popa
add
jae
lea
in
xchg
imul
mov
pop
push
ficomps
xchg
test
jl
in
pushf
rorl
pushf
xchg
jmp
lcall
int
sahf
jb
mov
pop
dec
inc
int
shrl
in
sub
stos
mov
xchg
orb
xchg
sbb
daa
inc
mov
into
inc
mov
js
fstpl
dec
pmovmskb
or
es
adcl
mov
loop
outsl
xchg
lahf
cltd
mov
pop
mov
rcr
cltd
xor
cwtl
and
inc
int3
repnz
pop
insb
xor
mov
and
mov
adc
mov
std
mov
push
popa
xor
stos
pop
icebp
and
mov
flds
outsl
xchg
aaa
mov
fcoml
jo
leave
cmp
or
cltd
inc
sub
dec
jno
jmp
mov
cmpsb
fwait
add
pushf
jmp
dec
bound
mov
das
inc
push
mov
nop
xchg
xchg
inc
sub
pop
add
fimuls
dec
mov
xchg
cmp
xchg
pop
lcall
push
fdivs
sub
sbbl
iret
in
mov
loop
mov
cmp
xchg
lds
call
aam
mov
fs
push
inc
cmp
mov
mov
pop
xchg
dec
ret
ljmp
mov
mov
pop
xchg
mov
push
add
cli
jecxz
and
arpl
or
mov
pop
pop
push
push
cmc
mov
shll
out
gs
sub
dec
mov
stos
lods
lds
int3
push
dec
hlt
ret
sub
or
jb
xor
pop
outsb
call
inc
arpl
call
adc
mov
scas
or
pop
nop
cld
jp
sub
sbb
pop
stos
sub
add
cmp
mov
dec
into
mov
adc
mov
cmovno
out
jo
or
sarl
jp
jnp
cs
add
push
jg
subl
mov
sub
jge
pop
out
cltd
movsl
movsl
pop
fstps
inc
dec
imul
frstor
add
das
mov
in
mov
mov
outsl
test
inc
xor
push
je
push
xchg
insb
popf
inc
inc
fsubs
or
inc
sti
mov
mov
repz
scas
pop
std
cli
xor
mov
push
sti
popf
mov
xlat
in
out
jl
test
xchg
fisubl
or
jno
push
ss
pop
jp
pop
aam
test
sbb
pop
pop
pusha
adc
rol
or
mov
mov
mov
int
mov
mov
imul
testb
cmp
pop
xchg
and
pop
jo
jbe
push
mov
push
jae
mov
fwait
aad
jnp
fs
fsub
jo
test
out
iret
mov
jl
addb
cwtl
push
fidivl
lods
ret
popa
lock
icebp
jp
fs
sahf
sub
xor
imul
ss
pop
pop
and
fdivr
inc
sbb
jle
mov
dec
pop
sti
pop
dec
add
lods
or
mov
jb
or
dec
jno
and
jle
and
repnz
jg
mov
cmpsl
lret
divl
dec
ja
ljmp
loop
aam
push
xchg
rcrl
sbb
pop
jecxz
dec
sbb
leave
stos
and
or
jl
fidivrs
in
das
add
mov
dec
pop
aas
inc
push
popf
xchg
cld
push
adc
sbb
stos
loopne
int3
mov
xchg
adc
daa
adc
aam
mov
rcrb
xchg
pop
das
movsb
insl
lret
inc
or
call
adc
mov
mov
push
adc
adc
decb
lods
mov
xchg
repz
lret
fsts
jg
sub
stos
dec
cmpsl
out
sub
xor
enter
sti
xchg
mov
jns
lds
fs
std
xor
mov
nop
mov
pop
out
pop
insb
jg
mov
jnp
or
and
bound
add
jo
and
adc
inc
cmp
mov
mov
stc
xchg
imulb
push
or
jmp
pop
adc
popf
popa
cwtl
ss
xor
dec
adc
adc
inc
and
sbb
bound
jae
sbbb
nop
mov
pop
xor
mov
and
ja
nop
adc
mov
jg
sbb
dec
movl
inc
insb
jp
cltd
add
or
mov
lods
fcomps
or
negb
ror
mov
sbb
sbbb
push
cli
pop
scas
xchg
ret
incb
mov
js
cs
add
mov
fnsave
xor
outsb
mov
jbe
cs
mov
inc
lahf
sbb
hlt
jae
pushf
loope
lret
outsl
push
mov
sbb
or
mov
pop
test
fsts
pop
cmp
lock
cmp
dec
je
testb
loopw
popa
arpl
je
dec
or
nop
pop
bound
dec
pop
dec
call
ficoms
ds
dec
cmp
xor
cmp
jae
sbb
or
xor
and
and
jg
mov
pop
pop
lret
and
inc
sub
fcmovnb
stos
sti
xchg
mov
cmp
loopne
sbb
idivl
mov
jmp
and
popl
xchg
sbb
adc
cmp
cld
fimull
jg
jmp
xchg
lahf
sub
sbb
fnsave
inc
sbbb
popf
stc
movsl
test
xchg
stos
cmpsl
push
jo
mov
xor
sbbl
jbe
mov
dec
mov
push
xor
pop
enter
pop
xor
popf
mov
inc
xlat
test
or
hlt
pop
inc
outsb
outsl
nop
inc
decl
push
test
cli
sbbl
and
sub
out
mov
adcl
or
mov
xor
jmp
pushf
sub
sbb
sub
insl
xor
stc
addr16
test
and
movsl
pushf
mov
inc
ljmp
cwtl
and
or
sbb
adc
mov
mov
jl
mov
fs
mov
in
out
pop
fsubrp
cld
inc
enter
mov
mov
es
dec
insl
div
mov
xor
imul
and
lret
pusha
add
sbb
imul
add
imul
lods
gs
and
pop
stc
mov
jle
push
jle
lret
hlt
dec
negl
fwait
bound
loope
mov
push
dec
cmc
and
loope
mov
lods
mov
fimuls
shll
mov
and
jne
dec
gs
shrl
mov
ljmp
mov
testl
arpl
out
pop
enter
jne
out
mov
jbe
lods
push
fwait
std
sbb
push
mov
dec
add
mov
repz
mov
pushf
addr16
push
andl
test
or
outsl
out
and
cli
movsb
pop
sbb
pop
or
fcos
mov
fs
lock
out
sbb
adcb
inc
mov
fsts
pop
leave
adc
addr16
loope
cmp
adc
repz
pop
lahf
fildl
daa
movsbl
pop
inc
divb
jmp
and
jmp
imul
and
pop
jb
gs
jae
loop
leave
out
dec
jl
jae
cmpsb
add
mov
andl
push
lods
out
imul
in
push
jp
cmc
iret
cltd
into
mov
push
pusha
movsl
xchg
orl
add
sbb
mov
dec
mov
and
sti
add
scas
push
aas
fstp
adc
dec
xchg
pop
inc
into
mov
add
sbb
std
mov
cmp
xlat
pop
es
imul
jg
jae
outsb
stos
push
out
mov
in
fwait
adc
cmp
jp
cmp
imul
sbb
dec
cwtl
aad
out
dec
or
int3
rcrl
out
pextrw
mov
cltd
int
inc
or
pop
xchg
push
clc
imul
lea
and
mov
xchg
iret
inc
popa
int3
mov
dec
or
cmp
add
iret
leave
fs
xor
sub
test
pushf
imul
mov
push
cmp
jae
loop
mov
imul
jae
mov
pop
jecxz
lahf
rcrb
ljmp
call
cmc
in
xor
jo
aaa
push
iret
xchg
daa
clc
addl
and
mov
sub
in
ds
aad
jnp
xor
rcrb
popf
mov
dec
xchg
jecxz
lods
fsts
sbb
cmp
fnstsw
out
nop
mov
xor
push
pusha
les
cld
add
pop
jb
and
jno
in
in
fcmove
ret
mov
out
out
pop
dec
hlt
into
fmul
repnz
mov
scas
jb
call
pop
aas
xor
push
inc
sahf
add
pop
mov
xlat
and
bound
cltd
jnp
jo
inc
sbb
sub
fwait
stos
pop
xor
fneni(8087
outsl
or
fmull
stos
mov
mov
cmp
mov
or
in
mov
fcompl
inc
mov
int3
mov
xor
cmc
push
lock
add
mov
call
cmp
sbb
xchg
cmc
add
std
push
add
cmp
xlat
lds
jbe
rolb
lret
das
int
out
das
cmp
lea
inc
jge
mov
fs
repnz
mov
xchg
in
mov
arpl
cs
std
test
push
cmp
fsts
add
iret
xchg
mov
sbb
xor
add
dec
push
mov
mov
inc
aas
dec
movb
sbb
out
fiadds
ja
xor
xchg
enter
sub
cmp
inc
leave
mov
fildl
pushf
xor
jne
movsb
ret
xor
in
xchg
mov
adcl
mov
sub
cmp
div
xor
aaa
sbbb
lret
imul
repnz
mov
sti
repnz
mov
pop
mov
push
jbe
xor
test
fcoml
iret
adc
adc
popa
cld
popf
xor
xchg
nop
mov
aaa
mov
rorl
mov
mov
repz
mov
add
out
xchg
adc
mov
push
cmp
pop
pop
clc
cli
orb
in
in
mov
scas
mov
fldt
test
jp
mov
fistpl
cli
shrb
xor
mov
roll
lret
cmp
sub
cld
nop
aas
icebp
lret
xor
adc
int
xchg
jge
negb
dec
ret
and
push
dec
gs
leave
popf
hlt
sub
cs
outsl
mov
push
daa
test
and
pop
sub
push
shrl
shlb
jno
out
nop
dec
fistpl
fisubl
stos
pop
repnz
and
and
mov
cmp
push
int3
sub
gs
and
arpl
xor
mov
insl
in
push
mov
and
xchg
push
pop
and
insb
test
pop
and
repnz
fldl
daa
cmc
add
sbb
lret
gs
lcall
dec
rclb
push
mov
lds
scas
ljmp
lods
outsl
mov
mov
andb
ljmp
pusha
xchg
fstpl
aas
push
and
ficompl
lods
lcall
push
dec
and
pop
mov
into
pop
ljmp
lds
add
jno
pop
sarb
push
push
sub
call
in
mov
sbb
je
mov
gs
sub
or
pop
das
cli
sub
push
xchg
push
mov
mov
and
out
push
jae
sbbl
test
adc
or
aam
lea
in
push
mov
in
and
xor
ljmp
xor
sbb
rol
repnz
shlb
and
mov
lods
sub
sub
loop
cld
pop
out
lahf
jae
sbb
push
and
mov
pop
sbb
pop
push
mov
cli
jae
jecxz
dec
daa
mov
call
cmp
leave
std
int
bound
in
sub
daa
test
arpl
fisubrs
test
rolb
outsl
ljmp
es
add
cmp
fisttpll
mov
and
fstpl
addb
fists
roll
icebp
enter
push
cmp
daa
addr16
xchg
out
nop
mov
jmp
pushl
int3
mov
push
sbb
loope
fistl
and
inc
fdivrp
inc
daa
mov
into
repz
and
pop
fldcw
mov
fisttpl
movl
cmpsl
inc
add
je
in
popf
xchg
movsb
js
mov
jne
aad
loopne
loope
aaa
lcall
pop
jb
push
imul
and
jle
and
xchg
mov
test
pop
aaa
push
mov
xor
pop
or
lea
fcompl
popa
inc
inc
lret
fiadds
test
in
fldcw
dec
and
push
dec
rolb
jno
jb
or
mov
hlt
insb
ret
jg
orl
mov
add
dec
pop
mov
xchg
pop
aam
gs
stc
push
jle
push
xchg
fwait
ret
call
dec
fisubrs
shlb
fidivs
test
mov
into
lock
ljmp
jp
adc
inc
xor
inc
in
pop
jmp
cmp
xchg
iret
jbe
gs
mov
stos
push
mov
lock
mov
daa
cmpsb
mov
in
rol
divb
mov
or
mov
mov
hlt
mov
jp
sub
jo
mov
test
test
test
pop
push
js
xor
test
adc
cmp
ljmp
jp
jecxz
xchg
and
out
test
or
cmp
mov
lds
arpl
and
add
fcomi
pop
or
leave
andl
mov
mov
xchg
cwtl
leave
xchg
icebp
ja
jns
or
dec
popa
mov
incb
cmp
stos
roll
outsl
cs
inc
not
stos
jle
mov
jg,pt
cli
mov
cs
add
jge
adc
mov
popa
daa
lret
jnp
lds
adc
ljmp
xchg
push
andl
cmpsb
movsb
push
sub
pushf
jae
fildl
lret
or
sub
fildll
push
push
adc
jl
xchg
xchg
adc
push
out
jge
cmpsb
adc
js
orb
mov
movsl
iret
out
lcall
inc
stos
and
arpl
adc
inc
mov
out
test
loop
mov
cltd
mov
mov
and
stc
sub
mov
test
aad
inc
mov
lahf
orl
test
je
push
lahf
pop
inc
add
insb
xchg
mov
aad
test
movsb
shlb
jl
daa
iret
lret
or
or
daa
out
push
or
xchg
scas
test
lret
jo
insb
das
int
or
fs
fadd
stos
pusha
movl
xchg
cmp
cmpb
lcall
xchg
inc
xor
scas
push
arpl
adc
les
jae
icebp
pop
andb
out
jo
mov
ds
lock
sbb
xlat
sbb
stc
mov
pop
ror
int
sub
jbe
inc
jb
fistps
bound
jb
rolb
imul
into
test
icebp
pop
incb
jg
xchg
sub
ret
adc
push
aad
lret
montmul
cmpsb
test
fldl
dec
xchg
sbb
fcmovnbe
xlat
cmpl
popf
and
push
shl
add
push
lods
cs
mov
mov
fwait
push
push
dec
les
cmp
aaa
fs
stc
inc
and
movsl
leave
and
mov
int
dec
push
sahf
int3
dec
lret
repnz
insl
lock
outsb
and
or
sub
pop
lret
outsb
inc
dec
xchg
je
mov
xor
adc
jnp
jle
xchg
in
or
add
imul
adc
hlt
xchg
lea
lods
je
pop
cli
add
aas
and
cwtl
cmp
dec
data16
sbb
and
ss
stos
clc
loop
xchg
add
adc
mul
mov
push
outsb
nop
push
inc
sub
clc
in
cli
and
outsb
sahf
subl
fnstsw
movsl
lock
mov
xchg
lahf
stos
icebp
mov
sti
jl
iret
sbb
jecxz
mov
mov
leave
dec
or
push
push
ja
xor
jp
pop
int
xchg
xchg
push
cmp
fwait
popa
fwait
pop
jge
popa
push
jb
addr16
add
pop
sub
mov
movsl
stos
push
lea
cmpsb
scas
sub
mov
xor
pop
add
or
push
add
lahf
mov
scas
imul
imul
arpl
mov
movsb
dec
cmpb
mov
cmpsb
push
mov
jg
push
and
mov
les
xchg
and
mov
mov
mov
jge
daa
iret
fwait
insl
cltd
andb
sub
in
cmp
loop
add
mov
sub
sbb
fbstp
push
cwtl
or
shrb
mov
push
mov
cmc
or
into
mov
adc
out
push
clc
gs
jmp
sbb
es
nop
pop
lods
fcmovbe
into
mov
sbb
jmp
add
ljmp
inc
es
inc
fstps
int3
popa
std
inc
inc
outsl
ret
sub
or
push
dec
rorb
adc
imul
sub
xchg
mov
adc
xor
and
loop
bound
pavgw
mov
cmp
xchg
inc
inc
jb
mov
lcall
mov
in
fisubs
leave
ret
adc
mov
adc
mov
sbb
pop
aas
in
jg
inc
repnz
mov
outsb
pop
imul
ss
push
popf
adc
jmp
test
ljmp
cmp
dec
ret
movsl
pop
in
pop
test
shlb
lret
out
jge
rclb
in
inc
inc
sti
jmp
data16
jbe
lret
or
xor
and
push
stos
and
adc
dec
js
int3
popa
dec
outsl
cli
pop
ds
push
or
pop
xorb
js
outsb
jae
xor
mov
jno
xchg
mov
test
testl
hlt
adc
push
cmp
jmp
add
ljmp
je
in
filds
add
xchg
fcmove
stos
sub
sbb
or
add
repnz
adc
aaa
dec
xchg
sub
and
pop
pop
mov
cld
call
jnp
ljmp
int
daa
xacquire
lahf
sub
or
aad
ret
in
mov
sti
adc
leave
xchg
jbe
inc
ret
movb
mov
fwait
xlat
sbb
push
xchg
push
ljmp
jecxz
std
cltd
scas
testl
jmp
les
idivb
pop
mov
lret
enter
inc
loop
imul
fadds
xchg
push
dec
fcoms
mov
fadd
sub
aam
cltd
in
cmpsb
mov
mov
mov
in
adcl
sbb
or
fucom
movsb
fs
bnd
imul
imul
xor
test
cmp
lods
pusha
call
xchg
xor
popf
adc
subb
ret
std
pop
mov
sbb
addb
dec
cmp
mov
repnz
lret
fiadds
dec
sub
push
fdivs
ror
and
ss
fbstp
dec
int
inc
ret
int
push
mov
inc
xchg
leave
push
test
rol
adc
and
insl
dec
fildll
fnsave
sbb
push
xchg
shrl
or
push
mov
cli
repz
iret
addb
pop
cmp
shl
hlt
jns
not
int3
pop
fwait
push
repnz
ja
fildl
fnstcw
fmull
enter
jmp
clc
push
jp
or
or
add
popl
std
imul
dec
rolb
push
movsb
fwait
xchg
adc
loop
adc
shll
arpl
mov
mov
adc
aam
sti
imul
add
and
aad
sahf
pop
inc
loope
pushf
jne
arpl
jne
test
sahf
jmp
mov
cli
imul
pop
in
out
cmp
pop
pop
cmpsb
movsl
pop
js
pop
aas
loope
xor
loop
imul
sbb
add
les
pop
fistps
push
jne
stos
or
lfs
jecxz
xorl
jge
test
test
jne
scas
lcall
pop
inc
inc
ret
jno
inc
mov
mov
imul
jns
xchg
sbb
lret
mov
jo
ret
fildll
or
imul
popl
popa
cvtps2pi
jns
xrelease
or
sbbl
adc
jno
pop
mov
test
rcl
push
pop
mov
jp
jg
push
mov
imulb
or
xor
jno
jns
mov
xchg
das
mov
nop
jmp
insb
jbe
xor
fisubrs
xor
mov
ljmp
pop
xor
js
mov
aam
inc
js
mov
ljmp
pop
mov
call
daa
aam
xchg
std
pop
sahf
aam
inc
fisubrl
into
repnz
push
fsubrl
out
repnz
xchg
cmpsl
or
sbb
xchg
pop
jle
xchg
sarl
mov
mov
stos
fs
neg
mov
into
inc
aam
xchg
cmc
pop
xor
daa
inc
ficoml
cs
pushl
repnz
iret
sbb
cmp
or
adc
inc
sahf
ret
and
and
shlb
lret
push
test
icebp
xchg
inc
xchg
and
fsubp
jp
fdivrs
mov
jae
idivb
fcoms
jge
mov
mul
pop
mov
insl
mov
fcomps
dec
inc
lcall
push
lods
xchg
out
adc
in
hlt
xchg
dec
in
push
mov
fsubp
push
xor
push
push
lcall
arpl
dec
insl
mov
xchg
cmp
push
lahf
xor
jmp
or
sbb
mov
mov
ficoms
xchg
and
shl
movsb
aad
mov
and
addr16
dec
push
lods
jl
std
mov
pop
rcpps
mov
pop
push
bound
sbb
sbb
sbb
mov
push
dec
fldcw
repz
shll
jb
test
sub
lret
int
pop
xor
and
dec
jg
test
ficompl
or
movsb
mov
sbbb
or
bound
add
push
push
jge
mov
dec
jb
popa
int
inc
mov
and
push
xchg
out
mov
pop
jno
out
jbe
repz
mov
fldcw
add
pop
push
in
pushf
xor
das
popa
inc
sub
xor
icebp
aad
mov
in
daa
adc
sbb
fildl
hlt
xchg
pushf
sbb
mov
int
xchg
add
pop
into
fbld
jmp
test
icebp
or
subb
sarb
gs
mov
add
and
xor
repz
push
daa
mov
add
mov
or
or
cmp
inc
test
adc
pushf
aad
es
pushf
fs
cwtl
dec
sbb
xchg
sub
adc
ss
test
aaa
insl
movsb
popf
ljmp
pop
jnp
inc
movsb
scas
mov
mov
aam
pushf
enter
sahf
dec
pop
rcl
scas
fsubs
xchg
inc
repz
cmp
or
jae
fsubrp
dec
clc
shl
loop
adc
ss
ljmp
mov
arpl
xor
jge
sub
imul
ss
sbb
stos
xor
push
fimull
rclb
fistpll
lods
sbb
addr16
mov
scas
mov
mov
shll
cld
mulb
push
out
bound
inc
inc
mov
sar
adc
mov
ja
les
test
add
mov
sbb
dec
sbb
cli
stc
mov
daa
dec
fwait
mov
call
dec
mov
lcall
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
into
sub
add
sub
add
sub
add
add
add
sub
add
add
add
sub
add
add
pusha
sub
add
sub
add
add
sub
add
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
stc
cmp
inc
add
and
sub
adc
jl
fwait
lods
out
jl
sub
pop
int
push
shl
push
stc
leave
mov
mov
xchg
jbe
push
pop
popa
sbb
dec
sbb
subb
ror
daa
scas
inc
hlt
cmp
lods
sbb
imul
lcall
andl
sbb
dec
scas
out
lahf
loopne
insb
gs
cmpsl
xchg
sbb
or
mov
cmp
push
pop
dec
popf
push
stos
push
mov
pop
jl
scas
lret
jp
and
repz
scas
in
fs
dec
es
mov
in
scas
pop
xchg
iret
jmp
push
lret
mov
mov
inc
outsb
jno
mov
pusha
lcall
mov
aas
leave
push
push
jae
jmp
daa
mov
out
call
mov
or
test
mov
lock
and
popa
mov
std
or
in
dec
loope
push
fisttpll
cmpsb
cwtl
xchg
mov
adc
jecxz
arpl
out
xchg
sti
mov
adc
and
mov
and
sar
mov
xor
sub
mov
loope
xchg
lods
out
pop
inc
ds
add
jnp
push
aam
fistpll
xor
into
sub
mov
into
stos
dec
pushf
add
popl
gs
rcrl
pop
test
and
mov
outsb
mov
xchg
inc
mov
lea
push
and
aam
leave
ss
mov
dec
ds
out
pop
les
and
jbe
inc
out
out
push
repz
push
cld
cmp
sbb
insb
outsl
test
scas
orl
int
popf
adc
aad
outsb
mov
aam
xchg
shl
test
mov
mov
dec
cmpsb
int3
daa
mov
clc
xchg
scas
addl
das
loop
mov
icebp
add
pop
sbb
mov
imul
shrb
pushf
inc
xchg
and
fidivrs
dec
cld
lcall
addb
cmp
clc
xchg
jmp
sbb
int
cmp
inc
stos
dec
testl
add
add
repz
stos
fisubrs
aam
insl
lods
push
jne
sbb
mov
gs
jae
add
cmp
xor
rorb
xor
dec
xchg
addl
sbb
mov
xor
repnz
mov
mov
push
jl
sbb
aam
mov
cmp
scas
aas
lcall
mov
adc
fisttps
repnz
outsl
in
rcrb
push
pop
cmpsl
lock
cwtl
dec
adc
jne
push
icebp
stos
mov
adc
enter
sub
dec
push
xchg
hlt
cmp
in
inc
mov
lahf
gs
fiaddl
jle
inc
call
js
out
xor
iret
dec
and
sub
dec
push
sub
and
push
pop
or
cli
pop
cmp
xor
pushf
je
jo
xchg
xchg
sar
notl
lret
push
divb
call
inc
pop
stos
clc
cmp
mov
pop
lret
sahf
loopne
sbb
jg
mov
push
adc
cmpsb
popa
xor
out
ss
xlat
jg
push
out
mov
mov
iret
loop
inc
sub
sub
dec
loop
inc
add
mov
ret
xchg
je
cmpb
jg
cmpsl
push
mov
mov
daa
mov
inc
enter
mov
inc
cwtl
fildll
jle
int3
sahf
mov
push
mov
es
mov
into
cmpsb
mov
lock
jne
or
xchg
int3
adc
sahf
stos
jl
ja
and
push
in
and
fildl
fisubs
inc
mov
out
dec
adc
pop
cmp
add
lock
mov
lcall
int
cmp
jnp
cld
add
iret
pop
add
int3
jbe
cltd
mov
sbb
mov
xchg
xchg
xchg
dec
pushf
mov
lret
fwait
mov
dec
push
push
adc
jo
fcomi
add
data16
out
imul
mov
or
loopne
pop
cli
shll
add
xchg
js
inc
rcrb
movsl
shlb
mov
stos
mov
aas
push
clc
mov
dec
inc
es
push
jne
scas
and
mov
das
mov
loop
mov
adc
rclb
push
inc
sbb
aad
sbb
lret
sbb
push
mov
jo
pop
xchg
mulb
mov
cli
dec
fdiv
and
mov
dec
fmul
bound
pop
jl
mov
adc
into
mov
mov
add
push
dec
sti
stos
dec
icebp
sbb
inc
mov
jbe
mov
mov
je
push
and
push
in
ss
sbb
jmp
sub
aas
fdivr
filds
loop
cmpsl
lea
adc
mov
fsubl
sbb
push
adc
imul
aad
dec
adc
je
cld
enter
and
fisttpll
cmp
mov
sti
cli
mov
ret
scas
mov
popa
inc
pop
lds
dec
mov
and
daa
ss
dec
rep
pushf
mov
test
and
mov
fnstenv
addr16
jg
and
fdivrs
popf
ret
test
add
sub
stc
add
xor
ljmp
pop
sbb
subl
call
test
sbb
mov
and
dec
jno
hlt
mov
add
sub
out
leave
jp
xchg
xchg
dec
or
ja
aaa
fwait
add
xor
jp
sbb
popf
mov
cmp
cmpsb
dec
lcall
sub
sbb
xchg
lea
outsl
outsb
int3
pop
in
iret
xorb
mov
test
sahf
cwtl
mov
in
inc
popa
push
aam
xchg
pop
fadd
lret
mov
lcall
jno
es
pop
enter
cld
std
dec
and
jge
test
es
or
mov
push
out
pop
cs
ljmp
xor
inc
adc
inc
hlt
test
mov
mov
andb
sub
filds
mov
iret
icebp
pop
inc
rorl
enter
xchg
inc
or
ds
stos
hlt
stos
inc
divl
fsubrl
mov
or
das
pushf
mov
and
push
jmp
or
jl
cli
cli
mov
push
xor
adc
imul
pop
in
cmp
dec
mov
jge
inc
les
xchg
testb
in
xlat
popa
lret
lret
mov
movsb
lret
mov
push
pop
aas
fistl
mov
test
jl
sahf
pushf
movsl
jge
inc
test
mov
nop
test
lods
or
mov
jmp
xchg
rorl
mov
insb
dec
mov
sbb
out
dec
add
inc
mov
mov
push
mov
lcall
jg
test
stos
std
pop
out
nop
sub
jge
cmp
lahf
push
mov
pop
jns
repz
mov
xchg
fdivrs
jno
dec
mov
gs
xchg
and
hlt
outsl
mov
outsb
test
mov
cli
inc
ret
mov
incb
jns
xor
inc
loopne
es
bound
cwtl
sbb
ljmp
pop
adc
int3
mov
lahf
sarl
xchg
mov
adcl
pop
lea
pusha
dec
mov
mov
mov
jmp
sahf
in
xchg
roll
and
je
sbb
xor
dec
cmovg
or
pushf
arpl
sbb
lahf
jecxz
sahf
sbbb
lods
dec
into
lcall
cld
test
stos
xor
jns
or
repz
sub
adc
sahf
repnz
push
mov
xor
xor
lea
mov
jp
add
andb
xor
mov
in
xchg
and
push
inc
jecxz
mov
xchg
cwtl
jno
fs
pop
sbb
push
sarl
sbb
not
mov
add
lods
adc
jbe
aam
dec
icebp
fwait
js
lret
aaa
lahf
adc
js
xchg
pop
push
cmp
stc
add
jbe
adc
cld
std
mov
mov
aas
mov
xchg
pushl
in
inc
inc
mov
cmpsl
in
mov
and
xchg
imul
xorb
xchg
xchg
cmp
and
sti
sarb
js
sub
fiadds
cld
adc
push
enter
jnp
xchg
outsb
icebp
push
push
js
imul
outsb
mov
mov
xchg
loop
jnp
in
and
jl
xor
shrb
out
rcl
jne
xchg
je
mov
test
mov
pushf
sbb
xlat
pop
les
cmp
ror
xor
push
mov
cmc
repz
aam
movsl
sbb
jp
in
and
inc
les
les
fwait
stc
add
jb
aam
test
out
pop
aaa
loop
sbb
or
mov
sub
xor
mov
jno
pop
rolb
shl
jg
lds
mov
loope
ret
lods
jmp
adc
adc
adcb
mov
fsts
or
insb
jns
fwait
mov
rolb
jae
fistpl
mov
cmp
lods
mov
aam
mov
icebp
data16
mov
fs
fidivrl
cs
in
fimull
test
sbb
jle
pushf
jne
test
and
popf
add
test
lods
dec
scas
rol
arpl
loopne
mov
jne
mov
out
mov
lock
icebp
test
icebp
cwtl
ss
out
xor
mov
out
pop
popf
fmull
and
subl
ret
cwtl
inc
jns
mov
enter
dec
pop
adc
add
mov
jecxz
and
push
leave
push
mov
add
into
mov
outsl
mull
mov
mov
mov
ret
sub
xor
pop
pop
mov
dec
mov
aad
inc
sti
push
inc
mov
jno
mul
and
fadds
mov
cmp
sti
aad
dec
popf
scas
adc
push
xchg
jb
pop
mov
add
iret
pop
add
push
or
pushf
jae
mov
daa
test
gs
sub
js
jecxz
jmp
jne
cltd
jg
mov
outsb
notb
and
mov
push
imul
xchg
pop
repz
ljmp
data16
out
stos
mov
mov
jle
std
out
std
shl
inc
test
aaa
xchg
cmpsl
jmp
adc
or
pop
mov
or
nop
lea
jl
fnstsw
mov
call
lret
outsb
out
dec
das
sahf
sahf
out
add
rcr
icebp
pop
arpl
jbe
lret
cli
fwait
mov
lahf
sbb
adc
gs
mov
and
int3
or
xor
adc
mov
outsl
dec
rclb
stos
orl
lcall
jmp
dec
stos
imul
inc
fcoms
cld
adc
popa
insl
incl
sbb
pushf
cmp
lcall
pushf
mov
adc
scas
dec
int
cwtl
xchg
lea
outsb
aam
daa
mov
leave
pop
mov
popa
mov
movsb
add
pop
pop
jo
adc
jne
mov
mov
pop
insl
adc
pop
lcall
ret
mov
repnz
sub
leave
aad
sub
test
es
fldenv
mov
outsb
mov
pop
mov
rcl
out
xchg
inc
dec
int3
push
aaa
cwtl
and
lret
xchg
or
inc
in
shl
in
xchg
add
mov
daa
jno
scas
popa
rorb
jae
push
pop
cmp
adc
fisttpll
add
mov
push
xor
pop
xchg
sbb
fnstcw
push
xchg
imul
imul
adc
push
in
xlat
or
xorb
push
clc
ds
push
dec
dec
pop
cmc
xchg
fsubl
cltd
repnz
jo
icebp
cmp
dec
sub
xchg
ret
mov
mov
iret
or
pop
and
lret
imul
xchg
pop
insl
lret
mov
push
xchg
out
lods
in
sub
push
lock
inc
adc
inc
jge
push
int3
inc
movd
fsubrl
gs
inc
lds
je
push
test
iret
add
nop
int
stc
rorb
out
vexpandpd
mov
push
hlt
inc
mov
pop
inc
rol
mov
das
lret
sti
int3
adc
inc
repnz
dec
mov
push
into
pop
lea
dec
push
adc
sbb
push
or
filds
jno
rol
imul
lods
mov
cmpsl
clc
sub
out
loopne
adc
push
jne
inc
imul
leave
sbb
add
les
add
call
push
pop
repnz
insl
mov
data16
and
mov
jne
jae
cmp
lret
cmpb
dec
sub
push
outsb
fdivl
pop
dec
lret
cmp
or
aam
das
sahf
stos
outsb
aas
in
dec
pop
inc
cwtl
fidivs
cmp
clc
mov
pop
pushf
in
inc
or
fwait
nop
dec
and
sbb
das
flds
imul
mov
push
divb
pop
adc
pop
cmp
cmp
push
shrl
lret
icebp
pop
inc
jp
dec
sysexit
movsl
rcll
cmpb
jp
mov
sbb
adc
cltd
nop
shlb
movl
cwtl
mov
xchg
movsb
fidivrs
cmpsl
fwait
ljmp
push
jmp
fildll
and
jno
cmp
push
mov
jmp
repz
rorb
in
lret
js
sbb
loop
mov
lods
cli
subl
int
aam
cmpsl
test
rclb
mov
push
lret
lea
xor
test
rcrb
call
and
popa
push
sti
int
sahf
cmp
cli
daa
pminub
dec
pop
sbb
lods
jae
pop
pusha
jae
or
mov
push
or
and
int3
repz
jae
adc
push
cmp
mov
test
repnz
pop
xchg
fmull
dec
data16
xchg
mov
out
xchg
jo
add
std
dec
lahf
out
adc
outsb
and
call
xor
xchg
divl
daa
or
mov
iret
xchg
leave
mov
add
pusha
push
jge
lret
cmp
jbe
cmp
enter
pop
cmpsl
xchg
mov
int
lret
mov
std
popf
mov
icebp
popf
pop
jb
mov
mov
loope
adc
rorb
insl
sbb
mov
das
dec
mov
sub
xchg
dec
jle
mov
test
or
ret
arpl
sbb
lcall
int
cli
cmp
jmp
cmc
xor
push
pop
cmp
stos
gs
sub
enter
call
mov
push
filds
dec
sub
fwait
insl
imul
fcomp
mov
and
add
test
mov
inc
daa
inc
bound
lock
aad
cli
mov
testb
or
insl
shlb
icebp
int3
xor
jo
jmp
push
fwait
sub
adc
rol
cmp
repz
faddp
mov
xchg
jmp
je
sub
push
jnp
lcall
sbb
ljmp
mov
stos
out
ret
jae
add
mov
repnz
sbb
shll
cli
minps
mov
and
or
loopne
inc
stc
add
loope
sub
subb
xchg
out
shll
push
cltd
fsubs
inc
loopne
rclb
dec
and
enter
icebp
dec
cwtl
mov
push
out
push
or
das
mov
cmp
pop
testb
lret
pop
jb
lahf
push
stc
cs
es
lds
jbe
fwait
sahf
fs
lret
scas
std
rorb
mov
jnp
jae
adc
in
push
push
or
int
mov
fadd
jo
mov
shl
sbb
xchg
pushf
aaa
inc
adc
adc
mov
cld
imul
push
rolb
dec
scas
adc
shl
xchg
out
rcrb
stc
cmp
mov
fmulp
into
rcll
adc
mov
lahf
repz
roll
lret
pop
pushf
roll
sbb
subb
mov
mov
push
frstor
popf
es
adc
loopne
popf
outsl
push
ret
add
cltd
enter
pop
ret
mov
push
insl
push
jne
into
mov
mov
into
push
adc
loopne
xchg
ret
stc
xor
es
cmp
dec
lret
adc
enter
xchg
pop
mov
cmp
aad
jmp
cmp
es
popf
mov
or
mov
sarb
cmpl
sub
inc
or
mov
jge
adc
std
dec
or
incl
xorl
sub
clc
test
or
jmp
xchg
mov
movl
dec
call
and
xor
jle
xchg
mov
out
xor
arpl
inc
fwait
mov
daa
ljmp
cltd
push
in
repz
imul
je
push
mov
push
and
jnp
out
inc
cltd
pushf
repz
fwait
aam
cmpsb
push
or
xor
mov
pop
push
fstl
aaa
out
in
outsb
jb
xchg
jp
ljmp
sub
xor
jb
sub
lret
clc
mov
fisubs
mov
or
shl
mov
jg
cltd
or
mov
shrl
and
dec
lcall
fdivrs
int
or
add
adc
test
push
fldcw
xchg
sbb
sbb
aas
push
jp
sbbl
lcall
sbbb
push
popl
pop
xchg
jae
xor
sbb
addl
imul
mov
adc
and
outsl
jge
inc
add
or
push
mov
nop
daa
or
lea
loop
pushf
or
popf
andb
mov
fnstenv
sbb
pop
jg
dec
lock
and
inc
nop
adc
or
fcompl
ret
xchg
pop
mov
repz
dec
gs
adc
dec
sub
inc
mov
sbb
pop
push
adc
ficompl
pop
push
cmp
pop
mov
or
in
in
pusha
inc
xor
and
pop
and
mov
cmpsl
xchg
xchg
pop
mov
mov
into
adc
hlt
lds
jno
out
call
sub
movsl
mov
shll
jo
scas
mov
lock
imul
xor
mov
push
cld
pop
pop
inc
mov
out
std
int
in
mov
xchg
jne
bound
add
mov
push
out
mov
cmp
popf
pop
sahf
lcall
lcall
sub
stos
lods
mov
das
aas
push
add
mov
and
mov
adc
cmpsb
mov
movsl
or
mov
xor
shlb
lahf
add
or
cmp
dec
rcll
sbb
mov
inc
push
outsb
out
out
mov
mov
sub
jno
push
das
dec
imul
int3
pop
mov
ja
adc
leave
fs
mov
loope
mov
xlat
stos
sub
pushf
lock
dec
sub
push
icebp
mov
add
jg
adc
sub
pop
xor
out
mov
xchg
jl
fidivrs
push
int
mov
sbb
loope
and
fdivr
shlb
adc
xchg
cmp
mov
iret
or
cltd
cmovg
pushf
sub
leave
push
adc
mov
test
rcrl
xchg
cmp
push
lock
or
lcall
outsl
push
int
mov
ret
adc
inc
jno
insl
or
std
rcll
repz
sbb
push
dec
fdivs
mov
sub
and
xchg
movsl
mov
inc
dec
jp
jo
push
outsl
dec
outsl
daa
sti
mov
fnstenv
adc
clc
cmp
loopne
jbe
dec
shll
sti
jl
call
or
cmp
and
mov
sbb
mov
shrb
add
sbb
cld
std
movsb
orb
ds
push
xchg
andl
pop
out
or
imul
rcrb
mov
rclb
aas
mov
int
push
js
cmp
xchg
push
int
pop
or
call
je
jle
ljmp
out
cmp
icebp
mov
push
lds
cltd
and
pushf
add
das
cmp
enter
push
mov
lret
into
adcl
mov
scas
imul
ljmp
pop
cld
xlat
jle
call
aaa
cli
addr16
gs
outsl
sbb
adc
fcomps
enter
add
hlt
and
xor
movsl
fcmovnu
mov
bound
insl
cmp
ja
adc
xchg
or
xchg
ror
scas
je
adc
mov
add
movsl
pop
stos
repnz
lcall
xor
icebp
pusha
jnp
mov
add
insb
sub
js
adc
xor
dec
pushf
lahf
out
cli
mov
enter
testb
rcll
mov
outsb
in
sub
pop
lahf
mov
fisttpl
in
pop
in
repnz
cmp
leave
ficoms
gs
imul
jl
imul
and
es
dec
fdivl
ror
icebp
jo
cltd
js
mov
lods
cmc
imul
xchg
lea
std
in
aaa
pusha
dec
xchg
je
and
sub
jbe
cwtl
inc
int3
push
addr16
jae
inc
cmp
dec
jo
inc
mov
sbb
fisubl
stos
sub
pop
add
lods
pop
fdivs
sbb
pop
fildll
roll
enter
cmp
add
mov
fistps
sub
sbb
lahf
add
add
mov
fldt
mov
js
aam
and
push
fsubrl
mov
inc
mov
mov
pop
adc
mov
or
pusha
jecxz
pop
push
mov
mov
outsl
in
dec
mov
cwtl
dec
and
clc
lds
loopne
mov
js
test
or
dec
mov
cmp
jo
imul
and
jno
jge
xchg
sub
jo
sub
xor
jo
xor
jne
xorl
push
push
add
repz
lret
inc
stos
cmpsb
sub
loope
xchg
jmp
aas
ja
fs
repnz
mov
lock
popa
inc
sub
jle
push
ret
adcl
movsb
pop
mov
in
pop
popa
push
daa
leave
es
cli
mov
aas
cmp
xor
dec
push
jnp
jg
sbb
fstp
xor
repnz
dec
int
cld
pop
icebp
mov
or
adc
adc
stc
cmpsl
into
jbe
imul
push
popa
cli
icebp
add
mov
cmpsb
ss
fidivrs
ficoms
or
and
enter
jae
insl
repnz
inc
mov
and
adc
icebp
pop
cli
out
pop
mov
sbb
lret
xchg
bound
adc
xlat
mov
jb
jl
add
movsb
adc
push
gs
inc
pop
pop
out
jns
out
dec
push
sbb
dec
sub
dec
xchg
cld
cmp
xor
jne
jo
sub
mov
sahf
inc
dec
ret
jmp
fsts
sub
xor
sahf
out
xor
fimuls
lcall
cmpsb
mov
mov
cmp
lahf
xorl
out
mov
xor
iret
out
fwait
repz
inc
and
dec
xchg
das
or
sub
jmp
push
adc
push
outsl
sub
lcall
cmp
pop
mov
and
jns
push
dec
jle
xchg
stos
pop
in
sbb
cmp
pop
mov
push
mov
ficomps
or
sbb
mov
jg
dec
jge
shll
mov
pop
arpl
lds
xchg
xor
lods
mov
pop
shll
stos
and
mov
and
mov
add
push
inc
sti
or
fstpt
mov
jg
mov
insl
pusha
in
mov
mov
pop
jmp
lret
xchg
test
into
sub
dec
sbb
shrd
cmpsb
adc
adcb
gs
repnz
push
fisttps
fs
push
stc
jbe
pop
xchg
clc
rcl
mov
dec
cwtl
push
pop
adc
out
mov
and
sbb
adc
mov
test
into
lret
push
sub
arpl
popa
xor
ss
mov
inc
xchg
shlb
ror
les
sar
iret
clc
mov
fs
adcl
mov
and
mov
rcl
pop
mov
ficoml
cmc
xor
xchg
inc
jnp
lods
outsl
out
out
add
imul
cmc
dec
loop
xchg
lcall
xor
loop
adc
or
gs
lock
inc
int
nop
lahf
pop
bnd
adc
ret
inc
mov
insb
pop
pop
pop
lahf
lret
divb
nop
dec
xchg
loop
and
insw
popf
popa
mov
pop
in
jmp
push
lods
sahf
xchg
xor
stos
sarl
icebp
jae
arpl
mov
lea
and
cmp
sahf
ret
mov
sahf
dec
int3
stos
cmp
cmp
mov
xchg
sahf
jmp
mov
add
jp
movsl
sub
pop
jp
jne
je
dec
hlt
jno
repnz
adc
cli
mov
popf
sub
into
sbb
jns
add
pop
jne
or
jbe
jnp
pop
hlt
ljmp
pop
pushf
vandps
int
cmp
popa
and
imul
pop
cmpsb
mov
mov
dec
cbtw
jl
or
hlt
inc
or
mov
addr16
dec
mov
cs
out
push
xchg
fs
idivb
into
jno
test
inc
jnp
out
pop
nop
add
fcmovb
insl
out
mov
push
loop
cmp
filds
mov
sbbl
shlb
jl
push
push
testl
xor
ret
into
jecxz
inc
shrb
push
cmp
dec
fcoms
movsl
in
adc
xchg
not
push
and
pop
push
sbb
cwtl
and
xor
inc
pop
sti
mov
xor
xchg
adc
sbb
lret
cmpsl
add
sbb
sahf
out
xor
or
add
xchg
movb
mov
pop
push
pushf
ljmp
sub
outsl
push
call
mov
mov
sti
mov
push
push
mov
cmp
mov
movsb
cmpsb
push
shl
inc
in
out
mov
sub
repnz
call
shl
shr
mov
cld
stos
inc
jge
and
pushf
pop
xor
sbb
dec
fisubrs
xor
ja
fsts
mov
sbb
sbbl
es
lods
lods
sbb
dec
and
pop
inc
scas
sbb
or
cld
fidivs
pushf
push
xchg
loope
add
pop
pushf
cs
jp
xchg
adc
shll
xor
or
xchg
pop
mov
adc
shl
pop
inc
mov
pop
push
mov
loope
push
mov
lret
mov
push
push
xchg
cs
mov
lods
inc
fildll
mov
out
fwait
and
js
xchg
dec
lahf
js
pop
xor
les
sti
jnp
cmp
mov
pop
scas
sarb
std
seta
mov
or
out
movsl
push
cmp
call
stos
data16
push
out
clc
mov
adc
mov
test
xor
add
jg
mov
inc
jmp
jg
xor
sub
sbb
daa
adc
cltd
add
jnp
popf
test
mov
jmp
mov
inc
xchg
out
mov
pushf
movsl
push
call
insb
insl
icebp
push
js
mov
adc
and
jl
daa
mov
push
ss
jo
loop
loopne
and
mov
mov
or
clc
sub
mov
shlb
rcll
adc
push
jmp
in
js
sar
cmp
adc
mov
sub
mov
lret
sub
adc
nop
mov
mov
dec
pop
es
or
mov
lret
incl
xchg
sub
push
mov
aad
jae
dec
sbb
daa
fwait
mov
cmpsb
jae
jbe
lds
data16
repnz
or
jmp
sti
mov
out
push
mov
inc
ret
mov
xchg
and
sbb
add
xor
pop
pusha
out
push
or
imul
jae
popf
inc
add
out
jmp
enter
adc
adc
jne
stos
inc
xchg
cmp
fldpi
mov
shrl
xchg
add
mov
ds
lcall
mov
aam
cmp
mov
sahf
xchg
shl
cmp
jle
adc
bound
sahf
daa
stos
xor
icebp
lds
and
pop
insb
test
ljmp
mov
addr16
jmp
push
jmp
fs
pop
xlat
lret
cwtl
jecxz
push
jne
les
mov
jbe
adc
loopne
pusha
aaa
pop
or
scas
lret
xlat
mov
stc
ljmp
add
icebp
mull
dec
stc
adc
popa
cltd
vpshufhw
sub
mov
lea
iret
mov
add
aas
cltd
sbb
cmpsl
int
xor
leave
bnd
mov
rcrb
fmull
pusha
jmp
push
jne
iret
icebp
inc
fadds
dec
pop
sbb
pop
js
push
adc
lcall
dec
jo
rcl
sarb
or
shrl
je
movsl
adc
sub
jmp
inc
pusha
jl
pop
push
xchg
orl
and
test
outsl
call
or
leave
incl
adc
xchg
inc
sbb
jae
imul
xchg
pop
adc
sahf
leave
out
cld
jge
push
jecxz
scas
iret
cmc
hlt
or
out
inc
or
call
jle
sbb
fs
xchg
jp
and
test
cmp
jne
fwait
jo
loop
enter
dec
sbb
leave
push
in
add
shll
add
fadd
add
xchg
ret
mov
loopne
fnstcw
mov
mov
leave
rcrl
fwait
ja
test
push
data16
je
out
mov
sbb
dec
testl
mov
sbb
rcl
adc
mov
add
inc
iret
out
mov
das
sbb
in
leave
dec
push
iret
cmc
xchg
adc
xchg
stos
xor
pop
dec
outsl
loope
push
push
jmp
cmp
mov
jb
icebp
cld
mov
mov
ds
jg
mov
int3
lods
ss
nop
add
mov
insb
call
dec
sbb
sbb
mov
dec
fs
and
call
ret
jl
rclb
cwtl
lods
insl
cmpsb
or
xchg
jb
fidivrl
rolb
inc
pop
sub
sbb
or
mov
es
mov
in
cmp
mov
push
xor
mov
cmp
mov
popf
adc
jg
call
jnp
test
addr16
test
and
popa
jl
repnz
sub
aas
xchg
je
fdivp
inc
jae
push
inc
cmp
ret
popa
sub
ss
fdivrl
jle
in
sahf
leave
add
test
push
cld
xchg
insl
and
and
aam
xchg
filds
pop
arpl
fistps
sub
cltd
mov
push
mov
fiaddl
ljmp
ljmp
xor
ficoml
sbb
fpatan
mov
outsl
jo
jno
data16
int
or
fildll
out
xor
js
cld
push
popf
xchg
xor
cmp
loopne
iret
scas
lock
push
cmpsb
test
cmpsb
cmp
fsub
pop
cmp
js
dec
jne
sbb
movsl
or
pop
fmuls
add
or
xchg
inc
or
insl
pop
mov
in
int
out
dec
pop
cmp
std
shr
xchg
add
pop
or
sub
fcomps
add
pop
push
sub
jmp
lahf
dec
shld
mov
push
xchg
mov
pop
cmp
aad
xchg
repnz
push
mov
in
ficoml
jns
pop
testl
mov
and
data16
je
xchg
jmp
shll
int3
pop
or
das
mov
out
dec
int
daa
and
mov
in
fmuls
jmp
lret
data16
jne
inc
addl
mov
fs
std
push
mov
mov
fdivr
inc
cmp
mov
adc
or
xchg
mov
jb
dec
pop
jo
popf
lods
in
sbb
push
divl
out
xor
fcmovb
call
inc
and
adc
dec
shl
cld
mov
idivl
and
aaa
out
sub
xchg
push
mov
out
xor
mov
inc
ret
or
mov
mov
xchg
xor
rclb
out
ret
jge
repnz
jp
jge
dec
cltd
xchg
jmp
mov
xor
ljmp
push
pop
lcall
pop
stos
das
cli
jle
js
xchg
jl
or
stc
mov
inc
inc
inc
adc
pop
dec
sbb
or
push
jl
stos
jmp
jl
aad
daa
xchg
jo
or
into
repnz
xor
test
adc
mov
push
jae
test
jb
sub
jb
add
gs
xchg
dec
jle
adc
inc
inc
cmp
addr16
push
xor
iret
ret
out
aad
jge
enter
ja
cltd
cmp
popf
inc
lods
inc
aaa
mov
xor
push
push
mov
std
pusha
sar
ret
pop
jg
cld
insl
imul
dec
dec
stos
lret
adc
adc
call
fwait
jmp
gs
dec
push
xchg
xchg
xor
cs
xchg
out
push
rorb
lcall
nop
pop
imul
mov
fiadds
push
enter
imul
mov
idivb
cltd
lret
push
pop
js
popa
dec
cltd
pop
xchg
dec
cmp
aas
sub
imul
mov
mov
push
and
ds
in
cmpsl
adc
std
ret
cmp
in
push
push
in
jae
pusha
and
mov
xchg
imul
cmp
addr16
daa
outsl
push
daa
enter
push
enter
test
add
stos
inc
test
jns
push
xor
arpl
fsts
xor
mov
loopne
int3
jecxz
dec
xchg
pop
push
pop
out
and
pop
adc
or
into
dec
add
mov
loopne
or
test
pop
pop
mov
adcl
ja
jle
jbe
jae
fiaddl
in
and
notl
cmpb
xor
daa
or
xor
outsl
xchg
push
cmp
xchg
rorb
cld
iret
cltd
pop
and
sbbb
or
add
leave
les
jb
or
pop
sub
jl
mov
dec
mov
sbb
cmp
push
xchg
cmp
ds
fadds
or
lret
push
cs
lds
push
jl
insb
out
dec
jl
xor
int
pop
mov
scas
aaa
es
sub
pop
neg
sbb
les
mov
sbb
mov
cmpsb
incl
mov
hlt
jg
mov
push
or
adc
mov
and
fnstenv
fs
outsl
dec
aad
pop
out
subb
jge
shrb
push
mov
pushf
icebp
popa
inc
and
cltd
add
mov
mov
lret
ficoml
cmp
lret
or
xor
test
inc
bound
out
lret
add
jno
lret
inc
mov
out
out
leave
in
mov
jge
xchg
mov
in
in
xchg
sar
lret
fldz
mov
pop
xchg
xchg
mov
daa
out
mov
cmpsb
icebp
in
pop
rcrl
push
repnz
cld
insb
mov
xchg
test
andb
push
or
pop
pop
pop
adc
xlat
push
clc
out
adc
je
scas
pop
fsubrp
fists
addr16
adc
jecxz
insl
mov
inc
jmp
jo
push
out
mov
fwait
mov
pop
jl
fstl
pop
mov
aaa
add
jmp
aas
mov
test
fcoms
cmc
mov
repz
repz
push
out
adc
push
pushf
std
jne
inc
xchg
push
jge
roll
jbe
fs
and
mov
popa
push
mov
adc
addr16
fsts
pop
in
xchg
aas
insl
lds
mov
push
lea
pop
push
imul
sbb
cmpsl
add
xchg
add
mov
aam
pop
push
xlat
shl
lret
out
shll
inc
pop
push
dec
leave
leave
icebp
xchg
das
cli
jno
pop
xchg
scas
dec
pop
jno
addr16
repnz
jge
sbb
pop
xor
adc
fdivrs
insb
es
inc
cmp
xchg
mov
sbb
pop
jge
mov
jo
adc
push
pop
scas
and
xchg
inc
cmp
adcl
aam
mov
cs
jb
rolb
orl
enter
int
cmp
mov
aad
cmp
std
cld
mov
leave
inc
outsl
int3
lea
cs
lret
loopne
dec
cld
xchg
aam
push
mov
fucom
or
add
pusha
and
mov
into
or
loope
arpl
ret
shrl
mov
into
gs
test
push
and
outsb
std
iret
inc
ficoml
dec
mov
cwtl
scas
dec
adc
popa
inc
es
xor
jnp
mov
repz
pop
sahf
inc
test
mov
push
xor
mov
aam
ret
addl
mov
out
jb
ljmp
jae
out
popa
fdivl
sub
movsb
and
lcall
int
cmp
jmp
int3
mov
mov
ret
es
lahf
sbb
adc
flds
pushf
inc
clc
and
and
repnz
dec
sbb
sbb
xor
jmp
popf
pop
leave
lret
in
jge
sti
les
pop
or
cmp
cmpl
js
or
movsb
fsubrs
enter
mov
pop
cmc
js
cmp
add
aad
and
jmp
std
arpl
fmul
fisubs
fsubrl
out
pop
pop
sub
add
fisttpll
mov
inc
div
add
dec
loopne
mov
fs
aas
iret
sar
jo
or
popa
and
add
or
or
add
je
pop
adcl
int
test
fwait
imul
dec
imul
xchg
fsubrs
loop
mov
into
lahf
mov
pop
xor
cmove
cmc
sbb
lods
enter
sbb
movsl
push
outsb
mov
xchg
sbb
push
sbb
lcall
aad
add
and
enter
push
inc
stos
jns
jecxz
nop
mov
xor
data16
int
mov
lcall
sub
pop
ret
adc
jecxz
pop
xlat
stos
int
or
idiv
out
inc
mov
mov
scas
sbb
mov
movsb
mov
jecxz
inc
sub
mov
fneni(8087
nop
jp
cwtl
sbb
push
push
mov
mov
push
hlt
ret
test
adc
inc
push
movsb
push
popa
sbb
in
adc
cs
loope
scas
adc
xchg
test
xchg
or
push
ret
sbb
ljmp
test
adc
push
xchg
je
addr16
adc
ja
aad
jo
test
add
push
sub
lea
xchg
inc
inc
cs
fldt
xor
repz
dec
cmc
xor
adc
and
push
shl
sbb
mov
psubw
xlat
test
sub
aad
xchg
mov
cmpsb
mul
movsl
ret
mov
arpl
or
sub
sbb
addr16
add
call
push
ljmp
bound
test
mov
mov
pop
std
xchg
xor
push
lea
stos
fisubrl
mov
push
cmp
mov
bound
cmpsl
fisubrs
inc
movsb
dec
icebp
popl
mov
out
cmp
jp
adc
int3
lds
dec
sahf
sbb
adc
out
adc
mov
mov
stc
int3
lahf
lret
jno
rsm
or
cli
lea
out
cmp
bound
xor
cmp
jo
mov
shl
jae
adc
rorb
jge
fwait
adc
push
arpl
inc
dec
mov
mov
xor
ljmp
or
shlb
or
lds
aas
cmpl
and
outsb
jle
xchg
sbb
lahf
lcall
add
out
or
pop
sahf
dec
fsubrl
in
jbe
mov
ret
lret
jae
rcrb
push
aad
rclb
add
mov
rep
roll
ficompl
orl
iret
pop
stos
mov
adc
jae
sub
pusha
lods
idiv
adc
add
push
jne
popa
out
or
xor
rol
mov
add
cmp
test
and
lods
sbb
xchg
cmpsb
ficomps
cmovle
lea
push
into
pop
inc
jg
push
out
or
int3
mov
pop
add
push
popa
data16
bound
loope
pushf
xchg
mov
fwait
aam
jns
pop
cmpsb
xor
imul
add
ror
outsb
or
fsts
imul
mov
inc
out
pop
jb
out
xor
mov
scas
cli
aaa
loopne
add
into
jae
and
xchg
sbb
xchg
das
pop
sahf
or
mov
lea
or
popa
xchg
enter
adc
pop
les
sar
push
adc
xchg
xchg
jmp
ds
cmp
jmp
jbe
push
push
jne
inc
leave
jl
xchg
mov
dec
imull
cwtl
xchg
cmpsl
pop
mov
xchg
outsb
sbb
cld
sahf
out
test
lds
inc
and
pop
ret
pop
xchg
push
ret
inc
xor
inc
ljmp
ja
shll
lock
bound
push
pop
imul
dec
inc
jae
data16
push
sahf
addr16
sbb
lods
jnp
shl
push
dec
insl
jl
push
push
in
jae
out
push
fbld
and
inc
ret
mov
arpl
iret
fs
sbb
roll
pop
inc
inc
fucom
push
data16
mov
rorl
ss
pop
or
fsubs
push
push
push
pop
xor
icebp
pushf
mov
add
test
fisubrs
jl
mov
mov
push
outsb
cmc
enter
lock
insl
mov
adc
cmp
int3
xchg
aaa
mov
sbb
pop
fiadds
rcrl
ds
iret
filds
mov
pop
ror
fmull
jne
pop
mov
mov
das
cmpsb
int3
cmp
jo
adc
out
test
mov
inc
dec
test
outsl
in
or
inc
in
xchg
inc
addr16
insl
cs
jecxz
rol
add
pop
jge
xchg
cld
shlb
lahf
cmp
xor
xor
or
or
imul
dec
inc
mov
dec
rcrb
inc
sub
movsl
mov
mov
dec
xchg
push
fadds
xor
testb
add
adc
xor
call
mov
jns
pop
ficomps
push
add
sbb
jle
cmpsl
pop
lret
mov
cmp
push
mov
mov
std
fst
in
dec
cwtl
pop
loopne
in
fstps
mov
hlt
roll
sub
subb
xchg
fs
push
add
rcr
lret
jo
sbb
je
xor
cmp
xchg
dec
xor
mov
mov
pop
dec
aam
jo
push
lret
sbb
cmp
mov
sbb
or
repz
movsb
fnstsw
addr16
pop
testb
pop
pop
xchg
iret
call
enter
or
out
iret
lods
xor
rcr
outsl
adc
adc
push
fwait
mov
adc
push
fidivrl
xchg
out
jmp
cmp
mov
int
and
push
push
jg
out
push
test
jb
js
adc
dec
not
push
mov
mov
or
xchg
jno
and
xchg
push
pop
std
adc
xchg
call
cmp
and
loop
sbb
xchg
dec
pop
or
inc
clc
xchg
arpl
shrl
push
icebp
cmc
inc
loope
and
clc
mov
das
roll
xor
push
pop
push
sbb
push
cld
pop
inc
lock
movsl
push
dec
jne
fcompl
insb
jp
adc
adc
lds
mov
add
pop
test
add
iret
movsl
mov
pop
mov
pop
int3
push
push
dec
pop
or
mov
andb
jl
dec
aad
and
mov
or
lret
add
sbb
xchg
flds
clc
bt
jmp
in
mov
icebp
mov
jl
aas
cmp
cld
in
push
outsl
outsb
sub
fwait
ss
or
jle
jbe
cmp
xchg
fdivp
mov
xor
jmp
xchg
arpl
cmpsb
mov
fdivs
push
dec
dec
mov
xchg
jmp
cmp
jp
ret
push
clc
pop
pushf
shr
mov
or
icebp
mov
jo
jg
xchg
std
or
aad
mov
bound
shlb
inc
jp
push
adc
xor
movsb
adcl
push
sbb
dec
scas
cld
into
clc
jo
pop
adc
xchg
dec
cld
xchg
add
adc
or
push
lret
push
push
loop
outsl
jae
jmp
sub
dec
inc
movl
cwtl
push
scas
out
iret
sbb
pop
jo
arpl
ficoml
inc
ds
jp
inc
icebp
and
ss
scas
movsb
outsb
leave
fdiv
je
in
lcall
stos
and
addr16
rcll
mov
adc
cmc
push
lret
daa
in
sbb
or
roll
lods
test
daa
or
movsl
inc
int3
adc
xchg
out
and
frstpm(287
aas
jb,pn
orl
xchg
jbe
movsl
mov
in
pushf
and
xor
fwait
mov
test
push
push
leave
adc
xchg
mov
xchg
out
add
lods
ret
fisubl
push
jmp
mov
or
loop
pop
sbb
ret
ret
pushf
push
sub
xor
adc
icebp
repnz
or
xchg
cltd
mov
adc
insl
stos
jle
pop
jns
or
js
sbb
jl
fbstp
xchg
cltd
mov
test
xor
enter
inc
xchg
or
jl
lock
push
pop
mov
push
jl
repnz
aad
jg
add
pop
jne
shl
jmp
push
aas
sub
sub
mov
test
lret
mov
mov
jo
dec
sbb
imul
insl
aam
aad
fsubrs
push
sub
xchg
test
shll
in
cmp
inc
push
add
adc
in
je
ja
rol
or
jge
push
js
push
out
rcrb
sbbb
lods
inc
or
sub
push
data16
mov
pop
setg
in
cmp
aad
xchg
out
outsl
sti
sbb
push
lcall
mov
enter
pusha
out
dec
in
cli
jg
sbb
push
not
and
xchg
and
mov
addr16
loopne
repnz
and
test
jae
add
xchg
jp
add
jbe
xchg
mov
in
ret
enter
lcall
sbb
push
inc
or
pusha
or
mov
push
into
aam
or
fcom
dec
fxch
fnstenv
movsb
xchg
sbb
orl
sahf
pop
cmp
cmp
mov
add
adc
imul
cmc
sub
out
or
lret
inc
out
mov
lock
imul
inc
xor
mov
jnp
push
lret
sub
push
add
xor
insl
cltd
push
and
out
cld
aas
mov
lods
dec
shr
sub
push
cmp
xor
mov
mov
jecxz
mov
lahf
xchg
inc
cmpb
jg
mov
xor
ja
aad
shrb
out
adc
xchg
mov
icebp
xchg
dec
cmpsl
out
popa
fistpl
mov
dec
rcll
jbe
sti
pop
lret
sahf
out
fildl
sbb
adc
or
adc
mov
rcll
ret
or
int
mov
test
in
dec
std
adc
pop
push
add
lods
aaa
push
sbb
repnz
call
pop
popf
jo
je
pop
pop
fwait
sbb
ja
loope
es
lret
ret
jae
mov
add
mov
xchg
rcrb
jae
fsts
insl
pop
add
decl
add
cmp
adc
dec
andl
jo
stc
nop
jne
dec
fildll
jbe
insl
call
cltd
mov
jb
shl
loope
test
int
xchg
test
imul
ja
xchg
sub
lods
sbb
sbb
lretw
or
clc
cli
dec
and
pusha
movsb
not
cmp
xor
lods
sub
cmpsb
lea
es
mov
adc
adc
out
stc
rorl
enter
lea
ja
mov
dec
js
push
insb
push
aad
cmp
insl
push
sub
cwtl
jp
pop
dec
inc
inc
mov
inc
xchg
push
pop
aad
cmp
aas
popf
data16
rcl
cmp
push
xor
jmp
mov
pop
cmpsb
mov
sub
cmp
push
mov
rcr
imull
sti
xor
sub
lahf
notl
inc
ret
je
lcall
aad
adc
addl
shrd
cmpsb
lret
push
pop
ljmp
decb
sub
mov
pop
xchg
add
std
or
repnz
pop
mov
push
shll
negb
repz
sarl
xor
mov
jo
add
fcom
dec
push
mov
scas
outsl
insb
jecxz
pop
or
movsb
mov
gs
and
xchg
push
imul
lea
and
or
ds
test
movsb
lds
sbb
dec
rol
repnz
dec
sbb
jo
cmpsb
test
in
test
cmp
mov
sub
add
xor
lret
pop
sub
or
pop
mov
stos
and
in
das
xor
pop
int
inc
inc
aam
into
lock
sbb
fnstenv
sbb
scas
fsub
aaa
jp
hlt
nop
push
repnz
scas
adc
movsl
and
mov
popa
sar
arpl
mov
inc
jle
mov
mov
cltd
icebp
jmp
dec
sti
adc
xchg
je
sti
or
rorb
pop
mov
xchg
mov
loopne
jg
dec
sbb
xchg
jno
fistps
es
call
in
pop
leave
sbb
or
inc
ret
ret
cltd
add
ss
dec
xor
dec
les
mov
pop
pop
mov
sbb
pop
push
es
out
test
cmc
push
push
dec
sbb
les
xchg
popa
sub
repz
mov
sbb
fdivrl
arpl
xor
mov
cmp
pushf
xor
dec
mov
fstl
shll
jp
mov
xlat
shrb
lret
fisubrl
pop
mov
push
inc
cmpsb
shll
out
sti
movsb
daa
jnp
lret
roll
or
das
out
fistpll
popf
mov
cmp
aaa
and
push
imul
or
lcall
jns
lcall
xchg
loop
jg
icebp
and
cmp
and
pop
jle
repnz
xchg
out
cmp
cmpsl
cltd
fidivrs
ljmp
dec
shl
mov
into
imul
mov
mov
clc
nop
popf
lea
adcb
imul
push
jecxz
xor
mov
in
lds
pop
insl
insb
mov
mov
mov
mov
cmp
mov
lret
dec
mov
jne
arpl
cmp
jecxz
mov
pop
insl
test
pop
push
hlt
aaa
data16
fsubl
imul
xor
mov
stos
ja
scas
in
add
xchg
arpl
ljmp
dec
hlt
xor
mov
icebp
insl
mov
pushf
ja
and
lods
cmp
enter
inc
je
mov
loopne
jg
inc
inc
mov
adc
movb
sbb
test
pop
fwait
loope
mov
js
jo
adc
mov
repnz
pushf
cmp
fsts
add
mov
ret
pminsw
data16
popf
cmp
sbbb
pop
mov
inc
je
inc
int
sub
xor
add
ret
pushf
sbb
sub
cld
cld
int3
pop
add
subl
mov
inc
roll
nop
xchg
adcb
adc
mov
or
push
sbb
dec
sub
push
sti
clc
leave
jl
inc
jo
imul
shll
lock
ljmp
insl
push
mov
pop
sub
insl
jo
xor
adc
jecxz
repnz
inc
push
lcall
aaa
push
mov
mov
pop
sbb
daa
inc
fcmovnbe
adc
int3
cmpsl
lret
stc
sbb
sbb
jb
or
pushf
sbb
pusha
ficompl
subl
loope
add
out
add
es
sbb
outsb
push
cmpsl
jle
mov
ret
jmp
fwait
xlat
push
pop
mov
aam
mov
or
in
scas
mov
push
je
sarl
js
pop
xchg
mov
in
mov
lret
aad
cld
in
push
push
add
adcb
imul
loopne
inc
clc
imul
mov
loopne
mov
inc
mov
sub
mov
or
push
xchg
jbe
aas
mov
mov
insb
ret
int3
xor
cmp
xor
out
inc
push
shlb
in
pop
mov
mov
jp,pt
addl
push
ret
mov
cmpsl
lods
jmp
push
fstps
dec
pop
gs
dec
inc
test
jmp
mov
lcall
mov
mov
inc
pop
jle
mov
mov
stos
mov
pop
inc
dec
fldenv
stc
mov
xchg
inc
push
jge
push
push
cltd
xchg
and
lcall
imul
in
pop
sub
iret
out
ficomps
out
mov
inc
mov
xor
or
xor
add
mov
inc
fmul
sub
add
orl
xchg
or
scas
idivl
pushf
icebp
mov
mov
loop
pushf
gs
les
jecxz
dec
sub
int3
push
pusha
mov
jmp
out
xorl
nop
in
fisubl
imul
fisttps
mov
xor
lea
xor
frstor
jbe
mov
inc
mov
xchg
pop
dec
or
hlt
ret
push
push
in
ja
daa
pop
inc
xchg
shlb
pushf
jmp
push
cmc
mov
bound
mov
pop
dec
add
rolb
xchg
mov
jmp
xor
mov
std
test
cmp
cmp
mov
std
jo
hlt
mov
inc
jno
or
or
iret
and
inc
xor
in
lock
mov
arpl
scas
sub
sub
inc
xchg
shlb
into
sti
jne
lea
mov
push
xor
xchg
in
cmpsl
pop
mov
repnz
or
aaa
cmp
pop
xchg
sbb
sub
xchg
repz
std
clc
jnp
data16
xor
cltd
adc
fisttpl
flds
xchg
push
out
cmpl
int3
lcall
fs
lods
dec
jle
hlt
xor
js
jmp
or
popf
je
lret
cmpsb
pop
mov
or
ret
leave
pushf
sbb
pop
push
sbb
pop
mov
inc
jnp
dec
cmpsb
push
pop
sbb
cmp
aaa
shrb
outsl
iret
xchg
iret
xor
push
jae
and
add
lret
jne
dec
dec
movsl
cmpsl
dec
pop
add
sbb
adcl
mov
dec
push
pop
and
mov
imul
adc
xchg
je
in
mov
dec
add
aam
sbb
or
jecxz
jmp
xchg
icebp
or
les
dec
aad
incl
inc
xchg
push
fst
xor
cs
or
mov
xor
pop
clc
jbe
dec
jo
cmc
inc
pop
leave
cltd
pop
pop
mov
add
ret
or
lea
cmp
mov
cmpsl
and
dec
sub
scas
lock
mov
push
fcomi
js
dec
mov
pop
cmp
mov
ds
push
push
cmp
ja
ret
sti
icebp
cmp
push
add
adc
pop
mov
adc
sbb
stos
sub
sbb
and
xor
sub
aam
fs
test
dec
pusha
jo
scas
ror
insb
xchg
imul
sbb
int
xchg
jl
xchg
sahf
and
jo
push
inc
push
popa
nop
repnz
test
aaa
pop
ljmp
xor
lret
les
push
mov
mov
mov
jne
aad
xor
dec
adc
cmp
push
jnp
fucomp
stos
sbb
cmp
xacquire
mov
loopne
addr16
jl
popa
scas
or
xchg
sub
inc
push
dec
pop
cmp
jg
stos
and
xchg
lods
lods
sub
jb
test
push
mov
xchg
scas
add
dec
idivb
int
cs
inc
or
xlat
mov
cli
mov
jbe
shrb
mov
adc
lret
inc
cwtl
sub
iret
pop
fs
inc
pop
fstpt
adc
mov
xchg
rolb
mov
aam
arpl
xor
cltd
test
ret
mov
movsb
cmovae
sbb
test
pop
and
cmpsl
push
adc
lock
je
sbb
insb
scas
popf
pop
dec
jo
push
sub
stc
in
shrb
mov
jmp
xchg
push
xchg
xor
pop
rcll
aam
cmc
jmp
mov
into
jns
adc
sti
mov
and
scas
daa
movsb
fbstp
gs
shl
fisttpll
mov
dec
or
pop
mov
fs
mov
add
data16
mov
addr16
pop
xchg
push
jecxz
xlat
cltd
int3
sbb
mov
fildll
xchg
aad
shlb
mov
xchg
xor
jno
ljmp
sub
and
cmp
in
sbb
cs
xchg
add
std
adc
cmp
jae
xor
dec
mov
es
push
ss
adc
jmp
lds
pop
sbbb
xor
mov
lds
testb
dec
mov
lds
ret
xchg
int
sbb
cmp
mov
cli
aaa
outsl
stos
loope
jmp
stc
xlat
cmp
sbb
add
int
out
repz
mov
test
in
mov
xchg
aas
and
sarl
lret
xchg
aad
jno
jns
out
jbe
les
add
and
call
int
gs
aas
in
jl
divb
lret
insb
leave
xchg
push
jmp
aas
xchg
xor
aaa
fucomp
loopne
or
xor
and
push
jmp
popf
xrelease
and
add
fwait
in
jmp
aam
sahf
mov
mov
imul
cld
insb
es
dec
or
adc
xor
js
and
aam
pop
jbe
push
add
decl
inc
jne
out
sub
scas
or
nop
mov
jne
insl
aas
int3
or
shr
popa
lea
mov
fsubl
dec
lret
mov
jne
jmp
push
or
loop
mov
inc
js
sbb
push
sahf
aaa
mov
push
jg
in
push
cmpsb
mov
mov
mov
mov
jp
xor
hlt
adc
xor
fnstsw
seto
aad
dec
std
dec
and
and
mov
xchg
dec
mov
icebp
in
sbb
or
sub
jne
xchg
mov
and
lock
cwtl
mov
ss
ljmp
mov
dec
dec
inc
std
mov
adc
pop
or
mov
daa
inc
sub
cmp
or
stc
jmp
jae
push
imul
mov
sbb
jns
or
ja
dec
test
xorb
sub
mov
in
mov
jo
shlw
rorl
shlb
mov
mov
mov
jmp
push
add
push
adc
clc
insl
sub
cmp
pusha
push
mov
dec
xchg
lcall
mov
mov
imul
xor
sub
xor
xchg
inc
fs
test
into
sbb
jbe
xchg
mov
cwtl
out
incb
loop
lods
ljmp
pop
jmp
inc
xchg
into
add
flds
loope
stc
loop
pushf
test
out
push
xchg
push
or
aas
mov
sub
pop
jp
jno
frndint
mov
nop
xor
push
fimuls
dec
int
loope
aas
sahf
mov
subl
sbb
cmpl
bnd
lods
adc
pop
in
sar
cld
mov
adc
sbb
or
add
insl
add
fsubl
pop
pop
movsl
mov
jne
mov
and
repz
pop
jb
cmp
sbb
sbb
movsl
sbb
hlt
dec
rorl
stc
sbb
sbb
test
js
gs
inc
pop
xchg
or
cmp
lods
fisttpll
dec
roll
adc
mov
daa
mov
je
and
mov
hlt
or
push
mov
mov
in
jb
pop
int
cmc
insb
jns
cmp
imul
push
addb
ret
mov
and
call
mov
push
xchg
out
addr16
popf
mov
cwtl
adc
out
xchg
sub
lcall
into
sbb
out
sub
jae
inc
jecxz
push
mov
ja
test
nop
mov
test
iret
nop
jae
movsl
loope
mov
out
or
xchg
push
cmp
mov
mov
pop
push
push
mov
mov
nop
scas
daa
jge
xor
in
lods
lret
xor
xor
stos
imul
mov
fbld
dec
pop
mov
add
scas
shl
add
ret
push
scas
ss
fcoms
cwtl
xor
loop
adc
aam
cld
stc
push
jecxz
inc
add
xlat
fcmovu
mov
arpl
xchg
arpl
outsl
rcll
push
enter
out
or
push
scas
aas
push
and
xorl
repnz
mov
inc
flds
icebp
insl
mov
inc
lods
cwtl
test
mov
cmp
lds
mov
test
jle
cltd
insb
push
rclb
lahf
cmpsl
jae
jg
push
dec
sub
stos
mov
testb
and
imul
out
or
cmp
or
xor
push
shlb
xlat
sub
loopne
iret
mov
cmc
mov
pop
push
pop
xchg
mov
xchg
cs
mov
fcompl
lods
mov
adc
add
imul
sub
mov
insl
and
negb
pop
and
repnz
mov
mov
pop
cmp
outsl
dec
in
dec
mov
sbb
repnz
or
lds
mov
je
sbb
pop
xchg
lret
shr
sbb
aaa
imul
jnp
sbb
ss
mov
cs
insl
or
rcrl
int3
inc
nop
xor
enter
scas
sti
arpl
int
test
inc
xchg
fsubrs
cmp
pop
imul
jno
push
ret
ficomps
xchg
dec
jmp
test
jo
cltd
test
pop
inc
cmpsl
cwtl
inc
les
iret
cld
xchg
data16
jmp
hlt
mov
lcall
out
outsb
adcb
fists
xchg
push
dec
test
jmp
inc
lahf
aas
mov
flds
mov
push
add
lods
loop
dec
mov
aam
mov
pop
pop
pop
xchg
pop
pushf
pop
mov
js
lret
push
shr
sub
inc
cmp
cmpsb
es
mov
jl
mov
push
cld
cli
adc
rorl
mov
pop
add
or
outsl
jmp
jb
loop
fstl
xchg
int
pop
mov
or
inc
ret
inc
push
cmpsb
jle
jo
js
push
ljmp
xchg
sbb
fwait
cmp
ja
shl
xor
fucomip
shrd
leave
cmp
adc
mov
repnz
push
or
hlt
repnz
pop
adc
xor
icebp
scas
test
das
cmpsl
sub
addb
push
jmp
cwtl
sbb
add
ljmp
push
enter
rorl
cli
mov
cltd
loop
sub
mov
jmp
aaa
outsb
xchg
loope
cmp
rorb
xchg
sub
clc
ss
sbb
jmp
and
stc
push
and
jge
outsb
sub
in
mulps
sbb
sub
push
mov
lahf
push
push
mov
xor
mov
sti
lock
sub
add
fdivrp
or
fs
loopne
dec
das
xlat
in
mov
xor
xchg
popf
pop
and
sahf
in
mov
cmp
ja
fidivs
mov
shr
rolb
repnz
aad
ljmp
mov
into
sti
xchg
mov
fs
aaa
push
jno
pop
iret
sbb
mov
or
iret
int3
cli
xlat
lret
lods
or
pop
dec
jl
mov
xor
xchg
dec
xor
jbe
arpl
iret
push
stos
mov
inc
popf
repnz
dec
sbb
adc
outsl
icebp
add
ss
lret
repz
cmpsl
xorb
inc
rol
jle
mov
rcr
mov
popf
je
and
adc
pop
and
pop
mov
xchg
hlt
adc
pop
mov
inc
lret
stos
clc
addb
ja
outsl
mov
mov
sbb
mov
inc
mov
or
xchg
xor
mov
mov
sahf
mov
jb
xchg
mov
test
sbb
data16
mov
sarl
jo
inc
xchg
jns
ret
lahf
call
mov
xor
hlt
sahf
jae
scas
sahf
inc
aad
lea
jns
pop
out
insl
inc
jns
fsubrp
adc
xchg
testl
dec
fucomi
add
aas
mov
jnp
sbb
dec
les
in
popa
loopne
cmc
pusha
jnp
adc
jp
test
mov
out
pop
rolb
jmp
pop
fmuls
fstps
jae
stc
or
dec
xor
fidivrs
ds
or
mov
aas
ret
jae
orb
repz
add
sar
pushf
pop
jne
mov
jae
cltd
mov
stos
mov
rorb
inc
push
pop
mov
insl
lret
cmp
push
xchg
and
decb
mov
sub
fdiv
mov
and
out
or
push
rolb
je
pop
enter
pop
subl
and
ret
inc
cmpsb
fs
adc
jl
shrl
or
push
out
addr16
jno
sbb
inc
sarl
xor
aad
out
ja
dec
dec
sub
sub
mov
orb
mov
rcll
pop
fsub
mov
fdivrs
xchg
jbe
scas
stos
xor
mov
mov
sahf
dec
ljmp
aaa
adc
xchg
adc
pop
mov
jle
mov
shlb
add
mov
rcll
jg
rcrb
test
mov
fwait
scas
je
cwtl
loope
xchg
push
or
loopne
xorb
pop
imul
and
lock
clc
ret
adc
sti
sbbl
arpl
cmp
popf
jns
rcrb
out
dec
icebp
xor
ljmp
xor
inc
enter
xchg
jae
sub
pop
inc
mov
int
mov
mov
ds
xchg
dec
xor
call
xor
aaa
pop
fcompl
mov
jno
or
lahf
cs
jmp
push
addb
std
cltd
fst
arpl
add
push
stos
popa
and
imulb
push
sub
mov
outsw
xchg
insl
or
out
fsubr
lea
ror
bound
frstor
or
test
repz
andl
push
daa
es
dec
xor
shll
fcmove
or
nop
mov
sub
imul
inc
cs
bound
mull
outsl
adc
mov
dec
add
and
lods
lods
mov
stc
push
lcall
or
hlt
sbb
sub
xchg
pop
mov
adc
sub
mov
or
bound
cmp
mov
pushf
dec
stos
out
shll
fwait
or
xor
shrb
xchg
pop
add
add
in
mov
test
sub
pop
dec
push
lahf
and
scas
pushf
mov
jmp
stos
sbb
int3
mov
test
dec
test
sub
je
xor
in
dec
stos
push
xlat
out
mov
add
pushf
mov
sbb
mov
jne
icebp
or
not
icebp
or
cmpsb
xlat
outsb
repz
add
negl
adc
fnstcw
cmpsb
dec
bound
out
mov
and
xchg
jg
rol
xchg
sbb
mov
xchg
dec
lea
cwtl
or
ret
fsts
clc
inc
xchg
rolb
das
lret
cmpsb
cmp
out
mov
xchg
jle
rorb
stos
mov
mov
outsl
xchg
jge
das
xchg
mov
mov
out
jmp
push
pop
rorb
xchg
ljmp
subl
xor
mov
and
pop
out
aad
arpl
push
mov
push
repz
sub
scas
jl
aad
loope
shrl
ffreep
push
addl
inc
dec
and
mov
in
pop
mov
xor
xchg
push
repnz
mov
fmuls
out
stos
pop
adc
rcl
subb
or
popa
mov
daa
shrb
or
push
repz
sbb
lods
in
jle
iret
inc
sub
xlat
xchg
push
rcrb
pop
clc
inc
lea
addr16
outsb
cmpsb
shrb
mov
push
xchg
mov
scas
lahf
adc
and
lret
pusha
adc
pop
cmpsb
out
inc
xchg
xchg
cmpsl
daa
push
scas
cmp
sbb
fcmovnu
ss
notb
insb
jmp
xor
adc
xlat
xor
jmp
add
pop
xor
mov
cltd
shrb
mov
pusha
insb
adc
fst
outsl
fildll
mov
out
push
icebp
sarb
xor
mov
push
imul
mov
out
mov
test
mov
je
jmp
push
dec
xchg
out
pop
cs
jnp
pop
push
stos
xchg
sbb
int3
and
mov
cmp
mov
pop
loopne
popa
ret
cmp
data16
stos
or
ret
incl
notb
adc
mov
test
int3
xchg
mov
aad
push
or
jnp
inc
orl
addb
push
outsl
push
xchg
and
sarb
pushf
mov
pusha
mov
fwait
out
dec
sbb
out
push
cmp
repz
push
int3
and
mov
imul
mov
jl
pop
outsb
push
lcall
push
adc
xchg
inc
daa
cwtl
stos
push
out
movsl
rol
inc
mov
xlat
mov
lock
push
test
cmpsl
xchg
jbe
call
sub
push
lea
cmp
dec
pop
cwtl
mov
lock
sub
jae
stos
sarb
inc
adc
pop
xor
mov
insb
and
adc
or
and
ret
clc
mov
int3
adc
or
jle
and
fildll
imul
adc
addr16
dec
in
fwait
aam
shlb
sbb
jnp
xchg
push
push
xlat
test
addr16
fisttps
dec
imul
fists
incb
stos
mov
shlb
test
fistpl
sarl
das
sub
loop
negb
aas
xor
aad
loope
rcll
adcl
int3
fwait
test
mov
lods
xchg
fbld
imul
push
jae
push
lea
cwtl
jle
fsubs
push
in
xchg
aad
adc
aam
xchg
incl
and
xor
imul
cmpsb
xor
dec
js
fildll
xchg
mov
sub
pop
or
stos
fs
mov
push
rcl
adc
lahf
xor
jle
adc
adc
push
aas
inc
or
and
cmpsb
movsb
add
outsl
push
nop
movsl
mov
mov
or
stos
cwtl
xor
call
lret
inc
je
in
mov
xchg
cmc
pop
mov
xlat
jmp
outsb
fmuls
aad
loope
fcomip
inc
ljmp
mov
sub
xor
jbe
cmpsl
lock
mov
lds
adc
ret
or
into
in
sub
push
cmp
inc
mov
jae
cli
out
filds
mov
sbbl
int3
or
imul
adc
jle
pop
or
and
cmpsb
dec
stc
dec
adc
or
jne
nop
mov
scas
mov
daa
sub
and
mov
push
cmp
push
fmull
out
fbstp
pusha
imul
jecxz
mov
push
rcr
mov
push
lcall
xor
in
pop
or
xchg
lea
mov
test
sbb
pop
or
lds
test
push
push
mov
decb
adc
enter
mov
nop
push
sbb
repnz
sub
ret
sbb
xchg
gs
mov
loop
fsubrl
pop
loope
shll
insl
orl
cltd
mov
outsb
fcomip
mov
mov
push
push
adc
dec
int
sub
mov
pop
sarl
subl
jp
rolb
xchg
aam
dec
xor
adc
out
jns
xchg
cwtl
add
sub
mov
and
cmpsb
mov
dec
rorb
dec
push
mov
repnz
out
mov
out
mov
pushf
jo
adc
mov
or
shlb
test
xor
inc
adc
pop
xor
mov
insb
and
adc
shlb
fistpll
enter
push
inc
mov
xchg
test
nop
dec
in
scas
push
or
repz
stos
mov
and
cwtl
adc
sbb
mov
into
shll
loope
xor
je
push
inc
xlat
mov
sub
les
out
fistps
pop
imul
lret
mov
fimuls
pop
popa
mov
shlb
test
xor
inc
adc
pop
xor
cld
rcrl
jnp
xchg
mov
imul
adc
jle
pop
or
and
cmpsb
dec
stc
dec
adc
or
jne
nop
mov
scas
mov
daa
sub
and
mov
adc
mov
fimull
cld
mov
out
mov
push
imul
lock
jns
xchg
adc
jb
cltd
xorl
push
pop
rorb
pushf
rclb
divps
rcrl
lea
or
arpl
cmp
rol
inc
aas
push
or
and
cmpsb
push
icebp
dec
sbb
add
insl
or
lds
adc
mov
xchg
mov
push
xor
push
aam
inc
out
fildll
push
mov
into
push
lret
fcoml
mov
lcall
sub
push
test
push
xor
out
ffreep
mov
gs
sub
push
outsl
fdivrl
in
loope
rcll
sbbl
cmpsb
push
mov
jmp
xor
mov
or
test
xor
ljmp
cmpsb
cli
push
dec
xchg
gs
xchg
mov
cmp
clc
test
add
xchg
sbb
inc
adc
cltd
xchg
push
bound
lock
mov
sub
mov
cmp
faddl
aaa
into
movsl
loope
ror
fbld
mov
and
insl
push
push
loop
mov
xchg
sbb
out
pop
xor
xchg
pushf
add
and
mov
push
jl
cmp
dec
stos
int
negl
lds
mov
pop
or
and
xchg
fildl
imul
aaa
clc
test
jae
sbb
lcall
mov
jns
enter
add
or
lea
and
loope
popa
mov
cmp
dec
movsl
xchg
out
fildl
dec
mov
int
outsb
lods
pop
xchg
lret
stos
xlat
xchg
aad
lea
cmp
btr
loopne
outsb
sub
lods
iret
cmp
fbstp
inc
repnz
xchg
sub
inc
mov
or
sub
push
push
mov
push
adc
andb
inc
cmp
pushf
jne
xchg
xor
adc
mov
mov
test
push
push
gs
dec
mov
inc
imul
add
icebp
or
cmp
hlt
mov
arpl
xor
dec
fdivr
inc
push
or
cwtl
lcall
aam
mov
pop
sub
addr16
stos
cwtl
sub
inc
int
lock
pop
dec
outsb
out
push
xlat
test
jnp
movl
outsl
sub
loopne
out
cmp
push
fcmovne
jns
mov
mov
cmp
jmp
dec
mov
das
jno
ljmp
nop
test
pop
shrl
stos
pop
lahf
mov
and
jno
adc
in
adc
not
add
inc
mov
iret
movsl
cli
inc
xor
bnd
jl
test
lea
inc
xchg
xor
cmp
pop
jl
pop
dec
call
mov
negb
xor
sbb
mov
mov
inc
push
mov
cmp
mov
xor
cmpsb
add
sbb
pop
adc
in
pop
mov
mov
jo
dec
movsl
xchg
pop
push
insb
jle
xor
rorl
mov
push
lcall
ja
mov
mov
shll
lahf
jo
adc
out
aas
sub
mov
sub
xchg
dec
lret
js
out
cmpsb
adc
scas
ret
rorb
mov
stos
lahf
popf
loopne
cmp
andl
xchg
pop
adc
jge
cwtl
dec
loop
fdivrs
gs
dec
fiaddl
fisttpl
ret
jge
pop
enter
mov
adc
push
roll
xchg
repnz
xlat
adc
les
push
addb
in
aam
cmp
in
bound
scas
push
in
cmp
mov
mov
bound
lret
pop
pop
shll
cmp
mov
push
and
cmp
sbb
xchg
repnz
lea
or
movsl
leave
sub
sub
in
dec
jecxz
xchg
or
or
in
in
pusha
shrl
pusha
lcall
arpl
repnz
dec
and
movsl
sbb
je
cmova
inc
aam
xchg
arpl
sahf
xlat
push
inc
fucomip
and
mov
dec
shll
js
enter
push
xchg
repz
xchg
or
js
inc
dec
cmpsl
inc
insb
sub
nop
push
pop
xor
xor
es
mov
push
xorb
sbb
cmp
cmp
adc
jl
push
pop
pop
out
sub
inc
jne
mov
je
push
inc
into
mov
ret
loope
out
lret
enter
aad
shlb
stos
cli
mov
cmp
inc
dec
xchg
xorl
inc
xor
xor
dec
and
cmp
or
cmc
les
shlb
cmp
pmaxub
repz
jp
notl
sub
dec
xor
dec
xor
push
popa
xor
or
and
mov
stos
adc
aas
sahf
ret
aad
push
mov
xchg
and
ret
adc
cmp
sti
xchg
scas
movsb
out
cmpsb
mov
xor
out
cmp
or
jne
jo
notb
push
xchg
movsb
clc
jmp
repz
test
out
and
adc
add
je
xchg
out
or
jo
popa
outsl
data16
jns
scas
mov
mov
lret
adc
in
push
stc
mov
jecxz
mov
xlat
mov
mov
rclb
mov
add
rclb
rcll
mov
inc
outsl
cmovp
mov
push
cwtl
pop
lcall
call
jle
inc
xor
fidivs
add
mov
mov
ret
and
push
mov
mov
inc
es
jmp
mov
repz
inc
inc
rorb
sti
adc
mov
cld
sub
enter
mov
imul
push
and
cli
sbbl
imul
repnz
push
mov
std
aas
jecxz
inc
clc
adc
jmp
aas
fiadds
setbe
sub
or
adc
scas
call
lret
jle
arpl
icebp
pop
push
scas
pop
xchg
sub
sti
dec
es
imul
pop
jmp
lock
imul
aaa
jns
and
adc
lock
sbb
lock
pop
arpl
in
mov
insb
jle
cmp
mov
or
mov
or
fdiv
push
cli
mov
arpl
sub
arpl
adc
xchg
pop
int3
fstl
mov
pop
neg
mov
out
mov
push
xlat
push
mov
cs
sarb
pop
pop
clc
mov
int3
adcl
sahf
dec
jecxz
xor
mov
ret
sbb
pop
sbb
mov
add
or
lock
xchg
rcr
xchg
fs
les
jg
sub
orl
out
xor
lret
pop
mov
add
ficompl
or
stos
test
test
stos
jl
jno
push
inc
xchg
add
test
jae
push
fdiv
jge
insb
into
in
loope
rol
filds
fwait
andl
xchg
mov
fistps
xchg
test
into
repz
push
int3
xor
ret
subb
sub
push
push
mov
inc
or
sbb
shrb
ja
test
push
xorl
test
lods
ror
xchg
or
lock
dec
popa
ja
aas
jae
mov
fisubrl
mov
jae
push
loope
mov
fnstsw
neg
xchg
lahf
and
or
insb
push
cwtl
aad
adc
adc
mov
repz
push
cmpl
pop
jbe
mov
xlat
mov
pop
out
fists
movsb
jo
fstps
leave
lea
or
stos
adc
and
fisttpl
pusha
test
and
das
push
xchg
mov
xchg
or
test
data16
test
mov
jae
repz
adc
lahf
int3
faddl
and
fndisi(8087
push
rorl
mov
dec
lret
pop
xor
insb
lock
push
cmp
lahf
repz
cmp
mov
aam
pop
gs
std
dec
sbb
inc
xchg
icebp
xchg
and
fmull
dec
into
xlat
loope
sarl
shlb
inc
fdivr
pop
orl
mov
lock
sbb
pop
dec
out
fists
xchg
mov
hlt
push
xchg
cmc
xorb
jle
adc
aas
lahf
or
and
cmpsb
loop
insb
sub
xchg
pop
push
pop
inc
and
ret
mov
andl
and
in
xlat
push
mov
cmp
movsb
fildll
inc
push
push
sbb
xchg
loope
xor
leave
lea
or
pop
hlt
xlat
mul
repz
in
xchg
push
mov
rcll
mov
loope
push
int3
call
xchg
add
xchg
icebp
inc
xor
push
mov
adc
or
and
cmpsb
test
dec
mov
sbb
nop
xchg
jp
and
mov
out
lock
scas
xchg
jle
shll
jg
std
adc
aad
stos
cltd
adc
enter
push
out
lods
out
call
ds
out
ret
je
dec
or
inc
shrb
jp
sbb
xchg
xlat
or
imul
jno
pop
jns
lahf
push
dec
xorl
xchg
mov
popa
and
mov
inc
cmp
mov
insb
nop
scas
das
xchg
enter
mov
add
xchg
xchg
adc
mov
lock
mov
mov
add
nop
cld
nop
sarl
mov
xor
xchg
jne
bnd
fisttpl
jo
lods
lods
and
mov
imul
add
push
std
loope
xorb
push
xor
out
aaa
stos
push
cs
in
mov
cli
fwait
xlat
insb
out
and
xchg
cmpsl
mov
fmull
movsl
popf
sbb
pop
andl
aad
add
shrb
mov
pop
sbb
lret
enter
xor
cmovo
call
xchg
fsubrl
cwtl
cmpsb
add
push
xor
push
mov
push
xchg
mov
stos
jbe
out
dec
mov
lods
mov
out
bound
pop
dec
jo
out
mov
push
outsl
out
inc
gs
rol
hlt
mov
insl
repnz
das
add
hlt
or
mov
scas
mov
enter
scas
cwtl
mov
push
pop
push
jle
lcall
outsl
loop
sbb
mov
and
aam
das
dec
iret
in
adc
lock
aam
mov
mov
stos
push
mov
add
sti
gs
icebp
testb
int3
jp
loope
pop
mov
lret
mov
ret
mov
add
jl
and
in
repnz
stos
fwait
iret
les
in
sub
mov
std
inc
mov
and
es
mov
cli
mov
sub
inc
dec
cmc
cmc
pop
mov
pop
js
push
lahf
stos
xor
cmp
mov
mov
jg
jb
add
add
jae
add
aad
or
cmpl
push
hlt
loopne,pt
or
mov
xchg
mov
cli
and
cld
xchg
sbb
cmc
xor
incl
dec
stc
ljmp
adc
test
cmp
pop
gs
stos
cmc
xchg
popf
std
sbbl
pop
mov
add
pop
push
mov
add
fcomps
mov
movsl
orb
push
pop
push
dec
repz
lods
push
in
lods
cld
pop
and
ret
rclb
in
sub
or
push
and
dec
lret
mov
jle
rcll
or
aam
loope
je
jb
jo
mov
or
xor
testb
dec
fldt
out
lret
dec
xor
in
mov
mov
in
dec
inc
sub
mov
cmpsl
mov
and
jne
ret
test
ret
jne
jae
cmc
inc
xchg
mov
xor
pop
lods
addr16
sar
or
pushl
or
mov
int3
ss
mov
pop
pop
sub
cmp
leave
xor
in
fmuls
shr
ret
ljmp
xor
cmp
mov
inc
push
lods
and
xchg
mov
sbb
mov
cmp
xchg
sub
lods
scas
or
int
mov
mov
jns
pushf
loopne
xor
scas
and
add
pop
and
cmp
pop
ret
xchg
imul
repz
sbbb
ja
stos
mov
call
mov
xchg
aaa
lds
dec
cmc
or
mov
pop
test
push
rorb
sub
or
inc
pop
scas
jb
rcrb
test
inc
or
fdivs
lock
push
pop
jo
les
jbe
ds
jecxz
int
cmpsb
or
dec
out
pop
orl
sbb
pop
xor
mov
sarb
fs
xchg
scas
lea
mov
mov
movups
outsb
mov
lods
push
mov
and
loop
add
imul
pop
mov
int
imul
dec
aaa
xlat
mov
mov
jo
and
ja
fucomi
gs
mov
xchg
call
cmpsl
out
aad
ss
mov
fldl
aas
cmp
inc
daa
sub
dec
xor
xor
mull
cmp
loop
adc
icebp
inc
mov
and
dec
addr16
ss
jmp
test
jae
stc
sbbb
xchg
rolb
lods
mov
ret
loopne
push
mov
in
pop
dec
aam
lods
or
es
push
neg
mov
inc
push
mov
subl
jbe
mov
dec
pop
pushf
push
std
hlt
jmp
outsb
iret
dec
aad
and
addl
test
testb
push
loopne
aas
jb
shlb
xchg
dec
sbb
xchg
std
dec
insb
jecxz
loop
cmp
push
divb
aad
mov
pop
imul
pop
jmp
cmpsb
dec
sbbl
loopne
js
test
bound
dec
pusha
dec
cltd
out
sub
push
and
aad
in
sbb
aas
xchg
fisubrs
mov
jl
lock
mov
push
data16
clc
adc
outsb
cltd
dec
or
mov
sub
leave
lret
movsl
cmc
test
pop
sbb
pop
mov
push
pop
les
aad
fdivrl
loopne
sbb
cltd
mov
inc
dec
gs
es
rorl
xchg
jne
or
or
pop
xor
sti
lock
xchg
test
push
sbb
and
pop
jo
int
xor
jecxz
mov
pop
xchg
aaa
hlt
ljmp
sbb
push
sbbl
xchg
cmc
xchg
add
mov
loop
jecxz
gs
mov
pop
sbb
jb
outsb
insb
inc
and
stos
lahf
cmpsb
sbb
les
fistl
xchg
push
fsubrs
mov
xlat
add
xor
dec
cmp
scas
jnp
lret
mov
loopne
jne
fcompp
insb
orb
mov
ss
sbb
jmp
or
and
loop
push
push
addr16
mov
fisttpll
or
cmp
decb
int3
lcall
mov
inc
add
jmp
or
idiv
bound
cmc
lds
lcall
xchg
sbb
mov
lods
and
pushf
or
jge
cmp
pop
in
mov
push
nop
adc
mov
dec
pop
ljmp
packuswb
cmp
je
cmp
bound
inc
xchg
jge
shlb
jae
nop
adc
cmp
add
lret
jae
movsb
call
mov
inc
adc
fsubrl
adc
sub
mull
fs
inc
sbb
cltd
jb
mov
sub
xchg
xor
mov
jecxz
filds
and
shlb
inc
or
dec
insl
gs
xchg
mov
jp
sub
call
xor
xchg
je
inc
fldl
stc
jecxz
fisubrl
jmp
adcb
jne
in
dec
inc
cmpb
cmc
in
and
repz
cmp
mov
int3
subb
jg
loope
icebp
jmp
dec
pop
and
fs
sub
sarb
xor
inc
jae
sbb
pushf
and
icebp
xchg
dec
js
into
cmp
cmp
test
loopne
lcall
ret
aad
sbb
and
addr16
push
jbe
push
je
xchg
jno
cmc
fmulp
mov
ret
xlat
lock
call
jg
pop
sar
dec
add
mov
push
es
int3
mov
cmp
fwait
sbb
push
cmp
cmp
ljmp
cmp
lret
xor
cmp
mov
push
cwtl
sbb
cmc
imul
stos
adc
add
lock
xchg
stc
push
mov
ja
lock
inc
add
fmuls
jne
jp
fcomps
or
xchg
stc
stos
fs
lock
sub
jmp
pop
and
out
mov
lods
or
dec
dec
test
or
shlb
inc
enter
or
mov
inc
jecxz
mov
lahf
sub
pop
add
xchg
repz
or
stc
sbb
leave
loop
lret
lret
iret
sub
push
lea
lods
dec
push
push
adc
mov
pop
ficoms
xchg
fldcw
jbe
and
fstl
push
or
mov
int3
push
or
in
adc
mov
mov
mov
mov
jg
sub
jge
push
stos
lcall
in
xchg
out
fwait
lret
or
jl
push
les
xchg
ds
adcb
test
adc
xorb
mov
scas
sbb
push
stos
pushf
sub
mov
or
inc
push
movsl
fwait
dec
lea
or
out
and
pop
lods
pop
sub
fdivs
mov
cltd
mov
dec
and
shrl
jne
add
adc
daa
into
pop
xor
stos
add
xor
cmp
fsubl
das
cltd
push
push
das
arpl
out
or
gs
mov
dec
xor
pushf
hlt
mov
push
cmpsl
jl
jecxz
dec
mov
fmull
div
mov
sbb
stos
xlat
and
and
adc
cltd
decl
stos
jg
or
cs
ret
sysret
mov
loopne
in
xchg
lods
cmp
in
and
fs
push
and
xor
lret
lds
cmp
jbe
jmp
jnp
sub
xchg
fdivs
jnp
mov
xorl
add
inc
aad
xlat
or
ds
fstpl
pop
dec
repz
mov
mov
xchg
mov
ret
or
cmp
dec
mov
frstor
add
out
push
sbb
fadds
dec
mov
add
addr16
mov
sub
xor
push
scas
xchg
xlat
test
sbb
insb
cmp
fdiv
cvtdq2ps
mov
mov
dec
dec
jnp
xchg
imul
loopne
push
mov
jae
enter
loop
testb
dec
in
adc
mov
lods
mov
push
or
stos
push
lods
psubw
dec
ljmp
jbe
jmp
int
mov
or
adcl
adc
xor
cwtl
or
sub
inc
inc
lods
or
stos
and
mov
push
loope
sarb
jne
icebp
std
jne
test
mov
in
jne
mov
sbb
enter
cmp
fs
jbe
faddp
dec
and
cmc
fiadds
jns
into
clc
lds
cmp
push
push
inc
push
dec
sti
out
shll
or
mov
jmp
fwait
out
dec
clc
notl
mov
xor
add
call
rolb
pop
loope
cmp
sahf
repz
and
fstps
sahf
bound
push
push
lds
xchg
sub
xchg
lcall
cmp
pop
divl
test
add
into
inc
movsb
popf
sub
sbb
xchg
pop
repnz
ds
and
mov
mov
dec
in
mov
sub
pop
cmpb
lret
ja
out
xchg
push
fstp
ficompl
fxch
push
push
loopne
dec
or
add
test
clc
ret
dec
inc
fistl
mov
adc
outsb
popf
push
xchg
cmc
push
imul
xchg
cmp
push
ficoms
push
pop
inc
fisttpl
add
data16
setb
imul
xchg
fcomp
lods
jno
in
sub
sbb
xchg
scas
sbb
mov
mov
cmp
leave
lock
xchg
fimuls
subb
andl
outsb
das
rcr
sbb
inc
icebp
mov
loope
repz
rclb
cmp
aaa
push
mov
out
cmpsl
cmpsb
cwtl
xchg
adc
call
fdivrs
push
jno
cltd
dec
adc
icebp
fwait
dec
shlb
mov
repnz
cld
jnp
lcall
fistl
movsl
jg
psrlw
push
jae
fsubr
xchg
and
or
loop
cmpsb
addl
push
mov
cmp
inc
xor
or
aad
jp
mov
mov
sbb
mov
rol
movsb
inc
jp
int
pop
das
imul
push
pusha
mov
adc
lret
xchg
mov
mov
dec
test
add
jecxz
cs
leave
scas
cwtl
mov
orl
call
loopne
xchg
je
in
repnz
jbe
inc
inc
ret
popf
lret
popa
fisttpl
sub
gs
hlt
mov
gs
jns
or
std
pop
pop
jne
mov
sub
lahf
mov
xor
pop
xchg
jns
fmull
fdivs
std
push
loop
dec
or
jb
pop
mov
pop
into
mov
bound
mov
add
jle
xor
test
cltd
or
mov
mov
sahf
je
xchg
inc
popf
dec
and
andb
inc
cltd
ss
and
cmp
lret
rolb
jmp
xchg
lahf
mov
pushf
gs
cmp
xor
xchg
dec
lea
inc
mov
mov
maxps
in
pop
divb
mov
push
test
and
xor
mov
xchg
cmp
xchg
and
fiadds
dec
lds
ret
or
xor
addb
jg
mov
xor
adc
sub
rcll
jae
or
cmp
adcb
cli
mov
add
inc
xor
fldt
fs
mov
test
push
repz
mov
ds
call
pop
out
daa
stos
or
into
out
push
hlt
and
stos
fcmovnbe
fmull
mov
loope
cmpsl
lcall
jnp
incl
xor
bswap
jge
mov
out
imul
bound
push
testb
and
loopne
cli
xchg
inc
test
outsl
lds
shlb
push
sub
and
imul
movsb
out
hlt
scas
xchg
lds
testb
test
out
mov
inc
cwtl
frstor
sbb
add
popa
testb
and
aad
and
pop
sbb
xor
mov
repnz
mov
inc
jb
lahf
mov
pop
inc
sbbl
jbe
shll
scas
stos
mov
sbb
loop
jb
addr16
inc
notb
or
ds
daa
dec
std
mov
add
pusha
xor
xor
and
cwtl
ljmp
dec
mov
nop
add
mov
mov
fidivrs
test
sbb
cltd
jl
adc
orl
fdivr
sbb
push
add
fbstp
shlb
jp
lret
sbbb
pop
call
sti
sbb
inc
dec
and
dec
xchg
in
push
mov
jle
mov
inc
push
jecxz
or
mov
and
fldt
push
pop
outsl
jnp
mov
inc
xor
fwait
cmp
xchg
pop
xlat
cmp
mov
test
mov
lds
pop
aam
xor
stos
add
mov
daa
adc
jg
rcrb
std
add
cli
dec
jmp
stos
mov
adc
stos
jae
addr16
xor
das
inc
test
int3
out
clc
mov
pop
adc
ljmp
cld
pop
mov
pop
loop
sbb
and
call
mov
push
sbb
mov
cli
call
jo
jne
or
and
pop
stos
lock
std
push
xor
adc
lock
lea
jbe
inc
xor
arpl
xor
xchg
fiaddl
loope
push
mov
dec
adc
xor
vmwrite
cwtl
insb
xchg
les
mov
loop
mov
adc
repz
pop
push
cli
dec
ror
das
jecxz
popa
sbb
movsb
dec
lret
sub
mov
mov
jge
hlt
insl
or
jl
test
shlb
jo
mov
jg
scas
scas
insl
or
push
add
dec
xor
or
fistpl
nop
in
mov
testb
sbb
into
sbb
out
mov
adc
popa
inc
adc
repz
pop
xchg
dec
jle
loopne
cwtl
dec
jae
jnp
stos
push
pop
aas
push
mov
ret
pop
sbbl
or
imul
mov
lret
scas
jo
insb
mov
push
mov
adc
xor
mov
xor
stc
adc
faddl
pop
fcoms
mov
cmp
xlat
mov
mov
sahf
inc
pop
shrl
inc
rcr
mov
dec
pop
mov
mov
sbb
lcall
outsb
mov
lea
scas
test
xchg
cmp
fcomps
int3
leave
loope
ss
mov
aam
mov
or
inc
xchg
mov
sbb
sar
in
sahf
ret
int3
jne
mov
sahf
pushf
add
mov
lcall
dec
iret
and
cmp
pop
test
pop
movsl
lahf
fs
mov
pop
test
aam
hlt
movsb
loope
or
test
or
pop
pop
mov
mov
rolb
sbb
mov
mov
mov
aad
mov
mov
sbb
lea
mov
xchg
lcall
rcrb
jle
dec
pop
mov
outsl
jae
leave
rorb
int
sbb
sub
sub
mov
pop
shlb
cmc
jl
xchg
sbb
mov
arpl
inc
cmc
outsb
jge
cli
or
mov
nop
xchg
mov
mov
mov
rolb
or
sub
out
aaa
popf
arpl
push
imul
aaa
rorb
push
stos
mov
lea
into
divl
push
mov
outsb
xchg
mov
ret
arpl
pop
cmp
add
push
loopne
push
lock
rolb
sub
jl
mov
jo
pop
cltd
cmp
mov
movsl
sti
mov
adc
ds
imul
frstor
dec
out
mov
ficoms
dec
es
sahf
mov
scas
fdivrs
popa
stc
sti
jg
fwait
subl
fsubr
sbb
add
jns
sarl
jae
in
ja
loopne
and
adc
mov
in
xchg
lods
sbb
sub
or
xlat
xchg
int
andl
inc
out
adc
sub
dec
add
mov
dec
jbe
repnz
je
sub
mov
inc
xor
or
and
sets
in
xchg
imul
in
scas
mov
push
dec
push
inc
repz
movsl
movsb
out
cmp
loope,pn
ret
xchg
dec
mov
push
popf
cmp
addr16
adc
insb
sbb
or
lahf
cwtl
arpl
xchg
mov
idiv
xchg
lods
jbe
and
in
cmp
mov
pop
sar
mov
mov
dec
and
dec
mov
pusha
sar
cmc
xor
and
test
xor
out
xor
les
popf
lret
xor
sub
movsb
jl
shrl
aaa
dec
push
decl
mov
insb
lea
mov
in
out
push
sbb
sbb
outsl
sbb
rcl
rorb
out
pop
jg
addl
add
inc
mov
iret
movsb
cmpsl
test
cmp
addr16
fimull
push
int3
inc
ficoml
stc
popf
adc
xor
int
inc
test
mov
shll
iret
jne
inc
ljmp
mov
push
jae
imul
nop
out
in
push
das
xchg
pop
add
ljmp
je
sahf
add
xchg
sub
faddp
mov
inc
mov
dec
dec
int3
mov
fsubrs
lods
xchg
gs
mov
dec
xchg
mov
adc
mov
inc
shlb
push
inc
mov
fidivrl
movsl
jmp
into
fninit
jl
adc
mov
mov
iret
gs
leave
outsl
notl
mov
push
out
pop
sbb
jmp
rcl
push
or
sub
sbb
mov
cmp
xorb
aas
push
ss
push
out
into
mov
inc
sbb
or
fbstp
rclb
in
push
inc
popa
sbb
out
push
mov
rcr
jmp
rorl
lds
imul
sarb
cmp
pushf
sub
mov
leave
cmc
mov
aam
std
and
movsb
push
int
cltd
pop
cmpsl
int3
and
sub
mov
cmpsb
xor
xlat
out
test
movsl
test
cmpsb
mov
fsubr
mov
pop
or
mov
stos
orb
inc
add
or
xchg
xchg
sahf
xor
adc
imul
pop
stos
mov
jae
aam
jl
repz
pop
mov
faddl
rcll
fcomi
pop
out
stos
int
pop
imul
jle
jnp
stc
adc
cmpsl
loope
call
pop
outsb
test
xor
push
ljmp
daa
js
add
adc
gs
xchg
not
push
xchg
int3
push
in
cmp
sub
inc
aad
imul
push
in
fldl
jb
int
adc
ds
pop
adc
add
inc
jmp
sti
insl
xchg
gs
xchg
nop
test
or
pop
xchg
mov
ljmp
xor
movsb
mov
xchg
mov
push
push
or
dec
xchg
sti
jnp
mov
jl
dec
lock
out
or
cmp
cltd
jl
inc
sahf
xchg
das
insl
aad
negl
xchg
add
nop
inc
jg
cltd
xchg
dec
and
push
sub
dec
ret
jecxz
mov
std
les
mov
leave
iret
add
inc
cltd
lea
rol
mov
inc
mov
push
aaa
aaa
push
fiadds
scas
iret
mov
pop
popa
mov
std
ja
jge
pop
mov
mov
rclb
mov
push
push
ds
sub
fcmovbe
sahf
addr16
es
daa
loop
dec
mov
rolb
adc
xor
mov
or
lods
mov
popf
pop
jl
add
adc
xor
sbb
loope
jno
in
mov
pop
scas
cld
hlt
cmpl
fdivs
fstpt
cmp
adc
or
in
das
mov
dec
in
movsl
adcl
cs
adc
lret
popf
and
push
xor
sti
test
and
cmp
adc
mov
dec
sub
lock
dec
cmp
cmp
aas
pop
fwait
mov
pop
andl
fadd
xor
test
sub
sbb
mov
xchg
out
cmp
fisubrl
xchg
mov
aaa
inc
enter
in
mov
daa
add
push
std
dec
mov
sbb
push
addr16
fwait
pop
or
mov
sub
adc
jge
enter
jecxz
dec
adc
pusha
stc
dec
adc
lahf
or
jno
sbb
inc
lahf
inc
mov
mov
cmpsl
inc
inc
sub
xchg
cmp
out
push
sar
int
les
jnp
outsl
aam
les
mov
dec
or
cmp
test
add
sub
test
dec
adc
adc
sub
jle
xor
out
out
test
loopne
enter
sub
daa
aad
repz
movsb
mov
insl
mov
jg
test
cld
pop
xchg
imull
and
adc
mov
test
sub
ret
dec
xchg
mov
ret
cld
test
sub
mov
insb
push
sub
shl
imul
jmp
xchg
test
lcall
dec
mov
xlat
test
mov
aad
aad
sub
mov
dec
daa
cmp
mov
pop
rdpmc
xor
sbb
sbb
cli
mov
cmp
xor
xor
push
fnsave
pushf
inc
and
ret
push
sbb
cmp
xor
loopne
dec
call
enter
cmpsl
xor
int
add
cld
sbb
sahf
adc
nop
outsl
push
mov
andl
sbb
insl
mov
cs
mov
xchg
pop
inc
in
pop
or
jl
dec
fsubrs
xor
cmp
rcr
sarl
and
sub
popa
sti
std
xor
popa
test
or
push
mov
mov
aaa
adc
loope
mov
push
sub
jecxz
es
cld
clc
rolb
iret
enter
xchg
out
arpl
xor
or
outsl
outsl
ret
popf
inc
mov
inc
cli
pop
sbb
jbe
or
or
inc
or
mov
pushf
inc
inc
outsb
add
push
xchg
add
inc
lock
xchg
mov
mov
jne
call
out
rorb
jno
mov
dec
mov
push
pop
in
xlat
or
sbb
pop
push
orb
xchg
push
jmp
and
push
mov
add
inc
lods
pop
dec
lret
cmovl
leave
push
and
sub
pop
mov
sarb
into
cmp
out
mov
outsl
cmp
xor
jb
mov
mov
sub
dec
lahf
testl
cmp
mov
shr
xchg
xor
out
adc
or
in
xchg
dec
ret
adc
fdivs
out
inc
leave
lret
xor
fiadds
adc
enter
pop
aad
fildll
out
xorl
test
and
pop
inc
lahf
out
or
mov
in
xchg
mov
mov
jl
xlat
flds
add
jae
mov
lds
std
out
xchg
sub
cmpsl
inc
jp
dec
pop
outsb
mov
ss
lahf
add
sub
mov
xchg
adc
cld
dec
sbb
adc
push
jb
mov
iret
or
bound
fidivrl
adcb
xor
les
adc
push
cs
push
inc
insl
insl
inc
aaa
js
mov
push
push
enter
stc
jmp
mov
fisttpll
out
and
xchg
sub
sahf
adc
jae,pt
or
jecxz
fdivs
mov
in
cltd
sbb
push
pop
jo
movsb
je
lock
loop
lret
flds
mov
stos
stos
cmove
pop
cmp
jmp
out
mov
inc
and
sbb
ljmp
inc
and
push
adc
addr16
mov
inc
push
pop
fnstsw
sub
push
cmc
mov
mov
push
gs
rcl
sbb
adc
stos
jge
jae
xchg
adcl
pop
jae
jns
arpl
jae
nop
push
lret
in
rcll
jb
push
pop
lret
pop
out
add
cmp
mov
es
add
ret
dec
add
pop
rol
sub
jne
jp
enter
pop
leave
scas
aam
ja
mov
mov
inc
sbb
imul
pop
in
cli
cmpsb
dec
cmp
insl
xor
test
mov
mov
fnsave
js
cmp
sub
test
mov
shrb
daa
mov
push
pop
fwait
bound
cmp
push
sahf
scas
dec
loop
add
sbb
mov
pop
js
pop
gs
insb
xchg
add
sahf
lea
fdivr
mov
fmuls
je
sbb
push
in
idivl
mov
mov
dec
call
movsl
cmc
outsl
xor
popf
xor
jp
inc
push
sub
popf
push
mov
push
mov
pushf
insl
mov
mov
popl
fs
or
dec
out
xor
aas
sahf
jb
aas
pop
xor
xchg
push
lret
sbb
in
pop
xor
mov
ja
lods
rclb
dec
jmp
or
jno
sbb
inc
movsb
out
mov
es
outsl
sbb
xchg
adc
movsl
inc
test
or
cmp
inc
adc
stc
or
or
jmp
add
add
inc
sub
daa
mov
sti
push
mov
sbb
and
push
repz
sub
jns
cli
mov
jp
push
cmp
pop
jp
add
rclb
jle
lahf
pop
push
xchg
mov
pop
outsl
int3
mov
mov
nop
mov
lahf
shrb
adc
jb
insl
xchg
aad
in
and
mov
xchg
xchg
mov
mov
pushf
fwait
pop
xor
popa
jns
repnz
inc
popa
scas
jg
cltd
enter
mov
adc
add
dec
jbe
enter
pop
ret
rcrl
mov
rolb
adc
xlat
scas
mov
mov
lds
mov
cld
sti
sub
pop
in
xchg
xchg
ret
cmp
subl
xchg
push
es
or
stos
and
jbe
test
popl
loopne
sub
call
movsb
jno
fisubrs
outsl
test
xchg
int
pop
in
int3
hlt
jns
cltd
sub
sub
test
inc
and
into
pop
inc
or
and
mov
inc
mov
jl
popf
insb
jecxz
rcll
pop
push
loope
aas
popf
addr16
rcrl
add
mov
je
jns
add
mov
jae
and
pusha
adc
arpl
lods
popa
maxps
jmp
adc
mov
fcmovne
sti
lea
out
pop
cmp
pop
sbb
jo
mov
adc
ja
js
dec
xor
cmp
out
scas
pop
in
inc
inc
imul
sbb
mov
stos
mov
inc
ljmp
lahf
push
and
mov
dec
outsl
loop
dec
sub
vmread
gs
data16
mov
or
mov
ffreep
insl
sbb
outsl
inc
lods
add
cmp
test
xlat
test
jo
and
shlb
das
imul
push
movsl
mov
or
xchg
fwait
dec
arpl
repz
inc
inc
sub
dec
push
push
scas
ss
push
xchg
ja
inc
inc
repnz
fdivp
and
push
bound
sbb
jg
xchg
ret
jo
divl
adc
shrb
and
push
mov
xchg
xchg
mov
sbb
test
mov
add
test
nop
mov
mov
fisubrs
xchg
or
jecxz
dec
les
xchg
loop
dec
popa
xchg
shrb
fisubrs
scas
mov
add
xor
lret
xor
adc
push
cli
fwait
or
popf
xchg
push
inc
lock
adc
mov
jb
aad
push
mov
js
in
aaa
movsl
mov
cmp
test
xor
xchg
adc
out
adc
mov
shll
test
mov
aaa
mov
jne
push
ficoml
outsb
adc
dec
jbe
mov
adc
xchg
lods
hlt
test
dec
push
outsb
insb
adc
ret
cmpl
xor
insb
inc
imul
sub
pop
sub
imul
mov
xchg
push
inc
sub
sarl
jne
inc
pop
jae
push
or
test
int3
shlb
add
rcll
lods
call
test
fsubrs
adc
pop
ror
add
in
mov
repz
cmpsl
lds
xlat
add
jg
cmp
xor
cmc
mov
mov
iret
adc
add
mov
fisttpll
ds
jo
dec
or
inc
cli
xchg
mov
pop
aad
jnp
jg
leave
test
push
stos
ja
mov
inc
hlt
xchg
push
insl
fchs
fcmovb
cwtl
enter
and
fisubl
dec
scas
push
cmpsl
and
fisttps
sub
jne
xlat
push
pop
pop
out
imul
pushf
xor
std
mov
jle
call
sub
dec
mulps
nop
imul
jno
push
call
imul
dec
leave
xchg
icebp
out
call
mov
in
in
and
inc
fldln2
enter
jae
mov
shrl
test
inc
and
int3
cwtl
in
xchg
fsub
fiaddl
test
inc
adcl
xchg
and
jo
fldcw
sub
mov
push
pop
cmp
sub
fistps
in
xchg
dec
xchg
ret
icebp
inc
jge
outsb
dec
sub
jb
xlat
xlat
test
push
xor
lds
inc
mov
or
fstpl
mov
aam
inc
shr
sbb
sarb
add
movsb
leave
jbe
mov
shlb
inc
leave
packsswb
lahf
test
out
jg
add
ret
xor
sti
outsb
test
sbb
es
dec
and
out
les
or
movq
push
ficoms
pop
pop
and
jae
pop
jmp
mov
inc
sbb
fisubs
aad
push
pop
xor
or
fsts
xchg
adc
mov
aam
fwait
sbb
psraw
int3
lods
testb
push
xlat
dec
jp
cwtl
out
mov
dec
mov
xchg
xchg
add
pop
xor
fsts
out
pop
xchg
jg
negb
test
je
xor
shrl
jge
insb
cmp
aad
bnd
and
sbb
push
dec
popa
pop
mov
pop
outsb
sbb
dec
fnsave
std
stos
mov
arpl
inc
mov
sysexit
or
dec
sbb
xor
outsl
rcl
bound
adc
repz
movsl
fdivp
pop
dec
sbb
sbb
add
cs
nop
xchg
stos
sbb
push
lds
outsb
and
xchg
into
mov
es
xor
xor
call
pop
mov
or
jnp
sub
push
repnz
xor
aad
xchg
les
popf
mov
push
iret
lea
pop
xchg
mov
outsb
js
jb
xchg
loope
sub
int3
mov
mov
lods
cmp
and
mov
xchg
jmp
xor
mov
mov
jns
loopne
lock
outsb
shl
mov
adc
pushf
xor
adc
jp
negl
cmp
test
lea
out
mov
loopne
mov
test
jl
mov
jae
and
push
test
lret
and
daa
inc
les
mov
mov
mov
test
insl
repnz
cld
loopne
fildl
xlat
xor
pop
mov
imul
and
add
mov
rcr
xchg
fmull
mov
sub
or
add
mov
push
icebp
xchg
pushf
ret
aam
stos
cmc
mov
outsl
inc
pushf
insl
ljmp
pusha
mov
in
push
or
push
jge
pop
test
mov
dec
mov
fsub
mov
mov
cmp
lds
push
out
cmc
mov
call
fld
mov
popf
mov
adcb
data16
sbb
cltd
push
cli
fnstcw
dec
jae
bound
scas
or
pusha
out
outsb
push
and
mov
dec
mov
stos
pop
ret
lret
ljmp
xchg
xor
in
mov
mov
cltd
and
push
out
mov
ret
sbb
mov
sbb
mov
fidivs
scas
js
pop
mov
imul
lahf
dec
fsubs
popa
nop
je
and
mov
push
rcrl
adc
lock
add
int3
lods
scas
shrl
sub
or
ja
insb
lods
pop
adc
out
inc
or
mov
mov
pop
adc
les
push
mov
icebp
and
dec
leave
test
mov
sarl
repnz
adcl
scas
inc
add
repnz
push
jnp
stos
pop
sub
lock
jmp
jle
stos
cli
pop
xlat
pop
xchg
rorl
rcrl
sub
xchg
lods
sbb
aas
sub
cli
push
int
std
xchg
rcrl
mov
inc
pop
cmpsl
in
dec
icebp
mov
push
leave
xchg
mov
jo
icebp
shll
mov
aas
xor
mov
fs
movl
pusha
push
stos
xor
aam
pusha
fistpll
sub
cwtl
jl
repnz
mov
mov
aad
jno
nop
stos
cmpsl
loop
fisubs
lret
cmpsl
pop
cwtl
call
int3
iret
lds
jg
cwtl
add
repnz
bswap
mov
leave
cmp
scas
outsb
push
xchg
leave
jne
pop
mov
cld
push
out
mov
push
popf
mov
cmpsb
push
pxor
fs
adc
aaa
icebp
mov
jo
or
pop
or
lahf
call
mov
dec
cmpsb
in
xor
pop
and
js
xor
test
push
and
lods
sub
cmpsb
das
sahf
std
in
testl
jne
lret
and
notl
icebp
inc
insl
cmp
jae
mov
aaa
jo
adc
divl
xorps
shrl
mov
inc
mov
push
bound
cld
lcall
jbe
jmp
lock
icebp
lods
hlt
and
adc
mov
pop
das
icebp
repnz
xchg
daa
dec
inc
pusha
inc
pushl
xchg
pop
outsl
or
mov
punpcklbw
xchg
mov
add
test
fdivs
fsubrs
cmpsl
mov
sbbl
sub
das
or
pop
sbb
jle
lahf
popf
mov
cltd
dec
stos
and
add
stos
mov
lods
pop
shrl
mov
cld
xchg
sbb
sbb
cmp
add
js
imul
xchg
sti
cmp
push
inc
adc
test
ret
arpl
xlat
jnp
pushf
cmp
sarb
hlt
ljmp
cli
into
int
popf
dec
stos
aaa
insl
mov
or
push
jnp
flds
fbstp
arpl
add
outsl
sbb
inc
data16
dec
jg
xor
outsb
ficomps
cmc
out
testb
jno
lods
ror
or
jbe
dec
mulb
adc
stc
add
pop
dec
sbb
mov
mov
in
adc
adc
iret
mov
push
fcmove
test
jbe
xchg
push
push
mov
das
dec
jb
cmpsl
insb
out
xchg
outsl
inc
sahf
mov
pop
ret
shl
jp
push
les
icebp
push
loopne
outsl
push
cmp
pusha
inc
repz
mov
add
xor
inc
dec
inc
popf
jmp
adc
ficoms
out
xor
push
cmp
pusha
mov
popf
cli
inc
in
mov
test
hlt
cltd
cmp
jo
dec
mov
cmp
xchg
xchg
shll
jp
xor
jae
aas
jo
adc
sub
out
lods
mov
test
jnp
int3
aaa
jno
addb
daa
jle
pop
jle
xorl
jmp
clc
sahf
test
push
sub
xlat
jbe
fs
push
mov
xchg
push
xchg
test
pop
pop
enter
pop
fists
test
in
out
cmp
shll
lods
or
sub
cld
add
and
jecxz
test
cmp
pushf
into
fpatan
adc
out
lock
jo
into
ror
jg
mov
cmpsb
fbstp
adc
or
out
mov
lea
fisubrs
mov
int3
lea
inc
pop
jge
inc
popf
popa
mov
jle
out
xor
jo
dec
loopne
in
imul
popf
dec
mov
mov
cmp
jb
xchg
xor
add
int3
stos
push
stos
adc
je
push
enter
pop
or
pop
jno
sub
jb
lods
imul
xchg
mov
rorl
and
pop
stos
ljmp
jno
in
push
mov
aam
cmp
or
adc
andb
insb
push
fildll
shlb
push
imul
mov
loopne
pop
cmp
jg
ljmp
mov
or
add
pop
pushf
dec
nop
lods
mov
in
loopne
aam
hlt
dec
pop
adcl
lahf
out
jecxz
jb
pop
jmp
cs
and
and
outsb
ficompl
xchg
and
and
mov
sub
fwait
push
cmp
ffree
push
mov
xchg
dec
test
mov
adc
movsb
outsl
cli
js
cld
pop
test
lret
inc
rclb
push
dec
cli
push
repnz
xchg
cmpsl
push
xchg
mov
and
and
ret
sbb
incb
and
or
push
rorb
dec
out
cvtps2pd
push
or
int
cld
jno
fdivs
iret
adc
xor
mov
add
iret
sbb
clc
into
dec
les
ret
fisttps
stos
sbb
mov
add
jecxz
sbbl
dec
int
lods
mov
cmpsb
mov
pop
in
sbb
test
and
cmpsl
push
imul
aaa
mov
in
inc
imul
es
mov
push
in
mov
orb
movsl
push
or
lret
jg
arpl
lea
shrl
int
sbb
sub
mov
pop
xchg
push
push
aad
inc
enter
jb
mov
cwtl
dec
mov
js
seto
cwtl
incl
pop
mov
pusha
pop
lods
lds
push
leave
mov
testb
sbbl
dec
adc
movl
imul
cmp
rorb
sub
popa
test
jmp
pusha
add
add
mov
enter
mov
and
loopne
mov
hlt
push
pop
fs
push
dec
jb
fwait
cld
roll
xchg
mov
cmpsb
mov
icebp
fmuls
add
or
xor
cmpsb
mov
xchg
pop
mov
mov
dec
inc
cld
ret
push
jnp
pop
and
cmp
mov
aad
xchg
popa
fsub
outsb
mov
lods
stc
shlb
orb
ljmp
push
arpl
and
xor
add
pop
or
sub
aad
sbb
pop
add
or
dec
inc
jl
cwtl
arpl
sub
fiadds
push
in
mov
fldenv
into
fisubl
mov
xor
and
mov
and
fstps
adc
push
lea
jo
lret
push
aad
mov
push
out
ret
lock
in
loope
hlt
mov
in
pop
gs
or
sbb
jge
data16
or
pushf
aad
mov
push
pushf
rolb
add
lods
std
fcoml
and
adc
lret
loop
pop
xchg
mov
mov
das
sub
push
fstpl
jecxz
sbb
repnz
push
pusha
leave
adc
popa
loope
inc
mov
dec
push
and
hlt
shl
inc
or
xchg
or
cmp
sub
repnz
add
testb
scas
cmc
add
shll
dec
pop
xor
fistl
test
dec
rorb
mov
push
lahf
imul
and
push
sub
and
hlt
jnp
nop
call
dec
fmull
in
sbb
adc
push
dec
cmpsl
jnp
and
popa
cmp
sti
inc
pop
mov
rorl
les
cmp
add
add
into
cld
mov
stos
out
or
add
andb
mov
hlt
nop
mov
imul
fwait
aas
dec
xchg
cltd
es
xlat
inc
mov
pop
inc
inc
mov
cld
lcall
add
mov
mov
call
sub
cmc
adc
sbb
jne
icebp
lea
mov
sbb
jns
movsl
fadd
addb
fdiv
daa
dec
add
adcl
pop
cmp
adc
inc
push
aad
cltd
jle
jmp
roll
add
adc
pop
cmp
cwtl
jno
mov
icebp
cmpsl
fldenv
cmp
out
cmp
lods
adc
push
ret
mov
jae
es
add
or
sub
xchg
mov
lods
sbb
sub
stos
adc
nop
repz
adc
or
push
mov
and
sbb
mov
push
sbb
jnp
pop
cmp
mov
int
cli
ret
ds
mov
xchg
lock
adc
iret
scas
and
pop
jb
addl
fs
loop
push
call
adc
scas
cmp
cmp
mov
out
int
nop
jne
adc
push
mov
movl
fs
inc
cmp
pop
psrld
or
inc
shrb
xor
mov
sbb
xchg
out
mov
push
sub
iret
mov
data16
cmpsb
adc
sbb
fcomps
sahf
xchg
decl
xor
sbb
adc
addr16
loope
enter
dec
push
dec
mov
xor
mov
rorl
mov
and
xchg
les
push
loopne
pop
xchg
cmp
shr
adc
xor
inc
ds
imul
cmp
mov
jmp
out
call
inc
jp
ja
addr16
std
mov
fwait
ret
rorb
repnz
add
movsl
lock
and
nop
out
sub
bound
cmp
xchg
js
pop
xchg
in
movsb
push
into
add
clc
sbb
sub
push
mov
fucomi
enter
add
mov
data16
and
xchg
stos
adc
hlt
jle
rorb
dec
incb
pop
pop
in
dec
sbb
jnp
dec
icebp
into
paddsw
ficomps
sbbb
add
out
cmp
ficoms
adc
testb
ret
or
repnz
or
add
pop
mov
shl
mov
cmp
popa
cmp
gs
mov
push
mov
sub
sbb
aas
dec
jne
lds
push
ds
mov
mov
xor
mov
in
pop
mov
lcall
loop
or
hlt
lret
add
mov
loopne
mov
xchg
push
add
lahf
jmp
or
mov
dec
lock
dec
pushf
jmp
sub
fistps
call
in
or
or
and
cltd
pop
iret
cs
fildl
jbe
aam
pop
sbb
cwtl
faddl
dec
sbb
mov
and
adc
sbb
sbb
gs
xchg
in
orb
sbb
dec
std
das
inc
ljmp
lea
jb
xchg
int
pop
adc
dec
fwait
int3
lcall
mov
dec
sbb
loope
fcomps
adc
sub
adc
je
mov
mov
mov
push
lret
loopne
pop
les
xchg
jle
adc
mov
in
repz
jb
ret
mov
lret
repnz
add
subl
lret
popa
loopne
pop
lcall
mov
gs
sub
ds
jo
mov
sub
mov
mov
outsb
mov
stos
pop
dec
in
adc
loope
pop
add
adc
or
xchg
xchg
out
scas
mov
roll
xchg
mov
jp
lret
fcmovnu
hlt
xchg
nop
stos
inc
push
iret
cld
sbb
inc
in
pop
push
lods
in
loope
sbb
subb
mov
push
movsb
loope
and
xchg
fistpl
stos
gs
outsl
pop
rcl
push
inc
fadds
mov
ret
xchg
in
ja
adc
push
fldenv
loope
pop
mov
int
dec
rorl
mov
adc
psllq
inc
pop
sub
movsl
pop
mov
adc
int
int3
iret
rorl
mov
pop
int
mov
sbb
popf
out
mov
cld
stc
call
addr16
das
or
push
push
add
jmp
mov
enter
bound
push
lahf
xchg
test
xor
ss
mov
dec
dec
fisubrl
pop
divb
aaa
xchg
ret
xchg
fnstsw
and
insl
js
cmp
jp
sbb
stos
int3
push
cmpsb
mov
enter
mov
std
mov
and
fisubl
dec
enter
push
hlt
lcall
aam
pop
jmp
adc
loope
lock
push
addr16
mov
jge
mov
mov
stos
rcr
sbb
sarb
lds
shlb
movsl
xchg
test
mov
in
nop
sbb
test
mov
add
inc
dec
cs
lds
mov
cmpsb
xor
loope
jnp
adc
movntps
imul
xor
test
ficomps
lcall
andb
inc
fdivl
push
inc
nop
or
test
inc
push
cwtl
push
dec
lds
sar
fs
mov
xchg
ja
adc
and
pop
mov
or
jmp
xchg
movsl
jns
dec
pop
cmp
xchg
mov
sub
jo
sub
inc
pop
push
xchg
mov
popf
pop
mov
sbbl
inc
and
sub
mov
loop
xchg
sti
adc
aad
clc
and
and
xchg
or
push
push
jbe
popa
cmp
xor
mov
and
jno
insb
ds
dec
jg
mov
jle
int3
cmp
or
adc
xlat
aaa
cmp
mov
lcall
xchg
ljmp
movsb
mov
mov
pop
mov
add
mov
cli
add
cmp
adc
jae
mov
jnp
jecxz
lret
lret
in
in
jge
rcrb
dec
pop
xchg
scas
lea
xchg
inc
inc
popf
push
repnz
jg
rcll
sub
fldcw
mov
mov
out
rcr
pop
cmp
fnsave
pop
mov
bound
jne
sbbb
push
les
jb
adc
adc
and
inc
mov
push
pop
decb
mov
pusha
xor
data16
sbb
enter
sti
cs
sbb
pusha
dec
in
add
repnz
rclb
xor
push
mov
or
mov
mov
les
in
movsb
icebp
cli
pusha
adc
push
fldcw
add
imul
sbb
popa
sbb
inc
inc
and
dec
rorb
xor
repnz
iret
mov
xchg
hlt
ror
orl
mov
lret
repnz
and
int3
not
addr16
xchg
sbb
mul
cmp
push
aaa
bound
popa
or
mov
add
lods
lods
adc
mov
fadd
mov
inc
inc
lcall
jge
push
adc
xchg
xchg
fdivs
mov
and
jb
inc
icebp
sbb
adc
xchg
mov
int
cmpl
push
test
pusha
push
xor
sbb
fsubl
insl
mov
fs
jge
and
cmp
or
push
jbe
lret
out
inc
or
xlat
and
cmpsb
sar
pop
imul
test
mov
stos
fistpll
rcr
dec
hlt
scas
jg
pusha
add
and
in
push
xchg
pop
hlt
lahf
lock
adc
push
iret
and
cld
sbb
mov
push
dec
push
push
inc
ror
pop
push
mov
int
jmp
int
mov
stos
aam
jo
stos
scas
sbb
fldenv
mov
clc
add
mov
and
in
pop
adc
das
pop
inc
sbb
movsb
mov
in
imul
popa
stc
icebp
xor
push
dec
movsl
push
arpl
inc
push
in
lock
xor
incl
je
sbb
pop
imul
sub
jp
mov
push
outsb
xchg
dec
int
xchg
or
repz
lret
and
sbb
scas
and
sub
cmpsl
adc
adc
jo
xchg
outsl
push
nop
mov
mov
out
mov
in
xor
jge
and
xor
insl
ljmp
test
repz
dec
js
ret
mull
jg
adc
lock
and
std
and
dec
xlat
dec
inc
in
dec
mov
aas
jp
js
jo
stc
jle
das
sbbl
add
aaa
mov
lcall
lret
jne
out
add
pop
sti
jnp,pt
mov
insl
inc
jp
adc
mov
movl
mov
push
and
add
sbb
cmc
jl
aam
into
enter
lock
sbb
mov
push
sahf
jp
out
or
daa
xchg
rol
jb
adc
push
in
mov
or
in
add
add
lret
pusha
jnp
or
and
mov
adc
xor
xlat
adc
pop
into
std
fildl
aaa
sarb
outsl
xchg
or
pushf
mov
sbb
div
dec
imul
and
out
out
mov
mov
pop
cltd
push
stos
pop
xchg
mov
mov
das
imul
xchg
and
ret
insb
xor
mov
pop
out
int
jge,pt
shl
popl
fiaddl
mov
mov
icebp
mov
aaa
sbb
dec
popa
xchg
jne
ret
sti
out
inc
or
push
xlat
icebp
cld
push
testl
pop
pop
dec
je
rcrb
nop
xchg
insb
and
mov
shr
jmp
xor
adcl
jo
jl
mov
test
and
decb
scas
sar
iret
inc
and
and
pop
lret
ror
push
pop
xlat
out
pop
clc
cli
and
ret
xor
mov
jo
enter
std
inc
imulb
lret
dec
pop
add
push
adc
test
loopne
xor
sbb
subl
outsb
fcmove
popl
sub
push
pop
movsl
xchg
xchg
std
fldenv
lods
sub
cmpsb
ds
imul
into
gs
pop
jecxz
mov
xchg
sbb
mov
pop
cmpsb
jl
insb
dec
push
data16
shlb
lahf
daa
popa
mov
ja
fistpl
jno
push
dec
cmp
orb
cld
mov
inc
cmpsb
dec
add
push
bound
sti
andb
sbb
popa
mov
daa
gs
les
jnp
xchg
clc
cmpsb
roll
xchg
pusha
in
icebp
sahf
lcall
mov
mov
mov
push
into
test
ljmp
xor
sti
push
imul
data16
stos
mov
or
push
dec
or
pop
pop
rcrl
out
sub
std
mov
into
xchg
clc
int
nop
mov
inc
mov
add
cli
pop
mull
ljmp
enter
fisttps
dec
inc
loope
jae
xchg
add
aas
sbb
xor
cmpsb
mov
cmpsl
aad
push
subl
mov
or
data16
mov
and
insb
jmp
mov
xchg
repnz
movsl
sti
outsl
push
xchg
not
js
dec
jo
shrl
sub
int3
sbb
pop
xor
mov
jmp
pusha
ja
ja
and
loope
outsl
mov
mov
jo
jo
jne
lods
inc
shrb
jb
aam
or
push
xchg
inc
out
jbe
in
insb
loop
rorl
xchg
addr16
jge
jns
sarb
fadds
into
push
stos
pusha
ja
jno
dec
in
jno
push
jb
mov
and
inc
jns
mov
pop
lahf
popa
mov
jle
add
shr
push
out
mov
fistps
dec
jae
or
sub
leave
int3
clc
mov
mov
sahf
pushf
adcl
mov
jb
pop
in
lret
cmp
fsubs
shlb
std
cltd
add
xchg
mov
jmp
or
add
mov
dec
jb
jl
sahf
xchg
inc
mov
std
out
fs
mov
push
vmovaps
idiv
jmp
out
xor
ja
mov
or
mov
xor
jno
fstl
jg
add
out
outsb
movsl
mov
xor
sbb
jge
push
mov
sub
loop
sub
loopne
cli
dec
cmpsb
cmp
rcrl
shrb
sub
sbb
pusha
fnsave
je
xchg
cs
sbb
sub
iret
and
sbb
nop
mov
sub
mov
xor
aas
ret
and
dec
aam
xor
into
dec
xchg
cmp
nop
rorb
sub
lea
pop
mov
pop
mov
dec
mov
sbb
jne
pop
xor
mov
stos
push
inc
push
sbb
or
mov
fcomps
sub
xor
cmpsb
fildll
push
or
xchg
leave
ljmp
bnd
pop
in
xor
sbb
adc
addr16
gs
pop
rcll
nop
add
sub
adc
fs
nop
lods
cmpsl
shr
jno
or
xchg
push
push
push
cld
mov
inc
repnz
cmp
subb
fs
arpl
std
xchg
scas
leave
push
xchg
mov
add
xor
inc
sub
lret
jge
iret
mov
or
cld
sbb
lret
mov
jle
add
ds
xor
sub
inc
test
rcl
loopne
inc
mov
cltd
pop
or
jge
dec
inc
in
xlat
add
loopne
sbb
sbb
push
outsl
push
in
ds
and
js
and
xchg
mov
jbe
fsubrs
xchg
loop
pop
push
sbb
inc
not
out
sbb
pop
sar
jne
pop
ficompl
pop
subb
adc
into
pop
call
or
lcall
lea
data16
sbb
das
loop
add
sar
ds
divb
xchg
idiv
mov
int3
or
xlat
nop
mov
cmp
data16
sti
daa
lock
insb
out
mov
xchg
pop
pop
rcrl
in
ds
lds
sbb
int3
pop
xor
lcall
es
jle
or
xlat
jmp
movsb
jl
pop
cmpsb
outsl
push
ljmp
adc
incb
fistpll
pop
sub
add
cmpsb
sub
xchg
fstps
mov
fwait
push
mov
sbb
lahf
pop
mov
mov
jmp
sbb
rclb
sbb
ja
repz
xlat
mov
mov
xchg
inc
pop
xor
fyl2x
jle
ficompl
ficoms
xor
shlb
sbb
inc
push
aam
stos
push
loop
cmp
inc
dec
sbb
add
insl
aam
inc
and
gs
push
mov
lods
adc
sub
mov
xchg
xchg
push
inc
or
pop
pop
inc
xor
sbb
rcrb
loope
inc
pop
dec
fistl
xorl
dec
mov
das
sarb
test
xchg
test
loope
popa
mov
sbb
sbb
push
les
dec
clc
xor
sbb
aam
xchg
sub
ret
jne
push
jmp
mov
es
daa
xchg
mov
sbb
lods
pop
cmc
pop
addr16
fidivrs
mov
dec
aad
sbb
loope
je
ffreep
xor
pushf
push
int
inc
jns
sbb
loop
cs
sub
mov
jns
cmp
clc
movsl
add
sub
inc
and
mov
push
xchg
inc
dec
mov
push
lret
lea
push
lahf
call
and
daa
mov
mov
push
xchg
mov
xchg
lods
out
and
sub
test
daa
aas
jge
push
mov
dec
fcmovbe
roll
pop
hlt
test
dec
cmpsl
dec
sub
imul
in
jno
ss
mov
inc
mov
aaa
jbe
stos
sub
pop
xor
ret
xchg
sti
lock
adc
add
ret
and
lods
push
jne
push
lret
loope
rclb
xchg
adc
mov
jmp
sbb
xor
xorl
js
add
adc
ljmp
outsl
pop
test
fs
pop
out
stos
jo
inc
sub
push
xor
add
dec
sub
ds
mov
sub
xor
aam
mov
aas
out
int
sbb
mov
dec
imull
mov
ljmp
sbb
lock
test
xchg
pop
lcall
andl
into
rcrl
adc
push
pop
or
jns
add
add
dec
jne
inc
lods
inc
pusha
xchg
stc
fs
out
push
mov
jge
subl
es
push
mov
sbb
loope
pusha
jo
sbb
popf
ret
jae
push
outsb
sbb
pop
xor
sbb
cmpsb
jnp
popf
sub
popl
jo
pop
xadd
in
xchg
addr16
add
ja
push
add
add
adc
jge
rorl
mov
dec
cltd
mov
enter
ds
test
inc
rcrl
mov
dec
sbb
xor
cmpsl
pop
xchg
jmp
stc
sbb
inc
loopne
lock
mov
rclb
mov
mov
jecxz
lahf
test
sahf
shll
dec
mov
movsl
adc
jae
shll
mov
xor
mov
inc
hlt
xchg
sub
push
inc
mov
in
sahf
enter
subl
or
repz
jne
outsl
cmp
mov
cmp
jle
jl
hlt
test
inc
inc
xchg
push
aas
jle
mov
leave
lea
jb
outsb
pop
xchg
out
sbb
jno
and
pop
push
or
push
inc
cmpsb
and
bnd
call
int3
add
pop
int3
jp
or
cmp
adc
cli
lahf
mov
pop
jb
out
lret
sub
bound
jns
repz
stos
hlt
fnstcw
popf
ds
inc
pop
ja
push
xor
loopne
jge
pxor
mov
and
mov
ljmp
sbb
pop
add
mov
loop
add
stos
adc
push
xchg
pop
mov
in
bound
pop
push
adc
es
adc
pop
cwtl
mov
daa
jae
lahf
pop
mov
out
gs
gs
add
jp
add
mov
pop
adc
popa
mov
xchg
mov
fmull
mov
add
mov
xlat
mov
mov
push
pop
ljmp
daa
xchg
dec
push
mov
lock
subb
push
lea
dec
xor
ret
xor
repz
pop
adc
sbb
mov
mov
cld
sti
mov
cli
xchg
loop
adc
in
push
or
loopne
ret
jo
jmp
aad
add
cltd
je
js
cmp
cmp
pop
push
jp
inc
lcall
outsb
sbb
push
dec
in
pusha
push
jae
cmp
mov
inc
jmp
xlat
mov
mov
out
mov
and
and
pop
push
xchg
mov
sbb
loopew
enter
insl
jns
out
push
inc
jb
in
adc
pushl
xor
add
loop
pusha
mov
sahf
iret
lahf
sub
cs
xchg
add
sbb
push
outsl
sbb
cmp
dec
mov
mov
add
scas
std
lret
mov
in
orl
test
aas
popf
dec
or
mov
ljmp
xor
popf
lds
inc
sbb
iret
xchg
mov
xchg
jl
mov
insl
loopne
jbe
and
aaa
scas
mov
jo
loope
addl
jmp
pop
cmp
jp
jnp
cli
movsb
in
xchg
data16
scas
test
scas
dec
aam
add
decl
xor
adc
jge
mov
inc
lock
dec
out
jmp
int3
daa
or
sbb
mov
enter
lock
fidivs
rcrb
pop
in
xchg
loopne
mov
in
int3
sbb
arpl
mov
mov
jo
lret
aaa
gs
dec
push
adcb
rolb
mov
hlt
scas
or
and
push
incl
xchg
rsm
mov
dec
mov
int3
adc
jb
pop
mov
add
push
mov
inc
dec
xchg
mov
jno
inc
or
push
cmpsb
push
sahf
add
stc
pop
push
pop
mov
mov
loope
stos
cltd
jnp
fwait
dec
mov
dec
fstpt
outsb
nop
inc
mov
and
inc
mov
nop
push
xchg
push
lcall
dec
cmpsl
int
cld
mov
xchg
jl
inc
pop
shl
lods
inc
aam
dec
fmuls
sub
shr
out
rcrb
stos
arpl
iret
int
in
ja
lcall
xor
imul
mov
and
mulb
or
push
or
xchg
mov
hlt
inc
pushl
out
pause
shll
divl
mov
cmp
mov
nop
loop
lds
xchg
clc
or
scas
testl
pop
cmp
jle
adc
es
pop
loopne
call
bound
ljmp
out
rorl
inc
in
pop
xor
mov
sbb
mov
xchg
test
sti
stos
pop
mov
add
jae
sbb
in
cmp
int3
sbb
dec
jb
push
jmp
jns
mov
sbb
cmpsl
sahf
mov
mull
decl
jb
dec
fildl
int
test
push
mov
push
dec
loopne
pop
xchg
mov
dec
xchg
das
bndldx
aas
mov
and
sbb
adc
sti
jb
jae
cmp
push
stc
insb
nop
repz
sar
cmp
lods
dec
push
or
test
jbe
mov
dec
mov
push
push
fistpl
subl
pop
push
clc
ficoml
or
fcomip
hlt
nop
mov
dec
adc
out
mov
jno
or
cmp
out
sahf
sbb
sbb
xchg
dec
or
sbb
or
sahf
mov
das
push
jae
pop
test
int
sahf
icebp
mov
in
dec
mov
jne
jbe
xchg
lock
push
in
or
sub
jmp
lods
jne
aas
jg
inc
fidivl
sbb
fimull
push
cli
out
mov
xchg
movsl
lods
fsubs
cmp
mov
cwtl
imul
scas
int
bound
popf
clc
movsl
lds
mov
lahf
pop
ljmp
bound
mov
jbe
mov
cmpsl
arpl
xor
dec
out
daa
mov
popf
in
push
nop
mov
inc
mov
dec
ljmp
xorb
idivl
mov
fidivrl
gs
sub
fisttpl
jae
into
into
mov
subl
xchg
outsl
mov
repz
pop
das
dec
sbb
add
push
fwait
ss
in
mov
std
pop
xchg
xchg
add
shrl
cmc
mov
cwtl
imul
hlt
xchg
mov
loop
nop
insl
xor
lea
push
mov
dec
inc
int
push
arpl
jae
and
inc
lret
and
or
cmp
fisttps
xor
or
sub
adc
daa
mov
xor
fs
int
out
lds
inc
cli
jne
cmpsb
jae
push
sub
cli
test
jne
out
in
mov
add
repz
popa
dec
movsl
movsl
jp
fisttpl
hlt
and
je
jae
aas
push
and
and
sub
idivl
push
aaa
iret
jp
dec
push
dec
cmp
mov
loop
pop
push
push
push
cli
sub
jecxz
outsb
test
cmp
scas
aas
push
fldcw
add
cmpsb
mov
es
pushf
lea
add
outsl
xor
es
inc
and
lea
jae
inc
mov
cmc
push
imul
jg
adc
movsl
inc
jecxz
pushf
adcb
aas
outsb
movsl
dec
xor
ljmp
dec
xchg
fbstp
jg,pn
in
xor
xor
push
pop
fs
pop
dec
mov
loope
aam
xor
bound
add
sbb
mov
ja
rcrb
sbb
xor
pushf
and
nop
add
push
mov
ljmp
pop
mov
in
addr16
das
inc
test
nop
not
jo
push
xchg
or
popf
xchg
paddusb
sbb
jae
mov
stc
insl
fdivs
or
cmp
pop
loop
or
hlt
inc
sub
sbb
lret
xchg
test
stos
push
pop
popf
inc
rcll
mov
aam
sub
xor
xor
aas
or
cmp
adc
mov
in
mov
lret
jge
adc
pop
add
icebp
addr16
mov
lahf
mul
les
sbb
pop
shr
addr16
sbb
dec
and
aad
sub
incl
pushl
lcall
sti
push
xor
sbb
insb
sub
sbb
pop
outsl
mov
je
incl
xor
pop
add
test
in
iret
aad
aaa
push
nop
imul
cld
fbld
xor
sti
mov
mov
pop
jbe
pop
js
xor
jae
dec
jno
jnp
sarb
test
pop
int
mov
inc
cltd
mov
vpcmpeqd
shrb
add
pop
nop
push
int3
stos
push
repz
cmp
leave
dec
adc
adc
xor
cmpsb
fs
push
xchg
aas
sarb
inc
mov
mov
adc
cmc
mov
sbb
mov
lcall
sbb
xor
sub
sub
pop
dec
stc
repz
fucomip
repz
xchg
outsl
add
rcll
lahf
cmp
rcll
fcomps
shll
cmp
or
push
xchg
movsb
mov
cld
lock
inc
int3
xchg
test
out
subl
test
enter
jp
fiaddl
stc
daa
dec
jg
xor
lret
mov
pop
xor
push
test
xor
hlt
call
push
inc
xchg
pop
and
push
mov
push
bound
dec
mov
fidivrs
movsl
std
scas
pop
loope
xchg
pusha
addr16
rcrb
fcmovb
lods
mov
inc
or
mov
xor
cmpsb
nop
aaa
lret
sbb
call
push
call
push
add
add
jne
ljmp
adc
add
jb
pop
mov
movsb
xchg
push
mov
mov
inc
sub
and
mov
cltd
xchg
pop
push
fbstp
sbb
inc
out
jae
out
xchg
fnsave
adc
xor
xor
mov
pop
sbb
incb
sub
jmp
fidivrs
adc
or
in
rcll
inc
fs
and
fstpl
cmpsb
out
lahf
cmpsb
xchg
jle
popf
loopne
mov
mov
mov
sarb
sub
adc
lea
scas
xchg
loop
push
inc
or
je
pop
sbb
fcmove
cmp
push
and
cmpsb
jge
std
jae
loop
sub
ljmp
out
jne
sbb
or
and
out
cld
dec
xchg
fisubs
add
push
bound
cmp
iret
lahf
repz
aad
inc
push
cmp
add
and
fimuls
faddl
mov
movsl
incb
dec
pop
adc
aam
cmpsb
push
pop
mov
fs
shr
fidivs
mov
outsb
negl
iret
scas
push
icebp
and
sahf
mov
fidivs
ljmp
mov
mov
mov
mov
push
dec
or
cli
shrl
stos
dec
xchg
roll
adc
aaa
sbb
xor
cmp
arpl
dec
out
mov
jmp
xor
push
mov
outsl
cmp
inc
lds
shll
adc
test
mov
test
lock
jnp
xchg
outsb
add
inc
test
arpl
ljmp
insb
cli
mov
cmpsl
pop
push
scas
sbb
cmp
jae
sahf
cmp
fsubl
or
jp
push
push
daa
js
stc
push
fnstcw
jp
stos
inc
mov
jecxz
push
cmp
pop
ja
loop
das
mov
pop
add
sub
jbe
scas
cmp
aam
push
inc
vpcmpeqb
lds
imul
negl
fldl
fimull
pop
add
icebp
add
and
pop
pop
jle
inc
dec
hlt
cmpsb
popa
jmp
jae
add
sbb
pop
mov
push
ljmp
mov
mov
in
jo
decb
in
pop
inc
bound
cmp
outsl
push
pop
dec
or
add
lcall
jno
jmp
push
out
xchg
jge
ds
fistpl
inc
sbb
adc
jg
push
or
or
pushf
push
cmp
dec
inc
inc
repnz
ds
imul
jge
cmc
cltd
in
dec
rclb
or
stc
mov
cmpsb
faddp
data16
xchg
out
daa
loop
into
cli
mov
xchg
aaa
cmp
pop
movsl
das
out
stc
cs
xor
sbb
sbb
leave
or
dec
or
sub
sub
ret
jecxz
add
cs
out
xchg
aaa
pop
dec
push
mov
sahf
pop
sbb
mov
cmp
fwait
sub
dec
mov
out
adc
aad
mov
hlt
negl
xchg
aam
pop
xlat
push
and
push
and
clc
mov
shlb
loope
pop
jo
fildl
mov
outsb
xchg
mov
adcb
dec
ja
nop
in
jns
mov
or
adc
xor
xlat
push
lock
dec
dec
push
mov
mov
into
jne
fnstenv
xchg
sbb
mov
aad
test
es
cmpsl
push
cld
fdivr
call
pop
xchg
jecxz
pop
das
inc
xchg
leave
xor
int
aas
xorl
xor
cmp
push
outsl
xchg
mov
push
sbb
icebp
movsb
lahf
xchg
aad
cld
xchg
sub
push
call
push
mov
ss
mov
sub
sbb
enter
and
mov
adc
push
cld
mov
andl
cmp
mov
and
cmp
mov
mov
notb
push
gs
scas
cltd
mov
push
dec
pop
daa
iret
mov
sub
test
popf
nop
pop
inc
add
pushf
sti
xchg
pop
test
xchg
fdivrs
repz
pop
push
ja
mov
sti
shrb
dec
cmp
fwait
push
push
movsb
inc
add
sbb
decl
jl
in
jo
fldcw
cs
sahf
imul
fcompl
out
into
aam
es
add
icebp
adc
mov
sub
adc
or
icebp
xlat
fisubs
popf
add
lret
mov
or
sahf
sti
ljmp
or
pop
sbb
mov
movsb
jo
cmp
or
lods
push
mull
dec
push
dec
arpl
xchg
cmpsl
ss
push
cmp
xor
mov
xor
call
push
out
mov
out
repz
pop
pop
fst
xor
lds
in
loop
and
out
es
mov
cmc
stc
daa
mov
rclb
sub
ss
push
dec
inc
cli
int3
mov
lahf
pop
cmp
adcl
mov
cmp
sub
cli
ret
inc
pop
jae
sti
jle
gs
or
inc
or
scas
sub
pop
dec
jbe
mov
adc
addr16
cltd
jmp
jle
xor
shl
adcl
cmp
rcrl
pop
push
mov
movsb
inc
iret
and
out
pop
popa
xchg
aad
movsb
xor
lea
push
jmp
adc
adc
lcall
js
std
in
mov
mov
mov
mov
and
push
push
sub
pop
addb
test
adcl
push
dec
movsb
rol
mov
je
push
mov
lods
jmp
or
fsubr
mov
lret
jmp
movsl
iret
xor
pop
ret
sti
stos
xor
push
mov
xchg
mov
xchg
lahf
sub
out
inc
dec
xor
leave
data16
shl
icebp
fnstcw
push
icebp
pop
sub
fiaddl
fmuls
hlt
xchg
sub
sbb
insl
push
and
leave
mov
xchg
mov
xlat
scas
fmul
js
dec
ret
push
cmp
rorb
stos
inc
xor
adc
movsb
ss
mov
xor
loop
int
xchg
pushf
mov
mov
dec
enter
xchg
jae
nop
int
fxch
jne
addr16
jne
push
nop
ljmp
repz
xor
lds
cmp
xchg
fs
iret
inc
push
cmp
rclb
fidivs
mov
pop
daa
lcall
pop
dec
push
push
lods
movsl
cwtl
arpl
rclb
cmc
ret
jl
and
js
iret
add
mov
psrad
test
scas
dec
xchg
cmpsl
push
into
orl
pop
mov
and
mov
lret
iret
xlat
andl
imul
dec
int
mov
dec
lds
enter
pop
mov
xor
mov
pop
js
lcall
dec
mov
jb
pop
cltd
jbe
rcrl
addb
pop
mov
sbb
pop
sbb
shl
outsb
mov
pop
int
sbb
cmp
aaa
push
es
aam
mov
mov
in
cmc
xchg
jle
adc
add
fstp
or
and
push
inc
cmp
shl
pop
flds
mov
fldl
mov
pop
and
jne
sbb
mov
and
sbb
mov
pop
xchg
xchg
into
mov
faddp
mov
cmp
jne
push
inc
adcb
mov
xor
and
in
call
repz
call
outsb
inc
aam
dec
adc
outsl
add
adc
jmp
imul
lahf
pop
inc
pop
pop
mov
scas
sarb
ror
orl
mov
or
cwtl
add
ja
fwait
insb
mov
repnz
lods
push
push
sub
sbb
dec
lea
push
xchg
mov
lret
out
sbb
out
popf
mov
mov
es
inc
adc
jbe
mov
jle
test
xchg
and
je
dec
sub
sub
filds
shlb
stos
cmp
in
and
ret
or
push
jmp
scas
pushf
aad
addr16
rcl
and
xor
mov
fs
push
sbb
fldenv
add
adc
add
pop
cmp
rcrb
nop
push
fiaddl
pop
cs
imul
repz
lea
int3
sbb
dec
push
mov
jp,pn
mov
pop
gs
aas
cmp
jg
pop
cmp
and
stos
shrl
repz
nop
inc
sub
pop
cltd
cmpsb
push
jae
lcall
pop
rorl
dec
das
mov
xor
cmpsb
lea
pop
pop
imull
int3
dec
fbstp
inc
ret
fwait
pop
lock
rorb
inc
stos
sahf
fadd
jecxz
mov
fs
lcall
add
fmull
jne
mov
aaa
int3
mov
sbb
pop
push
shrd
push
inc
repz
sub
jo
imul
pop
mov
in
lcall
mov
jl
lea
adc
add
xchg
dec
shr
cld
dec
jg
je
dec
imul
lahf
jo
aam
in
xchg
or
out
xchg
mov
mov
inc
cli
pushf
lods
jmp
sub
sbb
mov
adc
adc
push
addl
fdivrs
les
aad
loopne
xorl
in
add
jne
adc
push
jmp
mov
adc
jb
pop
mov
xchg
scas
cwtl
dec
and
inc
icebp
lds
movsl
mov
filds
mov
sbb
rolb
push
cmc
pop
jl
outsl
xchg
iret
stc
out
repz
adc
mov
pop
in
dec
dec
sbb
dec
sahf
daa
sub
into
push
cmpsl
mov
xlat
shll
xchg
pop
js
mov
or
iret
aaa
gs
lods
pushf
arpl
xlat
pusha
and
arpl
les
inc
jne,pt
imul
lret
pop
pop
rcrb
and
cli
pop
mov
add
or
and
xchg
insb
inc
out
imul
loop
mov
jle
shll
in
outsl
mov
jl
repz
push
push
sbb
inc
mov
fdivl
mov
aaa
arpl
mov
or
push
std
les
fildll
lret
xor
nop
js
xlat
out
inc
es
or
inc
xchg
sbb
in
rcrb
or
aad
push
cltd
mov
jae
mov
bound
test
and
and
test
insl
int
mov
outsb
call
loope
test
scas
call
inc
and
fisttpl
lds
test
mov
jnp
mov
fisttpl
ljmp
mov
sbb
adc
adc
push
daa
or
cmp
and
out
outsl
adc
arpl
testl
les
mov
jmp
sub
and
aaa
add
adc
sbb
xor
pop
push
mov
arpl
mov
push
shlb
test
xor
jle
dec
xor
aad
sbb
in
mov
sub
pop
cmp
or
mov
add
mov
or
cmpsb
mov
popf
fcmovnbe
xchg
sti
je
push
add
call
adc
stc
movsb
push
rcrl
push
cltd
out
sbb
mov
ss
cmp
loope
cmp
mov
pop
pop
int3
xchg
push
mov
and
inc
std
je
scas
not
pop
mov
shr
cmc
ja
ds
mov
mov
mov
fimull
jmp
in
jge
adc
fwait
jbe
int3
sahf
popf
dec
push
dec
or
mov
or
push
push
bound
xchg
add
and
lods
xchg
pop
iret
sbb
add
xorb
andb
push
daa
lods
jo
adc
or
sub
mov
popa
cmp
cli
jle
scas
sub
fisttps
sub
rorb
rol
mov
out
sar
dec
hlt
movsl
call
enter
aam
cmc
stos
mov
shrb
xlat
lock
push
pop
pop
enter
jne
jl
adc
or
mov
repz
mov
push
mov
jle
data16
add
xchg
mov
aaa
in
push
testb
sbb
mov
dec
data16
mov
sub
jle
sarl
and
test
push
dec
adcb
es
xchg
pop
xor
or
sub
das
int
xor
xchg
dec
ljmp
or
mov
flds
insl
dec
nop
repz
lods
pop
push
fwait
test
adc
xchg
mov
loop
stc
dec
cmp
fbld
jecxz
aam
imul
push
add
xchg
aas
xor
lret
cmpsl
xchg
cwtl
hlt
push
sub
loopne
jg
dec
and
loope
cld
into
mov
test
xor
or
pop
sub
lods
sti
mov
or
fwait
pop
into
outsb
dec
mov
test
test
icebp
cld
lret
stc
xchg
sbb
dec
popf
and
mov
in
sub
push
cmp
imul
dec
pop
inc
xchg
inc
adc
jns
fidivl
mov
xlat
adc
das
popa
out
mov
xorl
jbe
adc
int3
mov
push
jg
adcl
adc
lock
shlb
test
push
scas
jb
mov
mov
cld
mov
or
enter
es
push
stc
test
adc
dec
adc
pop
mov
adc
mov
test
lds
aam
sub
in
or
mov
jl
hlt
mov
jbe
or
push
xor
loope
mov
cmp
xor
jnp
jg
pop
xchg
cmp
sub
mov
repnz
test
mov
fdivl
sub
movsl
dec
mov
loope
and
fldcw
jbe
mov
loop
mov
mov
test
out
arpl
divl
movsb
dec
mov
lcall
scas
jl
inc
xchg
jbe
mov
dec
add
fs
mov
push
cmc
sub
xor
and
addr16
xlat
or
movsl
jle
sbb
mov
push
pop
mov
insl
cs
dec
xchg
sub
jl
out
out
push
outsb
out
cmc
xchg
lods
adc
hlt
inc
out
xor
push
mov
je
mov
or
pop
nop
mov
ret
popf
insb
mov
les
out
movsl
lcall
or
inc
imul
pop
adc
xor
or
stos
dec
icebp
pop
cmpsb
jp
ret
cltd
outsl
shrl
lods
dec
adc
push
cmpsb
pushf
adc
pusha
push
mov
lds
movsl
inc
dec
mov
stos
imul
insb
add
cmc
dec
jle
push
xchg
jbe
pop
sub
sub
idivb
dec
bound
xor
call
push
pop
or
sub
push
icebp
int
popa
add
pop
adc
mov
add
mov
and
dec
out
testl
lldt
jno
adc
xorb
pushf
mov
out
imul
es
sub
ja
push
nop
int
mov
mov
retw
lret
xchg
outsb
jnp
int3
cmp
push
jecxz
adc
out
pop
fildl
in
aad
jmp
icebp
lods
repnz
loopne
dec
jno
jo
mov
pop
in
lret
mov
xor
test
sbb
push
js
mov
arpl
add
pop
call
jecxz
cltd
daa
mov
mov
inc
iret
or
leave
xor
notl
add
cwtl
dec
mov
not
inc
shll
and
mov
scas
mov
pop
jge
icebp
in
jns
cmp
xchg
in
and
cltd
pop
stc
out
add
jo
jae
dec
push
loope
cwtl
and
mov
add
imul
adc
arpl
cmc
addl
sahf
xchg
sti
sub
sub
popf
dec
sbb
addr16
push
jb
int3
or
mov
inc
mov
sub
cmp
cmc
pop
cmp
daa
stos
mov
adc
inc
lods
insb
adc
in
iret
mov
jp
call
mov
loopne
stos
sbb
mov
mov
repnz
rolb
cltd
or
xchg
cwtd
outsl
pusha
ja
mov
lods
xchg
clc
mov
inc
fistps
fstl
ja
xor
cmpsl
mov
les
push
in
xchg
daa
add
ss
addr16
pop
div
out
or
push
loop
add
pushf
ds
jecxz
divl
repnz
jb
addr16
mov
nop
mov
out
lock
adc
dec
or
shrl
outsl
iret
mov
dec
mov
xchg
lret
add
lock
test
mov
and
mov
sbb
mov
and
jge
mov
jp
sbb
or
fdivrl
in
ja
out
popf
repnz
outsb
loop
inc
fstps
and
jmp
ja
aaa
cmp
xor
mov
ja
add
mov
or
mov
adc
xchg
dec
push
mov
insl
cli
ss
sbb
push
push
sarl
jb
push
dec
ret
bnd
xchg
mov
sub
sbb
jns
imul
dec
dec
cmpsl
lock
mov
je
push
xor
icebp
dec
xchg
sub
cs
loopne
jno
mov
or
hlt
push
or
mov
add
fbld
shrl
call
enter
rcrb
xchg
bnd
addr16
mov
jmp
xchg
sbb
push
and
pop
sahf
jne
test
adc
cwtl
into
jo
pop
aad
pop
inc
loopne
lds
in
loop
mov
jge
xchg
inc
mov
cmp
fidivl
adc
adc
jnp
fwait
shlb
fmull
cmp
or
sbb
jo
jb
or
mov
adc
lods
push
sti
ss
movsb
insb
cmp
xor
push
push
je
movsb
mov
shl
mov
xor
cmp
xor
mov
sbb
cmpxchg8b
xchg
xchg
sub
in
sti
and
hlt
pop
and
lahf
mov
loopne
movl
scas
mov
fdivr
xchg
nop
xor
je
inc
loop
jmp
std
outsl
gs
push
adc
push
mov
jecxz
push
into
jne
nop
ret
dec
jmp
push
scas
out
addr16
icebp
mov
aaa
movsb
pushf
fs
jbe
inc
adc
add
jmp
out
and
xchg
scas
out
cmpsb
rorl
loope
sub
pop
jp
xchg
ss
inc
add
lods
out
inc
inc
add
mov
push
data16
loopne
push
xor
jb
and
dec
sbb
stos
in
aas
add
mov
stos
xor
sbb
mov
jno
icebp
push
je
clc
jmp
fldenv
mov
or
lret
or
xor
xchg
xchg
xchg
test
imul
pusha
arpl
icebp
adc
push
nop
daa
mov
mov
lods
lahf
mov
jnp
xchg
pop
lcall
out
sti
mov
aas
movsl
ret
mov
xor
or
mov
subl
jl
dec
sbb
scas
mov
inc
sti
add
mov
es
mov
and
movsl
push
das
ret
mov
mov
add
ss
adc
jecxz
push
sbb
push
rcl
movsl
inc
mov
popf
stc
inc
nop
shlb
fldcw
imul
fwait
out
push
and
lods
gs
and
bound
xchg
fistpl
add
push
push
fldl
dec
sbb
add
push
dec
data16
mov
push
jb
dec
mov
jo
and
cmp
add
int3
xchg
or
int
jge
movsb
xorb
push
xchg
rcll
dec
jg
hlt
xor
icebp
jp
int3
xor
push
ljmp
fistpll
jno
inc
std
rcll
lret
popf
adc
aam
idivb
out
push
mov
out
cmp
call
adc
inc
mov
in
mov
pop
sub
xor
push
movsl
mov
ret
xchg
inc
jns
jo
push
scas
add
and
cmp
and
sti
fistps
mov
mov
inc
and
fcoms
in
pop
cmp
insb
dec
mov
icebp
fcompl
jnp
insl
dec
shll
movsl
and
sbb
mov
mov
loopw
fcompl
loope
fdivr
jne
pop
fidivrl
insl
dec
mov
lret
ficompl
sbb
test
mov
fists
lret
xchg
sbb
xchg
fwait
test
mov
xor
sbb
inc
cltd
jp
in
bound
mov
sbb
std
jp
es
dec
pop
loop
cmp
int3
adc
rclb
clc
lret
mov
sbb
ficoml
xchg
inc
sti
adcl
xchg
dec
es
push
aam
movsl
cmp
and
dec
loope
mov
aam
dec
rorb
loope
fsubl
add
add
add
sbb
add
ret
add
add
or
add
add
add
cmp
add
sub
add
sub
add
pusha
add
lcall
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
into
sub
add
sub
add
sub
add
add
add
sub
add
add
add
sub
add
add
pusha
sub
add
sub
add
add
sub
add
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
je
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
sub
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
loop
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
add
insb
insb
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
hlt
add
outsb
jbe
jb
inc
gs
jne
je
outsl
arpl
add
xor
push
imul
xchg
add
popa
jo
jb
popa
je
add
cmp
push
ja
je
push
jb
popa
add
mov
insl
push
jns
je
insl
dec
outsl
arpl
gs
add
lods
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
jge
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
push
push
dec
dec
dec
cs
insb
add
push
imul
stos
add
push
imul
outsl
outsl
imul
add
fs
outsb
jne
outsb
imul
push
push
inc
push
xor
cs
insb
add
mov
pop
pop
jo
pop
arpl
insl
outsl
fs
pop
add
fs
jae
pop
imul
add
arpl
inc
imul
pop
imul
insl
add
add
jae
je
popa
jo
pop
je
jo
add
aad
pop
arpl
je
outsl
insb
data16
add
insl
fs
outsb
add
pop
pop
insw
outsl
fs
sbb
pop
pop
addr16
popa
imul
jle
gs
je
add
pop
gs
je
and
pop
pop
jae
je
jae
jb
popa
je
gs
add
aaa
add
js
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
and
push
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
test
mov
jno
insb
add
add
add
add
add
addl
add
add
add
xor
add
addb
add
add
add
add
mov
dec
add
add
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
sbbl
pop
ds
add
