push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
mov
mov
mov
movl
mov
mov
movl
cmpl
jne
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
movl
movl
movl
movl
mov
mov
movzwl
and
add
mov
movl
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
mov
mov
mov
mov
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
popa
mov
mov
xor
je
ret
mov
add
xor
dec
js
ret
js
pop
pop
pop
mov
pop
ret
int3
add
add
fildl
add
xchg
xor
cltd
xor
mov
xor
fildl
add
out
cmp
ret
ds
in
jae,pt
pop
ds
in
ds
in
ds
in
aas
mov
faddl
add
in
ss
in
inc
xor
in
jl
xor
das
xor
in
dec
xor
in
pop
xor
out
jge
add
add
out
xchg
xor
test
sbb
mov
jne
xor
xchg
out
divl
push
out
or
mov
and
out
xor
out
xor
call
into
xor
call
cli
xor
call
push
xor
sub
xor
outsb
call
mov
xor
fwait
jmp
push
ss
ljmp
add
add
ljmp
xor
sahf
ss
jmp
mov
inc
jmp
shll
xchg
jmp
ss
aaa
aaa
mov
jmp
aaa
ss
outsb
ljmp
sub
std
aaa
mov
jecxz
cmp
jecxz
cmp
add
mov
fildl
add
fildl
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
push
add
mov
mov
bound
mov
add
mov
jb
test
add
mov
jb
test
add
cmpb
insb
pusha
xchg
pusha
outsb
pop
mov
inc
mov
lods
fs
xor
inc
add
scas
jne
push
mov
add
cli
mov
add
mov
outsl
ljmp
je
lods
js
mov
mov
je
fcoms
fs
mov
fiadds
leave
fiadds
loope
inc
add
fiadds
jne
inc
add
inc
add
inc
add
inc
add
mov
inc
popa
mov
gs
scas
add
jns
pusha
fs
arpl
scas
js
add
add
mov
xor
jmp
insl
insb
mov
scas
ja
push
das
fs
mov
add
shrb
das
fs
add
fdivrs
add
xchg
mov
je
mov
outsb
arpl
mov
je
mov
outsb
arpl
mov
popa
insl
mov
add
add
addr16
push
scas
add
jae
dec
mov
jne
pop
cmpsl
add
add
scas
insl
outsl
push
faddl
add
mov
outsb
and
insl
insb
mov
mov
push
out
mov
gs
lods
dec
fsubrl
icebp
add
xor
add
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fildl
jmp
mov
fildl
jmp
std
fildl
popf
rcr
data16
dec
jmp
mov
flds
repnz
fildl
jmp
mov
flds
jmp
push
fildl
jmp
into
fildl
jmp
mov
add
mov
faddl
jmp
out
xlat
add
stos
push
jmp
mov
lret
add
scas
fildl
add
add
fiaddl
add
add
fiaddl
add
flds
add
add
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
flds
add
add
xchg
leave
add
xor
add
mov
xor
add
xor
add
xor
add
inc
add
mov
xor
add
add
mov
xor
add
xor
add
aam
popa
xchg
xchg
add
add
xor
add
xor
add
xor
add
add
gs
bound
mov
xor
add
fucomi
sub
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
add
mov
fildl
jmp
mov
fildl
add
add
xchg
fiadds
add
add
movsb
fiadds
add
add
fiadds
add
add
add
add
add
add
add
add
add
and
add
adc
add
adc
add
add
add
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
sarb
mov
xor
add
shlb
add
mov
add
inc
mov
mov
fisttpl
mov
fcmovnbe
mov
mov
fistl
mov
fcomi
mov
mov
add
mov
fistl
mov
mov
mov
fcmovnbe
mov
mov
fucomi
add
fistpl
mov
fstpt
mov
fcomi
mov
fucomi
add
fildl
scas
stc
fildl
jae
faddl
push
stc
fildl
std
add
add
add
add
fildl
jmp
fildl
cmpl
add
sbb
add
jns
add
fildl
jmp
je
add
mov
fildl
mov
push
fildl
lahf
push
fildl
arpl
add
fildl
dec
outsb
fildl
xor
add
dec
fildl
aad
fildl
out
fildl
out
add
add
fildl
add
dec
add
mov
dec
add
enter
lods
dec
add
mov
add
pop
dec
add
add
add
dec
add
pop
dec
add
dec
dec
add
push
dec
add
mov
add
dec
add
lret
add
push
add
jbe
add
es
add
fmull
add
dec
add
testb
js
add
mov
fmuls
add
push
add
add
add
push
dec
add
stos
push
add
loop
add
mov
lods
mov
mov
push
add
cmp
add
push
mov
mov
push
mov
mov
mov
mov
add
xchg
mov
mov
pop
mov
add
add
jo
add
xor
add
clc
enter
mov
add
repnz
add
fisttpl
lahf
mov
fistl
mov
lahf
mov
fildl
lahf
mov
fistl
sahf
mov
fstpt
sahf
add
add
fisttpl
fldt
mov
popf
mov
fisttpl
sahf
mov
fcomi
popf
mov
fisttpl
mov
mov
fisttpl
fildl
push
pop
fadds
arpl
arpl
inc
pop
fadds
xor
add
sbb
add
sbb
add
add
add
fadds
fwait
sub
add
pop
filds
dec
push
filds
push
dec
filds
pop
inc
filds
addr16
add
xor
add
sub
add
and
add
push
filds
pop
sbb
filds
out
filds
das
aaa
filds
sbb
filds
aas
daa
filds
das
push
filds
cmp
mov
add
jne
nop
jne
add
add
mov
je
add
dec
add
aam
add
mov
add
in
sbb
add
sbb
add
fiadds
add
fiadds
sbbb
add
xchg
fiadds
add
add
push
push
add
xchg
fiadds
add
pop
add
mov
push
add
test
add
push
inc
add
add
add
add
mov
stos
lods
add
add
add
test
mov
aam
add
in
lods
add
cli
lods
add
pusha
lods
add
test
add
mov
add
mov
add
add
add
add
mov
mov
mov
mov
xchg
mov
mov
scas
mov
mov
fcmovne
stos
mov
fstpt
stos
mov
mov
fildl
lods
mov
fstpt
lods
mov
fucomi
lods
mov
fildl
lods
mov
add
mov
fistpl
mov
fistpl
mov
fistpl
lods
mov
fcmovnbe
scas
mov
fldt
and
add
sbb
add
adc
add
imul
adc
pop
faddl
stc
push
faddl
leave
data16
pop
arpl
add
pop
faddl
xchg
push
faddl
jg
faddl
mov
add
and
add
adc
add
or
faddl
cmc
or
faddl
aaa
insb
fildl
fildl
adc
adc
add
dec
fildl
sbb
add
dec
fildl
pop
fildl
icebp
das
fildl
in
fildl
add
dec
add
scas
dec
add
sahf
dec
add
loop
add
mov
lods
dec
add
add
add
add
dec
dec
add
sub
add
dec
add
cmp
add
dec
aas
add
pop
cmp
add
mov
add
lcall
add
inc
add
stos
inc
add
dec
inc
add
push
add
inc
add
inc
add
push
aas
add
mov
dec
add
int3
dec
add
mov
cmp
mov
add
add
cmpb
mov
jo
add
inc
mov
add
add
add
je
add
cmpb
mov
mov
add
cmp
add
cld
mov
mov
aad
add
fdivl
fisttpl
add
pop
mov
lds
mov
pop
xor
mov
fcmovnu
add
pop
jl
mov
pop
pusha
ret
jmp
mov
pop
in
mov
pop
push
ret
add
pop
out
mov
pop
clc
add
fcomi
add
fisttpl
mov
dec
fadds
imul
jne
fadds
ja
fadds
mov
fadds
jge
fadds
jg
fadds
jg
fadds
and
fadds
pop
add
add
jae
add
fadds
jmp
stc
xlat
add
add
add
fadds
sar
add
add
add
xlat
add
xlat
add
xlat
add
xlat
add
mov
fildl
ret
aas
mov
aam
in
add
imul
inc
and
rcl
pop
jae
sbb
push
fwait
rol
sbb
fcompl
lret
das
mov
scas
cltd
mov
sti
mov
daa
aam
inc
out
data16
add
pop
out
and
adc
scas
add
xor
cmp
movsl
inc
xor
dec
jbe
adc
adc
mov
jns
xor
lret
adc
mov
popl
cmc
mov
rclb
pop
add
or
jecxz
cmp
push
lods
adc
orb
adc
mov
aas
sbb
or
shl
and
aas
sub
add
dec
insl
mov
mov
int
sbb
dec
pop
leave
cmp
clc
pop
iret
ja
in
xchg
xor
jnp
sub
mov
fidivrl
mov
sub
ja
xchg
lahf
mov
jge
mov
dec
lods
mov
sub
icebp
and
lods
pop
xchg
add
call
imul
add
add
daa
pop
jno
jmp
ss
mov
adc
jmp
popf
mov
mov
fbstp
jmp
ss
mov
insb
cmpl
call
popf
iret
daa
lahf
jo
ljmp
jmp
jmp
jo
ljmp
stos
mov
sbb
add
add
ljmp
mov
mov
add
push
push
and
cltd
sub
dec
sbb
push
and
add
adc
rcrl
push
in
cmp
cmovge
mov
mov
pop
pusha
ljmp
fcmovnb
sahf
push
push
and
lret
imul
insb
add
add
adc
jmp
dec
arpl
inc
jle
xchg
xchg
ror
dec
push
mov
adc
aaa
push
and
dec
push
add
cmp
add
into
fiaddl
dec
iret
rcl
adc
xor
sarb
xchg
inc
jle
rcll
sbb
xchg
das
and
jne
addr16
rcll
cmp
add
inc
cld
ljmp
rcll
cmp
cld
jmp
add
adc
stos
aas
std
xor
rcll
jp
add
pop
mov
sbb
test
in
rcll
mov
in
mov
mov
add
ljmp
addb
ror
lahf
mov
jge
mov
xchg
jg
sbb
test
push
and
mov
movzwl
int3
push
add
lods
dec
add
fimull
shrl
add
dec
jns
cwtl
sub
lret
fs
mov
hlt
add
mov
fs
mov
fcomi
add
fcmovne
jle,pn
in
add
add
fcmovne
add
add
in
mov
fcmovne
cs
fucomi
add
add
adc
fneni(8087
add
fcmovnu
adc
fneni(8087
add
fldt
cmp
fcomi
add
adc
fisttpl
add
fsubr
add
fisttpl
add
add
fucomi
add
fisttpl
or
add
insl
fildl
jmp
mov
sti
ret
in
jmp
lret
add
rcrl
fld
roll
jmp
mov
add
mov
add
mov
add
fwait
add
sar
fld
fldl
jmp
jecxz
jmp
ret
rolb
mov
add
mov
jmp
ret
ljmp
add
add
mov
jmp
mov
add
mov
add
xchg
add
rorl
add
faddl
add
iret
adc
add
fsubrl
add
iret
jne
in
xor
add
fmull
aam
add
test
add
inc
add
or
xchg
xlat
pop
add
rcrb
add
add
add
add
push
add
add
sub
add
or
add
hlt
or
mov
hlt
or
hlt
or
mov
add
or
hlt
or
mov
and
bound
hlt
or
add
mov
hlt
or
mov
and
pop
mov
hlt
or
mov
add
jp
hlt
or
mov
es
push
hlt
or
mov
fucomi
or
fucomi
or
fcmovnu
add
fucomi
or
fldt
add
add
scas
fucomi
or
call
or
fcmovu
add
fucomi
or
fsubr
or
fucomi
or
call
or
call
or
fucomi
or
fsubr
or
fucomi
or
cld
add
fucomi
or
fucomi
or
add
fucomi
or
mov
jmp
mov
add
add
add
push
add
xchg
add
mov
add
stos
add
ljmp
mov
mov
jmp
mov
aad
jmp
mov
add
mov
add
pop
add
lcall
mov
mov
add
mov
les
jmp
add
add
ret
mov
fstl
add
push
add
mov
adc
or
and
mov
and
dec
add
repz
faddl
add
rcll
add
add
out
sub
in
je
in
xor
aam
lret
add
fmull
movsb
shll
shll
xchg
shrb
add
inc
xchg
shr
add
add
add
add
add
push
add
add
hlt
or
mov
hlt
or
hlt
or
mov
hlt
or
mov
and
add
hlt
or
mov
add
and
hlt
or
mov
add
mov
hlt
or
hlt
or
mov
hlt
or
mov
hlt
or
hlt
or
mov
hlt
or
hlt
or
mov
add
fucomi
or
fucomi
or
fcmovnu
add
fucomi
or
fucomi
or
call
or
call
or
fcmovnu
rcr
or
fldt
add
fucomi
or
fcmovu
add
fucomi
or
fsubr
or
fucomi
or
call
or
fsubr
or
fsubr
or
fucomi
or
faddl
jmp
mov
add
mov
jl
jmp
mov
add
mov
add
insb
add
mov
add
mov
add
int3
add
dec
add
mov
add
mov
add
stos
add
mov
add
mov
add
fcmovnu
add
mov
jmp
mov
add
mov
jnp
jmp
mov
add
fildl
jmp
mov
add
mov
add
xchg
std
add
rcrb
add
add
add
add
cmp
sarb
push
sarb
add
add
shrb
adc
sub
adc
mov
and
or
and
mov
adc
dec
add
lock
push
add
iret
adc
add
cld
sub
in
jne
aam
xor
add
out
add
add
add
add
add
jmp
mov
add
sbb
add
cltd
mov
add
jl
add
cmp
add
fnstcw
add
insb
mov
add
mov
mov
add
dec
mov
adc
add
add
adc
add
mov
add
jb
add
xor
adc
or
add
and
fucomi
or
fucomi
or
fucomi
or
fdivr
mov
fsubr
or
fucomi
or
cld
fucomi
or
fucomi
or
fcmovnu
cld
iret
fucomi
or
fucomi
or
call
fucomi
or
fucomi
or
call
cld
mov
fucomi
or
fldt
cld
fucomi
or
call
or
fucomi
or
faddl
jmp
movl
jmp
mov
add
movl
add
mov
add
mov
add
push
add
push
jle
jmp
add
add
mov
add
xor
add
mov
add
mov
add
ss
jmp
add
mov
add
testb
icebp
clc
std
jmp
mov
add
pop
add
fadds
jmp
stos
add
mov
in
add
and
movsb
mull
add
add
loop
xchg
in
add
add
add
add
cmp
push
hlt
js
push
hlt
cmp
and
rolb
adc
hlt
push
add
mov
and
or
adc
mov
adc
dec
add
div
add
push
add
repz
hlt
repz
xlat
in
add
repz
mov
add
mov
adc
or
mov
add
stos
mov
add
test
add
ljmp
cli
pop
mov
add
lcall
cli
jl
add
cmp
add
fidivrl
add
insb
mov
add
mov
mov
add
dec
mov
add
mov
add
push
mov
psubd
mov
fucomi
sti
dec
fucomi
sti
out
fucomi
cli
jnp
mov
call
sti
call
sti
mov
fucomi
sti
fucomi
cli
pop
fcmovnu
or
fucomi
sti
pop
fsubr
sti
mov
call
or
fucomi
sti
fucomi
sti
neg
call
or
add
into
fucomi
sti
xchg
fucomi
sti
out
call
sti
mov
call
sti
xchg
call
or
fucomi
sti
mov
add
int3
add
mov
add
insb
add
mov
add
mov
add
mov
add
cmpsb
jle
jmp
xchg
inc
add
xchg
add
xchg
jmp
ja
add
mov
add
add
add
add
push
add
push
push
add
mov
add
inc
jbe
jmp
aaa
push
add
mov
add
xchg
jmp
pop
ss
push
out
jmp
mulb
add
add
add
or
add
neg
adc
out
fldl
adc
jecxz
add
jecxz
add
jecxz
add
add
and
and
and
loop
or
addb
loop
add
addb
jecxz
add
add
inc
jecxz
add
jecxz
add
jecxz
pusha
add
add
add
loop
add
jecxz
xor
jecxz
add
hlt
or
mov
adc
adc
cli
add
add
add
call
add
lar
mov
add
add
mov
pop
adc
gs
xchg
jg
or
insl
mov
das
test
cmp
jp
ret
cwtl
mov
fcmovu
aad
insl
lods
rclb
inc
mov
pop
dec
mov
add
mov
sub
mov
mov
add
xchg
inc
cmp
mov
add
or
es
pop
sahf
imul
fwait
push
ja
lret
pop
lock
mov
mov
jle
cmc
mov
ret
and
mov
hlt
adc
or
push
loop
mov
mov
mov
adc
or
ds
add
add
push
test
jns
dec
pusha
adc
cwtl
aaa
decl
pop
push
in
inc
add
mov
or
negl
mov
lret
push
pusha
push
into
out
and
mov
loope
fcomps
pop
ffreep
add
add
pop
xchg
xchg
jl
cld
mov
emms
out
adc
fimuls
add
out
pusha
cmp
jo
push
sub
dec
pop
xor
dec
pop
fnstcw
ja
push
ja
jecxz
add
cmpl
jle
add
shll
lods
push
idivb
sbb
int3
test
frstor
mov
cmp
sbb
sbb
cmc
mov
push
mov
out
pop
mov
cld
add
add
frstor
rcr
adc
add
dec
sub
mov
aam
cmp
dec
xor
cmp
aas
or
sarl
outsl
xor
je
lods
hlt
pop
popa
fidivrl
xchg
call
or
dec
or
insl
pop
inc
add
repnz
or
js
or
pop
xchg
push
add
add
jmp
data16
loope
add
int3
fisubrs
mov
shrb
lcall
test
mov
fldcw
mov
jge
xchg
daa
jmp
mov
jmp
scas
push
rolb
and
roll
bound
pcmpgtb
fsubl
pop
test
nop
sub
mov
add
mov
setp
jo
jbe
jmp
cmpsb
mov
nop
aad
int
lds
out
bound
jns
imul
jle
out
in
pop
push
out
fs
dec
xchg
lret
lods
ds
jbe
test
arpl
mov
xchg
jp
jnp
movsl
jae
jne,pn
cmp
xchg
mov
xchg
sahf
cltd
popa
es
xor
xor
add
scas
xor
bt
xchg
test
fstps
sti
fidivl
leave
adc
sub
fidivs
jge
rolb
xor
cmp
dec
xor
xlat
fadds
int
jge
mov
into
pushf
fcoms
xor
rol
mov
call
sub
jne
ret
sbb
jb
adc
xor
pop
jns
js
pop
imul
and
add
loop
into
int3
fucomp
add
jnp
jb
lods
add
push
shlb
or
jb
xchg
add
in
adc
jl
inc
fimull
test
rolb
pushf
inc
fsubrl
pop
fistpl
mov
mov
mov
dec
fwait
mov
add
add
mov
ljmp
pop
data16
xchg
jne
std
inc
arpl
aaa
adc
popa
fldenv
mov
mov
dec
add
mov
inc
out
pop
insl
cmpsl
imul
pop
rcll
pop
sub
adc
sti
fidivrs
or
repnz
sti
adc
mov
mov
mov
push
sarb
add
add
ret
mov
mov
shlb
jno
or
das
fisubrs
pop
fstps
stos
cmp
imul
adc
outsl
xlat
leave
xchg
imul
divl
add
hlt
add
mov
fldt
stos
lods
stos
xor
jg
rcl
push
cmpsl
insl
cld
lcall
add
add
or
out
lods
xor
jecxz
push
xor
ds
das
out
arpl
and
cmp
arpl
fidivrl
adc
pop
nop
xor
loope
imul
ret
lret
cmpb
add
push
sub
cmpsb
add
in
add
push
leave
add
add
xor
dec
pop
repz
xchg
out
call
add
and
inc
sub
inc
adc
outsb
rolb
imul
lods
cmp
out
and
mov
adc
mov
fidivrs
xchg
cwtl
mov
jbe
push
or
mov
jl
mov
cmp
xor
pusha
punpcklbw
and
add
add
in
jno
repz
stc
repnz
ret
fistps
mov
lock
rorl
and
push
fistl
adc
movsb
push
jge
push
cmp
fmuls
mov
or
jbe
adc
into
inc
jp
outsb
into
stos
loopne
and
mov
mov
jae
xchg
xchg
add
add
int
mov
loopne
addr16
cmc
sub
arpl
push
js
jp
push
inc
sub
mov
jmp
adc
cmp
cmp
jge
and
pop
cs
loopne
pop
out
pop
or
iret
repz
jae
mov
adc
cmpsl
mov
sarb
aad
imul
je
cmp
inc
add
add
sbb
lret
push
or
gs
test
aas
stos
jno
and
inc
pop
or
paddsb
mov
test
gs
and
out
mov
std
mov
fs
lea
sbb
stc
inc
pop
xchg
or
inc
pop
dec
sub
and
mov
jo
adc
daa
popa
push
fisubrs
add
add
mov
fs
adc
sub
xchg
ljmp
cltd
sbb
inc
stos
add
test
mov
daa
rorb
xchg
jae
stos
jb
inc
fcoml
notb
shrb
lock
mov
add
mov
pop
mov
mov
sub
ss
test
add
add
out
xchg
daa
add
sarb
mov
pop
lods
popf
shrl
jb
cmp
test
stc
iret
push
mov
addr16
les
jle
xchg
repz
or
ljmp
sti
xor
into
das
pop
xor
cltd
inc
sub
and
xor
mov
test
orl
rcrl
inc
loop
stos
hlt
repz
xchg
sub
pop
mov
jno
imul
inc
jp
insl
pop
arpl
xor
shlb
outsb
int
rcrl
sahf
int
scas
pop
add
popf
int
mov
add
mov
sbb
fistl
cltd
lret
inc
dec
addr16
jb
jle
es
xchg
pop
arpl
add
push
cmp
inc
je
mov
inc
adc
mov
sub
dec
leave
jnp
ljmp
loope
dec
inc
cli
or
das
and
pop
loop
loopne
jp
roll
fsubl
adc
gs
xchg
dec
rcll
notl
xchg
fwait
push
or
or
aas
int3
push
cmp
add
add
dec
mov
pop
fucomp
mov
or
push
adc
std
std
shrb
mov
mov
mov
push
call
divb
inc
fistpl
cmp
pop
sub
pop
or
add
cwtl
insl
les
fcomps
ret
shll
imull
add
add
push
fdivrs
filds
add
mov
fiaddl
aas
xor
gs
into
rcrl
or
rorl
jo
int3
mov
in
repnz
std
inc
cltd
add
stc
negl
pop
stos
cmp
pop
inc
mov
jb
lock
jecxz
sbb
xor
and
out
inc
ljmp
add
add
outsb
adc
hlt
lahf
adc
xchg
loopne
inc
xor
pop
sub
gs
leave
sti
nop
cmp
dec
adc
pusha
sbb
cmp
and
aas
sbb
cmp
adc
xorl
pop
cld
add
call
nop
mov
lcall
shlb
adc
xchg
cmp
inc
push
test
lcall
lea
and
negl
and
imul
shlb
aas
sub
jo
push
cmpsl
mov
push
adc
ss
and
fwait
jo
cmp
or
fnstenv
cli
xchg
ja
nop
push
jbe
cs
je
inc
aam
sub
mov
imul
lds
add
gs
test
jbe
in
mov
push
cwtl
mov
cli
arpl
mov
sub
dec
xor
sti
cmp
pop
xor
insl
push
xchg
outsb
sub
jmp
and
js
sbb
and
outsl
sub
fcmovbe
into
xlat
cmc
or
hlt
test
push
push
mov
fiadds
add
cli
cmp
jb
mov
lahf
les
fistpl
jge
sub
cmp
lods
cmc
stc
cltd
fistpl
fwait
adc
inc
pushf
cwtl
sub
xchg
add
push
mov
rorl
mov
mov
xchg
adc
std
pushf
orb
fldl
cltd
sbbb
xchg
xchg
sub
aam
and
jge
jmp
jg
push
mov
jbe
push
xchg
lret
shlb
xor
cmc
add
inc
idivl
or
mov
ficomps
sti
out
mov
bound
pusha
scas
jmp
jae
xor
jl
je
cmp
cld
or
call
mov
lds
add
stos
add
add
clc
je
cmp
pop
fcomi
outsb
cmp
repz
clc
in
xchg
lock
aam
mov
push
imulb
fcoms
insb
and
testl
ficoml
insb
fbld
sub
add
hlt
fnstsw
nop
fmull
xlat
mov
in
aam
gs
sbb
shlb
stos
out
add
add
and
lds
lock
or
mov
scas
jecxz
ret
push
push
rol
or
adc
cld
jb
lret
repz
lret
enter
or
call
mov
int
or
iret
shll
xchg
dec
scas
xchg
stos
and
xchg
sub
mov
lcall
dec
cmp
push
imul
inc
addr16
pop
adc
cli
sub
sub
push
sub
push
and
repz
jecxz
mov
negb
dec
adc
iret
cmp
xchg
xorb
mov
inc
jo
add
cmpsl
in
xor
lods
or
or
push
cmp
sahf
leave
xchg
cmp
sbb
aad
push
aad
add
add
mov
mov
cmp
sub
fisubl
lds
sub
mov
push
mov
test
in
or
pop
inc
mov
xchg
mov
sub
sbb
stc
and
pop
jge
jno
aas
and
sub
je
mov
and
mov
dec
add
add
xchg
sbb
arpl
mov
out
push
lcall
mov
in
jecxz
adc
xor
fldt
xor
inc
es
xchg
pop
arpl
cltd
insl
call
mov
lock
mov
ds
push
jae
push
xor
jg
std
add
add
in
negl
push
fnstsw
mov
ja
jecxz
iret
jns
mov
loop
cmpb
push
stos
sbb
inc
dec
mov
mov
sbb
push
xor
icebp
clc
cmp
add
test
sbb
out
xchg
inc
pop
test
pop
test
jg
push
iret
add
add
out
in
xchg
pop
push
jmp
dec
push
clc
xor
jo
dec
out
int
pop
sbb
pushf
loop
add
aaa
call
inc
aad
popf
insl
pop
lods
popf
xor
popa
cmc
xchg
lahf
xor
sub
mov
daa
out
mov
xchg
test
adc
jmp
cmpsl
sahf
cmp
mov
add
add
imul
imul
ret
mov
adc
sbb
pushf
jns
adc
adc
or
cmpl
lods
dec
ja
fs
or
dec
stos
mov
mov
add
shll
mov
fidivrs
dec
fldt
mov
lock
add
xchg
pop
dec
fcmovnu
adc
popl
adc
insb
call
xchg
aaa
pop
jae
fwait
push
dec
add
and
fimull
xor
stc
inc
ret
sub
xchg
das
fldenv
jecxz
int3
sbb
das
jmp
cmp
dec
sub
and
xchg
stos
js
push
fs
sbb
push
and
sbb
cmp
pushf
cmp
mov
arpl
pop
push
jl
sbb
sub
mov
xor
aam
out
punpckhbw
push
pop
mov
inc
mov
std
add
test
mov
lret
data16
sub
sub
popa
sub
andb
das
cmp
movsl
inc
pushf
or
add
int3
push
adc
sub
jmp
shrb
ja
jne
add
sub
pop
xchg
idivb
cmp
rclb
cmp
inc
push
sub
testl
mov
in
loope
dec
add
aad
shrb
fcompl
pop
or
or
jp
and
push
add
add
mov
fmull
cmc
adc
sbb
push
inc
mov
mov
inc
roll
sbb
lds
mov
jns
bsr
enter
jo
xlat
test
sbb
mov
sub
jne
add
mov
mov
movsb
or
xchg
sbb
call
adc
add
add
mov
icebp
jnp
jmp
popa
imul
adc
das
xor
adc
mov
lret
stc
dec
aaa
pusha
inc
mov
add
movsb
mov
push
fwait
mov
sti
es
fmuls
cs
sub
fwait
push
shr
sub
clc
xor
xchg
sbb
inc
cmp
ljmp
ds
jge
add
add
xor
dec
xchg
and
push
aas
inc
daa
and
ss
lods
pop
xchg
push
repz
shrb
pop
jge
push
mov
pop
lahf
add
shlb
loope
pop
mov
push
and
xchg
add
call
push
and
inc
sar
out
cmc
inc
or
add
add
add
inc
cs
scas
xchg
sbb
fmuls
je
xchg
mov
loope
mov
mov
stc
inc
stc
stos
dec
mov
xchg
push
notb
mov
push
sub
jne
cltd
xchg
fs
mov
or
cmp
out
fstl
lea
loop
mov
lock
xchg
cmpsb
dec
add
add
les
or
mov
push
dec
mov
pop
je
pop
xchg
jmp
dec
and
cmpsl
aas
jae
and
fisubrs
lods
out
mov
scas
xchg
ja
cltd
push
inc
cmc
test
jp
cli
lret
fstpl
neg
insl
fnstcw
ds
iret
push
cmc
dec
lock
test
adc
testl
add
add
frstpm(287
rcr
jecxz
inc
inc
rolb
imul
cli
dec
lcall
dec
sti
inc
mov
jbe
pop
push
insl
sarl
sbb
add
xor
popa
lret
mov
jb
fimuls
push
movsl
ret
mov
mov
std
fsubrs
je
call
add
add
or
dec
int3
andl
es
daa
sub
sub
pop
shll
jns
aam
out
jo
xor
ja
ret
in
imul
lret
pop
mov
stc
leave
fstpt
bound
dec
hlt
rcrl
mov
pop
daa
imul
sbb
pop
pop
cmp
sbb
mov
add
push
mov
imul
jle
mov
cltd
fnstenv
jo
xor
dec
dec
leave
enter
nop
and
fxch
rcl
aaa
es
xor
jo
mov
mov
in
mov
into
lret
dec
test
aad
ds
rorb
aam
sub
mov
xchg
sahf
arpl
xchg
shrb
add
add
and
aam
lret
cltd
mov
sbb
xor
mov
leave
pop
mov
fbld
popf
xchg
je
or
jno
lcall
test
call
loopne
jle
das
cmp
pop
and
mov
test
cwtl
orl
lods
sub
adc
aaa
testb
push
repz
push
test
aam
or
cld
popf
into
fisubrl
mov
rcll
rol
fsubr
push
lret
clc
push
pop
adc
fs
popf
out
jno
in
add
xchg
popf
sbb
cmpsb
sub
je
js
sti
xchg
dec
int3
lea
outsl
add
stc
jnp
mov
add
mov
sub
xchg
jle
mov
lock
mov
push
push
mov
or
insb
cmc
sub
or
sbb
cmp
pop
add
and
jo
sbb
inc
stc
and
xlat
lahf
sbb
pop
xchg
sbb
repz
jbe
sub
inc
mov
push
add
ljmp
inc
adc
movsl
jmp
ja
roll
iret
mov
enter
scas
test
sbb
repnz
sbb
push
dec
loop
cli
mov
or
add
call
mov
out
jb
jge
jno
adc
xor
into
sbb
mov
test
int3
ljmp
out
cmpsl
cmp
lahf
sbb
int
cmp
adc
jae
mov
arpl
in
in
mul
dec
dec
mov
cli
add
das
and
shll
sub
sbb
aad
jp
add
xor
in
aaa
mov
mov
dec
ret
mov
mov
dec
mov
call
add
or
fisubrs
stc
pslld
insw
scas
dec
pushf
jge
dec
int3
jmp
push
leave
push
and
sahf
mov
sbb
push
mov
pop
sbb
loop
popf
js
sub
jns
mov
and
shl
call
shl
xchg
popf
mov
stos
push
pop
mov
sbb
filds
add
add
push
mov
push
ret
mov
movb
cmc
inc
mov
movsl
xchg
and
push
popf
mov
mov
fcmovne
cmp
xor
jl
pop
pop
das
mov
push
iret
push
popf
adc
xchg
and
pop
jp
shll
xor
push
jae
in
cwtl
push
mov
mov
cltd
pop
pandn
fildl
add
dec
mov
das
pop
clc
cltd
sbb
inc
aas
push
dec
push
and
andb
xchg
pop
ja
arpl
rcrb
jne
and
mov
scas
daa
add
out
sbb
xchg
mov
std
push
jmp
push
aam
pop
loop
decb
cltd
cmpsb
add
ss
add
outsl
lock
add
add
sub
icebp
rorl
xchg
adc
lcall
jbe
jge
aaa
fmull
jb
add
mov
enter
mov
mov
xchg
pop
mov
and
pusha
rorb
jg
inc
fistpl
push
sbb
loopne
pop
cmp
in
mov
add
leave
push
and
jbe
lcall
add
add
adc
test
outsb
xchg
jno
sbb
mov
out
jb
ljmp
int3
xor
ljmp
jbe
add
mov
andb
faddl
pusha
popf
ljmp
sbb
pop
sbb
sub
cli
shll
das
imul
mov
inc
push
and
bound
lods
xor
repz
das
addr16
outsb
and
out
out
lahf
and
dec
xchg
push
push
sahf
inc
hlt
negl
loop
in
cmc
mov
push
pop
mov
cmp
std
in
xor
jno
bound
sub
mov
cli
into
dec
add
lds
push
js
xor
das
pop
lcall
and
leave
and
leave
mov
mov
fisubl
push
mov
cmp
mov
adc
and
add
loope
sbbb
inc
jb
out
cmp
mov
inc
lds
sbb
pop
push
loope
cwtl
jle
fcmovu
mov
test
jge
xchg
cld
sub
add
and
jns
iret
adc
xor
dec
jo
dec
inc
push
push
insb
lcall
lods
les
adc
mov
push
pusha
rcr
xchg
aas
in
out
out
das
jns
adcl
sbb
mov
pop
sbb
ja
gs
mov
repz
push
xchg
pop
jmp
mov
add
add
push
lds
movsb
fdivrl
cwtl
inc
imul
jb
out
cmp
mov
lcall
lret
clc
or
rcl
dec
and
nop
cmp
ds
dec
aas
outsl
dec
mov
mov
push
push
inc
jns
adc
arpl
push
call
xchg
sbb
sbb
mov
pop
int3
push
xor
fstps
and
xchg
lahf
sbb
pop
int3
jl
push
xchg
outsb
fimuls
fistpl
or
fdivrs
fwait
das
xlat
sub
mov
dec
inc
push
bound
notb
add
push
adc
out
xchg
out
mov
out
add
add
cltd
scas
adc
into
jnp
rorl
ljmp
sub
sbb
sub
inc
out
pop
adc
pushf
inc
icebp
and
push
xchg
inc
adc
add
in
and
cmp
cld
jb
cmpl
xor
es
push
jns
cmp
jl
jp
hlt
push
hlt
add
add
pop
cmp
shrb
lock
mov
jb
filds
add
pop
outsb
sbb
and
jle
loope
adc
fcmove
push
mov
jmp
add
loope
mov
mov
sub
lock
mov
cli
fstps
add
add
int
or
mov
es
cs
cmpsb
jne
xchg
cwtl
push
es
adc
fstpl
enter
mov
sbb
or
inc
sbb
mov
or
push
test
xchg
jg
push
pop
cmpb
test
sbb
cld
add
add
push
sbb
stc
mov
mov
repnz
insb
push
imul
int3
lods
int3
rol
notl
leave
arpl
inc
lret
movsl
push
dec
out
out
sbb
hlt
mov
mov
les
adc
pushf
adc
aad
outsl
cmp
pushf
cmp
leave
sbb
jne
sbb
into
bound
add
add
fists
jb
hlt
in
dec
divb
aaa
mov
dec
in
rcll
fldl
ds
ds
cmpsb
sarl
ret
ret
ret
inc
or
mov
rclb
xchg
jbe
fmull
repz
outsb
subl
add
flds
mov
jne
dec
and
inc
add
add
fnsave
and
and
sub
adc
xor
cmp
pop
add
add
movsl
lcall
scas
sub
negb
push
rcll
pop
jae
adc
sub
mov
dec
cmpsb
add
in
mov
or
ret
mov
add
loop
and
cmp
dec
mov
out
xchg
cmp
xor
mov
add
repnz
pop
shll
xor
jae
inc
sub
out
inc
out
fnstcw
push
fldenv
pop
scas
pop
pop
or
movsl
ds
and
sub
imul
hlt
pop
sbb
loope
sbb
add
add
cs
push
lock
xor
insb
xor
xor
push
ljmp
fstpt
fdivl
lock
cmc
ret
fisubl
push
lods
mov
iret
sub
test
clc
push
pop
popf
insb
pop
aaa
jb
rcrb
add
adc
jg
push
pop
push
cmpsb
pushf
test
add
pushf
sub
arpl
ss
pop
cmp
sbb
cmp
sbb
les
cmp
cmc
sub
out
and
lret
xor
shrb
aas
jp
repz
inc
adc
sbbb
xchg
mov
lods
lret
mov
sbb
fs
add
add
xchg
gs
pop
jecxz
jne
and
sub
push
hlt
sbb
std
popf
jbe
daa
test
push
push
pop
push
mov
test
jmp
mov
jo
adc
orl
aaa
push
xor
sbb
pop
outsb
jne
imul
out
bound
vpshufd
jno
clc
mov
loopne
mov
add
xchg
int
imul
shrl
push
fs
add
mov
cmp
mov
xchg
outsb
fldl
stc
jp
jp
mov
hlt
lods
adc
les
subb
jbe
or
inc
xor
sub
inc
xchg
inc
repz
aam
stos
adc
rclb
mov
add
pop
movsl
mov
out
jecxz
cmp
addr16
scas
mov
push
sbb
repz
sbb
push
mov
jno
cmc
fistpll
bound
pop
pop
cmp
adc
add
mov
push
push
enter
scas
adc
xchg
xchg
xchg
mov
scas
cmpsl
sub
sbb
ljmp
loopne
add
popa
icebp
add
mov
nop
and
ja
jl
adc
push
push
cmp
xor
xchg
or
pop
rolb
adc
incb
outsl
fwait
pop
push
int
notb
test
and
mov
cld
jb
icebp
les
sbb
repz
mov
imul
test
jo
jge
add
mov
inc
je
xchg
out
cmp
mov
push
jle
mov
test
aam
lcall
cmp
mov
inc
xor
cmp
xchg
jnp
insb
xor
or
sub
lds
and
mov
rorl
sub
push
cmp
push
and
jmp
sti
jge
cmp
xchg
jbe
cmc
push
sub
aas
or
imul
add
or
out
cmp
xchg
shll
rcrl
xchg
enter
jne
or
mov
imul
out
inc
lds
out
dec
lods
mov
add
sub
push
jle
jb
sbb
and
sub
paddsw
inc
mov
mov
int
aad
iret
jno
xchg
xchg
sbb
cmpunordps
cmpsl
dec
xchg
test
in
cwtl
and
adc
loop
stos
fistpll
int
push
xor
in
lcall
addr16
insl
add
sbb
fildll
xor
in
jg
popf
pushf
mov
vpmullw
or
aaa
xchg
xor
cwtl
mov
mov
out
mov
xchg
pop
shll
pop
in
pop
fldcw
cmp
sub
mov
mov
stos
shrl
ss
push
popf
sbb
jecxz
and
mov
insb
xlat
call
add
add
mov
mov
popf
mov
stc
or
movsl
push
cli
sub
or
mov
das
iret
movsl
sub
inc
loope
mov
sti
cmp
push
dec
cwtl
or
fxam
call
dec
arpl
and
lret
jp
fdivs
test
sub
sbb
push
inc
mov
xlat
sbb
in
es
dec
in
add
or
loopne
mov
in
fs
xor
test
push
aam
adc
xchg
fwait
push
pushf
ja
mov
sarl
les
sbbl
pop
ja
add
pop
adc
aad
lds
add
test
cwtl
test
std
pop
mov
adc
test
iret
ret
or
rcll
imul
add
xchg
ja
mov
xchg
mov
mov
and
xor
and
pop
into
aas
rol
add
das
arpl
jp
mov
fnsave
push
sub
xor
xchg
push
sahf
jmp
cmpl
sub
pop
mov
inc
add
gs
out
fadds
add
fwait
xor
ret
cltd
add
add
push
fdivr
or
jae
nop
jns
ja
xchg
das
into
gs
stos
push
mov
inc
lcall
and
js
jbe
add
adc
repnz
jo
bound
int3
stos
fimull
cmp
cwtl
and
fmul
mov
lods
stos
xlat
outsl
xor
mov
in
pop
jnp
divl
xlat
jg
or
add
add
loope
cmp
fsqrt
cwtl
cwtl
mov
movb
and
push
stos
jno
mov
test
mov
dec
out
add
mov
mov
cmc
lods
pop
pop
nop
mov
xchg
pop
jns
test
cmpsl
and
xor
push
or
add
mov
les
mov
les
add
les
add
ret
add
mov
fucomi
add
fucomi
add
fucomi
add
add
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
repnz
fcomi
add
f2xm1
push
xlat
out
mov
fucomi
add
fucomi
add
fucomi
add
fildl
jmp
fildl
jmp
fildl
ljmp
add
mov
fildl
in
mov
fildl
out
mov
fildl
out
mov
fildl
loope
add
mov
fildl
lock
fildl
jecxz
fildl
jecxz
fildl
repnz
fildl
in
fildl
fnstsw
fildl
in
mov
fildl
jmp
mov
fildl
jmp
mov
faddl
add
faddl
add
faddl
add
faddl
add
add
xchg
faddl
xchg
faddl
add
add
xchg
faddl
add
faddl
add
add
or
add
or
adc
or
mov
fmull
add
xlat
or
add
or
xor
or
nop
xlat
or
loopne
or
xor
or
adc
or
nop
xlat
or
mov
xlat
or
mov
inc
push
or
add
mov
test
or
and
or
and
or
xor
or
rolb
or
push
add
mov
mov
push
or
ljmp
mov
or
or
stos
add
mov
cli
add
mov
stos
add
mov
add
add
fldt
add
fildl
fcmovne
add
fildl
add
fistpl
mov
cld
add
fistpl
mov
in
mov
pop
add
add
add
fstpt
vandps
fcomi
add
add
fildl
idivl
jecxz
daa
mov
jecxz
call
shl
sub
jecxz
enter
dec
shl
enter
dec
shl
clc
mov
jecxz
cwtl
mov
jecxz
clc
add
add
jecxz
cwtl
mov
jecxz
loopne
jecxz
pusha
shl
mov
jecxz
xor
jecxz
sarb
add
jecxz
sarb
jecxz
jo
jecxz
add
xlat
or
pop
add
fmuls
add
add
fmuls
add
or
mov
add
fmuls
add
or
sbb
or
mov
add
fmuls
add
fmuls
add
fmuls
add
or
rcr
or
pop
fmuls
add
fmuls
add
fmuls
add
fmuls
add
fmuls
add
or
mov
aas
push
or
dec
push
or
aas
push
or
add
mov
dec
push
or
mov
or
adc
or
lds
or
in
or
lds
or
and
add
mov
lds
or
mov
push
or
jge
or
fldt
mov
scas
add
add
add
fisttpl
add
fstpt
add
fstpt
add
mov
popl
fucomi
add
fucomi
add
fistpl
mov
pop
add
fisttpl
add
fisttpl
add
mov
aas
add
fisttpl
add
fisttpl
add
mov
jg
mov
scas
add
fldt
add
add
jecxz
fldt
mov
arpl
fildl
scas
mov
aam
scas
rcl
cmpsb
mov
aam
push
mov
aam
xchg
aam
inc
mov
aam
xchg
aam
idivb
aam
push
mov
rolb
push
mov
rolb
ss
add
rcl
push
mov
rolb
jbe
rolb
mov
mov
rolb
push
mov
rolb
fidivrs
fisttps
add
fmull
add
or
push
fimuls
add
or
push
fimuls
add
fisttps
add
fimuls
add
fisttpll
add
fimuls
add
fmull
add
or
xor
or
rcr
or
add
add
fisttpll
add
or
arpl
or
rcr
or
ret
fmull
add
fisttpll
add
fisttpll
add
fmull
add
or
add
or
xor
or
and
or
mov
fisttpll
add
jb
pop
mov
push
add
mov
inc
add
mov
add
pop
mov
cli
add
mov
or
pop
mov
lret
mov
cli
add
pop
mov
xchg
add
mov
mov
pop
mov
enter
nop
add
mov
xor
or
icebp
add
or
fildl
add
fucomi
add
fcomi
add
add
mov
fucomi
add
fcomi
add
fucomi
add
fcomi
add
fucomi
add
fcomi
add
fucomi
add
fcomi
add
fucomi
add
fcomi
add
add
fucomi
add
add
rcr
out
mov
loopne
jmp
ret
out
fldl
out
fiadds
mov
or
rorl
loopne
aam
loopne
aam
repz
pop
repz
rcl
jecxz
roll
repnz
or
leave
rorb
loop
rorb
loop
rorb
cmc
mov
or
in
xlat
or
cmc
mov
or
in
add
ret
fnstsw
push
in
lret
push
in
push
fdivrl
push
or
pop
push
or
push
or
push
or
pop
lret
or
push
or
dec
lret
or
sub
or
sbb
or
or
or
sub
or
sub
or
sbb
or
ljmp
push
ljmp
push
add
add
lret
or
jmp
or
jmp
or
fcmovne
or
jmp
or
lret
lret
or
stos
lret
or
fwait
lret
or
mov
or
stos
lret
or
stos
lret
or
mov
test
lss
adc
ret
test
lss
pop
adc
scas
adc
test
sbb
rorl
pop
rorb
add
ficompl
sbb
stos
sbb
movsl
mov
push
sbb
mov
sbb
mov
sbb
fcoms
sbb
test
sbb
mov
sbb
xlat
mov
sbb
mov
sbb
sbb
out
sbb
fistps
fistps
iret
sbb
iret
sbb
movb
add
add
mov
out
pop
mov
mov
pop
leave
mov
push
and
mov
out
pop
mov
mov
pop
leave
mov
add
and
shr
mov
rcr
rol
add
ffree
push
int3
ffree
push
add
rcrb
add
add
rcrb
ffree
push
in
ffree
push
in
rcrb
popf
rcrb
popf
rcrb
popf
rcrb
rcr
in
flds
mov
or
mov
or
lret
in
int
push
out
rorl
fidivs
lret
adc
scas
lret
adc
scas
int3
adc
scas
int3
adc
int3
int
fcmovne
int
fcmove
into
adc
int
adc
mov
adc
std
add
add
adc
adc
mov
push
adc
lcall
push
mov
adc
mov
adc
fwait
enter
enter
enter
enter
mov
sbb
dec
lds
sbb
sbb
sbb
or
sbb
or
sbb
mov
les
sbb
add
or
lds
sbb
lds
sbb
sbb
mov
lds
sbb
lods
sbb
xlat
mov
sbb
mov
sbb
mov
sbb
fstpl
sbb
lods
sbb
mov
sbb
lea
sbb
lea
sbb
mov
add
mov
mov
mov
add
mov
add
mov
mov
add
addb
mov
mov
add
fcmovne
add
fcmovnu
add
fldt
add
fistpl
add
fisttpl
add
add
fisttpl
add
fisttpl
mov
add
mov
fucomi
add
fucomi
add
fucomi
add
fcomi
add
fcmovnu
add
fisttpl
add
fistpl
add
fldt
add
fisttpl
mov
fldt
jmp
rcr
jmp
ret
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
add
add
into
fildl
jmp
pop
sahf
std
ljmp
add
mov
roll
repnz
int3
add
mov
mov
add
mov
sub
push
jp
stos
sarl
jmp
adc
adc
add
adc
add
add
adc
hlt
fsts
add
fsts
add
fsts
add
add
fsts
add
fsts
add
fsts
add
add
gs
call
add
add
push
add
sbb
jne
xor
adc
xlat
ret
fiaddl
add
add
and
leave
add
adc
mov
add
add
mov
addb
mov
addb
mov
cmpsb
add
movsb
add
mov
mov
add
mov
flds
sbb
cmpsl
add
mov
mov
arpl
pop
fdivl
add
fadds
jo
inc
mulb
in
outsb
fnsave
jb
inc
in
push
test
out
movsb
sbb
ljmp
fisttpl
pop
jle
ljmp
push
imul
push
imul
incl
rclb
sarl
outsb
add
sub
test
rcrl
iret
sbb
jecxz
lret
aam
add
cli
arpl
add
pop
imul
shr
mov
or
mov
loop
add
fucomi
add
fildl
jno
lar
mov
fildl
or
fildl
or
adc
and
cmp
out
cs
add
jecxz
or
add
int
std
and
leave
xor
mov
sub
add
jl
add
sbb
xor
sbb
icebp
sub
sbb
add
sbb
jl
sbb
adc
add
sbb
push
add
add
imul
fbstp
add
jmp
push
inc
add
push
inc
add
add
inc
mov
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
mov
inc
add
dec
inc
add
lahf
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
data16
add
fbld
adc
insl
add
add
mov
in
add
add
loopne
xchg
imul
insl
cltd
push
faddl
add
mov
sbb
fs
fldt
das
loope
push
sub
inc
push
mov
fdivr
lret
inc
mov
rorl
mov
rorb
mov
rorb
adc
jae
mov
jb
testb
add
add
jb
pop
or
insl
jmp
fildl
add
sbb
in
ljmp
sub
imul
fwait
xor
outsb
ljmp
data16
push
in
jmp
sbb
addr16
push
js
addr16
in
aas
mov
mov
movsl
xor
add
cmp
push
dec
out
mov
repz
push
dec
pop
push
push
xor
cltd
gs
add
xchg
mov
push
sub
in
jp
adc
fadd
sahf
pop
sub
in
pop
lods
adc
fadd
sahf
pop
sub
add
lcall
add
push
sbb
mov
sbb
jmp
add
add
flds
in
fldl
shl
in
mov
jmp
adc
mov
sbb
lods
cmc
sbb
fnstcw
and
mov
lds
test
xor
mov
lret
cmp
and
arpl
andl
mov
imul
outsl
push
jae
push
xchg
ja
cmp
jnp
cmp
add
arpl
addr16
mov
imul
jae
nop
mov
jl
jnp
cwtl
xchg
fs
addb
adc
xor
nop
xchg
xor
xchg
sbb
cwtl
fwait
clc
fs
lahf
add
mov
cmpsl
sub
test
dec
jne
scas
mov
outsl
mov
sub
mov
adc
inc
ret
add
inc
jp
cmp
push
cmp
add
push
rorb
iret
push
or
dec
fdivp
loop
loop
fbld
stos
pop
ljmp
jo
out
scas
je
ljmp
rolb
add
mov
xchg
or
into
mov
lret
sbb
mov
and
add
add
fistl
sbb
les
xor
int3
add
xchg
sar
cs
aam
loop
clc
out
cld
xchg
fisubl
fwait
repnz
or
ljmp
mov
jl
cmpsl
js
xor
andb
mov
aaa
adc
icebp
push
adc
test
pop
mov
pop
jae
add
add
outsl
addl
ja
dec
imul
ja
xchg
xor
dec
pusha
mov
xchg
pop
inc
test
cltd
xor
xchg
and
mov
sub
jge
push
mov
and
clc
movsl
leave
sub
nop
lods
shll
mov
fisttpll
mov
jns
rcrl
add
pop
sub
aad
mov
shrl
mov
cwtl
fildl
call
mov
fildl
jmp
mov
fiadds
add
add
xchg
fdivrp
add
add
xchg
fiadds
add
add
add
add
add
add
add
add
and
add
add
add
add
adc
add
and
add
and
add
adc
add
adc
add
loop
cld
pop
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
fldl
add
cld
pop
mov
addb
mov
addb
mov
addb
mov
xor
ret
mov
addb
mov
addb
mov
mov
outsb
ljmp
addb
mov
addb
mov
subl
repnz
ljmp
add
mov
addb
mov
addb
mov
fucomi
add
adc
add
add
mov
fucomi
add
nop
jmp
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fldt
mov
pop
jmp
cmp
out
out
pop
mov
add
mov
pop
add
mov
pop
ror
icebp
psubq
jmp
psubq
jmp
pand
pop
adc
mov
pop
ror
icebp
psubq
jmp
psubq
jmp
pand
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
jmp
mov
fiaddl
add
fiaddl
add
fiaddl
add
add
xchg
fiaddl
add
add
movsb
fiaddl
add
add
fiaddl
add
add
add
add
add
add
cld
pop
inc
add
add
and
add
jnp
inc
add
inc
add
add
insb
and
inc
add
flds
add
flds
add
inc
add
sbb
add
mov
add
loop
inc
mov
fiaddl
inc
mov
jp
add
ja
mov
pop
push
cmp
mov
jnp,pt
mov
fidivs
mov
ja
mov
mov
mov
scas
jnp
mov
xchg
and
or
fcomi
add
fcmovne
jbe
fildl
rcr
jbe
fistpl
mov
fcomi
add
fldt
std
fcomi
add
fistl
add
fstpt
jbe
jbe
fisttpl
jbe
fistl
rcr
jbe
jbe
fldt
jbe
fcmovne
add
fstpt
rcr
jbe
fcmovnb
add
fldt
add
fcmovnbe
jbe
fildl
arpl
sbb
popa
add
add
loop
cmc
sbb
dec
shl
loope
sbb
fs
mov
sbb
rol
add
mov
sbb
mov
sbb
lret
add
or
jbe
mov
add
mov
sbb
mov
aad
add
rcr
fxch
sbb
cmpsl
mov
sbb
aam
loopne
sbb
add
add
fldl
adc
fists
add
ficoms
add
push
inc
add
ficoms
add
inc
add
push
inc
add
fisttps
add
inc
add
fisttps
add
add
add
add
and
inc
add
fimuls
add
or
mov
fimuls
add
sti
fiadds
adc
inc
add
push
add
or
xor
or
hlt
add
add
test
inc
mov
je
inc
mov
mov
mov
xchg
js
mov
inc
js
mov
dec
js
mov
or
mov
push
js
mov
add
mov
or
add
cli
ja
mov
loop
inc
mov
cli
jge
mov
out
inc
mov
mov
inc
mov
es
mov
jge
out
add
fistl
add
add
add
fcmovnu
jl
fistpl
jl
add
jge
js
mov
fistpl
add
fistl
add
add
fildl
std
fistpl
jl
fildl
jl
fcmovnb
add
fildl
stos
fcmovnbe
jl
add
fildl
inc
mov
sbb
sbb
sbb
cmpl
add
add
add
sbb
out
jmp
add
mov
sbb
aas
mov
sbb
in
mov
sbb
sarl
add
loope
jge
sbb
ds
sbb
mov
sbb
fdivrs
sbb
out
mov
sbb
cli
mov
sbb
add
loopne
sbb
inc
add
push
inc
add
fisttpl
add
push
inc
add
or
fcoms
fisttps
add
push
inc
add
ficompl
add
add
xor
add
add
fisttps
add
push
inc
add
or
add
fimull
add
filds
xor
inc
xor
adc
add
add
add
jl
inc
mov
je
inc
mov
int3
test
mov
test
jbe
add
aam
inc
mov
mov
inc
mov
int3
test
push
push
bsr
mov
push
mov
mov
mov
sub
or
add
mov
arpl
or
out
inc
mov
loop
inc
mov
rorb
or
fcmovnu
add
add
fistl
mov
fnclex
add
fisttpl
mov
mov
mov
fistl
add
xchg
pop
add
test
push
add
fistl
test
testl
add
add
adc
fistl
add
fildl
add
std
fldt
test
fldt
scas
fistpl
test
fistl
mov
fcomi
add
fldt
test
fildl
int3
mov
sbb
xlat
mov
sbb
imul
add
out
add
mov
sbb
hlt
add
add
sbb
cmp
sbb
out
jecxz
pop
cmp
add
loop
imul
mov
add
aas
sbb
out
out
loope
sbb
gs
aad
sbb
outsl
rcr
in
cmp
add
sbb
add
pop
inc
add
pop
inc
add
xlat
pop
xchg
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
sub
mov
filds
add
push
inc
add
ficoms
add
push
inc
add
ficomps
add
pop
inc
add
and
inc
pop
inc
add
push
inc
add
fbld
mov
push
add
mov
dec
fdivrl
mov
cld
fstpt
mov
aas
mov
xchg
fdivrl
mov
inc
fdivrl
mov
cmp
aas
mov
mov
aas
mov
nop
fdivrl
mov
xchg
fdivrl
mov
movsb
fdivrl
mov
aam
aas
mov
dec
fdivrl
mov
add
mov
call
fdivrl
mov
pop
fdivrl
mov
fisttpl
lret
add
fistpl
mov
fildl
fisubrs
fistl
ficomps
fistpl
fimuls
fcomi
add
fnclex
fucomp
fistl
add
fcmovnu
fstp
add
add
fisttpl
filds
add
mov
fistpl
fildll
fucomi
add
fisttpl
into
lret
add
fucomi
add
stos
addb
mov
cmp
push
ja
cwtl
addr16
dec
mov
inc
cwtl
xor
jns
jl
mov
jmp
aaa
add
push
fnsave
add
outsb
add
sub
push
std
punpcklbw
inc
add
add
add
ds
mov
nop
jle
sbb
cmpl
jo
push
mov
fiaddl
pop
hlt
ret
ja
stc
lea
cwtl
xor
sub
mov
negb
bound
push
cmp
xor
call
mov
push
mov
out
mov
push
fisubl
iret
xchg
lds
inc
push
loop
lock
dec
lock
daa
bnd
jmp
mov
sub
mov
mov
pop
xchg
xchg
into
push
orl
stos
sbb
arpl
ficoml
add
or
push
mov
je
xor
add
sbb
add
mov
fiadds
dec
ret
js
pop
imul
mov
inc
ds
pop
push
or
mov
je
add
hlt
push
add
arpl
add
xlat
add
add
iret
add
add
xchg
add
mov
hlt
push
add
movl
mov
fistpl
mov
fucomi
add
fimull
add
fiaddl
add
ficoml
sbb
fstpt
add
ficoml
in
dec
add
fiaddl
fidivrl
add
ficoml
add
ficoml
add
addl
jp
outsl
add
add
cwtl
fisubl
xchg
pop
add
fsts
fimull
jno
sub
xchg
fisubl
add
ret
mov
iret
add
mov
int
cltd
mov
sbb
fwait
mov
sub
sarl
add
mov
add
mov
aam
push
add
add
loop
inc
mov
int3
add
mov
pop
add
mov
sub
and
in
add
mov
clc
add
ret
add
and
mov
and
add
fstps
add
fnstenv
add
add
ficomps
adc
add
pop
add
or
add
add
and
sub
sbb
add
ficomps
cmp
or
dec
fimuls
add
frstor
add
fstpl
add
xchg
fstpl
inc
fistpll
add
fists
cmp
sub
dec
fistpll
add
fisttps
add
pop
add
arpl
mov
sub
add
mov
enter
aas
add
pop
add
add
mov
inc
add
mov
dec
add
mov
push
add
add
mov
das
add
dec
add
add
mov
pusha
add
mov
adc
inc
mov
adc
add
pop
add
mov
std
cmp
int
dec
pushl
stos
dec
incl
add
mov
stos
dec
in
stos
inc
lcall
stos
inc
jmp
stos
nop
add
stos
popl
lods
xchg
sahf
lods
jge
mov
lods
mov
jle
jp
xchg
lods
jns
pop
lods
pop
add
push
add
lods
pop
add
lods
cmp
push
lods
xor
sub
add
mov
add
xchg
add
lea
add
add
add
jnp
pop
lods
add
mov
lcall
mov
mov
xor
mov
cmpsl
xor
mov
test
xor
mov
xor
xchg
xor
xchg
cltd
xor
cmpb
jp
xor
push
xor
add
add
xor
push
xorb
dec
test
inc
inc
test
inc
cmp
xor
insl
xor
fidivrl
xor
jns
push
jns
push
fwait
jns
push
movsl
jns
push
cmpsb
jns
push
xchg
jns
push
nop
jns
push
mov
jns
push
mov
loop
push
insl
in
push
pop
in
push
pop
in
push
push
add
imul
sub
sub
sub
inc
in
push
xor
in
push
daa
in
push
inc
in
push
xor
ss
xor
xor
xor
xor
cld
in
push
jge
cmp
mov
and
inc
mov
and
inc
mov
and
inc
mov
fimuls
inc
mov
fmull
dec
mov
lret
add
add
js
dec
mov
cmpsb
or
popf
or
xchg
or
xor
push
ret
xor
push
mov
bound
push
mov
and
push
mov
push
or
and
or
sbb
pop
rcrl
pop
mov
fisttps
or
or
fistpll
stos
mov
add
fists
mov
fistps
rcr
or
filds
or
lahf
or
fistps
or
mov
mov
orl
fildll
or
fildll
or
loopne
or
fbld
mov
mov
clc
filds
mov
add
add
mov
sub
mov
add
ss
mov
sbb
mov
sbb
sbb
cmp
sbb
xor
mov
push
aaa
mov
add
and
daa
push
adc
lods
add
mov
mov
push
scas
mov
push
cmpsb
les
push
leave
lds
lret
mov
add
les
add
xchg
adc
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
fisubrl
add
add
nop
fisubrl
add
fisubrl
add
fisubl
sbb
add
fildl
add
fisttpl
add
fisubl
mov
or
mov
mov
adc
mov
push
add
scas
mov
ljmp
mov
sti
add
mov
add
mov
ret
add
mov
lds
mov
mov
xchg
mov
cmp
mov
cmp
mov
sub
add
mov
dec
fidivrs
push
sbb
cwtl
push
push
ficoms
push
sbb
xchg
push
arpl
cmp
pop
fiadds
push
fidivs
push
add
add
push
dec
fimuls
dec
fiadds
dec
fimuls
dec
fiadds
xor
or
sub
add
xor
add
and
ficoms
push
pop
fimuls
push
push
fiadds
push
add
std
add
jae
lret
add
jge
flds
jle
mov
jg
add
rclb
xchg
rcrb
nop
add
add
mov
and
in
dec
inc
jno
inc
cmp
and
mov
cmp
sbbl
cmp
and
stc
dec
and
and
push
and
cmp
pop
flds
sar
pop
cmp
adc
aaa
shl
cs
lods
pop
test
iret
pop
stos
cmpsb
into
pop
movsb
xchg
fstps
dec
je
and
inc
and
shll
pop
je
and
je
and
je
and
je
and
je
and
je
and
je
and
je
and
and
and
je
and
je
and
je
and
jne
and
mov
or
jne
and
jne
and
jne
and
add
lods
jne
and
jne
and
jno
and
js
or
loopne
cmp
test
mov
fidivs
jmp
push
mov
cwtl
dec
jmp
mov
in
sub
and
add
and
add
popa
cld
add
pop
cld
add
pop
cld
push
fstl
pop
fstpl
or
dec
cld
or
add
fstpl
adc
or
and
adc
cld
push
pushf
mov
push
pushf
mov
push
pushf
mov
push
fsubrl
popf
std
adc
fwait
std
hlt
mov
jg
lods
mov
jne
test
insb
std
movsb
mov
cmpsb
std
push
mov
movsb
std
lock
mov
scas
mov
std
add
add
mov
std
imul
std
push
mov
cmp
mov
sbb
cmpsb
mov
push
std
fdivrs
std
scas
mov
das
std
es
and
std
repz
push
mov
ja
enter
lret
mov
sub
lds
xlat
and
cmpl
roll
add
daa
nop
imul
xchg
arpl
and
push
cli
and
clc
and
int
js
int
pop
sub
pop
sbb
and
adc
and
or
and
add
and
sti
lods
and
repz
and
and
jecxz
and
rcl
and
ret
and
cmp
or
add
outsb
and
dec
outsl
and
push
outsl
lods
add
cmpsb
and
sub
pop
outsl
or
pop
outsl
pop
add
outsl
adc
and
outsl
mov
and
or
and
andb
outsl
andl
outsl
mov
and
fs
test
xchg
ja
rolb
mov
jp
xlat
add
add
add
fs
mov
fdiv
fld
leave
hlt
fidivrl
fcomip
fdivrl
xchg
cli
fidivrs
cmp
mov
and
cli
jecxz
daa
cli
in
xor
in
dec
cli
out
cmp
out
dec
cli
call
rclb
add
adc
sti
add
sti
add
add
add
pop
sti
push
ret
pop
sti
pop
mov
dec
sti
or
pop
sti
or
call
push
stc
mov
dec
stc
enter
ret
fstps
mov
fnstcw
stc
int3
fnstenv
stc
iret
fnstenv
stc
into
fstps
clc
mov
fwait
clc
stos
fsts
clc
movsl
flds
clc
xlat
fldcw
fldenv
rcr
clc
mov
add
mov
stos
clc
stos
fldcw
clc
cmpsl
clc
cmpsb
clc
fcompp
sub
clc
loopne
sub
fcmovnu
and
loop
xor
aad
xor
movsb
flds
and
mov
sbb
in
or
aad
or
aad
or
lds
or
mov
or
mov
or
stos
mov
mov
scas
or
add
add
movsb
or
push
or
push
or
dec
sbb
push
push
or
dec
sbb
or
sub
or
xor
or
sub
or
adc
inc
or
or
adc
or
push
jo
push
mov
dec
push
movsl
jo
push
jo
push
mov
push
push
mov
push
push
mov
push
push
add
add
jno
push
mov
push
push
lods
jno
push
lods
jno
push
xor
outsb
xor
inc
outsb
xor
inc
outsb
xor
xor
xor
aaa
xor
xor
cmp
xor
xor
outsb
cmp
ljmp
xor
outsb
xor
outsb
cmp
in
cmp
xor
outsb
inc
xor
dec
testl
add
lods
lock
testb
testb
testb
testb
testl
pop
testl
testb
testb
adc
xor
push
int3
xor
push
int3
inc
adc
adc
adc
xor
adc
sub
pop
mov
adc
cmp
pop
mov
pop
mov
adc
adc
add
in
cmp
adc
fstpt
adc
aaa
adc
int
adc
sbb
push
int
adc
int
adc
int
adc
int
adc
int
adc
int3
sbb
outsl
int3
adc
outsb
int3
or
imul
enter
adc
adc
int
xor
les
aaa
int3
lret
adc
add
es
ret
int3
xchg
adc
int3
nop
adc
int3
jg
or
jle
jge
xchg
adc
lret
mov
dec
add
int3
in
xor
jecxz
pop
lods
out
pop
lods
pop
xor
pop
xor
pop
xor
int3
pop
xor
int3
push
xor
int3
jb
and
adc
lods
xor
inc
stos
aaa
and
or
cmp
or
aaa
shl
add
add
sahf
inc
and
cltd
cmp
mov
cmp
mov
and
popa
and
popa
xor
push
pop
xor
inc
popa
xor
cmp
sub
add
sub
add
sbb
flds
add
sbb
add
flds
add
sbb
add
fadds
add
sbb
add
flds
add
sbb
add
flds
mov
fiaddl
add
add
clc
flds
add
add
jns
add
inc
sbb
add
add
xlat
sbb
add
sbb
add
add
add
sbb
add
sbb
add
rolb
mov
roll
mov
rolb
mov
xchg
inc
mov
cwtl
inc
add
mov
mov
repnz
add
jmp
add
incl
mov
add
mov
push
inc
add
in
add
loopne
add
cmp
mov
add
add
fcmovnb
add
add
mov
fcmovnb
add
fcmovnbe
add
fcmovnb
add
fisttpl
add
fldt
mov
mov
fistl
add
fcmovne
add
fildl
aas
mov
fildl
mov
fistl
add
fildl
add
add
fistl
add
mov
fildl
pop
xchg
fildl
or
fildl
pop
sbb
or
fildl
cmp
fildl
or
fildl
cmp
rcr
pushf
rcr
add
mov
fildl
mov
fildl
mov
fildl
sarl
add
sbb
cltd
add
add
fildl
js
fildl
sub
fildl
jnp
fildl
test
fildl
pop
rcr
stos
rcr
push
rcr
add
lahf
add
mov
add
adc
add
and
add
adc
add
arpl
add
pop
lahf
add
push
fldl
add
sahf
add
pop
fldl
add
sahf
add
or
add
add
add
fldl
add
fldl
add
fldl
add
fadds
add
sahf
add
adc
sahf
add
fadds
add
add
pop
fldl
add
testb
mov
testl
add
pop
add
push
add
push
add
add
mov
push
add
push
add
sbb
add
or
add
sbb
add
mov
push
add
mov
das
add
mov
je
add
jae
add
fcmovnbe
je
fistl
mov
fildl
mov
add
cld
mov
add
fstpt
add
fildl
jl
imul
fistpl
mov
fldt
mov
fldt
mov
fldt
fstpt
add
fstpt
add
fstpt
cld
mov
fildl
arpl
add
rcr
jmp
fildl
xor
sbb
add
out
add
add
sbb
addr16
sbb
jbe
fildl
test
mov
sbb
pop
mov
sbb
pop
mov
sbb
jp
fildl
xor
sbb
jge
fildl
outsb
sbb
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
add
daa
daa
movsb
fldenv
sub
xor
test
aaa
aaa
int3
pusha
std
jmp
add
arpl
cmp
addr16
xor
nop
xor
outsl
movsb
sub
test
ja
int3
and
and
pop
pop
mov
arpl
cmp
addr16
outsl
outsl
add
add
sub
call
and
add
jnp
aam
add
aam
add
in
add
in
add
aam
add
aam
add
mov
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
mov
jb
add
jb
add
jb
add
jb
add
jb
add
adc
cmp
fisubl
dec
fisubl
cmp
pop
sbb
mov
pop
or
stos
pop
add
mov
pop
hlt
aaa
xchg
pop
in
aaa
mov
add
fsubp
ret
loop
or
pop
int3
aaa
push
les
mov
in
add
push
pop
lods
aaa
dec
pop
movsb
aaa
inc
pop
pushf
aaa
cmp
aaa
xor
aaa
sub
or
pop
je
adc
aaa
or
aaa
add
aaa
cli
pop
push
aaa
repnz
dec
aaa
ljmp
add
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
add
mov
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
add
xchg
fldl
add
add
movsl
loopne
add
fiadds
add
add
fiadds
add
add
push
fiadds
add
add
fiadds
add
add
push
fiadds
add
fiadds
add
add
adc
fiadds
add
fiadds
add
fldl
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
fucomi
add
fucomi
add
fcomi
jmp
inc
push
xor
in
sarl
leave
fsqrt
sub
test
test
sbb
jecxz
leave
fsubrl
add
add
sub
pop
cmp
xor
out
cmp
fsubr
sbb
sub
fcomip
sahf
fimull
adc
fldln2
mov
sbb
mov
out
jns
mov
shl
iret
mov
add
or
cmpb
das
movsl
stos
inc
xor
cmpsb
pop
scas
and
loopne
and
mov
ffree
cmp
add
mov
icebp
rcrb
dec
mov
aam
insb
clc
adc
pop
shll
ss
push
sbb
xchg
lret
fiaddl
xor
adc
shl
iret
sub
fnstenv
repz
addr16
mov
inc
imul
jg
cmc
stc
jb
mov
xchg
ljmp
jg
cmp
fldenv
add
adcl
enter
add
lcall
fldt
lret
in
addr16
inc
jp
jnp
ret
js
fcompl
xchg
sbb
mov
ss
lret
lret
int
dec
push
and
out
ljmp
jmp
outsb
out
popf
clc
jmp
add
sub
cmpsl
ficoms
aad
mov
mov
arpl
xrelease
shll
daa
sbb
sbb
or
ficoms
pushf
test
sub
mov
hlt
cmpsb
push
jne
or
leave
adc
adc
fldt
mov
xor
lods
inc
mov
jle
popa
fisubs
rcll
add
add
or
stc
sub
in
xchg
es
sti
test
or
fcmovne
in
sbb
adc
loope
dec
adc
cmp
adc
mov
mov
shlb
jl
add
push
in
push
adc
in
adc
in
notb
aaa
in
idivb
inc
icebp
mov
arpl
dec
in
add
scas
jae
cmp
add
push
mov
notb
in
es
ja
push
pop
outsl
in
ss
fsubl
mov
invd
lock
lock
mov
mov
dec
iret
cmp
jne
outsl
jge,pt
jg
inc
fsts
loope
repnz
mov
dec
movsb
cli
dec
pop
hlt
add
sysexit
add
divb
add
add
xor
rolb
xor
lods
shll
jne
adc
jp
xchg
stc
add
xorb
jge
cmpsb
or
mov
xchg
lcall
popa
xchg
cmc
fmul
push
cwtl
mov
lods
repz
cmp
nop
bound
jne
fadds
cmp
inc
lea
add
add
adc
pusha
push
xor
je
in
cmpsl
sbb
push
dec
jno
js
ds
inc
mov
ds
std
call
insl
add
sub
stc
lcall
cmc
dec
ficompl
xor
pop
sbb
or
es
mov
cwtl
dec
or
xor
dec
and
xor
je
add
add
or
mov
and
pushf
pop
mov
inc
pop
mov
and
sub
dec
into
adc
push
into
fdiv
test
cmpsl
repnz
add
scas
pop
and
fisttps
jmp
int
scas
imul
sub
cs
idivb
test
push
repnz
dec
mov
les
sub
add
add
cmp
mov
sbb
fisttpl
ljmp
jne
push
adc
ljmp
push
pop
imulb
shlb
ss
and
fdecstp
cmp
inc
notb
push
xchg
add
stos
hlt
add
sahf
hlt
dec
adc
jecxz
js
xchg
xor
fnstenv
cmp
popf
dec
movsl
fiadds
inc
loop
out
adc
popf
adc
in
movsb
push
ljmp
jo
cmp
popf
lar
jb
pop
stos
ss
dec
repnz
rcll
push
xchg
scas
dec
out
xor
push
mov
xor
cwtl
push
addb
mov
cli
add
hlt
cmp
nop
mov
jnp
inc
idivb
pusha
add
add
mov
xor
fidivs
mov
mov
loopne
imulb
cmc
mov
cmc
aas
out
and
clc
cwtl
jecxz
xor
cwtl
nop
mov
cmp
cmp
fnstsw
or
adc
shlb
mov
mov
fisubrs
cs
test
jg
aas
xchg
cmp
cmp
mov
cmp
add
dec
cmp
getsec
pop
push
adc
lcall
dec
je
stc
mov
in
inc
cmp
dec
inc
out
cmp
filds
or
push
xchg
push
push
popa
faddp
adc
mov
lahf
int
mov
add
inc
std
mov
aas
divb
int3
jno
xchg
iret
or
jp
sub
mov
add
add
shrb
mov
add
add
mov
jl
loope
jmp
lret
sarl
add
cmp
add
ds
psrlw
icebp
fwait
pop
cld
pop
sahf
faddl
push
xchg
fldcw
stos
sub
cli
add
lods
negl
divb
stos
push
int3
and
das
fdivl
add
add
test
add
icebp
pop
inc
pusha
jecxz
adc
add
insl
test
lea
or
andl
mov
xor
mov
loope
sysenter
dec
mov
into
in
pop
sti
mov
fsubl
xchg
jmp
mov
fsubl
les
add
add
lds
cmpsl
vmovups
add
and
jae
jbe
je
and
mov
xchg
pushf
rcr
and
xchg
dec
lods
ss
loopne
jae
les
jae
xchg
out
fdiv
jae
mov
inc
inc
je
sarb
imull
jae
pushf
inc
je
inc
inc
je
mov
add
and
fistps
je
pop
inc
je
inc
pop
je
pop
in
sbb
in
sbb
in
add
faddl
add
add
xchg
fiadds
add
fiadds
add
fiadds
add
filds
add
add
push
filds
add
add
filds
add
add
add
add
incl
push
fdivr
add
dec
add
fdivr
add
fdivr
add
faddl
add
fdivr
add
fdivr
add
dec
add
out
add
in
add
loope
and
aam
add
out
add
mov
xor
add
mov
xor
add
xor
add
test
push
add
add
jnp
add
xor
inc
mov
bound
inc
mov
jb
inc
mov
adc
inc
mov
xor
add
xor
add
adc
inc
mov
mov
inc
mov
mov
enter
ljmp
fcmovnbe
add
mov
mov
fmull
add
fistl
add
fadd
add
fcmovnb
add
fucomi
add
fisttpl
std
fucomi
add
sarb
dec
cld
jg
repz
pushf
fisttpl
add
fisttpl
cwtl
fistpl
add
fildl
add
fistl
add
add
add
mov
add
xor
std
cmpsl
std
xchg
inc
aad
lret
pop
mov
add
dec
lret
outsl
mov
std
or
pushf
add
xor
in
pushf
add
and
push
pop
sub
jne
push
iret
ja
fs
cmp
add
dec
inc
std
or
add
pushf
add
pop
pushf
add
arpl
add
jae
add
test
cltd
filds
add
push
inc
or
add
or
inc
push
insl
and
push
addl
nop
dec
inc
pop
fiaddl
add
push
dec
pop
xchg
jmp
push
inc
push
nop
inc
dec
fiaddl
add
adc
sbb
add
add
add
adc
fiaddl
add
sbb
fmuls
dec
dec
movb
dec
out
std
call
adc
push
mov
add
dec
in
push
jle
push
add
dec
dec
xorl
push
xorb
mov
popl
add
xor
add
add
hlt
xor
add
ja
add
mov
push
mov
ja
push
mov
or
inc
stc
xor
add
push
xchg
mov
mov
popf
scas
jmp
add
lahf
mov
mov
mov
ljmp
iret
add
cmpsl
push
mov
fists
add
add
xlat
test
push
mov
lret
add
lret
sbb
stos
adc
cmpsb
and
lds
jp
mov
mov
sti
mov
aam
shr
add
sti
ljmp
fucomi
add
fildl
add
lcall
add
add
fwait
add
pusha
lcall
mov
iret
add
mov
mov
add
mov
mov
mov
mov
leave
add
mov
mov
add
mov
mov
add
mov
mov
inc
shrl
mov
icebp
add
adc
add
add
cmove
push
outsl
outsl
mov
inc
outsl
mov
js
push
call
xchg
inc
add
popl
adc
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
fiadds
add
popa
inc
add
popa
inc
mov
fidivrs
add
fnstsw
add
aas
add
sahf
inc
add
inc
add
mov
jecxz
mov
repz
inc
test
enter
lret
dec
insl
add
push
xchg
sti
mov
pop
aad
fs
shrl
insb
arpl
xchg
jo
and
cltd
js
jecxz
xor
add
out
fidivl
shlb
add
mov
jbe
and
pop
xchg
jb
pusha
xchg
jbe
imul
mov
jb
inc
jbe
inc
cli
lret
hlt
xchg
cs
lock
cmp
mov
push
call
jbe
or
jb
or
lcall
lods
lret
add
add
stos
clc
lods
pop
lcall
lret
lods
pop
mov
stos
sbb
leave
xchg
xor
fldt
push
mov
stos
or
mov
dec
lea
fxch
lcall
fildl
cmpsl
xor
dec
push
and
push
imul
cmp
fildl
sbb
add
inc
mov
cmp
push
inc
das
mov
or
and
lret
pop
mov
std
sub
xor
mov
add
mov
mov
cmpsl
mov
pushf
add
mov
mov
add
mov
cmpsb
add
dec
fldt
cmp
insb
fcmovnu
jo
test
dec
add
xlat
jbe
xchg
xlat
outsl
add
imul
xlat
push
add
outsl
add
xlat
push
rcl
imul
xlat
push
add
xlat
push
lock
mov
push
out
jne
mov
es
fiaddl
add
outsl
add
fisubl
jge
insl
add
dec
add
fisubl
xor
bound
add
add
imul
xchg
dec
aaa
sbb
inc
inc
shl
and
in
in
pop
pop
add
xor
add
xchg
add
insl
mov
iret
add
add
rep
bound
shll
fs
add
mov
icebp
test
imul
jae
cmp
add
pop
or
mov
jle
sub
mov
sbb
push
push
sbb
test
in
mov
mov
lret
xchg
nop
out
in
xchg
in
jle
iret
test
mov
cmp
ds
scas
test
scas
mov
xchg
test
sub
mov
add
jl
push
cmpsl
pop
lret
sub
arpl
xor
mov
dec
lret
sti
xchg
popa
xchg
aad
pop
mov
add
int3
mov
mov
pop
lods
add
xor
jo
push
ret
mov
mov
scas
push
enter
mov
lods
adc
insb
test
lret
mov
mov
cmp
data16
add
bound
push
push
push
mov
push
mov
mov
inc
dec
rcrl
jmp
inc
mov
mov
cli
mov
mov
add
shrl
insb
sub
mov
test
add
add
xor
push
push
dec
jbe
push
test
pop
orb
pop
push
add
add
outsb
ja
xchg
cmp
add
mov
repz
xchg
mov
popa
out
inc
dec
jp
pop
dec
jg
push
pop
jmp
jecxz
gs
std
cs
iret
into
push
loopne
add
pop
dec
ret
push
outsl
sarl
jl
jno
dec
jb
lcall
jo
push
and
rclb
jne
inc
add
add
add
icebp
cmp
jp
xor
cmc
inc
aam
shrb
lret
jge
adc
insl
loop
add
ds
or
ja
sbb
cmc
pushl
mov
jo
mov
inc
rorl
mov
pop
adc
fdivp
outsl
leave
xor
jnp
insl
movsb
push
xchg
popa
stos
add
add
pop
scas
sbb
add
mov
fisubrl
inc
mov
cmp
iret
cli
dec
fcmovu
mov
cld
std
fnstsw
hlt
in
cmc
shr
add
add
repz
iret
loop
ret
loope
add
jo
addr16
outsl
jmp
mov
ja
push
push
xor
add
add
into
sbb
cmp
and
lods
and
stos
or
test
fcomi
add
in
or
fildl
iret
in
std
aaa
scas
out
and
nop
fdivrs
inc
cmp
cmp
dec
add
dec
xchg
dec
lods
push
movsl
pop
ret
push
test
lcall
xor
fs
lea
and
jp
add
add
enter
mov
add
outsl
aad
add
aam
loopne
xchg
pop
in
aad
push
lcall
dec
push
add
adc
sub
ficoml
cmp
xor
add
dec
fs
filds
add
lea
add
push
dec
push
fildl
add
in
into
lret
cmp
out
jmp
add
add
stc
lock
cmc
ret
ret
pop
mov
in
leave
mov
loop
jmp
fcmovu
movsl
cmc
mov
fsubrl
enter
call
push
cmc
enter
cld
cli
das
hlt
rcrl
xchg
cld
lahf
lea
out
mov
mov
cs
mov
lock
add
fwait
jbe
gs
fldl
js
and
leave
ljmp
out
jp
jbe
insl
adc
sbb
dec
add
inc
cld
jge
or
je
inc
je
pop
add
xor
jno
add
jo
push
fwait
cltd
shrl
ljmp
xor
inc
testb
cs
sbb
inc
add
mov
add
and
push
push
add
movsb
arpl
addb
fs
outsb
inc
pop
pop
jns
popa
arpl
dec
insb
add
pusha
outsb
jbe
inc
push
addb
and
jns
dec
inc
je
gs
pop
xchg
push
dec
mov
mov
scas
mov
mov
mov
sbbl
fldt
sub
push
dec
push
add
je
dec
fsub
iret
mov
in
or
loope
add
out
sub
pop
add
loopne
xlat
push
hlt
jecxz
xor
out
cmc
inc
stc
call
sub
pop
xor
in
jecxz
xlat
sub
inc
icebp
ss
inc
sbb
dec
fisubrs
pop
adc
push
test
aad
in
sub
fildl
jmp
add
add
jecxz
cltd
and
stc
pop
shll
js
push
fs
cmc
aas
daa
or
cmp
add
dec
add
xchg
bndstx
cmp
cmp
insl
dec
dec
mov
bound
les
cs
aaa
imul
xor
in
call
add
mov
add
mov
inc
bound
dec
push
sbbl
arpl
dec
imul
dec
imul
filds
add
pop
addl
cld
out
inc
clc
mov
out
mov
jb
jl
cmp
xchg
xchg
je
mov
imul
nop
sub
mov
sbb
add
add
xchg
adc
or
push
mov
movb
out
add
xor
push
shll
scas
ds
pop
mov
or
cmp
aam
clc
sbb
cmp
jp
fdivrl
aad
sti
inc
ret
cmp
inc
lds
dec
jl
jne
or
xor
fidivrl
mov
cmpsl
inc
lahf
shlb
add
cmpsl
xor
xchg
mov
sahf
data16
ljmp
cs
dec
and
push
push
xlat
push
inc
push
mov
scas
sbb
and
hlt
lahf
sub
lret
lods
test
and
fcompl
cmp
pop
xchg
xor
inc
adc
pop
cs
mov
xor
sbb
inc
add
pop
inc
pop
and
add
push
adc
xor
add
ss
ror
ljmp
xor
mov
in
hlt
adc
push
lock
loop
fcomip
fldl
jmp
sub
dec
sbb
sahf
inc
xor
xor
add
jle
push
sarl
xchg
jbe
dec
mov
add
loopne
into
sub
aas
xlat
sbb
add
stc
fildl
cmp
cwtl
inc
jmp
sahf
inc
sti
cmp
sub
fldcw
xor
sub
sbb
das
ds
add
adc
sti
call
idiv
in
and
add
shlb
cmp
cmp
add
jg
pop
lds
pop
stos
insb
dec
pop
in
add
dec
pop
lods
xchg
les
fwait
add
add
mov
add
cmc
iret
fistpl
pushf
leave
icebp
xchg
fildl
add
lcall
add
loope
xchg
cltd
ret
add
add
mov
cmpl
mov
push
mov
test
mov
sub
and
mov
lcall
add
add
xchg
ljmp
out
in
or
add
or
sbb
cmp
add
mov
mov
jg
mov
sub
ds
lret
inc
add
mov
sbb
inc
add
cmp
cs
pusha
imul
inc
sub
cmp
add
std
ljmp
mov
cmp
pop
mov
add
pop
test
std
fidivrl
xor
jp
sbb
jge
flds
rcrl
xchg
mov
scas
mov
test
lcall
add
arpl
push
popa
add
loop
xchg
jmp
add
add
sbb
add
lahf
inc
cli
jmp
cmc
jp
jmp
stc
xchg
pop
jmp
arpl
push
cwtl
inc
xor
dec
xor
inc
mov
add
or
or
test
push
lret
add
add
imul
addb
jmp
sbb
add
cmp
mov
pop
mov
add
fmul
mov
test
lea
add
fdiv
mov
int
popf
xchg
popf
xchg
int
xchg
mov
out
in
ret
loope
idivl
mov
xchg
xlat
add
lods
mov
xchg
mov
lahf
sahf
add
fsts
jmp
sub
int
stc
add
rolb
push
ljmp
lock
std
push
stc
adc
aas
add
std
incl
test
mov
xchg
filds
add
mov
jbe
push
scas
outsb
xchg
xor
sbb
mulb
add
call
inc
in
pusha
lret
mov
ja
inc
lods
movsl
stos
push
mov
add
xor
add
xor
add
add
lahf
xchg
inc
xchg
xchg
cli
iret
popf
popa
insb
out
jno
mov
jp
les
jae
fistpl
jl
int
dec
add
add
mov
fmul
nop
and
ret
xchg
push
lods
ret
jecxz
cltd
fbstp
mov
add
std
mov
in
mov
incl
loop
fucom
mov
in
rcr
sar
and
in
movsl
add
and
or
jg
add
in
lds
mov
pop
push
xorl
cmpsl
dec
ds
pop
jl
dec
pop
jl
faddl
sub
insb
cld
jns
arpl
cmp
arpl
cmp
push
mov
add
add
outsl
mov
sbb
push
xchg
push
xchg
pop
lods
daa
xchg
add
push
enter
sub
mov
inc
cmpsb
sub
lods
outsl
jmp
adc
adc
hlt
ljmp
or
sub
adc
call
out
pop
add
sti
enter
leave
adc
fldcw
std
add
mov
xchg
add
add
sahf
mov
mov
faddl
mov
fistpl
add
jle
jl
xor
ja
orl
push
scas
mov
loop
mov
mov
xchg
xchg
popf
cmpsb
mov
pop
add
cmpb
mov
add
adc
and
pop
cmp
push
aaa
add
add
add
xor
sub
push
push
jae
mov
pop
jmp
sbb
ret
pushl
jnp
add
aad
insb
and
mov
xorb
add
mov
add
es
and
loopne
sahf
pop
fisttps
push
leave
xor
adc
add
or
cs
out
add
add
aaa
cmp
mov
or
and
add
pop
and
cltd
fists
adc
in
and
xor
add
pop
lods
inc
pop
xchg
cmp
fldt
bound
mov
insl
imul
mov
arpl
inc
ss
mov
jle
mov
movsl
ljmp
add
add
mov
mov
mov
add
fcomi
into
std
or
in
sbb
lret
mov
call
inc
mov
fsubrl
add
aas
loop
in
cmp
mov
ds
mov
loop
ljmp
jle
sub
imul
add
add
lods
fisttpll
mov
insb
int
mov
jp
or
inc
popf
mov
inc
mov
push
fwait
jl
or
ja
push
cltd
bound
lcall
movsl
xchg
mov
mov
sub
movsl
add
xchg
mov
cmc
jg
scas
push
insb
popf
mov
adc
flds
add
sbb
sbb
lcall
loopne
add
rol
cmp
sar
dec
cwtl
adc
mov
pushf
adc
int
push
lret
xchg
sbb
leave
lds
cli
icebp
add
popa
mov
xchg
mov
and
loope
jge
clc
sub
clc
in
test
xchg
outsl
dec
xchg
xchg
dec
stos
nop
mov
xchg
add
add
mov
xchg
lret
mov
out
fstpl
adc
push
mov
pop
xchg
push
loopne
xchg
addr16
pop
inc
hlt
lret
push
push
inc
pop
jmp
jbe
push
add
sbb
mov
arpl
pop
aas
xor
data16
fildl
pusha
xchg
dec
subb
jne
add
add
inc
push
lods
dec
outsl
and
or
push
lods
fildl
fs
mov
and
mov
sbb
shl
inc
jb
cld
xor
std
in
and
jmp
les
lock
jmp
sarb
out
or
fidivrs
xchg
dec
popa
xor
into
jae
mov
push
sub
add
add
pop
and
sbbl
lcall
sbb
push
and
jmp
and
cmc
and
xor
dec
in
push
cmp
imul
and
rcll
loope
mov
cwtl
jo
push
fildl
fisubrl
sti
out
mov
pop
hlt
lahf
les
in
scas
sub
jmp
add
add
mov
mov
rcrl
and
fildl
gs
ja
mov
jnp
jmp
aas
mov
std
xor
xchg
insb
je
add
mov
jl
cmp
add
xchg
pop
xchg
jp
mov
test
mov
insb
std
ljmp
xchg
test
add
add
fdivs
add
lret
push
add
mov
inc
imul
movsw
mov
push
repz
addb
sub
faddl
add
mov
fcoml
add
cmp
jmp
stos
xlat
add
mov
lods
xchg
xchg
mov
xor
mov
ja
push
mov
xor
add
scas
xchg
lea
pop
xchg
xchg
dec
mov
fidivl
or
roll
add
test
adcl
mov
mov
cmc
inc
inc
pop
sti
inc
inc
mov
pop
add
mov
pop
gs
adc
sahf
jp
gs
das
sbb
add
mov
add
mov
pop
mov
add
cli
les
loope
ljmp
test
push
mov
xchg
xor
leavew
cld
cmp
xchg
mov
add
jge
sub
pop
mov
push
add
and
or
scas
outsl
nop
lahf
inc
dec
dec
xchg
add
add
pop
adcl
cmp
xchg
pop
xor
jge
outsl
rcrb
add
int3
test
out
mov
notl
pop
mov
jle
testb
push
mov
fdivp
and
movsl
je
pushf
mov
jl
rcr
add
xchg
sub
pop
mov
push
and
add
outsl
enter
mov
adc
fildl
xor
mov
mov
push
lea
test
insl
dec
popf
fnsave
push
pop
xchg
pop
mov
xchg
add
dec
pushf
xchg
in
sti
cld
flds
add
sub
mov
xor
repz
mov
xchg
pop
std
call
das
out
cli
cs
xchg
add
es
xor
xor
add
jle
add
inc
adc
fldcw
or
cs
ds
xlat
mov
jbe
nop
mov
and
xchg
out
jg
mov
sub
sbb
mov
add
sub
cmp
add
xor
add
push
ss
dec
pusha
xor
dec
or
add
mov
lahf
xor
xchg
adc
add
mov
xor
add
mov
into
daa
inc
add
mov
adc
xor
jno
or
mov
pop
cmp
in
in
sub
mov
enter
add
push
add
scas
sub
jb
cli
lock
mov
or
xchg
xlat
pop
jbe
fldt
xor
test
js
add
inc
bound
and
xchg
cmp
ret
jmp
mov
mov
jecxz
mov
xor
add
fldt
add
pop
je
adc
loop
or
mov
ds
mov
mov
incl
add
mov
call
pop
int
add
ljmp
aad
movb
in
fs
add
or
push
cmp
dec
dec
or
dec
push
adc
xor
out
xor
pmuludq
add
cmp
xor
sbb
out
cs
adc
xor
stos
add
lds
mov
lcall
add
add
add
add
add
stc
flds
sbb
flds
cmp
flds
es
add
jecxz
aas
add
mov
xor
gs
mov
add
fbld
add
fldl
add
fbld
add
fstpl
add
add
pop
mov
cmp
cmp
popaw
cwtl
jnp
outsb
add
add
test
mov
add
cwtl
mov
jp
mov
subl
cmpl
into
mov
insl
and
decl
imul
push
insl
and
pop
jb
fucomp
data16
and
mov
add
mov
pop
and
sub
cwtl
push
add
add
add
daa
and
jne
or
mov
and
and
and
add
xchg
add
mov
gs
xchg
jg
mov
mov
bound
out
add
outsl
mov
fmull
add
fsubr
add
fcompl
add
fmull
add
add
add
adc
hlt
add
fcmovnbe
add
fcmovnb
add
fucomi
add
fcmovnb
add
fucomi
add
add
fildl
add
fstpt
add
fstpt
fisttpl
arpl
push
add
add
fildl
pusha
fstpt
add
fistl
push
mov
add
rcrl
or
addb
mov
xchg
pop
mov
xchg
or
scas
add
roll
mov
jl
fidivrl
fildl
or
lret
mov
roll
jmp
mov
stos
add
mov
fildl
scas
shll
add
add
pop
pop
jg
dec
movsb
imul
add
mov
aaa
add
cmp
scas
neg
dec
add
fisttps
in
fistpll
add
cmp
enter
insl
flds
add
add
cltd
flds
add
push
add
push
add
aas
inc
add
cmp
inc
imul
push
cmp
add
inc
add
add
gs
cmp
add
fiadds
add
inc
add
inc
inc
add
filds
add
into
stos
inc
mov
cmp
mov
aaa
decl
add
add
clc
add
mov
addr16
inc
mov
js
inc
mov
sub
in
mov
add
xor
arpl
and
lcall
je
or
das
stos
jne
mov
and
xchg
and
mov
cmp
inc
mov
fistl
mov
fildl
mov
fistl
mov
fisttpl
xor
ss
mov
fisttpl
jbe
add
mov
fucom
add
mov
mov
lock
mov
xlat
fs
test
ja
fstpt
mov
test
and
mov
mov
add
fucomi
add
fildl
fs
push
out
enter
ror
jo
fs
in
pop
cwtl
or
add
sti
sbb
xor
aaa
cltd
add
cld
xchg
in
inc
jmp
jp
je
jbe
sub
mov
adc
jmp
add
push
mov
sti
fists
add
jecxz
test
repz
popf
xchg
into
out
lock
jb
pop
ds
roll
jl
push
adc
popf
add
imul
push
clc
out
add
sub
call
mov
gs
inc
scas
out
outsl
push
mov
loop
pop
pop
add
sub
jno
mov
push
adc
popf
add
sahf
rclb
push
push
daa
pop
inc
or
lods
mov
add
or
add
lahf
mov
add
popl
and
cmp
adc
mov
pop
je
mov
add
add
in
out
and
add
je
mov
jo
out
je
xor
outsb
sub
mov
jae
fisttpl
or
out
je
in
out
push
pop
jb
adc
adc
add
inc
jne
mov
std
adc
add
add
add
or
std
add
sarb
inc
mov
cmpsb
shl
lcall
ss
jns
cmp
mov
sub
xchg
pop
sub
stos
add
adc
adc
pop
scas
fwait
ljmp
ljmp
iret
fwait
ljmp
adc
in
mov
xlat
inc
mov
mov
add
add
hlt
mov
iret
aas
adc
jb
subl
pop
mov
sbb
out
adc
icebp
in
mov
add
fildl
repnz
sbb
lock
in
shl
add
jle
xchg
jne
shlb
mov
push
inc
std
ret
faddl
jmp
add
add
test
in
ret
lret
dec
loop
jb
js
out
sub
sti
sbb
andb
mov
pusha
xchg
pop
ret
pop
cmp
or
xchg
pop
orl
sarl
out
fnstsw
cmpsb
xor
lahf
scas
test
ficoml
dec
out
adc
adc
inc
add
add
inc
and
mov
add
adc
xor
push
push
sarb
cld
je
jmp
call
mov
clc
jne
sbb
lret
ljmp
xchg
jo
mov
mov
mov
jmp
push
cmpsb
mov
bswap
mov
movsb
xlat
push
lea
jl
and
sub
imul
mov
xlat
adc
jle
std
xor
test
add
xor
sbb
sbbl
add
push
sbb
and
add
jge
mov
mov
jmp
push
imul
inc
xor
dec
bound
inc
mov
shr
adc
adc
add
add
in
je
loope
dec
call
dec
jbe
js
add
call
mov
fwait
inc
mov
xchg
push
sbb
fcoml
jbe
mov
add
fistpl
add
stos
nop
sub
push
and
pop
addl
pop
daa
or
sbb
ljmp
outsl
mov
popf
sub
add
push
fld
jne
fucomi
jg
nop
in
mov
lods
outsl
xchg
icebp
out
ljmp
icebp
jb
std
mov
push
add
pop
out
aas
idiv
jmp
fistl
leave
nop
adc
xlat
push
ds
outsl
adc
leave
pusha
ret
jmp
jmp
mov
add
add
fildl
jmp
mov
fildl
push
filds
out
repz
mov
fildl
jmp
fnstsw
movaps
mov
pop
add
add
lea
xor
add
and
filds
add
pop
push
adc
add
add
mov
and
inc
mov
scas
mov
scas
mov
lods
addr16
cmpl
es
aad
add
pop
mov
or
int
jo
test
push
mov
push
push
and
test
call
mov
je
test
cmp
jp
leave
adc
add
std
repnz
or
jle
inc
mov
inc
fsts
cmpsb
hlt
add
je
jle
mov
jp
loope
jg
xor
jl
test
fidivrs
fnstcw
in
loope
push
push
xchg
hlt
fcoms
push
repz
scas
pop
push
add
aaa
sbb
mov
lahf
mov
push
aad
fildl
mov
cmp
add
add
lahf
jbe
daa
add
or
sti
scas
fwait
ljmp
mov
fistpl
ss
inc
sbb
divb
fldt
ljmp
pop
in
stos
add
ja
adc
add
sahf
and
neg
int3
push
jmp
cmc
iret
sbb
xor
push
jbe
xor
add
loope
mov
mov
repz
mov
jno
pop
inc
pusha
sub
pop
add
mov
push
xor
fidivs
test
cltd
pop
dec
test
inc
icebp
cmp
repz
call
dec
jg
gs
fucomi
loope
fldl
push
pop
add
sar
stc
push
sub
mov
add
cmc
fdivs
sub
mov
push
std
push
cmp
lahf
in
mov
fiaddl
adc
imul
faddl
push
pop
add
aam
add
mov
testb
fs
rorb
xchg
ljmp
pop
dec
cld
dec
push
inc
in
inc
jmp
push
and
add
sahf
add
add
add
cmc
add
iret
movsb
or
cld
jae
push
push
push
rorl
sbb
sub
mov
xchg
in
pop
es
jmp
in
roll
callw
push
mov
jg
call
movsb
or
cwtl
aam
add
mov
repz
daa
fstpt
push
stos
xor
push
std
repnz
pushf
mov
mov
add
add
mov
sbb
jecxz
dec
nop
fisttpl
dec
xchg
fstpt
push
inc
rolb
sbb
cmp
inc
mov
ss
lods
mov
imul
adc
subb
mov
push
imul
adc
mov
fistl
lea
add
xchg
push
jl,pn
sbb
adc
sbb
shl
repnz
jmp
fwait
ljmp
fldt
imul
xchg
push
mov
jb
mov
aam
adc
scas
jbe
mov
aad
cli
sbb
and
add
loope
xchg
ss
sahf
inc
in
popa
bnd
insl
mov
rolb
add
add
add
fsubr
test
jmp
jns
add
scas
repz
fisttpl
sbb
ret
shlb
les
pop
dec
mov
cmpsb
mov
jmp
sbb
imul
movsl
hlt
call
pop
mov
jle
rorb
adcl
nop
adc
inc
add
add
imul
out
leave
sbb
dec
js
es
cltd
es
add
add
xor
mov
out
mov
aaa
in
fadds
cmp
rclb
sub
push
dec
loopne
lods
or
nop
dec
dec
call
mov
imul
add
mov
mov
inc
int3
out
mov
gs
ret
push
mov
pop
jmp
add
leave
mov
sbb
and
sbb
pop
rolb
shrb
mov
cld
xchg
and
cmpsb
orb
js
push
inc
aad
jmp
dec
and
push
shll
mov
adc
mov
sub
mov
jno
call
outsl
push
or
jbe
jp
rol
mov
outsb
mov
jl
repz
or
xor
add
repz
inc
les
xorb
dec
or
ds
dec
mov
dec
dec
xchg
fcmovnu
sbbb
xchg
daa
ds
loop
lret
repz
fisttpl
add
add
pushf
ljmp
rclb
cli
mov
call
loop
stc
add
adc
pushf
push
mov
mov
sub
fimull
aaa
pushf
add
jge
cli
add
xchg
aad
fcmovne
add
shrl
mov
cmc
xorb
and
add
sub
in
ficoml
stos
add
add
add
or
cmc
fcmovnu
add
roll
cmpsl
ret
jmp
addb
bound
or
push
cld
ds
adc
xor
mov
popf
lret
fldt
test
push
out
xor
cmpsb
mov
push
inc
sub
ja
lods
sbb
lock
add
fildl
sarl
or
mov
mull
add
pop
xchg
push
inc
cmpb
mov
iret
jg
loopne
add
out
inc
call
in
iret
jg
loopne
add
sbb
or
push
pop
add
out
pushf
jo
push
dec
xlat
mov
jbe
or
and
jmp
sbb
add
add
add
pop
lods
in
xor
push
repnz
cmp
add
fs
jne
dec
xlat
push
jo
call
mov
sub
mov
out
add
hlt
call
cmp
jge
mov
clc
mov
jnp
hlt
cmp
icebp
jecxz
xor
mov
jbe
jge
xchg
add
add
sti
push
add
loopne
sbbb
add
test
inc
enter
jp
rorb
add
mov
mov
push
loopne
call
add
clc
fistl
inc
xchg
xor
jecxz
loope
ljmp
int3
push
push
addb
subb
out
add
add
fucomi
add
fucomi
xchg
iret
jmp
fcmovu
ljmp
sbb
and
sbb
mov
jmp
mov
jle
add
fcomi
jg
add
push
xchg
add
fistl
add
push
cld
add
pop
jbe
mov
std
add
lret
ljmp
add
sub
jmp
mov
cld
cld
cmp
jmp
imul
jmp
mov
test
xor
cld
jmp
mov
cli
cld
cmp
and
add
cld
aam
int
jmp
xor
ljmp
jo
fs
sbb
mov
add
push
sti
cld
add
push
xchg
dec
aaa
ljmp
pop
in
or
add
and
adc
jne
bound
mov
jl
fiaddl
adc
xchg
adc
push
outsl
sbb
mov
mov
dec
lcall
mov
and
aaa
and
fiadds
test
xor
test
adc
incl
add
cmp
arpl
xchg
fiadds
fstps
movl
test
or
outsl
pop
nop
mov
sahf
add
test
jge
mov
xchg
xor
jle
xor
mov
pop
cmp
ss
std
imul
lea
mov
ficompl
add
inc
mov
mov
pop
or
sbb
arpl
ret
jge
inc
lea
cmp
clc
pop
xor
jg
repz
jp
sbb
hlt
stos
fistl
push
add
test
pop
jne
leave
xlat
mov
add
fucomi
jmp
mov
loop
mov
add
ret
pusha
dec
add
add
mov
fs
add
roll
fdivl
andb
push
ds
cmpsb
jmp
xor
add
mov
dec
std
data16
or
mov
lret
ret
pop
jp
mov
rdtsc
test
bound
push
fisubrs
lds
call
mov
add
inc
insl
jecxz
inc
out
inc
lahf
cmc
insb
jg
cld
fdiv
lods
lret
hlt
or
bound
sbb
mov
arpl
loope
and
mov
cmpsl
mov
orb
and
test
movsb
xor
cmp
add
fs
fisttps
call
dec
mov
roll
add
add
add
and
test
rclb
imul
add
mov
test
decl
fs
call
push
in
or
pop
or
stos
psubsb
cmpsl
cmp
fcmovnu
add
pop
inc
mov
lods
ljmp
outsl
sbb
add
add
pop
jbe
mov
add
sbb
movsl
out
add
or
xchg
ret
mov
std
jge
mov
fldenv
add
cmp
mov
xchg
cmp
add
test
push
mov
dec
inc
cmp
add
sub
or
mov
add
insl
xchg
xor
in
dec
add
jns
mov
lret
xor
dec
jne
jno
jno
pop
mov
xchg
clc
add
bnd
mov
fildl
std
pop
sbb
dec
data16
add
fldt
shlb
mov
fucomi
add
sahf
pop
add
lods
insl
dec
add
add
add
sbb
popa
dec
sbb
add
ljmp
scas
inc
cmc
mov
and
mov
mov
pop
add
int3
shl
outsb
ret
push
enter
add
cmp
pop
fstps
jg
mov
ds
inc
adc
fs
cmp
cld
testb
jmp
add
add
inc
mov
hlt
jbe
insb
push
std
hlt
pop
cld
pop
push
mov
pop
cli
mov
call
mov
fcoms
clc
outsb
push
jo
out
call
jmp
bound
enter
push
mov
adc
mov
mov
add
add
mov
cmp
xchg
filds
mov
add
sbb
or
xor
add
xchg
or
xor
or
aam
jne,pt
enter
sub
inc
cmp
mov
jecxz
add
dec
lock
add
test
rorl
in
sahf
add
je
pop
mov
mov
add
mov
jb
incl
add
ss
cmp
or
mov
loopne
inc
mov
mov
mov
adc
add
xor
sti
jecxz
les
pushl
add
in
add
dec
jns
mov
dec
in
inc
mov
std
xor
xor
jne
mov
and
icebp
test
add
out
clc
jo
fnstsw
push
add
mov
push
jnp
out
inc
mov
xchg
syscall
ss
push
jnp
adc
push
fcmovu
ljmp
add
out
mov
add
fs
add
rorl
adc
or
je
out
add
popl
pop
push
int3
dec
mov
aad
mov
mov
icebp
aad
iret
fwait
ljmp
cmpsl
loop
jg
popa
dec
or
cmpsl
outsl
add
mov
pop
js
add
add
pop
sbb
jp
lods
cld
cltd
xchg
pushw
jmp
push
ret
gs
cli
jmp
fnstcw
icebp
in
push
pop
icebp
out
xlat
sub
lock
fldl
add
insl
mov
cld
fwait
xchg
mov
fistl
add
jmp
sbb
jns
mov
ja
jmp
xchg
sbb
lods
inc
lock
faddl
test
add
arpl
add
dec
fistpl
stc
repz
fisttpl
add
lcall
add
or
add
add
jnp
and
fs
mov
add
and
fcompl
jmp
aam
fisttpl
call
je
push
aas
aad
call
xchg
lea
jnp
mov
call
xor
xor
inc
jmp
add
xor
je
jg
fcmovnbe
aad
ljmp
les
and
cmpsl
cmc
enter
add
inc
jg
testb
jne,pt
imul
mov
mov
jl
adc
out
out
add
push
inc
xor
cmp
testb
cwtl
adc
fldt
add
add
addr16
inc
pop
std
je
add
mov
xlat
gs
in
mov
pushl
pop
mov
fucomi
mov
lret
lret
mov
xchg
fucomi
out
lret
cmc
lret
in
fsubl
or
testb
addr16
jmp
out
add
xchg
mov
add
xchg
mov
xchg
outsl
push
vunpcklps
add
add
loop
dec
movl
fisttpl
pop
ret
fdivrl
aad
xchg
or
rcr
jmp
mov
fmuls
out
dec
xor
pop
stc
jmp
fisttpll
fdivrl
in
jbe
xor
lea
jmp
add
adc
add
add
add
lcall
push
loope
mov
clc
movaps
fisttpll
mov
push
add
add
xor
mov
test
enter
add
in
lcall
xlat
add
popa
pushf
aad
imul
std
jmp
lea
pop
mov
cld
push
add
aam
cld
adc
daa
sbb
lea
sub
call
adc
lea
ret
cld
pushl
add
or
pushl
adc
or
push
call
adc
add
adc
mov
jg
cmp
mov
mov
jp
mov
adc
add
scas
cltd
leave
incb
add
add
sar
in
leave
ljmp
adc
out
add
rorl
fnstcw
push
je
mov
xchg
or
stc
dec
fldenv
push
aam
mull
add
jne
and
mov
fistl
mov
fldt
test
push
popf
fsubr
call
cmp
div
xor
leave
pop
out
out
pop
jo
addb
pop
xor
outsl
cld
pop
mov
mov
ss
cli
or
outsb
add
mov
insl
xchg
fsubp
adc
push
lods
mov
fildl
push
in
push
and
js
negl
add
and
fcmovbe
push
sub
and
cmp
jbe
js
add
xor
add
mov
add
jnp
xor
sub
cltd
jmp
push
aad
cmpsb
subb
xchg
addr16
mov
faddl
bound
cmp
ljmp
mov
add
sarl
out
aas
cwtl
stc
leave
pop
int
stos
mov
outsl
adc
je
pop
jns
add
add
jecxz
pop
xchg
cmc
add
icebp
add
dec
sarl
inc
add
test
add
fistps
cld
test
punpckhdq
jge
mov
push
and
test
fistps
inc
clc
add
cmp
pop
enter
faddl
mov
fs
lock
sub
add
negl
cmp
cltd
aas
mov
jmp
stc
add
add
cwtl
add
loopne
or
int
cli
sub
call
inc
cmp
outsl
jecxz
mov
or
inc
fiaddl
add
testl
add
xor
mov
add
dec
cmc
cmc
cmp
add
loopne,pt
incl
sbb
adc
add
mov
hlt
pop
test
lock
mov
add
shl
inc
mov
std
lea
mov
lret
enter
mov
int3
jnp
push
ficompl
cmpl
pop
sbb
mov
xor
inc
mov
jecxz
mov
sub
push
mov
xlat
inc
add
xor
add
arpl
outsb
js
out
sub
add
add
pushf
ret
inc
jno
push
cmp
cmp
jge
addr16
movsb
and
jae
cmpsl
fldt
rcll
out
ret
rcll
add
stos
add
jecxz
cmp
aam
sub
inc
xor
fsubr
sub
ret
pop
movsl
xchg
add
stos
push
xchg
stos
aaa
xchg
add
push
dec
dec
test
cmc
outsb
in
add
add
inc
mov
icebp
inc
dec
sub
in
inc
sarl
cld
scas
jg
jbe
in
push
cmp
push
xchg
sub
cld
jle
jno
out
and
push
push
adc
jmp
test
push
inc
add
call
clc
int3
call
push
int3
call
test
orb
add
cld
xchg
cld
test
negb
add
jmp
test
adc
add
test
pop
js
push
lods
or
push
aaa
pop
mull
sbb
dec
dec
sar
jne
push
lock
scas
pushf
stc
pop
mov
lret
fcoms
jo
inc
sbb
push
sub
sbb
mov
dec
push
jns
mov
xlat
cmpl
aad
add
mov
repz
cmp
cli
mov
cld
cmc
fidivrl
mov
ljmp
inc
dec
mov
cmp
jae
add
cmp
add
mov
clc
cmc
mov
inc
movsl
ret
jl
cld
sti
mov
incl
add
and
mov
call
cmc
std
inc
lods
jmp
add
cld
jge
mov
in
clc
mov
pushf
in
pop
mov
fldt
dec
shll
lret
push
dec
add
repz
push
mov
push
cmpsb
pop
movsl
loope
dec
aad
jmp
jp
pushf
xchg
test
jmp
add
push
push
cs
leave
ret
pop
dec
mov
scas
jo
movb
cmp
int
cmp
push
sub
bnd
ja
mov
rcrb
jmp
push
fcomip
fimull
add
jecxz
movsb
xchg
test
jnp
stc
add
cwtl
sbb
loope
add
inc
loope
jge
loopne
insl
xchg
inc
and
jg
cmp
cld
cltd
mov
sbb
jmp
sbb
rcll
call
adc
cmp
mov
iret
mov
mov
leave
adc
nop
stc
ret
addr16
sbb
mov
fisttpl
add
std
jmp
push
jle
add
add
add
in
and
fstps
outsb
enter
inc
call
xchg
faddl
mov
xor
jecxz
addr16
push
jbe
mov
pop
add
or
pop
pop
pop
rcrl
jl
push
pop
mov
repnz
cmp
cld
adc
xchg
adc
push
test
push
push
push
add
add
fwait
add
imul
mov
stc
in
mov
subb
pop
sti
cs
add
incb
mov
ficomps
idivb
mov
or
push
adc
mov
pop
jl
hlt
ss
icebp
iret
std
mov
xchg
and
sbb
add
test
test
mov
add
in
mov
call
ds
mov
fmull
mov
inc
xchg
pop
mov
or
pop
sub
mov
repnz
pop
jecxz
xchg
in
aaa
int
cmpsb
mov
push
scas
mov
xchg
ficomps
xchg
pop
in
ss
pop
mov
add
data16
mov
rcrl
imul
cmp
mov
ret
cmp
or
ret
jmp
mov
fisubrl
lds
cmp
cmp
jmp
jle
cld
aam
divb
and
stc
push
ret
repz
mov
pop
loop
mov
add
ret
das
lcall
std
push
into
jmp
pop
repz
stc
cmp
fdivr
jmp
leave
mov
fmull
movb
xlat
add
pop
fldl
push
push
sahf
int
adc
rcll
xor
add
mov
mov
dec
jbe
out
add
xchg
add
add
mov
inc
aam
rorl
adc
cmpsl
int3
lcall
adc
jecxz
call
add
xchg
pop
mov
sub
sub
leave
push
mov
dec
inc
clc
jmp
dec
aad
insl
mov
fstpl
sbb
mov
push
dec
cmp
mov
fadds
push
mov
add
and
mov
push
jge
add
ret
mov
add
sub
mov
add
aaa
mov
shrl
test
mov
inc
sbbb
mov
add
movsl
lds
in
into
in
mov
or
int3
push
call
cmp
add
les
add
push
mov
shrb
ljmp
jg
jmp
mov
out
leave
push
or
cmp
mov
ljmp
mov
pop
jp
mov
ljmp
adc
out
mov
out
mov
cmp
movsb
adc
movsb
addr16
sub
lret
xchg
xor
add
add
mov
cltd
test
mov
push
xor
ret
ficompl
xor
push
gs
add
or
in
jecxz
sbb
sub
adc
gs
cli
bound
xor
add
jbe
mov
add
fucomi
mov
movsb
jecxz
ljmp
jle
add
add
call
cld
push
iret
add
ljmp
add
xor
jmp
int
cld
jl
fidivl
movsb
fistl
sbb
jmp
mov
fldl
add
bnd
add
add
mov
add
cld
adc
cmp
jmp
or
or
add
add
xchg
jg
sbb
push
out
hlt
or
add
inc
mov
pop
mov
fpatan
shl
add
adc
cmp
in
jne
das
in
fistl
add
or
fadds
test
adc
sar
pop
in
faddl
or
cmpsl
sub
adc
mov
into
incl
jge
add
femms
mov
add
mov
lcall
xchg
jb
inc
mov
add
incl
inc
cmp
sbb
inc
idiv
ljmp
pop
mov
push
div
jl
rol
dec
mov
adc
movsl
lret
mov
mov
add
lcall
xchg
mov
xor
adc
add
add
ret
notl
mov
pusha
aam
rcl
stos
shr
add
ret
mov
mov
dec
out
stos
xor
call
stos
sub
call
stos
and
call
mov
mov
sub
repz
cltd
out
movsl
mov
sbb
rcl
mov
shlb
call
sbbb
add
cs
das
fsts
adc
neg
ljmp
fildl
jmp
cmc
call
or
mov
xchg
inc
add
sbb
xchg
sub
bnd
sarb
out
cmp
add
mov
sub
movsl
call
add
add
pushl
test
aad
shl
in
jmp
sub
jl
mov
mov
xchg
lds
add
int
js
fists
or
add
jnp
adcb
insb
or
lahf
dec
inc
push
mov
loopne
std
je
pop
std
adc
scas
mov
repz
add
pop
mov
and
sbb
dec
fdivl
in
imul
arpl
push
sub
add
pop
js
or
ljmp
rolb
jbe
mov
sbb
addl
jl
add
cld
test
or
mov
mov
push
pushl
add
mov
stos
xchg
mov
adc
lods
ficoms
xchg
jge
mov
add
adcl
dec
and
bnd
fldcw
add
mov
and
movb
mov
sub
add
cmp
in
test
add
sub
call
fistl
std
fistpl
cmp
notl
pop
gs
add
jmp
hlt
inc
cltd
out
push
mov
pop
fdivl
mov
fists
mov
adc
add
xchg
push
stos
dec
ss
fwait
aaa
loope
andl
test
add
popa
cmp
pusha
out
out
xor
stc
fsubr
jp
div
pushf
jo
lcall
add
add
sti
add
mov
cli
jmp
cli
mull
rorl
mov
adc
pop
shlb
fidivs
mov
mov
mov
push
dec
aad
in
negl
xchg
fwait
loope
call
outsb
pusha
inc
int
sub
in
push
pop
push
fisubrs
and
inc
test
sar
push
je
in
mov
dec
fidivl
fldt
frndint
jo
jne
dec
xchg
fisttpll
push
stos
repnz
push
fisttpll
cld
push
daa
ljmp
push
dec
cld
in
loopne
cmp
and
sub
lret
sbb
push
cmpsl
adcb
add
add
fstpt
ret
lock
add
sti
ss
push
add
mov
mov
fildl
dec
fmull
or
mov
push
in
les
mov
mov
dec
jae
dec
push
inc
inc
mov
orl
testl
add
ja
mov
mov
into
mov
add
cmpsb
cld
xor
ds
incb
js
push
cmc
lds
mov
ljmp
out
std
add
mov
movb
add
ret
inc
xlat
popf
addb
mov
sarl
inc
adc
sub
mov
ljmp
iret
xor
mov
movsl
scas
add
add
xlat
mov
push
sbb
pop
pushf
cs
add
into
iret
sbb
js
cld
mov
inc
movsl
jbe
aaa
sbb
jns
adc
mov
adc
mov
icebp
pop
push
inc
adc
outsl
mov
ficomps
rcll
lods
scas
aad
inc
adc
lods
jnp
stos
inc
aam
sarl
std
and
add
repz
jbe
cmp
call
push
pop
and
sbb
sbb
jae
ficomps
pushf
or
daa
pop
push
push
mov
pop
or
test
inc
ret
popa
jo
inc
out
push
jmp
push
rcrl
inc
or
mov
jo
lds
add
sti
jne
mov
repnz
mov
sbb
in
pushf
fiaddl
jmp
add
add
sub
push
out
add
sbb
xor
sti
cmp
mov
inc
and
out
das
shrb
push
jae
adc
es
repz
nop
pop
mov
inc
js
cmp
es
mov
pop
cli
xor
loopne
mov
add
and
sbb
pop
add
add
xchg
push
ret
xchg
shlb
mov
shlb
mov
mov
adc
wrmsr
div
and
lret
add
addl
jae
cmpl
out
mov
inc
or
cmc
mov
mov
add
out
or
js
push
movsl
cli
stc
add
shll
add
push
clc
push
mov
push
add
pop
movb
dec
inc
and
stc
inc
or
shll
mov
or
stos
cld
or
ret
mov
add
jmp
xchg
jno
sub
mov
sbb
push
jb
pop
test
mov
call
add
fistl
fucomi
push
mov
rclb
jmp
fwait
test
add
lret
mov
test
pop
sub
push
sub
inc
mov
popf
out
add
pop
loopne,pt
pop
fwait
mov
cmpsb
add
push
lock
jle
push
cmpsb
ret
scas
movaps
xor
xor
push
scas
xchg
call
add
add
popf
jbe
jmp
lret
cld
jmp
dec
sbb
sar
inc
jmp
nop
mov
leave
jmp
in
fildl
jmp
adc
push
leave
jmp
insb
jle
pop
jb
sbb
inc
sbb
jmp
sbb
ljmp
fsts
add
add
lods
pop
js
imul
lea
inc
adc
lea
cmp
std
adc
pop
pop
js
imul
inc
aam
inc
jo
notl
je
sbb
add
add
xchg
lds
xchg
fstl
xchg
inc
in
inc
fs
aas
mov
movl
add
loope
xchg
inc
inc
add
inc
jo
or
lea
lcall
lea
inc
call
mov
ds
mov
out
pop
cli
out
sbb
repz
ljmp
js
leave
mov
push
push
jae
ja
loope
inc
add
or
jno
mov
icebp
incb
add
lcall
add
dec
inc
call
stos
dec
call
mov
out
mov
test
cmpsl
dec
ss
cwtl
outsb
fucomi
add
push
insl
hlt
sub
mov
loope
mov
je
and
fildl
icebp
pop
mov
add
enter
push
and
xorb
cmovns
stos
add
fldl
shr
add
sbb
jbe
lcall
arpl
movsl
test
pusha
sub
int3
pop
insl
hlt
imul
push
xor
cmc
ss
call
sbbl
imul
pop
daa
je
sarb
hlt
jns
cltd
add
in
add
add
loope
daa
sbb
jmp
cmpsl
js
add
sbb
outsb
pop
pop
icebp
es
aaa
fcompl
jle
push
sti
jle
pop
push
movl
icebp
mov
fidivrl
add
jle
mov
fxch
ret
push
mov
pop
loopne
out
or
push
icebp
push
add
add
sbb
push
push
mov
call
cwtl
lahf
jo
push
out
add
xor
in
add
mov
or
adc
add
xchg
inc
and
filds
inc
clc
int3
cld
mov
cmpb
mov
mov
cli
jnp
xchg
pop
js
xchg
jbe
pop
in
adc
xchg
adc
lods
fmull
add
add
mov
pop
sub
push
pop
inc
mov
mov
mov
fimuls
and
jl
add
jb
add
mov
inc
fnstcw
add
lret
add
pop
add
sbb
scas
jb
mov
jo
ja
or
shr
ret
push
ss
test
mov
lods
imul
add
dec
xchg
push
imul
mov
mov
filds
je
sbbb
test
pop
iret
sti
xchg
dec
jmp
data16
div
pushf
cmpsb
out
shr
add
cmp
add
mov
mov
call
sub
cmp
add
les
call
pop
fucomi
test
into
add
sti
add
add
add
add
sub
xchg
dec
divb
aad
repz
lret
or
mov
fildl
imul
js
jmp
cltd
inc
int
ret
in
pushf
fildl
xchg
mov
aas
add
cmp
es
int
inc
or
xor
or
add
shll
xor
cmp
sub
mov
ret
cmp
add
popa
jmp
fcmovnb
gs
add
mov
mov
aam
adc
mov
add
add
sbb
sbb
and
push
jo
nop
xchg
inc
and
cmp
rcll
int3
sbb
pop
mov
out
add
add
cmovo
jo
popl
cld
pop
ret
add
and
inc
in
inc
and
dec
inc
and
insb
inc
and
push
je
stos
ret
inc
add
ret
inc
shlb
xor
inc
add
dec
dec
and
add
scas
icebp
dec
and
add
xor
and
mov
jae
movb
cltd
sahf
xor
nop
xchg
inc
mov
jb
cmp
lret
std
xor
stos
pop
loopne
mov
test
mov
or
add
adc
xchg
pop
stos
add
add
mov
push
add
add
in
ret
mov
stos
jle
add
push
test
ja
jmp
xchg
out
repnz
fsubs
xchg
add
sbb
add
negl
inc
mov
sbb
lods
sbb
ljmp
fcmovnbe
test
mov
out
sbb
add
adc
jg
out
mov
add
add
fucomi
stos
and
call
cs
cmc
out
sbb
mov
repz
mov
fisttpl
int
push
mov
mov
sbb
insb
vsqrtss
movsl
negl
fwait
push
dec
add
mov
mov
frstor
arpl
mov
clc
mov
dec
mov
cmp
add
add
xchg
add
shl
sbb
push
sarl
call
inc
sbb
inc
adc
adc
ss
and
in
and
aas
add
sbb
push
add
xor
jp
sbb
int3
cltd
faddl
xor
mov
push
decl
add
pop
xchg
sti
call
add
add
cmp
adc
and
cmpl
add
testl
xchg
and
cmp
adc
jmp
test
xor
fstpt
add
flds
mulps
std
mov
icebp
add
aas
mov
imul
mov
mov
add
add
mov
and
iret
loope
pop
mov
add
cmp
dec
gs
aad
jb
inc
and
das
jae
pop
adc
sbb
push
mov
push
push
mov
leave
xchg
lock
mov
add
push
clc
fidivrl
cmpl
jge
xor
enter
mov
pop
xor
add
add
mov
fucomi
add
lcall
add
cmpsb
pop
cmpsb
repz
xchg
mov
add
aad
lcall
adc
scas
call
out
add
fwait
or
inc
xchg
xor
push
out
xchg
into
addl
loope
cmp
mov
adc
fiadds
add
sbb
ljmp
out
lea
ds
push
inc
cmp
imul
iret
cmp
pop
inc
inc
es
dec
adc
repnz
mov
sarb
push
jns
sti
add
lret
jmp
inc
xor
mov
mov
add
fs
add
add
sub
jl
les
inc
mov
or
inc
mov
add
pop
sti
add
jmp
orl
jae
in
cld
adc
outsl
jbe
fcmovnbe
sti
mov
pushf
lret
push
cmpl
jne
addr16
jecxz
add
cmpsl
sti
call
das
push
out
or
jmp
addr16
and
add
add
xlat
inc
xchg
in
cld
adc
dec
mov
inc
push
xchg
cld
lret
push
push
call
xor
adc
push
add
dec
jmp
add
and
jne
or
pop
inc
decl
add
les
add
sub
test
mov
add
jae
mov
mov
enter
jae
add
addb
or
dec
sahf
cld
stos
sbb
call
inc
add
inc
inc
jns
cmp
xchg
push
sbb
mov
mov
mov
rcrl
jae
adc
imul
leave
icebp
bswap
fldt
add
xchg
inc
aas
mov
sub
add
repnz
fwait
sub
add
add
and
das
iret
or
fistpl
ret
rcll
test
mov
out
sub
shll
addb
ljmp
shr
add
fisubrl
std
sahf
dec
stos
add
loope
stos
sub
call
sarl
add
add
add
sbb
jmp
bound
fdivrs
inc
int
jmp
mov
fisttpl
fwait
mov
sub
out
aaa
aam
jbe
lret
mov
fists
fcmovnu
call
jl
add
jl
mov
mov
xor
lods
or
add
sbb
cmc
aaa
sbb
icebp
inc
sbb
in
inc
sbb
add
add
bound
sbb
mov
jo
fildl
fdivrs
add
adc
std
decl
fists
jmp
dec
sarl
aas
xchg
xchg
arpl
lea
ljmp
test
sbb
add
add
sbb
fcomp
add
insb
adc
add
jmp
push
mov
xlat
mov
test
pop
ss
ret
jmp
nop
mov
inc
inc
mov
les
nop
xchg
add
call
imul
or
clc
jmp
scas
test
jge
testb
add
adc
les
dec
lods
push
out
bound
push
add
inc
sub
mov
adc
jge
ret
or
add
dec
add
mov
out
ret
push
add
fsubrl
repnz
and
ficomps
ljmp
or
loope
pushf
jle
icebp
mov
scas
clc
push
mov
push
stc
jae
iret
jle
add
js
lret
xlat
push
jmp
mov
jecxz
mov
loop
ljmp
fstpt
int
adc
aad
ljmp
pop
or
mov
test
out
into
std
jecxz
hlt
lock
xor
sub
fwait
cli
fucomi
add
lcall
inc
lret
cld
es
scas
inc
lds
jne
xchg
ret
lods
jmp
add
add
fisttpl
jmp
rcr
addr16
pop
adc
lret
xchg
and
in
sbb
cli
inc
pop
shr
je
loope
or
pop
ss
jmp
lahf
test
or
mov
push
xchg
xchg
call
vorps
pop
in
cmp
inc
mov
push
xlat
ret
push
mov
and
psrad
push
ss
push
xor
add
mov
add
push
hlt
push
push
push
hlt
push
push
mov
ss
and
mov
aas
and
push
mov
adc
addr16
imul
and
mov
mov
test
pop
and
sahf
jo
movsl
dec
ljmp
add
movsb
fisubs
fs
mov
jo
sub
scas
adc
lret
test
push
add
inc
add
sub
inc
mov
loope
xor
xchg
out
jp
add
in
inc
add
and
pop
decb
cmp
jmp
out
jmp
cmp
jmp
xchg
rolb
mov
add
add
in
jp
jmp
add
fldt
fxch
pop
mov
pop
clc
aaa
sbb
clc
aas
sbb
hlt
lcall
mov
jo
mov
fs
jp
pop
add
scas
fcomps
shll
cmp
mov
shl
xchg
fistpl
aaa
pop
jecxz
sti
mov
popl
fldt
add
repz
pop
xchg
mov
mov
dec
aad
add
ds
ljmp
cld
push
testl
sarl
mov
add
jl
add
pop
cli
mov
outsb
mov
popa
sub
add
push
mov
jne
mov
xchg
pop
jo
xlat
mov
inc
lcall
sbb
mov
cli
incb
pop
mov
test
andb
sub
mov
xchg
xor
std
add
push
mov
jmp
xor
hlt
add
add
xor
and
pop
leave
jecxz
cmp
jo
test
and
pusha
sub
pop
pop
adc
dec
aam
xchg
dec
aam
pusha
fistl
rcl
add
test
pusha
jne
and
cmp
cltd
lcall
out
inc
adc
cltd
or
mov
cmp
cli
fadds
lds
push
add
add
fadds
les
ljmp
pushf
jmp
xchg
add
jne
cmp
mov
mov
sub
arpl
add
mov
ret
ss
mov
aas
mov
addl
fnstsw
add
push
adc
leave
ret
sbb
add
jo
jge
popa
mov
add
cmp
push
add
add
add
cwtl
repnz
std
imul
push
nop
xlat
movb
rorb
fsubrs
jg
adc
scas
fistl
shl
xlat
inc
mov
sbb
adc
jmp
mov
in
xchg
sbb
rol
adc
ficoml
mov
sbb
into
add
add
ret
sbb
cmp
ljmp
mov
jmp
adc
jp
lret
inc
out
jmp
jmp
out
aad
rcl
jbe
add
rolb
xor
jmp
rol
sahf
push
adc
loope
push
mov
out
pusha
jle
and
ljmp
sub
std
xchg
add
add
sti
inc
inc
pop
shll
jle
mov
in
add
pop
inc
xor
inc
xchg
in
daa
setbe
daa
push
fimuls
xchg
jne
lods
pop
inc
add
out
call
rorb
inc
in
mov
jne
sbb
sub
jle
fucomi
rclb
or
mov
sti
sub
xchg
nop
aaa
xchg
jo
test
jo
push
inc
in
cld
adc
out
or
xchg
mov
push
push
fimull
call
adc
pusha
hlt
call
orb
jg
add
fcoml
and
add
and
sti
jne
xor
mov
cltd
jl
imul
add
mov
lods
mov
orl
mov
mov
sub
xor
mov
mov
and
cmp
add
fwait
cwtl
mov
data16
out
int3
push
cld
dec
leave
jl
leave
dec
test
jge
mov
push
or
add
and
stc
mov
fstpt
mov
pop
mull
adc
pop
loopne,pn
or
pop
lret
ljmp
lret
insl
inc
cltd
sti
cmp
and
adcl
push
es
or
mov
repnz
mov
mov
das
sti
xchg
xlat
inc
adc
ja
inc
add
add
mov
es
addb
push
xchg
pop
fadds
test
jge
fdivr
aam
lret
inc
jmp
xor
mov
movsl
cmpsl
cld
sbb
mov
imul
lods
rorl
xchg
cmp
and
sbb
insl
add
add
test
xor
pop
neg
mov
addb
mov
xchg
dec
xor
repnz
cs
mov
mov
sub
add
push
ljmp
stos
cmp
cltd
pushf
jo
pop
fadds
mov
xchg
in
fildl
lea
pop
sti
xor
pop
leave
add
add
fildl
mov
and
add
out
call
in
call
mov
pop
mov
inc
jecxz
sti
je
fisttpl
push
add
add
psubw
add
mov
loop
mov
mov
notb
mov
cld
mov
outsl
test
or
jnp
mov
jl
ret
sub
sbb
test
mov
imul
hlt
xchg
mov
sti
in
mov
mov
jge
imul
repz
shll
or
hlt
cmc
xchg
jl
inc
jle
xor
adc
fldt
add
add
mov
sbb
jmp
jnp
pushf
mov
aad
and
mov
sahf
sub
push
sub
sbbl
dec
mov
test
loop
movsl
push
sub
xor
or
pushf
cli
aam
xchg
fs
cltd
repnz
cmpsl
mov
cltd
loop
lock
push
test
pop
aad
add
add
mov
stc
iret
call
cltd
sub
cmpsb
push
es
rol
movsb
mov
das
adc
call
test
scas
pop
leave
mulb
movsb
push
sbb
push
adcl
push
xchg
sub
loop
ja
or
call
inc
add
mov
add
aas
adc
sub
adc
add
movsw
cld
cmpsw
cs
into
push
xchg
aas
movsl
cld
mov
inc
adc
pusha
xor
clc
fsubs
jmp
pop
dec
lea
dec
call
mov
xchg
fcoml
inc
stc
add
inc
adc
lods
or
mov
xlat
call
add
add
adc
mov
mov
lea
cmp
loope
push
loope
add
negl
add
setnp
andl
loope
dec
jmp
jmp
xor
daa
inc
mov
bsr
jmp
sbb
mov
inc
or
int3
dec
cmp
mov
xchg
cld
gs
push
add
add
inc
std
xor
pusha
out
dec
incl
adc
out
jle
cmp
add
mov
inc
or
ret
es
test
test
mov
out
jle
in
cmp
decb
fcmovnu
jne
fwait
push
pop
xlat
fwait
or
sarb
jmp
add
add
push
lods
addr16
pop
pop
or
add
fwait
jecxz
or
ljmp
lret
cmp
and
jmp
push
sub
aaa
ljmp
int3
mov
fsubr
xchg
shrb
mov
xchg
in
push
inc
jp
add
daa
sti
inc
stc
arpl
add
fiadds
jmp
add
add
pop
mov
test
jmp
je
dec
jb
iret
adc
mov
fisttpl
xor
dec
out
inc
ds
mov
xor
je
xchg
adc
cwtl
push
faddl
gs
test
rcr
push
cltd
xor
lock
mov
stos
ret
push
std
jmp
add
add
ss
movsb
rorb
xchg
aas
pusha
or
movsb
push
jge
mov
add
popa
je
add
sbb
test
add
int3
mov
std
jmp
inc
mov
clc
call
xlat
add
faddl
jp
rcll
inc
fmull
sti
add
add
sbb
cld
adc
pop
pop
jno
sub
cld
call
jmp
cmp
fmul
or
outsb
push
dec
lea
enter
mov
jl
cmp
ja
test
cmc
jb
rclb
test
dec
mov
add
enter
xor
fwait
xor
pop
mov
mov
cmp
add
out
jl
inc
ljmp
inc
movsl
add
or
push
test
push
out
icebp
add
xlat
xchg
jno
add
xchg
add
or
mov
addr16
mov
movsl
jmp
rclb
movb
mov
ljmp
add
icebp
addl
fsubr
xor
movsb
fadds
sbb
add
sti
in
add
push
popf
pop
cwtl
push
movsb
add
lods
inc
jp
inc
rcr
lret
mov
fadds
mov
xchg
and
add
popf
ljmp
push
add
push
fs
cld
cmpsb
mov
std
hlt
fcmovb
inc
jmp
add
add
fadds
jmp
xor
adc
push
test
jle
test
mov
mov
push
icebp
cld
inc
lds
cmp
cld
ss
daa
push
pusha
push
sbb
es
sahf
fldenv
icebp
cld
push
xchg
mov
push
mov
pop
stc
divb
fldt
mov
pushf
ss
add
add
xlat
mov
mov
pushf
repz
add
movsb
and
das
lods
add
dec
stos
in
cmp
idiv
cmp
add
fmuls
in
fistl
and
and
fldl
mov
sbb
add
mov
dec
test
and
jmp
lret
stos
add
add
add
xor
shlb
push
mov
jbe
mov
repnz
int3
mov
lcall
jp
jne
mov
sub
add
or
shlb
or
jp
push
in
jnp
push
jns
push
xor
mov
in
roll
add
xchg
or
ds
decl
aas
jne
add
icebp
jp
mov
loop
push
inc
jns
add
ud2
mov
faddl
js
lcall
out
inc
test
repnz
jle
lcall
mov
xchg
mov
ljmp
adc
ljmp
add
mov
pusha
add
pop
adc
jns
mov
cmpsb
lcall
dec
lcall
mov
cwtl
and
adc
mov
adc
fwait
adc
jno
push
add
imul
sub
adc
shr
es
call
add
add
add
pop
mov
mov
call
add
ret
jo
or
adc
push
pop
cmp
cld
data16
movsb
out
hlt
add
mov
fnstcw
mov
pop
or
faddl
jmp
icebp
loope
sbb
imul
xchg
mov
nop
cld
repz
add
add
add
sbb
push
xchg
add
cld
add
add
int3
movsl
scas
dec
mov
adc
call
adc
sub
pushf
cld
test
sub
int
mov
and
mov
or
push
gs
lea
mov
aad
jne
push
ret
sub
outsl
fucomip
adc
call
adc
dec
lock
adc
add
add
lods
in
mov
add
jae
mov
jbe
inc
iret
xor
ljmp
inc
mov
add
or
sub
test
inc
jbe
pop
mov
test
insl
jbe
in
cmp
add
xchg
ss
mov
stc
add
ds
add
add
sub
inc
or
push
es
push
aad
push
add
into
jbe
mov
ret
and
jo
out
adc
fs
xchg
add
push
jmp
xorl
addr16
out
sarl
pop
cmp
inc
cli
pop
lret
fwait
lock
stos
loope
add
add
rolb
mov
mov
icebp
mov
cmpsb
xchg
imul
dec
aam
cmovno
imul
addr16
lock
std
es
add
mov
add
mov
pop
adc
push
pop
fildl
gs
test
fildl
jb
movsl
mov
xchg
cld
out
leave
fdivrs
sub
add
fidivl
dec
pmaxsw
mov
in
je
xchg
cld
sahf
call
lret
or
mov
mov
xchg
cld
jbe
in
test
mov
ret
mov
popa
jle
jbe
push
sar
sti
xor
subl
jne
mov
lea
scas
lea
mov
push
add
add
pop
lea
sti
or
push
pop
fwait
xor
inc
xor
aad
cld
jne
pop
lea
fadd
push
mov
repz
in
call
inc
dec
int
sbbl
gs
xchg
cmp
cld
adcl
lea
fwait
add
or
sti
fistl
sbb
mov
push
addl
add
test
jno
adc
mov
incl
decl
inc
outsl
pop
out
es
add
mov
testl
lea
jmp
cli
sar
xchg
fimull
je
stos
je
rolb
push
lock
sbb
inc
mov
pop
enter
ljmp
ret
or
add
add
push
subb
test
fsubr
add
sub
aaa
xchg
addr16
or
jle
stos
lcall
or
jge
gs
push
and
inc
add
push
ljmp
fnstsw
aad
xchg
push
cld
fimull
jo
data16
or
adc
ret
fsubr
jl
test
or
ljmp
xchg
mov
xchg
jmp
insl
jb
add
call
fildl
jb
pop
sti
pop
dec
fadd
lods
pop
addr16
add
mov
sub
jmp
push
xchg
das
or
mov
xchg
jbe
test
cmc
call
add
add
jp
rcr
push
cmpl
and
add
inc
push
cli
mov
shl
jle
xchg
cld
cmpsb
xchg
mov
adc
add
xchg
test
jmp
add
pop
or
and
xchg
stc
repz
loopne
call
ljmp
repz
dec
fisttpl
inc
mov
inc
cld
add
add
add
add
sti
adc
cltd
pop
jno
xchg
iret
sti
jmp
add
xor
popf
cld
ljmp
hlt
pop
mov
gs
in
shll
testb
mov
fsts
dec
jmp
fsubr
call
dec
pop
mov
mov
bsr
js
cmp
sub
mov
jnp
push
add
add
sub
xor
test
xchg
jl
jae
cmpsl
addl
out
and
add
stc
push
iret
ret
mov
in
add
push
inc
out
pop
into
inc
addl
std
cs
ljmp
and
mov
inc
push
shufps
cmp
add
loopne
fucomi
push
add
add
repnz
pushf
in
inc
cli
xchg
and
add
fucomi
test
fsubr
add
fildl
add
pusha
aam
xchg
push
mov
fucomp
xchg
or
adcl
sub
mov
push
sbb
ljmp
adc
mov
jle
mov
out
rorb
jmp
adc
in
add
add
bound
cmpsl
in
in
mov
add
jbe
cmc
in
mov
roll
push
ficoml
jnp
push
andl
sbb
mov
movq
cwtl
inc
bound
fildl
ret
into
pusha
inc
sbb
dec
shrl
adc
mov
fistpl
xchg
pop
shr
push
pop
out
add
add
pop
test
jge
xchg
inc
testb
std
jmp
outsb
jbe
mov
pop
repnz
lea
es
add
sahf
push
push
mov
cmc
subl
push
or
in
push
cmp
mov
lock
decl
mov
jmp
or
repz
jmp
push
add
add
add
inc
in
scas
mov
push
push
stos
dec
call
jg
adc
stc
in
test
add
jbe
add
push
cld
call
add
inc
inc
mov
jle
mov
pop
je
cld
lcall
cli
shl
cld
rcl
mov
jge
imul
out
add
add
push
addr16
inc
cwtl
addr16
in
pop
cmp
enter
repz
pop
outsl
inc
and
icebp
pop
mov
sbb
ds
ret
mov
divb
cld
lds
and
add
testb
loop
push
push
test
outsb
fcmovnbe
das
enter
add
jge
cmpsl
pusha
xor
adc
add
andl
add
pushf
ds
adc
push
jecxz
stc
mov
out
std
pop
icebp
push
cmp
mov
mov
pop
cmpsb
or
add
test
add
imul
stos
fstp
xor
push
jge
gs
scas
int
add
lahf
das
aad
adc
rclb
stos
add
xchg
clc
and
cmp
add
add
add
adc
icebp
clc
call
push
add
mov
pop
mov
pop
fsts
sub
and
mov
sbb
jb
mov
sub
xor
sbb
cmp
mov
loopne
xor
fwait
add
inc
add
jbe
lcall
xor
add
add
mov
xchg
pop
or
cmp
xchg
push
outsl
pusha
push
xchg
add
lret
jb
pop
imul
das
aam
push
push
outsb
add
adc
pop
clc
aaa
sti
call
mov
jbe
push
jbe
daa
lret
add
fs
mov
clc
call
fstps
jno
in
roll
rcrl
add
pop
adc
add
or
lcall
adc
shr
push
dec
or
jmp
int
pop
inc
xchg
leave
ret
add
inc
mov
or
jg
sarb
test
jl
push
push
sbb
pop
inc
mov
mov
add
gs
inc
mov
jb
xchg
add
mov
add
lcall
adc
movsl
lahf
enter
mov
push
adc
push
adc
jb
cmpsl
shlb
add
pop
and
inc
mov
jb
xchg
test
add
add
adcb
fildl
push
sbb
movsb
es
stos
add
sti
push
ret
outsb
adc
inc
repz
sbb
mov
add
add
out
sub
pop
mov
paddw
xchg
in
sub
cmp
rorl
inc
mov
sbb
mov
push
pushf
sahf
shll
or
outsb
sbb
mov
push
jl
sarl
push
adc
xchg
jmp
jbe
stos
add
add
xchg
dec
test
add
pop
das
pop
test
cld
xchg
dec
xchg
mov
jmp
mov
xchg
mov
mov
xchg
jge
mov
mov
sbb
sub
cmp
movsl
mov
scas
inc
jmp
mov
xchg
mov
inc
jmp
add
add
adc
add
fwait
cld
mov
inc
sub
inc
adc
loopne
push
fisubl
mov
ja
inc
aam
rclb
fisubl
mov
aaa
inc
movsb
inc
add
jb
cld
mov
inc
lock
inc
pop
adc
inc
popf
cld
mov
pop
push
inc
add
add
adc
fbld
mov
imull
push
adc
mov
cmp
mov
jb
jmp
xor
mov
pop
aas
mov
jb
pop
shlb
add
sbb
adc
aad
jb
xlat
test
dec
ret
lcall
stc
aas
mov
add
jb
pop
mov
add
lcall
cmc
aas
mov
jb
cmpsl
leave
mov
mov
sbb
call
ret
lcall
inc
aaa
inc
mov
test
sub
stos
add
sub
lcall
pop
jmp
adc
out
mov
fstpt
add
lods
xchg
testl
add
mov
jmp
pop
sti
sbb
lret
jmp
sub
add
aas
pop
cmp
fcmovnbe
cmp
inc
les
stos
daa
add
dec
mov
mov
mov
into
pusha
mov
mov
jb
stos
popa
mov
mov
bound
jmp
mov
add
jbe
inc
jmp
mov
sahf
push
bound
fildl
test
sbb
fisubs
hlt
add
add
xorl
mov
sbb
pop
cli
jb
sbb
jnp
sarl
push
in
mov
sub
cli
scas
xorl
mov
push
add
inc
jmp
mov
push
inc
add
shll
jge
add
add
mov
sti
mov
rcrl
push
inc
xor
fs
out
or
mov
jp
mov
test
test
es
dec
aam
test
mov
movl
outsl
push
xor
repz
test
pop
movsl
stos
jne
movsb
pop
mov
inc
add
add
repz
int
or
in
add
pop
and
je
insl
fildl
sub
in
pop
xor
mov
test
inc
add
cmpsl
push
inc
mov
flds
cli
jae
fs
addr16
pop
jb
ret
xchg
ret
adc
inc
mov
pop
hlt
mov
add
jno
add
add
mov
dec
xchg
cmp
mov
pop
aaa
push
mov
fwait
iret
or
mov
dec
jp
std
outsl
int3
sbb
imul
add
notb
sahf
jbe
ljmp
push
jecxz
rcrl
cli
pop
mov
push
clc
mov
stos
add
fucomp
add
jg
xor
out
mov
add
jns
insl
fcomps
sub
or
jg
inc
dec
loopne
mov
scas
mov
ljmp
jle
pop
cmp
fucomi
rcrl
stos
mov
mov
mov
in
push
jb
pop
in
inc
mov
mov
cmp
push
mov
cmp
rorl
call
mov
add
shrl
lods
mov
ljmp
or
repnz
mov
fildl
adc
add
addl
add
or
fistpl
jl
mov
aas
jb
in
mov
xchg
fildll
jbe
es
les
movsl
fiaddl
add
add
out
ret
push
push
pop
cld
add
add
or
push
data16
pop
dec
aas
call
cmpsl
lock
sub
add
xchg
hlt
popa
sti
decl
pop
in
stc
fadds
sbbl
rolb
aam
fcmovbe
flds
add
call
je
icebp
inc
add
flds
mulb
jne
sbb
mov
mov
jb
int
dec
push
push
add
pop
ret
sti
or
lret
pop
pop
lret
jb
mov
pop
insl
adc
add
std
int3
dec
sarl
pushf
sbb
loope
push
push
call
push
push
repnz
iret
xor
mov
jns
jae
push
adc
xor
add
add
gs
test
repz
mov
ret
stos
sbb
movb
dec
cmp
jle
imul
ljmp
dec
sub
or
push
repz
ljmp
fwait
sub
enter
ljmp
pop
ds
mov
add
xchg
sub
fidivs
jmp
mov
pop
movl
jne
sub
mov
ss
notb
shll
gs
fisttpll
mov
fucom
mov
dec
push
inc
add
mov
faddl
jmp
mov
add
mov
add
mov
pop
rcll
adcb
add
cmp
push
je
push
inc
ret
inc
cmp
push
jmp
xor
xchg
loope
loope
add
lock
out
cmp
mov
adc
push
fists
loope
cld
push
aam
mov
call
push
mov
add
mov
lahf
cld
inc
out
jmp
xchg
add
inc
cmp
add
test
mov
push
mov
fiadds
inc
jo
inc
call
cmp
mov
sbb
push
sub
adc
pop
push
jno
mov
mov
pushl
fdivrl
xor
add
push
test
stos
mov
cmpb
xchg
inc
addr16
mov
daa
mov
movsl
push
add
pop
mov
push
add
shl
and
ret
imul
mov
or
call
sub
mov
jp
decb
add
mov
js
push
push
jecxz
push
neg
mov
jns
pop
cmp
repz
gs
or
cmp
mov
sub
mov
push
jmp
repz
push
repnz
rcl
xchg
shrb
js
pop
mov
lret
push
xor
sarb
add
or
mov
or
mov
pop
sub
cld
ja
or
add
xor
push
jb
pop
in
test
adc
push
mov
inc
jmp
mov
mov
out
sbb
jmp
push
jae
out
push
jbe
in
sti
ss
inc
loope
sbb
or
adc
add
dec
pusha
rcrl
pop
cmp
mov
xchg
mov
add
inc
outsl
cmp
lods
mov
js
push
dec
push
jbe
jl
mov
fildl
add
adc
imull
inc
sti
push
int3
arpl
das
call
mov
push
cmovge
mov
cld
add
add
mov
rcr
mov
mov
idiv
sub
pop
pop
sbb
pop
call
push
xchg
dec
mov
push
fiaddl
push
leave
pop
cmp
rsqrtps
xor
mov
lahf
js
jmp
shl
jg
mov
pop
jl
add
add
mov
jmp
jge
ror
scas
incb
add
push
insb
scas
insl
cwtl
adc
inc
ret
int3
add
lock
ljmp
push
dec
repnz
movsl
dec
sub
mov
test
jb
push
je
int3
push
dec
leave
pop
inc
je
pop
mov
repnz
push
pop
sub
mov
inc
sti
mov
arpl
pop
int
or
addb
add
cltd
push
jno
xchg
push
or
inc
outsb
fbld
ljmp
lods
jnp
mov
andl
inc
push
rorl
cmp
lret
push
aam
insb
in
xor
not
add
mov
roll
mov
out
lret
je
push
add
cld
cmp
addr16
lods
cmp
add
adc
sub
xchg
add
jl
mov
sub
in
jbe
loope
mov
mov
ljmp
adc
sub
jae
jb
pop
in
gs
or
add
push
mov
mov
enter
in
fildl
jmp
dec
or
sub
add
cmp
or
fildl
jmp
fisttpll
push
std
inc
xor
neg
add
and
mov
inc
mov
add
leave
adc
mov
faddl
cmp
or
add
add
outsl
lcall
aam
push
lea
pushl
leave
mov
adc
push
push
call
and
xchg
or
daa
mov
call
sbb
or
xorb
cld
push
cld
pop
add
mov
sti
push
pop
pop
mov
jmp
jbe
test
aad
xor
mov
fstpt
pushf
pop
push
sub
sar
mov
sti
jno
jge
inc
aas
push
mov
or
mov
cmp
into
dec
gs
jb
add
in
mov
mov
inc
test
jb
xlat
iret
inc
add
movsl
dec
and
mov
adc
lea
mov
cmp
add
sub
add
pushf
leave
dec
ficoms
adc
in
fnstcw
xorl
ljmp
fstl
lcall
lods
add
xor
rcrb
clc
fistl
fnsave
inc
lcall
jmp
addr16
popl
ret
inc
jmp
mov
push
inc
iret
add
add
movsl
xlat
insb
out
scas
lods
mov
push
iret
pop
outsb
ret
dec
push
lods
add
pop
jbe
es
jl
add
mov
and
mov
fstl
addr16
xor
ljmp
ret
adc
movsb
jp
rclb
jno
aam
lods
fdivs
je
icebp
jno,pn
loope
pop
out
pop
push
and
rclb
out
sbb
push
or
adc
outsb
xlat
mov
push
adc
push
bound
ljmp
add
imulb
ss
adc
stos
xor
add
sti
mov
push
fistl
ret
out
jne
jl
nop
add
or
adc
lea
dec
pop
sub
adc
pop
test
mov
outsl
xchg
mov
or
test
push
imul
add
fiaddl
jne
adc
add
sbb
mov
or
and
add
rolb
ficoml
push
repz
push
repz
push
ds
push
call
shll
call
jp
mov
out
jns
insl
mov
dec
push
repz
mov
dec
test
jecxz
dec
ljmp
push
and
xor
cmp
lea
adc
add
add
stos
jecxz
aaa
pop
jae
jmp
fs
jl
add
cmp
aam
push
popa
jnp
lea
pop
fimull
add
xor
lds
add
add
stc
jnp
xor
jecxz
mov
jae
or
test
test
call
sbb
aaa
movsb
imul
add
mov
xor
popf
push
mov
roll
out
push
std
and
mov
pop
aaa
paddd
stos
jle
popa
movsl
dec
fimull
add
lea
cmp
mov
js
mov
hlt
ljmp
fiadds
call
jmp
fisubrs
mov
lods
add
add
add
fildl
inc
jnp
mov
pop
outsb
cld
inc
jmp
add
or
dec
add
stos
pop
divb
nop
cmp
mov
mov
pop
dec
or
mov
jae
adc
pop
pop
xchg
xchg
cs
jg
pushf
sbb
xlat
ja
mov
cmp
add
pop
stos
sbb
add
add
sbb
mov
or
mov
arpl
xlat
decl
or
sbbl
clc
adc
pop
pop
or
call
add
and
inc
or
pusha
mov
or
adc
mov
in
jge
add
in
add
mov
add
mov
out
lock
or
add
mov
mov
jmp
testl
call
mov
jnp
mov
pavgb
push
add
ss
std
imul
test
mov
clc
mov
lods
idivb
mov
add
testb
push
cmp
mov
sahf
loope
jo
test
jmp
add
inc
aaa
hlt
mov
pop
lods
xlat
outsl
fldt
insb
or
dec
fsubr
add
pushf
xchg
divb
out
and
xchg
ljmp
pop
test
repz
jns
dec
inc
pop
jg
jmp
jp
push
sbb
mov
imul
add
add
out
cmc
jp
jnp
mov
jns
jg
incl
xchg
mov
inc
push
pop
jne
fldt
or
inc
inc
pop
pop
sub
fcomi
mov
jle
add
fmull
insb
jns
or
mov
push
xchg
adc
jo
call
add
add
lock
bound
push
into
lea
sahf
cmp
test
jmp
out
in
iret
test
enter
cmc
imul
push
adc
frstor
std
data16
rcl
imul
inc
push
xor
test
add
pop
cmpsb
dec
mov
jo
sbbb
add
xchg
add
out
insb
lea
push
call
sub
push
pop
pushf
or
cmc
adc
jmp
pop
jno
mov
sti
jne
in
fsub
cmpsl
sti
call
sbb
add
scas
xchg
in
pop
out
in
or
addr16
inc
xchg
dec
or
pop
leave
push
push
sub
fiaddl
mov
jl
push
dec
mov
push
dec
lock
shrb
mov
mov
pop
jo
mov
movsl
lods
out
add
mov
cmp
inc
decb
je
mov
sbb
jb
inc
out
inc
ljmp
add
push
je
testl
add
test
jmp
add
adc
out
mov
push
inc
test
push
xor
lds
call
cli
ret
ljmp
dec
mov
jo
sbbb
loop
js
mov
pop
xor
sbb
adc
jne
stos
or
ffree
mov
notl
jbe
dec
add
dec
inc
fucomi
mov
add
xor
rorl
out
mov
xor
arpl
push
push
gs
gs
aam
pop
mov
add
fiaddl
jmp
aad
add
mov
fisttpl
adc
fmull
sbbl
ss
pop
xchg
jno
add
push
mov
jg
ds
xchg
das
fildl
mov
imul
mov
xchg
mov
stc
scas
pop
or
stos
scas
pop
add
scas
push
gs
adc
cmc
xchg
cmp
and
dec
jge
lods
mov
mov
sbb
xchg
ret
xchg
adc
cmp
add
in
push
push
add
add
clc
push
popa
mov
push
xchg
or
add
add
imul
push
push
or
cmp
add
inc
test
lea
pop
push
push
mov
jne
sbb
push
cmp
pop
or
icebp
fiadds
add
jns
cmp
mov
inc
enter
add
xchg
je
and
out
inc
push
cmp
add
mov
jge
push
add
inc
in
std
jns
add
mov
inc
daa
pop
push
push
lret
or
mov
test
das
pop
mov
notl
lret
pushl
xchg
lret
jecxz
or
add
mov
cmp
js
xchg
add
xor
mov
fcomps
lds
mov
adc
scas
inc
sbb
lods
lret
push
xchg
into
sub
repz
gs
ljmp
pop
out
outsl
enter
rol
mov
inc
movsl
sbb
adc
add
mov
or
orl
add
add
push
add
bound
mov
lods
stos
lods
sub
add
dec
add
js
int
sub
push
inc
xchg
ds
stc
daa
pop
push
fidivrs
fdivs
fs
pushl
or
data16
mov
sbb
fst
fmuls
into
popa
cld
ds
bound
enter
add
out
or
je
mov
outsb
popa
push
icebp
inc
pop
incb
mov
outsb
popa
push
roll
loop
or
cmp
fcoms
jno
mov
cltd
lahf
push
pushf
scas
test
or
adc
pop
ljmp
sbbl
pop
adc
xor
pop
movsb
xlat
jmp
mov
add
pop
dec
jge
push
mov
add
out
orl
pop
xlat
add
dec
jne
jl
jecxz
xchg
fisttpl
add
adc
dec
or
mov
xchg
fildl
mov
dec
clc
movsl
mov
push
mov
testl
cmp
mov
inc
es
imul
add
cmp
push
add
add
jne
push
and
aad
insb
mov
cli
je
inc
loope
or
addr16
sar
or
andl
add
jae
cmp
stos
mov
mov
push
loop
mov
out
mov
gs
arpl
fdivl
bound
cmp
add
add
inc
add
xchg
mov
jae
or
pop
sbb
inc
fwait
xor
xchg
pop
fwait
cmp
pop
std
scas
scas
sbb
xchg
mov
cmp
or
sti
dec
sbb
add
stos
sub
jge
mov
loop
filds
mov
loop
push
ds
cmp
adc
icebp
or
add
xchg
push
lods
xor
aam
cmp
roll
bound
jge
movsb
mov
or
jb
gs
outsb
pop
push
stc
cmp
push
or
ret
mov
or
sbb
push
add
out
or
imul
pop
pop
daa
ljmp
lea
fstpt
jmp
xchg
je
dec
xchg
pop
call
xchg
push
cmc
xchg
negb
push
pop
cld
xchg
shll
out
mov
cltd
push
or
mov
cmp
clc
xor
adc
sbbl
out
push
jne
mov
add
ret
insb
pop
cld
jmp
mov
or
xor
je
shlb
mov
das
testb
add
shll
or
cmp
sub
iret
pop
shll
push
popf
or
loop
lea
int
je
pop
mov
mov
mov
pop
in
mov
or
insb
xchg
mov
dec
jae
lds
xor
fcmovb
xlat
dec
xchg
add
add
dec
push
jae
push
jno
fwait
cmp
inc
adcb
add
inc
fsubr
stos
lds
sub
sub
cmp
lods
cmc
mov
jno
dec
cmp
sarb
pop
add
adc
clc
lea
mov
ds
add
stos
cmp
add
lret
mov
addr16
scas
xchg
shrb
add
icebp
fwait
ljmp
in
sub
mov
data16
fucomi
stos
mov
sub
fwait
ljmp
add
inc
mov
outsb
int
fucomi
aam
test
rolb
xchg
shr
sub
mov
adc
mov
ret
ljmp
jmp
add
add
cmp
xor
add
mov
add
mov
aas
adc
mov
or
fstpl
jmp
mov
ret
add
fistl
lods
inc
adc
mov
push
jne
xor
mov
adc
cltd
int
add
or
push
sahf
lods
scas
push
sub
bound
adc
loope
pop
roll
mov
mov
add
scas
pop
sarl
cld
cmp
dec
lods
cmp
add
mov
fadds
hlt
call
inc
fsubrl
jo
cmp
cld
lret
push
sub
loopne
icebp
or
push
pop
mov
jmp
or
fs
mov
hlt
lock
xchg
inc
dec
mov
sbb
push
or
pop
inc
inc
mov
add
add
adc
sub
int
aam
cld
jne
arpl
jnp
call
add
fmull
cwtl
adc
mov
push
xor
add
nop
cmp
enter
mov
push
sar
xchg
dec
jae
pop
loopne
std
inc
xor
adc
jle
add
lock
xor
bound
cmovo
add
mov
push
fcmovne
jg
add
into
mov
mov
mov
icebp
sti
mov
fdivrp
iret
test
gs
shll
incl
push
fcoml
out
ljmp
mov
aas
add
mov
add
ficomps
mov
popa
cmp
stc
das
inc
mov
add
add
fildl
cmpsb
iret
fsubr
mov
in
or
mov
jmp
sub
sub
add
mov
outsl
mov
orl
mull
sbb
sarl
xchg
xor
fiaddl
mov
push
cld
outsb
adc
les
push
push
dec
mov
add
jle
push
je
sbb
pusha
fcompl
inc
jmp
pop
faddl
jmp
imul
xor
adc
cltd
cmpsb
std
push
jmp
mov
test
fildl
sbb
mov
clc
call
mov
sub
jmp
fwait
cmpsl
cmc
out
xchg
jmp
pop
dec
push
dec
cmp
add
imul
add
outsl
psubsb
daa
adc
add
fmuls
cli
aam
sti
je
aam
lea
push
push
repz
sub
aam
sbb
call
xchg
adc
mov
xor
pushf
in
movsb
xlat
inc
cli
fbld
in
bts
mov
data16
sahf
jb
sub
xorb
sti
out
addr16
add
scas
or
in
fadds
test
mov
filds
add
mov
inc
dec
imul
ljmp
insl
icebp
xor
rorb
add
mov
mov
mov
mov
mov
adcl
jno
lcall
push
push
ljmp
addl
pop
add
add
leave
out
jo
mov
int
data16
xor
mov
jge
inc
add
xchg
mov
daa
cmp
scas
push
push
jmp
dec
adc
mov
data16
cli
test
aam
and
mov
mov
mov
hlt
dec
jns
stc
add
loopne
sahf
fldl2e
add
inc
mov
mov
stos
outsl
dec
add
out
int3
cmp
jp
cmp
jmp
inc
lock
lods
xor
sbb
jg
daa
cmp
or
scas
cmpl
in
sub
mov
push
inc
xchg
cmp
loope
cmp
in
in
mov
push
mov
add
fsubs
lea
add
bound
jmp
mov
pop
xor
fildl
call
mov
loopne
push
faddl
jmp
mov
icebp
add
mov
fildl
jb
sbb
je
add
adc
mov
cmp
and
dec
mov
jg
add
add
in
jne
pop
jge
in
and
pop
inc
test
pop
inc
mov
add
push
repnz
andb
push
push
push
call
sub
add
dec
push
push
leave
out
add
aad
xor
faddl
jne
sub
push
add
xchg
mov
sub
add
jne
dec
mov
push
int3
add
or
inc
mov
loope
js
ss
mov
mov
add
imull
mov
es
cmc
lret
mov
add
pop
sub
daa
sub
push
mov
gs
imul
add
add
add
mov
cli
dec
adc
into
test
test
test
mov
cltd
fldl
cltd
roll
test
js
fcomps
push
lret
push
jle
mov
bound
inc
cltd
lcall
dec
ljmp
jmp
ljmp
xor
add
add
loop
cmpsl
scas
fldt
test
dec
stos
mov
fcmovnu
ljmp
bound
andl
add
in
xchg
fildl
jmp
or
mov
xor
inc
push
cld
into
or
dec
cld
jp
fiaddl
jmp
decb
xlat
sbb
aam
add
add
add
add
loopne
das
loopne
cld
cmc
mov
ds
sti
jmp
nop
fisttpl
dec
jnp
sti
lods
fxch
jle
mov
dec
cld
imul
inc
icebp
cmp
or
add
sub
jne
out
insb
add
in
popf
test
add
and
dec
clc
cmpsl
cmp
add
add
in
mov
pop
mov
hlt
popf
xchg
or
jmp
adc
xlat
cld
inc
dec
int
clc
orps
fmuls
pop
add
lcall
in
in
add
jmp
in
add
push
leave
out
xchg
pop
hlt
adc
dec
int
mov
xchg
jae
in
add
or
mov
mov
sub
add
add
jle
pop
mov
cmp
sbb
test
adc
shll
inc
add
mov
inc
jnp
jno
add
inc
out
sub
je
mov
jae
mov
lods
inc
push
inc
sar
enter
mov
mov
xor
inc
jnp
test
add
fiadds
adc
add
dec
jnp
dec
inc
jbe
push
mov
std
test
ljmp
shll
imul
push
push
lods
sub
fistpl
push
pshufw
xor
add
mov
pop
dec
clc
adc
sub
rcll
add
add
pop
jnp
push
sub
xchg
bound
add
xchg
ljmp
lock
and
mov
add
cwtl
sbb
fistl
mov
fildl
jmp
xchg
mov
jne
scas
cld
ds
add
cmpsb
test
rcll
mov
mov
or
lea
mov
add
or
fiaddl
jmp
ficompl
adc
addr16
sub
add
add
cmpsb
movsl
cmp
adc
mov
faddl
jmp
cmpsb
push
add
xchg
adc
push
jb
cld
xor
inc
add
fs
push
adc
cld
push
and
sahf
pusha
push
fldl
mov
push
shrl
rolb
push
fldl
push
hlt
add
push
les
push
les
aam
pusha
cmp
adc
popa
xor
adc
jmp
push
imul
sbb
xchg
fisttps
add
add
aam
mov
mov
xor
mov
add
mov
stc
mov
push
add
add
mov
rolb
popf
cmp
add
pop
icebp
les
mov
inc
add
mov
xor
mov
je
ljmp
xchg
add
inc
adc
xor
lds
add
xchg
mov
sti
mov
add
ljmp
inc
pop
mov
add
add
pop
adc
fildll
mov
lcall
lock
stos
add
add
fstpt
iret
mov
adc
add
pop
mov
fidivrs
and
sub
pushf
mov
cs
jge
fucomp
add
xchg
and
mov
add
add
jns
loop
cmpsl
iret
inc
cmp
shll
fldl
bound
xchg
insl
shr
repnz
rclb
cltd
mov
xchg
add
adc
sbb
mov
or
xor
push
test
mov
lahf
cld
jmp
ret
rcll
test
mov
inc
cld
push
push
push
cld
into
add
add
push
pop
call
lret
xchg
stos
add
mov
fildl
sub
inc
adc
ret
aad
add
and
cld
xchg
add
aad
adc
inc
rcr
pop
decl
sti
adc
out
test
leave
cmpsl
adc
or
add
add
jo
andl
clc
loope
cmp
and
push
fprem
cld
sbbb
inc
or
adc
xor
jne
or
fnstenv
outsl
pop
push
add
fmuls
pop
cmp
xchg
femms
je
leave
je
mul
sub
jl
hlt
cmpb
push
stos
inc
mov
ret
leave
mov
je
add
fmul
test
xor
mov
ret
or
add
adc
add
push
mov
xorb
inc
inc
lret
dec
scas
pop
cmpb
push
sub
add
adc
pop
adc
and
pushl
and
jnp
add
push
mov
lods
cmp
icebp
ljmp
pop
lahf
cwtl
add
add
or
add
sar
inc
out
add
cwtl
mov
movsl
aas
mov
push
movsl
aas
xor
shrl
cwtl
lret
mov
xchg
and
inc
mov
aas
mov
testb
fucomi
xchg
inc
pop
cld
xor
mulb
mov
rcll
sbb
adc
dec
ss
aaa
roll
add
add
and
fcomps
add
orl
icebp
push
dec
cmp
dec
jbe
pushf
or
add
mov
mov
add
pop
xor
push
bound
mov
pop
xchg
call
lret
loope
xchg
stc
adc
aas
cld
incb
jne
popf
or
sbb
adc
mov
dec
push
inc
mov
pop
push
ja
adc
sbb
jne
dec
cmp
insl
sbb
push
push
inc
hlt
movsb
jno
call
and
add
fnsave
push
adc
aas
shlb
leave
in
shll
dec
cld
addr16
pop
or
inc
decl
push
inc
cld
pop
or
mov
push
mov
push
call
lock
add
adc
cld
aas
mov
rcll
mov
das
push
fldl
sarb
jge
scas
cltd
in
mov
mov
fistpll
xor
mov
add
fiadds
cmp
jbe
roll
or
leave
repz
ja
cmp
xchg
mov
cmp
add
xor
xchg
xor
adc
and
or
clc
or
fldenv
scas
cmp
inc
mov
add
mov
add
inc
repnz
cmp
inc
cmpsl
cmc
cmc
xor
loopne
cmp
ljmp
xor
or
dec
xor
repnz
mov
mov
add
fimull
and
sub
lret
int
aaa
fdivrs
nop
add
dec
lcall
xchg
ret
push
das
sub
ljmp
cltd
das
add
or
push
sbb
mov
mov
mov
lret
cmc
nop
inc
push
add
xor
adc
rol
cltd
mov
add
mov
or
inc
cld
mov
mov
cld
cld
mov
inc
jmp
pop
sahf
add
mov
pop
sub
icebp
mov
push
add
push
ds
insb
inc
jle
cld
movsl
ds
popa
jp
jmp
jo
fimull
jmp
mov
adc
cmpsb
fs
popa
add
add
test
xchg
arpl
add
add
and
or
push
push
call
repz
or
inc
adc
inc
sti
mov
add
out
jg
lods
test
add
fimull
or
sbb
xor
clc
insl
pop
pusha
add
add
sbb
jns
xchg
fdivrl
pcmpgtd
stos
xor
fstps
add
mov
addr16
xorl
mov
js
add
fisttpll
inc
lods
adc
add
lret
mov
xor
pushl
sbb
stos
repz
repnz
mov
mov
or
and
scas
add
pop
mov
xor
aaa
inc
inc
jp
pop
je
in
repnz
into
fldt
add
pop
dec
pop
pop
add
xor
mov
inc
mov
in
mov
mov
and
add
push
stos
mov
push
inc
add
mov
add
push
xor
sti
xchg
stos
add
xchg
mov
add
cmp
adc
mov
mov
aas
shr
mov
cmp
or
lock
into
stos
add
jecxz
bound
jmp
jae
cmp
sbb
sti
pop
into
fildl
jmp
cmp
adc
add
xor
adc
jge
xor
inc
or
pop
in
in
fildl
sbb
imul
cmp
repz
add
pop
xchg
test
xchg
inc
lock
insl
fstl
add
mov
jle
xor
push
cmp
jno
mov
jp
jmp
mov
cld
jmp
adc
fisubs
add
add
xor
jmp
fiadds
call
jmp
pop
and
sbb
lea
sbb
lods
xchg
and
cmp
call
sbb
imul
xchg
dec
sbb
jg
call
cmp
in
sti
shl
popf
jg
enter
aam
inc
and
outsl
lea
in
add
add
sbb
add
pop
fmull
dec
mov
add
xchg
pop
jp
fmull
add
add
mov
add
addl
stos
jl
mov
fsubp
mov
movl
and
ret
mov
add
mov
stc
mov
aad
adc
call
inc
adcb
sub
ljmp
fstl
push
xor
jge
mov
and
cmp
pop
sbb
add
in
das
mov
pusha
lret
fistpl
add
fistpl
ret
sbb
push
add
add
fucomi
mov
jl
mov
ljmp
inc
dec
adc
aaa
jne
sahf
xchg
xchg
insl
das
cmp
jle
add
pop
add
fildl
out
xchg
add
mov
fildl
and
mov
adc
stos
or
ds
shll
and
add
faddl
jmp
add
add
or
cs
lds
fldt
fxch
add
mov
out
xchg
nop
fiadds
jmp
sbb
jmp
push
cmpsl
cld
aas
mov
iret
add
test
mov
mov
add
pop
cld
call
or
out
xor
incl
add
xchg
add
pop
fiaddl
xchg
fiaddl
add
inc
pop
fimull
call
into
mov
arpl
test
lretw
negb
js
test
jg
enter
and
or
push
mov
jne
fs
push
popa
pop
and
pop
and
in
add
mov
mov
cmp
cmp
add
dec
fsubr
mov
adc
mov
dec
fdivrl
inc
add
fdiv
mov
add
add
mov
mov
sub
stc
push
xchg
add
std
xor
jl
loope
add
mov
movb
jg
decb
push
cltd
and
or
incb
add
mov
ljmp
test
mov
into
stos
fimull
fldl
scas
fwait
ljmp
fistpl
adc
add
fucomi
sub
fwait
ljmp
testb
fildl
mov
mov
mov
sahf
mov
mov
or
enter
or
add
jle
lret
or
ljmp
ficoms
ret
mov
nop
outsl
sub
sub
fidivrl
testl
sbbl
push
adc
data16
mov
iret
je
mov
add
fildl
push
inc
icebp
add
sbb
call
add
add
jae
call
cmpsb
imul
mov
negb
or
inc
fcmovnb
scas
mov
inc
cltd
test
pop
push
push
fisttpll
stc
add
dec
add
or
push
or
and
mov
das
shrb
leave
data16
in
jbe
ret
adc
fucomip
adc
add
fsubrl
dec
sbb
in
sub
jb
inc
add
bound
xlat
movsb
add
and
add
ffreep
test
xor
das
shrb
push
pushl
outsb
push
inc
and
add
xchg
incl
nop
xor
adc
iret
add
xor
inc
shl
dec
shl
aas
mov
out
decl
stos
mov
add
js
stos
mov
xor
mov
and
cmp
mov
sbb
bnd
cmp
daa
add
pop
lock
inc
xchg
add
mov
sti
mov
adc
sar
or
jmp
xabort
mov
inc
add
mov
ja
add
cmp
and
add
add
repnz
clc
mov
movhps
xor
imul
ljmp
repnz
nop
ljmp
or
scas
xchg
cmp
out
sbb
fucomi
add
sbb
pop
dec
fimull
andl
add
es
jno
add
dec
sbb
jo
add
lret
ljmp
add
aaa
aas
addr16
xor
add
mov
add
xchg
add
push
cmp
imul
pop
inc
cmp
dec
mov
add
inc
int3
cld
cmp
xor
ret
cmpsl
or
mov
cmc
arpl
ss
dec
mov
ss
mov
inc
movd
fildl
pop
and
add
or
add
stc
and
icebp
jle
roll
pusha
je
push
aaa
cmp
fildl
sub
incl
add
push
mov
sub
inc
and
loopne
push
or
cld
subb
mov
mov
imul
add
mov
add
pop
jae
add
push
shrb
mov
rolb
add
add
cs
xchg
cltd
aaa
rcll
insb
in
arpl
add
xchg
or
test
xchg
push
sti
sub
sarb
jecxz
mov
add
adc
mov
ficoms
cmpsl
nop
add
inc
inc
add
and
adcb
mov
pushf
incl
add
add
push
sar
dec
jmp
pop
je
bts
mov
ret
xchg
push
add
sbb
jmp
repz
scas
addb
rclb
inc
mov
scas
or
jae
cmc
add
add
rcr
sub
fucomi
mov
lock
addb
add
sti
jg
jecxz
jnp
fbld
fsubp
jb
mov
movsb
inc
ret
jg
inc
lods
add
fstpt
rolb
jle
mov
sbb
add
out
cli
cs
fucomi
mov
out
fs
ljmp
fldt
loop
cmpsl
add
sub
or
add
sbb
mov
fwait
cltd
add
lcall
mov
enter
pop
inc
std
dec
pop
xchg
sub
and
mov
pop
icebp
insb
jne
mov
sub
add
adc
inc
push
mov
outsb
sub
cmp
addb
jle
mov
add
add
push
adc
or
fisttpll
daa
jl
add
out
pop
sar
fwait
aad
stos
filds
addl
xchg
test
add
pushf
leave
ret
push
mov
push
cld
out
fiadds
add
mov
jo
push
ffreep
rsqrtps
or
je
adc
cmc
movl
sbb
sbb
add
movsb
jo
push
cmp
inc
push
aam
xor
daa
fdivr
mov
fisttpl
mov
jne
popf
push
or
mov
das
adc
std
xor
inc
lds
mov
roll
adc
sub
incl
mov
mov
loope
out
mov
add
std
hlt
jle
add
add
xor
pop
shl
add
adc
adc
aas
add
pushl
add
test
decb
xor
adc
xor
push
ss
test
or
jle
daa
xor
jne
mov
stos
add
aad
inc
loop
jecxz
xchg
dec
mov
sbb
mov
mov
or
call
add
sub
add
push
lods
sti
movsb
cli
adc
mov
scas
lret
outsl
or
imul
push
dec
aas
cmpsl
addb
mov
sbb
mov
add
jbe
xorb
fucomi
add
add
push
xchg
sub
mov
add
add
aam
and
sub
iret
in
jle
test
sub
mov
cld
push
rol
add
mov
adc
sub
pop
mov
jle
adc
jle
incl
mov
jmp
test
outsb
fcmovnb
out
call
dec
sbb
push
ret
pop
stos
add
add
stos
stos
outsb
add
int3
addr16
daa
ret
adc
ret
mov
sub
mov
in
repz
push
outsb
jne
test
cld
xchg
sub
fildl
cld
je
jne
rcrl
ljmp
pop
push
inc
and
aam
in
leave
ret
push
mov
imul
adc
add
push
add
add
add
xor
or
mov
sti
jbe
fists
idivb
jnp
add
movsl
xchg
pop
mov
test
out
aas
mov
je
add
call
jns
inc
cld
sbb
cmpl
imul
lds
cmp
fimull
push
xor
add
add
jl
or
stos
add
push
sbb
mov
ljmp
aas
mov
test
add
es
daa
filds
xorb
and
sub
iret
sub
or
jg
sub
dec
aad
lahf
cmp
icebp
int3
push
mov
push
lods
testl
add
in
push
fidivrs
mov
sbb
pop
movsl
pop
xor
adc
sbb
stos
add
sbb
sti
or
push
leave
fidivrl
adc
insl
jl
pop
lret
or
movsl
out
jmp
sbb
push
aad
add
cltd
or
mov
fldenv
push
xor
fimull
dec
ret
add
add
orb
cld
lret
jmp
movsl
push
call
lcall
dec
movsb
fwait
add
add
push
les
push
test
lods
and
push
jbe
push
adc
pop
sub
fistl
loop
in
gs
mov
inc
dec
sub
decl
mov
push
add
add
cli
jae
movsb
push
inc
or
sbb
decl
or
push
jge
cmp
shll
popf
mov
sti
fists
decl
aaa
sub
or
pop
pop
popf
sbb
cmp
mov
cltd
push
jae
fcmovnu
push
jne
fisttps
or
sbb
pushl
push
xorb
jmp
sti
push
sbb
jo
mov
xor
sbbl
mov
addr16
cmp
add
stos
lods
inc
or
and
movsl
jne
std
mov
adc
shl
add
add
roll
inc
gs
clc
lea
add
lret
xor
inc
inc
add
add
aam
mov
inc
mov
std
insb
mov
daa
and
sbb
mov
fistpl
sti
cli
xor
inc
mov
ret
dec
cmp
add
ret
jb
and
xlat
scas
fwait
ljmp
std
adc
fdivl
add
xlat
cld
inc
mov
adc
add
mov
gs
pop
in
add
add
in
sub
clc
in
pop
push
ds
adc
cld
mov
add
sbb
sbb
xor
mov
push
mov
stos
add
cmc
pop
stos
fwait
ljmp
fwait
add
dec
add
out
and
faddp
xor
sub
ljmp
mov
addr16
mov
mov
cmpsb
fists
sub
add
mov
push
in
push
out
push
pop
repnz
stc
jb
push
xlat
adcb
add
push
push
lret
adc
xchg
jecxz
add
cmpsb
and
or
xchg
cld
fsubrl
inc
jmp
mov
lods
add
dec
pushf
aad
aaa
pushf
or
mov
mov
and
inc
in
imul
jne
push
pop
flds
add
add
cmp
imul
push
fadds
push
arpl
jmp
rorb
jne
xor
ljmp
push
in
push
jmp
mov
fstps
xchg
dec
push
cld
sbb
imul
adc
or
jno
push
adc
or
add
push
jne
mov
add
flds
sti
outsl
rcl
and
xor
mov
mov
sub
ficoms
in
lock
sbb
stos
dec
add
clc
mov
push
push
mov
add
das
add
jl
sub
insl
daa
inc
add
popa
and
std
lock
inc
mov
mov
or
call
inc
hlt
je
dec
ja
add
add
shrl
aaa
inc
popa
addr16
mov
fisubrl
or
jmp
popf
fists
enter
fisttpl
repz
adc
lock
or
jecxz
cltd
ret
ret
shll
push
cmc
cmp
pop
ret
inc
stos
rol
adc
das
or
call
scas
fwait
ljmp
add
push
cltd
adc
rcr
mov
pop
sbb
push
in
add
and
in
cmp
pushl
inc
cld
mov
push
lret
es
sar
mov
push
insb
add
mov
jbe
add
jmp
sub
mov
push
pop
add
outsb
push
jbe
cmp
add
aaa
add
add
push
fnstenv
cmp
jne
cmp
cld
nop
dec
fildl
jmp
rclb
add
dec
cmp
jns
mov
cmp
mov
test
dec
lods
xlat
adc
adc
mov
mov
stos
or
cli
test
xor
mov
fistps
je
sub
or
ljmp
add
fstpl
inc
cld
mov
add
psrlw
add
jno
movb
es
and
jnp
or
repnz
xlat
and
jne
pop
sub
cmpl
jo
cmp
jmp
mov
mov
push
mov
popa
in
or
pop
push
push
jmp
push
push
push
mov
hlt
in
sub
cmp
jae
leave
inc
hlt
add
add
clc
adc
add
lds
mov
mov
cmp
repnz
movb
add
std
xchg
les
ret
sub
enter
or
inc
mov
enter
push
push
into
sbb
jo
incb
push
or
mov
jb
or
std
add
cmp
add
in
fstpt
inc
mov
int3
pop
stc
dec
pop
sub
and
outsl
adc
ljmp
mov
inc
mov
out
stos
add
into
unpckhps
adc
add
aas
rcrl
repnz
nop
sbb
mov
call
roll
test
in
rcrb
push
out
xor
cs
sub
sbb
add
add
cmpsl
pop
jg
ljmp
lods
mov
adc
fnsave
popf
add
fcmovne
mov
mov
fstpt
hlt
into
xor
shl
jmp
decb
fsubrs
mov
lcall
test
jecxz
xchg
mov
push
push
out
mov
adc
shll
add
add
adc
pop
mov
bound
mov
push
stos
mov
pop
push
cmp
push
adc
mov
mov
pusha
in
cld
add
stc
ljmp
adc
adc
add
mov
adc
ret
push
fiadds
mov
cmp
push
lcall
cmp
push
push
dec
adc
add
add
in
jne
add
mov
fildl
shr
sbb
inc
int3
mov
pop
sbb
fs
adcl
shr
push
call
jl
add
xor
inc
sub
or
mov
add
jno
fildll
clc
cmp
and
in
push
ljmp
adc
add
push
adc
jg
mov
int
jnp
add
es
push
jae
out
je
push
call
xor
jbe
adc
inc
add
push
pop
xchg
push
adcb
imul
movsw
fsin
add
std
enter
mov
roll
jmp
fwait
cmc
inc
sbb
adc
push
flds
add
cld
fildl
mov
movsb
fidivl
daa
add
mov
cmpxchg
stos
add
push
fldl
xor
loop
mov
fucomi
add
stos
sub
push
std
xlat
scas
fwait
ljmp
mov
hlt
into
xchg
fadds
leave
sub
mov
loop
dec
inc
pop
cmp
xor
cld
fstpt
jae
lahf
inc
mov
jecxz
sub
rcrl
sbb
adc
add
lcall
in
loop
inc
jmp
and
jno
std
fildl
mov
fisttpl
jmp
sub
add
lea
mov
vphaddbq
push
push
imul
jl
stos
addr16
add
add
mov
jne
lods
push
out
jecxz
hlt
outsb
in
inc
jmp
addl
pop
pop
fists
or
push
push
sub
lods
add
jo
into
pop
std
adc
es
fsubs
add
stos
or
xchg
mov
lea
ret
inc
mov
cmpsl
mov
mov
xchg
inc
fadds
add
lahf
mov
mov
and
push
fadds
add
mov
add
aam
jne
pop
pusha
hlt
in
add
jno
ret
inc
mov
clc
adc
xlat
add
stos
add
add
cmpsb
sti
jp
lds
je
ds
add
add
insl
cmpl
add
fcomps
inc
clc
out
add
std
lret
cld
out
jbe
mov
add
mov
nop
add
add
mov
add
mov
add
push
je
xchg
xchg
xchg
push
jge
repz
jl
mov
jle
add
icebp
cs
ja
test
add
cs
cmp
add
sbb
adc
int
ret
test
mov
jl
add
xor
dec
mov
loope
cmpsl
mov
sub
sbb
sub
data16
insl
xlat
jno
adc
imul
imul
fst
into
fwait
ljmp
mov
jnp
and
add
mov
sbb
jmp
popf
jmp
in
in
or
fildl
out
mov
mov
imul
push
jbe
jmp
fsts
mov
movlhps
test
adc
jmp
sub
mov
and
incl
inc
pusha
lret
lret
fimuls
lcall
add
fiaddl
jmp
mov
call
hlt
iret
fadd
inc
rcr
jne
xor
cmpb
pop
pop
out
xchg
add
or
adc
mov
add
add
lods
scas
jmp
xchg
cmpsb
adc
out
or
call
ret
mov
out
push
push
and
cld
call
jp
adc
pushf
add
sbb
add
jge
lcall
call
push
add
xor
enter
inc
add
sbb
add
stos
std
stos
add
ret
call
ret
push
mov
mov
or
add
inc
test
bound
fsub
add
pop
pushl
mov
loope
pushf
iret
dec
mov
or
lcall
add
ret
fstpt
scas
jmp
ljmp
call
addr16
leave
pusha
lods
aas
insl
subl
fmul
insl
jmp
add
add
mov
out
add
lcall
mov
pop
push
mov
sub
mov
fucomi
add
pusha
addr16
mov
es
loopne
fucomi
jle
mul
add
fsubr
add
add
icebp
cli
add
mov
fildl
insb
inc
fildl
jmp
add
add
add
fisttpl
jmp
cmp
add
imul
add
add
xor
jle
loope
pop
cltd
std
inc
mov
mov
shl
subps
testb
mov
or
add
mov
test
push
mov
test
pop
add
add
jecxz
aas
popf
and
xchg
cmp
add
in
adc
aam
mov
xor
push
dec
pop
xchg
add
add
xchg
test
xlat
pop
sbb
push
sbb
add
cld
jmp
sbbl
pop
inc
xlat
add
popl
fadds
push
xchg
andb
push
in
mov
lds
sbb
jns
dec
add
add
mov
mov
cmpl
into
mov
or
add
mov
add
add
add
sub
mov
addr16
mov
add
mov
add
pop
cmc
or
insl
fsubr
mov
hlt
incl
ret
jle
mov
ss
push
jge
jg
fdiv
add
xor
loopne
add
add
ljmp
addr16
inc
mov
jle
shll
in
or
aad
out
mov
scas
pop
xlat
cmp
repnz
add
paddsb
mov
jmp
add
or
loope
ljmp
fistpl
ja
mov
jmp
lods
pop
fsubr
add
lahf
into
sti
bound
add
cmpsb
mov
or
insb
insl
add
mov
and
sbb
lods
imul
mov
add
add
in
cmp
sub
mov
scas
ret
pop
push
dec
loopne
add
jne
out
push
mov
add
mov
icebp
inc
jmp
push
pop
stos
call
xchg
cmp
sbb
call
in
adc
cld
add
lcall
jge
cmpsl
scas
addr16
lods
je
add
mov
fnstcw
ret
add
mov
mov
decl
cmp
andl
dec
jmp
cld
call
lods
adc
dec
enter
pop
lret
add
faddl
pop
lcall
ljmp
cltd
mov
jl
xchg
add
sub
push
add
add
adc
pop
daa
and
std
repnz
jns
lea
std
mov
jle
leave
daa
std
xchg
bound
pop
xchg
cmc
fwait
jne
add
jno
ss
cld
xor
jp
pop
fsubrs
mov
jg
ret
or
pop
cld
mov
inc
lds
cli
hlt
inc
and
adc
adc
shlb
add
mov
lods
std
cmp
xlat
cmp
repz
mov
jb
inc
fsubrl
sub
gs
out
fldt
jge
pop
mov
mov
jp
cmpsl
out
cmp
mov
inc
mov
lret
mov
data16
pop
pop
mov
jge
outsl
pusha
aad
movsl
out
lret
add
add
jno
pop
lds
add
xor
mov
or
mov
dec
call
cmp
lock
mov
pop
add
fildl
bound
mov
cmp
pop
fsub
loop
add
mov
mov
push
sbb
test
xor
sub
add
stc
mov
add
push
pop
cmp
lcall
loope
mov
in
jo
jmp
mov
fisttpl
jp
fdivs
out
mov
push
mov
ret
push
loope
out
xchg
xor
or
pop
mov
fnsave
inc
in
inc
add
and
cmpl
or
add
add
ret
daa
orb
rorb
add
aam
cwtl
mov
movsb
decl
popf
std
mov
mov
mov
mov
add
adc
push
out
add
xor
add
sarl
scas
push
push
out
in
push
popf
sub
orb
icebp
sub
push
jb
sar
push
loopne
mov
cli
inc
scas
mov
cmc
jne
mov
in
pop
mov
add
pop
out
shrb
add
nop
xchg
loopne
lds
add
stc
mov
inc
fucomp
adc
std
xor
mov
test
aam
shl
imul
mov
add
push
ds
or
push
push
mov
add
mov
shl
cmp
imul
rorl
sbb
push
repnz
sub
mov
shll
pop
pop
stos
push
in
push
aam
sbb
hlt
mov
push
mov
ret
xchg
mov
inc
add
pop
sub
add
add
test
mov
xchg
mov
pusha
add
pop
out
jle
in
out
in
pop
and
aad
add
add
cmp
fwait
shlb
jg
popf
add
test
mov
in
xchg
inc
pushf
add
dec
jp
call
push
pop
pop
xchg
dec
ret
aad
sub
out
xorb
out
scas
add
add
movl
out
mov
mov
add
ss
frstor
sti
cmp
mov
mov
push
push
in
jmp
movsb
in
jg
fwait
roll
sub
jmp
ret
das
jp
fptan
add
fptan
call
ret
mov
fisttps
ljmp
or
add
add
dec
jl
fs
add
and
push
jmp
or
push
mov
iret
jmp
cmp
call
fdivr
call
push
mov
aad
or
bnd
dec
add
xor
mov
jnp
add
dec
or
and
fdivr
inc
xor
or
mov
out
jl
or
lcall
iret
and
adc
ljmp
pop
iret
fisttpl
dec
adc
ljmp
pop
iret
mov
leave
dec
adc
ret
ljmp
push
iret
fwait
jnp
adc
orl
mov
arpl
jno
lret
rclb
mov
cmp
add
add
rol
mov
cli
icebp
or
js
ss
cmp
push
sbb
xchg
aam
mov
std
icebp
or
into
xchg
dec
test
sub
lcall
push
cmp
and
das
inc
cmp
rorb
or
jl
cmp
repz
pop
dec
shl
frstor
pushl
rcll
and
add
or
sub
repnz
push
add
mov
lods
push
push
jne
xor
jae
in
fisttpl
test
xchg
clc
jne
cmpsb
push
out
shr
mov
imul
push
mov
lods
lods
push
or
lods
push
cmpsb
push
movaps
push
inc
loope
sbb
repnz
jmp
jmp
add
add
jmp
jmp
xor
pop
mov
hlt
or
mov
movsl
push
add
push
adc
push
call
and
inc
aam
xchg
rcrb
iret
add
or
faddl
add
push
sbb
xchg
cltd
add
in
inc
popa
and
mov
and
jge
enter
push
xor
aam
test
push
js
add
add
and
pavgb
cld
call
mov
and
push
cmp
clc
cmp
adc
cltd
add
stos
fadds
add
pop
cmp
sub
add
inc
out
inc
mov
repnz
std
or
jae
mov
sti
or
mov
ljmp
mov
add
movsl
dec
lds
mov
sbb
sti
decl
mov
mov
rorb
mov
mov
call
push
roll
push
jae
scas
loope
rolb
std
repnz
bnd
fldt
in
jl
xor
mov
add
add
addb
add
test
or
ljmp
jo
add
in
xchg
fildl
fldcw
sti
pop
in
cwtl
mov
popa
cmp
xchg
fwait
xchg
ret
cli
mov
add
add
lahf
pop
sti
ficoml
sbb
imul
cmp
fcmove
mov
fstpt
xchg
add
add
clc
sti
aam
clc
iret
adc
fs
sti
inc
pop
outsl
cmc
push
clc
aas
add
cmp
lret
fs
push
mov
xor
dec
sub
or
jecxz
loopne
sahf
or
enter
pusha
lret
and
bound
insb
repnz
mov
and
call
add
add
xchg
filds
jmp
pop
fldl
pop
insl
and
add
push
dec
andl
add
stos
jne
lahf
mov
subl
push
mov
out
pop
pop
lahf
adc
mov
fldl
pop
pop
adc
or
aaa
jne
mov
or
adc
pusha
jnp
add
add
pushl
pop
adc
xchg
or
insb
add
lcall
pop
push
push
cli
inc
mov
add
mov
fadd
adc
ja
push
sbb
lock
adc
hlt
xor
aam
xor
cmp
dec
or
and
incl
cmp
std
add
add
fnstenv
jmp
or
cld
stc
sar
aaa
lret
cmp
dec
or
jg
test
inc
adc
or
decl
inc
adc
push
leave
test
adc
xchg
outsl
push
mov
cltd
sbb
adc
in
sbb
mov
outsb
fisttpl
mov
cmpsl
push
or
add
mov
pop
dec
mov
idivl
cmp
fistl
rorl
std
fdivrl
add
pop
test
out
mov
hlt
push
mov
dec
mov
ret
mov
idivl
cmp
mov
aas
scas
jae
sti
sbb
gs
in
jae
or
jecxz
pop
add
add
jmp
push
ss
xchg
pop
idiv
push
divb
mov
inc
in
lret
cld
aam
add
mov
xchg
lret
idiv
div
push
adc
repnz
push
aaa
cmpsb
or
in
fisttpl
icebp
rcr
adc
mov
outsl
and
std
xchg
mov
icebp
loope
jne
sub
ljmp
fs
test
mov
xchg
jecxz
add
jecxz
push
scas
add
flds
add
enter
loope
test
pop
mov
mov
ljmp
mov
in
add
int
je
arpl
jge
add
cmpsb
pop
and
add
add
pusha
inc
or
ss
add
and
mov
or
xor
push
add
adc
call
inc
inc
dec
xlat
push
and
es
inc
add
mov
dec
add
and
jmp
adc
call
mov
jp
call
ss
testb
add
push
addr16
aam
imul
add
jge
mov
inc
inc
add
jge
jnp
mov
pop
mov
add
repz
aam
cmp
pusha
jecxz
add
popa
cmp
test
jg
add
mov
pushf
loop
ret
pop
stos
hlt
mov
bound
add
inc
sbb
xchg
add
add
inc
in
push
test
popa
bnd
fbld
shll
cmp
jno
mov
mov
cmc
andl
jnp
sub
jb
cld
aaa
rcrl
outsl
dec
test
jecxz
bound
icebp
xchg
xor
popf
adc
jmp
mov
xor
add
fsts
jmp
jecxz
addr16
repz
into
mov
xrelease
and
call
add
mov
fs
adc
push
or
sti
push
pop
loope
jmp
and
fisttpl
push
out
or
mov
fs
das
or
mov
jno
adc
add
or
out
push
call
xlat
pop
pop
pop
lahf
ss
add
lods
mov
je
push
and
iret
pop
ljmp
aad
xor
out
cld
xor
xchg
ljmp
cltd
pop
jne
fwait
and
xor
fldl
mov
je
sbb
and
cmp
jmp
cld
incl
add
out
pop
ret
call
out
jle
lds
add
or
push
inc
jmp
test
mov
inc
insl
shlb
test
add
rolb
pop
add
inc
leave
scas
lock
jmp
pop
mov
cmp
test
add
loopne,pt
ljmp
test
add
fdivr
or
mov
add
add
push
add
inc
mov
std
loop
fmull
in
sar
rcr
add
cmp
fldt
loopne
add
or
data16
test
cmp
imul
push
les
push
mov
test
addb
sbb
mov
add
pop
out
mov
gs
add
add
lock
les
add
adc
push
stos
pop
shll
mov
cli
data16
xor
mov
and
cld
fiaddl
in
aad
jl
jmp
inc
icebp
or
faddl
jmp
out
cmpl
call
int3
incl
roll
add
cmp
icebp
add
add
lcall
mov
icebp
dec
mov
repz
mov
icebp
pusha
test
aaa
cmpsb
lea
add
repz
shll
out
push
lahf
cld
hlt
stos
lds
aas
sbb
add
std
mov
dec
cwtl
sar
call
pop
mov
fsqrt
cmp
jge
mov
add
cmp
incb
ficompl
movsl
stos
stc
cmp
pop
push
mov
and
inc
icebp
mov
psubq
fiaddl
inc
pop
stos
jmp
test
or
scas
sbb
cmp
xchg
xor
ret
push
sbb
mov
in
push
cmpsl
movsl
push
lea
push
call
mov
enter
imul
add
add
cltd
add
clc
out
sahf
add
xchg
ja
mov
inc
out
xchg
imul
movsl
into
lret
std
xchg
orb
jg
cld
lret
or
popf
mov
jns
jmp
inc
add
xor
sub
inc
jns
sarl
jmp
test
mov
add
adc
enter
xor
mov
add
cmp
add
inc
fldenv
mov
add
jns
add
outsb
outsl
shl
rolb
inc
ljmp
pop
jmp
shlb
js
fcomps
add
sbb
ret
ds
out
xor
mov
xlat
ljmp
mov
push
pop
lods
addr16
xchg
popf
cmp
in
or
out
pusha
xchg
xor
in
adc
sub
outsl
add
add
insb
les
cmp
and
pop
in
adc
cmp
cwtl
std
stos
cmp
cmp
xchg
xlat
jge
inc
cwtl
std
jmp
mov
int
xchg
mov
and
sbb
cmp
and
add
cmc
xchg
inc
cld
fiadds
lods
rol
lods
shrl
sbb
and
ffree
fwait
add
test
fdivl
test
push
ljmp
or
jo
push
xor
js
jmp
adc
or
mov
or
push
and
adc
dec
adcl
add
ljmp
xlat
stos
mov
daa
adc
push
jp
jge
loope
add
daa
cmp
xor
pop
push
test
filds
add
popf
add
inc
add
pop
hlt
dec
mov
jle
pop
clc
dec
loope
fstpt
dec
js
sbb
and
xchg
or
push
cmp
xor
add
add
sub
aas
mov
mov
pop
fidivl
les
test
cmp
inc
int3
das
mov
lret
xor
jl
mov
sbb
push
in
jnp
add
adc
std
repnz
rorl
hlt
ss
std
mov
push
test
fisttpl
inc
mov
negb
sbb
cltd
mov
xchg
sub
add
add
out
add
mov
arpl
mov
fucomi
fdivr
pop
out
pop
rcr
xor
shlb
inc
push
inc
fsubr
jp
fildll
in
cmp
dec
mov
push
mov
repz
or
pop
sub
push
mov
inc
sbb
pop
lds
out
into
hlt
inc
mov
add
adc
sub
jg
ljmp
xchg
add
jmp
jb
shll
cmpsl
and
data16
in
das
pop
sbb
mov
lcall
sub
sbb
rcr
jb
adc
xchg
cld
aam
roll
aas
pop
or
sub
push
in
mov
jle
add
add
add
pop
jl
mov
push
inc
idivb
push
je
hlt
pushf
sbb
xor
sbb
xchg
and
sub
jl
clc
ljmp
rorl
sbb
inc
sbb
sbb
scas
adc
xchg
es
push
push
cmpsb
and
lcall
in
add
dec
cltd
and
and
cld
gs
popf
xor
adc
xchg
and
push
lret
jmp
push
fiaddl
je
mov
and
imul
shrb
test
xor
jb
lcall
loopne
std
test
jmp
mov
mov
mov
or
xchg
push
cmpb
dec
add
add
mov
mov
incl
pop
xchg
stos
mov
cmp
xchg
incb
cld
push
xchg
dec
or
or
cmp
stos
lret
jge
lds
xor
sub
fcomps
hlt
lcall
push
jns
inc
fdivl
xor
push
cmp
add
fistpll
add
add
loop
jns
bnd
notl
pop
mov
and
lods
insl
in
daa
stos
fwait
ljmp
leave
cmpsl
addb
pop
es
in
sub
sbb
add
dec
int
test
sub
test
inc
fisubrs
divb
fsub
xor
into
cmpsb
in
lret
mov
add
add
aad
push
mov
fisubrs
out
xor
repnz
jo
push
in
mov
jbe
in
push
ret
xchg
std
rcl
or
dec
in
shll
cmc
dec
pop
cli
dec
rorl
test
sub
iret
sub
ljmp
fnstenv
iret
add
sbb
push
bound
add
insl
push
inc
cmc
inc
lock
jmp
bound
mov
push
xlat
mov
das
pushl
addr16
xchg
in
push
icebp
xchg
fsts
les
movsb
xlat
add
adc
in
aad
std
add
push
push
xchg
arpl
je
push
xor
jne
aaa
aad
adc
mov
aam
adc
push
lahf
add
add
add
call
ret
call
inc
pop
fiaddl
pop
shll
lea
pop
sti
jmp
mov
add
sbb
cwtl
add
jge
call
and
add
mov
or
mov
sbb
push
fisubrs
adc
hlt
pop
std
enter
mov
add
cmp
std
sbb
inc
mov
mov
call
xor
add
mov
add
mov
mov
mov
cmp
repnz
dec
andb
loope
or
das
inc
mov
sti
sarb
cmp
pop
lds
jnp
jb
add
add
fucomi
pop
push
notb
add
fisubrs
loopne
call
mov
ljmp
sbb
mov
xchg
inc
mov
push
lods
in
push
movsb
stc
fs
gs
rclb
push
push
cmp
add
cmp
or
xchg
addr16
add
add
push
push
jno
pop
je
mov
push
cmc
enter
jns
daa
popa
out
jmp
ret
lcall
es
mov
lcall
or
fs
push
cmp
push
fistpll
andb
pop
inc
mov
sbb
aaa
mov
idivl
addr16
sub
add
sub
push
add
sti
add
sbb
pop
adc
popw
lahf
and
xlat
jne
sbb
adc
add
or
xchg
adc
mov
roll
inc
and
push
or
out
xor
push
leave
xchg
and
push
imul
jecxz
add
pop
or
das
int3
mov
mov
push
cmp
add
add
or
mov
sub
sbb
mov
push
icebp
call
mov
inc
mov
jns
push
stos
xor
cmc
xchg
stc
mov
mov
leave
and
inc
lds
roll
dec
or
movsl
fstp
sbb
mov
sub
inc
dec
icebp
sbb
enter
lods
outsl
inc
or
ja
and
or
decl
add
jae
add
adc
or
int
inc
rorl
imul
push
shlb
mov
or
mov
data16
push
or
and
js
mov
cld
xchg
jb
fwait
sub
dec
mov
dec
stos
fstpl
mov
sub
imul
push
sub
shlb
mov
in
insl
aas
add
add
add
stc
mov
shrl
in
repz
push
aam
mov
mov
sbb
add
jno
push
sbb
cmp
jge
pop
push
mov
test
xchg
adc
inc
sbb
fstpt
or
push
inc
je
mov
repz
fildl
jmp
add
fdivr
mov
stos
rorl
push
inc
filds
je
xor
test
mov
addl
clc
fdivrl
cmpsl
addr16
imul
or
add
stos
xchg
faddp
fildl
push
pop
fdivs
mov
jl
xchg
sbb
imul
rorb
call
add
add
push
or
or
cmpl
in
pop
fildl
add
push
or
jecxz
mov
and
xchg
mov
push
or
or
adc
fcmove
je
sub
or
mov
adc
cmp
inc
iretw
push
dec
adc
pop
cmpsl
xchg
arpl
fdivrs
cli
out
add
sub
sti
decl
lods
rorl
hlt
lods
inc
fstpl
mov
cmp
loop
mov
aam
lds
les
fsubs
std
stos
cwtl
fisttpl
xchg
out
xlat
std
lcall
add
add
call
push
leave
push
push
jb
fistl
sub
frstor
mov
add
ret
decl
mov
mov
inc
dec
call
adc
mov
mov
pop
loope
cld
stos
repz
add
mov
adc
sub
shrl
pusha
mov
mov
pop
fstp
mov
ret
in
mov
pop
add
push
xchg
sub
dec
xchg
fldcw
add
add
jmp
stos
ds
add
fiaddl
minps
test
or
sbb
sub
cs
add
inc
dec
mov
sarl
xchg
add
mov
in
call
xchg
and
jmp
sub
jmp
xchg
fdivr
gs
out
iret
mov
pop
adc
out
cmp
es
add
leave
mov
lods
lcall
jmp
addb
bound
add
cmp
jno
fildl
mov
dec
fildl
insl
jle
js
jl
lea
fs
mov
imul
dec
xchg
pop
pop
aaa
inc
pop
es
sub
call
sub
inc
adc
or
pop
es
and
add
sarb
add
sub
lea
xchg
add
fistl
shlb
sti
jmp
jbe
cld
arpl
add
movups
mov
mov
mov
pushl
mov
inc
xchg
inc
and
loopne
push
push
add
adc
adc
in
pcmpgtw
add
loope
mov
cwtl
mov
aaa
cmp
fdivrs
jg
mov
enter
inc
cltd
or
jg
mov
jg
mov
xchg
inc
mov
xchg
inc
mov
xchg
inc
cmpsl
and
ljmp
inc
jnp
add
pop
pushl
pop
or
add
ss
fisttpl
push
sbb
sub
fcmovnbe
pop
add
call
add
xor
xchg
lds
mov
xchg
xchg
lds
jecxz
xorl
add
gs
and
enter
xor
lahf
stos
pop
and
add
aaa
movsl
pop
cmp
add
add
add
add
aad
sub
andnps
call
jmp
test
fildl
xchg
es
fucom
adc
ljmp
mov
mov
jno
lea
sti
mov
pusha
jne
cmp
mov
jmp
decb
bound
dec
out
mov
add
sub
or
sub
mov
fisttpl
push
sub
jmp
mov
sar
es
fildl
test
add
or
fildl
add
push
pop
aas
clc
xor
mov
lcall
aaa
add
and
ja
jl
jo
adc
decb
sbb
add
pop
ja
sbb
adc
fwait
and
push
xchg
sub
call
outsl
sub
jmp
int
test
jo
sub
testb
or
adc
pop
mov
ljmp
outsb
inc
and
cld
ljmp
shrl
mov
test
cld
enter
mov
dec
fimuls
jmp
adc
add
add
les
add
insb
jle
shrl
nop
ret
adc
mov
add
cmp
std
ljmp
inc
mov
les
pop
rol
push
or
mov
sbb
bound
sub
push
call
fldt
fwait
add
add
cmp
mov
movaps
popf
in
push
addr16
pop
lock
loopne
into
lahf
xchg
fwait
je
ljmp
iret
jmp
push
test
sbb
insl
pusha
ss
sahf
shll
repz
mov
jo
aad
pop
add
cs
xchg
pop
das
lds
pushf
add
add
add
mov
lahf
dec
aaa
mov
jg
inc
cmp
xchg
ss
fsubrp
mov
aam
out
inc
mov
jmp
enter
inc
sbb
mov
adc
inc
pushf
or
faddl
jmp
jle
cmp
mov
shlb
dec
in
stc
fstpt
jle
or
andb
outsl
and
xor
add
add
fsub
loope
jmp
mov
int3
jb
inc
jmp
ret
scas
mov
fisubl
mov
call
push
jmp
cltd
sbb
or
frstor
push
je
pop
jge
push
or
add
in
push
in
xlat
add
and
mov
and
add
nop
jecxz
add
out
call
dec
adc
call
out
pop
pop
jg
rolb
mov
push
cmp
dec
sti
push
push
mov
jmp
repz
add
dec
inc
and
fs
mov
call
adc
adc
add
jmp
pop
rolb
add
sti
addl
push
mov
aas
pop
and
fcoml
cltd
enter
mov
incl
xchg
hlt
addb
add
adc
js
fldenv
and
sarb
ljmp
add
pop
fbstp
cmp
mov
jecxz
out
outsb
add
mov
fildl
aaa
cltd
inc
adc
add
add
movsb
inc
stc
aaa
sub
fcomps
lret
loopne
stos
or
lcall
aaa
add
ret
jge
roll
testl
lods
mov
pop
xor
inc
das
add
lods
or
call
test
jns
mul
fwait
inc
pop
ljmp
ret
leave
mov
add
mov
loopne
mov
add
aam
call
je
inc
jb
negl
fs
dec
cmp
pop
add
imul
stos
and
jmp
bound
data16
push
divb
pop
cmc
mov
ret
pop
aam
iret
jg
adc
jne
insl
ret
push
outsl
mov
add
rcr
add
ror
stc
int
add
mov
pop
ja
inc
cmp
enter
xchg
sti
incl
cltd
pop
pop
jg
fistps
aam
push
pop
insl
sub
add
push
lea
cmp
jne
push
bnd
out
stc
add
adc
jp
push
push
fimull
leave
filds
rolb
add
cmpb
xchg
mov
lock
call
and
or
or
xor
xor
mov
xor
add
xor
pop
dec
jmp
pushl
inc
mov
mov
std
add
test
out
xor
out
not
aaa
inc
mov
xor
mov
add
add
roll
jle
imul
add
cmpsb
jl
push
xchg
cmc
dec
shlb
or
daa
cmp
or
int
push
add
clc
mul
mov
add
fcoms
cmpsl
std
cli
fstpt
jg
pusha
xchg
cli
ds
jmp
jg
dec
add
stos
cmp
push
adc
add
add
loop
cmp
push
fstpt
stos
imul
lcall
pushf
lods
mov
js
mov
mov
mov
les
mov
ja
push
jbe
push
lods
mov
mov
add
jo
add
and
jnp
pop
rcrb
add
add
pop
stos
shlb
or
ja
test
cmp
andb
add
in
shll
mov
dec
mov
imul
or
sarl
push
nopl
jl
pusha
leave
jge
pop
lret
nop
int3
xchg
mov
sti
jmp
add
add
lcall
fistpl
mov
jmp
das
push
push
into
loope
lock
test
in
xor
dec
sbb
cmp
les
movsl
faddl
lea
sti
decl
gs
fmull
je
inc
mov
sar
call
pop
or
fists
push
in
add
inc
add
add
inc
mov
addb
and
xchg
das
xchg
addr16
mov
test
lcall
sub
cmp
mov
mov
add
test
std
inc
jb
or
mov
inc
mov
daa
inc
cld
movsl
in
jns
stos
jl
jmp
push
mov
inc
mov
xchg
outsb
ss
std
lock
jno
push
call
cmpsb
icebp
xor
out
fmull
mov
in
mov
inc
into
outsb
out
mov
fsubr
movsl
sub
jno
jge
pop
stos
and
bound
rcrl
adc
test
add
fistpl
mov
in
cmp
in
pop
inc
shll
add
movb
jmp
cmpsb
mov
add
pop
icebp
bound
mov
sbbb
test
sub
lret
mov
out
and
dec
mov
aam
cs
cmpsb
pop
mov
lret
ret
dec
out
out
add
push
pop
fnsave
sub
xchg
push
sti
or
mov
je
jmp
mov
add
add
sbb
mov
clc
bound
fucompp
mov
xlat
cmp
dec
or
push
xchg
call
pop
or
inc
inc
ret
pop
pop
loope
and
sub
sti
mov
pop
ret
adc
inc
jmp
in
sti
mov
mov
adc
in
xlat
out
cmpsl
out
add
fsts
xchg
xor
xchg
popa
sbb
cmp
adc
sub
xchg
cmc
flds
adc
add
sbb
push
xor
push
sub
test
movsb
inc
ret
cltd
xchg
mov
xor
jp
add
icebp
inc
call
add
mov
add
add
rcll
and
mov
jg
xor
xchg
sahf
repz
inc
add
adc
ds
or
mov
je
and
mov
call
cmpsl
xchg
pop
mov
cmp
sub
cltd
sbb
add
mov
add
dec
add
add
mov
jecxz
inc
mov
icebp
decb
aaa
cwtl
je
or
out
cmp
fidivrl
fucomp
xchg
mul
add
dec
mov
sub
mov
mov
inc
adc
test
xor
icebp
mov
in
scas
mov
fadd
pop
fldpi
outsl
sahf
in
mov
lock
inc
add
add
sbb
sbb
push
and
fisubs
cmpsl
pop
mov
mov
xchg
mov
jmp
clc
mov
mov
mov
or
shl
adc
notl
adc
add
inc
fwait
or
fildl
jmp
push
mov
and
sub
repz
int
rolb
add
add
xchg
mov
push
shr
mov
in
jmp
adc
push
les
mov
mov
xchg
faddl
jmp
out
mov
sbb
lret
pop
dec
es
les
loopne
mov
mov
sti
call
sti
and
addb
add
cmpb
add
inc
and
or
add
mov
add
xlat
outsl
test
sti
jnp
mov
mov
call
fs
paddq
dec
lea
test
mov
test
jno
sub
loope
cmp
je
push
inc
and
or
hlt
rcr
mov
pop
hlt
je
enter
add
loope
cmp
cmpsw
bound
mov
adc
mov
bound
sbb
mov
add
cmc
lods
or
cmp
mov
xor
mov
xorb
dec
mov
sbb
cmp
cli
push
push
push
mov
or
aad
call
jmp
in
pushf
cmp
add
loop
orl
mov
nop
repz
xor
jmp
out
fwait
mov
add
fldpi
cwtl
stos
mov
int3
lock
icebp
stc
sub
cltd
jmp
sub
sub
iret
pop
mov
vcvtss2sd
imul
fninit
xchg
fsubr
add
dec
or
add
add
xor
mov
add
add
mov
xchg
add
mov
inc
mov
push
xchg
cmp
in
roll
sbb
inc
dec
or
fwait
or
faddl
jmp
mov
push
ror
sub
xchg
sbb
sti
gs
test
fildl
loopne
iret
jne
sub
adcl
sti
add
add
inc
jge
fucomp
jne
inc
dec
adc
sub
cltd
pop
sar
add
pop
sub
es
mov
xor
clc
mov
mov
mov
lea
std
call
pop
pop
std
mov
mov
add
imul
mov
inc
sub
add
push
dec
jle
pusha
jno
sti
mov
test
ljmp
mov
jmp
pusha
xor
adc
incl
adc
sar
pop
mov
std
mov
in
outsl
sub
or
aad
inc
lods
lds
xor
mov
mov
add
cwtl
fcomps
xlat
dec
xor
popf
call
add
add
add
inc
cmp
clc
or
mov
cmp
dec
andb
or
repnz
push
xchg
push
bound
cmpsl
sbb
popf
mov
cmpsl
stos
cmp
cmp
pushl
sub
mov
add
clc
insl
pop
inc
cld
lea
add
scas
aad
clc
mov
add
aad
iret
inc
rcll
test
pop
push
nop
mov
xor
lods
jne
ljmp
les
adc
push
adc
xor
lcall
mov
pop
xor
add
lahf
mov
jl
pusha
test
enter
mov
std
add
mov
add
cmc
xor
mov
ret
adc
ljmp
mov
mov
ficoml
xchg
xor
fs
push
mov
test
mov
add
mov
fimull
test
mov
test
mov
xchg
add
add
fisttpl
out
mov
add
inc
fs
or
dec
inc
mov
xor
std
into
push
or
add
sti
jmp
jbe
sub
or
popa
dec
idiv
sub
jmp
mov
hlt
cmp
push
dec
ret
test
sub
xchg
scas
movsb
rolb
mov
adc
add
xchg
fstl
cld
dec
sbb
fs
add
hlt
hlt
icebp
xlat
mov
je
daa
jbe
mov
fldl
jmp
pushf
aas
clc
and
add
iret
fcmovb
inc
mov
pop
add
and
add
pop
and
mov
and
fsubr
jns
push
or
add
cmp
insl
sbb
jle
xor
add
mov
ret
inc
cmp
out
subb
jmp
jno
mov
jnp
or
push
push
lcall
push
add
shr
addl
xor
push
cltd
pop
fwait
sti
les
sub
pop
jne
ret
mov
in
stos
daa
loope
add
rol
lea
add
jns
hlt
add
loope
lods
bound
inc
mov
call
xor
xchg
adc
ljmp
test
aad
cs
jae
leave
mov
or
or
mov
repz
adc
cmp
stc
sub
push
xor
or
test
cmp
cmc
sub
pop
in
cmp
mov
add
or
orb
add
sbb
inc
xor
sbb
cmc
inc
push
push
cmp
testb
and
ficoms
daa
call
xchg
in
inc
rorl
lret
arpl
or
inc
adc
sarl
add
out
mov
sbb
movsb
jl
add
add
aaa
push
cwtl
ret
jo
cli
or
cli
jmp
jecxz
lods
es
push
adc
and
add
lods
jmp
mov
push
lcall
jmp
jne
dec
outsl
or
in
lcall
flds
leave
push
scas
sti
push
outsl
cmpl
fadds
add
fsts
fucomp
and
add
fistps
ljmp
push
xor
jg
jbe
add
add
ja
movsb
mov
push
je
inc
add
bound
dec
jg
sub
cmpl
mov
jb
mov
jp
ret
cli
mov
sbb
add
xchg
mov
aas
lea
mov
pop
daa
incl
or
out
adc
incl
add
cmp
sub
aaa
xchg
pop
push
jl
and
push
add
mov
imul
enter
or
adc
lock
add
jnp
or
iret
rorb
or
hlt
add
push
int
mov
in
fnstcw
add
bound
leave
insb
test
add
aas
fwait
xor
add
cli
mov
sbb
push
lret
fwait
sbb
pusha
sub
or
loopne
adc
shlb
shll
in
mov
xchg
pop
sbb
gs
repz
stc
fildll
rcrl
mov
add
lods
mov
imul
add
loopne
lods
es
inc
testb
sahf
int
sti
jb
lret
lds
sbb
les
jle
sbb
iret
fiadds
jle
out
add
xchg
ret
sub
mov
mov
xchg
mov
lea
and
adc
cld
jbe
ret
or
and
dec
loopne
sub
int3
mov
adc
mov
or
pop
cmp
and
xor
out
mov
ja
xor
addr16
addl
aaa
sar
addr16
add
lret
add
repnz
jbe
int
push
je
movsb
pop
adc
cmpsl
dec
call
repz
adc
add
add
cwtl
jbe
pop
fstl
andl
add
push
and
sbb
mov
mov
push
ss
cs
or
push
push
out
pop
add
stos
xchg
adc
mov
add
andb
xchg
mov
xchg
scas
cmp
std
es
aaa
xorb
xchg
into
les
add
jo
js
mov
add
ret
rcl
cmp
mov
cmc
aas
mov
aad
inc
idiv
dec
stos
enter
mov
cld
mov
cmc
aas
mov
cmp
stos
pop
out
xlat
cwtl
add
add
jmp
test
push
sub
nop
scas
mov
inc
mov
popf
in
mov
ret
push
sub
add
add
fisttpl
out
sbb
jl
jecxz
xchg
jno
xor
mov
mov
call
cmpl
or
xchg
mov
sti
testb
into
cwtl
mov
jmp
push
in
xorl
imul
mov
sti
jmp
add
add
ljmp
int3
jle
xor
cmp
or
fs
mov
push
icebp
mov
fldl
jle
mov
inc
add
movsb
scas
imul
mov
hlt
dec
inc
jmp
iret
sbb
jmp
jmp
push
mov
jecxz
cmp
lret
push
add
add
dec
jnp
fs
add
cmpsl
in
jmp
jmp
notb
ljmp
adc
repnz
fiaddl
ja
mov
call
je
gs
fisubrl
dec
sbb
mov
xchg
or
std
adc
clc
add
jecxz
sub
add
std
jmp
ja
in
ret
add
jecxz
add
mov
cmp
sbb
cmp
rcrl
jge
sub
orl
repz
into
sub
cmc
shlb
push
lds
or
inc
push
add
outsl
add
jge
ret
add
push
inc
pop
jecxz
xchg
insl
xor
push
fdivp
mov
or
cmp
dec
mov
clc
cltd
push
clc
xor
sbb
arpl
mov
xor
iret
and
scas
add
add
fsubr
ss
shl
ljmp
repz
fisttpll
xchg
in
lds
push
jp
ret
cs
cwtl
rol
fstpt
mov
mov
xchg
xor
dec
mov
xor
add
inc
pop
int
add
or
xor
loope
out
mov
fistps
inc
mov
stos
push
and
push
or
fwait
mov
fwait
shlb
push
add
out
adc
xchg
stos
and
jmp
sub
fnstcw
aam
and
inc
test
add
inc
add
cmp
adc
mov
iret
adc
fildl
sub
pop
mov
fistl
or
adc
sbb
inc
jmp
insl
fwait
pop
jb
pop
mov
call
mov
fbstp
mov
sti
jl
fimuls
add
and
add
add
in
invd
cmpsb
push
add
mov
je
sub
xchg
sub
call
inc
and
movsl
scas
inc
mov
dec
call
cmpsl
push
jbe
dec
inc
mov
and
inc
and
inc
inc
adc
call
out
and
jmp
and
cmpsb
xor
jmp
pop
adc
andb
add
aam
inc
jl
ret
mov
mov
jae
and
add
scas
cmp
loop
dec
ret
call
sahf
mov
cld
lret
pop
sub
xchg
mov
cmc
sub
mov
xchg
repz
jle
push
or
subl
cmp
jne
mov
out
add
add
mov
mov
arpl
mov
add
mov
push
and
xor
push
push
nop
clc
push
roll
lret
rcrb
call
clc
xor
mov
or
test
xchg
push
decb
adcb
xchg
cmpsl
divl
mov
cmc
mov
nop
pusha
stos
add
add
mov
push
ljmp
pushf
loopne
mov
rcll
into
push
stos
test
adc
fdiv
lret
add
lret
mov
push
dec
in
loope
pop
sbb
xchg
movsb
test
fnstenv
pop
es
mov
add
mov
sti
bound
shl
test
int
add
mov
mov
andl
push
inc
in
or
pop
sub
mov
mov
pop
jbe
stc
das
adc
jl
test
xor
call
jmp
add
xor
les
fildl
add
add
aam
jmp
add
fiaddl
add
fiaddl
and
add
push
sbb
add
fidivrl
shl
outsl
aaa
sbb
cli
jmp
add
mov
add
les
add
add
sti
add
mov
jno
push
std
push
call
scas
dec
jg
dec
lods
mov
movsb
add
dec
jle
push
sbb
push
ljmp
add
add
sub
push
ds
cld
mov
mov
in
jg
mov
sarb
jp
int
je
sub
call
mov
push
or
mov
test
inc
jae
add
jge
sub
shr
bound
repnz
mov
aaa
test
mov
std
add
add
fucomi
sub
mov
add
call
xor
jge
cmp
sub
andl
push
cli
fs
out
cs
aam
mov
psubusw
sbb
fwait
and
aas
lods
sbb
lock
std
xchg
shll
icebp
add
add
cmp
shll
mov
enter
addb
cmp
ret
jb
xor
mov
cmp
inc
icebp
into
push
sti
je
cmpsb
xor
loopne
adc
mov
jl
rcl
xchg
out
push
stos
cmpsb
adc
jo
mov
bound
mov
bound
stos
add
add
mov
sti
das
push
shl
push
xchg
call
pop
cld
gs
shll
mov
pushl
add
add
pop
push
mov
xchg
push
fs
add
ret
mov
jbe
mov
das
xchg
jp
pop
xchg
jo
mov
xor
test
stos
ud0
add
rcl
adc
dec
add
je
adc
add
push
fiaddl
test
and
rcll
test
stos
or
sti
pop
push
call
shrb
sarl
fidivs
rcrb
jg
mov
imul
std
incb
in
cmp
pop
add
fcoml
std
add
add
lret
test
shlb
jae
aaa
mov
call
test
out
jg
std
add
lea
aaa
inc
je
jno
push
mov
push
shll
sub
jp
and
dec
cli
and
pop
loopne
inc
imull
add
sub
and
cmp
arpl
sahf
lret
push
std
push
mov
add
movsl
daa
mov
jo
push
lret
xor
std
push
movsl
daa
mov
mov
rorl
clc
fmulp
pop
add
ret
add
mov
jo
jb
loope
mov
lret
jne
aad
faddl
aad
ljmp
enter
sahf
mov
or
mov
xlat
inc
jp
push
add
add
fucomp
add
add
pop
fisttpl
push
int3
add
push
pop
add
hlt
fisttpll
stos
ljmp
add
adc
and
call
mov
fiaddl
sti
cltd
unpckhpd
mov
or
jmp
scas
sbb
insb
andl
std
movb
add
or
aam
int
jmp
sub
adc
push
sub
mov
pop
ret
add
les
dec
mov
push
loop
jl
mov
sbb
push
decl
or
loop
jle
loop
jle
dec
push
xor
je
loop
jge
dec
adc
mov
ja
jne
push
andps
fwait
sti
xor
add
movsb
pop
or
xor
xor
xor
movsb
sbb
rclb
mov
push
cs
fistl
sbb
push
outsl
sbb
xlat
add
add
je
std
decl
sub
testb
cmp
mov
rol
or
das
std
enter
mov
sub
pop
push
loope
std
inc
xor
imul
add
test
movlps
mov
fs
cmp
ja
mov
and
push
mov
aas
xor
mov
cltd
add
ret
adc
jmp
cmp
mov
fcmovnb
jle
cmp
or
fucomi
shr
push
ja
sbb
mov
fistl
jge
add
mov
divl
mov
push
idivl
sbb
mov
mov
jmp
and
adc
js
addr16
mov
xor
mov
fistl
ret
ljmp
add
or
push
movsb
jl
pop
mov
add
push
add
add
add
cmc
add
adc
mov
sbb
jp
test
ret
mov
leave
pop
movsl
jmp
push
faddl
push
stos
daa
adc
jl
test
fildl
roll
add
and
cli
fsubr
test
or
cmpsl
loop
jge
push
xchg
jae
mov
add
outsb
push
dec
icebp
xorl
push
inc
in
sar
add
dec
or
je
xchg
push
cld
xlat
montmul
cmpsb
add
cmp
sbb
push
aad
stos
out
inc
test
or
fcomps
push
out
xor
mov
cmp
or
sbb
roll
lcall
scas
jecxz
popa
loopne
mov
cld
ss
jns
add
add
push
out
pop
ret
pop
popf
add
mov
mov
push
jmp
and
movsb
fistpll
jno
das
sarb
mov
or
test
movsl
xchg
xchg
pop
aas
jae
or
js
cli
sti
test
mov
mov
incl
or
cwtl
test
add
dec
pop
xchg
mov
cld
mov
inc
vmovd
decb
test
mov
mov
inc
dec
pop
xor
popa
mov
inc
inc
pop
mov
fldt
mov
frstpm(287
aad
fucomi
shrl
fistpl
ret
jmp
adc
add
sub
xchg
sldt
add
sub
and
shll
fs
in
jg
sub
add
lret
shl
sbb
jmp
and
ret
inc
int3
fcmovnu
rcl
sbb
jmp
and
jmp
es
add
sub
mov
add
mov
xchg
test
dec
and
and
add
lods
fisttpl
int
inc
icebp
cmp
add
outsb
call
and
addr16
push
pop
out
fisttpll
xchg
adc
lret
jge
mov
fisubl
pop
mov
cmpb
add
filds
call
lods
sub
mov
adc
push
jmp
mov
add
repnz
cli
lcall
jbe
gs
testl
leave
lods
push
ljmp
push
call
pop
sbb
adc
loop
inc
pushf
bound
pop
mov
jbe
orps
push
sbbl
mov
cmp
mov
arpl
movsb
push
push
or
sbb
test
fimuls
je
cmpsb
jecxz
add
add
add
pop
pop
ljmp
add
ljmp
pop
ljmp
rcrb
ret
mov
push
addb
pushl
aas
sub
mov
pop
dec
pop
ja
mov
iret
mov
add
loop
inc
shr
jne
inc
test
std
or
gs
push
adc
testb
add
add
xorl
ret
call
clc
into
push
out
leave
call
push
lea
fcmove
inc
outsl
dec
xchg
jae
insl
ret
add
pop
inc
adc
mov
xchg
add
std
in
mov
dec
jecxz
ljmp
fs
mov
loopne
mov
xchg
faddl
lcall
cmp
mov
scas
mov
ret
andb
cwtl
sbb
fistpl
mov
mov
or
pusha
inc
inc
fstl
int
call
adc
dec
and
ret
add
leave
xchg
push
fnstsw
in
orl
mov
es
jmp
dec
bound
add
add
or
xor
fdivr
push
sbb
sub
adc
xchg
movsb
sti
aam
ljmp
xlat
pusha
jne
push
jnp
sahf
icebp
bound
xchg
jmp
pop
fdivr
cld
push
test
clc
mov
wbinvd
outsb
pop
movsb
sti
cld
inc
ljmp
xchg
add
fsts
aad
add
pop
cwtl
sti
jae
cmpsb
jecxz
add
add
scas
roll
mov
push
xor
or
push
push
lods
sbb
add
bound
pusha
sbb
dec
mov
adc
xlat
push
incl
fs
pop
jle
jo
jne
pop
mov
and
call
ret
and
and
cli
call
pop
outsl
dec
fistl
out
add
test
xchg
xor
add
add
jecxz
mov
jg
out
test
mov
shlb
inc
inc
or
cmp
push
add
add
add
mov
and
das
es
xor
outsb
jae
mov
std
cld
mov
pop
inc
mov
filds
mov
pusha
cmp
add
add
mov
pop
mov
cli
sub
pop
std
enter
popf
add
sbb
fisttpll
cmp
cmc
jb
jmp
clc
mov
dec
sbb
sbb
pop
mov
mov
add
jmp
add
jmp
fs
mov
mov
add
fwait
hlt
xchg
call
pop
add
add
pushf
hlt
xchg
call
js
rclb
add
jmp
jge
add
jle
mov
mov
insb
movl
jmp
in
mov
ss
lods
mov
in
les
cmp
cld
ss
add
mov
sbb
fs
inc
bound
std
push
add
add
cmc
js
add
add
fxch
cs
and
ss
push
into
in
mov
sub
cld
mov
fiadds
call
iret
sbb
decb
add
pop
add
adcb
xor
jmp
cld
jne
or
clc
ss
sti
pop
jb
aas
sub
aad
sub
test
add
add
ret
mov
inc
add
mov
jne
mov
decl
add
stc
out
inc
in
jne
push
cli
decl
jne
decb
adc
gs
jns
fnstcw
fs
je
pop
cmp
enter
loop
flds
test
adc
or
jbe
add
leave
xchg
xlat
xlat
cli
les
inc
mov
or
cmpsb
push
push
xorl
inc
xorb
test
push
add
int3
pop
inc
ret
call
in
mov
push
mov
jge
std
mov
test
jnp
test
add
pushf
push
incl
add
mov
mov
fcompl
sbb
sub
cmp
int
lea
jno
mov
xchg
sti
cmp
jmp
outsl
insl
add
outsb
or
rclb
push
inc
add
sbb
sbb
test
cmp
in
aad
in
gs
out
sub
pop
ret
xchg
insb
mov
inc
setge
inc
xchg
sbb
fadds
mov
inc
pusha
add
mov
je
in
ds
adc
pop
cli
in
dec
aad
stos
movsb
sbb
call
cmp
pusha
jle
test
ljmp
mov
je
xchg
movsb
sbb
fs
jle
add
add
push
inc
fmull
sub
pushf
loop
inc
aam
je
mov
in
sti
pop
cmp
adc
pop
ljmp
sbb
rclb
aad
rorb
leave
jmp
aam
inc
xor
roll
leave
lcall
or
push
cld
addr16
cmpsl
mov
call
loopne
inc
add
add
aas
clc
push
mov
or
sbb
xor
push
or
xchg
sti
mov
xor
insb
in
push
mov
xor
aam
test
inc
ret
push
lea
mov
popa
sbb
and
push
or
xchg
sti
subb
or
push
test
push
add
mov
cmovo
sar
xor
add
add
add
rorb
std
nop
inc
inc
dec
cmp
je
fiadds
mov
aam
mov
push
cmp
arpl
jns
inc
cmc
pop
pushl
movsl
aas
xchg
xlat
incb
pushl
rorb
ss
ret
cmp
fcmovne
rcll
das
fdiv
add
add
mov
ds
ds
fwait
rol
aaa
pop
shrl
cltd
lock
out
outsb
adc
xor
jge
push
cli
jge
sub
sarb
ja
add
adc
fbld
mov
and
in
rcll
sahf
push
inc
cltd
fsubr
jge
sub
rolb
mov
enter
jle
add
in
jb
add
fbstp
lahf
daa
or
je
adc
in
push
jle
andb
fmull
pop
mov
rcr
xor
icebp
insb
mov
inc
mov
popf
jbe
int
pop
stos
mov
fldl
sarb
fimuls
scas
add
add
mov
adc
jb
mov
or
push
sarl
in
jg
aam
out
cmp
add
sti
pop
dec
fdivp
fsub
cwtl
mov
push
lods
test
adc
clc
in
addr16
in
imul
leave
add
inc
jne
and
and
add
lds
in
fisttps
adc
push
addl
add
push
push
add
jmp
xchg
and
add
sbb
out
call
and
push
pop
ljmp
rclb
mov
pop
xor
add
js
das
imulb
in
out
aad
int3
mov
mov
push
je
sub
lcall
cmp
add
in
fsts
jp
jno
jb
ret
adc
mov
inc
je
mov
shll
incl
mov
cmc
push
je
mov
loope
andl
mov
hlt
in
add
push
icebp
adc
outsl
leave
ljmp
lret
rorb
movsl
sarl
adc
add
add
mov
jo
mov
mov
mov
fucomp
jg
adc
pushw
mov
add
fsubr
js
mov
cltd
stc
fsubr
xor
cmp
sbbl
js
fisubrl
fsubl
call
addr16
sub
ret
sub
lcall
mov
push
cmp
jnp
outsl
rol
add
add
add
frstor
sub
jle
out
sti
hlt
or
inc
jmp
arpl
sar
and
cmc
subb
jo
xchg
push
lock
jbe
xlat
call
and
divb
xor
mov
daa
adc
rcrl
jecxz
or
adc
adc
mov
les
sti
arpl
add
mov
call
jns
inc
call
out
xchg
add
mov
and
push
push
cwtl
mov
scas
jecxz
daa
fiaddl
mov
outsb
add
sbb
push
je
mov
push
push
mov
pop
cld
add
fcmovb
adc
inc
or
repz
mov
test
jne
add
sbb
sti
imul
mov
loope
jne
iret
inc
add
xor
jmp
inc
adc
insb
pop
out
mov
adc
int
add
adc
imul
mov
inc
rclb
dec
orps
loope
fisubs
xchg
outsl
xorb
xor
mov
outsb
or
add
and
lods
push
jno
out
jmp
rcl
sti
data16
rcrl
outsb
ljmp
lgs
inc
call
inc
xor
push
pushl
fldt
inc
fs
add
mov
push
addb
pop
je
outsb
sbbl
andb
sub
add
add
pushf
xchg
add
jle
mov
sub
mov
fidivrs
rcr
adc
dec
ljmp
fistl
cmp
jbe
jb
xchg
cwtl
out
fsubr
mov
mov
fidivl
in
mov
fcmovu
lods
push
mov
jmp
add
add
push
loop
jbe
or
mov
lods
jg
mov
pop
push
adc
add
inc
fwait
jbe
mov
lcall
fs
aam
out
jmp
stc
pop
or
call
xchg
mov
cli
add
push
mov
pop
pop
sahf
fdivrl
jbe
cmp
add
add
rcrb
pushl
push
add
insb
faddp
setp
add
add
enter
out
hlt
repz
push
lods
std
push
ja
cmpsl
cs
pop
sub
add
cmpsl
test
or
jne
jb
leave
mov
fsubl
mov
add
loop
add
out
cltd
fstpt
pusha
mov
test
jns
add
fcoms
add
pop
lods
dec
mov
cmp
sbb
mov
addb
mov
out
aad
xchg
jle
jae
dec
bound
cltd
mov
or
cmp
cmp
jnp
arpl
xchg
pop
fnstcw
pop
jb
add
aam
jmp
mov
jmp
push
aaa
call
sbb
adc
inc
xor
jno
add
add
out
fistl
nop
into
xchg
insb
push
fucomp
add
adc
xchg
dec
in
clc
sub
cmp
mov
enter
pop
push
stos
add
add
dec
or
shrb
out
sbb
jnp
mov
insl
push
scas
xchg
aam
addb
cmp
add
push
cmpsb
scas
enter
sbb
sbb
sbb
test
nop
sti
mov
hlt
cli
push
add
call
inc
dec
aas
xchg
push
add
orb
jle
lea
sti
jbe
add
xchg
out
jmp
jae
mov
sub
orb
mov
push
inc
jge
gs
mov
xor
push
cmp
adc
or
jmp
dec
imul
int
sti
ficomps
outsl
stos
loopne
ret
xorb
push
inc
or
fcoms
int3
std
incl
add
sub
push
pusha
push
ret
fsqrt
call
hlt
daa
cmpsb
fildl
push
fadds
add
cwtl
add
add
adc
aas
lock
push
push
loop
cmpb
or
fmuls
jno
popf
jmp
inc
push
icebp
push
pop
outsl
in
xchg
push
push
lret
test
fadds
je
xchg
jl
scas
fadds
fistps
mov
jp
jbe
sub
mov
mov
mov
ret
out
in
cmp
dec
jb
shll
cmp
cmp
out
int
call
jo
sarb
roll
sbb
push
mov
mov
ljmp
arpl
aad
mov
jno
inc
inc
bound
xorl
std
gs
imul
cwtl
mov
les
push
jmp
int3
mov
rorl
jnp
xchg
mov
ljmp
inc
and
pop
cmpsl
hlt
test
inc
jmp
hlt
in
xchg
sbb
jo
call
inc
mov
mov
add
add
iret
pop
ret
cltd
pop
into
pop
rol
loop
sub
or
aas
lret
push
lretw
xchg
arpl
jl
test
lock
lret
add
jg
add
fsubrl
add
out
or
mov
add
inc
out
or
jmp
xor
push
xlat
jle
mov
pop
in
cmp
add
or
fcompl
inc
jmp
std
popa
push
andl
cs
addr16
lods
fwait
jp
mov
fildl
inc
or
jns
ss
cltd
ljmp
jb
mov
mov
rolb
xchg
imul
mov
loope
iret
insb
jne
add
add
add
subl
out
xor
mov
out
stc
xorl
push
push
mov
outsl
or
adc
jne
data16
clc
gs
and
adc
in
negl
sets
add
mov
fsubl
and
sub
je
imul
sbb
add
or
stc
add
aam
adc
mov
add
shll
and
pop
mov
lea
call
mov
sbb
stc
cld
mov
adc
into
ret
mov
sbb
push
push
push
pop
jae
in
stos
and
mov
pop
std
sub
push
std
test
lock
adc
pop
cmc
insl
mov
mov
stc
cld
adc
add
mov
add
cmp
jecxz
les
add
fisubl
cmp
fstpt
inc
fwait
mov
sbb
mov
pop
call
test
sub
dec
subl
or
fwait
mov
sbb
sbb
fld1
add
addr16
mov
mov
cmp
mov
arpl
mov
xchg
sub
fildll
add
add
sbb
and
stos
in
add
je
insb
cmp
ljmp
fcomi
pushl
enter
sbb
pusha
mov
jbe
and
add
xchg
pushf
adcl
test
xlat
stos
mov
ficompl
daa
scas
jbe
loope
addb
shlb
xchg
mov
jp
sti
test
scas
jle
add
add
clc
jne
sbb
and
popf
sbb
dec
xchg
xchg
aas
jmp
iret
xchg
mov
nop
aas
jmp
pop
sbb
mov
das
in
mov
fidivrs
lahf
cltd
sti
aas
inc
stos
fiadds
pusha
mov
enter
lods
insb
sar
shll
mov
fnsave
enter
pop
and
ret
mov
out
push
mov
mov
xchg
adc
jmp
test
adc
cld
adc
aas
fisttpl
cmp
mov
dec
sbb
inc
fwait
sti
icebp
fcoms
inc
adc
cmpb
xorb
mov
push
aas
mov
lret
add
add
sub
clc
xor
inc
mov
out
push
std
mov
mov
decl
inc
inc
mov
subl
incb
pop
xor
xor
jle
mov
sub
sti
push
jge
dec
jae
xor
jmp
adc
adc
adc
mov
mov
add
lds
sbb
out
add
imul
lock
inc
xchg
shlb
or
stos
sbb
mov
mov
mov
jb
repz
jge
jae
sbb
int3
popf
mov
lret
mov
les
es
xchg
repz
loop
leave
add
add
rclb
sub
sub
scas
lahf
jge
outsl
add
jecxz
jp
pop
pop
call
negb
stc
imul
adc
cmc
shr
outsl
jo
add
sti
jmp
sbb
jns
mov
repz
jmp
cli
mov
inc
stc
xchg
ljmp
inc
div
jmp
add
add
push
push
jb
or
out
fs
jb
jmp
adc
add
push
xor
add
add
aas
or
mov
test
xchg
add
je
xchg
or
push
notl
daa
imul
xchg
or
mov
cmp
xor
lock
mov
bnd
shl
or
loope
xor
push
cld
sbb
xchg
sti
push
jmp
push
loop
xlat
pop
jmp
rorb
add
cli
fidivrl
pop
fld
repz
sub
jne
mov
std
ret
add
rorl
sar
mov
push
test
xchg
mov
or
add
or
add
add
xchg
push
fidivrs
shll
sub
xor
jo
inc
mov
ret
pusha
xchg
fucom
std
adcb
mov
addr16
imul
outsl
jmp
add
xchg
mov
cmpl
dec
xchg
mov
pusha
push
cmp
lds
add
add
jo
xchg
pusha
jp
mov
add
add
test
test
ljmp
fistps
mov
das
dec
push
test
sub
cmpsl
nop
ret
lcall
add
fld1
add
adc
mov
lcall
lods
fucomi
add
add
dec
jmp
out
or
push
rcr
scas
arpl
es
fcmovnb
out
repz
jmp
mov
cmp
outsb
xor
call
cmp
fistl
jo
pop
aaa
mov
out
cmc
mov
or
xlat
push
insb
or
sti
loopne
add
jbe
das
add
aad
insb
pop
add
add
jmp
jo
ret
call
mov
mov
std
je
jcxz
xor
std
jle
add
add
shrb
mov
mov
mov
lock
sbb
adc
sti
push
xor
ljmp
mov
call
pop
ret
add
add
xrelease
daa
push
sbb
add
mov
lods
inc
add
dec
and
hlt
rorb
mov
xor
lcall
inc
pop
jg
call
das
scas
dec
mov
rorb
xchg
jmp
add
mov
orw
jge
mov
add
cli
or
std
ljmp
enter
mov
mov
cmp
inc
dec
inc
xchg
push
das
js
decl
mov
orb
mov
jbe
mov
jnp
mov
out
fdivl
mov
or
test
mov
jle
nop
sub
add
stc
andb
dec
daa
mov
jecxz
mov
and
mov
adc
nop
insb
sti
fcmovbe
mov
stos
cmp
loop
mov
jg
pop
mov
pusha
lret
dec
stos
arpl
add
jo
in
jb
loopne
mov
cld
xchg
add
mov
mov
call
add
add
push
sub
fildl
sbb
push
jo
fucomi
xor
fildl
bound
outsb
fstp
add
mov
push
inc
stc
jbe
into
jmp
sbbb
addl
push
cli
jb
outsl
push
pop
leave
push
mov
cmc
or
jne
ja
or
aas
sti
cs
sub
imul
add
jmp
dec
xchg
jle
jecxz
jnp
cld
decl
cmpsb
jmp
negb
lret
or
push
call
fistps
ret
dec
mov
out
sbb
pop
mov
out
hlt
sbb
call
je
daa
mov
addl
outsb
pop
pushf
pushl
sbb
fwait
jecxz
push
out
in
pop
xor
addl
add
adc
adc
gs
ja
sub
add
mov
jnp
inc
xchg
dec
in
jb
xor
xor
mov
mov
mov
out
rorl
mov
rclb
sub
cmp
aad
mov
mov
ret
je
and
dec
or
add
add
jae
and
dec
loopne
mov
loopne
notl
roll
fs
pushf
cli
test
je
jmp
pop
add
faddl
lods
jge
cmp
in
loope
xchg
repz
bound
add
pop
loop
enter
mov
pushf
imul
add
nop
fsubs
cmp
add
add
lcall
leave
in
jmp
bound
or
push
sub
jmp
jmp
les
and
loope
mov
sbb
and
mov
or
outsl
sub
test
incb
add
add
lock
imul
faddl
jmp
ja
pop
stos
inc
outsl
pop
cmp
icebp
pop
and
stc
stc
cli
flds
jae
xlat
and
and
add
imul
add
adc
pop
stos
cmp
fisubrs
cli
data16
stc
push
in
sub
loopne
jmp
fnstenv
ret
mov
mov
add
add
lea
add
outsb
cwtl
cs
mov
inc
xchg
fidivl
dec
mov
and
repz
add
call
subb
insb
inc
push
fidivl
out
mov
and
repz
icebp
ja
lock
sbbb
outsb
or
or
repz
lock
shlb
aam
pusha
inc
aam
pusha
inc
in
pop
inc
mov
je
arpl
data16
jb
data16
jb
gs
jb
arpl
jb
gs
jb
gs
jb
gs
jb
data16
jb
data16
jb
data16
jb
data16
jb
mov
popa
clc
ds
sbb
call
bound
xchg
cmc
xchg
add
jns
jmp
subl
fnstcw
fs
push
ss
jae
and
out
cmp
inc
cmp
inc
aaa
fdivl
adc
arpl
int
pop
push
add
imul
cmpsb
mov
jle
out
aaa
jns
cmp
out
pop
jp
int
jl
fdivl
shll
and
loopne
add
mov
std
jb
repz
add
outsl
mov
mov
cmpsl
clc
into
mov
mov
pop
mov
mov
jno
fmulp
popa
mov
mov
adc
cli
arpl
rep
add
out
adc
fadds
call
shll
sti
fisttpl
jg
bound
push
cmpsl
or
roll
jmp
xchg
add
rolb
jmp
cli
leave
or
mov
adc
out
loop
push
out
fiaddl
mov
std
push
add
pop
bound
shlb
push
int3
out
fildl
scas
fildl
scas
mull
sbbb
test
out
fiadds
subb
test
add
addr16
pop
adc
adc
add
add
cmpsb
and
sbb
jle
js
mov
mov
sub
inc
push
int3
call
push
ret
push
inc
pop
js
push
add
xchg
push
mov
lds
packsswb
add
fs
fwait
push
std
call
mov
or
or
pop
cld
or
ret
inc
adc
sbb
or
mov
add
mov
jne
or
mull
or
sub
adc
jg
stos
ja
add
mov
mov
fnstenv
inc
sar
mov
inc
test
jae
cmp
adcl
cmp
mov
jl
das
jecxz
mov
push
pop
jp
inc
cltd
out
inc
mov
jb
inc
add
add
int
and
in
iret
or
sub
rorb
lret
push
or
pop
shrl
cmp
rcrl
sahf
mov
rcrb
call
out
push
int
shlb
mov
aam
enter
enter
enter
lret
sub
push
into
call
jnp
ljmp
push
popf
inc
pop
pusha
jo
mov
fwait
pop
out
xor
prefetchwt1
xchg
sub
xor
pop
ret
push
inc
sbb
out
sbb
arpl
and
test
dec
jle
pop
jg
aad
add
bound
jmp
int
cmp
mov
add
lds
fistpll
faddl
insl
fst
add
dec
mov
push
cmp
int
rolb
popa
test
xchg
stos
mov
jno
mov
push
jmp
rol
inc
sbb
add
mov
and
push
aas
lea
mov
fiaddl
addb
ret
inc
add
add
ffree
inc
out
ret
inc
in
loop
fcomp
add
pushf
popf
orb
cmp
out
int3
jne
and
dec
mov
push
add
outsb
dec
sahf
cmp
push
fiaddl
adc
add
clc
lret
add
in
push
psraw
mov
jne
jp
je
jg
les
adcl
add
mov
or
adc
mov
out
aam
cli
jae
inc
mov
je
mov
sti
push
push
ret
adc
mov
inc
mov
jb
jg
int
push
jnp
push
or
aaa
xor
mov
les
gs
xor
or
pushf
inc
mov
andb
xchg
add
sti
jp
fld1
add
mov
loopne
mov
push
in
or
je
add
rcrb
das
mov
pop
xor
sti
adc
lock
shlb
inc
mov
call
inc
cmp
cmc
outsl
int3
cmc
iret
inc
mov
jecxz
test
out
sbb
hlt
add
add
push
mov
rorl
repz
cmc
addr16
cmc
add
enter
int
jno
fildl
imul
adc
or
jmp
out
sysenter
adc
or
enter
mov
stos
mov
cmovbe
jae
xchg
adc
add
add
push
imul
mov
pop
jmp
push
loop
cmpsl
mov
fildl
imul
mov
or
filds
mov
stc
loop
pop
filds
cmp
or
push
sbb
sets
or
adc
and
xchg
and
add
pop
lcall
or
sbbb
push
xchg
ljmp
sbb
add
push
cli
orb
dec
push
mov
dec
pop
inc
sub
mov
sub
sub
mov
dec
mov
inc
inc
add
or
adc
sti
xor
adc
sbbl
add
add
rcll
xor
jmp
mov
jae
or
jae
or
adc
ret
or
dec
sub
add
adc
mov
sub
sti
adcl
inc
lret
inc
sub
orl
adc
pop
or
mov
call
fildl
add
lea
jne
inc
mov
or
push
imul
jnp
jmp
add
xchg
mov
jg
add
pop
lahf
add
into
loope
jnp
imulb
rcr
add
and
jo
mov
ret
inc
sub
in
iret
add
add
push
ljmp
int
daa
jg
push
adc
fildl
jmp
pop
fdiv
movsb
sbb
ret
scas
int3
ljmp
xchg
pop
jbe
ds
sub
test
fildl
cmp
sbb
insb
loopw
jmp
xlat
imul
mov
lock
add
add
loop
jmp
xchg
lret
mov
fdivl
push
push
add
ret
inc
jb
call
jne
popf
inc
push
nop
or
lahf
sbb
test
add
mov
xchg
jnp
data16
orb
or
pop
push
jne
adc
sub
sub
inc
push
repz
dec
fmull
xchg
sbb
punpcklwd
stc
push
or
aam
ret
inc
repnz
ret
add
sub
add
push
adc
mov
or
mov
in
jae
leave
shll
lret
shll
les
or
xor
mov
in
inc
mov
mov
add
add
mov
mov
aaa
or
mov
andb
mov
xchg
sbb
addb
stos
or
jle
lahf
pop
pop
xor
fisttpll
cmp
push
adc
xor
mov
in
sub
jg
jecxz
add
adc
jl
pop
inc
add
add
loope
mov
mov
sahf
fcmovnu
fldenv
ffreep
in
adc
push
in
sbb
fcomip
add
pop
int
and
cmp
fucomi
cmp
pop
fucomp
add
xor
xor
sahf
inc
mov
cmp
add
sti
outsb
sbbl
out
add
mov
pop
mov
call
call
imul
pop
sti
es
jns
jmp
fmull
outsb
aaa
push
sti
xor
mov
mov
clc
popf
add
out
add
mov
pop
dec
ret
les
mov
push
sti
pop
std
and
lock
add
add
sbb
or
xchg
adc
lcall
call
jne
adc
push
inc
pop
xchg
filds
and
or
jmp
adc
or
sbb
std
jmp
arpl
adc
loopne
add
add
push
adc
fisttps
xchg
fs
push
sti
andl
sbb
add
add
add
dec
mov
orb
mov
pop
add
sub
cld
sub
mov
pop
or
incl
add
add
aam
or
mov
stos
inc
push
mov
aaa
push
mov
sti
inc
push
out
inc
pushl
in
mov
or
add
add
mov
ret
inc
cld
cltd
scas
push
ja
inc
xor
lock
or
test
enter
pop
mov
inc
jmp
mov
xlat
add
mov
out
mov
rcrl
fistpl
mov
fldt
mov
sti
fsubrl
mov
pop
add
add
mov
push
fistl
pushf
call
add
push
lds
mov
loop
push
ret
fucomi
xor
fsubrl
mov
pop
push
add
push
addr16
mov
call
add
and
daa
mov
or
adc
add
sar
fdivrl
add
mov
in
cltd
mov
fildl
clc
gs
or
adc
mov
mov
fcmovnb
cmpsl
shl
push
mov
fildl
out
testb
out
adc
add
stc
out
pop
mov
mov
fucomip
imul
xchg
add
inc
add
cmp
mov
inc
pop
test
fildl
mov
push
cmp
xor
ret
lret
push
push
ret
roll
rcrb
or
push
mov
and
setnp
clc
fwait
or
jmp
in
push
jne
movsl
inc
add
lock
add
add
push
test
cld
sub
mov
cli
sbbl
cmp
mov
add
fcomps
jae
leave
shll
lret
shll
jle
stos
mov
add
inc
inc
mov
sbb
or
mov
lods
mov
adc
jecxz
add
mov
push
addl
add
stc
mov
dec
jecxz
mov
mov
ja
cltd
inc
cld
xorb
sub
ds
jecxz
mov
fucomi
andl
push
sti
xchg
jmp
jne
fldcw
mov
sub
int
stos
lds
call
sbb
mov
mov
addb
add
sub
pop
mov
pop
inc
repz
sti
inc
cmpsb
in
sbb
xlat
call
cld
js
out
arpl
in
mov
sbb
cmp
inc
aad
mov
stc
adc
sbb
pop
add
push
mov
push
sti
or
push
or
add
add
add
fildl
push
fisttpl
gs
add
cmp
sub
call
ja
test
mov
faddl
jmp
cmp
idiv
andl
xor
mov
ret
jb
aam
jmp
push
dec
je
push
pop
ljmp
mov
add
sbb
xlat
cmp
add
loop
or
sub
add
imul
or
cmp
sub
ret
decl
push
fildl
add
add
out
add
lcall
pop
mov
clc
or
in
xorl
idiv
add
push
xchg
bound
xchg
ffreep
inc
out
loop
filds
sbbl
or
add
add
mov
add
dec
cmpsb
les
sub
add
sti
add
cmp
daa
std
mov
int
aas
mov
jns
and
clc
sbb
incl
sti
add
in
add
mov
sti
add
or
push
cmp
sub
inc
add
add
dec
clc
orb
incl
enter
fldt
mov
mov
adc
or
sub
inc
or
test
jecxz
shll
mov
xor
add
mov
fldt
mov
fldt
sahf
mov
xor
fldt
dec
out
pop
add
add
mov
push
mov
ss
ficompl
mov
mov
insl
sub
pop
or
cmp
pop
add
lods
inc
sti
arpl
outsb
push
call
imul
ret
in
mov
test
mov
sbb
rol
jae
pop
lods
jae
fimuls
add
mov
cltd
or
xor
push
les
pop
sbb
cmp
fisttpll
imul
jg
in
or
call
cmp
aam
xor
dec
loope
add
ss
fistps
add
mov
pop
rcrl
add
add
and
dec
ljmp
repz
jne
movl
or
inc
and
xchg
in
add
jb
xchg
fdiv
or
loope
add
mov
cltd
pop
sbb
mov
aaa
in
movsl
fildl
subb
jo
rcrb
xor
mov
mov
jg
push
lods
adc
add
cmp
mov
and
xor
inc
mov
xor
mov
push
jle
or
sbb
jle
xchg
mov
jge
cmpl
dec
call
jne
xor
mov
roll
jge
andl
incl
xchg
push
fidivrl
aaa
hlt
orb
xchg
mov
stc
mov
repz
daa
inc
popf
loopne
and
call
sti
cli
aad
sbb
sbbl
add
int3
adc
iret
ds
adc
fildll
inc
inc
sub
cmpsl
fsubp
call
loopne
repnz
jl
fmuls
notl
cli
add
add
push
inc
cld
inc
xchg
in
mov
sbb
sub
xlat
repz
jl
cmp
add
mov
ret
daa
mov
adc
bound
sbb
stc
adc
ljmp
test
sbb
xchg
pop
pop
inc
not
popf
adc
and
lds
test
out
inc
sti
push
stc
sbb
aam
repnz
add
int
sti
push
flds
scas
dec
inc
xor
std
clc
adc
clc
adc
add
fst
test
inc
sti
jb
fnstsw
fucom
add
dec
cmp
jmp
lods
sbb
push
and
ret
int3
sub
pop
push
femms
std
rcrb
mov
push
and
inc
add
mov
test
filds
add
push
jecxz
add
add
xlat
and
nop
and
add
and
loop
adc
add
and
jnp
xchg
and
dec
adc
mov
inc
pop
mov
pusha
mov
and
or
mov
in
mov
mov
je,pt
into
cld
and
insl
or
ds
xor
add
add
hlt
mov
jge
scas
and
std
push
xor
mov
xor
push
iret
mov
add
jnp
out
inc
pop
std
inc
jnp
and
cmp
jmp
loope
adc
inc
sti
testb
mov
lock
sbb
fwait
shll
mov
or
adc
fcomi
mov
mov
mov
add
lock
into
lods
outsl
push
mov
inc
xor
pop
lret
fs
push
stos
cli
mov
std
and
sti
call
pop
sbb
in
adc
iret
sahf
sti
mov
mov
fimuls
rcr
lret
stos
cli
mov
inc
in
xchg
testl
scas
pop
test
lahf
push
sbb
out
hlt
stos
add
inc
shlb
pop
jae
out
addr16
inc
inc
negb
test
ds
jb
rcrl
bound
add
add
mov
inc
jmp
jg
inc
jmp
out
inc
jmp
cli
mov
jmp
cwtl
mov
jmp
lfs
add
add
mov
jmp
les
inc
jmp
mov
inc
jmp
jp
inc
add
shrb
shrb
shrb
shrb
shrb
mov
inc
aam
imul
imul
imul
imul
imul
imul
imul
imul
insb
inc
fs
outsb
inc
adc
add
add
inc
push
insb
outsb
inc
fs
insl
inc
fs
inc
push
test
inc
push
or
and
insb
inc
and
arpl
imul
outsl
inc
and
arpl
mov
outsl
inc
mov
xor
jae
xor
jne
xor
jl
pushl
xor
jbe
xor
je
xor
data16
xor
jae
xor
je
add
cld
xor
jo
xor
jo
xor
jo
xor
jo
xor
outsl
cld
xor
outsb
cld
xor
outsb
cld
xor
outsb
cld
xor
outsl
cld
xor
outsl
cld
xor
outsl
cld
xor
outsl
cld
xor
mov
out
add
sub
xchg
jp
sbb
fsub
add
mov
adc
cmp
adc
sub
add
mov
jae
cwtl
mov
xchg
in
mov
push
or
sbb
mov
jge
pop
adc
pop
jmp
xchg
enter
mov
pop
push
int
loope
xor
mov
push
dec
xor
pop
inc
adc
adc
fwait
sti
aam
jle
xchg
divb
ret
or
sub
add
add
fisttpl
in
and
pop
ret
ret
cli
add
add
add
out
jno
cmp
inc
incb
mov
add
aas
shlb
mov
orb
shrb
mov
adc
mov
mov
xorl
add
add
enter
cmp
inc
add
ret
jae
push
mov
decl
or
fwait
add
push
mov
mov
in
mov
mov
inc
push
mov
dec
jbe
and
lods
enter
bndstx
mov
into
mov
inc
jne
scas
fldpi
or
das
add
lods
repz
scas
enter
add
or
movsb
and
pand
mov
in
adc
mov
inc
andb
add
xlat
pop
or
sub
mov
mov
xor
ss
sub
or
jns
push
mov
loop
inc
mov
ret
or
mov
mov
push
and
jmp
lods
repz
add
xchg
xlat
adc
loope
add
lods
ret
movsbl
xchg
cld
add
sub
roll
inc
mov
add
add
into
lods
out
ds
fnstsw
idivl
fdivs
bound
xchg
and
bsr
mov
xor
cmp
cmp
bound
add
add
hlt
xor
add
ret
cmp
test
jno
lret
or
jmp
sub
orb
cmc
and
add
andl
jmp
ror
sahf
mov
inc
jb
dec
data16
out
pushf
jl
fnclex
jne
jl
inc
xchg
cmc
roll
add
ret
out
push
jl
xor
mov
scas
add
inc
mov
jl
push
fisttpl
leave
mov
inc
jle
add
push
sbb
bound
mov
stos
bound
xchg
add
xchg
sub
dec
in
dec
dec
daa
adc
bound
xchg
dec
or
mov
pop
jl
add
add
in
and
jmp
push
aam
imul
sbb
sti
mov
outsb
add
sub
cmp
sub
add
ja
adc
outsl
or
fiaddl
aaa
mov
std
add
aaa
pop
and
sbb
outsb
decb
outsb
fcompp
mov
or
andb
jge
fs
hlt
add
add
push
inc
mov
mov
or
push
pop
popf
sti
mov
lcall
leave
push
mov
mov
testl
jl
shrl
loope
repz
fimuls
lds
std
js
mov
sti
ret
mov
sarl
mov
js
or
pop
or
inc
xchg
sbb
rorb
clc
cmp
inc
mov
test
pop
sbb
jne
ds
push
cmpsb
push
mov
fs
pop
cmp
loopne
shrb
mov
fs
and
outsl
scas
ret
inc
add
add
cld
fcomi
out
mov
ss
xor
ficompl
repnz
inc
test
lock
inc
fisubl
into
bound
dec
hlt
sbb
add
mov
fmull
inc
hlt
dec
out
inc
jo
mov
sub
hlt
scas
inc
lds
cmp
mov
xchg
mov
loope
inc
testl
pusha
add
add
mov
negb
xor
lcall
loopne
aad
fcomps
jl
aas
mov
jmp
inc
mov
jae
icebp
inc
dec
fsqrt
and
inc
adc
xor
pop
inc
mov
arpl
in
adc
cmp
inc
cltd
leave
xchg
jne
inc
push
or
ret
jg
add
fldpi
add
add
add
add
imul
mov
inc
mov
pop
ja
fs
dec
pop
or
aaa
inc
cwtl
fs
add
idivl
std
adc
pop
ja
and
jle
and
add
test
xchg
cwtl
jnp,pn
adc
xchg
add
test
xor
pop
dec
sub
xchg
fcoml
movb
add
int
mov
xchg
add
lcall
jae
rclb
lea
cld
jp
add
cmp
mov
sub
std
shl
add
call
mov
add
xor
sbb
and
mov
mov
addb
mov
xor
iret
add
add
leave
mov
std
ficompl
inc
in
mov
shlb
lret
les
stos
mov
push
stc
add
xchg
andb
xchg
rolb
mov
sub
xchg
sub
jnp
add
mov
imulb
pusha
lret
pop
hlt
and
call
xor
or
outsb
sub
dec
cmp
ficomps
inc
mov
add
pop
data16
sbb
sub
xor
add
leave
scas
mov
dec
inc
cmpsb
icebp
pusha
jl
xchg
fs
push
jmp
xchg
loop
out
or
js
les
lock
jnp
jne
loope
in
pusha
add
add
aaa
les
jg,pn
lcall
movsl
mov
mov
adc
fnstenv
dec
add
repz
cmp
je
fs
std
sbb
aas
jo
cmp
int
xchg
jmp
scas
sbb
das
insb
jecxz
flds
jmp
mov
add
cwtl
fldl
fninit
mov
fisubrs
scas
fisttpll
and
cmpb
mov
push
or
xor
lds
scas
sbb
shlb
mov
sti
leave
aam
add
lret
mov
add
mov
call
inc
add
cmp
xchg
ret
add
jo
jge
roll
adc
push
popf
stos
mov
xchg
jle,pn
mov
dec
adc
mov
and
std
add
into
dec
test
and
push
inc
mov
cmp
xchg
int
jg
mov
sub
sub
adc
cmovae
or
inc
jnp
add
add
sub
mov
xor
and
sbb
test
cmp
sbb
jecxz
mov
push
sub
into
bound
cmp
addb
cltd
jnp
cmp
repz
ss
ljmp
mov
sahf
repz
sub
xor
add
enter
mov
cltd
sub
mov
lret
mov
xchg
jb
repnz
fs
and
outsb
jge
imul
or
leave
mov
xor
xor
flds
scas
ret
inc
mov
fwait
cmc
push
adc
push
push
add
add
cmp
fs
loopne
cmpsl
add
add
push
pop
xor
test
add
test
add
pop
push
add
mov
notb
adc
lret
lcall
mov
out
inc
sbb
adcb
cmp
push
push
lcall
fldl
addr16
cltd
mov
ret
inc
push
dec
and
lret
mov
jmp
mov
imul
or
xchg
in
std
add
jae
je
ja
inc
xchg
inc
sbb
jb
mov
xchg
rorb
mov
das
cld
lds
cli
mov
add
pop
ja
adc
sbbb
push
idivl
sar
mov
and
js
or
add
lock
mov
jle
mov
push
or
sti
js
or
xor
inc
sbb
leave
xor
xchg
inc
ja
mov
das
mov
movsl
xchg
xlat
jb
pop
push
push
adc
fimull
add
lret
gs
xchg
test
adc
pop
inc
mov
add
ret
or
xor
or
adc
repz
out
xlat
and
fcom
cmpb
js
sub
test
movb
insb
mov
aaa
fnstcw
aaa
push
push
fs
sub
jnp
flds
push
push
test
adc
shlb
pop
inc
inc
xchg
pop
jp
add
out
das
bound
mov
add
mov
bound
cmpsl
xchg
loope
pop
fisttpl
fimuls
push
dec
std
jb
loope
lahf
fisttpll
repnz
sbb
pop
nop
add
mov
mov
scas
cld
inc
add
mov
popf
adc
shll
stc
loopne
shll
cmpsl
std
bound
add
in
fnstenv
repnz
mov
fidivrl
es
aam
bound
shlb
jge
push
cmpsl
jbe
cmpsl
push
jecxz
push
cmp
push
add
fildl
jge
lahf
in
cmp
outsl
push
out
sbb
sub
or
inc
xchg
test
in
dec
imul
xchg
rorl
sldt
add
idivl
mov
testl
pushf
stos
push
in
sub
stos
push
fcomps
xor
mov
loope
add
gs
scas
shrl
mov
por
add
mov
mov
sbb
cmp
repnz
dec
or
mov
int
dec
shlb
mov
std
sar
or
dec
pop
hlt
jb
add
out
or
ss
mov
incb
test
iret
xor
jle
les
cltd
xor
jge
mov
cmp
dec
jns
jmp
lock
or
stos
out
fcmovnu
jmp
xchg
add
push
sbb
sub
inc
jo
lret
or
add
xor
lock
cmpsl
cmp
jle
jo
ret
pop
mov
sub
inc
adc
jmp
mov
fsubs
fdivrl
pop
mov
push
loope
clc
xchg
lods
sbbl
add
sbb
push
push
push
mov
mov
push
xor
call
push
push
hlt
xor
fidivl
jg
add
cld
lcall
xlat
xchg
mov
cmp
lods
cmpsb
in
fmulp
inc
add
mov
pop
out
test
mov
shr
mov
mov
adc
ljmp
mov
gs
pop
lcall
xor
mov
sub
mov
dec
sarl
mov
scas
add
add
and
loope,pt
mov
fsubrs
add
andb
andb
andb
mov
movsb
cmp
add
dec
mov
sbb
shlb
pop
ret
pop
ja
and
add
lahf
fnstcw
inc
int3
dec
add
sub
call
add
lds
fiaddl
add
inc
fsubrl
incb
faddl
push
pushf
add
jg
ret
add
inc
push
add
mov
add
mov
jnp
jnp
xor
je
mov
add
in
insl
hlt
sbb
xor
jecxz
ljmp
out
xchg
or
mov
add
cmp
addl
add
sti
jg,pt
scas
xor
sbbb
cmp
ret
ret
jg
xor
mov
dec
into
stc
add
mov
ja
shll
jp
jl
testb
mov
jo
test
stos
mov
shll
test
push
in
add
or
mov
scas
pusha
add
add
add
das
mov
lahf
ss
add
and
or
scas
sbb
dec
mov
dec
sbb
lock
and
gs
and
push
sbb
add
push
adc
xlat
repnz
xchg
push
add
das
fnstcw
das
add
pop
adc
pop
arpl
jne
and
sahf
cmp
add
add
sbb
ret
or
and
jbe
push
les
xchg
sbb
out
jb
xlat
lods
dec
rolb
lcall
or
aad
ret
xchg
push
ret
add
sub
inc
test
sahf
or
js
xor
xchg
in
aad
add
cmc
cmp
mov
add
dec
adc
adc
rorl
mov
ljmp
loope
jae
push
adc
pop
sahf
cmp
cs
cli
add
int3
cmp
ja
xchg
int3
mov
jno
lahf
xchg
or
inc
sbb
adc
push
outsl
jmp
pop
pop
test
loopne
adc
mov
in
pop
mov
mov
incb
daa
add
int3
mov
ror
pop
and
mov
addl
testb
mov
inc
adc
sbb
mov
mov
icebp
xchg
outsl
mov
ss
jg
mov
xchg
xchg
push
xchg
mov
add
cli
jno
fwait
mov
lock
xor
or
push
das
or
aad
mov
aam
fsubrl
lea
add
leave
push
dec
cmp
movaps
or
push
or
fcmovnu
call
clc
jb
insb
and
add
sub
loopne
or
hlt
mov
mov
in
adc
jnp
cmp
clc
add
and
pop
adc
mov
adc
jo
mov
rolb
inc
xchg
mov
hlt
xchg
fucomi
add
nop
add
jge
repnz
iret
andb
les
ljmp
outsl
roll
add
dec
nop
adc
jae
push
cmp
lods
pop
mov
sar
sbb
shrl
addb
jmp
call
js
sbb
fildl
bound
fadd
ljmp
jae
loope
call
aaa
stos
shll
bound
stos
push
add
add
xchg
test
add
iret
cmp
add
add
in
aad
add
fcmovu
add
pop
adc
ret
mov
daa
add
push
call
lahf
sbb
sbb
cmpsl
adc
mov
pop
mov
push
das
push
jg
outsb
adc
pop
cmp
test
cmp
push
in
and
add
dec
xchg
cmp
xlat
and
dec
sub
mov
mov
push
dec
cld
mov
mov
jmp
jo
xchg
dec
mov
fistpl
mov
mov
mov
xor
and
roll
mov
jmp
data16
jmp
loopne
gs
pop
data16
or
enter
jno
inc
ret
add
add
add
mov
or
std
sti
jb
inc
cld
jb
inc
out
sbb
sti
call
jl
mov
lds
pushf
add
aam
add
push
xchg
xlat
fldenv
xchg
mov
xor
rcrl
mov
or
ja
push
cs
test
jbe
sbb
jmp
xor
and
inc
add
add
sub
and
je
orl
out
xor
aaa
pusha
dec
rcll
and
and
jecxz
xchg
cmp
test
or
pushf
mov
in
sub
inc
fstl
lods
mov
cli
je
mov
sub
mov
mov
fildl
pop
add
add
mov
shrl
pop
jbe
int
inc
ret
repz
or
ljmp
add
fidivrl
pop
and
or
mov
out
outsl
add
test
sbb
xor
bound
bound
or
sbb
mov
cmpsl
or
push
xor
cld
xor
outsl
push
mov
lret
icebp
or
adc
mov
push
adc
test
add
addr16
or
pop
clc
arpl
lods
in
inc
mov
jl
inc
scas
in
inc
movsl
fiadds
movlps
cld
adc
loope
outsl
sbb
cld
jne
arpl
mov
inc
or
add
push
rol
mov
jle
mov
add
mov
add
mov
or
mov
cld
pusha
mov
int
mov
lret
xchg
cmpsl
add
test
loope
lds
inc
inc
add
popf
jl
mov
xchg
inc
inc
and
cli
pop
xchg
jge
inc
and
add
ret
push
ds
stos
dec
inc
or
enter
add
clc
xchg
pop
mov
mov
jae
inc
inc
or
and
add
lahf
push
cli
and
jmp
mov
cwtl
mov
inc
iret
add
and
add
mov
mov
mov
add
mov
cwtl
mov
add
int
insl
inc
loop
ror
clc
lret
jo
jae
add
add
call
and
sbbb
mov
sbb
lds
jo
sbb
adc
jnp
jne
add
shll
ret
pop
jbe
cld
pushf
cli
call
mov
sbb
adc
push
adc
rcrb
sti
les
mov
push
xor
lret
test
add
add
in
mov
pop
aad
push
adc
leave
add
adc
std
add
cmc
mov
int3
add
jns
xchg
lds
adc
bound
add
fs
mov
sbb
adc
mov
aad
cli
and
mov
in
or
ficomps
jecxz
aad
add
in
inc
cld
out
push
mov
stos
cld
jne
add
sbb
movsb
in
fiaddl
testb
decl
cld
jne
add
rorb
add
sub
or
ja
xchg
ficoml
loope
push
push
setne
push
adcb
lret
cld
cli
fcomps
push
test
faddl
mov
imul
mov
incl
lds
add
inc
movsl
cli
pushl
sub
push
lea
enter
jbe
add
sbb
std
cld
or
or
inc
push
xchg
cmp
out
cld
decl
loop
js
in
mov
add
or
aas
loop
jae
bnd
pop
data16
add
jge
cli
sti
lcall
movb
xor
incl
out
addb
add
add
xor
cs
stc
stos
pop
push
imul
mov
pop
pusha
lret
xor
pop
dec
add
pusha
cmp
fsubrl
sbb
data16
jecxz
add
fsub
mov
leave
inc
cmpsl
or
inc
add
add
jle
cmp
lahf
add
fcmovu
fstpt
fsubr
add
add
rcr
imul
out
add
pusha
inc
or
sahf
mov
lret
test
mov
adc
loop
push
test
mov
jns
jmp
cmp
xchg
mov
fldl
jmp
lret
mov
sbb
divb
add
mov
add
call
fisttpl
aas
test
xchg
imul
pusha
push
loop
sbb
rorb
popf
inc
xor
pop
out
movsb
push
inc
jle
or
add
mov
mov
add
sub
mov
and
fs
shll
or
and
out
rcr
mov
adc
inc
and
mov
adc
add
popa
jae
in
mov
test
test
lea
imul
out
movsb
mov
add
fiadds
test
and
inc
out
mov
fiadds
test
adc
out
push
std
add
cld
xchg
add
mov
ss
inc
mov
mov
mov
cld
push
add
jmp
jnp
xlat
add
add
pop
xor
mov
lea
jl
and
daa
out
lret
jp
call
add
add
ja
or
filds
or
stos
add
shrb
sbb
pushl
add
mov
fcomi
das
call
sub
xchg
hlt
jle
add
ret
adc
mov
fucomip
call
xchg
add
pop
pusha
jecxz
dec
imul
imul
or
jns
arpl
fs
inc
or
adc
add
cmc
in
add
in
in
add
mov
fisttps
xchg
xacquire
push
orb
jecxz
add
xchg
fiaddl
jmp
adc
lea
mov
bound
inc
popf
jmp
cmp
pop
jge
mov
psubq
sahf
loopne
jmp
dec
arpl
negb
add
push
adcl
or
fildl
jmp
inc
clc
add
cmp
add
out
cmp
add
fldl
jmp
mov
push
lahf
jmp
rcrl
add
fldt
cmp
add
mov
nop
in
inc
loope
fildl
add
fldt
lret
loopne
push
mov
aam
loope,pn
fildl
add
fisttpl
and
iret
sub
push
sbb
adc
add
movsl
stc
cli
adc
or
aad
add
xchg
or
popf
xchg
lds
push
and
adc
jmp
mov
add
ja
or
cld
dec
mov
cmp
add
aaa
sti
mov
inc
ja
or
push
sbb
sbb
sub
add
xor
or
ljmp
scas
dec
lock
add
add
mov
mov
xchg
std
gs
out
pop
cmpsl
sub
jg
sub
loopne
inc
incl
hlt
sub
inc
scas
push
cs
or
stc
gs
aas
enter
lock
cmp
xor
int
cmp
shrl
js
push
and
enter
call
add
addr16
pop
stos
add
xlat
sbb
sbbl
mov
shl
cli
in
pop
fmul
mov
into
ljmp
dec
sbb
adcl
push
xor
shrl
cmp
sti
push
orb
hlt
xor
cmp
mov
lret
and
xchg
sub
add
xchg
pop
loop
aas
dec
inc
loop
push
inc
stc
mov
xchg
es
lret
jmp
mov
icebp
stc
sub
addr16
push
add
mov
pusha
inc
mov
adc
pop
mov
or
pusha
inc
inc
cwtl
icebp
bound
aad
xchg
scas
adc
jle
xchg
or
jns
push
jmp
dec
pushf
jmp
insl
add
add
fiadds
add
mov
mov
addr16
outsl
dec
mov
add
cli
or
out
add
test
or
incb
rorl
push
nop
es
jnp
mov
cmpsl
inc
ja
fbld
fldenv
faddl
push
arpl
jmp
inc
add
add
pop
rcll
lret
push
inc
rcrl
js
adc
nop
shlb
inc
int3
les
jne
lea
ds
data16
in
jb
and
or
inc
cmp
data16
dec
in
jae
ret
mov
fstpl
les
in
xchg
jmp
jmp
sub
push
mov
add
mov
inc
int3
or
repz
out
cmp
cld
aad
outsb
sbb
cld
sub
incb
mov
cld
push
inc
mov
ljmp
and
call
mov
or
cli
xor
call
add
fldt
in
sbb
cld
lds
jl
xchg
addb
add
mov
add
jecxz
push
js
xor
rorl
jg
fldcw
or
pop
std
nop
filds
adc
repz
rol
xor
fldcw
or
xchg
jmp
ss
jmp
das
jl
notl
loop
out
xchg
adc
neg
leave
jb
push
repnz
xchg
add
jns
add
add
decb
sub
loope
ss
sbb
xchg
push
fidivs
xchg
dec
bnd
in
arpl
js
mov
movsl
or
bound
cwtl
xchg
jno
out
repnz
repnz
loopne
mov
jle
or
adc
pusha
mov
sub
cmpsl
jbe
add
mov
sti
add
add
faddl
push
repz
push
jbe
add
or
or
adc
inc
sbb
pop
push
test
fs
call
bnd
lods
int
add
pop
bound
and
cli
mov
bound
fadds
push
hlt
outsl
or
mov
jmp
je
xchg
test
dec
call
fcomps
outsl
push
add
aam
mov
mov
ljmp
mov
dec
cmpb
mov
mov
cld
aaa
mov
call
cmp
inc
xor
push
add
mov
fcmove
sbb
mov
in
add
push
aad
cmpb
pushl
add
pop
paddw
fldl
add
daa
cmc
xchg
out
decb
adcb
sub
fimuls
xor
mov
cld
bound
sub
sbb
add
sbb
pop
test
sub
nop
in
mov
mov
add
push
repz
pop
inc
xor
out
xchg
sub
stos
adc
sbb
add
add
jecxz
lret
lret
adc
pop
das
add
jl
je
and
add
sbb
ret
adc
xor
sqrtps
adcb
bound
aam
leave
lods
push
jb
fdivs
frstor
fsubrs
hlt
and
mov
nop
xor
add
add
inc
orb
subl
or
pop
jne
addr16
and
xlat
es
mov
fucomi
sar
fildl
je
push
inc
loope
in
xchg
fiadds
sub
push
jo
mov
pop
mov
jmp
mov
je
cmpb
das
fmull
jmp
add
pop
cmpsb
mov
ret
andl
rclb
mov
cld
daa
out
fsubr
lods
mov
jne
cmpb
jg
mov
fcmove
jmp
orb
add
add
pop
cmp
cld
add
mov
jb
cwtl
pop
pop
in
sbb
out
mov
lods
push
push
fwait
jb
mov
decb
add
xor
add
jmp
cltd
cmc
decl
loopne
les
imul
inc
xor
xchg
add
cmc
incb
or
in
add
xrelease
mov
xor
fcmovnb
cmp
mov
xor
cmp
xor
mov
add
add
sub
add
js
arpl
fldt
mov
jge
inc
test
push
mov
outsl
mov
add
movsb
sbb
dec
dec
push
in
mov
ja
jecxz
test
lea
outsl
dec
sub
push
inc
cwtl
sub
orl
jmp
inc
int3
imulb
loop
add
jmp
daa
cltd
loop
push
sub
cs
negl
data16
xchg
sub
in
mov
test
jecxz
lds
popa
mov
testl
jne
add
and
pop
inc
shrl
xor
leave
pop
ret
add
rolb
sbb
add
mov
cli
mov
adc
roll
add
add
push
bnd
movsl
adc
mov
mov
jge
filds
jle
mov
test
inc
jmp
fists
inc
adc
jns
lods
push
iret
test
and
xchg
or
inc
shlb
mov
mov
scas
fcomps
cwtl
mov
mov
add
lock
cld
xor
int
test
adc
movsb
mov
fsts
aam
outsb
jge
cwtl
lds
cwtl
aad
mov
fdivrl
sbb
jmp
push
inc
hlt
mov
in
lock
push
ljmp
sub
jne
vunpckhps
jns
or
mov
xchg
sti
lcall
sbb
add
rolb
call
lods
clc
add
inc
hlt
mov
add
leave
out
imul
push
sub
lret
hlt
jle
scas
repz
les
out
mov
cmp
mov
jecxz
mov
pop
loop
cmc
and
add
aaa
jo
push
push
add
add
and
xchg
jmp
std
lahf
ret
mov
rcll
jp
repz
jno
loopne
shl
mov
mov
xlat
xchg
loop
inc
or
pushf
imul
add
xchg
xor
repz
scas
aas
stc
inc
mov
adc
fisttps
ret
sbb
pop
imul
mov
add
mov
cmc
ret
into
fwait
call
add
nop
sbb
cmpsb
cmp
insl
incb
cld
add
ds
jle
out
nop
lcall
lcall
out
iret
je
jae
in
xchg
imul
stc
fisttpl
or
fscale
into
mov
pop
shl
call
jae
rcl
sub
add
add
loop
adc
sti
adc
cmpsl
cli
fsubl
inc
jmp
push
mov
pop
mov
add
ficoml
jl
je
rcr
push
lock
push
call
sub
jne
cld
adc
ja
dec
les
push
jecxz
iret
sbb
jo
fwait
add
adc
fdivrs
adc
sbbl
mov
inc
add
add
mov
push
ja
jo
dec
call
loopne
outsl
inc
rcrl
outsl
inc
pop
in
lock
cld
adc
scas
daa
xor
scas
cmp
movsl
daa
push
jmp
mov
rolb
sbb
xor
inc
or
jno
pop
push
push
es
lods
add
cmpsl
in
xor
adc
add
std
add
pop
push
or
out
add
push
ss
or
out
cmp
add
idiv
mov
iret
inc
mov
les
cmp
add
inc
aas
jmp
sarl
add
insl
ljmp
add
or
push
fbld
jo
faddl
add
scas
daa
cmp
cli
aad
ret
mov
pusha
xor
mov
pop
rcll
inc
int
popf
or
xor
inc
mov
loope
call
xorl
icebp
mov
xor
push
push
fldl
imul
in
std
fnsetpm(287
xor
or
rol
adc
outsl
std
daa
cltd
inc
mov
fwait
call
pop
outsl
in
push
filds
cld
mov
add
xor
cli
hlt
repnz
inc
jmp
or
loope
sbb
xchg
inc
outsb
and
les
cli
cli
insl
subl
stos
mov
mov
or
out
fbstp
stc
add
jecxz
out
lods
notb
bound
add
mov
fists
add
add
rorb
mov
aad
aam
or
jmp
jle
test
fs
outsb
add
pop
stos
cld
je
jecxz
adc
xor
add
sub
imul
cld
jecxz
in
push
mov
in
je
add
test
dec
jp
xor
mov
push
adc
lock
outsl
push
add
add
add
or
test
push
popa
inc
or
pusha
inc
or
pop
shlb
jne
stos
adc
adc
ret
adc
fbld
push
lea
mov
imul
cmc
cmc
cld
mov
inc
xor
stc
cld
shrb
push
sarb
call
fidivl
add
push
call
jge
cmp
add
pusha
les
add
push
cmc
mov
or
mov
std
xor
xor
mov
jno
inc
add
sbb
std
add
out
inc
pop
dec
push
cmpsb
movb
in
sbb
icebp
cld
rcll
jne
inc
dec
or
fdivr
mov
cmpsl
lret
call
push
lret
ret
insl
mov
hlt
out
add
add
fwait
call
xor
insl
loopne
inc
sahf
in
scas
daa
flds
xchg
mov
cmp
xchg
pop
or
std
mov
fwait
call
pop
mov
pop
imul
lcall
out
iret
ds
div
rep
fwait
call
add
fildl
pop
mov
add
add
add
push
add
xor
imul
mov
cli
in
cmc
cli
jmp
shll
ds
sti
push
jge
add
cmp
and
jle
aas
jmp
ljmp
jmp
sbbl
xchg
adc
clc
mov
fs
imul
xchg
pop
add
pushf
je
add
add
clc
cli
cmp
pusha
dec
add
jmp
push
lods
push
loope
imul
xor
cld
ja
arpl
mov
inc
test
or
add
and
push
subb
hlt
adc
jmp
jae
aam
jle
jno
xor
iret
leave
adc
pushf
icebp
push
add
add
in
movsl
fsubrs
cmpsl
fadds
call
adc
loope
outsl
adc
loopne
xor
ret
dec
sbb
enter
pop
je
sub
ds
es
xchg
enter
lock
mov
add
das
stos
out
jle
mov
adc
add
mov
xor
in
ds
inc
jl
add
add
mov
adc
add
mov
add
cmpl
mov
imul
shr
mov
add
stc
mov
aad
enter
mov
fsubr
add
mov
lods
in
dec
add
repnz
aas
cltd
rcrl
aad
pop
mov
scas
inc
fmul
aas
sbb
add
pop
xchg
cmpsl
add
add
out
fsubr
add
jae
lds
jmp
call
mov
addb
pop
mov
lds
frstor
rcrl
aam
mov
repz
fildl
int3
xor
xchg
jae
roll
repnz
pop
repz
out
mov
cli
popa
add
out
test
add
jne
jmp
jle
jne
pop
popf
cmc
stc
test
out
fwait
or
test
loop
test
sub
sbb
adc
repnz
je
out
int3
or
sub
addr16
or
test
inc
inc
add
mov
lock
cmc
jns
add
push
daa
in
add
call
arpl
jo
decb
ja
push
mov
push
fldl
ljmp
adc
fs
add
adc
pop
popf
add
jp
clc
xlat
add
in
pop
mov
fldl
add
cld
adc
insb
and
aas
or
add
sti
pushf
and
jne
test
xchg
fisubrs
std
test
repz
mov
cs
xor
add
ret
mov
sti
mov
pop
ss
or
repz
leave
das
stc
push
ss
test
and
mov
icebp
inc
mov
or
mov
jnp
and
add
int
rclb
mov
add
ret
cmp
incl
xrelease
fdivrs
xor
jl
mov
fsubp
sub
out
add
sbb
xor
int3
out
add
pop
xchg
fistpll
ds
pop
inc
xchg
cld
test
enter
psubusb
pop
test
clc
mov
pop
add
add
mov
jbe
add
adc
lret
out
repnz
pop
mov
add
loope
jecxz
dec
mov
jp
mov
jl
jno
cltd
ret
cmp
sahf
lret
mov
sahf
mov
mov
lea
movsb
jns
xchg
mov
fbstp
mov
push
inc
inc
jne,pn
inc
push
add
mov
jecxz
xor
or
cli
rcll
or
sahf
mov
cli
mov
push
inc
enter
push
js
call
xor
dec
add
mov
out
cli
inc
orl
add
adc
mov
sub
xchg
or
sldt
add
jge
jmp
cmp
xchg
out
pop
frstor
sti
call
sbb
out
jecxz
mov
xchg
add
flds
add
jmp
test
push
push
jb
int3
das
sti
jmp
xor
jmp
jecxz
inc
js
imul
xor
jne
pop
sbb
xchg
add
add
xor
adc
adc
add
movsl
lret
dec
adc
mov
call
cmp
push
or
aaa
out
lds
pop
js
cmp
push
or
xlat
xchg
ret
add
push
gs
push
rol
pop
jmp
mov
mov
xor
jge
cmp
add
cld
rorb
push
mov
add
cltd
cld
decl
mov
add
dec
ret
ret
fstl
fucomi
add
and
call
call
cmp
add
cmpsb
test
adc
outsl
push
rcll
scas
sub
cmp
les
jge
test
andb
add
push
and
sub
add
popf
hlt
add
lret
jecxz
xor
call
fistl
fwait
int3
inc
add
test
gs
fdivrl
cwtl
les
lock
pusha
xchg
mov
jne
push
lahf
or
push
fisubrl
mov
cli
push
xchg
mov
jmp
or
mov
xchg
lahf
and
movsl
fidivl
add
rcrb
outsb
ljmp
mov
xchg
cld
mov
ret
jmp
push
rcll
sub
cmpsl
jmp
cmp
insb
sbb
mov
mov
xchg
sub
call
pop
pop
cmp
add
jmp
cmc
inc
mov
arpl
and
lods
sbbb
add
add
repz
test
mov
jmp
sub
mov
adc
push
loopne,pt
add
add
cld
je
in
loop
inc
loopne
adcl
inc
fs
bound
push
fldl
and
push
adc
popf
add
aas
adc
ljmp
movsb
repz
clc
hlt
add
sbb
repz
cmc
adcl
push
fadds
add
fs
call
inc
aaa
sbb
gs
cmp
repz
inc
xor
mov
jmp
std
repnz
stos
sbb
roll
mov
out
adc
data16
gs
ljmp
sub
fildll
shr
jl
ljmp
xor
fdivl
and
int
sbb
and
or
or
or
adc
lock
popf
call
movsl
in
cld
and
orb
or
outsb
in
mov
out
std
mov
stc
jl
xrelease
stos
sub
jge
test
out
out
out
shrb
add
gs
inc
fs
fdivrl
add
enter
out
out
fdivl
or
roll
mov
ficoms
mov
cmpsl
add
mov
clc
mov
sbb
add
sbb
xchg
pusha
movsl
mov
mov
cmc
out
sub
pop
mov
je
hlt
jmp
insl
jle
test
add
add
jmp
mov
push
je
pop
mov
outsb
sbb
andb
jmp
in
jns
and
stos
inc
icebp
les
add
rolb
leave
je
hlt
cmpsl
sbb
adcl
jne
xchg
cmp
call
in
sti
jbe
addl
repnz
jmp
outsl
inc
add
add
and
pop
mov
mov
fcomip
inc
call
xchg
stc
add
std
inc
insb
add
jne
pusha
vsqrtsd
jecxz
pop
push
incb
push
adc
and
add
xor
xor
push
mov
add
push
inc
and
jmp
xorb
addb
add
ret
sbbb
sbbb
xchg
ja
lock
push
add
mov
sbb
aas
sbb
lea
movsl
test
cld
mov
mov
nop
mov
mov
idiv
icebp
imul
push
dec
aas
repz
jb
repnz
fimull
pop
cmc
jbe
sarl
add
add
mov
in
sub
cmc
ds
jmp
dec
and
in
les
test
cld
inc
scas
push
repnz
jmp
push
es
inc
sahf
fs
fisubrs
leave
mov
mov
mov
mov
or
scas
or
mov
xchg
imul
jg
push
sarl
add
add
loop
add
xchg
mov
into
popf
sti
push
inc
sti
adc
mov
ret
dec
jnp
xchg
sub
cli
scas
stc
cmpsl
cli
cld
ss
jmp
adc
add
int3
sbb
sbb
out
push
rorb
cwtl
push
jb
lret
out
fimuls
xchg
push
inc
sbb
cli
inc
add
add
push
inc
xor
fildll
mov
push
push
in
data16
ljmp
add
in
mov
cmc
shll
test
push
mov
das
inc
sbb
push
jg
mov
shl
ret
xchg
icebp
mov
iret
mov
push
inc
or
popf
adc
aas
xor
mov
push
lret
and
add
inc
mov
dec
push
outsl
push
pop
add
pop
int3
add
fstps
incl
push
mov
adc
movsb
or
outsl
sar
sldt
idivb
rcrb
xchg
iret
xor
xorb
pop
repz
pop
call
xchg
cmp
xlat
repz
lds
cmpsl
xlat
movsl
sbb
mov
adc
mov
bound
repnz
repz
xor
test
push
cli
push
ss
mov
jne
movd
or
xor
je
adc
lock
loop
std
stos
outsb
mov
hlt
adc
xor
cmp
fcompl
ss
pop
xchg
jb
call
lret
clc
stos
out
add
add
sbb
xlat
jne
inc
mov
lods
sahf
cmp
push
ds
add
push
or
sbb
mov
jecxz
inc
jmp
or
cli
jmp
or
std
outsl
iret
hlt
sbb
jg
pop
inc
leave
data16
pop
mov
test
ret
aas
cli
filds
mov
add
push
pop
hlt
popf
dec
push
jne
inc
cwtl
adc
mov
push
dec
fldz
fucom
sbb
push
out
bound
aam
lahf
mov
pop
out
stc
inc
in
pop
hlt
jno
cmp
inc
pop
jbe
jecxz
mov
inc
out
sbb
push
dec
icebp
out
xchg
cmc
mov
dec
push
xor
jne
outsb
test
or
std
push
inc
push
inc
sbb
into
loopne
add
sbb
outsb
fiaddl
add
fnsetpm(287
std
adc
loope
outsl
adc
loope
cld
ss
mov
pushl
adc
push
enter
leave
test
xor
subl
push
ret
ljmp
enter
xchg
mov
call
aas
and
add
mov
xlat
add
flds
xor
addb
inc
lock
cmpl
adc
xacquire
and
test
mov
xlat
in
mov
andb
idiv
jae
and
jb
lret
mov
repnz
inc
repz
add
add
sbb
cs
sbb
or
data16
mov
mov
cmpsl
push
div
decb
jno
repz
inc
sub
inc
cltd
push
incl
inc
fisttpl
movsl
mov
mov
inc
pop
jmp
inc
loope
call
dec
loope
popa
inc
fldcw
adc
add
add
adc
faddl
repz
iret
sarl
rcr
pop
call
out
repz
sbb
les
lret
mov
lock
ret
call
scas
repz
add
fldt
xchg
in
cld
push
pop
jge
mov
jne
jns
and
adc
or
add
push
pop
stc
jmp
mov
mov
mov
out
jmp
push
mov
and
pop
icebp
add
xor
bound
pop
adc
fnstsw
fmuls
imul
push
pop
ljmp
jmp
fs
ljmp
ss
out
insl
mov
xor
pop
sub
decl
std
jbe
sub
and
fiadds
push
mov
ds
sub
adc
xchg
std
jbe
gs
sub
add
add
xchg
aad
and
out
popa
push
fiadds
cmp
ret
fsubrs
sti
call
psubusb
sti
jmp
push
or
std
je
mov
std
mov
add
pop
mov
adc
xchg
dec
mov
mov
mov
jp
mov
test
mov
push
std
xor
loope
push
mov
fisubl
ds
ficoml
mov
ret
mov
ret
sub
mov
mov
cmc
add
push
cmp
mov
inc
and
jge
mov
add
inc
cmpsl
mov
inc
ret
and
hlt
add
or
inc
mov
dec
mov
enter
lret
dec
fsubrl
mov
add
jle
sar
xchg
bound
xchg
fcomp
lahf
lods
sbb
mov
mov
jle
fcoms
pop
or
adc
bound
loope
sub
fldcw
in
mov
add
sbb
call
idiv
cld
xor
into
xor
vfnmadd231sd
lods
fistps
add
mov
xor
mov
lret
inc
loope
outsl
inc
fcos
jmp
call
cmp
inc
int
out
sub
xlat
cli
imul
repz
arpl
ret
add
add
ret
push
cmc
mov
add
push
push
cli
inc
int
and
lock
inc
dec
add
push
push
call
outsb
mov
pop
scas
dec
pushf
push
jb
xor
in
sub
push
jecxz
jb
dec
or
ret
adc
gs
jmp
xchg
xchg
add
rolb
mov
xchg
jbe
subl
add
adc
push
xor
dec
xchg
jmp
in
popf
decl
es
add
inc
cld
sbb
and
xor
jle
jmp
ret
dec
mov
pop
out
data16
push
xchg
mov
jge
fsts
bound
jnp
xor
fimull
sbb
sub
and
push
push
sbb
lods
adc
add
aam
cmp
ret
add
adc
jle
add
mov
ljmp
cld
insl
pop
jg
rcrb
push
fbstp
dec
mov
xor
dec
adc
sbb
mov
out
jno
jb
cmp
push
xchg
lea
dec
pop
hlt
add
add
mov
mov
add
pop
dec
nop
jb
inc
mov
sub
fsubr
mov
pop
inc
or
aad
lods
add
jmp
stos
cmp
add
cli
adc
loop
call
mov
sub
scas
sbb
dec
neg
jmp
mov
pop
aad
pop
add
add
repnz
add
hlt
addr16
subb
mov
push
fsubr
mov
sbb
mov
adc
in
sub
sti
mov
sub
lcall
jle
and
lcall
in
dec
cmp
insb
in
cli
mov
rcr
test
jnp
jne
mov
pop
xor
add
push
lcall
mov
fisttpl
mov
sbb
lahf
cmpsb
sar
arpl
in
ret
in
dec
push
sarb
sar
inc
jmp
xor
popf
stc
fildl
aad
gs
in
inc
add
add
std
adc
cltd
sahf
outsb
pop
in
push
adc
add
mov
mov
add
inc
push
cmc
jne
cs
mov
xchg
cwtl
adc
add
sub
pushl
add
add
add
dec
cli
inc
xchg
add
xchg
cwtl
sub
add
mov
ret
dec
mov
pop
out
cwtl
fiadds
push
sub
loop
xchg
mov
xchg
mov
fiadds
push
rorb
mov
or
out
add
sub
incl
xor
push
xor
cli
sbb
incl
xchg
std
aaa
jb
aad
gs
aaa
cli
ljmp
mov
stos
cld
sarb
add
cmp
push
subb
aaa
mov
mov
scas
dec
stos
shl
push
std
ret
and
jp
data16
adc
add
xchg
mov
add
fucomi
cmpb
sbb
sub
rorl
lahf
mov
insl
aam
sar
push
and
xor
pop
xor
cmpsl
adc
cmp
pop
push
call
add
outsl
leave
loop
cltd
add
ret
js
loope
push
add
and
sti
fcmovb
mov
gs
xlat
call
xchg
les
mov
fisubl
pop
mov
rcrb
pop
xor
addr16
into
pop
add
pop
push
and
sti
sar
jmp
inc
filds
jmp
ret
lret
daa
mov
bound
sbb
rcl
add
inc
nop
je
mov
sar
repnz
add
cltd
jecxz
and
inc
inc
jmp
sbb
cs
cwtl
mov
mov
xchg
test
and
shll
ret
jmp
or
incb
movups
call
loope
outsl
cmp
jmp
mov
jge
fisttpll
push
adc
and
push
pop
add
mov
add
adc
inc
adc
fdivs
divb
pop
or
popa
lcall
iret
xchg
rolb
mov
push
jbe
orl
ja
aad
push
push
dec
mov
shrb
je
pop
ja
xchg
push
aas
and
push
aas
and
sarb
or
jbe
mov
loopne
call
ds
add
mov
inc
mov
cmp
add
mov
jo
mov
das
inc
and
je
mov
dec
or
mov
adc
xchg
fcomps
std
mov
cmp
or
std
in
pop
ss
push
ret
pop
mov
inc
mov
add
ja
ss
das
sub
sub
subb
add
dec
shl
add
add
mov
add
mov
jo
cmp
add
lcall
dec
inc
loope
enter
cmp
jae
sbb
mov
mov
mov
adc
std
xor
aad
pusha
mov
add
and
mov
cmp
call
in
push
jecxz
xchg
call
push
jmp
mov
addb
add
add
mov
or
stc
fwait
int3
cli
cs
filds
cmp
jne
aas
aaa
or
aas
push
or
roll
mov
out
xlat
mov
iret
xchg
xor
add
fistpll
sbb
jae
xchg
sub
fs
xor
add
push
iret
cli
jb
iret
cmpsb
lods
clc
push
jmp
sti
aam
jmp
outsb
into
adc
scas
sbb
add
fsubrp
or
loop
add
mov
adc
pop
pop
jg
rolb
mov
rcrl
mov
cmpsb
roll
push
fistpll
in
cmpl
inc
xchg
fs
addl
add
add
out
add
jmp
test
mov
ret
dec
adc
call
inc
call
inc
jge
cld
dec
inc
add
bound
inc
or
ret
lods
xor
pop
xor
movsl
mov
add
popf
scas
mov
pop
dec
ret
push
mov
mov
push
inc
sti
jns
add
add
cmp
leave
movsl
mov
outsl
mov
decb
mov
mov
mov
call
cmp
ss
add
mov
xor
adc
jmp
sub
rclb
add
jg
mov
gs
push
jbe
stos
jnp
add
add
xor
call
adc
push
lods
xchg
push
push
xor
inc
addr16
enter
cmp
jmp
mov
sub
push
out
test
or
loop
add
lcall
add
loope
dec
cld
mov
fistpl
rcrl
push
jmp
flds
add
cmp
push
jmp
adc
jb
xor
arpl
mov
dec
out
push
rcr
sbb
push
icebp
std
xlat
jle
addr16
xchg
es
jmp
inc
sar
idivb
leave
cli
jmp
inc
cmp
inc
jb
add
out
outsb
add
mov
ret
cmp
fildl
add
add
add
mov
jg,pt
push
enter
leave
cli
add
inc
inc
call
loopne
mov
cld
jecxz
add
dec
mov
call
inc
ret
icebp
arpl
add
or
add
cltd
or
add
stc
mov
xlat
insl
inc
push
dec
mov
test
mov
add
cltd
mov
dec
or
add
mov
call
subl
outsl
into
mov
dec
push
clc
lea
in
shrb
stc
mov
xor
divb
mov
rorb
notl
jno
sbb
add
xchg
clc
gs
repz
test
iret
add
jl
mov
ss
mov
mov
jb
dec
cmp
push
mov
bound
mov
jae
std
sub
ss
xchg
test
mov
mov
dec
sti
mov
sub
ss
mov
or
jp
mov
push
mov
add
lods
mov
lds
fld
fildl
adc
add
add
mov
fistpl
mov
add
add
mov
notl
pop
add
aam
mov
push
movsl
sti
or
pusha
sub
mov
pop
in
inc
push
add
jecxz
sbb
into
aam
inc
sub
push
add
and
je
push
mov
jmp
pop
sbb
bound
add
jge
dec
adc
imul
ret
push
jmp
inc
inc
notb
fcoms
xchg
push
fnstcw
push
sti
and
stos
xchg
les
sub
mov
sub
adc
mov
scas
add
cmpsb
xchg
pop
je
xorb
lods
jp
sti
aaa
aas
cmp
jmp
add
add
push
add
out
add
mov
in
mov
xor
xchg
in
add
and
lahf
outsb
adc
in
call
pop
push
cli
call
pusha
je
movsb
filds
inc
and
ljmp
repz
lea
xlat
add
mov
roll
inc
add
add
push
call
fldl
mov
push
mov
mov
out
xor
xchg
subb
jp
mov
enter
xchg
fs
jnp
mov
dec
dec
or
sub
lret
call
mov
inc
movsl
dec
cmp
cmp
xchg
sbb
not
dec
cmp
add
add
mov
mov
ret
shll
jb
dec
cmp
xor
mov
inc
inc
mov
repz
inc
fcmovb
cmp
jg
les
stos
int
outsl
shl
adc
aad
jb
xor
sub
ret
jno
fisttpll
sbb
cmp
dec
cld
push
and
fwait
fwait
sbb
xchg
loopne
stc
loop
sahf
add
add
and
xor
jecxz
xchg
aaa
enter
mov
or
das
bnd
movsl
mov
or
mov
arpl
xchg
sub
add
xor
movsl
xchg
aaa
pop
test
push
add
inc
je
sbb
je
dec
push
idivb
mov
fistl
pop
mov
add
mov
test
aad
mov
mov
pop
mov
push
je
es
jmp
jg
leave
stos
ret
bound
rcll
pop
enter
clc
mov
neg
jle
cmpsb
inc
add
out
es
add
mov
mov
mov
pop
cmpsl
test
add
pop
jl
rcll
jg
push
or
jle
mov
pushf
cmp
shrl
add
addr16
jne
in
add
packsswb
xchg
cmc
cmp
loop
add
push
inc
roll
sbb
dec
xlat
je
xchg
mov
movaps
popf
data16
popa
pushl
fmul
lea
add
dec
mov
mov
xchg
add
mov
mov
icebp
aam
xlat
mov
inc
roll
push
ret
inc
cld
sbb
hlt
test
call
insb
lods
add
int3
in
jb
xor
add
push
test
movsb
and
mov
adc
mov
movsb
adc
and
enter
mov
rorb
test
xchg
jno
mov
inc
rol
push
inc
adcb
add
es
push
jmp
sub
shll
ret
stos
adc
adc
iret
add
movsl
xlat
jmp
mov
scas
in
stc
mov
xchg
add
add
mov
lret
lahf
jb
fstl
sbb
nop
dec
jo
lret
stos
adc
push
test
mov
push
xchg
mov
scas
or
fildl
dec
pop
in
push
rclb
ljmp
and
mov
in
sar
mov
je
repz
addr16
rolb
add
add
fistpll
movsb
cs
add
xlat
out
and
mov
std
add
pushl
mov
pop
fldt
test
lret
jb
ds
rol
fildl
sbb
mov
jmp
cmp
jl
add
inc
sti
jmp
aas
call
mov
pop
outsl
hlt
adc
icebp
call
add
add
pop
std
dec
adc
lea
push
std
jmp
push
ja
jnp
outsl
lock
mov
ljmp
pop
std
test
in
push
cmp
insl
inc
in
jg
adc
call
movsb
push
int
sub
test
mov
std
push
pop
outsl
or
mov
mov
add
add
out
cld
or
xor
cmp
cld
inc
mov
ljmp
inc
std
add
push
inc
sub
push
aad
cmc
aas
mov
les
mov
cmp
mov
mov
mov
shrl
decb
loop
idiv
fcmovb
mov
add
add
pushf
lods
ret
pushl
mov
fstpt
sub
shrb
add
mov
into
mov
sbb
mov
gs
shlb
inc
jb
jno
lods
lahf
xor
xor
pop
adc
sbb
xor
mov
call
or
sbb
jne
daa
ss
scas
add
add
pop
in
add
sub
fwait
icebp
rolb
ret
cmp
mov
das
add
pushf
bound
into
inc
cli
fisttpl
sbb
add
push
push
jmp
ljmp
imul
sub
loop
push
mov
aam
lahf
inc
inc
mov
mov
test
add
add
add
mov
pushf
mov
arpl
pop
bound
adc
sub
sub
cwtl
lods
mov
push
cmp
jne
inc
ds
jmp
mov
xchg
mov
push
cmp
jmp
test
repz
fdivrl
ret
leave
sarb
push
push
cmp
adc
push
outsl
or
push
outsl
or
add
jmp
adc
cmp
mov
pop
rorb
sti
call
ja
fdivl
add
orb
adc
outsl
or
dec
std
jne
test
xchg
push
jge
aaa
pushf
jmp
je
faddl
mov
jns
inc
lods
aad
std
push
movb
movsl
icebp
cwtl
cld
add
add
out
lods
outsb
mov
pop
or
clc
cwtl
jnp
adc
xchg
xchg
mov
inc
cltd
jb
inc
mov
jmp
xchg
inc
inc
add
add
cli
xor
xchg
xorb
fisubl
push
pushl
sbb
push
cmpsb
push
push
std
aaa
or
repnz
les
add
aad
jno
adc
mov
add
push
les
mov
fsubr
jle
popa
mov
lret
fcompl
cs
cmpsl
stos
pop
add
push
xchg
arpl
decb
jb,pt
push
or
aam
mov
lods
mov
pop
aaa
and
push
mov
add
ret
mov
add
add
call
and
lods
jl
mov
xor
fsts
or
inc
imul
in
jbe
ret
shll
ret
pop
adc
mov
xlat
sub
xchg
ds
cmc
add
xchg
cmp
pshufw
std
aaa
sbb
das
mov
mov
push
add
add
test
push
pushf
jne
mulb
jbe
mov
push
mov
cmp
jbe
jle
lds
mov
add
mov
adc
in
sub
in
ret
push
xchg
fbld
pushl
add
aas
shl
xchg
fistps
addr16
xor
rolb
arpl
cmp
mov
add
scas
pop
add
stos
mov
aam
mov
cmp
lret
or
lods
dec
mov
jmp
aas
shl
daa
fadds
cmp
loopne
push
cld
xlat
adc
adc
std
rcrb
cmp
or
add
ret
call
lods
or
inc
mov
adc
mov
add
push
or
test
lock
add
add
jne
or
jnp
xor
notb
inc
test
pop
out
mov
jmp
inc
adc
mov
mov
andl
push
jb
push
jnp
mov
stos
cmp
mov
sbb
out
mov
jae
add
pop
dec
add
fldt
add
add
mov
aas
icebp
mulb
add
mov
pop
test
cmp
add
divb
aas
aam
sbb
iret
pop
repz
mov
mov
mov
jo
xchg
xchg
jp
gs
clc
idivl
daa
mov
neg
insl
iret
mov
push
add
sbb
rolb
rep
add
add
enter
mov
bnd
ljmp
sub
adc
mov
or
loopne
jne
fs
icebp
cmp
pop
dec
push
mov
push
leave
bound
push
add
out
scas
je
hlt
scas
adc
cmpsl
icebp
add
in
sahf
xchg
popf
push
sub
ljmp
mov
add
shl
xchg
popa
mov
mov
inc
mov
add
jecxz
loopne
sbb
inc
movsl
pop
cli
add
rolb
sbb
cli
imul
push
adc
sbb
xchg
shll
hlt
dec
je
pop
and
push
add
add
pop
aaa
dec
add
add
add
rcll
add
dec
invd
xchg
cmpb
inc
fsubrl
cmp
cld
fistpl
je
pop
pop
dec
lcall
add
mov
test
jmp
cli
adc
cmp
inc
add
push
ss
mov
ss
sub
adc
lods
cmp
mov
cltd
jae
pop
push
ljmp
jge
xor
jo
mov
out
ss
std
inc
jne
sbb
ljmp
shll
add
cltd
sbb
xchg
jge
mov
lds
in
adc
cmp
add
jne
cld
mov
push
mov
xchg
nop
scas
cmc
out
sbb
xchg
in
rol
daa
xor
scas
jecxz
flds
add
sbb
shl
rcr
mov
inc
adc
outsl
or
in
enter
mov
cld
repnz
call
aam
dec
enter
sub
pop
loopne
mov
add
inc
mov
inc
mov
pop
cmp
add
add
filds
and
lret
ret
lret
mov
add
sti
scas
adc
mov
fs
inc
outsb
jne
rcr
mov
or
cld
fiadds
cmp
je
stos
lret
sub
das
sub
xchg
inc
sahf
mov
mov
xchg
ds
xchg
bound
sub
dec
mov
in
aaa
xchg
cli
cmp
mov
scas
xor
xchg
add
add
pop
rcll
fisubrl
fndisi(8087
and
call
mov
ret
cltd
add
or
out
add
cld
adc
mov
flds
add
rcll
dec
push
mov
rorb
decl
sbb
inc
in
inc
clc
outsl
sbb
push
jecxz
adcb
sti
adcb
push
call
add
add
ljmp
dec
xor
addl
out
push
mov
dec
mov
or
cs
inc
sbbb
xlat
shll
lock
incl
pop
cli
dec
add
xchg
cmp
adc
nop
add
testb
mov
addl
add
add
cmp
mov
stos
fdivs
add
sbbb
ds
out
mov
ljmp
jb
or
inc
push
add
fstl
aaa
popa
mov
subl
hlt
lock
push
cmp
pop
stos
mov
push
or
xchg
xor
xchg
clc
shr
pop
mov
add
aaa
stos
cmp
pop
insl
push
and
popa
sub
mov
lret
push
cmpsl
add
les
lea
push
or
ficompl
adc
pop
mov
mov
sbb
imul
inc
cmpsl
cli
xchg
add
add
mov
cmpsl
cli
sbb
add
add
add
push
or
push
xchg
xchg
inc
cmpsl
cli
mov
cmp
repz
cmpsl
push
ds
cli
fsubrl
int3
inc
jmp
mov
shrl
and
imul
dec
pop
cli
je
pop
sti
sti
ret
in
test
loope
int
sti
fistl
jnp
mov
aam
mov
add
add
cmc
pop
leave
data16
push
ja
xor
outsl
add
popf
jmp
sub
int3
dec
dec
jo
inc
jne
xchg
jl
push
inc
mov
push
cs
jmp
mov
shlb
cmp
jo
jg
mov
daa
jae
scas
movsb
dec
pushl
mov
incl
add
mov
or
mov
lds
add
rorl
in
mov
or
aaa
mov
or
call
out
adc
repz
adc
insb
adc
testb
fadds
aaa
int3
cmpsl
stc
cmpb
rol
sarb
repnz
jb
shlb
mov
sub
dec
jmp
cmp
mov
mov
add
or
add
mov
mov
mov
jg
add
mov
mov
add
adc
sub
loope
pushf
xor
sub
mov
pop
les
cmpsl
pop
xor
pop
fs
fsubr
add
call
loopne
mov
push
push
jnp
int
adc
jl
xor
sub
add
xor
push
push
jmp
pmullw
jbe
loope
push
or
jle
mov
dec
mov
daa
sbb
enter
lods
ffreep
fdivl
sub
int
cmpsb
outsb
scas
call
pop
vphaddudq
test
mov
addb
mov
es
mov
cmp
xor
add
push
test
sarb
arpl
das
push
mov
imul
add
mov
addb
mov
push
push
jb
pop
repz
sbb
out
in
jmp
inc
test
mov
push
fs
sbb
add
mov
int3
movsl
inc
call
daa
mov
jmp
inc
jne
jecxz
mov
add
add
es
sahf
cltd
cld
rorb
outsl
and
and
sbb
sbb
lret
adc
mov
sbb
fcomps
std
mov
mov
call
frndint
jbe
pop
je
mov
pop
in
flds
call
lahf
addl
push
add
add
in
aas
mov
inc
ja
lea
andb
mov
ljmp
imul
mov
call
dec
ss
mov
out
mov
fsubrp
cld
adc
xchg
je
jge
mov
scas
jp
jns
cltd
push
mov
mov
cmc
lret
pop
repz
jbe
call
sub
add
add
cmp
mov
ds
xorl
push
inc
mov
or
push
sbb
sub
mov
mov
ja
jl
inc
push
cmp
ss
fnsave
push
test
shlb
mov
add
stos
rorb
fsubr
jp
cmpsl
jno
jne
xor
xchg
sbb
add
jmp
call
in
sub
iret
cmpsl
push
mov
scas
cmpsl
popa
aas
sbb
daa
adc
xchg
inc
pop
pop
sub
rep
add
aam
mov
mov
xor
rolb
testb
fldz
mov
cli
bound
lea
or
add
add
mov
jmp
mov
lods
clc
jmp
push
mov
jmp
xor
mov
mov
push
mov
cmp
inc
faddl
mov
fwait
push
add
and
mov
mov
and
pop
dec
mov
or
into
fadds
notb
orb
aaa
shrb
test
add
lret
pop
mov
sub
lret
arpl
rsqrtps
or
int3
sti
pushl
std
jg
jmp
pop
ret
xchg
push
dec
inc
mov
push
std
jg
xor
xor
loopne
iret
sub
fadds
add
xchg
sub
test
and
jnp
jno
or
add
add
ss
xchg
stc
or
js
xchg
nop
inc
cmc
cmp
lret
xor
sbb
mov
cmpl
test
add
subb
fdiv
cld
mov
mov
mov
mov
mov
ffreep
lods
inc
jg
mov
xchg
cmpsl
jae
ds
repnz
mov
or
aaa
incl
add
mov
xlat
outsl
shll
sbb
mov
outsl
leave
mov
jae
rol
hlt
and
push
das
cs
lcall
adc
jecxz
adc
cmp
ret
inc
mov
sub
jp
lock
push
sub
lcall
jne
cmp
add
push
addb
add
xchg
sub
add
sbb
scas
add
push
pop
add
mov
testb
cmp
or
inc
cmpsb
arpl
cmp
clc
lods
push
loope
mov
sub
cmp
cmp
mov
mov
pop
loope
mov
loopne
pop
add
add
add
push
push
cmp
push
pop
cmp
adc
mov
xchg
cmpsl
cmp
rolb
fs
sub
add
lret
jle
jl
add
push
loop
and
xchg
decb
dec
cmp
je
or
daa
sbb
inc
hlt
pushf
pop
mov
into
cmpb
or
inc
fadds
add
out
push
and
pop
fdivr
jmp
dec
dec
sub
push
add
flds
in
adc
or
xchg
into
mov
xchg
sbb
or
movsb
or
loop
cld
inc
push
mov
cmp
cmp
adc
push
push
add
lock
sti
lcall
jnp
mov
xor
add
add
repz
mov
adc
cmp
clc
sub
outsb
or
mov
mov
mov
fbstp
cltd
leave
scas
xchg
xor
mov
mov
sbbb
cmp
mov
divl
add
inc
lea
lret
in
and
jmp
fldt
mov
stos
out
sahf
push
and
cmp
lea
aaa
fcmovnb
inc
add
mov
pop
mov
int
int3
and
out
aad
flds
mov
mov
add
dec
addl
adc
into
push
movsl
pop
xchg
adc
xor
lret
int3
cmp
mov
pushf
out
cmp
in
cmp
mov
add
jns
incl
out
cs
jmp
jle
push
bound
cwtl
je
jo
je
inc
movsb
cli
hlt
mov
std
outsb
mov
fildl
jmp
ficomps
inc
in
push
dec
in
jg
or
jg
inc
and
call
add
cld
fimuls
insl
ret
lcall
add
add
push
repnz
pop
jno
xor
fs
mov
bound
cwtl
and
adc
or
movsb
fidivrs
cmp
mov
mov
gs
in
jg
sbb
aas
adc
mov
cld
lcall
mov
jae
lahf
mov
addb
mov
and
aas
in
addr16
add
icebp
gs
adc
push
pop
push
push
jo
pop
test
or
adc
loop
mov
jno
jmp
sbb
mov
xor
cmp
jmp
mov
shrb
mov
inc
insl
inc
adc
dec
ja
inc
jmp
inc
add
dec
xchg
and
jne
add
add
test
cld
test
ja
mov
dec
cmpl
or
xorl
xchg
mov
xchg
mov
lds
lret
mov
cmp
push
mov
sub
mov
call
insl
and
and
cmp
push
add
add
data16
add
cltd
mov
pop
call
adc
out
rcll
inc
add
fistpl
lcall
mov
call
out
jns
jg
jno
mov
xchg
pop
xor
dec
bound
adc
push
stc
or
pop
jmp
add
dec
add
add
fildl
mov
add
add
sbbb
into
dec
in
lds
in
mov
imul
jmp
cwtl
jb
in
push
sahf
mov
adc
shll
sbb
jo
out
and
pop
sbb
sub
cli
data16
inc
call
jl
call
jb
mov
push
pop
or
push
es
xchg
add
add
push
ljmp
add
cld
jae
int
cld
mov
outsl
and
loope
std
incl
filds
cvtpi2ps
add
je
or
adc
enter
pop
addr16
jo
push
add
sub
add
lret
add
js
and
or
fcmovnu
or
jae
mov
add
add
insb
pop
cmp
xchg
add
scas
adc
mov
testb
fisubl
mov
dec
add
mov
xchg
in
or
mov
jnp,pt
or
mov
cmpsb
add
mov
cld
jp
cs
inc
jb
icebp
scas
cmp
popa
jbe
jae
pop
inc
jae
add
cmpsl
adc
dec
pop
add
lret
inc
int3
ret
and
or
xorl
popl
mov
addl
jb
inc
ffreep
jns
add
add
push
jno
adc
jg
jmp
add
xchg
add
in
mov
mov
lcall
aas
icebp
hlt
add
add
or
adcl
jg
fucomi
add
and
mov
pusha
sub
cmp
jbe
xchg
pop
mov
aaa
adc
pusha
lods
or
mov
dec
jbe
les
xchg
outsl
dec
movsl
mov
add
pop
fmull
scas
mov
daa
add
aas
add
add
fadd
or
in
pusha
jge
xchg
mov
insl
mov
pop
xchg
xchg
cli
jmp
call
nop
cli
cmpsb
mov
push
mov
rcrl
cmp
add
jbe
fildl
push
fsubr
pop
cmpsb
cli
jo
out
mov
and
adc
jo
add
add
add
xor
mov
push
or
fwait
addb
xor
jmp
subl
or
std
ljmp
fiadds
cmovb
push
xor
or
xchg
push
jnp
mov
arpl
push
add
insb
lret
loope
sbb
xlat
mov
push
xlat
mov
push
sbb
add
add
add
cmp
add
mov
mov
inc
lods
mov
xchg
add
jbe
cwtl
aam
test
jne
cmp
add
popf
addr16
mov
js
faddp
mov
xchg
jnp
inc
flds
cmp
decb
mov
adc
fstpl
std
adc
jb
lock
jb
push
clc
or
std
out
add
rorl
cld
cmp
xorb
sbb
add
dec
enter
std
or
test
loop
mov
insb
adc
test
stc
adc
repz
aas
nop
nop
mov
loopne
cmc
jb
jecxz
ds
nop
adc
mov
sbb
add
out
mov
filds
add
pop
int
jae
shll
mov
add
sub
inc
xchg
jecxz
cmp
or
xchg
jle
mov
xchg
clc
cmpsb
pop
cmp
inc
push
loope
add
nop
add
sub
repz
pop
shr
add
jmp
popl
xor
add
xor
add
pop
fadds
sub
add
repnz
adc
xchg
cli
push
mov
dec
inc
jmp
scas
or
mulb
ret
cmp
mov
dec
std
adc
push
bound
and
rol
pop
fs
or
repz
xchg
cmp
jmp
mov
fildl
cmpb
add
xchg
add
test
sbb
add
add
repz
call
fstpt
in
add
push
add
push
inc
jne
or
push
repz
pop
xlat
add
out
mov
jl
and
movsl
fiaddl
add
bswap
mov
out
push
push
out
mov
fisttpl
mov
adc
adc
adc
add
add
test
orb
daa
aaa
xchg
xor
or
xor
xchg
lcall
test
lods
ret
pop
add
cli
or
cmpsb
cli
cld
shlb
inc
mov
inc
testb
add
inc
aaa
push
out
out
jno
ss
adc
movsl
or
pop
mov
jle
pop
lea
push
lds
pop
rolb
add
mov
jle
or
pop
mov
xorb
fldt
aam
fistpl
add
and
scas
outsl
scas
fistpll
ret
jns
lea
leave
push
pop
bsr
and
stos
fsubrl
movsb
fucomi
jp
out
and
fucomi
subb
idivl
push
test
leave
mov
pushf
fnstenv
add
xchg
pop
cmpsb
sub
add
xchg
repz
mov
or
push
bound
movsl
fucomi
flds
lock
inc
pop
test
add
arpl
sarl
push
push
ljmp
adc
mov
bound
ret
adc
or
add
aas
test
fstl
bound
aam
sub
jmp
add
add
cli
add
repz
addr16
mov
mov
rcr
adc
loope
jnp
movsb
fnsave
aaa
sbb
stc
or
bound
test
xchg
fsubs
outsb
push
push
std
add
mov
ret
inc
add
leave
cmp
filds
mov
dec
sub
bound
push
filds
mov
fsubrp
xchg
cmpsl
jns
dec
outsb
cmpl
lock
cmpsl
jns
add
jge
dec
clc
mov
je
add
sbb
outsl
pop
mov
lock
ficoms
adc
mov
lods
sbb
aam
mov
add
sub
outsl
adc
add
push
test
dec
mov
mov
lods
pushl
push
ret
ret
add
add
jnp
add
mov
insl
cld
xchg
loope
aas
outsl
adc
mov
or
xchg
dec
inc
or
stos
insl
cld
adc
repnz
lret
icebp
push
addr16
mov
fcompl
jmp
idivb
jb
test
mov
je
call
inc
or
mov
lret
xor
js
out
sbb
add
popf
mulb
push
fdiv
jge
ficompl
ret
mov
rcl
mov
push
mov
leave
loop
in
jp
add
jmp
adc
ss
fdivl
out
fdivs
clc
mov
jnp
jae,pn
or
fldl
xchg
rcl
stc
lods
lods
cmpsb
jl
daa
add
pop
ja
mov
add
in
repz
push
mov
mov
in
add
xchg
fisubrl
add
roll
mov
inc
lcall
xchg
bound
pop
rcr
test
xlat
addl
push
dec
cmp
lcall
fs
xchg
mov
mov
and
cld
jecxz
xor
add
aaa
cmpsl
rorb
insl
mov
sbb
repz
mov
arpl
loop,pt
repz
cmp
xor
jle
sbb
push
test
xchg
add
sbb
std
jmp
inc
push
cmp
cmc
std
push
cwtl
jecxz
and
std
cmp
dec
add
add
add
call
setne
addb
lcall
mov
hlt
std
cmp
scas
jno
adc
mov
mov
neg
cmp
pop
icebp
std
dec
xchg
data16
test
mov
fnstenv
cmp
jno
subb
imul
add
cmc
rorl
add
add
mov
cld
push
mov
ss
inc
push
js
pcmpgtd
inc
or
mov
mov
jle
or
add
push
ds
jne
icebp
data16
je
jae
xlat
and
mov
imul
mov
fisubl
push
sbb
insl
jb
add
mov
or
mov
push
outsb
mov
addr16
fdivrp
aas
xchg
in
sbbl
shrl
adc
fildl
mov
out
enter
cld
shrb
inc
test
jg
xchg
idivb
aas
jge
sbb
dec
add
fcmovnu
jg
xchg
pop
repnz
test
popf
fucomi
idivb
add
sahf
fildl
fimuls
std
es
shrl
mov
cmp
jmp
and
lret
add
jmp
les
jb
pop
xlat
fildl
or
mov
adc
scas
jecxz
stc
lock
pop
and
test
mov
add
pop
test
jmp
fwait
xchg
mov
cmp
jmp
push
xchg
add
mov
lret
mov
add
add
sti
aaa
pop
test
add
and
mov
push
mov
std
cmp
stos
or
ljmp
add
out
or
cmp
jnp
repnz
add
add
sar
stc
aaa
test
xor
lcall
and
and
or
lcall
add
test
push
std
fistps
idiv
mov
xor
addb
ja
test
fs
sub
add
jmp
pushl
andl
fnsave
inc
push
cld
subb
mov
jae
mov
jbe
fbstp
cmc
cmp
cmp
movsl
jecxz
ss
shl
pop
cmp
out
les
sub
int3
inc
mov
push
cltd
popf
push
inc
aaa
fucomi
jp
xchg
rcrl
mov
pop
add
add
add
jno
idivl
xchg
hlt
lods
add
jmp
jae
movsl
push
mov
jnp
clc
adc
mov
mov
popa
mov
push
sub
arpl
push
incl
stos
or
cltd
adc
sahf
cmp
outsl
repz
xor
push
test
hlt
sub
push
xor
mov
add
es
add
add
pop
inc
popa
inc
stos
or
mov
push
shrb
ss
scas
cli
mov
push
push
cmp
ja
adc
inc
or
in
add
mov
in
xchg
test
pushf
loop
inc
loope
xchg
or
outsl
cli
inc
add
mov
and
pop
inc
fnstsw
sbb
cmp
add
test
adc
icebp
cmp
xchg
push
leave
call
cltd
sbb
test
cmp
out
out
jmp
popa
xchg
sti
sbbb
add
cmp
mov
pop
bndldx
xor
fiadds
or
test
jmp
fmull
lahf
adc
mov
mov
mov
add
mov
cmpsl
add
int
repnz
call
lea
inc
in
and
push
xchg
cmpsb
mov
inc
inc
mov
xchg
mov
loopne
ds
dec
loope
ret
loop
xchg
sbb
pop
push
popf
test
imul
add
add
ret
mov
inc
push
mov
mov
or
clc
mov
inc
leave
or
sti
movsb
mov
jge
stc
ret
notl
mov
ds
jno
xor
fldt
ficomps
fisubrs
xorb
call
dec
aad
sub
into
fucomi
lea
int3
insl
adc
add
out
dec
push
mov
inc
adc
daa
ret
fisttpl
rolb
add
jecxz
icebp
ficompl
mov
jb
adc
ljmp
aam
inc
cmp
fldl
jns
flds
or
add
aas
cli
std
jmp
jl
iret
imul
add
cmpsb
cmpsb
jle
popf
jl
and
jge
jmp
iret
fwait
inc
jo
insl
mov
addb
cmpl
push
jge
pushf
sub
mov
jmp
xchg
mov
jo
test
jecxz
jp
test
and
jge
cmp
rolb
iret
mov
psrld
or
es
inc
hlt
lahf
stos
testb
push
cmp
daa
jmp
jmp
data16
cmpsl
fwait
push
add
sub
mov
pop
inc
popf
stos
out
punpcklwd
inc
adc
stos
idivb
or
test
jmp
jl
add
filds
jge
push
data16
add
sahf
ljmp
mov
pop
cmp
sbb
mov
movsl
push
cmpb
cmp
jl
or
andl
mov
and
jp
test
cld
xlat
popa
or
and
ret
jmp
and
and
push
mov
push
lret
cld
add
add
pop
jb
sbb
jmp
ror
jge
or
test
cmp
call
push
cld
mov
lret
inc
repnz
jp
incb
lret
mov
lock
dec
pop
pop
jp
xchg
lds
add
dec
ljmp
jg
pop
into
ss
clc
test
fisttps
pop
stos
outsl
sbb
fisubs
scas
ljmp
add
add
lods
pop
mov
sub
adc
into
out
add
sbb
mov
lds
pop
sub
int
lds
xor
xlat
dec
jecxz
mov
mov
idiv
add
ja
mov
jne
imul
sub
es
insb
mov
sti
xor
fs
mov
rcll
add
add
cli
sbb
jbe
icebp
xchg
loope
xchg
jbe
test
mov
jmp
xorb
outsb
rcrb
outsb
testb
pop
xchg
mov
add
icebp
mov
enter
jp
in
pop
ret
out
cmc
cmp
xorb
ja
push
jle
jg
fndisi(8087
cmp
scas
or
mov
fisttps
push
fidivrs
insb
jmp
add
pop
addb
fmull
fimuls
stos
loope
gs
mov
xor
repz
or
mov
add
fisubl
fwait
ljmp
dec
xor
movsb
data16
lock
fwait
imul
xchg
cld
in
roll
ljmp
fisttps
arpl
andb
mov
lock
add
jns
call
ds
xchg
call
jmp
mov
or
sti
jmp
sti
inc
enter
adc
mov
xor
pop
or
xchg
shl
mov
xchg
test
incl
adc
xor
jmp
repz
fdiv
cmp
mov
jmp
cmpsb
ss
add
add
out
call
xchg
nop
adc
das
push
or
hlt
aas
dec
or
dec
push
cld
stos
mov
shrl
std
fldcw
and
inc
jbe
pop
sbbl
out
shll
push
jno
data16
xchg
mov
call
lods
bound
adc
sub
mov
mov
cmpsb
jp
std
inc
sbb
add
negl
jecxz
or
movsb
sub
shll
jmp
jle
adcl
aas
in
pop
shll
std
bound
lods
shlb
add
add
js
icebp
dec
js
stc
in
or
ret
cli
insb
out
mov
jne
xor
adc
pop
lea
fsubr
ja
sbb
add
in
inc
fnstsw
outsb
add
ret
lahf
mov
push
sbb
and
out
cmp
cld
enter
lods
dec
fisttpll
cwtl
mov
mov
fsubl
mov
je
add
idivb
in
xchg
xor
dec
jl
adc
and
and
insl
fwait
push
jl
add
mov
add
push
mov
lock
xor
sarb
ljmp
ja
push
fnstsw
insl
or
push
and
lcall
fwait
push
pushl
jne
popa
leave
incl
jo
push
addr16
jne
or
or
jecxz
pop
pop
mov
add
es
aam
push
cld
add
add
jns
inc
mov
lods
xchg
xchg
test
xchg
loope
les
test
mov
test
mov
xchg
mov
dec
xchg
jge
mov
std
sti
mov
addb
xchg
inc
notl
sbb
inc
sub
xchg
xchg
mov
aas
xor
push
call
add
add
sti
mov
ret
leave
sub
add
jge
adc
lcall
les
and
arpl
add
or
out
fcmovnu
xchg
cmp
xchg
ret
jp
jb
jbe
movsl
pop
aas
movsb
jne
sub
push
fldenv
shrl
mov
add
jb
mov
je
pop
add
add
fucomi
push
fimuls
push
rcr
xlat
xor
add
and
add
fldl
mov
aad
fdiv
cmp
pop
jnp
mov
jo
loope
pop
push
jb
js
fdivrl
pop
clc
sbb
outsl
xchg
aad
and
in
scas
lcall
add
add
and
and
or
imul
ret
sub
int
push
mov
push
adc
mov
outsl
mov
mov
les
fadds
add
pop
repnz
icebp
mov
pop
add
andb
imul
mov
or
cli
orb
jne
and
fmull
out
pop
add
pusha
repz
incb
fistpll
adc
pop
in
data16
cmp
loope
jne
cltd
jmp
add
add
jl
add
pop
sub
mov
popa
pushl
les
dec
and
incl
add
add
sahf
dec
cmp
cld
mov
mov
lret
add
mov
test
ds
add
mov
add
jb
add
mov
cmc
adcb
or
movsl
decl
add
cmp
stc
ss
rcl
adc
mov
fucomi
add
add
mov
fcmovne
mov
fisubs
in
outsb
jnp
xor
daa
test
loope
idivb
dec
push
push
leave
pop
dec
xchg
outsb
call
push
mov
movsl
div
sbb
shll
dec
add
fsubr
add
pop
pop
add
fisubs
insl
outsb
repz
lret
push
loope
jg
imul
roll
add
mov
into
xchg
outsb
call
push
sub
sub
movsl
inc
aad
pushf
call
fcmovbe
sbb
cmp
mov
fidivrs
add
mov
sbb
pop
fstp
jle
fisubrl
divb
xchg
stc
in
loopne
mov
jo
movsb
mov
inc
fisttpll
add
enter
xchg
mov
out
filds
jmp
add
add
sbb
lahf
mov
jle
arpl
fidivs
xchg
mov
or
in
inc
pop
int3
fmuls
jae
inc
adc
add
pop
stos
inc
mov
jae
ret
rolb
adc
call
cmp
faddl
add
inc
or
aad
jp
aad
jg
gs
jmp
xor
add
nop
sahf
shr
xor
stos
inc
mov
fs
mov
xchg
add
inc
cmp
mov
add
or
jne
jp
gs
jle
gs
stc
andb
or
sarb
mov
pop
orl
imul
sti
mov
stc
mov
inc
data16
inc
add
add
mov
leave
adc
adc
out
aas
jge
ror
aas
jnp
or
pop
pop
adc
decb
outsb
ja
shr
cli
push
hlt
gs
add
jb
dec
inc
rcrl
ja
push
cs
or
fcoml
dec
imul
fsub
xchg
add
cmp
add
es
scas
std
leave
bound
call
imul
add
mov
or
or
ret
call
dec
dec
ret
outsl
cmp
adc
js
jae
repz
adc
mov
fnstsw
enter
xorl
lock
addb
or
mov
movsl
imull
add
mov
out
mov
xchg
pop
push
rcll
mov
fldenv
in
test
and
or
xlat
test
shl
add
sahf
jno
jl
mov
addr16
ret
or
imul
push
sbb
es
in
sti
fsubrl
rcll
xchg
fsqrt
mov
push
out
add
add
adc
sub
mov
in
aad
adc
fcmovnbe
jmp
in
adc
push
js
fistps
orl
jno
cli
and
xchg
xchg
fadds
jne
or
dec
push
sbb
xchg
pop
add
cltd
or
sbb
test
adc
adc
and
jl
add
and
pop
jmp
cmp
cmpl
lods
gs
rcll
or
or
push
adc
fwait
add
nop
inc
cld
push
mov
out
jno
cld
xchg
pop
rorb
push
cld
inc
jns
adc
mov
jae
cmc
dec
pop
mov
test
pop
jb
dec
idiv
cld
adc
ret
aas
xor
xlat
add
add
dec
cld
cli
mov
std
ljmp
or
negb
sar
cmp
jno
ffreep
or
mov
testl
cmp
dec
cmpb
es
andl
mov
or
mov
push
dec
pop
jcxz
lods
pop
out
cld
into
ret
mov
repnz
add
xor
pop
repz
pop
mov
clc
aas
push
mov
adc
sub
andb
inc
and
or
xlat
pop
iret
call
imul
test
dec
shrl
add
push
dec
std
movsw
out
repz
movl
lret
test
daa
hlt
addr16
add
add
cli
fimuls
lahf
mov
add
ret
add
cli
stos
cmc
sbb
and
lret
xchg
ret
test
cmc
mov
push
outsb
out
js
scas
jne
mov
adcl
add
jae
cld
mov
sti
sub
lods
dec
aad
mov
cmpl
pusha
or
ss
push
ficompl
ss
fdivrs
add
add
push
add
je
or
loop
call
inc
adc
cs
jl
add
inc
sbb
psubsw
decl
pop
insb
imul
pop
sbb
push
xor
fcoml
adc
pop
mov
sti
sbb
jmp
imul
lock
fsubr
mov
lcall
dec
sbb
or
pushf
adc
jmp
add
in
or
jmp
inc
adc
lret
mov
push
mov
cmp
add
xor
sti
add
repz
jae
mov
jo
fbstp
repnz
pop
nop
popa
jne
or
lods
decb
lods
add
xor
push
add
fdivs
lret
add
mov
les
add
mov
xlat
and
inc
cltd
mov
cld
push
xchg
repz
in
rcrl
mov
fldt
add
push
pop
inc
das
rolb
ret
fs
arpl
push
xlat
in
in
arpl
idivb
or
add
rclb
mov
pushf
out
add
add
sub
add
jl
clc
jnp
sbb
mov
mov
aas
ds
mov
sub
nop
sbb
add
push
add
call
xor
lret
or
cmc
sti
fisubl
mov
pop
stc
repz
je
bound
xchg
out
sbb
inc
add
add
je
stc
in
or
xor
pop
cli
insb
add
test
addr16
cli
push
fstpt
sahf
fildl
out
inc
iret
jg
sahf
pop
cli
push
cmpl
ret
pop
jmp
or
push
call
fsts
jmp
in
sbb
sbb
push
aaa
js
adc
mov
mov
jecxz
jp
lret
incb
add
leave
gs
cmpsl
lods
loop
add
decb
lock
jne
sbb
rcll
adc
xchg
ss
test
xchg
add
cmpb
xchg
add
lock
add
fldl
mov
jae
push
repz
setp
cld
jne
int
nop
pushf
and
adc
add
add
xchg
jne
push
leave
mov
jp
cli
pop
ds
mov
mov
mov
out
ds
movsb
pop
sub
mov
enter
aas
jb
cmpl
dec
add
jb
jne
push
jp
push
mov
aas
push
call
inc
mov
cmpl
incl
fneni(8087
call
add
add
jno
push
mov
rorb
mov
cltd
mov
xchg
mov
lds
fdivrl
dec
loope
loopne
pop
addb
dec
shr
add
pop
sub
mov
fucomi
mov
mov
rcll
xlat
xor
inc
out
add
add
add
add
push
pop
inc
iret
iret
add
dec
pop
insl
inc
mov
scas
or
mov
pop
rcll
lret
lea
repz
fsubrl
aam
jmp
add
cmp
sub
pusha
je
mov
iret
cwtl
jl
or
loope
imul
idivb
imul
jmp
add
aaa
loopne
xchg
mov
jns
jmp
jns
sti
mov
iret
mov
std
jmp
mov
mov
rcrb
clc
pop
je
std
jmp
cli
out
push
or
add
cmpsb
sar
jge
inc
add
sbb
mov
jae
mov
fiaddl
sub
cld
jne
lret
pop
and
dec
and
std
jne
sar
ror
lret
sub
add
mov
std
jmp
sbb
test
add
sub
std
sti
mov
dec
sbb
add
cli
mov
lds
dec
mov
mov
mov
test
add
mov
mov
mov
dec
push
lahf
sti
or
les
call
outsl
jg
popf
jb
inc
cltd
mov
inc
mov
cld
add
push
xchg
or
mov
cmp
inc
push
mov
push
std
xor
jb
sbb
lcall
push
mov
add
mov
in
ljmp
or
bnd
faddp
imul
add
add
push
leave
sbb
adc
gs
lahf
stc
mov
push
dec
adc
aam
mov
push
push
in
mov
out
mov
popa
test
fucomi
add
call
aam
ror
push
imul
mov
cmp
test
cwtl
shl
add
inc
mov
add
add
call
xchg
pusha
jno
insl
inc
mov
fildl
xor
pop
or
mul
jge
xchg
test
add
cmp
jmp
es
or
fs
stc
inc
popa
sub
mov
inc
cmp
pusha
cmp
jmp
test
push
test
nop
popa
pop
std
incb
out
fldt
test
add
add
fisttpl
lahf
sbbb
mov
xchg
lds
and
dec
add
add
call
mov
mov
and
add
filds
add
and
lea
addl
and
sbbl
jge
gs
loopne
push
sbb
lock
pop
decb
add
add
mov
push
daa
sbb
mov
loopne
cli
sub
bound
loopne
std
add
popl
decl
out
inc
add
and
mov
inc
addl
aas
and
fldl
sbb
lahf
add
sub
mov
add
mov
lret
mov
mov
push
mov
inc
cmp
lds
aaa
jb
cmp
call
xor
adc
push
inc
pushl
push
jp
mov
idiv
cmp
in
inc
in
lret
jg
mov
bound
xchg
aaa
jb
mov
lret
inc
mov
push
jo
mov
add
mov
add
add
addr16
pop
mov
cmp
lods
push
xor
outsl
call
xor
pop
jecxz
cli
out
and
cmp
inc
xor
add
enter
xor
push
stos
incb
iret
ljmp
fs
add
cmpsb
pushf
mov
call
xor
shl
cmp
add
scas
scas
aaa
xchg
or
ret
mov
arpl
fnstsw
cli
mov
pop
je
cmpsb
leave
jmp
push
inc
lcall
mov
mov
out
cmp
or
cli
aam
sbb
dec
cli
cmp
arpl
jb
ds
mov
test
mov
push
inc
std
add
add
pop
je
xor
cli
hlt
fs
pop
hlt
leave
adc
loop
fdivl
push
test
dec
mov
inc
mov
das
testb
and
jne
addr16
hlt
fwait
xchg
mov
mov
outsb
adc
out
jmp
mov
push
aas
clc
cwtl
scas
jmp
test
adc
lret
adc
add
scas
add
dec
mov
cmp
mov
adc
cmp
push
xor
std
lcall
push
inc
pop
xchg
push
inc
xor
cld
jne
push
push
incl
adc
or
cmpsb
jnp
mov
mov
pop
imul
stc
pop
cmp
ret
loop
out
pop
add
add
dec
test
and
cmp
loopne
cld
out
add
adcl
and
sbb
or
adc
repnz
aam
mov
jge
mov
leave
dec
xor
shll
xchg
pop
mov
inc
out
enter
push
or
cmpsb
and
mov
push
aad
and
push
mov
pusha
xor
pmuludq
add
add
push
mov
jo
in
out
jecxz
push
mov
sbb
inc
sub
inc
mov
sti
jp
cwtl
cli
cwtl
ja
rorl
addl
es
sbb
sub
mov
add
aaa
jg
outsl
ror
cs
cs
sbbl
jecxz
push
mov
sub
leave
bound
push
add
add
push
or
ds
inc
sahf
and
push
dec
incl
mov
sub
jecxz
mov
push
je
cmpsb
movsl
fcomps
mov
out
cmpsb
call
repnz
aad
fistpll
cli
divb
jge
jle
test
fisttpll
and
fimull
outsl
cmpb
into
dec
in
mov
inc
cmp
add
add
cli
scas
in
or
pop
mov
sahf
mov
xor
mov
xchg
push
inc
sub
cmp
arpl
clc
fstl
fdivrp
repz
pop
insb
arpl
in
or
mov
arpl
sar
pop
push
aas
hlt
push
shll
or
inc
dec
pop
jo
ds
jne
arpl
ljmp
pop
jo
add
add
addl
lods
cld
push
incb
aas
faddl
add
push
inc
insl
xchg
push
push
incl
inc
sub
aas
adc
pop
xor
xor
cmp
fadds
adcl
lret
inc
hlt
divl
or
and
cld
mov
xor
imul
mov
push
std
call
lcall
add
add
mov
decb
clc
push
into
call
hlt
ja
or
and
sbb
mov
mov
or
jle
enter
inc
loopne
mov
inc
leave
cmpl
pop
leave
lock
test
std
pushl
sub
aas
sbb
jne
push
jmp
mov
bound
jg
push
add
into
loopne
xchg
xor
add
fildl
rorl
add
mov
lods
pop
xor
les
xor
jmp
mov
scas
fsts
xabort
mov
stc
dec
insl
inc
outsb
xchg
shll
dec
add
inc
dec
call
jb
push
mov
add
movsl
bound
pop
inc
lds
fildl
fnstsw
dec
xchg
inc
cld
in
iret
pop
jl
jp
jb,pt
out
sub
call
push
int
sbb
mov
filds
and
pop
and
xchg
adc
stc
call
int3
dec
xchg
add
add
push
enter
decb
xlat
push
mov
bswap
arpl
sub
out
inc
movsb
push
repnz
fimull
hlt
cmc
std
jmp
add
jbe
push
repnz
xchg
fiaddl
psraw
loopne
sti
dec
mov
test
cmc
std
std
mov
pop
insb
pop
push
mov
cmp
add
push
fstpt
and
add
jae
call
repnz
push
pop
loop
or
push
mov
fs
mov
dec
mov
ds
jae
aas
pop
call
inc
add
filds
mov
add
loopne
mov
dec
add
ds
sti
jne
filds
jb
sbb
cmc
mov
mov
testb
and
mov
add
mov
mov
add
jne
cmc
sarl
jmp
into
inc
in
mov
insb
aas
sbb
das
jg
ret
mov
outsl
out
pop
push
fld
sarb
cmpsb
mov
add
loopne
mov
sbb
xchg
add
daa
dec
jnp
xchg
fdivr
sub
lods
or
jnp
or
inc
lds
lds
push
lds
adc
std
sbb
lds
cmp
lds
cmp
lds
jge
lds
push
adc
and
and
clc
dec
cwtl
mov
stc
dec
push
mov
stc
dec
mov
lods
add
add
dec
insl
fwait
add
stc
dec
leave
rolb
call
mov
dec
insl
mov
dec
sub
jns
inc
xchg
orl
inc
orl
xor
dec
mov
jns
rclb
jns
call
jns,pt
or
das
stc
dec
xor
inc
ret
pop
cli
dec
add
add
pop
cli
push
cli
pushf
dec
pop
cli
push
lcall
cli
lods
push
pop
cli
inc
inc
pop
cli
add
cli
and
cli
divb
pop
cli
mov
pop
cli
pop
adc
cli
mov
push
cli
xchg
cmp
cli
mov
push
cli
pop
inc
push
cli
mov
cmp
cli
pop
in
push
cli
cwtl
in
push
cli
in
push
cli
and
push
cli
insl
or
pop
cli
push
cld
push
cli
repz
add
push
cli
out
push
cli
dec
mov
xor
add
cmp
push
mov
inc
cli
inc
test
cld
or
inc
mov
scas
push
adc
rorb
xlat
dec
or
cmp
or
push
pushf
rcr
and
sub
daa
in
es
fldcw
fdivs
mov
hlt
or
sub
sub
add
add
out
xor
lock
mov
out
hlt
mov
cmp
jle
inc
mov
mov
ret
or
xor
push
ret
push
ret
push
ret
or
or
leave
lds
bswap
fadd
repnz
enter
enter
enter
lret
rorb
ret
lds
jp
lds
fiadds
lds
outsl
inc
lds
mov
jb
pop
lds
dec
lds
inc
lds
add
dec
cld
inc
orb
js
out
add
sbb
inc
std
sbb
dec
add
stc
inc
or
add
sti
stc
inc
and
inc
and
add
fyl2xp1
inc
mov
add
mov
add
mov
add
cwtl
stc
inc
push
jb
vpaddusw
dec
cli
push
aaa
cli
push
adc
sbb
mov
push
jb
push
ds
stc
test
mov
dec
call
xchg
xor
add
push
fiadds
add
add
dec
adc
xor
inc
lea
and
add
xor
jbe
ds
add
fildl
rcpps
jg
sti
hlt
std
packsswb
mov
std
decl
inc
mov
out
sarl
cmc
std
mov
sbb
hlt
addl
sbb
addl
shlb
aas
clc
push
das
cmp
mov
add
into
jae
iret
jp
pop
add
jae
inc
imulb
cld
in
leave
inc
out
and
cld
inc
in
cmc
mov
pushf
sti
adc
mov
cmp
cld
fistl
mov
mov
notl
xor
or
mov
aas
out
mov
xor
jl
mov
inc
stc
lods
test
jno
lds
add
xor
xchg
mov
ret
xchg
fsubrl
hlt
jnp
pop
inc
inc
pop
shrb
popa
inc
outsl
rol
push
cld
popf
sbb
pop
push
gs
inc
inc
and
sub
xlat
clc
sub
rorb
sub
push
stos
sti
pop
xor
in
push
insl
mov
inc
jmp
jg
jno
xchg
inc
mov
push
jne
loope
ret
jge
add
das
mov
daa
rcll
test
inc
stos
jge
pop
jno
pop
push
xor
jge
mov
push
inc
andl
popf
lock
xlat
add
fildl
push
lret
jo
pop
out
jmp
fsubl
mov
cmpsb
jne
push
inc
cli
fnstcw
jmp
mov
add
jmp
add
add
iret
andl
mov
pusha
dec
add
into
fwait
add
jmp
push
sbb
mov
pop
mov
jno
scas
cli
sahf
fistpl
cmp
aas
cli
sbbb
iret
push
out
mov
push
std
call
out
mov
push
std
call
out
mov
cmp
repz
jg
add
std
mov
inc
mov
add
push
pop
sbb
jecxz
mov
cmp
out
or
cli
dec
pop
mov
mov
add
sub
daa
lea
push
shl
cld
adc
dec
popl
lcall
outsl
pop
into
cmc
jecxz
cwtl
fiadds
mov
xor
call
inc
mov
cld
mov
js
add
add
cmp
xchg
out
hlt
je
pop
pop
push
and
aas
pop
push
cld
inc
push
in
cld
push
add
mov
and
cmovs
add
cmp
dec
adc
js
xchg
incl
or
in
push
mov
in
cmp
cld
ds
cmp
inc
and
xlat
add
add
lcall
clc
out
cmp
cmp
sbb
pop
mov
cmp
fdiv
inc
push
shlb
jecxz
mov
dec
stos
idivl
lcall
mov
sub
xor
pop
lock
inc
call
mov
inc
cmpsl
in
add
add
gs
outsb
jecxz
leave
dec
faddl
movsb
adc
inc
jecxz
add
cmp
cli
fimull
push
sub
adc
gs
outsb
sub
fidivrs
add
mov
xchg
xchg
outsb
adc
sti
data16
push
xchg
movsl
lahf
aas
cli
idivb
lds
fildl
mov
xor
bound
fs
dec
jb
add
add
xlat
aaa
insb
gs
cli
push
xor
jle
add
adc
inc
cmp
cli
out
inc
and
outsl
lea
lds
add
pusha
aas
cmp
cmp
xchg
cli
std
movhlps
or
shl
or
add
push
dec
cld
jg
push
jb
lock
mov
push
aas
hlt
pop
push
mov
add
add
mov
fistpll
push
dec
imul
add
push
jmp
or
add
test
jmp
pusha
cmpl
decl
fidivl
dec
test
in
push
idiv
xchg
movl
aas
rclb
add
cmpb
call
stos
pop
and
add
add
test
cld
mov
fldl
lock
cld
mov
xchg
cld
in
int
into
cmp
xchg
cwtl
fcoml
xorb
add
pop
aas
xor
and
scas
dec
test
mov
dec
xchg
push
cmp
jb
push
stc
mov
mov
addr16
and
push
enter
dec
dec
ret
add
cmovbe
rclb
jp
push
sbb
pop
test
jg
es
cwtl
ror
jbe
in
fdivrl
addr16
mov
sub
pop
dec
hlt
in
mov
movl
lock
cmp
test
testl
adc
fisubs
cmp
pop
sahf
push
push
popf
popl
add
int
cwtl
mov
cmp
cmp
aas
cli
out
inc
push
sub
lret
push
mov
push
jl
inc
ret
xor
cli
mov
fidivrl
mov
xor
xor
out
inc
cltd
mov
addb
ljmp
inc
cli
inc
fistpll
adc
and
jmp
add
add
add
fiadds
add
mov
or
sar
daa
jne
inc
cltd
std
add
pop
cmp
add
outsb
xor
adc
in
sub
push
push
inc
add
std
call
pop
cwtl
or
add
xor
push
mov
mov
icebp
and
incl
mov
push
add
add
fscale
cmp
andl
std
incl
loopne
jae
arpl
add
mov
pop
cmp
or
fsubrs
cmp
push
push
addb
jne
and
jp
push
call
and
orl
jo
jg
jge
sbb
mov
add
xchg
push
ds
pushl
add
ret
add
add
frndint
stos
andl
xor
out
xor
sbb
push
cmp
idiv
jp
cltd
dec
ds
push
out
xor
cld
pop
aaa
mov
incb
in
cmp
fnstsw
out
inc
pushl
jecxz
mov
jo
mov
xchg
repz
in
iret
ljmp
inc
movsl
in
sub
call
sub
push
clc
xchg
test
xchg
sbbb
cmp
gs
outsb
xor
sbb
mov
out
cmp
mov
lahf
clc
orb
sbb
jp
lods
rsm
scas
inc
popf
shlb
popa
cmp
inc
lock
sbb
cmp
mov
popf
call
sbb
faddl
mov
mov
inc
push
add
add
pop
sti
jmp
sub
roll
pop
inc
cmpsb
adc
arpl
lea
ljmp
enter
hlt
sub
dec
dec
ret
mov
jmp
dec
sbb
pop
stos
mov
fmull
incb
lods
mov
inc
pop
sub
pop
add
add
pop
ret
in
lods
fiadds
sbb
push
jecxz
test
fdivl
fistl
pop
or
cmp
jo
sbb
mov
sbbb
pop
and
push
mov
inc
dec
xchg
das
std
call
outsl
adc
bound
sub
cli
call
add
jnp
fildl
pop
mov
lcall
add
add
lcall
fildl
add
jbe
or
add
cmp
mov
pop
cmpsb
ss
push
mov
shll
mov
imul
jp
mov
enter
inc
rcr
les
cmpsl
stos
mov
add
daa
sub
inc
sbb
pop
add
push
lds
add
sbb
jb
std
inc
es
inc
push
xchg
aad
lcall
pop
sbb
add
xchg
lods
out
nop
sbb
mov
std
add
gs
and
mov
fwait
call
mov
mov
pop
and
pusha
sub
sbb
or
fwait
call
jg
cmp
cld
add
hlt
add
out
aas
fucomip
add
inc
pop
inc
ret
inc
or
daa
loopne
mov
mov
in
orb
cmc
scas
test
call
or
hlt
xchg
pop
sub
imull
sbb
xor
std
movsl
scas
add
test
add
add
fistl
test
add
or
xor
inc
insl
bound
loope
mov
cmp
mov
dec
add
mov
lods
or
call
inc
xor
test
es
push
xorb
inc
mov
xor
ret
sub
xor
mov
dec
push
mov
add
cltd
xlat
loop
pop
fadds
rsm
and
lea
xchg
mov
mov
call
clc
mov
xchg
sbb
push
int3
xor
or
add
imul
ret
push
int
sbb
sbb
mov
cmp
pop
fsubrp
adc
and
cmp
repz
adc
xlat
cmpl
add
jae
std
jne
lret
cltd
imul
pop
mov
jb
popa
int3
out
xchg
ds
andb
cltd
cld
shrl
imul
cmp
cmp
mov
push
xchg
xor
lcall
lret
or
add
sbb
cmp
add
mov
inc
ja
aad
cmp
in
gs
jl
inc
mov
call
or
adc
and
xor
mov
fwait
gs
out
cld
cmp
insl
xor
loopne
les
stos
or
sub
sbb
add
push
sub
add
add
mov
inc
push
ljmp
fldt
mov
mov
fiaddl
mov
inc
fiadds
mov
ret
shll
sbb
mov
pop
ds
mov
pop
mov
cmpsb
loope
jbe
or
xor
jmp
add
add
mov
adc
or
or
mov
fistpll
mov
ret
mov
cmp
imul
mov
shll
into
pop
addr16
das
xor
hlt
in
ja
xor
add
cwtl
outsl
cmp
insb
mov
adc
mov
mov
add
loope
jmp
test
sbb
pop
dec
adc
pusha
mov
call
mov
aam
ret
jle
popa
jecxz
inc
adc
cmp
pushl
mov
fcoml
outsl
fcompl
int
decl
add
addr16
pushl
fucompp
es
call
pushf
cmp
dec
and
cltd
lret
std
xor
add
mov
inc
inc
roll
ret
mov
mov
or
addl
inc
jae
mov
mov
out
lea
cld
inc
test
subb
pushl
dec
scas
mov
lea
cld
inc
add
incl
mov
test
ds
jb
add
add
or
jno
ret
or
je
fcmovnbe
out
fildl
das
or
sahf
jb
call
cwtl
icebp
bound
add
fucomi
int3
xchg
pusha
sub
dec
or
nop
mov
and
mov
or
xlat
gs
pop
call
add
cs
sub
scas
jecxz
iret
sbb
sub
mov
iret
sbb
add
cwtl
adc
loop
jae
icebp
pop
test
mov
das
add
lods
pop
shl
out
cli
fisubrs
cmpsl
or
push
rol
dec
sti
mov
pop
jl
mov
xor
fmuls
xchg
nop
insl
pop
das
and
mov
mov
inc
or
outsb
adc
ret
add
mov
test
jl
cmpsl
mov
sub
test
cmp
mov
cs
gs
aas
add
inc
out
decl
loope
inc
in
ja
dec
xor
jne
fmull
sbb
cmp
loopne
or
loopne
inc
add
add
cmpl
push
out
decl
or
ret
mov
mov
les
cli
mov
push
imul
push
push
imul
imul
cmp
popf
and
cmp
push
mov
ljmp
xor
das
mov
inc
or
test
out
aas
add
add
aaa
or
xor
ss
push
xchg
or
nop
sbb
sub
jb
and
jle
jns
repnz
hlt
aas
mov
add
mov
jmp
insb
addl
les
dec
lods
je
addb
push
lea
je
mov
add
addr16
addl
add
add
roll
mov
sahf
xlat
pop
mov
ss
mov
sbb
cmp
add
rorb
add
pavgw
cmpsb
lret
lods
out
mov
cmp
lret
clc
jae
call
push
xorps
fucomp
add
add
in
xchg
outsl
xchg
mov
cmp
aad
xor
sub
hlt
mov
ret
loop
cli
hlt
lret
inc
jmp
xor
test
idivb
push
mov
arpl
cli
push
fnsave
jo
loope
xor
mov
xor
adc
add
add
fmuls
push
std
adc
inc
idivb
test
cmp
mov
enter
mov
push
vpermq
push
lahf
aad
ja
movsb
or
add
inc
in
test
jo
mov
push
int3
mov
xor
dec
or
add
add
add
cli
add
jno
fstpt
add
iret
xchg
cli
decl
sbbl
pop
or
jne
pop
pop
test
and
push
rol
insb
mov
fistps
imul
ja
test
mov
or
jl
push
adc
lea
xor
mov
jae
stc
mov
ss
out
add
mov
add
sbb
jge
mov
ds
imul
outsb
rorl
mov
xor
mov
sub
jb
insl
icebp
jecxz
hlt
add
dec
jp
stc
imul
xor
jp
xor
or
popa
xor
jl
popf
mov
jle
add
push
mov
mov
out
or
lret
xor
mov
clc
mov
call
sbb
loopew
add
pusha
sti
mov
pusha
sub
mov
sub
push
clc
xor
xor
inc
xchg
fincstp
inc
loope
aas
cmpsl
jl
call
mov
mov
add
add
es
lods
fwait
add
leave
push
mov
jno
inc
jmp
ds
std
jmp
js
add
mov
jnp
mov
mov
pop
rcll
loopne
xchg
out
add
aam
lret
inc
jmp
dec
xchg
cli
and
mov
add
out
mov
ss
ret
add
rcrl
xchg
add
add
dec
sub
jb
icebp
sahf
arpl
movaps
push
stc
push
fnstcw
fldenv
dec
push
rcll
or
std
je
das
push
lcall
aam
pushf
negl
cli
test
push
lret
lea
aam
shll
mov
lcall
enter
ret
push
mov
add
mov
call
push
jb
adc
sbb
out
xchg
lret
fs
add
adc
sbb
pop
loopne
pop
lcall
xchg
inc
adcl
movsb
sarb
add
pop
xchg
and
repnz
jae
sub
out
sti
fwait
xchg
mov
cld
mov
add
add
loope
add
sbb
mov
and
insb
push
push
xor
lds
xor
cltd
ds
jb
popa
ds
xor
add
cmp
adc
or
dec
repz
js
cmp
or
fsubl
sbb
callw
push
in
cmp
int3
call
outsl
adc
xlat
mov
add
add
addr16
scas
div
push
iret
aaa
test
push
pop
js
fsubrl
mov
push
jbe
fsubr
addb
lods
stc
cmpsl
int3
testl
jp
pop
repnz
fwait
call
cld
mov
add
test
jmp
jne
aad
sub
mov
and
add
add
scas
adc
push
jb
pop
jne
push
push
add
inc
mov
fsubrl
test
mov
fiadds
mov
movsb
xor
xchg
in
and
shrb
cs
fldenv
add
shlb
push
dec
idivb
fildl
out
pop
jne
rcr
ret
lea
mov
in
shll
test
add
adc
mov
ret
xor
jg
lcall
pushl
andl
cmpl
jne
xchg
sbb
sub
cltd
xor
fdivrs
sbb
or
inc
dec
add
lret
and
pop
data16
dec
adc
jbe
mov
add
test
push
call
pop
out
mov
pop
rcll
sub
or
das
btr
pop
in
pop
addr16
aaa
ja
mov
sbb
addr16
aaa
ja
mov
mov
je
sub
add
or
sti
xor
mov
mov
jne
add
mov
fidivl
inc
add
mov
cmc
pop
xchg
mov
or
pop
cli
add
scas
adc
outsl
or
xor
sbb
icebp
mov
xor
incb
sub
js
push
mov
mov
in
jg
mov
cmp
std
loop
jne
push
mov
dec
add
add
xor
pop
inc
mov
out
mov
xchg
insb
mov
fsubr
add
push
popl
mov
rcll
icebp
push
outsl
pop
jmp
push
in
xchg
inc
sbb
xchg
call
add
lods
add
and
in
ss
cmp
sub
adc
add
add
mov
cli
insb
andl
or
aam
nop
lds
stc
add
std
in
mov
mov
push
or
aad
pop
call
mov
out
mov
pop
shll
cmpsl
mov
fnstcw
xchg
std
sarb
or
add
add
idiv
ret
dec
inc
cld
push
mov
add
mov
mov
jg
push
mov
in
or
mov
add
addl
mov
loopne
movntq
add
push
dec
or
movsb
and
jl
pop
clc
or
pop
sbb
xor
repz
mov
sbb
add
xchg
mov
jne
fs
sbb
push
jl
iret
in
bsr
jge
mov
add
add
outsb
cmpsl
mov
sub
das
test
inc
dec
cmp
les
icebp
das
inc
aaa
ja
jmp
cli
lock
cmpsb
out
mov
dec
nop
or
cs
mov
add
mov
push
das
rclb
out
adc
cli
xchg
mov
fldl
mov
js
outsl
pop
rcll
and
mov
cmp
lods
sti
cmp
add
outsb
fsubr
xorb
pop
repnz
pop
cmp
addr16
mov
scas
adc
add
add
and
mov
ffreep
pop
mov
mov
pop
andl
les
repz
pop
pop
ret
stos
decl
ret
pop
cltd
add
push
add
jne
jle
pushf
nop
sbb
sbb
ret
lcall
mov
add
mov
push
pushl
add
add
ret
call
out
mov
mov
jle
mov
nop
repz
fdivl
cmp
mov
rclb
add
jno
ret
inc
test
fs
add
bound
push
jmp
shlb
aam
lret
in
jne
inc
in
loop
stos
xchg
std
mov
add
fwait
sbb
mov
insb
test
xor
testb
pop
hlt
daa
pop
sti
mov
sbb
lcall
ljmp
ret
push
add
pop
and
enter
in
subl
dec
push
xchg
xor
pop
hlt
fnstsw
push
xchg
faddl
add
out
add
arpl
push
sbb
mov
add
popa
or
bound
stos
push
je
sub
bound
lret
or
test
popa
inc
ret
jae
out
les
add
test
adc
xchg
cmp
pop
or
repnz
xor
iret
push
add
cmpl
jg
sub
or
loop
bound
inc
cmp
or
loopne
add
add
leave
mov
imul
stc
xor
js
mov
mov
iret
inc
ficompl
ret
xchg
inc
inc
cmc
arpl
or
sub
out
daa
pop
ja
xor
vmovlps
add
ret
mov
scas
fwait
mov
insl
int3
adc
gs
or
addr16
add
add
fldt
lock
ret
std
add
add
gs
sbb
sub
adc
add
lea
loop
cltd
roll
test
mov
loop
adc
stos
add
push
adc
loope
or
movsb
ret
lock
adc
bound
mov
add
mov
add
jne
cmp
sbb
into
loop
neg
push
je
lcall
ljmp
pusha
repz
xchg
lock
shrb
mov
push
mov
dec
mov
je
call
add
incl
add
cmp
sub
and
mov
aam
sub
jge
add
in
sbbb
adc
jne
pop
jl
ret
test
por
push
mov
enter
enter
sbb
daa
sbb
push
sub
push
mov
shlb
lock
adc
mov
lea
call
push
cmp
rorb
aaa
das
sbb
test
add
sub
pop
test
pop
adc
std
jg
jp
or
sbb
push
cmp
jg
add
mov
xchg
shlb
fwait
cld
mov
repz
fld
push
cmp
pop
sti
sahf
ret
pop
pop
sbb
push
add
mov
push
ss
push
mov
push
jl
sbb
jg
xchg
dec
mov
push
ljmp
inc
shl
jne
add
imul
push
inc
mov
bound
inc
mov
cld
inc
mov
dec
ss
mov
ret
fisubl
or
mov
pop
lds
ja
pop
and
push
mov
in
jl
mov
stos
xchg
dec
adc
xchg
lret
mov
dec
adc
jno
lods
or
mov
pop
and
in
fisttpl
or
push
sbb
add
pusha
and
or
sbb
jns
pop
in
jbe
outsl
repz
or
xor
adc
or
jbe
bound
enter
in
sbb
icebp
push
ss
mov
pop
mov
pop
or
mov
jmp
test
insl
in
testl
add
out
scas
jmp
sub
add
dec
add
inc
cwtl
std
cmpsb
or
dec
push
adc
xchg
inc
cwtl
adc
mov
jmp
bound
repz
in
jne
jg
push
fsubp
or
sar
mov
push
push
leave
pop
or
call
into
jecxz
call
push
mov
divb
add
or
jne
or
adc
push
sahf
add
int3
test
push
stos
mov
add
add
mov
popa
pop
jne
add
ja
lret
loopne
adc
inc
lods
dec
add
xchg
lret
rcrl
add
test
jp
mov
adc
test
and
std
pop
jg
mov
add
mov
pop
pop
jecxz
add
add
add
add
add
mov
loopne
shlb
add
es
mov
leave
or
or
imull
jl
ret
outsb
in
lea
aaa
repz
or
dec
push
jle
mov
cld
push
inc
mov
cli
call
mov
jg
dec
push
push
inc
adc
inc
mov
clc
pop
adc
add
pop
sub
mov
pop
add
into
xchg
adc
push
lods
mov
jg
lret
mov
lret
mov
mov
adc
std
test
dec
rclb
ret
mov
fistpll
sbb
leave
bound
cmp
cltd
aam
js
loope
mov
fs
mov
add
test
mov
inc
sahf
in
shl
mov
mov
mov
in
or
add
add
pop
xor
dec
aaa
daa
shl
lds
jmp
rcl
or
das
lods
arpl
sbb
shl
lock
outsb
pop
clc
rclb
pusha
inc
cmpsb
ds
mov
mov
add
out
negb
imulb
push
vunpckhps
or
cli
mov
jle
mov
test
jne
stos
mov
cmp
sahf
push
jne
bswap
stc
cmp
or
or
psubsw
testb
sbbb
pop
test
or
jmp
add
nop
dec
hlt
dec
pushf
or
cmpsl
mov
inc
add
mov
add
push
incl
push
lcall
add
sub
mov
sarb
rcll
mov
in
inc
sbb
jnp
sbb
sub
shlb
or
jmp
cmp
cmp
add
cmpsb
inc
jae
add
add
mov
jmp
out
push
clc
push
dec
call
mov
dec
ja
lds
xchg
add
inc
rcl
jnp
sbb
mov
sub
movsl
icebp
xchg
inc
push
test
std
cmpb
icebp
inc
xchg
cmp
outsb
out
fistl
movsb
or
inc
movsb
insb
adc
mov
pop
fistpll
testl
add
add
in
jle
add
out
mov
cli
inc
mov
mov
add
addr16
fstpt
cmp
and
in
jle
fwait
aaa
mov
push
test
lret
movsb
xchg
jns
add
hlt
xor
in
mov
xchg
xor
add
add
fcomi
mov
jecxz
ja
mov
fcoml
and
add
filds
cltd
add
add
add
mov
fildl
cmp
mov
xor
mov
sbb
loope
repz
rcr
mov
imul
mov
rcrl
push
pop
cli
sbb
mov
xchg
push
arpl
jo
pop
test
sub
xchg
cmpsl
fwait
sbb
jbe
repz
add
add
xor
std
jmp
mov
cmc
cmc
out
ficoms
icebp
scas
cmovo
test
and
mov
lea
xchg
mov
es
inc
mov
cli
loop
jmp
push
movsb
add
repnz
push
xchg
fistpll
push
mov
mov
add
xchg
scas
addl
jmp
push
cmp
cmpsl
add
rcrl
add
sti
dec
push
lahf
loope
adcb
jne
cld
jp
in
mov
mov
push
in
jne
jl
sti
push
int3
in
jne
in
mov
jne
jle
call
ss
js
lds
std
push
xchg
add
incl
add
jp
mov
adc
mov
mov
push
xchg
fidivl
out
or
ss
bnd
je
lret
add
icebp
es
fistl
and
ljmp
add
xchg
fldt
or
or
sti
fidivl
cmc
add
fstl
repz
in
or
inc
loopne
add
add
cmp
adc
inc
sbb
sub
loope
cmpl
in
cmp
lock
inc
sbb
fistpll
in
ljmp
lock
gs
add
sbb
mov
push
cltd
mov
sbb
dec
mov
cmpsb
cld
sbb
add
negl
outsl
lods
cli
fdiv
pusha
icebp
jb
jmp
jmp
add
add
and
inc
out
inc
add
mov
loopne,pn
add
mov
cs
popa
cmc
mov
push
test
xchg
lahf
jne
nop
push
jg
xchg
stos
lahf
and
pop
gs
inc
stc
push
adc
loope
mov
stos
cmp
inc
jo
jno
mov
ret
loope
fnstenv
and
add
add
jecxz
add
icebp
je
and
jb
adc
test
or
divb
test
dec
add
aam
mov
aam
test
sbb
jmp
push
addl
stos
dec
mov
int
sbb
cmp
jmp
adc
add
gs
fidivrl
gs
adcb
cld
je
repz
fs
add
add
inc
fs
or
mov
jmp
jne
and
cs
mov
hlt
std
mov
jle
add
xor
xchg
mov
pop
push
std
push
xchg
jns
lea
aad
fcomps
movsl
enter
jp
push
sti
shl
adc
mov
out
jno
or
or
scas
xor
pop
add
add
mov
mov
cmp
hlt
repnz
fcmovnu
incl
std
test
jge,pn
cmp
leave
fdivrp
mov
and
outsl
push
rcl
roll
and
cld
mov
sbb
shrl
in
test
jno
imul
mov
jge
addr16
sahf
fstpt
ja
lock
add
jo
inc
push
insb
aam
cmp
nop
clc
cmp
jmp
jge
inc
add
lock
or
jg
add
lods
outsl
lods
dec
add
mov
loopne
std
fldt
rcrl
mov
xchg
jmp
jo
add
xchg
mov
adc
scas
fwait
add
add
jb
rcll
add
add
aam
jle
jmp
mov
cmp
dec
loop
rcll
xor
stos
das
adc
pop
rcll
test
push
lahf
jbe
cmc
jmp
pop
dec
loope
jp
inc
hlt
test
rcrl
repz
in
cli
push
imul
add
sbb
add
aad
push
mov
mov
stc
ret
fisttps
mov
adc
icebp
push
or
xchg
ret
cs
inc
and
fmuls
pop
jb
adc
push
jne
out
ficoms
icebp
out
or
mov
add
divb
notb
push
push
push
pop
pop
xchg
pop
pop
out
add
mov
lds
add
mov
xor
mov
hlt
das
shlb
xor
out
std
hlt
andb
pushf
lds
mov
hlt
std
xchg
jge
push
stos
mov
lds
in
inc
mov
add
cmp
sub
mov
inc
xchg
cltd
or
xor
xchg
sub
leave
sub
jg
add
sub
jno
stc
stos
inc
les
push
lds
fidivs
rcr
xor
aad
fsub
in
cwtl
add
cmp
shlb
add
push
in
test
shlb
pop
lods
testl
fucomi
pop
mov
jmp
hlt
fadd
jns
push
ret
push
hlt
pop
movsl
push
mov
in
mov
add
rclb
fcomi
add
idivl
outsl
mov
add
in
hlt
push
lcall
pop
in
add
pop
add
cmc
mov
stos
mov
stc
aam
sbb
jns
or
adc
push
jo
pop
jmp
bound
repz
rcr
push
shrl
add
add
adc
add
jne
in
cmp
sub
in
dec
inc
sbb
mov
mov
xchg
push
ss
push
test
notb
adc
xchg
push
add
cmp
push
xchg
fildl
jmp
dec
fists
add
mov
and
lea
add
lahf
add
shlb
jge
xlat
push
push
dec
call
lahf
sub
das
cltd
cmpb
sbb
jbe
std
cmc
mov
sub
addl
and
add
mov
inc
rorb
adc
xchg
stc
and
dec
decl
addb
add
mov
hlt
in
add
add
aad
xchg
inc
push
test
ljmp
shll
jne
mov
gs
mov
clc
mov
hlt
std
addr16
idiv
cmp
mulb
pop
imul
adcb
outsb
bound
mov
xor
test
pop
add
mov
icebp
lahf
pusha
shl
mov
addr16
sti
add
jle
add
mov
mov
cmp
mov
lds
js
std
or
cmp
fiadds
aam
pop
jno
hlt
fsubl
imul
cmpsl
outsl
ss
sarl
dec
and
ret
xor
cmpsl
dec
movb
loope
test
ss
xor
push
stos
addr16
shrl
cld
add
add
push
push
les
or
les
clc
std
push
mov
push
movsl
or
push
push
loope
push
movsl
or
flds
sti
jle
pop
xchg
ja
add
push
mov
push
fldenv
push
loop
test
jb
ffree
fiadds
imul
test
mov
xchg
xor
xchg
xor
add
and
call
jb
roll
call
adc
jle
repnz
mov
push
mov
pop
call
push
movb
add
aam
jp
cwtl
lea
lcall
adc
mov
sbb
repnz
ret
dec
ljmp
push
test
add
add
pop
add
add
ljmp
icebp
test
xchg
scas
cmp
xchg
dec
sbb
mov
sub
call
cmp
add
rcll
loop
xchg
push
sub
mov
dec
test
pop
sbb
push
adc
push
lock
out
sub
sarb
or
rorl
add
add
int3
xchg
mov
cld
sub
inc
cltd
int3
mov
shr
jg
mov
or
mov
adc
fsub
pushf
sub
ss
jmp
pop
shll
xchg
jle
js
insl
inc
loopne
cmp
add
push
faddl
or
in
inc
mov
addb
mov
cmpsb
pop
pop
pop
push
in
mov
fucomi
xchg
jmp
inc
test
stc
and
xchg
gs
cmovb
cmpl
cli
mov
out
and
call
imul
clc
rcl
mov
fimull
dec
mov
sub
es
inc
es
or
add
add
mov
fdivr
sbb
xor
hlt
push
xor
xlat
cmp
push
test
std
mov
xlat
repnz
stc
fwait
cmp
and
xchg
or
es
icebp
fs
jmp
inc
pop
fildl
adc
sahf
or
pusha
fildl
into
adc
out
adc
andl
add
in
jmp
bound
add
add
sbb
outsb
or
jb
stc
scas
out
push
mov
jecxz
xor
pop
addb
lea
outsl
xchg
or
movsb
outsl
add
aam
push
hlt
out
ficompl
mov
adc
shl
into
add
cmp
jle
mov
xchg
xchg
fistl
xlat
pop
lds
and
add
add
fmull
and
push
inc
pop
lds
pop
push
test
fiaddl
add
pop
xor
call
test
push
test
pop
mov
add
adc
mov
pop
pop
bound
mov
out
je
mov
dec
xlat
sti
fidivl
xor
cli
out
cmpl
mov
les
mov
add
add
xchg
mov
jnp
call
popa
sub
inc
mov
mov
lcall
jne
mov
mov
call
and
mov
xchg
mov
fcmovne
cmp
and
xchg
cmp
fdivrl
add
mov
push
aam
scas
fwait
call
sub
cmc
push
add
sbb
test
enter
add
cmc
mov
data16
inc
pop
int3
flds
fucomi
cmp
call
add
in
lods
mov
sub
cmp
jge
ss
je
in
cmc
mov
lea
das
sub
fisttpl
pop
jnp
addr16
loop
sarl
jmp
stos
jp
es
jb
es
mov
push
adc
jo
add
outsb
pop
sti
jecxz
jmp
mov
add
jmp
aaa
hlt
je
cmp
xchg
fiaddl
jmp
mov
add
mov
jecxz
xor
add
jb
in
add
enter
icebp
add
push
fs
xchg
psadbw
lds
or
push
pop
sbb
pusha
in
addl
in
and
add
mov
add
bound
decl
jne
decw
shl
dec
pushf
pop
dec
add
add
jmp
dec
and
gs
or
js
add
and
mov
rcll
pop
inc
adc
fwait
and
push
iret
xlat
arpl
imul
jbe
add
mov
sbb
push
adc
ja
and
sbb
aas
adc
xadd
loope
incl
push
inc
jno
dec
mov
xchg
ss
sar
inc
ljmp
add
add
decb
cld
out
aas
mov
xor
xchg
stc
jle
mov
sarl
sub
out
out
shl
adc
loopne
add
aas
push
test
xchg
rorb
fucomi
mov
jecxz
aam
jmp
sbb
es
shll
shll
movsl
fucomi
or
add
mov
repnz
int
in
fs
hlt
or
ficomps
arpl
imul
xchg
mov
cs
callw
pop
mov
xor
cmp
bound
mov
call
and
bound
aas
jno
fcmovnu
xchg
xor
lock
mov
add
hlt
xor
mov
add
add
xor
mov
cmpsb
test
xor
pop
adc
cmpsb
aaa
xchg
std
loop
jne
shll
lea
hlt
add
mov
int
movl
imul
aas
mov
addr16
and
or
mov
jno
test
xchg
sub
add
xchg
push
add
arpl
or
jp
andb
leave
rcll
inc
and
leave
rclb
cmpsl
add
adc
pop
mov
ret
sbb
call
stos
and
adc
mov
jl
pop
in
mov
or
test
in
add
sbb
or
push
add
cwtl
adc
sbb
sbb
push
test
add
jl
or
xchg
or
call
mov
add
or
and
bound
out
jns
jo
into
fisttpll
ds
add
aas
daa
mov
adc
add
sti
into
inc
jge
loope
inc
jg
dec
pop
adc
shrb
cmp
add
mov
insl
iret
jmp
mov
mov
add
xchg
loope
xchg
add
jg
add
lock
rcr
lcall
das
push
mov
pop
ret
test
pop
lcall
mov
sbb
pop
lret
shll
add
mov
mov
fcmovnb
cmp
add
int3
jmp
sbb
add
in
pop
mov
sub
pushf
pop
in
daa
mov
fstpl
pop
mov
daa
fcmovu
insb
mov
add
jno
inc
xchg
add
adc
mov
int
push
jb
mov
lret
stc
jge
lret
jmp
push
faddl
mov
leave
decl
rclb
and
loopne
jmp
or
sbb
in
sbb
xor
xorl
mov
fildl
fs
or
mov
mov
xchg
mov
add
jb
push
cmpl
bound
xchg
or
add
add
in
fistl
jno
sub
out
or
lods
inc
mov
movsl
adc
int3
pop
mov
sbb
rclb
or
out
rorb
add
mov
add
sti
dec
mov
dec
or
add
mov
add
call
pusha
pop
jne
add
add
std
add
int3
cmpb
add
and
addl
inc
mov
or
insl
mov
jg
lret
sti
cmp
pop
fwait
mov
dec
mov
inc
dec
jl
add
xchg
add
sbb
xor
add
in
push
xor
int3
fstl
cmp
test
add
std
icebp
js
incl
push
inc
inc
bsr
std
icebp
jns
testb
add
fstl
sub
mov
shll
add
inc
sbb
stc
cmp
cwtl
into
in
shll
vmaxsd
mov
lea
pop
sub
addb
out
jae
notb
fwait
call
add
add
inc
jmp
test
or
xor
pop
lock
cmp
xchg
outsb
js
pop
xor
xor
pusha
test
mov
push
and
sbb
mov
bound
bound
pop
rcr
push
loope,pt
push
das
sub
push
jb
mov
sub
mov
dec
mov
add
add
jo
push
out
jb
call
imul
dec
test
add
mov
sbb
adcl
mov
push
sub
outsl
xor
mov
mov
or
mov
push
add
cmp
enter
fisubrl
shll
ljmp
add
xchg
scas
notb
popa
shll
push
shrl
adc
out
push
push
pop
cmpsb
call
push
mov
in
push
lods
mov
call
icebp
test
aas
cmpl
add
cmc
adc
adc
dec
dec
adc
lods
notb
pop
shll
cld
adc
call
scas
or
pop
pop
jne
mov
add
loop
push
insl
insl
int
mov
and
push
cmpsb
sub
push
adc
xchg
sti
inc
popf
cmp
add
xchg
in
inc
mov
icebp
jnp
movb
add
push
repz
add
in
sub
xchg
imul
test
test
out
incl
add
jno
rolb
mov
ret
push
fmull
add
mov
out
aaa
lret
push
repz
out
sbb
jb
insl
out
divl
inc
pop
lret
insb
shrl
fwait
addr16
lods
fstpt
adc
xor
cs
inc
sbb
add
jge
fcmovnu
addb
fldt
lret
add
ret
adc
jge
iret
lret
testl
ficoms
dec
mov
jg
jle
in
add
call
jb
adcb
iret
add
testl
ret
aam
xchg
pop
lods
cli
jbe
repz
call
fwait
push
inc
popa
or
xchg
es
std
inc
aam
cli
inc
test
mov
add
add
add
lret
out
fstps
repz
mov
imul
xchg
mov
fldl
and
leave
sbb
shlb
or
in
add
dec
push
cltd
movsl
aad
imul
or
pop
adc
test
jge
add
add
fadds
mov
jecxz
sbb
xchg
add
mov
sub
roll
imulb
lea
je
addr16
divb
out
rclb
test
lret
adc
add
sbb
add
lahf
or
adc
xlat
je
mov
sbb
in
adc
sub
gs
add
out
xadd
xor
ss
in
mov
add
dec
ds
bswap
out
int3
insb
push
fmul
xor
sti
stos
mov
sub
jge
xchg
decl
les
stos
outsb
into
mov
fdivrs
out
push
or
sti
cli
pop
rcl
decb
ja
lods
outsl
lds
std
cli
add
add
fdivl
add
sub
push
push
clc
dec
imul
mov
add
sbb
push
leave
sub
pop
in
js
pop
inc
leave
mov
xor
repz
loop
adc
outsl
xlat
cmp
incl
mov
loop
testl
cmp
mov
push
loop
jp
pop
sbb
add
add
sbb
add
shlb
fucomi
cmp
sti
adc
add
mov
mov
stc
out
out
subl
add
mov
jns
push
add
jmp
adc
push
inc
in
push
lea
adc
xchg
pop
cli
hlt
test
xchg
or
data16
add
add
popa
jl
andb
cli
jecxz
mov
ret
ss
cli
aam
roll
jmp
out
jmp
cmc
mov
dec
stc
dec
add
sbb
test
notb
xchg
test
notb
cltd
sbb
or
aaa
add
bound
sbb
and
mov
dec
jecxz
inc
add
add
add
lcall
push
leave
push
jmp
sub
fdivrp
jmp
dec
lea
cld
push
add
ljmp
jl
ret
xchg
or
mov
rclb
mov
inc
push
sti
shl
sub
in
cmp
pop
adc
ja
sti
sub
push
dec
xor
lods
jnp
add
icebp
adc
xchg
shrl
cmp
lods
or
mov
rclb
daa
mov
jp
sti
mov
outsb
mov
paddw
sub
dec
add
add
cmp
out
imul
cmp
inc
add
push
testb
add
cmc
and
mov
xchg
cmp
push
movsl
mov
xor
stos
movsb
clc
rol
xchg
pop
faddl
daa
fsubr
add
sbb
out
jne
dec
in
ret
pop
cltd
fisubs
push
push
fimuls
je
add
mov
add
dec
push
ret
dec
sbb
test
add
add
jmp
shll
sarb
or
and
imul
adc
std
call
clc
push
jl
xchg
push
inc
cmc
mov
cld
xchg
int
jmp
add
push
call
mov
loop
push
lret
fwait
add
cld
stc
sti
jle
cmp
push
clc
mov
mov
mov
add
add
jecxz
push
push
faddl
xor
add
xor
pop
jl
ret
fwait
dec
aam
push
inc
add
adc
in
subl
fs
std
stos
sbb
lods
mov
orb
xchg
idiv
sub
lods
subl
lcall
testb
mov
call
dec
repnz
add
sub
testb
sbb
sbb
popa
dec
repnz
cmp
mov
sbb
push
sub
mov
aam
cmpb
rorb
mov
cmp
cmc
cwtl
int3
popf
pop
xchg
mov
lcall
ds
mov
outsl
mov
cmp
dec
lea
outsb
mov
add
add
inc
cmpsb
cs
cmc
mov
pop
mov
mov
add
nop
test
mov
sub
mov
jg
ds
clc
shl
sbbl
jo
mov
sti
mov
xchg
test
dec
mov
mov
pop
mov
xchg
pop
les
fcmovnbe
cmpl
in
sub
add
mov
popa
pop
mov
add
add
and
ljmp
adc
nop
test
sbb
mov
pushf
dec
test
mov
adc
mov
test
fucomi
arpl
frstor
push
sbb
ljmp
pusha
add
call
sti
add
add
fildl
repz
popf
popa
cmp
cmp
sahf
dec
pusha
mov
ljmp
in
fnstcw
pop
out
pop
mov
lock
fstpt
test
out
insb
inc
aam
fisubrs
push
jb
test
outsb
adc
cli
rcll
pusha
cs
push
cmpsb
xchg
lret
stc
hlt
add
add
fwait
or
stc
add
adc
xchg
add
ljmp
std
adc
sub
push
xchg
mov
std
push
fldl
sub
push
mov
loope
mov
mov
les
and
dec
jne
lret
push
xor
ret
dec
int3
mov
xchg
add
add
add
lret
dec
push
decl
movl
cmp
call
push
add
or
mov
sub
sbb
inc
adc
dec
test
lock
mov
int
mov
mov
jg
fstl
jge
stos
lods
add
push
add
pop
aaa
jl
add
jge
push
lea
add
mov
xchg
xor
loope
stc
std
mov
repnz
jae
xor
add
repnz
or
jmp
add
in
fdivl
pop
push
fidivl
lcall
lods
insl
fmuls
cli
cld
bound
pop
sub
and
stos
dec
pop
jmp
add
xchg
add
bound
scas
mov
dec
loop
movsl
dec
fiadds
lret
cmp
out
mov
ret
jb
movsb
nop
incl
inc
int3
je
lds
jb
add
shll
daa
sarb
push
add
daa
and
pop
inc
rclb
push
push
pop
ret
cs
stos
mov
sub
ds
push
jmp
add
add
testb
add
in
fistpll
shlb
pop
in
mov
pop
neg
ret
fs
inc
cmp
jmp
mov
fwait
xchg
dec
mov
jg
fdivrp
movsb
ret
cmc
xor
idivb
shrb
mov
sub
pop
push
pop
cli
jb
ret
movsl
mov
shrb
and
add
pop
add
add
inc
add
into
mov
dec
cmpsl
xor
fistl
psraw
push
das
lcall
xchg
fldl2t
mov
xchg
std
and
push
call
jmp
imul
pop
add
out
adc
sub
loope
ret
cli
jmp
adc
push
add
add
and
mov
mov
adc
add
pop
xchg
jg
nop
and
push
lea
push
push
sti
mov
xchg
mov
jae
fstpt
adc
inc
filds
mov
les
mov
rol
or
loope
ret
aaa
mov
lea
cli
cmp
pop
push
aaa
jg
mov
add
mov
dec
add
mov
add
jg
add
enter
and
xchg
xchg
out
xchg
dec
push
and
nop
or
jl
adc
jne
fistpl
int
and
lahf
xor
ret
sub
or
out
pusha
out
push
aas
scas
jmp
mov
sub
leave
outsb
pusha
xchg
sub
pusha
cs
mov
loop
dec
add
add
shll
add
ljmp
and
mov
jnp
std
fcmovnbe
insl
call
sbb
fsubrs
cmpsb
shl
mov
test
pop
and
cmp
arpl
loopne
or
mov
lds
loop
pop
xchg
jns
sbb
sarb
add
mov
add
pop
push
jecxz
xor
mov
add
in
jmp
adc
enter
cmovs
or
int
or
mov
fs
in
fs
out
aas
fwait
or
arpl
arpl
enter
arpl
and
xchg
ret
data16
add
sub
sbb
leave
out
add
jp
in
adc
push
lea
add
mov
fisttpl
repz
lods
add
fstl
sbb
cmp
dec
xor
pop
ja
movsb
arpl
je
pop
mov
aad
ss
fwait
in
mov
data16
sahf
sbb
lret
or
orb
shll
push
pop
sbb
stc
inc
add
add
adc
mov
mov
dec
cmp
inc
jo
rcrb
xchg
lea
cmp
rcr
or
andb
cmp
inc
jmp
cmp
cmp
mov
stc
scas
mov
add
add
mov
add
lret
jl
into
or
xchg
scas
sti
adcb
or
add
adc
inc
xchg
testl
mov
and
fcoml
arpl
inc
je
notl
outsl
fistpll
inc
mov
push
scas
sbb
xchg
fistps
notb
cmp
gs
hlt
out
out
addb
mov
sub
cmc
sub
jl
iret
arpl
bound
add
int3
inc
add
fucomi
jnp
sbb
sub
mov
je
movb
jge
hlt
je
arpl
add
rorl
shl
cmc
shl
movsb
outsl
pop
inc
fucom
xlat
mov
scas
aad
pop
xchg
andl
mov
test
xchg
jmp
add
cwtl
push
stos
ret
jmp
fildl
push
xlat
push
cmpsb
mov
add
sub
xlat
add
dec
jmp
rcl
dec
cld
test
sub
sub
dec
ret
les
das
rol
bound
jmp
push
push
sub
in
jmp
xchg
xchg
or
fimull
jb
lahf
nop
std
jo
dec
les
add
add
mov
or
cltd
ljmp
xchg
jg
xchg
fsubrs
rclb
or
popf
adc
nop
hlt
dec
je
adc
das
mov
iret
pop
xchg
ljmp
out
add
cmpsb
out
add
dec
shr
mov
call
mov
out
cltd
std
jo
mov
xchg
mov
mov
enter
add
add
cmp
xchg
mov
inc
divb
decb
and
cmp
push
je
pop
xchg
scas
pop
dec
lock
mov
mov
ljmp
incb
rcll
cmp
cmp
test
popf
fs
out
add
je
decl
fldl
add
cmp
add
push
cmp
ljmp
ret
lcall
aaa
mov
and
jl
ret
lock
int3
mov
sti
inc
mov
sub
add
fistps
popf
rorl
lret
fdivs
lods
push
mov
call
inc
fcomip
adc
push
jnp
pop
ret
add
dec
add
cmp
adc
adc
in
xor
subb
fiadds
add
sub
ljmp
jb
out
stc
fnstcw
sar
ds
and
ljmp
es
sub
pop
push
icebp
adc
jmp
leave
mov
mov
add
sub
fisubrs
incl
rcll
pushf
outsb
jecxz
mov
jmp
lret
push
rcll
insb
push
add
scas
mov
cmpsb
lret
scas
jp
jbe
jns
adc
add
insb
filds
add
or
or
inc
push
add
inc
je
orl
add
fbld
adc
inc
adc
add
add
cld
jbe
jns
and
jecxz
adc
fidivrs
mov
dec
xor
cs
out
add
adc
and
repnz
add
loopne
adc
pop
mov
dec
mov
out
divl
push
mov
icebp
sbb
test
adc
cmp
testb
mov
mov
ret
add
add
add
push
cmpsl
adc
cmp
push
inc
nop
test
inc
mov
add
mov
mov
sbb
dec
mov
add
mov
add
add
fnstenv
mov
inc
aad
lods
or
jne
cmp
add
pop
xchg
add
add
add
adc
hlt
mov
mov
adcb
sarl
icebp
aam
ss
mov
inc
pop
cwtl
mov
cmpsb
mov
inc
push
cwtl
mov
loope
cs
push
xchg
ss
adc
gs
test
test
test
faddl
jb
add
in
fdivs
jmp
sbb
push
add
add
mov
add
push
add
mov
add
push
pop
aas
cltd
mov
ljmp
mov
jmp
lods
push
push
sub
xchg
push
sub
mov
mov
sbb
inc
mov
inc
mov
mov
pushf
outsb
cli
or
jmp
add
add
mov
add
mov
and
ljmp
aas
int
fildl
add
gs
mov
pop
arpl
mulb
xchg
jno
and
inc
aas
or
add
push
fidivl
dec
push
movsl
mov
add
or
test
add
lahf
or
push
sub
adc
mov
jne
pop
lcall
popf
pop
pop
add
mov
lahf
sbb
jmp
inc
aas
or
push
mov
add
mov
mov
add
add
in
inc
leave
jg
add
dec
adc
ja
leave
cmp
mov
mov
add
mov
dec
mov
or
cmc
adc
mov
fcoms
mov
cmp
andb
add
rcrb
pop
and
dec
std
cli
mov
push
inc
mov
xor
cld
mov
add
iret
inc
pop
fadds
mov
add
add
mov
inc
mov
cwtl
cmp
xchg
xor
test
aam
rcrb
pop
out
adc
sub
orl
aam
ret
in
les
fadd
xor
mov
les
test
push
sahf
or
ljmp
push
fildl
jmp
add
add
int3
add
push
add
mov
dec
test
mov
int
sarb
add
loop
ss
rcr
adc
mov
arpl
jmp
sbb
aaa
jmp
mov
shrl
fldt
out
wbinvd
lods
sbb
cltd
es
aas
shll
sti
push
adc
add
in
stc
push
adc
add
mov
cmp
add
icebp
or
stc
mov
add
fisubrs
fistps
punpckhwd
mov
shll
lock
cld
jne
lret
movsb
filds
add
aad
add
lret
ret
movsl
movsb
fiadds
nop/reserved
add
loopne
xor
xchg
cmp
add
add
iret
add
mov
xchg
inc
push
or
cld
jne
in
push
jecxz
and
ficoms
mov
mov
add
sarl
roll
add
jno
data16
mov
out
xor
out
mov
sti
ds
adc
adc
xchg
xor
leave
js
mov
add
pop
mov
add
aaa
add
mov
orb
sti
mov
mov
and
sti
adc
lahf
add
mov
sub
icebp
xchg
pop
add
push
shlb
fucomi
lods
in
sub
adc
ljmp
shrb
pop
mov
call
add
push
stos
sbb
mov
mov
hlt
cmp
push
in
inc
repz
mov
movsl
xchg
shrb
cltd
pop
popl
sub
sbb
dec
mov
cmp
insb
int
ljmp
fcmove
adc
fstpt
iret
jae
and
les
lods
fsubrl
mov
push
mov
add
add
adc
xor
fildl
pusha
mov
cmp
fs
jg
cmpsl
and
pop
jmp
xor
fidivs
in
mov
push
add
mov
push
inc
stc
inc
push
out
fstpt
scas
push
js
mov
aas
pop
jns
inc
sarb
fsubrs
xchg
mov
bound
sbb
sbb
add
js
jne
xlat
loopne
ret
je
add
call
add
int3
iret
insl
add
fsub
push
repnz
adc
mov
dec
lods
ljmp
cld
mov
xlat
add
sub
pushl
add
xchg
lock
pop
dec
out
cmp
mov
pop
jns
xor
cld
pop
arpl
xor
icebp
push
jmp
jmp
add
je
and
add
shrl
test
mov
subb
icebp
aas
mov
dec
dec
cld
inc
in
mov
xchg
jg
call
and
inc
xchg
je
pop
add
adc
daa
add
xor
stc
ret
inc
mov
add
mov
xchg
sti
mov
icebp
aas
mov
aaa
mov
je
inc
inc
in
mov
lret
inc
gs
add
out
pop
mov
push
mov
xor
sub
mov
sub
xchg
ljmp
xchg
sahf
imul
ljmp
add
add
fucomi
pop
js
out
js
test
test
ljmp
fsubr
imul
fisttps
in
roll
int3
push
fwait
inc
push
xlat
in
stc
jg
test
int3
das
ret
mov
push
ja
cmp
bnd
cmpsb
jp
jmp
mov
push
or
lret
sahf
pop
add
add
add
xchg
ss
aas
inc
into
shrb
cltd
ljmp
scas
add
or
adcl
add
mov
roll
mov
faddl
jmp
mov
and
jb
cmc
xchg
sub
insl
add
push
push
mov
xchg
testb
add
out
je
out
push
push
jl
idiv
and
outsl
clc
mov
aam
mov
xchg
inc
or
insl
sbb
adc
add
faddl
add
sar
lea
inc
push
ljmp
add
repz
aas
or
out
add
pop
add
jae
add
mov
xlat
mov
add
mov
sbb
jp
or
jl
adc
test
idivl
nop
sti
xchg
cld
xchg
aas
mov
ret
add
add
or
shr
mov
shl
aas
mov
cli
or
mov
sub
mov
sahf
cmp
incb
mov
dec
mov
mov
fucomi
add
rorb
lods
or
mov
jmp
sarb
in
bound
add
jp
xchg
sbb
push
loope
jno
mov
and
or
out
xchg
fcmovu
jno
mov
fwait
stos
roll
add
into
stos
add
fimuls
stos
stos
xor
sbb
stos
pop
mov
mov
rcr
xchg
cs
xor
addr16
std
fucomi
fidivs
mov
inc
rcll
in
mov
xor
pusha
cli
xchg
or
cld
mov
mov
mov
dec
clc
add
add
ret
mov
insl
test
rorb
divb
jb
xchg
repnz
mov
fildl
jl
sub
decb
push
cltd
or
clc
add
arpl
pop
sub
rorl
xor
and
push
fucom
jmp
mov
ljmp
int3
aaa
incl
add
xchg
repz
popw
fsub
push
add
in
add
fs
and
push
pop
hlt
je
jmp
cmp
mov
jmp
push
pop
jbe
enter
call
dec
mov
pop
cmpsl
icebp
cld
and
push
rcrl
sbbl
pushl
jle
mov
movsb
cmpsb
aas
mov
add
xchg
out
add
arpl
cmpb
repnz
inc
inc
stc
add
cmp
lock
and
jne
je
fcompl
loope
xor
enter
mov
adc
jae
cmc
pushl
or
lods
pushf
je
mov
xor
add
add
int3
call
push
in
push
cltd
mov
shll
hlt
mov
popa
ss
mov
cld
cmpsl
das
xlat
cwtl
adc
cmpsl
xadd
sub
mov
lods
add
and
or
jg
inc
das
jecxz
push
das
add
lods
mov
pop
mov
and
sbb
mov
mov
lea
add
adc
ss
shr
test
cld
pushf
incb
pushaw
and
mov
test
adc
lcall
add
les
mov
jmp
nop
stos
mov
je
jmp
adc
cli
out
iret
jle
lret
loop
inc
ljmp
in
int3
faddl
add
add
pop
js
in
push
sub
add
mov
push
mov
add
ds
dec
ret
mov
jmp
lock
ja
repnz
jmp
adc
decl
lea
pop
ja
test
add
call
shll
std
adc
sbb
ret
test
inc
pusha
addr16
adc
add
sub
or
jne
outsl
and
loopne
jae
ret
jecxz
dec
mov
fstpt
xchg
js
popw
cmpsl
or
xor
mov
cmp
insl
push
test
or
mov
add
scas
jecxz
sarb
mov
mov
mov
push
fisubrl
or
aas
mov
add
std
mov
or
or
out
lcall
inc
test
pop
inc
shr
icebp
cld
mov
je
inc
dec
cld
mov
cltd
push
aad
mov
leave
cmp
jg
add
push
ss
ja
adc
hlt
cmp
loope
stc
lcall
or
and
fucomi
movb
add
adc
stos
mulb
ret
ja
sub
filds
incl
shl
add
aam
or
jmp
mov
scas
std
inc
mov
mov
sub
int
orb
mov
repz
jo
cmp
sub
xlat
gs
int
mov
test
inc
out
or
add
pushf
scas
ljmp
add
aaa
add
mov
clc
xchg
mov
adc
mov
jno
jmp
inc
xor
mov
pop
push
std
xor
mov
jmp
and
bound
jmp
test
fiadds
pop
stos
subl
icebp
adc
daa
stos
jo
bound
add
and
out
push
push
cli
cmp
jle
mov
fadds
jmp
mov
loope
add
outsb
or
inc
pusha
jmp
adc
ret
add
and
cmp
insl
cld
mov
sbb
push
sub
jo
in
ret
dec
orl
mov
rclb
daa
rolb
add
cmc
xchg
and
stos
arpl
add
xchg
dec
cltd
cld
cmp
fstpt
fildl
mov
sub
inc
push
shll
adc
push
push
iret
jne
mov
and
in
les
mov
addb
repnz
adc
sti
test
xchg
aas
add
add
les
mov
add
sahf
rcrl
int3
es
xchg
aas
mov
les
mov
add
je
mov
add
jae
fwait
rolb
addr16
jae
imul
push
fldt
lret
test
fstps
xchg
movsb
mov
add
add
xchg
insb
cmpsb
mov
out
ljmp
loopne
pushf
stos
fucomi
cmp
fstpt
jmp
sbb
fwait
dec
por
data16
sahf
cli
fstpt
xchg
out
push
lods
xchg
mov
sub
mov
fcmovnu
add
stos
fucomi
gs
pushf
div
bound
add
out
add
add
add
or
stos
mov
out
add
lea
mov
inc
repnz
sbb
ds
cmp
mov
fstpt
aad
push
push
or
add
mov
mov
mov
das
sbb
imul
cmp
stos
jmp
out
cmp
add
mov
es
inc
add
add
mov
jmp
int
stc
insl
jle
fidivrl
cmp
lods
out
in
fs
mul
test
cld
fcomps
add
and
jg
xchg
dec
std
push
xlat
cld
adc
mov
dec
push
call
imul
lret
ret
dec
mov
xlat
add
sbb
or
add
add
loopne
add
add
sbb
movsb
mov
xor
addl
and
cmpsb
mov
add
bound
das
jge
sub
inc
mov
test
inc
cmc
sbb
inc
add
lea
xchg
sti
and
call
cmp
sbb
or
addb
add
leave
cli
jae
je
test
push
cld
jle
mov
jg
push
adc
mov
test
sbb
std
or
popf
hlt
icebp
mov
mov
push
cmp
movsl
jmp
mov
fucomi
sub
jg
push
iret
loopne
mov
call
add
imul
mov
out
inc
sbb
out
sub
add
add
xor
lock
lods
add
fcmovne
fldl
add
jp
stos
add
xlat
xor
loope
clc
aad
pop
push
stos
cvtps2pd
ret
inc
mov
xor
cmpsb
outsb
push
imul
cmpsb
xor
add
jne
push
insb
rorb
add
mov
test
movsl
jg
ret
mov
cld
fildl
jmpw
loop
movsl
jg
and
adc
cs
cmp
stc
ss
add
mov
movsl
stc
jno
call
nop
jle
xchg
stc
decb
call
stc
cmp
inc
add
jmp
add
add
testl
loope
cld
add
cmp
out
dec
jns
dec
shlb
fldenv
notb
shl
loope
idiv
lret
in
push
jmp
or
popa
ret
and
cld
lods
and
push
mov
addb
cli
call
test
rcl
sub
inc
and
std
lcall
lret
push
ljmp
add
test
add
lret
inc
movl
test
mov
sbb
xchg
inc
xchg
add
mov
push
jp
push
push
std
mov
mov
push
sub
pop
pop
add
jge
shlb
repz
add
sahf
sub
mov
lcall
mov
outsb
dec
xor
out
xchg
mov
dec
cltd
mov
sbb
push
fildl
insb
int3
shl
lret
rorb
mov
mov
fcomi
add
cmpsb
imulb
jmp
lcall
mov
sbb
jnp
stc
ret
inc
mov
stc
mov
mov
sbb
add
add
fwait
jecxz
test
je
lret
xchg
jnp
inc
mov
subl
sti
fucomi
add
scas
stos
fistl
lock
stos
add
mov
mov
pop
sub
inc
loop
repnz
lcall
add
xchg
cmp
shll
sub
add
and
sub
add
cli
or
scas
inc
mov
movsl
xor
jle
fs
dec
xchg
inc
mov
jmp
gs
jge
inc
mov
adc
js
cmp
lret
hlt
inc
mov
jmp
xor
out
int3
clc
cs
std
sbb
in
dec
jno
inc
jmp
dec
addr16
add
add
xchg
add
js
add
xchg
call
cmp
sub
rcrb
fistpll
call
and
sbb
incl
ret
insb
cld
incl
ds
fisubrs
sub
idiv
mov
clc
scas
and
cwtl
pop
pop
jmp
fistps
cmc
sub
dec
or
push
push
xchg
sbb
ljmp
add
mov
idiv
ret
inc
xor
mov
faddl
add
mov
sti
mov
ljmp
cwtl
adc
mov
ljmp
std
jmp
stc
dec
lock
out
sbb
cli
enter
mov
leave
out
mov
hlt
aas
mov
mov
or
je
das
add
add
bound
sti
ret
add
addr16
cmp
xchg
add
cmp
cmp
fucomi
xchg
jae
leave
push
data16
mov
push
popf
sbb
inc
lds
xchg
xchg
repnz
push
call
popf
out
lock
mov
xchg
shrb
and
mov
xchg
push
inc
inc
or
inc
add
add
sbb
jp
pop
jns
stos
xor
repnz
mov
sbb
cmpxchg8b
push
lock
stos
add
fwait
mov
jp
mov
lods
pop
out
mov
pop
sbb
stos
mov
cmp
cmpsb
xor
ret
add
mov
adc
fmulp
rorl
cmp
stc
into
lcall
xor
popf
aas
mov
jp
sar
test
test
das
and
add
stc
mov
je
loope
add
push
push
mov
lcall
mov
push
frstor
add
mov
inc
clc
and
stc
jle
xor
sti
inc
add
add
sbb
mov
stos
sar
push
mov
and
jne
push
aas
ljmp
mov
rolb
mov
push
call
loopne
outsl
add
loope
cmp
xlat
addl
cmp
cld
adc
cmp
and
clc
jmp
and
add
mov
mov
adc
add
add
stc
jmp
push
cmp
mov
clc
std
fidivl
xor
ret
js
mov
test
inc
cmc
pop
or
pop
mov
add
cmp
push
stos
hlt
std
dec
adc
add
add
push
in
cmp
xchg
test
dec
test
in
sub
cmp
test
enter
mov
fstpt
adcl
in
or
ljmp
sahf
nop
shl
test
push
scas
and
mov
xor
arpl
mov
fucomi
mov
pop
leave
or
push
mov
mov
rcll
push
dec
cmp
fs
mov
add
mov
or
xchg
movsl
cmp
inc
sub
mov
sub
ficompl
jmp
std
daa
add
dec
sbb
pop
dec
aas
and
dec
ja
cmpsb
and
mov
mov
sbb
cltd
aas
sub
mov
mov
mov
mov
xchg
mov
push
aas
mov
inc
xor
add
push
xchg
sub
mov
mov
add
subb
mov
pop
or
inc
jmp
mov
ljmp
adc
cmp
dec
cld
call
cmpsl
adc
pop
lea
jge
popa
mov
in
jmp
pop
push
adc
leave
add
add
xor
jmp
andb
cltd
stc
push
mov
dec
push
fadds
add
fdivrs
nop
dec
lds
arpl
add
pop
ret
addl
fadds
push
loope
out
mov
push
cmp
movsb
aad
js
insl
sti
mov
ret
mov
add
mov
das
mov
or
mov
in
sbb
mov
in
cmp
push
mov
out
addl
adc
imul
data16
add
cmp
mov
subl
icebp
adc
std
ljmp
fsubrl
or
add
push
int3
cmp
nop
jg
pop
xchg
or
jnp
and
stos
les
adc
jg
add
cmp
jle
fwait
mov
or
jno
fs
aad
loop
sbb
inc
iret
sarl
lret
ret
jge
fwait
jbe
inc
and
insb
xor
lock
fwait
outsl
sbb
jg
data16
add
xchg
or
xchg
jae
gs
jle
data16
orb
sub
rcll
insb
repnz
stc
mov
dec
xchg
sub
sub
sbb
psadbw
lea
xchg
in
mov
mov
stc
cli
xchg
les
mov
clc
es
xor
pop
mov
stos
add
add
faddl
jmp
jg
stos
or
mov
jmp
mov
inc
add
mov
filds
cmp
xchg
adc
popa
pop
repnz
fs
iret
psraw
addr16
inc
fwait
stc
out
nop
stc
pushl
fbld
push
adc
xchg
insb
icebp
sti
ljmp
filds
add
jge
stc
jmp
faddl
je
fs
fdivl
stc
push
aaa
test
and
mov
loope
faddl
push
mov
jmp
dec
inc
movsb
sarl
mov
jecxz
pop
mov
test
repnz
pusha
aas
mov
sub
gs
lock
inc
je
or
mov
add
test
repnz
jbe
aas
mov
subb
sub
decl
xor
stc
cli
jmp
mov
fisubrl
mov
in
orb
aad
mov
test
push
int3
inc
add
ja
in
cmp
or
xchg
fsubr
mov
in
jnp
in
shll
adc
add
inc
pushf
das
in
repz
ret
add
fistl
rcrb
jmp
add
lods
inc
ss
and
inc
pushf
stc
cmp
bound
add
xchg
inc
jno
imul
sub
adc
jmp
add
lahf
mov
ret
ret
iret
mov
and
jge
sub
add
mov
call
mov
movsl
icebp
mov
push
icebp
into
negl
cmp
xchg
xchg
stc
mov
jbe
scas
xlat
dec
add
in
stc
xchg
mov
xchg
clc
fsubrl
inc
jmp
mov
ljmp
out
push
add
in
fisttpll
addr16
sub
lods
add
add
xor
mov
and
fistpl
loope
sbb
jno
lea
jbe
fs
ss
pop
aas
cwtl
les
mov
rorb
pop
add
push
xchg
push
and
jmp
lea
inc
add
fcomps
outsl
or
cmp
mov
fbld
mov
push
lahf
add
add
add
add
lods
cld
xor
xchg
mov
adc
add
repz
adc
or
addb
je
lock
or
enter
fimull
or
inc
loope
addb
pop
jno
jp
mov
add
and
movsb
add
mov
addb
add
add
aaa
add
cld
mov
cmpsb
push
adc
aad
mov
adc
aad
mov
cmpb
xchg
shlb
mov
jecxz
fiaddl
jnp
sbb
outsb
fsubr
add
fnstenv
jge
jecxz
ret
jmp
lcall
incl
add
add
lret
mov
mov
sbb
jmp
inc
pushf
ss
inc
push
incl
dec
xchg
jmp
test
dec
and
pop
leave
jmp
jae
ljmp
arpl
add
sub
adc
and
xor
push
lcall
fwait
insb
jmp
out
dec
jmp
add
add
xchg
lock
push
test
into
pop
pop
xchg
mov
out
clc
fadd
out
jmp
push
push
mov
inc
add
push
icebp
into
repz
ds
fs
clc
fcoml
inc
jmp
push
fcoms
int
adc
mov
fucomi
imull
pop
push
fidivrl
mov
add
aas
nop
add
add
out
ret
rcr
add
fsubrl
rcrb
call
pop
push
and
test
add
sbb
push
add
ss
xor
xlat
aaa
fsubrp
xlat
xlat
pop
push
fwait
enter
out
add
lsl
add
mov
ljmp
pop
jg
mov
add
inc
add
add
xor
add
adc
and
outsl
or
push
cld
adc
add
mov
jbe
add
jmp
outsb
test
jns
mov
dec
jle
sbb
mov
or
lcall
decl
add
or
or
push
add
and
add
cltd
repnz
out
sub
mov
add
out
mov
xchg
adcl
add
jns
inc
sarb
xlat
fistl
out
pop
xchg
lret
add
lods
add
in
adc
arpl
sahf
mov
mov
fsubrp
xchg
je
lcall
mov
jmp
add
add
sub
fidivrs
into
pushl
xchg
std
ret
jb
cs
pop
loope
jmp
das
sub
cmpsl
fs
out
clc
fsubrp
xchg
cltd
pop
fsubr
subl
mov
and
jmp
dec
mov
ljmp
mov
lea
or
add
mov
add
xchg
jle
mov
fistl
pop
add
das
jmp
xchg
jmp
dec
out
movsl
sub
fs
pop
pop
aas
mov
cmp
dec
jg
dec
sbb
xchg
shrb
dec
dec
jmp
test
fimuls
jmp
xor
or
int
push
orl
and
add
xchg
sbb
gs
ret
sti
test
inc
add
or
adc
out
rorl
mov
push
mov
stos
pop
not
insl
and
sbb
or
add
cwtl
pminub
stc
mov
or
add
add
mov
sbb
add
sub
add
ret
add
jg
push
addb
mov
test
or
data16
aaa
dec
mov
xchg
scas
jnp
sbb
mov
gs
adc
iret
inc
add
rolb
xchg
std
push
jb
jns
or
add
stc
push
insl
mov
add
xchg
cmp
adc
aas
xchg
add
mov
add
incb
add
fbstp
push
mov
mov
mov
jb
add
jmp
std
ret
sub
loopne
std
adcl
out
push
inc
in
pop
jmp
out
cmp
mov
ljmp
mov
std
add
add
sub
adc
fnstsw
fistl
pushf
rorb
sti
orb
add
pop
sti
rcrl
cs
push
es
pop
idivl
test
pusha
jle
xchg
stc
cmpsb
xchg
nop
mov
jg
test
push
jnp
add
xchg
popf
shr
sbb
xchg
sahf
jg
imul
jb
add
xchg
cmc
fs
clc
dec
push
jnp
bound
test
push
fisttpl
xchg
mov
xchg
ret
mov
add
push
std
movsl
das
adc
aas
sbb
out
fidivl
jle
lea
aas
fidivrs
stc
sbbb
loope
sti
filds
mov
mov
insb
adc
add
sub
dec
mov
add
cmp
in
fiadds
push
mov
mov
ds
cld
call
pop
inc
pop
lcall
imul
xchg
movsb
stc
dec
mov
push
push
and
js
fcoms
je
push
sub
in
hlt
pop
stos
jno
pop
in
sbb
add
pusha
cmp
lods
sbb
mov
std
xchg
lods
cld
adc
movsb
testb
mov
add
inc
rclb
xchg
adcl
loopne
call
xchg
pop
xor
lcall
adc
inc
xor
adc
jmp
push
popa
push
add
std
scas
incb
push
jp
ss
icebp
jne
inc
fst
lock
jb
jge
jb
andl
add
push
gs
add
add
divb
lods
jb
push
gs
fdivr
jb
jae
xor
ret
xchg
data16
fistl
fbld
roll
lret
insb
rclb
es
inc
fwait
cmpps
xor
das
fld
or
pushl
xchg
cwtl
outsb
xchg
mov
aad
cs
pop
xchg
outsl
jae
xor
add
std
sbb
pop
jae
mov
mov
push
adc
fistl
sub
fbstp
out
push
xchg
sti
lcall
adc
adc
fmulp
das
adc
roll
fisttpll
fstl
aas
stc
add
ret
in
adc
scas
int3
adcl
dec
add
mov
filds
es
fisttpll
add
add
dec
pop
adc
jl
cmp
cmpsb
jbe
add
adc
add
dec
fidivrl
xchg
sahf
dec
xlat
push
dec
fstl
jbe
pop
fiadds
add
xchg
xor
sub
mov
xor
div
pop
in
das
add
cmp
enter
add
add
test
jl
cld
mov
jle
or
loope
mov
inc
inc
cmpsl
enter
push
xorb
call
cmpsl
loop
lods
mov
add
arpl
outsb
sub
ficoms
das
sbb
cmp
mov
mov
dec
sub
pushf
jo
mov
pushf
jecxz
sub
pop
cmc
and
add
add
enter
mov
dec
or
add
cmc
mov
or
movsl
or
mov
test
jmp
pop
mov
call
sarb
js
sahf
mov
mov
ss
cmp
mov
mov
add
cli
pop
addl
add
cltd
fisttpl
mov
icebp
fidivs
mov
jmp
push
jmp
mov
test
data16
iret
int3
sbb
test
hlt
fiadds
mov
sub
sbb
ljmp
push
mov
insb
mov
xor
jnp
call
adc
ljmp
outsl
add
add
push
fs
in
push
push
and
inc
jno
add
and
pushf
mov
orl
arpl
mov
xchg
decb
pop
pop
jmp
cmp
ret
xchg
mov
jmp
popf
push
ja
push
add
sub
sub
xor
call
in
test
jle
xchg
mov
xchg
and
int3
push
adc
mov
dec
outsl
push
imul
cld
jmp
outsb
in
popf
cmc
push
int3
in
lock
mov
stc
outsb
call
push
fidivrs
jnp
divl
stc
adc
loope
add
add
and
orl
fiadds
push
rclb
jmp
test
mul
fildl
add
insl
adc
mov
test
add
mov
mov
into
xor
cmpsb
dec
test
jb
add
jno
je
mov
icebp
out
mov
sti
add
add
lret
adc
jne
pop
sti
or
jb
inc
mov
pop
add
pop
test
daa
push
out
pop
jns
inc
lcall
xor
cmp
and
cmp
mov
imul
ret
push
sub
pop
pop
mov
pop
pop
sti
lea
imul
pop
shl
daa
aad
mov
and
add
add
aam
into
inc
outsl
push
test
push
scas
sti
cmp
fucomi
int3
push
inc
xchg
cld
jmp
sti
jp
nop
fnstenv
lock
or
add
js
shrb
rcll
cmp
rcr
out
ja
jmp
cmp
pop
adc
sbb
js
les
rorb
mov
xor
jns
add
jb
lret
add
inc
add
mov
sbb
jo
xchg
add
mov
inc
add
mov
fildl
jmp
loop
imul
adc
xchg
fildl
jmp
mov
mov
push
mov
faddl
jmp
add
insb
adc
add
push
scas
fstps
clc
sahf
inc
lcall
xor
pusha
in
add
fiaddl
inc
popf
movsb
cli
jmp
or
add
test
push
push
lret
in
push
push
ret
pop
in
add
cld
fcmovbe
add
mov
cld
out
xchg
fisttpl
add
add
iret
add
push
jo
lea
fiaddl
add
adc
cmpsl
push
push
mov
mov
stc
ret
add
dec
jne
dec
outsl
or
je
push
dec
or
add
shll
or
arpl
rorb
mov
ret
mov
jo
add
int3
ds
pop
mov
add
add
andb
mov
pop
adc
icebp
aas
mov
xchg
inc
imul
sti
jae
cmp
testl
add
scas
addr16
inc
ficoml
xor
adc
pusha
nop
rorl
or
jae
in
bnd
pusha
xchg
shl
filds
add
add
iret
sbb
aad
push
popa
push
push
xchg
pop
push
mov
push
cmp
out
jl
xlat
lods
sbb
xchg
in
popa
cmp
ljmp
sbb
lods
or
jl
mov
and
shlb
stos
mov
add
mov
add
cmp
inc
stos
mov
cld
in
sub
xor
lea
add
mov
fcoms
jmp
mov
sahf
push
inc
stos
pop
push
test
sarl
push
push
push
jb
or
hlt
dec
iret
inc
jmp
add
jge
mov
adc
test
inc
and
shll
stc
fiadds
add
xor
faddl
jmp
lods
movsb
add
push
xchg
pop
shll
repnz
sub
pop
add
dec
push
dec
xchg
add
adc
adc
cmp
adc
push
pop
xchg
add
rcl
push
inc
aam
repnz
xchg
xor
xchg
adc
cs
adc
xor
loope
ficompl
std
test
xchg
or
add
stos
je
adc
fimuls
je
and
call
cld
adc
pushf
pushf
cld
jne
xlat
push
hlt
mov
nop
insl
icebp
xor
pop
adc
inc
mov
inc
mov
adc
fdivr
repnz
sub
jne
pop
sub
xor
mov
add
add
idiv
aas
mov
fdivrp
mov
je
out
add
std
addb
xchg
cli
xchg
sti
enter
mov
fsubrl
mov
fdivrl
mov
out
cli
pop
test
mov
mul
mov
fs
add
xor
xchg
adc
inc
add
add
fistpl
mov
insb
xchg
and
fbld
and
pushf
iret
add
js
sbbl
pop
sub
mov
ret
hlt
pushf
fs
mov
or
negl
stos
add
add
add
push
je
cmp
jecxz
mov
arpl
in
cmp
popa
repz
mov
fistpll
xchg
add
add
out
jmp
fildl
imul
fidivrs
sub
in
push
adc
inc
jmp
or
push
data16
hlt
es
inc
jmp
loop
cmp
fildl
sarl
add
stc
and
call
mov
test
mov
dec
cmovo
add
push
push
add
cmp
add
in
mov
adc
jge
and
add
cltd
sbb
jmp
les
fildl
add
jl
push
lea
push
loopne
add
pushf
add
pop
fdivr
push
adc
lea
cld
jmp
cld
adc
sbb
mov
test
call
add
add
xchg
cmp
xor
andps
loop
les
inc
add
cli
bound
cli
mov
out
aas
mov
add
in
pop
sub
lea
push
push
sti
adc
mov
xchg
in
lret
xchg
std
cli
xchg
insb
pop
sarl
cmp
je
dec
rorb
repnz
or
lret
imul
xchg
add
aas
in
std
je
ljmp
mov
inc
mov
push
ss
scas
push
out
push
mov
ljmp
or
fdivl
ret
jb
pop
pop
ljmp
add
fucomi
mov
les
cmp
add
jmp
ss
daa
iret
fcmovu
in
add
add
add
es
insl
pusha
push
or
or
pop
out
pop
out
mov
and
pop
stos
rclb
daa
arpl
cmp
lcall
push
lcall
jp,pn
out
mov
jno
mov
sub
sub
jmp
clc
add
cs
cli
add
add
jl
inc
rcr
filds
fprem
pop
cltd
loop
jmp
push
or
dec
bound
or
jmp
xor
add
mov
out
add
aam
in
jmp
adc
fildl
mov
fcoml
add
stc
lcall
mov
cmp
add
je
adc
mov
or
lret
fildll
fnstenv
jmp
push
pop
cmc
call
cmp
mov
pushf
jmp
add
jae
mov
imul
test
lahf
stc
test
push
mov
mov
adc
add
add
and
repz
inc
in
lcall
call
insl
push
jne
int3
push
arpl
mov
inc
mov
push
inc
loopne
in
test
xchg
mov
mov
pushf
mov
mov
jge
xchg
add
cmpsl
sbb
roll
add
push
sti
jo
push
jne
pop
pop
testl
add
ljmp
jne
in
rcrl
outsb
jmp
out
aad
xchg
push
mov
pop
inc
sub
fwait
add
ficomps
cmpsb
out
imul
cmp
ljmp
sahf
testl
or
out
push
into
stos
add
jg
out
dec
add
sub
dec
std
ret
add
add
mov
in
mov
jecxz
punpckhwd
add
out
mov
arpl
movaps
or
push
fildl
jmp
push
aad
add
pop
jb
je
das
shlb
push
fwait
or
stc
xchg
icebp
out
cs
call
sarl
jg
push
je
lahf
add
add
jne
jle
push
or
mov
fdivr
mov
fwait
outsl
and
push
notb
je
cmc
or
jmp
imulb
in
mov
stc
jb
push
stc
sbb
cs
outsl
or
js
aad
or
cwtl
outsb
orb
or
cld
and
add
add
and
in
and
inc
xorb
push
aas
cld
and
stc
cld
jne
or
test
outsb
cmp
jne
adc
xlat
js
mov
shlb
and
mov
stc
lcall
imul
leave
jne
jl
sarb
dec
pushl
dec
out
lds
add
add
das
std
fnsave
push
inc
and
add
daa
mov
adc
mov
icebp
xchg
add
aas
mov
shrb
sti
bound
cli
imul
jne
gs
or
cli
ficoml
mov
aaa
add
or
out
and
incl
test
scas
pop
aas
add
add
fimull
fistpl
add
out
cmpb
push
push
jae
push
dec
jecxz
cmp
ljmp
pushf
xlat
or
pop
push
jl
pusha
cmpsb
dec
lcall
jecxz
insl
cld
inc
out
xchg
cmp
int3
ljmp
or
ret
bound
test
repnz
cmpsb
dec
in
pop
sahf
push
in
add
push
enter
add
add
insl
mov
ret
sub
pop
inc
xchg
mov
mov
add
sbb
push
movsl
mov
aas
xchg
mov
outsb
mov
adc
sbb
jg
sbb
push
jmp
ret
inc
popf
in
pop
push
rcrl
stos
das
pop
mov
fs
pop
xorb
add
add
jno
insb
stc
out
push
push
loopne
test
jae
mov
jns
jmp
sub
pop
aas
rorl
stc
add
jne
or
orl
pop
xchg
or
cltd
pop
mov
pop
pop
loope
xchg
por
xlat
sub
stos
ds
xlat
dec
mov
cs
push
jb
cs
add
add
lcall
insb
sub
xchg
or
mov
add
mov
je
ljmp
shll
shl
push
outsl
adc
jecxz
outsl
cld
or
stc
call
outsl
cld
mov
xor
adc
insb
add
in
mov
scas
xchg
mov
clc
add
add
sarb
mov
push
call
rclb
sarb
mov
add
push
mov
sbb
das
mov
lret
lret
into
jae
add
mov
xchg
mov
out
lret
jmp
divl
dec
mov
fldt
add
add
shlb
ljmp
jns
add
imul
fucomi
add
out
jle
jo
pop
inc
dec
movsb
mov
mov
scas
subb
pop
push
cmpsb
out
out
enter
lcall
inc
stc
movsb
lods
dec
adc
jecxz
xchg
fld
fcompl
mov
pop
inc
mov
js
add
add
mov
inc
cltd
add
aam
pusha
mov
jno
sbb
push
aas
mov
test
test
jno
jb
adc
cmp
add
sub
or
inc
and
jb
xor
int
ds
out
filds
jmp
test
push
jo
ffreep
bound
push
inc
push
add
add
sbb
adc
push
mov
pop
jp
push
es
jo
xchg
gs
add
lea
addr16
jmp
add
insb
cs
xor
sub
out
cld
push
sbb
ds
fldcw
shl
push
leave
push
fs
push
pop
or
or
fildl
push
sbb
jmp
cmp
mov
push
dec
arpl
add
add
xor
or
test
cld
jne
pop
lahf
hlt
add
std
add
pop
out
incb
sbb
stos
rclb
std
mov
push
cld
jmp
pop
cmpl
lcall
push
je
add
loop
push
xlat
jb
jge
dec
pop
add
jne
xchg
nopl
fwait
lret
add
insl
xchg
add
mov
add
aas
mov
ljmp
xor
pop
add
cli
pushl
pop
adc
mov
stos
jae
add
add
ret
sbb
cmp
mov
xor
dec
sub
daa
stos
push
gs
dec
fsubr
add
sbb
cmpb
incl
add
mov
es
mov
call
shlb
mov
pusha
mov
mulb
sub
data16
add
xchg
dec
gs
adcb
aam
mov
js
push
leave
fsubr
add
or
ljmp
fildl
xchg
jl
jo
repnz
call
add
add
push
aas
and
out
add
pusha
stc
jmp
test
imul
stc
subl
xchg
push
jg
xchg
roll
into
ds
sub
out
outsl
loope
push
repnz
pop
xchg
lea
stc
cmpsb
sbb
jmp
fucomi
push
ja
stc
insl
jns
pop
daa
enter
pop
mov
addps
add
push
lea
ja
bound
dec
add
cmp
push
fistps
push
and
or
and
call
jmp
cwtl
cld
jne
adc
sub
adc
rolb
cld
cmp
arpl
jmp
dec
decl
je
xor
pusha
sti
inc
sbb
call
xchg
add
mov
sub
jb
in
ds
movsb
adc
cmp
cld
adc
sbb
cld
je
push
xchg
pop
mov
sbb
decl
push
sbbl
jo
pop
rorb
lcall
inc
fimull
cmpsl
push
dec
xor
stc
inc
mov
inc
cmp
push
add
add
je
inc
je
inc
cs
ret
je
dec
push
xor
leave
dec
adc
pop
dec
or
mov
inc
sti
cmp
xor
xchg
mov
jge
fucomi
iret
lods
push
sahf
das
in
cmc
movl
bound
icebp
and
sub
inc
outsl
push
push
fucomi
add
out
and
sbb
jp
add
dec
push
sahf
dec
in
lcall
ss
fistpl
test
sbb
jl
arpl
and
xor
cltd
es
and
stos
fistl
repnz
jl
je
subb
mov
cmp
add
gs
test
je
xchg
imull
add
scas
jae
jg
gs
xor
xlat
add
push
insb
enter
push
dec
adc
test
fs
add
push
das
sub
jmp
dec
xchg
push
repnz
xchg
sbb
hlt
inc
xchg
push
rcll
gs
jmp
iret
pop
inc
popf
les
pusha
or
jmp
lret
xor
std
push
cmp
cmp
je
jecxz
cld
fbld
arpl
push
faddl
lea
sbb
jge
stc
fsts
outsb
adc
std
push
arpl
jbe
cmp
jnp
mov
jmp
xchg
add
jmp
pop
test
cltd
std
xor
arpl
or
dec
in
mov
in
int3
fldl
add
faddl
add
dec
ds
or
fs
aas
mov
mov
mov
std
ja
or
lea
ds
in
inc
shll
xchg
sti
jb
inc
jne
lcall
or
ds
aaa
lds
aas
mov
add
mov
inc
jmp
cmpsl
ds
inc
xor
mov
addr16
cli
or
dec
or
mov
push
xor
jno
fcmovu
lahf
aam
fnstenv
rcrb
push
mov
jmp
jge
fcoms
cmpsb
or
push
out
and
push
sub
clc
jnp
add
iret
gs
jbe
pop
leave
add
add
push
leave
push
or
push
or
adc
mov
mov
leave
outsb
push
sahf
jnp
fcmovnu
add
inc
addl
mov
shlb
cmp
loop
in
mov
jae
ljmp
push
call
xor
pusha
jmp
mov
jae
and
fisttpl
add
add
add
cmp
add
dec
add
xchg
clc
aam
lret
inc
jmp
dec
jmp
jb
or
test
lret
lods
ljmp
lods
stc
mov
lods
or
push
gs
mov
roll
andl
push
jmp
lret
mov
add
add
push
mov
inc
ficompl
outsl
loopne
pop
push
call
push
clc
pop
adc
lea
sbb
lea
jmp
lea
jmp
mov
rorb
pop
dec
adc
push
mov
gs
fildll
fsubrs
fldt
cmp
insb
mov
outsb
sub
sbb
cmp
add
or
inc
mov
sbb
push
in
inc
je
jmp
xchg
push
mov
rol
push
aas
mov
pushw
inc
mov
push
popa
inc
or
call
xor
mov
aas
mov
adc
sbb
push
mov
and
or
mov
xchg
adc
add
scas
test
aas
mov
in
xor
mov
dec
jl
mov
jg
xor
data16
fsts
xor
ljmp
stos
fld
rorb
into
cli
add
out
jp
aam
mov
fucomi
test
test
ljmp
fucomi
ds
stc
ret
add
add
push
sti
imul
xchg
inc
lcall
mov
mov
mov
pop
adc
xchg
out
stos
add
sbb
cmp
xchg
mov
push
punpcklwd
sbb
rolb
dec
lahf
sbb
and
sub
dec
jno
fildl
jmp
mov
std
sbb
roll
add
mov
sbb
fiadds
sbb
stc
cltd
inc
cmp
out
rol
fildl
jb
std
or
movsl
pop
in
adc
mov
lret
ret
sbb
add
push
ds
sub
inc
clc
out
add
or
adc
and
add
in
or
add
add
add
lods
out
mov
repz
popl
aam
dec
mulps
add
movsb
sahf
cmp
add
and
movaps
add
movsb
test
add
add
fs
push
aaa
sub
sbb
push
mov
fdivrl
jae
addl
cmp
and
lret
mov
inc
add
lea
sbb
push
cmc
sub
fldcw
cmp
xor
mov
cltd
add
mov
inc
mov
pop
je
ret
xor
mov
mov
add
xchg
and
or
or
pop
cmpps
or
xchg
inc
aas
inc
mov
cmpsb
xor
or
push
inc
jmp
add
add
or
loope
fistl
push
jg
mov
sub
xor
cmp
mov
fiadds
fwait
cmp
jnp
ret
add
mov
bound
loopne
and
inc
mov
loopne
cmp
arpl
sahf
lahf
jno
mov
pop
loopne
loope
loopne
bound
loopne
arpl
add
adc
fiadds
add
add
jmp
cmp
cli
cmp
fistps
push
imul
in
bound
rorb
es
scas
add
inc
sbb
or
movsb
js
add
in
rep
push
push
mov
fnstsw
dec
sub
sub
mov
inc
jmp
add
add
push
stc
jb
stc
adc
bound
and
stc
bound
sahf
push
stos
jmp
sbb
inc
por
fcomps
add
cmp
mov
adc
mov
call
add
pop
push
xor
stc
mov
js
sbb
jge
and
add
add
add
aad
add
fdivrs
mov
filds
add
sub
in
add
cmp
add
out
jle
fsubrs
daa
xchg
inc
add
fsubrs
shrb
sub
xchg
and
mov
mov
mov
lea
sbb
shl
shrl
xchg
cmp
add
xor
test
jle
rcrl
xor
jle
mov
fisubs
mov
jne
enter
xor
and
roll
aad
sbb
jle
mov
jge
movsb
and
ret
mov
ret
pop
add
push
test
push
push
jne
ret
fsubrl
cmp
add
mov
div
cld
jge
in
inc
cwtl
call
sahf
or
xchg
cmp
cmp
jmp
sbb
bnd
jecxz
xor
mov
cli
sub
ljmp
jne
ss
mov
lea
movsb
shl
mov
imul
fisubs
add
add
testl
xchg
mov
int
cmp
sub
call
mov
leave
or
mov
xchg
adc
mov
je
push
inc
dec
cmp
lods
add
cmp
push
or
in
mov
and
pop
ret
mov
push
sbb
sub
add
sub
push
cmp
mov
nop
xchg
sbb
stc
inc
cwtl
sbb
shrb
scas
jmp
ljmp
cmc
push
push
loope
and
and
jecxz
adc
and
fs
or
pusha
add
cmpsl
sub
fists
push
mov
xor
in
xchg
clc
jno
push
or
add
and
cld
adc
xchg
adc
lea
push
jmp
les
sbb
call
pop
sets
sbb
test
sbb
inc
movsl
shr
jmp
add
mov
out
xor
mov
add
cli
test
adc
mov
inc
cli
inc
mov
daa
rcrb
add
inc
jns
mov
inc
add
add
xchg
std
mov
inc
mov
insl
mov
add
inc
add
inc
mov
inc
rclb
test
sbb
or
sti
repz
cli
add
add
fbld
cmpsl
adc
aam
mov
mov
add
add
arpl
add
jae
imul
mov
fwait
sbb
xor
dec
dec
rolb
enter
inc
xor
push
shlb
sar
jb
fidivrs
lahf
pop
popa
fs
adcb
lods
fucomi
xchg
pop
add
fucomi
dec
xor
ljmp
negl
sbb
xlat
add
add
add
faddl
jmp
mov
fisttpl
mov
dec
stc
insl
stc
enter
idivl
mov
cli
xor
jmp
cmp
aaa
lods
stos
fwait
add
dec
jo
cli
and
dec
pusha
cmc
stc
sbb
jo
cli
sub
and
stc
or
add
push
add
mov
cli
adc
lea
roll
aam
jmp
cmp
inc
inc
jne
jno
xchg
aam
cld
xlat
sbb
xchg
or
dec
flds
add
push
push
fsubs
push
in
sbb
adc
mov
lock
add
pop
fists
push
shl
push
jle
push
pushl
push
push
add
add
daa
dec
test
test
push
lret
repz
adc
inc
add
mov
xor
sbb
add
fadds
insb
mov
ljmp
mov
xor
jl
out
jne
lret
jmp
scas
fldenv
adc
dec
inc
xorb
add
add
dec
mov
ss
ja
add
je
jb
inc
cltd
sub
ds
xor
or
sti
cmp
outsl
in
inc
scas
addb
mov
xor
mov
cmc
dec
repnz
cld
imul
call
sahf
out
xchg
dec
mov
in
mov
pop
pop
call
add
add
repz
mov
sub
pusha
stos
mov
push
cmpsl
out
push
repz
add
aad
dec
mov
cld
fcompl
out
dec
loopne
std
ss
cmc
jb
sub
rcr
ljmp
xor
jae
dec
je
fidivs
push
cli
push
je
fmull
jo
lcall
insb
add
add
inc
data16
xor
mov
inc
outsb
push
mov
dec
idivl
mov
rcrb
sbb
lahf
jb
push
popa
sbb
and
ret
scas
cmpsb
mov
clc
frstor
xchg
dec
mov
mov
fcoml
jne
pop
mov
cli
fcoml
nop
sahf
decl
add
add
jne
pop
popf
push
ljmp
pop
mov
dec
or
xchg
incl
pop
outsb
and
out
pushf
add
xchg
loope
pusha
stc
cld
mov
inc
mov
pop
mov
ficomps
loope
mov
outsb
adc
popf
std
mov
and
xchg
or
pushf
std
cmp
push
mov
fs
jmp
and
aad
add
xor
lds
adc
lahf
jae
xchg
hlt
cld
je
dec
mov
mov
ljmp
inc
push
fidivrs
shrb
mov
das
sub
lret
ret
sub
mov
mov
daa
sti
enter
mov
sbb
es
add
mov
es
mov
test
xchg
ja
add
dec
in
je
xor
jge
mov
mov
hlt
add
out
repnz
mov
adc
into
cli
js
rorl
mov
orb
outsb
dec
clc
sub
sbb
jae
add
fwait
add
or
sub
fisubrl
fisubrl
add
xor
fldt
sti
rol
stos
add
call
pop
fsubr
cld
dec
fbstp
lcall
push
push
std
repnz
push
movsl
jecxz
in
cld
xor
sbbb
inc
test
icebp
inc
push
jge
add
or
incb
das
jmp
mov
std
in
stos
push
sahf
pop
sbb
icebp
stc
mov
mov
add
add
stos
push
out
fisttps
shll
inc
jle
or
xor
jmp
insb
fsubrp
xlat
and
outsb
stc
out
adc
inc
inc
stc
jo
inc
in
fidivrl
inc
adc
fs
jo
xchg
leave
sbb
cltd
add
shll
cmp
orl
fs
inc
lahf
sbb
sub
xor
xor
clc
inc
pop
add
icebp
mov
jle
jo
js
fisttpl
mul
lcall
std
jne
loope
dec
aam
cld
jne
loope
dec
movsb
flds
leave
push
inc
stc
push
rol
stc
psllq
pop
push
mov
test
inc
fs
icebp
sub
insl
inc
daa
cltd
arpl
add
add
cmpb
cmpsb
jg
test
sub
adc
add
aas
xchg
add
jb
test
outsb
push
sti
test
adc
mov
add
add
jge
aam
enter
mov
leave
inc
pop
decb
jno
cltd
mov
add
cmp
out
test
gs
scas
cmp
sub
add
add
loop
test
sub
sbbb
jne
leave
mov
inc
lcall
imul
rolb
rcr
jbe
mov
mov
ret
cmp
fwait
mov
ljmp
mov
pop
scas
cmpsb
inc
mul
lods
fwait
ljmp
popf
jp
js
mov
popa
inc
call
mov
add
add
mov
sub
lods
push
jle
inc
shrb
stos
lahf
jle
inc
mov
stos
inc
jmp
xor
adc
xchg
inc
cwtl
push
adc
cmp
and
mov
das
cmpl
add
jno
push
icebp
insb
pop
repnz
xlat
xchg
jno
jle
jmp
sbb
dec
cmc
jb
fldt
mov
stc
jmp
add
add
inc
insb
in
adc
add
out
out
lcall
mov
sbb
jmp
inc
outsl
fnstenv
inc
push
rcll
add
scas
cmpb
sbb
add
stc
cld
call
gs
decb
pop
ret
dec
daa
fs
adc
add
add
cld
pop
pop
pushl
ljmp
sub
rorl
lea
fbstp
cld
mov
jge
sub
add
addr16
cmpsl
out
push
pop
jecxz
jne
dec
mov
or
js
xorl
loope
push
push
sub
add
movsb
cli
push
aam
sbb
std
aas
push
and
add
in
add
sub
adc
xor
cli
enter
mov
mov
cli
test
pop
inc
mov
add
jle
xor
xchg
std
mov
insl
or
test
pop
inc
mov
imul
aas
loop
xchg
lcall
mov
sbb
or
gs
sti
add
add
sub
inc
mov
jns
pop
aam
sbb
mov
or
int
ljmp
xchg
loop
mov
out
sti
repz
push
inc
and
rolb
pop
mov
sbb
je
mov
mov
and
loop
jg
mov
pop
jmp
pop
inc
jno
cmp
jmp
ljmp
movsb
add
mov
ljmp
sbb
push
mov
lea
xor
jmp
in
bound
push
push
mov
jg
push
scas
cmp
dec
jmp
xor
out
fstps
add
xor
pop
xchg
ds
add
add
inc
je
in
test
scas
icebp
or
notb
cld
xchg
dec
mov
xchg
inc
inc
dec
inc
add
ljmp
ficoms
pushf
add
mov
arpl
aad
clc
inc
ror
add
cld
je
into
xchg
cli
insl
and
stc
je
dec
mov
jmp
jle
add
add
mov
out
aad
rclb
cld
jbe
repnz
dec
and
repz
ror
adc
add
and
adc
les
roll
push
pop
or
mov
flds
push
inc
and
jbe
mov
fucomi
cwtl
sub
mov
xlat
int
inc
repz
mov
jge
mov
mov
mov
xor
mov
xor
add
dec
or
sbb
leave
scas
add
orb
dec
add
rol
mov
inc
fldenv
mov
mov
push
loope
jns
and
xor
loope
inc
ja
pop
inc
dec
mov
lret
or
orb
rcr
cmp
add
xor
hlt
mov
cmp
and
mov
mov
fwait
xchg
xchg
test
popl
stos
add
fistl
mov
cmp
in
mov
arpl
inc
lret
mov
testl
mov
adc
mov
xchg
push
in
mov
push
fistl
cmp
dec
movsl
push
sub
add
add
sbb
mov
adc
add
insl
sbb
movb
inc
or
adc
clc
sbb
push
out
xor
lcall
mov
mov
add
bound
dec
js
ss
push
loopne
and
xor
or
jmp
xchg
or
jmp
add
add
fisttpl
insl
dec
faddl
jmp
mov
fildl
jmp
lcall
fidivrs
mov
repz
mov
add
jne,pt
addr16
shll
add
add
fcmovnu
insl
and
dec
jle
jo
add
mov
ds
outsl
xchg
loope
inc
frndint
cmp
add
cwtl
inc
or
add
push
fs
inc
jl
pop
sbb
psubusw
add
push
sbb
push
testl
and
fimuls
jle
add
lahf
loope
lea
sbb
mov
ficoml
mov
mov
cli
iret
enter
mov
add
add
movl
sldt
add
in
push
jge
cmpl
add
add
ret
mov
inc
add
add
cmpl
test
mov
xchg
add
mov
xchg
pop
cli
sbb
cmpsl
xchg
mov
mov
jno
arpl
ret
mov
mov
push
add
add
inc
push
xchg
sub
ljmp
scas
and
ret
les
lahf
inc
mov
pop
stos
or
xchg
jp
pop
call
cmp
mov
decl
pop
test
ljmp
sbb
stos
sbb
inc
mov
cmp
add
add
push
outsl
add
mov
cltd
add
cmp
fildll
scas
sbb
call
into
sbb
mov
xor
dec
in
test
sub
and
jecxz
sbb
dec
push
pop
cmp
clc
adc
push
lock
imul
sub
pusha
ret
xor
cmpsb
movsl
and
add
add
scas
pop
push
jecxz
aad
push
std
dec
push
jecxz
add
fsubrs
fldt
jle
push
jecxz
call
pop
sar
jne
xlat
push
clc
out
stc
mov
fimull
mov
jo
incl
es
inc
movsb
repnz
loopne
xchg
outsl
push
loope
adc
xchg
adc
dec
sub
or
loopne
lea
sub
adc
push
incl
pop
inc
and
lds
outsb
inc
mov
adc
sub
outsb
mov
dec
xchg
in
adc
mov
repnz
test
mov
lods
gs
dec
sbb
test
cmc
aas
mov
add
mov
enter
push
xchg
pop
addb
add
add
xchg
inc
add
aas
mov
icebp
mov
inc
or
push
push
xchg
mull
mov
std
inc
add
ds
mov
fsubrl
nop
cmp
sbb
lret
cmp
movsb
dec
pop
loopne
mov
dec
lcall
shl
add
add
call
cli
ret
ljmp
add
lret
stos
add
lahf
out
jae
push
sti
mov
loop
mov
sbb
ljmp
sahf
scas
fisttpll
dec
mov
sahf
es
pusha
frstor
cmp
call
xor
sbb
add
cmp
xor
test
add
add
daa
arpl
in
xlat
push
loope
sub
movsb
clc
divl
xor
sub
xor
jmp
mov
jmp
jmp
mov
xor
movsl
scas
stc
out
sub
mov
and
xor
inc
push
push
aaa
add
cmpsb
inc
jmp
jle
jle
dec
shrl
inc
pushf
add
add
add
enter
xor
and
or
rcl
roll
in
mov
pop
sahf
lret
pusha
out
jo
push
xor
pop
repz
sbb
cmp
popa
punpckhdq
pop
aas
test
outsl
cld
adc
push
repnz
add
fiadds
cld
or
gs
or
insl
in
push
in
outsb
or
add
ljmp
push
stos
push
pop
inc
xchg
pop
ret
movd
enter
mov
bound
call
out
cli
shlb
cmp
adc
xchg
daa
xchg
add
enter
push
inc
mov
ret
add
stc
xchg
pop
gs
mov
loope
jg
add
add
sub
shlb
lods
out
test
sti
mov
cmp
out
push
mov
movups
jno
or
adcb
push
sbb
mov
inc
inc
insb
daa
in
mov
ret
inc
fs
ss
scas
icebp
repnz
cs
daa
push
cmp
jmp
mov
add
enter
or
lcall
fistl
nop
out
xor
packsswb
jg
fsubr
add
fsubr
add
xor
inc
xchg
loop
xor
push
stos
fwait
arpl
sbb
cwtl
sbb
dec
mov
dec
ss
cmc
pop
cmp
cmp
push
idivl
mov
cmpsb
cltd
jo
push
cmp
cmp
xchg
pop
aas
subl
lock
pop
jmp
mov
lea
dec
clc
mov
xor
mov
out
add
movhps
adc
jmp
xchg
xor
bound
cmp
movsb
into
hlt
jbe
inc
push
leave
xor
leave
test
into
stos
cmpsl
adc
in
pop
pop
movd
pop
add
add
or
fbstp
push
out
add
jle
rcr
call
fs
and
clc
dec
lret
lcall
mov
fistpl
fs
popa
sub
adc
outsb
adc
jecxz
add
cmp
jle
xor
push
push
rolb
inc
aam
aas
adc
popf
add
cmpl
add
and
sti
lcall
leave
push
xor
mov
cli
xchg
adc
test
movsl
mov
mov
js
sti
push
es
rorl
decb
test
pop
add
mov
inc
push
add
inc
iret
mov
jo
and
mov
mov
sti
cli
push
popf
push
add
add
add
sti
cmp
add
dec
cld
lret
mov
lock
mov
fcomi
ret
stos
pusha
pop
push
mov
cmpsl
loop
clc
jecxz
movsb
aaa
pushf
ljmp
pop
lahf
repz
add
pop
pop
push
push
sub
stos
adc
idiv
inc
adc
sub
add
add
fstpl
mov
push
rolb
mov
ljmp
sub
add
sub
adc
push
mov
pop
mov
push
add
iret
test
sbb
fiaddl
jmp
push
mov
mov
fisttpll
inc
push
insb
add
add
push
ficoml
xchg
lods
xor
inc
idivl
mov
sub
xchg
add
mov
fildl
jmp
lods
sub
bnd
ficoml
pop
jg
mov
stc
cltd
aad
das
int3
std
rol
and
in
mov
cmpl
add
ret
and
push
adc
mov
test
ret
dec
test
call
mov
and
movsl
push
add
sub
add
add
int
inc
pop
xchg
add
adc
incb
inc
xor
dec
pop
int3
pop
ret
lahf
push
add
sbbl
add
sub
push
mov
js
mov
xchg
outsb
cld
jne
inc
add
pop
add
add
shrb
popa
adc
add
inc
jbe
mov
gs
leave
jg
add
dec
into
insl
pop
lods
cltd
clc
xchg
sub
or
data16
scas
push
ss
leave
adc
xor
dec
out
in
jne
pop
fwait
or
int3
push
std
mov
movsb
int3
out
mov
addb
sbb
mov
cmp
add
add
or
jmp
push
std
mov
fldt
cwtl
mov
mov
in
iret
add
push
scas
bnd
ljmp
cmc
fbstp
mov
test
mov
rcr
ljmp
xor
jmp
mov
push
push
push
jecxz
lock
popl
add
add
sbb
repnz
or
mov
mov
mov
add
sbb
mov
push
flds
popa
xchg
xchg
ret
in
push
inc
add
and
movsb
into
mov
cmpl
add
mov
mov
test
mov
add
add
loopne
sub
mov
mov
sbb
and
cs
sahf
clc
daa
adc
icebp
mov
push
cmpl
stc
jmp
adcl
mov
mov
daa
fstpt
fdivrl
xor
xor
imul
call
sbb
ljmp
add
lds
aam
xchg
aam
push
mov
sbb
test
loope
idiv
sub
jae
inc
or
test
cld
call
ret
data16
push
mov
jne
or
popfw
sbb
push
call
scas
adc
xor
rclb
fwait
psubd
out
das
add
mov
mov
add
add
push
int3
sub
xor
gs
popl
ss
ja
scas
out
std
dec
clc
loope
and
shll
jae
adc
and
das
je
inc
xchg
cmp
das
icebp
cmp
aas
ds
add
add
jle
sub
out
daa
cmc
jae
lods
xchg
pshufb
and
add
xor
fidivs
adc
vpshuflw
mov
cmpsl
xor
push
or
inc
imul
jmp
lret
push
mov
fistl
inc
sub
pop
cmp
loopne
mov
push
daa
loopne
mov
lock
sub
xchg
jg
xchg
cmp
repz
add
add
daa
nop
or
mov
add
scas
repnz
mov
and
fs
adc
mov
and
mov
and
sub
xor
sar
clc
mov
mov
stc
xchg
faddl
jmp
mov
inc
cltd
push
pop
ret
sbb
sub
push
aas
cmc
dec
and
add
add
mov
insb
add
add
jmp
dec
in
xor
and
cmpsb
push
adc
mov
mov
adc
pop
outsl
add
lods
ds
repz
push
cld
sub
jle
repnz
jne
push
pop
insl
sar
cmp
loope
lock
add
shlb
aam
cld
jne
rorb
clc
pop
stc
pop
add
add
sahf
adc
or
push
lea
mov
mov
inc
leave
cld
decl
popf
push
decl
cmpsb
ds
sbb
add
xlat
insb
xchg
xchg
roll
fucomip
hlt
xor
scas
pop
inc
mov
push
mov
cmp
fadds
and
adc
scas
inc
push
adc
add
repz
add
adc
add
mov
inc
push
loop
add
repz
sub
mov
dec
dec
stc
xor
add
sti
mov
xor
inc
mov
cmp
jne
adc
in
popa
add
clc
push
cmp
rcr
fldt
test
add
push
adc
loopne
jl
gs
test
test
jp
out
pop
xchg
rorb
mov
into
sti
mov
cmp
imul
lret
mov
pop
push
and
mov
xorb
xchg
adc
mov
dec
test
popf
pop
xor
or
inc
push
insb
out
add
fiadds
add
xor
add
ret
insb
iret
das
sub
pop
mov
pop
lods
fists
jecxz
jns
xchg
es
xlat
jnp
pop
repz
sbb
add
scas
push
outsl
hlt
insl
pop
jecxz
xor
mov
xchg
mov
icebp
cltd
in
pop
cmpsb
pop
jecxz
out
xlat
insb
insl
xor
jbe
jb
mov
repz
popa
jbe
add
add
popf
sqrtps
push
push
inc
lret
leave
fistps
jecxz
jmp
in
aad
pop
jnp
xor
aad
lcall
loopne
inc
rcrl
mov
xor
shrl
pop
cwtl
mov
inc
sub
mov
incb
or
jge
popa
je
pop
fidivrs
das
sbb
lcall
add
add
jg
xchg
jp
sub
inc
call
sub
fnsave
pop
inc
call
xor
mov
push
and
mov
pop
jb
stc
pop
adc
imul
push
jno
adc
sub
repz
fistpll
push
sbb
dec
mov
mov
and
xor
push
add
add
push
add
sub
adc
sti
shrb
aas
mov
test
std
loop
sbb
inc
out
std
lods
cmpsl
ja
lret
mov
sar
inc
lret
pushl
test
lds
sub
mov
mov
pop
jp
push
rclb
push
jns
pop
mov
push
movsl
add
stos
cmpb
add
fwait
xchg
inc
mov
push
nop
push
and
pop
stos
adc
pop
les
push
pop
loopne
push
pusha
add
fists
push
data16
sbb
mov
jge
pop
les
pop
inc
add
sbb
ljmp
adc
cld
fistpl
add
push
add
mov
add
rolb
insb
add
fildl
popa
frstor
ljmp
clc
int
jmp
adc
dec
mov
jo
movsl
mov
xor
jle
sbb
xchg
daa
stc
aam
iret
inc
jmp
sub
push
mov
jne,pn
out
sbb
add
and
mov
add
add
imul
fsts
xchg
push
fdivrs
sub
cld
pushl
push
fadds
xchg
stc
jmp
xchg
inc
fimull
xorb
test
push
mov
aas
lock
js
inc
dec
scas
cwtl
aas
call
push
cld
add
mov
push
incl
add
sbb
daa
sarb
add
dec
push
ljmp
jmp
add
jmp
push
push
xchg
icebp
push
mov
in
dec
mov
mov
fldl
adc
inc
inc
jmp
cmp
lret
pushl
cmp
adc
das
push
or
lock
decl
mov
xchg
sbb
add
add
mov
sti
rcrb
inc
mov
mov
aas
hlt
mov
test
add
movsb
cld
repnz
in
sbb
std
pop
jae
cmp
mov
add
rolb
add
ja
xor
xchg
sbb
sbb
xor
std
ja
cmp
ljmp
add
push
imul
or
lcall
cmp
aaa
stos
cmp
cltd
lret
xchg
ds
adc
pop
sbb
mov
push
mov
sbb
jmp
fwait
ljmp
mov
stc
mov
adc
fldcw
or
jmp
xchg
adc
push
add
add
add
cmp
jmp
into
fwait
add
sub
arpl
std
sbb
dec
push
push
cmp
fwait
sahf
cmp
sbb
dec
adc
xchg
adc
insl
decb
jae
adc
mov
inc
add
add
aam
push
push
add
add
stc
testb
cld
push
imul
sbb
push
daa
es
push
imul
out
mov
push
jle
sbb
ljmp
cld
jmp
jle
imul
and
or
adc
mov
scas
fsubrs
test
cld
inc
push
aam
lock
add
xchg
bound
mov
jge
dec
push
dec
jmp
not
shl
dec
aad
xor
ret
or
mov
and
movsb
fdivp
mov
cld
cli
xchg
jne
rorb
add
or
sub
add
std
mov
xchg
inc
jno
out
hlt
notb
add
lods
xor
push
mov
xchg
outsb
mul
les
clc
sbb
cmc
gs
jg
add
sub
shl
sar
out
sub
push
jmp
mov
push
outsb
inc
inc
stos
jae
add
sti
scas
push
or
pushf
mov
or
sbb
adc
mov
sbb
data16
outsb
push
fmuls
stos
inc
add
mov
fildl
divb
mov
ljmp
stos
xorl
push
mov
cmp
cmp
stos
orl
cmpsb
clc
xchg
xor
adc
adc
inc
jnp
clc
dec
xor
or
adc
cmp
cli
ss
movsl
xchg
stc
add
add
addr16
mov
stc
mov
sub
push
cmp
adc
sub
stc
push
jmp
mov
adc
in
jle
inc
jmp
push
lock
fdivr
fstpt
je
adc
add
jle
outsb
nop
xchg
lret
fs
addl
push
push
or
add
add
add
arpl
xchg
adc
push
jae
or
stc
jo
inc
in
roll
xchg
int
lcall
in
inc
movsb
mov
imul
add
xlat
cmp
pop
ret
or
pop
sti
dec
push
xor
shlb
add
jecxz
mov
testl
filds
sub
out
add
stos
imul
add
mov
pop
pop
xor
std
xor
xor
add
test
scas
ret
mov
push
addb
adc
and
cmp
dec
ret
adc
add
vcmppd
add
clc
jl
push
movsl
jmp
cmp
cmp
out
mov
push
inc
xor
or
adc
gs
pushf
pop
sub
sub
movsl
jne
lahf
clc
inc
cltd
jb
popa
in
sub
lahf
cmp
xchg
pusha
mov
int3
movsl
jb
push
subb
pop
xchg
insb
cmp
test
push
outsl
adc
mov
fwait
ljmp
scas
pop
clc
mov
mov
and
mov
inc
add
add
mov
lods
adc
test
push
imull
idiv
leave
fwait
ljmp
push
cmp
bound
or
inc
sbbl
adc
arpl
or
push
jbe
adc
dec
leave
fwait
add
sub
xchg
add
add
mov
loop
mov
sbb
pushf
mov
inc
std
clc
adc
mov
fwait
add
or
fiaddl
jmp
aaa
pushf
pop
xchg
rorl
xchg
jle
test
xchg
bound
sub
jne
bound
cld
xlat
sbb
push
fstpl
add
movsb
xchg
or
bound
add
cld
incl
add
bound
ljmp
adc
divb
add
xor
add
arpl
call
pop
pop
jecxz
movsb
fmull
add
add
mov
push
sbb
mov
dec
lea
lods
push
call
push
fldl
push
fisubl
mov
add
in
adc
jmp
mov
ret
loop,pt
add
or
out
adc
das
inc
add
cmp
imul
inc
mov
add
mov
push
ret
paddw
jle
add
add
mov
pop
or
add
sti
test
or
push
mov
add
orb
add
cmpsl
xlat
push
add
sub
cltd
push
mull
push
add
bound
jg
mov
push
sub
sti
rcrb
push
push
daa
fs
outsb
mov
inc
mov
sbb
add
sbb
dec
lcall
add
mov
xchg
push
cmpsb
imul
ljmp
fucomi
jle
xchg
in
adc
out
xor
sub
fildl
fs
add
dec
sbb
add
inc
dec
outsb
out
adc
mov
aaa
scas
add
mov
stos
clc
sahf
mov
mov
in
imul
adc
stc
add
add
fwait
add
faddl
jmp
jo
imul
dec
mov
mov
fiadds
cmp
jbe
mov
adc
mov
movsb
ret
in
push
dec
add
add
cmpl
mov
mov
mov
mov
pop
pop
shlb
pop
inc
cmp
xor
jae
and
cwtl
movsl
adc
outsb
or
addr16
add
outsb
add
sbb
add
cs
call
xchg
add
jmp
xchg
std
xor
inc
adc
jge
inc
fadds
add
test
dec
aam
sarb
cmp
push
mov
jae
jae
cmpl
add
add
or
add
adc
mov
std
add
inc
dec
test
or
add
pop
lods
ret
adc
inc
adc
mov
js
stc
repnz
fs
scas
adc
mov
adc
push
inc
add
ret
ds
jmp
add
xchg
dec
and
fistl
jmp
or
xchg
add
add
ret
lock
adc
rcr
ljmp
adc
inc
mov
or
into
aam
jb
sub
div
pop
mov
or
jl
mov
jnp
mov
lods
mov
xor
lods
sarb
fbld
mov
ljmp
clc
imul
push
sub
aaa
lds
add
add
jle,pt
mov
add
movsb
mov
jmp
dec
scas
add
mov
fwait
add
rcrl
or
cmp
lds
ljmp
jns
faddl
jmp
mov
cld
fimull
jmp
insb
stc
lea
sbb
add
xchg
stc
push
orl
fisttpl
stc
aad
xlat
clc
fstpl
inc
stc
add
or
push
pop
cld
ja
in
test
push
push
mov
clc
test
fldl
movhlps
add
fs
icebp
lcall
sub
push
jne
cli
or
mov
pavgb
dec
and
add
adc
push
call
mov
rorb
and
add
mov
lods
push
jmp
pop
adc
jns
scas
dec
push
pop
orl
loope
push
inc
in
pop
and
push
inc
aaa
imul
int
repnz
mov
addb
repnz
sti
adc
call
add
lret
adcb
idivl
add
push
push
adc
cs
add
sub
xchg
sub
clc
in
xchg
cmovne
aad
or
mov
cli
in
loope
inc
add
mov
sar
repnz
inc
loope
add
cmp
and
and
mov
out
gs
inc
mov
xlat
mov
jle
loop
or
xchg
add
into
fwait
ljmp
pop
jmp
mov
nop
mov
daa
in
stos
add
lock
add
xlat
inc
mov
pop
push
or
scas
mov
add
add
cld
outsl
sbb
pop
lods
fsubr
add
xchg
loop
mov
cld
inc
mov
sub
fcmovnb
push
add
add
add
addb
push
rorl
inc
scas
jae
pop
jge
xchg
fidivrl
jmp
adc
lds
push
mov
or
sbb
enter
mov
lods
mov
add
or
in
pop
out
gs
in
repz
jmp
push
xor
outsb
add
fildl
inc
xchg
imul
stc
mov
adc
jno
xchg
jmp
test
inc
add
cld
jne
lock
or
mov
dec
icebp
adc
movsb
dec
mov
movsb
or
pushf
add
add
div
sti
test
mov
xor
lahf
mov
xchg
repnz
push
out
and
add
pop
stos
xorb
and
add
add
sbb
scas
lret
out
outsb
adc
adc
sbb
scas
std
arpl
fists
xor
push
add
cmc
cli
shlb
or
in
mov
rorl
add
mov
push
rcl
repnz
cmpl
aaa
call
inc
adc
dec
mov
jno
movsl
push
ljmp
add
mov
adc
or
in
je
fs
je
add
add
add
mov
icebp
mov
notb
enter
and
jle
jae
or
shrb
fistpl
adc
mov
fcmovnbe
push
mov
jecxz
jg
leave
add
adc
in
jp
jge
rolb
ljmp
add
loop
stos
add
test
or
and
jmp
ror
cmp
rcr
lea
xchg
pop
outsl
call
mov
call
rcl
fisttps
add
mov
arpl
sub
lret
fcmovnu
push
inc
mov
fsts
push
stc
insl
decb
repnz
add
imul
xor
push
outsl
icebp
push
pusha
divb
stc
adc
imul
fadd
lods
clc
aam
add
mov
movsb
js
add
repz
jmp
scas
xchg
adc
inc
outsb
icebp
test
fldt
push
xchg
je
cli
dec
in
add
sbb
int3
out
into
lods
iret
clc
icebp
sti
adc
lret
adc
stos
sub
fsub
jmp
lahf
mov
mov
cli
test
lock
xor
shr
cld
jne
test
imul
jmp
cld
jne
cli
insl
adc
insl
or
ljmp
out
add
and
add
pusha
popl
call
add
add
dec
cld
call
pop
jne
bswap
shl
cmpsl
xlat
outsb
adc
adc
mov
fadd
ss
out
inc
jb
and
or
cli
test
adc
rorb
repnz
xchg
push
std
add
adc
add
filds
nop
ret
mov
pop
jl
aad
jno
xchg
inc
in
cli
add
add
sub
je
inc
loopne
mov
mov
pop
jg
add
add
fildl
shrl
lods
fistl
push
inc
fwait
in
push
stos
jo
les
outsb
int
adc
mov
in
iret
ret
add
or
xchg
dec
testb
andnps
sub
sahf
lods
adc
add
mov
fwait
ljmp
fldt
sub
mov
call
add
in
mov
ljmp
fldt
sbb
push
xor
jge
sbb
repnz
add
test
in
pusha
fsub
sar
les
das
cltd
sbb
jle
lcall
das
mov
add
sbb
jg
lcall
mov
repz
mov
dec
aas
mov
loopne
sbb
jle
push
xor
fiaddl
mov
repnz
or
dec
xchg
mov
outsl
icebp
adc
stc
gs
push
insb
cwtl
mov
jb
xlat
jmp
fs
push
add
push
lea
adc
scas
loope
add
mov
add
cld
adc
loop
mov
adc
sub
or
imulb
cli
jmp
mov
pop
lods
call
mov
je
push
cmp
jmp
icebp
cmc
arpl
jge
call
imul
icebp
mov
movsb
rolb
push
roll
or
leave
roll
push
add
add
or
in
mov
faddl
rcrl
xchg
call
cmp
push
and
fisttpll
or
jo
jae
test
push
dec
mov
add
mov
cmp
enter
mov
repnz
inc
loopne
push
push
repz
daa
or
add
cmc
aas
mov
sub
clc
cli
xor
adc
out
nop
or
adc
mov
jmp
cmp
fisubs
jp
sbb
jne
sarb
add
aad
pop
mov
dec
inc
inc
and
loop
inc
mov
dec
sub
pushf
pop
out
dec
mov
jmp
pop
mov
mov
add
dec
inc
and
test
test
in
push
lahf
movsb
adcb
pop
rclb
pop
int3
and
mov
shr
cmc
loop
pop
les
filds
push
testb
ret
add
xor
in
ljmp
mov
jp
test
pop
mov
aas
loope
testb
sub
add
outsl
sbb
xchg
filds
sub
mov
xor
push
add
mov
and
push
fildll
mov
pop
jne
bound
insl
idivl
or
mov
mov
lahf
or
push
cmc
clc
add
pop
add
xchg
or
xchg
sti
or
jmp
mov
pushl
adc
les
add
sbb
or
xor
push
aaa
iret
rclb
test
notl
scas
cld
jne
push
add
adc
dec
mov
sti
sti
adc
mov
xchg
sbb
mov
lods
cld
jne
sbb
cmp
pusha
adc
test
dec
xchg
cmc
push
mov
inc
aam
mov
add
mov
jg
lcall
add
add
insl
sbb
inc
add
das
data16
inc
cld
push
rcrb
push
fcom
cmp
pop
inc
inc
inc
fnstenv
jle
or
ds
add
decb
std
pushl
fnstenv
mov
lea
mov
add
test
iret
in
xchg
mov
or
js
xchg
or
dec
jbe
fsubl
fistpl
adc
stos
add
sahf
push
cmp
mov
mov
cld
xchg
stos
add
jae
outsl
adc
mov
or
stos
add
movsb
sarl
mull
out
cmp
sti
lds
xlat
jmp
outsl
lods
fwait
ljmp
add
mov
xchg
loope
insl
in
sub
pop
mov
fwait
ljmp
cmp
or
loope
outsb
or
rep
mov
sbb
mov
mov
call
mov
jo
popa
mov
rep
mov
pop
jg
stos
mov
sbb
mov
push
mov
add
add
xchg
repz
sbb
in
imulb
pop
jnp
sub
int3
cmp
xchg
add
mov
jmp
push
loop
popa
repnz
fbstp
ret
ret
add
test
fisubrl
fcmovu
pop
repnz
fiaddl
jo
cmp
cmp
ror
sbb
psrld
add
add
arpl
push
cmpb
fmuls
cmp
lret
in
bound
imul
cmp
inc
mov
inc
adc
add
and
fdivl
add
pushf
aad
xchg
add
mov
inc
data16
add
bound
mov
xchg
cli
ret
push
inc
clc
cmp
add
add
add
add
bound
incb
fcoml
or
jge
mov
incb
add
lahf
xchg
push
pop
sbb
cmp
lret
mov
cld
cmp
or
call
add
ds
push
lock
mov
fldt
add
pop
jae
add
adc
xor
outsl
hlt
int
mov
dec
xchg
inc
mov
stos
pop
fisubl
pop
outsl
jae
ljmp
fucomi
xor
fcmovnb
mov
sub
fstpt
xchg
fldt
out
xor
nop
fcmovbe
jecxz
inc
mov
cwtl
ljmp
add
iret
add
xlat
pop
hlt
les
adc
sub
mov
call
icebp
mov
aaa
push
jnp
sub
bound
hlt
into
mov
jle
cmp
insl
mov
push
xor
xchg
sti
fstpt
or
mov
jle
insl
hlt
stos
mov
addr16
stos
mov
add
test
clc
cmp
add
fidivl
outsl
ljmp
pop
and
mov
inc
pop
adc
mov
xchg
sub
ret
mov
pop
add
sahf
add
imul
add
shll
mov
hlt
movsb
pop
ds
aam
lock
outsb
cld
sub
xchg
adc
jno
je
add
jo
outsb
hlt
lret
mov
push
call
jno
jne
adc
lret
add
and
js
mov
fcmovb
push
pop
fiadds
add
filds
xor
cmpsb
mov
insb
rorb
push
inc
cld
lea
cli
jo
iret
sarl
inc
push
ss
add
jge
test
add
add
pop
xchg
cmpb
add
jae
ja
cld
in
mov
cli
adc
iret
sarl
ret
push
add
mov
pop
pop
mov
sub
mov
jg
add
add
jge
ret
insl
aas
mov
add
and
sbb
sub
add
add
jp
cmp
cmp
jo
das
push
pop
adc
and
inc
mov
mov
gs
xor
mov
add
mov
out
mov
icebp
aas
xchg
mov
ljmp
sahf
mov
in
mov
xchg
iret
xlat
adc
adc
idivl
add
add
add
sbb
mov
lcall
and
or
jnp
mov
popf
sbb
sbb
push
out
pop
js
or
icebp
insb
std
andb
sbb
pop
jg
add
inc
in
mov
repz
dec
rorl
jmp
cmp
outsl
in
add
int3
sbb
leave
sub
add
in
mov
pop
jmp
clc
add
into
adc
lret
out
loopne
stc
add
mov
ret
push
mov
add
add
sub
pop
lock
aam
mov
bound
scas
push
fwait
ja
add
fimull
push
add
dec
das
pop
ret
stos
fs
sub
add
sub
ret
pop
out
clc
decb
les
in
push
add
dec
and
fs
add
xlat
mov
add
or
jae
imul
dec
lea
jb
add
aaa
jnp
pop
add
jne
inc
adc
sub
ss
dec
dec
cmpsb
cmp
movsb
or
daa
nop
sar
add
add
inc
pop
add
add
popl
jo
loope
ss
dec
inc
dec
cmp
and
aas
rorl
lea
std
mov
pop
or
mov
add
int
dec
or
icebp
push
ss
cmp
bnd
add
sub
xlat
cltd
hlt
mov
in
addr16
xchg
fsubr
add
push
rolb
add
inc
and
xchg
ljmp
addr16
cmp
fsubl
repnz
ljmp
fsubr
add
adc
shlb
pusha
push
clc
inc
mov
dec
int
push
cld
sub
out
jle
add
rclb
push
jnp
mov
insl
mov
dec
add
xchg
mov
push
ret
icebp
je
add
add
lcall
ret
lahf
add
idivb
sub
mov
std
call
xchg
in
in
mov
sub
xchg
cmp
jge
xchg
and
sub
fidivs
xchg
shl
je
out
lock
mov
out
daa
icebp
push
call
ret
popa
cli
iret
and
add
add
dec
sbb
xchg
fbstp
inc
sbb
mov
pop
popf
and
add
push
sub
jmp
decl
sub
rorb
inc
call
lahf
mov
adc
lods
adc
or
adc
jns
je
scas
loop
jne
imul
add
add
mov
add
movsb
add
adc
clc
mov
sub
add
inc
fmull
mov
loope
add
cli
cmp
adc
add
inc
mov
cmp
lret
add
xchg
icebp
ljmp
xchg
call
inc
mov
cli
cli
clc
lods
popl
add
jge
es
mov
or
stos
xor
inc
cli
add
inc
mov
pop
cld
aad
idiv
mov
mov
cmp
dec
mov
xor
in
inc
mov
fucomi
xchg
lods
into
icebp
out
or
fidivrs
rolb
nop
pop
mov
push
mov
mov
lret
imul
xchg
divl
add
add
push
add
hlt
cmp
imul
pop
call
dec
movsl
sub
fcmovbe
call
iret
add
mov
out
jl
ret
fbstp
mov
sub
sbb
xchg
fisttpl
add
add
mov
stc
inc
jmp
mov
imul
out
hlt
stos
add
add
jmp
insb
xor
add
jle
in
sbb
fildl
xchg
sub
mov
in
jo
in
fs
popa
and
jb
mov
rorl
stc
mov
sbb
add
adc
out
dec
sub
jb
xor
pop
dec
addb
popf
add
add
jge
add
add
sbb
pop
ljmp
mov
and
je
stos
jmp
cmpl
rolb
fistl
ja
cltd
fistl
fistl
dec
jecxz
inc
and
ss
add
test
sbb
test
cmpl
ret
add
in
cld
adc
jl
call
push
add
add
mov
xchg
jg
jae
lret
mov
cmc
push
std
hlt
jg
sub
or
mov
adc
loop
add
mov
test
testl
mov
add
mov
pop
jno
pop
test
jle
add
mov
mov
mov
out
pop
scas
mov
jg
add
shlb
mov
push
int3
cli
cli
ja
jae
jno
test
mov
sti
incb
outsl
out
out
mov
lea
lods
hlt
sbb
mov
jae
mov
pop
add
fildl
push
mov
push
push
mov
push
sahf
testl
enter
addr16
hlt
popf
call
push
outsl
cli
lret
add
out
icebp
int
add
repz
daa
in
sub
sbb
add
iret
xchg
in
xlat
jle
ljmp
fucomi
ss
mov
outsl
faddl
sti
repz
mov
mov
sbb
cmpb
jb
xchg
jmp
insb
push
outsl
daa
pop
fidivrl
cmc
stos
mov
add
mov
aad
jmp
je
mov
bound
add
stc
popf
outsb
and
add
mov
in
jmp
push
in
jmp
clc
jmp
hlt
pop
outsl
in
adc
add
in
jmp
subl
mov
imul
and
shl
roll
add
addb
push
add
sub
xchg
inc
movsb
pop
cld
add
xchg
dec
loopne
inc
add
mov
dec
and
call
iret
pop
jle
and
mov
lea
push
adc
inc
dec
mov
adc
mov
mov
sti
je
shr
mov
add
mov
push
sub
std
out
and
cli
inc
dec
push
jne
rolb
aad
out
ret
add
mov
jne
jle
pop
sti
int
in
mov
push
insl
sarb
mov
add
inc
xor
mov
mov
mov
adc
dec
dec
inc
std
xchg
cmp
leave
mov
add
xchg
repz
add
fldt
add
push
pop
and
push
das
and
fwait
ljmp
mov
xor
out
push
daa
and
mov
xchg
mov
mov
xor
in
idivl
dec
jmp
mov
push
jmp
mov
fcmove
adc
loope
pop
int
xchg
pop
add
add
dec
ja
cmc
fsubr
add
sub
ljmp
push
or
aaa
push
adc
lret
jmp
scas
or
jmp
popf
jg
sub
imul
or
bound
push
lds
in
and
test
xor
fildl
jmp
add
add
fildl
jno
mov
ds
mov
add
in
push
leave
mov
mov
rol
mov
in
pop
out
loopne
aas
add
lods
pop
add
and
call
pusha
mov
cld
sbb
jmp
mov
add
push
or
push
add
lret
sbb
add
adc
push
scas
fucomp
cwtl
push
sbb
mov
je
fs
sbb
cmpsl
or
out
shr
addl
or
clc
call
or
sbb
shlb
lret
fisttpl
mov
in
call
mov
fwait
mov
je
outsl
adcb
out
out
xchg
mov
ss
mov
mov
adc
xor
add
push
sbb
fidivl
pop
xlat
sub
mov
add
xor
pop
test
stc
call
push
push
or
pop
or
out
or
dec
pop
sbb
clc
js
mov
je
loop
out
imul
jno
sbb
push
in
fstpt
leave
rcll
out
mov
stos
add
xor
add
sbb
add
divl
insb
test
xchg
jns
cmp
es
push
mov
mov
loop
and
push
mov
pop
movsl
jo
add
adc
cmp
fsubr
add
add
stos
sbb
jbe
inc
scas
lods
dec
cmpsb
or
faddl
mov
jl
jle
test
xor
push
clc
pushf
jae
jmp
clc
aad
mov
popa
rcrb
mov
sbb
out
xchg
jne
inc
shl
icebp
inc
push
xlat
jle
test
outsb
jne
xchg
pushf
fdivrp
sahf
dec
in
jle
add
add
xlat
xor
jge
stc
push
testb
cld
ljmp
mov
mov
movzwl
addl
sbb
add
sbb
inc
call
ret
xchg
adc
lea
dec
push
scas
sbb
add
sub
or
lock
adc
aam
loope
mov
out
ret
jle
push
ret
jle
push
ret
orl
inc
cwtl
xor
fcomi
xor
pop
cmp
adc
and
jmp
sbb
sbb
sahf
add
mov
ret
mov
int
push
inc
mov
orb
xchg
test
and
inc
mov
mov
lods
and
les
or
pop
call
jo
mov
scas
jae
in
and
add
pop
mov
xchg
cmc
mov
mov
cmp
movsl
jecxz
mov
imul
cli
adc
ret
xchg
push
ret
aaa
xor
xchg
fldt
ss
iret
mov
pop
or
add
add
sub
push
dec
jmp
add
scas
loope
and
stos
add
sahf
xchg
test
adc
fisubl
adc
lahf
mov
cmp
cmp
ljmp
xor
xchg
jns
sbb
fucomi
add
xorb
jns
ljmp
aam
sbb
lods
arpl
pop
shll
mov
nop
add
add
adc
cli
lahf
aas
push
data16
xchg
or
inc
jmp
orl
xor
and
call
mov
ss
mov
xchg
std
call
jl
add
jl
add
aad
in
xor
shrl
jle
xchg
fbstp
test
add
add
fildl
xchg
cltd
sar
sahf
or
sbbl
in
add
fldl
add
loopne
or
cmp
in
and
cwtl
dec
push
in
sub
xchg
rolb
cwtl
pop
pop
pop
stos
pop
test
xlat
insl
cld
xchg
out
push
or
testb
add
mov
lret
sub
pop
jl
dec
push
mov
adc
imul
clc
stos
xchg
je
mov
fildl
je
mov
out
mulb
xchg
inc
push
xchg
les
add
dec
mov
sbb
pop
jg
add
add
add
push
push
mov
cld
lea
and
lods
push
pop
fidivs
jae
cmp
inc
ljmp
hlt
lods
lods
test
cmp
cmp
xor
inc
adc
mov
movsl
cld
test
add
jge
aas
pop
test
push
call
out
dec
ret
dec
scas
sub
jmp
push
jbe
pop
sbb
add
gs
add
push
fcomip
sbb
pop
push
in
ljmp
shll
mov
imul
add
sbb
ljmp
pop
push
sub
test
sub
mov
fucomi
add
mov
mov
cmc
dec
add
xor
testb
aam
outsb
lret
jle
add
add
loope
sbb
inc
or
jecxz
jmp
pushf
in
icebp
icebp
ret
popa
fdivrl
mov
lea
sub
cld
xlat
push
ret
mov
rorb
xor
test
push
aam
outsl
lret
jle
in
loope
pushf
push
or
jecxz
jmp
pushf
in
icebp
jno
and
mov
mov
int
mov
add
pop
or
jae
push
add
rcrl
gs
imul
call
das
mov
rcr
sarb
push
push
fs
call
mov
in
add
popf
fisttps
mov
pop
fs
lahf
loopne
repz
sti
pop
sbb
add
inc
scas
cmp
insl
and
add
xor
rorb
jne
add
clc
iret
dec
add
mov
je
sbb
in
aaa
cwtl
filds
movsb
xchg
mov
ret
mov
stos
xchg
lret
sti
dec
out
sti
rcrb
test
pop
sub
ljmp
cmp
add
mov
add
mov
dec
push
fmuls
or
test
add
add
mov
sub
jg
aad
lods
jb
les
std
addr16
sub
lret
loope
add
mov
dec
or
leave
pop
push
roll
add
data16
mov
xlat
jae
shll
mov
xlat
jp
pop
aaa
lods
ljmp
adc
das
rorl
add
add
shrb
inc
lret
popa
lds
rorl
mov
mov
xor
xchg
dec
jecxz
sub
mov
mov
stos
add
xor
mov
ss
mov
xor
fildl
push
shl
cs
loopne
jmp
fldl
push
add
add
lret
imul
adc
mov
test
mov
push
clc
cld
jnp
push
jmp
out
add
ds
push
cmc
inc
dec
stc
fwait
clc
sub
and
call
test
sub
sub
in
das
ljmp
add
fimull
xor
add
gs
pop
mov
add
scas
insl
or
push
or
lahf
je
dec
iret
dec
pop
push
in
push
lret
jg
add
jl
outsl
lods
insl
add
xchg
int
cmp
adc
dec
das
xchg
insl
pop
sbb
add
aam
dec
mov
call
push
decl
mov
lea
mov
or
sbb
mov
test
clc
daa
add
lret
scas
add
mov
dec
ret
pop
cmp
sub
inc
out
loope
inc
mov
xor
mov
hlt
mov
jbe
jp
dec
into
cs
inc
adc
int
mov
test
add
push
mulb
jg
clc
out
inc
fdivr
inc
testb
pop
inc
add
mov
andl
cmc
inc
iret
jnp
iret
sysexit
outsb
bound
icebp
pop
ss
aad
ret
clc
and
scas
cmp
jmp
bound
das
enter
mov
ret
pushf
pop
ret
in
paddusb
addl
std
add
add
lds
add
imul
shl
ror
push
fisubrs
xchg
ja
jmp
xor
push
movsl
pop
jle
addb
adc
into
fldenv
or
sub
neg
cs
outsb
jecxz
push
push
icebp
imul
mov
sub
xor
sarl
imul
mov
add
add
push
rcll
arpl
sub
outsl
roll
out
icebp
adc
xor
fadds
sub
aad
mov
out
xor
mov
dec
jb
sub
or
int
pop
ljmp
or
push
jbe
jae
jle
test
or
ret
repz
mov
push
adc
push
ljmp
add
cmpsl
outsb
testb
idivb
loop
xor
or
mov
sbb
ret
dec
mov
sub
and
push
icebp
mov
ret
sti
pop
adc
sti
leave
addr16
ds
pop
xchg
dec
mov
daa
jg
jno
sub
sbb
jl
push
fimull
je
mov
add
je
js
inc
or
push
inc
push
mov
lds
lock
mov
std
jns
test
or
into
add
inc
mov
adc
shlb
ljmp
mov
cmovle
testb
mov
movsl
mov
mov
jmp
or
cltd
dec
inc
or
cmp
mul
add
add
arpl
dec
inc
add
addr16
pop
mov
pushf
loop
cmp
aad
test
cmp
add
cmp
rclb
or
xor
add
push
jecxz
adc
jae
inc
lcall
mov
out
mov
fidivrl
mov
outsb
call
jle
ficoml
add
mov
cmp
pop
add
sahf
jae
loope
gs
fldpi
cmp
out
fwait
adc
ja
xor
add
sub
xchg
roll
fadd
adcl
pop
in
fcmove
pop
adc
insl
popa
fldenv
add
fildl
imul
mov
push
mov
inc
cmp
mov
push
stc
call
cmp
cli
shll
insl
sbb
dec
push
jb
in
clc
xor
pusha
ds
mov
clc
jb
pop
mull
mov
pop
jbe
mov
add
call
fbld
or
and
add
in
jmp
mov
lds
jl
add
in
xlat
push
add
add
or
add
loop
push
and
sub
inc
gs
ret
js
fcomps
jns
lods
xor
pop
push
fs
orl
clc
push
push
popf
clc
add
fdivrl
add
cmp
lock
scas
call
jnp
jmp
add
call
cmpb
jae
popa
cmp
out
or
inc
add
add
mov
cli
inc
and
mov
jg
mov
jl
mov
mov
lods
out
mov
inc
push
add
adc
push
jl
add
outsl
test
dec
lds
cs
fsubl
push
fisubl
ljmp
add
xchg
mov
cmpsb
add
add
fldt
inc
mov
push
xorb
sti
fcomp
and
fcmovnbe
push
xor
lahf
push
lods
in
push
daa
push
fistpl
test
scas
cli
fwait
sbb
cmp
cmpsl
sar
ret
fidivl
mov
or
inc
outsb
sub
ret
pop
sahf
out
sub
cltd
add
mov
add
cltd
sbb
lcall
push
call
mov
ljmp
xabort
sbb
push
leave
ss
sahf
pop
pop
rcrl
pop
cmp
push
sbb
sub
test
lea
dec
cwtl
pop
pop
prefetchwt1
or
insl
or
pop
pop
jne
lds
mov
je
ss
jae
add
add
rcrl
inc
rcl
adc
fnstenv
jmp
clc
je
call
lret
push
popf
rorl
add
mov
push
adc
repnz
add
cmpsb
sub
lret
adc
inc
adc
in
test
add
int3
iret
push
mov
push
loopne
adc
mov
mov
loopne
push
les
xchg
das
ret
jo
or
add
pop
lock
pop
addl
frndint
jne
inc
ds
divl
jmp
outsb
mov
sarl
inc
mov
or
mov
daa
inc
lods
or
dec
cmp
dec
popf
fcomp
jl
out
aaa
push
test
out
add
sub
pop
xchg
cmc
push
les
add
mov
cmp
stos
cli
xlat
mov
rorl
out
subb
jo
xor
movsl
push
add
mov
in
dec
insl
in
adc
jb
jg
int
add
jg
dec
ss
xchg
pushf
cwtl
jnp
loopne
fwait
int
das
leave
dec
hlt
push
movsl
push
add
add
mov
pop
out
mov
fucomi
cmc
push
mov
push
mov
push
adc
stos
ja
and
add
jo
fcomp
arpl
dec
mov
sbb
insl
push
aad
cmc
dec
dec
stc
inc
push
in
add
cmpsb
jp
mov
xchg
shll
lds
fimull
test
add
add
push
sub
ds
jmp
fisttpl
inc
inc
cli
jo
ja
pop
push
dec
and
lahf
imul
push
or
or
push
adc
push
jle
fcmovbe
clc
and
pop
ds
inc
pushf
or
cmpsl
jno
mov
push
call
mov
cltd
add
mov
inc
push
sub
add
add
add
out
cmpsb
push
adc
mov
jle
test
rclb
adc
sbb
lea
movb
jle
pop
sub
enter
jge
mov
fisttpll
pop
or
or
pop
orb
pusha
cmp
jns
shlb
add
dec
adc
ja
cmp
jl
add
add
or
jno
js
inc
xchg
pop
mov
add
or
push
add
and
inc
sar
rolb
decl
adc
mov
pop
std
gs
inc
pushf
ljmp
mov
xor
mov
incb
pushf
mov
nop
lahf
xchg
xchg
add
mov
add
mov
es
cli
orb
ds
jl
cmp
lahf
cli
mull
jo
repz
cs
sub
xchg
cmp
jb
xor
into
in
repz
shll
out
outsb
inc
or
sbb
cmp
popa
inc
in
xor
lcall
arpl
add
add
push
cmpsl
pushf
or
fldenv
add
dec
mov
xchg
mov
ja
mov
mov
rclb
repz
fsubs
repnz
add
daa
je
pop
into
adc
cmp
mov
xor
push
movsl
mov
daa
pop
sub
fists
mov
mov
add
or
outsb
push
pop
xor
sbb
nop
icebp
dec
inc
or
jmp
ds
in
ret
inc
pop
ficompl
adc
shll
cmp
ljmp
mov
pop
roll
jmp
ret
xchg
mov
daa
scas
cmp
mov
cmp
out
push
inc
jns
pop
out
pusha
fwait
xchg
mov
push
pushf
mov
add
add
fildl
jnp
or
pop
jne
dec
in
aad
pop
clc
incl
lods
or
frndint
jne
bound
jne
bound
jne
fwait
sarb
push
leave
push
iret
add
mov
mov
sbb
add
pop
sti
adc
sbb
adc
mov
addr16
dec
incl
add
jno
or
jno
imul
jg
pop
mov
cmc
push
or
pop
cltd
loopne
fistpll
test
loop
push
mov
sbb
mulb
push
mov
mov
mov
push
bswap
jb
test
data16
cli
enter
mov
ficompl
lret
lods
xchg
xchg
adc
add
ss
sbb
xchg
mov
dec
jnp
jmp
and
push
in
jp
xlat
jmp
mov
jmp
mov
xor
pop
mov
add
pop
dec
cltd
add
jecxz
dec
shll
ret
mov
inc
add
pop
mov
xor
jb
mov
add
add
push
sub
pop
push
sahf
out
pop
outsb
out
cmp
mov
dec
jmp
cmc
stos
mov
fildl
pusha
stos
sbb
data16
or
push
mov
sti
adc
add
icebp
sub
pop
in
xchg
mov
adc
add
sbb
push
xlat
ds
push
inc
dec
mov
ret
loope
mov
stos
mov
add
adc
cmpl
out
ret
sbb
inc
push
lcall
shl
push
push
idivb
bnd
or
mov
out
xor
push
ret
or
clc
insl
jle
jmp
jno
cmp
cmp
jb
loopne
mov
inc
shll
sbb
and
ja
add
add
add
cmpsl
movsb
add
push
push
push
fistps
sti
push
sti
lcall
repz
insb
clc
out
call
bound
push
imul
dec
sahf
jnp
jmp
fs
and
jp
call
sub
addb
lea
movsb
fstl
test
inc
add
pusha
mov
movsb
lret
mov
dec
add
add
or
aam
jle
jae
repnz
push
pop
fisttps
test
aas
mov
cmp
dec
and
ret
xchg
add
addl
jo
dec
ret
xchg
pop
ret
inc
jae
inc
and
ret
repnz
loopne
mov
cli
outsl
into
addb
jne
xchg
lea
roll
add
add
add
xchg
push
iret
cltd
jecxz
jg
add
je
cli
jle
out
add
enter
sub
aas
mov
lea
mov
mov
mov
repnz
cld
lods
sarl
sti
add
jecxz
pop
mov
fucomi
mov
sbb
or
loopne
jne
add
mov
in
or
inc
jecxz
xor
sahf
test
and
arpl
xor
jmp
ss
inc
add
push
xor
xchg
push
shl
into
sub
popf
add
mov
ja
aad
inc
cli
fldt
pop
testl
jle
scas
cmp
stos
fbstp
test
add
add
out
hlt
and
jmp
cmc
xchg
outsb
hlt
leave
mov
icebp
in
jbe
xchg
shlb
scas
or
mov
push
mov
inc
and
jb
or
cltd
mov
stc
fdivl
inc
jmp
insb
rep
fst
mov
push
rorb
insb
add
lods
mov
aam
jle
fistps
add
add
dec
jmp
inc
or
sbb
mov
andl
loopne
mov
dec
add
lcall
sbb
dec
jl
jg
jnp
lock
into
adc
jge
sti
jmp
je
outsl
loopne
into
lret
ljmp
popa
push
je
xor
addb
flds
xor
add
in
sub
add
mov
inc
xchg
je
mov
out
aas
popf
jae
sbb
push
in
pop
cmp
push
insl
lcall
in
and
gs
cmpl
rcrb
xchg
ret
xchg
sbb
lds
iret
add
push
addr16
mov
mov
ret
push
ret
add
add
mov
add
cmp
stos
xchg
push
ret
xchg
mov
fsubrl
xor
sbb
popa
inc
lods
data16
jmp
add
bound
lock
cmp
lcall
in
pusha
jns
mov
ljmp
das
jmp
add
fucomip
mov
add
jl
daa
add
dec
stos
add
fwait
mov
lea
lcall
ljmp
cwtl
imul
fldt
pop
fildl
cmpl
push
dec
mov
add
jecxz
test
jns
imul
sbb
push
pop
jno
xchg
jae
fimuls
sbb
sub
js
lea
mov
mov
add
add
xchg
and
jmp
jo
scas
xchg
int3
inc
jmp
pop
sbb
ds
adc
mov
jmp
mov
dec
mov
push
cmp
add
lea
dec
dec
lea
loopne
cmpsl
push
sti
test
push
pop
cmp
in
enter
xor
nop
pop
cmp
and
mov
push
jmp
adc
mov
out
js
push
jmp
adc
cmpsl
jb
lea
loopne
pop
push
sti
pop
push
movsl
mov
dec
pop
call
call
or
cltd
jae
clc
jmp
pop
lret
negl
test
mov
add
repnz
and
sub
add
addb
les
inc
mov
test
repz
or
pop
xchg
sti
mov
or
lods
jmp
nop
gs
xlat
push
bound
sti
push
ret
enter
mov
mov
push
xchg
fiadds
add
xchg
ds
out
nop
adc
xchg
inc
inc
repz
mov
mov
mov
or
xor
fwait
xchg
dec
iret
pop
loop
ljmp
push
stos
push
cmp
add
fstpt
xchg
adc
mov
cmpb
data16
mov
xchg
icebp
iret
lahf
lock
sub
sub
mov
bound
mov
loopne
cmp
add
add
repz
xchg
loop
stos
scas
es
sub
repnz
or
or
shl
scas
mov
in
sub
in
mov
or
push
inc
xor
nop
inc
sbb
cmp
int
mov
xor
sbb
ret
push
xchg
push
push
mov
clc
aam
filds
inc
sbb
bnd
loope
add
inc
sub
aaa
sub
jmp
mov
mov
inc
xor
add
scas
pop
pmulhuw
dec
cmp
pop
insb
stc
loope
sbb
xchg
pop
or
cmp
sbb
cmpsb
push
fildl
dec
push
dec
sti
test
movsb
add
test
add
add
es
shl
addb
jnp
js
fistpll
sbb
ljmp
or
xchg
cmpsl
fildll
pop
cmp
aas
add
rcll
psllq
push
jmp
fs
fstpt
lcall
dec
mov
mov
or
out
mov
stos
std
mov
mov
sbb
sahf
std
mov
add
test
and
mov
test
or
shrl
or
mov
out
mov
aas
mov
mov
enter
out
sbb
sbb
stos
adc
mov
add
mov
jp
mov
add
fildll
lock
fsubrl
adc
add
add
dec
insl
lods
add
fwait
lods
add
fwait
lods
add
insl
lods
add
add
fldt
xor
mov
or
fistl
repz
lods
dec
hlt
xchg
fistps
cmp
sbb
out
dec
mov
in
adc
inc
pushf
sub
or
cmp
jg
mov
cltd
add
mov
push
xchg
cld
mov
aam
dec
stos
lods
mov
jnp
push
mov
xor
ljmp
in
jmp
dec
fiaddl
aad
imul
lock
sti
add
clc
aam
int3
inc
jmp
xchg
cmpsb
cs
mov
add
pusha
shll
shrl
sub
ret
in
sub
fildl
push
stos
jmp
jbe
add
sub
add
push
rorl
xchg
xchg
push
repnz
adc
jg
push
push
dec
sub
decl
imul
aam
mov
jmp
and
add
push
lahf
add
cmpsl
sti
xor
add
add
fidivrs
add
shrl
shrb
je
rcrl
jae
push
repnz
adc
push
loop
adcl
sti
je
loop
add
cmc
std
cli
rolb
mov
cmp
stc
test
mov
dec
adc
pop
out
adc
out
xchg
or
cli
bnd
add
loopne
xchg
hlt
xchg
imul
incl
icebp
push
inc
das
loope
cmp
cmp
or
cs
or
add
in
mov
inc
arpl
jae
xchg
xor
mov
imul
push
mov
jp
adc
xchg
xorb
add
mov
add
fmull
xor
xor
add
in
aaa
iret
sbb
cmp
jmp
add
fstpt
pop
xlat
cwtl
clc
cmp
call
sbb
add
adc
popf
fiadds
mov
mov
ret
mov
add
das
add
add
add
add
aam
icebp
mov
incl
int
stc
clc
jb
sbb
std
sbb
dec
outsb
adc
sub
out
sbb
outsl
dec
punpckhbw
cld
filds
clc
shl
cmp
cltd
out
leave
xchg
shrl
adc
stc
pop
push
push
sar
add
test
push
fsubr
jmp
addr16
in
add
add
pop
push
jge
out
sbb
scas
jg
add
aaa
add
je
movsb
pop
mov
fildl
cmp
pop
mov
sbb
cmc
inc
and
dec
push
xchg
data16
xor
mov
add
mov
cmc
inc
adc
roll
and
enter
in
jmp
and
imul
add
lods
into
xor
bound
nop
mov
add
xor
mov
xchg
hlt
out
cld
add
mov
cmp
add
icebp
std
jae
shrl
dec
jbe
cli
inc
clc
jmp
mov
sbb
pop
mov
and
pushf
mov
jae
rcrb
ss
push
xchg
roll
enter
ss
mov
mov
repnz
cld
inc
xchg
out
pop
les
mov
xchg
inc
addr16
ja
mov
test
lcall
jg
lret
jae
sbb
sub
mov
sub
xor
fldenv
testl
xchg
add
add
push
xor
inc
mov
or
sbb
out
clc
rcrb
aam
popf
fcompl
cmp
sub
repz
push
xchg
inc
ficoms
add
lds
adc
movsl
setg
movsb
nop
idivl
sbb
cmc
mov
imul
inc
mov
neg
aaa
mov
test
add
inc
mov
idivb
cmp
ljmp
stc
add
add
mov
in
mov
cwtl
icebp
jmp
scas
sub
cmp
mov
add
mov
mov
adc
mov
mov
xor
out
jae
inc
cs
int3
cmp
jmp
filds
push
btr
enter
add
mov
pop
cmp
cltd
cmpsb
sub
xchg
shl
cmp
pop
test
or
ret
inc
mov
add
negb
int3
imul
mov
push
fucomip
mov
sub
inc
aam
pop
pop
add
add
cwtl
dec
mov
fiadds
push
cs
test
mov
rorl
cli
mov
add
or
add
mov
das
sbb
jb
xor
push
push
mov
bound
lds
inc
cmpsl
add
mov
and
cli
inc
jb
lea
fadds
test
add
insl
pop
adc
adc
js
mov
mov
test
adc
mov
in
stc
sbb
add
addr16
je
fcmovb
fildll
mov
fistps
insl
add
cmpsl
insl
mov
insl
xchg
repnz
push
xchg
mov
ljmp
dec
and
sub
pop
lahf
pushf
sbbl
insb
mov
add
mov
mov
mov
xchg
pop
xor
cltd
sbb
mov
mov
ljmp
mov
ljmp
mov
add
push
pop
jl
push
es
test
test
fimuls
jge
movsl
clc
jno
gs
inc
movsl
insl
fnsave
add
lods
sarb
add
lock
mov
orl
inc
movsl
clc
sbb
push
pop
mov
movsl
push
je
or
sahf
inc
adc
popa
inc
mov
sbb
movsl
or
jle
mov
imull
pop
dec
icebp
es
push
rcr
mov
stc
add
jbe
fwait
pop
sti
pop
das
test
loopne
dec
mov
add
test
in
insb
cmpsl
fildl
push
jae
das
lea
push
mov
jg
lods
outsb
test
mov
jle
cwtl
pop
sti
push
mov
mov
call
push
in
push
clc
jmp
push
fisubrl
push
fildl
mov
call
cmp
lods
fdivp
cmpl
test
sarl
add
fwait
out
daa
fstpt
or
repz
mov
and
and
cli
mov
lds
cmp
fisttpll
sub
pop
mov
push
xchg
jge
xchg
lods
out
scas
hlt
std
gs
mov
push
xchg
cli
call
je
or
add
mov
inc
jge
add
add
inc
add
mov
enter
mov
mov
jle
insl
fistl
hlt
lahf
push
and
fdivl
xchg
arpl
dec
inc
mov
push
cmp
cmp
ljmp
fisttpl
out
pop
lret
cmp
add
cmpsb
jbe
pop
pop
test
or
adc
cld
ret
jb
out
add
add
ljmp
popf
jae
cmp
arpl
add
xorl
data16
and
andl
pop
andl
jne
and
addb
sbb
and
pop
mov
push
pop
hlt
mov
stc
cmp
cwtl
sub
aas
es
fcoml
sbb
add
mov
cli
aas
mov
cmpl
pop
inc
lcall
push
ss
test
aad
add
push
push
pop
rcr
add
inc
in
sub
mov
add
shll
xchg
or
mov
xchg
or
outsl
xchg
adc
jo
cmp
pop
xchg
adc
je
hlt
add
add
fadds
xor
jl
stos
jmp
imul
nop
cmpsb
lahf
clc
ljmp
add
fdiv
pop
mov
imul
hlt
cmpsl
rcrl
mov
adc
xchg
dec
sti
fbld
decl
hlt
inc
and
shrb
inc
jl
mov
pop
aad
mov
add
inc
inc
int
shl
jns
mov
cmp
repz
lock
movsb
xchg
repz
lock
xchg
mov
out
jle
lock
sti
jg
xlat
incb
mov
movsl
push
ds
sbb
call
pusha
ficoml
inc
int
enter
out
mov
or
test
clc
mov
add
add
test
testl
addb
ss
pop
sahf
add
insl
and
sub
imul
pusha
cmpb
out
cld
fsubr
add
and
shll
cwtl
fcomp
pop
in
add
fwait
xlat
xchg
add
pop
pop
add
fistl
mov
xor
loope
fucomi
mov
add
stc
cmpsl
pop
inc
pop
outsb
add
xchg
fucomp
add
mov
aam
xor
roll
fisubrl
jge
mov
mov
fiadds
add
mov
incb
ljmp
lods
xchg
out
inc
sbb
mov
add
mov
inc
clc
ss
cli
cltd
add
add
push
mov
sbb
add
xor
pop
cli
jmp
mov
fisttps
lretw
jmp
dec
setle
call
clc
into
sub
loope,pn
data16
test
jmp
add
push
jmp
add
loope
loopne
cmpsl
fcmovnu
add
arpl
add
addb
clc
add
add
in
add
xchg
mov
add
sbb
xor
sbb
pop
sbbb
test
mov
test
add
dec
fadds
testl
lahf
fdivs
push
fildl
pop
mov
clc
jno
or
ret
add
add
mov
ret
pop
add
add
lock
ss
addl
pop
mov
xlat
stos
add
mov
lret
std
lock
mov
subb
ja
jle
mov
cmp
je
stc
rolb
jnp
adc
stos
inc
or
inc
cmp
incl
shl
sbb
inc
or
vandps
jg
repnz
add
xor
mov
jl
push
lahf
roll
fstpt
ret
fucomi
xchg
out
mov
in
mov
addb
fs
pop
inc
and
divb
adc
inc
fwait
repz
or
sub
jl
pop
lods
imul
pop
inc
jmp
ljmp
add
repnz
xchg
xchg
insl
xchg
sub
inc
repnz
add
outsb
fucom
das
xor
push
int3
pop
outsb
sarl
insl
fildll
mov
mov
xor
mov
xchg
clc
sahf
mov
jo
dec
sub
pusha
add
daa
insb
add
pop
sbbl
and
mov
in
in
fadd
orl
add
add
mov
cmp
cli
jmp
out
sub
xchg
es
mov
jmp
nop
gs
cmp
mov
add
arpl
mov
fs
jmp
xlat
and
pop
mov
stos
jg
cmpsl
cld
and
scas
xor
push
mov
adc
mov
add
test
jne
int
jmp
lret
test
loope
push
call
popa
fwait
cld
push
pop
sbb
orl
add
sbbb
fs
adc
inc
add
orl
incl
jl
adc
shl
mov
shr
pop
or
add
add
lods
mov
cmp
sahf
fdivrs
testl
repz
inc
add
out
mov
test
cmp
push
shrl
jnp
std
sbb
jns
mov
insb
jl
leave
jp
clc
test
das
sub
lret
faddl
pushw
test
add
fistpl
ds
out
ret
fwait
outsb
push
jmp
cmc
pop
stos
out
mov
pop
in
xor
movsb
lods
cmp
mov
fsubp
cmpsl
push
cmp
inc
jg
pop
mov
les
xchg
negb
adc
push
stos
out
lret
sub
out
out
sbb
repnz
js
xchg
aad
mov
jmp
inc
cltd
add
add
add
and
lcall
adc
ja
fcoml
sar
leave
sbb
add
cmpl
insl
mov
inc
jmp
scas
sbb
rcl
mov
mov
mov
xchg
push
cmpsb
int3
out
sub
xor
bound
lds
or
push
or
mov
push
in
sbb
add
add
adc
cmc
mov
xchg
insl
or
push
xchg
add
cld
xchg
jg
jl
dec
je
mov
pop
fsubrl
dec
xor
movsb
or
adc
pushf
clc
ljmp
je
out
jmp
subl
mov
repz
jnp
pop
hlt
xchg
ss
call
push
or
call
hlt
xlat
xlat
cld
adc
add
add
in
inc
add
fs
pop
data16
mov
movsb
jg
add
out
or
out
mov
dec
fs
push
je
ret
clc
ljmp
popa
jle
sbb
add
push
mov
or
inc
pushl
aaa
and
stc
mov
ljmp
add
dec
xor
push
cmc
pushf
mov
cltd
loopne
xchg
add
pop
lea
jg
test
and
inc
jmp
xor
mov
test
inc
vpextrw
lds
lds
xor
sbb
das
push
mov
rcrb
xor
jg
fsubr
add
les
fmulp
ret
add
loope
pcmpeqw
mov
imul
add
arpl
fiaddl
sub
fucomip
shlb
fldcw
shr
sahf
mov
add
xchg
out
fsubs
and
xor
insl
pop
mov
aam
xchg
cmp
mov
imul
add
out
cmp
add
ficomps
inc
jmp
data16
push
add
add
rcr
xchg
add
mov
sbb
xor
rolb
clc
xlat
inc
xchg
mov
push
push
testl
mov
jne
mov
clc
pop
and
push
sbb
imul
pop
add
fucomi
pop
out
nop
clc
push
loopne
test
in
mov
aad
push
addl
add
mov
arpl
and
push
fmull
mov
dec
cmp
xor
call
loop
add
les
js
or
mov
lea
sub
inc
xor
jl
push
icebp
push
or
sub
mov
inc
sub
mov
incl
add
add
repnz
add
push
mov
sbbb
mov
push
loope
xchg
or
or
jne
out
mov
mov
roll
adc
in
mov
push
or
jge
popl
mov
push
stos
cli
sbbb
clc
mov
out
add
sbb
cmp
bound
imul
or
push
xchg
je
dec
dec
shlb
js
push
nop
sub
jg
je
pop
outsb
fistl
pop
pop
not
jle
jg
pop
popa
inc
jg
pop
mov
out
fisubl
or
mov
ljmp
outsb
adc
fisubrs
lds
pop
int
mov
pop
push
inc
fwait
mov
cmp
popf
outsl
inc
and
pop
jg
cmp
pop
les
fmulp
cmp
repz
adc
push
sub
and
jl
andl
into
mov
in
jno
mov
and
xor
push
pop
sub
aad
nop
mov
jmp
faddl
jmp
add
add
mov
stos
xchg
pop
dec
pop
push
mov
mov
xchg
sub
mov
loop
xchg
push
aad
pushf
lods
add
mov
add
pop
jle
push
adc
clc
mul
pop
push
add
clc
out
pop
or
sbb
push
bound
lahf
clc
imul
cli
sti
pop
add
add
popa
stc
sub
adc
push
or
testl
lahf
loope
clc
aam
call
aad
or
adc
cld
inc
test
ds
rcrl
or
xchg
or
popa
test
mov
js
pop
push
jo
dec
je
mov
dec
add
xchg
leave
ret
addb
sti
je
add
rolb
adc
lcall
xor
mov
add
mov
push
inc
arpl
movsl
or
fincstp
inc
mov
cmpb
add
cmpsb
add
jge
xor
in
pop
addr16
mov
mov
inc
int
jnp
or
dec
cmp
cli
mov
ds
add
or
xchg
fxch
out
fisubs
inc
mov
push
ds
add
fildl
shl
jae
xor
fildl
or
add
fwait
pop
shll
insl
cmp
jns
fistps
cld
cld
sbb
add
xchg
jg
ds
out
inc
xchg
fwait
bswap
jae
lods
or
or
add
pop
inc
fwait
into
sub
fisubl
in
mov
sbb
jae
pop
xchg
fiadds
inc
sbb
add
mov
jmp
decb
fistps
andl
jb
in
test
fldt
xchg
std
sbb
jns
in
add
leave
add
add
and
jle
ljmp
sub
in
shlb
add
inc
leave
jmp
or
jne
cmp
pop
adc
jl
pop
bound
imul
push
push
icebp
out
lahf
pop
jmp
pop
in
xlat
and
andb
rolb
sub
add
and
or
add
add
jb
add
add
js
hlt
fmuls
mov
add
cmp
stc
incl
mov
call
add
clc
mov
pop
repnz
push
and
lcall
icebp
or
sbb
add
or
add
js
add
fiaddl
je
aad
sldt
add
icebp
out
fldt
scas
mov
or
jmp
pop
pop
cli
cmp
shr
xor
mov
or
dec
inc
mov
or
add
mov
cmc
notb
std
mov
mov
pop
push
mov
mov
add
mov
in
lret
ss
femms
sbb
mov
jns
clc
mov
fmull
sbb
pop
ljmp
push
pop
add
jmp
ljmp
push
and
add
fcmovnb
adc
pop
push
mov
jecxz
aam
inc
mov
pop
and
popa
lock
pop
jmp
imul
notb
xor
out
repz
add
add
push
xchg
test
iret
gs
mov
mov
push
mov
push
inc
jnp
addb
and
or
faddl
jmp
stc
xchg
sbb
jmp
cmp
rcll
pusha
or
test
mov
inc
mov
mov
pop
out
mov
stc
cmp
add
adc
lea
mov
test
xchg
or
incl
inc
in
add
mov
jp
outsl
push
mov
ds
cmp
jmp
xor
addl
movsl
and
jmp
sbb
add
cmovb
mov
add
jmp
je
add
push
fldl
lea
inc
mov
add
jg
push
fmul
push
or
add
sti
mov
and
cwtl
mov
out
jg
lcall
sub
call
addl
sub
dec
pop
mov
add
add
lock
daa
icebp
xorl
jb
add
incl
add
mov
addr16
dec
gs
insb
cli
push
ret
xor
or
jbe
int
ret
xor
xchg
cmpsb
jne
mov
ret
and
xchg
jb
dec
sub
aas
or
xor
std
shr
loop
xchg
rolb
mov
add
popf
pop
ds
lock
int
pop
repz
add
jae
pop
mov
arpl
lcall
pop
push
jae
movsw
mov
xchg
push
mov
jecxz
jmp
clc
roll
cld
cwtl
fisttpl
mull
jmp
xchg
int3
ret
xchg
fistps
ret
lock
scas
shlb
push
sub
inc
sbb
mov
push
sub
cmp
jnp
add
add
out
sub
mov
popf
out
sbb
cmp
add
out
sub
outsb
jmp
push
mov
push
and
testb
clc
inc
jns
out
stos
mov
sbb
cld
jne
xchg
push
inc
jmp
jle
push
xchg
push
loopne
push
jns
mov
leave
out
in
push
out
out
sub
add
mov
clc
faddl
inc
jmp
add
bound
or
adc
ds
xchg
std
jge
add
or
stc
push
int
adc
and
jp
or
mov
pop
les
hlt
sti
je
mov
adc
cld
fucom
call
pop
lock
pop
or
call
adc
add
add
hlt
inc
fs
pop
jmp
mov
add
pop
imul
jne
dec
push
mov
out
mov
add
pop
adc
stc
fisttps
adc
jae
jle
aas
mov
xor
push
add
push
jb
fdivs
aam
inc
and
flds
sti
lcall
add
add
mov
in
jae
xor
test
out
aas
mov
push
ds
add
ss
mov
and
mov
mov
ret
mov
push
cli
xchg
fdivrs
mov
sub
adc
je
jnp
push
add
pop
jmp
add
add
out
or
add
pop
jmp
adc
iret
sti
ret
mov
pop
sub
outsl
or
ljmp
adc
add
xchg
stos
add
fistl
xor
jp
xchg
jmp
test
jnp
sbb
out
xchg
ljmp
dec
ljmp
adcl
add
add
jnp
insl
jns
jge
rcr
adc
jmp
jmp
cmp
inc
mov
ja
out
pop
add
arpl
jmp
add
push
jo
sbb
cmpl
sbb
in
xchg
cmpsl
adc
inc
stc
fucomp
add
loope
popf
testl
push
xchg
add
add
imul
popf
arpl
or
mov
or
cld
decl
sbb
push
sub
adc
insl
or
xchg
add
sarl
inc
in
les
popf
dec
mov
cmp
fcmovnu
fwait
and
fwait
popa
add
dec
call
or
fisubrs
add
add
mov
int
lret
xor
adc
pop
test
adc
sub
add
sbb
mov
addl
inc
gs
cmp
in
cmp
mov
addl
orl
dec
addb
aas
addb
add
inc
inc
and
xchg
and
sub
add
push
sub
or
and
mov
addb
loope
and
inc
add
mov
sub
aad
pop
daa
js
sub
js
pop
enter
xchg
mov
pop
arpl
js
nop
jle
and
popf
pop
add
add
sti
mov
out
inc
fwait
out
mov
test
mov
add
mov
xor
push
fdivs
ja
gs
adc
aaa
xchg
ficomps
add
fsubr
add
cs
test
mov
jbe
daa
in
bound
cmp
jb
pusha
fimuls
add
add
pop
sbb
push
fbld
xor
sbb
dec
nop
jno
lret
sbb
jne
jno
cmpsb
or
int
or
hlt
into
jno
int
sbb
mov
mov
inc
xchg
dec
inc
cltd
push
lcall
push
jmp
mov
jne
adc
into
loop
clc
bound
add
add
push
push
jne
and
lods
jecxz
add
and
adc
add
insl
push
scas
xchg
and
cltd
pop
outsb
or
outsl
filds
ss
xchg
sahf
and
aam
jne
test
mov
enter
dec
or
pushl
pop
jne
shlb
and
add
in
pop
js
mov
je
aam
or
mov
mov
fisttps
add
add
xor
stc
pop
cld
mov
mov
and
call
mov
add
pop
mov
aas
and
inc
mov
inc
cltd
addb
and
pop
cli
adc
ret
mov
inc
mov
cmpl
xor
dec
pop
push
inc
idivl
add
add
rorl
jae
xor
mov
fisubl
mov
cli
xchg
cmp
repz
pushl
fistpl
shrb
iret
xchg
pusha
pop
pop
dec
add
pop
add
ret
xchg
inc
inc
fucomi
add
fistps
jmp
imul
fisttpl
cmp
lods
arpl
gs
pop
add
add
pop
stos
iret
shrl
push
out
lcall
cmc
out
ret
sbb
pop
push
lret
jg
mov
js
and
add
cwtl
mov
sbb
dec
lcall
push
jge
leave
mov
jbe
mov
add
mov
jge
jb
xor
je,pt
pushf
mov
xlat
addl
add
add
add
repz
mov
loope
fbstp
out
pop
mov
retw
cmp
fwait
add
cmpsl
arpl
inc
js
and
call
loopne
xchg
add
mov
rorb
cmp
sbb
push
hlt
out
test
mov
add
movsl
mov
xor
add
movsb
xor
ret
push
insb
out
add
loopne
mov
pop
ficoms
pop
adc
shlb
cwtl
hlt
push
fiadds
je
sahf
add
scas
push
addr16
fldcw
in
in
add
pop
cmp
les
sub
push
cwtl
hlt
cmpsl
xlat
jmp
test
sbb
movsb
xchg
or
add
pushf
fldl
call
fdivs
mov
push
jns
inc
fldenv
add
mov
mov
or
pop
test
ret
xchg
std
dec
push
mov
jb
cli
ds
je
add
lds
sbb
xchg
insb
mov
xchg
sub
mov
loop
arpl
add
add
jmp
mov
jb
mov
fnstenv
std
dec
mov
addb
mov
ljmp
loopne
dec
mov
addb
ljmp
jo
or
sub
push
sub
lret
or
adc
push
sub
cmp
ljmp
or
mov
add
push
repnz
xlat
push
xchg
mov
out
fiaddl
cmp
fisttps
fucomi
add
xlat
fisttps
mov
lcall
pushf
outsl
fcmovnbe
pushf
pop
adc
outsb
mov
dec
jmp
or
push
stc
mov
outsb
mov
cs
add
out
pop
rolb
add
push
loop
out
outsb
mov
or
stc
add
mov
pop
sahf
fistl
out
adc
popf
aad
outsb
push
ljmp
ret
stc
aam
fldl
adc
or
pop
xchg
pop
std
ljmp
push
add
xchg
ficoml
pop
daa
push
call
mov
add
cwtl
fiaddl
push
aas
loopne
xor
cld
test
mov
push
mov
fidivrl
js
cld
je
pop
jne
sub
test
xor
jle
test
push
mov
movsl
jmp
pop
pop
push
repz
adc
xlat
pop
ret
jmp
test
aaa
push
lret
dec
movsb
hlt
xchg
xlat
push
fabs
or
push
jne
mov
add
rcrb
add
rorb
cli
stos
out
or
std
clc
add
jge
add
push
cmpsb
cli
enter
mov
sahf
out
mov
int
adc
hlt
cli
enter
vmovntdq
lret
inc
add
sub
fidivrl
bound
jbe
mov
jae
fimull
add
mul
add
add
xchg
push
cli
inc
xor
add
ss
mov
mov
dec
fisttps
in
or
cmc
in
sti
cmpsl
sar
loop
popa
leave
mov
sub
rclb
fadd
adc
xchg
out
test
sbb
test
add
add
mov
jge
mov
popa
fldenv
mov
add
xlat
neg
ret
push
daa
insb
stos
push
nop
mov
sbb
inc
cmpsb
fldt
fmul
insb
sub
in
out
scas
aad
movaps
in
adc
sub
inc
insl
outsb
or
sti
aam
jmp
out
out
or
push
push
movsb
clc
fiaddl
xchg
add
add
jbe
lahf
jecxz
or
jb
xlat
clc
xchg
pop
data16
icebp
add
outsb
stc
ja
outsb
icebp
iret
push
lods
adc
je
pop
out
pop
dec
xorl
in
lea
rclb
dec
cmp
outsl
addr16
pop
rcr
mov
loopne
jne
mov
mov
sar
jne
push
call
sub
add
mov
sarb
xchg
sbb
xchg
scas
or
daa
fisubrs
or
ljmp
or
cld
pop
idiv
fwait
call
dec
pop
xchg
imul
rolb
out
inc
adc
roll
sbb
inc
and
daa
je
sahf
ja
mov
nop
jge
repnz
push
sbb
or
cmp
add
add
shlb
xchg
dec
add
jg
cmc
jb
rorb
xor
sti
test
sub
jae
xor
aad
inc
insl
mov
testb
movsb
jne
lock
data16
xchg
sti
push
ss
dec
and
inc
mov
inc
ss
add
jle
push
add
addr16
pushl
jb
icebp
aad
paddb
ss
add
add
fstpt
mov
or
push
xor
cld
ret
repnz
xor
out
and
xor
lret
popa
scas
scas
push
inc
in
xor
mov
es
jo
ljmp
fdivl
mov
icebp
repnz
push
stc
mov
stos
add
pop
add
icebp
fidivrl
iret
inc
stos
mov
dec
int3
ret
adc
add
add
pop
jnp
mov
mov
fwait
jmp
in
ret
add
inc
sub
xchg
iret
cmc
mov
sub
fldcw
fldt
aas
jae
cs
cmp
repnz
push
xchg
jo
clc
sahf
cltd
cmpsb
cmc
popf
jg
jmp
aaa
xchg
insb
mov
and
jne
loopnew
call
fucomi
stos
mov
add
inc
pop
in
xor
add
push
ds
push
jle
or
loope
daa
or
addr16
jmp
xchg
aas
add
and
jo
fwait
adc
jns
stc
cmpb
mov
or
test
fs
ljmp
outsb
push
stos
pop
inc
adc
dec
xchg
mov
pop
pushf
clc
push
inc
outsb
add
aam
jmp
xor
pop
lock
add
add
and
xor
je
pop
jne
insb
pop
push
push
cmpsl
xor
adc
sbbl
sub
js
mov
aad
pop
sub
lock
test
inc
je
inc
inc
push
adc
je
dec
push
enter
add
mov
jae
add
push
ds
mov
roll
sub
jb
adc
mov
cmp
aas
mov
jb
lds
jae
or
pop
ret
mov
int
xchg
subl
add
mov
ljmp
mov
add
push
jo
add
pusha
sub
ds
ljmp
push
jo
add
scas
hlt
stos
fistl
faddp
push
test
fmulp
push
xchg
fisttpl
mov
mov
jecxz
cmpsl
scas
mov
xor
mov
cmp
push
sbb
scas
mov
fstl
shl
ret
add
add
fs
clc
insb
stc
call
adc
xchg
lds
adc
or
scas
fscale
sti
arpl
adc
incb
out
sub
shll
cmc
sub
roll
push
jns
inc
jmp
arpl
inc
adc
in
imul
jmp
add
add
add
xchg
push
jbe
pop
lea
adc
pushf
cli
push
lret
pusha
loopne
lcall
lea
sbb
adc
dec
push
sub
test
xchg
or
or
push
sarb
dec
leave
daa
xor
in
nop
fiadds
add
sub
cmp
add
add
or
add
mov
sbb
xlat
cld
into
mov
cmp
mov
push
push
jb
clc
adc
push
pushl
sbb
cmpsb
mov
sub
bound
insl
add
mov
lods
out
out
cli
cmpsl
xor
add
sbb
outsl
inc
add
add
jae
inc
lea
mov
nop
xor
outsb
cli
rcrb
movsl
out
out
cli
daa
mov
push
sbb
dec
mov
mov
inc
mov
jo
adc
fucomi
add
pop
daa
mov
fucomi
add
sub
mov
lret
idivb
fcmovnbe
insl
mov
orl
jp
fimuls
mov
xchg
test
cmp
push
stos
sbb
pop
jns
rdpmc
pop
daa
dec
movl
sub
or
dec
pusha
cmc
sbb
xorb
jp
or
je,pn
nop
xchg
pusha
xchg
add
fwait
add
in
adc
jl
push
je
add
jl
push
jb
js
lcall
imul
pop
jb
je
xchg
adc
pop
jp
imul
or
insb
in
cmpsl
pop
add
clc
out
in
xchg
ljmp
cmpsl
mov
pop
mov
fildl
jmp
jge
push
adc
add
push
xchg
clc
mov
sbb
add
pop
pop
sbb
jnp
mov
xor
jge
adc
cld
push
dec
fadds
add
add
rorb
ja
sbb
add
fwait
insb
push
dec
pop
inc
lea
sub
add
jmp
dec
jne
adc
push
pop
addr16
jo
daa
das
jg
add
add
pop
or
fimull
add
insl
in
ss
call
sub
or
in
add
mov
mov
dec
lcall
push
fsub
xchg
jg
out
lcall
cmp
add
ret
in
push
test
ja
mov
out
shl
fcompl
nop
add
add
int
dec
dec
push
sub
and
and
mov
or
lret
push
jae
dec
mov
mov
ss
and
icebp
ret
dec
jae
cmp
fucomi
add
loopne
pushl
int
mov
xlat
jg
fsubr
add
add
inc
sub
add
pop
ljmp
add
mov
or
inc
push
inc
inc
push
sub
in
dec
movsl
pop
orl
or
cmp
inc
pop
je
sbb
mov
into
fs
sbb
mov
xlat
inc
ds
push
sarl
out
pop
jnp
fiaddl
mov
loope
fildl
cmpsb
loope
pop
sahf
fnstsw
adc
add
add
notb
xor
pop
or
inc
pop
or
cmpsb
ds
into
dec
popa
in
cmc
jmp
cmc
push
addl
jmp
cld
addr16
mov
pop
imulb
mov
pop
push
push
mov
or
push
mov
popa
clc
cmp
jmp
incl
add
popa
sbb
add
test
in
push
decb
mov
fs
push
or
fstl
aam
orb
rorb
or
fcos
or
je
push
or
in
call
jmp
jmp
adc
les
jmp
mov
popf
sti
pop
dec
adc
or
mov
add
or
loopne
leave
fwait
sti
xor
dec
mov
ret
xor
inc
add
push
or
out
mov
mov
or
mov
sub
jge
into
gs
dec
inc
loope
int3
nop
std
inc
mov
and
inc
cltd
call
inc
adc
push
incl
mov
out
xchg
push
fsub
iret
ret
add
add
loopne
inc
mov
pop
cmp
loopne
dec
and
inc
mov
and
and
insl
mov
lret
add
pop
ljmp
or
add
pop
scas
mov
fisubs
lods
inc
cmpsl
pop
stos
mov
pushw
call
fdivp
jno
fdivrp
sbbb
cmp
add
xor
adc
cmp
sahf
out
lods
sysenter
fistpl
or
inc
mov
shll
lahf
push
shll
pop
aas
insb
mov
pop
lds
or
mov
movsb
dec
push
clc
inc
or
aad
inc
jge
mov
pop
sub
in
insb
push
int
test
sub
add
adc
pop
push
out
push
rcr
mov
xchg
ret
mov
ds
cmp
into
fildl
bound
clc
add
pop
push
orl
cmp
push
not
ret
jmp
ljmp
add
sbb
add
xor
and
pop
sub
test
cmp
add
add
and
add
repnz
push
movsb
fisttps
or
cmp
mov
and
adc
leave
ljmp
mov
push
push
nop
imul
outsb
sbb
and
push
sub
jne
push
lea
imul
inc
add
clc
jmp
and
pop
out
add
sarb
add
add
push
aaa
je
lret
adc
movl
cmp
dec
cli
fcmovb
mov
xchg
rorl
mov
fcmove
jg
add
ss
xor
ds
jmp
sbb
xor
call
mulb
xchg
push
xchg
lods
xor
add
push
xor
add
mov
cmp
mov
push
or
hlt
int
out
sub
out
jmp
adc
mov
test
inc
fiadds
push
mov
jmp
inc
dec
fldenv
push
aad
cmp
pusha
dec
add
sbb
mov
mov
push
cmp
out
sti
ret
xchg
push
or
cmp
into
shll
out
mov
push
mov
push
push
aad
mov
arpl
bound
inc
popa
cmp
cmp
jmp
int
or
faddl
jmp
adc
stos
mov
movsb
mov
mov
mov
inc
add
mov
sbb
push
roll
add
fcmove
clc
mov
inc
lcall
jg
xor
dec
cwtl
sbb
leave
mov
mov
and
rcrl
imulb
xchg
or
push
clc
jmp
mov
pop
stc
add
push
sbb
jne
xor
jne
add
loopne
push
adc
push
mov
adc
hlt
fs
and
add
or
loopne
or
cld
mov
xor
cmp
test
in
add
pop
xchg
and
cld
test
sti
lock
cs
loopne
sbb
rcll
jne
je
add
filds
call
pop
mov
or
je
ret
je
push
jne
rclb
and
daa
loopne
mov
pushf
inc
roll
cmp
cmp
rolb
add
or
mov
fucom
adc
sbb
daa
and
mov
ret
jns
xor
xchg
mov
es
testl
cmpsl
or
mov
inc
sub
das
cmpl
clc
dec
sti
jl
inc
mov
pop
mov
cmp
inc
popf
jmp
sub
add
add
fisttpl
lea
in
pop
inc
into
frstor
jg
decb
mov
aaa
lds
push
aad
mov
div
fdivs
pop
jno
testb
iret
mov
cmp
mov
cmp
out
mov
fisubrs
fistl
lcall
lahf
sahf
out
stos
sahf
add
add
fcmovnb
outsl
add
add
mov
test
scas
cmp
fucompp
add
fnstsw
adc
lock
fsubrl
aas
push
push
adc
fimull
mov
push
fst
dec
daa
aad
sbb
push
pusha
cld
in
dec
cmpsb
push
clc
adc
pop
inc
in
pop
jmp
pusha
cld
fdivrs
add
add
xor
mov
push
clc
idivb
ret
and
mov
inc
push
sbb
push
push
jo
loopne
sub
mov
imul
or
sbb
cld
or
decl
pop
lock
cmp
orl
jne
pop
jne
sbb
xchg
daa
pusha
add
cmp
add
add
in
int
or
mov
addb
inc
jmp
cld
jmp
and
mov
test
imul
cld
mov
je
insl
ja
xchg
jg
push
push
outsb
or
jno
mov
and
xor
mov
xchg
sub
and
adc
add
add
dec
add
add
mov
sub
push
xor
or
cmp
xor
sbb
mov
mov
out
out
adc
cli
mov
push
int
dec
sub
and
test
mov
mov
and
inc
shl
push
mov
mov
in
xchg
xor
dec
xchg
bound
mov
add
out
lret
dec
jg
ds
jg
fldl2e
add
cwtl
loop
fisttpll
xor
inc
adc
inc
xor
fsubrl
add
fwait
ljmp
inc
jmp
add
pop
jmp
fistpll
adc
and
inc
lahf
push
mov
add
add
pushf
insl
mov
fdivp
add
sbb
insl
fistpll
cltd
sbb
out
mov
cmc
jmp
jle
stc
xor
push
adc
rcll
fs
fnstsw
xor
imul
mov
inc
or
sub
jg
push
leave
push
cs
lret
fwait
add
add
add
push
rcrb
mov
je
stc
and
pop
adc
test
jmp
push
or
or
pop
es
mov
cld
out
jno
sub
dec
push
int3
ret
push
dec
xchg
add
push
push
mov
inc
push
xor
adc
in
and
push
fnstcw
push
fadds
mov
push
loopne
cmc
or
cmp
add
xlat
xchg
push
jl
icebp
jmp
mov
das
int
mov
aas
adc
call
or
sub
cmc
pushl
cmc
inc
in
jne
mov
or
aas
mov
sub
xor
arpl
xchg
mov
sbb
imul
and
mov
sub
xor
dec
add
add
xor
dec
jbe
xchg
loopne
mov
cmp
out
cltd
mov
mov
andb
xor
jb
sbb
mov
or
unpckhps
mov
adc
and
jae
jmp
and
dec
jge
jge,pt
jmp
add
fwait
cmp
mov
mov
sub
add
inc
shl
sbb
push
or
xor
dec
roll
jae
sbb
mov
fcoml
loopne
pop
mov
sahf
out
push
cs
ljmp
lock
adc
fistpl
ficomps
pop
jge
out
shlb
daa
cltd
sbb
push
sbb
mov
xor
sbb
jge
stos
xor
add
add
into
adc
add
in
or
imul
imul
cmp
inc
outsb
icebp
in
out
insl
fdivrl
mov
push
outsb
cmc
or
or
loope
adc
sbb
push
clc
cld
lds
inc
jmp
imul
out
clc
dec
cmp
out
add
insl
daa
rolb
jmp
add
add
inc
outsb
in
iret
or
lret
push
add
insl
or
and
push
jno
adc
mov
insl
or
clc
sti
pop
daa
clc
sti
jne
sub
and
mov
adc
test
divl
jo
loopne
mov
subl
and
pop
dec
insl
adc
add
inc
xlat
xchg
or
push
faddl
jmp
stc
insl
or
in
iret
sar
cmp
insl
and
nop
and
sub
imul
repnz
loopne
ljmp
cli
mov
sbb
mov
mov
test
add
inc
int
stos
or
je,pn
fwait
sti
lcall
lea
sbb
out
leave
leave
or
add
jp
add
je
in
je
lds
mov
inc
pusha
sarl
push
mov
idivl
mov
sar
sub
cs
shlb
dec
mov
aad
inc
in
ror
fwait
ljmp
rcl
add
rcr
rcr
and
movl
ljmp
add
mov
add
jecxz
mov
mov
fwait
ljmp
push
jle
dec
sarl
lahf
jecxz
lods
ja
ret
sbb
inc
addr16
cmpsb
pop
sahf
out
xor
js
xlat
inc
mov
inc
mov
es
rcll
rolb
loope
out
popf
aam
inc
push
jb
cmpsl
ret
cmc
mov
cli
add
cltd
out
test
and
pop
shll
mov
ss
inc
loopne
lret
inc
clc
push
inc
insl
in
imul
aam
aam
jmp
test
in
shrb
insl
rorb
cmp
aad
add
mov
push
push
imul
movsb
es
outsb
add
insl
or
xor
call
push
push
push
mov
in
jg
xor
push
mov
pop
mov
je
les
push
lods
je
sub
adc
mov
insl
adc
fists
mov
cmp
lcall
lock
icebp
insl
adc
ljmp
add
add
out
add
jecxz
xchg
mov
call
aam
inc
mov
das
lock
or
cli
or
and
inc
lcall
mov
sub
cmp
mov
jae
imul
jo
push
lret
push
jge
ja
lds
jmp
sub
stos
test
add
add
add
or
ja
lods
mov
add
adc
mov
sub
sti
loop
cli
cwtl
or
inc
mov
fcompl
jp
icebp
jle
mul
sbb
inc
sub
stc
data16
push
pop
addb
dec
enter
div
sbb
pop
sub
clc
outsb
adc
lods
jle
pop
jge
mov
out
mov
add
lods
xor
inc
cs
mov
xor
cmpsl
inc
and
ret
lcall
jge
shlb
or
imul
testb
mov
add
enter
stos
add
movb
jge
add
mov
cmp
push
fdivs
inc
inc
add
in
adc
add
ljmp
adc
adcb
loop
jmp
mov
push
xor
popf
sbb
sub
mov
je
or
retw
mov
enter
insl
sbb
enter
fiaddl
jmp
xchg
insl
add
dec
jp
aad
jge
push
add
add
fnstsw
xchg
cmc
sub
adc
jl
jmp
clc
jmp
cmp
or
fwait
add
aam
loopne
pop
popf
fistps
incl
js
roll
add
cmpsl
dec
mov
rcl
or
jmp
out
xor
xor
leave
cs
push
add
add
or
mov
ljmp
mov
leave
cmp
mov
incl
mov
add
or
pop
adc
and
xor
pusha
push
ja
cmc
leave
lret
test
cli
ss
clc
hlt
jle
rorl
gs
xor
ret
bound
pop
xor
cmpl
stc
clc
sbb
add
xor
dec
lock
cli
jmp
inc
push
je
roll
into
stos
fisttpl
add
stos
mov
dec
dec
xchg
fistl
daa
mov
fcmovnb
inc
pop
stos
adc
fstp
adc
fidivs
fcmovnu
jb
rcr
jno
mov
stos
add
fdivs
int
call
test
add
add
idivb
dec
jno
into
push
xchg
es
cmp
push
aad
mov
ljmp
pop
pop
mov
cli
mov
and
cli
push
add
mov
xor
push
outsb
mov
jle
outsb
popf
cwtl
out
hlt
jle
addl
inc
xor
or
push
mov
jge
in
jmp
add
fildl
lret
push
arpl
sub
mov
mov
mov
inc
jmp
mov
lods
clc
jl
mov
out
lret
mov
sub
inc
add
push
ds
mov
clc
or
push
je
cmp
mov
sbb
mov
popa
adc
arpl
push
add
add
sub
xlat
rcrl
sti
je
adc
mov
cld
je
fistpl
in
fadds
adc
or
test
stc
adc
mov
mov
cmp
push
dec
or
push
imul
lcall
xlat
insl
push
mov
or
aas
add
add
mov
push
adc
mov
lret
push
adc
xor
cmp
insl
add
xor
mov
add
ss
test
inc
adc
push
jg
mov
cmp
or
cmp
add
mov
mov
mov
jmp
and
xchg
and
cmp
inc
pop
inc
mov
add
xchg
popl
std
mov
cmp
mov
inc
flds
cmp
inc
jg
pop
je
fisttpl
cld
mov
gs
xlat
das
and
out
aam
cmpb
lret
pop
inc
leave
int3
arpl
mov
int3
sbb
ret
dec
pusha
in
mov
lock
adc
xchg
fadd
push
mov
add
add
mov
sarb
enter
pmulhw
and
mov
xchg
ret
cmp
add
push
push
shrb
out
scas
call
lea
cmpsb
inc
andl
addr16
add
ljmp
xchg
test
push
cmp
test
mov
add
xor
pushf
dec
mov
add
idivl
inc
xor
add
int3
push
es
mov
mov
mov
mov
in
pop
aad
add
clc
push
cmp
je
mov
call
push
jmp
fldl
mov
je
cmp
push
add
cld
sti
call
mov
jne
in
cli
sti
push
shll
mov
dec
mov
test
insl
loopne
sub
sti
sub
pop
subl
adcl
pop
in
pushl
cmp
push
aam
jne
data16
mov
add
cli
jae
push
ret
test
dec
mov
cltd
lds
dec
add
add
mov
push
adc
mov
dec
std
jae
pushf
add
in
xlat
sbb
pop
fcoms
xchg
popl
in
popa
xor
xlat
sub
xor
mov
xor
adc
jge
cli
adc
and
cmp
pop
mov
fidivrl
and
or
aaa
jae
scas
pop
sub
sub
test
mov
fisttpl
mov
jmp
pop
fistpl
rolb
add
mov
in
out
inc
ja
loop
or
stos
mov
shrb
pusha
stos
xchg
mov
ret
mov
xchg
daa
xchg
ret
dec
pusha
loopne
mov
add
add
or
aad
mov
ljmp
aaa
mov
push
jmp
pop
xor
sub
xor
jge
sub
or
ret
aaa
idiv
les
cmp
test
ljmp
pusha
sbb
xor
and
push
in
mov
hlt
ss
out
inc
icebp
xor
adcl
add
add
stos
add
adc
dec
jle
mov
shl
mov
cld
inc
jmp
inc
cmpsl
add
add
sub
pop
jae
ret
dec
mov
outsl
pop
cmp
outsl
daa
fistpl
les
xlat
or
xor
pop
ja
cwtl
bound
mov
sti
test
imul
stc
mov
add
cmp
loope
insl
pop
jbe
jmp
push
outsl
loopne
and
sti
pushl
add
or
fmuls
loopne
out
inc
movsb
pop
xor
add
cld
dec
jo
cmp
repz
testl
add
add
outsl
add
std
leave
jmp
cmp
push
cli
inc
test
aaa
decb
sti
mov
pop
les
add
mov
mov
aas
stos
scas
adc
xchg
jno
cli
lcall
xchg
push
sbb
test
and
xchg
aas
inc
call
add
add
mov
mov
shll
mov
inc
hlt
inc
jl
in
cs
imul
xchg
and
add
add
inc
fidivl
ret
adc
aas
or
pop
sub
cmp
clc
mov
leave
dec
not
fistl
inc
push
lock
and
sbb
repz
out
add
add
lret
ljmp
into
sub
sbb
repz
xchg
sbb
xor
push
add
jbe
jmp
jb
mov
cmp
xor
jmp
inc
dec
das
jmp
bound
push
xchg
jno
std
call
hlt
imulb
cld
mov
mov
xlat
scas
sbb
lea
cmpsl
sbb
cmc
jge
sub
loop
loopne
fidivs
incl
xor
call
add
add
jo
call
xchg
loop
mov
lods
sbb
mov
aad
jge
inc
clc
insl
sbb
rsm
or
filds
cmpsl
cmpsb
cmp
dec
or
in
rolb
jge
add
aam
xor
dec
fnsave
add
fldl
hlt
sub
add
pop
popa
add
stos
pop
jne
add
add
xor
dec
fldl
add
adc
psubusw
clc
call
xchg
xchg
xlat
pop
push
movsb
jb
cmp
aam
test
inc
add
add
sbb
and
faddl
pop
out
xchg
adc
mov
cli
or
inc
inc
sti
inc
sub
sub
or
js
or
mov
add
aad
push
xor
xor
mov
mov
inc
jbe
add
mov
je
cmp
cli
cmp
je
pop
mov
ret
ret
std
inc
sub
notl
je
ret
mov
fimuls
rolb
push
fdiv
stc
cmc
call
lcall
add
aaa
jns
adc
testb
add
int3
stos
add
mov
cmp
in
mov
gs
add
sbb
xor
out
je
out
push
add
popf
sbb
push
jmp
mov
fstpt
mov
cs
sahf
lret
out
aas
faddl
jmp
pop
fisttps
leave
sub
add
outsb
imul
push
inc
xor
cli
les
int3
cmp
xorl
fwait
je
ds
or
push
mov
sub
aad
pop
cli
cmpsb
dec
fadds
arpl
cmp
imul
subl
shl
or
xor
imul
sbb
sbb
shll
incb
popa
dec
incb
push
add
add
jmp
bound
xor
sub
orb
ret
ficompl
pop
fiaddl
shlb
push
je
add
ret
jg
mov
dec
and
imul
jl
sti
decl
or
push
pop
add
clc
pop
jne
loopne
or
xor
sti
adc
sbb
add
mov
fs
push
xor
or
push
adc
mov
sbb
in
mov
aaa
outsb
add
cmpb
punpckldq
testl
hlt
cmp
xor
add
inc
mov
daa
adc
mov
xchg
or
cwtl
push
jge
ja
jo
mov
sar
add
add
dec
mov
mov
pushl
add
inc
xor
jne
mov
call
out
mov
sbb
rcl
push
fdivrl
in
loop
or
jne
aas
jmp
in
xchg
mov
cltd
and
bound
sbb
ret
scas
cli
add
ljmp
add
test
arpl
cmp
stos
push
add
pop
inc
sahf
out
fidivs
jmp
repnz
out
dec
jecxz
cld
inc
aam
add
stos
push
cmpsl
push
popf
neg
push
jno
inc
pop
adc
push
in
dec
lea
and
fadds
sti
scas
or
xor
jae
je
add
add
rolb
fwait
imul
es
imul
and
pop
sar
push
jbe
ret
sub
sub
popa
push
insl
repz
mov
insl
in
ds
aad
popa
ds
cmp
lods
xor
fnstsw
mov
lcall
sbb
inc
jmp
xchg
cmpsl
cmc
add
insl
cld
dec
int
push
jp
clc
sub
add
inc
sub
mov
or
pop
or
cmpsl
insl
cld
iret
les
lahf
test
or
insl
leave
ret
dec
mov
pusha
in
adc
cmpsl
sub
push
insl
adc
test
or
and
mov
daa
test
cmpsl
rorb
jecxz
xchg
add
fstl
pop
hlt
call
pop
and
test
add
fldl
mov
into
das
mov
ficoml
push
std
xor
adc
cmp
insb
popa
ss
lock
fnsave
jno
dec
test
adc
aaa
add
or
xchg
pop
ss
inc
jge
adc
leave
vsqrtsd
inc
cli
and
stc
cli
mov
adc
add
bound
std
cltd
adc
imul
mov
mov
fucomi
adc
xor
xor
pop
cmpsl
adc
xlat
cwtl
lods
test
divb
sahf
int
add
sub
jbe
cltd
ret
jl
pop
stos
mov
mov
push
rcl
lahf
stc
fcmove
sub
add
inc
sbb
mov
ret
jge
daa
gs
inc
mov
pop
jnp
pop
inc
cwtl
scas
nop
dec
cltd
mov
daa
sub
lcall
add
iret
out
cs
jle
ret
pop
stc
cli
sbb
std
fmull
mov
add
ret
pop
les
xchg
outsb
cmc
pop
sbb
pop
lds
clc
add
add
mov
stos
data16
dec
jb
pop
in
rcr
sbb
mov
ss
scas
jne
add
add
es
jmp
mov
ret
pop
shl
pop
aas
out
test
andl
shll
ds
add
flds
mov
call
pop
fdivl
lea
cli
fistpl
sti
add
add
xchg
fiaddl
call
psllq
adc
pop
cmp
aad
push
pop
pop
sti
je
insb
mov
sub
insl
loopne
xlat
sti
mov
ficoml
or
loopne
and
das
mov
bound
out
add
pop
mov
js
pop
pop
cltd
or
inc
mov
inc
push
mov
test
jl
add
mov
mov
mov
push
or
sub
pop
cli
inc
adcb
jp
subb
fiadds
mov
mov
xor
add
ror
mov
lods
gs
popl
xor
push
mov
addr16
mov
add
sti
in
dec
in
cmp
inc
sub
cmp
add
add
insl
lret
adc
sbb
pop
mov
xchg
pop
mov
mov
jmp
andl
test
pop
sub
xor
jmp
sti
mov
aad
mov
pop
sub
or
add
and
mov
inc
popf
or
mov
add
into
jg
daa
rclb
sbb
mov
add
add
and
sbb
jge
or
sahf
sahf
lahf
jp
pop
inc
scas
xlat
or
and
jge
shll
xchg
ficoms
je
add
mov
or
and
jmp
pusha
lcall
ljmp
inc
cwtl
mov
es
adc
xchg
mov
push
ja
and
clc
aam
rolb
add
add
cmp
test
ds
insl
mov
aas
or
std
jnp
and
clc
scas
and
outsl
ffree
imul
icebp
pop
add
lcall
add
or
test
testl
jae
sti
adc
dec
adc
cmp
cmp
jle
add
fsubrs
push
dec
fiadds
or
test
sbb
pop
add
clc
ljmp
mov
nop
push
aam
xor
fists
adcl
out
sti
ljmp
aam
enter
pop
insl
cltd
add
mov
jecxz
push
dec
push
inc
pop
or
mov
in
aas
mov
add
fwait
int3
xchg
jae
jp
ss
decl
xor
jno
xchg
int
shlb
mov
xchg
int
xor
int3
pop
mov
fdivr
enter
mov
shrb
mov
jne,pn
jns
ret
sub
insb
or
fimull
inc
cli
cmc
xchg
es
mov
xlat
or
add
add
xchg
ret
sub
mull
cmpsl
xchg
or
jno
sbb
mov
scas
int3
sub
sbb
add
lret
mov
add
or
mov
arpl
xor
sbb
leave
sar
ret
stos
in
xor
and
test
stc
shrl
mov
jle
jl
repz
repz
xchg
add
add
add
es
lcall
xchg
call
imul
add
mov
fmuls
loope
stc
mov
cmp
or
mov
mov
loopne
sarb
xchg
std
fcmovbe
push
jns
push
cwtl
std
push
mov
sbb
and
cwtl
stc
push
xlat
add
dec
cmp
jb
xchg
sub
clc
aam
into
inc
jmp
daa
adc
icebp
mov
cmp
push
into
mov
xlat
sahf
xchg
add
add
pop
and
fistps
cmp
popf
pop
and
cmpsl
call
xchg
dec
push
or
cmp
fadds
add
and
in
jge
in
add
xchg
test
add
and
push
and
inc
aam
aaa
and
fwait
je
das
bound
fs
lret
aad
clc
bndldx
pusha
decb
test
gs
add
pop
ja
mov
in
adc
pop
xchg
mov
sbb
cmp
mov
dec
push
and
mov
add
add
sub
gs
movsl
shl
pop
mov
or
sbb
pop
and
add
aad
dec
cli
ret
cli
mov
and
fwait
pop
sahf
xchg
outsl
fadds
movsl
and
inc
push
jg
add
adc
inc
cld
sti
sbb
sti
mov
ljmp
aam
add
add
inc
sbb
je
aaa
mov
stos
cld
aam
mov
cld
sti
int
xor
pop
mov
stos
cld
aad
mov
test
mov
js
pop
ds
mov
test
ret
js
dec
jmp
jp
and
mov
stc
cmp
push
xchg
sbb
inc
mov
inc
add
add
mov
cmp
jnp
pop
clc
jb
sahf
imul
in
imul
fiaddl
popf
sub
mov
push
test
jmp
fwait
add
into
pop
pusha
xchg
ja
pop
xchg
lds
test
push
ds
les
in
out
dec
cwtl
fisubs
jae
jb
sub
aaa
pop
sub
add
and
mov
adc
ds
and
and
xchg
fistpll
lods
cs
std
jae
shll
mov
scas
jle
mov
int3
sbb
call
jb
cli
and
testl
inc
rol
pop
sarb
inc
fcos
push
mov
fstp
faddl
add
addr16
add
jne
imul
hlt
std
subl
lahf
in
jge
aam
add
movsb
ficomps
xor
int3
dec
imul
icebp
dec
stc
or
xchg
mov
loop
cli
pop
add
add
xor
gs
bound
mov
aam
in
push
daa
add
or
add
das
outsl
add
add
out
inc
imul
jno
cli
insl
mov
mov
int3
add
cltd
mov
jno
xchg
lea
sbbb
add
rclb
ret
fadds
push
mov
mulb
xor
ljmp
sbb
push
mov
add
je
add
loop
mov
add
sbb
mov
and
add
push
ret
incb
ljmp
mov
sbb
call
add
fs
mov
sbb
mov
fucomi
insl
mov
push
dec
xchg
mov
xor
mov
mov
loope
pop
sub
cmpsb
adc
mov
xor
mov
ss
jl
pop
ds
addr16
divb
fsubl
add
stos
mov
popf
jmp
mov
movsb
cmp
inc
pop
inc
mov
repz
scas
xchg
pop
ds
pushf
jmp
xchg
inc
adc
test
adc
sub
mov
imul
add
add
add
xor
les
add
xor
xchg
pop
push
jle
push
call
lahf
sbb
popf
mov
je
scas
jle
mov
push
jle
mov
stos
imul
imul
push
inc
sbb
out
adc
clc
call
cli
aaa
dec
adc
lock
cli
incl
add
mov
jmp
mov
adc
or
aam
mov
sarb
nop
shlb
mov
movsl
push
push
cli
stos
je
inc
mov
push
inc
add
enter
jo
sub
mov
xor
scas
pop
dec
bound
enter
sti
pop
aaa
cmp
add
add
add
sub
xor
lock
jns
in
jbe
dec
or
or
test
add
std
ljmp
lea
sbb
fldt
xchg
mov
inc
dec
sbb
cmp
mov
ja
xlat
enter
push
xchg
push
inc
test
adc
jecxz
cmp
imul
add
add
jnp
mov
hlt
mov
outsb
cmp
mov
or
out
jbe
pusha
jmp
jge
xlat
cmp
push
adc
data16
push
lea
addb
pop
ret
mov
and
sub
fimuls
cld
mov
scas
ret
in
test
clc
cltd
mov
or
jo
mov
add
add
adc
shrl
jmp
and
cwtl
clc
sti
jecxz
call
sbb
xchg
rcrb
rcll
cmpsb
clc
sbb
out
shll
les
pop
push
cmp
stos
mov
inc
cwtl
cmc
jb
stos
shrb
sahf
cmpsb
push
adc
cmp
mov
xchg
jae
jbe
add
add
pop
shll
push
cld
dec
mov
or
xchg
in
out
push
or
ret
filds
add
in
out
and
int3
dec
in
inc
lods
push
mov
push
sbb
add
push
fucomip
inc
arpl
cli
mov
rolb
icebp
adc
xor
cli
lcall
add
pop
adc
gs
or
pop
shll
mov
aad
adc
pop
sti
test
inc
fstl
mov
add
rcll
cli
lret
test
add
xor
or
ficomps
mov
sbb
xchg
dec
pop
sarl
xchg
adc
ror
outsl
xchg
ds
dec
add
add
roll
test
inc
inc
add
add
push
xchg
ss
add
adc
pusha
sbb
cli
hlt
adc
mov
sqrtps
sbb
sub
jg
mov
xchg
mov
stc
xor
fimuls
loope
lods
loop
sti
add
add
stc
or
push
and
pop
popf
testl
and
and
add
out
adc
jle
xchg
xchg
adc
in
xor
and
imul
adc
fs
xchg
push
adc
stos
setp
fstps
les
add
add
notb
test
repz
sahf
jmp
lods
cmpsb
pop
lret
fs
and
test
mov
cmp
std
arpl
setp
push
loope,pt
or
sbb
in
adc
xchg
mov
cmp
cld
push
add
inc
or
test
add
arpl
add
add
add
sbb
int3
pop
and
int3
sub
and
int3
shll
mov
push
push
dec
xchg
or
bound
push
popa
stc
call
je
sbb
lds
add
sbb
test
mov
pop
sub
shll
mov
in
sbb
mov
out
andl
jle
int
aad
mov
add
cmp
sti
stc
sub
pop
hlt
inc
shl
or
add
add
adc
dec
inc
add
inc
add
imul
add
mov
test
inc
hlt
das
add
rol
adc
or
inc
inc
cld
test
call
jns
ss
call
incl
add
jb
int
cmpsb
mov
cmp
sar
test
dec
add
mov
jmp
sub
or
outsl
sbb
sbb
push
pop
les
adc
incl
push
sbb
xor
fiadds
mov
bound
imul
fldt
test
popa
lods
idivl
xchg
out
push
add
add
stos
jae
mov
mov
push
xchg
sub
lods
shrb
outsl
out
pop
stos
idivb
sbb
das
cmp
repnz
out
out
imul
loope
gs
lea
mov
sbb
adc
pusha
fcomi
or
cmpsl
push
mov
cmp
clc
mov
mov
sub
add
aad
adc
adc
bound
adc
inc
in
add
testl
jb
mov
pushf
inc
incl
les
loopne
pop
in
dec
mov
lahf
rolb
cld
stc
call
jne
bound
jge
call
xlat
and
pop
loop
shll
pushf
jle
rcll
add
add
fwait
cmp
and
mov
pop
inc
mov
and
ja
inc
or
add
movq
mov
add
add
lods
add
mov
bound
test
subl
movsb
fildll
into
xchg
push
lock
outsl
sbb
les
push
daa
addl
add
inc
nop
in
test
xor
dec
mov
cmp
add
mov
ffree
outsb
mov
or
js
jne
or
pop
jne
in
jge
loopne
rcr
out
sub
pop
jnp
sbb
les
sub
jle
add
add
add
xchg
notb
fidivl
aas
clc
test
std
push
add
jb
dec
add
add
fldt
shll
js
push
lods
out
inc
mov
jae
lds
ficoms
imul
stos
ja
pop
sub
sbb
inc
cwtl
mov
push
mov
push
ja
pop
push
cld
add
or
add
loopne
std
mov
leave
enter
lods
jnp
repz
add
add
mov
filds
sub
jae
test
pop
add
lea
clc
bound
fmuls
insl
in
fnstenv
clc
fisttpl
loopne
test
cmp
out
dec
pop
outsb
icebp
loopne
push
cmp
add
lock
mov
add
cmpsb
mov
clc
push
add
add
jle
mov
add
cmpsb
pop
adc
clc
push
loopne
sub
add
lods
mov
add
add
mov
push
unpcklps
cld
xlat
out
fistpl
add
sbb
cli
fldenv
jle
int3
out
lcall
mov
test
cli
call
mov
add
push
clc
std
add
add
clc
jge
hlt
orl
dec
push
mov
sti
cmp
jbe
lock
rorl
add
lcall
push
cld
mov
ret
daa
xor
cmp
jne
loopne
rorl
dec
cld
lcall
jl
add
add
stos
push
mov
test
mov
dec
test
push
cld
dec
jmp
jp
adc
xchg
roll
add
jns
mov
lds
sbb
test
cwtl
fnstcw
mov
inc
mov
or
cmc
jl
sahf
jle
pop
incb
add
sbb
xchg
aas
imull
sarb
or
xor
stos
in
idivl
mov
push
daa
jge
add
push
in
push
sbb
mov
add
add
cs
adcl
ss
lods
mov
insl
lret
mov
pop
js
pop
lahf
mov
mov
jp
mov
cwtl
dec
mov
jns,pn
lret
das
push
lea
ljmp
mov
cmp
ret
sbb
mov
fidivrl
repz
hlt
add
stos
js
pop
mov
add
add
aam
outsl
leave
stos
add
mov
outsb
clc
data16
aas
sbb
xchg
test
xchg
add
push
loopne
sub
pop
aas
stc
add
jmp
push
loopne
sub
push
xorl
push
ds
jmp
adc
popa
push
add
push
loopne
test
sbb
sbb
adc
cmp
add
and
clc
push
loopne
test
jmp
test
cmp
push
add
add
std
test
jge
jo
push
lea
jmp
mov
mov
test
stc
call
pop
mov
add
inc
cli
mov
enter
stos
jle
mov
pop
mov
add
inc
cli
mov
add
sbb
mov
addb
xor
inc
cmpb
dec
clc
repz
jne
sub
je
pop
mov
mov
stos
movsl
mov
insl
in
stc
ds
testb
or
mov
stc
ds
cmpl
jl
lcall
out
jge
call
add
add
stc
ds
cmpl
jl
ljmp
lea
jmp
ds
cmpl
jl
cli
jbe
in
outsl
cmp
mov
call
ds
cmp
add
dec
ja
int
push
enter
mov
in
cmpsb
aas
sbb
pop
pop
push
jg
jle
sbb
lret
arpl
add
add
into
push
sub
dec
jle
jmp
movsl
push
mov
jl
add
mov
add
pop
sub
push
popf
push
add
sti
inc
jl
call
push
inc
nop
out
jg
xchg
addb
std
jl
pushl
in
lods
arpl
stos
arpl
lods
sbb
in
pop
sahf
adc
cwtl
add
in
jbe
add
add
cmc
fs
lea
pop
jecxz
adc
push
xchg
roll
scas
out
jns
jo
lods
push
mov
push
xor
mov
sbb
in
pop
popf
cmc
inc
sarb
cmp
test
lods
sbb
lret
mov
out
xlat
push
cwtl
and
scas
lret
add
cld
mov
sbb
leave
push
sarb
sti
jg
mov
adc
jg
mov
push
or
push
inc
clc
jmp
add
call
in
cld
pop
cltd
in
je
jg
cld
cmp
jg
xor
dec
mov
add
lret
add
cld
fstpt
iret
xlat
jbe
lret
push
jl
add
add
jecxz
faddl
mov
int3
mov
stos
jle
mov
pop
mov
add
loop
push
adc
ds
or
add
xor
inc
push
test
bnd
movsb
fistps
mov
out
mov
dec
test
mov
mov
aaa
mov
or
add
sbb
jb
mov
xor
xor
xchg
jae
loopne
jns
add
bnd
movsb
fdivs
jno
call
add
push
pop
arpl
and
fsubrl
rcrl
and
sub
sbb
inc
cltd
into
push
inc
xchg
cli
jp
repz
lock
push
mov
add
lods
jno
pop
mov
add
in
mov
sbb
add
arpl
push
lods
jmp
xchg
repnz
cmp
xlat
xorl
fucomi
add
orb
jmp
push
popf
pop
test
fwait
testl
ljmp
cwtl
add
cmp
cmc
jmp
adc
stos
mov
shrl
add
add
add
xchg
xor
jle
insl
mov
and
fldt
gs
xchg
mov
aas
in
mov
mov
fxam
sbb
add
pop
sti
push
les
adc
outsb
or
orl
mov
inc
psubsw
out
popf
jb
iret
jle
int
mov
adcb
add
add
dec
mov
inc
inc
and
fnstcw
push
sbb
addb
dec
adc
adcb
inc
or
test
inc
or
out
incl
mov
add
and
pop
outsb
or
pop
push
pop
pop
out
testl
xchg
mov
add
mov
nop
pop
add
dec
flds
push
fadds
mov
repnz
test
xor
add
data16
mov
sbb
mov
mov
mov
xchg
iret
mov
int3
icebp
sub
mov
imul
inc
jl
or
mov
pop
sbb
inc
ret
pop
add
gs
stc
lcall
push
lds
jp
adc
jp
add
mov
or
sbb
xchg
ljmp
pop
sti
out
loop
cwtl
sub
mov
fucomi
push
inc
dec
ljmp
fucomi
insl
mov
int3
add
add
add
imul
fldt
insl
faddl
pop
fldt
jno
insl
xchg
in
ljmp
fucomi
xor
test
push
mov
mov
sub
mov
int
cmp
sbb
xor
mov
lds
pusha
inc
fnstcw
pop
or
inc
sahf
add
in
add
add
mov
aaa
mov
lea
ja
adc
std
fiaddl
jmp
test
in
xor
mov
sbb
cmp
clc
cs
push
stos
xor
push
bound
repz
jbe
push
mov
mov
loope
add
stos
push
inc
xor
or
add
jecxz
shlb
jbe
mov
test
push
lahf
or
stc
adcl
shlb
iret
jmp
inc
xor
cmc
push
ss
stc
andl
test
mov
jbe
sbb
pop
test
xchg
sbb
aam
inc
cld
ror
shlb
incl
pop
jne
sti
imul
add
mov
jge
call
ds
std
jl
leave
test
outsl
inc
cld
out
xor
stc
dec
jl
clc
movb
std
insl
jl
icebp
jmp
inc
or
ss
xor
mov
stc
pop
add
fdivr
cli
xchg
lea
xor
pop
in
out
inc
fdivrs
decb
leave
add
add
pop
and
idivl
clc
imull
fucomi
add
in
xchg
fsubr
add
loop
ret
mov
in
push
divl
fistpll
sahf
cli
nop
div
cwtl
mov
out
push
imull
mov
pop
pop
fistps
jae
cmp
fildll
xlat
mov
add
pop
xchg
mov
add
nop
pop
mov
mulb
lods
push
mov
jnp
xchg
fidivrs
cltd
xchg
addb
pop
ret
dec
loopne
into
mov
push
test
in
cmp
pop
jae
loope,pt
roll
scas
into
pusha
push
mov
pop
std
arpl
add
mov
mov
push
add
push
fildl
jmp
add
add
fs
mov
ja
jmp
lds
loope
mov
add
xor
pop
jb
xchg
les
xor
test
lods
and
ret
sbb
bound
xor
push
add
add
push
loope
xchg
fldcw
repnz
pop
cli
pop
paddw
mov
in
pushf
add
cli
pop
add
add
cld
pop
ret
inc
mov
jmp
dec
xor
add
mov
jle
or
xchg
test
add
nop
or
inc
pop
add
and
or
mov
add
adc
add
in
dec
adc
bound
out
jle
out
jns
lcall
jo
or
enter
je
add
mov
js,pn
dec
mov
adcl
mov
sti
add
inc
jns
add
cmp
cmpl
addl
mov
cmp
dec
imul
sbb
scas
jmp
aad
cmp
mov
add
stc
add
into
lods
inc
test
std
mov
add
rorb
add
fucomi
xchg
into
pop
les
add
inc
dec
ss
popa
fsubr
add
mov
cmp
ljmp
pop
ficompl
jl
pop
sbb
repz
add
mov
cltd
cmpsb
sub
jae
inc
mov
fucomi
cmp
data16
add
push
and
add
repz
cmp
jmp
cld
cmp
add
mov
pop
inc
stc
out
sbb
mov
sbb
faddl
adc
and
div
jbe
pop
push
shll
jbe
jb
enter
orl
pushf
gs
lret
push
cltd
test
fldt
add
add
fildl
jmp
cld
imul
mov
xchg
in
jb
jecxz
xchg
or
call
subb
cmp
or
jae
add
xchg
or
mov
roll
pop
inc
add
std
mov
gs
jb
pop
inc
adc
cmpsb
jno
mov
clc
jge
add
insb
lods
dec
adc
jmp
sub
pop
add
push
inc
jo
jae
add
jle
jnp
push
xchg
adc
sub
idivb
fidivrs
xchg
or
sub
inc
sub
ret
pop
pop
mov
sbb
mov
ds
pop
and
mov
add
ror
ds
add
icebp
scas
xchg
push
stos
xchg
xor
or
lds
clc
inc
clc
call
add
mov
push
mov
insl
cmp
cmp
cmpb
add
mov
stos
add
mov
push
adc
mov
pop
add
mov
mov
mov
pop
pop
dec
mov
call
mov
pop
sub
lea
dec
es
sbb
dec
mov
sbb
rol
lahf
jg
fsubr
add
arpl
add
and
enter
mov
or
jmp
shrb
jecxz
add
out
push
rcrl
arpl
mov
pop
xlat
add
add
mov
and
add
roll
scas
hlt
subl
hlt
notl
cmp
jge
mov
pop
in
mov
mov
imull
aas
sbb
repnz
push
ds
ret
push
mov
idivl
mov
inc
pop
in
outsl
imul
cs
lar
mov
fildl
push
jle
add
add
lock
pop
jle
jb
negl
push
je
out
push
imul
add
hlt
andl
fnstenv
and
adc
cli
lea
testb
or
jmp
ljmp
insb
shll
call
icebp
push
pop
outsb
sbb
lea
add
in
push
pop
mov
add
and
mov
add
sbb
lock
mov
and
cli
call
out
std
test
jle
mov
mov
in
mov
push
cli
cmpl
add
aad
inc
sub
and
int3
stc
inc
nop
sar
or
jmp
adc
int
add
jbe
imul
ja
loop
int
add
add
into
stc
rcl
orb
mov
stc
mov
inc
dec
std
aas
sub
test
push
int
lcall
hlt
mov
call
ds
add
xchg
mov
fnstcw
pop
movsl
int
test
aas
cld
xchg
insl
adc
dec
ret
mov
iret
scas
rcll
addr16
dec
in
not
inc
push
aam
add
adc
push
outsb
mov
pop
gs
jmp
inc
shrl
out
std
data16
add
pop
mov
cmpsb
shrl
gs
jmp
addl
mov
enter
pop
cwtl
pop
mov
rolb
jmp
shll
jns
ljmp
push
jmp
bound
leave
push
add
jne
or
rcrb
push
mov
sbb
lahf
out
cltd
xchg
div
into
bound
jmp
push
insl
ljmp
clc
xorps
xchg
push
xchg
testl
std
arpl
add
jae
mov
testl
outsl
in
and
imull
add
jp
jle
adc
andb
push
ds
scas
pusha
jle
mov
cli
jmp
or
cli
adcl
jbe
lret
imul
test
add
jbe
adc
je
pop
mov
lea
mov
lcall
push
hlt
or
mov
cli
lcall
mov
add
pop
or
call
pop
adc
test
orb
inc
or
sarb
mov
pop
cmp
iret
cli
mov
pop
shlb
fisttpl
sar
test
inc
stc
inc
jo
cld
mov
hlt
xor
shr
and
sar
ds
cmp
std
jl
bnd
or
jg
cli
or
mov
add
inc
pop
sar
ljmp
xchg
mov
stc
rcrb
mov
lret
les
jne
stc
inc
mov
sar
mov
imul
stc
mov
js
mov
pusha
shlb
push
je
dec
pop
out
jge
jmp
js
bound
call
xchg
xor
jb
lods
call
add
jmp
mov
xchg
rclb
ret
fsubs
and
or
insl
call
pop
popf
push
gs
out
jnp
lret
mov
iret
shrl
cld
gs
ret
adc
xor
mov
xchg
push
mov
dec
insb
jg
xchg
mov
jmp
je
jbe
in
jns
fildl
rol
xchg
mov
notl
dec
inc
dec
add
add
mov
idivl
shrb
popa
ss
mov
lret
int
jle
mov
and
inc
lods
fildl
jmp
sti
in
repnz
clc
popf
ror
ljmp
xchg
pusha
fisubrs
pop
lds
adc
lds
testl
loop
outsl
es
add
mov
add
cmp
movsb
mov
pop
addb
inc
or
mov
add
adc
jbe
pop
mov
mov
lods
mov
fs
dec
or
fisubl
ror
jns
call
pop
mov
pop
loop
lret
shlb
vmovaps
push
lahf
orl
sbb
pop
pop
push
roll
xorl
add
in
insl
push
add
add
sbb
les
sbb
scas
or
push
mov
sub
adc
xor
pop
jg
add
jno
ror
scas
ror
mov
int3
jns
jns
cmpsl
add
popf
or
mov
cli
mov
mov
test
ret
and
jae
stc
int3
je
jns
pusha
mov
pusha
jae
cmp
xchg
adc
les
add
fsubrs
mov
add
imul
enter
enter
rcl
aad
sar
ret
or
fldt
push
in
sub
and
mov
sbb
ljmp
setae
push
inc
cmpb
lods
icebp
cwtl
ret
fucomi
pop
pop
lea
imulb
stos
add
ss
add
out
jecxz
cmp
mov
mov
jmp
addb
addr16
dec
and
mov
ret
hlt
int
scas
test
imul
subb
xor
push
mov
jmp
or
outsl
and
aam
sbb
test
std
ret
out
fildl
bound
push
add
add
add
hlt
add
pop
pusha
jmp
inc
ret
outsb
ucomiss
clc
push
cs
clc
sub
mov
fildl
pusha
mov
xorb
lea
dec
add
mov
fildl
jb
stos
mov
faddl
jmp
aas
add
aam
call
fsubp
movsl
pop
cmpsl
dec
mov
add
das
pop
add
xchg
popa
dec
dec
xchg
add
or
imul
xchg
pop
lock
test
xlat
xchg
add
lods
fiadds
add
add
fbld
add
dec
jl
xchg
pushf
push
fiadds
mov
jle
test
add
lods
popa
addl
sbb
add
bound
add
movl
in
xchg
add
add
fldl
cmpl
inc
or
xchg
jl
add
push
jl
in
repnz
xor
test
jne
or
jle
rcll
mov
imul
dec
cltd
push
movsl
aad
repnz
cwtl
ljmp
cmp
xor
adc
and
outsb
int
xor
test
add
js
sarb
lret
xor
or
sub
add
lods
aad
bnd
jge
xorl
out
ficoml
mov
adc
mov
unpckhps
push
sbb
xor
fcoml
sbb
cmp
xor
xchg
negb
cmpsb
mov
unpckhps
mov
jge
shll
add
add
add
cld
ljmp
fldt
cmp
jmp
sub
pop
add
add
loopne
add
add
add
insl
fcomip
jmp
mov
push
out
stos
shrl
scas
rcr
jmp
mov
adc
mov
adc
lods
gs
fidivrl
clc
adc
add
add
mov
xor
pop
fists
insb
or
stos
mov
sarb
in
iret
push
dec
dec
out
test
xchg
and
out
lds
gs
mov
push
pusha
in
in
push
lea
push
lea
mov
arpl
push
jmp
mov
pop
shlb
jecxz
inc
cld
pop
sbb
pop
lods
stc
push
bound
bound
test
mov
in
jle
sub
cli
incl
mov
mov
mov
push
es
es
es
popa
in
or
or
sbb
je
popa
or
imul
push
mov
and
cmp
or
hlt
cmp
jg
sub
inc
scas
leave
pop
inc
pop
and
icebp
das
mov
in
or
jp
mov
js,pt
adc
or
cmp
and
xor
in
dec
or
loope
add
mov
adc
out
or
repnz
pop
add
add
add
rcrb
and
icebp
mov
and
sti
insb
push
jne
insl
test
addb
out
dec
jle
lock
addr16
pop
fimull
enter
jnp
jecxz
inc
rcr
add
fwait
ljmp
lretw
iret
sti
inc
mov
addr16
les
add
pop
mov
clc
adc
add
add
testb
xchg
bound
loopne
and
orl
cs
mov
lidtl
iret
xor
cmp
add
push
inc
icebp
cmp
xchg
insl
repz
xor
mov
aam
call
ret
scas
lret
popw
cmp
nop
adc
push
sbb
aad
jmp
add
add
insl
idivb
add
das
lds
mov
aaa
ret
mov
lea
push
push
cmp
push
aad
pop
xchg
lock
inc
pushf
outsb
loopne
aam
add
icebp
inc
add
xchg
push
push
sahf
adc
iret
and
adc
pop
mov
cmp
out
sub
je
mov
imul
int3
enter
add
add
stos
int3
sub
out
mov
les
add
ffreep
and
aam
xor
xlat
ffreep
inc
test
and
movsl
inc
adc
push
push
mov
add
movsb
testl
add
add
int3
jns
int3
jno
int3
or
int3
add
pop
leave
jb
call
add
add
jne
shrl
xor
jmp
jle
mov
jb
dec
aad
inc
add
xor
in
jo
inc
lret
adc
dec
or
or
int3
mov
test
repz
adc
or
cmpl
mov
fucomi
add
fs
add
add
fadds
cmp
add
dec
or
test
shlb
pop
and
xchg
in
imul
xchg
in
jnp
flds
rcll
test
push
cmp
add
push
aam
insb
mov
das
and
push
and
mov
add
incl
sbb
jb
movsl
or
cmc
mov
sbb
add
add
out
push
fldcw
je
movsl
sub
lock
add
cmp
jge
xchg
in
scas
pop
sub
cmp
lahf
or
testl
sbb
lahf
or
push
negl
cmc
sbb
jmp
xchg
cld
nop
cltd
call
and
lds
sbb
bound
add
add
stc
aas
mov
dec
stc
jle
ret
add
inc
in
inc
fimull
out
ret
movsl
sub
fisttpl
add
or
xchg
divl
push
xor
sub
enter
gs
jge
push
pop
ret
cmpsl
xchg
clc
je
bound
sub
or
idiv
lea
jnp
lahf
sahf
pop
ret
mov
add
mov
int3
mov
out
inc
bound
lcall
lcall
testb
bound
das
es
loop
push
xchg
sbb
pop
nopl
push
mov
adc
and
les
test
or
jo
in
jge
shl
pop
icebp
inc
pop
push
sub
inc
cmpsb
testl
add
add
xor
cmp
inc
lea
out
inc
pop
push
sub
inc
cmpsb
mov
xor
add
xor
cmp
mov
cmp
add
les
insb
inc
test
pop
in
scas
call
mov
sbb
testl
clc
shr
xor
pusha
adc
add
add
mov
hlt
xor
aad
in
cmp
xchg
push
mov
sbb
fcomps
mov
sub
pusha
cwtl
pop
inc
sbb
stc
add
test
inc
test
int3
inc
mov
testl
test
pop
pusha
pusha
sub
and
mov
mov
fildl
jmp
add
add
adc
arpl
mov
rorl
mov
ljmp
jne
imull
pop
ret
fisttpl
ficompl
dec
data16
inc
sub
sti
pop
fldcw
aad
jmp
mov
sbb
ljmp
add
cmp
xor
jmp
add
add
fldl
nop
jmp
fildl
adc
inc
sbb
add
lahf
sub
icebp
pop
daa
cmp
dec
cs
call
pop
pushf
or
adc
dec
mov
mov
shll
mov
jae
iret
sbb
push
adc
cmp
jnp
add
pusha
inc
cld
lahf
sbb
jo
add
add
xchg
stc
mov
add
push
stos
add
fdivp
inc
cmp
pop
pop
sbb
mov
sti
rolb
add
aam
incb
mov
ss
and
dec
push
je
cli
sub
repz
add
cmpsb
lock
in
push
push
call
inc
or
test
cli
pop
call
inc
rolb
lods
les
inc
ss
test
in
int3
sub
ret
add
out
or
add
ss
cld
std
fdivr
sub
pop
add
jb
outsb
movsb
les
test
mov
ds
adc
sti
aad
mov
int
xlat
jle
rol
mov
cmp
aad
jge
lcall
add
mov
pop
xchg
add
sbb
mov
mov
pushf
test
mov
inc
ljmp
repz
adc
bound
mov
dec
adc
les
mov
les
test
push
sub
jno
adc
mov
shlb
add
add
fldt
stos
push
and
xchg
adc
jmp
xchg
dec
mov
xchg
xchg
negl
rcr
push
gs
shl
xchg
fistl
cmp
popf
jp
xor
jp
mov
inc
dec
or
mov
inc
xor
lcall
notl
dec
sbb
add
add
push
push
ret
adc
call
pop
cli
add
add
inc
fsubl
pop
das
push
mov
lret
loopne
push
cmp
or
add
adc
inc
xchg
inc
dec
mov
pusha
jns
adc
jle
adc
mov
push
bound
sbb
data16
add
or
mov
jl
adc
mov
call
mov
push
in
cli
ljmp
jge
fs
aas
cwtl
mov
push
jmp
sub
les
xchg
and
add
lret
bound
test
pop
add
mov
mov
arpl
add
add
mov
nop
push
cli
cmp
xchg
and
inc
test
cld
adc
add
les
or
xor
dec
pop
and
fildl
or
xchg
insl
arpl
mov
mov
arpl
add
fucomi
lock
sti
cmp
out
add
stos
jmp
add
cld
inc
fs
cmp
jmp
xorl
pop
and
das
or
push
add
push
mov
jmp
jo
je
orl
fs
icebp
bound
inc
mov
sbb
mov
aas
mov
rclb
xor
bound
fildl
jmp
add
add
aas
mov
ror
dec
inc
and
lock
jmp
mov
mov
xor
popf
sbb
shlb
cmp
sub
mov
mov
mov
fildl
jb
ja
jmp
cmovl
jnp
jmp
rcr
popa
sub
add
lcall
rolb
xchg
xchg
add
jo
add
push
xchg
push
in
mov
lret
scas
rorl
pshufw
add
cmp
arpl
std
mov
mov
cmp
lahf
jge
enter
inc
xor
dec
iret
xor
fs
inc
insb
jbe
test
pop
sub
cli
dec
dec
or
dec
out
add
add
add
jb
lcall
hlt
inc
pop
cmp
jg
mov
mov
add
js
add
jp
mov
mov
or
jae
add
out
lock
outsb
popf
mov
loop
mov
test
sbb
js,pt
xchg
stc
xchg
inc
movsl
mov
mov
add
jae
push
xor
lcall
add
jle
jno
lret
mov
add
lods
js
add
int
ret
cmp
jnp
add
xor
out
fucomi
jle
aaa
fs
mov
daa
push
mov
lret
mov
fisubl
leave
sbb
push
sub
xchg
sub
mov
fldcw
aaa
insl
mov
add
cmp
fs
xor
or
push
mov
test
sub
add
xlat
call
add
mov
add
roll
sti
xchg
mov
adc
mov
xor
pop
jg
fadds
cli
jmp
aas
popf
mov
push
test
jno
inc
popl
add
fistpll
jg
and
mov
adc
pusha
jb
aaa
pusha
jo
push
mov
loope
push
pop
sub
imul
mov
cs
pusha
int3
cmp
lret
ja
fildl
jmp
popf
pop
dec
mov
sub
mov
ja
sub
call
cmpsl
mov
je
sbb
sbb
add
add
adc
adc
or
cli
in
add
dec
fistpll
xor
inc
js
je
push
jmpw
in
inc
pusha
jecxz
pop
add
cli
sti
arpl
ljmp
je
mov
adc
movsb
pop
jbe
push
inc
inc
js
dec
rorb
add
mov
iret
add
add
add
xchg
mov
mov
imul
mov
call
adc
mov
jnp
add
roll
cmp
nop
cwtl
mov
std
cmpsb
add
mov
xor
adc
mov
fnsave
or
in
out
int
jle
or
add
mov
xorb
xchg
add
add
jnp
sbbl
es
outsl
stos
jp
repnz
ret
push
push
daa
sub
sbb
addb
jmp
and
scas
fsubr
cmp
fs
jmp
add
jne
in
ljmp
adc
lock
sbb
leave
inc
sub
mov
or
adc
add
cmpl
fistpll
xor
cmp
sub
call
dec
mov
pop
frstor
pop
aam
mov
popf
jmp
dec
sahf
insb
jmp
jmp
sub
rcrb
push
jmp
cmpsl
jb
mov
mov
cmp
pop
movsl
xor
add
push
ret
push
in
test
std
inc
js
mov
fildl
bound
pop
ds
sbb
dec
stos
fildl
bound
adcb
mov
or
dec
arpl
jmp
inc
out
add
or
incl
ljmp
rol
fcoms
add
pop
xchg
xchg
fadds
mov
push
adc
push
mov
adc
add
add
or
fistpll
fidivl
mov
in
add
pusha
xorb
xlat
jl
dec
inc
cmp
mov
pusha
loopne
lret
ja
push
in
lcallw
or
jns
xlat
ficoms
ja
add
jecxz
dec
adc
push
lcall
inc
ss
test
int3
jne
mov
add
sbb
dec
bound
mov
cmp
inc
inc
and
mov
mov
push
call
adc
mov
mov
xorb
add
inc
xor
sbbl
cmc
mov
add
add
mov
cmp
mov
jae
dec
push
pop
cmp
and
cld
test
roll
add
add
xchg
cmp
pusha
sub
push
movsl
movsb
sbb
add
push
pop
dec
gs
stos
je
div
sub
adc
shll
mull
insb
ret
push
pop
lods
xchg
jnp
add
sub
jle
add
mov
mov
sub
fwait
cmp
add
sbb
adc
sbb
stos
add
add
shrl
lods
fcmovnbe
jg
roll
and
and
sub
sbb
gs
lods
gs
cmp
mov
sbb
sub
mov
add
push
bnd
pop
pusha
test
pop
jno
out
sbb
sarl
mov
fldl
mov
mov
dec
outsl
icebp
iret
mov
push
pop
jb
add
add
out
imul
pop
dec
cltd
ja
inc
cmp
jmp
enter
and
testl
xchg
fildl
mov
inc
sbb
int3
push
mov
int3
fnstcw
out
mov
sarb
push
push
cmp
lock
mov
pop
pushl
jae
ret
add
mov
pop
push
shl
fnstcw
out
sarl
insl
mov
call
add
xor
mov
jmp
ds
scas
shlb
mov
jp
test
sar
jnp
xor
dec
push
jne
lahf
stc
mov
inc
mov
jmp
jmp
and
push
test
add
cld
in
jp
ftst
sahf
iret
inc
clc
cmc
jl
mov
add
mov
cmp
and
or
dec
pop
loopne
idiv
jb
lahf
stc
xor
dec
mov
icebp
lock
in
inc
js
dec
into
stc
ljmp
mov
pop
push
fneni(8087
xor
je
lds
sbb
les
jecxz
push
loope
add
add
dec
fsubrp
adc
jne
adc
out
movsb
mov
call
sbb
loop
add
fstpl
cmpsl
insl
push
roll
iret
pop
inc
and
and
ret
arpl
sub
test
mov
cmpsb
xor
fs
mov
adc
imull
mov
mov
sbb
add
fstpt
ret
adc
adc
or
jle
mov
jmp
mov
inc
jmp
mov
nop
cmp
mov
aaa
add
push
push
pop
add
hlt
ret
insl
add
adc
bound
mov
mov
mov
inc
cmp
mov
mov
fwait
insl
loop
add
jns
add
mov
and
sbb
add
mov
adc
add
xchg
xor
and
jnp
inc
inc
sub
jo
sub
push
mov
lods
inc
sub
idiv
pop
sub
enter
mov
add
movsb
lret
mov
pop
pop
pop
ret
scas
std
xor
mov
cmpb
add
inc
rorl
fistl
xchg
mov
and
push
fdivrs
pop
mov
and
sbb
mov
push
sub
sub
mov
cmp
ds
out
xchg
xchg
cmp
sub
sub
add
ret
test
test
add
xor
iret
pop
add
add
test
clc
mov
in
add
jge
mov
cmpl
mov
in
mov
mov
dec
or
rol
test
add
ds
add
inc
push
add
rorl
loop
repz
fucomi
mov
arpl
cmp
push
popl
push
fs
movsl
fs
lahf
cmp
cmp
add
add
sahf
xchg
inc
adc
lea
sub
fucomi
add
bound
cmc
mov
mov
inc
mov
fwait
dec
loop
add
fucomi
xchg
cmp
loope
popf
add
pop
hlt
cmc
push
mov
push
mov
sti
pop
lahf
or
adc
jno
xchg
subl
fcomps
jecxz
aad
add
sbb
sti
idivb
fildl
aam
aas
add
mov
int3
add
cmp
ret
mov
bound
inc
or
mov
mov
pop
aam
pushl
jmp
mov
mov
jmp
les
divl
int
xchg
jmp
js
loop
add
add
lahf
roll
outsl
scas
pop
and
add
movsl
pusha
enter
lds
or
pop
mov
jl
insb
mov
inc
add
addr16
and
xchg
mov
insl
incb
sub
idiv
movsb
fcompl
movl
fsubrs
movsb
fdivrl
addr16
clc
add
add
or
push
pop
aad
out
decl
fs
jg
icebp
jmp
mov
cmp
repz
sub
notb
jo
lods
xchg
mov
push
cmpsl
xchg
add
inc
rcll
ret
mov
fsubrs
or
std
repnz
mov
pop
add
add
inc
xchg
or
aas
inc
adc
in
add
scas
mov
jge
sbb
out
jp
aas
and
test
push
ss
out
inc
popf
incl
lock
cld
lret
call
cmp
jne
and
adc
inc
adc
inc
lds
sbb
adc
jl
sbb
sti
mov
add
add
fsub
imul
mov
push
inc
or
add
sub
inc
cmp
in
mov
xchg
jecxz
fwait
push
add
adc
xchg
cld
lret
call
out
inc
sbb
mov
pushf
les
add
push
inc
jae
enter
arpl
ss
bound
jne
jmp
add
add
sbb
mov
mov
sar
and
jb
ds
jmp
mov
mov
sub
jl
shl
or
ljmp
mov
mov
lret
push
mov
and
jb
jne
loope
cmc
add
add
add
pop
in
add
add
push
in
int3
hlt
ljmp
and
add
push
clc
lods
push
sbb
pop
mov
adc
add
and
inc
adc
je
add
pop
orl
add
pusha
cmc
or
aam
mov
stos
and
mov
popf
or
push
push
adc
bound
sub
shl
mov
inc
add
add
jmp
mov
mov
xlat
mov
adc
xor
adcb
xchg
fcmovbe
aam
dec
stos
or
add
cld
sarb
add
ret
adc
in
mov
sub
ds
inc
push
xchg
xchg
fnstcw
xor
popl
add
add
mov
mov
cmp
cmp
push
xor
dec
jecxz
notl
xor
inc
fsubrl
into
psubusw
xor
stos
push
mov
incb
sbb
sbb
shlb
call
xor
addr16
pushf
cmp
shll
scas
fucomi
mov
add
outsb
mov
inc
movsl
data16
mov
add
inc
xchg
or
or
add
fucomi
add
add
fcomi
add
fildl
jmp
push
xor
mov
sbb
out
loopne
sub
out
jb
sti
mov
push
dec
int
es
insb
jns
add
add
sbb
and
aas
pop
in
xchg
inc
sbb
int
sub
fldt
cmp
out
and
xchg
dec
sbb
jmp
out
push
inc
xor
jg
push
fwait
mov
cli
mov
pop
aas
icebp
dec
sbb
add
les
in
pusha
push
clc
mov
fstp
push
bndstx
test
movl
add
movsb
mov
jmp
inc
xchg
xlat
add
push
pushf
add
fldl
negl
fisttpll
test
xlat
add
cmpsl
enter
xor
adc
and
xchg
sti
sbb
adc
fs
hlt
sbb
mov
add
mov
dec
aam
movsb
outsb
pop
outsl
and
sbb
maxpd
into
mov
push
mov
push
inc
inc
mov
add
ds
xchg
add
stos
xchg
popf
cmp
pminsw
mov
xchg
sbb
add
ss
xchg
xchg
mov
cld
mov
ret
xor
ret
mov
addb
add
loop
adc
add
ret
add
les
add
jl
add
add
jne
mov
add
mov
xchg
ja
mov
imul
leave
cmpb
movsl
test
cbtw
sti
rcll
xchg
test
sbb
cmp
or
hlt
lret
test
add
in
sti
cmpsl
inc
fsubr
add
inc
jmp
add
add
cmp
icebp
mov
bound
mov
sub
std
repz
fucomi
xor
fndisi(8087
imul
movsb
pop
mov
lods
clc
pushf
xor
cmp
out
andb
push
dec
adc
inc
fdivs
pop
ret
sub
orb
mov
jmp
jns
or
dec
fildl
ljmp
sbb
add
add
aas
roll
xor
pop
add
scas
inc
fadds
jmp
mov
fildl
adc
ret
movsl
sarb
aas
add
in
xor
mov
out
fildl
jmp
rcl
jge
iret
flds
orl
add
pusha
insb
std
call
pop
jns
movsb
fisttpll
pop
out
sbb
add
add
scas
mov
out
cmc
add
mov
dec
dec
cld
fists
les
int
stc
add
pop
cld
add
gs
cmpl
js
addb
and
adc
stc
and
iret
inc
inc
in
fldl
mov
ret
rol
lods
stc
mov
mov
add
add
std
cmpb
mov
into
ret
sub
mov
add
mov
sub
mov
inc
lds
sbb
add
lock
in
inc
popf
std
push
daa
or
mov
mov
out
push
pop
cmp
shl
jl
push
add
inc
pop
or
mov
iret
cltd
test
add
repz
mov
cmp
push
add
lea
cwtl
xor
mov
lcall
loopne
fmull
cmp
test
add
fucomi
mov
mov
and
mov
pop
in
mov
test
arpl
inc
sbb
les
add
scas
loopne
lds
and
xchg
scas
je
adc
sbb
dec
sub
mov
push
cli
add
movsb
dec
stos
ds
pop
push
cli
push
fsubrs
scas
jle
lock
fildl
insb
in
add
cmpsl
add
cmp
or
mov
push
mulb
cwtl
loop
cmp
add
add
add
movsl
or
pusha
lret
push
rcl
sub
call
andl
js
std
jno
sub
cmp
cmpsl
inc
filds
jg
lods
clc
call
inc
fs
sbb
lock
push
and
inc
in
fldl
add
xchg
add
aam
add
adc
jmp
pop
aas
pop
dec
cmc
jb
bound
movsb
fidivrs
fldl
bswap
fdivrp
dec
nop
daa
int3
roll
push
clc
push
jne
push
iret
fisttpl
pop
and
lret
xlat
jl
lods
sbb
push
adc
mov
mov
ljmp
inc
or
jp
or
out
js
cltd
mov
add
add
mov
add
aad
add
adcl
inc
and
addb
mov
mov
inc
or
jns
mov
jns
push
in
add
add
aaa
dec
jo
sbb
std
incl
test
mov
ret
or
pop
sti
cmp
jno
movsl
mov
jmp
dec
add
add
pop
mov
mov
arpl
add
sbb
jmp
sub
in
out
pop
std
push
cmpsb
xchg
nop
mov
and
sti
mov
call
cmp
xchg
inc
adc
ljmp
pop
sub
jecxz
push
fldl
jbe
add
add
sbb
test
rol
pop
cmp
stc
iret
int
andb
scas
mov
xchg
adc
pop
mov
inc
stc
xor
imul
aad
mov
add
sub
push
fwait
jmp
lods
cmpsl
add
inc
push
or
mov
adc
bound
loop
cld
scas
inc
push
roll
and
add
mov
jns
mov
pusha
aas
push
push
lds
jle
jge
aad
add
pop
or
mov
add
je
daa
lahf
fldl
lods
sbb
mov
inc
jne
es
mov
orl
pop
cmpps
lea
xchg
push
lret
cmc
add
pop
xlat
pop
in
or
add
add
sbb
inc
daa
lahf
or
cld
pop
aaa
add
lret
scas
and
rclb
cmc
mov
push
stc
decl
mov
out
into
fldl
subl
add
mov
add
mov
lret
jns
or
add
mov
mov
push
adc
inc
cltd
test
xor
jae,pt
xchg
ret
in
jp
stc
loop
fnstcw
leave
cmc
ds
mov
add
jle
std
cmpb
fs
mov
lret
add
iret
std
jae
sub
in
mov
inc
mov
inc
bound
cmp
loopne
aad
into
mov
inc
daa
and
sbb
std
rol
mov
call
lds
add
fs
add
fucomp
add
pop
mov
cmp
push
ljmp
fsubr
add
mov
xor
mov
mov
add
fucomi
addb
sub
aas
popa
push
mov
test
or
fs
stos
add
mov
add
cltd
or
cmpsb
cmp
jmp
les
inc
cmp
cmc
add
cmp
jge
es
push
pushf
inc
movsl
orl
fnstcw
cs
mov
fildl
push
lahf
add
mov
jne
mov
mov
pslld
iret
mov
add
in
mov
enter
cwtl
out
jle
jl
jno
mov
and
out
out
add
pop
lods
and
fucomp
jmp
add
bound
xorl
orb
push
clc
lods
sbb
setns
add
and
add
inc
push
stc
jmp
pop
in
mov
cmpsl
jle
xchg
add
in
add
sbb
mov
mov
inc
dec
dec
mov
fisttps
xchg
or
into
dec
sbb
mov
xorl
dec
mov
dec
jns
mov
push
pushl
inc
lcall
add
pop
cmp
test
jne
add
ds
and
cli
mov
sub
hlt
out
adc
add
add
mov
add
stc
addb
add
ret
out
cmp
aam
inc
mov
mov
mov
in
js
mov
out
adc
mov
sbb
mov
sub
test
cmp
pusha
stc
dec
push
adc
pushf
les
mov
out
add
add
inc
jmp
push
push
fcmovnbe
jg
add
stos
call
jl
mov
jl
jg
sub
sahf
jp
mov
push
cli
add
mov
cmpsl
sti
cmp
jno
enter
mov
cmpsb
test
adcl
aad
out
jge
add
aad
mov
pop
cmp
sbb
push
mov
xor
add
jg
or
or
add
leave
add
xor
fidivs
pop
jmp
subl
add
mov
fldt
outsb
std
enter
movsl
notl
mov
lahf
notl
daa
pop
bound
sub
inc
outsl
test
mov
and
fimuls
dec
add
add
movsb
fidivrl
pop
ret
xchg
out
lea
sahf
and
fiaddl
add
aad
add
aaa
add
fimull
mov
push
dec
cld
fbld
loopne
pop
les
in
jmp
add
dec
divb
dec
pushf
maskmovq
push
fcmovb
loopne
dec
dec
and
inc
inc
inc
inc
testl
fwait
bound
push
adc
add
add
add
flds
shll
adc
outsl
bound
adc
incb
aam
lock
sub
imul
add
dec
xor
cld
mov
mov
or
orb
lods
int
cmp
pop
pushl
mov
mov
mov
int
cmp
push
xor
test
jno
add
cmp
mov
sub
hlt
imulb
gs
addb
add
add
ss
lds
das
aam
cld
mov
mov
mov
in
clc
test
add
push
jns
mov
sbb
sub
cmc
push
test
inc
xlat
jo
insb
push
adc
pushf
mov
push
les
push
insb
pop
mov
xlat
jg
fsubr
add
gs
xchg
call
popa
sbb
stos
les
jp
mov
dec
sbb
dec
inc
pushf
jmp
sbb
sti
inc
push
mov
rcrb
cmpsb
adc
fldl
in
out
std
xlat
add
shrb
push
or
push
mov
xor
or
add
add
insl
subl
pop
daa
ficoms
sysret
lret
jecxz
test
mov
fisttpl
sub
or
bound
inc
sbb
add
mov
pushf
outsb
sub
mov
inc
pop
imul
iret
pop
xchg
jmp
fildl
push
mov
cmpsb
rorl
in
addr16
clc
out
sub
mov
cmpsl
scas
add
fiadds
roll
add
test
out
mov
testl
and
add
add
sub
dec
loopne
stos
out
pop
mov
push
shr
repz
lret
xlat
sahf
ret
fiadds
psubusw
call
xor
and
sub
dec
sub
or
mov
rcrl
daa
lods
daa
mov
add
mov
push
mov
or
inc
push
and
inc
inc
dec
xchg
cld
shr
test
add
test
fiadds
lock
test
ljmp
ja
xchg
mull
data16
shll
mov
test
stos
xchg
std
mov
gs
add
push
push
add
xchg
cmpb
addb
ret
add
fsubr
test
fs
sub
mov
sbb
fisubl
insb
cld
loopne
add
cwtl
jmp
adc
dec
jmp
and
ret
imul
fcmovnbe
xchg
fucomi
add
push
jmp
notb
stos
test
add
jg
jno
push
and
cmp
or
mov
and
mov
jnp
inc
mov
jae
sbb
les
mov
out
and
add
mov
cmc
add
dec
and
jb
nop
mov
leave
pusha
inc
mov
dec
sbb
jo
mov
sub
negb
cmp
push
loope
add
add
jle
push
mov
push
mov
jle
ljmp
mov
or
xor
xchg
mov
jmp
mov
mov
mov
out
add
mov
pop
cld
and
mov
or
push
clc
fstps
into
push
add
addl
add
call
flds
lahf
mov
je
bound
xchg
mov
test
xchg
popa
add
les
stc
ljmp
add
jl
insb
popa
dec
call
sbb
jg
fbstp
push
pusha
addr16
mov
leave
mov
xor
mov
add
add
dec
inc
add
mov
add
ret
xlat
lock
js
ss
xchg
stc
shr
inc
xchg
mov
or
sysenter
push
jl
xchg
fildl
lock
lods
dec
cmp
or
std
jl
mov
jae
or
fbstp
js
call
add
add
out
adc
out
mov
push
int
xor
sub
mov
pop
cltd
sub
arpl
repnz
or
icebp
add
jmp
or
bound
push
jno
pop
pop
imul
sbb
ret
pusha
mov
inc
sbb
mov
add
pusha
nop
sbb
mov
lds
add
add
sbb
adc
icebp
out
mov
pop
add
out
faddl
cs
call
mov
flds
test
push
sbb
stos
mov
mov
jmp
mov
movsb
add
mov
outsb
out
adc
in
repz
mov
pop
ret
cmp
outsb
push
xor
add
add
negl
pop
fnsave
stos
pop
mov
cld
jecxz
jno
xchg
imull
jno
ffree
cld
jecxz
jle
rolb
aaa
mov
add
rolb
add
xor
mov
xor
fcom
xor
cmpsl
aam
add
aad
add
xor
stc
aad
add
aad
add
add
add
stos
xchg
add
add
fwait
ss
fwait
ss
popf
add
sahf
add
cmpsb
ss
mov
add
mov
add
aad
add
aad
add
cmp
jno
dec
int3
mov
in
jmp
lock
inc
mov
cmp
mov
add
das
xor
sbb
mov
xchg
testl
in
jp
ds
or
movsl
std
shlb
jp
ds
or
jnp
add
mov
fistpll
add
cmp
stc
ret
pop
jg
add
sub
ds
jno
ds
mov
in
inc
cmp
test
in
jae
lret
pop
add
add
gs
pop
sti
sub
push
loopne
in
sbb
adc
daa
aad
inc
and
aad
sub
shll
lods
dec
stc
lahf
lods
dec
icebp
lahf
movsl
dec
or
push
or
sbb
jle
pop
add
mov
arpl
sub
je
mov
je
sub
popf
adc
je
mov
cmp
push
call
add
movsb
inc
xlat
popa
mov
or
cwtl
stos
sub
test
and
cmp
adc
lahf
xor
add
jg
movsb
mov
jp
mov
sub
cmp
or
jecxz
cltd
cmp
inc
or
mov
cli
cmpsb
adc
or
js
shrl
lahf
mov
add
jp
lods
sbbb
cltd
dec
lea
cmp
push
jmp
call
adc
cmpsl
sub
fcmovnu
add
in
or
mov
dec
push
stc
inc
push
out
and
fcomip
call
ror
jle
pop
fidivrl
add
mov
or
sti
xlat
add
scas
jmp
mov
add
ret
xor
jae
sub
xlat
jl
push
add
xor
jae
and
add
add
movsb
xlat
and
loopne
mov
call
fiaddl
mov
inc
add
cmp
outsl
add
adc
inc
mov
fdivl
add
xor
inc
mov
test
sub
std
test
add
add
stc
dec
mov
jl
or
lods
add
mov
test
test
das
mov
jge
xor
xor
inc
mov
fdivl
adc
xor
inc
mov
test
cmp
sbb
mov
inc
ds
mov
push
cltd
sbb
push
loope
orb
cwtl
dec
ret
add
add
sub
enter
mov
adc
mov
dec
iret
ret
pop
lret
cmp
inc
pop
in
bound
call
mov
sbb
addb
jmp
xchg
dec
ret
inc
mov
imul
mov
add
mov
int
adc
imul
add
add
dec
and
adc
orb
add
int
xchg
jns
sbb
out
jmp
int
xchg
pop
lahf
sbb
push
mov
roll
dec
and
mov
dec
in
stc
jg
or
xchg
add
mov
mov
imul
mov
dec
sub
mov
add
gs
dec
dec
and
sarl
add
or
movsb
xlat
and
push
arpl
jmp
mov
push
fistpll
repz
movsb
int3
std
pushf
add
inc
add
and
std
pushf
adc
inc
add
cld
clc
add
add
dec
sub
mov
stc
call
adc
jno
or
roll
add
loop
inc
loopne
rcrl
cli
shl
jbe
push
loopne
add
lahf
testl
mov
imull
fdivr
insl
push
sub
jge
sub
mov
ljmp
ljmp
rcll
stc
adc
into
in
fidivrs
add
jl
cmc
sub
add
roll
push
std
je
dec
rcr
jp
repz
int3
jns
js
testl
aas
or
std
ss
je
jo
idiv
idiv
jl
mov
fucomi
add
fcmovnu
jns
push
flds
iret
push
imul
call
add
xchg
jl
pop
sub
add
push
addb
add
or
add
sti
jns
push
stc
xchg
mov
outsl
inc
ljmp
outsl
fldl
mov
aaa
iret
add
fucomi
jl
dec
testl
iret
fucomi
shll
xchg
inc
or
movsl
inc
stc
xchg
add
ja
bound
push
jmp
repnz
jne
sub
jmp
add
add
and
ret
xchg
fildl
in
repz
scas
jno
filds
jmp
mov
out
scas
notb
xchg
fsts
mov
and
jmp
filds
jmp
mov
add
enter
daa
or
mov
dec
push
jle
dec
push
xchg
adc
rcrb
or
orl
add
cwtl
ficomps
adc
das
pushf
adc
mov
cwtl
call
push
xchg
push
rcr
add
roll
jge
sub
xchg
push
jle
imul
dec
or
mov
das
or
pop
cmpsl
add
ljmp
cwtl
jle
sub
int3
mov
mov
add
add
or
cmpl
jl
and
decl
lods
sti
fcomp
inc
in
push
xor
pop
test
test
movl
cld
push
push
add
je
xchg
sti
jne
je
xchg
cld
ljmp
je
xchg
cld
call
je
xchg
add
xor
stc
jne
leave
je
test
rolb
sti
rorl
add
adc
fistl
stos
test
add
fsubr
add
jno
rcr
jl
jae
sti
test
sbb
fidivl
rcl
fs
cli
decb
dec
and
add
add
ficomps
jnp
push
imul
movsl
xchg
mov
sbb
aas
xchg
repz
or
jp
mov
jp
jnp
aaa
sub
push
das
dec
fsts
and
out
call
adc
xor
mov
stos
add
ljmp
adc
mulb
add
imul
lods
rcr
insb
sub
fisttpl
push
adc
repnz
adc
loop
fldt
inc
push
jmp
testl
andb
or
mov
fildl
mov
test
bound
jno
add
or
sti
test
subl
or
add
add
add
cltd
imull
lahf
inc
out
sub
push
or
mov
pop
inc
sti
call
pcmpeqw
fadds
jae
filds
add
mov
sub
enter
jg
jge
pop
xchg
iret
cmovnp
divb
jp
adc
push
or
enter
jmp
jno
adc
aas
mov
add
inc
and
mov
fadd
mov
jno
ss
or
in
adcl
xorb
cli
mov
stc
or
jns
ret
add
xor
mov
push
add
jae
aad
or
add
mov
jnp
or
test
add
clc
and
mov
push
jge
xor
aas
divl
inc
loope
mov
cmc
popa
mov
aad
add
gs
leave
jmp
icebp
loope
push
pusha
call
xor
adc
mov
stc
iret
cmp
call
imul
add
sbbl
aad
jge
fucomi
js
fiadds
mov
call
push
mov
jg
shlb
imul
out
sub
aaa
mov
cmpl
shrb
mov
repnz
xlat
pop
push
cmc
mov
ljmp
mov
aad
jae
fildl
scas
push
mov
jmp
add
add
pop
sub
scas
mov
pop
jne
adc
mull
jo
push
xchg
push
insl
jge
mov
jge
sub
or
sub
jge
mov
mov
pop
sub
add
xchg
or
add
mov
sbb
out
pushl
adc
sub
add
sbb
std
jmp
jle
inc
daa
fmuls
xchg
xor
add
mov
sub
add
lods
adc
adc
add
outsl
inc
adc
aad
xchg
mov
in
idiv
movsb
fcomi
push
nop
loope
inc
and
mov
adc
mov
sbb
bound
and
je
bound
or
cmp
clc
loopne
mov
jg
add
pop
xadd
sub
lds
out
andl
add
pop
jp
mov
add
add
mov
dec
jnp
sub
loopne
lret
mov
jp
add
pop
out
push
jnp
lds
shl
add
sbb
shll
or
inc
out
add
sbb
in
into
push
mov
cmp
push
mov
push
jns
scas
fucomi
jp
outsl
ljmp
cmc
sbb
adc
jns
sar
jl
aas
iret
add
push
mov
pop
stos
cmc
arpl
mov
push
insl
or
add
add
inc
testl
cmp
or
cmp
jge
insl
push
aaa
stc
mov
add
into
fildl
jmp
es
mov
rolb
pop
ficoms
mov
mov
cli
rorb
adc
pusha
jge
pusha
lock
adc
mov
pop
mov
in
rcll
add
push
jmp
add
push
xchg
mov
lods
rorb
jmp
push
jmp
pusha
lcall
or
push
imul
push
stc
mov
ljmp
das
xor
sarl
popf
add
cmpsl
inc
out
mov
adc
xchg
add
andl
pop
mov
roll
add
movb
or
cmp
pop
push
jl
sbb
cmpb
jmp
pop
adc
jo
mov
dec
or
adc
in
jnp
aad
adc
pop
daa
jne
add
add
stos
mov
or
push
popa
bound
cmpb
add
mov
test
jge
outsl
out
mov
addl
mov
test
and
inc
in
sahf
adc
popa
out
mov
xor
jmp
aad
test
jl
and
add
add
mov
test
in
or
inc
shrb
cwtl
mov
std
lds
inc
fdivrl
scas
fucomi
mov
add
mov
arpl
call
add
loopne
pop
aaa
xchg
pushw
pop
inc
psllq
dec
xchg
cli
mov
mov
xor
mov
jecxz
mov
arpl
push
jp
or
xor
add
arpl
mov
call
xchg
call
vpsubw
add
add
in
fwait
iret
fucomi
mov
xor
jmp
inc
push
fsubrp
push
into
mov
lds
push
mov
divl
loope
aad
pop
xchg
xor
popf
test
rorl
rolb
cmp
pusha
out
aaa
adc
mov
into
add
rol
add
mov
loop
popa
inc
jns
push
jbe
clc
add
add
fildl
notb
shl
fldt
lock
adc
mov
in
jns
loope
jmp
subb
inc
lock
nop
dec
jne
decl
adc
aam
adc
mov
jle
nop
addr16
or
lock
push
movsb
fmull
mov
imul
adc
add
add
test
lea
icebp
mov
cmp
fs
cld
inc
gs
jmp
cmpb
jmp
loopne
pushf
cmp
and
add
pop
test
xchg
adc
cwtl
add
ds
push
jge
jp
push
inc
iret
jno
out
arpl
jecxz
jnp
mov
or
add
popl
add
popa
add
test
cmc
fwait
adc
cld
out
or
xchg
adc
test
mov
mov
test
in
pop
ficomps
test
jge
mov
bound
pop
test
pusha
mov
mov
jae
add
add
add
lock
mov
and
push
xor
add
fucomip
add
les
pop
je
test
or
shrl
and
mov
fs
mov
fucomi
mov
jbe
pop
xor
push
add
xor
jbe
pushf
bound
sbb
add
and
mov
leave
add
inc
or
arpl
xor
jmp
mov
cs
mov
and
jb
jno
std
lret
pop
nop
dec
test
imul
push
popf
pusha
lcall
mov
mov
xor
jmp
scas
jnp
lock
xor
jmp
dec
bound
mov
pop
mov
jne
mov
push
jle
loop
cmpsb
adc
push
adc
adc
push
or
fmuls
adc
in
scas
push
aam
jl
clc
arpl
pushf
sti
mov
out
xchg
pusha
insl
idiv
movsl
adc
inc
pop
jne
sub
mov
sbb
add
xchg
fcomp
adc
loope
pop
pop
mov
rcrl
mov
sub
mov
insl
idiv
xlat
pop
testb
fs
fwait
mov
test
mov
pop
or
push
xchg
add
inc
dec
or
add
decb
mov
dec
in
ljmp
test
stc
insb
mov
add
add
xchg
adc
ds
movsl
push
inc
hlt
xor
xchg
adc
lods
in
call
and
in
jp
inc
add
adc
stc
movsb
das
repz
add
mov
fucomi
add
je
fstpl
test
jne
in
add
jle
int
stc
icebp
jno
lret
add
add
sub
iret
fucomi
mov
jb
lock
dec
popf
scas
fucomi
mov
jae
mov
dec
dec
repnz
pop
hlt
loopne
pop
aaa
xchg
ss
pop
stos
push
pop
gs
scas
fucomi
mov
testl
das
pop
add
mov
pop
add
xchg
xchg
pusha
lock
xor
jmp
add
add
mov
mov
notb
out
inc
adc
divb
inc
loope
fs
jge
fildl
jb
addl
je
sbb
sbb
jmp
jbe
testl
jp
lods
add
cmpl
mov
mov
mov
jno
fimuls
daa
add
mov
mov
mov
add
dec
into
add
push
out
adc
bound
psrld
es
int
repz
push
cld
mov
fadds
add
dec
jbe
es
adc
adc
sbb
fbld
jl
jmp
cs
pop
aam
daa
cli
jl
in
jp
nop
cmp
idiv
fisttpl
mov
test
sbb
adc
fwait
dec
lcall
add
in
imul
fs
adc
call
clc
inc
sbbb
push
addr16
ljmp
lea
lods
mov
cs
imul
addb
add
test
outsb
push
mov
add
ret
clc
or
idiv
cli
in
mov
addb
xchg
push
push
movb
add
add
rolb
idiv
ret
shlb
xor
add
or
xchg
cwtl
push
xchg
add
icebp
xchg
fucomi
xchg
push
xor
mov
mov
int3
jae
sbb
call
xchg
lods
shll
jno
outsb
lock
mov
call
pop
add
add
loopne
inc
je
ret
add
xchg
jo
faddl
mov
fildl
cmp
or
mov
add
cld
fisttps
ret
mov
cmc
mov
ffree
dec
push
out
mov
xor
add
push
push
fsubr
sbb
testb
idivl
push
push
loope
iret
adc
das
adc
mov
add
repnz
js
mov
mov
push
xchg
dec
adc
xlat
mov
push
mov
mov
lahf
in
rorb
mov
push
mov
lret
sub
outsb
mov
xchg
out
mov
ja
add
xor
add
add
psrld
jle
add
movsb
lea
mov
arpl
dec
push
adc
push
mov
cmp
idiv
iret
nop
adc
push
jle
ljmp
jge
sbb
bound
jmp
adc
and
arpl
jno
out
jp
mov
ljmp
out
loopne
mov
pop
popa
mov
add
sub
xlat
idiv
mov
add
clc
add
jmp
mov
ljmp
ret
scas
mov
addb
lods
addb
cmpsb
int
jnp
imul
lret
scas
fwait
jmp
mov
push
or
push
mov
add
movsb
jne
mov
add
int3
jne
adc
add
inc
stos
icebp
or
ljmp
push
inc
adc
inc
test
faddl
xor
jecxz
cmp
lcall
fwait
inc
shr
add
add
add
jo
iret
fucomi
add
call
rolb
and
arpl
push
add
add
hlt
mov
push
cmp
repz
sub
push
add
add
je
pop
mov
jg
sarl
std
sub
add
rolb
jmp
ss
into
push
push
sbb
adc
mov
adc
jno
aam
popa
sub
sbb
cmp
lret
andl
add
add
pusha
push
icebp
rorl
xlat
mov
fs
mov
std
or
int
jmp
xchg
push
mov
mov
push
ret
sbb
mov
lods
stos
xchg
xchg
cvtpi2ps
fidivl
repnz
aam
aas
add
and
jae
jae
cmp
sarb
cli
pop
add
add
or
push
add
xchg
fnsave
mov
mov
add
movsl
add
push
fnsave
sub
add
fs
mov
bound
add
inc
and
cmp
adc
rol
ret
insb
filds
add
int3
fsubrs
push
mov
pop
in
out
adc
or
and
out
in
lcall
add
add
das
inc
int3
stc
ss
int3
icebp
std
jne
shll
dec
ds
jb
jns
cwtl
gs
stc
test
jmp
gs
jb
test
ljmp
test
add
xor
xchg
adc
stos
cmc
jnp
in
lods
pop
ss
test
cld
lcall
cli
icebp
add
add
add
xchg
cmp
inc
jnp
and
add
xchg
xchg
aas
add
movsl
aas
icebp
xchg
fs
into
call
sti
and
out
inc
and
add
adc
jnp
int3
ja
scas
push
and
inc
or
add
inc
mov
repz
xchg
iret
cmc
inc
adc
jl
iret
jb
add
add
xor
iret
sti
cmp
fucomi
jp
sub
add
cwtl
sub
aas
icebp
xchg
add
mov
fidivs
je
mov
lret
mov
leave
pop
push
fdivs
push
bound
dec
bound
jg
jno
int3
imulb
xchg
pop
jp
pop
or
jae
imul
sub
add
jne
jp
testl
shrl
add
mov
push
arpl
and
mov
mov
lret
ss
mov
es
sbb
aad
mov
arpl
clc
pop
fildl
mov
pop
pop
and
int3
pop
loope
xor
push
lea
filds
add
rcl
test
popa
mov
push
add
mov
add
add
out
inc
xor
jbe
xchg
xchg
jecxz
cmp
js
mov
lret
fiaddl
mov
and
mov
popa
mov
and
call
mov
std
mov
shl
jle
ss
and
int3
pop
loop
xor
jle
sub
push
mov
inc
or
imul
fidivl
stc
mov
push
leave
jb
mov
scas
stc
fcmove
add
mov
adc
cmp
jae
sbb
mov
add
xor
outsl
pop
jb
xchg
push
inc
test
mov
jp
data16
into
mov
inc
xchg
jge
and
call
enter
add
mov
jo
shlb
lods
adc
add
dec
or
add
shr
add
call
clc
cmp
iret
call
fwait
iret
fucomi
xchg
out
jecxz
or
pop
cmc
ret
lea
out
jp
pop
je
mov
pop
cmp
xchg
arpl
dec
push
mov
add
int3
sbb
je
pop
arpl
add
add
aas
js
arpl
push
ja
jle
mov
add
or
jmp
push
fadds
jmp
mov
or
jmp
sbbb
cmc
testl
bound
repnz
bound
jb
pop
push
jmp
xlat
add
rorl
mov
into
add
add
add
pop
mov
add
jle
ret
bound
pusha
pusha
insl
push
mov
or
jmp
es
add
inc
xchg
mov
mov
push
mov
jl
in
adc
dec
adc
fimuls
mov
jge
push
mov
cmc
testl
pop
sbb
mov
sti
adc
loopne
mov
rcr
add
lret
loop
jnp
stc
mov
imul
pop
pop
dec
adc
fnstsw
pusha
idiv
pop
and
mov
pop
push
or
ljmp
jmp
or
mov
adc
js
call
cmpsl
cs
or
js
ss
fiadds
jae
add
imul
or
ja
add
add
insl
add
dec
icebp
jp
mov
pusha
dec
stc
xor
or
out
mov
ds
cli
mov
jb
add
jns
mov
mov
lcall
testb
mov
loop
cmp
cmp
int3
add
movsl
adcl
mov
loop
mov
sub
add
add
sbb
loope
pop
push
lret
call
pop
rcrl
sub
lret
jns
leave
call
jbe
sbb
add
xor
add
fsubl
xchg
lret
adc
pushf
insb
pop
mov
fcompl
iret
fucomi
test
mov
ss
push
push
cld
cmp
jp
insb
dec
add
add
fldl
add
or
mov
pop
nop
in
push
xlat
pop
loopne
and
jmp
inc
lret
mov
push
popa
and
push
ja
es
mov
adc
bound
mov
addps
dec
mov
enter
test
stc
aas
push
repz
pop
adc
mov
push
mov
stos
pop
negl
data16
add
add
add
push
incb
stc
mov
push
add
and
add
dec
xchg
addb
lods
insl
idiv
fildll
push
add
les
mov
mov
mov
loope
mov
pop
jmp
loopne
loope
push
inc
loope
adc
jb
addr16
jle
aam
add
add
fwait
pushf
sti
add
flds
jle
loop
xorl
je
add
stc
adcl
inc
shl
sbb
into
cmc
jmp
mov
flds
push
mov
dec
test
call
ss
lcall
pop
add
ds
jl
jns
out
mov
std
inc
xor
xor
mov
les
add
add
jns
jno
jmp
adc
push
out
mov
out
pop
cmp
out
jae
add
xor
testl
mov
inc
mov
jb
test
xchg
rcr
dec
fnstsw
fiadds
pop
xor
shlb
iret
fucomi
hlt
sub
xor
bound
ret
add
add
push
adc
xchg
out
inc
pop
fs
cmp
xlat
add
lret
sarb
lahf
mov
cmp
pop
push
push
mov
fucomi
pop
mov
rorb
scas
fucomi
adcb
jno
or
call
js
add
add
fildl
jmp
jg
jmp
insb
add
add
fs
mov
fildl
jmp
adc
jbe
and
adc
add
aad
mov
mov
data16
jmp
push
add
sbb
sub
bound
pop
loopne
xchg
adc
mov
out
add
test
imulb
aaa
out
add
movsl
or
add
cmpsl
fildl
add
add
out
mov
test
pusha
add
jne
addr16
add
mov
adc
mov
popfw
fs
shll
mov
aam
aaa
add
call
xlat
mov
inc
call
jo
jl
jl
lock
jmp
pop
pop
popl
ret
fsubrs
out
add
add
inc
mov
out
push
mov
add
jmp
fnsave
xchg
mov
push
add
cmp
cs
mov
sub
stc
mov
mov
stc
mov
push
stc
mov
arpl
pop
movb
push
ss
pop
adcl
mov
inc
loope
out
cmp
adc
add
test
inc
add
mov
cli
enter
mov
stc
mov
fsubrl
outsl
cmp
add
loopne
fistl
inc
enter
fucomp
das
or
rcr
cmp
mov
fwait
add
pop
leave
cmp
xchg
or
pusha
mov
add
add
mov
fcmovnu
jns
fsubl
add
fdivl
adc
mov
add
fsubl
adc
jmp
xor
xor
outsl
mov
add
fsubl
adc
in
adc
xor
dec
mov
add
adc
mov
add
adc
mov
loope
push
add
lods
lea
rcll
lods
lea
rorl
int
push
repnz
add
add
mov
rorl
lods
mov
rorl
lods
mov
rorl
int
push
test
add
scas
mov
mull
movb
call
fcomi
inc
rcrl
ds
in
fisubs
pop
jmp
jge
add
push
jge
fildl
repz
movl
add
add
jmp
xchg
in
add
push
andl
mov
out
push
xchg
fldz
add
mov
cmpsb
fldz
add
mov
xchg
fldz
add
mov
push
out
push
pop
fldz
add
out
push
push
out
add
out
push
pop
fldz
add
fldz
add
out
push
sub
out
push
push
fldz
add
add
fsubp
mov
psubusw
add
out
push
mov
cli
push
mov
dec
add
mov
ds
mov
dec
add
mov
inc
ss
push
lret
or
aaa
stc
mov
cmp
mov
repnz
hlt
jge
cmp
cmpsb
int
inc
cmp
mov
inc
xor
test
or
add
aam
or
inc
mov
testb
mov
cld
jns
mov
or
in
imul
mov
pusha
cmpsb
or
fsubr
cli
popa
stc
mov
fisubrl
loopne
sub
and
cmp
cmpsb
add
fwait
and
jno
movsl
push
mov
push
aad
test
xor
pusha
xor
lret
call
cmp
add
fcmovnb
inc
cmp
in
add
inc
jmp
or
stc
or
cmc
out
pop
jns
mov
adc
shlb
and
inc
lds
pusha
inc
clc
std
jno
rolb
repz
mov
orl
pop
lds
flds
jmp
mov
add
jl
mov
aaa
enter
mov
jo
call
out
mov
scas
aaa
mov
cmc
xor
imul
hlt
inc
fwait
add
hlt
in
cmc
jno
cmp
jmp
mov
sub
jmp
das
push
cmp
jae
mov
push
cmp
setae
idivb
pusha
cmp
jne
gs
and
mov
add
xchg
and
add
add
or
scas
clc
mov
push
incl
in
mov
popa
xor
fldt
jne
popa
xor
mov
andl
jmp
mov
fidivs
out
test
xlat
test
jle
cmpb
or
idiv
push
xchg
dec
mov
xor
mov
sbb
mov
add
ss
pop
ss
ret
test
or
or
cmp
sbbl
clc
mov
cltd
inc
add
inc
enter
adc
aaa
lret
aas
xor
loope
inc
inc
xlat
out
sub
ss
loop
jp
loope
mov
std
lods
test
cmc
test
push
jne
repnz
mov
add
add
cli
fdivrs
inc
mov
inc
mov
fucomi
mov
fucomi
add
fucomi
add
fcmovnu
add
fcmovnu
add
fisttpl
add
add
mov
sbb
push
fdivrs
mov
push
sarb
add
cwtl
push
mov
cmp
lahf
cmp
cmp
cmp
cmp
cmp
jbe
push
pop
outsb
test
data16
push
aaa
pop
hlt
push
ja
in
divl
inc
aas
inc
cmp
cmp
adc
out
shrl
adc
pop
ds
pop
dec
lds
push
dec
flds
add
inc
mov
ret
aad
xchg
shr
call
add
or
xchg
push
inc
or
inc
movsl
push
pusha
dec
sti
or
sti
add
jmp
sahf
mov
add
fildl
mov
bound
and
pusha
inc
sub
aas
addb
dec
mov
dec
jle
mov
add
lahf
jle
sub
push
and
movsb
jo
addr16
cld
sub
ficompl
push
xchg
sbb
lods
jl
pop
fwait
in
popa
jle
sbb
mov
adc
out
lock
xchg
fiaddl
add
call
inc
mov
mov
daa
idiv
out
jl
mov
cmp
mov
inc
add
shr
int
in
repnz
test
and
add
add
push
lcall
add
popf
cmp
mov
stos
mov
cmp
lahf
jae
sbb
imul
add
mov
cmp
dec
sub
dec
inc
sub
addb
incb
add
cmp
iret
incb
add
ljmp
add
add
fucomi
repnz
lods
adc
in
inc
call
lock
popa
in
cmp
ret
push
or
gs
scas
repnz
int
adc
jnp
call
jl
fucomi
mov
and
adc
push
stc
jmp
pop
bound
js
mov
mov
add
xor
cmpb
push
inc
cmpsl
add
sub
xor
inc
mov
mov
insl
clc
std
jno
clc
add
push
xor
roll
push
in
jns
adc
mov
pop
loope
bound
mov
mov
inc
push
subb
push
loop
add
add
fildl
jmp
ja
mov
add
pusha
mov
and
aam
jge
fildl
bound
clc
sbb
pop
div
mov
fidivrs
pop
les
in
xchg
xchg
or
mov
sub
fs
call
add
je
inc
jnp
int3
mov
sbb
add
sahf
inc
jbe
daa
push
inc
add
je
adc
jmp
mov
or
mov
add
in
loope
pop
or
rorl
or
jne
out
adc
decl
test
add
mov
xor
loopne
dec
std
jl
fldenv
mov
or
sub
jb
xor
lock
add
addb
mov
sbb
pushl
movsb
jbe
loope
out
stos
adc
mov
out
pop
push
repz
movsb
inc
adc
in
out
js
mov
and
je
xor
lock
inc
fadd
ss
xchg
mov
movsb
inc
fcoml
push
and
mov
add
add
mov
push
cmc
mov
out
xor
lock
dec
cmp
jle
dec
cmp
sbb
dec
js
cmp
mov
sbb
into
out
fcom
es
mov
sbb
imul
loopne
cmp
jecxz
in
out
mov
popa
and
add
dec
insb
dec
popf
fcoms
dec
add
add
add
outsl
and
in
shrb
adc
pop
ret
mov
stc
lock
mov
jg
mov
cld
or
jmp
fisttpl
inc
mov
jge
mov
shrb
mov
and
out
jg
jmp
int
inc
add
mov
sti
outsb
fstpt
add
pop
add
das
cmp
test
mov
mov
ret
dec
shll
fwait
jl
in
adc
mov
jmp
test
fildl
add
sti
or
mov
call
mov
testl
jo
shrb
xor
cmp
fdivl
push
fildl
mov
enter
add
mov
filds
sahf
aam
pop
scas
adc
mov
je
daa
ret
inc
add
in
mov
sub
push
and
jge
cli
jmp
div
je
lods
jmp
cltd
sbb
lods
jp
xor
mov
jne
mov
xor
mov
push
pop
loope
push
add
insb
mov
mov
add
ret
or
jae
or
push
mov
test
pop
daa
test
mov
mov
add
or
mov
and
int3
adc
cli
or
test
mov
imul
and
add
inc
les
add
fucomi
cmp
mov
fidivl
clc
ljmp
add
inc
jge
mov
fistpl
pop
add
xor
mov
imul
clc
ljmp
int3
add
cltd
fidivrl
mov
xor
push
in
out
push
sbb
mov
lock
pop
push
push
fisubrl
xor
add
int
dec
jge
in
lock
ja
repz
sbb
cmpsl
sbb
push
mov
inc
mov
adc
lea
jmp
mov
mov
inc
jl
mov
shrb
inc
jl
mov
xchg
mov
pop
leave
sbb
lds
add
add
sub
and
xor
add
xchg
stos
adc
pop
jle
add
scas
nop
jle
call
add
pop
lock
adc
or
pop
sub
adc
or
rcrb
or
dec
scas
add
jbe
in
xor
cmpsb
mov
push
inc
sahf
or
inc
jb
pop
pop
cmp
adc
adc
xchg
jae
xchg
je
dec
pop
add
add
aas
inc
push
repz
jno
scas
adc
adc
jae
decl
add
lea
pop
jmp
aaa
adc
add
xor
add
jge
je
push
mov
mov
or
ss
add
test
push
or
test
adc
push
jne
gs
shrb
add
add
inc
inc
lret
sarb
loope
jnp
mov
je
insl
add
ss
add
fldt
inc
lock
js
mov
sbb
xor
lods
daa
push
shr
add
cwtl
jl
mov
mov
cmc
fstpt
out
add
fnstsw
je
sbb
jle
sbb
jge
call
jl
pop
jmp
and
in
jge
jmp
inc
out
mov
add
fucomi
out
xor
frstor
mov
and
aaa
mov
pop
inc
lahf
test
inc
jmp
lahf
add
scas
movl
jmp
push
shrb
mov
or
adc
add
jae
sti
mov
mov
pop
cmp
jmp
sbb
add
mov
nop
cld
fs
aas
dec
in
cli
mov
inc
in
or
mov
out
shll
dec
inc
ds
push
fwait
push
push
adc
in
pusha
mov
inc
inc
data16
add
jo
mov
mov
aam
popf
je
adc
clc
pushl
insl
ss
push
sbb
rolb
dec
inc
in
dec
in
inc
scas
call
aad
add
xchg
add
pushf
inc
in
fiaddl
add
jle
nop
ret
pop
jle
adc
mov
add
mov
pop
xor
inc
clc
int
xrelease
push
add
sbb
pop
jo
sub
xchg
daa
add
jno
add
push
cmp
mov
xor
add
xor
push
mov
ss
mov
mov
test
inc
jnp
cltd
lret
jg
mov
add
add
stc
das
jnp
jbe
bsr
fdivrl
leave
shr
clc
adc
shlb
sti
xchg
fdivr
jp
and
jp
roll
jge
jmp
cmpsl
rol
jl
jmp
fs
inc
shlb
ds
mov
xchg
jb
cli
dec
in
nop
mov
inc
push
clc
add
add
push
sahf
adc
jmp
xor
das
inc
outsb
mov
mov
lock
js
clc
call
sbb
sbb
ds
clc
inc
lods
mov
jnp
add
pop
sbb
mov
aas
cltd
icebp
jmp
inc
imul
mov
jns
xlat
pop
mov
add
mov
add
or
sahf
mov
sarb
fwait
inc
divl
adc
mov
out
shl
push
cmp
dec
sbb
aaa
xchg
cmc
jo
dec
mov
daa
cltd
jmp
in
push
lret
adc
push
cmp
jmp
mov
mov
pop
scas
cmp
and
addl
add
fxtract
mov
aas
ret
scas
or
mov
aas
mov
roll
rorb
jl
cli
add
aas
js
xor
add
popl
clc
insb
incl
in
pop
mov
cmp
or
adc
jae
sub
sahf
out
add
jae
add
stc
incl
add
mov
rolb
into
mov
xchg
pop
jp
cmpl
or
xchg
mov
js
mov
sbb
inc
add
push
jb
adc
pusha
add
add
mov
add
push
jg
aam
add
inc
bnd
pop
xchg
add
inc
in
stc
mov
outsl
fsubrl
int3
pop
stc
lcall
and
mov
popa
mov
enter
push
sbb
cmp
and
nop
and
mov
nop
and
cmp
and
dec
xchg
sub
adc
cmpsb
pop
inc
pusha
push
and
pop
leave
mov
add
idivl
inc
add
ds
cs
gs
ret
lret
sub
cmp
and
aaa
cli
ret
mov
scas
pop
fsubs
adc
mov
ja
out
push
pusha
out
fsubs
adc
lahf
shrl
mov
fucomi
mov
lahf
lea
xor
pusha
mull
pop
adc
mov
add
stc
jl
inc
dec
pop
pop
andb
popf
andb
xor
jb
bound
pusha
dec
icebp
daa
pusha
cli
add
lods
addr16
in
in
in
cmpsb
mov
mov
mov
xchg
sub
jp
sahf
and
faddl
add
or
push
sub
push
test
or
mov
hlt
je
pop
bnd
dec
or
add
out
jo
mov
push
sbb
cmovbe
nop
sahf
aaa
jge
and
adc
aad
lock
sub
mov
fnstenv
inc
ja
mov
mov
int3
mov
mov
int3
pop
cli
push
mov
fildl
push
dec
js
push
mov
ljmp
mov
add
std
inc
movsl
jmp
movsl
jnp
stc
jp
sub
jae
and
sbb
push
and
cltd
add
add
dec
pop
and
mov
ret
jmp
movsl
call
add
and
ret
arpl
test
outsl
jge,pt
inc
repz
jb
mov
inc
add
add
add
fcompl
add
sbb
xor
movsl
jecxz
cli
inc
mov
cwtl
mov
mov
xchg
sbb
pop
je
movsl
hlt
pop
push
ljmp
inc
call
mov
sbb
jns
pop
inc
mov
arpl
push
ss
mov
sbb
add
add
gs
xchg
jae
lret
mov
inc
mov
ror
mov
fnstsw
pop
push
xorl
ljmp
test
cmp
cs
mov
mov
test
dec
rolb
sub
lock
rorl
and
mov
mov
or
test
add
add
cmp
add
pop
in
push
in
xor
mov
mov
out
test
sub
mov
pop
lret
add
mov
inc
leave
or
mov
pop
sub
push
bound
xchg
enter
movsd
lcall
clc
call
dec
and
add
add
aas
add
dec
adc
mov
push
adc
mov
loopne
and
jmp
gs
add
push
pop
mov
sti
sub
and
jle
sbb
push
push
mov
pusha
lret
add
std
jl
cwtl
bound
mov
fmuls
in
fcoms
jl
fnstcw
xor
xchg
cld
adc
jns
std
clc
add
add
enter
sbb
jnp
scas
mov
inc
dec
pop
out
inc
push
stc
push
xchg
adc
sbb
push
mov
add
dec
dec
cs
mov
shr
xchg
dec
push
test
sub
inc
clc
sbb
inc
inc
adc
addl
pop
xchg
add
inc
mov
xor
xor
or
xor
dec
stc
pop
pushf
mov
data16
lret
out
popfw
out
mov
xchg
lahf
call
add
sahf
call
loopne
mov
loope
xor
add
xchg
add
inc
xchg
lock
clc
cld
mov
cmp
shlb
nop
icebp
sub
pop
xchg
sbb
add
scas
add
mov
push
lods
data16
cmp
add
add
call
mov
lods
in
fstpt
jb
fldl2t
jne
fildl
inc
imul
sbb
jne
std
std
sbb
mov
jne
pop
ds
mov
ljmp
les
movb
add
in
cmp
jb
xchg
cmc
imulb
jne
vorps
cs
add
mov
lcall
std
aad
sbb
inc
ud0
aad
sbbl
push
push
cmp
ljmp
and
aad
sarl
pop
pop
out
loopne
lds
push
add
add
fsubl
add
add
and
inc
out
call
push
push
push
fcomps
cld
jl,pt
push
insl
fbstp
mov
pop
ret
test
dec
fdivrs
adc
mov
clc
mov
test
add
dec
int3
add
int3
stc
mov
jl
aad
mov
mov
mov
scas
shlb
clc
mov
add
mov
insl
repz
notl
cld
jnp
pushl
mov
sub
sub
mov
mov
jae
add
mov
push
orb
cli
or
movsl
mov
sbb
xchg
add
jmp
out
mov
jb
pusha
and
adc
fsubl
add
add
pop
mov
sub
cs
sbb
cwtl
dec
add
sbb
xlat
push
lcall
lds
daa
add
cld
jae
xor
pop
bound
pop
aad
xchg
pop
cmp
jmp
rcr
mov
push
loopne
shrl
mov
jl
int3
add
fucomi
sub
repz
shl
add
add
scas
xor
int3
lock
cmp
imul
aas
pop
arpl
xor
or
push
jecxz
movsb
shlb
mov
fisttpll
out
push
lret
xor
push
ss
or
mov
mov
outsb
repnz
mov
add
jb
add
js
mov
mov
in
xor
push
cmp
or
std
jmp
mov
sbb
jge
decl
dec
or
jl
lret
sub
stc
decl
aam
aaa
add
push
push
adc
jg
xor
loope
jge
insl
jle
mov
repnz
bnd
movsb
pop
ds
add
mov
dec
and
popa
ds
loope
jge
insl
jle
xorb
fadds
pop
ds
pusha
dec
and
loop
jne
sub
inc
cltd
push
ror
push
jae
fdivs
loope
xor
int
add
pop
ss
loope
inc
mul
paddsb
xlat
in
inc
xor
mov
xchg
repnz
lock
inc
add
add
repz
or
sub
rdpmc
xor
sub
scas
aaa
dec
xor
stos
in
adc
insl
lods
pop
jg
add
cmp
in
jp
rclb
fldenv
addb
cmp
movsb
cmp
add
add
jmp
push
mov
xor
shlb
pop
push
add
add
add
lahf
push
ficomps
sahf
call
cmp
imul
shlb
lods
add
pop
fisubs
cmc
sahf
call
das
in
call
cmp
rorl
test
add
jecxz
sahf
call
jmp
mov
sub
in
or
jmp
add
add
sahf
subb
jmp
icebp
call
mulb
cli
sub
mov
sub
fsubrl
movb
and
jns
jmp
add
into
into
in
clc
sub
aam
adc
jge
lahf
cmp
insl
shrl
cwtl
sbb
in
pop
out
sbb
add
pop
inc
push
test
pop
and
stos
leave
mov
pop
and
loop
jmp
test
mov
xor
mov
out
int3
sar
out
insl
inc
repz
adc
in
jecxz
and
xor
ja
dec
or
sbb
jne
sbb
inc
enter
mov
adc
or
add
fbstp
or
div
fsubs
testl
mov
test
mov
lods
xor
int3
jns
scas
mov
ret
addr16
xor
mov
mov
inc
cmc
or
in
cli
stos
pop
in
aas
add
jno
mov
stc
insl
inc
int3
icebp
jne
int3
or
je
mov
mov
mov
add
mov
cmp
jl
cld
mov
mov
in
add
test
or
je
adc
inc
int3
jns
sub
jno
and
adc
push
cmc
jl
shll
fidivl
add
das
xchg
mov
mov
push
in
cmp
add
rcl
jae
ret
int3
add
add
stos
loop
test
stos
nop
aam
xchg
lods
ja
add
mov
aas
dec
add
add
mov
gs
dec
call
es
xor
mov
add
mov
int
xor
push
into
test
call
lods
and
adc
fisttpl
in
add
mov
mov
cli
lcall
xor
fcmovnb
bound
stc
adc
out
inc
lds
test
std
xchg
loopne
adc
dec
sub
jb
pusha
ds
sub
repnz
jb
stc
or
sub
mov
lret
add
insl
movsl
inc
add
jge
xor
pop
adc
adc
add
sub
outsl
stc
inc
push
push
sarb
mov
jb
push
sarb
sahf
inc
cld
pop
clc
dec
adc
lea
flds
add
mov
or
and
add
je
pop
scas
repz
push
addr16
lahf
clc
jne
jb
cmp
icebp
and
in
sbb
addr16
add
add
mov
stc
mov
test
lret
jl
xor
add
stos
xchg
and
sbb
dec
jmp
jl
jne
test
sti
cmpb
bound
ja
dec
xchg
pusha
add
out
or
add
leave
cmp
jl
xorl
add
loope
test
es
mov
out
test
repz
lods
adc
sahf
xlat
dec
adc
or
adc
iret
jae
fmulp
jae
fmulp
sbb
jp
sbb
jb
hlt
cmp
sub
adc
sub
test
ret
arpl
cwtl
imull
in
xor
shll
sti
rcr
and
sahf
iret
dec
add
out
mov
jg
xor
fstpt
add
and
add
and
adc
fucomi
add
and
mov
add
loope
jmp
leave
and
jne
loope
jno
loope
jmp
leave
and
loope
loope
aad
loope
jmp
leave
and
xor
loope
jmp
add
add
and
add
add
jno
add
mov
and
es
jmp
and
int3
mov
fwait
add
mov
and
jge
fwait
add
fwait
add
mov
clc
inc
mov
add
fldl
add
clc
jmp
inc
add
inc
add
fldl
add
clc
pushl
mov
add
clc
ljmp
lods
inc
add
clc
pushl
lods
inc
add
add
clc
fisubrs
cmp
repnz
cmp
push
fldl
add
clc
jmp
lods
inc
add
clc
ljmp
push
mov
mov
pop
or
add
add
mov
lods
cmp
mov
xor
add
mov
sbb
int3
xor
pop
int3
xor
pop
lods
xor
push
lods
xor
lods
xor
pushf
lods
xor
mov
xor
test
xor
inc
int3
xor
cmp
xor
cmp
add
add
add
xor
aaa
xlat
xor
and
add
int3
xor
sbb
xor
sbb
call
add
call
add
call
add
lret
aad
call
add
lret
or
call
add
int3
call
add
call
add
int
add
int3
call
and
call
add
int3
call
add
call
add
int3
call
jmp
mov
inc
adc
mov
call
jmp
mov
pop
adc
mov
mov
adc
mov
pop
adc
mov
ja
jmp
mov
add
mov
xlat
adc
mov
pop
adc
mov
daa
adc
mov
sbb
jmp
mov
addr16
mov
outsl
adc
and
test
adc
and
adc
sbb
adc
adc
adc
adc
flds
adc
add
in
std
paddq
add
aam
cmc
shld
shld
sete
icebp
sete
in
movsb
adc
stos
adc
mov
pop
push
fdecstp
adc
adc
pcmpgtb
sub
push
fld
bsr
add
xor
mov
xor
mov
xor
mov
xor
lods
ret
test
add
mov
xor
mov
ret
cwtl
mov
xor
nop
lret
mov
xor
mov
xor
or
add
add
xor
aad
xor
loop
xor
int3
lods
xor
leave
mov
xor
dec
lret
dec
ret
inc
mov
xor
cmp
xor
cmp
fucomi
add
add
int3
call
add
int3
call
add
int3
call
add
int3
call
add
int3
call
add
int3
call
add
int3
call
add
lret
call
add
ljmp
mov
call
add
jmp
add
jmp
add
jmp
add
add
cltd
ljmp
xchg
ljmp
mov
and
jmp
mov
push
or
mov
dec
or
mov
dec
or
mov
inc
or
mov
cmp
jmp
mov
sti
pop
jmp
mov
das
or
mov
daa
or
add
add
pop
or
mov
sub
jmp
mov
pop
pop
jmp
mov
fiadds
push
fisubs
fiadds
ficoms
push
push
fiadds
and
inc
push
and
imul
adc
and
and
adc
push
adc
or
pmulhuw
and
in
sbb
add
add
fisttpll
pop
in
mov
in
inc
sbb
sbb
fistpl
xchg
frstor
sbb
icebp
or
xchg
fucomp
or
mov
add
fdivrl
add
adc
add
or
add
ret
add
mov
add
enter
rolb
mov
add
add
add
lods
rolb
in
mov
add
stos
add
mov
rolb
sub
add
push
int
add
rolb
mov
add
or
add
add
int
add
lods
add
stc
lods
add
pop
mov
out
add
call
call
add
out
add
add
in
out
add
out
add
call
call
add
out
add
out
add
call
call
add
out
add
out
add
out
add
out
add
out
call
add
out
add
out
add
call
call
add
in
jmp
add
add
mov
pop
jmp
mov
leave
push
jmp
mov
push
push
jmp
mov
dec
push
jmp
mov
aas
push
jmp
mov
inc
push
jmp
mov
ja
jmp
mov
push
or
jmp
add
add
xor
or
mov
sub
add
popa
or
ficoml
xchg
ficompl
xchg
fimull
ficoml
fiaddl
push
fimull
push
fidivrl
or
fidivl
or
fisubrl
or
fisubl
or
ficompl
or
ficoml
or
add
adc
or
or
flds
or
fscale
or
flds
or
fprem1
or
fyl2xp1
or
fldln2
or
add
mov
add
mov
add
movb
loopne
add
fdivl
add
aam
add
rol
add
int3
mov
add
mov
add
movb
rol
add
add
mov
add
movb
mov
add
test
add
movsb
movb
mov
lods
add
adc
add
mov
add
movb
add
add
add
mov
call
add
loope
add
loope
add
call
add
out
add
out
add
add
repnz
add
out
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
pop
or
mov
pop
or
mov
add
mov
add
mov
or
mov
add
mov
cwtl
or
mov
int
jmp
mov
pop
or
mov
inc
or
mov
aas
or
mov
aaa
or
mov
outsl
or
mov
addr16
mov
pop
or
add
add
fidivrs
in
orl
aam
in
movsb
fisubrs
movsb
fidivs
xchg
fisubs
xchg
fisubrs
movsb
ficomps
movsb
fisubs
xchg
ficoms
xchg
ficomps
fimuls
ficoms
push
fiadds
push
fimuls
fs
push
ficoms
push
fiadds
push
fimuls
and
cmp
or
xor
or
add
and
sub
or
adc
or
fisttpll
or
add
cmpsl
movb
movl
cld
mov
add
les
add
les
add
mov
add
mov
add
les
add
les
add
mov
add
mov
add
les
add
les
add
mov
add
mov
add
add
les
add
les
add
mov
add
add
mov
add
mov
add
lods
mov
add
les
add
mov
add
fucomi
add
call
add
jecxz
add
call
add
loop
add
jecxz
add
jecxz
add
in
add
add
sbb
loop
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
call
add
in
add
call
jmp
mov
xchg
or
mov
mov
or
mov
test
jmp
add
add
jns
jmp
mov
decl
jmp
mov
push
or
mov
decb
jmp
mov
cli
or
mov
mov
or
mov
push
or
mov
icebp
or
mov
jmp
pop
or
scas
or
mov
add
add
fisubl
or
ficompl
or
or
ficompl
or
ficoml
or
jle
xchg
fiaddl
or
outsb
or
ret
or
or
or
or
or
or
or
or
mov
and
xchg
or
fwait
or
add
xchg
movl
mov
add
add
add
add
jp
add
jbe
add
jb
add
outsb
mov
add
add
movw
movl
add
add
push
movl
add
add
dec
mov
add
add
inc
movl
add
add
movl
add
mov
add
mov
add
movl
call
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
xchg
call
add
call
add
call
add
call
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
mov
insl
or
mov
gs
mov
pop
or
mov
push
or
mov
lea
jmp
add
add
mov
jmp
mov
orl
jmp
mov
mov
jmp
mov
xchg
or
mov
popf
or
mov
lds
jmp
mov
fbld
or
or
pop
or
and
adc
pop
or
sbb
and
wbinvd
add
add
adc
adc
pop
or
or
in
decl
in
add
aam
testl
in
out
or
fdivp
or
fsubp
or
fsubrp
or
jecxz
xchg
or
iret
or
or
mov
or
or
or
hlt
add
add
add
hlt
add
mov
mov
add
xchg
mov
add
xchg
hlt
add
mov
add
hlt
add
hlt
add
hlt
add
hlt
add
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
mov
add
repnz
repnz
fucomi
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
cmpsl
loopne
add
loopne
add
loopne
add
call
add
call
jmp
mov
dec
call
mov
dec
call
mov
jp
call
mov
scas
cld
call
mov
mov
call
add
add
pop
call
mov
lret
mov
mov
call
mov
jns
call
mov
lods
call
xchg
fildl
fs
add
fildl
add
push
pop
fstpt
pop
fldt
pop
push
pop
push
pop
and
sub
and
pop
pop
add
add
and
adc
pop
pop
and
sbb
and
sysret
adc
adc
adc
pop
pop
in
or
in
incl
aam
add
aam
testl
in
out
push
aam
repz
aam
out
movsb
push
movsb
fcmovu
push
xchg
push
xchg
fcmovbe
push
movsb
fcmovu
push
mov
hlt
add
mov
hlt
add
shl
jge
add
mov
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
ret
hlt
add
hlt
add
hlt
add
hlt
add
repnz
repnz
repnz
fucomi
add
add
sti
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fsubrp
add
fucomip
add
call
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fsubrp
add
add
xlat
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
mov
and
std
call
mov
adc
std
call
mov
inc
std
call
mov
dec
std
call
mov
cmp
std
call
mov
add
mov
imul
call
mov
pop
std
call
mov
cld
call
movsb
fbld
movsb
fildll
xchg
fistps
xchg
fbld
movsb
fists
movsb
fistps
xchg
fisttps
xchg
fists
filds
fisttps
push
fistpll
add
fbstp
add
push
fildll
add
add
add
add
and
sub
adc
and
and
sbb
adc
adc
in
or
aam
add
in
sti
add
hlt
add
mov
hlt
add
mov
hlt
add
mov
hlt
add
mov
hlt
add
mov
add
shl
into
mov
hlt
add
mov
hlt
add
shl
mov
hlt
add
mov
hlt
add
shl
sahf
mov
hlt
add
shl
mov
hlt
add
rcr
add
call
add
call
add
add
and
call
add
fsubr
add
fsubr
add
xlat
call
add
xlat
call
add
fsubr
add
xlat
call
add
xlat
call
add
xlat
call
add
xlat
call
add
xlat
call
add
xlat
call
add
xlat
call
add
add
mov
add
mov
call
mov
or
jmp
mov
cmc
add
mov
std
add
mov
and
add
mov
adc
jmp
mov
call
add
mov
int
jmp
mov
add
jmp
add
add
or
jmp
mov
hlt
add
mov
fnclex
add
fcmovnbe
add
fcmovnu
add
fcmovne
add
fcmovnbe
add
fcmovnb
add
fcmovne
add
ret
add
mov
xchg
add
add
add
jmp
in
inc
add
add
sbb
sbb
add
add
fildl
cmpl
inc
jne
sbb
push
push
fildl
add
add
mov
jb
clc
imul
sub
ds
cmpsl
hlt
add
mov
cmpsb
inc
fldcw
inc
add
cmpl
add
jno
adc
jge
cmpsl
repz
mov
cli
testb
repz
lock
cld
dec
jno
add
mov
mov
repz
in
xor
jo
add
fistpl
cwtl
add
sub
ljmp
pop
adc
shr
jo
pop
or
add
rcrl
imul
pop
std
mov
loope
ret
addr16
push
cmpsb
or
mov
or
icebp
xchg
or
sub
add
xchg
daa
out
hlt
movsb
add
fprem
jo
repz
xor
sbb
pop
and
add
jg
mov
imul
add
add
add
jmp
jg
imul
and
jg
jmp
mov
imul
add
sub
fadd
push
fiadds
stos
xchg
mov
jg
sbb
mov
es
std
ss
lahf
push
cmp
insb
bound
jmp
outsb
sbb
jmp
add
add
jle
fidivrl
and
ret
fwait
adc
pop
mov
je
mov
sbb
mov
mov
popa
fisttpl
add
daa
mov
cltd
mov
adc
cltd
mov
je
sub
idiv
movsb
sbb
inc
xchg
mov
xor
mov
xchg
pop
mov
adc
mov
mov
pop
repz
jecxz
jbe
add
add
add
call
mov
jl
and
add
sbb
add
xchg
pop
inc
and
jbe
mov
inc
and
incb
hlt
out
add
add
fsubrl
out
sbb
clc
ds
sti
cld
imul
fidivrs
inc
addb
ret
or
mov
inc
addb
sarl
sub
adc
test
sbb
mov
inc
and
jle
aaa
sbb
mov
sub
clc
mov
inc
add
rcr
out
out
stc
pop
in
pop
mov
xor
fildl
pop
jbe
lods
jo
fcmovnbe
stc
out
dec
add
xchg
sub
add
mov
add
fisttpll
pop
mov
push
insb
dec
test
stos
movl
sbbb
xchg
rcrb
sbb
push
call
jmp
rcrl
mov
sbb
popa
pop
flds
mov
mov
subl
notb
cmp
jmp
sbb
imulb
add
add
ret
add
mov
fwait
insb
in
cmp
je
sahf
insb
cld
imul
and
add
jmp
dec
cmc
mulb
mov
repz
insb
call
jnp
jnp
lahf
repz
push
aad
add
pop
repz
sar
in
jg
incl
add
mov
and
fistpll
es
stc
jmp
jmp
inc
and
popa
jl
adc
cli
stc
jmp
inc
sbb
mov
test
cwtl
shr
xchg
cli
stc
call
push
cwtl
adc
shr
jl
scas
fiaddl
pop
lahf
adc
push
popa
jl
movsl
mov
call
add
add
inc
sbb
shl
mov
cmpsb
in
popa
sahf
loopne
fmuls
add
jns
push
mov
and
mov
test
out
mov
andl
mov
clc
adc
adcl
les
aas
push
mov
loope
mov
add
add
adcl
mov
loop
jle
shl
mov
add
ds
sbb
jg
jecxz
sbb
jmp
notl
icebp
js
push
out
inc
mov
inc
mov
imul
sub
add
ficoml
xor
outsl
repnz
inc
jmp
adc
out
movsl
add
call
pop
cmc
xlat
fbstp
pop
dec
imul
outsb
repnz
push
ds
push
lret
add
call
fbstp
push
imulb
loop
push
ds
add
hlt
imulb
adc
imulb
push
testl
fldcw
jb
ljmp
imulb
jb,pt
in
add
xchg
fldl2t
aad
hlt
imulb
jb,pt
out
jne
cmpb
ret
push
mov
andl
aas
jb
ljmp
insb
cmc
aas
jb
jmp
call
cmpsb
fwait
aaa
mov
cmc
cmp
jmp
cld
out
ds
cli
call
jl
add
fsubrp
in
adc
sgdtl
add
sbb
mov
xchg
adc
in
out
in
call
xchg
add
call
pop
jl
push
xchg
add
mov
stc
jmp
pop
jl
daa
xchg
add
cmp
call
pop
jl
call
adc
call
pop
jl
jmp
pop
jl
fistl
cli
jmp
inc
sbb
mov
add
fwait
cmc
lcall
add
inc
cmpl
and
cmpb
push
pcmpgtw
fprem
push
xchg
mov
mov
push
adc
aam
incb
repz
clc
ds
jmp
clc
stc
aad
ds
out
add
jmp
loopne
mov
add
add
cwtl
out
add
jmp
sub
jl
incb
je
fistl
shlb
fs
mov
and
add
mov
pop
iret
fcmovnbe
add
gs
insb
pop
iret
fmul
add
push
push
insb
pop
scas
fnsave
fdivl
outsb
mov
fsubl
xchg
sbb
jmp
add
pusha
out
neg
dec
pop
outsb
cmc
mov
hlt
jno
repnz
jno
sarb
mov
dec
fnop
mov
icebp
add
mov
jmp
or
repnz
adc
imulb
data16
lret
and
jnp
mov
aam
icebp
insl
out
mov
inc
jbe
cmpl
add
out
push
xchg
cmc
cs
xor
hlt
push
lods
clc
push
push
jo
jecxz
loop
cmpb
div
sti
outsl
je
ret
insb
adc
xchg
icebp
push
push
lock
pop
hlt
orb
add
push
mov
fmuls
cli
jmp
jl
mov
or
call
jl
mov
adc
call
jl
add
add
adc
jmp
xchg
incl
nop
mov
cli
ret
out
adc
adc
jne
push
in
jae
cld
xor
jmp
jl
daa
mov
cli
call
add
sti
lret
adc
testl
fucomip
in
adc
sbbl
je
add
jl
cld
std
or
mov
sub
cmp
add
enter
stos
dec
jge
mov
or
movsl
icebp
aad
mov
jp
add
gs
clc
jb
dec
push
mov
add
call
jle
dec
adc
lods
fdivr
ds
add
cmp
ds
icebp
add
fdivrs
adc
sbb
std
fnstcw
add
repnz
stos
sar
jmp
jo
add
rolb
test
jmp
rolb
loope
mov
stos
test
fistps
add
add
sbb
fsubl
add
gs
imul
aad
bound
push
fcoms
mov
jmp
icebp
das
fdivrs
cmpsb
icebp
xor
jmp
add
jno
pop
fsubs
mov
nop
or
inc
mov
add
pop
jmp
out
jno,pt
ljmp
imulb
insl
fsubrp
je
repnz
aad
cmp
add
xchg
ds
sahf
jle
cmp
push
into
add
cld
in
push
jmp
lahf
pop
jne
ret
push
add
add
pop
cmp
je
popa
add
aas
sub
cmp
jmp
or
push
xchg
adc
sub
mov
mov
pop
push
pop
lcall
push
flds
andl
shl
pop
dec
push
pop
push
inc
and
pop
and
or
add
stc
inc
add
add
mov
popf
je
les
je
les
je
add
sbb
testb
arpl
mov
je
pop
add
add
jecxz
adc
pop
mov
jb
mov
ffree
test
jae,pn
mov
mov
jae
into
xchg
jae
stos
jae
add
cmpsl
fisubrs
jae
out
lahf
jae
lock
jae
clc
popf
jae
add
iret
or
lret
adc
sbb
ret
and
jae
dec
add
add
add
mov
add
rcll
mov
clc
jge
filds
dec
add
fsubrl
mov
out
ret
xchg
fucomip
add
add
or
imul
ljmp
jg
push
fidivrl
ds
mov
ss
outsl
add
pop
test
aam
mov
push
and
jo
jmp
jecxz
aam
push
and
jmp
add
sbb
aam
push
and
mov
call
and
add
push
fsubs
out
adc
jmp
call
xor
notb
std
add
add
cmp
jmp
sbb
jmp
xor
add
ljmp
in
imulb
into
add
addr16
mov
bound
andb
aaa
or
rcll
add
pusha
aam
jae
insb
or
jmp
stc
pop
outsb
sub
push
out
add
inc
clc
sti
or
sub
jb
jl
stc
jbe
and
call
pusha
lock
adc
cli
ret
addr16
or
add
clc
fisttpl
cli
lcall
smsw
loope
loope
idiv
add
add
mov
xchg
lret
mov
adc
repnz
cmp
push
xchg
mov
call
daa
lret
roll
fdivl
in
push
mov
cmpl
pop
add
int3
mov
lock
pop
add
mov
mov
rcl
test
jne
sbb
xlat
repnz
add
add
dec
lcall
xchg
lock
or
sti
add
idivl
lret
testb
mov
aad
movsl
jne
clc
xchg
xor
sarb
mov
mov
addr16
push
adc
fsubl
xlat
mov
repz
int3
stc
pop
xchg
aaa
shll
jo
test
aam
or
add
adc
sbb
or
out
jge
shr
mov
sbb
inc
lret
fucomi
add
sub
jmp
rolb
or
mov
scas
out
jmp
jp
sbb
pop
cmp
loop
pop
xchg
decb
ficoms
les
add
jecxz
and
in
or
add
inc
cltd
and
jns
cmp
jmp
push
cmpsb
add
dec
out
jmp
or
imulb
leave
cld
xchg
push
addr16
mov
add
test
lods
decl
jecxz
mov
jp
mov
std
outsl
add
out
aas
lock
loope
jmp
stos
ds
push
cmp
xrelease
in
div
sahf
add
add
lcall
fsubp
ret
add
xchg
verr
mov
fidivrs
mov
push
add
jge
fidivrs
mov
cmp
adc
add
mov
scas
sarl
cmpsl
decb
subl
add
and
call
pop
xchg
test
fnstenv
add
add
fdivrs
in
inc
movsl
lret
mov
adc
jmp
jl
fwait
xchg
inc
call
xorb
sarb
sarb
push
clc
jl
out
pop
add
fprem
dec
mov
cmc
mov
std
out
cmpsl
xbegin
mov
test
mov
ljmp
or
add
jmp
fprem
ljmp
test
jno
sbb
icebp
test
add
mov
inc
lcall
fwait
xchg
jecxz
add
fldt
jns
mov
cmpsl
imul
call
mov
call
movsl
inc
jecxz
add
add
mov
fldt
lock
insb
movsl
sbb
call
add
jecxz
lock
loop
fwait
icebp
loop
add
fstpt
mov
cltd
leave
loop
add
fisttpl
mov
fs
stos
loop
fstps
imul
mov
fildl
cmp
testb
neg
push
fcomip
jmp
add
add
fildl
fnstcw
negb
sbb
imul
mov
fildl
cmp
loop,pn
adc
mov
fildl
adc
adc
testb
imul
mov
fildl
add
fcomip
mov
loope
pop
and
imul
mov
fildl
adc
fdivp
std
mov
testb
cmp
incl
add
xchg
fldl
add
idiv
sub
idiv
in
idiv
xchg
fldl
add
add
push
idiv
cwtl
in
idiv
push
fldl
add
add
add
add
add
idiv
out
push
idiv
lret
jmp
push
idiv
es
idiv
adc
jmp
pop
idiv
push
pop
idiv
sub
pushl
idiv
bound
incl
add
adcb
jl
idiv
es
idiv
adc
mov
adc
mov
mov
stos
rorb
cld
lcall
cld
mov
cld
andb
jp
mov
jb
mov
push
mov
bound
cld
pop
push
cld
push
fimuls
cld
inc
sbb
cld
xor
add
mov
xchg
sbb
sar
dec
sar
sub
cld
add
sar
in
mov
cld
ljmp
cld
fidivl
mov
ret
rcr
lds
fucomip
lds
fistpll
xchg
fbstp
ret
sbb
add
jno
fs
imul
and
pop
fucomip
add
add
mov
fistpll
xchg
cmp
into
xchg
xor
jb
sub
push
xchg
and
jle
sbb
jb
adc
sub
or
or
xchg
icebp
xchg
jmp
fiadds
mov
loopne
lahf
das
loopne
inc
loopne,pn
push
loopne,pn
pop
dec
fcomip
pop
dec
fcomip
lea
idivb
fcomip
cmpsl
das
fcomip
das
fcomip
fwait
add
add
fcomip
icebp
sub
div
push
fcomip
mov
push
fcomip
das
dec
fcomip
or
fcomip
sti
sub
divb
fcomip
jne
fcomip
mov
idiv
dec
fcomip
adcl
sbb
xor
neg
sub
test
fcomip
iret
sub
imulb
dec
fcomip
add
idiv
test
jle
idiv
mov
decl
dec
idiv
add
add
dec
idiv
mov
dec
idiv
into
dec
idiv
test
idiv
in
idiv
mov
idiv
decb
pushl
dec
idiv
ljmp
jmp
sbb
pushl
sbb
jmp
push
idiv
push
push
idiv
addb
dec
idiv
test
mov
idiv
mov
inc
idiv
add
add
bound
cld
loop
nop
cld
fiaddl
cld
sarb
nop
cld
lret
cld
ret
cld
mov
or
cld
mov
fs
xchg
pop
mov
mov
cld
subb
jp
mov
jb
cld
push
cld
bound
cld
push
adc
cld
dec
fmull
cmp
add
xchg
cltd
cld
sub
cld
and
lcall
add
mov
cwtl
icebp
cwtl
loope
rcrb
fcmovne
cwtl
leave
fucomi
xchg
rcr
cwtl
mov
fistl
cwtl
mov
fisttpl
fistl
mov
and
jns
push
cwtl
jno
cmp
add
add
es
popa
fcmovnb
xchg
pop
fcmovne
xchg
push
fcmovnbe
xchg
dec
fistpl
inc
fistpl
cmp
cs
xor
push
cltd
sub
mov
sbb
add
fdiv
shll
fdiv
ret
push
fdiv
xlat
push
fdiv
mov
dec
fdiv
jmp
adc
not
or
imul
add
imul
mov
fildl
jmp
add
mov
fildl
cmp
xlat
imulb
mov
xlat
test
xlat
mul
jle
neg
jle
mul
jle
mulb
xlat
notb
xlat
idivb
cmp
mulb
inc
xlat
testb
pop
cmc
incl
lcall
fiadds
xorb
call
cmc
ljmp
pop
cmc
jmp
cmc
pop
cmc
incl
add
in
pop
cmc
out
pop
cmc
ljmp
incl
pop
cmc
cmp
pushl
pop
cmc
push
pop
cmc
jmp
cmc
call
idiv
push
push
idiv
xor
idiv
inc
push
idiv
es
idiv
xchg
push
idiv
cli
push
idiv
enter
adc
mov
test
and
cld
sbb
cld
add
add
mov
jp
add
cld
cli
pop
jne
repnz
ljmp
cld
fcmovu
jne
shlb
cld
ret
cld
mov
fdivl
in
je
mov
and
cld
xchg
adc
mov
cld
andb
jp
jbe
jb
jne
push
jne
fdivl
pop
loopne
cld
push
jbe
add
add
ja
inc
fistl
jg
fadds
jg
fsub
jle
fadds
fcoms
sbb
cmp
fmuls
jl
fmuls
jge
fcomps
stc
xlat
inc
jge
xlat
outsb
jge
xlat
es
xlat
or
add
xlat
fdivrl
xlat
enter
adc
mov
xlat
ss
xlat
ja,pt
xlat
inc
ja
xlat
push
jns
xlat
push
jns
xlat
sbb
add
adc
into
js
xlat
js
xlat
lock
xlat
in
pop
xlat
outsb
jp
xlat
add
xlat
divb
mov
notb
cmpsl
xlat
divb
xlat
negb
xlat
imulb
xlat
test
xlat
testb
xlat
idivb
xlat
testb
mulb
xlat
testb
xlat
notb
inc
xlat
mulb
add
add
fdiv
adc
fdiv
out
fdiv
shll
fdiv
test
or
test
fdiv
mov
hlt
xlat
div
hlt
xlat
test
xlat
not
in
testb
push
idiv
into
dec
idiv
push
fiaddl
add
popf
cmc
jmp
cmc
cmp
cmc
decl
popf
cmc
cmp
cmc
inc
sahf
cmc
in
pushf
cmc
jmp
pushf
cmc
incl
add
mov
sahf
cmc
incl
cmc
lcall
cmc
decl
cmc
pushl
cmc
ljmp
decl
cmc
jmp
flds
add
lcall
flds
and
cmc
mov
mov
add
cmp
or
cld
inc
ret
ret
cld
cmp
cld
xor
add
pop
cld
sbb
cld
adc
add
cmp
roll
cmp
roll
cmp
enter
mov
add
mov
add
into
add
cmp
or
cld
lcall
add
or
cld
jp
push
jno
lds
jbe
add
add
dec
lds
dec
lds
lds
lds
mov
lds
aam
lds
aam
lds
aam
lds
aam
adc
call
les
aam
stc
rcl
icebp
shr
jmp
shl
ret
and
rcl
sub
leave
sarl
ret
rcl
add
cmp
pop
push
sbb
xor
add
push
and
push
aas
sub
fiaddl
inc
pushf
cmp
stos
inc
outsb
jmp
xchg
cmp
sahf
aas
imul
test
arpl
lea
pop
or
cmp
mov
inc
gs
outsb
les
je
fbstp
add
mov
ds
mov
lahf
aas
push
test
fildl
jmp
sbb
jge
add
xorb
jne
inc
je
mov
add
mov
inc
inc
pop
inc
imul
inc
imul
push
ficoml
std
adc
and
rolb
jb
shll
push
cld
insl
jae
faddp
add
stc
xor
mov
or
pop
or
cli
fucomp
add
jb
std
cli
push
je
es
outsb
add
fidivs
cmp
arpl
add
inc
fiadds
es
fs
stc
dec
push
aam
mov
pop
or
popa
xor
dec
push
xchg
fnsave
mov
sub
je
sub
sbb
jecxz
sub
and
arpl
in
sub
loop
addr16
push
addr16
out
je
fisubs
push
add
cld
ret
mov
scas
sub
mov
mov
pop
mov
jne
arpl
xchg
das
je
mov
push
ret
rcll
arpl
outsb
imul
mov
fs
dec
and
dec
das
mov
aas
inc
es
aas
sub
inc
dec
das
mov
cmp
push
add
add
xor
sbb
sub
fldt
and
sub
and
and
inc
loop
incb
xor
sub
sahf
cmp
and
int
mov
fs
dec
and
ss
sub
ss
and
dec
shrb
pushf
sub
add
push
pop
je
lahf
sub
ss
and
xchg
daa
pop
sub
mov
sbb
add
add
inc
inc
dec
fisttpll
dec
or
push
jmp
mov
cmp
lcall
adc
cmp
cmpl
data16
inc
outsb
sti
out
insl
cmc
roll
jmp
ret
cs
scas
out
pop
jmp
loop
jae
jl
data16
orb
sarl
add
inc
inc
andb
cmp
add
out
insl
dec
inc
pop
outsb
inc
or
xchg
fiaddl
fucomi
insl
push
testb
or
add
inc
gs
sub
mov
out
gs
in
push
add
flds
dec
sbb
insb
leave
and
or
or
imul
add
push
adc
add
gs
push
add
in
insl
inc
in
cmc
bound
imul
add
int
jae
jo
pop
dec
imul
bound
inc
dec
push
pop
dec
and
sub
das
dec
add
mov
jmp
xor
ljmp
pop
sbb
cmp
pop
dec
mov
in
arpl
add
add
add
pop
loope
and
jmp
push
sti
add
into
inc
jb
int3
add
xchg
sbb
arpl
adc
dec
pop
imul
imul
mov
popa
dec
lea
push
fucomi
add
dec
stos
and
sub
and
in
inc
pop
xor
add
push
cmp
inc
add
inc
cmp
out
cmp
and
push
jmp
daa
repnz
adc
xor
sbb
add
pop
xor
cmp
and
cmp
cmp
fildl
and
ss
and
add
popf
sub
jmp
mov
push
test
add
add
sub
jae,pt
scas
stc
aas
sub
outsb
ds
xor
dec
int3
cmp
sbb
aas
jp
lock
jg
or
dec
pop
adc
ret
fimull
or
fildl
push
sbb
cmc
mov
gs
lock
data16
sub
jno
add
mov
sbb
inc
in
add
in
jbe
daa
or
cmp
je
or
in
adc
addr16
std
gs
ss
xor
arpl
xor
in
sbb
add
push
imul
push
data16
or
add
mov
sti
xor
lret
or
add
inc
gs
mulb
mov
imul
add
mov
fiadds
sub
dec
gs
inc
imul
iret
add
movsb
and
ja
jb
xchg
je
nop
xor
pop
xor
flds
inc
arpl
outsb
pop
dec
and
pop
dec
push
inc
sbb
popa
add
daa
sub
sbb
sbb
dec
arpl
and
cmp
mov
add
in
sub
sub
and
aam
arpl
arpl
sub
test
cmp
insb
scas
into
sub
lods
fndisi(8087
and
add
xor
sub
lods
and
aaa
push
bound
mov
sub
xchg
xor
push
cmp
add
fwait
sub
xor
push
cmp
adc
push
sub
fisubs
sub
sub
and
ds
add
add
and
or
sarl
or
imul
sbb
fldcw
push
sub
inc
es
fldt
or
sub
cmp
fidivrl
gs
enter
ret
fcmovne
dec
popa
aad
cmp
movsl
outsb
lods
xchg
fildl
xchg
add
mov
push
push
test
sub
xchg
push
addr16
dec
pop
jnp
int
fwait
aad
pop
mov
cmp
aad
jp
mov
cmp
inc
lds
popa
push
mov
add
adc
outsb
pop
sahf
aaa
insl
or
fwait
std
xor
xor
outsb
add
xor
fs
fisttpl
add
fs
je
add
add
push
add
mov
gs
adc
call
loopne
outsl
sub
inc
imul
fildl
add
daa
jecxz
jb
cld
dec
jne
push
pop
inc
cmp
roll
packsswb
loope
gs
inc
imul
incl
add
inc
gs
adc
insb
mov
loop
outsb
add
add
add
lds
imul
push
je
ret
mov
lea
pop
mov
test
addr16
xchg
push
inc
outsl
stos
cmp
mov
popa
mov
imul
pop
dec
imul
and
testl
jae
inc
and
outsl
sbb
adc
inc
sbb
add
xor
ficoms
xor
cmp
inc
imul
fldt
in
cmp
leave
push
sbb
movsb
dec
cs
cltd
ds
sub
dec
aad
mov
sub
add
lahf
sub
xor
enter
cwtl
add
fstps
daa
dec
aaa
jle
bound
xchg
add
add
jle
mov
dec
insl
xor
aaa
jns
or
insl
add
inc
push
decb
push
adc
pop
sub
sbb
xor
ds
cmp
cmp
cwtl
aas
add
push
je
mov
xor
out
ss
jmp
enter
fnstenv
push
sti
mov
fildl
add
sbb
shlb
add
add
dec
pop
int3
test
xor
movsl
dec
push
mov
cmpb
mov
punpcklwd
aad
add
out
xor
fidivl
jae
cmpsb
ss
pop
mov
inc
je
pop
jecxz
push
push
ffreep
add
cld
dec
gs
add
mov
fistps
jecxz
insl
push
daa
cli
addr16
mov
push
jne
or
dec
imul
pusha
gs
lret
add
cli
insl
inc
or
cli
bound
push
gs
push
add
sub
and
bound
stc
push
imul
fiadds
adc
insb
jbe
or
imul
outsb
in
and
fsub
std
mov
add
add
call
sub
into
loopne
ret
rorl
outsb
fcom
sub
test
stc
push
je
fldenv
jae
xlat
aaa
pop
mov
mov
dec
push
adc
lea
add
mov
xchg
cs
pop
pusha
sbb
jne
push
pop
push
arpl
pop
xor
push
inc
and
add
inc
and
fcoml
sub
add
xor
call
cmp
add
or
rcrb
cmp
sbb
loope
adc
sbb
test
or
sub
cltd
xor
hlt
frstor
and
pop
ss
ss
and
fdivl
test
lret
xor
add
cwtl
dec
mov
add
sub
and
xor
sub
xorb
faddl
pop
mov
sub
cmp
test
outsb
push
mov
cmp
sbb
inc
pop
and
fildl
mov
inc
imul
fdivs
add
jl
dec
and
add
aad
xor
jmpw
add
xlat
dec
pop
mov
mov
cmp
mov
add
rcrl
xchg
jnp
imul
sub
add
push
fadds
sbb
bound
loop
jb
sub
call
dec
jb
loop
insb
cmc
or
stc
or
or
add
lahf
aad
add
add
add
gs
and
nop
add
fisubs
es
push
mov
imul
fisubrs
stc
pop
gs
or
push
outsl
pop
fistl
push
or
sub
pop
sub
add
xlat
xor
xor
push
imul
pop
add
mov
pop
sbb
xor
es
mov
or
xor
or
push
insb
fcoms
sub
je
loop
add
cs
je
adc
outsb
stos
roll
mov
mov
insb
lcall
call
jno
sbb
adc
xchg
mov
add
add
sub
sbb
and
cmpsl
push
sub
outsb
xor
and
jmp
and
and
pop
push
jecxz
dec
inc
mov
ss
and
dec
inc
inc
nop
add
ss
sbb
ss
lcall
add
ss
aas
loopne
add
fstps
and
dec
lret
and
add
mov
imul
mov
add
cmp
lcall
lcall
add
out
inc
insl
jnp
fildl
enter
jne
incb
outsb
mov
dec
pop
dec
lods
cmp
inc
add
mov
xor
mov
outsb
jmp
mov
push
sbb
add
add
xor
mov
cmp
fnstenv
pop
sbb
xor
mov
cmp
vmovntps
sub
add
adc
push
jo
or
aam
xchg
adc
insl
push
dec
rcrl
push
sti
xor
dec
fldl
xor
fs
in
xor
inc
out
fs
or
add
stc
fiadds
adc
bound
jmp
mov
mov
add
add
sti
push
je
push
popa
outsb
push
fisttps
xchg
fisubrl
shr
popa
ret
fidivl
add
inc
outsb
mov
push
imul
fiadds
adc
push
outsl
ljmp
add
jnp
imul
pop
je
fwait
or
pop
jno
jne
jne
push
mov
insl
cs
arpl
cmp
push
add
add
cmp
sbb
jno
adc
popa
adc
add
adc
fs
cmp
and
mov
cli
and
or
test
or
mov
fmuls
cltd
jmp
pop
mov
inc
add
mov
sub
fcmovne
add
push
push
mov
data16
arpl
mov
cs
push
sub
fidivrs
push
sub
jmp
xor
dec
push
cmp
dec
cmp
add
sub
rorl
add
in
dec
cmp
icebp
inc
cmp
loop
sub
adc
add
and
test
cmp
xor
add
add
sbb
mov
dec
add
lods
aas
addr16
mov
inc
outsb
pushf
xchg
inc
jae
out
dec
jmp
flds
mov
mov
inc
outsb
sahf
flds
jle
inc
cmp
sub
sub
cmpsb
fildl
adc
imulb
stos
daa
addr16
dec
inc
jmp
add
add
das
dec
adc
aas
addr16
in
je
fdivrs
push
add
in
push
gs
sarl
fs
incb
mov
ljmp
add
add
pop
insb
fs
add
lcall
outsb
dec
ljmp
cwtl
loopne
gs
and
into
insl
outsl
push
fistl
add
outsb
inc
add
gs
add
mov
imul
pop
add
int
outsb
cwtl
fists
push
std
jmp
bound
fisttps
add
cli
jno
mov
jecxz
inc
mov
cmpsl
cld
dec
out
push
xchg
mov
imul
xor
les
test
pop
outsb
andb
push
jne
imul
imul
add
and
mov
jno
je
pop
or
sbb
arpl
dec
push
imul
daa
dec
arpl
or
imul
aad
arpl
or
insl
out
xor
les
push
fistpl
xor
inc
jmp
xchg
cs
jp
adc
cmpsl
add
sub
and
aas
rcrb
subb
pop
add
add
mov
add
push
shlb
popa
inc
mov
sub
jmp
xor
adcl
and
jmp
or
xor
aas
pop
adc
inc
sub
sub
sbb
xor
out
push
add
sub
and
xchg
inc
imul
sbb
es
inc
or
add
into
das
dec
ljmp
cmp
mov
adc
adc
stos
fildl
loopne
sbb
scas
inc
pop
mov
lcall
lods
nop
aas
inc
call
and
fldcw
pop
movsb
aad
insl
mov
mov
das
inc
mov
sub
movsl
inc
inc
push
aam
outsb
jmp
xchg
das
inc
inc
add
add
insl
gs
fadds
add
fs
push
repz
add
fs
ljmp
adc
push
outsl
rcr
lock
lret
psubsb
add
dec
gs
inc
js
xlat
push
add
add
icebp
add
imul
insl
add
inc
gs
or
outsb
xor
incl
add
add
insb
jne
lret
bound
int
insl
push
add
adc
outsl
add
dec
loopne
push
add
call
and
je
rcrb
add
rolb
stos
dec
je
dec
inc
mov
loope
insl
jno
adc
mov
imul
sbb
test
add
add
push
pop
push
ja
insl
movsb
sbb
sbb
jg
popa
or
add
adc
dec
push
addr16
pop
pop
pop
icebp
xor
and
sub
aas
jmp
daa
leave
pop
inc
fsubl
push
xor
aaa
jmp
adc
sub
add
mov
fisubrl
adc
add
mov
cmc
inc
pop
daa
and
push
lret
inc
jmp
adc
int
sub
adc
mov
add
sub
xchg
xor
mov
clc
ss
add
stos
adc
sub
inc
push
sub
add
mov
cmp
cwtl
daa
pop
cmp
push
push
lods
aaa
addr16
sbb
push
add
add
xchg
add
lret
sub
jle
outsb
xor
ds
loopne
popa
cld
mov
sub
jns
jno
test
inc
outsb
int3
daa
dec
jmp
mov
jb
mov
int3
mov
inc
outsb
int3
daa
add
out
jae
into
daa
inc
fstl
outsb
mov
adc
mov
outsb
jo
and
push
je
add
inc
faddl
lock
push
std
sti
add
lock
xor
repnz
jb
call
inc
je
imul
pop
push
and
lock
leave
push
push
ret
add
in
push
add
sti
insl
push
or
pop
jae
cld
add
imul
xlat
dec
jo
add
push
add
add
pop
gs
pop
add
pop
push
dec
adc
jae
dec
sub
xor
cmp
mov
or
imul
push
sub
and
rcrb
mov
call
sbb
scas
roll
jo
push
outsb
push
add
xchg
cmpsl
adc
fistl
addr16
xlat
and
mov
add
add
mov
xchg
push
push
pop
mov
push
jb
jb
cltd
pop
popa
sbb
aaa
mov
sbb
dec
push
xor
mov
inc
jmp
cmp
mov
cmp
xor
out
cmp
fmull
pop
shll
and
push
jmp
pop
pushf
push
sbb
add
add
xor
add
fstps
pop
pushf
or
jg
sbb
xor
cmp
mov
push
push
xor
push
sub
add
rcr
add
push
pop
xchg
sarl
arpl
cmp
test
jb
movsl
cmp
add
out
push
mov
je
mov
je
add
add
sub
and
inc
into
push
je
leave
daa
addr16
inc
push
or
sub
and
or
push
je
mov
addr16
rcr
add
sbb
scas
cmp
int3
xor
loopne
cmp
lods
xor
fstpl
aas
add
fiaddl
jmp
pop
je
in
bound
lret
xor
addr16
inc
stc
add
add
push
in
push
inc
and
and
insb
fdivrs
inc
imull
movsl
lret
add
jno
pop
sti
fs
push
fadds
push
repnz
aaa
popa
ja
gs
mov
imul
imulb
movl
push
add
imulb
shl
data16
fsubl
hlt
notb
xchg
daa
add
add
pop
outsb
sub
fwait
push
inc
and
and
push
add
push
sub
pusha
pop
jb
andl
ficoms
adc
daa
adc
mov
insl
mov
sti
adc
enter
sbb
and
push
mov
je
cli
sub
call
add
add
and
mov
stos
adc
fcmovnbe
and
fs
or
pop
cmp
add
das
popf
sub
inc
mov
and
mov
add
cmp
sub
aas
test
cmc
das
jle
loopne
andb
das
pop
inc
out
daa
sub
in
cmp
sub
inc
xor
pop
add
add
sub
cmp
xchg
xor
and
cs
and
fcompl
adc
add
adc
add
mov
pop
mov
xchg
fildl
jp
push
dec
movsl
shll
pop
mov
rcr
add
mov
out
fwait
fildl
lock
xor
mov
fildl
fldl
add
mov
xor
rolb
cmp
call
outsb
cmp
call
je
in
pop
sbb
or
js
add
leave
pop
dec
sub
and
add
sti
add
loopne
push
in
repz
jne
repz
add
hlt
insl
inc
add
pop
gs
push
je
in
add
add
popa
sti
push
outsb
dec
call
push
push
xchg
faddl
call
bound
sbb
sbb
insl
push
div
addr16
add
in
add
nop
and
js
add
outsl
enter
shl
push
mov
bound
mov
fistps
pusha
lds
outsb
pop
shll
dec
pop
cli
dec
insb
push
aam
insb
add
add
jne
arpl
inc
push
test
pop
sub
add
adc
jbe
mov
inc
mov
pop
push
fcoml
jbe
inc
sub
and
je
mov
cmp
or
fsubl
sbb
incl
cmp
and
imul
pop
add
add
mov
cmp
fwait
xor
sub
clc
push
jl
xor
fisttpl
add
ss
imul
stos
pop
jb
aam
push
fstpt
loop
cmp
add
fldt
es
mov
cli
das
xchg
and
adc
mov
mov
sub
and
sub
add
jmp
daa
add
add
inc
dec
sbb
cmp
cwtl
das
jmp
daa
cltd
inc
add
loop
outsb
jmp
mov
popa
sbb
shll
add
arpl
push
jb
mov
aaa
pop
aad
pop
inc
jmp
xlat
das
inc
aad
fildl
rol
adc
je
add
add
jecxz
inc
jmp
add
add
das
push
mov
fildl
jl
sbb
add
insl
pop
mov
add
mov
add
in
loopew
add
pop
filds
rclb
aas
inc
lods
ret
fs
fdivs
mov
insl
mov
clc
insl
imul
xchg
call
lret
bound
cld
pop
jb
add
jge
arpl
fdivrs
xor
popa
jo
imul
push
push
push
jmp
cmp
push
inc
stc
jae
push
fcoms
adc
pusha
push
jmp
pop
fs
fs
in
or
push
sub
loope
push
xchg
rcrl
movsb
in
aas
mov
repz
outsb
cwtl
rcrl
arpl
add
imul
sub
shrl
pop
xchg
push
add
jae
push
pusha
xor
sub
outsb
push
js
arpl
popa
adc
mov
jae
imul
lods
add
je
insb
loop
sub
push
adc
mov
shrb
dec
and
cmp
cmpl
sub
add
add
ds
sbb
push
adc
add
sub
imul
adc
xor
pop
daa
push
jo
add
pop
or
add
fldt
pop
push
cs
xor
xor
es
sbb
adc
pop
mov
sbb
cmp
add
fldt
sbb
xchg
and
add
add
add
mov
outsb
push
scas
add
loopne
pop
aad
insl
pop
fnstsw
arpl
ds
inc
iret
daa
imul
loopne
pop
movsl
jp,pt
mov
add
std
jge
je
lods
daa
addr16
mov
mov
stos
lods
sub
mov
pop
lret
popa
mov
in
or
add
add
daa
lds
adc
scas
adc
int3
sub
cwtl
xor
push
frstor
sub
mov
imul
insl
inc
push
frstor
lds
xchg
lds
xlat
leave
push
arpl
xlat
push
add
lret
insl
jo
bound
cli
data16
enter
faddl
lods
lret
insl
jo
sti
pop
push
leave
jb
add
add
rorb
cmc
shlb
pop
add
outsl
fmull
mov
inc
gs
rolb
lret
bound
pop
add
jmp
outsb
sub
outsb
cmp
dec
jo
dec
sbb
mov
push
and
push
push
cmp
add
paddd
ljmp
cltd
in
outsl
mov
pcmpeqb
cmp
inc
mov
or
mov
ret
adc
mov
add
pop
movsb
sbb
lds
je
cmpsb
sbb
pop
push
mov
push
lcall
sbb
outsb
adc
or
stc
xchg
push
pop
cld
fistl
and
sbb
cmp
fisubs
fwait
and
aaa
cmpsl
sbb
cmp
add
add
cli
sub
inc
adc
xor
pop
mov
sub
adc
adc
sbb
jmp
adc
sbb
push
aaa
sbb
push
push
adc
adc
mov
dec
cmp
sbb
sub
xor
mov
and
int
add
push
push
test
add
lret
mov
es
cltd
mov
fildl
pop
rcll
jge
sub
insl
dec
stos
es
pop
int
addr16
jle
add
shrb
push
shlb
outsb
cmp
or
cmp
adc
leave
ficomps
mov
jno
ret
xor
mov
xor
mov
daa
pop
fcmovnbe
cmp
add
add
daa
inc
mov
jno
add
xor
dec
dec
pop
fimuls
add
add
inc
inc
xor
and
jp
gs
push
fprem
add
mov
addr16
inc
int
outsb
inc
les
add
xlat
dec
gs
push
jb
out
arpl
leave
inc
jb
cli
add
pop
fmuls
shr
fs
sbb
xlat
dec
inc
mov
push
dec
pop
mov
add
add
les
add
fadds
rclb
pop
popa
aam
bound
pop
pop
fs
fs
leave
add
mov
bound
dec
or
and
pop
mov
dec
adc
mov
out
pop
and
and
add
push
sbb
push
add
mov
femms
add
pop
adc
add
add
xchg
insl
mov
and
mov
addr16
lret
std
cltd
mov
popf
pop
add
mov
adc
mov
or
adc
or
sbb
add
mov
adc
adc
and
fildl
pop
add
add
push
xchg
and
movzwl
roll
jmp
fwait
and
and
sbb
cmovbe
mov
adc
scas
nopl
adcl
xor
sbb
add
xor
or
std
fsubl
pop
jno
push
adc
movups
or
pop
push
add
mov
add
fiaddl
pop
vmovlps
into
punpckhwd
lret
jmp
add
add
cmovge
sar
pop
movsb
cmp
mov
add
mov
xor
jno
jno
cltd
add
fldl
pop
pop
or
imul
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fldl
add
fldl
aam
add
aam
add
movsb
fldl
add
add
xchg
fldl
add
add
xchg
fldl
add
add
fldl
add
add
inc
add
add
jb
add
arpl
add
aam
inc
add
mov
add
xor
add
add
add
and
add
xchg
mov
add
add
add
faddl
add
faddl
add
faddl
add
clc
imul
aam
mov
mov
addb
mov
addb
mov
xorl
xchg
add
mov
inc
add
mov
add
mov
mov
add
mov
add
mov
addb
add
add
addb
mov
orb
addb
mov
xorb
add
mov
fldt
mov
mov
fistpl
inc
lds
jmp
add
sbb
add
pop
jbe
int3
sbb
add
mov
jmp
pop
xor
add
add
add
cmp
dec
je
sub
sbb
jae
push
js
adc
sbb
loopne
rol
inc
daa
add
sbb
or
push
ret
and
les
jmp
inc
data16
lahf
scas
cmp
pop
adc
inc
incb
ds
xor
inc
xor
mull
fstps
adc
add
or
push
inc
and
jecxz
adc
cmp
and
out
and
nop
cmp
push
call
mov
nop
out
inc
mov
hlt
sbb
add
pop
jbe
inc
xor
jp
add
sub
cmp
jmp
flds
jmp
cmp
pop
dec
mov
lock
add
rcll
popa
xor
xor
insl
out
repz
lcall
pop
and
push
test
add
fldenv
int3
fsubs
int3
test
out
aas
inc
call
testl
sub
outsb
pushaw
repz
out
sub
stc
dec
pop
push
das
call
sbb
add
add
sbb
dec
sahf
jmp
xchg
push
cmpsl
add
mov
mov
mov
dec
cs
loopne
inc
cmp
in
push
push
inc
stos
jecxz
popf
push
pushf
testl
ljmp
lret
fwait
test
mov
enter
inc
xchg
mov
mov
jne
arpl
push
jl
lods
dec
add
add
mov
pop
mov
sub
test
repnz
pop
andb
fldl
inc
mov
jg
out
sbb
dec
sti
mov
pop
lahf
xchg
imul
jns
repnz
lahf
sbb
inc
xlat
leave
mov
shrb
sub
xlat
test
mov
es
sbb
clc
pop
add
add
aad
hlt
cmpsb
lods
or
andl
pop
pop
pop
inc
mov
and
inc
shll
mov
and
ljmp
outsb
push
fistps
shlb
pop
pop
push
xlat
mov
cmp
sbb
add
arpl
push
adc
outsl
lcall
add
add
rolb
push
cmpsb
rolb
xor
xchg
rolb
sbb
xchg
add
xchg
add
ja
add
imul
add
push
rolb
add
ss
ss
add
add
add
xchg
add
add
add
orb
add
add
add
in
add
aam
add
aam
add
movsb
fldl
add
scas
aaa
add
add
movsb
fldl
add
push
xor
add
add
rorl
add
add
cmpsb
jo
mov
addb
mov
add
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
add
mov
fucomi
add
fcomi
outsl
mov
call
add
fcmovnu
jo
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fildl
jmp
cmp
add
mov
fildl
jmp
cmp
add
mov
fildl
jmp
cmp
add
mov
fildl
jmp
sub
fildl
jmp
mov
roll
jmp
add
add
fildl
sub
roll
jmp
mov
fildl
dec
cmp
add
mov
fildl
jmp
cmp
add
xchg
fiaddl
add
add
add
xor
push
fiaddl
add
add
add
insb
xor
push
fiaddl
add
add
and
add
aad
xor
adc
add
and
add
add
add
add
push
imul
fiaddl
add
flds
add
flds
add
flds
add
flds
add
flds
add
imul
flds
add
add
jge
xor
xchg
flds
add
add
mov
addb
mov
addb
mov
addb
mov
addb
add
add
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
addb
mov
fucomi
add
fucomi
add
add
ret
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fildl
jmp
ljmp
jmp
mov
leave
add
mov
fildl
jmp
movsb
leave
add
mov
fildl
jmp
test
add
mov
fildl
jmp
push
add
mov
fildl
jmp
dec
lret
add
mov
add
mov
fildl
lcall
add
mov
fildl
jp,pt
add
movsb
fiadds
add
add
and
add
add
push
xor
add
add
add
xor
add
add
add
fiadds
add
add
add
add
add
mov
cwtl
xor
add
add
push
insl
add
insl
add
add
add
add
add
add
clc
xchg
aas
mov
cs
aas
mov
jb
add
jb
add
jb
add
jb
add
add
mov
jb
add
jb
add
and
hlt
sub
in
cmp
in
cmp
aam
and
aam
ret
iret
std
mov
cmp
fdivl
lcall
xor
enter
enter
enter
enter
enter
enter
add
fxch
test
stc
enter
enter
enter
leave
xorb
enter
enter
enter
enter
mov
fldt
lret
cmp
gs
clc
aaa
xor
call
cmp
into
les
in
adc
jge
and
imul
dec
cmp
cmp
dec
cmp
add
xchg
inc
sub
add
add
cmpsl
sub
test
xchg
cmc
xchg
in
das
int
mov
mov
das
lods
aam
xor
imull
aad
pop
xor
push
das
push
movsb
addr16
lea
das
sub
test
das
adc
not
cs
out
int
mov
mov
cs
add
add
daa
das
dec
imull
push
mov
das
add
test
nop
les
aaa
push
les
aaa
adc
aad
xor
in
push
cmc
aaa
mov
mov
cmp
and
cmp
inc
cmp
push
cmp
cmp
mov
cmp
mov
movsl
cmp
mov
cmp
mov
cmp
add
mov
in
shlb
add
cmp
mov
cmp
xor
cmp
mov
cmp
xor
jl
clc
sub
pop
sub
cmp
int3
test
faddl
sub
hlt
jbe
or
scas
and
out
and
xlat
dec
and
xlat
ss
dec
and
xchg
and
add
add
mulb
cmpsl
cs
lods
xchg
push
and
int3
xchg
and
xchg
and
imul
and
divl
or
scas
and
sub
dec
and
sub
sub
popa
rolb
dec
sub
sub
shr
loop
in
add
int3
das
xchg
aam
jns
sbb
adc
and
add
add
enter
enter
pop
xor
movl
xchg
xor
sbb
xchg
and
pop
call
add
fcmovnu
ss
shlb
mov
enter
shlb
xchg
int3
movsb
ss
xchg
ss
int3
xchg
ss
int3
dec
aaa
inc
int3
add
aas
cs
xlat
cmp
out
cmp
mov
add
cltd
adc
sub
test
lahf
cmp
xchg
sub
out
cmp
xlat
add
in
cmp
imul
aam
cmp
cmp
test
testb
fildl
lea
dec
aaa
pop
cwtl
inc
aaa
pop
nop
fwait
aaa
sub
jecxz
add
adc
idiv
add
add
add
fnsave
in
in
in
in
xor
cmc
xor
int
xor
int
xor
into
and
enter
ror
xor
mov
inc
xor
test
xor
adc
jge
push
xor
int
xor
pop
xor
int3
xor
pop
xor
int3
mov
xor
add
sbb
xorb
or
fs
sub
ret
xor
jmp
das
shl
jns
sub
dec
sub
push
lret
pop
rclb
aad
mov
dec
mov
sub
mov
sub
cmpsl
jl
sbb
and
stos
mov
mov
mov
mov
nop
xor
iret
pop
xor
add
add
push
xor
into
loop
leave
in
mov
pop
sub
shrl
sub
inc
test
mov
xor
sub
les
das
pop
shlb
cli
mov
sub
mov
add
popf
rolb
jge
push
sub
adc
mov
lret
push
cmp
push
xor
int3
mov
shlb
lret
adc
int
ss
inc
ss
aaa
xchg
int3
cmpsl
das
adc
xorl
mov
adc
shlb
jno
adc
xorb
leave
add
mov
mov
das
mov
clc
cs
inc
cs
jl
call
loopne
cmp
add
add
dec
cmp
inc
cmp
cwtl
lea
call
stos
fistpll
or
sbb
ds
repz
dec
cmp
dec
cmp
cmp
jmp
cmp
xlat
xor
mov
sbb
xor
aas
mov
mov
cmp
shlb
out
cmp
add
add
out
imul
add
and
idiv
je
add
add
sbb
stc
leave
xor
mov
test
cmp
or
lods
enter
enter
enter
leave
xor
enter
enter
enter
scas
pushl
test
dec
xor
lret
push
xor
lret
push
xor
scas
push
xor
add
mov
pop
xor
cs
mov
add
pushl
adc
loope
add
js
or
in
sub
aad
and
sahf
xchg
and
cmp
dec
push
push
test
pop
sbb
lds
call
lret
add
dec
xor
in
sub
add
add
pop
sub
jp
cli
daa
mov
rclb
imul
jns
push
outsb
xor
jg
adc
jns
shufps
add
xor
inc
xor
or
and
rdtsc
and
jmp
xor
xor
les
das
cmpsl
les
das
mov
or
das
add
add
sbb
outsl
les
das
pop
les
arpl
aaa
das
dec
les
das
aaa
lds
inc
les
cmp
outsl
das
inc
les
pop
les
dec
les
cmp
inc
cs
cmp
popf
cs
xchg
outsl
cmp
fstpt
in
xchg
aad
ficoms
loope
lret
cmp
lods
cmp
mov
add
sbb
mov
sub
pushf
and
cmp
icebp
cmp
add
push
cltd
std
cmp
dec
cmp
imul
mov
inc
cmp
xor
cmp
jl
add
repnz
idivl
popf
enter
enter
enter
enter
enter
enter
xlat
cmp
add
pop
ret
pop
cmp
ret
jge
in
nop
cmp
ret
stc
cmp
and
xor
pop
ret
and
idiv
mov
add
data16
mov
xor
scas
add
loop
sub
stos
popf
xor
lods
sbb
addr16
insl
aaa
xor
or
push
fstpt
jbe
in
cmp
aas
sub
out
sub
sar
push
cmpsb
add
add
mov
in
pop
push
cli
mov
ficompl
inc
stos
stos
sbb
mov
sub
lock
mov
decl
add
sahf
cli
in
out
repnz
sub
add
fnstenv
or
hlt
xor
leave
sub
int3
mov
xor
xchg
daa
inc
stos
dec
and
xchg
andl
hlt
add
add
fistl
dec
mov
sub
mov
sub
mov
mov
shlb
and
mov
jns
add
stos
shlb
outsl
lods
fidivl
ds
xorb
stos
add
pop
lods
bound
std
lods
es
lods
cs
lods
push
xor
lods
add
mov
scas
lea
add
add
scas
pusha
sbb
data16
mov
sbb
scas
sbb
das
sbb
add
aam
sub
aam
das
push
mov
in
mov
das
dec
mov
cs
jns
adc
cmp
cmp
shl
out
mov
sub
cmp
fidivrl
cmp
add
add
mov
xor
test
and
nop
fldl
pusha
pushf
inc
xor
popf
xor
popf
cwtl
xor
popf
insl
xor
popf
fbstp
add
mov
xchg
idivl
and
mov
dec
aas
fidivrl
ja
popf
aas
out
mov
mov
aas
mov
add
js
add
imul
jecxz
int
test
mov
roll
inc
rorl
xor
into
lock
xchg
xor
dec
aad
ss
aam
ss
aam
aaa
cmp
rolb
xor
adc
xchg
adc
mulb
and
mov
add
cmp
and
mov
fdivr
mov
rclb
xor
enter
testl
mov
xchg
je
lret
mov
cmc
rcll
inc
in
sbb
dec
sbb
out
sbb
mov
leave
les
inc
mov
adc
mov
mov
sbb
mov
push
add
add
scas
push
cmpsb
mov
and
pop
and
mov
and
mov
and
mov
adc
adc
popa
adc
stos
pusha
adc
inc
adc
sub
subb
adc
inc
test
movsb
sbb
lods
daa
sbb
pop
sub
adc
mov
lcall
add
jno
insl
and
jne
adc
into
int3
xor
enter
mov
xor
test
xor
lods
shlb
lods
or
iret
js
mov
iret
pop
xor
aaa
xor
out
push
movsl
in
sub
dec
aad
sub
lds
stc
or
sub
mov
sub
add
add
das
std
sar
cs
lahf
cs
mov
jl
xlat
cmp
mov
cmp
mov
cmp
test
in
sbb
inc
cmp
shll
jb
jge
outsl
rcl
cmp
shr
cmp
rorb
cmp
rcrl
cmp
mov
xchg
cmp
mov
aaa
cmp
loopne
push
cmp
mov
jb
mov
add
push
mov
inc
xlat
shl
ds
shlb
aas
jp
pop
aas
fst
stos
aas
shr
aas
push
das
idiv
cwtl
fiadds
add
iret
insl
xor
pop
xor
dec
or
mov
lods
jo
pop
scas
lea
aaa
scas
les
inc
scas
ret
pop
adc
jmp
lock
adc
add
add
popf
adc
jmp
sahf
sbb
call
or
lret
pop
ucomiss
sbb
les
push
gs
and
test
add
xchg
cwtl
bound
repnz
and
push
mov
pop
daa
cmpl
dec
sti
push
adc
repz
adc
jmp
jb
inc
mov
push
pop
mov
push
out
mov
push
jmp
adc
adc
mov
mov
xchg
sbb
mov
sbb
push
mov
sbb
mov
sbb
fucomi
jecxz
jno
add
fcomi
adc
stos
fists
ljmp
bound
inc
lods
out
adc
jmp
lods
imul
cmpsl
clc
adc
es
xor
adc
pop
stos
xor
adc
cmp
faddl
add
shl
cs
fdivl
out
jno
push
mov
repz
xor
iret
scas
xor
int
sub
lods
mov
mov
nop
cmp
test
cmpb
fldcw
mov
jo
in
fdivrs
hlt
shl
hlt
mov
sarb
les
sarb
fldcw
cmp
sbb
mov
add
shll
mov
or
mov
adc
les
iret
cmp
outsb
cmp
jbe
mov
into
xchg
xchg
into
mov
mov
xchg
cmp
into
cmpsb
cmp
into
mov
mov
iret
cmp
iret
into
cmp
iret
cmp
iret
fidivrs
jmp
shr
cmp
cmpb
pop
idiv
jo
add
add
add
iret
jo
sub
idivl
insb
dec
cmp
pop
aam
cmp
xlat
roll
add
decl
or
aaa
mov
or
lock
adc
bnd
mov
lods
sbb
aad
sbb
aad
adc
push
les
xorb
jmp
sbb
add
add
xor
clc
xchg
sbb
outsb
adc
mov
pop
adc
out
adc
push
adc
jge
sbb
pushf
push
cmp
mov
sbb
add
pushf
test
fldt
sbb
push
sbb
mov
push
in
int
mov
mov
pop
add
jmp
sbb
cmp
add
add
lods
clc
sbb
scas
movsl
sbb
scas
jno
cmp
fstps
mov
insl
cmp
mov
lods
cmp
lods
outsl
adc
stos
rclb
in
stos
pop
adc
adc
jg
shrl
dec
adc
test
inc
mov
outsb
sub
jp
and
jle
and
add
add
adc
lret
rol
pusha
aaa
sbb
fidivs
cwtl
mov
ss
inc
ss
ds
mov
pop
xor
iret
scas
xor
dec
xor
lods
mov
sub
lret
xchg
das
lods
ret
enter
push
cmp
mov
cmp
mov
cmp
cmpsb
and
cmp
add
add
sarl
cs
lds
adc
dec
jle,pt
push
jae,pt
mov
ds
lds
xlat
lds
ds
aas
clc
les
outsl
sbb
incl
add
sub
xor
enter
enter
fbstp
fcmovb
adc
or
jne
add
add
xor
int
xor
int
xor
fistpl
xor
adc
dec
push
adc
cli
pop
mov
movsl
mov
sbb
xchg
popf
push
cmp
je
cmp
std
mov
sbb
in
adc
adc
jno
or
bsf
je
cli
sub
add
add
mov
pop
leave
stos
arpl
xchg
movhps
test
sbb
test
fdiv
insb
push
pop
jmp
pop
sbb
mov
push
add
lods
daa
adc
scas
pop
adc
lods
pop
adc
lods
notl
call
lods
adc
lods
adc
lods
ja
sub
xchg
pop
lods
xchg
pop
lods
ja
add
add
adc
daa
adc
lods
daa
adc
lods
aaa
adc
lods
daa
adc
lods
pop
adc
lods
pop
adc
lods
notl
call
lods
out
mov
scas
notl
test
out
fsubrs
adc
lods
add
int
xor
lods
cmpsb
xor
lods
push
xor
lods
push
xor
lods
push
xor
int3
push
xor
int3
xor
int3
divb
dec
out
xor
add
add
data16
mov
sub
out
sub
push
int
sub
out
cmpsb
sub
cmpsb
mov
cs
push
cmpsb
ret
xchg
imulb
data16
sub
movsw
push
sub
add
les
cmp
movsb
xor
les
add
add
cmp
loop
fsubrs
lret
cmp
lret
call
cmp
test
lret
enter
sub
int3
add
and
idiv
push
faddl
add
or
out
int
xor
into
dec
xor
into
test
pusha
rcl
xor
cmpsl
xor
ret
out
sbb
mov
cmp
fs
fdivs
add
add
les
mov
mov
push
mov
jecxz
adc
adc
notb
add
sar
mov
test
scas
sahf
jb
nop
insb
sbb
xchg
inc
sbb
mov
sbb
repnz
sub
sbb
mov
fucomip
push
or
pop
add
xchg
sbb
or
add
shlb
loopne
adc
mov
and
ljmp
fimull
fldt
xor
ficompl
int3
mov
sbb
scas
xor
sbb
mov
mov
or
movsb
aas
or
fimull
mov
or
cmp
inc
adc
call
add
fcomi
adc
add
pop
stos
xchg
test
cld
adc
stos
pushf
adc
stos
mov
adc
rclb
ja
dec
sbb
scas
mov
inc
mov
pop
popa
lods
out
sbb
mov
cmp
mov
gs
leave
lds
sbb
sbb
ss
pop
cmp
xor
test
mov
popa
cmp
lret
flds
add
ret
xor
adc
adc
ljmp
ret
push
mov
clc
xor
lret
xchg
xor
ret
mov
cmp
mov
lods
stc
ss
lods
js
sbb
data16
into
shlb
add
enter
leave
push
xor
leave
pop
xor
iret
insb
xor
mov
and
lea
rcrb
cmp
movsl
xor
rol
xor
iret
shll
xchg
iret
or
xchg
iret
sbb
jle
aaa
xor
iret
xorl
test
xor
into
sbb
movsb
leave
inc
xor
data16
lret
mov
leave
lds
mov
fdivs
jp
in
cmpsb
leave
stc
xor
cmp
adc
add
scas
lea
sbb
das
push
dec
xchg
stc
sbb
push
push
mov
jmp
sub
push
loop
sub
cli
leave
mov
sbb
nop
sbb
enter
mov
sbb
iret
sbb
jl
xor
lret
xchg
in
mov
mov
shl
push
or
sub
ljmp
rcrb
adc
icebp
stos
or
fsubrl
mov
or
movsl
fs
movsl
xor
movsl
and
movsl
repz
cmpsl
dec
or
dec
or
cmpsl
pop
or
movsb
or
or
lahf
das
adc
mov
mov
jbe
mov
or
add
add
mov
sahf
push
scas
mov
mov
or
adc
add
fildl
in
into
xor
test
push
xor
jg
or
push
fxch
mov
xor
scas
dec
xor
iret
jne
pop
xor
jge
in
int
xor
lods
sbb
lods
in
xor
add
lods
lcall
rclb
dec
lret
cmp
or
ss
sub
stos
data16
mov
xor
dec
das
clc
rcll
xor
aaa
cmp
mov
cmp
xor
aad
cmp
sarl
cmp
rcrl
and
ja
jo
test
rcl
cmp
shll
cmp
rcl
cmp
add
int
xor
shll
adc
ja
and
cmpsl
cmp
sar
cmp
rorb
and
sarb
rcl
push
ds
aad
ds
aad
aas
ja
xor
js
jae
iret
aam
aas
enter
push
jl
inc
xlat
add
mov
jle
mov
dec
or
data16
clc
or
int3
adc
inc
iret
and
add
add
lea
mov
add
xchg
stos
adc
mov
adc
test
or
cmc
xchg
or
in
add
fwait
aam
add
mov
les
mov
add
sub
cmpsl
repnz
xchg
incl
xchg
mov
push
incb
mov
fcomi
pop
cmp
add
sahf
mov
inc
lahf
call
add
stos
push
adc
ficoms
lods
push
add
lahf
push
sbb
notl
cli
cmpsl
add
iret
cmpsl
call
push
loopne
aas
rdmsr
test
xchg
adc
xchg
adc
cmpsb
adc
ret
adc
movsb
inc
or
mov
jmp
add
add
lahf
rolb
negl
testb
lahf
add
mov
xor
add
add
jl
xor
les
aaa
pop
mov
aaa
inc
js
sbb
arpl
shlb
cmp
inc
les
add
fildl
jmp
mov
scas
xor
dec
xor
add
add
lret
scas
push
xor
sub
scas
scas
fdivs
lock
xor
pop
xor
xor
int3
mov
xor
into
dec
xor
popa
into
pushl
jecxz
add
or
aaa
cs
js
clc
aaa
or
dec
cmp
shlb
cmp
shrl
cmp
ror
cmp
add
dec
iret
jns
jo
adc
imul
inc
shlb
cmp
shll
cmp
sar
cmp
sarb
repz
cmp
mov
sub
xor
mov
cltd
sbbb
bnd
std
sub
adc
int
adc
add
int
or
int3
push
or
lods
outsb
adc
pop
adc
scas
fistl
stc
popl
adc
jecxz
mov
and
push
or
inc
push
and
adc
arpl
mov
or
jl
ror
cwtl
push
or
adc
adc
inc
adc
adc
add
add
adc
or
jne
pop
or
mov
decb
adcl
push
jno
int3
push
mov
adc
push
add
std
or
push
adc
adc
or
dec
or
adc
or
push
dec
or
push
icebp
or
push
add
rcll
es
push
and
and
add
add
add
cmp
mov
pop
mov
cmp
les
icebp
mov
divb
mov
cmpsl
xor
sarb
fs
jns
lea
sbb
sub
adc
mov
divb
mov
sbb
xchg
add
add
shll
shlb
ret
xchg
cmp
push
loop
cmp
loopne
mov
gs
aas
push
loopne
aas
push
loopne
add
pushl
in
jmp
int
cld
xor
xor
fnsave
mov
inc
xor
in
jnp
xchg
jmp
xor
in
cmpsb
xor
mov
xor
call
add
call
xor
jmp
iret
xor
call
adc
icebp
out
aaa
stos
in
cmp
add
jp
push
cmp
aam
fst
and
cmp
test
add
mov
out
std
mov
mov
clc
nop
out
rorl
cli
xchg
hlt
sbb
hlt
testl
add
out
hlt
jge
jbe
repz
cmp
testb
testl
mov
add
mov
dec
add
jo
rorb
add
lds
mov
fldt
add
jmp
add
or
repz
hlt
add
hlt
add
hlt
adc
hlt
or
hlt
loopne
div
loopne
div
mov
into
hlt
mov
or
cmc
popf
or
hlt
inc
or
jge
pop
or
cmc
dec
or
cmc
mov
or
testb
sbb
and
les
repz
jns
mov
idivl
add
lcall
movsb
push
shlb
add
xchg
jg
xchg
cmp
jns
cmp
jno
cmp
idivw
fcoml
cmp
push
stos
cmp
mov
cmp
inc
cmp
xor
xor
sub
xor
adc
aaa
in
pushl
add
test
jno
pop
aaa
dec
mov
pop
negb
fildl
jl
add
into
pop
xor
mov
add
sti
dec
adc
cmp
xor
dec
push
xor
push
das
xor
repz
mov
xchg
push
pop
aaa
les
aaa
ret
push
mov
push
push
lahf
aaa
daa
push
enter
ljmp
push
push
cmp
push
lea
lock
ret
cmp
fnstcw
mov
push
pop
cmp
ret
cmp
or
jb
xchg
cmp
add
pop
push
pop
cmp
push
xchg
cmp
push
mov
rclb
mov
xor
cmp
nop
div
mov
imul
addb
sti
mov
inc
repz
sbb
loop
divb
int3
imulb
lret
incl
sar
mov
mov
add
pop
in
xchg
in
in
mov
xor
sbb
repz
out
mov
repz
out
or
jecxz
in
repnz
into
mov
fs
xchg
rep
into
shl
mov
scas
in
in
test
psubusw
lea
mov
divl
or
or
clc
or
stc
push
or
cmc
or
rorl
scas
sti
xchg
adc
std
add
add
adc
test
test
xchg
stc
add
cmp
out
dec
cli
add
adc
stos
adc
insl
adc
scas
adc
and
xor
push
cmp
mov
or
repz
or
sub
xor
sbb
aas
out
out
roll
mov
roll
xor
lods
stos
xor
add
lods
and
in
lods
or
xor
mov
daa
test
sub
xchg
jne
sub
jmp
push
sahf
das
and
push
mov
or
das
push
sub
das
xchg
xor
das
dec
adc
push
or
cs
adc
nop
aaa
jae
mov
enter
add
add
push
stos
cmp
dec
out
cmp
push
insb
cmp
push
dec
cmp
cmpl
fistl
cmp
popf
push
add
mov
push
jbe
pop
push
idiv
fs
dec
xlat
add
stc
dec
mov
xor
jg
dec
dec
sub
movsb
dec
shll
dec
push
xor
dec
cwtl
xor
dec
lds
dec
out
xor
add
fs
xorb
adc
jmp
lods
out
and
in
shlb
in
shll
mov
sti
hlt
xchg
nop
stc
mov
add
adc
mov
arpl
js
es
cmp
inc
loop
lcall
inc
into
xchg
out
in
ss
mov
lock
test
lock
mov
repz
add
add
xchg
repnz
xor
xor
ljmp
cmc
adc
mov
in
cmp
or
push
cli
mov
push
or
or
push
adc
cld
lock
jae
dec
sti
rorb
ret
leave
dec
fs
fcmovne
hlt
sbb
adc
std
or
in
mov
pmulhw
add
add
pmaddwd
mov
in
mov
syscall
clc
mov
pmulhw
mov
adc
clc
repnz
clc
loop
add
clc
mov
xor
insl
adc
adc
add
pop
pop
cltd
aaa
scas
add
aaa
vandnps
nop
hlt
jle
jne
push
aaa
or
aam
ss
roll
add
pushf
ss
ret
mov
ss
mov
ss
cmpsl
sbb
ds
dec
imul
outsb
dec
testb
pushl
sub
popf
xor
int
jmp
mov
fisubl
test
push
ds
mov
dec
and
xor
leave
dec
cmp
cmp
mov
push
flds
dec
dec
movsl
xor
inc
push
xor
inc
sbb
ret
dec
dec
xor
push
xor
sub
cmp
mov
add
cmp
push
ss
push
sarb
jle
nop
aas
adc
cmp
test
sub
es
mov
aas
push
push
jecxz
and
and
fs
cmc
mov
cmp
or
add
add
sub
repnz
in
mov
inc
in
in
in
push
int
repnz
int
repz
std
repz
pop
in
jge
add
in
ljmp
out
lret
mov
out
fisttpl
repnz
sti
mov
or
xor
sbb
and
sub
xchg
out
jmp
adc
pop
leave
mov
icebp
jnp
ret
mov
icebp
fwait
add
add
shl
mov
xchg
fstpt
push
dec
dec
lods
add
fucomi
repz
or
repz
adc
repz
or
repnz
bnd
repz
repz
push
repz
or
cmp
inc
repz
inc
repz
push
repz
inc
repz
add
out
add
add
pextrw
setge
out
cmovne
push
adc
adc
out
mov
adc
lock
adc
or
dec
scas
sub
dec
iret
sub
dec
outsl
sub
dec
sub
sub
dec
sub
sbb
das
int
wrmsr
and
and
das
sbb
lea
das
and
loopne
das
in
out
cs
add
add
push
das
movsl
jmp
cs
jecxz
cs
dec
sarl
inc
stos
jbe
cmp
xchg
sub
push
cs
mov
fildl
jmp
fiadds
add
add
add
add
add
add
add
add
and
add
adc
add
adc
add
add
add
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
fldl
add
add
xchg
fldl
add
add
xchg
fldl
add
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fiaddl
add
add
movsb
fiaddl
add
add
fiaddl
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
mov
xor
add
xor
add
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
add
mov
fildl
jmp
mov
fildl
jmp
aam
add
in
add
in
add
aam
add
aam
add
movsb
fiadds
add
add
xchg
fiadds
add
add
xchg
fiadds
add
add
fiadds
add
add
add
add
push
fiadds
add
add
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
in
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
add
mov
fildl
add
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
fiaddl
add
add
xchg
fiaddl
add
add
xchg
fiaddl
add
add
fiaddl
add
push
fiaddl
add
add
add
add
add
add
and
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
add
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
add
add
push
filds
add
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
fiadds
add
add
xchg
fiadds
add
add
xchg
fiadds
add
add
add
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
add
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
jmp
mov
fildl
add
add
fildl
add
add
fildl
add
add
add
add
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
in
add
in
add
aam
add
aam
add
in
add
in
add
aam
add
aam
add
movsb
fiaddl
add
add
xchg
fiaddl
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
mov
inc
add
mov
inc
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
add
mov
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fildl
jmp
mov
fildl
jmp
jp
and
pushf
and
add
test
dec
lods
xchg
cwtl
test
lock
xor
cltd
cmp
test
inc
cs
jle
frstor
add
add
push
lods
mov
testb
aas
jl
add
insl
pop
jno
sbb
stos
inc
cmp
sti
js
stos
mov
movsb
imul
in
addl
sub
mov
test
add
lea
sub
dec
adc
std
fdivl
int3
lcall
je
jo
or
jecxz,pt
icebp
push
add
add
dec
mov
dec
sbb
icebp
xorb
std
rcll
int
jae
test
sarl
fnstcw
inc
mov
sub
jb
add
pop
xchg
aam
push
cmp
sbb
push
push
pop
xchg
mov
inc
fdivs
xor
pop
mov
daa
push
andb
cs
mov
mov
mov
lcall
pop
ret
xchg
repz
dec
movl
filds
push
aam
lock
dec
xchg
jle
lret
cwtl
and
cmp
cwtl
mov
pop
scas
jmp
and
ret
mov
roll
scas
lahf
dec
testl
jb
ljmp
pop
push
inc
add
add
ficompl
scas
mov
mov
push
or
mov
push
mov
inc
xchg
fimull
cmc
jns
pushf
mov
push
subb
scas
and
or
add
sbb
popf
mov
jns
test
sub
ja
inc
cli
dec
mov
rol
testb
adc
jle
popf
jb
cmp
jne
sub
sbb
mov
popf
ds
mov
mov
sbb
jb
ret
fidivrl
mov
pop
orb
jp
movsl
pusha
addr16
mov
loopne
pushf
mov
int3
call
xchg
or
ss
ret
or
push
xrelease
leave
add
add
fs
ss
mov
bound
inc
mov
mov
pop
imul
add
and
push
mov
mov
int3
push
testb
ss
loope
mov
add
bound
xchg
fisttpll
mov
inc
clc
inc
mov
mov
testl
call
in
sti
add
fs
lock
add
cltd
stc
mov
iret
add
fs
cld
jp
in
add
bound
sbb
mov
daa
mov
arpl
mov
dec
lock
fiaddl
inc
mov
cmp
xchg
mov
movmskps
insl
faddl
add
sbb
mov
fisubrs
in
inc
mov
mov
mov
add
loopne
dec
lods
pop
rolb
icebp
jmp
ljmp
mov
pop
pop
in
imul
testb
mov
sub
testb
xchg
add
fiaddl
inc
mov
pop
or
xchg
add
roll
add
inc
add
enter
fisttpl
in
cmp
mov
jecxz
push
loope
ret
add
adcl
jae
bound
fistpll
fwait
add
xchg
push
stos
pop
or
fisttpl
mov
in
add
sbb
int3
mov
and
int3
jns
popa
in
jge
cmp
xor
lahf
or
xor
or
pop
add
add
pop
pusha
in
sbb
mov
mov
inc
mov
and
int3
add
pop
pusha
in
jmp
fldt
mov
ret
or
cmp
and
pusha
cmp
or
sub
lds
cld
ss
adc
xchg
push
jb
cmc
mov
add
pusha
mov
int3
or
push
adcb
jmp
pusha
cmp
sbb
mov
lock
adc
fmuls
add
or
scas
adc
sbb
xor
inc
std
ljmp
ret
pop
pop
push
pusha
in
aad
add
sbb
mov
add
mov
sbb
int3
sbbl
push
in
imul
jns
mov
fildl
mov
aam
push
mov
mov
push
cmp
ds
mov
mov
add
daa
add
push
inc
cld
ss
cmc
cmp
jb
inc
mov
push
mov
pushf
sar
pop
sti
add
add
push
in
mov
push
inc
lock
testb
fisttpl
or
cwtl
add
clc
inc
fists
add
lret
mov
push
dec
or
int3
mov
push
std
or
mov
push
cmp
mov
aam
imul
mov
ret
push
in
sub
mov
push
cmp
ss
fisttpll
fsts
add
add
jmp
add
test
add
pop
cli
add
fimuls
nop
loope
js
cmpb
push
test
fiaddl
add
fsubrl
inc
xchg
loope
adc
add
notb
inc
lahf
cmc
mov
cmp
cmp
cmp
push
vmovups
pop
push
inc
or
cmp
pop
add
add
loope
clc
roll
inc
int
cmp
inc
xchg
loope
nop
roll
adc
in
andb
add
pop
jns
mov
cmp
movb
mov
pop
cmp
dec
mov
or
cmp
xor
jmp
mov
mov
sub
addl
add
adc
add
or
ss
cmc
push
gs
hlt
call
mov
mov
aaa
mov
push
adc
rcll
ss
in
cld
fimuls
mov
add
push
dec
loopne
fdiv
push
push
fcompl
push
push
in
jmp
fwait
add
mov
or
cmp
add
add
push
cmp
or
daa
add
push
cmp
inc
cltd
adc
xchg
add
push
jp
cmc
mov
ret
sbb
int3
or
mov
jnp
imul
outsl
sbb
int3
stc
pop
push
in
sub
mov
mov
ljmp
rcpps
add
add
add
hlt
mov
mov
push
dec
clc
xor
cmc
mov
inc
sbb
ds
add
loopne
rclb
push
sbb
nop
or
push
cmp
ss
add
push
jne
cmp
xor
sbb
retw
mov
push
adc
inc
loop
cld
mov
xor
es
mov
add
out
sbb
int3
or
pop
push
push
in
jmp
fidivl
add
push
in
cmc
dec
pop
mov
push
push
inc
clc
or
or
mov
add
mov
pusha
or
xor
mov
add
lock
jmp
push
add
add
add
sub
add
fadds
ss
jge
sbb
add
xor
leave
arpl
add
and
mov
pop
or
leave
mov
outsl
or
or
mov
add
pusha
or
mov
mov
popf
shll
adc
cmp
mov
xor
push
add
add
xchg
int3
jns
push
in
add
cmp
test
mov
aam
add
leave
xchg
int3
adcl
push
in
sub
mov
add
push
cmp
xor
cmp
mov
mov
push
mov
iret
mov
push
cmp
call
mov
add
lds
cli
inc
push
mov
push
mov
xor
xlat
add
and
cltd
fisttpll
jmp
mov
shrl
cmpl
inc
push
faddl
add
sub
hlt
inc
xchg
loope
push
cmp
cltd
jmp
je
push
inc
call
add
add
movsl
adc
mov
mov
push
inc
adc
loope
mov
test
mov
out
shl
dec
fisttps
inc
orl
or
mov
aaa
add
mov
push
nop
and
addl
shrb
nop
jmp
in
xor
cld
bound
add
mov
add
push
add
add
sti
cmp
or
sub
or
insb
or
mov
pushl
cmpl
jge
add
mov
mov
xor
and
push
or
or
std
mov
xor
mov
mov
aam
add
fistpll
add
add
mov
push
add
add
xchg
cmc
push
xlat
fcomi
push
insl
jge
or
fmull
fdivs
xchg
mov
add
inc
stc
push
cmp
inc
loope
mov
push
mov
push
or
jmp
cmp
mov
pop
mov
add
mov
push
inc
fdivrs
fisttpl
loopne
pop
or
inc
xor
add
pop
or
push
add
mov
add
jge
stc
fistl
add
push
call
ds
add
adc
mov
pop
or
xor
mov
add
enter
lds
mov
mov
jnp
inc
mov
and
addl
mov
push
in
clc
push
pop
mov
mov
add
mov
pop
testb
push
or
lds
loope
mov
or
dec
sub
push
or
mov
add
repz
jp
mov
inc
mov
lea
and
push
mov
mov
mov
push
or
sti
sub
mov
mov
add
int3
stc
pextrw
push
in
adc
inc
icebp
add
stc
pextrw
push
in
jae
mov
rcll
inc
sarl
pop
jle
push
in
and
jl
or
fcoml
push
and
ds
or
mov
imul
enter
add
add
push
call
sbb
int3
call
idivl
add
fildl
add
cwtl
in
add
pop
add
mov
fiaddl
add
shlb
test
sbb
push
testb
cmpsl
add
inc
mov
xor
mov
fiaddl
mov
xchg
add
or
mov
add
fildll
jne
mov
ljmp
js
or
fisttpl
add
mov
jnp
inc
mov
cltd
xor
dec
adc
xchg
add
xlat
inc
add
jno
sbb
add
rcrb
mov
add
mov
fisttpl
add
xor
imull
js
or
fdiv
adc
pop
adc
inc
mov
fcoml
sub
std
mov
sub
aad
sbb
addl
add
mov
fistl
inc
and
ds
add
dec
sbb
add
movb
loopne
push
inc
fmull
add
js
or
mov
outsl
jp
or
faddl
inc
cltd
lods
mov
mov
xor
call
mov
add
aaa
add
gs
in
mov
mov
addr16
loopne
call
mov
pop
xchg
xbegin
add
mov
mov
cmp
mov
addr16
mov
add
mov
add
jo
mov
mov
in
add
inc
clc
cmp
call
adc
mov
cmp
or
fildl
inc
movsl
fs
push
and
lds
or
enter
or
enter
add
ja
inc
mov
sbb
inc
test
mov
cmp
add
mov
rorb
mov
fistl
mov
pop
std
mov
lods
jmp
test
std
xor
add
or
mov
or
add
jge
stc
fisttpl
loope
jmp
mov
lods
ret
fcompl
sub
int3
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
xor
into
movsl
stos
stos
jp
hlt
outsb
popf
jl
adc
jo
dec
out
mov
fstps
or
mov
push
int3
sahf
mov
stos
std
pop
pop
mov
test
xlat
xchg
add
test
push
cmp
loop,pn
daa
scas
mov
daa
or
cmp
dec
jecxz
lahf
stos
rcl
insl
xor
addr16
mov
addr16
dec
in
inc
or
sarb
mov
clc
shl
dec
addb
roll
aam
push
mov
sub
inc
adc
mov
int
mov
or
lahf
sbb
ret
scas
stos
pop
jp
jae
jecxz
push
jae
jp
orl
dec
jno,pt
cmp
in
stos
mov
test
xlat
cmpsl
sbb
roll
mov
cld
pop
push
fisubrs
mov
ljmp
adc
sbb
xchg
out
jmp
shl
int
and
dec
or
push
insb
cld
pop
pop
rep
nop
inc
ret
call
cmp
jne
scas
jne
divb
and
mov
cmpsb
popf
xchg
adc
or
lret
push
pusha
dec
mov
adc
outsl
jl
es
xor
in
fidivs
or
shrb
xor
mov
push
inc
or
lods
ret
xorb
mov
push
subb
jbe
dec
leave
fildl
popa
mov
lcall
testb
mov
int3
sbbl
xchg
xor
std
pushl
in
lods
cld
les
add
cli
out
out
movsb
out
loopne
loopne
jnp
xchg
dec
xor
sub
enter
sbb
push
insl
mov
dec
repnz
sbb
xor
push
xchg
adc
dec
cmp
inc
add
and
jmp
jmp
jmp
add
jns
jae
je
add
xor
xor
pop
add
popa
add
imul
je
add
add
add
add
inc
add
add
add
add
xor
inc
add
add
xor
xor
sub
add
add
sub
add
inc
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
pop
add
outsb
add
jb
outsl
add
push
add
jb
jbe
add
xor
xor
add
in
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
imul
insb
insb
outsl
arpl
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
xor
add
add
add
js
add
add
add
js
add
mov
add
add
add
sbbb
add
cmp
add
xor
add
add
add
add
add
push
add
addb
add
xor
add
add
add
or
add
add
test
add
add
xor
add
add
add
add
add
nop
add
addb
add
xor
add
add
add
or
add
ret
sub
add
xor
add
add
add
call
add
addb
add
xor
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
add
adc
add
xor
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
add
push
add
addb
add
xor
add
add
add
or
add
add
push
movl
add
add
add
add
push
add
add
add
int
int
rolb
add
add
add
add
add
adc
add
add
add
add
add
mov
mov
testb
sbb
adc
ret
adc
dec
ja
lea
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xorb
pop
jo
add
jo
add
xchg
lock
hlt
les
lock
add
jo
add
jo
add
add
add
add
add
inc
inc
add
les
push
lock
inc
inc
sldt
cmova
inc
push
ud0
incl
pushl
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
add
add
rolb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
inc
mov
add
push
add
inc
mov
aas
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
cld
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
add
jb
add
add
insb
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
pop
add
je
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
dec
add
dec
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
jno
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
dec
add
add
pop
add
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
imul
add
add
add
inc
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
sub
jns
imul
sub
dec
imul
je
inc
outsl
jb
outsl
jb
je
outsl
outsb
and
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
insl
gs
insl
outsl
outsb
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jbe
jb
imul
xor
xor
xor
and
gs
xor
and
ds
jae
jb
jo
imul
insl
outsl
outsb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
and
and
and
gs
cmp
outsb
jbe
imul
or
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
and
and
and
and
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
je
jne
je
outsb
outsw
ds
jae
gs
bound
.byte
.byte
add
add
push
add
add
xor
das
xor
lods
xor
xor
xor
mov
mov
scas
xor
dec
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lods
and
xor
inc
aaa
addr16
jae
add
add
add
dec
cmp
pop
cmp
cmp
