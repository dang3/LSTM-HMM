pushl
push
ss
add
lea
test
adc
push
inc
and
fbstp
dec
enter
dec
mov
mov
sub
inc
dec
in
push
mov
call
mov
push
int3
and
je
int
xor
mov
dec
pop
and
inc
pop
in
xor
jmp
divl
fs
dec
or
mov
scas
ret
xchg
ss
mov
incl
lock
cmp
push
scas
repnz
fisttps
inc
push
sahf
lods
xchg
mov
rcll
arpl
fldcw
mov
decl
sbb
inc
dec
pop
into
insb
lods
jbe
cld
addb
out
xor
pusha
or
sub
mov
jmp
fnstenv
out
sub
addr16
std
dec
push
dec
loope
imul
repnz
decl
push
in
ret
xor
mov
sbb
out
icebp
sbb
pinsrw
inc
mov
mov
push
add
incl
and
inc
add
mov
add
mov
lods
mov
add
and
jo
cli
mov
dec
cmc
sbb
or
or
adc
nop
inc
add
add
mov
or
pop
push
add
cmp
mov
adc
or
add
or
das
sub
sub
push
inc
and
mov
subb
xchg
and
add
ljmp
inc
movsl
jns
leave
or
dec
lahf
cwtl
cmp
hlt
dec
jp
fidivs
es
jns
inc
std
imul
cmp
mov
lds
mov
mov
repz
ss
mov
aas
pop
cmp
or
dec
call
stc
sti
cs
and
mov
mov
mov
sub
mov
mov
mov
sti
mov
call
mov
jne
and
mov
jmp
test
iret
das
or
addr16
adc
mov
dec
mov
sti
mov
mov
ret
insb
sub
lret
sub
int
sbb
imul
or
dec
fxch
adc
mov
std
cltd
xchg
adc
cmp
sbbl
push
sub
push
decb
test
pop
sub
add
addr16
das
ds
out
rcll
pushf
loope
notl
gs
dec
rol
and
dec
xor
test
sbb
aad
pusha
mov
jle
jp
ret
push
push
imull
add
push
loop
add
xorb
jmp
dec
adc
gs
jmp
push
or
sub
fadds
outsb
inc
dec
mov
icebp
lret
dec
dec
or
aas
in
popa
sti
mov
pusha
add
cmpsl
data16
mov
add
cltd
mov
cmp
jmp
add
cmp
loop
cltd
rclb
test
fsubs
insl
aaa
rorb
aas
push
jne
push
addr16
outsl
js
and
mov
mov
sub
fists
push
push
incl
repnz
jbe
into
mov
vpaddb
jmp
test
popf
test
call
ljmp
enter
imul
fsubs
lock
xor
mov
jns
mov
or
mov
xor
mov
push
add
out
xorb
shrl
movb
xor
lock
filds
insl
inc
outsl
jp
js
int
mov
sub
push
xor
push
and
add
adc
push
add
inc
inc
add
subl
inc
add
fs
add
nop
push
add
inc
adc
aaa
and
and
call
pop
insl
ja
ja
push
jo
movsb
test
jmp
cmp
sbb
shrl
mov
sbb
dec
test
add
ss
decl
and
push
xchg
mov
mov
xchg
dec
in
jne
add
push
jmp
xor
pop
vunpckhps
mov
cli
divl
jne
mov
push
sarb
dec
adc
cmp
mov
xchg
sbb
push
and
cs
fdivl
or
pushl
outsl
fcmove
leave
mov
pop
ss
or
mov
xchg
or
aad
out
dec
jnp
jae
jmp
stc
inc
dec
lcall
jecxz
addr16
jns
in
jmp
jne
faddl
and
mov
jmp
and
and
leave
test
mov
lret
lahf
pusha
hlt
out
std
mov
pop
sub
sub
decl
lcall
cmp
mull
lcall
call
mov
incl
add
stos
adc
mov
push
inc
in
xor
rol
mov
mov
lock
jmp
or
lea
xor
mov
or
stos
mov
sub
mov
jb
lcall
sbb
dec
mov
sbb
adc
mov
call
pop
push
rorl
mov
lret
push
pop
jp
and
outsb
movsl
and
inc
andl
lods
stos
cmp
pop
xchg
pop
and
test
outsb
gs
or
jnp
aaa
or
ljmp
cmp
int
js
mov
lods
je
dec
push
pop
fidivrs
popa
int3
adc
iret
sbb
ret
ljmp
mov
in
mov
xchg
jle
leave
mov
loop
push
mov
rcrb
fsts
setl
dec
shr
mov
xchg
ret
push
mov
xchg
jmp
ljmp
shl
data16
in
inc
mov
daa
rcrl
fcoml
cmp
popa
jg
mov
repnz
enter
pushl
add
call
cmp
sbb
push
test
xor
lcall
cltd
jnp
call
jno
out
sub
inc
jmp
xchg
mov
loope
adc
in
loopne
pushf
nop
jecxz
dec
add
cmp
sbb
xor
popf
and
in
dec
jbe
mov
mov
test
pop
jg
or
push
xor
sub
out
decl
fs
dec
cmc
sbb
imul
sbb
mov
jb
jge
out
sbb
dec
stos
inc
cs
xor
sub
jbe
jns
mov
hlt
insb
push
lods
ss
mov
sbb
mov
cmpsb
dec
cmp
sbb
mov
pop
fdiv
cmc
pushf
addr16
lock
ljmp
pop
sub
movsl
repnz
xchg
mov
sbb
or
pmaddwd
and
js
jg
jmp
popf
jns
jg
je
sub
movsl
pop
jl
xor
sub
xchg
ljmp
add
xchg
adc
or
or
jbe
and
outsl
push
js
ds
je
in
stc
cmp
or
xchg
or
scas
xchg
mov
or
jo
mov
imul
xchg
sbb
pop
dec
mov
lahf
xchg
cwtl
repz
jg
mov
inc
sub
sbbl
sub
and
sahf
out
sbb
std
pop
mov
xor
sbb
idiv
or
into
je
ss
cmp
inc
cmp
incl
ret
jecxz
push
xchg
or
out
inc
jno
sub
sahf
negl
xchg
dec
pop
ds
xchg
je
aas
mov
jl
sub
mov
mov
dec
and
xor
repz
outsl
jb
sub
xchg
fnstenv
cltd
sub
pop
lock
jns
mov
pop
cmp
outsl
jg
xchg
jae
and
push
and
int
sbb
jo
sbb
dec
lahf
sbb
outsb
dec
mov
pop
ds
outsb
sub
inc
and
int
fbstp
cmp
dec
or
jo
sti
mov
push
add
mov
pop
dec
push
xlat
jecxz
xor
jecxz
es
das
and
das
popa
ret
ljmp
xchg
cs
das
into
and
jecxz
pop
jl
mov
ss
dec
test
into
cmpsl
xchg
pop
out
call
jecxz
inc
jl
lea
incl
xchg
and
pop
andl
adc
jecxz
mov
fdivl
iret
mov
jmp
sbb
xchg
stc
out
dec
mov
into
and
pop
fdivl
jae
fisubl
lods
cmp
test
jns
sbb
outsb
add
jo
sub
cltd
adc
rorl
lds
sbb
dec
push
mov
fistpl
faddp
xor
lahf
idivb
push
xor
xor
cmp
jg
aaa
cmp
or
mov
pop
test
and
or
scas
dec
xchg
jle
aam
pop
mov
push
or
push
inc
cmpsb
dec
or
push
xor
fcomi
xor
or
cmp
mov
mov
mov
push
decb
sbb
ljmp
pop
lods
hlt
cmc
adc
dec
dec
sbb
movsl
xor
stos
pop
sub
idiv
decl
and
jmp
push
cltd
jno
jo
pop
jle
or
pop
adc
sub
mov
sub
bound
and
jne
out
ds
in
insl
fistpl
scas
loopne
add
xchg
aad
dec
sbb
ficoms
adc
sub
sbb
xlat
mov
xchg
sahf
ret
fs
mov
fisttpl
nop
xor
push
std
xchg
dec
repz
lret
add
push
cld
mov
out
and
xor
dec
xchg
movb
mov
lcall
mov
xlat
and
inc
mov
stos
xchg
sub
into
or
jle
hlt
lret
pushl
in
sub
and
fcoml
mov
push
std
ljmp
mov
inc
dec
shrb
mov
mov
mov
ljmp
int
mov
call
cld
repnz
loop
xor
data16
addr16
sbb
ret
lcall
sbb
std
adc
mov
push
adc
hlt
or
or
rcrb
mul
sarb
lcall
inc
sbb
pop
jnp
pop
enter
notb
pop
shlb
fisttps
mov
dec
test
push
jno
pop
fbstp
dec
js
scas
xchg
add
mov
cld
pushl
dec
ret
testl
cmc
testl
lock
lock
iret
or
cltd
cmpl
into
pop
hlt
in
enter
dec
into
cli
decl
mov
std
dec
add
jecxz
into
jmp
ss
ret
mov
xorl
fiaddl
mov
sbb
clc
add
pop
arpl
jl
lods
push
cmp
add
sbb
xchg
aas
mov
lds
dec
jbe
mov
and
lods
adc
into
dec
xchg
outsb
test
dec
dec
ljmp
cmpsl
jecxz
iret
scas
cltd
loope
xchg
and
xchg
enter
xchg
hlt
jne
sbb
cld
jmp
push
mov
mov
data16
outsl
xadd
push
aaa
push
sti
xchg
cs
dec
push
enter
xchg
lahf
add
mov
dec
out
push
jge
mov
cli
inc
pop
icebp
sbb
repz
outsl
repz
push
push
jns
leave
aas
mov
cld
aaa
inc
sti
negb
loopne
out
mov
incl
pop
cld
outsb
jbe
fidivs
mov
nop
mov
mov
test
repz
movsb
jecxz
mov
cltd
cli
lgdtl
lods
xorl
ja
adc
lea
paddd
pushf
and
dec
xor
mov
out
mov
fdivl
mov
mov
in
xorb
mov
int3
aad
dec
sbb
aaa
dec
data16
lea
mov
test
loope
mov
call
das
popa
test
push
outsb
faddl
es
cwtl
mov
sbb
sub
decl
push
push
pop
scas
packssdw
arpl
test
xchg
push
xor
arpl
inc
je
inc
cld
push
mov
les
push
insl
xor
inc
gs
data16
mov
js
popa
inc
ja
push
inc
and
inc
push
dec
je
jp
inc
push
xor
je
pushl
std
lcall
xor
jbe
dec
push
dec
arpl
imul
xor
jae
push
ss
sti
jns
insl
dec
cmp
je
push
push
push
inc
push
inc
push
addr16
js
pop
dec
push
pop
push
bound
bound
mov
xor
inc
pop
je
pop
imul
xchg
addr16
inc
inc
inc
push
push
push
cmp
push
aaa
inc
push
js
jb
xor
imul
jae
dec
bound
inc
pop
inc
xor
outsl
pop
inc
push
xor
outsb
bound
push
incl
jae
dec
gs
imul
ss
push
xor
xor
ljmp
clc
incl
outsl
push
outsb
push
dec
inc
inc
inc
jp
dec
addb
dec
push
jb
gs
dec
popa
mov
ja
push
addr16
push
push
jns
jb
xor
push
jne
divb
insb
push
dec
outsl
or
jae
pop
or
insl
jo
js
test
push
jae
dec
outsb
insb
aaa
inc
popa
insl
outsl
popa
je
inc
js
popa
imul
xor
xor
cmp
dec
imul
cli
dec
addr16
pushl
aaa
insb
xor
xor
dec
jb
push
outsb
outsl
inc
jno
dec
xor
pop
mov
jbe
out
push
dec
xor
inc
sbb
jae
push
insl
js
dec
imul
dec
add
aaa
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
out
push
add
clc
add
add
call
repz
add
out
mov
jnp
in
add
mov
jg
jg
mov
orl
adc
push
orb
loop
add
jg
std
out
mov
adc
bnd
cmpsb
adcb
jle
add
data16
lcall
add
addb
sbb
add
add
dec
in
jmp
mov
or
jl
push
orl
jg
sub
mov
mov
ret
fs
ret
hlt
pop
xchg
add
ds
cmp
in
outsl
decl
add
mov
rol
into
int
cmp
addb
sub
sti
popa
outsl
fistpll
inc
into
or
loopne
mov
inc
inc
adc
jnp
cmpsl
xor
add
push
push
xor
sbb
jp
cmp
pusha
ds
fidivrs
or
pop
sti
imul
push
jns
mov
out
sahf
test
fsubrs
out
data16
xchg
outsb
add
push
lods
jle
add
pushf
out
pusha
or
test
insb
sbb
add
mov
imul
inc
jecxz
push
jge
mov
lods
jb
cmp
pop
jl
es
fwait
divb
mov
dec
loopne
push
dec
jnp
fistpl
popa
or
insb
mov
or
lods
cmp
inc
jmp
cs
xor
xchg
in
les
fidivrl
add
fs
cs
ret
pushf
lock
es
outsl
pop
xor
clc
pusha
or
add
xchg
adc
adcb
movsb
jae
inc
mov
lcall
and
xor
pusha
jnp
dec
add
jo
mov
mov
loope
inc
repz
inc
mov
sub
movsb
pop
push
inc
mov
loopne
xor
mov
mul
movsl
push
jle
push
pop
xor
and
sahf
cmpsb
imul
dec
pusha
sbb
mov
call
or
sub
pop
xor
imul
or
shr
stos
enter
cmpb
xor
out
cs
insb
adc
adc
out
repnz
xor
hlt
imul
mov
aas
js
jo
int3
add
pusha
loopne
loope
cld
jne
and
incb
add
cmpsl
and
popf
and
and
mov
push
inc
pop
jg
inc
stos
cmp
push
clc
jecxz
jo
cmp
imul
mov
inc
sbb
data16
push
fucomip
xor
or
mov
test
lock
mov
push
pop
ja
cmpxchg
arpl
shll
fmul
ret
out
int
sbb
cmpsb
xor
push
clc
shlb
addb
dec
imul
jne
mov
adcb
add
cli
fbstp
add
cmp
lcall
pop
jp
push
ss
inc
fs
cld
imul
mov
sbb
dec
imul
sub
outsb
js
dec
push
shlb
outsl
ds
stos
mov
push
imul
sbb
push
xor
xor
cmp
pushf
jl
mov
int
loopne
push
jo
mov
popw
lcall
pop
push
mov
dec
je
lock
dec
or
jo
hlt
sbb
fisubrl
clc
fidivrs
or
mov
mov
and
ja
sarb
aad
pop
sti
pop
int
ljmp
inc
or
add
fstpt
inc
stos
and
in
loop
lock
mov
in
jg
add
mov
inc
push
push
pusha
andl
adc
aad
sbb
add
jp
and
lods
xor
lcall
mov
mov
jge
sub
and
insl
jnp
filds
xor
mov
jo
xor
and
pop
push
mov
jno
cmp
lock
fdivs
or
mov
push
mov
jbe
lods
push
ret
xor
fwait
jbe
lock
js
int3
call
add
sbb
movsb
mov
lods
add
cmp
nop
sub
addr16
hlt
mov
pop
pop
add
testl
sub
pop
ja
in
ljmp
lcall
dec
in
push
adcl
ljmp
cli
ljmp
shrl
add
icebp
mov
data16
mov
pop
add
ds
add
das
cli
pushl
jb
adc
push
push
sub
push
pushw
nop
in
dec
js
inc
ljmp
fs
scas
lldt
cmp
push
loopne
out
xchg
fwait
fucomi
inc
jp
ss
sbb
jmp
aam
into
add
movb
adc
rclb
add
int
loope
shlb
int3
lret
iret
loope
fstp
add
rcll
int3
mov
mov
das
fcom
pop
push
scas
inc
add
icebp
or
and
add
inc
mov
fildl
mov
cmpsl
cmpsl
out
daa
daa
add
add
xchg
xchg
and
inc
cmc
andb
stos
test
pushl
addl
sub
orb
adcb
lods
fadds
stos
stos
jp
rolb
adc
add
je
je
add
dec
dec
fbld
xor
lock
sub
cmp
push
cltd
mov
dec
mov
push
rol
sub
inc
add
call
repnz
sahf
pop
mov
aaa
sbb
into
rolb
lds
add
xor
add
add
lock
add
add
loope
stos
insl
fwait
cmpsb
mov
sarb
add
add
pop
rcrl
cs
sbb
int
imul
jo
shll
jno
jbe
dec
ja
lcall
cs
jne
jp
fwait
cmpsb
xor
add
pop
sub
out
imul
cs
imul
jge
mov
or
mov
push
push
das
clc
aad
adc
sub
jno
push
add
xor
mov
xchg
cmpsb
cmpsb
pop
cmpsb
sub
jge
outsb
or
iret
push
inc
add
movsb
mov
mov
and
mov
lock
fdivrl
add
addl
fcomip
mov
mov
xchg
xchg
xchg
xchg
lcall
lcall
rol
call
leave
into
iret
int3
add
rcl
rcl
xlat
aam
aad
fistl
cld
decl
ret
add
add
inc
add
stos
add
push
sti
int3
add
sbb
pop
nopl
sbb
fsubs
or
ljmp
scas
scas
cld
lods
lods
sbb
sbb
add
or
jmp
add
add
and
aas
add
mov
ret
pop
inc
out
mov
mov
xor
iret
outsl
clc
out
fidivrs
out
xchg
mov
push
lods
es
cld
dec
jg
inc
addl
pop
lea
inc
decl
pop
xchg
call
out
xor
cli
in
cmc
outsl
clc
leave
das
inc
add
test
adc
inc
fidivl
inc
in
mov
ljmp
loope
mov
mov
shl
call
decl
out
sub
inc
sarb
pmaxsw
mov
xlat
push
add
dec
mov
imul
add
add
cmpsl
lret
mov
mov
inc
std
pop
jno
xor
movsl
or
inc
aam
mov
in
fisubrl
test
inc
sbb
add
pop
add
sub
cmpsb
mov
or
mov
lret
add
ljmp
out
nop
insb
adc
xchg
add
cli
nop
popa
addr16
dec
add
inc
jnp
push
push
bound
fcomps
sbb
orl
push
pop
pushl
std
mov
cld
xchg
mov
xor
pop
adc
mov
mov
cld
jbe
lea
bound
push
les
or
clc
call
dec
xchg
inc
lods
addl
or
push
push
push
add
push
push
sbbl
imull
mov
movsb
es
pushl
add
rolb
mov
add
or
in
in
roll
cmpsb
sub
sahf
lahf
test
inc
push
xchg
std
rcll
add
sahf
push
jbe
stos
inc
insl
fwait
enter
adc
add
pop
icebp
sbb
lods
out
lods
cmp
mov
lcall
push
outsb
sub
jbe
stos
mov
sbb
xor
add
cltd
add
pop
jnp
xlat
lcall
rclb
loop
or
enter
fstpt
add
or
add
insl
fcmovbe
sub
sbbb
mov
sbb
aad
mov
jnp
flds
adc
ss
add
dec
imul
nop
add
xor
jmp
int
sub
mov
lods
sbb
sub
jle
shrb
cmp
push
dec
mov
push
rep
xor
mov
add
in
mov
pop
shll
and
in
jo
scas
mov
movsl
rcrb
rol
out
sub
pop
and
pop
test
lret
jae
faddl
ret
mov
inc
movsb
add
sahf
inc
rolb
inc
xor
and
mov
add
dec
pop
repnz
adcb
shl
sti
mov
adc
push
shrb
cmp
sbb
loopne
or
push
inc
lcall
in
loop
lcall
test
push
mov
jle
ss
fwait
add
in
adc
or
or
inc
or
xor
cli
or
inc
loopne
ljmp
cld
xor
out
loop
push
or
loopne
jp
adc
sub
push
add
sti
loop
or
mov
mov
es
add
sbb
jg
mov
lods
in
adc
imulb
loopne
mov
stos
mov
mov
lcall
or
jle
loop
add
shlw
faddl
mov
stc
orl
or
loopne
mov
add
mov
ds
xchg
dec
mov
add
sbb
pop
jl
pop
jmp
out
lahf
dec
mov
add
loopne
data16
add
cmp
pop
push
or
fs
adc
or
and
and
add
leave
aam
daa
pop
sahf
out
repz
xchg
mov
repz
aaa
int
xor
cmpb
inc
pop
pop
aad
sub
cmp
int3
or
test
push
pop
mov
or
pushf
xchg
sbb
loopne
sub
loopne
es
or
sbb
scas
imul
into
sbb
mov
push
out
jnp
add
xor
dec
xchg
fistps
cld
inc
shll
dec
mov
fs
or
loopne
outsb
lcall
add
jmp
in
pusha
xchg
or
loope
push
or
das
add
mov
push
shll
cmp
mov
cmp
sbb
push
loopne
rorb
pop
pop
outsl
fcmovu
cmp
sbb
cmp
dec
mov
out
inc
add
cmp
mov
push
pop
mov
cmpsl
push
or
dec
jnp
stc
inc
loopne
pop
ljmp
dec
jle
fdivrp
imul
jbe
loopne
push
loopne
or
sahf
aaa
jns
inc
sub
imul
lret
adc
lods
xchg
into
bnd
xchg
jbe
jle
dec
loope
ficoml
push
in
cld
mov
mov
les
in
sub
mov
outsb
roll
mov
sbb
xor
clc
repz
mov
sub
adc
mov
lock
mov
ret
pop
hlt
out
ds
nop
loopne
testb
repz
add
cli
stos
lcall
mov
push
sbbb
loope
or
repnz
sar
testb
es
lock
jo
mov
mov
pop
lock
fidivl
sti
jo
rcrb
stos
repnz
stos
lcall
jo
inc
lock
or
push
out
test
lock
push
out
mov
inc
mov
aam
dec
stos
data16
jo
sbb
scas
imul
or
gs
mov
clc
lds
mov
shrb
stos
lret
not
cld
fisubrs
jo
xchg
jo
jne
daa
stos
mov
pop
scas
loopne
mov
mov
add
sbb
xor
cmp
mov
lcall
jo
jbe
cli
inc
jg
inc
jno
add
or
scas
jmp
mov
test
lock
setae
mov
lds
push
xchg
push
push
andps
hlt
push
and
cmp
idivl
xchg
push
in
aad
mov
mov
loopne
add
sub
lock
xchg
adc
lods
sbb
sbb
adc
or
xor
pop
ficomps
sbb
pop
rcrb
jmp
lock
mov
loop
mov
mov
lock
dec
jecxz
ja
adc
and
inc
mov
fidivl
jno
fcmovb
lock
or
jno
test
test
or
lret
cwtl
mov
adc
out
and
insl
lock
enter
adc
jno
mov
push
cld
filds
adc
mov
add
push
into
les
arpl
and
or
pusha
lock
cmpsb
add
mov
jecxz
cld
int
adc
mov
clc
or
cld
or
int
fisttpl
fbld
mov
jns
adc
mov
adc
stc
mov
mov
aaa
jg
fwait
std
sbb
fcoms
pop
mov
fcompl
jg
mov
mov
fwait
mov
scas
jg
aaa
jg
mov
mov
jb
mov
mov
in
jg
aaa
ja
repnz
mov
sarb
repz
jg
mov
mov
cwtl
inc
mov
scas
jg
aaa
jg
mov
mov
push
mov
mov
jg
aaa
push
mov
sti
pop
mov
shll
jl
fdivr
mov
jnp
mov
mov
adc
mov
mov
lock
xchg
pushf
mov
jg
jo
mov
cmpsb
ja
adcb
mov
push
fsubs
jl
mov
or
or
mov
iret
mov
scas
add
cld
mov
mov
cltd
mov
mov
mov
mov
iret
out
js
mov
andl
outsl
clc
mov
mov
mov
mov
xchg
mov
jno
xchg
mov
mov
out
mov
mov
mov
mov
mov
mov
push
mov
rcrl
lret
mov
scas
aaa
fsubl
xchg
mov
cmpsb
scas
adc
out
incb
cmpsb
mov
add
push
xchg
add
add
out
or
or
cmpsb
inc
xchg
montmul
cmpsb
inc
or
inc
xchg
out
out
cmpsb
popa
adc
mov
adc
push
cmpsb
or
cmpsb
or
cmpsb
or
outsl
out
sbb
pop
push
cmpsb
adc
sbb
sbb
sbb
sbb
pusha
cmpsb
xchg
popa
cmpsb
fs
out
data16
push
cmpsb
push
cmpsb
outsb
push
outsl
xchg
imul
push
cmpsb
jo
cmpsb
ja
outsl
cmpsb
jp
cmpsb
jns
out
out
cmpsb
jl
cmpsb
jge
jae
inc
jo
inc
xchg
jno
inc
mov
cmpsb
inc
xchg
ja
inc
shlb
xchg
jne
dec
jp
dec
xchg
jnp
fwait
mov
cmpsb
dec
xchg
jns
dec
jle
dec
xchg
jg
push
jl
std
cmp
stc
cmp
scas
movsb
sbb
mov
mov
pusha
cmpsl
andb
movsb
cmpsl
xchg
movsb
cmpsl
fwait
mov
cmpsl
mov
mov
stc
fwait
mov
cmpsl
insb
cmpsl
mov
xchg
movsb
jae
xchg
mov
cmpsl
nop
movsb
jno
xchg
jbe
xchg
movsb
ja
xchg
je
xchg
movsb
jne
fwait
mov
cmpsl
lcall
cwtl
movsb
inc
cmpsl
loop
cmpsl
stc
fwait
mov
cmpsl
loopne
cmpsl
loope
inc
cmpsl
out
cmpsl
out
inc
cmpsl
in
stc
fwait
mov
dec
cmpsl
ljmp
call
dec
cmpsl
fwait
mov
cmpsl
out
movsb
dec
cmpsl
in
dec
cmpsl
in
movsb
push
cmpsl
repnz
cmpsl
sub
push
cmpsl
lock
mov
repz
movsb
cs
aaa
jg
mov
and
movsb
cli
or
or
cmpsb
push
movsb
decb
movsb
xor
movsb
std
cmpsb
adc
mov
cmpsb
adc
movsb
cmpsb
adc
movsb
cmpsl
cmpsb
adc
fwait
mov
movsb
movsl
cmpsb
sbb
sbb
mov
movsb
scas
pop
movsb
xor
movsb
lods
cmpsb
bound
arpl
popa
movsb
in
data16
xchg
movsb
xchg
cmpsb
movsb
out
mov
movsb
xchg
cmpsb
push
out
movsb
lcall
fsubrl
movsb
cltd
add
out
insl
movsb
pushf
cmpsb
jb
popf
jae
in
cmpsb
jo
loop
movsb
jecxz
jbe
loopne
out
ja
loope
je
xchg
jne
nop
cmpsb
jp
out
jnp
jmp
out
movsb
xchg
jns
ljmp
jmp
movsb
in
ss
fwait
add
mov
mov
mov
test
movsb
mov
movsb
dec
jg
mov
movsb
mov
movsb
xchg
mov
aaa
jg
aaa
dec
movsb
mov
dec
movsb
mov
dec
movsb
mov
cmpsb
push
movsb
mov
push
movsb
adcb
cmpsb
push
movsb
sbb
int
push
movsb
andl
mov
mov
int
mov
movsb
mov
movsb
mov
in
outsl
jmp
add
add
mov
add
movsl
mov
movsl
or
movsl
daa
mov
cmp
outsl
adc
ud0
adc
or
mov
adc
pop
test
movsl
outsl
mov
sbb
insb
mov
pusha
movsl
xor
jmp
mov
movsl
xor
movsl
xor
mov
push
clc
jmp
mov
insb
movsl
cmp
insl
movsl
cmp
mov
jo
addb
push
mov
movsl
cmp
pop
lret
add
mov
inc
movsl
adc
inc
movsl
add
inc
movsl
push
mov
movsl
faddl
add
mov
dec
movsl
sbb
movsl
lock
dec
movsl
lock
movsl
sbb
dec
movsl
mov
movsl
notb
arpl
push
movsl
pusha
mov
jmp
push
movsl
addr16
mov
pop
movsl
push
pop
movsl
imul
stos
scas
xchg
cmp
xchg
stos
addb
stos
mov
orl
stos
push
orl
stos
add
or
aas
orl
stos
add
adc
movb
stos
ret
stos
movl
arpl
mov
subb
subb
ljmp
jbe
insb
stos
jo
insl
stos
ret
xorb
js
and
jle
mov
ljmp
test
dec
testb
stos
xor
pop
mov
xor
inc
stos
xchg
xor
inc
stos
scas
xchg
scas
xchg
std
push
stos
test
dec
sbb
dec
stos
test
xchg
mov
dec
xchg
mov
dec
ljmp
clc
ljmp
sbb
push
stos
mov
push
stos
pop
adcl
pushl
stos
xchg
xchg
mov
test
andb
outsl
clc
ljmp
cmpsl
addb
movsl
addb
add
test
orb
mov
mov
test
orb
addl
adc
adcl
idivl
adc
cmc
adcl
cli
adcl
adcl
sbbl
mov
push
ljmp
test
sbbl
mov
data16
andl
andl
jg
imul
outsb
test
xchg
adc
xchg
or
xorb
mov
xorb
xorb
xorl
jne
xchg
cmpb
jns
push
xchg
test
xchg
adc
jl
insl
xchg
or
inc
test
ds
mov
ja
inc
test
xchg
push
inc
movb
mov
xchg
push
xchg
test
test
roll
movl
adcb
adcb
push
test
test
ljmp
iret
test
loopne
pop
test
test
lods
test
mov
pop
ss
sbb
pop
ss
sbbb
sbbb
sahf
add
pushf
add
test
jle
test
add
pop
andb
loopne
jg
test
test
mov
subl
adc
stos
xorl
test
cld
test
add
scas
mov
inc
scas
jb
inc
scas
jae
inc
scas
jo
inc
scas
jno
incl
jbe
inc
scas
ja
inc
scas
je
inc
scas
jne
dec
scas
jp
dec
scas
jnp
dec
scas
js
dec
scas
jns
decl
jle
dec
scas
jg
dec
scas
jl
dec
scas
jge
push
scas
inc
cmpsl
push
scas
inc
cmpsl
push
scas
inc
cmpsl
push
scas
inc
cmpsl
call
inc
cmpsl
push
scas
inc
cmpsl
push
scas
inc
cmpsl
push
scas
inc
cmpsl
pop
scas
dec
cmpsl
pop
scas
dec
cmpsl
pop
scas
dec
cmpsl
add
jmp
scas
mov
lods
pop
scas
cmpsl
lods
add
movsb
lods
add
scas
stos
lods
or
jg
or
lods
push
scas
scas
lods
imul
or
ljmp
mov
adc
mov
push
scas
mov
pop
scas
mov
adc
mov
adc
ljmp
mov
lods
sbb
mov
lods
sbb
mov
lods
incl
ljmp
subl
subl
test
scas
test
scas
mov
scas
mov
scas
lods
insb
scas
mov
scas
lea
scas
xchg
lods
jo
nop
lods
jno
xchg
lods
jbe
xchg
lods
ja
xchg
lods
je
xchg
lods
pushl
xchg
lods
jp
lcall
scas
cwtl
lods
jl
pushf
lods
jge
popf
lods
inc
scas
loop
inc
scas
jecxz
incl
loopne
inc
scas
loope
inc
scas
out
inc
scas
out
inc
scas
in
inc
scas
in
dec
scas
ljmp
decl
call
lods
dec
scas
out
lods
dec
scas
out
lods
push
scas
repnz
push
scas
rep
push
scas
lock
push
scas
icebp
lods
call
imulb
scas
hlt
lods
push
scas
cmc
lods
pop
scas
cli
lods
pop
scas
sti
lods
add
xchg
incl
lods
xchg
xchg
push
lods
xchg
xchg
pop
lods
xchg
xchg
add
xchg
xchg
add
lods
lcall
lods
cwtl
xchg
decl
lods
cltd
xchg
push
lods
sahf
xchg
shrd
or
lods
loop
adc
xchg
call
lods
loope
push
lods
out
pop
lods
out
adc
in
adc
lods
ljmp
lods
call
lcall
lods
jmp
xchg
pop
lods
out
xchg
sbb
in
xchg
sbb
lods
repnz
arpl
xchg
jmp
icebp
xchg
data16
notb
lods
hlt
xchg
lods
cmc
xchg
push
cli
xchg
imul
ljmp
stc
xchg
outsb
lods
xchg
outsl
lods
call
insl
lods
std
xchg
jb
ret
lods
ret
xchg
jo
rclb
lods
rcll
je
jne
fwait
int
mov
mov
mov
mov
mov
data16
insb
mov
mov
mov
mov
insb
ss
int
inc
mov
mov
mov
mov
int
mov
mov
mov
mov
mov
mov
insb
ss
dec
mov
mov
mov
mov
mov
xchg
push
lods
rcll
push
lods
fstl
push
lods
es
push
lods
and
push
ret
mov
push
lods
sub
pop
and
shlb
andb
cs
mov
mov
lock
pop
mov
mov
add
sahf
out
sahf
push
pop
add
or
add
push
stos
pop
out
pop
pop
nop
add
sahf
out
sahf
scas
scas
mov
mov
jns
mov
cmp
repz
test
test
repz
testb
fdivp
cmp
add
sahf
idivl
mov
mov
ds
iret
repz
leave
mov
sahf
ja
sub
cs
xor
rcrb
push
shll
shlb
sarl
out
aaa
xchg
xor
test
test
mov
jns
sahf
cmpl
repz
sahf
cmpb
push
cmp
cmp
enter
repz
repz
bswap
or
out
jns
iret
or
adc
ret
cmp
repz
rclb
push
repz
repz
pop
adc
iret
repz
adc
lret
daa
daa
pop
cmp
out
sbb
jns
pusha
push
popa
xlat
data16
out
aam
aad
jns
out
fldt
imul
fisubrs
outsb
jns
out
fsubrl
insb
and
jns
out
and
jae
out
sahf
and
jno
jbe
sahf
out
and
and
sahf
out
add
inc
iret
repz
add
dec
ds
idivl
dec
push
inc
push
call
std
std
stos
popf
push
inc
mov
fstps
roll
cltd
iret
fdivr
clc
fwait
mov
xchg
sub
sub
lea
inc
lret
sub
cmp
pop
pushl
pop
and
je
icebp
and
jmp
stos
adc
pop
xor
pop
test
pushl
inc
inc
add
negb
jg
insl
or
xchg
leave
push
lods
xchg
push
jnp
jmp
and
iret
push
jl
and
and
in
and
sub
js
mov
ret
and
mov
xchg
je
cmp
adc
sahf
jmp
mov
hlt
test
insb
jge
mov
scas
popa
push
adc
lods
dec
fcmovnbe
mov
mov
ds
sti
mov
mov
adc
push
cmpsb
mov
gs
loop
lret
fcmovb
mov
inc
jecxz
xlat
add
mov
fsubrl
mov
xor
and
pusha
jecxz
lcall
je
imul
adc
into
pop
out
dec
adc
sub
xor
xchg
sub
cli
add
sbb
lret
xor
push
ljmp
xchg
out
mov
xchg
aas
xchg
ret
nop
lret
nop
rcll
inc
push
sub
xchg
mov
jmp
out
xor
or
mov
cmp
pop
jno
push
hlt
fldenv
in
je
mov
pushl
xor
frstor
pop
adc
and
ds
mov
jno
ret
loopne
inc
xchg
into
xchg
xchg
ficoms
ss
ds
push
xchg
push
pop
loop
push
mov
cli
pop
fs
pop
sbb
fmuls
ret
fisubrs
xchg
xchg
mov
add
xchg
notb
jns
jp
shld
xor
mov
push
cmpsl
mov
subl
dec
xchg
push
xchg
pop
xchg
cmpsb
xchg
scas
in
pop
mov
xchg
sbb
add
mov
jg
push
in
lods
adc
jbe
xchg
xchg
call
cld
es
cs
ss
sub
xchg
push
xchg
push
xchg
push
xchg
xchg
les
mov
adc
lcall
jmp
lock
push
mov
xor
jle
sbb
jle
xchg
xchg
sahf
xchg
out
out
xchg
notb
xchg
xchg
push
xchg
sbb
mov
call
xor
sahf
push
lds
aas
inc
ljmp
mov
popf
bound
pop
xchg
pop
xchg
out
xchg
repnz
or
jmp
shrb
mov
sub
repnz
or
cmp
cltd
inc
cltd
lcall
sahf
ret
sahf
iret
sahf
add
aas
cmp
dec
jo
or
jmp
or
incl
ret
popf
cmp
jle
dec
popf
pop
lret
test
call
pushf
inc
mov
dec
imul
iret
sbb
pushf
movsl
jne
push
xchg
lcall
xchg
sti
xchg
push
xchg
scas
nop
ljmp
and
inc
cs
inc
sahf
pop
and
push
call
hlt
fstps
stc
xchg
push
int
xchg
ficoms
sub
pushl
adc
orb
iret
xchg
xor
pop
xchg
cmp
ret
or
cmpsl
xchg
scas
xchg
pop
loopne
mov
mov
sub
xchg
add
call
jbe
pop
pop
xchg
movsb
scas
sbb
insl
mov
aas
outsb
xchg
or
bound
fistpl
cmp
shll
mov
addr16
mov
jmp
jmp
mov
dec
cwtl
mov
cltd
clc
cltd
ret
push
lret
push
orb
decl
pop
out
and
push
jge
sbb
data16
outsl
sahf
cmpsl
lahf
test
lahf
mov
lcall
xchg
dec
cvtdq2ps
lds
sbb
cs
ljmp
pushf
das
pushf
aaa
pushf
cmp
pushf
inc
data16
pop
ret
or
fcomip
ljmp
and
mov
mov
adc
xchg
es
sub
pop
mov
xchg
pop
xchg
mov
jae
fsubs
shll
lock
push
push
jns
and
dec
fwait
push
fwait
mov
cwtl
in
les
xlat
xor
push
ds
incl
mov
and
sub
cmp
lock
nop
sub
orl
dec
sahf
xchg
lahf
fcompl
outsl
cli
lcall
pop
lahf
or
cwtl
adc
fdivs
xor
clc
in
sbb
sbb
sahf
mov
sub
jmp
lods
mov
test
push
out
cmp
fisttpll
in
lret
fnsave
ret
pop
jle
cmc
fbld
stos
xchg
ret
dec
xchg
mov
xchg
lods
or
scas
push
mov
sbb
inc
and
cmp
loope
ljmp
mov
mov
mov
mov
xchg
adc
mov
test
loope
fwait
cwtl
cltd
sahf
lahf
pushf
popf
loop
adc
cmp
adc
adc
inc
stc
incl
aas
lcall
and
and
es
and
sub
sub
cs
sub
pushl
xor
xor
aaa
xor
cmp
cmp
ds
cmp
add
mov
add
push
or
adc
adc
push
pop
adc
sbb
sbb
push
pop
sbb
bound
popa
addr16
push
insl
pushl
jo
jbe
je
jp
js
jle
jl
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
call
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
decl
adc
mov
add
ljmp
loopne
out
in
add
jmp
jmp
xor
add
repz
div
hlt
cmc
add
sti
clc
adc
adc
xor
add
or
xor
sbb
sbb
xor
add
add
ret
xor
add
or
xor
sub
sub
xor
add
inc
add
outsl
sahf
pop
pushf
mov
adc
pop
mov
or
pop
movsl
cld
pop
and
pop
add
fstl
addb
jo
pushl
pusha
pop
addb
fimull
or
lea
push
or
inc
mov
push
rorl
pusha
adc
push
add
int
adc
mov
push
and
mov
pop
mov
aas
add
adc
cs
add
dec
sar
rorb
ljmp
decl
lret
int3
mov
into
jo
loope
loope
sbb
mov
inc
add
mov
in
sub
adc
into
xlat
sbb
lret
or
or
rcll
mov
add
ror
fcmovnb
adc
loopne
and
xor
and
lods
les
mov
or
add
std
xchg
inc
hlt
ljmp
mov
add
and
push
mov
in
add
rclb
cwtl
push
bound
or
pushl
pop
imulb
add
inc
xchg
inc
add
add
mov
mov
ljmp
notb
mov
add
add
adc
rclb
rolb
xchg
incl
out
or
sti
addl
pop
add
inc
add
fcmovnu
sbb
add
push
mov
out
in
mov
jecxz
out
incb
mov
and
push
mov
jbe
mov
lret
mov
pusha
add
mov
and
dec
lds
std
loope
xlat
and
mov
pusha
add
hlt
push
shrb
clc
in
outsl
dec
lret
mov
repnz
pop
lret
pusha
push
fsubr
mov
pusha
call
bound
arpl
stos
add
xorb
pusha
lret
out
rcrb
aad
clc
jg
jmp
lds
add
add
int
int
into
and
aad
xchg
jle
xchg
xchg
pushf
pop
lock
pusha
or
loopne
and
or
loopne
into
and
or
or
xor
mull
xor
call
in
adcb
xor
add
add
xor
mov
mov
add
push
jecxz
mov
lret
cwtl
push
xor
adc
xor
and
xor
das
sub
sub
or
sub
push
sub
sub
sub
lock
xor
ret
mov
or
add
rcl
pusha
in
cli
fsin
jmp
fcoml
call
in
clc
out
out
cli
loopne
mov
xchg
mov
mov
aam
dec
insb
shlb
lret
push
dec
pop
dec
pop
in
filds
dec
dec
dec
push
je
loopne
dec
dec
dec
pop
dec
push
push
and
sbb
add
jns
or
orb
lcall
loopne
lcall
mov
test
xchg
mov
add
movsb
orl
jmp
jnp
add
dec
pop
dec
jl
add
push
dec
push
dec
pop
dec
scas
cli
jg
or
add
pop
push
pop
adc
or
pop
cmc
fisttpl
push
push
sbb
push
pop
add
dec
sub
dec
or
push
pop
pop
sbb
jb
adc
push
push
or
call
mov
xchg
xchg
add
gs
sub
add
sub
sub
sub
jmp
cmp
or
add
dec
push
push
add
dec
addr16
pop
dec
sub
cli
aaa
std
ret
fmuls
enter
out
icebp
in
bnd
js
idiv
hlt
ret
fld
int
out
push
lret
rorl
iret
fsts
xlat
int3
leave
leave
popa
pop
jne
bound
jg
addr16
ss
add
decl
nop
inc
inc
and
pop
inc
add
add
pop
pop
sbb
push
inc
insb
movsb
vpaddq
jecxz
leave
aad
and
cmp
js
and
ds
int
scas
jg
inc
rol
fcomp
mov
ffreep
add
xchg
mov
and
cmp
lcall
cmp
sub
jmp
add
push
daa
and
xor
add
sbb
sbb
or
cmp
adc
pop
push
std
add
xchg
rorb
lods
shll
cmpsb
add
mov
stc
mov
mov
mov
push
add
addb
adc
rcl
ret
stos
jle
xlat
test
popf
fdivs
xlat
int
loopne
mov
or
out
in
test
mov
add
cmpsb
inc
or
sbb
push
sub
lahf
mov
sbb
hlt
clc
cld
cli
jecxz
dec
cmpsl
pop
movsb
cmp
mov
xchg
out
in
loopne
mov
mov
stos
repz
add
pop
sbb
enter
out
sti
test
test
pop
mov
mov
mov
mov
xor
mov
lret
xchg
or
add
or
inc
add
pop
icebp
ja
add
pop
sbb
adc
push
das
clc
cmp
sbb
add
add
mov
jmp
mov
scas
stos
jle
mov
fdivrl
lods
out
test
sub
mov
in
push
dec
push
push
fisttps
cli
add
pop
and
adc
call
jno
push
jb
add
jge
jne
jae
add
jl
popa
jne
loopne
cli
ja
stc
mov
xlat
out
out
neg
imul
loope
out
ret
mov
repnz
ljmp
push
inc
outsl
push
pop
push
dec
xchg
pop
mov
dec
jnp
inc
inc
mov
cli
std
call
out
ljmp
and
hlt
in
sar
out
add
add
scas
sub
mov
mov
movsb
cmp
sub
test
incl
das
add
daa
xor
and
jo
xor
ficoms
jg
xor
and
and
jmp
aad
cli
add
fxam
mov
call
add
sub
pushl
cld
mov
sbb
add
mov
jo
dec
add
bound
inc
jnp
std
dec
fistps
or
bound
push
sbb
mov
sbb
sbb
add
in
clc
out
stc
div
cld
pop
pushl
xor
cmc
hlt
jle
mov
dec
push
dec
adc
push
test
icebp
add
andb
aaa
mov
aad
jmp
jb
lock
pop
add
adc
jl
sbb
psllw
sub
jmp
sub
cmp
les
es
or
xor
xor
push
sub
push
mov
cmp
and
mov
adc
mov
adc
cmp
jb
data16
bound
add
pushl
add
jg
inc
jnp
jb
arpl
adc
rolb
lret
inc
ret
fcmovu
in
rcr
or
rcl
pop
sub
add
loope
push
pop
push
push
add
mov
decb
mov
ret
xor
sub
and
mov
push
fcomip
sub
dec
push
add
sahf
test
fldt
je
push
xor
push
push
pop
xor
ret
stc
in
sbb
les
loopne
mov
call
test
xlat
scas
mov
out
mov
or
mov
mov
sub
xor
sub
sub
add
inc
mov
lock
add
loopne
loope
addb
add
cmp
sub
sub
rcll
lods
ss
add
xor
mov
jmp
dec
push
aas
adc
xor
xor
cmp
xor
cmp
sbb
mov
lods
lcall
sbb
mov
nop
repnz
jmp
clc
cmpsb
call
fbld
ret
fdiv
int
ror
filds
xchg
mov
xor
lock
kxnorb
lock
cld
int
repnz
call
adc
cld
out
in
cmp
shrb
add
mov
add
negb
adc
into
adc
iret
rol
jae
pop
inc
rolb
repnz
ljmp
shlb
fmull
sar
loopne
not
rol
adc
jo
inc
adcb
call
add
add
ror
xor
or
cli
cld
dec
jg
push
pop
loopne
js
js
push
mov
pusha
pop
push
dec
sbb
loope
lock
dec
push
adc
in
icebp
addb
int
push
mov
in
stos
pop
jmp
in
in
cmp
fcomip
cld
rcrb
movsb
mov
call
mov
lea
aam
mov
and
fildll
mov
mov
lods
xchg
lods
test
cmp
pop
test
fisubl
mov
add
loope
loop
add
clc
push
scas
test
sub
inc
repnz
cmp
sbbb
es
cmp
daa
xor
add
aas
xor
pop
std
jmp
adc
adc
or
pop
cmp
push
insb
sbb
lock
push
sbb
pop
enter
es
sbb
mov
pusha
aad
or
cli
out
add
inc
pop
pop
mov
dec
clc
jg
mov
adc
push
inc
js
add
std
loop
mov
sub
shrl
cmp
adc
ljmp
push
xor
sbb
add
or
sbb
add
ljmp
jle
ds
or
das
and
sub
jnp
es
xor
and
dec
sub
or
inc
jnp
dec
and
rcrb
fcomip
cmpsb
add
pop
mov
sbb
pop
push
cmovb
mov
mov
clc
push
jne
inc
push
push
decb
xor
repnz
clc
fbstp
fs
pushf
dec
pop
dec
insb
test
jmp
aad
ret
hlt
out
sbb
jge
popa
mov
push
adc
mov
lods
mov
push
pop
dec
dec
pop
dec
add
jp
bound
ljmp
push
jg
push
imul
fcmove
add
push
incl
enter
cltd
mov
js
bound
or
push
mov
daa
and
mov
and
pop
inc
push
pop
adc
push
push
pop
push
adc
outsl
pushl
aad
je
lret
addb
fadd
aam
add
rcr
and
clc
mov
cmp
rolb
add
push
adc
fildll
dec
dec
push
push
add
xor
xor
push
cltd
add
cltd
add
test
add
decl
stos
mov
lods
mov
mov
mov
cmpsl
xor
cld
incl
and
sub
sbb
or
test
push
xor
dec
push
push
data16
add
xchg
sub
and
ljmp
test
movsl
adcl
scas
mov
loopne
ja
and
pop
jb
mov
adc
sbb
add
jo
sbb
pop
pop
pop
ljmp
inc
ror
cld
aad
rcl
jl
std
out
testb
mov
cs
icebp
add
testl
or
pushl
add
inc
loop
sbb
std
add
mov
in
call
mov
cli
loopne
jnp
adc
inc
rcl
pushf
xchg
add
cmpb
nop
stos
js
addb
adcl
push
mov
xchg
inc
int
lcall
lcall
dec
add
adc
insb
add
adc
jae
data16
add
gs
cmpsl
in
incl
mulb
imulb
dec
dec
add
push
mov
movups
inc
add
cli
lds
ss
add
push
fcoml
push
mov
dec
sub
icebp
add
daa
mov
xor
add
pushl
gs
add
jb
jnp
je
add
insl
jno
inc
imul
cld
pop
pop
inc
inc
add
mov
out
scas
mov
lock
mov
pop
jbe
mov
mov
mov
push
or
push
add
push
sbb
push
pop
dec
pop
adc
or
add
push
loopne
inc
add
pop
lock
sbb
ja
movsbl
jno
arpl
and
sub
jns
clc
stos
stos
xor
xchg
mov
mov
mov
xor
jbe
sub
sub
mov
popa
jl
call
push
addr16
pop
pop
pop
add
push
push
sbb
ljmp
ljmp
call
int
in
in
or
nop
xchg
xchg
mov
and
jo
xor
add
or
aaa
sub
push
sbb
xor
xor
and
adc
ljmp
out
in
inc
outsl
clc
ljmp
add
inc
add
imul
sbb
outsb
jbe
pop
ds
jae
stc
xor
and
fisttps
data16
push
push
sbb
adc
inc
push
pop
adc
arpl
ljmp
sahf
xchg
jle
xchg
test
cwtl
mov
mov
scas
mov
nop
cmpsb
lea
cs
fwait
add
lcall
cwtl
popf
pushf
sahf
cld
or
jg
lea
xchg
add
push
sub
xor
adc
and
xor
scas
lcall
test
clc
cli
jecxz
out
loope
sar
cmc
in
fisttps
div
mov
lock
cmc
loopne
movsl
lcall
sti
cltd
addb
fisubrs
mov
mov
add
or
pop
sub
pop
and
clc
adc
push
cmp
xor
adc
test
add
pop
outsb
aas
adc
push
lock
xor
add
fildl
mov
mov
xchg
xchg
add
mov
test
xchg
orl
jne
jg
add
jecxz
cli
incb
jmp
into
iret
push
enter
mov
out
stc
clc
out
out
call
dec
std
cli
test
loop
mul
xor
mov
pop
and
jbe
ja
add
imul
bound
mov
imul
dec
incl
stc
cli
icebp
icebp
repz
inc
repnz
out
cld
das
mov
loopne
loop
dec
add
sub
sbb
or
push
sbbb
push
movsb
adc
sub
cli
push
push
push
and
sub
jle
adc
int
icebp
out
push
xor
xor
mov
pop
outsb
inc
or
xchg
mov
sti
rorl
test
push
in
pop
inc
jg
mov
push
rorl
add
mov
and
cmp
das
and
xor
cmp
add
xor
ds
mov
cmp
sbb
add
cmp
or
adc
sub
or
push
adc
sbb
add
push
adc
sub
adc
loope
add
out
in
out
in
jecxz
hlt
mov
adc
sub
xor
ja
sub
aas
add
or
decl
add
push
rorl
ds
xor
add
hlt
fiadds
rcl
shl
rcl
add
or
or
hlt
outsl
clc
iret
filds
clc
repz
out
in
hlt
aad
loope
call
jg
filds
ret
call
jecxz
aad
rcr
ficoms
add
fcomp
iret
fsubs
push
inc
inc
mulb
mov
loopne
pop
pop
rcrb
push
scas
clc
mov
jno
jp
inc
push
jbe
jg
loopne
decl
imul
pop
je
dec
inc
dec
rcrb
cmp
mov
jmp
out
out
stos
hlt
mov
jecxz
insl
cli
mov
push
cmpsb
cli
cli
out
les
div
scas
jmp
or
mov
xchg
lahf
sahf
cwtl
add
xchg
cltd
mov
neg
ljmp
pop
push
lret
add
into
rcl
rcl
test
mov
add
mov
clc
pushl
sti
loop
rclb
xor
and
rcrb
dec
and
aas
aas
es
jp
cmp
sbbb
ss
xor
add
dec
cli
aas
fcoml
push
gs
adc
sub
push
cmpb
adc
sbb
loop
outsb
popaw
jae
popa
lret
mov
gs
insb
adc
push
jge
jnp
jnp
lret
inc
inc
lock
jge
jne
inc
add
push
mov
add
dec
add
push
push
inc
inc
pop
inc
inc
adc
lcall
cld
dec
pop
dec
push
addr16
or
lods
cmpsl
mov
test
ret
call
cmpsl
mov
call
add
icebp
push
std
sbb
xchg
xchg
xchg
lcall
fists
xchg
mov
lahf
mov
call
jecxz
sarl
in
xchg
lods
jmp
out
in
mov
loopne
jecxz
and
outsl
mov
xlat
lret
add
mov
fcmovnu
sar
decb
aam
lret
pushf
xchg
cwtl
fbld
sub
and
or
scas
and
dec
cmp
aas
adc
jg
es
loope
pop
in
add
sub
aaa
cmp
pushl
adc
cs
add
or
add
sbb
add
sbb
sbb
pop
clc
sbb
sbb
jne
sub
jl
cmp
mov
mov
loopne
jg
jo
es
xor
xor
cmpsb
jle
add
daa
adc
cmp
xor
cmpsb
scas
push
loope
pusha
sbb
push
or
sbb
ljmp
inc
sti
pop
sub
adc
les
jbe
ret
imul
add
mov
shl
in
push
push
push
test
jno
das
jle
ds
inc
pop
sarl
inc
xchg
add
sbb
inc
pop
inc
mov
clc
adc
sub
and
add
push
adc
out
pop
movsb
mov
and
dec
idiv
hlt
rcr
ret
std
int
and
add
adc
cmp
push
or
sbb
or
or
pop
pusha
or
clc
sti
mov
movsb
add
sbb
out
clc
call
inc
add
or
jo
popa
add
cmp
sbb
pop
lcall
jecxz
or
push
add
push
push
adc
add
adc
lret
aam
std
jmp
add
xchg
popf
test
stos
or
cmpsl
mov
xchg
into
mov
movsl
inc
sbbl
inc
add
rcl
adc
repnz
lock
jmp
in
and
in
loop
repnz
sub
and
jmp
outsl
push
sub
mov
and
xchg
pop
imul
sahf
pushf
aam
xchg
xchg
sahf
adc
xor
and
leave
mov
mov
or
cmp
xor
loope
dec
outsb
insl
push
jge
add
popw
cld
clc
imul
xchg
xchg
xchg
cwtl
cmp
xchg
fwait
enter
adc
ret
pusha
lods
lea
aas
add
add
inc
push
pop
push
dec
push
rorb
dec
dec
pop
or
push
ret
or
inc
dec
dec
dec
add
or
inc
push
enter
jg
jmp
fcmovbe
js
dec
into
pop
and
sub
xchg
mov
shlb
int3
ret
lcall
jmp
lods
in
loop
cmc
stos
mov
fisttpl
mov
sbb
push
sbb
ss
loop
clc
je
jo
sub
insb
and
sub
pop
and
fdivp
and
sub
adc
adc
ja
cmp
sub
cmp
fdivl
xor
sub
xor
arpl
ljmp
daa
and
and
cs
sub
add
das
test
add
test
dec
inc
inc
add
dec
inc
cld
pop
lea
and
xchg
call
cld
adc
jno
outsb
bound
lock
flds
in
outsb
scas
int3
pusha
mov
xchg
ljmp
mov
mov
test
scas
mov
mov
movsl
mov
xchg
sahf
mov
add
add
jns
imul
movsl
push
push
adc
rorl
int3
and
sub
xor
jbe
inc
jae
in
hlt
in
add
push
popa
ret
and
sbb
mov
xor
sbb
dec
dec
inc
sbb
enter
int
mov
cmpsb
lds
xor
pop
push
and
mov
bound
fildl
dec
push
adc
add
stc
out
out
pusha
or
mov
decl
sbb
sbb
add
dec
adc
and
sub
xor
test
or
mov
ret
fimull
sahf
lret
pop
lock
sti
dec
cs
or
mov
out
out
lcall
mov
stc
inc
add
std
jecxz
mov
jecxz
jmp
mov
mov
mov
cld
rcrb
ret
aad
rcl
adcb
sti
int
jo
add
add
pop
pop
sahf
sbb
push
push
sbb
or
incb
push
adc
adc
mov
sbb
cmp
xor
repnz
jbe
xor
mov
scas
cmp
les
xor
cltd
add
stos
jbe
test
add
fldcw
add
add
and
add
add
adc
mov
jle
fiadds
fnop
mov
fmull
push
add
pusha
push
mov
and
push
jno
popl
aam
dec
fistpl
repz
xchg
out
add
adc
push
cmpsb
andb
adc
sahf
nop
rolb
out
xchg
jmp
dec
in
sub
into
push
add
adc
xor
movl
lods
inc
testl
or
jg
lcall
add
add
add
push
add
mov
add
adc
sbb
add
jo
pop
mov
inc
hlt
incl
nop
push
andb
add
js
popa
add
repnz
outsb
xor
jmp
out
out
popa
outsl
xchg
repnz
lret
add
nop
or
or
cmp
bnd
jecxz
adc
rol
shll
out
int
loop
lret
rcl
cltd
cmp
rcr
add
inc
add
mulb
mov
xor
xor
rol
rolb
or
adc
jmp
jo
ror
ret
in
in
aad
add
xchg
test
into
mov
jo
loope
std
fistl
out
mov
popa
push
out
xor
mov
or
int3
into
movsb
outsl
mov
xchg
xchg
adc
pop
xchg
mov
pusha
jb
mov
pushl
adc
icebp
mul
icebp
shl
jmp
out
xchg
add
mov
adc
subb
icebp
adc
jecxz
loope
inc
outsl
jg
or
lock
psraw
out
adc
in
div
icebp
or
jmp
hlt
jmp
mov
xor
int
lock
lock
xchg
hlt
in
loope
decl
in
xor
repnz
ret
sbb
es
nop
movsb
jo
in
hlt
in
loope
push
xchg
mov
jmp
add
dec
or
repnz
push
pop
div
add
loope
add
lcall
or
testb
fsub
xor
mov
out
out
nop
loop
int3
mov
mov
int
sbb
subl
or
into
or
cwtl
int3
std
aaa
imul
les
bound
lret
int3
mov
xlat
rol
mov
ret
out
lret
leave
mov
inc
rolb
ret
into
lret
aam
lock
and
rol
in
daa
int
jg
es
nop
and
and
stc
out
aas
push
or
xor
xor
xor
xor
fadd
ljmp
pop
inc
pop
mov
ja
loope
or
and
scas
xchg
or
in
pop
icebp
aaa
lds
shrb
popa
push
jecxz
adc
or
and
ja
xchg
adc
add
adc
mov
daa
jmp
sub
adc
lcall
pop
push
adc
mov
jnp
mov
xchg
pop
daa
lods
addb
dec
cmp
ficoml
jmp
and
rcl
shlb
rcl
cltd
rolb
loopne
clc
outsl
out
call
or
roll
dec
lds
add
in
push
mov
js
xlat
adc
aam
xlat
int
int3
push
push
das
loopne
scas
js
mov
test
in
int
ljmp
cmc
aaa
divb
push
push
cs
mov
sub
lcall
pop
mov
out
sbb
movswl
mov
shll
icebp
ret
mov
xor
js
jecxz
icebp
pop
inc
pop
inc
stc
mov
jg,pt
adc
cmpsl
inc
dec
mov
std
in
rcrb
testb
clc
adc
sbb
std
add
fs
xor
std
repnz
inc
sbb
jbe
adc
incl
pop
icebp
rolb
inc
xlat
mov
xor
lock
aad
inc
jno
lret
mov
and
subb
lds
adc
pop
and
mov
xchg
and
cmpsb
jp
push
and
jg
push
cmc
mul
pop
es
orb
pop
cld
jg
add
pop
and
inc
and
mov
cli
addr16
add
or
scas
mov
jmp
aaa
lock
repz
or
inc
push
and
nop
pop
shl
or
jo
lcall
or
mov
jmp
cmc
int
aad
xchg
inc
inc
add
jle
xor
andb
xlat
jo
shrl
jg
jb
xor
out
push
lret
data16
iret
nop
sub
ljmp
push
adc
mov
cwtl
xabort
jg
scas
test
into
addb
lret
les
fisubrl
add
loop
pop
mov
adc
mov
loop
lret
int
les
pop
arpl
in
in
sub
add
addb
inc
lock
mov
shrl
sbb
loop
repnz
test
dec
dec
fucomip
mov
xor
dec
xlat
mov
sub
outsl
lcall
mov
cmc
enter
mov
mov
repnz
mov
adc
dec
xchg
push
cmp
sub
loopne
push
js
je
mov
lods
dec
and
clc
pop
std
mov
fimuls
stc
testl
mov
pusha
cmpsb
ret
and
adc
push
jbe
add
dec
pop
add
cmp
out
daa
bound
xlat
movsb
loop
std
int
cld
popa
xlat
hlt
cmc
and
add
lret
sbbb
orb
clc
pop
pop
adc
fsubs
movsb
pop
xchg
pop
loopne
clc
sbb
daa
mov
dec
movl
aas
cs
add
and
scas
pop
add
out
dec
cli
or
sbb
icebp
das
xlat
sbb
dec
or
test
data16
test
push
push
test
je
loopne
movsb
das
fstps
sub
or
adc
cmp
adc
daa
add
dec
lea
inc
ds
sti
jge
rorb
jne
cmp
sarb
ret
imul
sar
inc
mov
lahf
out
cwtl
xchg
lret
loop
sub
sub
add
sub
push
xor
jle
xorb
jns
xlat
movsl
xor
outsl
ja
jnp
popa
add
popa
mull
cmp
and
adc
incl
cmpb
cmpb
andl
nop
jns
xor
add
adc
inc
cmp
cmc
lock
fistpl
and
push
orb
das
mov
andb
adc
fistps
add
cmpb
mov
sbb
subb
nop
push
xchg
ljmp
out
fldt
rolb
adc
dec
repz
mov
jp
out
xor
js
xchg
pop
mov
pop
orb
mov
outsl
jp
mov
loopne
stos
rcrb
scas
das
sbb
popa
sub
inc
icebp
sbb
pop
and
mov
push
popa
mov
idiv
and
adc
add
mov
mov
sub
movsl
dec
out
jae
das
loope
les
sahf
in
sub
pop
insl
cs
lods
loop
movsb
aam
lock
ljmp
in
and
pop
mov
xchg
or
mov
outsb
push
daa
push
cmpsb
lods
clc
incl
hlt
xchg
inc
xorb
xor
adcb
sub
sbb
pop
shrb
std
filds
pop
pop
cs
sbb
enter
push
xchg
fstpt
rcrb
adc
fisubrl
in
inc
test
pusha
stos
adcl
and
cmp
inc
div
inc
inc
pop
xchg
movb
rclb
out
fbstp
stos
inc
add
gs
data16
and
xchg
jns
icebp
inc
dec
icebp
enter
sub
xchg
xchg
rorb
outsb
repnz
cltd
hlt
or
shlb
inc
mov
jle
mov
rolb
lahf
jb
inc
push
sbb
icebp
scas
rolb
stc
or
mov
and
jmp
inc
xor
sbbl
sbb
or
lcall
sbb
xchg
adcb
jmp
es
dec
popf
mov
lcall
mov
rolb
inc
sbb
add
sub
push
sub
add
lock
push
data16
cld
push
xor
sbb
pop
icebp
or
repnz
subb
mov
add
sub
les
or
jmp
shll
inc
xor
sub
add
add
pusha
pop
hlt
lret
xor
lret
or
push
fldcw
enter
push
mov
pop
loopne
ljmp
jne
mov
mov
loopne
push
rorb
bound
xlat
scas
inc
and
ret
add
cmp
cltd
push
adc
cmp
fsubl
add
adc
lret
jmp
ljmp
gs
jmp
loopne
in
divps
sbb
mov
enter
stos
rcrb
fsin
mov
inc
adc
xor
cmpsb
bound
shl
in
incl
shlb
addl
xor
xor
add
pop
fcom
lea
or
mov
sbbb
ljmp
xor
cmpsb
je
jg
jg
dec
dec
sbb
je
mov
cmpsb
enter
adc
pusha
daa
outsb
mov
call
push
mov
and
add
pusha
pop
push
mov
mov
add
pushf
dec
hlt
ljmp
cmp
negb
mov
bound
roll
dec
cmpsl
or
and
daa
and
mov
arpl
fisttpll
mov
pop
je
addb
leave
fs
push
movsb
sub
adc
cmpsl
stos
mov
test
xor
scas
jmp
and
mov
cli
mov
loopne
sub
pop
subb
add
mov
shlb
cmp
pusha
add
jo
sbb
dec
or
push
loopne
dec
mov
adc
stos
pop
in
cli
or
cmp
fs
jle
sbb
mov
incl
sbb
pushf
loopne
push
fs
mov
and
gs
inc
adc
mov
add
and
add
sub
add
mov
or
mov
dec
adc
xchg
and
loopne
mov
cmpsb
sbbb
rorb
push
loopne
xorl
lods
mov
in
and
dec
nopl
repnz
sub
std
and
loope
imul
mov
dec
stos
add
das
daa
test
repnz
lcall
sbb
ja
add
clc
add
and
imul
addl
outsl
jb
add
mov
mov
div
aaa
cld
pusha
push
pop
pusha
shlb
rolb
push
mov
and
inc
pusha
sbb
adc
and
enter
lods
faddl
cmp
aam
dec
hlt
sbb
loope
and
rorb
or
jecxz
jmp
inc
cmc
stos
stos
xchg
mov
mov
pop
mov
dec
int
movsl
lcall
ffreep
aaa
sub
filds
add
dec
out
mov
dec
mov
dec
aaa
std
adc
mov
inc
mov
lock
ljmp
push
sbb
pusha
add
lea
sahf
adc
mov
nop
adc
or
inc
xchg
ss
adc
adc
dec
xchg
push
cld
jg
push
cmpsl
mov
mov
jbe
xor
in
add
and
xchg
andb
fcomip
bound
movsb
add
aad
int3
call
jne
dec
or
or
lret
and
xchg
mov
cli
push
fs
in
sub
das
inc
aad
jnp
sahf
fsubl
imul
push
xlat
stos
dec
dec
cmpsb
pusha
or
sub
roll
cs
lcall
pop
aad
add
ds
or
adc
loopne
add
orb
push
add
add
mov
mov
sub
sub
cmp
clc
jbe
inc
adc
push
push
xor
div
addb
lcallw
or
cmc
xchg
pop
fwait
inc
lahf
push
inc
lods
daa
pop
shlb
jb
inc
jle
push
adc
add
push
out
lods
es
jmp
cli
mov
push
xor
lret
cli
je
lret
add
lds
add
add
add
imulb
mov
add
ss
fwait
lahf
adc
adc
mov
mov
pushl
sbbb
mov
lret
add
jno
mov
xchg
mov
addb
jb
add
lock
mov
mov
sub
jno
mov
bound
rolb
loope
mov
pop
lock
mov
xor
lret
and
inc
das
sarb
rolb
add
aas
repnz
dec
mov
xor
scas
daa
and
push
add
mov
pusha
mov
jl
inc
nop
sub
add
loopne
add
mov
in
sub
les
adc
in
xchg
inc
in
mov
push
add
enter
es
sub
pop
mov
mov
push
xor
inc
lcall
imul
add
movsb
je
int
push
insl
and
ret
cli
xchg
in
cmpsb
stos
loope
mov
jb
adc
xor
xchg
mov
cmp
or
cmpb
rcrb
inc
insb
dec
mov
cmc
pusha
and
pop
cmp
lds
and
cli
aaa
jl
push
push
je
out
pop
or
and
sar
adc
das
xlat
sbb
sub
ffreep
push
mov
inc
push
xchg
jmp
inc
dec
adc
flds
test
xchg
pop
dec
mov
sub
das
adc
and
or
decl
scas
shlb
mov
or
jo
cmc
inc
sbb
aad
lds
fdivl
data16
mov
fs
fsubs
movsb
and
leave
rolb
jmp
xchg
inc
cmp
das
adc
mov
aaa
jno
lock
dec
lret
sbb
stos
sub
filds
mov
push
or
adc
jmp
mov
jb
jo
hlt
icebp
adc
jle
dec
in
idivb
xor
aam
sub
push
add
push
rcrl
jge
filds
pop
cmpsb
add
sub
stos
hlt
lock
push
enter
mov
sub
ss
in
mov
sub
arpl
pop
xchg
shrb
and
mov
xchg
lods
jmp
add
adc
push
test
xor
mov
je
mov
sahf
loopne
and
sbbb
inc
arpl
or
in
stos
mov
dec
xchg
andb
dec
dec
mov
adc
cmpsb
das
push
mov
loopne
incl
and
xchg
je
jnp
popa
and
out
and
push
imul
pop
mov
movsb
nop
loopne
popa
lock
fiadds
push
add
les
jecxz
lods
ljmp
sbb
lahf
andb
cli
addb
ss
add
push
add
xor
xchg
in
cmpsl
loope
call
cwtl
cmp
rcrb
push
inc
push
push
mov
fimull
or
pop
sub
arpl
mov
mov
cmc
or
dec
jmp
out
mov
fsubrl
fmul
jns
or
popa
scas
sub
xlat
mov
out
cmp
dec
addb
add
icebp
scas
pop
or
clc
call
pusha
or
push
popa
loopne
xor
je
cli
aaa
mov
cmp
mov
movsb
sbb
imul
orb
mov
inc
and
jno
arpl
push
pop
cmpsb
aaa
add
adc
pop
inc
inc
push
test
pop
lock
stos
mov
pop
jmp
out
pop
add
call
testb
adc
or
mov
sub
pushf
xlat
pop
add
je
jg
das
shl
mov
jle
cmpb
incb
mov
adcb
sub
loop
std
outsl
loopne
nop
mov
or
aaa
pop
shlb
inc
rcll
sarb
push
ret
push
cmpsb
adc
mov
cmp
add
mov
xor
jno
or
scas
scas
pusha
sbb
cmp
and
mov
mov
mov
nop
mov
cltd
arpl
or
jo
popa
icebp
imull
into
add
scas
sub
cmc
sub
cltd
dec
das
stos
mov
hlt
or
imul
fwait
mov
xor
add
add
leave
push
mov
scas
call
mov
leave
imul
mov
xor
sub
sub
add
pushf
icebp
dec
mov
sub
ficoms
and
in
mov
cld
dec
aaa
xor
add
pop
cld
xchg
pop
std
jmp
std
stc
or
push
loop
cmc
pop
aam
inc
shrb
cmpl
add
mov
mov
mov
mov
dec
loopne
sub
inc
xchg
shld
add
inc
call
sbb
adc
out
mov
and
cld
mov
mov
xlat
push
pop
test
pop
pop
cli
or
xlat
lods
add
dec
mov
stos
pop
sbb
test
jg
sub
shll
shll
popa
or
repz
push
ljmp
mov
jb
sahf
pop
xor
add
mov
push
xchg
push
xchg
or
nop
or
rolb
push
pop
loope
inc
sarl
add
add
push
cwtl
rcl
repnz
imul
push
xorl
push
pop
lret
sub
add
nop
jns
fcomip
mov
je
mov
bound
cmpsb
je
and
outsl
dec
add
popa
add
std
es
sbbb
mov
pushf
pop
and
add
popa
shlb
negl
in
cmpsb
incl
mov
add
movsl
adc
mov
repnz
andb
fs
push
fwait
popl
pinsrw
push
mov
dec
push
push
subb
orl
imul
mov
jecxz
aam
jp
dec
addb
add
or
push
jg
dec
hlt
das
sub
or
fistl
cld
sub
mov
orb
add
js
or
xchg
outsb
cwtl
cmc
sbbb
sub
negl
xorl
aas
loopne
lcall
test
cltd
push
sub
cltd
sahf
hlt
movsb
sub
decb
fs
lret
xchg
into
mov
push
test
popa
dec
repz
push
andb
test
mov
dec
subl
test
ja
pop
add
loop
add
add
orl
sti
inc
ja
fnsave
cmpsb
clc
sahf
out
mov
dec
mov
and
aam
std
shrl
push
inc
and
mov
hlt
cwtl
add
or
push
ss
dec
pop
and
or
adc
mov
arpl
or
sub
test
mov
std
pop
ds
into
xchg
and
cmp
sbb
roll
lret
jge
push
fdivrl
ret
lcall
xorb
push
inc
lock
cmc
add
lahf
cmpsb
loope
mov
inc
adc
jns
add
xchg
les
cltd
mov
repnz
dec
xchg
mov
sarb
cmpsb
lahf
das
xlat
jp
mov
sbb
adc
das
pusha
mov
repnz
repnz
pushl
dec
data16
add
cmpsl
add
adc
cli
or
int
sti
pop
mov
push
jecxz
xchg
or
dec
dec
pop
testb
lret
into
das
inc
xlat
xchg
out
mov
mov
ficompl
push
xchg
call
xchg
add
ds
cmc
mov
xor
repnz
xchg
add
sbbb
cmpsb
pop
out
outsl
mov
mov
aam
cmp
pop
loope
cli
xchg
dec
or
ret
push
push
rorb
jbe
cmc
xchg
cmpsb
mov
mov
ret
scas
fs
mov
push
scas
pop
test
mov
shll
add
aam
add
add
adcb
dec
push
rolb
out
pop
push
shlb
sub
int
lcall
mov
insb
das
pop
lcall
pop
adc
cmpsl
and
mov
push
in
stc
sbb
xor
pop
add
test
fisttps
or
cld
sub
cld
jg
and
repnz
ret
adc
into
adc
and
mov
addb
gs
in
xlat
imul
dec
ljmp
rorb
and
loopne
add
inc
ljmp
adc
inc
jne
mov
or
gs
jecxz
or
push
fadds
pop
cli
push
in
adc
fisubl
xlat
rcrl
rolb
push
cmc
push
cmp
popa
stos
xchg
into
fs
push
push
and
jo
daa
pop
mov
sub
mov
pop
mov
cmp
ljmp
fsubrs
adc
aaa
mov
cltd
push
lods
and
add
add
les
imulb
add
es
fucomip
or
pushf
add
sub
add
loope
jbe
add
and
sub
jns
jl
cltd
add
jg
or
lock
stos
bound
inc
adc
icebp
lcall
das
fcoml
sub
inc
sub
repz
mov
mov
in
sub
and
jge
leave
mov
nop
jp
push
scas
sbb
or
lcall
mov
inc
push
add
add
incb
sub
out
lods
and
outsl
xchg
add
scas
add
stos
jp
pop
sub
or
pop
test
add
push
adc
mov
mov
or
add
add
clc
das
test
dec
rolb
adc
je
cmp
jle
movsl
mov
add
xchg
cld
loopne
sub
pusha
dec
xchg
hlt
repnz
cmp
or
jp
aad
push
cld
decl
cwtl
enter
mov
sub
aaa
repnz
mov
test
add
inc
data16
add
lds
outsl
lods
xor
mov
adc
inc
pop
add
xchg
adcl
inc
xchg
lock
mov
cmp
push
and
mov
mov
jl
push
sub
rorb
inc
imul
jp
cld
xchg
mov
arpl
enter
xchg
or
insl
cmc
add
inc
add
shll
xor
aam
clc
loopne
testb
dec
lahf
or
ret
decl
addb
das
incb
mov
mov
add
js
lods
mov
mov
lcall
pop
cli
add
popa
xchg
sub
pusha
scas
andl
add
adc
mov
xorb
push
incl
enter
call
add
icebp
sbb
dec
call
pusha
sub
gs
xchg
jge
ficoms
popa
cmpsb
add
add
inc
mov
inc
in
sub
dec
xor
dec
mov
jne
shll
sub
enter
mov
aad
sti
sub
ret
add
add
decl
scas
andb
enter
dec
outsb
pop
std
fldt
repnz
fs
mov
add
outsb
and
inc
sbb
stos
in
ja
inc
pusha
or
fbstp
and
hlt
pushw
mov
jp
add
adc
inc
jb
add
movsl
sub
push
into
adc
loop
dec
add
sbbl
fstpt
cld
dec
adc
incl
add
or
repz
pop
loopne
jle
test
adc
movsb
or
add
xchg
or
push
pusha
mov
jno
loop
inc
adc
test
and
mov
clc
mov
inc
jle
add
rcrl
pop
jno
xchg
dec
adc
push
mov
ss
add
andb
jg
xchg
stos
xor
mov
and
mov
dec
jo
mov
outsl
in
fwait
add
cmpsb
test
xchg
sbb
ja
int3
pop
cltd
arpl
mov
and
in
fs
adc
sbb
gs
lock
outsb
push
xchg
in
mov
mov
clc
pop
or
xchg
fiadds
sub
xchg
or
push
hlt
sub
inc
mov
mov
dec
decl
pusha
sub
repnz
add
icebp
in
lcall
repz
movsb
sub
sbb
push
add
push
and
in
add
outsl
nop
repnz
add
dec
jne
xchg
jno
in
inc
mov
push
aaa
adc
inc
mov
push
incl
addb
sub
lods
and
xchg
xor
cmc
dec
add
add
stos
adc
mov
adc
adcb
sbb
pop
loopne
subb
jo
ljmp
mov
inc
jg
sub
fdivp
add
and
adc
mov
mov
mov
mov
mov
push
jg
xor
push
pusha
dec
xor
dec
dec
andl
dec
or
cld
cmpb
pop
xchg
sub
add
or
adc
dec
repnz
subb
push
test
xor
and
mov
sbb
push
cld
outsl
hlt
dec
add
lds
scas
adc
or
add
mov
inc
in
mov
dec
push
add
cs
xor
nop
inc
inc
sub
pusha
popa
jecxz
clc
in
sbb
push
and
cmp
mov
mov
outsl
mov
int3
sbb
scas
add
sbb
pushl
xchg
and
mov
sub
push
add
mov
icebp
enter
jp
scas
rcll
ljmp
movsb
shrb
cmpsb
daa
pop
decl
orb
and
pop
cmpsb
aam
and
adc
dec
ja
sbb
jb
jb
fwait
sbb
cli
pusha
sbb
call
mov
test
in
scas
repz
aam
or
cmp
out
push
das
repnz
adcb
add
loope
dec
aad
ja
jg
add
repz
push
repnz
add
inc
cmpsb
fidivrs
out
aam
sbb
lods
scas
cmp
add
dec
pop
cmpsb
xlat
push
sub
jp
out
das
repnz
and
incb
pop
out
shlb
mov
cmp
and
lods
adc
scas
inc
dec
fbld
test
mov
mov
clc
add
pusha
or
xchg
repnz
mov
xor
sahf
mov
lcall
push
xchg
dec
cwtl
xchg
add
jg
std
xlat
add
mov
ret
popa
add
in
daa
lock
inc
or
rcll
subl
jnp
lock
jno
add
dec
mov
push
pop
push
push
add
nop
fisubrs
out
loopne
pop
add
add
bound
pop
leave
insl
clc
fcomip
loopne
out
sub
mov
mov
and
call
mov
cltd
lea
xor
sbb
sbb
sbb
mov
scas
xchg
pop
in
pop
push
dec
fimuls
call
clc
pushl
fisubl
loop
bound
mov
add
das
lods
dec
fmul
mov
add
adc
pop
in
ss
push
sbb
mov
scas
adc
addr16
popa
xchg
jno
inc
es
add
das
shlb
mov
ret
adc
repnz
lret
add
icebp
mov
sub
stos
mov
xorb
or
fbstp
xor
mov
add
add
leave
into
xor
lock
sub
xor
aam
xor
mov
in
hlt
test
xchg
xor
jmp
and
sub
xchg
mov
dec
xchg
fwait
add
push
xchg
push
xor
sbbb
addb
decl
movsb
mov
sub
movsb
mov
lds
fdivrp
out
push
xchg
sub
xchg
adc
mov
xchg
pop
mov
sarb
mov
std
push
decl
rolb
dec
and
movb
adc
clc
jmp
pop
adc
or
shrb
jmp
sub
push
rcll
add
jb
sub
lods
sarb
dec
pop
jnp
mov
in
inc
and
mov
fs
loop
xchg
push
pushf
xlat
mov
outsb
cli
call
mov
mov
inc
add
jge
adc
sub
scas
lcall
in
mov
add
pusha
dec
xlat
movsl
lcall
ret
call
push
scas
outsl
add
or
and
or
pop
xor
das
fdiv
addr16
hlt
mov
inc
or
enter
push
mov
mov
xchg
xor
dec
mov
stos
mov
dec
xchg
loopne
repnz
or
ja
in
add
push
ds
and
or
cmp
pop
push
adc
jae
add
inc
add
inc
push
leave
or
or
push
mov
push
out
cmp
inc
push
std
add
inc
mov
adc
sbb
add
dec
stos
popa
add
mov
pop
push
fidivrl
into
mov
data16
xor
adc
add
adc
or
add
pop
rolb
or
push
add
repnz
sub
or
pop
cmp
add
test
add
jbe
popa
xor
add
adc
adc
adc
scas
mov
push
mov
pop
movsb
mov
aam
mov
ljmp
std
mov
test
insl
add
cmpsl
dec
sbb
add
xor
popa
dec
stc
pusha
cmpsb
add
dec
mov
mov
xchg
mov
add
mov
or
repnz
insb
cmpb
push
add
or
pop
push
inc
xchg
sub
sbbl
mov
inc
mov
mov
fdivl
xchg
and
daa
jo
mov
mov
mov
pop
enter
andb
test
bound
jp
into
js
add
aaa
sti
flds
mov
add
mov
std
data16
xchg
rolb
enter
loopne
mov
sbb
stos
fsubl
cld
mov
ret
and
movsb
add
decl
sub
sub
xchg
mov
orb
dec
mov
shlb
rcr
ljmp
leave
add
add
mov
mov
fbstp
mov
popa
out
es
or
or
mov
stos
push
movsb
out
popf
loop
rorb
inc
xchg
fs
mov
fildll
add
sub
inc
cmp
push
je
add
js
bound
add
popa
call
pushf
xchg
or
inc
or
dec
mov
mov
cmpsb
repz
bound
mov
add
cmovns
xchg
add
or
cmc
popa
sub
dec
pop
mov
xlat
and
lock
call
es
int3
push
push
adc
out
ficoml
lods
mov
sub
dec
jb
in
add
adc
out
cmc
mulb
pop
insl
fildll
inc
jb
sub
inc
push
mov
ljmp
loopne
add
lods
stos
das
cmpsb
test
add
jmp
shrl
mov
push
addl
imul
mov
jg
push
push
sbbb
cmpsb
inc
ret
fiaddl
push
jg
dec
pop
hlt
imul
xchg
mov
cld
or
or
jp
adc
mov
mov
xchg
mov
scas
movsb
sub
cwtl
push
cltd
loop
rorb
shlb
lods
test
adc
mov
cmp
or
data16
stos
add
mov
outsl
sub
aaa
sarl
mov
mov
arpl
mov
in
and
push
lds
sbb
and
fs
das
call
pop
sbb
std
inc
inc
cmp
sub
adc
jl
inc
inc
sar
xchg
cmp
push
dec
push
sbb
or
call
cli
das
add
shlb
sbb
das
daa
jp
add
add
cmp
or
mov
and
movsb
mov
jg
ret
call
pop
or
inc
outsb
gs
inc
fidivs
test
movsl
das
xlat
inc
cli
dec
out
fs
cli
mov
mov
adc
mov
add
fnstsw
xchg
mov
imul
lock
add
or
out
sub
stc
das
filds
dec
mov
mov
and
inc
and
push
aam
inc
das
aas
orl
jb
out
sub
fcoms
xchg
jns
lret
icebp
mov
popa
fwait
bound
cwtl
inc
lods
pop
aad
sbb
mov
addb
pop
repnz
adc
and
push
dec
lock
stos
mov
loopne
nop
loopne
std
jmp
mov
sarb
mov
rclb
fwait
adc
in
mov
ljmp
push
rcrb
mov
dec
sub
out
sub
hlt
loopne
sub
mov
pusha
sub
cmp
cs
incl
add
test
or
xor
test
outsl
mov
or
loope
cmc
cmp
inc
xchg
dec
push
pop
fs
and
mov
std
ljmp
and
or
add
and
bound
or
cltd
shlb
subb
ret
loopne
es
dec
loop
fdivl
pop
test
add
push
bound
mov
fwait
sub
push
sub
test
push
mov
mov
insb
call
pop
or
adc
pop
pop
int3
cltd
pop
aad
shrb
pusha
or
ret
popf
pop
add
mov
add
jle
or
jnp
test
data16
sub
decl
add
and
inc
add
pushl
and
mov
dec
and
jp
mov
add
xchg
pusha
push
jmp
pop
lock
fwait
call
fucomip
and
xor
inc
fists
sbb
jl
and
nop
dec
pop
mov
mov
pop
orb
add
ret
sub
xor
mov
and
stos
cs
call
mov
dec
sarb
pusha
sub
add
jno
push
add
mov
pop
sub
shlb
repnz
add
stos
mov
jne
push
dec
push
leave
inc
pop
pusha
test
add
incb
shl
mov
outsb
enter
jb
xor
pop
inc
inc
adc
xchg
test
sbbb
incb
add
push
out
icebp
pusha
addr16
outsb
xor
mov
add
jecxz
fisttps
add
inc
stos
les
in
in
fs
xchg
loope
mov
pop
add
xchg
and
jo
ljmp
mov
repnz
cld
into
std
loopne
or
stos
dec
clc
sti
xor
sub
rep
adc
call
test
negl
sbb
xlat
mov
adc
lock
loopne
arpl
inc
or
loopne
dec
cmpsb
jo
scas
pop
cmc
or
xor
and
push
cli
xchg
ljmp
fmul
dec
add
cltd
push
or
lock
fsubl
push
movsb
and
dec
ret
mov
dec
pop
repz
xor
or
jmp
adc
repnz
mov
popa
xor
movsb
jb
aaa
jl
push
cmp
xchg
mov
pop
ljmp
pushl
xor
push
scas
pusha
sbb
sub
pop
mov
test
add
add
sbb
js
mov
nop
les
test
add
dec
add
adc
or
mov
and
mov
in
addb
lret
loopne
adc
push
inc
add
sub
mov
xchg
and
lods
sub
adc
in
repnz
inc
je
xchg
repnz
lods
scas
adc
mov
divb
icebp
pushl
xor
or
sub
mov
inc
mov
dec
pop
push
repnz
in
and
mov
pop
mov
sbb
and
pusha
mov
inc
aad
sub
gs
push
push
sub
mov
lods
sub
inc
mov
fldl
cld
nop
cmp
or
les
inc
pushl
sub
mov
xchg
sbb
icebp
sub
loope
and
fnstenv
jg
jo
or
push
scas
sbb
aam
loopne
dec
jl
lcall
das
fiadds
fidivl
loopne
loopne,pn
das
xchg
adc
cmp
push
add
mov
bnd
adc
adc
xchg
loopne
imul
add
dec
dec
xchg
popa
test
mov
add
ficoml
mov
rcrl
sbb
subb
mov
xchg
jle,pt
cwtl
cltd
fs
add
add
mov
push
cltd
je
jecxz
add
cltd
or
cmpb
and
mov
addr16
adc
and
in
xlat
orb
lods
pop
cld
decl
dec
or
lock
stos
lods
ss
add
dec
xchg
push
and
xor
jp
fidivs
rcll
mov
rclb
xchg
inc
fistpl
inc
or
push
rorb
bound
and
fdivr
data16
mov
sub
and
mov
fadds
or
mov
fcomip
sbb
shrb
gs
add
cli
stos
add
sbb
repnz
notl
mov
insb
testl
lock
out
das
pop
adcb
aam
inc
in
pop
and
mov
xor
pop
into
xor
and
fwait
sub
xlat
outsl
jg
das
xor
mov
push
pop
out
sub
inc
lret
or
mov
jns
mov
adc
loop
repnz
fdivrp
push
mov
pop
add
xlat
xor
push
pusha
dec
out
test
push
sub
inc
add
add
push
mov
sub
dec
dec
and
inc
mov
pusha
mov
inc
add
movsb
cli
sub
push
dec
adc
lods
sub
loopne
insl
add
dec
add
jns
push
mov
mov
add
loop
daa
inc
repz
add
jb
fists
mov
push
fildll
dec
aam
test
int3
enter
sbb
scas
add
es
fs
pop
dec
sarb
cmp
jmp
dec
fwait
mov
inc
lahf
xor
adc
fucomip
das
add
outsb
js
arpl
inc
xchg
mov
jle
popa
mov
pop
mov
push
mov
xor
test
out
shlb
add
rcl
lock
sbb
xchg
or
jp
inc
xor
nop
add
das
clc
jmp
push
and
sbb
seto
xor
dec
jns
push
mov
loope
mov
xchg
cld
pop
cmc
mov
out
adc
xchg
pop
inc
push
js
repnz
not
sbb
add
sub
call
sbb
nop
adc
lret
popa
adc
dec
inc
inc
push
pop
hlt
vmovhps
insb
mov
dec
push
add
push
in
shrl
rorb
jecxz
inc
and
pop
fs
cmp
daa
or
xor
daa
jo
xchg
add
inc
mov
push
test
je
cld
decl
fcoml
mov
andl
dec
stc
xchg
add
andb
adc
sub
or
push
lds
and
call
xchg
or
cmpsb
lock
fsubp
dec
scas
mov
in
clc
cmp
outsb
daa
imul
enter
inc
dec
mov
das
jmp
mov
and
mov
and
or
mov
dec
push
adc
popa
cli
add
lock
out
jp
mov
push
adc
dec
and
jb
cltd
mov
lods
mov
jb
daa
fsts
or
jmp
ljmp
and
jecxz
enter
xor
mov
lock
xlat
mov
pop
pop
adcb
pop
add
xor
test
out
jo
pop
mov
add
push
nop
push
push
aad
add
push
andb
jp
cmp
push
mov
test
mov
xor
adc
sub
cmpsb
sbb
mov
and
ds
lea
push
jb
xlat
repz
notl
cmp
outsl
mov
cmc
es
dec
dec
roll
adc
jg
icebp
incl
cmp
stos
add
push
adc
dec
repz
add
imul
faddl
fs
aas
xchg
subb
add
mov
fsubl
rolb
mov
inc
fcomip
scas
scas
and
xor
shrb
loope
stos
repnz
jp
dec
lcall
data16
outsb
xchg
aam
call
cld
or
sub
or
xchg
xchg
or
nop
sbb
sub
test
test
add
mov
out
test
mov
fistps
dec
scas
add
push
out
loope
and
add
adc
in
push
xlat
mov
adc
sub
pop
out
push
and
into
in
lcall
xor
add
cltd
in
cs
shrl
or
jmp
push
or
inc
add
decb
sbb
dec
xor
push
outsb
cmpsb
or
or
jg
inc
test
mov
nop
imul
mull
cli
dec
xor
add
or
orb
add
adc
pop
xor
add
mov
faddl
inc
adc
cmpsl
adc
add
push
or
mov
xor
loop
mov
add
daa
mov
dec
mov
scas
sub
add
lcall
mov
cmp
subl
fadds
addl
adc
lods
or
sub
or
addl
dec
es
cld
pop
out
xor
lcall
orl
pusha
add
add
and
scas
stos
enter
jo
add
add
scas
xor
jno
mov
ss
sahf
xchg
cltd
stos
out
fwait
rorb
std
adc
pop
scas
lods
and
jnp
cmpb
dec
add
add
mov
fiaddl
and
cmpsb
daa
out
nop
inc
es
dec
mov
lods
arpl
adc
outsb
scas
lcall
pop
and
dec
jp
inc
add
mov
adc
push
lahf
outsl
ja
or
xchg
stos
mov
scas
clc
aaa
xor
sub
add
xor
fadd
or
dec
jo
sub
mov
add
or
xchg
sub
xchg
fildll
mov
adc
inc
subl
mov
inc
sbb
sbbb
in
fiaddl
add
add
fidivs
xor
xchg
pusha
push
fwait
hlt
mov
xchg
add
repnz
scas
repnz
pop
lock
test
fildll
in
cmpsb
subb
orb
aaa
sub
out
add
mov
sbb
shll
add
push
xlat
mov
inc
or
pop
nop
bound
fs
and
rorb
and
ret
add
loop
test
int3
mov
adcb
lret
inc
test
push
sbbb
movsl
jne
inc
outsb
inc
jge
ss
adc
scas
mov
or
rolb
and
sbb
rolb
cltd
rcrb
mov
push
mov
cmpsb
loopne
dec
stos
bound
sub
sbb
sbbb
pop
mov
dec
xor
push
shrl
decl
inc
add
inc
add
mov
int3
sbb
sbb
cli
or
or
aad
sbb
pop
mov
fdivr
out
adc
add
adc
out
pop
push
and
lock
incl
add
or
roll
pop
mov
cwtl
adcb
and
sti
insl
pop
movsl
xor
sbb
or
sub
or
sahf
sbb
and
inc
daa
mov
das
filds
pop
and
adc
loope
push
xor
dec
aad
repz
test
cmp
sbb
out
mov
loope
mov
push
sub
sbb
or
mov
imulb
out
push
mov
inc
push
and
cmpsb
mov
pop
mov
dec
and
jle
enter
xchg
sub
testb
inc
repz
sbb
push
and
mov
add
out
mov
fistpll
inc
das
daa
rorl
adc
xlat
loopne
cmpsb
jecxz
movsb
push
adc
xlat
add
add
and
into
outsl
jg
inc
hlt
add
dec
mov
sbb
fisttpl
inc
and
rclb
dec
jp
dec
or
sarb
adc
loop
roll
loop
jp
adc
or
in
push
rcrl
xor
imul
addl
addb
push
mov
mov
add
mov
jecxz
mov
mov
and
roll
or
jecxz
pusha
das
loopne
mov
js
call
imul
arpl
push
dec
pop
mov
pop
pusha
inc
or
pop
mov
movsl
data16
sub
mov
mov
int
push
mov
out
push
lcall
adc
mov
pop
adc
test
xlat
jo
lods
adc
xchg
inc
add
sbbb
dec
dec
loopne
adc
je
shrl
leave
bound
sub
mov
ss
cwtl
es
mov
mov
mov
add
and
adc
and
xor
cmc
push
or
inc
push
out
or
mov
int3
std
or
addb
in
cltd
adc
push
pushl
movsl
orl
mov
add
push
add
or
pop
rorl
loopne
xlat
outsb
dec
data16
and
dec
mov
push
stc
enter
jg
sahf
cli
enter
es
pop
and
mov
xor
xchg
add
mov
or
or
shll
jp
insb
pop
push
je
ljmp
cmp
add
inc
loopne
dec
call
jecxz
add
call
popa
inc
pop
jecxz
push
xchg
pop
lret
add
and
das
mov
pop
loopne
mov
divps
aad
pop
cli
pop
inc
xchg
cmp
rolb
sbb
addl
push
sbb
scas
mov
mov
pusha
dec
fists
inc
or
bound
inc
xchg
adc
xchg
icebp
dec
inc
inc
cmp
addb
mov
roll
cltd
push
jp
push
je
push
dec
pusha
sub
mov
and
cmp
push
sti
sbb
dec
pop
fiadds
adc
jge
pushl
fwait
and
rorb
outsb
les
pusha
cmpsb
mov
fs
adc
stos
mov
rorb
add
incl
loop
pusha
add
pop
or
jle
jl
sti
jg
add
icebp
mov
and
loopne
xchg
xorb
sub
inc
or
fmuls
push
hlt
xchg
out
nop
inc
ret
sub
gs
stos
and
and
or
decl
insl
jle
jle,pt
andb
cmpsb
mov
test
jo
pop
or
adc
add
ret
cli
sti
sbb
imul
mov
pop
inc
out
ja
out
add
mov
and
mov
xor
fdivp
pushl
test
add
jbe
xor
rolb
xor
pop
mul
xchg
inc
mov
mov
lock
stos
test
ss
adc
push
dec
add
mov
mov
xlat
stos
or
and
shl
stos
icebp
pop
mov
nop
stos
hlt
dec
mulb
and
loop
push
shlb
pop
add
lock
imul
mov
add
jnp
xor
nop
pop
push
push
nop
and
mov
int3
push
aad
push
in
adc
inc
pop
shrl
xor
scas
add
xchg
in
mov
loopne
rclb
add
scas
lcall
adc
xchg
nop
xchg
out
or
sbb
sub
mov
pop
add
inc
je
jg
fisubrl
push
jp
mov
andb
jb
xor
sub
xor
inc
dec
call
loopne
xor
pop
stos
jmp
push
cmpsb
repnz
movsl
and
dec
clc
ud0
inc
pop
adc
scas
sub
bound
jno
jbe
aas
loopne
add
add
or
add
jg
xor
in
pop
jo
add
addl
sbb
mov
repnz
push
add
loope
cmp
repnz
aaa
jmp
sbb
adc
mov
sub
mov
fdivrp
fistpl
cld
cmpsb
nop
jns
add
adc
adc
lret
aam
or
pushl
inc
cmc
inc
mov
dec
inc
push
loop
mov
popa
adc
mov
loopne
je
xchg
add
aam
ljmp
jo
mov
and
xlat
subb
pop
scas
push
jp
push
push
inc
dec
fisttpl
movsb
stos
movsb
das
push
or
jp
sub
scas
dec
lcall
sbb
jno
add
addb
das
fisttps
cli
dec
stos
add
add
inc
add
mov
rclb
in
stos
ljmp
lock
add
xchg
andb
mov
mov
adc
xor
xor
add
mov
loopne
bound
bound
xchg
push
push
inc
jo
data16
xor
aaa
sbb
ss
sub
fs
das
les
jle
sbb
push
sbb
jo
lock
adc
fbstp
mov
gs
or
push
std
cmp
mov
add
pop
nop
ja
add
and
or
sbb
dec
nop
add
add
dec
jle
and
push
adc
inc
adc
or
fists
add
pop
push
rcrl
adc
jb
insb
cld
decl
xchg
loopne
das
adc
inc
or
inc
inc
or
bound
decl
adc
lock
mov
out
fwait
add
push
aam
xor
loop
adc
cld
or
xchg
and
adcb
add
push
and
mov
pop
movsb
outsb
clc
aad
push
or
pushl
scas
dec
movsb
nop
add
adc
sbb
adc
sbb
cmp
pushl
dec
and
jb
and
adc
movsl
dec
incb
xchg
mov
xchg
xor
out
push
daa
cli
scas
scas
call
xchg
xor
and
das
mov
sub
mov
mov
xlat
mov
add
inc
test
mov
push
add
mov
jle
mov
add
mov
add
push
sahf
and
jo
fistpll
mov
hlt
mov
rolb
sbbb
sub
stos
inc
xchg
xchg
lods
pusha
adc
ja
jmp
xchg
adc
and
and
mov
ljmp
clc
les
mov
ljmp
inc
push
inc
icebp
ret
shlb
call
dec
ret
sub
push
mov
testb
xor
pop
cmp
adc
jno
outsb
sub
xchg
xlat
ror
mov
and
ljmp
dec
push
ja
das
xlat
sbb
fsubr
sub
decb
mov
sub
lcall
ret
call
js
jo
jb
cmpsl
sbb
movb
mov
mov
sbb
jg
sbb
push
hlt
lock
ret
mov
and
ret
or
jg
stos
cmc
inc
and
je
mov
dec
mov
jae
scas
rolb
adc
xorl
pop
icebp
fst
test
pusha
pop
xchg
stos
adc
roll
xlat
xchg
mov
dec
adc
pop
mov
pusha
xchg
loopne
stos
jne
inc
mov
lods
mov
add
pop
es
sub
cld
pop
pusha
lds
mov
pop
cli
mov
hlt
add
xchg
mov
loop
fisubs
mov
adc
inc
cli
mov
inc
and
lods
and
fwait
lods
and
aaa
push
mov
jns
in
movsl
and
ljmp
call
push
push
popa
shlb
mov
filds
cmp
xchg
lock
stos
sub
pop
and
ljmp
pusha
pop
add
clc
loopne
or
xor
out
lods
mov
repnz
out
adc
adc
scas
adc
mov
out
inc
sbb
inc
jno
pop
pop
and
sub
aas
lods
loopne
xor
popa
pop
cmp
adc
adc
jnp
or
inc
mov
add
insb
orb
insb
pop
mov
cld
adc
test
adc
lret
sub
xlat
inc
add
or
push
and
insl
das
xchg
repnz
lock
aam
mov
xor
push
mov
dec
pop
and
loopne
cwtl
icebp
rclb
hlt
int3
dec
jne
scas
mov
ljmp
mov
cld
pop
jmp
and
mov
int
jmp
icebp
add
lock
xchg
in
xchg
push
enter
clc
jg
sti
aaa
xchg
push
sub
push
sarb
mov
mov
sub
mov
cmp
orb
fsubs
inc
pusha
ror
mov
outsb
jl
nop
aad
mov
into
out
mov
push
cmp
addb
je
sub
inc
pop
sbb
aas
push
daa
sbb
xchg
js
and
add
stos
mov
xor
inc
repnz
xor
test
aam
mov
fldl
movsl
add
or
pop
add
mov
lcall
mov
push
cli
pushf
pop
pop
out
nop
adc
sub
sub
add
or
mov
and
lods
call
mov
mov
aad
mov
sbb
fsub
inc
add
or
xchg
add
repnz
adc
pop
in
test
mov
fistl
sub
cmpsb
sub
cmp
jae
or
mov
cmp
xor
add
sbb
lea
add
cld
sub
add
xorb
dec
stc
and
test
sbb
std
fwait
pop
fdivl
mov
andl
or
cmc
or
cs
push
inc
sub
sbb
cld
mov
mov
adc
loopne
cmc
add
cmp
mov
add
mov
movsl
test
sub
sbb
pop
add
push
inc
pop
inc
mov
and
xchg
orb
cmc
cmpsb
addb
in
sbb
xor
lods
and
sbbb
fisttps
add
cs
scas
mov
lcall
insl
dec
or
adc
hlt
dec
sbb
or
xchg
cmp
lock
cmp
push
cli
std
push
ljmp
mov
mov
add
out
mov
and
or
cmpsb
push
and
vlddqu
and
lods
adc
push
jnp
imul
push
mov
sbb
add
js
aam
into
loope
and
ja
rcll
add
mov
sub
mov
repz
mov
out
imul
or
es
mov
cmp
push
cmpsb
push
cmpsb
inc
and
xor
jbe
dec
adc
sub
inc
jb
aam
das
loope
incl
add
cmp
inc
andl
lds
je
rorb
xchg
mov
popf
ret
add
xchg
adc
pop
xchg
imul
dec
add
add
and
or
add
xlat
les
push
jmp
and
dec
subb
test
ret
adc
dec
dec
pusha
cli
fsubl
mov
rolb
shlb
ret
mov
cmp
scas
sub
xchg
pop
mov
movsl
in
scas
inc
sar
cltd
popa
aad
add
pop
mov
out
add
popf
add
and
push
aaa
loope
mov
add
cmpb
cmp
adc
outsb
jg
add
cmpsb
cmpsb
mov
test
adc
mov
mov
add
mov
pop
and
scas
sarl
add
add
icebp
jmp
and
dec
and
cltd
sarb
inc
int
xchg
std
mov
pushf
mov
add
repnz
aam
sbb
sbb
dec
dec
fsts
ret
pop
or
dec
rorl
dec
rolb
lret
pop
add
push
cld
popa
sub
lahf
mov
inc
adc
popa
jo
pop
sub
push
leave
push
sahf
jg
dec
out
ljmp
in
xlat
pusha
push
cld
std
dec
stos
pusha
sbb
push
inc
mov
add
or
rclb
push
cmc
cmpsb
push
and
les
les
ret
xchg
and
decb
add
pusha
out
pop
and
and
jle
fwait
mov
mov
add
push
js
adc
or
rolb
fidivs
pop
ds
loopne
in
enter
orb
sub
ret
test
andb
add
inc
lret
adc
call
and
mov
xchg
cmpsl
sbb
shrb
jg
loopne
pushf
mov
adc
and
and
outsb
pop
mov
es
shrb
or
hlt
outsb
lcall
mov
or
mov
mov
cli
dec
inc
push
add
sub
adc
fsubl
adc
mov
add
and
mov
add
xchg
xchg
inc
mov
insl
ljmp
xor
pusha
xchg
mov
adc
fsubrl
loopne
mov
jg
out
movsb
shlb
pusha
push
push
out
jb
add
and
ljmp
dec
fsubrl
xor
mov
insb
adcl
adc
popa
or
and
scas
push
popf
inc
add
aas
and
lods
add
loopne
out
pusha
pop
lock
icebp
loope
das
xchg
or
or
xor
xor
cmpsb
mov
or
jle
dec
fsubp
add
test
outsl
and
mov
sbb
mov
and
mov
and
pop
mov
mov
push
inc
add
pop
push
jle
lret
pusha
inc
popa
aas
dec
jbe
cmp
out
and
movsb
adc
add
enter
jmp
sub
shlb
and
jmp
mov
cld
enter
mov
fdivrp
push
ja
push
xchg
cmc
pop
shlb
cmp
or
rolb
pusha
add
test
icebp
outsl
sbb
sbb
mov
shlb
mov
lock
add
inc
rolw
sbb
sbb
loopne
push
and
cltd
pop
shlb
mov
aam
add
and
stos
and
inc
xchg
inc
dec
xor
hlt
das
xor
repnz
cmc
lods
icebp
add
fsubrl
rorb
sub
in
loop
leave
lcall
lods
sbb
aaa
mov
adc
adc
or
or
cmpsb
adc
std
inc
addr16
nop
std
popa
add
scas
sub
ljmp
sub
loop
add
lea
push
mov
mov
cld
shll
add
xorb
lcall
jle
add
scas
lret
mov
mov
dec
pop
lods
add
cltd
lcall
xchg
pusha
inc
ss
xor
filds
mov
stos
or
cs
inc
ret
mov
add
mov
pop
lock
movsb
jns
sub
dec
loope
add
dec
inc
loopne
cmp
pop
hlt
and
ss
stos
push
fadd
cmp
pop
dec
cld
lcall
aaa
loopne
sub
sbbb
ret
xchg
enter
and
dec
ljmp
mov
mov
mov
icebp
pusha
pop
mov
mov
test
add
mov
inc
ja
and
pop
pusha
scas
rolb
mov
nop
xor
xor
aad
js
mov
jo
stos
shrl
roll
xchg
decl
add
imul
pop
cmc
enter
cli
jg
aaa
jo
sub
jo
dec
and
or
xchg
lock
das
daa
sbb
incl
add
repnz
pop
gs
inc
add
jo
addb
pop
add
adc
mov
sub
bound
loopne
lods
and
aaa
lods
lods
cmc
mov
cmpsb
loope
xchg
add
xchg
aam
testl
push
fwait
ret
shl
loope
sbb
shrb
call
jl
cmp
mov
pop
xor
adcl
mov
mov
lock
mov
mov
pusha
push
sub
pusha
push
xlat
lock
cltd
cmpsl
adc
xor
push
lock
mov
push
or
fbld
push
adc
sub
sub
test
clc
fcomip
pop
mov
sub
pop
das
scas
add
nop
mov
xlat
push
dec
les
jnp
popa
mov
push
add
or
outsl
push
mov
dec
sub
dec
ljmp
fisubs
or
xchg
loopne
roll
test
xor
xor
data16
jle
pop
popa
aaa
xlat
push
and
daa
push
rcrb
dec
test
mov
aaa
or
cmp
mov
mov
into
xlat
scas
xor
movsl
sbb
adc
andl
inc
cld
outsl
cli
add
inc
cwtl
std
imul
enter
je
mov
insb
imull
imul
daa
jo
xlat
cmpsl
sbb
notb
adc
lock
xchg
fs
cld
pushf
mov
lods
and
mov
jmp
inc
xchg
dec
cwtl
das
loope
adc
add
lods
es
and
xchg
xlat
mov
in
mov
adc
cmpsl
or
xlat
stos
and
dec
stos
mov
mov
sub
popf
pop
std
dec
movsb
cmpsl
rolb
stos
and
xchg
lods
and
fidivl
pop
cmc
jg
add
mov
cmp
es
fbld
jo
icebp
add
sub
or
incl
hlt
and
mov
jg
aaa
int3
mov
push
ss
call
sti
les
out
mov
mov
ljmp
inc
sub
dec
mov
std
add
cmp
inc
out
jbe
fs
clc
aas
mov
or
mov
mov
call
mov
add
xor
add
mov
outsb
mov
add
mov
pop
mov
dec
test
add
movsb
std
jbe
orb
mov
lods
inc
fsubs
pop
adc
inc
inc
cli
sbb
hlt
dec
pop
or
insl
mov
rcrb
add
add
dec
adc
mov
movsb
lods
cmpsl
xlat
mov
adc
xchg
incl
call
mov
nop
add
dec
and
subb
lret
andb
mov
push
xchg
xchg
mov
cld
incl
adc
xor
adc
jl
jb
das
xchg
jmp
dec
and
xchg
push
mov
loop
and
clc
aaa
out
xchg
add
mov
insl
mov
popa
shl
add
add
push
sub
xchg
xchg
add
ficoms
push
cmpsb
sub
or
scas
cli
decl
stos
fdivs
out
enter
push
out
cmc
orb
daa
das
lock
pop
loopne
or
inc
add
repnz
sub
mov
mov
push
or
test
xor
adc
decl
adc
push
mov
outsb
sub
mov
mov
or
add
data16
pop
push
xchg
orb
loopne
pushf
sar
fstl
push
ficoml
pop
sub
xchg
jno
mov
jle
inc
ret
cs
jae
out
xchg
push
insb
fisttps
ljmp
jae
adc
sub
icebp
push
cli
or
nop
mov
and
xchg
loopne
loop
f2xm1
sbb
cmp
cld
sbb
or
outsl
lock
mov
cmpsb
jo
mov
xchg
ja
ret
call
hlt
shll
push
or
fwait
loope
bound
rcr
jno
mov
pop
xchg
dec
rolb
xor
jo
inc
pop
xchg
mov
rolb
push
mov
pop
mov
add
cmpsb
push
movsb
loope
rdtsc
adc
cltd
ret
test
jl
ret
push
and
push
xor
dec
scas
xor
aas
xchg
push
mov
jo
icebp
mov
addb
jns
pop
lods
loopne
mov
or
xchg
mov
add
cmc
mov
inc
mov
sbbb
mov
mov
and
add
mov
ret
push
pop
jl
test
or
mov
cltd
std
add
pushf
adc
add
xchg
or
enter
mov
pop
push
pop
mov
int3
clc
mov
push
mov
das
adc
mov
rclb
test
adc
fisubrl
sub
xchg
insb
test
push
lods
mov
mov
icebp
stos
dec
loope
xlat
ljmp
mov
bound
scas
pusha
mov
sub
inc
mov
xchg
sub
inc
test
ja
xchg
add
add
inc
mov
push
les
jno
stos
jbe
inc
dec
mov
mov
and
adc
xchg
mov
push
or
xor
xor
pop
daa
iret
cmp
or
pop
rcrl
and
push
enter
push
dec
pushf
pop
cmp
dec
pop
xchg
rcrl
shlb
mov
cmc
add
or
movsb
mov
fdivrp
adc
inc
xchg
mov
clc
inc
pop
fsubl
pusha
movsb
fcompl
cmc
lcall
sbb
inc
call
mov
test
mov
scas
add
loopne
lock
sahf
ficompl
stos
mov
lea
stos
add
mov
decl
gs
push
mov
mov
jo
or
data16
mov
mov
push
jl
lahf
jb
xlat
scas
pop
lds
and
push
xchg
cld
add
fxch
cli
cmp
mov
fwait
cmpsb
outsb
outsb
fs
decl
mov
pop
in
ret
push
dec
jno
movsb
enter
and
jb
test
loope
add
mov
jnp
pop
imul
xchg
fstl
mov
call
cs
lret
xchg
inc
or
fs
fsubs
call
jbe
sub
cwtl
lods
inc
aam
cs
fwait
aam
mov
push
inc
bound
into
mov
lret
jbe
sub
rcr
sbbb
push
lret
push
jbe
dec
pop
mov
add
add
decb
in
lret
ljmp
inc
inc
and
stos
lret
add
pop
dec
sarb
addr16
stc
lea
push
push
cmpb
mov
mov
mov
outsl
push
sarb
jle
scas
cmpsb
adc
pop
lock
fimull
js
xlat
iret
sub
or
movsb
adc
jb
pop
stos
aad
sub
pusha
dec
mov
repnz
sbb
cmpsl
sbb
add
cmp
or
jns
movsl
fdivr
pop
loopne
mov
inc
cmpsb
sub
gs
mov
cmpb
adc
add
out
aad
sub
push
sahf
dec
or
aam
cld
testb
sub
mov
sub
add
mov
and
jbe
lcall
add
mov
sub
in
mov
out
fwait
sub
mov
push
rolb
sbbb
jg
sub
es
fmulp
pop
add
and
xlat
adc
push
rcrl
stos
add
call
call
adc
cmp
loopne
cmp
add
xchg
mov
shll
addr16
out
data16
inc
fstps
push
inc
outsl
cwtl
dec
add
jbe
subb
andb
mov
mov
cli
loop
sbb
dec
xor
inc
sub
or
xorb
inc
sbb
popa
sarb
jbe
push
mov
das
fsts
rclb
add
xlat
mov
hlt
dec
insb
jmp
push
xlat
test
add
sbb
out
pop
incl
jecxz
mov
adc
push
cwtl
adcl
push
stc
cld
fistpll
mov
pop
and
add
lods
sub
loope
pop
loopne
cwtl
mov
sub
lods
add
pop
sub
lods
dec
sarb
mov
fsubrl
dec
add
add
jg
dec
dec
pushf
lahf
and
sub
inc
pusha
fdivp
xchg
imul
cld
ret
adc
cli
in
jno
adc
jle
std
icebp
call
in
pop
mov
pop
shll
push
mov
sub
add
clc
cmp
or
addb
mov
adc
pop
inc
sbb
insl
mov
sbb
mov
add
add
adc
clc
and
in
pop
and
xlat
cmpsl
cmovo
push
mov
jle
mov
fwait
and
mov
hlt
test
pushf
les
cwtl
add
fisubrs
jo
xchg
filds
inc
jb
sar
sub
insb
or
pop
mov
fisubrl
and
and
lods
jo
or
aam
and
mov
call
inc
sub
add
pusha
xor
lahf
cmp
cli
cs
pusha
or
cmpsb
xchg
cmp
jae
cmpsb
mov
push
hlt
cltd
jne
cmpsl
das
adc
std
stos
sarb
pop
ljmp
stos
adc
jle
nop
sub
jns
xchg
sbb
stos
xchg
aam
aaa
ljmp
adc
call
outsl
test
loop
jmp
bound
adc
ret
les
xor
push
mov
hlt
in
inc
add
pop
mov
inc
cmp
mov
mov
arpl
add
mov
push
push
loop
je
sub
mov
and
fsubs
cs
outsl
ds
addr16
inc
mov
aam
xor
or
fldcw
jnp
add
mov
adc
std
addb
add
sbb
sbb
bound
mov
inc
into
pop
aam
ret
mov
xchg
and
mov
xor
mov
les
cwtl
mov
jecxz
jmp
out
mov
stos
repnz
dec
arpl
and
sub
jbe
int3
add
mov
push
icebp
mov
js
nop
in
and
enter
inc
adcl
add
div
or
xor
sbb
add
das
fdivr
popl
push
sub
cwtl
loop
stos
fidivl
add
loop
test
lret
push
and
push
sub
xlat
xchg
jecxz
addl
scas
mov
scas
loopne
mov
jg
jp
sub
add
test
adc
dec
mov
sbb
dec
jle
in
cmp
sbb
decl
push
and
ljmp
popa
stc
pusha
jle
jmp
jne
xchg
adc
sub
mov
fbld
pusha
xchg
rclb
insb
stos
leave
bound
pop
adc
adcb
rcl
adc
adcl
add
inc
mov
add
pop
cmp
loop
sar
insl
mov
stos
and
sub
cmpsb
movsl
mov
push
outsl
outsl
jg
mov
sbb
and
push
xchg
or
scas
sub
inc
jle
inc
or
les
mov
jmp
inc
call
sub
push
add
mov
test
inc
dec
test
and
push
mov
adc
not
bound
mov
mov
sbb
pop
into
enter
subb
movsb
lock
push
pusha
push
lret
les
lahf
mov
pop
icebp
sbb
dec
imul
loope
adc
dec
sbb
mov
int
mov
mov
mov
call
inc
mov
cltd
std
mov
rol
push
les
and
and
dec
pop
adcb
mov
xor
or
mov
inc
inc
xchg
or
in
xlat
push
repnz
scas
call
mov
adc
fldenv
addl
ljmp
dec
cmp
xchg
lahf
les
adc
loope
stc
fisubs
dec
push
rolb
das
pop
and
cli
dec
xchg
insl
and
or
rolb
ljmp
mov
loop
mov
lods
daa
in
pusha
pop
test
das
addl
sti
fists
dec
int3
repz
rolb
xchg
subb
outsb
push
insb
xor
pop
aaa
icebp
adc
out
add
mov
nop
scas
ret
mov
add
je
lock
lcall
push
sbb
enter
xlat
adc
adc
fwait
xlat
cmp
adc
mov
push
pop
cmc
lods
add
mov
or
imulb
dec
and
fsubs
push
cs
adc
add
fs
cmp
sub
or
mov
xor
scas
push
pusha
mov
pop
add
cmpsb
jb
ljmp
repnz
mov
add
loopne
mov
cld
inc
sub
add
fwait
add
popa
mov
sub
pop
sub
sti
push
push
nop
adc
xchg
xlat
dec
mov
xlat
rolb
push
sti
jmp
add
adc
mov
movsb
or
jg
and
sub
dec
mov
scas
pop
inc
mov
cwtl
pop
insb
loopne
mov
stc
sub
mov
mov
and
icebp
xchg
les
jg
aam
sbb
or
popa
adc
pop
fdivrp
mov
call
mov
jo
lret
enter
mov
mov
add
mov
push
or
push
mov
sub
pop
test
cltd
das
pop
ds
nop
or
xchg
add
clc
xorw
sbb
cli
call
inc
loope
jo
pop
pop
je
lock
add
cmp
sub
mov
adc
cmc
adc
or
addl
addl
sahf
dec
mov
fildll
pusha
add
mov
push
or
jp
push
push
inc
stc
imul
dec
lret
jmp
sarb
cmp
jg
and
ds
or
sub
sbb
jo
es
or
inc
lods
fcomps
add
cmpsb
daa
adc
add
fsubrs
inc
add
sbb
rorl
lock
and
clc
rorb
fs
pop
hlt
cmp
sub
aad
add
das
fistpll
cli
enter
mov
decl
xchg
test
adcl
cmp
rolb
mov
mov
push
mov
push
xlat
data16
jnp
push
loope
orl
or
lcall
es
nop
ficoml
mov
rcll
xor
or
add
dec
out
inc
jb
mov
loopne
mov
out
or
enter
cmc
insl
shll
out
adc
xchg
push
adc
imul
push
pusha
sbb
mov
add
adc
fcomip
sbb
add
add
movsl
add
adc
cli
add
mov
stos
add
jp
fwait
mov
inc
add
mov
mov
mov
cmpsl
mov
add
mov
mov
or
out
out
add
adc
repnz
cs
and
mov
inc
mov
adc
cs
ljmp
add
ficoms
add
xor
shll
sbb
cwtl
sub
cs
xor
add
js
sti
xchg
fmulp
mov
cmp
out
or
es
movsb
dec
add
mov
ficoms
mov
cmp
push
adc
add
jle
fwait
in
push
sbb
push
adc
vpmovqb
repnz
xor
jp
xor
lods
cltd
es
sbb
inc
sbb
xchg
push
pop
in
ljmp
test
enter
or
sub
or
test
add
fidivl
add
test
ss
lods
and
or
push
mov
sbb
cmp
out
in
inc
push
add
push
rorl
test
or
inc
cmp
mov
inc
mov
push
fsubs
jbe
adc
and
scas
mov
xorb
inc
add
xchg
jmp
push
cli
add
sbb
inc
jle
aaa
xchg
nop
das
inc
fistps
and
and
mov
shll
add
jbe
fucomip
sub
dec
xor
stos
mov
stc
and
jg
mov
stos
sub
dec
movb
nop
pop
dec
es
mov
mov
dec
or
sub
loopne
cmpsb
movsb
scas
jl
and
lea
scas
pushf
icebp
stos
xor
mov
mov
repz
add
pusha
add
enter
or
jg
hlt
jmp
mov
jno
test
shll
cmp
adc
and
repnz
sbb
sub
mov
sbb
and
sahf
repnz
scas
cmpb
fwait
push
test
mov
xchg
bnd
fwait
and
add
aaa
insl
addl
fmull
push
repnz
push
pop
sbb
xchg
andb
pop
das
cwtl
mov
mov
add
push
jmp
mov
mov
add
into
add
mov
nop
push
orb
jno
aam
subb
xchg
mov
mov
or
and
shlb
hlt
dec
icebp
pushw
cmp
xchg
dec
sbb
je
mov
jg
dec
xor
std
add
xor
mov
fisubl
mov
pop
lods
jg
or
popa
mov
adc
push
inc
sbb
loope
cmp
sub
cli
into
sub
rol
fcom
lds
call
out
jge
enter
loope
cmp
mov
icebp
adc
mov
and
mov
stos
lock
add
add
hlt
and
inc
or
mov
mov
icebp
fcompl
pop
hlt
jno
loopne
push
mov
mov
push
shr
jbe
add
jo
jno
inc
xor
pushf
mov
xchg
add
hlt
incl
push
inc
or
push
fsubs
adcb
mov
adc
aad
sti
sti
xor
loop
sub
jb
cmc
pusha
imul
pop
adc
inc
push
mov
and
dec
or
stos
or
hlt
sbb
add
test
imull
xor
add
popa
mov
sbb
std
popa
jp
adc
mov
dec
jle
lods
sti
mov
lcall
fbld
add
sub
ret
mov
push
dec
push
jp
ror
loope
push
dec
nop
adc
inc
ds
fisubrs
enter
fiaddl
add
sub
rcl
hlt
stos
mov
repz
fidivrl
pusha
pop
mov
ljmp
add
sbb
scas
lret
add
inc
dec
lcall
cs
xchg
dec
sub
gs
mov
rcl
push
add
sub
in
enter
sub
or
addr16
data16
mov
mov
sub
and
std
dec
jmp
sub
loop
stos
ljmp
or
repnz
and
jl
xchg
cmp
rcrb
mov
addb
mov
inc
xchg
jmp
scas
lret
add
xor
pop
sbb
push
inc
das
cld
mov
inc
inc
mov
adc
fsub
pusha
mov
rorb
sub
cld
mov
loop
sub
xchg
enter
hlt
repz
and
negb
cs
mov
mov
movsb
jbe
sub
sub
mov
mov
cmpb
repnz
jnp
rolb
inc
ja
gs
rorb
inc
or
outsl
adc
mov
or
ret
xor
push
lods
jo
ret
sbb
es
sub
push
add
in
mov
sbb
leave
mov
adcb
cmp
adcl
sbb
sahf
rcll
mov
das
push
test
pop
lods
and
pop
push
dec
sub
cli
sub
sbb
dec
ret
mov
outsl
inc
add
adc
jge
mov
lcall
push
sbb
dec
sahf
cli
roll
pushf
les
add
js
and
mov
and
mov
cltd
sub
inc
cmp
mov
addl
mov
in
insb
sub
in
sar
sbb
enter
dec
mov
sbb
xlat
lahf
movb
xchg
pusha
and
add
movb
icebp
and
push
subb
aam
jge
mov
inc
xchg
adcb
clc
and
ds
lods
sub
gs
pop
mov
dec
push
and
mov
icebp
outsb
shrb
add
pop
fbstp
addl
in
and
dec
jbe
shlb
scas
ret
sub
or
sub
push
push
test
add
xchg
and
inc
or
xchg
dec
xchg
cs
or
xor
inc
add
xorl
push
inc
dec
xor
ffreep
clc
or
and
pop
dec
jge
dec
mov
add
outsl
sub
roll
add
xchg
xchg
add
outsl
add
xchg
imul
lock
mov
jb
scas
fs
mov
adc
dec
popf
loopne
lret
inc
jns
lock
mov
mov
add
outsb
adc
add
adc
nop
movsb
pusha
aam
shll
movl
add
jbe
call
cmpsl
cli
repnz
lret
xor
pop
clc
outsb
jmp
and
scas
dec
stc
push
mov
cmpsb
dec
notl
fistpll
lret
add
orb
add
lock
jg
push
cmpsb
mov
inc
and
add
adcb
add
mov
or
or
adc
test
add
out
stos
fisubrl
sub
rol
sbb
pop
sub
mov
mov
sarl
mov
xchg
mov
nop
add
add
addr16
std
fidivl
lock
mov
cmc
mov
and
adc
inc
push
and
mov
icebp
push
inc
push
loop
xchg
and
or
fildll
add
inc
push
outsb
dec
lods
pusha
push
push
mov
lcall
rcll
dec
andl
sbb
call
lcall
arpl
lret
inc
pop
add
xchg
add
add
dec
jns
adc
inc
mov
stos
int3
aad
mov
mov
push
arpl
test
xchg
add
imul
aam
sarl
mov
or
and
xlat
mov
push
and
inc
pop
adc
mov
cmpsl
mov
cli
ds
push
out
test
cmpb
jno
add
adc
mov
out
fcmovbe
andb
mov
xchg
add
add
mov
or
lods
and
incl
and
add
cmpsl
and
roll
cmpsl
sub
mov
scas
scas
cmpsb
les
test
mov
dec
loop,pt
mov
in
mov
and
mov
inc
mov
inc
sti
xlat
addb
inc
push
leave
mov
inc
sub
mov
mov
jnp
cmp
mov
add
mov
push
sbb
loop
mov
lret
bound
inc
push
mov
int
pop
dec
add
inc
dec
popa
dec
mov
loopne
decl
or
subl
popa
and
dec
sub
es
cmp
mov
adc
pop
ret
wbinvd
mov
les
mov
dec
adc
cmp
outsb
aaa
sti
mov
add
mov
loopne
clc
inc
adc
cmc
aaa
cld
incl
push
dec
mov
push
mov
popa
jo
add
arpl
sbb
add
xchg
incl
ret
ljmp
ljmp
mov
xchg
add
mov
rorl
stos
add
repnz
adc
movsb
mov
orb
add
adc
push
add
stos
aaa
push
and
mov
and
insb
xchg
icebp
mov
cmp
mov
es
mov
add
and
ficompl
pop
lods
add
mov
and
inc
or
insb
bound
fs
xchg
ret
mov
pop
mov
cld
lcall
stc
or
repnz
sbb
adc
mov
dec
setns
in
fcomip
aam
inc
push
clc
mov
lock
mov
push
rolb
adc
jg
repz
xchg
inc
mov
cmp
fcomp
mov
jo
sahf
fdivrl
mov
sar
add
mov
shrb
add
xchg
dec
jle
in
sbb
or
add
fwait
out
push
xlat
stos
aad
das
xchg
leave
pop
rcll
pop
mov
mov
jecxz
add
sub
sub
push
sub
xchg
addb
push
ret
decb
fbstp
add
ficoml
lock
insl
mov
shrl
in
test
nop
mov
mov
dec
push
sbb
mov
bnd
dec
jns
pop
mov
ss
add
in
faddl
and
outsl
clc
mov
add
cmc
lret
dec
sarb
in
add
dec
imul
jl
mov
pop
aam
rorb
scas
or
push
loope
enter
dec
into
loope
rcrb
rolb
cld
popa
dec
lcall
xor
stos
lret
pop
mov
mov
pushf
and
popa
mov
lock
call
xchg
pop
shll
notl
push
mov
add
add
add
push
movsb
stc
xchg
testl
test
jp
inc
cmovns
test
das
mov
mov
lock
nop
mov
xchg
cmp
adc
ret
cld
cli
inc
sub
cs
std
cld
sbb
add
and
jg
mov
adcl
mov
mov
jp
les
dec
mov
mulb
and
aam
jl
push
hlt
push
add
mov
or
dec
decl
inc
sbb
stc
or
test
shrb
ss
cli
and
xchg
and
lcall
addr16
jg
dec
jnp
mov
test
inc
add
mov
es
mov
mov
add
test
fwait
push
call
inc
dec
mov
mov
pop
loopne
push
loopne
pop
xor
sarb
cmp
fwait
cld
aam
lock
je
jecxz
cmpsb
fadds
dec
ja
and
and
xor
call
push
push
cmc
shll
pop
pop
add
inc
inc
add
push
adc
push
xlat
cwtl
inc
mov
call
sbb
adc
scas
dec
roll
add
adc
add
push
test
mov
call
inc
and
ljmp
xchg
mov
fwait
add
lret
daa
dec
lcall
sub
xor
mov
les
std
mov
out
add
push
and
mov
loopne
and
shrb
adc
jmp
imul
jb
js
xor
pop
dec
mov
adc
jb
push
or
fimull
inc
pop
jmp
bound
scas
loopne
enter
adc
stos
test
fmuls
pop
add
adc
add
scas
push
and
adc
xor
ret
loopne
mov
adc
icebp
outsb
or
mov
fcomip
pusha
loop
mov
popa
adc
shll
add
and
shlb
lods
mov
incl
dec
cmp
out
loop
ljmp
push
into
loope
shrb
add
outsl
es
nop
enter
mov
push
xchg
nop
loope
movsl
lock
mov
pop
inc
sbbl
add
pushf
je
push
cmpsl
loop
ret
add
outsl
js
aad
sar
jecxz
add
mov
in
mov
adc
add
dec
mov
cmpsb
shr
rorb
lock
mov
test
mov
push
mov
push
push
add
adcb
xchg
pop
mov
icebp
in
ja
push
dec
scas
pop
xor
dec
addl
fisttps
jmp
and
mov
movsb
icebp
js
inc
push
inc
adc
sbb
rcr
and
mov
fs
sub
add
jle
sub
dec
call
cmp
pop
cld
mov
xchg
jo
xor
dec
loope
dec
cmp
pop
stc
jo
loop
test
jg
inc
rorl
mov
push
dec
sar
outsl
movsb
fidivs
jbe
les
xor
decl
xor
mov
out
ljmp
xchg
nop
pop
dec
xor
mov
cmp
icebp
loop
xchg
sub
cs
mov
cmpsl
mov
loopne
jp
sbb
add
int
push
or
lcall
popa
clc
test
adc
in
add
out
int
add
add
popf
xchg
bound
adc
add
sbb
add
add
mov
out
clc
outsl
sbb
mov
add
sbb
mov
outsl
or
add
jb
push
jl
clc
cs
cmc
xchg
cld
popa
or
cli
popa
loopne
add
mov
sbb
dec
ljmp
push
adc
and
inc
cmc
push
test
rcrb
fwait
or
inc
mov
idiv
xor
jg
rol
push
adc
movsl
inc
popa
add
outsl
add
cmpb
or
std
dec
or
rclb
mov
sahf
cmpsb
jbe
or
lods
lretw
test
cli
or
and
fiaddl
and
stos
add
popf
bound
aaa
inc
jae
es
mov
pop
push
rcrb
mov
out
leave
push
mov
aas
xchg
mov
clc
add
push
out
or
pop
cmp
ret
cli
lods
adc
add
xor
mov
jp
loop
addl
add
jg
and
dec
dec
les
pop
add
mov
cmpsb
or
add
cmp
jo
fists
lods
mov
lret
clc
sub
clc
add
pop
hlt
add
mov
adc
mov
or
or
push
xor
sar
adc
enter
dec
mov
inc
mulb
cmpsb
orb
or
aaa
add
movsb
addl
mov
repnz
jmp
andb
and
pop
sub
or
shlb
sub
mov
arpl
arpl
add
add
or
addb
adcl
pop
nop
arpl
xor
adcb
adc
add
xor
loopne
fsubs
xchg
mov
pop
lcall
lods
and
js
ss
push
dec
mov
cmp
fcomip
adc
lcall
lahf
nop
push
pop
add
andb
jle
pop
pop
sbb
bound
in
dec
and
jae
pop
add
sbb
inc
push
decl
mov
adc
das
mov
sarl
inc
and
sub
push
dec
inc
sbb
adc
and
cmpsw
push
add
cmp
and
add
add
loop
rcrb
cmp
push
add
dec
push
xchg
fcmovnbe
bound
pop
or
adc
mov
rorb
mov
roll
mov
test
jmp
ret
inc
push
enter
xchg
add
add
addb
sbbb
mov
push
or
fsubp
out
pushf
stos
dec
push
pop
push
adc
push
pushl
cld
adc
adc
inc
or
add
pop
mov
or
or
push
inc
push
sub
cmpsl
add
and
mov
es
icebp
incb
or
jg
rcrb
jp
cmpsb
stos
fs
push
cmpsb
dec
cmp
nop
jo
or
sub
lock
fwait
ljmp
sbb
pop
jecxz
add
and
sarb
or
orps
mov
pop
rolb
mov
fsubrs
addb
adc
inc
xor
out
add
jg
push
mov
jne
cli
inc
mov
mov
das
cmpsb
xor
inc
fistpl
cwtl
jmp
mov
nop
int3
aas
inc
push
sahf
inc
mov
std
mov
pushf
repz
adc
decl
lods
adc
mov
xor
jp
ljmp
add
xor
hlt
adc
push
fs
imul
cmp
inc
sbb
dec
arpl
in
sbb
test
cmpsl
jle
stos
adc
cs
inc
push
movsl
dec
or
rcrb
int3
sbb
je
mov
out
movsb
add
inc
xor
dec
daa
jp
mov
jg
int3
cmp
and
mov
push
or
jp
push
sbb
ror
sbb
mov
mov
movsb
data16
aas
out
or
loopne
popa
add
pusha
gs
dec
or
in
subb
push
lret
incl
mov
inc
loop
mov
mov
and
inc
subb
sub
xor
pop
mov
decl
add
in
out
dec
pop
and
sbbb
clc
add
jle
xor
daa
mov
add
push
sub
and
jbe
hlt
mov
mov
jne
ds
push
ljmp
and
mov
data16
stos
add
inc
shrl
lods
sub
inc
and
jle
dec
and
add
cli
fdivr
addb
or
out
dec
dec
jle
pop
push
dec
push
xchg
fidivl
test
xor
add
sub
and
rorl
shlb
shll
sbb
push
and
ljmp
icebp
push
into
cltd
add
and
mov
mov
es
pop
jno
cmpb
popa
das
test
filds
adc
and
ds
mov
pop
fs
ja
mov
add
nop
sbb
inc
or
loopne
bound
adc
pop
loope
aam
xor
xor
xchg
add
aam
subl
add
icebp
pop
fstpt
or
loopne
loopne
push
rcrb
cwtl
add
inc
fwait
or
xchg
pop
mov
push
enter
lret
cli
pusha
cmp
pusha
dec
cmpsb
daa
xchg
loope
repnz
and
and
dec
mov
orb
in
add
ljmp
movsl
cltd
push
incl
shlb
mov
repz
das
mov
subl
ret
mov
cli
cmpsl
add
outsb
cli
lock
cltd
mov
and
adc
jb
dec
outsb
pop
mov
outsb
cltd
cmp
sti
jmp
jb
xlat
gs
loopne
push
decl
jae
jno
rol
inc
or
pop
add
add
rcll
xchg
add
pop
hlt
outsl
or
sbb
mov
sbb
stos
dec
clc
add
or
mov
in
mov
cld
inc
pop
mul
mov
mov
lds
or
jecxz
loopne
add
xorb
es
inc
dec
lret
mov
mov
sbb
and
fsubrl
rcrb
add
fmull
mov
cmp
mov
add
mov
lcall
out
jbe
inc
in
mov
sbb
adc
sub
inc
sbb
pop
les
xor
pushl
pop
adc
sbb
mov
xchg
push
add
sub
loop
scas
mov
das
loope
add
and
lods
sub
mov
add
pop
imul
mov
or
xlat
test
orb
and
pop
outsb
jecxz
or
das
gs
jg
xchg
adc
in
cmpsb
push
repz
inc
or
repz
pop
pop
pop
xchg
pop
sbb
inc
sbb
inc
dec
ljmp
sbb
repnz
mov
push
or
insl
clc
cmpsb
rolb
ror
adc
or
jno
jg
fildll
test
subb
shrb
icebp
cmp
mov
icebp
add
sarb
mov
add
stos
and
cmp
adc
ljmp
pop
pop
movsb
push
mov
ljmp
ss
sub
mov
push
addb
shr
mov
inc
dec
cmp
subb
lcall
inc
jo
add
sub
cmpsb
mov
lods
sub
je
xor
dec
test
dec
sbb
push
push
mov
clc
insb
ja
lds
jmp
push
out
or
push
sarb
ss
pushf
aaa
adc
jg
mov
xchg
inc
add
inc
and
mov
adc
test
ja
jge
inc
xor
adc
push
add
stc
xor
add
add
jmp
loop
dec
call
sub
push
jo
inc
or
in
out
inc
mov
mov
and
dec
cld
inc
add
lock
mov
add
aam
jnp
cmpb
or
sub
add
sahf
mov
sbb
test
ljmp
jbe
mov
push
enter
lods
push
incl
dec
aaa
nop
add
and
dec
addb
lcall
sub
lahf
scas
adc
sahf
dec
mov
push
jo
imul
fsubrl
xor
push
sub
fildll
sahf
push
add
mov
xchg
xchg
mov
aaa
mov
xor
or
push
dec
or
xchg
push
hlt
push
and
sub
popa
sbb
fistl
mov
filds
pop
mov
jle
add
adc
test
inc
sahf
inc
sub
lock
inc
and
arpl
test
fldt
pop
movb
outsb
and
stos
arpl
mov
adc
mov
jmp
clc
lahf
pop
add
and
and
add
and
adc
pushl
call
es
outsb
xor
loopne
in
and
fdivl
dec
push
add
loope
adcl
icebp
add
add
push
inc
xchg
stc
dec
add
ss
jp
stos
int3
cmpsb
mov
cmp
mov
dec
mov
add
cmpsb
ret
push
cmpb
inc
mov
add
addb
mov
lds
clc
mov
sbb
in
aaa
lret
push
inc
jb
push
push
jg
negb
aas
ljmp
sti
dec
icebp
xchg
loopne
and
or
shrl
and
inc
in
add
clc
hlt
subb
or
mov
add
push
sbb
inc
dec
aas
pop
sbb
pusha
adc
cmp
or
popa
sub
xchg
sub
subb
cli
cmp
hlt
pop
icebp
fs
mov
add
aaa
dec
jb
or
or
add
js
icebp
sbb
and
out
cwtl
inc
lea
adc
xor
dec
mov
push
ret
jbe
stos
out
cwtl
xor
pop
nop
test
or
add
rclb
xchg
cs
cltd
adc
dec
lods
xor
fdivl
add
les
adc
pop
xchg
push
lds
sub
xchg
fsubs
ret
push
pusha
xchg
sub
sub
mov
outsl
adc
mov
push
push
sti
push
pop
sub
shlb
jl
dec
sub
push
jl
push
push
push
sbb
bound
xor
loope
inc
jecxz
adc
icebp
sbb
jns
sub
les
add
push
je
mov
cmpsb
shll
push
arpl
cmp
fistps
aam
and
adc
lds
std
sbb
loopne
sbb
add
scas
nop
sub
pop
dec
insb
push
mov
jg
xchg
andb
mov
cmpsb
xchg
xor
pop
xor
push
xor
cmpsb
xchg
mov
or
push
enter
jo
push
push
cmp
xor
pop
push
test
or
and
sbb
or
aad
add
fcomp
fwait
push
or
fistpl
mov
int
and
dec
add
shl
lea
push
cmp
or
sub
movsb
test
movsb
mov
fwait
test
add
mov
push
cmpsb
repnz
jg
aad
addb
and
test
mov
inc
shrl
rclb
sbb
sub
aad
std
push
xlat
out
push
xchg
rolb
dec
mov
inc
inc
js
lahf
adc
or
lock
pushf
adc
jo
sbb
xchg
push
push
push
add
dec
pop
lods
push
adc
fisubrs
and
test
mov
lret
or
inc
mov
adc
fcomip
test
lods
fiaddl
popa
mov
add
add
mov
pop
sub
bound
xchg
ror
mov
mov
pop
fsubl
add
push
mov
ja
mov
pop
fdivrl
cmpb
mov
sub
lcall
orb
mov
stc
les
add
xor
push
jmp
cwtl
mov
movsb
jo
push
dec
inc
xor
inc
jo
mov
dec
dec
cmp
add
push
jnp
mov
and
dec
lods
and
stos
mov
scas
mov
cmpsb
push
add
enter
adc
sub
push
rclb
dec
and
pop
aam
mov
or
xor
frstor
cmc
cmpsl
jecxz
and
or
ss
mov
call
mov
rorb
pop
or
xor
and
loopne
es
mov
cmpsb
jbe
push
in
into
ss
scas
into
or
jo
cmc
lret
push
add
and
adcb
fwait
and
imul
or
xlat
and
scas
or
adc
inc
out
movsl
lret
sbb
and
cmp
mov
movsl
mov
and
aam
sbb
cmp
rclb
test
xor
ret
dec
mov
aas
ljmp
push
mov
sahf
test
mov
rorb
adc
lods
mov
add
stc
push
add
test
xlat
mov
inc
push
jle
add
pop
dec
add
sbb
loopne
ss
xchg
scas
sub
mov
mov
dec
mov
pop
cld
addb
adc
add
mov
les
mov
mov
out
add
outsb
push
or
sahf
jbe
pusha
mov
test
scas
and
add
test
add
inc
lds
daa
mov
or
adc
and
addb
jbe
faddl
mov
out
mov
in
xchg
push
sub
add
mov
fidivrs
outsb
test
das
sbb
push
add
aam
out
orb
xor
orb
add
dec
ljmp
outsl
aaa
mov
dec
test
add
cmpb
andb
pop
loop
andl
inc
xorb
xchg
sbb
push
test
jmp
pop
arpl
in
cmpb
cmpl
xorw
inc
sub
ljmp
and
mov
rcr
rcll
inc
pop
ret
test
sub
gs
fdivrl
adc
test
loopne
pop
inc
test
fcomip
pop
xor
add
mov
jbe
inc
imul
inc
arpl
les
xchg
mov
mov
shl
fdivrs
add
mov
pop
ljmp
jp
hlt
mov
ret
arpl
stos
cmp
mov
inc
aaa
push
push
es
shlb
incl
inc
clts
arpl
in
pop
orb
fbstp
out
inc
pusha
ret
sub
aaa
or
mov
faddp
popa
sbb
popa
lods
mov
imul
xor
adc
xchg
stos
add
pushl
arpl
sub
add
jecxz
sbb
and
inc
or
rolb
mov
test
mov
inc
cmp
mov
ret
hlt
inc
mov
scas
gs
add
pusha
or
mov
scas
loopne
cmp
icebp
push
jge
mov
jb
ljmp
rolb
jmp
in
lret
mov
cmpsb
addb
pop
mov
and
adc
xlat
and
add
adc
add
in
xor
mov
add
add
in
sbb
xchg
mov
push
add
test
mov
lods
shrb
jecxz
in
js
dec
mov
mov
pop
pusha
jno
mov
mov
and
jg
test
jns
subb
popa
pop
cmpb
test
mov
or
jns
adc
inc
and
or
mov
rolb
lods
mov
es
rcrb
dec
mov
ljmp
loopne
inc
push
push
addb
xor
or
ret
adc
or
pop
loopne
js
xor
pop
adc
dec
dec
pop
mov
cmpsb
jae
outsb
dec
dec
fwait
add
pushl
dec
or
pop
and
out
mov
cld
adc
lods
and
add
inc
cld
in
sarl
or
and
lahf
popa
lods
push
cmp
lret
in
jnp
daa
into
bound
add
jo
mov
shrl
out
inc
add
pop
add
jg
les
fiadds
add
sub
lcall
mov
mov
xor
mov
pop
mov
jg
mov
rorb
cs
mov
movsb
cs
mov
xor
cmp
inc
test
sub
lcall
inc
sub
ds
mov
jmp
or
dec
gs
test
and
mov
gs
xchg
xor
mov
inc
std
add
cld
and
and
pusha
cmp
addr16
decl
push
or
loope
das
in
lcall
call
lods
sub
and
and
inc
fnstsw
test
cmc
cmp
and
mov
cld
decl
std
pushf
mov
push
loopne
stos
adc
sub
out
add
mov
pop
sub
mov
add
inc
movsl
stos
fsubrs
push
adc
lock
aam
push
inc
add
cld
das
xchg
in
lods
and
ljmp
arpl
ljmp
cmp
xchg
mov
int
shll
out
clc
dec
adc
mov
and
rolb
or
pop
cmp
mov
add
add
data16
sub
stos
jno
adc
outsb
shrb
ljmp
jo
pop
add
rcll
sti
outsb
sbb
xorb
or
ljmp
or
pop
icebp
in
std
stos
shrb
mov
loop
push
or
push
incl
push
sub
test
dec
stos
add
cmp
in
sub
dec
or
mov
push
cmc
cmpsb
xor
jno
popa
sbb
adc
sub
incl
push
das
cmpsb
stos
push
frstor
fwait
fwait
call
mov
xchg
insb
sub
dec
xchg
dec
cmpsb
or
jo
push
or
out
xchg
es
pusha
cmp
push
frstor
sbbb
mov
ret
jo
and
push
mov
lcall
push
bound
sub
push
and
push
adc
fldt
and
or
add
jo
and
xchg
popa
jp
jb
cmpl
push
dec
jnp
mov
rcl
call
into
mov
sbb
dec
adc
inc
andb
mov
aam
push
hlt
push
popa
nop
dec
pop
flds
icebp
xchg
lcall
mov
inc
orb
loopne
inc
add
push
subl
cwtl
outsl
js
in
hlt
xor
scas
mov
mov
stos
mov
push
bound
in
cmp
or
xchg
aad
mov
cli
add
dec
mov
or
or
mov
push
roll
lods
inc
pop
test
push
stos
hlt
ljmp
fadd
push
mov
push
and
push
push
xchg
subl
aaa
mov
mov
push
sar
dec
mov
fdiv
add
ret
inc
add
add
jg
and
mov
movb
xchg
push
dec
mov
xchg
scas
loopne
mov
push
mov
add
mov
into
mov
lock
mov
push
adc
push
mov
dec
mov
and
push
mov
adc
push
pushf
push
sti
mov
xchg
andb
sub
jo
dec
dec
in
mov
sti
jg
or
pop
xlat
inc
add
stos
push
or
jno
xchg
jp
imul
push
or
cs
imul
push
pop
aad
rcrb
push
test
es
push
in
xchg
repnz
aam
or
out
rolb
push
or
mov
sbb
cmpsb
mov
lods
xchg
jo
sub
cltd
adc
sub
outsl
fwait
or
pop
mov
adc
decl
inc
arpl
mov
and
xlat
stos
fwait
push
std
xchg
arpl
and
aaa
pusha
je
inc
jmp
xor
out
or
dec
mov
or
fildl
and
dec
xchg
bound
mov
jl
inc
pop
orb
cltd
in
into
sbb
xor
inc
mov
or
test
imul
in
js
outsl
shrl
outsl
xor
push
cli
dec
jl
add
jae
sbb
xchg
loope
cmpsb
shrb
add
dec
add
imul
jmp
add
pop
hlt
add
sub
insb
pusha
add
out
es
or
mov
sub
mov
cmpsl
or
loope
cmpsb
jg
popa
call
mov
cmpsb
push
push
orb
lahf
andb
push
mov
test
cmpsl
lock
mov
ret
cld
ret
add
popf
pop
in
adc
jle
aas
inc
sub
shl
xor
cltd
mov
imul
loopne
mov
push
sbb
lods
mov
lcall
pop
stos
xchg
or
jle
in
inc
pop
push
lahf
scas
add
pop
lock
adc
push
inc
pop
xchg
add
aad
into
test
and
icebp
add
lds
mov
mov
fistl
addb
fnstenv
pop
pusha
add
pop
test
divb
xor
lahf
int
out
ret
add
pop
push
mov
in
mov
jg
or
mov
add
dec
andb
clc
or
lock
adc
add
mov
or
adc
sub
std
dec
icebp
test
dec
adc
loope
inc
add
pop
jg
lock
inc
or
loopne
aam
repnz
jmp
dec
imul
push
cltd
or
push
divb
add
std
pop
pop
add
movsl
sub
cmpsb
mov
scas
lcall
push
fs
jno
pop
mov
call
in
add
sbb
jmp
enter
mov
adc
jg
pop
mov
pusha
faddl
jo
and
push
mov
dec
add
adc
xlat
stos
sbb
pop
inc
call
shlb
jecxz
mov
in
sarb
cmp
sub
das
nop
icebp
add
lods
sbb
and
and
nop
negb
fldl
jno
adc
mov
or
mov
jo
sub
add
push
in
or
pop
inc
or
andb
jo
mov
dec
fsubrl
fdivrl
into
sub
cltd
push
ljmp
pop
push
and
rorb
pop
mov
dec
out
or
leave
xchg
dec
and
lock
add
mov
or
pusha
in
jg
decl
sbb
in
ror
mov
movl
lcall
mov
xor
lods
and
adc
lcall
loopne
adc
orl
fldl
and
add
or
add
mov
or
and
pop
stos
push
lods
ss
add
stos
xor
xorb
or
mov
xchg
add
mov
pop
mov
push
mov
addb
bound
inc
es
aas
clc
cmp
stc
pop
add
add
faddl
outsl
sub
adc
jns
adc
pop
dec
addb
add
in
push
or
aaa
jle
rolb
dec
ljmp
lcall
sbb
lods
mov
daa
fimuls
dec
aam
sub
and
mov
js
or
mov
inc
inc
mov
dec
jo
fucomp
mov
dec
jg
pop
fisttps
loopne
cmp
or
orl
mov
add
lock
js
ljmp
addl
mov
dec
cwtl
cs
xor
dec
sbb
incl
and
inc
inc
xchg
mov
mov
mov
sbb
aas
xchg
mov
sbb
adc
jg
mov
subb
imul
mov
mov
mov
xor
add
xchg
or
pop
adc
sahf
xor
rclb
mov
stos
push
mov
fwait
add
call
dec
mov
std
or
xorb
pop
sub
inc
and
dec
sub
mov
mov
rolb
ret
gs
xchg
jne
add
imul
imul
jmp
sub
jae
orb
or
lea
add
pop
mov
xor
test
ret
xor
or
and
test
xor
add
mov
nop
push
push
adc
or
dec
adc
aam
rclb
or
jne
and
stos
inc
or
stos
and
rorb
and
incl
or
lcall
lcall
in
push
dec
rcrl
xchg
add
push
mov
in
or
xchg
mov
js
lahf
notb
lock
inc
or
mov
add
cmpsb
loop
test
push
mov
into
cmpsl
in
outsl
jp
filds
and
mov
addr16
push
xchg
and
ficoms
dec
addr16
in
idiv
daa
les
cmp
push
insl
inc
in
subb
or
or
push
fisttps
mov
pop
mov
jmpw
sub
push
rclb
push
rclb
loopne
cmp
dec
or
in
mov
int3
push
testb
and
push
push
push
ret
sbb
sbb
insb
push
fwait
sub
std
imul
add
shl
popa
pop
add
out
test
stc
stos
loopne
popa
popf
mov
mov
in
clc
pop
sbbb
lahf
cmc
add
push
sbbb
inc
adc
xor
andb
jo
pop
dec
lret
fs
cmp
rcrl
mov
dec
lock
icebp
fwait
addb
cltd
add
or
movsl
dec
add
or
sub
in
and
push
and
xor
dec
sub
push
lcall
xchg
stos
sbb
inc
fisttpll
pusha
add
add
sub
mov
fisubl
and
cmp
leave
insb
insb
adc
rcrl
jl
jmp
pop
int3
ret
insl
fnstsw
pusha
add
push
fdivrl
or
das
dec
mov
aad
insb
pusha
add
dec
xchg
mov
mov
aad
out
push
mov
mov
or
pushl
cld
in
mov
jmp
fs
and
add
mov
fdivrl
fidivs
js
mov
push
or
push
push
add
sbb
loopne
addb
dec
inc
test
push
ljmp
and
fdiv
scas
cld
or
dec
andl
and
sbb
shrb
in
add
bound
add
cltd
test
dec
mov
pop
pop
test
sub
and
adc
cmpb
cs
popa
cmp
scas
push
test
outsl
dec
adcb
xor
or
push
add
mov
dec
hlt
add
outsl
push
loop
mov
emms
dec
inc
and
stc
add
dec
fbld
sbb
add
lods
dec
sub
and
sub
das
in
incl
push
dec
ds
cs
insb
or
fdivl
sar
decl
arpl
out
cmp
xor
mov
inc
test
pop
call
lock
xor
sub
and
sub
xchg
ret
and
jg
ja
add
mov
push
mov
add
outsl
push
testb
insb
dec
jg
adc
flds
jo
or
scas
jnp
rolb
dec
xor
lcall
dec
lret
pop
faddp
pop
pop
lret
dec
add
dec
add
jg
inc
add
push
pop
push
add
mov
inc
jne
xor
adc
ljmp
sub
mov
xor
fistl
add
aaa
xchg
movsl
fbld
sbb
xchg
cltd
jp
cmc
and
ss
pop
hlt
mov
add
push
xlat
hlt
pusha
add
and
jp
mov
bound
mov
xlat
scas
shlb
sahf
mov
fs
clc
call
xchg
adc
out
mov
ficoms
dec
mov
mov
push
aam
sub
jp
xchg
xchg
nop
push
ret
cmp
les
jo
pop
pop
int3
xchg
mov
ljmp
imulb
cmp
dec
push
rorl
add
shlb
icebp
add
xlat
adc
loope
or
dec
orl
les
mov
xlat
es
sbb
rcr
test
add
int3
ljmp
incb
cmpl
add
jmp
jmp
xor
sbb
loope
xor
in
dec
mov
adc
mov
sub
fcompl
pop
pop
jo
stos
sub
prefetch
pop
sbb
or
addb
dec
pop
jne
scas
sbb
add
add
adc
mov
pop
ss
mov
rorl
jmp
js
pop
scas
daa
push
sub
add
bound
inc
and
jg
jbe
adc
adc
dec
jno
scas
push
aaa
mov
adc
push
adc
loope
add
push
xor
add
outsb
xlat
std
scas
dec
pop
mov
xor
insl
and
pop
xor
jge
xor
pop
ss
loopne
fs
sbb
sub
sub
xor
cs
sub
cmpsb
adc
cmpsl
rol
das
fisubs
pop
incl
lods
and
pop
mov
xor
dec
dec
xor
sub
mov
cmpsb
xchg
pop
sbb
jp
mov
js
lahf
xor
pop
and
fisubrs
dec
sub
movl
push
jo
movsl
dec
stos
ljmp
xor
mov
mov
shll
inc
je
mov
mov
imulb
adc
or
cmpsl
loopne
or
jg
leave
cli
sahf
lcall
mov
add
andb
add
push
mov
mov
test
and
imul
test
jb
push
dec
mov
nop
add
repz
dec
push
push
imul
movsb
cltd
in
cmpsb
pop
loopne
mov
enter
push
pusha
dec
or
or
add
push
imul
fisubrl
adc
mov
or
in
xlat
or
mov
and
incl
cmp
pop
mov
mov
mov
jg
lock
push
ljmp
dec
out
adc
pop
xorb
push
and
sub
jp
dec
xchg
inc
pop
mov
xchg
lahf
adc
dec
mov
sub
lock
dec
sbb
cmpsl
hlt
decl
outsl
sbb
xor
data16
test
adc
roll
ret
repnz
loop
pop
ret
fs
pop
sub
and
add
or
dec
and
and
icebp
les
xor
and
and
add
mov
daa
icebp
mov
sbb
xchg
sub
add
pop
dec
jae
jbe
dec
in
ja
mov
pop
and
jnp
and
into
hlt
nop
mov
adc
insl
aad
sbb
add
fildl
mov
push
or
leave
clc
mov
mov
add
adc
xor
add
outsl
jp
cmp
sub
or
inc
bound
enter
inc
dec
pushf
mov
mov
cmpsb
pop
cmp
and
jo
push
xor
sub
ljmp
subb
pop
sub
sub
add
movsb
les
out
jb
shrb
stos
icebp
shlb
cmp
inc
pop
ljmp
or
xchg
add
lock
mov
fs
mov
data16
inc
inc
jg
xchg
xchg
clc
sbb
andl
mov
inc
sub
xor
push
or
xchg
into
test
or
outsb
dec
std
call
or
sahf
mov
add
fidivs
pop
pop
or
adc
sub
adc
add
filds
jl
dec
push
and
sub
and
icebp
add
dec
push
or
rolb
xchg
pop
int3
or
cli
lods
sub
sub
adc
cmp
cmp
addb
add
in
sbb
mov
add
mov
aad
sub
loop
cmp
mov
cmp
popa
and
inc
ss
jns
adcb
lods
push
jne
call
dec
das
xor
and
ljmp
sub
popf
rclb
ss
out
jb
sub
xor
pop
sub
jp
mov
add
jle
mov
add
add
jle
cli
aas
add
adc
pop
dec
daa
inc
sbb
hlt
inc
inc
xchg
jle
mov
subb
sub
push
inc
ret
pop
out
out
sahf
ret
mov
pop
pop
or
sahf
adc
mov
jecxz
push
cmc
shlb
xchg
adc
test
mov
sub
ljmp
je
inc
sub
movsl
ret
jae
cs
xlat
jle
clc
in
pushl
ljmp
inc
inc
inc
and
dec
test
pop
inc
fdivs
je
scas
pop
jle
ds
cmp
cld
push
xchg
inc
addb
inc
sarb
ljmp
push
movsb
pop
ret
decl
mov
cmpsl
adcb
shll
xor
or
inc
cmp
add
lock
or
dec
insb
sub
sub
add
das
jno
loopne
cli
divb
cmpsb
aaa
push
js
ljmp
mov
add
mov
dec
bound
adc
or
imul
in
imul
pop
or
mov
mov
or
sbb
add
fisubs
pop
loope
shlb
and
adc
mov
dec
pop
hlt
jbe
lret
adc
sub
adc
aaa
jg
stos
add
or
les
add
shll
pop
or
mov
and
inc
add
dec
add
jg
movsl
or
and
or
cld
inc
data16
das
aas
nop
enter
and
push
arpl
mov
add
jb
es
cmp
jo
and
add
fsubs
repnz
rorl
mov
xlat
scas
icebp
or
inc
dec
test
pusha
fsubrl
imulb
decl
out
adcb
out
push
jmp
inc
inc
xchg
cmpsb
loopne
or
inc
jp
xor
or
dec
jo
add
test
dec
jnp
lds
mov
in
xor
add
cmp
add
sbb
xchg
lcall
and
cmpsb
es
add
and
jge
or
scas
les
pop
mov
pushf
orl
mov
incl
mov
test
inc
fwait
shlb
cmp
testb
je
pop
push
pop
jne
push
shlb
jbe
jg
and
jo
inc
push
adc
iret
mov
decl
enter
orb
xchg
pop
movsl
and
inc
add
push
mov
push
loopne
adc
and
das
mov
and
mov
nop
push
jge
fiadds
popa
std
push
inc
mov
in
cld
xchg
out
mov
mov
add
add
mov
sbb
mov
jo
adc
ljmp
and
lods
and
pop
xchg
aad
scas
aas
dec
or
into
es
inc
pop
lret
pop
add
aam
sub
sarl
sub
enter
push
pushf
xor
sub
jp
sub
adc
dec
rcll
insl
add
orb
repz
dec
xlat
mov
dec
cmc
dec
addb
pop
push
roll
add
xchg
mov
mov
fdiv
insl
sti
sar
xor
push
sbb
mov
pop
dec
jmp
add
sbb
jecxz
or
push
dec
in
xchg
push
inc
cmpsb
dec
adc
sub
or
push
adc
pop
adc
decl
sbb
insl
inc
jo
outsl
dec
xor
je
pop
hlt
dec
dec
aam
fcomip
fs
lods
mov
xor
stos
pusha
push
inc
or
add
imul
mov
inc
adc
dec
push
loop
sbb
add
and
sar
xor
add
cmp
imul
dec
lret
adc
dec
loop
add
push
imul
cmpsb
stc
push
lock
jo
pop
xor
adc
repz
negl
dec
push
xchg
insb
dec
sbb
xor
repz
sub
jnp
push
jae
stc
int3
push
stos
xor
xchg
push
pop
fisttpl
ljmp
xor
jbe
cmp
pop
icebp
pop
push
or
loope
pop
jge
adc
sbb
and
fcomp
dec
repz
pop
xor
push
jns
lock
mov
int
dec
pop
loop
cli
pop
aaa
nop
inc
sbbl
cmp
xchg
push
mov
add
jge
and
mov
out
cmpsl
jecxz
cmpsb
cmpsl
add
or
scas
add
jmp
test
sbb
mov
inc
adc
add
adcl
nop
les
xor
xor
inc
adc
dec
ret
in
lea
add
dec
dec
loop
add
add
shlb
xor
in
inc
xor
push
cli
push
xor
push
push
into
pop
clc
jle
mov
js
push
push
lock
xor
push
pop
jecxz
in
mov
push
push
xor
or
outsl
fwait
or
pusha
jb
add
add
add
bound
cmc
add
loop
and
adc
cmpsb
dec
ret
jbe
test
jns
pop
push
push
adc
jnp
jecxz
add
dec
add
jo
test
setle
and
scas
test
push
push
int
pushl
jge
push
add
and
ljmp
inc
imul
add
cmp
sub
popa
int
xor
mov
enter
pusha
fwait
adc
sub
add
sbb
subb
mov
mov
add
movsb
mov
and
xor
divb
jge
sbb
mov
add
loop
lods
lods
ret
and
cld
in
call
push
pop
rcrb
loop
sbb
lock
and
dec
aaa
dec
mov
push
add
pop
or
pop
lcall
jp
popf
pop
dec
xchg
ja
xchg
mov
lock
dec
mov
add
dec
cmpsb
lods
add
add
or
insl
xor
subl
push
out
dec
mov
ljmp
or
pop
mov
arpl
stos
out
add
test
cs
scas
xor
arpl
or
push
inc
mov
pop
lock
movb
into
aad
mov
popa
test
fldt
fidivl
stos
or
sbb
imul
push
dec
stos
xor
movsl
sub
nop
add
subb
add
xchg
sbb
adc
daa
notb
mov
jmp
aad
cmp
fistps
add
push
mov
fwait
insb
cwtl
lods
add
mov
mov
and
sahf
daa
arpl
hlt
mov
add
mov
and
daa
or
cmpsl
in
jecxz
adc
lds
stos
xlat
inc
pop
adcb
push
add
cld
add
or
lcall
inc
or
sbb
mov
add
lahf
pop
lock
mov
pop
adc
sub
out
adc
sub
out
push
dec
add
jg
enter
test
aaa
and
dec
scas
or
int
mov
in
js
decl
add
stos
push
sbb
movsl
fdivrs
push
js
enter
sbbb
imulb
pop
les
nop
push
sub
es
push
pop
cltd
push
jg
fimuls
mov
inc
mov
or
subb
or
adc
xor
adc
mov
inc
lods
cmpsb
popf
mov
and
cli
add
jo
push
or
test
bound
daa
lret
fs
push
mov
mov
mov
and
mov
adc
xchg
adc
sbb
cmp
pop
loopne
jb
xor
stos
sbb
push
or
out
xlat
and
test
or
push
inc
add
cmpsb
and
std
add
push
js
inc
sub
outsb
inc
add
xchg
xchg
test
mov
mov
inc
repz
add
dec
and
mov
or
out
xor
subl
loope
mov
or
stos
fbld
cwtl
adc
inc
or
scas
and
lcall
scas
mov
arpl
dec
mov
dec
adc
sub
jb
pop
pop
bound
cltd
out
cs
add
and
adcb
fists
push
pop
pop
loope
das
ret
loopne
mov
push
or
add
xchg
dec
mov
lds
xor
mov
cltd
pop
aad
sub
arpl
daa
out
dec
xlat
mov
dec
jle
clc
stos
mov
in
cwtl
daa
add
cltd
fildll
xor
sub
scas
dec
ret
cmp
pop
scas
out
fsubp
fwait
add
xchg
dec
mov
mov
xchg
sbbb
cmp
ja
pusha
inc
pop
dec
gs
add
sbb
sbb
xor
incl
add
daa
mov
mov
aad
inc
sbb
pop
cs
inc
pusha
ror
inc
adc
xor
push
andb
call
and
das
aaa
add
push
add
adc
mov
cltd
and
lcall
fmuls
mov
pop
and
and
insb
lcall
ret
or
shlb
pop
scas
xlat
addb
sahf
add
mov
sub
inc
stos
and
adc
out
fistps
stos
scas
mov
fwait
orl
add
or
cld
or
arpl
push
inc
add
add
movsl
cmc
jbe
arpl
outsb
aam
inc
add
mov
popa
and
and
imul
fisubrl
xor
pop
lock
dec
dec
mov
mov
mov
xchg
xor
mov
pop
lock
cmc
mov
add
xchg
sbb
out
icebp
push
aam
mov
dec
call
push
fwait
clc
add
test
cltd
loop
xlat
movsb
cmp
inc
lahf
mov
pop
pushf
inc
adcb
jl
add
mov
cmp
mov
xchg
sub
inc
add
mov
sbb
int3
fs
fbstp
enter
mov
mov
jb
clc
sub
outsb
jbe
jnp
shr
orb
push
mov
sbb
scas
mov
ss
cltd
jp
ret
mov
inc
cltd
add
sub
push
sbb
inc
or
sti
pop
dec
das
clc
cmp
inc
arpl
popf
push
cld
pop
xor
xlat
mov
inc
addr16
stos
adcb
sbb
add
in
push
and
push
cwtl
andb
jmp
dec
mov
sub
mov
lcall
sub
mov
cmp
loopne
mov
subb
add
scas
pop
rclb
stos
add
inc
inc
push
add
mov
inc
aaa
mov
testl
insb
mov
or
call
or
add
lea
inc
and
rclb
push
test
pop
fwait
mov
pop
cmpsb
fiadds
jl
pop
adc
sub
rcrl
adc
mov
std
and
test
aaa
sbb
cli
adc
ja
add
and
lcall
std
add
dec
andb
inc
jae
pop
and
add
mov
xor
sub
fisubrl
out
mov
ss
repz
mov
pop
cli
cmp
lret
or
mov
sbb
add
enter
push
and
or
add
ret
sub
mov
adc
arpl
pop
inc
add
mov
add
jae
das
and
sbb
and
stos
loopne
pusha
cmp
insl
inc
imul
outsb
inc
add
add
addl
xchg
adcb
dec
aad
mov
mov
sub
pop
mov
add
adc
ret
inc
shl
outsb
test
test
out
inc
adc
add
add
stos
pop
dec
push
insb
adc
mov
and
add
jae
jp
inc
dec
add
pushl
rorl
loopne
and
mov
sbb
js
enter
fdivl
rol
sahf
shrb
and
mov
sub
adc
bound
aam
push
add
mov
sub
fsubrl
xor
mov
add
stos
sbb
scas
cmpsl
pop
and
push
pop
adcb
outsl
push
out
clc
cmp
loopne
pop
sbb
lret
adc
test
sub
or
jo
dec
sahf
xchg
xchg
outsl
clc
or
std
lods
xorb
cld
imul
cmp
or
jns
pusha
adc
incl
or
sbb
mov
mov
and
adc
push
sub
cmp
mov
xorb
nop
loop
mov
mov
add
mov
das
hlt
cmpsb
aam
dec
pop
cmpsb
and
pop
inc
sbb
loope
jp
or
loop
fisubrs
bound
xor
hlt
xchg
dec
add
fbld
or
pop
aad
loope
hlt
movsb
inc
sbb
inc
pop
inc
je
dec
sub
jmp
inc
inc
insl
hlt
repnz
adc
adc
push
push
outsb
and
hlt
sub
das
jg
xor
add
adc
sbb
out
dec
jno
fdivrs
dec
ret
dec
sub
and
pop
icebp
mov
and
dec
je
push
mov
fcmovu
lcall
pushf
lahf
mov
xor
dec
aas
add
xor
icebp
pushl
fisttpl
mov
shrl
scas
mov
cltd
or
iret
add
test
sahf
mov
and
clc
cmp
push
jae
mov
jae
inc
add
sti
sti
scas
pop
push
ss
test
push
push
cwtl
push
fiaddl
push
stc
shlb
test
icebp
sti
mov
xor
pop
leave
mov
mov
mov
sbb
fsubl
push
or
aas
std
fistps
and
std
bound
add
cmpsb
add
mov
mov
and
movsl
adc
js
push
and
mov
rolw
and
les
xchg
mov
push
inc
cmp
push
add
dec
pushw
mov
pusha
mov
rcll
ret
inc
and
cs
mov
enter
test
test
pusha
sub
outsl
lahf
lea
inc
icebp
or
cmpb
mov
repnz
ret
add
sub
add
mov
mov
xchg
scas
cli
xor
push
pushl
cmp
add
xchg
cs
mov
orl
aad
push
sub
cmpsl
sbb
mov
jecxz
lret
enter
mov
xchg
loopne
dec
push
lds
mov
enter
lock
loop
out
xchg
fwait
jb
or
push
sub
or
adc
or
inc
rolb
cmpsb
filds
pusha
pop
add
icebp
je
xor
inc
pushl
stos
stos
or
ret
dec
mov
adc
or
rcrb
pop
decl
sub
inc
iret
jo
data16
mov
aaa
sbb
fadds
inc
mov
adc
xor
mov
dec
ja
fwait
sub
push
xchg
popa
and
and
pop
sbb
add
and
inc
sarb
cwtl
inc
xchg
push
dec
int3
xchg
lock
sar
push
loop
adc
sub
orb
stos
xchg
mov
test
add
jg
cltd
and
add
add
xlat
js
pop
hlt
or
or
fdivs
and
scas
cltd
aam
sbb
pop
aam
inc
dec
and
xor
scas
mov
imul
jnp
sbbb
jg
lret
adc
dec
mov
cmc
inc
push
test
mov
xor
xchg
sar
push
loope
add
push
mov
aad
das
mov
sub
dec
add
pop
and
outsb
insb
clc
inc
repz
sbb
fwait
mov
ja
test
icebp
push
enter
inc
sub
mov
ljmp
sub
scas
enter
and
jo
mov
sbb
sbb
adc
mov
clc
dec
sbbb
mov
in
sahf
inc
add
sahf
clc
dec
cmp
inc
sar
mov
mov
sbbb
std
mov
xchg
das
and
pop
repnz
jno
mov
push
or
jg
std
mov
mov
and
das
sub
push
add
data16
outsl
fbld
das
xor
push
mov
or
dec
nop
mov
sub
mov
je
scas
pusha
jg
fisubrs
nop
push
pop
and
inc
mov
and
add
nop
adc
pop
push
hlt
add
rorl
lcall
add
test
mov
or
testb
mov
mov
cli
mov
hlt
sbb
cli
or
jb
and
stos
aad
dec
ljmp
push
jb
sbbb
add
lods
push
or
inc
test
mov
les
or
mov
or
cmpb
adc
mov
gs
call
sub
mov
test
jbe
call
in
les
ret
sahf
sub
enter
mov
cld
pop
sub
fcom
inc
or
sbb
mov
and
pop
loopne
dec
inc
rolb
adc
and
ljmp
jns
lret
daa
icebp
pushf
mov
shrl
andb
aas
jp
in
sbb
lds
add
dec
mov
jo
mov
ljmp
nop
lcall
mov
lock
mov
sbb
cmp
mov
mov
mov
out
icebp
mov
lods
xchg
xor
mov
xor
adcb
jg
mov
cmpsl
dec
sbb
les
mov
jmp
add
cmp
jge
xchg
and
rclb
mov
dec
xor
mov
fs
outsb
push
mulb
adc
xor
add
sarb
rolb
dec
sub
enter
fisubl
dec
cmp
add
repnz
out
mov
loope
dec
lock
sub
js
jg
ror
pushf
movsl
inc
dec
mov
add
dec
xchg
add
cs
sub
jp
or
dec
adc
cmp
mov
test
push
push
mov
adc
movaps
add
push
dec
and
push
lock
test
sub
mov
aaa
test
loope
push
out
and
or
push
pusha
test
lea
inc
dec
and
add
dec
cld
and
mov
fsubl
gs
jg
pusha
scas
out
jge
icebp
and
and
adc
lret
rorb
fists
sahf
sbb
ss
fmull
jbe
xor
ljmp
out
adc
out
inc
add
test
sbbb
sbb
add
and
bound
jo
xchg
bswap
repnz
xor
test
cmc
mov
psadbw
fimull
add
mov
ljmp
loop
dec
xor
and
dec
call
push
lock
stos
hlt
das
xlat
mov
dec
xchg
push
adc
add
pop
mov
or
repnz
imul
stc
fmul
cld
inc
and
imul
pop
enter
mov
sub
pop
std
mov
xor
mov
sub
jg
adc
jecxz
in
xlat
dec
daa
outsb
movsl
jmp
jg
cmp
fadds
mov
into
mov
js
sub
call
rolb
ds
orb
fisttps
scas
mov
xor
push
lods
in
fwait
mov
push
mov
mov
std
and
pop
inc
cmp
adcl
es
mov
mov
add
clc
pop
clc
imul
fwait
imul
sbb
imul
lcall
push
pop
xlat
mov
sub
mov
subl
and
dec
mov
adc
repnz
mov
imul
push
fidivl
mov
sbb
insb
adc
repnz
mov
bound
insb
mov
sub
loopne
inc
hlt
cwtl
and
and
adc
pop
inc
loop
addb
rolb
add
rolb
mov
call
icebp
add
mov
mov
jmp
add
pusha
cmp
data16
decl
decb
adc
and
pop
dec
lret
nop
xor
loopne
xchg
adc
sarb
rclb
cmc
xchg
push
jp
mov
mov
mov
and
inc
xlat
or
aam
and
and
and
inc
cltd
pop
mov
mov
and
xor
pushf
dec
xchg
enter
add
test
push
mov
subb
movsb
sub
cmc
jl
stos
push
mov
adc
jg
or
fdivrs
mov
out
scas
mov
scas
add
add
stos
adc
add
in
mov
cmpsb
imul
jb
or
sbb
and
or
sti
xorb
add
or
adc
movsl
add
dec
pop
push
push
or
enter
ja
add
pop
add
push
lea
dec
scas
push
adc
int3
mov
push
dec
push
push
jg
push
push
nop
and
dec
cmpsl
and
and
push
jmp
cmpsb
adcl
add
add
add
pop
inc
and
cld
sub
or
sub
inc
mov
add
bound
add
ss
movsb
mov
ficoms
pop
cli
push
cld
mov
lret
scas
pushf
addb
sbb
incl
push
adc
add
mov
es
mov
popl
cld
in
mov
add
lahf
mov
data16
and
jo
sub
adc
jo
or
movsb
nop
jg
test
add
jbe
xorb
sbb
mov
incl
pop
push
or
cmp
cld
stc
outsl
subl
decb
lahf
push
icebp
push
andb
fistpll
sub
push
sub
shlb
push
addb
inc
in
push
cli
sbb
add
cmpsb
loopne
push
sarb
adc
add
dec
mov
js
and
add
adc
inc
mov
bound
pop
pop
movsb
push
jl
xorb
js
pop
fsubrs
icebp
inc
cmp
clc
jle
cmpl
mov
mov
sahf
mov
push
hlt
or
add
or
inc
xchg
mov
mov
jle
pop
mov
jp
bound
sbb
xchg
int3
lock
nop
fs
push
cwtl
lods
and
rolb
arpl
mov
sbb
fs
fs
dec
adc
cmpsl
add
mov
cmp
pop
mov
jae
mov
fsubrl
mov
test
das
add
lods
std
inc
push
call
add
xorb
add
pop
dec
adc
or
roll
xorb
cmpsb
mov
jbe
bound
mov
adc
in
inc
inc
mov
or
ss
pusha
shlb
mov
dec
icebp
rcrl
movsl
and
inc
cmp
icebp
inc
pushl
push
out
mov
ljmp
push
or
and
add
add
cmc
notl
jnp
ret
mov
push
cwtl
movsb
lcall
adc
les
not
mov
push
adc
push
testl
sub
out
inc
adc
and
pushf
adcb
rorb
sbb
je
scas
inc
popa
sub
js
mov
ds
out
mov
cmp
lcall
xchg
or
dec
and
and
xor
mov
fcmovu
sub
ret
and
and
sahf
add
sti
ljmp
and
loopne
push
xchg
ret
add
addl
add
cmp
shrb
ljmp
test
jo
dec
rolb
jmp
and
imul
add
push
addr16
lods
ljmp
pop
loop
cld
addb
pop
popa
roll
pop
cmc
rorb
mov
notb
fimull
add
mov
clc
mov
inc
inc
push
cs
addl
in
shll
loop
mov
dec
sub
fwait
add
fcmove
mov
dec
or
daa
add
lahf
mov
movsb
mov
jae
add
or
dec
dec
and
and
mov
add
fildl
jo
mov
subl
and
cmpsb
inc
pushf
jl
aam
sub
in
jmp
mov
adc
add
jecxz
stos
in
rolb
inc
dec
mov
movsb
das
lock
nop
icebp
inc
divl
test
sbbb
ror
jmp
into
out
sbb
or
and
jge
xchg
push
addb
sub
test
das
cs
push
jnp
pusha
sbb
pop
xlat
adc
mov
pop
clc
or
mov
inc
sub
or
inc
out
xor
add
lds
sub
adc
cmpb
mov
movsl
xor
adc
inc
push
jmp
aaa
add
dec
inc
and
add
ljmp
imul
cmpsb
inc
push
roll
sbb
loope
lock
cltd
gs
movb
cltd
imul
push
dec
mov
jp
mov
mov
aaa
sub
and
mov
cmpsb
lods
out
data16
int
pop
adc
add
fisttps
data16
lock
dec
xchg
push
add
xor
dec
push
adc
sbb
out
push
adc
shrb
add
popa
outsb
add
mov
test
inc
pop
ret
or
gs
popa
add
mov
add
add
daa
into
and
and
cmpl
test
cmpsl
andl
pop
incl
fwait
das
popa
add
or
rorb
ret
add
mov
enter
jmp
dec
add
fcomip
incl
xor
mov
scas
add
xchg
dec
mov
adc
cmpsl
push
test
mov
fs
mov
jno
in
popa
pop
cmp
xor
das
stos
pop
xchg
stc
nop
sbb
lock
bound
mov
mov
stos
or
sbb
add
movsb
sbb
pop
loopne
adc
fwait
out
jbe
jle
out
aam
adc
jl
sub
mov
adc
insb
push
add
out
das
jmp
les
xchg
pop
scas
lock
lea
lods
xchg
add
pop
cli
jg
ljmp
adc
ret
mov
mov
add
and
adc
add
repnz
add
dec
addr16
shlb
mov
std
in
push
add
into
loopne
icebp
adc
ret
inc
and
cltd
push
push
mul
shr
mov
out
cmp
and
stc
sub
mov
mov
scas
add
mov
and
outsb
inc
xchg
pop
loopne
fldt
jne
nop
cltd
xchg
sub
cmp
jl
stos
and
adc
sbb
lret
bound
lcall
scas
call
test
add
pushf
mov
xchg
scas
mov
test
scas
xor
add
rorb
inc
add
jb
sub
out
add
mov
dec
mov
pop
icebp
xchg
mov
xchg
or
insb
add
mov
adc
aas
scas
sub
xchg
xchg
mov
add
jno
or
aam
push
add
lea
dec
fwait
je
add
cmp
popa
add
pop
push
insl
or
call
add
add
add
cli
cs
popf
sub
std
mov
and
inc
pshufw
sub
push
fmuls
mov
mov
add
popa
push
sub
ret
push
sbb
roll
lods
pop
mov
add
inc
adc
mov
sbb
xor
stos
das
fisubl
push
or
mov
adcb
sbb
rcrb
add
negl
lods
mov
popa
sbb
fadds
cltd
arpl
mov
loop
lds
lods
repz
pop
loopne
mov
push
test
add
loopne
mov
sub
dec
mov
add
xor
xor
push
lods
xlat
inc
push
sbb
jmp
pushl
ret
or
sbb
lock
xor
fucomi
push
dec
adc
scas
sub
popa
add
xchg
add
loope
enter
inc
add
sbb
mov
pop
data16
adc
inc
int3
mov
add
sub
dec
push
inc
ds
jno
dec
sti
mov
push
adc
mov
ljmp
or
js
dec
mov
and
xchg
cld
mov
adc
stos
push
push
in
adcb
xchg
loop
push
arpl
clc
fbstp
jno
fmull
push
lods
add
inc
pop
in
jp
xor
mov
mov
insl
hlt
or
jo
outsb
aaa
cld
sbb
push
mov
xorl
fcomip
out
xchg
lock
or
loopne
andb
adcb
sub
cltd
out
roll
fists
adc
lods
mov
gs
adc
jg
in
cmpsb
addl
xlat
addb
adcb
pop
add
mov
fiaddl
push
lret
add
nop
or
pop
lcall
jp
or
jg
ljmp
or
adc
xchg
add
in
xchg
or
fwait
or
and
pop
or
xchg
or
add
mov
insb
push
xlat
mov
cld
push
cli
fstl
sbb
xor
push
mov
xchg
insl
inc
mov
adc
lcall
and
xlat
js
sbb
mov
or
mov
pop
mov
adc
dec
sub
or
and
sub
ljmp
sub
jl
lcall
lcall
pushl
add
pusha
and
xlat
test
loopne
push
imul
dec
jg
nop
add
xchg
ret
mov
dec
loopne
mov
or
mov
fwait
mov
lock
rorb
cmp
or
cwtl
loop
mov
loop
xchg
ror
lret
cmp
xor
loop
shrb
call
mov
add
xlat
mov
fbstp
int
push
cmp
xchg
movsl
or
nop
sub
mov
push
stos
mov
inc
push
push
push
add
push
add
das
xchg
enter
mov
xchg
repz
std
test
adc
mov
dec
fdivp
test
stos
enter
cmp
rcrb
rcr
lea
movl
dec
call
lret
cmpsl
mov
icebp
dec
cld
xchg
add
icebp
pop
lods
scas
jb
shlb
cld
repnz
adc
lock
dec
lods
and
aad
and
fildll
bound
shrb
jp
pop
imull
sahf
scas
rolb
jo
loope
pop
sub
inc
xchg
push
imul
inc
outsb
mov
or
mov
xor
loop
ljmp
add
add
cwtl
and
les
std
mov
pop
cld
lds
or
loop
std
add
push
jle
hlt
nop
and
incl
dec
cltd
add
sub
mov
jp
add
dec
add
pop
icebp
rclb
add
test
add
jle
inc
hlt
lret
orb
sbb
and
sub
mov
sub
add
mov
adc
adc
fcoml
push
pop
mov
push
pop
pop
invd
pop
pop
pop
mov
fdiv
das
clc
ficomps
cltd
pop
ror
add
loop
int
jb
inc
mov
int3
int3
nop
add
xor
inc
pop
fcmovu
fsubl
sub
pop
jno
pop
mov
clc
sahf
rclb
xchg
mov
pop
jl
scas
movsb
call
mov
jg
mov
mov
mov
add
loope,pt
fs
adc
cmpsb
shlb
outsb
add
mov
pop
rcr
jb
sar
add
cld
dec
sti
pop
add
pusha
in
sbb
push
xchg
add
add
icebp
pop
push
jae
add
cli
jnp
outsb
int
mov
sahf
xor
xor
mov
pusha
inc
xchg
sahf
mov
sbbb
test
add
pop
pop
jae
call
outsl
incl
in
lods
mov
jmp
pop
call
rcll
aaa
aas
outsb
orl
push
aaa
shrl
mov
jnp
faddl
xor
mov
das
clc
mov
mov
mov
adc
das
daa
push
adc
lcall
mov
jae
push
mov
fisubrl
inc
testl
iret
fwait
stc
and
mov
mov
mov
sub
ds
lock
push
cmp
xor
jmp
int3
sub
adc
iret
leave
movsb
add
xorb
mov
cld
pop
addl
push
filds
fiadds
mov
push
faddl
inc
xchg
cmp
incb
xchg
adcl
jge
inc
pop
cmpl
iret
stos
iret
clc
ljmp
andb
fdivrp
scas
or
cmp
in
sar
outsl
push
push
cltd
aam
in
jnp
add
enter
fs
xor
iret
aam
inc
js
rclb
addb
call
es
lret
andl
jne
cmpsb
loope
jnp
adc
decl
lds
pop
mov
shrb
mov
subb
dec
or
add
sbb
push
add
das
add
roll
cmp
mov
cmp
sub
push
pop
orb
outsl
cli
sbb
test
add
mov
rclb
jns
add
dec
adc
rorb
adc
dec
dec
add
jnp
test
adcb
cli
clc
xor
decb
mov
adc
mov
clc
sbb
cmp
xchg
push
cmp
roll
mov
pop
lock
cli
into
cmp
test
hlt
jno
sbb
and
mov
aaa
fldt
cmp
dec
scas
push
enter
push
inc
mov
sbb
xchg
add
and
imul
or
xchg
sbb
sarb
and
push
jg
cmpsb
pop
out
mov
or
jg
sbb
mov
call
add
jg
gs
insl
inc
into
stos
mov
mov
pop
icebp
mov
pop
add
inc
fildl
sbb
rolb
dec
int3
push
pushl
or
imul
pop
fs
mov
adc
dec
pop
sahf
loopne
rclb
sbb
mov
xchg
icebp
inc
shl
sbb
shll
ret
lods
or
sbb
or
sbb
add
jl
test
push
ds
jnp
gs
fs
das
orl
jb
dec
add
enter
dec
mov
movsl
push
push
push
ss
or
add
pusha
or
mov
pop
add
loop
movb
or
scas
jl
bound
or
pop
and
dec
and
lock
cmp
fsubs
mov
and
inc
sbb
adc
dec
sbb
rcrb
xchg
xchg
or
sbb
xchg
cs
ss
inc
das
jp
loopne
loopne
pop
test
pop
andl
cs
jg
pop
fsubrl
add
adc
cmp
orl
adcl
daa
shlb
pop
cld
inc
inc
add
and
outsb
shlb
mov
into
sbb
sbb
aas
adc
push
dec
pushf
push
inc
in
int3
cmc
pop
cli
ja
pop
dec
bound
loopne
movsb
pusha
mov
pop
shlb
js
push
inc
inc
insb
cmp
or
cli
mov
fbstp
std
decl
lock
add
inc
and
pop
adc
and
cli
add
pusha
push
lods
and
mov
cs
incl
and
dec
and
dec
shrb
sub
pop
lret
sbb
pushl
xchg
out
test
dec
sub
add
push
icebp
in
dec
push
and
setae
ja
inc
and
imul
cmc
je
movsb
add
inc
jb
fmull
adc
bound
jae
data16
inc
and
sbb
xchg
faddp
adc
je
sub
call
ret
sbb
daa
mov
add
cmp
rclb
in
and
mov
ss
inc
add
and
mov
push
push
inc
add
mov
shrl
or
dec
inc
das
mov
push
bound
je
push
mov
and
push
loopne
ljmp
rolb
add
push
xchg
fidivl
mov
sub
push
orl
in
mov
das
xchg
and
loope
fists
push
cmp
push
sbb
decl
in
add
loop
addb
push
mov
sbb
test
mov
jmp
rcrb
orb
add
cmp
negb
sahf
enter
and
adc
mov
pusha
xchg
adc
adc
aam
addl
stos
loopne
sbbb
sbb
scas
orb
dec
ss
add
xchg
or
cmc
rcrb
push
mov
icebp
add
lret
jmp
lcall
rcrb
sarb
sub
and
orb
pop
or
sbb
push
ficomps
cvtpi2ps
or
inc
adc
mov
or
imul
out
pusha
mov
jmp
das
and
mov
mov
or
fildll
dec
or
cwtl
or
or
push
rclb
mov
fnstsw
add
pop
outsl
jg
and
add
xchg
dec
add
add
xor
cs
dec
scas
testb
add
test
pushl
adc
mov
test
in
enter
mov
push
or
mov
aas
push
add
cmc
mov
outsb
add
sarb
mov
dec
lret
adc
xchg
sub
and
add
pop
call
add
lock
cmc
sub
pop
popl
lock
loop
add
out
enter
mov
lahf
push
jmp
inc
lock
clc
and
dec
shlb
jmp
ljmp
adc
jns
dec
push
xor
jbe
add
push
or
sbb
mov
push
add
push
outsl
shrb
adc
xlat
or
sub
ja
sub
lahf
sub
sub
mov
mov
jae
cmpsb
sub
outsb
jl
add
mov
lock
or
pop
pop
dec
inc
mov
inc
or
add
bound
fdivr
stc
mov
and
decl
rcrl
fisttps
js
cmpb
jo
mov
movsl
jno
stos
or
xlat
adc
mov
sbb
cltd
add
shlb
adc
add
sub
xchg
rol
gs
jp
or
push
test
add
mov
rcr
aam
shlb
mov
inc
add
nop
add
or
push
add
pushl
xor
popa
jo
hlt
cmc
or
es
enter
jne
and
xlat
add
enter
or
sub
out
inc
push
jle
bound
push
jge
push
dec
repnz
mov
inc
test
and
popa
pop
out
xchg
add
add
sbb
or
lock
mov
mov
das
jmp
out
adc
sub
mov
xchg
lahf
jno
test
mov
xchg
jle
dec
std
subb
out
pop
add
in
add
sti
lret
fmuls
sbbb
idivb
loopne
and
add
stos
ds
xor
dec
xchg
enter
mov
jg
inc
push
ret
or
add
lret
add
inc
es
les
rcll
cs
jo
mov
push
dec
and
or
test
ja
fsubs
dec
mov
gs
pop
mov
jo
lock
add
xchg
insb
jg
movsb
or
subb
addb
mov
das
clc
pushf
lods
sub
shlb
adc
mov
cmpb
bound
mov
dec
dec
icebp
inc
movl
lock
sbb
xchg
or
mov
add
mov
sub
sbb
rclb
mov
das
and
cmpsl
xchg
push
nop
push
dec
scas
add
mov
add
xchg
std
jg
arpl
xchg
inc
stos
sahf
les
addb
push
inc
rorb
test
dec
call
or
push
les
sbb
jecxz
nop
adc
es
dec
inc
loope
pop
pusha
out
push
aaa
mov
mov
jns
pop
je
jecxz
sbb
popa
dec
add
js
xlat
cmpsl
lock
push
or
push
and
cld
jg
sub
adc
xor
scas
adc
popa
out
mov
subb
dec
push
or
pusha
das
cli
push
xchg
sbb
test
cmp
jno
popa
cmpsb
loop
push
push
outsl
in
inc
add
jo
cmp
mov
sub
mov
mov
adc
dec
stos
and
ss
jo
pop
adc
das
testl
pop
sti
dec
adc
lods
popf
ret
stos
aas
pop
mov
jge
scas
push
insb
and
aad
xchg
add
addr16
xchg
sub
jb
jae
or
push
jno
push
pop
cmpsb
and
and
cmpsl
jg
mov
cmc
dec
ficoml
sti
push
or
cltd
shrb
sub
sub
sub
cmp
cmp
test
pop
loop
sub
mov
mov
repz
xchg
and
incb
movsl
lods
sarb
mov
pop
orb
fists
mov
pusha
fsubl
xchg
rclb
repz
add
loopne
scas
cli
scas
sub
cmc
push
fmuls
push
xor
push
xchg
nop
add
inc
out
lock
subb
mov
cli
push
or
add
sbb
pop
bound
scas
adc
arpl
addb
inc
or
jae
ret
fcmovnbe
out
icebp
xchg
cmc
lret
lret
dec
mov
pop
es
lret
jg
add
cs
icebp
pop
push
pop
lock
outsb
pushf
xor
rclb
cld
idiv
das
into
push
popa
add
lret
add
and
aam
dec
ss
push
or
rorl
test
cmpsb
mov
inc
lret
push
pusha
add
add
mov
inc
incl
xor
mov
or
add
mov
ljmp
xchg
add
and
mov
sarl
test
test
add
incl
sbb
dec
add
iret
mov
mov
mov
push
sub
popa
and
mov
aad
add
pop
xchg
push
pop
adc
adc
lea
xor
nop
js
adcl
stos
loop
popa
stos
ljmp
push
aam
out
pop
mov
scas
shlb
adc
dec
repz
jle
movsl
nop
xchg
mov
insb
xor
mov
clc
mov
dec
jbe
push
and
mov
mov
out
mov
test
or
xchg
sahf
loop
or
sub
hlt
cmp
pop
cld
sbb
call
es
shll
add
adcb
add
icebp
sub
xor
cmc
inc
dec
jne
adc
jle
jg
inc
pop
clc
bound
jecxz
sbb
inc
add
add
pushf
fwait
add
scas
dec
pop
and
fs
push
push
push
and
loop
popa
enter
jbe
sub
xchg
sbb
ljmp
lret
add
and
push
test
adc
xor
pop
cld
adcb
bound
or
sbb
add
out
or
mov
popa
cld
lock
push
addl
jp
nop
add
mov
mov
xchg
leave
sbbb
add
pop
rorb
push
cmp
subb
test
pop
xchg
mov
int3
pop
mov
fdivp
pop
test
adc
js
push
enter
add
cld
test
fidivrl
push
test
mov
inc
add
inc
sub
pop
xlat
subb
sbb
outsl
aas
dec
inc
mov
scas
sbb
subb
call
and
adc
adc
insb
inc
je
sub
scas
call
ficoml
sub
sahf
mov
mov
imull
out
mov
cld
sbbl
les
mov
and
push
push
mov
inc
pop
cmpsl
add
aad
pinsrw
sub
addl
js
mov
mov
cli
add
inc
shrl
ret
shlb
inc
sahf
and
test
test
addb
movsl
movsb
mov
sarb
test
decl
inc
cmc
int3
mov
dec
inc
add
scas
mov
jnp
add
cmpsb
adc
mov
and
sub
jp
cli
sbb
std
inc
imulb
lcall
fadds
jae
cmp
push
lcall
test
mov
les
xchg
inc
cwtl
out
jp
mov
mov
shlb
aad
pop
jmpw
mov
mov
jle
add
push
testb
mov
or
xor
mov
lea
es
add
lods
enter
add
and
push
in
ficoms
enter
cltd
xor
pop
pop
adc
mov
rorb
xor
dec
jge
cmp
mov
subl
rcrb
pop
cwtl
testl
fidivrl
jle
clc
ja
mov
or
pop
mov
add
rolb
xlat
rolb
fbstp
ret
or
out
sub
or
dec
pusha
or
clc
enter
subl
cmpb
inc
pop
in
mov
mov
mov
adc
jp
inc
test
inc
repz
pusha
mov
push
mov
and
scas
jge
out
adcl
adc
addb
fstpt
xchg
test
sahf
adc
fimuls
add
testl
int3
loopne
sub
fiadds
mov
movsl
xchg
jmp
mov
or
popa
ret
rclb
mov
jecxz
or
sub
and
call
stos
es
mov
nop
in
xchg
test
adc
movsb
shrb
cwtl
das
sahf
stos
adcl
lods
add
inc
fwait
mov
mov
popa
aaa
mov
lcall
xchg
lcall
popa
adc
push
loopne
add
push
inc
adc
out
inc
dec
and
dec
inc
hlt
inc
jne
je
mov
mov
xor
pop
jmp
icebp
cmp
sbb
pusha
xchg
out
rolb
pop
xchg
stos
xor
cld
dec
sbb
xchg
and
les
add
and
lret
lea
mov
outsb
sbb
add
jb
sbb
dec
xchg
inc
or
cmp
or
mov
push
or
das
scas
ljmp
bound
and
fdiv
popa
mov
dec
push
adc
outsb
add
add
sub
sarb
inc
xchg
pushl
add
add
add
insb
fildl
ret
adc
adc
add
xchg
leave
sbb
and
sbb
inc
pop
inc
adc
push
mov
jp
and
scas
sar
test
and
iret
mov
mov
add
push
cld
mov
and
pusha
ljmp
ljmp
pop
out
popf
and
movsl
pop
andb
loopne
mov
jo
sbb
in
shlb
into
lahf
add
sbb
das
cmp
dec
les
mov
sbb
dec
sub
scas
add
push
xor
sbbb
lock
xchg
add
push
push
mov
mov
add
add
inc
adc
push
cmp
pusha
xor
xor
andb
sbb
mov
sbb
das
adc
popa
adc
fwait
inc
or
and
xor
dec
jo
hlt
pop
mov
jbe
dec
es
rcrl
int
enter
mov
je
clc
stos
xchg
or
mov
or
testl
add
repnz
loope
repnz
lods
sbb
pusha
arpl
inc
push
mov
loop
fmull
or
lret
cmp
nop
in
call
inc
int3
add
or
out
rorb
in
leave
jle
push
movsl
sbb
aam
push
mov
cmp
add
xor
push
pushf
les
push
enter
roll
gs
or
inc
das
add
mov
test
mov
adc
xlat
adc
mov
sub
push
inc
ljmp
pop
hlt
stos
adcb
aaa
or
sbb
jle
sbb
dec
xchg
sbb
and
or
pop
xchg
pop
push
dec
or
and
pop
sbb
fbld
into
pop
dec
jae
nop
add
nop
push
stc
or
xorb
aam
or
mov
push
sbb
or
pushf
rorb
jno
loopne
cld
cmp
add
cmp
jo
dec
fwait
mov
test
lds
out
pop
and
mov
mov
and
push
dec
daa
bound
xlat
push
mov
int3
adc
cwtl
js
and
rorl
scas
cmp
out
cmp
sub
js
add
inc
xchg
imul
popa
rclb
lods
das
test
push
sub
lods
xor
or
out
jp
lret
jo
imulb
pop
mov
mov
push
movsb
test
sub
and
add
xchg
mov
cmp
pop
sub
dec
adc
mov
adcb
rcl
loop
and
xchg
cmpsb
adc
andb
xor
adc
addb
xchg
scas
scas
push
shlb
popa
add
jecxz
pop
mov
adc
rorl
mov
test
cmpsb
insl
xor
and
cmp
outsl
cli
lcall
arpl
aas
stos
rclb
ss
rol
sub
std
xchg
adc
mov
adc
mov
mov
loopne
push
or
jbe
mov
xor
out
adc
rcl
outsb
cmpsb
push
mov
add
pop
dec
jg
cltd
mov
lods
and
inc
js
cld
add
push
mov
scas
clc
or
test
scas
nop
push
mov
clc
callw
sbb
jecxz
out
stos
pop
or
push
mov
mov
notb
pop
into
mov
sahf
sahf
sub
mov
sub
sub
mov
outsl
add
adc
aad
fstl
mov
or
aam
mov
decl
nop
adc
pusha
inc
add
sbbb
dec
inc
popa
pop
or
fwait
divl
mov
idivl
mulb
mov
pop
cltd
push
push
dec
mov
jo
pop
jp
out
xorb
ss
mov
inc
dec
shlb
adc
cltd
out
sbb
loopne
loope
push
pop
lcall
in
jge
fildll
add
dec
ljmp
test
in
movsb
sahf
divb
push
or
pop
out
jo
inc
movsb
fwait
shrb
sub
mov
sbb
push
rolb
mov
or
movsb
inc
mov
push
insb
mov
add
mov
add
xlat
jbe
inc
or
andl
push
add
inc
dec
cmp
fistpl
incb
fistpll
mov
mov
lds
incb
in
or
adc
sbbb
shl
ja
addb
cmp
out
pop
sub
fwait
push
pop
bound
test
push
clc
mov
cmp
jg
mov
pop
test
mov
xchg
mov
mov
andb
jb
popa
fists
loope
push
xchg
mov
rcll
and
jbe
loopne
push
dec
mov
or
push
popf
adc
mov
mov
jecxz
out
jbe
subb
adc
push
mov
jb
jge
fcmovnu
jb
dec
pop
xor
inc
and
cmp
mov
xor
add
loop
nop
adc
cs
jg
push
imulb
mov
push
aad
mov
push
sbb
inc
shlb
mov
sub
pusha
rcl
loopne
mov
sbb
data16
pop
xchg
inc
cmpsb
call
ss
sbb
sbb
mov
and
dec
adcl
cltd
adc
adc
push
addl
push
push
call
sub
push
rcll
sbb
dec
or
xor
jle
decb
movsb
adc
rclb
cli
in
dec
addr16
and
rcrb
scas
sbb
sbbl
add
dec
in
movsl
add
pop
or
or
push
xor
adc
add
aaa
or
loop
sub
call
cwtl
inc
sbb
bound
inc
or
sub
lods
or
mov
mov
mov
je
pop
fldcw
push
out
jp
loop
pop
rolb
sbb
aaa
nop
jbe
scas
inc
cltd
cmp
mov
mov
xor
add
hlt
stos
mov
add
icebp
stos
lcall
mov
mov
push
fsubl
cmp
jno
rorb
lods
fisubl
imul
add
sub
add
out
scas
cmpsb
sub
movsl
sub
loopne
outsl
testl
mov
and
push
das
nop
pop
adc
data16
lds
mov
inc
enter
xlat
push
add
js
jg
nop
adc
mov
add
pop
dec
ds
xchg
jo
ja
subl
mov
pop
inc
mov
iret
jb
cltd
mov
jge
movsb
inc
fsts
pop
sub
dec
or
cli
dec
mov
or
lods
cs
imul
ror
xchg
pop
mov
jmp
mov
xchg
sarl
ficompl
sbb
cmp
outsl
aaa
push
in
cmp
pop
sbb
bound
pop
inc
xor
jno
jp
scas
test
outsb
and
cmpsb
adc
loopne
shlb
inc
inc
rolb
je
ret
mov
jne
icebp
filds
cmp
fwait
mov
mov
insl
cld
cwtl
ljmp
cs
fcmovnbe
ret
push
push
les
aas
ja
in
fwait
and
cmp
sbb
sbb
ret
adc
ljmp
or
dec
loopne
or
cmp
negb
pop
dec
test
cmp
out
mov
aaa
inc
push
loope
xchg
jp
aas
call
mov
cmp
jle
cmp
mov
into
push
cmp
sbb
cmp
cmp
enter
aaa
adc
pusha
int
push
xor
fstp
mov
add
pop
and
mov
add
outsl
fcomip
add
les
xchg
icebp
addb
mov
loopne
int
and
pop
and
or
cs
in
add
out
mov
sbb
cs
shlb
or
pop
mov
mov
mov
sbb
aaa
xor
repnz
dec
dec
push
lret
push
add
sbb
pop
pop
add
xor
add
popa
ss
arpl
cmpsl
sbbb
push
jb
mov
pop
xchg
test
or
lds
ljmp
fsubs
sbb
roll
mov
roll
dec
pop
pop
stos
decl
ss
jae
scas
insb
push
and
sub
xor
dec
mov
ror
add
repz
jp
data16
mov
add
dec
insb
clc
nop
pusha
movsl
subb
lods
std
adc
cmp
lods
leave
inc
xor
jb
or
inc
shlb
xlat
mov
inc
data16
xor
ror
mov
fstpl
int3
insl
and
aam
dec
incl
mov
and
stos
addb
add
xorb
add
add
arpl
sub
or
push
bound
push
mov
mov
or
out
jb
xor
jle
xchg
adc
std
add
dec
inc
negl
add
mov
aas
cld
movsl
sub
pop
mov
add
outsb
cmc
pusha
pop
add
mov
xlat
bound
andl
adcb
mov
sbb
movsb
or
ss
stos
stos
and
add
das
push
push
dec
xor
ret
add
pop
push
mov
push
fwait
add
add
push
outsb
add
push
dec
in
addb
mov
or
mov
xchg
dec
es
orb
mov
sbbb
adc
dec
rolb
add
addb
bound
loop
dec
jl
addb
addb
cltd
jle
cmc
rolb
in
mov
test
aaa
loope
jp
fwait
sahf
add
pop
test
add
dec
push
incb
jp
jmp
adc
xchg
fs
push
cmp
add
inc
jno
push
dec
pop
mov
add
push
dec
scas
pop
fsts
ss
mov
inc
sbb
add
dec
mov
add
push
aam
xor
movsb
test
test
add
in
and
mov
jle
dec
xorb
pop
dec
mov
inc
dec
xlat
mov
test
mov
xchg
xor
out
xchg
mov
std
daa
insb
push
ficoms
pop
and
pop
add
daa
push
add
stos
ret
es
push
pop
mov
mov
or
and
divb
adcb
mov
push
pop
cmpsb
test
push
mov
xchg
or
fiadds
mov
mov
adc
and
or
cmpsb
pop
push
pop
popa
sub
and
mov
cld
mov
loopne
inc
cmp
cmp
in
inc
addl
andl
and
shl
hlt
fdivp
jg
push
pusha
cmp
cmp
es
and
mov
fmuls
dec
inc
lock
dec
inc
push
cmp
push
mov
cli
jp
jg
andl
aad
sbb
inc
or
or
sub
mov
push
mov
pusha
mov
jge
addl
push
test
push
add
fwait
test
leave
mov
test
push
add
cmpsl
jb
cmp
rcrl
stos
sub
je
dec
scas
notb
mov
push
mov
fidivrl
cmpsb
and
out
loop
fisubl
outsl
incl
xchg
bound
adcb
arpl
jg
and
add
fidivrs
push
sub
mov
out
and
pop
cmp
sub
mov
loopne
and
test
std
ljmp
sub
sbb
subl
arpl
shl
in
xor
das
mov
dec
sbb
loope
out
popa
jo
xchg
mov
inc
jo
sub
andb
lahf
ss
scas
cmpsb
rolb
lods
and
add
aad
mov
mov
aam
adc
sbb
ficoms
das
and
inc
add
fsubp
dec
int
mov
call
mov
mov
add
mov
or
push
dec
mov
adc
mov
add
lods
popa
loop
jmp
add
adc
jb
and
sub
pusha
cld
stc
add
inc
xchg
and
repz
fs
out
loopne
push
xlat
cwtl
mov
jno
test
mov
dec
mov
sbb
xor
addb
jle
ret
rorb
add
repz
aas
and
sub
and
adc
mov
inc
jb
inc
adc
ret
enter
mov
xlat
inc
or
mov
add
movsb
fnsave
subb
je
sub
push
scas
pop
rcrb
inc
mov
outsb
cs
ds
or
xlat
popa
iret
sub
xlat
inc
mov
clc
out
adc
or
inc
or
lret
mov
mov
inc
mov
insb
adcb
or
inc
das
mov
lcall
shrb
mov
jmp
stos
adc
jbe
and
rorb
add
sbb
in
xchg
cli
test
popf
pusha
push
popa
and
mov
sbb
cmp
sbbl
push
bound
decl
xor
push
insb
sub
pop
icebp
sub
inc
add
inc
bound
aam
incl
add
jecxz
push
xor
sbb
sub
roll
mov
dec
in
jbe
push
dec
sbb
jl
push
xchg
nop
jb
xchg
xlat
stc
xor
rorb
test
incl
or
ret
add
mov
decb
imul
mov
lcall
sub
ss
add
xor
aam
adc
or
cmp
push
push
test
adc
and
push
cmp
mov
push
das
out
xchg
sub
pop
pop
stos
scas
add
mov
mov
fmull
sbb
scas
sub
and
les
pusha
or
push
insl
push
inc
cli
repnz
or
or
jmp
and
loope
das
ljmp
aaa
inc
dec
xorb
inc
cmpb
add
add
ljmp
dec
or
movsb
mov
dec
lock
call
loopne
pop
jb
jnp
xor
or
jo
ds
scas
repz
das
jecxz
icebp
dec
aam
push
mov
add
or
pop
or
pop
lods
out
shrb
rclb
adc
dec
or
inc
clc
push
dec
sti
lsl
or
ficoml
and
icebp
cld
dec
fwait
or
jo
push
lret
insb
bound
int3
adc
das
jb
add
push
ljmp
popf
xchg
push
ljmp
decl
xchg
das
adc
cmpsl
xchg
push
in
dec
mov
jp
adc
pop
add
add
cmpsb
jae
pop
arpl
cs
das
xchg
aam
sub
xchg
push
push
enter
adc
xor
sub
add
xchg
addb
nop
loopne
push
mov
pusha
jge
into
adc
and
push
pop
enter
dec
mov
icebp
lea
mov
movsl
cmp
loope
add
pusha
mov
and
mov
sub
mov
add
pop
fcmovu
lahf
dec
xor
dec
inc
test
inc
or
js
rcr
cmp
scas
xchg
nop
mov
lcall
add
sub
sub
xchg
sub
aad
dec
inc
arpl
or
push
pop
jo
rcl
call
das
cld
or
andl
cmpb
lods
sub
pop
movsb
es
sub
lods
and
xlat
mov
add
cli
insl
enter
out
adc
mov
mov
mov
orb
mov
and
pushf
loopne
xchg
mov
dec
mov
mov
push
xchg
test
dec
jbe
push
push
mov
pop
mov
add
mov
lock
cmp
in
test
pusha
sbbl
jp
or
mov
push
insb
cmpsl
inc
dec
xchg
mov
clc
movsl
mov
aam
ret
push
adc
add
mov
jp
xlat
mov
add
aam
clc
hlt
dec
subb
out
push
sbb
add
push
mov
nop
push
cltd
call
mov
out
and
inc
add
push
repz
mov
and
cmp
sbb
xchg
mov
testb
arpl
and
inc
jno
sub
sbb
push
sbb
push
and
popa
es
add
imul
mov
add
or
cwtl
ret
mov
add
sbb
fsubl
movsb
xor
fiadds
and
add
sbb
adc
add
inc
mov
cmp
ss
xor
xchg
pushf
dec
mov
inc
jo
sub
lret
mov
push
sbb
adc
in
push
push
inc
xor
xchg
outsl
nop
pop
hlt
pop
xchg
push
das
fistps
adc
dec
popa
jge
mov
and
adc
out
pop
xchg
std
dec
inc
and
arpl
push
cmpsl
pop
sub
sbb
jo
jge
mov
int
sub
loope
xchg
lock
xlat
pushl
testl
cmp
pop
sub
jg
xor
test
sbb
adc
jb
adc
push
stos
dec
pop
popa
ss
ljmp
pushl
or
cmpsb
mov
add
xchg
pop
and
sub
insb
fcoms
add
or
jmp
cmp
stos
or
ficoms
push
jno
aam
and
pusha
shrb
cs
inc
dec
sub
lea
mov
mov
adc
pusha
push
enter
lcall
sub
addr16
add
mov
jg
sub
jmp
loope
xor
pusha
inc
mov
pushl
sbb
xchg
adc
add
mov
inc
das
pop
or
sub
imul
loopne
in
xorb
xchg
adc
push
or
mov
sub
inc
push
stos
enter
inc
and
mov
mov
stos
cmc
xchg
inc
addl
lahf
mov
outsl
into
adc
push
cmp
pusha
or
daa
sub
xor
je
pop
push
stos
xor
shrb
push
add
pop
pop
mov
push
pusha
and
ljmp
jnp
lock
rorb
adc
loopne
inc
pop
loop
ret
daa
add
sub
filds
mov
daa
sub
add
jle
shrb
add
mov
adc
into
sub
repnz
lock
ljmp
icebp
pop
leave
pop
stos
add
pop
out
clc
xchg
mov
cmpsl
add
std
push
ret
aam
int3
pop
add
out
sub
fisttps
popa
push
es
roll
xor
xorl
xlat
mov
out
pop
and
insl
das
pop
xor
add
fcmovbe
sub
adc
mov
xchg
stos
cltd
adc
aaa
inc
jno
xor
sbb
mov
cmp
xchg
pop
loopne
call
push
xor
xor
mov
sbbl
rorb
and
mov
pop
xor
pop
mov
popl
cmp
push
inc
mov
ljmp
cmpsb
xchg
add
outsb
push
jl
cltd
in
inc
rcr
fiaddl
pop
cmpsb
and
sub
mov
add
adc
adcb
rcll
add
ret
mov
add
mov
enter
add
mov
js
sbbb
xor
clc
push
fs
dec
xchg
push
pop
mov
adc
sbbb
stos
hlt
inc
push
mov
dec
and
pop
add
fildll
add
popf
add
jnp
push
xor
push
stos
test
lock
xchg
ljmp
mov
mov
cmp
mov
jnp
addb
push
sbb
test
sub
jns
or
rcl
jb
or
rorb
je
inc
mov
push
and
aam
add
sbb
jmp
addb
dec
lods
or
inc
scas
fildl
fcomp
adc
cmpsb
or
sbb
stos
and
dec
fsubr
or
push
or
add
xor
cwtl
push
cltd
or
out
je
call
inc
inc
and
test
xlat
nop
fisubrs
fisubl
inc
insb
push
std
clc
xor
testb
mov
push
sub
enter
jp
addl
out
cmc
or
repnz
dec
mov
pop
or
das
and
xchg
movsl
dec
ss
mov
mov
lock
cmp
or
add
movsb
sbb
mov
aad
enter
push
mov
xchg
insl
push
adc
add
cmc
fbstp
clc
push
jl
dec
sbb
push
stos
das
inc
sti
sub
int
xchg
popa
lea
push
ljmp
rcrl
add
sbb
ja
and
outsb
add
testb
dec
fwait
push
aam
mov
cmp
or
pop
xlat
cmpsl
or
cmp
sarb
test
dec
fadds
cltd
mov
movsb
leave
imul
movb
aas
sbb
mov
ret
dec
mov
imul
andb
sub
and
or
lds
dec
xchg
addr16
mov
push
sub
shr
add
add
or
aad
fsubs
inc
int
loopne
les
and
dec
inc
pop
mov
out
sarb
scas
cli
fcmovnb
push
inc
sbb
mov
gs
ds
shrb
inc
xor
add
jbe
enter
lock
push
pop
rorb
arpl
push
mov
test
sbb
rol
popa
lds
pop
sub
push
mov
sti
push
movsb
xlat
mov
subw
les
sbbb
cmpsl
ret
mov
jbe
jbe
inc
addr16
adcl
dec
stos
adc
mov
dec
adc
in
add
test
jl
dec
bound
xchg
scas
pop
imul
shlb
inc
mov
mov
dec
pop
rcrl
inc
or
cmp
test
adc
cld
or
add
mov
sbb
loopne
sub
jg
shlb
inc
pop
enter
push
leave
or
add
jno
jbe
stos
xlat
cli
test
sbb
inc
inc
sbb
inc
sbb
add
sbb
adc
pop
das
loope
hlt
incl
inc
sbb
mov
push
bound
sub
or
dec
shlb
sti
loopne
js
into
pop
adc
sbb
sub
push
dec
cld
push
dec
mov
addb
aam
out
por
push
jp
add
addb
daa
adc
mov
hlt
loope
repz
jmp
push
enter
cmpsb
sahf
mov
xlat
mov
test
fidivs
jg
fnsave
mov
loopne
into
fisttps
loopne
adc
or
jmp
push
cmp
inc
test
pusha
cs
xchg
pusha
xchg
dec
add
push
mov
fdivrs
mov
mov
mov
in
cltd
shrl
test
or
aad
mov
mov
outsb
inc
mov
dec
lahf
pusha
add
scas
fmull
push
insl
or
pop
call
add
adc
rolb
insb
sub
fnsave
outsb
jbe
add
shlb
sti
dec
aaa
dec
adc
pusha
pop
lcall
add
sbb
insl
icebp
xchg
and
inc
or
dec
dec
popf
fdivr
imulb
rcrb
xchg
or
and
mov
es
rcrb
scas
leave
sbb
add
and
inc
inc
jb
pop
fiadds
adc
sbb
xor
dec
test
cmp
mov
movsb
sub
in
mov
xor
xchg
sbb
jnp
dec
fildl
pop
bound
adc
adc
mov
gs
idiv
test
push
dec
dec
loopne
add
stos
aam
movsb
add
ret
loop
push
gs
push
roll
dec
sub
xchg
das
sub
ficomps
inc
loopne
jnp
ror
stos
or
xor
mov
pop
loopne
ds
xlat
mov
add
inc
loop
mov
or
loopne
inc
or
loop
jle
mov
stos
cs
fcompl
data16
inc
add
movsl
add
lret
pusha
pop
inc
dec
jo
sahf
ret
adc
mov
pop
lock
add
inc
add
add
dec
sub
jno
push
mov
add
mov
jb
xor
pop
es
movsl
sahf
repz
repnz
cmp
arpl
push
and
outsl
nop
add
fs
pop
es
mov
rcr
mov
sbb
and
aad
enter
pusha
je
lods
out
mov
cltd
inc
sub
stos
loopne
ret
fimull
jl
test
jp
add
addl
or
andl
ljmp
adc
ss
sbb
pusha
xor
mov
push
pop
xor
sbb
inc
ljmp
insb
pusha
mov
rolb
xor
nop
mov
push
push
lcall
mov
jp
sahf
test
cli
adc
inc
loop
faddl
adcb
lods
ljmp
lods
push
mov
add
enter
cli
loope
push
loopne
xlat
or
nop
mov
or
enter
cmpl
iret
mov
xchg
insb
mov
adc
push
clc
bnd
add
xchg
add
mov
jne
xchg
add
jl
fwait
xchg
fs
std
incl
dec
cmpsb
lods
and
outsl
out
add
sbb
add
rep
js
xchg
in
and
mulb
test
jbe
sub
orb
inc
lods
xor
icebp
mov
out
and
shrb
clc
sub
stos
add
shll
loop
cmp
mov
xor
xlat
inc
mov
add
jo
sbb
outsl
lods
pop
sbb
push
rolb
mov
pop
fdivr
iret
nop
or
xor
cld
push
in
cltd
gs
add
or
and
jp
inc
shrb
add
pop
lcall
adc
adc
mov
and
cwtl
pushl
loope
xlat
pop
inc
fwait
shl
lods
and
xchg
and
mov
jo
xchg
sub
dec
loope
jmp
xor
mov
and
add
adc
add
sub
insb
outsl
rorb
stos
arpl
subb
cmpsl
outsb
loopne
xchg
push
and
sbb
cli
mov
add
ljmp
push
das
in
testb
sbb
js
and
xlat
cmpsl
sbb
scas
imul
outsl
or
mov
adc
lds
insl
in
xlat
shlb
in
fisubs
arpl
push
inc
pop
mov
pop
cld
jg
mov
sbb
nop
sub
sahf
push
dec
jg
jnp
fmull
jmp
dec
mov
pop
inc
and
scas
cltd
add
pop
out
arpl
push
jg
fs
sar
jp
ss
or
lahf
loope
add
or
div
inc
mov
in
or
movsl
lahf
repz
sbb
xlat
addr16
sahf
or
xchg
mov
in
into
pop
stos
lds
mov
inc
cmp
icebp
jg
pop
pop
mov
inc
xchg
adc
inc
mov
mov
aaa
inc
mov
pop
or
decl
xchg
add
arpl
add
in
scas
repnz
xchg
test
aaa
sbb
movsl
pop
mov
adcb
inc
dec
std
sbb
and
add
push
repz
lods
fwait
cld
mov
jnp
push
inc
xorl
sub
cs
xchg
icebp
sbb
repnz
inc
push
pop
mov
incb
xor
add
in
sbb
sub
pop
jns
out
adc
out
sbb
xor
shlb
add
mov
jl
push
rolb
mov
push
add
pusha
daa
jl
cmpsb
ficomps
cmp
or
aas
and
add
and
add
in
add
ds
xchg
sbb
adc
aas
xchg
imul
jp
or
fnsave
jle
and
mov
xor
inc
xor
int
outsl
pop
lret
test
push
ffree
inc
pshufw
aad
dec
psrld
lock
loopne
lds
aad
in
add
not
lods
call
inc
je
and
xor
add
clc
push
cltd
cmc
not
je
cltd
jae
test
leave
imul
in
pop
cld
inc
popa
icebp
cmc
dec
sbb
frstor
enter
fsubrs
mov
push
cld
jo
ret
fucomi
push
or
or
adc
fildl
pop
enter
or
mov
pop
xor
lock
push
inc
mov
jno
and
sarl
mov
fsubrp
jne
mov
cld
in
stc
shlb
pop
dec
mov
add
pop
ret
fimuls
popa
pcmpgtw
std
mov
mov
icebp
pop
das
std
cmpsb
ljmp
xchg
sub
push
mov
mov
add
inc
cmpsb
out
xlat
dec
fs
sbb
cmpb
cmpsl
lock
cmp
lcall
mov
cmp
adcb
pop
stos
sbb
mov
pop
cli
dec
hlt
push
jecxz
xchg
icebp
push
mov
mov
or
decb
pop
push
fildll
cs
movsl
sbb
stc
sbb
out
jo
and
add
and
testb
loopne
xor
add
xor
dec
xchg
sub
test
mov
dec
pop
mov
pop
lock
adcb
addb
push
imulb
lods
mov
in
stc
sub
inc
inc
sub
cld
xor
imul
cli
imul
sub
stos
hlt
je
dec
cld
mov
mov
nop
add
std
stos
jns
and
pop
and
ja
add
aam
mov
adc
pop
loop
out
inc
cmp
int
subb
push
cwtl
int3
xor
push
xchg
jmp
cmpb
mov
mov
adc
xor
push
dec
jo
rorl
sub
in
add
push
jmp
cmp
loope
pop
dec
adc
inc
or
cld
inc
xchg
pop
ljmp
sbb
push
scas
and
clc
fcomip
sub
in
jg
and
xor
jo
popa
pusha
cmp
xor
inc
and
lahf
sahf
adc
enter
xchg
xchg
push
and
push
dec
xchg
mov
lock
push
jo
hlt
loop
stos
and
lahf
mov
mov
push
test
push
add
sbb
xor
mov
and
jmp
pop
std
adc
dec
loop
aas
push
mov
mov
repnz
and
cli
fdivr
aad
jno
addl
test
sub
dec
inc
hlt
mov
rorl
out
jnp
xchg
jnp
scas
into
out
test
jp
inc
and
jo
push
ljmp
and
push
shl
and
aad
xor
rcll
sbb
or
out
dec
cwtl
in
popa
test
inc
std
xor
and
es
outsb
in
ficompl
sub
jns
mov
pop
mov
out
dec
ljmp
test
mov
aaa
and
or
pusha
mov
loopne
pop
xor
cmc
outsb
rorb
aaa
ljmp
dec
std
repz
sti
lahf
les
mov
inc
sub
push
add
cmpsb
add
mov
pop
inc
mov
pop
shll
push
add
push
sbb
mov
push
push
pushf
adc
imul
ds
es
sbb
pop
inc
push
das
add
inc
imul
pop
inc
jle
outsb
xor
icebp
jp
pop
add
lcall
icebp
bound
push
mov
add
lret
pop
dec
xchg
imul
mov
ret
shl
outsb
fsubrl
xchg
cli
and
dec
mov
mov
subb
jno
sbb
ljmp
cmc
repnz
mov
ret
aam
fwait
loope
loop
andb
flds
mov
js
inc
and
fcmovbe
js
adc
cmp
add
out
mov
fs
pop
and
lock
lods
or
dec
pop
cmp
mov
enter
add
popa
mov
and
add
inc
stos
jmp
dec
add
push
lcall
mov
mov
andl
sbb
push
subb
in
inc
lock
mov
dec
out
inc
sub
orb
orl
push
and
add
ret
addb
fsub
cmpsb
shrl
and
movsl
sub
call
test
test
mov
mov
add
les
cs
in
adc
dec
add
push
lods
adc
dec
xchg
in
and
shrb
std
mov
push
pop
adc
jno
shrb
addr16
popa
sbb
popa
dec
loop
xchg
outsb
loopne
dec
push
mov
popf
and
pop
ljmp
pop
mov
mov
and
mov
sbb
pushw
data16
rolb
subb
mov
std
fists
rorb
inc
pop
lock
inc
pop
jne
lcall
sbbb
pushf
add
add
push
sub
fimuls
aas
adc
arpl
mov
add
mov
mov
insl
das
andb
push
orl
insb
sub
add
mov
in
inc
adc
out
push
scas
rolb
cmp
mov
adc
orl
lods
lahf
mov
scas
add
cmc
mov
pushl
call
dec
addr16
and
sarl
jg
adc
push
insl
add
and
rorb
fs
fwait
or
test
pop
arpl
mov
loop
pop
test
cmpsb
cmpsb
rolb
xchg
adcb
cmp
repnz
mov
mov
sbb
sub
aad
shr
mov
mov
xor
imulb
push
sub
dec
dec
sbb
bound
adc
push
mov
cmp
ljmp
adc
mov
test
stos
jg
mov
mov
cmc
aaa
add
add
pop
mov
jo
or
ret
add
inc
mov
push
jl
or
add
mov
xor
aaa
mov
lods
pusha
sbb
jg
cli
dec
cmp
xlat
or
and
lds
adc
add
jmp
pop
fs
and
addl
mov
pop
sub
push
lcall
inc
sbb
mov
sub
cmpsb
ds
repz
xor
fdivr
or
arpl
dec
jp
scas
hlt
loopne
fadds
dec
jns
pop
pop
and
or
loopne
and
in
xchg
pop
icebp
adcb
push
bound
fildll
dec
adc
dec
mov
add
ja
js
loope
pusha
sbb
cld
mulb
adc
hlt
and
enter
stc
sub
dec
jg
xchg
inc
mov
mov
das
in
mov
loop
sub
test
fsubrp
cmp
and
insl
mov
adc
in
inc
xchg
jg
add
adc
jge
sub
push
and
mov
call
pop
adcb
sbb
dec
pusha
inc
aam
fimull
test
cli
sbb
test
add
mov
add
pusha
xor
or
das
addb
adc
adc
or
jg
les
cltd
add
mov
jecxz
call
loopne
bound
pusha
scas
inc
lahf
push
aas
mov
sbb
sbb
aaa
fisubrl
loopne
hlt
mov
movsl
out
inc
dec
adc
cwtl
ja
into
mov
out
popa
sub
dec
outsb
aaa
mov
nop
pop
je
out
loop
or
mov
push
add
add
icebp
jg
mov
faddl
xor
pusha
pop
xor
lock
push
rcll
loopne
push
and
fwait
or
adc
adcb
adc
adc
shl
fsubrl
decl
scas
js
scas
in
adc
pop
xchg
adc
popf
pusha
hlt
jg
clc
aaa
mov
lea
repz
jecxz
add
add
cltd
sbb
cmp
outsb
inc
mov
aad
lods
and
sahf
inc
pop
adc
cmp
test
test
xchg
incb
fcmovb
mov
mov
jbe
push
jp
gs
and
arpl
xchg
mov
sbb
sbb
scas
out
pop
lock
dec
add
pusha
rclb
sbb
call
mulb
or
xchg
mov
xchg
add
call
sub
mov
in
mov
cmpsb
stos
sub
incl
in
subb
jb
dec
push
mov
stos
cld
xchg
cltd
push
mov
xchg
or
xchg
les
sub
test
cld
jb
mov
mov
adc
add
mov
lahf
int3
mov
or
add
mov
out
jnp
or
loopne
dec
add
add
movsb
dec
test
stos
inc
add
nop
adc
pop
popf
sbb
sarb
andl
nop
nop
fldcw
and
jo
add
mov
cmp
adc
loop
cwtl
mov
pop
adc
xor
add
jecxz
push
and
mov
lahf
fildl
aas
aam
and
push
push
push
ss
pop
sub
enter
xor
and
sbb
idivb
mov
sub
adc
add
jg
stos
mov
xchg
sbb
xor
push
cli
int3
lock
outsl
ja
xchg
and
aad
shrb
cmpb
fwait
sub
xor
mov
jne
push
or
cmpb
shlb
add
add
in
xor
sub
mov
adc
add
mul
adc
jl
add
mov
adc
aad
sar
insl
mov
pushf
mov
mov
das
ljmp
add
std
pushl
cmp
cmp
jmp
dec
std
cltd
je
aam
and
das
xor
lock
clc
push
xor
or
xchg
cmp
hlt
jle
movsb
das
repnz
fdivrl
mov
xchg
pop
stos
xor
sbb
mov
jp
inc
aad
cmpsl
imul
dec
lods
popa
movsb
lock
cmp
repnz
dec
cmp
lahf
movsl
in
adcb
add
fdivp
cs
stos
es
jns
adcl
stc
push
or
xchg
scas
movsb
jo
push
sub
sub
pop
lock
cs
shlb
dec
xchg
outsl
aam
adcb
scas
mov
adc
or
mov
divl
and
push
cmp
pop
add
xor
sub
mov
pop
pop
lock
inc
push
add
stos
icebp
sbb
push
mov
mov
inc
insb
pop
add
int3
insb
sub
push
or
xor
fwait
es
rolb
push
mov
add
fstpt
scas
sub
sbb
push
insl
clc
inc
mov
rcrl
adc
lret
jbe
mov
jg
fs
scas
xchg
je
and
and
pop
jo
test
les
loopne
fidivrs
pusha
das
sahf
nop
sbb
andb
fidivl
call
fisttpl
pop
aam
push
add
fwait
and
and
push
or
lahf
sbb
push
or
hlt
loopne
pop
sub
and
add
sbb
push
jle
jle
adc
mov
aas
sub
dec
add
adc
push
out
ja
clc
fistpll
inc
notl
pusha
dec
shrb
sub
test
sahf
stos
fiadds
or
mov
inc
inc
mov
xchg
add
repnz
jmp
and
xlat
mov
fbld
dec
xchg
sub
stos
cmp
incb
cmpsl
inc
add
cmpsl
outsb
pop
add
dec
sub
jp
mov
mov
xor
fisttps
jecxz
and
add
add
dec
xlat
mov
sbb
dec
jmp
lds
cmp
ret
or
xor
mov
inc
xchg
push
scas
fadds
sti
lods
pop
lods
sub
and
pop
mov
loop
sbb
pop
inc
in
or
push
out
pop
cmp
mov
pushf
dec
inc
lahf
jo
jo
mov
and
jo
fwait
popa
ja
sbb
lret
lock
test
shlb
mov
test
and
push
cmp
inc
lods
fsts
cld
xor
adcb
add
jge
rorb
and
adc
loope
push
and
add
movsl
in
xchg
mov
adc
adc
xlat
mov
adc
jecxz
pop
icebp
fwait
lods
dec
adc
push
jno
je
jl
pop
cld
fisttps
iret
pop
andb
sub
les
ret
pop
lock
add
adc
mov
cmpsl
nop
adc
adc
test
test
xor
ljmp
xchg
test
and
sub
sbb
sar
mov
push
lret
dec
sub
lret
mov
mov
scas
aam
inc
das
adc
jb
mov
dec
loop
lock
mov
lea
dec
mov
pop
shl
add
cmpsb
repnz
cmpsb
pop
or
adc
mov
and
and
fxam
and
loope
enter
pop
mov
xchg
pop
pop
push
pop
push
mov
lods
add
sbb
insl
push
adc
mov
test
push
popa
add
adcl
pop
dec
xor
add
add
or
pop
loopne
mov
mov
add
ds
adcb
or
mov
fs
cmp
inc
inc
pop
mov
and
xchg
rclb
sbb
sbb
mov
dec
cmc
mov
nop
repz
add
sbbb
jecxz
rclb
shl
add
push
push
sbb
xorl
add
and
mov
add
mov
add
jecxz
pusha
fimuls
fcomps
sarb
inc
iret
stc
xor
add
inc
fwait
xchg
mov
or
cmp
or
or
jle
and
or
pusha
or
addr16
cwtl
rcrl
sbb
adc
adc
testl
jo
fwait
mov
or
stos
push
or
fisttpl
addl
or
or
dec
mov
mov
add
dec
or
cwtl
push
xchg
push
add
xchg
popa
dec
adc
scas
ljmp
mov
ss
inc
sbb
es
mov
adc
jl
repz
pop
dec
jb
or
frstor
orb
xor
add
movsb
incb
adc
dec
icebp
ljmp
xor
pushf
sbbb
cli
or
dec
inc
pop
push
add
scas
add
or
cs
mov
and
mov
popa
cmp
or
xor
lods
clc
bnd
dec
push
fs
mov
shlb
add
mov
das
add
adc
fildl
cltd
dec
cmc
sub
pushf
add
jb
or
test
xlat
adc
inc
scas
push
mov
add
sbbl
sbb
ljmp
inc
pop
add
xchg
mov
into
push
ret
inc
ret
sub
inc
nop
daa
push
je
lcall
add
adc
mov
ljmp
das
adc
push
ss
add
xchg
jl
mov
into
mov
pusha
scas
or
pusha
andb
clc
loopne
enter
subb
push
jne
js
and
push
loopne
xchg
sub
addl
pusha
jno
push
andb
cmp
jmp
mov
sub
or
test
mov
fildl
std
imul
or
xor
mov
shrl
mov
pusha
cmpsb
jp
lahf
cs
add
and
or
jg
pop
cmpsb
dec
test
test
stos
sahf
mulb
pop
xor
add
arpl
mov
repz
pop
add
cltd
je
mov
movsl
and
test
xor
sub
adc
test
mov
loopne
ss
addb
jb
push
or
aaa
mov
and
mov
rolb
cli
addb
mov
mov
out
dec
sbb
incl
pop
add
lods
in
faddl
mov
jl
cld
mov
inc
mov
dec
xor
or
xchg
pop
sbbl
out
aaa
xchg
push
lcall
or
in
add
ret
adc
lock
sub
mov
inc
adc
test
mov
mov
ficoml
pop
inc
fs
pusha
pop
pushf
rolb
insb
in
scas
sub
push
inc
push
clc
push
arpl
xchg
clc
lods
xchg
add
stos
mov
mov
jmp
popa
addb
addb
and
dec
add
mov
ds
fildll
sbb
pop
add
sub
rorb
cwtl
js
cld
sar
sub
pop
xor
push
adc
bound
cmp
cltd
in
mov
and
jmp
cmp
fwait
sub
jle
shlb
in
dec
lea
and
imul
adc
push
inc
or
fwait
stos
out
add
push
cmpsb
lcall
fcomps
push
add
add
or
sub
scas
ror
mov
cmpb
add
inc
add
adc
movsl
ljmp
jp
shll
adc
stos
inc
pop
and
insl
rolb
andb
call
mov
adcb
mov
add
push
lods
mov
sar
mov
fcmovb
add
add
dec
add
cmpsb
push
xor
mov
icebp
dec
pusha
and
ret
shr
mov
xor
ss
test
stos
mov
fwait
and
inc
in
arpl
mov
in
rcrb
jne
pusha
cld
call
and
notb
and
mov
fbstp
std
and
fisubs
jl
loop
loopne
lock
mov
loope
fcmovb
dec
pop
shll
add
and
scas
mov
push
add
ljmp
call
rclb
jle
mov
test
inc
xor
test
loopne
cmpsl
add
movsb
xchg
sbb
cmp
mov
pusha
adc
mov
fiadds
add
and
and
mov
out
cld
loop
ret
add
mov
or
or
ret
cmp
and
and
insl
dec
loop
xchg
les
mov
mov
pop
mov
arpl
add
sar
fbstp
mov
push
out
loopne
cmpb
test
adc
je
loop
test
dec
dec
pop
inc
push
subb
out
xor
xchg
xchg
lock
es
cld
xchg
or
xchg
out
test
adcl
push
mov
mov
sbb
daa
xchg
pop
pop
push
pusha
push
xchg
and
gs
inc
push
popf
xor
inc
push
mulb
sub
sub
outsl
cmp
cmpsl
mov
nop
and
add
cmp
jecxz
mov
add
push
xlat
mov
jg
gs
pushf
add
pusha
adc
ret
sub
xor
pop
add
jp
jge
lcall
dec
orb
cmp
lret
lods
insb
cli
mov
test
lds
push
mov
call
not
fisubrl
sbb
and
in
cmc
lods
andl
sbb
add
aad
es
ret
cmpsl
ljmp
xlat
xchg
or
add
adc
outsb
mov
movsl
and
mov
cld
adc
sub
xchg
mov
rcrl
jbe
sarl
push
mov
nop
nop
mov
jae
jecxz
mov
les
cld
loop,pn
adc
adc
dec
clc
push
cmpsb
addl
mov
fisubl
jb
push
les
pop
add
pop
in
loopne
les
sub
sarb
pusha
mov
sub
loope
orb
inc
rep
pop
xor
sub
out
pop
adc
adc
push
jmp
add
mov
insl
icebp
loopne
sub
test
add
pop
add
out
pop
loop
sub
scas
add
scas
movsb
hlt
mov
sub
push
and
sub
sbb
jl
lods
loopne
stos
xlat
fs
adc
pushl
sub
outsb
or
imul
pop
icebp
sub
xor
inc
das
jo
mov
add
outsl
das
fadds
adc
scas
aam
rclb
scas
add
sub
in
sub
jecxz
xlat
inc
or
inc
mov
loop
dec
mov
mov
pop
and
sbb
arpl
test
lea
mov
lcall
push
aam
mov
add
inc
lods
arpl
dec
movsb
test
add
popf
xor
call
add
add
sub
arpl
adc
add
sbb
pop
andl
xorps
push
mov
movsb
dec
popa
push
and
ds
dec
mov
mov
cli
mov
repnz
ljmp
lcall
lock
or
imul
dec
scas
and
lods
mov
pusha
movaps
adc
inc
and
and
jge
std
pop
clc
shr
nop
imul
cltd
and
cmp
test
shll
push
sub
jecxz
sahf
in
aad
lods
loopne
arpl
pop
pusha
push
xor
xor
xchg
loopne
inc
mov
subb
addr16
outsl
pop
or
movsl
in
sbb
out
mov
mov
lock
jp
cmpsb
fimuls
sub
shl
sub
fimull
mov
test
bound
andb
test
add
out
sub
movsb
test
pop
bound
pop
ret
dec
pushf
xor
fdivp
inc
movsb
ss
pop
mov
ljmp
xor
daa
imul
dec
mov
cltd
mov
lods
and
and
mov
xor
and
sub
aad
cs
xor
and
ja
inc
and
jmp
insl
pop
dec
adc
fwait
or
mov
adc
data16
ljmp
scas
adc
ljmp
lret
daa
adc
ljmp
or
shlb
jecxz
repz
sbb
sub
or
and
add
sbb
clc
subb
and
stos
mov
or
push
ret
mov
pop
push
mov
adc
and
insl
inc
adcb
sbb
insb
mov
cs
aad
sub
mov
sub
enter
hlt
arpl
and
sbb
je
sbb
nop
lock
push
add
mov
and
cli
fistl
xchg
mov
push
lods
call
adc
push
aaa
add
inc
imul
repz
pop
mov
insl
dec
andb
popa
lock
dec
je
xor
loop
ss
shrl
test
mov
mov
sub
das
in
sti
adcb
fimull
push
repnz
or
fmuls
sbb
push
sbb
or
lods
xor
inc
adc
mov
mov
mov
add
cmc
or
push
xchg
loop
insb
dec
fld
or
cmp
or
or
sub
fwait
jg
adc
in
add
dec
pushf
add
adc
lock
insl
dec
dec
popa
pop
out
popa
mov
fisubs
mov
jae
dec
fsubr
mov
adc
ja
popf
scas
push
or
push
or
andl
out
or
cld
xor
push
xor
stos
sarl
mov
movsl
pop
sarb
mov
or
inc
cmpsb
or
pushf
mov
adc
xor
and
or
stos
xchg
stos
xchg
out
inc
jg
xor
jo
sub
mov
hlt
dec
imulb
xor
mov
mov
xchg
mov
loopne
lds
cs
das
sahf
outsb
sub
orl
mov
or
dec
negb
jmp
mov
scas
les
aam
dec
cmp
mov
push
push
add
pop
xchg
dec
mov
das
jle
mov
mov
xchg
add
push
xchg
ljmp
inc
mov
cmpsb
adc
rorl
jge
scas
nop
filds
popa
inc
dec
movsl
test
adc
jo
cmc
dec
inc
les
xchg
test
push
mov
dec
xor
mov
lods
decb
sbb
test
push
iret
push
sbb
lea
xchg
adc
dec
pop
push
js
dec
adc
gs
add
and
push
lock
sbb
add
dec
pop
sbb
xchg
dec
repnz
jno
loope
je
dec
bound
mov
jno
xor
add
jno
xchg
dec
mov
lods
sub
fistps
call
push
and
out
or
out
cli
out
inc
push
subb
push
pushl
push
add
out
lcall
mov
inc
add
inc
add
out
add
subb
rclb
mov
pop
aam
shrb
pop
add
fcompl
lods
cli
pop
ljmp
out
sbb
mov
xchg
incb
sub
cltd
push
xchg
xchg
fnstsw
jb
inc
aad
xchg
dec
loopne
sub
jo
shlb
imulb
fdiv
add
notb
lcall
push
rorl
add
pop
push
gs
mov
out
je
adc
out
loop
and
std
jp
out
sbb
lea
shl
insl
mov
jl
or
jb
mov
push
ss
and
or
jp
pop
xlat
adcl
lock
adc
movsb
mov
clc
data16
push
fwait
mov
xlat
cmpsl
sub
cmpsb
mov
mov
or
call
jp
and
inc
icebp
das
out
dec
mov
mov
daa
icebp
sbb
scas
lock
ds
jne
or
inc
mov
in
ja
inc
lret
pop
pop
pushf
sub
aam
add
testb
mov
sbb
ja
vmovaps
mov
or
pushl
push
inc
jns
dec
mov
adc
push
or
sbb
hlt
filds
push
add
or
cmp
rcr
adc
scas
and
and
add
test
dec
sbb
mov
add
fdiv
enter
test
cmpsb
scas
or
roll
pop
mov
jb
fdivr
outsl
adc
das
clc
ja
push
or
adc
push
cmpsb
jo
lods
pop
pop
add
inc
loopne
cld
xchg
or
push
ror
mov
pop
adc
or
mov
jge
add
or
fisubrl
loope
add
and
call
and
and
dec
push
stos
xchg
mov
dec
data16
sbbb
jecxz
sarb
mov
xor
lea
add
mov
loop
and
ds
xor
stos
sub
loope
pop
scas
repnz
mov
jp
add
mov
movsb
mov
lcall
inc
pop
mov
out
scas
rcrb
clc
add
add
gs
test
shrb
es
or
add
inc
cld
xlat
test
leave
pusha
cmp
inc
ds
insl
clc
cmp
xchg
dec
mov
and
cmpsb
xlat
mov
mov
mov
outsb
mov
or
pop
aad
cs
or
xchg
andl
test
sbb
or
scas
add
fs
sub
fcmovnu
ja
movsl
adc
dec
cmpsb
mov
aad
pop
jb
pop
loop
jecxz
call
mov
inc
inc
call
inc
jecxz
fnstsw
or
int
dec
pop
mov
inc
testb
in
aas
or
insl
mov
and
mov
push
inc
and
cld
ja
mov
enter
pop
enter
jp
inc
sbb
adc
inc
pop
pop
dec
cmp
loopne
mov
inc
imul
pop
inc
add
inc
clc
fstpt
and
dec
leave
or
add
and
inc
mov
mov
call
inc
insb
sbb
sbb
mov
cli
add
and
and
inc
loope
dec
add
hlt
add
fwait
mov
jmp
movb
inc
push
out
cmc
cmpsb
push
sbbb
push
das
adc
adc
jmp
pop
rorb
into
pop
enter
jmp
mov
add
mov
xchg
sbb
lea
cmp
sub
daa
loop
or
mov
scas
mov
xor
pusha
mov
lcallw
gs
lea
add
cmp
js
ficompl
lods
cld
int
cs
repnz
lret
inc
mov
repnz
pop
cld
jmp
push
xchg
xchg
sbb
xchg
add
or
hlt
dec
testl
jne
lret
mov
pop
mov
add
cld
add
je
dec
pop
push
call
icebp
sahf
xor
cwtl
shrb
xor
cmc
adc
loop
pop
or
jo
pusha
jp
fistps
jne
xchg
push
and
dec
add
and
mov
cltd
inc
cmpsl
cli
mov
addb
test
mov
ret
dec
dec
mov
pop
inc
loop
lret
inc
xchg
pop
inc
xor
inc
or
xchg
fcompl
aad
push
and
mov
ret
mov
std
cmpb
stos
cld
sub
mov
ret
paddq
popa
xchg
data16
xchg
push
mov
or
test
daa
in
aam
insb
loopne
cmpsb
xchg
jmp
mov
enter
loope
orb
adc
xchg
xchg
das
orl
test
test
mulb
cmp
mov
or
pusha
mov
adc
je
add
push
pop
movsb
inc
test
cmpsb
mov
jp
and
into
and
mov
jg
mov
fsubp
adc
inc
pusha
mov
aam
or
sbb
dec
dec
int3
orb
pop
enter
push
sub
or
insl
xor
pop
and
and
mov
inc
push
cli
enter
cmp
lods
es
loop
cld
das
xchg
faddl
inc
inc
inc
xorl
push
cld
add
mov
add
enter
xchg
jp
add
pop
xchg
ret
sahf
subb
mov
cmc
gs
inc
or
insb
sub
mov
fbstp
adc
and
es
loopne
sub
xchg
pop
aaa
jmp
cmpsl
das
jl
dec
cmpsl
sub
mov
lcall
bound
cmp
inc
mov
movb
pop
rcr
out
mov
mov
mov
dec
add
dec
push
add
addb
xchg
mov
mov
pop
dec
dec
loopne
xor
hlt
leave
push
scas
nop
mov
sbb
pop
adc
xchg
ret
or
mov
push
fwait
sbb
adcb
mov
shlb
inc
pop
mov
cmp
and
fildl
mov
mov
push
add
cs
pop
add
dec
mov
loopne
push
hlt
in
pop
ljmp
sbbb
clc
mov
stos
testb
daa
ds
movsl
or
or
dec
xor
rclb
clc
cmp
sbbl
jecxz
xchg
push
out
fdiv
mov
mov
sub
dec
dec
scas
sub
out
xor
sbb
mov
dec
stos
jb
dec
and
pop
lretw
add
mov
hlt
sbb
mov
mov
add
dec
pusha
and
pop
sti
inc
add
loopne
jo
push
sub
add
and
jecxz
sub
mov
imul
cmp
xor
add
mov
push
mov
adc
ljmp
mov
or
das
adc
xor
mov
mov
add
sbb
fisttps
bound
sbb
sub
roll
cmp
and
push
mov
rcrl
bnd
jbe,pt
add
mov
mov
jmp
or
adc
andb
xchg
add
lods
sub
or
or
pushf
mov
loopne
add
call
arpl
sub
lcall
or
mov
lock
lods
shrb
dec
fs
stos
push
lock
mov
je
das
pop
add
jo
add
dec
sbb
inc
aam
cmpsb
mov
nop
mov
inc
dec
cltd
add
call
cwtl
mov
pop
adc
dec
call
insb
sub
leave
and
inc
pop
rcll
cwtl
mov
xchg
daa
push
icebp
inc
dec
test
add
data16
mov
sbb
sub
cld
rcrb
push
sbb
and
jo
cltd
jo
cld
aaa
rcrb
loope
sub
mov
push
or
sub
xchg
cmp
loop
lcall
and
and
inc
push
add
xchg
enter
jg
add
cli
arpl
orl
adc
lock
pushf
add
push
add
stos
inc
fbld
xchg
xchg
imul
push
inc
mov
adc
lock
mov
adc
adc
adc
xchg
sub
movsb
add
out
adc
xor
sub
pop
xor
repnz
ja
inc
pop
push
mov
adc
cltd
incl
inc
add
cmpsb
sub
and
psrlq
cli
jg
and
and
enter
mov
pop
mov
xchg
fimull
fs
mov
push
popa
cmp
jmp
sbb
adc
mov
stos
fdivp
add
pop
imul
pop
lods
cld
loop
scas
cli
stc
sahf
add
stc
push
add
pushf
sahf
add
mov
in
xor
pop
mov
and
scas
push
pop
jno
xchg
inc
outsl
pop
mov
sub
xchg
and
movsb
add
shlb
mov
in
pop
es
lock
add
add
xchg
ljmp
repz
sbb
cmpb
cmpsb
add
mov
push
aaa
pop
xchg
push
nop
cmp
vmptrst
je
das
add
push
xor
nop
add
jecxz
fildll
and
out
pop
out
andb
jg
movsb
bound
jecxz
test
push
inc
xlat
adcl
je
aas
sbb
adc
dec
sub
ss
add
imul
push
or
js
fwait
push
hlt
jmp
mov
repz
adc
mov
mov
inc
mov
add
pusha
adc
es
add
mov
xchg
fldenv
dec
lock
adc
rcr
mov
test
das
add
adc
addr16
lcall
sub
adc
sub
xchg
jmp
jg
add
fimull
adc
adc
std
bound
add
cwtl
jecxz
data16
mov
push
xor
dec
push
cmp
mov
daa
lock
pusha
addr16
bound
mov
rcr
outsb
sahf
dec
jecxz
popa
xchg
in
and
pop
mov
ja
adcb
mov
negb
push
xor
or
adc
ljmp
lock
pop
add
test
jl
lock
pop
aaa
pop
loope
cltd
push
fidivrs
mov
or
mov
and
push
jp
mov
pop
push
sbb
and
icebp
add
pop
inc
test
pop
sbb
lret
mov
pusha
push
xchg
add
loope
xchg
add
mov
mov
add
mov
shll
adc
mov
xor
push
mov
add
insb
pop
ljmp
xchg
sar
jmp
fs
add
push
pusha
mov
push
xchg
mov
sub
xchg
cli
ja
add
enter
add
shll
push
ljmp
arpl
shrb
or
push
test
xchg
dec
orb
or
xchg
and
add
lahf
std
sbb
xor
cld
in
mov
adc
ds
inc
aad
mov
dec
lods
sub
movsb
sub
scas
adc
popa
mov
jbe
mov
lods
arpl
push
push
mov
mov
adc
lods
dec
fists
cmp
and
movsb
mov
orl
hlt
cli
inc
add
cmpsl
push
fnstenv
pop
sbb
xor
shlb
mov
incl
inc
enter
pop
add
pop
add
add
pop
add
mov
mov
adc
or
push
and
mov
xchg
or
in
jg
or
xor
sbb
mov
adc
cmp
mov
push
add
mov
pop
orb
hlt
sbbb
and
or
into
jge
sbb
clc
sbb
hlt
mov
inc
push
scas
loope
dec
inc
cli
fisttps
inc
mov
sub
out
add
lock
xorb
push
nop
xorb
loopne
jge
test
mov
dec
cli
mov
mov
mov
inc
mov
push
inc
addr16
js
inc
add
inc
adc
mov
idiv
incl
push
dec
fstpl
sbb
and
mov
xchg
mov
and
pop
fdiv
cltd
cmpsl
add
xchg
xlat
movsb
sbb
cmp
xchg
sbb
out
sbb
add
push
mov
adc
outsb
push
les
push
mov
cmpsl
add
mov
mov
roll
xchg
and
xchg
inc
jl
rolb
xor
bound
or
sub
dec
inc
inc
inc
ljmp
jp
dec
mov
sti
or
add
adc
push
loopne
lcall
add
or
xchg
dec
es
xchg
dec
adc
inc
enter
xor
mov
ja
xchg
or
xchg
adc
pop
inc
inc
andl
jp
andl
push
inc
xchg
xchg
dec
adc
push
adc
or
ret
add
mov
inc
repnz
dec
jle
mov
sub
movsb
xor
je
inc
pop
push
inc
add
adcl
andl
push
sub
icebp
pop
mov
lahf
enter
mov
inc
xchg
test
adc
add
pop
into
pop
mov
pop
add
pop
lret
repnz
pop
xor
sbb
mov
rep
or
xchg
imul
add
jb
ss
push
pop
jae
enter
es
lds
stos
mov
lret
dec
out
rcrb
sbb
lcall
push
push
repz
sbb
sbb
sahf
xor
incl
ret
xor
adc
les
sub
adc
pop
mov
pop
jg
lea
jecxz
and
sub
pop
xchg
loope
popa
sbb
adcb
mov
sbb
enter
std
pop
or
xor
lcall
mov
cmp
and
mov
outsb
mov
mov
dec
jnp
cmp
mov
sbb
cltd
dec
sarb
adc
sarl
mov
pushf
ret
sahf
cmpsb
add
loopne
js
arpl
lock
rcrb
mov
aaa
mov
enter
jg
ret
inc
mov
repnz
inc
andl
rclb
mov
sbb
mov
repnz
add
mov
add
add
mov
loopne
add
mov
je
inc
es
or
outsl
cli
fldt
mov
sub
lock
sub
sbb
shlb
push
sahf
ret
fiadds
mov
mov
pop
cwtl
cwtl
stc
push
lcall
loopne
mov
jnp
and
jecxz
mov
das
icebp
add
and
mov
scas
ret
aaa
add
stos
dec
cld
rcl
in
add
lret
adc
nop
and
push
sub
and
addl
inc
sub
xor
cmp
push
push
mov
mov
mov
cmpsb
sbb
or
inc
and
jno
add
ret
aaa
mov
or
ljmp
dec
je
mov
add
imul
test
xchg
daa
add
or
ret
pop
mov
mov
and
jb
fwait
loop
sub
and
or
mov
aad
or
pop
jl
pop
cmpsb
and
mov
stc
inc
jne
shr
push
sahf
and
dec
cmp
inc
and
pop
add
loope
dec
cmc
sbb
mov
dec
pop
add
xor
out
add
inc
lahf
movsb
dec
mov
cld
and
stc
popa
shrb
mov
sub
add
add
lcall
xchg
ss
sub
and
test
cmpsb
xor
push
bound
inc
pop
cmpsb
sahf
and
fwait
push
inc
sbb
loope
or
test
pushl
movsb
mov
inc
test
pop
jle
mov
and
mov
or
sbb
es
sbb
dec
mov
mov
loope
and
dec
stos
mov
cmp
fwait
or
add
jp
enter
push
fdivl
add
dec
mov
add
pop
es
inc
push
sub
add
add
inc
mov
cli
cmp
test
mov
adc
or
popa
jb
mov
out
mov
and
dec
cmp
loopne
add
push
mov
push
stos
fstpt
xor
mov
repnz
or
mov
push
pop
adc
or
xlat
mov
mov
adc
cmovp
faddl
dec
mov
push
xchg
inc
roll
add
xor
insb
sbb
or
leave
bound
cli
xchg
pushl
loopne
stos
or
dec
mov
mov
adc
jmp
push
mov
push
xor
lcall
push
mov
xorb
enter
mov
mov
test
mov
scas
scas
mov
push
stos
inc
adc
push
outsb
bound
push
std
incl
insb
das
inc
pop
mov
cwtl
mov
loop
or
in
sbb
sahf
push
or
mov
add
loop
pop
push
pusha
sbb
fsubrs
into
xchg
jbe
mov
mov
hlt
or
add
push
rcr
jo
pop
mov
gs
or
pusha
notb
outsb
sbb
and
test
ljmp
inc
pop
andb
add
loop
sbb
push
mov
and
xor
addl
add
inc
bnd
xchg
call
test
cs
addl
sbb
jg
outsb
cli
dec
jp
xor
or
xchg
inc
add
add
lock
mov
jo
ljmp
inc
adc
stos
mov
pop
js,pt
icebp
das
mov
loopne
rclb
dec
sub
in
addb
jle
or
movsb
lock
mov
out
mov
xor
movsb
push
shll
and
fs
out
neg
cmp
icebp
inc
rsm
add
icebp
and
or
ret
adc
inc
mov
incb
cmpsl
jno
adc
stos
sbb
push
and
cs
or
mov
adc
sbb
xchg
mov
xor
inc
mov
push
cli
push
loopne
dec
push
movsl
data16
adc
xlat
and
mov
icebp
adc
inc
rorl
movsb
faddp
push
mov
outsb
nop
or
scas
fstpt
and
pop
repnz
subl
or
hlt
add
icebp
adc
adc
repz
push
jne
movsl
icebp
dec
out
xor
add
sbb
lods
lock
or
dec
sub
les
sub
shll
fcomip
cmp
push
inc
sbb
mov
rcr
call
insl
jo
or
add
push
les
xchg
stos
mov
adc
movsl
dec
mov
and
jo
mov
arpl
push
imul
and
add
adc
mov
adc
pop
call
inc
hlt
out
add
pop
sub
inc
sarb
or
add
jb
push
dec
mov
lock
push
xor
sub
sub
cmp
inc
adc
rorb
das
subb
and
xchg
mov
add
lahf
adc
sbb
sub
stos
nop
inc
andl
data16
mov
pop
push
loopne
pop
mov
pop
sbbb
outsb
sub
loopne
sub
xor
lock
pop
xchg
adc
std
lcall
les
or
fmull
inc
mov
adc
inc
or
xchg
sbb
mov
push
jo
xor
mov
and
lret
mov
bound
sbb
add
cmp
sbb
ret
dec
inc
jl
jns
shlb
xor
lret
adc
andb
adc
sub
push
inc
loope
pop
and
or
add
pop
mov
out
ljmp
mov
icebp
sbb
add
rclb
xor
cmp
je
adc
pop
xor
arpl
pop
repnz
les
dec
pop
in
outsb
push
xorb
pop
lods
idiv
inc
sub
xchg
sub
add
orb
test
ds
cmovnp
insl
stos
mov
or
pop
push
aam
and
mov
pusha
xchg
add
lods
neg
xor
cmp
push
mov
sbb
scas
das
xlat
dec
dec
sbb
cmp
jmp
incl
orl
or
daa
cmc
fstl
sbb
rorb
sub
popa
shrl
scas
add
mov
mov
sbb
push
xlat
sbb
add
xchg
aaa
mov
pop
nop
push
fs
or
repnz
sbb
mov
dec
inc
mov
fcomps
es
add
rolb
sub
in
lds
out
cmc
test
sub
rorb
outsl
outsl
outsb
add
cmpsb
jb
or
jo
or
or
xor
add
pushf
and
in
push
xchg
sub
or
shlb
mov
add
push
and
xchg
or
rorl
xchg
sbb
mov
dec
add
xor
dec
addl
inc
lahf
and
lcall
jecxz
loopne
not
repnz
pop
pop
dec
cld
fdivp
add
sahf
stc
push
ret
jae
push
or
push
std
cli
stc
mov
fildll
add
fbld
adc
xor
pop
xor
lret
or
xchg
nop
mov
or
sub
jg
and
mov
mov
or
cld
out
jg
inc
roll
jbe
pop
ret
jo
pop
pop
xor
cmp
and
mov
popa
popa
dec
cmpsb
sbb
or
data16
inc
data16
pusha
mov
push
adc
dec
addb
fwait
out
stos
lods
sub
rcll
adc
cmp
mov
cs
mov
xor
add
mov
stos
loop
stos
frstor
inc
ret
cltd
xlat
mov
dec
lock
mov
add
inc
out
lahf
sub
cmpsl
andb
dec
pop
mov
outsl
fs
mov
inc
sub
es
pop
in
xor
movsb
stos
or
add
inc
xor
sbb
jo
mov
fistl
add
cmpsb
cltd
lahf
in
and
mov
and
cmpsb
push
cltd
pusha
add
pop
es
outsb
or
mov
sbb
dec
jno
and
jle
rcrl
cltd
fisubs
stc
xchg
aas
in
jg
mov
in
mov
inc
add
xchg
loop
or
xchg
and
lret
xchg
sub
dec
pushf
jp
es
add
and
scas
cmpsl
push
xor
rclb
rcl
aaa
or
jnp
jo
xchg
dec
adc
mov
mov
inc
add
es
cmp
add
fwait
movsl
push
mov
dec
scas
cmpb
sub
js
pushf
sub
sahf
and
hlt
pusha
enter
pop
lcall
sub
lahf
add
lret
add
outsb
cmp
pop
mov
adc
add
out
cmpsl
pop
xchg
cs
add
and
push
xchg
sbb
sbb
mov
fmuls
push
pushl
or
add
jge
add
xchg
xchg
sbb
movsl
outsl
int
mov
mov
cmp
data16
mov
mov
cmc
das
adc
and
sbbl
sub
imul
xorl
icebp
or
loope
xor
ret
xor
js
cwtl
mov
js
mov
xchg
icebp
or
jae
add
fadd
test
movsl
sub
inc
add
cli
loopne
jl
push
loope
lock
pop
push
sbb
add
test
icebp
mov
push
or
mov
mov
sbbb
adc
sbb
cld
push
andb
add
mov
lods
adcb
cmc
push
push
mov
pop
push
jb
xchg
testb
add
mov
icebp
loopne
inc
call
mov
xor
or
shl
push
rorb
repnz
or
add
das
adc
cmp
inc
orb
dec
pop
shrb
add
mov
dec
mov
or
push
cli
jb
addl
inc
test
in
add
pop
ss
stos
lea
ret
xchg
repnz
rolb
jl
notb
jge
shrl
and
aaa
and
mov
or
arpl
mov
mov
cld
addb
or
sub
popf
inc
enter
pop
subb
cmp
addb
push
clc
fsave
insl
test
cmp
out
add
inc
adc
sar
xlat
mov
xchg
ds
std
sahf
and
xchg
out
mov
lods
cmpsb
pop
inc
push
ret
jo
inc
or
add
add
push
inc
rcrl
fisttps
sub
sahf
xchg
dec
daa
mov
fists
mov
inc
xor
push
fwait
movb
inc
push
add
push
test
dec
jbe
rcrb
add
or
add
xor
jb
bound
and
sub
pusha
ljmp
cmp
add
xorb
testb
or
add
subb
push
loopne
ret
sbbl
push
outsb
outsl
mov
and
je
outsl
xchg
stos
fldl
dec
lds
rorl
in
pop
jl
andl
mov
lcall
sarl
sbb
sbbb
dec
add
out
ljmp
in
jg
shl
push
inc
add
stos
nop
fisubrs
mov
ja
addb
loopne
or
xor
cmp
dec
add
dec
test
cmp
mov
jg
dec
das
daa
inc
pop
and
inc
cmp
push
pop
fs
mov
scas
and
ret
cmp
adc
arpl
or
stos
sbb
loopne
pusha
adc
or
dec
ljmp
dec
or
ljmp
and
mov
loopne
out
and
mov
cld
fistps
push
sub
sub
inc
sbb
pop
icebp
in
lods
rolb
add
push
loopne
push
dec
sub
leave
pusha
bound
adc
mov
and
enter
mov
adc
pop
cmpsb
xlat
lock
adc
sub
out
int
clc
outsl
adc
and
test
xchg
sbb
rolb
inc
xchg
inc
push
pusha
pushf
roll
adc
enter
add
jne
lcall
dec
jo
add
adcb
ret
rclb
cwtl
cmp
popw
push
cld
jg
sub
stos
lret
mov
jo
pusha
inc
ficoml
push
nop
sbb
adc
sbb
js
das
das
add
pop
dec
and
jmp
xor
lret
add
xlat
sarl
ret
fcmove
sarb
je
sbbb
and
xor
and
or
add
push
mov
or
sub
lret
cld
out
mov
sbb
push
js
jns
push
loopne
int
je
add
inc
and
push
inc
das
cld
or
adc
adc
mov
or
add
pop
das
aaa
mov
out
push
sub
fcomps
lcall
lock
adc
out
sbb
repnz
jp
ljmp
int
fmul
std
movsb
sub
inc
lea
ss
pushl
mov
push
fiadds
xchg
sub
sub
xchg
sub
fadd
sbb
es
or
inc
inc
mov
pop
je
addr16
je
xchg
decb
nop
lcall
out
pop
adc
shll
cld
testb
adc
xchg
and
cwtl
add
int
xchg
sahf
jle
pop
push
push
ret
imul
test
sub
push
mov
and
out
rol
das
rolb
pusha
loope
add
pop
ficomps
in
sub
aaa
test
pushf
sbb
pushf
and
xor
ja
cli
or
xchg
add
ret
jmp
mov
add
inc
cli
ljmp
pop
loopne
sti
add
jb
cmp
and
das
and
sbbl
pop
adc
xchg
ficoms
pusha
sbb
push
popa
inc
mov
imul
jle
sub
jmp
mov
or
sbb
mov
icebp
push
pop
dec
mov
push
jb
mov
dec
and
repnz
inc
ret
dec
and
jns
mov
loopne
fildl
mov
loope
outsb
incl
pop
bound
sbb
sub
sub
decl
mov
inc
dec
sti
pop
pop
pop
hlt
shlb
push
jmp
andl
sub
loopne
imul
add
inc
jp
pop
dec
sub
xchg
pusha
stos
add
dec
sub
orl
mov
loop
cmpsb
rclb
cmpsl
fiadds
repz
cli
je
mov
mov
scas
jmp
imul
incl
mov
jb
addb
test
sbbb
hlt
mov
stos
dec
sbb
pop
int3
inc
xlat
jl
das
out
pop
cmp
cld
scas
add
mov
testl
jecxz
push
imull
push
dec
add
or
scas
subb
lcall
pop
das
cli
stos
dec
push
sahf
hlt
and
ret
sbb
inc
les
stc
mov
cs
les
popa
sti
xor
sbb
fmuls
dec
dec
sbb
xchg
pop
and
lds
push
sub
lcall
xchg
mov
es
xor
xor
das
adc
sbb
inc
and
fmuls
inc
xchg
repnz
adc
lock
add
sar
jle
mov
sbb
add
pop
rcrb
adc
les
dec
and
push
or
fildl
rclb
add
sbb
push
jb
lcall
push
and
sub
pop
cwtl
popa
dec
in
inc
adc
push
filds
sbb
xchg
cs
cwtl
fs
popa
aas
subl
or
sbbb
push
cmpsb
xor
mov
xor
clc
dec
push
scas
sbbb
lock
fbld
or
mov
js
mov
jp
imul
push
ret
loop
fwait
jp
cli
cmp
dec
daa
insl
lock
xchg
mov
adc
xchg
add
push
sbb
cmp
imul
or
cmp
call
rolb
mov
rolb
movsb
pop
mov
pop
cmc
outsl
xchg
push
sub
inc
cmp
or
and
movsb
aad
in
jns
ds
stos
pushl
add
sub
or
mov
lahf
dec
cld
cmp
subb
pop
or
xor
sbb
mov
or
pop
jo
cmp
insb
loopne
and
cld
test
push
loopne
cmpb
and
mov
movsl
dec
cmpb
rcl
test
xchg
sahf
mov
xchg
icebp
push
mov
lods
hlt
das
add
mov
inc
shrb
lcall
push
add
xchg
sti
and
mov
insl
dec
pusha
xlat
jmp
cld
divb
jo
shrb
mov
loopne
ret
testb
push
mov
sub
inc
les
movsb
mov
sar
mov
mov
mov
dec
xchg
icebp
jo
inc
dec
pusha
outsb
test
dec
mov
rcrl
push
pop
push
lods
out
sar
es
addb
sub
and
aad
lds
inc
xor
pop
mov
push
movsb
or
sbb
xor
sbb
push
bound
add
jnp
push
fmull
das
xchg
test
mov
cli
pusha
cmp
aam
aam
jne
out
pop
pop
mov
scas
and
xor
cmp
jg
out
add
mov
in
rcll
mov
xchg
dec
fs
mov
add
jp
mov
adc
inc
popa
jo
popf
loopne
push
pop
lods
out
fwait
bound
mov
adc
insl
outsb
call
jle
call
decl
adc
and
push
imul
sub
pop
mov
or
arpl
xchg
push
nop
lcall
cmp
aas
add
icebp
inc
test
lahf
out
stos
imul
pop
dec
stos
enter
sub
jmp
lods
sar
mov
xlat
stos
mulb
sbb
or
adc
stos
push
scas
push
push
stos
add
fists
rolb
mov
fsubr
dec
xchg
mov
add
in
mov
add
imul
mov
mov
sbb
lods
mov
or
cmp
cmpsl
pop
mov
mov
and
orb
jo
sub
pop
mov
movsb
mov
jb
pusha
xchg
push
push
jo
mov
push
lock
jl
enter
dec
mov
shr
fsubl
xchg
sub
add
sbb
icebp
enter
mov
adc
mov
sub
enter
lret
movsb
out
ds
xor
mov
fdivs
jle
xor
push
call
push
mov
push
add
outsl
scas
pop
rcll
cli
and
add
pop
mov
mov
sar
dec
adc
push
movsl
stos
adc
loopne
sbb
and
addb
shlb
pop
dec
adc
mov
fs
or
add
mov
add
mov
loop
pop
inc
mov
mov
imul
gs
mov
std
dec
fisubrl
outsb
addl
dec
mov
incl
mov
cld
popa
adc
xchg
popa
shl
jl
jnp
xor
and
lock
nop
ficompl
push
lock
and
pop
mov
je
fisubrl
shlb
and
mov
pop
pusha
adc
push
fwait
and
adc
mov
jns
mov
dec
std
ficoml
xor
pushf
xchg
push
cli
dec
push
adc
adc
or
push
sarb
pop
inc
xor
cmp
dec
push
pop
cmc
ja
orl
xchg
pusha
xchg
cmp
pop
fwait
inc
fmull
dec
xor
inc
aam
adc
bound
pop
mov
incl
loop
mov
adc
gs
std
stc
mov
sub
std
xor
add
jno
loopne
xchg
rclb
lods
fcomps
fdivl
push
js
rclb
add
or
call
add
jge
fsubl
mov
mov
adc
adc
arpl
cs
mov
or
pop
loop
xor
mov
xchg
and
insb
xchg
pushf
jg
fstpt
loopne
mov
loope
push
xchg
sbbb
call
pushf
out
mull
test
sub
fsubs
add
rcrb
fiaddl
push
cmpsb
mov
cmp
jp
scas
mov
and
rorb
scas
and
and
mov
pop
push
sub
mov
fwait
lods
aaa
cmp
cmpsb
leave
rorb
xor
jo
arpl
adc
ljmp
icebp
add
cmp
fwait
std
aam
mov
jns
popf
stos
pop
clc
call
faddl
push
movsb
andb
and
mov
mov
cmp
sbb
push
inc
add
fisttps
jle,pn
subb
add
push
push
rol
lcall
inc
sub
cld
cmpsb
adcl
lock
xchg
pusha
cltd
in
add
sub
sti
sub
push
movsb
inc
aam
sub
adc
pop
inc
or
push
dec
mov
push
lret
mov
mov
aas
pusha
add
aaa
icebp
sbb
cmpb
popl
and
jecxz
and
inc
ljmp
addb
inc
xor
add
add
lock
push
dec
hlt
add
fsubrl
sahf
sub
cmp
add
push
xchg
fisubrs
leave
push
mov
lcall
add
fisubrl
xchg
mov
jb
xorb
jp
cld
lock
jg
ss
push
das
loope
hlt
or
inc
jp
push
mov
xor
add
loopne
repnz
xlat
xchg
lcall
mov
or
jl
push
inc
dec
rclb
cmpb
xorb
psubsb
lods
cli
xlat
cmpsb
mov
in
ja
xor
jb
xchg
add
xorb
outsl
pushf
xchg
sbb
sbb
xchg
sbb
and
or
inc
or
sub
shlb
or
lods
das
adc
cltd
add
shrb
dec
and
mov
xor
sbb
shlb
ficomps
inc
push
mov
incl
shlb
inc
jbe
imul
mov
les
inc
mov
push
shlb
or
insl
shl
das
idiv
inc
and
mov
push
shlb
push
inc
push
mov
loop
imul
push
jg
push
popa
bound
movsb
inc
out
dec
push
inc
adc
addb
cld
add
or
xchg
mov
mov
call
push
enter
inc
lcall
add
popa
and
call
aam
push
xchg
mov
push
std
dec
nop
mov
mov
xor
or
jmp
in
xlat
push
and
dec
and
add
push
das
pop
mov
inc
popa
and
mov
pop
orb
or
addb
sub
fisubl
dec
push
sub
sbb
mov
jl
add
add
sti
add
ja
add
push
inc
or
addl
push
cltd
aam
xchg
jb
mov
shrb
loopne
addl
imul
push
sub
push
subb
push
mov
ljmp
cli
decl
outsl
mov
arpl
dec
test
and
cmpsl
pop
cmc
notb
add
add
sbb
dec
pop
or
ret
inc
cs
inc
cs
adc
sub
add
adcl
mov
and
mov
int3
sbb
xchg
cs
out
cmpsb
out
int
scas
fst
sub
add
test
dec
mull
in
xchg
dec
test
movb
les
dec
mov
push
js
mov
sbb
out
push
xchg
rclb
add
stos
lock
add
movsl
pop
and
clc
push
jg
mov
rolb
stc
popa
icebp
pop
rorb
stos
pusha
mov
repnz
cwtl
ja
adc
orl
and
ja
les
xor
sbb
or
xchg
test
mov
add
mov
push
mov
leave
mov
inc
push
mov
data16
inc
jns
inc
xor
bound
or
aas
push
jmp
mov
and
and
adc
bound
push
hlt
cwtl
cli
cmpsb
ljmp
xor
lock
bound
xlat
in
sbb
pop
and
cmp
ja
add
push
in
push
xor
push
les
and
xchg
dec
add
jne
or
mov
sub
add
sub
shll
outsl
fwait
push
shlb
add
mov
inc
loope
loopne
cmp
bound
xorb
add
sub
adc
scas
dec
pop
jne
mov
cltd
js
xchg
cltd
push
mov
add
or
mov
xchg
xor
add
out
stos
cmp
aam
les
xchg
ret
dec
dec
pop
cs
mov
or
add
add
dec
mov
mov
cmp
mov
aaa
inc
mov
cltd
pop
jg
outsl
adc
mov
sar
nop
xchg
push
orb
lahf
inc
or
fdivr
adc
mov
push
xchg
add
int3
insl
mov
pop
xchg
mov
fiadds
jl
aad
outsb
shrb
aad
loop
and
push
jmp
xchg
out
adc
js
sti
cld
ds
add
xor
lods
dec
scas
mov
adc
add
pop
push
add
hlt
outsl
cli
jg
xlat
mov
or
add
repnz
push
pop
not
test
xchg
mov
push
inc
jbe
popa
push
ljmp
xor
mov
inc
mov
in
mov
and
loopne
add
push
inc
pop
jns
add
aaa
xorb
sbb
dec
and
mov
push
push
add
mov
push
add
das
adc
adc
fsts
add
adc
xlat
lret
adc
adc
loope
sahf
stos
aad
idiv
inc
and
les
dec
xchg
mov
mov
add
add
jo
dec
cwtl
add
xchg
fldl
leave
bound
mov
imul
les
mov
add
cmp
add
rorb
mov
lock
sub
push
mov
push
scas
xchg
add
ljmp
mov
scas
mov
sbb
mov
mov
add
dec
xor
mov
add
icebp
pop
pusha
sbb
push
add
dec
rolb
filds
cld
filds
dec
jecxz
add
and
mov
inc
xchg
and
jecxz
movsb
dec
cwtl
push
test
loope
adcb
adc
mov
push
push
mov
pop
mov
gs
or
rcrb
dec
and
push
mulb
jecxz
push
orl
lods
sub
stos
lcall
inc
and
sbb
and
in
out
sbb
or
mov
outsb
bound
mov
jle
add
roll
mov
das
mov
mov
js
dec
sub
sub
and
push
adc
dec
mov
push
mov
jbe
jecxz
xchg
inc
nop
fildl
mov
adc
add
dec
jmp
add
mov
xchg
repz
adc
dec
xchg
mov
cld
sub
es
add
add
mov
ja
xor
out
or
loopne
xor
cmp
jo
mov
adc
jecxz
xlat
sub
aaa
mov
inc
imul
mov
jbe
xorb
mov
shlb
add
scas
cmpsb
inc
ss
xchg
adc
xor
mov
adc
push
add
mov
mov
add
jae
inc
mov
in
xlat
stos
rolb
test
inc
cmp
add
outsl
pop
repz
sbb
pop
adc
add
xor
cmp
xchg
add
mov
arpl
mov
and
add
mov
mov
xlat
mov
idiv
movsb
adc
scas
dec
or
and
push
rclb
dec
mov
ja
adc
mov
add
mov
lods
pop
inc
jbe
mov
clc
fildl
icebp
or
and
mov
dec
mov
push
btc
pop
lret
mov
lret
sbb
add
mov
ret
dec
xchg
xorb
test
ss
adc
mov
outsb
stos
notb
imul
mov
ret
pop
mov
mov
or
rolb
add
popa
scas
adcb
out
clc
pop
cld
mov
hlt
mov
adc
out
je
mov
xor
pop
sub
dec
xchg
outsb
stos
jmp
push
rolb
adc
aam
test
add
jb
push
orb
push
push
inc
rolb
xchg
cmp
mov
inc
dec
mov
jle
aaa
lods
inc
insb
or
adcb
lea
inc
mov
imul
or
ret
mov
add
mov
add
add
push
or
mov
add
rol
aaa
push
and
fidivrl
fbld
iret
mov
ljmp
add
cmc
cmpsl
loopne
mov
popf
sahf
aam
mov
aam
mov
sahf
nop
call
cli
inc
mov
aam
fidivrl
test
mov
jmp
loopne
lret
ljmp
mov
inc
or
inc
mov
pop
test
test
aas
pop
mov
push
inc
pusha
shll
lea
mov
loope
inc
or
repnz
sbb
pop
mov
jmp
shll
mov
mov
ljmp
mov
dec
loope
add
add
or
imul
sbb
loopne
mov
mov
adc
mov
add
jmp
jae
or
inc
or
dec
pusha
push
ret
cmpsb
add
ja
mov
aam
ret
pop
mov
adc
mov
adc
xor
cmp
icebp
dec
sti
fildl
cmp
and
cmp
scas
mov
sub
pop
adc
pop
dec
lcall
xchg
xchg
xchg
loopne
jg
sbb
add
ret
lock
adc
and
les
ljmp
adc
xchg
imul
rcrl
or
outsb
jns
stos
lcall
test
or
sbb
sbb
movsl
push
jl
xor
or
mov
adc
sub
gs
cltd
fcmove
mov
scas
adc
sub
jle
scas
call
push
adc
pop
mov
push
daa
je
fcomp
mov
cwtl
and
pop
shlb
ljmp
outsl
sub
fldl
and
push
mov
pop
cmp
loopne
pop
xorl
jp
fwait
movsb
lods
dec
loopne
insb
imul
xchg
add
lcall
and
cmp
movsl
push
adc
mov
cld
sbbb
and
pushl
cmpsl
adcl
lods
daa
pop
xorb
add
add
mov
cmp
and
andl
inc
andl
andb
nop
addb
rcrb
dec
or
data16
mov
or
cmp
adc
sbbb
pop
std
lcall
sub
scas
lods
insb
daa
fildl
add
ljmp
mov
add
sbb
adc
subb
add
mov
pop
xchg
sbb
shl
fildll
sub
int
or
xchg
adc
ret
pop
fidivrl
pop
movsb
pop
jae
pop
rolb
adc
addb
adc
add
test
ret
add
cmc
pop
rcrl
and
addb
xchg
add
fwait
add
pusha
mov
les
sub
out
add
repz
dec
cmp
push
sarb
pop
mov
sahf
stos
mov
adc
int
or
push
cli
or
movlps
and
pop
mov
jle
cmpl
inc
push
inc
add
inc
in
add
cli
mov
push
inc
jg
mov
inc
sbb
outsb
or
push
fisttps
lea
sbb
arpl
mov
xchg
pop
and
sub
das
jns
push
pusha
orb
cs
add
stos
movsb
stos
subb
adc
push
mov
sar
les
stos
add
call
call
jle
hlt
leave
inc
adc
mov
xlat
out
adcb
adc
push
movsb
or
addb
sbb
test
arpl
sub
add
xchg
inc
or
lods
xor
xchg
add
rcrl
pop
and
dec
adc
add
jg
and
popa
sbb
adcb
inc
sub
loop
mov
jb
push
mov
pop
and
loopne
inc
sbb
push
aas
inc
push
sub
jne
add
or
pusha
cmp
lock
sub
pusha
jbe
fimuls
dec
repnz
add
and
cmp
sub
cwtl
add
push
fs
xor
or
test
aam
scas
dec
ds
jb
es
mov
and
lea
xchg
inc
jne
pop
scas
xor
ret
cmc
pop
mov
lods
or
push
insb
scas
xchg
lock
dec
dec
popa
or
shrl
mov
movsl
stos
divb
shrl
pusha
sub
js
push
mov
or
push
sub
push
push
add
push
mov
xchg
inc
mov
mov
rcrl
loope
mov
push
loope,pt
push
jae
pop
and
sti
in
lods
and
adc
sbb
sbbb
push
mov
mov
push
cmpb
movsl
push
and
or
dec
mov
mov
pop
mov
mov
and
dec
dec
or
dec
pop
pop
add
add
lcall
scas
out
or
scas
pusha
pusha
jne
js
popa
inc
add
shrb
mov
shlb
cmp
mov
dec
cmp
or
cld
sub
test
es
xlat
movsb
dec
inc
dec
sbbb
jmp
mov
shrb
mov
es
push
xlat
xor
lock
repnz
sbb
cmpb
aaa
inc
call
fdivr
fidivs
add
in
push
dec
ficoms
pusha
hlt
es
loopne
insl
mov
aaa
pop
adcl
loop
lods
popa
or
sub
nop
mov
pop
cmp
jae
scas
fiadds
ja
add
pop
mov
push
movsl
mov
rclb
xor
les
lahf
bound
js
shrb
icebp
rcrb
pop
inc
shll
subb
mov
pushf
ljmp
cld
and
fsubrl
add
inc
rcrl
out
fdiv
loopne
shrl
addl
mov
pop
andb
or
add
subb
sbb
stos
and
inc
xor
in
lods
cli
mov
add
pop
push
and
int3
loope
mov
push
adc
aad
loop
jnp
and
pop
xlat
inc
push
cltd
stos
shll
jmp
push
mov
lea
add
push
add
lods
push
push
cmpsb
sub
mov
incb
push
les
dec
cmp
push
add
add
xcrypt-ctr
cmpsl
sbb
and
outsl
push
pop
mov
dec
fisttps
nop
rolb
dec
sub
lcall
out
pop
jmp
fdivp
mov
jns
mov
lock
and
jg
xchg
sahf
xlat
scas
cltd
pop
pusha
test
push
xchg
loopne
mov
insl
xor
xchg
rcrl
aam
xchg
xchg
inc
insb
or
dec
add
pop
pop
jmp
xor
sbb
inc
andl
clc
nop
dec
shlb
add
test
js
and
rolb
push
adc
ljmp
pop
jle
lods
add
lock
mov
mov
insl
mov
icebp
add
xchg
cli
pop
push
mov
cmpsb
in
and
cld
in
adc
mov
mov
lock
data16
jecxz
or
push
add
mov
push
insl
add
push
scas
addr16
mov
mov
imul
cmpsb
mov
sub
push
add
dec
in
sti
lcall
dec
dec
jo
push
dec
xor
pop
jge
push
lcall
sub
xor
shll
pop
lock
rclb
jo
ljmp
insl
jecxz
mov
jno
ss
or
jbe
push
out
mov
stos
fbstp
mov
lock
int3
jo
int
xor
jne
mov
fwait
outsl
sbb
or
add
insb
add
test
fdivrl
mov
lret
xchg
mov
jb
inc
rclb
rorb
inc
dec
sbb
sub
aam
nop
sbb
adc
xchg
stos
sbbb
sbb
fisttps
mov
lods
add
jo
out
xchg
rorb
ss
mov
sub
xchg
shl
mov
add
push
sub
repnz
pop
and
rol
inc
xor
or
lcall
mov
stos
repnz
outsl
repnz
div
lods
ret
rcrb
push
mov
or
mov
push
pop
push
adc
fs
or
jb
rolb
inc
das
out
mov
inc
add
pop
shlb
popa
prefetch
outsl
dec
inc
adc
inc
iret
cs
xchg
mov
mov
add
jp
and
mov
pop
and
ss
mov
dec
adc
clc
verw
cmp
int
fsubrl
mov
mov
and
popf
dec
xchg
test
fcmovb
or
nop
jno
xchg
cmp
cmc
add
popf
and
dec
fldl
outsb
stos
mov
aas
xacquire
in
pusha
sub
nop
clc
aaa
ss
xor
or
idivb
dec
add
mov
add
insb
dec
mov
rcrb
loope
adc
mov
push
dec
aas
addb
dec
push
or
push
loopne
scas
mov
dec
or
fs
sub
cmc
adc
aam
mov
imul
pop
jle
add
in
rolb
jl
notl
loopne
sub
scas
arpl
jb
pop
rorl
or
cs
shrb
cli
ja
and
mov
orl
lock
adc
lods
in
rorb
ljmp
mov
push
jo
or
sarb
jo
in
jns
shl
cmc
inc
shl
add
lret
lret
and
cmc
and
xlat
test
lahf
push
dec
jo
mov
inc
sarb
enter
dec
data16
jecxz
cmp
sbb
test
mov
aaa
mov
xchg
and
pop
jne
push
adc
rorl
push
cli
scas
test
aam
popa
and
std
adc
inc
mov
mov
pusha
movsl
movsl
fwait
and
jb
fxrstor
cmp
rcrl
xchg
enter
jns
and
or
push
xor
insb
shrl
mov
cmp
inc
fcos
mov
leave
add
push
add
sbb
mov
add
repnz
add
fs
pop
sbb
add
xlat
mov
enter
lock
cli
adc
icebp
adc
cmpsb
adc
test
push
adc
ret
es
imul
adc
pushl
add
mov
pop
xchg
rorb
les
dec
adc
lods
pop
js
int
scas
sub
cmpsl
adcb
adc
pop
and
xor
cmp
clc
push
mov
adc
into
xor
enter
scas
dec
jns
call
mov
mov
xlat
mov
je
mov
jbe
lcall
clc
std
mov
dec
hlt
cmp
sub
hlt
adc
rorb
push
loop
mov
push
cmp
push
mov
xor
cmpsb
lret
inc
daa
mov
ret
jno
push
adc
mov
and
and
es
pop
cmp
dec
pop
insl
les
hlt
push
mov
mov
popa
xor
mov
aas
adc
mov
add
incl
dec
mov
xchg
add
and
sub
mov
dec
and
in
push
jnp
adc
outsb
loop
sub
mov
orb
pop
sub
std
push
push
add
lock
shlb
and
sbb
mov
scas
sti
dec
adc
cld
cld
push
adc
cld
mov
mov
pop
sbb
pop
mov
and
pop
mov
push
pop
cs
iret
add
arpl
mov
mov
xor
cs
xchg
pop
jecxz
outsl
mov
mov
dec
mov
cmc
stos
push
dec
sub
shrb
add
fiadds
inc
jge
and
scas
jbe
incb
popa
and
shlb
sti
or
adc
jl
lcall
sub
jbe
out
push
push
jp
addl
and
pop
jae
inc
andb
test
loopne
inc
les
add
pop
inc
add
int
fistps
push
aaa
inc
add
push
jecxz
js
sub
into
mov
je
into
push
adc
sub
fwait
mov
pop
out
xchg
hlt
or
fidivs
pop
add
cld
ss
arpl
xor
jo
inc
push
das
add
xchg
sti
std
xchg
cmpsl
stos
or
cld
add
nop
fimuls
sub
add
fistpl
test
orb
cwtl
hlt
sbb
fsubl
jge
or
pop
and
xor
cmp
insl
fadds
sub
ds
lods
cli
jge
in
in
or
ljmp
add
testb
sar
adcb
push
add
add
mov
xlat
mov
or
dec
test
xlat
mov
sub
outsb
mov
outsl
mov
mov
jg
cmpsl
sbbl
add
cmp
or
dec
loopne
pop
popa
push
addb
aam
sbbb
add
mov
push
push
sub
pop
add
inc
xor
lods
inc
or
or
orb
pusha
cmc
sbb
mov
cmp
mov
sub
mov
sub
enter
inc
dec
dec
or
jo
cmc
add
adc
and
mov
outsb
inc
sub
pushf
add
add
dec
push
outsb
rolb
mov
pop
add
stos
and
add
push
dec
cmp
mov
pop
jo
or
shlb
xor
dec
shlb
xor
sub
cwtl
aaa
cltd
sub
pop
mov
psubusb
mov
cli
push
subl
adc
nop
data16
mov
lock
lea
movsb
adc
daa
jns
xor
and
mov
push
enter
aam
cmp
xlat
mov
ret
scas
movsb
test
rcll
test
les
call
cmovns
subb
daa
dec
call
das
sahf
cli
pop
and
add
ljmp
sbbl
testb
popa
pop
xlat
insl
or
add
mov
xchg
or
or
clc
add
sbb
data16
fs
add
inc
rcrb
movsl
rcrb
mov
mov
idivb
push
add
std
sub
or
stc
mov
mov
sbb
shl
bound
fildl
pop
sbbb
in
adc
xchg
scas
xchg
decb
push
push
subl
shr
nop
pop
ret
rolb
ds
fcom
lods
pop
and
je
stos
sub
subb
jno
pop
divb
sub
insl
xchg
xlat
sub
dec
movsl
int3
shrb
cmpsl
fcoml
test
lock
and
ficomps
mov
sbb
cmp
jo
and
int3
aad
lods
roll
sbb
inc
xor
xor
inc
xchg
mov
icebp
aaa
sbb
das
adc
inc
in
mov
add
add
add
add
shlb
add
xchg
sub
inc
adc
popa
add
xchg
decl
popa
sub
add
mov
add
inc
add
sbb
cmp
les
push
xor
add
inc
lock
in
and
cmp
and
mov
sahf
sbbb
imul
adc
sarb
dec
xchg
mov
mov
mov
or
fisttpl
popa
test
je
push
or
outsl
push
jno
add
fwait
shlb
push
ja
inc
and
xchg
les
into
inc
and
orl
lret
outsl
lods
ljmp
add
inc
cmpsl
add
dec
sub
and
or
push
bound
pop
push
scas
and
fildll
js
test
and
cmp
sbb
and
insb
loopne
test
cmpsb
pop
pusha
jl
cmp
rorb
ret
add
movsb
mov
mov
pop
test
inc
cmpsb
rcll
mov
pusha
adc
sub
sbb
push
std
push
fnsave
inc
or
dec
test
cmpsl
jb
sub
inc
repnz
ret
fsubs
cmc
and
push
inc
mov
push
sbb
pop
and
dec
push
cmpsb
es
sub
pop
lock
mov
loopne
sbb
pop
add
jl
cmpsl
sbb
movsl
push
add
and
insb
lea
sub
outsl
outsl
imul
adcb
mov
mov
sub
push
push
or
xchg
lahf
nop
hlt
and
add
or
stos
bound
addb
sub
fisttpll
fcoml
pop
dec
test
cmpsb
inc
push
mov
call
bound
jbe
xchg
inc
pop
loope
hlt
jecxz
jo
out
decb
pop
inc
cmpb
ret
adc
mov
add
loopne
loope
ret
xor
pop
fs
and
pusha
add
arpl
xchg
add
in
push
mov
fisttpl
xchg
loope
cmp
adc
repz
sbb
add
loopne
inc
xchg
inc
daa
rclb
push
lcall
icebp
pop
adc
adc
push
adc
xchg
sbb
and
xchg
hlt
sahf
dec
testb
xchg
add
or
cmpsb
jle
mov
sub
nop
leave
push
mov
mov
loope
push
inc
inc
mov
cli
dec
stos
mov
mov
push
mov
pop
xchg
xchg
mov
cld
lock
and
in
in
mov
adc
gs
push
test
dec
or
in
hlt
fbld
cld
mov
out
and
sbb
mov
mov
loope
adc
sub
mov
hlt
jo
push
shrb
es
adc
dec
inc
cmp
ss
and
cmp
jo
sub
xor
mov
mov
data16
shlb
aaa
enter
popa
mov
aad
je
or
sbb
and
mov
call
test
mov
dec
push
shlb
nop
push
gs
mov
or
jns
scas
and
arpl
data16
mov
outsl
push
inc
adc
adc
enter
add
add
add
outsb
xor
pop
push
scas
roll
icebp
mov
nop
push
sub
mov
inc
mov
mov
xchg
mov
repz
mov
add
jg
sbb
or
enter
jno
ret
and
inc
jbe
push
mov
movsb
sub
pop
mov
sbb
xchg
or
add
fsubl
lods
adc
pushf
xorb
out
ljmp
dec
idivl
and
jg
jo
idivl
and
lahf
mov
inc
enter
lret
fdivrs
xor
dec
int3
pop
lods
and
shl
jle
xor
or
mov
add
push
das
mov
addr16
push
add
xchg
add
add
pushl
pop
or
adc
cmpsb
movsb
and
xchg
testb
out
xchg
or
fsubrs
sbb
js
loopne
sar
add
mov
sbb
jo
xor
fwait
mov
leave
lock
popa
inc
test
adc
aaa
push
mov
push
push
mov
xor
sar
mov
push
inc
and
lahf
lret
xor
and
stos
cli
lock
and
dec
lcall
sbbl
mov
scas
and
sbbl
jle
cli
fstpt
mov
test
mov
outsl
cmp
popa
dec
add
mov
or
cmc
sbb
pop
dec
pop
jp
cwtl
lods
or
inc
sti
inc
push
test
shlb
loop
cmp
pusha
pusha
enter
mov
xchg
push
or
lods
mov
das
and
cmpsb
cli
xchg
dec
adc
aaa
adc
add
fsts
cld
or
push
push
add
or
ja
add
addr16
xor
add
push
or
and
add
ret
movsb
adc
icebp
subl
push
mulb
repnz
movsl
std
jg
xchg
pusha
cmp
das
xor
dec
loope
xor
add
daa
out
pop
inc
dec
jno
outsl
and
mov
adc
dec
lock
gs
push
sbb
mov
sub
ficoms
or
sbb
repz
test
add
rcrl
xchg
push
mov
mov
mov
nop
xor
cwtl
dec
or
mov
xchg
dec
loop
or
loopne
xchg
repz
repnz
cmc
mov
scas
aam
adc
inc
pop
sub
sub
add
jae
pop
cmpb
add
pop
insb
call
and
and
fildll
mov
push
loope
push
inc
or
fsubrs
xor
or
pop
and
pop
cmp
mov
out
loopne
pop
nop
js
dec
fbstp
daa
movsl
or
pop
dec
shrl
pop
lods
xchg
stc
pop
or
aaa
mov
pop
dec
inc
leave
pop
inc
xchg
fadds
pop
orl
aad
xor
clc
push
jle
mov
int3
push
add
mov
and
pop
sti
icebp
mov
pop
dec
in
pushw
hlt
lcall
out
push
loop
cmpsb
mov
pushf
and
inc
mov
adc
mov
mov
mov
lods
dec
xchg
mov
lods
mov
add
sbb
jl
shlb
movsl
dec
dec
movsb
or
enter
sub
xor
mov
shlb
add
and
sbb
add
pop
shrl
arpl
fdivs
jns
nop
sbb
add
xor
mov
das
mov
mov
mov
and
sub
or
es
inc
pop
cmc
sub
jg
push
adc
fcomps
sub
sbb
mov
add
imul
lcall
pop
mov
xchg
push
mov
adc
rcr
push
mov
add
mov
ja
mov
push
test
fs
push
xchg
pushl
inc
inc
push
add
sub
add
incl
lahf
push
ljmp
mov
fiadds
dec
mov
cmp
shll
hlt
jno
les
jp
imul
sbb
pop
mov
scas
es
out
push
cmpsl
mov
and
jg
or
pop
inc
or
cmpb
jle
push
orl
jo
inc
sar
out
mov
aam
inc
lcall
roll
xor
or
out
xchg
xchg
mov
aam
das
clc
inc
push
push
nop
cmp
repnz
add
push
or
or
mov
adc
xchg
inc
jne
and
xchg
adc
mov
mov
mov
stos
and
sub
ljmp
out
add
add
add
mov
mov
add
jo
sbb
pusha
or
push
push
rcrb
adc
jle
enter
adc
outsl
mov
pop
sbb
add
ret
mov
insb
jmp
call
inc
sbb
mov
mov
xor
jecxz
or
mov
mov
jmp
inc
xchg
mov
inc
ss
sbbb
out
xor
stos
jbe
dec
fwait
mov
pop
pop
inc
jb
rcrb
add
push
jno
add
pop
or
pop
or
outsl
inc
cs
add
and
rolb
jecxz
xor
push
aad
mov
mov
inc
es
rorl
push
cwtl
ljmp
test
xor
lock
or
sbb
mov
add
inc
add
bound
loopne
decb
add
orb
mov
push
repnz
push
mov
stos
adcb
les
daa
rol
cmp
lock
xchg
mov
mov
mov
jo
rol
add
push
lcall
jb
stos
mov
inc
jbe
mov
push
mov
and
add
gs
lods
cld
sub
fmull
xchg
cmp
cld
jbe
sbb
leave
and
sahf
xor
push
jp
sub
mov
jns
lcall
std
inc
addl
add
pop
xchg
daa
mov
mov
jbe
dec
pop
mov
fcomps
pop
or
outsb
jo
inc
gs
clc
adc
adc
and
dec
in
cmpb
xchg
lods
mov
mov
mov
xchg
les
add
sub
pusha
ljmp
and
xchg
xor
xchg
xor
pushf
adc
test
inc
repnz
push
mov
or
pop
xor
lret
aam
and
jmp
dec
xlat
or
les
call
imul
and
jl
test
shlb
dec
test
fdivr
jbe
jb
sbb
call
test
test
lret
rcr
fisttps
mov
addb
int
ljmp
mov
mov
out
and
incl
sub
mov
cmp
add
jae
and
dec
or
loop
rorb
mov
addl
mov
mov
outsl
mov
lcall
popa
inc
sbb
inc
sbb
cwtl
inc
sbb
inc
sbb
inc
test
jnp
mov
mov
add
nop
mov
and
xor
andb
mov
faddp
sbb
fcoml
inc
adcb
in
subl
inc
sbb
int3
in
sub
dec
scas
ret
lea
add
cwtl
loope
inc
or
xchg
adcb
adc
add
loope
inc
adc
and
gs
sbbb
or
mov
es
movsb
pop
push
inc
adc
sub
mov
mov
inc
sub
subb
adc
sbb
dec
mov
fcom
lret
sub
cmc
fwait
hlt
jg
inc
or
out
pop
cmpsb
add
xlat
jp
xchg
aas
jmp
xchg
push
mov
ret
into
and
stos
mov
adc
sbbl
jg
sahf
and
scas
or
cmpps
and
cltd
mov
loop
inc
pop
xorl
jle
inc
or
cmp
or
cmp
and
call
clc
loope
or
push
cli
add
mov
mov
shrb
push
cli
fsubs
xor
cs
les
xlat
mov
or
xor
mov
inc
inc
jns
aam
rorb
or
inc
rorl
push
mov
push
outsb
pop
inc
pop
xchg
or
call
lods
and
popa
and
mov
ret
filds
aam
add
enter
xchg
or
jbe
xor
pop
neg
lock
inc
and
sub
add
add
hlt
xor
xchg
repnz
out
xchg
and
out
mov
pop
dec
or
scas
rolb
xchg
leave
adc
aam
adc
stos
sub
push
dec
cmpsl
roll
mov
ficoms
jbe
addl
xlat
fs
stc
loop
das
fsubl
sub
xchg
ja
addr16
sub
adc
js
jbe
loop
daa
loopne
push
dec
xchg
loope
or
sbbb
pop
dec
or
dec
cld
ja
mov
icebp
pop
xchg
push
mov
adc
rcrb
fcomps
sbb
cmpsb
mov
xor
addr16
sub
repnz
lret
push
mov
sub
scas
ss
leave
xor
mov
push
pusha
xchg
push
out
push
dec
adc
in
incl
jl
test
add
cmp
movsb
pusha
sbb
pop
inc
mov
mov
push
push
push
cmpb
mov
and
xor
and
add
rolb
lahf
popa
sub
xchg
pop
lock
pusha
xorl
insl
adc
xor
mov
push
sbb
cmp
add
add
add
loope
xor
ljmp
in
fildll
inc
cwtl
and
mov
cltd
fiadds
loopne
sub
mov
jmp
cmp
loope
mov
js
cwtl
repnz
fwait
pop
adc
push
rorb
xor
mov
fsubr
in
decl
dec
mov
inc
inc
xchg
sarb
push
icebp
addb
fistpll
mov
loopne
cmc
cmc
sub
and
or
xchg
and
xchg
mov
pop
push
scas
je
pushl
push
sub
and
pusha
dec
and
inc
roll
leave
hlt
dec
sti
and
pop
jecxz
pusha
pop
loopne
ljmp
or
insb
inc
push
and
adc
cmp
inc
test
adc
add
mov
icebp
mov
mov
add
add
movsl
mov
sahf
add
mov
icebp
inc
lcall
xor
and
fldt
pushf
sub
ja
add
push
loope
js
ret
jg
adcl
xchg
or
sarb
jmp
movsb
shl
mov
js
pop
hlt
xlat
insb
adc
pcmpgtw
inc
pop
add
add
loopne
inc
popa
in
mov
sub
dec
mov
rolb
aaa
adc
int3
add
jns
ljmp
scas
ret
inc
cmp
sub
mov
xchg
adc
dec
mov
cmp
mov
mov
jo
sbb
xlat
cwtl
inc
ret
xchg
push
adc
jo
outsb
mov
fsubl
push
xchg
jno
test
cmp
loopne
icebp
xchg
test
push
dec
out
push
shrb
jg
loop
mov
pop
xlat
add
sub
dec
ljmp
push
inc
shr
ljmp
cli
scas
add
subb
sub
and
and
add
push
loop
in
push
or
pop
sub
loopne
inc
or
divb
movsl
stos
rolb
sub
and
add
jnp
xchg
stos
add
inc
xor
pop
or
xor
jmp
fcomip
xor
and
xor
add
outsb
add
adc
enter
out
mov
jb,pn
mov
pop
or
sub
aaa
mov
mov
inc
lods
sarl
repnz
adc
insb
fdivr
xchg
jb
cmp
addb
mov
xlat
out
cs
push
stos
and
adc
cwtl
jo
and
push
adc
jo
imul
pop
mov
push
mov
xlat
nop
cld
mov
mov
push
inc
push
mov
mov
ljmp
add
pop
cli
push
lea
mov
dec
mov
jle
pop
mov
cld
loopne
lock
jbe
out
and
out
sbb
hlt
decl
inc
mov
mov
imul
dec
cs
inc
dec
sbb
aaa
xor
iret
jo
cmc
mov
clc
dec
dec
fnstsw
stos
incb
ds
fidivs
cmp
add
or
or
add
mov
dec
add
nop
xchg
push
out
pop
andb
mov
loop
enter
or
xchg
push
movsb
in
lcall
add
dec
sub
jnp
clc
fcomip
lret
pop
push
mov
lock
adc
std
pusha
cld
adc
aaa
mov
mov
and
mov
loopne
push
push
stos
mov
push
xor
sub
lods
dec
push
test
bnd
dec
pop
rorb
cs
sbb
shrb
aaa
mov
jno
mov
and
or
sub
add
stos
lock
out
cmp
jo
cwtl
mov
or
cmpsb
mov
mov
les
add
les
add
fbld
fisubrs
push
cmpsl
andb
test
dec
lret
icebp
out
xchg
add
mov
fisubl
das
jbe
mov
or
cmpsb
pop
hlt
sbb
add
cmp
cmpsb
mov
imul
dec
dec
jo
xlat
nop
les
ljmp
pop
xor
jne
push
aam
add
inc
dec
das
xor
dec
dec
scas
mov
lcall
jmp
nop
pop
dec
lock
sub
movsl
add
inc
inc
pop
sbb
rolb
mov
out
adc
aam
add
mov
add
orb
shrb
jg
mov
add
or
fcom
fwait
and
adc
cli
mov
mov
sbb
fildl
call
roll
inc
mov
sub
lock
sub
roll
mov
sti
pushl
jns
movups
xor
mov
push
push
jo
shrb
pushl
add
add
xchg
bound
or
push
or
adc
adcl
add
mov
add
jmp
stos
adc
pop
mov
jne
movsl
sub
testb
sub
nop
add
mov
nop
or
mov
push
xchg
or
add
or
jo
pop
movb
sbb
jne
sbb
add
and
loopne
cmp
cs
add
mov
and
enter
mov
jo
out
mov
add
xor
out
in
lock
add
mov
xor
pop
fwait
cli
or
mov
mov
rolb
push
xchg
mov
mov
cli
mov
sub
mov
orb
or
add
test
xchg
sub
incl
mov
mov
in
mov
dec
push
push
and
dec
pop
call
test
enter
push
push
test
vmovups
es
or
and
popf
mov
mov
popa
jl
jle
add
adc
sbb
fbld
mov
addb
adc
daa
or
push
pop
pop
lea
scas
add
dec
sub
pop
jmp
cmpsl
or
pop
push
and
inc
test
mov
cmpb
daa
bound
xor
cmp
cli
in
inc
pusha
dec
pop
rolb
adc
lds
loope
sti
mov
andb
push
and
cmpsb
add
sbb
mov
add
sbb
inc
sbb
mov
es
xor
mov
popa
adc
adc
xor
cmp
sub
mov
pop
adc
and
xchg
inc
cs
in
add
jecxz
mov
mov
rorb
pop
add
int3
mov
sub
mov
sub
icebp
in
pop
and
add
dec
jne
mov
shl
dec
pop
das
sbb
or
inc
inc
jmp
aam
test
dec
push
add
xchg
cmc
pop
xchg
cs
and
mov
popf
dec
xchg
lock
mov
negb
or
xor
cmpsl
dec
dec
mov
rcr
movsb
and
push
flds
mov
imulb
or
lcall
jb
mov
or
add
inc
shl
hlt
call
inc
or
mov
jbe
xor
add
xor
lods
sub
in
decl
add
cltd
pop
or
add
loopne
or
sbb
push
pop
faddl
or
add
fs
lret
xchg
aas
or
mov
inc
xlat
mov
scas
xor
jle
andb
add
clc
pop
mov
es
mov
lret
push
bound
sbb
or
xchg
or
xchg
pop
testb
xchg
inc
andl
mov
pop
add
mov
push
or
push
add
outsb
and
cmp
test
jle
mov
loop
arpl
jo
movsb
pop
jp
pop
and
lahf
pop
das
and
add
mov
js
and
sub
push
pop
lret
jg
mov
cltd
xor
mov
sub
add
sub
insl
aam
outsb
sar
push
lods
enter
enter
arpl
hlt
pop
push
add
or
outsl
sbb
mov
xchg
pop
jg
push
aas
push
call
add
test
pop
mov
mov
push
cld
outsl
or
test
or
pop
push
addl
movb
mov
mov
or
xchg
sub
adc
test
fcomip
xor
adcl
mov
pop
sbbb
mov
pop
popl
add
mov
das
or
loopne
mov
hlt
adc
mov
pop
and
lods
aaa
inc
popa
pop
outsl
adc
nop
aaa
test
dec
cmp
insl
clc
push
mov
jbe
aam
sub
add
pop
xchg
ds
and
xchg
jp
mov
push
inc
inc
add
shlb
sub
cli
mov
dec
pop
inc
mov
shlb
inc
popl
mov
lahf
andb
int3
sbb
or
loop
mov
dec
pop
dec
sub
push
shll
mov
insb
fcoms
add
inc
or
inc
jne
cli
inc
or
mov
movsb
mov
in
add
add
add
out
sub
mov
or
pop
xor
mov
or
pop
sub
mov
add
adc
lods
push
popf
dec
cmpsl
xchg
es
or
dec
loop
lret
aam
enter
hlt
sbb
or
mov
jl
enter
add
sub
loopne
adcb
add
push
pop
pop
dec
test
in
add
inc
fldcw
mov
xlat
movsl
sub
or
sti
or
rorb
xor
mov
orb
cli
mov
shlb
adc
adc
addb
or
add
mov
mov
nop
sub
shll
orb
inc
dec
data16
aad
test
les
fidivs
scas
pop
int3
add
or
push
je
stos
dec
and
outsb
cmpsb
fisttpll
pusha
mov
add
inc
sarb
xchg
pop
mov
andb
lret
mov
pop
dec
dec
rolb
xchg
or
inc
sub
dec
pop
sub
mov
sub
out
mov
stos
lret
sbb
mov
and
or
daa
dec
sbbb
adcb
pusha
xorb
jg
mov
mov
cmpsl
ljmp
or
adc
or
jg
push
loope
xor
add
sub
sarl
add
sbb
es
cwtl
mov
inc
cmp
enter
sbb
test
dec
cmpsl
inc
shlb
fimull
bound
mov
xchg
xchg
lret
inc
add
fidivs
mov
or
dec
push
sub
mov
mov
mov
cmp
mov
loopne
bound
jg
cmc
aaa
ds
mov
inc
cltd
jp
out
dec
shlb
lock
aam
dec
inc
pop
dec
sbb
inc
and
cli
ja
jle
and
or
pop
fists
push
xchg
loopne
and
in
push
and
cld
daa
sub
push
mov
xor
stos
add
in
andb
fiadds
fcmovnu
pushf
insb
clc
adc
dec
adc
sarb
sbb
aaa
inc
and
add
movsb
lods
or
or
call
or
adc
mov
incb
ss
push
loop
addl
loope
cld
fistpll
nop
mov
adc
and
jmp
enter
nop
mov
dec
sbb
dec
mov
dec
mov
xchg
push
test
sub
xchg
inc
aas
jo
loopne
out
push
shr
mov
or
dec
adc
mov
inc
sti
cmp
lret
test
jne
add
bound
mov
test
das
shl
mov
and
xchg
push
andb
ret
int3
das
je
popf
jg
adc
jmp
ljmp
adc
dec
orl
ss
mov
push
rorb
mov
dec
or
repnz
xchg
mov
pusha
scas
sub
and
ss
orb
addb
adcb
outsb
stos
loop
jl
les
test
jo
dec
push
xchg
lock
pop
or
add
cs
dec
div
mov
push
pusha
xor
addb
test
mov
ljmp
inc
add
xchg
dec
jbe
rolb
xchg
xchg
jnp
dec
les
scas
jecxz
mov
mov
sub
inc
mov
adc
jp
sub
addb
outsb
mov
or
xor
jp
andb
pop
std
and
iret
ret
push
inc
sub
data16
mov
push
add
incl
mov
xlat
cwtl
das
addl
cmp
xchg
popa
xchg
mov
push
lea
inc
popa
push
mov
or
movb
pusha
adc
sub
jb
aaa
cld
int
or
mov
dec
push
loopne
lret
add
fidivs
call
les
jo
mov
pop
das
aas
and
add
pop
pusha
mov
in
jne
out
int3
adc
add
test
add
jg
or
add
mov
orb
repnz
add
pop
stos
call
adcl
mov
dec
insl
push
mov
inc
inc
sbb
dec
mov
data16
xchg
or
nop
je
sub
jnp
sbbb
add
sub
lahf
xchg
lock
mov
add
cmpsb
lcall
mov
or
mov
insl
mov
cmpsl
xchg
outsb
xor
jmp
mov
std
and
push
mov
outsl
xchg
mov
xor
push
or
add
or
add
xlat
adcb
imul
add
push
movsb
adc
sub
push
cmpsb
lcall
mov
sbb
sarl
decl
add
pushf
mov
arpl
xchg
movsb
std
mov
xchg
add
idiv
aaa
bound
mov
cmpsb
shlb
daa
lock
pop
scas
and
add
pop
add
cli
movsb
adc
jne
or
sbb
pushf
and
subb
add
lock
aam
push
adc
mov
inc
adc
js
enter
popa
add
dec
clc
pop
and
repz
push
or
pusha
mov
jle
popa
add
adc
fsubl
lock
nop
mov
add
add
add
push
or
pop
test
movsb
pushf
scas
xor
jmp
rcpps
pop
aam
pusha
push
and
lock
outsl
lret
add
loope
dec
pop
gs
sub
test
incl
subl
mov
pop
rcll
movsl
adc
mov
data16
sbb
adc
orl
cld
push
dec
test
push
xchg
add
cli
xor
cli
push
inc
jmp
sbb
loop
inc
add
mov
mov
or
pusha
test
inc
enter
lock
jb
jo
sub
fs
fwait
xchg
or
xchg
push
ret
cli
dec
rcr
pop
outsb
pop
push
cwtl
jno
dec
dec
push
sbb
jo
nop
adc
push
mov
lods
or
shlb
daa
jle
rcrl
add
mov
sbb
sub
push
cs
mov
mov
std
push
mov
cli
dec
lods
jno
cwtl
sbbb
push
push
inc
mov
test
adc
test
xchg
sub
push
arpl
push
decl
dec
cs
add
inc
mov
mov
fidivrl
aaa
xor
xchg
loopne
add
mov
push
mov
lea
mov
js
call
fcmovnu
push
nop
ss
push
xchg
inc
bound
fdivr
jg
adc
das
add
into
inc
cmpsl
das
frstor
cmp
or
dec
sar
jmp
mov
push
or
add
test
enter
mov
push
push
or
mov
or
and
add
adc
bound
and
mov
shrb
mov
int3
inc
in
mov
subb
mov
movsb
push
into
add
lret
xor
xor
dec
jb
xor
pop
pusha
pop
les
push
out
and
cmp
test
add
add
sarl
xchg
mov
xchg
jecxz
lahf
loop
xlat
sbbl
hlt
jg
movsb
adc
pushf
pop
adc
inc
add
jnp
fwait
adc
push
adc
ja
xorl
or
add
adc
dec
inc
adc
decl
nop
or
icebp
rorb
xor
jo
sub
add
mov
mov
mov
or
cmpsl
ljmp
mov
mov
pop
adc
and
mov
xchg
enter
add
xor
rcll
stos
jl
xor
test
jbe
mov
add
das
test
adc
and
and
add
add
dec
decl
mov
pop
test
add
loop
push
loop
fdivrl
and
mov
xchg
xor
inc
inc
aaa
cld
inc
loope
xlat
xchg
xor
outsb
push
nop
sbb
push
sbb
jp
aaa
xor
sbb
ljmp
adc
nop
jl
push
shlb
adc
jg
lcall
xor
xor
mov
mov
inc
xlat
mov
inc
jg
decl
enter
and
cli
jle
push
push
pop
cwtl
mov
adc
stos
pusha
mov
mov
ljmp
bound
mov
in
nop
jle
and
and
or
push
pop
lods
stos
inc
cmpsb
stos
and
dec
xor
pop
xchg
mov
enter
scas
lcall
dec
push
jne
adc
lret
aaa
mov
lods
xchg
adc
xor
jo
jl
jmp
mov
fcomip
pushl
pop
xlat
dec
test
dec
out
pusha
adc
bound
xor
dec
mov
jp
popa
cs
decb
lock
popf
push
push
mov
jno
xchg
adc
shlb
cmc
ljmp
push
clc
push
stos
push
cmp
popa
push
das
test
stos
adc
fildll
in
orl
cmp
adc
sub
std
mov
andb
bound
mov
enter
stos
pop
inc
mov
repz
inc
adc
inc
lock
fwait
clc
dec
add
negl
sbb
je
insb
loopne
hlt
in
je
mov
pop
shll
inc
pusha
outsl
dec
mov
shrb
mov
cmp
aas
lret
xor
pop
mov
sbb
pop
loopne
es
insb
je
push
ds
cld
mov
cmp
sub
pop
push
lret
xor
mov
mov
add
push
dec
push
pop
lahf
inc
cmp
adc
sub
sbb
cli
add
es
jg
sub
pop
mov
mov
push
and
dec
mov
adc
in
add
mov
mov
or
jns
shlb
add
repz
sbb
or
xor
push
sub
daa
lahf
mov
adc
add
xchg
aam
mov
sarl
aam
int3
adc
add
xor
pop
xlat
faddl
push
ret
mov
dec
movsb
xor
orb
mov
jae
mov
fiadds
jno
jbe
push
sarb
lret
cmp
sbb
mov
and
cmp
lods
xchg
mov
xor
orl
cmp
movsl
mov
add
test
xorb
cs
repnz
sub
and
lcall
sahf
test
xlat
mov
or
outsl
fcmovu
pop
add
adc
sbb
pop
inc
pop
test
xchg
xchg
inc
dec
pop
dec
out
stos
lods
fisubrs
dec
add
inc
popa
rcrb
movsb
lahf
and
insl
loop
inc
cs
add
add
dec
aam
loopne
add
mov
sub
add
aam
push
mov
mov
and
adc
add
xor
dec
clc
shrb
or
cmpsl
xor
lret
rorb
dec
add
and
add
push
inc
mov
mov
mov
addl
add
sbb
add
mov
ret
adc
xorb
movsl
pop
pop
sub
stos
sub
pop
sahf
inc
dec
and
test
pop
mov
dec
andb
rcl
pop
fadds
lret
push
mov
imul
add
mov
add
xchg
and
push
in
and
scas
sub
or
mov
aad
fwait
mov
cmp
jle
fisubrl
lock
sbb
dec
decl
test
rcrb
xchg
adcl
cmpb
shlb
inc
pop
inc
rorb
shrb
aad
mov
adc
or
repnz
dec
inc
jae
add
xchg
xchg
test
mov
mov
jmp
sarl
hlt
das
subb
add
cmp
xchg
movsl
mov
xchg
scas
sub
repnz
shlb
das
addb
xorb
jae
es
loope
test
test
pop
pop
add
cmp
sub
iret
insl
xchg
loop
mov
icebp
mov
add
add
call
push
xor
or
mov
add
pop
ret
add
push
adc
inc
adc
cli
cli
mov
stos
inc
mov
xchg
inc
sub
xchg
adc
adc
pop
pop
rorl
pop
jle
mov
repnz
mov
dec
pop
fisubs
gs
adc
cld
jmp
mov
inc
add
xor
mov
in
cmpsb
and
ja
dec
add
xor
push
out
cmp
pop
popa
inc
enter
jg
and
repz
inc
rclb
mov
outsb
incl
jae
es
shll
add
mov
push
jo
pop
and
incb
iret
xchg
pusha
pop
adc
sbb
sub
bound
push
pop
add
and
cmp
loopne
test
dec
sbb
xchg
shrb
or
add
mov
mov
data16
xchg
mov
and
scas
loopne
sub
filds
loope
inc
add
mov
add
push
xchg
inc
cmp
pop
mov
mov
dec
jle
mov
shlb
add
loopne
cmp
pop
dec
shll
push
mov
loope
cmp
ss
insb
push
cmpl
adc
lock
test
andb
inc
adcb
sti
mov
jl
inc
cmp
sub
and
outsb
rorl
lcall
mov
mov
mov
aam
enter
fiadds
pop
ja
lock
xor
sub
les
push
sbb
icebp
dec
popa
into
mov
clc
scas
ror
lret
repnz
sub
add
mov
add
pop
mov
xor
pop
and
pusha
mov
stos
imul
mov
add
add
dec
subb
addl
dec
adc
pusha
push
xlat
and
xchg
mov
push
mov
ds
outsl
push
jo
adcl
push
sbb
adcb
or
pop
les
inc
inc
lret
push
in
rolb
aam
and
or
inc
das
cli
xchg
xchg
test
xor
dec
enter
adc
rorb
push
dec
cmp
xlat
jo
and
test
in
push
bound
hlt
clc
and
inc
dec
mov
sbb
add
pusha
dec
push
adc
xor
xchg
loop
mov
fs
mov
xchg
stos
rolb
pop
push
xlat
dec
or
push
fbld
mov
std
out
xchg
and
lcall
mov
fwait
add
mov
cmp
add
sbb
pushf
sbbl
ficompl
mov
scas
add
jg
cmc
mov
test
sbb
push
adc
lock
push
aad
xlat
incl
cld
push
pop
dec
pop
daa
xor
daa
inc
push
cmp
pop
mov
scas
les
pop
loop
add
fists
shl
and
scas
sub
dec
jo
pop
cmp
pop
inc
jmp
cltd
rcll
fcmove
inc
cmp
sub
add
cmp
and
xlat
ljmp
and
adc
inc
xor
sub
add
inc
push
cmp
add
inc
lcall
pop
bound
dec
mov
hlt
jo
adc
xor
cli
ret
fbstp
jb
push
lret
or
jbe
adcb
jg
push
add
pop
mov
shlb
ljmp
and
out
mov
sbb
out
adc
mov
pop
adc
aaa
stos
inc
jmp
aaa
lods
in
jmp
inc
mov
aaa
in
lret
adc
nop
push
xchg
cmp
lock
fnsave
je
fnstenv
cmp
pop
sub
lods
sbb
xchg
mov
push
or
nop
gs
in
cmpsl
pop
adc
mov
adc
adc
sbb
cmp
push
add
cmp
mov
adc
cwtl
int
aaa
out
fdivr
outsl
push
xchg
gs
pop
adc
add
sub
sub
fsubrs
int3
fidivs
cmp
mov
ja
test
cld
orb
mov
fsubr
add
cli
stos
sbb
arpl
mov
xor
aam
mov
fwait
clc
lock
jb
bound
add
add
jb
pop
aam
lds
mov
in
inc
gs
mov
pop
add
mov
add
or
cli
or
mov
inc
incl
and
push
adc
sub
hlt
outsl
mov
push
movsb
adc
or
lds
out
rclb
xchg
push
shl
xchg
xchg
sbb
out
push
or
dec
lods
sub
lods
fcoms
ljmp
subb
test
push
test
arpl
mov
fisubs
hlt
jg
or
in
push
pop
fstl
dec
aaa
rclb
es
leave
pop
mov
add
dec
mov
xchg
fdiv
push
inc
outsb
data16
inc
xchg
sub
mov
inc
nop
dec
arpl
fisubs
push
xlat
stos
loopne
dec
addb
pop
pusha
cmp
adcb
fs
and
push
inc
xchg
loopne
lock
dec
adc
sbb
add
mov
loopne
cmp
xor
test
mov
call
cmp
imul
cmp
or
push
inc
xor
adc
insb
cli
stos
cmp
xchg
jb
cmpl
rclb
movsl
dec
xchg
sub
ss
add
inc
sub
lret
adc
push
ret
cmp
loop
lcall
and
dec
mov
lods
cmp
sub
das
adc
mov
fidivs
mov
ljmp
cmp
inc
push
or
push
inc
or
icebp
xchg
rolb
add
dec
add
cmp
adc
lods
rorl
scas
movsb
lock
dec
sub
and
jb
test
mov
mov
or
xchg
sbb
clc
mov
fdiv
mov
mov
movsb
out
nop
sub
das
cli
dec
push
mov
push
fidivs
aas
push
mov
jne
lods
xor
sub
xchg
lock
test
outsl
stos
mov
dec
push
push
mov
dec
jp
pop
sbb
sbb
jmp
nop
push
shlb
jmp
pop
icebp
pop
ljmp
mov
sub
sub
bound
insb
and
mov
dec
xor
add
sub
mov
loope
ficomps
icebp
xor
push
aas
add
xor
fiadds
test
loopne
inc
daa
add
mov
ljmp
jle
bound
xor
int
and
nop
lods
mov
scas
sbbb
hlt
add
lcallw
ljmpw
movsl
adc
mov
or
nop
lds
push
and
jl
push
dec
rorb
enter
mov
rolb
add
sub
sub
dec
or
outsb
fiadds
add
push
sub
add
mov
orb
dec
js
mov
lret
test
hlt
pusha
xor
or
adc
dec
push
add
rorb
xchg
add
andb
lahf
arpl
ss
call
repnz
push
mov
mov
sub
test
add
add
inc
cmpsb
out
xor
into
lcall
mov
add
jl
push
add
repnz
add
push
inc
and
xor
sub
add
dec
mov
pop
fildl
pushf
je
push
add
pop
dec
cmc
cmpsb
mov
inc
cmc
ret
cli
outsb
out
add
stos
into
add
insl
xorb
mov
jbe
imul
lock
mov
and
add
xor
lock
lods
mov
xchg
rolb
std
inc
mov
dec
stos
dec
data16
jle
sbb
sbb
adc
hlt
mov
les
data16
rcll
jle
lods
test
add
testb
sbb
lret
cmp
rorb
inc
push
test
inc
or
push
out
dec
push
sbb
ret
mov
mov
mov
add
rorl
adc
push
push
mov
mov
dec
adc
or
inc
loop
adc
sahf
aad
xor
or
fs
adc
push
roll
xorb
cwtl
and
cld
push
push
add
lods
nop
push
mov
stos
scas
out
mov
test
xor
cwtl
mov
out
pop
inc
ret
sbb
testb
pusha
jbe
or
scas
lcall
test
cltd
out
add
movsl
bound
movsl
lods
pop
cmp
or
popf
jge
adc
xor
add
pusha
or
sbb
xlat
sbb
push
dec
mov
subl
add
movsb
xorb
xchg
or
ss
add
mov
lea
ljmp
ss
fimuls
rorl
and
cmpsb
mov
repz
add
cmpsb
inc
or
aaa
inc
mov
jecxz
fbstp
addb
add
ret
hlt
add
jno
mov
outsl
or
daa
and
ljmp
push
cld
mov
movsb
in
out
clc
subb
lods
repz
ret
sbb
rcrb
js
pop
mov
cmpsl
inc
daa
and
mov
andb
sub
pop
test
incl
sbb
push
add
filds
out
xchg
in
inc
enter
adc
mov
jecxz
pop
add
adc
dec
pop
add
mov
dec
or
mov
orl
dec
addb
add
addb
addb
push
sahf
mov
out
clc
fbstp
orl
dec
sbb
add
inc
das
fidivs
sarl
sbb
lcall
push
inc
xchg
inc
push
add
mov
or
cmpsb
sbb
in
fadd
addb
insb
aaa
pop
or
subb
bound
mov
imul
pop
call
push
mov
dec
loopne
pop
pushf
pusha
pop
inc
pop
int
sbb
mov
add
add
nop
mov
jae
mull
or
xadd
sbb
xchg
fwait
push
sub
sub
sub
xchg
sbb
les
or
mov
mov
cli
xorb
dec
cld
jg
add
and
sbb
inc
adc
cmp
and
mov
adc
sbb
adc
es
pop
push
popa
sub
add
daa
js
cmpsb
das
xor
sbb
adc
hlt
pop
and
shrl
and
mov
push
inc
dec
in
shl
lahf
clc
dec
and
aam
in
es
mov
ds
adc
push
nop
incb
mov
lahf
andl
cli
movsb
inc
insb
jmp
cmpsl
ljmp
mov
add
dec
pusha
or
movsb
pop
jmp
cmp
and
loop
or
cmp
ret
jg
icebp
loopne
scas
repnz
xchg
adc
mov
and
add
out
and
inc
and
lock
and
dec
test
sarb
rclb
and
mov
cmp
out
mov
xor
test
cwtl
and
mov
push
jne
inc
jmp
xor
add
and
fldl
add
xor
xchg
xor
xor
fstpt
daa
pop
push
lds
dec
cltd
xor
pusha
inc
pop
js
negl
xor
sbb
and
call
adc
addb
loop
lea
out
dec
jg
dec
add
js
dec
pop
scas
insb
xor
jbe
push
add
ds
in
ljmp
xchg
popa
enter
xor
lock
and
nop
pop
push
rol
sub
push
pushl
sub
testb
repz
clc
cwtl
hlt
pop
jb
cmp
inc
xchg
inc
and
lret
add
sub
pop
mov
cmp
and
xchg
loop
bound
xor
es
add
inc
dec
sub
loop
pop
and
rolb
fldl
mov
fcoms
jne
nop
andb
mov
adc
and
mov
or
mov
push
push
rcrb
add
shlb
test
leave
pushl
testb
stos
xlat
sarb
jo
jbe
push
dec
jo
xor
inc
lods
rol
dec
cmpsb
pusha
pop
adc
mov
lret
loop
imul
fisubrs
add
push
inc
test
nop
xchg
repnz
cld
push
inc
stos
int3
fwait
repnz
cmp
out
outsb
mov
push
outsb
ljmp
pusha
xor
jnp
ljmp
popa
repnz
sbb
fbld
add
inc
adc
popa
pop
fbstp
push
sub
popa
iret
lods
xchg
inc
pop
mov
mov
icebp
add
mov
rolb
add
shlb
dec
gs
mov
jbe
push
rcll
inc
lock
adcl
ds
mov
cmp
inc
dec
adc
jp
xchg
xchg
scas
sarb
fildll
push
das
jo
and
push
ljmp
nop
pop
mov
les
add
stos
fdivrp
sti
add
xor
push
fwait
or
outsb
dec
xchg
add
int
pop
decl
mov
gs
push
push
push
adc
nop
cwtl
jns
das
lock
inc
cmp
jg
shl
mov
sbb
fbld
mov
or
or
loope
pop
mov
pop
mov
add
push
aam
mov
std
enter
jmp
lret
jo
ret
and
jo
and
rorb
sbb
and
decl
push
mov
dec
cli
xchg
subb
xchg
dec
inc
sbb
add
xchg
stos
cmp
sbb
icebp
nop
cmp
insb
sub
and
icebp
and
mov
nop
add
push
mov
fmull
lds
fwait
push
aam
adc
stos
lcall
jbe
negb
andl
pushl
mov
jle
outsl
mov
add
xor
ljmp
mov
pop
loope
push
push
xor
in
aaa
icebp
or
pop
mov
or
or
and
mov
pusha
mov
push
and
sahf
push
jecxz
decl
or
repnz
xchg
push
cmpsl
inc
xlat
loopne
bound
mov
mov
mov
push
sub
xor
sub
mov
xchg
push
out
bound
ret
stos
inc
loopne
sbbb
dec
and
mov
sbb
mov
dec
add
pushf
lahf
xlat
adc
out
subb
pop
add
push
ljmp
les
loopne
or
mov
add
mov
adc
int3
mov
stos
xor
mov
test
std
cwtl
jns
loop
push
sub
pusha
jle
sbb
cmpsl
mov
nop
or
clc
pop
inc
inc
data16
sahf
xor
shll
pop
mov
jb
push
psubusb
push
pop
push
rcrb
sbb
out
test
dec
mov
add
push
cli
fstpt
adc
adc
dec
push
or
push
subb
stos
mov
pop
rcrb
inc
cmpsb
xor
rcrb
stos
pusha
xchg
insb
inc
ret
aaa
or
nop
aaa
loop
cmp
adc
xor
mov
in
das
shl
sub
or
inc
aam
xor
mov
test
loop
xchg
sbb
mov
and
add
jge
mov
ss
dec
repnz
mov
shrb
cmp
adc
sbb
mov
sub
mov
sbb
cmp
xor
mov
cmpsb
push
dec
push
xor
sti
xchg
adc
pop
ljmp
ja
jp
or
inc
pop
adc
inc
and
dec
repnz
xor
fucomp
fildll
std
nop
ret
xor
jb
ljmp
cmp
pop
mov
jmp
pop
cmp
adc
push
scas
sub
test
stos
adc
mov
hlt
mov
pushf
sahf
subb
nop
cmc
nop
xor
pop
inc
out
add
sub
add
std
mov
stos
shlb
sahf
pushf
cmpsb
adc
fiadds
dec
mov
cld
xchg
ss
inc
sub
push
inc
aas
adc
loop
scas
jl
xchg
add
mov
hlt
push
and
je
lods
fdivrl
mov
add
scas
jo
cmp
movsb
pusha
sahf
sahf
lods
daa
cmpps
push
faddl
add
idiv
cmp
and
pop
push
fdivrs
pusha
pop
movsl
mov
rorb
dec
or
fdiv
incl
enter
std
dec
cwtl
adc
sbb
fs
call
insb
dec
andb
std
cltd
dec
push
aam
push
add
adc
and
scas
mov
mov
pop
adc
xor
stos
inc
jo
sbb
pusha
add
add
notb
push
mov
lcall
push
adc
out
mov
jp
dec
cmp
scas
shlb
dec
std
add
sub
dec
add
call
mov
ljmp
test
loop
inc
pop
or
mov
popl
add
sbb
dec
aam
enter
mov
add
adc
testb
insb
mov
sbb
loopne
pop
dec
jl
or
in
adc
data16
test
mov
mov
in
xchg
stos
sub
mov
adc
mov
stos
ret
sub
sbb
cmpsb
xchg
mov
cs
shrl
and
mov
cmpsl
or
movsb
repz
adcb
jle
rolb
add
sub
aam
sub
add
inc
mov
roll
jg
inc
mov
movsl
andb
xchg
mov
addl
movsl
and
pusha
add
decb
add
mov
lret
aaa
in
xchg
jp
leave
clc
data16
lods
and
pusha
and
mov
cmp
bound
sub
aam
repz
xor
adc
push
loopne
add
jno
shlb
movsl
test
aas
dec
cmpsb
sub
stos
loopne
icebp
hlt
inc
inc
loop
adc
fdivs
jp
push
xchg
out
icebp
pop
adc
test
pop
adc
jno
jecxz
les
je
loopne
out
nop
mov
test
scas
enter
xchg
add
pop
mov
jbe
aam
test
dec
out
in
xor
mov
mov
xchg
jbe
fildll
test
rclb
nop
pop
mov
pop
fisubrs
push
xchg
add
inc
mov
into
mov
sub
sarl
pop
mov
sub
lods
cmp
into
mov
loopne
cltd
push
and
inc
add
rclb
push
sahf
mov
or
pop
pop
add
dec
scas
fcoms
add
push
add
add
shlb
dec
mov
das
mov
data16
movsl
pop
add
mov
mov
mov
or
insb
add
sub
xor
push
push
sbb
loopne
mov
push
add
inc
pop
and
add
pop
dec
jbe
pop
add
inc
or
cltd
gs
nop
pusha
fdivr
push
cmpb
jns
and
sahf
cltd
cwtl
xlat
mov
mov
dec
popa
repz
lock
pop
adcb
mov
adc
sbb
enter
movsl
adc
int
cmp
push
add
and
cmp
and
add
push
ret
out
push
push
add
jae
sub
clc
aad
push
bound
ljmp
push
repnz
outsl
ja
sub
dec
pop
ret
into
pop
push
jnp
or
mov
gs
lcall
or
add
dec
jle
scas
sub
mov
daa
repz
scas
xchg
mov
pusha
add
lods
jp
cs
addb
test
in
fcomps
adc
in
imul
pushf
push
mov
pop
enter
push
mov
add
push
or
outsl
xchg
push
rolb
and
std
inc
push
std
sti
pop
lock
rcll
xorl
pop
xorl
repnz
jmp
pop
faddl
inc
inc
adc
popf
dec
shr
add
andb
je
adc
and
es
add
adc
pop
sub
filds
popa
jl
sbb
dec
sahf
inc
or
js
jmp
push
clc
xchg
inc
mov
dec
add
xchg
aam
fwait
dec
bound
test
xorl
movl
inc
sahf
jp
xlat
push
cs
add
mov
jmp
push
repnz
lret
lds
xor
das
in
movsb
sub
movsl
dec
jb
and
or
inc
push
data16
cmpsb
push
sub
cli
add
inc
sub
mov
add
mov
mov
clc
dec
out
loope
add
in
loopne
cs
fs
pop
pop
ret
push
or
xchg
sub
xor
or
sub
cli
dec
call
notl
cmpsb
mov
push
shrb
scas
in
and
xchg
insl
jno
dec
and
loopne
and
mov
dec
mov
push
sbb
mov
pop
in
mov
xchg
loopne
adc
jp
pop
pop
je
add
cmp
in
sub
add
sbb
adc
xchg
icebp
mov
push
add
insb
loopne
add
mov
adc
mov
pop
push
add
push
decb
or
mov
push
push
loop
dec
and
sbb
jg
jo
out
in
and
hlt
xlat
lock
and
add
sbb
es
adc
pop
xor
xchg
cmp
push
jnp
data16
stos
add
mov
insl
jmp
mov
and
mov
mov
add
jmp
shr
movl
loopne
dec
cmp
inc
in
xor
xor
add
bound
adc
test
imul
fs
aam
mov
and
mov
inc
xchg
or
mov
mov
pusha
pusha
cmpsl
pop
fs
push
xor
shr
mov
out
popa
dec
loopne
lods
add
pop
pop
sub
lahf
movsb
mov
add
sub
sbb
dec
jg
movsb
pop
sbb
or
and
rclb
test
mov
js
shl
adc
or
adc
push
and
ss
inc
xchg
les
adc
dec
es
data16
jmp
mov
mov
and
lods
sub
gs
dec
add
jne
jns
je
cmp
push
push
pusha
adc
mov
add
stos
scas
das
add
dec
testb
lods
xchg
pop
push
repnz
in
in
jbe
push
shl
lret
xchg
xor
nop
add
mov
adc
js
adc
sbb
mov
popa
mov
fdivl
sub
jns
push
mov
sub
fs
rcr
cmp
andb
enter
fdivr
mov
and
mov
rorb
sub
and
jne
les
enter
mov
test
adc
jmp
loopne
pop
test
mov
orl
dec
fdivrl
aam
cmc
push
mov
mov
or
lods
ffree
mov
das
std
ljmp
pushf
push
xchg
or
mov
std
add
int3
mov
sbb
gs
cmc
and
test
stos
in
xchg
mov
movsb
mov
sti
add
rol
lods
or
testb
adc
sub
push
mov
mov
pop
xchg
cmp
cmp
push
mov
bound
mov
dec
mov
aaa
ret
sbb
ret
and
push
adc
mov
int3
adc
orl
rclb
loope
enter
or
mov
lret
iret
andb
fidivrs
andl
pop
sbb
xchg
jo
dec
inc
push
repnz
icebp
adc
jo
xor
loop
add
jbe
push
cmp
pop
dec
call
out
jle
cmp
loopne
jp
add
fdivl
pop
notl
fst
or
fsts
and
mov
test
test
in
out
cltd
mov
ja
leave
push
out
enter
out
adc
imul
add
sub
add
cmp
addr16
inc
push
daa
sub
and
mov
fbld
ljmp
ljmp
mov
testb
lret
or
cld
outsl
rolb
out
fidivrs
cmpsb
inc
rolb
shll
subl
pop
sub
push
sbb
rorl
jp
and
xor
testl
dec
mov
inc
pop
fistpll
hlt
hlt
and
lock
mov
add
add
push
ljmp
push
popl
add
repz
sub
das
sub
dec
lret
ljmp
add
lea
jo
dec
stos
call
lock
push
jg
jnp
bound
adc
push
iret
add
and
sub
and
pop
mov
leave
jp
test
jno
mov
jae
mov
jno
sub
jmp
lock
gs
and
adc
mov
filds
dec
es
es
or
or
and
dec
cmc
das
cli
push
pop
jp
shll
cmp
pop
dec
sbb
nop
inc
dec
xor
fiadds
hlt
in
repnz
stos
dec
test
sub
sti
pop
xchg
mov
jb
jge
ljmp
push
insb
xor
dec
mov
xchg
les
adc
aam
pop
cmp
ljmp
sub
jbe
or
aam
orb
pushl
sub
sbb
das
xor
xor
popa
or
fbstp
add
mov
rolb
or
mov
adc
pop
and
mov
ljmp
add
push
mov
mov
loopne
ds
sub
adc
add
insb
inc
repnz
daa
mov
lock
mov
mov
mov
movsl
or
daa
popa
dec
int3
cwtl
pop
lock
clc
pop
pusha
dec
in
pop
loope
out
hlt
cmpsb
pop
pusha
fcompl
dec
fsubrl
sbb
jns
jns
ljmp
clc
nop
hlt
sbb
mov
sub
dec
mov
es
inc
cmp
jb
outsl
pmaxub
decl
das
out
jb
push
daa
push
adc
push
dec
push
in
add
add
dec
ss
mov
or
sbb
pop
push
aas
push
adc
jb
xchg
sub
sub
call
insb
sub
mov
push
adc
mov
loopne
and
add
pop
dec
lea
or
sub
mov
ret
movsb
test
jo
and
enter
inc
nop
enter
xor
ljmp
jo
xchg
das
inc
negl
push
lret
add
es
xor
or
dec
fwait
mov
mov
pop
add
dec
inc
in
cmp
pop
cli
mov
dec
std
sar
add
jne
inc
inc
dec
cld
fnstenv
push
in
hlt
gs
xchg
and
dec
rolb
push
pop
subb
das
pop
jp
mov
into
shlb
fwait
mov
pop
mov
out
sbb
dec
pusha
cmp
lret
outsb
push
jbe
addl
mov
cmc
dec
xchg
push
scas
je
pop
dec
add
jmp
add
scas
mov
mov
nop
dec
pop
xchg
mov
lock
add
mov
in
push
mov
outsl
into
dec
loopne
jb
adc
call
push
nop
cmp
incl
xchg
add
loop
or
nop
aam
cs
add
ficompl
inc
push
dec
test
jo
or
dec
in
dec
cmp
bound
xlat
push
scas
icebp
mov
inc
jo
mov
js
stos
or
loopne
rorb
js
je,pt
push
pop
cld
outsb
and
xchg
push
lock
dec
jbe
pop
add
adc
test
sqrtps
cmp
pushf
stos
ss
or
loopne
or
aaa
sub
addb
sbb
in
enter
add
repz
loop
lock
pop
out
add
adc
add
mov
cmp
mov
add
stos
shlb
sbb
fidivl
icebp
popf
adc
sub
pop
gs
mov
mov
pop
mov
xorb
push
push
pusha
andb
mov
mov
push
mov
mov
das
inc
sbb
fildll
sbb
lcall
addr16
enter
inc
push
xor
mov
cmpb
sub
mov
push
rolb
mov
cmp
mov
push
adc
lock
pop
cltd
push
aad
test
cltd
sbb
aam
mov
dec
mov
jo
cltd
mov
adc
cmpsb
and
push
rcrb
lea
mov
add
incb
loop
cmc
xlat
andb
push
lahf
lods
add
pop
dec
sub
jmp
mov
in
mov
fdivp
rcl
sbb
dec
xchg
aam
mov
dec
mov
ret
bound
adc
cli
scas
sbb
js
aas
loope
in
scas
mov
add
mov
nop
loope
adc
adcl
jo
add
cmp
movsb
dec
shll
mov
pop
jo
pop
nop
lea
inc
pop
cmpsl
lock
mov
or
push
std
add
xchg
ljmp
dec
and
dec
cwtl
insl
dec
je
xchg
mov
fcompl
xchg
push
or
adcb
lock
or
xlat
cli
cli
fsts
test
mov
mov
mov
mov
push
cmp
sahf
imul
push
mov
or
mov
add
adc
andl
jb
mov
arpl
inc
xor
push
rolb
test
std
mov
mov
add
cli
aam
and
in
inc
push
fwait
cld
xchg
add
enter
or
add
shlb
decl
mov
add
mov
xor
and
and
hlt
int3
rolb
insb
xchg
dec
lds
into
movsb
int3
and
dec
sbb
outsb
pop
add
mov
jae
mov
cmpsb
push
or
mov
or
ljmp
js
repz
in
mov
push
lret
mov
movsb
jmp
addb
ss
ljmp
enter
sub
mov
sbb
shlb
out
jb
mov
flds
adcb
or
imul
xor
gs
sub
aaa
jbe
xchg
movsb
pop
inc
add
mov
stos
lods
mov
nop
pop
jo
das
add
dec
fucomi
es
pop
imul
ljmp
stos
ret
cld
sbb
movsb
popl
andb
mov
pop
dec
cmpsb
dec
inc
jecxz
imul
ret
ret
scas
inc
and
push
popl
mov
mov
add
aaa
ficoms
test
pop
aad
xor
repnz
push
sbb
add
dec
adc
lret
xchg
mov
sbb
jo
push
add
stos
add
lahf
jb
inc
ret
ljmp
push
icebp
push
and
loop
mov
add
sub
or
xchg
or
pusha
mov
movsb
insb
fisttpl
addl
add
scas
cmp
mov
hlt
addl
in
lahf
and
add
jbe
lahf
or
movsl
ja
and
scas
add
push
sarb
ret
or
cmp
shlb
mov
daa
sarb
add
inc
dec
and
das
popl
push
loopne
fidivrl
shr
mov
jb
pop
jg
adc
push
sub
lds
rolb
mov
and
pop
cwtl
rol
add
and
ljmp
repz
jno
adc
rcrb
push
lret
push
rorb
inc
movsl
sub
xchg
jle
sub
shrb
lcall
or
andb
or
pop
mov
pop
xchg
clc
shrb
fldt
push
mov
sub
pop
out
insb
cld
ja
insl
or
inc
adc
nop
pop
mov
cmpsl
movsb
inc
mov
mov
mov
mov
rorb
cli
or
sbb
pop
jp
inc
add
sarb
mov
enter
adc
mov
rolb
or
sti
dec
push
bound
das
rclb
push
pusha
cmp
pop
inc
scas
add
mov
scas
mov
pop
xchg
adc
jge
sub
roll
and
mov
mov
in
push
mov
ss
push
inc
imul
mov
bound
sub
or
add
jecxz
iret
push
dec
push
leave
bound
sbb
das
ss
repnz
shrl
in
test
add
push
sbb
fs
popf
loopne
mov
or
sub
popf
test
sub
into
push
cmp
rcl
fcmovbe
sub
push
adc
test
loopne
ret
cmc
in
nop
add
add
scas
cmpsl
mov
pushf
lods
shlb
fstpt
adc
add
add
inc
cmc
and
add
adc
ljmp
loop
imul
out
add
stos
and
add
fidivl
cmp
sarl
into
cmpsb
imul
sbb
adc
xor
jb
movb
pop
test
adc
pushf
push
push
clc
neg
xor
jbe
and
cmpb
mov
mov
adc
cmp
push
mov
add
dec
xlat
sahf
mov
cld
fdivrs
or
sbb
flds
bound
jb
rcr
negl
sbb
adc
movsl
fmuls
push
loopne
mov
out
addr16
aam
sbb
jle
shrb
out
aam
roll
stos
add
cmp
pop
stos
xor
adc
in
std
cltd
es
scas
popa
and
push
dec
dec
pusha
sub
rolb
sub
aaa
js
rcrb
cmpsl
push
sbb
mov
repz
mov
ds
dec
mov
inc
and
lret
loopne
movsl
and
lock
stos
lret
sti
loop
push
je
add
and
cmpsb
xor
add
subl
adc
bound
add
mov
cwtl
shrl
xchg
pushf
sub
int
fcoms
gs
int3
or
adc
arpl
lea
jle
roll
pop
cs
inc
shl
mov
repz
clc
pop
lock
in
fwait
xlat
mov
stc
addl
aaa
mov
push
out
inc
add
les
xchg
adc
add
sbb
inc
xlat
nop
and
shlb
movsb
jbe
dec
stos
mov
ret
fwait
clc
or
cltd
fsub
cltd
mov
lods
adc
bnd
add
insb
test
insb
inc
stos
mov
loop
add
scas
jno
add
aas
sbb
and
lret
mov
push
sti
ljmp
adc
loopne
sbb
test
push
mov
scas
loopne
mov
xchg
xchg
and
idivb
xchg
mov
adc
nop
add
xchg
mov
pop
xor
mov
jg
out
xor
xchg
enter
dec
xchg
add
loope
lcall
aam
add
aad
or
cltd
xor
add
push
insl
imul
xchg
xor
add
xchg
cmp
scas
adc
or
loope
jge
mov
inc
dec
ficoml
cwtl
mov
jmp
andb
xorb
add
lock
adc
rcl
inc
in
xchg
fistl
fldt
out
rolb
cs
and
xlat
iret
inc
dec
les
mov
jbe
fdivrl
xchg
cmpl
repnz
or
jo
out
add
xchg
rcll
lcall
xor
mov
cltd
pusha
or
scas
ret
xchg
ljmp
push
and
xchg
int3
mov
sarb
mov
or
test
out
pusha
add
and
loopne
adc
jp
push
test
fidivs
orb
mov
sub
ljmp
jo
outsb
adc
mov
dec
loop
sub
dec
inc
adc
jl
dec
or
inc
dec
xor
jecxz
addl
arpl
shrb
mov
push
lock
rolb
adc
mov
add
adc
xor
lock
add
adc
loope
xchg
dec
add
test
push
clc
and
mov
and
and
and
mov
ljmp
loope
adcb
sahf
loop
inc
sbb
popf
xor
inc
int3
push
mov
mov
jo
rolb
test
or
xor
adc
cmpsb
dec
mov
add
mov
mov
clc
data16
jp
push
repnz
jne
test
popf
add
shlb
and
push
rcrl
aam
sbb
pop
inc
clc
es
cmpsb
jle
add
add
sbbb
dec
pop
pop
rcrb
mov
cmp
cmp
repnz
mov
inc
out
cmp
test
dec
lds
xor
inc
loope
push
ds
inc
or
or
mov
test
and
lahf
mov
pop
mov
xchg
mov
shl
roll
ret
add
outsl
clc
outsl
add
nop
inc
or
cmpsl
orb
or
std
mov
icebp
lret
xchg
wrmsr
cmp
push
add
xlat
mov
out
xor
add
loopne
pop
shl
jo
add
mov
adc
rorb
sbb
aam
sbb
stos
std
jg
push
loopne
add
add
jb
mov
lock
popf
inc
dec
push
or
stos
or
data16
shrb
push
pop
add
hlt
mov
jl
das
movsl
nop
mov
or
popa
cmp
mov
cmc
cmc
outsl
jmp
cld
sub
std
mov
push
mov
test
js
xor
loopne
loop
and
hlt
sub
mov
mov
mov
mov
imul
nop
cmpsb
mov
jecxz
test
cmp
test
lret
mov
mov
mov
push
loope
rcl
mov
or
dec
loopne
je
push
push
xchg
add
stos
sub
jecxz
and
jg
mov
pop
pop
jbe
adc
orb
push
cli
push
cmp
pop
xchg
dec
adc
icebp
subl
inc
lock
or
sub
xchg
dec
xlat
mov
adc
fisttpl
sub
rclb
mov
pop
sub
inc
dec
fistpl
pop
loopne
add
or
add
xor
popa
fmuls
stos
push
xor
test
dec
loop
sub
adc
push
mov
clc
outsb
pop
mov
lret
jl
dec
dec
pop
dec
inc
or
fcoms
loopne
rclb
add
sarl
push
jo
sti
and
dec
mov
xor
movsl
roll
xchg
push
mov
mov
push
fisubrl
mov
mov
pop
lods
lock
xlat
movsl
add
loope
push
cmpsb
inc
push
incl
or
add
dec
dec
mov
push
cli
nop
adc
dec
and
push
sbb
jbe
mov
sub
mov
icebp
lret
test
stc
dec
jns
add
popf
sub
fs
xchg
add
add
mov
push
sub
xchg
das
das
loope
sbb
push
pop
bound
dec
cmp
sub
dec
sti
cmp
movsb
mov
lret
cmpsb
loopne
jecxz
hlt
cmc
movsb
loop
add
mov
ljmp
inc
pop
xor
mov
jne
cmp
pop
addb
cld
or
xlat
mov
pop
call
inc
and
dec
outsb
lock
or
jnp
xor
add
mov
sub
or
es
and
sbbl
mov
int3
push
dec
mov
loopne
sub
ss
out
add
adc
mov
adc
xchg
mov
mov
stos
into
data16
ret
imul
mov
pop
mov
addb
les
inc
mov
addb
shlb
pop
testb
add
jb
and
push
mov
in
not
scas
jo
mov
movsb
bound
jmp
rcrl
aad
inc
push
mov
and
push
fistpll
add
sarl
cmp
adc
test
pop
and
pusha
int3
scas
loopne
cli
mov
mov
mov
repnz
cld
cltd
loopne
jg
test
push
fneni(8087
bound
in
mov
mov
push
stc
shl
mov
rcr
xchg
sar
or
and
cmp
cmc
sarl
xchg
outsl
addl
es
and
inc
xlat
stos
dec
adc
adc
jno
mov
scas
jns
stos
adc
es
xchg
nop
cmovp
xor
mov
fldenv
pop
fistpll
lods
xor
sbb
sarl
stos
lret
scas
xor
test
out
add
aaa
repnz
sbb
in
push
xor
or
dec
data16
ret
push
sub
loope
mov
and
test
push
sub
jge
cli
repnz
mov
sahf
and
add
jle
test
subb
xchg
addl
push
cs
into
push
add
pop
lock
pushf
jp
lcall
ja
jp
mov
pop
sbb
and
dec
icebp
and
add
ret
call
dec
push
add
xchg
adc
or
xor
sub
add
pop
mov
bound
in
inc
das
incl
lock
inc
add
dec
test
pop
xchg
stos
test
pop
mov
add
dec
push
sbb
lcall
push
aas
push
mov
push
rorl
andb
dec
add
inc
fidivs
mov
push
scas
add
loopne
addb
shlb
jae
pop
js
cwtl
pop
mov
add
lods
lcall
or
sbb
mov
adc
push
adc
pop
inc
ljmp
in
cmp
push
xor
dec
sbb
insl
or
popa
xchg
mov
dec
adc
mov
movsl
adc
xchg
sub
popf
xchg
adc
into
add
add
xlat
mov
pop
lods
or
and
cmpsb
sbb
add
xchg
xorl
add
add
xchg
mov
out
dec
fwait
sahf
stos
add
xchg
cmp
push
sub
ljmp
sub
cmp
add
cmpl
xlat
or
or
inc
add
pop
mov
jg
fsubrs
add
cltd
jge
std
inc
les
mov
push
dec
cmp
mov
cmc
xor
pop
dec
add
push
or
in
mov
pusha
test
jno
mov
dec
pop
jne
mov
fsubrl
xor
sub
ret
mov
add
jl
fdivs
cmp
les
out
mov
and
mulb
pop
adc
pop
add
ljmp
movsl
inc
ds
add
rorl
lea
mov
mov
ja
adc
inc
cwtl
add
sub
jb
add
jmp
jl
cltd
daa
inc
lahf
popf
rorl
and
adcb
dec
inc
xor
push
fimuls
cmp
inc
and
and
mov
add
mov
or
je
push
xlat
or
aaa
test
orb
jl
lods
dec
and
pop
pop
or
pop
inc
jecxz
adc
xorb
jp
add
add
and
mov
loopne
pop
mov
lret
inc
adc
rcll
sub
movsl
sbb
inc
add
mov
or
pop
or
loopne
lea
pusha
push
xchg
shlb
clc
mov
jbe
inc
std
inc
add
aam
dec
or
mov
sarl
mov
sbb
mov
andb
ljmp
sbb
push
mov
pop
push
jb
and
gs
stos
lcall
xor
mov
or
sahf
dec
pop
adc
push
mov
mov
dec
add
and
pop
dec
dec
and
incb
cmpsl
mov
xchg
dec
adc
shlb
cmc
pop
shl
push
jle
lret
add
xor
pop
lahf
or
int
das
or
das
pop
ret
int3
adc
pop
or
sub
xor
xor
mov
jo
sub
mov
adc
repnz
or
xchg
inc
add
sbbb
dec
adc
adc
addl
pop
push
sbb
sub
mov
popa
mov
mov
in
test
sbbb
or
and
or
imul
dec
fs
mov
aad
sti
call
sub
mov
inc
pop
dec
in
push
mov
mov
out
pusha
sub
xchg
pushf
loop
pop
fsubl
rolb
andl
cwtl
es
push
popa
stos
xlat
test
add
add
mov
mov
loopne
add
adc
aaa
clc
mov
xchg
vmovups
pop
sbb
push
adc
icebp
aam
push
aam
outsb
pop
push
lret
clc
mov
push
ret
mov
mov
and
add
loopne
lret
adc
inc
in
add
sub
outsl
mov
push
test
add
cwtl
add
pusha
inc
lods
out
mov
aad
xlat
push
movsb
movsb
xchg
and
in
loopne
mov
rcrb
rorb
jg
dec
in
jb
lea
bound
mov
xor
ss
in
push
bound
pusha
sub
loopne
ret
jno
outsb
push
cmp
roll
clc
xchg
mov
mov
lea
or
mov
adc
push
sbb
pushf
fwait
jb
fdiv
test
outsl
dec
lret
sbb
arpl
sbb
dec
inc
popa
add
data16
sub
pop
inc
mov
repnz
and
cli
add
xchg
lretw
lods
shrl
repnz
fadds
cmp
jle
or
sbb
xchg
lock
outsl
xorb
sbb
or
dec
inc
aam
xchg
cli
and
mov
adc
and
mov
roll
jnp
xchg
cmc
movsb
int3
adcl
decl
testb
addl
stos
bound
ret
or
dec
lcall
or
and
clc
add
and
mov
add
ret
stos
rcrl
mov
push
pop
cld
lcall
pop
pop
xor
js
cmp
add
inc
pusha
mov
cmp
add
in
fdivr
ret
adc
cmc
add
dec
repnz
in
or
hlt
pop
adc
sub
or
mov
ret
or
mov
add
adc
stos
test
call
out
push
stos
pusha
roll
mov
outsb
and
cli
xchg
shlb
xorb
or
or
push
mov
push
icebp
dec
aaa
addl
jmp
sbb
or
jae
add
aaa
lods
loopne
aam
xorb
add
popa
adc
je
sub
nop
inc
and
shrb
push
sarb
ljmp
xchg
and
insl
gs
adc
push
add
mov
add
and
movsl
pop
xacquire
stos
inc
fstl
cld
imul
add
add
adc
pushl
dec
add
xor
ficoms
mov
xchg
das
es
ret
clc
adc
and
shld
dec
cld
dec
sub
movsl
fwait
lret
mov
sub
add
jg
hlt
fwait
js
mov
xchg
add
add
add
or
push
jecxz
fdiv
fists
mov
jo
adc
add
loope
pushl
andl
cmpsb
movlps
sub
test
enter
rorl
enter
add
mov
xor
ret
adc
push
jp
lods
out
pusha
movsl
mov
jge
push
loopne
dec
sub
outsl
scas
push
inc
xor
or
xor
push
pop
xor
test
xchg
jbe
mov
xor
nop
subl
adc
lods
mov
sbb
dec
mov
rcrl
push
or
xor
lret
sbb
inc
rorb
jns
push
xchg
cmp
nop
mov
mov
lock
mov
push
sub
xchg
sbb
jg
mov
dec
repz
xchg
pusha
push
and
dec
add
push
inc
jns
xor
inc
dec
insb
clc
lock
lcall
pop
lock
aad
inc
sbb
sbb
das
aaa
and
mov
cs
mov
rcrl
cmpb
pop
push
insl
mov
xor
cmp
push
push
test
pop
sarb
inc
sbb
and
call
sbb
mov
ret
clc
xchg
shrb
jb
mov
xchg
adcb
ljmp
mov
mov
in
dec
pop
ljmp
repnz
push
xor
stc
xchg
mulb
xchg
popf
test
aam
add
in
arpl
div
cmovl
dec
inc
sbb
xchg
enter
pusha
repz
mov
add
call
inc
mov
or
mov
dec
es
aaa
sub
add
mov
mov
dec
add
divl
xchg
movb
push
xchg
push
mov
fisubrl
scas
addl
push
into
lods
nop
jle
mov
ss
mov
movsb
mov
mov
dec
hlt
mov
test
jno
cwtl
adc
shll
ja
incl
sbb
sbb
sbb
ljmp
add
add
pop
jecxz
push
and
enter
aas
lock
and
popa
xor
dec
or
mov
filds
pop
and
roll
push
cmp
sub
fisttps
stos
popa
push
scas
lock
nop
push
or
ss
rolb
or
in
hlt
decl
addr16
lea
jo
movsb
inc
xchg
fidivrs
mov
hlt
enter
lock
xchg
fsubr
fwait
or
mov
adc
rorl
call
mov
cmpb
push
out
adc
jl
jmp
add
sub
bound
or
xor
add
dec
sub
add
test
sbb
rorb
sub
clc
incl
std
ret
mov
addb
rorl
movsb
loopne
aaa
rclb
mov
or
das
or
add
data16
sub
aad
fcomps
rcr
data16
and
es
js
push
jecxz
ret
loop
lods
dec
push
add
jb
xchg
outsl
and
cmpsl
dec
hlt
xchg
icebp
sbb
xchg
mov
add
mov
inc
jmp
xchg
jns
lock
sub
or
pop
sahf
and
xor
aad
rorb
xlat
outsb
inc
pop
in
loopne
push
jecxz
jle
cmpsb
dec
cltd
rolb
inc
pop
sahf
xor
mov
icebp
inc
sbb
and
mov
cltd
mov
das
mov
ret
jmp
adc
loopne
add
ljmp
mov
dec
and
inc
jne
inc
xchg
rorb
add
outsl
or
jp
and
and
shlb
push
jbe
push
clc
pushf
dec
lock
inc
push
adc
adc
out
mov
and
sbb
loop
das
aaa
ljmp
sbb
mov
fwait
lcall
pop
out
inc
lock
add
jo
gs
lods
decl
mov
cmc
mov
push
andb
test
stos
int3
inc
add
inc
sub
xchg
aad
mov
in
push
mov
jl
outsl
enter
data16
test
rorl
push
mov
adc
lods
pop
xor
scas
add
pop
shll
adc
sbb
test
cld
add
es
adc
xor
dec
mov
std
das
sub
xor
push
aas
push
add
add
dec
adc
add
addb
inc
sti
pop
and
push
or
loop,pn
push
dec
mull
inc
nop
xor
add
jne
cld
push
dec
pushf
movsl
adc
nop
imul
loope
pusha
hlt
dec
mov
add
push
mov
insb
sub
push
push
jecxz
xor
ja
or
movsl
push
frstor
add
push
push
and
add
and
xchg
fdiv
push
ret
jo
aas
add
pop
pop
sbb
ljmp
and
mov
nop
imul
fimuls
pop
stos
icebp
adc
mov
jns
add
cwtl
lods
push
add
je
ret
sbb
pop
push
add
push
mov
stos
sub
rcrb
imul
or
mov
jg
adcb
cmp
stc
fsubrs
or
sub
cmpsb
stos
mov
enter
repnz
and
xor
cmp
cmovno
int3
cs
int3
add
movsb
or
mov
mov
add
orl
sub
lcall
daa
fiadds
sahf
pop
jl
push
pop
jl
nop
jp
mov
loopne
shlb
andb
sub
add
adc
stos
daa
sbb
push
push
add
fwait
mov
or
data16
test
sar
or
cmpsl
inc
pop
fisttpl
push
pop
inc
loop
adc
addb
lret
add
dec
add
push
xchg
add
repz
inc
jge
xchg
and
cwtl
int
sub
jns
sub
jnp
call
sbb
rclb
int
pop
mov
pop
cltd
nop
cmpsb
movsl
push
test
hlt
orb
test
or
push
mov
lock
cli
rorb
jg
hlt
jb
mov
punpckhwd
das
sub
or
sub
shlb
sub
ret
loopne
clc
fwait
jb
outsb
lock
rorb
roll
movl
sub
mov
or
jp
outsb
mov
sub
cmp
add
ret
rcll
lret
jmp
lds
mov
push
lock
inc
push
pop
rolb
lret
push
push
out
add
add
inc
add
jle
fwait
adc
adc
cld
pop
and
das
mov
popa
ret
xor
orb
jg
inc
push
xor
dec
mov
xchg
xlat
enter
sub
loop
ljmp
jno
add
je
or
sub
mov
ljmp
add
rolb
ret
pop
fwait
cwtl
push
inc
loop
pop
dec
fidivs
sub
or
add
mov
mov
mov
adc
shlb
daa
sar
fmuls
and
and
aam
stos
inc
mov
mov
inc
or
sti
inc
scas
and
or
mov
lock
cmp
add
pop
pop
ljmp
lar
add
pop
adcb
lods
sbb
adcb
jbe
shlb
xchg
rolb
xchg
lret
stos
push
add
cli
data16
xorl
negb
insb
jbe
jb
cmpsb
sbbl
jl
add
movsl
and
push
insb
std
mov
push
jb
loopne
scas
inc
xor
scas
push
ret
ficompl
addb
push
xor
dec
rclb
adc
std
mov
pop
adc
pop
sbb
adc
xor
add
pusha
push
mov
add
cmp
push
lock
lret
pop
mov
add
and
or
push
adc
lods
popa
or
enter
fidivl
call
or
mov
aaa
xchg
xor
or
push
dec
negl
mov
aaa
stos
pusha
push
push
loopne
jne
icebp
cmpsb
push
sub
adc
inc
and
mov
adc
jo
cmpb
aam
and
pop
loop
mov
in
clc
mov
and
mov
inc
nop
arpl
call
aas
mov
adc
add
dec
lret
push
and
ficoms
test
sahf
lcall
scas
adcb
out
sarb
sbb
adc
bound
andl
dec
inc
loopne
and
and
icebp
add
andb
mov
cmpsb
shrb
dec
inc
jo
sub
orb
dec
xlat
push
pusha
pop
mov
and
test
repnz
mov
ja
xchg
ss
xchg
mov
dec
loop
and
sbb
loopne
lret
add
mov
shrl
rclb
adc
ficoml
mov
mov
mov
jo
jo
jae
mov
sbb
push
subb
push
push
in
adc
mov
cltd
xlat
pop
add
aam
clc
mov
sub
and
mov
add
pop
mov
pusha
scas
push
hlt
aas
nop
out
jmp
insl
fidivs
add
mov
mov
out
daa
test
dec
hlt
enter
push
pusha
sbb
inc
jecxz
aam
mov
loop
fidivrl
inc
push
mov
adc
sbb
sbb
insb
mov
sbb
and
sti
sbb
cwtl
fsubrs
adc
add
stos
and
and
sub
lcall
dec
xor
or
xchg
inc
sbb
in
lock
scas
mov
mov
and
movsb
dec
mov
xchg
and
decl
dec
les
sub
push
and
add
enter
or
test
std
lcall
push
orl
add
sahf
outsb
xchg
mov
sub
ret
je
bound
adc
dec
clc
adc
and
xor
subb
or
cltd
fcoms
ja
in
insb
cmpsl
push
pop
cmp
mov
jne
movsb
add
dec
adcb
mov
decl
adc
stc
popa
add
adc
cli
dec
or
fdiv
pushl
or
jg
sbb
sbb
inc
cmp
sub
das
mov
cli
cmc
mov
adc
add
mov
lock
mov
xor
pop
ljmp
ljmp
xor
jno
addb
push
rol
adc
mov
pop
add
inc
jl
jo
sti
stos
decb
fsub
enter
cli
nop
cmp
aam
sub
push
rorb
mov
cli
icebp
je
sbb
pop
ljmp
pushf
add
mov
mov
mov
mov
mov
push
inc
xchg
push
subb
adc
pusha
add
jb
add
fsubrp
mov
outsb
repnz
xlat
stos
jl
ret
in
adc
dec
inc
xchg
cmpsb
xchg
aaa
jmp
inc
jne
push
add
add
fsts
sti
filds
ret
mov
js
sbb
xchg
nop
inc
ja
imul
ja
add
xchg
add
and
repnz
cld
mov
adc
xchg
dec
lods
xor
enter
sti
xlat
enter
call
sbb
inc
jo
test
mov
test
ss
xor
push
xor
jmp
cli
call
pop
dec
icebp
lock
pusha
movb
jno
or
push
push
inc
clc
add
sbb
mov
shlb
push
adc
mov
popa
imul
sub
test
pop
add
cwtl
pop
lcall
inc
xchg
inc
cmp
hlt
xchg
and
inc
popa
aas
push
jae
and
pop
rolb
pushl
sbb
sbb
and
push
add
loop
ficomps
scas
push
pop
cs
sub
xlat
and
shrb
cmpsl
xchg
cld
rorl
cld
add
aas
aad
cmpsb
adc
aas
cmpb
cwtl
jle
std
fnsave
xor
jbe
in
add
add
aam
add
add
lret
xchg
repz
fucomi
sbb
cmp
cli
das
sarb
xchg
outsl
cmp
push
push
sbb
jg
decl
inc
inc
cmp
sbb
cmpb
xchg
repz
lret
cmp
push
insl
outsl
lcall
cmp
adc
add
inc
push
enter
mov
pop
dec
subb
call
sbb
roll
sbb
and
adc
add
adc
and
mov
sbb
test
sbb
ja
fwait
pushf
inc
xchg
lcall
pop
pop
aam
and
daa
pop
add
in
adc
mov
nop
or
cmp
jbe
sbb
fdivs
add
aam
imul
jmp
leave
push
aas
out
shlb
test
sarb
loop
roll
rcrb
out
lods
add
inc
push
jl
sti
mov
push
dec
dec
pop
sbbb
imul
add
xchg
sub
pushl
or
xchg
push
and
imul
push
daa
dec
add
or
xor
stos
movsb
pop
lcall
and
fs
ss
add
and
cmp
and
or
lcall
xor
stos
mov
cmp
cmpsl
fwait
mov
pusha
xor
nop
movsl
movsl
cmp
pop
xchg
jle
add
daa
pusha
and
cmp
and
xchg
sbb
aaa
sbb
cmp
xorl
push
push
and
cmpl
nop
adc
icebp
cmp
add
shlb
cmp
hlt
sub
adc
loopne
xchg
adc
outsl
xchg
inc
mov
add
and
mov
call
into
pusha
adc
sub
pop
add
xlat
movsb
or
mov
pusha
add
fsubrs
mov
add
rolb
inc
inc
jle
dec
pusha
sti
incl
inc
inc
inc
inc
inc
add
pop
jle
aad
jmp
jo
jo
xchg
mov
xor
inc
popf
cmp
xlat
mov
mov
hlt
mov
loope
daa
lods
or
add
jno
enter
push
add
adc
adc
out
decl
pop
adc
hlt
lret
and
lods
loop
push
lock
cmp
adc
les
out
mov
pushl
adc
dec
shl
sub
ljmp
ss
push
dec
xchg
push
aam
test
sub
add
divb
xchg
lret
test
adc
aaa
insb
push
push
out
jl
lret
dec
repz
fcmovnu
adc
les
jno
cmp
add
jbe
xor
push
jns
dec
ljmp
inc
repnz
and
cmovnp
xor
idiv
mov
lock
popa
inc
jns
lock
add
mov
jb
fnstenv
push
insb
mov
xorb
das
xchg
adc
loopne
sti
pop
aaa
mov
push
roll
out
sub
pop
jecxz
sahf
inc
cmpl
sbb
gs
xchg
sar
dec
push
inc
decb
inc
adc
add
pop
jmp
cwtl
or
or
sbbb
add
xchg
sbb
xor
or
dec
inc
xor
push
cwtl
enter
shlb
out
add
inc
adc
mov
sub
mov
imul
mov
or
add
inc
sarb
add
ljmp
inc
movsb
lret
mov
xchg
sbbb
popf
or
cmp
push
mov
add
mov
mov
xchg
cmp
clc
add
mov
mov
adc
and
ret
and
pop
pop
add
sbb
pop
fmuls
pop
vmovddup
ja
and
inc
and
add
cmp
movsb
pop
ret
andl
outsl
sbb
or
or
add
adc
cmp
sbb
and
xlat
jp
xor
sbb
mov
hlt
add
repz
and
loopne
or
adcl
fldl
pmuludq
inc
add
inc
loopne
icebp
inc
or
outsl
aaa
add
xchg
inc
lret
sbb
cmpl
addl
add
push
addl
les
xor
lock
add
fcmovnbe
mov
sbb
into
andb
cld
adc
dec
adcl
or
sbb
mov
inc
sub
fisttps
lret
adc
aaa
and
xlat
add
add
mov
enter
test
inc
and
mov
sahf
or
rorb
test
pop
inc
pop
push
jg
int
pop
cwtl
adc
outsb
lcall
cmp
pop
pusha
dec
data16
inc
or
mov
int3
andb
cs
data16
outsl
jmp
push
xchg
orb
mov
sub
adcb
xchg
cli
ret
rol
push
xchg
add
mov
push
lret
inc
or
jbe
das
push
ret
movsb
mov
repz
xor
jb
add
shrb
stos
xor
xchg
jp
dec
rorb
inc
setno
ljmp
mov
or
or
add
push
add
inc
xor
stos
mov
inc
sbb
sbb
mov
sarl
push
mov
add
lea
pop
xchg
dec
push
cld
outsl
dec
mov
add
orl
mov
xchg
push
scas
inc
sbb
test
inc
cmp
add
mov
or
cmp
or
sti
push
pop
inc
or
insb
ds
adc
add
les
sbb
mov
dec
add
xchg
fsubl
fcoms
xchg
xlat
add
testb
bound
bound
shrb
rorl
pop
loopne
aam
les
sub
push
stos
or
shlb
add
pop
hlt
push
ljmp
cmc
sub
mov
popf
lcall
jo
add
imul
and
lods
inc
outsl
pusha
out
mov
cmpb
add
inc
icebp
dec
xchg
loopne
pusha
xor
jle
mov
es
xchg
inc
add
add
cmc
push
stos
lea
add
testb
shlb
ds
push
jbe
and
mov
sbb
push
in
hlt
repnz
pop
test
addr16
mov
jnp
fisubl
push
jbe
hlt
xchg
loopne
pop
add
cli
popf
outsb
imul
mov
or
dec
jbe
loopne
andl
xlat
pop
and
adc
mov
ret
add
push
jbe
push
dec
add
sahf
or
sub
mov
sub
mov
fwait
mov
cwtl
jb
adc
pusha
and
mov
sbb
sbb
in
in
mov
dec
cld
icebp
decl
xchg
mov
mov
scas
adc
aaa
call
jg
roll
movb
xchg
inc
shlb
cmp
ja
or
sbb
adc
mov
cltd
pop
inc
dec
and
cmp
lret
shrb
add
jecxz
lods
loopne
xor
mov
sbb
xchg
push
push
sub
add
hlt
fwait
jbe
shrl
mov
lret
int3
add
push
data16
push
stos
inc
dec
shlb
jbe
push
jg
call
mov
pop
cli
lret
and
testb
pop
test
cltd
mov
scas
mov
mov
decl
dec
mov
pop
jle
outsl
stos
lret
jb
add
test
add
or
cs
sub
lret
js
jl
adc
js
push
mov
dec
in
addr16
cmpsb
sub
mov
add
jmp
mov
imul
mov
dec
jp
push
xor
inc
loope
repz
add
and
push
stos
in
fisubrl
inc
mov
nop
mov
movsl
inc
ljmp
scas
push
push
movsl
mov
addr16
pushf
enter
dec
addb
shll
inc
icebp
and
cmc
sub
or
pop
pop
fiaddl
sarb
stos
add
sbb
mov
jle
pop
inc
data16
out
enter
or
inc
rolb
popa
inc
inc
sub
outsl
pusha
cmp
push
or
jmp
mov
add
cmpsl
test
inc
sub
in
jle
popa
and
lock
jle
push
dec
cmp
test
popa
push
sub
es
jnp
mov
sub
rcll
push
add
lods
pushf
sub
pop
or
and
pop
adc
jo
or
call
and
cmpsl
adc
incb
mov
inc
sbb
adc
sub
push
rorb
ljmp
shlb
popa
or
pushl
stos
add
aad
cltd
out
stos
fimuls
jbe
mov
stos
mov
test
lea
call
add
bound
push
xor
sub
adc
loopne
sbb
es
inc
je
inc
jp
jle
push
adc
movl
push
add
test
xor
and
nop
xor
lock
pop
cmp
roll
sub
or
cs
test
outsl
dec
ffree
lods
loopne
incl
push
sbb
xchg
add
rcrb
push
xor
xor
cmp
test
fdivs
out
push
addr16
sub
jbe
scas
les
jg
mov
daa
mov
xor
xor
rolb
jle
mov
shrl
add
cmpsb
add
mov
add
mov
jp
add
test
rcll
fists
out
dec
movsb
jp
jo
loopne
inc
sbb
mov
pop
add
dec
or
shrb
aaa
pop
push
xorb
out
loopne
xchg
std
test
jo
add
push
pushf
mov
dec
mov
adc
nop
lahf
sub
cmpsl
jg
adc
lahf
push
mov
pop
repnz
xor
mov
xor
sub
das
pop
mov
xchg
add
push
pop
movsl
inc
lock
mov
dec
dec
xorl
mov
in
jnp
bound
mov
xchg
lret
mov
clc
cli
lods
dec
push
nop
ljmp
xchg
test
push
xchg
ss
xchg
lock
xchg
add
or
or
ljmp
sbb
popa
push
test
xchg
orb
lret
pop
rolb
dec
call
popa
add
or
cmp
adc
xchg
fdivr
pop
cmp
add
push
hlt
sar
incl
js
shlb
push
dec
mov
lea
xor
lret
mov
bound
mov
push
addl
mov
incb
fidivs
mov
rorl
add
xchg
or
sbb
push
pop
push
xorl
xor
rolb
outsl
vmovntps
cmp
mov
mov
sarb
xchg
push
sahf
mov
pop
pop
jl
aam
xchg
sbb
mov
test
ja
dec
loopne
add
fcomi
mov
add
pop
jp
divb
mov
mov
mov
arpl
pop
push
inc
test
jo
jl
lods
inc
push
test
popa
test
clc
scas
inc
scas
adc
push
mov
rorb
xchg
mov
ja
cmp
and
mov
push
add
and
mov
inc
js
in
sahf
fcmovbe
and
inc
or
call
imul
dec
mov
das
ficoms
lcall
ficomps
push
repz
fdivrs
inc
add
xchg
mov
xchg
nop
outsl
or
push
xor
add
bound
lcall
divb
mov
mov
shlb
aam
fnstcw
cli
push
fists
add
mov
mov
loope
enter
loope,pn
sbb
lock
jno
pop
jb
sbb
xchg
xchg
mov
xor
jae
iret
test
scas
mov
cltd
nop
fistpl
dec
leave
add
in
mov
dec
popa
out
push
mov
cmc
jg
or
rcrl
roll
add
sti
call
add
imul
add
or
sub
adc
add
xchg
push
cs
inc
dec
roll
adc
sbb
jg
inc
test
ja
cmp
ljmp
pushaw
or
pmaddwd
xchg
mov
mov
add
inc
test
add
inc
ljmp
pop
je
in
push
adc
es
pushf
imul
cmp
das
push
jne
into
push
sbb
push
or
lcall
mov
pop
mov
mov
inc
mov
mov
movsl
mov
call
jge
mov
and
pop
fsubrl
daa
mov
and
notb
jne
push
xor
test
ror
xor
inc
jmp
orl
inc
mov
inc
add
add
ror
cmc
pop
jge
mov
sub
rcrl
mov
popa
xchg
pop
addl
add
addb
es
xlat
push
push
rclb
or
xor
sub
add
insb
inc
or
add
fcoml
xor
inc
dec
push
je
or
data16
add
cmpsb
mov
stos
add
mov
lods
or
inc
pop
add
sbb
outsb
clc
jmp
daa
pop
xor
jbe
mov
and
imul
add
cmp
jno
push
mov
cwtl
subb
add
decl
std
add
sbb
sbb
or
jg
in
sbb
adc
sub
clc
jg
sub
jns
add
sbb
jg
sbb
add
xor
loop
xor
and
pop
sbb
or
sbb
cmp
sub
outsl
ss
ds
and
testl
add
fstp
aaa
outsl
jo
push
sbb
add
and
xor
sbb
and
cld
jns
jle
cmc
push
sbb
mov
sbb
mov
arpl
lcall
test
sbb
and
sbb
sbb
sub
or
sub
out
divb
sbb
sub
or
sbb
and
incb
mov
pusha
cwtl
addb
xlat
mov
cs
adc
mov
or
mov
std
or
sbb
xchg
jle
nop
iret
es
shll
imul
fistpll
test
js
push
jle
add
inc
mov
sbb
inc
dec
hlt
mov
sbb
inc
jl
dec
aaa
jg
insb
push
push
rorb
aaa
fwait
out
inc
rclb
movsb
push
sub
fnstenv
push
mov
pop
sbb
in
inc
jns
lahf
aaa
fwait
popa
push
sbb
sbb
repz
xor
test
inc
push
scas
mov
and
cmp
xchg
lods
ljmp
pop
dec
adcl
aas
add
sbb
inc
mov
in
inc
cmpsb
mov
adc
mov
ss
pop
or
sbb
add
push
les
jbe
lahf
dec
roll
sbbb
fwait
xor
or
in
sbb
push
adc
mov
xor
mov
pusha
adc
add
ficoml
js
add
out
sbb
cmp
add
insl
in
or
sbb
scas
cli
jmp
mov
das
jecxz
rclb
sbb
fiaddl
out
aad
insl
push
add
sbb
adc
add
push
mov
adc
idivb
ret
cmp
sbb
mov
sbb
test
lock
in
or
jg
inc
and
sbb
clc
sbb
jno
pop
and
cld
jo
fistps
xchg
fsubl
sbb
movsb
mov
or
stc
imul
fildll
sbb
pop
inc
adc
sbb
jecxz
data16
adc
or
xchg
cmp
rol
pop
push
mov
pop
and
rolb
rcrb
ss
mov
mov
subb
das
fisubl
sbb
ljmp
xchg
push
mov
lcall
add
das
loopne
mov
pop
subb
sbb
divb
shl
cltd
adc
xchg
subb
aad
mov
add
cmp
fcmovb
xchg
icebp
mov
dec
or
add
mov
xor
insb
mov
mov
add
lea
dec
dec
and
add
imul
cmp
inc
add
sarb
add
jae
add
add
aaa
repnz
cli
fldl
scas
addb
mov
sbb
cltd
pop
test
and
sbb
bound
loopne
in
and
dec
movsb
jb
inc
mov
sbb
and
jp
or
push
add
dec
inc
test
dec
fwait
sub
rclb
adc
inc
mov
insb
addl
shl
dec
mov
fcompl
adc
mov
ss
mov
mov
mov
pusha
sbb
or
shlb
pusha
shll
sti
inc
lock
je
xor
mov
pop
adc
jne
add
filds
data16
jp
push
sbb
mov
dec
popa
add
push
inc
push
or
in
loope
stos
cs
add
scas
sub
inc
dec
pop
mov
sbb
xor
pop
sub
incl
scas
or
dec
push
push
push
and
or
jl
inc
adc
or
loopne
je
lcall
inc
sub
ficompl
fwait
or
into
or
loope
ds
and
adcb
lahf
rorb
cli
addb
adcb
jmp
mov
hlt
pop
movsb
dec
sbb
loopne
repnz
sbb
inc
ficoms
xor
push
mov
loopne
es
pop
add
xlat
push
mov
add
lret
jo
mov
ljmp
mov
icebp
mov
mov
add
and
mov
ret
inc
add
enter
pop
jge
or
das
pop
jp
inc
add
inc
pusha
into
insb
xor
dec
mov
cld
aad
dec
pop
inc
ds
push
sbb
ror
test
outsb
arpl
daa
inc
xchg
adc
push
push
push
sbb
outsb
adc
cs
or
or
and
and
pop
lock
divb
mov
add
and
jp
add
mov
pop
mov
loope
mov
aam
lock
pop
je
push
add
dec
adc
push
adc
or
or
nop
push
pop
pop
icebp
xor
stos
movsb
mov
loopne
mov
push
popf
adc
jge
imul
int3
inc
dec
inc
pusha
inc
push
and
fists
aaa
fstpt
xlat
push
xor
rclb
ja
sub
xchg
les
and
ljmp
ljmp
lea
mov
cmpsb
das
mov
cld
sbb
stos
dec
ss
xor
lock
add
sub
jg
or
or
or
sub
add
test
sbb
xchg
cltd
js
inc
test
bound
adc
push
shlb
mov
testb
fwait
sbb
inc
or
ret
addb
cmpsb
fcoms
mov
mov
icebp
push
dec
cld
mov
and
mov
fildl
in
adc
or
xlat
mov
mov
inc
popa
dec
test
adc
popa
add
adc
cltd
je
in
jb
adc
or
push
push
fiadds
sub
or
fwait
add
test
rcl
es
imul
add
pop
fadd
roll
mov
adc
imul
lcall
mov
rclb
out
add
cmp
enter
dec
adc
call
or
adc
cli
add
cmpsb
push
add
push
jns
sub
rclb
push
xchg
and
and
cmpsl
aam
dec
cmp
mov
cmp
xor
push
add
loopne
data16
lock
sbb
or
int3
sahf
xor
std
test
mov
je
mov
stos
addb
sbb
push
pop
test
popa
stos
inc
mov
es
adc
inc
fs
stos
imul
push
xorb
push
loopne
push
push
add
push
jns
xor
inc
pop
rcr
loopne
stos
mov
add
mov
scas
inc
subb
lret
or
nop
xor
and
fidivrl
dec
sub
out
sub
andb
push
icebp
sub
add
xchg
test
test
jo
add
aad
jo
mov
pop
xor
nop
pop
lock
fwait
popa
insl
and
xor
cs
mov
loop
xchg
add
pop
jp
mov
popa
adc
jg
shlb
repz
rolb
add
inc
stos
lcall
jb
je
add
mov
xor
xchg
mov
xchg
inc
sbbb
inc
scas
and
fdivs
hlt
dec
push
pop
decl
add
inc
test
hlt
adc
mov
lcall
lcall
cltd
push
add
subb
inc
cwtl
gs
daa
adc
shrl
or
xlat
mov
mov
add
hlt
pop
xchg
in
mov
je
repnz
rcll
cmpb
mov
add
repz
or
ret
addr16
das
mov
or
sbb
fldt
call
and
and
repnz
inc
jge
push
adc
sbb
mov
inc
or
inc
sahf
xchg
sbbb
hlt
fnstsw
sub
push
repz
inc
bound
pop
sbb
lods
bound
adc
icebp
adc
adc
test
enter
incb
adc
jne
add
adc
fs
popa
inc
ret
icebp
or
lock
loopne
push
sub
rolb
pop
hlt
add
fcomps
fisubrl
popa
aam
dec
call
orl
mov
lahf
lret
shll
pop
and
test
xchg
jne
adc
xchg
cmp
pushf
mov
std
adc
bound
lret
or
mov
out
and
jg
push
adc
shlb
add
dec
sub
push
scas
adc
cmp
out
adc
dec
cli
rorb
mov
xchg
pop
mov
inc
movsb
sub
or
pushf
mov
stos
ret
pusha
gs
and
xor
mov
adc
xchg
sub
int3
and
xchg
push
subb
test
pop
hlt
add
jo
mov
call
pop
inc
cmpsb
mov
xor
mov
adc
dec
adc
inc
mov
add
push
and
dec
sar
add
and
push
scas
mov
rolb
aam
pop
scas
pop
dec
mov
lret
or
inc
push
cld
les
and
scas
pushf
xorb
push
push
add
add
and
sarb
clc
stos
rcl
add
add
xor
outsl
jle
mov
stos
bound
mov
inc
lret
addb
or
push
orb
xchg
xchg
jno
lret
ljmp
jo
xor
nop
imul
mov
add
jb
shrb
adc
mov
in
lock
and
cmc
pusha
sti
or
mov
inc
add
dec
outsl
sbb
adc
adc
stc
and
imul
inc
sar
call
and
loop
adc
xchg
andb
pop
mov
decl
rclb
pop
jle
adc
xchg
adc
add
add
push
jb
test
int3
stc
push
std
add
xor
sub
in
mov
adc
cmpb
xchg
push
std
nop
insb
lods
sahf
adc
loopne
pop
lea
nop
dec
add
loop
adc
mov
sub
fstpt
cmp
xor
dec
ror
jmp
dec
loope
pop
jo
addl
ret
add
mov
dec
dec
sbb
mov
pop
xor
dec
sbb
adc
test
push
pusha
add
and
cmpsl
pop
test
pop
into
cmpsl
dec
fs
pop
push
inc
pop
push
pop
push
lret
sub
xor
fdivl
mov
or
dec
add
inc
dec
cli
cmp
push
jle
pop
add
aaa
pop
scas
adc
sbb
jne
cmp
shll
sbb
inc
cld
sbb
add
push
pushf
sar
testb
pop
xchg
mov
sbbb
lods
mov
jnp
pop
ss
or
test
sti
add
insb
xchg
hlt
inc
lret
or
add
pop
mov
cld
push
out
sbbb
lar
sbb
push
cmc
and
lcall
js
push
xor
ret
jo
bound
push
add
test
push
gs
adc
add
xorb
xor
sti
pop
jmp
lods
add
enter
add
add
jo
adc
xchg
sbb
xchg
cltd
mov
testb
lods
loopne
cltd
shlb
dec
cld
add
cmpb
xchg
adc
insb
subb
shrb
lcall
add
lret
jo
shll
outsb
add
push
sbb
call
and
cmp
xchg
shrb
and
and
subl
inc
mov
xor
mov
and
mov
push
addb
fdivrl
cltd
or
dec
scas
and
bound
icebp
jg
inc
mov
test
inc
and
cmc
dec
mov
add
sub
xchg
push
sbb
jo
scas
enter
loopne
inc
stos
adc
or
popf
nop
mov
add
inc
scas
pop
adc
and
and
push
sbb
cli
push
pop
add
sbbb
add
and
pop
movsb
xlat
popf
mov
stos
pop
and
mov
adc
pop
sbb
jb
push
rcrb
out
add
test
bound
ja
inc
push
push
clc
lea
cmpsb
cwtl
and
sub
orl
cmp
data16
dec
mov
rcl
and
scas
aam
aam
mov
xor
out
pushl
or
fmull
mov
add
hlt
incl
mov
adcb
stos
es
jle
rolb
insl
mov
movsb
cli
xchg
fimuls
cmpb
sbb
xor
xlat
test
std
mov
pop
or
outsl
ss
rolb
shrb
sar
and
sub
push
aas
loope
aas
outsb
mov
in
add
jg
pop
cmp
in
sub
movsl
aaa
inc
clc
and
cmp
add
adc
and
or
xchg
sub
ja
add
or
dec
or
fwait
add
add
aam
and
adc
es
lret
insb
sbb
adc
imul
les
hlt
sub
sub
inc
xor
loope
lret
out
push
pushf
div
pusha
pop
in
inc
outsl
into
pop
mov
mov
xlat
lahf
pop
pusha
or
shlb
fsubp
ss
int
jge
or
push
popa
push
or
add
mov
adc
and
push
push
filds
lods
das
popa
add
clc
arpl
dec
test
add
hlt
subb
adc
test
mov
add
decl
mov
sbb
pop
push
mov
cmpsb
mov
push
dec
or
pop
mov
dec
fwait
ret
shlb
mov
xor
xor
cwtl
add
popa
sub
adc
ljmp
sub
add
and
clc
push
filds
out
test
loop
dec
scas
ret
xchg
mov
push
and
push
add
dec
lahf
add
mov
decl
rorb
je
cmpsb
adc
loopne
loopne
lock
xor
loop
mov
pop
lcall
push
cli
inc
scas
and
int
inc
xor
add
adc
inc
cmp
movsb
cmc
enter
pusha
pop
in
xchg
pusha
cli
sbb
in
pushf
jmp
inc
test
inc
pop
inc
mov
inc
pop
out
pop
nop
dec
mov
or
clc
pop
mov
jo
pop
add
mov
sbb
mul
pushf
clc
aaa
popf
les
ror
dec
adc
and
andb
pop
test
or
mov
lret
dec
or
dec
push
in
sbb
enter
inc
adc
andb
add
inc
mov
test
int3
pop
lock
mov
push
or
rolb
inc
pop
push
pusha
mov
mov
sbb
and
addl
inc
push
xor
ret
push
imul
adc
jb
or
test
adc
jl
mov
xchg
xchg
ss
jg
and
and
mov
dec
sbb
clc
pop
hlt
adcl
and
mov
sbb
mov
out
jb
adcl
cmc
dec
loop
adc
enter
shlb
dec
and
std
and
ret
add
dec
loopne
xor
mov
mov
or
das
mov
xrelease
mov
in
bound
int3
dec
ljmp
cwtl
loopne
adc
cmpsb
decl
and
add
inc
mov
or
inc
mov
ret
add
or
test
xor
mov
add
outsl
fcomps
shll
loop
ljmp
add
dec
add
stos
loopne
mov
pop
inc
jg
pop
das
and
mov
cmp
mov
in
sarb
adc
push
mov
add
es
imul
movsl
les
mov
shrb
loope
and
mov
xor
popa
das
js
jo
repnz
sub
insb
dec
insl
popa
dec
cld
bound
sub
sub
dec
cmpb
push
and
and
mov
mov
push
lock
cmp
push
nop
hlt
add
enter
mov
das
dec
dec
dec
call
mov
ja
pop
sbb
lret
mov
inc
sbb
rcrb
dec
dec
or
xchg
scas
push
aam
nop
xor
jo
add
jg
jnp
mov
fsubrs
adc
dec
push
or
push
mov
or
or
add
or
bound
add
pop
pusha
in
mov
sbb
or
xor
ljmp
xchg
jg
fwait
in
fadd
sbb
xchg
mov
jg
call
xchg
dec
decl
xor
test
lods
xor
fs
lds
dec
push
or
sbb
add
cmp
add
dec
sbb
sahf
or
and
arpl
mov
rclb
mov
bound
cmp
cmpsb
inc
fidivrs
push
ret
and
or
mov
mov
ret
rcrb
xchg
or
or
pop
and
and
adc
sbb
xlat
test
cmpsb
and
and
sub
adc
xlat
pop
xchg
mov
xor
adc
mov
adc
in
mov
add
addps
jg
scas
xlat
push
push
or
xor
jle
adc
icebp
leave
pop
cwtl
outsb
add
xchg
or
push
scas
pop
push
or
dec
dec
in
xor
push
push
bound
pop
push
lods
movsb
adc
loop
lock
aas
mov
dec
push
in
push
and
jo
xchg
inc
popf
push
xor
loopne
cmpsl
mov
add
adc
push
push
mov
das
addb
test
enter
mov
inc
mov
addl
push
mov
sbb
pusha
mov
mov
inc
push
lahf
xchg
mov
mov
aad
call
mov
lock
xlat
adcb
orb
in
push
xor
shrb
insb
lods
shlb
cmp
sub
int3
cmp
mov
in
pop
cmp
dec
shlb
and
dec
gs
push
and
mov
xor
add
push
or
icebp
call
clc
aas
inc
pop
dec
andb
lret
arpl
pop
cli
addb
cltd
popa
fmull
or
and
push
sub
shlb
stos
mov
mov
or
jmp
inc
mov
cmp
and
and
dec
imul
pop
icebp
jae
add
xchg
and
add
adc
xchg
jle
add
insb
aaa
jp
aas
jbe
pop
jb
pop
outsb
les
adc
jne
lock
pop
bound
cmp
pop
adc
aas
push
ret
jbe
pusha
data16
bound
ds
xchg
and
cmpsb
mov
mov
push
add
adc
and
loop
inc
lret
push
xchg
ret
sbb
add
dec
shlb
xchg
outsl
and
adc
popa
push
or
dec
dec
cmpb
outsb
add
cltd
scas
loope
xchg
fdivl
cwtl
dec
mov
or
add
mov
mov
sub
sub
add
cld
popa
xchg
add
add
add
aad
push
xchg
cltd
add
int3
mov
add
and
clc
test
rorb
hlt
scas
jmp
jmp
ret
js
push
and
test
push
xchg
or
and
pusha
adc
out
add
loopne
push
jl
mov
dec
shlb
inc
aam
addb
add
push
xchg
sub
lods
mov
les
sub
lret
mov
or
add
dec
data16
cld
stc
std
inc
and
or
repnz
pop
rolb
or
fbld
xchg
cmp
xor
ljmp
sbb
mov
or
xor
rcrl
add
cmpsl
mov
gs
inc
aam
mov
stos
mov
adc
pop
adc
cld
and
push
int3
push
in
lods
or
mov
jp
push
aas
das
cmp
aad
out
cli
mov
popa
mov
stos
xchg
fdivrl
shr
pop
hlt
jg
gs
arpl
mov
cmp
xor
fs
push
or
lock
mov
adc
sub
insb
add
ljmp
test
add
mov
ljmp
mov
jns
insl
sbb
or
push
sbb
jo
jg
in
jmp
aad
mov
mov
add
repnz
mov
cmc
add
jecxz
inc
add
mov
dec
jge
fadds
sbb
popa
sbb
inc
pop
lods
add
sbb
test
add
cmp
inc
loope
in
mov
fisubrl
push
gs
inc
lret
xor
add
mov
xchg
push
or
mov
add
mov
or
inc
xchg
pop
popa
push
insb
adc
mov
inc
mov
fimuls
and
es
ficoml
sub
add
clc
xchg
push
cmp
jecxz
mov
fwait
pusha
mov
push
mov
and
js
add
add
andl
add
fistps
pushf
mov
adc
outsb
lcall
lods
in
movsl
adc
ss
add
and
lods
jecxz
inc
imul
xchg
adc
push
add
frstor
pop
data16
mov
div
dec
or
ss
pop
xchg
out
ret
aam
add
loopne
sub
incb
inc
add
mov
sbb
sbb
shrb
jbe
xchg
and
sbb
mov
aam
das
xchg
aam
adc
jo
fnstenv
xor
xchg
push
push
sbbb
pusha
pop
sbb
cmc
aas
mov
sbb
sub
shll
mov
cmpsb
push
jecxz
add
adc
adc
or
pop
fwait
test
outsl
stos
movsb
xchg
push
pop
lods
adc
pop
add
mov
in
pop
inc
mov
pushf
and
jp
incl
and
sub
bound
push
mov
pop
sarl
mov
sub
adc
icebp
fdivl
jbe
jo
outsl
push
pop
aad
jae
pop
dec
insb
lcall
push
arpl
mov
and
xor
inc
pop
add
aaa
sbb
cltd
aas
repz
push
movsl
adcb
incl
lock
outsl
dec
add
bound
adcb
xchg
subb
dec
lock
xchg
xor
je
enter
mov
cli
mov
push
addl
test
pop
mov
lods
sbb
add
stos
orl
cwtl
push
out
and
sub
icebp
add
das
out
loopne
fdivrp
scas
and
pop
jo,pn
mov
ficompl
jl
aam
andb
mov
sub
xor
push
out
mov
mov
sub
mov
stos
test
and
lret
and
cmp
insb
aam
push
xchg
or
cmp
cs
sarb
adc
incb
add
dec
outsl
ret
lcall
mov
lahf
push
mov
mov
lret
dec
imul
jbe
add
aam
mov
dec
roll
mov
fwait
cli
mov
jbe
call
and
push
inc
add
pop
and
mov
or
ss
fwait
icebp
fadds
fidivrl
sbb
insb
inc
scas
repz
dec
imul
xor
sub
xchg
les
call
xorb
inc
pop
sbb
xchg
sub
fcmovne
mov
mov
test
mov
addb
scas
add
fiaddl
cmpsl
dec
addb
rorb
out
or
and
ret
imul
push
roll
inc
pop
pop
ret
cmpsl
jl
and
inc
rolb
pop
pop
inc
add
add
add
adc
pop
and
jp
or
add
jle
aaa
aam
int3
ss
inc
sti
scas
add
xchg
orl
insb
inc
xor
lret
js
ljmp
test
inc
mov
push
adc
adc
stos
incb
inc
push
movb
adc
or
xorb
aad
int3
adc
and
or
scas
popa
add
dec
jae
add
jae
test
and
push
push
push
push
xor
and
or
aas
cld
push
inc
mov
cltd
loopne
mov
lods
cltd
pusha
adcl
outsb
mov
sub
sbb
scas
push
add
jp
js
push
adc
fs
pusha
push
arpl
call
pusha
sbb
add
rclb
jmp
add
mov
repnz
sti
mov
sti
stc
and
adc
pop
jb
add
mov
cmp
stos
out
or
jecxz
fwait
mov
mov
adc
bound
sbb
lods
push
pop
sub
sub
aam
decb
jecxz
out
xchg
xchg
add
dec
loop
stos
mov
enter
ljmp
add
int3
test
and
and
bound
out
pusha
pop
das
pusha
pop
and
and
and
loopne
push
sbb
add
pusha
fcmovb
nop
ret
orb
push
imul
xor
xor
xor
adc
mov
push
xorb
xchg
enter
push
xchg
mov
mov
xchg
fsubs
sar
or
add
loopne
rorb
test
fildll
aaa
and
push
and
pushl
push
and
sub
push
inc
les
movb
inc
mov
ret
cmpsb
jg
lret
data16
add
das
pusha
fadds
xchg
mov
xchg
addr16
orb
hlt
insl
sub
fs
inc
pusha
orl
inc
push
pop
shr
adc
jp
mov
sti
std
mov
mov
imul
add
dec
pushf
rol
add
dec
addl
mov
dec
inc
mov
cmpb
lret
adc
fnstsw
cmpb
pslld
pop
mov
pop
repz
xchg
clc
jne
shll
or
mov
mov
push
jno
jecxz
dec
mov
pop
mov
push
inc
fistl
pop
movsl
add
aam
shr
popa
sarl
push
sub
sbb
loope
xchg
loopne
fsubl
and
fcom
dec
hlt
pop
daa
loopne
lcall
and
adc
xor
xchg
pushl
add
pushf
sbb
add
sti
mov
add
movsl
stc
scas
xor
push
pop
popf
xor
jae
mov
mov
pusha
adc
pop
in
popa
add
cmpb
inc
repz
adc
ret
incb
les
sub
call
cwtl
push
push
es
sahf
or
pusha
mov
and
cs
mov
xchg
push
mov
mov
add
add
ljmp
cs
jo
pop
mov
cmpsb
lock
push
mov
sub
jbe
pop
pop
imul
inc
add
add
push
inc
push
sbb
add
push
adc
pop
das
and
ds
jbe
jnp
cmp
push
sub
push
fsubrp
sub
nop
fcmovu
sub
in
ljmp
scas
and
xor
push
sbb
xor
imul
xchg
push
mov
sbb
notb
imul
addb
cmp
and
add
lods
aad
mov
lock
sub
or
or
sbb
mov
in
push
mov
outsb
add
jo
bound
mov
xor
adc
jmp
add
adc
imul
add
fimull
mov
mov
jo
inc
sahf
ljmp
mov
xchg
repz
scas
popa
mov
cmpsb
loopne
roll
lods
pop
outsb
ud0
mov
cmp
add
push
xchg
inc
jnp
push
icebp
add
in
sbb
jg
push
fisubrl
imul
add
jbe
in
fisttpll
cmc
add
push
or
and
push
and
mov
in
out
add
into
push
call
enter
jne
sti
jae
enter
jo
repnz
sub
sbb
push
into
out
repz
sbb
add
jp
push
cmpsb
jns
pusha
fdivr
dec
push
xor
sub
pop
insl
into
add
insl
lds
outsl
stos
jno
adc
push
ficoms
xchg
xorb
add
sub
mov
adc
push
icebp
mov
and
sub
stos
inc
pop
cli
mov
negb
data16
mov
sbb
jo
cwtl
int3
push
jo
cmp
mov
adc
jo
adc
and
xor
cmp
lock
push
jns
loopne
adc
jne
pushf
push
lock
push
nop
out
stos
ja
loope
shl
xor
std
ljmp
mov
pop
push
xor
dec
add
inc
jo
int
cmp
mov
shl
add
push
jnp
jae
ljmp
lcall
pusha
xorb
orb
jnp
pop
push
test
in
adc
push
imul
lahf
outsb
push
jno
mov
inc
fwait
imul
sub
sbb
dec
dec
lds
push
sub
sti
repz
stos
inc
mov
inc
movsb
ror
or
cmpsl
imul
jo
daa
shlb
fistpll
int3
mov
fiaddl
out
fiaddl
xchg
jns
jnp
sub
inc
lock
subl
jns
lods
sbbl
jmp
lock
xchg
mov
cld
jb
sbb
xchg
push
icebp
mov
mov
push
stos
aad
push
or
addr16
jo
stos
popa
xchg
popa
icebp
sub
mov
lock
mov
xor
push
ret
sbb
je
pop
pushf
cmpsl
push
ljmp
stc
stos
sahf
or
dec
dec
ret
and
xchg
pusha
leave
stos
jle
dec
lock
cmp
xchg
mov
jo
cs
ficoms
ret
loopne
xchg
lea
insl
push
ret
adc
jns
mov
push
ljmp
sahf
add
lcall
push
cmp
cmp
or
xor
push
or
add
lods
xor
and
bound
add
int3
add
scas
push
push
mov
or
push
push
push
stos
les
xchg
add
push
dec
add
mov
mov
adc
dec
dec
bound
add
int
xchg
stos
ja
jae
add
add
stos
mov
mov
sbb
adc
inc
ret
or
xor
jg
pop
stos
cmp
add
das
out
lcall
fcomi
stos
insl
cwtl
xlat
sbb
sbb
sbb
add
adc
lcall
xor
lcall
and
imul
imul
out
lock
call
lcall
lcall
mov
out
mov
test
mov
pop
cmpb
add
cmpsb
jns
inc
inc
jl
je
jns
cmpsb
jns
push
dec
stos
xchg
adc
push
or
add
cmp
xor
dec
repz
sub
and
repz
repz
aam
int3
dec
repz
enter
clc
hlt
xor
repz
in
call
dec
repz
cwtl
xchg
nop
mov
xor
mov
dec
repz
lods
test
mov
pop
shlb
push
dec
rolb
dec
sarl
je
cmp
sarl
push
sub
or
mov
xchg
andb
mov
stos
mov
add
mov
shlb
push
leave
fs
imul
stos
roll
add
cmc
sbb
pop
xchg
sbbb
or
dec
rorl
and
cltd
pusha
add
xchg
int3
enter
shll
sar
clc
hlt
lock
movsl
sbb
or
imul
xor
imul
test
imul
pop
lods
jns
cmpsb
push
push
dec
dec
inc
add
insl
pop
sub
je
jo
cmpsb
mov
cmp
add
cmp
jl
pusha
cmpsl
call
imul
shrl
add
sbb
fcom
shlb
roll
add
out
mov
movsl
mov
cmpsl
sub
xchg
cmpsl
test
ja
ja
cmpsl
mov
cmpsl
movsb
sbb
roll
loopne
mov
or
mov
jo
jns
cmpsb
insb
push
and
sbb
mov
pusha
jo
mov
add
or
mov
mov
hlt
sbb
in
dec
push
ds
call
add
push
jno
pusha
dec
aas
or
mov
sbb
mov
inc
jno
sub
js
clc
fcomps
cmp
dec
rcr
inc
inc
stos
dec
push
dec
sbb
jg
dec
shll
ja
outsl
push
sarl
sbb
adc
xchg
cld
sbb
out
or
push
cmpsb
add
fists
rcrb
bound
sub
bound
adc
and
pop
xchg
mov
cld
clc
sti
and
pop
jo
mov
out
cmp
loop
xchg
sbb
roll
sub
test
adc
jl
sub
mov
nop
inc
ds
les
and
adc
inc
lcall
les
movsb
orb
mov
cmp
movsl
xchg
mov
mov
xlat
loopne
or
add
jae
inc
push
or
popa
dec
rclb
add
aas
hlt
nop
pop
push
mov
and
pop
and
or
mov
sbb
add
inc
out
imul
les
add
lea
adc
jg
insl
xorl
add
popa
add
mov
loop
icebp
add
mov
loop
incl
adc
inc
add
or
adc
mov
adc
add
filds
add
cmp
roll
mov
incb
and
add
or
test
dec
xchg
cmc
mov
popa
mov
dec
xchg
notb
popa
cmp
addb
scas
add
out
lock
fwait
or
clc
outsl
add
push
mov
fimull
add
mov
add
loopne
loop
dec
ss
add
mov
mov
popa
and
cs
add
adc
push
and
negb
jl
adc
or
xchg
hlt
sbb
pushf
push
push
adc
test
mov
jae
mov
adcl
mov
pop
fcomps
pop
fbstp
add
and
imull
call
lock
adc
sti
inc
ljmp
and
add
mov
or
les
cmp
add
adc
rclb
sbb
pop
test
fstps
add
sahf
add
repz
or
call
sub
mov
mov
out
icebp
adc
push
pop
mov
adc
jno
push
ja
movsb
rolb
pushl
cli
add
into
jl
mov
cmp
add
cwtl
sbb
add
mov
or
and
mov
pop
ret
pop
sbb
in
pop
insb
mov
push
add
sub
sbb
sbb
inc
mov
aam
mov
ror
lods
mov
nop
push
push
mov
xchg
pusha
push
and
repz
lods
std
mov
call
add
push
add
push
add
clc
dec
clc
adc
cmpsb
leave
push
ljmp
pop
shlb
inc
push
push
movsb
aam
mov
hlt
add
fcomip
movsl
xor
mov
rolb
add
dec
movsb
push
add
pop
std
ljmp
or
nop
push
or
bound
mov
mov
fwait
addb
lods
icebp
es
add
fdivp
mov
aad
ss
or
or
lock
pop
aaa
movsl
loopne
sbb
sbb
sti
inc
adc
into
je
xor
cs
ja
sar
out
and
push
mov
lock
jmp
sub
lahf
sub
and
and
add
mov
scas
fs
loop
pop
dec
add
jp
mov
inc
mov
pushl
inc
stc
or
orb
mov
sub
xor
mov
or
dec
sub
push
xor
mov
popa
rclb
in
and
add
or
movsb
or
sub
pop
and
idivb
popa
mov
fld
and
adc
dec
sub
add
pusha
mov
xor
fbstp
mov
add
adc
add
push
mov
pusha
in
mov
int3
movsl
xlat
mov
add
enter
or
sbb
xchg
xor
sub
pop
push
add
and
cmpsb
mov
mov
sub
add
push
push
stos
daa
add
add
push
xor
push
xor
enter
adc
pop
pop
inc
in
jo
mov
cmpsb
push
out
push
sub
cld
mov
adcl
push
movsb
je
add
push
mov
fst
push
push
loopne
aaa
aaa
sahf
dec
test
or
mov
inc
les
in
testb
add
je
inc
dec
sbb
adc
mov
push
add
add
adc
pop
mov
and
addl
dec
sub
mov
ljmp
adcl
add
cmp
adc
add
sbb
sbb
cli
adc
movsb
jae
jo
stos
in
push
mov
sub
inc
sub
mov
cs
imulb
pusha
jl
mov
add
test
or
clc
movsb
sahf
lods
mov
or
or
or
sbb
pop
inc
dec
inc
sbb
aaa
inc
ret
pushf
add
add
pushl
adc
sahf
or
mov
or
test
sahf
mov
mov
add
push
sahf
into
sbbb
int
xchg
nop
jmp
lock
sbb
subb
sub
test
dec
orl
stos
xchg
or
jp
scas
mov
xchg
lret
inc
add
cli
xchg
lahf
sbb
scas
push
xorb
pop
add
xorl
arpl
jb
or
es
add
inc
pop
jle
icebp
rorl
add
fdivp
sub
dec
add
outsb
sbb
and
jp
jae
inc
mov
pop
cmpb
mov
and
push
lods
xlat
xchg
sub
insl
add
push
addb
addl
or
fisttpll
push
icebp
add
push
es
add
lcall
push
loopne
popa
andl
and
inc
or
mov
xor
mov
sbb
push
push
sahf
sbb
cmpsb
lods
adc
movsb
stos
or
mov
and
jecxz
xchg
jmp
add
jbe
filds
mov
jecxz
dec
testl
andb
fiadds
mov
mov
fisttps
aas
mov
ret
punpcklbw
orb
push
add
mov
or
scas
int3
push
shl
js
cmp
inc
push
push
sbb
inc
sbb
sti
mov
rclb
mov
subb
add
loopne
mov
and
loopne
in
add
test
icebp
xchg
and
imul
and
sub
ret
fisttps
ds
jmp
or
pop
sarb
cmpsb
sarl
leave
or
and
bound
and
xor
fisubs
sub
adc
push
stos
add
decl
outsb
pusha
outsb
outsb
out
mov
ds
jo
adc
fs
jnp
ds
push
jp
ret
hlt
jle
add
js
sub
adc
inc
push
pusha
add
push
sti
lods
adc
ss
imul
sbbb
adc
bound
jge
push
stos
and
add
add
inc
push
sub
insl
mov
mov
pushf
mov
xor
fwait
push
call
push
notb
into
cmpsb
fcmovnbe
repnz
inc
pop
or
pusha
adc
pusha
and
push
stc
pop
mov
inc
cltd
adc
lcall
ret
sub
addb
pop
fwait
add
lcall
clc
xor
cs
sbb
loope
das
popf
push
lods
aad
test
sub
mov
push
loopne
xchg
add
xchg
loopne
push
popa
add
jo
mov
sub
push
jo
sbb
mov
fidivl
cwtl
mov
test
lock
mov
xchg
fsub
arpl
xor
mov
rorb
add
stos
xchg
cmp
lods
in
hlt
les
pop
pop
stos
mov
lret
push
aaa
shlb
add
aam
adc
add
or
roll
outsb
and
ljmp
mov
mov
pop
adc
sbb
or
mov
push
dec
sti
inc
cltd
add
mov
mov
mov
aad
rclb
shl
mov
sti
fnstsw
lods
and
mov
stos
pushf
stos
mov
test
ljmp
or
cs
mov
negl
pop
out
scas
mov
scas
push
push
jp
adc
dec
jnp
notb
enter
pushf
add
jo
pop
xchg
push
sub
xchg
nop
push
mov
addr16
cmp
and
mov
jp
xchg
insb
dec
sbb
aad
imul
cmp
shl
mov
jl
call
inc
add
pusha
jo
or
icebp
and
xor
icebp
push
mov
jnp
or
cmp
aad
add
inc
inc
jmp
push
jmp
jmp
mov
clc
xor
aad
xchg
xchg
mov
pop
scas
mov
cs
inc
data16
cmp
ret
mov
mov
sub
push
je
inc
xor
mov
push
ret
data16
jmp
sti
into
mov
loope
jge
insl
xchg
icebp
fdivl
loope
shrb
clc
push
mov
push
jbe
or
lods
push
inc
lock
or
enter
shlb
pusha
cld
inc
push
in
popa
and
push
mov
test
jo
cmp
sub
ss
and
xchg
xchg
pushf
in
xor
stos
sub
sbb
dec
jb
js
sbb
xlat
cs
push
mov
pop
cmpsb
cmc
ret
lret
pop
insl
or
lock
icebp
and
add
in
rclb
add
insb
mov
scas
loope
shrb
or
test
rorb
icebp
inc
sar
cmpsl
into
rcll
imul
into
cmp
sub
sub
add
mov
add
mov
or
push
dec
dec
out
inc
jae
xor
xchg
add
rolb
add
jo
out
ret
rcl
out
pop
inc
sti
aaa
add
mov
ret
into
in
mov
pop
mov
in
lods
notb
mov
ret
ret
mov
movl
add
loopne
or
int
outsb
stos
dec
inc
loopne
ljmp
sub
inc
insl
push
sub
stos
add
xchg
dec
jno
cmp
and
mov
outsl
je
orb
das
inc
bound
add
cwtl
lods
stos
mov
xor
mov
push
repnz
mov
pop
cmp
xchg
add
dec
roll
sbb
adc
lock
loopne
or
test
ljmp
xor
jmp
add
push
inc
push
jmp
add
xchg
lret
std
enter
fs
out
xor
sti
xor
out
pusha
lods
sbb
sub
mov
insl
rcrl
lret
fadd
loope
or
sbb
push
fwait
mov
test
aam
shll
sbb
and
pop
dec
lock
shr
dec
jl
outsl
xor
rcrl
xchg
push
daa
ja
push
nop
cmovge
leave
add
pushf
sarl
gs
sbbl
xchg
jle
push
pop
mov
add
call
mov
cmp
add
fwait
cmp
add
cmp
or
cmc
outsl
nop
add
es
lcall
shl
xlat
lock
fmuls
sub
jg
add
in
fiaddl
ss
pusha
popw
sub
int3
dec
jae
call
push
push
loope
scas
mov
pop
data16
sub
add
xor
je
or
and
dec
ret
dec
or
lock
int
adc
clc
aaa
jb
int3
add
add
hlt
ds
sti
in
mov
add
jno
mov
cmp
adc
xchg
fwait
sar
cwtl
sbb
add
lret
xor
int3
cmp
add
int
dec
mov
hlt
aas
fcmovbe
inc
cld
ljmp
or
aam
pop
cmp
subb
addl
mov
jecxz
or
or
push
xlat
push
sahf
or
inc
jmp
adc
aad
or
sub
sub
stos
mov
in
insb
roll
jbe
in
jmp
int
iret
add
out
nop
loopne
mov
in
add
in
mov
mov
clc
decl
test
cmp
pop
test
add
sbbb
adcl
sub
ror
popa
pop
and
call
push
hlt
jg
xlat
iret
xchg
or
out
add
or
push
jno
inc
int
sarl
ss
out
and
les
out
inc
outsb
xchg
fldt
sbb
or
lds
ljmp
fadd
push
sbbl
insl
leave
adc
or
adc
jmp
xor
pop
lret
rcll
aam
sbb
pop
les
push
inc
rorb
add
test
test
popa
adc
out
mov
lret
xor
and
insb
mov
inc
xor
sub
imul
fsubs
insb
jp
faddp
icebp
stos
add
ud0
cli
jmp
movsb
ljmp
addr16
sub
push
inc
inc
lods
inc
push
js
or
shlb
fisubrl
imulb
mov
shl
movsb
lock
repnz
ja
jge
scas
in
lret
push
mov
testb
out
sarb
shl
jg
xor
and
test
inc
roll
pop
out
xlat
into
add
aaa
outsl
add
andb
shrb
inc
push
jp
testb
mov
lret
fmul
adc
sarb
orb
nop
loop
mov
jl
pusha
or
push
adc
scas
jp
ja
mov
cwtl
cltd
loope
sub
cs
ja
push
incl
and
add
pusha
jg
xor
xor
inc
and
subb
pmuludq
or
cli
and
hlt
ss
push
fcmovnbe
cmp
mov
lock
sub
adc
xchg
sub
dec
ret
dec
addr16
clc
pop
jmp
push
dec
in
fs
add
add
and
aas
inc
sbb
rolb
outsl
cli
mov
mov
adc
jge
sbb
mov
and
xorb
mov
dec
xor
dec
inc
push
add
sbb
call
arpl
jecxz
pop
sbb
les
and
pop
xchg
or
hlt
aad
loopne
or
outsb
loope
aaa
addl
add
popf
and
and
or
fistl
aam
sub
ret
loopne
shlb
and
dec
push
jl
add
push
int3
sahf
push
movsl
add
cmp
orb
dec
fisubs
push
orb
les
insb
or
xchg
icebp
bound
pop
adc
fsubs
lcall
aad
mov
ret
add
dec
imul
out
xchg
ret
vmovaps
pop
sub
mov
and
lcall
arpl
js
je
add
cmpsb
add
andb
pop
shlb
push
cmpsb
inc
add
mov
data16
out
inc
or
jmp
out
pop
jmp
into
mov
mov
out
push
clc
adc
xor
shr
popa
jae
inc
mov
add
add
jecxz
sub
push
mov
lcall
push
mov
cmp
imul
dec
jae
adc
sbb
les
aam
cld
or
push
add
stos
arpl
jmp
xchg
enter
daa
adc
mov
ret
push
push
and
inc
push
cli
fldcw
mov
andb
imul
movsl
mov
pusha
cmp
leave
jle
lods
mov
xor
xchg
sub
and
inc
or
orb
pop
cmp
and
jmp
or
mov
dec
into
ret
ja
outsl
mov
fs
repz
ret
inc
dec
pop
adc
mov
add
or
daa
add
incb
adc
xchg
push
mov
mov
lret
roll
lret
rol
add
notb
rol
out
ret
cmp
xor
mov
lret
and
inc
mov
into
sbb
adc
push
jno
mov
neg
call
mov
mov
rclb
ds
les
xchg
sbb
sbb
mov
xor
les
clc
incl
in
out
rolb
and
pop
xchg
add
xor
data16
icebp
push
in
ret
add
mov
and
add
not
push
or
jb
lods
cli
mov
addb
jb
out
and
aad
or
push
push
fisttpl
pop
lock
add
xor
add
push
push
push
sub
jle
jg
sbb
fcoml
into
jecxz
mov
in
xor
or
loope
sbb
sysexit
xor
in
andl
bsf
sahf
hlt
add
add
icebp
jmp
loop
mov
jo
xor
cmp
in
mov
dec
push
ljmp
add
cmp
pop
mov
mov
sub
loope
inc
adc
ss
out
lds
and
jg
pop
adc
add
mov
lret
lock
mov
rclb
outsl
test
les
dec
je
or
mov
and
cli
mov
cli
dec
mov
adc
mov
or
mov
push
lcall
cld
sub
rcl
rolb
mov
popa
or
sbb
fisttpl
mov
jmp
mov
lock
jg
add
pop
mov
adc
mov
add
data16
jo
test
adc
sbb
jl
mov
icebp
add
mov
or
or
fistps
out
and
inc
sub
push
rcll
pusha
out
mov
or
xor
adc
push
and
sbb
ja
mov
dec
xchg
das
or
xchg
adc
cmp
jmp
loope,pn
fcomip
setae
push
adc
push
decl
add
xor
fsqrt
add
rclb
pop
add
add
xchg
call
mov
jg
and
pop
int
or
pop
push
ds
add
add
push
mov
mov
std
mov
addr16
add
or
ja
stos
int
div
je
push
fwait
push
pop
adc
sbb
cmc
xchg
add
jns
mov
and
xor
inc
or
lock
decl
dec
mov
repnz
fsts
pop
leave
movl
lods
fsubrs
loope
pop
shrb
movsb
push
nop
loop
inc
sub
or
shll
adc
mov
repz
out
push
ja
fwait
aam
lock
jae
aas
add
adc
and
je
and
jge
data16
fistl
fmulp
sarb
jp
sbb
lcall
xlat
jo
add
xor
imul
ret
shlb
adc
xor
inc
add
ror
mov
cmp
add
cmp
andb
or
out
lock
icebp
lret
gs
jg
mov
jp
mov
push
pop
movsl
mov
shrb
xor
push
jmp
clc
divb
lret
fistpl
lds
stos
sarb
sub
fidivl
adc
jmp
lea
mov
xchg
push
in
dec
fbstp
mov
pop
mov
pop
and
jno
outsl
js
and
inc
xlat
iret
addb
push
mov
das
mulb
lea
and
cli
and
nop
or
jecxz
lret
and
jne
xchg
add
repnz
fnstcw
clc
mov
andb
repnz
roll
aad
add
sub
mov
ss
xorb
nop
sub
ret
jp
push
xor
pop
lret
enter
or
push
cmp
das
push
pop
xor
hlt
jecxz
jmp
add
add
frstor
repz
int
sbb
insl
mov
or
enter
adc
icebp
ljmp
adc
adc
push
and
add
pop
movb
cli
les
add
lock
mov
stos
pop
push
add
add
andb
loope
or
sub
add
push
mov
xchg
xchg
add
fwait
inc
shlb
lock
cmp
add
test
flds
or
hlt
sub
test
jmp
andb
js
cli
outsl
add
mov
jecxz
add
lock
pop
xor
inc
ror
adcb
push
fwait
icebp
mov
mov
xor
dec
xchg
cmpb
or
nop
test
out
mov
sbb
cmpsb
mov
fsubrl
shll
push
adc
add
mov
out
adc
cmp
adcb
out
das
push
sub
out
push
shll
fnstsw
mov
xor
fadds
movb
push
adc
out
imul
mov
rol
push
aam
rcrl
lcall
fidivl
lock
xor
add
lock
test
jg
sbb
stos
inc
or
inc
pop
add
in
sti
mov
and
add
fildl
add
addl
rcrb
jmp
adcb
mov
bound
outsl
cmp
lcall
popf
add
incb
jmp
add
xor
and
movsl
add
ljmp
int3
ljmp
test
add
fcoml
jge
cld
inc
push
adc
xchg
lds
fadds
add
sbb
clc
adc
inc
ret
aam
sub
xchg
les
shrl
into
inc
ljmp
adc
ret
test
xlat
outsb
push
pop
in
jle
lret
inc
inc
ss
or
add
push
xor
aad
sub
inc
sub
push
and
mov
mov
adc
dec
loopne
ret
es
ret
pop
mov
xchg
inc
or
dec
adcb
nop
lds
loope
or
jmp
sub
out
aad
add
shlb
mov
mov
movsb
int
es
or
jmp
jecxz
mov
or
xor
aad
jno
cmpsb
and
add
push
sti
add
pop
inc
enter
and
push
in
mov
aad
inc
leave
addb
xchg
loope
jmp
fwait
scas
les
mov
jo
add
xchg
mov
std
test
ret
cli
and
leave
lock
xor
arpl
das
mov
test
add
loopne
fldt
jg
xor
rolb
dec
push
mov
add
or
shll
shlb
in
jmp
mov
add
adc
or
jmp
int3
ret
add
mov
push
dec
add
jl
ljmp
mov
aaa
add
or
mov
xchg
sub
pop
sub
shl
lock
repnz
push
into
rolb
les
push
ret
ret
repnz
sub
add
out
add
sbb
inc
roll
add
into
jp
out
fadds
into
add
pusha
push
cmp
add
or
ret
and
add
fwait
mov
lock
loope
inc
xor
push
data16
dec
mov
loopne
out
jns
add
adc
mov
lea
jge
sarl
jp
ljmp
clc
mov
psubw
add
es
add
cmpsb
or
ds
pop
scas
adc
cmpsb
add
add
or
shll
jecxz
fcomps
and
adc
xor
and
out
movsl
and
sbb
in
fucomip
cwtl
mov
sub
mov
add
xor
test
out
out
lock
adc
testl
jp
aas
hlt
insl
pop
or
and
lret
loopne
and
mov
clc
ss
movsl
in
sbb
ja
out
test
hlt
mov
pusha
ja
aaa
out
rorb
js
rcl
push
dec
fdivr
jg
mov
and
bound
iret
add
xchg
mov
cmp
mov
rcl
rcr
inc
testb
sarl
xchg
mulb
add
add
pop
fs
cmpsb
aad
ret
rclb
jecxz
push
sbb
and
fwait
push
lods
sbb
je
xlat
or
mov
shrb
js
icebp
data16
jbe
dec
loope
or
xor
sub
inc
xorb
inc
sbb
xchg
cmpsb
rolb
jo
into
xchg
sub
nop
adc
add
add
push
push
adc
std
icebp
repz
add
mov
scas
add
or
fsubs
add
in
inc
loop
adc
mov
iret
xchg
incb
andb
mov
sub
pop
mov
adc
dec
stos
mov
mov
fldl
es
mov
or
mov
pop
stos
mov
ds
or
inc
popa
lods
or
jnp
xchg
mov
or
mov
sbbb
mov
and
xchg
test
dec
outsb
insb
mov
pusha
jno
pop
adcb
rorb
lret
loop
lcall
xchg
sbb
in
mov
xor
aaa
loope
cmpsl
add
mov
fsubp
mov
and
sbb
pop
jbe
fimull
fs
add
dec
and
sbb
mov
push
daa
leave
ficomps
inc
fdivrp
outsl
cli
jmp
push
jg
add
pop
dec
fmull
repz
inc
aam
outsb
push
mov
lea
and
mov
mov
addr16
mov
add
inc
add
fdivr
aaa
cld
pushl
insl
out
outsb
add
lods
add
add
mov
xlat
and
decl
ljmp
fwait
cltd
xchg
sbb
dec
add
out
add
cmp
decl
xor
pop
ljmp
and
incl
cs
add
jae
sub
sub
add
sub
lds
lcall
mov
push
jg
add
out
imul
subb
and
ret
xlat
rcll
incl
fsubrs
add
pop
popf
rcrl
rolb
pop
popf
clc
incb
das
xor
popf
popa
jno
mov
inc
cli
mov
jae
popf
jb
add
push
addr16
ljmp
add
popf
xchg
lahf
add
loopne
inc
ja
sbb
push
inc
popf
pusha
pop
pop
insb
ret
inc
mov
outsb
or
out
add
inc
out
data16
aaa
hlt
incl
popf
xor
cltd
xlat
out
outsl
mov
cmp
sbb
fwait
out
mov
fcmovnu
or
push
sbb
xchg
ret
sub
popf
ret
testl
mov
add
popf
jne
lea
movsb
sbb
xor
mov
out
popf
cld
das
clc
sbb
fwait
pop
test
out
popf
fisttps
add
data16
jb
clc
add
rcr
xor
mov
shr
lahf
xor
mov
push
clc
das
xchg
adc
and
xor
mov
sub
stos
mov
and
jg
call
push
out
movsl
adc
xlat
xchg
jns
mov
adcl
clc
fwait
add
jp
mov
pop
and
pop
cmp
call
add
sti
adc
inc
xchg
xchg
in
icebp
or
add
pop
sub
sti
cmpsb
push
bound
fistps
fs
jg
clc
cmc
xor
in
jmp
sub
or
sub
jg
jp
ret
ljmp
rolb
push
arpl
and
fidivs
je
sti
add
pop
add
out
std
push
add
faddl
push
sub
test
add
mov
push
push
out
shrl
cmp
jp
cmp
add
out
outsl
mov
sbb
mov
push
movsl
cld
add
scas
std
int3
cltd
aas
jo
scas
cmp
clc
sub
dec
rcrl
pop
cmc
das
add
insl
fnstenv
dec
and
pushl
test
add
aam
jecxz
pusha
incl
xor
test
or
cmp
or
xchg
imul
add
or
inc
lods
inc
mov
loop
mov
or
jmp
and
inc
push
aad
inc
push
push
mov
push
mov
loop
ljmp
xchg
add
jbe
jl
subb
addb
cmpsb
pop
hlt
test
mov
mov
add
mov
lcall
add
adc
mov
ljmp
cmpl
addb
xor
xor
jns
and
add
cmp
push
push
loopne
or
push
mov
ljmp
xchg
mov
xchg
out
adc
lcall
lcall
outsl
out
lcall
lcall
add
rcrl
add
pushf
xchg
pushf
out
pushf
negb
pushf
into
pushf
pushf
fisubs
pushf
cs
ss
ds
pushf
stc
fwait
mov
pushf
push
pushfw
outsb
pushf
jbe
jle
pushf
dec
pushf
push
pushf
pop
jg
sarl
mov
mov
xchg
popf
mov
negb
popf
popf
into
popf
popf
popf
pop
cs
lcall
push
popf
push
popf
push
popf
popf
popfw
outsb
popf
jbe
popf
dec
fdiv
fwait
rorb
push
popf
pop
add
cmpb
lahf
add
cmpsb
xchg
scas
xchg
mov
mov
xchg
repz
and
push
out
out
xchg
notb
jg
xchg
into
xchg
xchg
fisubs
xchg
cs
ss
ds
xchg
push
xchg
push
xchg
push
aaa
jg
aaa
xchg
outsb
xchg
jbe
jle
xchg
dec
xchg
push
xchg
pop
cmpsb
xchg
scas
int
cld
in
xchg
mov
mov
xchg
xchg
xchg
out
out
xchg
notb
cld
xchg
into
xchg
xchg
xchg
es
cs
ss
xchg
push
xchg
push
xchg
push
xchg
int
xchg
xchg
outsb
xchg
jbe
xchg
inc
xchg
dec
xchg
push
xchg
xchg
cmpsb
nop
scas
nop
int
cld
int
nop
nop
xchg
nop
out
out
nop
notb
cld
nop
into
nop
nop
nop
es
cs
ss
nop
push
nop
push
nop
push
nop
int
nop
xchg
outsb
nop
jbe
nop
inc
nop
dec
nop
push
nop
nop
cmpsb
xchg
scas
xchg
int
cld
int
xchg
xchg
xchg
xchg
out
out
xchg
notb
or
iret
cmpsb
jo
dec
add
fwait
mov
mov
jbe
xchg
inc
xchg
dec
xchg
push
xchg
xchg
cmpsb
aaa
fwait
cmp
scas
xchg
mov
push
add
insb
or
xchg
into
xchg
xchg
fidivs
jg
aaa
es
cs
ss
ds
xchg
push
xchg
push
xchg
push
xchg
cmpsb
rcr
adc
add
fwait
ret
add
int
mov
xchg
xchg
xchg
out
out
xchg
notb
xchg
mov
xchg
imul
imul
xchg
outsb
xchg
jbe
mov
out
xchg
inc
xchg
dec
xchg
push
xchg
xchg
cmpsb
xchg
scas
xchg
mov
xchg
xchg
int
pusha
jne
xchg
cli
aaa
fwait
ja
xchg
xchg
pusha
xor
xchg
mov
repnz
sbb
cmp
rclb
pop
xor
xor
push
mov
cmp
rclb
push
sub
jb
cltd
and
das
cltd
xor
mov
ljmp
cli
fistl
popa
sahf
push
xchg
jmp
std
lahf
add
ret
addr16
call
dec
movsb
lods
mov
sub
cld
inc
popf
fs
popa
inc
ret
pusha
inc
mov
mov
test
xchg
enter
and
addr16
ss
mov
cmpsb
pop
cld
mov
xor
xchg
sub
xchg
cmp
aas
fwait
ret
xchg
pop
xchg
test
idivl
and
ja
test
jns
and
xchg
add
xchg
add
or
adc
xchg
imul
xchg
push
xchg
pop
xchg
cmpsl
xchg
add
add
hlt
aaa
jg
imul
xchg
dec
dec
xchg
push
xchg
pop
xchg
test
cmpsb
pusha
xchg
test
aaa
fwait
ret
add
mov
lcall
sahf
fwait
loope
add
fwait
stc
fwait
rorb
int
enter
fwait
inc
fwait
pop
outsl
test
ret
mov
ficomps
inc
cltd
push
cltd
mov
lea
adc
fwait
ret
fwait
add
mov
cld
fcmovnu
jne
shll
aad
fistps
add
jns
loope
adc
pop
lahf
mov
repz
dec
mov
pushf
xor
sbb
xor
push
mov
gs
add
stc
fsts
loopne
add
jg
addr16
cmpsb
push
xchg
adc
xchg
unpcklps
cld
negb
cs
fwait
push
fwait
imul
int
lock
fwait
ret
cwtl
push
adc
scas
cltd
loopne
loope
pushf
cltd
cltd
xorb
push
movsb
sahf
mov
sbb
or
fwait
cmpb
mov
cwtl
sbbb
cmp
iret
pushf
and
sbb
mov
ja
dec
pushf
push
pushf
test
sub
int3
mov
xchg
sbb
scas
in
lock
ficoml
inc
xchg
out
sub
test
dec
ret
mov
cmp
cmpsb
ret
add
mov
dec
mov
cwtl
mov
mov
inc
cltd
xor
sahf
mov
mov
add
lahf
addb
cli
pusha
or
fs
jnp
mov
lahf
xchg
mov
pop
push
sbb
cld
adc
xchg
ljmp
push
xchg
stos
loopne
jno
jnp
inc
lcall
filds
ds
and
fwait
ret
pusha
sub
mov
popf
add
call
popa
pop
add
hlt
or
xchg
and
mov
sti
imul
xchg
adc
pop
insl
cli
lcall
data16
push
inc
nop
pop
nop
notl
inc
xchg
dec
mov
xchg
sti
aaa
mov
xchg
notl
jnp
mov
xchg
stos
xchg
lods
xchg
mov
mov
xchg
mov
sub
jmp
sbb
lcall
mov
mov
add
fwait
jp
jne
jg
push
add
dec
cltd
pop
inc
cltd
lods
jg
sbb
inc
mov
sahf
jo
test
mov
adc
pop
or
shlb
xor
inc
xchg
dec
fcomip
mov
and
or
dec
rorb
pop
xchg
mov
xchg
cmp
adc
sbb
add
sbb
mov
dec
lahf
xchg
in
mov
iret
xchg
pop
sub
xchg
mov
xchg
test
outsl
notb
loopne
repz
clc
xchg
into
xlat
xchg
and
decb
or
xchg
add
or
fwait
negb
stos
sahf
mov
test
ljmp
sahf
cltd
sahf
out
sahf
cld
sahf
and
sahf
aam
adc
jae
cmpsb
lahf
test
out
lahf
push
lock
cmc
lcall
pushf
jbe
inc
insb
mov
xchg
rcll
fbstp
xchg
pause
xor
nop
ficoms
pusha
xchg
icebp
xchg
seta
xlat
call
inc
nop
dec
pusha
xchg
insl
xchg
jg
mov
lea
adc
xchg
and
sbb
dec
xchg
stos
add
jecxz
fcoml
js
and
lcall
adc
lcall
sbb
cwtl
mov
mov
xchg
mov
cltd
add
sahf
and
adc
cmp
cmp
lock
xchg
loopne
sub
add
xchg
stos
mov
xchg
mov
cmp
rclb
jnp
or
cwtl
mov
cltd
or
imul
js
nop
mov
or
and
mov
cmpsb
xor
sbb
pop
incl
add
ficoms
xchg
jo
cwtl
imul
cltd
lret
xor
cwtl
xchg
sahf
fstps
js
pop
jp
sub
mov
adc
icebp
mov
push
lods
cmc
nop
dec
std
mov
xchg
lds
push
dec
rcll
xchg
fstl
sub
mov
cmp
add
rclb
adc
pusha
popa
xchg
gs
imul
jno
jne
jns
jge
inc
xchg
addb
dec
xchg
push
xchg
push
lock
icebp
ljmp
movsl
xchg
test
dec
mov
mov
out
test
xchg
cltd
xchg
popf
xchg
loope
in
jmp
int
cld
int
cmc
stc
xchg
std
xchg
rcll
xchg
aad
push
xchg
push
xchg
pop
xchg
pop
mov
xchg
lods
push
mov
ret
jnp
mov
xchg
test
xchg
add
lods
add
xchg
jmp
cmc
xchg
stc
xchg
std
sarl
cld
xchg
lds
xchg
aad
fsts
and
fbstp
mov
and
xchg
cmp
mov
clc
adc
aaa
pop
call
cwtl
stos
mov
cmp
mov
mov
aaa
repz
adcb
xchg
call
xchg
pop
adc
pop
xchg
xorb
or
xchg
call
xchg
das
xchg
or
xchg
popa
adc
push
xchg
pop
xchg
add
xchg
sub
cmp
aaa
xchg
adc
out
cmp
loop
add
xchg
mov
rclb
rcrb
js
xor
and
cltd
sub
cltd
sbb
or
add
dec
in
sahf
push
cld
pop
rcll
mov
int
and
xor
push
lahf
mov
mov
fs
inc
nop
insl
and
popf
mov
adcb
shl
cmpb
jb
adc
popf
xchg
fistl
pop
xchg
movsb
xchg
or
fcoml
push
nop
jmp
nop
xchg
xor
mov
xchg
sbb
and
test
xchg
mov
or
lock
aam
rcrb
mov
xchg
sub
push
mov
and
mov
xchg
push
lock
add
fwait
fwait
jp
rcrl
fistpl
sub
fwait
dec
fwait
push
fwait
push
pop
fwait
stos
dec
std
jmp
xorb
sbb
add
nop
nop
sub
cltd
pop
cltd
or
jmp
sahf
bnd
movsl
lahf
sbbl
lahf
scas
pushf
fwait
pushf
and
mov
pop
pushf
dec
xor
ret
aas
adc
xchg
jae
mov
fistpll
cli
xchg
and
jp
xchg
cmp
mov
sbb
rclb
mov
push
push
ljmp
nop
adcl
xchg
or
jmp
xchg
fstpt
xchg
cmp
imul
jl
out
clc
stos
add
inc
call
xor
sbb
stos
cwtl
in
icebp
cltd
cltd
fstpl
fs
outsb
aad
fistpl
mov
add
inc
lcall
jg
xor
sahf
push
sahf
setle
push
shlb
sahf
inc
lock
loop
add
fwait
jmp
adc
pop
lahf
xchg
pushf
cld
es
call
popf
stc
popf
xor
lock
call
add
and
xor
test
mov
cmc
xchg
cld
mov
popa
clc
xchg
aad
xchg
daa
ret
nop
jl
sub
std
incl
dec
xchg
push
xchg
pop
add
movsb
adc
fldt
ficoms
nop
fists
jns
push
mov
movb
cmp
cld
xchg
rclb
mov
xchg
fwait
adc
popf
lret
pop
adcl
test
in
and
repnz
add
scas
jg
xchg
ficoml
dec
xchg
test
mov
loop
xchg
ss
lcall
cltd
adc
sbb
jns
inc
cld
ret
incl
push
xor
xchg
daa
xchg
adc
mov
decl
mov
repnz
aam
lock
lcall
test
nop
xchg
fwait
and
fs
jbe
cmpsb
add
ljmp
lcall
xchg
sahf
cli
sahf
sbb
inc
sahf
xchg
inc
lahf
in
jo
inc
lahf
scas
nop
sbb
adc
sbb
pushf
xor
mov
scas
jo
xchg
inc
xchg
jbe
xchg
dec
xchg
mov
fwait
dec
and
enterw
xlat
xchg
mov
call
mov
push
xchg
mov
mov
sbbb
cwtl
ljmp
and
lahf
pop
pushf
stos
icebp
push
and
adcb
push
cmp
xchg
jbe
notb
mov
call
add
pop
insb
xchg
jl
xchg
lods
add
test
push
call
jle
repnz
rcl
or
jl
pushl
loope
adcb
xchg
shll
xor
fwait
pop
fwait
mov
sub
cwtl
test
fnstcw
xor
adc
inc
cwtl
pop
cwtl
mov
into
cltd
sub
pushl
insb
or
mov
pop
cltd
mov
sahf
in
adc
sahf
in
outsl
clc
adc
ja
nop
mov
mov
xchg
out
lahf
sti
lahf
rcrb
lahf
sub
cmp
mov
add
add
dec
rcl
mov
pushf
sbb
jg
xchg
pushf
lds
cmp
wrmsr
mov
adc
outsb
dec
pop
shrb
insb
or
pop
xor
xor
notb
cli
xchg
loope
jmp
inc
ret
xchg
int
fsubrl
inc
xchg
xor
inc
xchg
xchg
test
pop
adc
sbb
nop
fsts
xchg
outsl
mov
fnsave
jo
adcl
push
add
push
xchg
rclb
xchg
fists
adc
mov
xchg
sbbl
les
cmp
xchg
into
xchg
cs
jle
xchg
jb
dec
xchg
lcall
cmp
inc
lcall
xchg
fwait
out
add
fwait
fwait
sub
mov
mov
add
adc
fildl
insb
add
sbb
pop
sbb
mov
loopne
mov
iret
pop
mov
cltd
jnp
dec
add
in
test
adc
sahf
add
adc
push
sahf
scas
lahf
out
mov
hlt
lahf
fstps
ss
cmp
decb
lahf
adc
pushf
mov
repz
rcrb
mov
pop
scas
popf
in
popf
std
popf
and
sbb
or
push
cmpsb
push
mov
add
xchg
jb
in
ljmp
rcr
adc
xchg
setae
xchg
bound
jne
call
inc
xchg
inc
je
jb
xchg
mov
adc
outsl
rclb
mov
loop
nop
rclb
jmp
insb
ss
push
into
push
adc
nop
inc
nop
push
xchg
stc
pushl
push
nop
pop
nop
mov
call
xchg
iret
cld
adc
xchg
adc
add
pop
cli
cmp
stos
dec
sub
xchg
lcall
xchg
rclb
xchg
and
xchg
jnp
mov
insb
mov
aam
aaa
mov
add
inc
call
push
adc
mov
adcb
pushf
adc
xchg
js
adc
xchg
cmp
xchg
or
xchg
arpl
mov
enter
sub
fidivs
jle
movsl
lcall
mov
adc
lret
cld
in
xor
sbb
lcall
test
sub
push
rcrb
fsubrl
jl
aas
cltd
ja
mov
sahf
mov
imulb
daa
lahf
xor
lahf
dec
lahf
push
lahf
fwait
mov
pushf
mov
mov
jns
adc
nop
aam
movsl
jl
push
popf
in
jne
adc
sti
cs
xchg
xor
adc
push
inc
adc
push
int3
ret
loope
loope
hlt
lret
xchg
ficoms
xchg
dec
xchg
test
jno
lods
jo
nop
sub
jge
sbb
mov
xchg
xor
aad
outsb
adc
dec
lods
mov
xchg
in
xchg
and
pop
adc
fs
xchg
pop
xchg
incl
clc
cwtl
fstpl
or
rolb
xor
mov
incl
pusha
pushf
std
loopne
mov
cli
shlb
adc
scas
xchg
cmp
imul
xchg
jno
add
lcall
pop
mov
mov
inc
jg
xchg
add
clc
add
add
mov
int3
and
out
cwtl
xor
enter
ljmp
lahf
jbe
mov
popf
add
jb
aad
incb
ljmp
xchg
cmp
pop
loope
xchg
popa
adc
or
in
and
adc
and
imul
dec
int
cld
xchg
jae
ja
jnp
xchg
inc
xchg
inc
xchg
dec
dec
ljmp
pop
les
ja
inc
js
sarb
and
scas
mov
hlt
xchg
xchg
or
ljmp
xchg
jecxz
out
jmp
sub
repz
notl
fcmovnu
xchg
mov
cmp
xchg
fistl
xchg
sub
mov
aas
xchg
add
cmp
push
lock
jg
xchg
adc
es
fwait
sub
aas
rorb
mov
push
fwait
cs
and
cwtl
adc
xor
cltd
jg
or
cltd
push
adc
mov
mov
lcall
inc
cmp
int
add
sahf
cs
xor
sahf
sbb
cmp
push
inc
inc
mov
lahf
mov
loope
int
cld
lahf
out
lahf
cld
lahf
ror
rcrl
pushf
mov
ja
or
pushf
enter
cmp
out
adc
popf
imul
data16
or
ljmp
xchg
pop
xor
xchg
xchg
nop
add
ds
xchg
and
mov
out
cld
inc
je
xor
push
xchg
cmpsl
xchg
and
jmp
or
inc
loopne
and
mov
lcall
fwait
movsb
fwait
mov
fwait
mov
sti
or
push
mov
fwait
mov
mov
shll
insb
fwait
push
fwait
test
lea
sahf
cwtl
loope
repnz
cwtl
aad
sbb
cld
decl
scas
aad
sbb
sahf
pushf
sahf
icebp
sahf
les
and
lods
lahf
mov
sbb
jecxz
in
and
lahf
movsl
pushf
xchg
addr16
shll
fldt
popf
xor
stos
jns
pusha
sbb
ret
dec
inc
xchg
xchg
ret
pop
push
loope
xchg
out
fcoml
nop
xchg
jle
jg
xchg
arpl
mov
xchg
scas
push
lret
ret
in
xchg
hlt
mov
mov
mov
movsl
fwait
ljmp
cltd
cmc
lcall
cmpsb
sahf
and
push
scas
lahf
and
sub
loopne
loopne
push
and
or
pushf
sub
loope
add
int3
dec
loopne
fs
cmc
push
jne
xchg
inc
ljmp
add
xchg
cmp
cld
in
adc
outsl
xchg
ja
pop
stos
call
sub
add
std
add
shll
mov
mov
out
jp
adc
in
pusha
adc
pusha
xchg
xchg
inc
xchg
jecxz
loopne
cld
inc
lcall
lea
fwait
popf
fwait
pushf
inc
mov
data16
je
mov
lcall
push
pusha
inc
dec
add
inc
movsl
jg
cltd
into
add
fiadds
pop
sahf
mov
inc
mov
sahf
fsubs
adc
sahf
mov
mov
cmp
lcall
pop
sbb
sbb
lahf
addr16
jne
jl
inc
adc
sbb
mov
push
lahf
dec
mov
jecxz
mov
hlt
pushf
lret
push
pushf
mov
popf
mov
lret
sub
and
outsl
add
cwtl
scas
cli
mov
nop
dec
nop
pop
xor
sbb
test
cmpsb
mov
ljmp
xchg
repnz
pop
lock
sbb
pop
inc
xchg
test
pop
lcall
loopne
iret
sbb
mov
cltd
cmp
in
loope
outsl
jmp
pop
and
call
out
popf
cli
adc
sub
fiaddl
dec
repnz
pushf
xchg
jmp
or
or
add
xchg
adc
inc
xchg
dec
adc
nop
fcoms
adc
xchg
fcoml
xchg
outsl
mov
mov
scas
loopne
jecxz
icebp
xchg
jle
int3
pusha
adc
mov
mov
mov
aam
push
push
enter
pop
xchg
mov
clc
lds
sbb
pop
sbb
fcoms
mov
loopne
xor
xchg
inc
adc
jp
or
xchg
stos
pop
jne
aam
or
dec
xor
lds
inc
dec
adc
loope
jne
lret
xchg
call
call
xchg
ja
test
nop
arpl
mov
xchg
inc
push
rcll
add
ljmp
ds
and
and
inc
cwtl
dec
pusha
jmp
lea
add
mov
les
pusha
lcall
rcrb
xchg
mov
fdivrp
fcomip
cmp
xchg
popf
add
cmpsl
xor
xchg
icebp
xchg
cli
add
jmp
mov
add
push
xchg
aam
flds
adc
jo
stos
sub
cmp
sbb
loope
adc
adc
inc
push
push
imul
xor
dec
xchg
push
xchg
pop
cmp
xchg
movsl
aaa
jg
aaa
sbb
mov
xchg
mov
xchg
pushf
std
call
xchg
loope
ljmp
incb
push
les
xlat
mov
fcoms
sub
pop
cmp
js
sub
add
rclb
sbb
jp
addr16
xchg
jbe
fs
jl
jg
scas
inc
dec
push
sbb
jnp
outsb
mov
xor
je
pushl
mov
adc
pop
lahf
nop
loopne
in
mov
hlt
inc
nop
stc
nop
ret
jo
int
jo
fsts
push
dec
lret
sarb
adc
popa
jmp
nop
inc
add
dec
push
jge
nop
ss
xchg
pop
xchg
sbb
jae
jp
sub
xchg
mov
dec
xchg
xchg
int3
xchg
hlt
mov
aam
add
add
pop
adc
lcall
lcall
jnp
dec
mov
sahf
sub
call
sub
decl
lock
xchg
orb
gs
push
xchg
xchg
movsl
decl
int
arpl
xchg
mov
movsl
xchg
mov
xchg
stc
fwait
pop
fwait
jae
mov
sub
icebp
xchg
fwait
sbb
jb
mov
lock
bound
lds
add
xchg
pop
xchg
nop
lods
xchg
mov
cmpsb
out
int3
adc
stos
xchg
xchg
xchg
rep
pop
xchg
jmp
dec
jp
fistps
xor
push
sub
clc
push
mov
mov
fwait
dec
fwait
sti
cwtl
sbb
cwtl
es
pushl
mov
push
inc
cltd
mov
and
pop
mov
sahf
mov
sub
ja
inc
lahf
fiaddl
stos
sbb
xchg
stos
cmc
dec
notb
pop
cmp
cmc
xchg
dec
dec
add
clc
das
push
rcll
xor
andb
xchg
mov
mov
add
add
lcall
inc
mov
call
cmp
push
push
test
add
mov
mov
mov
jmp
ret
adc
dec
mov
lcall
lcall
adc
incl
cld
sbbl
les
dec
adc
cmpsb
outsl
and
cwtl
mov
mov
cwtl
or
fists
dec
cwtl
test
or
cltd
repnz
sbb
mov
in
repz
aad
insb
insb
sahf
dec
sahf
pop
pop
sbb
dec
decl
lret
lahf
int
movsb
icebp
pushf
push
add
inc
pushf
mov
popf
sbb
mov
or
or
push
xchg
scas
fildll
xchg
push
test
jno
cmp
nop
aaa
jo
addb
sahf
rorb
fildll
lahf
into
mov
call
and
lock
aas
lcall
dec
inc
cmc
lahf
ljmp
andl
mov
imulb
popf
mov
add
popf
repz
popf
ret
popf
iret
popf
aam
add
shrb
psrlq
sbb
and
push
inc
mov
js
test
pop
addr16
sahf
sahf
out
pop
and
into
cmp
addr16
jmp
xchg
incb
mov
xchg
rclb
repz
mov
and
add
push
shll
inc
xchg
test
hlt
add
sahf
nop
xor
out
inc
pusha
imul
push
jo
adc
inc
add
lock
mov
cmp
out
outsl
add
cmp
inc
xor
xchg
ss
pushw
add
add
adc
das
push
xchg
out
xchg
divb
stos
jle
jp
add
inc
mov
inc
push
jo
cmpsb
xchg
mov
sar
adc
addr16
mov
notb
adc
mov
jnp
test
xchg
jbe
sub
dec
dec
xchg
push
xchg
push
es
xchg
pop
mov
or
xchg
mov
mov
mov
ljmp
xchg
xchg
xchg
xchg
xchg
lcall
xchg
testb
push
addb
ret
mov
xchg
xchg
ficoms
push
sub
xor
push
adc
mov
dec
call
hlt
push
shlb
mov
incb
push
mov
cmpsb
mov
mov
fwait
insl
aaa
xor
push
sub
xlat
mov
inc
clc
aad
cld
jp
xchg
adc
or
pop
cmp
lcall
stc
xor
and
rorl
test
je
mov
add
and
push
arpl
fcomip
sub
mov
mov
dec
jae
hlt
mov
cmp
sahf
shrb
jmp
xor
sbb
in
jae
das
clc
jmp
xchg
and
add
aam
jecxz
adc
mov
mov
aaa
add
mov
push
call
ja
sbb
jae
push
daa
je
xchg
inc
push
jg
scas
sbb
inc
sbb
jg
xor
cmp
popa
out
das
aaa
dec
add
sarl
stos
ss
outsl
inc
sbb
and
inc
mov
in
dec
inc
mov
movsl
out
daa
rclb
ret
add
cmp
ja
sbb
dec
mov
cmp
inc
out
sar
lcall
dec
jp
pop
inc
clc
add
das
mov
jmp
pop
dec
repz
cld
pop
mov
or
sub
test
jne
imul
add
lcall
cld
popl
adc
sti
stos
mov
add
push
mov
add
and
ljmp
jp
scas
add
mov
scas
xor
pop
mov
bound
imul
dec
insl
sti
jl
lea
enter
push
mov
cli
pop
cmpsb
xor
push
adc
sahf
sub
or
int
in
dec
xor
les
xor
call
push
jno
filds
icebp
pop
pop
loope
jno
sub
neg
lret
add
hlt
or
inc
in
mov
ljmp
xor
and
mov
pop
add
inc
mov
mov
addr16
add
pushl
pusha
hlt
dec
cli
fwait
in
mov
xor
pop
add
cwtl
pop
int3
testl
cld
mov
mov
jg
jo
jp
iret
mov
sbb
repnz
dec
or
lock
mov
sbb
cli
bound
sub
bound
add
mov
cmpsl
dec
sbb
jg
ficompl
add
test
mov
sub
shl
icebp
sub
mov
hlt
bound
daa
cmp
loop
inc
es
pop
mov
lcall
dec
xchg
and
in
add
shlb
fildll
mov
mov
or
stos
sbb
mov
add
add
gs
inc
gs
push
je
mov
jb
insl
jo
adc
or
jb
push
push
imul
dec
outsb
je
insb
outsl
arpl
fs
popa
ss
cld
data16
gs
jns
insl
push
outsl
imul
push
imul
jb
sbb
je
test
popa
mov
push
or
imul
sarl
dec
gs
sub
inc
jb
mov
xor
dec
imul
adc
xor
outsl
sti
sti
or
push
imul
gs
arpl
jae
insb
int3
ret
xor
sub
inc
jp
movsl
aaa
clc
pop
sbb
sub
sbb
insb
dec
outsl
jbe
dec
mov
data16
outsl
jb
dec
outsl
sub
xor
sahf
sbb
cltd
pusha
sahf
push
adc
insb
jbe
cmp
mov
push
xorb
fists
pop
cmp
inc
inc
push
andps
mov
mov
xor
ret
sub
jl
test
data16
in
push
jb
gs
rcrb
push
test
outsb
push
xlat
xchg
adc
adc
cmpsb
insl
push
je
push
mov
push
jo
hlt
jne
mov
test
dec
xor
xor
loopne
push
jns
gs
xor
cli
jns
sbb
and
test
inc
lock
jo
inc
adc
orl
mov
js
xchg
inc
push
imul
adc
js
add
bound
push
inc
add
adc
add
pop
add
add
outsb
dec
mov
ds
add
test
inc
aad
add
cli
pop
push
mov
popa
jae
dec
bound
adc
add
and
add
add
int
loopne
push
gs
popa
arpl
loopne
gs
outsl
insb
imul
aaa
sub
mov
fdivs
popa
insb
or
fadds
jl
mov
popa
hlt
push
jae
mov
imul
adc
insb
sti
sub
pop
push
inc
dec
dec
and
add
or
pushf
adc
sbb
sub
add
test
pop
add
jbe
xchg
and
push
add
testl
or
out
add
les
in
icebp
adc
subb
push
lahf
add
add
jp
neg
pop
mov
stos
add
or
xchg
sub
imul
ss
inc
pop
and
nop/reserved
add
push
add
lea
mov
dec
sub
pusha
cmp
call
and
mov
andl
and
test
sub
jb
in
popa
push
xor
movsb
add
outsb
dec
push
in
xchg
cmp
loopne
rol
cs
test
xor
push
loopne
roll
pop
xchg
arpl
pmaxub
dec
dec
sub
add
mov
iret
or
sub
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
cmp
jae
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
push
add
or
push
add
aas
add
add
add
add
add
add
add
jp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sub
or
add
inc
add
insl
add
add
je
jae
add
inc
add
insb
add
popa
add
add
add
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
imul
jb
insl
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insb
add
popa
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
arpl
insb
add
popa
add
add
add
add
push
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
imul
data16
jb
insl
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
insb
add
popa
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
popa
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
xchg
inc
testb
gs
int3
dec
mov
mov
imul
xchg
pop
les
cmp
test
movntps
xchg
sub
xor
addr16
nop
imul
cmp
test
and
pusha
pop
fnstsw
scas
dec
mov
rcr
inc
xor
je
in
pusha
cs
lds
scas
es
cmp
adc
xchg
jl
cmp
orb
or
mov
sarb
fistl
pop
repz
and
aas
lds
or
daa
xor
push
cmp
and
loop
adc
cmp
pop
testb
mov
cs
mov
stos
repz
leave
in
aaa
mov
hlt
rep
outsb
mov
into
pop
enter
mov
insl
out
xchg
fmul
cmp
loop
fnstenv
faddp
xchg
ret
lods
add
insl
sti
outsb
mov
push
scas
xchg
mov
pop
xchg
ja
lds
push
cmpsb
jb
js
dec
hlt
dec
pop
inc
and
notl
lods
jo
pop
fs
jmp
inc
out
cmp
inc
inc
add
dec
ficoml
push
xchg
fldl
cmp
push
ret
dec
mov
sub
mov
sub
lret
outsl
jnp
xchg
addr16
sbbb
ss
inc
loopne
push
mov
push
repnz
icebp
xchg
xchg
mov
cs
cmpsl
aas
cmpsb
xchg
loop
mov
jle
jg,pt
sub
xor
mov
div
push
repnz
mov
lods
bnd
outsb
data16
aas
xorb
int
ds
add
add
inc
and
push
and
sbb
mov
and
shrb
mov
mov
out
cmp
repnz
repz
lret
jp
lret
pop
insl
outsb
fdivs
push
cmpsl
cld
xor
ja
out
mov
lret
mov
cmp
or
sub
xchg
std
jecxz
js
mov
out
test
push
imul
in
push
fdivp
fisttps
negl
pop
lods
or
sahf
adc
out
and
in
lret
xor
cmp
testl
jb
mov
nop
add
lcall
adc
loop
push
dec
test
call
push
icebp
or
hlt
mov
push
sub
jl
aam
sarb
insl
adc
ficoms
in
push
pushf
add
sbb
movsl
imul
shll
out
jbe
test
jmp
inc
adc
dec
xchg
cltd
dec
jno
daa
xchg
call
aam
pop
mov
push
gs
add
cmp
mov
dec
push
in
test
push
mov
roll
or
mov
in
lock
mov
mov
les
stos
pop
imul
test
jo
out
mov
mov
inc
add
lods
les
sahf
out
and
shrl
orl
sarb
in
xchg
imul
mov
cmc
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
es
push
out
int
push
xor
sbb
jne
mov
fucomip
dec
and
sub
and
xchg
dec
xor
test
mov
inc
dec
adc
imul
mov
jo
sub
ja
or
cmp
inc
jecxz
mov
ss
jg
in
mov
jnp
sbb
dec
insb
stos
jo
adc
shll
cmc
jne
mov
push
cli
xor
nop
cmp
inc
imull
adc
lret
fisubrl
gs
xchg
or
mov
xlat
or
add
sbb
int3
lahf
mov
orb
dec
aad
sub
negb
jl
jne
cwtl
lahf
or
loop
or
clc
push
lods
test
adc
stc
test
pushf
xchg
loopne
das
jb
mov
xor
cmp
mov
cmp
xchg
aas
mov
je
flds
pop
repz
push
mov
mov
push
inc
popa
pop
mov
adc
in
fdivl
inc
cli
hlt
jle
repz
lock
repnz
inc
imul
popa
lcall
mov
cmp
fadd
test
sbb
ja
loopne
jo
loop
lea
sbb
imulb
xchg
and
shrl
add
test
fisttps
jl
and
adc
jecxz
mov
xor
icebp
stos
mov
inc
fists
sbb
adc
jg
jge
mov
sub
dec
push
mov
out
and
cmp
sahf
xor
jo
inc
test
dec
inc
inc
mov
add
mov
fists
ss
push
arpl
fldenv
sub
jg
push
add
dec
or
inc
inc
sahf
sarl
mov
and
or
push
cwtl
dec
jg
stos
out
xchg
push
cs
int
out
and
cmp
dec
xchg
pop
pop
lahf
pusha
jne
cmpsb
bswap
pop
fcompl
popa
je
xor
adc
cmpsl
stos
sbb
cs
mov
nop
mov
out
movsl
push
enter
jle
mov
and
xor
pop
or
mov
mov
cmpb
nop
sbb
in
mov
fisubrs
sbb
or
out
pop
lods
xlat
mov
ret
xor
imul
mov
out
arpl
in
nop
or
movsl
jmp
scas
push
cmp
adc
jecxz
notl
and
push
lods
mov
sarl
push
sbb
cmpsb
out
out
loopne
inc
adc
cmp
xor
movsb
sbb
sbb
stc
rorb
lock
dec
sub
xchg
xchg
leave
jo
inc
mov
aam
xor
rclb
adc
repz
inc
xchg
mov
mov
mov
mov
mov
sub
sub
dec
mov
outsl
xor
jp
adc
pop
jae
jae
cmp
cmp
outsl
push
push
inc
enter
jns
lret
jno
jg
addr16
dec
dec
data16
enter
dec
sub
int3
sub
jo
sub
ret
dec
mov
mov
mov
gs
sbb
jp
je
sub
push
mov
mov
movsl
sbb
cmp
cmp
mov
subb
dec
xchg
sti
out
sbb
cli
repz
push
fdivl
movzwl
sahf
in
movsl
sbb
cmpl
mov
int3
and
arpl
and
pop
xchg
push
sbb
aad
into
aas
rep
repz
xchg
jl
inc
jb
push
pop
popa
push
sti
les
jnp
pop
lret
int
xor
in
add
fdiv
mov
out
movsl
sub
jo
cmp
insl
fildll
int3
mov
ret
pop
out
inc
pusha
dec
int3
outsl
mull
push
arpl
cmp
leave
incb
arpl
fnstenv
jle
arpl
xchg
aas
sbb
scas
out
out
mov
lock
cld
cmpsb
push
fisttpll
ret
incb
daa
call
test
ret
cmp
rcll
outsl
aam
sub
mov
orb
out
mov
mov
ss
rclb
ljmp
lret
dec
bound
push
insl
adc
hlt
andl
xchg
push
or
shlb
push
clc
fiadds
dec
adc
ljmp
outsl
sub
jb
aaa
dec
jae
sub
aas
dec
insb
push
inc
leave
aad
inc
ljmp
mov
jne
sahf
in
pop
data16
jae
addb
mov
sti
arpl
cmp
adc
mov
test
in
xlat
jg
push
fsts
into
cld
or
rol
lret
push
inc
xor
adc
add
sub
lea
roll
mov
mov
pop
inc
cli
pop
push
dec
pusha
fstpt
push
mov
stc
cltd
shll
sub
sub
sub
filds
xor
add
sbb
pop
xchg
rol
jcxz
mov
and
out
push
orb
ss
cmpsl
ret
outsl
xlat
js
and
pop
out
mov
sub
cmp
jecxz
je
pop
fcomps
cld
pop
inc
dec
fstpt
inc
mov
ss
push
sub
inc
cmc
add
insl
jae
inc
add
ret
mov
pop
push
fsts
or
adc
cmp
mov
mov
xchg
ds
dec
jo
jmp
ficoml
dec
out
sahf
imul
jno
or
lret
cmc
cmp
sub
dec
je
popa
sub
popf
out
movsb
xchg
push
mov
movsb
sbb
inc
pop
adc
adc
rorl
mov
mov
inc
jbe
scas
push
fadds
pop
cmp
jle
fsts
dec
out
xor
and
dec
pop
xchg
shlb
mov
dec
xor
or
jns
nop
mov
test
mov
movsl
movsl
push
daa
pop
nop
andl
lea
out
sub
or
xchg
scas
in
xchg
lds
adc
roll
xor
push
mov
sti
test
test
out
mov
fildll
clc
jmp
mov
dec
in
cltd
dec
xchg
loope
mov
cli
xchg
inc
out
and
ja
add
xor
adc
mov
cwtl
shll
or
inc
mov
xor
mov
sarb
clc
ds
sub
push
add
fimuls
aad
push
dec
fbstp
lods
sub
cwtl
xchg
cmp
mov
xor
and
insb
ret
repnz
std
aas
clc
sub
mov
mov
push
and
inc
jb
push
loopne
aas
xlat
pop
fsubrs
out
xorb
sahf
call
push
fidivrs
jmp
lods
and
loope
pop
pushf
xor
movsb
cmp
mov
pop
pop
xchg
jae
shlb
jbe
jl
fwait
push
cmp
notl
inc
xchg
repz
mov
stos
test
mov
sarb
push
cmp
jmp
mov
lret
pop
dec
in
inc
mov
xor
mov
push
repz
push
iret
sub
in
stos
jbe
fmull
out
mov
jmp
cmc
sbb
xchg
pop
stos
and
adc
popf
shrl
mov
mov
adc
adc
pop
dec
cmpsb
sbb
pop
inc
jge
scas
push
mov
push
cmp
push
mov
sbb
fadd
push
imul
push
leave
mov
jp
cmp
push
inc
nop
xchg
cmp
insl
cmp
or
shl
pusha
loope
push
cmp
cli
push
int
or
inc
fcmovnbe
andl
adcl
in
push
mov
cld
aam
cmpsl
fstl
mov
cmp
int
int
aam
mov
je
mov
jae
pop
int3
dec
push
dec
movsb
jmp
rcrb
add
push
mov
sub
pusha
mov
xor
decb
aad
sbb
insb
loop
nop
cmp
and
rcl
jmp
cmp
xchg
mov
dec
push
hlt
ret
jl
sbb
cmp
mov
lret
pop
dec
add
mov
cmpsl
and
lcall
mov
xchg
rcll
adc
xchg
pop
fistps
or
lcall
rcrb
test
adc
mov
roll
jae
adc
lahf
inc
cli
sub
fdivr
cmp
cmp
sbb
les
ja
aas
cmpsb
sarl
shrl
add
push
adcl
jl
lahf
cmpsb
hlt
and
mov
push
push
stos
sahf
imul
sbb
fcmovb
ja
xchg
mov
dec
pop
stc
mov
cs
and
add
mov
and
push
fcom
xchg
cmp
or
inc
in
daa
mov
rcrb
push
arpl
idivl
js
pushf
xor
popa
add
or
push
rcrl
inc
movsl
pusha
mov
scas
out
add
pop
cmpsb
sbb
inc
jmp
stc
lock
adc
ljmp
sti
mov
xlat
xor
rcrl
xchg
jbe
repz
xor
mov
mov
xchg
aas
add
arpl
dec
fistps
pop
cmc
enter
ljmp
ljmp
xchg
cmp
popl
les
adc
jmp
lahf
mov
cltd
outsl
mov
pop
mov
movb
test
repz
test
adc
pusha
les
ja
xlat
lahf
fwait
push
inc
js
lea
mov
inc
mov
imul
loope
ds
and
adc
test
pop
es
mov
lods
leave
inc
fsubs
pop
jbe
mov
dec
push
jp
xor
add
rolb
es
orb
fidivs
jecxz
dec
test
loopne
sbb
cmp
imul
aam
dec
jne
add
jns
sub
gs
ss
sub
in
inc
mov
xor
fistpll
sbb
pop
sub
mov
mov
scas
mov
enter
ret
sahf
sub
pop
mov
dec
cmp
repnz
imul
xor
add
inc
pop
out
test
xchg
std
iret
cmpsl
daa
sub
push
jae
std
loopne
jmp
push
cli
xchg
mov
ret
pusha
adc
push
xor
daa
or
mov
data16
xchg
xchg
and
cmp
cmc
lods
imul
cli
sub
adc
rorl
jns
lods
stc
cmp
rclb
mov
js
mov
mov
dec
xchg
xchg
call
and
aam
mov
mov
cmpsb
jns
sahf
sti
cmp
mov
cmp
dec
enter
ds
push
cltd
sti
mov
test
das
das
xchg
bound
push
push
mov
fisubrs
mov
push
xchg
jnp
cmp
dec
in
fbld
cmp
push
pop
xor
jge
das
in
or
orl
jmp
aaa
aam
ss
and
aam
or
enter
and
mov
pop
mov
push
push
fcoml
pop
imul
jb
and
push
popa
fcomp
sub
ret
mov
test
lods
icebp
xchg
push
cmp
or
rcrb
mov
movsb
mov
inc
repz
fwait
aaa
xor
ss
mov
add
lahf
aam
mov
leave
push
jbe
pop
jl
call
inc
cli
fldenv
jae
cli
and
cs
aas
jns
aaa
test
add
mov
in
xchg
decb
pop
es
test
cmpsl
sub
adc
or
mov
add
dec
inc
lods
test
mov
xchg
pop
mov
out
popa
fildl
dec
inc
mov
repnz
inc
lea
push
pushf
outsl
les
stos
jae
lods
mov
or
jmp
dec
dec
out
lret
jmp
cmp
push
loop
rorl
divb
outsb
xchg
shll
fistps
push
addr16
pushf
fwait
das
nop
pop
and
add
push
xchg
enter
and
sub
mov
mov
jno
pop
ret
notb
cmp
or
out
pop
shrb
adc
inc
push
adc
mov
push
lea
xlat
lcall
xor
push
inc
in
inc
fcmove
pusha
adc
data16
lods
cmpb
dec
mov
xchg
aad
mov
dec
sti
loope
xchg
sahf
or
leave
shlb
and
xchg
cld
dec
pop
push
xor
jl
stc
xor
mov
dec
ds
testb
mov
fmuls
push
ja
push
je
scas
cmc
inc
les
xlat
loope
lods
or
movb
sbb
jae
lea
je
or
pop
xchg
fistpll
aaa
sub
jbe
cmpsb
jecxz
sub
pop
clc
fwait
aad
ret
mov
cmp
fnstsw
push
mov
lea
jae
sarb
jge
mov
mov
loope
icebp
inc
popf
jae
xchg
xchg
jne
and
fnstsw
popf
and
xchg
jno
sub
es
cmc
inc
pop
repz
jb
lcall
jno
cli
cmp
jnp
inc
int
or
fdivrl
out
shl
sub
inc
lahf
cmp
ror
icebp
out
jne
xor
pop
sub
sbb
daa
movl
out
fstps
dec
loopne
push
jg
mov
fistpl
mov
cmc
dec
dec
xchg
xor
pop
pushf
in
cmpsl
movsb
mov
mov
and
push
fwait
pushf
movsb
push
xchg
lret
scas
pop
or
xchg
push
lret
push
mov
inc
in
inc
sbb
ret
pushf
mov
pop
pop
imul
sub
add
shlb
adc
cs
push
rorl
mov
jmp
mov
mov
lcall
fisubl
mov
frstor
cmpsb
jb
adc
ret
push
mov
loope
jg
and
jp
and
lret
mov
pop
mov
sahf
lock
xor
cmp
in
aam
sti
pop
int
xor
push
repnz
fisubl
and
cmc
mov
push
xchg
pop
cltd
cmp
lods
cmpsb
or
repnz
push
add
outsl
dec
imul
inc
ss
mov
stos
ds
hlt
je
sub
stc
sbb
je
into
mov
fwait
push
add
loope
xchg
inc
out
outsb
les
push
dec
adc
adc
out
std
xchg
inc
ljmp
andb
in
adc
and
or
cmp
js
lock
inc
mov
std
pop
ret
test
mov
push
popa
mov
mov
mov
in
popf
add
push
xor
ret
mov
testb
in
js
outsl
rorl
dec
adc
test
popa
mov
iret
cld
xor
pop
clc
cmp
cmp
stos
stc
mov
movsb
dec
add
ljmp
rdtsc
pop
mov
pop
ret
sbb
jo
in
addr16
call
and
movsl
fildll
mov
push
xor
xchg
jecxz
mov
es
mov
sub
arpl
dec
mov
fbstp
repnz
mov
pusha
and
adc
jnp
sbb
mov
mov
jo
dec
cld
ljmp
adc
fsubs
sarb
out
inc
leave
lcall
std
xchg
in
xchg
and
std
testl
lcall
int
xchg
cmpsl
out
mov
pop
adc
lcall
out
xorl
mov
cli
jge
mov
mov
jl
mov
fsubrl
push
xor
repz
dec
and
cltd
testb
dec
sbb
sub
dec
les
rcrl
shr
dec
sub
test
movsb
icebp
jno
push
xor
sub
xchg
push
or
jns
push
aas
mov
mov
fimuls
inc
es
fsubrl
sub
xchg
cmp
xchg
mov
es
xchg
ss
cmpsb
xorl
stos
rcr
rdmsr
loop
jno
lret
in
test
xchg
xor
jne
inc
stc
and
push
or
std
pop
mov
out
mov
push
and
popf
int
jnp
jle
ret
ljmp
in
fdivrs
mov
mov
sbb
cmp
out
and
adc
sbb
mov
inc
bound
xchg
push
ret
addr16
fldcw
xchg
fiadds
inc
dec
lods
push
lds
jno
insl
pop
hlt
rorl
mov
sub
and
stos
fisttpll
stos
xchg
and
pop
ret
cs
out
out
sti
adc
or
addr16
ss
int3
shll
push
orl
lods
xor
lcall
jge
dec
xchg
adc
cmp
lahf
or
mov
adc
les
add
mov
leave
cmp
aad
lods
movsl
stos
xor
shll
outsl
out
repz
mov
stos
sub
sub
and
das
bound
jnp
jns
mov
mov
mov
sbb
jbe
cmp
and
jne
dec
data16
fcmovnu
aam
ds
in
inc
in
ret
pop
adc
loopne
mov
clc
pop
repz
addr16
mov
outsb
add
mov
xchg
imul
inc
mov
push
int
push
jmp
sub
mov
lock
adc
outsl
cmc
xor
imul
dec
dec
mov
push
xor
xor
pop
call
pusha
pop
and
imul
cmpsl
jecxz
and
cwtl
imulb
mov
loop
pop
fidivs
xchg
jb
scas
sbb
xor
and
or
or
or
cli
push
cmc
mov
sbb
sub
sahf
jl
fsub
out
mov
cmp
mov
pcmpeqw
push
jo
clc
in
xor
outsl
data16
insb
sarb
push
sub
std
and
pop
pop
or
insl
adc
jmp
sub
push
test
aas
jecxz
mov
stos
sub
and
add
mov
in
dec
or
or
ljmp
push
sub
sbb
xchg
lahf
or
test
lahf
daa
pusha
or
pop
pop
push
inc
adc
cmp
or
mov
test
pop
addb
movsb
outsb
fwait
pop
lahf
sub
sbb
xchg
fmul
add
and
xlat
adc
dec
fisttpll
mov
sbb
rcrl
into
shlb
push
lret
jb
ljmp
dec
or
es
fcmovnb
filds
pop
adc
push
inc
stos
jge
mov
imul
jb
cli
arpl
fimuls
sahf
test
fwait
mov
hlt
cmp
or
addr16
std
pop
shrl
lock
test
or
xchg
push
mov
testb
ret
in
in
cmp
scas
movsb
jnp
and
ss
dec
adc
mov
ret
std
std
dec
xchg
jmp
lret
mov
imul
pop
imul
lds
cmp
rorb
ror
test
pop
xchg
pop
imul
adc
mov
jbe
add
inc
adc
add
dec
cmp
sbb
dec
cmp
sub
add
dec
cmp
xor
add
dec
cmp
ds
cmp
or
add
add
add
cmp
push
dec
cmp
dec
cmp
jbe
cmp
test
add
add
add
add
add
add
add
dec
cmp
add
add
fmuls
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
cs
insb
add
jo
je
fs
insb
add
popa
outsb
fs
insb
add
addr16
jo
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
bound
inc
jb
popa
je
add
add
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
addr16
jne
jb
dec
inc
dec
dec
add
