push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
stos
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
clc
popf
push
pushl
decl
ret
sbb
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
loop
add
je
add
shlb
add
mov
and
add
and
add
and
add
and
add
add
xchg
and
add
add
and
add
and
add
add
and
add
and
add
and
add
add
cmpsb
and
add
add
add
add
mov
add
pop
and
add
and
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
dec
and
add
add
sbb
add
add
add
test
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
xchg
and
add
add
loop
add
je
add
shlb
add
mov
and
add
and
add
and
add
and
add
add
xchg
and
add
add
and
add
and
add
add
and
add
and
add
and
add
add
cmpsb
and
add
add
add
add
mov
add
pop
and
add
and
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
dec
and
add
add
sbb
add
add
add
test
add
add
add
popa
je
inc
imul
jns
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
jne
jb
outsb
je
push
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
inc
gs
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
imul
jb
je
arpl
add
data16
je
je
dec
popa
outsb
fs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
insb
outsl
jae
add
add
gs
outsl
jbe
inc
imul
jns
add
movsl
add
je
gs
imul
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
jne
jb
outsb
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
inc
gs
imul
js
push
add
pop
or
jae
dec
gs
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
outsl
outsl
insl
gs
jnp
inc
gs
imul
outsb
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
gs
outsl
arpl
add
rolb
jae
imul
mov
inc
imul
dec
gs
popa
addr16
add
sbb
ja
jo
imul
pop
dec
jae
imul
jae
popa
addr16
add
popf
pop
dec
outsb
jae
jb
dec
outsb
jne
add
inc
push
xor
cs
insb
add
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
gs
js
insb
imul
jb
gs
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
insl
add
mov
jo
and
jns
push
pop
lahf
jg
push
cld
insl
xchg
lods
cmp
xchg
stos
out
dec
sbbl
pop
push
jmp
sbb
cmc
sub
inc
hlt
mov
inc
mov
jp
push
test
xor
mov
stos
mov
fmulp
adc
dec
mov
nop
dec
mov
fldl
dec
cmp
xchg
adc
pop
sub
push
or
sarb
loope
push
sub
fisubrs
mov
test
sub
bsr
imul
cmpsl
mov
jge
sarl
mov
push
sub
inc
sub
enter
mov
push
inc
jbe
pop
xor
ja
push
mov
mov
lods
aaa
pop
jne
pop
jle
leave
mov
adc
xchg
das
jge
js
xor
movsb
out
jl
and
popa
pop
mov
jge
inc
sub
pop
out
add
or
test
mov
imul
cmp
xchg
sbb
cmpsl
jecxz
adc
mov
shl
pop
add
scas
mov
cmpsl
mov
xchg
les
push
add
leave
xor
inc
xchg
sbb
icebp
frstor
or
mov
sbb
inc
push
jecxz
inc
or
movsl
popa
cmp
insb
test
add
sbb
nop
addl
jp
or
notl
mov
pusha
jg
bnd
inc
jecxz
pushl
or
jbe
popa
popa
sbb
setl
dec
lock
sbb
sub
mov
mov
es
loope
and
mov
xchg
adc
push
jns
adcb
daa
shlb
jle
dec
dec
into
adc
xchg
lret
das
loop
cs
jo
mov
out
mov
cmpsb
arpl
insb
mov
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jle
add
jnp
stos
lods
stos
add
test
push
mov
mov
mov
lret
lret
lret
int3
rcl
in
rcl
shl
ror
iret
hlt
int
into
hlt
leave
enter
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
rcl
sar
xlat
fcom
std
xlat
xlat
fdivr
xlat
xlat
aad
aad
rcl
sar
int
into
aad
aam
rcl
sar
ret
ret
ret
std
mov
mov
scas
iret
movsb
mov
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
ror
iret
aad
fcom
xlat
fcom
call
aam
dec
int3
int
int
int
aad
dec
int3
into
inc
mov
mov
ljmp
cmpsl
cmpsl
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
rcl
call
xlat
fdivr
xlat
xlat
call
aad
dec
into
into
dec
lret
into
int3
int
mov
mov
mov
mov
test
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
pop
pop
pop
fs
aas
ds
sbb
sbb
sub
aaa
aaa
cmp
and
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
enter
rcl
call
aad
call
aad
call
rcl
dec
enter
inc
ret
ret
mov
mov
scas
lods
scas
jmp
pushf
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jge
jge
jge
jno
jno
bound
mov
cmp
inc
mov
outsl
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
enter
lret
lret
lret
mov
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
xchg
fwait
fwait
cltd
in
addl
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jl
fcoms
addl
jl
jl
jo
outsl
out
push
fdivs
je
jg
jg
jns
jp
gs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
sahf
mov
ficoms
xchg
jle
js
pop
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
xchg
std
mov
jg
jo
jno
jne
jae
jle
jle
test
jp
data16
cmp
and
and
jge
jle
cltd
cltd
fwait
lea
test
icebp
lods
stos
stos
sti
lods
lods
stos
lods
lods
stos
test
mov
fwait
xchg
xchg
xchg
incl
jge
jns
jns
jnp
jns
mov
xchg
movsb
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
xchg
incl
xchg
lea
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
push
pop
push
rdmsr
inc
inc
inc
dec
insb
insl
insl
jl
test
leave
lcall
out
lcall
std
mov
incl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
pushf
pushf
sahf
std
mov
mov
xchg
in
xchg
nop
in
test
push
jne
or
add
or
inc
daa
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
cmpsl
cmpsl
ljmp
test
scas
mov
xchg
test
rolb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
lcall
mov
call
nop
nop
xchg
xchg
xchg
popf
popf
pushf
movsl
mov
stos
movsl
movsb
movsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
je
mov
jg
test
int
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
mov
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
xchg
xchg
lcall
sahf
mov
mov
stc
cwtl
cwtl
lcall
xchg
xchg
les
cltd
cltd
in
xchg
cwtl
out
mov
nop
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
jns
mov
jae
mov
outsb
ljmp
packuswb
stos
or
lods
or
mov
jg
mov
mov
lods
pushf
movsl
mov
movsl
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
popf
lcall
sahf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
lcall
cltd
mov
cld
sahf
mov
xchg
push
xchg
pop
jg
xchg
dec
jp
cltd
cmp
imul
and
sahf
pop
arpl
movsb
push
jmp
adc
stos
pcmpgtd
lods
packuswb
lods
adc
mov
imul
mov
insl
mov
fwait
scas
mov
lods
lods
scas
mov
movsl
mov
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
lahf
sahf
jmp
movsl
jmp
cwtl
xchg
decl
mov
decl
ja
lcall
xchg
dec
jp
xchg
cmp
decl
pop
call
or
call
add
lcall
jmp
sbb
mov
outsb
pushl
outsb
mov
and
mov
pop
jne
mov
xchg
scas
mov
lods
lods
mov
mov
movsl
movsl
add
pop
pop
adc
scas
mov
shlb
lcall
mov
cmpsb
ljmp
stos
stos
ljmp
fwait
pushf
decl
pop
jbe
mov
decl
arpl
mov
pop
incl
add
push
decl
add
xchg
add
xchg
add
cltd
add
lahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
les
jnp
lds
cmp
jg,pn
enter
enter
mov
mov
lret
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
lahf
jmp
stos
test
stos
lods
stos
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
addl
incl
push
incl
add
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
cmpsb
ljmp
popf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
add
cmpsl
add
stos
add
jb
ret
cmp
int3
inc
call
inc
call
dec
mov
dec
xchg
call
dec
xchg
fimull
fisttpll
fistl
call
xchg
std
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jp
movsb
popf
mov
jmp
test
pushl
mov
pushl
mov
mov
scas
mov
movsb
xchg
decl
sbb
call
adc
pop
decl
add
xchg
add
xchg
add
sahf
add
mov
add
test
pop
gs
mov
dec
call
push
cltd
call
push
cltd
fsts
fcompl
fistps
fistps
jmp
pop
mov
jmp
pop
lahf
call
test
mov
cmpsb
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
sahf
lcall
sahf
cltd
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
call
push
call
or
nop
add
xchg
add
lcall
jmp
add
mov
fs
mov
xor
fldenv
jmp
arpl
jmp
gs
jecxz
test
out
cmpsl
call
data16
ljmp
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
push
call
add
lcall
jmp
add
mov
pushw
adc
roll
jmp
outsb
stos
jmp
outsl
stos
jmp
jo
ljmp
jmp
scas
in
je
out
jbe
in
jb
jmp
mov
mov
test
lcall
sahf
add
add
insb
insl
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
mov
aaa
jae
mov
sbb
pop
lcall
add
add
test
add
mov
fs
mov
sbb
fistl
jmp
ja
ljmp
in
xorl
push
test
push
test
call
mov
mov
cmpsl
popf
popf
sahf
daa
sahf
sahf
lahf
add
add
add
pop
add
xor
push
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
mov
lcall
cmp
movsl
inc
jle
movsb
inc
jg
mov
sbb
xchg
add
pushf
add
mov
add
scas
add
mov
fs
mov
add
shll
cmp
ljmp
out
mov
push
xchg
sar
pop
push
nop
nop
clc
xchg
clc
ret
out
pop
fnstenv
clc
stos
stos
stos
mov
popf
popf
xor
pushf
popf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
ret
ret
mov
jl
lcall
dec
jg
lods
dec
cmp
xor
lcall
add
mov
add
stos
add
mov
mov
add
movl
out
xchg
ret
push
fwait
enter
push
lcall
cmc
lcall
sti
sahf
int3
cld
sahf
int
sti
lcall
loopne
lret
mov
mov
lahf
sahf
mov
add
add
add
aaa
add
das
sub
outsb
dec
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
ret
inc
leave
mov
mov
ljmp
push
xchg
movsl
sub
cltd
or
pushf
add
movsl
add
stos
add
mov
popa
mov
add
enter
rorl
je
loopne
xchg
out
mov
push
movsb
into
push
cmpsb
int3
clc
cmpsb
int
cld
cmpsl
iret
cld
cmpsl
sar
sti
test
sar
test
iret
push
popf
mov
dec
leave
int3
std
mov
mov
sahf
mov
xchg
add
lcall
xor
xor
or
inc
bound
pop
xlat
jae
jo
mov
rol
rol
mov
ret
ret
inc
inc
leave
enter
ret
xchg
cmpsl
jmp
mov
scas
dec
test
sahf
sbb
pop
jmp
popa
pushl
inc
add
into
add
add
loopne
jl
out
pop
test
negl
sar
cld
scas
aad
sti
mov
sti
mov
cld
mov
cld
mov
mov
mov
pushl
sar
mulb
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
outsl
outsl
mov
xlat
fsubr
aam
xlat
not
rcl
std
lret
int3
int
lret
lret
lret
lret
lret
leave
leave
inc
enter
mov
mov
lods
push
mov
stos
cmp
jmp
add
mov
arpl
mov
add
roll
outsb
fadds
je
fiadds
jae
call
jno
cld
lods
aad
std
mov
std
mov
cld
mov
fdivr
cld
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
loop
out
call
test
in
leave
fsubp
fucom
fcmovu
fdiv
fdivr
aad
std
int
into
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
faddl
ja
in
jbe
out
xor
cld
mov
inc
std
inc
dec
loopne
inc
std
enter
dec
loopne
sti
mov
lret
lret
into
mov
mov
xchg
adc
add
add
incl
std
incb
std
std
add
div
or
in
in
pop
in
in
out
sub
out
in
dec
call
call
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsl
push
jmp
add
mov
fs
mov
add
int
insl
fadds
jae
fiadds
ja
call
inc
pushf
cli
mov
in
cld
lret
loop
std
into
in
std
into
in
std
into
in
std
into
loope
dec
loope
call
in
std
shl
std
shl
std
shl
sti
fcos
in
mov
inc
out
cmpsb
cmpsb
cmpsb
mov
xchg
xchg
add
add
add
std
add
std
add
clc
testl
repnz
push
out
lock
pop
in
lock
out
in
pop
fnstsw
loop
lds
xchg
sti
mov
push
pop
jmp
pusha
pushl
add
leave
add
add
flds
jne
in
jp
in
push
jle
cmc
pop
test
std
shl
shl
call
jmp
std
shl
aad
std
xlat
call
fucomi
std
fldl2t
shl
push
ret
in
lret
leave
leave
rep
stos
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cld
add
testl
repnz
repz
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
rolb
jo
fildl
jne
out
ja
out
sbb
stc
jne
sti
ret
loopne
cld
fldl2e
fldl2e
std
fucomi
fldl2t
fsubr
std
fucomi
fucomi
fucomip
fsubrp
fsubrp
cld
aam
push
aad
out
fdivr
iret
rcl
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsl
outsb
add
add
add
loope
add
leave
sbb
stos
jl
repnz
and
sahf
add
cmpsl
add
mov
arpl
mov
add
int3
add
aam
jae
filds
jne
call
sub
std
aam
std
fsubrp
fsubr
fldpi
fucomi
std
jmp
std
shl
sti
iret
loope
sti
shl
clc
into
fdivrp
clc
int
push
ret
out
mov
jmp
rcr
call
fcomp
sti
mov
mov
lcall
add
add
add
fcom
add
enter
mov
lahf
jmp
sub
mov
add
mov
mov
add
roll
jo
fadds
jb
loopne
jns
call
aaa
xchg
cld
xchg
cli
lret
cli
lret
loop
sti
clc
mov
aad
hlt
mov
sar
repnz
int
call
mov
iret
std
jmp
shl
call
in
mov
mov
xchg
add
add
add
int3
lret
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
dec
or
rorl
ficoml
ja
loopne
cmp
jmp
scas
lret
mov
call
scas
ret
cld
fidivs
mov
leave
ljmp
rcr
aad
loop
fcmovb
out
loopne
in
out
test
out
lock
ljmp
push
stos
stos
stos
adc
test
test
sahf
mov
rolb
ret
rolb
ret
ret
pop
mov
lods
aam
dec
jg
sahf
sbb
test
imul
es
mov
ja
mov
dec
xchg
les
stc
lret
test
mov
out
mov
mov
lret
lret
rcl
int
int
mov
rcl
jg
jb
fnstsw
gs
in
out
out
ljmp
sub
cmc
cmc
and
icebp
repnz
fcmovnu
or
mov
int
xchg
add
mov
sarl
mov
xchg
lock
xchg
ljmp
mov
sarb
stos
mov
ret
mov
cmpsl
enter
leave
ret
int
int
ror
shlb
rcl
push
iret
rcl
dec
aam
xlat
inc
rcr
aad
aad
xlat
daa
fistpl
fchs
fstl
fsub
loop
loope
in
call
icebp
out
add
sti
testb
std
add
std
add
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
lds
leave
lds
into
lret
ror
and
aam
sbb
aam
adc
aad
or
xlat
push
rcr
xlat
add
fcmovnu
add
loopne
add
in
add
in
jmp
add
std
incb
mov
mov
add
ret
les
mov
mov
mov
push
ret
or
enter
leave
add
int
add
aad
add
fcom
add
fcom
add
xlat
add
aad
add
xlat
loop
aad
add
loopne
add
fucom
add
in
add
lock
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
lds
mov
mov
mov
stos
stos
stos
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
rcl
jmp
aam
cmc
rcl
sar
ror
sar
int3
int
stc
int3
int3
int3
hlt
mov
mov
iret
stos
stos
stos
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
rcl
xlat
xlat
call
aad
iret
rcl
dec
iret
int
lret
mov
mov
stos
icebp
cwtl
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jae
fs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
rcl
call
rcl
dec
lret
mov
mov
mov
ljmp
sahf
lahf
xchg
xchg
xchg
jmp
outsl
jo
push
push
push
dec
add
add
add
add
add
add
jg
addl
addl
aam
push
mov
push
push
push
stos
push
outsb
insb
push
pop
pop
cmp
aaa
cmp
outsl
jo
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
cltd
fwait
fwait
out
test
movups
xor
add
and
add
adc
add
pop
cltd
lcall
pushf
cwtl
cltd
fcoml
addl
jmp
jp
sarb
jnp
jp
jp
je
jb
push
push
push
cmp
jae
popf
pushf
popf
mov
scas
scas
repz
scas
scas
sti
scas
lods
lods
std
test
pushf
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
movsl
cltd
je
jb
adc
adc
add
add
add
add
insl
insl
insl
pop
stos
movsl
test
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
pushf
lahf
ljmp
test
mov
mov
mov
xlat
movsl
mov
addb
add
add
add
add
pusha
or
scas
mov
cmpsl
mov
mov
mov
nop
call
sahf
mov
negl
jg
stos
push
push
push
jo
push
push
outsl
insl
outsl
insl
xchg
subb
xchg
lock
mov
lcall
pushf
pushl
outsl
xchg
mov
dec
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
lcall
fwait
lahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
out
nop
jne
notb
pop
cmp
dec
jnp
movsb
inc
jns
scas
ss
scas
daa
je
mov
outsb
ljmp
sbb
pop
mov
mov
mov
jle
movsl
movsl
push
pusha
popa
popa
or
mov
call
popf
popf
jmp
mov
xchg
decl
addl
cld
xchg
pusha
test
xchg
dec
jp
cmp
nop
daa
call
lcall
punpcklbw
test
sbb
sbb
mov
jno
mov
and
pop
mov
scas
lods
xchg
sahf
sahf
popf
adc
add
add
pusha
pop
popa
or
stos
mov
test
lahf
lahf
ljmp
test
test
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
popf
add
or
jb
mov
das
jle
ret
xor
leave
xor
dec
pop
cwtl
inc
test
divl
test
add
add
add
pusha
pop
popa
or
movsb
test
jmp
scas
scas
pushl
mov
jmp
aas
jb
mov
pop
decl
or
xchg
push
decl
add
mov
add
mov
insb
inc
cmp
call
inc
mov
aam
nop
call
inc
nop
fimull
call
popa
sahf
inc
cmpsb
mov
mov
mov
mov
incl
add
add
pop
pusha
pop
or
mov
ljmp
mov
mov
mov
stos
lcall
sbb
decl
or
push
call
pop
jmp
add
mov
dec
xchg
call
pop
pushf
ficompl
jmp
pop
lahf
jmp
pop
mov
jmp
insb
cmpsb
dec
cmpsb
mov
ret
movsl
xor
addb
add
add
dec
pop
jle
jl
fwait
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
call
add
lahf
add
add
scas
add
mov
xor
fisubl
jmp
outsb
test
jmp
jo
out
jb
jmp
jns
call
cmpsl
mov
shll
addb
dec
dec
dec
pop
outsb
insl
insb
bound
cltd
cwtl
pushl
mov
mov
mov
jne
lcall
cmp
popf
sub
call
add
movsl
add
stos
add
mov
inc
or
aad
xchg
jmp
jp
ljmp
out
xchg
push
xchg
fldcw
mov
push
fwait
lcall
sub
sub
push
push
dec
pop
pushw
loopne
mov
mov
mov
mov
xchg
cmpsl
inc
cmp
cltd
push
pop
jmp
add
mov
fs
mov
adc
mov
push
xchg
push
cltd
cltd
push
cltd
lret
fwait
lret
clc
xchg
jmp
lods
inc
mov
lods
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
test
movsl
pop
mov
lods
dec
cmp
and
add
ljmp
add
add
lret
fsubs
cmp
jl
push
movsb
int3
push
cmpsl
into
cli
test
sar
sti
stos
iret
std
lods
sar
sti
cmpsb
int
out
dec
rol
stos
test
popf
or
add
add
push
dec
dec
aaa
jb
je
stos
test
int3
out
int
cmc
lret
lret
leave
leave
leave
std
enter
mov
bound
jmp
add
mov
gs
add
iret
add
fiaddl
xchg
push
xchg
mov
mov
mov
sti
mov
fcos
cld
mov
ljmp
repz
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
loope
loopne
loopne
fstp
fcmovnb
fcmovnu
fcmovnu
aam
fsubr
mov
addr16
cmpsl
je,pn
movsl
pop
popa
ljmp
add
enter
add
jecxz
jl
lock
mov
cld
ret
loop
inc
loopne
inc
std
enter
lret
std
lret
cld
out
mov
lret
mov
xchg
sahf
sahf
pushf
sbb
add
add
incb
std
add
jmp
or
in
in
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
inc
add
into
add
faddl
je
call
outsb
mov
cld
fdivrp
sti
shl
call
out
std
shl
shl
call
out
call
out
shl
push
xlat
fcmove
sar
mov
mov
add
std
incb
std
incl
cld
cld
pop
aam
push
mov
pop
xchg
lahf
or
pop
pushl
add
rolb
jo
loopne
jbe
out
and
std
shl
fldl2t
fsubr
fldl2t
xlat
call
cld
std
aam
push
xlat
xlat
sti
mov
popf
sahf
das
add
add
int
int3
or
arpl
ljmp
add
movb
call
add
loopne
ja
out
xor
stc
int
clc
lret
cmc
hlt
ret
xlat
icebp
ret
aam
out
ret
aam
in
aad
out
shl
in
shl
in
fucomp
mov
test
incb
aam
push
mov
je
or
mov
insb
inc
pop
jae
int
jl
sub
sti
loopne
fwait
clc
loop
mov
out
jecxz
lret
jmp
fdivrl
int3
leave
loopne
sarl
in
fcompl
out
jmp
rorb
mov
add
stos
stos
stos
add
xchg
movsl
les
pop
mov
mov
fidivrl
jg
rol
stos
mov
lahf
mov
iret
mov
nop
aam
leave
jge
int3
insl
ror
into
pop
aam
iret
dec
xlat
xlat
fnstcw
fisubrs
in
fisubs
jecxz
repnz
in
in
or
incl
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
leave
and
rcl
pop
mov
rcl
or
loope
or
int3
int3
add
incl
std
incl
lcall
shufps
or
into
int
add
std
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
xchg
leave
leave
mov
ret
rol
mov
scas
scas
insb
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
enter
sar
aam
std
rcl
sar
iret
int
std
mov
stc
mov
mov
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jb
jae
addr16
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
int
rcl
aam
into
int
inc
mov
ljmp
mov
mov
add
xor
add
sbb
jne
je
xchg
adc
outsb
outsb
ret
arpl
outsb
outsb
outsb
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jno
and
add
pop
add
add
jb
jb
popf
xchg
lcall
test
mov
test
addl
push
push
push
inc
mov
pushf
into
movsb
mov
mov
decb
lea
lods
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
movsl
test
test
mov
xchg
xchg
xchg
cld
sahf
popf
pushf
cmc
cltd
lcall
push
push
push
imul
jg
nop
aam
xchg
notl
mov
pushl
push
cwtl
mov
scas
lods
push
lods
stos
stos
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
lcall
cltd
fwait
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
arpl
std
pushf
inc
jbe
cmpsl
aaa
jbe
lods
sub
outsl
pushl
ss
mov
mov
imul
into
add
xchg
pop
scas
cmpsb
stos
test
popf
sahf
sahf
jmp
movsb
cmpsb
call
jle
mov
nop
inc
jb
mov
push
mov
call
or
mov
sbb
je
mov
sub
lds
xchg
mov
mov
subl
jne
push
movsb
pushf
mov
cld
cmpsl
cmpsb
test
scas
scas
scas
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
inc
mov
roll
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
mov
scas
pushl
mov
movsb
call
pop
arpl
push
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
mov
call
pushf
mov
mov
mov
test
test
add
add
bound
adc
pushf
fwait
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
jmp
jl
push
jge
out
jge
fstps
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
test
pop
pushl
or
dec
cwtl
out
mov
push
xchg
clc
xchg
enter
jmp
cmpsb
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
sbb
movsb
add
mov
arpl
ret
call
adc
jmp
lods
push
cmpsl
iret
clc
lods
sar
cld
lods
sar
cld
scas
sar
std
scas
sar
ljmp
fldenv
incb
xor
xor
jo
jno
scas
mov
mov
aad
mov
aam
fnop
rcl
out
lret
cli
mov
mov
jmp
add
ret
call
add
call
pop
mov
cld
ret
cld
ret
cld
ret
lock
ret
test
addl
stos
stos
lods
add
jmp
or
jmp
out
outsb
movsb
es
ljmp
add
int3
add
fiadds
ja
out
aaa
xchg
cli
mov
cld
into
in
call
out
call
in
call
out
call
in
hlt
leave
fcos
aad
int3
in
lods
scas
scas
popa
addl
add
incl
std
push
int
shrl
sahf
sbb
lods
add
mov
add
jecxz
jp
cmc
push
movsl
cld
enter
aad
cld
aad
cld
aad
cld
shl
stc
shl
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
insb
dec
push
jne
ficomps
cmp
imul
out
mov
shl
ljmp
loope
lret
aam
jmp
fcmovnu
scas
push
lcall
add
sarl
movsl
pop
xchg
stos
dec
and
push
mov
shll
int3
js
mov
mov
lret
adc
int3
outsl
xlat
lret
iret
pop
fst
xlat
dec
in
loopne
call
in
out
sbb
mov
mov
cmp
mov
scas
push
mov
mov
les
les
ret
sbb
fstp
bswap
int
or
aam
push
incb
cmpl
add
add
add
mov
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
adc
inc
xor
icebp
cltd
scas
add
roll
mov
addr16
es
jg
mov
mov
popf
xor
lret
jp
sbb
dec
jo
sbb
and
sarb
lock
mull
sbb
push
xchg
pop
jnp
sarl
dec
ss
xor
ret
push
add
cmp
or
insb
sub
lods
push
push
push
dec
push
adcb
das
cld
jl
and
jnp
mov
bound
mov
ljmp
pop
xchg
jae
out
pop
stos
pop
or
mov
bound
je
imul
mov
inc
pop
aad
xor
sarl
test
ja
mov
mov
jb
xchg
js
push
lods
mov
mov
in
outsb
add
or
es
mov
sbb
inc
rcrb
fdivr
test
ftst
scas
cltd
pop
sub
xchg
pop
fstl
fwait
mov
and
mov
add
jno
jb
jbe
cmc
popf
and
add
ret
ret
jo
out
mov
sub
pop
pop
dec
mov
adc
adc
ds
fisubrs
and
jo
fldt
aad
icebp
leave
inc
jno
fldl
sub
gs
xchg
nop
in
repz
xor
dec
ljmp
xchg
int
mov
insl
outsl
sbb
add
push
mov
mov
pop
pop
mov
pop
mov
pop
xor
arpl
dec
test
gs
idivl
cmpsl
imul
xchg
hlt
cwtl
cmpsb
mov
pop
add
dec
sub
xchg
sub
pusha
repnz
clc
cli
int3
xchg
and
cltd
fs
je
xor
jno
sub
push
jns
pop
mov
or
or
je
nop
cli
or
or
repz
mov
in
jbe
ljmp
lret
push
inc
xor
std
dec
dec
les
push
lret
push
push
cltd
and
jle
push
push
popf
mulb
jno
repz
and
xchg
ds
sub
jg
jecxz
mov
addr16
cmp
sti
pop
xchg
pushf
adc
push
add
xor
shlb
mulb
fsts
dec
movsl
pop
insl
int3
dec
push
enter
enter
lret
std
and
cmpsl
call
or
sti
test
jl
jecxz
lods
xor
addr16
sbb
outsb
pcmpeqb
mov
sbb
mov
in
mov
push
mov
cltd
cmp
scas
js
int
pushf
mov
cmp
push
jmp
out
out
ljmp
push
popa
cwtl
cmp
mov
mov
roll
push
mov
adc
xchg
sub
das
clc
inc
cwtl
or
rcl
loope
fisubrl
mov
test
lods
jg
push
jg
adc
int
sub
nop
adc
data16
jne
cmp
repnz
test
pop
enter
ljmp
shrl
push
jbe
jmp
ds
data16
test
call
cpuid
stos
sub
fldenv
dec
xchg
add
jno
cld
mov
icebp
subb
sub
cmp
int
test
cmp
push
test
scas
inc
sti
mov
cmp
dec
jbe
cmpsl
rorl
fs
add
jge
push
jnp
mov
data16
fidivrs
jge
sbb
jbe
leave
fnstenv
xor
or
pop
push
xor
push
mov
mov
mov
mov
aam
incl
push
mov
cmp
jne
arpl
ljmp
push
loope
sti
adcb
insb
out
ss
dec
dec
mov
jnp
mulb
mov
push
fwait
jns
scas
xchg
jmp
pushf
and
mov
ljmpw
cltd
cmp
xchg
shrb
add
movsb
lret
pop
pop
push
arpl
popf
dec
inc
mov
adcl
daa
lea
and
jbe
ret
shll
jae
in
cmpsb
and
cmp
mov
sub
dec
outsl
sub
jns
faddl
mov
cs
fnstenv
lcall
push
pop
ljmp
xor
add
adc
dec
or
cltd
ss
mov
cld
jmp
add
xor
iret
mov
ret
mov
push
cmp
jno
mov
or
cli
push
fs
mov
push
lcall
jo
or
add
mov
inc
and
sbb
dec
lahf
add
adc
dec
jns
jae
mov
or
mov
insb
imul
adc
lea
pop
lods
ja
push
xchg
lcall
pop
inc
out
adc
or
xchg
pusha
mov
xchg
outsb
pop
insb
sbb
int
js
imul
ret
inc
pop
pop
sub
movsl
jns
push
fiaddl
mov
pop
mov
data16
in
into
sarl
jae
inc
push
add
rcl
and
mov
dec
push
and
mov
dec
push
ljmp
ret
cmp
popf
and
sbb
cmc
add
ss
jge
mov
or
fldl
in
dec
jo
fcmovb
and
mov
dec
pusha
push
sbb
mov
pop
idivb
pushf
insb
repnz
inc
fmull
or
mov
dec
cmpsl
sub
dec
loopne
cltd
xchg
push
and
jnp
sbb
xchg
popf
cmp
xlat
add
fs
leave
xor
rclb
inc
popf
adc
pushf
adcb
bound
xchg
aad
aam
pop
ret
repz
addr16
psubsb
xor
loopne
inc
sub
out
sbb
xchg
mov
xor
icebp
mov
pop
in
orl
cli
dec
shrl
ret
iret
jno
in
mov
enter
lods
inc
inc
xlat
cmp
ja
pop
pop
cmc
mov
xchg
hlt
stos
jl
fstl
sbb
decb
les
stos
dec
loop
movsb
lds
imul
sub
push
orb
jl
movsl
sbb
mov
roll
popa
or
test
insl
add
pop
pop
icebp
push
and
js
gs
mov
test
std
xchg
sub
fisubrl
lea
aaa
out
cltd
adcb
lods
js
sub
mov
fldl
test
stc
pusha
cld
adc
sub
dec
xor
jg
sahf
xor
shrb
mov
add
scas
inc
mov
js
clc
popl
lcall
push
in
enter
xor
cmpsb
inc
out
jb
push
jmp
les
jno
dec
in
mov
lahf
aaa
inc
xlat
push
mov
mov
fstpt
addr16
mov
mov
scas
sti
jno
out
mov
bound
into
sbb
push
fiadds
js
out
cmc
test
cs
cltd
std
dec
and
push
imul
mov
std
jns
insl
clc
fwait
xchg
mov
jnp
jns
fisubs
imul
add
dec
push
out
popa
xor
ficoms
push
mov
inc
push
fs
jge
mov
add
fisttpl
push
out
cld
and
xchg
dec
inc
xlat
jg
mov
out
pop
cmc
roll
stos
inc
cmp
jl
and
leave
pusha
lea
xor
out
loopne
mov
popf
xor
insl
sbb
ds
mov
inc
xchg
adc
sub
xor
adc
ss
in
sahf
pushf
xor
mov
icebp
mov
and
inc
fsubrs
das
test
popa
cwtl
testb
jmp
stos
sbb
in
pop
add
mov
push
ret
aad
mov
mov
fisubs
setnp
test
xor
scas
mov
ret
mov
shrl
aam
leave
lds
nop
daa
dec
out
pop
fsubr
insl
sbb
mov
push
jg
shrb
mov
je
xorb
mov
pusha
les
nop
inc
xlat
pop
out
enter
adc
das
stc
in
xchg
cmpsl
ds
push
xchg
xchg
mov
jae
imul
cmpsb
cmp
mov
fisubl
lret
xchg
sub
ficoms
insl
push
in
lods
adc
orl
jne
pop
repnz
repz
lret
mov
fdivrp
xchg
shlb
es
leave
add
lock
dec
jns
sub
cltd
sbb
sahf
xor
adc
into
gs
mov
insl
fldenv
pop
push
jge
cmpsl
test
call
jne
dec
jecxz
adc
nop
dec
sbb
popa
mov
sub
adc
xor
stc
nop
inc
jge
pusha
stos
data16
pop
dec
mov
sub
xchg
sub
std
loop
addr16
mov
xor
and
cmp
lret
inc
fidivs
outsb
out
fwait
pop
sub
dec
ds
add
adc
dec
jl
popa
outsb
out
cmc
mov
nop
sub
add
dec
loop
lea
push
es
mov
inc
pop
hlt
jp
mov
daa
inc
insb
push
jmp
in
dec
push
jg
aad
mov
inc
fldl
xchg
jns
and
imul
jmp
out
dec
sbb
mov
mov
adc
mov
pop
les
jg
inc
jno
jg
cmp
pop
hlt
jmp
cmpsl
ds
pop
pop
hlt
jg
adc
cmp
nop
daa
cmp
dec
sarl
pop
pusha
sahf
clc
mov
pop
ds
adc
mov
inc
movsl
test
pop
ljmp
stos
mov
scas
inc
mov
jl
jns
cld
sahf
repnz
in
jecxz
iret
push
add
shlb
xor
inc
xchg
lea
icebp
mov
sbb
cltd
xor
lret
bound
jae
jmp
push
pushf
xor
dec
loop
arpl
mov
push
jbe
mov
jecxz
lahf
ss
mov
add
scas
mov
test
sub
pop
pusha
push
cltd
xor
sbb
push
xlat
add
cli
js
push
push
insl
ret
scas
cld
insb
and
shrb
mov
adc
add
mov
jb
xor
push
cld
xchg
dec
mov
mov
pop
mov
mov
outsb
push
imul
add
iret
pushaw
and
ret
mov
pop
and
inc
add
icebp
pop
fbstp
pushf
movsb
cmp
insb
sbb
xchg
jle
inc
jo
push
pop
add
add
xchg
or
fidivl
loope
scas
cs
popf
xor
lds
loop
lahf
je
outsl
pop
cmc
pusha
outsb
pop
cmc
test
movsb
cmp
es
lcall
movsb
mov
sarl
cmp
stos
jns
popf
lods
int3
ja
mov
fisttps
movsl
rclb
jmp
dec
icebp
sbbl
loop
and
add
xor
in
xchg
xchg
sub
mov
jl
sub
pop
pushf
pop
addr16
jl
shrl
sbb
jge
push
mov
out
fs
push
iret
lcall
cwtl
mov
xchg
cld
jge
cmpsb
sbb
cld
xchg
subl
fdivl
cmc
adc
inc
jle
mov
push
les
jnp
inc
insl
inc
push
jmp
lcall
fnsave
xchg
cs
repnz
fisubl
mov
jo
int3
lods
inc
testl
pop
jmp
test
insb
mov
push
mov
inc
jge
mov
jmp
lea
mov
mov
xchg
lea
xchg
sub
mov
dec
sbb
cmp
pop
cmc
dec
rcrb
mov
outsb
imul
roll
and
test
insb
mov
sbb
stos
clc
sub
cs
idivb
loopne
aad
test
jmp
shlb
pusha
cmp
mov
push
aas
mov
rcrl
xor
push
mov
shrl
push
xor
add
bound
int3
jne
les
lea
xchg
pop
stc
xor
push
sbb
cmp
scas
pop
icebp
pop
mov
test
popa
add
add
popa
pop
hlt
push
aad
js
lock
push
jmp
cmpsl
inc
sbb
fsubrs
scas
adc
adc
sub
push
inc
fiadds
xchg
sub
push
in
je
js
ja
stos
or
std
gs
adcb
es
jns
pop
inc
mov
pop
pop
jb
dec
lea
xchg
imul
pop
jge
lea
xchg
sub
xchg
pop
lock
adc
fwait
mov
and
sub
movsl
cmp
out
inc
fcomps
pop
fnstenv
lods
testl
mov
out
hlt
inc
imul
adc
push
in
push
test
ss
mov
idivb
lods
mov
ret
mov
loopne
adc
pop
popa
clc
mov
push
in
sbb
ja
dec
loopne
cwtl
push
cmpsl
lods
sub
pushf
pop
popa
clc
mov
jae
pop
dec
xchg
inc
ljmp
push
ret
mov
emms
pop
hlt
push
mov
mov
push
les
or
xchg
popf
scas
push
in
and
lods
inc
inc
or
dec
push
cmc
mov
loope
stc
data16
push
mov
jb
js
push
push
mov
xchg
std
or
addr16
outsb
add
and
call
jg
lcall
push
add
jge
xor
int
dec
filds
cmpb
and
xchg
dec
sbbl
daa
aas
addr16
gs
cwtl
das
cmp
jp
aas
pop
sub
imull
rcrb
cmp
jno
add
add
push
in
jbe
add
inc
mov
imulb
dec
xchg
push
pop
push
push
mov
push
jmp
lcall
test
shl
popa
out
xchg
push
mov
jp
popa
sbb
lods
or
gs
sbbb
pop
in
adcl
loop
sbb
mov
inc
xlat
stos
jl
fmull
ljmp
jae
push
inc
mov
ljmp
jns
mov
push
in
incb
out
test
enter
jno
push
push
fldcw
js
pop
outsl
jmp
outsl
fcoms
lea
inc
fidivl
call
sahf
xor
mov
jecxz
inc
aam
inc
fldenv
pop
cli
call
popf
cmp
ret
pop
mov
faddp
pop
mov
fdivrl
add
rcrl
in
inc
stos
mov
hlt
mov
inc
scas
push
sti
xchg
push
iret
mov
sbb
push
in
cmpsl
cmp
inc
fcmovu
mov
cmp
jns
mov
fnsave
xchg
mov
stos
imul
jp
xor
jmp
leave
addr16
rorb
stos
sti
sbb
es
insl
and
xchg
jne
enter
or
fsubr
and
xor
inc
popa
clc
dec
dec
xchg
sub
cld
xchg
in
clc
js
sub
sbb
inc
dec
mov
sbb
cmp
cmp
test
mov
cli
pop
fsubrs
push
montmul
cmpsb
inc
cmpsb
dec
jecxz
stos
test
cli
lcall
arpl
pushl
mov
inc
fadds
movsb
cmp
mov
imul
clc
test
mov
and
mov
dec
test
aas
and
inc
jg
push
int
mov
jbe
xor
and
ret
lds
dec
dec
sub
or
test
xchg
jmp
add
adc
jp
or
cltd
mov
in
sub
sbb
enter
fistpl
cmpl
jnp
mov
test
es
mov
andb
loopne
xchg
lea
shrb
cmp
adc
test
inc
mov
dec
sub
xchg
mov
and
stos
mov
andb
push
jle
and
push
lods
add
add
ljmp
sub
cmp
sub
jmp
and
adc
icebp
dec
cwtl
lock
fbld
lret
ret
lds
adc
mov
fstl
mov
inc
mov
into
ret
fcmovne
mov
fcom
cs
fsubs
es
sbb
hlt
or
inc
jne
jmp
pop
inc
mov
sbb
xchg
lea
pcmpeqd
dec
sbb
test
pop
or
mov
mov
test
mov
pop
scas
loope
sbb
mov
fimuls
jecxz
or
xchg
fidivrs
iret
jecxz
out
test
add
sahf
mov
out
jae
xlat
mov
pop
lock
cld
xor
out
out
mov
add
iret
xor
das
xlat
ret
int3
test
sub
jmp
mov
and
mov
lock
and
popf
xor
and
insb
iret
in
leave
adc
dec
mov
mov
or
cmpsl
ds
cmpsl
ds
add
add
sarl
mov
inc
ficoms
int
xor
push
cmpsb
lods
inc
sbb
inc
insl
inc
outsl
push
jae
std
xchg
or
jl
ja
lds
push
popf
daa
mov
xor
dec
sbbb
das
testb
mov
insb
add
std
xchg
scas
xchg
repz
rcrb
mov
in
hlt
enter
in
jmp
or
jns
dec
in
fwait
es
dec
sbb
mov
imul
mov
stos
adc
or
data16
mov
filds
in
pop
aaa
push
pushf
pop
mov
mov
icebp
mov
testb
adc
xor
xor
leave
pop
sbb
jb
pop
push
inc
fdivs
sub
repz
aam
lods
dec
fistps
mov
mov
sti
aas
or
sbb
mov
xchg
pop
adc
push
out
push
ss
popf
test
mov
int3
nop
mov
add
lea
dec
mov
pushw
jg
jmp
mov
fldt
lds
leave
pusha
xchg
cmp
out
and
mov
mov
xchg
sub
jb
sbb
sbb
push
xchg
cmp
push
cwtl
das
mov
and
jbe
mov
stc
push
push
popf
inc
and
pop
xchg
sub
pop
xchg
sub
bound
into
push
in
ret
rcr
mov
in
mov
je
or
mov
out
jnp
cmp
lods
and
mov
into
pop
add
aaa
into
ljmp
fcompl
mov
mov
les
xchg
sbb
ret
cmp
fcompl
insb
lods
inc
pop
icebp
into
gs
fs
and
hlt
in
test
jmp
sbb
xor
mov
mov
dec
frstor
shlb
inc
fnstenv
mov
ret
pop
pop
aaa
xchg
cs
sbbl
test
shrl
dec
std
xchg
dec
or
arpl
lahf
fcmovnu
outsl
or
xorl
shrl
insl
cmp
aam
push
push
es
sahf
jbe
shrb
inc
pop
pop
cmpsl
ds
cmp
popf
test
jno
inc
or
lcall
jno
dec
xchg
cmp
call
push
pop
out
dec
xor
mov
mov
sub
test
push
cltd
xor
dec
add
sub
inc
fadd
jnp
shrl
aad
push
adc
add
jecxz
mov
inc
jecxz
enter
xor
push
mov
jg
stc
stos
ret
inc
or
test
push
cld
jb
mov
mov
push
jne
enter
jae
bound
ret
popf
xor
arpl
rolb
enter
push
out
xor
les
push
pop
sahf
jo
mov
push
ret
jle
jae
in
xchg
aam
or
push
enter
nop
daa
fwait
test
lret
bound
stos
inc
mov
enter
aad
inc
and
pop
cwtl
xchg
lds
lock
dec
mov
or
xchg
xlat
outsb
adc
lock
xor
test
cltd
lods
inc
sub
cmpsl
ds
sbb
test
loop
inc
leave
sub
inc
sbb
bound
cmp
xsha256
cmpsb
rcrb
mov
jb
or
and
jae
arpl
ds
jge
daa
pusha
sbb
jg
pusha
pop
cmc
xor
sub
addr16
int3
arpl
dec
loope
xchg
aam
sub
mov
dec
repnz
pop
icebp
and
xor
mov
push
mov
sarl
fiadds
in
push
add
ds
cmp
cmp
pop
inc
fldt
mov
sbb
ds
stos
in
or
dec
in
sub
xor
leave
pushf
mov
sti
int
cmpsl
ds
out
montmul
cmpsb
iret
loop
add
dec
loope
and
testl
dec
loopne
std
iret
data16
mov
incb
push
xchg
bound
sbb
and
sub
push
adc
dec
loope
addr16
in
inc
sbb
xchg
pop
pop
icebp
mov
mov
out
loope
fidivs
add
xor
hlt
mov
rorl
aam
iret
data16
test
mov
ret
aad
sbb
les
pop
repz
mov
into
sahf
or
leave
cmp
push
mov
add
aas
mov
imul
xor
sub
cs
dec
aas
stos
ja
jbe
int3
jg
lcall
xchg
mov
pop
jb
pushf
fidivrs
into
mov
insl
add
scas
data16
push
sbb
mov
out
test
pop
pop
hlt
dec
cmpsl
jmp
iret
out
mov
adc
ret
pop
imul
imul
and
push
in
sbb
dec
xchg
sub
test
mov
pushl
xor
cmp
and
adcb
jb
xorl
in
cmp
movsl
out
xlat
lahf
fisttpl
xchg
sub
rolb
int3
arpl
aad
xchg
adc
and
and
jnp
mov
addr16
adc
test
in
jge
pop
addr16
jae
rorb
xchg
sub
cmp
dec
mov
testb
adc
andb
stos
xchg
inc
test
ss
push
lods
mov
xor
pop
dec
jecxz
lods
xor
sbb
into
in
cmpl
sbbb
mov
repnz
cmp
lret
bound
dec
mov
movsl
mov
subb
push
ljmp
aas
dec
push
mov
lods
test
lock
cmpsb
addr16
xlat
call
shrl
xchg
mov
enter
js
push
ljmp
inc
xlat
add
je
and
sarl
mov
inc
lahf
or
inc
cmp
mov
and
scas
inc
out
or
insb
cmp
test
fwait
dec
jl
in
mov
lret
sub
inc
xlat
loopne
shlb
cmpsb
repz
xchg
and
inc
or
mov
sbb
cmpsl
cmp
cmp
or
push
xchg
mov
out
xchg
mov
aam
pop
call
fnstenv
pop
lock
aas
jne
adcb
inc
or
jb
and
push
mov
or
es
repz
add
adcl
push
out
xor
ror
push
lods
dec
mov
xor
push
cmpsl
sbbl
jecxz
movsl
pop
adc
cmp
sub
dec
xchg
icebp
mov
and
fs
cmc
push
sarl
mov
ret
adc
jae
push
movsl
rolb
push
cltd
lea
pop
repnz
scas
jmp
xor
popa
dec
lea
insl
pop
negb
movsl
cmp
cmpb
inc
stc
nop
je
adc
jo
dec
lahf
cmp
and
je
popa
lret
aas
pop
jne
dec
lea
cmpsl
stc
sub
aam
fnstcw
or
and
lret
arpl
incl
lds
cmc
jno
lret
jbe
ljmp
or
push
sbb
dec
js
mov
divb
inc
jb
pop
sub
pop
enter
push
pop
es
mov
bound
pop
cmc
outsl
sub
push
inc
pop
sahf
push
xchg
fimull
pop
test
insl
sahf
cmpsl
outsb
sub
insl
lret
ds
adc
and
mov
jp
stos
xchg
sub
js
icebp
cmp
xchg
icebp
pop
xchg
idiv
imul
mov
cmpl
rclb
and
gs
iret
dec
repz
inc
leave
lock
in
aaa
movsb
sub
dec
test
out
xchg
jb
jmp
cmpsb
pusha
fcomip
jo
mov
mov
sub
or
into
outsl
daa
add
fisttpll
pop
pusha
aam
jnp
es
xchg
pop
stc
add
ret
iret
pop
push
or
xor
outsb
adc
xchg
subl
sahf
or
pop
les
mov
iret
data16
imul
scas
inc
mov
xchg
cmp
xchg
pop
pop
sub
jns
mov
mov
push
out
aas
test
and
xchg
fimuls
mov
ret
lock
jecxz
mov
mov
inc
add
mov
jmp
dec
lods
push
rcrl
dec
fmull
xchg
sub
and
mov
mov
std
push
ljmp
or
aad
repnz
xlat
data16
lock
sbbl
push
aad
xchg
sub
dec
jge
subb
xchg
add
pop
aam
fists
mov
mov
in
or
xchg
xor
pusha
mul
push
jge
addl
cli
xchg
pop
fcoml
rcrb
or
sub
aaa
popa
add
inc
jmp
mov
and
xchg
xorb
mov
ret
pop
sbb
adc
push
mov
arpl
or
movsb
sbb
addb
lcall
sub
cmp
cltd
xchg
push
fidivs
aaa
cmc
mov
mull
fmul
or
cmp
aaa
jmp
sub
push
mov
pop
je
or
repz
out
mov
or
xchg
and
ja
fistps
add
inc
cmpsb
push
outsl
clc
cmpsb
pop
shll
fmuls
adc
jbe
xchg
and
jle
jmp
push
sub
pop
pop
xchg
mov
adc
lahf
xchg
push
or
adc
imul
adc
roll
mov
sub
dec
loopne
or
jp
add
jmp
and
in
out
ret
sub
movsb
and
mov
sub
loop
dec
rcr
aam
mov
sbb
lea
push
fdivrs
cmp
std
stc
fisttpl
stos
add
xlat
outsb
pop
sub
clc
push
call
popf
int3
xchg
fldl
push
test
mov
sub
pop
ds
cmpsb
scas
ljmp
add
lahf
insl
or
mov
mov
flds
dec
jbe
sar
sub
cmp
dec
push
sub
fwait
adc
sbbl
add
imul
pop
insb
mov
out
and
adc
stos
xchg
out
pop
sbb
sub
pop
shl
xchg
rcr
rolb
in
gs
stc
mov
in
out
aaa
das
in
in
inc
jge
push
add
and
xchg
sbb
or
fwait
xchg
out
mov
push
out
lods
lds
adc
add
lea
sub
shrb
mov
stos
xor
lods
push
pop
or
push
andb
test
cmpsb
sub
ljmp
les
mov
cmp
addr16
cwtl
xor
xchg
adc
sub
or
dec
xchg
xor
cmp
int
arpl
enter
jb
xor
push
inc
mov
cmpsb
mov
xor
bound
mov
cmpsb
repz
dec
xchg
inc
pop
lock
aad
shrl
repnz
or
das
fcompl
xlat
rcrl
adc
mov
dec
loopne
scas
cmp
and
or
sar
sub
lahf
pop
dec
pushf
fidivs
movsb
cmp
lods
divl
ficoms
outsb
dec
loopne,pt
push
jl
pushf
mov
ret
outsb
sbb
adc
bound
push
aaa
cwtd
and
or
je
jne
repnz
xchg
ja
add
mov
cwtl
dec
je
mov
addr16
sub
mov
jmp
stos
inc
add
push
push
sbb
pop
es
mov
cmp
cmp
mov
push
sti
int3
stc
fsubs
push
mov
mov
xchg
add
shr
enter
fnsave
pop
adc
mov
sub
outsb
fs
jl
insb
jbe
sahf
mov
inc
ss
cmp
jbe
mov
push
testl
aaa
andl
adc
xor
cmpsl
push
jae
loope
imull
or
les
daa
mov
addr16
bound
mov
out
lock
in
adc
add
je
or
test
inc
or
xor
dec
xor
sbb
aam
pop
mov
mov
sbb
adc
addr16
cltd
add
cmp
dec
push
push
or
or
insl
addr16
push
xchg
jo
xchg
int
pop
insb
xchg
jb
cwtl
das
cmp
dec
fcmove
mov
lock
lods
add
insb
popl
aam
push
out
out
xchg
leave
pop
lods
sqrtps
leave
jns
das
mov
test
mov
sbb
push
das
clc
cmp
push
mov
xor
lds
cmp
incl
or
scas
inc
cmp
loopne
aaa
mov
mov
pop
test
push
adc
adc
sbb
fdivs
and
inc
adc
jmp
jns
sti
out
add
cmp
pop
jge
xor
sub
testl
or
push
dec
push
adc
mov
stos
ss
out
mov
cmp
in
lret
add
sub
xchg
dec
enter
iret
mov
xor
lock
mov
jnp
xchg
test
loope
icebp
mov
cmc
lds
xor
rolb
sarl
sahf
push
add
and
xchg
xor
mov
popa
sbbb
xlat
lcall
ljmp
out
pop
mov
mov
push
call
jmp
mov
or
dec
rorl
jg
hlt
stos
push
arpl
or
dec
fcompl
xor
push
ret
mov
mov
or
mov
inc
mov
shr
jecxz
sbb
inc
loopne
mul
shrb
shll
mov
std
xchg
out
shrb
jno
ret
mov
push
sub
test
sbb
xlat
mov
sbb
pop
cld
sub
lods
inc
pop
inc
jno
js
out
xchg
rcrl
std
shlb
test
stos
mov
pop
in
or
and
xor
cmc
test
mov
add
movsl
and
jbe
lods
in
fidivrl
sbbb
push
jnp
notl
cs
jmp
lret
push
daa
xchg
sti
push
pop
mov
fs
rcrb
dec
mov
adc
push
stc
sbb
stos
mov
aas
dec
mov
jns
fistl
fnstenv
xor
jnp
xchg
and
push
and
xchg
inc
xlat
outsb
je
loop
mov
sub
add
leave
fdivl
jo
xchg
or
cmpsl
mov
out
jo
iret
aad
xchg
cwtl
dec
in
nop
in
pop
popf
xchg
sub
jl
xlat
orb
test
cmp
and
pop
mov
push
cmp
out
inc
xchg
xchg
dec
dec
in
mov
loope
xchg
inc
pushf
iret
mov
push
jmp
mov
xchg
popf
iret
movaps
fisubl
imul
sti
pop
lret
add
insb
xchg
jecxz
pop
push
leave
aaa
je
lods
cmpsl
faddl
push
or
cmp
xchg
sub
cmp
enter
dec
loope
pop
cmc
testl
xlat
sub
cmc
loop
sub
adc
xchg
loope
sbb
xchg
adc
lret
ficoms
stos
cli
xor
mov
xor
cmp
testb
cmp
ljmp
mov
stos
loop
gs
lcall
jb
mov
lods
loop
mov
and
sbb
shrl
test
add
cs
inc
adc
fidivs
cmp
daa
dec
cmp
ss
popa
mov
lods
mov
add
scas
cmp
icebp
pxor
push
pop
test
and
dec
jge
jg
or
adcb
jb
es
and
push
pop
mov
cld
dec
stos
enter
nop
pop
iret
adc
cmp
sbb
push
and
mov
std
add
xor
pop
mov
sahf
aas
iret
mov
add
jbe
std
xchg
sub
push
sarl
loope
mov
sbb
xchg
sub
sbb
push
pop
jl
mov
sbb
ja
dec
outsb
out
aaa
cmpsl
lea
xor
or
mov
sub
xor
aad
in
insb
add
lds
sbb
xchg
cmp
xchg
mov
lret
es
enter
outsl
sbb
pusha
addr16
dec
and
movl
insl
cld
into
sub
lcall
inc
or
in
push
mov
out
test
setg
xor
mov
cmp
push
jmp
movl
push
pop
and
cmp
sbb
ja
nop
mov
adc
cmp
lea
and
mov
mov
mov
js
cmp
ja
jg
outsl
test
lahf
aaa
dec
mov
xchg
mov
push
fld
push
mov
les
outsb
ljmp
pop
int3
dec
pop
add
pop
pushf
dec
stos
jp
or
dec
popf
push
lcall
dec
mov
add
xor
jge
out
pop
or
icebp
mov
nop
shlb
cwtl
add
add
mov
adc
cmc
add
pop
or
push
bound
pop
pop
add
and
enter
mov
leave
fimuls
inc
pop
and
dec
and
aaa
fisubs
ljmp
icebp
jecxz
stos
dec
cmp
cs
fcmovne
insl
out
xor
jge,pt
jbe
clc
fadd
adc
ds
jo
out
ss
lds
popa
cwtl
addr16
out
test
fnstenv
rorb
mov
sub
leave
push
lods
sbb
inc
jno
sbbl
rcrl
in
in
xchg
adc
fiadds
cmp
leave
push
mov
mov
jns
incb
adc
add
das
xchg
cmp
mov
mov
jnp
sub
xchg
cltd
in
popf
mov
iret
pop
jb
inc
add
xchg
and
lcall
out
ret
pop
xlat
mov
mov
lods
inc
fcmovnbe
xchg
bound
std
dec
jp
pop
sub
push
push
lock
fcoml
test
mov
notl
mov
sbb
xchg
movsl
cmp
pop
xchg
inc
mov
mov
sti
xchg
pusha
add
jmp
test
fcoms
push
popl
rcrb
lds
cmp
in
fwait
aaa
jl
mov
pusha
sub
add
sahf
sub
and
test
dec
out
leave
negl
mov
lahf
in
jno
stos
inc
int
pop
les
aaa
cmp
movlps
or
lea
or
sbb
push
add
adc
sub
mov
loopne
mov
out
add
jecxz
into
pusha
je
test
and
sarl
test
mov
loop
gs
popa
cwtl
stos
sbb
cmpsb
mov
push
adc
or
fcmove
xor
fnstcw
or
or
cs
or
js
lcall
out
xchg
shrb
stos
push
test
push
adc
icebp
inc
cld
stc
aam
dec
push
sbb
imul
xchg
mov
loop
cmp
fcmovnu
std
mul
pop
jle
jns
in
sbb
and
call
jl
loope
sub
jnp
xchg
cmp
in
and
jns
cmp
mov
push
xchg
or
and
mov
pop
xor
push
xchg
mov
pop
add
push
lods
mov
jne
movd
js
stos
xchg
dec
or
xchg
notb
out
cli
inc
scas
in
shrl
fucom
aam
outsl
adc
jae
aaa
sub
xchg
inc
jl
jns
adc
das
and
and
jg
add
xor
xchg
bound
arpl
pop
rcll
test
in
jg
pop
dec
xor
movsl
xor
pop
jno
arpl
cld
inc
loopne
inc
or
and
sbb
sub
addb
mov
mov
fiaddl
xchg
xabort
mov
mov
xlat
sub
dec
std
mov
shr
stc
and
cmp
mov
shlb
shl
enter
sbb
add
lret
jmp
push
dec
push
aad
aas
and
jmp
pop
mov
sbb
inc
xchg
pop
leave
jl
cltd
aad
aas
pop
mov
pop
cmc
inc
test
mov
jb
ss
push
pop
popf
xor
xchg
loope
lods
xchg
dec
pop
es
add
sbbl
mov
adc
cmp
jmp
dec
jno
jno
jae
out
arpl
in
push
push
lahf
jb
cmp
jmp
in
dec
in
adc
xor
xchg
or
in
ds
add
sub
mov
nop
dec
test
loop
gs
jecxz
imul
lea
in
sti
sub
pop
sub
jge
sbb
fwait
push
shrl
jmp
int3
rclb
test
addb
jmp
jecxz
lods
jmp
mov
lcall
mov
andl
fisttpl
jg
sub
ret
sub
fistps
inc
clc
dec
je
mov
and
push
and
lea
sub
cmp
sub
int3
sbb
inc
pop
gs
gs
xor
movsb
add
adc
jae
lret
mov
cmpb
aad
mov
inc
pop
notb
inc
sub
frstpm(287
mov
loope
sarl
inc
and
mov
pushf
enter
sahf
or
femms
iret
in
dec
in
notl
or
or
adc
mov
xor
aam
div
jb
push
sub
bound
jl
pop
jns
lea
iret
inc
fadds
mov
fcompl
dec
lock
ret
outsl
outsl
mov
leave
insb
inc
xchg
cld
lock
fwait
push
ss
daa
push
stc
pop
jne
jnp
inc
or
xor
in
jle
jae
xor
dec
or
movsb
and
fnstenv
lahf
call
sub
jmp
insb
sub
jnp
das
jle
or
push
subss
sub
sbb
stos
cmp
pop
jl
mov
ret
pop
pop
cmp
add
lea
ja
mov
popa
inc
mov
aaa
daa
outsl
sbb
jmp
pop
outsl
sbb
int
in
dec
addr16
std
add
inc
jb
fsubr
lods
sub
lret
push
and
rorl
push
pop
add
fdivs
pusha
inc
out
adc
adc
repz
mov
sahf
cld
pop
scas
sub
sub
aam
lods
stos
out
popf
rorl
insl
push
aas
icebp
mov
aad
add
es
mov
fstpl
pmulhuw
cltd
cmp
loope
lahf
lret
lahf
mov
ljmp
and
mov
xchg
sbb
or
aad
lcall
cmp
test
les
mov
aaa
adc
int
push
jns
pushf
push
movsl
pop
push
push
inc
xlat
fmul
or
sub
jmp
ja
and
lcall
ss
mov
loop
out
jbe
rolb
sbb
xlat
add
movsb
mov
lods
jl
adc
in
add
lds
mov
aas
push
xor
in
stos
sbb
push
mov
add
fbstp
and
test
jmp
mov
mov
lea
les
sahf
outsl
mov
insb
cmp
aaa
insb
daa
adc
pop
inc
sbb
sub
xor
push
push
add
adc
por
sub
mov
fildll
push
loope
dec
dec
sub
test
push
jle
mov
iret
data16
adc
fs
inc
call
pop
mov
lret
jmp
sti
xchg
clc
or
mov
dec
pop
jne
es
addr16
fwait
clc
cmpb
or
pop
pop
imul
push
in
jp
andb
xor
insl
sub
xor
repz
rorb
mov
mov
or
push
pop
jle
movsl
std
outsb
fmull
lods
in
mov
inc
lea
and
shlb
pop
fadd
jmp
adc
dec
adc
mov
adc
shlb
das
arpl
popl
mov
mov
xchg
mov
imul
dec
xchg
shrl
lcall
popl
or
lock
dec
fbld
cld
xchg
cmpsb
cmpl
add
xor
lock
jmp
scas
mov
cli
cmp
jp
mov
in
or
push
int3
mov
div
mov
and
dec
adc
repnz
cltd
xchg
sub
into
jns
add
jmp
cs
inc
pop
sahf
jno
mov
cmpsl
xchg
and
push
in
ficoml
ss
clc
outsl
adc
mov
fistpl
in
cs
mov
out
enter
lea
sar
mov
sbb
inc
in
repz
cld
xchg
xchg
add
stos
mov
ljmp
dec
cmp
jle
cmp
pop
ret
in
jecxz
mov
xor
test
sbbl
scas
popa
add
inc
mov
enter
aas
push
shlb
jl
mov
dec
sub
lret
jbe
cli
lea
push
insl
arpl
ss
in
shlb
mov
fimuls
jae
test
mov
mov
xor
and
pop
mov
inc
dec
imul
mov
sbb
test
faddl
repz
sbb
arpl
ret
add
jle
sub
stc
nop
repnz
arpl
or
aas
mov
mov
fisubl
fadds
xchg
jne
xchg
pop
in
cld
pushw
insl
fdivl
imul
ds
adc
inc
iret
sbb
push
nop
cltd
jmp
out
std
pop
cwtl
lods
add
les
in
hlt
adc
push
cpuid
inc
mov
or
mov
push
mov
pop
imul
push
dec
lods
jo
xchg
flds
xlat
push
xlat
jmp
mov
in
gs
mov
jae
je
test
sbb
mov
outsl
inc
sti
adc
xchg
sbb
pop
mov
loop
push
push
andl
pop
push
sbb
in
and
xchg
lods
and
sti
lret
cld
sbb
dec
sbb
jb
loope
divb
aad
nop
dec
push
jnp
or
pop
mov
test
pop
ficoms
lcall
out
xchg
or
repz
push
xlat
or
outsb
std
frstor
testl
inc
or
xor
mov
mov
cmp
and
pop
mov
and
jno
lods
insb
sti
add
or
push
inc
imul
jo
roll
sub
negb
mov
xorb
pshufw
pop
add
sbb
std
cmp
cmp
out
cld
in
prefetch
cmp
aas
adc
push
mov
je
xor
in
testl
mov
dec
push
or
rclb
mov
ss
mov
mov
sub
add
or
adc
sahf
xor
jne
jge
jno
push
test
fsubrl
or
pop
pop
cmp
call
or
adc
loop
mov
xchg
mov
aam
aaa
aad
scas
push
inc
out
fisubrs
hlt
mov
arpl
aaa
cs
aad
push
jae
mov
test
iret
mov
pop
loopne
pop
push
sti
das
add
mov
ret
ret
sbb
jl
jb
push
xor
add
lcall
inc
bound
mov
gs
jns
stc
or
sub
ljmp
mov
sbb
mov
mov
popa
sub
adc
push
xor
jbe
mov
jb
jno
mov
test
rclb
sub
lods
cmp
lds
sub
scas
repz
je
cmp
jge
sbb
pop
cli
mov
and
ds
cmp
mov
cmp
xchg
lret
fwait
ret
nop
push
or
adc
arpl
inc
push
je
jecxz
sbbl
jno
ror
xchg
sbb
imull
cmp
loop
cmp
loopne
push
sbb
mov
out
mov
sti
jbe
cmp
std
test
cmp
cmp
ficoml
pusha
incb
jns
shl
js
xlat
std
aad
mov
xchg
xor
cmp
scas
push
sub
outsl
iret
push
mov
pop
imul
cltd
sub
cmp
jmp
std
xchg
repz
mov
cmp
jmp
push
test
js
loop
fwait
movl
jae
adc
mul
pop
cmp
mov
mov
mov
scas
push
ds
dec
sub
imull
in
xor
pop
jb
mov
mov
and
lahf
lahf
pop
out
sbb
dec
sbb
inc
inc
cs
das
incb
and
leave
flds
mov
fnstsw
cmc
mov
fdivr
pop
push
lds
cmpsb
es
data16
fldt
out
cmp
pusha
cld
pop
mov
add
sub
pop
pop
xor
in
sbb
cltd
subb
test
mov
sub
jle
nop
and
cs
fnstcw
cmp
ret
xor
sti
inc
add
lahf
dec
aad
pushf
sbb
ss
lret
cli
jne
test
dec
aaa
sub
inc
lahf
nop
incl
jmp
dec
loope
icebp
mov
adc
cs
jl
aad
daa
loop
addr16
adc
addr16
mov
test
mov
movsb
out
adc
xor
jg
arpl
adc
les
std
mov
dec
mov
test
or
adc
dec
ljmp
or
iret
imul
and
data16
push
leave
ficomps
nop
dec
jbe
jecxz
in
pcmpgtb
dec
pusha
mov
shll
ljmp
push
inc
je
jb
hlt
pushf
leave
jecxz
sub
fists
xchg
add
scas
xlat
push
mov
pop
sbb
add
cwtl
xor
push
xchg
xchg
mov
les
lods
cli
test
mov
cmpsb
push
lea
mov
outsb
add
sbb
testb
fistl
std
aaa
jo
inc
xchg
mov
bound
mov
cmp
xor
pop
pop
pop
dec
pop
mov
add
and
stos
inc
cmc
sub
fxrstor
add
mov
rcrl
ljmp
movsl
loop
mov
inc
mov
testl
adc
clc
inc
sbbl
out
xor
shr
mov
dec
ds
in
xchg
ss
shll
shrb
jle
subl
sbb
icebp
jp
data16
adc
lock
and
pop
rolb
imul
in
jns
pop
sub
loope
das
lods
push
add
imul
cmp
pop
fidivs
xchg
in
dec
das
std
xchg
popa
jo
mov
mov
inc
push
push
js
stos
test
andl
faddl
lret
jno
sbb
xchg
xor
lret
mov
imul
das
mov
adc
dec
mov
mov
xchg
mov
icebp
push
fstl
xchg
xchg
xor
inc
insl
inc
hlt
decl
sbb
mov
clc
ss
inc
out
sbb
cld
cmp
fcomip
ret
xorb
push
inc
pop
jno
mov
pop
sub
push
fwait
mov
lds
ret
out
xchg
popa
fmul
mov
dec
out
fmuls
sbb
sbb
inc
and
add
push
mov
and
sub
and
adc
lock
lock
pusha
fwait
mov
adc
rcll
sbb
lcall
mov
stos
data16
xorb
push
sti
pop
in
add
ds
pop
stos
mov
fcoml
lret
and
repz
and
cmp
jo
in
aam
lret
loopne
pop
or
aad
cmpsb
ret
sbb
pop
push
jg
aaa
sbb
xchg
sub
mov
and
in
into
adc
push
push
inc
out
sbb
adc
push
pop
std
inc
adc
fnstcw
ss
loop
push
dec
fs
imul
push
and
push
push
cmp
add
stos
dec
mov
cwtl
add
imul
pop
out
out
fcomip
adc
sbb
xor
mov
sub
movsb
dec
mov
ror
gs
fucomp
orl
cli
subl
sub
sub
fisubs
mov
inc
or
leave
or
mov
inc
fbld
adc
sbb
add
jp
cli
les
and
add
iret
and
push
cli
pop
jae
cmp
jle
loope
mov
cli
je
ljmp
stos
mov
jge
mov
mov
gs
pop
jbe
dec
and
pcmpgtd
mov
ljmp
cld
mov
roll
lcall
pop
inc
fsubl
std
ljmp
push
inc
dec
in
push
call
push
cmp
clc
or
sub
mov
push
inc
test
call
or
cmpsl
test
xor
pop
in
into
jecxz
or
movsl
or
or
push
add
sbb
subb
inc
scas
sub
repz
lods
outsl
testb
or
push
call
in
and
js
lods
inc
push
or
fwait
xchg
jb
daa
jmp
jbe
jp
push
pushf
incl
dec
test
or
push
popf
mov
pushf
inc
fcmove
inc
inc
int
jmp
mov
xchg
adc
and
xor
jne
push
out
les
mov
fistpl
test
into
adc
jae
push
sub
dec
xchg
inc
add
es
cmp
xchg
xchg
xchg
flds
jmp
adc
push
rdmsr
icebp
mov
fidivl
shrb
adc
ss
pushf
lods
sub
lret
loop
cmp
insl
outsb
adcb
ret
pop
add
cmpsl
mov
inc
jge
adc
fs
xor
cmc
cbtw
mov
mov
dec
out
negl
sub
and
stc
xchg
insl
adc
mov
xchg
ljmp
jl
repz
daa
popf
int
std
xchg
scas
inc
xor
inc
into
pop
pop
or
lods
mov
leave
jecxz
pop
jle
mov
in
add
jl
sti
cmpsl
push
dec
jecxz
insl
adc
sar
repnz
mov
imul
inc
xlat
sub
shlb
movsl
and
repnz
fbstp
shlb
addb
mov
mov
and
in
andl
pop
insb
lock
incb
cmp
test
cmp
cmpsb
mov
pop
jnp
jbe
dec
cs
mov
popf
gs
popa
repnz
adc
mov
push
adc
dec
inc
adc
mov
or
daa
inc
mov
adc
and
fisttpll
cmp
std
fbld
aam
inc
fmuls
ja
push
mov
mov
inc
mov
xor
mov
xlat
mov
cmp
jns
sbb
push
js
jl
movsb
in
and
in
jecxz
jne
mov
mov
adc
mov
loopne
hlt
stos
gs
push
lcall
pusha
mov
cs
addr16
aad
mov
pop
mov
cmp
mov
cmp
cmp
outsb
adc
dec
test
sub
sbb
int3
pop
aad
xchg
mov
mov
leave
jo
les
add
test
cmpsl
loopne
fisubrl
mov
lock
inc
orb
push
lahf
insl
cmp
sahf
rorb
or
push
icebp
popf
push
pop
adc
sbb
out
ss
xchg
nop
addr16
or
sub
xchg
sub
xor
fidivs
push
notb
adc
jno
in
xor
dec
and
cli
outsb
dec
xchg
mov
inc
sbb
mov
dec
fisttps
inc
xor
cli
mov
add
add
xor
jo
pop
loope
xchg
or
mov
push
pushf
mov
sub
and
cmp
sbb
mov
psrad
jne
sub
cld
cmp
adc
xchg
rcrb
mov
lret
jno
lcall
or
stos
push
cmp
cmp
push
mov
fidivrl
les
mov
ds
subl
jg
icebp
mov
test
scas
mov
dec
jbe
shlb
mov
fucomi
add
mov
andl
sbb
cmp
std
cmp
dec
bound
out
xchg
sbb
and
in
xchg
dec
pop
clc
stos
cmc
mov
test
sub
das
mov
std
gs
out
stos
leave
cmpsb
sbb
leave
push
jae
or
xchg
xchg
jmp
loop
pop
popf
pop
int3
sbb
jl
stc
xor
mov
jecxz
push
ficomps
loope
negb
mov
jmp
or
iret
cmc
aaa
cmp
adc
push
jo
add
pop
arpl
outsb
not
int
sub
out
xor
xchg
sub
data16
xor
aas
xchg
add
daa
mov
iret
mov
int
in
test
inc
mov
pop
cmpsb
add
lds
cld
dec
repz
mov
repnz
jmp
sbb
pop
adcb
mov
push
lds
pushl
inc
pop
cmpsb
ret
sahf
xor
inc
icebp
mov
push
xchg
sub
add
lods
pop
cltd
in
mov
fcoml
dec
mov
ffree
jp
and
ret
pop
ret
hlt
mov
sbb
push
push
xchg
mov
push
push
or
or
push
dec
xchg
mov
loopne
aaa
xchg
scas
aaa
nop
push
stos
lret
push
pushl
imul
sbb
iret
out
rcrl
cmpsl
add
or
std
daa
es
dec
les
insl
mov
mov
jmp
mov
es
xchg
sub
mov
loope
pop
push
push
insb
or
shrb
mov
insl
in
in
dec
mov
mov
fwait
cmc
inc
fsubrl
push
arpl
xlat
or
push
mov
pop
xor
or
ljmp
cs
dec
adcb
ljmp
jne
addr16
sub
sbbl
loop
mov
out
push
sti
bound
ljmp
sbb
sbb
fcoms
clc
orl
cmp
das
cmc
aad
insb
mov
mov
movsb
xor
inc
popa
js
jnp
jno
lods
andl
or
jge
adc
int
das
sbb
jb
mov
dec
push
ja
addr16
cmpb
push
out
stos
pop
into
sub
out
ret
out
mov
fidivrl
in
popa
jl
push
sub
leave
xor
adc
cmp
push
sub
lods
xchg
jge
rcrl
mov
test
mov
push
xchg
and
popf
xor
xor
bound
sti
sbbl
subb
push
xlat
mov
scas
orb
sub
lcall
inc
push
out
pop
rclb
mov
cmp
test
sti
xchg
adc
dec
adc
lahf
inc
fdivl
mov
rclb
cs
daa
or
ss
dec
jg
shlb
ss
mov
js
fsubrs
dec
cmp
sahf
adc
ljmp
sbb
add
dec
loop
and
mov
sub
int
adc
fimull
repnz
or
jecxz
push
jmp
inc
mov
lahf
pushf
adc
lea
mov
icebp
outsb
push
push
scas
push
jnp
sub
ja
out
xchg
pop
mov
movsl
orb
daa
cmp
subl
imul
xor
orb
sub
jecxz
pop
adc
repz
add
fwait
xchg
xor
add
fldenv
push
leave
add
outsl
test
mov
rol
repnz
leave
adc
jl
addb
in
add
pop
pop
sub
inc
cmp
leave
jbe
fldl
test
inc
fcmove
sub
mov
rorl
jp
shrb
mov
aas
push
pop
insb
add
daa
hlt
mov
dec
aad
dec
or
popf
sahf
stos
int
adc
inc
or
lods
cmp
pop
fcmovb
stc
nop
mov
inc
sub
outsl
or
sbb
adc
pop
inc
mov
rol
and
shll
xor
cmc
je
scas
pop
popf
xor
rorb
sti
call
sbbb
pop
cmc
rcll
and
insl
lds
or
pop
adc
je
int3
mov
inc
inc
sbb
test
cwtl
jae
sbb
rcll
lock
cld
adc
jecxz
stc
push
jmp
test
inc
inc
mov
jmp
xchg
cwtl
jbe
adc
ss
gs
mov
xchg
fsts
in
and
outsl
jo
push
sub
mov
push
outsl
jb
ja
cli
pop
ds
cs
fbstp
mov
sbb
mov
dec
mov
push
shrb
pop
hlt
clc
or
cld
xor
or
push
lahf
es
gs
fmul
dec
add
xorl
in
pop
scas
out
xchg
dec
adc
cs
stos
inc
pusha
xlat
movsb
popl
cmpsl
adc
jmp
leave
outsb
xor
lahf
cmpsl
lret
push
mov
lea
mov
sbb
mov
faddp
pop
fdivl
dec
lods
lods
in
sti
popf
jae
cli
cwtl
fidivrl
jae
mov
and
add
popf
rclb
movsb
pop
lret
popf
xor
jp
or
popf
in
ret
dec
add
ja
out
push
outsb
dec
outsb
xchg
mov
lret
and
and
mov
cmp
ljmp
push
rcl
push
cltd
push
add
pop
out
lods
and
inc
sbb
nop
cmp
xchg
loopne
pop
or
jae
int3
sbb
into
es
cwtl
roll
sub
repnz
xor
pop
sbb
loopne
cmp
pop
push
xchg
xchg
jp
lock
fidivs
xchg
cld
sub
idiv
xchg
sub
inc
gs
movsl
mov
pop
call
jae
mov
cwtl
adc
mov
arpl
xchg
fwait
xor
add
int
subl
aad
lret
shrl
sbb
cmpsb
mov
subb
mov
push
push
iret
xchg
push
in
pop
mov
xchg
inc
sbb
cmc
cwtl
fcompl
outsb
aaa
ret
andl
test
sub
and
dec
in
and
pushf
push
push
nop
add
jbe
and
lahf
rcll
or
lds
js
pop
jg
popl
js
fnstenv
fwait
or
aas
adc
aam
cmp
pop
jb
mov
gs
shlb
xor
lock
dec
cmp
fstpl
cmc
add
enter
jl
adc
loope
icebp
push
jmp
sti
nop
dec
test
lret
jns
push
push
inc
cmp
xchg
fnsave
repz
insl
add
push
cmp
incl
pop
fsubr
add
jle
push
or
pop
cmc
or
sbbb
ret
sbb
aaa
cpuid
js
add
xchg
dec
pop
dec
mov
mov
fcmovu
aad
fcmovnu
and
clc
inc
adc
push
fnstcw
add
push
push
or
pusha
sub
notl
jae
jne
cld
stos
aaa
jge
imul
leave
fists
aas
add
mov
scas
or
mov
rcl
adc
pop
rcrb
shll
jp
lods
pop
out
cmpsb
test
mov
xchg
sub
mov
xor
mov
movsb
lock
add
xor
xorb
or
jae
loop
out
mov
inc
test
inc
lcall
lods
in
ret
andb
outsb
call
jno
adc
ds
nop
cmp
pop
lahf
pop
xor
mov
sti
adc
cmpsb
cmp
jmp
andps
push
sub
sub
test
lahf
adc
inc
in
xchg
mov
xor
es
add
jne
movsl
cmp
xchg
call
into
jae
inc
lcall
inc
clc
shl
test
aas
add
call
dec
xor
das
inc
cs
xor
hlt
mov
hlt
adc
std
addr16
add
xchg
mov
cmc
mov
int3
jns
decb
bound
rclb
jl
dec
adc
jo
mov
fs
xchg
adc
push
mov
and
cmp
loop
dec
mov
fcom
dec
mov
out
popl
mov
out
hlt
repz
mov
repz
sahf
xchg
gs
fwait
add
lock
xchg
jns
les
aas
repz
hlt
lret
adc
in
in
jnp
loop
sub
add
push
pop
into
stos
pop
adc
rorb
aam
sbb
pop
ret
movsb
arpl
sbb
outsl
pusha
adc
inc
test
aaa
movsb
inc
inc
pop
lods
and
sahf
imul
add
pop
popa
scas
addr16
inc
cwtl
adc
sbb
lods
in
sbb
sbb
cltd
pop
pop
imul
mov
push
rorb
in
add
loope
daa
cmp
les
pop
loope
mov
sub
add
and
xchg
imul
jmp
fsubl
je
push
shll
inc
mov
int3
fs
push
test
pop
jecxz
scas
loopne
inc
faddl
out
inc
lahf
and
add
movsl
das
adc
aad
js
xchg
lret
leave
fsts
lds
push
or
inc
or
mov
pop
test
insl
aam
daa
push
mov
or
lret
jmp
add
sub
int
ret
fs
pop
jb
out
xor
add
in
aaa
leave
arpl
out
jmp
test
frstor
jge
fcmovu
das
das
push
in
and
sub
push
das
xchg
scas
push
dec
push
call
push
ficomps
lahf
sbbb
nop
cmp
adcl
xchg
mov
add
inc
shld
push
sub
push
movsl
xor
jmp
in
movsb
push
mov
push
test
pop
sarl
sahf
data16
cmp
xor
fcoms
push
dec
mov
xor
sbbl
dec
mov
loop
leave
or
dec
lcall
clc
in
ret
cmp
adc
stos
sbbb
mov
and
jge
cld
out
xchg
jl
adc
push
in
lock
fidivrl
pop
cwtl
cs
mov
jno
inc
xor
stos
clc
cmp
push
or
mov
jp
dec
je
cmp
mov
fwait
mov
mov
call
or
outsb
jno
jmp
mov
pop
lcall
add
cs
aaa
into
jmp
fmulp
adc
mov
test
dec
adc
add
add
sarb
js
push
js
pop
pop
outsb
cmp
cmp
cmc
add
lret
mov
fs
out
repz
and
lcall
jne
lahf
xchg
jp
jle
scas
pop
ret
mov
outsl
xchg
adc
lahf
clc
in
push
cmc
mov
mov
or
lret
fcmovbe
fmuls
adc
add
xlat
pop
leave
loopne
movsb
inc
arpl
imul
push
inc
pop
mov
mov
mov
mov
or
sbbl
outsl
fdivrl
xchg
cmc
inc
jge
stc
inc
movsl
cmp
sahf
shrb
adc
jae
jmp
loope
test
rcr
out
push
lods
testb
in
inc
sub
int3
fsts
xor
in
mov
mov
add
nop
test
push
jp
xchg
stc
scas
shrl
lods
xchg
cmp
mov
add
insb
or
cwtl
xchg
mov
ss
hlt
and
and
stc
or
mov
mov
sub
mov
xchg
push
popa
and
inc
adc
fwait
ss
fnstsw
jle
pop
mov
stos
and
rcl
mov
pop
lods
or
xchg
hlt
arpl
testl
icebp
js
pop
mov
mov
xchg
cs
xchg
inc
push
xchg
and
xchg
sahf
ret
insl
xchg
pop
js
mov
push
dec
icebp
or
push
test
xchg
mov
repz
sbb
mov
and
jnp
pop
leave
into
dec
push
movsb
mov
pop
mov
shlb
cmc
imul
out
lods
pop
fmul
fmull
addl
push
push
ret
xchg
mov
mov
iret
fistpll
imul
out
hlt
pop
dec
sbb
inc
jp
mov
fcoml
fdivrl
lcall
sbb
rclb
fsubl
add
push
push
sbb
sub
jb
mov
gs
divl
jne
fwait
out
jle
scas
fmull
shl
pop
ficoms
lock
add
fistl
mov
movb
imul
inc
pop
scas
arpl
and
cld
and
sub
stos
xchg
pusha
das
mov
test
lds
mov
mov
push
mov
xchg
jnp
pop
mov
mul
mov
bswap
imul
xor
in
lret
cld
or
dec
jne
rclb
test
adc
sbb
push
lret
sbb
movsb
dec
or
daa
mov
jne
xchg
adc
stc
aad
cmp
leave
jo
pop
xchg
daa
xor
pop
add
and
cmp
xchg
scas
xchg
and
fnstcw
sbb
sub
pop
pushf
das
pusha
js
add
movsb
inc
out
push
loope
mov
imul
mov
add
push
jne
lock
inc
int3
push
mov
ja
jno
dec
fbstp
out
or
adc
pop
lahf
xchg
rorb
rcl
mov
cs
fistpll
scas
mov
jmp
gs
push
and
push
or
rcrb
lea
sbb
shrl
mov
fld1
scas
push
cltd
sbbl
sbb
push
or
test
hlt
cmpsl
pop
xlat
subb
pop
mov
incb
inc
adc
orb
dec
cmp
push
xchg
sub
jge
inc
mov
rol
fiadds
cmpsb
jns
xchg
push
rol
add
repz
and
and
rcll
sbb
ret
fdivrs
dec
dec
cmp
add
xor
xor
mov
cmpsl
shrl
pop
cmp
cmp
jp
sbb
push
inc
push
sub
std
rcr
add
rolb
sahf
inc
jl
icebp
xor
in
cld
das
popf
lds
fwait
repnz
rcll
push
push
lcall
dec
or
sti
xchg
adc
xchg
sub
sub
mov
and
pop
xchg
add
xchg
add
mov
adc
scas
es
aam
mov
sti
push
icebp
mov
rolb
xor
mov
fbstp
shrl
jno
aas
mov
add
sub
fsubr
add
sub
mov
sub
pusha
rcrl
insb
fldt
in
sbb
test
mov
cmpsl
mov
pop
xor
inc
mov
out
xchg
adc
jg
xor
test
sbb
adc
add
xor
mov
loopne
lods
test
add
jb
xchg
add
jns
sbbl
add
dec
xor
pop
push
stos
mov
scas
in
mov
aad
ret
hlt
mov
xchg
dec
in
divl
sbb
stos
add
popa
mov
sub
jns
sbb
sub
or
repz
fwait
outsl
mov
adc
js,pt
sub
stos
dec
int3
xor
loope
inc
push
mov
jmp
xchg
stc
inc
adc
movsb
mov
idivl
scas
inc
ficomps
and
jb
push
test
xchg
pop
repnz
dec
push
and
sub
loope
sbb
jp
bound
sbb
push
jae
dec
icebp
ret
sahf
push
jecxz
push
adc
pop
sbb
nop
pop
fdivrl
mov
js
aas
outsb
pop
adc
movsl
inc
mov
jne
imul
sub
out
insl
and
jne
int3
hlt
mov
adc
sub
xchg
daa
mov
and
fidivrl
push
mov
out
adc
hlt
sbb
xor
lcall
stos
pop
gs
xor
inc
xchg
in
xchg
lods
jae
dec
and
pop
repz
inc
xchg
ljmp
insb
repz
and
adc
imul
pusha
pop
add
sub
jnp
mov
pop
mov
lods
fs
aaa
cmpsb
inc
inc
fnstenv
shlb
mov
and
aad
or
pop
daa
xor
inc
and
cld
xchg
sub
push
inc
hlt
push
lds
cltd
stc
stc
sub
sub
adc
mov
test
add
dec
repz
dec
jns
test
push
nop
xchg
jmp
jecxz
xchg
or
xor
aas
xor
fucomip
cs
xor
sbb
adc
aam
push
mov
jbe
jno
ret
sub
push
outsb
sub
adc
xor
push
outsl
xchg
cmp
in
aad
out
push
imulb
cmp
fwait
sub
lock
aam
xchg
mov
lods
pop
lret
adc
imul
or
xchg
jp
idivb
js
add
ret
sbb
pop
fsubs
xor
push
leave
test
leave
or
and
sub
cs
outsl
cmp
pop
xchg
xor
nop
imul
paddb
push
jg
pcmpgtd
in
jp
in
xchg
outsl
addr16
fbstp
pop
js
add
pusha
fldl
ret
mov
icebp
js
pop
jb
test
add
call
inc
arpl
loopne
jle
mov
or
int
js
cmpb
xor
sti
sbb
mull
push
fcomps
jne
dec
scas
add
icebp
lcall
pushf
repz
icebp
cmp
test
push
inc
cmp
pop
or
sbb
dec
inc
scas
jnp
scas
or
fnsave
cmc
xchg
std
pop
out
ljmp
inc
mov
mov
imul
mov
push
cmp
test
cmp
ficompl
shll
cmp
addr16
adc
dec
arpl
and
push
push
arpl
push
lea
sbb
or
mov
lea
enter
adc
fistpll
test
push
sub
mov
cmc
push
ret
mov
daa
out
xor
cs
push
pop
jb
xchg
add
mov
and
lret
popa
loope
or
push
sub
sub
adc
mov
jno
lret
fwait
ret
enter
imul
adc
jno
fdivrs
data16
std
push
mov
fs
pushf
jg
add
pop
jns
repz
stc
stc
sub
pop
mov
pop
mov
jle
sub
shll
dec
cltd
push
push
jne
shrl
xchg
setp
dec
mov
in
jne
and
clc
addl
or
dec
adc
nop
mov
and
ds
orb
sbb
xor
inc
xorb
sub
out
pop
fucom
add
jb
sub
pop
jno
mov
push
mov
in
cli
or
push
cmp
sub
jg
pop
xor
xchg
push
leave
setne
sub
pop
xor
ret
pshufw
inc
ficoms
xchg
jns
mulb
jmp
stc
push
test
dec
fildl
lret
and
jae
cmpb
fildl
cli
pushf
cmp
gs
adc
sbb
rcrb
ljmp
imul
push
xchg
or
xchg
repnz
mov
jecxz
mov
inc
mov
mov
cmpsb
jns
and
add
popf
mov
dec
test
bound
call
cmp
push
popf
sbb
pop
jge
cld
pop
sub
loopne
popa
notb
fidivs
add
pop
lods
sub
sbb
rorb
and
push
scas
cmp
fsubrl
ss
std
jne
mov
jge
ret
add
es
mov
or
inc
xor
jmp
jl
mov
leave
jle
outsl
push
repnz
sti
jnp
and
pop
dec
push
mov
cwtl
out
sub
add
lods
and
in
ss
cmovns
sbb
pushf
cmp
popa
mov
hlt
call
ret
mov
xchg
inc
cs
daa
push
in
push
mov
jbe
cld
out
adc
das
sub
outsl
push
push
imul
aas
fwait
push
jb
or
mov
lods
xor
push
xor
inc
mov
pop
xor
adc
pop
outsb
push
xchg
testl
and
inc
mov
inc
and
mov
inc
aas
lods
mov
jl
and
cmp
mov
test
aas
jb
fdivrl
and
popf
adc
pop
aad
mov
push
aad
jbe
push
xor
xchg
dec
shrl
mov
pop
jge
insb
sub
sbb
aas
pop
cmc
mov
cli
pop
addl
negl
mov
repz
sub
fwait
xchg
push
jmp
fldcw
repnz
jns
cs
sub
pop
scas
jb
cmp
popa
notb
xchg
cltd
testl
fstpl
and
mov
and
imull
cmp
mov
pop
cmp
xor
push
sti
mov
fs
and
repnz
and
xchg
jge
andb
cmc
enter
pop
pop
jae
sub
xchg
push
ret
xor
icebp
adc
xlat
test
push
filds
fildl
hlt
lret
or
cmc
sbb
cmpsb
inc
ja
std
loope
das
mov
aad
or
into
or
es
mov
sbb
mov
mov
rcll
xchg
add
fbstp
loop
sbb
ss
fldl2t
push
fildl
and
fwait
xor
rclb
stos
jle
repz
jmp
fistl
mov
int3
fcmovne
sbb
inc
mov
jmp
into
call
push
imul
jg
push
sbb
pop
adc
int3
rclb
lcall
pop
add
jle
lods
scas
and
test
cmpsb
push
xchg
add
test
and
movsb
cmp
pop
adc
fiadds
push
in
adc
je
adc
or
cmp
roll
pop
pop
icebp
insb
dec
clc
sub
fdivrl
mov
adc
xor
adcb
cld
enter
jge
mov
hlt
sahf
jge
iret
adc
sbb
rcrb
or
inc
adc
loope
cmp
push
rcrl
decb
or
push
inc
pop
cmp
add
inc
push
push
sbb
mov
lahf
fwait
fs
int3
mov
sbbb
or
mov
lahf
push
repnz
dec
clc
aad
sub
mov
filds
jg
push
add
jns
rol
out
imul
andl
dec
out
fdivrl
out
call
jb
push
mov
mov
jg
data16
shlb
cltd
adc
js
mov
mov
les
fldt
shll
add
jno
sub
sbb
sub
push
insl
bnd
mov
mov
ss
ds
jo
int3
dec
mov
push
add
or
xor
ret
stos
pop
neg
stos
xlat
mov
jge
movsb
jb
addb
sbbl
sub
ljmp
cmpsl
add
mov
cwtl
rcll
mov
mov
movsl
in
pop
dec
mov
push
pop
sub
sarb
push
pop
aaa
xchg
mov
pop
xchg
sub
jo
or
int
pushf
imul
push
jmp
int3
loope
clc
mov
xor
std
mov
in
in
dec
fsub
cmp
sti
cmp
fistpll
and
cmp
ret
ja
es
scas
xor
fistpl
cltd
pushf
aam
add
push
inc
enter
rclb
xor
orb
or
lahf
cmp
testb
xlat
xchg
pop
aad
push
mov
mov
push
lea
popl
push
inc
pop
adc
add
gs
mov
pop
dec
dec
mov
sti
fwait
and
add
cmpb
inc
mov
in
sahf
and
leave
mov
jle
dec
mov
mov
mov
jle
jecxz
dec
and
clc
push
sub
adc
xchg
adc
jno
fsubr
sbb
stos
mov
mov
mov
je
andb
cltd
hlt
inc
inc
or
addb
test
div
shl
pushf
out
dec
ds
jb
stos
xchg
fmull
rorl
mov
ds
sub
xlat
and
addr16
adc
xor
jmp
xor
cmpl
out
es
adc
lods
ret
or
dec
push
jns
xchg
cmp
jl
xor
in
inc
rolb
pop
idivb
insl
jge
add
xor
pop
and
mov
fiadds
push
ret
dec
cmc
in
pop
dec
loope
cmc
push
out
daa
push
mov
sub
cld
orb
lret
repz
sarl
aas
lods
push
popf
bound
lds
add
arpl
mov
push
xchg
out
or
and
inc
mov
shrl
push
clc
test
pop
adc
je
jle
in
mov
sub
mov
sbbb
xor
sahf
sub
cmp
xlat
xchg
movsb
dec
add
cmp
inc
xchg
pop
repnz
mov
stos
inc
jns
dec
push
jmp
xchg
xor
mov
lods
sub
jl
dec
out
test
add
or
sbb
cmp
push
out
loopne
jge
es
cmp
ret
xor
mov
jg
mov
mov
xacquire
inc
dec
sub
in
and
xlat
jp
dec
mov
mov
mov
ds
test
mov
jmp
pop
push
and
sahf
gs
int
jge
scas
cld
adc
testb
xchg
mov
or
sbb
mov
data16
out
adc
jno
jnp
pop
mov
jns
imul
pushf
jg
data16
out
add
dec
cmp
cld
loopne
sub
ljmp
pop
sub
aam
cmp
mov
cmc
pop
flds
shl
mov
push
movsl
cmp
dec
pop
mov
insb
out
sbb
jecxz
mov
loopne
lahf
stc
andl
in
popa
adc
mov
adc
xor
pop
push
mov
mov
xor
pop
movsl
xchg
leave
lret
fwait
adc
or
pop
ror
xor
pop
in
add
addr16
jne
jae
movsb
stos
xor
test
mov
bound
aad
push
shll
out
mov
sar
int
mov
lods
fdiv
insb
add
les
stc
pop
pop
psrlq
negl
movsb
fisttpll
fcomps
cmp
test
push
or
pusha
add
loope
mov
pusha
aaa
jg
ficoml
rolb
nop
and
adc
mov
jp
movsl
pushf
or
nop
stc
nop
les
mov
add
mov
and
sub
mov
lea
or
mov
xor
gs
cmp
fnclex
mov
mov
pop
loop
inc
js
data16
dec
in
mov
inc
push
pop
xor
std
std
outsl
stos
cmp
or
and
xchg
mov
and
pop
fisttpl
pushf
addr16
and
loopne
mov
cmp
lods
xchg
pop
xchg
jp
xor
or
or
lret
mov
dec
mov
adc
sbbl
sub
out
jge
cld
dec
pop
cmp
js
test
cmp
adc
test
push
dec
sbbl
cltd
mov
mov
test
push
sarb
jmp
or
test
cmc
icebp
xor
inc
add
scas
mulb
xor
testb
lret
sbb
adc
aad
jmp
std
xchg
cs
xchg
andl
inc
mov
repz
sub
mov
or
lods
mov
mull
outsl
rolb
mov
push
gs
std
bound
test
in
add
xor
adc
pop
xchg
ja
pop
mov
cmp
fadd
dec
scas
add
sub
push
jae
adc
pop
xor
shrb
js
sub
push
xchg
xor
dec
push
lret
call
or
notl
mov
sub
int
adc
mov
pop
push
inc
inc
jg
sbb
test
xorb
mov
imul
mov
les
cmc
adcb
and
xlat
aam
mov
cmc
dec
in
nop
mov
ret
sbb
hlt
lahf
and
dec
es
jmp
xor
ret
orb
jbe
test
andl
or
in
dec
mov
je
mov
or
sbb
push
in
jbe
jmp
cli
inc
lods
pop
mov
test
jae
cmp
pop
lds
mov
and
inc
call
ljmp
call
aam
and
in
scas
daa
lcall
push
jge
mov
pusha
jle
repz
adc
add
xchg
mov
xor
decl
mov
test
mov
flds
push
aam
jmp
sbb
je
adc
cwtl
je
adc
push
xchg
adc
add
in
cmpsb
sbb
or
lock
xchg
sub
add
adc
add
xlat
sub
aam
mov
pop
dec
in
jg
mov
cli
out
fidivl
push
ficompl
shr
inc
loop
jnp
push
jb
imul
mov
push
cmc
repz
cmp
xchg
adc
iret
add
dec
dec
inc
cmp
dec
mov
iret
xlat
imul
adc
xchg
insb
pushf
pusha
sahf
jmp
jb
xchg
jb
lods
in
cmc
ss
je
icebp
int
movsl
lds
inc
int3
aaa
or
push
in
mov
push
cld
push
stos
mov
xor
mov
inc
js
cli
push
or
stos
fmull
pushf
stos
setge
rorl
in
and
add
push
push
cmp
ljmp
pop
push
and
je
sub
or
cld
sub
lahf
es
lock
cmp
jno
add
clc
fdivs
ret
xor
leave
stc
shlb
out
push
pop
aam
xchg
je
push
shll
mov
sbb
into
xchg
imul
xchg
call
aas
xor
popa
pop
mov
call
rorb
popf
testl
jae,pt
xor
mov
cmp
xchg
fildl
imul
dec
popf
mov
cmp
mov
rorb
push
pop
jg
or
fidivs
sbb
negb
ja
or
xor
ret
lods
mov
aam
inc
xchg
cs
dec
cld
sbb
add
cmp
push
das
arpl
lahf
fldt
adc
push
ret
xor
or
adc
inc
inc
sbb
lock
enter
push
in
sbb
mov
sbb
imul
clc
aas
vmovntps
xor
popa
stc
cmp
inc
fldenv
jb
es
je
sub
push
imul
ds
ja
ret
xchg
test
xorl
push
and
popf
in
into
xor
cmp
sub
mov
dec
mov
outsb
loopne
pop
jae
mov
or
loop
dec
and
push
out
pop
scas
push
mov
popa
cli
jo
lds
pop
sbb
push
jg
lret
push
in
push
fimull
mov
lds
fdivr
aaa
or
cmp
and
xchg
xor
jae
enter
rolb
repz
push
sub
lret
and
call
jge
adcb
xchg
pushf
xor
mov
xchg
iret
fistpll
enter
and
sbb
fdiv
sbb
jge
ja
movsl
scas
inc
fmuls
int
daa
stc
jl
out
jecxz
xor
aaa
push
orl
xchg
hlt
idiv
mov
cmp
mov
cmp
cmc
pop
and
lcall
and
clc
insl
pushf
jecxz
sub
cmp
ja
fstpt
scas
daa
aaa
rcll
dec
inc
pop
movsb
pop
lods
push
inc
popa
shlb
popa
and
test
inc
jmp
mov
ljmp
idivb
jle
or
test
pop
inc
shl
mov
aad
xchg
cmp
jae
sub
pop
push
add
scas
ret
rorb
cmp
inc
or
out
inc
cmp
mov
add
dec
jle
sbb
xchg
mov
adc
mov
add
push
adc
aaa
or
pop
push
call
xor
outsl
add
cs
push
push
mov
fcoml
lret
pop
out
repz
dec
cmc
jno
jbe
xchg
xor
std
xchg
outsl
push
arpl
add
mov
cs
ja
pusha
sub
xchg
xor
push
lods
add
push
xchg
cli
jae
and
push
push
outsl
sarb
mov
movsl
mov
loop
and
add
addr16
dec
hlt
orb
mov
sub
test
cli
lds
ss
push
and
push
aam
inc
push
rolb
xorb
xchg
aad
movsl
mov
adc
data16
jbe
xchg
cmpsl
out
ret
dec
sbb
or
or
mov
call
lret
jb
stos
and
dec
add
cld
xchg
cwtl
pop
add
mov
pop
sub
mov
xchg
ja
cmc
inc
dec
dec
sti
mov
addr16
cs
imul
pop
jge
dec
scas
cmp
hlt
push
cmp
repz
movsb
inc
sbbb
test
je
sub
lret
fs
out
loope
sub
imull
sub
adc
xchg
out
lock
enter
xchg
cmp
icebp
movsb
addr16
insb
push
ljmp
in
cli
or
push
test
testl
mov
insl
aam
sbb
dec
jne
sbb
dec
ja
cmp
or
popf
ljmp
push
cltd
cmp
add
les
jo
data16
pop
stc
popa
mov
adc
fisttpll
lods
lods
push
mov
sub
jno
adc
andl
sti
adcl
xor
dec
mov
mov
jno
mov
aam
mov
not
push
mov
inc
es
inc
xchg
jns,pn
mov
mov
mov
pop
daa
inc
xchg
nop
je
bound
mov
adc
jne
xlat
test
xchg
push
cmpsb
pop
mov
cwtl
jge
mov
fcoml
mov
imul
mov
pop
inc
push
ret
shr
jnp
sub
or
mov
imul
idivl
sub
sub
repnz
cwtl
dec
dec
insb
cmpb
setge
pop
pop
xorl
mov
sahf
xor
fwait
cli
pop
push
mov
scas
fsts
mov
jge
pusha
mov
cmp
movsl
out
mov
or
xor
in
es
mov
jg
jp
outsb
and
fs
mov
mov
cltd
repnz
xor
stc
daa
mov
add
lods
jge
push
and
jp
imulb
sbb
fisubl
push
pushf
mov
popf
jo
sbb
cmp
add
add
mov
mov
pop
scas
fiadds
jb
jne
sbb
add
stos
xor
test
mov
addr16
cmp
aaa
into
xlat
leave
jmp
mov
cmp
xor
fwait
push
sahf
jmp
dec
sar
xchg
leave
nop
adc
fisubl
shrl
gs
fdivl
dec
mov
test
xchg
jg
push
test
stos
inc
fcoms
lcall
and
dec
lret
inc
dec
std
outsl
pop
mov
data16
jae
call
addb
push
inc
mov
lret
push
mov
clc
insl
stos
inc
icebp
dec
gs
bnd
ljmp
int3
xchg
fists
sbb
jae
imul
jae
xchg
and
sbb
std
jbe
mov
aam
or
mov
jb
jle
arpl
ja
enter
sub
sarl
lcall
les
mov
mov
sub
jne
nop
sub
sbb
fldenv
icebp
push
cmpsl
add
jl
cmc
lods
and
dec
bound
cmpsb
xchg
repnz
call
pop
sbb
and
cmp
mov
xchg
sub
out
inc
lahf
popa
negl
push
rolb
mov
pop
adc
push
add
cmpsb
add
test
cmpsb
std
mov
cmc
mov
rcll
out
mov
pusha
mov
fistps
test
test
rolb
cmpsl
inc
sbb
aam
sbb
js
push
lret
jmp
mov
lret
lock
push
xchg
sub
es
or
loope
push
repnz
lock
adc
sahf
gs
push
lcall
fidivrl
pop
out
imull
out
loopne
pop
mov
adc
rcll
test
pop
jmp
mov
mov
inc
fsub
movsb
aaa
out
push
jb
or
pop
icebp
scas
dec
push
mov
adcl
stc
or
cli
mov
out
jmp
popa
popa
adc
pop
stos
aas
sahf
xchg
iret
arpl
hlt
lods
and
push
xor
mov
cli
ljmp
and
mov
popf
imul
inc
les
lret
lea
addr16
mov
sti
mov
jge
jg
int3
arpl
fdivrp
adc
call
lock
and
fistpll
icebp
lret
fidivl
js
sbb
jo
ret
nop
sub
mov
clc
sub
pushf
sahf
xchg
lahf
negl
mov
push
xor
subl
les
mov
rcll
pop
sub
mov
add
cmp
mov
out
mov
dec
xchg
inc
jg
daa
mov
repnz
add
es
xlat
iret
push
lcall
cwtl
xor
inc
mov
loope
mov
add
jmp
rolb
in
popf
test
cmpsl
testl
inc
into
or
jmp
loopne
or
jb
dec
cltd
push
mov
and
test
arpl
inc
pop
nop
movsbl
data16
push
andl
or
sbb
xor
jne
mov
push
in
decl
movsl
stos
pop
xlat
pop
int
dec
pop
sub
inc
fdivl
cmp
add
addl
push
cld
popa
sti
aas
cltd
fs
sub
enter
sbb
fstl
push
xchg
stos
and
neg
mov
cmp
cmp
cmp
aaa
divb
pop
outsb
ss
jb
test
pop
inc
in
orb
arpl
mov
aam
daa
mov
clc
jg
les
cmp
fidivrs
das
sub
dec
aas
popa
bound
mov
int
sub
xchg
out
mov
aam
dec
sahf
jnp
push
pop
or
scas
inc
sahf
enter
ss
and
cmp
xor
rcrb
std
mov
lcall
mov
jle
sbb
xchg
add
cs
ret
pop
push
shl
jl
mov
mov
push
mov
jae
add
xchg
cld
and
outsl
shr
dec
inc
jge
xor
inc
inc
jbe
mov
in
push
pop
adc
or
mov
add
xchg
ljmp
in
ss
mov
xor
push
divl
dec
repnz
imul
outsl
pop
push
in
aam
je
pop
insl
jge
add
add
stos
mov
mov
insb
pushf
outsl
adc
out
imul
lahf
push
mov
and
jge
lahf
xchg
pushf
jmp
jne
out
insl
aam
in
add
jns
lcall
fdivr
or
jne
shll
daa
dec
loop
repz
mov
imul
cmpl
adc
jl
test
ja
out
inc
xor
or
add
push
mov
push
sbbl
jge
sbb
or
xor
add
fidivrl
lret
lock
es
add
loope
jo
inc
enter
push
add
mov
lea
dec
jle
in
jp
sub
add
xor
std
pop
mov
add
es
scas
repz
mov
dec
mov
mov
mov
lahf
repnz
stos
pop
dec
popa
pop
mov
dec
mov
push
mov
insb
les
clc
mov
push
ret
xchg
adc
jg
dec
mov
xchg
lods
outsl
xchg
push
call
rorb
inc
nop
insb
mov
jecxz
out
sub
or
sub
xchg
and
fldt
fldcw
mov
mov
fistl
xor
cmpsl
out
push
in
addl
xchg
jbe
xor
mov
push
int3
loopne
std
clc
popa
or
cmp
mov
adc
ret
aam
adcb
mov
mov
jmp
pusha
cwtl
outsb
or
pop
add
mov
mov
hlt
and
lcall
movsl
sbb
inc
or
cmp
push
jmp
imul
mov
scas
stos
mov
pusha
test
xchg
fcmove
in
dec
inc
xor
adcb
mov
daa
data16
es
bound
and
adcl
insl
mov
xchg
in
pop
imul
dec
add
cmpsb
cmp
aaa
stos
sbb
adc
xchg
xchg
shll
inc
pcmpeqw
or
aaa
push
xchg
aas
in
xchg
dec
xor
cmp
mov
test
or
cmp
xor
pop
cmp
insb
sub
sbb
jmp
cmpsb
jmp
addr16
sbbb
xchg
ds
mov
adc
cmp
adcl
push
dec
jmp
imul
mov
movsl
shll
lods
ret
outsb
mov
jg
shrb
mov
and
or
sti
xchg
fadd
fcmovnb
dec
jae
aam
loope
bound
je
imull
lock
loop
popa
dec
mov
mov
mov
pop
push
xor
push
jp
xchg
sbb
xchg
and
mov
inc
popf
push
xchg
pop
inc
adc
dec
xchg
xlat
jo
mov
push
imul
adc
dec
jp
fmuls
push
dec
in
movsb
sbb
mov
sub
and
ja
cmpsl
mov
pusha
xchg
dec
cmp
jle
andl
loope
popa
ror
fildl
test
iret
ret
mov
xchg
and
call
cltd
xchg
shrl
data16
cltd
mov
and
cmp
cli
dec
and
lock
lods
sub
fmuls
and
popf
insl
sbb
pop
addr16
scas
mov
adc
fsubr
mov
or
pop
es
mov
stos
outsl
mov
fsubrl
pop
xchg
loopne
jmp
andl
add
sarb
push
outsl
loop
movsb
sti
or
int3
in
gs
insb
jle
mov
orl
add
sub
sysenter
shrb
xor
push
xor
or
rorb
imul
enter
rep
popl
lahf
cltd
cmc
sub
cltd
cmp
pushf
cli
sahf
fldenv
test
push
mov
push
jo
mov
dec
fsubp
mov
icebp
cwtl
or
mov
cmp
bound
mov
jnp
int3
fsubr
std
inc
xchg
aas
test
mov
xlat
sti
dec
mov
adc
shl
dec
pop
insl
mov
sub
fiaddl
xchg
pop
roll
sahf
fnstenv
cmp
jnp
out
stos
aaa
mov
lcall
mov
idivb
test
or
jnp
movsb
ja
mov
lock
int3
add
mov
push
lods
shll
add
es
xor
cmp
leave
lds
inc
dec
pop
xor
in
mov
pop
mov
sbb
push
in
sbb
daa
jle
stos
jno
gs
sbb
push
cmpsb
pop
aas
or
dec
hlt
cwtl
pop
fistpll
cli
add
ja
jnp
movsb
jmp
cli
jp
flds
push
and
in
cmp
mov
mov
ret
pop
jp
push
add
arpl
or
hlt
cmpsl
or
adc
dec
add
aam
out
sbb
xchg
popa
adc
or
lcall
andb
or
xchg
jae
jmp
lods
pop
je
sbb
xchg
cs
pop
test
mov
fcompl
fldl
mov
adc
in
pop
push
ret
or
insb
push
adcb
shrl
fwait
inc
and
sbb
mov
jge
add
ja
jae
or
dec
scas
adc
and
in
sbb
or
mov
test
pop
les
jns
inc
stos
popa
pop
addr16
decl
sahf
cmpsl
mov
inc
ss
dec
mov
cld
add
je
mov
push
in
sub
cmp
xor
lock
jecxz
jg
mov
xchg
push
scas
iret
lret
or
loope
mov
jp
cpuid
mov
sbb
jbe
sub
mov
adc
mov
call
push
adc
xchg
inc
icebp
movsl
test
push
cmpsl
int3
dec
aaa
into
mov
cs
cmc
and
mov
in
jbe
or
cmp
push
xchg
pusha
ss
enter
gs
arpl
mov
fsts
xor
loope
fisubrl
add
shrb
hlt
sbb
adc
mov
out
loope
lret
xlat
push
fsubs
in
push
pop
out
adc
imul
push
and
pop
jb
pop
push
mov
addr16
jb
xlat
int
pop
fisubs
jl
inc
sub
arpl
inc
loopne
jb
xlat
icebp
pop
sub
sub
jbe
pop
mov
fnsave
or
or
inc
mov
dec
xor
popa
sbb
xchg
cs
cwtl
jbe
mov
cli
push
in
dec
xchg
shrb
dec
cltd
mov
leave
jecxz
cwtl
sbb
jbe
jg
cli
xchg
inc
sbb
mov
lods
cmp
adc
divb
dec
mov
inc
aad
sti
or
insl
and
loopne
loopne
sti
shll
xchg
mov
leave
push
sbb
aam
arpl
jecxz
dec
add
shl
shrl
pop
stc
iret
xor
sarb
pop
popf
das
dec
aam
mov
je
cld
jne
insl
mov
stos
fimull
push
sbb
sub
nop
pop
dec
pop
jno
test
clc
ss
push
inc
popa
add
cmc
fidivl
pop
inc
ret
clc
cmp
push
pop
js
dec
sub
pop
dec
pop
popf
mov
cmp
push
sbb
cld
mov
es
js
cli
daa
outsl
cmp
mov
jbe
rcll
mov
into
sub
lcall
mov
loop
mov
xchg
jp
pop
rorl
cltd
out
inc
sbb
mov
je
cmp
popl
sbb
xchg
imul
shl
xchg
fisttps
loopne
push
outsb
dec
push
jbe
xchg
dec
mov
test
cmp
pop
and
xrelease
inc
sub
jbe
adc
fdivrl
pop
test
je
mov
and
adc
add
loop
int
leave
sub
fbstp
mov
jae
out
test
jp
scas
mov
add
jbe
in
sub
xchg
xor
shlb
jmp
dec
sbb
push
or
sbbb
dec
shlb
mov
outsb
popf
enter
shl
dec
mov
cli
pop
sub
mov
bound
xchg
shlb
mov
add
push
lret
fistps
stos
fisubl
inc
cmpsl
fidivrs
popa
add
shlb
xor
ljmp
outsb
jle
mov
out
stc
mov
xchg
xchg
les
loopne
pop
adc
in
mov
gs
cmp
sub
mov
scas
jnp
sbb
scas
scas
movsb
pop
cmpsb
sub
jae
jg
jl
loope
pop
mov
clc
sarb
fstps
mov
stos
outsb
xor
sbb
cmpsl
ds
das
stos
jae
cmp
pop
or
stos
rcrb
pop
xchg
mov
mov
orb
add
outsb
mov
push
frstor
add
repz
int
jl
iret
xor
out
aas
sbb
push
or
xchg
adc
jmp
int3
lahf
mov
xor
inc
and
inc
subb
clc
outsl
jge
push
aaa
pop
imul
sbb
fcomip
cmp
xchg
cmp
push
aaa
mov
sub
pop
ds
xchg
mov
out
xchg
push
or
xchg
repnz
add
and
adc
out
add
mov
cwtl
das
mov
stos
add
push
in
mov
mov
sub
sub
xchg
pop
in
xchg
ret
pop
mov
cmpsb
les
outsb
mov
lret
insb
sbb
lea
movb
mov
loope
jle
jge
push
dec
pop
ja
mov
cmpsl
push
jae
iret
int3
jno
out
mov
imul
aad
int
ja
dec
cmc
or
mulb
jns
push
ljmp
inc
or
push
jo
or
lods
repz
push
lods
cmp
push
jmp
fneni(8087
lahf
cmpl
xor
cmpsb
push
xlat
outsb
test
push
add
insb
sub
scas
out
hlt
jns
add
hlt
or
dec
icebp
jne
dec
jecxz
pop
insl
sub
xchg
xchg
mov
jge
add
movb
jl
mov
loopne
pop
aaa
mov
push
xchg
rorb
dec
jnp
and
mov
les
add
inc
int
arpl
ja
push
shl
mov
rol
sahf
inc
lea
fisubl
enter
push
mov
frstor
rcll
mov
test
push
sub
repnz
jecxz
mov
jmp
xlat
testl
sti
sbbb
mov
jp
jle
mov
iret
fnstcw
mov
aad
imul
dec
pop
mov
ficoms
movsb
push
popa
call
fbld
mov
gs
cmc
xchg
sub
jae
mov
cmp
mov
pop
pop
into
data16
repnz
mov
adc
ds
test
adc
sbb
add
mov
cmpb
xchg
rorb
stos
div
jg
dec
or
sub
insl
popf
mov
or
icebp
mov
in
das
jg
pop
lcall
inc
mov
mov
mov
push
loop
dec
push
in
fsubl
xchg
rcr
xchg
into
aas
jnp
inc
adc
add
pop
out
and
shlb
add
ljmp
mov
sbb
std
and
and
mov
sbbb
dec
loopne
arpl
movb
push
loop
sti
leave
shll
jg
xchg
gs
push
inc
fisttpl
adc
xor
dec
loope
jns
sub
cmp
adc
jno
lahf
push
clc
mov
pop
iret
push
add
rolb
lret
scas
sbb
dec
mov
in
test
fldcw
mov
xor
cmp
jl
sub
test
mov
add
sbbl
es
sbb
out
sbb
icebp
sub
inc
inc
and
lret
xor
imul
cmp
lock
sub
lahf
jmp
repnz
out
cmc
cli
and
sub
insb
scas
pop
negl
sub
test
adc
idivb
adc
jbe
jmp
dec
inc
pusha
jle
orb
nop
cmc
dec
mov
ljmp
lret
add
pop
lock
xchg
push
jnp
out
dec
dec
mov
add
repnz
insl
daa
aaa
filds
loope
lcall
and
push
jp
pop
ja
mov
paddusb
hlt
fsubrp
and
mov
aam
cmp
or
lcall
jne
rcrl
push
xor
popf
orb
inc
pushf
jmp
ret
cmpsb
sahf
fstl
dec
jmp
iret
adc
je
ss
aam
addr16
les
sbb
or
jge
push
cmovge
cmp
sahf
imul
sbb
pop
loop
fwait
ja
loope
cmp
daa
stc
std
mov
mov
cwtl
popl
inc
mov
sub
repz
dec
mov
or
adc
cmpsb
sbb
jns
push
cld
int
mov
orb
test
stos
inc
add
scas
fwait
push
pop
jo
mov
hlt
mov
xchg
outsb
mov
xchg
xchg
sub
and
sbb
jmp
jnp
mov
lods
lods
fcmovnbe
faddp
pop
adc
std
push
pop
hlt
addr16
lahf
sub
mov
adc
sbb
icebp
mov
push
fsubrl
movsl
ds
ffreep
fildl
mov
or
lods
cmc
int
inc
sti
shl
pop
ret
sbb
cmc
jl
mov
jp
pop
sbb
sbb
pop
in
cs
add
push
sub
mov
int
popf
lock
and
cwtl
xor
inc
inc
jo
out
test
cld
add
mov
dec
jecxz
inc
sbb
ficoms
das
mov
or
adc
pop
xor
sbb
out
arpl
cs
adc
cltd
dec
add
rolb
ss
or
cmpsl
dec
sahf
adc
les
xor
pop
mov
pop
fwait
int
enter
cmpsb
push
repz
cmc
test
cmp
sbb
xchg
repz
xchg
dec
repnz
sub
iret
cmpsl
int3
cmp
rclb
pop
add
stos
inc
cs
pop
mov
push
cld
testl
jmp
mov
ljmp
jmp
shlb
dec
mov
testb
rcll
jg
and
mov
cli
xchg
adc
push
xlat
xor
mov
pop
out
popa
jne
in
stos
loopne
fsubr
fisttps
fisttpl
or
jb
pop
ret
jle
sar
popf
mov
sarl
mov
loop
mov
insb
xchg
mov
aad
push
fadds
jb
mov
sub
adc
aad
push
rcrb
xchg
inc
stos
mov
out
in
jo
lcall
fs
jno
je
jmp
inc
push
pushf
fisubrs
pushf
enter
cltd
or
in
pop
fsubs
xchg
out
adc
dec
cmpsl
test
ret
dec
cmp
in
mov
push
dec
lret
adc
mov
mov
fsubrl
jns
sbb
xchg
push
scas
jmp
and
or
in
xor
repnz
das
cmpsb
mov
push
pop
sahf
or
stos
jge
and
push
xor
mov
jnp
stos
mov
pop
cmpsb
imul
mov
int
pushf
mov
xor
xchg
jge
or
divb
push
adcl
cmc
jne
sbb
pushf
adc
addl
lcall
xchg
std
clc
test
mov
xorb
loope
out
test
jne
push
out
adc
scas
xchg
ljmp
test
dec
push
push
mov
mov
fwait
imul
in
loope
pop
mov
sbb
lock
push
arpl
jnp
rol
xor
int3
push
pop
repnz
jecxz
push
or
call
mov
sahf
nop
push
leave
aas
out
inc
out
lret
sub
fsubrp
lock
lock
and
dec
inc
sub
xlat
popl
jno
sub
call
mov
data16
and
push
fwait
mov
clc
inc
jnp
and
decl
clts
ss
fdivl
pop
inc
shll
add
lods
lods
or
das
pop
push
push
jmp
xor
xchg
ret
cmc
mov
nop
daa
mov
shlb
pop
xor
sbb
adc
cld
xchg
add
cld
cltd
movsb
test
dec
hlt
jl
lea
mov
push
out
sbb
shlb
xor
add
xor
outsb
mov
int
pop
insb
inc
mov
jo
ds
add
cli
xlat
jo
loop
cmpsl
outsb
enter
push
xor
pop
pop
jg
je
mov
sete
add
dec
nop
jbe
xlat
add
sub
mov
ss
and
loopne
cmpsl
push
daa
sub
bound
nop
push
adc
js
push
adc
add
and
xor
dec
cmc
push
cmp
inc
mov
loope
mov
lret
test
sbb
add
insb
push
dec
sub
add
fldl
int
ljmp
push
clc
pop
jno
mov
or
mov
xchg
xlat
insl
and
cmc
mov
sbb
sbb
push
gs
lahf
nop
xchg
dec
mov
cmp
insl
push
sub
cld
lcall
in
xor
orl
roll
jle
sahf
clc
fldenv
icebp
sub
cwtl
mov
push
shrb
jne
jg
fnstcw
jge
int
fistl
and
mov
popa
push
mov
xchg
outsb
adc
mov
movsb
and
mov
sbb
push
push
repnz
in
mov
sbb
das
dec
mov
cmpsl
or
adc
leave
daa
es
adc
cwtl
fsubl
pop
mov
mov
pop
mov
movsl
js
push
pop
scas
addl
hlt
dec
sub
lahf
aas
push
cltd
orb
mov
push
lods
stos
mov
mov
es
push
in
test
and
and
fcomi
test
outsl
jg
fs
inc
punpckhwd
add
cmp
pushf
aas
bound
jle
adc
push
inc
xchg
je
adc
xchg
lods
adc
sbb
push
xchg
aam
sbb
or
decl
xchg
mov
push
cmpsb
les
jb
in
mov
shl
aas
adc
jne
out
jno
xor
and
clc
imull
js
lods
inc
push
xor
xchg
lret
fdivrl
add
mov
out
or
push
jmp
xchg
stc
adcl
jg
add
cwtl
push
adc
jbe
mov
mov
fwait
je
jnp
lea
pop
xchg
sbb
add
pop
jbe
les
stos
data16
sbb
mov
dec
es
mov
inc
adc
adc
gs
lcall
cltd
icebp
pushw
inc
das
insl
adc
sbb
xor
cmp
mov
pop
dec
int
sub
fcomps
pop
add
xchg
xor
sub
adc
sub
dec
xor
shl
mov
inc
sbb
jp
mov
adc
lret
push
adc
in
lds
aas
add
imul
inc
inc
fsubrp
add
mov
fcompl
in
out
je
and
sahf
jge
push
add
les
pop
roll
das
cmp
test
popf
xchg
ds
dec
fistpll
outsb
mov
es
mov
loope
imul
dec
loop
push
xchg
movsb
mov
mov
lds
fldcw
pop
push
mov
aas
and
enter
insl
push
push
push
call
dec
mov
rcll
mov
in
repz
sarl
cld
out
push
cwtl
adc
mov
arpl
cmp
lods
fdivs
sbb
add
iret
cmp
xchg
je
mov
loop
das
mov
mov
dec
in
lret
dec
dec
and
shlb
or
mov
rcl
dec
inc
cwtl
inc
dec
out
loope
pop
adc
aam
sbb
xor
pop
test
push
xlat
cli
shrl
mov
and
cmp
mov
push
fidivl
sbb
mov
lods
push
outsb
adc
push
add
sti
xchg
inc
adc
cmpsb
in
test
push
lcall
sbb
pusha
aas
jge
js
mov
push
jbe
js
add
gs
and
jb
jp
fildll
shrl
call
cmpb
and
mov
mov
fistps
add
iret
xor
in
insb
nop
xchg
leave
test
ds
pop
jo
xor
iret
ret
mov
arpl
ja
das
pop
adc
fiadds
data16
stos
gs
mul
nop
xchg
mov
jb
xchg
dec
sbb
sub
movsl
pop
mov
or
ret
cwtl
xor
dec
add
testb
xor
gs
mov
dec
jmp
sub
dec
or
lods
xor
loopne
adc
clc
test
xor
push
inc
lods
test
test
push
stc
mov
mov
adc
roll
cwtl
insl
pushf
leave
int3
fsubrs
out
outsl
movsb
mov
in
dec
orl
adc
xor
dec
dec
jne
inc
push
call
into
data16
sahf
mov
cmc
in
test
stc
sbb
adc
or
pop
mov
mov
lahf
mov
push
jmp
imull
in
incb
or
popa
repnz
aas
dec
in
data16
xchg
js
enter
cmp
mov
lahf
lret
add
sub
mov
xchg
sbb
xor
rcrl
movl
jp
test
movsl
mov
pop
xor
push
xor
push
arpl
push
pop
or
das
jo
ss
repz
mov
sbbl
xor
jle
xchg
mov
mov
dec
js
inc
jmp
fimull
mov
out
fdivrl
mov
sahf
adc
mov
inc
and
and
or
movsl
inc
add
sub
and
xchg
add
repz
push
js
cmp
xchg
jmp
push
sahf
addl
mov
std
xchg
shlb
mov
fdivrl
js
dec
sarb
mov
fildl
lret
hlt
dec
sub
sahf
and
push
lcall
sbb
fsubs
dec
mov
or
push
outsb
sbb
cmc
jae
in
add
popf
add
and
or
or
arpl
pop
pop
fstpl
inc
add
fbstp
and
mov
adc
popf
sbb
out
push
fs
mov
je
inc
lea
mov
add
sbb
inc
sbb
sub
dec
jge
push
enter
mov
cli
out
mov
or
jne
sbb
insb
mov
testl
popf
enter
push
jmp
mov
les
fcomi
testl
and
xchg
sbb
mov
das
cmp
push
mov
sarb
and
adc
test
and
js
sub
jg
gs
cmp
shrl
shlb
add
orl
pop
xor
nop
xlat
insl
adc
jno
shrb
iret
fs
dec
mov
test
imul
into
loop
inc
lods
mov
out
cwtl
sbbl
hlt
jne
mov
mov
pop
push
loop
aas
jmp
outsb
testb
mov
les
ret
in
jne
adc
fnsave
xorl
mov
in
jmp
mov
iret
push
add
xchg
cs
sbb
in
jmp
push
xor
mov
frstor
push
orl
push
sbb
cltd
nop
xchg
pop
sti
fistl
out
adc
add
xchg
push
out
add
mov
enter
sbbb
mov
dec
cmp
push
cmc
jle
mov
lcall
out
mov
and
lds
mov
lret
fstpt
xor
cmpsl
sub
shr
push
dec
sub
repz
and
repz
inc
or
ret
xor
jp
lock
pop
cmp
mov
add
sbb
cmpl
lds
loope
push
cmc
dec
out
mov
mov
out
cmpsl
dec
or
ss
add
jg
and
mov
arpl
jl
sub
lcall
dec
lds
addb
sub
inc
testb
insb
xlat
or
inc
insl
add
or
dec
lret
jae
mov
xchg
sub
inc
cmp
cmpsb
xchg
mov
inc
sti
xor
sub
scas
jp
cwtl
sbb
insb
mov
sub
dec
movsl
inc
int3
aad
adc
and
int
mov
or
sbb
or
cs
addr16
xor
das
inc
xchg
xor
push
insb
pop
or
inc
mov
sub
and
adc
adc
cwtl
jl
fcmove
int
loop
lods
inc
aad
inc
popf
fidivl
sbb
clc
inc
cwtl
inc
daa
mov
xor
mov
insl
hlt
loope
add
shlb
mov
push
stos
cs
xor
aas
dec
jle
scas
pop
imul
ss
fbld
loope
jl
or
lods
lods
push
dec
arpl
xorb
jle
cltd
push
fists
adc
mov
lahf
xor
std
loope
mov
mov
into
scas
dec
fwait
mov
sbb
jmp
imul
sub
dec
and
cmp
call
inc
ja
or
cwtl
pop
lret
mov
push
pop
je
ljmp
mov
mov
js
sbb
test
testb
add
jnp
jae
dec
pushf
hlt
jg
out
sbb
sbb
and
sub
xor
ljmp
push
pop
cmp
in
mov
in
addb
fwait
stos
imul
xchg
cmp
sub
xor
mov
push
push
les
mov
dec
lock
test
arpl
lock
lret
pop
in
movswl
lods
mov
aad
rcll
add
xor
jg
pop
in
dec
cmp
cmp
fnstsw
xor
icebp
daa
cmp
lret
hlt
sbb
mov
jmp
ficomps
fldt
icebp
fdivl
loopne
jp
xchg
xor
addr16
lcall
inc
adc
mov
out
popa
cwtl
popa
ficoms
jp
sub
add
adc
fs
sti
push
mov
push
loopne
jl
in
mov
cmp
test
orb
ljmp
fadds
adc
dec
insb
add
sbb
ja
sub
jge
and
enter
add
ficomps
stc
xchg
add
into
scas
outsl
mov
push
sbb
aad
cld
dec
fucomi
jge
pop
fstp
jp
divb
push
jp
not
movsb
pop
fldcw
inc
lods
sub
xor
cmp
ficompl
pusha
leave
xor
lcall
push
or
sub
push
or
xchg
xor
jle
xchg
push
push
dec
test
out
shll
or
bound
adc
out
xchg
xlat
repz
ljmpw
and
test
imul
ftst
pop
cmp
mov
outsb
movsl
and
and
es
loop
test
testb
mov
add
inc
push
sbb
in
test
push
lods
shrb
cmp
sub
into
aad
cmp
out
test
push
sbb
pusha
leave
push
sti
xorl
dec
mov
lret
cmpsb
inc
jb
in
inc
inc
test
cltd
imul
dec
mov
add
inc
push
cmpsb
cmp
jnp
sarb
mov
sbb
add
insb
cmp
lahf
pop
cmp
jne
rcrl
mov
sub
insl
push
leave
or
xchg
jge
fsubr
lods
mov
inc
adc
and
cld
stos
mov
mov
addl
mov
sbb
mov
jns
sub
and
cmp
imul
roll
xchg
cwtl
data16
cwtl
mov
sahf
enter
into
mov
add
out
sti
dec
loope
dec
adc
clc
sbb
push
fildll
ss
std
subb
aas
das
cmp
stos
es
testb
lods
ret
popa
fdivrl
or
xchg
outsb
popf
mov
repz
dec
pop
pop
loop
and
mov
out
cmp
xlat
movsb
ds
lret
jae
imul
mov
adc
push
ss
mov
ret
repz
inc
xchg
mov
fldt
fimull
rol
repz
push
mov
lds
cmpsl
lcall
push
test
negb
scas
repnz
adc
jno
fdivl
mov
push
test
jns
negb
add
cmp
inc
scas
negl
jg
cmc
mov
cmpsb
scas
lahf
std
xchg
iret
mov
lret
mov
jb
and
xchg
arpl
inc
jb
test
push
imul
mov
cmp
aas
mov
movntps
pop
lods
mov
movsb
jno
add
int
pop
orb
lret
xchg
ds
mov
dec
cwtl
push
int3
lea
mov
mov
mov
pop
push
es
fidivs
popa
sub
pop
int3
xor
adc
test
cmpsl
ds
or
and
insb
and
andl
pop
out
cmp
pop
jbe
cmp
sub
movsb
mov
mov
sub
call
sub
dec
or
jae
jge
into
or
cmp
add
aas
lcall
pusha
mov
imul
add
in
push
out
test
ret
mov
pushf
pop
imul
sub
mov
adc
xor
popf
pop
xchg
mov
jmp
lahf
inc
push
mov
movsb
xor
mov
push
hlt
sbb
outsb
stos
clc
push
cli
loope
mov
cli
inc
push
lret
push
cwtl
aas
mov
push
inc
mov
cli
push
lods
push
fidivl
jg
cwtl
das
jne
jecxz
shlb
jb
sub
ja
mov
pop
jecxz
lock
bnd
sbb
test
outsb
outsb
ret
xor
loope
ss
push
and
clc
jae
push
dec
push
push
out
sbb
mov
imul
dec
add
inc
lea
out
fnstenv
lret
ljmp
adc
push
dec
sbb
dec
ret
insl
jge
adc
repnz
es
adc
dec
and
add
mov
jno
call
ja
jb
xchg
xchg
xchg
jne
cld
lcall
in
das
add
push
leave
enter
ss
jl
lods
push
mov
adc
sbb
or
mov
pop
adc
pop
stos
sub
push
push
loopne
mov
imul
pop
push
jecxz
fistps
test
dec
pop
ret
test
pop
fistpl
jge
push
mov
pop
mov
loop
in
decl
inc
pop
and
hlt
push
xor
stos
xchg
xor
and
cwtl
mov
mov
aam
sarb
mov
cltd
xor
sarb
aam
out
dec
movsb
notb
shrl
ja
add
js
call
mov
in
fwait
arpl
es
jns
in
sub
enter
mov
cmp
or
jnp
fcompl
out
pop
cmp
shrl
cmpb
mov
mov
insl
xor
sub
sub
mov
bound
mov
or
orb
inc
push
cmp
testb
mov
stc
cmp
incb
lcall
fisubrl
in
pop
xor
sub
jecxz
xchg
adc
shl
jo
aas
sub
mov
mov
mov
fnstcw
push
sub
js
adc
pop
add
stc
pusha
jle
sub
pop
fldenvs
lcall
pop
adc
bound
outsl
push
fs
cmp
inc
cmp
ss
jmp
pop
sbb
dec
lea
lahf
push
popa
or
or
add
jecxz
xor
fnsave
sub
jno
sti
push
inc
in
xchg
outsb
add
bound
and
jmp
call
xor
out
lret
add
andb
out
or
jo
daa
fs
cld
stos
icebp
mov
xchg
cmp
cmp
and
inc
adcl
daa
lcall
or
inc
mov
lahf
jbe
mov
test
cmp
pop
les
xlat
inc
mov
xchg
push
inc
ja
aas
mov
mov
fidivs
into
xchg
xchg
adc
and
xor
xlat
mov
aad
pushf
cmp
pxor
loop
faddp
jle
js
jns
mov
fwait
rcrb
mov
into
jg
sbb
stos
shrb
xchg
jmp
imul
out
pop
xchg
pop
rcrb
hlt
pop
insl
imul
lods
lahf
cld
cmpl
ds
stc
es
xor
mov
pop
and
cwtl
jg
adcb
out
popa
lock
enter
pop
jle
loop
inc
leave
pusha
js
loope
and
mov
fisubs
xorb
and
lods
push
shrl
test
sub
push
filds
push
lret
mov
lahf
int
or
rclb
pop
xchg
fsubr
lds
arpl
shrl
repz
lds
ja
out
enter
xchg
sub
sub
mov
data16
push
mov
xchg
mov
inc
fisubs
dec
adc
sbb
add
out
xor
push
shrb
insb
mov
out
add
adc
stc
and
xor
ljmp
les
mov
outsl
inc
cmp
mov
movsl
push
sbb
rol
and
pop
imul
pop
mov
mov
adc
int
adc
mov
insl
xchg
jmp
pusha
bnd
xchg
cmp
in
dec
dec
jp
insb
mov
adc
imul
rolb
les
add
fisubrl
sbb
or
clc
ss
lcall
cmp
les
push
push
jb
leave
sbb
jae
testl
or
test
jp
pop
jnp
arpl
arpl
pop
push
mov
mov
cs
addr16
push
push
xchg
rclb
jecxz
icebp
xor
shl
xchg
sbb
mov
enter
sahf
xor
cwtl
sbb
fsubrl
jmp
mov
mov
push
xchg
cli
movsb
sbb
aaa
fs
movsl
xor
jae
repnz
popa
test
addl
cs
mov
dec
inc
into
test
pop
ret
mov
mov
dec
pop
shll
cmp
cwtl
cs
lret
mov
ds
out
out
enter
xchg
dec
mov
call
inc
mov
sahf
or
outsl
pop
dec
loope
shlb
mov
push
xor
test
nop
daa
pop
lock
push
insl
xor
movsl
cmp
xchg
sbb
outsb
repz
ljmp
inc
dec
mov
xor
bound
test
pop
fmul
test
repnz
loope
mov
scas
mov
outsl
xlat
fisubs
xchg
rcrl
sub
push
push
das
sbb
icebp
lea
enter
repz
push
test
jge
cmpsb
scas
lret
ret
addr16
cmpsl
push
xchg
mov
cld
mov
push
and
xor
jo
pop
cmp
dec
ja
jp
rolb
js
stc
jmp
popa
add
shl
and
add
repz
shrl
iretw
sub
std
shrl
aas
push
mov
push
inc
xor
push
fsubr
inc
pop
inc
inc
bound
inc
sub
js
lea
hlt
popf
inc
jmp
add
mov
sbb
cld
xchg
inc
jmp
sbb
inc
mov
hlt
xor
adc
movsb
push
cmpsl
pop
adc
mov
int
mov
sub
xchg
push
movsl
in
shll
sub
push
hlt
mov
inc
aaa
mov
push
cmpsl
mov
push
inc
jle
mov
xchg
lods
ds
aad
push
mov
repz
push
cltd
popa
xchg
test
sarb
adc
ljmp
lret
test
shrl
das
les
ja
fnsave
cmp
shr
or
sbb
and
jg
pop
inc
pop
inc
xchg
sbbl
ja
test
xor
enter
je
mov
out
out
psubd
jge
out
gs
stos
test
test
xchg
cmp
testl
rcrb
sub
scas
pushf
jo
jl
jge
dec
scas
rorl
fmull
into
jg
das
jnp
push
sti
out
inc
sbb
dec
ret
int3
in
jnp
sbb
insb
jp
mov
jbe
mov
xchg
jae
jno
sbb
shl
into
add
movsl
int
andl
pop
or
jl
idivl
dec
adc
insb
dec
mov
push
or
mov
sbb
dec
loopne
inc
into
lock
xor
mov
push
push
pop
add
jnp
mov
cmpl
mov
aaa
lods
push
dec
loop
es
or
xchg
jecxz
iret
insb
add
std
cli
lcall
cmp
dec
loopne
loop
addr16
inc
leave
pusha
jbe
add
cmp
jb
cmp
imul
loopne
addr16
mov
lret
in
repnz
sub
sub
testb
scas
push
xchg
push
inc
les
lahf
outsb
js
mov
stc
scas
pop
cmp
mov
nop
jl
shrl
nop
lahf
xchg
push
push
ja
inc
cmpsb
sbb
shrb
rol
xchg
push
mov
jbe
xchg
stos
fdiv
fcomi
jmp
je
or
jae
cmpsl
adc
push
pusha
test
dec
sbb
pop
notb
mov
fsubs
icebp
dec
cmp
les
dec
out
test
aaa
push
push
push
xchg
push
data16
inc
xor
scas
xor
jl
or
nop
popa
xchg
jl
loope
mov
pop
inc
aad
jge
jp
mov
push
ja
or
jb
dec
mov
cmp
and
and
daa
rorb
outsb
test
mov
ficomps
sahf
xorb
mov
cmpsb
dec
mov
cmp
mov
inc
loope
add
icebp
in
bndstx
sbb
cli
sahf
loop
or
mov
pop
aam
xlat
pop
jg
std
mov
das
sbb
test
adc
inc
mov
insb
pop
push
inc
sti
icebp
pop
dec
in
cltd
xor
pop
jae
inc
lds
in
mov
xor
int3
push
repnz
test
inc
fs
jbe
mov
mov
subb
rcrl
or
jmp
imul
fs
das
adc
js
std
mov
and
fbstp
pop
sar
jge
push
cltd
in
push
movsb
sbb
xor
outsb
adc
mov
sbb
mov
jl
in
pushf
cmp
dec
scas
sti
mov
jnp,pt
lods
out
adc
xchg
loope
adc
enter
aas
jmp
mov
pop
pop
jbe
add
push
popf
push
xchg
sub
push
mov
cmpsb
test
ljmp
loopne
push
xchg
add
sub
inc
add
jbe
adc
fstps
orl
push
das
enter
mov
rcll
hlt
xor
call
sub
daa
cmp
sbbl
in
mov
rcrl
mov
sub
insl
outsb
inc
jne
sbb
jl
frstor
ja
pop
mov
mov
cmpb
mov
call
decb
fsubrs
sub
testl
jmp
scas
fidivrl
call
mov
jecxz
sbbl
movsl
cltd
mov
loopne
push
xchg
or
pop
daa
mov
xor
add
mov
andnps
lret
mov
jae
adc
mov
sahf
std
fcoms
xor
jmp
mov
add
xor
mov
daa
and
and
xor
pop
aaa
inc
ss
jmp
lret
push
dec
fwait
shl
aaa
fs
das
inc
cmp
xor
sub
jmp
push
jge
lcall
aas
in
mov
ret
in
pop
ljmp
inc
push
shl
sub
fstpt
fiadds
inc
movsb
pop
call
aas
mov
mov
jo
lret
jno
sti
test
loop
movsl
clc
and
pop
jmp
xchg
gs
aad
sub
dec
dec
jmp
push
data16
int3
movsl
outsl
xchg
or
cmc
and
and
jnp
jmp
out
pop
mov
movsb
xrelease
fdivp
push
aam
cmp
mov
outsl
fidivrl
dec
cmp
bound
xchg
pop
icebp
cmp
out
loopne
pushf
sub
and
xchg
push
stos
xchg
cmp
insl
push
shl
cmp
pusha
adc
inc
adc
sub
mov
daa
hlt
in
dec
jo
out
dec
popa
lods
jmp
push
ds
jne
pop
test
int3
popf
xchg
adcl
imul
andl
jg
mov
xchg
adc
xchg
sub
cmp
dec
jg
dec
xchg
pop
mov
cmp
cmp
adc
ss
or
inc
push
sub
mov
pusha
jne
stos
out
insb
sti
or
dec
outsl
add
or
ret
xchg
iret
push
shll
fwait
and
ss
loop
sti
dec
js
fidivs
xor
stc
test
push
mov
mov
mov
cltd
sub
pop
mov
and
mov
inc
or
mov
mov
adc
sub
lret
dec
ljmp
decl
mov
adc
lahf
ss
and
and
dec
add
int3
fwait
mov
cmp
fsubs
mov
and
iret
sbb
mov
out
and
leave
lahf
out
sbb
cmp
loope
inc
lock
jne
leave
push
cli
rorb
repnz
and
pop
hlt
xor
cltd
test
dec
lock
lods
mov
cli
imul
lock
mov
bswap
xchg
shrl
das
xchg
fwait
in
cmp
mov
sbb
cmc
bound
jg
mov
jbe
pop
adc
pop
sub
or
sub
pop
xlat
cmp
cmp
in
leave
push
sbb
jb
stos
aas
mov
push
addr16
sbb
push
shrl
outsb
pop
jne
xor
les
lret
popf
repnz
mov
lcall
sbb
loope
add
dec
push
subb
push
fidivrl
outsb
xor
cmpsb
fsubrs
mov
lds
rclb
in
jbe
ret
cmp
fmulp
pop
xchg
mov
xlat
mov
mov
out
or
xor
xor
in
cmp
cli
dec
pop
xor
cwtl
dec
mov
and
or
pop
adc
ret
loope
test
in
push
lock
popl
cmp
jle
and
je
or
jbe,pt
aas
sbb
xchg
loope
mov
pop
fisttpl
or
xchg
lock
xor
xchg
push
insl
dec
adc
adc
xor
cmp
jge
out
stos
push
int
leave
daa
sbb
cmp
popf
dec
cld
icebp
xchg
loopne
dec
or
je
jae
push
xchg
mov
in
or
fs
mov
xchg
push
dec
inc
inc
shll
gs
sub
cmp
mov
es
pop
int3
xor
mov
jmp
xor
dec
iret
and
push
sti
ja
dec
adc
push
in
fbstp
mov
mov
lods
sub
sbb
mov
cmp
pop
pop
mov
lods
out
pop
jg
mov
pop
xor
push
cmpsl
addr16
imul
pop
cmc
into
ss
out
xchg
pop
push
jns
cmpsb
in
std
xchg
fnsave
movl
or
xchg
pop
sbb
and
out
cmpl
mov
lods
push
adc
mov
leave
xor
or
adc
data16
popf
mov
fisttps
stos
out
fmull
sbb
ja
int3
sub
cli
je
stos
test
outsb
mov
rcl
cmp
insb
mov
adc
lret
mov
fcompl
sub
stos
cs
jg
adc
ss
mov
mov
addl
mov
inc
test
cmp
fcomip
leave
push
mov
mov
dec
test
adcl
add
das
mov
icebp
out
jecxz
mov
inc
inc
adc
out
aad
pop
mov
in
sbb
pop
ds
pop
inc
rclb
scas
leave
adc
add
dec
mov
push
ffree
jecxz
push
fstl
xor
in
jge
xchg
ds
lods
repz
adc
add
xchg
insl
mov
fwait
mov
addb
ret
pop
mov
hlt
mov
jo
and
std
xchg
adc
sbb
hlt
dec
test
xchg
push
push
pusha
incl
ss
cltd
pop
add
push
scas
test
add
mov
insl
jge
loope
add
loope
sbb
mov
sbb
mov
es
push
lcall
cld
iret
bound
add
mov
mov
dec
fsubl
pop
dec
add
adc
and
stc
decb
jge
sbb
subb
int3
ficoms
mov
or
test
push
outsl
push
ss
adc
shlb
xor
repnz
sbb
js
or
cmpsb
mov
jp
fstl
icebp
inc
push
lahf
pop
lcall
pop
adc
inc
mov
mov
sbb
inc
scas
pop
test
jns
cltd
mov
dec
push
ljmp
and
cmp
mov
js
jns
push
mov
push
in
jmp
out
xchg
push
sub
push
fwait
cmpsl
lea
scas
daa
mov
sub
js
pop
jmp
push
and
jno
arpl
jle
jbe
hlt
cpuid
out
in
push
cmc
int3
mov
icebp
mov
or
push
divb
daa
arpl
push
cltd
pop
xchg
jno
or
lods
sbb
rol
jl
shlb
aam
popf
idivb
pusha
pop
mov
fadds
push
dec
outsl
cli
sub
pop
movsb
in
jge
lcall
push
into
jb
add
je
iret
jbe
into
movsb
notl
or
icebp
frstor
in
mov
loope
out
or
and
iret
lcall
mov
mov
mov
sbb
lcall
xchg
mov
push
mov
aad
out
push
jge
add
ror
lods
aam
test
mov
into
scas
adc
adc
call
sti
stos
rorb
loope
adc
xor
sub
lock
test
rorb
inc
sbb
inc
aam
mov
popf
cmp
xchg
jb
cltd
add
push
mov
nop
xor
out
jl
push
scas
fsubr
rorb
xor
ret
sti
and
bnd
fdivs
sbb
rorl
mov
or
jmp
inc
mov
jnp
stc
rorl
sbb
mov
inc
mov
sub
jbe
cmp
adc
in
sub
jle
inc
fcoms
sbb
je
mov
and
and
scas
stos
add
and
jo
shll
arpl
fsubl
pusha
stos
repz
scas
cmp
jno
xor
xchg
dec
cld
dec
jns
les
sahf
mov
cwtl
repnz
rcll
push
jb
mov
mov
and
or
cmp
je
scas
adc
test
jbe
sbb
xchg
mov
mov
fs
mov
imul
push
or
data16
scas
sub
in
jbe
xor
cmp
cmp
push
xchg
insb
mov
mov
mov
cmp
loope
lods
jge
sub
cmpps
pop
mov
addr16
inc
roll
aam
pop
lds
shrb
test
insl
fisubs
mov
ss
jnp
add
insl
mov
scas
popa
fsts
jne
jle
sub
aad
or
mov
inc
fistpl
inc
ret
or
call
js
sub
sbb
das
dec
int3
fcmovb
pop
scas
sub
shrl
sbb
push
sbb
push
shll
dec
xor
inc
stos
inc
jns
aaa
add
lret
push
xchg
or
fwait
push
push
mov
andb
scas
and
popa
cmp
sub
test
arpl
scas
stos
dec
int
fwait
push
shr
xchg
lret
or
jp
in
adc
out
imul
jp
fadd
fldenv
lret
inc
popa
je
and
inc
push
cmpsl
stc
imul
pusha
pop
cmpsl
rorl
fdivs
lock
test
stos
jbe
and
and
mov
pop
mov
add
jbe
pop
shl
aas
push
mov
sbb
jp
jge
xor
mov
aaa
jecxz
jg
pop
stc
je
mov
decl
adc
pushf
sarl
std
sub
or
mov
inc
sub
imul
sbb
mov
cld
int
and
mov
orb
popa
mov
push
aad
mov
sub
idivb
cmp
add
cmp
mov
lds
jle
outsl
lock
push
shr
jmp
cmp
inc
cvtps2pd
inc
adc
xchg
mov
mov
pop
mov
push
repz
push
stos
jb
pop
and
push
jle
lds
out
ja
jo
xor
test
loopne
pop
adc
divb
pop
outsb
mov
jle
shlb
dec
filds
fwait
cmpsl
sub
aam
imul
imulb
mov
cmp
dec
and
ss
inc
mov
cmc
mov
push
push
pop
cmp
add
ds
adc
call
pop
out
pop
mov
inc
sub
dec
pop
outsb
pop
xchg
rcrb
mov
add
pop
pusha
add
fs
std
cmp
aad
xchg
mov
fdivr
mov
movsl
jmp
jle
test
push
ds
add
lock
fsubrs
adc
subb
notb
pop
dec
int
jbe
pushf
xor
and
or
movsl
les
jb
and
mov
add
mov
pop
and
sarb
lea
shlb
push
xchg
mov
fisubl
jecxz
add
jae
pop
push
divl
sub
testl
mov
mov
xchg
out
pop
les
notl
push
push
movsl
test
sub
or
inc
aaa
xchg
sbb
mov
push
imull
inc
sbb
jns
inc
loope
cmpsl
push
mov
and
pop
hlt
mov
mov
sbb
push
lods
inc
aas
cmp
popa
sbbl
punpcklbw
mov
sub
addr16
into
ss
lret
fisubs
jbe
push
sbb
add
jp
cmp
dec
pop
jb
in
cmp
mov
shlb
popa
cmp
push
mov
jnp
xchg
mov
ret
pop
fnstcw
add
dec
cmpsb
jns
movzbl
ds
dec
dec
bound
push
test
test
ret
mov
mov
xchg
mov
aaa
inc
pop
mov
mov
inc
aad
inc
aaa
jge
cli
add
jae
test
mov
cmpsl
cld
cmc
leave
and
xor
add
adc
outsb
and
cltd
clc
xor
inc
gs
xor
mov
sub
mov
shl
xor
shlb
push
push
xchg
ljmp
add
shlb
add
mov
bts
jns
cmp
mov
repnz
icebp
sbb
jge
lahf
pause
adc
mov
lahf
stos
or
mov
mov
out
or
lock
lcall
xor
mov
and
das
addr16
std
mov
rclb
rolb
mov
mov
shll
pusha
data16
clc
leave
in
xchg
in
jg
sbb
add
mov
sti
outsb
sub
mov
dec
mov
mov
bound
test
push
or
push
fstps
test
cli
fidivs
sbb
sarl
mov
jp
pop
lcall
repnz
out
xchg
cs
xorl
push
jns
and
ljmp
mov
ss
cmc
mov
test
cmp
dec
push
sti
xchg
or
xchg
add
push
sbb
scas
out
xor
and
in
xchg
add
rorb
sbb
jp
pop
cltd
data16
fs
mov
xor
cmpsl
iret
and
imul
push
sub
add
or
orb
insb
dec
lahf
jb
loope
push
dec
and
jnp
jnp
inc
jno
push
out
out
push
mov
in
pop
ret
fnstsw
jge
sbb
mov
loope
sbb
rclb
bound
dec
fldenv
pop
or
dec
outsl
add
aam
insb
ret
stos
aas
jmp
out
push
call
push
mov
lret
lret
push
jmp
jnp
jae
out
dec
push
lcall
mov
sub
and
dec
add
jnp
std
jp
lahf
dec
negb
jle
adc
pop
scas
in
push
xchg
and
arpl
mov
std
dec
sbbl
les
mov
ret
push
pop
insl
ljmp
cld
das
add
loope
sbb
sbb
cli
mov
cmp
lret
out
aas
ss
inc
mov
inc
shl
inc
inc
loope
and
jbe
dec
lods
cmp
andb
cltd
std
sbb
out
mov
fcoml
sarl
cmp
std
pop
pushf
cmp
outsl
add
divb
mov
or
cmovp
rorb
xchg
xchg
push
sub
jns
repz
or
sbbl
and
jle
ret
jns
sbb
and
xchg
push
sbb
fs
pop
popa
mov
in
dec
mov
inc
shl
arpl
ljmp
fidivrs
add
sti
jno
popf
test
xlat
orb
or
push
mov
add
jae
repz
inc
sub
andb
xchg
shr
ret
add
out
mov
xchg
xor
and
xchg
test
adc
les
push
jbe
imul
fimull
and
js
ficoms
add
sbb
js
in
mov
into
jb
push
jo
mov
xor
cltd
adc
sub
xchg
dec
lcall
ret
jecxz
andb
shl
push
jo
dec
sub
sbb
loope
sub
mov
add
sbb
dec
flds
cmp
dec
cs
xchg
push
sahf
mov
in
call
mov
cmp
imul
scas
mov
inc
and
inc
loop
cmc
ss
or
ret
mov
add
aam
mov
pushf
repz
fdivrl
add
push
jmp
mov
jg
data16
xchg
xor
test
dec
inc
sub
cmp
pop
outsb
aaa
pop
je
xchg
jb
push
adc
inc
sbb
push
fisubs
add
std
in
imull
add
cmp
jae
xchg
outsl
popf
xor
xchg
and
bound
fbld
popl
pop
je
sarl
in
xor
pop
sub
lock
mov
movsl
jne
loop
imul
lds
adcl
push
jns
lods
pop
and
push
pop
movsb
cmp
dec
mov
rcrl
lods
ljmp
es
ss
mov
pop
scas
add
sbb
xor
fistpl
push
sub
jle
imull
fcoml
push
mov
data16
and
in
icebp
jg
es
sub
fcoms
addb
sbb
hlt
addr16
lds
pusha
arpl
gs
addl
cmovle
inc
mov
out
jecxz
insb
ffreep
mov
loope
lahf
xchg
inc
or
jle
mov
add
pop
jl
inc
mul
jns
ret
push
xchg
sub
sbb
jns
sti
mov
shl
imul
test
xadd
cltd
or
lret
addr16
jle
dec
pop
mov
outsb
and
cmp
test
dec
repnz
mov
icebp
lret
or
insl
jmp
call
sbb
lret
jns
std
aas
outsb
pushf
jl
sbb
dec
push
insl
out
ds
lods
mov
pop
fisttps
mov
push
rcll
push
insl
or
xchg
sahf
sbb
sbb
mov
add
or
ret
aam
lret
jae
mov
movsb
movsb
daa
arpl
sbb
push
xchg
pop
outsl
lcall
out
pop
jnp
andb
push
fisubs
fdivs
dec
lea
or
push
mov
imul
xchg
lcall
sub
repnz
shrl
mov
pushf
lods
adcl
mov
mov
out
mov
inc
sbb
mov
mov
push
popa
int
xchg
bswap
and
jae
inc
clc
sub
js
insl
dec
lea
lret
icebp
xchg
out
stc
das
pop
insl
push
pop
js
pandn
xchg
mov
add
das
addr16
inc
movsl
icebp
inc
mov
sub
add
pop
push
pop
xor
jg
add
or
filds
mov
push
xchg
dec
fs
jmp
dec
fisubrs
adc
xchg
ja
sub
xchg
mov
mov
sarb
xchg
sub
sbb
push
cwtl
out
and
push
jae
xor
mov
xchg
pop
sarb
int
mov
arpl
mov
sti
or
mov
adc
std
push
aam
add
mov
in
aam
jne
popa
xor
xchg
out
cmpsl
jne
aaa
fwait
push
jne
in
mov
std
inc
fadds
inc
inc
push
sub
cld
or
add
cwtl
dec
adc
jae
cmpb
adc
adc
adc
jo
incl
cli
jge
fnstcw
test
js
outsb
and
ljmp
test
ja
mov
test
ret
aaa
dec
mov
jmp
inc
lock
pop
xchg
xchg
cmp
dec
rcrb
scas
imul
pop
ja
push
movsl
sbb
arpl
mov
sub
mov
dec
dec
push
nop
mov
and
fstl
and
into
arpl
xlat
sub
mov
cmp
js
jecxz
test
inc
lret
push
fs
dec
and
shll
sti
add
sbb
loope
pushf
and
test
pop
cmp
roll
insb
in
pop
or
pop
jnp
sbb
rcr
std
sbb
xchg
sub
sub
or
mov
or
cli
push
icebp
imul
faddl
xor
add
ss
xor
outsl
cld
dec
mov
pop
jecxz
pusha
cld
add
mov
addb
jb
aam
movsl
adc
inc
add
adc
lods
jno
pop
aaa
test
mov
out
pop
popa
mov
cmp
stc
sbb
in
lock
repz
lds
mov
cmc
popf
inc
fcmove
mov
jecxz
bound
addr16
push
das
je
das
les
sub
pop
or
add
test
bound
cmp
sub
cmp
jle
fmul
pop
ret
lcall
sbb
push
sbb
push
cmp
mov
sub
jmp
jb
punpcklwd
mov
lahf
push
xlat
or
pop
inc
jecxz
icebp
clc
xor
and
mov
scas
add
fstl
das
xor
push
imul
ds
roll
lret
cld
mov
adc
into
fiaddl
repz
xchg
or
push
leave
mov
inc
push
fistl
lret
fists
pop
test
inc
movsl
mov
add
aam
in
ds
in
lods
insb
add
roll
fistl
push
icebp
dec
repz
and
fcoml
jbe
pop
cld
or
cmp
pop
push
int
test
icebp
and
push
aaa
cwtl
outsl
lret
test
adc
test
pop
fistl
add
cli
xchg
stos
daa
cmpps
dec
fistpll
into
jmp
inc
jae
or
inc
test
cs
sbb
stos
mov
lods
call
pop
lods
inc
nop
loop
test
jno
fimuls
mov
lods
pop
pop
sar
jl
aaa
in
lret
icebp
test
or
cmp
push
mov
addb
inc
or
insl
dec
sub
jnp
iret
daa
sub
movsl
pushf
jb
rcl
testl
lea
xor
dec
adc
hlt
pop
addr16
pop
loope
icebp
idivb
gs
cmp
and
push
mov
mulb
outsb
imul
mov
xor
xchg
movsb
fcmovnbe
mov
or
mov
je
loope
mov
je
cmpb
insb
xchg
fwait
outsl
push
int
iret
gs
cld
jmp
sbbl
xchg
stos
push
mov
ss
dec
sub
ja
rep
push
or
imulb
xchg
sub
cmpsl
insl
inc
pop
xor
mov
out
sbb
push
mov
add
and
pop
xor
adcb
mulb
pop
and
sub
adc
aam
iret
push
ss
sub
lret
fnsave
add
adc
loope
aaa
push
ret
into
loope
mov
shl
push
cld
lcall
shlb
in
sbb
cmpsl
jg
and
mov
int
dec
sub
dec
cmp
orb
addb
dec
inc
es
dec
xchg
in
movsb
repnz
in
inc
daa
outsb
outsb
mov
ret
into
add
gs
xlat
pushl
andl
ret
push
and
jp
adc
or
cli
fists
and
jo
orb
outsl
push
pop
ficoml
cli
jbe
mov
jno
pushf
mov
ret
pop
daa
loope
ds
mov
int
xlat
ja
sub
arpl
or
call
cmc
mov
sub
push
push
lock
les
loopne
pop
xor
into
cli
dec
loope
hlt
mov
cmp
dec
jbe
insl
mov
adc
outsl
jecxz
stos
test
fidivs
leave
mov
in
mov
incb
fcoms
jae
jbe
lcall
dec
in
std
xlat
xchg
popa
pusha
lahf
adc
mov
sbb
ret
cmpsl
sbb
stc
insl
mov
cmp
repnz
sub
mov
sub
mov
or
ret
sbb
mov
mov
adc
hlt
je
subb
aaa
jmp
scas
ret
pop
jb
lret
stc
inc
inc
imul
mov
fstps
inc
jg
sub
pusha
xlat
mov
out
xchg
mov
mov
outsb
int
lea
aad
test
xor
mov
repz
cmp
mov
push
insl
sti
rcr
sub
mov
mov
mov
inc
notl
jbe
inc
mov
frstor
inc
xchg
xor
cmp
mov
stc
or
add
mov
mov
cmp
lock
xor
nop
jl
arpl
sahf
push
inc
lret
xor
imul
mov
test
cmpsl
dec
cmp
subb
ud0
in
rorl
outsb
push
repnz
and
popa
dec
in
dec
lods
adc
sub
and
iret
dec
cmp
cmp
add
mov
outsl
test
mov
mov
cld
pop
xchg
leave
daa
or
push
adc
idivb
stc
add
test
sub
dec
cli
pushf
loope
fstp
jge
push
add
jmp
popa
jns
jno
jae
sbb
shlb
movsl
cmp
div
inc
or
xchg
stos
ljmp
xor
cli
test
fstps
stos
pop
adc
mov
inc
sahf
outsb
les
cld
push
test
inc
sbb
jns
xchg
inc
testb
loope
sbb
loopne
test
dec
inc
aam
imul
push
xor
adc
mov
push
stos
test
lods
mov
push
outsl
push
mov
sti
stos
push
ljmp
fiaddl
popa
jle
scas
inc
push
lret
xor
imul
xor
jb
and
sbb
cld
mov
iret
cmp
and
dec
cmp
arpl
subl
jb
mov
mov
inc
arpl
outsb
lods
test
dec
or
mov
lcall
stos
out
je
sbb
lods
lods
pop
mov
loopne
mov
scas
outsb
push
push
push
pop
mov
sahf
or
loopne
sarb
or
add
cmp
cltd
test
lcall
and
add
pop
cmp
push
adc
test
mov
insb
sarb
pusha
int
or
pop
pop
daa
test
jbe
add
clc
sub
mov
int
mov
pushf
push
jl
lcall
jbe
mov
pop
mov
shll
scas
xchg
jo
ja
xorl
scas
enter
jno
ja
mov
sbb
push
montmul
cmpsb
xchg
pop
mov
mov
jle
xor
lahf
es
or
jmp
push
xchg
xchg
in
jne
lds
jne
dec
popa
fidivl
ds
and
insl
adc
loop
movsl
icebp
sbb
test
cmp
das
mov
cwtl
adc
shrl
sub
push
push
sub
mov
jge
out
jne
jp
cmp
std
gs
cmpb
push
mov
ljmp
repz
push
arpl
ret
ja
xorl
insb
es
inc
mov
xchg
movsl
push
inc
push
lea
or
fadds
add
fwait
pushf
adc
int3
icebp
jns
sbb
jle
sbb
insb
into
fldt
rcll
lret
stos
sti
cs
bound
stos
mov
jb
adc
push
mov
or
pop
cwtl
std
pop
scas
mov
xchg
and
sbb
scas
sti
cmp
ror
dec
in
cmp
dec
xchg
in
test
mov
mov
lds
jmp
xor
dec
loop
out
xchg
arpl
jg
pop
ja
gs
jne
in
leave
xlat
add
dec
adc
cmp
xor
stos
repz
in
repz
jge
sbb
jg
lret
imul
popa
ret
rcll
jae
push
jle
pop
dec
call
popf
sub
cmp
pop
and
fsubrp
enter
mov
call
cs
rcrb
into
fs
xchg
out
push
loopne
inc
stos
jno
lea
lods
inc
xorl
push
movsb
lret
iret
dec
in
and
shll
in
call
dec
mov
inc
jnp,pn
mov
mulb
out
cmpsl
or
fildll
ret
xor
lds
add
cmp
mov
insl
sahf
and
test
sub
sbb
rorl
mov
pop
or
aam
clc
pop
xchg
je
and
lcall
leave
push
in
ret
xchg
push
mov
dec
fisubl
push
hlt
fidivrs
outsb
jle
lcall
or
pop
outsb
fdivrs
call
mov
stos
fcomp
xor
or
xchg
adc
cwtl
movsb
mov
xor
sti
cmp
sbb
scas
jnp
xchg
stc
pop
out
xor
sti
mulps
clc
bound
xchg
jmp
pop
mov
xchg
cli
mov
cli
movsl
shr
jae
sbb
aam
mov
jg
je
jne
sbb
xlat
mov
aaa
jg
dec
jecxz
out
sbb
fildl
and
lods
inc
push
mov
xchg
cmp
aaa
cld
xor
adc
jg
daa
mov
leave
xor
xchg
add
xchg
xchg
in
stos
clc
mov
inc
adc
xchg
sbb
loop
cltd
cmp
adc
or
fsts
xor
cwtl
inc
adc
and
arpl
fistpll
fbld
cmpsl
divb
push
lods
xor
add
xchg
sub
add
xchg
lcall
mov
cmp
sub
repnz
dec
push
aam
xor
aam
lahf
gs
clc
test
xchg
mov
lret
sub
add
sbb
dec
dec
jno
shl
xchg
sbb
mov
rorl
test
stc
repnz
push
jmp
enter
in
jg
in
adc
xor
mov
and
mov
xchg
out
or
xor
out
push
add
scas
push
dec
in
imul
sub
mov
push
sahf
and
or
fmulp
and
cmp
inc
xor
push
loop
int
push
jae
adc
aam
push
inc
jbe
xchg
push
mov
rolb
cmpsb
idivb
sub
xchg
and
imul
inc
scas
notl
jg
mov
add
call
add
sub
mov
adc
addr16
jle
jno
or
stc
loop
sub
inc
fidivrs
cs
loopne
fcoms
lret
subl
enter
stc
mov
es
add
adc
test
nop
adc
out
adcl
add
in
xchg
mov
add
mov
loopne
xchg
and
lret
xor
sti
call
js
stos
lods
sbb
pandn
fsubr
lret
jb
paddsb
xchg
stc
mov
xchg
mov
or
mov
and
psubusb
mov
xchg
sub
adc
jne
fs
int3
mov
sub
sub
mov
pop
fistl
mov
test
adc
call
sub
or
add
ret
add
fnsave
in
hlt
cmp
pop
jnp
into
and
pop
lret
ret
mov
sbb
mov
sub
into
xchg
sub
pop
xchg
pop
sbbb
fildl
sub
test
cli
popf
mov
std
out
or
jecxz
xlat
adc
mov
cmpsb
or
sbb
push
lret
and
sub
js
ret
testb
ret
xorl
sbb
xorb
dec
rolb
rcr
push
mov
les
push
mov
xchg
mov
mov
mov
rclb
xchg
push
lret
and
xor
lods
jmp
stos
testb
out
mov
inc
inc
xor
pop
inc
jnp
pop
pop
sahf
mov
jns
ss
jbe
adc
test
xor
dec
stos
cmpsb
adcb
inc
inc
fdivr
inc
mov
mov
push
pop
add
jge
test
mov
sbb
dec
pop
adc
mov
jns
pop
and
andb
jb
lcall
pop
xchg
shll
in
pop
xchg
add
mov
jnp
loope
pop
inc
push
mov
call
add
test
inc
inc
sbb
shlb
ret
shlb
mov
adc
addr16
mov
imul
jmp
repnz
aas
mov
xchg
scas
pop
in
xchg
daa
pop
add
xor
cmp
ss
and
inc
int
sbbl
lods
hlt
shlb
dec
mov
add
add
mov
mov
pop
push
pop
or
frstor
inc
jbe
iret
test
xor
inc
inc
push
inc
push
fdivl
push
push
sub
fisubrl
pop
icebp
dec
and
out
push
sub
xchg
lods
jnp
subb
lock
clc
nop
mov
xchg
imul
pop
mov
movsl
fsubs
dec
aaa
add
insb
xlat
jp
adc
inc
adc
lret
mov
and
das
mov
and
cli
or
out
inc
adc
shlb
ficompl
add
imul
jae
push
rolb
push
cltd
ficoml
or
ss
cmp
ror
into
je
pop
imul
ds
cld
loopne
repz
sub
inc
push
test
dec
ja
into
sub
dec
cwtl
pop
adc
out
mov
xchg
cmp
orl
lahf
xor
lret
ss
push
popa
add
stos
cltd
and
flds
xor
xor
xchg
test
and
xor
jp
sub
adc
sbb
pop
outsb
in
stos
scas
inc
shll
aas
inc
imul
cmp
mov
mov
adc
in
ror
cli
push
xor
fistps
mov
imul
sub
sub
cmp
inc
ljmp
out
inc
mov
aad
push
leave
pusha
jne
jle
push
jb
jle
ret
pop
and
lret
fidivrs
mov
dec
cld
bound
das
sbb
jp
pusha
aas
notb
add
dec
cwtl
inc
fmul
xchg
out
inc
pop
jb
les
sub
pop
jae
xchg
cmpsl
lret
add
push
xchg
jb
xor
adc
aas
aaa
leave
test
rcrb
pop
xor
popa
cmpb
mov
hlt
repnz
insl
xlat
ja
in
rep
push
mov
or
inc
mov
and
inc
or
jmp
mov
gs
jne
jnp
dec
and
push
sub
lds
mov
fwait
cmp
pop
xchg
push
shll
imul
jo
pop
or
add
fisubs
jno
shlb
pushf
sahf
push
cmp
icebp
and
or
cmp
sbb
out
lret
xor
into
enter
stc
sub
cmpsl
pop
rolb
push
popa
pop
fsubr
stos
ret
bound
out
and
and
hlt
lods
xchg
push
dec
repz
or
cmp
push
and
push
and
fisubs
dec
out
lea
aad
in
xchg
stos
mov
cld
cmp
insl
pop
imulb
add
mov
jp
fistl
mov
sub
push
pop
pushf
jecxz
sub
ss
dec
int3
cltd
mov
lret
in
inc
fimull
sub
xor
jp
jb
jne
pusha
dec
add
pop
test
pushl
inc
add
mov
fisubl
dec
cmp
mov
sub
adc
inc
data16
jnp
js
add
mov
divl
xchg
pop
pop
lock
jns
sub
mov
ss
xchg
cs
sti
jbe
sub
mov
adc
xchg
mov
je
cld
xchg
daa
and
sbb
sbbl
xchg
sbbl
loope
adc
movsb
cmp
cmp
pop
lods
or
sbb
fnstsw
push
mov
popf
arpl
adc
inc
mul
jp
xor
adc
repnz
adc
pop
adc
mov
xchg
test
scas
push
jmp
xor
lods
js
xorb
jb
data16
shll
call
inc
adc
sub
sbb
scas
cmpl
sub
fcoms
add
cmp
lock
adc
push
xchg
stos
in
repz
sbb
leave
lea
popa
rcrl
fdivrl
sti
jbe
adc
icebp
or
pop
sbbl
gs
jp
jmp
clc
mov
mov
cmp
ljmp
imul
push
outsb
les
movsb
pop
pop
push
aaa
dec
pop
cwtl
bound
es
jl
fadd
push
mov
jge
lods
sahf
jns
shll
cmp
inc
dec
pop
xorl
leave
aam
dec
loope
pop
ret
sbb
andb
mov
flds
jb
movsb
mov
nop
push
fcompl
movsl
stos
mov
jl
cmp
and
or
sbbb
daa
sub
jle
scas
lods
aam
andl
stos
inc
jb
repnz
or
int3
mov
fstl
ja
leave
cmpsb
pop
pop
inc
add
popf
jecxz
inc
xlat
in
std
pop
xor
pop
cmp
into
sar
bound
imul
icebp
test
xor
insl
cmp
xchg
imul
push
aaa
test
and
adc
lea
cmpsl
out
sbb
lods
icebp
out
jge
adc
jge
push
and
and
jns
rolb
dec
daa
xor
pop
push
jle
sahf
popf
stc
ret
fstl
pop
xchg
and
lahf
repnz
sahf
sub
sti
mov
enter
jno,pt
jle
push
and
mov
std
gs
dec
jp
push
in
jl
xor
test
fcomip
sbb
das
pop
outsb
sti
cltd
xor
mov
loope
or
adc
cmp
rorl
ja
pop
dec
xchg
pop
leave
cmc
inc
call
sbb
test
add
jbe
sub
and
jge
xchg
mov
callw
mov
mov
mov
data16
cmp
fs
adc
add
aaa
aaa
loop
mov
icebp
mov
jecxz
insl
int
repnz
and
divl
cli
and
jl
mov
adc
xchg
pop
xchg
lea
adc
push
lods
xchg
mov
pop
xor
adc
in
xchg
push
add
add
jecxz
fdivrs
push
test
inc
sahf
adc
xlat
rcll
sbb
add
add
je
jge
pop
xor
and
das
adc
ljmp
mov
push
mov
call
cmp
lock
add
mov
xor
out
js
andb
pop
popa
insb
stc
test
or
test
dec
push
mov
adcl
loop
cwtl
cli
mov
and
cmpsl
lahf
mov
lret
stos
inc
std
xor
lret
or
pop
pusha
adc
out
shlb
addr16
jnp
fs
orb
arpl
cmpsl
add
ffreep
int
push
jmp
fcoms
iret
mov
cmp
roll
shrb
scas
and
sahf
testb
mov
pop
jbe
aam
inc
jnp
test
dec
xor
fwait
add
adc
mov
call
mov
pop
mov
hlt
popf
sub
cmpsb
mov
idivl
inc
inc
into
test
mov
dec
or
lahf
cmpsl
mov
push
jns
ja
cwtl
pop
adc
stos
in
daa
sbb
daa
outsl
pushf
add
sahf
shl
adc
jb
ja
sub
addr16
lods
sbb
pusha
cmpsb
inc
pop
daa
subb
xor
and
rcrb
movsb
cmp
mov
icebp
jp
cmpsl
cmc
ds
aad
stos
inc
sbbl
push
pop
cmp
xor
and
loopne
out
pop
and
push
imul
pop
and
jge
sbb
mov
in
mov
mov
mov
popa
test
inc
push
rcl
repnz
cmc
mov
sbb
shlb
dec
pop
cmp
or
idivl
jle
popf
push
or
in
pusha
les
testl
xor
or
mov
pushf
dec
leave
pop
push
or
out
dec
jge
repz
in
cmp
mov
jmp
imul
jo
jmp
pop
xchg
dec
lea
je
std
xchg
sbb
cwtl
pop
gs
add
and
jp
add
and
and
add
pop
loopne
aas
inc
outsb
cmp
stos
jbe
or
mov
jge
mov
jns
jnp
xor
ljmp
inc
mov
repnz
xlat
loope
xchg
out
add
mov
andb
mov
pusha
pop
push
test
inc
push
cmp
fsubrs
add
repnz
icebp
mov
in
pop
ret
push
addr16
arpl
mov
das
jbe
stc
js
mov
xchg
fnstsw
lds
mov
popf
addr16
pushf
and
mov
mov
add
push
idiv
out
into
movsl
pop
add
sbb
hlt
enter
mov
push
ljmp
inc
fcmovne
mov
aam
xor
xor
sub
xchg
sbb
inc
cmp
xchg
bound
and
mov
aad
fnsave
dec
je
dec
movsl
lock
cltd
xor
cltd
lock
xlat
out
pop
xor
inc
jecxz
jbe
fnstsw
push
xor
inc
jecxz
lret
mov
xchg
sbb
cmp
sahf
jb
dec
rcrl
pop
movsb
push
test
dec
repz
sahf
fbstp
test
clc
jecxz
mov
lds
mov
or
or
sarl
push
clc
int
dec
jl
loop
lods
push
mov
mov
movsb
aaa
fimull
fwait
push
jge
mov
andl
xchg
cmp
rclb
test
sbb
sbb
mov
mov
setp
pop
inc
cmp
testl
std
into
add
jge
inc
jl
clc
mov
or
sbb
pop
cmp
imul
jo
lret
mov
mov
dec
lods
cmp
push
dec
in
inc
ret
jle
dec
insb
xchg
clc
push
cmc
pop
mov
sbb
daa
fdiv
push
idivl
movsb
jno
fisubl
sbb
ffreep
inc
or
mov
pop
jo
pop
je
push
aad
add
xchg
pop
jae
shll
add
inc
pop
xchg
pop
mov
xchg
pop
jae
cmp
inc
push
or
mov
xchg
push
mov
lods
outsl
push
jmp
push
sub
int3
mov
mov
sti
inc
and
jge
inc
cmpb
jp
addr16
mov
cmp
sahf
sbb
cli
lods
dec
bound
or
push
or
mov
sub
jae
das
adc
popf
inc
scas
int3
and
iret
lret
lahf
pop
mov
push
cmpsl
scas
ds
add
js
mov
pop
adc
push
in
jae
inc
inc
mov
xor
or
ret
mov
fisttpl
dec
shrl
jmp
icebp
jge
fwait
ss
adc
push
sub
pop
sbb
and
ds
outsb
or
xchg
inc
lds
cmpsl
test
xchg
add
int3
ret
out
sbb
lcall
adc
aas
mov
imul
sub
sarl
or
inc
cli
aaa
add
imul
inc
adc
in
sbb
cmp
jbe
or
adc
xchg
inc
xchg
shlb
aad
jle
popa
mov
jo
aad
mov
xor
push
dec
in
rcrb
scas
jnp
shlb
inc
xchg
pop
test
add
outsl
popf
add
mov
out
pop
ss
leave
insl
sub
and
aam
xor
push
mov
jns
ljmp
adc
testl
shl
mov
or
fmul
jg
jnp
jb
repnz
pop
aas
mov
mov
sub
push
stos
clc
sub
mov
mov
les
xchg
push
mov
inc
hlt
jmp
mov
test
adcb
nop
sahf
sub
fs
adc
push
imul
js
dec
pusha
jge
out
mov
inc
jl
mov
out
adc
xlat
dec
cmp
mov
lea
mov
sbb
cmp
es
fwait
xchg
sub
fwait
in
push
ljmp
lock
xor
test
jae
xlat
fwait
sub
int3
fbstp
std
cmp
cmpsl
sbb
out
insl
fldcw
imul
dec
mov
test
adc
repz
cmp
jns
push
mov
cld
inc
sub
cli
push
fiaddl
imul
or
mov
sbb
test
jns
mov
add
jl
xor
sub
fprem1
push
jmp
aas
out
icebp
sbb
mov
add
clc
mov
mov
lret
jl
aam
arpl
in
inc
ficoml
ret
mov
imul
xchg
inc
xlat
aas
je
sbb
out
cmp
inc
fimuls
incb
lods
in
pushf
dec
in
cmp
mov
lods
jl
or
adc
jle
add
push
cltd
bound
cmp
jno
cld
fdiv
or
jb
push
test
andl
pop
mov
scas
push
mov
addr16
mov
or
leave
push
xchg
lea
xchg
shl
sbb
push
inc
sti
xchg
leave
cmpsl
push
push
mov
shrb
sbb
lret
sub
inc
add
jo
xchg
inc
sarl
mov
cltd
xchg
das
fistl
cli
sub
ss
imul
fst
out
inc
mov
lods
ret
inc
scas
aaa
mov
sbb
sbb
fs
mov
sti
pop
jg
leave
test
adc
mov
mov
add
sub
or
into
xor
jns
pop
das
shlb
in
push
add
mov
fwait
sbb
xor
adc
imul
rcr
sbb
xchg
jne
movsl
clc
fisttpl
out
cmp
or
cmp
adc
scas
inc
jmp
stos
jecxz
lret
cld
sbb
push
push
sbb
xchg
mov
mov
or
push
push
int
or
outsb
sbb
dec
or
mov
xchg
dec
jae
jp
lahf
daa
icebp
fistl
aas
push
mov
lea
sarb
pop
or
js
push
pop
repnz
enter
mov
sub
imul
dec
mov
int
mov
jmp
je
jns
xchg
pop
xor
into
shrb
push
mov
sub
cli
aam
pusha
push
loopne
mov
hlt
xor
dec
and
mov
jge
adc
insl
mov
test
fistps
jle
dec
adc
loopne
xchg
mov
jo
es
gs
outsb
mov
loope
adc
xchg
pop
in
xchg
jnp
add
and
jne
in
adc
push
js
cmc
ja
stos
stc
sbb
stc
movl
test
and
jnp
loopne
mov
inc
in
mov
mov
add
aam
xchg
adc
mov
es
sub
outsb
jg
pop
scas
inc
inc
mov
xor
add
add
bts
adc
stc
pop
sahf
mulb
mov
test
jg
insl
push
int
lcall
xlat
je
push
pop
fsts
cld
sbb
sub
push
mov
or
in
pushf
sarb
xchg
add
imul
jno
decl
outsb
loope
xchg
je
push
test
in
jecxz
lahf
push
movsb
in
data16
inc
call
icebp
inc
sbb
mov
arpl
lock
jmp
scas
fistl
jg
addb
cmc
subl
sub
js
popf
test
jb
or
std
dec
shr
xchg
test
mov
or
sub
mov
mov
aaa
ficompl
sti
pop
shll
cmp
out
dec
imul
outsl
fcompl
fs
xchg
sub
lds
dec
sbb
jl
mov
jl
add
lods
cld
cwtl
sub
inc
pusha
mov
dec
fisubl
push
and
test
cs
arpl
lahf
pop
lds
fsubs
nop
daa
icebp
mov
sub
xor
pop
out
aaa
push
divb
adc
psadbw
out
dec
pop
scas
dec
cmp
mov
iret
dec
loop
pop
fxch
sub
xor
mov
lahf
js
test
pop
sub
fsubr
test
fmull
sub
shrb
add
jp
rcll
jnp
jns
pop
and
test
jp
out
testb
dec
sbb
jbe
jl
popf
xor
movsb
xchg
das
jbe
jl
out
mov
cmpsb
jnp
in
and
xor
pop
das
addr16
out
addl
faddp
jnp
daa
lods
cmp
dec
xchg
mov
xchg
fwait
add
mov
cmp
call
dec
dec
lds
pushf
ficomps
add
fisubl
testl
loop
and
pushf
lea
or
add
or
das
mov
and
mov
or
xchg
test
mov
pop
imul
mov
pop
mov
rolb
or
call
cmc
sub
std
sbb
faddp
ffreep
mov
inc
loope
and
shrb
loop
bound
fmulp
shlb
out
pop
jbe
dec
jp
fwait
fwait
lea
cmp
out
and
sub
mov
jnp
mov
mov
mov
dec
rcrl
stos
jl
xor
in
cmc
ss
push
movsb
push
mov
and
sub
xchg
add
mov
adc
loope
mov
fwait
push
cltd
mov
adc
jl
cltd
xor
push
in
addl
inc
arpl
jl
xor
or
cmp
div
adc
add
cmpsl
inc
repz
mov
jecxz,pt
and
jo
cmp
mov
dec
in
add
sub
xor
cmp
or
scas
out
test
cmp
clc
clc
jg
ljmp
mov
push
dec
push
inc
cmpl
mov
xor
mov
or
dec
add
aad
icebp
or
dec
inc
lcall
mov
sbb
jo
and
fbld
fs
push
mov
mov
in
xor
mov
mov
fstpl
call
cmpsb
les
or
push
sub
stos
insl
jle
mov
pop
add
gs
jb
fistl
xchg
inc
mov
inc
rcr
jge
in
lcall
out
inc
sub
mov
scas
ss
dec
sbb
pop
jle
ds
shrl
hlt
xlat
xchg
ja
xchg
scas
push
lahf
inc
add
xor
xchg
mov
or
data16
xchg
mov
pop
or
shll
arpl
idivl
and
mov
or
lcall
push
sbb
lahf
or
inc
jmp
cmc
pop
mov
xor
mov
mov
pop
fcompp
adc
aad
xor
js
cmpsb
sbb
pop
xchg
inc
dec
mov
loop
stos
add
scas
jns
aam
inc
arpl
adc
mov
xchg
pop
scas
loope
xchg
sub
pop
push
cwtl
mov
fistpll
or
mov
out
sbb
aas
cmpsb
xchg
mov
jno
aam
adc
jmp
adc
sbb
mov
push
jb,pn
mov
jbe
mov
mov
fdivl
fwait
sbb
jp
cmp
jns
pop
stos
pop
fidivrs
sub
cmp
in
dec
out
popl
or
sub
out
cmc
leave
sub
push
insl
cwtl
push
dec
cmpsl
mov
mov
push
and
push
fisttpll
sbb
sub
adc
hlt
sub
pop
adc
push
ret
cmpsl
push
insl
icebp
movl
ss
je
mov
and
nop
adc
call
mov
pop
fwait
sub
inc
fcmovb
std
jp
push
pop
xchg
sbb
jbe
cltd
or
mov
cmp
aas
adc
mov
ret
cld
and
call
dec
pop
jae
jge
cmpsl
dec
mov
lahf
cmp
nop
das
rcl
sbb
add
jmp
pop
xor
jmp
data16
add
popf
decb
inc
cmpsl
inc
pop
jge
lea
lea
mov
insl
test
and
mov
adc
imul
imull
mov
sub
test
jecxz
nop
sbb
and
cmp
lods
cmp
mov
fsubl
mov
sbb
cmpsl
rorl
sti
shll
lret
jae
add
out
pusha
addr16
pop
xchg
mov
or
add
rorb
sbb
testb
in
fstps
or
icebp
pop
test
stc
mov
push
in
outsb
mov
jo
push
ss
pop
test
or
sbbl
leave
into
and
jo
sbb
nop
jnp
ret
test
mov
cmpsl
jns
push
push
ljmp
xor
mov
jbe
dec
and
dec
dec
sti
and
sbb
loop
and
mov
fsubs
jecxz
inc
leave
cli
incb
mov
mov
mov
dec
lods
inc
enter
outsl
xchg
lret
fisttpll
lods
ljmp
mov
imul
xor
out
push
hlt
push
sahf
xor
repnz
mov
xchg
and
cltd
push
dec
lret
aaa
fwait
movsb
inc
das
mov
roll
mov
sbb
mov
pusha
adc
xchg
mov
daa
sbb
or
imul
and
xor
push
mov
sub
outsb
std
dec
and
testl
xchg
mov
pop
pushf
ret
cmp
pop
movsl
icebp
xchg
lea
mov
push
rclb
imul
jmp
or
xchg
push
clc
or
outsl
cmpsb
sbb
xlat
mov
xchg
outsl
cmp
enter
pop
inc
dec
xchg
flds
pop
jnp
rcrb
add
or
stos
js
faddl
mov
repz
cwtl
bound
fsubs
ret
jns
cmpsl
xor
out
mov
jnp
call
pop
and
push
scas
shll
fcompl
cmc
jno
pop
bsf
add
sti
cmp
sbb
add
aaa
lret
cld
push
cmc
lahf
out
lcall
js
test
loopne
sub
mov
inc
fisubrl
imul
pusha
sbb
jb
arpl
inc
dec
or
sbb
out
rorb
inc
movsl
out
sbb
xlat
scas
mov
pop
sub
pop
in
mov
pop
inc
and
xor
mov
adc
pop
inc
push
bound
mov
fmulp
das
add
popa
imul
lea
sub
xchg
inc
into
push
outsb
loope
push
jl
dec
jp
add
jb
cmp
popa
testl
shlb
aad
xchg
and
repz
cmp
xchg
cmpsb
cmp
xchg
scas
inc
sub
outsl
push
jne
xchg
dec
shrb
loope
mov
ja
mov
push
xchg
sub
lret
lock
repz
pop
pushf
imul
mull
or
daa
js
mov
jl
out
mov
jnp
ss
cmc
daa
pop
jne
mov
testl
fucomip
lret
bound
push
jp
ljmp
call
push
andl
push
cmp
pop
ficompl
cli
les
int
sti
stos
lds
inc
xchg
sbb
jns
lods
adcl
mov
adc
daa
mov
fiaddl
arpl
dec
lods
jo
mov
jae
and
fildll
push
loop
sti
xchg
fstps
mov
iret
mov
cmp
pop
sbb
push
cmp
mov
popf
cld
xor
add
paddsw
mov
rcrl
lea
mov
ja
pop
test
repnz
mov
jns
or
mov
lock
mov
and
into
jp
das
ljmp
jmp
aam
dec
mov
sbbb
jbe
and
inc
ds
xor
out
jno
mov
call
clc
xchg
pop
xor
sarl
xchg
mov
lods
in
mov
insl
dec
add
aam
and
cmpb
add
or
shlb
in
xor
push
push
inc
push
out
cmp
xchg
adc
in
push
sbb
mov
cmp
push
mov
xchg
jp
lods
mov
shll
testb
and
orb
dec
jge
mov
cmpsb
xlat
outsb
jg
fcmovne
fisttpl
pop
and
out
or
push
in
out
cmp
mov
mov
push
or
add
jbe
and
fwait
mov
fldz
lock
and
daa
mov
adc
lret
lods
inc
pop
push
push
adc
dec
test
add
and
push
cltd
or
adc
test
mov
arpl
xchg
sbbb
insl
loop
sahf
nop
jle
mov
lods
mov
bound
mov
out
gs
sahf
push
ds
pop
mov
shlb
data16
fmuls
jecxz
fsubp
inc
push
dec
inc
inc
negl
mov
shl
inc
and
dec
addb
pushf
outsb
lcall
fdivl
adc
adc
mov
sbb
test
insb
dec
lcall
pop
cmc
dec
dec
push
mov
pop
mov
jb
pushf
sahf
int3
out
ja
sub
subb
adc
or
cmp
das
cmp
cmpb
scas
loope
fistl
dec
mov
inc
lods
cmpsb
sub
scas
xchg
sub
inc
dec
pop
testl
mov
imul
push
adc
out
mov
scas
jns
xchg
pop
lds
out
push
daa
popf
rclb
scas
fldenv
scas
fs
sti
pusha
sub
jo
dec
fistpl
inc
call
sub
mov
into
stos
fidivs
aad
loope
in
in
psadbw
dec
pop
cmove
inc
jbe
pcmpgtd
xchg
sahf
or
xchg
sub
adc
xor
pop
mov
cmp
or
sbb
flds
fisubrl
mov
push
pop
lock
faddl
xlat
fldcw
cmp
jb
ficompl
js
xchg
jo
mov
aas
hlt
mov
ja
adc
mov
jl
sub
xor
test
jecxz
push
jle
test
stos
repz
jno
xchg
mov
xchg
jge
popa
pop
into
call
rclb
pop
mov
xorb
test
cld
xchg
xor
fwait
sub
in
dec
es
xlat
js
cltd
test
jp
mov
inc
les
sub
sub
cmpsb
pop
mov
clc
addr16
sbb
dec
dec
insb
pop
xchg
cltd
mov
add
sub
int
scas
popf
pop
out
push
loope
jp
out
icebp
mov
mov
jecxz
or
lret
lahf
loopne
pop
popf
mov
mov
push
cmovne
sarb
jmp
jb
adc
jnp
push
push
adcl
jl
sbb
adc
or
and
jecxz
daa
inc
mull
sub
sub
jmp
sub
cltd
push
xor
push
mov
cmp
fdivp
ret
sahf
mov
inc
cmp
in
clc
or
into
xor
xor
subb
push
sbb
inc
inc
inc
shrb
mov
jp
lret
push
mov
test
mov
xor
out
inc
adc
add
insl
or
cmp
lods
and
jmp
mov
and
or
cli
cld
xchg
sub
xchg
push
call
in
jo
xchg
jnp
stc
fnstcw
mov
das
cmp
in
or
mov
pop
mov
mov
cmp
outsl
stos
xchg
sub
inc
mov
in
and
dec
mov
mov
in
adc
iret
dec
mov
mov
jbe
push
sub
mov
insl
roll
cwtl
lds
mov
fmuls
and
aam
add
xor
sahf
lods
cld
xor
sti
push
cltd
fnsave
add
mov
scas
push
adc
aas
mov
rolb
xor
mov
call
lret
repnz
aam
cs
lock
enter
push
lds
out
nop
add
clc
push
cltd
xor
mov
ds
xor
out
pushf
xor
dec
sbb
adc
push
or
mov
adcb
in
rcrl
lret
jb
lahf
pop
mov
lds
lahf
popa
or
cmp
insb
sbbb
fimuls
push
push
stos
fistpll
stos
push
cmp
shrb
fisubl
iret
fstpt
adc
inc
fwait
int
pop
adc
xlat
jmp
jae
push
mov
rcl
mov
call
loopne
adc
cmp
jge
cwtl
das
in
aam
aam
dec
xor
hlt
mul
jns
push
enter
addr16
shlb
clc
xchg
and
sub
icebp
je
mov
rorl
insb
adc
inc
rcr
jmp
add
jno
js
ffreep
xor
jg
jg
and
adc
stc
test
add
jmp
repz
add
aas
js
mov
sti
and
iret
and
inc
outsl
push
arpl
mov
xchg
mov
mov
es
jno
jecxz
shll
aaa
popa
pop
ficoms
scas
pop
or
ja
dec
lods
mov
sbb
stos
push
mov
sbbl
jmp
mov
mov
pushf
push
popf
sti
add
and
and
aam
or
xchg
out
xchg
popa
sarl
repnz
pop
test
push
push
out
mov
iret
pop
stc
inc
insl
daa
cld
pushf
push
rcll
fisubrs
cmp
pop
xchg
and
das
stos
or
sub
and
lahf
mov
mov
mov
out
inc
dec
cwtl
jmp
mov
and
mov
sbb
and
in
jle
mov
shrl
xlat
popa
ror
fiaddl
pop
lock
les
imul
sub
imul
cld
mov
sub
xchg
loop
andb
lret
pop
sub
imul
fsubr
fldt
xor
lods
mov
jns
fbld
mov
lock
sbb
push
cmp
pop
add
aam
jns
mov
sbb
adc
fdivs
or
xchg
pop
mov
sub
fsubp
fwait
xor
jbe
js
sub
pusha
test
std
pop
icebp
inc
mov
mov
push
loope
or
jns
jbe
mov
pop
sub
call
xchg
inc
mov
xor
and
cmp
aas
or
mov
pushf
pop
into
lret
and
pop
cwtl
outsb
mov
les
das
add
adc
cld
stos
xorb
mov
sbb
cwtl
into
andb
das
sar
xchg
fadds
addr16
sub
push
sub
mov
pop
mov
xchg
mov
nop
movsl
cmp
inc
or
insl
jne
add
add
xor
cmp
mov
aad
in
push
pop
clc
fnsave
mov
fmulp
jo
inc
mov
lret
xor
jne
add
cs
jg
iret
pop
dec
out
add
mov
inc
ret
jp
fisubl
and
stos
mov
dec
imul
test
mov
cmc
insl
mov
jg
xor
cmp
std
xor
les
dec
fs
push
cltd
std
fsts
outsl
movsl
std
or
or
rclb
push
lret
jae
pop
pop
jmp
out
inc
fsubrs
pushl
jge
cmpsb
add
sti
jo
sub
adc
je
xlat
pop
mov
das
test
inc
mov
lds
pop
repnz
dec
mov
ret
xchg
inc
mov
push
adc
cld
int3
xor
sbb
out
pop
data16
xchg
jle
sub
int
insl
pushf
aaa
mov
je
jle
lds
and
push
mull
sub
sarb
ss
fnstsw
hlt
andb
inc
pop
xchg
jno
sub
shrl
and
xor
lret
std
jmp
xchg
lcall
cmp
data16
dec
leave
jg
data16
pop
inc
call
mov
in
popf
addr16
lea
lods
push
sub
xlat
mov
outsb
jae
lods
mov
xor
sbb
inc
xor
out
cmp
pusha
stos
sbb
rorb
hlt
inc
mov
and
sub
negb
stos
fidivl
lods
ljmp
call
xor
ja
add
dec
aas
adc
cltd
sub
ja
mov
xchg
fisubs
xor
mov
xlat
imulb
pop
ss
mov
lock
dec
mov
mov
outsb
jl
into
fistps
xor
mov
shll
xlat
out
nop
lahf
dec
aam
rorl
push
mov
les
jne
mov
jo
xchg
mov
std
loope
int
inc
mov
loopne
shl
adc
cmp
adcb
loopne
dec
les
jns
clc
mov
pop
xchg
adc
aaa
dec
sbb
cmp
fildl
adcb
sahf
cmp
pop
cltd
jecxz
gs
mov
test
cmc
and
cmp
insb
pop
in
push
rcrb
add
pop
jbe
push
cmp
xchg
mov
dec
or
lock
inc
mov
xchg
inc
add
je
mov
fcmovu
cltd
nop
lock
fwait
stos
insl
dec
clc
mov
bound
xchg
lcall
or
addr16
xchg
dec
rol
xchg
roll
out
push
adc
divl
aam
or
xor
xor
out
ret
es
sarl
mov
loope
insl
sub
cs
adc
dec
sti
stos
js
ret
pop
into
sahf
mov
xchg
daa
pusha
push
cmp
xchg
insb
setle
stos
fcomps
jge
inc
pop
dec
xchg
add
orb
cmp
inc
scas
insb
inc
dec
enter
push
in
out
gs
push
mov
and
lahf
mov
test
roll
add
sbb
cmp
enter
and
mov
sbbb
out
push
inc
cmpsl
shrl
dec
fucomi
shll
sub
int3
jmp
sbb
adc
push
ret
sbb
shrl
pop
lahf
add
or
jo
push
inc
rcrb
xchg
pop
sbb
daa
leave
je
out
sub
adc
jne
mov
frstor
pushl
push
dec
adc
stos
int3
dec
in
stos
stos
arpl
xchg
aad
xchg
daa
sbb
pop
jo
xor
adc
mov
sbb
adc
jno
icebp
fstpl
movsl
sub
dec
fisttps
aam
cmpsl
fwait
data16
adc
xlat
adc
scas
ret
mov
jne
arpl
insb
mov
insl
jmp
popa
jo
push
inc
push
fucomp
es
sub
xorl
addr16
xchg
shrl
fcomps
mov
arpl
jg
loope
mov
jo
imul
push
jno
jecxz
imul
push
mov
push
mov
jecxz
js
inc
loopne
hlt
mov
jp
fstpt
cmp
insb
hlt
js
inc
dec
and
lahf
mov
jle
jle
pushf
pushf
sub
icebp
movsl
pop
pop
cmp
jge
cwtl
movsl
test
ss
jg
push
cmp
and
inc
into
xor
mov
cmpsl
movb
lahf
ret
and
adc
xor
mov
shlb
push
icebp
aam
pop
fldt
add
pop
pop
adc
pop
sbb
dec
or
jno
or
scas
fsubl
xchg
or
push
es
mov
jge
inc
lret
cmc
dec
stc
or
out
jns
push
int
fstp
push
push
pop
jns
fbld
xchg
sub
mov
mov
or
lret
outsb
std
bound
jge
jl
outsl
and
ss
negl
repz
add
mov
popa
mov
jmp
sti
lret
xlat
and
loop
in
pusha
in
push
fmull
lock
mulb
fisubrl
rcr
jb
lret
push
jne
push
imul
add
and
nop
ljmp
inc
aas
cmp
in
xchg
mov
shl
mov
and
inc
cs
iret
or
ret
or
cmp
dec
aad
mov
push
outsb
call
test
sbb
js
mov
mov
sti
int
push
xchg
push
out
inc
and
sbb
mov
into
adc
xor
pop
pop
in
mov
ss
inc
jmp
or
in
enter
movsb
std
mov
decb
xlat
cmp
pop
test
nop
lock
mov
data16
mov
aas
decl
xchg
sti
inc
sarb
xchg
push
hlt
jne
mov
push
les
mov
mov
pop
sub
cmpsl
pop
mov
add
push
popa
ds
decl
cli
xchg
popa
data16
xchg
xchg
adc
and
jne
sbb
inc
push
enter
pop
mov
sub
jno
add
ss
cli
xchg
adc
test
stos
mov
les
repz
pop
pop
add
mov
sbb
sub
mov
ret
pop
sbb
mov
insl
jnp
jmp
adc
movsb
mov
xlat
inc
cmpb
jge
mov
add
insb
sbb
aad
xchg
pop
jno
out
jae
sub
cwtl
sbb
fists
in
sbb
xor
pop
or
jnp
movsb
aas
fisubs
les
cld
shrb
addr16
xchg
mov
out
rcl
dec
clc
mov
jp
test
lods
push
loop
mov
add
sbb
inc
xchg
test
dec
xchg
jmp
js
fucomip
pop
lahf
add
sahf
aaa
loop
jg
push
adc
and
and
jbe
call
sub
ljmp
xchg
push
adc
pop
addb
xor
mov
mov
fucomi
fisubs
push
xor
outsb
sub
mov
push
sbb
dec
mov
insl
arpl
arpl
orb
xchg
ret
int
repnz
mov
inc
add
jg
stos
mov
jnp
jae
inc
pop
jge
jle
dec
pusha
mov
add
inc
cmpsw
gs
repz
loopne
js
lods
inc
sbb
scas
lret
push
jno
push
popf
jb
ja
data16
mov
mov
push
test
xchg
push
add
sub
push
xor
xor
cli
stos
push
adc
push
mov
out
or
xor
test
popa
jg
jno
inc
xchg
ret
fwait
pop
mov
popf
dec
inc
stos
xor
cmpsb
std
sub
push
jne
sub
add
fs
test
adc
xchg
mov
in
cmp
shr
inc
inc
dec
cltd
adcl
xor
repz
push
mov
cwtl
cli
mov
subl
or
sub
repz
sub
roll
dec
dec
push
lds
xor
hlt
in
out
pop
cs
dec
movsb
mov
push
test
loopne
sub
lods
fnsave
pop
mov
rolb
outsb
mov
movsb
jl
inc
pop
inc
sub
nop
pop
push
fwait
xor
mov
mov
scas
inc
mov
in
stc
mov
je
mov
push
mov
pop
pop
xor
jle
shll
fmull
insb
shrl
pop
lret
in
stos
inc
and
test
jg
aam
cmp
mov
js
add
loop
sub
enter
pop
and
inc
pmulhuw
lret
jnp
sbb
xchg
cmpb
insl
jge
push
leave
cmp
sub
add
movsl
cmp
add
push
pop
mov
leave
popa
fisttpl
mov
xchg
mov
lret
push
sbb
test
inc
adc
in
mov
jmp
sbb
xchg
ret
push
jb
fcompl
daa
into
js
cmpsl
test
xchg
sub
sub
dec
ja
aas
jle
sbb
jnp
or
push
xchg
jg
jo
mov
mov
repz
and
movsl
push
jne
add
ficoml
cmp
int
push
fsubrp
outsb
sub
mov
fildll
push
add
stc
adc
fisubs
push
in
lock
repz
and
xor
xchg
push
in
pop
lcall
shlb
mov
jl
and
filds
sahf
adc
and
mov
idivb
pop
rcll
pushf
jne
ljmp
mov
gs
add
mov
inc
push
add
movsl
jno
and
sbbl
stc
incl
cwtl
adc
inc
inc
mov
mov
lods
xchg
mov
sub
out
sub
adc
imul
jae
adc
push
and
jb
loopne
lock
test
xchg
cmp
stos
into
adc
cwtl
xchg
das
mov
jae
inc
scas
imul
or
mov
imul
cmc
jne
jo
imul
ret
or
mov
arpl
shr
mov
mov
mov
js
sub
cwtl
sbb
jmp
or
jg
adc
in
push
scas
adc
xor
jae
jmp
iret
mov
xchg
js
cmp
movsb
movsl
add
mov
mov
push
jg
xchg
pushf
or
pop
cmp
or
sbb
dec
bound
xor
ss
aaa
fwait
pop
push
jo
rolb
mov
sub
or
scas
cmp
hlt
es
cmp
sub
sbbl
loop
das
mov
pop
xchg
stos
lea
repnz
lcall
pusha
lods
shlb
icebp
push
popf
dec
movsb
add
mov
aad
cmp
mov
sub
pop
mov
and
mov
dec
jbe
cmp
sbb
add
insl
add
xor
jmp
push
lods
rclb
mov
dec
cmp
cmp
movq
xchg
dec
pop
pop
ljmp
shlb
std
dec
lods
shr
scas
clc
inc
shl
ja
cmp
push
fdivr
xchg
push
push
push
mov
js
xor
push
adc
sti
mov
ljmp
enter
dec
adc
add
aad
push
lea
out
sbb
shlb
faddl
out
sbb
mov
int3
jl
jns
pop
dec
dec
mov
popf
pushf
xchg
cmp
std
punpckldq
pop
cmc
inc
nop
push
jbe
je
imul
bound
bound
js
mov
or
das
cmp
je
pop
mov
and
jmp
xor
mov
das
push
cltd
jbe
inc
fidivs
jp
adc
push
int
mov
aaa
cmp
jo
orl
adcl
stos
addb
jp
xor
lea
jmp
jmp
leave
jo
out
fs
je
test
in
scas
dec
xor
push
stc
lods
push
xchg
sub
mov
imul
leave
and
aaa
out
cltd
dec
xchg
jp
in
stos
jne
cmpsb
jge
addb
pop
add
lock
xchg
rclb
xor
mov
rcrl
cs
pop
scas
cmp
xchg
cmp
ret
dec
lcall
push
in
jno
mov
sub
jae
lock
mov
aaa
push
call
sbb
jb
lea
cmpl
mov
pop
push
lea
mov
push
sbb
push
loopne
jle
lods
xchg
rep
repz
jbe
mov
inc
inc
fnstenv
sbb
sub
add
push
push
lcall
jmp
lahf
rorl
mov
and
push
test
lea
pop
push
pop
in
add
dec
add
stos
cmp
outsb
vcmppd
lock
mov
dec
add
std
and
inc
inc
adc
xchg
and
jo
mov
int3
icebp
sahf
add
and
mov
pop
mov
sahf
ds
stos
movsl
lds
dec
movsl
sarl
loop
sub
mov
bnd
pop
jg
mov
call
xchg
mov
pushfw
inc
xlat
iret
push
pop
xor
fldt
inc
cld
push
jbe
stos
jne
adc
mov
test
sub
pushf
les
andl
hlt
push
stos
stos
ror
enter
call
or
fnstsw
lret
lock
scas
mov
fbstp
xchg
jae
imul
mov
cs
fidivl
pusha
inc
lcall
cmp
loope
pop
out
ljmp
sahf
or
pop
mov
jae
mov
jb
out
call
testl
inc
icebp
ljmp
sahf
pusha
cmpb
jns
jl
cmp
lcall
mov
cmp
imul
out
hlt
adcl
dec
cltd
aaa
push
lods
push
fs
fwait
and
xchg
fs
cwtl
xor
ret
add
scas
sbb
and
mov
add
test
push
sub
lea
or
sbb
jae
out
xchg
mov
stos
xor
ljmp
stc
add
sti
pop
ret
dec
dec
imul
scas
add
cld
xor
lahf
push
mov
add
sub
or
push
ret
inc
xchg
push
loopne
cmp
mov
mov
sti
dec
outsl
or
testl
imul
out
fdivs
dec
test
or
sub
cmp
mov
mov
jle
stos
xchg
and
or
sbb
xchg
jmp
ss
pop
cmpb
mov
sub
push
popa
popf
inc
fst
imul
out
xorl
jg
icebp
mov
ja
imul
jbe
pop
dec
mov
xlat
cld
and
xor
xor
xor
ja
std
and
mov
sbb
divb
ret
fdivl
xchg
out
ljmp
mov
loope
inc
push
js
sbb
cmp
xor
add
dec
test
mov
mov
push
js
or
test
dec
jecxz
daa
or
mov
jnp
mov
mov
cmc
dec
mov
shl
pop
sub
fdivs
data16
mov
dec
nop
jae
add
test
jae
addr16
iret
push
movsl
adc
fbstp
dec
and
or
mov
lods
mov
add
dec
dec
pminub
or
sahf
adc
jbe
xchg
nop
xlat
dec
sub
lret
cmp
jecxz
shlb
push
int
adc
jno
aad
fsubrp
jo
mov
loopne
push
add
or
cmp
test
xchg
mov
mov
adc
xchg
test
lods
inc
mov
mov
or
adc
inc
shr
test
out
sbb
int
lea
add
adc
dec
repz
mov
int3
fwait
adc
mov
xlat
dec
dec
pop
iret
sbb
cmpsl
lea
push
adc
or
cmp
jmp
and
arpl
dec
xchg
dec
cmp
add
aaa
imul
or
mov
fdivrs
xor
popf
pop
mov
add
mov
lods
and
xchg
loope
ss
arpl
add
ficoms
in
jle
sub
mov
fcoml
jmp
lds
inc
push
mov
test
sub
or
mov
sub
push
aas
mov
push
push
xorl
popa
cmp
testl
cmp
jmp
push
sahf
outsl
fldl2t
jo
cmp
scas
jg
push
mov
inc
add
sbb
cmp
out
loope
lret
enter
sub
dec
in
cli
mov
inc
and
lods
fmul
lret
jl
and
mov
add
cmpsl
test
outsb
adc
pop
clc
fcoms
icebp
pop
adc
cltd
mov
mov
pop
mov
pusha
pop
popa
cmp
outsl
fwait
aas
popf
mov
into
xchg
xchg
cli
insl
or
mov
push
les
push
popf
push
inc
xchg
daa
fmul
jo
push
push
or
fildl
hlt
data16
movsl
andb
dec
test
test
mov
xor
xor
and
imul
imul
orb
mov
iret
or
repz
adc
mov
movsl
iret
adcb
cmp
iret
sar
xchg
xor
mov
cltd
lea
push
aad
insb
jbe
cmp
imul
xor
mov
cmpsl
dec
mov
dec
sub
in
in
dec
cmpsl
pop
cld
lahf
mov
sub
insb
mov
adc
mov
lds
or
popl
pop
addr16
inc
iret
add
sbb
je
push
mov
and
dec
sbb
test
lds
jg
or
adc
mov
mov
cld
lcall
clc
outsb
aas
mov
or
inc
loope
inc
dec
push
inc
mov
mov
mov
in
xor
outsb
loop
jae
ljmp
xchg
sti
dec
scas
scas
out
xorb
jp
ret
jg
pop
lea
mov
out
out
pushf
popf
xor
mov
jno
int
push
push
nop
push
mov
fs
pop
andb
inc
std
xchg
pushf
cmp
bound
lock
sbb
sub
lcall
xchg
dec
xor
pushf
out
push
sahf
mov
test
fdiv
ja
out
push
mov
lret
sbb
das
cwtl
and
jecxz
xor
sti
jp
in
jns
pop
and
pusha
aam
fdiv
popa
ret
out
hlt
cmpsl
inc
jg
test
stc
ss
dec
movsb
shrl
mov
and
pop
ret
push
cmpb
pop
ja
pop
dec
movsb
jp
jmp
mov
addl
and
or
fldenv
mov
mov
jnp
mov
xorb
int
adc
fisubrs
stos
mov
jmp
fdivrl
mov
ret
sbb
movsb
dec
jmp
into
int
cs
cmp
addb
std
mul
xchg
sub
xor
or
xchg
cmp
out
mov
adcl
sbb
jne
jge
push
xor
push
and
mov
mov
sub
outsb
add
jg
dec
dec
xlat
test
sbb
call
mov
test
pop
cmp
mov
jae
add
mov
dec
mov
sub
inc
mov
dec
mov
push
jno
lret
and
dec
push
push
clc
popl
popa
clc
bound
in
push
jg
adc
sbb
jg
dec
shl
mov
mov
jne
icebp
xchg
lea
stos
bound
std
adc
out
cli
lahf
and
rcr
sbb
call
or
popf
inc
je
jmp
fistl
hlt
test
mov
inc
pop
hlt
std
pusha
dec
out
outsl
xchg
outsb
adc
insl
loope
data16
cmp
xor
push
push
js
mov
xchg
push
test
sub
add
rorl
test
shll
cmc
jp
outsb
daa
push
sbb
outsb
and
pusha
mov
in
mov
mov
sbbl
cmp
arpl
rolb
ljmp
fmuls
inc
loopne
xor
pop
dec
push
jbe
jge
cltd
mov
jp
mov
data16
data16
out
cld
rorl
popf
jns
mov
outsl
cmp
inc
inc
sbb
clc
les
pop
pop
lret
ja
jl
cltd
sub
and
jg
outsb
mov
push
inc
idivl
out
sbb
loopne
loop
clc
adc
and
es
mov
clc
or
and
pop
add
shrl
push
cmp
adc
mov
push
rcll
in
adc
dec
pop
popf
push
daa
cmp
das
and
pop
mov
mov
push
xchg
jbe
leave
xor
push
ja
adc
and
add
or
insb
pushf
mov
repnz
lock
or
jp
pop
sbb
or
mov
push
cmp
add
ficoml
lods
leave
movsl
clc
or
jmp
outsb
inc
ret
sub
jbe
lret
dec
mov
jnp
lods
inc
inc
pushf
rclb
sub
cmpsl
sbb
mov
or
je
add
sbb
and
andb
sub
stos
and
lret
adc
iret
sar
loope
loop
sbbb
lret
addr16
xor
enter
dec
jle,pt
nop
cltd
data16
mov
xor
xor
vpaddb
outsb
fisubl
mov
cmc
ja
jne
lock
into
xor
pandn
pusha
inc
fmuls
test
aas
rcrl
dec
in
lret
in
mov
fisubrl
call
or
mov
movsl
dec
mov
icebp
inc
cmc
xor
lret
and
cmpsl
ds
pop
dec
fmull
xchg
xor
dec
outsb
sub
mov
adc
daa
mov
sbb
adc
or
mov
addr16
jl
flds
jp
xchg
jecxz
lcall
xchg
cmp
ror
xor
pop
lods
jns
jo
pop
int3
xchg
pop
cltd
mov
xor
sub
in
cli
jne
ss
inc
mov
push
js
fstpl
cwtl
adc
stc
je
mov
cmc
repnz
xlat
repz
lds
pop
sub
xor
xchg
mov
push
add
sub
inc
adc
cld
aam
cmp
out
mov
jle
add
mov
jns
pushf
test
mov
out
pop
repz
cmc
mov
rolb
and
sub
mov
aaa
pusha
xchg
and
adcl
mov
fstps
mov
adc
out
cmp
sarb
cli
or
mov
pop
loop
stos
push
pop
adc
mov
loope
xchg
scas
test
cmp
scas
add
gs
test
and
jp
mov
inc
fistl
jecxz
xor
push
lods
outsl
mov
xor
data16
jle
test
je
fnsave
lods
in
test
jmp
repz
mov
ret
rorb
pop
lcall
dec
mov
pop
arpl
push
push
push
jmp
pop
shl
cmp
dec
lods
cmp
adc
lods
mov
xor
incl
stc
daa
in
test
pop
ret
adcb
push
jmp
inc
test
lret
sub
rcrl
inc
imul
push
sub
mov
shlb
or
cmp
sbb
add
jns
icebp
lock
lods
sti
stos
aas
ret
fidivl
dec
or
inc
inc
mov
add
mov
addb
adc
aam
inc
sub
lods
pop
jno
js
sbb
stos
mov
dec
loopne
ficomps
arpl
mov
dec
int3
adc
int3
imul
xchg
mov
fnsave
enter
xlat
sbb
dec
pop
je
mov
inc
adc
fwait
add
sbb
pop
sahf
push
movups
icebp
xchg
xor
mov
jmp
aam
push
das
pop
std
ds
jle
dec
test
insl
pop
in
loopne
jge
xchg
mov
mov
push
push
pop
iret
jmp
xchg
shll
flds
cmp
clc
sti
push
sbb
xchg
and
sub
leave
in
xor
fists
jmp
push
cmp
stos
xchg
xor
aaa
add
xchg
pop
xchg
mov
pop
dec
daa
pushf
imul
mov
or
loope
sti
jbe
sub
or
enter
mov
shll
dec
in
mov
mov
sbb
fisubrl
jbe
fdiv
or
push
bnd
dec
mov
jns
dec
jl
ret
adc
or
pop
xor
call
cmp
popa
mov
out
xchg
addl
sub
cmp
and
sub
jae
test
pop
pop
jl
jecxz
test
cmp
jecxz
jmp
or
sbb
loopne
ret
mov
mov
les
ss
in
imul
mov
punpcklwd
rclb
inc
inc
sti
mov
ss
mov
add
and
mov
add
pop
adc
bound
jo
imul
lcall
stc
or
jmp
add
pop
cmp
jge
mov
mov
jo
loopne
mov
ds
xor
jmp
aaa
inc
sarb
outsb
ljmp
mov
lods
imul
nop
mov
cmpsl
dec
ds
stc
in
out
inc
pop
mov
mov
jno
lods
aaa
xchg
sub
sti
addr16
call
scas
pop
mov
pop
mov
jns
cmc
fwait
test
jl
out
imul
or
xor
xor
push
xor
mov
jge
push
scas
out
ss
sbb
mov
imul
pop
push
push
cmpsl
or
je
sub
pop
xchg
ja
popa
sbb
pop
sbb
push
shr
xchg
sbb
mov
pop
cmp
or
pop
jl
sub
cmp
mov
ret
scas
or
mov
aas
adc
add
nop
pop
push
pop
mov
push
leave
and
push
fsubr
pushf
jg
jp
xor
sub
mov
add
add
sub
ret
outsl
adcl
jno
push
in
push
and
or
mov
jle
xchg
xchg
cmp
sbb
xchg
ret
movsb
ja
push
popf
mov
ror
rcrl
cmp
es
cltd
sarl
inc
fiadds
jle
mov
std
cmc
dec
and
arpl
shr
jg
xor
faddl
icebp
dec
jle
pop
hlt
popa
mov
pushl
imul
dec
inc
cwtl
mov
sbb
inc
inc
cmp
cld
subb
adc
ret
shlb
icebp
cmp
mov
dec
fcoms
bound
cs
addl
dec
pop
gs
pusha
sbb
mov
xlat
mov
ljmp
or
add
cmp
fsubl
mov
sbb
jo
mulb
dec
lret
loope
loop
xlat
sub
sbb
cmp
xchg
out
or
fmull
cmp
int3
dec
add
push
push
mov
mov
add
insb
cwtl
push
popf
int
xchg
push
repnz
mov
mov
mov
pop
xchg
sub
aaa
stc
cmpsb
mov
dec
into
jne
xor
mov
cmpsb
addl
and
cltd
xor
popa
lock
lods
pop
mov
je
mov
fmuls
xchg
sub
sub
pop
xor
mull
xchg
sbb
stc
adc
mov
inc
mov
out
cli
jo
int3
cmp
mov
ljmp
lcallw
cmp
in
pusha
pop
mov
outsb
fsubrs
fsts
in
inc
ljmp
fwait
cmpsb
out
add
repz
sbb
mov
cmp
cli
or
popf
in
mov
lock
insb
pop
or
mov
in
jle
dec
push
imul
push
insb
out
int
xor
xchg
pushf
test
pop
int
leave
and
push
movsb
pop
jo
je
out
in
adc
or
jle
leave
jge
dec
sbb
sbb
cltd
dec
aam
mov
cmp
fcompl
cmp
aad
mov
push
xchg
mov
in
dec
pusha
xchg
sbb
ss
pop
lret
mov
xchg
cmp
insl
mov
out
aam
les
jb
and
popa
fcomps
test
pop
xlat
push
sub
stos
in
xchg
fstpl
repnz
jp
in
dec
imul
test
push
sub
js
fisubrs
inc
push
inc
push
pop
popf
inc
xor
stos
mov
mov
jl
jp
fisubl
enter
insl
stos
scas
pop
clc
adc
inc
fbld
jb
sbb
mov
and
lahf
xchg
dec
pop
lods
icebp
mov
xor
lods
int3
test
xor
out
cwtl
xchg
cs
add
out
fcomi
inc
stc
xor
cwtl
cmpl
insb
push
lea
leave
fimull
cli
cmpsl
scas
test
mov
dec
out
cmpsl
cmpsl
rep
jle
jns
sahf
and
loope
xchg
add
lods
sti
ds
xchg
jno
inc
shll
dec
faddl
pop
icebp
aaa
jmp
cmpsl
inc
xlat
mov
cmp
movsb
or
xchg
cmpsl
cli
push
stc
fwait
sbb
inc
inc
int3
leave
mov
cli
xchg
stc
adc
and
or
stos
ds
push
scas
cmp
das
icebp
mov
lds
lcall
push
dec
mov
add
add
adc
divb
imul
jb
push
dec
jb
imul
add
mov
pop
pop
popa
fadds
imul
mov
filds
adc
pusha
notl
in
adc
aaa
mov
int3
arpl
imul
popa
inc
lahf
sbb
es
pop
stos
stos
popf
mov
xchg
pop
aad
mov
cmpsb
test
jns
jge
and
and
inc
sbb
pop
fwait
ss
mov
jg
pusha
push
rorl
or
sub
je
xchg
sub
inc
add
pop
dec
mov
mov
lcall
and
fcoml
scas
cmpb
pop
mov
ss
cwtl
out
bound
les
jmp
xor
add
ss
mov
push
dec
mulb
adc
outsl
inc
xor
sahf
gs
ljmp
stos
jns
add
xor
clc
bound
push
aaa
or
inc
icebp
js
cmp
js
loopne
ss
add
sub
push
cmpsb
pop
into
xor
inc
pop
icebp
aaa
add
dec
jmp
imul
pop
or
pop
ret
negl
inc
dec
sub
mov
in
cmp
lret
mov
test
dec
into
pop
fwait
ljmp
mov
scas
sbb
aaa
adc
imul
xlat
insl
mov
daa
out
rcrb
mov
and
push
mov
stc
sbb
loope
mov
inc
stos
mov
xchg
push
es
test
and
mov
adc
and
cli
icebp
mov
orl
or
jecxz
jmp
rcll
andl
mov
popa
jg
cmp
mov
lods
xorl
pop
jne
pop
adc
cmp
cmpsl
push
jecxz
incl
stos
lea
dec
das
mov
xchg
add
dec
inc
cmp
movsl
in
mov
shlb
or
xor
inc
ds
int3
adc
dec
test
test
lahf
ss
arpl
push
popf
int3
xchg
jp
std
fsubrp
jns,pn
jecxz
sub
pop
cmp
insl
call
add
jmp
pop
scas
push
scas
dec
push
add
inc
lcall
sbb
mov
test
xorl
stos
decl
idivb
shrb
add
cmpl
sbb
jg
xchg
jnp
inc
enter
decb
notb
push
or
xor
mov
inc
cwtl
cmp
push
xor
sbb
outsb
mov
ss
mul
sub
sahf
or
inc
clc
and
outsl
add
mov
mov
sbb
xchg
sub
and
aad
lret
sbb
fcmovbe
insl
repnz
ss
dec
popf
hlt
stc
add
loope
in
pop
push
js
rorl
sub
roll
lahf
ja
cmp
xor
daa
imul
mov
mov
pop
lcall
sub
outsb
pop
dec
fbstp
leave
pop
inc
jle
test
pop
pop
mov
add
frstor
loope
adc
filds
xor
jne
pop
ror
adc
repnz
mov
add
push
movsb
jg
ret
and
std
dec
jge
fldenv
push
mov
sub
repz
loopne
mov
ds
sbb
sbb
cmc
mov
push
ljmp
inc
pop
sets
faddp
dec
lcall
pop
sub
inc
xlat
les
in
or
aad
mov
aad
pop
mov
ret
sub
fdivs
push
imul
and
sbb
inc
stos
mov
cmpsb
jbe
push
test
cmp
mov
mov
orb
lret
movsb
iret
push
scas
lahf
cmpl
xor
push
dec
xchg
adc
inc
rol
cmp
fisubl
popa
or
mov
mov
mov
fs
dec
ja
add
movsb
or
test
push
fnstenv
out
popa
cmp
es
sub
pop
mov
sbb
je
push
cltd
mov
push
ficoms
mov
jae
xchg
cli
pop
inc
jno
sar
popf
daa
sub
mov
ss
mov
subb
sub
scas
pop
push
loope
adc
fistpll
sub
adc
xor
fcomps
shlb
inc
or
xchg
mov
dec
popf
and
in
stos
xchg
icebp
test
daa
mov
xlat
fucomip
jmp
out
xor
xchg
sub
movb
mov
push
mov
and
cld
lret
push
mov
and
ljmp
mov
mov
divl
sahf
cmpsb
imul
loope
or
mov
gs
rorb
lea
cwtl
pushf
push
dec
mov
dec
stos
mov
adc
scas
push
cld
dec
cmpb
jg
movsl
xor
enter
test
lods
mov
adc
loop
jle
loope
aaa
pop
sub
insl
hlt
mov
and
popf
xor
movb
leave
int3
inc
lods
std
out
mov
add
push
mov
mov
shlb
rcll
imul
xlat
cwtl
dec
push
push
dec
sub
imul
lods
test
stos
out
jecxz
xchg
das
xor
sbb
sub
fdecstp
sbb
jge
jp
rcrl
outsl
or
and
cld
push
xchg
mov
les
push
js
das
mov
movsl
fwait
int3
pusha
and
sbb
cmpsb
jae
cmp
or
fnsave
xchg
lea
xor
lods
adcb
mov
or
lods
lds
adc
mov
push
xchg
test
jbe
popf
leave
icebp
inc
inc
aaa
int3
aam
cmp
imul
sub
in
push
orb
cmp
ljmp
es
jno
negl
insb
adcl
xor
and
jns
orl
xchg
pop
jo
sub
outsb
cmp
or
loope
add
loopne
loope
inc
mov
data16
or
inc
inc
bound
jnp
pop
xchg
stos
inc
add
jl
lahf
and
ljmp
imul
out
lahf
repz
in
out
adc
outsb
sub
push
scas
mov
out
dec
popa
mov
mov
ljmp
xchg
lret
push
and
dec
lret
mov
sbb
or
in
scas
in
sub
push
adc
xor
daa
sbb
gs
dec
dec
push
sub
in
dec
iret
faddl
test
mov
je
stos
test
lret
in
mov
jb
es
inc
fs
scas
shll
int3
dec
xchg
roll
xchg
pop
xchg
int3
fstpl
cmpsb
sub
add
mov
sub
lock
mov
pop
lods
les
cmc
push
jae
xchg
sbb
push
ss
aam
add
adc
aas
stos
into
enter
pop
test
dec
mov
and
mov
xchg
test
mov
push
cmp
fnsave
pop
xchg
lahf
and
mov
lcall
adc
rcrl
sub
scas
inc
jl
pop
lahf
cmp
mov
cltd
test
sti
adc
dec
sbb
movmskps
popa
fsubrl
fbld
ds
stos
sbb
and
xchg
or
hlt
insb
jg
fiadds
mov
shrw
popf
pop
or
xchg
out
cli
dec
add
sub
mov
mov
repz
pop
mov
or
push
lcall
data16
mov
rorb
add
cmc
mov
sub
xchg
scas
mov
sarl
jne
xorl
test
and
cli
aam
pop
sbbb
cltd
test
pop
repnz
orb
stos
inc
dec
cwtl
arpl
arpl
cmp
into
push
add
dec
and
and
dec
stos
xchg
call
pop
arpl
call
push
lret
fnsave
xor
fs
rcr
adc
push
leave
xchg
movsb
movsb
inc
out
push
sbb
adc
cwtl
subl
mov
cwtl
add
inc
xor
pop
or
mov
and
push
push
in
or
mov
out
test
cmp
mov
dec
outsb
adc
sbb
into
or
cmp
cmp
pop
xchg
xchg
sub
jle
add
gs
test
jmp
pop
lahf
push
lods
sbb
mov
insb
call
mov
xor
adc
ja
insl
iret
jl
data16
dec
loop
leave
or
jp
add
sub
test
hlt
adc
xchg
mov
mov
sbb
add
iret
mov
push
mov
lret
jg
sbb
fsubr
test
mov
outsl
xchg
rclb
jg
out
ficoms
adc
jne
out
xor
xor
cmc
cmp
imul
stc
dec
ficompl
mov
pop
lock
push
ffreep
daa
adc
pop
mov
int3
and
sbb
push
and
sub
inc
jo
aam
push
xchg
pop
lahf
outsl
cmp
test
push
leave
inc
popf
xor
in
and
mull
inc
pop
pop
push
jne
std
jmp
xor
mov
stos
ss
idivl
inc
fildl
add
pop
test
loope
outsl
push
jbe
adc
mov
mov
pop
jge
mov
push
push
call
xchg
mov
pop
lock
sar
fnsave
cltd
push
neg
sti
push
or
push
cld
pop
stos
and
js
and
cli
push
dec
fists
leave
test
data16
das
mov
lret
hlt
gs
enter
inc
pop
add
sub
das
inc
sub
or
daa
dec
xchg
and
mov
stc
push
push
xor
aaa
sbb
fmul
mov
ret
cld
mulb
xchg
sub
stos
inc
dec
test
daa
inc
enter
rcr
sbb
jle
filds
fcmovu
leave
int3
stc
int3
adc
rcrb
cmpsl
rorb
mov
bound
out
insl
cmp
iret
insb
shl
xchg
inc
or
pop
test
mov
adc
mov
jno
aad
testl
addr16
mov
fwait
or
mov
push
ljmp
jno
sub
int3
cmp
cwtl
adc
or
test
inc
fldl
cmpl
or
xor
pusha
sbb
test
fs
shrd
sbb
mov
sbb
dec
xor
popf
and
and
xor
mov
rcr
jne
movsb
pop
xchg
fcoms
std
cltd
stc
sbb
movsl
adc
dec
pop
adc
inc
or
enter
insb
stos
dec
mov
in
cltd
mov
push
push
mov
and
add
pop
fnstenv
cs
ljmp
mov
pop
sub
mulb
pop
jmp
cmp
or
mov
mov
test
adc
mov
xlat
pop
xchg
pop
lock
or
sarb
dec
xchg
xlat
mov
loopne
xchg
and
inc
std
sub
adc
mov
fbld
sbb
ret
lret
mov
sti
icebp
in
inc
xlat
sbb
sub
movsl
mov
cs
lret
sbb
stos
movsb
inc
adc
add
stos
iret
sbb
push
psllq
in
and
mov
out
xchg
jb
enter
dec
mov
int3
bound
das
xor
stos
cmpsb
push
ja
xchg
ficompl
mov
ret
and
cld
ficoms
incb
sub
in
xchg
mov
test
imul
jae
adc
xchg
dec
sbb
cmp
xor
add
sub
add
ds
cli
repnz
rcrb
repnz
push
in
adc
sub
test
mov
daa
jg
sub
xchg
sub
notl
push
aas
add
xor
cmp
jmp
sbbb
mov
dec
sbb
in
xchg
fmuls
mov
inc
xor
mov
cmp
ja
and
pop
jp
and
mov
add
xchg
stos
dec
sbb
test
xchg
rcll
add
inc
cmp
jbe
and
adcl
daa
negl
add
and
xchg
pop
add
dec
leave
popa
repnz
lcall
push
out
in
cmp
or
pusha
xchg
setle
aam
mov
or
cmp
inc
sarb
cs
test
dec
stos
push
or
cs
mov
xor
out
add
dec
scas
mov
icebp
mov
jmp
adc
arpl
xchg
pop
adc
xchg
rorl
xor
jae
mov
out
add
mov
mov
call
icebp
popa
lods
cli
xchg
xor
call
adc
cmp
lret
and
pop
mov
push
inc
jg
ret
xor
testb
cmp
xchg
mov
cmc
mov
adcl
repnz
test
in
xlat
mov
sar
ret
jns
loopne
jp
fwait
mov
das
decl
pop
mov
sbbl
dec
clc
sbb
jmp
insl
cvttps2pi
repnz
dec
insl
imul
lret
test
lahf
jo
inc
jne
icebp
and
ret
testl
cmc
pop
in
adc
iret
mov
in
inc
mov
jb
aaa
lret
fs
sbb
ss
adc
sub
jmp
jo
sbb
int
test
test
andl
test
inc
fidivrs
mov
cmp
sub
js
or
in
push
sbb
cltd
les
dec
sbb
inc
stc
dec
jns
xchg
lods
fcomps
lock
or
lahf
subl
in
pop
mov
in
scas
shrb
inc
sarb
xchg
aas
push
iret
addr16
enter
in
fdivrl
push
or
ds
fldt
out
inc
fsub
je
mov
ret
push
mov
and
mov
pop
shlb
sub
inc
mov
jle
std
xchg
popa
sub
aam
daa
dec
scas
xlat
rclb
scas
add
fldl2e
mov
xchg
sub
inc
add
shr
jbe
test
int3
lcall
aam
shrb
in
pop
adc
rcrl
add
fidivs
dec
in
inc
and
xor
sbb
bound
insb
ds
jl
xor
addb
add
mov
popa
das
pop
push
or
hlt
sahf
ds
xor
fs
cwtl
lea
sbb
pop
mov
imul
adc
add
jno
js
aad
dec
cmovne
ret
pop
es
xchg
sub
fildll
dec
dec
mov
add
and
fldenv
or
int3
dec
pop
xor
push
outsl
jnp
fadd
cs
cmp
popf
fisubrs
or
sbb
sti
jecxz
lods
in
repnz
or
jecxz
data16
fcoms
lahf
daa
and
adc
clc
jbe
and
dec
lds
lret
iret
push
xor
pusha
lods
movsl
rcr
mov
imul
loopne
add
data16
cmpsl
mov
nop
sub
aad
mov
cmp
xor
and
imul
jl
std
or
xchg
or
test
and
mov
scas
out
fnstenv
add
lahf
inc
and
sbb
insl
shrl
mov
pop
cmp
cmc
pop
mov
or
stos
or
push
sub
sub
sbb
sub
dec
add
cs
cwtl
out
aaa
in
mov
inc
pop
btc
mov
dec
mov
lds
sbb
roll
pusha
clc
dec
pop
ffreep
sbb
jne
sahf
cmpsl
push
out
or
xor
pop
inc
push
sub
mov
inc
cmp
clc
addr16
popf
adc
mov
xor
fs
pop
adc
sub
int3
fidivs
shll
mov
shrb
mov
nop
test
mov
cmc
mov
cmp
movsb
cmp
xchg
adc
repnz
mov
insl
lahf
scas
outsl
xor
mov
cmpsl
xchg
add
rorl
stc
je
dec
dec
mov
and
xor
cmpsl
shl
es
or
mov
add
fwait
sbb
cmp
mov
mov
inc
fidivrl
pop
fs
stc
lea
loope
xchg
adcl
adc
outsb
sub
sbb
lahf
ret
adc
mov
jns
inc
repz
add
mov
pushf
ret
sub
and
push
cmp
mov
inc
fisubl
leave
xchg
out
stos
loope
and
shrl
cltd
xor
sbb
mov
push
xchg
jp
adc
pop
pusha
sub
mov
jmp
arpl
jo
xchg
jle
adc
iret
movl
cmp
cmc
into
out
addr16
cmp
sarb
mov
add
arpl
adc
lods
adcb
mov
lods
test
pusha
pop
repnz
fldpi
dec
mov
pop
popf
lods
mov
andb
addr16
adc
jp
pusha
mov
xor
push
sbbb
cmpsb
and
xor
sub
mov
jno
push
pusha
cwtl
scas
shll
ret
cld
mov
xchg
mov
push
sbb
scas
sub
iret
ffree
jne
in
lret
fnsave
push
jo
inc
sahf
xchg
push
xchg
or
popa
loopne
xchg
popa
push
adc
sti
lock
scas
push
das
mov
pop
mov
sbb
fdivs
dec
pop
mov
mov
sub
scas
jg
sahf
decb
call
in
stc
pop
das
mov
scas
add
andl
jae
jno
es
mov
cltd
xchg
lcall
lcall
jmp
xor
in
out
mov
mov
or
xor
into
xchg
mov
hlt
cli
into
fmul
loop
inc
or
adc
stc
jae
lahf
notb
sahf
push
lea
jecxz
sub
dec
mov
xor
popf
or
jo
sub
sbb
lahf
pusha
mov
stos
sub
gs
scas
sbbl
mov
inc
and
addb
out
dec
aam
dec
pop
repz
hlt
fldenv
adc
dec
dec
mov
push
lea
mov
jmp
js
leave
pusha
cmp
xlat
jno
jns
fsubrs
lock
jle
inc
mov
cmp
loope
push
popf
sbb
popf
shl
mov
mov
lahf
add
sar
decl
daa
push
clc
pop
mov
jno
jcxz
fidivs
sub
dec
icebp
cld
mov
push
mov
sbb
cmp
fdivl
mull
add
xor
sub
imul
or
mov
push
andl
rcrb
adc
jo
push
xchg
dec
es
push
jo
out
ret
popf
mov
clc
xorl
into
mov
sbb
sbb
mov
inc
bnd
push
ljmp
test
cmpsb
or
xor
sbb
or
aam
and
insb
mov
push
insl
cmc
xor
xchg
jne
mov
pop
push
aad
sub
mov
push
jge
data16
jmp
notl
mov
frstor
push
jnp
inc
fbld
stc
test
sub
push
mov
enter
push
push
mov
inc
outsl
roll
pop
stos
dec
insl
xchg
test
outsb
das
jno
mov
insl
in
clc
outsl
xchg
lds
push
jo
cmp
insb
iret
pop
cmpsl
inc
or
mov
jmp
adc
test
mov
in
inc
xor
adc
mov
jmp
out
mov
sahf
lea
xchg
lahf
in
lds
mov
andb
inc
outsb
add
sub
and
or
in
push
xchg
cmp
les
mov
push
mov
inc
pop
nop
pop
add
ljmp
mov
dec
jp
fisubs
inc
pop
repnz
mul
mov
into
pop
shl
out
and
pop
stc
push
mov
je
mov
adc
cmp
push
pop
mov
out
inc
pusha
and
mov
aam
lds
ljmp
daa
in
insl
lds
xor
xchg
dec
dec
popf
cwtl
ds
pop
imul
xchg
jbe
adc
sti
jo
and
daa
or
or
repz
fs
adc
jl
adc
ss
mov
dec
and
out
test
cmp
cmpsb
xchg
in
sbb
mov
sarb
mov
int
scas
and
in
adc
test
test
into
sub
mov
mov
sti
in
mov
jno
shrl
xor
jp
dec
shr
and
js
sub
sarb
in
nop
aaa
mov
mov
mov
jg
andb
lea
add
xlat
lods
repnz
call
pop
pop
testb
aaa
and
cltd
test
sub
scas
mov
inc
pop
popa
xor
xchg
or
adc
push
mov
cmc
mov
sbb
daa
int
mov
and
inc
pop
gs
mov
push
jb
sbb
xchg
jb
or
cmpsl
mov
cmp
adc
cmp
icebp
xchg
pushf
nop
jecxz
jp
movb
outsb
add
ret
loope
mov
in
add
cwtl
loope
mov
fwait
insl
sbb
sbb
sub
push
xlat
js
and
dec
pusha
iret
loope
add
test
sbb
addr16
leave
pop
mov
loopne
pop
and
orb
mov
insl
fwait
loope
adc
cmpsb
inc
jmp
inc
xor
out
push
inc
ja
xorl
push
scas
lods
pop
in
push
ficoms
movsb
xchg
aam
or
xor
xchg
inc
or
pop
dec
out
add
or
dec
testb
outsb
cmpsb
cmp
inc
test
icebp
cmp
jno
or
sbb
pop
pop
xchg
stos
mov
and
mov
dec
ja
push
mov
in
push
lret
xchg
pop
inc
fisttpll
and
fnsave
mov
mov
pop
lods
or
pop
pop
mov
pop
imul
sti
les
xchg
push
adc
xor
add
mov
jmp
jl
sbb
lods
cmpb
in
jecxz
sub
cs
pusha
jp
mov
inc
pushf
add
aas
loop
push
call
xchg
mov
repz
mov
ficoms
xchg
mov
les
push
incb
mov
aas
jb
jb
pushf
jbe
iret
outsb
loopne
jl
or
sbb
lahf
push
test
inc
das
sbb
xchg
aas
sub
mov
xor
pmaxub
jnp
xchg
mov
scas
xchg
shrb
mov
dec
jl
fbstp
push
rol
orb
mov
pop
fdivrs
lcall
xor
xchg
sub
loopne
or
mov
mov
dec
mov
out
xchg
jge
add
sbb
sti
stos
in
mov
inc
cmp
pop
pop
lahf
push
and
xor
inc
inc
inc
in
xchg
add
aaa
pop
loop
and
dec
cmpsb
push
jp
jl
lods
sub
xorb
or
push
arpl
pusha
out
sub
loope
inc
jl
sbb
movsb
test
aam
idivl
mov
int3
into
jns
out
test
sub
dec
mov
add
insb
nop
stos
movsb
mov
pop
in
cvtps2pi
pop
leave
cli
or
outsb
outsl
daa
push
xor
insl
cmp
pop
cmc
scas
pop
or
dec
inc
pop
and
je
pop
xor
pop
mov
xchg
xchg
dec
clc
les
fsts
inc
sbb
sbbb
fwait
hlt
imul
fisttpll
sbb
dec
pop
in
mov
mov
aam
adc
pop
mov
es
stos
dec
lcall
fcoms
push
jne
jb
in
xchg
movsb
sarb
movsb
jmp
stos
fwait
and
int
or
jb
or
pop
jae
sbb
xchg
sub
decb
xlat
pop
push
inc
shl
iret
cmp
pop
stos
jge
dec
ret
dec
cmp
cmp
xor
shrb
or
popa
cli
sahf
bts
int3
test
and
cmpl
and
cli
cmp
mov
xchg
lcall
and
sub
adc
adc
push
repz
jbe
xchg
shrl
pop
imul
int
int
setl
lds
push
ja
jb
pushf
lret
aad
inc
in
fcmovb
movsb
out
cmc
dec
fucom
shlb
divl
jmp
push
jbe
test
xchg
shrl
ret
push
jle
imul
jb
pop
repnz
xor
jecxz
fsubs
xor
test
sti
mov
gs
mov
sbb
pop
adc
inc
xor
xchg
fwait
inc
jbe
jb
fdiv
adc
push
xchg
inc
fisubrl
pushf
mov
mov
ds
pop
jns
mov
fstps
mov
les
pop
cmp
sbb
jg
mov
adc
ret
fcmove
bound
outsl
sarl
pusha
adc
jo
mov
sub
pop
lods
jp
sbb
dec
shlb
rol
dec
cmp
xlat
xlat
cmc
push
mov
pop
mov
sbb
ds
jnp
loope
test
jl
push
sti
outsb
mov
ret
gs
and
sub
pusha
nop
andl
mov
push
pop
fs
xor
push
add
fisubrl
adc
adc
pop
cmc
repz
cmp
stc
insl
lock
push
rorl
in
jl
and
jno
fadd
sbb
pop
dec
jle
into
shrl
pop
leave
dec
enter
inc
push
das
add
ds
dec
sub
mov
sub
fsubr
dec
pop
dec
fistpll
sbb
bound
and
push
or
fsubr
or
test
add
or
lds
add
test
xchg
or
dec
xor
repnz
leave
and
int3
add
mov
mov
out
aam
out
pushf
push
ret
xor
daa
add
xor
pop
inc
xchg
jl
fs
dec
imul
fstps
add
xchg
and
inc
sub
incb
pushf
cli
int
inc
sbb
popa
mov
iret
jb
jmp
stc
into
out
xchg
add
lods
insb
faddl
xchg
mov
or
mov
push
add
notb
adc
test
dec
cmpsb
mov
push
ss
iret
shl
push
enter
sub
test
cli
sbb
jle
ret
cwtl
jp
jmp
or
cmp
test
aam
pop
mov
jge
sarl
es
mov
inc
pop
mov
in
sbb
mov
mov
dec
xchg
xchg
push
stc
mov
arpl
push
out
cmpsl
data16
and
insl
xchg
lock
sbbb
sbb
sbb
or
add
mov
daa
cli
sub
out
sub
sbb
sbb
bound
cltd
adc
repz
dec
stos
cmp
xor
jo
arpl
adc
lcall
jno
jbe
push
sti
sbb
pop
outsb
adc
andl
add
sub
pop
cltd
je
pop
mov
fwait
hlt
hlt
sub
gs
jmp
out
adcb
ret
xchg
push
aad
push
loopne
notb
cmp
inc
loop
shrl
aam
push
sbbl
pop
adc
ljmp
pop
push
divb
fnstsw
sub
in
mov
jge
outsl
jp
jno
adc
jle
dec
mov
lahf
sahf
sub
add
add
mov
jp
or
test
xchg
add
sbb
lret
addr16
jmp
mov
daa
aad
gs
push
ja
pop
mov
das
mov
mov
mov
sahf
fildll
push
jg
fxch
mulb
pop
je
add
or
xchg
ss
pop
fistpll
lret
stc
adc
mov
bound
pop
jbe
cmpl
sub
mov
loope
sub
fwait
inc
xchg
pop
add
push
lea
adc
jg
mov
jb
pop
aam
or
cmp
add
mov
stc
cmp
nop
lea
orb
mov
dec
push
ljmp
out
mov
fnstcw
mov
inc
and
sti
jo
sub
pop
idivb
shlb
out
jne
out
inc
frstor
jmp
les
push
sub
fwait
mov
sub
mov
dec
or
jg
pop
mov
jl
dec
cwtl
cmp
pop
mov
stos
jp
sti
fwait
mov
inc
popf
ret
stos
push
mov
xor
xor
nop
dec
shl
mov
ljmp
xor
es
js
jnp
mov
fstpl
or
bound
jbe
mov
stos
call
aaa
leave
jo
jne
push
arpl
testl
and
inc
adc
stos
sbb
cmpsl
xlat
push
lods
push
jo
je
lahf
cltd
sbb
sub
test
xchg
ret
and
cmpsb
and
insb
sbb
sub
pop
or
mov
cmp
xor
lock
mov
repnz
nop
dec
adc
test
pop
add
lea
and
jg
pop
dec
aad
mov
xor
js
adc
out
notl
test
popa
ja
subl
out
or
scas
cmp
sbb
aaa
xchg
inc
ror
stc
rep
out
mov
out
xchg
daa
dec
pop
xchg
mov
imul
rolb
fnsave
insb
pop
adc
movsb
jle
adc
xchg
jae
mov
xchg
and
add
pop
inc
sub
arpl
push
fsubr
xchg
imul
or
xchg
and
inc
mov
xchg
or
sbb
jbe
sarl
dec
les
into
pop
push
out
mov
repz
lcall
pop
aaa
cmp
addr16
subb
jl
or
leave
sahf
rclb
lods
mov
push
sub
andl
xchg
bound
pop
call
or
adc
repz
pop
dec
dec
add
pusha
cmp
adc
mov
pop
movsl
cmp
shr
adc
push
icebp
fidivs
mov
cli
jno
push
out
dec
xchg
jmp
stc
fs
sub
add
mov
imul
std
fmull
cli
shlb
jo
inc
movsl
mov
or
xor
enter
shl
clc
shl
or
pop
sbb
addr16
jg
ljmp
outsb
js
or
mov
jge
movsl
pop
lods
inc
xchg
shlb
loope
aas
xchg
outsb
adcb
cld
sub
sub
addr16
mov
subb
lcall
push
adc
jbe
jg
cmp
insl
mov
dec
repz
dec
dec
loope
cmp
leave
das
pop
push
inc
out
mov
pop
push
mov
sub
in
fs
in
sub
cmc
mov
jmp
out
inc
and
cmc
fcmovu
xchg
push
ss
daa
mov
xorb
mov
aas
adc
fdivl
sbb
movsl
aas
mov
aaa
stc
pop
add
icebp
xchg
push
mov
fidivrl
jl
cmpsl
sub
icebp
bound
push
mov
nop
sbb
sbb
jae
jne
xchg
stos
imul
add
jl
fldcw
lds
and
mov
das
sahf
xchg
test
rcrl
sub
cs
adc
push
outsb
inc
or
or
add
cmpsb
push
lea
xchg
jne
aam
xor
insl
iret
dec
xor
push
scas
loopne
andl
fidivl
inc
mov
cltd
push
adc
ficomps
dec
addr16
cltd
push
icebp
mov
xor
and
push
xor
xor
test
movsb
mov
jb
outsb
mov
sbb
stc
into
in
xor
mov
mov
mov
add
ficoms
adc
scas
cmp
or
dec
pop
and
inc
pop
pop
rorl
dec
jmp
out
ljmp
iret
sbb
push
mov
add
adc
bound
and
mov
mov
push
push
imul
movsb
mov
mov
add
jne
fmul
xor
lret
imul
add
or
call
fsubrp
xchg
and
xlat
and
iret
and
ja
test
mov
pop
cmpsb
push
xchg
and
sbb
cld
repz
cs
loopne
cmc
les
into
leave
popf
lret
inc
pop
xor
cmp
ret
fstp
scas
xchg
push
mov
into
xorl
and
pop
pop
outsb
sahf
scas
lahf
movsb
jecxz
int3
jns
cli
and
pusha
sbb
inc
cmp
popa
fldt
inc
jecxz
popf
dec
mov
xchg
inc
je
bound
inc
and
sub
push
clc
pop
mov
test
xor
in
fwait
mov
or
or
sub
mov
fdivrs
nop
push
in
push
fdivl
stos
inc
pop
test
cli
pop
and
sub
aaa
and
in
xor
mov
adcb
pop
jnp
aas
jle
cmpsb
addr16
addr16
adc
push
xlat
stos
in
pop
pop
popf
cmp
jnp
sub
cmpsb
mov
push
outsl
loop
pusha
adc
lcall
pop
rcrb
aam
fs
mov
pushf
xchg
cmp
loopne
jge
stos
mov
movsl
lds
push
imulb
jo
dec
xchg
cli
cmp
pop
jl
jnp
insb
inc
mov
popa
out
mov
fildl
jmp
data16
xor
dec
cmp
mov
mov
pop
loope
adc
mov
test
mov
cmp
inc
loope
jmp
call
mov
inc
push
add
insl
mov
enter
cld
push
xchg
mov
nop
shr
sbb
mov
jle
mov
add
lahf
aad
mov
popa
mov
push
inc
dec
add
mov
jle
mov
loop
xor
xchg
test
push
scas
jl
out
mov
and
cs
jnp
lret
inc
pop
in
cltd
test
scas
sti
pop
out
popf
imul
xor
push
loop
or
shlb
pop
push
sahf
outsl
inc
dec
or
sti
jmp
mov
xchg
insb
jl
jno
lcall
adc
and
dec
fs
xchg
mov
addr16
add
test
jno
sub
rcll
mov
or
test
fnstsw
stos
call
xor
xor
mov
jge
xchg
pop
mov
add
add
jg
jge
mov
mov
pop
cmp
push
mov
int
xchg
mov
std
mov
outsb
fwait
xchg
mov
push
lret
in
or
pop
add
out
leave
fsin
cmp
pop
sti
sbb
sub
test
sbb
cmc
sub
daa
dec
mov
sbb
mov
std
mov
lret
mov
fstl
scas
cs
jecxz
pop
insl
sub
pop
push
inc
out
pop
aaa
and
repz
cs
mov
mov
pop
ret
mov
aam
xchg
test
stos
mov
addr16
adc
sub
mov
leave
out
dec
push
pop
inc
and
dec
stc
jae
dec
pop
push
cmp
cmpsl
out
loopne
or
add
cmpsl
and
shll
mov
mov
add
jl
outsb
cli
or
sti
les
inc
jmp
in
pop
push
ds
out
push
cmp
test
mov
xor
adc
jecxz
lods
adc
inc
push
sbb
mov
clc
movsl
adc
jecxz
nop
xchg
sub
in
mov
cmp
sbb
das
call
es
loope
adc
mov
sbbl
insl
bnd
mov
push
sbb
mov
mov
cmc
dec
loop
negb
mov
out
rcll
dec
xchg
pop
push
mov
pop
inc
jae
mov
in
mov
rcl
xor
xchg
xor
daa
inc
out
cmp
xchg
ja
rcl
negl
sub
push
lods
fstpt
call
jno
mov
fldl
nop
push
arpl
stc
daa
sar
inc
outsb
int
dec
int3
pop
fwait
cmp
enter
popf
pop
inc
dec
repz
mov
sbb
dec
push
sub
jae
sahf
pop
pop
rclb
cmp
std
std
or
sub
and
jno
popf
fisttpll
cmp
loopne
sub
inc
movsb
mov
aam
shl
pop
shrb
notl
push
rcr
push
jae
jl
scas
cmpsl
shll
pop
enter
jge
icebp
scas
fmuls
shlb
aaa
pop
dec
xor
push
pop
sahf
stos
aam
and
dec
xchg
ja
and
test
sub
cmpsb
sub
pusha
pop
inc
leave
std
test
mov
sbb
dec
mov
jo
das
sbb
js
mov
sbb
psrad
mov
subl
mov
sbbb
fldenv
pushf
jo
xchg
lods
in
fdivrl
and
sub
lret
mov
fidivrl
lea
je
enter
adc
popa
aaa
fisttpl
mov
push
repz
xlat
sub
fsts
push
dec
mov
cmp
or
ss
and
ds
loop
fiadds
inc
inc
dec
adc
outsb
mov
pop
mov
aad
lahf
aas
or
pusha
lds
mov
stc
sarb
or
pop
pop
loopne
xchg
fucom
jno
rorl
aad
add
idivb
pop
je
dec
add
sub
pop
imul
addr16
cmp
cmc
cmp
cmc
mov
addr16
pop
mov
shrl
inc
and
xchg
xchg
es
pop
popf
cmp
out
aad
stos
outsl
ror
xchg
or
fsubrl
add
sbbb
adc
flds
in
movsb
aaa
ficoms
mov
add
fsubl
nop
jl
add
stc
popa
ds
imul
mov
jp
fsubs
je
int
stc
xchg
lahf
cmp
cld
mov
das
ret
xchg
or
mov
mov
subb
mov
jo
push
mov
dec
fimull
aad
adc
jns
jle
sbbb
mov
inc
out
sub
call
mov
pop
bound
mov
push
ljmp
push
and
adc
push
and
sbb
jmp
leave
jo
fnsave
loopne
fistl
xor
pop
jle
jle
cmp
imul
push
jmp
dec
pop
jo
mov
mov
push
test
ror
stos
pop
arpl
leave
mov
adc
inc
cmp
push
sub
fwait
dec
aaa
leave
bound
arpl
pop
pop
orl
sub
les
lahf
hlt
xchg
cmpxchg
mov
loope
pop
fisttpll
push
insb
and
mov
add
xorl
push
mov
jo
xor
push
jecxz
test
mov
jl
mov
and
jecxz
fidivl
fstp
pop
arpl
std
inc
inc
test
sarb
xor
dec
mov
fucomp
jne
shll
push
pop
and
loope
aam
sbbl
mov
pop
push
or
sub
stc
lea
push
jmp
xor
jo
add
idivl
xor
push
xor
stc
jl
stc
inc
je
inc
add
push
push
pop
inc
imul
pop
scas
xchg
adc
out
pop
icebp
pop
roll
add
ljmp
out
add
jmp
sub
stos
cwtl
dec
mov
ds
rorb
mov
lock
popa
push
or
ja
in
cmc
pushf
push
and
pop
push
ror
aaa
jb
lea
sbbl
mov
push
jmp
pop
scas
rorb
cmp
push
mov
inc
jl
inc
das
rcrl
loop
adcb
test
mov
jae
imul
adc
push
out
xchg
and
mov
xor
inc
addr16
je
subl
cmc
inc
cli
or
mov
mov
cmp
mov
dec
jae
cmp
fiadds
test
mov
cwtl
push
sub
stc
daa
in
and
leave
dec
sbbb
sbb
stc
test
sbb
in
sub
pop
push
adc
movsl
addr16
add
mov
leave
pusha
fdiv
cmp
je
les
divb
mov
imul
and
scas
push
sub
gs
ss
sbb
jge
push
mov
je
cld
jb
loopne
lods
push
cli
push
iret
cmpsb
les
pushf
cmp
or
hlt
or
xchg
and
es
fwait
jbe
ljmp
inc
cmpsb
cmpsb
fbstp
lahf
push
icebp
nop
cld
shrl
iret
sub
ret
dec
sbb
imul
aad
xchg
sub
pop
mov
stos
xchg
cmp
pop
jg
in
pop
pop
repz
cmp
ds
or
pop
mov
add
push
test
jecxz
lahf
icebp
mov
popf
cmp
and
jle
into
push
inc
arpl
adc
insl
or
es
aaa
lods
mov
cmc
std
jnp
sbb
movsb
cmp
pop
xchg
dec
mov
cmp
jp,pn
mov
in
and
das
jle
mov
sbb
dec
pop
jns
shll
cwtl
jle
sub
sub
fsubrs
inc
out
lret
dec
adc
xorl
lcall
sahf
lods
jmp
mov
imul
mov
test
push
pop
or
sarb
mov
sahf
dec
xor
dec
pop
dec
mov
div
out
repnz
cwtl
jno
adc
test
mov
jne
jb
repz
add
dec
ret
dec
jb
mov
inc
lea
mov
shrb
push
mov
mov
out
lea
sar
jle
inc
dec
arpl
push
jns,pn
adc
gs
push
push
xor
shll
xchg
push
push
pop
popf
or
mov
rclb
inc
and
int
out
mov
mov
sbb
xchg
push
fs
jg
mov
cwtl
das
imul
mov
cmpsb
int
pop
scas
sbb
fcmovbe
xchg
aam
adc
mov
jae
jg
rcr
mov
and
xchg
mov
add
xchg
jp
xchg
fidivrs
adc
stc
dec
inc
scas
jg
lods
add
push
xor
xor
loop
sub
sahf
mov
mov
es
dec
notl
xor
lcall
push
fcoms
cmp
lods
mov
push
in
mov
jecxz
sbb
pop
shr
cmp
enter
lea
enter
or
lret
mov
and
shl
jp
jmp
rcrl
xchg
jp
adc
add
scas
cs
loope
lcall
sub
sub
push
movsl
addr16
add
mov
inc
out
push
jae
cmp
mov
push
dec
in
es
jbe
and
popfw
mov
fistpll
out
cmpsl
stc
dec
arpl
and
fwait
xchg
add
xor
outsl
bound
push
jmp
xor
xor
pop
mov
sub
jge
sub
test
cmp
push
lods
outsl
and
stos
shl
xchg
out
add
xor
aas
lcall
lahf
xor
nop
inc
mov
push
pop
jb
into
aaa
ret
xchg
jmp
cmp
out
outsb
insb
add
push
push
scas
cmpsl
add
sub
sbb
xchg
negb
fisttpll
iret
sub
bound
stc
nop
arpl
sahf
push
cltd
nop/reserved
xchg
jmp
push
stc
cmc
xchg
push
push
imul
rol
inc
cs
std
mov
std
cltd
aaa
pusha
out
rcl
in
pusha
loop
lods
pop
and
cli
xor
xor
sahf
pop
ja
jae
ds
das
fsqrt
pushf
push
repnz
popf
inc
cmp
add
mov
pop
stos
jg
and
andb
std
fidivrs
adc
sbb
jl
sbb
sbb
fs
nop
mov
add
push
xchg
jge
rcll
and
mov
xor
add
repz
jmp
push
cs
popf
jbe
jno
xchg
js
cmc
dec
clc
mov
and
mov
mov
ficoms
in
es
push
xchg
je
add
icebp
je
cmp
xlat
mov
ljmp
sbb
cmpsb
lods
and
jle
jle
in
into
aad
or
outsb
add
mov
xchg
cmpl
inc
inc
fnsave
cmpsb
inc
xchg
cwtl
fldt
int
stos
and
dec
push
xchg
cmp
stos
sub
cmc
int3
out
jp
dec
add
loopne
mov
xchg
into
gs
loop
enter
and
in
xor
cmc
add
aam
std
mov
fdivl
nop
call
outsb
fwait
mov
and
sarl
in
and
dec
es
jp
outsb
jb
or
iret
jae
xchg
iret
mov
ds
add
rclb
lods
test
aaa
pop
and
out
cmc
xchg
aaa
mov
cld
sub
sub
push
sbb
adc
or
adc
mov
dec
lea
filds
imul
cld
inc
ljmp
inc
push
repnz
imul
cmp
fs
mov
add
es
fstpl
mov
scas
jns
mov
jl
mov
mov
aad
dec
jo
repnz
mov
xor
les
and
xlat
xchg
int
in
inc
cmp
push
or
lret
in
dec
jecxz
arpl
shr
jge
dec
icebp
xor
add
inc
adc
jmp
out
push
es
out
mov
call
fisttpll
pop
pop
sub
mov
sarl
cmpsb
mov
push
adc
addb
nop
mov
out
daa
or
mov
push
fldenv
and
test
addb
mov
cmpsl
mov
cli
stos
xor
lcall
rorb
sar
xor
pop
ja
test
cmc
in
mov
bound
pop
dec
jo
fidivs
push
loopne
fnstsw
jge
add
adc
adc
notb
fsubrl
nop
sbb
scas
and
outsl
scas
pop
out
dec
and
data16
popa
stos
cmp
in
mov
daa
pop
adc
dec
hlt
push
cmc
in
adc
sahf
mov
scas
int
dec
fiaddl
dec
dec
arpl
jb
or
jl
jg
jmp
sub
gs
push
sbb
mov
pop
and
mov
fists
fidivl
xor
and
and
dec
pop
pusha
inc
ficoml
clc
fidivs
cmpsl
jae
xor
cs
ja
mov
push
add
imulb
jmp
add
push
and
js
lods
cmp
and
fcomi
mov
out
and
imull
dec
sbb
jbe
jno
mov
mov
cmpsb
push
lcall
xor
dec
enter
out
inc
mov
mov
orb
jb
inc
mov
in
jne
sub
push
cwtl
aaa
adc
sbb
inc
mov
call
xor
ljmp
addr16
loopne
jne
fs
das
xchg
mov
fdivrl
push
pushf
jo
jge
lret
out
shl
imul
fsubl
lcall
stos
and
dec
jge
fsubrs
and
xchg
mov
leave
and
cmp
fisttpl
mov
iret
xor
sub
xor
xchg
inc
lods
pusha
mov
mov
popa
cli
cmp
push
pop
mov
aad
inc
ds
dec
js
jae
sub
in
cmp
sub
add
xchg
mov
lcall
xor
sub
sbb
scas
pop
push
push
test
inc
lret
xchg
fsubrs
or
fidivrs
fsubl
and
test
xor
insl
lods
clc
das
mov
pop
das
fisubl
scas
int3
lods
adc
ja
fsub
mov
ret
outsl
jl
lock
pop
insl
imull
test
cmp
adc
mov
jle
inc
mov
cmp
jnp
dec
mov
popf
pop
out
and
inc
fimull
cmpl
cltd
jo
sti
dec
dec
dec
in
push
int
frndint
aaa
sbbl
in
lcall
and
es
push
and
xor
out
mov
hlt
mov
push
movsb
gs
shrb
mov
clc
sahf
fwait
adc
aaa
movsb
adc
and
iret
mov
out
cmp
push
insb
pop
jle
xchg
nop
pushf
xchg
sbb
in
mov
fists
cs
into
mov
dec
pop
sub
sub
push
fimuls
push
or
js
repnz
inc
xor
sub
loop
jns
xor
jle
add
jbe
inc
pusha
fdivs
sarb
aad
jl
sbb
jmp
mov
mov
outsl
adc
pop
out
icebp
xchg
xchg
test
push
repz
nop
fucomip
imul
push
je
mov
sub
mov
push
mov
and
mov
movsl
sub
mov
ret
rcrl
mov
std
push
mov
xchg
and
popf
xor
lea
jnp
jnp
mov
out
sbb
es
xchg
mov
and
xor
pop
mov
aam
cmp
imul
mov
xchg
fs
cmp
dec
cld
scas
adc
push
rolb
xor
movsl
arpl
adc
xlat
or
dec
push
jl
sub
sub
adc
pop
imul
mov
dec
push
jno
cmp
inc
scas
addr16
xchg
xchg
sub
rcrl
gs
test
popf
std
sub
je
sub
ficomps
movaps
mov
fs
lods
js
add
mov
dec
and
ficoml
int
shlb
scas
pop
cwtl
push
inc
dec
leave
pusha
ficomps
pop
sti
dec
outsl
cld
imul
bound
jo
jl
ja
pusha
mov
push
lea
rolb
jl
das
mov
adc
pop
les
mov
sbb
fbld
mov
xlat
insl
stos
xchg
mov
imul
outsb
sub
sbb
aam
or
scas
cli
jne
push
fucomp
jle
int
sub
nop
xsavec
sub
out
xor
and
push
sbb
fwait
sub
sbbb
push
stos
fucom
ret
sti
sbb
xor
mov
mov
mov
fdivrl
lcall
jge
adc
xor
pop
movsl
aaa
mov
jg
xchg
mov
inc
xchg
xchg
adc
cmpsb
icebp
add
lods
mov
mov
jp
cmpsl
ret
cwtl
pushf
inc
gs
push
sbb
dec
test
cmp
fists
lea
cmp
ret
andl
popf
addb
sub
out
xchg
sbb
pop
scas
cli
fwait
cmp
pop
mov
jnp
mov
push
ffree
test
loopne
xorl
in
push
lods
movsb
push
pop
mov
shld
lds
mov
xchg
shll
xchg
sub
pop
cmc
into
push
add
insb
cmp
imul
jo
push
iret
into
mov
add
negb
aas
cmp
or
movsb
inc
repz
xchg
mov
outsb
test
fcomi
dec
test
push
stos
adc
mov
and
jg
push
insb
mov
arpl
push
outsl
push
scas
ret
sbb
pop
into
enter
adc
mov
push
and
nop
xor
add
hlt
in
mov
aam
in
push
mov
pop
fsubrs
add
mov
int
cld
sbb
pushf
mov
in
sub
dec
cmp
aam
jp
test
mov
fcompl
cs
aaa
pop
fmull
scas
mov
pusha
inc
out
push
inc
and
cwtl
hlt
imul
xor
sbb
or
clc
sbb
push
xor
xor
pop
cmp
push
imul
cld
sbb
jbe
xor
jmp
or
lahf
push
sbb
sti
xchg
repnz
shrb
pop
rorb
jle
jae
mov
mov
adc
mov
clc
enter
push
dec
and
push
jg
add
shld
fldcw
nop
mov
std
ja
cli
rcrb
jb
dec
icebp
push
je
pop
pop
sub
xchg
call
add
outsb
loop
ss
pop
shrb
and
mov
jge
push
sub
cmp
mov
mov
mov
pop
mov
pop
sbb
sub
loopne
dec
ffreep
sub
sbb
xor
in
xor
bound
xchg
lock
in
ret
inc
xchg
cld
cs
iret
sub
mov
mov
leave
mov
clc
adcb
lret
repnz
bound
lea
add
ret
loopne
cwtl
cltd
or
int
xchg
jg
mov
xor
xchg
mov
lods
lods
fsubrp
add
cmp
jecxz
and
scas
inc
sbb
push
xlat
mov
xchg
lret
sub
movsb
loopne,pt
inc
push
jae
jo
push
push
call
xor
lea
sub
cli
sbb
push
scas
orb
jne
test
lea
mov
push
lods
add
adc
push
sbb
pop
call
cmp
stos
adc
mov
ja
xchg
dec
cld
push
xor
ret
or
jge
push
sbb
pushf
ljmp
mov
pushf
jmp
pop
push
in
pop
stos
sbb
rcll
cmp
test
fisttps
mov
aad
stos
mov
nop
addr16
jae
movsb
jl
cli
lcall
or
outsl
jo
or
cwtl
xchg
nop
addr16
adc
sub
dec
lret
std
mov
adc
cmp
sbb
dec
jno
mov
pop
xor
cmp
ss
cmp
scas
cmc
mov
das
and
pop
lods
adc
mov
jo
and
outsb
lret
cmp
in
mov
inc
adc
sub
xor
push
test
ja
adcb
inc
mov
arpl
dec
push
xchg
mov
adc
in
aam
imull
inc
xor
js
pop
jb
adc
or
or
roll
ljmp
inc
or
cmpb
aam
add
xor
add
arpl
jb
jae
sahf
lods
xor
in
loopne
jo
push
xchg
pop
push
sub
ds
pop
repz
out
ss
xchg
mov
bound
inc
xchg
push
lock
popa
mov
jno
outsl
imul
push
sbbb
lds
jbe
das
mov
inc
push
fisubl
les
pop
add
mov
rcrb
scas
mov
popa
cmp
pop
push
shrl
fwait
bound
and
sti
inc
shrl
lret
hlt
int3
or
xchg
daa
jae
push
and
movsb
cmp
inc
xchg
add
pop
cmp
fdivrs
jl
int
insb
popf
es
stc
cmpsb
out
ret
leave
sub
test
hlt
inc
cltd
mov
push
and
fisttpll
bound
jne
outsl
sub
das
addr16
decb
popf
lcall
fmuls
inc
je
jg
clc
xchg
mov
call
mov
testb
cmp
dec
repnz
lea
push
rclb
adc
dec
push
and
fwait
pop
loopne
lcall
sbb
lock
in
hlt
cmp
js
je
push
popf
and
xchg
push
rorb
mov
test
aam
int3
mov
out
mov
lock
xchg
aam
pop
and
inc
lcall
xor
idivl
shl
push
pushf
es
sti
sbbl
xchg
adc
inc
stos
jb
jge
popa
or
incl
push
cwtl
adcl
xchg
fwait
adc
jne
inc
gs
mov
ret
or
push
push
ja
pop
mov
add
pushf
or
jecxz
cmp
inc
sti
push
fidivrs
jp
sbb
aaa
rorb
sbb
dec
push
push
stc
push
les
add
jg
test
or
xor
inc
pop
pusha
out
in
nop
xor
mov
cmp
lret
push
int
and
cmpsb
push
sbb
cmp
cld
lods
addr16
das
lret
nop
push
mov
or
mov
xor
test
lds
adc
js
push
std
push
fsubs
pop
jmp
add
loop
mov
xor
in
cmp
cmc
and
rcl
cmc
rcll
mov
push
stc
or
cmp
int
pop
dec
stc
test
jo
insl
sarl
outsb
ret
inc
je
in
scas
cmp
lahf
mov
xor
sbb
push
inc
pop
cmp
cmpsb
mov
movsl
test
int3
clc
jecxz
sbb
subl
cld
mov
and
pop
fsubs
sti
xchg
and
pop
fs
push
ror
inc
insl
ja
xlat
dec
sub
out
or
pop
xor
shl
inc
addr16
stc
inc
add
lds
cwtl
stos
icebp
pop
les
sub
push
paddusb
adc
negb
fdivs
mov
xor
mov
xchg
lcall
or
lock
and
test
and
fidivs
ret
dec
cmp
fstl
repz
imul
out
in
jbe
stos
in
in
mov
popf
inc
out
mov
jecxz
sar
mov
pop
mov
aaa
inc
cmc
mov
push
rsm
mov
pop
orl
xcrypt-ecb
cmpsl
dec
pop
xor
or
xorb
shlb
ja
bound
ja
addl
or
ss
fistpll
lds
jg
jno
push
add
cmp
pushf
push
or
test
leave
cmpsb
pop
inc
leave
mov
jl
test
push
frstor
shrb
shll
notb
or
aam
adc
dec
jo
push
in
or
je
xor
test
in
icebp
enter
xor
iret
cmp
pop
scas
and
pop
sbb
and
inc
push
push
inc
mov
inc
jg
cmp
lcall
and
repnz
sub
imul
ffree
jl
stc
out
loopne
xchg
int
xor
scas
dec
mov
lret
cld
dec
wbinvd
mov
icebp
nop
sbb
cmc
push
lahf
stos
inc
add
loop
and
jo
inc
jmp
stos
sbb
mov
addr16
lret
lret
cmp
mov
fdivrl
adc
stos
insb
jnp
lcall
aas
sub
push
sahf
mov
xlat
jge
scas
pop
adc
lods
test
incl
mov
push
sahf
mov
arpl
xchg
xchg
mov
test
add
and
mov
mov
and
pop
mov
jne
mov
lods
and
or
xchg
inc
test
push
add
push
mov
xchg
push
xchg
cltd
and
xchg
fnstenv
daa
xor
sbb
jae
push
cmp
or
jg
and
xchg
jae
adc
xchg
fnsave
subb
mov
sti
jbe
outsl
pop
hlt
mov
in
jno
repz
push
xchg
push
in
aaa
or
lcall
lea
out
pop
inc
pop
jbe
inc
fdivs
fwait
and
xor
jg
push
sbbl
sbb
lahf
test
dec
jmp
mov
mov
outsl
mov
test
out
out
icebp
out
lock
in
pop
btc
loopne
jl
lcall
mov
inc
mov
jbe
or
sahf
stos
js
jmp
fidivl
mov
mov
in
pusha
pop
sub
cmp
ljmp
fucomip
pop
divb
in
jb
popf
cmp
jle
and
rcll
outsl
adc
out
add
cmc
aaa
push
movsl
inc
push
adc
stc
addr16
ss
fnstcw
xor
xchg
dec
roll
sub
sbb
mov
cmp
mov
shll
outsb
or
sbb
stc
popf
dec
stos
lock
or
mov
mov
cmpsb
or
cmp
mov
add
scas
ss
je
pop
cmp
push
xchg
dec
xchg
jecxz
add
ja
ret
adc
es
fldt
mov
or
in
cltd
loopne
idivb
aam
push
mov
push
rolb
scas
ja
pushf
xor
jne
push
xor
pop
pop
cmp
mov
mul
dec
sub
pop
cmp
dec
mov
and
push
jns
sub
sub
in
in
mov
inc
xlat
cld
push
ret
dec
sbb
sub
adc
inc
push
cmp
popf
ret
ret
in
pop
mov
adc
int3
sub
pop
xor
sub
or
lds
push
mov
rorl
or
or
movsl
xchg
xor
mov
adc
ja
pop
into
xor
push
mov
cmpsb
or
movsb
cltd
mov
aaa
push
sbb
adc
mov
icebp
cmp
xchg
xchg
xchg
and
push
fsubr
pop
lret
test
adc
dec
mov
sbb
mov
sub
popf
stc
or
inc
mov
push
inc
push
pop
and
jle
fsubl
push
jg
imul
lahf
sti
inc
cmpl
push
jg
dec
pop
dec
cmpsl
jb
stos
and
push
clc
xchg
xor
sub
and
inc
inc
pop
jp
lea
fwait
dec
movsl
inc
outsl
aad
mov
aad
mov
xor
and
cwtl
push
std
pop
push
inc
jb
sub
aam
enter
daa
out
cmpsl
dec
orl
adc
std
add
jmp
or
push
mov
mov
lret
cmp
inc
imul
lret
dec
sarl
push
call
repnz
lds
ja
mov
adc
or
cmpsl
ds
sahf
or
sahf
add
fbstp
xchg
xorl
jae
push
mov
push
cli
inc
push
add
es
aas
mov
std
jnp
sbb
je
jl
push
add
and
repnz
and
xor
test
je
cmp
sti
pop
adcb
popf
ljmp
mov
jmp
inc
fisubrl
cwtl
test
shl
icebp
adc
icebp
mov
lods
movsb
addr16
add
xchg
nop
lods
jmp
clc
add
pushf
or
mov
fldenv
shrb
xor
mov
lcall
stc
clc
adc
and
push
fimull
repz
push
mov
adcl
loope
ret
xor
push
jmp
fiaddl
adc
leave
pop
test
negl
out
sbbl
mov
adc
mov
push
out
jno
aaa
cli
add
sbbl
xchg
shlb
hlt
call
andb
sbbb
cmp
and
xlat
add
sarb
cs
aas
pusha
std
dec
aad
push
les
jns
movsl
mov
adc
fistpll
repz
sbb
and
mov
inc
mov
add
push
scas
out
sbb
cwtl
mov
les
popa
pop
mov
or
add
xor
nop
push
popa
in
push
fiadds
test
test
shrb
xor
or
cs
popf
lods
mov
test
cltd
ficoms
call
mov
jb
jp
pop
push
test
fwait
mov
js
or
mov
hlt
rorl
in
mov
ror
inc
jmp
fdivl
lods
cmp
mov
sbb
xchg
jl
and
and
and
sbb
sbb
sbb
adc
push
cltd
and
mov
dec
cmpsb
jge
cmp
pop
jge
int
mov
push
lret
mov
call
dec
cwtl
sbb
cmc
mov
pop
xchg
sub
and
int3
and
sub
cmp
lods
inc
adc
add
jmp
into
or
das
push
jle
les
movsl
repnz
cmp
add
sbb
xor
jbe
fsubs
dec
jns
mov
loopne
sub
pop
pop
cmp
outsb
es
and
cld
pusha
adcl
mov
cmp
lret
pop
mov
sbb
jl
push
or
push
rorb
out
mov
mov
xchg
adc
pop
imul
in
jb
rcr
cmp
xchg
mov
pop
fsubrp
sbb
xor
push
test
xchg
stos
cmp
jl
clc
xor
and
adc
mov
pop
sub
mov
pop
call
push
movsb
rcrl
jns
lods
sbbl
push
inc
lahf
pop
cmc
adc
xchg
test
mov
jge
adc
filds
stos
xchg
xchg
shr
pop
sahf
push
dec
pop
cmp
fdivp
xchg
pop
jns
adc
mov
hlt
addr16
or
adcb
xchg
sub
stos
lock
pop
and
xlat
cmp
cmp
popa
scas
sbb
je
mov
pop
aas
rol
lahf
ss
pushf
adc
mull
test
pop
inc
movsb
ret
xor
pop
in
adc
sbbl
adc
nop
mov
xor
push
push
popf
dec
pop
out
fwait
pop
sbb
pop
bnd
jecxz
add
pop
je
and
lcall
dec
pop
js
pop
lahf
scas
jge
and
pop
ret
outsl
repz
outsb
aam
xor
inc
push
mov
add
filds
cs
iret
fisttpl
mulb
push
rcrb
cmp
xorb
pop
out
lret
cld
pop
cs
std
cltd
push
hlt
and
push
out
in
inc
jl
xor
negb
sbb
in
stos
push
sahf
mov
cmpsl
xchg
push
jmp
dec
repz
test
xchg
fnstsw
or
dec
cmpsl
dec
xchg
decl
mov
jo
mov
fwait
sbb
ret
mov
lods
jmp
add
in
lock
stos
cwtl
xchg
sub
jae
or
adc
or
subl
shrb
sbb
aas
fsts
ljmp
dec
aas
cmpsl
sub
inc
in
xorl
cmp
push
mov
or
adc
push
lock
add
lock
sub
pop
jbe
pop
mov
pop
outsl
xchg
test
bound
xchg
xlat
out
or
dec
push
mov
ret
cs
adc
sub
inc
into
test
ret
js
dec
mov
sub
inc
xchg
sub
insl
push
outsl
repz
mov
fidivrl
or
dec
cmp
mov
jl
cmp
sbb
dec
pop
pop
in
push
push
sbb
mov
dec
fnstenv
cs
jp
xor
insl
add
mov
mov
inc
cli
lds
lods
aaa
cs
enter
dec
out
mov
out
cmp
jmp
jne
test
lds
fistpl
std
push
inc
xor
pop
cmp
xor
xor
test
sub
pop
mov
cmp
das
adc
movsb
pop
xchg
jne
and
xchg
pop
cmp
pop
test
push
aad
dec
pop
xor
dec
pop
vorps
aas
fdivs
add
out
mov
arpl
call
clc
js
in
das
cli
daa
pop
push
mov
pop
insl
std
inc
gs
pop
xor
xchg
sub
lds
jge
adc
inc
xchg
in
jno
jb
sbb
dec
dec
in
shr
xor
mov
xchg
addr16
jmp
fcomps
popl
lods
sbb
add
out
lds
outsb
testb
inc
mov
out
lret
enter
mov
push
lret
bound
add
xchg
mov
jmp
push
jmp
dec
add
jae
xor
jnp
ljmp
ds
out
adc
dec
call
adc
jae
ret
sub
or
in
nop
dec
add
mov
std
test
jno
ss
cmpsb
push
imul
xorl
dec
xor
adc
and
xchg
inc
repnz
dec
fs
and
ss
mov
cmpsb
loope
add
mov
inc
push
in
das
addr16
loope
ret
mov
cld
xchg
bound
clc
mov
sub
push
xor
push
adcl
adc
ja
loopne
dec
and
dec
mov
clc
loope,pt
movsb
mov
add
dec
dec
push
mov
sub
cmp
mov
cmp
xor
xchg
mov
ljmp
xor
push
xchg
add
in
rorl
cld
mov
cmp
pop
xor
jp
cs
cmp
int
push
fs
inc
loope
jnp
mov
mov
inc
fisttpl
insb
xlat
outsb
scas
iret
sbb
lret
sbb
sbb
test
add
push
sti
jbe
lock
sub
scas
in
daa
push
push
xchg
add
ret
call
cmp
sub
jnp
lock
aam
pop
bnd
and
loope
sbb
push
iret
adcb
int3
xor
hlt
lahf
fisttps
push
push
aam
sbb
mov
stc
push
lcall
sbb
jo
mov
jle
mov
gs
inc
cli
bound
jnp
mov
or
push
in
int
cltd
pop
push
mov
int
les
xor
rorb
cli
jmp
mov
popf
inc
mov
jb
xchg
outsl
fnstsw
cltd
outsb
push
mov
in
imul
mov
mov
pop
dec
in
jecxz
ret
shr
push
push
jle
stos
or
and
adc
inc
add
pop
sbb
dec
mov
stos
adc
fdivrl
std
lret
sti
lret
mov
ficompl
js
sbb
lods
daa
sbb
cmp
cmp
fwait
jne
aad
loopne
fsts
inc
inc
inc
jbe
mov
aad
divl
mul
inc
sbb
dec
rorl
out
and
xor
lret
div
add
dec
push
sbb
cmp
inc
push
fistl
xchg
fwait
push
je
data16
pop
push
shrl
pop
sub
sahf
sub
pop
lds
movsl
cs
bound
xchg
pop
xlat
inc
fnstenv
or
je
insb
cmpsl
lcall
daa
fwait
in
mov
xor
popa
sbb
out
jae
or
lods
inc
stc
sub
pop
xchg
sbb
bound
aad
int
push
jbe
pop
repnz
incb
lods
idiv
rcr
mov
movsl
add
call
sbb
push
divb
push
mov
mov
inc
fsubrl
sub
add
fdivl
xchg
or
or
adc
inc
cmp
lods
push
mov
lret
aad
insl
maskmovq
negl
scas
sub
fistps
mov
xchg
sub
subl
mov
fbstp
inc
push
aam
repnz
pushl
xchg
adc
scas
add
popf
and
aaa
popa
or
data16
in
or
xor
jmp
cmp
outsl
push
xlat
jl
ds
repz
and
push
lret
mov
lret
push
add
mov
clgi
sbb
xchg
lahf
les
stos
inc
cmp
ds
push
test
jb
inc
or
mov
jge
pop
inc
push
sahf
sbb
sbb
push
jns
into
inc
mov
mov
inc
loope
insb
ja
scas
push
cmc
dec
jb
lds
shrl
add
mov
insb
dec
in
pop
cmpsl
nop
xchg
insb
mov
adc
xchg
repz
dec
jns
aaa
mov
out
dec
out
xchg
mov
sub
lcall
mov
ja
leave
lahf
shlb
mov
fadds
leave
out
not
pop
or
stc
push
dec
repz
stc
and
adc
test
xor
cmc
cwtl
ret
pop
inc
jmp
std
inc
and
add
es
or
fdivrs
push
pop
stos
mov
les
hlt
mov
cmp
mov
dec
jmp
or
hlt
add
test
movntps
outsb
hlt
cmp
cmpsl
cmc
mov
adc
sub
pop
outsl
jnp
out
in
cmp
in
inc
mov
sub
jmp
add
xchg
fisttpl
stos
ret
cs
mov
lods
mov
gs
pop
mov
hlt
dec
lahf
daa
inc
add
gs
and
inc
popa
lods
ljmp
pushf
xor
repnz
test
scas
push
aas
xorl
cmpsb
pop
sbb
xchg
ficomps
jge
dec
call
lret
mov
pop
xchg
dec
dec
stc
jbe
cltd
xchg
inc
les
fnstenv
adc
aas
or
pop
movsb
jns
testl
inc
adc
mov
dec
sbb
and
pop
les
cmp
mov
inc
ja
and
inc
inc
das
add
stos
jp
je
lret
and
push
jl
ljmpw
dec
ss
lcall
adc
and
sbb
or
scas
cmp
cld
push
ss
xchg
lcall
cmp
xlat
pop
mov
pop
jno
js
out
inc
addr16
dec
clc
xchg
dec
out
loope
jno
fucomi
pop
cltd
in
push
xor
stos
jmp
outsl
inc
lahf
cmp
shrb
inc
and
in
test
popf
dec
loopne,pt
shll
loop
fxch
aam
dec
lock
not
daa
lcall
or
lods
nop
out
repz
or
cmp
sbb
fwait
dec
mov
add
sub
sbb
lea
mov
cmp
out
ss
and
add
lahf
jbe
popa
mov
jnp
mov
cld
sbb
mov
sub
xchg
lcall
ret
adcb
lcall
lret
rep
outsb
push
adc
cli
and
inc
xlat
xor
pop
sbb
das
fcmovne
pusha
pushf
movsb
cmp
push
or
jmp
sahf
jmp
pop
jne
mov
inc
xchg
cmpsb
hlt
jb
ret
fcmove
cmp
or
addl
mov
out
mov
jp
inc
fldt
lret
shl
pop
cwtl
lret
fwait
cmp
and
push
add
and
pop
aam
sti
jae
dec
push
pop
sub
push
mov
inc
and
push
mov
lods
sub
mov
add
fiaddl
inc
je
xor
jb
lea
cmp
push
jae
xchg
mov
loop
fsubrl
add
in
pop
xchg
jne
mov
fsubr
in
popa
and
loope
add
stos
shr
jecxz
pop
jmp
push
cmp
aam
rcrb
push
or
cld
jo
insb
stos
mov
adc
mov
aad
inc
pop
cld
jg
jle
test
shrb
mov
sahf
scas
cmpsl
out
add
adc
push
testb
hlt
movsl
aaa
in
inc
fcoml
pop
je
push
jne
popf
cmp
inc
dec
frstor
std
xchg
push
std
sbb
add
or
cld
xchg
sub
dec
jb
fs
mov
push
sub
arpl
movsl
fs
or
fimuls
test
jbe
ja
movl
ret
pop
loop
pop
push
pop
pushf
pop
dec
add
xchg
dec
cwtl
push
popf
push
jl
in
jno
divl
shll
iret
jb
mov
mov
lret
mov
outsl
pop
cmp
imul
lock
scas
inc
les
lea
aad
cld
mov
repz
mov
sbb
jp
shl
mov
push
orl
aaa
into
xchg
mov
jmp
adc
push
add
lret
movsl
inc
and
mov
sbb
sub
xor
lcall
ljmp
inc
mov
js
jns
mov
mov
aas
xchg
pop
ja
mov
xor
cltd
pop
mov
aas
xchg
jae
mov
mov
add
outsl
loope
rcr
inc
adc
ret
cli
lret
xor
shrb
push
data16
andb
push
sarl
mov
sarb
push
sbb
repnz
sti
lret
lock
sahf
loop
mov
push
cmpsl
enter
psllw
fwait
lods
jmp
pop
sub
les
mov
add
xor
jmp
shrb
mov
mov
pop
cmp
popf
sbb
out
js
xor
inc
dec
pop
jne
hlt
sbb
lahf
pushf
or
hlt
and
fldl
aad
sub
enter
outsb
adc
mov
add
xchg
push
inc
xor
pop
sub
mov
aas
push
jmp
int3
lahf
bound
test
ja
std
js
mov
sahf
or
mov
mov
xchg
sbb
lcall
push
inc
push
mov
or
ljmp
dec
sbbl
out
and
inc
mov
dec
iret
rol
fsubs
les
sub
and
mov
lcall
lret
adc
lret
dec
push
int
pop
jmp
ljmp
stc
inc
cmp
scas
bound
pop
std
xorl
mov
insl
jnp
add
or
mov
mov
add
dec
sub
sub
mov
pop
outsl
inc
xchg
xor
push
stos
jnp
xchg
pop
mov
push
add
jbe
mov
push
fstpl
scas
sbbb
int
jge
pop
or
mov
pop
in
pop
movsl
cmp
fdivr
push
and
rolb
fdivp
mov
js
xchg
add
into
mov
xchg
jle
cmpsb
mov
push
and
neg
pop
sbb
decb
pop
paddd
xchg
and
call
out
andl
outsl
loop
lret
xor
xchg
call
mov
sarl
cld
outsb
cmc
or
xor
shll
test
adc
sbb
icebp
and
sbb
idiv
jne
adc
jge
lcall
popa
loopne
push
add
imul
xchg
sub
pop
lods
inc
in
cltd
pop
out
cmp
insb
adc
stos
gs
jecxz
neg
pop
mov
sbb
out
cmp
adc
jle
pushw
jae
lods
and
sbb
xchg
mov
push
push
mov
incb
mov
jecxz
inc
fucomi
in
sbb
xchg
jno
js
pop
lahf
das
xchg
pop
jle
adcl
xor
inc
lcall
inc
push
pop
xor
pop
and
pop
jnp
pop
jne
cltd
das
and
dec
and
inc
jle
xchg
mov
jecxz
iret
xor
mov
xchg
call
jns
call
or
mov
sbb
insl
ljmp
not
xchg
mov
into
inc
sub
jae
mov
out
pop
outsb
push
shrb
inc
mov
mov
loop
daa
lcall
imul
pop
xor
adc
adc
dec
out
arpl
xchg
mov
iret
pop
shll
mov
push
sub
je
test
stc
dec
mov
and
jmp
std
dec
daa
cld
jge
hlt
inc
adc
xchg
mov
add
adc
outsb
sub
dec
sbb
aas
ret
pop
lcall
push
ljmp
lock
cmpsb
or
xlat
stos
sbb
fldcw
pop
fcoml
and
cltd
mov
pop
repnz
mov
pop
xchg
mov
push
jmp
leave
out
stc
mov
leave
jl
and
jo
aaa
xchg
scas
jno
dec
push
mov
mov
in
lods
lods
mov
mov
inc
roll
jns
push
fnsave
mov
jb
dec
test
xor
xchg
filds
lcall
fisubl
rcrb
std
loope
jecxz
cmp
jge
xor
inc
add
addl
jg
iret
lods
sahf
imul
nop
push
insb
scas
ficomps
faddl
jmp
insb
clc
or
sbb
mov
sbb
mov
fnstcw
jnp
test
stos
repnz
outsb
decb
dec
push
es
je
stc
arpl
outsb
jle
test
cmpsb
lods
lret
cmpsl
ds
fwait
inc
fs
pop
push
fnstenv
inc
js
popa
mov
test
rcr
sub
out
sbb
pop
pop
bnd
mov
lock
dec
dec
rorl
cwtl
je
pop
push
dec
pop
mov
bound
sub
lds
mov
pop
loope
sub
ja
mov
testl
in
fs
cmp
mov
dec
lea
add
imul
lods
or
xor
arpl
inc
dec
clc
fwait
nop
fildll
repnz
sbb
rol
cmpb
and
push
xor
push
lcall
sbb
jne
jmp
or
cmpsl
dec
mov
or
lods
push
or
icebp
mov
jl
enter
mov
idivb
xchg
movsb
and
repz
into
push
jg
mov
test
jg
add
jge
dec
add
fdivrp
xchg
out
cmc
dec
sub
cmc
push
cmp
push
pop
dec
fstps
jne
adc
arpl
mov
out
xchg
xchg
in
sub
add
pop
fwait
fwait
aas
adc
or
loopne
lds
mov
out
aaa
out
jge
or
popa
xor
arpl
xchg
cld
pop
mov
push
lea
std
xchg
popl
xor
cmpsb
mov
jnp
in
ret
fs
xor
jp
dec
xchg
mov
shll
cltd
jo
sbb
fdivr
xchg
cmovae
push
add
add
dec
clc
jp
fcoms
jnp
dec
mov
jno
ljmp
pop
aas
inc
fsubr
loopne
inc
adc
push
decb
inc
inc
and
xor
push
movsb
xchg
fsubs
mov
rcr
jno
or
int3
adc
ss
sbb
inc
stos
inc
je
mov
cmp
dec
jecxz
dec
sub
fwait
xchg
std
in
pop
cmp
bound
jae
mov
sbb
sub
fs
fbld
jnp
push
in
outsl
xor
sub
adc
rolb
fwait
or
fdivs
push
int3
xchg
scas
fs
aaa
jp
cmc
mov
xchg
adc
lret
pop
popf
cwtl
mov
popf
mov
pusha
clc
es
or
sbb
dec
aaa
cwtl
das
push
mov
sub
andb
pop
je
xlat
movsl
lret
outsl
shl
int
out
hlt
mov
and
pop
and
lahf
rdtsc
sti
addb
adc
adcb
adc
mov
push
mov
shlb
inc
cltd
das
sti
dec
and
je
push
out
cmp
sbb
inc
cld
mov
push
and
pop
sti
sbb
insb
sti
mov
test
pop
cld
mov
xchg
pop
insl
add
imul
js
push
jecxz
dec
pop
fisttpll
sbb
inc
mov
jne
xchg
outsb
xorb
mov
push
jg
dec
push
hlt
xchg
ret
xchg
icebp
and
std
cltd
je
dec
pop
mov
ficompl
lcall
xchg
pop
jae
mov
mov
or
xchg
pop
lods
decl
loop
fldt
mov
fcoml
mov
loopne
lcall
mov
lds
popa
addr16
inc
jne
sub
mov
fnstsw
fisubs
push
insl
mov
bound
sar
repnz
jno
jns
push
cmpsl
adc
inc
icebp
mov
jge
sbb
jmp
xchg
ret
popa
aam
mov
xchg
iret
and
ret
sbb
cmpsb
jge
mov
aaa
sub
mov
fmull
inc
and
push
mov
pop
call
andl
iret
das
jne
cmpsb
jp
xchg
pop
notb
jg
xor
mov
jns
int3
in
push
mov
out
inc
jbe
add
in
nop
add
dec
cltd
dec
pusha
jnp
ja
enter
imul
add
inc
cmc
nop
cltd
mov
jae
jmp
mov
andb
negb
outsb
xchg
jno
push
stos
pop
repnz
aaa
testl
lret
push
adc
mov
jne
lret
adc
inc
sbbb
pop
ret
fimull
stc
aaa
adc
imul
mov
loope
hlt
push
outsb
cmp
aaa
imul
xor
imul
mov
and
inc
cld
mov
jbe
icebp
jmp
mov
mov
je
sbb
loop
jo
pop
dec
xor
insl
arpl
aaa
popf
lods
jmp
push
mov
jmp
addr16
insl
add
dec
test
pop
jns
push
and
jno
ljmp
ja
fisttps
xchg
aas
or
cmp
cmpl
dec
or
cli
loopne
out
pop
mov
jmp
xchg
mov
xchg
scas
mov
dec
adc
mov
mov
pop
xor
outsb
out
test
add
xor
sbb
inc
pop
outsl
loop
shrl
jp
dec
bnd
repz
xchg
adc
inc
xor
mov
xchg
out
in
push
scas
ljmp
pop
mov
ds
add
leave
mov
mov
jecxz
jmp
xor
ret
cmp
jae
lock
adc
add
and
adc
lods
jmp
or
loop
cmp
pop
sahf
sub
test
lds
shlb
stc
jns
or
jg
xchg
test
xchg
in
sti
enter
add
mulb
push
outsb
add
sub
pop
cli
fidivl
mov
cli
xchg
das
pop
ret
push
sbb
repz
lds
lahf
sbb
int3
les
imul
int
jns
and
jne
ror
mov
xor
jne
sbb
add
adc
or
clc
stc
mov
std
sub
adc
inc
dec
andb
mov
mov
xchg
rorb
clc
fcomps
cmp
aam
arpl
js
out
jne
mov
outsb
inc
aam
or
jmp
mov
dec
dec
cmp
loop
and
dec
jecxz
leave
mov
and
push
movsl
lcall
mov
inc
aad
jle
cmp
jnp
jo
sub
cld
adc
pop
xchg
dec
mov
dec
loop
jnp
sub
jl
dec
std
add
jbe
inc
xchg
add
fnstcw
into
dec
das
mov
push
fdivl
sarl
jg
pop
shl
mov
mov
rolb
sbb
mov
in
fcoms
push
rorb
movsl
jne
pop
fstpl
mov
sub
and
orb
adc
lea
or
pop
subl
adc
pusha
clc
in
inc
adcb
and
daa
insl
and
jecxz
push
mov
out
dec
out
in
sub
sbb
test
add
add
mov
mov
mov
jnp
ljmp
lret
arpl
xchg
jmp
sbb
cld
jne
inc
cmpsb
or
sbbl
mov
sbbl
stc
aas
mov
sbb
cmc
dec
lods
xor
mov
outsb
mov
test
mov
xchg
or
and
sbb
mov
stos
in
in
lret
or
sarl
in
add
in
popa
xchg
sub
call
adc
sub
mov
je
inc
scas
aad
mov
xchg
movsb
mov
ss
dec
mov
fcoml
jno
dec
dec
pop
mov
clc
jae
pop
adc
lds
xchg
imul
outsl
shlb
add
jl
aad
pop
xlat
or
push
or
push
test
ja
fildll
inc
cmp
test
jmp
cwtl
dec
jmp
add
sbb
or
scas
dec
out
daa
mov
sahf
jae
lcall
dec
aas
push
pusha
sbb
incl
xchg
rclb
mov
aam
mov
stos
xchg
addr16
cmp
jno
add
shll
pop
out
cli
mov
ds
into
inc
lcall
and
or
adcb
jns
clc
mov
out
push
jg
mov
cmp
filds
loope
cmpsl
cmpsl
xor
jb
or
sub
hlt
mov
dec
pop
and
pop
test
inc
cmpsb
test
dec
in
in
mov
nop
insb
add
mov
cli
out
dec
out
add
movsl
xor
in
xlat
fldt
sarb
inc
insl
jle
pop
and
push
xchg
test
or
ret
pushf
into
push
mov
xchg
ljmp
in
fisubl
push
fimuls
iret
arpl
js
mov
cmpsb
popa
imul
int3
jecxz
ljmp
fs
fcmovne
bound
es
pop
xor
fldt
in
data16
sbb
jbe
arpl
test
mov
jge
mov
ret
sub
mov
inc
fcomi
test
shll
xchg
mov
sub
outsl
pushf
fwait
cli
mov
test
mov
nop
dec
mov
jle
xorl
popa
jnp
lret
sbb
cltd
cmpsl
out
hlt
pop
repnz
inc
jns
dec
sub
decl
dec
loopne
push
mov
test
imul
or
jne
adc
outsb
xchg
outsl
add
mov
push
outsl
dec
scas
shl
pushf
sti
xchg
into
sub
mov
inc
sbb
jg
test
push
mov
and
jg
xchg
inc
xchg
sbb
movsl
rcrl
add
and
push
sbb
jbe
sub
fcompl
jp
jbe
fwait
mov
jg
js
fists
mov
roll
call
scas
repz
xchg
dec
adc
dec
sbb
cli
adc
incb
jb
sub
outsl
xlat
imul
pop
xchg
xchg
hlt
sbb
lea
addr16
or
dec
jge
xlat
shll
in
jae
push
dec
shll
mov
mov
cmp
jns
adc
fdivl
mov
adc
cmc
stos
rorl
adc
rolb
cmp
mov
imul
aad
add
pop
aad
and
pop
xor
les
adc
jecxz
popa
xor
add
inc
push
push
data16
pop
fsubs
mov
pop
stc
fucomp
mulb
lret
rorb
mov
xchg
mov
pop
sbb
lea
rol
sbb
dec
add
dec
xchg
xchg
jp
dec
pop
ja
or
inc
xchg
mov
insl
fnstcw
pop
lods
cli
clc
jae
inc
mov
movsb
mov
mov
mov
pop
pop
testb
or
stos
stc
or
lea
xchg
aad
pop
mov
sub
push
testl
xor
ja
outsb
test
pop
sub
jbe
lods
cltd
jecxz
int
xor
mov
add
fiadds
aaa
adc
adc
icebp
cld
les
ds
or
inc
pushf
out
les
cmp
aam
xor
jecxz
mov
cmp
inc
pop
inc
and
and
sub
ljmp
jno
lock
cwtl
out
xor
jne
mov
jmp
rclb
cld
inc
stos
std
mov
mov
mov
adcl
daa
movsl
jl
xchg
lea
push
add
add
cmpsb
out
inc
std
xchg
and
jo
sbb
dec
cs
fsubrs
scas
cmp
paddb
cmp
data16
adc
out
mov
pop
xor
mov
sbb
int3
imul
popf
push
inc
or
sub
das
into
xor
xchg
bound
inc
pop
lret
mov
fsubrs
jbe
mov
inc
xor
cmp
push
push
notb
xor
nop
enter
add
scas
test
mov
pop
mov
testl
push
sub
pop
pop
mov
mov
out
or
jb
add
sub
call
jge
jmp
inc
inc
out
mov
mov
pop
mov
push
loop
ja
sub
aad
ret
dec
jmp
cmp
in
cld
pop
sti
in
ds
xchg
add
lods
xchg
pop
sub
mov
dec
ficompl
sub
adc
rep
add
popf
adc
jp
fidivrl
loope
add
scas
pop
ficoml
push
mov
mov
leave
pop
cmp
daa
mov
pop
sbb
fidivl
pusha
push
fstp
xchg
sub
loope
nop
lahf
data16
dec
ret
ret
rol
push
xchg
cmp
cmp
jb
xor
dec
aad
xchg
lock
push
push
or
mov
mov
ljmp
sub
sub
push
repnz
negb
fadd
hlt
dec
add
mov
pop
mov
xor
fptan
cmp
sub
xchg
sub
and
sub
pushf
out
push
pushl
cs
inc
loopne
jg
add
mov
mov
arpl
sbb
mov
ljmp
sub
or
add
cs
mov
dec
scas
fs
fildll
addr16
jmp
loop
fs
in
sub
repz
mov
mov
pusha
das
dec
loop
mov
sahf
fidivs
cld
lret
leave
pop
mov
stos
and
cmp
add
rolb
fmull
imul
rorl
push
das
xor
shll
divb
push
xor
push
push
std
cmp
mov
xchg
outsl
sti
sbb
jle
in
cmp
repz
xchg
xor
outsl
ljmp
and
pop
ljmp
xor
nop
cmpb
push
mov
stos
or
push
inc
sbb
sbb
or
nop
daa
or
cmp
fstl
or
sahf
cmpsl
or
lock
stc
fldt
push
fimuls
cmpsl
xorb
iret
mov
je
clc
test
push
inc
sub
shlb
dec
dec
cmp
ja
cli
fstpt
xchg
sbb
add
pop
add
and
mov
and
ret
inc
dec
jmp
sar
jl
xchg
push
loop
and
mov
scas
mov
stos
cmpsl
jbe
add
incb
mov
xchg
adc
push
inc
loope
sbb
std
stc
sbb
cld
sbb
ret
and
inc
inc
fwait
push
jno
push
enter
iret
movlps
test
dec
leave
scas
popl
pop
fdivrl
jne
fldcw
adc
mov
pushf
jg
xchg
and
lahf
loopne
outsl
shrb
mov
stos
in
lret
xchg
call
inc
daa
xor
test
lret
sbb
pop
dec
out
loopne
in
adc
loop
clc
xchg
jle
cld
cmpsb
lea
jp
mov
add
dec
lea
cli
out
jmp
cmpl
push
mov
adc
cltd
mov
das
or
sbb
xor
add
cmp
aad
xor
jl
push
pop
cmpsb
test
add
cltd
hlt
jp
sbb
out
xchg
repnz
in
stc
cmp
imul
aam
sbbl
add
jbe
cmpsl
sub
jle
sbb
lods
pop
mov
popf
into
dec
jmp
repz
ja
pop
jmp
sbb
inc
ds
cli
mov
xlat
jno
out
and
popa
fdivrl
mov
sbb
mov
mov
dec
in
mov
iret
inc
and
add
add
repnz
adc
or
push
movsb
js
clc
test
inc
push
and
in
daa
sub
out
push
xchg
cltd
scas
pop
mov
jge
sahf
or
dec
popa
jl
and
fcmovb
ret
mov
out
call
movsl
sbb
push
dec
insl
cmpsb
rcrl
sbb
xchg
cmp
and
insb
into
and
fistpl
or
pop
jge
mov
jnp
popa
lods
or
xchg
jae
sub
push
cmpsl
divps
or
loopne
push
lcall
in
aas
jle
ds
jae
dec
mov
lret
sub
icebp
push
lds
daa
mov
push
out
or
dec
dec
pusha
ds
insl
cmp
add
fnsave
pop
sbb
lea
push
stos
sub
es
enter
test
mov
inc
lods
jp
pop
or
xchg
adcb
dec
sti
add
jne
dec
dec
sbb
jb
dec
popa
mov
les
or
mov
movsb
addr16
mov
sbb
push
stos
loope
and
pop
adc
adc
fisubrl
hlt
scas
jb
pop
sbb
push
mov
stos
imulb
mov
icebp
jecxz
xor
das
jae
inc
mov
cmp
cwtl
jp
dec
pop
lcall
in
push
sub
xchg
aam
push
xchg
mov
sbb
inc
xchg
mov
xchg
icebp
add
aam
test
cmpsl
cmc
adc
je
shr
sbb
ss
aam
pop
and
mov
sbb
mov
dec
xchg
dec
aas
add
jno
shr
pop
leave
sub
sub
inc
repnz
cli
xor
ljmp
divb
rcrl
xor
cmc
sbb
pop
jns
mov
xchg
mov
fsubrs
test
test
les
push
jne
je
push
stos
ss
push
clc
addr16
and
jmp
or
mov
stc
repnz
cmp
xchg
inc
mov
add
scas
sbb
shlb
add
in
idivb
xchg
jecxz
ret
sub
insb
popf
stc
movsb
xor
cmpsl
jae
and
push
mov
xor
cmpl
mov
inc
pop
cmp
bound
adc
sub
mov
mov
int3
xchg
movsb
mov
lret
lret
aam
cli
or
outsb
cmp
in
insb
scas
sbb
imul
mov
sub
sub
xchg
sub
mov
lea
push
jbe
in
jl
mov
sti
dec
call
cmp
call
and
and
pop
ret
insl
rcll
aam
push
in
mov
outsl
leave
and
hlt
cmp
je
pushf
pop
sbb
mov
xor
das
incl
test
mov
int3
push
insl
repnz
lret
in
xchg
popa
adc
xchg
sub
bnd
sub
push
sbb
or
cmp
and
pop
push
aam
mov
dec
pushf
mov
adc
sub
mov
dec
addr16
addr16
xchg
loope
out
aas
add
cmpsb
icebp
subl
ret
ret
fcomps
icebp
test
shll
imul
and
xchg
icebp
mov
ja
or
int
movsl
sub
imul
add
add
fs
pop
hlt
inc
loopne
adc
jl
shrl
pop
lret
jmp
sbb
dec
or
sub
fidivs
ret
xchg
sub
mov
mov
or
cmpsl
popa
adc
call
pop
push
xor
es
icebp
and
leave
push
xor
or
fxch
int3
push
leave
lods
cmp
mov
cmp
subb
cs
inc
add
inc
stc
xor
int
sbb
push
dec
popf
xchg
setno
pop
pop
xor
jb
aaa
jbe
inc
and
push
test
fs
js
adc
add
mov
cld
or
push
push
ja
sar
mov
sbb
imull
push
loopne
lock
jle
hlt
push
jp
lea
in
ss
push
cs
jecxz
inc
xlat
inc
idivl
scas
mov
das
addr16
popl
mov
sahf
aam
loope
push
mov
por
sbb
fsubl
jmp
mov
sub
repnz
mov
lret
insb
mov
es
xorl
ja
dec
xchg
imul
jge
push
cmp
imull
dec
push
jo
out
sub
out
mov
sbb
std
test
push
push
dec
pop
add
mov
popf
jmp
pop
mov
or
rcrl
dec
scas
pusha
push
je
adc
xlat
outsb
or
test
lods
cmc
cmp
lcall
icebp
in
shlb
mov
testl
dec
add
arpl
sti
and
movsl
mov
jno
out
fdivr
test
pop
and
cld
mov
call
mov
mov
rorb
je
push
and
xchg
imul
cmp
pop
addb
pop
dec
fistl
lcall
in
or
jl
xchg
xor
inc
mov
jbe
ds
arpl
outsb
enter
dec
pop
mov
jae
mov
test
adc
test
call
sbb
fistl
push
mov
inc
ficomps
xchg
icebp
xchg
jle
mov
jae
fucomp
int
notb
iret
or
push
or
ja
stc
xchg
lea
test
add
in
in
dec
adc
mov
inc
pop
jge
sbb
loope
mov
inc
jl
jbe
out
das
pop
rclb
scas
fistl
in
dec
add
test
orb
push
and
mov
addr16
cltd
pop
cmp
mov
es
and
add
jle
mov
in
jnp
push
inc
fidivs
and
fucom
or
sbb
sub
add
test
inc
ljmp
xchg
adc
in
xor
daa
jno
and
sub
scas
roll
mov
sub
cmp
xchg
mov
fldcw
pop
mov
out
repz
arpl
cmpsl
mov
add
inc
stos
ss
shrb
mov
ja
popa
subl
mov
lea
rcl
repz
je
and
dec
xor
ljmp
sub
sahf
jb
sub
out
sbb
mov
js
movsb
xchg
movsl
imul
pop
push
jbe
cmc
rolb
dec
and
dec
lret
inc
in
ficompl
mov
pop
idiv
xchg
or
mov
jge
mov
xchg
lods
mov
jbe
mov
pop
or
inc
push
push
lods
ret
push
shll
xchg
dec
popf
sub
lret
pop
xchg
lea
and
pushl
xchg
and
adc
jne
mov
icebp
int
lea
push
stos
inc
ss
pop
insb
mov
stos
cmp
xchg
mov
mov
pop
pop
leave
imul
das
push
adc
sub
push
mov
mov
mov
jl
xchg
push
cli
lret
or
mov
mov
int3
outsb
repnz
cmp
lret
jo
fnsave
xor
pop
les
cmpb
test
int
jge
xchg
fs
ret
and
jl
dec
scas
push
push
clc
mov
subl
cmp
push
mov
push
mov
lock
lea
test
sbb
cmp
test
add
mov
stos
popf
cmp
loop
insl
mov
dec
test
dec
out
mov
mov
jnp
inc
cltd
repnz
aam
fidivs
data16
je
in
test
or
sbb
sub
out
pop
in
in
pop
pop
fwait
dec
test
xor
inc
lret
push
out
xor
aaa
in
cmc
addr16
add
ficoms
mov
inc
lret
sbb
ret
pop
pop
ret
insb
pusha
mov
fdivs
test
pop
or
loope
add
imul
leave
flds
adc
outsl
cmpsb
sbb
jae
movsl
addr16
mov
or
lret
xor
xor
arpl
mov
aaa
pop
lcall
in
repz
nop
pop
shl
mov
int
dec
lret
mov
ljmp
fs
mov
sbb
test
in
xchg
mov
sbb
dec
pop
jl
fstpt
aas
jb
mov
xchg
cmpsl
and
in
and
mov
test
jno
movsl
cmp
rcr
mov
mov
les
and
adc
aad
pop
mov
jecxz
out
xor
jb
fisubrl
jb
adc
cmpsl
sti
pop
addl
inc
xor
sbb
shll
mov
and
cmpsb
pop
mov
test
xchg
push
out
loop
in
dec
xchg
cmc
test
jp
int
imul
mov
fmuls
jge
into
adc
aas
xchg
xor
testl
xlat
inc
enter
popf
cmp
sub
add
push
insl
in
xor
leave
mov
mov
pop
push
stos
add
loopne
lock
adc
mov
xor
fdivs
aas
imul
nop
in
jmp
lret
mov
dec
push
push
lea
hlt
dec
sbb
sbb
rorl
outsl
jnp
lds
shrb
test
repz
out
fbld
andb
popa
xor
call
dec
arpl
pop
xchg
inc
jl
fcompl
add
jge
jne
mov
daa
rcrl
push
mov
icebp
into
mov
xor
out
jnp
fsubrs
cmp
imul
xchg
xchg
test
cmp
pop
xchg
pop
stos
push
lods
push
cs
sub
pop
or
pushf
sti
adc
fcompl
fistl
jbe
inc
xorl
sub
pushf
xor
pop
dec
or
test
xor
shl
adc
push
jae
mov
or
jb
mov
mov
loopne
xchg
outsb
sahf
xchg
pop
aad
push
data16
add
out
or
sub
aam
lret
ret
outsb
mov
pop
sahf
xor
inc
pop
rclb
mov
add
arpl
or
insl
inc
fstpt
subl
xor
jns
movb
out
dec
lea
sub
aad
aad
sbb
int
cmp
sarl
pushf
pop
push
loope
sbb
movsb
cmp
jg
shlb
js
or
pop
scas
imul
shrb
in
out
lcall
fnstcw
in
imul
das
arpl
xchg
pusha
and
cli
inc
cmp
mov
xchg
xlat
jae
pop
mov
or
push
aad
loope
cld
fwait
mov
in
scas
mov
ds
inc
dec
pop
imul
repnz
xchg
pop
jl
mov
inc
inc
dec
out
insb
sbb
outsl
daa
cmp
mov
inc
inc
fildll
aas
push
popf
or
add
mov
adc
mov
jae
repnz
fiadds
outsl
mov
adc
in
testl
inc
lret
mov
sub
lahf
gs
sub
jne
int
jae
xchg
push
sub
cs
into
mov
sbb
adcl
xor
sub
orl
and
icebp
pop
iret
int3
lock
inc
mov
pop
lret
mov
push
cs
out
push
mov
add
scas
ret
rcrb
jo
push
and
leave
hlt
mov
cmpsb
inc
or
ja
xchg
add
jge
int3
xor
sahf
or
xchg
loopne
sbb
mov
xchg
ja
jl
add
pop
sti
or
xor
xchg
stos
test
test
pop
xor
pop
adc
negl
pop
push
out
jae
jge
sbb
in
and
fs
jb
dec
es
or
pop
loopne
cmpsl
cmp
jge
rclb
add
mov
xor
mov
shlb
int
les
cmc
cmc
pop
shrl
pop
sub
out
mov
mov
lds
jecxz
push
enter
jnp
nop
push
aas
das
add
movsb
jns
mov
or
out
xlat
stos
aad
repz
or
idivl
pop
xchg
add
fcompl
xor
xor
movsb
push
fwait
jns
shlb
push
push
cmp
cmpsl
fsubrs
jo
or
mov
xchg
sub
add
popa
adcl
int3
mov
or
cmp
or
mov
fwait
dec
pusha
xchg
add
lds
sub
ds
ss
outsb
cmp
xchg
ja
jp
pop
lret
and
cwtl
push
cmp
testb
jbe
fistl
and
fdivr
xchg
mov
leave
das
negb
mov
add
out
jne
mov
mov
mov
dec
sub
imul
push
or
rcrb
sub
insl
popf
sub
cli
cmp
imul
sbb
into
outsl
lods
and
add
xchg
add
xchg
data16
sbb
incl
dec
dec
and
out
inc
daa
sub
mov
xchg
rolb
add
test
daa
stos
gs
lcall
fistl
xchg
in
les
gs
ljmp
jmp
pop
and
push
push
lcall
sahf
scas
sub
sar
dec
mov
mov
pop
xor
ja
push
lcall
test
pop
in
adc
fimull
scas
and
lahf
cld
or
orb
and
hlt
lcall
fstp
cmpsb
std
push
mov
fnsave
mov
jnp
dec
pop
cmpb
mov
or
push
movsl
imul
jo
adc
and
lds
and
dec
in
sub
loope
testb
adc
add
push
popf
push
mov
int
xchg
sbb
rorl
movsl
shll
lods
shll
loopne
cmp
daa
inc
xor
xor
and
cmp
lret
pop
jge
xchg
inc
or
xchg
fimull
pop
addb
dec
roll
jle
aas
les
xor
dec
lahf
fwait
pop
push
or
sbb
jae
test
cs
cmpsl
sbb
jbe
xchg
sub
push
aaa
push
fistl
icebp
adc
add
sub
and
int3
push
stos
xchg
leave
in
inc
test
mov
test
nop
and
out
sbb
mov
jns
rol
jmp
imul
lea
jno
xchg
in
adc
shrb
stos
push
inc
rcll
mov
adc
jb
ja
xor
dec
loopne
adc
cltd
pop
stos
xchg
adc
les
testb
jb
sbb
adc
outsb
cmp
in
xchg
ficoml
dec
pop
test
cld
push
daa
jbe
mov
sub
das
or
bound
sbb
xrelease
push
fwait
jae
pminub
inc
push
fsubr
das
test
sbb
jnp
push
sbb
adc
mov
fwait
in
or
sbb
inc
arpl
jb
dec
dec
out
clc
enter
icebp
xor
xor
ljmp
sarl
xchg
xchg
sbb
test
int3
jg
sub
mov
jmp
fmuls
repz
in
inc
clc
jecxz
jecxz
push
ds
cmp
xchg
shrl
mov
mov
and
dec
rolb
cmp
into
gs
cmpl
into
in
pop
in
xchg
cmp
clc
iret
cltd
movsb
mov
shr
fwait
js
popf
test
push
cmpsb
clc
jmp
cmp
jecxz
test
shl
icebp
push
and
mov
gs
loop
stc
mov
cmp
int
outsl
jecxz
cmpsb
jo
mov
lods
add
jg
mov
aad
add
test
sub
mov
sahf
mov
cli
pop
jge
in
daa
push
rolb
add
test
fisubrl
ljmp
pop
fimull
in
leave
out
test
arpl
adc
pop
xor
jl
cmpsl
adc
ss
ret
clc
mov
cld
in
stos
icebp
rorl
mov
lods
lret
test
adc
out
test
in
mov
mov
aas
in
dec
ret
loope
mov
lret
mov
fwait
pop
cmp
xchg
mov
jae
or
mov
mov
add
jg
mov
mov
pop
push
push
ljmp
jnp
bound
mov
xchg
jae
lea
mov
inc
jmp
pop
jno
mov
inc
cld
inc
add
test
fildll
sub
repz
inc
notl
or
lret
and
int
loope
sub
push
sub
mov
inc
ret
push
loopne
xorl
mov
jg
lock
cs
aaa
clc
mov
test
outsl
jmp
mov
leave
mov
not
push
mov
es
fistl
mov
mov
pop
push
fwait
bound
cwtl
ja
out
and
push
ljmp
ror
jno
pop
mov
ljmp
push
ret
cmc
jnp
jle
cmp
mov
daa
push
mov
cmpsb
xor
sbb
push
cmp
cmpsl
stos
jns
and
out
sub
cmp
push
xchg
mov
inc
and
xchg
cmp
pop
faddl
faddl
leave
add
ror
sbb
outsl
jns
stos
mov
sbb
imul
into
pop
and
aam
mov
mov
xchg
inc
enter
movsl
xchg
xor
xchg
mov
dec
hlt
icebp
and
fcoms
cmp
sahf
je
xorl
aad
rep
mov
pop
pop
xchg
cmp
and
je
imul
mov
data16
adc
add
or
xchg
mov
or
pop
gs
mov
scas
xor
or
cmpsl
into
scas
test
sbb
sub
call
aaa
lret
inc
fbstp
jae
arpl
xor
lahf
or
scas
xor
push
inc
int3
and
je
add
mov
je
repz
adc
mov
or
outsl
adc
cli
adc
mov
xor
or
and
movsb
outsl
jns
fadd
push
xchg
in
mov
scas
fsubrs
mov
leave
xchg
xchg
filds
push
leave
xchg
sub
and
adc
inc
sbb
jg
addl
es
dec
fnsave
outsl
pop
push
repz
insb
xor
pop
bnd
jns
pop
jp
mov
call
es
addr16
fadd
mov
out
icebp
sbb
mov
je
pop
pop
mov
add
push
ljmp
das
cmp
mov
les
mov
sub
stos
popa
mov
cmp
mov
enter
arpl
xchg
sbb
ret
cli
mov
sbb
dec
aaa
mov
or
std
fcoms
ljmp
mov
sti
mov
loopne
lret
sub
out
dec
dec
fwait
call
pop
aam
mov
bound
pop
ljmp
push
push
leave
aam
lds
push
movsl
dec
fs
gs
sub
in
push
mov
fcmovb
dec
add
xor
loopne
jmp
jo
xchg
orl
push
dec
add
inc
cwtl
mov
xor
int
push
incb
mov
and
pushf
cli
mov
mov
cmp
cld
aad
and
das
decb
addr16
daa
nop
cmp
div
ja
push
icebp
inc
xchg
sub
shll
subl
pop
sub
or
in
ljmp
clc
out
out
cmp
push
movsl
sub
icebp
jne
push
pop
sub
scas
jnp
jnp
adc
andl
pop
lods
enter
adc
push
mov
sub
sub
mov
in
int3
cmpps
inc
adc
dec
sub
pushf
xor
jbe
mov
xchg
mov
xor
shlb
int
ds
push
mov
shlb
pop
cmp
push
push
dec
inc
fiaddl
xchg
pop
push
and
stos
icebp
lods
inc
and
fdiv
incb
fbstp
jp
adcb
xchg
inc
add
push
sbb
mov
xor
pop
ret
mov
or
push
test
adc
mov
jns
jns
movsl
and
outsl
cld
in
aad
push
testl
fdivs
enter
lock
sbb
push
out
mov
popf
jmp
repz
out
insl
add
add
jno
gs
arpl
jge
or
sub
inc
pop
pushl
jmp
in
mov
shll
and
add
sbb
pop
mov
inc
loopne
xchg
aam
movsl
cmc
sbb
sub
push
inc
sarb
dec
mov
cmp
jle
inc
nop
mov
out
in
out
vsubpd
push
push
push
cli
ds
repz
cmc
adc
leave
push
jbe
sub
mov
pop
aas
gs
shl
fidivrl
shlb
pop
cmp
nop
mov
xor
sbb
jecxz
mov
cmp
xchg
sub
pushf
icebp
sbb
cmp
lock
push
push
cmp
or
outsl
loop
cmpsb
decb
cmp
mov
jmp
out
and
pop
test
lea
push
fs
sub
dec
inc
adc
addr16
clc
push
sub
test
push
mov
fsubr
fmulp
xchg
adc
sbb
mov
jb
mov
fs
xchg
mov
jl
lds
push
cmp
ja
daa
lcall
data16
xchg
adc
push
sub
shll
push
mov
xchg
ljmp
pop
movsb
out
test
mov
mov
iret
xchg
ds
aam
pop
ja
std
mov
mov
lret
pop
push
loopne
inc
push
dec
jp
inc
sbb
push
jo
jae
cmp
fmull
sub
or
jae
jns
adc
into
adc
dec
out
sti
in
xlat
pop
xchg
loope
sbb
fistpl
xchg
push
adc
cmpsl
xor
outsl
bound
xchg
sub
loope
das
push
es
pop
jae
lret
push
add
push
mov
push
into
and
xor
iret
popa
lods
inc
pop
or
adc
test
mov
mov
mov
sub
push
mov
cmpsl
imul
sub
mov
mov
xchg
sbb
mov
sbb
sbb
gs
outsb
pusha
aas
rcl
sbbl
in
in
push
sbb
or
xor
inc
test
pop
cmc
inc
outsb
pop
out
loope
mov
xchg
jb
mov
mov
push
sub
lret
insb
sub
loopne
leave
es
push
insb
xchg
xchg
popf
cmp
cltd
loop
sbb
sbb
add
lret
mov
and
enter
or
shr
jo
inc
stos
out
lea
in
out
push
ret
push
mov
insb
mov
test
adc
das
cmpl
push
ds
cmp
js
in
loopne
mov
sarb
pop
add
xchg
fildll
pop
jns
lahf
inc
push
sub
mov
pop
cmp
mov
push
xchg
aad
dec
cmpsb
mov
cli
jecxz
fidivs
add
lods
push
sahf
test
sbb
jnp
cwtl
fmuls
arpl
out
xchg
adc
ret
jp
in
sbb
xchg
sbb
mov
rclb
add
fsubrs
rcrb
fmull
stos
mov
fldt
pop
mov
mov
push
xchg
fs
push
cmp
mov
clc
icebp
pop
shrb
leave
in
aam
and
in
xchg
clc
sarb
loop
stos
fildl
push
cmp
adc
dec
pop
fnstcw
rorb
xchg
daa
mov
outsb
lcall
jle
and
arpl
add
incb
scas
push
into
gs
test
aad
adc
adc
roll
push
inc
es
jne
cmpsb
inc
inc
adcl
int3
lret
cmp
push
xchg
loop
and
fsubrs
pushf
dec
or
or
js
push
lods
sti
pop
movsl
cmp
xor
mov
pushf
add
imul
sub
rcr
aad
and
in
mov
mov
inc
xchg
inc
fiaddl
jbe
adc
outsl
jmp
xor
or
fsubr
movsl
cmp
push
inc
adc
mov
insl
ret
mov
js
mov
mov
sub
loopne
enter
cmc
fs
mov
ja
sub
ljmp
icebp
mov
xor
insl
mov
ds
pop
pop
inc
mov
jg
cmpsl
xchg
adc
ja
inc
jl
mov
jno
jmp
imul
ljmp
xor
and
xchg
test
mov
dec
cmp
enter
ret
mov
into
inc
dec
inc
pop
call
mov
mov
add
out
sahf
dec
cmp
pop
pusha
pop
out
aam
dec
data16
cmp
cltd
or
pop
inc
data16
mov
cmp
dec
pop
fldt
mov
dec
cmpsl
pop
jmp
lahf
sbb
fistl
outsl
jle
enter
dec
orl
inc
dec
adc
shrb
movsl
ss
addr16
imul
inc
lret
rorb
in
stos
sub
mov
fs
mov
dec
roll
ret
arpl
pop
cmc
xor
cmp
outsb
stc
cmp
jo
in
fwait
xchg
repnz
xor
push
in
push
int3
stos
or
daa
cld
mov
imul
and
mov
fcompl
mov
jnp
push
bound
jg
cltd
stos
cmpl
jg
sahf
mov
jne
fistl
pop
subl
push
xor
pop
popf
pop
test
xchg
xlat
push
xor
xchg
mov
in
jno
dec
cld
int
pop
lock
popf
rcr
mov
test
push
mov
ja
xchg
xchg
out
lds
cmp
or
mov
push
jmp
add
popa
fisttpll
add
dec
sbb
ds
mov
out
adcb
add
mov
test
fimuls
pop
mov
addr16
in
lds
addr16
fsubl
test
push
adc
imul
repz
and
orb
lds
push
cld
jecxz
adc
sbb
push
push
xchg
mov
fdivrl
aaa
into
out
mov
lcall
in
nop
in
stos
mov
sbb
add
movsb
hlt
test
insb
push
lods
scas
inc
clc
cmp
push
in
enter
ficompl
cvtdq2ps
cmp
lret
int
movsl
pop
xor
popf
lods
cli
mov
mov
inc
dec
xchg
mov
mov
incb
icebp
xlat
test
cmp
cld
mov
outsb
mov
mov
adc
mov
adcb
jecxz
add
out
lret
pop
or
cmp
test
inc
pop
cld
inc
push
into
xlat
jle
push
loop
popf
push
xlat
inc
add
add
or
out
leave
pop
inc
xor
mov
add
sbb
repz
inc
lods
jmp
fimuls
adc
mov
ret
jl
test
mov
mov
andl
js
subl
and
fstp
push
inc
ret
pop
adc
mov
ds
cld
push
cwtl
aad
mov
in
sub
insb
popf
sub
dec
bound
cwtl
pop
loopne,pn
push
push
adc
fcoml
in
cmc
pop
jno
push
dec
cmp
cmp
and
sbbl
in
fnsave
dec
sarl
cli
xchg
mov
pop
lahf
nop
sbb
xchg
ss
cld
call
ret
shll
dec
add
mov
repnz
pop
stos
pop
inc
arpl
repnz
stos
mov
movsb
push
stc
std
test
jo
xor
dec
cmp
add
cltd
mov
and
sti
sub
cmc
or
clc
and
bnd
mov
sub
mov
pop
dec
pop
cmc
jnp
jb
cwtl
pushf
and
add
nop
xor
ja
xchg
repz
mov
pop
adc
pop
adc
inc
pop
or
and
std
jo
adc
jne
ret
cs
push
lahf
int
in
sbb
ljmp
aas
xchg
jmp
inc
cmp
add
or
pop
daa
jle
xor
fsubr
gs
sub
inc
scas
ret
sub
mov
cmp
shrl
fwait
loop
push
adc
jle
cli
test
adc
adc
outsb
ss
sti
jp
mov
xor
push
mov
push
sbb
sub
ja
sbb
push
ljmp
jmp
jnp
cmp
adc
or
cmp
stos
in
popa
xor
mov
lret
enter
outsl
cmc
sub
lock
or
addr16
std
lods
adc
popa
clc
aas
fwait
xor
inc
and
xlat
push
sbbb
mov
shlb
dec
test
push
jne
icebp
ds
sbb
testb
shl
sbb
jne
stos
inc
loop
xchg
ja
scas
and
adc
sub
xchg
mov
or
lret
jno
jns
sti
test
test
sbb
or
pop
add
sub
push
cwtl
ret
cmc
mov
das
cmp
mov
cwtl
das
fistpl
lods
cmp
ss
test
stos
sbb
pop
inc
mov
inc
add
sahf
cmp
dec
cmp
stc
inc
jo
mov
and
lea
inc
push
inc
divb
lret
and
xchg
sbb
jb
sub
jle
inc
and
dec
dec
pop
push
loopne
mov
ds
xor
inc
pushf
stos
push
lods
fldl
xlat
cmp
inc
popa
jg
mov
ljmp
push
push
mov
fwait
lock
jnp
inc
lcall
push
cmp
jns
xor
scas
inc
adc
push
xor
push
test
xor
cli
push
js
inc
fs
dec
add
lock
subl
jns
xlat
sarl
sbb
bound
sar
mov
cli
xchg
mov
and
push
std
lods
sbb
inc
push
mov
mov
lea
cmp
sub
xchg
push
lods
out
xor
dec
mov
and
xor
testb
imul
popf
stc
clc
inc
sbb
loope
mov
or
insb
sbb
insl
sbb
jnp
stos
ret
leave
inc
and
hlt
adc
xor
into
into
pop
call
inc
loope
sub
pop
jmp
into
pop
push
mov
fidivl
push
ds
dec
cmpsl
pop
lods
pusha
cmp
out
test
sbb
icebp
or
inc
testb
test
and
cmp
jl
xchg
es
xlat
sub
jbe
adc
insb
rclb
inc
fwait
aas
fldcw
dec
pop
sbb
mov
repnz
das
lahf
inc
add
cltd
xchg
xchg
inc
fistpl
out
mov
cmp
push
add
fs
sbb
repz
push
add
int
imul
scas
and
xchg
mov
xchg
test
mov
test
jae
inc
sub
jo
pop
in
xchg
jnp
push
mov
movsl
gs
test
inc
js
inc
jge
cmpsl
dec
jo
out
in
sbb
jnp
aam
cmp
adc
lret
in
pop
icebp
mov
loopne
ja
mov
mov
insb
movd
ljmp
xchg
es
loop
xchg
sbb
cmp
movsb
push
mov
inc
enter
in
cmp
cltd
bnd
or
mov
addr16
mov
arpl
shr
popa
stos
imul
leave
jbe
js
aad
jp
pop
ret
and
fs
pop
sub
xor
push
sbb
or
sahf
in
test
or
push
aad
test
fnstcw
mov
inc
sub
dec
jbe
ret
cmp
dec
fs
dec
push
jge
dec
cmp
dec
cmp
xchg
push
jae
cmpsl
fmuls
xchg
adc
loope
lock
sbb
xchg
mov
push
psrad
mov
dec
mov
dec
pop
dec
mov
jp
xor
movsb
pop
rol
sbb
push
cwtl
movsb
sub
xchg
pop
je
xor
push
int3
out
ret
hlt
dec
es
lahf
inc
cwtl
inc
mov
xchg
jmp
nop
pusha
push
nop
mov
sbb
daa
scas
movsb
stos
inc
lods
inc
or
shlb
inc
push
pop
cmp
movsb
xor
pop
dec
sub
shll
inc
sub
out
xchg
movsb
stc
add
movsb
lds
mov
jae
inc
lret
movsb
out
mov
stc
mov
mov
mov
out
scas
in
in
pop
scas
loopne
and
dec
mov
jle
cmpsb
pop
sbb
push
jae
movsb
stc
test
xor
lods
iret
sub
fsubrs
mov
repnz
mov
fists
xchg
cmpsl
out
or
or
jno
push
loopne
push
lahf
pusha
xlat
mov
fstps
in
es
mov
pusha
sti
cmc
jb
add
dec
fnstsw
sub
cmp
cmp
sbb
push
aam
subb
pop
pop
xchg
push
popf
sub
push
push
repnz
xor
inc
push
pop
inc
or
mov
bound
outsb
and
addr16
cltd
pop
pop
subl
mov
pop
sarb
mov
test
xchg
mov
xchg
dec
cmp
aam
mov
pop
xor
aas
mov
in
cli
out
mov
pop
insb
add
test
lock
pop
xchg
adc
mov
push
jb
out
icebp
xchg
mov
adc
aas
stos
loop
lds
jne
push
insb
rorb
stos
ljmp
push
adc
or
and
sahf
aaa
popa
enter
leave
xchg
mov
jo
sub
jp
jae
ja
pop
xchg
int3
push
xchg
fstpt
jecxz
js
shr
adc
test
enter
fistpl
sub
and
xchg
sub
loop
fidivs
pop
jle
adc
xchg
dec
sbbb
frstor
cmc
jno
xor
cmp
xchg
add
bound
sarl
imulb
ret
ret
mov
mov
lcall
ja
pop
fistpll
jmp
ja
or
js
adc
adc
inc
bound
xchg
sbb
dec
mov
aam
jns,pt
repnz
mov
and
mov
xor
and
xchg
js
mov
adc
add
mov
and
test
fs
mov
lahf
add
cmpsb
aam
sbb
add
setle
divb
fdivrl
cmpsl
out
mov
dec
mov
cmp
pop
add
add
pop
xchg
xchg
push
dec
arpl
fdivrp
into
xorb
pop
cmpsl
sub
add
sub
cmc
int3
mov
sub
fisttpl
shll
xchg
pop
pop
cmp
or
jmp
fdivrs
mov
cli
jp
xchg
mov
into
gs
bound
adc
sbb
sbb
push
insl
in
adc
sbb
add
repz
aas
sahf
sub
inc
scas
negl
clc
mov
inc
sbb
mov
push
rorl
and
xor
stos
dec
ret
cmp
jg
scas
pop
lds
or
dec
xor
sti
fs
cltd
xor
mov
out
jmp
sbb
add
pop
and
cmpps
out
iret
aad
in
fnstsw
ret
pop
pop
mov
push
lods
mov
fbstp
sti
lahf
mov
pop
adc
jp
mov
adc
pushf
push
mov
push
daa
adc
sbb
mov
mov
push
scas
add
movsl
mov
pop
sti
inc
daa
jbe
bound
cwtl
mov
out
jbe
out
sbb
push
inc
call
adc
loope
cmp
mov
out
or
cmp
outsb
sub
out
xor
and
sbb
repz
pop
and
sub
jg
out
ss
das
in
mov
push
mov
ljmp
lret
sub
stc
sbbb
in
or
adcb
jb
cli
xchg
std
xchg
fdivl
push
mov
insb
jle
cltd
mov
ficompl
hlt
pushf
lea
orl
sub
aas
mov
sub
test
popf
out
xor
dec
jnp
out
stos
push
mov
or
jmp
and
scas
aam
add
shrl
lret
mov
mov
repz
adc
sbb
mov
fdivp
out
das
mov
and
jno
inc
out
popa
cmp
test
jnp
inc
dec
data16
icebp
mov
and
xor
jae
or
ret
sbb
aad
out
dec
inc
sarl
rcr
mov
jno
outsl
sub
adc
pop
popa
jnp
outsb
cwtl
bound
scas
and
push
stos
sbb
and
mov
test
dec
mov
and
dec
pop
out
xchg
enter
ljmp
stc
inc
out
aaa
test
testl
sub
arpl
pop
adc
dec
jl
dec
xchg
dec
push
jne
rcll
pop
das
addl
xor
andb
push
pop
push
push
popf
stos
out
pop
outsb
dec
setle
add
mov
les
fnsave
adc
adc
out
loope
cmp
cmpsl
mov
jecxz
mov
sahf
mov
unpckhps
int
mov
lret
mull
pop
fnstenv
shrb
sub
jno
push
cmp
push
jno
cmp
xor
scas
ret
fucom
daa
mov
bound
and
add
fldt
pop
mov
mov
out
or
cmp
enter
aam
inc
push
call
test
fs
cmpsl
rorl
or
lahf
inc
sub
mov
inc
mov
arpl
int
test
out
cld
push
cmp
cmp
push
in
pushf
popa
xor
push
mov
cmp
test
add
cli
push
or
dec
lods
fcomps
nop
xlat
mov
out
daa
outsl
mov
fistl
xchg
and
and
or
cwtl
cmp
jge
fucom
mov
push
das
sbb
jl
xlat
jno
lret
push
clc
loopne
loope
and
faddl
mov
lock
or
cmp
ja
in
inc
dec
cltd
out
test
dec
aam
mov
mov
xor
jns
inc
cmp
or
stos
xchg
icebp
mov
out
jns
mov
jns
lcall
add
arpl
dec
dec
aas
pop
or
push
std
or
mov
dec
inc
pop
cmpsb
pop
aad
cmp
fwait
test
aam
jge
jae
mov
cmpsl
in
add
xor
dec
fucom
fimuls
mov
frstor
gs
sarl
sbb
gs
push
movsb
lods
inc
sub
in
or
and
add
inc
mov
jecxz
jbe
add
cmp
aam
adc
sub
pop
outsl
jge
inc
aas
fldenv
inc
gs
je
xchg
sarb
dec
in
ficomps
roll
mov
pop
sub
mov
into
data16
and
sbb
les
add
sahf
push
ds
aad
decl
out
sub
jnp
mov
fnstenv
sbb
pop
fwait
insb
fists
mov
add
shrl
movsb
cmp
dec
sbb
imul
push
jl
repz
stc
test
stos
inc
test
xor
and
jno
inc
xchg
mov
pop
sbb
imul
int
pop
imul
faddl
push
and
or
das
fisubrs
mov
test
aaa
int3
or
into
jns
xchg
sub
mov
push
add
fdivl
out
adc
hlt
sbbl
jmp
sar
push
lea
aaa
leave
mov
or
push
in
push
sub
lcall
sbb
cltd
mov
lret
or
inc
popf
jae
mov
mov
xor
rol
and
mov
push
cmpsb
inc
xchg
es
mov
adc
scas
in
push
divl
add
jmp
jecxz
mov
pop
add
mov
stos
fildll
cmp
int3
adc
push
or
mov
insb
out
pusha
iret
push
rorb
pop
pop
dec
stc
and
sub
pop
dec
subl
lods
cmp
lods
push
inc
fmull
sub
stc
sub
sbbb
aaa
ljmp
mov
decb
dec
stos
or
cwtl
aaa
jae
ret
dec
and
out
jg
jb
or
sysret
mov
daa
movd
pop
mov
mov
jge
in
jecxz
outsb
cmp
jecxz
insl
or
jle
scas
jmp
mov
jb
lret
mov
xlat
aad
in
sub
mov
sub
dec
je
call
ss
xor
mov
rolb
sub
idivb
sub
cwtl
xlat
aas
dec
ljmp
rcll
movsl
iret
fnsave
js
fildll
aaa
jno
aas
inc
xor
adc
sarb
lret
or
insb
add
cltd
mov
sub
xorb
dec
xchg
insb
push
shll
lock
xlat
loopne
mov
mov
cmp
mov
jb
xor
dec
lahf
push
loop
leave
mov
call
insb
pop
jbe
pop
mov
iret
std
aam
sbb
xor
icebp
mov
mov
test
push
jne
scas
imul
in
jp
pop
in
mov
icebp
cmp
add
movsl
and
fcmovb
cmp
popa
jecxz
cltd
clc
dec
xor
ret
xor
lods
sbb
nop
xlat
inc
push
lret
cmp
add
outsb
fstpl
lods
xchg
pushf
mov
dec
lods
mov
cld
mov
dec
xchg
dec
inc
sub
andb
cmp
lahf
loope
adc
fmull
cmp
mov
cs
xchg
sub
or
stos
pusha
fisubl
lcall
adc
popa
gs
call
mov
outsl
mov
pop
ds
mov
push
or
mov
xor
mov
add
leave
movsl
push
sbb
jae
or
push
imul
pop
stos
adcb
test
sub
sub
lock
xchg
xchg
cmpsl
lds
pusha
cmp
std
or
scas
pop
sbb
mov
xor
mov
movsl
outsl
js
xchg
dec
pop
mov
or
xor
lahf
cmc
pop
adc
xor
popl
dec
lock
icebp
adc
xor
es
in
shlb
movsb
sub
and
push
pop
mov
adc
sbb
mov
cmp
fnsetpm(287
imul
fneni(8087
xor
mov
testb
daa
sbb
sbb
jl
dec
cmc
xchg
mov
loope
inc
movsl
dec
sbb
repnz
ss
sbb
adc
movb
xchg
mov
daa
mov
test
sub
and
stos
cmp
pop
jno
pop
inc
pop
pop
xchg
sub
push
inc
in
cmp
gs
mov
cmp
push
mov
pop
stos
dec
mov
cmp
js
or
mov
mov
and
or
data16
mov
jp
addb
xchg
pop
scas
test
sbb
aam
je
mov
dec
mov
jmp
sub
jno
sub
fwait
cmp
imul
mov
aam
xlat
adc
in
push
jg
cmp
ljmp
inc
ja
iret
push
lahf
xor
pop
aas
addr16
cmp
adc
mov
filds
cmpsl
lock
pop
repnz
mov
adc
cltd
pop
xorb
cmp
mov
mov
inc
test
jno
or
hlt
xchg
inc
pop
dec
adc
dec
and
movsl
rorl
lret
adc
gs
jb
push
sub
add
aam
xor
sarl
adc
cmp
mov
mov
fistl
sub
inc
mov
inc
ficoms
inc
add
fnsave
or
fwait
push
dec
scas
adc
xchg
outsb
out
ss
xor
and
mov
or
jge
jecxz,pn
dec
adc
mov
ljmp
pop
xor
adc
sbb
or
loopne
movsl
jg
adc
movsb
add
in
push
ss
sbb
stos
mov
push
les
pushf
mov
xor
jnp
and
sahf
xor
mov
sbb
inc
adc
ja
andl
jmp
or
cli
pop
out
adc
cmp
lret
jl
cld
fwait
dec
cmp
xchg
inc
pop
test
popa
shlb
dec
filds
mov
xor
repz
push
sbb
outsb
push
int
addr16
add
rolb
push
call
mov
jo
dec
fidivrs
rcrb
add
add
xor
cmp
fwait
insl
or
out
ret
dec
inc
dec
jnp
test
push
or
pop
pop
sti
cmp
loop
or
fs
pushf
pop
nop
mov
mov
jg
add
mov
push
in
mov
mov
jb
jae
jo
sub
sti
out
movsl
shrl
notb
mov
dec
adc
pop
mov
jmp
lea
inc
nop
imul
jmp
jmp
sbb
ret
or
xchg
adc
in
pop
imul
nop
or
outsl
push
mov
lret
jl
rcl
arpl
xchg
mov
les
mov
push
insl
testl
shlb
add
xchg
andl
pop
push
fucomp
addb
xor
lock
inc
mov
ret
lret
lock
out
mov
cmp
mov
push
pop
in
in
call
js
outsb
aaa
into
lahf
outsl
jecxz
or
enter
xchg
add
movsb
mov
sbb
adc
sbb
pop
insl
mov
lret
rdtsc
fidivl
xor
std
inc
adc
sbb
xchg
cmp
insl
loopne
cmpsb
shlb
ja
sbb
jo
push
xor
lods
gs
test
sti
lods
push
test
ds
in
pusha
shr
mov
cmpsb
xor
xchg
arpl
xchg
out
lahf
in
xlat
xor
or
pop
cmpl
fcmovnbe
inc
jl,pn
mov
sbb
jae
push
cli
rcl
push
icebp
fdivs
nop
cli
out
pop
xchg
push
testl
push
les
add
adc
or
pop
mov
fwait
jb
pop
pop
push
cmc
cli
test
mov
mov
mov
dec
jp
sbb
jle
shrl
mov
imul
je
aas
cmpsb
xchg
push
repz
iret
aas
mov
mov
or
push
jg
dec
mov
xchg
sub
pop
dec
scas
add
mov
shrb
ljmp
das
fcomi
push
mov
test
arpl
pop
inc
push
fisubrs
rcll
or
lret
sub
inc
arpl
pop
xchg
sub
pop
outsb
test
mov
xor
sar
lcall
mov
jae
mov
mov
std
rcrl
xor
mov
stos
hlt
test
fbstp
std
mov
cmpsl
stos
enter
lret
mov
cmpsb
jo
mov
jge
sub
pop
mov
xchg
insl
cmpsb
fsubrs
syscall
adcl
ret
or
lea
out
fs
sbbl
xchg
cmp
fnstenv
rcrl
es
push
js
inc
and
sahf
insl
inc
dec
pusha
xchg
sub
mov
loope
lea
inc
sti
mov
inc
dec
jecxz
fiaddl
fcomps
psubsb
or
push
push
cmc
or
ljmp
cmp
fs
mov
repnz
jo
sbb
jns
test
leave
das
addr16
push
jo
inc
stc
pop
sub
push
popf
scas
sub
lods
insb
popa
sbb
mov
aaa
dec
mov
iret
adc
hlt
sbb
adc
sbb
rcr
adc
push
jno
scas
xchg
ds
insl
stc
cmp
pop
jmp
lret
cmp
lds
sahf
add
aad
das
jbe
xchg
jl
pop
push
scas
shrl
inc
mov
outsl
shlb
push
je
sbbb
add
push
sbb
pop
jnp
inc
mov
scas
and
cmp
inc
ss
xchg
cmp
js
mov
out
xlat
cmp
mov
xchg
xchg
xchg
sub
rorb
push
ud1
add
xchg
xor
push
xor
sub
inc
mov
xchg
push
fnstsw
aad
scas
push
sahf
mov
mov
addb
push
pop
movsl
mov
mov
jmp
test
mov
pop
mov
inc
mov
pop
aad
mov
ja
xor
mov
push
mov
pop
xchg
sub
rcll
sbb
add
pop
xchg
lock
dec
outsb
push
pop
mov
xchg
loopne
sub
iret
add
or
es
pop
mov
repnz
lret
cmp
xchg
xchg
icebp
movsl
xchg
sub
or
loope
jns
imull
adc
sub
mov
jo
in
fwait
movsl
mov
icebp
out
jmp
cmpsb
jecxz
cmp
pop
add
xchg
inc
pop
mov
and
inc
pcmpeqw
push
rorl
and
pop
fidivs
mov
sbbl
sub
and
pop
adc
imul
shll
adc
cmpsl
sub
xor
pop
lahf
stos
mov
fs
leave
stos
jge
jmp
or
sub
ret
hlt
repz
and
and
xchg
cmp
sub
sbb
mov
nop
imul
inc
arpl
dec
mov
or
adc
jecxz
xchg
adc
cs
sub
sub
mov
negb
xchg
pop
lcall
std
lods
xor
stos
dec
mov
and
roll
adcl
adc
movsb
mov
or
sbb
dec
iret
and
inc
adc
outsb
clc
hlt
loop
xor
jbe
sub
cmpsb
dec
pop
jb
out
iret
and
stos
les
mov
jg
cld
ja
dec
push
das
mov
pop
fsubrl
pop
push
and
add
in
xor
pop
sbb
out
cli
xchg
sub
pop
lods
scas
inc
in
ja
sbb
xchg
in
pushf
ljmp
in
xor
sub
push
jecxz
int
jle
test
hlt
sub
sbb
or
mov
movsl
xchg
mov
loope
cmp
pop
sbb
pop
push
or
ljmp
ljmp
and
shll
pop
mov
call
aaa
insl
dec
in
xchg
scas
lods
push
fmull
add
sbb
pop
imul
arpl
mov
sub
repnz
loop
push
cltd
loope
cld
adc
inc
push
test
fnstcw
js
inc
test
fsubs
pop
sysexit
lock
push
push
outsb
icebp
or
pop
push
add
nop
jge
inc
lds
mulb
in
stos
fcmove
mov
inc
inc
push
out
sbb
and
pop
cmc
orb
jp
insb
outsl
dec
mov
xlat
xchg
push
mov
mov
jbe
int
xchg
aas
adc
mov
cld
mov
mulb
sbb
jnp
seta
popa
dec
in
aas
cltd
in
mov
mov
out
add
sbb
data16
jno
lret
add
push
push
mov
add
into
je
shrl
jecxz
cmp
enter
dec
mov
jp
ret
jns
xlat
and
enter
dec
jmp
add
je
js
xchg
jo
inc
jne
stc
push
adc
cli
sub
scas
nop
out
leave
adc
clc
std
arpl
sub
scas
add
mov
loopne
jae
mov
mov
adc
ds
notb
push
fwait
pop
xor
out
in
arpl
test
aas
testl
arpl
mov
fldenv
cmpsb
inc
jmp
fstps
outsl
jge
jne
subb
aaa
and
es
push
jl
pop
sbb
sbbl
rcll
pushl
adc
inc
xlat
mov
pop
ret
push
jne
push
movsb
xchg
imul
jb
mov
mov
outsb
stc
mov
mov
or
mov
and
std
pop
jb
lods
ret
inc
fbld
add
outsl
xor
pop
cmp
mov
clc
sbb
notb
mov
repnz
cmp
add
cs
add
movsb
push
sti
sub
test
jmp
mulb
push
pop
dec
sub
push
push
and
lahf
inc
xchg
adc
cmpsb
mov
fnsave
cmp
or
test
rol
pop
icebp
push
sbb
arpl
cmp
or
clc
popf
sti
or
sahf
pop
pop
jb
cmp
jns
dec
mov
faddl
adc
mov
scas
push
aas
sub
sbb
sub
mov
mov
xchg
imul
pusha
fldt
call
sbb
xchg
imul
and
push
mov
nop
jne
sbb
sbb
pop
daa
cmpsb
mov
xchg
enter
inc
fnstenv
add
mov
xor
insl
andb
out
pushf
fldcw
in
add
jo
sbb
or
inc
cmp
mov
push
mov
imul
cmp
cmp
imul
fs
cli
cli
xchg
sub
idivb
lret
and
mov
mov
cmp
cmp
inc
outsb
xor
add
jle
pusha
jp
xor
xchg
pushf
mov
sahf
push
cmp
mov
push
je
push
push
lods
xor
sbb
dec
or
rolb
cmp
push
xor
sar
int3
les
lahf
jbe
mov
jecxz
insl
insl
data16
rorl
rorb
add
push
mov
stc
pop
add
cs
dec
and
and
fwait
xor
push
or
lock
into
push
adc
inc
les
int3
call
pop
push
add
pop
cli
out
aad
push
pop
pop
mov
cmc
ljmp
sbb
lret
iret
xchg
test
lcall
mov
out
inc
loopne
pop
xchg
and
movsb
mov
daa
add
enter
and
lret
andb
shll
imul
and
mov
cmp
in
loope
and
jnp
in
mov
mov
mov
test
les
and
fcmovb
pop
sbbl
shll
pop
push
jnp
test
scas
cmc
push
or
inc
sub
and
adc
fiaddl
aas
mov
cmp
push
loop
cmp
rclb
stos
gs
cmp
lcall
loop
xor
or
arpl
xor
negb
sub
ret
dec
sarl
adc
jo
outsb
popaw
xchg
dec
push
push
push
fnstcw
loope
sub
and
inc
or
inc
fwait
iret
lds
add
sbb
shrl
fsub
std
mov
mov
nop
aaa
push
fildl
mov
sub
pop
inc
pop
fdivl
jge
leave
outsb
fisttps
xchg
outsb
or
mov
mov
pop
mov
and
inc
or
cmp
andb
jp
add
aaa
in
adc
arpl
notb
mov
jecxz
fs
xchg
jbe
in
xor
test
aas
insb
add
pusha
or
lret
cwtl
nop
daa
lret
dec
mov
fsts
mov
push
push
pop
xorb
fcoml
test
ljmp
ss
bound
jmp
lds
sub
push
in
loop
cmp
daa
add
iret
imul
cmp
in
popf
sub
stos
add
add
adc
jae
js
lea
add
or
push
sub
mov
push
sbb
or
hlt
addr16
cmc
dec
sbbl
int3
or
xchg
adc
mov
rorl
xchg
int3
mov
dec
fwait
lods
mov
xor
fiadds
lea
stc
sub
std
adc
inc
cltd
pop
inc
ja
xchg
sub
out
out
movapd
inc
pop
mov
fistps
scas
lock
cmpsb
arpl
cmpsl
aas
lds
icebp
inc
mov
jmp
xchg
mov
es
rcrb
inc
jl
fwait
and
daa
inc
cltd
frstor
inc
inc
stos
outsb
push
rcrl
inc
loopne
pop
insb
add
jmp
out
adc
addr16
lret
jmp
pop
xchg
bound
int3
loope
lea
js
out
mov
pop
imul
stc
icebp
mov
sbb
xor
shll
mov
xchg
dec
arpl
pop
scas
sub
rcrl
xor
out
jbe
dec
mov
fidivs
fs
add
repz
dec
mov
imul
mov
popf
sub
inc
aas
popf
es
enter
or
inc
gs
push
sub
test
sub
subb
out
push
sub
repnz
lods
repnz
sbb
leave
lcall
mov
dec
lea
push
inc
adc
testb
and
fs
dec
pushf
adc
lds
add
pop
or
inc
dec
pushf
dec
pop
mov
xchg
mov
mov
inc
loope
data16
sbb
dec
adc
mov
daa
ret
enter
push
jecxz
lret
leave
data16
rorb
inc
xlat
jmp
push
je
mov
mov
mov
pop
test
movsl
mov
mov
mov
mov
and
mov
fsub
lds
mov
pop
cmp
lahf
lods
xlat
or
cvtps2pd
lret
jbe
push
test
jmp
outsl
sbb
adc
iretw
out
icebp
ja
push
add
pop
decb
mov
push
jbe
jne
imul
pop
aaa
dec
addl
xchg
mov
jle
iret
jnp
sbb
and
or
cld
fistpll
loopne,pt
jno
adcb
call
int3
lcall
sub
cmp
dec
xchg
shll
add
jo
fldt
int3
stc
pop
cmc
push
cld
xchg
jecxz
pop
mov
cmp
dec
mov
loope
sbb
and
gs
sub
mov
hlt
fs
adc
xor
inc
stos
in
out
ror
into
pop
data16
sbb
mov
nop
repnz
sub
jno
mov
shll
iret
sbbl
sarl
cltd
push
mov
stc
jne
out
xchg
push
popf
sarb
sub
dec
sti
xor
stos
inc
test
ret
xor
jg
adc
mov
mov
test
mov
inc
fs
hlt
fldcw
enter
popa
mov
sahf
mov
repnz
cmp
fimuls
sahf
lcall
mov
test
mov
enter
push
or
dec
mov
jl
push
fistpl
lahf
adc
push
lods
bound
enter
mov
push
jmp
shll
push
into
pop
pop
out
insb
mov
or
rcrl
stos
ss
dec
pop
loope
ds
sub
inc
sbb
jbe
mov
imul
repnz
out
pop
lds
xchg
aam
rorl
xchg
mov
fwait
mov
out
popf
imul
jl
or
jmp
inc
pushf
xor
lret
js
pushf
arpl
or
ljmp
pop
add
rclb
lods
jnp
pop
stc
push
sub
mov
adcl
push
aaa
sbb
mov
lea
aas
imul
pusha
xchg
mov
stos
ret
test
cmp
repz
push
adc
lahf
inc
or
insb
inc
imul
mov
scas
call
inc
stos
mov
inc
outsb
test
mov
repnz
daa
and
sbb
lret
idiv
out
cmp
mov
roll
xchg
push
and
loope
sbb
movsl
push
iret
and
sub
in
pop
ja
scas
add
faddp
xor
add
int
popa
aad
sti
pop
cli
push
dec
sbb
adc
dec
lahf
dec
mov
jmp
jge
push
scas
insl
popf
or
inc
sahf
adc
dec
jle
shrb
mov
mov
jge
xchg
fsubrp
sbb
rclb
inc
popa
xorb
pop
pushf
sub
insl
cmp
mov
push
or
mov
pop
or
push
push
outsl
mov
push
xchg
jae
fdivl
call
dec
jo
sub
mov
xor
outsl
idivl
xor
or
and
pop
fnstenv
cli
pop
fisubl
test
mov
jp
jecxz
push
les
inc
addr16
cltd
push
lods
leave
fcomp
nop
into
adc
loop
xchg
rorl
sbb
push
faddl
sbb
es
mov
dec
repnz
sbb
repz
cmpsl
clc
xor
enter
lock
dec
jbe
rclb
lcall
in
push
sbb
ficoms
jmp
push
push
pop
sub
xchg
add
mov
aas
jo
pop
mov
cmpsl
movsl
dec
mov
pop
jnp
sub
fcompl
cmc
adc
cmp
and
fistpl
fs
and
xor
inc
rcl
in
mov
mov
cmp
out
dec
ret
sarl
sub
movsl
xor
and
xor
fwait
aaa
mov
out
out
xchg
popf
jne
mov
aam
test
lret
fucomip
mov
mov
xchg
movsl
lock
lret
je
mov
mov
add
jl
pop
pop
decb
pop
add
daa
in
int
test
movsl
jnp
movsb
ja
or
inc
data16
cmpsb
mov
push
push
movsl
dec
dec
bnd
xor
cwtl
jns
lret
mov
xchg
pop
je,pn
inc
cmpb
jp
xor
imul
idivb
sbb
lods
pop
jle
out
repnz
test
push
jne
outsb
cmp
cmc
sbb
shrb
cmp
adc
repnz
gs
sbb
inc
or
daa
dec
movsb
push
lds
push
push
mov
jl
xchg
mov
into
data16
mov
fs
in
jns
xchg
and
ret
pusha
push
cs
cmpsl
stc
rcr
push
sahf
gs
mov
inc
pop
je
push
je
cwtl
and
leave
scas
sti
rcr
lods
cld
dec
push
clc
mov
dec
ret
dec
ds
add
pop
push
testl
inc
mov
push
and
into
pop
aaa
arpl
fcmove
mov
stos
and
pop
mov
nop
rcl
repz
push
les
lods
jg
dec
mov
jno
loop
dec
xchg
sbb
push
jmp
jp
lahf
mov
pop
xor
lcall
jo
incb
pop
js
mov
cmp
call
or
xor
jnp
or
jbe
stos
mov
mul
mov
arpl
movsl
sbb
push
sarl
idivl
arpl
xchg
jg
push
or
or
push
adc
pop
dec
daa
inc
dec
gs
addr16
pop
into
int
inc
fs
jg
add
adc
and
sbb
shll
dec
pop
cmpsb
or
mov
fidivl
adc
out
leave
aas
insl
jge
ljmp
insl
fisubl
inc
mov
jns
js
lret
je
jmp
xlat
imul
xchg
sub
cmp
dec
push
lock
jle
push
scas
add
xchg
mov
mov
outsl
xor
in
inc
loope
mov
cli
aam
notb
sub
jnp
cmp
dec
mov
pop
lods
into
mov
or
arpl
or
sub
mov
mov
hlt
sub
add
rorb
ljmp
pop
sub
inc
dec
popf
rcr
push
adc
scas
sub
repnz
pop
js
xchg
sub
mov
mov
aad
xchg
pop
dec
daa
decb
out
dec
shll
adc
xchg
mov
xchg
mov
cmp
sub
fstl
stc
shrl
lea
cmp
xchg
add
dec
mulb
stos
inc
xor
aam
mov
jns
xchg
mov
dec
cmp
push
pop
insb
inc
push
and
cmp
outsb
test
xchg
sbb
pushl
es
cli
mov
cmp
jmp
and
and
push
stos
stos
inc
in
int
xchg
mov
sbb
arpl
xchg
shlb
dec
mov
and
lret
and
sub
in
ljmp
jg,pt
jo
or
jns
sbb
pop
mov
scas
stos
popf
and
or
pop
jp
out
frstor
push
xchg
push
out
bound
les
mov
iret
cmp
or
lds
xor
lahf
jns
ja
mov
xchg
pop
xor
adc
mov
mov
jbe
sub
jl
into
rcll
jbe
rcrb
inc
and
push
ja
inc
mov
add
add
inc
fcoml
fcompl
aaa
ficoms
pusha
mov
ds
lret
test
movsl
sbb
inc
cmp
js
in
inc
fldt
xor
cli
mov
stos
out
cld
iret
sahf
mov
fsubrp
jg
mov
loope
inc
xchg
push
jo
js
cmp
add
repz
pop
xor
aas
les
cld
in
xor
lock
xor
and
and
push
dec
int3
push
lods
mov
mov
inc
in
sti
mov
and
xor
xchg
pop
pop
lea
dec
xor
std
test
sbb
and
ret
arpl
push
ret
fs
loopne
aam
cmp
mov
mov
jne
cmpsb
xor
jb
mov
adc
outsb
add
jo
xchg
mov
data16
je
cmp
insl
int3
bound
push
stc
rolb
jnp
jecxz
orb
icebp
adc
cmp
daa
cmp
movsl
icebp
xchg
iret
enter
cli
sub
xor
and
test
ss
das
adc
rcl
sbbb
adc
mov
jnp
cmpsl
push
sub
inc
arpl
sbb
pop
dec
mov
sub
mov
push
xor
sbb
out
and
cmp
jno
xor
mov
test
stos
push
aas
dec
xor
and
notb
insb
mov
mov
movsl
xor
and
mov
mov
inc
jecxz
fcmovnbe
orb
cmc
xor
jl
xchg
stos
je
push
mov
mov
mov
sbb
mov
mov
xchg
push
add
dec
sub
lret
add
repnz
movsl
cmp
adc
push
rcrb
xor
mov
push
rorb
fistpll
fnsave
out
lock
mov
arpl
rolb
pop
dec
xor
int
mov
fldl
cmc
cwtl
stos
and
cmp
outsb
jl
mov
imul
out
dec
bound
rclb
push
add
daa
cmp
pop
jecxz
mov
in
xor
xchg
mov
sbb
inc
mov
fimuls
push
mov
stc
fs
jl
arpl
movsb
jge
xor
addr16
fmull
push
getsec
dec
xor
aam
fwait
scas
push
test
mov
fs
aam
shll
jb
ret
lods
mov
dec
push
jno
aaa
sbb
cli
dec
push
xchg
lcall
pop
sbb
lds
push
dec
dec
add
xchg
repz
pushf
sub
or
push
in
sbb
movsb
xor
push
add
fmull
in
dec
data16
inc
pop
scas
cltd
and
push
lods
cmpl
dec
push
imul
pushf
mov
movsl
das
jge
in
and
xor
adcl
icebp
pop
and
icebp
hlt
arpl
jmp
and
mov
clc
pop
ds
dec
les
cmpsl
lcall
leave
inc
out
push
and
dec
cmpsb
aad
and
and
xchg
xchg
mov
adc
pop
pop
and
enter
inc
push
in
iret
inc
repnz
jecxz
mov
xor
lcall
mov
scas
call
push
jge
mov
insb
jg
aas
jbe
shll
mov
mov
loop
stos
push
dec
pop
inc
addr16
je
aas
pop
or
jp
adcl
pusha
repnz
iret
push
and
pop
xor
shlb
bound
movsl
jp
popa
cmpsl
lds
mov
push
and
sarb
cwtl
sbb
jo
cmp
insl
sub
mov
inc
mov
and
aad
lds
dec
fwait
jl
xchg
movsb
in
xchg
pop
xchg
scas
test
cpuid
inc
shrb
vmwrite
insb
mov
sbb
jmp
rorl
push
jecxz
adc
aas
cmp
sub
rclb
pusha
sbb
iret
dec
dec
into
in
sub
lahf
clc
mov
pop
lods
lretw
hlt
test
or
inc
jge
std
xchg
sbbl
aaa
insl
and
icebp
mov
aam
ret
shll
mov
fists
xchg
push
mov
rcr
lods
mov
fldenv
or
popa
xor
mov
les
xchg
and
ror
inc
pop
popa
sub
bound
pop
xlat
push
jo
jmp
fldenv
or
lea
cmc
mov
add
or
sar
sub
cmpsl
cld
jmp
xor
xchg
sub
mov
lods
xor
pop
jecxz
push
mov
fisttpll
jbe
pop
or
mov
sarb
dec
xor
add
imul
push
outsb
jb
ljmp
lds
and
push
lret
idivb
pop
pop
cltd
mov
sbb
addr16
sbb
push
int3
jne
das
pusha
lods
lods
clc
aaa
stos
lods
dec
pop
lock
jge
mov
or
jno
jge
shlb
fistl
or
cli
cmp
or
inc
icebp
test
pop
mov
jne
data16
cld
adc
out
out
push
push
aas
loope
not
insb
fcom
decb
and
inc
fstps
out
jle
mov
cld
xchg
idivb
dec
push
and
lcall
cmp
push
lock
mov
sbb
add
push
loopne
popa
adc
mov
outsl
daa
mov
xor
jno
test
mov
jns
imul
addr16
sbb
jns
push
jns
popa
add
rorl
jle
les
cmp
jge
inc
or
adc
or
push
loop,pt
pop
inc
stos
xchg
push
test
lret
xor
mov
enter
cmp
rorb
pushf
mov
xor
xor
lret
pop
push
in
cs
call
stc
call
adc
stos
nop
add
mov
sbbl
mov
adc
es
or
sbb
iret
insb
add
call
fbstp
bound
mov
xor
imulb
push
adc
movsb
cmp
pusha
mov
sbb
ret
pop
pop
cmp
daa
dec
mov
lods
adcl
jns
mov
sub
divl
sub
xchg
sub
xchg
mov
imul
in
lods
pop
sti
ret
pop
dec
and
jb
test
jmp
out
dec
mov
sub
sub
inc
fcoml
nop
pop
or
arpl
adc
sub
xor
lahf
push
popa
insb
fcmovnb
jge
repz
lods
push
mov
or
xlat
mov
call
add
mov
les
cmp
jmp
dec
fistps
decb
add
add
mov
sbb
pop
jge
idiv
mov
sub
cmp
xor
push
lock
mov
mov
xor
push
mov
lahf
add
es
push
fsub
jns
js
dec
mov
pop
divl
inc
xchg
bound
insb
dec
inc
sahf
xor
sbbb
or
or
adc
mov
test
into
and
aad
into
xlat
pusha
cmp
lcall
lock
bound
sbbl
jle
out
sbbl
fldt
into
push
test
icebp
jo
xor
sbb
repnz
lock
scas
mov
into
cli
lods
jecxz
and
insb
or
arpl
fisubrs
or
clc
jae
movsb
mov
lods
mov
mov
or
push
jb
movsb
and
clc
rcrl
sbb
and
enter
dec
ljmp
dec
and
daa
push
sbb
or
movsl
mov
out
sub
js
jmp
mov
fidivl
jg
fucomip
dec
sub
mov
lea
test
jb
inc
inc
bound
dec
leave
addl
push
out
mov
xor
scas
sbbb
sbb
dec
mov
mov
js
adc
ss
xor
and
test
popf
inc
mov
jnp
and
sbb
or
ret
rcll
mov
fcomps
or
adc
sbb
xor
jle
mov
push
inc
xor
jae
mov
insl
iret
and
hlt
mov
lods
adc
sub
cmp
lcall
inc
jb
sarb
add
stos
fwait
inc
and
xchg
imul
xor
ljmp
xor
jecxz
fldl
cld
xchg
mov
int3
adc
mov
jecxz
or
pushf
loopne
iret
movsl
fdivrs
imul
shrb
sub
out
push
outsb
push
aad
out
testb
ljmp
ret
and
sbb
int3
jns
sub
outsl
push
mov
and
cmc
sarb
les
push
mov
inc
sub
xchg
loope
mov
fistpl
adc
adc
and
xlat
mov
or
lock
add
das
repz
aad
sub
cmpsb
jmp
add
push
pop
inc
mov
jp
cltd
xchg
int
enter
insb
adc
pop
popf
dec
push
les
fcoml
outsb
sub
in
push
push
xchg
sub
pop
inc
stc
scas
jecxz
xor
dec
jge
repnz
mov
push
mov
and
sub
imul
add
test
xchg
dec
aad
jns
cli
xchg
sub
cld
fbstp
push
sub
mov
mov
fwait
and
push
in
gs
loope
stos
xlat
dec
add
fdivl
or
movsl
lret
fidivrl
cltd
cmp
xchg
dec
loopne
popl
out
mov
dec
add
hlt
pop
mov
push
filds
loope
lds
lods
xchg
inc
ljmp
inc
and
jbe
sbbl
add
push
mov
sbb
mov
inc
mov
imul
cmp
sub
cld
dec
out
loopne
cmpl
insl
jge
pop
or
jge
mov
pop
jp
mov
ficompl
test
push
or
push
add
cmp
cmc
push
adc
dec
ja
sub
outsb
mov
and
cmp
pop
sub
mov
inc
sub
adc
orb
sbbb
icebp
push
outsl
in
jno
sarl
test
xchg
test
mov
imul
adc
cmpsl
sub
mov
nop
ljmp
push
rorl
cmp
dec
cli
in
ret
shrl
sbbl
out
scas
xchg
addl
push
or
cmp
pop
cmc
mov
fidivrl
test
xchg
in
or
call
lea
jp
stos
cmp
mov
and
xlat
aas
movsb
fildl
out
adc
mov
sub
icebp
test
inc
pop
sub
pop
icebp
sti
int
inc
shlb
js
jo
inc
fldt
cmpsb
addr16
fcomip
inc
insl
mov
sahf
popa
js
push
ss
mov
pushf
cli
mov
pop
mov
mov
and
ja
jnp
repnz
xchg
addr16
inc
test
pop
lock
shll
adc
js
into
mov
or
push
push
mov
fstpl
jns
xor
test
or
iret
push
test
push
xchg
fucomp
lds
adc
or
sbb
cmp
bound
int
arpl
and
out
pop
cmp
lods
mov
xchg
int3
push
hlt
out
push
hlt
mov
bound
cmc
mov
flds
aaa
cmpsb
push
mov
mov
cltd
arpl
xchg
lods
cmp
cs
push
jns
shll
shll
and
mov
jae
lds
mov
add
mov
mov
lret
ret
push
lret
in
inc
push
out
jno
in
js
mov
xchg
xlat
jl
pop
jecxz
test
add
sub
add
mov
or
mov
add
loope
adc
cmp
mov
repnz
das
aad
xlat
jl
hlt
lods
clc
hlt
mov
cmp
pop
stos
jb
cwtl
stos
imul
leave
xlat
cmp
aad
dec
ret
gs
and
out
sbb
xchg
add
adc
leave
adc
pushf
mov
fstpl
cmpsb
sar
dec
mov
fildll
sub
cs
enter
xchg
es
in
insl
dec
shlb
xchg
out
sbb
jle
mov
xchg
inc
incb
sub
add
out
sub
pop
dec
add
loop
out
popa
fucomip
adc
and
addb
or
fnstenv
jae
cmpsb
repnz
dec
dec
cmp
ret
shrl
ljmp
icebp
mov
clc
mov
inc
or
xor
add
aam
movsl
and
and
inc
sub
pop
sbb
mov
ss
dec
mov
inc
stos
mov
cmp
in
push
nop
pop
dec
outsl
aas
aad
push
fidivs
pop
dec
sub
imul
frstor
mov
loopne
jo
add
pop
aaa
jo
pusha
ss
and
push
data16
stos
aam
movsl
ret
sahf
ret
lods
and
cmp
cmp
mov
ljmp
mov
dec
and
shl
std
inc
xchg
in
push
add
arpl
add
xor
add
pop
cmp
jmp
cmp
mov
fstpl
xor
fiadds
adc
into
xor
movsb
cmp
pusha
pushf
out
sbb
ret
lods
lea
lahf
shll
jbe
or
xor
xor
mov
fld
inc
mov
popl
pop
push
outsb
jb
xchg
dec
ss
stos
rclb
dec
scas
inc
inc
or
arpl
jmp
lods
push
icebp
xchg
mov
fstpt
sbb
lret
daa
push
add
movsl
xor
xor
xor
addr16
sti
push
icebp
sub
pop
cmp
mov
data16
push
aaa
bound
in
inc
jle
ds
mov
je
cmpsl
xor
sbbb
pop
repnz
ss
adc
and
adc
sbb
adc
push
out
xchg
imul
inc
cld
and
inc
daa
mov
mov
enter
popf
push
push
jb
aas
push
in
outsl
mov
je
ficoml
xor
or
enter
pushf
inc
pop
xor
test
dec
xchg
ret
xor
es
adc
sti
sub
adc
sbb
cmp
push
jecxz
inc
stc
add
xchg
xchg
mov
inc
shll
fsubrs
ja
dec
add
test
out
jbe
aad
xchg
jae
repnz
ss
pop
push
les
insl
loope
and
cmpl
scas
mov
xor
xchg
add
scas
dec
adc
xchg
es
scas
xchg
dec
inc
mov
pop
repnz
push
mov
mov
fwait
in
mov
or
sub
movsl
cmp
inc
cld
lcall
mov
test
in
addr16
add
push
pop
repz
xor
jmp
xchg
popa
xchg
dec
mov
sbb
shlb
bound
dec
add
push
mov
js
xor
insb
mov
shl
outsl
stos
rclb
sbbl
in
adc
sub
mov
imul
popa
mov
js
stos
adc
testb
mov
data16
mov
xchg
ja
adc
inc
iret
cwtl
or
jle
mov
push
fwait
pushf
or
pushf
xor
push
sarl
iret
sbb
fstl
int
cltd
jne
sbb
std
mov
movsl
hlt
rcr
inc
testb
loope
push
ss
movsb
lock
push
xor
pop
pop
lea
or
fbld
out
push
or
add
movsb
shl
sbb
jecxz
ss
scas
cmp
ffreep
xor
mov
scas
and
xchg
mov
or
and
mov
imul
out
sbb
mov
jnp
std
jae
ret
mov
push
ss
mov
lods
or
xor
ret
hlt
aam
jecxz
rorb
mov
xchg
icebp
fcompl
out
push
and
outsb
repz
xor
mov
sub
ljmp
fcompl
ljmp
jb
inc
sub
pop
dec
mov
gs
ret
cs
jmp
push
mov
cmc
mov
out
mov
loopne
sub
dec
rcll
jecxz
hlt
arpl
add
out
push
push
add
data16
sub
ja
cli
dec
imul
jne
shr
repz
movsl
pop
mov
adc
sahf
inc
pusha
fcompl
leave
jl
mov
out
jl
scas
mov
popa
jns
ss
xchg
xor
or
add
clc
jae
mov
ss
pop
out
or
movsb
mov
xor
mov
fists
mov
stos
test
mov
iret
enter
push
mov
pushf
adc
mov
inc
cmp
sub
in
ret
in
cmp
jge
or
cmp
sub
dec
pop
dec
mov
jne
daa
cld
jp
popf
jbe
ret
add
std
push
xor
fnsave
repz
nop
push
gs
in
fbld
test
jae
ret
imul
movsl
dec
movsb
loop
pop
mov
fisubrs
add
cltd
cmp
pop
push
jp
jbe
in
jecxz
xor
push
ja
rcrb
insl
fnsave
scas
cli
mov
xchg
inc
xchg
add
shl
out
xor
mov
out
push
inc
lcall
and
inc
add
je
pop
fwait
push
pop
test
loope
rcrb
sbb
rol
pop
ljmp
mov
jae
push
add
jnp
sti
push
xor
inc
xlat
sub
pusha
inc
lcall
and
mov
lcall
in
mov
inc
pushf
les
and
jnp
mov
aam
ljmp
pop
shlb
or
inc
lcall
and
or
push
jae
adcb
fdivl
pop
iret
mov
nop
popf
lahf
sbb
fsubr
pop
in
pop
jmp
jae
aam
pop
cmc
or
dec
loope
das
jge
pop
inc
outsb
cli
jp
mov
scas
push
aaa
adc
fists
sub
add
mov
sbb
and
pop
cmp
add
into
mov
lahf
rorb
jne
push
sbb
lds
inc
lret
xchg
inc
imul
mov
fimuls
rcrb
fwait
or
in
stos
adc
mov
pop
std
insl
loop
loopne
dec
dec
cmpsb
cmp
sub
sub
shrl
dec
mov
pop
xor
scas
test
mov
jecxz
loopne
es
rcll
and
call
test
xchg
lea
add
xchg
or
call
movsb
push
inc
or
dec
mov
push
inc
cmpsb
jnp
and
xlat
cmp
jmp
mov
lret
leave
and
lds
movlps
adcb
or
jnp
repnz
fwait
inc
imul
jb
dec
mov
enter
dec
pop
push
fistpl
mov
jmp
adc
leave
and
test
dec
das
scas
or
mov
shlb
mov
pop
scas
mov
xchg
mov
sub
pop
insl
loopne
jl
xchg
xor
imul
ds
inc
xchg
mov
sub
mov
adc
hlt
mov
jnp
mov
cmp
xor
or
stos
jle
xchg
sub
rol
movsl
xchg
pop
cmp
les
sar
movsb
push
out
mov
repnz
shrl
xchg
jl
dec
and
xchg
sub
mov
xchg
adc
xchg
lods
loop
lods
sbb
je
mov
cli
xchg
hlt
test
and
mov
jecxz
push
pushf
xchg
dec
xchg
lret
adc
pop
out
and
lahf
inc
mov
lock
sbb
jno
icebp
xchg
mov
out
dec
pop
sbb
dec
loop
dec
lock
inc
add
inc
dec
mov
lret
fsubl
in
int3
or
adc
jmp
push
jg
insb
jmp
jb
sub
scas
scas
inc
ret
pop
stos
mov
mov
addl
pop
cmp
loopne
pop
in
xor
push
movsb
cmp
test
addr16
bound
mov
adc
cli
dec
cltd
in
lret
ja
pop
xor
loopne
mov
addr16
sub
cld
or
sti
inc
ficompl
and
push
mov
lods
std
mov
test
fcmovnu
jbe
ljmp
aam
cli
aam
mov
push
ret
push
adc
xlat
push
cmp
fisubrl
sub
pop
fwait
clc
inc
cmc
inc
jnp
repz
pop
in
into
jae
out
fwait
inc
mov
cmc
xor
inc
or
push
je
dec
leave
pusha
add
out
pop
clc
adc
lods
mulb
mov
aas
push
mov
std
shl
lret
repz
and
pop
adc
ss
sub
aas
leave
sub
push
cltd
jbe
lahf
fs
loop
mov
sub
add
scas
mov
daa
xor
ficompl
aaa
popa
clc
push
push
clc
and
adc
sub
push
ret
xchg
sub
xor
in
nop
pop
addr16
dec
add
sub
mov
ss
jle
lods
jb
iret
stos
movsb
scas
xor
add
xchg
mov
mov
add
cmp
aaa
add
and
push
jmp
mov
loopne
stos
add
sbb
mov
cmp
adc
ja
arpl
xlat
subl
or
not
es
mov
and
adcl
mov
push
mov
mov
mov
xchg
stc
daa
arpl
mov
aas
jmp
jmp
mov
lahf
dec
inc
push
pop
xchg
sub
test
pop
jl
dec
in
push
ret
push
sub
or
cmp
xlat
mov
enter
outsl
nop
daa
mov
inc
xor
or
mov
pop
lods
jmp
mov
xor
sbb
ljmp
and
xchg
imul
int3
das
jecxz
pop
push
adc
cmp
adc
push
jmp
jecxz
repz
push
cmp
fiaddl
jp
mov
push
cmp
mov
sbb
xchg
cld
jno
add
mov
cltd
sub
stos
inc
insl
notb
stc
lods
xchg
xchg
hlt
inc
sub
and
xchg
add
jns
pushf
sub
lcall
jb
das
repnz
sbb
pusha
gs
dec
inc
jno
fidivl
outsb
push
cmpsl
lahf
ret
clc
sbb
shlb
push
out
or
aam
stos
xchg
clc
or
xchg
ja
inc
test
scas
dec
insb
ljmp
dec
stos
orl
divb
jb
push
insl
pop
mov
adc
and
dec
leave
aam
cwtl
pop
mov
push
push
mov
mov
dec
xchg
mov
sbb
jmp
mov
add
faddl
or
adcl
pop
mov
mov
jno
xchg
xor
in
jmp
jle
add
lods
and
fbld
sub
cmpsl
dec
loopne
outsl
js
mov
mov
adc
xor
ljmp
mov
movsl
pop
repnz
xchg
xor
dec
arpl
adc
shrl
inc
mov
mov
cmpsb
les
mov
lcall
xchg
cmp
pop
ret
add
cwtl
pusha
mov
test
push
bound
cmpsb
xor
cs
imul
inc
pop
lods
out
add
add
jae
scas
outsb
loop
pop
inc
ftst
cld
mov
xchg
roll
xor
pop
lret
push
clc
jo
adcb
cmp
stc
sub
lret
pop
fidivs
out
xchg
push
jmp
mov
cmp
xor
dec
mov
sub
push
hlt
fcomip
or
es
xchg
loop
sub
lcall
cmp
ret
pop
fsubrl
jecxz
js
js
cli
ficompl
adc
rolb
scas
cmpsl
xor
or
pop
roll
and
loop
cmp
add
pop
pop
jnp
push
cmp
sbbl
mov
jnp
jge
fistl
or
add
inc
imul
mov
mov
stos
mov
repz
imul
out
xor
cmp
pop
ret
psrlw
loope
or
andl
xchg
cli
inc
dec
repz
gs
push
ret
add
pop
mov
jbe
scas
add
add
in
xor
mov
loopne
pop
mov
jg
imul
icebp
lock
adc
gs
leave
test
repz
mov
xchg
add
ljmp
icebp
cmp
shlb
sbb
fildll
aad
sub
divl
jbe
push
jg
pop
and
add
jae
cmpsl
sbb
sbb
dec
lods
loop
or
bound
mov
push
int3
sub
dec
subl
adc
sbb
jnp
xchg
jmp
sub
add
out
add
sbb
and
push
les
mov
push
cmpsb
in
mov
not
imul
pop
add
mov
jge
mov
outsl
lret
xchg
or
pop
cmpl
mov
jle
mov
leave
push
pushf
push
scas
ljmp
fdivl
adc
xchg
repz
shl
orb
mov
pop
ret
add
and
test
push
or
fwait
aas
mov
mov
fisubs
aas
push
cmpsl
outsl
push
lods
mov
push
scas
mov
mov
cmp
je
pop
rcrb
cmpsl
je
sbbl
sbb
shl
sub
jb
pop
pop
adc
stos
in
std
dec
add
push
nop
jmp
stc
mov
loopne
das
or
sbb
cmp
xlat
popa
test
jnp
adc
loopne
xchg
and
test
mov
xor
push
push
gs
jg
push
sti
jbe
mov
pushf
loop
sbb
xchg
scas
sahf
clc
test
xchg
push
sti
fmuls
test
xor
insl
in
arpl
cmp
jne
cmpsb
cmpsl
popa
fdivr
shr
mov
fimull
jmp
mov
sahf
mov
js
or
aas
push
lret
mov
mov
imul
rorb
stos
pop
lods
xchg
xlat
mov
repnz
enter
test
jnp
ret
push
outsl
shl
add
mov
xor
mov
les
pop
repnz
add
mov
lea
jmp
imulb
or
pop
test
or
pop
lret
cli
jne
cld
mov
cs
outsb
push
and
fnsave
cmpsl
fisubrs
jae
adc
dec
lock
shr
sub
pop
cmp
and
outsl
gs
or
insb
sbb
or
nop
mov
pop
jecxz
add
nop
sti
pop
ret
push
mov
push
stos
sbb
lds
call
imul
and
pop
scas
cld
push
push
aad
shrb
jecxz
sub
xchg
mov
movsb
push
xor
cmp
xchg
testl
repz
push
cmp
jg
popf
mov
dec
clc
pushf
call
cmp
push
clc
repz
out
xchg
or
jmp
mov
push
addr16
in
leave
imul
out
in
push
fbstp
cmp
xlat
lret
xor
push
into
arpl
out
arpl
xlat
mov
lea
subb
fisubrl
add
cld
xchg
ret
cwtl
xor
in
out
decb
cltd
jl
iret
mov
mov
int3
and
push
adc
test
push
clc
test
sub
mov
push
xchg
movsl
inc
add
push
and
jnp
or
sub
mov
scas
jo
cmc
sub
ds
idivb
movsb
mov
mov
aad
inc
ret
andb
sbb
dec
sbb
lret
push
push
and
and
mov
inc
dec
and
shrl
jb
push
push
insb
in
mov
lock
push
lods
inc
add
fidivrs
rolb
mov
out
add
pushf
std
jo
imul
sbb
loope
fs
mov
mov
loopne
jns
stc
mov
ja
jecxz
xchg
pop
test
sub
jns
mov
arpl
pop
out
cmpsl
shll
push
mov
sbb
xchg
xchg
sub
xor
pushf
jno
mov
aas
sbb
ret
dec
test
sbb
aas
movsl
xchg
stc
mov
leave
pop
sbb
inc
and
push
movsl
mov
test
jg
stos
mov
xchg
lods
xor
mov
jae
stc
xor
sub
cltd
xchg
xor
dec
sub
iret
and
das
test
fnsave
push
ds
or
pop
dec
and
dec
xchg
dec
xlat
mov
cmp
mov
jne
aas
dec
push
pusha
xor
mov
jl
sbb
icebp
cld
lcall
jne
sub
aas
gs
xor
inc
pop
push
jo
clc
xchg
jae
aaa
in
pop
rcrb
lahf
add
scas
and
hlt
jbe
or
fisubs
mov
sub
inc
inc
jmp
loopne
dec
rcrb
push
outsl
inc
aaa
push
movsb
push
shrl
adc
insl
int3
out
cmp
loope
mov
xchg
xlat
loope
andb
dec
bound
cmp
adcb
scas
push
insb
test
ds
sti
in
inc
int3
pop
mov
jne
imul
push
and
pop
push
in
les
xor
or
int
mov
cltd
jmp
fs
push
int3
adc
jnp
repnz
call
xchg
or
xchg
dec
mov
add
nop
aas
inc
fisubrs
out
mov
ret
aad
ss
xchg
sub
mov
jecxz
loopne
loop
iret
cmp
lds
xorl
jge
mov
adc
stos
repnz
aam
push
jne
icebp
stos
add
ret
shlb
bound
mov
mov
cmp
lds
fxch
fmull
push
inc
and
xchg
dec
pop
xor
add
or
xor
lods
outsl
and
mov
popf
ljmp
retw
sarl
adc
mov
jp
shrl
sub
inc
leave
jns
pop
mov
decb
lahf
sub
repz
imull
lret
add
xor
push
dec
jmp
addb
dec
movsb
pop
and
aad
dec
lods
add
or
cmp
test
and
dec
fmuls
push
mov
bound
rclb
mov
scas
add
je
imul
lods
test
add
outsl
jne
bound
push
pop
jbe
adc
xchg
cmp
adc
fldl
jo
insl
lds
jmp
pop
cmc
into
nop
and
mov
adc
loop
lfs
add
jmp
adc
inc
daa
in
xor
xchg
out
mov
icebp
mov
add
adc
mov
outsb
test
cs
cmp
sub
inc
sti
out
repz
cmp
or
pop
xor
sbb
cltd
mov
add
sbb
orb
push
cs
cmp
mov
mov
mov
out
or
jne
orb
or
test
xchg
movsl
xchg
jmp
or
mov
dec
or
dec
ja
aad
and
inc
xchg
out
jnp
orb
test
sbb
outsl
outsl
adc
jp
ja
push
push
fisttpll
into
testl
cmp
data16
mov
cmp
inc
push
fldz
xor
into
mov
sti
aam
mov
or
popf
mov
and
sub
lret
mov
mov
mov
pop
xor
dec
and
dec
mov
lds
sub
bound
xchg
xor
test
cmc
popf
icebp
pop
stos
mov
push
cmp
xchg
inc
fmull
les
std
sbb
shrl
inc
in
adc
or
frstor
hlt
pop
iret
mov
push
cs
sbb
cmp
push
cmp
jle
xchg
mov
lock
lcall
push
sbb
sbb
mov
sahf
xchg
inc
lods
repnz
and
cli
pop
push
stc
aam
lods
ja
sbb
fiaddl
test
adc
push
pusha
push
jmp
adcl
or
fmull
out
inc
imul
int3
jg
sbb
xchg
jle
push
icebp
xchg
fistps
cld
in
aaa
dec
and
inc
fnstenv
in
pop
repz
add
jae
mov
fisubl
cld
push
hlt
fnsave
std
mov
stc
pop
cwtl
rcr
xchg
adc
jge
mov
jbe
pusha
iret
les
sti
std
xlat
loopne
adcl
lahf
test
mov
fstpl
cs
mov
loope
adc
sub
jb
ljmp
jo
push
push
lds
cltd
notl
jg
lods
dec
inc
dec
out
orb
sbb
ja
cmp
call
subb
lahf
loope
outsl
dec
xor
mov
dec
fstp
ret
cmp
pop
mov
fsubs
sbb
jne
push
xchg
and
pop
mov
dec
xor
xor
xorb
aaa
lret
iret
loop
sbb
mov
mov
lods
mov
cmp
push
loop
sub
xchg
das
movsl
jb
rcrl
or
out
pop
lods
push
mov
arpl
pushf
cmc
and
inc
js
mov
push
out
stos
dec
loope
pop
xchg
jp
cmp
and
cs
iret
pop
dec
mov
cmc
sub
test
jl
cmp
pushf
sub
insl
test
xor
fstpt
lds
and
or
scas
dec
and
pop
in
cmp
push
push
inc
fldl
jle
ss
lods
aam
test
xchg
cmp
or
cmp
and
jge
dec
das
ja
aas
ss
mov
push
xchg
inc
push
push
out
fwait
popa
cmp
or
xchg
lret
cmp
js
rep
adc
cmp
data16
cmp
pop
xor
movsl
add
sti
or
daa
mov
cmp
lret
cltd
and
daa
outsl
and
jmp
test
mov
push
orl
push
movsl
cmp
mov
inc
mov
movsb
jnp
stos
dec
xor
mov
push
xchg
sub
add
pusha
or
mov
cltd
test
mov
push
dec
inc
and
push
cmp
fidivl
cmp
imul
repz
mov
fiaddl
mov
add
cli
lods
inc
ficomps
movq
cmp
jnp
icebp
mov
mov
and
sub
rolb
jb
daa
jle
push
aad
mov
jns
sub
loop
lods
sub
cltd
lcall
jle
or
rep
gs
leave
xlat
push
int
add
cmp
or
int
jns
cmp
dec
sub
sbb
pop
call
insb
les
sub
les
pop
add
jmp
pop
mov
or
jp
vmovups
test
and
xlat
shrb
cld
dec
xrstors
push
add
inc
jecxz
lret
cmp
add
xchg
pop
fwait
jb
orl
or
xchg
stc
dec
fisubrs
mov
xor
and
mov
sub
mov
rclb
mov
jo
mov
lahf
mov
aaa
mov
push
ds
mov
out
aam
and
repz
cmpb
jnp
or
dec
popa
mov
pop
push
mov
inc
mov
pop
push
cwtl
mov
addr16
sbb
lcall
pop
fdiv
mov
jp
jbe
fidivrs
jecxz
push
and
fdiv
dec
add
popf
ss
mov
stc
adc
cmpsb
jns
mov
add
add
ds
nop
inc
push
sbb
dec
adc
dec
sbb
fsubrl
test
icebp
stos
adc
jnp
mov
or
popa
iret
adc
cmp
inc
xchg
scas
dec
sub
lret
adc
push
sbb
outsl
xor
icebp
lock
sbb
sar
or
pop
les
test
cmp
iret
mov
jns
mov
lods
test
xchg
pop
or
cmp
add
fwait
cmpsl
xchg
inc
xlat
enter
xchg
pop
pop
push
hlt
sarb
jbe
jmp
mov
adc
ja
int
dec
fdivs
and
adc
iret
stos
fstpt
lret
push
in
sbb
out
xorl
mov
xchg
addb
mov
ljmp
adc
cli
xchg
je
adcl
adcl
inc
xchg
sti
mov
mov
adc
sub
inc
cmp
dec
sahf
pop
pop
mov
mov
mov
sub
jl
test
outsl
add
mov
rolb
out
rol
xchg
sub
cwtl
jae
dec
out
std
dec
fsubrp
movsb
scas
ds
int
sbb
scas
outsb
icebp
popa
pop
lret
sub
outsl
dec
and
xchg
or
imul
or
shrl
sub
cwtl
sub
loope
mov
push
sbb
cld
xchg
sbb
and
loop
jge
cmpsl
ret
inc
mov
sbb
pop
pushf
cmp
cmp
cld
out
aas
mov
jno
test
mov
fisttpll
sub
fldl
test
mov
mov
pop
mov
pusha
out
and
jle
jle
push
js
add
push
mov
out
pushf
jmp
jbe
mov
shll
mov
in
and
and
dec
pop
bound
test
mov
dec
pop
adc
pop
push
inc
loop
repnz
pop
shl
int
scas
pop
mov
mov
mov
and
bound
xchg
add
stos
mov
cmpsl
xorb
data16
sub
mov
imul
loop
sbb
or
mov
push
cmpsb
imul
imul
pop
mov
mov
xor
inc
add
loopne
jno
or
fsubrs
fadds
pop
popf
lret
movsb
addr16
scas
dec
repz
out
push
cmpsl
lea
fldln2
pusha
stos
idiv
jno
test
cli
adc
mov
jle
repnz
sub
rcll
bound
sbb
sbbb
pcmpgtb
int3
add
pop
xchg
adc
sub
inc
test
push
shl
int
inc
test
inc
out
andl
inc
inc
sbb
xchg
dec
jmp
jns
pop
cmp
mov
mov
lahf
mov
push
rolb
push
xchg
jecxz
lock
cmpl
lds
and
in
xor
lcall
xchg
into
pushf
inc
pop
mov
scas
jno
mov
sbb
mov
sub
js
xchg
ror
jo
pop
lock
inc
jl
stos
cmp
fdivl
pushf
dec
aad
lods
cli
test
loopne
jmp
aaa
ds
clc
out
sbb
fsubrl
in
cltd
add
es
aam
fbstp
sub
mov
and
movsl
mov
fisubrs
xchg
sub
xor
addr16
add
aam
fmull
push
fiadds
pop
and
test
and
cmp
fisttpl
scas
cmp
and
scas
sbb
daa
add
cs
fidivl
gs
clc
addl
movsb
repnz
push
fwait
fs
or
mov
bound
in
xchg
data16
pop
hlt
push
add
roll
into
push
outsl
mov
jne
cmp
pop
pop
fdivl
addl
adc
arpl
iret
lcall
mov
xlat
clc
cmp
mov
pop
out
lds
xchg
in
adc
outsl
xchg
fidivrs
icebp
jl
push
mov
mov
insb
mov
pop
mov
push
xor
pop
nop
je
hlt
jno
loope
or
push
dec
lret
sahf
mov
repz
out
mov
xchg
nop
push
mov
loopne
repnz
mov
xor
insb
popf
jno
lods
ljmp
es
pop
or
add
inc
sub
cs
lret
mov
imul
inc
imul
fstl
rol
cmpsl
xlat
push
test
das
pop
dec
int3
rclb
fldl
cmc
andb
push
stos
cli
xchg
fnsave
dec
cmpsl
mov
dec
dec
test
and
movsb
cli
xchg
jmp
in
jb
fwait
sub
stc
xchg
push
sbb
add
xchg
loop
jne
push
or
sub
mov
mov
dec
movsb
lods
or
sti
mov
pop
pushf
or
sbb
insl
sahf
xor
rcrb
hlt
lret
jge
adc
lcall
jno
adc
mov
int3
enter
out
push
out
dec
add
push
jae
dec
lock
pop
mov
rol
in
ret
lods
push
sti
sub
xor
or
pop
xchg
pop
cmp
call
dec
ljmp
daa
lea
mov
int3
dec
add
or
lret
xchg
adc
mov
sahf
jns
mov
sbb
and
dec
mov
dec
loopne
stos
jns
push
inc
adc
insl
mov
inc
push
stos
push
ljmp
jno
mov
repz
sub
aad
push
push
lret
dec
jecxz
out
mov
outsl
hlt
loopne
adc
adc
arpl
cld
aad
mov
inc
sub
test
jl
and
lock
andb
cmp
jecxz
add
dec
push
mov
ret
mov
in
mov
or
adc
mov
gs
pop
xor
in
push
in
adc
sub
lret
push
add
adc
stos
cwtl
in
push
ja
fwait
arpl
and
test
mov
in
push
sub
cli
mov
xchg
enter
insl
fldl
jmp
aam
inc
pop
push
shrl
jbe
mov
mov
test
push
cltd
mov
gs
fcoml
or
cld
les
inc
addr16
ret
loop
cmp
xchg
lods
imul
and
lret
mov
bswap
or
pushf
scas
pop
adc
dec
push
mov
idivb
pop
in
pop
add
test
gs
inc
cs
push
hlt
div
dec
loopne
or
or
into
addr16
jmp
jge
mov
xchg
sahf
or
sbb
int3
mov
loop
adc
mov
dec
mov
and
or
inc
adc
nop
dec
fistpll
cltd
andb
or
pop
ljmp
jae
sbb
push
les
rcll
add
xchg
in
mov
lods
push
sbb
dec
push
sub
ljmp
inc
push
adc
push
inc
xchg
nop
imul
imul
aam
mov
fwait
cmp
sub
test
sahf
adc
sti
stos
jge
inc
push
xchg
dec
test
xchg
cli
fadds
out
or
adc
sub
cwtl
xchg
mov
enter
mov
pop
inc
add
cltd
pop
fucomi
mov
test
mov
add
popa
fdiv
sahf
sub
iret
pop
addr16
cmp
or
pop
or
insb
sbb
repz
shrb
inc
ljmp
loop
call
cmp
push
inc
inc
je
add
xor
lcall
cmp
jge
loope
adc
test
addr16
push
inc
imul
pop
jae
sbb
dec
ljmp
les
mov
aam
mov
sti
jg
cmp
fdivrs
push
push
xchg
push
insb
pop
out
xor
repz
jns
lahf
dec
adc
adc
mov
cmc
push
mov
pop
lods
lock
sti
cmpsl
xor
fimuls
sbb
mov
push
and
inc
shrb
pop
loope
add
lret
sub
pop
xor
mov
and
xchg
stos
pop
xor
int
jns
outsl
mov
cmp
or
loopne
mov
sub
adc
adc
add
mov
dec
inc
fstpt
lods
pop
orl
mov
std
xchg
or
stos
out
add
out
jns
cmp
dec
push
mov
cltd
scas
pop
pop
jne
adc
mov
movsl
sbb
jnp
je
mov
loope
pusha
add
inc
push
adc
xchg
jae
lcall
cs
sahf
nop
mov
fstpt
jge
jl
jmp
lahf
pop
cmp
xchg
out
inc
push
mov
cmp
hlt
adc
popf
dec
or
mov
push
test
test
sbb
sti
adc
xor
cltd
in
dec
xor
pminsw
add
jnp
mov
fstpt
push
push
inc
jmp
dec
loope
fdivs
mov
pop
loope
test
mov
fnstsw
or
mov
insb
inc
mov
fwait
mov
subl
ja
mov
std
pop
lods
mov
pusha
lods
outsl
mov
int3
xchg
mov
idivb
sbb
mov
jb
nop
pop
or
pmovmskb
pusha
inc
xchg
movsl
sbb
mov
cmp
movsl
stc
jae
inc
mov
push
mov
jmp
insl
xor
ljmp
lahf
push
fcoms
call
insb
mov
into
xor
add
test
mov
pop
xchg
pop
mov
xor
mov
push
nop
mov
mov
and
mov
xor
xor
cmp
test
push
mov
idiv
ljmp
xlat
or
sarb
aaa
push
test
fstl
das
adc
stc
cmp
dec
imul
lret
int
dec
insb
push
fcmovnb
cmp
data16
adc
test
cmp
xor
das
roll
xchg
or
add
sub
insl
inc
adc
jno
movsl
cltd
mov
inc
ljmp
enter
insl
jbe
pop
imul
adc
ss
fnstcw
outsl
or
push
pop
insb
pop
sahf
cmp
pop
pop
nop
imul
outsb
jp
aad
pushf
mov
pop
and
push
stos
out
inc
mov
jg
into
mov
arpl
fcmovbe
mov
adc
aaa
or
mov
aam
add
jb
pusha
data16
and
cmp
sub
add
sbb
sbb
add
into
sbb
cmp
lds
movsl
cmp
sbb
jl
sbb
inc
adcb
sub
cs
arpl
imul
dec
adc
push
insl
jmp
leave
test
mov
adc
inc
test
inc
xchg
jne,pn
mov
xor
lods
subl
xchg
fists
push
add
shlb
fsubrl
lods
fisttps
sub
mov
rorl
enter
push
inc
push
es
xor
outsb
xorl
add
cmp
cmp
sti
push
inc
inc
mov
inc
sub
nop
push
sbb
popf
aas
pop
xor
sahf
xor
pop
pop
mov
stc
neg
leave
add
cmp
jae
mov
pop
popf
out
dec
gs
push
adc
cmpsl
sub
repz
or
dec
loop
les
loop
rcpps
add
into
pop
out
sti
pop
or
ds
xor
inc
std
push
je
push
xlat
mov
aaa
cmp
mov
xor
inc
or
sub
inc
addb
pushf
xor
mov
fdivr
es
xlat
popf
je
xchg
mov
mov
je
ljmp
lea
cmp
lret
xlat
or
cmpsl
xchg
mov
mov
aaa
lock
out
push
pop
mov
stos
add
xchg
scas
mov
adc
jns
cs
adcb
in
inc
movsl
adc
mov
aad
lahf
cmp
lcall
mov
inc
fcoml
jae
sub
vandpd
or
and
push
data16
xor
in
jns
mov
icebp
add
aam
mov
movsl
es
sub
ljmp
pop
sub
mov
fstpt
cmp
adc
jg
adc
and
xor
adc
xchg
sub
ror
jno
shr
push
cli
ret
mov
test
pop
adc
or
mov
jbe
test
add
dec
pop
ss
lahf
mov
mov
call
or
sar
jl
xor
fnstenv
rorl
pop
ljmp
lds
pusha
adc
push
cltd
or
in
pop
xchg
push
into
mov
adc
and
aaa
dec
xchg
xor
pop
mov
andl
cmp
or
jne
stc
cmpsb
add
shlb
jmp
aas
fisttpll
sbbl
cmp
notl
rorb
addr16
lock
out
cmp
sbb
and
es
out
cmp
push
pop
ds
xor
data16
and
pop
push
mov
shl
pop
fdivrl
mov
ret
xchg
das
cmp
xchg
and
or
shll
jno
out
loopne
test
adc
data16
xchg
adc
in
test
lret
push
call
les
push
add
cmp
ds
xchg
out
jno
xchg
mov
pop
testb
sbb
pop
sbb
add
hlt
mov
dec
pop
in
mov
or
dec
subb
or
hlt
sub
jbe
clc
imul
and
dec
and
push
addr16
adc
add
fucomip
dec
or
xor
mov
push
inc
pop
jbe
mov
pop
mov
inc
fnstenv
and
scas
adcl
lods
dec
and
sbb
mov
push
ret
dec
cmp
aad
test
call
lods
dec
das
lods
js
jl
call
jb
mov
and
add
lea
adc
mov
std
jnp
sub
push
clc
adc
fidivl
icebp
sub
push
xchg
subl
cmp
or
sub
mov
or
xchg
cmp
outsb
das
pusha
cmp
jae
mov
jmp
xchg
jge
and
dec
insl
repnz
insb
stos
sahf
repnz
inc
jmp
cld
in
shll
cwtl
lds
outsb
adc
mov
and
push
aas
aaa
pop
push
imul
mov
push
xor
mov
add
hlt
mov
adc
stc
and
and
icebp
push
inc
push
call
cmp
outsl
shlb
leave
add
loopne
push
mov
inc
lods
aas
cltd
cmpsb
lds
insl
inc
rcrb
es
xchg
push
push
mov
mov
shrl
lods
repnz
lock
mov
lcall
sbbb
daa
adc
jne
adc
nop
sbb
out
mov
lea
jg
clc
insl
mov
pop
xor
movsl
aam
mov
push
das
jge
cmpsl
jg
stos
cmp
sub
or
dec
int
dec
dec
sbb
pushf
mov
and
sub
lret
push
in
push
out
andb
sbb
or
adc
jnp
cmp
sub
pop
pop
or
and
ret
jnp
mov
push
xor
cwtl
fiaddl
xchg
pop
inc
mov
dec
xchg
std
push
mov
popa
fnstenv
into
or
ret
int3
test
jl
ljmp
fwait
jae
add
bound
pusha
sbb
movntq
cmp
inc
xlat
test
or
daa
pop
cmp
lock
cmp
jne
into
xchg
mov
es
inc
xor
stc
and
mov
xor
lods
fnstsw
data16
jne
sbb
mov
jae
fdivp
aas
sbb
add
insb
mov
mov
decb
dec
inc
pop
bnd
jbe
in
mov
inc
adc
xchg
notl
xchg
sub
cmpb
inc
xor
jmp
movsb
cmp
divl
outsl
movsl
pushf
push
outsl
push
push
mov
std
mov
insb
lds
xchg
fdivr
movsb
jge
hlt
fisubrl
pop
add
jle
repnz
dec
xchg
add
mov
addl
cld
cmp
dec
jmp
shl
xor
clc
push
test
rcrl
adc
or
jl
add
dec
sub
mov
jecxz
inc
pop
mov
mov
cmp
jge
lret
pop
jecxz
or
or
and
pop
or
cmp
mov
mov
mov
and
outsb
push
inc
std
fwait
push
pop
scas
testl
cmp
dec
mov
jae
fstpl
ljmp
test
jge
shll
pusha
bound
push
movsl
jecxz
loop
loopne
inc
push
div
adc
sub
loop
lret
sub
adc
mov
fldcw
loop
je
dec
imul
sti
or
loop
shlb
and
loope
dec
cmp
mov
shl
lods
in
jecxz
adcl
andb
dec
push
push
jnp
test
lock
shll
pop
adc
xchg
jb
fs
repnz
mov
bound
sbb
and
sbb
cmp
ss
lea
xchg
stos
sahf
popa
in
inc
movsl
lds
insl
sbb
or
fstp
sbb
int3
arpl
jp
sbb
cmp
and
push
int3
adc
imul
lds
or
xor
loope
adc
dec
pop
xorb
iret
and
bound
sbb
into
popf
mov
iret
data16
or
lods
clc
push
jg
data16
imul
out
outsl
shr
fwait
and
cmp
inc
fxch
pop
xchg
dec
popa
pusha
xchg
sarb
push
sub
lea
jp
pop
clc
cmpsl
adcl
jg
cltd
cltd
xor
mull
push
mov
lret
stc
popf
int3
data16
sbb
add
adc
fmul
dec
pop
jae
xchg
push
das
leave
int
loope
rcll
mov
mov
ret
out
pusha
test
daa
outsl
pop
test
movsb
cmp
push
mov
fsub
inc
fildll
dec
mov
or
test
out
stos
xchg
std
in
xchg
leave
ret
adc
enter
call
xor
shll
push
cld
add
dec
dec
and
mov
push
push
fdivs
out
stos
ds
leave
sbb
push
les
add
cwtl
mov
pop
jnp
aas
mov
or
jl
clc
adcl
inc
lods
and
incl
rorb
lea
xor
jo
out
push
xchg
mov
shrl
pop
loope
stos
or
dec
and
lock
adc
push
jnp
push
adc
xor
xor
js
mov
dec
push
xlat
push
popf
enter
je
jle
fistps
jg
pop
mov
or
es
test
xor
push
sub
loopne
dec
jecxz
adc
mov
insl
cltd
cmp
and
shrl
sbb
jecxz
jbe
fmuls
imul
cmp
fstpl
mov
jae
push
jle
mov
push
out
test
push
sbb
roll
pop
imul
sti
cmp
pop
dec
scas
adc
fdivrl
push
std
fcoml
jnp
sub
xchg
push
loopne
mov
jnp
push
pop
sbb
xchg
mov
pop
jp
jmp
lock
cld
pop
in
gs
ror
adc
daa
xchg
fsubrs
pop
and
pushf
push
dec
inc
add
cmp
cmp
popf
pop
jecxz
shrb
dec
out
int
dec
cmp
pop
adc
push
and
sbb
jle
sbb
imul
sbb
in
cli
test
filds
add
xchg
outsb
mov
fstl
cmc
mov
fldt
xchg
mov
ljmp
enter
sub
or
int
repz
mov
add
mov
jmp
movsb
dec
jo
cld
int3
xchg
xchg
sbb
test
cmc
fistl
push
push
lcall
imul
dec
dec
pop
shrl
cmovle
add
in
pop
stos
fnstsw
sub
mov
imul
sub
daa
cli
fdivs
pop
imul
mov
sbb
push
sub
dec
mov
pop
adc
stos
sbb
mov
xor
cmp
roll
arpl
pop
cld
mov
es
pop
xchg
xchg
sbb
sarb
dec
loopne
sbb
addr16
adc
ret
cmp
xchg
dec
mov
ja
pop
jecxz
arpl
fwait
int
cs
inc
movsl
jl
in
in
and
pushf
add
loop
int3
dec
stos
mov
xchg
nop
daa
lea
pop
addb
outsl
mov
xchg
repz
push
mov
ret
fcomps
jmp
or
aam
out
sahf
jne
push
cld
lcall
shll
nop
arpl
ret
sbb
sahf
stos
shll
push
adc
lods
lret
notl
sbb
xchg
mov
pushf
jp
ficomps
data16
loopne
jns
sbb
int3
mov
shrb
setg
fisttpl
test
bound
jne
dec
aad
adc
push
or
ljmpw
loope
jle
xchg
lea
in
rolb
adc
les
sub
mov
ret
rcrb
add
jno
icebp
cmpsb
mov
xchg
fadd
das
xchg
data16
enter
int
es
mov
enter
jbe
pushl
and
xchg
stos
pop
mov
movsl
mov
shl
jp
data16
loop
mov
test
loopne
sbb
sbb
and
sarb
xor
pop
shl
xor
adc
inc
sbb
js
es
ja
lds
sbb
popf
ficoms
fistl
add
mov
inc
repz
and
cmp
not
minps
aad
ret
jg
xorb
repnz
loopne
sarb
outsb
cmpsb
push
pop
jne
xchg
mov
das
lea
gs
aas
bound
xchg
cmp
and
cld
movsl
or
sub
fidivrl
fstpt
cld
mov
ja
push
lods
adc
mov
lcall
cmp
aaa
sbb
cmp
jle
add
imul
daa
stos
mov
stos
mov
and
sbb
pop
or
fists
test
sarl
scas
inc
and
int3
jg
out
dec
mov
mov
aam
insl
mov
fisubl
shrb
sbb
cmp
aad
dec
and
jnp
mov
repnz
adc
int
xor
xchg
adc
inc
lods
aad
incl
and
insw
pop
leave
sub
gs
in
xchg
jmp
adc
pop
or
jp
jle
loop
xchg
push
pushf
mov
lods
dec
aaa
or
je
mov
jae
in
dec
test
inc
add
loope
or
inc
dec
pop
and
cmp
loop
or
ret
xchg
pop
pop
nop
dec
pop
stc
fisubrl
daa
mov
jb
inc
fsubl
inc
pop
cmp
movsb
test
jmp
or
pop
mov
pop
fmuls
je
test
push
mov
repnz
popf
loope
scas
push
imul
jge
xchg
mov
lock
push
shr
movsl
mov
addl
fwait
mov
mov
xchg
and
push
pmovmskb
mov
dec
xchg
add
out
and
enter
psrad
mov
jp
xchg
sub
pushf
sub
sub
inc
fs
jne
add
out
and
hlt
inc
dec
and
add
repz
xor
jno
test
ret
cli
out
pop
lcall
subb
icebp
xor
inc
aad
add
xchg
ror
or
jmp
cmp
mov
inc
out
sbb
repnz
data16
sarl
xchg
bound
adc
push
dec
js,pt
mov
into
cmpsl
sub
cmpsb
nop
mov
in
xchg
sub
ret
sbb
xchg
outsb
sbb
popf
mov
shlb
mov
rol
mov
aam
pop
insl
ret
xor
jb
fcmove
adc
cmp
lahf
push
ljmp
pop
xor
imul
inc
mov
xchg
cmc
pop
icebp
cmp
or
xchg
outsl
or
pop
sub
in
push
out
pop
test
popf
or
inc
xchg
sub
in
pop
ror
xor
mov
push
ljmp
pusha
dec
in
fwait
xchg
sub
sub
jnp
xchg
mov
cmp
movswl
mov
arpl
das
cli
lods
push
jae
daa
push
inc
lock
dec
adc
inc
and
cmp
push
ret
or
sub
data16
imulb
dec
xor
sbb
test
ss
fdivl
gs
push
in
push
add
lods
aad
test
xor
cmc
mov
cmp
js
adc
lds
fsqrt
jge
and
pop
sub
inc
int3
sbb
icebp
cmpsb
push
jmp
enter
mov
pop
mov
xchg
mov
out
out
inc
jo
lret
xor
pop
sub
dec
addb
cmp
mov
fucomip
xchg
add
xor
adc
cwtl
mov
pusha
out
cld
movsb
inc
dec
and
jl
and
test
mov
pusha
sub
xor
movsl
cld
cmp
icebp
pop
cmp
out
jns
shl
insw
sub
xchg
arpl
sti
sub
insb
jle
inc
inc
in
mov
adc
xor
mov
aad
jne
push
movsl
cld
inc
xlat
jnp
sbb
into
fbstp
xlat
push
mov
mov
cs
shlb
repz
or
xchg
andl
or
jl
subl
mov
push
xchg
jmp
mov
xchg
insb
pcmpeqw
or
xchg
mov
lahf
jne
sbb
dec
mov
pop
mov
pop
leave
mov
out
jg
xor
std
dec
loopne
lahf
out
cli
movhlps
push
filds
push
divb
and
mov
out
sub
or
subl
js
jo
shl
cmc
cltd
jnp
lret
sbb
cwtl
test
loope
mov
mov
int
imul
lcall
and
xchg
jecxz
dec
lcall
mov
test
arpl
call
sub
mov
xchg
test
xor
mov
jl
jle
dec
mov
sahf
jne
insl
lret
sub
xchg
in
push
bnd
pop
or
and
pop
dec
stos
jbe
xchg
stos
js
clc
pop
cltd
mov
ret
xor
xchg
mov
cmp
jae
or
xchg
popa
inc
ficoms
pushf
cmpsb
and
or
xor
in
pop
movsl
out
testl
scas
sarl
pop
pop
jno
push
jecxz
or
mov
sub
push
int3
mov
aaa
inc
pop
adc
sbb
inc
aaa
mov
mov
nop
dec
push
inc
mov
sahf
cmp
leave
shll
sahf
ret
cld
jge
mov
into
movsb
mov
mov
sub
inc
repz
aas
dec
cmp
lcall
pop
mulb
daa
jb
mov
jae
add
negb
popa
inc
icebp
xchg
add
push
and
jae
sbbw
push
stos
mov
mov
push
inc
data16
fcomps
pop
adc
adcb
push
xchg
add
xor
movsb
imul
sahf
data16
cld
cmp
test
sti
mov
xor
js
or
es
pop
arpl
and
mov
push
out
lds
rcl
mov
fidivrl
push
xlat
mov
mov
mov
mov
stc
cltd
aas
rcll
add
or
stos
ret
jne
dec
lods
inc
cwtl
enter
dec
icebp
inc
fimuls
sub
pop
mov
jg
inc
outsb
and
pop
push
add
adc
or
insl
icebp
sbb
cmp
jo
sti
sub
mov
lds
sub
data16
xor
movsl
mov
pushf
fwait
push
ljmp
outsl
rorl
mov
imul
jo
mov
shll
sbb
push
and
push
rorb
shrb
insb
jp
imul
cmc
hlt
add
call
std
clc
stos
add
int3
call
mov
imul
mov
shll
or
mov
mov
push
inc
adc
push
xlat
mov
and
sbb
push
ljmp
cmp
ja
sbb
imul
mov
fsubr
cmp
rcl
insb
inc
das
addr16
mov
lods
bound
jae
inc
xchg
repnz
sub
mov
data16
adc
clc
out
xchg
xchg
and
cs
sub
test
push
mov
cmp
add
in
add
mov
shll
lods
adc
push
or
mov
push
or
cld
fiadds
pop
xlat
jns
subb
mov
jb
cmpl
adc
sbb
pushf
mov
mov
lds
leave
mov
out
xchg
cld
xchg
shll
and
test
mov
jge
adc
pop
dec
mov
dec
adc
mov
pop
loopne
mov
inc
jnp
icebp
nop
movsl
aam
push
xor
or
std
xor
test
aas
push
pushf
jae
jge
in
cmp
inc
popa
adc
sbb
xor
mov
call
int3
pop
mov
add
add
int
xor
sbbl
or
iretw
andl
test
mov
arpl
movsb
push
mov
mov
je
std
push
mov
movsb
std
mov
fnstsw
cli
bound
and
add
dec
mov
cmp
push
mov
shll
and
call
sub
push
leave
nop
add
adc
mov
adc
xor
and
loopne
daa
out
mov
sub
jmp
and
popa
into
mov
in
xor
inc
push
cmp
icebp
pop
add
sbb
enter
jo
or
stos
loope
cmc
int3
imul
inc
jmp
add
mov
xor
jg
or
ficomps
xchg
scas
aam
adc
jb
xchg
add
pop
cmp
jge
xchg
insb
mov
sahf
ljmp
ret
jl
fwait
push
sbb
outsl
sbb
sub
jp
pop
dec
fimull
lods
pop
icebp
pop
mov
test
repz
ret
pop
mov
sbb
mov
mov
pop
shlb
cmp
jp
mov
mov
fidivl
push
stos
xchg
jle
repz
lea
mov
or
jne
dec
outsl
daa
in
and
pop
or
jmp
outsb
push
xchg
nop
jl
daa
hlt
ja
pop
ljmp
dec
std
xchg
jle
pop
je
loopne
call
out
sub
mov
pop
add
cmpsl
jl
loop
icebp
dec
dec
inc
iret
ja
or
out
sbb
outsl
lea
loopne
pushf
push
jno
push
les
jns
sbbb
loopne
ficoms
push
repz
in
jle
pop
cmp
dec
mov
ficompl
and
in
jo
into
push
add
sub
mov
sbb
jno
sub
inc
outsl
pushf
inc
jmp
mov
in
stos
and
scas
sbb
rclb
sahf
pusha
add
inc
jbe
and
imul
shrl
pop
ss
into
movsl
das
add
mov
xor
ljmp
jb
dec
mov
xchg
outsb
push
out
xchg
push
daa
inc
cmp
in
repnz
sbb
and
sbb
cmpsl
sarl
out
les
jno
fldt
push
stc
cld
mov
xlat
add
scas
and
adc
dec
push
adc
and
in
lods
jne
add
xor
pop
scas
fwait
push
sub
inc
test
clc
test
popf
sub
je
inc
xor
and
pushf
lahf
lcall
mov
inc
fsubs
mov
push
in
adc
mov
test
mov
mov
outsb
insl
imul
xchg
or
mov
out
inc
sub
mov
inc
mov
inc
pop
cmpsb
cmp
pushf
call
addl
data16
xchg
lea
jge
ret
fdivs
jae
adc
jns
ss
ja
les
inc
mul
ja
and
mov
out
adc
ds
lods
pop
xchg
adc
insl
jle
clc
pushf
mov
xor
std
jo
and
iret
cwtl
cltd
dec
stc
sahf
dec
lahf
notl
sbbl
popf
pop
jp
imul
lahf
jno
icebp
mov
lods
xchg
cmc
nop
mov
or
rcll
out
bound
cmp
push
mov
xor
jns
das
ret
or
jecxz
loopne
das
jmp
ret
addr16
js
sub
pop
mov
cld
xor
mov
sbb
add
mov
movl
div
cmp
pop
incb
fsubl
dec
sbb
out
mov
cli
xchg
inc
pusha
xacquire
fidivrs
rorb
dec
dec
insl
mov
insl
xchg
mov
inc
incb
inc
pop
fdivr
push
fbstp
add
push
stos
mov
mov
dec
lahf
and
add
mov
dec
sub
nop
sub
sub
aaa
dec
cmp
test
mov
fisubrl
icebp
fs
mov
outsl
mov
imul
cld
bound
mov
pop
cmpsb
test
popa
fisubl
push
or
mov
stos
inc
push
xchg
jno
jg
push
arpl
outsl
mov
mov
cltd
test
int
and
cmpsl
push
pop
inc
stos
cmp
push
mov
out
rcr
fwait
push
fimuls
dec
push
je
insb
into
mov
aad
fstps
xor
xchg
jp
inc
inc
mov
stc
ret
repz
leave
das
push
cmp
cmpl
out
mov
pop
cmpsb
lock
add
mov
pop
push
out
pop
loop
cmp
lret
lcall
mov
fildll
scas
push
daa
push
xchg
data16
pop
mov
mov
sbb
iret
data16
int
mov
push
in
adc
jl
mov
or
sub
movsb
repnz
inc
dec
pop
mov
or
jns
popa
mov
jmp
fcompl
lods
jp
jge
je
clc
push
rorb
add
je
and
push
cmc
ficoml
mov
push
mov
or
xchg
pop
mov
push
adc
mov
pop
mov
push
testb
gs
repnz
mov
cmp
lahf
jmp
xchg
push
cmc
mov
scas
cltd
std
sub
std
cltd
std
fcoms
cs
je
sub
repz
sub
jmp
add
xchg
and
push
loop
mov
jne
js
hlt
stos
out
adc
jno
xchg
jl
adc
push
or
add
pop
subb
pop
scas
mov
xor
and
in
int
movsl
mov
into
mov
push
icebp
movaps
inc
adc
xchg
addr16
and
mov
sahf
push
add
jge
jp
mov
mov
insb
jg
jge
xchg
scas
cld
sbbb
pop
dec
out
imul
insl
dec
cmpsl
bound
mov
or
fld
pop
test
add
sarl
shl
xor
pop
cli
push
aaa
icebp
negl
arpl
fcomps
pop
sub
lds
mov
pop
lods
jae
jecxz
sbb
mov
push
add
add
sbb
xchg
bsr
cwtl
sbb
hlt
mov
mov
push
xchg
ja
xchg
cs
adc
inc
push
movsl
xchg
add
mov
cmpsb
sbb
and
pop
push
dec
dec
pop
std
ss
push
sub
cmp
ret
pop
jb
nop
lahf
push
inc
pop
adc
repz
inc
inc
sbb
repz
adc
fwait
mov
sub
es
mov
dec
or
mov
mov
test
stc
xchg
dec
rcll
pop
and
movb
test
sbb
jnp
or
push
cltd
mov
push
pop
idivb
pop
jge
or
aam
and
iret
cwtl
fiadds
loopne
out
out
dec
pop
ret
inc
sbb
rorl
xlat
cmc
and
test
xor
cmpsl
jmp
sub
xchg
mov
dec
sbb
jne
sub
rolb
andl
jo
lahf
mov
sbb
cmp
mov
les
sbb
sbb
ret
or
add
push
mov
ret
add
aad
push
mov
cmp
jg
and
mov
popa
push
push
jge
lret
jle
je
sub
scas
fidivs
pop
mov
mov
mov
sub
jecxz
push
dec
clc
xorl
xchg
adc
xchg
xor
cld
movsb
mov
dec
das
movb
push
popa
lods
mov
leave
or
adc
aas
les
sbb
dec
sub
mov
cwtl
testl
jmp
fdivrl
insb
jl
fstpl
and
inc
lcall
adc
dec
cmp
cli
jno
nop
lret
fxam
inc
jg
add
pop
fildll
cs
add
ljmp
inc
in
push
pushf
notl
into
inc
mov
cmp
mov
sbb
sub
rcr
fdivl
or
mov
cli
pushf
mov
pushf
sbb
mov
daa
mov
ds
xor
mov
popf
add
cmpsb
or
mov
in
pushf
xor
dec
mov
xchg
xchg
aad
scas
les
scas
inc
push
mov
sahf
cmp
dec
mov
cmp
test
jle
mov
enter
ds
shrb
pop
je
and
movsb
jge
add
daa
leave
adc
jmp
dec
pop
jecxz
pop
lock
repnz
push
outsb
ficoms
sub
repnz
push
mov
cmc
into
jno
sub
es
mov
hlt
mov
push
shr
aad
adc
mov
cmpsl
sti
xchg
adc
cmp
jne
clc
das
or
mov
lds
sub
mov
adc
les
add
xchg
lea
jno
in
test
repz
dec
mov
cs
mov
xor
ss
jg
movsl
add
mov
data16
rcr
and
mov
cmp
js
add
and
cs
push
sbb
xchg
cwtl
out
jmp
stos
add
push
in
mov
add
scas
lock
fdivs
fsubrp
cmpsb
mov
jecxz
lret
aaa
fisubl
jnp
testb
cmp
lea
xchg
or
sti
pop
or
mov
adc
mov
pop
pushf
xor
pop
xchg
sbb
mov
lret
dec
push
push
inc
lret
dec
inc
mov
aas
arpl
lods
rol
rorl
ret
xlat
push
shll
push
mov
lcall
and
push
pushf
scas
inc
pop
js
dec
test
cmpsl
push
iret
das
xor
aad
pop
jg
int3
sub
pop
loope
jle
pop
movsb
push
ljmp
fisttpl
mov
je
daa
mov
adc
inc
fistl
mov
fdiv
cmp
das
dec
pop
shld
xor
pop
out
aam
xchg
repnz
ds
cwtl
push
adc
mov
js
inc
es
xchg
push
mov
inc
inc
sbbb
movsb
ja,pn
jecxz
testb
testb
adc
out
jg
mov
push
mov
mov
je
jge
ss
mov
xchg
push
mov
stc
inc
pop
cld
call
add
vunpckhps
hlt
loope
sub
leave
or
xchg
iret
mov
jge
pop
into
cli
sub
out
cwtl
push
out
cmpxchg
add
shr
pop
pop
cmp
test
addb
jae
mov
aad
ja
xor
push
mov
dec
xor
mov
in
inc
jae
xor
arpl
insl
loopne
shrb
ljmp
inc
popa
push
jno
addl
mov
sahf
enter
mov
fucom
mov
xor
jmp
das
xor
stos
ds
scas
cmp
test
push
aam
mov
cld
arpl
icebp
test
stc
inc
cmp
js
push
cwtl
push
inc
test
and
fnstenv
les
jle
out
push
loop
out
pop
dec
arpl
xor
inc
into
sub
jmp
push
adc
mov
mov
pop
and
xor
sub
push
or
xor
push
mov
jmp
in
pop
outsl
loop
test
jp
add
jl
cld
mov
movsb
imul
js
out
rcrl
xor
and
or
int
mov
add
les
mov
push
call
and
jg
insl
and
push
push
dec
pop
cmp
xorb
in
add
jbe
push
shr
mov
pop
cmc
pop
adc
xor
xorb
test
mov
inc
sti
mov
in
loop,pt
pop
daa
mov
loop
inc
divl
or
xchg
sbb
js
sti
push
test
mov
enter
jmp
xchg
pop
int
shll
mov
shrl
clc
xchg
addr16
loop
das
mov
sub
je
cli
dec
cwtl
sbb
lret
inc
add
imul
jb
dec
mov
mov
jae
lret
sub
aas
add
sbb
leave
sbb
into
adc
push
leave
jecxz
and
aad
sbb
pop
mov
and
push
test
ss
sub
nop
decb
ret
jle
pop
out
sub
out
sbb
jmp
scas
jl
ffreep
jb
pushf
and
out
nop
daa
fs
xlat
sbb
lret
inc
adc
adc
sbb
stc
or
xchg
push
ja
loopne
pop
adc
std
xchg
std
push
adc
pop
sbb
leave
sub
dec
scas
inc
push
gs
push
lea
sbb
pop
mov
jno
sub
or
and
cli
test
repnz
outsl
jne
jge
int3
xor
sahf
sbb
jmp
inc
inc
mov
add
dec
daa
leave
mov
fsub
hlt
push
or
andl
addr16
mov
jge
jmp
inc
fcoml
mov
js
ljmp
jnp
insb
jno
rolb
inc
imul
and
add
mov
test
loop
test
mov
icebp
mov
mov
jmp
aas
or
push
test
pushf
adc
insl
inc
mov
fsubr
push
mov
addl
xchg
in
test
pop
sahf
push
xchg
daa
xchg
les
lret
push
outsl
ljmp
adcl
std
mov
fstl
push
mov
lcall
inc
cwtl
xchg
fs
icebp
xor
jbe
pop
aam
dec
cmp
dec
inc
ret
ret
jle
mov
rcll
push
push
push
ljmp
lods
or
clc
xchg
sbb
in
in
cmc
xchg
jp
or
add
push
test
ret
or
dec
roll
pop
push
xchg
notl
push
js
xor
mov
js
push
pop
jb
in
sbbl
mov
mov
ret
adc
les
mov
fidivrs
jmp
outsb
enter
jb
or
mov
mov
std
or
xor
push
pop
inc
push
xchg
stos
aas
mov
not
je
or
dec
pusha
shlb
icebp
mov
fbstp
les
mov
das
or
stc
roll
mov
fiadds
push
mov
pop
and
mov
mov
lret
addr16
insb
push
fs
jbe
push
sub
stc
sbb
adc
ret
mov
push
lods
loopne,pn
mov
mov
jp
push
imul
add
das
pop
add
jns
ja
fstp
jae
mov
xchg
loopne
jg
jno
cltd
test
cmc
enter
sub
jno
cmp
repnz
sbb
add
sbb
pushf
xor
cmp
cmp
push
mov
push
in
sarb
push
outsb
je
pop
cli
sbb
or
lret
cmpsb
insl
add
cmpsb
mov
add
nopl
shl
movsb
dec
push
loop
subb
xchg
arpl
and
jo
inc
jmp
pushf
repz
or
pop
arpl
subl
mov
cld
jmp
add
dec
or
inc
dec
pop
pop
mov
outsl
lret
ss
add
sub
pop
sbb
fsubs
adc
in
mov
sbb
mov
pusha
sbb
jne
xlat
inc
fsubrs
push
imul
cmp
adc
xchg
cs
mov
scas
push
jecxz
iret
mov
pop
mov
jbe
jge
adc
int
into
xor
out
sub
flds
sbb
cmp
xor
inc
in
testb
out
xchg
hlt
or
mov
movsl
push
mov
adc
cli
icebp
repz
pop
shl
xlat
fidivrs
dec
sub
pop
repnz
mov
cmp
xlat
cmpl
push
mov
mov
ja
sub
pop
stc
dec
sarl
popa
or
out
and
insl
pop
loope
add
pop
jne
imul
cmpsb
cmp
or
xor
in
popf
jmp
add
push
shr
fnstenv
or
je
les
mov
adc
lds
sbb
cltd
sbb
mov
push
xchg
jmp
fadds
into
popa
mov
jl
mov
cmp
cld
stos
addb
in
push
xor
mov
loop
fcomps
test
inc
xchg
ljmp
push
in
sub
and
setle
lret
in
or
out
sbb
outsb
sbb
lods
push
xchg
mov
andb
mov
scas
jb
pushf
mov
mov
or
test
jge
cmpsl
loope
movsl
xchg
loopne
mov
sub
mov
inc
out
adc
inc
adc
test
nop
fisubrl
in
sub
adc
outsb
icebp
addb
aam
and
push
in
pushf
ret
mov
out
xchg
xchg
sub
mov
pop
pop
loope
iret
data16
arpl
addl
mov
cmp
jl
inc
dec
aam
aas
push
mov
push
pop
lea
jp
xor
movhps
xchg
iret
push
lods
and
dec
sub
jge
add
inc
lds
xorb
lret
stc
sbb
xchg
push
fs
leave
cmpsb
ss
mov
inc
data16
lret
or
push
daa
and
aaa
fstl
or
sbb
in
out
imul
loopne
mov
sbb
test
pop
js
in
mov
bound
scas
int3
pop
sub
cli
test
ds
mov
hlt
inc
adc
or
adc
mov
jmp
insb
test
add
out
jmp
adc
cwtl
outsb
sub
ds
adc
in
out
jecxz
or
sti
roll
inc
ljmp
insl
negb
pop
adc
jbe
aas
mov
xor
mov
shl
mov
aaa
dec
push
mov
mov
push
ret
adc
dec
in
xchg
push
sbb
shrb
cs
push
sbb
jae
mov
stc
lds
daa
notb
cmp
fwait
es
and
sub
cmp
ja
mov
sahf
xchg
sbb
cmpsl
sbb
ds
dec
xchg
ret
sarb
rcrl
pop
sbb
int
xchg
xchg
or
cs
rorb
jb
and
adc
pop
xchg
mov
sti
clc
xchg
in
push
cwtl
test
std
cs
push
call
pusha
cmp
or
mov
aad
jle
xor
or
cmpsl
sub
nop
or
mov
lret
xchg
mov
mov
out
pop
movsb
mov
rolb
mov
dec
test
sahf
js
fisubs
in
jmp
cmp
imul
xlat
mov
adc
push
add
ss
loopne
adc
inc
or
pusha
adc
jns
into
shrb
loop
in
jle
aaa
xchg
lcall
cmp
inc
adc
inc
lds
inc
sbb
cld
mov
xchg
add
cmc
ja
sub
or
test
inc
mov
mov
ja
jnp
ss
jge
push
cmp
out
dec
add
dec
mov
cmpsl
jp
sti
decl
fucom
in
sub
int
adc
jnp
lret
into
push
mov
pop
mov
jo
jno
sub
and
pop
iret
bound
inc
cvtps2pd
pop
push
add
daa
cmpsl
daa
in
in
add
ss
jo
inc
push
stc
adc
shl
xchg
push
in
lea
rorl
jg
imul
dec
xlat
sbb
sbb
lea
push
push
inc
jge
jb
nop
sub
shlb
xchg
jge
inc
mov
dec
pop
push
or
inc
out
mov
insl
jge
mov
adc
scas
cld
jl
sarl
mov
nop
sbb
popf
imul
sub
inc
mov
or
lret
jne
loop
std
mov
cmc
sbbl
push
shrb
lret
fucomi
pop
adc
add
insb
pushf
stos
and
fdivr
rcll
and
inc
xchg
xor
outsb
in
aam
lods
jo
daa
out
add
sbbb
sbb
pop
repnz
hlt
dec
lahf
fsts
xlat
xor
aas
xchg
mov
pop
adc
mov
sbbl
mov
stc
loop
push
or
sbb
out
leave
sarb
adc
jmp
je
mov
repnz
mov
imul
cmp
rcrb
dec
push
inc
fldt
and
jo
arpl
sub
ss
add
stc
pop
fwait
add
cmp
lock
push
shl
mov
push
pushf
ss
cltd
pop
and
cmp
pop
xchg
or
icebp
mov
jle
mov
push
fistpll
repz
scas
bound
in
orl
out
mov
fdivrl
and
sbb
fiaddl
mov
aad
ljmp
out
stos
icebp
out
mov
push
les
mov
mov
cmp
clc
lret
jno
mov
sbb
sti
push
dec
std
inc
rorl
jl
cmpsb
push
or
mov
rcll
xchg
cltd
sub
sti
xchg
pop
pop
xor
xchg
adc
inc
hlt
cwtl
pop
imul
sub
add
cmp
ds
xchg
pusha
imull
into
add
cmpsb
cmp
hlt
sahf
les
lahf
mov
out
leave
xchg
sub
jg
or
cltd
jbe
mov
cmc
ret
int3
mov
ret
push
xor
xchg
enter
fisubrl
je
pop
dec
loopne
inc
sti
sti
jl
subl
cmp
fwait
ret
data16
mov
and
inc
push
cmp
lcall
jnp
and
imul
cmp
push
test
test
fidivrs
cmc
in
in
daa
jo
adc
xor
loop
sbb
sub
rcrb
pop
popa
cmp
insb
adc
adc
test
push
out
sti
scas
fwait
scas
sub
pusha
ljmp
arpl
push
mov
popa
enter
inc
sbb
mov
outsb
enter
sbb
xchg
xor
cld
dec
gs
aad
std
or
push
cmp
push
and
clc
sub
arpl
loopne
gs
fmul
push
xor
mov
push
imul
push
jecxz
in
nop
mov
mov
sub
lahf
ficoms
inc
popa
dec
int
adc
mov
je
jl
sub
jbe
fwait
and
inc
loopne
jecxz
test
or
lea
pop
testb
mov
and
sbb
and
pop
inc
lret
push
or
out
loop
in
jns
xchg
pop
xchg
mov
lea
or
aaa
xchg
loopne
fisubrl
clc
mov
cmp
fwait
pop
mov
dec
xor
jle
jecxz
jne
loope
or
xchg
sbb
pop
outsb
pop
cmp
notb
mov
dec
jge
int
insb
int3
jg
dec
xchg
dec
ds
out
mov
mov
cmpsb
mov
fnsave
inc
shlb
push
sub
mov
lret
and
out
in
push
int
repnz
dec
cmpsl
adc
fldcw
test
jmp
rclb
adc
stos
es
fstl
adc
jnp
and
mov
pushf
pop
fildll
sti
cwtl
pop
sub
sbbb
jb
mov
std
cmovnp
jge
xor
pop
pushf
mov
lea
stos
les
rorl
imul
pop
cmp
lahf
push
cmp
jp
sahf
into
mov
popa
or
movsb
pop
dec
iret
test
imul
lock
jl
mov
xor
jae
pop
pop
int
jg
ljmp
lock
das
pushf
xor
std
pop
xchg
add
cltd
in
data16
dec
clc
and
shlb
stos
dec
mov
xor
pop
pop
es
lods
sti
sti
sub
sahf
lahf
mov
sub
pop
pushf
jl
inc
sub
xchg
pop
lock
xchg
sbb
mov
add
int3
ss
adc
loop
jne
xchg
int3
rcrl
or
mov
xor
insl
adcb
xchg
popa
and
xacquire
and
push
leave
loopne
arpl
mov
pop
push
rcrb
xor
push
jbe
pop
stos
mov
cmp
jl
sub
addr16
sarl
fs
pop
fimuls
ds
dec
sub
cmp
dec
incb
pop
popf
push
xchg
test
testl
arpl
addr16
adc
sbb
arpl
lret
jecxz
lods
loopne
push
dec
push
add
sub
and
inc
add
push
add
or
test
pop
call
jo
hlt
mov
sbb
push
sarb
and
call
in
sbb
sarl
xchg
rcrb
std
add
push
xlat
fidivs
pusha
cmp
cmpsb
adc
sbb
insl
pop
mov
dec
push
int3
fisubrs
into
xor
js
mov
cmc
jns
xor
cmp
fsubs
pop
icebp
int
pop
test
out
js
dec
pop
xor
lahf
jmp
inc
popf
rorb
mov
pop
in
sbbb
loop
or
sbb
xor
aad
sti
loopne
push
xchg
adc
xchg
sti
dec
dec
mov
cs
cli
test
or
sbb
dec
push
lret
aad
mov
push
inc
mov
dec
ds
pop
shr
push
cmp
pop
jg
cwtl
dec
pushf
xlat
repnz
and
mov
loope
call
inc
orl
loop
jmp
cmc
push
repnz
jns
gs
ds
mov
fnstenv
push
push
jl
popa
clc
mov
xchg
pop
repz
adc
cmp
fidivrs
xchg
cmc
bnd
jbe
pop
std
jo
push
es
sahf
jmp
or
dec
pop
lds
fadd
xlat
mov
jbe
cmp
xor
lds
clc
loope
sbb
lds
add
mov
movsb
loop
js
enter
gs
popa
sbb
leave
fs
mov
jb
cmp
lods
adc
sub
mov
mov
repz
sub
cmpsl
setbe
mov
fucomip
mov
std
jo
push
int
out
ds
or
push
clc
jae
or
jns
jmp
cmp
test
adc
ss
xchg
inc
movsl
imul
mov
push
fcompl
fildll
jmp
outsl
imul
out
gs
cmp
inc
pop
rclb
mov
adc
add
test
or
arpl
pop
adc
push
out
push
jbe
pop
mov
imul
outsb
xchg
sbb
or
stos
out
mov
xchg
int3
mov
sbb
or
or
andb
inc
in
or
xchg
xchg
andl
xor
lret
mov
je
sbb
hlt
sbb
fadd
mov
scas
fwait
insb
vpcmov
pop
dec
inc
arpl
lds
mov
fisttps
scas
mov
mov
into
addl
and
js
mulb
pop
lret
shlb
fnstsw
lahf
js
shll
and
sti
roll
mov
mov
mov
inc
pop
mov
movsl
mov
mov
mov
fucomip
adc
scas
les
stos
xchg
insb
dec
and
sbb
roll
mov
jo
dec
out
sbb
and
aaa
mov
xor
add
lcall
sbb
and
mov
sub
dec
cmpl
xor
xchg
mov
mov
pop
call
or
push
mov
out
dec
scas
adcl
test
aad
rorl
dec
jmp
pop
and
stos
cli
jno
or
imul
mov
mov
loopne
sbb
xor
ret
lods
mov
xchg
scas
mov
jecxz
fistl
shr
gs
sbb
lea
dec
hlt
push
outsb
es
xor
lods
mov
ret
mov
iret
arpl
leave
jae
incl
jge
mov
int3
lods
pop
xchg
cwtl
push
adc
push
xor
into
roll
ficoms
mov
subl
mov
mov
rcr
inc
movl
push
icebp
mov
cmp
imul
mov
arpl
push
fnsave
mov
mov
push
xlat
jae
adcl
xchg
jecxz
inc
xchg
fwait
aaa
lds
pop
adc
jns
push
ss
arpl
pop
stos
cwtl
hlt
mov
int3
adc
test
ffree
daa
lods
cmp
imul
add
mov
push
jg
mov
test
dec
jle
test
and
adc
in
test
pop
ret
xor
inc
jle
lret
js
mov
dec
mov
push
sbb
jecxz
cwtl
cltd
ds
inc
mov
mov
lods
xlat
popf
pop
mov
addr16
scas
addr16
or
push
cli
or
push
jno
mov
pop
ss
xsha256
cmpsb
adc
mov
or
push
popf
popf
or
ficoml
fisubrs
pop
out
push
arpl
cmpb
lret
pop
mov
dec
jne
mov
in
lret
fucom
mov
imul
call
sbb
std
mov
mov
jmp
dec
add
insl
nop
loope
lahf
cmp
cmp
gs
jle
pop
cmp
rol
jo
dec
shll
xchg
add
pop
or
mov
adc
shrb
cmc
loop
pop
dec
mov
test
cmp
sub
sarl
lods
pop
dec
fadd
cmp
xor
stc
bound
pusha
xchg
xchg
jmp
inc
cmpsl
sbb
jmp
mov
ss
push
jmp
int
push
mov
ja
inc
sbb
dec
fucomp
dec
xchg
mov
push
cmp
mov
cmpb
mov
xor
fcomip
hlt
cli
outsl
mov
sbb
aas
sbb
sti
adc
and
jge
inc
pop
fisttps
fbld
dec
fnsave
mov
fsubrp
adc
stos
insb
ret
xchg
xchg
push
and
clc
fadd
push
xchg
in
jno
xchg
leave
test
mov
add
push
adc
es
push
fisttps
cld
aas
cmp
mov
jne
push
xchg
cs
push
add
addr16
cltd
mov
int
adc
and
push
out
adc
pop
push
push
outsl
out
sbb
es
or
mov
xor
xchg
xchg
jb
inc
insb
sbb
cmp
stos
sti
xchg
mov
pop
jmp
jg
xor
popa
fsub
cs
xor
add
jns
push
ret
in
or
out
xor
add
ds
lret
xor
call
ret
les
lret
jmp
or
out
lahf
mov
rcl
movsl
xchg
xchg
and
xor
shlb
das
mov
jmp
or
fidivl
add
out
cli
in
fcoml
aaa
pop
popf
aas
adc
fmuls
inc
xlat
jne
and
lds
sbb
push
dec
cmp
stos
xlat
mov
cwtl
loop
rcrb
jp
cmp
cmp
add
or
cwtl
test
stos
push
dec
leave
jbe
adc
dec
es
jg
ret
jle
adc
inc
lret
insl
movsl
xchg
mov
in
add
mov
arpl
fdivp
push
data16
std
mov
xchg
ret
or
jecxz
mov
rorl
inc
popl
push
inc
sub
dec
jecxz
aam
push
and
data16
mov
pop
test
xchg
push
js
leave
mov
fistpll
mov
mov
lret
aam
pushl
test
in
or
adc
cmp
push
out
mov
ja
sub
shll
ss
jmp
push
push
xchg
cmp
data16
pop
hlt
int3
mov
and
xor
and
inc
sarb
cli
xchg
push
out
inc
adc
jge
pop
mov
xor
imul
cmovl
xchg
adc
jb
sub
into
fsubl
dec
pop
push
sub
out
cltd
xchg
xchg
repnz
lea
mov
mov
or
in
jnp
mov
cmovns
mov
cmp
pop
and
addr16
sub
add
jo
xor
scas
cmp
xor
in
mov
dec
mov
call
push
xchg
inc
sahf
fdivrp
mov
fstpl
pop
cmp
adc
xlat
mov
jno
sbb
sbb
add
inc
aam
outsb
push
or
adc
jmp
or
mov
jp
pop
iret
xorb
pop
jnp
push
or
xor
xchg
jmp
hlt
aas
mov
shlb
sti
jnp
adcb
pop
sahf
push
cmpsl
cmp
mov
mov
lods
push
stos
mov
lock
fildl
jne
sub
fstpl
in
aam
mov
cltd
mov
ljmp
and
int3
push
pop
testb
xchg
xchg
sbb
mov
jne
pusha
fnsave
xchg
pop
fsubl
cld
outsl
movsb
jbe
dec
insb
dec
push
dec
stos
cmp
jp
mov
mov
mov
sti
pusha
adc
cmp
imul
orb
and
mov
jmp
or
ret
iret
mov
lods
cmp
int3
arpl
push
inc
clc
jae
ljmp
mov
and
inc
sub
xchg
mov
add
jbe
mov
testb
ret
pop
lock
or
fs
push
in
pop
add
arpl
rcll
test
daa
or
fcom
mov
cmp
mov
adc
sbb
ret
xor
divl
add
inc
test
mov
or
pop
pusha
shll
mov
dec
inc
shl
sub
aad
lahf
pusha
add
sub
mov
xor
outsb
jmp
inc
xchg
xchg
out
out
jae
pop
fisubs
aas
sbb
test
lock
mov
lcall
test
push
enter
call
dec
ljmp
inc
and
xor
jge
movsb
clc
mov
fnstsw
push
aam
xchg
sub
aam
cmp
jmp
mov
aas
in
shlb
loop
mov
inc
adc
clc
std
inc
add
testl
int3
push
push
roll
movlps
insb
in
repnz
pop
mov
mov
pop
in
cmp
stc
pop
or
sub
sti
xchg
xor
push
stos
call
xchg
push
sbb
inc
sub
or
int3
aam
pop
outsl
xor
jl
je
sti
xlat
loopne
pop
js
sub
gs
or
bound
lds
lock
sbb
test
push
xchg
sbb
cmp
add
or
mov
cmp
mov
fld
inc
add
loopne
sbb
pop
jne
cli
dec
xor
cmp
pop
xorl
mov
and
jge
fcoms
cmp
movsb
in
inc
loopne
dec
mov
in
mov
clc
dec
pusha
clc
cmp
cmpl
inc
lods
rcrb
or
dec
fidivrl
or
add
jbe
es
pop
lock
shll
ja
cmc
stc
cmp
test
or
mov
sub
jl
subl
jmp
je
xlat
mov
jg
ret
inc
pop
push
ret
hlt
aas
stos
jbe
xchg
std
push
xchg
add
mov
dec
test
pop
in
imul
stos
dec
pop
out
mov
pop
mov
pop
stos
addr16
pop
ds
rcl
shrb
rorl
jno
mov
jp
and
mov
std
xor
inc
lret
sti
stos
ljmp
inc
push
jnp
loope
jb
adc
das
inc
inc
fcomps
cltd
daa
push
jecxz
mov
gs
adc
push
enter
flds
cmpsb
mov
mov
das
and
jp
pusha
les
pushf
mov
pop
pusha
mov
dec
testl
pusha
xchg
std
xchg
les
mov
or
in
out
flds
mov
ljmp
mov
add
int
ss
adcl
push
ds
or
jo
lock
sbb
add
aad
and
cmpsl
jecxz
call
mov
lods
jg
pop
dec
pushf
add
cmp
or
pop
mov
fidivs
lahf
cltd
fwait
jmp
std
jmp
mov
mov
test
popf
rcr
jae
or
push
nop
xchg
inc
push
inc
andb
jge
stc
daa
inc
outsb
daa
and
inc
push
lret
sbb
jnp
cmp
mov
xlat
movl
mov
mov
bound
dec
aaa
add
scas
sbb
stos
jecxz
sarb
push
out
addr16
movsb
sbb
mov
adcl
jne
test
push
nop
push
adc
add
jle
fnstenv
push
gs
pop
adc
pop
repz
mov
jmp
push
lea
stos
jp
das
jg
cmpsb
and
jl
pop
mov
rol
scas
rorb
mov
sbb
aaa
into
adc
push
mov
sti
xor
fstl
sbb
add
movsb
js
push
scas
mov
cmp
sbbb
je
mov
insl
lret
aam
pop
mov
loope
mov
jmp
add
pop
fnstcw
mov
loope
shl
lds
mov
mov
movsb
xchg
add
out
sbb
push
fsubrs
je
dec
cld
or
cmp
xchg
mov
jne
cmpl
pop
shrl
lods
inc
int
lds
sub
push
jecxz
jg
xor
mov
add
stc
ss
imul
adc
xor
or
arpl
mov
xor
insl
insl
sbb
ret
mov
pop
test
mov
cmpsl
sub
lcall
xlat
movsb
dec
xlat
inc
inc
loopne
dec
cld
jge
popf
jmp
orl
rcl
fidivl
fisubl
push
or
test
xor
and
iret
aad
jbe
ret
ret
mov
pop
mov
sub
rclb
mov
sbb
loopne
cmp
ret
jb
push
enter
xchg
push
lcall
hlt
scas
mov
dec
std
je
mov
imul
fldt
popf
sub
jae
fisubl
std
andb
rorl
jge
aas
mov
sub
loope
mov
mov
cs
xchg
pop
stos
dec
ret
mov
add
or
aaa
scas
or
push
sub
mov
insb
into
filds
repz
cmp
pop
test
in
mov
dec
jmp
jmp
fmul
mov
push
dec
pop
or
cmp
mov
jg
jbe
repnz
pop
das
decb
out
das
inc
aaa
mov
daa
imul
xor
push
sbb
xchg
cmpsl
cmp
rcl
in
add
sbb
pop
es
bound
scas
popf
stc
das
xchg
mov
push
into
pop
pop
xor
movsl
add
das
nop
pop
mov
in
testb
pop
rol
imul
movsb
popa
mov
fnstenv
mov
cmp
pop
rcrl
inc
and
imul
mov
movsl
pusha
popf
lcall
sbb
add
xchg
enter
addb
cmp
cmpsl
add
cmp
jae
ret
and
pop
push
jmp
and
mov
push
cmp
push
aaa
lret
ljmp
call
lret
insl
xchg
pop
loopne
clc
enter
out
add
repnz
push
push
adc
shr
pop
sub
imul
movsb
mov
and
pop
push
mov
lahf
mov
mov
inc
in
stc
into
push
pop
adc
sti
int3
pop
sub
data16
xor
fs
pop
lcall
dec
sbb
sbb
sti
sbb
or
mov
fucomp
push
es
or
in
mov
inc
mov
dec
fwait
arpl
nop
addr16
adc
or
xchg
xor
les
pop
movsb
dec
or
xchg
xchg
mov
jae
push
mov
xchg
xor
arpl
subb
pop
in
inc
pop
insl
adc
mov
jns
aad
inc
in
cmp
lahf
add
cmp
sub
mov
cmp
adc
cmp
loope
xor
sbb
cmp
pop
inc
sbb
fidivs
repnz
out
int3
faddl
lcall
fucomip
sbb
and
fsts
ss
jbe
and
or
rcl
scas
cmp
pop
cld
and
cmp
pushf
ret
jnp
push
lock
pop
fwait
xor
cld
xchg
cli
std
mov
cmc
movsb
popf
adc
mov
jae
test
lret
fcomip
cmc
inc
pop
divb
inc
dec
push
add
jo
dec
bound
imul
gs
rolb
mov
xchg
push
push
mov
xor
out
lods
inc
mov
push
pushl
flds
pop
push
inc
xchg
and
rol
adc
pop
fldenv
fsubs
in
pop
fidivl
sub
movsb
xchg
test
test
aas
push
data16
ja
mov
fiadds
push
and
lret
ss
sub
hlt
lea
leave
mov
shlb
jns
popf
fucomip
mov
fdiv
test
out
mov
add
mov
add
push
sub
sub
shl
xorl
repnz
pop
mov
movsb
inc
pop
in
scas
xchg
jl
fstps
or
push
pop
ret
push
sub
or
pop
cmp
fisubl
mov
mov
mov
jge
test
test
into
jne
cmpsl
xor
pop
inc
or
pop
pop
adcb
arpl
inc
test
lret
rol
dec
adc
cmpsl
or
fstps
ljmp
cmc
sbb
lods
les
cmp
inc
dec
hlt
dec
cmpsb
in
stos
jae
lahf
xor
jg
mov
cmpsl
orl
mov
mov
pop
pop
out
fxtract
or
out
xor
mov
pop
cmp
loopne
or
xor
mov
xchg
cmp
addr16
dec
cmp
stc
nop
push
xor
lcall
bound
mov
pop
shrb
dec
xor
mov
xorl
sub
dec
xrelease
imul
dec
icebp
xchg
inc
or
mov
roll
aaa
rolb
xlat
je
add
and
loope
loopne
mov
jne
cmp
ja
hlt
cmc
adc
in
imul
mov
jb
mov
push
and
shlb
lods
xchg
push
insb
add
mov
sub
push
out
adc
mov
es
mov
aaa
les
iret
mov
cltd
mov
xchg
rol
popf
test
aam
mov
mov
lcall
adc
xor
mov
shrb
inc
xchg
mov
iret
pop
and
fistpl
int
or
popa
or
xchg
cmpsl
aaa
adc
shl
jnp
xchg
xor
stc
cmp
das
pop
mov
dec
xchg
sbb
je
xchg
xchg
fwait
pop
xor
mov
mov
popf
dec
pop
ret
scas
cmp
leave
sub
mov
sbb
mov
pop
adc
aas
xchg
add
cmpsl
cli
xchg
mov
cltd
fwait
ret
sbb
jb
idivb
lret
icebp
mov
or
add
lods
dec
into
pop
xchg
lods
dec
adc
cmp
push
in
push
stos
lock
mov
pop
dec
filds
stos
xor
pop
repnz
test
mov
ja
lret
mov
into
jmp
xor
sarb
xchg
adc
mov
stc
mov
mov
js
push
dec
pop
imul
mov
push
imul
leave
pop
scas
shrb
adc
in
mov
shrl
adc
and
clc
sub
out
inc
mov
popa
out
mov
pop
lcall
push
aaa
cmp
sti
push
popf
stos
mov
add
xchg
xlat
pop
icebp
pop
lods
mov
xchg
adc
js
add
xchg
lahf
push
jo
mov
jns
sbb
add
test
icebp
in
pushf
sbb
insl
adc
add
xorl
mov
xchg
jne
push
test
add
add
cmp
imul
into
mov
roll
inc
icebp
lahf
repz
rclb
and
sbb
addr16
nop
ds
dec
sbb
mov
add
fstpt
aas
fmull
lock
push
inc
sbb
sahf
push
mov
test
arpl
ret
adc
outsl
sub
mov
add
adc
stos
stc
inc
out
mov
or
push
out
add
aas
sbb
aam
xchg
xlat
ret
arpl
in
aaa
aam
mov
jle
and
mov
add
leave
test
sti
and
dec
push
add
xor
jl
lcall
cld
jb
insl
pop
mov
pop
push
ret
push
pop
and
adc
xor
sub
dec
dec
outsb
cmpsl
xor
es
scas
fmul
or
cmp
sbb
cmp
les
xor
in
inc
out
out
pop
and
push
mov
sub
fmull
or
pop
std
jmp
ss
and
fs
push
push
xor
in
xchg
incl
pusha
dec
add
xchg
fs
cmp
fnsave
enter
or
lahf
stos
ror
sub
jmp
xor
xor
ds
fs
movsb
mov
fnstsw
aam
popf
and
shlb
mov
fwait
cmpsl
and
in
icebp
push
push
popf
sbb
loop
xor
push
mov
push
out
insl
ret
sbb
inc
sub
popa
xor
or
into
mov
jg
jae
in
xchg
movsb
push
fbld
pop
mov
pop
je
call
xchg
dec
xchg
push
dec
out
mov
mov
ret
dec
in
stos
or
iret
mov
gs
and
push
js
push
mov
out
dec
add
push
repnz
sub
add
mov
dec
fbstp
jnp
rcrb
pop
scas
push
or
cmp
stos
add
push
cmp
mov
iret
inc
insl
inc
push
call
or
ds
sbb
lds
iret
sbb
sbb
jae
sub
idivl
pop
sub
add
aad
jle
sbb
aad
xor
xor
fucomp
ss
push
call
pop
inc
adc
out
mov
mov
pusha
in
jp
push
jo
mov
iret
jle
dec
andb
xlat
outsl
adc
shlb
jo
xor
sbb
xchg
add
in
jmp
adc
ja
ret
imul
lods
inc
movsl
dec
adc
pop
inc
lock
and
push
stc
std
cltd
aaa
add
mov
jne
xor
and
or
ljmp
pop
fnstenv
clc
andb
lret
ffreep
sub
xor
stos
mov
jnp
push
insb
call
call
orl
jno
jp
enter
mov
jl
rolb
mov
scas
cmp
mov
lock
push
or
push
daa
push
fimuls
and
pushf
mov
int3
repz
lds
cmpsb
lock
insb
rol
xchg
pushf
or
pop
out
sbb
outsl
fisubs
lods
mov
out
and
mov
sub
ret
pop
sub
repz
rcll
mov
dec
mov
lcall
sub
ja
sub
fnsave
mov
push
push
add
push
imul
push
lods
mov
pop
int
fs
int
int
and
xchg
pusha
notl
jbe
cwtl
jae
mov
mov
pusha
inc
ljmp
idivb
mov
add
in
cltd
push
add
stos
mov
mov
lcall
sarl
fwait
int3
xor
inc
inc
mov
bound
loop
shr
mov
jno
or
lods
ljmp
es
insl
adc
cwtl
icebp
xchg
jg
outsb
inc
mov
pop
ret
stos
mov
repnz
sbb
ret
sti
mov
lods
jge
pop
or
sbb
mov
fsubs
jns
aas
and
pop
inc
movsl
add
clc
add
sar
cmp
cld
mov
adc
cmpsl
xorl
mov
and
push
or
inc
movsl
pushf
movsl
sbb
dec
and
je
outsb
mov
pop
std
jo
jle
sbb
out
jl
cmpsl
call
outsl
add
mov
mov
les
mov
popf
ret
outsl
out
out
mov
jmp
fsubp
or
add
push
sub
jecxz
mov
lods
add
sbb
dec
cs
push
jle
xchg
fistl
mov
dec
mov
xor
enter
add
jne
inc
mov
xor
test
testb
sbb
adc
inc
push
jmp
push
mov
xchg
add
push
push
mov
test
cmp
fsubrl
xor
add
sahf
xor
jle
mov
push
mov
mov
or
outsb
jne
inc
mov
add
lahf
push
outsl
rcrl
add
cli
mov
icebp
insl
adc
adc
jmp
sub
push
xchg
sbb
add
cs
inc
fstpl
lret
aam
iret
fnsave
aaa
sub
insl
and
lods
movsl
mov
or
xchg
and
jmp
in
inc
in
popf
in
and
test
xchg
push
test
ja
push
push
sar
shll
ret
pop
cmp
xor
imul
sub
lcall
data16
mov
jb
out
or
xlat
pop
stos
mov
aam
lcall
dec
jmp
aaa
dec
sub
cmp
sub
push
cmp
mov
mov
inc
iret
mov
lahf
movsb
lds
je
jnp
das
lods
mov
lods
sbb
xor
lahf
sub
push
jbe
sub
stos
add
xor
lret
inc
push
imul
push
cmp
in
fstps
mov
inc
scas
fisubs
mov
aad
cmp
cld
mov
loope
daa
cmp
inc
jg
inc
pop
pop
dec
clc
jmp
cmp
sarb
inc
jae
ljmp
or
adcb
call
ret
scas
mov
ss
test
inc
fdivrl
xor
cmpb
lret
mov
xchg
mov
pop
fsubl
push
or
in
test
push
push
mov
fidivrl
stc
or
sbb
xor
mov
mov
mov
sbb
jmp
lahf
xorb
adc
cltd
cltd
test
cli
jns
pop
sbb
sub
mov
or
mov
test
out
andl
test
test
push
fisubrs
shll
fdivrs
push
cli
and
sbb
pusha
imul
lods
ljmp
or
jmp
imul
pop
pop
cs
jns
add
lret
xlat
bound
lahf
test
push
sub
mov
or
stos
testl
jbe
loope
fistps
push
sbb
xor
loopne
loope
adc
shrb
insb
shlb
push
push
push
pop
inc
pusha
roll
cs
dec
dec
lret
sbb
add
outsl
lock
add
aas
loop
mov
dec
mov
scas
incl
or
fisubl
cmp
push
add
mov
cltd
pop
or
cmpl
pop
pop
adc
push
jb
mov
inc
mov
fwait
push
mov
ss
lahf
ss
das
imul
xlat
add
pop
sub
jle
jns
fistps
aas
retw
jp
mov
test
xchg
sub
addr16
test
ficompl
sub
mov
sub
enter
mov
inc
rcr
inc
mov
stc
ds
mov
ljmp
cmp
mov
push
xchg
jb
xor
xchg
test
mov
ljmp
mov
iret
mov
xchg
std
xchg
dec
adc
inc
jo
movl
bound
loopne
fistl
cmp
lods
pop
xchg
adc
and
push
push
insl
leave
cmp
loop
and
fimuls
lahf
xchg
int3
jg
aas
push
dec
pop
fs
xchg
cmp
stc
adc
push
test
int
mov
or
push
ds
lret
sbb
add
mov
repz
mov
test
sbb
adcb
mov
mov
call
xor
and
dec
fs
cmp
hlt
mov
stc
inc
mov
xchg
push
or
pushf
orb
daa
xchg
in
shrl
fisttpll
and
mov
pop
jns
add
lods
mov
and
push
aad
inc
clc
mov
inc
xchg
dec
xor
rcr
out
pop
jecxz
pop
call
ljmp
or
add
jge
or
sub
jl
dec
fisubl
call
xorb
outsb
adc
mov
pushf
jecxz
mov
int
push
xchg
into
rclb
cmp
sub
and
outsb
xchg
fisttps
outsl
add
aam
popa
popl
jbe
xor
dec
xchg
push
inc
in
mov
divb
shlb
xorl
push
jmp
mov
pop
fbld
pop
xchg
iret
enter
add
pusha
leave
jecxz
add
out
xchg
mov
jbe
pusha
cmpsl
jecxz
cli
add
rcrl
aas
push
test
je
clc
xchg
and
mov
nop
mov
popa
mov
mov
iret
lea
mov
mov
pop
in
lahf
addr16
sbb
sbb
xlat
in
xor
mov
dec
mov
sbb
add
add
adcb
mov
adc
mov
mov
orb
pop
xor
data16
push
js
jle
xchg
xor
add
dec
subb
sub
mov
out
sub
mul
call
aaa
int
add
mov
shlb
aaa
loopne
pop
push
pusha
int3
addb
cmpsl
loope
mov
in
push
mov
pop
popf
and
jnp
add
iret
lea
inc
shll
test
std
push
inc
fucomp
cltd
addl
inc
js
rolb
pop
xor
sub
push
nop
inc
pop
lret
imulb
popl
adc
test
or
icebp
lcall
shrl
movsb
test
xor
cmpsl
aaa
mov
ljmp
push
and
xchg
cli
in
xchg
dec
push
dec
pushf
jo
and
cmpsl
test
push
mov
leave
pusha
aaa
cli
jne
jmp
call
sbb
sbb
sub
inc
sbb
inc
xlat
mov
fidivl
or
gs
push
push
cmpsb
test
test
and
data16
call
lock
sub
lock
adc
repnz
push
divb
fsubrs
push
inc
add
popf
and
imul
sub
mov
addb
loope
fwait
call
and
pop
fdivr
inc
das
call
lea
fnstenv
push
jg
adc
pop
or
add
cmp
imul
in
mov
std
sbb
out
stos
aas
mov
lods
add
mov
call
jmp
xchg
lock
ja,pt
push
or
pop
mov
or
std
xchg
out
and
jbe
pop
add
sbb
pop
pop
notb
mov
stos
mov
int3
fildl
shll
addb
sbb
data16
sarb
adc
inc
pop
fbld
pop
mov
lods
aaa
ljmp
cmp
popa
adc
xchg
pop
std
dec
lahf
cmp
jle
cld
fidivrl
push
mov
xchg
aam
dec
inc
sbb
aad
cmp
les
ret
imul
push
fdivp
push
cmp
negb
inc
fildll
and
mov
arpl
sub
inc
por
pop
mov
sbb
mov
pusha
xor
ss
push
lret
pop
test
int3
fbstp
fmul
pop
fisubrs
xchg
das
sub
mov
dec
in
ret
mov
cmp
lret
sbb
or
shlb
jl
or
jne
pop
cmp
pop
cs
inc
sbb
or
sahf
into
lods
dec
add
xorl
fistpll
mov
add
shrb
pusha
nop
dec
sbb
test
sub
fstl
out
incl
push
mov
adc
femms
jne
mov
push
pop
stos
das
sbb
sub
push
and
mov
es
xor
dec
mov
mov
fnsave
mov
test
out
std
sbb
rol
sbb
sbb
cmp
mov
dec
inc
stos
lock
dec
pop
dec
inc
testb
scas
das
repnz
std
xor
sub
aam
mov
xor
mov
int
xor
insb
xchg
jp
or
jg
push
inc
lcall
push
fsubr
call
mov
push
push
mov
mov
pushf
out
inc
iret
dec
jecxz
mov
cltd
push
je
cmp
stos
pop
lret
ja
leave
popa
leave
adc
jl
bound
xor
inc
and
jno
push
mov
imul
pop
mov
hlt
mov
cmp
insb
negl
sbb
and
fidivl
mov
clc
ds
add
mov
inc
mov
push
ret
inc
jno
lcall
daa
xchg
daa
mov
push
mov
mov
xchg
mov
in
popl
jmp
in
pop
lock
xchg
and
push
cs
ret
jbe
pusha
ss
ror
ret
lahf
arpl
xor
in
fwait
sub
ljmp
dec
xchg
xorb
xor
inc
fidivs
xor
cli
xchg
gs
adc
int
pop
add
mov
arpl
inc
stos
add
test
sbb
mov
jnp
or
cltd
jg
add
jge
push
pop
out
sub
cmp
pop
subb
stos
lock
repz
addr16
jno
sub
inc
jnp
mov
hlt
add
sti
fwait
mov
mov
xchg
pop
orb
push
sbb
cs
inc
fmull
sub
push
movsb
jge
movsb
aaa
inc
aad
add
xor
hlt
into
ficoml
lock
or
mov
or
mov
sub
xor
xchg
jmp
aad
fs
sarb
or
adc
jae
das
out
adc
les
sbb
sbb
pop
jno
mov
add
pop
push
mov
inc
rep
dec
cltd
adc
mov
repnz
xlat
xor
pop
xor
sahf
push
popf
ss
loopne
subl
outsb
add
clc
mov
and
pop
arpl
mov
sbbb
mov
lock
insl
xor
push
push
pushf
sub
xchg
orl
jmp
clc
insl
insb
sub
mov
push
jecxz
fsubl
lds
cli
lret
sbb
mov
ret
add
sarb
cs
jl
loopne
or
mov
pop
movsl
push
inc
in
sahf
push
std
popl
test
lock
divl
mov
lcall
mov
pop
into
movsl
xchg
arpl
out
les
lock
dec
adc
cmp
call
notb
enter
test
in
jnp
loopne
ss
sbb
hlt
jge
scas
test
jno
push
adc
jl
divl
sbb
jl
test
push
add
sub
xchg
jecxz
mov
push
lods
fistl
ret
stc
jne
pop
xchg
in
mov
ficoms
lods
repz
jge
jbe
or
stc
out
es
and
enter
aam
sub
sti
fadds
testl
xor
repnz
lods
daa
sbb
fidivrl
ror
repz
lret
ret
outsl
mov
sbb
jmp
or
pop
mov
cmp
pop
outsb
lods
outsb
add
lret
psadbw
sub
jbe
or
inc
daa
test
push
insl
lret
dec
mov
adcb
xor
enter
mov
stos
inc
shlb
pop
jmp
jnp
xor
dec
xor
bound
ret
insb
stos
and
lret
xchg
inc
pop
movb
xchg
xor
mov
sbb
add
imul
jo
pushf
xchg
mov
aam
outsl
push
pop
push
xchg
jnp
inc
aas
stos
inc
xchg
imul
flds
fsts
or
iret
xchg
xor
in
push
jmp
xchg
cmp
jg
stos
outsl
cmp
sbb
jo
in
mov
add
cmpsl
cs
test
dec
test
jno
in
mov
outsl
jnp
leave
adc
ja
jnp
lods
push
pop
insl
lds
sbb
jb
mov
call
and
lret
push
daa
jge
adc
pop
pop
and
fwait
pop
add
lret
mov
loop
imul
insl
pushf
mov
jbe
jb
mov
push
test
out
scas
push
repz
cmp
mov
sub
xchg
sbb
xor
jns
incl
push
xor
scas
call
movsl
das
gs
push
rorl
jae
fs
fldt
outsb
adc
cmpb
push
pop
mov
insb
aas
int
add
and
pop
pushf
fcompl
jmp
or
adc
xchg
icebp
sub
sbb
insb
mov
pop
pop
rcl
enter
js
adc
inc
sbb
sub
lds
push
jbe
ret
ret
dec
mov
xchg
std
mov
shrb
and
pusha
cmc
mov
sub
test
mov
aad
inc
mov
pop
ret
sub
into
fildll
push
das
mov
mov
shrl
inc
sub
lcall
add
mov
sbb
outsb
add
mov
ss
push
pop
js
push
sti
xor
imul
xlat
push
xchg
mov
jb
push
xchg
and
pop
jg
dec
dec
movsb
lods
fdivrs
lock
popa
loopne
test
cmpsb
push
hlt
xlat
inc
push
mov
in
mov
lds
mov
ja
and
mov
mov
adc
divl
dec
fisubrs
xor
xchg
push
je
or
cld
jg
mov
sbb
or
cwtl
jg
es
out
test
clc
xchg
mov
add
fbstp
xor
outsl
pusha
cwtl
xor
add
cmc
sub
decb
push
ds
xchg
and
insl
add
sbb
hlt
and
fdivp
push
inc
das
mov
popf
mov
xchg
xchg
scas
and
lods
shl
mov
shrb
and
mov
push
mov
cmc
imul
xchg
pop
cmpsb
push
mov
cmp
pusha
leave
mov
xor
and
je
dec
xchg
orl
xchg
cmp
imul
es
cltd
inc
sbb
movsl
xchg
stos
or
popa
mov
mov
mov
ss
clc
rorb
mov
bound
sbb
leave
rol
stc
mov
aaa
jbe
pop
rol
xlat
lock
add
and
pop
sub
out
in
test
test
or
shr
ja
sbb
mov
fnstenv
out
push
popa
push
adc
push
mov
or
out
inc
filds
xor
lahf
loop
in
xor
or
add
adc
sub
faddl
cld
jno
les
ja
mov
inc
int
and
sub
and
shrl
cli
cmp
sub
fbstp
mov
in
push
xchg
popf
push
mov
mov
orb
inc
rcrb
iret
push
dec
insb
jge
push
in
pop
faddl
aas
shll
repz
xor
cmpl
fsubl
dec
in
xchg
jle
or
addr16
outsl
dec
or
jbe
mov
mov
out
push
adc
add
xor
jle
lahf
lea
dec
adc
ret
sub
and
lods
mov
push
inc
stos
mov
jb
ret
push
add
mov
and
pop
sbb
lods
sbb
pop
cld
and
pop
xchg
pop
sub
or
dec
out
push
aad
add
pop
mov
lahf
fs
cmpsb
lock
imul
mov
lea
mov
adc
cld
adc
inc
movsb
test
popa
adc
jp
int3
mov
cmc
sarb
inc
pop
dec
loop
jl
mov
bswap
sub
or
out
ret
xchg
rcrb
pop
nop
mov
and
add
jecxz
movsb
out
sub
sbb
jb
dec
aas
xor
xchg
sub
jno
xchg
mov
adc
sub
outsb
enter
ja
sbb
cmpsb
insb
or
dec
andb
shlb
insl
add
into
cmp
ds
cmp
mov
out
xor
push
push
lods
push
mov
sbb
int
xchg
and
and
mov
inc
sbbb
outsb
push
mov
xchg
xchg
aaa
cmc
dec
adc
repnz
xor
int
movsl
sbb
out
dec
jecxz
andl
push
fsubr
jb
lock
sbb
divb
in
sbb
fs
into
insl
dec
std
dec
js
pop
adc
adc
dec
inc
cmc
loopne
mov
cmc
mov
mov
cmp
movsb
lret
add
cmc
adc
inc
shll
adc
mov
pop
test
idivb
push
inc
pusha
and
jge
cs
stc
and
loopne
stos
xor
and
xchg
sub
lret
mov
lfs
mov
add
or
cs
fstps
push
jl
jl
andb
shrl
push
dec
jnp
clc
daa
xchg
test
xor
push
sahf
idivb
cltd
jg
cmpsl
out
xor
call
add
je
cmp
dec
xchg
push
insl
fstpt
mov
sub
inc
outsb
fld
pop
test
mov
subb
cmc
in
push
mov
pop
add
mov
nop
dec
subl
cwtl
or
xor
stc
mov
ja
sarb
dec
movsb
jecxz
push
rcl
xor
fbstp
fxch
shrl
push
mov
in
mov
sahf
insl
push
sbb
test
sbb
mov
jns
mov
js
xor
push
cs
pop
mov
jae
daa
sub
movsb
into
push
lods
push
dec
bound
pop
pop
add
mov
pushf
or
add
arpl
sahf
and
cli
arpl
lods
jo
pop
sbbb
mov
add
mov
cli
jmp
fstpt
jmp
inc
aas
push
inc
lret
xor
and
scas
mov
test
jle
pop
cmp
jecxz
scas
adc
mov
nop
pushf
and
testl
jmp
jle
pop
jmp
repz
cmp
cmp
xchg
adc
push
int3
cmp
loopne
les
mov
into
pop
xor
add
fs
dec
mov
mov
sub
add
lods
push
jae
ret
insb
sub
arpl
mov
push
testb
movsb
sbb
divb
lds
pop
clc
lds
mov
dec
add
mov
jecxz
movsl
test
shl
add
sub
adc
mov
mov
divb
arpl
sti
and
loope
and
cmp
imul
shrb
pop
push
or
dec
xor
mov
insb
sbb
popa
and
xchg
lods
push
mov
sub
jns
pop
stos
cmpsb
xlat
push
sbb
inc
in
adcb
push
je
cmp
inc
gs
lods
push
adc
sub
lret
addr16
xchg
mov
xor
push
incl
lock
jmp
stos
pop
jo
xchg
lret
inc
push
data16
xor
ficomps
mov
imul
lds
jns
inc
dec
dec
mov
add
pop
cs
iret
ret
andl
imul
mov
push
std
lock
xor
cmp
mov
push
data16
push
push
shl
mov
in
jne
jp
cmpsl
jge
xor
and
loop
push
mov
iret
and
pushf
xchg
sub
or
add
je
ss
fnstcw
inc
les
add
sub
ds
lock
pushf
add
adc
mov
or
mov
push
movsl
push
ja
push
fldt
xchg
addb
mov
dec
add
fmull
enter
add
js
dec
out
mov
aas
lds
dec
mov
jns
and
lcall
cld
xchg
cmp
xor
sbbl
xchg
outsb
lcall
lods
aam
mov
idiv
fldt
enter
das
pop
push
jo
sub
dec
test
jne
scas
leave
xor
push
insb
lods
pop
cmp
sbbb
dec
sahf
test
bound
jbe
cmp
pop
adc
jb
les
and
in
gs
xchg
xor
push
sbb
inc
call
sbb
int
mov
rorl
push
scas
mov
std
pop
mov
adc
pusha
cmpsl
dec
cmp
mov
and
push
sub
xor
push
xor
push
movsb
push
cmpsl
js
mov
cs
mov
jo
out
ficoms
push
je
loopne
cmp
adc
js
inc
stc
jmp
sahf
jno
lret
push
out
inc
int3
dec
cmp
lods
int
pushf
push
ret
add
jbe
and
fiadds
popa
clc
fcomp
rclb
mov
cltd
mov
push
pushf
xchg
adc
sbbb
and
dec
inc
inc
scas
test
jle
fldt
push
out
insl
sub
out
push
cmp
fstpl
ret
test
gs
lds
leave
fidivs
push
jmp
mov
xchg
and
cld
hlt
adc
mov
or
jp
xlat
xchg
loope
mov
in
stos
jmp
fs
bound
pop
cmp
jno
sub
pusha
int
adc
cmp
gs
pusha
pop
push
xchg
sub
outsb
cwtl
sub
push
popa
test
inc
in
push
inc
lcall
loop
pop
les
cld
mov
jbe
mov
fwait
xchg
xchg
mov
fsts
or
dec
in
xor
mov
lds
ljmp
push
fsubrl
add
outsl
xchg
aaa
dec
cmp
aad
lock
loop
mov
int
inc
insl
jge
scas
sbb
mov
cld
mov
cmp
mov
mov
loopne
stos
in
fnstsw
sbb
mov
stos
in
sbb
pop
loop
imul
out
dec
cmp
pop
push
mov
jae
dec
mov
bound
adc
rep
xchg
and
leave
dec
popf
jae
add
jo
push
daa
stc
or
push
int
shr
int
clc
incb
jg
cmp
or
xor
out
icebp
fsubr
test
mov
inc
lea
adcl
mov
es
pop
lock
cmpsb
popa
sahf
xchg
fildl
inc
ja
lods
xlat
cmc
test
js
cmp
cmp
jmp
jne
xchg
xchg
pop
or
and
cmpsl
dec
pushl
add
enter
mov
int3
shlb
pop
jg
xor
jge
call
es
fisttpll
ret
out
mov
adc
mov
stc
in
and
mov
pop
mov
adc
enter
mov
inc
xchg
lock
adc
pusha
fcomps
push
leave
dec
and
dec
mov
push
fadds
cmpsl
xor
sahf
mov
sub
enter
push
sbb
add
enter
mov
pop
mov
push
mov
fdivr
inc
std
dec
cld
sbb
dec
leave
std
rep
mov
in
icebp
mov
inc
test
lahf
cs
add
jge
push
shll
mov
xor
jne
add
pop
decl
cmp
push
fxch
inc
int
jg
fstpl
xor
insb
icebp
push
adc
ss
mov
js
cmp
daa
mov
jle
inc
inc
or
mov
out
or
cmp
cmp
ds
dec
and
into
fldt
sbb
arpl
jnp
notb
movsl
inc
and
cwtl
fsubrl
and
mov
ret
add
int3
sbbl
xor
in
cwtl
inc
push
call
mov
or
or
shr
filds
scas
inc
mov
xchg
push
insb
push
mov
nop
mov
mov
mov
fs
scas
daa
xchg
cmpsl
ds
popa
clc
inc
add
and
xchg
jg
dec
add
fimull
daa
lock
mov
xchg
icebp
nop
loop
xor
adc
mov
cmpsw
inc
fwait
xchg
sbb
rol
add
insb
das
mov
pop
mov
jne
jl
scas
mov
sub
in
arpl
clc
out
sub
xchg
and
mov
add
es
xor
lock
xchg
xor
test
jo
or
clc
mov
dec
cmp
mov
jb
movb
or
das
pop
incl
mov
das
adc
sbb
dec
loope
xchg
push
aam
sub
sbb
xor
hlt
in
loope
jle
mov
mov
data16
and
std
ss
cltd
cmpsl
cmc
loopne
lcall
jg
push
cmc
jbe
mov
sahf
add
dec
pop
sbb
sbbb
mov
mov
cmc
cmp
int3
dec
rorb
add
mov
push
cmp
cmp
daa
mov
adc
mov
jae
movsb
pusha
pop
mov
dec
jmp
iret
in
xchg
pop
test
fsubl
jnp
cmpsl
cld
push
in
cmc
nop
mov
and
ret
xchg
jmp
xor
mov
rcll
orl
aad
inc
cwtl
sbb
pop
inc
sbb
inc
sbb
nop
lahf
pop
pop
call
notl
fs
mov
repz
icebp
js
dec
push
nop
push
adcb
cmp
jb
outsb
int
dec
push
xchg
inc
lods
shrl
into
inc
rcrb
out
lock
push
repnz
fbstp
cmp
dec
fbld
and
popa
add
iret
fistpl
push
movsl
cs
mull
test
pop
pushf
xor
pop
fcoms
cmp
imul
mov
jae
pop
inc
pop
push
ret
repz
cltd
sarb
js
dec
out
jne
aaa
test
dec
jg
jl
mov
ss
fldz
inc
cld
lcall
in
addl
xchg
xor
fcmovu
and
shrl
and
popa
leave
enter
or
jl
or
leave
mov
sbb
int3
dec
fsubrl
mov
icebp
cmpsb
rcrl
scas
lods
push
mov
iret
aad
stos
insl
sbb
fwait
decb
movsb
mov
daa
add
inc
sub
mov
mov
sti
sar
leave
cli
xchg
sti
pop
pop
repnz
xor
mov
xchg
ss
fadds
and
loopne
lods
mov
daa
rclb
cli
xchg
mov
aad
push
xlat
stos
dec
mov
or
dec
pop
mov
fsubrl
xor
cmp
xor
push
push
lods
jo
dec
movsb
icebp
jge
jp
cmc
fidivrs
repz
add
pushf
mov
sub
and
mov
nop
shrb
mov
insl
and
push
mov
add
dec
loop
jp
mov
cwtl
imul
out
outsl
es
outsb
cmc
pop
call
mov
cli
jae
cli
lods
rcll
insb
mov
fsubrs
jo
or
ret
inc
xchg
sub
cmp
insb
shr
les
mov
test
pop
cmp
pop
adc
or
mov
popf
daa
push
mov
xchg
std
sbb
mov
and
mov
arpl
loop
mov
sbb
inc
jo
jl
mov
ja
es
adc
enter
add
and
iret
popf
lods
pusha
gs
pop
or
popa
inc
mov
cmp
movlps
sbbl
cmp
push
push
lretw
into
pop
outsb
ret
cmp
pop
and
push
aas
popf
lods
xor
inc
cwtl
stc
pop
jg
xorl
imulb
jae
cwtl
call
into
movsl
pop
incl
fisubs
dec
pop
stos
imull
sub
pop
test
pusha
and
add
push
decb
push
cld
ja
add
gs
std
jl
xchg
in
cltd
js
rorb
lret
xor
jns
inc
outsl
ljmp
test
int
jbe
inc
sub
popf
lahf
mov
bound
cmp
or
outsb
sbb
mov
stc
mov
jge
mov
cmp
mov
lahf
das
sub
cmp
movsl
mov
imul
adc
or
cmpsl
mov
orb
inc
rol
sti
xchg
hlt
xchg
add
sbb
push
mov
push
daa
mov
sbb
aam
xchg
or
xor
push
jmp
push
cmp
fldenv
dec
repnz
insl
dec
push
scas
lcall
test
stos
mov
movsl
scas
xor
xor
or
push
test
xchg
pop
dec
add
cmpsl
lcall
rolb
in
xchg
xor
jae
lahf
das
push
addr16
and
push
pop
mov
addb
cmpsl
jne
push
rcrb
push
add
and
ljmp
in
fcomi
iret
add
mov
jle
push
cmp
jb
imul
push
outsb
sub
dec
int
dec
lret
out
and
iret
push
mov
push
ss
hlt
testl
mov
mov
jle
loopne
icebp
mov
sub
lods
enter
cmp
mov
pop
pop
jg
push
inc
add
inc
mov
lcall
cwtl
das
lcall
int3
fisttps
jmp
aaa
add
xor
cwtl
pop
add
cmpsb
shll
lds
sbb
sub
mov
mov
shl
xor
jl
cmp
adc
popa
ds
dec
inc
stos
cmp
mov
cmp
sbb
xor
sub
gs
add
cli
xchg
into
subb
xchg
inc
mul
subb
icebp
insb
cmp
pop
loope,pt
mov
dec
add
int
fimuls
sub
sahf
sub
xchg
jo
test
mov
repnz
scas
inc
subb
lcall
das
push
je
iretw
mov
add
out
push
int
out
jno
push
fcomps
dec
imul
flds
mov
and
or
mov
ret
jae
scas
sub
stos
mov
lret
xor
scas
xchg
adc
inc
inc
sbb
sbb
push
push
movsb
dec
cmp
test
pop
xchg
out
aaa
lret
push
pop
jno
fmul
test
push
mov
mov
imul
mov
xlat
out
mov
int3
loopne
pop
push
sti
inc
shlb
aam
shrb
push
mov
xor
add
popf
add
mov
pop
incb
jle
imul
ret
int3
and
mov
adc
mov
sahf
cmc
subb
or
pop
dec
in
push
sub
imul
push
shll
adc
mov
dec
stos
int3
sbb
jne
xor
cmp
jecxz
adc
fstps
adc
cmp
stc
fildl
ljmp
stc
mov
sub
add
out
insb
xlat
xchg
dec
cld
xchg
xorl
subb
inc
dec
out
stos
jp
and
jl
pop
out
cld
dec
hlt
add
cmp
and
push
repnz
xchg
cs
adc
add
ret
out
mov
push
idiv
int3
jg
mov
cmc
dec
or
xlat
mov
cmpsb
jp
sbb
idivb
nop
daa
fisttps
jmp
fs
das
lds
mov
or
dec
in
sub
mov
pop
push
pop
outsl
adc
cmp
and
adc
add
iret
or
pop
outsb
jp
xchg
push
jg
dec
xchg
push
mov
iret
popw
xor
fmull
movsb
mov
xchg
pop
pop
xor
sbb
rcrb
push
lods
adc
dec
mov
hlt
rorl
adc
call
add
lahf
xor
in
das
fsubl
stos
in
stos
add
add
shrl
shlb
aaa
ss
int
pop
arpl
adc
scas
clc
jp
movsl
into
adc
jle
mov
int3
fstl
pop
inc
lods
mov
sbb
rorb
data16
dec
jno
push
cmp
pop
mov
test
scas
rorl
lock
sub
loop
inc
cmpsb
test
andl
nop
push
jne
stos
jmp
sbb
mov
loopne
mov
out
das
fs
cld
ror
jne
or
push
subb
pop
sub
addr16
hlt
out
cmpsl
sub
jp
cs
outsb
cmp
sub
aas
ja
clc
fwait
je
pusha
xor
addl
sub
xchg
rorl
jb
nop
push
cli
jne
inc
in
popa
ss
push
sub
pop
ds
cmpsb
lock
cmp
fcomip
xchg
sbb
sbb
jp
imul
in
lock
enter
pop
in
std
or
jg
xchg
xor
push
mov
pop
inc
push
or
mov
lahf
test
inc
mov
sub
inc
and
and
mov
xor
loope
js
aaa
movsl
mov
lcall
cli
lret
iret
daa
outsl
xor
cmpl
pop
mov
ljmp
andb
cmp
cmp
jae
mov
adc
sub
pop
lcall
push
xor
mov
stc
jno
xlat
mov
dec
pop
ljmp
icebp
mov
orb
and
push
sbb
and
and
push
cld
mov
fdiv
inc
cmp
push
popf
cmp
xor
adc
gs
jns
sub
mov
int
and
mov
dec
ret
push
pop
shlb
ss
jb
lods
mov
cmp
pop
add
stos
mov
fsubr
notb
call
repnz
jbe
mov
in
fs
add
cmp
aam
movd
test
aam
test
adcb
ficoml
shll
mov
std
jo
test
aas
push
daa
lcall
or
pop
xchg
das
or
repz
cmovl
aaa
nop
add
pop
xor
leave
mov
fildll
outsb
outsl
or
repz
jge
mov
in
ss
pause
jle
dec
xor
dec
data16
dec
movsl
rolb
fdivl
pop
jge
addr16
mov
jle
jmp
aam
outsl
mov
jg
sti
call
call
xor
movsb
xchg
mov
loopne
and
jecxz
mov
cmpl
and
in
cld
in
insb
pop
push
or
fdivr
mov
xor
cltd
mov
pop
xchg
mov
jno
mov
shl
mov
movsl
mov
pop
fst
loope
sub
lea
push
jmp
shrl
lods
mov
mov
outsb
dec
pop
push
add
cmp
mov
fs
pop
adc
dec
add
adc
inc
cmp
icebp
xchg
lods
lea
rcr
add
dec
mov
std
shl
int3
mov
shrb
pusha
adc
inc
xchg
inc
loop
out
jle
cltd
cmp
test
insl
sti
lret
pop
push
xchg
loopne
iret
mov
xor
cld
pop
push
cmc
push
outsl
lahf
inc
sbb
xchg
fmull
cmp
fs
fidivs
mov
xchg
jno
inc
add
sbb
mov
or
sarl
cmp
push
push
aam
pop
cmc
pusha
fstpl
jle
xchg
add
sti
jge
jle
subb
jae
and
icebp
shl
test
pop
imul
push
mov
jmp
or
andl
repnz
jle
arpl
cmp
mov
adc
insl
add
or
repnz
xor
shl
ss
lcall
sub
sub
ret
mov
cld
cmp
cmp
push
cltd
xor
or
pushf
testl
inc
sub
stc
scas
jle
mov
inc
enter
clc
or
in
je
push
das
pop
jno
shrb
cwtl
inc
fucomp
int
into
ss
inc
ret
out
sbb
mov
ja
outsb
add
dec
cwtl
or
int
bound
stos
push
and
enter
dec
mov
pop
cmpsb
jg
call
inc
imul
dec
cmp
and
jbe
xor
inc
dec
inc
gs
lock
inc
sub
ja
imul
inc
dec
loopne
mov
rorb
addr16
cmp
and
sbb
jecxz
jl
jp
xor
iret
sbb
shl
out
fnstenv
xchg
add
mov
inc
or
dec
arpl
fistpll
push
movb
pop
fdivrl
mov
test
cmp
pop
pop
out
jg
xchg
lea
mov
xchg
icebp
push
jecxz
dec
adc
or
mov
dec
arpl
lds
dec
or
or
cmp
shl
push
enter
jmp
or
stos
lds
jne
shlb
idivb
inc
mov
mov
iret
fiaddl
pop
std
or
sbb
inc
adc
mov
push
in
inc
fdivrl
push
into
gs
fs
mov
jecxz
push
mov
fiaddl
add
lock
pop
incb
cmp
out
imul
fs
in
lcall
cwtl
jb
mov
cmp
mov
sub
xor
fnstenv
movsl
notb
das
icebp
loope
dec
jecxz
dec
in
xchg
push
sbb
jp
mov
shll
xchg
add
lods
push
adc
or
xchg
fimull
sbb
hlt
int3
test
add
ret
lahf
push
cmp
orl
adc
pop
cltd
pop
and
nop
mov
xchg
cmp
dec
mov
fcompl
or
mov
jmp
sahf
ds
mov
scas
cmp
imul
cmpsb
sub
out
in
sahf
mov
dec
mov
jnp
pop
and
mov
cmc
adc
pop
and
push
in
loopne
jg
lea
je
mov
adc
scas
aam
sub
mov
subb
jno
jl
into
xor
ja
inc
push
mov
inc
or
add
sub
push
stc
leave
into
nop
push
mov
lods
cmp
and
mov
or
mov
dec
or
nop
sub
lods
dec
mov
and
notb
jnp
pop
je
fs
lods
lahf
fistpll
loopne
jno
mov
mov
inc
rcl
clc
jp
ljmp
imul
inc
and
mov
push
sub
xor
mov
dec
test
daa
notb
sbb
jp
fldcw
sbb
mulb
ret
xor
mov
andb
imul
xor
sub
in
or
pop
and
cltd
lods
dec
in
je
push
lock
int3
cld
iret
dec
loopne
test
repz
sub
fisttpll
inc
xlat
into
add
in
sarb
sub
arpl
add
or
fisubrl
push
call
test
bound
jae
sarb
gs
or
sub
stos
mov
js
xchg
cmpsl
mov
mov
in
cmp
out
cmp
fisubs
jbe
scas
daa
xchg
add
jb
fxch
and
leave
or
es
or
lcall
subl
sub
and
and
add
inc
xor
lea
inc
popa
cltd
cld
stos
fldenv
fbstp
fstl
hlt
adcl
mov
mov
sbb
test
jp
pop
popa
aas
push
shll
inc
mov
xchg
jae
fists
push
or
out
pop
out
jns
jge
fidivrl
push
cmc
gs
daa
ljmp
pop
insb
or
dec
or
mov
jbe
sahf
arpl
inc
pop
cmp
push
and
sbb
xorb
xchg
lock
adc
push
mov
cs
cmp
pop
jbe
out
xchg
and
mov
shrb
pushw
adc
dec
outsl
push
scas
imul
cmp
jmp
ret
shrb
icebp
adc
fdivl
rcrb
stos
inc
jb
lret
addr16
sub
fistl
push
jl
sub
cmpsb
pop
cwtl
xor
loope
jae
pop
in
movsl
icebp
idiv
inc
adc
or
or
jbe
enter
daa
adc
sub
jns
xorl
or
inc
stc
xchg
loop
in
test
lcall
sbb
sbb
data16
mov
inc
in
ja
call
push
inc
mov
inc
movsl
loopew
push
fcoml
sub
mov
pusha
out
mov
mov
scas
int3
pop
in
insb
or
popf
into
rcl
jbe
scas
mov
sbb
test
ljmp
jnp
mov
inc
test
nop
addr16
xchg
cmp
test
aaa
fiaddl
or
xchg
in
dec
cwtl
scas
push
in
mov
pop
mov
mov
cli
fcoml
jno
cmp
icebp
jl
sti
jg
cmp
movsb
cmp
mov
mov
fldenv
scas
test
xchg
add
psubw
js
sahf
or
test
jp
cmp
cmp
dec
lock
jno
adc
jne
ret
test
inc
lods
jle
stos
inc
fmuls
int3
les
into
inc
iret
and
sub
or
and
mov
lret
lret
or
test
inc
syscall
jp
cmp
ret
xor
out
and
pop
jmp
dec
jmp
sbb
xchg
sahf
jle
repnz
jb
test
rcrl
test
clc
mov
addl
cmp
pop
pop
push
les
sub
jmp
popa
jge
pop
fidivl
adc
jbe
mov
jl
jns
repnz
jle
out
in
mov
icebp
aam
xor
stc
cli
mov
fisubs
mov
mov
fistl
sti
push
mov
jbe
mov
mov
and
push
inc
into
adc
loopne
iret
jp
subb
pop
dec
out
cli
sbb
sti
loopne
cld
push
mov
inc
stc
dec
dec
sbb
rcl
push
shlb
pushf
sbbl
ds
popf
lods
pop
sbb
sub
adc
int
xchg
sbb
mov
test
pop
ljmp
out
dec
imulb
add
sub
xchg
ret
push
jle
push
cmc
jmp
outsb
or
cmp
jne
pop
cmp
stos
ja
pusha
jbe
cmpsb
mov
addr16
push
out
sub
jp
and
fcmovnbe
outsl
or
ret
dec
sti
out
arpl
aad
pop
inc
aaa
notb
daa
xchg
sub
call
mov
mov
jp
sti
ret
mov
ficompl
inc
inc
outsl
mov
jmp
ret
mov
test
inc
jb
ret
fisttpll
scas
mov
cmpsl
pop
adc
xlat
jp
and
pop
dec
fisttps
and
push
into
iret
lret
push
push
sbb
or
mov
fidivrs
and
ds
inc
push
mov
mov
scas
ficomps
jl
imul
dec
lods
pop
xor
inc
sub
mov
and
nop
adc
sub
inc
mov
xchg
loop
nop
push
mov
insb
jmp
adcb
jbe
add
pop
jmp
add
cmp
retw
adc
mov
addb
das
jl
cmp
cmp
jle
sti
cmpsl
jns
add
notb
stos
sub
xor
pusha
rep
mov
loop
inc
repnz
int3
test
pop
cmp
popf
sub
mov
rolb
ja
inc
sbb
je
sbb
or
stos
jmp
inc
bound
addl
inc
push
or
nop
and
inc
pop
insl
scas
cmc
shrl
dec
jmp
sbb
cmpsb
lods
mov
test
orl
repnz
shl
dec
nop
scas
jns
sub
mov
mov
js
outsb
stos
sub
push
das
or
cmp
lret
jno
inc
pusha
mov
xchg
movsb
shlb
or
or
pop
or
popa
stos
sub
jg
loop
mov
sti
adc
inc
or
adc
add
loop
fwait
xorb
test
inc
sub
call
inc
cmpsl
mov
sbb
dec
ss
shl
push
cmp
lock
cs
into
xor
jns
lock
out
imul
adc
insl
jl
mov
les
test
add
pop
in
inc
movlps
add
push
and
fs
inc
dec
sub
out
in
and
call
out
adc
test
fs
imul
dec
and
test
outsl
cmc
sub
fistl
and
xchg
popa
mov
or
shl
inc
or
int3
jo
inc
aas
cmpsb
pop
imul
adc
aad
clc
jne
icebp
ja
mov
xor
in
clc
adc
fildll
jmp
out
adc
repz
mov
in
lahf
pop
cwtl
xchg
or
pop
lods
add
stos
mov
in
call
and
mov
add
ljmp
xorb
and
sub
ret
repz
mov
pop
inc
push
fstl
xchg
pop
movsb
cmp
fbld
fldenv
fisubs
das
lock
add
mov
push
sub
inc
push
xchg
dec
adc
push
imul
mov
insb
mov
testb
xchg
mov
insb
std
pop
xorl
and
cli
push
push
jmp
cmp
sbb
sbb
data16
inc
movsb
loopne
xchg
mov
cmp
cld
cmp
inc
scas
rep
fidivs
push
adc
sbb
pop
mov
dec
andb
sbb
mov
sub
or
adc
aas
add
pop
and
dec
mov
lods
adc
popf
or
sub
stc
adc
in
lea
andb
xor
push
popa
call
ja
fnstenv
pop
rcll
or
rclb
cmp
icebp
outsl
push
out
inc
popa
push
sub
and
test
pop
xchg
int3
inc
mov
sbb
sbb
sbb
pop
pop
xchg
aad
repz
iret
fdivs
into
adc
inc
sub
pop
ja
fldl
in
xchg
xor
cmc
mov
push
cmp
dec
dec
inc
cwtl
les
pop
jbe
cld
mov
and
stos
dec
pop
fsubrs
sub
mov
or
cmpsb
inc
push
mov
pop
ds
push
paddusb
sbb
in
sbb
sbb
fsubp
aas
stos
out
js
sbb
xchg
sub
scas
inc
cli
pushf
in
das
das
scas
and
jmp
push
or
int
jg
fs
rcl
jnp
movb
cmp
repz
fcompp
add
inc
jae
clc
js
add
mov
lods
mov
pop
loope
lock
jl
xchg
pop
xor
or
fcoms
mov
xchg
cmc
xchg
scas
and
sbb
inc
mov
scas
xlat
mov
es
insl
cmc
mov
out
popa
daa
xchg
daa
jmp
popa
or
fildll
lds
shlb
arpl
orb
daa
cmp
xlat
negl
sub
inc
les
dec
inc
push
xor
jge
ds
leave
pusha
xchg
push
arpl
mov
jle
fildll
mov
mov
add
xchg
pop
outsl
fnstsw
cli
and
int
je
mov
or
fcoml
stos
shrl
jl
loop
mov
pop
fucomip
test
aaa
fldl
pop
xor
mov
or
scas
ja
loopne
adc
inc
lods
cs
xchg
cmp
dec
es
movd
int3
icebp
nop
sbb
sbb
cmp
dec
and
pop
dec
loopne
xor
and
loop
pop
add
pop
out
cwtl
pop
jne
pop
test
pop
repz
ja
jle
loope
dec
jnp
jle
push
fstpl
imul
enter
iret
pop
xchg
ljmp
adc
add
js
mov
pop
ret
pop
inc
rcrb
addr16
shl
into
sbb
ss
sub
lea
dec
and
push
push
lcall
fcompl
out
pop
sub
dec
jo
or
or
xchg
sub
add
ficompl
inc
in
xchg
mov
mov
sub
dec
stos
cmpsb
mov
mov
cmp
cmpsl
daa
pop
mov
test
ret
jle
js
and
sub
jl
dec
iret
add
rcl
int
pop
dec
mov
mov
adc
cwtl
jge
adc
test
outsb
stos
leave
cs
jge
mov
add
std
lret
pop
push
lea
or
scas
mov
mov
test
daa
repz
test
sbb
insl
pusha
and
xchg
xchg
pop
lret
idivl
movb
push
jb
mov
push
sahf
insl
adc
push
ss
push
adc
cwtl
sub
test
shrl
dec
pop
mov
fmul
jns
mov
test
push
jnp
xorb
or
jge
and
add
sbb
push
cwtl
push
mov
or
jno
jge
ljmp
test
loop
push
pushf
inc
fiaddl
add
fidivl
inc
xchg
lock
ss
ds
mov
add
daa
xor
pop
fisubrl
test
and
idiv
and
inc
sbb
push
sbb
loope
fptan
cmp
negl
std
jg
jl
fimull
les
xor
call
fdivrl
cmp
into
ds
arpl
cmp
xlat
mov
cs
imulb
scas
cli
sub
mov
dec
sbb
nop
push
or
jae
cwtl
jge
pop
cmpsl
xor
mov
add
inc
loope
lret
sub
outsb
shlb
xchg
mov
mov
and
push
push
mov
add
daa
lcall
insl
ja
mov
mov
mulb
scas
fstps
jae
divb
jo
xor
adc
dec
cmpsl
pop
les
inc
shll
sbbb
fisttpl
std
xor
insb
add
and
adc
mov
sti
popf
add
jle
xlat
jmp
xchg
sub
bnd
mov
mov
sub
mov
mov
sbb
xchg
cmp
cs
pop
mov
adc
loopne
mov
fisubrs
aaa
push
cmp
loope
stc
movl
adc
fmull
mov
movsb
cld
inc
cmp
or
cmp
dec
cmp
mov
insl
repz
hlt
rclb
aad
out
pop
pop
push
int
stos
xchg
fst
hlt
dec
test
cmc
adc
dec
adc
cld
inc
insb
mov
xlat
pushf
arpl
xchg
pushf
loope
sbb
lods
pop
mov
ds
sub
insb
sub
pop
cmp
xorl
push
adc
xor
pop
decb
sub
push
rcrb
adc
std
imul
push
rorl
mov
adc
jmp
cmp
dec
xorb
sub
adc
dec
dec
bound
stos
mov
fcoml
cld
outsl
sahf
in
add
xchg
out
fsubp
cmp
dec
outsb
out
notb
mov
lea
mov
bound
push
inc
pop
dec
ret
cmp
hlt
insb
test
sbb
mov
pushf
xor
push
pop
outsb
xor
xor
dec
in
pop
out
xchg
xchg
xchg
mov
push
add
aaa
cmp
push
lea
jne
dec
les
mov
call
lds
je
pop
jbe
jae
inc
ficomps
push
mov
push
push
adc
les
xchg
test
jge
adc
cmpsl
jecxz
fnstsw
psubsb
mov
jns
pop
xchg
sbb
mov
jmp
mov
mov
or
fdivl
push
adc
test
jo
push
pop
push
and
aad
outsb
fwait
addr16
stc
pusha
sti
mov
iret
es
xor
jbe
adc
test
test
insb
rorl
fnstcw
iret
lods
hlt
jne
fldl
lods
incb
mov
push
mov
in
imul
movsb
stos
or
add
jns
cmpsl
sub
dec
lcall
jo
pop
lcall
pop
lret
xlat
ficoml
cmc
outsl
adc
push
sub
stos
fstps
pop
test
test
mov
in
test
aam
cltd
mov
push
cltd
loop
dec
lock
cs
add
adc
cmp
loope
cmpsb
cmp
jle
aam
mov
addr16
inc
push
gs
out
or
mov
dec
movsl
test
lock
mov
ret
enter
xorl
cmp
ret
mov
rolb
mov
loope
je
repz
loopne
jl
xchg
inc
movsb
aas
cltd
cli
pop
sub
scas
aas
add
sub
mov
cmc
jle
rcrb
xchg
mov
push
jecxz
bnd
mov
push
inc
mov
mov
popf
call
cmpb
bound
xchg
jp
mov
in
push
std
out
test
mov
jo
leave
test
test
into
loop
dec
mov
jne
mov
and
adc
jp
push
or
lret
testl
xor
ljmp
test
add
xchg
jnp
aam
inc
dec
pop
sbb
fidivrl
dec
or
movsl
pushf
aas
int
repnz
dec
lods
jns
shrl
scas
mov
dec
insb
aam
cmp
dec
in
test
sub
xchg
js
leave
mov
adc
aam
dec
les
clc
xchg
cwtl
and
pop
loop
push
sub
xor
cmp
xchg
pop
mov
movsl
sbb
push
in
mov
jb
pop
test
ja
and
mov
sub
jne
ja
mov
lods
inc
jae
sbbb
popf
lret
jp
arpl
adc
mov
sbb
lea
adc
sbb
fnstcw
dec
push
jmp
jmp
mov
mov
inc
ljmp
xor
lea
xlat
insb
popa
clc
cltd
ss
out
lock
xchg
or
xor
shlb
js
or
xlat
outsb
repz
cmc
mov
rcll
xchg
test
and
shrl
add
sbbb
mov
xchg
mov
fcompl
mov
mov
repnz
cmp
and
fcom
sbb
adc
dec
fisttps
and
jp
out
dec
sti
enter
add
fwait
xor
addl
insb
loopne
push
pop
or
mov
jp
add
xchg
sub
sub
jge
mov
das
lds
mov
push
out
test
sbb
jge
test
add
sahf
xor
test
inc
mov
lret
sbb
pop
lret
add
cvtps2pd
pusha
lea
mov
in
pop
cltd
ret
int
pop
mov
gs
xlat
out
and
sub
jg
mov
in
loopne
jecxz
add
das
js
push
test
sbbb
jns
sbb
sub
lock
jns
sub
pop
in
test
lods
mov
stc
aad
mov
gs
incb
dec
sbb
bound
rcll
lods
inc
in
sbb
cmp
jno
jmp
fistl
jns
jmp
xchg
add
test
adc
push
test
divb
and
mov
dec
adc
jb
sbb
ljmp
jno
jno
das
imul
pusha
ja
mov
sub
leave
adc
out
popa
pop
xchg
jbe
push
jns
test
shlb
jns
push
adc
jecxz
push
das
int
stc
arpl
xor
add
fnstsw
pop
icebp
scas
sub
mov
in
mov
lcall
add
xor
test
mulb
movsl
inc
movsb
dec
cmp
mov
test
lahf
iret
bswap
cmp
mov
jge
loopne
mov
outsb
add
fucomi
pusha
neg
pop
xlat
outsb
push
push
js
inc
stc
sub
adc
cltd
jl
pop
sub
ds
push
rcrl
ss
lock
in
inc
xor
jne
sti
mov
jbe
shrl
loopne
aad
daa
insb
cmp
pop
sbb
or
push
gs
data16
lods
fisubl
sub
stos
es
nop
out
lret
and
dec
pop
and
mov
sbbl
adc
pop
int3
push
jge
ret
or
mov
scas
es
sbb
bound
fidivl
stos
test
sub
mov
pop
ja
shrb
nop
clc
lea
cmp
sbb
inc
dec
xor
push
dec
push
fstps
mov
push
sub
cmp
jg
repnz
pushf
rcr
out
btr
sti
push
aas
sub
outsb
js
pushf
cmovp
cmpsb
lock
cltd
push
inc
dec
cmp
push
lock
dec
xchg
adc
in
xor
cmp
enter
outsl
inc
cltd
mov
cmp
mov
sbb
xorl
sbb
outsb
mov
jle
mov
repnz
cmpb
cmc
lods
lds
stc
aad
stc
xlat
es
add
sub
mov
inc
sbb
test
popl
scas
adc
jmp
cmpsl
sbbb
sub
pop
pop
mov
gs
pop
pop
cmc
lcall
out
imul
jno
loop
cmpsb
cmp
sarb
lods
les
loopne
pop
adc
sub
xor
loop
mov
test
or
jle
shlb
lea
dec
push
xchg
xchg
sbb
mov
pop
insb
imul
pop
std
imul
and
andl
push
movsl
cmp
shrb
outsb
xor
popf
lahf
imul
jl
jne
loope
add
int
ret
mov
adc
outsb
jl
subl
jmp
rcrb
stos
fiadds
cmpsl
jp
inc
out
mov
adc
ret
insb
loopne
pop
lods
jp
push
sub
add
inc
rcll
in
pop
int
push
jae
xchg
xor
arpl
or
fstpl
inc
fadds
and
loope
jl
out
mov
pop
out
lcall
or
test
icebp
jge
lds
and
jle
rcrl
xlat
icebp
xchg
mov
shrl
iret
rorl
push
jo
in
sub
sbb
sub
out
or
or
sti
test
jns
lahf
loope
or
cli
xchg
jo
xor
push
mov
sbb
cmpsl
nop
mov
ja
imul
adc
int3
xor
cwtl
in
adc
mov
jae
pop
push
jne
stos
pop
outsl
mov
inc
repz
mov
add
mov
shrl
movsl
and
mov
stc
hlt
dec
inc
pop
mov
stc
or
or
or
jg
and
stc
push
test
hlt
mov
sbb
pop
sahf
jno
push
and
mov
insb
jno
pop
ret
lock
punpckhwd
cmpxchg
addb
mov
test
jl
faddp
inc
pushf
fs
outsb
cmp
push
inc
test
sahf
iret
push
sbb
xorb
popl
push
icebp
mov
in
and
dec
cmp
int
xchg
fs
push
ret
mov
xchg
bts
dec
es
cmp
leave
out
cmp
pop
mov
push
repnz
add
jo
outsb
and
out
xlat
sub
sub
stos
push
mov
mov
bound
push
jge
sbb
lret
into
xchg
mov
aaa
sbb
fidivrs
cmp
add
adc
xchg
pushf
jno
pushf
in
cmpsb
test
rorl
stos
sbb
xchg
cld
int
in
jo
test
or
iret
xchg
sub
inc
adc
fs
cmp
orb
sbb
jbe
add
jae
and
ret
fnstcw
xor
cmp
mulb
fcoml
call
or
jg
lcall
cmp
mov
pop
lea
adc
xor
mov
fcomp
sbb
xchg
cmp
scas
jo
pop
mov
sbbl
add
sbb
or
es
mov
daa
and
inc
fldl
vmovd
adc
stos
mov
pop
adc
sub
js
pop
clc
das
add
icebp
rol
icebp
lahf
sub
ret
jae
jecxz
mov
imul
sbb
dec
loopne
outsl
sbb
sahf
dec
movsl
repz
mov
jge
ret
call
and
je
push
xor
fs
pop
int
data16
fdivrs
dec
lcall
add
lea
cmp
addr16
adc
in
or
pusha
push
daa
outsl
fisttps
sbb
pop
scas
pop
stos
out
rcrl
add
ljmp
stc
leave
fnstenv
and
jo
add
mov
pop
adc
jle
leave
cmp
pusha
mov
in
push
sub
xchg
pushf
cli
xor
dec
fcompl
fdivs
pop
add
xchg
mov
xor
sbb
movsl
mov
gs
adc
mov
inc
jae
dec
mov
sbb
jno
ss
lock
inc
movb
mov
jle
das
ljmp
mov
orl
sbb
mov
fwait
notl
int
inc
jnp
test
fcompl
call
xor
xor
aad
mov
push
inc
rcrb
popf
repnz
jo
cs
cmp
jne
mov
stc
lds
loop
arpl
pop
inc
cmp
bound
icebp
xchg
ret
fnstsw
mulb
outsl
jne
ret
dec
pop
mov
cmp
xor
cmp
mov
or
mov
jge
dec
cmpsb
es
push
imul
repz
sub
js
xor
adc
pop
xchg
lods
push
or
jnp
arpl
cmc
ss
divl
push
lea
pushf
inc
fsubrs
pop
in
jnp
shl
cmp
push
repnz
cmp
xchg
push
clts
test
xchg
call
pop
popf
das
ja
mov
call
aam
sub
dec
jbe
in
fs
shl
stos
stos
lock
and
sub
cmc
cmp
scas
lahf
add
sub
push
mov
xchg
cwtl
imul
add
pop
sub
mov
inc
es
add
add
pop
adc
push
andb
cmp
xchg
adc
sbb
insb
sub
rcr
mov
jb
pop
jl
mov
mov
js
xchg
repnz
fcompl
adc
push
xor
lods
xor
mov
adc
mov
cmc
push
cmp
mov
imul
ja
repnz
push
xor
push
cmp
imul
out
push
jb
std
mov
pusha
jns
xlat
insl
cld
push
sbb
pop
out
mov
ljmp
dec
add
sti
xor
rcrl
jl
xor
xchg
mov
mov
push
lret
jnp
movsb
andl
cli
adc
clc
sahf
cmp
pop
fwait
mov
add
es
jne
jbe
cmp
xchg
jl
mov
icebp
lock
orl
in
test
jge
sti
and
push
jp
insb
adc
adc
push
movsl
daa
add
or
push
testl
int3
or
cmp
jp
xor
rorb
cwtl
pop
daa
pmaxub
push
out
cmc
nop
xor
lret
jle
sub
clc
stos
adcb
sbb
or
dec
mov
stos
sti
aam
inc
adc
jns
sbb
xchg
out
mov
mov
seto
mov
ljmp
movsb
int3
cmp
jo
es
rcrl
push
lods
fdivl
nop
mov
imul
jg
stos
xor
add
rolb
mov
loope
data16
inc
fcompl
sti
popf
add
arpl
in
sub
mov
popa
pop
das
mov
jp
fisubrs
sbb
int3
int3
dec
movsl
mov
loopne
iret
pop
inc
mov
iret
sbbb
push
std
pop
or
ja
lahf
inc
into
iret
in
ljmp
es
adc
sub
sbb
out
xchg
xor
mov
aaa
scas
lea
adc
jb
mov
add
int
push
inc
cmp
testb
loop
sub
loopne
dec
dec
xor
aad
dec
jae
into
xchg
xor
pop
loop
lods
add
mov
into
es
leave
pop
es
out
fbstp
ficomps
and
dec
inc
cmp
out
out
push
inc
mov
cmc
fwait
pop
push
xchg
inc
fistps
fdivs
mov
daa
aas
imul
loop
add
xchg
cli
jle
and
sbb
outsl
lret
pusha
scas
xchg
in
out
add
xor
leave
push
je
loope
mov
imul
mov
nop
mov
imul
cmpl
ljmp
push
cmp
repnz
dec
fisubl
jg
iret
movsb
sbb
dec
loopne
push
fsts
sbb
jl
fadds
push
jb
js
loopne
mov
jno
insb
mov
int
mov
push
dec
mov
std
aad
call
inc
xchg
push
push
cmp
imul
mov
popa
jmp
push
insb
cmp
add
add
add
mov
jnp
push
inc
xchg
sbb
loop
shl
jbe
aaa
stos
jnp
cmp
xchg
inc
in
add
sub
add
ds
mov
ljmp
fbstp
xor
jnp
cmp
out
mov
push
cmc
inc
dec
mov
mov
dec
stc
mov
rcl
imul
push
test
out
mov
jg
dec
imul
repnz
and
fdivrl
scas
std
insl
sbb
shll
add
divb
jmp
and
pop
or
imul
jnp
cmp
test
mov
xor
lods
aas
lcall
cmp
loop
orb
clc
sub
js
sbb
ret
inc
outsl
movb
push
testl
jmp
jg
sti
lret
fdivs
mov
jno
lret
lods
push
and
mov
adc
mov
cld
or
and
andb
mov
pop
scas
pop
sub
pop
mov
dec
out
sbb
mov
pop
ficoml
or
push
icebp
cmpsl
or
xchg
daa
mov
popf
xchg
inc
cmp
jbe
pushf
mov
xor
adc
xchg
fisubrs
or
push
mov
xorl
movsb
mov
inc
push
sub
inc
fnstsw
or
cmp
cmp
sub
mov
adc
out
or
pop
popf
mov
and
jns
sub
outsb
pop
imulb
push
cwtl
sub
xor
add
popa
dec
mov
jp
test
mov
xchg
and
fst
les
add
outsb
or
sub
mov
icebp
movsl
cs
test
aam
sbbl
jnp
xacquire
negl
nop
pushf
in
test
cmp
xchg
push
ja
mov
gs
xchg
fadds
int3
lds
push
or
cmpsl
dec
test
test
jecxz
test
jns
push
inc
mov
cmc
jb
mov
sbb
clc
adc
enter
aad
jmp
mov
cmp
cmpsl
inc
mov
arpl
insb
xchg
out
es
outsb
dec
lret
pop
sub
cmp
push
fwait
push
or
mov
mov
ljmp
mov
nop
cli
ds
mov
dec
jle
dec
pop
test
sub
sub
mov
inc
aam
repnz
sub
dec
fwait
repnz
loop
push
enter
scas
push
enter
push
pop
es
insb
cmp
popa
fcomps
xorl
ret
lret
xlat
mov
and
lea
add
cltd
xchg
iret
popf
inc
shll
dec
out
ficompl
cmp
xor
std
lods
aaa
fcoml
pop
fadd
loop
mov
ds
lret
dec
add
mov
test
xor
repnz
pop
jg
mov
cmp
shrb
cmp
cmp
bound
push
or
icebp
push
rcr
or
scas
aaa
sahf
mov
int
jb
popa
andb
lret
pop
fsubs
data16
cs
aaa
stc
push
outsb
test
sub
mov
add
mov
jmp
ja
dec
jle
in
ljmp
adc
ja
mov
pop
cwtl
mov
pushf
mov
mov
inc
mov
xchg
add
xlat
push
mov
cwtl
cld
scas
sub
jp
adc
stc
jne
sub
rep
or
addb
xor
mov
xchg
test
das
loop
dec
or
adc
mov
jb
mov
fistps
in
dec
fwait
imul
pop
mov
loope,pt
mov
jne
arpl
aad
mov
outsb
mov
into
jne
arpl
aas
insl
popa
mov
outsb
mov
jns
or
cmpsl
xchg
repz
xchg
sbb
mov
aas
xchg
inc
sbb
test
mov
shl
mov
mov
adc
jae
add
out
lock
jbe
loop
testl
pop
cmp
in
ffree
popf
xor
xor
arpl
xchg
repz
sahf
xor
ljmp
mov
clc
hlt
shll
shlb
out
test
lahf
imul
and
and
push
rclb
fistpl
cs
push
ss
fdivr
into
cs
jbe
cmc
mov
pop
gs
into
add
fmull
xchg
mov
ja
ss
xorb
cmp
and
negl
adc
and
dec
jge
in
pop
jno
inc
inc
fnstsw
loope
mov
push
test
movsl
inc
xlat
jns
adc
loopne
pop
std
movsb
bnd
aas
jl
pop
sub
inc
das
dec
fidivl
aad
mov
inc
loopne,pt
fs
pop
push
mov
ds
lret
nop
daa
std
test
pop
xor
roll
ret
je
fildll
push
dec
cmp
sub
fcoms
push
jecxz
addr16
or
adc
rcrb
xor
in
jbe
push
xor
popf
stos
nop
pop
in
push
enter
cmp
mov
inc
shr
stos
push
test
cmc
pop
cld
fdivl
add
dec
out
aam
rorl
aaa
stos
in
jo
roll
mov
dec
repnz
je
mov
push
inc
xchg
push
dec
jl
jmp
add
push
rcrb
ja
push
insl
jge
lds
xor
push
in
mov
cmp
dec
add
and
or
or
mov
dec
jns
lahf
subl
pop
inc
leave
call
cmp
sarb
pop
push
dec
fnsave
add
dec
inc
lock
mov
ja
adc
aad
jne
pop
aad
jno
sub
adc
mov
mov
fsubl
shll
lret
adc
mov
dec
pop
idivb
push
fisttpl
xchg
loopne
movsl
cmp
xchg
rcrl
jl
add
ret
repnz
nop
cwtl
ret
rclb
mov
pop
dec
arpl
lcall
adc
clc
test
dec
outsl
mov
filds
psubsb
and
cmp
aaa
lahf
mov
inc
pop
scas
rcr
mov
xchg
cmp
int3
gs
adc
sahf
sahf
dec
insb
in
stos
sti
xchg
jae
call
mov
add
iret
rol
popa
insb
sub
ss
daa
outsl
cltd
ljmp
or
push
dec
push
mov
jbe
sub
mov
jbe
push
data16
stos
shrl
pop
xor
sbb
xchg
cmpsb
cmp
push
sbb
push
enter
popf
ds
insb
cmp
pop
add
stos
shlb
dec
dec
add
insl
jae
push
out
mov
stc
nop
dec
pop
or
int
mov
aam
push
dec
fbstp
pusha
idivl
jno
jmp
pop
loope
ja
cmp
and
es
enter
or
cmpsb
stos
lret
jno
and
push
mov
mov
and
mov
xchg
sub
cmc
aas
call
xor
repnz
outsl
push
cmp
inc
mov
movsl
cmp
repnz
movsl
loope
lret
sub
mov
outsl
enter
cmp
mov
outsl
jbe
pop
pusha
mov
push
lret
dec
loope
ret
enter
sub
push
mov
in
ret
mov
and
lods
add
insl
stc
jno
mov
bnd
fcmovb
into
pop
lock
push
push
add
das
ficoms
inc
outsb
cwtl
sbb
lods
xchg
cld
arpl
push
dec
andb
stc
loopne
es
mov
sbb
mov
in
sti
xchg
pusha
insl
add
imul
out
cmpsb
inc
lret
jns
inc
fwait
jmp
nop
pop
leave
sarb
repz
test
cld
cld
fnsave
adc
addr16
outsb
imul
daa
mov
mov
sbb
xchg
data16
in
lea
mov
jg
xlat
ljmp
push
pop
arpl
fdiv
lret
mov
jo
mov
inc
leave
mov
enter
fcoml
adcl
out
popf
add
out
mov
jmp
inc
leave
loopne
outsb
push
loope
int
insb
sbb
mov
lahf
mov
cmp
lret
shll
movsl
shrl
int
mov
push
mov
lds
xchg
sub
cli
dec
mov
inc
data16
sub
mov
mov
xchg
aaa
add
pop
or
jo
push
xchg
xor
sub
or
push
push
notb
test
xor
enter
outsl
mov
dec
notl
lods
xchg
cs
or
out
xor
xor
out
sldt
xor
adc
fwait
jne
pop
push
dec
cmp
out
push
push
sub
xchg
pop
cmpsb
cmp
add
daa
push
xor
test
popf
xor
and
cwtl
xchg
adc
pop
fmuls
cld
xchg
cmp
movsl
push
call
and
cwtl
fwait
imul
mov
add
es
pop
movsb
mov
hlt
in
dec
dec
in
jl
mov
lds
inc
lret
sub
lahf
insl
pop
repnz
rclb
mov
pop
lods
and
jmp
shl
and
pop
leave
mov
dec
andl
jge
or
loopne
xor
gs
or
insb
ljmp
sbb
dec
xor
xchg
aam
pop
in
das
mov
push
adc
pop
les
or
lea
loop
xchg
outsb
addr16
xor
test
pop
pop
cmp
incl
repnz
push
cltd
in
nop
jnp
inc
mov
rcll
rcrl
xchg
adc
push
shlb
ret
daa
aad
fidivs
mov
add
xchg
add
push
ja
cmp
mov
pop
mov
dec
sub
lods
nop
in
enter
pop
jg
xchg
rol
dec
jp
cmpsb
jle
gs
xchg
bound
xchg
mov
not
lea
mov
push
dec
lods
pop
inc
and
xor
pop
jmp
mov
jae
mov
in
ret
jae
cld
adc
pop
cltd
aad
mov
setnp
test
fs
popa
jecxz
scas
jmp
ret
dec
xchg
lock
inc
adc
pop
sub
shrb
sbbb
or
push
pushf
lods
cmp
inc
data16
adc
jo
iret
js
mov
imul
gs
dec
loopne
ss
sub
xor
insl
sbb
aaa
pop
mov
mov
jle
ds
xor
mov
leave
loope
xchg
add
dec
test
cltd
sub
mov
fistps
xor
fldt
sub
xor
mov
xchg
int
frstor
jno
mull
inc
cmpsb
imul
or
jbe
pop
cli
xchg
dec
nop
sub
das
add
and
sbb
add
mov
fidivs
adcl
push
push
je
fimuls
mov
mov
ljmp
insl
sbb
hlt
dec
jmp
mov
insb
shrb
rcrl
jecxz
sub
mov
sub
aas
or
mov
mov
inc
comiss
dec
divl
mov
cmp
mov
loop
pop
enter
insb
or
adc
repnz
aaa
sarl
inc
jge
loope
pop
xchg
push
or
movsl
lret
sub
dec
jmp
data16
bound
cmpsb
scas
mov
in
pusha
stc
rclb
xor
sub
pop
cwtl
repz
lret
ja
bound
std
cmp
add
pop
jbe
cmp
frstor
push
jg
lret
pop
fwait
cmpsb
cmp
mov
data16
lea
popa
lods
in
inc
push
subb
nop
sub
mov
or
cs
outsb
sub
lods
popl
sbbb
xchg
outsb
push
xchg
pop
add
pop
movsb
lahf
daa
jns
mov
cli
pop
xor
inc
add
out
dec
js
xchg
aaa
push
xchg
out
cmp
dec
mov
mov
mov
les
adc
fimuls
add
sbb
xchg
mov
mov
mov
loop
xchg
dec
lea
add
and
xchg
sub
push
push
add
shr
xchg
jb
mov
lcall
push
movsb
ja
fwait
cmc
dec
mov
jno
mov
es
clc
popf
push
jne
fwait
xchg
inc
es
inc
mov
jno
negl
xchg
mov
popf
push
outsl
iret
or
rorl
stos
jmp
xchg
jl
lret
add
inc
mov
dec
mov
cmp
jbe
push
sbb
and
ja
das
push
pusha
xlat
cmc
sub
inc
cmp
sbb
test
cli
inc
xchg
movsb
jno
mov
sbb
mov
and
dec
and
fwait
sahf
cmp
push
or
jnp
pop
sbb
mov
or
fmull
pushl
mov
mov
push
mov
test
mov
scas
bound
inc
movsl
cmp
insl
sti
dec
out
cltd
mulb
in
xchg
ret
push
xchg
bound
lods
inc
scas
movsb
ror
sbb
xor
xchg
shrl
xchg
arpl
aad
xor
add
and
push
ds
repz
pop
push
lock
push
aaa
push
test
mov
je
shr
aad
pop
push
or
idiv
dec
fildll
sbb
mov
clc
push
pop
fmuls
out
hlt
push
jo
xchg
mov
or
lcall
sub
es
dec
push
mov
dec
out
pop
cmc
fsts
push
iret
add
mov
sbb
in
clc
movsb
cs
xor
inc
std
or
jl
stos
xor
inc
or
test
cs
jnp
incb
das
or
cmp
inc
lret
clc
sbb
pop
and
ja
cmp
add
cwtl
ja
idiv
push
sub
iret
and
scas
rorb
cmp
or
adc
out
outsl
pop
xor
das
movsl
sbb
lds
push
ss
mov
xor
fs
aas
addr16
pop
add
cli
mov
mov
push
jl
add
cmpsb
ds
mov
les
or
mov
xorl
adc
std
mov
adc
dec
or
shlb
xchg
lods
ror
incb
adc
arpl
scas
cltd
movsb
imul
in
jns
movsl
or
aad
test
lea
pop
in
iret
mov
je
pop
adc
dec
cmpsl
outsl
daa
rcrl
xor
outsl
mov
out
adc
into
in
pop
mov
je
cmp
test
shl
jb
dec
movsb
xlat
jmp
scas
inc
fucomi
push
pop
into
imul
out
mov
and
xor
dec
mov
xor
sbb
jne
out
inc
pop
sub
and
xchg
sub
inc
mov
dec
fdiv
aaa
cmp
popf
pop
cmp
sub
in
test
inc
mov
test
and
aad
mov
adc
mov
daa
pop
inc
stc
push
stc
lahf
push
out
cld
dec
add
adc
inc
aam
sub
in
xor
lock
clc
inc
in
mov
arpl
pop
rcrl
pop
bnd
out
notb
inc
inc
shll
aad
pop
stos
inc
test
pop
xor
pop
outsb
int3
ds
push
out
lcall
test
cmp
imul
jae
or
outsl
mov
stc
adc
xchg
imul
push
jo
mov
push
mov
hlt
fs
xchg
add
adc
jne
xor
sbb
test
lahf
sub
lods
xor
xlat
movsb
in
mov
push
sub
repnz
mov
dec
mov
sbb
cmp
inc
dec
xchg
das
stos
ret
add
adc
add
xchg
xor
fadd
adc
idiv
int
jno
push
mov
enter
lret
lds
push
and
push
mov
push
mov
jno
out
xlat
xlat
push
test
fwait
cmpsl
xor
call
and
adc
test
out
inc
sub
into
sti
xor
in
jns
mov
add
jne
in
xchg
sti
into
sbb
popl
cltd
out
jns
aaa
xchg
dec
inc
lds
dec
int
insb
jns
xchg
push
sbb
gs
xchg
mov
in
inc
loope
or
pop
mov
adc
cmp
mov
iret
push
aam
movsb
outsl
aam
enter
repz
into
mov
jle
data16
add
scas
aad
gs
sarl
sub
cmpsl
mov
pop
xorb
and
fnstenv
lock
push
adc
inc
sbb
jge
push
inc
lods
xor
ja
dec
pusha
stos
mov
mov
mov
incb
push
cs
test
inc
add
imul
lcall
xchg
pop
ds
gs
out
cmc
inc
jecxz
jecxz
int3
adc
push
faddl
das
inc
fiadds
imul
mov
test
in
adc
mov
xchg
jg
cmpsl
adc
pop
add
adc
insb
push
out
pusha
mov
sahf
add
test
mov
jecxz
or
mov
cmpsb
inc
fldl
orb
mov
fimull
push
add
push
lcall
lret
test
jecxz
pusha
leave
imulb
enter
pusha
enter
sub
pop
xor
mov
or
test
scas
sbb
ja
mov
add
sarl
dec
loop
insb
mov
xor
mov
mov
frstor
cs
test
mov
ret
sub
xor
lds
mov
jp
repnz
popl
sub
lods
pop
xchg
mov
mov
or
sbb
jns
jmp
lret
or
into
gs
xchg
movsl
nop
loop
outsl
mov
outsl
cmp
stos
popf
add
xor
out
sbb
aas
popf
fs
pop
out
orl
jae
enter
sahf
mov
push
sbb
adc
cs
fisubl
add
inc
push
jae
out
jno
sub
mov
or
xor
sub
dec
pop
cltd
inc
jp
out
shr
dec
mov
mov
cmpsl
pextrw
xor
orl
aam
fistl
gs
cmpsl
or
xchg
out
push
hlt
add
mov
je
fwait
jecxz
adc
add
loope
mov
dec
and
xchg
dec
mov
push
mov
dec
mov
stos
lahf
add
and
or
out
fldt
jae
daa
xchg
addr16
adc
ds
jmp
xor
pop
in
adc
shll
jb
dec
rol
out
adc
in
add
adc
and
adcl
push
xor
dec
xchg
std
flds
fs
in
pop
and
cmc
test
cmp
mov
cmp
pop
lock
pop
cmc
ret
in
and
cmp
adc
sbb
outsb
fidivs
int
lock
and
jb
pop
mov
mov
movsl
cmp
mov
ret
jo
cmp
popa
and
jbe
cmp
sub
jns
lar
sub
dec
arpl
arpl
sbb
stos
jmp
pop
or
dec
mov
fldcw
push
enter
idivb
lds
outsb
add
pusha
cmp
sub
sub
xor
das
dec
push
and
xchg
mov
jno
sti
or
pop
inc
cmpsl
push
divb
movsb
pop
fistl
adc
jle
adc
xor
ss
pop
pop
cmpsb
clc
mov
lea
mov
lods
inc
scas
pop
or
bound
sub
out
mov
pop
sahf
and
adc
xchg
sub
and
xor
out
cmp
xchg
mov
loope
push
mov
mov
outsb
lea
cltd
cmpsl
mov
push
cwtl
xchg
fidivs
mov
dec
cmc
jne
daa
xor
test
xor
add
inc
stc
scas
scas
xchg
mov
jmp
ret
xor
shll
fsubl
gs
jle
xor
int3
das
or
rcrb
in
je
shr
fsubrs
mov
push
fdivrl
mov
add
pop
movsb
insl
imul
pop
jl
dec
mulb
sahf
mov
leave
test
pop
inc
scas
call
cmp
nop
jle
dec
testb
lods
clc
shl
pop
loope
mov
push
cmpsb
and
xor
test
icebp
mov
dec
dec
push
loope
or
mov
mov
out
xchg
outsb
lods
and
outsl
daa
cmp
cmp
xchg
addb
dec
shrb
adc
pushf
int3
insl
iret
std
mov
lret
and
shll
fimuls
in
ret
mov
cmc
mov
xor
push
xchg
ret
sub
insl
xor
fwait
movsl
add
ss
mov
jg
leave
jecxz
popa
adc
inc
jno
orb
xchg
lret
enter
mov
pop
mov
data16
lods
push
or
xor
push
aam
test
ror
push
loop
aam
mov
insl
pop
dec
and
xchg
xchg
stos
xchg
adc
push
cmp
and
push
sahf
xchg
push
xor
insb
rcrl
in
xor
lret
dec
push
mov
pop
outsl
jl
das
lcall
shr
jle
jmp
sbb
xor
lds
fwait
repnz
sub
lds
clc
test
mov
iret
sbb
imul
mov
jmp
inc
popf
push
adc
push
shll
dec
shlb
mov
sarl
xlat
sub
enter
cwtl
lahf
push
and
cltd
arpl
lods
push
inc
sbb
pop
sahf
sub
sub
cld
xchg
pop
push
shlb
push
outsb
call
pushf
xor
mov
insl
mov
and
jno
rol
pop
jno
mov
inc
clc
mov
fnstsw
mov
xchg
jb
add
ds
fcoml
add
mov
push
mov
ja
adc
or
pushf
inc
push
and
pop
into
out
jp
int3
das
or
mov
inc
pushl
dec
and
push
fstpt
xlat
jmp
lret
nop
outsl
push
loop
bound
mov
mov
add
inc
cmp
push
loop
movsl
cmp
push
inc
leave
adc
mov
subl
pop
hlt
insb
sbb
xchg
mov
inc
pop
mov
in
and
fildl
mov
stos
frstor
rcll
inc
insl
jg
jle
fwait
stos
rolb
inc
and
mov
test
pop
xchg
cwtl
fs
or
fisubrs
pusha
mov
push
push
loopne
lea
repz
fstpl
jg
mov
aaa
ljmp
cmp
lock
xor
xchg
dec
sbb
jae
cmp
cli
pushf
je
push
fstp
push
sbb
jp
adc
sahf
das
push
push
std
sbb
jp
push
jb
andb
pop
xlat
mov
jp
lods
andl
xor
int
ror
loope
add
fnstenv
xor
jns
or
scas
dec
jae
ds
cmpsl
dec
arpl
mov
mov
js
mov
adc
fucomip
xchg
mov
scas
sub
xor
neg
cmp
idivl
dec
shrb
and
cmpsb
pop
test
shl
fdivl
cmc
stc
fmull
sbbb
cmp
mov
mov
mov
inc
dec
outsb
cmc
mov
xchg
cmp
pop
cmp
loop
jno
shrb
adc
ret
repnz
fisttpl
sbb
cmp
fsubrl
dec
dec
out
push
adc
dec
xlat
mov
cwtl
in
stos
xchg
icebp
loope
adc
scas
mov
lcall
jp
cmc
or
adc
sub
out
jg
call
repz
iret
and
and
mov
test
aas
mov
xchg
push
jge
movsl
scas
leave
xchg
test
data16
xor
in
xchg
fists
mov
dec
and
mov
adc
lret
sub
mov
mov
test
mov
jmp
aaa
js
pop
xorl
stos
mov
cmp
mov
fisttpll
fildll
fsubs
enter
sti
fs
sbb
mov
rcr
jmp
mov
mov
cmc
pusha
ss
or
sbb
stos
jbe
ljmp
push
jbe
jo
xor
inc
jecxz
scas
xor
popa
sbb
arpl
push
repz
mov
push
mov
mov
pop
imul
insb
jae
xor
push
enter
fists
adc
cmp
sbb
ret
adc
scas
dec
dec
dec
and
jo
into
icebp
pop
fdivl
aaa
mov
notl
or
sbb
mov
pusha
mov
mov
push
jb
push
ds
cmp
pop
fwait
mov
lds
pop
mov
jl
mov
fcom
push
xlat
insl
mov
sbb
jecxz
push
inc
pop
pop
ss
mov
out
pop
cmp
mov
jmp
outsb
loopne
xchg
mov
gs
test
sbb
jb
and
lock
sub
out
test
adc
lret
int
imul
push
pop
or
cld
fs
push
cmp
xchg
xchg
psubq
jno
jbe
subl
xchg
mov
cmp
xor
les
xchg
sbb
enter
pop
jno
pop
sbb
mov
aas
sub
mov
or
jp
sarb
loopne
or
lahf
aas
adc
addr16
xor
jno
cmpsb
dec
and
add
mov
enter
sahf
add
adc
mov
daa
pop
imul
add
out
lret
mov
pop
sti
ss
inc
jne
out
sbb
pushf
cli
in
cmp
ds
add
push
test
lret
or
shrb
je
cmp
imul
push
pop
and
divb
jb
out
jp
stos
or
cmpb
push
mov
cmp
es
push
adc
fldcw
or
pop
dec
int
push
int
fbstp
inc
iret
iret
scas
sub
and
adc
push
push
adc
sbb
pop
imul
jno
inc
daa
mov
adc
mov
in
cmp
lock
cmpsl
out
testb
xchg
adc
das
subl
xchg
cmp
dec
loop
popl
dec
lea
xor
sub
pushf
pop
xchg
fsubrl
in
xor
cmp
lret
std
or
cmp
out
push
pushf
adcl
and
xor
inc
and
es
fildl
and
lahf
bound
mov
adc
mov
jne
pop
xchg
add
and
popl
lret
ret
push
sub
sti
pop
push
popf
jno
xchg
repz
cli
mov
int
lret
fwait
jbe
lret
jg
adc
aam
jno
in
test
and
sbb
test
loope
xor
add
mov
scas
outsb
ret
shrl
sub
cmp
filds
sbb
test
jecxz
jge
inc
pushf
sub
std
push
xchg
sbb
leave
mov
sub
dec
adc
xchg
add
inc
rcrl
cmp
jns
mov
shl
shlb
add
das
addr16
pop
jp
ja
ret
and
jbe
gs
inc
push
enter
mov
adc
aas
fs
insb
dec
pop
cmp
pop
xor
cwtl
and
aam
test
outsb
adc
and
leave
stos
sub
xlat
insl
mov
call
dec
das
repnz
ljmp
fcmove
and
push
stos
mov
push
stc
pop
shrb
cmpsb
loop
ret
enter
xchg
sbb
repz
push
adc
jb
xchg
outsl
popa
jg
das
mov
push
and
mov
and
or
jns
pop
lahf
ss
ja
sub
cld
mov
out
test
mov
insl
push
xchg
or
stc
stos
push
int
or
rcl
test
pusha
mov
mov
dec
arpl
imul
add
test
call
xor
and
xchg
ss
lds
mov
jmp
cmp
mov
jbe
js
imul
rcrb
scas
inc
bound
mov
jecxz
icebp
mov
pop
idivb
sub
test
sub
inc
mov
cmp
insb
std
or
push
iret
frstor
and
mov
iret
sub
add
pop
insb
and
lods
movq
shll
jbe
ror
jb
xlat
push
pop
andb
adc
inc
push
imul
or
es
xchg
xor
aas
pusha
stos
icebp
push
loop
adc
pop
mov
cvtps2pd
test
xor
sahf
clc
aas
cmp
jno
in
jbe
adc
sub
repz
sub
dec
mov
hlt
pop
push
xchg
jnp,pn
sti
scas
cmp
or
enter
test
pop
cmpsl
fwait
push
inc
xchg
jp
cmpsl
mov
mov
das
cs
hlt
aad
into
pop
adc
lea
push
shlb
push
cs
jb
push
jge
inc
cmpsl
insl
scas
cwtl
out
push
pop
lret
xor
enter
xchg
call
xorl
cmpsl
mov
adc
mov
mov
mov
aaa
popa
inc
push
out
xchg
xor
rcrl
mov
ret
fdivrs
loop
sbb
xchg
push
jg
es
adcb
les
inc
pop
aad
jecxz
movsb
cmp
fidivs
arpl
sub
xchg
dec
addb
cltd
cmc
push
iret
dec
js
clc
mov
xchg
add
ljmp
std
enter
sahf
mov
xchg
fdivrs
or
mov
bound
jns
out
xor
out
fnstcw
repnz
add
mov
lods
mov
mov
int
sub
mov
aaa
je
sub
lods
call
lcall
sbb
adc
mov
insl
sbb
mov
cmp
pop
cmp
dec
add
pop
shll
fnstenv
out
adc
arpl
inc
pop
dec
add
add
jae
int3
pop
adc
lods
pop
adc
and
dec
mov
popf
mov
dec
mov
sub
jp
push
pop
mov
mov
aas
sbb
inc
or
ja
ret
lds
inc
rcl
jecxz
mov
xor
xor
lahf
shll
cmc
mov
sti
sti
sysexit
jbe
pop
daa
aas
push
lcall
mov
mov
xlat
jecxz
aam
shrw
adc
fwait
and
xchg
mov
and
sbbl
dec
xor
jb
clc
xchg
xchg
test
sbb
pushf
xor
jg
xor
mov
jb
test
sub
sub
mov
dec
fdivrp
and
fistl
xor
inc
cwtl
rorl
xlat
sbb
dec
cmp
mov
movsl
shlb
aas
sub
cmpsb
add
es
dec
add
xchg
cmc
jle
xor
dec
out
test
xlat
dec
and
out
mov
jecxz
inc
fcoms
popa
cmpsl
push
jb
les
lods
pop
enter
xor
test
movups
out
cmp
cmpsb
dec
mov
add
outsb
add
adc
mov
or
in
add
lret
mov
mov
fs
out
jp
inc
cwtl
das
jns
andl
clc
lahf
loope
sub
mov
mov
sub
loope
mov
mov
imul
mov
test
into
enter
cmpsb
movsl
scas
cmpsl
mov
dec
xor
push
shl
inc
dec
into
fdivrl
jge
mov
push
mov
int3
pop
sub
jne,pn
pop
out
jne
movntps
pushf
sub
add
mov
push
jmp
or
pop
push
cmp
and
cs
test
fiaddl
or
je
jg
ljmp
lock
lock
rcl
ss
fldl
and
lea
mov
cmpsl
lds
ja
xor
gs
lcall
and
pop
mov
fs
sti
fisubl
add
inc
inc
adc
lret
mov
lret
push
sub
mov
pop
jo
mov
pop
mov
lds
jg
es
and
pop
sbb
sub
jo
in
cmc
rcrl
sub
dec
xorl
mov
pop
push
sbb
mov
ret
outsl
shlb
out
pusha
add
mov
xor
mov
cmpsb
mov
je
je
aaa
andb
data16
es
gs
and
mov
std
adc
add
mov
or
lret
sbb
push
jmp
jge
lcall
das
mov
loope
inc
outsb
fsubs
ret
fstpt
inc
cwtl
mov
or
mov
push
pop
jno
xchg
pop
scas
lds
adc
jmp
push
sbb
push
and
mov
and
xchg
rep
inc
and
jmp
stc
mov
dec
jge
add
repz
nop
mov
xlat
sub
fld
arpl
sbbb
and
dec
out
inc
adcb
add
mov
cmpsl
jecxz
cltd
lock
mov
lock
mov
and
fwait
and
mov
bound
dec
xchg
dec
data16
dec
mov
and
enter
dec
xchg
scas
lahf
inc
xor
test
xor
push
or
jecxz
sbbl
in
in
and
insl
adc
rclb
cld
inc
pop
mov
pusha
inc
outsl
inc
sbb
cmpsl
incb
cld
sub
outsl
loope
sbb
mov
lcall
imul
in
scas
jp
jge
xor
jb
in
dec
test
cwtl
mov
mov
pop
movsl
out
cli
js
faddp
inc
ds
out
pusha
shl
mov
xor
adc
pop
sbb
or
push
xor
test
pop
ja
ds
lds
filds
mov
in
mov
dec
inc
or
lds
cmp
int
ja
int
fildll
push
js
push
mov
jmp
imul
mov
mov
insb
shr
les
sbb
cmp
mov
sbb
adc
dec
sub
adc
daa
inc
mov
inc
mov
inc
mov
mov
adcl
jne
cmc
sub
dec
aas
pop
loop
out
rorl
jecxz
imul
cltd
mov
es
xchg
mov
loop
fldt
mov
cltd
stos
inc
loopne
icebp
jge
enter
adc
cmpsl
lret
scas
out
fbstp
popf
mov
jno
cmpsl
push
push
fsubl
jb
push
lret
xchg
mov
cwtl
sbb
adc
into
std
jmp
jb
push
push
cmp
lock
pop
fistps
rolb
shr
jg
jns
es
mov
out
insb
sarl
add
enter
js
xchg
push
jns
cli
xchg
scas
ss
test
xor
xor
lret
push
and
fcoml
push
cs
loop
repz
and
stos
cmp
or
icebp
cmpsl
adc
sbb
adc
mov
shll
popf
mov
push
xor
inc
push
sahf
jne
sub
add
outsb
test
push
sub
xor
std
cltd
jbe
out
mov
stos
jae
fstps
jge
test
in
pushf
cmp
mov
lret
std
test
ja
cltd
out
jmp
and
and
cvtdq2ps
or
dec
add
mov
stc
push
pop
and
sbb
ss
xchg
test
and
mov
repz
inc
dec
xlat
jae
lret
subl
mov
popf
lods
mov
push
and
out
pop
inc
xchg
mov
dec
fadds
les
add
imul
xor
enter
sub
pusha
int
mov
dec
lret
push
repz
rdmsr
mov
adc
roll
fprem1
jb
loope
xchg
pusha
pop
repz
icebp
mov
iret
arpl
mov
push
fs
test
fld
xchg
ja
mov
add
test
outsl
xchg
xor
dec
setbe
loope
movsb
lcall
jle
arpl
mov
cwtl
jns
imul
sbb
mov
movsb
push
sbb
or
insl
add
xor
imul
adc
and
insb
rcrb
or
push
jbe
out
push
out
std
lods
cmc
inc
outsb
stc
ss
xor
or
mov
adc
jne
lods
mov
jg
fldenv
jno
mov
outsb
sub
sbb
pop
or
mov
mov
ficoms
mov
dec
cmp
lret
shrl
cmp
repnz
repnz
ds
vshufps
jns
adc
jnp
sahf
sub
xor
dec
loope
cmpl
cmp
dec
out
sub
in
pop
mov
mov
ja
mov
mov
push
cmc
fs
push
mov
mov
lcall
hlt
cs
jno
aas
out
test
cwtl
pop
mov
sub
insb
negl
mov
mov
cmp
movsl
mov
sbb
lret
je
ljmp
inc
fadds
in
repz
mov
pop
enter
lods
inc
xor
arpl
cld
xlat
inc
lret
or
insl
js
movsb
sub
out
icebp
inc
out
jae
inc
ret
push
outsl
pop
push
div
es
test
dec
cli
xchg
sub
shrb
test
sub
cmp
jmp
les
xchg
stos
test
int
loop
mov
mov
fiaddl
xchg
sub
sub
push
out
insb
add
call
inc
mov
andb
stos
std
mov
imul
sub
mov
push
repz
ret
les
add
adcl
lods
dec
test
dec
jmp
sbb
bound
sahf
repz
in
lcall
xchg
lahf
fisubs
adc
mov
pop
out
xor
push
sbb
lcall
push
cmp
aad
hlt
nop
xchg
lods
loope
call
sbb
jb
idivb
xchg
add
mov
imul
mov
lahf
push
adc
cmp
sbb
xor
cmp
cmp
sbb
daa
cmp
outsb
jle
push
push
pop
outsb
mov
arpl
xor
adc
nop
or
filds
or
xor
push
icebp
test
mov
sub
aaa
outsl
pushf
test
cmp
xor
adc
gs
jo
xchg
pop
lret
sbb
adc
jne
push
mov
jbe
xor
sub
or
ss
mov
inc
lret
or
bound
dec
loopne
out
mov
int
addr16
push
mov
loopne
lret
bound
mov
and
sub
hlt
insb
jle
cmp
fsubrs
cmp
dec
jmp
scas
pop
sti
out
adc
je
lods
and
popf
xchg
add
fwait
mov
rorl
hlt
lahf
aaa
insl
lret
push
fsubl
mov
cmp
sub
lret
aas
cmp
and
sbb
lahf
adcb
int
into
popf
test
inc
cmp
nop
lods
pop
jb
cmc
dec
mov
xchg
xor
xchg
sbb
cmc
int3
icebp
jp
and
inc
fs
and
out
push
cltd
test
aaa
lahf
mov
pop
imul
adc
mov
out
mov
sbb
lods
and
sti
aam
fcompl
xchg
stos
fisubl
cmpsl
stos
shlb
mov
out
test
dec
sub
rcrl
js
push
ret
outsl
jnp
into
lods
nop
push
push
repnz
leave
sub
mov
stos
cmpsb
dec
mov
inc
in
sub
mov
push
lock
call
inc
mov
xchg
push
mov
or
ds
add
xchg
ds
negb
adc
xchg
ljmp
pop
icebp
push
jge
pop
daa
cmc
cmp
dec
in
dec
inc
call
mov
add
leave
push
enter
pop
inc
aad
cmc
enter
xchg
sub
clc
fstl
mov
inc
xor
mov
arpl
mov
daa
sbb
jle
in
mov
push
mov
lcall
icebp
jo
scas
pop
push
add
popa
pop
notb
inc
sub
iret
cwtl
adc
loope,pt
push
out
sbb
xchg
jp
push
outsl
imul
jmp
jecxz
test
and
jl
dec
fidivs
bnd
dec
lods
lahf
mov
aad
mov
fsubl
cmp
das
push
sahf
lcall
cmp
pop
js
mov
mov
mov
cmc
int3
sbb
clc
sub
das
aas
and
cli
push
jns
test
int3
jbe
and
call
sbb
xchg
out
xor
pop
test
bound
pop
jno
inc
jae
sbb
sar
outsb
xor
or
add
cmpl
repnz
cmp
mov
mov
decl
pushf
int
lods
push
out
xor
inc
jmp
call
leave
cmpsb
incl
jmp
push
out
push
sahf
out
fnstcw
lds
mov
lret
icebp
cmp
in
das
pop
jae
inc
push
push
stos
ret
mov
inc
mov
mov
out
fsubl
rcll
sar
js
sub
fwait
das
or
pop
outsb
sti
ret
and
imul
fdivr
popf
pop
mov
sbb
popf
repz
jae
mov
aas
les
dec
lahf
int3
add
insl
dec
outsl
sbb
add
hlt
sbb
and
cmp
inc
cmc
lcall
shlb
sub
scas
subb
jg
push
int
sbb
sbb
xor
dec
dec
and
cltd
mov
in
test
ret
ss
mov
cmp
pushf
je
dec
or
in
jmp
inc
test
fistl
xchg
sbb
mov
cmp
pop
mov
int3
rcrb
inc
push
sbb
mov
sub
cli
jg
xchg
dec
add
clc
test
pop
lds
call
lret
ss
pushf
pop
test
lcall
cmp
ss
and
jae
cmp
cmc
push
leave
or
daa
jl
or
pop
sub
adc
cltd
insl
lret
jmp
in
push
push
pushf
inc
loopne
xor
mov
sbb
adc
cmp
lea
pop
mov
inc
pop
arpl
cmp
sar
lods
inc
lcall
sub
add
repz
pop
gs
fimuls
adc
scas
cwtl
push
or
mov
pushf
adc
or
mov
incb
xchg
sub
fdivrl
sbb
mov
sbb
fsubrs
cmpsl
std
stc
iret
or
mov
cld
shl
mov
sbb
sbb
mov
jae
sbbb
pop
inc
popa
addl
add
fldt
cmp
mov
popa
imul
enter
fsubrs
inc
into
movsl
clc
xchg
mov
and
push
fs
and
inc
cltd
test
mov
dec
std
xchg
jl
dec
aaa
sbb
add
mov
ljmp
lds
in
jmp
mov
add
scas
inc
push
inc
add
or
in
mov
ret
jae
cmc
les
fmulp
popf
pop
mov
mov
jnp
cs
repz
imul
lahf
cli
push
fwait
jb
push
scas
mov
int
jb
mov
in
push
jae
and
into
push
mov
jl
mov
dec
adc
sub
popa
and
rol
imul
mov
rcr
outsl
push
scas
out
nop
fs
sbb
xor
jb
inc
out
xchg
scas
adc
sub
push
es
pop
cmp
cmovp
adc
daa
xchg
test
into
insl
pop
fwait
movsl
and
jo
adc
arpl
cs
jae
pushf
mov
xchg
scas
or
mov
scas
and
jbe
shlb
icebp
jo
mov
add
fwait
test
shll
int3
xchg
hlt
fstps
mov
dec
scas
test
mov
icebp
cmc
mov
mov
aam
movl
xor
or
lds
sub
out
rcll
inc
pop
lcall
dec
scas
imul
std
sub
sbb
mov
or
lret
xchg
subl
cs
fistl
xor
jl
mov
cld
xchg
lds
cltd
pop
sbb
add
inc
dec
push
adc
jmp
fildl
pushl
xor
push
call
movsb
cmpsl
outsl
jge
lds
movsl
loopne
aam
mov
push
pop
insb
push
test
out
das
push
ljmp
jb
cmp
xor
jg
push
lods
stos
mov
xor
sti
cwtl
jbe
mov
call
inc
adc
cmp
imul
push
pop
pop
or
push
mov
push
fmuls
rol
roll
test
jbe
movsb
cli
shrb
std
mov
mov
jne
sub
pop
pop
add
jp
sub
add
xor
pop
cmp
popa
cmp
xchg
push
cmpsb
mov
data16
pop
sbb
shr
rol
aam
and
fdivrs
shr
cmp
fidivs
pop
testb
stc
xor
cmpb
arpl
add
test
jb
lret
dec
inc
lret
mov
out
popa
mov
mov
mov
push
fdivrl
loopne
aas
jmp
and
shlb
pop
sbb
test
insb
inc
xchg
add
stc
cmp
adc
sbb
xlat
cmc
cwtl
cmp
aas
jmp
push
mov
and
sahf
leave
push
hlt
fcoml
inc
xchg
cmp
addr16
adc
outsl
lahf
lock
nop
xchg
out
add
cmp
xor
xchg
loope
add
push
stos
adc
movl
lret
lret
dec
cmp
cltd
imul
mov
stc
jnp
aaa
mov
mov
movsb
cmc
cmp
push
in
in
add
sub
stos
pop
dec
xlat
ds
xor
pop
jo
jmp
cmpsl
xor
add
xor
lret
pop
mov
ffree
pop
comiss
adc
outsl
push
push
xor
in
das
lea
or
add
or
jl
pop
jle
lret
cbtw
push
xor
fwait
gs
jecxz
mov
fcmovnu
out
add
sarl
cmp
mov
and
sbb
lods
xchg
jge
cmc
ja
mov
int
lret
cmp
dec
fisttps
push
fnstenvs
mov
add
adcb
push
lcall
aam
das
pop
sahf
pop
xor
xchg
jl
pop
xor
sub
and
orb
orl
out
stc
jnp
insb
push
ljmp
and
dec
pop
fstl
test
sti
daa
xlat
insl
cmp
cmp
and
loopew
add
dec
and
inc
dec
in
pushf
xchg
sub
insb
mov
cltd
push
movsl
shlb
cwtl
sbb
add
xchg
xchg
or
movsl
mov
pop
xor
add
int
enter
pop
lods
je
jl
sbb
pop
sbb
iret
xor
arpl
in
jbe
imul
inc
lcall
ds
or
mov
popf
hlt
dec
scas
jae
mov
xor
ljmp
test
mov
insl
add
fsubs
push
or
bound
cmp
daa
ljmp
inc
cmpb
mov
mov
or
lahf
lods
jo
js
movsb
mov
jmp
test
xorl
jne
dec
addb
sti
lods
roll
cld
sub
push
mov
jle
mov
fwait
pop
push
imul
sub
shl
imul
xor
jne
mov
mov
dec
nop
sti
out
cmpsl
hlt
xchg
int
shrl
ja
push
movsl
xor
aaa
lret
sub
mov
dec
xorb
push
mov
sbb
mov
es
add
add
adc
mov
push
jle
subb
mov
repnz
pop
xlat
bound
mov
fldcw
test
popa
pop
ja
addb
push
cmp
inc
shll
cmpb
shrl
cmp
out
jp
pop
add
xchg
mov
cmpsl
aas
xchg
movntq
out
stc
je
fdivrs
pop
xchg
scas
cmc
cmpsl
ret
gs
lds
fsubrl
test
adc
push
jbe
xchg
out
mov
mov
fdivs
addb
xchg
adc
jns
adc
push
mov
dec
add
gs
pop
xchg
mov
in
sub
fcmovne
enterw
dec
adcl
in
push
add
mov
imul
jnp
xchg
adc
dec
push
jne
dec
push
add
mov
mov
cli
add
xchg
adc
push
ret
and
cmp
xchg
test
inc
pop
mov
mov
arpl
je
sub
mov
std
ljmp
pop
shrl
xor
cli
jge
jmp
fstps
jge
adc
xchg
pop
xor
scas
pop
fstps
lret
pop
dec
cmp
loop
nop
inc
lret
mov
sub
dec
ljmp
jmp
pushf
sbb
pop
insl
and
add
cmpsb
int3
xchg
cmp
insb
mov
jp
cmp
xchg
mov
lcall
xchg
std
stos
mov
mov
xor
pop
sub
mov
in
sbb
push
rorl
test
adc
iret
fdiv
add
pop
icebp
jo
movsb
mov
js
xchg
cmpsb
sbb
ljmp
sbb
mov
insb
xchg
mov
sbb
ret
adc
jecxz
fcomps
scas
orl
sub
xor
push
jb
or
testl
jo
jnp
cmp
pop
lea
xor
push
or
pop
or
cmp
pop
fs
mov
lcall
jmp
js
jp
fs
inc
daa
ja
inc
push
cmpsl
fidivl
dec
push
jnp
or
repz
lea
mov
stos
sbb
push
das
outsb
out
insb
push
jb
repz
xlat
adc
mov
push
mov
mov
mov
out
mov
pop
je
mov
push
push
cmc
and
mov
xor
or
adc
mov
cli
push
inc
fisubrl
pop
and
cltd
arpl
or
mov
mov
xor
ffree
rcll
test
lret
lret
popa
pop
icebp
xchg
pop
xchg
sub
mov
fmuls
pop
sub
sahf
pop
push
das
shll
sbb
ss
push
pop
cld
idivb
fsubl
lods
xlat
dec
push
imulb
fldl2t
jbe
add
imulb
xchg
bndstx
mov
mov
cmp
cmp
mov
pop
adc
rorl
fnstenv
add
decl
shl
xchg
lods
mov
je
test
push
mov
xchg
mov
mov
inc
fcmovb
or
and
das
sub
xor
mov
in
mov
sbb
insb
jns
sti
shlb
xor
xchg
pop
movsb
clc
cmp
ds
xchg
jp
push
cs
mov
mov
mov
aam
pop
sbb
ret
pop
insl
fsubrs
popa
xorb
insb
and
dec
mov
imul
xchg
pop
shrb
ss
or
cltd
lock
fildl
jnp
dec
leave
xchg
inc
inc
inc
scas
jbe
fmul
sbb
jg
jb
cmpl
mov
sub
popl
ret
dec
sub
mov
aam
roll
in
ljmp
inc
push
dec
pminsw
es
loopne
push
fisubrl
sbb
mov
add
js
mov
dec
dec
pop
cld
sub
insl
popa
cwtl
mov
outsb
jb
xchg
xor
bound
mov
ret
aad
xchg
xor
mov
mov
lahf
lock
or
inc
push
cmp
bnd
lahf
push
stos
jl
in
les
xor
hlt
mov
xor
lods
out
cmp
out
jo
lahf
mov
cmpsb
movsb
std
xorb
out
xor
leave
mov
cmp
dec
adc
dec
mov
add
jnp
pop
jp
lret
loopne
mov
jle
or
add
scas
arpl
rol
xor
ret
iret
mov
sbb
mov
xor
fisttps
mov
or
dec
jnp
jge
ja
mov
repz
sub
pop
fldz
popa
xchg
divl
mov
jg
jb
jae
mov
sub
icebp
fcom
cmp
mov
pop
jbe
adc
and
pop
inc
stos
adc
frstor
jge
out
fcompl
shll
mov
inc
ret
jmp
imul
imul
adc
int3
fisubs
leave
bndstx
mov
or
dec
cmc
mov
leave
xchg
je
xchg
int
hlt
mov
jmp
push
aad
xor
test
loopne
and
inc
push
out
imul
insb
movsb
hlt
xchg
pop
push
pop
dec
or
mov
mov
jne
iret
mov
jmp
inc
sbb
xor
cmc
push
movsb
xchg
in
push
xchg
push
xor
out
test
adc
add
fistps
stos
xchg
data16
repnz
xor
fwait
leave
push
or
pop
adc
test
mov
add
mov
cmpsl
cmp
or
lea
cmp
scas
ljmp
inc
lret
lock
adc
push
stos
stos
sbb
push
mov
in
or
add
fwait
enter
cld
iret
data16
lods
jne
in
std
mov
inc
mov
ja
mov
inc
ds
xchg
push
test
into
repnz
push
lock
and
andps
add
fisttpll
out
int3
dec
push
cmp
inc
xorb
xor
pop
xor
cli
test
push
popf
ret
sti
imulb
mov
inc
es
ret
cs
mov
ret
lahf
xor
sub
pop
icebp
jl
rol
lcall
ret
incl
mov
fwait
push
dec
push
stos
imul
mov
dec
sub
loop
jns
aas
sbb
sbb
mov
lods
sbbl
daa
and
cli
imul
pop
ret
sub
hlt
sbbb
fsubrs
fadd
mov
and
jg
inc
inc
in
loopne
xchg
in
addb
movsb
cmpsb
pop
sub
jo
xchg
dec
push
imul
fpatan
jge
jp
jmp
insb
add
arpl
stc
inc
pop
imul
mov
in
int
hlt
mov
or
mov
jg
clc
stos
inc
mov
xchg
outsl
rol
mov
loop
test
lret
in
out
pop
push
movsb
mov
lea
orb
ds
pop
nop
fcoms
adc
and
pop
lcall
int3
movsl
xor
xor
sahf
pusha
jnp
dec
dec
mov
lds
in
popa
scas
les
jns
adc
mov
jno
ds
fwait
xchg
out
stc
popf
aad
mov
jmp
jno
imul
mov
setae
loop
inc
loope
cs
mov
rcrb
cmp
ret
sbb
ljmp
outsl
nop
out
int
push
js
xchg
add
sbb
stos
inc
jne
jb
fiaddl
pop
dec
pusha
jo
mov
dec
lea
jne
sbb
shrl
sub
sbb
xor
adc
jne
jae
insl
out
aas
lods
sub
movsl
sahf
jno
out
dec
repz
les
push
sub
adc
jo
aam
pop
push
adc
and
inc
repz
repnz
cwtl
pop
aam
adc
ss
xchg
sbb
lods
sbb
xor
sub
fsubs
mov
add
xlat
int
pop
sbb
pop
in
mov
jmp
shl
mov
fsubr
inc
xchg
or
out
ret
ljmp
pushf
inc
add
sahf
sub
sbb
push
pop
cmc
mov
bound
js
add
hlt
lcall
lods
adc
shll
and
and
ljmp
popf
cwtl
pop
out
push
aas
mov
cltd
fldln2
jne
xchg
jns
xor
mov
add
mov
ljmp
hlt
lock
sahf
xor
push
jne
in
sbb
daa
xchg
popf
push
or
cmp
ja
mov
jg
aaa
into
cmc
je
fs
push
test
mov
xor
jg
xchg
insl
leave
adc
sbb
xor
fsub
mov
adc
mov
test
nop
sarb
insb
mov
cmc
mov
or
cmp
and
lea
in
or
jne
mov
pop
cmovg
jb
mov
cmpsb
inc
lret
and
in
mov
jmp
or
pop
daa
pop
jns
push
push
fidivl
sbb
daa
dec
sbb
inc
or
sbb
inc
fcmovne
mov
stos
les
ret
call
cmp
hlt
jne
mov
dec
addr16
aad
xor
cmpsb
test
mov
xchg
lret
push
jp
pop
mov
lds
or
popa
mov
fbstp
jl
iret
xchg
mov
adc
fcmovnb
mov
push
dec
mov
repz
dec
and
aad
and
inc
dec
call
dec
aas
andb
cmp
sbb
es
cltd
test
dec
mov
push
inc
pop
mov
mov
insb
outsl
jnp
sbb
bound
cmp
je
jmp
ds
shll
inc
dec
lcall
es
bound
sbb
jle
and
mov
push
push
adc
cmp
pop
mov
imul
loopne
or
outsb
ss
int3
cwtl
shl
int3
dec
in
jo
insl
arpl
and
and
cmpsl
xchg
rcrl
cltd
mov
les
dec
sbb
mov
inc
jne
jb
add
dec
stos
cmp
loope
in
mov
xchg
aam
clc
push
shlb
mov
mov
mov
ja
sbb
xchg
inc
and
push
loop
inc
call
and
jo
mov
sbb
cmp
xlat
shl
xor
mov
lods
xor
enter
xor
loopne
in
cmc
and
fidivl
nop
movsl
sti
adc
sub
pushf
jg
ret
pop
sarb
enter
mov
push
push
call
mov
sahf
scas
push
mov
add
imul
movsl
mov
pusha
mov
orl
push
jmp
mov
lods
pop
jcxz
mov
clc
mov
loopne
xchg
mov
or
imul
add
std
xchg
pusha
test
lea
cmpsl
leave
stos
inc
pop
xchg
jbe
mov
ficompl
sti
addr16
xchg
cmp
lret
and
sbb
lods
and
fmull
add
fnstsw
xchg
addr16
test
lret
pop
sbb
cs
shlb
loopne
cmc
push
ret
outsb
leave
lahf
jb
cmp
or
fstps
aam
into
lahf
mov
je
jns
pop
lock
sarl
mov
jb
mov
mov
jmp
addl
adc
sbb
push
cmpl
insl
jg
cld
pop
xor
shl
sbb
xor
mov
lahf
out
mov
in
pop
in
xor
aad
pop
pop
insl
ds
test
pushf
inc
mov
pop
insl
adc
rol
in
out
pop
sbb
inc
fwait
sub
inc
scas
testl
and
adc
jg
sub
and
sub
outsb
mov
fwait
in
mov
negl
adc
jo
xchg
push
into
push
xchg
xchg
fdiv
call
or
lods
int3
ss
cmp
adc
bnd
mov
add
fisubl
mov
inc
sub
lds
xchg
dec
loopne
or
add
hlt
test
add
and
mov
and
or
test
jecxz
or
jecxz
mov
enter
test
leave
dec
imul
adc
jp
fwait
xor
je
xchg
sbb
mov
mov
out
sbb
jo
mov
xchg
or
lds
call
adc
inc
je
std
inc
ret
inc
fistpll
popa
std
ss
pop
scas
mov
inc
test
add
test
adc
imul
add
pushf
mov
jne
pop
sub
imul
in
sbb
pop
adc
jl
pop
mov
ljmp
scas
and
lahf
outsb
sub
ljmp
insb
pop
mov
sbb
enter
jg
into
testl
pop
sub
inc
push
pop
sub
mov
fs
mov
add
ss
mov
aaa
adc
dec
sbb
dec
cmp
jle
xchg
imul
cmp
dec
aaa
pop
in
or
jp
pop
addr16
repz
xor
add
mov
iret
es
lods
inc
pusha
pop
mov
push
and
scas
aaa
xor
ja
adc
xchg
fcomps
cmpsb
sti
popa
fdivrl
xchg
or
or
sub
test
xchg
sbb
mov
jg
inc
cli
lret
stc
pop
push
mov
negl
enter
jl
fistpll
hlt
movsb
push
lods
pop
adc
adc
adc
xchg
add
add
dec
clc
and
loop
cli
inc
add
push
push
dec
call
into
or
adc
sub
add
inc
orl
jmp
mov
pushf
jbe
ret
test
push
out
loopne
fdivr
aad
xor
in
ret
jmp
mov
insb
add
imul
sbb
sub
xchg
cmp
sbb
inc
in
push
xorb
jne
xchg
pusha
cs
iret
data16
fdivrs
push
test
imul
fwait
cmpsl
mov
mov
bound
jns
sbb
jbe
and
std
or
mov
push
popa
add
mov
dec
lret
ljmp
xchg
jb
cmpsl
jns
imul
mov
lods
outsb
fstpl
mov
inc
push
fdivrl
inc
lods
xchg
cwtl
fwait
lcall
lahf
arpl
cltd
js
and
rclb
loop
pop
jbe
push
nop
sub
mov
hlt
mov
psraw
adc
aas
push
test
punpcklbw
mov
jle
mov
pop
shl
push
add
jnp
pop
pop
ja
add
icebp
fsubs
aam
sbb
jmp
adc
mov
adc
mov
mov
outsb
sti
out
sar
xchg
sbb
lea
stos
mov
mov
sahf
cli
inc
dec
push
jno
lock
dec
adc
fstps
in
das
in
add
push
cmpsb
mov
push
add
movsl
ret
pop
mov
cli
cmpsl
lds
and
rcrl
and
xchg
xchg
lret
and
movsb
inc
mov
pop
push
jo
or
jne
xchg
adc
cmc
sbb
add
es
fwait
and
or
ljmp
fcompl
add
cli
pop
or
imul
mov
mov
mov
cmp
in
push
dec
js
leave
fsubp
lea
or
add
xchg
xlat
shl
jnp
push
jp
and
loope
fs
push
popf
sub
pop
andb
adc
dec
adc
mov
adc
xchg
insb
sub
jno
ss
js
mov
pop
imul
cmp
and
in
push
add
mov
adc
cmp
stos
jp
mov
sub
mov
sub
dec
mov
jecxz
rolb
stc
push
sub
orb
add
inc
cli
outsb
mov
lcall
sub
push
xchg
pop
mov
pop
and
fadds
sub
or
add
inc
ficompl
and
add
fidivrs
rorb
in
aaa
es
and
clc
jae
rcrb
fsubp
push
shr
fchs
add
adc
jo
testb
loop
cmpleps
mov
mov
dec
xor
cmpsb
aad
sub
cmc
or
push
sub
dec
add
out
outsl
rorb
aam
jle
ss
aaa
sbb
cmp
lods
pop
movsb
adc
popa
test
cmp
cmpsb
add
mov
mov
pop
xchg
lds
xchg
cmpsb
sbb
shl
dec
into
xor
lea
lret
sbb
jmp
mov
sub
push
cmp
inc
push
arpl
pop
jbe
or
data16
xor
das
addr16
outsb
dec
arpl
cmp
ret
jg
mov
ficoml
adc
aas
push
nop
sbb
lcall
push
add
fadds
push
lods
ljmp
rcrl
and
jno
fdivr
jg
xor
add
and
js
mov
shufps
int3
das
push
shl
imul
dec
out
sbb
loop
enter
dec
adc
mov
testb
ss
pop
dec
stos
inc
pop
cwtl
lcall
mov
aad
loope
into
lds
test
pop
push
sub
and
pop
stc
push
int3
xor
loop
push
cmp
inc
fs
in
outsl
in
fistps
je
xor
ficomps
jge
and
mov
inc
arpl
jp
cmp
jo
add
mov
sbb
and
test
push
ret
mov
and
pop
add
rcr
jecxz
mov
inc
repnz
dec
adc
orb
ljmp
psrlq
xchg
inc
hlt
in
inc
adc
lret
daa
sahf
mov
xlat
and
adc
stos
mull
pop
fcomps
sbb
pop
mov
sub
cmp
lea
or
mov
call
and
test
pop
and
sub
push
xchg
sub
stos
dec
loope
xor
lods
adc
sbb
sub
mov
jge
mov
mov
jb
pop
cmp
cmpsb
mov
nop
xor
mull
inc
xchg
out
dec
aas
lock
dec
dec
mov
pop
push
test
sti
and
cltd
sarb
sbb
add
or
cmp
dec
aam
test
inc
or
mov
stc
xor
push
inc
int3
ficoms
cli
dec
push
jnp
cmp
mov
pop
insb
stc
push
jle
push
fstp
mov
test
add
dec
jo
mov
push
cmpl
mov
mov
xchg
add
jne
adc
in
test
stos
fbld
xchg
sub
mov
lret
push
jg
addr16
mov
inc
out
test
xor
cmp
mov
mov
and
andb
jno
dec
xchg
fprem1
sub
fsubrs
fsubr
jle
jmp
incb
and
loope
mov
arpl
jge
les
push
in
or
pop
cmp
bound
sbb
or
sti
jns
enter
and
ret
cmpsb
icebp
jae
out
jno
mov
add
stos
scas
xchg
adc
andl
adc
mov
movsb
and
mov
sub
loop
arpl
jmp
cmp
jo
sub
jns
xor
mov
inc
bound
fisubl
xor
cmp
sarl
dec
mov
sbb
mov
aam
mov
inc
add
and
mov
mov
adcl
mov
cld
or
lahf
and
scas
push
sub
adc
add
ja
mov
mov
fistpll
pop
in
mov
stos
jmp
xor
and
inc
jg
add
fwait
adc
xor
es
xchg
inc
jae
inc
mov
jns
push
inc
in
imul
mov
jbe
inc
pop
out
or
push
loop
sbbb
ret
call
xorb
xchg
jg
call
test
lds
xchg
cmp
pop
pop
cmp
xchg
dec
cmp
ud2
dec
sbb
mov
dec
cmp
dec
dec
aas
sahf
jo
scas
sub
pop
insb
xor
adc
push
in
sub
dec
movsb
inc
cli
adc
inc
xchg
cltd
bound
gs
cmp
das
test
lock
jp
adc
ss
loope
cmp
mov
fidivrl
push
inc
lret
bound
out
aaa
lret
xchg
je
loope
lahf
add
mov
or
leave
ret
out
mov
enter
pop
mov
inc
fsin
mov
and
into
fimuls
mov
cld
xor
adc
nop
pop
pop
scas
add
ja
cwtl
jbe
mov
mov
inc
pushw
sbb
or
outsl
lahf
js
adc
xchg
aas
out
pop
add
xor
pop
ret
aas
and
dec
push
repnz
and
pop
mov
jo
cmp
xchg
mov
adc
pop
aad
push
and
lret
cwtl
test
push
add
xor
lods
stos
scas
call
cmp
scas
out
inc
pop
scas
mov
mov
mov
fidivrs
testl
fsubs
fldln2
cmpsl
and
loopne
mov
and
mov
test
daa
mov
xchg
and
adc
xor
mov
pushf
clc
jg
xchg
inc
out
jge
inc
data16
xchg
pop
fnsave
movsl
push
ret
mov
outsl
inc
aam
cmp
imull
js
sbb
pop
sub
pop
stc
sub
cs
cmpsl
ja
bnd
aam
lret
mov
call
jecxz
inc
pop
push
insl
mov
push
std
imul
mov
out
xor
fnsave
sub
les
dec
cltd
pop
jp
sbb
ds
lcall
cwtl
stos
mov
pop
movsb
jno,pt
fcmovne
fdivrl
push
es
mov
test
adc
repz
mov
addr16
ret
stc
cmpsb
ja
movsb
mov
add
push
lahf
cli
pushf
cld
push
movsl
cld
cwtl
ljmp
xor
jb
inc
mov
int
lcall
inc
add
arpl
daa
pop
stos
adcl
inc
sbb
and
adc
sub
inc
mov
inc
xchg
in
pop
xchg
lea
cmp
or
jl
dec
fnstcw
jp
jbe
push
arpl
add
adc
adc
addr16
dec
mov
adc
push
pop
int
and
loope
dec
mov
adc
mov
outsb
adc
inc
and
aaa
sbb
stc
fld
cmpsb
sbb
inc
push
mov
push
sub
inc
push
mov
out
dec
aaa
or
das
addr16
mov
mov
test
and
mov
add
or
and
out
cld
bound
loope
or
mov
fldl
inc
xor
push
sbb
xchg
out
test
fistl
xchg
dec
jo
cmp
xlat
popf
imul
mov
xor
and
mov
test
cwtl
mov
inc
scas
pop
leavew
adc
and
repz
jo
pop
ds
insb
cmp
les
clc
outsl
adc
test
push
les
pop
aas
mov
icebp
ret
or
les
inc
cld
fs
or
fistl
hlt
movhlps
pop
mov
pushl
adc
lret
inc
sar
shlb
mov
lods
xchg
je
inc
orb
pop
pop
out
sahf
shl
xchg
jl
and
in
pop
jecxz
test
sbb
mov
gs
sbbl
test
jp
jge
pop
xchg
cwtl
add
es
jbe
adc
add
push
lods
lods
mov
sbb
cmp
mov
mov
leave
jo
mov
adc
stos
sbb
cmp
inc
pop
jno
stos
addr16
jae
arpl
and
stos
dec
icebp
add
dec
test
inc
jecxz
idivl
adc
out
mov
in
daa
ja
jnp
inc
lods
ljmp
leave
mov
xor
pop
mov
mov
repz
adc
sub
jecxz
arpl
scas
and
aam
xor
xor
inc
nop
xor
outsl
xchg
int
mov
inc
xor
andl
mov
into
out
fnstsw
notl
add
frstor
out
dec
clc
cmp
or
rcr
mov
addr16
dec
push
dec
add
sbb
hlt
pushf
mov
imul
xchg
mov
sub
gs
push
loop
pop
mov
pop
xchg
inc
push
jae
cmp
fmull
stc
ds
jnp
inc
pop
adc
loopne
or
dec
jp
pop
fists
hlt
rorb
sub
push
add
jb
jecxz
jae
fsubrs
andl
sub
rcr
mov
xchg
fmul
mov
sbb
lock
mov
das
add
scas
cmpb
push
ds
sbb
mov
and
push
xor
shlb
mov
fs
xchg
xor
cmp
cmpsb
cmc
jbe
mov
pop
loopne
scas
add
cmp
pop
mov
nop
cld
push
mov
adc
cmp
int3
adc
push
pop
ucomiss
shr
imul
clc
jo
push
data16
pusha
enter
data16
xchg
cmpsl
ds
and
mov
or
ds
lds
xchg
jg
call
cmp
mov
mov
and
cmp
xlat
popa
xor
dec
sub
js
call
jnp
cmpsl
repnz
and
jae
xor
aas
out
cmpsl
sbb
add
mov
les
mov
pop
in
inc
lcall
or
cmp
enter
ss
mov
pop
cmp
mov
iret
pop
cld
imul
lods
sub
xor
pop
and
sbb
mov
mov
hlt
sbb
repnz
lret
stos
fwait
popa
sub
cmc
mov
jle
in
aad
and
pop
stos
xchg
cmp
dec
in
fchs
add
lea
adc
popf
and
adc
inc
xchg
mov
and
movsb
xlat
adc
push
icebp
pop
out
and
jbe
addr16
mov
jl
fsubr
dec
movsb
or
lcall
imul
mov
dec
mov
out
imul
jmp
cltd
cpuid
es
fdivrl
pop
pop
lods
mov
sbb
daa
or
sbb
sbb
mov
mov
bound
push
pushf
scas
fld
aam
cmp
adc
xor
add
sbb
movsb
iret
jle
leave
aaa
insb
xor
cmp
mov
mov
dec
inc
jecxz
fs
aam
je
aas
in
push
lods
pusha
pop
sub
xor
pop
fwait
sub
jnp
in
jle
fisttpl
inc
jns
rol
hlt
cmpsl
add
pop
fdivs
test
or
push
gs
and
and
cltd
shll
sahf
lret
dec
lods
xchg
enter
dec
and
sub
mov
ret
arpl
xchg
stc
sbb
jge
adc
dec
imul
adc
inc
fst
mov
popa
mov
cmpsl
jb
adc
mov
iret
cmp
fwait
sub
movsl
dec
adc
jnp
outsb
pop
sub
push
xlat
scas
sbb
mov
cmc
lods
fcmovnu
mov
rcrl
call
cmp
lods
out
push
data16
testb
movsl
clc
push
aam
sbb
mov
cmp
addl
pusha
sbb
push
leave
mov
or
lahf
adc
sbb
mov
testl
out
imul
popf
jo
dec
aaa
stos
mov
mov
mov
push
imul
xor
in
fnsave
sbb
xlat
mov
ret
jp
xchg
call
rclb
lcall
fidivl
push
adcb
lods
js
jbe
sahf
inc
jmp
lea
gs
test
add
mov
outsb
iret
cmp
loope
call
negb
clc
inc
mov
loop
pop
in
rol
leave
cs
outsb
fcoml
pop
cmp
mov
pop
cmc
dec
or
ret
sub
mov
xchg
xchg
push
in
fisttpll
fsubl
ljmp
fists
push
outsb
mov
inc
out
aas
or
aaa
push
push
scas
mov
jns
aam
mov
shrl
pop
sub
xor
push
addr16
sar
cltd
cs
lret
jns
fs
stos
push
xchg
int3
loopne
lcall
pushf
jb
pop
xor
cmpsb
cmc
jne
cld
adc
addps
in
insb
pop
hlt
add
pushf
mov
jg
inc
and
loope
pop
mov
add
imul
pop
cmpsl
popf
push
pandn
dec
jle
roll
in
dec
mov
shlb
stos
inc
sub
sub
xchg
sub
dec
dec
xor
dec
xor
repnz
lock
out
mov
xchg
jo
cmc
pop
jo
inc
mov
dec
add
popf
stos
aas
stos
iret
and
test
push
xchg
ja
lods
scas
inc
sbb
repnz
or
fsubrs
sbb
out
cmp
addl
mov
inc
mov
xlat
movsl
push
xor
jmp
or
mov
xchg
lcall
cltd
loope
add
clc
sbb
xchg
lea
inc
ret
adc
jecxz
mov
xor
daa
lret
in
add
sarb
add
sub
mov
mov
mov
adc
adc
pop
xor
mov
or
and
sub
faddl
outsb
daa
test
pop
sbb
sbb
dec
mulb
out
push
or
add
cltd
or
xchg
scas
xchg
stos
sbb
push
or
xlat
mov
jecxz
mov
push
mov
pop
mov
nop
mov
and
int3
cmpsb
jl
add
mov
call
mov
imul
mov
push
rclb
cmp
mov
mov
push
and
and
test
out
lods
add
fidivrs
out
xor
outsb
dec
in
addr16
in
notb
out
andb
add
push
push
xor
in
out
repz
jno
pop
cmp
inc
int
lock
fsub
shrb
leave
mov
lock
xchg
cli
mov
dec
iret
popa
mov
ja
and
sbb
cmpsl
jb
cmp
insb
or
les
cs
pop
mov
in
out
cwtl
and
icebp
ret
xor
addr16
sti
xchg
mov
adc
mov
mov
ss
push
cmp
enter
xchg
mov
xchg
fistpl
jg
mov
clc
mov
sbb
rclb
mov
stc
sarb
and
and
fcompl
js
stc
cli
cmp
sbb
imul
fwait
and
jns
into
lret
or
in
dec
xchg
dec
mov
aas
jno
sbb
outsb
adc
pop
ja
rorl
in
inc
jge
fs
cmp
jns
jns
push
and
xchg
fiadds
je
push
mov
in
mov
cli
push
mov
cli
les
scas
sbb
imul
cltd
xor
lea
outsl
add
inc
mov
pop
jbe
insl
fwait
mov
dec
jmp
nop
or
popf
add
scas
ficompl
inc
stc
lea
mov
dec
push
int3
mov
push
mov
adc
inc
je
jge
mov
sbb
jl
mov
or
cwtl
leave
ss
push
aad
call
lahf
jo
xchg
sbb
pop
inc
lock
fcomps
xor
nop
cld
xchg
ret
pop
mov
shl
testb
test
shlb
xor
bound
jae
mov
inc
mov
xlat
outsb
sub
fnsave
lds
not
lods
inc
add
pop
stos
lret
fs
jmp
push
je
jmp
jge
xchg
nop
hlt
mov
dec
mov
sbb
scas
cmp
loopne
call
push
or
lcall
and
jecxz
outsb
pop
jbe
cmc
stos
add
ds
xchg
jo
mov
mov
add
outsl
or
jmp
aaa
mov
daa
sub
add
ja
jb
out
sbb
dec
decl
sub
stc
pop
orl
xor
ds
push
sahf
and
loope
push
sbb
or
sbb
mov
sub
and
andb
add
push
jns
mov
cmp
xor
sub
test
mov
cmp
mov
ljmp
pop
push
push
pop
ljmp
mov
push
sub
cmp
push
nop
mov
mov
stos
push
push
pop
push
mov
and
push
cmpsb
dec
loope
cmp
xor
bound
dec
icebp
cmp
cmp
jecxz
out
call
ds
cmp
insb
xchg
sub
dec
push
fst
add
pop
lds
jg
jbe
jae
and
xchg
out
cld
pushf
js
mov
cmp
lahf
cmp
es
out
popf
imul
mov
push
push
int3
pusha
adc
sarl
pushf
lds
and
lcall
pop
push
xchg
sub
and
jns
mov
arpl
add
mov
xor
cld
mov
hlt
mov
fsubr
xchg
sub
mov
fwait
sub
mov
cmp
add
pop
mov
adc
sbb
outsb
cmp
mov
sub
stos
mov
sbb
in
out
and
addl
pop
adcb
enter
imul
in
lds
xor
inc
in
jae
movsl
cmp
dec
push
sub
fsubr
push
sahf
dec
and
mov
or
cltd
daa
adc
pop
std
and
sahf
pop
movsb
int
lods
mov
sub
xor
call
sub
or
leave
jp
addr16
jle
and
xor
pop
imul
xchg
imul
cli
push
pop
jne
loopne
pusha
sbb
cmp
pop
jo
scas
jmp
dec
in
push
repnz
push
inc
sbb
and
ljmp
push
popa
test
or
jecxz
dec
mov
push
pop
pop
cmp
cltd
mov
jne
pop
mov
dec
pop
mov
mov
add
orb
pop
out
mov
inc
shll
mov
xchg
lcall
ret
pushf
scas
rcrl
mov
testb
sbb
jmp
jne
clc
dec
addr16
push
shrb
es
std
ds
rcl
gs
cli
cmpsb
fs
sbb
or
mov
inc
xchg
xchg
imul
dec
push
xchg
cwtl
pop
dec
in
inc
jmp
into
fcmove
xor
es
fidivrl
xchg
popf
add
shrl
pop
push
call
push
sub
adcb
dec
jecxz
pop
sub
add
sbb
push
xor
sbb
leave
dec
insl
sbb
cld
inc
or
outsl
pop
jns
jae
or
adc
inc
cli
sbb
mov
fwait
sub
sub
subl
push
repnz
int3
xor
aam
idiv
pop
push
sub
inc
jnp
mov
test
inc
pop
out
xchg
jnp
cmp
cmpsb
loope
lcall
movsb
ss
pusha
repnz
push
xor
shrl
loope
cld
jo
xor
jmp
sbb
fbstp
enter
pop
add
popl
cmc
push
mov
int
jg
dec
stos
mov
cmp
sub
imul
jne
sahf
cld
aaa
fnstenv
push
fldt
fcoml
dec
aam
mov
jg
pop
sub
sbb
xor
or
sarl
leave
or
sub
cmp
es
and
jbe
int3
inc
mov
jae
sahf
decl
out
sbb
xchg
pop
mov
fdivrs
aam
xor
inc
push
test
adc
cmp
pop
mov
mov
loopne
push
adc
test
cltd
dec
arpl
cmp
addb
scas
popa
aas
dec
jecxz
xchg
jle
pop
xchg
in
std
shl
xor
fs
out
adc
cmp
inc
ds
add
fidivl
dec
sbb
in
push
orb
dec
xor
adc
insl
adc
daa
jbe
arpl
int
adc
or
xor
ret
push
shl
pop
les
xor
sbb
dec
sub
lret
rorb
pop
push
jmp
xchg
mov
dec
data16
lret
sti
emms
push
cmp
repnz
icebp
xchg
imul
in
and
inc
ja
push
test
rcrb
push
cmc
xchg
sbb
and
out
mov
mov
cli
iret
ds
ret
pop
inc
rcr
mov
xor
push
add
mov
sbb
pop
test
rcrb
sub
jle
aas
xchg
insl
lock
pop
in
jge
mov
xor
push
cwtl
ja
les
sub
xchg
add
pop
xor
add
sbb
cmc
aaa
xchg
pop
sub
mov
popa
mov
rcrl
out
inc
jecxz
jae
imul
dec
adc
data16
mov
lods
and
lds
push
fdivrs
lahf
imul
dec
ja
hlt
sub
mov
outsl
inc
data16
frstor
lret
or
test
add
xor
sbb
rol
pop
ret
cmp
lods
jl
test
into
inc
fwait
jg
sub
inc
mov
inc
jbe
cld
xchg
cs
sbb
or
cmp
sub
add
mov
je
mov
cli
jg
add
movb
jl
call
fistpl
mov
mov
rol
and
cwtl
inc
inc
in
cmp
dec
cwtl
test
shl
stos
test
lds
test
std
push
wbinvd
lock
jbe
les
or
xlat
xlat
outsb
leave
adc
xchg
pop
xchg
sub
mov
or
pop
jno
lret
push
mov
mov
and
sub
and
cld
test
in
inc
andb
mov
xchg
aam
mov
fwait
sahf
pop
jbe
pop
adcb
notb
aas
fldl
and
jbe
lods
bound
add
aaa
xchg
insl
or
test
test
lcall
cs
pop
jns
pushf
or
jle
pushl
call
sbb
pop
shll
into
add
and
cltd
cmp
int
sbb
pop
xor
add
xchg
divb
pop
outsb
lods
pop
push
fisubs
fs
sbb
stos
js
push
test
popl
mov
test
inc
lcall
sub
hlt
sahf
clc
jg
dec
cmp
adc
ja
pop
arpl
mov
daa
fidivs
hlt
inc
gs
or
inc
mov
fmulp
xlat
mov
or
popf
xchg
popl
jl
sub
add
sbb
gs
and
lods
jne
test
rclb
or
xchg
subb
nop
pop
arpl
cmp
hlt
ds
dec
cmp
mov
xchg
or
popf
xor
push
cmpsb
ret
ds
adcb
insb
lods
cltd
lock
mov
jmp
int3
jl
stos
mov
stos
pop
xchg
mov
ret
dec
inc
xor
and
iret
xchg
push
or
mov
adc
mov
in
adc
pop
mov
aas
bound
test
add
sbb
cltd
mov
pop
jnp
mov
or
mov
jmp
inc
in
xor
bound
movsl
pop
sarl
dec
in
xchg
cmp
scas
inc
inc
insb
loop
in
sub
or
push
mov
lods
hlt
cmp
jg
fcomps
inc
sbb
leave
adc
mov
xchg
aam
in
jg
ds
popf
sub
std
popf
sbb
stos
lds
rcr
push
mov
dec
adc
adc
mov
out
aas
push
fisubrl
lock
scas
sarl
add
test
lds
fiaddl
pop
out
and
mov
and
sbb
inc
and
loopne
dec
jbe
inc
cmp
mov
rclb
dec
jle
cmp
in
add
and
jae
out
in
push
or
loopne
adc
out
inc
out
cld
inc
fsubrl
mov
lods
sub
jae
enter
gs
mov
jb
insb
dec
cmp
jmp
mov
inc
in
xor
in
nop
loope
aaa
push
nop
mov
ficompl
ds
bound
dec
in
xchg
aam
cwtl
or
mov
out
rcll
push
mov
insb
test
leave
fnstenv
jmp
push
mov
push
fstp
pop
adc
stos
adc
in
jmp
mov
sub
dec
lret
dec
jge
das
add
movsl
icebp
add
ret
jmp
sub
notb
cmp
fwait
data16
xchg
cwtl
mov
js,pn
mov
es
fcompl
or
cli
inc
jns
mov
push
andl
mov
push
sbb
mov
sub
or
mov
pop
mov
lret
jae
mov
pop
dec
pop
cmp
shrb
test
dec
movsb
mov
pusha
adc
loop
push
dec
push
push
mov
fs
xor
cmp
fcmovne
hlt
mov
push
mov
xorb
imul
sbbl
arpl
aam
push
xchg
jmp
and
shrl
neg
ja
lock
jno
int3
stos
aas
add
adc
shlb
mov
insb
add
shlb
gs
test
cmp
pop
inc
lcall
lock
and
fs
xlat
fnsave
pop
inc
sbb
cmp
mov
rcrb
adc
test
aam
or
mov
xchg
xchg
mov
adc
cmp
inc
or
push
lahf
repnz
mov
jge
stc
outsb
xor
scas
pop
xor
iret
js
and
in
es
add
stos
cs
out
cld
test
mov
jg
mov
nop
div
sbb
cmp
inc
and
dec
dec
mov
js
sub
shl
enter
mov
jle
pushf
loope
inc
mov
push
decl
sbb
adc
popa
aas
enter
push
call
jae
mov
lds
icebp
mov
adc
mov
lea
insl
mov
out
cmpsb
push
mov
push
jge
lret
jae
jge
lcall
jno
add
std
nop
cmpsl
jg
pop
mov
add
sub
push
mov
inc
push
cmc
mov
sbb
xchg
out
xor
call
test
or
std
inc
int3
es
sahf
add
dec
lods
jae
inc
mov
loopne
rol
or
pushw
cmp
inc
popa
jecxz
lret
or
sub
stc
xchg
xchg
pop
dec
out
add
sub
lock
dec
lods
inc
jbe
lret
dec
dec
jb
imul
sarl
mov
mov
pop
pop
push
jne
pushf
xor
daa
in
xor
pop
push
pop
imul
add
loop
inc
int
mov
popf
stc
xchg
aaa
inc
into
pop
sub
fisttps
jo
cwtl
dec
loopne
test
addr16
xchg
pop
mov
and
and
dec
repz
sub
shlb
aaa
xchg
jp
movq
jl
stc
test
mov
aaa
push
push
push
pop
inc
pop
sahf
lods
and
hlt
fisubl
shrb
int3
cmp
pop
dec
loop
out
sbb
cmp
xor
call
xchg
mov
push
inc
movsl
add
pop
fmull
addr16
cmpsb
subb
mov
les
hlt
data16
decl
cmpsb
and
shll
sub
test
adcb
or
js
jne
clc
lods
fs
push
ja
stos
jne
xchg
lea
ret
mov
rep
mov
das
pushf
addr16
inc
xchg
enter
and
shlb
mov
in
loop
fdivrl
repz
lret
mov
mov
pop
jmp
and
xchg
outsb
pop
cmpsb
imul
mov
imul
loopne
mov
int
repnz
in
sbb
sbb
lahf
cld
mov
mov
loope
cli
inc
ret
inc
inc
fnstcw
fldcw
mov
test
xor
loop
popf
xchg
movsb
int
mov
dec
aaa
lcall
fld1
dec
std
jl,pn
xor
aaa
mov
dec
fs
ds
adc
mov
jae
mov
xchg
sub
test
sub
jae
mov
cmp
inc
fstpt
je
inc
adc
cmp
push
sarl
movsb
inc
fcom
js
je
jae
call
ds
es
addps
pop
cmpsl
popf
pop
pusha
jp
and
cmp
xor
sbb
cli
mov
jb
adc
orl
incb
jnp
andw
insb
sarb
xorl
mov
mov
scas
mov
sbb
sbb
lods
inc
pop
mov
push
mov
push
int3
lcall
out
es
fists
sbb
pushl
test
out
hlt
outsb
test
aas
sub
cmp
inc
je
cmc
mov
mov
jle
xchg
pop
rcl
daa
mov
xor
shll
sub
ret
cmc
push
push
xor
jbe
dec
add
ret
xor
push
sub
outsl
iret
cmp
sbb
adc
mov
and
and
sub
test
add
scas
mov
mov
add
jne
pop
push
mov
loopne
hlt
push
mov
pushf
push
into
cmp
mov
sub
fdivrs
pop
add
loop
add
bound
pop
xchg
cmpsl
dec
jbe
adc
sti
jbe
es
mov
fdivrp
cmp
push
lods
lock
mov
test
push
shlb
add
popa
xor
inc
les
outsb
fdivl
nop
mov
daa
outsl
bound
add
ds
movsl
icebp
aas
loope
pop
dec
arpl
sahf
xchg
jmp
sbb
call
imul
les
and
or
std
cli
or
out
in
movsl
dec
and
cwtl
cs
or
mov
or
push
pop
and
mov
fists
cmc
rorb
movsl
lds
cmpsl
or
and
jno
sub
jmp
mov
popf
mov
sub
xor
jns
xchg
fmuls
sahf
lods
mov
lret
pop
push
jp
jp
and
mov
dec
inc
loope
addr16
fcoms
icebp
test
outsl
jnp
sub
loope
cwtl
xchg
movsl
inc
inc
pop
js
bound
and
mov
inc
mov
inc
sbb
inc
cbtw
sub
lret
adc
pop
cs
scas
dec
dec
adc
inc
mov
shl
jne
and
outsl
enter
test
push
add
popa
push
inc
in
inc
stc
adc
fidivl
ret
push
adc
jo
imul
xor
inc
fiadds
aas
cs
jno
add
push
sbb
call
popa
push
enter
xlat
push
adc
dec
sbb
je
push
push
sbb
xor
movl
in
fists
push
in
inc
or
pushf
mov
xchg
cmp
push
cmc
nop
mov
adc
inc
xchg
popf
jl
inc
loop
push
pop
in
push
ja
mov
cvtdq2ps
xor
mov
flds
xchg
pop
mov
push
jmp
mov
add
pop
hlt
ds
inc
pop
push
mov
test
jecxz
pushf
lea
push
dec
pop
fistps
mov
adc
mov
outsl
cli
jne
mov
push
push
and
mov
jmp
daa
sarb
repz
push
clc
dec
int
push
lea
decl
pushf
fs
mov
adc
ljmp
dec
mov
xor
sar
push
mov
pop
push
cmpsb
and
adc
jnp
inc
xor
mov
movsl
sub
mov
int3
mov
fs
pop
fildl
scas
ss
fsts
pop
jp
jne
sar
jne
cmp
add
cld
arpl
jge
xorl
pushf
andl
push
sub
push
pop
inc
gs
repnz
jp
inc
lret
mov
adc
pop
add
movsb
hlt
pcmpgtw
enter
sbb
ret
jb
mov
and
mov
int3
in
push
js
jns
lret
fwait
bnd
inc
es
popf
or
addb
mov
xchg
aas
push
sub
dec
jae
nop
xor
loop
add
rorl
dec
xchg
fldl
sti
jmp
repnz
or
xchg
inc
lods
mov
outsb
or
scas
stc
pop
or
pop
or
jne
out
mov
jg
lods
inc
push
and
fcmovu
pop
mov
push
jae
xorb
add
jmp
dec
roll
dec
loop
mov
add
mov
pop
xor
aam
lods
inc
cmp
jnp
int
scas
loope
or
mov
fucomp
mov
sbb
dec
mov
dec
sbbb
cld
jecxz
mov
popf
mov
and
and
jl
jb
sarl
mov
push
mov
add
push
mov
mov
mov
shll
mov
jmp
test
aam
jo
pop
outsl
fcoml
xor
pop
out
std
shl
bound
popf
jmp
loopne
popf
adc
inc
push
popf
addr16
repnz
push
js
arpl
pop
fstps
shld
in
nop
pop
xchg
xchg
adc
loop
inc
rcr
cmp
loop
insb
add
jns
jle
std
push
das
push
push
test
imul
je
mov
add
mov
orl
jb
or
dec
outsb
decb
or
insb
ret
and
pop
sbb
add
sub
pop
fnsave
xor
aas
mov
fdivrs
mov
mull
sbb
mov
insl
push
ja
pop
add
mov
into
addl
ja
fwait
mov
inc
fstps
je
adc
inc
aam
je
icebp
enter
add
fistps
cltd
jae
insl
addr16
jmp
add
cli
xchg
cwtl
push
add
or
mov
sahf
push
test
add
loop
cld
jge
sub
dec
push
xchg
mov
inc
push
or
sbb
xor
fmuls
jmp
iret
xor
dec
pop
loop
testl
push
pushf
test
sbb
cmp
push
scas
sub
fwait
cmp
sti
mov
mov
mov
add
cmp
sbbb
pusha
jmp
dec
aad
or
aaa
xchg
add
dec
pushf
xchg
dec
jmp
nop
cmp
cmp
mov
dec
and
mov
sahf
ss
test
xchg
mov
push
dec
fwait
adc
inc
icebp
sub
daa
into
ret
inc
mov
and
sub
push
jg
add
repnz
add
dec
out
test
dec
pop
in
inc
mov
mov
incb
lret
sti
sbb
andb
fsubrl
ss
mov
mov
cmpsl
not
lcall
mov
ret
enter
fmul
fidivrs
adc
sub
aad
cli
or
movsb
cmpsl
sbb
xchg
push
pop
scas
test
pop
in
push
mov
fidivrs
mov
repz
fimuls
mov
sub
js
mov
add
pop
clc
mov
push
aas
add
fwait
ss
jo
ljmp
movsb
loopne
test
outsb
rcrl
in
arpl
nop
jle
mov
nop
push
outsl
ret
xchg
test
push
sub
jo
jns
ja
test
add
xor
push
movsl
fwait
push
dec
in
out
lods
inc
lock
js
lea
pop
dec
push
js
stos
inc
rcrb
dec
les
push
std
popa
sub
call
xchg
test
arpl
jnp
add
lds
push
mov
jg
test
jo
dec
decl
push
mov
push
jmp
ret
mov
cmc
and
or
aam
movb
dec
mov
sub
jo
insb
aas
xchg
xchg
push
mov
sub
movl
xchg
pop
or
and
inc
mov
xlat
scas
mov
or
aam
ja
adc
push
cld
and
jnp
xchg
jo
add
in
jecxz
inc
adc
mov
push
dec
adc
mov
ret
and
outsl
shr
rol
xchg
jne
mov
xchg
xchg
insb
repz
jne
repz
or
pop
mov
xlat
or
cltd
in
lods
sub
inc
cmp
test
mov
mov
sbb
or
mov
aam
cmc
pop
mov
xchg
cmp
mov
cmp
cltd
cmp
mov
push
sbb
loopne
dec
cmp
lea
pop
movsb
sti
int
xor
pop
xor
push
test
add
int3
loopne
or
jle
push
ljmp
xor
inc
push
and
xor
push
test
out
add
in
and
xorb
jg
stos
jge
js
xchg
mov
push
mov
pop
icebp
nop
pop
jg
aaa
adc
ss
out
lock
aas
lods
xor
adc
aad
cwtl
mov
xor
imul
cmp
andl
stos
das
lret
loop
hlt
lock
push
sub
jmp
cmp
mov
pop
xchg
xchg
fsubrp
clc
mov
mov
add
das
pop
and
add
notb
sub
jge
faddl
test
ja
ficoms
xor
xchg
mov
cwtl
adc
out
test
fimull
push
push
mov
jge
js
pop
jmp
dec
add
iret
mov
ljmp
sub
cmp
outsl
add
aam
in
repz
std
enter
adc
int3
test
test
jge
mov
shlb
rcrl
jbe
adc
add
fwait
cwtl
sbbb
ret
hlt
xchg
mov
fisttps
and
push
loop
mov
jb
mov
adcl
xchg
mov
cltd
idivb
inc
in
xchg
movsl
lcall
push
mov
icebp
mov
dec
sub
je
xsha256
cmpsb
adc
rorl
sbb
pushf
pop
mov
mov
fs
in
fimuls
inc
pushf
push
push
inc
jo
scas
push
jmp
out
xor
dec
sub
dec
shr
jb
aas
ficoms
in
jo
lret
lcall
fwait
gs
xchg
mov
aad
add
and
stos
lods
mov
xchg
test
fnsave
movsl
jp
mov
cmp
ret
pop
pop
bound
lods
inc
pusha
and
mov
cmp
les
pop
repnz
xchg
mov
test
jns
push
inc
fsts
mov
jbe
aam
subb
xchg
sub
mov
jg
mov
cmp
xor
sbb
mov
call
mov
pop
dec
fists
push
mul
mulb
daa
nop
stc
enter
sbb
orb
test
leave
es
out
mov
mov
jne
push
jp,pn
stos
jmp
loopne
in
cs
sbb
dec
test
xchg
sarl
out
loopne
inc
sub
je
es
inc
mov
mov
lods
bnd
and
test
jne
test
push
sub
xrelease
push
aas
rcrl
fsubrl
inc
lret
mov
sahf
aad
sbb
ret
xchg
push
ret
add
or
pop
test
faddl
and
inc
push
out
cmp
test
sbb
rcrl
jb
sbb
je
scas
push
int
sbb
push
hlt
ljmp
xor
dec
in
rorb
sbb
mov
jne
sahf
ja
xchg
jecxz
and
testb
mov
jecxz
pop
scas
xchg
cmpsb
sti
inc
mov
pop
sbb
repz
outsb
push
lock
sbb
fmull
dec
sbb
arpl
xlat
pop
sub
adc
xchg
out
mov
out
xor
xor
pop
stc
inc
lea
push
cmp
xchg
pop
lock
cmp
pop
xchg
xor
leave
pusha
daa
pop
mov
pop
cmpsl
rcrb
mov
jecxz
enter
aas
in
loope
sub
push
fcompl
cmpsl
cmp
inc
sbb
int3
arpl
jnp
ret
ljmp
dec
mov
adc
push
aas
rcr
lcall
xlat
cmp
push
mov
pop
sbb
jge
xchg
jecxz
repnz
push
in
int
mov
mov
ret
in
enter
cmp
xchg
or
arpl
loope
dec
lds
in
imul
repz
shll
pusha
xchg
pop
icebp
loopne
pop
jae
hlt
js
scas
sbb
push
pop
jb
dec
scas
icebp
repz
into
dec
push
jge
popa
enter
test
ret
mov
pop
xchg
outsb
add
sub
xor
fidivrl
and
aad
xchg
cs
dec
mov
cld
jo
cs
push
push
std
jb
xor
mov
inc
and
or
das
enter
push
or
mov
inc
pop
cmp
xor
sbbb
fldenv
adc
dec
jg
rorb
dec
std
dec
pop
sarb
dec
mov
out
hlt
jl
jecxz
sub
sahf
clc
inc
std
pop
imul
and
int3
arpl
sub
orl
pop
push
loope
and
push
nop
imul
lcall
and
xchg
push
out
jg
dec
jl
cmc
mov
addr16
test
cwtl
out
hlt
sahf
mov
mov
loop
fsubr
outsl
ds
cmp
mov
dec
es
in
mov
mov
neg
ljmp
imul
inc
inc
inc
sub
or
cwtl
mov
in
inc
pop
and
pop
ja
leave
mov
push
mov
jle
mov
fcom
mov
fmul
lret
rol
xor
jmp
xchg
dec
daa
push
orb
mov
lcall
sub
ret
jmp
adcl
lds
sti
rorb
cmp
dec
mov
andl
cmpsl
out
mov
or
dec
imul
push
hlt
shrb
xchg
cld
lcall
cli
jne
sahf
pop
mov
outsl
sub
andb
sbb
cli
icebp
lods
lock
popa
fdivl
outsl
stos
mov
out
ret
xlat
mov
insb
pusha
mov
andl
fwait
movsb
orb
or
cmp
xchg
imul
xchg
aaa
push
add
shll
lahf
stos
or
push
xor
mov
dec
fwait
push
mov
adc
cwtl
pop
lds
repz
inc
cwtl
push
xor
push
in
daa
repz
repnz
mov
jg
test
add
fst
jnp
test
subb
shrl
sbb
dec
xor
dec
insl
inc
ljmp
lret
cmpl
jecxz
sub
or
mov
cmpsb
pop
imul
test
mov
jns
pop
mov
popf
data16
icebp
add
stos
push
ds
lret
out
ja
mov
decb
cltd
mov
push
repz
aad
movsb
repnz
mov
add
and
dec
xor
jg
in
jg
daa
pop
sbb
loop
jae
das
inc
fidivrs
inc
test
aam
test
fwait
jecxz
xlat
mov
dec
jl
iret
mov
pop
cmp
mov
dec
fildll
jecxz
xor
mov
or
or
pop
push
inc
sbb
in
scas
cmpsb
mov
fdivrs
inc
jg
mov
dec
leave
cs
mov
push
jnp
sbb
movsl
xchg
add
and
sbbb
out
or
icebp
orb
bswap
test
fwait
cmpsl
sbb
lcall
mov
aaa
mov
data16
imul
dec
inc
xchg
dec
pop
jg
sbb
dec
test
iret
stos
aad
xorb
xchg
pusha
scas
add
filds
jns
xor
inc
cld
fldcw
pop
and
push
or
movsl
xor
pop
xor
jp
jne
sbb
dec
push
jmp
je
adcb
shll
xchg
mov
dec
dec
sub
rol
mov
out
sti
aam
ret
mov
scas
xchg
addr16
mov
adc
imulb
ret
or
xchg
jb
movsb
xor
testl
xor
jg
push
xchg
sub
pushf
out
mov
dec
pop
jb
data16
fists
setns
inc
iret
adc
outsb
cmp
xchg
shll
mov
nop
inc
mov
push
pusha
sbb
inc
rcrl
pop
sub
push
fcmove
inc
fidivl
cli
push
lods
inc
dec
xchg
mov
cmp
sbb
dec
enter
mov
mov
jae
ss
aaa
sub
dec
add
and
out
fcoms
mov
jmp
push
lods
dec
lods
pop
leave
and
je
inc
fiadds
xor
shr
setle
inc
jo
push
mov
sub
push
fstpt
fs
jbe
pop
outsl
es
dec
std
and
clc
lods
mov
push
inc
pop
addl
adc
fldcw
pop
jecxz,pn
push
mov
shr
pushf
inc
aaa
dec
fdivs
scas
mov
xor
notl
ljmp
loop
jnp
mov
lcall
sub
push
aam
or
add
dec
negb
jge
cmp
insb
jl
xor
inc
out
fisttps
lahf
xchg
mull
ljmp
lock
cmc
adc
mov
push
adc
dec
mov
inc
mov
mov
mov
lods
cli
dec
mov
adc
jno
push
in
lods
clc
xchg
jbe
push
imul
dec
addr16
mov
mov
mov
and
stos
push
mov
xchg
jae
enter
hlt
push
int3
dec
out
jbe
add
pusha
jno
or
addr16
fldz
test
ss
sbb
sub
int
push
jge
pop
icebp
push
out
or
js
cltd
xor
sahf
popa
jp
pop
or
inc
mov
cmc
mov
aad
and
mov
and
xchg
xor
sahf
mov
inc
or
adc
xchg
rep
js
mov
push
push
dec
xchg
das
daa
jge
pop
push
shrl
hlt
and
mov
icebp
mov
jbe
pusha
cmp
and
lods
repnz
xchg
loopne
fcoml
mov
push
imul
push
lea
push
fmull
adc
repnz
test
xor
dec
int3
arpl
cwtl
addr16
int
lds
stos
outsl
loop
stc
add
dec
outsb
sbbl
xchg
sub
xlat
and
xor
mov
mov
mov
jecxz
ds
push
xor
pushf
imul
ljmp
dec
fidivl
cmp
fs
lods
clc
notl
mov
push
fisubrl
dec
pop
cmc
jb
pop
sub
movsb
cmp
nop
loope
add
lea
xchg
lock
fsubs
shlb
xchg
lahf
das
add
rcrb
icebp
bnd
adc
push
sbb
pop
xor
popf
xor
jp
cmp
mov
sbb
push
fnstenv
stc
lahf
sub
mov
addl
or
loopne
es
xchg
cmp
lea
sbb
cmp
ja
out
xchg
fdivrl
add
mov
cld
inc
xor
adcb
movsl
sub
mov
sti
fstpt
or
rcrb
fimuls
mov
fsubl
jns
repnz
dec
cmp
xchg
int3
fdiv
mov
aad
cs
aam
sub
jp
cmp
movsb
fucomip
mov
adc
stos
out
and
jbe
jg
repz
adc
xchg
into
loope
ja
mov
adc
jg
bound
push
and
xor
push
shll
popa
daa
add
cld
or
adc
xchg
clc
and
xor
test
icebp
sbbl
xchg
popa
enter
mov
test
sbb
mov
push
adc
pop
jle
fisubrl
mov
cwtl
ja
movsl
lret
icebp
dec
jb
notl
jne
xchg
mov
xlat
xchg
mov
sbb
es
gs
cli
pushf
xchg
adc
loope
gs
add
bound
fdivrs
mov
push
xor
mov
loope
out
pop
fldl2t
cmp
popf
inc
sbbb
ret
adc
sub
mov
mov
pop
xlat
nop
xor
clc
and
loopne
add
jbe
push
outsb
mov
and
adc
sahf
mov
lahf
sahf
jmp
sahf
add
xor
jne
movsl
cmpsl
repnz
sahf
stos
pop
daa
cltd
jae
popf
lock
push
in
pop
fsubs
mov
xor
mov
adc
mov
out
and
stos
xor
fcoms
inc
add
and
int3
push
push
ljmp
dec
leave
mov
mov
sarl
pop
testl
divb
mov
jp
lret
sub
dec
pop
jne
call
test
aas
pusha
adcb
and
mov
pop
scas
inc
dec
dec
xlat
push
dec
pop
add
fucomi
or
int3
imul
xchg
mov
inc
in
testb
xchg
xchg
ret
pop
pop
mov
mov
pop
jae
insb
icebp
mov
jmp
pop
daa
inc
in
inc
fadd
or
mov
inc
adc
negb
inc
cmp
loopne
inc
or
rcrl
aad
jo
es
push
xor
xchg
dec
out
mov
loopne
inc
and
mov
jo
sub
loope
sahf
add
or
aaa
sbb
in
imul
xchg
ret
sub
xchg
aas
int
fdivrl
or
clc
dec
sbb
cmp
sbb
inc
mov
int3
mov
les
das
sub
jae
clc
mov
xchg
xchg
sub
pushf
ss
out
adc
out
push
xchg
add
pop
outsb
scas
sub
fcoms
sarb
xchg
fcomp
push
outsl
xor
pop
loope
out
pop
jb
shrb
push
out
cmc
mov
pop
fs
jge
inc
popl
add
movsb
dec
and
icebp
shr
rcll
and
xchg
lock
cli
insl
jp
xor
xor
push
inc
pop
mov
fs
shll
sbb
lods
icebp
jle
lock
sarb
cmp
or
cwtl
shlb
cmpsl
and
movsl
insb
fucomp
xchg
pop
adc
jp
aas
mov
int
iret
call
inc
sbb
stos
mov
sub
mov
lea
nop
or
or
negb
pop
aad
loop
sti
ret
addr16
sarb
enter
jno
gs
addr16
popa
sub
push
dec
sahf
mov
adc
and
jl
push
xor
mov
pop
aad
inc
xor
xchg
ja
lahf
sub
or
stos
lret
pushf
arpl
in
in
aas
push
mov
cmc
sbb
xlat
stc
iret
fisubl
hlt
xchg
push
jnp
lods
cwtl
popa
lahf
push
mov
shll
pop
jl
or
and
test
mov
pop
lcall
and
mov
enter
frstor
jne
adc
or
cli
mov
inc
and
xor
ja
daa
shll
std
push
stos
lock
gs
sarb
jp
sarl
adc
dec
pushf
pop
fwait
jl
ret
sarl
sub
iret
test
js
les
jp
jo
jo
pop
mov
lea
dec
fadd
or
testl
call
adc
mov
repnz
jecxz
and
les
lods
stc
test
dec
insb
js
rcrb
pop
pop
mov
je
ja
test
xchg
daa
sbb
mov
lds
dec
pop
adc
movsl
mov
pusha
aaa
lret
push
mov
dec
cmovg
xchg
imul
sbb
xor
cld
jnp
ret
movsb
divl
ret
arpl
mov
in
hlt
sahf
dec
jp
cmp
das
sarb
ficoms
shll
xchg
jnp
into
cmp
pop
sub
cs
mov
dec
pop
jg
jbe
fstpt
test
pop
push
jno
xchg
mov
arpl
aas
inc
pop
mov
add
nop
push
sbb
fidivs
lods
add
jb
adc
jg
or
mov
jp
sbbb
nop
mov
lret
mov
jne
popf
inc
lcall
or
in
adc
sub
xor
mov
pop
inc
add
push
xor
lods
jne
dec
xlat
xlat
xchg
inc
fadd
mov
inc
or
jg
ja
mov
cmp
in
mov
cmp
repz
pushf
test
insb
sub
fstl
mov
iret
rorb
and
stos
cmp
out
adc
std
fdivrs
or
xchg
inc
lods
adc
xor
xchg
aas
testl
stc
ds
cld
cld
shl
fdivl
or
add
inc
and
push
stos
std
fisttps
mov
cs
xchg
insb
ret
int
imul
pop
or
lods
jns
int3
cmp
fs
xchg
dec
adc
lea
mov
mov
lea
lret
xlat
pusha
scas
mov
jge
jmp
ret
out
adc
addr16
ret
lret
cli
and
xor
movsl
je
adc
mov
ljmp
mov
icebp
out
mov
js
addr16
scas
lcall
inc
or
enter
repnz
imul
test
inc
inc
and
pop
mov
cltd
jno
hlt
hlt
fwait
out
push
add
loop
hlt
sahf
mov
push
icebp
int
repz
fwait
cmp
pop
and
cmc
lcall
test
cwtl
and
movsl
idivl
xor
push
add
sahf
xor
xor
lods
mov
fstpl
or
aas
nop
xlat
xor
sub
std
lret
xchg
or
jmp
mov
push
cmp
icebp
cmp
xor
or
push
fyl2xp1
out
sbb
pop
imul
pop
sbb
pusha
or
push
mov
mov
sahf
test
mov
leave
idivb
xor
jle
pushf
or
push
jno
inc
stos
push
xchg
shlb
pop
test
test
jb
sbb
mov
xchg
repz
or
jle
or
pop
mov
popf
outsl
fistpll
ljmp
dec
push
and
call
sub
pop
and
jne
xor
gs
cmpsb
fcoms
mov
das
std
sub
dec
cmp
push
cmpsb
out
call
mov
mov
cmp
adc
stos
add
cmp
aam
dec
adc
cmp
jno
push
mov
pusha
jecxz
xchg
xor
idivl
mov
std
cld
lods
pushl
pop
jbe
shlb
cwtl
jp
add
or
sub
sti
into
push
or
mov
rorb
ljmp
mov
jg
xor
pop
not
xchg
and
mov
push
inc
es
jl
push
into
inc
fadds
jae
inc
stos
xchg
pop
out
enter
scas
ljmp
or
push
adc
dec
jo
lahf
stos
pop
dec
dec
inc
int
pop
ljmp
jecxz
add
mov
test
sbb
xchg
insl
sub
adc
dec
faddl
and
lock
lock
repnz
enter
xchg
daa
cmp
or
sbb
subb
mov
enter
mov
movsl
pop
aas
ljmp
mov
jo
jne
xlat
xchg
scas
pop
push
jle
sbb
sbb
int
out
loope
sbb
jle
icebp
jb
int3
sub
or
das
imul
fidivs
fisubs
or
mov
loope
add
lret
test
sub
movsl
test
xlat
daa
pop
repnz
clc
push
pop
cmc
push
jns
sbb
lret
lods
mov
inc
test
faddl
cmpsb
cmc
mov
dec
mov
inc
shr
jae
and
out
icebp
jno
testl
test
idiv
cld
push
xchg
jp
idivb
pop
mov
mov
jge
lods
mov
arpl
cmp
dec
mov
int3
mov
std
push
xor
pop
flds
ljmp
in
or
sbb
insb
outsl
mov
data16
rolb
loope
cld
xor
mov
daa
aaa
jnp
imul
xor
lock
mov
sub
jo
adcb
andb
mov
fstpl
push
push
pop
or
mov
dec
cli
mov
mov
aad
andl
or
sub
arpl
loopne
add
icebp
xchg
sub
lods
and
outsb
scas
add
jo
ljmp
icebp
xchg
lods
lods
pop
arpl
nop
pop
mov
mov
movsb
andl
add
test
jne
sub
push
xchg
in
sub
xor
ds
mov
jo
and
das
inc
outsl
push
xor
push
pop
loopne
loopne
xchg
pop
clc
sbb
addr16
jbe
in
ja
leave
pop
add
testl
sbb
jno
xchg
negb
cs
jnp
fdivl
cltd
loop
add
popa
xchg
fcmovu
and
ljmp
inc
mov
testb
lahf
pusha
dec
xchg
dec
dec
push
mov
jg
aaa
push
and
pushf
lea
pop
sbb
in
push
mov
rorb
fidivs
orl
mov
call
ret
incb
aas
sbb
xchg
xorb
cmp
cmpsl
aas
dec
dec
fnstsw
inc
fcmovne
movsl
mov
sub
popf
lock
outsl
cmpsb
mov
pusha
popa
clc
xchg
lret
jae
jg
stc
pop
jae
xchg
and
push
add
mov
lcall
sub
push
inc
add
sbb
notb
mov
cmp
hlt
loope
add
dec
mov
sbb
mov
dec
test
test
les
add
cmc
dec
push
std
inc
lods
cmpsl
int3
repnz
mov
pop
mov
test
loope
cwtl
fwait
shrb
mov
scas
sub
rorl
fwait
lods
popa
sub
pop
push
outsl
shr
push
xchg
xchg
add
call
fdivs
ljmp
in
jg
jbe
push
xor
inc
push
lahf
push
shlb
xor
adc
jb
xchg
out
adc
and
jp
jne
mov
xchg
sub
mov
push
mov
mov
jno
faddp
cmp
jge
add
loopne
xor
mov
dec
jmp
aam
out
aam
jno
pop
dec
decl
out
dec
fadds
dec
adc
into
cmp
sub
lret
ret
scas
mov
xchg
mov
in
jecxz
adc
cli
cli
xlat
imulb
clc
lcall
mov
stos
out
xchg
fcoms
xchg
adc
adc
adc
popf
xor
add
mov
das
movb
dec
add
xchg
jp
fmulp
xchg
fbstp
mov
mov
std
push
divl
sahf
bound
xchg
push
ss
push
jmp
inc
pop
fwait
push
mov
push
xor
jo
dec
mov
stc
imul
inc
pusha
mov
stc
lods
inc
loop
push
inc
mov
dec
mov
stc
dec
dec
stos
xor
mov
loopne
arpl
jp
imul
add
mov
jp
sti
xchg
cmpsl
cmp
push
mov
pop
clc
xor
ja
inc
ficompl
lods
push
fdivl
call
loopne
ljmp
lahf
or
js
daa
inc
xor
pushf
imul
push
fmuls
icebp
fbld
gs
rcrl
and
or
inc
jecxz
cld
or
fimull
jle
jecxz
sbb
cmp
mov
mov
xlat
fcomps
dec
int3
jo
subb
jmp
idiv
or
mov
cmp
iret
lock
scas
mov
pop
nop
nop
bound
jge
popw
dec
xor
test
jp
inc
xchg
sub
add
out
mov
stos
or
pop
cmp
mov
mov
pop
push
mov
fcmovbe
scas
jae
sahf
sbb
out
cld
mov
pop
cmp
dec
pop
mov
test
or
call
movsb
dec
outsl
andl
into
sarl
popa
mov
shlb
mov
outsb
fwait
insl
pop
les
mov
jecxz
movsb
adc
mov
inc
pop
jo
push
out
rorl
xchg
cld
jge
cs
cmp
stos
mov
loopne
fistpl
std
cld
mov
ret
jno
hlt
cli
sbb
idivb
in
mov
pop
add
add
push
stc
data16
xchg
gs
stc
xlat
sti
cmp
mov
sbb
lock
xor
add
mov
int
mov
loop
cmc
adc
aam
inc
xor
xchg
xchg
fs
mov
adc
lret
dec
pop
or
jb
test
mov
adc
scas
inc
loope
aam
sbb
xor
sbbb
ja
pop
cs
hlt
and
int3
mov
imul
daa
popf
cli
inc
incl
lret
cmp
rcrb
jo
imul
lods
in
push
daa
negl
rol
mov
push
dec
test
adc
sti
jnp
imul
or
pop
repnz
cs
roll
js
shr
daa
mov
lods
repz
mov
cmp
shll
mov
pop
mov
add
xchg
out
sbb
pop
je
cmp
and
sbbb
or
dec
and
pop
xchg
xchg
fcompl
xlat
shll
sbb
xchg
xor
adc
pop
inc
xchg
xor
fldcw
call
jbe
shl
sbb
jl
fs
nop
dec
add
jns
cmp
jecxz
sbb
clc
mov
rcl
dec
aam
or
inc
out
popa
push
xor
int3
mov
jns
and
sbbb
add
adcl
stos
repnz
scas
sub
dec
loopne
push
out
fwait
push
jne
loope
mov
stc
jbe
cmpsb
inc
dec
sbb
nop
insb
into
fidivrs
mov
imul
cmp
adc
cmc
adc
iret
adc
mov
lds
sbb
ja
jge
and
cmp
pop
sub
adc
repz
scas
aad
dec
out
imul
lret
mov
addl
or
xchg
mov
mov
mov
jg
arpl
adcl
xchg
popa
clc
mov
aaa
call
and
cmpsb
mov
jl
inc
jno
xchg
test
leave
les
inc
mov
pop
insl
sub
inc
fmuls
jo
subb
mov
test
push
pop
arpl
xchg
sub
push
add
add
adc
out
sbb
bswap
aam
xlat
nop
in
lods
pop
mov
xchg
cmpsb
xor
mov
call
insl
ret
outsl
adc
xor
fdiv
dec
mov
mov
jo
and
iret
xchg
mov
sbb
jbe
lret
scas
loope
iret
adc
jne
aad
push
push
mov
sub
cmc
dec
lock
lds
stos
cwtl
sub
fdivrp
dec
xchg
cmp
dec
xlat
mov
jbe
lret
and
pushf
in
ret
push
gs
xlat
cs
fildll
cld
pop
push
mov
or
outsb
cmpsl
xchg
cmp
and
xchg
adc
jbe
mov
adc
ss
sub
cmp
adc
sub
call
arpl
mov
into
cmpl
mov
lret
stos
inc
icebp
xor
mov
fs
enter
jmp
xchg
sahf
incl
cmp
call
or
sbbb
psrlq
and
fdivl
cmp
nop
inc
fidivl
pusha
popa
outsl
loop
xchg
sub
cmp
xchg
xchg
cmp
lcall
jge
push
leave
stc
or
js
sahf
lahf
mov
loope
xor
push
call
repz
and
jnp
push
out
jb
mov
stos
xchg
push
xchg
test
mov
dec
jo
test
shl
jl
lcall
test
mov
aas
xchg
fnstcw
imul
cpuid
xchg
mov
cmp
pushf
loope
rolb
xor
sub
mov
stc
mov
sub
dec
icebp
jnp
ret
pop
call
cmp
mov
xor
mov
add
call
test
sub
mov
ret
imul
dec
movsb
cmp
mov
shl
es
test
add
call
mov
mov
movsl
cmc
cmp
dec
dec
loopne
jns
adc
push
lock
divb
mov
jns
imul
mov
jno
or
pop
add
xor
inc
loop
out
pop
and
cld
hlt
lods
xchg
sub
sbb
daa
aaa
in
addr16
scas
cwtl
push
cmpsb
cmp
inc
fnstcw
out
lcall
scas
call
test
js
in
insl
sbb
cmp
mov
das
push
stos
inc
mov
test
cmp
push
cmc
mov
adc
ljmp
mov
and
ret
mov
and
adc
lea
cs
das
add
stos
inc
jmp
or
mov
or
lock
sahf
mov
cli
xchg
mov
mov
jne,pt
push
cltd
aad
inc
decl
sub
frstor
sar
enter
fs
inc
enter
jbe
push
mov
in
pushl
mov
cmc
mov
int3
pop
jmp
xchg
jp
mov
mov
adc
and
mov
mov
cmp
xorl
rclb
push
sbb
je
inc
sub
fldpi
bnd
pop
enter
int
bound
inc
inc
sbb
or
cs
fcmovnbe
jmp
shl
push
jno
mov
mov
jno
das
ret
ret
fistpll
rorl
out
aaa
stos
lock
pop
inc
mov
ret
addr16
in
dec
adc
push
sbb
pushl
pop
ds
xor
imul
int
cmp
jecxz
jl
je
jle
mov
fsubs
popa
popa
andl
dec
lods
cmp
inc
and
daa
mov
mov
inc
fiaddl
add
xor
xchg
or
or
push
inc
fisttps
cs
lock
int
or
popa
add
movsl
cltd
test
lcall
push
and
fcoms
hlt
jp
js
mulb
adc
push
in
loope
js
or
in
sbb
push
add
add
bound
cmp
jp
pop
stos
cmp
test
xchg
push
cmp
adc
push
fstpt
pop
bound
cwtl
test
jge
addr16
sbb
dec
out
mov
cltd
shrl
add
inc
outsb
stos
clc
in
pop
ret
cmc
inc
movsl
pop
mov
fisttpll
aam
incb
push
imul
or
cmp
in
xchg
cmp
dec
cmp
ja
insb
push
sub
push
test
out
ljmp
mov
movsb
mov
mov
push
sub
stos
jecxz
leave
add
ss
shlb
adc
shll
sbb
xlat
pop
push
shrl
jl
xchg
mov
fwait
call
decl
pop
xlat
pop
xchg
icebp
add
add
lret
bound
shr
add
into
push
daa
push
push
loopne
dec
lret
sbb
into
adc
push
iret
fildl
add
or
rorb
adc
cli
jle
mov
pop
mov
fistpll
shll
pavgb
add
popf
jp
adc
int
testb
and
inc
dec
adc
mov
mov
or
jmp
push
jb
stos
dec
pop
fadd
xlat
in
pop
or
fdivl
roll
scas
sbb
in
xchg
pop
push
push
in
xchg
dec
movsl
add
fbstp
cmpsb
sub
mov
sbb
cmpsb
cmp
mov
mov
sbb
dec
cmp
add
add
mov
sub
out
lods
add
add
lds
mov
fimuls
dec
cmp
mov
jp
inc
fsubrs
xor
dec
mov
mov
addr16
push
fcoms
idivb
cld
mov
lcall
xlat
mov
mov
aaa
stos
mov
wrmsr
or
into
js
mov
inc
or
push
pop
jno
pushf
lods
lods
xchg
push
pop
lods
mov
cmp
mov
inc
testl
jp
dec
cmpsl
mov
std
int
xor
stos
cmp
rcr
jae
cmp
xchg
fdivrs
pop
repnz
adc
insl
cmpsl
sahf
repz
lock
inc
stc
or
insb
mov
dec
xor
ja
movl
cltd
cmpsl
dec
rcrb
xchg
mov
aam
push
out
xorb
mov
loope
es
inc
cmpl
xor
data16
ficompl
fbstp
in
das
out
sub
and
sbb
jnp
xchg
jmp
xchg
les
inc
bound
fsubl
lods
mov
jle
jg
and
gs
lret
or
jne
addr16
leave
xlat
cmp
and
divb
mov
xlat
mov
cmp
or
gs
xchg
invd
stos
jl
cmp
sub
sti
inc
jge
pop
dec
test
xchg
jg
adc
sub
out
mov
push
dec
stos
xor
pop
insb
xchg
arpl
push
mov
jp
sub
cmc
adcb
ss
movsl
icebp
loopne
test
inc
rol
in
jecxz
lcall
daa
insl
cld
mov
int3
outsl
mov
sbb
sbb
jnp
in
gs
fstpl
and
pop
jbe
xchg
lret
out
xchg
adc
sarb
jns
and
and
aam
add
xchg
aaa
xchg
cmp
cli
jle
and
daa
mov
sub
push
fs
cmp
mov
out
leave
mov
fistps
xor
pop
out
leave
das
cmp
aaa
pop
mov
and
mov
adc
mov
jmp
lret
dec
ret
mov
aad
sbbl
addr16
fcoml
cwtl
daa
lods
sub
pop
xchg
les
adc
add
rclb
call
push
jo
jae
fistps
js
add
push
xor
orb
xchg
out
scas
int3
jp
sbb
adc
lock
std
lahf
sbbl
or
pusha
sbb
iret
int3
push
cmpsb
lock
push
mov
adc
push
insl
loope
push
pop
mov
imul
je
jmp
jecxz
mov
add
fdivrl
mov
es
inc
pop
cmpsl
dec
jbe
dec
int
cmp
enter
mov
je
adc
fnstenv
jb
lret
sbb
ds
cmc
je
cwtl
stos
cwtl
and
imul
mov
inc
pop
xchg
pop
add
pop
fisubs
cmpl
shrl
sub
into
sub
inc
xlat
mov
pop
in
ja
aaa
dec
cmp
popa
aad
shl
xor
adc
push
cmp
add
pusha
sbbl
mov
popa
loop
stos
or
xor
lds
fisttpl
inc
dec
adc
cmp
imulb
xchg
mov
push
sub
jae
aad
push
mov
xor
xor
loopne
pop
sbb
in
xor
loopne
daa
inc
loope
jle
dec
test
lock
fstpl
mov
and
sbbl
or
adc
loope
loopne
xor
in
nop
mov
lret
arpl
pop
popa
outsb
push
fwait
insb
pop
inc
xchg
mov
xor
sahf
sub
inc
cmc
sub
sub
mov
jl
icebp
xchg
dec
jnp
xor
nop
hlt
fwait
mov
jge
test
inc
and
push
inc
imul
xor
fistpl
into
pop
out
mov
pop
testb
fisubrs
bound
adc
outsb
add
ret
cmpb
movsb
lods
add
jns
xchg
imul
pop
sbb
inc
xlat
or
sbb
cmpsl
pop
mov
lea
in
imul
jno
xchg
rorl
es
fcmovb
pop
or
xchg
in
movsl
in
test
mov
out
lret
pop
and
filds
adc
addr16
add
pushf
imul
subl
or
mov
popf
or
jge
mov
xchg
inc
xlat
ret
int
bound
test
lret
shrl
inc
ds
aad
jno
dec
jecxz
adc
push
enter
dec
jo
xor
insb
lds
inc
mov
cld
in
aaa
lret
push
sahf
adc
dec
pushl
and
stos
push
sahf
xchg
pop
call
dec
mov
int3
or
pop
sbb
lock
mov
adc
jge
pusha
adc
test
push
aaa
and
lods
repnz
icebp
mov
push
jae
xorb
rcll
movsb
xchg
test
adc
lock
jbe
aad
ljmp
std
mov
cmpsl
lret
inc
push
mov
mov
adc
addb
xchg
pop
fwait
mov
insl
call
cmp
sbb
shr
pop
into
xlat
push
loope
pop
cmp
rcr
pop
shlb
pop
hlt
xor
jne
jnp
mov
xchg
mov
repz
mov
mov
push
fs
hlt
add
cmp
test
push
in
sbb
xor
jmp
jae
out
fsubp
aaa
rorb
mov
js
popf
cmpsl
or
and
inc
loopne
and
lock
sarl
mov
cmpsl
ds
les
aas
jg
scas
inc
mov
sbb
mov
pusha
lods
mov
clc
shrl
mov
pop
call
insl
add
inc
mov
test
dec
std
fidivs
scas
sub
sbb
aad
sahf
sbb
lea
mov
push
push
hlt
test
push
out
xchg
cmc
push
jmp
dec
pop
rol
pop
repz
inc
xlat
jbe
fldl2t
or
inc
mov
fisttpll
sbb
jns
dec
and
repz
xchg
test
pop
jo
jns
repz
insl
into
xor
ds
test
cmc
cmpsl
xor
sbb
dec
out
inc
mov
dec
cwtl
sbb
mov
xchg
gs
xchg
mov
mov
or
loop
rcrl
sub
insl
jge
mov
mov
bound
push
sahf
mov
xchg
mov
stc
sahf
mov
imul
addr16
pop
xor
dec
sbb
vpmulhw
aad
int
das
cmp
fidivl
ss
push
sbb
push
xchg
and
pop
mov
dec
cmpsb
push
in
or
rcr
or
or
mov
fildll
cltd
cwtl
inc
dec
mov
sbb
dec
aad
xchg
dec
cmp
enter
out
sub
popf
fcoms
ret
aaa
scas
mov
push
inc
jge
aaa
ljmp
cmp
push
add
push
mov
in
push
call
mov
movsl
js
fwait
cmc
js
sbb
lahf
gs
std
mul
xchg
mov
xchg
push
inc
hlt
outsl
sarb
jmp
or
push
int3
out
jns
loop
jns
or
pushf
fwait
pop
or
cmp
jp
dec
lret
repz
imul
mov
add
out
daa
in
xchg
sbb
in
pop
rol
sub
imul
shrb
mov
hlt
iret
cli
call
xchg
pop
pusha
pop
lock
sbb
or
add
mov
mov
dec
loope
push
fbstp
fidivs
sti
push
ja
ret
inc
outsb
pop
and
arpl
outsb
cwtl
jmp
push
daa
or
cmp
cli
rorb
xchg
ret
lret
sub
cld
scas
dec
cltd
push
cmp
cmp
mov
xchg
insl
out
sbb
mov
push
add
nop
fdivrs
mov
outsb
xlat
jl
or
sub
shrb
jne
divl
pop
outsb
fstpl
neg
fcoms
push
js
int3
arpl
insl
push
xor
mov
ja
mov
or
fstl
lret
dec
and
inc
push
add
jno
jmp
dec
or
mov
outsb
in
rol
push
test
lcall
adc
addb
jp
sub
pop
cmp
out
xor
xchg
adc
fistps
dec
inc
inc
sbb
sbb
xor
fildl
shll
mov
lods
mov
adc
jno
in
loopne
fadds
or
sub
iret
cmpsb
mov
dec
xor
hlt
jae
fdivrl
das
fildll
push
push
or
sub
outsl
mov
mov
mov
vpmacssww
pop
or
push
xor
stos
cld
sub
cmpsb
fistl
cltd
les
gs
cltd
cmpsl
into
inc
jne
push
imul
fistl
in
int3
dec
push
xor
fucomp
xchg
insl
test
adc
push
clc
add
sub
adc
das
jmp
pusha
jnp
pop
xor
jmp
jmp
fistps
movsb
nopl
bound
test
add
jne
aad
jno
ljmp
sbbb
push
aad
out
cwtl
cli
add
mov
add
cmp
imul
or
mov
dec
scas
je
mov
cli
hlt
push
sub
push
and
pop
aas
xor
imul
push
out
pop
push
sub
dec
fcomip
enter
jmp
test
pushl
xchg
xor
dec
pop
test
xchg
push
mov
jae
jbe
js
push
lods
add
iret
jmp
mov
rorl
mov
movsl
push
inc
push
cli
mov
sbb
pop
add
sbb
movsb
call
data16
pop
dec
imul
mov
cmpsb
loop
scas
cmp
hlt
push
mov
rcll
mov
mov
mov
test
scas
call
adc
mov
lcall
repnz
outsb
sub
push
mov
jnp
cld
lods
fldt
fistps
jae
sbb
into
maxps
lds
xchg
push
daa
mov
jp
jne
shlb
lret
pusha
popa
xchg
lods
mov
fisubrs
adc
imul
imul
sbb
inc
scas
inc
outsl
aad
jl
xchg
sub
push
call
leave
mov
sti
test
dec
pop
or
pop
scas
dec
jmp
mov
mov
faddp
mov
jno
push
lret
sbb
mov
xchg
fcmovne
hlt
jns
push
dec
mov
dec
add
lds
and
xor
add
cmp
enter
cmc
movb
imul
jl
sbb
xor
inc
inc
daa
shlb
dec
sub
hlt
add
insb
inc
pushf
inc
cmp
stc
sarb
popa
fmul
sub
cs
dec
dec
es
xor
jae
out
aaa
stc
cwtl
mov
roll
sahf
gs
outsb
rcrl
aad
test
cmp
cmp
rolb
inc
lret
in
imul
mov
ds
mov
pop
shll
pop
jp
sub
inc
ret
lods
jmp
xchg
and
xlat
rcl
int3
sahf
nop
in
rorl
test
dec
call
xchg
pop
mov
and
shlb
lea
aas
push
xor
jge
lds
mov
sub
sbb
sbb
repnz
test
into
push
fnstcw
fbld
mov
test
sbb
lods
cmp
inc
fidivrs
xor
push
gs
sbb
repnz
test
inc
mov
repz
imull
xorb
cmpsb
pop
adcl
dec
movsb
cmc
jmp
int3
mov
pop
enter
sar
jp
sbb
iret
cmp
out
test
cmpsl
out
push
shr
aas
dec
jne
out
push
dec
lahf
subb
rcl
repnz
adc
mov
push
sbb
and
inc
xchg
xor
sahf
fnstenv
movsl
cmp
jle
out
es
ret
dec
nop
les
mov
adc
inc
movsb
xor
inc
aaa
push
mov
lahf
xor
mov
mov
jle
xchg
daa
or
jmp
jecxz
sub
push
inc
inc
enter
mov
add
xor
shll
mov
dec
inc
loopne
loop
enter
push
int3
jl
xor
dec
in
pop
ret
sbb
mov
std
out
xchg
sub
enter
mov
dec
loop
stc
mov
ret
js
cmc
xchg
in
test
cwtl
xchg
cmp
outsl
mov
cmpb
out
jnp
dec
push
and
test
sbbb
and
js
lret
xchg
int3
push
jae
sub
ror
mov
xchg
out
cmpsl
push
and
sbb
ljmp
loop
adc
adc
frstor
mov
push
pop
mov
push
dec
ja
jle
add
out
dec
push
adc
dec
in
jb
jnp
inc
mov
cmpsb
loope
in
cmp
out
ror
xchg
outsl
sub
enter
out
jmp
adc
pusha
cmp
insb
subl
sub
out
sub
adc
ss
je
sbb
rclb
add
push
cmove
mov
cmpsl
sti
addl
pop
dec
shl
add
inc
and
out
cmp
aad
flds
pop
mov
roll
add
jne
repnz
lock
stc
push
push
std
repz
jmp
into
jno,pt
into
inc
push
int
clc
mov
fistl
sub
inc
jp
or
xchg
sub
mov
gs
add
adc
sbb
pop
and
movsl
cmp
dec
test
int3
push
mov
icebp
rcll
mov
adc
mov
shlb
sbb
xor
incl
mov
mov
pop
xor
ljmp
lret
push
in
inc
out
xchg
xchg
and
mov
insb
sbb
pop
xchg
aaa
adc
imul
shlb
imul
jb
std
je
adc
aam
and
sub
cmp
xor
repz
loope
cmp
mov
jnp
dec
mov
hlt
mov
shll
repz
sbb
and
push
or
pop
push
xchg
outsl
iret
mul
xchg
dec
das
out
inc
fsubrs
ffreep
jno
jle
dec
xchg
mov
xchg
or
cwtl
das
or
int3
ficomps
jns
pop
je
mov
xor
push
test
dec
pop
daa
xlat
mov
test
xor
and
sbb
lcall
xchg
and
xchg
jl
leave
pusha
sub
out
jp
cltd
dec
out
mov
xor
int3
jo
pop
add
popf
and
mov
xorb
in
push
out
or
push
in
pop
test
es
loopne
ja
mov
push
mov
jmp
xor
dec
mov
adc
mov
out
inc
out
das
mov
sub
inc
pop
in
adc
add
xlat
or
std
es
sahf
in
adc
push
pushf
fnsave
scas
cs
mov
shrl
and
lock
pusha
cmp
shrb
push
pop
push
or
imul
loop
rcll
mov
dec
out
push
nop
push
leave
sahf
sub
aam
xchg
inc
aas
push
iret
mov
push
notb
xor
xor
cmp
push
sub
mov
lods
push
and
les
scas
add
aaa
mov
test
mov
pop
fs
ja
notl
mov
into
or
or
out
insb
mov
out
xor
insl
je
or
stc
inc
xchg
mov
lret
out
xchg
popa
shl
lret
pop
sub
jecxz
popa
lcall
int3
jno
shrl
mov
dec
cli
pop
push
test
sbb
pop
outsb
cmp
mov
in
int3
les
mov
mov
in
cmpsl
fisubrs
lods
jmp
mov
sub
bound
xchg
dec
pop
cs
insb
clc
shlb
ret
or
repz
sbb
jecxz
pop
stos
pop
orl
sbb
test
mov
das
mov
xchg
mov
mov
sti
push
inc
push
xchg
popf
sub
insl
fcompl
hlt
push
clc
les
sub
addr16
js
or
bound
jmp
pop
sub
enter
push
adc
fisttpl
push
push
orl
cmpsl
pop
dec
xchg
pop
lods
jae
push
test
popa
and
or
add
stc
dec
aad
mov
repnz
push
in
cmp
out
sub
push
insl
xchg
pop
push
push
dec
mov
repnz
insb
mov
add
dec
and
sbb
clc
adc
mov
xchg
loopne
aad
jmp
sbb
test
adc
nop
sub
lds
and
jl
jno
adc
adcb
fsubrp
pop
lret
fcomps
mov
mov
fdivrs
movsb
das
jo
ds
dec
xlat
in
popf
lcall
fwait
outsb
stos
dec
outsb
int
xchg
push
je
mov
add
aaa
xor
out
xor
mov
int
or
add
lahf
xor
jb
cmc
rol
sarl
adc
dec
jo
jns
xor
cld
fisubl
out
call
lods
jg
insb
pop
cmp
and
mov
lods
dec
ljmp
jne
push
arpl
mov
sarb
inc
cmc
mov
or
push
sbb
mov
mov
push
in
adc
jae
adc
sbb
sub
dec
cmp
mov
mov
xchg
add
insl
in
fcomps
iret
sbb
mov
or
lea
popf
xor
stos
adc
sbb
ret
xlat
add
daa
mov
add
aam
mov
stos
mov
cmpsl
cmovp
std
jecxz
rorb
and
mov
inc
sub
out
rcll
mov
mov
outsl
push
mov
ret
push
enter
mov
in
daa
mov
jmp
jnp
adc
cltd
imul
sahf
xchg
mov
sub
xchg
sbb
mov
test
popf
in
das
add
sbb
cmp
cmc
dec
das
fistl
and
pop
int3
xorl
xor
jnp
adc
mov
pusha
pop
imul
or
lock
ja
imul
insl
dec
fs
test
sub
adc
inc
add
dec
jmp
and
out
dec
lahf
lock
sub
jl
cmp
and
lock
leave
movsb
clc
ljmp
sbb
push
mov
mov
cwtl
xor
adc
sbbl
insb
subb
xor
mov
cmp
sbb
sbb
cmp
daa
lcall
jle
pushf
xor
sbb
dec
fbstp
out
inc
out
pop
aad
jp
cmp
out
push
inc
popa
loopne
cltd
insl
out
lods
mov
and
lret
test
int
jnp
lcall
push
sub
shlb
ret
mov
jbe
push
in
pop
cld
adc
gs
jg
xor
add
adc
cmp
popf
xor
in
adcl
test
stos
movsb
fwait
int
int
inc
xlat
push
outsb
stos
andl
dec
sahf
hlt
sbb
sarl
std
or
or
in
bound
add
mov
mov
sub
xchg
dec
mov
mov
lcall
fs
dec
fs
gs
std
adc
outsl
pop
fidivrl
dec
test
fnstsw
mov
int
sub
jbe
mov
jnp
cld
lods
pop
shrb
int
lahf
aas
shrb
in
mov
ja
cmp
mov
mov
sbb
pop
test
jmp
aaa
mov
adc
jnp
andl
mov
cld
sub
divb
dec
and
pop
dec
sti
or
int3
mov
lret
cmp
push
jno
test
xor
lods
pop
and
sub
adc
loopne
sahf
lcall
pop
test
add
stos
add
pop
jg
mov
mov
fwait
push
bound
xor
pop
xchg
sbb
xchg
and
pop
fisubrl
xor
cmc
mov
lds
rclb
data16
scas
inc
filds
jge
sub
mov
nop
imul
icebp
lods
sbb
sub
pushl
outsl
es
and
idivl
clc
and
das
xorl
mov
xlat
lods
das
mov
xor
subl
cmpsl
or
or
aaa
mov
movb
cld
push
out
scas
inc
in
push
dec
jecxz
loop
or
xor
outsl
or
movsl
and
ficomps
cli
mov
loope
fadds
out
sub
in
xchg
inc
outsb
sub
mov
mov
fists
nop
or
imul
dec
mov
ret
mov
push
in
cmp
add
dec
pop
mov
mov
lcall
and
aad
jns
pop
test
pop
aaa
xor
fistpl
inc
jecxz
jp
scas
mov
icebp
push
sub
stos
inc
dec
or
call
insl
enter
pop
mov
ja
fisubs
frstor
adc
or
push
insb
test
mov
fdivl
fnstsw
lret
out
mov
cs
mov
je
sub
pop
sub
add
dec
loop
xor
sbb
lea
mov
pop
inc
cmp
rclb
mov
pop
movsl
mov
adc
cmp
lods
stc
jbe
and
scas
ljmp
jl
pop
sbb
mov
push
pop
ficomps
jle
mov
jae
cld
cld
cmp
push
test
addl
inc
dec
rcrb
sbb
in
loop
jge
xchg
mov
stos
mov
push
mov
add
add
mov
push
jne
mov
mov
jp
inc
aam
jnp
add
adc
pop
or
sti
xchg
pop
aad
xchg
cmp
xor
xchg
cmpsb
mov
jle
or
stc
in
add
das
cmp
pusha
gs
sub
pushf
ror
inc
fwait
mov
adc
or
vsubpd
call
test
mov
xchg
push
lcall
nop
ss
mov
inc
inc
aam
fwait
ja
mov
les
movsb
lods
jbe
out
outsb
push
sbb
hlt
push
jbe
jg
xlat
xchg
sbb
dec
clc
popf
subb
enter
push
inc
shll
mov
insl
mov
les
cmp
cmpsb
neg
lahf
das
outsb
cld
js
mov
hlt
push
int
inc
ffree
cmpsb
loopne
xlat
loop
ret
inc
sbb
addr16
je
dec
out
sar
js
xor
gs
xchg
jg
out
mov
lods
mov
or
dec
pop
inc
add
jecxz
dec
fidivrs
stos
popa
in
adcb
xor
mov
mov
pop
push
mulb
cmc
push
inc
ret
mov
sbb
adc
sbb
add
cli
notb
xor
or
sub
rcll
push
and
push
jp
pop
mov
iret
mov
pop
pop
repnz
jno
out
pop
lods
cwtl
mov
aam
xor
xchg
lcall
add
add
je
inc
pop
mov
xor
lods
or
mov
push
inc
test
jnp
pop
pop
repnz
xchg
sti
xchg
test
push
movsl
fdivr
addb
jl
cmp
fisttps
and
inc
xchg
in
cld
xchg
xor
pusha
sub
xchg
jge
lds
sbb
fucomp
decl
out
enter
mov
popf
lret
imul
mov
xor
and
adc
or
mov
lret
mov
imul
cli
jnp
inc
movsl
fcoms
or
mov
enter
add
or
hlt
insl
lods
push
outsl
or
pop
rcll
dec
fbld
fnstcw
cmp
insl
push
add
jl
das
cmp
xchg
dec
stos
push
jg
xorl
in
and
fiaddl
arpl
and
or
xorl
iret
arpl
mov
and
push
push
xor
fdivs
jo
aas
push
std
pop
das
cmp
inc
scas
ds
mov
mov
leave
sub
cli
add
test
fwait
inc
rorl
jle
outsb
push
dec
pushf
mov
pushf
icebp
arpl
push
push
xor
sbb
jl
ss
punpckhdq
pop
push
mov
mov
jbe
icebp
lock
xchg
and
aaa
into
add
pop
sub
mov
cmp
inc
rol
lock
or
cs
lcall
sbb
jo
mov
push
mov
sub
ffreep
fnstsw
ja
cmp
subl
pop
inc
icebp
movsl
sub
ret
mov
sbb
in
cmp
ret
loopne
outsb
ljmp
std
movsl
xchg
pop
add
lods
out
insl
pop
cmp
test
movl
jle
adc
xchg
aaa
int
out
lods
das
push
idivl
scas
inc
sub
mov
xchg
shrb
enter
call
push
mov
xchg
stos
mov
sbb
jecxz
mov
insb
adc
subl
sub
jle
mov
add
sti
fsubl
nop
jbe
shr
cmp
rdmsr
mov
call
mov
lea
cmp
inc
adc
sub
push
fwait
mov
lcall
push
jb
lahf
out
aas
dec
loop
push
in
xor
es
pusha
cmpsl
jge
flds
hlt
mov
test
dec
mov
adc
aam
in
sbb
fistpll
sbb
stc
inc
push
scas
cmp
mov
xchg
push
xlat
pusha
repz
int3
arpl
out
negl
hlt
xchg
jno
jge
movsb
aas
and
and
jne
cltd
and
mov
movsb
lds
sbb
or
add
jno
adc
dec
jns
popa
xor
push
inc
push
call
sub
xor
cmp
test
push
xor
inc
and
icebp
xchg
decl
sbb
clc
lea
add
call
imul
das
mov
mov
add
hlt
jl
xlat
jo
mov
testb
shll
out
xchg
push
popf
add
into
addr16
mov
cmp
lods
or
int3
arpl
pop
lock
call
lods
in
push
xchg
out
leave
inc
call
xchg
cld
push
jne
enter
lret
shrl
dec
jl
cmp
pop
loop
mov
mov
rol
cld
sbb
or
cmp
add
les
and
jns
stc
mov
xchg
xchg
jge
lods
clc
scas
rolb
bound
mov
push
adcl
or
xchg
sbb
and
pushf
adcb
add
arpl
cli
sub
rcr
mov
popf
pop
icebp
or
stos
sub
dec
ss
test
jb
hlt
cmp
push
cmp
xor
loopne
mov
cmp
lahf
into
mov
xor
jae
pop
xchg
insb
inc
stos
xchg
loope
jo
popl
lahf
mov
mov
into
popf
mov
push
ljmp
mov
pop
cmp
push
lcall
and
popw
and
aaa
iret
fisttpl
dec
enter
pop
fidivl
add
addl
mov
in
xor
jg
sti
sub
jns
or
fidivrl
sbbb
addr16
jo
outsl
mov
pop
xor
roll
lret
pop
dec
inc
or
inc
or
add
es
int3
cmpsb
pop
xchg
stos
jns
insl
lods
ret
outsb
inc
hlt
mov
cmp
daa
push
pop
jns
adc
into
ret
test
xchg
cs
ret
cli
fs
sub
ret
inc
data16
subb
cmp
not
mov
stos
dec
adc
mov
jo
jp
jbe
xorl
jle
xchg
popf
push
pop
add
jns
jl
or
es
stos
cs
lock
mov
add
xchg
enter
sbb
call
mov
add
out
fcompl
add
xchg
shlb
add
lods
inc
jp
adc
and
ds
mov
xchg
xchg
test
push
insw
fsubs
in
push
mov
add
jg
movsb
mov
aas
mov
mov
inc
inc
add
push
inc
nop
xchg
pop
add
mov
jns
jnp
hlt
and
mov
push
adc
xchg
shll
sub
jp
jp
jp
js
mov
xlat
outsb
push
or
dec
test
shll
cmpsl
jno
cmp
ljmp
fwait
popl
adc
xchg
mov
mov
das
xchg
push
ljmp
fs
pop
pop
adc
xchg
dec
fdiv
jbe
pushf
xor
stos
sahf
lcall
ret
push
xchg
mov
mov
xchg
sub
mov
outsb
mov
cld
clc
mov
cli
xchg
mov
in
aam
push
fstl
xlat
iret
cmpsb
push
stc
xlat
xchg
push
imul
inc
or
jmp
mov
sarb
fimull
sbb
xchg
shl
adc
jl
cwtl
fsts
loop
loopne
adc
lods
nop
inc
mov
cmovge
addr16
cmp
ds
iret
pop
adc
imul
incb
mov
jmp
mov
adc
mov
mov
addr16
cmp
add
pop
loopne
lea
shrl
clc
ret
push
jg
push
pop
ss
fs
cltd
pop
inc
adc
enter
mov
push
addr16
movsb
mov
jne
inc
push
lret
int3
inc
jmp
jae
jo
addb
or
fs
iret
lcall
push
and
addl
mov
dec
jno
fmul
jns
bound
call
dec
sbb
mov
insl
push
fistps
sbb
ljmp
popa
xor
jnp
ret
pop
mov
cltd
push
loope
cmpsb
mov
cmc
cmp
arpl
adc
cli
inc
cmp
aad
cld
add
mov
mov
orps
xchg
gs
in
scas
mov
inc
jmp
sbb
pop
mov
xor
movsb
fwait
mov
out
mov
xchg
jbe
adc
int3
test
andb
sti
lds
cmc
jecxz
flds
jmp
gs
iret
adc
pop
hlt
stos
inc
and
inc
jnp
je
mov
shrb
cmc
sub
push
xor
dec
pop
inc
jo
dec
jl
outsb
sub
sbb
into
mov
add
fidivrs
xchg
ljmp
mov
or
sbb
shrb
or
xor
repnz
mov
cmp
jne
sub
xor
ljmp
xchg
hlt
sbb
ret
push
sbb
inc
mov
pop
push
jle
ret
ficoms
push
mov
dec
pop
addb
inc
fdivl
pop
cmc
xor
mov
leave
add
roll
daa
cs
std
lods
or
pop
imulb
int
sub
mov
into
jbe
fbld
xor
push
pop
mov
xor
dec
jmp
mov
inc
das
daa
pushf
cs
enter
outsb
mov
mov
dec
dec
pop
cmc
xor
bound
fwait
daa
test
je
mov
scas
inc
fsub
dec
fsub
jno
jb
pop
pusha
idivl
inc
mov
dec
roll
mov
pop
xchg
icebp
sub
jp
inc
bnd
es
inc
gs
push
jmp
inc
cmp
stos
push
or
dec
pop
movsb
fnstenv
sub
scas
mov
mov
mov
nop
adc
dec
jo
jnp
ret
andb
pop
test
xor
arpl
dec
loopne
int
jge
jns
cmp
dec
and
push
int
movsl
pop
inc
shll
lret
mov
in
test
out
pop
and
xchg
mov
pop
icebp
pop
add
pusha
jne
addr16
sub
mov
out
xor
pop
test
adc
stc
mov
pop
and
mov
cmp
push
adc
mov
int
das
adc
in
push
sbbl
js
sbb
push
xchg
dec
outsl
or
xor
icebp
cmp
cld
push
sub
inc
cwtl
clc
fxch
addr16
fcompl
mov
enter
fisubrl
push
neg
pop
dec
jno
out
jne
loopne
in
mov
pop
mov
or
mov
pusha
pop
ret
pop
push
orl
cmc
addb
test
dec
insb
enter
rol
in
pop
fs
sbb
jo
mov
ljmp
int3
arpl
push
lods
jmp
inc
out
sub
jmp
push
rclb
test
into
test
jnp
mov
pusha
sub
cmp
inc
loopne
lret
mov
cli
pop
shll
pop
movsl
jmp
sahf
xchg
jnp
jmp
cmc
pop
insl
xor
xlat
push
dec
in
mov
repz
addr16
mov
psllq
and
std
xchg
cmp
dec
dec
out
pop
push
push
add
sbb
lcall
jnp
shrb
xchg
sti
mov
xchg
mov
jg
mov
jmp
es
dec
jle
sbbl
xchg
js
dec
cmpsl
js
fistps
daa
lret
insl
jmp
add
mov
jno
mov
or
dec
and
sub
stos
cmp
int3
lret
mov
pop
jecxz
xor
sahf
xor
or
test
rclb
adc
xchg
mulb
dec
sub
dec
xchg
sbb
fistps
fs
ljmp
jp
inc
mov
cmpsb
stos
inc
push
push
enter
or
scas
cmp
ljmp
out
mov
ret
add
jl
or
pop
sahf
push
jb
and
fistpl
es
or
cmp
scas
adc
call
subb
and
mov
sbb
jge
jo
cmp
push
mov
pop
rcll
ja
cld
lods
push
jb
subl
xchg
dec
pop
out
fldenv
pop
lahf
loopne
jle
loope
sub
xor
fiaddl
xchg
test
fistl
xchg
insb
test
jno
mov
call
add
movsb
dec
jno
cmp
sbb
out
dec
adc
jne
fs
loopne
call
arpl
mov
mul
pop
push
ret
sahf
cmpsb
les
stc
inc
out
mov
insl
xchg
add
mov
push
xchg
sbb
dec
stc
add
ret
inc
mov
lahf
add
ror
fs
mov
jmp
sbb
sbb
mov
jmp
cmp
push
or
adc
pop
mov
loop
fistpll
push
out
std
xor
das
mov
mov
dec
or
idivl
insl
jl
xchg
mov
loop
sub
or
lods
mov
xchg
jo
fsubrs
xchg
push
inc
es
mov
lock
rcll
pusha
dec
sahf
sbb
test
and
push
jb
jne
mov
addr16
int3
inc
dec
repz
iret
and
aam
sub
mov
add
jb
lcall
adc
or
in
rcll
add
imul
testb
adc
sbb
fcomps
jmp
xchg
mov
mov
pop
cmovle
mov
mov
shl
jge
push
pop
insl
dec
jecxz
test
scas
out
movsb
push
jmp
and
xor
xchg
shlb
mov
data16
push
xchg
test
sub
test
xchg
sbbl
jns
sbb
jno
xchg
mov
clc
and
nop
ds
scas
push
sbbl
jbe
jp
jl
xchg
cmp
jbe
roll
inc
mov
stos
arpl
push
repnz
cmp
inc
mov
jae
jmp
mov
sub
ljmp
iret
insl
pop
adc
sbbb
pop
push
push
in
hlt
jae
in
sbb
inc
sub
push
test
fistpl
mov
mov
fnstenv
icebp
and
or
insl
aaa
add
hlt
movsl
pop
push
shlb
push
out
scas
stos
dec
and
pop
scas
inc
inc
jns
int
pop
or
sarl
mov
push
dec
dec
cs
cmp
popf
mov
xchg
xor
mov
ljmp
ljmp
add
rcrl
mulb
adc
ds
and
in
pop
fs
decb
rorl
out
scas
lahf
add
push
push
cmpsb
sahf
pop
push
adc
sub
cmpsb
std
sti
enter
sbb
mov
aas
jmp
jno
mov
dec
or
ss
cmp
test
adc
and
sbb
pop
dec
inc
mov
adc
repnz
cmp
xchg
sahf
lea
data16
movsl
cmp
xchg
enter
js
xor
cs
lret
out
adc
roll
mov
xor
adc
inc
popa
ret
ss
fwait
pusha
clc
jecxz
mov
cmpsl
lods
outsb
add
jnp
or
dec
inc
call
int3
lret
pop
mov
pop
aas
hlt
lahf
add
ljmp
add
test
je
cmp
scas
inc
mov
push
xchg
sti
push
in
push
dec
pop
out
mov
or
mov
addr16
mov
testl
lds
out
out
push
stos
mov
bound
stos
out
fistpl
movsl
jne
jno
in
jns
pop
cmp
in
in
cmp
lods
les
fstpt
jbe
or
or
mov
mov
outsb
dec
sbb
scas
enter
inc
cmp
std
shll
and
test
movsb
int3
add
inc
dec
mov
jp
lret
fdivrs
iret
pop
mov
aad
hlt
hlt
mov
in
mov
imul
fsts
mov
xlat
cmp
pop
pop
iret
in
mov
dec
and
push
test
call
sbb
push
sbbb
xchg
jne
mov
cmp
lcall
lds
icebp
mov
sbb
nopl
rorl
dec
loope
sub
xlat
dec
int
mov
enter
das
fsubr
movsl
pop
popa
inc
int
xchg
testb
pmaddwd
scas
sub
fldenv
pushf
mov
adc
push
insb
lds
aas
dec
pop
mov
cmp
push
push
ss
das
andb
sar
xchg
stc
in
lret
sbb
inc
jge
iret
push
pop
or
loop,pn
xchg
dec
in
jmp
pop
lahf
ss
test
outsl
je
inc
sbb
dec
jne
jge
pop
test
sbb
dec
sub
xor
sub
ds
int
inc
xor
adc
int3
lea
test
dec
jg
pop
pop
lret
sar
loop
adc
jb
popf
into
gs
push
in
xchg
and
testl
mov
ret
push
icebp
mov
sbb
sub
pop
fwait
xor
pop
inc
inc
xor
mov
in
xor
stos
push
mov
cmp
ja
fistl
sub
scas
add
mov
jae
inc
mov
ds
addr16
dec
inc
test
arpl
push
mov
mov
sub
std
xor
out
push
fld
mov
into
mov
fcmove
repnz
push
stc
testb
xchg
xor
inc
flds
fxch
mov
dec
pop
fs
imul
pop
and
sub
or
movsl
inc
cmp
cmp
jnp
push
dec
push
loope
add
lods
adc
xchg
inc
into
inc
jmp
cltd
les
aam
test
fs
daa
popf
outsl
movsl
inc
inc
sub
cmp
call
aam
mov
xor
dec
shl
ja
adc
xchg
jbe
cwtl
rorb
cld
adc
shrb
andl
or
cmp
mov
sbb
gs
xor
xor
pusha
sbb
call
xchg
test
aaa
mov
ss
lret
pop
test
das
mov
test
shlb
out
pop
scas
lds
pop
pushf
cli
insl
mov
mov
mov
mov
inc
inc
fnstenv
lods
js
rcr
jmp
jno
sub
stos
sbb
outsb
push
inc
dec
dec
out
pop
fcmovbe
int
cltd
in
dec
das
adc
test
mov
sbb
ss
push
add
mov
mov
arpl
dec
out
xor
mov
loop
cmpsl
dec
outsb
dec
scas
das
mov
push
push
cmc
mov
sub
sbbl
xchg
ret
add
lods
and
add
xchg
xchg
fnclex
cmpsl
je
cld
movsl
shl
lock
jp
pushfw
insl
or
pop
loop
xchg
add
xor
pusha
call
or
pop
test
jb
mov
das
into
pop
dec
pop
call
hlt
cltd
es
dec
repnz
adc
cmpsb
lahf
out
jnp
adc
jg
dec
sbb
in
in
dec
dec
inc
in
in
and
rclb
inc
loopne
sub
jle
js
push
cwtl
mov
pushf
popf
lds
ja
jns
shl
cwtl
cmp
cltd
mov
mov
lahf
mov
pop
dec
das
lret
rcrb
das
bound
clc
sub
in
push
mov
ss
sbb
adc
pop
mov
mov
xchg
hlt
xchg
mov
insl
into
xor
ror
inc
push
push
lods
fistpl
cwtl
lds
mov
jb
xor
test
and
pop
repz
dec
lods
inc
jg
xor
jl
push
mov
mov
inc
fldl2t
adc
push
mov
insl
xchg
les
cltd
add
xor
sti
popa
push
into
xor
mov
dec
shlb
pop
lock
sub
xor
push
jno
or
sbb
imul
int3
fs
jno
mov
pop
cmc
pop
aad
inc
cmp
pop
add
cmp
sahf
std
xchg
shr
or
push
ljmp
or
pop
js
inc
add
cwtl
pusha
fcompl
lret
mov
lods
imul
mov
xor
jbe
stos
leave
or
clc
pop
xchg
hlt
dec
pop
loopne
roll
mov
sti
jmp
jle
mov
push
jge
xchg
loopne
in
mov
lret
xor
ss
stos
repnz
fwait
pop
jl
sbbb
mov
icebp
scas
fdivp
adc
clc
dec
jecxz
cltd
fdivrp
inc
shrl
rol
jl
clc
repnz
mov
rol
pop
cwtl
mov
addl
lock
pop
jbe
mov
sub
fmull
xor
fsts
sbb
fwait
lea
xchg
ss
clc
xlat
nop
nop
xlat
outsl
ret
cmc
cmp
and
jb
pop
push
mov
fisubrl
shufps
inc
push
jg
pushf
xchg
out
push
jne
push
or
or
add
jno
mov
daa
jle
aam
lds
aaa
or
movsl
pop
mov
add
and
xor
addr16
or
mov
repz
xchg
mov
mov
adc
rorb
mov
cmp
cmp
out
lods
popa
jo
int
lahf
jo
xchg
cli
xchg
ret
lret
cltd
les
mov
ss
insl
ficoms
das
add
ds
lods
je
imull
cmp
into
sub
jne
daa
adc
scas
stos
adc
mov
test
inc
mov
push
das
mov
or
mov
fbld
mov
dec
lods
cltd
cmp
insb
iret
frstor
hlt
adc
les
mov
loop
and
sarl
gs
push
out
outsb
adc
xchg
and
adc
mov
filds
push
xchg
pop
repz
cmp
pop
sub
or
aas
mov
dec
jno
aad
pop
push
clc
sahf
mov
xor
sbb
int
rclb
ljmp
pushf
out
lds
icebp
dec
push
sbbl
repz
dec
fstpl
pop
adc
ss
inc
jne
mov
hlt
push
push
cs
or
shrl
jl
loop
mov
and
inc
shll
cmp
cmp
or
cs
xlat
imul
pop
adc
pop
push
push
and
addr16
push
imul
ja
and
jb
jmp
or
mov
push
ss
repnz
fcmovnb
scas
push
stos
je
pop
lret
xlat
mov
jb
fcompl
jae
sbb
ror
jne
cmpb
enter
sbb
mov
xchg
xchg
cmc
inc
xchg
mov
jne
popf
push
out
arpl
mov
xchg
and
lds
pushf
mov
jecxz
scas
adc
sub
stc
hlt
iret
data16
mov
lret
mov
nop
arpl
rep
jmp
imul
test
aas
stc
push
fucomp
loope
sub
in
stc
test
mov
jg
mov
push
xor
or
call
roll
inc
adc
xchg
scas
ret
popf
out
xchg
loope
inc
xchg
in
mov
xchg
xlat
mov
pop
shlb
sbbb
mov
loopne
or
shlb
cmp
stc
scas
jl
popf
roll
cli
ljmp
mov
pop
insl
out
and
mov
xchg
mov
pop
cmpsb
mov
or
and
inc
jge
lods
lcall
push
out
cmp
push
int
arpl
xor
adc
fdivr
test
push
movsb
in
leave
je
push
dec
aam
mov
fs
pusha
andl
fmuls
or
jl
movsb
scas
cmp
sbb
mov
dec
cmp
jbe
xchg
shll
sbb
jbe
imul
jbe
mov
or
scas
xchg
mov
cmp
fmul
stos
ret
outsl
ja
lods
movsb
pop
roll
shll
cltd
and
sub
andb
fsubl
inc
add
cmpsb
shlb
sbb
mov
cmp
push
aaa
into
mov
dec
bound
push
in
ficoml
pop
add
xor
lods
stos
addr16
xchg
movsl
sbb
sub
cmp
jecxz
push
lds
and
xor
xchg
clc
and
sbb
add
mov
into
gs
fldcw
rcl
or
jg
icebp
jne
xchg
xchg
ret
xchg
sbb
imul
into
dec
fists
notl
mov
xor
sub
cs
lret
cmc
sbb
push
jmp
es
les
idivl
in
fsts
sub
loop
and
shll
mov
sbb
mov
es
and
xor
mov
mov
or
in
test
sbb
scas
jle
adc
fsubs
inc
andl
mov
jbe
fistl
push
pushf
mov
jmp
add
xchg
scas
cwtl
fwait
pop
mov
test
in
xor
push
shrl
mov
cmp
icebp
mov
push
stos
les
jne
or
xchg
mov
movsb
idivb
sub
xchg
mov
aas
jno
imul
fldcw
icebp
fimull
push
inc
cmc
in
repnz
pop
outsl
stos
mov
outsb
jne
ljmp
cmp
jbe
xchg
jne
shl
movsb
adc
adc
xor
dec
in
ljmp
scas
notl
subb
jbe
jge
xchg
sub
std
xchg
imul
dec
sbb
lret
mov
mov
inc
cltd
sub
dec
repnz
ds
cld
sbb
shlb
and
adc
add
test
out
xor
or
lods
ljmp
pushf
test
xchg
pop
rorl
in
mov
add
lret
fildll
mov
mov
out
adc
jo
inc
mov
cmp
sbb
mov
cmp
mov
mov
repnz
inc
mov
xor
inc
out
push
lcall
aam
and
cmc
xchg
push
int3
pop
adc
dec
ficompl
mov
mov
fisubs
jmp
scas
je
out
les
xchg
ss
mov
mov
pusha
jbe
fisubs
pop
je
and
out
les
inc
andb
outsl
push
adc
cmp
fsubs
dec
xchg
leave
fwait
cmpsl
push
aas
movsb
ret
in
imul
dec
imul
and
sbb
out
lods
push
mov
aas
and
stos
fnstenv
mov
testl
mov
push
mov
xchg
or
icebp
mov
mov
dec
push
xor
mov
xchg
or
cmp
jb
scas
mov
xor
xchg
sub
out
in
jne
testl
shl
call
sbb
pop
sbb
test
daa
mov
and
lock
gs
xchg
and
dec
imul
fsubs
or
js
and
lods
or
mov
and
lret
pop
int
mov
in
sbbl
gs
stos
popf
or
push
jne
loope
lret
pop
call
out
in
call
test
jne
push
aaa
mov
mov
adc
ss
stc
out
rcrb
add
jmp
sbb
jns
xchg
sub
dec
add
ljmp
xor
and
fcmovnbe
movsb
sbbl
in
popa
jle
push
pop
jnp
mov
test
xchg
push
ror
push
mov
xchg
pop
mov
aam
stos
sahf
sub
loop
sub
push
pop
xor
mov
add
mov
loopne
pop
stc
fisttps
jge
aas
pushf
push
dec
cmpl
ljmp
jno
sbb
mov
jecxz
fnstsw
insl
shrl
jmp
in
mov
outsl
mov
cmp
pop
enter
sub
or
ljmp
jb
insl
movsb
js
ret
mov
xor
xor
dec
pusha
sbb
aaa
pop
cmpsb
cmc
incl
pop
mov
and
pop
test
mov
xor
jbe
mov
mov
sub
shrb
psadbw
jp
cli
sub
outsb
jae
mov
cmp
xchg
push
testl
dec
mov
pushf
stc
xor
jmp
push
movsb
jbe
jge
js
mov
jno
sbb
xchg
sbb
subl
mov
call
inc
adc
bound
inc
lahf
lods
dec
out
shlb
je
and
iret
sbbl
fnstsw
jge
xchg
inc
mov
sbbb
sub
mov
push
lcall
das
mov
lret
lret
xor
cmp
push
inc
push
jno
cmp
addr16
xor
add
mov
sarl
add
imul
pop
mov
in
outsb
sbb
push
movnti
out
aam
cmpsl
adc
cs
push
push
int
fcmovb
nop
xor
lret
fstpl
mov
shr
fidivl
mov
loop
sub
enter
cmc
jecxz
es
jg
inc
push
or
mov
insb
and
adc
ss
cmpsb
jb
fistl
aas
cmp
cmp
inc
fiaddl
addl
and
dec
out
and
fdivr
sub
jbe
or
lock
cmp
or
push
in
gs
stc
push
sub
in
xchg
test
aad
pop
leave
sbb
pop
lods
ret
cmpsb
scas
addr16
dec
test
lods
pop
jp
push
jle
jg
cld
pop
ds
adc
es
jns
pop
cli
dec
and
cltd
push
mov
ds
and
cld
push
mov
aam
fdivs
test
lcall
xchg
mov
xlat
push
insl
dec
push
sbb
or
pop
sahf
push
sbb
adc
and
and
inc
in
daa
push
jmp
dec
and
inc
arpl
popf
jb
push
sub
cmp
cli
xchg
daa
sbb
inc
cmp
cltd
test
mov
mov
sbb
pop
push
mov
push
loop
sbb
mov
dec
gs
sub
push
add
rcrb
mov
sti
aam
xor
mov
movsl
dec
push
imul
mov
jns
dec
test
adc
loop
ret
fwait
icebp
push
test
jnp,pt
test
adc
inc
ficoml
fidivs
sbb
fstpl
push
jg
sahf
xor
popf
pop
movsl
pop
test
push
mov
pop
bound
push
mov
jl
sbb
bound
mov
je
in
or
mov
inc
subl
jae
push
test
out
aad
pop
hlt
xchg
test
pop
jb
shrb
jnp
xchg
mov
and
push
xchg
fisubrs
sub
or
and
add
imul
xor
sub
pop
jb
int
sub
movsb
or
cmpsl
js
inc
mov
addr16
push
mov
push
pop
mov
xor
je
xchg
add
xchg
dec
jno
cs
mov
movsl
cmp
pop
jle,pn
or
gs
jge
mov
add
and
jb
inc
xchg
jmp
incl
add
int
lea
aad
scas
mov
cmp
push
fisttpll
das
pop
movsb
lret
cli
sub
xor
dec
out
scas
js
dec
add
mov
or
mov
sub
fcom
add
pusha
sub
inc
xor
jmp
xor
movsb
mov
push
mov
jge
cmp
mov
fdivp
stc
fdivs
int3
sbb
std
shlb
jno
cmp
add
js
jnp
sarb
js
test
lret
mov
cmp
daa
jge
xchg
jbe
lods
clc
loopne
cwtl
imul
xchg
xorl
mov
and
pop
outsb
movsb
and
xchg
leave
stos
xchg
adc
sbb
in
dec
add
sub
add
cmp
xchg
leave
pop
xor
popf
or
xlat
pop
out
cld
xchg
adc
or
cmp
fnstenv
lods
sbb
je
std
mov
adc
out
add
xor
cmp
mov
push
or
ret
ss
pop
pop
shl
mov
adc
dec
aaa
cltd
je
insb
dec
mov
xor
xchg
scas
push
divl
call
out
push
or
xor
mov
repnz
test
addr16
jle
scas
add
push
or
test
xor
jno
icebp
cmp
xor
mov
jb
sub
xchg
shrl
push
fbstp
insl
in
repnz
aam
pop
pop
ret
cmp
sarl
inc
fwait
std
pop
mov
push
push
ljmp
call
add
shr
cli
pop
sub
adc
push
cmpsl
sub
dec
ret
dec
cmpsb
mov
loopne
cmp
imul
out
push
pop
into
enter
or
test
movsl
ficompl
jo
sub
shrl
push
aam
dec
dec
jne
aaa
push
repnz
out
add
jb
inc
and
lcall
pop
push
mov
loopne
dec
cs
dec
pop
xlat
ja
icebp
mov
mov
pop
or
notb
jnp
mov
mov
mov
pop
push
cli
cltd
mov
mov
cmp
add
ja
rcrl
dec
and
and
jbe
mov
std
xchg
das
int3
lea
ret
sbb
fdivrl
rorb
cs
icebp
pop
add
test
test
push
and
add
es
fcoml
mov
inc
test
dec
in
enter
andb
sbb
dec
in
or
cmp
mov
inc
adc
dec
in
push
inc
fiadds
mov
aas
sarl
inc
fucom
lods
mov
inc
hlt
pushf
dec
xlat
xchg
sub
cmc
add
scas
daa
movsb
sbb
test
or
out
add
aas
and
add
out
insb
jle
shr
add
cs
jbe
add
std
sub
xor
in
ficoms
fdivl
jge
std
scas
push
insb
or
push
jp
and
inc
jne
daa
adc
sbb
pop
mov
shlb
inc
ds
movzwl
jge
std
insb
ficoml
mov
pop
mov
shll
fnsave
daa
addb
jbe
add
adc
iret
test
js
das
lret
bound
cmp
mov
push
inc
in
mov
fadd
jns
mov
add
imul
push
adc
std
lods
or
mov
lret
mov
ret
push
jo
stos
jmp
aas
sti
scas
in
push
mov
addr16
mul
jp
adc
jae
mov
hlt
and
sub
dec
mov
push
pop
push
mov
dec
cltd
inc
mov
pop
adc
sbb
cmpsl
jl,pt
mov
dec
push
push
pop
rorl
jmp
fistps
adc
jb
or
shlb
pop
sub
ljmp
mov
es
pop
cmp
lret
mov
adc
mov
fdivrl
cltd
test
aam
xor
lock
int
push
jnp
jae
xchg
sbb
xor
jae
jae
jg
movsl
cli
aad
mov
jns
jne
cltd
insb
add
call
jle
pop
cmp
data16
cmp
vpaddq
xor
dec
out
jno
addr16
jae
mov
push
xchg
test
lock
or
push
pop
mov
or
or
pop
sahf
xchg
mov
pop
popf
and
add
jle
popf
xor
and
inc
mov
cli
test
lods
push
and
jecxz
ja
sub
data16
sub
dec
gs
adc
jp
cmp
dec
cwtl
dec
fidivs
das
mov
loop
pushf
push
repz
mov
nop
dec
daa
adc
orl
pushf
sbb
add
lods
pop
xor
cmp
sbb
mov
jle
rorb
sbb
sub
idivb
mov
popa
stos
lock
xchg
dec
add
popf
imul
or
push
cmp
push
and
ja
iret
arpl
jb
std
mov
ret
int3
sbb
sbb
mov
dec
fiaddl
dec
dec
xchg
inc
pop
int3
imul
and
pop
xor
jno
dec
xchg
inc
inc
out
movsb
dec
dec
lea
out
jmp
inc
xor
push
fadds
or
pop
adc
inc
mov
jne
mov
jne
cvtps2pi
pushl
sahf
out
sbb
xor
ret
pushf
xlat
repz
inc
pop
cmpl
cmp
sub
lret
xlat
mov
cmpsl
xor
sbb
int
jns
imul
push
nop
fldl
sub
daa
or
and
es
rolb
inc
fdivr
insb
popa
jmp
es
mov
add
sbb
pop
and
imulb
cmp
push
shlb
sub
icebp
xchg
sbb
pushf
or
jb
jle
dec
jb
mov
xchg
stos
add
iret
push
inc
outsb
rorb
sahf
and
dec
cs
pop
std
mov
sbb
je
testb
xchg
not
cs
into
movsl
repz
pop
mov
dec
xchg
es
jp
or
adc
cmp
cmpsl
lock
dec
cmp
jno
mov
mov
cmc
jne
adc
dec
and
sahf
xor
test
popa
mov
imul
adc
fwait
xor
shl
jmp
dec
sbb
fs
jl
xor
pop
pop
inc
movsb
or
jo
mov
shrb
jno
and
test
inc
lods
imulb
les
adc
cmp
jmp
mov
xor
pop
or
sub
imul
pop
push
jmp
nop
fcomip
dec
clc
pop
int
inc
sbb
pushf
mov
das
dec
pop
ljmp
lret
test
test
and
fldz
test
fcomps
push
cmp
and
lahf
rol
inc
dec
data16
es
mov
sub
or
out
add
inc
faddl
sub
push
mov
push
imul
scas
xchg
adc
xchg
scas
sbb
lret
bound
call
mov
mov
stos
test
sub
push
and
daa
mov
push
out
sub
jae
push
gs
test
dec
mov
xor
out
sbb
es
in
pop
ds
jl
mov
mov
mov
adc
or
dec
pop
xchg
and
dec
add
xor
dec
div
cmp
and
jmp
adc
aam
cmp
orb
mov
scas
call
addb
xor
push
sub
inc
or
test
mov
sbb
bound
aas
xchg
lcall
jo
lahf
lcall
fnsave
insb
mov
pop
dec
and
stc
jle
cld
outsl
xchg
mov
adcl
cmp
in
xor
and
lahf
sbb
bound
mov
in
in
pop
std
add
out
std
cmp
dec
pushf
pop
jno
mov
inc
mov
imul
mov
pop
fistpll
movntq
sub
movsl
pop
pop
add
fs
push
mov
cld
in
sub
dec
jbe
push
loope
popf
imulb
cmc
xchg
mov
test
jbe
xlat
pop
xchg
adc
pushf
es
adc
sub
jl
jb
das
movsb
out
add
xor
jo,pn
cmp
ss
ljmp
cmpb
das
mov
arpl
popf
push
adcl
push
aam
dec
ficompl
leave
lahf
mov
hlt
xchg
fnstenv
aaa
xor
sbb
test
or
ds
in
fcomp
call
imul
cmp
and
cmpsb
psrld
mov
lds
addr16
data16
push
pop
pop
stos
mov
adc
in
xchg
jp
ds
lods
popa
xor
jge
mov
add
aam
outsl
add
testb
aas
mov
and
jno
push
jb
aas
imul
cmp
out
mov
sbbl
adc
movsb
cmpsb
mov
sbb
inc
fisubrl
adc
inc
inc
arpl
movsb
push
popf
cwtl
cmp
mov
stos
jae
fisubl
out
push
or
cmpsl
push
insl
into
adcl
or
cmpsb
ds
nop
pop
sub
inc
xchg
cmp
adc
mov
rcl
dec
shlb
dec
les
fldenv
fidivs
sbb
mov
pop
push
inc
adc
lret
in
xchg
mov
stos
xchg
imul
das
mov
mov
ja
jb
cmp
sub
push
or
sbb
and
daa
int
cmp
pop
jmp
dec
push
out
cmp
mov
pop
and
dec
pop
sub
mov
cmp
jge
es
push
inc
push
lret
lock
inc
sbb
cmpsb
shlb
out
out
pop
push
ljmp
out
cmpsl
nop
icebp
jle
and
jae
and
outsl
outsb
rolb
std
xchg
icebp
adc
mov
mov
test
loopne
adc
test
mov
gs
test
repz
call
pop
push
mov
repnz
je
cmpsl
out
mov
ljmp
dec
inc
fsubp
cmp
insl
xor
xor
push
cmc
mov
shr
push
push
stc
andb
fsubrs
call
divl
mov
pop
test
mov
mov
or
ret
mov
xor
mov
pushf
mov
fnsave
fisubrs
lret
add
cli
cmc
jmp
jle
test
sub
pushf
pop
addr16
data16
push
flds
cmp
int3
mov
lods
push
sahf
xchg
pop
mov
in
jl
mov
inc
sbb
jecxz
sub
xchg
pop
mov
cmp
hlt
add
fdivl
fcmovnb
lcall
lcall
sbb
ret
call
jecxz
cmc
testl
push
cltd
pop
push
cltd
or
in
lods
dec
xor
rep
into
mov
inc
in
stos
in
lods
sbbb
push
xor
fcmovnb
in
rolb
push
out
jne
adc
sbb
imul
sbb
jo
sub
mov
rcrl
outsb
out
loopne
mov
jge
cmp
push
add
ljmp
xchg
out
lods
xchg
aas
or
rep
cmpb
es
push
add
mov
xlat
inc
mov
bound
push
aaa
cmp
or
mov
subl
ja
cld
popf
adc
enter
imul
add
lea
std
aad
jbe
stos
dec
loop
adcb
sbb
imul
push
daa
inc
xor
cmp
mov
mov
outsl
cld
xor
xor
test
arpl
inc
push
repnz
adc
pop
adc
push
adc
push
xchg
push
jge
mov
add
roll
repnz
adc
js
mov
lods
add
mov
fistpl
lcall
movsl
ss
mov
dec
int3
xor
jb
shlb
inc
fsts
xchg
xor
or
xchg
rol
xor
fimull
xchg
mov
je
push
cmp
lods
jnp
test
jno
sub
sbb
hlt
arpl
cmp
push
inc
mov
divps
lods
popa
rol
sub
jne
popl
sbb
cmpsb
mov
pop
inc
or
jae
cltd
test
push
int3
jae
gs
clc
incb
popa
out
out
fidivl
adc
imul
pop
sbb
mov
lock
popf
stc
jmp
aaa
lea
stos
mov
out
out
fsubr
inc
push
jne
or
add
mov
addr16
cli
int
int3
pop
sub
adc
imul
jns
fcmovne
call
add
scas
aam
dec
push
fs
push
and
jecxz
aad
arpl
loopne
sbb
or
fsubl
outsb
xor
outsb
inc
shll
rolb
repz
enter
jg
sbb
flds
sahf
and
sbbb
add
aaa
pop
imul
pop
mov
xlat
mov
int3
and
sbb
push
sbb
mov
dec
icebp
inc
mov
pop
mov
dec
pop
and
das
sbb
jg
add
js
sbb
xchg
iret
iret
add
lea
dec
add
jecxz
inc
jp
xchg
call
inc
in
mov
addr16
xchg
fcmovu
fisubl
test
ss
lock
call
adc
es
mov
loop
inc
sbb
cmpsl
lahf
clc
stos
push
sub
add
pushf
pop
jle
cmp
and
sbb
mov
jno
bound
inc
cmp
fisttpl
cmpsb
dec
mov
divl
inc
inc
arpl
clc
sahf
sbb
movsb
fsubs
test
mov
cs
aas
popf
dec
cmp
jns
out
inc
loope
cli
lods
and
popa
cmp
fcomps
sub
mov
ljmp
cld
loop
cmp
loop
pop
ret
ret
ds
jns
cltd
mov
or
decb
mov
notl
adcl
xor
popa
and
stos
fs
lods
int3
sbb
test
jno
lret
mov
and
cld
xchg
dec
mov
pusha
fiadds
insb
jle
mov
cmp
mov
cwtl
cs
in
insl
cmp
add
pop
shlb
scas
or
fwait
jecxz
shl
xchg
mov
xor
ret
add
test
push
jl
sbb
cmpsb
sbbl
xor
fdivrs
andb
int
mov
sub
out
je
cmp
out
lea
inc
inc
push
xchg
add
fiadds
xor
in
push
cld
mov
add
push
push
pop
lock
inc
add
mov
ja
pop
lock
pop
dec
fwait
xor
hlt
in
push
ret
pop
fistps
fimuls
mov
add
mov
xor
dec
mov
in
mov
push
repnz
enter
inc
jno
xchg
aam
push
aad
in
mov
pop
inc
mov
mov
pop
daa
cmp
lcall
cwtl
pop
int3
add
rorl
inc
push
js
mov
push
and
mov
dec
cltd
stos
cmpsb
xor
xchg
inc
les
jbe
rcll
add
cmpsl
xchg
cmp
push
push
fldt
jmp
inc
sub
sarl
mov
flds
test
loope
test
dec
ss
sti
aad
out
nop
jb
mov
inc
fwait
gs
push
nop
incl
and
mov
or
push
mov
dec
xchg
movsb
fdivrl
shrb
rcrb
mov
call
popa
es
inc
push
pop
jo
xchg
jg
jns
add
dec
sub
xor
xchg
cltd
xchg
jns
fwait
cmp
inc
in
or
ljmp
movsb
adcl
repnz
sahf
and
sub
jae
pushf
add
xchg
outsb
sbb
mov
mov
jg
and
push
repz
clc
and
les
cmpsl
jns
xor
in
data16
xchg
xchg
fildl
sti
mov
cmc
adc
jle
sbb
imul
addb
mov
fs
data16
lock
aam
jbe
sbb
jp
inc
insl
nop
bound
aad
pusha
enter
shrb
gs
int
xlat
sbb
pop
in
imul
fstpt
jbe
mov
inc
sbb
add
and
stos
dec
lcall
movsb
ror
jp
stc
enter
and
add
insb
mov
loopne
stos
push
lret
subl
sub
dec
mov
dec
ret
inc
jbe
mov
add
andl
addr16
cmp
cs
addr16
adc
cltd
or
cmp
pop
add
sarb
pushf
xor
addr16
inc
popa
mov
loopne
mov
fdivrl
adc
push
mov
adc
xor
insl
cmp
dec
out
xchg
jnp
and
mov
push
test
cmp
fsubr
pop
sahf
cli
rcll
mov
lahf
push
sub
pop
movsl
dec
sbb
push
lds
add
xor
jne
sbb
gs
sbb
pop
jl
and
mov
aad
inc
rcr
cmc
or
jns
sbb
inc
cmpsl
imul
xor
sahf
imul
les
mov
inc
or
xchg
scas
dec
push
popf
lods
jne
jb
lds
rclb
cltd
push
aas
mov
dec
add
add
sub
ficomps
xchg
mov
mov
aas
insb
movsl
aad
sbb
jle
inc
dec
sub
sbbl
ret
out
push
adc
pop
addr16
and
fsubrl
insb
fwait
enter
js
ret
mov
hlt
insl
inc
fcompl
fidivs
insb
repz
mov
popf
sbb
jb
pop
pop
mov
gs
cmp
mov
fimull
rcrb
lods
xor
lds
mov
aas
mov
jmp
mov
cmp
outsb
nop
imul
mov
mov
aam
jl
sbb
and
mov
call
mov
xor
popf
fwait
lock
les
sub
mov
movsl
ljmp
pusha
aam
adc
mov
ret
fnstenv
adc
pop
cld
int3
push
cltd
loop
fldt
rcrb
sahf
iret
es
std
push
mov
xchg
mov
cmp
inc
pop
xlat
test
sbbl
imul
push
int3
jb
ss
pop
daa
pop
fnstcw
inc
mov
or
sub
adc
leave
jl
repnz
es
jmp
aam
or
aad
mov
icebp
xchg
pop
xor
jle
mov
enter
aaa
andl
aaa
dec
xchg
jp
movsl
mov
enter
ficompl
orl
movsl
xchg
pop
sub
mov
push
out
out
push
mov
in
xor
mov
cmp
xchg
mov
xor
adc
outsl
push
and
jbe
loop
gs
shrb
in
pop
outsb
mov
pop
cmp
dec
in
scas
out
in
dec
pop
inc
mov
out
jecxz
cltd
std
adc
movsb
das
mov
mov
pop
lcall
dec
movsl
pop
jne
adc
insl
cwtl
aaa
push
adc
fstpt
movsb
mov
fildl
rclb
mov
ret
fstps
jecxz
lahf
es
or
test
out
lahf
stos
test
sbb
insl
jge
inc
add
stos
mov
lret
aad
xchg
and
and
push
arpl
int
push
mov
dec
aaa
rclb
test
shrb
or
cmp
dec
dec
lcall
inc
xor
cmpsl
test
or
sub
add
bound
iret
xchg
scas
cmp
pop
imul
mov
out
xor
jl
sbb
pop
lcall
dec
fsubrl
fbld
movsl
stc
sbb
in
xchg
jae
xchg
fiaddl
test
sahf
cwtl
and
push
pushf
in
pusha
or
pop
lret
add
adc
pushf
dec
lods
rclb
cltd
jmp
lret
mov
ret
dec
xlat
jge
add
pusha
dec
mov
mov
mov
ljmp
insl
push
or
xchg
clc
int
cmp
stos
int3
push
icebp
repnz
data16
movsl
loope
out
test
pop
mov
and
popa
in
in
inc
cmp
out
nop
jb
and
cmp
fdivs
push
pop
jmp
pusha
fistpl
push
jbe
jns
push
fld
jb
loope
jmp
xchg
and
fs
movsb
pop
mov
cmpsl
inc
fisttpl
stos
fs
and
mov
repnz
cltd
addb
and
cmp
inc
ret
pop
repnz
dec
sub
sub
iret
adc
xchg
outsb
adc
push
out
ss
ja
push
outsb
stc
and
xorb
cwtl
das
adc
dec
loope
divb
sub
sub
mov
push
fldt
stos
shlb
pop
dec
into
xor
jp
inc
jmp
fwait
or
sbb
push
out
cmpsl
pusha
fadds
sub
out
mov
xorl
push
pop
cmp
sahf
add
cmp
es
push
pop
xor
cmpsb
pop
adc
dec
ja
mov
outsl
fmul
out
push
jbe
inc
pusha
jb
out
ss
adc
or
arpl
xor
pop
lcall
jnp
push
repz
pop
repnz
xchg
mov
cmp
add
mov
fidivl
sub
loop
sub
mov
mov
push
out
xchg
leave
scas
cli
sbb
jb
stos
jnp
sub
add
lods
mov
or
pop
mov
add
xor
pop
fiadds
shlb
push
not
lret
mov
dec
sbb
insb
je
mov
lret
test
push
adc
xor
mov
mull
sub
dec
jle
jb
xor
sbb
sahf
pop
and
sbb
in
fldcw
into
scas
cmp
in
push
ds
roll
icebp
xchg
xchg
stos
test
scas
or
mov
insb
notl
xchg
xor
push
out
pop
inc
lret
lds
ret
xor
stos
dec
mov
adc
sbb
pop
jb
mov
xchg
insl
adc
or
and
int
test
cs
cli
push
sbb
sub
rorl
mov
adc
sub
push
dec
shll
lds
or
mov
mov
jp
pop
lds
xor
ret
cmp
xor
inc
rorl
nop
ljmp
call
push
adc
or
dec
lods
cltd
and
adc
adc
mov
push
cli
lea
imul
cmc
les
xor
adc
mov
pop
ret
into
push
rcrb
xor
out
popf
aam
jmp
and
pusha
xor
or
aad
ficoml
bound
lahf
xchg
mov
xlat
inc
jle
mov
mov
push
pop
out
lea
jbe
and
addr16
in
sbb
ja
rcrl
in
ljmp
jnp
lahf
lods
imul
pop
dec
xorl
sti
push
push
ss
testb
sub
push
pop
inc
call
out
xchg
cmp
add
inc
xor
out
aaa
push
jne
movsl
jl
jae
pop
cmp
adc
jno
idivl
popa
push
push
mov
jne
push
cli
or
or
sbb
fs
or
outsb
test
mov
sarl
int
inc
push
xor
add
out
lds
cmp
sbb
dec
aaa
or
adc
scas
push
add
sbbl
push
pop
fisttpll
cld
lret
mov
ds
enter
shll
imul
sub
dec
sbb
mov
sar
push
stos
add
push
jge
cmp
pop
inc
or
inc
pop
xor
dec
mov
arpl
das
mov
test
into
jp
mov
not
mov
push
movsb
test
enter
jmp
andl
jge
test
jge
movsl
nop
stos
inc
out
xchg
lods
sub
loopne
xor
lods
sub
add
lods
jnp,pn
lcall
leave
pusha
cmpsb
add
lods
sub
out
int
fisubrs
jmp
xor
mov
cmc
test
mov
imul
pop
cltd
out
test
popa
out
xchg
sub
push
mov
lahf
add
sub
sbb
pop
pop
mov
pop
sahf
das
dec
aas
push
in
call
div
xorl
jg
sbb
pop
mov
fnstenv
push
rol
loopne
push
lods
out
inc
xlat
testl
cmp
pusha
scas
jbe
and
xchg
sub
inc
xchg
add
fcomps
lret
xor
test
js
pop
imul
dec
dec
mov
call
xchg
add
test
push
js
jns
pusha
push
inc
fsubl
inc
arpl
jmp
mov
aad
jbe
cli
cmpsl
sub
jp
and
cmc
mov
adc
lcall
in
or
lds
jne
leave
cmpsb
sub
jnp
push
insb
mov
inc
xlat
inc
dec
inc
dec
in
scas
inc
rorl
jns
cmp
jl
pop
add
daa
xor
scas
mov
les
push
ret
mov
ljmp
lds
xchg
movb
jae
call
mov
imul
or
mov
adc
adc
sti
xchg
pushf
xor
sbb
jle
push
or
xchg
mov
jecxz
shrb
inc
lds
lock
aas
ljmp
cmc
cmp
cmp
jns
jo
mov
fisttpl
pop
mov
hlt
mov
out
mov
adc
or
jp
xchg
inc
fidivs
pushf
test
into
xchg
cld
xchg
enter
sbb
sub
ja
adc
inc
jl
xchg
scas
xchg
sub
sbb
aas
idivl
shrb
popa
testl
fnstenv
fwait
xor
dec
loope
dec
inc
fiaddl
lea
mov
loopne
push
push
out
lcall
in
js
push
jnp
dec
lods
aas
xchg
sub
add
xor
cmp
mov
out
dec
sub
jmp
pop
icebp
out
imul
xor
inc
ja
ja
or
lret
rolb
int
and
ja
data16
and
popf
xor
fistps
adc
jns
arpl
leave
pusha
adc
out
data16
shl
adc
push
loopne
mov
mov
jno
cmp
add
inc
adc
sbb
inc
ds
sub
insl
adc
jge
dec
jo
jmp
cwtl
fisttps
and
pop
scas
jmp
fimuls
xor
ds
rcrl
out
xchg
movsb
push
ljmp
and
gs
outsl
push
loopne
scas
inc
cmp
jbe
mov
jbe
cli
adc
jo
jmp
cwtl
fmull
sahf
jg
lods
inc
sub
insl
add
dec
stos
inc
jge
rcrl
jmp
je
idiv
xchg
and
inc
sbb
adc
lds
mov
dec
adc
mov
xchg
add
sbb
or
aaa
into
stos
pop
push
dec
jns
xchg
lods
fstl
jo
outsl
push
push
addr16
nop
xchg
les
mov
xchg
pop
xor
xchg
lret
cli
xchg
jbe
sub
ljmp
mov
or
daa
mov
jecxz
xor
cmpsl
cmp
sbb
jle
pop
scas
inc
jno
jne
test
mov
xchg
inc
xchg
sub
lds
sbbl
addr16
cmp
popa
clc
mov
lahf
fsubl
call
jnp
cmp
mov
jns
fisubs
ret
or
mov
mov
fs
pop
adc
mov
leave
and
xchg
ja
mov
imul
inc
movsl
mov
clc
test
sbb
scas
mov
jo
jns
mov
lahf
jge
mov
mov
insl
pop
mov
jl
bound
addr16
insl
add
mov
mov
mov
insb
mov
js
jb
insl
cmc
mov
jns
aam
subb
stos
push
and
mov
jo
repnz
jl
fs
xchg
cmpsl
popa
cmp
mov
sub
mov
xchg
cs
xchg
sub
mov
jbe
jnp
sub
jl
mov
popa
das
xchg
insb
xchg
sub
orl
jb
cld
mov
jae
push
mov
jae
push
mov
jae
stos
mov
jb
ljmp
xor
mov
jb
or
push
fcomps
xchg
mov
or
imul
mov
cs
sub
rcrb
jnp
xor
or
and
pop
hlt
sbb
or
inc
fstpl
or
jns
push
mov
lret
and
jne
cli
lock
in
test
sbb
fidivs
fdivs
lret
in
add
outsl
push
pop
in
mov
scas
xor
gs
in
add
mov
movsb
das
sbb
mov
out
sub
popf
pop
xor
lcall
sti
xchg
cmc
jne
pop
test
sbb
outsl
cld
shrl
push
sub
push
add
pop
div
pop
popa
clc
dec
sub
sbbb
or
jmp
repnz
imul
js
shll
leave
add
cmc
mov
jmp
insl
aam
adc
mov
cmpsb
loop
push
in
fdivrl
iret
adc
imul
dec
adc
cmp
or
and
inc
pop
lahf
inc
fcom
cmp
arpl
xlat
outsb
jnp
mov
sub
xor
jg
dec
fwait
xor
cltd
sub
lret
xor
icebp
push
mov
mov
ret
ret
imul
insl
jecxz
inc
fcmovb
cmp
jecxz
pop
in
test
xchg
loope
std
fsubrs
in
inc
adc
xchg
call
fimuls
xchg
adc
imul
test
mov
out
test
shrl
or
jns
sub
call
int
stc
nop
scas
out
outsb
test
rorb
and
inc
sbb
push
cwtl
sub
lret
cmpsl
jmp
fstps
dec
pusha
sti
cmp
fbstp
data16
imul
mov
ret
clc
aaa
call
adc
xchg
mov
push
lods
add
inc
fdivp
and
rcll
pop
cmc
inc
jb
dec
test
mov
cltd
leave
sbb
in
pop
and
push
or
aad
mov
fdivp
mov
out
call
or
setnp
cmp
scas
iret
data16
xchg
xor
mov
lods
mov
fisubrl
inc
pop
scas
xor
xchg
xchg
mov
adc
out
adc
sbb
test
cmp
xchg
sub
shl
out
test
stc
xchg
sub
aaa
into
dec
dec
mov
adc
outsb
add
push
lods
rcrl
add
pop
repz
in
cmp
mov
aam
hlt
mov
enter
ret
dec
out
cmp
fisttpl
jge
pop
dec
adc
jmp
pop
fwait
lahf
mov
outsl
ja
imul
cmp
test
push
jg
fwait
loopne
aam
aaa
int
cmc
int
rorl
fcmovu
lds
jmp
rcl
adc
faddl
out
push
pushf
shll
insb
mov
lea
and
and
les
cltd
cmp
cmp
movsl
add
push
jp
mov
push
jecxz
xchg
xchg
mov
cmp
rolb
xchg
hlt
push
in
mov
xchg
xchg
jns
and
test
out
xchg
xor
cmpsb
sbb
fcompl
or
cmp
into
sbb
shrb
into
loope
shlb
rorb
xchg
pop
push
shll
popf
pop
or
push
cltd
pop
sbb
mov
add
aam
les
jecxz
sub
sbb
addr16
pop
lcall
daa
mov
sbb
jae
dec
movsl
insl
imulb
insb
sarl
cmp
cmp
bound
mov
inc
lret
mov
fists
loope
xchg
xchg
out
lret
loopne
ja
add
outsl
mov
vorpd
ret
cmpsl
gs
push
int
idiv
cmpl
and
out
movsb
jl
repnz
movsl
xor
pop
mov
jne
lahf
dec
push
bound
dec
andps
lea
mov
aad
push
in
xchg
shrl
loop
mov
shrd
adc
movl
aaa
mov
pop
test
int3
add
aam
insl
ret
adc
in
aaa
xor
andl
mov
mov
int
nop
jb
rcrb
and
sahf
out
push
loop
or
or
sahf
jo
sub
nop
daa
cmp
pop
xchg
cli
adc
ret
inc
mov
stos
adcb
ja
testb
aam
mov
sbb
aas
lods
addl
clc
stos
xchg
iret
adc
lret
test
push
mov
repz
out
loopne
mov
aad
gs
jmp
or
stc
mov
jbe
pop
cmc
pop
cli
int3
subl
xor
sbbl
lds
sbb
into
xchg
pop
sbb
sbb
imulb
mov
into
gs
js
sarl
leave
push
xorb
cmpsl
xchg
sub
test
jmp
jb
mulb
test
sub
add
data16
lret
pop
jmp
pusha
shl
ljmp
lock
iret
repz
test
ds
pop
shll
push
fwait
and
daa
js
cwtl
sbbl
sahf
dec
sbb
pop
aad
xchg
xchg
jle
sub
mov
jg
mov
mov
or
xchg
pop
insb
popl
sbb
nop
imul
cwtl
nop
mov
test
lock
dec
rol
pop
adc
movsl
lds
adc
stc
andl
dec
xchg
or
lock
add
sub
mov
jbe
inc
scas
jns
repnz
aas
aad
adc
in
mov
add
jmp
in
pop
mov
or
lds
shrb
mov
stos
mov
adcb
mov
pop
add
ret
scas
jne
cmpsb
dec
in
ds
inc
push
mov
out
dec
dec
out
iret
das
loope
cltd
out
xor
sbb
push
cmp
and
ret
nop
loop
cmp
leave
test
into
or
in
sub
subl
sbb
add
pop
fsubrp
pop
mov
neg
push
int3
imul
es
negb
ss
js
aad
fisttps
aad
ljmp
or
jl
sahf
mov
xor
andl
push
jnp
roll
mov
lock
or
pop
mov
mov
imul
outsb
mov
pop
in
mov
xor
xor
xor
sbb
xor
push
call
ljmp
adc
sbb
cltd
jbe
jne
in
inc
cmpsb
imul
mov
xchg
mov
int
rclb
mov
fbstp
dec
out
test
ficoml
jnp
leave
cmp
das
loope
in
mov
out
sub
adcb
das
fimull
dec
or
pop
test
pop
adc
xor
xor
dec
outsl
repz
aas
pop
sahf
cltd
addr16
push
mov
cmc
dec
jle
adc
and
test
sub
or
in
js
repz
push
fmull
arpl
and
jl
cwtl
jle
inc
imul
push
xchg
push
mov
test
inc
sub
mov
xor
jne
gs
push
jo
fs
mov
sbb
out
xor
popl
sub
inc
inc
arpl
xor
es
push
bound
sub
bound
lds
mov
jmp
into
insl
adc
pop
in
lahf
test
inc
push
or
jge
shrl
in
xchg
fcoms
push
cmp
fistpl
and
push
insb
dec
shll
js
mov
xchg
cs
mov
or
push
out
subb
push
mov
pop
mov
test
jnp
cmpsl
xchg
insb
hlt
push
cltd
xchg
addr16
aaa
in
push
xlat
movsl
add
movsb
add
xlat
cmc
lds
aad
and
or
or
fcomps
addr16
imul
ret
sbb
imull
into
jle
jmp
mov
cmpl
jecxz
push
add
push
xchg
xchg
pop
into
add
inc
mov
loopne
nop
mov
add
xchg
xchg
shl
cmp
adc
scas
mov
insl
cltd
in
adc
push
movsl
lret
aam
mov
mov
mov
push
int3
sbb
int3
cmp
cltd
xor
lret
dec
ljmp
add
mov
arpl
sbb
popf
inc
movsl
jbe
out
jmp
xchg
dec
out
test
lret
jle
les
cmp
pushf
nop
sub
imul
fs
mov
xchg
xchg
sub
imul
sub
push
int3
inc
scas
ja
leave
test
test
int
ror
fsts
fcoms
adc
shll
in
popf
mov
in
jne
in
and
jb
js
into
bound
dec
xlat
das
lds
push
jg
popf
or
mov
sbb
mov
cld
sbb
les
dec
out
in
pop
enter
call
or
stos
mov
fldcw
sbb
sbb
sahf
xor
push
arpl
inc
push
pop
lds
cmc
xor
int3
inc
dec
push
into
and
xor
jle
arpl
push
ljmp
xor
xor
int3
inc
bound
mov
pop
gs
fnstenv
dec
or
repz
and
or
mov
sbb
cld
je
into
inc
clc
cwtl
push
jb
jns
rolb
xchg
mov
add
cmpsb
push
mov
push
lret
dec
mov
push
sub
add
mov
inc
push
xchg
rorb
xchg
push
cmp
jg
push
cmpsb
jl
xor
jno
pop
lcall
mov
sbb
push
bound
add
dec
pop
insb
push
inc
faddl
xor
cmp
jnp
std
aas
fwait
in
int
pop
or
ret
and
push
jns
nop
sub
lcall
les
inc
int3
in
inc
lret
inc
cmp
pop
pop
jno
outsb
push
xchg
imul
add
mov
int
stc
jbe
int
cmp
and
mov
es
test
mov
or
push
out
addr16
sub
test
or
rorb
jl
xor
pop
xchg
pusha
enter
ret
aaa
ja
add
push
dec
mov
xor
rorl
cmp
lea
adc
push
xchg
xchg
out
orl
add
xor
gs
cmp
and
inc
mov
cmp
inc
cmp
lea
or
loopne
pop
add
in
pushf
mov
std
das
sahf
movsl
ss
or
push
jne
and
aad
mov
jl
and
enter
cs
jge
aam
ret
cmc
push
mov
jns
test
sub
fldl
push
roll
jae
push
cltd
xchg
in
adc
mov
call
ret
pop
stc
gs
or
pop
mov
mov
xchg
xchg
jno
and
fbstp
push
rcrb
cmpsl
bound
cmp
fldl
aas
icebp
cli
mov
pop
sub
or
outsb
add
pop
out
lods
sarb
jmp
lock
jecxz
shlb
mov
mov
jnp
inc
cld
mov
lret
lds
push
ret
jp
cmp
mov
adc
mov
or
xchg
or
es
pop
inc
int
lock
lret
push
enter
insl
into
shlb
jecxz
ret
aad
pop
adc
mov
cld
and
clc
pop
into
mov
jmp
nop
xchg
aad
xchg
imul
lds
stos
xor
jbe
and
xor
xor
pop
imul
adc
mov
sbb
jle
shlb
dec
xor
cmp
sbb
dec
jbe
aas
cmp
add
mov
sbbl
adc
push
xchg
cmp
loop
add
leave
test
or
or
sub
xor
sub
fcomps
jbe
fcoms
int3
lods
sarl
sub
cmp
les
gs
mov
rsm
pop
mov
xchg
xchg
icebp
mov
mov
dec
loopne
fdiv
xor
aam
out
test
push
dec
or
fnstsw
lea
push
in
dec
ror
xchg
push
out
lret
mov
lock
out
pop
cmpsl
push
outsb
mov
mov
loope
js
xchg
dec
sub
mov
cmp
imul
jbe
dec
rcrb
pop
scas
test
test
repnz
mov
icebp
and
or
pop
test
std
and
mov
ret
call
test
rcr
xor
in
add
test
ret
aad
je
xchg
xlat
mov
sub
mov
negl
int3
dec
lds
fstpl
xchg
or
pop
add
rorb
popa
adc
into
pop
jne
outsb
rcl
ficompl
push
push
sti
sarl
pop
aam
pop
loop
mov
cs
loope
cs
pop
pop
aam
dec
mov
sbb
xchg
stos
push
xor
jp
xchg
sub
pop
adc
xor
sbb
push
xchg
xchg
xchg
sub
mov
and
je
sbb
adc
and
xchg
mov
sub
imul
mov
xchg
pop
sbb
xchg
js
addr16
aaa
fwait
movsb
cmp
jae
out
sbb
pop
adc
rclb
fcoms
dec
aam
push
mov
xlat
sbb
cmpsb
pop
mov
add
aaa
jp
jmp
fstps
pop
iret
mov
in
sub
push
sub
lret
mov
push
pop
sub
dec
jae
cmp
adc
fdivl
pop
repnz
pop
jae
rclb
repz
mov
inc
call
xchg
xor
mov
fsubl
sbb
pop
icebp
inc
cli
orl
adc
mov
jmp
lods
fldenv
pop
shl
mov
adc
fwait
orb
jle
popf
cmpb
mov
sub
scas
scas
je
push
outsl
lds
xchg
xchg
sub
sub
lods
inc
jo
aad
cmp
lods
ret
call
movsl
ret
into
push
mov
cmp
fbstp
pop
xor
movsb
or
clc
cli
pop
in
mov
test
or
test
or
adc
mov
out
sti
sub
js
shrl
cltd
dec
shll
or
icebp
arpl
pop
cwtl
aaa
sbb
movsl
add
sub
testl
and
or
sarl
mov
fsts
arpl
dec
out
pushf
loopne
sbb
lds
inc
je
push
inc
and
jp
xor
jge
and
test
cld
mov
std
jnp
adc
lret
aas
adc
xor
out
test
push
add
jnp
jp
lret
lock
mov
jmp
mov
pop
aad
jl
or
mov
cmc
sbb
mov
mov
out
jne
adc
icebp
mov
sbb
aam
in
ror
adc
lret
scas
inc
rolb
fwait
pop
cmpsb
fmuls
pusha
enter
mov
cli
pop
shl
mov
out
cmp
iret
or
mov
adc
mov
cs
cli
sub
js
push
dec
in
outsl
pop
bound
adc
mov
sub
sub
xchg
push
or
jmp
push
shlb
mov
add
outsb
add
hlt
cmp
push
jns
lea
xor
jne
push
jmp
lods
push
clc
adc
imul
rol
inc
out
sbb
hlt
push
outsl
stos
mov
divb
cmp
cmp
imulb
dec
mov
add
insb
lods
mov
cmpb
inc
or
ret
sbbb
mov
shlb
fisubrl
in
sbb
pop
jo
pop
rcr
jecxz
dec
loopne
aad
imul
pop
in
popa
or
xchg
gs
lahf
out
daa
scas
jb
fildl
call
mov
repnz
insb
cmp
dec
pop
lret
dec
cmp
imul
xchg
jl
sbb
adc
ror
loopne
lret
mov
inc
and
cmp
lock
pop
inc
shrb
sub
sub
sbb
js
push
dec
imul
xor
sub
add
pusha
jns
mov
cs
sub
sbb
repnz
add
and
int
andl
add
adc
sub
mov
inc
xor
and
les
popa
inc
rcrb
aam
mov
sar
xchg
in
cli
sub
cmpsl
dec
mov
push
xchg
push
cltd
sbb
and
jns
mov
loop
scas
jne
icebp
push
sbb
xchg
or
arpl
mov
jmp
std
pop
movsl
in
push
bnd
sub
lods
inc
out
loope
xchg
or
jl
sbb
dec
xorb
mov
or
lea
pop
fisttpl
orb
push
subb
cmpl
repz
lea
sbb
cli
xchg
jo
inc
mov
addr16
fwait
scas
and
jl
sbbl
and
loop
xor
cmc
aas
jle
imul
and
or
adc
rorb
sbb
push
sbb
pop
pop
mov
fs
inc
mov
sub
push
iret
mov
xor
xor
aaa
jno
adc
jns
cmc
xor
and
inc
jbe
out
lcall
and
adc
mov
push
lahf
orl
js
mov
pop
lret
iret
data16
lods
pop
lret
mov
push
add
sub
mov
hlt
or
mov
mov
or
sub
adc
fldt
es
enter
into
gs
or
cmp
add
dec
mov
out
insl
xlat
xchg
out
xor
fldt
push
jno
stos
pop
adc
mov
jno
jns
imul
xchg
adc
cmp
add
inc
mov
andb
pop
xor
dec
rcll
adc
ret
add
mov
out
into
fcompl
pop
pop
mov
ret
test
push
aas
insb
stos
lods
sbb
push
mov
data16
gs
jnp
pop
sub
dec
jns
fisttps
and
fstpl
adc
lea
mov
pop
mov
in
sarl
fmul
inc
ficoms
fsts
popa
fldt
and
loopne
mov
or
pop
repnz
daa
fsts
ja
rcll
je
and
inc
lret
inc
lcall
pop
icebp
mov
fucomi
es
push
aaa
xor
jnp
push
dec
adc
cmpsl
push
cmpsl
pop
jo
dec
loope
xchg
mov
sti
sbb
popf
sbb
fiadds
mov
adc
sbbl
dec
xchg
or
inc
jecxz
into
mov
enter
xor
lret
daa
lcall
pop
sub
adc
pop
pop
stos
sti
aas
jl,pn
cmp
insl
mov
xor
lock
and
loop,pn
inc
int
dec
lock
mov
icebp
mov
in
push
aad
xor
dec
mov
jne
pop
adc
arpl
test
scas
std
and
mov
adc
mov
inc
into
xchg
addr16
fdivrs
in
and
push
pop
mov
aas
aas
das
loop
lahf
mov
add
add
test
inc
inc
dec
mov
lea
jmp
stos
add
in
push
out
and
out
dec
shr
sbb
dec
inc
adc
jmp
out
mov
fmul
fcmovb
pop
or
xor
mov
jmp
fcmovbe
and
adc
push
push
out
xchg
movsl
inc
test
sbb
xlat
lahf
mov
cli
push
rcrl
pushf
inc
lds
mov
clc
divb
pop
mov
testb
adc
aas
fwait
sbb
dec
pop
aad
mov
int3
pop
sbb
mov
mov
pop
int3
xchg
in
jge
push
daa
mov
ficoms
jg
int3
dec
rcr
pop
popf
xchg
cmp
or
jns
lea
js
mov
lds
decl
cwtl
cld
pusha
and
inc
mov
xor
pop
and
adcl
je
movsb
sub
and
push
lcall
dec
mov
cmp
pop
aam
ja
sbb
xchg
dec
in
pop
sti
sbb
push
lock
push
aad
cmp
fsubrs
lret
dec
aaa
jl
cwtl
stos
jne
xor
test
pop
cltd
andl
pop
ret
jecxz
enter
jl
fsubrs
pop
add
cmc
addl
mov
push
pop
leave
mov
inc
into
jge
fs
int
arpl
pop
push
js
pop
cmp
ds
movsb
fs
jnp
mov
inc
js
int
push
icebp
inc
xchg
lea
add
jns
jmp
lahf
lcall
cmpsl
outsl
stos
jne
divb
rcrb
pop
les
jmp
iret
and
in
lods
jae
mov
roll
mov
ret
mov
loop
add
push
ljmp
test
fbstp
js
mov
xchg
push
scas
jae
cmpsl
jns
pop
push
nop
jle
jle
cmc
pusha
pop
iret
jg
jns
sbb
insb
mov
mov
pop
int
add
imul
lods
outsl
test
test
add
or
mov
leave
and
aam
add
aad
imul
sbb
lea
das
in
xchg
pusha
mov
add
inc
test
mov
out
sbb
pop
int3
push
lods
adc
mov
clc
xchg
mov
sub
push
iret
cwtl
fbstp
mov
cmpsl
jne
mov
stos
inc
divb
frstor
into
cmp
pop
in
lcall
sub
sub
add
mov
mov
push
xchg
and
push
xchg
pop
mov
lcall
insb
sbb
hlt
pusha
mull
inc
mov
push
inc
jp
sub
ret
pop
ja
dec
xor
imul
push
dec
push
aam
jo
jmp
rclb
cmpsl
gs
test
jnp
cmp
ljmp
or
pop
into
xchg
pop
and
aam
mov
inc
lret
mov
out
icebp
fistl
jl
mov
sahf
rorl
or
int3
cmpsl
ds
jmp
imul
rep
inc
sbb
jmp
fisttpl
fisubl
jmp
mov
pop
shll
sub
roll
test
or
cmpsl
mov
xchg
lea
adc
cmpsb
sbb
movsl
lock
int
push
loope
mul
cmp
lods
adc
cld
in
push
les
jmp
cmp
incl
or
mov
dec
clc
xor
jno
cmpsb
cmp
push
mov
xor
lret
push
lds
and
jp
ds
fisubrl
add
roll
mov
loop
push
adc
ds
xor
pop
repz
jp
xor
fnstenv
push
cwtl
das
test
testl
mov
aam
sub
xor
push
dec
repnz
push
call
sarb
push
stos
icebp
lds
int
and
inc
dec
jecxz
ficomps
iret
xchg
lret
out
jp
and
push
popf
sbb
movsl
cmp
jl
or
fwait
xor
xchg
sub
jmp
dec
sbb
aas
shrl
js
add
int3
cwtl
das
and
mov
push
ja
xor
cltd
xchg
or
pop
call
push
lods
scas
cmp
mov
add
push
jmp
rep
imul
inc
ret
xchg
lret
mov
sbb
cmp
scas
cmp
ss
xchg
cltd
xor
and
test
leave
mov
lea
mov
fildll
or
shrl
sub
and
inc
pusha
call
int
mov
dec
lahf
cbtw
mov
mov
sub
mov
dec
mov
jge
ds
cmp
pushf
push
pop
pop
push
jne
ja
cmp
xchg
insb
fwait
cmc
ds
mov
arpl
cmp
mov
insl
fildll
lea
xchg
rcrl
addr16
jmp
sub
xor
shrl
mov
pop
xchg
lret
outsb
or
xchg
notl
test
xchg
imul
sbbb
pop
movsb
inc
mov
xor
fists
scas
enter
ljmp
push
outsb
and
sub
ret
fmull
jecxz
jl
mov
cmp
mov
scas
xchg
arpl
sub
add
out
decl
jns
subl
fsubrl
shlb
in
call
pop
pushf
sbbl
push
jno
mov
mov
mov
mov
popf
enter
cmp
mov
fcmovbe
gs
jno
inc
fsubs
push
imul
sbb
inc
push
fbstp
subb
jge
iret
xchg
lret
jae
test
xchg
mov
cltd
movsl
lret
movsb
test
jl
mov
fildll
pop
mov
lret
cmpsl
cmc
add
push
arpl
mov
pop
push
scas
das
nop
inc
std
popl
popf
mov
xchg
cmc
gs
pushf
pop
dec
xchg
aas
sti
icebp
sub
mov
icebp
ljmp
enter
or
insb
xchg
js
lcall
in
outsl
mov
bound
jge
jno
or
xchg
stos
and
leave
jno
and
out
push
cmp
rcrl
jl
dec
aaa
dec
jno
out
movb
mov
test
mov
rorb
mov
fst
push
js
cmc
lods
das
into
dec
mov
sub
cli
fsubs
mov
dec
sbb
add
stos
xor
in
mov
pop
mov
sti
clc
imul
aad
insb
sti
dec
inc
ret
cmp
lods
dec
jl
mov
jp
call
mov
push
insl
pop
lret
inc
lret
jno
and
nop
jle
scas
out
gs
in
stc
nop
xchg
push
mov
out
adc
js
pop
icebp
mov
mov
ss
sbb
inc
fmull
xchg
sub
jmp
faddl
outsb
xor
imul
subb
pop
and
aad
sti
popf
xor
xor
ja
add
cmp
inc
xlat
into
mov
cs
pop
lock
shrl
push
decb
cld
xchg
mov
pop
hlt
fldt
rcrl
xchg
sub
or
fwait
sti
xchg
mov
call
xchg
sub
dec
loop
jmp
cltd
xor
out
xchg
jg
dec
mov
or
js
leave
stos
sub
enter
mov
xlat
outsb
enter
pop
ljmp
data16
jecxz
cli
pop
es
aad
jle
dec
or
js
and
ss
pop
clc
dec
sub
xlat
xchg
add
inc
or
arpl
mov
pop
div
xchg
and
cmp
js
sub
pop
sar
bnd
mov
mov
imul
sbb
xchg
cmp
in
in
push
lret
std
pop
add
mov
sbb
push
lcall
mov
je
data16
xchg
mov
lods
test
ror
mov
jle
push
adc
scas
push
ret
loopne
push
cli
dec
repnz
sub
xor
negb
xchg
inc
or
ret
pop
loope
jnp
lahf
inc
mov
push
lret
mov
xlat
jl
mov
iret
xchg
sbb
daa
lods
je
inc
or
addr16
adc
mov
cmp
ja
mov
lahf
inc
outsb
movsb
out
je
jge
int3
ror
daa
lods
push
add
cmpl
int
xchg
cmp
pop
js
test
add
rcr
cmp
cwtl
scas
negl
lods
mov
sbb
shrb
clc
bound
cmp
out
jp
subl
push
rol
pop
add
pop
jge
mov
into
xchg
fstp
cmp
cmpsl
repz
add
mov
jbe
cmpsb
pop
mov
xor
or
cmp
or
jne
cmp
mov
subl
in
xlat
xchg
cmp
cmp
mov
adc
adc
inc
mov
and
dec
adc
call
scas
aaa
cltd
aaa
or
int
and
enter
lea
cld
lods
imul
js
pop
add
movsl
lret
xchg
sub
fdivs
repz
insb
xor
mov
adc
insb
and
decl
add
adc
inc
rorl
outsb
and
icebp
insb
sbb
shlb
aaa
sbb
mov
in
push
test
in
neg
jle
cmc
and
lret
arpl
stos
es
xchg
xlat
test
divl
lahf
hlt
pushl
mov
jmp
jae
ret
repz
mov
mov
xlat
test
jg
pop
std
cli
mov
jo
xor
mov
cmpsl
xchg
inc
aad
mov
out
roll
cld
jge
cmpsb
push
mov
inc
incl
dec
test
and
roll
repz
es
ljmp
inc
jbe
shll
stos
mov
lock
roll
or
scas
sub
out
jno
mov
test
pop
fisubl
adcl
mov
jge
sahf
cmp
addr16
mov
addr16
mov
aas
out
xchg
inc
add
mov
outsl
xchg
sbb
fidivrl
lcall
popf
sub
xlat
orb
movsl
xor
rclb
xor
sub
xor
dec
or
xlat
pushf
cmp
dec
mov
cmpsl
imul
sbb
push
lret
xchg
add
xchg
inc
sbb
inc
adcl
jno
arpl
adc
and
pop
test
sbb
sbb
push
fldl
jae
add
mov
mov
or
fstps
mov
fwait
roll
push
lcall
mov
movsl
mov
mov
xchg
inc
sahf
lods
xchg
inc
sbb
call
inc
xchg
inc
push
pop
xchg
inc
xchg
lea
nop
xchg
and
xchg
inc
lods
scas
xchg
inc
pushf
mov
push
cltd
les
ret
push
adc
fs
mov
sarl
ret
hlt
iret
dec
adc
in
pop
sub
mov
cmp
shlb
out
call
dec
or
inc
adc
into
mov
mov
hlt
dec
add
ss
and
mov
dec
or
mov
add
es
fldl
lret
mov
mov
je
cs
enter
data16
imul
outsl
loope
insl
into
cs
jae
cmp
loope
in
or
out
es
push
loope
jne
dec
sub
cmpsb
mov
mov
jmp
pushf
divl
lcall
adc
ficomps
lret
and
sbb
xchg
js
mov
enter
lods
xor
lock
pushf
sbb
sbb
inc
push
mov
xor
int
add
in
push
mov
mov
xchg
cmp
xor
orl
shlb
jg
negl
outsl
add
add
jo
cmp
sub
cmp
std
and
cs
xor
push
ret
mov
mov
rcrl
push
adc
popa
jns
std
es
xor
ss
int3
dec
push
ret
daa
and
sbb
push
xchg
cmp
push
mov
and
das
mov
xor
dec
das
push
les
fldl
cltd
pop
lret
notb
mov
lret
jle
std
and
mov
pop
iret
lods
adc
faddl
xchg
add
jns
push
lock
sbb
mov
scas
xchg
and
lods
mov
popf
inc
or
stos
ss
push
mov
movsb
daa
daa
sub
lds
adc
mov
add
in
inc
push
mov
mov
lods
flds
stos
sbb
jbe
push
sti
frstor
dec
or
mov
insl
movsb
mov
cmp
test
xor
popf
sub
cmp
jl
xor
rorb
dec
adc
jmp
mov
orb
sub
lret
out
jo
in
fs
popf
cmp
adc
stos
sub
and
in
insb
nop
shlb
in
lret
xor
sbb
mov
pop
mov
movsb
mov
adc
push
pop
dec
ret
inc
adc
xchg
mov
or
push
ljmp
mov
sarb
cwtl
jmp
cmpps
scas
xor
arpl
sub
stc
pop
hlt
xor
mov
sbb
sub
mov
inc
adc
pop
mov
enter
mov
jg
loope
pop
cmpsl
xor
mov
sbbl
or
cmp
inc
adc
sub
xlat
inc
ljmp
rcrb
mov
push
and
xchg
mov
loopne
and
mov
dec
pop
fldcw
or
leave
mov
jne
fwait
lods
sub
pop
std
jbe
or
or
adc
push
or
or
pop
jo
repnz
mov
sub
shlb
aam
mov
movsl
lds
xchg
inc
sbb
out
bound
mov
add
pop
mov
or
jecxz
sub
ljmp
fstp
fwait
cmpsb
sub
or
lea
dec
adc
xor
dec
add
lea
cs
je
shll
push
ret
jb
mov
or
pop
loop
nop
xchg
add
popf
movl
adc
ret
iret
jmp
incl
xchg
inc
setg
lds
enter
xchg
inc
dec
push
negl
mov
stc
pop
ret
xlat
test
mov
test
dec
push
stc
cmp
push
sbb
jp
cmp
xchg
cmp
push
jmp
sti
mov
pop
cmp
jbe
push
mov
mov
in
fnstcw
sbb
stos
popf
or
mov
jg
adc
and
outsl
lock
adc
pop
cmp
mov
lods
int
mov
lods
pop
add
sub
cs
lods
jbe
test
nop
xchg
xlat
stos
xor
lahf
stc
sbb
inc
int3
mov
xchg
clc
dec
in
outsl
pop
out
ja
lahf
mov
addb
xchg
in
jb
sbb
ljmp
and
mov
divl
sbb
pop
push
in
inc
pushf
inc
into
jmp
mov
fistl
sub
jg
fstpt
push
pop
lds
mov
sahf
mov
maskmovq
mull
loope
daa
mov
mov
hlt
enter
aam
mov
das
stos
and
jb
mov
jns
add
sahf
pop
cld
pop
rorl
push
inc
mov
xchg
inc
jo
mov
outsb
je
rclb
inc
xchg
and
movsl
negl
and
jecxz
enter
mov
addl
setne
ret
sbb
clc
and
push
mov
mov
sti
movsb
mov
jne
je
sti
push
cmp
jl
mov
sub
adc
pop
inc
mov
mov
popa
fldt
xorl
mov
add
mov
sub
mov
fwait
inc
cld
mov
adc
into
push
jae
lods
roll
sbb
mov
aad
sbb
fdivrs
xor
mov
roll
xchg
mov
xchg
inc
or
lock
jb
jmp
jne
mov
lods
daa
fstl
rol
add
mov
sbb
push
in
mov
add
shrl
aas
hlt
movsl
cs
xor
push
sbb
push
sarl
pusha
mov
adc
inc
inc
adc
fsts
lds
lds
pusha
sbb
sbb
inc
loope
inc
and
jbe
fwait
test
and
cltd
cmp
aas
int
fldz
inc
adc
add
aad
out
push
shlb
sbb
mov
arpl
jg
cltd
data16
gs
int3
mov
aas
cmp
adc
sub
mov
cmp
lret
inc
push
sbb
dec
orl
push
std
lret
xor
ret
outsb
hlt
jo
ss
fldenv
call
push
xchg
test
push
push
clc
sbb
call
jne
xchg
jg
xchg
ret
loopne
mov
daa
popa
xor
mov
mov
add
mov
or
rolb
cwtl
cmp
out
pop
cli
popf
add
mov
pop
notb
js
out
sahf
or
jno
cltd
ss
jbe
cmp
clc
cld
movsb
sub
mov
and
cmc
cwtl
mov
mov
jo
jae
push
jo
rcrl
ret
popa
cwtl
repnz
fsubrs
jl
subl
or
pusha
inc
int
mov
xchg
out
push
jmp
add
inc
aaa
in
insl
inc
sahf
xchg
inc
cmpsb
sahf
jp
push
mov
xor
cmpsb
push
loop
dec
mov
out
imul
mov
lret
imul
inc
pop
fnsave
lahf
addr16
push
mov
rclb
repz
push
incl
aam
and
pop
sti
shl
arpl
mov
jecxz
inc
sub
mov
lcall
xchg
lret
scas
daa
xor
rolb
stos
push
add
int3
testb
unpckhps
xchg
mov
push
mov
negb
fneni(8087
imul
testb
push
data16
ss
sarb
stos
js
xor
outsb
sbb
lock
rorb
cld
fiadds
mov
and
xchg
in
jb
xchg
ret
xchg
or
popa
sbb
in
aas
inc
icebp
pop
shll
in
imul
cmp
aaa
pop
sbb
cmp
lahf
push
and
loopne
lea
sub
sbb
ret
fisubrl
data16
push
add
sbb
scas
js
test
add
pop
stos
sub
xor
js
loop
cwtl
or
push
push
add
imul
inc
call
pop
rcrb
add
into
xchg
add
cmpsl
pop
or
pop
xchg
mov
mov
popf
nop
test
mov
call
xchg
mov
inc
or
adc
fsubrl
add
aam
leave
xor
dec
xor
xchg
sbb
push
lds
imul
insl
pop
lds
sbb
dec
sub
push
loop
bswap
sar
mov
cmp
movsb
xor
pop
jmp
nop
loope
push
adc
loop
pop
cmp
inc
or
addl
rorl
nop
or
jne
cli
adc
cltd
pop
jmp
int
push
fiaddl
inc
sub
clc
sti
mulb
cwtl
inc
lcall
inc
dec
lret
rcrb
jmp
dec
fwait
inc
jmp
mov
hlt
aad
add
xor
clc
lret
and
cltd
cmp
insb
mov
add
mov
gs
daa
lods
xor
mov
stos
lods
pop
inc
and
push
mov
in
test
fwait
inc
sarl
mov
and
mov
jg
lahf
into
mov
hlt
pusha
arpl
jb
xor
xor
outsl
push
popa
mov
dec
adc
cld
sarb
imul
jae
mov
scas
sub
sub
cmp
rolb
mov
mov
outsl
sbb
add
cmp
sub
aas
imul
sub
loope
fldcw
jmp
aaa
lcall
xchg
call
inc
or
cwtl
ljmp
imulb
sahf
sahf
imul
leave
push
cld
xchg
lahf
pop
mov
sarb
fisttpl
aam
test
leave
pop
pop
ljmp
push
int
jno
sarb
or
lods
popa
out
scas
cmp
sahf
and
enter
mov
mov
mov
mov
jns
ss
pusha
aam
xchg
lret
sub
mov
jno
inc
push
jp
negl
push
fnstenv
and
sahf
push
mov
cli
filds
or
mov
mov
mov
mov
push
ror
mov
scas
mov
jno
out
inc
adc
aaa
push
push
mov
add
mov
stc
pop
mov
push
add
test
lods
sbb
fistpll
inc
ret
insb
xor
pop
repnz
inc
rcll
pop
mov
fwait
mov
cmp
mov
les
and
aaa
fadds
mov
inc
or
ret
test
mov
gs
cmp
mov
movsb
or
push
mov
fs
xlat
mov
ds
push
pop
subl
cs
sub
cmpxchg
push
loope
push
clc
repz
sbbb
xchg
cwtl
inc
int
mov
sbb
xlat
mov
stc
sti
loopne
sbb
out
orb
lcall
outsl
loopne
jnp
ja
outsl
into
sub
fmuls
inc
sahf
or
cltd
and
sahf
cmp
xchg
test
imul
push
incl
jge
adc
lcall
xchg
inc
adc
push
or
pop
ret
sbb
pop
adc
rclb
insl
cmpsl
dec
fidivs
enter
imul
into
xchg
shll
push
add
std
sar
cli
add
mov
push
fdivs
iret
or
loop
mov
cmc
sti
in
outsb
ret
push
lods
sbb
nop
push
lret
pop
cli
lcall
test
bound
int3
cmp
and
jle
xchg
out
scas
pop
dec
in
das
testl
pop
push
xor
dec
mov
shrl
sub
sub
add
mov
mov
inc
into
jl
and
pop
mov
adc
fldcw
push
and
fists
lods
iret
pop
sub
cmpsl
cmp
mov
jp
repz
jae
cli
pop
imul
mov
sbb
jb
cmp
loope
stos
nop
daa
fstpl
icebp
push
adc
cmovb
adcl
test
popf
pop
ss
adc
pop
lds
fwait
push
int
inc
rcrb
je
orl
inc
or
addr16
pop
add
in
pushf
call
jns
outsl
adc
lods
stos
or
and
dec
or
fidivs
mov
pop
loop
inc
xlat
inc
inc
test
mov
test
adc
hlt
pop
imul
mov
pop
xchg
sbb
je
mov
flds
push
mov
jbe
xchg
icebp
push
xchg
adc
fsubrs
sub
decb
into
mov
xor
inc
cwtl
or
add
push
mov
push
jbe
pop
mov
mov
jnp
aad
sbb
push
push
roll
jnp
mov
jne
shll
and
pop
movsb
inc
or
sarb
push
or
out
test
pop
clc
inc
adc
ss
mov
lods
roll
fnsave
push
lds
jle
mov
in
les
mov
icebp
fildl
ret
pop
cmp
out
lret
jbe
js
pop
add
repz
pop
jns
inc
jl
jle
fs
jno
jge
stos
adc
dec
xchg
inc
and
or
stos
lret
add
enter
xchg
adc
mov
xchg
lret
pop
cld
or
loopne
fsubrp
insl
les
sbb
mov
and
mov
iret
inc
fiaddl
lock
jbe
pop
push
clc
xlat
stc
orb
pop
int
lret
data16
scas
sbb
jb
rcr
dec
pop
sub
popf
add
outsb
cs
es
idivl
sub
testl
aaa
pushf
int3
add
mov
sti
out
inc
in
cmp
cs
lods
in
inc
push
inc
clc
push
aam
xchg
mov
lods
int3
out
into
xchg
and
into
rcl
cmp
dec
push
stc
sub
pushf
hlt
jmp
loope
call
insb
out
mov
in
jo
cmpsb
push
clc
mov
push
mov
sub
mov
xchg
repz
orl
dec
psrlq
xchg
cmp
and
fwait
inc
hlt
mov
sub
sbb
xchg
dec
mov
rorl
stc
inc
std
pop
fwait
in
fiaddl
and
or
lock
fildll
mov
or
inc
adc
shrl
test
fstl
push
cmc
pop
pop
inc
xor
xor
cmp
add
push
cmp
sarb
hlt
xor
pop
std
sbb
mov
adc
sahf
cmp
andl
inc
dec
or
stos
pop
std
cs
mov
xchg
je
in
das
test
ret
dec
push
or
inc
adc
jge
outsb
rcll
or
and
mov
inc
es
orl
cwtl
push
inc
inc
dec
adc
sbb
lods
pop
inc
pop
add
aam
mov
ret
xchg
xor
sbb
arpl
pop
fs
pop
std
mov
jne
sbb
pop
sahf
pop
sub
aad
mov
jns
add
mov
mov
imulb
or
and
in
jae
pop
in
mov
pop
add
push
in
mov
outsl
xor
cmp
sub
adc
lcall
sub
in
rorb
and
popf
add
repz
fwait
inc
aaa
out
je
and
mov
xchg
cmp
push
push
or
fstpt
mov
cmp
sahf
inc
push
and
fisttpl
iret
data16
xchg
cmp
jb
movsl
insb
out
lret
out
outsl
out
push
icebp
and
movsl
sbb
push
cli
lcall
mov
sub
les
fsubrs
sub
adc
fs
ja
xchg
cmp
cmpsb
test
push
loope
or
es
pop
aaa
cmpsb
outsl
xchg
andl
dec
or
cmp
je
add
shrl
scas
adc
dec
test
loop
push
cmp
sub
into
lea
mov
push
jecxz
sub
pop
enter
xchg
adc
rolb
stos
je
mov
sarl
push
fdivrs
push
cmc
mov
movsb
mov
add
cwtl
ret
jecxz
adc
aaa
rorb
insb
movl
mov
cmc
in
fiaddl
xchg
icebp
jb
mov
stos
int3
xchg
test
mov
pop
cld
mov
in
jb
loopne
test
mov
mov
mov
adc
pop
sub
repnz
add
pop
out
imul
lods
int3
imul
sbb
js
rolb
cmp
test
and
add
ja
push
sti
jno
or
mulb
xchg
inc
or
mov
clc
fs
lods
lods
das
mov
ljmp
out
mov
inc
sarl
sub
mov
cwtl
lea
or
add
int3
mov
enter
sub
push
pop
mov
fwait
stos
mov
pop
cltd
out
xor
inc
xchg
xchg
scas
xchg
sti
pop
lret
sbb
jns
push
imul
bound
cld
dec
jb
sbb
addr16
mov
loopne
sti
pop
sti
hlt
push
shll
ljmp
dec
cmp
aad
lahf
pusha
jmp
rcrb
fsubr
mov
int
scas
xor
ret
mov
xchg
sarl
xlat
jp
jno
push
rcll
faddl
das
mov
or
lcall
inc
or
mov
outsl
dec
adc
rclb
adc
mov
cli
pop
leave
out
mov
mov
int
adc
sub
in
push
add
add
shll
or
cmc
cmp
popa
adc
rcll
inc
cmp
add
ret
xchg
mov
mov
xor
sahf
cmp
push
movsl
inc
xchg
pop
add
addr16
insl
das
jns
addr16
aas
cmpsb
sub
pusha
jmp
lea
mov
mov
inc
insl
mov
out
xchg
pop
pushl
cmpsb
sbb
pushf
stos
pop
add
mov
repnz
fmuls
ret
adc
dec
jg
sub
fidivrs
stos
daa
xchg
sbb
adc
mov
mov
mov
fildll
add
pushf
outsl
pusha
pop
cld
outsb
jb
add
and
adc
out
insl
dec
shrb
push
jbe
inc
lahf
int3
mov
mov
outsb
in
movsl
pop
lods
sub
mov
adcl
sbbb
sahf
pop
or
push
movsb
mov
xor
inc
mov
push
sarb
xchg
cmp
mov
jg
mov
add
clc
jns
cmp
shr
lods
sub
dec
push
shll
push
and
add
mov
cmp
jo
push
movsl
fdivp
push
in
and
movsl
sub
xor
in
je
gs
std
fadds
int
test
or
and
jg
arpl
mov
jb
push
pop
xor
mov
stos
push
mull
pop
add
or
pop
das
mov
or
imul
das
scas
lret
mov
cmpsb
outsb
sbb
repnz
cmp
xor
cs
xchg
mov
lahf
cmp
ja
pop
es
jmp
fnstsw
lock
fisubrl
xor
and
and
roll
add
push
or
mov
adc
cli
and
fcmove
ds
jo
mov
inc
loope
mov
fdivrs
inc
or
sub
jp
insb
cmc
pop
push
cwtl
stc
dec
filds
adc
mov
orb
test
lcall
test
cmpsl
xor
or
add
outsb
in
fsubl
test
add
cmp
hlt
pop
shr
jmp
fcoml
fidivrl
add
jbe
ret
push
pushf
call
fisubl
repnz
adc
jmp
gs
jl
loopne
ret
mov
ss
fadds
adc
inc
push
or
inc
or
repz
jb
xchg
cmp
into
sub
cmp
cltd
or
push
stc
pop
lds
cmp
mov
jmp
or
pop
mov
ret
orl
mov
sub
xor
repnz
mov
movsb
sub
push
divl
xchg
adc
pop
and
add
mov
jg
loopne
sbb
and
or
pop
call
repnz
test
mov
dec
out
pop
dec
or
idiv
pop
mul
pop
cld
lock
outsl
in
or
cld
jae
push
imul
lahf
cmp
hlt
rcll
xchg
aas
cmp
insl
ljmp
lods
sub
sbb
mov
cld
add
pop
cmp
into
xchg
andb
aaa
mov
clc
aam
and
ljmp
iret
push
cmp
or
xchg
pop
fiadds
mov
test
sahf
or
push
insl
in
add
inc
pmaxsw
cli
mull
mov
jecxz
fstpt
mov
stc
fwait
push
mov
jb
pop
add
mov
scas
sub
in
dec
or
jae
adc
imul
jb,pn
andl
lcall
cmp
sub
pop
jnp
fcompl
and
decb
xor
data16
pop
iret
jle
and
adc
pop
cli
push
dec
mulb
push
adcl
lret
mov
add
negl
mov
or
pop
inc
scas
or
adc
and
insb
and
xorb
aaa
fisttpll
lret
data16
bound
mov
jg
push
mov
arpl
aad
mov
rorb
fstpl
ja
arpl
cmpsb
dec
adc
jns
cmpsl
sub
outsb
push
xchg
or
mov
jmp
push
add
cmc
or
and
jg
xchg
popa
repnz
fstl
mov
sahf
shrl
dec
stc
das
push
add
stos
fnstsw
idivl
xchg
lods
dec
adcb
inc
adc
cmc
fidivrs
mov
jno
or
jmp
repnz
leave
cmp
and
stos
rclb
sarl
jbe
shll
hlt
popa
dec
push
insl
ljmp
add
pop
jae
pop
test
mov
pop
iret
fldenv
outsb
pop
ljmp
mov
imul
sarl
mov
call
jecxz
rolb
xchg
lds
fiadds
jne
lock
adc
ret
inc
ljmp
xchg
insb
cmc
addr16
lcall
add
pinsrw
add
std
gs
in
int3
sub
pop
add
scas
add
shlb
xchg
cmp
mov
test
imul
adc
add
sbb
mov
mov
xlat
xchg
outsb
in
push
adc
mov
movsb
into
lea
out
insl
xchg
xchg
into
lea
mov
aaa
movsl
shll
add
xchg
cli
pop
mov
rolb
insb
mov
inc
jns
jae
xchg
insl
xchg
insb
add
mov
cmpsl
sub
or
dec
mov
fs
rcl
lock
bound
hlt
pop
jp
pop
js
iret
mov
dec
push
scas
cwtl
pop
test
push
xchg
or
mov
test
insl
repz
fstpt
pop
jge
xor
add
jmp
dec
lret
cmp
inc
jmp
pushf
aas
sbb
dec
daa
stos
push
or
sbbb
out
jno
fs
xor
and
test
lcall
sub
fmulp
pop
adc
sub
sub
jge
dec
sub
lods
mov
pusha
mov
dec
adc
mov
mov
and
aas
jbe
push
je
in
jo
out
jecxz
test
stc
mov
int3
fimuls
and
and
push
sbb
mov
xchg
pop
dec
or
into
leave
lea
inc
adc
stos
test
mov
push
divl
xlat
jnp
popa
cmp
loope
in
cmp
pushf
pop
fiaddl
cmpsb
out
mov
loopne
mov
push
pop
stc
arpl
pop
push
adc
movsb
or
mov
pop
ret
mov
dec
lea
push
mov
scas
stos
sbb
mov
pop
add
cmp
xlat
fcomip
bound
adc
xor
adc
xor
test
rclb
ret
fucomip
rclb
dec
loope
mov
push
loope
stos
dec
xchg
mov
mov
cmp
jnp
mov
es
add
les
mov
orb
dec
push
arpl
sub
aaa
jbe
out
and
adc
dec
iret
mov
mov
and
iret
lds
js
sub
inc
outsb
lahf
aaa
jl
fidivs
fs
cwtl
jl
xchg
scas
mov
xor
or
stc
repz
cmpsb
hlt
xchg
jae
mov
ret
sbb
shrb
stos
inc
rdpmc
mov
and
lcall
insl
out
adc
fstpt
dec
jmp
loopne
pop
jge
and
lret
mov
mov
nop
movsb
scas
insl
out
cwtl
mov
test
mov
fmul
mov
jge
popa
xchg
inc
jecxz
dec
or
inc
jl
dec
xchg
clc
pop
in
pop
dec
or
xrelease
rcr
subl
insb
inc
jbe
lret
stc
pop
and
jnp
in
cmp
jg
adc
and
cmp
mov
out
shrb
fidivrl
and
push
iret
mov
cli
in
lahf
inc
imul
cmc
ss
gs
and
fs
roll
dec
js
cli
lods
mov
dec
sti
imul
insl
pop
mov
sbb
roll
sbb
fnstenv
test
add
leave
pusha
aaa
aas
push
out
insl
clc
out
sub
in
je
repnz
shrl
mov
add
dec
test
jno
ss
jg
lock
mov
lods
xor
cmp
adc
inc
orl
xor
ret
arpl
std
push
ja
add
add
push
pop
mov
test
fwait
xor
push
iret
dec
cmpsb
sub
and
dec
push
xor
test
lret
and
inc
push
mov
fidivrs
mov
dec
adc
test
testl
movsb
rorb
adc
push
and
cmp
test
xlat
dec
adc
aad
pandn
out
je
or
ja
jo
pop
add
jl
jge
cmpsl
push
out
add
fdivrl
movsb
dec
xor
iret
sub
aas
mov
mov
or
dec
adc
pop
or
jp
mov
cwtl
mov
lods
inc
adc
lret
add
aad
test
jg
push
pop
repz
popf
or
and
pop
clc
cwtl
das
sub
fldcw
iret
pusha
testl
and
push
repnz
adc
cli
xchg
cs
fnstenv
jmp
testl
repz
lret
inc
loope
cmp
cwtl
xor
pop
mov
jmp
loop
mov
fiaddl
xchg
or
inc
xchg
sub
mov
mov
in
cmp
scas
push
ljmp
pop
or
push
lods
es
cmpsl
incb
leave
mov
sti
push
stc
sbbl
pop
aam
icebp
mov
ret
hlt
dec
mov
lds
fidivl
addr16
jecxz
out
clc
and
push
lods
jb
mov
aas
xchg
xor
les
ds
in
jmp
out
jo
imul
mov
mov
lods
inc
shrd
mov
xor
popa
ds
test
jg
push
pop
repz
popf
or
mov
sub
lods
dec
mov
jl
pusha
idiv
popf
aam
iret
and
push
lock
je
xor
inc
adc
stc
xchg
cs
fidivl
out
jecxz
outsb
clc
mov
rcll
repnz
int3
inc
fbld
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
xchg
sub
mov
mov
arpl
jl
shrl
into
pop
icebp
lcall
mov
push
stos
daa
mov
movsl
cld
inc
fsubrl
dec
arpl
jg
aam
dec
mov
repnz
rcll
repnz
mov
movb
lret
gs
in
in
stc
nop
push
mov
pop
scas
jo
mov
cmp
pop
test
nop
jecxz
ljmp
jno
addr16
es
fldt
mov
pusha
std
aas
cs
mov
pop
hlt
adc
sahf
push
mov
and
xor
jp
fisubrl
int3
popa
clc
std
fwait
aad
int
adcb
out
repz
jb
xor
jb
mov
mov
in
in
insb
stc
nop
sahf
aaa
imul
mov
mov
mov
frstor
jmp
xor
pop
bound
jecxz
mov
xchg
sub
add
vpmadcswd
fs
cmp
xorl
or
push
test
mov
mov
lds
sti
jge
aad
dec
sahf
sbbb
imul
popf
icebp
mov
test
inc
mov
movl
dec
in
ljmp
call
or
int
pop
test
jmp
mov
pop
loop
jb
gs
jge
xchg
fwait
xchg
scas
inc
or
int3
arpl
inc
xlat
sub
ljmp
rorl
lahf
add
jl
shlb
lcall
inc
mov
stc
sti
cltd
insl
lret
sbb
sbb
hlt
mov
jo
mov
ret
mov
mov
jecxz
in
push
xchg
pushf
xor
sbb
mov
fldt
in
xchg
cs
pop
pusha
mov
or
and
sub
aam
cltd
add
and
loopne
ds
add
test
lret
sti
push
or
dec
cmpsb
sub
xlat
outsl
cltd
xor
ret
mov
cmc
dec
gs
jnp
insl
dec
pushf
sbbl
imul
cmp
mov
mov
enter
je
popa
dec
out
call
insl
add
cmp
mov
pop
mov
cmp
stos
inc
mov
push
in
adc
jae
arpl
out
xor
pushf
test
scas
inc
or
int
pop
stc
inc
fsubrs
jle
xorb
or
shlb
daa
mov
and
fsubl
enter
xchg
xlat
outsb
leave
sbb
mov
mov
stos
outsb
sarl
rclb
adc
xchg
lcall
mov
xchg
iret
fldcw
in
xchg
sub
pop
pop
mov
or
jg
jl
add
add
mov
mov
fidivs
cmpsl
in
test
leave
pop
hlt
cli
push
or
dec
movsb
sub
aad
lcall
ret
hlt
dec
gs
jns
xlat
outsb
inc
lcall
lcall
stos
in
inc
mov
leave
aas
xchg
fnsave
push
out
out
xchg
sbb
sbb
cmp
stos
inc
mov
push
in
push
lods
leave
pusha
fildll
jae
popa
add
jg
adcb
test
scas
inc
pop
cmpsb
and
xlat
sub
fs
clc
inc
fldcw
jl
subb
or
iret
and
mov
and
movsl
inc
mov
cli
notl
sbbb
jmp
mov
stos
insl
mov
xor
mov
loopne
out
data16
xchg
cwtl
xor
fs
mov
mov
cmp
cmp
stos
inc
or
in
sub
pop
pop
mov
or
jle
jge
add
fwait
add
dec
mov
and
fdivl
xlat
cmpsb
std
in
test
enter
push
or
dec
mov
fwait
xor
sarl
ja
fsubrs
cwtl
sbbl
testb
cmp
ds
lret
fnsave
push
call
push
mov
push
in
sbb
aaa
mov
into
mov
fistl
or
lret
sub
call
sub
aam
inc
push
movsl
and
daa
int
pop
testl
lods
dec
pusha
idivl
or
int
sub
and
frstor
fs
notb
sbb
testb
cmp
imul
leave
mov
ficoms
pcmpgtw
xchg
xchg
xor
bound
mov
mov
cmp
cmp
stos
inc
or
out
mov
enter
jne
loope
out
scas
add
add
dec
mov
and
xlat
movsb
cld
out
test
pop
cmc
testl
adc
mov
fwait
xor
mov
data16
jbe
fsubrs
xchg
test
leave
testb
mov
rclb
xor
cmp
fidivs
pop
push
call
adc
sbb
xor
push
lods
inc
mov
push
in
or
je
pop
std
call
sub
shll
mov
pop
cmc
inc
fldenv
jp
subl
mov
lret
pop
sub
push
in
pushf
xor
jb
fisubs
les
cmc
xchg
fsubrs
push
test
dec
in
lea
push
cmp
rclb
xor
mov
fcoml
or
outsb
add
call
or
sarl
aam
inc
push
pop
pop
out
lea
enter
jbe
loopne
out
lods
add
fwait
push
mov
xchg
and
fnstenv
fsubs
les
cmc
dec
or
adc
shrb
xor
mov
addr16
je
fnstenv
xchg
test
arpl
mov
mov
lods
call
or
cmp
push
jmp
adc
sbb
xor
lods
inc
xchg
push
out
or
jne
pop
sti
jmp
sub
shll
mov
push
repz
fisubl
in
test
lret
or
leave
sbb
popf
xor
jo
fbld
ret
pause
fnstenv
adc
sbb
jecxz
mov
ss
pop
in
mov
lret
loopne
inc
ficoml
or
xchg
xchg
sub
push
pop
mov
mov
jg
and
pop
cmp
cmp
stos
inc
add
pop
lock
ja
fidivrs
jle
call
pushf
std
push
mov
test
and
dec
movsl
shrl
jo
fldenv
ret
pusha
div
dec
or
push
inc
popf
sub
into
push
dec
loopne
mov
addr16
jb
fidivl
xchg
test
out
cmp
mov
lods
out
rcrl
xor
jbe
pop
push
ljmp
jno
fbstp
sbb
xor
inc
test
push
out
pop
cmpsl
int3
arpl
sub
pop
cli
ljmp
dec
or
add
iret
push
repnz
jbe
test
leave
or
enter
dec
jmp
dec
fistps
shlb
fidivl
adc
adc
mov
lods
mov
jmp
xor
mov
fsts
or
xchg
xchg
sub
pop
mov
mov
jle
and
shrl
mov
popa
push
stos
ja
fdivl
jg
std
xchg
sub
lret
push
popf
cld
push
mov
sbbb
push
mov
ret
repz
or
pop
inc
fwait
sub
int3
addr16
xor
push
mov
addr16
jo
xchg
test
popa
stc
nop
xchg
in
cmp
mov
scas
out
rcrl
ss
mov
jbe
pop
push
jmp
xchg
shrd
xor
mov
call
shlb
push
out
push
cmpsb
int3
arpl
daa
jne
pop
stc
ljmp
dec
or
add
iret
push
icebp
inc
jne
test
enter
xchg
adcb
sbb
rorl
xor
sahf
cmp
lock
jno
adc
adc
cmp
mov
xor
mov
loopne
cmp
pop
xchg
xchg
sub
pop
mov
mov
jge
and
xor
push
pop
lock
lret
test
call
sub
lret
sti
dec
mov
sbbl
ficompl
shll
dec
or
pop
inc
lcall
cwtl
in
dec
loopne
mov
addr16
outsl
or
test
pusha
stc
nop
xchg
jecxz
cmp
rcrl
ss
mov
jbe
pop
push
jmp
fdivr
xchg
push
stos
jb
sbb
xor
scas
inc
adc
out
add
es
pop
clc
ljmp
dec
or
lcall
shlb
out
inc
je
test
or
clc
xchg
adcb
sbb
ret
sahf
xor
popf
cmp
out
mov
jno
adc
adc
xchg
xor
lods
arpl
xor
mov
loope
cmp
push
jmp
nop
sub
pop
mov
mov
jnp
and
xor
lods
inc
add
icebp
xchg
lret
test
pminub
cmpsb
sti
xchg
sub
stc
dec
mov
sbbb
mov
shrl
popf
hlt
lock
mov
push
movsl
js
adcb
cltd
sub
lret
xor
sbb
mov
ljmp
popl
nop
nop
loop
cmp
pop
scas
jecxz
ret
add
int
mov
ja
push
push
jmp
xchg
or
cs
pop
cld
nop
daa
cmpl
inc
adc
int3
arpl
and
ljmp
dec
or
fwait
es
push
in
inc
fistpl
jae
xchg
or
pop
ret
sbb
dec
in
xor
pushf
aaa
mov
out
mov
jno
ja
packsswb
lods
popa
mov
pop
call
or
jns
aam
jmp
mov
jo
pop
scas
push
mov
jns
and
xor
lods
inc
push
pop
repnz
lret
bound
jns
xlat
jb
andb
sahf
testl
mov
shrb
fistpl
mov
jne
sbbl
bound
loop
mov
push
call
or
jae
lea
xchg
mov
movsl
cmp
mov
scas
loope
ret
pop
add
into
xor
push
in
test
call
fldcw
sub
cmp
mov
scas
inc
jg
pop
lock
ja
push
hlt
jmp
es
sub
inc
or
cld
cltd
daa
mov
dec
jmp
fcompl
lock
les
movsl
cmc
popl
les
lahf
ss
dec
loop
xor
imul
mov
nop
or
cs
scas
pop
mov
pop
out
xor
jp
rclb
add
lea
or
pop
mov
ja
es
lret
cld
push
pop
repz
adc
jo
andl
dec
mov
jl
daa
mov
iret
push
repnz
mov
adc
aas
xchg
cs
mov
jecxz
mov
push
out
push
imul
je
mov
xchg
mov
cmpsb
cmp
fbstp
les
add
iret
xor
push
in
sbb
xchg
or
push
mov
clc
xchg
sub
jge
shrl
iret
pop
icebp
add
js
push
repnz
andl
mov
cli
xchg
sub
dec
jmp
icebp
mov
ret
repz
lds
mov
jecxz
xor
add
xchg
jae
or
and
fsqrt
xchg
or
ds
sub
scas
pop
mov
pop
in
ss
push
in
cmp
push
jmp
pop
add
push
lods
and
cmpsl
ds
leave
scas
inc
sti
push
pop
repz
andb
or
jp
sub
int
inc
fstpl
mov
adc
ds
vmaxps
jecxz
mov
push
in
push
imul
mov
mov
frstor
mov
xor
pop
cmp
xor
in
adc
xchg
or
mov
notl
shrl
into
pop
icebp
lcall
jns
push
lock
andl
xchg
cmpsb
inc
or
stc
xchg
sub
dec
out
fstpl
outsb
repnz
rcll
repnz
movb
adc
in
xor
add
test
jae
or
xchg
or
aas
xchg
sub
scas
pop
mov
pop
in
ss
add
push
jmp
pop
add
push
stos
and
movsl
cld
aas
sub
dec
pop
hlt
jg
into
gs
mov
in
sbbl
or
js
sub
inc
cltd
aad
lret
gs
ficoms
mov
adc
cmp
das
mov
mov
in
mov
push
jecxz
imul
add
jbe
mov
xchg
mov
cmpsl
ds
lds
cmp
cs
mov
push
out
adc
cwtl
push
mov
pop
mov
cmc
xchg
sub
jp
aam
dec
mov
jp
pop
repnz
fwait
iret
data16
jp
push
out
in
test
jb
das
movsb
inc
or
notl
aad
dec
in
ficoms
insb
repz
mov
sbbl
adc
movl
dec
in
das
mov
add
sbb
mov
mov
cmp
sti
xchg
pop
pop
test
mov
mov
pop
loop
aaa
into
stos
add
jge
int3
push
in
std
push
add
xchg
je
push
test
mov
mov
lds
cmc
jge
iret
dec
sahf
jl
shrb
test
mov
mov
roll
insl
leave
arpl
xchg
ljmp
out
adc
cmp
mov
in
scas
rcrl
insb
add
loopne
xor
mov
mov
fldcw
mov
sub
pop
pop
sti
cmp
sub
in
mov
pop
out
jle
add
shlb
xchg
sub
inc
mov
js
pop
repz
cltd
shlb
sbb
adc
out
test
jo
xor
ret
mov
cmc
xchg
sub
ret
insl
dec
jecxz
fists
hlt
mov
adc
mov
fisubl
out
sub
insl
add
sbb
mov
mov
cmp
cld
xchg
add
sbb
loopne
cmp
test
lret
sti
push
add
or
cmpsb
and
mov
ret
mov
cmc
dec
pop
idivb
shlb
pushf
jge
into
imul
xor
mov
mov
ret
xlat
outsb
popa
dec
loopne
call
addr16
in
adc
cmp
movsb
cmp
lods
ret
xor
arpl
loope
xor
xchg
test
test
setns
mov
xor
xchg
xorb
aas
mov
cs
xchg
pop
lcall
sub
mov
add
xor
cmpl
pop
push
dec
or
sub
jmp
sbb
xlat
sbb
jg
push
popf
mov
in
rolb
push
mov
cmpsl
gs
pop
rol
sub
int3
push
iret
jecxz
lret
dec
mov
push
or
inc
xor
lds
pop
mov
mov
pop
or
jnp
jmp
aas
adc
aaa
mov
clc
fidivs
fstps
jb
sbb
ret
xor
xchg
cmp
shrb
inc
fs
lock
ljmp
fstp
push
mov
cltd
push
mov
inc
xor
push
inc
cs
addb
insb
test
repnz
push
adc
out
test
pop
iret
vmovss
or
mov
dec
jne
pop
mov
ret
xlat
mov
fucomp
jmp
xchg
jl
xchg
jg
cs
sub
fisubrs
out
push
shll
aaa
loope
inc
dec
dec
or
push
outsl
pop
xor
jg
gs
out
dec
ja
jecxz
sbb
dec
cmp
mov
mov
cld
push
sub
pop
call
rcrb
mov
push
add
shrb
pop
jl
xor
ret
and
repz
pusha
xchg
call
lods
std
dec
loop
adc
xlat
dec
fld
jmp
xor
push
pop
xchg
push
cmc
xchg
ss
or
jns
call
data16
mov
push
xor
mov
stos
and
ret
fisubrl
sub
sbb
sbb
ljmp
adc
lods
or
pop
jmp
outsb
pop
mov
xor
pop
mov
fimull
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
dec
add
out
cmpsb
push
xchg
fists
dec
jl
jns
push
cmp
movsb
iret
jb
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
adc
mov
aaa
test
inc
hlt
test
cmp
dec
nop
mov
push
lock
cmp
xor
