add
adc
add
mov
inc
add
and
fcomps
inc
add
and
inc
add
and
mov
inc
add
add
add
add
cmp
add
add
inc
inc
add
or
or
or
andb
add
enter
add
push
add
add
add
jb
add
add
push
fdivrl
add
add
push
jge
add
add
jle
add
add
jle
add
and
push
inc
add
add
and
inc
add
and
sub
add
pop
das
inc
add
and
xor
add
or
add
add
inc
inc
add
add
insl
inc
add
add
jb
add
add
jae
add
add
add
add
add
add
adc
cmp
sub
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
push
push
add
mov
mov
movl
addl
mov
fildl
add
fstpl
call
add
fstp
xor
mov
mov
shl
sub
shl
add
shl
sub
add
add
xor
inc
inc
cmp
jl
lea
mov
mov
mov
rep
mov
mov
fildl
mov
mov
fstpl
mov
fildl
fstpl
xor
mov
mov
shl
sub
shl
add
shl
sub
add
add
xor
inc
inc
cmp
jl
lea
mov
addl
lea
mov
movl
cmp
jle
cmp
lea
mov
movl
mov
cltd
idiv
mov
call
xor
xor
mov
movl
mov
movl
fldl
faddl
add
fstpl
call
add
mov
mov
mov
lea
mov
rep
fstp
mov
mov
fildl
fstpl
mov
fildl
fstpl
movl
add
pop
pop
pop
ret
add
add
add
add
in
add
push
mov
cmp
jge
inc
cmp
jl
mov
mov
cmp
jge
cmp
lea
mov
mov
cltd
idiv
mov
mov
mov
cmp
jge
cmp
lea
mov
mov
cltd
idiv
mov
mov
mov
mov
mov
mov
xor
movl
pop
mov
pop
ret
add
add
inc
add
cmp
push
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
push
lea
mov
call
test
jne
mov
jmp
cmpl
je
call
jmp
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
incl
mov
incl
push
push
call
add
push
call
pop
mov
test
je
mov
mov
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
and
inc
add
add
je
cmp
bound
pop
popa
insb
insb
outsl
arpl
add
adc
add
add
add
push
mov
add
mov
call
movw
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
add
add
nop
add
cmp
fs
popa
insb
insb
outsl
arpl
sub
add
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
inc
add
add
jae
cmp
gs
gs
imul
add
push
mov
mov
pop
ret
nop
nop
push
mov
mov
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
add
mov
call
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
lea
incl
mov
incl
push
push
call
add
mov
pop
ret
push
call
pop
ret
push
mov
add
mov
call
movw
incl
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
subl
push
push
call
add
mov
mov
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
push
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
call
lea
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
call
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
lea
mov
and
andl
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
jmp
jmp
lea
push
call
pop
test
jne
call
push
call
pop
jmp
call
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
call
mov
add
mov
and
add
add
cmp
jae
mov
jmp
lea
and
mov
and
cmp
jne
call
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
jmp
call
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
call
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
call
test
je
mov
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
call
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
push
call
add
push
push
push
push
call
add
push
call
add
ret
nop
nop
nop
push
mov
add
mov
call
movw
push
call
incl
incl
incl
incl
movl
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
call
decl
decl
push
push
call
add
decl
decl
push
push
call
add
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
nop
nop
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
dec
sub
add
push
add
cmp
bound
pop
arpl
je
add
call
add
add
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
add
inc
add
add
je
cmp
bound
pop
je
jo
imul
add
add
add
add
add
add
xor
incl
add
add
inc
add
add
add
add
add
sub
add
inc
add
push
push
push
inc
dec
jne
gs
push
mov
push
mov
test
je
cmpl
je
xor
mov
push
call
testb
je
push
call
pop
pop
pop
ret
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
call
movw
push
call
movl
incl
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
add
mov
call
movl
cmpl
je
movw
mov
mov
mov
decl
push
mov
push
call
add
testb
je
mov
push
call
pop
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
cld
repnz
lea
mov
mov
repnz
not
sub
xchg
mov
shr
shr
cld
rep
mov
and
rep
mov
pop
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
mov
add
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
add
push
push
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
cmp
jne
mov
jmp
cmpl
je
mov
testb
jne
cmpl
je
mov
testb
je
xor
jmp
push
call
pop
push
push
call
pop
mov
pop
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
sete
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
mov
push
push
push
mov
call
cmpl
mov
jne
lea
mov
push
push
push
push
push
push
push
mov
mov
lea
mov
push
push
call
add
test
je
testb
je
xor
jmp
sub
cmpl
je
push
push
push
call
add
mov
jmp
mov
mov
add
sar
and
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
test
jne
test
jne
push
call
pop
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
cmpl
jne
cmpl
je
mov
jmp
cmpl
jne
mov
jmp
mov
mov
movzbl
lea
push
call
pop
mov
push
inc
push
pushl
call
add
mov
movb
mov
jmp
pushl
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
or
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
xor
dec
add
cmp
je
jo
pop
imul
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
xchg
cmp
add
push
add
gs
imul
jae
add
lock
inc
add
add
add
add
add
in
push
mov
test
je
push
push
call
add
testb
je
push
call
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
push
call
pop
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
push
call
pop
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
mov
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
jmp
add
mov
sub
cmp
jb
mov
sub
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
call
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
push
call
cmpl
pop
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
push
call
pop
mov
pop
pop
pop
ret
nop
push
push
push
push
call
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
push
mov
cmpl
jne
push
push
push
call
add
mov
mov
mov
push
call
pop
cmpl
je
call
pop
ret
nop
nop
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
push
push
call
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jl
cmp
jle
mov
call
mov
movsbl
mov
jmp
neg
cmp
jge
call
movl
call
mov
or
pop
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
push
push
call
add
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
sub
mov
cltd
idiv
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
push
mov
cmpl
jne
push
push
push
call
add
mov
sub
mov
cltd
idiv
mov
mov
push
call
pop
cmpl
je
call
pop
ret
push
push
call
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
call
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
test
jne
fldl
jmp
fldl
fstpl
fwait
test
jne
fldl
jmp
fldl
fstpl
fwait
mov
lea
mov
mov
mov
push
call
pop
test
jne
mov
push
push
push
lea
push
call
add
add
sub
jb
jmp
call
movl
jmp
call
movl
lea
push
call
pop
fldl
pop
pop
mov
pop
ret
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
call
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
fldl
mov
shl
je
jb
fsqrt
pop
ret
fstp
pushl
pushl
push
lea
push
push
push
call
add
jmp
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
push
call
mov
call
mov
push
add
call
mov
pop
pop
ret
nop
nop
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
call
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
call
call
call
mov
push
call
pop
call
pop
pop
ret
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
push
push
call
add
ret
nop
nop
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
call
mov
test
je
mov
test
jne
mov
jmp
xor
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
les
add
jbe
add
jne
add
jbe
add
inc
add
inc
add
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
cmpb
mov
jne
movl
push
push
call
movb
push
call
pop
mov
inc
jne
call
movl
or
jmp
cmp
je
cmp
jne
mov
jmp
call
mov
test
jne
or
jmp
mov
test
jne
push
call
pop
mov
test
jne
call
movl
or
jmp
xor
mov
xor
inc
mov
add
cmp
jl
mov
mov
mov
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
cmp
je
cmp
jne
mov
jmp
call
mov
test
je
mov
test
jne
mov
jmp
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
mov
ret
call
mov
ret
push
add
xor
movl
lea
push
call
cmpl
jne
mov
push
lea
push
lea
push
call
call
add
mov
add
pop
ret
nop
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
call
mov
test
jne
call
mov
call
mov
mov
pop
ret
nop
nop
push
mov
push
call
pop
mov
test
je
mov
mov
jmp
push
call
pop
mov
test
je
push
push
push
call
add
test
je
movl
xor
xor
mov
xor
mov
xor
mov
mov
cmpl
jne
mov
push
call
pop
mov
test
jne
push
call
pop
xor
jmp
mov
push
push
mov
push
call
add
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
mov
push
call
pop
mov
mov
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
push
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
mov
push
call
pop
mov
mov
test
jne
pop
pop
ret
nop
push
mov
push
call
cmpl
jl
mov
push
call
pop
mov
shl
lea
add
push
call
mov
mov
shl
lea
add
mov
push
incl
call
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
mov
mov
rep
movsb
mov
push
lea
push
call
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
call
movl
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
add
inc
add
lea
add
inc
add
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
outsl
jb
popa
outsb
and
sub
sub
jns
imul
xor
and
jb
popa
outsb
and
jb
outsl
jb
je
outsl
outsb
add
add
add
inc
add
adc
ficoms
inc
add
inc
add
inc
add
add
add
mov
inc
add
outsb
inc
add
jo
add
jb
add
add
add
int3
inc
add
inc
add
nop
aam
inc
add
fwait
inc
add
fwait
inc
add
inc
add
fwait
inc
add
lcall
rcrb
add
add
fwait
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
fwait
inc
add
pushf
inc
add
pushf
inc
add
inc
add
pushf
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
inc
add
fwait
inc
add
pushf
inc
add
inc
add
fwait
inc
add
fwait
inc
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
in
add
push
push
push
movb
movb
movb
movb
movb
mov
mov
mov
mov
mov
mov
mov
mov
movw
mov
cmp
je
mov
mov
add
mov
cmp
jne
mov
cmp
je
mov
cmp
je
movb
ret
movb
movb
mov
movzwl
test
jl
inc
xor
lea
mov
add
mov
movb
mov
mov
add
mov
mov
movb
movb
inc
add
dec
jne
movw
mov
mov
add
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
mov
add
mov
cmp
jne
subl
ret
movb
movw
movw
movb
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movb
ret
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
dec
test
jb
inc
movl
mov
add
mov
shl
add
mov
cmp
jne
mov
add
mov
cmp
jne
mov
cmp
je
mov
add
mov
cmp
jne
mov
cmp
je
mov
add
mov
cmp
jne
mov
add
mov
add
add
mov
add
mov
add
movzwl
shl
add
mov
mov
mov
add
mov
jmp
incl
dec
jne
lea
push
push
call
mov
call
cmpl
je
int3
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
movw
movw
mov
cmp
jne
mov
cmp
jne
mov
xor
int3
mov
lea
push
push
call
mov
lea
push
call
mov
add
mov
cmpw
jb
subw
jmp
lea
push
call
mov
cmp
jne
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
movl
mov
push
push
push
call
push
call
mov
mov
push
push
call
push
call
mov
mov
push
push
call
push
call
push
call
mov
inc
cmp
jle
mov
incl
cmpl
jbe
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
push
push
call
mov
push
push
mov
push
push
call
mov
call
pop
mov
movb
movb
movb
xor
inc
mov
add
mov
dec
mov
cmp
jne
mov
cmp
jne
mov
inc
mov
cmp
jne
mov
add
mov
test
jl
inc
xor
mov
add
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
imul
movzbl
xor
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
imul
movzbl
xor
mov
inc
dec
jne
mov
push
lea
pop
jmp
pop
pop
pop
mov
pop
ret
nop
inc
and
mov
add
add
lcall
incl
push
inc
add
add
call
push
test
incl
test
test
stc
inc
test
lea
mov
push
test
lret
mov
jmp
decl
inc
mov
incl
or
jmp
mov
decl
add
call
xor
pushl
inc
idiv
add
incl
movb
incl
add
outsb
jae
cld
incl
jmp
incl
push
mov
fdivr
incl
movb
cs
movb
add
pushl
mov
decl
push
ret
imul
decl
cmp
add
data16
inc
decb
data16
incl
test
incl
inc
jne
xor
test
decl
mov
sti
incl
xchg
incl
jne
test
test
rolb
mov
inc
inc
push
call
out
incl
test
notb
clc
mov
decl
call
inc
jae
decl
add
jge
incl
leave
incl
movb
push
decl
outsl
add
add
add
sub
call
testb
jne
jmp
mov
test
incl
fs
inc
mov
jmp
test
cs
incl
incb
imul
ljmp
decl
push
incl
mov
add
dec
cmp
ljmp
incl
arpl
incl
test
inc
decl
test
jmp
jmp
movb
ljmp
test
jne
inc
push
test
mov
mov
fmuls
jmp
jb
incl
jmp
ljmp
inc
incl
ljmp
and
decl
mov
in
decl
test
mov
adc
inc
push
push
push
inc
jae
movb
mov
dec
test
mov
incl
jle
ud0
movb
add
cli
test
lcall
mov
incl
decl
push
cld
add
imul
imulb
inc
inc
jmp
inc
or
mov
fadds
dec
movsb
idiv
incl
call
add
test
adc
mov
lret
decb
ljmp
incl
gs
push
incl
mov
cld
ret
inc
rol
sbb
pop
incl
incl
inc
test
xor
in
test
test
push
mov
add
test
inc
fs
add
and
cmp
add
insl
mov
lea
incl
xor
incl
mov
adc
mov
test
inc
incb
movb
incl
cld
mulb
test
call
call
add
insb
add
inc
call
incl
add
inc
mov
mov
test
mov
inc
decl
imul
js
test
mov
int
mov
sbb
pushl
test
ljmp
call
mov
sbb
in
test
outsw
incl
pushl
negb
mov
movb
int3
imul
inc
push
enter
ret
dec
lcall
shlb
pushl
incl
incl
sbb
movb
pushl
incl
movb
test
outsl
incl
cmp
push
mov
jmp
movb
sar
push
inc
push
dec
mov
je
or
fs
inc
test
xor
paddd
push
lcall
incl
lcall
incl
decl
inc
movb
test
test
test
inc
cli
inc
inc
test
incl
push
inc
test
decl
push
incl
pushl
ret
ljmp
test
inc
test
movl
or
lea
test
test
test
ud0
incl
incl
incl
decl
decl
inc
test
outsb
incl
pushl
cli
push
call
lea
push
movsb
test
test
add
ljmp
incl
decl
incl
roll
add
add
jbe
add
cmp
add
cld
incl
add
add
add
add
incl
add
add
adc
add
or
add
fdivr
incl
add
add
inc
add
inc
add
inc
add
adc
add
add
add
and
inc
add
inc
add
adc
add
cld
incl
add
add
add
add
incl
add
add
mov
add
adc
add
or
add
fdivr
incl
add
add
inc
add
adc
add
push
xlat
inc
add
incl
add
add
inc
add
add
add
incl
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
sbb
jl
inc
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
pusha
mov
add
inc
add
inc
add
gs
je
outsb
and
popa
jo
insb
outsl
arpl
add
add
add
inc
add
daa
inc
add
add
add
inc
add
add
add
add
add
add
add
incl
add
add
add
fdivr
incl
add
add
incl
add
add
cmp
inc
add
inc
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
add
add
add
fdivr
incl
add
add
mov
add
add
add
incl
add
add
add
add
and
insl
gs
arpl
je
outsl
outsb
and
outsl
ja
add
and
arpl
je
outsl
outsb
and
outsl
ja
add
and
insb
outsl
arpl
gs
gs
imul
outsl
ja
add
jb
jb
jb
jae
fs
add
add
rclb
add
or
add
fdivr
incl
add
add
add
add
add
fdivr
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
fdivr
cmp
inc
add
inc
add
xor
add
sbb
inc
add
incl
add
add
inc
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
cmp
fdivr
incl
add
add
mov
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
or
add
or
add
add
add
add
add
add
xor
add
add
add
pusha
add
add
add
inc
add
in
inc
add
add
add
insb
outsl
arpl
imul
fs
and
imul
popa
bound
arpl
popa
je
outsb
and
outsb
fs
and
imul
insb
outsl
arpl
add
outsb
fs
gs
arpl
arpl
popa
je
outsb
and
outsl
bound
and
outsb
fs
and
imul
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
roll
roll
roll
roll
roll
roll
roll
roll
roll
roll
roll
roll
roll
roll
ret
pop
ret
cmp
inc
add
inc
add
inc
add
inc
add
ret
stos
ret
mov
inc
add
ret
ret
ljmp
add
inc
add
inc
add
ret
inc
add
inc
add
inc
add
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
add
add
jb
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
add
arpl
popa
je
outsb
and
outsl
bound
and
jb
popa
insl
and
imul
insb
insb
outsl
arpl
imul
gs
insl
and
imul
popa
bound
arpl
popa
je
outsb
and
jb
popa
insl
and
imul
je
insl
pop
insb
outsl
arpl
add
jb
popa
insl
jae
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
movl
stos
movl
lods
movl
mov
inc
add
movl
add
add
mov
movl
mov
add
movl
loopne
inc
add
movl
repnz
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
add
add
add
add
add
enter
enter
movl
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
and
jae
gs
outsl
jb
add
cmp
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
orb
orb
mov
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
cwtl
dec
inc
add
dec
inc
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
fmuls
add
inc
add
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
inc
dec
dec
add
dec
inc
add
inc
push
inc
dec
dec
push
add
inc
inc
push
inc
dec
dec
push
add
push
push
add
dec
push
push
add
sub
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
and
clc
jg
jno
je
add
add
jb
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
sbb
sbb
sbb
mov
inc
add
jo
add
jb
add
add
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
insb
inc
add
insl
inc
add
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
jb
popa
je
outsb
and
jbe
jb
outsb
insl
outsb
je
insb
outsl
arpl
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
add
add
arpl
popa
je
outsb
and
gs
je
insb
outsl
arpl
add
add
gs
je
outsb
and
jb
popa
and
popa
and
imul
add
insl
popa
jo
outsl
jb
and
jb
jb
call
add
add
incl
add
add
into
inc
add
add
jo
inc
add
incl
add
add
into
inc
add
add
fsts
add
icebp
nop
inc
add
incl
add
add
add
add
or
add
sub
inc
add
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
xor
push
inc
add
lock
add
xor
add
inc
add
std
inc
add
fs
add
mov
add
add
add
add
inc
add
aam
add
adc
add
inc
add
cs
add
inc
inc
add
pop
inc
add
jp
add
mov
add
inc
add
mov
add
les
add
inc
add
repnz
add
add
adc
and
ss
add
dec
inc
add
push
inc
add
push
inc
add
mov
pushf
inc
add
scas
inc
add
lret
add
inc
add
call
inc
add
or
add
inc
add
xor
add
add
pop
inc
add
insb
inc
add
jle
add
pushf
inc
add
stos
inc
add
mov
add
into
inc
add
loopne
add
repnz
add
add
add
inc
add
es
add
xor
add
add
dec
inc
add
pop
inc
add
je
add
test
add
inc
add
mov
inc
add
faddl
add
add
add
inc
add
and
add
inc
add
inc
inc
add
pop
inc
add
jp
add
mov
add
inc
add
mov
add
les
add
inc
add
repnz
add
add
adc
and
ss
add
dec
inc
add
push
inc
add
push
inc
add
mov
pushf
inc
add
scas
inc
add
lret
add
inc
add
call
inc
add
or
add
inc
add
xor
add
add
pop
inc
add
insb
inc
add
jle
add
pushf
inc
add
stos
inc
add
mov
add
into
inc
add
loopne
add
repnz
add
add
add
inc
add
es
add
xor
add
add
dec
inc
add
pop
inc
add
je
add
test
add
inc
add
mov
inc
add
faddl
add
add
add
inc
add
cli
inc
add
adc
add
inc
add
cmp
add
add
pop
inc
add
insb
inc
add
addb
xchg
inc
add
test
add
mov
inc
add
loop
add
hlt
inc
add
add
add
dec
add
cs
add
inc
dec
add
dec
dec
add
add
add
call
inc
add
adc
add
inc
add
cmp
add
add
pop
inc
add
insb
inc
add
addb
xchg
inc
add
test
add
mov
inc
add
loop
add
hlt
inc
add
add
add
dec
add
cs
add
inc
dec
add
dec
dec
add
add
add
pop
dec
add
jo
add
mov
add
dec
add
les
add
add
add
add
jo
add
mov
add
dec
add
les
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
jne
dec
popa
outsb
addr16
addr16
jb
jne
dec
outsl
arpl
gs
add
add
imul
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
add
inc
gs
gs
imul
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
imul
add
add
dec
jo
outsb
dec
outsl
bound
push
arpl
add
add
imul
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
add
push
gs
fs
imul
add
insb
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
push
insb
jae
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jne
jb
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
imul
add
push
jb
je
push
jb
imul
je
outsl
outsb
inc
add
add
insb
jae
jb
outsb
inc
add
add
inc
push
jo
jb
jne
push
add
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
gs
je
inc
popa
jb
je
add
inc
fs
gs
jne
insb
imul
jbe
arpl
add
add
je
outsl
jns
imul
add
ja
popa
jo
imul
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
inc
outsb
jne
inc
imul
gs
arpl
push
add
add
jne
push
push
push
imul
add
inc
gs
insb
je
popa
bound
outsw
push
add
add
inc
gs
outsb
jo
je
je
je
add
add
je
imul
js
dec
outsb
addr16
push
add
add
dec
outsb
jbe
insb
imul
je
add
add
push
imul
imul
add
jae
popa
addr16
outsl
js
add
add
je
imul
outsl
outsl
imul
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
arpl
outsl
jne
gs
jbe
outsb
je
add
ja
jo
imul
add
jo
imul
add
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
add
inc
jb
popa
je
inc
popa
je
inc
fs
jae
dec
outsl
insb
fs
add
add
gs
je
dec
je
insl
dec
outsl
outsb
imul
dec
insb
gs
outsb
imul
imul
je
dec
jae
je
jb
addr16
imul
je
imul
dec
dec
inc
cmp
add
add
add
add
add
add
add
sub
add
push
add
cmp
add
mov
add
pop
push
add
add
add
imul
dec
cs
add
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
or
add
sub
add
inc
add
addb
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
inc
inc
add
enter
add
add
add
add
or
add
add
add
pusha
add
adc
add
in
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
cmp
aaa
mov
pop
fwait
cmp
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lock
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
insl
add
cmp
xor
cmp
add
add
add
arpl
jb
outsl
add
jb
outsl
add
add
jae
outsl
add
and
add
jne
insb
add
je
outsl
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
ja
ja
ja
add
insl
add
cmp
xor
cmp
add
add
outsl
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
add
jne
cmp
xor
cmp
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
xor
xor
aaa
add
add
insl
add
cmp
xor
cmp
add
add
outsl
add
and
and
inc
add
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
or
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
insl
add
cmp
xor
cmp
add
add
outsl
add
add
pop
add
add
outsl
add
add
je
dec
add
insl
add
add
add
cmp
xor
cmp
add
add
imul
outsl
add
jb
outsl
add
add
jae
outsl
add
and
inc
add
jne
insb
add
je
outsl
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insl
add
cmp
xor
cmp
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
jne
cmp
xor
cmp
add
add
js
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
xor
add
add
pop
push
sub
pusha
ljmp
cmpsl
ret
nop
mov
sar
mov
scas
push
shl
pop
out
mov
sbb
jle
inc
inc
rorl
loopne
lock
out
in
sbb
or
rcl
ja
lods
mov
outsb
repz
push
inc
movsl
jbe
mov
ds
push
cld
test
lret
mov
push
xor
sub
sbb
sahf
mov
xchg
xor
in
sbb
sbb
cld
testb
lea
xchg
cmpsl
mov
ja
or
es
jno
sarl
pop
mov
push
ficompl
pushf
outsl
mov
cmovs
mov
lds
xor
sbb
sbb
test
lds
jecxz
sub
fdivp
or
dec
daa
decb
and
repnz
lret
push
jnp
cld
ret
test
sub
xchg
loopne
popf
cmc
jo
mov
or
test
sub
add
mov
ds
xchg
pop
jne
sbb
and
mov
or
pop
add
xchg
rcll
jge
popf
jg
push
inc
lods
mov
popa
lahf
imul
pop
test
out
add
add
cmp
add
sub
fdivp
or
and
repnz
stos
push
jnp
cld
ret
test
sub
jnp
aaa
popf
clc
jo
push
lcall
xchg
sub
add
pop
scas
inc
jnp
jne
imul
jne
push
dec
fimuls
xor
jae
hlt
scas
aam
jmp
add
imul
addr16
leave
dec
gs
mov
cmpsl
xchg
mov
mov
insl
push
and
mov
xor
mov
daa
push
lret
push
imul
les
data16
push
xor
fmuls
arpl
je
dec
ret
dec
xor
push
cmp
fsts
and
arpl
repz
movsl
fcomi
pop
xor
lcall
subl
cmp
jb,pt
ja
jecxz
std
pop
popa
push
out
mov
inc
outsl
adc
push
push
js
adc
cmc
or
and
dec
fnstcw
push
sarb
in
inc
ret
test
jg
xchg
jns
or
push
aaa
popf
arpl
negb
andb
mov
jnp
xchg
aam
mov
mov
shld
fnstsw
sti
iret
jge
sub
roll
iret
popf
popa
mov
dec
lock
pop
mov
adc
jns
das
mov
cmc
test
mov
testl
ret
xor
cmc
rol
sub
lret
loope
sub
fwait
xor
je
push
call
dec
jmp
jge
sarl
pop
jmp
and
cmpsl
or
sub
adc
cmp
sbb
dec
popa
dec
and
cs
sbb
fidivs
cmp
imul
insl
push
mov
ja
mov
jno
lea
inc
mov
add
test
sarl
jmp
jb
out
dec
iret
in
or
add
sub
jl
dec
pop
in
roll
neg
movsb
mov
jl
icebp
cmpsl
repnz
and
jmp
mov
add
loope
pop
mov
pop
int
jecxz
dec
out
and
pop
int
sbb
sub
xlat
mov
adc
andb
lcall
mov
xor
push
imul
test
jns
test
arpl
fsub
ss
xor
out
sub
rcl
inc
jp
pop
jnp
inc
pop
je
and
mov
movsl
fldt
ja
pop
mov
jl
sub
mov
stc
mov
sahf
mov
jecxz
jbe
in
out
sub
add
xor
adc
vmovsd
push
sub
cmc
or
dec
daa
pop
or
je
fnstcw
push
jnp
std
ret
test
sub
cmp
jo
adc
jecxz
xchg
sub
add
scas
inc
jnp
ds
lds
pop
jne
sbb
push
loop
mov
jae
sub
xchg
xchg
push
jge
movsb
jg
push
inc
lods
mov
movsb
dec
popa
mov
fidivl
jl
leave
push
jle
stos
jge
or
sub
pusha
push
mov
jnp
mov
jp
repz
push
das
popa
add
mov
rol
cmpsb
stos
add
movsb
sbb
in
popf
pop
aaa
sbb
sub
into
inc
jmp
in
sarl
hlt
dec
icebp
add
frstor
push
ss
lock
or
ljmp
add
push
fsts
cli
mov
enter
mov
test
imul
pop
mov
cmc
ds
jno
or
mov
sbb
mov
cs
push
movsl
js
xor
bound
jg
dec
push
dec
xor
push
cmp
dec
nop
pop
in
inc
add
inc
sbb
aas
movsb
fcomi
or
or
aad
push
cs
insl
sub
add
adc
pop
das
jb
fwait
sbb
leave
rcrl
out
mov
inc
outsl
add
push
xchg
adc
hlt
or
mov
int3
fdivrs
push
loopne
in
ret
ret
sub
stos
cli
sub
jns
or
fnsave
popf
arpl
negb
scas
mov
push
cmpsl
mov
xchg
mov
test
lods
into
cmpsl
adc
shld
sbb
andl
push
push
sub
cld
add
in
pop
int
loop
dec
fldenv
lret
mov
mov
repnz
mov
mov
mov
xchg
andb
lcall
mov
xchg
ds
imul
test
jns
movsl
repnz
jg
arpl
fsub
jbe
dec
xor
out
insl
inc
push
cmp
jp
pop
popa
ljmp
in
lret
fisttpl
sahf
ja
pop
mov
adc
out
lahf
subb
lods
adc
xchg
mov
or
jbe
jo
out
cmp
add
xor
adc
sti
adc
push
sub
fdivp
or
dec
daa
les
and
repnz
ficoms
repnz
ret
test
sub
test
aaa
popf
out
jo
xchg
jecxz
xchg
sub
add
mov
xchg
mov
pop
jne
sbb
sbb
jae
and
jge
mov
inc
lods
scas
shlb
popa
mov
fidivl
push
leave
gs
stos
dec
out
js
das
lds
std
pop
push
mov
push
pop
mov
or
repz
das
sbb
xchg
std
push
nop
adc
mov
lret
loope
movsb
sbb
pop
aaa
inc
cwtl
call
sub
repz
jmp
in
sarl
les
neg
and
fisttps
cmpsl
or
ljmp
add
push
lret
jbe
mov
repz
enter
mov
test
imul
popl
xor
lods
pop
jno
es
push
imul
les
pop
push
adc
fmuls
bound
jnp
dec
jecxz
xor
push
cmp
test
dec
movsl
sbbl
test
frstor
and
fists
cmpsl
or
lahf
sub
subl
fistps
jae
call
sbb
adc
inc
mov
out
xlat
pop
lret
movsl
add
mov
mov
in
dec
push
test
shll
xor
insb
mov
inc
xor
sbbb
sbb
xchg
jnp
mov
in
les
in
mov
add
pop
subl
adc
test
dec
daa
shrl
loop
pop
imul
dec
out
ret
shlb
xchg
rcrl
jg
push
dec
dec
mov
fcomps
mov
movsb
std
shl
lock
jne
pop
shr
dec
mov
cmp
sahf
jecxz
in
insb
cmp
cmp
enter
movsb
mov
test
xchg
jmp
adc
sarl
pop
clc
xchg
test
aas
and
inc
stc
dec
and
xor
mov
int
sbb
mov
out
sub
add
cmp
xchg
sti
adc
push
sub
fdivp
or
dec
daa
add
and
repnz
fsts
xor
ret
test
sub
push
jo
inc
lcall
xchg
sub
add
dec
scas
inc
jnp
jne
jg
pop
jne
push
dec
mov
mov
jnp
push
jae
popf
sti
mov
sub
or
imul
loope
ss
int
sbb
pop
pop
mov
jns
das
insl
popf
sbb
inc
cmc
or
and
insb
fnstcw
push
bnd
push
test
push
sub
mov
aaa
popf
arpl
inc
movsb
in
clc
dec
xor
ret
mov
aad
jnp
pop
cltd
sbb
and
adc
dec
lock
sub
aad
sbb
or
mov
push
shl
shll
iret
and
jmp
sub
mov
gs
xorl
dec
mov
mov
jge
sub
stos
xchg
jae
repnz
shrb
popf
xor
sub
addr16
pushf
in
inc
xchg
test
dec
mov
xchg
pop
inc
cmpsl
sbbl
and
and
fucomp
jo
mov
push
in
sub
cmp
adc
dec
mov
int
loop
dec
lret
in
mov
or
add
push
imul
hlt
xor
enter
mov
in
decl
scas
add
ret
add
or
sub
sahf
dec
aaa
aaa
push
out
int
mov
mov
mov
loopne
and
call
lods
cli
mov
and
cltd
mov
push
out
sub
and
call
mov
pusha
lea
loop
dec
lret
cld
mov
stos
outsb
mov
in
lea
jo
mov
add
or
push
aaa
subb
ss
sub
jnp
pop
sub
outsl
jge
sbb
pop
push
adc
inc
push
roll
ret
cmpl
jne
mov
test
fdivrp
movsl
shlb
or
fisubrs
sbb
test
inc
jno
and
add
add
int
loop
dec
lret
les
xchg
cmp
add
std
jne
mov
je
mov
add
icebp
fnstcw
cli
pop
jnp
cld
ret
test
mov
in
or
mov
andb
push
gs
xor
shlb
sub
ljmp
sub
inc
push
pop
scas
fbstp
shll
sub
cld
ljmp
stos
mov
mov
dec
popa
mov
xchg
mov
sbb
or
mov
push
adc
int3
mov
and
mov
fsts
std
jmp
aad
scas
movl
adc
xor
into
in
mov
leave
sbb
pop
xorl
pop
cs
nop
sub
imul
and
xor
in
mov
cli
insl
mov
fwait
mov
mov
inc
out
adcl
add
or
push
lahf
stos
push
xchg
and
mov
jo
mov
aam
dec
repnz
scas
mov
mov
test
sbb
mov
mov
cld
ror
pop
sbb
jo
sbb
add
jns
mov
sub
dec
mov
push
lods
outsl
mov
push
mov
fs
jg
inc
pop
add
xchg
addl
divb
lcall
or
popa
mov
adc
adc
icebp
lret
roll
repz
cmpsl
add
ret
int3
dec
lods
jg
enter
cmp
mov
cltd
sti
dec
cmp
testb
in
cmpsl
dec
adc
xor
cmpl
aaa
mov
dec
push
and
lds
add
inc
aam
insb
pop
leave
xchg
scas
fldl
inc
testl
push
gs
jge
xchg
imul
cmpl
jbe
insb
ret
pop
pop
sub
fcmovne
test
sub
add
ficoms
add
out
dec
imul
jns
cmp
or
sub
nop
or
xchg
in
push
mov
xchg
dec
mov
xchg
mov
cmp
inc
xor
jl
ss
add
popf
mov
cmpsl
ret
test
enter
movsl
nop
shl
mov
aaa
and
xchg
add
fwait
pop
xchg
aaa
pop
shll
fisubs
dec
lods
or
sbb
std
jno
jne
xor
xchg
ja
cmp
adc
pop
addr16
pop
out
pop
push
or
jecxz
and
mov
ja
call
test
dec
jmp
test
lcall
add
jae
mov
repnz
iret
lods
insb
pop
push
out
pop
loop
stc
aam
test
lcall
push
and
cmpb
std
jo
inc
fistpll
lahf
std
fstpl
adcl
out
push
or
fisttps
or
lcall
cltd
xor
mov
xchg
scas
test
in
pop
lret
lahf
imull
or
sub
sti
sbb
sbb
notl
pop
hlt
dec
lret
inc
jecxz
push
xchg
insl
imul
xor
std
add
adc
mov
fldenv
push
lcall
or
cmp
lods
daa
clc
das
add
aad
xchg
jp
sbb
pop
push
stc
sbb
mov
xchg
xorl
jmp
lds
aaa
imul
lds
and
in
sub
aad
aam
insb
jmp
jns
ss
mov
jg
xchg
movsb
leave
jno
xchg
add
movsl
mov
sbb
xchg
int3
outsl
lds
mov
and
ja
sub
aad
inc
ljmp
leave
and
ljmp
mov
jae
cmp
and
call
inc
dec
repnz
icebp
in
push
mov
popf
iret
pusha
lret
sbb
sub
movsl
mov
xor
fistl
pop
lret
or
test
pop
iret
push
mov
imul
fsubrl
fxch
inc
dec
push
fistpl
decb
mov
call
movsl
sbb
cmp
loope
movsl
std
xor
int
inc
adc
stos
jb
rcll
je
jl
mov
push
cmpsl
sbb
and
cmpsb
lods
pushf
std
lret
dec
iret
jb
mov
push
mov
push
lcall
xchg
out
xchg
xchg
clc
lock
mov
pop
in
std
inc
test
xor
or
insl
jge
xor
adc
or
nop
das
lods
sbb
sbb
xchg
lock
sub
imul
aad
std
jg
fistpl
negb
hlt
dec
jnp
fmull
flds
mov
std
fcoml
mov
push
shrb
or
fdivl
pop
cmc
jecxz
ss
pop
xor
imul
js
mov
inc
adc
fcoms
fisubs
dec
in
fsubs
adcb
sbb
scas
std
ljmp
aam
xchg
repnz
xchg
mov
ja
push
or
fsubl
xchg
dec
popa
out
stos
push
mov
fwait
in
je
in
cli
cmp
sahf
adc
dec
fwait
fidivrl
cmp
jmp
jnp
mov
movl
xor
loope
dec
add
fnstcw
adc
push
lret
ret
mov
mov
mov
mov
mov
subb
xchg
lcall
mov
lods
sbb
dec
lret
cmp
pop
pop
pop
mov
xor
cmp
dec
imul
add
xor
mov
cmpsb
pop
inc
notb
je
xor
imul
gs
lds
pop
insb
mov
sti
daa
jmp
mov
mov
mov
mull
arpl
xor
cld
notl
adc
sbb
outsl
fstpt
fldt
push
pusha
cwtl
sarl
mov
jmp
mov
or
cmpsl
cli
test
or
mov
addr16
mov
cmpsl
mov
xchg
mov
pusha
dec
adc
dec
cmp
gs
mov
xchg
adc
mov
and
in
je
inc
pause
and
dec
loopne
int
sbb
aam
sub
push
fcmovnbe
aad
std
jg
dec
mov
in
mov
jns
lret
jns
xchg
sti
test
and
xorl
stos
add
mov
clc
adc
add
add
subl
shlb
xbegin
out
out
xor
daa
fcmovnb
outsb
cmp
cli
imul
adc
jns
xlat
pushf
or
loope
test
hlt
xor
addb
cld
shlb
sub
lods
mov
in
ja
ja
shl
xor
adc
popf
mov
in
dec
dec
pop
leave
jmp
stos
clc
addr16
mov
leave
ss
mov
xlat
std
hlt
addl
or
mov
push
int
cld
pop
aam
pop
cmpb
sub
dec
mov
andl
int3
pop
sbb
jge
iret
mov
xor
fwait
insb
cltd
mov
ja
arpl
mov
jo
mov
jnp
hlt
adc
mov
xchg
mov
ja
and
fildl
cmpsl
jae
mov
loopne
shr
mov
lods
inc
es
push
pop
stos
lret
add
xor
jl
push
stos
test
scas
mov
push
xlat
pop
push
add
jg
pop
mov
stc
aam
xchg
mulps
ficoml
cwtl
cmp
mov
int3
mov
mov
loopne
inc
out
cs
fwait
pop
sarb
lahf
jle
pop
inc
mov
je
popa
incl
mov
mov
dec
in
outsl
test
sbbl
mov
mov
or
xchg
jmp
cld
bound
subb
int
xchg
mov
jae
jo
dec
mov
hlt
mov
sbb
add
ds
xchg
and
and
test
sbb
and
dec
into
adc
test
xor
mov
imul
and
push
pop
inc
imul
fidivs
jne
push
fisttpl
pop
lea
negl
fstpt
or
sub
inc
mov
ja
test
ficoms
jnp
insb
pushf
subb
mov
cmp
es
xor
fs
pusha
mov
sub
push
lret
test
add
aam
pop
mov
or
outsl
mov
imull
cwtl
pop
cmpsl
mov
pop
movsl
cmp
bound
add
inc
movsl
xchg
sbb
or
js
xor
pusha
jmp
movsb
xchg
mov
inc
cmp
insb
adcl
cmp
shlb
outsl
xor
pushf
andl
sub
push
mov
jl
add
sbbl
and
or
dec
mov
pop
in
cmp
icebp
inc
xchg
call
and
sbb
dec
lods
call
xor
je
push
pop
fidivl
aam
add
add
shl
lods
js
xor
pusha
add
mov
dec
imul
xchg
repnz
pop
push
mov
hlt
push
and
std
mov
mov
xorb
add
int
clc
push
fs
clc
cmp
dec
imul
xlat
adc
inc
jle
leave
call
push
insb
mov
mov
pop
movsb
scas
jo
or
fsubrs
sbb
test
add
rcrb
xor
pusha
insl
pushf
sbb
xchg
in
mov
dec
dec
sbb
xchg
aad
mov
push
in
xor
xor
fs
xor
adc
cwtl
nop
call
test
sarb
push
add
pusha
aam
sti
fistl
js
inc
enter
popa
xorb
fstpl
dec
or
aad
js
or
push
das
and
mov
push
sbb
mov
pop
push
shrl
lods
jecxz
jg
and
std
xor
cltd
cmp
in
leave
jb
jmp
cmp
insl
fcmovnb
test
imul
aam
pop
pop
shlb
mov
mov
add
and
int
pushf
xor
xchg
xlat
test
out
pushf
jae
sahf
fcmovnu
ja
and
inc
xchg
xchg
cmpsl
out
cmp
or
ret
or
out
xor
cmovl
insb
pop
add
rolb
push
ja
fldcw
sar
xor
inc
testb
cltd
xor
fimuls
jbe
mov
stos
push
testb
or
cltd
shll
mov
inc
and
jmp
xor
push
lds
dec
mov
insl
push
out
add
test
add
add
lods
pop
test
std
decl
cmpsb
inc
push
mov
hlt
cwtl
pop
jae
mov
push
cltd
das
dec
shll
mov
fwait
iret
fistps
add
jmp
fwait
inc
adc
bound
pusha
pop
mov
orb
ljmp
add
movsl
mov
cmp
xor
stos
leave
jb
push
mov
dec
stc
sbb
push
mov
sub
sub
aas
and
pop
xchg
mov
and
les
adc
cmp
inc
in
insl
push
loope
sbb
movsl
xor
int
cltd
push
aad
add
jge
test
cli
lods
mov
or
nop
into
fldl
data16
rcr
or
je
mov
adc
xor
cmp
push
movsb
insb
mov
out
dec
sbb
fdivrs
jnp
or
xor
je
imul
xchg
dec
sti
test
pop
sbb
adcl
pop
int
add
movsb
jno
xchg
fistps
cmp
cmp
mov
aaa
mov
mov
in
mov
dec
cmp
xchg
pop
inc
data16
sbb
shll
fmul
sub
aaa
push
jecxz
lahf
dec
movsl
xchg
sarl
jnp
xlat
cmc
mov
decl
lea
xchg
and
push
mov
testb
push
out
fnstcw
clc
pop
mov
cmpl
xor
dec
xor
in
sbb
addb
inc
sahf
cltd
int3
int
popa
iret
adc
repnz
out
insl
cmp
insl
mov
icebp
in
and
dec
pop
xchg
cmp
mov
mov
mov
jle
jg
jmp
or
and
icebp
stos
dec
daa
call
fidivl
bound
push
aaa
aam
jp
std
lret
aad
mov
in
xorl
or
jl
xchg
push
loope
insl
enter
addr16
and
sbb
xor
shll
rcrl
data16
pop
leave
test
sbb
out
orb
pop
mov
imull
mov
addl
cmp
cli
and
push
gs
dec
jae
pop
mov
sub
leave
lret
pop
pop
pusha
xor
out
fwait
test
pop
push
jmp
pop
mov
jo
enter
arpl
mov
out
push
and
scas
push
lret
cli
xchg
mov
bound
stc
push
mov
shlb
call
mov
fnstenv
aam
dec
testl
data16
cwtl
fstl
inc
je
lret
mov
ss
out
sahf
insl
dec
shl
xchg
xor
dec
add
sub
addr16
lret
sbb
xor
mov
clc
xor
jns
push
mov
test
sub
fimull
mov
arpl
out
add
jmp
nop
addr16
xchg
mov
daa
shr
std
fisubrs
bound
das
in
mov
stc
add
push
cli
cmpsb
jle
rcrb
sbb
jne
and
jle
or
and
jecxz
fmuls
jbe
xchg
cmp
fldcw
or
scas
movsb
stc
pop
pop
adc
scas
daa
fidivrs
mov
cmpsb
repnz
insl
pop
lret
hlt
pop
mov
icebp
popa
add
outsl
shlb
jg
adc
rorl
test
outsl
jnp
in
mov
cs
leave
test
fmull
sbb
xchg
mov
popf
insl
leave
and
push
mov
cmp
int
test
xchg
negl
and
movsl
mov
or
lock
mov
sub
int
cltd
ret
gs
xor
sbb
push
loope
insl
ret
cmp
lds
mov
bound
imul
iret
in
dec
mov
mov
jl
test
aam
add
sub
clc
imul
fadds
sti
add
js
inc
pop
jbe
in
adc
pop
mov
stos
decl
sti
sub
xchg
pop
pop
xor
dec
lock
pop
pop
jmp
mov
inc
xchg
leave
inc
cmp
and
jae
daa
mov
andl
cmp
jno
add
das
in
jecxz
aaa
aaa
dec
stos
lahf
sahf
mov
addr16
inc
out
xchg
pop
jmp
aas
repnz
lea
dec
idiv
or
pop
push
repz
cwtl
add
push
add
loope
aad
dec
scas
jl
xchg
mov
lret
cmp
push
xor
jns
in
rol
jg
lret
imul
addr16
stos
inc
push
cmp
ja
mov
mov
fistpl
xlat
hlt
sub
jg
rcll
es
das
and
xchg
mov
push
iret
and
jmp
aas
mov
add
lock
jbe
orb
pop
sub
pop
or
incl
adc
stos
mov
rcll
mov
or
cmpsl
mov
sbb
divl
cwtl
dec
fadd
add
imul
sbb
je
mov
scas
ja
mov
ffreep
jae
daa
mov
or
das
insl
adc
mov
lods
inc
mov
fdivp
cli
fbld
mov
aaa
xchg
push
sahf
jg
stos
jmp
iret
aas
fwait
fwait
addr16
xor
lahf
jmp
arpl
outsl
pop
cmp
repnz
aas
cmc
imul
xchg
ret
cmpsl
jae,pn
pop
push
mov
scas
arpl
pop
lret
mov
adc
iret
sbb
out
mov
pop
sbb
mov
jecxz
out
stos
mov
inc
mov
int3
inc
test
pop
pop
jae
mov
push
insb
inc
push
push
cmpsb
lock
pop
xchg
xchg
jnp
sar
pop
xor
int
xor
mov
mov
push
shr
push
or
scas
js
xlat
fsubrl
je
out
sbb
cmp
dec
add
xorb
out
test
push
push
sub
icebp
iret
negl
cs
mov
pop
and
mov
jecxz
out
xchg
mov
xchg
mov
in
in
mov
xchg
in
clc
mov
insl
jbe
scas
cmp
cwtl
mov
stos
xor
mov
sbb
subl
loop
mov
sbb
inc
ljmp
xchg
cmp
sahf
sub
mov
inc
pop
icebp
and
ret
testb
mov
call
sbb
xor
sub
add
loop
outsl
xchg
and
sub
dec
sub
xchg
rolb
pop
das
std
or
fcoml
daa
inc
scas
push
aaa
insb
rcl
xor
xchg
shl
mov
mov
push
int
cli
xor
das
sbb
cmp
or
xchg
lock
ret
test
imul
cmp
roll
xchg
mov
data16
insl
adc
or
jge
imul
lahf
jg
enter
cmp
sahf
test
push
ja
repz
xor
mov
jl
mov
lods
js
cmc
xlat
mov
jecxz
lods
outsl
out
pop
xchg
das
xchg
xchg
xor
enter
dec
mov
stc
clc
sbb
sub
int3
cwtl
mov
aam
imul
insl
push
mov
imul
push
in
stc
lahf
pop
push
pushf
outsl
loope
jnp
dec
or
pop
scas
sbb
stos
push
mov
dec
hlt
out
stc
repz
cld
pop
inc
push
sub
jo
popf
push
push
pop
inc
push
sub
add
scas
adc
mov
mov
rcr
xlat
add
fsubrl
repz
push
sarb
pusha
mov
loop
jmp
xor
sub
into
aam
lds
mov
in
or
cmc
sub
inc
cmpsb
adc
lds
loop
push
xchg
out
push
pop
xchg
lds
cltd
loop
xchg
lret
lcall
leave
mov
and
xchg
and
repz
popa
call
sbb
bound
es
out
out
xchg
data16
or
and
pop
jmp
push
out
xchg
int
mov
add
xor
dec
dec
into
push
jmp
dec
in
div
inc
cmpsb
jns
jp
and
cmp
pop
out
push
into
loopne
sti
add
cltd
cmpsl
ror
shlb
mov
dec
or
iret
pop
push
rcrl
mov
and
ja
xchg
je
jno
mov
jno
mov
out
mov
fstl
int3
xchg
filds
mov
cwtl
and
mov
add
cmp
call
cmp
jmp
dec
fisubl
pop
mov
repz
scas
rcl
pop
dec
test
mov
in
mov
push
dec
sbb
sahf
das
outsl
dec
movsl
mov
nop
mov
xchg
outsl
dec
jno
test
sarl
clc
jmp
or
ljmp
xor
mov
mov
sbb
stc
jmp
adc
cltd
into
xchg
xor
in
insl
insl
bound
mov
inc
arpl
cmpsl
mov
dec
les
daa
clc
cmp
push
adc
ret
push
xchg
ficomps
sbb
push
mov
int
stos
adc
adc
xor
pop
iret
sti
out
inc
rcll
pop
pop
hlt
jecxz
and
mov
clc
add
cmpsl
xchg
jnp
adc
sbb
jnp
cmpb
fsubp
pop
adc
dec
mov
jo
sbb
push
mov
mov
sti
dec
pop
pop
push
and
pop
test
pop
rclb
sbb
addr16
push
ret
dec
sti
sbb
mov
push
or
add
mov
cmp
adc
ret
arpl
cmpsl
cltd
test
mov
jns
push
jne
hlt
ret
xchg
sbb
fisubs
loope
push
orl
int3
xor
addb
push
aas
iret
call
cmp
popf
fnstcw
or
cmpsb
dec
in
jmp
push
and
push
xor
fs
mov
add
divl
into
pop
notl
push
aam
pop
imul
push
leave
cs
outsl
xor
fsubl
jae
inc
cmpsl
mov
and
mov
loopne
stos
xchg
inc
mov
in
ljmp
mov
jge
in
lock
mov
adc
cmp
pop
or
pop
mov
inc
test
les
shlb
in
or
or
add
push
or
pop
movsl
mov
pop
outsl
cli
pop
mov
mov
xor
sti
xchg
mov
jne
arpl
mov
lret
enter
pop
push
int3
jp
out
and
jge
or
mov
sti
scas
out
cmovnp
jnp
call
cmp
xchg
mov
add
lds
gs
lcall
out
cmp
das
js
pusha
aas
cmp
or
out
lret
pop
push
jecxz
xchg
cmp
in
or
popa
or
jmp
rolb
lea
call
and
in
adc
lock
mov
sbb
dec
repnz
xchg
add
mov
or
fistpll
in
aaa
adc
and
faddl
pushl
push
mov
test
xchg
jecxz
cs
add
adc
insl
or
dec
rorl
or
cmp
jnp
push
mov
sub
xchg
mov
shrl
fbstp
int
xchg
lahf
imul
mov
lahf
jge
xchg
std
call
fwait
sub
mov
jae
xchg
push
js
mov
or
pop
out
push
rol
inc
cmp
iret
pop
lcall
push
leave
sub
lret
inc
jno
sti
add
xor
subl
dec
outsl
mov
adc
mov
jge
leave
pop
mov
aas
push
iret
or
in
es
test
adc
int3
or
xor
jbe
or
cmp
or
sub
aas
out
imul
pop
gs
push
lods
add
cmp
dec
or
cmpsb
out
pop
aam
jbe
lret
testl
jns
inc
pop
dec
push
sub
ljmp
xchg
negl
cmp
sub
inc
ljmp
xchg
inc
test
xlat
and
das
inc
push
les
mov
jecxz
xor
adc
leave
cmpsb
push
pop
mov
jbe
sbb
add
push
dec
cmp
ja
inc
ja
dec
pop
jae
and
sbb
fwait
cltd
jnp
dec
xor
jb
cmp
add
mov
stos
out
stos
imul
sub
test
dec
jle
arpl
fstp
in
gs
sub
out
daa
repz
mov
cltd
xor
addr16
adc
mov
test
std
mov
sbb
cmc
add
ror
mov
ret
dec
sbb
xchg
pop
or
xor
aad
push
mov
aam
clc
cld
fsubs
lea
xlat
insl
cld
sbb
aas
enter
jp
cmpsl
inc
aam
and
xor
sbb
mov
into
scas
jnp
addr16
pushl
xor
cmp
sub
pop
cwtl
or
sub
cmp
lods
dec
cmp
sarl
inc
dec
clc
cltd
push
mov
dec
lret
sub
outsl
addb
test
mov
gs
out
pusha
jecxz
sub
pop
inc
nop
xor
mov
xchg
xchg
rorl
add
push
mov
pop
fidivl
hlt
popf
enter
pop
out
pusha
or
pop
pop
fisubrs
mov
cmp
roll
mov
jns
div
scas
push
in
or
mov
jg
mov
add
inc
jge
lcall
lret
add
jg
ja
adc
pusha
xor
add
or
repnz
in
jecxz
call
test
and
adc
inc
ds
test
sub
dec
ja
lods
rcr
loop
jnp
outsb
cli
rcrb
mov
mov
mov
ret
mov
lds
pusha
out
iret
repnz
and
mov
stos
in
push
mov
mov
and
xchg
je
insb
iret
xchg
sub
add
jno
cmp
scas
sub
fwait
mov
cwtl
shrl
mov
jecxz
test
push
test
aam
rcll
fisttpll
iret
sarl
in
pop
jmp
mov
aas
cmp
push
mov
add
out
in
in
sbb
or
stos
pushl
jle
xchg
add
mov
jmp
lock
mov
stos
dec
std
fisttpl
ljmp
dec
movsb
test
rcrl
lret
mov
test
faddl
cltd
sahf
fsubrl
sbb
mov
imul
out
jl
pop
test
je
cmp
cs
adc
sbb
fimull
lock
sti
push
dec
sbb
and
cld
adc
jl
loope
decl
subl
sahf
pop
adc
out
mov
pop
dec
xchg
jae
movsb
cmp
and
xor
in
movsl
xchg
rcrl
pop
or
mov
dec
lret
loope
mov
dec
sbb
xchg
adc
ja
and
fists
mov
sbb
xor
nop
pop
jns
add
lods
out
ss
sbb
sub
les
push
lret
xlat
mov
mov
add
fnstcw
pop
pop
jo
xor
sub
test
loop
loop
in
mov
push
push
and
repnz
mov
ret
rcll
push
mov
push
in
nop
out
inc
sub
push
jo
jo
pop
mov
stos
call
sbb
jp
clc
rolb
dec
int3
mov
outsb
test
in
into
and
jnp
inc
sti
aam
add
insb
insl
xlat
nop
jnp
xchg
stos
aam
pop
rcr
mov
mov
push
sbb
insb
data16
push
fldenv
jae
add
movsb
mov
xchg
add
es
lock
xchg
add
sub
xchg
loope
rcr
fildl
or
lock
jnp
leave
sbb
nop
inc
mov
mov
lret
test
push
jnp
sahf
inc
dec
in
in
idiv
bound
sqrtps
mov
cltd
outsb
add
or
sub
fcoms
test
adc
mov
mov
add
jns
aaa
cwtl
call
mov
or
inc
incb
das
stc
add
inc
jp
mov
stos
pusha
mov
push
cmp
mov
adc
jmp
mov
push
fisttpl
mov
xchg
fbld
sub
or
push
out
fwait
out
dec
jnp
daa
aaa
ret
dec
lahf
sahf
stos
mull
movsl
sub
in
test
or
mov
bnd
add
mov
scas
xchg
cltd
loopne
sti
mov
jecxz
sbb
xor
sbb
inc
push
mov
push
into
pushf
popa
add
inc
xchg
fnsave
jbe
jbe
sbb
pop
ds
cmpsl
push
pop
in
jne
xchg
out
mov
sbb
repnz
nop
lret
xor
loop
enter
mov
leave
subl
stc
outsb
sub
enter
fidivrl
aas
sub
in
ret
insl
xchg
mov
sti
ret
cmpsl
jle
cli
std
xor
xorl
sbb
mov
cmpsb
insl
iret
loop
ljmp
xchg
mov
or
ds
xchg
cli
shrb
cmpsl
addb
xor
cmp
jo
pop
imul
adc
lds
stc
ret
mov
lea
mov
outsb
incl
popa
or
mov
cmpl
test
out
test
jne
dec
fsubr
movl
adc
dec
cwtl
je
xlat
shrl
sub
or
hlt
push
adc
sti
fimuls
pop
mov
xchg
imul
push
xchg
in
pop
dec
jecxz
loopne
out
and
cmc
imul
xchg
dec
xor
rol
fnstenv
add
jmp
jbe
scas
mov
in
jnp
inc
cmp
fstl
mov
data16
mov
add
fiadds
mov
jg
scas
sahf
push
out
mov
leave
xlat
cmp
xchg
aad
xor
rcr
mov
shlb
and
push
cmp
sbb
push
sbb
xor
std
aam
jp
mov
into
dec
mov
mov
mov
xchg
push
xlat
add
jo
xchg
cltd
fs
xchg
lret
in
pushf
mov
pusha
clc
jb
add
cmp
imul
push
mov
testl
loopne
dec
jns
pop
pushf
jne
leave
rcll
cmc
stos
mov
xchg
into
inc
mov
inc
dec
subl
aas
fs
out
push
sbb
test
insb
adc
xor
into
fs
jge
inc
test
icebp
pop
mov
jge
scas
insl
imul
sbb
sahf
sbb
addl
das
gs
fisttps
call
js
mov
add
add
sub
add
ss
adc
mov
inc
dec
mov
fwait
xor
lret
imulb
ret
fst
cwtl
push
ret
shlb
pushf
sbb
mov
mov
dec
inc
lock
into
rclb
sbbl
fadd
popa
mov
xchg
leave
bound
lret
jmp
mov
mov
pop
movsb
and
daa
sbb
sbb
enter
xchg
stc
dec
xchg
and
xor
mov
and
sbb
imul
mov
stos
hlt
push
dec
mov
xor
lods
mov
int
ficompl
rcrl
jp
movsb
xor
xor
test
fcomps
inc
loopne
popa
mov
pop
mov
aaa
adc
pop
rcr
aam
aad
cld
lret
dec
jmp
pop
jne
dec
xorl
cmp
pop
js
divl
mov
in
mov
test
stos
cmpxchg
shl
movsl
sbb
dec
in
outsb
jg
fs
add
ja
cmp
cmp
mov
mov
cwtl
sub
fsubrs
movsb
mov
lret
ss
cmp
jp
xor
and
sbb
lcall
std
mov
add
stc
outsb
lcall
data16
cmpsl
bound
inc
mov
movsl
mov
fisttps
cwtl
push
scas
xlat
and
scas
dec
xchg
lds
or
lods
push
ljmp
xor
sub
cmc
or
popf
jne
ja
sarl
std
jo
xchg
dec
add
mov
insb
dec
cli
xor
aaa
cmpsb
shrb
jo
in
pop
add
xchg
out
mov
cmpsl
pusha
fidivs
je
mov
popf
push
movsl
push
dec
mov
jmp
and
sbb
in
push
aas
dec
jbe
sbbb
lret
xchg
jbe
and
jnp
outsl
mov
sarb
aam
jg
sub
or
xchg
cmp
movsb
push
sub
ljmp
push
gs
mov
test
incb
cmc
bound
xlat
in
mov
subl
lock
push
outsl
int
rcr
push
arpl
xor
pop
jmp
xchg
nop
adc
filds
call
jo
sbb
rol
incl
les
dec
out
addr16
mov
mov
dec
ss
mov
mov
shlb
ja
aaa
je
insl
outsl
mov
push
sub
icebp
pop
push
subl
outsl
scas
mov
mov
push
xchg
jae
and
sti
cmc
test
add
or
outsb
sbb
mov
pushf
jns
into
paddusw
mov
les
loopne
inc
rolb
ret
cli
pop
repz
lods
cmp
daa
mov
leave
jg
lock
add
es
sub
and
pop
into
xlat
dec
stc
aam
dec
mov
jne
mov
cmp
les
ficoms
ljmp
add
pop
adc
mov
mov
pop
jo
push
sarl
xor
int3
data16
pop
sbb
pop
pop
mov
dec
inc
cmp
xchg
inc
je
popa
idivl
and
inc
insb
jns
mov
cmc
ja
pop
mov
pop
fwait
dec
and
scas
shll
cmp
jns
and
xchg
push
lea
xor
leave
fbld
inc
add
push
repz
iret
test
cmp
sub
fistl
mov
insl
js
push
sub
lcall
mov
jb
sti
mov
int3
stc
mov
push
aaa
inc
cld
sub
mov
aam
iret
filds
or
mov
insl
scas
imul
mov
pop
lret
ja
jnp
inc
push
cmp
lods
icebp
mov
mov
cmp
mov
jo
divb
jne
jno
cmpsb
popa
or
push
and
sub
inc
lods
dec
stos
pop
jnp
dec
mov
sti
and
stos
jnp
mov
rcr
add
xor
fxch
cmpl
ret
in
iret
in
push
aad
jno
and
rcrb
pop
push
es
jbe
xlat
ret
or
aaa
mov
sar
pop
out
insb
in
dec
sbbb
mov
or
cwtl
lock
popa
pop
loopne
cmp
jbe
adc
cmc
lret
jp
sbb
dec
insb
call
ffree
sbb
dec
xchg
loop
jmp
mov
mov
xchg
mov
add
pop
dec
sub
shlb
mov
popa
repnz
jl
repz
add
mov
dec
xchg
cmp
add
mov
fistpll
xorl
mov
das
ljmp
pop
arpl
out
sbb
inc
sbb
inc
fsubs
pop
cmp
in
jb
mov
or
lret
rol
loope
and
movsl
mov
push
scas
cmc
pushf
in
mov
repz
push
mov
dec
lds
setnp
lea
inc
cmp
cmp
lds
sbb
jae
pusha
inc
std
nop
inc
scas
xor
inc
xor
scas
sbbl
cmp
inc
jns
mov
jns
xchg
push
lret
stc
pop
fmulp
sbb
inc
and
das
cmc
jbe
je
push
enter
cmp
ja
outsb
sub
sarl
dec
ret
xchg
xor
repnz
jl
jae
add
dec
daa
out
xchg
cld
popf
and
imul
dec
fdivrl
xchg
inc
testb
add
lods
mov
rclb
jno
loop
test
mov
jnp
jne
fisttpl
push
jge
idivl
xchg
xor
xchg
stos
outsb
jg
lock
jp
int3
or
mov
and
cmp
in
fs
xchg
pushf
fldt
gs
lds
jo
xchg
xchg
or
cmp
mov
dec
xor
addl
mov
lcall
push
jbe
loop
negl
sub
loopne
test
iret
jns
dec
sbb
pop
outsl
into
rolb
push
lea
xchg
jbe
add
neg
jo
jmp
dec
mov
rorb
call
ret
lcall
divl
adc
xchg
mov
or
call
or
sbb
test
test
jne
sahf
leave
sti
lret
xchg
stc
push
jl
sub
and
mov
cmpsb
ja
movsb
lods
outsl
mov
jmp
fcom
xchg
add
and
pop
arpl
pop
insb
mov
repz
hlt
dec
add
push
cwtl
sub
orb
sahf
hlt
outsl
pop
outsb
jns
sahf
out
push
push
sub
or
and
shlb
cvtps2pd
inc
mov
lret
insb
test
stc
cmpsb
mov
pop
cmpsl
dec
cli
incb
mov
in
mov
test
pop
dec
mov
mov
push
in
jb
adc
cmp
scas
dec
cmp
fimuls
div
push
mov
mov
pop
push
iret
dec
lret
stos
call
push
sub
mov
popf
sti
cli
enter
sbb
inc
fcmovnbe
adc
outsb
or
loope
xor
fimuls
pop
xchg
jle
mov
mov
sub
roll
dec
inc
jecxz,pn
cmp
orb
popf
loop
sarb
mov
inc
repz
push
data16
dec
mov
sbb
adc
sub
or
sbb
xor
jle
push
xorb
std
xchg
sbb
mov
jp
leave
pop
mov
mull
cmp
pushf
pop
movsb
add
xchg
push
or
cmpl
dec
enter
pop
jne
ret
fs
call
dec
xacquire
xchg
sahf
jns
push
sub
dec
in
fdivl
rcrl
gs
or
inc
pop
dec
call
adc
rcrb
dec
decb
add
sahf
jae
jo
push
ret
xchg
bound
push
sub
xchg
das
int
sub
lret
inc
fcoms
push
repnz
add
mov
hlt
pop
into
ljmp
jle
and
inc
mov
add
data16
xor
cmp
jbe
les
inc
loop
outsl
adc
cmp
dec
pop
dec
add
mov
push
cmp
jo
and
ret
movsb
xor
pop
xchg
popa
arpl
cmpsb
push
mov
cwtl
sub
imul
cli
js
dec
push
sub
rcll
xor
mov
jbe
ret
aad
dec
outsb
adc
lahf
fisubrs
sti
movsb
xor
mov
cli
lret
pop
xlat
das
sub
sbb
aad
bound
nop
repnz
or
mov
pop
pop
xchg
es
cwtl
movsb
movsl
push
shr
aam
mov
shlb
lcall
sbb
sar
movsl
nop
mov
push
push
inc
fisttpll
shrb
or
push
xor
aad
mov
xchg
movsb
jae
les
mov
mov
enter
test
and
xor
aam
shll
mov
jecxz
add
out
adc
loope
cs
test
cmp
xchg
lods
push
icebp
pop
cmp
loope
dec
mov
mov
push
int3
inc
push
mov
sub
mov
mov
push
mov
in
and
mov
jb
sub
or
push
dec
or
push
cld
pop
mov
push
lcall
xchg
adc
jbe
xlat
cld
roll
xor
push
and
aaa
call
adc
cmc
rolb
nop
clc
leave
dec
xchg
sahf
hlt
fildl
into
subl
loopne
les
pop
adc
test
test
mov
repnz
nop
pop
add
lea
mov
hlt
ror
sub
sub
and
mov
inc
mov
mov
std
pop
jg
enter
push
aas
lret
ja
xchg
jp
sbb
inc
push
cmpsl
sbb
push
cmp
or
inc
xchg
jp
cmp
inc
idivb
adc
rcl
fnstcw
fdivr
mov
repz
js
dec
shr
add
push
mov
jae
mov
sbb
cmpsb
add
cmp
add
adc
sbb
es
imul
push
cmpb
lret
data16
js
or
out
cmp
idivb
into
int
in
aaa
es
mov
dec
testb
lods
sub
loope
pop
subb
std
mov
jle
or
dec
enter
sub
add
dec
mov
jle
imul
scas
pop
inc
shrl
imul
or
stos
ret
jecxz
mov
scas
shrb
shr
imul
sub
sti
movsl
xor
mov
add
or
mov
jle
inc
sbb
push
pop
add
inc
ljmp
pop
cli
push
cltd
cmc
push
inc
jo
mov
sbbb
fs
jle
inc
inc
arpl
test
outsb
movsw
popa
xor
mov
ja
fldenv
sti
adc
mov
mov
cmp
clc
cwtl
mov
adc
orl
xchg
mov
in
ss
lahf
dec
clc
je
add
out
jl
dec
cmpps
cmp
cmp
pop
ret
mov
cmp
pop
ret
ret
aas
imul
pop
incb
arpl
push
jb
dec
jge
jne
xor
mov
xchg
aaa
int
cld
loop
jbe
adc
jg
mov
dec
lods
xchg
rorb
clc
mov
jne
repnz
mov
notrack
aam
mov
ds
dec
mov
adc
lds
mov
out
add
test
sbb
pop
mov
xchg
aam
xor
push
hlt
mov
and
xchg
and
rorb
loopne
outsb
lret
or
mov
popf
jl
push
nop
and
nop
inc
fldl
movsb
add
or
or
mov
dec
sub
push
and
xlat
sti
lods
xor
mov
aam
xchg
addr16
outsl
push
xor
repz
fdivrs
repnz
daa
daa
insl
arpl
adcb
loope
les
lds
cmp
inc
mov
aam
xchg
pushf
sub
cli
das
push
push
dec
xlat
sub
sbb
xchg
ret
hlt
sub
adc
repnz
push
mov
js
outsl
mov
dec
pop
jmp
mov
mov
pushf
jmp
repz
sub
cmc
out
adc
mov
mov
aas
push
imulb
sahf
jle
hlt
xor
sti
cltd
fmull
cmpb
movb
push
inc
repz
lods
push
sbb
clc
xchg
jo
add
cld
mov
pop
test
xchg
push
mov
lcall
cmp
xchg
dec
repnz
add
fisttpll
dec
push
jnp
xchg
rclb
ja
or
std
xor
push
cwtl
pop
imul
push
js
or
jae
jecxz
sub
and
mov
and
or
mov
mov
jmp
xchg
xor
inc
sti
sbb
into
xchg
xchg
xchg
mov
or
add
fdivl
adc
inc
sbb
mov
push
dec
sbb
loopne
xchg
out
jmp
mov
popf
repnz
test
mov
adc
cwtl
push
jne
cmp
pushf
insb
sahf
jl
jb
hlt
lock
dec
mov
out
rclb
mov
pop
and
cs
lret
jg
add
add
testl
xlat
push
mov
push
adc
cmpb
fsubr
pop
pusha
movsb
shlb
adcl
mov
add
add
pop
andb
add
das
ret
pop
popa
outsl
out
in
scas
popf
mov
add
inc
rolb
pop
fdivl
aad
xlat
cmc
mov
leave
lock
daa
pop
paddusb
mov
insb
test
mov
cli
sub
out
or
clc
popf
add
sarb
repz
xchg
mov
mov
js
test
dec
loop
fs
data16
mov
cmp
in
add
mov
cli
iret
xchg
or
aaa
mov
or
pop
push
mov
inc
jae
inc
jo
and
push
xor
jbe
cmp
es
push
or
lock
add
jmp
repnz
mov
pop
out
sbb
cmp
sti
push
xchg
jnp
or
mov
es
out
sbb
pop
cmc
mov
mov
xor
jne
xor
cmp
adc
xor
hlt
cld
mov
jmp
xor
mov
pop
mov
xchg
gs
inc
xlat
loop
sub
and
inc
mov
mov
and
pop
push
idiv
sbb
insb
cmp
xchg
push
mov
add
sbb
insb
movsl
clc
les
mov
pop
fs
mov
jb
jo
pop
xor
adc
cmc
andb
add
inc
loope
fadds
dec
sbb
jb
rcll
push
xor
js
cmp
xchg
jb
sti
dec
mov
jne
sbb
mov
cli
or
adc
movsb
cld
mov
lret
je
sub
outsb
jge
fndisi(8087
xchg
int
sti
push
imul
lahf
pusha
std
imul
adc
fwait
push
dec
test
xchg
push
neg
in
pushf
cmpsb
xor
jmp
fcos
push
inc
or
pusha
outsl
jnp
mov
push
test
hlt
pop
mov
incb
or
repz
dec
and
push
push
ret
popf
scas
xor
sar
cmc
lea
fisttpll
gs
push
sbb
push
mov
outsb
cmp
adc
rolb
sbb
jae
iret
and
icebp
cmp
lcall
push
ljmp
out
cmpsl
pop
cmc
int3
inc
sub
imul
xor
xor
sub
mov
sub
int3
pop
loop
push
fst
daa
int3
inc
add
cmpsb
add
movntq
out
xor
cltd
insl
scas
or
pop
fisttps
adc
scas
push
xchg
cmpsb
add
pop
dec
lds
push
arpl
sub
cs
xor
adc
jb
xor
mov
xor
mov
sub
mov
jecxz
lods
inc
out
pop
subb
pop
jno
and
mov
insb
jno
aad
out
cmc
bound
test
aam
jle
int
stos
xor
subl
adc
pop
jne
or
cmp
das
nop
pop
es
jp
lcall
int3
stc
bnd
enter
cmp
lahf
jp
sbb
int3
pop
and
testb
clc
pop
cmp
push
mov
xor
fcom
xor
in
xchg
ljmp
xor
pop
sbb
clc
mov
ror
jae
mov
es
push
inc
sbbb
rol
pop
cld
fcmovnu
push
bound
mov
ja
enter
data16
ret
lahf
xor
mov
push
sub
shl
std
add
out
jle
loope
sub
add
adc
add
fisttps
test
call
call
test
jb
aam
mov
cld
cs
jns
ss
jl
les
lods
sbb
pop
shr
mov
push
xchg
popa
mov
adc
mov
cld
pop
fdivrp
add
cmc
add
mov
lods
xor
imul
cmp
fisubrl
and
rorb
xchg
sub
inc
testl
outsb
decb
fsubrp
int3
testb
mov
xor
sar
lret
mov
cwtl
pop
cli
dec
push
out
js
dec
iret
mov
ja
jns
push
xor
add
sbb
cmp
lods
jae
adc
fisubs
xchg
mov
movsb
sbbb
inc
fisubs
xchg
xchg
jbe
mov
and
iret
pop
sbb
sbb
popf
or
daa
rolb
mov
mov
movsb
popf
mov
inc
je
push
adc
sub
or
out
in
push
xor
xor
repnz
decl
mov
clc
lahf
mov
stos
insl
mov
push
sub
push
add
es
ror
sti
xchg
xchg
cli
insl
or
push
push
in
or
sbb
mov
cld
imul
jl
out
or
xorl
test
mov
adc
mov
js
arpl
fwait
mov
insl
mov
jecxz
lods
loop
bound
sub
cltd
push
mov
sub
xchg
sub
push
xchg
sbb
loopne
lret
pop
ror
adc
fmuls
ljmp
nop
data16
mov
hlt
aad
sbb
shll
movsb
icebp
pop
mov
inc
sbb
and
cmp
add
adc
dec
cmc
sub
mov
aas
jmp
movsb
jle
inc
xchg
and
inc
and
outsb
fnsave
inc
imul
add
adc
pop
inc
popf
out
jp
xor
pop
fcomp
cmp
outsb
jb
cmp
fsubrp
iret
xchg
outsb
pop
dec
adc
and
adc
mov
or
into
add
jge
lcall
pushf
cli
popf
dec
push
xchg
pop
mov
xchg
pop
je
sub
inc
dec
jl
pop
xchg
mov
inc
sbb
and
sbb
out
jb
rcrb
pop
aam
scas
leave
xchg
xor
rcll
nop
test
sahf
mov
jns
sahf
loopne
sub
daa
gs
and
pinsrw
jb
add
cli
push
or
mov
lret
jp
loope
sbb
cmp
sub
in
movsl
push
test
pop
dec
out
rolb
jb
xor
mov
mov
mov
sarl
mov
jp
pop
lods
stos
out
pop
arpl
shl
in
repz
in
jb
gs
insb
xchg
bound
out
js
mov
sbb
insl
enter
and
or
movsb
pop
sbb
jnp
sbb
push
ss
sbb
pop
ss
mov
loope
jle
repz
push
sbb
or
rcll
mov
aam
inc
fisttps
shl
xchg
mov
fdivp
and
pushf
mov
test
pop
out
push
mov
popf
push
cmp
insb
mov
jge
dec
add
mov
faddl
pop
inc
sbb
sbb
pop
pop
cmpsl
sub
in
pop
push
setne
les
adc
mov
outsl
or
and
adcl
fs
sub
dec
cmp
cltd
bound
mov
cmp
stos
dec
jns
fucom
jae
cli
pop
and
je
out
sub
ds
lret
xchg
push
pop
add
jg
and
daa
push
stos
es
dec
push
pop
jne
sbb
add
loop
or
adc
add
sbb
hlt
movsl
adc
sarb
arpl
and
mov
dec
loope
mov
dec
mov
rclb
jge
pop
stos
cld
lcall
mov
or
jecxz
inc
jmp
mov
stos
outsb
or
cmp
in
push
inc
mov
inc
cld
sbb
xor
into
sub
xchg
mov
pop
jle
and
push
xor
stos
loopne
xchg
dec
shlb
inc
dec
push
lock
jge
pop
mov
jae
daa
aaa
xchg
sbb
mov
push
add
fiadds
adcb
jg
imul
mov
dec
dec
jp
xor
cwtl
addr16
test
xchg
addl
sub
adc
inc
or
push
js
xor
and
icebp
sub
xchg
xor
movsl
and
push
adc
dec
scas
adc
cltd
push
jp
xlat
insb
mov
mov
push
mov
pop
cmc
repnz
cwtl
push
jg
push
mov
jecxz
outsl
xchg
and
mov
or
xor
jno
sub
rcr
hlt
mov
xchg
xor
push
out
rorl
inc
test
lea
add
dec
cmp
dec
insb
inc
add
rcrb
or
stos
mov
imul
add
daa
cltd
mov
clc
ret
call
and
push
dec
out
in
stos
push
cmp
fidivl
add
fstpt
mov
xor
pop
js
mov
and
aad
mov
arpl
lods
adc
pushf
xor
mov
lea
push
pop
sbbl
xchg
push
int3
mov
pop
mov
inc
push
or
mov
imul
xor
or
xchg
jne
or
dec
pop
into
aad
adc
xchg
push
add
test
mov
popf
cmpsb
aam
adc
pusha
aad
imul
jo
int
popa
inc
or
and
dec
retw
xchg
dec
test
or
mov
mov
and
pop
add
lds
xlat
cmp
xor
jne
imulb
ja
stos
loopw
cld
or
es
lock
sahf
cmpsl
rcll
loop
mov
push
inc
mov
repz
dec
jecxz
xor
scas
mov
add
mov
inc
aaa
in
xchg
mov
push
int
mov
fxch
mov
je
adc
xor
jae
repz
test
enter
and
jle
cwtd
sbb
cmpsl
xor
roll
sub
out
mov
xchg
rcl
cwtl
sub
cmpsb
adc
hlt
inc
mov
jbe
and
dec
insb
adc
jp
jle
pop
fstpt
cmpsl
enter
inc
mov
add
xlat
and
popa
jge
mov
cmpsl
cld
inc
les
and
push
mov
pusha
mov
repz
mov
jo
rolb
mov
jecxz
dec
inc
fdivrl
test
repnz
dec
dec
pop
push
fidivrs
aam
push
mov
pop
mov
sbb
cmpsl
inc
mov
outsb
xchg
test
sub
jge
pop
into
lods
mov
dec
xor
cmp
push
notl
repnz
add
mov
sub
cmp
inc
cmpsl
daa
or
adc
or
cmp
fnstenv
icebp
cmp
and
push
movsb
jnp
pop
pusha
inc
rclb
movsb
and
aas
xor
out
test
pop
dec
adc
add
push
clc
cmp
mov
ret
mov
jmp
xchg
pop
andb
out
mov
fnstsw
rclb
lock
lock
popf
rolb
mov
cmp
mov
lock
push
test
and
mov
std
mov
dec
jns
jbe
loopne
pop
push
call
stos
pop
outsb
cli
in
mov
gs
cmp
fstps
jecxz
and
mov
out
add
subb
lods
or
xchg
mov
sub
mov
mov
aaa
cmc
insl
ljmp
mov
ja
imul
jns
dec
mov
dec
aam
and
cmp
stos
mov
mov
dec
ret
dec
std
out
loopne
pop
xchg
and
ljmp
clc
cmp
push
dec
pusha
adc
in
aad
shrl
lret
push
shr
test
hlt
xchg
movsl
xchg
sti
inc
ja
sub
mov
cltd
push
sub
sub
lahf
movsb
jmp
das
mov
and
xorb
sbb
pop
sub
pop
jno
cmp
pop
mov
in
jne
repnz
sbb
daa
in
in
fwait
xchg
add
out
lahf
jge
inc
aaa
movsl
adc
xchg
dec
xchg
jns
mov
loopne
std
dec
push
jb
icebp
cmpb
shlb
mov
lock
jno
test
mov
inc
xchg
call
rolb
xchg
sahf
mov
push
nop
add
loopne
cmp
lret
xchg
inc
sub
add
or
dec
stos
ret
adc
xlat
inc
push
or
jb
push
dec
sbb
sub
push
shrb
mov
mov
test
daa
mov
lcall
xchg
and
outsl
xor
loopne
sub
xchg
fistpll
pop
sub
outsb
adc
and
loop
sub
fdivrs
and
dec
add
mov
into
jo
repnz
aas
rcl
clc
pop
add
sti
out
cmp
add
or
cmp
mov
jmp
dec
dec
stc
xchg
sbb
lock
test
push
sbb
stos
push
int
and
mov
adc
mov
out
jae
psubd
mov
decb
hlt
sbb
subb
mov
add
mov
pop
pop
pop
push
jno
and
enter
jmp
dec
push
cmp
xor
or
lds
xchg
sbb
or
pop
add
pop
out
sbb
mov
hlt
cmp
cmc
mov
into
mov
mov
add
lock
add
inc
inc
xchg
js
ljmp
mov
mov
faddl
aad
add
inc
jp
cmp
out
or
das
jae
push
lock
sub
loope
cmp
fimull
test
popa
pop
xchg
test
mov
cli
inc
mov
pop
scas
test
adc
pop
adc
into
ljmp
fld
jp
fisubrl
add
movsl
sbbl
aam
icebp
cltd
adc
popa
pusha
arpl
aaa
pusha
dec
decl
test
pop
gs
hlt
lcall
addr16
sub
pop
test
xor
inc
shl
mov
rol
mov
inc
int
and
jl
test
adc
leave
lds
mov
inc
pop
mov
sti
dec
out
mov
rol
xor
mov
cltd
lods
enter
movsb
ret
dec
fsubs
sbb
or
rcrl
cld
push
imul
test
pop
sbb
add
inc
cmp
and
push
mov
outsl
dec
push
call
push
jle
pop
pop
ret
out
aam
sahf
xchg
jo
adc
insl
pop
dec
adc
repz
or
cwtl
out
int
lds
pushf
sbb
mov
or
inc
or
into
pop
js
lock
push
adc
mov
jnp
outsb
and
push
aas
jbe
add
lret
out
cmc
mov
outsb
or
sub
mov
lahf
xchg
stos
pop
inc
fsubrs
scas
push
adc
lods
rclb
sahf
add
push
daa
xchg
pop
pusha
sbb
jp
xchg
fs
xchg
aad
jecxz
stos
mov
inc
or
adc
call
add
mov
into
mov
dec
mov
iret
mov
rolb
lods
cmp
test
sti
fidivrs
int3
push
xchg
je
jbe
mov
adc
dec
movsb
scas
rclb
inc
dec
stos
pop
push
xchg
adc
dec
lods
shll
push
mov
sub
insb
adc
jnp
jb
and
xchg
mov
push
adc
gs
imul
mov
loop
xchg
mov
mov
scas
outsb
xor
call
ret
inc
xchg
pop
jle
and
leave
mov
mov
push
es
pop
or
push
mov
push
add
mov
pop
cmpl
mov
sub
cmp
imul
es
pop
mov
inc
xchg
data16
inc
outsl
movsb
mov
adc
mov
or
sti
xor
std
lcall
cs
sub
repnz
xchg
fwait
adc
dec
and
mov
mov
lret
call
fstpt
cmp
rclb
sbbl
and
ficompl
in
scas
xchg
cmc
jne
mov
mov
mov
inc
pop
mov
ds
mov
insl
push
sahf
push
stos
pop
mov
into
shlb
pusha
imul
mov
inc
fstl
cwtl
cmpb
adc
pop
imul
repnz
ljmp
jbe
je
hlt
pushaw
mov
xchg
dec
add
sub
call
es
add
jge
jb
and
mov
dec
ja
cmp
inc
int
out
stc
push
mov
xor
mov
js
sub
lret
mov
lcall
jp
sbb
dec
push
test
cmpsb
jecxz
fsts
mov
cmp
int3
cmpsl
cmpsb
fdivrs
hlt
xchg
cld
lock
mov
orl
vpacksswb
repnz
mov
dec
andb
push
mov
and
adc
mov
ljmp
jo
loopne
test
jb
in
dec
cmp
or
push
pop
or
add
mov
push
imul
push
or
dec
in
in
sti
pusha
cld
lods
repz
sub
jp
mov
stos
lret
xor
bound
je
dec
mov
mov
in
jns
bound
push
cld
sbb
cmp
arpl
lcall
ret
rolb
pop
sbbw
lods
xchg
out
add
xor
dec
push
push
pop
sub
add
ja
push
push
fs
sbb
les
aad
std
stos
mov
sar
push
int3
or
sub
call
sbb
push
inc
and
shrb
das
into
movsl
mov
shrl
inc
or
or
test
les
call
hlt
mov
sbb
das
push
ret
mov
movsl
test
jge
sub
lods
adc
push
push
mov
xchg
cmp
add
insl
inc
cltd
adc
icebp
xchg
test
push
pop
je
mov
cmp
push
adc
int
mov
ds
loopne
call
cmp
mov
loop
push
popa
incb
sar
push
in
sbb
push
adc
ss
leave
mov
mov
sub
mov
rcrl
orb
gs
mov
mov
fcmovnbe
ss
dec
orb
clc
mov
mov
imul
ljmp
je
xorb
clc
mov
sub
or
sbb
out
shll
in
dec
ret
inc
pop
gs
or
cmpsl
mov
push
add
jno
dec
ss
movsl
inc
cmp
jecxz
je
push
sarb
addr16
movsl
icebp
sti
mov
or
shll
sar
jne
aas
push
fisubl
mov
int
int
mov
std
cs
gs
sub
push
int3
lret
inc
xor
lcall
inc
lea
test
pop
call
jae
mov
jns
add
cmpl
push
movsl
push
in
ret
mov
shr
shlb
sbb
mov
jb
or
lock
add
xchg
insl
dec
mov
and
or
jne
fidivl
popf
lret
lret
pop
mov
testl
mov
sub
cmp
mov
clc
jecxz
jnp
jge
xor
and
test
xchg
iret
out
adc
jnp
sar
fdiv
es
mov
adc
lds
mov
sub
lahf
push
jmp
into
and
sbbl
jle
inc
cli
shlb
idivl
sti
xchg
and
sbb
faddl
int3
loope
vmread
les
sub
push
cmp
xchg
and
jno
and
inc
adcl
add
in
stos
jnp
out
mov
sahf
stos
inc
test
lcall
or
data16
or
sbb
aam
dec
sub
packuswb
scas
aad
xchg
adc
and
loopne
stos
mov
repnz
mov
popa
fnstsw
ss
push
cld
sub
xchg
not
testb
and
and
lock
xchg
lock
inc
or
xchg
popf
mulb
movsl
lahf
outsl
xchg
rolb
jle
dec
jecxz
mov
pop
cmp
mov
xor
mov
push
inc
add
add
adc
mov
xor
in
cmpsb
loopne
sub
sbb
fnsetpm(287
push
add
psubusb
and
fdiv
inc
fnstenv
mov
lock
adc
pop
or
cli
mov
hlt
popa
mov
loope
jecxz
or
jnp
enter
push
jne
mov
mov
insb
dec
pop
dec
xor
add
fisttpl
into
cs
je
loopne
jle
push
push
jns
dec
and
inc
add
sub
xorl
xchg
les
fimull
adc
mov
sbb
jle
enter
xchg
xor
xchg
aas
sbb
outsb
lea
out
and
cld
sub
xor
xchg
lods
push
and
out
nop
mov
loopne
les
js
sbb
scas
jmp
flds
pop
xlat
pop
xchg
inc
jns
xor
gs
pusha
push
andl
hlt
pusha
xor
dec
insl
cmp
stc
inc
mov
sbb
sub
std
das
sbb
ss
pusha
pop
aas
lods
int3
lods
jb
push
add
outsl
xchg
xchg
andb
inc
das
adc
push
xchg
mov
movsb
mov
movsb
divl
mov
dec
dec
mov
loop
mov
cmpsl
pop
loope
icebp
mov
shrl
fbstp
inc
xchg
push
inc
xchg
repz
lock
dec
mov
fnsave
popa
adc
mov
les
popa
sub
fwait
insb
push
rcr
add
jg
mov
dec
popf
inc
and
cmc
xor
dec
dec
lods
push
adcl
pop
fmul
data16
cltd
sahf
icebp
pop
nop
ret
mov
scas
pop
cmpsb
pop
fwait
sub
or
fisubl
jge
lahf
in
cmp
jge
in
mov
inc
sbb
jmp
mov
jge
pop
in
pop
and
scas
out
in
test
insl
push
cmpsb
leave
pusha
mov
dec
inc
sbb
jns
push
xchg
repz
cmp
inc
roll
nop
nop
hlt
xor
addr16
mov
dec
pop
enter
gs
lods
loop
test
pop
es
mov
xchg
lret
or
hlt
jb
pop
push
in
andb
fisubrl
popf
shrl
sub
out
mov
or
pop
jmp
nop
push
sbb
xchg
testb
pop
and
ficompl
fs
add
xor
jecxz
ds
mov
cmc
je
mov
fildll
jns
jl
push
or
adc
sub
cmp
xchg
cmp
in
mov
sbb
and
lods
mov
pop
xchg
hlt
gs
adc
push
out
mov
push
icebp
or
and
xor
insl
rolb
scas
sbb
mov
in
seto
lock
add
loopne
insb
dec
xchg
and
mov
sarl
adcb
add
loop
mov
cli
push
pop
out
sub
cmpl
fnstsw
or
add
push
and
sbb
push
xchg
addl
subb
aad
or
gs
lods
stc
pop
fisubl
add
sub
cmp
jne
push
jo
add
inc
jo
fsub
jb
push
dec
or
push
divb
mull
repnz
mov
imul
ds
jg
in
lcall
rcll
push
decl
mov
jbe
scas
test
mov
jb
dec
and
inc
hlt
pop
mov
sub
jg
xor
lds
lock
pop
pop
jno
cwtl
cmp
push
and
in
pop
jl
mov
push
mov
ss
adc
repnz
negb
mov
pop
mov
rclb
xchg
mov
xchg
push
lahf
inc
das
push
ja
rcll
cli
dec
outsl
js
inc
aad
insl
sbb
aas
pop
push
popa
xchg
enter
xchg
cmpsl
add
cli
aam
or
add
cmp
aas
rcll
fidivrs
sbb
je
adc
inc
lds
sbb
add
imul
push
mov
push
cmc
mov
lahf
aam
sbb
ljmp
lea
orb
stos
xchg
push
stc
out
inc
outsl
push
sub
dec
or
pop
clc
xchg
rcl
jmp
rorb
mov
cld
pop
outsb
inc
test
mov
fprem1
or
inc
daa
dec
aam
push
pusha
xchg
and
ss
inc
addr16
int
outsb
dec
lock
xor
pop
xchg
int3
outsl
jg
mov
pop
std
fidivrs
mov
movsb
das
adc
xchg
add
xchg
out
jp
pop
xchg
inc
push
nop
pushf
or
sub
push
stos
add
pop
shlb
sub
jbe
push
jbe
mov
pushf
shlb
add
push
mov
mov
std
mov
pop
add
xchg
mov
fcomi
mov
shll
rolb
adc
mov
ljmp
loopne
inc
sub
sub
ret
fnstsw
outsl
lods
mov
mov
xchg
call
or
iret
cmp
out
push
and
inc
fwait
sarl
imul
into
inc
adc
inc
sahf
mov
stos
loopne
stos
pop
cmp
sbb
inc
lock
pop
and
scas
fwait
out
dec
insl
mov
pushf
jp
and
into
or
mov
enter
iret
ja
inc
ss
xchg
sti
iret
or
jae
movsl
xchg
push
mov
push
in
or
inc
push
jne
mov
adc
xchg
jb
imul
addr16
and
and
call
dec
cmpsb
ss
in
fimuls
loope
insb
dec
mov
dec
inc
sti
fcoms
sub
push
clc
es
fnstcw
jae
jg
or
pop
mov
data16
push
pop
lret
decl
push
mov
js
sbb
sbb
and
dec
mov
loop
es
and
cs
adc
mov
xchg
es
data16
jno
adc
push
enter
push
mov
add
icebp
js
or
shrb
mov
shrl
fwait
gs
add
xor
mov
and
test
mov
push
mov
xchg
scas
dec
pushf
or
cmpsb
mov
mov
sbb
repz
cmp
mov
ret
and
or
add
ja
push
jge
mov
push
testl
cltd
xor
pusha
popf
sub
out
lret
jns
sub
xchg
mov
dec
fisubrs
mov
cmc
push
mov
dec
jae
xchg
aam
sub
adc
dec
fsubrl
push
jmp
sahf
inc
divb
outsl
mov
les
sub
bound
aaa
fmul
nop
jne
data16
cmc
sub
lcall
movd
je
je
or
dec
push
xchg
rclb
lods
sbb
leave
mov
dec
call
and
xchg
adc
cmp
or
std
sbb
fbld
push
daa
fisubrl
cmp
shlb
test
aaa
fnstenv
out
mov
into
add
sahf
xor
sbb
lods
out
mov
icebp
add
loop
xorb
rcrb
pusha
and
inc
outsl
repz
dec
adc
sub
sbbb
dec
sub
pop
stc
popf
in
and
ja
movsl
popf
inc
into
sbb
or
sub
icebp
push
es
mov
push
aaa
or
mov
es
out
lret
loop
stos
mov
jg
scas
dec
jmp
mov
mov
mov
in
and
aas
movsb
xchg
xchg
inc
cltd
out
loop
stos
mov
xor
js
xor
and
and
jns
mov
mov
in
decl
mov
or
xchg
leave
test
mov
dec
outsb
add
fidivs
mov
movsb
mov
aas
pop
and
pop
cs
inc
cld
cmpl
cld
mov
mov
out
cmp
sbb
mov
xchg
mov
push
popa
cmp
cmp
ss
mov
lds
cmp
dec
fiaddl
xchg
notl
loop
xchg
mov
lret
adc
ja
xor
cmpsb
out
into
cli
popa
fwait
test
movsb
neg
fs
xor
inc
mov
sub
lret
jno
jns
xor
lahf
mov
mull
and
ds
inc
cmp
mov
fbld
jbe
mov
sahf
dec
add
xchg
js
xor
mov
in
cwtl
cli
xlat
dec
and
fdivrl
das
adc
push
mov
sub
xchg
add
mov
adc
inc
xlat
fbstp
or
jb
test
add
hlt
inc
xchg
mov
pusha
push
lds
adc
or
stos
and
dec
mov
sarb
push
lock
mov
and
dec
mov
mov
mov
je
cld
and
repnz
nop
lahf
pop
lcall
mov
cld
jp
lret
push
enter
and
andl
sbb
mov
out
sub
push
scas
insw
or
pop
in
imul
jae
xchg
and
push
jns
add
rcrl
xchg
pop
fisubrs
scas
cltd
push
and
jg
sbb
in
push
jno
je
in
jne
ret
add
mov
cmp
mov
and
imul
xor
mov
or
inc
lea
sbb
jnp
pop
out
mov
xchg
push
jge
adc
add
push
lods
leave
repz
pushl
push
push
popf
lahf
pop
pop
add
inc
clc
arpl
insl
ficoms
cltd
lret
std
xchg
inc
jecxz
mov
adc
dec
adc
daa
cmpsl
out
call
adc
outsb
popf
xor
jp
nop
aas
or
call
and
pushf
test
mov
ret
fiaddl
cmpsl
xchg
hlt
rorb
mov
rorb
or
inc
ss
and
cltd
cmc
mov
pop
or
mov
adc
or
pusha
pop
jle
mov
aad
iret
in
test
adc
mov
test
inc
scas
stos
loop
es
jle
loope
push
mov
scas
and
pop
outsl
je
adc
mov
outsl
sub
sub
inc
adc
mov
leave
cmc
sbb
or
push
mov
xor
mov
test
stos
sub
test
sti
fs
in
sbb
fiaddl
in
push
fldl
xchg
mov
cmc
push
out
sar
sbb
dec
or
inc
push
xchg
lods
mov
pop
rcr
scas
jnp
or
dec
incb
fucom
pop
repnz
push
push
jbe
pop
add
mov
aam
sbb
movsb
mov
add
in
cs
stc
shl
call
adc
dec
inc
test
pusha
push
cmp
ret
xor
pop
ss
or
sub
push
mov
mov
cltd
lock
outsl
je
aam
mov
mov
mov
jb
fld
fsubl
nop
cmp
lahf
jno
cwtl
mov
and
lret
adc
dec
cwtl
and
inc
jns
ror
stos
sub
jl
xchg
xor
nop
lret
jne
into
push
outsl
adc
mov
push
rcr
lods
stc
es
dec
scas
xor
sub
insl
int
and
adc
lods
out
pop
call
les
push
mov
cltd
out
addb
imul
loopne
fidivrs
push
loop
in
xor
fnop
or
pushf
push
mov
push
packsswb
ret
ret
push
push
rolb
lock
jmp
dec
adc
push
pop
xorl
add
or
push
xchg
xor
daa
sbb
push
mov
lds
xchg
and
push
jp
adc
into
mov
call
in
bound
repz
fstpt
xlat
test
clc
test
push
mov
adc
in
aaa
push
mov
xchg
pop
and
int3
push
sbb
fildl
stos
pop
or
pop
sbbb
mov
int3
push
mov
addl
pop
std
xlat
movsb
repz
arpl
aad
xchg
pop
cwtl
add
shll
or
fcmove
loop
popa
mov
fs
invd
je
mov
scas
inc
ss
fdivrs
push
fninit
xchg
or
hlt
dec
xchg
mov
sbb
cmc
cmc
and
lahf
sbb
out
movsl
or
jb
or
mov
fdivl
mov
sub
mov
cmp
insb
cmp
ja
repnz
add
mov
insb
dec
mov
sbb
fwait
cmp
stc
addb
stos
mov
das
sahf
lret
ret
mov
push
pop
fildll
js
aas
cltd
loope
adc
add
fiaddl
cli
inc
or
lea
ret
fisttps
jl
sbb
je
mov
leave
mov
out
jp
dec
popa
repz
xor
outsl
xchg
jmp
dec
lret
clc
push
scas
into
lods
xchg
lret
mov
jle
xchg
ficoml
cli
mov
xchg
push
jno
cmp
subl
outsl
or
sarl
popa
dec
bswap
pushaw
imul
xlat
jecxz
sub
stos
push
ret
mov
iret
fildll
pop
jae
lods
jmp
jl
jp
dec
add
xor
int
out
inc
imul
mov
inc
mov
add
jno
mov
xchg
mov
push
test
sub
or
lock
pop
jno
subl
test
and
mov
shl
cli
cmp
sub
sub
daa
adc
cs
jmp
sbb
lret
push
mov
loop
in
insb
lahf
mov
out
push
sub
add
mov
in
mov
dec
adc
in
push
mov
ret
cmp
jb
mov
jecxz
mov
int3
adc
shlb
pop
xor
clc
scas
pop
sub
xor
mov
outsb
int
ror
sahf
scas
jl
sbb
ja
sbb
sub
push
pop
test
scas
xchg
dec
in
sub
sti
stc
lret
sbb
pop
and
push
orb
mov
loopne
cmc
pop
mov
push
add
jmp
pop
insb
mov
lea
adc
scas
repz
jp
ljmp
rclb
ret
je
or
and
push
adc
ss
aad
cltd
sbb
out
adc
sahf
fs
outsb
inc
mov
jecxz
sbb
cmp
and
loope
ret
pop
adc
and
scas
jnp
fwait
testb
pop
jo
cld
xchg
mov
adc
cmp
pop
cs
es
push
ds
xor
jb
aad
inc
xor
hlt
push
adc
ds
inc
jge
js
dec
popa
shrb
pop
test
lock
mov
fwait
and
movsb
and
sbbb
mov
imul
icebp
push
in
lcall
add
scas
push
or
mov
cmp
and
cmc
inc
sub
sti
cs
test
pop
int3
push
jb
test
cmp
mov
cmpsl
int3
out
cmp
decl
push
or
scas
les
into
insb
mov
lods
lock
imul
mov
ljmp
xchg
mov
ret
mov
sar
scas
pop
sbb
dec
lret
outsb
aas
ret
inc
in
cmp
inc
add
xchg
mov
scas
shrb
push
dec
les
hlt
xor
lods
outsl
repnz
ja
imul
ja
sahf
fstp
sbb
int3
cwtl
sbb
dec
aaa
lahf
adc
sub
cltd
gs
adc
ja
push
popf
in
mov
mov
into
xchg
sub
xchg
push
xchg
pop
orl
mov
lock
int3
data16
mov
cltd
fidivs
inc
in
stos
lret
sbb
shrl
inc
jne
mov
std
fisubrl
and
js
jns
rcll
mov
sub
test
add
sub
dec
test
cmpl
xor
sub
sarl
sub
lods
enter
inc
lahf
lods
mov
ljmp
lods
jl
mov
mov
sti
fsubrs
daa
cmp
lahf
and
imul
mov
mov
inc
dec
dec
out
loop
push
sub
les
jp
adc
mov
cli
rclb
lret
inc
cmp
cmp
push
stc
repnz
hlt
cmpsb
add
inc
mov
adc
ret
mov
jbe
cmpsb
pop
daa
lods
mov
inc
xlat
sbb
jo
mov
mov
jno
rclb
mov
loopne
pop
ret
sub
hlt
cmpl
out
cmp
js
in
stos
pop
in
xchg
jge
das
sbb
sbb
inc
jnp
es
sbb
sarb
out
int3
mov
push
mov
jnp
jecxz
sbb
or
lds
mov
repz
adc
mov
orb
jnp
testl
addr16
mov
lods
push
xlat
jmp
sbb
sub
xchg
jp
mov
insb
and
mov
bound
int3
loop
iret
adc
fmul
sti
xor
xor
jno
or
les
xchg
jle
xchg
mov
fsubrp
pop
ljmp
add
fiadds
shlb
dec
mov
idivb
xchg
decb
cltd
popf
xor
dec
jecxz
int3
mov
xchg
test
xchg
inc
xchg
lods
lcall
mov
push
shlb
jbe
adc
es
test
push
mov
lods
mov
or
jge
lahf
int
cltd
lahf
dec
js
loopne
lods
imul
into
cld
rorl
xchg
xchg
push
imul
pop
and
dec
lret
adc
jmp
movsb
ss
iret
xorb
xchg
sarb
sbb
clc
pop
pop
jecxz
nop
mov
mov
mov
jge
push
or
jge
mov
jmp
test
out
lock
idiv
cli
bound
das
or
rcr
scas
int
mov
cs
sti
loop
incl
or
mov
repz
add
hlt
mov
adc
and
dec
pop
bound
xchg
sarb
mov
xlat
add
sarl
icebp
adc
adc
daa
shrb
push
sbb
and
mov
icebp
xor
or
scas
stos
ss
inc
push
rorb
inc
add
adc
popf
scas
xor
stc
jmp
repnz
loopne
adc
mov
dec
cmc
sbb
xorb
jl
xor
stc
iret
inc
mov
hlt
jno
arpl
sti
pusha
adc
pop
jg
mov
or
pop
push
jb
cld
out
mov
sub
sub
xchg
adc
xchg
adc
fnsave
jns
pushf
adc
mov
mov
nop
fdivrl
inc
in
fldln2
and
loop
xchg
cmp
inc
outsl
jbe
jno
inc
jle
repnz
xchg
inc
push
xor
push
hlt
jns
cmp
test
arpl
iret
inc
mov
lret
ja
scas
mov
dec
stos
cmp
ret
in
inc
mov
fwait
ljmp
sbb
popl
aaa
and
push
push
cmp
ror
xchg
dec
pop
data16
int
or
lahf
cmp
xchg
push
xlat
mov
cmpsb
dec
insb
lret
sbb
mov
mov
in
or
jo
incb
es
pop
bound
enter
push
push
loopne
sarb
mov
pushf
push
jno
nop
jmp
jecxz
add
outsl
and
rolb
pop
adc
sub
mov
pop
icebp
or
in
xchg
cmpsl
or
pop
fcomi
pushf
pop
sbb
jl
into
jecxz
jb
test
cld
clc
pop
mov
push
fisubs
jmp
xchg
mov
out
inc
mov
add
int3
aam
mov
jp
and
int
jmp
stos
cmovae
inc
xchg
dec
xor
sbb
pop
in
xchg
xchg
out
dec
fs
inc
push
fwait
adcl
js
out
inc
sbb
and
pop
in
daa
push
popa
insl
incb
shll
sub
out
shr
and
in
loopne
cmpsl
dec
roll
jno
adc
je
pop
mov
or
mov
outsb
xchg
sbb
and
shl
or
lahf
sub
test
jle
addb
mov
sbbl
scas
stc
bound
mov
shll
push
cmp
shll
and
mov
iret
mov
xchg
sbb
xor
xchg
inc
ja
movsb
rclb
popf
xor
outsb
mov
mov
xchg
or
pop
stos
adcb
lods
xor
sub
call
notb
divl
loope
push
aam
mov
push
je
es
jnp
repz
cwtl
dec
es
mov
adc
dec
sub
add
clc
mov
inc
lahf
mov
mov
int
iret
lret
aad
sub
and
ljmp
inc
stos
mov
push
dec
cli
fldl
dec
pop
in
mov
pop
dec
idiv
cltd
jne
fwait
pop
fwait
inc
jmp
test
cmp
or
mov
add
out
sbb
jnp
push
je
dec
loop
es
ret
xchg
xor
lcall
xor
lock
filds
rcrb
and
and
dec
aaa
pop
fildl
dec
and
in
or
hlt
outsb
insl
daa
xchg
popa
cld
dec
pop
jo
xchg
dec
jge
into
fcoml
repz
jb
dec
push
in
ljmp
mov
cmc
dec
pop
jae
popa
leave
mov
or
sti
jmp
cmpsl
imul
pop
repz
adc
and
dec
cwtl
sub
add
adc
rcrl
add
cmp
out
movsl
cwtl
mov
adc
andl
mov
sbb
out
dec
aaa
push
fwait
cmp
imul
stc
cmpsl
sub
mov
loope
addl
mov
mov
jecxz
scas
mov
mov
jle
test
inc
testb
orl
xlat
xchg
pop
test
sub
cmpsb
pusha
xchg
cli
scas
push
adc
xchg
std
inc
lock
xchg
fsubrs
inc
adc
mov
lods
or
xor
testl
in
add
add
out
pop
fbld
pushf
addr16
dec
jle
rcr
loopne
inc
cmp
shrb
pusha
stos
rcrb
mov
sbb
add
pusha
negl
xor
cmpsl
push
scas
mov
lret
lea
jns
jo
test
or
push
ret
dec
mov
xor
mov
jb
fistpl
loope
push
popf
inc
shll
mov
mov
adc
cmp
fidivl
or
sub
cmp
or
lahf
arpl
lock
and
andb
xor
les
or
mov
fisubs
mov
cltd
out
subl
jge
xchg
sub
pop
jns
mov
xchg
addr16
dec
dec
mov
jp
lret
lods
js
xchg
push
ds
movsb
mov
jmp
jnp,pt
jns
mov
fcmovu
inc
mov
int3
add
std
shl
mov
mov
adc
lock
lret
xor
mov
xchg
lahf
loopne
test
mov
push
dec
xchg
dec
add
ds
mov
ss
mov
enter
xchg
inc
movsb
mov
int3
or
mov
in
push
cwtl
stos
daa
add
ret
call
mov
adc
cmp
mov
jb
jno
arpl
cmpsb
mov
loopne
adc
ret
lcall
pause
push
wrmsr
fstpl
inc
sti
popa
divb
inc
cmp
push
inc
or
dec
mov
pop
mov
rcrl
push
imul
cmp
fidivl
mov
call
lods
test
add
adc
mov
adc
scas
push
int3
add
mov
xchg
cli
loopne
pop
xor
in
xchg
ss
mov
mov
ret
ljmp
jl
mov
add
pushf
inc
push
bound
mov
jno
incl
cmp
cwtl
test
jmp
or
push
cmp
aam
fisubl
or
pushf
mov
xchg
cs
out
pop
adc
sub
and
mov
out
push
cmp
les
adc
fs
cmp
jle
sahf
sti
lcall
jb
js
add
mov
lock
mov
jae
dec
adc
xchg
mov
pop
enter
adc
loopne
cmp
mull
pop
aam
lret
jns
rcrb
cmp
sbb
sub
test
addr16
loopne
test
je
mov
fcmovb
ret
inc
sub
fs
imul
xchg
cltd
stos
pusha
or
aaa
xchg
push
push
and
mov
add
push
enter
jl
daa
dec
insl
imul
mov
lock
lea
or
bound
ja
pusha
jne
mov
mov
clc
arpl
add
js
nop
sahf
sub
popf
shrb
movsl
out
xchg
fisubs
sub
test
cmp
mov
fs
mov
rcrb
inc
or
sti
je
loopne
push
jmp
fidivs
imul
shlb
mov
xchg
adc
cmp
mov
sbb
and
into
in
imul
inc
clc
or
adc
addr16
add
cli
mov
int
jno
subb
fwait
mov
mov
pop
clc
mov
scas
dec
mov
jnp
mov
lock
inc
xchg
pop
mov
and
rorl
cli
cmp
add
imul
packssdw
mov
imul
cmp
add
adc
sbb
mov
push
add
out
in
loopne
adc
std
push
mov
or
adc
xor
js
dec
pop
jnp
cld
in
dec
jmp
in
inc
daa
lds
in
test
inc
loop
sbb
pushf
jmp
fisttps
or
mov
repnz
jne
push
fadds
ret
mov
popf
jmp
movnti
cs
xor
je
sbb
lret
mov
adc
adc
leave
push
mov
xchg
add
imul
mov
add
fldl
rclb
je
sbb
mov
xchg
sbb
add
and
ss
aam
nop
and
inc
pop
in
fistps
ret
fdivl
push
inc
mov
bound
loope
mov
mov
movsb
xchg
add
cmp
or
sub
das
adc
fcomps
and
sbb
push
xchg
pop
je
cwtl
notb
loopne
loopne
lods
and
add
stos
mov
test
jecxz
inc
xor
xor
xchg
loop
scas
and
or
aad
mov
xchg
pop
dec
filds
dec
gs
scas
popf
mov
nop
and
pop
push
mov
js
test
movsb
jg
pop
or
sbbb
mov
sub
xor
or
fimuls
fwait
pushf
inc
daa
inc
mov
cld
adc
loope
imul
cmp
add
adc
int
pop
cmp
sbb
rorl
cmp
lods
push
imul
cmpsl
sbb
std
mov
xor
add
pop
es
inc
cld
mov
fidivrs
push
cmp
mov
movsb
dec
adc
mov
popf
iret
pop
out
hlt
xor
sahf
repz
or
mov
js
jns
cmc
nop
push
aad
iret
mov
mov
dec
dec
cltd
int
push
xchg
rolb
les
push
fisubs
imul
jp
sbb
xchg
cmpsl
inc
popf
orb
xchg
add
into
jg
cmp
pop
cwtl
mov
push
lock
rorl
nop
arpl
mov
adc
jne
jl
sub
leave
adc
nop
es
ror
enter
jns
sub
decb
inc
lods
fpatan
jl
or
adc
dec
data16
frstor
dec
sbb
mov
icebp
adc
pop
sarb
out
in
add
hlt
mov
xchg
sbb
inc
dec
mov
jge
push
test
test
ja
xchg
xchg
or
in
xor
mov
das
push
lahf
dec
sbb
and
mov
aam
testb
fwait
adc
mov
outsb
fwait
cmp
test
xor
arpl
inc
hlt
lret
xchg
cwtl
and
mov
or
jp
clc
adc
out
decb
cli
or
lahf
orb
lahf
dec
pop
lret
stos
enter
jae
push
aam
icebp
xor
cli
pop
lcall
nop
xchg
outsl
xchg
movl
sbb
adc
jnp
add
cs
or
add
jge
fwait
pop
xlat
mov
das
out
cwtl
xchg
sahf
js
mov
aaa
jp
ljmp
addr16
mov
sub
mov
mov
sbb
mov
mov
out
popa
xchg
inc
push
test
push
jns
sub
cmp
sbb
jns
jmp
mov
sbbb
pop
addl
pop
loop
loope
testl
xor
into
adc
mov
jg
or
dec
movsb
inc
cmp
aad
movsl
push
push
sbb
sub
pushf
shlb
mov
stc
loope
push
popa
cmp
inc
jns
adc
and
push
mov
xchg
shl
repz
cmpsb
notb
mov
sar
adc
mov
dec
pop
pop
test
test
scas
and
scas
adc
or
pop
iret
ljmp
gs
xchg
mov
rcll
sub
pop
arpl
sub
movsl
mov
daa
imul
insl
cmp
popa
jp
fadds
aam
in
jo
xchg
imul
cmp
stc
scas
inc
scas
out
push
outsb
inc
mov
xchg
roll
scas
je
and
gs
push
jb
arpl
jmp
adc
pop
loopne
inc
cli
cmp
insl
mov
mov
or
push
ljmp
cmp
push
lea
jl
adc
push
jnp
cmp
fcoml
negl
and
ret
mov
xor
mov
rcr
dec
pop
adc
or
add
or
jns
stos
cmpsl
sub
jge
add
push
xchg
leave
mov
pop
xor
sbb
dec
jb
sub
repz
mov
mov
mov
ret
arpl
cmp
in
test
cmc
xor
mov
pop
ret
and
push
cmp
add
insl
mov
lcall
cltd
gs
xchg
mov
push
fs
in
pop
je
dec
xchg
adc
rclb
leave
test
inc
dec
mov
sub
dec
icebp
and
mov
adc
mov
xchg
fbstp
sub
xchg
shrl
gs
mov
jbe
xchg
mov
std
xor
add
rcr
pop
pop
adc
rclb
sub
les
lahf
pop
and
inc
outsb
mov
jbe,pn
xchg
ret
dec
mov
jmp
adc
testb
mov
fnstsw
mov
push
cmpsb
fstpt
fstl
mov
jae
mov
xchg
mulb
pop
cmp
adc
cld
shrl
dec
popa
daa
sbb
aas
in
in
mov
into
cmpsb
push
rcl
and
fisubrs
sbb
jmp
in
call
or
mov
int
das
jnp
movsb
sub
mov
data16
aam
jecxz
jb
pop
and
dec
pop
push
stos
jb
mov
mov
xchg
shll
dec
and
mov
mov
pop
push
adc
dec
mov
loop
jecxz
lods
arpl
mov
rcll
int
pop
inc
sub
scas
adc
mov
lret
push
lcall
icebp
push
push
dec
cmp
inc
cmc
lods
jae
clc
xorl
fadd
rolb
lock
ds
lcall
add
pop
push
pop
mov
test
int3
arpl
clc
sub
mov
outsl
add
mov
sahf
divb
mov
ret
gs
xchg
add
inc
mov
ja
add
fsubrs
enter
ja
mov
push
ja
dec
cs
mov
inc
jbe
fidivrl
jmp
lcall
jns
repz
cmc
iret
nopl
cmp
lods
mov
xor
movsl
xchg
lock
and
mov
ds
nop
inc
adcl
filds
jl
fstpt
adc
out
and
xchg
das
mov
add
icebp
mov
push
xchg
jne
xor
fmull
sub
call
out
xor
dec
je
pop
sub
or
adc
fisubrs
aam
lret
pop
call
mov
xor
mov
int
and
add
xor
push
out
bound
out
inc
lods
pop
and
xor
jae
fwait
stos
mov
aas
movsl
pop
clc
mov
rcrb
sbbl
sbb
dec
push
aas
push
xor
jns
popa
outsl
jge
shlb
imul
lock
sbb
xchg
or
mov
imul
shlb
mov
xlat
jno
xchg
fdivs
jecxz
pop
stos
adc
cmpsb
xor
add
in
mov
push
fldl
jecxz
int3
xchg
or
adc
inc
push
outsb
inc
jb
mov
fsubs
or
mov
push
sub
lcall
sbb
xchg
testl
xor
cwtl
jb
mov
sbb
out
test
or
ja
out
dec
adc
push
mov
jg
adc
mov
push
cs
push
fsubr
push
clc
cmp
scas
mov
das
jbe
jg
lods
sbb
push
bound
cmp
test
cs
xchg
dec
fnsave
ret
pop
idivb
out
sub
xor
shrl
cmp
inc
mov
or
dec
in
xlat
or
mov
add
mov
insb
mov
repnz
popf
mov
pop
insb
fidivs
jg
and
int
push
and
sbb
loope
sar
cmpsl
ss
mov
mov
or
or
ja
mov
call
fisubs
mov
insl
mov
ss
stc
data16
pusha
ja
push
inc
mov
jmp
and
dec
mov
test
std
push
xchg
sahf
das
and
cli
enter
shr
add
or
ja
int3
mov
add
pop
push
cmpb
dec
clc
mov
xchg
ss
adc
int
test
shlb
out
push
xchg
mov
jmp
loop
lods
je
pop
add
sub
jg
jg
jp
mov
dec
mov
pushf
mov
xor
stos
pop
mov
stos
adc
outsl
das
and
sar
pushw
xlat
bound
shll
scas
push
mov
xchg
fbstp
adc
out
lret
inc
imul
sti
popa
sbb
mov
sbb
push
orl
push
or
push
leave
imul
adc
ror
dec
cmp
push
xor
ja
push
es
mov
lods
inc
stos
cmp
scas
xor
into
out
cltd
sub
dec
insl
aad
lods
mov
test
cmc
jmp
push
scas
test
jmp
mov
mov
ret
lret
jo
fstpl
je
adc
lods
loop
ljmp
push
cmp
aas
adc
decl
dec
sub
sub
stc
lea
xor
or
push
cs
mov
shll
call
aam
notl
stos
in
cmp
in
push
pushf
cli
mov
stos
outsl
mov
pop
rclb
pusha
inc
push
pop
aad
pop
jle
cwtl
inc
test
push
sbb
inc
shlb
push
and
cld
cmp
nop
cwtl
aad
mov
outsl
out
lcall
add
stos
mov
outsb
mov
test
push
out
dec
int3
les
mov
pushf
jp
cs
mov
cs
mov
pusha
add
push
sarl
inc
pusha
mov
push
and
pop
aas
sub
es
mov
cmc
mov
imul
inc
in
outsb
js
adc
loopne
scas
add
mov
adc
fimuls
mov
cmp
repz
clc
adc
cmp
push
xor
sbb
sub
cmpsb
and
andb
add
mov
xor
jmp
mov
mov
mov
ljmp
imul
pop
add
testl
jmp
xchg
insb
mov
mov
pop
jae
out
sub
sub
sahf
jmp
jne
into
mov
test
pop
ds
fs
mov
pushf
mov
add
mov
xchg
dec
call
lods
adc
sub
adc
les
fs
xor
sbb
pop
pop
pushf
popa
popa
fcmovu
inc
sbb
mov
inc
divb
mov
push
ljmp
mov
cld
sbb
mov
lods
xchg
ljmp
mov
mov
mov
les
rclb
mov
jno
push
mov
dec
inc
cs
mov
adcl
or
nop
push
cltd
insb
mov
pusha
daa
enter
mov
jle
notb
hlt
pop
adc
push
jo
pop
sub
cmpsb
jne
insb
ljmp
paddusb
jno
aam
dec
movsb
testl
sbb
mov
xchg
data16
pop
mov
and
imul
mov
test
loop
popa
push
add
push
mov
cld
lods
add
jbe
push
aam
fidivs
jns
inc
jl
xchg
mov
stc
outsb
ljmp
cmc
stos
aaa
int3
lea
je
in
adc
push
orl
inc
dec
xchg
mov
fsubp
inc
adc
inc
push
lret
add
cmp
inc
inc
dec
fcomp
push
adc
or
jns
daa
scas
ss
insl
mov
fisubrs
cwtl
adc
sahf
jl
push
push
pusha
icebp
push
in
sbb
nop
push
dec
adc
push
data16
or
cmp
inc
sub
enter
lret
push
hlt
add
inc
mov
lahf
rcl
scas
xchg
pop
std
dec
inc
sbb
jae
pop
subl
hlt
negb
push
sar
insl
mov
out
mov
imul
and
cmp
adc
xchg
jp
hlt
pusha
jge
add
xchg
or
add
je
mov
push
shrl
sub
sbb
icebp
mov
inc
push
outsb
call
push
sub
inc
inc
push
and
mov
addr16
mov
loop
push
xchg
fldt
lahf
fistpll
pusha
jnp
outsb
clc
sub
lods
loopne
out
push
push
xchg
or
idivb
je
push
pop
or
inc
cmc
inc
mov
loope
incb
adc
cli
call
push
or
sahf
and
xchg
daa
adc
movsb
xor
sub
rcll
loop
jnp
loopne
adc
cwtl
and
outsl
cmp
sub
mov
sbb
push
hlt
add
add
dec
cmpsl
movsb
push
inc
push
xor
sbb
inc
sub
pusha
add
scas
outsl
aas
loopne
mov
pop
fidivrs
mov
mov
push
push
outsb
jb
out
iret
sbb
int3
repnz
xor
push
aaa
cmp
xchg
xor
aad
sahf
lea
push
scas
add
push
test
test
push
adc
sub
js
dec
add
or
std
xor
mov
add
movsl
pop
inc
mov
mov
xchg
push
adc
pop
sub
push
out
sbb
jmp
jne
int3
lret
mov
push
or
scas
data16
gs
popa
inc
push
out
test
xchg
les
enter
sub
add
cmpl
jne
adc
daa
imul
push
sbb
push
insb
cmp
loope
adcl
jbe
iret
add
test
push
aaa
cmp
gs
jle
xor
mov
jae
dec
mov
adc
out
mov
aam
sbb
add
fisubrs
lods
roll
fcomps
mov
leave
jmp
pop
in
or
mov
or
and
loopne
push
or
scas
je
push
push
add
jecxz
mov
frstor
xchg
ljmp
movsl
rcr
jge
fwait
cmp
sarb
repz
sub
add
pop
jle
shl
movsl
movsl
dec
outsl
or
out
mov
jmp
push
inc
std
xlat
sub
dec
dec
ljmp
mov
and
js
je
or
mov
pop
xchg
jecxz
fsts
out
fsubs
jl
pop
inc
movsl
sub
cmp
inc
xchg
mov
dec
and
pop
outsb
mov
pop
mov
xor
xor
xchg
inc
pop
or
fistpl
jne
cmpsl
or
or
push
push
cmpl
push
pop
lret
out
pop
test
lcall
pop
cld
insb
mov
mov
in
lods
sub
xchg
scas
dec
in
inc
incb
cmp
lea
rcll
adc
cmpb
testb
std
psubw
mov
pop
dec
mov
stos
jns
xor
cs
stos
mov
dec
in
pop
mov
jae
pop
dec
push
in
mov
lret
mov
adc
popf
mov
pop
sahf
iret
adc
addr16
inc
sahf
pop
or
outsl
jg
and
mov
jmp
stos
fsubrl
arpl
fisttps
mov
and
aam
and
adc
cmc
cltd
cmp
mov
push
inc
dec
iret
adc
pop
fistpl
dec
aaa
sbb
jmp
out
outsl
dec
daa
scas
push
push
sahf
cmp
xor
mov
dec
xchg
mov
mov
loope
jne
push
jecxz
cs
push
cmc
push
dec
inc
and
xor
aad
sbb
jle
push
adc
call
into
ljmp
movsl
mov
daa
dec
dec
xlat
pop
sbb
lods
movlps
aam
adc
rorl
ss
loop
adc
add
and
sub
cmc
jo
leave
jne
mov
jae
xchg
dec
jnp
pushf
aam
push
and
ss
ja
pusha
mov
sbb
dec
mov
lea
mov
stos
sbb
cmpsb
xchg
mulb
dec
shlb
push
lods
dec
inc
mov
pop
in
sbb
inc
iret
cs
sub
jae
outsl
mov
fisttpll
cmp
rolb
loopne
out
popl
inc
xchg
adc
push
xchg
adc
shl
and
adc
ret
inc
pop
xchg
test
jmp
gs
int
sbb
push
xchg
mov
imul
pusha
mov
or
or
int
bound
push
es
jge
mov
ds
pop
dec
and
das
fisubrl
jb
jnp
jne
and
lods
push
inc
xlat
rclb
xchg
pop
movsb
das
sti
sbb
add
iret
sbbb
push
add
stos
mov
mov
ds
fsubl
push
push
fidivrl
aam
test
jl
cmp
add
int3
not
sbb
jne
mov
mov
mov
jle
and
outsb
mov
and
loop
mov
aad
xchg
fcomps
push
jp
iret
push
jp
xchg
mov
lret
jnp
push
loope
in
sbbb
in
pop
mov
or
test
leave
adc
imul
cli
cmpsl
adc
inc
sub
adc
inc
mov
jns
mov
push
subl
xor
push
add
push
cmpsl
scas
dec
ds
cmp
in
xor
or
bound
sti
in
pop
in
lret
je
cmp
dec
xchg
sahf
mov
arpl
xor
mov
mov
and
rcr
xor
push
pushf
xchg
sub
push
inc
ror
xchg
scas
xor
mov
adc
addb
pop
stos
jns
mov
imul
fsubrl
or
pushf
shlb
in
mov
jno
gs
and
pop
outsb
movsb
ss
test
aam
cld
testl
and
mov
es
loope
inc
or
push
cmpsl
add
ficoms
testb
mov
in
cmp
ljmp
xchg
xchg
pop
and
inc
ret
sti
or
xor
addr16
mov
sarb
push
fistpll
mov
xor
jle
arpl
xchg
cmpsl
and
pop
and
inc
xlat
jb
stos
jp
dec
insl
push
ljmp
push
mov
cmc
pop
mov
test
and
and
cmp
das
sub
pop
jbe
mov
jb
push
imul
and
repz
ljmp
mov
pop
pop
pop
pop
push
jnp
jle
int3
arpl
mov
test
xchg
loop
psubb
rorb
insb
push
pop
ret
ds
jnp
shl
jns
dec
xchg
hlt
inc
or
je
cmc
fcoms
mov
aad
rolb
test
mov
std
adc
mov
xchg
loopne
push
inc
jb
ljmp
out
dec
mov
lea
dec
in
jmp
push
sti
mov
popf
int
repnz
aaa
data16
jnp
push
xor
es
enter
jmp
daa
rcl
int
add
aam
pop
popf
jl
xchg
icebp
sbb
jbe
imul
push
jbe
ja
scas
loope
push
xchg
orl
ret
mov
xor
test
orl
push
sub
rcl
sub
mov
sarb
rclb
and
cmp
dec
mov
xchg
stc
fwait
jne
xchg
lods
xchg
mov
jnp
or
popa
addl
add
subl
popa
repz
dec
mov
dec
adc
das
inc
cmp
stc
shll
sub
faddl
aaa
xchg
ret
pop
push
pop
cwtl
test
inc
dec
jae
icebp
inc
mov
xchg
jecxz
xchg
inc
mov
les
or
jmp
mov
ljmp
bound
sbb
sub
inc
cmc
pop
iret
lret
and
jle
fistpl
or
jmp
pushf
cmpsb
jp
repnz
popw
mov
sub
jge
cmc
ret
inc
sub
aaa
sahf
or
push
inc
sub
std
clc
push
sahf
pop
in
xor
push
inc
cmp
insl
cmp
lcall
push
push
mov
xchg
loop
les
push
ja
lods
xchg
bnd
notl
cmp
mov
cmpsl
or
hlt
jge
insb
mov
sbb
sub
adc
cmp
mov
int
mov
mov
lret
jp
fmuls
clc
sbb
inc
mov
imul
xor
sbb
sbb
fs
jmp
sarl
in
lods
xor
adc
cmpsl
adc
leave
add
mov
mov
stos
mov
push
fsts
xchg
cmp
adc
push
push
add
out
in
and
ljmp
popa
cmp
xchg
ret
lods
pop
test
sahf
add
mov
stos
loopne
std
pop
rclb
into
ja
sub
xchg
loopne
loop
shr
mov
cmp
jle
xchg
inc
stos
mov
or
and
cmp
sbb
aam
sbb
pop
mov
js
add
jle
cmpsl
xor
dec
sbb
xchg
pop
add
lret
insl
mov
adc
bsf
cmpsl
adc
xor
cmp
and
cmc
clc
adc
lret
cmp
into
xchg
sbb
sub
daa
add
add
and
jp
mov
arpl
out
in
imul
pop
dec
call
testb
or
sbb
sarl
sub
xor
insl
movsl
mov
pushf
adc
ljmp
int3
or
jp
fnclex
ja
test
cmc
add
xor
xor
bound
std
test
pop
sbb
je
lds
dec
clc
inc
lock
xor
push
pop
pop
decb
data16
push
pop
adc
enter
gs
andb
dec
popa
push
imul
mov
add
cmp
mov
test
in
sbb
jbe
pop
mov
jmp
sbb
cs
inc
ja
jg
inc
subb
jge
enter
and
mov
add
jecxz
add
stc
add
jmp
movsl
je
xchg
sub
repz
in
pop
cld
std
xor
lcall
int3
mov
ret
notl
lcall
ror
es
std
ds
iret
pop
and
stos
sub
stos
hlt
dec
dec
repnz
dec
and
loopne
sbb
jmp
xchg
xchg
shr
fistpl
pop
cmp
adc
push
and
lea
mov
pop
jmp
nop
xchg
pop
sub
push
inc
stos
add
add
sub
pushl
dec
pop
test
dec
test
mov
and
and
loop
pop
xorl
test
fadds
sarb
adc
les
mov
xchg
or
sub
adc
pop
jl
mov
xchg
jmp
dec
cmc
xchg
xchg
jae
mov
pushf
andb
orl
mov
add
mov
mov
test
or
out
cmc
pop
inc
inc
fstpt
lret
pop
addr16
fidivs
mov
or
mov
cmpsl
stc
mov
mov
cmpsb
das
shr
cltd
and
popf
dec
ret
push
push
sbb
sub
inc
insb
fs
xchg
inc
movsl
je
mov
jb
inc
test
pusha
mov
dec
adc
arpl
in
repnz
add
cmp
cmpsb
and
inc
xor
push
push
and
mov
fmuls
int3
das
sub
vcvttps2uqq
push
and
iret
adc
dec
rcrb
sub
xor
jecxz
xchg
movsl
pop
inc
js
into
cmc
push
stos
in
ss
ret
or
in
daa
out
mov
pop
pop
sub
aad
addr16
mov
repz
addb
sub
mov
outsb
mov
mov
xchg
pop
rolb
imul
jne
jb
cmpsl
popa
repnz
xchg
inc
cmp
and
jb
adc
inc
mov
push
popa
outsb
adcl
sahf
faddl
nop
loop
push
bnd
push
sbb
dec
adc
in
ret
lods
outsb
ja
add
fcomps
leave
mov
mov
pop
in
dec
repz
pusha
gs
mov
aam
xor
jne
push
mov
xor
imul
sub
mov
push
test
xchg
test
lret
pop
cltd
jo
push
or
iret
mov
add
mov
jmp
jno
outsb
pop
dec
mov
cli
lret
adc
imul
push
repz
mov
andb
in
xor
inc
repnz
test
xchg
xchg
cmp
mov
imull
sbb
lock
jecxz
and
mov
mov
js
or
sbb
mov
pop
imul
and
mov
outsw
jbe
lret
enter
in
xchg
sub
pop
fwait
aaa
in
into
fcoml
fnstcw
and
mov
out
sti
loope
imul
jbe
inc
out
add
fstpt
xchg
test
stos
cltd
dec
movsb
daa
and
ljmp
div
js
pop
test
scas
cmp
inc
push
push
adc
test
cmp
nop
sbb
scas
sub
cmp
sbb
adc
pop
iret
fidivrl
lea
pop
pushf
das
ss
add
test
mov
sbb
xchg
push
inc
cli
out
mov
push
in
xor
jmp
punpckldq
scas
jp
int
shrl
or
add
inc
add
and
jp
scas
cmp
xchg
out
sbb
ror
xor
loop
dec
cmp
jb
inc
shlb
mov
mov
ret
and
push
add
pop
mov
repz
and
inc
mov
movswl
pop
clc
xor
mov
jle
dec
ret
sar
pusha
lcall
lret
cmp
mov
xchg
sarl
and
jbe
fidivs
sahf
popf
inc
lcall
into
add
call
adc
jo
xor
lcall
or
out
and
mov
sbb
sub
out
jbe
mov
stos
test
xchg
jge
je
dec
pop
dec
cltd
lcall
inc
loop
int3
push
in
mov
adc
rol
fdivs
fisubrs
xor
lds
out
mov
cmp
lahf
ficomps
loopne
jmp
sbb
xor
test
dec
fisubs
lods
inc
sar
stos
cltd
call
mov
aad
int
addr16
outsl
hlt
xchg
jecxz
lods
mov
dec
scas
sub
push
fsubr
mov
xor
data16
and
xlat
int3
and
pop
add
fsubrs
cmp
ds
mov
xlat
pop
or
or
xchg
xor
jns
xchg
testb
iret
sub
push
jns
inc
mov
lds
das
lcall
movsl
add
add
mov
mov
sbb
mov
sahf
aad
or
push
sub
add
pop
inc
clc
mov
push
int
popa
adc
push
push
cmc
inc
push
push
jnp
mov
enter
xor
and
sbb
sub
jb
das
imul
mov
mov
daa
jnp
sbb
jae
outsl
aad
lds
jne
popf
enter
jmp
shl
sti
pop
and
gs
xchg
cld
aam
imul
dec
mov
mov
adc
mov
movl
dec
lret
add
mov
push
jecxz
dec
jmp
aad
repnz
adc
scas
mov
jg
aad
fdivl
lcall
pushf
sbb
pop
or
xchg
xchg
pop
enter
repz
adc
movsl
loop
jns
dec
int3
cmp
aam
gs
push
shl
xor
vpcmpgtd
aas
inc
call
seta
jo
pavgb
mov
and
push
dec
add
mov
fstl
lcall
lret
inc
fisubl
pop
shll
pusha
or
and
xchg
jne
test
test
push
das
dec
jle
mov
mov
test
sub
rcl
and
dec
cmovb
call
xor
cmp
je
inc
adc
jne
cmpsb
call
bound
cld
pop
mov
aaa
or
adc
or
and
jle
xor
adc
push
mov
inc
adc
loop
sbb
stos
adc
in
inc
stc
movsb
leave
stc
scas
cmp
in
or
sahf
rcrb
lret
lods
add
xchg
int
jp
jb
jge
fdivrs
push
rcll
sub
or
pushf
mov
fwait
add
or
jp
popf
hlt
push
and
out
cltd
cmp
mov
or
pop
sub
mov
inc
rorb
dec
add
adc
cmc
int
stos
inc
in
mov
mov
push
lea
xor
loopne
sar
xchg
fwait
xor
xchg
icebp
dec
push
out
push
xor
int
xor
rcrb
sub
sub
fwait
and
jb
sbb
sbb
jo
cmp
inc
jne
push
mov
stc
jg
xor
mov
lods
pop
add
ret
rorl
add
aas
ds
test
std
sbb
or
stos
imulb
mov
pop
scas
je
xor
dec
pop
push
xchg
dec
cli
xchg
fcom
popa
outsb
lods
mov
push
je
aam
stos
es
or
xlat
scas
pop
ficoml
out
leave
xchg
pop
repz
aas
fstpl
in
xor
pushf
push
mov
push
push
fwait
mov
jle
leave
and
sub
ja
adc
cli
mov
fwait
mov
jbe
push
iret
sbb
xchg
fsubl
xor
sub
adc
hlt
jbe
sbb
dec
frstor
fistps
les
xor
popl
test
or
dec
fistpl
std
insb
daa
cs
mov
pushf
stos
add
sbb
pop
or
and
lcall
sahf
ss
inc
dec
adc
and
adc
lahf
icebp
pop
insl
mov
leave
cs
lret
cli
mov
mov
add
pop
imul
popa
popf
or
jnp
lahf
ss
add
js
icebp
ss
ss
loope
inc
jbe
fmuls
inc
push
dec
pop
push
fcoml
dec
adc
sub
add
test
dec
fsubrs
fisubrl
mov
lods
loopne
push
test
mov
pop
jl
lret
scas
test
mov
test
ret
sarl
testb
je
mov
call
lods
incl
clc
ja
jo
insb
mov
dec
rolb
pop
aaa
push
add
mov
and
out
sub
sub
mov
sti
insb
mov
mov
xchg
inc
sbbl
cmp
out
pop
scas
pop
cli
js
call
nop
xor
sub
iret
mulb
stos
lahf
push
inc
pop
lods
imul
out
mov
sar
orb
daa
insb
xchg
mov
in
fs
inc
add
push
sbb
jl
and
aaa
inc
push
cs
mov
mov
pop
fdivrl
dec
aam
and
clc
sub
sti
ret
adc
ret
mov
jmp
sub
mov
mov
mov
pusha
dec
pop
inc
bound
jmp
mov
loop
jl
mov
or
add
and
jle
jno
inc
push
adc
or
adc
imul
loopne
mov
sti
cmp
sub
mov
xor
push
pop
ds
push
dec
cmp
add
ret
adc
mov
jecxz
xor
add
jmp
repz
jbe
popf
iret
jle
lret
leave
adc
lret
mov
aaa
fnstenv
insl
sbb
out
pusha
loope
mov
lods
lock
xor
or
sbb
pop
ss
lret
ss
push
cmp
shll
adc
movsb
bound
sarl
call
sbbb
divl
push
iret
xchg
jecxz
sbb
xor
aaa
sub
or
lock
movsl
test
mov
jbe
sub
out
push
dec
test
pop
push
fisubl
xchg
fs
mov
stos
iret
or
push
pop
push
mov
sahf
les
imul
mov
xchg
xor
test
xchg
push
sbb
mov
and
in
shr
push
inc
lcall
or
test
push
addb
es
add
popf
push
lret
pop
sub
into
pushf
lea
lea
rorl
lods
ds
sbb
movsb
push
adc
or
aas
std
out
lahf
mov
pop
leave
jae
adc
adc
jg
pop
out
dec
sti
mov
test
push
arpl
sub
xor
cmp
cmp
lods
pushf
inc
pop
shlb
mov
mov
jne
push
inc
jecxz
mov
jle
add
idivb
mov
pop
cmp
inc
inc
hlt
jle
push
addb
push
stc
cltd
or
add
iret
aaa
push
xchg
adc
lcall
push
push
ret
js
sub
clc
ja
inc
aad
cmpsb
adc
jg
imul
mov
nop
mov
xor
clc
mov
popf
pop
sub
or
in
push
leave
stos
push
mov
leave
pop
mov
add
stc
xor
pop
push
stos
push
test
adc
or
andl
sbb
jg
sti
adc
mov
mov
negb
mov
out
lret
fsub
or
inc
mov
cmpsl
dec
stc
cltd
loope
and
sub
aas
int3
jnp
push
adc
pusha
and
jbe
xlat
stos
push
lcall
fistl
cmpsb
sbb
rolb
pop
pusha
leave
dec
cmp
fidivrl
push
cmpl
sbb
inc
cmc
lcall
dec
lcall
sar
leave
jle
mov
mov
call
pinsrw
cmpsb
addr16
aad
faddl
push
mov
jno
cld
std
mov
fdivp
mov
ret
cld
aad
xor
arpl
jge
cmp
stos
loop
xor
xchg
mov
cmp
into
int3
movsl
dec
in
xchg
in
jp
dec
or
nopl
out
adc
cld
cltd
push
scas
adc
add
fdivs
cld
dec
mov
imul
test
pushf
popf
enter
in
push
imul
mov
sbb
sar
imul
mov
mov
dec
lcall
cmp
push
push
ja
mov
xor
cltd
cmp
jmp
cwtl
scas
xchg
fists
inc
add
repnz
mov
loop
sbb
inc
imul
adcl
xor
popa
fdiv
cmp
add
dec
cltd
bound
jb
icebp
insb
inc
aaa
xchg
aad
into
inc
cs
sti
lcall
push
cmp
xlat
imulb
xor
sahf
insl
xchg
cmpsb
ret
popa
cwtl
sub
jl
mov
mov
pop
cmpb
jns
std
sub
add
mov
jno
push
mov
pop
push
movsl
sub
and
shrb
adc
or
cli
add
insb
mov
mov
in
inc
and
in
dec
mov
adc
or
jl
stc
mov
jmp
fildl
or
cmpsb
fdivrl
push
clc
movsl
adc
inc
push
gs
jae
icebp
pop
push
and
leave
scas
lahf
out
mov
adc
xor
call
xor
add
mov
nop
push
jl
dec
fsubp
loopne
out
push
inc
xorb
sbb
sbb
das
pop
hlt
dec
dec
leave
imul
out
lock
and
inc
push
lret
std
adc
or
pusha
adc
seto
cmc
stc
sbb
popf
sub
sbb
mov
xor
stos
out
dec
in
dec
loop
xor
mov
push
lahf
push
xor
mov
mov
inc
xchg
out
movl
xchg
js
fiaddl
or
mov
sahf
cmc
jecxz
sbb
test
test
or
stos
imulb
inc
dec
inc
mov
or
ljmp
lea
cmpsb
jecxz
arpl
and
icebp
jle
adc
mov
int
ljmp
sub
stos
sub
pop
xlat
in
and
lret
stos
push
xchg
dec
push
ret
dec
inc
xchg
pop
push
testb
sub
sub
subl
mov
dec
add
mov
andb
inc
mov
inc
sub
xor
ret
jbe
push
lods
jl
inc
mov
icebp
fsubrs
adc
xchg
xor
ljmp
int
cwtl
mov
and
imul
out
jg
mov
lock
inc
jmp
lahf
pop
cwtl
fstl
ljmp
and
movsb
jge
xlat
les
test
mov
jnp
jbe
nop
sbb
inc
aam
and
and
pop
test
inc
fsubr
xor
dec
in
mov
mov
mov
jne
add
shr
push
mov
add
xchg
stos
push
mov
push
lahf
add
jmp
dec
push
mov
lcall
stc
aaa
out
dec
push
testb
hlt
cli
adc
fcoms
xor
in
xchg
sub
fstpt
dec
dec
es
mov
xor
filds
pop
sbb
xchg
cmp
jae
mov
bswap
ja
or
outsl
cmp
jge
xchg
pop
pusha
and
cld
cmp
pop
out
test
adc
adcb
dec
pop
sub
mov
pop
mov
es
xor
rcr
and
or
xchg
push
fadd
enter
mov
fldl
cld
jb
add
pop
jg
iret
cmp
jns
aad
sub
xchg
inc
push
xor
notl
bnd
mov
fsubrs
cwtl
push
sahf
xchg
lret
clc
arpl
jbe
out
add
xchg
add
dec
cmp
iret
push
cmp
in
sbb
sub
aam
jno
xchg
pop
sub
push
into
sbb
jne
and
or
adc
inc
sbb
and
cmpl
lock
push
and
and
out
mov
xor
xor
incl
inc
push
dec
add
sub
pushf
ret
dec
repnz
adc
sbb
mov
push
and
flds
pop
jne
int3
xchg
mov
cwtl
loop
mov
and
mov
and
fidivl
dec
fwait
pusha
xchg
jmp
jo
test
push
pop
push
in
cmpb
sub
jmp
mov
lods
push
inc
sbb
cwtl
imul
clc
xor
pop
orl
push
shrb
push
mov
jmp
jmp
adc
add
or
int3
je
int3
and
addr16
sarb
jae
iret
jl
ss
outsb
pop
out
sub
cmp
sti
pushf
push
int3
cmp
mov
rclb
pop
je
mov
pushf
mov
lret
inc
mov
xchg
cwtl
fs
pop
dec
lea
push
cmp
enter
adc
mov
shrb
sti
push
lahf
jle
and
bound
push
cmp
adc
fdivrs
pop
jno
fisubs
jge
movsb
dec
pop
push
xchg
xchg
ret
es
pop
movsl
jno
fstpl
inc
pop
es
loop
out
cmp
adc
xchg
jp
inc
mov
lods
sbb
mov
sbb
sbb
rcrb
clc
jo
mull
mov
lods
add
jo
mov
out
enter
out
sarl
testl
call
pop
or
aad
pop
rcll
pop
stos
nop
lods
or
pusha
ss
shlb
int
mov
and
add
cmpsb
stos
jbe
into
mov
scas
add
ds
ret
mov
int
and
xor
mov
or
mov
std
out
pop
jecxz
lahf
repz
inc
xchg
push
mov
cmp
xchg
loope
dec
lahf
xchg
pop
jmp
xchg
jae
mov
sbb
addb
fcmovbe
int
das
jle
mov
pop
pop
fildl
mov
push
cmc
or
cs
cwtl
lahf
mov
pop
pop
xchg
imul
jne
aam
pop
add
jno
imul
mov
iret
xchg
mov
stos
dec
repz
pushf
mov
jno
xchg
push
repnz
loope
aad
scas
inc
jbe
mov
das
and
aam
inc
add
mov
ret
push
jnp
sti
mov
popf
add
out
xchg
adc
into
xor
sub
lcall
addb
mov
or
shlb
ret
dec
sub
dec
mov
or
jge
jae
adc
cmc
rcll
push
ret
scas
adc
popf
push
sub
pop
popf
mov
dec
add
hlt
mov
mov
ja
cmp
sbb
jae
inc
jge
dec
pop
and
mov
sbb
mov
mov
scas
adc
cwtl
pop
in
je
sahf
xchg
pop
xchg
addb
arpl
lahf
sbb
cmp
xor
inc
mov
lret
ret
adcl
xor
clc
sub
jge
pop
ss
inc
pop
in
sbb
xchg
pop
daa
loopne,pn
call
jecxz
mov
mov
fiadds
sub
mov
xchg
push
cld
fs
mov
push
loopne
push
sub
xor
pop
cmp
lods
cli
out
inc
pushf
lods
mov
xchg
ss
pop
inc
xchg
sub
dec
ss
insl
les
or
mov
mov
xor
mov
mov
jp
test
int3
fldl
jmp
jbe
iret
lahf
mov
cli
repz
mov
ds
jb
aad
call
cmpsb
aas
pop
add
lock
add
addr16
xchg
repz
ret
and
push
rorb
sub
lahf
or
stos
lods
sub
xchg
ret
fimull
push
jo
lret
and
xchg
in
scas
clc
mov
inc
jo
sbb
xor
pop
mov
aam
inc
or
mov
adc
scas
out
pusha
fcmovnb
jmp
cld
sbb
dec
pop
out
mov
mov
jnp
rclb
aaa
nop
leave
dec
or
mov
push
out
jle
fdiv
insb
inc
push
xor
lret
mov
pop
jne
in
std
leave
mov
scas
xchg
mov
mov
push
adc
cmp
pushf
stos
jae
out
or
push
adc
ja
ss
addl
dec
jge
loope
sub
hlt
fcompl
and
cmpsb
rorb
push
in
push
sarb
stos
jp
pop
pop
jae
lahf
jbe
mov
int
sbb
std
bnd
pop
or
ret
push
sbb
mov
out
icebp
dec
xor
js
arpl
sahf
and
pop
jg
orl
cs
loopne
out
test
pop
popa
push
mov
or
jbe
sbb
sub
rclb
jg
loop
push
filds
pop
sub
out
lods
test
daa
pusha
mov
test
mov
sub
cwtl
rcll
xchg
sbb
mov
iret
mov
push
in
add
stos
aam
js
shl
test
sbb
stos
push
mov
ret
shlb
jbe
std
lret
push
xorb
fidivrs
dec
pop
insl
adc
or
pusha
mov
ret
lock
fstps
jo
icebp
inc
sub
lods
jle
jns
inc
hlt
lds
push
jge
xlat
adc
cwtl
nop
push
sub
scas
cmp
dec
iret
sarl
pop
dec
lods
sarl
testl
enter
dec
jne
loopne
movl
iret
jge
jno
xorl
mov
push
mov
push
adc
xor
ljmp
clc
decb
push
sub
enter
and
and
fldcw
negb
out
rorl
dec
sbb
loopne
addr16
xlat
inc
adc
push
push
test
sbb
mov
push
decb
sahf
loope
das
and
mov
jle
sub
cld
sub
jnp
das
inc
hlt
std
out
bound
ljmp
pusha
in
pop
fisubs
je
clc
jb
jge
dec
daa
subl
sahf
iret
fcomp
add
add
loopne
addb
imul
jnp
dec
das
loope
push
aam
enter
sub
mov
jns
repz
mov
popf
movsb
jno
lods
loopne
cmp
outsl
push
xor
push
push
and
xor
pop
mov
xchg
icebp
pop
add
mov
or
scas
adc
mov
mov
in
aaa
cmp
lods
stc
sti
jno
mov
out
dec
addl
mov
xor
push
jns
mov
movsl
pop
xlat
xchg
insl
push
addr16
adc
push
mov
cmp
cmp
xor
sbb
fsubrl
out
jbe
mov
ljmp
inc
pushf
mov
mov
inc
mov
xchg
push
arpl
scas
in
loope
inc
addr16
pushf
bound
lods
adc
and
loope
arpl
pop
insb
rcrl
lret
inc
jae
or
push
jg
inc
aaa
test
mov
mov
mov
fs
mov
daa
cmc
and
xor
cltd
lahf
mov
pusha
out
inc
jg
fwait
int
sbbb
sub
int3
mov
mov
loope
sub
rol
and
xor
rcrb
data16
in
sahf
sub
test
sar
popa
pop
and
lods
fsts
arpl
mov
dec
and
jnp
ja
mov
mov
push
add
cli
jne
sub
arpl
inc
dec
xor
mov
xor
lcall
xchg
adc
jp
add
aam
pop
shl
ss
aaa
lds
cmp
inc
es
insb
hlt
push
inc
add
add
enter
jle
mov
pop
dec
cmpsl
fisubl
ret
pop
movsl
idivl
imul
add
sbb
in
lods
test
ret
fldcw
mov
mov
jno
sub
insb
fnsave
mov
mov
fiaddl
mov
mov
jecxz
mov
aas
fnstsw
xchg
fsubr
pop
loope
dec
cmp
ds
outsb
int3
inc
loopne
pop
or
icebp
jg
xor
sti
es
clc
bound
xchg
mov
rorl
push
pop
lahf
repz
in
movl
cmp
mov
jbe
bswap
out
jmp
scas
out
xor
aad
aad
js
sbb
cld
insl
pop
shlb
jecxz
add
jg
pop
popa
mov
sti
movl
iret
push
test
loop
xchg
add
mov
sbb
sbb
jnp
ds
mov
orl
mov
popa
jp
aam
and
mov
mov
or
addr16
pop
loop
adc
and
into
in
push
arpl
loop
xor
cmp
jge
nop
mov
sbb
sarl
push
sbb
xor
insb
sbb
cmpsb
aas
xor
pop
mov
add
lret
add
movsb
fldcw
test
cltd
into
test
pop
xchg
push
ds
sub
lock
fxch
scas
cmp
mov
cmp
imul
sbb
inc
cmp
gs
pop
mov
enter
jnp
or
push
pop
xchg
and
ss
fcomip
mov
ficompl
movsb
aaa
sub
gs
shlb
mov
arpl
iret
xchg
lea
cmp
inc
ss
decb
fnsave
xchg
pop
inc
sub
sbb
jne
rol
push
jae
mov
psraw
in
movsb
mov
and
xchg
loop
push
rcll
xchg
mov
hlt
or
sbb
rol
push
pop
inc
int3
insb
sub
cmp
xchg
inc
inc
xor
das
fisubl
lds
inc
xchg
push
jbe
es
cli
daa
lods
sub
clc
testb
pop
shl
enter
dec
push
nop
xor
test
loopne
inc
stos
aad
ret
cli
cmp
add
mov
sub
inc
sarl
sub
mov
fs
pop
adc
xor
xor
mov
and
cmp
leave
xor
mov
jecxz
je
or
and
cmc
mov
mov
xor
jg
mov
mov
or
mov
or
and
lcall
sub
sub
jl
xor
xchg
mov
cld
add
inc
xchg
outsl
pop
push
pop
cmpsl
sub
inc
cld
sahf
mov
sbb
mov
arpl
mov
std
xchg
lods
lds
pop
adc
cmpsl
in
adc
aad
xchg
test
aam
dec
testl
bound
sarb
mov
ret
imul
mov
rolb
test
in
jge
outsb
pop
dec
sbb
add
mov
jp
cld
test
rorl
xchg
jbe
jmp
jmp
std
cli
arpl
cs
mov
cmpl
iret
adcl
sahf
sub
lds
xchg
clc
push
fdivrl
mov
mov
mov
cld
inc
mov
mov
jge
xor
aas
xchg
push
jnp
mov
push
popa
add
xlat
aaa
pop
cli
icebp
in
sub
push
outsb
jle
aaa
lret
jmp
push
add
cmp
inc
in
pop
xchg
cmc
xchg
cmp
aaa
push
mov
xchg
add
mov
or
pop
jb
jbe
pop
pop
ret
dec
jo
shr
cli
test
pop
in
inc
cmp
mov
sub
mov
scas
dec
xor
jmp
inc
push
shlb
imul
movsb
mov
push
dec
push
mov
mov
push
push
cmpsb
add
repz
shlb
adc
cmpsb
add
push
jbe
nop
outsl
push
fsts
div
das
pop
inc
add
fiaddl
add
pop
stos
jge
xchg
pop
xchg
lock
add
and
add
sahf
ljmp
cmp
push
jae
mov
push
or
aad
adc
xchg
mov
out
push
repnz
inc
mov
mov
jecxz
xor
add
pop
jl
pop
cmp
fucomi
imul
inc
mov
push
mov
fisubs
ret
mov
push
cmpsl
or
test
dec
push
data16
stos
stc
cwtl
sub
pop
enter
rcll
addr16
pop
xor
sti
fcmovnbe
fsts
test
jle
rolb
fcoms
xor
push
xchg
jge
jo
push
hlt
mov
dec
aam
cltd
in
out
jnp
mov
in
jne
xchg
jbe
push
adc
sar
xchg
dec
std
mov
into
xchg
addr16
dec
and
test
and
pusha
jns
cmp
add
jbe
jg
std
add
shlb
insl
lcall
pop
xchg
sahf
vpand
pop
sarb
dec
jb
add
jecxz
and
movsl
and
aam
lret
sti
enter
in
push
mov
dec
push
lds
out
sahf
jecxz
and
stos
mov
cmp
fwait
insb
xchg
adc
stos
movsl
jp
cltd
mov
pop
ss
jae
cmp
sub
pop
jne
mov
push
push
and
cmp
sarb
cli
jnp
push
rcl
pop
lods
ds
outsb
and
fadd
xchg
repnz
pop
add
sarb
add
add
loope
jge
incl
and
or
sub
es
shll
dec
and
sbb
xchg
js
lock
xorl
dec
xchg
mov
imul
push
in
jo
push
pop
xchg
sbb
push
xor
enter
in
movsl
lods
sub
cmp
xchg
cmpsl
test
loop
nop
popa
mov
xor
cmp
pop
or
pop
sbb
xchg
lea
or
cmpsb
loope
fsub
lea
jno
scas
mov
mov
and
mov
pop
jmp
adc
sub
scas
test
out
movsb
mov
push
sub
mov
add
or
loope
cwtl
xchg
or
test
xchg
jb
mov
sbb
push
pushl
leave
cld
pop
ret
jmp
decl
add
cs
sarl
ret
bound
xchg
mov
hlt
popf
sbb
aam
arpl
pop
or
mov
dec
push
xchg
sbb
shlb
xor
dec
push
xchg
inc
imul
pop
repz
jbe
pop
mov
leave
lock
cmp
addr16
imull
jmp
xor
push
lock
xchg
int3
fs
int
in
mov
dec
cmp
inc
pop
loope
mov
test
scas
lahf
ret
xchg
aaa
cmp
xchg
mov
pop
mov
cmp
fadds
popa
not
enter
stc
dec
movsl
xlat
ss
in
xor
in
imul
nop
cmp
into
call
inc
lahf
jne
and
mov
insb
outsl
cli
mov
aaa
adc
dec
xlat
mov
add
inc
ja
ret
insb
inc
imul
inc
into
imul
mov
push
jecxz
lds
xchg
inc
adc
loop
fs
lret
pop
dec
xchg
inc
leave
push
lods
mov
mov
dec
bound
clc
loop
loopne
arpl
fdiv
cwtl
jno
ds
repz
dec
out
cs
mov
push
mov
outsl
movsl
rorb
push
lea
push
aam
lret
push
cs
or
jnp
scas
dec
push
push
bound
push
cltd
xchg
test
scas
sub
stos
or
mov
pop
cmpsb
cli
dec
cli
jbe
or
mov
cwtl
jecxz
pop
movsl
insl
out
je
jo
je
dec
and
cld
mov
mov
jg
arpl
pop
sahf
in
sub
inc
cmpsb
popf
repz
int3
lea
push
push
and
dec
imul
inc
ljmp
jns
in
mov
in
jmp
loope
xor
cmp
sbb
jnp
rolb
scas
xchg
fwait
inc
mov
stc
mov
mov
in
dec
call
out
jno
dec
dec
mov
loop
outsl
jb
mov
ret
gs
sbb
and
gs
xor
mov
cmpsl
push
mov
sub
mov
test
mov
in
pop
adc
rep
mov
cmp
repz
pop
jb
pop
sbb
mov
je
lods
cmpsb
add
mov
je
push
out
lock
or
std
mov
in
cltd
jo
mul
sbb
enter
mov
mov
mov
negl
cli
cmp
outsl
jl
ds
push
loope
loopne
lret
inc
jo
in
loopne
js
mov
adc
mov
mov
adcb
adc
loopne
sahf
and
cmc
fwait
dec
clc
push
sub
jmp
mov
lahf
dec
mov
sahf
adcl
arpl
pop
xchg
xor
roll
dec
js
push
dec
cli
cwtl
mov
sbb
test
fs
aas
sbbl
xor
cmc
dec
stos
ljmp
mov
shufps
out
inc
cmpl
mov
dec
int
mov
dec
jmp
stos
je
jl
ret
mov
lods
mov
jno
adc
mov
pop
test
pusha
pop
mov
push
mov
inc
repz
push
xor
lods
fwait
xor
dec
mov
xlat
imul
and
clc
mov
xor
mov
pop
das
sbb
mov
xchg
inc
mov
push
dec
rcrb
xchg
mov
ror
movsl
xchg
cltd
dec
imul
mov
daa
out
push
fnop
inc
inc
outsb
jp
mov
movsl
mov
and
popf
imul
adc
call
or
cld
outsb
stos
inc
add
sub
fimull
jnp
sbb
cli
lock
jmp
loope
out
mov
and
or
sub
fstl
std
sub
xchg
inc
call
or
adcb
inc
ss
sbb
sahf
mov
pusha
cltd
mov
out
adc
sbb
and
insb
shrl
arpl
gs
outsb
in
addl
fnstenv
mov
inc
push
lcall
lods
push
push
call
shll
sub
adc
stc
add
rclb
xchg
je
jle
ss
outsl
dec
or
bnd
rolb
mov
addl
nop
imul
push
mov
pop
into
jecxz
push
inc
add
or
mov
aad
mov
sub
cmp
rcll
fsubrs
popa
mov
outsb
mov
add
lcall
imul
push
mov
mov
jg
jo
loope
and
sbb
adc
mov
cmpsb
bound
lods
es
mov
mov
xor
fistpl
xchg
lcall
inc
xchg
mov
lock
jo
sahf
and
sub
or
fildl
dec
in
xor
repz
loop
gs
or
dec
mov
xchg
lret
mov
mov
stc
nop
in
test
mov
jg
jecxz,pn
pop
fisubs
mov
shll
dec
scas
dec
inc
pop
rcrl
outsb
sbb
fmul
loopne
push
mov
dec
aas
push
adc
ret
xor
movsl
sub
sarl
xor
jnp
loopne
cltd
pushf
xchg
or
and
dec
pop
jbe
and
ret
hlt
sub
pop
xlat
loop
rcrb
jb
xor
nop
cmp
pop
mov
test
dec
mov
stc
aas
lea
imul
pop
push
xor
out
inc
sbb
ds
into
lods
jg
insl
xchg
dec
xorb
rcrb
dec
frstor
dec
xor
int3
icebp
into
movl
clc
push
loop
push
mov
sbb
ret
inc
mov
mov
aaa
jge
sbb
adc
insb
sbb
mov
mov
mov
iret
xor
notb
sbb
in
jbe
and
mov
xchg
xchg
daa
fadds
and
cmp
inc
jl
gs
icebp
outsb
divb
in
aas
pop
lea
sub
outsb
sub
inc
fs
jge
aam
test
outsl
add
lods
adcb
lret
sbb
sub
test
out
xor
mov
or
ret
les
test
inc
push
fimull
cmp
push
int
loopne
out
dec
pop
lods
lahf
lcall
mov
leave
push
outsl
and
sbb
enter
imul
jae
shlb
cmp
ja
jbe
pop
mov
or
jge
test
or
or
mov
sub
mov
lds
lahf
xor
ljmp
sub
rcpps
fisubl
hlt
fbld
pop
sub
in
pop
out
fcoml
dec
jg
rclb
jmp
add
gs
mov
arpl
outsb
add
mov
loop
xor
cltd
fadds
cltd
mov
push
jno
cmpsb
xchg
jbe
cmc
mov
cmpsl
fildll
cmp
or
pop
push
popf
call
lods
xchg
push
push
fucomp
xorb
idivl
adc
shll
ret
xor
mov
jnp
pop
pop
cmp
pop
mov
and
pop
mov
add
iret
xchg
adc
popf
in
cmpsl
fcoml
push
sbb
ret
aam
fisttpl
iret
js
dec
jns
stos
aaa
sub
test
je
insb
enter
repnz
lods
xor
or
xchg
mov
fbstp
xlat
pop
sbb
push
les
mov
pop
adc
pop
je
aad
cltd
mov
inc
mov
and
add
shrl
sbb
add
adc
clc
jl
shl
cmp
pop
jne
js
jbe
mov
loope
xor
bound
lds
mull
fdivrs
adc
adc
enter
into
out
in
dec
mov
imul
cmp
shl
imull
pop
fs
sbb
pop
jne
lea
dec
incb
ljmp
scas
dec
mov
sub
fldt
lods
dec
adc
and
nop
out
rcl
push
mov
imul
out
mov
repz
pusha
dec
jbe
or
inc
sbb
int3
popf
mov
out
and
and
in
shrb
out
mov
add
mov
cs
sub
std
sub
fdivrp
popa
dec
leave
jb
pop
mov
in
jmp
fnstcw
out
dec
sbb
jne
jl
xchg
mov
mov
jbe
adc
push
add
hlt
and
leavew
inc
daa
or
hlt
sti
and
out
jl
fcompp
jb
fwait
jl
rclb
cld
pushl
push
jp
mov
jmp
insl
mov
addr16
ja
adc
push
sbb
rorb
pop
cmp
sbb
jbe
mov
out
inc
push
inc
lods
jmp
mov
adc
ja
sub
mov
xchg
adc
push
or
jp
xor
xchg
aaa
push
mov
xor
insl
lea
xor
cmp
or
adc
push
imul
test
jb
push
push
push
orb
ss
dec
jne
mov
sahf
sarb
movsl
push
int
lcall
jae
xchg
jns
pop
popa
outsl
push
sub
scas
add
jns
outsb
xchg
push
into
pop
rcrl
ficompl
les
adc
add
sti
push
or
aad
cwtl
into
inc
inc
int3
out
test
mov
or
adc
mov
pop
icebp
out
stos
sub
and
repnz
les
or
aad
insl
and
aad
sub
adc
add
fs
rcll
jp
jnp
aaa
sbb
add
pushf
test
sbb
push
sbb
push
out
xor
imul
pop
dec
pop
or
mov
inc
and
xor
fs
pusha
loop
xor
jne
daa
add
scas
loopne
mov
leave
cwtl
imul
out
mov
es
or
lret
add
arpl
pusha
pop
int3
add
dec
and
push
mov
cmp
inc
jae
out
outsb
stos
cmp
ljmp
add
pop
cltd
xchg
cltd
aas
jecxz
cmpsb
popf
inc
das
into
fstl
lock
outsl
and
mov
fisubrs
sahf
les
scas
mov
mov
mov
push
mov
jg
cmp
xor
xchg
faddl
outsl
sbb
push
cmp
es
addl
shr
adc
movl
add
mov
xchg
cmp
mov
movsw
mull
push
dec
cltd
mov
notb
mov
add
sbb
pusha
add
inc
jmp
testb
in
cmp
sub
dec
out
cwtl
xchg
adc
test
mov
lcall
inc
mov
fnstsw
sbb
aam
sub
inc
call
adc
lret
out
movb
scas
mov
popa
lcall
clc
xchg
mov
push
xchg
cmp
ret
push
stos
mov
negl
pushf
pop
inc
pushf
ret
push
pop
adc
loope
cmc
mov
mov
jnp
out
cmc
xchg
es
lahf
dec
cltd
inc
xchg
pop
jbe
cmpsl
mov
mov
jae
popa
cltd
cmp
xchg
pop
jne
mov
loope
shrl
inc
outsl
orb
sbb
mov
mov
adc
cmp
inc
ja
sbb
lods
enter
pop
call
fistpll
jl
mov
fisttpll
cmp
test
adc
xchg
xlat
arpl
fbstp
in
insl
add
and
rcrl
into
lock
mov
push
aad
jmp
int
pusha
popf
jle
iret
pop
leave
lahf
sbb
mov
pusha
sbbb
insb
aas
lds
add
mov
lahf
adc
test
jns
adcb
pop
imul
adc
mov
push
adc
addl
das
popf
push
fnsetpm(287
js
nop
jns
aad
lods
xor
adc
sbb
dec
out
xchg
hlt
ja
les
clc
in
loopne
outsl
mov
jae
mov
add
out
outsb
pop
insl
push
xchg
ret
lret
lea
mov
xlat
ret
jnp
or
mov
in
or
inc
dec
jecxz
add
sub
add
sbb
pop
adc
xchg
push
test
xor
jns
and
sbb
adc
push
pop
ror
icebp
add
jnp
fs
jecxz
sub
icebp
leave
sbb
inc
and
stos
mov
jmp
call
cmp
sub
daa
lods
ret
pop
rep
xor
push
cmp
mov
push
imul
or
inc
jecxz
sbbl
add
pop
aam
shrb
mov
sbb
and
jo
mov
xor
out
cwtl
cltd
mov
or
fistps
sbbb
jg
jns
mov
leave
cmp
lea
mov
popf
xor
mov
dec
jle
add
xor
push
or
in
xlat
cs
xor
push
inc
aam
fdivr
js
adc
or
pushf
sub
rclb
jno
inc
hlt
pop
and
fadds
dec
cwtl
push
mov
fbld
scas
aad
pop
sbb
xor
push
add
popf
add
out
loop
ret
mov
pushf
test
add
and
fnstcw
xor
inc
cmpsl
cmp
jbe
xor
xchg
ja
dec
gs
fs
test
or
xchg
lret
loop
dec
stc
ljmp
in
repz
test
sub
add
or
push
pop
jnp
adc
mov
in
fdivrs
jb
mov
arpl
lds
notl
sahf
sub
lret
into
out
shl
andl
and
nop
stos
sub
nop
data16
aam
ja
xchg
fisubrs
lods
jns
dec
push
xchg
insb
dec
adc
jle
mov
push
inc
lret
pop
cmc
or
mov
sti
dec
push
shlb
mov
movsl
stos
jle
xchg
pushl
add
ret
and
cs
ljmp
js
insb
js
loope
sub
xchg
pushf
fistpll
sti
loopne
arpl
sub
les
push
cmp
out
mov
push
push
sbb
adc
or
dec
jecxz
ret
sbb
xchg
das
xor
cltd
mov
pop
dec
inc
xor
scas
jg
dec
cmpsl
incl
movsl
cmp
add
test
pop
jmp
in
or
into
fsub
xor
mov
out
mov
lcall
and
push
mov
aas
sbb
jno
push
mov
mov
test
mov
or
aas
add
cmpsb
fists
andl
mov
js
enter
iret
mov
or
stos
fstl
sbb
xor
gs
call
add
lret
and
lds
mov
jecxz
std
xor
dec
cmp
ja
stc
jbe
roll
cmp
inc
leave
pop
cli
lods
rorb
ficompl
ror
mov
inc
je
adc
scas
xchg
loopne
ss
inc
jge
popf
push
mov
fbstp
or
mov
mov
mov
aad
aam
js
mov
fsubr
jae
mov
xor
adc
pusha
aaa
jnp
in
cmp
jle
rcll
jb
mov
or
bound
mov
and
xor
sbb
jg
xor
dec
int
fdivs
jb
sub
mov
mov
clc
pop
hlt
repz
fistps
rcrl
pop
xchg
int3
loop
rorb
mov
in
into
stos
adcb
dec
dec
int
pop
sbbb
xchg
je
inc
outsb
rorb
arpl
sbb
lea
es
int
aad
ljmp
std
mov
in
loop
dec
cld
scas
pushf
movsl
pop
into
cmp
xor
pop
je
stos
cmp
push
adc
jns
sub
adc
add
pushf
or
mov
jge
and
inc
in
dec
gs
dec
outsl
test
daa
xlat
lods
jne,pn
or
dec
pop
add
dec
dec
out
insb
pop
mov
shl
shlb
cld
arpl
jmp
pop
les
mov
lret
cmp
add
pop
fisubs
xor
and
jae
fimull
and
int3
dec
jp
outsb
cld
fwait
imul
bound
hlt
push
push
ret
cmp
out
cmp
cmp
jg
aas
lods
aam
and
inc
and
subb
jo
lock
sub
es
hlt
in
dec
cs
sub
flds
dec
mov
mov
or
xchg
icebp
nop
out
ret
pop
cld
inc
into
cmp
repnz
jo
cmp
mov
and
mov
cwtl
and
add
or
leave
je
pusha
xor
inc
mov
mov
dec
mov
enter
aam
and
data16
ret
bound
addb
pushf
js
or
mov
lods
mov
les
push
sbb
or
fidivs
cmpb
in
in
jae
idivb
push
add
pop
push
scas
sbb
test
aaa
jno
cwtl
jp
push
xor
xor
rolb
call
or
sti
mov
sbb
out
mov
add
cmp
mov
inc
popf
cmp
xchg
mov
adc
ret
aam
repz
cmc
push
inc
sar
aad
sbb
fsubs
mov
jae
and
cmp
out
xor
stos
and
ja
ss
mov
and
leave
call
sbb
lea
test
ljmp
insb
test
pop
addr16
rcl
nop
icebp
jg
hlt
lahf
fucomip
icebp
fidivrs
mov
inc
inc
adc
rcl
ret
dec
jge
mov
sbb
ss
in
data16
fsubrl
push
or
addb
jb
add
mov
cwtl
insb
pop
jp
mov
je
cld
lahf
jae
push
in
pop
mov
cmp
pop
xor
or
gs
dec
mov
jns
adc
xor
aaa
cmp
int3
mov
jb
inc
cmpsl
ss
imul
sub
pop
cld
xchg
mov
cmpsl
ja
dec
add
ss
aam
push
aad
push
jl
jb
push
outsb
cmp
xor
lret
scas
push
stos
pop
fld
aam
and
mov
adc
aaa
jmp
cwtl
xchg
pop
lock
ret
aad
out
xchg
insb
clc
stos
outsl
xchg
inc
dec
imul
xchg
mov
pushf
popf
adc
push
idiv
lea
in
in
adc
mov
or
lret
outsl
adc
push
jecxz
cmp
fiaddl
mov
or
call
fstpl
pushf
sbb
mov
icebp
cmc
jb
sbb
mov
sti
jl
push
scas
mov
lods
mov
ss
cmpsl
adc
mov
pushf
and
scas
sbb
stos
pop
push
xchg
js
movnti
push
xlat
push
scas
jg
sbbl
stos
pop
lahf
shlb
popa
out
mov
stos
add
pop
adc
jge
pop
ss
ret
pop
pusha
mov
mov
out
inc
movsb
mov
pusha
aam
fisttpl
in
inc
jl
jno
mov
xchg
jnp
jg
fdiv
into
dec
mov
xchg
pushw
and
pop
insb
cmpl
les
lret
insl
rcll
movsl
cwtl
pop
not
ljmp
sbb
iret
cli
jns
jl,pt
sbb
daa
add
std
or
popa
xchg
push
scas
das
pop
and
shrl
or
pusha
xor
cwtl
inc
dec
jle
inc
in
mov
or
mov
sub
pushf
pop
inc
leave
mov
int3
mov
mov
scas
std
push
mov
add
jecxz
cmp
or
arpl
ret
jge
in
xor
xchg
jge
adc
movsb
cmpsl
sbb
push
jl
mov
inc
pop
iret
inc
scas
mov
jae
pop
vpunpckhdq
or
xchg
mov
xor
xchg
es
es
hlt
enter
pushf
jb
and
sbbl
xor
mov
adc
mov
sbb
out
cmp
jmp
xor
in
sub
pop
lock
in
fstpt
mov
les
or
bound
data16
int
adc
mov
jb
pusha
jl
pop
enter
xor
fdivs
pop
lock
jbe
pop
repz
leave
mov
adc
aam
movl
pop
or
jnp
xchg
mov
subl
and
mov
pop
xchg
inc
rorl
xor
jne
xor
add
ja
xchg
pop
inc
stc
ret
in
decl
xchg
jmp
fisttpll
fisubrs
push
xchg
jns
sbb
mov
push
je
xlat
scas
fwait
clc
sub
cmpl
sarb
sbb
movsb
mov
xor
loop
xor
int
ss
fisubrs
test
sbb
push
xchg
subl
dec
ret
mov
jle
sbb
mov
gs
mov
enter
cmp
inc
xlat
aad
popf
out
stos
aad
sti
and
gs
ds
movaps
loop
mov
les
mov
adc
cmpb
loop
pop
out
movsb
inc
adc
mov
cs
push
ljmp
pop
inc
in
lcall
inc
shrl
add
popf
cmp
incb
in
mov
cmp
xorb
into
xchg
xor
xlat
dec
dec
and
dec
mov
pop
push
fucom
dec
add
mov
push
cld
fistpll
pop
outsb
ljmp
out
xchg
jns
mov
sub
fsubr
pop
sub
imul
fmull
jae
cld
push
aas
outsl
shll
mov
jp
xlat
xchg
bound
sarb
rorl
inc
mov
out
cmpl
addr16
stc
xor
mov
sub
push
scas
jg
insw
in
xor
mov
add
in
adc
cwtl
lcall
inc
adc
lock
pop
mov
inc
leave
cs
call
and
insl
or
sub
lds
arpl
xor
xchg
cmp
std
bound
decb
xchg
les
imul
lock
bound
pushf
lret
inc
or
loopne
inc
cmp
subl
notl
push
nop
sbb
mov
jbe
inc
xlat
out
jo
stc
jp
test
inc
leave
mov
leave
pushf
aam
test
mov
arpl
mov
loop
addb
adc
mov
scas
pop
lea
push
sti
or
enter
push
jp
scas
mov
xor
jmp
outsb
arpl
bound
jo
jle
adc
jp
in
in
sbb
ret
shrb
adc
xor
adc
shl
xchg
insl
xchg
xchg
stos
repz
inc
dec
movsbl
int3
sub
rolb
out
add
dec
enter
arpl
in
or
rolb
hlt
mov
je
ja
aaa
jmp
mov
inc
adc
aaa
cwtl
aas
inc
divb
xchg
cmpsb
fiadds
aas
pop
loopne
pop
frstor
sbb
inc
sub
subl
lcall
sahf
enter
mov
mov
hlt
xor
cmpsb
jne
movsl
push
ljmp
mov
fbld
xchg
add
ja
cmpsl
cmp
adc
std
inc
les
push
enter
push
aaa
xchg
in
test
jmp
xchg
mov
sub
test
jo
mov
aad
loop
sub
mov
outsl
rorb
rcr
cmpsb
dec
nop
enter
nop
mov
add
outsb
mov
outsb
jle
jecxz
sub
sbb
imul
dec
es
subb
or
gs
das
xchg
inc
jb
test
stos
fwait
mov
push
jecxz
mov
xchg
push
sbb
ja
ret
sub
out
popa
int
leave
aam
pop
cmpsl
test
insb
sti
psrlw
int
aaa
out
nop
and
mov
mov
test
xchg
pop
repz
fs
mov
or
push
icebp
adc
adc
lods
inc
sahf
adc
xchg
push
mov
xor
pushf
push
popa
stc
adc
nop
adc
xor
adcl
pop
fs
loopne
ss
xchg
sti
hlt
or
ja
push
pusha
pop
jne
sbb
sbb
jne
pushf
cld
push
popf
pop
leave
xlat
mov
push
push
pushf
cs
jge
mov
jecxz
int3
xchg
jnp
pop
stc
sbb
push
mov
lret
mov
mov
cmp
pop
cmp
sti
dec
mov
pop
lods
aaa
jg
lret
mov
ds
lcall
rorb
fcomps
jns
test
outsb
sub
inc
out
loop
test
int
call
repnz
jle
cmpsb
pusha
notl
jns
mov
and
es
mov
xchg
test
dec
inc
test
sbb
fdivs
mov
add
pop
jge
hlt
cmc
pop
sbb
shll
or
add
xor
and
dec
in
pop
mov
push
cli
hlt
iret
mov
add
adc
aaa
dec
and
out
gs
pop
std
mov
dec
pusha
int
xor
cmpl
push
sahf
sarl
dec
test
in
sbbl
js
add
scas
iret
xchg
add
mull
stos
pushf
test
pop
mov
imul
mov
push
dec
out
gs
mov
rol
and
popa
adc
sub
mov
enter
loope
jg
pop
incl
mov
hlt
inc
mov
inc
js
mov
xchg
stc
mov
inc
dec
adc
mov
aad
repz
jg
out
lea
sbb
notl
clc
insb
xchg
mov
mov
lret
mov
and
jl
sbb
or
sbbb
test
add
add
sbb
push
xchg
xchg
pop
pop
outsl
ljmp
sti
cmp
mov
lock
mov
sbb
and
dec
fcompl
test
das
lds
xchg
mov
mov
or
leave
icebp
aas
movhps
scas
mov
sbb
adc
lods
ret
fcoms
jmp
test
jge
sub
sbb
sub
mov
inc
cld
and
sbbl
arpl
push
mov
stos
data16
sbb
ds
and
ror
insb
call
hlt
je
outsl
sub
setnp
imul
xchg
or
inc
add
pop
jo
loope
sahf
test
mov
roll
adc
or
or
pop
stos
mov
addr16
mov
dec
orb
rorl
add
out
ret
je
jge,pn
and
outsl
cltd
mov
leave
pop
mov
xor
repnz
fdivs
push
pop
push
xor
int3
movsb
pop
xchg
add
inc
mov
push
sbb
iret
popf
cmp
ss
mov
sti
fwait
push
mov
fwait
xchg
outsb
xor
xor
xor
pop
cmpsb
inc
mov
lcall
push
subb
je
jbe
les
mov
jne
lock
icebp
fists
insb
and
jecxz
mov
sub
cld
imul
or
xchg
bound
xor
dec
loop
mov
std
cmp
push
inc
std
inc
enter
mov
inc
scas
call
fs
stos
out
or
cmp
push
sbb
xor
in
mov
rcl
push
dec
lods
pop
fiadds
cwtl
inc
pop
push
mov
adc
pop
arpl
pop
xor
je
pop
jno
mov
out
lea
add
movsb
imul
fbld
mov
aaa
add
adc
cmpsl
gs
lahf
test
or
sub
stos
call
stos
popf
adc
jne,pn
popa
shll
jle,pt
ficomps
outsl
mov
xchg
mov
xor
fbstp
mov
cld
sub
out
cmp
pop
fiaddl
movsb
push
jo
adc
lret
cli
pop
imul
test
xor
inc
repnz
pop
sbb
mov
fcoml
pop
ret
mov
xor
ret
inc
inc
inc
cltd
and
std
inc
xor
dec
repz
enter
ja
xor
movsb
xor
ss
and
add
or
test
outsb
mov
mov
ret
mov
mov
scas
or
rcrl
sbb
nop
aas
xor
test
dec
stc
adc
loope
pusha
out
popf
adc
pop
mov
sbb
scas
pop
jle
cld
out
mov
sti
inc
dec
adc
adc
xor
pop
dec
lods
xor
aad
mov
mov
ret
xor
sarl
cmp
adc
lds
fimuls
fnstcw
push
ljmp
cs
rep
push
pop
in
out
clc
out
outsb
add
cmpsb
insb
mov
lahf
sahf
jg
mov
jne
mov
ficompl
push
shlb
mov
mov
jp
popf
lahf
xor
xchg
inc
mov
add
pop
insl
icebp
sahf
lea
dec
xor
mov
mov
pop
push
notb
out
jl
and
gs
mov
sahf
inc
sbb
or
mov
and
xor
lahf
xchg
das
push
inc
dec
ret
or
and
adc
rorl
pushf
in
outsb
aad
add
pop
stc
jb
sub
jge
or
ret
ja
testb
insl
and
xor
adc
fcoml
movsb
sub
mov
fbld
loopne
pop
test
cld
mov
dec
mulb
cwtl
cmp
daa
lods
orb
int3
cmp
data16
scas
xor
sub
pop
dec
adc
jae
mov
pop
mov
fisttpll
int
mov
scas
lahf
jl
mov
push
adc
push
lods
negb
mov
jge
leave
mov
sub
pop
cwtl
sahf
leave
adc
imul
es
cmovo
and
mov
jl
sbb
or
dec
adc
push
scas
sub
push
inc
push
fildll
sub
lret
rclb
xchg
js
sub
sub
repz
pushf
ds
pop
mov
icebp
sbbb
mov
dec
popf
jp
jecxz
ja
or
push
icebp
inc
cs
jbe
out
add
or
jo
inc
xchg
stc
pop
push
mov
jno
imul
sbbl
lcall
lock
inc
sbb
cmc
sbb
ljmp
mov
sahf
mov
adcb
stc
loop
int
imul
adc
iret
and
test
mov
push
inc
push
push
mov
jmp
ss
push
sbb
or
lcall
shrb
sarl
daa
cli
cmc
push
movsl
jmp
mov
or
jmp
mov
jb
fstp
arpl
sub
mov
lods
jae
and
iret
mov
or
push
leave
test
aad
sub
fnstsw
jns
aam
inc
inc
lahf
or
sbb
mov
loop
xor
orl
jmp
add
add
out
mov
push
rclb
into
pop
movl
lea
lods
cmp
call
mov
ficompl
shll
jb
jb
daa
outsl
test
lahf
stc
push
sub
and
mov
cmpsl
and
xchg
xchg
bound
push
das
das
or
dec
xchg
outsb
movsl
adc
stos
jp
add
add
ret
into
in
jl
xor
jns
dec
mov
adc
sub
cmpsb
pushl
mov
subb
mov
loopne
clc
pop
pop
outsb
aad
add
dec
in
cmp
inc
lret
mov
incb
scas
dec
sbb
cmp
lea
data16
or
xchg
cmp
cld
push
push
in
ficoms
idivb
ret
sbb
roll
xchg
dec
push
jne
add
sub
into
mov
adc
inc
add
repz
mov
jnp
lret
push
add
dec
in
or
xchg
xchg
gs
inc
add
inc
or
imul
aas
mov
mov
xorl
xchg
lock
insl
add
sub
xor
icebp
mov
mov
mov
xchg
add
lcall
ljmp
adc
jno
lahf
sub
jecxz
cs
insb
movb
dec
test
sub
add
ljmp
outsb
repnz
inc
sbb
clc
mov
aad
loopne
dec
mov
inc
rol
sti
mov
pop
std
add
pushf
sbbb
cmp
jns
xor
dec
in
xorb
mov
aaa
add
push
bnd
lahf
rcrl
adc
cmp
sbb
movsl
push
jmp
jmp
scas
xor
pop
push
das
or
in
iret
jp
ficomps
xchg
dec
jns
addb
jecxz
int
sti
sbb
ss
xchg
or
xor
cmp
iret
dec
jbe
rcrb
loope
xor
xchg
xchg
int3
jno
pop
mov
mov
ss
fidivrl
sbb
xchg
push
je
and
sub
mov
cs
out
popa
pop
mov
insb
insb
add
stos
je
or
adc
enter
pop
mov
sbb
hlt
xchg
cmp
fstpt
pop
incl
std
push
adc
cmp
push
dec
je
cmpl
shlb
scas
pop
mov
call
outsl
aaa
icebp
or
pop
xor
push
inc
sub
pop
shll
xchg
cmp
outsb
pop
loopne
and
xor
lret
icebp
inc
xchg
adc
push
cmc
and
pop
inc
imul
push
push
dec
or
imul
xchg
test
cmpsw
sbb
out
xchg
repz
out
xchg
inc
dec
fnstcw
es
shlb
inc
test
loope
data16
xchg
out
fwait
iret
mov
mov
popf
inc
ffree
xor
adc
outsl
aam
push
pusha
lods
lahf
inc
clc
push
addr16
pop
pop
adc
loopne
sub
or
cwtl
sub
mov
sub
jbe
push
mov
cmp
hlt
popa
push
fadds
pop
movsb
adc
aad
or
pop
adc
xor
imul
add
pop
xor
rcll
das
sti
dec
movsl
jle
ds
pop
jge
repz
mov
mov
mov
shlb
add
cmp
pop
xor
cmp
jle
sbb
shll
leave
test
xorb
ficomps
in
stos
arpl
mov
mov
fisubrl
fcmovb
int
addr16
xchg
jmp
jns
mov
push
out
add
dec
jp
push
jns
xlat
es
rcrb
scas
inc
sub
fdivrl
xor
mov
push
xchg
add
mov
pop
adc
push
mov
in
mov
stos
gs
loopne
out
pop
out
insb
jne
jmp
pusha
mov
push
xor
fwait
mov
imulb
sbb
scas
xchg
call
lahf
outsl
jmp
in
test
mov
adc
push
push
outsl
mov
inc
loop
push
pop
std
mov
mov
outsb
pop
sbb
pop
add
push
outsb
add
popa
push
arpl
mov
jmp
out
lods
fsubrl
aas
sub
jge
and
inc
fidivrl
fwait
and
cmp
out
sbb
fs
lret
test
add
xchg
mov
xor
lock
push
out
clc
fcmovne
call
out
and
adc
cmp
push
cmp
dec
push
lret
mov
and
incb
jb
lcall
lods
out
or
adc
rclb
inc
imul
je
push
sbb
push
inc
imul
pop
sarl
mov
aaa
test
pushf
sti
pusha
gs
push
daa
adc
push
and
xor
dec
push
mov
xor
cmp
sahf
jge
out
jae
cmpsb
push
out
int
stc
dec
cmpsb
arpl
push
and
jge
xchg
push
stos
ds
ret
in
loop
aaa
jo
push
xor
jl
ja
mov
and
or
clc
push
or
scas
aam
arpl
and
xor
js
xchg
in
out
add
fisubl
xchg
cmpl
sbbl
scas
mov
mov
lcall
adc
js
bsr
in
jo
or
fstps
push
mov
aas
and
orb
xor
jmp
andb
pop
inc
aaa
sbb
pop
xchg
test
bnd
xchg
jp
xchg
xor
outsl
jb
dec
add
out
outsl
add
push
ret
jl
jne
pop
leave
cmp
mov
icebp
lea
mulb
aas
aaa
mov
inc
push
mov
shlb
pop
and
pop
adc
push
sarb
push
jns
cld
pop
xlat
shll
out
mov
sbb
jle
adc
adc
cmp
test
lcall
adc
rorb
sub
or
xor
fnstenv
outsb
push
or
fcom
pop
in
loopne
lahf
mov
jecxz
arpl
arpl
out
or
jle
lret
jecxz
int
mov
sbb
repz
mov
fsubp
movsl
xchg
daa
mov
mov
jno
stos
imul
pop
fisubl
adc
dec
mov
dec
lret
cmp
cmp
outsl
fwait
sbb
cwtl
scas
cmpsl
lahf
into
cwtl
les
xor
stc
inc
push
js
cltd
adc
flds
jnp
ljmp
dec
aas
aaa
fcoml
adc
sti
mov
add
aas
dec
gs
rorl
dec
ds
dec
pop
mov
dec
out
cmp
psllw
mov
mov
vmovlpd
loopne
outsl
push
aaa
aad
sbb
and
adc
push
fstpl
out
adc
sub
sub
stos
fsts
push
or
popf
or
ss
scas
loop,pt
pop
dec
pop
movsb
mov
add
insl
lret
fwait
ret
jbe
push
jae
add
jns
ror
shrb
inc
mov
mov
cmpb
andl
mov
lahf
and
aaa
dec
jnp
adc
pushf
dec
push
fildl
push
arpl
pop
xchg
in
jecxz
adc
sarb
mov
leave
cltd
mov
clc
rorb
dec
push
mov
sub
mov
push
mov
inc
movsl
scas
jno
fstps
mov
sub
sti
xchg
pop
ss
lods
into
add
mov
lret
shlb
test
sub
mov
shrl
push
adc
incb
sub
pop
add
cmpsl
divl
xor
rcr
xlat
enter
into
inc
and
add
adc
pop
js
pop
inc
pop
pop
xchg
push
pusha
inc
movsl
fs
mov
lods
jg
inc
and
cwtl
sub
cmpl
push
test
xor
cmp
mov
mov
sub
cwtl
add
or
pusha
push
jno
cwtl
enter
out
mov
rclb
or
out
pop
cmpb
xchg
mov
xchg
std
xor
in
scas
jp
popa
fsubrs
adc
mov
test
xor
lret
xchg
dec
xchg
fcompl
sub
cmp
ljmp
pop
iret
push
aaa
scas
pop
cmc
mov
rolb
test
push
or
popa
cmpsb
les
cmp
insb
push
lret
sub
aaa
scas
jae
pop
jne
push
pop
jecxz
or
fsubs
xorw
adc
mov
fs
jns
enter
jb
mov
push
adc
jl
xchg
aad
inc
jbe
mov
stos
iret
movsl
xchg
sub
call
pop
sbb
mov
adc
mov
or
movsl
cmpsl
mov
xor
inc
sbb
jbe
jnp
and
mov
pop
jbe
jg
jle
mov
sbb
jge
push
ds
dec
adc
xchg
jno
sbb
out
lods
popl
pop
call
pop
imul
add
lods
sub
das
out
add
push
jp
and
and
aad
mov
test
push
xchg
fistpl
fwait
add
lods
cltd
jge
in
shr
mov
and
fsubs
daa
mov
leave
inc
iret
inc
adc
inc
mov
jo
in
lcall
gs
std
push
fcoml
cltd
pop
dec
push
pop
mov
mov
mov
add
cmp
sub
sbb
je
mov
into
imul
sahf
cwtl
cltd
jno
pop
lcall
test
or
add
push
mov
aad
dec
add
es
ss
incb
cmp
push
ficomps
dec
enter
mov
xchg
stos
ja
repnz
clc
pop
mov
pop
testb
insl
xor
and
mov
sbb
pop
mov
daa
push
mov
lock
or
sub
adc
outsb
gs
repz
xchg
pop
or
aaa
cld
mov
loope
or
xlat
ljmp
mov
or
cmpsl
mov
mov
jb
pusha
fiaddl
lods
ss
jge
dec
movsb
xchg
rcrl
ss
sbb
je
in
pop
sub
push
ret
cmp
dec
outsl
enter
popa
faddl
int3
push
imul
mov
loopne
jecxz
stos
cmpsb
jns
das
inc
pop
jmp
sarl
mov
pop
notl
gs
out
shll
mov
cmp
xchg
push
mov
jo
ror
fs
outsb
xor
jnp
sbb
in
out
xchg
mov
mov
sub
inc
xlat
push
lds
cmp
out
cmp
icebp
movsb
mov
fldl
dec
popa
dec
mov
cltd
push
xchg
inc
mov
jle
clc
cwtl
aam
mov
leave
inc
test
icebp
call
pop
inc
jp
iret
pop
dec
dec
mov
push
sti
cmp
sti
lahf
sub
sbb
ret
pop
int
dec
push
xor
fcmovnbe
cs
int
dec
mov
js
ss
xchg
add
xchg
loopne
xor
fsubr
out
js
mov
cmp
cs
add
xor
ficompl
add
ror
dec
dec
scas
mulb
jne
ss
nop
pop
out
add
in
mov
jb
sti
bound
int3
icebp
cmp
jle
aad
movsb
scas
pushf
sub
loopne
aam
xor
in
in
xor
xchg
lods
and
cmp
add
or
sub
adc
sbb
scas
mov
mov
arpl
imul
pop
movsb
out
outsb
icebp
cmc
adc
icebp
or
movsl
mov
arpl
je
addr16
xchg
dec
lods
xchg
dec
pop
dec
mov
pop
andl
xor
pop
out
movsl
push
add
imul
into
movsb
mov
xor
subb
and
sti
fldcw
jb
in
xchg
jmp
fiadds
sub
arpl
jae
lret
pop
adc
jmp
ret
mov
out
popa
mov
fwait
daa
scas
test
xchg
aam
aaa
pop
out
das
mov
sar
sbb
xor
sbb
mov
adc
pop
stos
es
iret
mov
dec
push
xor
loope
add
cmc
subb
scas
sbb
sti
je
cs
sub
ja
ss
dec
xchg
orb
dec
xchg
out
stos
pusha
fwait
pop
mov
jo
movsw
ja
cmp
lahf
sbb
inc
xor
xor
cmpsb
insb
out
jl
lods
pushf
pop
sub
insb
inc
jmp
aaa
icebp
pop
mov
add
jecxz
cwtl
repz
fsubs
and
pop
dec
jae
dec
loopne
arpl
subb
sub
les
mov
pop
fwait
mov
ss
push
cld
adc
outsb
mov
enter
insl
out
fcompl
sbb
push
nop
fdivl
adc
data16
xlat
push
pop
pinsrw
push
cwtl
pop
jae
or
stos
icebp
aam
nop
int3
fnstcw
xchg
xor
mov
test
out
divl
lahf
inc
notb
jg
into
pop
fcoms
xor
push
push
scas
std
int
lods
push
mov
or
fistl
or
sub
cmp
mov
je
daa
jo
test
dec
xchg
or
ljmp
scas
aad
jns
pop
into
ja
and
sub
sbb
xchg
fsqrt
sbb
popf
or
jge
test
sub
mov
test
sub
jo,pn
jbe
push
cmp
pop
or
sbb
gs
mov
sbb
and
test
sarl
add
pop
js
cmp
jmp
aaa
sbb
sti
mov
and
aam
fndisi(8087
test
fisttpl
add
fldenv
cltd
sub
int3
out
ja
push
call
jno
pop
clc
stos
xchg
or
dec
inc
jg
sahf
pop
das
xor
sub
mov
in
insb
and
jmp
btr
push
adc
sbb
test
push
push
mov
or
in
fnstenv
sbb
sub
pop
inc
testl
int
or
xor
imul
das
lock
inc
jmp
xchg
adc
ret
aam
inc
into
les
rorb
rorl
hlt
jecxz
jns
pop
jmp
xor
insb
mov
cmpl
cld
lahf
push
imul
sti
fstpl
dec
pop
jmp
lcall
repnz
dec
or
and
jmp
fcoms
and
mov
mov
sbb
inc
jns
arpl
jno
xchg
cmp
sub
aam
cmp
lahf
std
push
push
in
stos
insl
push
sub
inc
ja
push
scas
ljmp
ljmp
jmp
repz
outsb
pop
mov
inc
push
cmp
int3
roll
mov
nop
or
lret
ljmp
int3
sub
add
jae
je
mov
lcall
push
mov
test
push
ret
inc
subb
or
dec
dec
insb
sub
lods
mov
mul
mov
adc
or
inc
sub
and
in
sub
sbb
insl
lahf
imul
lahf
xor
lahf
out
rcll
lea
xor
popf
jp
cli
jnp
das
adc
push
test
push
xor
dec
pop
std
cmpb
cmp
cmc
jecxz,pn
xor
pusha
cmc
scas
cmc
jl,pn
xor
and
into
inc
mov
test
aad
add
scas
sbb
loope
dec
mov
sbb
mov
popa
cli
fucom
sub
or
sbb
xor
inc
jmp
testb
gs
mov
daa
xor
mov
xorl
dec
pop
aam
rclb
sub
adc
sti
and
cmpsl
jp
and
and
mov
push
mov
mov
push
cs
sub
nop
cmpl
push
jle
pop
xchg
fs
pusha
sbb
inc
or
sub
mov
pop
pop
movsb
jp
lock
aam
jge
and
fcomps
loop
mov
jmp
stc
jne
scas
push
movsb
nop
popa
or
cmp
adc
xchg
cmp
cmp
ficoml
pop
push
xchg
adc
mov
lret
cmc
stos
pusha
push
sbb
je
xor
push
xchg
pop
outsb
les
mov
dec
xchg
xchg
test
aaa
inc
mov
sti
outsb
aaa
rorb
bound
and
and
lahf
or
int3
mov
aaa
imul
xor
mov
mov
push
js
sarl
call
fsubrl
mov
in
daa
cmp
and
push
xchg
repnz
ret
ret
shlb
lahf
adc
inc
mov
and
xor
jge
cmpsb
jo
dec
outsl
negl
pop
add
xchg
loope
mov
mov
sti
add
jecxz
adc
cmpsb
nop
pop
jbe
ret
rorb
cld
push
cld
lods
movsb
mov
jg
icebp
cmp
adc
add
push
sahf
dec
mov
push
lock
sub
daa
xor
inc
sbb
sarb
xor
lods
xchg
lahf
fwait
jbe
mov
cmc
repnz
sub
leave
js
jnp
in
out
push
push
lods
lret
dec
js
hlt
cmc
scas
xchg
hlt
xchg
sub
out
cmp
push
xor
loop
and
jg
mov
cmp
inc
shlb
fstpl
data16
and
inc
js
adc
fnstenv
or
pop
aad
lea
adc
mov
pop
cmp
stc
aas
xchg
ljmp
test
movsb
loop
sub
dec
push
push
add
insl
xchg
addr16
push
pop
leave
aaa
lds
inc
dec
mov
js
adc
cmc
lret
lcall
lahf
inc
js
pop
cli
mov
xchg
pushf
mov
loope
lock
cld
push
and
xchg
je
push
cmp
mov
loop
dec
jmp
inc
outsl
push
pop
fwait
cwtl
out
cltd
pop
imul
fwait
xorb
push
inc
xchg
test
sbb
xlat
lahf
fiaddl
inc
lret
int
hlt
loope
insb
hlt
add
inc
fs
pop
enter
cli
icebp
adc
and
cmp
aam
lcall
cmp
xor
push
ret
xchg
add
adc
mov
and
or
pushf
test
popf
push
imulb
int
cli
leave
push
lcall
icebp
or
push
aad
bound
jmp
inc
cmp
lret
fisttps
sub
insb
mov
mov
scas
dec
mov
jb
mov
fadd
xor
outsl
rorb
dec
into
adc
rcl
adc
stos
and
adc
stos
pop
pop
ljmp
mov
orl
enter
data16
pop
in
shll
cltd
jl
and
nop
jg
xchg
imul
scas
gs
mov
lret
jmp
cmpsb
xchg
pusha
xchg
add
enter
imul
loop
push
shl
nop
add
inc
and
in
adc
dec
call
xchg
test
lret
pop
test
scas
and
sub
mov
je
lret
pusha
jnp
out
adc
add
mov
aas
movsl
aas
adc
fs
inc
sbb
jb
mov
fistps
mov
add
push
jnp
out
pop
std
fnstenv
pop
add
lock
cli
cs
xchg
push
mov
and
clc
test
push
cld
scas
xlat
or
jmp
jbe
push
sahf
addr16
lcall
mov
xchg
out
dec
jecxz
add
fs
mov
mov
cmp
adc
and
cmp
inc
mov
aad
sbb
pop
vmptrld
push
fbstp
sub
xchg
notb
daa
pop
or
pushf
jp
jmp
inc
mov
repz
push
jecxz
xor
dec
sbb
sbb
jo
pop
testb
ja
es
xchg
cmc
jp
call
ret
mov
stos
xchg
push
dec
ficoms
xchg
sub
lods
mov
ss
cmp
repnz
hlt
rolb
dec
or
icebp
push
mulb
lahf
enter
push
push
inc
dec
in
insl
jmp
pop
jns
add
arpl
mov
enter
setge
je
cmp
jp
sub
mov
and
mov
aam
cmpsl
cmp
inc
daa
sahf
cwtl
jle
mov
push
dec
movsb
sbb
and
dec
mov
cltd
cmpl
push
cs
push
push
dec
inc
mov
int3
or
mov
outsl
jmp
xchg
orl
adc
jns
popa
sub
ja
addr16
rorb
stos
mov
test
lret
or
jno
mov
test
out
test
mov
adc
xchg
cmp
mov
imul
scas
mov
jnp
loope
inc
cmp
inc
xchg
divb
stos
jmp
push
andl
jge
mov
inc
push
shlb
movsb
push
fisttps
movsb
and
sub
sarl
xor
stos
sub
movsb
adc
adc
into
movsb
popf
mov
rcll
imul
aam
pop
in
sub
dec
int3
cwtl
icebp
add
cmpsb
pop
mov
adc
clc
scas
push
and
outsb
daa
lahf
or
shll
loopne
aaa
js
sbb
sub
cli
mov
movsb
dec
jae
pop
jge
cwtl
lods
rorl
and
add
test
rcrb
xchg
iret
mov
sahf
or
and
notb
cmpsb
xor
jno
xchg
jmp
rolb
in
sub
xchg
add
or
leave
xor
inc
inc
add
xlat
dec
je
dec
jmp
jle
cmp
gs
lock
in
push
sbb
sbb
xor
sub
sub
jmp
jmp
in
repz
pop
out
mov
scas
pop
in
jge
movsl
in
adc
outsl
sahf
mov
mov
mov
pop
dec
mov
in
mov
xor
gs
xor
add
mov
mov
sbb
roll
inc
iret
jecxz
push
loope
call
fwait
jae
and
inc
jb
mov
ljmp
movsb
adc
jecxz
jnp
jnp
hlt
pop
and
pop
push
mov
shl
pop
repz
cmp
push
mov
out
mov
adc
aad
mov
xor
inc
shrb
scas
adc
mov
es
ds
dec
pop
mov
in
sub
aam
inc
push
enter
sub
adc
jp
mov
pop
add
cmp
roll
mov
imul
adc
cld
xor
lods
leave
xchg
stos
mov
mulb
lret
shll
jne
mov
adc
xor
dec
call
into
dec
mov
je
jb
push
push
jmp
xor
and
xchg
add
and
ds
sub
pushf
hlt
insl
or
popa
dec
data16
roll
jecxz
pop
push
shr
dec
pop
dec
fmull
pop
push
adcl
aas
sbb
sub
and
jg
pop
dec
push
inc
cmp
pop
push
sub
sub
rcrb
mov
lahf
add
popf
sub
push
fdivs
aad
lock
cmpsl
xor
add
dec
jl
sbb
sbbl
stc
and
mov
mov
insl
movsb
pop
cmp
dec
jle
sbb
add
jae
popf
iret
jl
sub
fsubs
pop
aas
sbb
scas
popa
int3
push
push
ds
dec
mov
mov
test
pop
mov
and
ja
inc
in
xlat
xchg
in
mov
pop
pop
jb
jne
mov
ret
fdivr
es
addr16
push
jle
inc
adc
insb
loope
add
nop
int3
xchg
xor
call
mov
cmp
sarb
dec
xor
pop
or
push
xchg
pop
xor
push
subl
je
addr16
pushl
sub
sub
cmpsb
pop
push
cmp
mov
js
ljmp
loope
dec
ss
adc
fstl
shlb
lea
push
call
cmpsb
cmp
cmpsb
lods
leave
rcrb
inc
push
sbb
popf
std
and
insl
dec
push
jl
mov
aaa
jle
sub
scas
jnp
cmp
enter
je
into
repz
xchg
dec
aaa
daa
jmp
or
push
dec
rcr
shlb
insb
xchg
dec
loope
mov
ror
roll
or
jo
xchg
ja
cmpsb
add
xchg
xor
and
mov
and
sbb
psubusw
pop
mov
sarb
push
push
lcall
cmp
lcall
dec
jg
sbb
lea
or
mov
lock
aad
divl
adc
outsl
int3
push
cmc
jl
cwtl
jb
inc
cmp
js
mov
clc
cmp
add
test
sbb
daa
dec
aas
xchg
mov
sub
jae
mov
jnp
add
jle
sub
rorl
fcomps
cwtl
cs
push
cli
fcmovu
int3
sub
jp
sub
sbb
ljmp
adc
leave
or
out
jo
lods
or
dec
mov
and
and
cmp
mov
mov
les
inc
mov
into
ffreep
adc
loope
dec
data16
lret
cmp
mov
mov
mov
mov
ljmp
inc
pop
int
add
addr16
in
sbb
pop
and
push
dec
sub
cs
mov
fnstcw
in
gs
out
jmp
inc
xchg
inc
test
mov
pop
adc
dec
out
xchg
jbe
and
cmc
sbb
cmp
push
addb
xor
sbb
fstp
dec
pop
sub
pop
xor
int3
hlt
clc
arpl
jmp
sti
sub
shl
mov
in
loopne
pop
inc
push
call
inc
mov
jb
addr16
or
rclb
cmpsb
mov
daa
lret
adc
xor
mov
ja
ret
iret
das
or
mov
push
mov
stc
inc
and
cld
fdivrl
in
pop
scas
int3
out
fs
dec
push
test
into
mov
cmp
ja
std
loop
and
sbb
sub
aaa
dec
xlat
or
lret
push
jne
test
je
fbld
dec
aas
daa
add
arpl
or
lret
cmp
mov
shll
leave
shll
and
test
arpl
mov
and
sbb
jg
shll
cli
adc
push
idivl
out
fdivs
add
push
xor
push
adc
fadd
dec
out
jmp
sub
into
test
mov
test
pushl
movl
orb
insb
lcall
sub
push
sti
or
rcr
pop
repnz
pop
push
inc
out
mov
int3
out
movsb
push
out
in
loope
pop
setns
cmc
jmp
xchg
jp
xchg
test
pop
xor
adc
or
shlb
add
pop
push
fwait
mov
enter
iret
mov
cmp
mov
sbb
in
pop
push
xor
shrl
pop
sub
xor
jle
imul
iret
dec
and
cmp
je
xor
pop
push
into
outsl
in
cld
push
dec
les
mov
mov
adc
lods
push
ja
cmpsl
iret
adc
ret
rorb
out
cltd
mov
imul
pop
fbstp
movsl
push
or
orb
les
rcrb
jne
xor
mov
iret
push
lahf
mov
pop
sarl
pop
add
jno
sbb
data16
dec
mov
xor
dec
insl
es
insb
adc
jns
push
dec
popa
add
loope
mov
mov
sub
loop
sub
mov
jno
rclb
sti
push
sub
and
mov
inc
or
mov
adc
push
or
clc
scas
push
push
out
or
jecxz
lea
inc
mov
and
jns
loop
inc
enter
cmp
addr16
fdivrs
xor
add
std
sub
adc
lahf
add
pop
js
mov
cmp
test
in
xchg
roll
mov
loope
outsl
jne
inc
fstp
shl
mov
scas
lahf
int
inc
xor
and
xchg
mov
xor
mov
ljmp
movsb
lcall
mov
out
pusha
push
adc
and
push
and
ja
in
cvtpi2ps
mov
fisubrs
adc
push
stc
cmpsl
fsubl
aad
mov
rcrl
enter
mov
movsl
inc
push
cmp
pop
data16
dec
xchg
hlt
out
loope
ss
dec
adc
insb
jp
out
ret
in
gs
adc
lods
sbb
cmc
push
pop
jns
test
pusha
xor
xor
arpl
cmp
xor
pushf
sahf
adc
push
inc
adc
inc
cmp
xor
or
pop
pop
and
gs
arpl
pop
push
push
ds
mov
int
negb
dec
push
addl
imul
call
sub
lock
and
mov
bound
outsb
sbb
std
mov
or
out
mov
test
icebp
clc
jnp
aaa
inc
iret
mov
stos
add
adc
adc
dec
mov
adc
xchg
cwtl
call
or
sub
scas
shlb
loopne
icebp
lret
mov
aaa
scas
clc
das
mov
xor
mov
out
nop
jp
out
inc
inc
or
cwtl
out
mov
cmp
test
jmp
mov
bound
lods
je
mov
adc
mov
or
testb
cmp
mov
std
cmp
js
clc
setne
dec
add
pop
es
mov
lock
dec
sbb
fisubs
js
mov
into
mov
stos
xchg
loope
mov
pop
movq
mov
in
mov
stos
cltd
leave
jns
mov
jne
sub
out
sub
or
gs
or
push
push
push
pop
jb
sti
add
jp
cmc
mov
push
dec
mov
jnp
mov
pop
mov
out
or
sbb
nop
jle
outsl
stos
mov
cmpsb
jb
xchg
cmp
push
repz
cmpsl
repnz
adc
inc
and
popf
rcl
mov
or
stos
std
or
pop
cwtl
aaa
js
mov
xchg
xchg
cmp
cmp
hlt
call
xchg
aaa
jp
mov
cmp
dec
mov
test
xor
lods
daa
inc
sahf
push
and
pop
test
test
loopne
adc
xchg
aaa
cli
sbb
addl
movsl
push
loop
mov
shrb
fldlg2
inc
gs
aaa
and
add
pop
hlt
imul
lret
rol
jmp
mov
pop
pop
pop
xor
aaa
test
sbb
inc
mov
lock
insb
adc
or
lock
lret
pusha
xorb
mov
sub
ret
stos
lock
pop
fldt
test
and
out
inc
test
std
inc
inc
jmp
adc
xchg
xchg
stos
stos
jge
addr16
loop
popa
mov
push
lret
in
dec
pusha
jmp
ljmp
fmul
jge
outsl
movsl
or
hlt
mov
and
data16
das
mov
aad
divb
cmp
cmp
or
repnz
insl
adc
sbb
xor
push
dec
jno
cli
cmp
fdivrs
nop
inc
xchg
and
xchg
stos
push
ss
stos
or
shrb
or
lods
cmp
pop
in
hlt
icebp
nop
xchg
pushf
xlat
jge
test
push
sub
out
dec
lcall
lret
push
cmc
in
jp
xlat
inc
dec
inc
jnp
mov
xchg
or
inc
adc
fstpl
insl
sub
pop
sarl
xchg
and
mov
bound
xchg
imul
pushf
rorl
in
bound
mov
pop
jg
dec
scas
push
test
mov
mov
shrl
in
ret
add
dec
cmp
cwtl
sbb
outsl
pop
out
jbe
xchg
outsl
mov
imul
pop
sarb
loope
cmp
inc
aaa
lds
out
push
cltd
imul
lahf
add
lret
add
aaa
mov
insl
lods
jae
sbb
clc
inc
and
dec
shll
icebp
stos
pusha
dec
repz
lods
dec
push
mov
scas
sti
movsl
mov
imulb
aad
nop
sarl
insl
popa
sub
push
mov
arpl
xchg
leave
cmc
test
aad
das
stos
repz
xor
loope
pop
sbb
pusha
loope
sbb
int3
imul
sti
pop
clc
and
cmc
in
xor
jb
add
jge
or
jecxz
add
jno
aaa
push
sbb
das
sbb
int
mov
scas
cmp
pop
xor
pop
or
fucomi
cwtl
mov
push
adc
cmpsb
les
xchg
push
test
les
ret
lea
jmp
jmp
addb
mov
sub
lret
jns
pop
cltd
mov
push
xor
xchg
sahf
aam
mov
fstpt
dec
or
pop
xlat
mov
add
fisttps
jno
jns
addl
dec
shlb
dec
pushf
adc
pushf
push
stos
sbb
int3
add
and
lea
push
out
addr16
dec
and
mov
adc
xlat
bound
das
xor
mov
pop
call
xlat
inc
mov
sbbl
test
pop
cld
ja
sbb
push
cmp
xlat
and
push
aaa
inc
aas
mov
sbbl
insb
sub
fcomp
sbb
pop
xor
mov
in
cltd
add
icebp
inc
lcall
lret
mov
insl
in
xlat
out
int
push
test
fstps
adc
jo
dec
test
push
and
int
lcall
fstpt
scas
pop
test
pop
adc
call
test
jmp
dec
js
mov
push
mov
pop
mov
in
mov
rcr
cli
mov
and
adc
mov
and
inc
and
cpuid
adc
jl
xchg
sbb
jns
push
fcompl
and
mov
mov
jle
fs
rcrb
cs
sbb
les
shlb
cli
mov
or
pusha
rcl
cltd
fidivrs
in
cmpsl
jp
movsl
xchg
aad
test
mov
sub
hlt
cltd
sbb
xorl
out
ret
sbb
leave
mov
xor
push
push
jp
aad
imul
sub
int
xchg
out
sbb
cli
xor
xor
dec
int
subb
adc
xchg
lret
pop
mov
mov
mov
stos
fs
cmp
and
cmpsl
sbb
sbbl
mov
test
cltd
mov
hlt
push
push
push
inc
bound
stc
scas
int3
fnsave
xor
xor
aad
push
xchg
clc
cwtl
push
inc
test
sbb
pop
cmp
lea
stos
pushl
dec
fptan
aaa
push
mov
enter
mov
or
stos
mov
cmp
sub
or
xchg
lock
and
outsb
and
jecxz
push
testb
es
scas
inc
aaa
sbb
add
push
in
push
test
or
rorl
leave
mov
int3
mov
int3
adc
cmp
xchg
jg
cmp
fistpll
mov
push
stos
inc
in
mov
inc
ja
lret
cmpb
cmp
push
or
mov
rclb
movsb
push
das
cmp
inc
sahf
movl
sbb
outsb
pop
push
in
bound
lock
fildl
mov
or
sub
test
add
push
out
movsb
pop
lea
mov
sub
lcall
sub
sub
mov
mov
cld
xchg
cmp
stos
push
bound
int3
and
call
imul
mov
pop
jecxz
sub
popf
cmp
fdivrs
fisubs
xor
ja
and
or
out
push
xchg
push
push
shrl
mov
or
rcrl
gs
lds
loope
sub
ret
add
pop
sbb
jmp
mov
cli
jbe
imul
cmp
sbb
push
int3
sbb
mov
inc
xor
cltd
rol
sub
jmp
popa
xchg
imul
cmp
int3
fistpl
xchg
adc
cmp
aam
jl
sbb
push
xor
test
xorb
lods
rorl
ds
mov
and
sub
add
pop
repz
pop
xor
sbb
adc
movsb
std
ja
enter
mov
lea
add
jl
mov
pusha
aas
jo
dec
lret
pop
rcrb
lea
aam
mov
sbb
es
seto
ljmp
cmp
sub
pusha
mov
pushf
pop
ss
lds
out
or
sbb
fsubrs
cmp
jg
arpl
xchg
imul
mov
sbb
daa
jle
jecxz
popa
cltd
outsb
lcall
test
and
cltd
into
cmp
push
or
pop
sub
roll
jl
push
fidivs
fimull
xchg
xor
fcoms
cmp
ljmp
add
add
mov
push
cmp
cmp
out
lods
call
mov
pop
shll
inc
add
test
cmc
cmp
sub
scas
xchg
sti
and
cmp
fwait
push
ds
inc
push
mov
mov
mov
sub
inc
mov
lea
aas
cltd
xchg
cltd
dec
push
cmp
dec
mov
arpl
cwtl
xor
add
fsubr
leave
cmp
test
inc
shrl
leave
lods
testb
fadds
adc
xchg
jnp
xorl
and
cwtl
xchg
imul
mov
cmc
xchg
in
sbb
xchg
das
test
cwtl
and
movsl
stos
fldt
push
filds
pop
and
and
cmp
lock
sub
dec
outsb
and
mul
movsl
call
sbb
push
or
cmc
jnp
jae
pusha
out
shlb
adc
enter
clc
scas
cwtl
inc
pushf
rcrl
pop
push
clc
mov
add
push
rorl
in
adc
push
mov
dec
adc
add
cmp
push
mov
mov
sub
mov
lock
cs
addr16
sbb
xor
xchg
mov
cld
xchg
lret
out
loopne
cltd
and
mov
and
aas
xchg
test
fsubrl
and
nop
and
sub
loop
inc
popa
movb
shlb
or
int3
pop
lret
std
imul
and
jge
xchg
js
orb
inc
data16
lcall
and
xor
fcomi
insl
or
hlt
xlat
mov
ljmp
dec
xlat
xchg
dec
inc
add
jnp
cmp
lcall
call
ret
out
test
sahf
jge
dec
cltd
int
test
repnz
cmp
leave
cltd
mov
cld
leave
orl
xchg
or
int3
test
sbb
ja
dec
mov
dec
dec
out
cli
call
je
sbb
jno
or
and
pop
or
jns
je
outsl
les
sbb
fs
orb
fwait
add
push
cmp
mov
into
out
mov
jecxz
push
neg
pop
mov
ret
mov
mov
imul
pushf
stos
sbb
pop
pop
cmp
inc
and
outsb
fcmovbe
and
adc
stos
cs
pushf
jns
test
push
mov
mov
pusha
es
cwtl
pushf
mov
push
lahf
mov
stos
push
arpl
mov
pop
inc
sbb
stc
mov
xchg
mov
mov
jp
fsts
mov
movsl
sub
push
jle
sub
inc
push
add
jmp
xor
std
fstsw
xchg
push
call
inc
add
cmpb
orl
popf
jl
les
pop
filds
jp
and
mov
adc
cmp
cmp
xchg
jge
aas
jnp
sub
shrb
dec
hlt
addr16
into
out
in
add
push
aas
jle
pop
mov
out
add
rcrb
ds
outsb
mov
aad
jl
add
dec
push
mov
pop
sub
jg
mov
pushf
repnz
jne
ss
mov
shrl
xchg
adc
leave
or
xchg
cltd
mov
loop
pop
add
out
push
push
jmp
cli
sub
or
fidivl
dec
add
push
into
sarb
fs
inc
cmp
xor
fs
jmp
ret
stc
mov
lcall
sub
or
and
xchg
xchg
inc
or
test
or
ja
insb
inc
repnz
outsl
inc
popa
pusha
add
dec
push
fbstp
insl
sub
jecxz
adc
stc
insl
fsubrp
cmp
hlt
push
mov
inc
pop
scas
or
stc
fcoms
mov
push
stos
pop
in
cmp
loope
fs
cwtl
arpl
add
scas
xor
test
je
inc
jg
push
enter
imul
pop
pop
adc
cmp
bound
ret
int3
test
jmp
mov
xchg
pushf
xchg
popf
jo
jb
pusha
and
mov
and
fdivrs
inc
mov
adc
cwtl
xchg
adc
or
dec
cmc
xchg
push
push
inc
jb
push
pop
outsb
call
outsb
dec
mov
sbb
jmp
jne
test
ss
mov
jle
or
test
lea
shll
pop
adc
ret
aas
aad
jecxz
aam
aad
int
or
test
hlt
pop
push
and
es
mov
sbb
xchg
mov
insb
sbb
lahf
mov
movsl
xchg
iret
jbe
notb
loope
cmpsl
pushf
sbb
shl
stc
xchg
xchg
rep
imul
adc
xor
ja
aaa
loopne
push
pusha
xchg
pop
out
test
ds
mov
clc
stos
call
ljmp
adc
inc
mov
mov
push
inc
data16
fs
pop
enter
fwait
pop
push
mov
hlt
adc
test
xor
pop
mov
std
mov
or
movsb
subb
sub
in
popf
dec
mov
and
sbb
sub
cmp
ud2
lcall
jnp
cmp
push
insb
pop
div
mov
push
dec
aas
adcl
or
push
scas
dec
cmp
test
call
mov
dec
call
push
mov
les
xor
xlat
or
test
or
lods
pusha
aas
fxch
call
xor
jl
in
in
push
lods
ja
lock
and
test
push
add
mov
xor
cld
out
cmp
sub
aaa
push
je
fwait
or
or
mov
inc
inc
cmp
mov
cmpsl
push
cs
aas
cltd
sub
xchg
je
sbb
jne
and
das
test
cwtl
mov
mov
xchg
xchg
jg
and
xchg
mov
inc
or
xchg
ret
xchg
aam
mov
ds
arpl
mov
fistl
stc
cld
addl
xorb
sub
idivb
mov
cmp
insb
or
ljmp
mov
mov
adc
es
mov
ss
mov
std
mov
cmp
cwtl
cmp
or
xchg
hlt
test
sbb
test
dec
xor
arpl
mov
dec
ret
stc
mov
popf
sarb
jmp
iret
stos
shlb
ljmp
jae
xor
out
lea
insl
fcmove
sbb
adc
fidivrs
dec
dec
cmpsb
jns
into
push
cmp
push
inc
cmp
pop
ljmp
mov
inc
shlb
sub
xor
sbb
inc
addr16
jg
orl
or
mov
jae
inc
out
mov
push
inc
sub
ljmp
cmc
xchg
cmp
cs
pop
mov
fcomps
cltd
pop
jno
mov
nop
pop
xor
jecxz
or
jno
addr16
xchg
arpl
jg
push
rclb
in
xchg
mov
xor
imul
or
ljmp
pop
stc
in
push
xchg
and
lcall
sbb
mov
cmc
ss
mov
jb
mov
cmp
ret
cld
scas
mov
mov
push
mov
inc
or
pop
xchg
mov
test
int3
dec
cmp
add
pop
adc
mov
nop
repz
push
out
push
notl
pop
xchg
jne
inc
dec
out
stos
test
stos
lea
fucom
shlb
mov
cmp
out
or
xchg
icebp
xor
enter
and
pop
push
stos
out
mov
xchg
sub
nop
xor
jbe
mov
popa
inc
into
cmp
mov
mov
sbb
imul
push
in
cmp
mov
mov
dec
mov
mov
sbb
mov
and
xor
test
add
test
push
and
in
add
push
loop
arpl
mov
insl
call
repz
cltd
imul
cmp
xor
lods
lret
push
mov
add
cmp
add
cmc
push
stc
loope
pop
rcrl
imul
pop
iret
and
mov
cmp
xchg
enter
mov
cltd
je
ljmp
outsb
cmp
dec
fwait
mov
mov
mov
sbb
cld
pop
mov
pushf
fistpll
and
xchg
cmc
stc
pop
inc
es
loopne
mov
in
outsb
jmp
jnp
or
push
test
push
or
loop
sub
push
shl
xchg
add
add
hlt
mov
imul
loopne
inc
adc
cmp
jne
mov
xor
xchg
roll
in
dec
push
mov
vcvtsi2sdl
imul
ret
jmp
lds
popa
push
or
popa
ret
xchg
les
xchg
sarb
test
dec
shlb
jge
mov
push
nop/reserved
push
sbb
addl
repnz
in
push
add
pop
add
fdiv
mov
push
and
fcompp
movsl
insl
adc
mov
adc
sub
call
sbb
jg
inc
dec
cld
mov
or
int
lds
pushf
mov
sub
in
cmp
inc
popa
xchg
jno
push
cmpsb
lahf
jp
mov
fstps
sbb
hlt
testl
cltd
inc
jg
call
into
lds
fwait
push
sub
jns
cs
cmp
decb
out
in
out
aam
jb
out
cmp
in
andl
sbb
sub
xchg
pop
adc
movsl
dec
aad
dec
or
out
mov
cmp
je
movsl
and
ret
es
in
fst
mov
xchg
xlat
test
pop
dec
pop
cmp
lcallw
mov
sub
lds
hlt
es
inc
sbb
pop
and
sbb
daa
push
jg
push
dec
xchg
adc
inc
jae
sahf
dec
or
in
in
in
outsb
cmp
in
adc
xor
in
mov
sub
adc
mov
sub
xchg
add
pop
ljmp
push
add
jno
inc
js
es
dec
push
jecxz
cwtl
xlat
jae
mov
xor
or
sarb
ret
jae
push
std
les
jb
addr16
sbb
push
fisubrl
test
mov
outsb
xchg
mov
hlt
adc
push
ss
and
aam
xor
cmpsl
mov
add
cmc
fldl
lahf
dec
sbb
je
jb
std
and
fwait
rcrl
and
dec
stc
into
jno
addr16
lods
mov
mov
jns
push
popf
cld
ds
jo
add
jge
test
jle
jo
add
cmp
sbb
nop
shr
aas
test
mov
outsl
jno
sub
outsl
and
jb
add
popf
sbb
movsb
movsl
mov
push
jl
sbb
push
test
fimull
push
sbb
in
jl
jns
int3
or
inc
in
mov
mov
xor
inc
pop
in
out
pop
adc
xchg
lock
xor
decb
push
sub
dec
fidivrs
mov
in
loopne
inc
push
inc
sti
lds
fsubrs
fsub
xor
mov
fstp
push
cmp
xor
fldenv
dec
mov
ficoms
incb
adc
push
xchg
aam
xor
jae
sbb
jmp
adc
mov
xor
clc
pop
mov
sbb
add
xchg
cwtl
and
dec
pop
xchg
mov
pop
mov
dec
bound
cmp
jge
iret
lds
push
shlb
inc
lock
mov
out
mov
push
out
dec
pop
arpl
mov
and
ret
pop
int
sub
jns
fdivp
outsb
out
jge
insb
and
fidivs
adc
and
dec
aas
lds
jo
xchg
mov
push
sub
cmp
jge
cmp
pop
xchg
add
ret
mov
dec
pop
fildl
or
dec
push
mull
insl
out
jg
shll
pop
iret
idivl
mov
in
sbb
popa
add
fsubr
jmp
aaa
mov
stos
jne
push
add
push
mov
nop
adc
mov
pop
cli
pusha
sbb
xchg
push
roll
in
inc
jnp
shrb
out
lcall
mov
pop
cltd
dec
mov
scas
pop
add
sar
xchg
ljmp
mov
lret
add
or
and
and
dec
pop
pop
dec
mov
xor
sahf
adc
insb
mov
movsb
push
js
mov
jp
dec
gs
push
cmp
and
test
xor
mov
mov
sbb
cmp
xchg
mov
mov
xor
iret
js
addl
or
fisubs
xor
inc
push
arpl
add
shl
xchg
jp
inc
jl
lahf
mov
orl
jb
jbe
inc
loop
cmp
mov
movb
cmp
jmp
int
shll
push
int
int
sub
pop
mov
in
lret
lret
stc
hlt
jle
daa
push
ret
out
mov
mov
aam
push
push
pop
mov
fdivl
repz
lea
mov
test
subl
xchg
pop
ss
es
inc
lock
fcompl
andl
mov
jne
inc
xlat
mov
cmp
mov
lods
push
jg
int3
mov
test
inc
repz
pop
ss
stos
nop
and
pushf
ljmp
popf
xor
xchg
stos
inc
popa
imul
ret
aad
pushl
sahf
data16
fidivrl
push
inc
jmp
icebp
jae
addr16
sahf
movl
int
push
mov
pop
jbe
mov
xor
outsl
lds
mov
or
lods
enter
fldl
jecxz,pn
jmp
cld
jmp
popa
mov
jns
arpl
push
insb
jecxz
adc
in
outsl
test
ret
lods
lahf
into
push
jbe
insb
stos
cltd
and
inc
loopne
shlb
xrelease
mov
mov
or
cmpsb
adc
push
jp
scas
or
stos
mov
aam
hlt
adc
cmpsl
cmp
jno
jae
jno
ds
pop
leave
adc
and
popf
bound
fistpll
inc
sub
sbb
push
cmc
jmp
inc
bound
loopne
aaa
mov
cmp
and
lea
mov
and
addr16
sub
lret
mov
loop
in
cmpsb
mov
add
mov
pusha
add
lret
stos
pop
and
jle
cmpb
inc
loopne
mov
cli
aaa
xor
shrl
pop
fcom
cli
dec
xor
dec
jae
push
jp
add
jle
cmp
mov
inc
repnz
push
mov
sbb
add
xor
fstpt
and
into
push
add
dec
dec
push
fists
adc
xchg
push
pop
leave
sbb
mov
enter
mov
jecxz
pop
push
aaa
cmp
inc
dec
rcll
jne
fidivrs
daa
in
mov
inc
jo
xchg
xchg
daa
mov
cmpl
or
jmp
jmp
shll
cs
or
mov
ror
scas
mov
shll
mov
mov
insb
repnz
xor
pushf
leave
rcll
loope
push
and
mov
inc
sbb
and
push
or
test
sbb
bound
lea
add
cmp
shll
testb
iret
jle
or
add
push
adcl
dec
int
jp
sbb
aas
imul
inc
xchg
pop
sub
or
sbb
enter
push
mov
adc
mov
stos
loop
sti
outsl
add
or
mov
in
out
fidivrs
dec
add
sar
mov
outsl
or
inc
les
mov
repz
pop
cmp
movl
sahf
dec
bound
xchg
mov
mov
or
sarb
imul
mov
lods
mov
mov
adc
imul
and
and
cmc
cmp
arpl
cmp
dec
adc
dec
int
add
cmpb
mov
pop
adc
xor
bswap
mov
push
jle
pop
mov
push
sub
jecxz
jp
add
out
pop
or
aad
mov
sbb
fmull
mov
ds
and
fisttpl
loop
mov
test
rcll
incl
leave
mov
out
sti
push
aaa
push
das
sub
sbb
pusha
sbb
popf
test
push
mov
or
sahf
movsb
adc
xchg
fst
sub
mov
mov
roll
cltd
fcmovne
divb
sbb
js
pop
fimuls
pop
xor
in
pop
mov
insb
fmulp
pop
int
loop
pop
dec
add
std
leave
inc
add
mov
dec
fmul
movb
dec
dec
cmp
jl
imul
jb
lock
push
lahf
cmp
add
pop
push
scas
mov
std
test
jne
out
mov
outsb
rclb
daa
idivl
imul
adc
cmpb
mov
mov
popa
cld
addb
in
or
sti
out
loope
cli
and
push
cli
xchg
push
xor
lret
mov
sahf
test
sub
popaw
xchg
cmpl
pop
mov
mulb
fiaddl
test
jnp
dec
add
out
mov
lds
ja
in
cltd
dec
pop
and
jle
sbb
std
shlb
pop
mov
js
or
data16
subb
movsb
cltd
add
jl
jns
inc
pop
icebp
int3
lds
push
addr16
jg
daa
loopne
sbb
pusha
jo
daa
ret
int3
jne
cld
jo
rorl
dec
out
cld
mov
xchg
js
mov
push
inc
fs
fisubs
sbb
lds
mov
pop
loop
xor
daa
scas
sbb
clc
rolb
ja
sbb
xchg
or
mov
and
adc
jo
lods
adc
movsl
sbb
xor
das
or
adc
aad
fcoml
aam
inc
mov
jno
jae
xor
mov
mov
sahf
cmpsb
adc
pop
int3
push
sahf
insl
adc
jle
sbb
mov
mov
dec
add
mov
mov
cwtl
adc
adc
lcall
dec
add
lahf
xor
sub
sub
add
add
add
pop
mov
fnstsw
arpl
mov
xchg
out
ficoml
inc
in
adc
mov
mov
ret
cmpsb
sahf
outsl
sti
lock
mov
pop
sub
aam
sub
stos
push
pop
xchg
jp
fcoml
out
ljmp
aaa
jl
pop
and
lods
add
daa
out
popf
sbb
int3
ds
sti
movsb
mov
rorl
mov
je
hlt
shlb
cs
aam
sbb
sarl
mov
cli
loopne
ret
test
outsb
rcll
lahf
mov
fisttps
imul
xor
lahf
or
xor
xchg
call
mov
sub
enter
xchg
jp
cwtl
adc
cli
add
fld
push
mov
outsl
xor
mov
jbe
xchg
insl
push
sub
push
fsubs
xchg
adc
add
push
data16
pop
sub
pop
dec
popf
fwait
in
dec
loopne
push
xchg
ret
sbb
xchg
pushf
lods
out
decl
flds
sbb
ja
inc
cwtl
movsb
mov
orb
repnz
mov
pop
push
xchg
jb
xchg
or
gs
add
int3
jbe
inc
lds
subb
xchg
inc
pop
subl
jp
rcl
aaa
mov
jle
call
test
push
xor
mov
pop
sub
jecxz
pusha
mov
icebp
out
jle
add
stc
test
in
js
jle
int3
lock
popf
in
sbb
jno
add
je
inc
sbb
add
mov
mov
xchg
push
movsl
sbb
adcl
lods
pop
pop
dec
lcall
sbbb
xor
pushf
or
dec
xchg
movsb
negb
xchg
lret
outsl
out
jb
lret
pop
inc
cltd
int3
fcmovnbe
xor
imul
sub
mov
xchg
fdivrs
xchg
sbb
negl
pop
mov
test
fwait
xchg
mov
aaa
divl
cld
mov
lret
or
jno
xchg
in
sub
jp
add
gs
cmp
lret
fs
fdiv
push
mov
push
mov
in
fisttps
ss
push
mov
add
adc
xor
aam
nop
sbb
rorb
pop
sub
push
adc
insb
ljmp
addb
and
xor
popa
inc
push
inc
fidivrs
in
add
push
fwait
jle
insl
xor
sub
sub
add
test
xor
rcl
xor
xlat
cmp
js
ljmp
sahf
push
sub
xor
bound
ret
and
push
add
out
cmp
xor
fcompl
push
jbe
in
or
xor
lcall
in
fadd
mov
rcrb
test
add
push
dec
push
enter
shl
push
testl
xchg
imul
sub
mov
out
xor
cld
in
roll
xchg
sub
inc
sub
sbbl
call
mov
pop
mov
lahf
inc
xor
rcrb
xchg
inc
xor
sbb
fwait
and
popa
insb
out
movsb
ror
xchg
out
repnz
nop
push
xchg
in
cs
movl
scas
cwtl
xchg
imul
push
and
lahf
clc
in
mov
add
or
sub
ficoms
pop
lock
cwtl
mov
adc
jmp
jle
jo
pop
repz
dec
pop
sub
mov
jecxz
sarb
cmp
inc
test
insb
cmp
xor
sbb
pop
sub
mov
push
sti
sub
outsl
cmpsl
scas
mov
imul
cmp
xor
addl
popf
dec
rolb
movsb
adc
pop
sub
imul
scas
fistpll
call
cmp
js
ficoml
sti
rclb
dec
sbb
scas
inc
ret
dec
mov
cmp
xchg
xchg
dec
adc
pop
lods
lcall
imulb
xor
ja
icebp
mov
inc
iret
ror
insb
dec
loop
outsl
xorl
push
cmp
xchg
xchg
pop
test
mov
outsl
test
push
movsl
iret
sti
inc
sti
inc
push
insb
movsb
mov
xchg
inc
cmpsl
test
test
jmp
out
push
push
mov
stc
aas
orl
inc
jecxz
adc
push
pop
and
add
mov
pop
test
inc
sbb
pop
rep
outsb
leave
movsb
in
mov
pop
out
cmp
fldl
and
xchg
out
xchg
pop
add
xor
jmp
fsubrl
roll
push
cmp
gs
fdiv
movl
dec
test
add
cmp
mov
mov
add
out
sbb
fidivrs
lret
enter
aad
sbb
inc
scas
es
stos
ret
popf
aas
and
outsl
xchg
or
scas
les
mov
adc
imul
popl
mov
mov
iret
and
je
sub
imul
or
leave
pop
cs
and
insl
data16
fldt
inc
cmp
fs
cld
cmc
mov
es
out
xor
or
push
inc
pop
and
add
popa
mov
sub
xchg
enter
xor
std
lds
movsw
inc
sub
repz
and
pop
arpl
jge
xchg
sbb
das
out
mov
adcb
sub
subl
lock
push
test
mov
cmpsb
lock
repnz
sub
fidivl
lret
mov
adc
jle
mov
dec
jg
or
sub
cmpsb
fcomps
sbb
imul
mov
fdivs
jl
into
push
sbb
cmpsb
jg
sub
loop
inc
jbe
movl
cmpl
cmc
push
mov
mov
cmp
cmp
push
insb
ret
dec
lret
push
ja
push
inc
mov
out
pusha
inc
cld
aaa
xor
add
aas
movsl
xchg
stc
pop
xchg
add
add
mov
das
push
gs
sub
testb
scas
adc
insb
fs
test
call
adc
adcb
popf
sbb
mov
shll
mov
fistpll
dec
jmp
lods
push
fidivrl
cli
mov
push
sub
push
aas
dec
xor
int
jl
dec
push
out
lods
test
pusha
jmp
sub
aas
xchg
out
add
insb
cmp
aad
sbb
inc
lods
ss
dec
mov
sbbl
jo
mov
inc
fldcw
xor
push
xor
popl
cmpsl
pop
leave
in
stos
adc
ljmp
jno
cmp
scas
in
test
or
sar
push
lret
mov
outsb
and
repz
fs
push
xorl
add
sbb
xor
pushf
push
mov
adcl
inc
insl
ret
xchg
rcrl
add
dec
int3
pop
sub
sbb
sbb
mov
sbb
repz
mov
rclb
iret
adc
mov
fcoms
mov
pop
or
lret
cmp
inc
xchg
cmc
negl
pop
aad
or
ja
xor
inc
pop
aam
outsb
je
sub
outsb
lods
add
xchg
xchg
sub
fidivrl
fs
test
repz
sti
repnz
add
setns
enter
sub
push
shl
pop
push
in
push
xor
pop
cmpsl
inc
sar
aaa
into
or
test
arpl
sbb
std
dec
mov
pop
sahf
xchg
mov
insb
cmp
dec
push
arpl
dec
vpmacsdd
push
dec
cmpsl
mov
loope
cmpsb
inc
out
lea
mov
xchg
fisttpl
sbb
ret
rcll
sbb
jns
fwait
mov
and
cld
mov
cmpsl
adc
jl
lret
lret
arpl
dec
lock
jno
mov
fs
or
rcl
fwait
sbb
stos
xchg
jmp
es
out
lahf
inc
adc
push
xor
dec
and
mov
roll
ds
mov
xchg
dec
xchg
lahf
movb
adc
fwait
mov
pop
leave
rorb
popa
sbb
or
movsb
sti
adc
lods
int3
in
popf
enter
mov
cltd
enter
xchg
push
lds
stos
or
cld
sbb
loop
mov
push
sti
aad
sub
pop
mov
add
mov
push
jmp
outsl
mov
or
and
sti
push
xor
popa
mov
cmp
and
xchg
icebp
adcb
filds
ret
ffree
mov
xchg
push
cmp
mov
jmp
inc
aam
cmpsl
xor
sub
fs
or
mov
or
xor
loope
daa
push
notl
mov
add
jne
jge
pusha
sbb
xlat
nop
mov
int
loope
sub
cli
mov
es
adc
pop
xor
fs
jle
mov
inc
pop
pop
xchg
mov
in
gs
cmp
fdiv
mov
xor
push
popf
dec
lret
mov
dec
outsl
pop
call
pop
lea
sub
cld
andl
push
aas
sub
push
mov
and
out
fwait
pop
outsl
movsb
faddl
sbb
jb
lret
js
add
dec
or
data16
pop
lahf
popa
rdpmc
ficoml
clc
mov
inc
lock
test
cmp
iret
aad
fadd
mov
shll
mov
jle
rcll
mov
or
mov
fadds
iret
or
xchg
shl
ds
push
lcall
loope
pop
pop
iret
call
xor
daa
jmp
out
cld
sbb
xor
shrl
insl
stos
shrb
in
pushf
cmpsl
jo
adc
jecxz
gs
clc
movsl
fistpl
xor
jb
dec
sub
aad
cmp
mov
aam
inc
or
mov
das
or
or
mov
cmpsb
xchg
xchg
cvtps2pd
ficoml
sbb
ror
cmpb
pop
testl
pop
jmp
xor
add
cmp
lret
jg
mov
repz
shrl
ss
sbb
es
and
or
add
popf
xor
imul
test
cmc
jb
inc
cld
jl
fistpl
adc
or
mov
movsl
xchg
insl
mov
mov
aaa
aaa
and
hlt
fsubrs
pop
repz
mov
pop
cmp
mov
fisubs
sub
xchg
outsb
test
jge
stos
std
jg
or
and
adc
ss
inc
icebp
sbb
dec
lret
sub
jno
push
lcall
std
test
sbb
cs
movsl
mov
insl
fs
loope
jno
cmp
fidivl
mov
icebp
mov
dec
jno
in
sbb
shll
dec
xlat
cmpsl
or
push
adc
test
sub
mov
mov
xchg
or
sbb
sbbb
push
dec
dec
cmc
jo
test
addr16
cmp
cmp
mov
insl
inc
mov
jns
frstor
push
popa
jge
xchg
xchg
mov
add
add
test
cmp
icebp
mov
or
jmp
xchg
lods
add
mov
loope
push
push
fstpl
and
adc
dec
add
in
movsl
cs
neg
gs
filds
push
push
fisttps
pushf
inc
mov
cltd
inc
add
stos
lock
or
xchg
or
mov
stc
mov
inc
sub
mov
call
xchg
lds
mov
mov
popa
iret
xor
aas
mov
xchg
pop
add
or
mov
pop
add
cmp
adc
sub
pop
test
xor
aam
mov
add
push
add
test
mov
filds
mov
lods
ret
shr
fucom
push
push
jp
cmc
mov
and
dec
pop
inc
pop
test
test
and
xchg
and
fldcw
sub
mov
jmp
stos
cmp
loop
je
pusha
lds
subl
adc
sbb
dec
dec
loop
inc
int
addr16
bound
mov
push
cli
dec
mov
notl
or
lock
int
xchg
test
in
xor
dec
jns
jecxz
mov
mov
aas
stc
ret
add
aas
pop
loope
pop
shll
nop
jno
popa
mov
add
push
sub
psubw
jmp
inc
sbb
dec
add
movsb
dec
fistps
jecxz
or
rol
std
in
push
push
cmpsb
addr16
je
and
jns
jns
jbe
es
add
leave
in
int3
in
sbb
sub
int
lret
mov
icebp
sbbb
push
pop
sbb
daa
push
and
xchg
ds
xchg
sti
scas
andb
pop
hlt
add
dec
je
xchg
mov
lods
adc
scas
cmp
sub
jbe
stos
mov
scas
or
and
mov
adc
push
pop
push
sub
xor
pop
inc
pop
adc
decl
mov
pop
mov
loope
inc
sub
lahf
std
and
inc
jns
cmc
push
rcll
cmp
nop
adc
je
clc
js
inc
and
cmp
mov
hlt
out
fidivrs
mov
ds
xor
pop
sarb
push
mov
mov
jo
lods
out
dec
mov
push
inc
sub
xor
mov
addr16
aam
xor
or
or
or
adc
lahf
neg
dec
push
jns
cmp
clc
je
or
push
jae
mov
stos
dec
jg
adc
xlat
or
loope
cli
stos
mov
add
jp
in
loop
es
jl
jp
imull
inc
mul
es
or
imull
insb
jo
add
adc
jne
int
mov
lds
or
add
or
pop
outsl
hlt
repnz
popa
fnsave
or
stos
sbb
ja
ljmp
adc
sub
jg
repz
pop
into
xor
pop
xor
add
lods
push
sarl
jmp
aam
jmp
lods
sbb
loopne
cmp
cld
repnz
jmp
xadd
jp
or
xor
adc
xchg
mov
mov
dec
inc
xchg
fcoms
add
ja
sub
and
dec
pop
pop
push
andl
sbb
in
movsl
daa
scas
sbb
lcall
adc
xor
inc
or
in
mov
xor
xorb
cmp
ljmp
and
es
rorl
add
adc
fstl
jns
call
dec
pop
cli
scas
je
gs
push
mov
ds
cmc
je
xchg
int
xchg
and
push
into
add
inc
mov
imul
popa
xor
out
and
jo
adc
adc
call
cmp
jmp
scas
sarl
add
dec
fcmove
or
pop
xor
push
nop
xor
std
std
std
aas
movsl
in
addr16
pop
mov
adc
rolb
push
jb
jb
andl
es
sahf
int
jno
sbb
stos
xchg
push
jb
std
insl
movsb
mov
repz
mov
popf
loop
les
xchg
lret
xchg
sub
jne
jnp
push
pop
or
js
add
adc
cmp
mov
jns
jecxz
lds
test
into
inc
in
and
movsl
sbb
or
lahf
aad
xlat
rcrb
test
aad
bnd
sbb
fwait
stos
pushf
cmp
inc
in
dec
xor
xor
adc
sub
sub
push
enter
ret
movsb
sti
mov
rcll
imul
jle
add
pusha
xor
lret
orb
mov
xchg
and
data16
lret
stc
popa
sbb
movsb
ror
out
pop
add
into
pushf
or
push
js
dec
push
movsl
jne
loopne
add
out
jecxz
in
or
inc
jno
inc
inc
mov
xchg
and
inc
popf
daa
mov
mov
mov
mov
mov
dec
pop
mov
mov
dec
mov
dec
mov
sbb
inc
dec
ret
das
pusha
xor
dec
int3
sahf
pusha
add
inc
loopne
test
inc
jno
test
lds
adc
jp
lret
clc
sub
or
push
test
test
jo
cmpsb
int3
repnz
and
cmp
in
sub
adcl
mov
loop
icebp
and
cli
mov
dec
fists
stc
repz
cmc
pop
mov
daa
or
adc
mov
rol
js
gs
cwtl
call
fcomps
sub
jp
inc
jnp
xchg
sbb
aam
sbb
xchg
lret
sub
adc
js
subb
xchg
bts
push
clc
sti
js
inc
lahf
mov
xor
push
mov
addr16
in
aaa
pop
fldl
testl
test
repz
dec
dec
mov
mov
mov
cmp
leave
js
testb
js
mov
push
popf
cmp
sbb
push
out
sahf
das
mov
cmp
pop
aad
aad
dec
mov
mov
popf
mov
shll
add
seta
lds
outsl
je
xor
pop
hlt
gs
sub
jae
fisubrs
jne
rol
arpl
bound
scas
lds
inc
mov
sbb
mov
sub
in
lea
xor
and
xchg
arpl
adc
xor
sti
cmp
js
mov
ljmp
fcmovu
jl
cwtl
xor
std
stos
lret
repz
push
cwtl
mov
sbb
rcl
dec
aas
xor
inc
sahf
mov
lcall
fsts
movsb
and
and
pop
imul
repnz
addb
xchg
add
pop
push
insl
add
addr16
push
div
dec
popf
ret
sub
icebp
mov
jp
xlat
sahf
rcll
je
lret
clc
sarl
pop
mov
pop
xchg
in
xchg
xchg
movsl
lods
xor
and
outsb
push
in
pop
add
shr
lds
xor
jbe
mov
sbb
cltd
mov
xchg
sbb
bound
into
ljmp
jge
and
std
rcl
icebp
pop
cmp
push
icebp
lods
rcr
shlb
xchg
cmp
sbb
mov
push
test
sub
inc
lcall
loope
mov
mov
pop
jae
dec
orl
inc
stos
outsl
incl
test
cmpsb
xorb
int3
mov
popf
ljmp
sbb
scas
sub
out
pop
pop
nop
cmp
das
out
cmp
pop
push
inc
sub
dec
cmp
cli
cld
sahf
jecxz
pop
sti
push
int3
into
mov
xchg
cmpsl
fldt
mov
sbb
add
addr16
nop
xor
shll
cmp
add
or
jno
mov
push
ret
mov
js
cwtl
sub
dec
mov
in
or
clc
sub
mov
dec
rolb
es
iret
jo
sbb
and
fcompl
and
in
in
xlat
loope
pop
enter
mov
popa
loop
mov
mov
movsl
scas
dec
cmpsb
mov
dec
jle
loop
arpl
gs
and
cltd
clc
inc
push
mov
mov
pop
into
adc
and
int
icebp
cmp
pop
mov
addb
mov
mov
std
inc
fcmovbe
popa
popf
push
aaa
mov
or
dec
mov
int3
dec
lea
cmc
lds
mov
in
mov
imul
mov
sbb
cmp
pushf
xchg
hlt
sbb
mov
fisubs
and
inc
jne
aaa
jle
jp
jnp
push
cltd
je
xchg
xchg
cmc
adc
sub
pop
lea
push
sbb
aas
subb
xlat
adc
mov
fisubs
mov
hlt
addr16
jecxz
mov
xor
push
or
fisubs
loope
mov
mov
pop
xchg
inc
sahf
lret
enter
imul
lret
sub
insl
call
mov
push
mov
inc
filds
inc
add
push
sub
mov
sbb
adc
int
insl
dec
xchg
mov
std
lock
in
xlat
mov
pop
fstpl
xchg
xlat
loop
iret
sub
add
jne
add
cwtl
movsb
xchg
mov
je
or
xor
cmpsl
jge
cwtl
shlb
bound
pusha
sbb
loopne
sbb
mov
adc
cmp
xlat
mov
jbe
mov
aaa
into
cmpsb
adc
push
or
jae
jne
jnp
pop
xchg
lds
movzwl
pop
mov
outsb
ja
add
jbe
loop
sbb
arpl
rcrb
lcall
xor
pop
pop
je
insb
das
inc
int
push
jle
nop
arpl
mov
push
cs
pop
shlb
inc
cmpl
lock
pop
addr16
xor
stos
out
adc
inc
push
lret
shrb
mov
lcall
fcmovnb
add
mov
cmp
add
jnp
out
bound
xor
xor
fs
pop
xchg
sub
imul
inc
jno
arpl
add
xor
pop
lods
cli
pop
add
das
mov
sbb
out
mov
mov
inc
je
and
mov
es
cmpb
popa
xor
stos
incb
xchg
push
test
xor
in
lret
add
jnp
xlat
mov
test
das
push
push
mov
lods
and
push
push
loopne
in
pop
mov
cmpsl
dec
adc
lret
lds
out
sbb
and
outsb
int
aam
mov
in
lret
bound
enter
pop
fwait
and
mov
dec
lcall
test
mov
fdivrs
out
pop
je
lahf
pushf
setle
movsl
lock
push
shlb
and
hlt
fcomi
sub
or
test
fwait
in
xchg
mov
loope
inc
negl
pop
mov
mov
les
push
jbe
fsubs
add
pop
add
jnp
push
inc
lods
add
aas
pop
cmp
cmpsb
sub
inc
movsl
mov
imulb
scas
aaa
sub
loope
cmp
les
inc
pop
aam
or
inc
cmp
lods
in
inc
cmp
jecxz
push
mov
jns
adc
inc
sbb
add
jmp
sbb
in
mov
inc
loope
in
xchg
test
dec
mov
test
xor
in
mov
mov
sub
ret
dec
mov
scas
and
xchg
aad
rcr
addl
dec
sbb
int
mov
mov
adc
test
fmuls
xchg
dec
cs
xlat
push
pop
lcall
rcll
dec
popf
xchg
mov
scas
out
ret
xorb
add
fbld
leave
fisubl
mov
aas
sti
cltd
movsl
inc
push
push
or
fscale
mov
loopne
sahf
sarb
dec
lock
dec
fiaddl
add
pop
jb
outsb
es
lock
rclb
lret
in
imul
loop
adc
lsl
in
and
mov
test
out
frstor
dec
add
mov
out
push
cmc
push
insl
mov
test
das
mov
xor
mov
inc
jns
or
popl
pop
mov
pop
or
xchg
outsb
mov
out
jae
lcall
in
mov
cmp
mov
mov
shl
push
mov
imul
adc
sti
jmp
jge
cwtl
dec
jge
mov
mov
push
pop
jbe
loope
daa
adc
das
aam
mov
mov
sahf
cltd
xchg
and
or
xor
xchg
testl
cmp
in
or
gs
iret
xchg
add
cmp
aaa
push
jl
sbbb
test
icebp
test
notl
and
out
gs
pop
fisttpl
cmp
xchg
in
xchg
cmp
adcb
dec
scas
mov
xor
mov
xchg
sub
pop
notb
fwait
jp
test
xchg
imul
mov
dec
lea
data16
xchg
repnz
jb
adc
add
sahf
push
leave
arpl
fsubr
xor
pop
ret
incb
and
pusha
call
std
xchg
cmp
clc
and
mov
adc
pop
sbb
sub
popa
stos
dec
sbb
and
test
es
xlat
push
enter
insb
loopne
jge
inc
xor
clc
popf
call
inc
inc
loope
das
movl
pushf
mov
adc
xor
mov
testl
mov
pop
andl
sti
dec
movsl
dec
lcall
inc
dec
lock
push
mov
mov
mov
out
add
jg
pop
scas
aaa
and
push
into
test
and
mov
xchg
xchg
xchg
lret
popa
data16
jle
sub
pop
xor
push
sahf
jp
out
inc
imul
out
or
push
jo
test
mov
dec
stos
in
jmp
rcl
and
test
dec
pop
inc
test
jl
push
dec
inc
inc
inc
mov
add
or
test
pushf
or
in
mov
adc
insb
sbb
lea
xchg
add
push
mov
lock
mov
fmuls
push
fstps
and
mov
sbb
fldenv
fdivrl
push
fnstcw
xor
pop
dec
jno
dec
jg
mov
push
mov
outsl
mov
aas
test
xor
aas
gs
push
xchg
mov
call
gs
or
lods
jge
mov
cmp
mov
loope
pop
daa
mov
mov
xchg
out
inc
push
push
xchg
xchg
inc
mov
test
scas
jnp
push
jns
dec
gs
inc
addl
add
dec
scas
or
sbbl
cld
js
repnz
sbb
and
fdivl
stos
add
add
pop
cs
cmp
loop
push
divb
add
pop
xor
inc
jbe
sbb
xchg
loop
push
jo
lcall
pop
push
out
lret
push
sub
mov
sbb
add
out
test
pop
int
or
jno
mov
cmpsl
or
inc
lcall
pop
mov
scas
add
and
xchg
arpl
mov
sub
mov
roll
pop
push
rorb
js
jns
sbb
xchg
insb
push
cmp
cmp
dec
fsubrl
xchg
aad
cltd
push
aas
in
jnp
cwtl
and
lret
in
divl
inc
clc
mov
inc
fildll
fwait
ja
out
adc
or
or
and
outsl
das
mov
pop
mov
lods
or
repz
mov
pop
in
cmpsl
ret
iret
jnp
and
dec
in
lea
cld
roll
add
jb
movsb
stos
mov
dec
inc
dec
rcrl
icebp
or
jnp
xor
adc
xor
push
or
daa
mov
and
push
inc
jb
psllq
jns
popf
jge
push
cmp
adc
lods
mov
andl
cs
imul
and
repz
add
adc
in
test
leave
out
lret
aaa
mov
adc
in
aas
mov
dec
jmp
cmp
cltd
xor
loopne
sbb
mov
mov
sbb
rcr
jo
sti
adc
cmp
inc
sub
and
push
inc
aad
pop
cmpsl
and
xor
out
jno
test
add
inc
jne
mov
adc
adc
arpl
addr16
pusha
repnz
sti
aas
daa
lcall
fcmovne
inc
das
fcoml
sbb
push
inc
les
lea
add
mov
dec
into
xor
push
mov
cmpsb
lret
adcb
pop
aas
call
mov
xchg
xchg
dec
scas
inc
or
mov
push
mov
das
js
or
idivb
sbb
or
jno
lea
aad
sbbl
cli
nop
fwait
popf
in
push
iret
push
add
xor
arpl
adc
push
xor
arpl
dec
lods
pop
mov
pusha
push
loope
cs
ds
fdivl
aam
jo
xchg
imulb
cmpl
les
and
int3
daa
cmp
sbb
xor
pop
test
pop
xor
sbb
mov
mov
xchg
cli
jp
rolb
cmpsl
xchg
hlt
cmp
push
or
push
cld
push
lods
cmpsl
push
fdivrs
scas
inc
movsl
cmp
mov
gs
xchg
fwait
push
jp
repz
sar
pop
push
movsb
fadd
sub
sbb
and
lcall
push
jnp
pushf
mov
cmp
mov
push
dec
loop
push
aad
loop
stc
nop
mov
mov
sub
or
daa
xchg
shll
std
hlt
xor
subb
xchg
test
aaa
adc
cld
mov
push
xor
mov
mov
int
jne
pop
sub
ret
test
and
jbe
cli
fisubl
cltd
ljmp
ds
mulb
xor
mov
xchg
adc
ja
jecxz
jne
scas
push
movsb
push
xchg
sahf
mov
mov
icebp
mov
inc
inc
add
mov
in
fs
mov
push
test
aam
repz
orl
mov
xchg
in
sahf
fisubs
xor
adc
call
jo
sbb
das
je
outsb
sub
test
add
jne
dec
ljmp
jmp
mov
loope
push
fmul
addr16
xchg
mov
jp
and
or
test
jge
jmp
in
jno
sbb
outsl
xchg
xchg
and
faddp
inc
mov
jg
pop
add
shlb
and
leave
sub
testb
dec
jle
pop
decl
ret
insb
int
test
scas
dec
and
or
test
out
and
outsl
ret
push
call
test
shlb
test
mov
in
sbb
mov
xlat
xor
into
js
in
fs
ja
xchg
mov
leave
js
xor
popa
testl
int3
cli
clc
mov
cmpsl
idivl
aaa
sahf
add
rorl
inc
lods
iret
stc
push
mov
push
aas
push
cmp
inc
xor
pop
push
mov
push
and
mov
roll
mov
xor
sub
jb
jae
repnz
imul
fbstp
sub
outsb
stc
ja
mov
jne
sbb
in
cmp
lods
mov
mov
jp
clc
popf
xor
popa
into
mov
insl
dec
inc
jg
lods
mov
sbb
jmp
dec
add
enter
pop
out
inc
push
mov
pop
adc
xchg
int
pop
cwtl
push
jl
xor
fcmovbe
dec
ficoms
or
cmp
out
inc
and
or
mov
repz
stc
movb
xchg
dec
mov
mov
xor
xor
bound
pop
mov
lcall
dec
cmp
jge
push
loopne
sub
addr16
test
fwait
xlat
aaa
movsb
mov
pop
mov
mov
aas
adc
jbe
rcrl
inc
add
sub
enter
frstor
or
xchg
xor
jno
push
adc
je
loope
jbe
xor
pusha
call
mov
add
xor
dec
pop
and
push
adc
dec
add
testb
cltd
stos
mov
cmpsb
inc
mov
in
xor
mov
cld
lods
fs
lcall
fistpl
lea
aaa
sub
jo
shlb
ds
cld
stos
push
negl
jne
mov
push
test
xor
mov
mov
movsb
test
xor
das
sarl
jmp
cwtl
lcall
and
sub
icebp
mov
push
popf
movsb
xor
adc
ficomps
jae
popa
add
sbb
fidivl
lods
cmc
pop
rol
and
cmp
xor
pop
mov
andl
inc
pop
sbb
or
mov
stc
xchg
pop
or
jnp
subb
xor
movsb
repz
lret
fwait
fwait
or
dec
add
or
sbb
out
ret
mov
adc
jnp
repnz
aas
and
cs
xchg
adc
pop
xchg
jo
gs
pop
push
lahf
mov
jo
cmp
mov
in
scas
jl
cltd
test
mov
mov
push
out
das
cmpsl
mov
aad
mov
or
repz
fs
pop
sbb
mov
mov
xlat
xor
and
scas
push
hlt
mov
test
jne
sti
xchg
fidivrl
leave
in
lods
mov
push
int
jo
pavgb
fcmovnbe
dec
cli
ja
mov
lret
dec
fucomp
dec
testl
fistl
in
sahf
jge
dec
stos
push
into
sahf
cld
dec
cltd
jp
fdivrl
repz
iret
fbstp
adc
rorb
fildl
xor
adc
out
rolb
repnz
sti
jg
decb
sar
sbb
jb
push
adc
push
insb
ds
pop
aaa
movsl
sarl
pop
int
push
mul
mov
js
test
mov
jnp
das
js
std
loope
add
mov
movsb
jg
inc
aad
and
dec
repz
push
scas
addl
or
xchg
jb
iret
test
repnz
mov
mov
jge
popa
test
xor
adc
and
or
push
or
jmp
pop
dec
jle
addr16
ss
sahf
out
lea
pop
cmpl
aad
stos
jg
push
out
mov
fwait
repz
jns
xor
push
insb
mull
and
arpl
sbb
sbb
dec
and
out
jns
xchg
push
pop
dec
lahf
push
cmp
fsqrt
push
rolb
cmpl
jg
or
lods
rcl
mov
pop
clc
pop
adc
repnz
ds
bnd
xchg
push
cmp
cmp
adc
cmp
addr16
cmp
xchg
das
push
nop
fistpll
mov
mov
nop
insl
mov
push
mov
sub
xor
jae
mov
fisttps
and
adc
in
mov
int3
std
dec
sub
in
pushf
pop
enter
push
pop
stc
loopne
mov
mov
jge
push
adc
or
jecxz
jle
imul
cld
cmp
mov
icebp
or
call
int
mov
xchg
pop
mov
or
xchg
inc
fldt
out
pushf
xor
ds
insb
pop
into
in
out
sub
dec
lea
rclb
das
sub
inc
stos
adc
sbb
jle
aad
clc
mov
cmc
das
push
and
enter
jmp
movsl
jnp
cmc
or
mov
jmp
add
or
sub
insl
jns
shl
imul
popf
ds
clc
lcall
jg
aam
mov
cmp
ja
cltd
out
push
imulb
xor
out
xchg
mov
lret
or
cwtl
std
dec
xchg
mov
sarl
scas
rcll
jp
ljmp
test
cmp
push
movsl
add
out
pushf
clc
mov
jp
mov
insb
xlat
test
sub
inc
xor
sbb
roll
xor
leave
out
stos
sarl
aas
mov
scas
inc
sti
push
std
mov
push
mov
dec
mov
xor
in
pusha
data16
das
aad
sub
xchg
jmp
jmp
jle
push
fcoml
call
push
js
test
in
mov
xorl
icebp
pop
or
mov
mov
aaa
or
mov
jnp
or
and
bnd
xchg
movsb
jne
ja
xchg
cmp
aam
mov
repnz
mov
leave
xor
mov
xchg
shl
jnp,pn
test
loop
addr16
mov
loopne
pop
sbb
pop
lret
dec
xor
adc
mov
mov
test
or
das
int3
sub
lock
outsl
mov
mov
aad
xor
xor
data16
das
imul
xchg
cs
xchg
xchg
test
pop
xchg
aam
jg
or
adc
sub
lock
add
gs
dec
lea
sub
out
aam
cmc
xchg
das
rcl
std
enter
and
jp
xor
push
mov
ret
mov
aaa
mov
dec
or
sub
fwait
and
jns
shlb
pop
outsl
scas
sbb
inc
pushf
jge
into
or
xchg
mov
adc
imul
cmp
xor
cmp
js
mov
into
popf
fstl
mov
push
add
aam
push
test
jg
or
int
movsl
cmpsl
sbb
jmp
add
add
into
mov
adc
shrl
and
leave
in
mov
fwait
sub
out
call
jnp
je
mov
xor
mov
and
adc
lea
inc
cld
stos
clc
sub
mov
pop
sub
mov
adc
mov
jns
sti
test
push
pusha
add
cmp
call
push
movsl
push
mov
aas
lcall
push
push
pop
dec
inc
aas
outsl
and
repz
pop
ljmp
sub
movsb
pop
lret
leave
lahf
sbb
push
xchg
jmp
incb
pushf
lock
xchg
add
mov
jmp
scas
lea
rcrl
nop
jnp
rcr
dec
cli
and
xchg
push
xor
ss
push
push
sahf
lea
dec
sub
xor
daa
test
aad
fcmovbe
lods
push
jae
sub
rcrl
mov
mov
stos
mov
mov
lcall
pop
adc
cwtl
xor
pop
or
add
push
mov
mov
xchg
cpuid
adc
cmp
sub
call
pop
mov
arpl
js
mov
out
xor
mov
scas
mov
fs
cmpsl
inc
sub
xchg
jo
pop
mov
sbb
mov
jae
adc
xchg
pop
pop
adc
test
test
outsl
test
xchg
jb
ficomps
sub
dec
clc
fucomip
dec
jle
xchg
xchg
mov
rcrl
idiv
inc
or
outsl
jb
and
push
and
cltd
pop
loope
push
shr
push
movsb
bound
loopne
ss
sbb
pop
sbb
cmp
out
lret
gs
fdivs
xchg
stos
stc
lcall
jbe
repz
mov
or
mov
into
push
movsb
loop
adc
push
push
dec
mov
decb
cltd
nop
movsl
fistpll
inc
nop
loopne
cmpsb
and
cmp
push
lea
add
ret
and
inc
xor
xchg
pop
adc
movsb
enter
and
sub
xchg
push
inc
insl
out
clc
cmp
sbb
test
dec
dec
js
and
push
cmpsb
pop
xchg
rorb
push
ss
inc
mov
scas
jbe
jno
test
mov
scas
dec
cmpsb
push
inc
pop
stos
pushf
popa
dec
sub
xchg
mov
repnz
fnstcw
push
not
test
decl
pop
add
popf
xchg
je
aaa
sub
subl
popa
inc
sbb
pop
mov
or
popf
lret
sub
add
leave
fisttps
and
pop
aad
lahf
mov
clc
dec
add
xor
pop
sbb
xchg
and
sbb
jno
out
mov
inc
lret
xchg
jmp
pop
stos
or
jp
dec
cwtl
inc
and
imul
lret
push
lods
add
lret
add
or
mov
and
dec
ret
mov
int
jne
outsb
loope
xor
aaa
cmc
out
push
lret
ds
dec
sti
xchg
mov
test
push
ja
sbbb
ja
stos
stos
mov
fists
add
adc
test
mov
mov
or
sahf
ret
cmpsl
jno
cmp
mov
mov
cltd
xchg
xlat
idivl
and
sub
fmuls
fmuls
gs
cwtl
inc
pop
mov
jo
pushf
add
gs
pushl
push
xor
mov
aas
iret
adc
cmp
cmpl
cltd
cmp
mov
lahf
fs
inc
frstor
outsb
sbbb
enter
insl
into
repz
popl
ljmp
stos
pusha
fxch
pop
mov
push
jmp
sbb
cmc
aam
mov
mov
lock
xor
mov
sub
or
bound
test
outsb
xchg
cltd
jbe
cmpsb
mov
mov
jbe
push
add
xchg
imul
out
dec
cmp
xchg
xchg
test
mov
fsubrl
xchg
adc
imul
stos
in
dec
es
popa
jmp
push
jae
jne
fisubl
repnz
sbb
lea
hlt
aas
pusha
cmpsb
push
int
shll
fcmovnbe
pop
call
lahf
sahf
mov
pop
mov
pushf
lahf
ljmp
push
pop
inc
add
je
mov
pushl
or
mov
in
jns
cmp
or
stc
mov
cmpsl
das
aad
xlat
xchg
xchg
in
imul
xor
mov
sub
ja
push
push
lret
cmova
or
adc
mov
inc
jle
mov
mov
aaa
cmp
fnstcw
popa
fstl
notrack
sti
cld
mov
and
sahf
dec
fs
dec
sub
or
xor
dec
xchg
push
jle
lods
and
addb
mov
push
or
lods
pop
pushf
adc
mov
push
xor
adcl
mov
mov
outsl
cmp
movsl
ss
mov
mov
cmp
xor
std
adc
push
lahf
pop
xor
pop
jns
in
pop
inc
scas
cmp
loope
lahf
cmc
js
jb
fisttpl
lods
jp
jp
into
es
cmp
pop
xor
inc
test
jne
negl
scas
insl
lea
fldl2t
inc
jle
stos
pop
ffree
pop
jbe
lods
es
sar
shlb
jmp
enter
mov
loope
sbb
xor
shll
xlat
jecxz
test
add
clc
shll
sub
nop
xor
cmp
pop
cli
and
lods
cmp
ja
das
cmp
mov
lods
int
fisubrs
adc
enter
movsb
ss
sbb
pop
fmull
negl
loope
aas
mov
stos
mov
jge
pop
add
iret
outsl
pop
fcmovnu
lea
std
jne
out
inc
call
es
sbb
jmp
mov
stos
sti
jecxz
jbe
lock
cmp
pop
adc
testl
aas
push
mov
popa
xchg
arpl
xchg
paddusw
mov
dec
sbb
push
add
mov
jae
xchg
xchg
lcall
sahf
in
test
sub
adc
fcoml
jp
adc
inc
pop
aaa
push
mov
cltd
movb
and
mov
mov
push
mov
mov
dec
mov
or
xor
ret
cmpsl
imul
cmp
mov
and
adc
call
add
cmp
insl
and
jmp
fs
jo
arpl
imul
mov
lcall
mov
xchg
int3
fistl
mov
cmc
insl
pop
lea
gs
and
inc
je
cmp
mov
cmp
mov
ja
fwait
xchg
and
xchg
pop
or
adc
mov
aas
dec
mov
das
andl
arpl
push
sub
sbb
push
ds
mov
loop
jecxz
mov
mov
xchg
fucomp
mov
out
sub
fcompl
jg
adc
icebp
mov
pop
sbb
test
btc
jl
xchg
orl
vpsrld
pusha
dec
mov
in
sbb
mov
fnsave
fs
jns
outsb
mov
jae
lods
add
adc
and
sar
fimull
loop
dec
testl
push
mov
popa
sar
push
push
sbb
stc
and
repz
mov
mov
mov
mov
mov
vmovsd
sub
cmp
jecxz
shlb
xor
out
cld
aas
mov
xchg
push
and
inc
cmp
xchg
icebp
add
movsl
cld
and
add
dec
sti
sbb
mov
divps
mov
push
ret
cmc
mov
jmp
iret
fwait
arpl
stos
push
lret
mov
xor
jmp
test
dec
aas
lods
sub
adc
mov
fsubrs
and
mov
cltd
pushf
fmul
inc
mov
add
push
jno
rclb
inc
shl
hlt
cmp
lods
pop
cmp
or
jp
sti
aam
dec
jge
pop
scas
pop
mov
sub
sti
sub
push
repnz
repz
lods
and
fcoml
ds
xchg
mov
loope
sbb
lret
iret
sbbl
push
sub
nop
fsin
cmpsb
aaa
cld
stc
sub
adc
loopne
cli
xchg
pop
and
repnz
xchg
cwtl
pop
inc
cmc
add
cmc
nop
scas
ret
pop
inc
ljmp
or
ljmp
das
fwait
sarl
loopne
pop
jae
add
and
push
mov
inc
inc
cmc
sbb
scas
push
jne
aaa
stos
daa
xchg
movsb
sub
idivl
stos
xor
xchg
mov
stc
fistl
xchg
pop
enter
rorl
xchg
cwtl
mov
loopne
leave
dec
or
pop
imul
movsb
leave
mov
aam
pop
aaa
sbb
movsl
scas
pop
pop
jle
daa
add
repz
xchg
pop
jo
jo
mov
mov
fcomps
jg
xor
sahf
sti
gs
daa
shl
in
jno
mov
add
icebp
cli
test
insb
push
js
mov
mov
cs
fmull
pop
jne
popf
shll
or
jmp
das
mov
imul
fisubrl
aad
xor
adc
sub
fbld
pop
lcall
jp
loopne
out
lea
js
clc
add
jb
fwait
es
stc
xor
js
jo
adc
or
add
lahf
ret
pop
gs
dec
and
lea
jmp
mov
cwtl
fcmovu
mov
add
xchg
mov
fwait
mov
mov
mov
out
mov
fwait
out
cwtl
push
cmp
and
out
inc
pop
aad
sub
xor
pop
sti
sbb
out
add
and
enter
icebp
cltd
outsb
jne
push
lods
or
adc
jae
jmp
dec
cmp
int
fs
notl
sub
cmc
dec
pop
push
adc
or
into
xchg
in
icebp
inc
sti
dec
hlt
call
mov
jb
mov
enter
adc
pop
inc
insl
lcall
pop
movsb
das
dec
mov
jo
sbb
aam
or
xchg
sti
inc
stc
dec
mov
dec
jmp
mov
cli
dec
iret
adc
int
test
push
cmp
shll
mov
mov
flds
adc
dec
mov
outsl
movsl
loop
pop
jne
xor
int
jg
shlb
ds
cmp
dec
lea
pushf
fdivrp
test
fcomp
sbb
addb
xlat
insl
in
jae
xor
divl
gs
cmc
outsl
jg
sub
pop
mov
out
sahf
loope
gs
mov
mov
cli
clc
fs
insb
sti
ficoml
ljmp
mov
xor
cli
leave
rcll
xchg
arpl
movsb
imul
mov
sbbl
inc
aas
lea
lea
incl
shl
rcl
push
add
fcomip
inc
ja
cltd
fidivrl
sub
popf
jecxz
loop
dec
mov
cmpsl
div
xor
mov
sbb
mov
add
adc
mov
rolb
into
bswap
js
pop
or
push
int
ds
mov
fs
ret
xchg
and
xor
mov
push
inc
test
add
mov
push
xchg
repz
mov
xlat
insb
sub
int3
aad
add
jmp
add
rep
or
in
cld
ffreep
xchg
dec
xchg
sbb
jmp
pop
push
inc
icebp
notrack
in
fdiv
orl
sarl
adc
cmc
loop
jb
push
inc
and
ret
sti
jnp
or
lret
ss
loope
insl
pop
pop
repz
int3
xlat
or
cli
in
mov
inc
and
outsl
mov
xchg
sbb
cmp
and
test
leave
or
push
clc
pop
movsb
mov
xchg
push
push
add
fdivl
in
je
or
inc
push
les
xchg
push
enter
cmpsb
xchg
sti
cmp
enter
xchg
pop
into
dec
xchg
cmp
mov
or
add
jae
pop
cmp
adc
inc
mov
sbb
mov
push
mov
shrb
fwait
out
rcl
jno
int3
lds
sti
mov
in
mov
dec
test
fcmovbe
dec
add
xchg
xchg
fisttpll
clc
jge
out
movsl
int3
hlt
jle
loop
cmp
cmc
repz
mov
gs
out
sub
es
leave
xchg
in
dec
sub
jecxz
xor
sbbb
lds
push
fcompl
test
xor
in
mov
cs
ljmp
clc
imul
test
xor
pusha
jbe
and
adc
sarl
jns
xor
rcrl
sub
int3
jne
bound
or
das
push
mov
mov
jp
jno
cmp
mov
xlat
cs
ss
je
bnd
in
push
ficompl
cmpsb
jg
icebp
jp
mov
sub
mov
std
and
push
mov
aaa
push
cltd
push
popf
mov
ret
cld
xchg
test
add
xchg
hlt
push
fidivl
mov
outsb
push
int
test
into
mov
push
add
ret
cmpl
mov
test
in
xorl
jo
pushf
and
mov
or
outsl
jge
inc
sub
xor
add
mov
je
in
clc
out
mov
mov
jl
outsb
int3
cmp
out
shl
and
test
leave
mov
or
inc
ret
xchg
or
mov
pop
test
and
push
xchg
push
call
cmp
jge
inc
sub
xlat
gs
mov
or
cmc
testb
mov
outsb
movsl
outsl
inc
sub
pushf
or
jle,pn
push
int
jns
cld
jmp
cltd
std
fmull
ret
adc
pop
xchg
inc
subb
mov
add
mov
stos
jl
cli
pop
mov
sbb
add
test
dec
out
mov
loopne
cmp
pop
xor
mov
movsb
dec
push
je
mov
outsl
push
mov
dec
aas
or
mov
lods
cmp
xchg
inc
sub
add
arpl
stos
and
inc
frstor
push
inc
aas
adc
enter
mov
insl
dec
pop
lcall
sbb
xchg
popf
popf
ljmp
mov
adc
into
pop
stos
cmp
and
push
push
mov
inc
and
push
jecxz
sti
lcall
stos
jge
mov
push
mov
xchg
loope
lahf
or
mov
data16
scas
bound
popa
rclb
out
pop
bound
mov
mov
lcall
pop
movsb
insb
std
mov
mov
jb
lret
sbb
sbb
jb
cmp
xlat
jecxz
or
jb
mov
lods
aam
or
push
ljmp
and
cs
and
das
lods
push
add
dec
into
push
jb
mov
mov
aad
stc
shll
xchg
rcll
cmpsl
push
iret
add
imul
push
mov
lret
or
pop
sbb
arpl
jbe
mov
inc
pop
int
dec
sbb
mov
push
arpl
pop
add
inc
ja
cmp
inc
out
sbb
daa
mov
sub
and
jle
jg
cmp
add
sbb
cmp
mov
mov
out
pop
scas
xchg
fistpll
dec
ljmp
lcall
add
and
popf
or
lcall
into
fmuls
pop
cmp
mov
or
adc
mov
dec
out
fld
pusha
cmpsl
xchg
repz
mov
pop
cmp
push
repz
daa
sarb
sar
pop
add
and
es
inc
dec
repz
jns
adc
rcll
adc
test
aam
sub
sbb
clc
pop
gs
repnz
enter
jo
mov
lahf
add
adc
out
daa
sub
cmp
push
mov
jnp
adc
inc
scas
lcall
adc
imul
and
dec
fs
dec
sbb
pop
dec
adc
enter
test
pop
adc
fs
leave
icebp
ja
js
xchg
pop
cmp
fst
mov
fbld
add
pop
jle
imul
aam
cmp
cs
xchg
cs
or
mov
mov
stc
sbb
jo
fidivrl
filds
data16
mov
and
lahf
push
mov
pop
out
fcompl
cmpsl
arpl
jns
cld
dec
jp
pop
or
mov
xchg
or
sbb
pop
dec
out
fwait
xchg
mov
fdivs
and
jae,pn
data16
and
or
lea
xor
lods
cmp
lds
out
cmpsb
popa
add
stos
insl
stos
ss
sub
xchg
clc
outsw
inc
mov
or
ljmp
out
adc
fs
fisubs
mov
xor
pop
xchg
lret
inc
inc
jle
dec
aaa
loopne
mov
push
loope
enter
or
call
cmp
push
dec
xor
jno
xlat
repnz
inc
out
jge
negb
loopne
xchg
mov
shlb
aad
jbe
data16
scas
jmp
pop
xchg
sbb
mov
jecxz
scas
fdivrl
test
icebp
js
ja
lcall
in
add
cld
mov
add
fmuls
xchg
pop
adc
or
es
mov
jecxz
dec
clc
mov
xchg
jnp
fldcw
adc
xchg
jnp
in
and
sub
je
and
fists
scas
and
in
inc
cmp
mov
imul
lock
out
or
push
sti
mov
dec
das
ljmp
jb
nop
enter
je
cmp
push
mov
mov
add
mov
push
add
inc
dec
jae
push
popa
out
out
ror
inc
xchg
pop
fdivl
fdivp
pop
inc
repz
repz
lahf
out
ds
mov
int3
bnd
andb
stc
push
cmp
fwait
cld
xchg
add
rorb
mov
mov
inc
cmpsl
int3
jle
fdivl
jae
xchg
shrl
pop
and
xchg
popf
and
mov
inc
popa
sub
call
in
imulb
jecxz
fidivs
and
dec
inc
sahf
xchg
mov
shr
vcvttpd2dqy
sahf
es
ret
fiaddl
xchg
loop
lock
scas
pushfw
imul
add
ss
leave
sub
mov
repnz
pop
repnz
push
xor
or
dec
push
iret
out
popf
imul
aam
sbb
mov
cwtl
mov
sub
fdivs
js
cmpsb
jno
dec
fidivrs
out
dec
outsl
cmc
cmp
push
push
fsts
mov
mov
pop
pushf
icebp
jle
stos
push
xchg
in
jge
loope
dec
cltd
mov
ror
out
sub
add
inc
in
mov
mov
jg
mov
or
mov
push
or
mov
inc
add
xor
inc
xchg
mov
inc
aaa
pop
mov
movsb
in
imul
lds
in
jno
pop
aad
ficomps
xchg
mov
jmp
ja
and
sahf
inc
mov
pop
jp
movsb
dec
jae
gs
xchg
cmp
pop
in
sub
pop
loope
pusha
xor
addr16
jae
push
mov
sub
adc
mov
jecxz
js
dec
in
sub
mov
pop
dec
outsb
int3
stc
int
repz
aas
and
add
xchg
xor
ret
jns
dec
pop
cmc
xchg
ds
mov
addr16
cmp
test
xlat
pop
out
in
cmp
sub
lret
testb
mov
push
sub
fbstp
in
icebp
jecxz
cmp
push
fs
loop
lds
xchg
cld
cmp
push
push
mov
jae
loopne
cltd
jbe
movsl
jmp
arpl
stos
fwait
leave
loopne
lods
mov
dec
insl
push
mov
mov
jae
push
mov
aaa
shrl
xorb
daa
inc
dec
mov
mov
mov
fistps
mov
outsl
jl,pn
add
xor
loop
mov
call
mov
and
stos
cmpsl
cltd
lds
dec
add
cmpsl
outsb
xorb
cmp
jns
add
jb
lret
rorl
out
sub
jmp
rcll
rcll
add
mov
nop
and
add
sti
mov
fcmovnbe
mov
add
pusha
das
xor
mov
mov
xchg
outsb
imul
inc
xlat
mov
cltd
pop
push
rcrl
xor
outsl
pop
jge
outsl
cmpsl
push
scas
sbb
rcl
add
sub
xchg
mov
sbb
mov
push
and
ret
mov
pusha
dec
xor
mov
dec
jnp
jns
sbb
xchg
or
test
jmp
push
push
rorb
cmp
test
lods
inc
xchg
test
stc
mov
lahf
inc
ja
or
mov
popl
xchg
inc
clc
dec
icebp
pushf
cld
add
mov
sub
pop
mov
mov
enter
cmp
ja
ret
outsl
movsl
nop
decb
adc
mov
lock
push
frstor
dec
repnz
jmp
xor
mov
ffree
sbbl
sbb
cmp
cltd
cmp
rol
adc
xlat
rcll
movsb
movsb
adc
aaa
xchg
ficompl
icebp
rolb
das
lret
jmp
xchg
cmp
cmp
push
push
movsl
xchg
pop
pop
cmpsl
jns
movsb
insl
push
sub
jae
fdivl
pop
ret
aaa
adc
xchg
inc
adc
jecxz
imul
icebp
bnd
sub
jne
dec
dec
xor
frstor
push
rcll
movsw
add
ds
cmp
push
arpl
pop
jecxz
in
cmp
out
into
jmp
cmp
add
adc
xor
and
fcos
in
aaa
inc
jnp
outsl
jl
lcall
ljmp
jae
js
ret
jmp
mov
jb
fcoms
push
lock
mov
xchg
mov
add
shlb
xchg
sbb
ds
dec
cld
test
xor
aas
pop
sub
xchg
sarb
inc
test
icebp
xchg
sbb
js
mov
jbe
push
ja
popf
pop
xor
pop
aas
fstpl
in
cld
cmp
stos
mov
adc
jb
in
xchg
mov
fiaddl
aad
xchg
fdivs
fisttpl
lret
sub
mov
std
insl
pop
inc
dec
pop
sbb
test
int
mov
xchg
pop
pop
mov
nop
lret
mov
rol
pop
loop
or
adc
jmp
xor
sub
mov
push
pop
cld
and
pop
inc
xor
ja
sbb
xor
sarb
movaps
movsb
arpl
push
lcall
and
cmp
leave
cmp
jns
push
test
mov
fstpl
inc
mov
mov
lea
enter
test
sub
pop
bound
dec
add
mov
pop
adc
jle
xchg
das
jge
movsl
mov
shrl
mov
jmp
lods
mov
and
lcall
mov
fmul
pop
pop
daa
mov
xor
mov
xchg
into
mov
imull
rol
cmp
adc
sub
fdiv
loopne
mov
gs
cmp
rclb
fs
add
nop
testl
pop
addr16
mov
mov
testb
ja
jmp
push
sbb
stos
jns
xchg
das
aaa
insb
and
pop
xor
iret
fidivl
cli
fisttps
jecxz
adc
jl
fdivrs
jle
push
adc
fsubr
mov
js
or
mov
imul
mov
pop
mov
repz
mov
or
stos
or
xlat
mov
xlat
imul
je
jne
cld
jb
mov
int
sbb
clc
mov
je
mov
mov
cmpb
jo
mov
push
dec
fcomp
push
and
pop
inc
aad
outsl
sub
adc
pop
pop
mov
imul
jge
stos
outsb
jl
xchg
fwait
imul
pusha
gs
pop
push
stos
pop
call
fwait
mov
repnz
fnstenv
inc
mov
jne
mov
inc
daa
loopne
cmc
enter
into
loop
insl
jg
cmp
pop
lret
mov
push
or
and
push
push
mov
std
popa
jle
jp
mov
stos
pop
lret
dec
sbb
xor
jnp
pop
in
dec
dec
out
dec
xlat
int3
cli
mov
mov
test
pop
mov
test
std
rcr
stc
add
and
mov
push
test
rcll
inc
mov
mov
jmp
xor
lea
enter
mov
or
dec
fwait
popf
shrb
dec
dec
mov
dec
push
jmp
test
add
sub
add
sti
hlt
mov
test
rol
jno
or
addr16
mov
test
mov
sbb
pop
xchg
ljmp
mov
push
popf
xchg
insl
imul
imul
orb
out
pusha
mov
adc
out
add
xor
push
or
sbbb
push
hlt
mov
pop
and
dec
sub
pushf
mov
mov
cmpsb
inc
in
insb
and
es
pop
mov
adc
mov
call
nop
push
inc
lea
inc
data16
cs
xchg
shll
mov
cmpsb
call
add
out
xor
lret
rcll
jno
dec
cmc
add
aam
int
aaa
lret
lret
bound
lds
xor
xchg
daa
push
xchg
ret
nop
xor
xor
idivb
lret
pop
nop
aam
fistpl
sbbl
test
addr16
and
in
rcr
lods
mov
jnp
mov
pop
js
repz
push
inc
jno
xchg
xor
add
pop
in
lock
int
iret
jmp
and
sbb
cmp
xchg
pushl
lret
cwtl
je
leave
test
mov
ret
mov
push
jnp
xchg
jmp
cmp
cld
push
enter
add
cmp
stos
out
pop
and
fidivrl
sub
mov
sahf
add
push
xchg
push
scas
les
test
in
dec
sbb
cmc
sub
jbe
xchg
ja
sbb
loopne
inc
stos
out
push
dec
jl
in
or
pusha
aaa
xlat
lods
push
mov
and
jns
pop
aam
adc
imul
push
lods
int
mov
hlt
pop
pop
sbb
ret
nop
fistps
outsb
movsl
or
lods
dec
push
jno
ljmp
jg
das
lods
into
mov
cmp
lods
jle
movsb
dec
std
fistps
mov
mov
xchg
inc
xorl
jo
scas
arpl
jo
sarb
and
xchg
ss
jg
inc
jns
or
mov
cmpsl
add
clc
dec
mov
cwtl
test
mov
outsb
xchg
cs
xchg
fisttpll
bound
push
pop
out
cmpsl
sub
popf
outsb
loopne
push
mov
add
dec
dec
inc
out
lahf
mov
dec
xor
mov
cli
xor
enter
add
shll
xchg
inc
bound
jae
dec
in
icebp
lcall
adc
jnp
imul
xchg
inc
inc
xchg
mov
loope
movsb
or
cmp
mov
testl
jle
cmp
cmp
or
lret
outsl
xor
out
repz
sahf
mov
and
sbb
lret
adc
xor
fstpt
mov
scas
xlat
mov
fnstsw
orl
orb
inc
dec
pop
push
dec
cmpsl
stos
jmp
sbbl
ds
dec
pop
leave
sti
xchg
lock
je
ret
imul
imulb
jae
arpl
xchg
dec
mov
stos
adc
mov
loop
sbb
fs
cmc
addr16
adcl
mov
or
mov
rcl
cmp
call
adcb
xchg
je
push
inc
js
cld
inc
dec
inc
mov
mov
aam
iret
dec
popa
jb
push
lock
repz
popa
insb
pop
dec
frstor
pop
in
mov
aas
out
xchg
lock
ss
add
js
sbb
push
ds
mov
adcl
jl
cmc
adc
cli
mov
mov
in
mov
sub
mov
stos
fsts
leave
inc
push
jg
adc
cmp
jns
sti
aad
or
es
mov
xor
push
out
or
ja
fimull
sti
add
adc
rclb
cmpl
push
shlb
cmp
or
shlb
inc
out
xchg
pop
adcb
push
jnp
mov
stos
std
mov
movsl
loopne
jp
mov
sub
adc
mov
cmc
dec
push
mov
repnz
lods
dec
sub
out
cmp
mov
mov
xchg
jecxz
jmp
pop
insb
pop
test
adc
push
push
les
pop
xchg
cld
and
shrl
or
imul
jp
ja
cmp
inc
ljmp
mov
xchg
in
ja
imul
in
fmull
xchg
jae
fwait
out
pusha
inc
int
sbb
addr16
jb
cmp
sub
xorb
push
insl
stos
and
push
cmp
mov
inc
icebp
std
mov
sub
or
or
or
sub
mov
push
or
push
xor
or
jle
jle
lret
aaa
fidivrs
jbe
mov
repz
sysexit
push
cltd
cmp
fldlg2
pushf
aaa
pusha
ds
push
shlb
repz
rcr
hlt
push
mov
dec
movsl
cmp
dec
in
aad
and
adcl
push
jl
adc
add
arpl
and
dec
push
adc
out
add
mov
popf
rorb
or
push
inc
std
sub
cmp
mov
les
repnz
loopne
sti
pop
mov
rep
xchg
outsl
push
aam
out
and
in
ja
out
aad
xchg
leave
int
fidivs
cmp
outsl
movsl
jnp
lret
outsb
stc
lock
rcrl
or
and
lds
in
call
pop
loopne
cmp
xchg
sub
dec
dec
mov
int3
push
inc
ds
ret
movd
cld
push
lahf
cmp
push
test
repz
pushf
jg
mov
pop
int3
stos
jo
cmp
mov
mov
push
test
pop
popf
mov
push
aaa
das
icebp
mov
xchg
add
mov
test
fstps
fmuls
cmp
xor
mov
pop
in
cmpsl
mov
or
dec
or
dec
mov
in
fiaddl
xor
pop
cmp
add
in
adc
inc
cmp
mov
shll
and
clc
test
sub
cmp
pop
cmp
cmp
mov
adc
pmaxub
nop
ficomps
sub
ret
aad
mov
lock
cmp
adc
dec
aas
push
dec
pushf
push
popl
lahf
mov
cmp
mov
hlt
push
lods
idivb
pop
fwait
push
adc
jae
or
lock
and
lea
or
xchg
and
negl
add
test
push
in
test
adc
mov
shlb
jo
sarl
dec
jnp
jp
cmpsl
dec
call
xor
push
cmp
pop
mov
jbe
fisubl
je
xchg
scas
std
xorl
stc
xor
or
lcall
push
call
or
mov
adc
loop
xlat
dec
xor
in
imul
iret
je
and
dec
lods
and
inc
insl
loop
mov
outsb
test
adc
and
cli
bound
aam
popa
addb
xchg
sub
mov
out
mov
int3
rcrl
adc
loope
sub
outsl
inc
testl
xchg
int3
push
and
std
fnsave
call
pushf
push
sti
in
push
js
stos
ss
xchg
pushl
and
sbb
cmpsb
adc
xlat
clc
out
push
cld
mov
test
lods
cmp
push
pop
adc
rolb
in
or
stos
lods
jo
lods
push
dec
xchg
fidivrl
test
test
cmpl
addr16
or
shr
sbb
cmp
push
daa
mov
jae
and
push
scas
and
rclb
jb
rclb
inc
lds
mov
das
aad
notl
sbb
inc
jl,pn
push
cmp
mov
cmc
imul
rorl
punpckldq
or
aad
clc
cld
add
jmp
cmc
sti
mov
cs
call
cmp
cs
insl
jmp
lahf
mov
lcall
outsb
and
cs
cmc
dec
push
adc
xchg
pop
sub
xchg
or
addr16
add
xchg
mov
xchg
pop
popa
xchg
sti
test
and
mov
movb
push
rol
sbb
fcmovne
mov
cli
mov
inc
add
rcr
jge
into
movsb
cld
loopne
and
into
add
shll
push
pop
aas
cmp
mov
sbbl
ds
push
sub
lods
jae
cwtl
in
js
dec
pop
sub
pop
sub
aad
bound
aam
and
add
jl
inc
in
jl
mov
add
dec
out
xor
sbb
bnd
push
fucompp
push
mull
adc
inc
gs
mov
inc
mov
mov
pop
mov
mov
out
hlt
pop
xchg
add
jno
mov
mov
inc
std
js
movntps
xor
and
test
sub
xchg
jb
insb
add
dec
loopne
sub
push
cmp
in
xchg
pop
aad
jb
insl
mov
push
scas
jp
ror
fstp
fcomi
aam
inc
dec
mov
subl
arpl
call
arpl
cmpl
call
testb
fwait
cld
cmc
ror
add
mov
xor
xchg
int
jl
sub
push
fisttps
jge
cli
jl
lods
lret
pop
add
cmpsb
repnz
and
das
inc
inc
arpl
rep
rol
stc
bound
jno
ret
enter
sbb
mov
pop
ds
iret
scas
add
mov
mov
mov
xor
loop
xchg
mov
and
xor
add
andb
adcl
lcall
inc
imul
out
pop
sub
adc
pop
push
inc
push
or
xor
gs
pop
push
or
or
mov
or
sbb
aas
mov
xchg
sahf
push
ret
mov
sub
or
into
inc
xchg
sbb
sub
mov
sub
or
jno
fcomp
mov
cmpsl
sbb
insb
adc
test
sbb
pop
push
sbb
notb
mov
inc
mov
mov
cmp
ficompl
sub
int3
dec
inc
jp
shlb
push
ja
mov
xchg
repnz
add
push
repz
in
sbb
pop
xchg
push
rorl
adc
pop
cmp
imull
daa
inc
fisubrs
dec
lods
inc
lea
adc
rorb
xchg
insb
add
test
fucomp
sbb
std
insl
shlb
call
dec
mov
mov
lcall
scas
bound
xchg
mov
push
or
sbb
mov
fsubl
hlt
enter
out
das
add
jo
pop
outsl
insl
and
cmp
adc
push
sub
popa
scas
jle
movsb
std
test
lock
mov
xor
arpl
ret
mov
movlps
sbb
int
dec
or
xchg
lahf
mov
jnp
fldz
scas
popl
std
std
fld
jle
jge
xchg
adc
aaa
mov
lods
stc
inc
scas
mov
pop
mov
lret
pop
inc
mov
adcb
fdivp
daa
outsl
xor
pop
push
and
xchg
push
cld
sbb
fwait
sti
pop
push
outsb
lret
push
stos
pop
xchg
mov
es
clc
dec
inc
push
bound
add
das
sub
ret
jnp
les
shrl
enter
pushw
mov
adc
into
adc
lock
xor
push
adc
imul
mov
mov
mov
repnz
fnstenv
imul
mov
xor
jb
mov
cmp
shrl
test
or
add
cs
inc
and
fldt
xor
dec
pushf
jg
push
scas
add
sbb
arpl
sbb
sub
jnp
xchg
or
insb
fsubr
or
ss
shl
fisubl
mov
sub
ss
icebp
repz
in
shr
jge
and
mov
adc
aam
stos
loope
cmp
out
imul
inc
adc
inc
adc
aaa
orb
out
leave
je
out
enter
jmp
cmp
loop
ffreep
scas
push
add
movsl
out
cmpsb
cmc
adc
lea
test
cmp
sti
mov
scas
sub
jb
in
xchg
or
out
sbb
data16
ss
movsb
cmp
addl
lret
ja
insb
lret
and
scas
mov
mov
or
add
inc
scas
stc
jge
mov
outsl
push
lds
and
cld
test
mov
or
pop
fimull
clc
call
jb
negl
push
int
aaa
sub
jne
imul
mov
add
popf
sub
mov
movsb
adc
jmp
xor
insl
test
bound
mov
hlt
dec
push
aas
inc
jecxz
and
inc
lds
mov
lods
pop
dec
lcall
enter
insl
mov
jbe
rcr
cmp
lds
test
lret
out
scas
cmpsb
inc
sub
test
jle
xchg
add
std
dec
and
cmpsl
ss
adc
sbbl
mov
dec
inc
nop
loopne
xchg
jg
sbb
aam
mov
lcall
test
clc
dec
cmp
pop
cmpsl
add
je
test
jns
ljmp
pop
push
push
jmp
hlt
jns
pop
xchg
scas
cmp
adc
les
push
cli
xor
or
dec
pop
add
dec
jo
aas
je
daa
outsl
push
mov
dec
sub
sbb
loope
pusha
mov
in
mov
out
xchg
cmp
loop
xchg
out
scas
clc
orb
repnz
cltd
inc
jo
mov
test
clc
add
cmp
bnd
loop
fimuls
and
mov
shll
call
jp
push
test
imul
and
cld
mov
cmpsl
arpl
inc
stos
arpl
sub
mov
pop
sahf
sub
arpl
daa
mov
inc
jp
mov
iret
jbe
daa
ds
xchg
ljmp
or
xor
pusha
jp
adc
ds
cwtl
scas
pop
aad
idivb
out
ret
roll
push
add
les
cmp
test
add
test
jge
mov
in
lret
repz
add
cli
mov
dec
dec
stc
inc
stos
ljmp
cmpsb
sbb
lahf
shlb
rorl
push
int3
push
icebp
js
pop
enter
std
push
aam
gs
xor
xor
sub
test
popf
adc
xor
dec
pop
adc
mov
push
movsl
xchg
xchg
cmp
push
jl
and
cmp
shl
call
push
cltd
adc
out
add
in
xchg
ja
lahf
xchg
imul
dec
arpl
push
inc
xchg
bound
jle
lcall
outsb
leave
mov
std
insl
inc
push
outsl
bound
sbb
ficoms
shll
cmpsl
push
nop
aad
loope
data16
lods
aad
mov
scas
xor
fidivl
inc
mov
cmpsl
xor
mov
cmp
iret
cmpsb
sarl
rcr
loop
mov
fisttps
rcll
add
mov
sbb
mov
add
jl
adc
lods
mov
jns
outsb
or
int
fwait
sub
mov
leave
shrb
cs
int
add
cmp
ljmpw
sbb
into
and
jo
inc
xor
fisubs
ljmp
jg
mov
xchg
mov
jp
popa
hlt
out
push
or
rclb
add
pop
movsl
ret
push
dec
jno
adc
and
xchg
jns
adc
loop
outsb
popf
inc
push
and
in
in
inc
xchg
sub
mov
pop
sti
les
cmp
mov
add
pop
pop
xor
inc
enter
cld
cld
sbb
push
iret
mov
out
imul
loop
pop
sbb
sbb
negb
lahf
sub
jae
push
mov
and
xchg
out
rclb
lcall
mov
dec
movsb
aad
push
shrb
das
mov
popf
sub
fisubs
repz
xor
push
shl
pop
push
dec
cli
push
test
mov
inc
fs
pop
mov
int
dec
mov
lock
fldt
jmp
ret
push
mov
lock
jno
xor
cmp
xchg
dec
sbb
xor
add
out
push
push
sahf
or
sub
lods
nop
pop
fdivr
xchg
ret
aam
xlat
adc
push
push
or
out
cmp
push
jne
scas
pusha
lcall
mov
popf
ret
imul
addr16
lea
test
fnstcw
and
mov
shlb
add
xchg
scas
and
xchg
es
icebp
mov
mov
mov
scas
push
jge
fnstcw
andl
jmp
mov
sub
fnstenv
outsb
mov
push
in
fs
mov
mov
lock
ljmp
and
jo
pop
push
test
sbb
rclb
pop
sub
sbb
lds
dec
lahf
into
push
sub
or
insl
pop
ds
sbb
xchg
cmp
add
dec
sar
add
add
or
sarl
cmp
fldcw
add
ss
fidivs
rcrl
ret
bound
mov
scas
int3
or
and
sbb
subb
clc
mov
movsb
cwtl
dec
iret
and
xchg
sbb
add
sbbb
scas
sbb
ret
int3
int
in
cmpl
inc
outsb
push
cmpsb
push
dec
push
test
repnz
push
cld
adc
xor
test
mov
mov
jmp
mov
xchg
pop
in
insb
mov
in
or
pop
fs
ja
mov
faddl
or
ret
addr16
inc
lret
fnsave
je
test
data16
jo
push
push
mov
out
fcmovnu
cmpb
adc
and
sub
lods
push
jg
mov
ffree
sbbb
test
push
mov
dec
adc
dec
movsl
cltd
or
add
dec
in
inc
mov
stos
test
divb
loopne
lock
push
jb
xlat
and
cmp
insb
sbb
or
test
daa
mov
stc
into
pop
stos
sub
mov
and
mov
js
shlb
aad
faddp
and
ret
arpl
mov
and
push
les
pop
test
addl
inc
mov
xchg
cmpsl
sbb
xchg
pushf
sbb
gs
test
jmp
movsb
inc
pop
jl
mov
int
cltd
repz
xor
adc
scas
bound
jl
aad
mov
or
ljmp
cmp
mov
pop
insl
and
jecxz
pop
cmc
loope
call
lds
inc
cmp
ss
jno
mov
test
push
filds
ja
fcmovnb
hlt
sbb
mov
sub
xchg
ds
sub
test
push
mov
dec
inc
sbb
flds
dec
dec
js
cmp
mov
jno
mov
lods
xor
xchg
pop
insl
daa
add
ret
jne
mov
sbb
orb
out
fcmovb
cmp
out
mov
sub
cld
loopne
test
ret
xchg
into
and
and
outsb
mov
xchg
cmp
xchg
mov
cld
cmp
jns
push
stos
mov
dec
mov
sub
inc
xchg
push
addr16
jecxz
and
andl
rclb
sbb
loopne
test
vcmpltpd
pop
in
jg
repnz
mov
mov
xchg
fs
push
jbe
imull
fdivrl
mov
adc
fimuls
mov
hlt
add
jg
into
movb
inc
outsl
cmp
scas
pusha
dec
inc
dec
mov
adc
sahf
xchg
cli
jnp
andl
add
xchg
jbe
stos
and
std
add
aam
xchg
aam
out
shrl
fs
outsb
scas
loopne
xorb
aam
repz
stc
push
arpl
addr16
pushf
or
iret
out
dec
jnp
jle
packuswb
movaps
add
cmp
xchg
je
add
cmc
sarb
mov
lods
push
jle
mov
and
dec
out
pop
mov
repz
lret
jo
aaa
mov
jp
push
imul
arpl
sub
sbb
xchg
inc
lret
stos
imul
es
mov
jae
inc
mov
out
aaa
cmc
and
sub
sti
es
jnp
les
jo
in
les
mov
clc
mov
sub
subl
pop
outsb
sbb
pop
pushf
movsb
pop
test
xchg
mov
out
daa
xor
jnp
aas
mov
lahf
test
inc
jns
outsb
sti
and
mov
stos
add
jae
cli
pop
pop
inc
cmp
mov
xchg
add
cmp
hlt
ja
sbb
les
xchg
mov
lods
scas
xor
hlt
fs
jnp
lahf
mov
jle
cmpsb
mov
test
xor
dec
pop
arpl
rorl
test
pop
mov
adc
cld
jns
jl
lahf
inc
or
pop
mov
jo
leave
enter
sub
popa
push
je
fstps
gs
std
leave
pusha
cmpsb
pop
jnp
outsl
xchg
cmp
sub
inc
and
rcrb
sbb
push
test
fldcw
pop
arpl
jns
or
adc
dec
mov
inc
mov
pop
pop
mov
xchg
push
pop
fwait
push
mov
push
stos
jp
cmp
xchg
mov
jbe
fadd
mov
lock
jno
orb
gs
cmp
das
ja
sbb
jno
insl
push
sbb
xor
or
sub
sbb
enter
into
push
jecxz
xchg
sahf
adc
sahf
stos
add
sbbb
lods
les
aad
xor
lock
or
imul
xchg
pop
mov
add
add
pushf
insb
cmp
sub
and
in
and
and
pushf
or
mov
decb
cld
mov
lods
fnstsw
mov
fidivs
jg
dec
getsec
xchg
loopne
push
xor
pop
and
test
mov
jp
add
and
int3
loope
clc
std
inc
insl
mov
xor
outsb
cmp
jl
loope
stos
or
mov
popa
leave
in
inc
imul
sub
xor
repz
sbb
xchg
pop
iret
push
fstp
mov
mov
fwait
rcl
divb
adc
rclb
ret
mov
dec
push
push
fmuls
cmp
das
jo
iret
sbb
aaa
add
lret
push
bound
sub
dec
xor
iret
loop
int3
orb
inc
idivl
sub
cld
out
movsl
mov
fiaddl
mov
push
or
pop
pop
push
outsb
inc
sbb
mov
add
and
sub
pop
sub
pushf
xchg
xor
xchg
push
mov
cs
push
xor
pop
dec
or
jecxz
in
mov
neg
sub
clc
fsubrs
jns
adc
adc
imul
jp
jmp
mov
push
es
je
lods
fistl
ret
int
loopne
sub
pop
xchg
stos
jg
stc
sub
dec
sbb
jbe
sbb
dec
inc
icebp
in
pop
sub
jle
jb
in
sub
mov
inc
push
imul
mov
rorb
mov
mov
gs
or
out
cs
mov
jne
fcmovnbe
mov
cmpsb
push
cmp
sub
fcmove
xchg
pusha
jle
jnp
or
dec
xor
icebp
in
and
sub
ja
mov
or
dec
lea
mov
ret
imul
mov
sub
cmp
mov
ret
xchg
jne
sbb
jne
push
mov
cmp
adc
dec
lret
mov
xchg
mov
orb
add
data16
ds
ds
outsl
dec
pop
dec
movsl
mov
sub
jno
xchg
cmp
je
xchg
lock
adc
mov
add
int
adc
orl
lea
or
or
pop
scas
xchg
inc
push
ficoms
xor
sbb
int3
fwait
jne
testb
jo
sub
push
mov
jnp
pop
or
fsts
cmp
shld
xchg
insl
mov
ficompl
das
lret
jecxz
nop
push
pop
pop
and
loop
out
push
fistps
insl
adcl
aaa
divb
or
cltd
dec
pop
pop
cmp
sbb
xchg
stc
push
dec
cmp
sti
sti
in
daa
pushf
imul
xor
mov
movsb
cmpb
jne
jae
sahf
cmpsl
mov
test
out
add
sbb
cld
pop
inc
stos
jns
xor
sub
pop
cmpsb
xor
arpl
dec
mov
dec
inc
ret
or
push
push
scas
loopne
loop
xor
push
pop
cwtl
pusha
xor
dec
push
loope
xor
push
add
pop
stos
cld
adc
cltd
mov
xor
popf
repz
insb
gs
mov
scas
dec
xrstor
mov
push
icebp
jg
push
movntq
add
push
xchg
lahf
lahf
dec
ficomps
jl
jg
fcoms
scas
les
xor
flds
cli
lcall
iret
inc
cmpb
pop
ret
jp
daa
inc
bound
scas
nop
jo
cmp
xchg
jecxz
int
nop
add
push
shll
mov
out
or
add
xor
mov
mov
sub
nop
iret
mov
cmc
cmp
dec
pop
arpl
popa
mov
xor
pop
xor
ds
mov
mov
out
fs
out
mov
outsb
int
lcall
sub
sarl
in
fs
out
xchg
dec
add
mov
sub
mov
sbb
cmp
jp
add
mov
adc
fimuls
push
add
fistps
jle
jbe
mov
pop
mov
and
test
add
dec
jae
mov
outsb
das
dec
pop
adc
nop
arpl
mov
push
sub
mov
sub
adc
fwait
lcall
es
stc
mov
fwait
scas
pop
add
jecxz
push
je
jae
push
test
insb
rclb
popf
dec
rcl
shll
rclb
dec
loopne
clc
pop
imul
xor
data16
or
adc
cmp
lods
sbb
imul
pusha
and
faddl
enter
shlb
pop
cmp
gs
das
data16
stos
imul
cmpb
pop
test
jb
shll
mov
leave
xchg
movsb
adc
loopne
xchg
lods
inc
xor
and
ljmp
inc
aam
jo
push
mov
cmpsb
lcall
leave
mov
sbb
mov
dec
xor
push
repnz
cmc
orb
sarl
stos
lods
loope
push
jo
pop
mov
mov
pop
fmuls
test
in
data16
cmp
jns
lret
cmpsl
jne
jo
push
pop
sbb
gs
xlat
ljmp
xor
mov
inc
sbb
push
push
adc
ficoml
cmpsb
or
dec
xchg
stc
rcrl
or
lahf
add
and
scas
sub
jno
jne
mov
pop
xchg
jl
stc
pop
iret
icebp
and
test
adc
lahf
enter
mulb
cwtl
repz
ja
mov
bound
dec
dec
fdiv
mov
add
fistpl
mov
cmp
inc
clc
outsb
icebp
fists
push
lret
sti
adc
inc
mov
mov
mov
mov
jne
addr16
mov
push
add
call
je
syscall
nop
or
dec
loop
in
das
push
cli
mov
pop
dec
mov
push
mov
lock
arpl
sahf
xchg
xchg
cmp
movsl
xor
hlt
cltd
cmpb
adc
enter
sub
in
jle
gs
hlt
mov
subl
mov
xchg
jae
sbb
pop
int3
pop
sbb
fs
pop
in
add
adc
shlb
cmp
outsb
test
mov
mov
inc
lret
mov
dec
cmp
push
mov
or
mov
xor
je
repnz
subb
iret
or
sbb
mov
out
xchg
push
orb
stos
and
stos
mov
add
sub
popf
sbb
push
xor
lahf
pop
mov
clc
mov
ja
mov
js
push
dec
mov
push
mov
push
mov
movb
push
inc
lea
out
je
push
mov
fstl
imul
popf
dec
cltd
sub
movsb
mov
jbe
and
arpl
fs
jge
and
dec
pop
cmpsb
add
in
and
shll
sub
stos
rcl
cmpsl
inc
jmp
or
dec
out
xchg
ss
into
mov
pusha
imul
or
in
cmpsl
arpl
fildl
jp
jo
xchg
cld
jbe
out
loop
lods
jp
inc
inc
jns
call
std
pushf
or
test
add
jne
cli
pop
aaa
addr16
cli
xlat
xor
outsl
cmp
mov
xor
mov
popf
movsb
popf
pop
xchg
inc
pop
sub
mov
fs
adc
xor
cmp
xor
push
cwtl
mov
push
xchg
popf
sbb
aad
roll
and
in
das
out
cmpsl
mov
xlat
push
dec
or
js
mov
lods
sbb
and
lods
push
mov
cld
mov
ja
jns
in
mov
cltd
adc
bnd
mov
pop
daa
mov
loope
outsb
or
lcall
lcall
mov
loopne
xchg
jns
cmpsl
mov
mov
xchg
aad
movb
js
out
xor
mov
jl
xchg
lds
inc
lcall
sub
mov
or
dec
mov
mov
jno
lods
dec
push
out
rcl
ret
xchg
xchg
in
xor
push
negb
xchg
mov
in
call
enter
mov
or
jge
mov
gs
inc
pop
int3
mov
mov
clc
pop
push
and
mov
cmp
mov
mov
aam
clc
xchg
mov
out
xchg
sbb
xchg
out
xor
cld
jle
mov
adc
jae
push
mov
sbb
cmp
mov
sahf
sbb
xchg
int3
aad
leave
or
xor
aaa
push
push
ret
mov
mov
bound
pushf
jmp
hlt
xor
lds
adc
pop
cwtl
cmp
rclb
lock
mov
insb
mov
xlat
sbb
dec
jne
sbb
sti
or
mov
icebp
and
pop
xchg
roll
shlb
cwtl
or
ljmp
pop
fwait
xor
imul
sarl
movsb
jl
out
pop
dec
ds
dec
jmp
es
fdivrl
shrb
dec
test
dec
jmp
sbb
adc
mov
sub
andb
xchg
imul
mov
inc
cli
push
jb
in
pop
adc
cmpsl
gs
pop
xchg
inc
or
insb
jecxz
xchg
or
inc
adc
inc
lods
es
jns
iret
out
jmp
sub
adc
movsl
dec
mov
xchg
jmp
jne
jns
adc
out
push
loope
push
mov
shll
pushf
outsl
adc
clc
rorl
sub
out
push
cs
mov
lret
pop
daa
push
mov
push
push
movsb
push
mov
cltd
and
and
add
pop
pop
inc
adc
incb
cmc
jbe
dec
inc
cmc
or
sbb
leave
xchg
addl
lea
and
pusha
imul
inc
arpl
inc
ret
insl
push
and
cmp
mov
or
mov
add
shlb
sub
stos
scas
jnp
cmp
sbb
fs
sahf
mov
mov
cmc
stc
jno
push
mov
cmp
neg
cmp
add
adc
mov
xchg
mov
stos
mull
and
loope
add
lcall
pop
xchg
xchg
outsl
jae
data16
scas
adc
imul
jge
movsl
xchg
mulb
movsl
xchg
je
int3
imul
mov
sub
xchg
xchg
outsl
mov
outsl
lds
or
or
aad
lcall
jno
xchg
jle
or
stos
jbe
pop
or
outsl
mov
addb
jno
push
icebp
rcrl
call
xor
adc
push
jmp
jae
jecxz
mov
xchg
and
scas
inc
repz
andl
loop
shl
scas
arpl
mov
sub
sti
fstpt
inc
mov
loop
bound
mov
enter
mov
mov
pop
pop
add
pop
fwait
and
aam
xlat
dec
mov
icebp
mov
flds
mov
push
stos
andnps
xchg
pushf
sub
out
dec
cld
fisttpll
inc
gs
mov
mov
xchg
iret
testl
int
and
movsl
sbb
jl
iret
gs
push
sub
mov
imul
cmpsl
out
ret
pop
and
push
daa
or
jns
test
mov
jecxz
xchg
push
inc
mov
shrl
adc
shll
add
xor
push
push
in
faddl
aam
scas
cmpsl
push
sarb
subb
scas
inc
div
aaa
adc
rorl
insb
cmpsl
xchg
jecxz
xchg
cmpsb
push
mov
sub
xchg
sbb
out
outsl
xor
sub
add
mov
rcrb
lret
push
rorb
cmp
sub
stc
pop
mov
outsl
and
repz
lahf
inc
mov
arpl
mov
ret
mov
lea
xchg
mov
gs
cmp
popa
dec
stos
jno
sahf
fnstsw
push
aas
rdrand
xchg
test
sub
out
je
dec
push
xchg
push
push
icebp
mov
out
hlt
cmpl
das
out
js
dec
cmpsl
adc
and
mov
out
ret
ja
outsl
push
pop
sub
pop
push
mov
out
jnp
pop
insl
mov
rorb
aad
or
stos
aad
lea
push
popf
push
inc
lea
lds
dec
sbb
sub
les
stos
mov
mov
inc
pop
insl
mov
gs
mov
cltd
aad
lea
subb
jg
daa
mov
xchg
jno
cld
imul
jbe
popf
mov
ss
vmovups
test
xor
das
in
shl
pop
repnz
out
add
addb
cs
insb
xchg
xchg
or
popa
je
sub
jae
push
arpl
xchg
jne
mov
mov
pusha
xchg
pusha
out
icebp
dec
pop
cbtw
lea
push
dec
xchg
push
out
js
push
add
add
icebp
nop
mov
aas
mov
loope
sarl
cmpsl
pop
fistpll
pop
clc
mov
or
push
arpl
ficoms
pop
mov
repz
lods
inc
adc
loope
xchg
jecxz
scas
pop
mov
mov
push
addr16
jb
adc
popf
xchg
xor
aas
and
pushf
cmp
cmc
out
add
ffree
adc
xor
jmp
mov
lret
jae
mov
rcr
mov
cmp
xchg
cmp
add
adc
jbe
insb
or
lret
dec
xlat
lds
sbb
arpl
adcb
repz
mov
jns
cltd
inc
leave
movsb
leave
mov
aas
imul
mov
dec
dec
cltd
cli
fnstenv
mov
scas
and
iret
sbb
jle
inc
pop
arpl
dec
popa
mov
or
sub
sub
rcll
shlb
adc
cmp
xchg
pop
pop
jg
xlat
mov
insl
dec
adc
dec
sub
xchg
dec
adc
push
adc
insl
aaa
xchg
push
xlat
jns
cld
pop
xchg
repz
ficoms
and
pushf
cmp
in
out
add
dec
adc
xchg
pusha
ret
js
mov
sbb
xchg
arpl
aam
pushf
jp
mov
xchg
sti
mov
lret
add
jno
xor
push
sbb
pop
sub
stos
mov
add
jmp
repz
cmp
test
xor
push
dec
mov
sarl
or
ljmp
mov
dec
fwait
and
sbbl
push
or
subl
ror
addl
jg
xlat
repnz
nop
inc
add
notl
mov
lods
jbe
fistpl
js
or
xlat
in
and
adc
shl
and
push
jecxz
add
out
and
mov
fwait
int3
jl
cmp
inc
fidivrl
mov
xchg
jecxz
lods
aad
sbb
dec
xchg
push
cmp
ret
sub
xchg
jae
push
push
add
mov
pop
leave
lret
cmp
imul
repnz
nop
pop
add
call
mov
mov
int
adc
jnp
or
fistpl
sub
xor
adc
popa
pusha
mov
popa
loop
outsl
shll
jbe
roll
xchg
and
jno
xor
adc
and
pushf
xlat
cmp
popf
out
add
dec
add
arpl
orl
test
push
clc
add
jae
mov
sub
jns
mov
imulb
add
adc
jbe
insb
xlat
gs
dec
sub
xlat
lods
sub
cmp
jnp
sub
sti
cmp
cmp
cmp
imul
lret
icebp
mov
loope
mov
add
fmull
inc
daa
mov
mov
jmp
xlat
ss
dec
xor
lahf
cs
loop
dec
popf
sbb
call
aad
lcall
mov
in
pushw
ljmp
sbb
or
xchg
add
pushf
mov
sbb
shrb
aam
rcrb
adc
and
in
call
xlat
lcall
mov
out
pop
mov
lds
or
clc
add
jge
mov
cmp
test
adc
negl
int3
jmp
shrb
xchg
fwait
insb
and
lods
mov
mov
icebp
scas
scas
imul
xorl
or
cmpsl
xchg
cmp
js
or
push
iret
xchg
mov
jnp
dec
inc
mov
test
xchg
jg
and
ss
xor
pop
in
cmp
sahf
and
pop
std
sub
mov
xchg
add
dec
or
test
test
js
add
nop
or
out
adc
popf
inc
pop
dec
xchg
out
sub
xor
pushf
lcall
ljmp
iret
scas
dec
sti
in
mov
xorl
mov
dec
cmp
jge
aas
xchg
push
movsb
arpl
lcall
pop
fidivrl
repnz
mov
mov
inc
sub
loopne
push
and
or
fs
movsb
xchg
pop
push
xor
sti
dec
inc
mov
daa
dec
lock
pop
fstpl
hlt
jno
mov
mov
push
and
test
fistpl
push
dec
cmp
ss
cwtl
mov
xorl
aam
mov
cmp
jg
aad
sub
mov
pop
outsb
jg
ljmp
test
je
sub
xchg
xchg
nop
clc
sbb
loop
nop
sub
rorb
xor
ss
stos
mov
xor
clc
test
ret
mov
mov
jle
push
xchg
xchg
repz
adc
pusha
mov
clc
je
fs
lock
lcall
mov
mov
fs
add
outsb
xchg
adc
mov
pop
add
repz
mov
xchg
fstpt
iret
sarb
mov
dec
sarb
aad
dec
push
push
jecxz
xchg
mov
xor
lret
pop
jge
sub
arpl
jg
and
sub
pop
call
in
cmc
int
dec
imul
divb
inc
fisttpl
pop
ja
leave
push
scas
andl
jp
aas
data16
popa
or
fdivr
xchg
xor
mov
lcall
push
fld
pushl
mov
add
dec
out
xchg
pop
sbb
add
and
cmp
out
push
and
in
inc
cmp
pop
fldt
enter
and
sbb
imul
xor
push
inc
mov
cmp
mov
loopne
fimull
lods
hlt
pusha
mov
add
out
xor
fstp
add
xchg
pop
ds
cmp
xchg
in
stos
push
icebp
push
cmp
and
ljmp
xor
mov
xor
xchg
xchg
mov
jo
aad
cmp
in
imul
xchg
sahf
xor
repz
mov
cwtl
sub
fucompp
adcb
std
cmc
lret
popa
lret
or
leave
pop
xchg
adc
repnz
sbb
add
inc
les
mov
test
mov
bound
inc
jo
add
outsl
nop
das
mov
mov
inc
and
push
movsb
lcall
aaa
adc
out
std
or
aaa
jae
cmp
lds
cmp
lret
dec
out
add
and
pop
mov
cli
and
push
push
cmc
sub
sub
cmpsl
mov
lods
test
push
push
and
cmpsl
cmp
cmc
popl
sbb
mov
cld
mov
mov
outsb
pop
mov
jno
movsl
aas
fisttps
xchg
int
and
add
std
push
test
test
gs
xor
sbb
iret
out
daa
push
clc
clc
mov
jmp
enter
lcall
jp
pop
push
cltd
xor
sub
xor
insl
test
push
rolb
jmp
imul
das
cmp
dec
lret
fistps
daa
xor
sub
cmp
cmp
flds
mov
and
cmp
or
xchg
and
xor
leave
insb
or
cwtl
sbb
popf
cwtl
xchg
scas
push
in
negb
mov
xor
push
pop
mov
pop
push
mov
cmp
pop
imul
dec
loope
ss
push
or
in
jne
push
cmp
mov
movsl
loope
pop
push
in
cmp
ret
inc
arpl
pop
sti
shlb
cwtl
pop
mov
repnz
repz
pop
pop
int
mov
cmp
jmp
pusha
loop
dec
lods
shll
xor
fmull
mov
nop
out
cld
pushl
jmp
out
stc
push
xchg
ljmp
scas
jne
inc
in
xor
xor
jle
mov
pop
repz
loop
adc
mov
mov
int
stos
jecxz
ss
dec
xchg
outsl
sub
test
pop
call
insb
push
loope
jb
push
in
add
insb
pop
push
js
fdivrl
das
push
jl
mov
outsb
std
inc
aaa
test
fisubrs
daa
mov
mov
out
mov
je
ds
adc
data16
cmpsl
daa
lds
ds
pop
jge
push
xor
std
movsl
adc
iret
cmpb
push
adc
adc
sub
pop
daa
or
lods
jg
rcll
fstp
xchg
mov
popa
in
mov
outsb
inc
aaa
adc
jbe
insb
sub
loopne
jo
cmp
cmpsl
push
sub
jne
leave
test
mov
int
dec
push
jge
add
inc
pop
mov
adc
cmp
daa
cs
sti
sbb
call
add
inc
cmp
scas
add
sbb
or
pushf
dec
leave
mov
aas
fnsave
inc
movsl
sbb
cmpsl
aas
aas
mov
dec
push
or
adc
sub
mov
sbb
dec
aad
bound
popf
and
sub
mov
and
mov
cmpsl
xor
jno
std
mov
lds
into
rcrl
xor
jl
fisttpll
xor
gs
ss
test
cmpsl
out
imul
dec
mov
lahf
cmp
icebp
mov
add
in
inc
adc
bound
subb
leave
jg
sbb
mov
xchg
dec
mov
pop
dec
xor
arpl
dec
pop
add
adc
pushf
jnp
aad
pop
stos
imul
in
and
add
adc
sbb
mov
out
ret
inc
xor
inc
cmpl
test
jmp
xchg
movsb
or
in
test
daa
adc
push
stos
lods
fidivs
mov
enter
push
mov
in
lret
dec
lea
pop
sub
and
es
mov
and
stc
popf
pop
pop
pop
outsb
popa
gs
jbe
leave
mov
imul
or
jmp
pop
bound
out
fbld
int
stos
ret
lret
push
cmp
sbbl
pop
das
adc
loop
mov
push
push
mov
ja
test
push
mov
movsl
push
inc
outsb
xchg
xor
testl
insl
ds
and
pop
xchg
shll
xchg
pop
push
mov
pop
nop
aaa
and
std
pop
aaa
mov
out
sbb
push
fildll
sarl
sti
fistl
mov
jmp
mov
aas
fstpt
cmp
push
subl
push
inc
aaa
pop
outsl
aaa
outsl
aas
sbb
movsl
fwait
xchg
jge
adc
adc
insl
cmp
fisubrl
ficoml
cmp
movsb
jmp
xor
out
lods
addr16
sbb
faddl
adc
sbb
ja
test
std
ret
adc
popa
popa
push
fistps
imull
pop
sbb
mov
aam
jne
roll
xchg
pop
pushf
xchg
sub
xchg
ret
jg
cwtl
xchg
mov
inc
and
ret
lret
outsl
xlat
mov
dec
loopne
jbe
add
inc
sub
sbb
sbb
int
pop
pop
imul
xchg
sbb
inc
fsubl
adc
imul
popa
inc
mov
call
xchg
sbb
jnp
in
loope
pop
and
mov
or
mov
push
fsubl
mov
inc
pusha
jnp
lret
bswap
fmuls
inc
and
mov
loope
pushf
mov
je
pushf
inc
popf
aas
out
repnz
mov
mov
sbb
adc
pop
fcomps
scas
or
aaa
jl
or
lcall
mov
in
pop
dec
loope
ret
push
aaa
fdivl
out
mov
test
outsl
repz
pop
leave
inc
xor
add
lods
imul
jae
pop
leavew
xchg
lret
mov
xchg
xchg
sub
call
rorb
pop
cmc
enter
xor
dec
push
test
xchg
int3
cmp
jge
push
gs
cwtl
gs
mov
scas
mov
xor
rclb
addb
in
test
jns
sahf
or
stos
es
inc
mov
mov
sub
mov
lcall
cltd
test
lea
cld
xchg
repz
dec
mov
fdivrp
loop
insl
cmp
push
jmp
fwait
div
int
cmpb
lods
loope
sub
addb
mov
add
gs
ds
ds
or
mov
hlt
cmc
sub
ja
test
rolb
loopne
clc
insb
lret
cmp
push
sarl
sub
pop
mov
aad
aam
mov
sarb
nop
or
scas
or
loopne
jp
js
outsb
mov
stos
test
icebp
lret
rorl
cwtl
mov
add
jle
cmp
cld
lock
ds
mov
fstpt
int
jl
scas
push
data16
repz
xchg
leave
xchg
in
sbb
add
out
xchg
subb
scas
ljmp
aam
jb
loope
mov
pop
dec
xor
imul
stos
mov
inc
cs
push
ss
popf
lods
cmp
xchg
js
cmp
mov
mov
stos
insl
cmp
mov
repnz
lds
into
ficoml
pushf
pop
jge
mov
jl
push
shlb
and
push
xor
lcall
mov
jb
sahf
or
lock
lcall
dec
jae
push
mul
in
into
divb
sbb
call
pop
gs
arpl
lods
fdivrp
jmp
jle
aad
mov
fs
xor
adc
xor
mov
cs
xor
test
jp
loope
cmp
push
xchg
jns
repz
adc
sub
push
cmp
xor
xchg
mov
imul
lods
loope
cmp
shrl
dec
rorb
rcr
xor
dec
call
mov
movsb
mov
push
mov
jns
adc
imul
gs
pop
into
shlb
mov
or
sbb
or
imul
cmp
pop
in
in
lock
sbb
sarl
daa
mov
sarb
enter
cmpl
sbb
cld
inc
enter
fnstsw
insb
fwait
xor
push
scas
stos
add
out
pop
insb
jne
sub
pop
cmc
sbb
mov
mov
lods
ss
int3
test
sarb
cli
inc
jmp
mov
mov
push
mov
popa
xchg
sub
push
es
idivb
js
sbb
pusha
dec
cwtl
mov
insb
push
mov
adc
insb
sbb
mov
jecxz
sti
stos
sbb
pop
adc
ljmp
add
dec
insb
jae
mov
out
xchg
ss
push
cld
push
and
ficompl
in
lret
sbb
gs
add
sub
pop
in
dec
mov
xlat
pop
pusha
arpl
fwait
or
xchg
clc
rorb
mov
adc
insb
pusha
mov
rclb
sahf
fcomp
add
test
sub
push
arpl
cli
cmp
and
fbld
xor
jp
ds
push
add
jp
pop
std
sti
push
cli
or
mov
stos
cmp
popf
loopne,pt
std
out
lds
rorl
test
jo
sahf
leave
push
mov
mov
push
out
lcall
in
jns
stos
lcall
int
movntps
ljmp
and
rcrb
jno
sub
pop
inc
mov
into
mov
inc
mov
aam
push
mov
incb
push
popa
mov
negl
add
scas
sub
fdiv
mov
mov
mov
fidivrs
in
or
addl
and
mov
sbb
in
mov
mov
gs
push
inc
mov
inc
and
xchg
ss
mov
sbb
das
adcl
faddl
popa
sbb
movsb
inc
adc
dec
insb
lock
dec
fmull
lret
repnz
int
cmp
xchg
jb
xchg
pop
ret
scas
or
xlat
std
cld
rol
ror
mov
fs
popf
and
stos
cmp
outsb
jle
arpl
add
scas
pop
xchg
mov
push
lret
mulb
ss
inc
jp
add
cmp
loop
or
jae
lods
xchg
cltd
mov
out
shl
and
push
sub
dec
les
cmp
stos
int3
movsb
inc
cmpsl
push
fisubl
adc
add
mov
or
fidivrl
in
lret
cld
jle
sbb
pop
int3
stos
add
cmp
out
jg
clc
push
lea
xorb
in
hlt
mov
xchg
add
xchg
push
enter
inc
and
add
mov
pop
test
inc
or
push
cltd
ljmp
sub
and
lret
insb
pusha
jns
repnz
mov
sbb
xchg
repnz
fiadds
add
scas
cmp
jne
mov
mov
and
cmpsl
mov
xlat
scas
jg
jnp
es
xor
sub
dec
mov
adc
icebp
enter
xor
jnp
ficomps
das
push
out
out
inc
add
cld
inc
cwtl
add
scas
pop
data16
mov
jo
orl
addl
jle
das
mov
test
mov
dec
or
mov
mov
sub
les
ja
sub
int
push
nop
imul
imul
lret
in
lods
jbe
pop
out
pusha
and
dec
and
nop
mov
jne
cmpsb
xchg
sahf
adc
sub
lds
sbb
sbb
sub
push
pop
mov
push
cld
in
and
fldcw
shll
sub
inc
xchg
push
push
mov
fadds
std
sub
aad
fcmovbe
or
aad
adc
cld
inc
xchg
jmp
popf
fdivr
pop
add
fsubrl
mov
imul
sti
stos
inc
mov
in
test
out
cmp
bound
fwait
pop
andb
stos
movsl
into
and
inc
movsl
pusha
mov
out
arpl
mov
stc
add
jmp
sub
sarb
pop
dec
loop
mov
sti
pop
push
andb
jo
faddl
dec
in
push
lds
imull
pop
or
fbstp
jge
and
dec
sahf
sub
mov
push
les
jp
cmp
lock
sbb
and
dec
jg
and
adc
pusha
add
scas
enter
bndstx
add
jmp
mov
mov
and
jl
stc
out
int
fpatan
cli
mov
insb
pop
mov
stos
imul
pusha
shll
jne
cmp
xchg
into
test
rcr
pop
push
jmp
cmp
dec
and
jl
aam
sub
in
ljmp
ss
push
fsubrl
dec
fdivrl
mov
fucomip
and
and
xor
in
stos
jae
cmp
cmp
out
lods
arpl
or
cmp
xchg
popa
or
or
divl
sbb
mov
sets
int
mov
push
clc
lcall
test
mov
cli
aad
sbb
cltd
das
insb
in
insb
mov
push
sbb
add
push
adcb
mov
test
bound
push
cli
push
arpl
addb
jl
out
adc
lea
repnz
or
ja
repnz
into
lcall
jb
mov
lods
call
jae
xlat
add
dec
fwait
lock
fidivl
out
int
int
sub
cmp
adc
jg
imul
aas
inc
cmp
loopne
movsb
cld
aas
lock
addl
out
ss
mov
out
sahf
pop
not
out
push
lods
add
enter
jmp
loop
adc
or
xor
mov
dec
cmpsb
leave
aad
or
mov
test
lods
push
jns
jp
dec
push
jg
or
out
sbb
ljmp
clc
jp
les
dec
addl
sbb
or
or
push
lock
mov
ss
jmp
cwtl
push
icebp
sub
push
jo
cld
test
mov
fisubrl
or
xor
jns
mov
xchg
test
ret
lea
mov
insl
lds
in
jbe
mov
in
push
sbb
cwtd
out
mov
loopne
xorb
jle
jnp
bound
das
xor
test
jle
push
or
adc
sbb
aas
aaa
jbe
inc
add
dec
out
loop
push
push
leave
dec
adc
je
addr16
fdivrp
xor
lock
push
or
aas
xchg
rcll
push
pop
xchg
push
fisttpll
mov
and
add
add
fstpl
xchg
jbe
lret
pop
shlb
inc
ret
sbb
dec
jae
push
dec
andb
xor
jmp
nop
dec
mov
dec
popf
mov
das
std
mov
mov
jecxz
mov
and
out
rcrb
pop
push
outsb
mov
icebp
cmp
das
xchg
xchg
in
mov
pop
in
jle
xor
or
push
sbb
ret
mov
xchg
lea
xchg
lahf
and
lods
sbb
addr16
dec
int
insl
stos
negb
pop
test
pop
insb
enter
popa
lea
ss
or
xchg
mov
insl
add
les
dec
fsts
sub
cmpl
add
fsts
es
jmp
mov
mov
and
call
lds
outsb
int3
adc
out
dec
pop
cmp
xchg
xor
and
push
lea
xchg
ja
dec
xor
es
subl
jnp
repz
das
fnsave
fidivrs
mov
out
and
or
dec
lcall
sbb
rcrl
pushf
push
les
mov
cmpsl
les
mov
iret
pop
xchg
mov
sbb
pop
clc
pusha
sub
lret
inc
aam
sub
std
jg
add
mov
adc
mov
mov
shrl
mov
lahf
dec
loop
push
xchg
push
xor
xor
hlt
cmp
repnz
dec
sub
pop
adc
sub
les
ds
pushf
adc
xchg
test
sub
jbe
jg
js
fdivrs
stc
pop
ds
inc
subb
shr
cmpsb
outsb
inc
pop
sbb
inc
testb
xchg
sub
cmp
sbbb
jbe
cmpsb
inc
fwait
mov
jb
fcmovb
push
shll
bound
pushl
cli
xor
ss
leave
mov
or
sbb
outsl
cmc
push
les
mov
int
jno
add
sub
inc
cltd
push
add
pop
mov
pop
je
mov
pcmpgtb
cld
in
xchg
int3
pop
xchg
fdivl
enter
mov
cwtl
aad
ss
sbb
arpl
cltd
sub
mov
bswap
push
ljmp
or
test
jmp
stc
cld
adc
adc
cwtl
or
popa
iret
jbe
nop
sbb
pop
add
jne
shl
mov
fcomi
testl
mov
mov
add
or
push
outsl
sbb
push
sub
hlt
mov
fnstsw
push
jnp
and
or
out
fsubrl
cwtl
repnz
aam
cmp
ljmp
stc
test
dec
je
sahf
jmp
sub
push
mov
cmp
fs
jae
mov
scas
push
es
fisttps
mov
mov
mov
xchg
sbb
jecxz
mov
in
aas
jg
pop
repnz
jns
cmp
xor
push
ret
iret
jecxz
push
inc
cmc
mov
loopne
ds
sub
cld
push
dec
xchg
xchg
jle
das
adc
and
jo
outsl
test
xchg
or
jle
lds
lcall
cmp
inc
cmc
mov
in
adcb
mov
mov
stos
loope
out
mov
mov
jnp
adc
pop
or
mov
nop
fldcw
into
fdivs
and
test
dec
popa
and
and
sub
jnp
inc
add
mov
sahf
int
mov
pop
dec
in
fistl
sbb
test
scas
mov
mov
icebp
xchg
ret
mov
popf
xor
in
xor
aas
hlt
fistps
mov
popa
dec
in
inc
jl
mov
mov
lret
push
and
pop
mov
sbb
mov
mov
mov
jne
repnz
pop
int
jns
in
or
jmp
push
outsb
jns
movl
add
dec
repnz
popf
call
call
push
xor
fwait
rclb
cwtl
push
fcoms
and
je
jne
cmp
fistps
pop
mov
cmp
mov
or
outsl
int
flds
ret
and
push
mov
sbbl
shll
filds
xor
scas
xchg
pushf
lea
sub
mul
and
cmp
push
cld
xchg
inc
xor
mov
xor
mov
dec
int3
pop
push
lcall
rcll
insl
push
xlat
cltd
icebp
mov
pop
gs
jnp
inc
mov
adc
fwait
js
push
adc
pop
das
inc
dec
mov
test
sub
mov
push
stos
mov
bound
fcompl
dec
aaa
hlt
and
iret
sub
jge
jge
fnclex
mov
pop
loope
lahf
int
push
cmp
pop
xchg
adc
add
pop
dec
cmpsb
movsb
dec
mov
dec
rcrb
cmp
pop
add
fidivs
sub
bound
insb
inc
xor
aaa
push
ljmp
pusha
pop
cmp
dec
adc
inc
mov
adc
into
rcrl
pop
fidivrl
add
aad
jp
scas
cmp
inc
repz
push
sub
mov
mov
or
ret
cmp
aam
movsl
pusha
xchg
iret
mov
xchg
dec
jp
shl
cmp
movsl
je
push
mov
push
movsb
xor
pop
jbe
lods
out
xor
loope
mull
ficomps
nop
stc
int
jne
lods
imul
lods
in
cmp
adc
and
inc
js
mov
lods
outsb
xor
or
mov
push
add
sub
xchg
js
or
fxch
xchg
cli
faddl
dec
loope
ja
adc
mov
fstl
loop
push
push
cmp
lret
sbb
rcr
adc
lret
pop
add
rcl
enter
inc
dec
mov
jmp
dec
sahf
movsb
jecxz,pt
call
icebp
pop
xor
sub
pushf
or
fs
pop
sbb
or
or
test
adc
mov
inc
jmp
mov
adc
xchg
xor
enter
out
fiaddl
adc
ret
jg
mov
sbbl
jg
cmp
mov
negl
sub
pop
out
sahf
arpl
lods
sbb
flds
or
pop
ret
popl
sub
notl
repnz
aam
mov
test
nop
decl
push
push
sub
cmpsb
add
out
jae
cwtl
inc
inc
aam
mov
cli
and
fmuls
and
lods
adc
bnd
mov
add
jle
push
les
sbb
sbb
insl
add
jo
jae
mov
test
mov
popa
or
or
insb
int3
mov
inc
sbb
nop
mov
lret
pop
sbb
add
mov
pop
aas
mov
sti
jne
dec
jg
cmp
mov
in
pop
ss
add
jp
sub
add
aas
inc
pop
inc
xor
sbb
addl
test
adc
xlat
mov
lods
push
stos
mov
xor
sahf
leave
inc
fsub
aam
add
jmp
je
sarl
ja
mov
mov
cmpb
iret
aad
mov
les
mov
jmp
mov
insb
push
addb
push
adc
or
ret
adc
lret
rol
xchg
mov
add
jo
mov
stos
rsqrtps
adc
fcmovnbe
fsts
sub
mov
daa
lret
test
ret
adc
jbe
sub
std
aad
jnp
pop
inc
imul
inc
mov
mov
pop
mov
cmpsb
and
mov
enter
lahf
and
mov
fisubrs
rcl
add
hlt
popa
loop
mov
ret
fmuls
orb
adcl
movsl
or
mov
out
cs
mov
popf
xchg
in
mov
call
pop
test
mov
sub
call
or
iret
sahf
push
data16
shl
dec
dec
cmp
adc
adc
mov
leave
and
daa
lods
push
sti
push
mov
mov
dec
add
aad
pop
mov
out
jbe
lock
cmp
scas
cmc
test
pop
adc
mov
cs
mov
sbb
xchg
sbb
or
pop
jno
jnp
addl
inc
insl
loop
push
cld
iret
test
push
sarl
inc
pop
ja
loopne
fwait
pop
mov
shl
and
inc
sbb
add
push
addr16
cmc
aam
xchg
fwait
pushf
dec
jge
loopne
test
xlat
dec
fisttps
leave
pop
scas
and
xchg
pop
out
test
add
rclb
sub
ret
ds
imul
shlb
fadds
mov
out
aam
ja
std
inc
adc
and
and
pushf
jo
mov
jno
in
sbb
lods
cmp
repnz
and
and
lret
movsb
ja
ds
pushf
and
mov
jle
pop
leave
mov
je
mov
pop
testb
mov
xchg
mov
ljmp
loopne
mov
dec
cmp
mov
cmpl
or
arpl
adc
int3
mov
jbe
push
lcall
jge
divb
int3
sbb
cmp
cmpsl
pop
mov
scas
mov
bound
lea
sbb
jg
in
push
mov
outsb
in
sub
jo
and
popf
fcmovnb
movsb
and
push
xchg
cld
push
mov
hlt
fistps
lock
in
mov
cmp
mov
fmuls
mov
shrb
aad
pop
cld
sbb
insb
add
mov
inc
jbe
cltd
ret
into
cmc
in
sti
ret
xor
nop
repnz
aas
lret
sbb
mov
ds
dec
jns
xorb
mov
mov
das
mov
sbb
adc
divl
test
lret
xor
fsubrs
mov
dec
mov
mov
cld
push
std
xchg
orl
jns
cmp
pop
jle
or
mov
cwtl
int
sbb
cmp
sahf
in
jno
add
or
pop
loop
test
cmpsb
xchg
adc
adc
imul
je
fcoml
and
and
mov
dec
push
xchg
add
out
mov
das
jmp
mulb
jae
bound
mov
dec
xor
sbb
out
sbb
cs
xor
lea
mov
negb
push
add
ds
scas
flds
and
sub
cmc
sub
in
jnp
inc
enter
lods
sbb
mov
les
test
mov
add
cmp
lock
mov
loopne
jae
ret
xor
push
sub
xor
push
cmp
and
pop
mov
movsb
mov
cmpsl
add
push
xor
shll
loop
push
insb
movsl
mov
idivl
shlb
cwtl
or
mull
mov
pop
iret
add
mov
pop
xchg
fidivl
fsubp
or
cmp
lret
int3
orb
sub
fwait
mov
jnp
mov
dec
pop
idivb
movsl
or
inc
mov
aaa
jbe
call
insl
fdiv
mov
mov
out
mov
pop
inc
add
push
jle
pop
repnz
push
and
lock
aaa
mov
push
jne
mov
dec
xchg
cs
orb
cmp
aas
cmpl
ljmp
sbb
icebp
xor
cmp
inc
pusha
and
mov
or
ret
leave
cmpsb
cmp
dec
repnz
shlb
and
lahf
inc
bound
or
xor
das
inc
sub
pop
sub
pop
mov
popf
in
add
movsl
add
sbb
or
mov
push
adc
popf
das
add
adc
jle
loope
movb
cs
insb
mov
xchg
insb
mov
imull
nop
je
nop
cltd
push
jno
xor
mov
stc
xlat
ret
decb
fadds
sub
sbb
hlt
cs
repz
and
addr16
rolb
mov
call
or
mov
mov
xchg
add
cltd
dec
fbld
scas
dec
adcl
fwait
push
scas
aaa
int3
and
lods
dec
test
adc
lret
pop
mov
lcall
pop
cmp
out
fcomps
jmp
cli
pusha
mov
ror
mov
push
scas
fiadds
sbb
call
arpl
mov
push
jae
stos
mov
test
xor
xor
ja
and
clc
adc
movsb
xchg
imul
sub
pop
js
jns
cmpsl
sub
mov
jge
scas
sbb
mov
dec
test
shll
cmp
add
jge
lock
mov
pop
adc
pusha
mov
lds
sub
dec
push
jg
mov
mov
hlt
jecxz
cmp
push
pop
cltd
xlat
xor
push
sarb
pushw
test
test
aaa
aad
push
mov
mov
push
les
movsb
adc
cmpsb
leave
loope
jb
jb
sbb
xchg
jmp
fists
pop
sub
push
cli
es
sbb
rorb
rol
cmp
pop
sbbb
jmp
push
mov
rorl
push
dec
sub
pop
movsl
and
arpl
popa
rcr
push
push
hlt
subb
jae
insl
adcb
rcl
push
pop
dec
push
aam
sbb
jp
dec
inc
mov
xchg
mov
adc
sbb
ds
je
pop
push
jbe
fcompl
sbb
mov
push
sti
jp
rolb
mov
popa
fmuls
cmpsl
adc
and
sub
push
loopne
inc
xchg
std
imull
outsb
cmc
jnp
shrl
out
mov
lods
push
call
aad
mov
jp,pt
adc
mov
flds
cwtl
xchg
aad
data16
cmpsl
jg
insb
cmp
push
test
adc
cmpsl
dec
negb
push
cmpsl
sbb
clc
mov
mov
cmp
into
fisttps
push
sahf
sbbl
sbb
mov
dec
loop
ja
pop
enter
adc
call
xchg
push
jns
mov
add
fstpt
sahf
orb
mov
dec
dec
iret
out
sub
jle
add
movsb
jbe
fisubrl
sahf
inc
mov
out
icebp
clc
lea
jb
inc
lret
sbb
aaa
loop
sub
fistps
jne
jg
mov
jmp
inc
js
xchg
xchg
fistl
mov
fnstcw
insl
sbb
adc
in
in
roll
je
push
mov
ffree
sub
mov
loop
inc
xchg
ret
push
in
cmp
leave
xor
loopne
push
jle
push
insl
or
roll
cmp
jnp
inc
jle
shrl
loop
mov
icebp
negl
mov
add
xor
jmp
cmpl
arpl
xchg
push
fcmovu
xlat
or
je
sbb
or
inc
mov
cmp
ss
push
aam
inc
xchg
push
inc
dec
inc
push
lock
cli
cltd
ret
pmuludq
loope
bound
sub
popa
add
push
add
sbb
fs
ret
xor
mov
scas
mov
rolb
jns
stos
inc
jae
jmp
mov
scas
mov
rorb
mov
adc
mov
in
or
push
cmpsl
out
inc
shl
or
addl
scas
cmp
push
daa
cmp
xchg
inc
cmp
add
enter
sub
dec
cmp
cmp
es
ficomps
pop
adc
outsl
push
icebp
jge
pop
subb
adc
in
xor
roll
jnp
push
adc
pop
inc
shrl
mov
mov
std
out
roll
fchs
lods
adc
movsb
xchg
decl
sti
repnz
jne
xchg
int3
push
xor
rcrb
and
mov
ds
dec
inc
lcall
add
or
popa
imul
adc
dec
lcall
jbe
mov
lea
clc
outsb
pop
or
test
adc
lds
sub
scas
adc
lds
xor
call
mov
je
xchg
sub
pop
andl
pop
fimull
es
jne
jae
or
mov
ss
fcompl
fidivs
xchg
bnd
cmp
shlb
sbb
xor
aad
data16
aas
and
xor
clc
pop
test
fdivs
lods
fidivrl
or
aas
insb
sbb
in
outsb
fstps
shll
cmp
adcl
lahf
cmp
fcomps
push
mov
mov
sbb
mov
int
push
int
fnstenv
or
inc
cmp
inc
sbb
push
or
inc
fisttpll
fistps
mov
mov
lahf
xor
pop
adc
push
adc
ret
scas
es
call
add
mov
das
pop
add
das
jle
fdivrs
pop
mov
divl
cli
bound
xor
movb
cli
push
in
pop
cmpsl
fneni(8087
mov
or
xchg
not
negb
push
mov
movsb
pop
hlt
push
pop
push
inc
inc
or
inc
fdivrp
imul
xor
pop
xor
ret
pop
test
sbbl
lds
mov
stc
mov
push
push
mov
mov
outsb
push
hlt
nop
push
push
xchg
cmp
jecxz
cmpb
mov
push
test
rcr
pop
dec
mov
daa
cmp
push
mov
cli
roll
imulb
mov
push
jae
jbe
rcrl
es
inc
or
adc
jae
popf
cmc
fisttpl
xchg
cmp
sbb
adc
inc
inc
fwait
lods
push
jno
nop
cmp
mov
pop
pusha
jo
sbb
dec
call
lea
adc
in
xor
push
and
add
pop
sub
movsl
int3
inc
dec
mov
cmpsb
rorl
jle
pushl
xchg
mov
cmp
mov
cmp
add
test
mov
xchg
mov
adc
iret
sub
xchg
popa
ret
cwtl
jns
jl
fwait
aas
sarb
mov
clc
outsb
cmp
pop
iret
push
or
pop
jp
fdiv
pop
stos
jno
test
sbb
pop
call
outsb
xchg
adc
in
ret
cwtl
call
idivb
fdivl
pop
add
shll
sbb
sbb
sbb
xor
mov
mov
pop
rolb
cltd
cmp
fnstsw
inc
pop
int3
cmp
insl
sbbb
mov
sbb
add
inc
adc
jbe
jge
pop
adc
in
iret
pop
leave
out
adc
cmp
mov
loopne
jns
pop
lea
addl
fisubs
or
jae
push
mov
jnp
mov
adc
in
loopne
dec
add
iret
pushf
jmp
cmp
push
neg
adcb
inc
dec
dec
subl
cld
and
movsl
xor
aaa
fidivrl
pop
sbb
lds
and
popf
nop
lcall
mov
pop
lods
arpl
mov
mov
dec
test
mov
or
and
mov
nop
jbe
cltd
rcrb
mov
lcall
adc
outsl
sbb
inc
inc
xchg
mov
jo
pop
int
mov
jecxz
cmpsb
inc
scas
les
loop
fldcw
jecxz
mov
sbb
adcl
mov
jno
je
and
push
inc
out
in
fs
out
dec
pop
xor
or
jno
popa
repnz
mov
fldt
sub
xchg
xchg
repz
or
orb
popa
add
sbb
inc
aas
jnp
sbb
dec
mov
sti
out
jp
loopne
add
and
in
mov
lret
cmc
cmp
cmp
mov
add
daa
push
jle
inc
add
mov
loope
lods
das
adc
test
call
scas
sbb
loop
sub
pusha
push
jb
cltd
fiaddl
pop
sub
lret
fdiv
rcl
jg
lock
push
mov
mov
hlt
dec
jae
xchg
fdiv
pushf
adcl
outsb
pop
mov
mov
adc
pop
jle
shrb
imul
loope
js
xor
cmp
xchg
pop
xchg
sub
cmp
and
push
insl
cmp
loope
in
push
testl
add
fnstcw
jge
sbb
pop
sbb
shll
cmp
jae
ljmp
inc
sbb
aas
and
mov
out
push
fistps
divb
popa
scas
pop
inc
loop
scas
or
mov
cmp
imul
out
xchg
mov
or
sti
outsl
mov
fsubrl
pop
insb
xchg
aas
jns
aas
adc
xlat
pop
mov
sub
jl
call
dec
jg
into
pop
call
xor
clc
cwtl
cmpsl
jbe
add
loope
ljmp
in
jl
add
xlat
sub
imul
movsb
add
dec
arpl
fcompl
lahf
sbb
in
sub
movsb
sub
orb
mov
dec
xchg
mov
and
js
lahf
dec
sbb
mov
sbb
adc
jp
and
scas
jmp
push
jno
inc
pop
pop
popa
data16
xor
jg
inc
inc
je
rolb
loop
lods
shrb
and
xlat
xchg
and
out
push
ror
cmc
idivl
and
in
and
ret
mov
lret
xchg
fcmovnbe
sub
stos
mov
out
mov
mov
shr
ret
ret
mov
sub
lds
mov
out
test
xchg
inc
dec
ljmp
mov
or
mov
out
dec
cld
in
sbb
lods
push
movsl
stc
stc
jbe
sbb
jecxz
jl
bound
lods
les
add
pop
mov
mov
push
popf
das
orl
push
push
fsubs
pusha
mulb
xchg
mov
sbb
adc
mov
mov
jmp
xchg
out
out
mov
dec
int
lock
push
outsb
xchg
jecxz
lds
push
jo
mov
mov
fcmovbe
cs
fs
outsb
mov
jmp
adc
int3
push
repnz
out
fsubp
in
cwtl
sbb
stos
stos
sub
adc
cmp
psrlq
jl
mov
lea
and
aam
mov
mov
inc
stc
mov
loopne
mov
mov
mov
insb
dec
aad
adc
jo
repz
or
dec
mov
das
insb
in
ds
ficomps
insl
jle
mov
push
shrb
aad
sbb
loope
push
arpl
je
or
adc
leave
xchg
jl
mov
jmp
in
outsb
add
insl
dec
and
inc
pop
cli
ss
into
jo
lea
push
movsb
or
movsl
xorb
cltd
imul
fisubrl
jp
and
jno
loop
or
insb
arpl
or
cwtl
xlat
test
dec
rcrl
cmc
insl
push
and
mul
neg
pusha
out
mov
mov
cmp
jle
addb
mov
mov
pop
fs
mov
pusha
loop
in
push
lods
lcall
inc
jns
mov
outsb
push
xor
inc
push
leave
xchg
mov
movsl
out
fs
shrl
xchg
daa
jb
psrld
imul
xor
push
imulb
lea
push
hlt
addr16
add
cltd
leave
push
inc
hlt
adc
pop
popa
icebp
push
pop
sub
mov
jnp
scas
xor
inc
jmp
sub
insl
mov
test
jo
test
ljmp
adc
je
jmp
dec
pop
ljmp
and
test
mov
adc
and
inc
lods
sbb
in
cli
add
shlb
jl
inc
lock
inc
xchg
lods
adc
neg
cld
aas
ds
data16
push
sahf
mov
loop
or
enter
ficoml
aas
outsl
leave
dec
pop
addb
lock
es
add
out
fildl
dec
mov
cltd
mov
cmp
mov
imul
mov
xchg
repnz
xchg
rcr
das
inc
aaa
adc
lahf
shrl
loopne
inc
test
sub
cmp
clc
pop
in
mov
pop
inc
sub
pop
rcll
or
fcompl
imul
xchg
jge
mov
xchg
dec
lock
mov
repz
mov
dec
rcr
call
xchg
add
mov
popf
add
xor
push
pusha
sahf
addl
push
fcomps
into
out
mov
mov
xor
pop
shll
stos
dec
in
mov
out
lea
adc
in
fdivrs
pushf
wbinvd
movsl
mov
mov
push
loopne
mov
call
sub
movb
dec
fistpll
fldl
mov
inc
ret
inc
shlb
fcomp
pushf
pop
sbb
or
jnp
lds
insl
orl
lcall
fisubrs
cmovo
mov
and
into
jmp
je
and
pop
in
pop
mov
xchg
inc
pop
and
incb
int3
or
out
out
sbb
test
dec
arpl
cmp
mov
pop
push
out
movsb
iret
mov
or
push
cmp
mov
jae
mov
xor
jmp
ss
lret
roll
iret
push
adc
out
and
lcall
shll
sbb
or
mov
aaa
cmpsl
in
xchg
jmp
mov
roll
pop
aas
pop
movsb
xabort
cmp
add
imul
sub
ds
or
mov
or
sub
js
cltd
clc
dec
adcl
std
fnsave
cmp
jbe
inc
xorl
mov
mov
mov
lock
pop
xchg
les
jmp
popf
out
mov
cmp
ret
jns
ja
bound
dec
dec
sbb
mov
jae
imul
sub
jmp
fimull
clc
mov
cmp
jmp
stos
inc
cwtl
inc
mov
push
dec
dec
jp
lock
mov
fsubl
icebp
inc
cltd
mov
xchg
xchg
test
dec
pcmpeqd
in
mov
mov
xchg
and
in
sub
mov
stc
mov
inc
and
inc
jno
pop
enter
xor
cmpsb
xor
lret
xchg
and
and
test
or
out
xor
pop
dec
je
aam
or
dec
arpl
xchg
testb
int
sub
fdivl
sub
sub
jmp
xor
mov
pop
or
adc
mov
iret
push
clc
jae
cmpsl
aaa
or
cmpb
mov
aad
mov
stos
xor
sti
outsb
add
out
aad
pop
add
andl
cmp
mov
adc
inc
jmp
pushf
push
test
js
push
push
je
cs
shrb
rcl
inc
or
stos
jae
sub
cmpsl
shll
lret
xchg
outsl
add
out
leave
push
cmp
mov
mov
and
cmp
fsts
mov
xor
mov
sbb
push
in
pop
sub
ret
mov
leave
mov
hlt
rcrl
sbb
xor
daa
cmpsl
cwtl
cmp
cld
lds
mov
adc
shl
add
sbb
pop
btc
pop
jns
bound
jp
jno
jb
mov
sbb
out
call
xor
fisubrs
jne
adc
jb
add
mov
mov
jle
sahf
sahf
test
clc
in
xchg
lock
gs
sahf
rol
aas
bound
out
mov
cltd
pop
mov
xchg
sbb
and
adc
jbe
sbb
test
pop
pop
jl
mov
jnp
push
adc
jae
add
dec
mov
dec
pop
cmp
sarl
push
popf
cmc
adc
sub
sub
nop
mov
adc
enter
jmp
loopne
push
les
inc
hlt
popf
fildl
jge
pop
aaa
adc
test
push
cld
or
xchg
ret
inc
xchg
add
adc
mov
xchg
addl
cmpsb
dec
fisubrl
adc
repz
xor
and
cmc
jp
push
in
ja
cmc
sbb
jae
push
fildll
mov
dec
cltd
mov
sub
push
out
cwtl
mov
jmp
pop
and
jle
cmp
xor
lea
xor
jmp
loop
cmp
or
and
add
cmpsl
mov
ss
inc
movsb
inc
jmp
out
cwtl
arpl
adc
out
stos
sti
roll
dec
adc
rol
shr
pop
mov
lret
mov
add
sub
and
sbb
arpl
mov
xchg
sub
jne
sub
jmp
mov
lea
test
mov
xchg
mov
and
xor
push
push
mov
lahf
adc
jecxz
sub
jle
mov
lock
add
daa
push
sbb
mov
lds
xorl
outsb
cli
push
pop
mov
fldcw
std
addr16
out
jecxz
ja
sbb
cmp
pop
test
dec
mov
inc
in
or
leave
lods
adc
lods
mov
inc
scas
dec
sarl
xchg
dec
mov
outsb
repz
fiaddl
mov
leave
mov
pop
cs
clc
mov
stos
imul
cmpsl
add
jae
jp
xor
push
les
push
inc
std
je
ja
push
cmpb
dec
inc
dec
dec
pop
or
scas
adc
fwait
subl
pusha
fistl
inc
xlat
push
aas
jb
repz
cmpsl
mov
fdivs
out
loopne
push
clc
ljmp
fistl
inc
test
dec
popa
push
rcrl
out
call
sbb
test
xchg
ret
repz
mov
fists
mov
mov
push
cltd
mov
jp
pop
lret
pop
mov
jb
sub
dec
sub
in
and
xor
jnp
fisubrs
sub
test
std
aam
sbb
data16
lds
gs
xchg
cli
insb
idiv
adc
cmp
pop
pop
and
fistps
mov
and
cli
add
shrl
fldcw
repnz
scas
mov
lock
pushf
sahf
xchg
jl
fiaddl
loop
cmpsl
gs
pushf
sbb
push
scas
sbb
test
enter
repz
fistl
add
mov
or
jbe
enter
iret
add
lahf
out
adc
xchg
jl
aam
add
mov
add
mov
sarl
imul
bound
xchg
out
sbb
or
add
add
add
faddp
mov
push
mov
out
cmp
mov
adc
insb
inc
mov
dec
scas
data16
fildll
add
sub
cmp
ret
shlb
addb
in
push
aas
mov
add
cmpsl
xor
sub
daa
pop
test
loopne
cmp
lds
icebp
push
iret
cmpsl
mov
jle
or
inc
xor
ss
aaa
cmp
jg
shrb
int
push
or
enter
cmp
fcmovbe
addr16
daa
sarl
xor
lods
iret
add
mov
push
mov
pop
sub
xchg
jnp
jecxz
mov
mov
into
mov
push
adc
mov
mov
and
sub
mov
and
xor
into
rcr
jno
rolb
lret
mov
fxch
sub
xor
fs
mov
jge
test
cmpsl
ret
sti
je
out
sub
cmc
leave
or
cs
mov
pop
mov
push
lcall
frstor
pop
push
mov
lds
xchg
lods
pusha
pushf
int
out
out
mov
ja
jno
lods
in
cmp
test
sub
movsl
ret
addr16
mov
xor
das
and
mov
fs
les
jb
sti
jp
shl
jo
mov
jnp
sbb
dec
call
mov
mov
inc
rcrb
ret
xor
sete
test
xor
sbb
cmp
pop
es
adc
inc
sbb
ret
dec
fcomp
out
imul
inc
sub
lret
or
mov
and
repnz
adc
icebp
or
pop
add
mov
sbb
adc
dec
inc
lock
out
mov
mov
adc
inc
pop
ror
mov
sub
jo
jne
cmp
lahf
in
xchg
pop
inc
out
je
add
sub
cmp
sub
sahf
out
mov
mov
inc
inc
pushf
gs
mull
push
incl
dec
adc
fwait
push
mov
jae
jne
push
adc
xor
test
mov
stos
add
mov
xchg
scas
movsl
push
pop
and
cmp
push
sbb
test
stos
fxch
or
lcall
jnp
repz
push
mov
rcll
push
in
sub
jmp
mov
fildl
mov
rcr
js
or
fimuls
loop
out
imul
and
movsl
rclb
push
cmpl
jnp
sahf
dec
push
sub
int
mov
jno
or
sbb
pusha
aad
xor
ret
ds
pop
fnstenv
imul
outsb
and
ss
int3
xchg
ret
cmp
xchg
cld
push
mov
push
negb
push
adc
add
test
sar
sub
sub
ja
idivb
xchg
js
stc
popa
mov
idivb
xor
enter
or
stc
and
or
and
ja
frstor
fdivp
add
xor
and
movsb
or
je
les
shr
dec
lods
ja
add
into
loopne
repz
or
push
in
jge
adc
ljmp
jbe
dec
test
jg
outsl
lret
and
adc
cmp
fdivrl
push
rcrb
sub
nop
sahf
dec
outsb
jns
sahf
lods
lods
out
xorl
ds
test
jmp
popf
and
cmp
test
test
sub
fucomi
repnz
fisubs
cmp
mov
mov
nop
push
orl
lods
xchg
ret
lods
lea
test
dec
aaa
and
lods
imul
mov
sbb
adc
dec
dec
push
inc
cld
lods
pop
lret
adc
dec
push
stos
mov
and
sub
out
xchg
or
daa
dec
clc
cli
mov
fucomip
cmp
pop
xchg
add
shrb
sahf
and
shrl
fldenv
push
pop
mov
fidivs
push
sti
push
add
jb
lahf
sub
stc
rorl
ljmp
js
mov
aam
sub
js
scas
inc
nop
decb
mov
into
cmpsb
sar
rcrl
push
lock
das
xor
fldt
add
mov
inc
fs
movsl
jle
jb
ror
leave
ja
movsb
mov
push
and
jl
dec
mov
sub
cltd
sbb
dec
push
add
or
adc
mov
mov
jmp
push
adc
scas
add
lds
movsl
test
mov
mov
pushf
imul
loope
icebp
js
xor
mov
ret
sub
ret
sub
popa
mov
jae
push
stos
pusha
fidivs
mov
or
mov
rorl
or
mov
jb
or
mov
int
lret
add
xchg
inc
lret
inc
repz
mov
sbb
call
xor
cs
sub
int
inc
cs
or
cltd
pushf
dec
pop
and
aam
movsb
xorl
or
push
cmp
aam
fimuls
push
and
divl
add
sbbb
daa
add
cmpsl
lcall
filds
pop
sub
shrl
leave
and
mov
sub
scas
mov
inc
cli
out
mov
dec
jmp
fldcw
adc
inc
dec
popf
add
icebp
cmpsl
or
and
pop
push
fldln2
cli
mov
ss
jmp
xchg
inc
icebp
jns
jns
shll
std
std
add
jg
or
sahf
and
dec
xchg
and
fstpt
sbb
data16
cltd
mov
addr16
or
scas
jnp
ljmp
js
and
jg
jb
ja
jb
ja
jb
cmovl
gs
mov
in
and
pop
imul
jno
dec
das
rcrl
add
cmpsb
xor
xor
icebp
stc
xchg
cld
fsubr
sti
sbb
cwtl
mov
fldl2e
and
rol
sub
cmpsb
movsl
jmp
loope
pop
sub
packuswb
mov
push
mov
cs
scas
and
ss
dec
andb
mov
mov
inc
sti
inc
xor
mov
jb
xor
fiaddl
mov
sbb
movsb
sub
repz
push
in
push
dec
and
inc
mov
adc
enter
push
push
into
sbb
flds
xor
push
xchg
popl
cmp
lret
pop
adcl
outsl
sahf
sub
xchg
sbb
sub
jo
cmpsb
dec
jo
add
lahf
xor
lahf
outsl
fcoml
adc
imul
mov
mov
inc
mov
lds
push
fdivrl
jecxz
or
sub
inc
jge
out
inc
cwtl
dec
add
mov
sub
roll
shl
push
pop
xchg
dec
and
cmpb
jo
lret
dec
mov
push
inc
out
xorb
inc
mov
xor
mov
pop
jge
pop
pop
scas
std
mov
adc
aaa
imul
xor
aad
gs
xchg
in
lods
scas
int
aam
jmp
and
hlt
mov
loopne
pop
scas
push
dec
std
js
xor
cmc
lock
cmp
pop
jmp
cmpsl
inc
rol
jecxz
ja
cmpb
std
shll
jb
jge
leave
and
divl
xchg
pop
nop
call
mov
jg
cmp
in
lcall
rclb
sti
aam
mov
ss
out
jmp
pushf
push
divl
stc
inc
inc
lcall
mov
push
mov
jl
pop
mov
mov
pop
test
cmpsl
rcrb
aad
lods
sarl
arpl
cmp
es
add
mov
xchg
clc
push
ret
xlat
dec
fldt
cmpsl
xchg
jge
jl
pop
enter
clc
add
and
jge
movsb
cmc
mov
jge
sbb
fsubl
ficoms
pop
mov
clc
outsb
mov
repz
dec
and
dec
xor
add
imul
pop
movzbl
lcall
rcr
fnstenv
mov
into
rorl
cli
and
jmp
xchg
inc
lea
jl
mov
std
js
sub
arpl
adc
rclb
add
cmp
lds
dec
lds
imulb
fmul
ss
mov
jg
push
mov
in
fwait
addb
sbb
cwtl
add
scas
out
cmp
jnp
js
xor
mov
out
xchg
dec
push
call
push
push
inc
aas
push
pop
cmp
stos
data16
aam
push
mov
jno
in
popf
mov
or
mov
cmp
lret
lods
shl
adc
xrelease
jmp
das
xor
adc
out
fbstp
push
cmp
jbe
pop
push
test
jnp
adc
test
int3
mov
cmc
ljmp
fmuls
and
xchg
mov
push
push
popf
cmpsb
cmp
leave
fdivrl
xor
out
movsl
push
addr16
ficomps
shlb
cmp
adc
and
ljmp
xchg
inc
dec
inc
jmp
pop
in
loope
or
mov
cmp
test
aaa
fdiv
mov
or
push
and
push
nop
mov
inc
out
loopne
inc
jno
mov
cmp
mov
fildll
jb
mov
push
ljmp
outsl
mov
mov
and
cs
xor
gs
xchg
in
sbb
add
mov
icebp
and
subb
adc
fisttps
mov
adc
scas
in
repnz
mov
shll
adc
push
mov
pop
out
lcall
divl
das
shrb
mov
xor
push
lds
into
push
mov
pop
scas
sbb
xchg
mov
daa
popf
ret
cmp
idivl
and
in
test
gs
push
ret
push
aas
sbb
xor
movsb
push
flds
inc
xor
pop
add
pop
xchg
jg
sbb
jb
out
aad
repz
inc
xchg
dec
jno
shl
sub
jmp
xor
inc
fdivrl
mov
test
ja
xor
sbb
xchg
mov
dec
dec
pop
adcb
xlat
loope
scas
cmp
pcmpeqd
ja
xcrypt-cbc
cmpsl
adc
lea
in
js
les
ret
sbb
rcr
sub
daa
int3
bound
inc
insb
cmp
lahf
lcall
xorl
shl
xor
test
shlb
lret
icebp
movl
mov
dec
imul
fisttps
ret
mov
mov
into
cmp
pushf
lret
sub
mov
ret
imul
imul
and
pop
cltd
mov
divb
mov
stos
addr16
dec
jns
or
decb
addr16
cmpsl
mov
jnp
bound
and
data16
adc
sbb
lods
jp
fdiv
mov
jecxz
lret
outsl
das
mov
mov
cmpsl
inc
xchg
dec
out
fdivrs
int
lret
xchg
or
stos
push
wrmsr
fwait
dec
mov
fldenv
in
out
nop
jge
and
xchg
ficomps
sub
pop
or
pop
mov
mov
pop
ljmp
nop
in
nop
and
pop
push
adc
push
sbb
xchg
xor
add
mov
ficoml
pop
fsubrl
or
loope
sbb
shlb
icebp
sub
leave
insl
or
lret
les
sbb
shrl
stc
popf
scas
xor
rorl
jne
adc
xor
jl
shll
xor
inc
dec
xor
ret
xchg
mov
cmp
clc
mov
loopne
fucom
jb
push
iret
pop
mov
and
hlt
xor
shll
jmp
mov
push
div
inc
jnp
scas
stos
fstl
mov
push
call
ror
aaa
inc
shlb
push
lsl
data16
inc
mov
dec
mov
ret
or
outsl
jbe
iret
sub
subps
adc
jle
into
rcll
orl
and
scas
scas
cmpl
in
in
imul
jne
outsb
cmp
std
jns
sub
ss
andl
dec
mov
cmp
mov
jmp
stos
push
jae
cmp
das
ds
or
or
xor
cmpsb
and
loope
xlat
mov
jg
xchg
sub
cmp
aas
mov
insb
xor
lret
jbe
fcomps
pusha
scas
push
imul
in
dec
dec
cltd
dec
and
insl
xlat
mov
push
push
adc
xor
push
movsl
ret
lcall
mov
repnz
pop
push
mov
or
cmpsl
xor
std
loope
sub
std
aad
movsb
jns
xor
pop
daa
imul
xor
mov
mov
bound
es
shll
sar
xor
add
mov
cmp
leave
stos
inc
jmp
orl
out
xchg
inc
lock
notb
imul
mov
fst
bound
mov
sub
loop
imul
scas
pop
nop
pusha
adc
sarl
ss
push
adc
mov
rcrb
movsl
jl
ret
hlt
cmc
sub
sbbb
bound
repnz
gs
jmp
cmpl
daa
nop
popf
mov
adc
jo
ss
pop
xor
leave
loop
or
cld
mov
xor
ja
outsl
lds
inc
jge
pop
out
loope
outsb
inc
mov
ljmp
inc
int
mov
or
sbb
das
andl
xor
daa
jno
inc
pop
add
aaa
aam
pop
lea
add
nop
sub
pop
push
cld
add
clc
in
xor
cwtl
in
sub
sub
test
ja
jb
sub
xor
popf
fs
cmc
shlb
pop
add
dec
jne
aad
je
jnp
data16
je
mov
scas
push
mov
sbb
jl
lock
repnz
test
repnz
cltd
out
dec
outsl
mov
xchg
dec
cs
movsl
mov
es
sub
xchg
mov
cwtl
imul
push
daa
pop
mov
mov
sub
or
cmpb
add
out
pop
add
mov
jp
lea
sti
inc
in
decl
xchg
icebp
test
pop
xchg
push
ds
push
fwait
sti
mov
jle
pop
insb
es
xchg
pop
xchg
pop
lgs
mov
and
xchg
add
movsl
popa
sub
jecxz
sbb
pop
clc
push
jb
popf
mov
ret
sbb
xor
pop
and
mov
adc
into
orb
or
ljmp
outsb
movsb
and
dec
add
mov
mov
pop
jne
cmp
aam
adc
mov
fadd
es
out
xor
test
jnp
inc
int
add
int3
jle
cmp
sub
je
fadds
clc
adc
lret
cltd
ljmp
xchg
push
mov
data16
pop
aad
xchg
xor
mov
rcr
mov
pop
rcrb
and
push
pop
mov
repnz
and
popf
mov
sti
mov
mov
pushf
or
outsb
in
test
mov
test
inc
or
in
add
in
sub
dec
scas
inc
and
sub
js
loope
shlb
negb
scas
ds
test
xchg
or
mov
lcall
xor
push
lss
xor
pop
adc
fcmovnb
add
push
test
jle
mov
stc
ljmp
cmp
and
xor
mov
js
xchg
xchg
ds
cwtl
jge
into
scas
aam
loopne
dec
pop
mov
xchg
or
jecxz
push
mov
movb
mov
stos
adc
repz
icebp
and
mov
mov
aam
cmp
dec
rcrb
out
inc
dec
popf
xchg
lret
mov
into
jae
jno
fnstenv
xor
scas
icebp
pop
adc
int
test
iret
and
jp
cld
sbb
mov
pop
stc
mov
stos
dec
cli
mov
mov
push
dec
scas
xchg
or
aas
out
add
call
pop
cmp
pushf
popf
inc
sub
fucomi
shll
and
jae
xlat
jb
cwtl
pop
repz
dec
push
pop
pop
cmp
jge
int
sub
or
mov
fidivs
int
mov
mov
fstpt
sti
fsub
mov
jbe
xorl
lods
repz
mov
andl
jno
fnstenv
cmp
enter
fldenv
push
and
test
pusha
push
mov
aas
loopne
xchg
mov
dec
inc
in
test
jnp
mov
xchg
es
dec
rorb
es
in
roll
pop
stos
mov
pop
lcall
jge
movsb
clc
ljmp
fs
cwtl
gs
inc
imulb
idiv
inc
sbb
adc
dec
push
insl
mov
jne
jns
inc
mov
inc
mov
or
xchg
adc
sbb
cmp
loope
fbstp
sub
xchg
mov
xchg
xor
loopne
push
lret
mov
sub
jo
test
jnp
xchg
add
cli
pusha
mov
lods
fcmovnb
lock
mov
fistps
pop
insb
add
or
mov
out
push
jae
adc
pop
xor
in
cld
fwait
mov
ret
shll
sbb
jbe
insertq
jns
imul
and
and
mov
cwtl
sub
push
jo
xchg
hlt
repz
sbbb
inc
xor
es
dec
ja
fstl
jnp
cld
and
mov
stos
push
imul
nop
enter
sbb
fisttps
and
cmc
xor
cmp
mov
xor
fildll
mov
test
mov
leave
and
dec
jg
push
push
sti
neg
sahf
daa
push
inc
ja
push
cmpb
rcr
sub
scas
dec
jge
mov
xchg
nop
xchg
scas
mov
test
repnz
dec
and
cmp
pusha
pop
xor
inc
daa
das
dec
stc
cli
packuswb
add
mov
jb
jg
out
sub
fisubl
mov
ja
fiadds
adc
repz
leave
jb
jg
test
rcrb
in
aam
inc
xor
es
inc
aas
jmp
and
xor
mov
mov
mov
ret
and
or
jae
jae
adc
add
lea
insb
roll
pop
jns
in
pop
data16
cltd
dec
inc
or
iret
pop
test
fidivrs
in
mov
jb
test
xchg
mov
push
or
jae
outsb
dec
mov
and
inc
add
mov
ss
cmpsl
jnp
xor
popa
add
xor
shl
out
jno
push
insb
sub
xchg
out
arpl
mov
fisubl
ja
aad
mov
movsb
out
leave
fwait
repz
test
mov
and
jnp
or
lods
in
sarl
mov
jne
fildll
mov
sub
nop
xchg
iret
mov
out
push
xor
andl
hlt
sub
sub
xchg
push
xchg
in
xchg
bound
lret
adc
cmpsb
in
mov
jmp
call
pop
inc
dec
scas
sbb
mov
push
jb
mov
mov
push
adc
lock
js
je
hlt
stos
jnp
and
das
shlb
lock
add
dec
out
lret
jo
cmp
jge
sbb
shrl
push
cmp
xor
sub
jmp
test
call
leave
push
ss
cltd
sahf
into
push
inc
fcompl
pop
add
inc
pop
mov
and
add
sahf
dec
cmp
jb
jne
xor
jbe
add
cld
test
mov
push
cmp
rorl
cltd
dec
addl
cmp
mov
inc
and
adc
cld
jo
loopne
ds
adc
mov
shrb
loopne
push
lret
stos
pop
push
clc
mov
ljmpw
push
cmp
aas
push
fs
fiadds
push
mov
and
jg
cld
pop
jl
pop
test
pop
jns
lret
lea
xchg
lock
jne
adc
add
xchg
fbstp
nop
push
mov
jne
mov
aas
push
jnp
push
pop
push
imul
data16
xchg
mov
fnstcw
sbb
push
sub
icebp
push
add
imul
mov
cwtl
xor
pop
and
addr16
test
shll
or
xor
pop
inc
jg
add
mov
mov
sub
scas
sbb
daa
xor
lods
jmp
lcall
js
arpl
jl
aad
mov
mov
jbe
dec
pop
lahf
fsubrs
pop
push
out
add
sub
ss
stc
add
shll
or
sbb
fcomi
shrb
pop
and
jge
test
cltd
out
push
push
out
cmp
sub
das
jmp
mov
sahf
sbb
fstpt
mov
rclb
fisttpl
aaa
imul
push
sbb
rcll
jno
push
xor
bound
mov
mov
sbb
add
push
add
imul
shlb
fcoms
dec
rolb
mov
sbb
fidivl
pop
in
cmp
mov
inc
mov
pushl
xor
mov
out
js
pop
push
and
sub
xor
scas
popf
or
imul
jg
mov
dec
and
push
sti
xchg
sti
stos
into
and
out
test
rolb
push
pop
adc
loop
mov
mov
push
out
mov
mov
out
inc
add
lock
pop
cltd
push
shlb
hlt
data16
int
test
icebp
push
stos
sbb
pop
pop
call
cmp
cmp
dec
clc
jno
jnp
add
add
sub
adc
and
incb
inc
test
cmp
and
mov
fisttpll
mov
test
lock
leave
or
sbb
int3
push
xchg
cmpb
fldenv
jge
dec
push
pushf
and
out
pop
mov
dec
mov
sarb
enter
cmp
inc
into
mov
cwtl
inc
insl
and
outsl
incl
es
fisttps
mov
add
mov
xlat
clc
or
sahf
stos
push
sub
xchg
sbb
jno
jg
cld
cli
mov
movb
xchg
xchg
fsubr
aam
rolb
sahf
test
imul
repz
or
mov
push
mov
adc
loope
lret
adc
pop
or
inc
sub
jne,pn
stos
popl
push
inc
leave
leave
xor
mov
repnz
bound
jno
fiadds
outsb
mov
pop
mov
xor
out
jno
pop
jmp
xor
mov
pop
jae,pt
pushf
mov
popa
push
jle
aad
dec
jmp
imul
cmpsb
or
sub
add
xor
and
daa
jle
sbb
mov
push
xchg
pop
in
push
push
xchg
addb
mov
stc
scas
aam
cmc
call
dec
push
add
icebp
leave
stos
mov
outsl
pop
out
ret
pusha
iret
test
xchg
in
adc
jo
cli
icebp
and
ret
int
pop
loopne
insl
sti
fwait
int
xchg
mov
lcall
cmc
adc
test
jbe
insb
dec
sbb
aaa
cmp
fsubl
mov
adc
pop
xor
or
addr16
fsub
clc
ss
stos
fwait
lods
pop
sbb
shr
push
call
cld
decl
inc
pushf
outsb
sub
mov
mov
push
pop
and
mov
enter
cmp
adc
or
ret
or
mov
leave
or
mov
mov
dec
sti
xchg
jge
push
fiaddl
mov
adc
add
add
cmpsb
lods
pop
mov
mov
pop
pop
xrelease
dec
mov
cltd
adc
xchg
shll
jle
pop
test
and
call
or
mov
xor
outsl
add
or
daa
stc
insb
mov
inc
dec
cmp
test
lock
pusha
loop
in
xchg
mov
shl
push
mov
pop
add
mov
jle
mov
aam
mov
sub
inc
mov
das
mov
aaa
or
fs
mov
mov
pop
icebp
add
xor
or
nop
or
cwtl
lret
sbb
lods
imul
cmpb
mov
pusha
sbb
in
aaa
idivb
nop
scas
xor
push
rcrl
cli
or
xor
daa
dec
dec
dec
inc
cmp
sti
lock
jns
add
arpl
mov
mov
inc
and
outsb
add
mov
xor
imul
push
popa
mov
jg
in
fidivrs
outsb
mov
or
xorb
sbb
dec
push
jmp
sub
scas
cmp
stos
rorb
cs
bound
ret
jmp
out
and
xor
cmc
cmp
out
push
mov
sbb
ret
in
aam
js
aaa
jg
lock
cmp
stos
jp
or
cmpsl
xchg
xchg
in
dec
mulb
ja
mov
cltd
adc
mov
loope
aam
mov
sbb
rorb
pop
shrl
push
inc
loope
mov
and
lds
jno
pop
adc
cmpsl
xor
xor
cmc
lods
int
addl
fcmovnb
fisubrl
jmp
add
and
lock
inc
cmp
pop
stos
xor
xor
sbb
clc
frstor
mov
sub
and
dec
sub
and
sub
inc
mov
mov
xor
andl
rorb
cmc
cli
mov
jmp
xor
pop
add
lret
mov
mov
xchg
adc
int3
mov
movhps
test
imul
jns
sbb
jbe
jmp
or
add
stc
scas
or
push
fisubs
or
mov
iret
dec
jnp
gs
push
sahf
mov
mov
inc
test
sbb
mov
cmp
imul
cmp
scas
out
shl
sbb
sbb
test
js
pop
loopne
int3
call
pop
cmpsb
push
aaa
es
lahf
and
xchg
mov
shl
daa
push
cmpsb
aaa
aad
sub
lret
shrb
sub
in
push
in
dec
push
ret
nop
xchg
rorl
inc
stc
mov
jl
or
sahf
mov
ss
dec
adc
repz
xchg
in
mov
fwait
shlb
mov
cmpb
lahf
scas
add
xor
loopne
and
ret
jo
add
cwtl
ret
sub
ret
mov
push
pop
cwtl
loop
pop
or
and
pop
sbb
mov
mov
sub
stos
out
xchg
pushf
je,pt
pop
push
xchg
shlb
ss
add
sub
pusha
es
in
idivb
or
push
in
dec
mov
mov
sub
dec
gs
add
and
cwtl
cmp
scas
andb
ficomps
icebp
add
cmp
adc
push
out
mov
scas
push
xchg
jp
daa
inc
and
jns
inc
jl
popf
pop
lret
sti
fwait
sbb
addr16
push
mov
dec
and
shll
testl
leave
xchg
push
test
pusha
aas
test
pop
jecxz
pop
in
push
lods
mov
sub
fsubr
das
inc
das
cmc
cmp
inc
sub
popf
mov
xchg
add
int3
dec
and
test
push
out
pop
push
addr16
scas
push
mov
xchg
fcoml
cmp
shl
js
repz
mov
enter
inc
ds
js
in
xor
and
std
add
outsb
or
es
mov
out
and
mov
push
adc
stc
andb
lret
rcrb
xor
mov
sarl
or
push
fidivrs
mov
sarl
idiv
and
inc
xchg
das
cmp
xchg
sbb
push
cld
push
xlat
sarl
aaa
mov
adc
hlt
fdivp
add
inc
sub
iret
jbe,pt
es
sahf
mov
popf
push
rolb
cmc
rorl
aad
in
mov
imul
sub
addr16
xchg
add
push
xor
push
push
rcrb
add
sbb
insb
outsb
mov
fcomps
mov
stc
fcmove
das
pop
or
sarb
icebp
pop
adc
jp
mov
testb
sub
mov
inc
xchg
sbb
mov
popa
add
inc
inc
jle
cmp
daa
inc
lret
mov
test
pop
subb
cmpsl
cmp
sbbb
push
push
loop
out
scas
xchg
iret
jg
fiaddl
fcomps
push
pop
jo
icebp
cmpsb
lcall
and
jge
loopne
loop
and
lods
inc
inc
movsb
bound
test
or
jae
and
std
cmp
mov
cwtl
cmp
or
repnz
jl
std
push
lret
rcrl
dec
jmp
fldcw
in
xor
add
and
repz
leave
and
xor
cmp
nop
loope
imul
inc
pusha
sub
sbb
loope
popf
cmpb
lcall
test
lahf
mov
in
pop
mov
rep
lret
cmp
push
popf
fbld
cld
loopne
out
stc
pop
orl
jmp
shlb
xchg
xchg
dec
out
xor
loope
out
lds
fxch
xchg
pop
lret
hlt
xlat
mov
mov
mov
lods
cmpsb
sbbb
insb
loope
dec
xchg
roll
add
rorl
mov
xor
mov
xchg
ficoml
arpl
ret
adcb
jo
insb
xchg
sbb
inc
sub
pop
xor
mov
ljmp
dec
dec
sbb
pop
cwtl
sbb
mul
sarl
mov
pop
push
jno
test
pop
inc
fwait
outsb
fiadds
jmp
dec
and
out
daa
dec
pop
test
dec
jmp
mov
mov
sarb
pushf
divl
scas
lock
pushf
call
pop
and
test
cmp
sbb
jne
add
es
adc
sub
cmpsl
in
add
mov
cmc
fidivs
jmp
cmp
test
mov
cmp
mov
inc
es
cmp
sbb
cmpsb
hlt
pushf
xchg
imul
xor
loopne
adc
cmpsl
sub
xor
popa
outsl
mov
cmpsb
add
aad
or
sub
mov
mov
add
xchg
cwtl
movsb
lods
xor
bound
jecxz
outsb
mov
ds
add
sub
loop
add
data16
push
xor
jl
and
cmpsl
popa
xor
push
push
mov
loop
idivl
jg
jb
and
testl
cmpsb
pop
sbb
test
stos
jb
inc
xor
in
jae
sbb
adc
pop
adc
sbb
sub
scas
jae
fiaddl
cwtl
daa
xor
and
pop
mov
cmp
stc
mov
popf
shlb
aas
les
pop
lret
fcmovnu
jge
lahf
mov
addr16
jmp
sbb
sub
xlat
stos
out
out
push
fidivs
int3
mov
mov
inc
pop
call
loopne
iret
cmp
jo
test
mov
data16
push
or
push
mov
mov
aad
sahf
call
fwait
dec
cmp
sub
inc
arpl
cmp
in
mov
pop
test
mov
andl
mov
inc
fisttpl
js
aaa
imul
iret
or
fs
adc
xchg
daa
cwtl
arpl
in
push
and
arpl
ret
jo
enter
or
popa
cmpsl
add
xchg
cwtl
jle
pop
mov
ret
cld
fisubrl
out
xlat
mov
ja
inc
jmp
sbb
mov
or
daa
sbb
sbb
cmpb
fadd
fcomip
inc
add
mov
dec
shr
dec
inc
pop
cmp
roll
xchg
jge
xchg
ret
sarb
push
ret
sbbl
mov
xor
imul
fwait
arpl
add
mov
pushf
repz
popa
mov
sub
cmc
xchg
cmpsl
xor
inc
push
and
push
cmp
and
int
testb
add
mov
push
or
mov
enter
xchg
sbb
push
mov
imul
mov
lea
mov
xor
insl
outsl
jae
orb
adc
outsl
cld
mov
fmuls
push
pop
sbb
scas
lret
add
ret
inc
cmp
inc
jp
mov
cli
dec
xor
repz
out
mov
and
jle
loope
rcrl
add
or
ficomps
outsl
pop
add
mov
cmp
dec
daa
mov
lods
dec
pop
in
jns
push
pop
fwait
inc
push
or
xor
lods
sti
adc
lock
ljmp
push
mov
jecxz
rolb
mov
sti
shll
arpl
and
push
pop
bound
repnz
jle
jmp
sbb
out
int3
pop
jecxz
lock
mov
xor
add
push
popa
pop
jmp
out
stos
jne
imul
adc
popa
ret
test
in
jns
arpl
in
mov
push
rclb
out
out
adc
xchg
sbb
and
cmc
lea
ja
jle
mov
xchg
jae
cmp
jmp
lds
sub
aad
or
xor
mov
xchg
mov
cli
inc
adc
adc
shr
xchg
adc
jle
loope
jns
loop
xchg
lods
dec
dec
cmp
daa
addb
lret
in
loop
add
icebp
jp
pop
jns
sbb
pop
mov
pop
aaa
out
lods
ds
xlat
sub
rcll
dec
mov
subl
xor
int
movsb
push
ja
sub
testb
add
add
fs
les
mov
push
imul
lret
dec
loope
jbe
xchg
and
pop
cmc
and
out
std
test
negb
jmp
std
and
test
push
shl
and
dec
mov
cmp
sbb
rorb
jg
sahf
gs
xor
repz
sbb
sub
fsubl
mov
bound
arpl
into
sub
cmc
push
jne
test
jns
and
adc
gs
lock
mov
lret
into
sbb
push
das
shlb
pushl
mov
jb
and
push
outsl
imul
pop
or
add
cmp
mov
iret
mov
cmp
inc
lods
pop
daa
lahf
push
xor
test
adc
and
fstpl
inc
fcomps
out
mov
aam
adcl
mov
jle
stc
xchg
sti
sbb
xchg
or
xchg
aas
pop
mov
pop
outsb
adc
cmc
cmc
inc
pop
mov
xchg
pop
or
daa
fcomp
jecxz
aad
adc
ja
imul
lret
call
add
and
jno,pn
fcmovne
lds
xchg
and
mov
or
movsb
std
push
repz
adc
sbb
enter
cli
or
sub
jp
andl
xor
or
stos
pop
dec
int3
push
dec
and
pop
pop
or
aam
ljmp
imul
out
jmp
rolb
fs
and
pop
enter
mov
mov
js
xchg
aam
mov
lods
pop
pop
xlat
cs
lea
int3
push
outsb
jne
mov
xor
sub
arpl
cmpsl
iret
rorl
test
sahf
pusha
cmp
xchg
mov
adc
loop
movsl
data16
mov
xchg
sbb
gs
add
test
push
jl
jle
sahf
jg
int3
adc
push
mov
es
loop
ret
mov
push
dec
loopne
repz
cmp
arpl
stc
ret
lock
inc
add
lods
test
xchg
and
imul
xchg
loope
mov
and
in
pop
dec
andl
mov
pop
mov
icebp
jnp
mov
loop
sbb
dec
push
sbb
xchg
test
dec
mov
call
dec
imul
into
mov
sub
scas
xor
nop
lock
lret
mov
repz
loopne
les
shlb
shl
loop
js
std
test
movsl
push
mov
and
pop
and
push
into
jl
cmp
loop
push
leave
pop
movsl
imul
cmp
adc
push
pop
inc
adc
test
js
adc
push
int
dec
and
jne
mov
ret
cmp
rcrb
dec
fwait
hlt
ja
cmp
jecxz
cmpsb
les
fmull
std
lret
jo
ret
nop
cmp
jbe
test
xor
push
mov
jno
adc
in
cli
adc
mov
cltd
xchg
pop
sub
xchg
add
push
ds
das
xchg
pop
push
jp
test
pop
scas
movsl
data16
jne
insl
pop
into
mov
test
aaa
arpl
out
pop
xchg
enter
add
add
insl
lods
insl
cltd
int3
cmp
xchg
pop
fs
roll
push
jnp
mov
adc
subl
int
test
loop
jo
push
dec
popf
lods
cmc
push
add
push
cmpsl
cmc
lea
fimuls
xchg
dec
mov
sbb
test
add
mov
ss
cwtl
adc
loop
imul
ret
lahf
aam
jnp
outsl
ror
xor
xor
mov
ja
inc
push
in
mov
stc
out
add
add
dec
jb
fcmovbe
jge
int3
cmpsb
add
and
inc
or
jb
insb
and
jmp
jg
fiaddl
push
daa
add
in
repz
or
xchg
mov
add
xchg
push
or
pop
push
mul
push
lea
pop
jo
sbb
jnp
ja
sub
xor
jl
bound
divl
int
inc
mov
ss
xor
add
loop
lcall
cmpsb
mov
mov
sbb
jne
and
mov
testb
push
push
je
adc
cmp
sbb
es
sbb
dec
adc
popa
scas
fldt
fists
fsubrs
pushf
popf
mov
aam
out
push
cmp
xor
fs
clc
mov
and
fs
push
out
dec
adc
rcll
pop
pop
ret
adc
in
insl
mov
inc
test
js
icebp
jge
popa
iret
pusha
arpl
insl
rclb
mov
fwait
adc
and
insb
scas
testl
lods
ret
es
xchg
mov
sub
cmp
or
ret
pop
sbb
and
addr16
hlt
ds
aad
mov
in
loope
daa
mov
and
push
imul
push
jno
hlt
xor
jmp
sub
and
bound
stos
jns
pop
cmpb
std
mov
clc
push
mov
pushf
or
mov
out
xor
lahf
nop
push
pop
lea
lcall
inc
aam
leave
idivl
dec
fwait
stos
xchg
ljmp
lods
mov
or
lret
pop
out
and
mov
in
jg
mov
push
les
xchg
and
and
jg
in
out
jno
scas
out
test
mov
and
xchg
sbb
sbb
xchg
loope
pop
cmp
movl
addb
fsubrp
shll
outsl
dec
sbb
mov
pop
stos
jns
sub
loope
ret
mov
movsb
or
decl
ja
jle
sbb
jae
fimull
ret
insl
or
stos
cmp
int
xchg
dec
adc
inc
inc
mov
int3
jle
xchg
stos
ds
and
adc
sub
fcmovu
jnp
jne
ret
rcrb
mov
scas
test
add
lahf
nop
loopne
pushl
push
lods
and
jns
pop
dec
jmp
data16
or
mov
xchg
movsb
mov
aam
pop
sbb
push
xor
ficoms
and
cwtl
movsl
hlt
xor
ss
mov
call
test
mull
push
xchg
jle
push
rorl
orl
adc
popa
lods
cmpsb
adc
add
int3
in
mov
out
add
jl
pop
mov
leave
sbb
xor
inc
or
jno
mov
and
in
sbb
out
fwait
out
ds
pushf
mov
xchg
aaa
mov
push
add
out
aas
cmpb
jae
xchg
lret
jecxz
xchg
vmread
aam
pusha
lds
je
stc
fs
mov
and
mov
test
mov
adc
pop
jbe
xchg
sub
test
adc
sbb
xor
or
push
xchg
mov
filds
mov
lret
rcrb
shll
popf
jge
mov
inc
jg
js
jp
mov
sti
mov
jns
push
leave
roll
mov
dec
lods
out
std
xchg
imul
sbb
mov
rolb
scas
ds
pushf
cmp
pushf
add
pop
sbb
sahf
or
add
and
fsubr
fiadds
mov
pusha
and
adc
jl
cmp
fdivrl
jg
jae
xchg
mov
inc
jb
xchg
mov
int3
fdivl
mov
xor
scas
sbb
push
xchg
fdivp
sti
adc
mov
dec
xor
stos
xorb
in
xor
xor
push
mov
dec
mov
push
aad
pop
jb
test
dec
dec
pusha
cmp
adc
dec
jno
aam
subb
add
xor
mov
dec
push
sub
insl
xor
xchg
lret
test
fwait
inc
push
sbb
in
sbb
pop
and
mov
xchg
rol
jmp
lahf
mov
shrl
jp
cmp
rcr
xchg
push
insl
jne
scas
lret
inc
or
sub
icebp
mov
mulps
mov
nop
hlt
dec
out
pop
sub
lods
push
mov
adc
mov
sub
xchg
movsl
fiadds
and
adc
add
or
imul
pop
pop
idiv
and
je
dec
fcoml
cmc
xchg
cmp
cltd
mov
mov
fadds
push
test
add
jecxz
into
test
sub
pop
in
sub
int
and
sub
adc
mov
jbe
lea
sbb
fwait
mov
popf
jmp
aam
cmpsb
imul
mov
mov
mov
insl
lds
mov
mov
or
push
sbb
cmp
test
lea
pushf
sbb
and
mov
mov
ljmp
lock
nop
stos
push
xor
cs
int
aas
mov
test
mov
into
jle
dec
fcomip
movl
mov
lahf
pop
jl
jns
dec
js
mov
dec
loop
mov
or
sahf
pop
and
pushf
or
cwtl
xchg
pop
push
mov
sub
cmc
out
enter
outsb
fdivp
or
mov
mov
or
xchg
push
and
fs
cld
repz
jns
aad
xchg
inc
adc
xorb
adc
fcoms
xor
pop
cmp
xor
pushf
hlt
stos
lock
ret
lret
sub
mov
je
mov
push
push
mov
mov
sub
out
iret
repnz
dec
ret
jno
loope
daa
lret
int
cmp
push
jmp
repz
mov
int
arpl
sar
ss
push
pop
jo
movsb
cmp
jmp
mov
add
and
mov
loopne
imul
sahf
insb
fwait
adc
sbb
add
jg
mov
inc
xor
jbe
xchg
lahf
push
test
in
pop
push
pop
je
push
andl
out
sub
xchg
mov
sbb
jnp
mov
lock
mov
sahf
std
dec
xchg
dec
and
adc
add
add
mov
inc
push
aad
xor
cmp
repz
adc
xchg
pop
test
push
dec
push
jmp
push
mov
or
sbb
or
add
js
addl
stos
add
xchg
imul
xchg
xor
push
or
mov
dec
or
pop
lods
dec
dec
jg
sbb
push
or
sti
inc
rclb
imull
pop
shl
mov
int
sub
xchg
adc
cltd
inc
sti
sub
and
lods
int3
sbb
cld
icebp
sub
mov
lea
xchg
xchg
leave
jmp
icebp
lret
scas
popa
push
jge
jb
or
sbb
js
cmp
imul
jp
cmpsl
sti
cwtl
rcll
mov
andb
push
in
push
cmp
pop
addl
fimuls
sub
mov
cmp
sub
adc
dec
pop
mov
je
xor
xlat
data16
mov
lods
fcomi
sub
nop
mov
imulb
xor
push
xor
mov
xor
cmp
test
arpl
ror
loop
dec
push
lea
lahf
into
sahf
xor
testb
sbb
push
out
loop
call
fisttpl
fisttpl
pop
loope
mov
add
cltd
es
adc
pop
filds
xchg
jo
cltd
and
jne
inc
pop
loopne
xor
and
dec
sub
fstpt
xor
jle
xlat
into
and
or
imull
pop
sti
in
popf
mov
xor
or
sub
outsb
cs
loope
cmp
out
stc
icebp
mov
dec
cmc
push
inc
cmpsb
loop
pop
cld
mov
repnz
jle
loopne
or
jae
call
stc
cs
jb
jno
fwait
dec
sahf
jge
xor
sub
popf
dec
dec
mov
in
mov
cmc
aad
push
outsl
test
ret
xchg
movsl
imul
inc
xor
or
mov
loop
test
out
jp
movsl
pop
pop
outsb
and
movsl
mov
mov
sbb
js
insb
shrl
cmp
pop
mov
or
and
jo
or
movsl
or
in
jl
mov
mov
scas
test
idiv
aas
pusha
pusha
clc
add
pusha
cmpsb
dec
jne
mov
inc
adc
shr
cld
or
popf
cmp
or
arpl
adc
je
sbb
fidivs
mov
bound
inc
scas
xchg
sub
jb
jl
push
bound
push
mov
add
xchg
punpckhwd
mov
jne
pop
aas
rorb
out
xchg
nop
xchg
jp
pop
jnp
inc
repnz
jne
lods
aaa
add
roll
aam
lahf
dec
mov
mov
test
mov
pushf
jl
fdivs
ret
lock
frstor
xchg
sbb
mov
and
sbb
sub
mov
in
int3
call
add
mov
fisttpll
add
and
lret
cmc
dec
fisubrs
mov
std
cltd
out
pusha
es
ret
and
mov
notb
sbb
hlt
adc
movsl
mov
jne
pop
movsl
sub
std
adc
add
jmp
dec
fists
rolb
sti
mov
push
das
jl,pt
das
sbb
mov
sub
or
sbb
dec
mov
lds
das
sub
adc
mov
pop
xor
stos
addr16
sar
jno
mov
repnz
test
mov
andl
call
ds
xchg
mov
aam
inc
sbb
push
inc
push
push
mov
sub
xchg
xor
jmp
pop
xchg
xor
sbb
shll
jecxz
sbb
je
fdiv
popa
fistpl
push
jl
mov
push
or
insl
cld
test
fcmovb
dec
jae
or
sub
in
cmp
ja
ja
mov
stc
add
scas
sub
mov
sbb
pop
std
cmp
into
jb
shll
out
jle
xor
rol
iret
iret
mov
ret
add
cmp
dec
stc
jnp
sub
mov
jns
cmc
insb
adc
lds
push
cmpsb
and
and
je
outsl
sbb
in
add
data16
ret
jb
add
outsl
cmpl
pusha
jnp
ljmp
out
adc
les
gs
lds
ljmp
lods
push
lahf
stos
adc
xlat
adc
cltd
add
push
movsb
orb
cmpsb
cltd
mov
dec
mov
shl
lret
jns
cmp
sahf
mov
ret
dec
test
mov
popa
jbe
call
mov
cs
mov
lea
les
mov
hlt
cmp
popa
mov
push
inc
pop
xlat
aaa
inc
insb
cld
mov
outsb
jle
xlat
pop
cmc
dec
sbb
std
dec
in
out
push
jb
leave
popa
ja
call
cmp
ficompl
cmp
lds
imul
adc
mov
add
cmc
cmp
sub
pop
aaa
stos
jno
push
pop
mov
out
cmp
and
inc
pop
rcr
pop
xlat
arpl
inc
cmp
movsl
fsubrs
std
cmp
sbb
push
or
xchg
imul
pop
out
inc
push
pop
inc
das
or
repnz
adc
mov
mov
pop
push
cmc
sub
scas
movsb
lea
sbb
pop
push
dec
mov
lahf
stos
addl
jg
xor
scas
inc
movsl
and
push
or
mov
in
mov
sub
ret
lea
aad
mov
fisubl
out
mov
out
mov
xchg
rorb
sub
movsb
mov
clc
jae
dec
mov
sahf
adc
stc
cs
and
and
xlat
mov
xchg
call
sbb
add
out
mov
xchg
or
rolb
add
loop
jp
mov
pusha
fisubs
fsubrl
cwtl
push
or
sub
xchg
out
xor
dec
cmp
cmc
add
jp
fsubrs
int
mov
dec
push
daa
push
cmp
idivb
mov
out
cmpsl
ficoml
or
rorb
and
addr16
mov
and
lods
jecxz
push
jno
shrl
in
iret
jmp
dec
sbb
imull
mov
mov
jbe
aam
cmp
das
in
jae
pushw
sub
dec
xlat
scas
je
xor
push
arpl
xor
jg
cmp
cmpsl
or
gs
dec
repz
pop
notl
or
xchg
adc
jmp
pop
outsb
daa
in
pop
mov
xchg
aad
ret
imul
xrelease
or
cmpsl
mov
mov
sbb
xor
repz
sub
rol
push
xchg
cmpsl
add
lcall
movsb
rcl
mov
and
nop
lcall
inc
inc
xor
lfs
mov
sti
adc
jne
dec
or
xchg
ljmp
sbb
mov
jo
int
jns
and
lahf
sub
jne
mov
jnp
xchg
adc
xchg
daa
shl
scas
sbb
aaa
mov
pushf
fistpll
stc
mov
enter
pop
cmp
ja
mov
pop
mov
ret
and
xlat
pop
push
adc
pop
jmp
jnp
mov
jae
pop
loope
sbb
das
xor
int
cltd
xchg
aad
add
jge
test
mov
fistpll
inc
fucomp
or
in
aas
mov
mov
xchg
aaa
shl
lahf
sbb
daa
mov
popf
scas
leave
pop
xor
jg
mov
iret
pop
cmp
mov
mov
pop
sub
out
outsl
mov
xlat
stc
push
mov
loope
sbb
rdtsc
jnp
mov
jae
pop
inc
jmp
cmpsl
jmp
fldt
cmp
fldl
jecxz
dec
fdivrl
and
or
add
push
jns
xor
xchg
mov
dec
aaa
sbb
xchg
lahf
shrl
imul
cmc
jg
mov
mov
iret
pop
cmp
ja
mov
pop
mov
out
ret
jne
mov
push
inc
mov
mov
jnp
mov
jae
pop
mov
dec
cmpsl
sbb
xor
xchg
leave
xchg
test
push
or
dec
fidivrs
pop
stos
xchg
addr16
leave
out
sbb
sar
aas
lods
dec
push
xchg
sti
xorl
or
orl
jne
cmp
mov
lret
lret
pop
and
imul
iret
in
jns
mov
dec
jns
sub
cmp
pop
push
imul
shll
and
mov
mov
outsl
cmpsl
mov
sub
xchg
stos
dec
jp
lret
jecxz
aas
mov
jae
scas
or
mov
push
mov
push
decb
stos
fwait
xchg
shlb
jg,pn
or
push
loop
sahf
out
dec
jnp
daa
xor
dec
lahf
lcall
inc
movsl
insb
xor
push
lahf
popa
dec
cmp
iret
xchg
sbb
sub
add
pop
aaa
mov
test
aad
popa
sti
popf
mov
mov
lret
sbb
inc
cmp
xchg
jecxz
fwait
cmp
call
sti
in
xor
mov
fcoml
jae
mov
pop
mov
jl
sub
add
dec
imul
lods
jnp
pop
xor
jae
das
lahf
sti
xchg
daa
inc
arpl
mov
xchg
shr
fwait
jae
daa
add
fisttps
xor
out
pop
cmp
test
fidivrl
mov
jb
stos
xlat
pop
cmc
cmp
fisttps
repnz
push
xchg
pop
or
xchg
xor
jmp
or
mov
in
jmp
push
cmpsl
nop
push
jecxz
cmpsb
ss
jns
movsb
in
pop
repz
lock
addr16
xchg
ja
scas
inc
mov
adc
out
adc
dec
pop
js
cmp
clc
mov
inc
jae
mov
mov
or
jae
pop
loop
cmpsl
fcoml
mov
xchg
test
cmp
call
add
cld
int
mov
dec
pop
sbb
mov
nop
xchg
dec
out
into
aam
insl
sub
shrl
je
sarb
repz
aad
es
dec
and
repz
sbb
enter
es
adc
mov
pop
xor
lds
das
cmc
jge
pop
lods
push
jns
add
cmp
jb
popf
hlt
dec
int3
cmpsb
add
jno
lret
push
xor
cmp
out
lds
or
push
mov
xchg
mov
fisubrl
mov
out
push
clc
syscall
pop
aam
fdivp
cs
nop
cmp
lock
sub
mov
test
cwtl
cmp
test
js
mov
insb
ret
mov
xchg
push
inc
xchg
inc
xlat
icebp
mov
sbb
push
lock
mov
iret
ret
jmp
in
push
mov
mov
inc
sub
sub
push
mov
in
add
sub
out
inc
data16
add
or
jge
sub
test
push
mov
cmpsb
sub
mov
xlat
arpl
in
xchg
jno
and
sub
xchg
pusha
mov
in
dec
push
sbb
es
add
mov
adc
xchg
hlt
push
je
and
movsb
mov
adc
int3
stos
lahf
push
jle
and
lcall
pushf
in
sub
and
pop
inc
xchg
cmpsb
mov
ret
mov
loope
sbb
in
or
cltd
insl
adc
test
sbb
adc
fnop
adcb
mov
pop
jle
mov
jne
mov
addr16
enter
lea
cwtl
and
push
cmp
insl
scas
nop
scas
stos
and
xor
into
out
gs
adc
dec
inc
jecxz
outsb
daa
mov
push
mov
inc
push
in
jge
add
xor
aam
xchg
lcall
mov
jg
sub
mov
subl
ss
sti
pusha
sbb
sarb
inc
clc
cmpl
xchg
push
popa
or
lods
arpl
xchg
xor
push
mov
xchg
cmp
int
push
lcall
out
cli
dec
movsb
push
mov
push
gs
nop
cmp
cli
stos
pop
xchg
popf
lcall
xor
repnz
jo
jmp
je
or
xchg
cmp
clc
fpatan
fldt
test
test
jle
mov
mull
dec
sbb
js
push
sub
sahf
test
es
inc
enter
jle
aad
jbe
and
je
mov
jmp
jnp
push
sub
lods
imul
inc
add
mov
pop
cmp
nop
ds
jns
or
or
insb
pop
test
adc
mov
out
nop
sbbl
lcall
dec
stos
jl
ds
out
mov
subl
neg
lods
dec
inc
jo
loope
es
push
test
xor
fildll
push
push
dec
dec
and
sbb
xchg
stos
rolb
inc
imul
fsubl
pushl
xchg
inc
adcb
cs
adc
pop
cmp
xor
clc
push
test
les
leave
outsb
scas
mov
ret
xchg
cmp
push
lock
xor
xchg
popf
xor
push
xchg
pusha
push
push
scas
pop
jl
outsb
dec
add
sarl
inc
jle
or
leave
sbb
aam
das
dec
sub
jb
in
fcoml
cmp
imul
jl
repnz
nop
ljmp
shlb
dec
cmp
jmp
mov
in
mov
cmp
adc
or
insb
mov
test
sub
hlt
jbe
das
xor
rorl
cmc
and
repnz
int
push
popa
mov
in
adcb
mov
xchg
mov
pop
es
sub
push
aas
pusha
addl
cmp
popl
sub
sub
ficompl
movsb
adc
jmp
add
mov
cli
into
dec
xchg
lcall
leave
outsb
jns
pushf
ret
push
add
push
jnp
out
lret
repnz
and
and
xor
push
push
dec
push
jno
pop
cmp
movsl
jl
fistpll
mov
clc
mov
mov
fwait
mov
mov
mov
sbb
in
cld
sbb
orb
out
sub
mov
in
lock
subl
inc
mov
push
jp
push
out
dec
mov
leave
out
cmp
pop
xchg
or
cmpxchg
fs
cmpsl
data16
sub
sahf
stos
xlat
cltd
sbb
test
into
xor
roll
dec
cmp
cltd
cmp
fisttpl
mov
xchg
adc
mov
pop
out
test
and
imul
adc
dec
lret
lods
lahf
into
nop
cmpsw
mov
je
faddl
xchg
cmpsb
push
mov
push
xchg
inc
or
dec
cmp
aaa
dec
add
xchg
jbe
dec
js
push
outsl
jge
dec
xchg
xchg
movsl
and
pusha
mov
aam
cmc
xor
mov
add
sub
nop
push
push
into
mov
fs
or
sahf
iret
and
sahf
int3
sbb
sbb
mov
mov
sub
into
pop
fsubl
hlt
ret
imul
cmpsl
scas
lahf
in
xor
xchg
mov
sbb
or
sub
lret
orb
adc
inc
leave
movsl
sahf
scas
mov
sub
xchg
inc
sub
mov
mov
or
fwait
movsb
movsl
mov
fs
cwtl
xchg
sti
es
icebp
adcb
dec
dec
jns
lods
mov
ficoml
cmp
call
pop
jmp
xor
cwtl
adc
and
cmp
jno
sbb
lock
out
and
icebp
mov
fs
das
mov
lahf
sub
enter
nop
adc
fwait
mov
int
inc
shlb
xchg
and
mov
push
inc
shll
mov
les
fldl
mov
loope
xor
cmpsb
hlt
ret
adc
cmp
sbb
inc
ljmp
in
inc
jmp
inc
ret
cmc
lods
mov
lea
mov
fisubrs
jo
push
leave
push
mov
cwtl
inc
rclb
push
fcompl
out
ja
movsb
xorb
jno
dec
test
xchg
push
ret
hlt
lock
fidivrs
push
mov
or
pushf
xor
lcall
fsubl
mov
loopne
xor
ss
add
mov
or
mov
jle
mov
sub
mov
pop
movsb
xchg
bound
sti
add
and
jbe
negb
dec
ret
das
xor
lock
sbb
push
sub
push
inc
mov
scas
in
adc
dec
clc
int
mov
rcll
insb
in
cmp
mov
movsl
mov
jae
mov
fsts
or
loopne
or
out
into
mov
sbb
inc
push
push
cmp
lock
xchg
dec
sub
mov
out
das
sub
adc
add
sahf
inc
inc
xchg
aas
pop
push
addl
lahf
sahf
pop
cmc
sub
loopne
mov
enter
mov
or
cmp
call
call
imul
lods
sti
ljmp
mov
pop
xlat
xor
lods
jo
adc
fildll
movsb
sub
in
dec
mov
push
cwtl
mov
enter
push
sub
popf
and
xor
je
jp,pn
mov
push
leave
cmp
adc
pop
jle
adc
mov
or
addb
std
mov
sub
inc
lock
fidivs
test
out
or
hlt
push
or
call
outsb
xor
pop
lcall
std
or
sbb
daa
sub
mov
jns
add
loop
mov
sub
lcall
stos
pop
lds
inc
jnp
lods
push
popf
incl
push
pusha
or
sub
nop
mov
mov
push
jl
cmp
rcll
shrb
inc
mov
xor
push
xchg
dec
pop
or
gs
mov
outsl
dec
cmp
pusha
push
fwait
jo
sti
out
test
movsl
int
xchg
push
or
xchg
mov
andb
das
addr16
sahf
nop
aad
stos
nop
arpl
cmp
mov
xchg
jl
push
out
nop
int
mov
test
jmp
arpl
dec
cs
inc
mov
pushf
outsb
or
or
xchg
icebp
xchg
adc
clc
popa
mov
dec
add
cmpb
sbb
jp
or
cmpsb
mov
divb
push
inc
movsb
mov
mov
jnp
pop
and
pop
out
icebp
and
rclb
sub
sbb
cmpsl
sub
dec
add
push
mov
push
pop
lcall
push
jg
jb
out
xor
lock
orb
xchg
lods
cmp
xor
sahf
lea
stos
decl
pop
outsl
out
in
pop
sahf
dec
fwait
or
pop
enter
pop
orb
ficoml
lcall
ret
sub
mov
out
jp
xor
aam
popa
test
in
aaa
ljmp
jle
sbb
inc
in
mov
mov
pop
and
push
cmp
jb
call
push
ljmp
sti
cmp
xor
mov
dec
out
out
fmul
lahf
fnsave
or
dec
lret
inc
sbb
xchg
js
push
jl
fimuls
in
and
push
dec
std
inc
mov
lcall
jp
jb
into
xor
adc
enter
test
xlat
pusha
rclb
sbb
xor
cltd
adc
jmp
ds
cmp
cwtl
out
mov
mov
push
push
mov
imul
lods
repnz
and
cmp
add
or
fs
xlat
cwtl
mov
insl
sub
mov
out
sbb
dec
xchg
je
cmp
inc
ret
movsb
push
lcall
cmp
push
cmp
jno
mov
sub
xchg
iret
das
shlb
ds
cwtl
add
ret
call
pop
scas
cs
pop
adc
add
and
inc
mov
push
jge
fs
ja
or
pushf
mov
pushf
cs
aas
aam
mov
pop
mov
jl
xchg
mov
mov
fwait
lds
jp
shlb
adc
leave
mov
lcall
xor
loope
xchg
inc
stc
sub
popa
or
js
push
in
mov
xor
or
aam
xchg
out
push
or
sub
out
cli
imul
hlt
into
inc
shrb
cmpsl
shr
mov
xor
jp
or
jae
and
call
adc
imul
lock
bnd
and
and
jb
cli
test
repz
push
mul
divb
outsl
mov
test
jne
mov
add
cmp
inc
int3
hlt
and
xchg
call
inc
push
xor
xchg
xchg
mov
mov
mov
enter
bound
dec
dec
add
xchg
cmp
shlb
movsl
pop
inc
and
push
pop
pop
out
and
sub
cmc
push
ja
and
decl
scas
pop
sahf
shll
enter
in
lock
stos
imul
andb
movsl
mov
mov
mov
sbb
inc
mov
cmp
cmc
jle
cmpsl
js
cs
mov
fsts
arpl
cmp
xor
mov
outsb
mov
aaa
add
mov
fs
out
push
mov
sub
test
cmpsb
loopne
enter
mov
std
mov
imul
fcomps
lods
outsl
in
mov
xchg
push
sub
addb
es
leave
mov
hlt
pop
cs
mov
xor
xor
push
jle
mov
fwait
and
or
and
pop
mov
loopne
aam
mov
xor
ljmp
ss
jecxz
cmp
out
js
das
adc
push
cmp
xor
lock
push
insl
add
mov
out
push
adc
cld
xchg
jbe
out
pop
inc
popa
pop
enter
out
mov
mov
jge
mov
inc
push
pop
aaa
stos
test
shlb
adc
push
incl
lret
incl
imul
das
xor
lods
pop
pop
xor
mov
jns
push
fsubs
test
pop
jge
cwtl
xor
cmp
cld
je
pusha
jb
add
push
push
pop
pop
xchg
les
arpl
or
outsb
dec
out
jp
inc
and
stos
and
movb
aaa
mov
jno
mov
mov
lods
sub
or
adc
pusha
insb
jp
loop
jne
mov
loopne
lods
mov
xchg
mov
add
clc
repnz
dec
cli
mov
nop
fabs
mov
or
mov
inc
push
lahf
rcll
lcall
aam
aam
das
push
into
xchg
ret
inc
push
push
xchg
adc
mov
sbb
repnz
loop
fdivrs
inc
and
mov
imul
mov
daa
js
inc
daa
sbb
mov
out
in
add
dec
repz
outsb
mov
fucomp
les
cmp
or
mov
sbb
mov
ljmp
pop
addl
sub
imul
push
insb
xchg
sbb
sbb
imul
out
xor
xchg
pop
push
or
sbb
jno
push
rcrl
mov
xchg
insb
jns
xorl
sar
in
xchg
mov
and
mov
inc
cmpsl
cltd
shll
in
jl
pusha
and
clc
mov
add
mov
xchg
jnp
push
mov
hlt
sbb
out
lods
repz
insb
pop
test
jo
add
mov
lea
adc
in
jmp
rcll
push
aam
sbbl
test
pop
sar
leave
mov
cmp
add
rcrl
xchg
mulb
ret
jae
aas
shll
add
inc
test
pop
xchg
pop
nop
mov
mov
cwtl
pop
and
mov
add
sbb
sub
xchg
fcoml
in
jmp
xchg
xor
and
into
je
jecxz
aad
mov
das
test
stc
loopne
dec
and
movaps
mov
push
jae
jg
imul
xchg
cmpl
jne
push
lahf
cmp
mov
sub
jno
bound
fdivp
mov
leave
and
sbb
push
shrb
cmpsb
pop
push
pop
ss
dec
testw
push
pusha
vmwrite
adc
imul
je
mov
hlt
cs
jns
jns
popf
jmp
xchg
fdivrl
cmp
out
cmc
pop
push
sbb
and
bound
cmp
out
mov
mov
call
pop
es
and
dec
pop
ds
and
stos
pop
test
xor
cmpsb
loope
cmc
sar
mov
out
push
mov
pop
adcb
clc
into
es
cs
mov
mov
add
cs
scas
xor
jp
dec
xchg
cld
sbb
mov
mov
mov
push
aam
push
jp
rcrb
xchg
inc
push
sbb
mov
xchg
mov
jbe
mov
pop
adc
dec
pop
mov
repz
aad
fstpt
scas
imul
gs
mov
cltd
lret
mov
push
les
lods
insb
repnz
orl
rclb
add
or
cmpb
mov
cmp
mov
repnz
imul
dec
ficomps
dec
jecxz
lahf
xchg
adcb
lahf
rorl
sar
mov
or
push
rcrb
clc
iret
js
mov
push
int3
sbb
sahf
cmpb
je
in
loopne
push
icebp
orb
jge
es
enter
repnz
mov
pop
cmpsl
mov
bound
xchg
mov
shlb
clc
popl
push
scas
arpl
xor
push
dec
mov
pusha
insb
ss
int
sub
and
and
dec
ds
les
push
subps
std
in
add
cmpsl
cmpb
clc
in
out
les
xlat
jle
mov
push
lock
into
jnp
cmp
lcall
or
out
mov
aad
inc
mov
sub
mov
and
add
sbb
mov
sbb
lds
push
cmpsb
stc
icebp
add
sub
in
clc
mov
ret
ss
test
stos
xchg
mov
sbb
xchg
ss
sub
icebp
mov
adc
or
push
sub
ljmp
push
sbb
jnp
adc
xor
retw
cli
clc
fwait
xor
push
dec
sbb
dec
cmp
jl
lret
in
imul
cmp
js
iret
call
loop
jbe
xchg
roll
mov
stos
scas
icebp
and
imul
dec
push
jp
dec
adc
das
aad
jnp
pusha
and
fmulp
xchg
mov
test
cmpsb
das
and
pop
testb
imul
je
inc
outsb
sub
repz
cs
pop
sarl
lret
push
xchg
sahf
cli
mov
cs
ficompl
pushf
ret
pop
add
jns
inc
or
xlat
mov
and
inc
push
pushf
push
pop
inc
cmpps
sbb
aam
loopne
cmp
push
cli
mov
sbb
xor
je
daa
pop
xor
into
cmp
cmp
pop
mov
xor
dec
or
stc
iret
scas
pop
cmc
ret
rorb
pop
shr
mov
pop
add
subl
mov
imul
lods
sar
cmp
add
sbb
scas
push
idivb
sbb
dec
data16
cmp
sub
inc
jb
pop
dec
imul
mov
rorl
shrb
inc
mov
mov
cmp
xchg
icebp
jae
lock
sub
xor
pusha
lods
inc
dec
int3
gs
pop
cmp
and
dec
jmp
adc
pop
xchg
data16
jmp
dec
adc
sbb
js
inc
fadd
xor
es
xchg
cmp
je
outsb
and
or
jecxz
jge,pt
iret
cmc
mov
mov
repz
xor
jnp
mov
stos
insl
pop
adc
test
fwait
xchg
jge
movsl
mov
in
gs
sbb
std
in
addr16
jbe
inc
push
imul
mov
mov
gs
int
xchg
xchg
out
jg
pop
popf
xchg
mov
ret
leave
lcall
cmp
mov
jmp
mov
push
cld
imul
sarl
mov
les
xchg
add
shl
outsl
mov
or
inc
push
mov
jns
mov
frstor
dec
sbb
jae
pop
xchg
leave
or
stc
mov
inc
ret
sub
test
mov
dec
and
pop
test
imul
int
and
mov
or
clc
std
lahf
cmp
add
addr16
pop
and
mov
cwtl
bound
jb
xor
sub
cmp
push
pop
jmp
push
das
pop
outsb
mov
add
scas
cmp
adcl
mov
out
insb
hlt
lods
movb
dec
cwtl
sub
in
adc
subb
dec
nop
repnz
cmp
pmullw
sub
fsub
in
iret
sub
jns
aam
push
ljmp
sub
mov
in
das
jg
movsbl
cmp
mov
jo
mov
int
pusha
fstpt
dec
call
cmc
push
in
sub
popa
loopne
push
movsl
filds
push
and
nop
lods
add
mov
cmpsb
shlb
mov
gs
shlb
add
xchg
push
jbe
lods
cmpsl
mov
sub
xor
and
aaa
push
pop
sbb
xor
repz
repnz
aad
sub
test
sub
and
xlat
lcall
popa
loope
or
ljmp
xor
gs
in
sub
addr16
inc
out
cld
push
dec
dec
push
inc
add
lret
mov
adc
inc
push
add
mov
sub
mov
ljmp
mov
out
sarl
cli
xor
xchg
lret
testb
dec
cld
cmpsb
mov
scas
fmuls
scas
outsb
cld
dec
frstor
fwait
dec
or
mov
int3
push
loopne
add
outsb
ss
rolb
cmp
stos
in
mov
ja
xor
mov
js
leave
mov
int
roll
mov
mov
mov
arpl
adcl
and
pop
mov
pusha
rcrl
mov
sbb
loope
cmc
movsb
sbb
add
cli
nop
je
dec
push
fcompl
adc
lock
jo
sub
lahf
fwait
negb
xchg
fwait
in
cmpl
inc
outsl
into
rdpmc
sbb
loope
imul
ljmp
mov
or
addr16
mov
mov
mov
fcmovnbe
mov
pop
rolb
add
dec
mov
add
jbe
outsl
cwtl
iret
pop
sbb
ss
dec
test
gs
mov
loopne
jmp
cmc
cmp
shlb
sub
jb
out
and
dec
in
mov
add
jle
jb
add
add
into
rolb
cs
jns
test
inc
and
in
jecxz
jl
dec
sub
xor
testb
xor
sub
lock
push
into
pushf
aam
push
stc
sbb
test
loopne
aaa
cwtl
mov
adcl
ret
sbb
pop
sbb
jecxz
mov
jmp
adc
xchg
cmpsl
pop
mov
cmp
test
push
jge
push
pop
fisubrl
call
cmp
pop
scas
adc
out
hlt
fadd
fidivl
daa
lods
cmp
push
push
into
cmp
adc
loop
jnp
lea
int
mov
sub
sbb
aad
push
jae
inc
jnp
jg
test
pop
pushf
add
xor
sahf
gs
scas
pop
jo
add
inc
nop
popf
sti
ja
xor
jne
icebp
and
inc
xorb
inc
inc
dec
or
loope
insl
add
enter
lods
call
and
or
jmp
int
jbe
jp
add
inc
or
xchg
lods
or
jl
aaa
mov
add
pop
js
stos
pop
xor
xor
pop
push
xor
add
out
inc
adc
jbe
xchg
in
pop
mov
out
mov
icebp
sbb
movsb
add
adc
add
insl
pop
mov
mov
push
add
cltd
push
dec
dec
dec
les
push
push
sbb
sti
or
xchg
out
cmp
dec
and
add
sar
cmp
jb
and
or
cmpsb
lret
push
cli
sbb
lcall
testb
gs
int3
std
jb
ftst
mov
mov
lahf
sahf
les
adc
cmp
and
cmp
lods
loopne
or
sbb
sub
scas
and
sub
mov
adc
mov
lds
pop
xchg
mov
mov
mov
mov
pop
jg
mov
popf
cmp
dec
daa
fidivrs
mov
mov
xor
pop
fmul
lahf
jle
cmpsb
jne,pt
test
pop
daa
hlt
push
das
push
bound
jne
jl
cli
outsb
inc
ret
ret
sbb
outsl
cmp
mov
mov
aad
ret
lods
stos
xor
jecxz
sbb
lock
adc
sbb
les
add
idivb
out
outsl
pop
inc
inc
jns
inc
fs
xchg
mov
push
push
pop
jmpw
and
leave
xor
aaa
sbb
pop
cli
pop
mov
xor
push
scas
arpl
or
das
lods
test
dec
jge
and
mov
adc
mov
cmp
aad
lods
gs
sbb
movsb
addr16
rclb
jg
xchg
sahf
sub
jo
shll
mov
js
rcr
and
mov
mov
and
pop
jns
outsl
repz
das
loopne
xor
pop
stos
fstpl
push
ss
jnp
fmuls
nop
inc
scas
push
dec
sbbl
cmp
push
outsl
sub
js
stc
filds
mov
ret
push
jle
jae
adc
dec
je
lods
dec
pop
push
mov
fs
or
int
rcr
push
jp
clc
and
test
in
xor
inc
scas
xor
out
cltd
es
or
cmc
xchg
aaa
and
shll
and
xchg
add
insb
fiadds
dec
roll
js
cmpsb
lods
fistl
in
pop
ficoml
adc
outsb
or
cmp
insl
cltd
aaa
adc
push
mov
or
lods
jne
ja
or
clc
fcoms
sbb
sbb
movsb
addr16
xchg
sub
fsts
jne
das
mov
stc
dec
lret
push
and
lcall
inc
cltd
or
push
in
jns
pextrw
dec
mov
leave
or
pop
aaa
or
jl
xor
in
stos
lea
ds
call
mov
and
movsb
push
cli
inc
inc
xchg
and
mov
push
add
pop
pop
push
leave
cmp
dec
lret
mov
decb
and
mov
mov
mov
mov
or
xchg
dec
jecxz
dec
inc
xchg
mov
pop
mov
cmp
fwait
or
pop
pop
mov
int3
pusha
inc
fwait
fwait
lahf
push
adcl
jmp
nop
push
das
xchg
icebp
add
mov
pushf
int3
jmp
pop
rorb
sub
or
mov
jo
in
arpl
pushf
jmp
ja
cmp
pop
xor
test
xchg
xchg
mov
mov
mov
xchg
data16
sub
sti
pop
lods
mov
pop
adc
or
and
ret
xlat
mov
sub
inc
out
push
pop
jle
xchg
mov
inc
sbb
jb
cmp
adc
or
mov
pop
push
fmull
fistpl
dec
pop
jo
pusha
test
cmp
inc
jae
mov
pop
sbb
or
or
push
adc
mov
lea
jne
movl
notl
or
lock
in
dec
push
and
xor
leave
addr16
jb
into
aaa
add
test
fwait
and
roll
mov
fdivrl
imul
in
sbb
cmpsl
xchg
idivb
int
dec
nop
xchg
mov
dec
push
repz
jl
in
cmp
scas
sbb
cmc
jo
pop
repnz
inc
dec
sbb
ret
mov
js
out
jmp
sbb
fmuls
js
jae,pn
pop
loope
fmuls
das
add
flds
movsl
push
into
adc
insl
xchg
jmp
repnz
fsubr
or
sbbb
es
or
dec
inc
and
ss
or
add
test
and
fisubrs
aas
test
imul
xor
xchg
fisttpll
stos
ss
add
fistpll
outsl
adcb
fstpt
fldcw
mov
imul
mov
mov
xchg
test
sahf
out
pop
mov
push
jge
push
iret
lahf
test
and
fstl
lret
push
fs
ss
and
cmp
in
jp
mov
out
mov
int
scas
xor
xchg
push
pushf
into
outsb
dec
cli
cld
push
or
cli
jp
sbb
inc
push
cmpsb
push
xchg
lock
push
push
int3
test
cmc
push
xchg
jnp
sub
shrl
inc
data16
mov
iret
cmpsl
cmp
inc
mov
cmp
push
jb
xchg
mov
mov
fs
adc
jno
out
xchg
cvtpi2ps
fwait
leave
push
and
mov
and
jle,pt
roll
loopne
cmpsb
subl
shrl
add
icebp
fucomip
loope
enter
mov
iret
push
lret
loop
outsb
xchg
dec
fstps
stc
xchg
out
aas
stc
repz
popf
jmp
es
mov
sub
add
.byte
push
add
add
js
add
sub
xor
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
mov
sarb
in
cmp
push
cmpl
adc
pop
aas
pop
aas
daa
aas
inc
aas
lea
lret
aas
into
xor
xor
xor
xor
xor
xor
xchg
xor
fdivs
inc
ss
mov
fnstenv
test
in
arpl
ret
add
fbstp
ljmp
aaa
push
aaa
pop
aaa
push
cmp
cmpl
cmp
std
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
push
cmp
jne
lea
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
sahf
xor
xor
xor
xor
sbb
and
xor
xor
xor
and
xor
xor
xor
xor
and
add
mov
cmp
cmp
cmp
cmp
cmp
cmpsl
cmp
and
cmp
inc
ds
ds
ds
fstpt
loopne
jb
add
dec
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
dec
xor
jbe
jle
test
mov
mov
mov
xor
xor
push
xor
xor
xor
xor
xor
xor
inc
aaa
cmp
push
aaa
pop
aaa
or
jg
sbb
xor
inc
aaa
dec
aaa
pop
aaa
fs
xchg
aaa
cmpsb
aaa
mov
shll
aaa
or
and
pusha
cmp
mov
cmp
add
add
add
inc
cmp
dec
cmp
outsl
cmp
jle
cmpb
cmp
cmp
cmp
and
cmp
cmp
cmp
cmp
cmp
aam
fnstsw
out
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
sarl
ds
aas
xchg
aas
lcall
xor
push
xor
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jb
les
leave
xor
xor
xor
xor
in
xor
sub
xor
cltd
lods
ss
mov
fnsave
clc
ss
ss
aaa
leave
aaa
xlat
aaa
fdivl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
add
add
add
push
cmp
lods
aaa
je
popf
lods
ss
ljmp
aaa
dec
aaa
popa
aaa
je
mov
mov
aaa
xor
jp
xchg
aaa
fwait
aaa
lret
aaa
sti
aaa
adc
jle
xchg
cmp
cmp
cmp
cmp
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
mov
xor
shll
jmp
xor
xor
xor
icebp
xor
xor
and
xor
xorb
xor
xor
xor
xor
xor
jp
shlb
xor
xor
dec
xor
xor
xor
xor
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
xor
xor
mov
mov
xor
xor
xor
xor
xor
ss
int3
ss
cmp
cmp
cmp
cmp
mov
cmp
aas
mov
add
pusha
add
aam
add
sub
cmp
js
inc
cmp
mov
cmp
push
cmp
stos
cmp
fdivrl
adc
sbb
pop
sub
aaa
ds
ds
cmp
mov
or
sahf
cmpsl
sarl
sub
aaa
aas
pop
xor
xor
mov
mov
ret
ss
imul
sahf
aaa
divl
and
aaa
aaa
test
mov
shll
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
lret
cmp
cmp
cmp
cmp
cmp
cmp
jl
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
faddl
add
int
loop
add
inc
cmp
cmp
sarb
pop
cmp
cmp
push
cmp
xlat
cmp
cmp
cmp
cmp
cmp
cmp
addr16
and
cmp
inc
ds
ds
ds
ds
loopne
adc
push
aas
ds
xor
dec
xor
cmp
repz
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
sahf
xor
stos
xor
loop
shlb
ss
inc
aaa
jb
in
push
cmp
js
push
cmp
fnstsw
mov
add
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
aas
icebp
aas
idivb
add
shlb
stos
cmp
mov
mov
cmp
daa
xor
xor
xor
les
iret
aaa
push
cmp
std
cmp
imul
jg
xchg
xor
xor
xor
push
xor
std
xor
xor
pop
xor
xorb
xor
xor
xor
xor
lods
xor
ss
fbstp
in
ds
inc
aaa
jge
xorb
aaa
sahf
aaa
and
sub
inc
cmp
pop
cmp
cmp
nop
add
sbb
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
jo
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
xor
arpl
nop
xor
xor
xor
xor
xor
jl
xorl
aas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sahf
xor
sbb
pop
ss
ss
xorl
ss
ss
ss
aaa
pop
aaa
int3
aaa
shll
sub
cmp
cmp
or
jo
xchg
cmp
cmp
cmp
add
add
xor
cmp
cmp
inc
xor
xor
xor
xor
insb
xor
je
js
jle
xorb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
add
add
add
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
cwtl
xor
loopne
in
xor
xor
xor
xor
sub
or
push
xor
sub
dec
xor
sub
sub
xor
xor
xor
insb
xor
xchg
xor
xor
xor
xor
xor
xor
adc
sub
xor
adc
sbb
sbb
and
dec
xor
sbb
sbb
sub
cmp
pusha
aaa
and
inc
cmp
call
aas
test
mov
mov
nop
aas
xchg
aas
cwtl
aas
add
add
in
add
add
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
mov
mov
xchg
aaa
cwtl
aaa
pushf
aaa
mov
cmp
add
add
or
in
cmp
cmp
cmp
cmp
cmp
cmp
or
sarb
enter
sarb
cmp
cmp
cmp
add
xor
push
aas
lock
js
test
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
ss
mov
mov
les
enter
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
add
add
adc
add
add
add
or
or
