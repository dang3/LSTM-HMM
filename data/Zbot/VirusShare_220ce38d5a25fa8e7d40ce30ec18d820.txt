push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
clc
popf
push
pushl
decl
ret
sbb
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
test
je
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
dec
and
add
add
jo
add
and
add
and
add
and
add
and
add
add
sub
add
jle
add
clc
and
add
and
add
add
fisubl
add
or
add
fisubs
add
pop
and
add
add
add
and
add
and
add
add
add
sahf
and
add
add
and
add
and
add
add
push
add
into
and
add
add
add
add
add
xor
add
fs
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
xchg
and
add
add
dec
and
add
add
jo
add
and
add
and
add
and
add
and
add
add
sub
add
jle
add
clc
and
add
and
add
add
fisubl
add
or
add
fisubs
add
pop
and
add
add
add
and
add
and
add
add
add
sahf
and
add
add
and
add
and
add
add
push
add
into
and
add
add
add
add
add
xor
add
fs
add
add
add
add
dec
add
popa
insb
inc
insb
popa
addr16
add
inc
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
addl
jb
popa
je
inc
imul
jns
add
aad
inc
imul
gs
add
je
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
call
inc
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
jne
jb
outsb
je
jb
arpl
jae
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
imul
repnz
imul
jb
je
arpl
add
data16
je
je
dec
popa
outsb
fs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
add
gs
outsl
jbe
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
inc
imul
dec
gs
popa
addr16
add
popf
pop
dec
outsb
jae
jb
dec
outsb
jne
add
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
or
jae
dec
gs
popa
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
inc
gs
imul
outsb
addr16
add
movl
outsl
insl
gs
sbb
ja
jo
imul
pop
dec
jae
imul
jnp
push
gs
outsl
arpl
add
xchg
inc
gs
imul
js
push
add
push
push
inc
push
xor
cs
insb
add
or
inc
arpl
gs
js
insb
imul
jb
gs
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
jno
sub
popf
loope
push
dec
clc
repz
push
lea
rolb
jle
shrl
in
push
add
jno
mov
and
cltd
push
xchg
adc
xchg
xor
or
adc
push
adc
sub
push
jge
stos
sub
je
jo
jnp
aad
and
cwtl
jp
xor
jle
outsl
les
add
sub
push
test
iret
lea
cld
imul
sbb
les
sbb
pop
add
or
std
xor
stos
out
adc
iret
inc
push
mov
inc
mov
xchg
mov
das
pop
clc
push
cmp
jns
xchg
xchg
pop
idivl
cmp
imul
pop
pop
xor
pop
jns
mov
inc
jmp
add
cmp
push
xor
push
test
lcall
imul
jne
xor
scas
mov
push
subb
fisubs
cmpsl
test
and
call
lds
xor
adc
adc
jl
js
adc
loope
lock
or
loope
push
xchg
sbb
push
push
pop
pop
or
xchg
mov
shll
and
xor
jnp
ss
xlat
nop
inc
fwait
add
mov
lock
sub
sub
xchg
xchg
xor
mov
pop
xchg
cmp
add
jg
mov
adc
mov
adc
ja
fs
xlat
outsl
int
outsb
mov
pop
imul
push
jl
movzwl
pop
fidivrl
fistps
pushf
and
or
and
xlat
jge
jno
jae
leave
cmpl
flds
jbe
mov
sbb
xor
call
aam
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jl
jl
lods
stos
lods
add
test
push
mov
mov
mov
ret
les
int
int3
rcl
in
rcl
shl
rcl
shl
int
into
hlt
leave
leave
leave
repz
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
rcl
cld
fcomp
std
fcom
fcom
aam
dec
rcl
dec
int3
into
aad
dec
iret
iret
inc
ret
ret
mov
mov
iret
movsb
movsl
mov
dec
cs
das
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
lret
ror
iret
aam
fcom
call
call
aam
dec
int
dec
int
call
aad
int3
int3
int3
mov
mov
mov
std
cmpsl
cmpsb
cmpsl
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int3
into
call
rcl
call
call
xlat
call
aad
dec
int3
into
dec
lret
int
int
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
push
push
pop
pop
pop
fs
ds
das
push
or
push
xor
cmp
aaa
cmp
cmp
and
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
enter
ror
call
aad
aad
aad
rcl
sar
leave
leave
inc
mov
mov
mov
ljmp
movsl
movsb
sahf
pushf
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jg
jge
jb
jb
popa
arpl
dec
dec
push
xchg
cmp
cmp
pop
pop
pop
stos
outsb
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
leave
dec
lret
leave
inc
leave
leave
inc
mov
mov
scas
scas
lods
jmp
lcall
xchg
xchg
cwtl
xchg
cwtl
lcall
lahf
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsb
add
pop
or
pusha
mov
xchg
xchg
xchg
incb
jp
jnp
jl
outsl
outsl
outsl
out
push
push
ret
jle
js
jp
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
nop
nop
incl
addb
xchg
xchg
xchg
lahf
sahf
mov
ficomps
xchg
xchg
jle
js
pop
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jg
jb
jno
jae
jne
jge
jge
test
xchg
pushw
cmp
cmp
es
jge
jg
lcall
shrb
stos
lods
sti
lods
stos
stos
lods
lods
lods
test
stos
std
movsb
mov
fwait
xchg
xchg
xchg
decl
jge
jp
jp
jp
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
push
push
prefetch
inc
inc
inc
dec
insl
insl
insl
jl
xchg
leave
cltd
cltd
cltd
fistps
fwait
fwait
stc
xchg
std
mov
mov
xchg
mov
xchg
lcall
cmpsb
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
popf
sahf
std
movsb
movsb
mov
out
xchg
xchg
xchg
in
xchg
xchg
nop
in
xchg
jne
femms
dec
add
add
or
or
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
call
lahf
mov
ljmp
cmpsl
scas
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
pushf
cltd
lcall
mov
decl
xchg
xchg
xchg
sahf
sahf
sahf
mov
stos
stos
mov
xchg
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jb
mov
lahf
test
mov
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
ja
mov
movsl
mov
mov
mov
lods
lods
stos
mov
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
xchg
cwtl
fwait
fwait
lcall
lahf
mov
std
movsb
mov
lcall
nop
xchg
les
lcall
mov
stc
xchg
test
std
xchg
jae
cltd
push
test
movsl
dec
jg
lods
inc
jl
mov
jp
mov
jb
mov
outsl
ljmp
pcmpgtw
lods
or
stos
or
pushl
lahf
mov
mov
test
movsl
and
add
add
pop
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
popf
lcall
sahf
pushf
lcall
xchg
xchg
call
cwtl
nop
call
xchg
lcall
lcall
popf
xchg
xchg
imul
cwtl
dec
jns
cltd
cmp
lcall
lahf
pop
jmp
adc
ljmp
pcmpgtw
lods
adc
scas
adc
mov
push
mov
imul
adc
jg
mov
mov
lods
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
sahf
lcall
movsb
mov
jmp
cwtl
xchg
decl
mov
decl
jbe
lcall
xchg
push
jnp
xchg
cmp
decl
pop
popa
call
or
call
add
cltd
add
lahf
pop
pop
jmp
sbb
mov
outsl
pushl
pop
jo
mov
and
mov
pop
je
mov
xchg
lods
mov
lods
lods
mov
mov
movsb
movsl
add
pop
pop
adc
scas
mov
shll
lcall
movsl
jmp
cmpsb
test
test
cmpsl
cmpsl
lcall
jle
decl
jo
mov
imul
mov
popa
decl
or
addb
xchg
push
decl
add
popl
push
call
add
sahf
add
cmpsl
or
mov
outsb
pushl
sub
mov
sub
ret
inc
sub
das
cmp
enter
mov
cld
scas
mov
lret
mov
add
add
add
add
add
push
adc
cmpsl
lods
ljmp
popf
jmp
test
ljmp
stos
stos
pushl
scas
scas
jmp
jno
incl
or
incl
or
add
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
imul
shlb
inc
cmp
dec
cmp
sarl
mov
sarl
mov
sarl
xchg
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
lahf
ljmp
lods
lods
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
push
decl
pop
push
incl
add
mov
push
call
add
popf
add
add
cmpsb
add
stos
add
jno
ret
cmp
dec
inc
mov
roll
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
ficoml
call
test
std
mov
mov
mov
sahf
mov
add
dec
inc
adc
jl
popf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
ss
decl
sbb
call
adc
decl
push
decl
add
xchg
add
sahf
add
mov
add
test
add
jns
int
mov
aam
cltd
fcoms
fistl
fstl
ficomps
jmp
pop
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
mov
add
inc
inc
adc
jns
sahf
lcall
sahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
call
and
xchg
sbb
xchg
or
nop
add
xchg
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
fisubl
fisubs
fisubs
jmp
cmpsl
jmp
cmpsw
jmp
data16
ljmp
call
xchg
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jb
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
das
outsl
lcall
sub
xchg
pop
callw
add
cltd
add
mov
add
lods
add
mov
pushw
movd
roll
frstor
jmp
outsl
stos
jmp
outsl
stos
jmp
jno
jmp
je
in
jne
out
je
out
jne
out
jb
jmp
mov
mov
test
lcall
lahf
add
add
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
sahf
cmp
sahf
cmp
mov
sbb
pop
call
add
add
stos
add
mov
popa
pushl
add
enter
ficoml
in
mov
jmp
jge
jmp
mov
out
cmpb
icebp
test
push
test
jmp
mov
inc
mov
stos
cmpsl
popf
popf
popf
daa
lahf
sahf
sahf
add
add
add
add
aaa
cmp
pop
pop
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
mov
mov
lahf
outsb
mov
cltd
cmp
inc
jle
movsl
inc
jge
movsb
ss
cltd
sbb
add
sahf
add
mov
add
lods
add
add
add
ret
add
shlb
cmp
movsl
call
mov
push
mov
push
pop
push
xchg
xchg
push
xchg
mov
out
mov
inc
ret
lods
test
xor
sahf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
inc
ret
ret
mov
jle
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
enter
xor
out
xchg
ret
push
fwait
push
fwait
push
fwait
lcall
stc
sahf
lret
lahf
int
cld
sahf
int
sti
cwtl
lret
push
xchg
ret
mov
dec
mov
mov
mov
lahf
mov
nop
add
add
add
xor
or
cmp
jecxz
pop
pusha
decl
mov
mov
mov
mov
inc
mov
enter
mov
mov
ljmp
mov
mov
push
pop
lcall
pop
ljmp
add
mov
add
movl
jbe
loopne
xchg
in
lea
push
movsl
int
mulb
into
cli
cmpsl
iret
sti
cmpsl
sar
sti
test
std
stos
iret
cld
test
iret
push
popf
mov
dec
enter
mov
into
lahf
sahf
mov
add
cltd
fwait
add
add
add
xor
daa
sub
or
bound
pop
xlat
jae
jno
mov
sarb
mov
ret
ret
ret
leave
leave
inc
rol
mov
cmpsb
jmp
push
mov
scas
dec
test
mov
add
jmp
popa
pushl
addr16
add
into
add
add
adc
pop
cmpsb
push
popf
lret
lods
aam
sti
mov
cld
mov
cli
scas
sar
mov
std
mov
cld
mov
mov
mov
std
mov
push
movsb
jmp
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsb
jo
cltd
cltd
cltd
rol
fcom
jmp
xlat
xlat
not
rcl
std
lret
int
dec
lret
leave
leave
lret
leave
leave
inc
enter
mov
mov
scas
push
mov
lods
cmp
jmp
add
lods
add
mov
mov
add
iret
add
add
add
jmp
jae
cld
scas
aam
mov
std
mov
cld
mov
fdivr
std
mov
fcos
std
rcr
std
mov
int3
jmp
mov
call
leave
into
mov
mov
xchg
or
add
add
xor
add
add
pop
or
enter
in
pop
out
call
test
in
leave
fsubp
fcomi
fcomp
fsqrt
aam
xlat
std
into
ror
mov
imul
jmp
add
mov
popa
mov
add
lret
call
add
fildl
ja
jecxz
js
out
xor
cli
mov
loopne
inc
loopne
std
inc
inc
inc
fdivrp
dec
dec
fdivrp
std
enter
lret
sti
mov
leave
fmul
iret
mov
mov
xchg
adc
add
add
std
incl
incb
std
add
div
or
out
in
pop
in
in
in
sub
out
in
dec
jmp
jmp
call
aad
jmp
mov
xchg
cmpsl
cmp
mov
add
test
pop
pushl
add
lds
push
int
outsl
call
add
loopne
ja
ljmp
cld
mov
loop
cld
lret
dec
in
dec
in
dec
jecxz
std
int
dec
loopne
std
shl
dec
loop
std
shl
call
in
cld
out
mov
fdivr
ret
cmpsb
cmpsb
mov
xchg
xchg
add
add
add
std
std
add
incl
div
testb
repz
repnz
out
repnz
out
repnz
cmp
out
in
pop
loopne
loopne
les
xchg
sti
sahf
and
pop
jmp
pop
pushl
add
movl
jo
fiaddl
jne
in
jns
in
movd
negb
cli
mov
shl
std
shl
call
call
call
jecxz
call
std
jmp
std
fldl2t
fld1
shl
push
ret
aad
in
lret
lret
test
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
sti
add
stc
add
cld
cli
add
cmc
repz
aam
xor
je
negb
add
cmpsb
add
scas
add
mov
add
leave
add
roll
jb
fildl
jne
call
sbb
cli
cld
fsubr
std
std
std
fsubr
std
fucomi
fsubr
std
loopne
loopne
fucomip
std
aam
push
ret
out
iret
iret
sar
stos
stos
stos
lods
xchg
xchg
xchg
outsb
outsl
outsb
add
add
mov
loop
add
mov
cwtl
repnz
and
mov
add
mov
mov
add
into
add
add
loopne
jae
call
sub
cld
aam
std
fsubrp
fucomp
fucompp
std
xlat
jmp
shl
cli
shl
cli
iret
loope
stc
int
clc
int
push
ret
xlat
out
mov
call
fcomp
sti
mov
mov
cltd
fwait
cltd
cmp
lcall
add
add
aad
mov
rol
lods
mov
lcall
add
mov
fs
mov
add
rolb
outsb
fadds
jb
loopne
js
call
aaa
xchg
sti
cwtl
sti
lret
cld
lret
jecxz
sti
fdivrp
clc
rcr
idivb
sar
repnz
sar
out
mov
int3
ljmp
std
call
shl
ljmp
in
mov
mov
xchg
add
add
add
into
lret
add
mov
cmpsb
loopne
ss
mov
add
mov
gs
mov
add
dec
or
rorb
fistl
js
loope
cmp
ljmp
jmp
scas
std
loop
ret
cld
fbstp
mov
leave
ljmp
rcr
aad
loop
fadd
out
loope
jmp
call
popf
jmp
lret
lret
push
lods
lods
lods
adc
cmpsb
cmpsb
cmpsl
add
ret
ret
ret
ret
sahf
stos
aam
dec
cmp
cmpsl
sbb
jo
mov
jns
mov
inc
xchg
ret
push
mov
leave
gs
test
mov
out
mov
mov
lret
lret
rcl
lret
mov
into
shlb
fcom
aam
fcmovu
loopne
gs
in
call
out
in
xor
div
mulb
icebp
repnz
sbb
or
mov
int
mov
add
mov
mov
rolb
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
mov
leave
int
iret
int
addr16
iret
push
iret
rcl
dec
fcom
inc
rcr
aad
fcmovu
daa
xlat
fcmovnu
sbb
adc
jecxz
push
fucomip
jecxz
out
ljmp
cli
testb
std
add
incl
std
std
incb
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
leave
xor
int
daa
int
shlb
iret
rcrb
rcl
aam
iret
aad
or
push
rcr
fadds
fcmovnu
add
loopne
add
in
add
in
jmp
leave
add
incb
mov
mov
add
ret
vmovaps
mov
mov
push
rol
or
enter
movl
leave
roll
rcl
add
fcom
add
xlat
aam
aad
add
fabs
add
aad
add
loop
add
fnstsw
add
out
add
icebp
lock
incl
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
les
ret
mov
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
aam
cmc
aam
sar
iret
iret
sar
int3
int
stc
lret
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
into
aad
xlat
call
call
ror
dec
int
dec
lret
sarb
cld
stos
stos
stos
icebp
cwtl
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jae
jae
fs
dec
dec
inc
cmp
sub
sub
ss
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
int3
call
rcl
call
rcl
dec
lret
lret
inc
mov
sarb
ljmp
sahf
lahf
cwtl
xchg
xchg
jmp
outsl
jno
push
push
pop
dec
add
add
add
add
add
add
addl
subl
push
mov
push
push
push
stos
push
push
insb
outsb
insb
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
fstpt
mov
ret
mov
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
cltd
add
fwait
xchg
cltd
fcoml
addl
jmp
jns
sarb
jnp
jp
jns
je
jb
push
push
push
cmp
jae
sahf
pushf
popf
mov
scas
lods
repz
lods
lods
sti
lods
scas
scas
std
test
pushf
sahf
call
xchg
call
mov
scas
jmp
scas
lods
leave
cmpsb
cmpsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsb
outsb
insl
pop
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
jo
outsl
orl
lcall
lea
call
lahf
ljmp
test
std
mov
scas
mov
xlat
movsl
mov
jg
pop
popa
popa
or
lods
mov
cmpsb
mov
mov
mov
mov
xchg
xchg
cwtl
std
lahf
sahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
insl
outsl
insl
xchg
subl
mov
std
nop
xchg
ljmp
jg
pushl
pop
mov
mov
jnp
mov
scas
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cwtl
cltd
cltd
lcall
pushf
popf
popf
cli
xchg
xchg
cwtl
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
popf
dec
jl
movsl
inc
jns
lods
aaa
js
mov
jb
mov
outsl
ljmp
sbb
mov
lods
mov
scas
scas
scas
jle
movsl
movsb
push
pop
pop
popa
or
mov
in
movsb
test
lcall
mov
mov
decl
addb
xchg
jno
cld
xchg
pusha
test
xchg
dec
jns
xchg
cmp
xchg
daa
call
lcall
or
imul
mov
insb
pushl
sbb
jne
rcrb
mov
scas
scas
xchg
sahf
sahf
popf
adc
add
add
pusha
pusha
pop
or
stos
mov
stos
movsb
cmpsl
jmp
cmpsl
cmpsl
ljmp
test
cwtl
decl
cmp
mov
arpl
mov
pop
incl
push
push
decl
add
fwait
add
or
mov
jae
mov
jge,pn
lds
jle
leave
xor
lret
dec
pop
xchg
inc
stos
mov
mov
mov
test
test
add
add
add
pusha
or
cmpsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
xchg
mov
decl
adc
xchg
push
incl
add
mov
push
call
add
add
mov
outsb
inc
aaa
test
lret
dec
inc
call
inc
mov
aad
xchg
fmuls
call
bound
stc
mov
mov
mov
std
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
ljmp
jnp
mov
popa
decl
or
popl
push
call
add
add
scas
add
mov
dec
nop
fcomps
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
movsl
xor
addb
add
add
dec
pop
jle
jp
pushf
cwtl
lcall
lods
scas
pushl
mov
mov
jmp
sub
insb
call
push
pop
call
add
add
scas
add
push
push
fisubl
jmp
outsb
test
jmp
jo
in
jb
jmp
test
mov
inc
addb
add
dec
pop
outsb
insl
imul
test
fwait
lcall
mov
mov
sar
mov
jmp
cmp
mov
sub
xchg
or
pop
jmp
add
mov
inc
or
xchg
jmp
jp
ljmp
out
xchg
cmc
xchg
fldenv
mov
push
cltd
cltd
cltd
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
or
add
test
add
add
int
ja
fbld
out
nop
sar
xchg
ret
push
cwtl
cwtl
clc
fwait
enter
leave
push
xchg
stos
mov
lods
popa
mov
add
add
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
mov
test
ljmp
push
mov
add
mov
fs
mov
add
and
push
mov
iret
stc
test
iret
cld
stos
sar
lods
sar
cli
cmpsl
lret
jmp
mov
inc
mov
stos
jne
pushf
popf
or
add
add
dec
push
push
aaa
jae
jb
test
int
out
iret
int3
cmc
lret
sti
leave
lret
enter
mov
ljmp
ljmp
add
rolb
dec
add
fildl
xchg
push
xchg
sti
mov
mov
xlat
std
mov
fdivr
mov
sar
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loope
loope
loope
fstp
fcmovnb
fcmovu
aam
out
mov
data16
test
je
movsl
or
scas
add
mov
add
add
jecxz
jp
icebp
dec
mov
sti
ret
loop
inc
loope
inc
dec
dec
fdivrp
dec
loope
std
lock
lret
divb
pushf
popf
sbb
add
add
std
add
incb
ljmp
in
in
jmp
jmp
in
xchg
mov
mov
mov
add
mov
arpl
roll
dec
add
faddl
je
jmp
outsb
mov
sti
cld
shl
call
out
call
in
shl
call
call
shl
push
fdivr
fcmovne
sar
mov
mov
add
std
std
add
std
std
add
std
std
pop
aad
aad
mov
pop
mov
sahf
or
pop
pushl
add
rolb
jo
filds
jne
in
pop
mov
stc
mov
cld
shl
std
fsubr
std
fsubr
std
xlat
out
cld
std
xlat
out
std
sti
shl
push
fdivr
loopne
aad
mov
lahf
sahf
das
add
add
int3
into
int3
or
bound
stos
add
mov
add
add
loope
js
in
xor
sti
int3
loope
cli
lret
cmc
repz
aad
bnd
std
lock
sar
out
sar
out
in
aam
in
fsubr
leave
stos
test
das
std
std
add
add
add
push
mov
jae
push
addr16
mov
imul
sbb
int
jl
aad
test
fists
clc
in
mov
out
loop
leave
jmp
fdivrl
leave
fmulp
sarb
in
fcompl
in
call
rorb
mov
add
lods
lods
stos
add
xchg
mov
ljmp
xchg
fidivrl
andb
int3
lahf
mov
sarl
jge
ror
into
pop
aam
rorl
cmp
loopne
das
jecxz
fsubl
loop
icebp
adc
in
in
or
incb
incb
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
leave
and
aam
pop
mov
rcl
or
fnstsw
or
into
into
add
std
std
std
add
std
incl
cltd
lcall
mov
rol
or
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
enter
enter
enter
ret
sarl
mov
insb
lods
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
std
rcl
sar
iret
into
iret
std
mov
stc
mov
cmpsl
test
cmpb
pop
sbb
add
add
add
add
add
add
add
add
jb
jb
addr16
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
int
inc
mov
ljmp
lahf
sahf
sti
mov
cs
add
add
add
add
jae
jae
xchg
adc
jo
ret
bound
insl
insl
outsb
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
xchg
lds
jno
daa
daa
daa
das
add
add
add
add
je
jae
fwait
xchg
pushf
mov
test
clc
mov
test
test
push
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
stos
mov
mov
mov
xchg
cld
pushf
pushf
popf
cmc
cltd
cwtl
lcall
push
push
imul
jle
lea
xchg
testl
mov
mov
jno
mov
lods
lods
push
stos
lods
lods
add
add
add
cmpsl
mov
scas
test
cld
xchg
xchg
xchg
call
lcall
xchg
fwait
lcall
mov
loope
jbe
out
xchg
fs
push
jnp
pushf
inc
ja
cmpsl
aaa
je
scas
sub
jo
mov
insl
pushl
sahf
lods
lock
mov
imul
int
add
add
test
pop
lods
movsl
stos
test
lahf
pushf
lahf
jmp
movsl
movsb
call
push
js
xchg
inc
jb
mov
imul
sbb
call
or
mov
sbb
je
mov
sub
les
inc
cltd
scas
divb
stos
stos
or
add
add
pushf
mov
cld
test
scas
scas
pushl
mov
decl
or
mov
push
decl
add
mov
adc
shll
dec
inc
mov
iret
inc
mov
aad
mov
push
xchg
dec
lcall
movsb
movsl
movsb
push
add
add
push
xchg
xchg
test
mov
scas
pushl
mov
mov
call
sbb
mov
pop
call
add
stos
add
mov
push
xchg
fistpl
fistps
jmp
pusha
mov
call
fwait
mov
test
test
pop
add
add
arpl
adc
pushf
fwait
lcall
mov
mov
lcall
xor
cwtl
and
xchg
or
lahf
add
stos
add
mov
xor
jmp
jnp
out
jl
push
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
ljmp
add
pop
insl
fimull
in
lea
hlt
xchg
xchg
clc
xchg
jmp
cmpsl
inc
mov
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
cld
rol
inc
ret
vcmpsd
ljmp
sbb
movsb
add
mov
arpl
les
imul
ljmp
clc
lods
sar
sti
scas
sar
std
scas
sar
lods
iret
in
scas
enter
rcr
cmpsb
movsb
ds
std
add
xor
mov
mov
aam
aad
aad
aad
rcl
shr
lret
enter
xchg
jmp
fs
add
aam
jae
call
nop
mov
inc
cld
ret
fdivr
cld
rcr
out
mov
shl
test
addl
lods
stos
stos
add
in
jmp
jmp
call
jecxz
fcmovu
fldenv
mov
add
mov
add
fldl
push
cmp
std
int
std
shl
std
shl
call
in
call
out
cmc
aam
int
lods
scas
scas
popa
jg
addl
add
add
incl
incb
int
shrl
sahf
sbb
lods
add
mov
add
loop
jns
cmc
push
movsl
inc
loop
std
jmp
std
shl
cld
shl
stc
aam
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
insb
call
or
ficomps
cmp
out
mov
shl
ljmp
jmp
out
aad
ljmp
scas
ret
lds
fwait
fwait
add
rol
or
pushf
lods
xchg
and
ret
int3
lret
jbe
mov
fdivrs
lret
adc
into
outsl
fmul
into
pop
fst
dec
jecxz
loopne
call
out
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
mov
ret
mov
cs
mov
lret
sbb
fstp
bswap
into
int
aam
aad
std
incb
jg
addl
lods
std
std
add
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
cmc
js
xchg
idivl
push
and
lret
inc
movsb
cmp
xor
int
push
out
xchg
inc
mov
data16
shlb
xchg
lcall
loop
jb
repz
daa
cmpsb
dec
faddl
cmp
lcall
xor
jns
in
inc
cli
or
add
push
mov
sti
xchg
xchg
inc
jb
aaa
and
lret
sub
inc
mov
inc
push
insb
push
inc
pop
inc
xor
mov
and
or
div
cwtl
mov
xor
and
ficoml
pop
movsb
mov
pop
push
std
in
sub
mov
es
imul
cmp
jge
sbb
shrl
jge
dec
adc
add
les
push
sbb
mov
push
lock
aad
ss
imul
dec
jne
ds
jle
and
fsubs
call
test
loope
xchg
lea
inc
jmp
test
adcl
push
xchg
mov
push
aaa
out
mov
lret
and
mov
loope
test
pushf
xchg
mov
push
rcrl
and
bound
push
aam
loope
mov
lock
push
in
push
int
add
std
mov
dec
repnz
inc
adc
lahf
xchg
lds
mov
and
pop
bound
data16
jge
pop
dec
add
xchg
sub
inc
or
les
cmp
pusha
in
or
sbb
mov
hlt
push
lret
xor
and
mov
mov
adc
inc
or
ja
lock
iret
js
and
jae
xchg
fmulp
fldl2t
sub
out
mov
popa
les
shll
pop
xchg
inc
dec
mov
mov
or
push
pop
aas
push
icebp
and
xchg
jg
mov
out
jmp
loope
int
mov
adcl
popf
adc
lcall
xchg
add
bound
push
aam
add
arpl
hlt
rclb
jno
xor
lret
inc
rclb
pop
xchg
inc
sbb
adc
push
test
mov
jmp
xchg
mov
mov
scas
out
icebp
subl
lret
fsts
stc
pop
andl
fimull
mov
sti
mov
push
sub
mov
lea
push
aam
jo
or
sbb
dec
or
mov
mov
in
push
pop
stc
andb
push
hlt
out
aam
pop
movsb
gs
jb
pop
mov
mov
cmp
cltd
sub
aaa
fdivrl
out
and
cmp
inc
out
xorl
daa
popf
shll
jecxz
roll
inc
mov
xor
mov
out
push
pop
call
adc
xchg
cwtl
add
mov
in
loopne
cltd
adc
arpl
cld
pop
and
and
lret
lea
and
js
in
xchg
in
inc
pushf
dec
repnz
icebp
xlat
out
outsl
mov
les
imul
pop
orl
ljmp
mov
mov
cmpsb
xor
jno
jecxz
stos
popa
arpl
xor
cmpsb
js
add
shlb
and
in
mov
icebp
shrw
test
xchg
rorl
cmp
jmp
fs
lock
mov
mov
jns
xchg
out
stc
xchg
mov
pop
lea
mov
sbb
mov
add
in
andl
sbb
or
adc
xchg
and
bound
ret
mov
inc
mov
test
int
outsl
and
stc
mov
iret
dec
jmp
sbb
adc
xchg
mov
ljmp
arpl
cmpsb
xor
mov
pop
pop
divl
cmp
frstor
push
jnp
add
or
jmp
mov
dec
scas
gs
add
clc
pop
mov
bound
push
jge
lret
xchg
xchg
fistl
adc
dec
sbb
sbbb
sub
push
inc
bsf
jne
fwait
inc
add
adc
push
lods
popf
push
or
xor
cmp
mov
call
ja
imul
pop
jecxz
mov
and
rol
in
sti
add
stos
dec
jmp
in
pusha
nop
inc
scas
outsb
out
dec
adc
jne
cmp
mov
ljmp
fbstp
sbb
mov
fcmovbe
xchg
mov
push
das
loopne
mov
xor
stos
xchg
shrl
push
push
cli
add
cld
pop
iret
xor
xchg
cmc
mov
sub
outsl
xchg
mov
xchg
mov
je
div
popf
and
out
in
cli
sti
lock
es
pop
icebp
xor
pop
sub
icebp
test
scas
jns
inc
xor
jbe
pop
cli
jecxz
xor
xchg
dec
lret
insb
pop
imull
pop
imul
add
mov
xor
xchg
mov
add
or
or
cmp
cs
fisttpll
sub
shll
js
mov
andb
test
adc
add
data16
jmp
add
add
xlat
mov
and
cld
xor
in
mov
test
and
and
jle
ljmp
jnp
add
es
push
jmp
mov
sub
rcr
js
int
sub
jecxz
push
shll
inc
into
cld
inc
xchg
fmull
ds
lcall
gs
push
adc
mov
mov
jecxz
inc
fbstp
cmp
outsb
lods
lcall
aas
pusha
daa
mov
mov
mov
pop
adc
gs
jae
stos
fs
sub
mov
ret
mov
jl
in
and
scas
movsb
cwtl
das
push
jno
or
ret
nop
daa
cmc
mov
imul
cwtl
push
pop
xlat
outsb
mov
pop
mov
lods
cmc
mov
cmpl
repnz
xor
test
push
or
xchg
xchg
inc
jecxz
mov
imul
pop
addr16
sub
cmc
inc
xlat
es
rorb
push
mov
mov
out
pop
mov
add
cmp
fadd
cmp
dec
ficoms
mov
pop
push
push
mov
and
cmp
cmpb
ss
mov
sub
stos
popf
xor
stos
mov
fdivr
mov
push
test
xchg
movsb
or
lods
sub
sub
sub
lret
dec
loopne
popf
push
call
int3
out
outsl
push
and
test
inc
lea
xchg
stos
inc
enter
jmp
fbstp
cmp
std
xchg
insl
nop
add
mov
loop
mov
adc
push
out
xchg
mov
push
xor
arpl
into
inc
jo
jmp
inc
push
fbstp
xor
inc
or
adc
push
sbb
cmp
das
addr16
popa
pop
stos
fwait
icebp
movsl
stc
mov
push
or
rol
sbb
ret
shrl
xchg
mov
rorb
mov
mov
fwait
outsl
xchg
xchg
add
addl
ror
lcall
and
scas
jns
insl
test
xor
mov
in
push
ljmp
jno
jo
xor
mov
rorl
in
inc
push
adc
add
imul
cmpb
sahf
push
push
leave
pusha
inc
das
and
jle
addl
in
popa
clc
add
and
cmp
inc
stos
pusha
neg
lret
mov
cwtl
xor
sub
out
out
sub
sbb
inc
fs
inc
xchg
fs
xchg
mov
fs
or
int
popf
movsl
cmp
push
lahf
mov
inc
xchg
mov
std
xchg
dec
aad
mov
in
addr16
sbb
testb
cld
rcrl
stos
inc
xchg
seta
xorl
inc
ficoml
or
loope
cmpsb
fisubs
mov
mov
fcmovnb
pop
int
es
loopne
aam
mov
ljmp
xchg
iret
pushw
sub
imul
fistps
mov
or
sbb
test
add
pushf
jb
inc
cmp
lcall
mov
mov
mov
adc
mov
pop
add
ret
and
pop
pop
in
or
push
adc
iret
pop
sti
or
imul
mov
sahf
inc
fmull
outsl
ljmp
inc
in
xchg
xlat
outsb
mov
es
movl
shrl
xchg
cld
push
jmp
xlat
push
mov
mov
mov
jns
jp
insb
add
jle
mov
mov
out
xchg
filds
ds
arpl
add
sbbl
cmp
imul
dec
ss
mov
rcl
lods
inc
dec
jno
mov
aad
jb
sub
cmp
testb
cmpsl
call
repz
mov
int
test
mov
fucomip
adc
bnd
in
icebp
mov
push
out
ljmp
or
les
pop
ret
pop
test
push
in
pop
push
loope
inc
stc
shrl
fs
push
mov
int
imul
mov
pop
sbb
xchg
mov
jecxz
push
mov
or
fildl
gs
push
sub
inc
jge,pt
pop
push
mov
sbb
mov
and
mov
bound
inc
movsl
cmp
mov
gs
sub
into
jo
add
cmp
fidivl
pop
scas
inc
dec
fmuls
insl
mov
dec
mov
jne
repnz
xor
jl
ret
adc
mov
sbb
leave
pusha
pop
cmp
pop
lods
mov
data16
jp
mov
loopne
dec
rcrb
pop
xchg
js
in
mov
dec
push
stc
ja
mov
call
loop
mov
mov
pop
movsl
cmp
push
inc
fildl
ja
push
add
aaa
jbe
mov
or
pop
cmc
fcompl
add
scas
test
inc
mov
jle
sub
xor
jg
inc
or
cmp
adc
cmc
mov
jl
pop
outsb
scas
dec
loop
js
shlb
dec
jae
gs
and
inc
les
call
inc
xlat
dec
mov
int
pop
cmp
mov
push
sahf
xor
add
lea
out
lcall
mov
add
cmp
pop
and
jne
jo
bound
call
loopne
std
fidivs
push
incb
arpl
test
fwait
sbb
inc
xlat
stos
push
shlb
int3
in
mov
fildll
and
iret
out
cld
add
jo
int
cmpsb
cmp
lods
sub
aaa
cmpsl
mov
or
inc
pop
fnsave
popf
xor
call
pushf
xor
and
std
lcall
fs
clc
popf
mov
adc
xor
xchg
inc
xchg
sub
cmp
call
inc
push
call
loopne
push
ja
ss
push
insb
fstpt
rcrb
mov
pushl
sbb
lret
aaa
and
jae
ja
inc
fdivl
sbb
or
add
pop
orb
jge
in
pop
add
mov
ret
and
adc
shrb
ret
sbb
pushf
cli
pop
sub
dec
cwtl
call
pop
jge
cwtl
scas
jge
xchg
outsl
inc
repz
sub
shrb
sti
pop
sahf
das
mov
int3
sub
inc
fmull
dec
adc
cmp
mov
jo
outsl
mov
addb
fs
adc
sbb
test
loope
lret
cmp
adc
mov
js
shlb
loope
add
xor
pop
outsl
hlt
sbbl
inc
pop
in
jns
mov
daa
fwait
sbb
and
inc
fcompl
shrl
rcl
sbb
push
lods
out
mov
inc
stos
inc
jp
adc
jmp
or
mov
xlat
push
out
or
stc
nop
jge
mov
ret
mov
insl
add
aad
add
call
mov
into
sti
cmp
in
jg
and
push
cltd
xor
testl
cmp
xor
mov
sub
call
cli
xchg
leave
nop
cmp
dec
fdivl
mov
push
into
test
shrl
xor
dec
jecxz
sbb
pusha
mull
enter
fcoml
scas
or
jg
int
movsl
cmp
out
mov
loopne
or
jae
cmc
mov
jmp
inc
daa
cmp
cwtl
testl
stos
loopne
fbstp
xchg
sbbl
push
jae
xchg
jno
mov
add
aas
mul
dec
pop
testb
stos
dec
loop
push
aam
jne
mov
scas
or
xchg
dec
iret
pusha
test
loop
and
cmpsl
adc
out
dec
loopne
pop
jmp
xchg
fwait
pushf
xor
das
loop
mov
ret
mov
shrl
aam
clc
lds
bound
push
xchg
sub
cmp
jbe
or
adc
smsw
mov
mov
ret
rcrl
and
cwtl
es
call
insl
add
cli
scas
inc
in
daa
pop
repnz
or
mov
xchg
adc
inc
fiadds
xor
pop
lock
mov
mov
fcmovbe
outsb
int3
sub
enter
mov
jb,pt
testb
shrb
xor
cwtl
mov
popf
mov
inc
fsubrs
inc
cwtl
das
jge
lods
inc
cmp
pop
fnsave
stc
nop
divl
adc
mov
dec
adc
mov
mov
test
add
dec
outsl
and
mov
loope
jbe
inc
addr16
cltd
addr16
sub
push
hlt
dec
scas
nop
lcall
mov
xchg
xchg
jp
xchg
pop
mov
jb
cmp
sahf
xor
faddl
mov
adc
je
jmp
jmp
jbe
shlb
out
ret
fists
cld
xchg
xchg
add
arpl
stos
xchg
sub
sub
cmpsl
mov
out
mov
mov
or
add
sub
pop
ja
call
dec
sbb
rclb
fidivs
mov
movsb
pop
xlat
outsb
lods
vpunpckhbw
int
inc
jmp
mov
cmp
sub
repnz
mov
and
inc
xor
pop
andb
xor
push
inc
inc
mov
addr16
mov
sti
sbb
jp
or
nop
daa
dec
xchg
mov
push
mov
ret
hlt
cmp
jnp
adc
push
popf
mov
fisubs
mov
mov
push
sbbb
push
fnstenv
add
xor
jo
inc
inc
aad
aaa
movsb
es
test
dec
jecxz
mov
hlt
mov
add
jno
push
out
rolb
pop
movb
push
icebp
pop
shlb
enter
mov
das
mov
fidivrl
ds
cmp
jo
stos
lahf
add
stos
inc
jb
jmp
inc
sub
jns
loope
mov
fwait
cwtl
jnp
push
lods
mov
add
fistps
and
mov
aaa
into
jg
lcall
push
add
aad
sub
test
mov
mov
mov
mov
pop
jbe
dec
addr16
jmp
mov
jl
aaa
pcmpgtd
cmp
divb
push
frstor
mov
cli
mov
lds
push
cmc
xchg
mov
xchg
mov
xor
test
shll
pusha
add
test
ret
les
xor
ljmp
or
popl
pop
lds
ja
push
xor
les
imul
imul
mov
dec
stc
fldcw
cmpsl
flds
rclb
cwtl
push
insl
inc
mov
testb
imul
sub
xchg
loopne
pop
cmc
outsl
add
iret
add
jl
push
fs
pusha
insl
or
push
dec
inc
stos
dec
and
pop
cmpsl
cmp
jle
push
out
lods
or
xchg
out
xor
out
out
int
xchg
xchg
mov
nop
mov
ret
fdivr
arpl
enter
jmp
push
out
sub
adc
adc
adc
jnp
rcll
xchg
jecxz
ja
popf
or
pushf
mov
jl
mov
out
jno
mov
xchg
jle
cld
cmpsl
rolb
insl
fcomps
or
sub
out
cmp
aaa
into
mov
out
sub
rorb
cmc
loope
xchg
adc
inc
xlat
movsl
cltd
xchg
mov
iret
inc
test
fnsave
loope
xor
push
mov
pop
sbb
mov
orb
pop
mov
xchg
sub
pop
stos
push
insl
jo
mov
fcoml
clc
shll
sbbb
scas
xchg
loope
mov
popa
mov
ret
es
mov
or
insl
ret
fs
mov
icebp
mov
mov
pushf
jecxz
cmp
es
sub
dec
push
in
insl
imul
mov
lcall
inc
frstor
lcall
lahf
enter
jno
int
dec
loop
daa
sbb
xchg
icebp
jge
dec
outsb
pop
nop
daa
dec
pop
icebp
mov
xchg
fnstenv
jg
jo,pn
lds
dec
loope
jne
or
mov
lock
lods
scas
mov
mov
pushl
pushf
cmp
mov
movsb
cmp
jle
shll
jno
xchg
imul
movsl
cmc
rcrl
jecxz
arpl
mov
addb
or
adc
mov
xor
inc
daa
mov
fadds
outsl
push
mov
xchg
sub
and
pop
xchg
popf
pop
scas
or
iret
jo
shlb
fs
sbbb
int
inc
shll
pop
push
les
mov
sbbl
adc
test
out
out
pop
fadds
mov
cmpsl
and
xchg
lahf
jl
cmc
mov
dec
out
fwait
xor
ror
pop
in
test
mov
scas
inc
popf
xlat
in
or
inc
fstpl
sbbb
jae
out
movsb
inc
stos
inc
xor
decb
ficompl
dec
in
pop
sub
ja
shrl
fucom
jle
pop
push
mov
pop
xchg
sub
xor
mov
loop
push
mov
scas
testb
add
xor
cmp
aam
dec
mov
mov
and
mov
add
xchg
dec
aad
sub
mov
inc
aaa
into
xor
push
adcb
popl
sub
fsave
imul
sbb
pop
ret
loop
mov
stos
inc
push
dec
mov
ds
out
loopne
aas
je
rcrl
lret
sbb
cmpsl
mov
mov
add
in
fs
repnz
inc
dec
loopne
movhps
push
push
das
ficoms
pop
mov
pop
jae
mulb
cmp
pop
sub
or
movsl
sub
push
stos
or
cmp
pop
std
xchg
fs
jg
rolb
test
cmp
cwtl
insl
in
mov
pop
fcoms
loop
sti
xchg
push
add
xor
sbb
popa
arpl
cmp
or
lret
push
scas
push
out
ja
dec
das
sbb
fwait
stos
cmp
sti
mov
inc
into
cmp
loopne
cmp
inc
add
test
inc
fcoms
mov
fcomi
or
roll
rcr
fs
inc
std
cmp
popa
jo
inc
out
enter
xchg
xchg
lock
out
mov
push
push
aad
mov
das
add
jnp
addr16
xor
mov
aas
call
loop
movsl
movsl
cmp
insl
adc
enter
addr16
adc
sub
insl
jmp
dec
loope
or
and
mov
je
xor
lcall
mov
sub
dec
loopne
jae
imul
fidivrs
xchg
xchg
cs
jge
in
test
sahf
mov
push
or
adc
mov
lcall
cmp
jle
jmp
lock
jo
adc
dec
and
push
pop
hlt
sbb
adc
stos
call
adc
fsubs
adc
ss
fwait
jecxz
fstl
cwtl
nop
daa
xor
enter
clc
ja
mov
es
jno
cs
jmp
pop
dec
testl
or
icebp
mov
jmp
mov
sahf
xchg
cs
pop
scas
xor
mov
and
cmp
addl
ja
push
jmp
sbb
adc
lea
lods
inc
repnz
sub
mov
ret
mov
mov
push
out
clc
rol
pop
fstps
es
int
push
in
jmp
or
mov
cmpsb
cmp
mul
shrb
pop
adc
sbb
ds
xor
cmpb
mov
mov
test
xchg
sub
inc
adc
sub
xchg
cs
rorl
mov
or
push
push
sti
frstor
imul
xchg
sub
mov
fadds
pop
mulb
push
ljmp
push
jmp
pusha
cmp
inc
fisubs
or
fucomip
jg
aaa
into
rolb
jne
lds
in
xchg
xchg
xor
ret
lea
adc
jecxz
ds
or
or
xor
sub
mov
inc
in
mov
int
cld
xchg
aaa
out
cltd
xor
das
sub
pusha
xor
fbstp
shll
ret
pop
lods
addb
sub
addr16
js
xor
mov
filds
daa
mov
jae
pop
hlt
pop
xchg
int
testb
or
mov
ret
pop
sub
stos
inc
sub
mov
mov
test
inc
insl
cmp
pop
test
inc
aas
inc
fsubl
ret
adc
jbe
sbb
enter
pop
xchg
testb
fiaddl
xchg
leave
pop
mov
dec
xchg
mov
rolb
sub
mov
or
sub
dec
hlt
mov
shrl
mov
pop
add
in
subl
cwtl
push
mov
test
ja
mov
fsubrl
rorl
push
out
popf
inc
stc
xor
or
les
add
cmp
pop
out
xchg
mov
scas
and
jne
sbb
or
cmp
cmpsb
stos
xor
and
push
fwait
xor
loopne
rcrl
sub
std
xchg
dec
hlt
mov
xchg
das
lea
movsl
dec
loopne
icebp
xchg
insl
loop
das
in
cmc
mov
out
in
in
ss
adc
sub
mov
loopne
outsb
add
push
notb
fwait
ja
int
jge
mov
les
mov
test
fisttps
and
pop
mov
frstor
fstps
mov
filds
fisttps
jecxz
test
mov
jae
sbb
paddusw
mov
movsl
jns
push
fsub
push
insl
sarb
leave
push
mov
pop
push
cmpsl
cmp
jg
adc
ret
ds
loop
push
lea
mov
push
adc
inc
cs
sahf
xor
lods
in
xchg
sub
iret
add
int
add
bound
daa
sti
inc
mov
mov
insb
or
cmp
fmuls
jne
sbb
xchg
scas
inc
leave
jle
sbb
fdivrl
es
mov
xchg
fnstenv
add
and
lock
inc
shrb
insb
ljmp
pop
cmc
loopne
push
mov
fdivrl
inc
add
test
sbb
fisttpl
data16
gs
mov
mov
orb
jo
ret
pop
lods
cmp
movsb
mov
adc
cwtl
into
sbbl
xchg
test
dec
sub
insl
mov
inc
icebp
push
mov
push
faddl
sahf
fidivrs
loop
pop
mov
ret
emms
sahf
xchg
enter
pop
stos
mov
ss
sub
dec
ja
adc
pop
xor
xchg
or
and
inc
cli
or
inc
jo
mov
push
jne
leave
inc
pop
je
pusha
inc
xor
je
and
or
sub
fs
sub
jecxz
dec
dec
js
inc
iret
push
stos
adc
cmp
in
cmp
sti
xchg
ret
push
xchg
sub
or
data16
push
ljmp
cmp
sub
and
jmp
adc
int
or
sub
inc
frstor
dec
sub
pushf
inc
xchg
leave
mov
pop
call
mov
adc
push
enter
test
mov
cmp
push
jmp
js
jl
movsl
or
je
jle
cltd
jmp
es
cwtl
mov
jae
imul
mov
test
mov
aad
enter
xor
outsb
mov
or
popl
sub
dec
mov
jae
push
or
and
xor
add
das
xchg
adc
inc
mov
rorl
dec
aad
jbe
scas
bound
call
xor
adc
mov
xrelease
popf
mov
les
cmc
sub
sbb
mov
leave
inc
pusha
mov
fldenv
sbb
cmp
stos
leave
out
and
in
xor
fcmovu
aad
paddb
mov
divl
fcmovne
addr16
cmp
mov
sbb
inc
mov
pop
das
mov
lcall
xchg
call
or
inc
dec
fwait
mov
xor
cmpsl
clc
fidivs
stos
pop
push
adc
ret
cmp
adc
lea
rclb
shl
pushf
xor
jp
in
push
jmp
inc
shlb
xlat
inc
add
dec
fimull
int3
pop
repz
popa
ret
sub
popa
data16
inc
push
pop
lock
cltd
xor
lea
cmp
sub
ror
loope
test
sahf
xor
sbb
sbb
jb
push
leave
inc
xchg
in
jne
lahf
push
mov
bound
inc
add
add
data16
test
sub
shrl
popf
loop
out
insb
insb
call
push
xor
mov
jns
push
jo
stos
in
rcll
popa
xchg
dec
test
arpl
xor
icebp
je
dec
jne
xchg
cmp
outsl
repnz
push
adc
push
adc
inc
fwait
xor
jecxz
aam
bound
shr
push
data16
mov
adc
and
sahf
inc
dec
lahf
inc
int3
pop
popa
mov
xlat
sub
sti
insl
fwait
popa
cmp
dec
or
outsl
movsb
dec
mov
push
mov
inc
dec
inc
fidivrs
add
push
fucomp
dec
push
lret
andb
and
mov
inc
jmp
cmp
pop
repnz
mov
and
add
mov
push
leave
push
ret
ljmp
adcb
xchg
ffreep
popf
xor
add
inc
jnp
xor
sub
pop
test
lret
lods
inc
out
ljmp
push
outsl
in
out
lret
xor
sub
pop
sbbb
jl
insl
xchg
pop
ret
sbb
dec
inc
xor
pop
popa
cli
sbb
mov
fnsave
out
and
and
fldcw
out
xor
imul
test
gs
mov
imul
cltd
das
cmc
mov
ljmp
adc
movl
jecxz
loopne
mov
fxam
mov
xchg
cmc
sbb
push
add
jnp
cltd
pop
daa
mov
aad
xor
mov
sarw
pop
jne
insb
cmpsl
jle
hlt
cli
xor
jge
popa
int
adc
mov
inc
jns
fnstcw
xor
pop
repz
mov
hlt
add
ja
dec
pop
and
ljmp
cmp
fidivl
icebp
dec
sbb
xchg
cli
pop
sbb
pop
int
lret
ds
pushf
out
lock
adc
test
inc
xchg
and
fisubrl
xor
ficoms
iret
mov
fcompl
sbb
cmpsb
cmp
int
and
push
mov
or
mov
jecxz
adc
sbb
mov
fldenv
adc
xor
cmp
sbb
aaa
es
mov
cmp
push
and
dec
xchg
cmpb
es
mov
test
hlt
iret
leave
mov
or
pop
sti
dec
jmp
push
call
inc
cmc
push
in
push
insl
or
mov
loopne
fists
mov
add
push
mov
and
xor
mov
in
fcomps
push
jno
mov
push
loopne
pop
addb
adc
mov
mov
inc
loope
add
mov
sti
cld
or
jge
pop
push
js
loope
sti
inc
fldcw
sahf
ss
inc
pop
cli
mov
dec
insb
mov
into
in
int
add
sub
push
mov
push
repnz
jbe
or
inc
out
push
inc
sbb
inc
dec
clc
pop
push
jnp
pop
xor
aad
or
push
sbb
pop
push
dec
sti
scas
test
jecxz
cld
lods
mov
mov
ljmp
std
not
mov
cmp
cmpl
xchg
cs
popf
mov
mov
popf
sub
add
mov
xchg
mov
ss
scas
aam
sub
mov
iret
mov
mov
xchg
dec
adc
dec
jecxz
ss
mov
icebp
fldcw
and
divl
fdivrs
pusha
js
lret
int3
lods
pusha
es
cwtl
or
mov
arpl
mov
mov
add
stos
lcall
jmp
xchg
inc
in
lahf
jecxz
mov
mov
nop
lds
or
insb
pop
aaa
into
push
jae
shll
seta
or
cmp
mov
lret
jbe
popl
mov
mov
pop
into
les
or
outsl
xor
cmp
pop
xchg
fxch
add
rolb
xor
shll
icebp
mov
pop
fdivrs
out
mov
mov
cmpsl
xchg
rolb
xchg
add
nop
stos
test
pop
jp
daa
cwtl
mov
add
cmp
dec
aas
fsubl
pop
mov
dec
cmc
xor
out
xlat
nop
daa
or
cmp
and
pop
je
adc
xchg
shr
or
lock
xor
mov
mov
stos
in
or
sbb
cmp
pop
pop
cmp
jle
loopne
ja
outsl
fstpt
dec
shrl
pop
bound
out
mov
pop
jle
sahf
test
cmp
imul
pop
mov
stos
mov
stos
sub
movsl
mov
btr
std
cmpsb
mov
test
loopne
mov
sub
lret
fnstcw
mov
sub
mull
mov
mov
call
xchg
xchg
sbb
jb
mov
scas
call
push
in
addl
add
add
leave
aad
iret
or
pushf
movsb
scas
add
loope
lahf
ss
dec
xchg
sub
pop
mulb
mov
jnp
jae
jmp
stos
mov
jmp
gs
test
sub
lds
lock
or
cmp
mov
aam
or
xchg
into
xor
sub
js
test
dec
mov
pop
and
push
jmp
lcall
xchg
rclb
shrl
add
and
sub
hlt
ja
movsb
insb
fsubrl
lock
je
inc
imul
aad
or
js
leave
pusha
xchg
cltd
mov
mov
sub
sub
into
sbb
stos
repz
and
add
mov
lods
jg
cwtl
lahf
shll
pop
jg
mov
and
cmc
dec
jnp
adcb
pushf
push
mov
bound
scas
roll
or
mov
or
lods
xchg
adc
fdivl
pusha
or
outsb
pop
outsb
scas
dec
push
iret
ja
xchg
or
adc
inc
inc
adc
test
add
insl
pop
mov
mov
cmp
dec
cmp
int3
push
in
ficoml
js
push
arpl
lcall
push
repz
pusha
adc
pop
inc
mov
and
dec
mov
jle
lds
or
jae
test
aad
cmc
xchg
notb
mov
xor
cmp
xchg
sbb
cmc
loope
shlb
icebp
add
mov
push
sbbl
daa
jb
rclb
ss
push
pop
xor
movsb
xchg
cs
out
je
push
hlt
mov
adcb
sahf
cmp
push
xor
cltd
pop
xlat
in
imul
insl
adc
insb
jae
test
dec
lods
push
mov
imul
in
iret
xchg
xchg
adc
lahf
push
jmp
xor
xchg
push
int3
nop
pop
ficoml
iret
inc
inc
xlat
jno
jne
ret
xor
fwait
cmp
xor
dec
cltd
or
dec
iret
pop
repz
fnstenv
pop
inc
mov
push
leave
fwait
mov
out
pop
mov
ljmp
or
test
test
call
into
cs
stc
xchg
jecxz
mov
and
ret
movsl
stc
dec
and
repz
adcl
aas
adc
scas
dec
xchg
js
mov
mov
bnd
loope
lds
adc
push
push
sbb
dec
sarl
pop
inc
sti
pop
arpl
fistps
push
lods
movsb
cmp
push
js
outsb
ret
fcomps
bound
les
cmc
pusha
mov
adc
fnsave
es
adc
cld
jo
cmp
push
xchg
sub
mov
lahf
dec
inc
add
repnz
mov
push
dec
mov
clc
fsubl
mov
into
mov
mov
push
rol
mov
leave
pusha
cmc
aam
mov
xor
add
and
rol
cmp
and
jmp
nop
int3
shrb
lock
popa
dec
int3
arpl
movsl
push
inc
xchg
dec
xchg
xchg
ds
pusha
dec
insl
flds
ret
mov
sarb
add
out
xor
loope
movsl
dec
filds
test
decl
cmpb
addr16
lea
aam
sub
jns
call
lahf
ss
or
ret
pop
sub
cld
xchg
je
mov
push
lock
xchg
stos
or
out
cmpsb
in
ficomps
test
ss
xchg
sbb
xor
iret
mov
mov
test
or
sbb
sbb
pushf
test
add
xchg
dec
loopne
xor
scas
pop
repnz
fcompl
push
pop
jns
dec
call
mov
fcomp
jns
jb
and
loopne
cmp
pop
lock
mov
loop,pn
dec
add
mov
dec
push
in
imul
lret
notb
mov
dec
push
inc
shl
ret
sarl
test
xchg
clc
cs
insl
out
mov
inc
loop
arpl
sbb
icebp
sub
cmpsl
and
mov
rorl
jmp
or
test
add
rcrl
out
or
fidivrs
xchg
or
and
pushl
js
int3
push
adc
cwtl
xchg
sub
cltd
hlt
test
jmp
cmp
lcall
shl
sbbb
push
mov
decb
aam
aaa
nop
push
jns
sbb
mov
dec
data16
insl
fcoms
xchg
es
fcompl
cmp
xchg
clc
lock
add
clc
jo
push
mov
stos
into
jecxz
sub
fdivp
andb
inc
pop
or
jmp
out
outsb
or
sarl
lea
push
adc
push
rcll
push
mov
mov
lret
jb
rol
mov
testb
in
add
sub
cmp
jg
stc
push
mov
xchg
lret
sub
jmp
jmp
lret
sbb
leave
fwait
cmpsb
cmp
in
mov
or
mov
test
sbb
and
pop
and
jae
stos
lahf
mov
test
lret
aam
jbe
cld
mov
std
nop
ret
out
in
aad
xchg
xchg
lret
sti
mov
subb
stc
insl
adc
cmp
push
jg
mov
jno
js
jbe
mov
adc
push
push
int3
mov
xchg
xor
pop
adc
and
lea
push
repz
jbe
cwtl
insb
push
xor
gs
jnp
out
arpl
inc
cli
adcl
test
sub
pop
leave
sti
jne
jge
stos
sub
jl
sarl
add
inc
push
adc
add
mov
sub
dec
filds
lds
jecxz
xor
mov
mov
xchg
sub
xchg
adc
inc
fdivp
lcall
push
enter
imul
push
ds
xchg
adc
lret
cld
xlat
js
imulb
sbb
dec
lret
add
dec
fildll
mov
jo
inc
pop
mov
jle
xor
adc
dec
ja
out
outsl
mov
mov
or
lock
das
int3
cmp
repz
pop
repz
cltd
pop
mov
lods
dec
call
mov
test
xorb
arpl
mov
pop
or
push
and
ljmp
xor
jae
mov
pop
shlb
cmp
pop
mov
jle
xchg
enter
inc
mov
loop
in
xor
js
hlt
lods
sarb
aad
push
popf
pop
divb
fisubl
imul
jne
adc
mov
push
inc
fdivrs
test
icebp
dec
jle
jg
mov
and
loope
push
jbe
jle
xchg
pop
push
insb
sbb
cmp
mov
xor
cmpsl
and
inc
dec
inc
mov
ret
and
jmp
test
xor
stc
mov
xlat
lods
int
stos
insl
jl
lahf
int3
jge
cmp
faddl
cmp
stc
popa
enter
enter
fsub
hlt
repnz
xchg
inc
enter
sub
inc
lods
jecxz
mov
mov
fs
adc
in
hlt
push
ss
xchg
add
out
push
dec
dec
addr16
jnp
and
out
jnp
and
cwtl
in
fs
cmp
clc
icebp
out
mov
and
fidivs
lds
xorb
jmp
or
icebp
loope
outsb
dec
adc
adc
lret
mov
push
cmp
repnz
aas
mov
cmp
sahf
ret
sub
cli
out
enter
lods
sbb
scas
out
and
bound
popf
add
rorl
andl
fwait
cmp
icebp
jnp
movsb
jmp
jg
lret
ret
and
orl
lods
test
cmpsb
filds
enter
fimull
nop
xchg
leave
mov
mov
aaa
jns
jno
js
push
aas
jne
imul
cli
daa
jns
add
mov
and
or
mov
mov
xchg
ja
arpl
cwtl
push
push
mov
xor
scas
add
adc
push
jo
lret
fdivr
or
hlt
in
mov
aas
out
xor
sbb
jbe
sub
roll
int3
dec
imul
mov
inc
jnp
out
lock
mov
push
incb
mov
rorl
dec
xor
pop
push
mov
adc
neg
adc
pusha
sub
ret
in
test
push
sbb
movsl
scas
cmp
inc
add
inc
std
add
sub
ss
or
ret
movsl
dec
mov
pop
mov
push
xor
test
push
add
cmp
iret
gs
incl
add
fidivrl
inc
clc
add
adc
test
jno
push
les
stc
inc
xor
mov
push
hlt
xchg
lahf
xchg
movsl
movsl
aad
sub
fdivr
testb
push
fistpll
fucomp
xchg
insl
sub
push
shr
sbb
fsubs
pop
in
mov
cli
mov
cmp
sarb
pusha
cmp
repz
outsl
in
mov
sbb
jg
rorl
outsb
cmp
mov
xor
mov
fcoms
addr16
repnz
ja
mov
movsl
test
jae
inc
lods
ret
icebp
popa
cmp
xchg
adc
pop
sarl
clc
outsb
jg
mov
sub
insl
cmpsb
lret
mov
cltd
pop
inc
fimull
jno
sub
mov
fldt
inc
inc
les
mov
pop
fldcw
pop
xchg
lods
fs
mov
test
pop
popf
outsl
dec
call
inc
or
out
jg
cmp
pop
or
push
mov
or
adc
sbb
pop
push
inc
insb
inc
int
or
pop
add
sbb
incb
pop
mov
adc
inc
jne
test
arpl
jg
mov
jmp
mov
pop
and
xor
stc
popa
push
adc
fldl
pop
out
xor
hlt
cmp
movsb
scas
inc
inc
fwait
aas
or
xchg
movsb
push
jecxz
scas
repnz
ret
shr
jg
lds
mov
out
jmp
inc
or
xor
loopne
out
test
mov
pop
aam
fsubrs
negb
lea
mov
stos
ret
pushf
insl
into
in
leave
adc
aaa
push
out
inc
adc
mov
fmull
sbb
stos
inc
bound
insb
add
rorl
cmp
mov
adc
in
dec
daa
fistpll
inc
cmpxchg
std
out
sbb
mov
jae
mov
push
pop
popa
push
lods
xchg
daa
iret
lahf
push
std
lods
test
adc
inc
shll
mov
xchg
rcll
bound
sub
lret
stos
insl
test
jno
loop
dec
enter
cwtl
mov
mov
ret
mov
sbb
roll
mov
aas
push
jae
cs
neg
jg
in
or
ss
mov
inc
in
push
fs
push
mulb
push
xor
inc
xchg
cmpsl
xchg
fnsave
imul
movsb
and
xchg
mov
sub
mov
jnp
movsl
jns
in
lea
sub
aaa
test
inc
xchg
mov
mov
push
bnd
mov
lret
sub
repnz
dec
mov
sbb
xor
pop
lret
mov
loope
fidivs
lret
pop
dec
jns
jg
and
add
insb
rcl
and
test
loope
je
mov
push
lahf
mov
stos
mov
push
jbe
xor
call
push
divl
outsl
mov
arpl
pop
sub
inc
jne
repz
jb
lea
out
push
outsl
pop
mov
and
add
xor
ret
stos
imul
js
jb
ljmp
mov
xchg
or
push
pop
push
and
pop
stos
mov
push
mov
aad
jnp
imul
xchg
jecxz
mov
xor
push
push
sbb
adc
jo
xchg
pop
jmp
dec
pop
ljmp
xor
push
sub
xchg
loope
scas
add
loopne
stos
repz
xor
std
fs
fbld
dec
pop
push
loop
scas
cmp
inc
inc
and
cmc
mov
inc
pushf
das
mov
pop
push
cmp
fwait
sub
test
mov
xor
xor
fbld
cmp
or
sarl
mov
dec
fadds
rcrb
lret
push
or
xlat
cmp
xchg
and
inc
aad
push
sbb
clc
mov
test
cmp
aaa
outsb
mov
int
mov
pop
fmuls
pusha
enter
sbb
leave
fbld
movb
adc
fistps
idiv
and
test
das
inc
or
pop
inc
mov
jle
dec
fisubrs
push
jbe
jo
adc
ret
popf
push
icebp
es
or
lds
cmpsb
cmp
xor
push
nop
mov
lock
pushl
fsubl
adc
push
or
mov
sub
jmp
fistpl
mov
lea
movsl
adc
sbb
adc
in
pushf
or
ret
mov
je
roll
or
aam
pop
xchg
sub
loop
mov
ret
pop
and
cmpsl
and
clc
xor
cmpsl
test
push
mov
lods
jae
fwait
mov
cmpsb
sbb
push
icebp
jg
enter
push
pop
int3
enter
or
mov
inc
mov
out
cltd
sub
orb
and
jo
aas
jns
das
stos
pusha
jp
xorb
and
inc
shlb
decl
and
cmp
in
stos
aas
cmp
xor
popa
jno
daa
mov
fcomps
jecxz
sbb
add
lret
mov
mov
add
sub
fsubs
inc
xchg
sub
jecxz
test
popl
aam
adc
jp
daa
call
adc
or
aad
lahf
push
daa
cmpb
arpl
outsb
sbb
aas
cmc
mov
dec
cmp
sbb
pop
push
cmp
adc
mov
mov
sbb
ljmp
lock
js
and
mov
or
push
and
in
add
xchg
mov
inc
adc
and
cld
clc
xor
mov
sbb
scas
lahf
cmp
mov
test
cmp
dec
xor
fidivrl
jb
xchg
js
lods
jmp
stc
sub
or
cmp
jmp
aam
jb
push
jnp
pop
out
xchg
call
aad
test
adc
push
fsubr
je
pop
lods
jno
test
addr16
xor
fwait
aam
in
push
out
outsl
sbb
xor
int
dec
push
push
push
xchg
jp
addb
imul
jo
inc
and
push
mov
lds
add
jmp
iret
pusha
push
sbb
pushf
xchg
imul
aam
cmp
subb
xchg
pushf
xor
mov
cmp
hlt
add
ror
xor
cmp
int
or
mov
xchg
aam
arpl
sub
mov
add
sbb
stc
xor
adc
out
pop
out
jnp
or
rdpmc
sub
js
fsubr
adcl
enter
mov
inc
or
dec
call
pop
arpl
hlt
xlat
scas
mov
aad
popf
sbb
call
jbe
shr
popf
mov
inc
or
xchg
pop
pusha
cmpb
push
xor
dec
mov
push
call
ret
pusha
in
sti
jbe
or
idivb
in
pop
sbb
pop
jl
adc
ret
pop
lds
sbb
sub
mov
mov
out
out
cld
icebp
mov
ljmp
inc
test
aaa
sbb
jmp
nop
cld
adc
stos
mov
pop
test
iret
adc
mov
loope
fs
xchg
sub
and
mov
xor
push
lods
inc
test
lods
xchg
das
lret
pop
push
hlt
mov
jne
mov
pop
dec
loop
addr16
mov
sti
clc
mov
add
pop
mov
jmp
mov
push
or
push
icebp
or
mov
mov
enter
shr
scas
out
fdivrl
mov
push
xchg
add
daa
cli
inc
test
ja
test
movsb
sti
xchg
xlat
adc
sbb
in
in
mov
dec
int3
sub
stos
inc
leave
push
pushf
int
xor
cld
dec
pop
cs
jno
leave
inc
arpl
xor
sbb
loope
mov
inc
push
outsb
add
xchg
stc
mov
jmp
sti
jmp
daa
xchg
cs
jmp
rcrb
mov
sbb
or
sub
hlt
mov
and
addr16
sbb
iret
jo
mov
lock
arpl
inc
and
jo
js
xlat
das
cmpsb
dec
adc
dec
fldt
xchg
push
add
loop
cwtl
cmpsb
mov
dec
jmp
adc
jl
mov
pop
jge
jle
imul
and
lock
push
mov
mov
push
imul
incb
mov
mov
clc
dec
or
loop
out
inc
dec
xlat
ja
insl
add
add
icebp
cli
fwait
mov
out
or
shlb
inc
pop
add
inc
jns
adc
pop
mov
push
daa
hlt
pop
lahf
insb
int
push
cmp
loope
hlt
xchg
mov
movsl
icebp
ljmp
add
call
mov
fstl
lret
aam
mov
sbb
aam
pop
stc
mov
into
sbbb
sub
cld
hlt
lock
in
jnp
xchg
mov
lods
nop
mov
jae
pop
rcrl
or
adc
ss
add
mov
ljmp
addr16
adc
aas
psubusw
dec
cmp
enter
xchg
adc
xchg
lods
xchg
sbb
es
data16
test
mov
sub
ss
cmc
mov
push
pop
stc
mov
into
or
cmp
gs
mov
shr
or
inc
jge
pop
repz
lcall
test
inc
cmpsl
pop
lock
icebp
ja
xor
ret
pop
icebp
jne
push
stos
mov
cmp
fucomi
int3
leave
es
mov
sti
jb
fildl
pop
mov
mov
jo
jmp
je
shrl
xchg
out
repz
adc
lret
ret
hlt
xchg
test
push
popa
jg
jae
jl
popf
ret
add
cli
enter
in
inc
mov
aad
push
repz
cld
and
jbe
sbb
add
push
xor
orb
lods
inc
cmp
int
arpl
ljmp
in
mov
fs
adc
xchg
movhps
jns
cmp
cmpsb
in
dec
out
scas
sbb
xchg
int3
loopne
mov
out
fidivs
push
mov
adc
insl
xchg
daa
mov
fidivs
sub
push
nop
mov
inc
pop
inc
cwtl
jl
or
sbb
shl
add
push
sub
orb
imul
movsb
mov
push
lret
cmp
cwtl
and
jmp
inc
pop
fisttpll
cmp
ss
paddsw
pop
or
repnz
jg
leave
jecxz
fmuls
jecxz
and
jns
in
insb
pop
xor
dec
pushf
jge
rcll
dec
xor
pop
cwtl
in
sbb
stc
inc
cli
sbb
arpl
sahf
pusha
les
mov
add
or
and
jno
pop
nop
cmpsb
add
and
testl
loopne
arpl
in
mov
fdivrl
push
jg
incl
addr16
push
inc
bound
faddp
iret
xchg
jle
xchg
cs
mov
mov
stc
add
mov
aad
aam
stc
add
mov
cmp
jp
mov
out
ret
and
jo
jecxz
in
lods
sti
cmpsl
lds
je
add
loope
xchg
mov
fstpt
mov
movsl
cmp
imul
xor
xchg
pusha
sbb
addr16
dec
arpl
lret
sbb
sbb
stos
and
add
mov
mov
sub
sbb
fs
arpl
mov
mov
cmp
lret
js
add
fisttpll
or
mov
jnp
cmpsb
leave
xchg
jp
mov
sbb
mov
xchg
sbb
lret
aad
fwait
xor
ja
xor
sub
les
and
insl
pop
and
fisubrs
leave
arpl
cli
scas
fdivl
pop
push
jge
adc
lea
add
popf
pop
repz
scas
lods
rcl
fmulp
outsl
push
call
jg
pop
pop
loopne
mov
shrl
xchg
xor
cwtl
inc
shll
andl
icebp
xchg
cld
xchg
ss
add
rcrl
sub
fsubs
inc
mov
ret
mov
mov
jne
jns
test
jnp
adc
pop
inc
xchg
add
fdivr
and
dec
sub
pop
fsubrl
inc
lahf
out
xor
xchg
add
dec
xorl
xor
inc
jbe
mov
xor
and
outsl
test
testb
mov
mov
add
xor
arpl
rcrb
inc
dec
mov
and
pop
gs
push
mov
iret
jae
and
fadd
mov
jmp
inc
jg
stc
pop
ss
inc
xor
pop
fbstp
inc
fidivl
aam
cmp
xchg
mov
inc
jo
das
adc
and
push
inc
test
icebp
lret
xlat
and
xor
mov
insb
or
pushf
shrb
inc
les
test
call
pop
repnz
cli
clc
or
repnz
mov
xchg
rolb
fcmovu
sub
jb
insl
movsb
mov
mov
movsb
mov
inc
das
je
sub
loop
cltd
mov
mov
mov
mov
fidivs
decl
push
xor
imul
push
pusha
into
adc
push
mov
mov
in
imul
xchg
sub
out
cmp
xchg
add
mov
fsubrl
andb
mov
faddl
pop
sub
jecxz
ror
and
repnz
jno
mov
ret
fsubrs
imul
daa
pop
iret
pop
cmpsl
cmp
add
mov
cmc
xchg
mov
xchg
mov
outsl
repnz
lods
add
adc
cmp
js
lds
aam
push
ja
push
divb
fucomp
mov
aam
xchg
mov
cltd
xchg
punpckhbw
or
int
je
clc
inc
pop
inc
jo
inc
test
in
fiaddl
cltd
sub
or
mov
aad
dec
ret
enter
hlt
jle
mov
adc
or
and
cmp
xchg
or
xor
sahf
add
dec
nop
cltd
jae
aas
test
xchg
xchg
aad
inc
fidivrs
loope
xor
dec
push
sub
out
xchg
scas
sarb
addr16
outsb
into
cmp
mov
or
inc
testl
cs
mov
fcomip
adc
cs
je
sbb
cltd
dec
fs
mov
loopne
jl
pop
sub
cmp
dec
lahf
inc
jnp
repnz
fwait
inc
xchg
int
inc
fildl
hlt
dec
loop
sbb
pop
push
daa
popa
dec
sbb
fwait
inc
xor
mov
pcmpgtb
repnz
test
sarl
jae
je
mov
mov
jbe
mov
adc
lods
inc
sbb
out
call
mov
imul
shrb
dec
inc
adc
int3
shll
rol
sub
enter
mov
cltd
push
fwait
repnz
cmp
adc
jnp
mov
xor
hlt
inc
nop
push
or
cli
lods
std
lods
xchg
xchg
push
popf
rcrl
ja
fisubs
dec
xchg
push
dec
clc
sbb
cs
fsubr
push
leave
pusha
daa
jo
jl
testb
or
shrb
pushf
mov
dec
out
cmc
push
push
sub
pop
push
fs
mov
adc
addb
fistl
sub
cli
adc
arpl
cmpsb
add
sub
mov
adc
stos
stos
mov
cmc
dec
lcall
out
lret
add
add
jb
fisubs
and
std
and
cmpl
jp
jno
mov
dec
xchg
cmp
sub
loope
cmp
movsl
lds
or
push
add
mov
dec
xchg
iret
pop
pop
xchg
mov
cmpsb
lock
frstor
leave
pop
xchg
push
ffree
adc
aaa
addl
mov
xor
outsb
xchg
test
leave
sbb
fsubrl
popa
jns
pop
mov
pop
adc
cmpsl
mov
bound
lea
jl
stc
pop
xor
addl
mov
sbb
push
ja
pop
inc
cmpsb
cmp
fists
push
cltd
cmc
cli
push
stos
mov
clc
popl
nop
fs
movsb
int3
xor
lret
and
or
or
dec
imul
inc
adc
push
inc
mov
leave
ret
pop
sti
mov
cmp
aad
sub
ficomps
fcomp
push
out
out
bound
stos
or
cmp
aad
cmp
xchg
cs
pop
mov
faddl
mov
and
imul
xor
fildll
xchg
mov
pop
mov
mov
mov
stos
xchg
aam
dec
add
js
push
outsb
incb
pop
icebp
or
rcr
cmpsb
fs
fistpll
sbb
add
mov
adc
push
adc
movsl
loop
aad
cmc
inc
inc
std
subb
filds
inc
hlt
push
pusha
jmp
or
mov
sbb
pop
pop
sbb
les
xor
dec
lahf
fidivrs
stos
daa
call
push
leave
add
stos
jae
push
and
outsb
ja
fnsave
sub
pop
popa
xchg
lods
test
pop
pop
into
xor
add
mov
jmp
or
jo
das
sub
lahf
test
out
movsl
es
in
inc
sub
mov
pop
push
jns
lret
loope
shrl
or
ret
pop
fbld
sbb
loope
mov
jmp
loop
mov
ja
add
mov
loope
pop
dec
pop
push
xor
jb
mov
push
js
lods
mov
aas
or
lret
fidivs
stos
pop
sbb
xor
loope
mov
xor
xchg
dec
in
test
lods
imul
mov
in
mov
cmp
in
mov
push
sti
orb
jp
jp
popa
xor
lods
jecxz
lds
daa
in
shrb
inc
push
ret
sar
sub
mov
xor
loop
inc
cmp
xchg
mov
pop
jne
movsb
xchg
jl
ret
push
mov
insl
sbb
push
mov
mov
lahf
push
mov
popf
movsl
lods
jno
faddp
mov
and
movsl
cmp
mov
sbb
pop
scas
and
mov
call
and
add
pushf
fiadds
push
loope
ja
dec
add
push
inc
add
mov
pop
mov
outsl
daa
push
sarb
inc
xor
ja
insb
popl
ret
xchg
cmpsb
addl
arpl
mov
dec
push
mov
pop
jb
jmp
cmp
sbb
fldcw
push
add
int
jp
and
push
popf
push
out
call
gs
or
push
dec
mov
or
mov
test
scas
stos
cmpsb
fidivl
divb
jo
popf
je
iret
dec
inc
push
mov
loope
adc
mov
cld
mov
push
jae
stos
inc
dec
loopne
inc
push
inc
fmulp
sahf
xor
jp
cmp
rcll
push
shl
lcall
loopne
jl
cltd
add
mov
shrl
repnz
je
jg
in
jns
pop
lock
call
cmp
testl
or
test
test
add
mov
mov
lods
test
dec
mov
pop
adc
mulb
xor
push
adc
shlb
rcrb
xor
push
out
stc
jnp
aaa
push
and
push
pop
nop
inc
add
js
add
inc
add
int3
mov
jmp
in
insb
inc
xchg
lret
pop
enter
mov
popf
aam
mov
rorb
aam
lahf
fisttpl
shrb
push
iret
test
mov
cmp
push
call
push
cmc
lahf
shrl
cmpsl
aas
mov
imul
xchg
jbe
iret
and
pop
jmp
out
sub
add
hlt
popa
arpl
aas
lods
call
inc
dec
jmp
sbb
cmp
and
push
sti
or
push
inc
cmp
leave
int
cmp
cmp
in
sahf
lcall
popa
or
mov
test
inc
sub
cmc
out
xor
fistps
gs
jae
fbld
mov
xchg
outsb
cmp
inc
push
mov
loopne
pop
lds
aaa
sbb
repz
mov
stos
mov
pop
shlb
jne
in
test
xchg
xchg
sub
mov
movsb
add
add
mov
ret
xor
push
push
mov
test
push
or
fs
xchg
call
or
xchg
mov
or
push
cltd
push
je
gs
stos
mov
add
push
xor
loopne
stos
jbe
sbb
push
lret
pop
fwait
jmp
pusha
push
xchg
mov
aaa
jb
cmp
insl
aaa
cmpsl
or
push
mov
icebp
dec
sub
pop
add
out
test
lret
les
cmc
cs
xlat
push
ret
pop
xchg
sub
iret
jno
cli
xor
jmp
lock
push
shl
xchg
xchg
subl
lods
data16
xchg
sbb
in
inc
in
sti
cmp
test
sub
dec
sbb
dec
scas
movsl
mov
xchg
mov
mov
inc
andb
mov
insb
jle
orb
ret
mov
mov
xchg
jb
mov
dec
loopne
dec
adc
xchg
into
and
outsb
push
inc
pop
outsb
cmpsb
je
aaa
cmpsb
ret
xor
imul
adc
loopne
push
sbb
mov
repnz
push
jo
fwait
push
push
out
mov
cld
pop
lods
push
lods
xchg
cmp
sbb
push
xchg
bound
sbb
outsl
arpl
mov
stc
push
out
add
ds
stos
sbb
sbb
push
or
test
mov
fisubrs
frstor
mov
adc
add
jg
fwait
pop
mov
ret
add
jb
dec
add
sbb
lds
mov
mov
fisttpl
or
int
ret
iret
test
cmp
jb
pop
mov
mov
fstl
movsb
cmp
add
les
scas
fsubs
in
xor
imul
sarl
stos
lea
mov
inc
cwtl
outsb
mov
cmp
sbb
stc
ror
xor
sbb
inc
sti
push
pop
out
cmp
movsl
mov
adc
pop
shrl
mov
pop
repnz
shrl
sub
leave
in
je
pop
ljmp
test
mov
in
pop
and
xchg
data16
or
cltd
mov
pop
jge
out
pop
sbb
pop
clc
iret
and
ficoml
shrb
and
and
aad
pop
jo
cmc
or
xlat
in
aaa
pop
rclb
mov
stos
sbbl
decl
scas
ja
or
decb
mov
push
les
xor
sbb
pusha
push
leave
dec
out
pop
push
imul
into
ds
popl
xor
ss
lods
sub
cli
xchg
push
mov
sbb
inc
cmp
ljmp
push
sub
xchg
into
sbb
jecxz
ljmp
lods
jl
push
mov
je
arpl
push
mov
clc
addr16
scas
push
sub
jo
xchg
and
test
ja
outsl
fidivrs
push
cld
push
out
cmp
pop
sbb
cmpsb
imul
inc
mov
jne
xor
cld
push
add
mov
je
inc
push
add
lahf
enter
shlb
pop
out
test
adc
in
movsb
dec
mov
mov
dec
mov
fsts
leave
cs
jns
les
lret
fdivrs
call
in
mov
cmpsb
sbb
fdivrl
and
cli
jne
leave
mov
jae
dec
or
lret
pop
jmp
outsb
pop
hlt
adc
and
lret
pusha
jns
lods
and
addl
push
ret
movsb
daa
pop
aaa
into
sti
in
shr
push
xchg
push
int
fnstsw
cld
dec
sbb
jbe
out
xchg
dec
fcoml
jecxz
mov
xor
cwtl
push
movsl
or
mov
fwait
mov
fs
std
movsl
jmp
push
pop
and
xor
cmp
push
push
pop
jl
mov
sbb
push
cltd
stos
aaa
adc
sub
push
fildll
stc
mov
in
jecxz
mov
adc
inc
jbe
add
insl
or
cld
mov
cmpsb
js
stos
pop
imul
mov
lret
popf
xchg
adc
cli
adc
rcrb
test
ljmp
aas
scas
adc
clc
je
or
or
push
jmp
in
outsb
inc
inc
jo
or
jg
mov
push
xchg
cmp
iret
xlat
sub
jae
pop
adc
arpl
imul
repz
rcll
ja
fidivs
clc
cwtl
cs
xchg
push
xlat
dec
sub
in
fdivs
imul
fistps
lods
in
lcall
pushf
bound
pop
pop
adc
clc
int3
aad
fwait
mov
andl
push
int3
push
lcall
sahf
or
dec
shll
jo
stos
in
repz
mov
push
shll
inc
out
addr16
xorl
push
jmp
cmp
ficompl
lret
in
xor
jae
or
add
pop
mov
lret
daa
out
fnstsw
ja
add
sbb
lods
addb
pop
mov
xlat
or
jo
ds
cmpsb
mov
sub
add
movsl
sbb
cmp
inc
mov
lahf
lods
sub
xor
jae
push
xlat
jge
es
mov
mov
pusha
cmpsl
mov
sbb
cld
pop
or
push
imul
aam
rep
cmp
inc
cmp
mov
jmp
mov
xor
sbb
cmpsl
jae
call
lcall
fstpt
mov
enter
push
rcl
cmp
pusha
mull
mov
pushf
inc
inc
add
jbe
pushf
jns
mov
cld
scas
call
cld
xor
cmp
imul
flds
push
jne,pt
stos
cld
hlt
xchg
mulps
add
jbe
clc
cs
xor
out
add
adc
sub
xchg
ja
rcrl
negl
aam
in
ret
or
pop
enter
cld
push
xor
push
icebp
addr16
mov
lock
pop
sub
and
sub
add
jns
jl
xchg
fwait
push
imul
fidivl
icebp
add
jns
inc
push
ja
xor
fadds
bnd
je
add
mov
fisubs
iret
jns
add
push
stc
jecxz
xchg
sub
dec
sbb
adc
xchg
nop
pop
out
ja
dec
mov
add
push
lods
add
inc
push
es
iret
jbe
push
das
les
es
push
cwtl
jne
lret
outsl
cmpsb
mov
imulb
std
sub
ljmp
movsl
inc
mov
sbb
cld
movsl
sub
dec
xor
ja
mov
cmc
addr16
sub
cmp
xor
push
inc
and
xchg
lds
mov
push
mov
jmp
mov
or
lods
xor
dec
ficoms
movsb
int3
aad
mov
stos
les
dec
and
and
push
jmp
xor
mov
lods
sbb
leave
mov
les
imul
into
sub
or
adc
out
loope
lret
pop
data16
sub
dec
pusha
sub
mov
test
xchg
jae
in
dec
xchg
sbb
shlb
mov
ret
jp
and
push
mov
push
rol
adc
cmp
fadd
cmpsl
push
mov
mov
add
call
leave
mov
push
pop
outsl
orl
and
jbe
jecxz
dec
fstl
lcall
ss
push
iret
fldl
push
daa
sahf
mov
mov
xor
outsl
cli
hlt
addb
xchg
clc
xchg
int3
xchg
push
mov
xor
mov
imul
shll
daa
mov
ret
xchg
sbb
and
loope
jecxz
bound
and
fwait
xor
mov
fildl
or
test
fisubl
das
pop
test
aas
popf
push
mov
pop
fcoml
xchg
xchg
sub
movsb
or
cmp
mov
cmp
inc
mov
out
dec
inc
and
outsl
insl
sbb
cs
pop
movl
sub
movsb
mov
sahf
ss
roll
mov
nop
addr16
jecxz
ds
fnsave
add
imul
pop
sbbl
loop
cmp
dec
movsl
jb
cmp
mov
rcr
sbb
mov
in
insl
sub
into
jbe
pop
inc
pop
imul
shlb
ret
adc
stc
sbb
add
dec
xor
pop
adc
call
icebp
xchg
loope
in
sub
dec
xchg
mov
jecxz
shll
int
push
xchg
andl
fdivr
rcr
js
mov
adc
int3
mov
adc
sbb
sahf
jbe
out
cmpsl
cwtl
jg
and
ret
fbld
int
ret
cmpb
add
sub
test
shll
or
cwtl
mov
outsb
outsl
insb
js
sti
xchg
loop
lcall
dec
mov
mov
sub
pop
and
std
cs
jp
jbe
sbb
mov
pushf
and
rcl
int3
mov
lods
andl
mov
mov
fbstp
sub
mov
gs
lret
mull
push
dec
inc
cmp
out
xlat
sbb
cmpsb
mov
movsl
xchg
pop
imul
movsb
and
jge
xchg
xor
sahf
adc
xchg
leave
fbstp
push
inc
or
mov
inc
mov
arpl
adc
movsb
lock
add
pop
mov
inc
push
mov
jae
in
popa
inc
push
dec
jbe
pop
xor
out
sbbl
sub
lret
fisubl
and
repnz
or
jns
arpl
pop
inc
mov
gs
lods
xor
lsl
add
inc
out
adc
sub
push
int
jmp
fnstsw
mov
lods
fucomi
daa
je
or
lret
mov
sbb
imul
aad
mov
xorb
inc
stos
int
sub
cmp
sbb
pop
sbb
xor
sub
cmp
call
je
lods
cld
aam
push
jnp
in
jbe
aas
je
not
arpl
movsb
mov
xor
std
cmp
fistps
in
or
cmp
add
in
mov
adc
shlb
push
imul
or
xchg
or
loop
movsb
mov
movsl
andl
out
out
int3
and
in
cld
push
fyl2xp1
mov
and
xchg
out
clc
mov
dec
lock
jns
inc
cmpl
inc
cmc
dec
xchg
sbb
iret
loope
dec
pop
cmp
iret
clc
movsb
andb
adc
mov
in
push
nop
add
sbb
es
cmc
nop
daa
jecxz
clc
ss
xor
test
inc
fdivl
push
movsl
inc
lods
sbb
frstor
and
mov
lods
fnstenv
rolb
xchg
movsl
xor
sub
jns
sbb
add
fs
loop
jp
fmul
mov
xor
push
enter
rcrb
jns
imul
incb
shrb
pop
pop
jecxz
in
mov
cs
out
and
scas
lods
ljmp
pushf
add
add
xchg
sbb
fcompl
insl
mov
sbb
inc
pop
sub
adc
ja
and
inc
sbb
scas
inc
call
adc
popa
pop
arpl
pop
pop
add
push
insb
push
das
xlat
add
or
mov
clc
repz
mov
lock
int
popf
push
inc
sub
je
clc
xchg
das
sbb
adc
mov
jb
mov
lahf
ss
icebp
inc
fsubr
push
xor
pop
cmpsb
scas
imul
lcall
stos
inc
shlb
inc
cmp
lock
xor
out
test
inc
sbb
ret
or
xor
mov
push
in
mov
jae
and
loopne
lret
es
jge
ljmp
push
dec
les
mov
pop
ret
test
cmp
mov
cmp
mov
std
mov
pop
out
insb
add
repnz
xchg
xor
jp
test
mov
mov
in
sti
mov
xchg
loopne
add
imul
cmp
jp
mov
add
mov
lret
cld
clc
mov
fstl
fistpll
les
mov
dec
sti
stos
das
adc
sub
sahf
daa
daa
mov
lods
xor
inc
add
outsb
cld
mov
adc
popl
rclb
shll
nop
pop
cmp
dec
inc
cltd
mov
mov
imul
dec
sbbl
addr16
mov
sub
sbb
pop
in
dec
pushf
rorl
pop
mov
mov
cmc
jmp
test
push
dec
out
or
lea
adc
popa
divl
dec
sub
loopne
lea
ret
test
pusha
ficompl
push
cmp
sbbl
pop
rcrb
jp
cld
and
or
xor
and
adc
and
ja
adc
rcrl
sti
or
lods
lcall
inc
mov
sbb
cmpsl
mov
data16
mov
sub
pop
jmp
or
jno
mov
popf
cli
in
sub
xchg
sub
lret
inc
pop
mov
or
pop
push
sbb
add
and
mov
push
or
jno
shrb
jne
sbb
pop
js
adc
or
mov
and
rorl
inc
into
ljmp
int3
int3
arpl
movsb
mov
lret
sbb
lret
and
jmp
xlat
sub
and
mov
mov
dec
mov
add
sub
loop
pop
adc
lea
or
jp
sbbl
mov
mov
out
inc
xchg
pop
mov
ja
lock
nop
pop
fimuls
add
add
push
popf
add
cmp
mov
push
in
mov
ret
xchg
add
out
mov
pop
lcall
call
or
and
adc
les
pop
rorl
mov
pop
mov
inc
pop
cli
cmpsl
out
insl
mov
scas
jmp
cld
pop
popf
je
mov
sbb
adc
inc
and
fwait
xor
xchg
cmpsl
cli
scas
add
push
and
fldl
push
addb
jne
into
sub
and
sub
mov
pop
arpl
mov
mov
imul
popa
xchg
shlb
mov
test
cs
jp
mov
mov
mov
ret
cli
inc
pop
mov
push
sti
and
jb
cs
sbb
mov
dec
es
or
sub
stos
pop
and
jns
xor
fiaddl
scas
jmp
gs
cmp
adc
cmp
pop
adc
cmp
cmpb
subb
fildl
mov
arpl
popf
jge
mov
sti
shrb
cli
lahf
mov
in
mul
mov
data16
es
bound
sbb
mov
dec
jb
jnp
in
mov
dec
cmp
mov
pop
jecxz
jg
popa
inc
popa
fcoms
fisubl
loop
xor
imul
call
test
lods
pop
scas
cmp
mov
jg
xchg
push
or
jg
jno
mov
in
jp
fwait
nop
daa
int3
pop
xchg
lcall
fildll
jae
in
xor
or
xchg
mov
pop
and
jge
xchg
loope
lret
clc
das
in
std
mov
enter
stos
fcoms
imul
sbb
lods
sub
lret
test
sbb
leave
adc
cmp
mov
jnp
aas
mov
sbb
dec
lret
sub
sbb
mov
mov
push
outsb
sbb
out
sahf
clc
jae
mov
pop
sarb
nop
aad
jge
std
cs
add
iret
sbb
andb
and
aam
inc
sbb
cmc
sub
sbb
adc
loopne
cltd
stos
inc
lret
shll
mov
adc
jbe
jae
and
mov
pushf
aaa
outsl
xchg
pop
gs
fisttps
sub
popa
jb
sbbl
inc
cmp
sub
adc
data16
xlat
mov
int3
dec
jge
call
sbb
mov
das
cld
loop
and
cmp
lock
push
adc
push
jg
mov
jb
orl
rcll
push
and
in
pushl
push
mov
mov
pop
outsl
fdivl
sahf
aaa
dec
jle
cli
test
add
cmp
dec
dec
push
mov
icebp
cmp
lods
add
sahf
in
pusha
jg
add
ret
imul
ss
jbe
push
lods
out
or
inc
les
mov
mov
mov
stos
fnstenv
or
outsl
call
push
cwtl
inc
jns
pop
stos
scas
movsb
inc
or
mov
iret
or
push
icebp
outsb
cmp
cltd
insl
push
repz
cmpsb
lds
aad
add
dec
or
call
dec
pop
dec
and
arpl
rcl
addr16
sub
jb
dec
inc
mov
gs
addr16
sub
jno
addr16
mov
out
addl
imul
scas
sub
cld
adc
mov
ret
xchg
les
or
in
adc
dec
nop
data16
lods
push
push
xlat
adc
mov
inc
cmp
into
out
fisubs
push
or
je
ja
mov
dec
sub
scas
shrb
imul
inc
push
in
cmpsb
sbb
or
pop
test
std
sbb
push
push
dec
fistpl
xlat
fimuls
stos
adc
std
dec
iretw
mov
add
sub
cli
dec
sbb
xchg
mov
inc
xor
mov
out
push
inc
xlat
or
out
cmp
mov
outsb
mov
les
stos
push
jmp
sbb
jmp
sbb
arpl
cmp
jp
scas
jae
in
ja
xor
arpl
test
cmp
movsb
lea
mov
mov
pop
mov
roll
inc
test
loope
lea
fwait
lods
cld
adc
shll
pop
and
adc
inc
cmpsl
jp
ds
jl
add
push
mov
jmp
outsb
andb
jecxz
popf
push
fsts
mov
sub
jmp
inc
jno
mov
mov
fmull
das
inc
sub
cmp
std
adc
xor
and
inc
loop
bound
add
cwtl
dec
cli
xchg
imulb
lds
rcrb
icebp
add
ja
and
fsubr
test
pop
dec
mov
movsb
xchg
fstpl
push
mov
adc
lcall
dec
mov
out
negl
push
xchg
mov
mov
icebp
sub
leave
repnz
jp
dec
inc
test
scas
sub
pop
xor
push
pop
inc
sub
mov
cmpb
sub
pop
push
inc
shrl
cmp
movl
sti
sbb
inc
mov
push
ljmp
addl
and
stos
shrl
call
sub
xchg
xchg
testb
or
fs
inc
mov
lcall
add
addr16
pop
and
repnz
jo
fwait
not
insl
xor
push
sub
mov
dec
in
cmp
int3
scas
xchg
jle
mov
ret
pushf
sar
inc
int3
std
testl
pushl
subl
cld
scas
outsb
mov
sbb
cmp
pop
jns
lret
pop
call
and
mov
outsl
dec
hlt
addr16
loopne
xchg
pop
mov
fldl2t
imul
dec
add
and
sbb
cltd
pusha
adc
add
xor
mov
daa
test
pop
jl
lret
xor
add
negl
cmp
jge
push
adcl
cld
xchg
xchg
insl
mov
or
mov
imul
fcoms
fwait
dec
inc
mov
mov
notl
xchg
sub
jne
call
or
dec
repz
insl
out
cmp
pop
and
sub
call
jg
and
shlb
adcb
daa
and
lock
mov
es
aaa
aad
icebp
and
sahf
or
sbb
imul
sub
arpl
daa
adc
mov
push
xor
and
fildll
mov
cmc
rorl
ds
push
rol
lahf
pop
icebp
into
outsb
mov
notb
sub
shll
aas
lret
lods
cmp
movsl
ret
add
xor
jno
sub
divl
xor
lock
mov
icebp
shlb
movsb
mov
mov
jmp
jmp
enter
cmp
mov
ds
les
pusha
pop
pop
bound
ss
jo
gs
subl
rcrl
push
push
out
nop
xchg
jl
mov
pop
xchg
ds
outsl
mov
and
dec
imul
or
jno
push
or
pusha
ja
out
or
xchg
xchg
mov
ficomps
mov
pop
out
mov
fbstp
sub
mov
addl
jns
inc
loop
jle
mov
xchg
fdivrl
sbb
jne
ljmp
mov
lds
adc
insb
repnz
or
pop
aas
rcl
shlb
out
jecxz
inc
jae
jl
out
orl
loop
jne
out
or
insl
ret
push
popa
jb
cmp
mov
push
fcompl
push
lret
lock
or
pop
inc
cmpsl
js
xchg
sbb
mov
mov
adc
pop
jb
inc
clc
jmp
cld
outsl
clc
loope
adc
xchg
inc
dec
or
loopne
fadds
stc
and
popf
or
je
rolb
dec
mov
hlt
cmp
jl
shr
mov
sbb
pop
out
cmp
les
sbb
loop
imul
xchg
and
sarl
aaa
pop
mov
pop
cmp
mov
fldenv
rclb
scas
and
lods
xchg
sub
incl
pop
push
add
dec
rorb
cmp
cmp
arpl
ljmp
add
movsb
push
mov
sub
jb
pop
cmp
mov
dec
leave
in
shrl
adc
out
shl
setle
and
and
fcoms
roll
lock
rcl
sbb
sbb
dec
push
push
or
dec
loopne
sahf
inc
fcmove
mov
xchg
cmpsb
mov
sbb
xchg
subl
sub
les
das
addr16
dec
push
pop
dec
lcall
test
iret
push
rorb
enter
insl
imull
shrb
jns
mov
ficomps
daa
inc
mov
lods
mov
popa
sbb
bound
js
or
out
cmp
test
dec
or
aad
jb
mov
fwait
sbb
stc
or
cmp
sub
mov
dec
repnz
push
jo
faddl
mov
pusha
adc
ss
xchg
push
imul
popf
or
les
mov
stc
dec
dec
out
jge
out
orl
sub
hlt
pop
ljmp
jno
sbb
dec
add
cmp
cmp
rorb
enter
lret
lock
push
mov
push
xchg
pop
cmp
push
cmovg
test
sarl
movsb
xor
mov
icebp
inc
dec
push
int
loope
repz
setne
cmp
mov
and
mov
pop
fnsave
mov
mov
mov
dec
out
push
in
dec
inc
js
mov
mov
or
mov
cmp
xlat
fs
sbb
xchg
mov
mov
inc
and
jg
or
sub
xchg
mov
sbb
jnp
imul
sub
mov
jl
in
call
pop
jne
int3
xor
or
and
scas
test
cmp
subl
push
inc
pop
divb
push
test
add
cmp
mov
movsb
pop
faddl
dec
jl
fisubs
sti
in
ret
sub
adc
push
mov
call
leave
jp
stos
inc
xchg
sub
xchg
jne,pt
out
lahf
sbb
adc
add
add
imul
sub
sbb
fcomip
adc
cmp
arpl
sub
test
scas
scas
jb
out
lds
jmp
lea
test
adc
add
test
add
push
pop
and
daa
movsb
fcoms
fstp
sbb
and
or
inc
cmpsb
cmc
xor
lret
jl
xor
fisubl
dec
pushf
cmp
xchg
ror
imul
lock
mov
fidivl
mov
cwtl
jnp
xorb
popf
cs
and
pop
cmp
test
das
mov
sbbb
cli
stos
cld
mov
add
mov
cltd
xchg
push
loopne
mov
or
xor
repnz
pushf
lods
cmp
pop
mov
jmp
scas
pushl
adc
pop
adc
and
movsb
gs
mov
out
sti
ret
mov
sbb
lret
aas
cmpsl
inc
stc
sub
push
mov
insb
clc
fsts
sub
fdivs
adc
jns
pusha
mov
iret
lods
inc
add
notl
and
cmp
js
imul
inc
divps
dec
push
and
mov
pop
out
jge
aas
mov
mov
loopne
mov
sbb
movsl
mov
sub
mov
dec
loop
daa
adc
aaa
fisubrl
cmp
imul
daa
inc
loop
shrl
aad
pop
or
test
ds
popf
cs
hlt
mov
aam
ss
mov
xor
fcomp
mov
aas
stos
arpl
mov
testl
jle
loop
in
das
aas
dec
pop
sbb
xor
mov
imul
cmpsl
aas
inc
inc
loop
mov
nop
sub
rcrb
cmc
scas
ds
push
and
xchg
jnp
addr16
mov
jae
or
lods
pop
arpl
ja
push
sbbb
and
adc
cmp
mov
divb
iret
int3
xor
jg
add
mov
pop
test
or
adc
cld
lods
add
arpl
jno
in
mov
cwtl
inc
pop
fildl
aaa
insl
sbb
iret
lret
lock
sbbl
testb
ficoms
xchg
mov
mov
dec
jns
pop
sub
dec
inc
adc
add
jbe
repnz
xor
sub
xor
xchg
stc
ficompl
mov
out
psubusw
and
addb
subb
mov
xchg
pop
shl
sbb
mov
mov
repnz
mov
in
mov
mul
dec
cmp
jns
cmp
mov
jo
pop
mov
ss
and
rcr
push
add
pop
sbb
mov
jl
sbb
in
sub
mov
pushf
jne
add
lods
jb
push
xor
pop
mov
negb
fsubs
jmp
mov
out
dec
jge
sbb
and
push
inc
dec
loope
rorl
adc
push
cs
pop
ds
dec
add
aad
es
in
loope
loope
jb
mov
movsl
jno
inc
mov
and
cmp
push
testl
test
dec
imul
movsl
mov
cmp
mov
lahf
test
cmp
dec
or
or
outsl
push
insb
fdivrs
mov
fldl
xchg
sub
jb
jns
adc
add
jg
xor
je
pusha
insl
and
xchg
dec
and
inc
push
fidivs
cmp
cwtl
sub
fcoms
lahf
testb
and
gs
scas
rcrb
jg
jae
loopne
les
dec
dec
int3
std
sarl
sub
xchg
popf
jb
into
cmp
jecxz
jmp
xchg
and
sbb
cmpsl
movsb
push
jne
sub
stos
andb
cs
jbe
mov
fsubrl
filds
mov
pop
rolb
sbb
sti
dec
sub
popa
xchg
out
dec
inc
mov
aam
sarb
stos
jecxz
pop
xchg
int3
jb
std
mov
xchg
mov
pop
rcl
xlat
mov
or
jno
lret
sbb
out
insb
js
add
mov
mov
fcoml
and
adc
push
lahf
out
data16
mov
lcall
fnstsw
adc
test
add
sub
xor
jbe
scas
push
ljmp
loopne
sbb
ds
rcr
mov
movsl
mov
pop
sub
cmpsl
insl
lcall
xorl
and
scas
imul
pusha
mov
sbb
loopne
adcb
shrb
add
push
pop
jae
mov
aam
push
xchg
rcpps
ss
test
mov
inc
xchg
sbb
lock
pop
repnz
cmpl
cwtl
jno
xlat
dec
mov
or
and
fnstsw
and
push
aam
pop
jae
dec
or
jl
sub
mov
je
jge,pt
lods
lret
jo
fidivl
mov
popf
roll
stos
aad
and
bound
jno
inc
mov
mov
cltd
lock
in
sub
jmp
loop
jno
pop
inc
mov
es
xor
vmwrite
inc
mov
lret
enter
jg
into
repnz
pop
dec
loopne
mov
das
jg
sub
sub
leave
xor
out
lret
mov
gs
xchg
shl
jnp
fdivs
mov
or
fdiv
sub
push
mov
push
lret
cmpsb
aas
cltd
pop
jno
sub
inc
nop
push
lock
pop
repnz
loopne
mov
jp
cmpl
aam
das
cmpsl
pop
mov
push
cmc
daa
jp
in
iret
sbb
iret
outsl
cmp
arpl
sub
bound
neg
or
scas
idivl
sbb
pop
mov
sbb
test
xchg
push
imul
mov
rcll
int3
loopne
std
pushf
mov
add
sti
add
inc
mov
and
aas
shrl
add
bnd
and
cmp
add
hlt
es
out
shrl
push
add
cld
inc
and
xor
sub
cwtl
or
dec
jns
jge
lahf
push
repz
lret
aaa
jge
sub
aaa
mov
inc
call
rcrl
mov
es
data16
push
jg
and
jp
mov
or
push
loope
out
pop
mov
nop
stos
cmp
stc
xchg
test
jb,pt
subb
imul
int
push
js
rcrb
orb
jg
push
ljmp
out
mov
sbb
clc
ss
sub
in
test
push
inc
mov
mov
scas
fwait
jle
add
lahf
addl
jge
add
nop
and
xor
daa
jns
lret
xchg
fnstenv
iret
cli
pop
imulb
adc
xchg
fs
dec
push
push
popf
scas
fdivl
inc
dec
and
xlat
stos
je
xchg
xchg
dec
push
loopne
push
jo
mov
ret
into
pop
aaa
imul
in
mov
pop
inc
ljmp
imul
je
cmp
out
push
dec
push
test
inc
mov
fbld
ret
jp
add
enter
add
xor
lret
scas
dec
mov
or
sbb
mov
aas
ret
add
pop
inc
sub
insb
jbe
rol
jns
push
fnstcw
gs
hlt
xchg
xor
adc
add
dec
sbb
lcall
movsl
out
adc
mov
xorl
outsl
das
push
imulb
mov
inc
test
sbb
pushf
lods
jno
jmp
jp
std
jo
cmpsb
mov
xchg
fld
dec
lock
mov
adc
inc
inc
in
inc
movsb
cmp
fmuls
mov
fimull
or
test
dec
mov
clc
xchg
lods
das
mov
popa
into
push
ljmp
test
aam
jge
pop
hlt
addr16
popl
jns
repnz
stc
adc
mov
dec
jo
call
cmc
jno
push
cmc
jg
push
or
add
push
nop
cld
sahf
or
outsb
fists
fstl
mov
push
inc
xchg
inc
cmp
das
pop
xchg
fiaddl
cmp
js
xor
stc
movsb
jecxz
sbb
inc
mov
stos
jae
decl
push
inc
and
inc
dec
decl
or
push
cld
shrl
push
popfw
and
inc
and
adc
xchg
xlat
scas
dec
repnz
bound
push
pop
or
sbb
ds
cmp
jecxz
sbb
mov
mov
cmp
pop
data16
xor
push
dec
cmp
dec
sub
sahf
mov
dec
fldcw
test
rcrb
rcrb
mov
or
and
add
sub
cmc
movl
jle
das
mov
repz
fwait
cmp
mov
mov
add
ds
imul
sbb
gs
movsb
addr16
add
xor
xchg
push
ss
test
push
test
lret
xlat
cmp
negl
aam
movsl
push
jbe
rcll
je
jg
lcall
sahf
cmc
push
xchg
mov
ret
sbb
in
ficoms
shlb
fstps
xor
mov
and
push
mov
jo
cmp
shlb
stos
mov
lret
and
dec
cmpsl
ret
mov
sub
pop
cmp
sahf
mov
adc
fdivrl
adc
repz
clc
daa
inc
hlt
mov
cmpsl
adc
and
adc
arpl
cmpl
or
pop
pop
faddl
adc
push
fwait
inc
xchg
insb
or
cmpl
add
pop
jbe
and
mov
add
mov
mov
cmc
inc
xchg
bound
shrl
xchg
dec
mov
mov
insl
cs
jae
nop
adc
test
xchg
xchg
push
add
in
fs
cmp
test
inc
pop
cmp
in
and
fldl
sarb
jmp
or
mov
cmp
mov
ret
aas
repz
push
or
adc
scas
xor
fmul
lea
cltd
mov
orb
push
xor
lock
add
fsubr
push
insl
aas
dec
xchg
imul
fsts
ss
push
push
sti
fidivl
call
pop
inc
pop
jbe
mov
xor
in
leave
inc
aaa
cmp
cmc
fnsave
aam
push
jno
arpl
adc
sbb
loopne
in
jo
loopne
adc
ds
xor
in
in
sub
xchg
or
daa
mov
fisubs
cli
or
outsb
or
ret
jle
pop
mov
cmp
mov
popa
call
dec
imul
sbb
lcall
cli
push
push
fmuls
roll
mov
pop
or
pop
leave
hlt
addr16
scas
pop
dec
xor
adc
xorb
jl
or
sub
lock
push
inc
movsl
icebp
jmp
mov
jae
mov
clc
sahf
pop
es
sahf
insb
mov
and
insl
repnz
mov
dec
mov
pop
sahf
xor
xchg
mov
mov
mov
adc
dec
fmul
leave
aad
push
cwtl
ficoml
add
bound
cmp
cmp
adc
rcll
inc
arpl
lock
xor
out
add
inc
adc
and
faddp
adc
js
dec
rcrb
jge
ret
pop
imul
das
push
adc
inc
jns
jns
adc
js
push
ret
sbb
pusha
cmpsb
jns
movsw
xor
jne
call
aad
sub
xor
ja
xor
pop
je
sbb
out
push
popf
cld
pop
inc
ficoml
xor
xchg
std
lret
mov
push
xor
adc
je
jge
out
daa
clc
test
inc
mov
lods
ss
lcall
pop
mov
or
xchg
jge
stc
inc
mov
decb
movsb
jb
int
fiaddl
cwtl
lret
bound
jb
out
repz
and
mov
cmp
pusha
adc
lcall
ret
push
or
outsb
adc
add
and
movsl
cmp
push
imul
jb
mov
sub
lret
gs
jmp
cmp
add
and
add
repz
stc
and
mov
add
cmp
add
push
lock
and
inc
clc
mov
fiadds
cld
stc
mov
das
rcl
pusha
andb
popf
sub
es
in
jnp
scas
jo
imul
test
or
inc
jp
add
cmpsb
std
or
icebp
out
cld
negb
aas
lcall
in
aaa
in
push
inc
ljmp
fdivrs
fdivr
add
xchg
inc
and
mov
mov
sub
or
lods
mov
fwait
jmp
mov
loope
ja
das
insb
in
cmc
leave
xchg
pop
xchg
cs
cmp
fldcw
cmp
or
inc
adc
mov
xor
push
jecxz
dec
pop
sub
mov
outsb
cmc
mov
mov
imul
xchg
in
xor
test
dec
or
lods
xchg
in
jne
push
push
cli
add
pop
mov
xchg
lcall
aas
jb
mov
xchg
pop
mov
push
and
cmp
outsl
add
sbb
je
movsb
loope
cmpsb
mov
add
inc
jbe
pop
jl
fldenv
pop
jno
jp
dec
ret
or
dec
and
aad
push
in
dec
fcoms
jno
testl
push
mov
ret
cmc
aad
into
in
push
stc
inc
fsubl
add
and
mov
out
mov
and
fiaddl
inc
xchg
and
adc
jb
pop
movsl
xor
and
es
push
js
nop
xchg
cmp
pop
jb
push
testb
enter
and
lahf
cltd
and
clc
jp
sbb
adc
insb
lods
mov
xchg
pop
mov
popa
into
xor
mov
lret
in
scas
push
hlt
mov
cmp
jecxz
cmc
adc
inc
bound
mov
push
fwait
adc
fsubs
out
mov
xor
popa
ljmp
or
inc
test
mov
dec
arpl
outsl
loopne
mov
inc
orl
lret
and
mov
jecxz
fidivs
addl
pop
mov
add
add
rolb
repnz
mov
test
add
pop
iret
addr16
xchg
outsb
jne
stc
dec
fdiv
cmp
xor
push
and
aam
pop
and
cmp
pop
jb
pop
push
roll
loope
cld
std
or
jbe
mov
and
dec
pop
stos
pop
jg
ret
jb
jnp
push
xchg
aam
cltd
mov
int
pop
cwtl
add
call
cs
cmp
inc
xorl
mov
sbb
lcall
outsb
or
ret
cltd
pop
call
shl
ljmp
pop
fimull
rorb
out
js
loope
inc
jne,pn
scas
pop
fdivl
fistpll
popa
pop
mov
mov
cmp
scas
fwait
sti
pop
fsubl
hlt
pop
inc
leave
data16
addr16
adc
xchg
add
lock
mov
mov
add
outsb
test
test
jmp
mov
inc
stos
sbb
sti
inc
insb
lea
pop
jge
out
add
mov
push
es
or
dec
dec
dec
push
sbb
cs
sarl
sar
push
or
xor
or
out
push
xchg
jns
sub
lret
inc
imul
aad
insb
pop
lcall
pop
cwtl
inc
loope
push
jns
lret
sbbb
mov
jl
xor
xor
cwtl
mov
adc
dec
sub
mov
addr16
jbe
xchg
and
sbb
loop
xchg
outsl
adc
lock
addr16
ret
cs
inc
sub
ljmp
or
aas
aam
cmc
enter
sbb
lea
sbb
add
pcmpeqb
fwait
int
jnp
adc
sub
inc
aad
mov
call
adc
sub
and
and
decb
dec
dec
pop
mov
push
movsl
fwait
mov
lods
ljmp
pushf
cli
shr
cmp
xor
dec
pop
or
sub
jbe
push
mov
int3
lds
dec
in
call
pop
es
xlat
pop
iret
adc
daa
jbe
fs
popf
pop
inc
movsl
cmp
xchg
fcompl
push
sbb
mov
popa
inc
push
jo
add
stos
test
cmc
or
ret
adc
adcl
sti
repnz
pop
dec
and
dec
mov
dec
lds
imul
xchg
cmpsl
jb
pop
mov
shr
ret
mov
fisttpll
push
aad
add
aaa
dec
fdivl
push
movsl
lret
push
push
mov
insb
imul
push
sub
mov
nop
mov
push
repz
fmulp
adc
or
push
test
or
jae
iret
fstps
jmp
push
and
cld
fucomip
sub
leave
lcall
and
and
or
scas
lock
mov
xchg
iret
fldcw
shll
jno
adc
dec
xchg
decl
jmp
test
leave
fistps
mov
cmp
dec
inc
negl
mov
adc
xchg
sub
insb
imulb
push
dec
add
sbb
sbb
divb
imul
es
scas
mov
push
cld
adc
mov
and
cmpsl
and
shlb
xchg
adc
sbb
inc
je
clc
and
adc
sbb
aaa
into
mov
daa
rclb
and
inc
sti
out
add
inc
push
nop
ret
andl
lcall
jmp
addl
or
push
fucomi
xchg
add
pop
mov
sub
inc
cmp
loop
push
inc
fldcw
mov
inc
jmp
xor
jecxz
pushf
scas
push
push
outsl
jnp
pop
imul
jbe
xchg
mov
fldt
pop
cmp
add
adc
mov
jno
and
outsb
mov
daa
pop
dec
pop
cmpsb
hlt
das
subl
shrb
out
adc
lahf
sub
jnp
fimuls
jg
sbb
sbb
ret
pop
in
jne
pop
ds
jecxz
iret
sbb
lock
imul
insl
jo
jne
cmpsb
std
jg
adc
fiadds
add
aas
push
mov
jmp
push
and
mov
outsb
adc
push
jmp
mov
shlb
add
sbb
mov
sahf
jg
test
mov
lahf
push
and
adcl
pusha
ret
add
xor
shlb
subb
adc
in
fidivl
mov
fnstsw
imul
gs
test
or
pop
loope
sbbb
insb
jno
mov
test
mov
sub
je
jne
cmp
fisubs
and
mov
sar
or
mov
into
in
xchg
mov
scas
js
enter
mov
cltd
clc
cmpsb
cmp
std
push
jmp
cs
push
maskmovq
testl
ret
pop
sbb
fldt
mov
sub
ret
mov
adc
arpl
jge
mov
mov
cld
push
outsl
sub
cmp
dec
lea
popa
sbb
xchg
in
loopne
shlb
fisttpl
fs
mov
xchg
xor
or
adc
sahf
inc
xor
mov
push
sbb
sahf
data16
jae
test
xor
test
dec
mov
iret
gs
cld
sub
add
jae
xchg
jne
jecxz
mov
outsl
add
stos
pop
dec
dec
loope
enter
lahf
movsl
das
or
out
xchg
sub
daa
cmp
in
jg
push
cmp
or
push
cltd
or
add
mov
mov
sub
jb
mov
jl
jbe
int
cmp
in
or
ret
push
xchg
xor
mov
adc
jb
cmpsb
jae
andb
pop
ja,pn
sarb
iret
adc
rclb
loope
movsb
fwait
mov
sbb
loope
jbe
loopne
lea
mov
js
out
lods
jge
test
loopne
je
sahf
push
shlb
inc
sahf
repnz
cli
xor
popf
xchg
cwtl
add
dec
sahf
dec
movsl
inc
insl
outsb
dec
nop
xor
cmpsb
mulb
out
ret
outsb
push
jnp
inc
lahf
nop
sbb
add
xor
fadds
or
sbbl
sahf
add
add
aam
out
push
xor
arpl
mov
jb
daa
mov
or
inc
stos
shll
jae
and
je
addr16
xor
xor
outsb
push
pop
pusha
test
das
icebp
movsl
add
ja
inc
rcll
push
and
push
iret
lret
push
in
cld
jbe
and
cmpb
cmp
out
fwait
std
sbb
out
pop
lea
cli
mov
jge
xor
fidivs
add
es
pop
adc
mov
mov
mov
pop
jecxz
fcomp
jno
or
cmpsb
hlt
dec
scas
or
pop
xchg
call
xor
jne
pop
data16
push
cwtl
pop
imul
add
out
sub
and
test
insb
ret
std
jle
ret
fisttps
lods
adc
and
jecxz
into
xor
in
mov
sbb
mov
test
mov
aam
inc
push
pusha
and
mov
mov
push
fwait
sub
scas
or
nop
cmp
xchg
xor
xor
cmpsl
mov
stos
or
int
mov
sub
out
imul
fisubrs
dec
add
test
jb
mov
mov
icebp
add
xchg
shl
ret
jns
test
pop
fucomp
dec
jbe
sub
sbb
push
sahf
and
arpl
mov
lahf
ss
xchg
mov
sbb
fcmove
clc
mov
xchg
jnp
lock
xor
push
push
test
ss
push
xchg
jge
inc
out
xor
mov
fs
push
xchg
jne
clc
xor
or
or
xlat
jmp
xor
mov
jg
dec
xor
xchg
sub
xor
mov
sub
jg
imul
xacquire
adc
movsb
push
in
iret
lret
sub
pusha
add
sub
icebp
dec
dec
lods
insl
push
loopne
add
push
dec
hlt
mov
sub
repnz
adc
sub
mov
nop
addr16
xchg
scas
insb
shr
add
push
adc
jne
fwait
mov
mov
dec
lea
xor
cmp
test
in
adc
jb
cli
stos
push
adc
adcb
cltd
inc
clc
push
mov
jne
test
mov
adc
gs
lahf
cmp
cwtl
stos
pop
cmp
ljmp
jae
pop
adc
sub
mov
fwait
mov
rol
in
jno
fwait
call
cwtl
mov
mov
xor
mov
shlb
pop
xchg
out
lahf
sub
movsl
fsubs
iret
stc
mov
adc
or
sub
pop
jae
cld
mov
cmp
fdivs
aas
andb
cmp
popa
mov
lahf
xorb
lock
rorl
mov
add
mov
add
xchg
dec
xchg
jmp
into
or
cmp
sub
add
out
jb
lods
push
shr
test
outsl
lret
ret
push
push
in
shl
and
outsl
jl
adc
shrb
xchg
out
fcoms
xor
imul
fists
xchg
mov
and
inc
imulb
scas
push
adc
sar
cld
jmp
cmp
jge
dec
sub
imul
mov
lods
sbb
shrl
pop
pop
fxch
data16
pop
rolb
stos
or
cmp
sub
xchg
xchg
cmpsl
xchg
insl
hlt
aaa
sbb
sti
xchg
stos
divl
in
lret
mov
mov
push
test
sub
add
or
mov
test
jae
scas
fwait
and
in
loopne
dec
movsl
push
xchg
push
sar
or
push
add
sbb
cmp
clc
lock
or
cmp
jo
addr16
xor
inc
mov
sbb
pop
jbe
stos
data16
mov
add
aad
and
sarl
in
cmp
adc
dec
xabort
adc
sbb
xchg
push
pop
bnd
adc
xchg
mov
fistps
mov
xor
call
mov
lds
and
jae
call
or
in
mov
cli
and
pop
push
cmp
lds
or
jmp
dec
dec
popa
rolb
mov
aas
rcrl
xchg
out
xchg
sbb
lock
test
inc
or
int3
sbb
icebp
inc
dec
inc
cmpsl
add
and
push
pushf
repz
push
push
pop
adc
shlb
xor
fs
add
sub
or
adc
add
cli
ret
enter
mov
dec
xchg
std
lcall
xchg
jae
jnp
add
fidivrl
movsl
mov
into
loope
jl
inc
xlat
loopne
cltd
inc
inc
in
in
dec
int
ret
pop
mov
subl
xchg
adc
dec
loopne
mov
push
pop
ljmp
xor
fdiv
pop
adc
shlb
cmp
jge
movsb
xchg
sub
dec
iret
ss
mov
in
add
mov
inc
popa
jg
push
jecxz
sarb
dec
repz
pop
lock
rcll
scas
imul
iret
aas
loope
movsl
sti
jmp
scas
push
add
adc
test
loop
mov
dec
ljmp
and
push
outsb
lahf
jbe
or
popf
std
dec
std
pushf
aas
xchg
bound
cwtl
inc
pop
scas
and
subb
jb
fisttps
outsb
test
add
ret
xor
push
inc
ja
cmp
fcmovb
push
fsubr
lock
ret
icebp
mov
push
rorb
inc
mov
and
pushf
jo
stos
push
inc
repz
push
ljmp
or
out
scas
fwait
sti
pop
add
das
cwtl
shll
push
mov
mov
test
jp
stos
stos
repnz
fidivs
imul
and
pop
je
or
stos
jns
jno
dec
push
add
sub
sbb
jne
lds
js
cwtl
sub
jge
and
xor
jle
int
jge
mov
and
in
mov
mov
outsb
dec
sub
add
mov
jl
ja
lret
popf
aad
pmaxub
cmp
inc
push
mov
mov
and
sub
fisubrs
cmp
imul
push
ror
mov
imul
iret
jbe
add
sbb
push
stos
sub
adc
jmp
push
bnd
pop
dec
fisttps
loope
shl
clc
or
adc
repnz
sbb
xchg
cmp
jl
lahf
sbb
std
mov
cmp
mov
vmovd
pop
xor
push
push
mov
jns
xchg
aas
pop
shr
popa
adcb
sti
and
cmp
push
rcr
adc
iret
lods
mov
ljmp
mov
gs
mov
mov
idivb
mov
popa
and
jnp
push
sub
stos
inc
fdivrl
xchg
sahf
pop
dec
loopne
mov
xchg
mov
adc
scas
push
push
mov
sbb
pop
jg
pop
and
sbb
or
stos
adc
push
push
icebp
subl
xchg
sbb
fwait
outsl
adc
repnz
xor
lret
cmp
cs
add
xor
shll
ffreep
lret
push
aaa
jl
jmp
xor
or
sbb
es
jne
mov
mov
mov
cmp
push
mov
mov
jg
jb
sahf
mov
pop
rcrl
dec
in
cmp
inc
cmp
js
cmpsb
mov
jo
xor
xchg
icebp
ja
test
ficompl
xlat
in
fnstcw
xor
frstor
pop
pusha
enter
jae
fsub
sub
sarl
fsubr
mov
dec
loope
mov
cmpsl
sbb
push
mov
lret
inc
fldcw
lret
stos
push
inc
fwait
adc
lcall
cmp
mov
int3
and
rcll
lahf
cs
add
mov
jb
xor
push
push
push
xorl
ret
cmp
pop
xchg
js
xor
js
sbb
pop
push
cmp
and
mov
sbb
fisttpl
outsl
inc
addr16
aaa
xchg
hlt
jno
push
outsl
sahf
jp
lret
inc
fmull
mov
bound
out
jle
xchg
jbe
xor
in
mov
ret
or
das
notb
je
xchg
jbe
test
push
lods
and
ret
sti
xchg
stos
push
sub
cltd
ss
jecxz
xor
gs
jle
bound
sub
imul
push
cmp
pop
adc
or
jo
cmp
xlat
outsb
fadds
shrl
cli
cmc
mov
dec
pop
out
jg
enter
ljmp
jmp
lret
jne
mov
lods
cmp
faddp
pushf
sub
fstps
fisttpl
mov
lds
and
lds
jle
arpl
in
mov
xchg
test
sbb
lds
jle
ret
fwait
xchg
imul
repnz
jnp
mov
push
adc
push
movsl
mov
mov
insb
xchg
stos
roll
mov
loopne
imulb
mov
aam
jo
pop
mov
push
adc
push
dec
enter
push
jp
shll
sbb
mov
mov
je
out
test
popf
dec
xchg
pop
mov
shrl
inc
cs
fistl
aaa
pop
in
in
xlat
out
and
inc
mov
ss
out
lcall
mov
jbe
popa
iret
test
addl
jle
inc
cmc
xchg
outsb
jp
sarb
sub
imul
jle
int3
into
xor
jl
mov
push
repnz
repnz
inc
and
pop
ficomps
insl
fdivl
or
shll
push
lods
inc
jno
sub
or
cs
rolb
xor
adc
xor
call
into
fcmovbe
aas
in
pop
adc
mov
ret
mov
cmp
mov
mov
cmp
mov
dec
out
jne
pop
xor
jmp
in
push
loopne
ds
jb
lret
mov
xor
lods
cmp
popf
add
push
inc
mov
pop
mov
inc
or
and
js
js
mov
inc
les
and
cli
std
jbe
das
push
mov
ficomps
xchg
sub
jb
test
scas
test
jne
fwait
aam
cmpl
sbb
daa
sbb
imul
xchg
in
inc
push
fs
int
dec
psraw
jbe
cmp
std
jo
xchg
loop
ss
hlt
addr16
fidivrs
mov
mov
pop
in
adc
cmp
test
mov
sbb
cmp
inc
mov
jecxz
out
std
and
dec
mov
mov
xor
rcl
adc
aam
shl
sbb
imul
fcomps
jmp
test
and
frstor
inc
inc
cmp
aad
pop
cs
jl
push
sbb
xchg
xchg
dec
mov
sub
inc
xchg
outsb
jge
imul
xlat
jmp
mov
mov
test
pop
std
jbe
stc
or
shlb
sahf
fsubrl
into
ss
lret
ss
xor
sub
popf
pop
mov
inc
in
sbb
dec
dec
into
mov
lods
jle
mov
xchg
arpl
mov
or
stos
and
jb
and
adc
gs
mov
test
mov
push
test
jecxz
leave
and
jno
mov
adc
push
sarl
in
adc
mov
cs
mov
insl
sbb
popa
aad
xchg
xchg
in
aas
in
mov
cs
fbstp
rcrb
push
xchg
xor
imul
stos
jo
jbe
clc
xchg
lods
std
stos
iret
in
add
ljmp
xor
ret
in
lcall
jbe
sahf
pop
sahf
xor
xor
xchg
xor
xor
dec
inc
pop
sbb
jg
mov
loopne
fmul
stos
rcrb
das
add
push
mov
jg
pop
outsl
fiadds
nop
out
mov
and
fwait
or
es
mull
sti
in
lods
inc
push
xchg
in
xchg
adc
call
cmp
cmpsl
out
xchg
xchg
mov
add
aad
ret
pop
in
subl
mov
mov
das
sysenter
add
out
test
outsl
outsl
scas
in
pop
inc
inc
dec
mov
test
stos
div
fwait
and
int
imul
fildl
repnz
popa
add
pop
shrl
mov
sub
xor
testb
ficoms
jns
xsha256
cmpsb
nop
jl
clc
cmp
nop
rcrl
mov
jae
fstpt
aam
jo
out
inc
adc
cltd
sti
or
ss
js
push
or
mov
dec
pop
hlt
cmovg
lods
divl
jnp
xor
adc
push
sub
pop
jno
xor
pop
cmp
iret
jl
cli
dec
dec
pop
leave
pop
scas
sub
inc
int3
pop
push
mov
stos
inc
xchg
mov
jmp
mov
mov
and
outsb
inc
dec
inc
push
out
mov
jne
loope
push
sub
es
es
int3
add
inc
lret
bound
sbb
sub
push
sbb
and
sahf
stc
mov
in
mov
repnz
mov
xchg
in
add
fwait
int
adc
mov
int3
lret
xchg
in
mov
mov
fdivr
aas
ret
adc
push
scas
lods
inc
cmpsl
test
xchg
xor
and
lods
push
cmp
mov
xor
cmpsl
subl
stos
jbe
push
das
xchg
mov
pop
cmc
loop
daa
adcb
and
push
or
scas
fisubs
jns
popa
or
scas
add
jle
cld
data16
inc
fnstsw
sbb
sahf
out
out
inc
fistl
lea
int
out
lret
push
packsswb
xchg
jl
cld
cmp
iret
adcb
pop
ds
mov
rol
repz
sbb
stos
push
dec
add
pop
stc
mov
xor
mov
ret
mov
pop
rol
inc
das
cmp
aad
push
in
movsb
or
mov
xlat
cld
push
gs
movsb
popa
xor
loope
push
out
out
adc
das
je
aas
sahf
inc
sub
fsubrs
sbb
or
pop
push
push
jmp
stos
data16
lret
sbb
mov
mov
dec
mov
jl
xor
sarl
mov
sbb
dec
add
jg
leave
sub
hlt
sub
inc
imulb
push
push
mov
call
pop
push
rcll
jbe
call
and
ds
lods
aad
loope
sub
add
imul
jge
in
fbstp
add
xor
inc
dec
jae
int
cmp
dec
adc
fisubl
inc
shl
lock
xor
repnz
pop
mov
clc
jmp
movsb
ss
loop
mov
test
mov
mov
out
or
adcb
scas
ds
xlat
dec
xlat
icebp
dec
dec
movsl
icebp
dec
sbb
or
inc
sub
fcmovnu
mov
lods
fstpt
rcrb
cs
pop
pop
insl
or
ljmp
imul
movsl
sbb
clc
cli
cmp
mov
sub
xchg
mov
jmp
adc
inc
pop
xor
mov
pop
lret
pop
mov
in
jl
outsb
add
sub
adc
scas
scas
xor
bound
add
jle
and
pop
jle
imulb
inc
movsl
enter
cmp
mov
pop
mov
adc
or
je
popf
or
mov
sbb
shl
aad
mov
shll
sub
sbb
pop
imull
mov
test
cltd
jb
or
out
clc
push
imul
loope
jae
mov
sbb
xchg
sub
cwtl
add
or
push
xchg
int3
adcl
mov
das
mov
in
push
mov
dec
mov
sbb
mov
repnz
push
leave
lock
adc
std
or
cwtl
mov
mov
mov
add
and
push
stc
rorl
dec
out
sub
scas
push
fwait
jne
lock
nop
jmp
outsb
or
testb
adc
inc
jb
loope
mov
or
adc
aaa
push
iret
stos
push
jle
mov
inc
inc
and
add
lods
push
jno
sbb
inc
mov
xchg
test
dec
test
mov
or
popf
iret
push
in
incb
push
xchg
mov
je
repz
inc
repnz
adc
popf
jbe
in
and
dec
ffreep
shrl
jecxz
daa
add
inc
mov
pop
xchg
jg
pop
stos
and
lcall
pop
xor
adc
mov
mov
sbb
cltd
data16
cltd
dec
mov
test
in
mov
dec
popf
das
xchg
leave
pop
push
lock
sti
js
stc
test
scas
inc
ss
and
js
outsb
jb
adc
jae
add
nop
sbb
jmp
imul
js
cltd
pop
addr16
pop
popf
jmp
xlat
sti
xchg
fidivrs
cwtl
shll
cwtl
push
pop
repz
mov
call
lahf
dec
sbb
xor
mov
lds
data16
das
mov
pop
int
jmp
mov
sub
lahf
xchg
adc
push
pop
cmc
test
jle
movsl
xchg
negl
fistpll
popf
mov
lea
mov
add
sub
call
and
rcl
aaa
jno
sub
int
mov
pop
arpl
dec
dec
and
push
fcmovb
rcrl
adc
addr16
add
inc
xor
pop
add
dec
push
jno
fisttpl
enter
xchg
mov
and
and
int
mov
or
or
push
mov
test
push
call
mov
inc
repz
push
int3
lret
repnz
xchg
mov
les
xor
mov
outsb
and
adc
xor
or
stos
mov
fimull
ljmp
inc
rcll
dec
mov
push
mov
inc
jne
aaa
lret
inc
lret
hlt
shlb
lcall
cmpsl
xchg
or
mov
aam
orb
out
or
xchg
xchg
sbb
scas
cmp
pop
lcall
jns
ljmp
ljmp
push
jne
jno
inc
push
xor
inc
aaa
push
flds
nop
xchg
insl
fpatan
stos
in
test
mov
and
outsl
cmp
movsl
in
push
dec
adc
add
adc
cmpsb
xor
popf
cs
cmc
mov
fsub
test
into
cmp
movsl
loopne
std
inc
xlat
cs
repz
sbbb
cmc
add
pop
lock
jne
mull
ja
dec
push
sub
roll
dec
add
jmp
mov
push
lret
push
adc
movsl
mov
xor
fbld
adc
ret
fisttps
xchg
sub
mov
or
lods
jns
aas
push
daa
sbb
test
ds
outsl
pop
adc
mov
dec
in
cmp
dec
sbb
insb
fbstp
push
sub
fisubl
dec
fwait
sti
push
jl
in
sub
mov
cld
cmpsb
or
lcall
mov
outsl
push
push
cmp
fcmove
jecxz
cwtl
mov
adc
push
mov
fmull
xchg
xor
lcall
stos
jo
es
js
sbb
cmp
dec
push
or
xchg
dec
inc
addr16
ret
fnstenv
hlt
cmp
ficompl
loope
in
pop
inc
mov
scas
mov
lods
ljmp
imul
or
lods
enter
add
fsubr
nop
mov
add
testl
sbb
hlt
in
add
xor
andb
mov
cmc
xor
test
mov
int
cmp
add
rcl
rorl
and
pop
xor
outsl
es
and
inc
mul
int
push
aad
jmp
xchg
pop
fisttps
dec
loop
jg
push
mov
call
lea
add
xlat
lret
sbb
clc
insb
pop
push
sub
mov
cmp
lret
jnp
insb
stc
jne
sub
stc
bound
xor
mov
sub
dec
aad
jg
push
adcb
insl
inc
mov
cmpb
and
push
xchg
pop
push
in
mov
cli
imul
es
out
loop
fistl
pop
lret
fwait
push
cli
in
inc
clc
lret
jbe
mov
adc
mov
test
and
aaa
mov
test
sub
stos
jne
xchg
mov
xor
ljmp
jae
mov
repz
and
or
cs
outsb
pusha
adc
inc
cmc
or
xchg
lock
add
mov
sahf
insb
add
fnstcw
fcoml
and
loop
dec
daa
add
out
cmp
push
iret
xchg
jne
push
fists
push
test
mov
inc
fucomip
js
and
mov
mov
clc
cmp
andb
sub
mov
das
mov
scas
jb
cli
stos
inc
mov
dec
jne
dec
lods
stos
dec
into
push
ror
adc
lods
and
xor
or
sub
jle
std
pushf
popf
mov
fstpt
xchg
fwait
push
mov
pop
mov
cmp
mov
jnp
and
jbe
or
test
fbld
cmpsl
incb
cmp
loop
adc
or
sbb
and
cmpb
nop
mov
cltd
lahf
mov
mov
or
cmp
notb
cmp
aam
mov
test
cmpsl
xchg
enter
push
or
arpl
pop
popa
outsb
mov
xchg
stos
cld
xchg
jae
ret
aam
and
shrb
pop
sarb
daa
add
add
rorl
xchg
push
xchg
cmp
add
int
and
xor
mov
cmp
test
inc
dec
pop
inc
mov
mov
xchg
add
cmpsb
dec
adc
sub
add
bound
inc
dec
popf
jnp
dec
fptan
and
je
in
or
aad
dec
outsl
add
daa
mov
and
xor
sbb
call
sarl
xchg
push
mov
mov
aam
ja
fcompl
and
test
fdivl
gs
push
fimuls
cltd
gs
sbb
inc
mov
mov
fistpll
movsb
imul
push
jns
xchg
inc
jno
xor
cltd
test
test
push
mov
leave
int
xchg
and
or
lret
ss
pop
cmp
cltd
or
push
cmp
mov
add
xor
and
lea
lahf
ficompl
push
aaa
sub
mov
pop
xor
in
mov
lods
mov
add
or
lods
daa
or
sti
sub
daa
or
inc
orl
pop
std
and
ds
xchg
cmp
mov
pop
arpl
xor
push
jb
mov
mov
mov
jns
sti
jle
test
xor
js
adc
pop
scas
rorb
enter
ljmp
inc
mov
mov
test
push
insl
call
xchg
ljmp
mov
adc
bound
movsb
mov
and
mov
data16
dec
dec
xor
test
lret
lret
in
test
add
push
jo
adc
push
xchg
push
jmp
push
xorl
daa
gs
adc
or
cmpps
shl
iret
enter
push
mov
sbb
cmpsl
ret
idivl
shrb
in
xor
dec
dec
fimuls
sbb
sub
fwait
mov
mov
mov
push
cli
mov
inc
iret
in
push
out
notl
jbe
mov
fs
jnp
leave
test
shl
into
cmpl
cmc
scas
mov
js
lds
inc
inc
fnsave
dec
dec
stc
push
std
nop
cmpsl
adc
push
leave
sbbb
push
xchg
pop
cmpsl
enter
inc
lahf
mov
faddp
pop
adc
js
xlat
jbe
fdivrl
mov
sbb
or
test
out
sub
ret
insl
stc
jecxz
pop
adc
pop
scas
or
jns
sbb
in
cli
int3
and
ret
iret
imul
fsubs
adc
ret
jo
cmpsb
jns
xchg
test
push
in
or
pop
push
jg
mov
sub
and
mov
xchg
sub
imul
jns
imul
sarl
push
or
mov
inc
scas
mov
adc
fcomi
mov
mov
add
inc
pushl
lds
popf
sbb
les
xor
sub
push
addl
test
loop
pop
adc
shll
push
test
imul
test
arpl
loope
jl
cmp
pop
add
or
add
es
pop
outsl
jnp
pop
testb
add
and
dec
repz
xor
xchg
js
aaa
cmp
nop
sbb
ret
mov
sbb
lahf
xchg
dec
mov
fsubs
sbb
cwtl
ljmp
mov
pop
jo
push
gs
cmpsb
dec
mov
ja
sub
test
pop
adc
shrb
insb
jnp
cltd
sub
mov
jne
iret
xor
out
jg
jb
pusha
nop
cmp
sbb
aaa
stos
jmp
xchg
addr16
and
in
loopne
out
inc
mov
mov
and
loopne
jns
mov
fwait
sti
lret
pop
adc
xchg
fisubrl
add
shl
sub
xlat
dec
jp
fwait
mov
xchg
ret
xchg
or
add
outsb
lahf
mov
mov
sbb
cmp
fcomps
add
hlt
adc
stos
push
aaa
std
fcmovnb
insl
loopne
jno
or
pop
push
sahf
jnp
mov
mov
xlat
add
scas
push
fdivl
mov
mov
cwtl
sbbb
xchg
mov
ficomps
mov
jg
shlb
mov
scas
icebp
fwait
addr16
cltd
mov
in
fs
add
in
fstpl
inc
sbbl
rcrl
xor
mov
and
movsb
sti
fnstenv
loopne
mov
push
push
les
mov
in
cmc
mov
imul
sub
shrl
add
ret
pop
xor
cmp
lds
scas
push
sub
iret
in
dec
xchg
pop
push
mov
std
cmp
cwtl
hlt
lret
dec
pop
xchg
sub
cwtl
or
inc
xchg
cmpsb
fdivp
jecxz
aas
xchg
lahf
or
sbb
jle
adc
sbb
lcall
test
adc
inc
enter
cmp
add
imul
loopne
sbbl
xlat
scas
jae
popf
outsl
ljmp
inc
push
icebp
xchg
inc
ja
outsb
push
xor
pop
std
arpl
decb
cld
adc
sub
push
mov
in
cmp
inc
movsl
iret
jae
jno
sub
pop
xchg
stos
fsubrs
mov
stc
or
pop
xor
mov
and
call
stos
inc
or
lret
shrb
subb
inc
pop
push
xor
xchg
dec
mov
mov
xchg
clc
idiv
or
inc
inc
add
test
xorl
mov
bound
hlt
jo
loop
enter
add
enter
xchg
adc
pushf
pop
xchg
xlat
jne
inc
jl
add
lret
ret
arpl
mov
hlt
mov
inc
pop
in
cs
into
pop
sub
movsl
jmp
mov
out
mov
or
icebp
sub
loope
leave
adc
xchg
or
aad
push
push
xrelease
stc
add
test
cmpsl
xor
lds
imul
push
pusha
paddd
add
lea
fs
mov
xchg
mov
xor
out
shl
push
jg
mov
add
out
fwait
cli
lahf
mov
jnp
mov
jns
rcll
xchg
jmp
dec
popf
idiv
and
xchg
mov
jns
sbb
cmp
sub
iret
movsl
mov
fsubs
mov
enter
xor
cmp
icebp
or
testl
std
add
arpl
xchg
rcrl
dec
mov
int
aam
mov
in
mov
xchg
ds
cmpsb
and
aaa
push
inc
out
cmp
mov
add
movsl
or
lea
jo
fcoml
jp
in
inc
sbb
mov
adcb
mov
cmp
fstps
inc
insl
cmp
jg
popa
shr
cwtl
inc
std
adc
aaa
cmpb
cmpsb
mov
dec
dec
sahf
fidivs
jecxz
cmc
adc
insb
cmpw
and
test
mov
mov
mov
stos
les
stc
cmp
inc
push
ret
incl
in
sub
ficoml
ss
dec
out
dec
mov
inc
inc
popl
mov
pop
jmp
aad
jne
int3
in
js
jmp
adc
fucomip
pop
std
int3
cmp
stc
cwtl
sbb
mov
js
pop
add
out
mov
mov
jo
in
sbb
test
xor
xor
push
outsb
mov
aad
sub
repz
out
andl
in
pop
fdivrl
push
mov
in
xor
xchg
les
mov
mov
xchg
jbe
mov
incl
sub
lret
jb
daa
mov
popa
movsb
push
cltd
jge
and
jl
sbb
xchg
clc
adc
inc
pop
add
aam
sub
std
test
inc
jecxz
push
fwait
cmpsb
cltd
xor
add
bound
mov
sub
jmp
or
ds
cwtl
imulb
mov
fdivrl
dec
ljmp
pop
xchg
mov
push
cmp
add
mov
mov
js
mov
shufps
adc
cli
out
cmp
pop
ja
lea
mov
jecxz
sbb
lcall
lock
leave
lods
push
mov
mov
scas
lea
add
test
add
mov
push
mov
in
shrb
filds
dec
pop
mov
push
lods
xchg
jg
das
fdiv
cmpsl
aas
xor
out
jns
adc
inc
mov
add
push
notl
inc
lds
cmp
faddl
or
xor
mov
aas
lea
in
pusha
pop
sub
int3
mov
ficoml
scas
or
cmp
ss
jne
or
popf
xchg
dec
sbb
imul
sbb
push
xchg
jne
mov
filds
popa
vpsrlq
or
lret
jae
lea
adc
inc
lcall
lcall
dec
xchg
sbb
popf
xor
xor
push
out
cmp
dec
lret
pusha
lods
sti
fsub
daa
xchg
inc
data16
inc
jns
mov
dec
pop
cld
fdivs
shl
cmp
mov
mov
ret
in
mov
sbb
cwtl
xchg
and
popf
lods
cmc
test
dec
push
jge
cmp
xor
push
lods
pop
adc
pop
mov
mov
mov
scas
les
shrl
scas
pop
xchg
jecxz
pop
adc
ss
mov
fiadds
int
in
mov
sub
aam
shrl
es
ljmp
mov
enter
repz
mov
jmp
jle
and
jnp
and
pop
sbb
mov
cmpsb
std
fstl
fyl2xp1
xchg
insl
push
xor
xor
mov
or
add
js
mov
js
inc
stos
pop
repz
mov
lock
jbe
lods
inc
xor
dec
cmp
jb
lds
fs
push
pop
imul
pusha
mov
push
mov
or
push
fstpt
mov
scas
insl
fbstp
cmp
ds
lods
mov
ret
or
lret
test
pop
dec
lock
repnz
sub
jecxz
clc
sbb
xchg
push
sub
dec
inc
sbb
into
adc
xchg
in
rorb
xor
in
lock
clc
std
jmp
inc
inc
and
mov
adc
andb
data16
inc
aam
lahf
add
lods
xor
out
mov
pop
out
inc
pop
loopne
aad
lea
pop
rclb
icebp
add
repz
mov
sbb
inc
inc
push
add
cmc
mov
lret
sub
lea
lahf
fcmovb
mov
cmp
test
shlb
adcl
adcl
push
scas
push
fucomip
xor
lea
pop
pop
shufps
ret
add
sbb
rol
push
lods
xor
sahf
aaa
outsb
jl
mov
enter
shlb
mov
mov
loopne
dec
cmc
xchg
jmp
cmp
jl
and
adc
int
mov
scas
fldcw
negb
ljmp
je
popf
pop
pop
shlb
aam
movb
jge
sahf
cmp
in
sub
bound
stos
fcoms
scas
lahf
icebp
push
inc
int3
xor
ljmp
lret
aam
ss
jnp,pn
enter
fnstcw
jb
and
add
or
lods
sahf
xor
add
pop
imul
add
and
cmpsb
clc
and
adc
sub
ficoml
es
xorl
pop
les
notl
xor
icebp
dec
mov
push
aad
inc
inc
daa
push
subl
sbb
clc
jp
fildll
push
add
and
imul
mov
jae
leave
sbb
dec
imul
pushf
nop
jmp
jb
insl
jge
xchg
jmp
icebp
out
pop
imul
xorb
pop
lods
ret
cmp
hlt
jl
sub
cmp
pop
imul
xor
push
adc
push
mov
xchg
testl
movsb
pop
lea
mov
fdivrp
mov
cmpsb
jecxz
lahf
inc
rolb
lods
daa
and
and
test
push
cmp
sub
mov
xchg
add
lret
xchg
inc
and
pop
jg
mov
in
sti
pop
and
icebp
lods
in
mov
negl
je
adc
xchg
sbbl
sub
pop
stc
repnz
stc
push
nop
cmpsl
pop
xor
divl
rol
xchg
or
leave
pop
inc
dec
fisubrs
dec
and
add
js
mov
out
inc
sbb
movsl
clc
adc
or
xchg
xor
dec
lret
test
dec
push
lods
bnd
adc
pop
jg
pop
mov
jle
pop
clc
mov
inc
and
cmpsb
dec
loopw
ret
dec
sbb
mov
fstl
repnz
mov
sbb
pop
adc
mov
jle
aas
aam
fs
push
push
in
enter
pop
jmp
es
fs
daa
mov
or
xchg
dec
inc
inc
leave
mov
sbb
jl
cmp
sahf
jns
subb
clc
cld
pusha
sbb
dec
movsb
filds
insb
xor
adc
pop
ja
inc
jl
pop
movsb
into
push
fisubrs
sub
and
dec
mov
scas
pusha
neg
out
lods
inc
cmp
cmpsl
sbb
xchg
test
insl
pop
insb
jg
out
stc
push
jl
out
lea
push
mov
dec
inc
sub
and
out
sub
sahf
fwait
xchg
xor
imul
mov
cmpsb
mov
and
jg
sbbb
sbbl
adc
xchg
sbbl
mov
pop
popa
add
xchg
jg
stc
fdivrs
mov
pop
arpl
mov
sbb
push
ret
cmp
sbb
xchg
les
loop
push
stc
mov
xor
and
inc
scas
pop
add
push
sti
or
cmp
out
dec
aad
xchg
shlb
gs
ljmp
cli
pop
and
sub
lock
test
mov
out
inc
add
jns
dec
fisttpl
inc
cmc
mov
mov
out
cmp
test
push
adc
or
imul
loope
out
and
xor
pop
rolb
push
fldenv
shrl
fdivrs
adc
mov
fwait
xchg
lods
test
jbe
and
leave
jo
cmp
pop
scas
sub
jmp
ret
cmp
push
pop
jmp
movhps
int
or
xchg
or
lea
movsb
jnp
cmpsb
pushf
sub
enter
add
test
mov
mov
mov
sbb
test
mov
and
popa
cmpl
ja
mov
adc
pop
fiadds
psllq
and
pop
fs
adc
xchg
dec
xchg
outsb
test
sarb
lret
jne
repz
xorb
outsb
stc
cwtl
jae
lea
jge
pop
out
mov
mov
cwtl
xchg
push
popf
mov
daa
inc
pusha
add
js
addl
sahf
push
es
int3
sbb
and
pop
repz
mov
aaa
cmp
stos
sbb
outsb
dec
jnp
insb
adc
xlat
xlat
stos
test
into
push
sub
sub
sbb
adc
sbb
and
popa
dec
xor
pop
sarl
xchg
push
popf
xor
mov
je
insl
sti
jp
adc
adc
lret
js
cmc
movsl
test
test
sub
movsb
das
mov
scas
lds
adc
ja
mov
adc
inc
pop
js
fcmovne
add
ja
imul
sbb
cmp
aam
dec
jae
xchg
push
cmp
loopne
jnp
ret
cmp
cmpsl
push
insl
jge
cli
cld
outsl
call
test
cwtl
mov
mov
aam
lret
pop
mov
mov
iret
and
cmp
stos
inc
push
pop
aad
loop
leave
fisubrl
scas
arpl
and
lret
pop
pop
xchg
nop
clc
negb
outsl
sbb
mov
inc
in
rcrb
jl
out
cmp
sahf
push
dec
pop
ja
fwait
arpl
and
mov
lds
cmp
sbb
insl
sub
in
and
inc
and
cli
testl
cmp
or
sahf
pop
outsl
mov
or
push
dec
cmpsl
mov
push
lods
fidivrs
les
ljmp
in
dec
jg
mov
loopne
sbb
pop
enter
mov
cmpsb
clc
sub
mov
shlb
cmp
and
int
cltd
dec
and
loope
fs
lods
mov
or
fidivs
loopne
outsb
in
les
mov
sbb
jo
jnp
arpl
xor
mov
and
inc
pop
xchg
adc
repnz
pop
cmp
mov
mov
mov
call
or
fistpll
and
fistpl
lret
cmpsl
jns
popa
enter
lock
xlat
and
les
mov
shlb
xchg
pop
out
add
addb
jmp
das
pusha
fwait
int
mov
add
test
lahf
ss
mov
int
mov
and
and
jne
pop
mov
mov
aaa
or
hlt
mov
mov
ja
mov
lret
mov
sbb
xchg
icebp
incl
sub
sbb
movsl
mul
outsl
sub
mov
fcmovne
or
add
and
pop
pop
movsl
addr16
adc
dec
cld
scas
out
sbb
mov
shrl
pop
mov
push
lcall
hlt
push
add
add
fwait
sti
jae
insb
testl
jg
dec
jo
pop
pop
fwait
out
adc
mov
inc
adc
loopne
xchg
cld
xchg
les
out
sbb
shll
mov
clc
repnz
and
divl
sub
pusha
mov
add
dec
mov
xchg
imul
and
xorb
and
scas
pop
ds
iret
jl
mov
repz
sub
cmp
ret
jne
mov
mov
pop
divl
adc
or
xor
mov
mov
sub
xchg
ss
fcmovnbe
mov
bound
jnp
into
lods
lds
popf
mov
add
sbb
in
sahf
sub
insl
incl
nop
daa
iret
jle
je
inc
test
push
push
adc
mov
cwtl
xor
dec
xlat
sbb
imul
icebp
subl
imul
jge
mov
fcomip
andb
dec
in
fadds
int
int3
out
inc
pop
out
mov
test
mov
popf
das
stc
fists
int3
add
or
bound
xchg
dec
xchg
fisubrl
adc
lock
enter
sbb
mov
ja
mov
leave
jbe
dec
push
test
push
std
fcomp
xlat
or
cli
xchg
xor
sub
cmp
mov
mul
xor
sbb
sbb
ss
inc
xchg
mov
mov
sub
daa
cli
jbe
xor
sbb
xchg
insl
les
xchg
push
test
ffree
xor
mov
add
scas
jno
inc
cmp
dec
sub
into
mov
fnstcw
cmpsb
ret
mov
test
test
pop
scas
cmp
push
xor
test
rclb
xchg
add
mov
lahf
leave
inc
rcll
leave
dec
mov
arpl
or
cld
mov
xor
xor
cmp
loop
and
adc
xchg
dec
or
mov
clc
push
cmp
inc
pop
xor
dec
or
or
mov
xor
jns
lock
jo
test
call
mov
into
pop
inc
ja
adc
test
inc
xor
push
into
fdivr
mov
mov
pusha
ss
push
push
cld
mov
jno
popa
inc
adc
cli
xchg
inc
das
sbb
hlt
and
repz
stos
inc
fprem
xor
sub
mov
add
rcll
jo
sub
cs
jge
push
cmpsb
push
dec
out
subl
mov
mov
rorl
xor
mov
jmp
cs
or
movsb
xor
jl
lea
jmp
call
lock
mov
xor
jp
cmp
add
inc
xchg
lock
insb
or
test
push
jge
test
push
adc
call
in
lock
pop
inc
je
add
je
out
pusha
popa
hlt
mov
cmp
imul
cmpsl
out
subl
enter
insl
fisttps
lret
das
cmp
mov
mov
in
sti
adc
push
inc
sub
fucomip
inc
mov
xor
xchg
test
in
xchg
out
pop
outsl
xor
aas
xchg
int
or
fwait
stos
adc
inc
jns
inc
mov
add
in
out
xchg
xlat
mov
std
jne
mov
jb
dec
or
into
mov
inc
xlat
push
lret
xchg
push
data16
in
pop
pusha
out
jp
movsb
mov
xor
bound
pop
jmp
icebp
cmp
mov
ror
dec
cmp
cli
icebp
ljmp
or
add
pop
add
ss
nop
push
inc
rorb
fs
or
add
fwait
xlat
mov
sub
dec
push
sub
das
fcoml
dec
add
cld
je
inc
andb
bound
fs
or
cmp
hlt
xchg
fmull
lret
fmul
sarb
ja
pop
mul
cmp
stos
push
mov
or
inc
pusha
scas
stos
addl
mov
push
xchg
and
pop
push
ja
jae
pusha
xchg
xor
sbb
mov
inc
in
dec
mov
lret
mov
mov
jecxz
nop
mov
push
xor
and
inc
and
fnstsw
sub
leave
or
cmp
into
imul
ss
xor
js
shlb
mov
push
sti
push
sti
jb
ret
and
jns
sbb
xchg
popa
xchg
or
ficoms
lock
icebp
cmpsl
lock
sub
rcl
xchg
ret
push
xor
jne
push
fsubrs
or
movsb
mov
lret
mov
jnp
or
rclb
out
clc
sahf
les
dec
cmp
enter
jnp
inc
cmovbe
push
ljmp
mov
mov
popa
push
jne
mov
ljmp
mov
mov
out
adc
rol
fcomp
pop
out
mov
cmp
fidivs
mov
push
fildl
leave
rcrl
cli
xlat
add
mov
cmc
push
cmp
les
ljmp
cmp
movsb
inc
mov
scas
in
pop
out
mov
cwtl
adc
jecxz
in
fcmove
in
iret
testl
jnp
mov
les
stos
push
cmc
sub
sbb
imul
dec
cmp
iret
fdiv
mov
in
mov
shll
cmp
mov
ret
frstor
sub
push
out
push
mov
sbb
fisttpl
xchg
int
dec
loop
pop
pop
test
mov
adc
mull
add
fsubrl
adc
dec
and
movb
cwtl
mov
push
add
shrl
push
sarb
inc
sbbl
cmp
scas
xchg
movsb
je
sti
or
xchg
dec
pusha
leave
jae
out
sub
sub
ss
addr16
fcoml
stos
leave
mov
fsubl
push
mov
clc
cmp
adc
inc
icebp
adcl
push
mov
inc
jle
imul
jno
jae
inc
push
insl
mov
xor
sub
push
insb
jp
pop
int3
subb
lods
jb,pn
xor
rolb
test
ja
or
add
shlb
sub
push
out
test
or
push
or
cmp
sbb
or
add
mov
out
sub
cmc
jge
mov
icebp
mov
out
out
int
sti
lret
add
and
pop
je
lea
xor
and
add
pop
pcmpeqw
inc
movsb
jp
ret
xor
hlt
in
call
mov
movsl
xchg
jne
inc
icebp
lcall
push
mov
push
divb
cld
loope
add
jle
je
pop
sbb
and
pushl
and
lea
lret
dec
out
sbb
and
add
sarl
cmp
rorl
xor
fs
sahf
xchg
into
mov
pusha
push
sub
rol
repz
push
mov
stc
out
in
stos
mov
jbe
out
stc
xchg
dec
shl
fisubs
pop
xlat
or
add
adc
stc
pop
mov
adc
pusha
test
lods
jbe
xor
mov
nop
xor
or
lldt
cmp
sbb
push
and
lea
adc
or
je
mov
xchg
add
xor
and
jp
adc
in
adc
js
jno
mov
xchg
rcll
push
movsl
xor
sbb
cmp
xchg
cmpl
imul
mov
repnz
dec
mov
push
push
mov
pop
ljmp
push
lods
mov
outsl
or
xor
push
add
mov
sahf
gs
add
inc
sub
push
pop
movsl
rorl
pop
cmpsb
scas
and
inc
in
cmp
xor
arpl
xor
pop
scas
and
aam
add
xor
xor
push
in
cmpsb
xchg
mov
add
xor
dec
cmp
inc
jnp
jne
inc
std
cld
sbb
jo
call
jnp
sub
dec
call
scas
fistps
dec
ja
es
repnz
imul
imul
adc
mov
inc
stc
adcb
iret
cmpsb
pop
push
jae
and
xchg
inc
std
mov
into
dec
and
stos
cmp
xor
fnstenv
or
jg
add
sbb
adc
out
out
jae
std
repnz
in
cmp
mov
push
push
mov
sbb
jp
lock
pop
mov
addr16
push
and
add
jbe
or
dec
lock
dec
jo
loop
xlat
les
push
ds
lcall
lcall
fiadds
es
push
xchg
sub
pusha
pop
dec
call
adc
imul
jb
adc
out
add
nop
dec
or
push
insb
js
out
pop
sub
das
mov
cmp
xchg
hlt
pop
jmp
lcall
cwtl
stos
adc
cmp
insb
add
aaa
add
lahf
sub
and
test
lcall
mov
out
fs
push
out
lahf
push
xchg
daa
add
scas
insb
mov
fsubrl
lret
rclb
mov
sti
and
rcll
xor
or
pushf
sbb
sti
xchg
xchg
popa
in
add
sbb
adcb
enter
rorb
cltd
stc
mov
xor
in
inc
and
cmp
enter
arpl
sbb
push
sbb
rorl
out
div
js
test
mov
sbb
into
jbe
daa
mov
out
dec
cwtl
clc
adc
xor
fistps
hlt
xchg
mov
sub
cmp
jl
sub
pop
sbb
stos
mov
fs
test
divb
ret
jp
adc
dec
inc
cmp
push
loop
cmp
mov
out
or
stos
inc
scas
fistl
pop
jno
lods
addr16
int3
pop
scas
cmp
lret
inc
adc
cmp
shrb
mov
jno
ja
aas
and
je
add
push
fcmovb
outsb
rolb
es
inc
ds
in
xchg
stos
add
and
lcall
scas
pop
adc
outsl
add
dec
loop
scas
loop
repz
je
sbb
push
cmp
lods
mov
push
mov
xchg
js
sub
les
and
jmp
in
jmp
js
inc
xlat
clc
or
sub
add
insb
fwait
xchg
in
xchg
push
push
mov
pop
loopne
lods
inc
out
jmp
lret
cmpl
push
lahf
pop
test
cmp
insl
ja
lods
push
cmp
lahf
std
and
out
sbb
rolb
push
xor
pop
icebp
adc
aas
pop
adc
mov
js
lahf
stc
je
adc
jmp
mov
outsl
inc
pop
les
xchg
mov
add
notl
or
mov
inc
mov
test
push
js
xchg
or
fbstp
mov
cltd
pop
or
inc
push
inc
sub
idivb
add
shrb
cmp
jns
mov
aas
cmpsb
inc
pop
xor
add
sbb
mov
or
sbb
loope
js
cmp
pop
cmp
dec
ret
xor
daa
loop
jg
ret
pop
fs
iret
pop
int
xlat
outsl
inc
shlb
dec
mov
cmpb
xor
dec
pop
lahf
les
bound
xchg
sub
aad
xchg
add
push
sbb
push
popf
jmp
pop
lods
cmp
cwtl
test
out
test
jl
cmp
sub
dec
lahf
jb
push
add
cli
stc
push
or
lods
fstpt
fbld
adcl
pop
cmp
lcall
pop
xor
sub
pop
sti
ds
xor
pop
out
out
mov
andl
data16
shrl
fdivrs
cmp
jbe
repz
movsb
insl
test
test
aad
loopne
mov
lgs
adc
cmp
lcall
orl
add
pushf
scas
fldcw
outsb
mov
imull
rcrl
xchg
sbb
fiadds
in
imul
test
sub
call
sub
inc
pop
jmp
test
jg
out
pop
mov
out
mov
outsl
mov
mov
test
adc
sahf
and
xchg
sbb
out
or
push
test
add
sahf
fsubl
les
inc
ljmp
xor
aam
mov
xchg
jo
mov
js
lock
push
cld
pop
loopne
mov
fdivp
in
mov
cltd
rol
xchg
pop
inc
dec
mov
push
inc
cmpsl
xlat
jbe
js
push
imul
mov
pushl
sub
mov
jns
inc
push
nop
mov
insl
insb
nop
xor
lret
push
mov
ret
sbb
fcmovnb
sbb
rcrl
ja
add
mov
lcall
cwtl
enter
and
rorb
dec
adc
cmp
or
sbb
xor
mov
sbb
push
stos
jl
stos
xchg
mov
pop
je
or
xor
and
aam
xor
cmp
sub
and
sub
or
push
pop
test
cmp
push
iret
lahf
jb
ret
xorb
bound
xchg
orb
decl
loope
mov
xchg
add
cwtl
dec
stos
jmp
pop
adc
sbb
ja
jge
push
xchg
pop
cmp
inc
dec
es
add
movsb
pop
mov
pushf
pop
pop
jle
out
push
add
sub
pop
sub
jmp
sub
gs
out
pop
cmp
xor
pusha
mov
scas
jno
push
or
and
mov
icebp
cmpsl
jns
cwtl
xchg
xchg
pop
or
or
and
inc
lock
cmp
cmp
sarb
add
cmp
pop
jl
daa
jle
stc
nop
push
pop
xor
push
jns
fwait
sub
pushf
andl
and
rol
aaa
add
pop
cmp
cmp
add
stos
inc
mov
stos
es
enter
mov
mov
outsl
fimuls
aaa
push
aas
filds
repnz
loope
ja
pop
or
pop
mov
dec
adc
lds
mov
mov
sbb
stc
enter
mov
inc
ds
cwtl
add
shr
dec
pusha
arpl
xor
lcall
push
pop
lods
inc
mov
xor
scas
lret
pop
or
out
test
das
mov
lahf
cmp
inc
insl
out
xchg
aaa
movb
cmpsl
xchg
push
sub
enter
xchg
mov
push
dec
mov
inc
movsb
cmp
pusha
out
ret
mov
inc
jge
sub
cmp
mov
pop
xchg
cld
out
add
repz
clc
add
or
and
imulb
into
jne
inc
add
xchg
mov
mov
es
push
sub
add
xor
aas
adc
sub
stos
lods
mov
jl
loope
add
loop
sub
lds
loop
dec
dec
pop
dec
outsb
xchg
mov
movb
jno
js
nop
pop
repz
cmpsb
xor
clc
mov
or
xchg
std
fcomip
cs
sarb
daa
dec
adc
push
xchg
lock
pushf
test
jmp
push
inc
add
push
int
cltd
or
push
cld
push
xor
std
mov
cltd
scas
mov
xchg
test
fstpl
movsb
repz
ljmp
shl
pop
mov
jne
cli
imul
sbbb
insb
test
movsl
jl
dec
push
add
adc
xchg
lock
push
in
mov
cltd
xchg
jp
ret
clc
dec
loope
push
push
ja
adc
stos
jmp
mov
fiadds
or
sbb
pop
push
popf
inc
xchg
les
sahf
adc
push
fwait
mov
jno
mov
push
inc
fwait
test
push
mov
cltd
jo
pop
leave
push
int3
fdiv
out
push
call
push
lcall
outsl
cli
daa
enter
pop
les
fs
fcompl
data16
fldt
or
ret
adcb
lods
jne
ret
lahf
inc
out
xchg
out
mov
mov
rol
dec
inc
in
push
pop
scas
jbe
cmp
inc
push
xor
mov
xchg
leave
xchg
add
push
in
dec
pop
out
int
ficoms
or
xor
js
cmpsl
outsb
inc
pop
mov
push
or
adc
jo
dec
mov
mov
je
icebp
mov
sub
sub
jmp
stc
lds
pop
fidivrl
loop
cmp
test
pop
inc
stos
mov
sub
icebp
sahf
cmpsl
adc
shl
addr16
popf
xor
and
xchg
and
aad
cmp
mov
gs
mov
lcall
mov
stos
inc
dec
push
mov
mov
int
mov
mov
sbb
mov
in
or
or
pop
sbb
xchg
inc
mov
dec
adc
mul
dec
aam
xchg
dec
fld
or
sub
pop
adc
dec
and
in
outsl
pop
fnstcw
jae
sub
test
cmp
jge
and
testb
sahf
adc
sbb
jmp
pop
add
or
out
outsb
insl
add
sbb
mov
pop
scas
mov
mov
aam
loope
adc
ja
xchg
adc
pop
or
xor
jl
pop
lock
sub
add
push
mov
pusha
rcl
pop
jp
pop
pop
cmp
stos
push
aas
test
inc
push
ljmp
xchg
lret
fs
sti
mov
orb
xor
lods
imul
ss
cltd
adc
dec
xchg
xor
jmp
mov
inc
hlt
mov
push
in
loope
out
popf
xor
push
and
dec
cmp
repnz
ror
rcrb
arpl
dec
cli
jns
fsubrl
xor
fiadds
push
mov
pop
mov
cmpsl
out
mov
jno
mov
andl
das
add
adc
pusha
insb
sbb
arpl
dec
insb
loop
jmp
shlb
pop
cmp
or
mov
xchg
dec
sbb
push
loop
push
adc
cmp
jne
mov
in
std
jg
leave
mov
cltd
popa
push
xchg
adc
fmuls
iret
outsb
push
xchg
bound
or
mov
std
les
lea
pop
mov
dec
dec
inc
xchg
inc
xchg
int3
and
outsb
mov
jle
aad
jno
sub
pusha
out
cmp
in
mov
dec
cmp
jnp
mov
add
push
push
mov
adc
sbb
sbb
shll
mov
js
outsb
and
shlb
mov
push
in
adc
xchg
mov
mov
adc
fmul
or
cltd
pop
and
mov
mov
xchg
inc
jmp
xor
std
or
ljmp
cmc
or
and
popf
mov
mov
push
les
cltd
cmc
scas
shlb
loopne
xchg
lock
repnz
rclb
jb
js
daa
jae
stos
push
or
mov
or
filds
dec
pop
shlb
out
xchg
adc
call
pushf
xor
push
jno
cli
mov
lcall
cli
inc
nop
lods
and
outsl
nop
cwtl
stos
rcll
jle
mov
dec
mov
lret
cld
stc
push
in
in
cwtl
imul
xchg
enter
sub
fucomp
ret
sti
test
adc
int3
sbb
sub
cmc
std
rclb
shlb
int3
xchg
leave
movsl
ret
loopne
dec
adc
in
fstps
mov
mov
adc
imul
mov
sbb
push
daa
adc
mov
and
repz
dec
xchg
fnsave
sbb
fadd
fs
or
jg
fdivrl
js
das
out
scas
fwait
push
leave
int
test
jmp
push
cmpsl
jo
mov
call
mov
pop
pop
aaa
dec
lods
pop
and
xor
dec
int3
decb
inc
fsubl
and
mov
test
lahf
ss
lcall
pop
jb
js
add
cs
adcb
call
in
in
ss
call
mov
dec
push
mov
aad
fistl
adc
fucomi
movsb
mov
and
jns
push
outsb
sub
jge
leave
popl
jl
jge
xor
subb
xchg
sbb
ds
pop
ljmp
jno
inc
cld
mov
add
bound
dec
mov
out
test
scas
xor
xchg
pusha
cmp
cltd
cmpsb
mov
xor
jecxz
repnz
sbb
imul
mov
out
push
int
movsb
jno
xchg
add
or
mov
mov
lret
cmp
popf
leave
test
mov
jp
jl
gs
addr16
lret
mov
sub
jmp
fldt
sti
pop
shlb
push
push
andb
sar
xchg
add
lahf
xor
pop
add
das
addr16
andl
or
sub
dec
scas
nop
clc
adc
scas
inc
loopne
add
mov
mov
adc
int3
xlat
test
add
in
in
xor
les
xor
jmp
add
fiaddl
test
xchg
inc
adc
or
jb
imul
ss
pop
cmp
xor
jge
sbb
cmp
sub
xchg
inc
adc
cmpsl
sbb
ret
fcoms
test
jmp
stc
pop
or
cmp
test
jb
fstps
cli
push
jo
xor
std
call
inc
or
je
inc
stos
add
cmp
aam
jecxz
adc
mov
popf
rcr
fdivrs
or
scas
in
xor
adc
paddq
pop
mull
xchg
lods
jnp
icebp
aas
push
or
jne
push
push
mov
add
es
or
and
pop
cmpsb
xor
inc
test
mov
jg
lods
mov
xor
xchg
test
cmp
cmp
outsb
add
fbstp
mov
inc
adc
dec
push
je
and
mov
das
outsl
aaa
cmc
mov
xchg
pop
and
outsb
fldenv
andb
rcrb
into
and
rorl
or
shlb
mov
out
test
and
push
gs
enter
push
cmp
sbb
or
push
clc
mov
out
sti
mov
and
sub
pusha
mov
mov
xlat
jb
push
sub
pop
push
mov
inc
fnstsw
mov
mov
std
pop
rcrb
jp
adc
dec
loop
cld
int
add
test
dec
inc
in
iret
out
fs
adc
dec
sbb
mov
xlat
and
test
fnstenv
test
fcoms
xchg
inc
jbe
mov
add
cmp
mov
aas
pop
clc
sahf
cmc
lods
jle
je
fisttps
out
sbb
xor
jmp
scas
adc
pop
and
daa
in
nop
in
shlb
test
je
inc
stos
or
push
lods
pop
out
pop
popf
jns
int3
stos
ss
in
sbb
testb
add
test
popa
mov
cmc
mov
cli
xchg
outsl
inc
sbb
lds
cmp
mov
add
xor
call
cs
sbb
fcmovbe
add
cld
std
adc
xchg
sub
out
mov
mov
cmpsb
sbb
leave
loop
leave
outsl
call
fists
loop
push
push
jb
push
into
or
mov
cwtl
bound
and
push
dec
mov
jl
inc
out
sub
int
mov
stos
sub
sub
subb
mov
clc
xchg
sbb
jns
xchg
add
and
les
cltd
add
scas
rcr
call
loopne
mov
push
orl
mov
dec
adc
ds
inc
pop
add
and
jno
add
cmp
xchg
xor
cmp
push
dec
push
cltd
dec
and
fisubs
jne
jmp
inc
mov
and
push
loopne
in
arpl
jae
xchg
pop
mov
mov
fxch
ljmp
movsb
mov
stos
and
sbb
into
push
cmp
imul
imul
push
nop
mov
test
mov
mov
sbbb
or
dec
pop
in
and
jns
das
sbb
pop
inc
mov
pop
stc
addb
scas
inc
xlat
mov
fstp
inc
imul
arpl
jp
and
flds
dec
addr16
adc
repz
mov
movsl
scas
lock
jne
xorb
or
bound
aad
rol
xchg
push
dec
lods
cmp
push
clc
fcomip
inc
fdivrl
insb
jle
xchg
lret
mov
mov
push
sbb
inc
inc
jnp
je
imul
xchg
daa
lcall
sbb
lahf
mov
ds
inc
lods
fstpt
bound
js
xor
mov
mov
int3
cmp
imul
repnz
mov
clc
mov
sbb
pop
lds
push
insl
cmp
stos
cmpsb
or
xchg
adc
imul
or
adc
cltd
pop
rcl
sti
repnz
aad
addr16
jg
cld
scas
testb
enter
sbb
std
jo
mov
xlat
fdivs
mov
or
inc
sbb
jns
mov
stos
mov
fimuls
dec
mov
push
dec
aas
shll
mov
mov
add
faddl
andl
lahf
inc
bound
ja
fwait
and
dec
stc
adc
mov
ljmp
cmp
pop
stos
cmp
pop
mov
xchg
notb
mov
or
aas
call
out
bound
movsb
pop
xchg
mov
jo
jne
sub
dec
mov
mov
idivb
jae
sbb
mov
pop
fcoml
mov
shrl
add
cwtl
insb
adc
stos
fstp
imul
shrb
out
jle
cli
ret
jle
fistpl
bound
mov
enter
andb
rorl
fldt
aam
jno
xor
xchg
inc
sbb
jnp
cmp
test
loop
jne
rorl
dec
dec
hlt
mov
jmp
in
jle
push
jb
fisubrs
adc
mov
and
inc
loopne
js
mov
mov
idivl
xchg
rcl
popl
dec
jne
adc
leave
in
pop
xlat
pop
sbb
jae
rclb
pop
sti
lods
mov
sub
sbb
inc
andl
jbe
roll
scas
mov
xchg
xchg
das
enter
push
frstor
ja
sub
mov
insl
addr16
cmpsb
incl
push
std
lcall
in
jge
out
adcl
pop
cmp
ds
fwait
adc
cld
adc
fnstcw
ds
jne
decb
xchg
xor
push
fdiv
aam
mov
pop
outsb
mov
imul
lret
lods
aas
lock
xchg
int3
mov
int3
out
fnstenv
mov
imull
int
das
xchg
mov
push
mov
cmp
mov
xchg
pop
push
pop
add
adc
mov
stos
lods
fisubrl
fnstcw
and
mov
push
pusha
mulb
scas
add
xor
fistpll
cmp
and
cmpsl
testb
gs
daa
or
jnp
out
or
xchg
add
xor
adc
faddp
subl
mov
cwtl
sbb
or
in
mov
fstpl
outsl
nop
xchg
xchg
push
int
in
ret
in
je
loope
mov
lock
inc
sbb
jge
enter
cltd
or
inc
mov
outsb
cmp
dec
dec
sti
into
or
push
xchg
xchg
imul
mov
lods
ret
pusha
shll
jb
call
dec
lahf
jbe
or
cmp
and
inc
aas
cmp
fidivl
mov
jns
lret
stos
stos
cmp
test
rorl
push
mov
push
aas
fadds
test
xchg
jo
movb
pop
fistpl
pop
cld
push
data16
in
fwait
sub
test
lods
ss
sbb
inc
mov
shrl
leave
test
repz
pop
insl
sbb
and
push
jne
loopne
mov
sarl
call
mov
js
test
xchg
pushf
jns
mov
sbb
lret
lret
movsb
test
inc
pop
lret
loop
adc
add
jne
pop
lahf
push
in
xchg
pop
data16
push
jle
out
ja
pop
mov
ds
push
cmp
imul
push
mov
in
xor
jecxz
mov
mov
xor
sbb
aad
popa
pop
xchg
mov
fcomip
dec
xlat
lret
add
cwtl
xor
pop
testb
int
jno
xchg
inc
or
push
rcll
add
add
pop
push
iret
setle
enter
push
std
nop
inc
loope
cmp
dec
dec
inc
mov
push
adc
push
scas
mov
scas
jns
inc
gs
inc
adc
and
inc
push
inc
sub
dec
loopne
jne
cmpb
xor
cmpsb
and
sbb
aas
xor
popa
or
mov
or
inc
pop
pop
stos
addl
cmpsl
incb
push
aad
fistpll
iret
lret
add
push
mov
sbb
std
cs
mov
lock
mov
lds
cmc
ss
in
pop
mov
dec
ret
xor
cwtl
mov
push
xor
ja
repnz
test
mov
xor
in
into
gs
arpl
pusha
loop
or
inc
js
push
sar
jg
sub
jle
xor
call
xchg
pushl
sbbb
aaa
xchg
enter
jge
lahf
pop
loopne
pop
andb
cmp
movsb
aas
jp
push
mov
add
jne
fdivr
aas
roll
jo
imul
iret
lock
fldcw
pop
push
test
mov
xchg
mov
jl
stos
lea
das
lea
mov
outsl
inc
mov
xorl
mov
setno
dec
test
bound
jne
mov
mov
pop
push
pop
pop
jmp
lods
test
push
out
clc
and
out
ljmp
and
out
cmpsl
and
push
outsl
mov
adc
add
push
mov
imul
sarl
xchg
arpl
and
add
cltd
pop
repz
shll
cmp
push
insb
ss
test
sbb
jnp
std
and
inc
dec
mov
std
xor
icebp
inc
mov
add
daa
xchg
inc
ret
sub
mov
call
mov
cmp
inc
adc
pusha
push
in
out
leave
pusha
and
jle
push
inc
adc
in
in
pop
add
ret
std
divl
sub
stos
inc
insl
or
and
dec
aam
pop
cld
push
cmp
cmp
je
dec
add
mov
fists
xor
pop
mov
rolb
repnz
test
scas
sub
daa
ds
xlat
adc
mov
and
jae
xor
out
dec
mov
arpl
xchg
or
cmp
fidivrl
insl
dec
mov
jl
xor
add
adc
or
jae
xchg
mov
scas
sub
xchg
outsb
jbe
loopne
push
push
hlt
jl
loope
push
and
fxch
lretw
movsl
mov
push
ret
push
mov
push
xor
mov
ficoms
push
push
inc
ret
jbe
int3
xchg
lods
std
ljmp
xchg
cmp
sbb
push
imul
sub
xor
mov
out
push
std
or
pop
mov
ret
pop
push
test
clc
aad
imul
mov
test
je
into
call
dec
xchg
pop
dec
jnp
mov
xor
cmpb
lods
push
jp
cmp
popf
addr16
outsb
cltd
and
out
push
xor
add
mov
xchg
ja
das
inc
bound
or
subl
sub
mov
mov
sub
add
scas
add
cwtl
mov
movsl
pop
test
push
jg
dec
mov
bound
cmp
dec
aas
sub
sub
mov
testl
in
adc
insl
inc
into
cmp
xchg
jbe
out
shlb
sbb
or
sbb
cltd
mov
aaa
push
mov
xor
aam
and
dec
leave
lds
jbe
dec
mov
mov
cmovo
in
push
pop
dec
mov
xchg
mov
adc
pand
hlt
cmp
shr
ds
add
push
push
daa
inc
lea
inc
cmpsb
cmp
and
add
mov
dec
pop
xor
mov
mov
pop
imul
repnz
dec
mov
mov
xor
inc
jnp
sub
jb
push
sub
lock
test
jp
sbbl
mov
mov
ds
mov
imulb
aam
xor
stos
pop
loopne
les
jns
sub
add
xchg
pop
addr16
fmul
cmpb
jecxz
xchg
sub
mov
js
bound
and
xlat
js
dec
lret
int3
jge
jb
in
and
sub
shl
les
cmpsb
leave
sbb
pusha
cli
test
lahf
addb
xor
idivb
shll
push
add
xchg
mov
add
push
mov
incb
lahf
xor
xchg
stos
out
add
or
pop
mov
call
inc
or
or
pop
push
inc
movsb
aas
arpl
out
add
mov
xchg
or
out
sub
dec
add
sub
in
pop
dec
xor
and
and
test
pushf
jg
pushf
fwait
cmpsl
jg
in
test
out
lods
inc
or
movsl
adc
ss
icebp
sahf
or
push
mov
push
mov
inc
test
aad
add
sbb
mov
leave
and
cwtl
ljmp
cld
xchg
jecxz
lahf
mov
xchg
add
shlb
jp
xchg
xchg
xchg
jle
and
xor
in
and
dec
mov
mov
dec
pop
ret
iret
imul
jmp
sar
and
fcoms
not
out
sar
lods
cmp
ficompl
xchg
mov
ljmp
or
xorl
rcrb
mov
pop
in
in
lock
push
xchg
mov
arpl
xchg
call
xor
jns
in
jnp
fstps
sub
xor
test
idivb
mov
hlt
daa
mov
sbb
or
test
or
lods
push
test
je
or
adc
xchg
xchg
jne
add
outsb
orb
or
add
pop
nopl
sub
xchg
dec
jmp
pop
jecxz
fsubp
jnp
pushf
xchg
stos
xchg
aas
jg
fs
dec
mov
jae
mov
push
adc
dec
sbb
mov
mov
jbe
sbb
push
call
push
push
mov
mov
test
push
in
push
xchg
mov
mov
popa
push
jns
cmp
imul
sub
sub
daa
xchg
fsubrp
mov
lret
in
pop
addl
lods
xor
jecxz
stos
push
mov
fstpl
test
jb
pop
mov
dec
fs
mov
adc
insb
ret
push
jae
and
outsl
loop
loopne
or
movl
adc
inc
dec
stos
stc
in
mov
inc
notb
lods
out
enter
mov
cmc
adc
lret
inc
add
fiadds
push
and
inc
xor
popa
xor
push
push
push
mov
pop
mov
push
ljmp
leave
pop
pop
lret
dec
push
call
mov
push
jmp
stos
sbb
mov
adc
sahf
sbb
iret
mov
scas
cmp
cmp
xor
dec
imul
nop
jns
jmp
fcoms
and
inc
aad
decl
gs
loopne
inc
push
ret
cmpsb
pop
cmpsb
xchg
mov
mov
int
sub
and
leave
or
jl
ds
xor
out
jbe
jbe
inc
push
notl
xor
push
add
clc
cmpsb
nop
and
sbb
and
xor
dec
xchg
sbb
dec
pop
clc
jl
mov
push
and
arpl
enter
jmp
ljmp
adc
xor
sbb
xor
sahf
adc
cmp
lods
mov
jmp
mov
in
dec
push
inc
loop
int
sub
inc
dec
loopne
inc
sub
xchg
in
jg
cmp
ljmp
int3
pop
out
std
adc
cwtl
icebp
test
imull
insb
sub
mov
cld
inc
mov
int
sbb
adc
es
aam
add
jg
mov
jg
into
cmp
rorb
es
jge
fldt
testl
push
xchg
ss
sti
in
sub
adc
mulb
cmp
add
out
add
or
imul
es
loopne
jb
push
sbb
jmp
jmp
imul
xchg
cld
pop
adc
inc
popf
mov
rcrb
cmp
loope
adc
filds
xor
push
push
fiadds
data16
jbe
test
adc
cltd
stc
sbbl
es
int
aaa
fldenv
daa
lcall
adc
sbb
jno
xchg
outsb
lea
bound
or
and
mov
pop
rcrl
gs
sbbl
bnd
lods
movsb
mov
ljmp
jl
inc
mov
mov
adc
shrl
outsb
cmp
xlat
fiadds
xchg
subl
cmp
inc
and
imul
enter
imul
sub
cmp
jns
mov
ret
shl
cmp
dec
fcos
cli
mov
outsb
hlt
pop
fidivs
jp
jno
push
inc
movsb
mov
xchg
push
aaa
pop
mov
mov
mov
dec
mov
inc
mov
mov
pop
or
sbb
sbb
lods
pop
xor
int
dec
sar
dec
sbb
push
pop
push
sbb
cli
icebp
popf
stc
inc
xchg
xchg
js
in
gs
add
mov
or
or
ja
pop
add
xor
rclb
pop
lock
mov
cli
jne
das
call
add
dec
dec
loopne
out
push
scas
in
insb
das
fnsave
mov
cmp
and
scas
mov
cmp
insb
aaa
or
xchg
shlb
xchg
xchg
insl
xchg
sub
sbb
jne
leave
shll
xor
push
fiadds
test
mov
repnz
pop
xchg
sub
cmc
sti
jbe
mov
mov
or
inc
mov
dec
call
xor
add
jmp
push
rcl
add
sub
pushf
mov
popf
call
test
in
out
mov
xor
xlat
pop
mov
cmp
push
lods
stos
mov
jmp
mov
or
xor
jmp
fisttpl
sti
jge
cld
lods
inc
xchg
pop
imul
push
ljmp
cmc
pop
jg
sbb
stos
addr16
pop
lds
outsb
push
cmpsb
in
aaa
pop
and
push
sub
in
add
mov
iret
mov
ret
in
xchg
lcall
lret
xor
push
mov
push
jle
pop
ret
cmp
mov
or
or
mov
mov
mov
out
rcrb
mov
push
outsb
fistpll
pop
adc
xchg
inc
mov
int
cs
add
aaa
call
mov
fcmovnu
jae
pop
adc
icebp
dec
test
sub
adc
inc
pop
jae
sub
scas
shlb
loope
xor
mov
shll
cmpsb
in
mov
lds
add
pop
cmpsb
cmp
fwait
pop
or
cmp
jmp
ret
xor
aas
sarb
add
cmpsl
ljmp
inc
bnd
cmp
jmp
cmpsl
movsb
add
pop
out
mov
push
jbe
sbbl
test
out
jb
in
and
and
cmpsl
pop
xor
jno
arpl
icebp
xchg
mov
sub
add
dec
mov
fsubl
adc
mov
adc
fsubrs
imul
std
andb
mov
pop
push
push
popa
repnz
mov
cld
aad
test
js
pop
jns
test
cld
xchg
out
test
shll
and
cmpsb
mov
into
cmpsb
cmp
iret
cmpsb
aaa
pop
push
int
push
aaa
or
xor
jo
push
into
adc
imul
int3
int3
adc
sub
in
cmp
or
lods
cli
xchg
fs
xchg
jne
test
repz
fxch
cmp
pop
cmc
mov
xchg
adc
sbb
popf
dec
scas
jno
or
scas
inc
call
enter
int
bound
mov
das
arpl
mov
cmp
dec
sub
xchg
in
rol
aas
xchg
add
ds
js
fsubrs
xchg
mov
je
or
mov
shrb
xorb
loope
pop
push
inc
fists
imul
adc
rorl
imul
bound
xor
call
into
out
popa
in
or
clc
sahf
test
or
pop
scas
and
sub
and
or
jle
push
loop
push
add
cmpsl
fiaddl
and
xchg
movsb
xor
or
les
jp
cli
and
xchg
test
daa
dec
inc
in
fwait
mov
test
cmpl
lea
mov
sbb
and
lret
and
dec
cli
daa
dec
bound
insl
sbb
cmpsl
mov
sub
adcb
push
lock
fdiv
das
and
cltd
push
add
dec
cmpl
or
or
mov
xor
mov
js
ds
fiaddl
mov
dec
out
and
cmp
dec
insl
stc
loope
pop
cld
xchg
sti
xchg
in
push
xor
insl
icebp
js
or
das
outsl
push
cmp
adc
adc
and
xchg
adc
nop
std
dec
push
or
mov
add
test
es
push
mov
adc
call
mov
jg
jge
mov
jge
sarl
es
rcrb
aad
in
adc
fstps
pop
movsb
negl
mov
xchg
adc
pop
nop
daa
mov
xor
lcall
insl
pop
xor
in
test
inc
movb
in
popf
mov
cmpsb
insb
scas
sti
psrlq
cld
lcall
in
test
jge
test
icebp
xchg
cs
iret
adc
jae
mov
xchg
mov
add
repnz
jle
push
push
data16
dec
lahf
xchg
push
in
pop
pushf
sbb
xchg
and
fdivr
dec
loop
jge
pusha
mov
xor
push
xor
dec
dec
cld
adc
stos
imul
inc
divb
out
pusha
and
dec
dec
clc
fistpl
or
xlat
inc
mov
dec
loope
mov
ds
es
pusha
mov
mov
rcrl
push
mov
jo
das
ja
jmp
aaa
sub
inc
out
into
mov
nop
jo
sbb
inc
and
lods
push
push
dec
popa
js
lods
lret
sbbl
es
call
and
push
insl
je
sub
dec
test
xor
insb
add
mov
mov
inc
inc
inc
ror
in
test
fwait
dec
stos
outsb
sarl
sbb
dec
mov
dec
mov
rcrb
fcmovnu
and
adc
fstl
dec
aaa
xchg
xor
arpl
ret
jle
jb
es
popa
mov
popa
sub
stos
shll
je
mov
inc
and
aam
nop
fwait
and
les
push
idivb
and
cmp
inc
pop
inc
das
inc
fcomip
popf
lods
mov
clc
adc
movsb
pop
cli
inc
mov
test
shll
xor
movsb
fsubrs
or
jp
or
jp
push
lods
dec
das
pop
fstpl
orb
mov
lcall
xchg
loope
and
cmpsb
fsubl
cmpsb
arpl
or
in
pushf
dec
rcrb
loope
bound
shrl
jge
les
aad
and
repz
sub
push
pop
stos
pop
sub
push
xor
test
jno
mov
ffree
sbb
inc
insb
add
dec
loop
pusha
pop
bound
sbbl
int3
sub
pop
jl,pt
jl
call
xchg
lods
ss
scas
repnz
test
scas
jmp
and
mov
sub
addb
fcompl
call
push
dec
pusha
xchg
outsl
daa
sub
jne
repnz
xlat
adc
pop
lock
pop
repz
dec
and
or
aad
push
xchg
sbb
arpl
filds
mov
nop
pop
inc
in
out
cwtl
lods
arpl
jno
and
cwtl
popa
clc
lahf
sahf
mov
inc
sarb
fxtract
jl
push
dec
or
adc
xchg
adc
loop
adc
clc
test
or
lea
cmp
cmc
xchg
stc
nop
push
push
ja
mov
dec
repz
rorb
leave
add
mov
pushf
imul
es
push
rcl
add
das
pop
mov
sbb
mov
ret
xchg
sub
mov
outsl
pop
mov
leave
push
cwtl
xor
les
xchg
push
jmp
mov
or
adc
add
xchg
mov
cmp
pop
and
ss
fdivs
mov
xchg
pop
sbb
movsb
push
dec
and
push
cmp
inc
fdivs
addr16
sar
lret
andb
inc
movsl
or
xchg
fsts
mov
pushf
and
lock
insl
int3
or
test
int
stos
stos
mov
mov
es
mov
or
jp
dec
dec
out
dec
sub
mov
rcl
and
fs
pop
adc
mov
es
mov
dec
in
cli
sub
insl
add
dec
push
call
imul
mov
xchg
pop
cli
pushf
decl
movsl
movsl
fadds
jl
ljmp
inc
fmuls
insb
in
jle
fnstcw
aad
xor
inc
loopne
lahf
out
ret
push
mov
in
jge
sub
int3
dec
stos
mov
dec
pop
into
in
rolb
loop
shl
fistpl
cmp
xor
lods
mov
call
fwait
add
fdivp
divb
xchg
scas
cwtl
fidivrl
loopne
into
inc
or
jno
insl
shl
mov
sbb
in
pop
dec
sub
add
add
loope
jge
or
cmp
cmp
nop
shlb
mov
rcl
idivl
ljmp
dec
mov
ret
pop
xchg
add
add
adc
std
bnd
aam
mov
jg
xor
pop
out
push
fildl
xlat
outsb
pop
jne
pop
stos
shlb
daa
or
mov
pop
adc
jg
mov
repnz
mov
lea
addb
or
pop
mov
mov
pop
rcll
push
pop
inc
jae
jmp
dec
loope
iret
cmpsl
out
shrb
andl
jg
fcoml
mov
cmc
stos
and
inc
sub
repnz
sbb
dec
add
lret
xor
sbbl
jb
xor
lods
lds
or
sbb
cmp
scas
inc
inc
test
inc
inc
push
push
into
aas
loopne
xchg
fnstenv
mov
xor
cwtl
in
pop
xchg
inc
dec
jmp
sbb
or
mov
rcl
fcomps
enter
std
jo
in
xchg
mov
mov
jp
pop
data16
xchg
cmc
jge
cmp
jo
push
andb
test
xchg
es
sbb
jge
icebp
and
fwait
or
test
sub
fsubrs
xor
or
xchg
pop
dec
mov
ret
mov
xchg
xchg
fnstsw
mov
lds
or
bound
lret
in
cmp
push
fcom
xor
dec
clc
pop
rolb
insl
fidivrs
cmp
je
sti
loopne
xor
add
insl
jo
pop
jge
mov
sub
jne
xchg
xchg
cmpsb
subl
xchg
daa
lods
lds
adc
cld
data16
movhps
icebp
inc
push
das
dec
pop
push
add
call
add
sarl
jp
sbb
test
pushf
and
lock
leave
cmp
cmp
pop
in
lea
insl
and
stos
scas
add
inc
cld
mov
ss
mov
cmc
sbb
sub
cmp
mov
nop
jl
out
test
test
pop
and
test
insb
subl
jmp
std
mov
cmpl
aas
jle
jnp
sub
cmp
ljmp
mov
jb
mov
std
fmul
lock
test
or
bound
xchg
aam
loope
push
cmp
lods
and
cwtl
ficoms
rcrb
push
sub
scas
push
call
push
mov
aaa
adc
add
insl
mov
leave
lock
inc
pop
and
mov
xchg
mov
insl
sbb
loop
in
dec
aad
leave
push
and
push
test
lock
xor
shll
je
push
mov
fwait
adc
pop
pop
jecxz
mov
es
andb
xchg
push
inc
mov
cmp
sbb
repz
daa
rclb
outsb
insb
mov
fwait
lods
js
jne
sub
lea
sahf
xor
rorb
xchg
popf
lds
jl
jge
stos
mov
out
in
filds
cmp
or
arpl
dec
push
insb
cmpsl
das
cmp
les
clc
outsb
popa
or
popf
and
push
filds
dec
sbb
lods
pop
inc
or
dec
jecxz
fsub
jp
adc
add
mov
pushf
or
cmpsl
out
gs
pop
lds
jmp
pop
test
test
mov
bound
ficomps
pop
or
mov
xor
mov
sub
xor
pop
out
insl
movsb
fwait
push
cli
pop
jbe
add
loope
mov
jae
mov
aas
call
mov
outsb
cmp
mov
xchg
rolb
cmpsb
pusha
int
pop
fisubrl
mov
mov
in
add
pop
lret
lret
sbb
mov
inc
aaa
out
test
jae
sub
lock
pop
lret
gs
add
push
push
out
add
jl
aaa
mov
aaa
lock
sahf
sbb
pop
es
xor
or
lahf
and
xor
out
daa
xchg
insb
push
and
stos
add
ret
push
mov
push
adc
leave
add
xchg
sub
aaa
inc
sub
mov
fsubr
xor
movups
xchg
mov
jle
ret
add
or
mov
cmc
mov
xor
aam
dec
outsl
xor
mov
cmp
sub
add
mov
mov
fdivrs
or
fstpl
scas
push
mov
adc
push
pmaxub
pop
repz
jle
rcr
rolb
dec
rcrl
out
inc
pcmpgtb
fwait
cmp
inc
sub
push
jmp
adc
stc
imul
mov
out
lret
mov
push
repnz
insl
jg
lock
jl
dec
in
in
adc
xor
adc
scas
inc
mov
sarb
pop
sbbb
mov
loopne
mov
add
test
filds
push
loop
movsb
or
push
mov
xor
push
xor
test
cmp
inc
shlb
call
test
cmp
pop
test
push
mov
lea
movsl
cmp
dec
inc
sub
mov
inc
sub
test
sbb
or
int
fidivrs
test
push
add
sbb
shrl
pop
mov
add
sbb
mov
cmpsl
or
rcl
push
insl
pusha
pop
and
mov
xchg
rcll
out
cmp
dec
pop
inc
aam
xor
mov
xchg
mov
nop
iretw
add
push
inc
sub
scas
and
inc
clc
out
push
mov
repnz
hlt
mov
mov
cmp
ljmp
xchg
cli
or
inc
add
push
test
xor
push
mov
lret
mov
xor
hlt
popf
fdivrs
cs
mov
inc
je
scas
les
pop
lea
pop
pusha
ret
pop
xchg
les
mov
sbb
aas
loope
mov
ret
cmc
adcl
fadd
mov
enter
jnp
inc
sbb
aas
xchg
bound
imul
add
pop
mov
push
mov
push
andb
pop
flds
jle
outsl
pop
cmp
and
ss
lcall
mov
cmp
jmp
pop
xlat
scas
gs
push
fistps
call
cmpsb
cmpsb
cwtl
sbb
incl
out
dec
ret
add
repnz
jmp
sti
out
sti
mov
dec
add
sub
outsl
movsl
aaa
mov
lahf
mov
or
push
test
adc
sarb
mov
pusha
mov
sahf
jmp
dec
xor
or
rolb
jo
xor
pop
roll
mov
scas
mov
jl
jae
xorb
fwait
stos
inc
loope
subb
cwtl
and
add
je
fucomip
data16
incl
mov
fwait
aas
adc
jge
dec
mov
push
or
cmp
and
idivb
enter
imul
scas
imul
mov
and
mov
lods
mov
mov
sbb
inc
negb
inc
pop
xor
cltd
sbb
sub
cs
adc
mov
xchg
cmp
fidivrs
sbb
inc
int3
sahf
insl
andb
sub
sti
sbb
out
and
xor
mov
notb
test
sub
es
test
or
mov
dec
pop
and
inc
enter
addr16
mov
or
lcall
mov
insb
insl
fidivrl
cmp
enter
mov
jne
mov
jp
clc
pop
adc
data16
pop
fs
sbb
xchg
movsb
mov
loop
sub
leave
xlat
xchg
out
push
inc
sub
sub
cld
adc
repz
cwtl
mov
int3
sbb
push
mov
jecxz
fwait
pop
imul
cs
xchg
lcall
add
cld
icebp
jns
xor
mov
stc
fs
shlb
mov
sti
jbe
leave
inc
and
leave
mov
lea
subb
arpl
fiadds
addl
call
dec
add
sahf
std
xchg
jmp
mov
mov
addb
lds
xlat
popa
xor
inc
mov
js
pop
pusha
mov
adc
inc
fwait
insb
jle
arpl
xchg
cld
inc
mov
dec
or
and
push
push
imul
or
enter
stc
xchg
pop
inc
inc
add
mov
fdivs
push
fs
sbb
ss
mov
orl
ds
cltd
or
sub
add
lcall
loopne
out
adc
add
iret
lock
inc
jmp
in
or
mov
xor
push
int3
push
xchg
addr16
filds
popf
adc
sbb
dec
loop
mov
into
ret
aaa
test
xchg
nop
mov
pop
push
repz
jnp
or
pop
push
ss
out
add
mov
push
push
js
mov
mov
addl
loope
pop
push
mov
or
or
cld
mov
pop
je
xchg
mov
dec
lea
faddp
mov
movl
xor
add
imul
add
or
xor
in
mov
repz
out
je
xchg
add
cwtl
jge
adc
test
add
xchg
stos
cmpsl
jecxz
hlt
inc
loope
mov
jne
lea
cli
mov
fwait
scas
pop
cmpsl
rol
mov
das
scas
repz
jo
or
jl
lock
cmc
popa
jg
test
vmovntdq
jae
or
jnp
enter
mov
cs
sub
pop
into
mov
jbe
xor
in
mov
pop
dec
shrb
mov
mov
and
dec
dec
xor
fsubs
sbb
into
cmp
jae
ljmp
pop
out
xor
jo
dec
sbb
int
outsb
loope
push
mov
stos
mov
xor
jns
push
cmpsb
xchg
in
mov
adc
pop
bound
jl
fwait
aaa
stos
or
sbb
sub
js
hlt
fstpt
push
stos
in
and
xchg
lcall
add
push
test
inc
fistpl
in
push
popa
test
ss
sbb
cwtl
and
jb
mov
xchg
clc
mov
cmp
xchg
xor
cltd
sbb
lock
pop
inc
fisttpl
lret
push
jae
fists
or
or
add
popf
or
jno
xchg
cmp
jbe
popa
int
pop
outsl
push
pop
lahf
stos
mov
outsb
add
sub
lea
push
fstl
add
mov
bound
sub
mov
sti
mov
in
outsl
cli
cli
push
fdivl
mov
sbb
xchg
outsl
cli
ret
mov
mov
dec
jbe
cmc
imul
imul
adc
dec
shr
fwait
or
or
mov
lods
insb
call
cmc
adc
sbb
pop
push
sub
popf
lods
jnp
xchg
scas
pop
xor
es
in
jno
sbb
ds
test
xchg
aad
fbld
sub
jb
dec
push
cmp
dec
loope
pop
push
pop
inc
push
das
or
jp
popa
popf
push
icebp
pop
mov
stc
mov
lcall
testb
enter
mov
jo
mov
pop
adc
cmc
mov
cmpsb
push
mov
clc
enter
cltd
inc
adc
mov
mov
in
mov
sub
stos
lea
mov
mov
jl
sbb
movsb
sbb
pop
outsb
hlt
mov
cld
push
pop
mov
jle
xor
pop
loopne
jae
add
inc
sbb
daa
outsb
pop
je
mov
xchg
dec
je
sbb
xor
test
inc
sbb
out
insl
leave
sub
dec
cwtl
repnz
sar
pop
je
subl
lds
pop
pushf
inc
push
dec
pop
sub
and
jno
out
scas
inc
add
mov
mov
mov
ds
shll
movsb
fidivs
ret
call
dec
mov
cmpsb
lods
or
mov
ss
test
enter
xor
jmp
fs
scas
cmp
mov
and
sub
push
call
shrl
adc
or
push
mov
push
add
test
xchg
mov
xchg
xor
insb
lcall
push
fcmovnbe
jge
xchg
xor
and
repz
cmp
enter
dec
sbb
pop
xor
xchg
pop
mov
pop
iret
dec
adc
stc
pop
jne
pushf
mov
test
aad
orb
mov
mov
imul
and
mov
inc
in
add
and
inc
mov
sub
push
jmp
mov
ficoml
or
xor
incb
xchg
or
jg
push
pushf
cli
cltd
mov
dec
and
mov
pop
and
aam
jbe
fisubs
in
outsb
mov
push
movsl
and
fmull
cmpl
es
jl
in
mov
push
pop
inc
clc
inc
incl
out
imul
adc
into
pop
mov
gs
jmp
insb
add
push
jae
xchg
and
test
fs
hlt
nop
pop
minps
push
mov
cmp
bnd
lods
mov
int
dec
pop
js
dec
out
fldenv
push
pop
insl
mov
icebp
stos
or
lret
repz
fstps
mov
or
jne
inc
call
xchg
dec
pop
mov
cmp
inc
out
cld
in
xchg
mov
push
scas
jb
popa
jl
pop
cmp
dec
mov
repz
shlb
add
popf
push
addr16
push
je
dec
enter
mov
add
cmp
sub
cmp
xor
push
out
add
add
xchg
inc
test
mov
jl
and
jnp
xchg
cs
adc
fdivs
xchg
pop
mov
pop
pop
repz
add
push
jns
ja
push
pushf
xchg
popf
mov
stos
pusha
mov
xor
inc
fimull
scas
nop
xor
xchg
sub
add
cmpsl
idiv
pop
mov
std
cmpsb
mov
hlt
jne
icebp
inc
fcoml
push
cli
mov
inc
fstp
lret
xchg
es
or
xorb
add
jl
push
push
dec
mov
and
or
xor
sub
lahf
pushf
scas
ret
mov
sarb
cmpsb
lahf
gs
xchg
add
adc
std
fmul
inc
cltd
xor
mov
aad
xchg
sbb
xor
dec
jno
cmp
dec
mov
sub
mov
sti
stos
jl
lock
adc
fimuls
dec
pop
call
add
stc
das
xchg
mov
mov
fcompl
pop
loop
loopne
hlt
add
fwait
sti
push
inc
and
data16
cmp
lea
filds
outsl
push
popa
dec
test
add
adc
iret
or
adc
out
mov
sar
cmp
pop
adcb
mov
in
repnz
push
scas
sahf
ljmp
jb
mov
pusha
add
fsts
ss
mov
inc
test
pop
scas
test
popa
push
loope
adc
xchg
stos
and
hlt
push
mov
mov
xchg
xchg
imul
insb
int3
jae
sub
sbb
sub
xlat
mov
mov
sbb
cmp
push
cmpsl
bswap
mov
rclb
mov
push
loopne
out
roll
fdivrp
loop
ficoms
pop
mov
shll
lcall
xchg
cmp
inc
cltd
lret
pop
cmc
mov
clc
pusha
pop
hlt
xchg
add
jl
es
xchg
jle
pop
push
xchg
sub
pop
insl
hlt
inc
fdivl
pop
shrb
outsb
cli
inc
pop
xchg
cmpsb
imul
lods
addb
xor
lcall
xchg
mov
mov
sbb
dec
repnz
mov
testb
dec
dec
xchg
ret
loop
aaa
dec
loopne
mov
mul
daa
rcl
add
or
xor
hlt
int3
mov
xchg
repz
sub
mov
pushl
fsts
mulb
or
ret
pop
mov
push
out
cwtl
or
xchg
dec
mov
mov
filds
or
lcall
aas
or
in
das
fnstenv
ljmp
mov
fisubs
pop
dec
out
cld
imul
cmc
lahf
jbe
call
std
fisttpll
scas
arpl
or
jne
fwait
bound
inc
out
or
iret
pop
sub
leave
sahf
fs
jecxz
pop
xlat
repz
xchg
pop
mov
mov
daa
int
div
mov
add
lods
jno
test
into
fstps
or
xchg
imul
leave
lock
pusha
jl
in
cltd
push
in
shlb
mov
jle
iret
call
movsb
dec
in
mov
cmc
xlat
stos
xor
clc
jnp
pop
js
push
repz
pop
imul
stc
cmp
pop
test
cmp
jnp
in
or
mov
sbbb
xor
cmp
push
push
xchg
filds
test
pop
sub
jbe
sub
dec
dec
mov
dec
loop,pt
xor
insb
bnd
and
iret
jb
sbb
fstl
mov
add
push
enter
inc
andl
cmp
into
popf
and
cmp
call
sahf
and
mov
xor
mov
data16
pop
int3
mov
gs
pop
adc
xchg
dec
jns
jmp
test
lock
ret
push
adc
out
sti
push
test
fstps
arpl
lds
fldt
sub
cs
push
xchg
dec
pop
jecxz
push
fadds
push
aad
iret
and
push
pop
push
negl
pop
insb
pop
xlat
lds
xchg
add
nop
lcall
mul
enter
cmpsl
orb
mov
inc
jo
pop
sub
push
stos
add
jge
dec
pop
jb
jg
push
push
mov
push
test
adc
push
mov
movsl
pop
scas
leave
leave
xchg
sub
scas
cmp
mov
aam
push
out
pop
and
in
stos
push
xor
xlat
jo
push
orb
adc
lods
or
dec
outsl
aad
mov
pop
loope
mov
call
sub
inc
sbb
inc
sahf
jne
mov
in
xor
cmpsl
dec
pop
xchg
dec
out
cmp
imul
sbb
addr16
int3
repz
mov
cwtl
rcll
call
inc
inc
hlt
push
inc
outsb
pop
or
push
or
fnstenv
xor
cwtl
jb
sbb
in
mov
movsb
imul
mov
ljmp
lret
cmp
pop
push
lahf
fbstp
arpl
nop
setp
push
jne
daa
jbe
rcll
in
inc
filds
cmp
jp
outsb
sub
pop
cld
inc
pop
ffree
ret
ljmp
stc
call
pop
das
mov
aas
js
sarb
push
mov
and
rolb
sub
es
pushf
jge
in
xor
int3
pushf
jg
or
pop
push
mov
enter
jl
cmp
popf
inc
dec
cwtl
cmp
jae
jnp
andb
pusha
sub
xchg
mov
enter
inc
imul
push
or
dec
mov
dec
repz
xchg
out
inc
pushf
fldcw
pop
test
pop
xor
mov
pop
xor
aas
loop
aad
inc
icebp
ret
out
sbb
ficoml
or
push
mov
jle
mov
imul
sbb
jnp
daa
lods
sub
pop
lcall
or
cs
fistpll
push
jae
repz
and
arpl
cmp
popw
outsb
popa
jg
sub
push
bound
mov
add
cmp
negl
movsl
jecxz
out
lcall
sub
lea
loopne
inc
es
jl
add
int
dec
mov
pop
dec
in
pop
jb
out
cmp
sbbl
jbe
hlt
cs
aad
sbb
clc
jnp
jns
out
mov
aam
mov
lock
push
psraw
icebp
sbb
sbb
hlt
jno
movsb
mov
arpl
sbb
sub
stos
ss
mov
or
mov
loopne
das
ret
cld
dec
mov
enter
mov
cmc
ja
sahf
inc
sbb
cmpsb
ret
and
js
test
jo
imul
mov
jae
pop
adc
add
lock
lods
ljmp
pushf
arpl
mov
cmp
and
mov
fwait
mov
mov
add
sub
xor
xor
leave
test
ljmp
cmp
xchg
cmp
test
imul
iret
xlat
scas
inc
mov
lahf
dec
lock
xchg
daa
or
dec
or
loop
adc
lea
sub
add
rcll
incl
divb
sbb
or
popa
sbb
cltd
cmc
sbb
mov
call
adc
subb
mov
push
fs
add
sub
cs
leave
lea
push
mov
jno
lcall
dec
lock
call
jns
lods
jo
cmc
or
int3
sbb
pop
setle
inc
fyl2x
rolb
xor
mov
mov
push
lret
aam
cmp
adc
out
and
fsubrl
insl
xor
lret
pop
std
ffreep
stos
cs
test
fistpll
inc
mov
je
mov
mov
shl
mov
xor
mov
int
mov
pop
popf
sub
aad
sub
out
mov
aad
adc
insl
mov
xor
and
cwtl
jmp
sar
dec
mov
loop
sub
sbb
mov
mov
xchg
sti
pop
lods
nop
and
lds
dec
pop
scas
jnp
push
mov
negl
cmp
push
adc
inc
cmp
and
xor
xchg
sbb
and
fidivrs
inc
ret
and
jp
lods
mov
add
mov
sub
mov
xor
inc
nop
dec
inc
fiaddl
push
mov
adc
cmp
inc
test
aas
xchg
sub
int3
and
mov
pop
pusha
push
pushf
and
out
add
add
aaa
ss
out
int3
push
in
or
or
cmp
in
loopne
inc
insl
aam
mov
stos
mov
loope
and
dec
std
out
ljmp
inc
inc
stos
or
xchg
cs
inc
les
and
mov
jmp
or
xchg
test
repnz
out
dec
insl
iret
fstps
jecxz
jl
sub
push
mov
clc
jmp
pusha
stc
fdivs
stos
adc
sub
and
enter
mov
jnp
cwtl
xor
in
xchg
adc
sbb
shrb
push
mov
mov
test
leave
add
mov
sbb
jae
sbb
sahf
and
adc
aam
fsubr
cmp
lds
les
call
subb
inc
aam
mov
inc
inc
fs
loope
enter
xchg
int
xchg
ljmp
inc
xlat
andl
fs
mov
sbbb
movsl
fdivl
lock
incl
mov
sbb
ja
daa
pop
jg
xor
sbb
cs
and
adc
out
test
inc
aam
or
pop
jle
loop
jge
mov
into
cltd
pushf
scas
xor
sbb
shlb
mov
loopne
fdivp
cmp
and
fidivs
addl
js
xchg
and
sub
add
dec
xlat
mov
stos
scas
mov
and
push
jae
outsl
jae
adc
jno
cmc
jb
int3
pop
xor
inc
sbb
mov
gs
pop
cltd
xor
push
jno
or
mov
xchg
xchg
adc
mov
les
add
push
mov
sub
fisubrl
or
mov
mov
call
es
push
sbb
jne
cmp
arpl
mov
int
push
addb
scas
loopne
es
lahf
imull
mov
leave
das
fwait
clc
outsl
add
xchg
mov
dec
ficomps
push
cmp
and
clc
iret
gs
xchg
jle
sbb
std
dec
sub
cltd
pop
dec
mov
cmpsl
pop
stos
lods
aaa
roll
jle
cmp
dec
test
push
jne
test
stc
fnstenv
lods
sbb
call
mov
fdivrl
cmp
imul
mov
jb
pop
mov
or
das
stc
das
cli
incl
andb
xor
pop
jp
push
mov
sbb
push
dec
popa
mov
aad
cmp
decl
movsl
fsubr
out
jmp
jne
pop
xchg
aam
out
and
or
cs
mov
scas
int3
jb
jno
cmp
andl
clc
dec
mov
jge
inc
lods
mov
subb
pop
daa
stos
mov
or
jo
repz
xchg
clc
imul
int3
lret
or
pop
daa
mov
and
out
push
xchg
cli
mov
pop
imul
cmp
or
adc
jecxz
inc
dec
mov
push
mov
inc
push
mov
int
pop
insl
cltd
into
xchg
xor
mov
or
outsb
adc
mov
pop
in
mov
gs
fnsave
shll
jbe
dec
ret
cmp
add
push
stos
int
jno
pop
sub
test
dec
gs
jnp
insb
fisttps
and
sti
inc
mov
inc
cmp
imul
dec
arpl
es
bound
aas
icebp
or
cmp
imul
movsb
jmp
sbb
pushf
pop
and
mov
jp
lea
aam
js
scas
cmc
stos
inc
daa
std
push
lea
popf
xor
inc
jge
repz
inc
cltd
or
cmpsl
cmp
inc
inc
pop
jb
dec
cmp
add
adc
loopne
pushf
dec
aad
xchg
sub
scas
cmc
adc
imul
mov
insb
scas
xchg
fcoml
enter
mov
shrl
les
ss
and
pop
inc
sbb
cld
mov
or
xchg
dec
test
adcb
add
cmp
and
jb
out
call
into
movsl
aam
fisubrl
in
jge
mov
adc
dec
stos
cmp
popf
xchg
cmp
xor
movsb
inc
mov
lods
pushf
daa
mov
lods
sbb
sahf
cmpsb
jl
cwtl
cmp
and
je
mov
mov
outsl
and
mov
fildll
fldcw
pop
repz
pushf
jecxz
push
and
push
movsl
scas
inc
fxch
jae
lret
bound
test
push
fnstenv
aaa
xor
lahf
mov
push
test
stc
push
mov
push
jmp
movsl
lods
cmp
inc
mov
inc
fimuls
lcall
sti
fbstp
or
cwtl
jb
fiadds
sbb
sub
hlt
lods
dec
or
frstor
mov
inc
xchg
mov
jne
xlat
dec
in
xchg
cli
xchg
jmp
add
sarl
mov
pop
and
sahf
adc
push
push
push
push
sub
mov
mov
jns
cmp
mov
pop
xor
movsl
jecxz
loopne
xchg
cmp
testb
pop
push
lods
mov
push
sub
mov
shll
scas
push
inc
xchg
xor
aaa
xlat
es
pop
iret
cli
pop
jo
mov
jp
inc
cmp
sub
popf
pop
and
pop
arpl
lcall
mov
pop
push
and
xchg
repz
lock
xor
and
mov
push
xor
inc
dec
adc
dec
imul
mov
test
jbe
ljmp
or
sarl
xchg
addl
lds
xor
out
mov
je
add
mov
shll
adc
test
cmp
xor
add
push
add
call
push
lea
sub
int3
dec
add
mov
sbb
sub
and
push
cmpsl
ret
inc
cmp
add
xor
or
rclb
xchg
lret
cmp
jge
mov
sub
mov
sbb
jl
subl
or
xchg
outsb
dec
enter
mov
push
xor
sub
enter
sahf
cmp
lret
mov
daa
repz
xor
mov
pop
repz
outsl
fistl
mov
lret
jp
push
jne
adc
pushf
sbb
adc
mov
push
jg
push
subb
mov
push
int
insb
mov
adc
pop
sbb
and
mov
sbbl
inc
loope
std
call
cmc
dec
movb
ret
adc
cmp
push
nop
mov
jbe
inc
std
cmp
mov
lock
pop
stc
lds
mov
in
in
and
mov
repz
push
cmp
push
fstps
sbb
rclb
gs
test
adc
pop
mov
mov
sub
shll
jnp
sarl
addr16
sti
sbb
imul
add
adc
fisttps
nop
cltd
stc
lret
mov
push
leave
mov
or
stc
lret
and
enter
mov
xor
js
push
lret
aas
not
lea
in
jns
cwtl
shlb
xchg
in
das
push
fcomp
push
loope
cmpsl
sub
mov
mov
mov
jg
push
jge
add
das
sbb
sti
pop
push
loope
lret
pop
cli
mov
mov
das
daa
jae
jno
je
das
mov
jmp
mov
cmovae
addr16
or
imul
lods
mov
or
cli
nop
das
jecxz
and
test
cld
mov
push
adc
arpl
sbb
sbbb
icebp
xchg
imul
lods
jae
in
sbb
push
inc
clc
jnp
add
fstpl
pop
push
out
ja
xchg
sub
in
cmp
outsl
jns
adc
les
bound
mov
adc
pop
cltd
mov
movsl
clc
dec
shll
enter
adc
jle
fidivs
lcall
enter
std
lods
into
in
push
je
mov
cmc
mov
jne
sub
dec
in
lea
and
lret
in
negl
jnp
push
popf
pusha
inc
push
roll
in
sbb
dec
cmp
sub
cmpsb
fcoml
cmp
push
je
imul
lods
xor
popf
sbb
push
aad
cmp
sbb
push
push
push
shll
sbb
mov
loope
addl
mov
test
rclb
nop
pop
repz
and
ffree
lret
jns
dec
mov
mov
xchg
push
ds
adc
jg
push
ret
pop
lahf
jbe
dec
sbb
cwtl
push
push
loope
pop
or
bound
shrl
mov
aam
cmc
mov
cmp
daa
leave
cmpsl
cmp
lods
jo
ja
hlt
fisttpll
fistpll
inc
ret
rol
out
xor
add
addr16
insl
sbb
cmpsl
pop
mov
add
das
je
adc
dec
sbbb
push
shr
cmp
and
mov
aaa
xchg
stos
or
aad
lods
jge,pt
pusha
sti
lods
lods
inc
xlat
or
inc
arpl
sbb
test
push
xor
jo
incb
and
push
adc
mov
decl
jle
test
loopne
or
push
lds
pop
loopne
addr16
xchg
jl
ja
iret
sub
or
out
aaa
cmp
sub
ja
xor
push
lods
sbb
pop
out
inc
inc
je
fbstp
fisubrl
sahf
xorl
mov
leave
mov
sti
jbe
jne
fwait
or
int3
in
sti
pop
in
mov
test
fwait
scas
rol
stos
inc
push
out
pop
and
xlat
xchg
xchg
out
popf
jecxz
movsl
aam
xor
push
loop
not
cli
mov
xorb
clc
test
pop
cld
xchg
or
int3
xor
mov
xchg
imul
sbb
mov
out
jbe
mov
mov
loop
outsb
movsb
mov
popa
popl
xchg
add
movsl
dec
jmp
dec
pop
sti
mov
popa
dec
fstp
pop
and
cmp
insb
repnz
ja
inc
dec
loope
xchg
js
mov
lds
sbb
dec
sbb
aam
imul
inc
lahf
jnp
pop
lods
shlb
int
xchg
push
xchg
mov
mov
sbb
xchg
aam
filds
stos
fldpi
fnsetpm(287
add
adc
and
xor
mov
cmp
sub
sub
rorl
leave
leave
pusha
sti
sub
push
xor
mov
xchg
cmpsb
outsl
test
loopne
pop
add
sub
fwait
aas
fildll
cmp
fstpt
nop
mov
cltd
ss
mov
negl
xor
in
jge
scas
cmp
add
cltd
sub
test
insl
fcmovne
sbb
mov
cltd
bound
push
add
inc
adc
rolb
test
jmp
lock
pop
cwtl
pop
mov
push
lea
xor
in
unpcklps
addb
xchg
mov
push
repz
mov
pusha
pop
faddp
lock
sbb
jne
arpl
cwtl
xchg
push
or
and
mov
repz
movsb
xchg
sub
xlat
push
add
inc
mov
and
sub
jb
xchg
fisubrl
test
cli
fidivrs
xchg
in
iret
adc
sub
outsl
xchg
mov
xor
dec
fidivrl
and
mov
adc
add
movsb
outsl
jbe
into
dec
paddd
xchg
test
je
xor
or
insb
add
out
add
dec
in
imul
adc
ret
pop
dec
ss
inc
out
ds
imull
loop
dec
sahf
pusha
dec
sub
fisubrl
jns
nop
setnp
outsb
int
push
sub
pop
mov
pushf
roll
jae
mov
in
xlat
lahf
jg
inc
add
lods
jne
fdivl
cltd
inc
cmp
iret
int3
mov
in
xor
bound
add
dec
pop
xchg
push
fmull
sub
and
enter
test
or
sbb
xchg
dec
mov
mov
pop
out
adc
fmul
add
je
xor
in
pop
mov
imul
dec
leave
jo
dec
sti
ljmp
dec
lds
bound
in
pop
push
xor
andl
or
ds
sub
or
outsl
jmp
popa
in
insb
sbbb
sbb
and
pop
dec
fisttps
data16
push
mov
ret
cmpsb
fwait
sti
sbb
xchg
imul
dec
andb
jl
cltd
cmp
clc
pop
push
repz
test
stos
sahf
sub
leave
lea
fcmovnu
pop
hlt
adc
cmp
push
ljmp
stc
data16
or
mov
je
out
rol
add
mov
arpl
xchg
mov
aad
mov
subl
xor
inc
jp
xor
xchg
call
and
ds
inc
aad
jae
lds
add
mov
sbb
mov
ret
or
clc
pop
pop
inc
testl
xor
sub
es
inc
fwait
push
pusha
sub
cmp
fidivs
pop
in
andb
aas
push
mov
push
xchg
lock
imul
mov
mov
jle
lcall
jbe
ss
pop
push
aaa
es
mov
movsb
movhlps
adc
or
pop
mov
fisubs
pusha
push
inc
rcrb
nop
push
rcll
mov
std
jmp
adc
mov
xor
pop
dec
popa
test
mov
faddl
mov
lcall
or
sti
xor
cmc
loop
inc
shrl
sarb
aad
mov
in
sub
fs
outsl
mov
stc
cmpsb
xchg
faddl
mov
ja
push
push
push
nop
daa
iret
leave
nop
dec
out
daa
sub
test
jmp
dec
clc
jo
sub
rep
sbb
cltd
mov
ss
jb
add
lahf
in
ja
dec
adc
mov
inc
sbb
inc
and
cmp
mov
pop
fdivl
into
adc
inc
jmp
push
rcr
dec
dec
shll
and
loop
dec
ret
int3
stos
dec
jge
mov
xchg
and
push
mov
fidivs
mov
ficompl
xchg
out
mov
movsb
outsl
add
xor
sbb
bound
hlt
gs
inc
add
jl
xchg
mov
jp
test
out
lods
xchg
add
mov
int
loop
fcomp
jmp
push
inc
test
call
dec
loopne
inc
jmp
mov
fiaddl
add
or
mov
cld
sub
xchg
cmp
and
sub
inc
adc
stos
in
outsb
push
les
stos
stos
test
adc
xor
xchg
jl
pop
push
int
mov
mov
and
inc
and
int3
bound
dec
hlt
mov
shlb
jno
arpl
adc
or
adc
es
jns
dec
in
fs
out
imul
xor
bound
lahf
mov
xchg
movsl
push
sbb
fsubl
cmp
das
pop
insb
dec
addr16
jl
pop
fwait
sbb
inc
or
cmpsl
xchg
push
fldcw
xor
xchg
add
sbb
xor
ficoms
shll
enter
into
pop
fiaddl
imul
jle
cwtl
es
mov
sahf
dec
pop
cli
fnstsw
or
xchg
adc
or
ja
test
sbb
adc
inc
add
fwait
pop
push
xchg
stos
cmp
clc
xor
sbb
mov
decb
push
cmc
mov
leave
es
jg
mov
xchg
xorb
mov
lret
mov
gs
inc
les
jns
into
daa
rclb
lret
movsl
imul
inc
jl
inc
mov
pop
enter
aaa
xchg
sub
sbb
int3
and
mov
leave
push
inc
repz
shrb
pop
xor
mov
inc
mov
lahf
mov
pop
mov
loop
push
pop
push
lret
shll
xchg
adc
adc
orl
ret
xor
push
mov
sbb
shrb
aas
loopne
mov
addr16
cld
and
ret
xorb
scas
adc
sbb
jl
ja
fsubs
loope
popa
sub
or
mov
test
adc
fbstp
std
aam
jge
cli
shl
sub
adc
sbb
inc
aas
and
xchg
lods
mov
adc
pop
out
mov
pushf
subb
adc
and
dec
popf
imul
outsb
andb
punpcklwd
shl
mov
mov
dec
xchg
lods
ret
inc
mov
push
lret
ret
pop
cmc
pop
enter
mov
mov
dec
pusha
inc
mov
jl
push
daa
or
mov
or
out
pop
out
lods
ret
or
cwtl
repz
jb
add
shrb
pop
cltd
cmp
clc
repnz
cmp
scas
xor
loopne
sbb
dec
pusha
cmpb
mov
scas
int
sub
xor
in
xor
mov
xor
stos
inc
sbb
sbb
mov
xchg
nop
push
jecxz
push
rcrb
xor
cmc
enter
jp
mov
loope
pop
mov
sti
stos
pop
add
pop
jp
jge
cld
arpl
fxch
test
dec
sub
xor
lcall
lds
inc
mov
imulb
fldenv
dec
pusha
idivl
cli
cmp
dec
pop
ljmp
push
lds
jbe
out
icebp
sbb
adc
push
into
gs
mov
cmp
fldlg2
testl
in
fstpl
mov
lahf
push
roll
scas
aad
mov
fiadds
test
frstor
dec
ds
fmul
or
cmpsl
add
hlt
ja
sbb
sbb
inc
dec
loop
push
adc
mov
stc
out
lods
pop
dec
repz
pop
adc
inc
xor
js
jmp
ss
mov
inc
cmp
fwait
daa
pop
mov
mov
ficompl
shll
pop
dec
add
cld
dec
jge
mov
das
push
pop
ret
stos
sub
in
mov
cmpsl
mov
nopl
or
fcmovnbe
mov
push
sub
push
jbe
inc
sahf
fs
std
xchg
push
sbb
movb
daa
cmp
push
mov
mov
and
lods
ljmp
popf
je
cwtl
inc
lods
xchg
sar
push
mov
pop
insl
fidivrs
mov
dec
std
cmp
into
and
sub
call
cmp
jbe
testl
std
lods
aaa
pop
sub
and
pop
jbe
inc
call
shrl
sub
cmp
std
add
push
jae
and
cltd
bound
lret
mov
and
ficompl
jg
fwait
xchg
mov
pop
outsl
mov
test
push
fnstenv
iret
inc
fst
push
shlb
sbb
iret
data16
fmull
fstpl
cs
shrb
sbb
ret
mov
test
into
sbb
rol
sbb
mov
mov
or
sbb
mov
mov
clc
pop
adc
lahf
stos
mov
stc
sbb
and
mov
pop
mov
lods
movsb
sti
test
mov
rclb
js
shll
lock
jmp
xchg
mov
dec
and
jo
push
movsb
and
xor
fwait
shll
xchg
mov
lock
push
daa
push
js
mov
pushf
push
insl
adc
inc
mov
mov
popf
dec
add
sub
xlat
jl
xorl
xchg
and
ss
inc
xlat
aaa
jl
dec
sub
pop
cmc
or
mov
or
ds
sbb
sbbb
pop
push
mov
insl
mov
adc
das
push
popa
loop
push
test
fnstenv
lret
mov
and
test
pop
inc
push
out
les
std
aad
addb
loop
push
test
pushf
fcompl
aad
cmp
cmp
mul
loop
push
sbb
cmp
cmp
loopne
lock
into
xchg
and
int
xchg
adc
testb
stc
je
push
or
jle
fs
das
call
add
or
cmp
dec
loop
fistpll
int
scas
imul
rorl
jbe
fdiv
adc
cmpsl
xorb
sbb
mov
je
and
cmpsb
out
ljmp
jne
cmp
xchg
dec
xor
lock
push
pusha
clc
cmp
imull
sarb
pop
push
jno
mov
in
mov
cli
dec
jae
and
rorl
test
jp
sbb
xchg
pushf
adc
in
popa
sbb
adc
fwait
push
je
inc
adc
push
xor
jnp
ret
pushf
test
js
push
sahf
adc
lcall
add
sub
and
xor
xor
mov
add
cmp
cmpsl
in
pop
add
movsb
pop
shrb
es
out
push
lahf
aas
std
cmp
pusha
jno
lods
jecxz
mov
aas
and
sub
push
movb
aaa
pop
sahf
and
in
in
hlt
fistl
pushf
push
sti
mul
inc
mov
add
movsb
and
jnp
add
mov
in
dec
dec
loope
inc
sarl
in
mov
inc
cwtl
jg
and
xor
movsb
inc
aad
sbbb
dec
dec
loopne
in
mov
jo
lods
mov
xor
sti
cmp
pop
test
cs
mov
andl
orb
adc
ss
fcmovnu
cld
push
call
int
adc
mov
inc
mov
loopne
out
push
call
fstl
movsl
sub
jns
call
cmp
movsl
xor
mov
xchg
mov
dec
or
inc
stos
pop
jo
popa
jl
push
jae
fnstsw
movb
and
iret
xchg
sub
mov
sti
nop
adc
ret
xchg
nop
add
push
outsb
add
pushf
int
movsl
in
pop
sahf
xor
xor
flds
repz
iret
cmp
in
leave
inc
cmpsb
dec
mov
pop
jns
lret
outsb
loope
fsub
jns
jb
or
inc
add
insb
adc
pop
ret
add
stos
jbe
xchg
xchg
loopne
cmp
pop
subl
add
stos
push
or
decl
jg
mov
and
cmpsl
add
loopne
pop
lcall
outsb
add
pop
das
lret
mov
mov
or
ret
inc
ja
je
fwait
ss
xchg
xor
sbb
pop
sbb
cmp
xchg
xchg
je
test
xor
jnp
ret
xchg
cs
or
les
or
xchg
mov
jbe
add
mov
push
inc
aam
or
stc
add
arpl
fwait
push
int
popa
mov
imul
popa
cmc
leave
pushf
scas
add
adc
out
dec
xchg
cltd
xor
ficompl
loopne
xchg
xor
lock
in
cmp
xor
mov
sbb
fldl
in
aad
das
sbb
call
in
ds
pop
sbb
fcmovnb
scas
inc
out
lret
aam
xor
cmp
xor
mov
sbb
jb
fstpl
push
jbe
add
pop
cli
fdivs
aad
stos
int
mov
add
adc
test
sbb
xor
shrb
sub
das
mov
pop
hlt
scas
sub
popf
fstl
push
popf
clc
insb
add
adc
cltd
cmp
into
xor
ja
daa
fsubr
arpl
pop
lahf
push
addr16
popf
sarb
fs
push
into
aas
clc
cmp
sub
and
das
mov
xor
pop
xlat
push
notl
xchg
add
ss
jmp
dec
fstl
xchg
jo
adc
lret
pop
mov
fstps
pop
pop
jecxz
pop
pop
cmpsb
pop
and
js
nop
xchg
cmpsb
push
pushf
iret
pusha
loop
cmc
push
testb
and
pop
jmp
jle
xchg
daa
lahf
fstps
inc
pop
insb
ret
mov
add
pop
cmp
lret
lods
int3
sbb
flds
add
dec
jne
jge
fidivl
mov
xchg
mov
mov
push
popf
mov
xor
cmp
aam
mov
roll
mov
push
iret
shll
rcl
cs
mov
inc
daa
adc
es
lahf
xchg
pop
mov
inc
xchg
push
mov
xlat
insl
nop
shrb
lcall
sti
hlt
pop
stc
inc
inc
mov
xchg
daa
or
adc
push
aam
push
stc
nop
stc
jg
movsb
out
add
sub
push
cmp
frstor
hlt
mov
inc
or
push
int
loopne
test
add
shll
aad
or
jno
fdivl
sub
and
xchg
xchg
stc
scas
outsl
cmc
push
sbb
add
mov
cli
mov
fdivs
arpl
pop
fdivl
add
dec
dec
ret
sbb
add
sub
imul
das
inc
lret
jecxz
loope
sbb
fimull
xchg
adc
inc
mov
cwtl
xchg
xor
popa
cld
push
data16
jg
imul
jns
xchg
ja
jae
mov
mov
cli
push
icebp
rclb
jl
xor
bound
xchg
mov
aaa
scas
jb
idiv
push
add
stos
stc
jnp
add
pop
xchg
add
jo
insl
stos
add
scas
leave
or
repnz
xchg
cmpsl
jns
pop
adc
movsl
andb
or
or
xchg
das
pop
loope
jl
arpl
stc
arpl
push
xchg
in
cmp
setns
jl
mov
icebp
push
push
hlt
lds
std
jno
xchg
out
xchg
sbbl
xchg
cli
inc
mov
in
inc
in
lret
mov
test
test
pop
repz
insb
jl
imul
sar
dec
adc
mov
jl
addr16
lret
mov
lods
jle
push
mov
adc
sbb
jg
cmp
xlat
popf
lret
jo
icebp
adc
mov
pop
js
push
xor
push
sbb
popa
fs
imul
fdivrl
bnd
lret
scas
sbb
jmp
notl
test
push
pop
and
rolb
cmpsl
dec
xchg
adc
stos
movsl
mov
mov
outsl
mov
imul
hlt
add
add
adc
lret
jne
in
popf
es
sbb
in
dec
movsl
stc
pop
rep
dec
aam
inc
push
xor
les
push
into
push
mov
xchg
ss
pop
out
aad
lahf
jp
push
lods
ror
push
add
lret
vunpcklps
xchg
cltd
inc
loopne
jo
sti
mov
ret
call
push
in
arpl
dec
sub
cmpsl
pop
roll
movsb
loopne
fbstp
ss
xor
pop
ss
mov
and
arpl
insl
leave
pop
ja
pop
scas
xchg
push
xchg
mov
dec
and
or
mov
insl
mov
mov
outsb
push
fs
and
mov
fsubl
cmpsb
sub
pop
fdivr
sbb
pop
popf
jl
mov
repz
rclb
inc
and
dec
and
sbb
xor
mov
dec
jnp
repnz
dec
lcall
mov
sbb
pop
cmp
push
xchg
mov
fld
jmp
jne
inc
cmpsl
andl
movsb
mov
pusha
fcoml
test
pop
adc
sti
inc
jns
jb
shl
dec
outsl
rclb
ja
pop
mov
fnop
stos
into
fsubp
adc
sub
jge
jo
lock
xchg
jg
or
pop
mov
or
jns
mov
fiaddl
xchg
int3
mov
rcrl
mov
ds
out
test
nop
inc
fs
shlb
ljmp
imul
ds
sbb
testl
cltd
out
dec
adc
mov
popl
sbb
aad
mov
mov
xor
add
icebp
inc
sbb
xchg
fsubp
add
mov
fidivs
xchg
outsb
push
jecxz
and
or
mov
jp
lock
arpl
sub
sbb
test
clc
pop
mov
or
lahf
adc
pop
xchg
mov
imulb
jg
aad
add
sub
into
fidivl
mov
movsl
clc
loop
cs
sbb
jg
adc
into
jmp
out
add
jg
fs
jl
cmpsl
scas
xchg
insl
in
add
inc
mov
cmpsb
xor
jne
ds
and
outsb
loop
jno
lahf
decl
and
js
repz
aaa
sbb
stos
inc
jmp
mov
jle
sub
pushf
push
inc
mov
jns
test
jl
sub
in
push
cwtl
pop
int
cwtl
std
mov
cmpsl
iret
cmp
imul
aas
scas
repz
rol
ficoml
in
enter
xor
cmpsl
jg
in
lods
out
xchg
sub
jb
add
add
push
cwtl
cs
jmp
or
adc
hlt
hlt
leave
mov
add
xchg
out
mov
std
fcoml
sbb
and
cmp
mov
mov
jl
inc
cmpsb
ret
push
xchg
or
mov
or
aaa
pusha
shlb
aad
sub
fs
sbb
push
sbb
outsb
dec
mov
cmpsb
mov
pop
xchg
or
push
xor
fstpl
in
test
sub
inc
xlat
rorb
stc
inc
jnp
int3
jo
dec
lcall
push
push
lods
push
jbe
test
aas
roll
pop
repnz
cmp
push
mov
dec
lcall
fnstenv
dec
iret
xor
cli
out
inc
xchg
mov
xchg
adc
cwtl
cmp
xor
sub
nop
jmp
lods
inc
and
ret
hlt
add
imul
pop
mov
push
xchg
popa
mov
ss
mov
and
mov
adc
addr16
fsubl
ss
mov
fdivl
shlb
xor
xchg
outsb
bound
xchg
push
adc
cmpl
cmc
fdivl
fcmovbe
push
std
fbstp
mov
call
xlat
inc
sbb
jge
cmp
push
cmp
inc
or
addb
add
jns
js
out
adc
inc
sti
nop
roll
jns
pop
das
adc
hlt
pop
int
clc
rcrb
push
and
add
pusha
mov
lcall
pop
cld
aam
repz
stos
cwtl
cmp
inc
arpl
cmp
icebp
xchg
test
pop
mov
add
nop
clc
insb
sub
pop
xor
inc
dec
pop
notl
mov
adc
cmp
fimull
adc
sub
xor
cmp
cmpsl
add
sub
cmp
sbb
pop
shrl
test
sbb
jmp
lods
or
cmp
ja
and
insl
loopne
add
jg
cld
sub
test
jo
dec
ljmp
sahf
aas
into
and
xlat
int3
fiadds
mov
out
xchg
loop
ljmp
dec
or
hlt
jb
icebp
pop
outsb
bound
mov
push
lcall
inc
scas
loop
mov
adc
stos
cmp
adc
or
out
mov
ficoml
sbb
inc
pop
fucomp
lds
and
mov
outsl
popa
sbb
sbb
outsb
dec
xchg
popa
jge
dec
aaa
stos
lcall
or
xchg
lahf
movsb
sti
push
out
mov
push
mov
mov
xor
mov
pop
adc
pop
test
pushf
mov
into
push
jmp
xchg
lock
cli
mov
xor
lahf
sub
cltd
jno
adc
inc
dec
xor
jo
mov
stos
dec
ds
js
adc
mov
jl
jecxz
add
test
fildll
movsb
sub
pushf
jl
xor
and
mov
jg
add
mov
loope
lods
pop
add
inc
mov
mov
ret
jp
arpl
xchg
aad
dec
into
loop
movsb
dec
in
xchg
test
clc
inc
push
push
outsb
jae
xor
cmp
inc
mov
xorl
icebp
lods
xchg
jge
inc
fstpl
and
pop
gs
leave
sbb
jno
fwait
lahf
mov
iret
jl
xchg
push
sub
popf
pop
push
jmp
inc
sbb
js
shrb
fidivs
pop
push
xchg
sbb
mov
dec
test
lods
pop
xor
adc
shll
adc
sbb
sub
dec
sbb
andl
lret
imul
popa
push
shll
scas
stc
xchg
mov
sar
and
lods
inc
mov
lret
add
jne
dec
and
mov
adc
jl
sub
pop
clc
shll
inc
popa
add
rolb
mov
movsb
clc
iret
push
xchg
jle
push
sub
sub
jae
and
mov
sub
cmp
jnp
mov
aam
scas
pop
adc
inc
jge
adc
popa
adc
mov
mov
dec
ja
add
xorb
cmp
insl
add
pop
push
dec
mov
cld
ficoms
push
mov
inc
int3
lahf
jl
shrl
daa
mov
cld
stos
adc
icebp
sbb
and
test
cmpl
aam
ds
jg
mov
fsts
test
adcl
add
add
js
sti
out
je
repnz
or
divb
test
outsl
fldenv
cmp
pop
and
cmp
cltd
hlt
pop
pop
ja
and
add
roll
cmp
jecxz
or
aaa
daa
jae
add
rclb
mov
inc
arpl
dec
dec
pushf
stos
insl
ja
mov
cmp
aas
fdiv
jecxz
fidivrs
imull
push
pusha
pop
movsl
cmc
and
adc
xor
mov
loop
clc
lock
stc
adc
push
pop
jbe
sub
pusha
pop
adc
sub
or
aad
mov
mov
dec
in
shl
xor
mov
sbb
mov
dec
fsubrs
fdivs
fldl
xchg
cmp
icebp
mov
lock
imul
int
dec
imul
mov
or
mov
mov
call
pushf
sub
cmp
sbb
jmp
daa
inc
rcrb
clc
ja
cmp
cltd
jg
and
pusha
nop
inc
mov
add
and
cmpsl
test
mov
sub
lret
data16
jmp
or
mov
insw
pop
fcompl
sbb
mov
mov
ret
add
fimull
shl
sti
ja
mov
subl
aam
mov
jns
enter
jg
loop
dec
xchg
jmp
call
out
mov
jno
cmp
push
movb
aam
jne
sbb
pop
add
pop
fcoms
subb
or
dec
jge
aad
adc
sahf
pop
add
sbb
xlat
outsl
xchg
das
add
insl
or
jnp
jmp
xor
xchg
jmp
repz
imul
addr16
ret
cmp
enter
mov
mov
popa
mov
adc
jbe
in
divl
out
es
mov
lahf
cwtl
lods
rcl
clc
adc
icebp
insb
add
fdiv
in
dec
movb
shlb
or
test
in
add
mov
mov
inc
lret
xor
mov
mov
imul
xchg
out
push
jne
mov
cmp
push
mov
push
pop
sub
jl
push
mov
rclb
cmp
repz
ret
sbb
ljmp
mov
mov
popa
or
popf
dec
pop
push
scas
jne
jmp
jno
scas
pusha
push
mov
inc
ret
xor
mov
out
adc
and
outsl
mov
cld
inc
dec
aas
dec
adc
cs
dec
movsl
mov
scas
xchg
cmp
pop
jge
mov
adc
loop
into
out
adc
int
and
data16
insb
outsb
inc
and
movsb
cmp
cld
insb
out
inc
xchg
fdivr
cwtl
pop
pop
xor
push
hlt
out
mov
shrl
mov
cmc
ja
nop
jecxz
add
pop
pop
adc
js
cmp
cmpl
shrl
fsubrl
scas
jl
cmp
cld
mov
mov
sbb
mov
out
add
xor
lods
data16
addl
out
testl
adc
ljmp
jmp
push
fnsave
add
rorb
xor
enter
inc
jg
fwait
jnp
in
sbb
popa
adc
cli
mov
int3
imul
mov
pop
jns
push
and
cmpsb
lock
pop
xchg
mov
pop
pop
movsb
jg
xchg
ret
rorb
sub
inc
xchg
inc
out
mov
stos
rorl
in
and
add
push
jg
and
aad
int3
sarl
xchg
lock
mov
sahf
xchg
xor
pop
lock
cli
stos
js
mov
gs
loope
and
xor
adc
mov
shl
imul
cmp
outsb
add
xor
or
out
int3
jmp
pushl
pop
or
cs
sub
dec
mov
xchg
sub
sbb
fcoml
andb
lsl
popf
js
sub
subb
mov
jo
decl
aaa
pop
add
outsl
outsl
lret
sarl
xlat
mov
and
les
jb
out
push
ljmp
test
cmpb
push
sbb
sub
loope
andb
leave
movsb
cmp
sub
push
jne
hlt
jp
xchg
or
gs
xor
pop
xchg
sub
ss
dec
mov
incb
mov
and
bound
lret
xchg
mov
into
arpl
mov
cwtl
xchg
pop
lcall
out
mov
ja
imul
add
leave
push
nop
sarb
or
pushf
lret
aam
xor
dec
inc
sbb
jns
divps
lahf
push
in
scas
push
mov
mov
lds
inc
add
xchg
in
movsb
and
dec
push
mov
cld
aad
cs
jns,pt
or
movsb
adc
pop
popf
bound
xchg
andl
scas
mov
mov
jg
or
add
cmp
dec
mov
xchg
stos
test
repz
ss
int3
int3
pop
cmpsl
mov
inc
adc
arpl
movswl
mov
addr16
das
push
es
push
mov
push
lea
enter
jl
in
mov
shlb
mov
push
add
stc
push
and
notl
xor
and
fs
hlt
lret
out
bound
pushf
xchg
xorl
and
or
or
movsl
mov
insb
lret
cld
xchg
mov
sbb
leave
lret
loope
push
mov
outsb
jle
ljmp
xchg
imul
mov
leave
loop
add
cmp
es
fsincos
loope
jmp
adc
or
cltd
mov
mov
sub
mov
xchg
pop
mov
push
xor
mov
ss
jl
lcall
loopne
addl
testl
je
jg
dec
insl
and
xchg
jp
fmuls
fwait
sbb
in
sbb
addr16
test
icebp
sbb
scas
int3
adc
push
jo
jle
scas
xchg
les
clc
cs
das
add
mov
mov
jp
inc
mov
fld
pop
jo
inc
pop
jns
adc
aas
xchg
dec
jge
lds
sbb
pop
xchg
push
rcll
xor
imul
or
insb
cmp
jl
fcompl
adc
cmp
lret
fadds
jg
push
adc
add
stos
cmp
out
add
mov
fdivrs
or
add
push
push
and
xchg
xchg
pushf
cmp
sbb
aaa
dec
fwait
out
orb
dec
es
jle
inc
push
push
mov
xchg
mov
js
lods
sbb
cmp
cmp
xchg
sbb
aad
xchg
or
inc
popf
stos
mov
and
negb
sbbb
xor
add
in
std
or
mov
test
adcl
inc
repnz
sub
push
and
outsb
outsl
add
adc
sahf
lods
lds
jecxz
gs
push
gs
pop
aam
xchg
cmp
mov
cmpsl
xorb
sub
inc
inc
ficomps
imul
loopne
adc
sarl
cmp
add
sar
push
or
subl
cmp
js
pop
outsb
adc
insl
and
cld
xlat
icebp
insb
and
mov
sahf
sti
xchg
movsb
cltd
xchg
and
cld
dec
data16
sbb
sub
inc
pop
pop
ljmp
add
lock
push
add
fsincos
and
pushf
and
loope
dec
out
adc
cs
push
subb
nop
sahf
mov
loop
ljmp
sbb
and
push
sub
xlat
and
lcall
pop
cli
pop
or
call
orb
push
and
sub
pop
push
imul
popf
pop
lock
xchg
xor
ja
aas
sarl
ss
mov
sub
cmp
push
xchg
pop
in
jo
mov
test
nop
jb
das
cmp
mov
mov
aam
sub
repnz
cli
das
hlt
cmpsb
or
dec
icebp
sbb
mov
into
xchg
push
xor
aad
jge
push
cmpsl
jbe
sub
idivb
cmp
sub
xorb
cld
lcall
in
jne
in
dec
pop
and
mov
int3
jg
pop
out
dec
mov
mov
jb
enter
icebp
out
into
push
mov
mov
xchg
fsubl
jnp
scas
cmp
lds
cmp
mov
testb
fadds
out
stc
shrl
arpl
jno
inc
pop
into
mov
leave
cmp
in
jno
clc
cltd
movsl
fildll
mov
daa
adc
xor
fcmovnu
imul
cmp
adc
adc
mov
or
cmp
iret
movsb
popa
enter
xor
stos
pop
repnz
jp
into
icebp
and
push
dec
lods
pop
inc
cld
pop
adc
shrl
bound
inc
rorl
ss
imul
lahf
test
cli
mov
cmc
sbb
lahf
imul
xor
inc
jns
xor
push
pop
add
xor
and
xchg
sub
cli
lea
cmc
and
repnz
unpcklps
into
gs
sub
rcr
jg
outsb
and
mov
xor
pop
mov
sub
enter
loopne
adcb
sub
push
xchg
scas
ss
es
xor
or
in
ss
inc
in
inc
arpl
or
xchg
xchg
scas
xor
sbb
roll
pusha
xor
lods
sbb
nop
lcall
mov
loopne
mov
aas
mov
out
or
xor
out
jnp
mov
out
dec
loope
add
lods
cmp
in
sbb
mov
xor
pop
cwtl
in
mov
jbe
pop
or
test
jnp
repnz
fildl
push
dec
xchg
dec
pop
lcall
cmpsb
sub
mov
push
popf
jecxz
sti
and
into
xor
adc
out
jge
jmp
in
fwait
insb
lock
jmp
sub
cmc
push
jge
push
shr
mov
mov
stos
mov
sbb
xchg
movsl
cmp
fs
repnz
setge
dec
repnz
add
mov
push
out
jb
jo
lret
mov
sarl
pop
test
mov
outsl
in
push
decb
jg
iret
movsl
lret
dec
shll
push
xchg
ljmp
lahf
sbb
xchg
scas
out
mov
jno
popf
sub
test
inc
mov
adc
icebp
cwtl
dec
les
clc
mov
xchg
scas
ss
clc
stos
in
cmc
push
and
lret
mov
cwtl
test
dec
ja
mov
mov
add
and
in
icebp
cmp
int3
add
shl
push
leave
cld
pop
insl
jle
and
inc
out
dec
lret
filds
mov
cwtl
xchg
test
mov
sub
xchg
inc
pop
lahf
repnz
es
mov
xor
sbb
int
and
mov
icebp
cmp
stos
sahf
popf
jle
cmp
cmp
pop
pushf
out
out
mov
xor
sahf
scas
push
jg
mov
mov
push
push
lcall
xlat
mov
imul
in
jb
fsts
lret
fisubl
adcl
dec
mov
orl
fs
push
lock
out
lret
or
mov
mov
ds
lods
jbe
aam
mov
pop
fstpl
xorl
pop
adc
in
nop
test
sub
xor
push
lods
and
insl
dec
pop
push
cmp
xchg
pop
cwtl
scas
and
testb
popf
aaa
das
push
testl
int
fwait
sbb
jge
adc
lret
repnz
xchg
jmp
add
call
jns
ja
pop
mov
mull
add
and
aas
mov
out
jmp
in
pusha
pushl
iret
data16
push
cmc
lcall
jne
sahf
lods
aaa
jbe
xchg
scas
jno
inc
inc
movsb
sbb
orb
enter
add
test
jne
loope
cltd
inc
js
xchg
testb
cmp
fimuls
dec
pop
xor
xor
dec
adc
xor
xchg
or
xchg
sti
popf
lods
sti
rclb
loope
mov
push
lea
push
push
jp
mov
loop
mov
cmpsb
stc
pusha
xchg
jmp
fdivrs
mov
sbbl
xchg
sub
lock
jecxz
sbb
test
fstl
bound
pop
std
sbb
lret
out
jb
jge
into
jle
std
out
gs
dec
sbb
fsts
jbe
mov
mov
jp
fsubs
dec
lods
stos
loop
fdivl
add
ds
stos
mov
hlt
push
test
addl
sbb
mov
mov
mov
scas
iret
popf
and
in
inc
or
ds
and
iret
iret
data16
adcl
sbb
pop
std
mov
and
push
outsl
shlb
bound
sub
scas
jne
lahf
push
fcoml
mov
add
dec
ret
lret
mov
jmp
popa
hlt
addr16
inc
push
fisttpl
xchg
sub
bound
divb
or
jp
insb
mov
and
pop
cli
sub
mov
fcmovnbe
inc
inc
dec
jno
mov
jne
push
out
xor
pop
fcmovbe
aaa
inc
mov
mov
dec
adc
test
jb
das
ret
dec
cli
jne
ja
push
pop
xor
push
jae
adc
push
jbe
xlat
idivb
mov
xchg
mov
sahf
xor
pop
dec
mov
in
jle
sub
mov
cmp
test
insb
fsub
push
out
push
push
and
push
push
scas
sbb
das
adc
mov
outsl
imul
movsb
out
decb
push
xor
in
sahf
pop
das
lahf
gs
notb
rol
mov
jno
mov
ja
les
pop
push
xchg
mov
pop
sub
aad
ja
das
jl
add
aad
imull
arpl
int
mov
sbbl
pushf
mov
insl
push
in
insl
ret
inc
push
popa
into
jnp
mov
xchg
sub
push
inc
sub
dec
add
sbb
ljmp
adc
aaa
cmc
mov
stos
inc
inc
xchg
shl
inc
scas
repnz
adc
setne
mov
xor
or
adc
aam
mov
mov
pop
jbe
loope
push
dec
imul
jle
sub
push
leave
mov
fdivs
mulb
push
fists
clc
in
fcmovnb
lea
cmp
dec
out
dec
imul
xor
outsb
test
mov
loop
inc
fistl
mov
addb
int3
popa
jmp
xor
pop
and
aas
enter
push
into
fidivs
iret
addl
sub
fwait
lcall
sub
dec
pop
mov
jb
xor
ret
rcrb
sti
lods
cmp
dec
icebp
pop
sbb
adc
xor
sahf
aaa
enter
fnstsw
popf
data16
cmp
sub
or
sub
mov
and
xor
push
mov
clc
jae
mov
sarb
ljmp
ljmp
int
mov
mov
enter
daa
shrb
mov
addr16
pop
xor
cmp
cmp
movsb
bound
out
mov
mov
jno
xor
jbe
jns
ss
pop
orb
leave
sbb
dec
stos
int
frstor
mov
jecxz
mov
mov
mov
mov
cmp
add
loop
mov
repz
mov
pop
inc
ficoms
mov
gs
aam
outsb
push
cwtl
fbstp
cld
rcrl
repz
add
cmp
data16
jne
and
mov
xchg
sbb
stos
push
mov
call
and
cmp
mov
fsubr
jg
cmp
insb
outsl
addl
jp
repz
and
dec
push
cmpsl
pop
notb
cmp
imul
pop
lret
loope
popf
sub
decb
jp
mov
lock
jle
jg
inc
adc
mov
inc
gs
lcall
insb
jb
pop
ret
repz
leave
adcb
cmpsb
jns
out
shr
fwait
sub
and
mov
out
out
mov
mov
je
mov
out
in
imul
cltd
and
shl
push
mov
sahf
lods
cmpsl
adc
aad
fwait
pop
ljmp
adc
push
mov
ret
aad
jae
test
cli
lea
not
in
sahf
jno
lds
xor
fsubr
jb
jp
push
ja
mov
push
push
fstl
cmp
mov
out
int
mov
fnsave
dec
cmovne
pop
inc
test
adc
cmp
push
add
es
sbb
and
cmc
mov
adc
int3
mov
leave
inc
xor
leave
xlat
push
push
or
sub
mov
mov
adc
rorl
jo
leave
jg
add
jo
fs
sbb
jl
mov
outsl
inc
inc
adc
xor
dec
aaa
push
enter
dec
pop
mov
push
scas
mov
das
fwait
pop
lcall
fdivr
cmp
mov
adc
lods
aaa
sti
mov
cmc
and
xor
mov
push
shll
in
cmp
cmpsl
ds
inc
inc
add
vmulpd
inc
sbb
sbb
push
pop
fsubs
or
leave
jl
jle
mull
jae
push
jmp
shrb
loop
jmp
popf
outsl
mov
dec
sub
pop
arpl
lods
das
in
and
xorl
outsl
push
xchg
test
pop
cmp
mov
jecxz
push
faddl
mov
cmp
fs
ljmp
pusha
cmp
push
and
jg
loopne
jg
mov
mov
out
call
stos
sti
mov
out
jecxz
ss
rcr
mov
dec
call
test
das
push
xchg
cltd
rcrl
jg
fcoms
mov
xchg
dec
push
enter
sub
lcall
jb
test
lods
fcomi
lods
mov
and
push
cmp
sahf
in
dec
jge
xchg
shll
add
movlps
mov
xor
jae
lock
mov
out
push
sbb
stos
mov
daa
lock
cmpsb
shl
dec
mov
pop
jecxz
iret
divb
mull
mov
cmp
fadds
fmulp
jg
or
pushf
cmp
out
imul
jp
push
cmp
fwait
ja
icebp
mov
jo
mov
pop
mov
push
pusha
clc
xchg
and
jg
into
out
pop
div
out
pushf
sbb
pop
push
out
aaa
fcomi
push
insl
sbb
pop
test
fildll
pop
int3
xchg
das
mov
out
cmp
push
sbb
test
leave
lods
jne
sbb
ficoms
hlt
mov
movsb
mov
dec
mov
inc
sub
dec
fstpt
pop
push
or
and
jne
add
or
je
jbe
lret
cld
cmpsl
es
adc
mov
stos
jae
dec
inc
lcall
and
dec
or
pop
ret
imul
lahf
in
sarl
je
in
xchg
scas
lods
je
lds
push
call
in
or
loope
dec
mov
arpl
xor
js
enter
xchg
sub
into
outsl
dec
decl
add
pop
mov
adc
out
faddl
mov
jne
dec
mov
cmpsl
rol
xor
mov
or
jle
imull
push
addl
fwait
ja
movsl
out
mov
push
push
sbb
push
shll
xchg
test
mov
js
push
mov
popa
pop
jo
pop
add
add
sub
jb
mov
and
notl
jle
loop
cmp
xchg
shr
dec
sbbl
xor
ret
divb
cli
sub
dec
dec
hlt
push
popf
and
jb
sbb
call
test
lock
push
mov
je
pop
je
inc
jns
ja
xlat
insl
in
xchg
add
jge
dec
rorb
sbb
cmp
fadd
inc
or
inc
sbb
sub
xchg
cmp
cmpsb
ds
mov
fcomip
rclb
dec
hlt
and
fisubrs
xchg
stos
inc
xor
or
jge
jno
and
sysenter
int3
test
repnz
jae
lcall
movl
data16
stos
mov
push
shrb
jae
aam
and
outsl
andl
lret
je
outsb
mov
sahf
jno
jmp
inc
push
mov
xor
iret
mov
test
xchg
fisubl
jg
sbb
ljmp
xor
pop
jecxz
xchg
es
in
enter
or
pop
stc
jb
sbb
in
xlat
mull
and
mov
in
repnz
or
ss
shrb
cmpsb
in
inc
pop
inc
scas
pop
cmc
ljmp
in
repnz
cmovg
xchg
mov
aaa
dec
mov
rcll
shr
sbb
inc
lahf
movsl
out
ljmp
jmp
push
test
pop
and
and
call
pushf
inc
movsb
call
mov
or
xor
sbb
je
dec
cmpsb
aas
in
jmp
out
fldenv
dec
arpl
mov
push
idivl
movsb
pusha
pop
fidivs
les
sub
xor
push
movsb
in
mov
push
or
push
inc
sub
mov
mov
divl
sub
jge
popf
mov
ja
fisubrs
lahf
das
cmc
inc
cwtl
lock
mov
test
xor
cmp
mov
mov
inc
mov
les
vcvtsi2ssl
aas
jnp
push
call
ret
push
xchg
imul
loop
push
mov
mov
lods
fdiv
fiadds
sbb
jg
inc
adc
lret
push
aad
add
aam
mov
dec
mov
out
jns
add
lods
ss
xchg
stc
pushf
adc
fs
stos
sbb
imul
insb
mov
xor
xlat
mov
adc
mov
fbstp
mov
pop
ss
sti
add
insb
negb
jo
and
sti
adc
ret
repz
clc
repnz
cmp
dec
out
cltd
sbb
push
aas
pop
pushf
test
inc
sbbl
leave
xlat
nop
mov
pop
sahf
das
adc
mov
sbb
fsubr
mov
mov
out
cmp
push
xchg
out
sbb
mov
mov
ja
xchg
dec
fucomi
pop
push
pop
insl
push
imulb
dec
scas
inc
enter
dec
push
cmp
cs
pop
jo
inc
in
test
sub
rclb
outsb
jge
jae
add
cmpsb
xchg
add
sbb
jns
push
call
xchg
repnz
into
leave
fwait
pop
push
adc
jns
jle
in
imul
dec
cmp
mov
xchg
out
mov
lods
mov
cmp
popf
adc
mov
ljmp
dec
jp
stc
insb
jg
mov
mov
loop
jbe
subl
es
sub
adc
push
jmp
iret
mov
jbe
sbb
add
push
in
push
lods
addr16
dec
cltd
shr
push
sub
lahf
dec
loopne
sbb
addr16
dec
mov
cwtl
xchg
mov
das
push
fs
xchg
subb
adc
jp
pop
idivb
mov
shll
fdivrs
lret
sbb
mov
jle
adc
cmp
loope
mov
lahf
dec
and
inc
xor
popf
call
inc
mov
pop
cmp
or
imul
shrb
fs
xchg
ja
mov
in
inc
inc
inc
xchg
ljmp
xchg
cld
lods
andb
sub
or
aaa
sahf
push
addr16
or
inc
idivl
push
push
rcrb
repnz
push
jge
lods
repz
orl
dec
pop
scas
ljmp
or
adc
mov
jmp
fmulp
or
mov
add
mov
cmp
pop
stos
jl
and
xchg
mov
and
fisubrs
insl
mov
push
lds
or
ds
lods
dec
mov
ret
sbb
mov
fptan
cmp
sub
negl
stc
mov
add
xorb
pushf
jno
jb
sbb
push
rorb
jbe
sbb
ljmp
push
mov
fstpt
mov
and
ret
les
and
push
add
xor
loop
test
inc
mov
gs
inc
bound
test
jl
lods
rclb
lds
in
sarb
jl
push
movsl
jmp
mov
ret
adc
adc
les
xchg
jle
test
inc
lahf
sbb
ja
lea
fwait
xor
mov
mov
testl
out
scas
mov
loopne
leave
popf
mov
push
pop
iret
dec
add
push
cmc
mov
stc
push
imulb
sbb
negl
filds
or
dec
ja
iret
test
dec
add
stos
es
clc
mov
inc
test
leave
into
mov
ret
sub
push
cmpsb
cmp
add
xchg
mov
sbb
addl
mov
loope
cli
and
mov
repz
enter
jns
fcoms
jne
push
test
dec
cli
inc
sahf
xchg
push
out
divl
aad
jmp
jbe
ds
push
outsl
inc
cmp
cltd
lock
push
pop
jno
aam
insl
sbb
mov
daa
push
mov
in
insl
and
ss
lret
hlt
adc
xorl
mov
push
lea
mov
sub
subb
sbb
inc
call
popa
cmp
movsb
jns
cmp
jle
out
mov
test
fs
pusha
lods
loope
mov
scas
pop
xchg
xor
jbe
dec
les
mov
pop
mov
pop
push
mov
adc
aad
inc
fwait
add
std
outsb
das
ret
xchg
loop
aaa
clc
mov
ljmp
inc
lea
adc
mov
clc
adc
sub
repz
cmp
clc
aad
cmp
mov
arpl
shll
fsubrl
cli
mov
mov
jno
aas
push
gs
add
xor
xor
push
mov
dec
stc
sub
jb
jbe
idivl
jge
rcl
sub
repnz
push
or
push
xchg
shl
xchg
loope
dec
or
out
cmpsl
dec
test
fbstp
les
popa
adc
pushf
xchg
and
mov
nop
mov
cmp
ret
mov
cmc
aas
jae
dec
fidivrl
shl
inc
mov
adc
insb
xchg
in
sub
mov
test
push
or
arpl
jae
sbb
mov
xlat
mov
out
jmp
cltd
sbb
adc
mov
incl
imul
pop
adc
dec
jmp
push
imulb
cmp
ss
pop
jbe
sbbb
out
dec
cmp
cmp
insl
sbbb
xchg
cmpb
or
and
push
jp
loope
cmpsb
sub
inc
pop
xor
mov
ret
dec
pop
into
lahf
aas
and
or
loopne
sbb
fstpt
cmp
js
xchg
loop
in
push
and
fwait
sbbl
or
mov
outsl
jnp
sarb
and
add
hlt
test
add
pop
adc
fstl
xor
sub
xchg
xchg
jl
les
adc
adc
out
xchg
add
or
decb
dec
in
jne
sub
sbbb
sub
stos
dec
lahf
push
and
shrl
cwtl
orl
cs
push
add
pop
addr16
scas
shlb
push
push
push
adc
enter
ja
mov
push
adc
xor
int3
mov
stos
xor
scas
jne
jbe
inc
jb
aam
outsl
shrl
jns
into
add
dec
and
xrelease
mov
push
imulb
mov
push
add
aam
pushf
mov
cld
fwait
adc
cmp
mov
add
in
cltd
mov
inc
inc
mov
aaa
or
sbb
cmp
mov
adc
jge
mov
sahf
or
stos
inc
add
adc
adc
arpl
mov
ss
adc
jo
xchg
les
mov
or
prefetch
or
test
das
add
mov
cmp
inc
pop
out
fsubr
inc
pop
jae
mov
popf
cs
pushf
add
mov
repnz
dec
in
stos
insb
xlat
jg
xor
push
ss
or
mov
cmp
dec
push
les
es
int3
lret
pop
sub
mov
jbe
mov
mov
bndstx
test
test
fcmove
inc
add
mov
inc
mov
sarl
cwtl
cmp
pop
jns
adc
ss
inc
mov
xor
loopne
ret
rcll
test
iret
gs
aad
fs
imul
stos
mov
mov
cmp
mov
pop
movsl
dec
mov
je
loopne
and
and
hlt
pop
pushf
jo
into
jg
jg
pop
mov
jp
or
bound
pop
hlt
mov
adc
push
lret
loope
out
popf
clc
test
inc
inc
push
lret
xlat
xor
lahf
mov
das
mov
push
jmp
and
pop
pop
mov
ret
or
imul
xor
dec
adc
cmp
cmp
lea
fists
push
push
jmp
lcall
sarl
xor
jl
cmp
sbbb
arpl
or
sbb
inc
test
rorb
add
es
push
pop
xor
mov
ds
or
push
mov
std
push
cmp
sub
adc
rcrl
mov
xchg
mov
test
je
lahf
mov
pop
out
inc
leave
mov
push
pushl
jo
or
sahf
dec
cmp
mov
mov
and
rcll
ljmp
dec
jmp
pop
jno
in
jge
jmp
and
inc
mov
xor
inc
inc
lds
dec
dec
inc
je
fsubl
fistpll
shl
dec
xor
cs
xor
and
scas
mov
mov
ret
or
xchg
jae
shll
dec
repnz
pop
mov
pop
cmp
cltd
cli
ret
shll
push
std
fs
or
mov
add
jg
sub
inc
lret
inc
dec
loop
popa
iret
bound
imul
or
inc
cli
pop
mov
or
cmp
mov
mov
fidivrs
aad
subb
rclb
loopne
jae
hlt
mov
les
les
mov
leave
insl
cmpsb
lock
das
mov
movsl
shll
cmp
aad
inc
rcrl
repnz
jg
out
call
mov
sub
jnp
adc
cmc
pop
cmpsl
out
fsubr
sbb
movb
lods
mov
enter
pop
testb
mov
sub
dec
push
dec
cmp
inc
fcompl
cmp
pusha
stos
jns
faddl
jno
cmc
dec
pop
mov
adc
and
stos
add
xchg
out
fidivrl
push
pop
rclb
mov
sarb
inc
xor
jb
jmp
enter
imul
adc
pop
pop
sub
ja
negl
pushf
or
jl
or
adc
dec
bound
scas
dec
imul
mov
movsl
cmp
rorl
insb
ret
imul
pop
sbb
int3
jl
xrelease
loop
ret
test
cmp
or
arpl
lcall
popa
stc
addr16
xchg
popa
cmp
mov
xchg
xorb
mov
jle
mov
xchg
fiaddl
mov
loope
lds
orb
popf
cmp
stc
clc
jecxz
fisubl
movsb
cmp
xor
mov
mov
lret
bound
in
out
movsb
mov
cmc
adc
xchg
jne
ja
xchg
add
ljmp
lcall
jl
jmp
dec
in
movsb
xor
call
add
and
lds
repz
sub
mov
pop
hlt
mov
mov
jecxz
subl
dec
movsb
add
sub
hlt
mov
vmptrst
js
xor
hlt
mov
lcall
adc
mov
pushf
mov
fbld
leave
mov
fstl
cmpsl
push
adc
push
jns
aas
cmp
push
loope
mov
mov
out
mov
adc
push
scas
rcl
sbb
rcr
mov
in
inc
lret
xor
add
mov
add
jecxz
jg
fldl
sbb
in
dec
aad
pop
sarl
lock
movsb
mov
popa
mov
mov
jle
push
cmp
in
into
ja
inc
js
mov
cmpsb
dec
test
int3
jmp
mov
add
repz
push
rclb
test
mov
scas
pusha
pop
mov
out
mov
inc
push
loopne
cwtl
in
jg
orl
adc
mov
or
fcmovbe
in
mov
push
push
cmp
call
push
cmpb
jne
push
out
dec
in
stos
mov
sub
add
in
in
sub
icebp
pop
pop
push
cwtl
mov
mov
clc
data16
test
xor
aad
jbe
and
xor
popf
aaa
stos
inc
add
xor
sbb
pushf
sub
hlt
call
pop
push
fucomi
xchg
mov
bound
xchg
sub
xchg
leave
adc
pop
dec
push
ret
shll
mov
xor
shlb
outsl
dec
out
shll
pop
hlt
inc
mov
insl
mov
out
mov
or
bound
xchg
jmp
shlb
divl
add
outsb
jl
inc
ret
sbb
push
mov
mov
cwtl
test
cmpsl
cld
addb
test
inc
lds
movl
aaa
std
or
dec
pop
dec
pop
int
repz
mov
icebp
xchg
mov
je
cmp
lahf
mov
mov
addb
popf
stc
popf
xchg
mov
test
xor
mov
dec
push
mov
repz
lock
cmpsb
insb
ds
push
mov
fisttpl
add
mov
popf
rorl
jmp
or
push
cwtl
push
movsb
das
sub
add
mov
sbb
or
es
mov
test
adc
imul
andps
inc
xchg
lds
pop
mov
enter
sarb
and
pop
leave
in
test
mov
cmp
jo
scas
push
lret
cmp
mov
shlb
xchg
test
int3
mov
aaa
out
jp
xchg
subl
out
xchg
fistpll
arpl
repnz
fdivs
inc
sub
jns
test
jae
fs
pushf
sbb
cmp
mov
cmpsb
enter
push
jmp
jmp
cli
adc
add
dec
aaa
inc
test
cli
or
mov
insb
push
add
test
in
pop
int3
sub
or
lret
fadds
adcb
dec
ljmp
inc
mov
fldenv
push
clc
xlat
xor
fcomps
andb
dec
loopne
inc
push
ret
addr16
push
jns
loopne
jae
fidivrs
xchg
cmp
push
inc
loopne
pop
inc
inc
lock
fimuls
adc
outsl
cwtl
pop
sti
xchg
push
xor
sub
pop
mov
sbb
inc
pop
and
cmp
cmp
orb
or
pop
inc
pop
in
flds
dec
mov
cli
jae
lods
outsb
shrb
nop
inc
cmp
jecxz
inc
outsl
push
cwtl
dec
shrb
adc
fnsave
int3
cs
out
cwtl
dec
adc
fstpt
push
xchg
push
adc
mov
vpunpcklwd
sbb
xchg
es
pop
imul
mov
enter
push
imul
fwait
jg
lock
jno
cmpps
fdivl
and
adc
loop
ljmp
test
mov
lret
das
push
dec
dec
jge
dec
test
out
ds
out
jle
xor
sbb
jns
pop
mov
push
test
popf
icebp
cmpsb
into
inc
push
pop
je
loopne
add
jnp
insb
inc
pop
out
std
lea
lock
adc
jae
xchg
pop
push
sub
cli
dec
mov
adc
dec
stos
pop
mov
jecxz
dec
popf
lods
mov
cmpsb
jo
and
adc
push
and
xlat
pop
xchg
cmpsb
sbb
negl
scas
jae
aaa
mov
daa
jne
mov
les
lahf
dec
sahf
fsubrl
push
dec
into
pop
xor
mov
cmp
scas
pusha
add
mov
mov
frstor
addr16
ja
fbstp
les
xor
fistps
es
pop
rorl
mov
pop
pop
fbstp
gs
mov
mov
inc
push
and
or
jns
in
imul
xchg
fwait
test
inc
sbb
add
out
test
mov
or
jg
cmp
outsb
add
xchg
xchg
add
adc
adc
repnz
ja
scas
fildl
lods
push
fwait
push
shll
inc
mov
int
je
fidivl
xchg
sbb
xor
fsubl
jmp
cmp
pop
imul
and
mov
jae
sub
pop
adc
xchg
xlat
push
test
jl
cltd
lods
xchg
dec
lock
int
imul
push
xlat
call
mov
arpl
neg
sbb
leave
cwtl
popa
leave
stos
cmpsl
cmp
dec
int3
les
add
mov
push
xlat
js
in
aad
outsl
inc
pusha
cmp
ret
jp
mov
mov
and
push
shll
repz
in
jnp
cmp
loopne
pop
xchg
sub
cwtl
psraw
mov
jmp
fmul
push
mov
imul
shrl
ret
dec
out
sbb
bswap
ss
dec
mov
or
test
mov
inc
mov
int
lret
mov
push
loop
jge
add
adc
sti
xor
xor
inc
inc
inc
or
dec
push
out
rol
fwait
jl
jbe
shlb
js
movsb
aad
push
movsl
inc
mov
cmc
cli
adc
icebp
dec
enter
ret
cmpsb
adc
stc
dec
movsb
xor
lret
or
lcall
and
cmp
jmp
pop
xchg
sbb
imul
add
sbb
push
pop
xchg
or
lret
sbb
cli
lret
jecxz
sub
imul
shrl
inc
addr16
rorb
lds
in
repnz
leave
sti
mov
push
and
orb
jnp
rclb
mov
addb
pusha
divl
jne
xchg
lcall
jge
das
and
int
mov
ret
or
add
int
jge
add
insb
cmc
add
and
mov
cmpb
fcmovu
pop
sbb
fidivrl
add
inc
test
inc
jb
call
mov
stos
inc
jb
call
pop
lods
mov
and
adc
mov
pop
das
xor
aad
stc
ret
jnp
sub
or
dec
xchg
add
sarl
mov
js
or
in
imul
mov
or
push
lret
mov
stos
inc
push
or
cmp
cmp
outsb
pop
ljmp
push
cmp
fdivrl
sub
jbe
mov
mov
into
mov
rolb
adc
add
stos
cmp
add
mov
jmp
add
sub
dec
mov
dec
xchg
mov
pop
inc
sub
addr16
addl
cltd
xor
das
in
push
stos
test
mov
lds
or
pusha
xchg
sub
sbb
mov
ret
cs
scas
dec
sbb
es
jae
sbb
pop
jmp
rorb
mov
adc
imul
aaa
push
or
repz
cmp
push
cmp
cmp
cmpsb
dec
adc
push
dec
xor
clc
sti
add
or
outsl
daa
sbb
pop
xor
fidivl
inc
pop
lcall
sub
aad
cwtl
xor
ds
sbb
imul
jne,pt
fbstp
fdivs
cmp
lcall
and
mov
push
outsb
jmp
aaa
sbb
pop
dec
ret
push
mov
test
imul
mov
push
movsl
or
ret
pop
mov
int
out
dec
in
scas
or
cli
xor
push
xor
loop
push
or
and
out
sti
pop
jl
mov
mov
das
xchg
fbstp
mov
in
jbe
lret
out
inc
push
xchg
mov
and
insb
push
fldt
cmpsb
sar
mov
insb
adc
outsb
cmp
scas
test
inc
or
je
cmpsl
sbb
and
mov
sti
mov
push
repz
lds
push
add
sbbb
repz
and
mov
cld
and
sbb
inc
mov
lcall
jmp
call
scas
push
int3
or
inc
stos
mov
adc
pop
out
shlb
sub
lahf
push
sub
jb
iret
outsl
sub
xor
jg
sub
fwait
push
push
mov
sub
cmc
call
jnp
or
push
dec
mov
mov
push
lods
inc
inc
push
push
loop
ds
mov
jns
or
add
xor
or
cmp
ret
inc
and
pop
dec
add
jmp
push
imul
push
in
loopne
repz
xorb
add
pop
in
inc
cmp
in
movsl
add
ja
ljmp
jns
push
mov
aas
adc
inc
sbb
bound
push
dec
and
fbstp
jle
pop
in
xor
push
dec
shl
adc
fmul
inc
aas
pop
adc
mov
xchg
add
fnsave
pop
bndstx
xor
fpatan
and
xchg
and
out
jae
inc
cmp
jp
fbstp
jecxz
repz
mov
std
shlb
xor
push
lcall
test
add
clc
sbb
cmp
xor
mov
and
and
loope
sti
bound
push
inc
mov
dec
outsl
pop
cmpsb
lods
loopne
mov
xlat
add
pop
icebp
sub
jns
xor
or
or
adc
push
sahf
lods
xorb
js
xor
pop
incl
fldl
mov
fxch
push
imul
out
xchg
mov
jno
xchg
xor
adc
mov
lret
mov
mov
adc
or
push
sub
or
cmp
insl
add
int
ljmp
jecxz
adcl
cwtl
jb
pop
cltd
push
ret
dec
pop
jnp
mov
iret
sahf
sub
mov
mov
in
in
add
stos
in
sub
sub
mov
cmp
gs
mov
cmp
cmp
outsl
push
arpl
pop
cltd
outsb
lea
icebp
xchg
sub
inc
dec
pop
lock
jl
and
or
sti
divb
stos
adc
jmp
push
cmp
sub
out
cmpsl
mov
cmpsb
pop
sbb
mov
popa
jae
dec
mov
cltd
sub
cli
or
xchg
into
into
and
aas
push
or
fwait
adc
cld
out
adc
in
inc
mov
aas
loope
sub
mov
jge
pop
scas
imul
movsb
pop
mov
in
cld
aas
subb
and
mov
stos
clc
sti
stos
add
mov
jge
nop
sub
mov
mov
fbstp
arpl
inc
in
xor
lods
push
mov
notl
pushf
xor
sbb
push
std
pushf
jmp
xchg
ss
in
lea
mov
pusha
in
xchg
leave
fwait
sti
mov
mov
push
insl
sbb
sarl
add
in
push
push
fadd
sub
stos
sub
dec
je
jg
mov
int
leave
push
jmp
push
jbe
xor
push
pop
and
mov
mov
lods
fcompl
jecxz
fmull
lret
scas
loopne
or
out
jl
scas
das
mov
xor
lret
xlat
pop
push
shll
inc
push
pusha
pushf
jno
push
lret
pop
mov
sub
mov
xchg
movsb
sahf
aad
dec
rclb
bound
sub
ljmp
out
testb
mov
jne
ds
js
popa
fmuls
in
jecxz
lahf
push
testb
or
lahf
subl
lret
cmp
cmp
and
push
or
jp
cli
mov
rcll
sar
mov
fnsave
fcmovnbe
xchg
orl
cld
mov
cli
daa
in
std
ss
sub
lods
xchg
adc
lcall
insb
cmpsb
or
int
push
jecxz
and
popf
inc
cwtl
stc
mov
push
and
xchg
push
cmpsl
push
fldl
add
push
mov
pop
xor
cmp
dec
pushf
jg
std
mov
add
mov
in
sbb
dec
mov
int
jge
mov
jbe
sub
aas
cmp
out
xchg
xchg
push
xor
add
push
out
repz
xadd
mov
clc
jg
cmp
lret
and
aad
or
xchg
repz
sub
xchg
xchg
lret
push
dec
mov
push
iret
sub
pop
push
cs
or
pop
mov
mov
inc
pushf
inc
lret
xlat
mov
icebp
push
push
icebp
pushf
das
xor
imul
or
inc
clc
lods
test
xchg
ljmp
or
adc
aaa
jbe
leave
mov
xor
sahf
hlt
push
cli
dec
adc
test
mov
repz
and
ret
mov
dec
and
fnstsw
jle
mov
mov
movsl
inc
jno
jnp
push
mov
in
fistpll
mov
inc
adc
pop
fdivs
mov
push
int3
addr16
xor
jle
xor
call
lahf
orb
data16
sub
test
fwait
cmp
jmp
mov
rcrl
and
inc
fdivrl
fcoml
sub
into
lods
cwtl
jne
cs
mov
cltd
pop
loopne
mov
mov
adc
sbb
out
xchg
adcb
mov
mov
xor
xor
jmp
cli
pushf
out
sbb
mov
pop
xchg
ja
sbbb
push
fimuls
rolw
dec
pushf
aaa
stos
sbb
pop
ret
pop
insl
adc
dec
xchg
or
test
sahf
mov
ret
jns
test
xor
stc
in
mov
lret
lret
and
or
add
xchg
mov
movsl
xchg
lods
mov
fiadds
jmp
push
jmp
arpl
sub
push
inc
inc
add
js
test
pop
into
test
mov
pop
scas
mov
in
push
int3
xor
jmp
in
stos
out
cwtl
push
dec
aad
gs
push
inc
enter
mov
fiadds
stos
addr16
jbe
jg
orl
dec
inc
push
push
out
mov
bound
cmp
andb
ret
pop
mov
addr16
cmp
push
push
decl
negb
clc
in
lret
aas
sbb
push
inc
push
insl
jmp
out
pop
adc
imulb
xor
das
adc
stos
cwtl
das
fadd
or
or
jge
shll
mov
sahf
push
add
scas
in
aam
push
call
push
arpl
repnz
ljmp
shll
mov
icebp
xor
fucomi
addb
cmp
mov
out
and
add
xchg
xchg
lds
sbb
pop
loop
cmp
mov
shlb
mov
test
push
pop
aaa
pop
sahf
add
and
mov
sarb
jmp
dec
repz
rcrb
add
rolb
push
jp
mov
xor
js
adc
dec
mov
adc
icebp
or
icebp
movsl
jge
mov
cmp
stos
inc
dec
loopne
lret
cmp
push
dec
into
fmul
nop
lods
pop
push
push
lods
pop
xchg
inc
mulb
mov
pop
insl
mov
into
push
add
sub
pop
pop
xchg
jae
cmp
pop
push
out
sti
add
addr16
rcr
xchg
cld
ret
and
mov
pop
fwait
cmp
and
mov
popl
push
jno
jecxz
in
sub
inc
add
data16
fldenv
roll
ffreep
ss
int3
fcompl
mov
fimuls
xchg
sbb
pop
sbb
fsubp
mov
jbe
or
dec
or
xchg
adc
movsl
xchg
fisubs
inc
add
ds
and
dec
or
pop
mov
xchg
cli
inc
scas
loopne
cmp
insl
mov
repz
push
sub
cld
outsl
inc
inc
les
jbe
hlt
mov
gs
fcmove
mov
imul
or
dec
jbe
jg
stc
movsl
clc
rorl
aaa
negb
testl
xor
and
mov
xchg
fdivl
mov
std
jo
lds
fisubrs
arpl
rep
icebp
test
dec
push
mov
push
aam
scas
cltd
fcmovnb
xor
fistpll
mov
mov
lock
push
fistpll
test
sub
loope
ds
shrl
push
int
push
mov
inc
out
sub
inc
mov
dec
loopne
int3
jg
jns
addr16
pop
push
ss
xor
popa
add
rolb
sub
jnp
aam
add
dec
add
cmc
or
daa
les
dec
inc
sub
dec
cmpsb
data16
popa
leave
sub
cmp
dec
cmpsb
cmp
loopne
ljmp
ljmp
jp
loop
cmpsb
push
add
mov
mov
shrl
sbb
mov
testb
and
call
inc
lock
mov
in
incb
fsubrp
lods
and
xor
xor
sub
cmp
mov
push
inc
sub
sub
sbb
cmpsl
out
pop
mov
ret
andl
xor
jl
cmp
xchg
scas
outsl
insb
js
mov
mov
cmpsl
imul
out
xchg
out
xchg
dec
addb
mulb
cmp
xor
jno
pop
insl
scas
pop
mov
stos
jg
mov
mov
adc
sbb
icebp
add
and
mov
aaa
fs
lret
push
iret
add
jle
gs
test
xchg
mov
stos
fcmovnbe
inc
inc
xor
fcompl
scas
xchg
inc
pop
std
sbb
mov
shlb
rclb
das
nop
mov
mov
mov
out
sbb
mov
push
imul
xor
ja
filds
outsl
jp
ljmp
dec
pop
jmp
cmp
dec
aad
clc
scas
roll
jnp
jg
nop
pop
hlt
jl
in
adc
jnp
lock
ficoml
int
push
pop
dec
or
scas
mov
aas
mov
dec
test
scas
cld
ja
shrb
jae
and
lret
mov
add
xchg
in
outsb
sub
dec
mov
fsts
pop
hlt
jne
mov
inc
shrl
dec
stos
sbbb
clc
in
push
loopne
pusha
add
roll
out
fucomip
inc
jns
jle
xor
popf
mov
outsl
mov
xor
mov
imul
cwtl
addr16
xlat
ljmp
xchg
add
add
test
fcmovu
xchg
fs
leave
push
je
std
lods
in
call
pop
jo
pop
or
cli
and
movsb
test
lea
pop
fldenv
ja
jl
std
adc
das
div
movsb
inc
jne
add
cmp
lds
jae
arpl
xchg
sbb
dec
or
daa
cmpsl
call
cmpsb
lahf
mov
mov
icebp
sbb
inc
inc
jl
js
out
cwtl
stos
pop
ds
xor
in
test
outsl
inc
or
xchg
pop
mov
mov
imul
sub
stos
ficoml
in
inc
fdivs
sbb
je
cli
add
scas
out
xor
test
xor
mov
insb
addl
lret
add
inc
pop
push
mov
and
outsb
in
rcrl
dec
shll
lcall
dec
add
repnz
xchg
scas
mov
sbb
jecxz
cmp
or
dec
fnsave
in
cltd
mov
jl
scas
xchg
sub
cmp
jb
xor
xchg
and
push
mov
les
push
push
nop
out
js
stos
pop
adc
sarl
test
pop
sbb
inc
mov
pop
ret
inc
jb
cs
loopne
jbe
or
mov
fnstcw
out
lock
push
jb
push
xor
aaa
pop
and
mov
outsl
push
decl
ret
movl
pushl
je
pop
sbb
adc
movsb
inc
pop
and
dec
daa
xchg
cmp
iret
mov
push
cmp
push
push
cmp
rolb
out
inc
in
imul
dec
fnstenv
repz
pop
ficoml
sti
pushf
popf
and
test
pop
pop
push
popf
push
ds
mov
or
leave
js
mov
jl
push
mov
inc
mov
testb
and
mov
cmpsl
or
fs
aam
xchg
scas
sub
loopne
or
repz
pop
repz
popf
add
mov
cmp
sbb
xor
sub
mov
adc
ret
jle
mov
icebp
mov
repz
fnstenv
mov
sub
ror
push
adc
fnstcw
popa
dec
in
push
shlb
xor
dec
icebp
push
dec
push
in
pusha
dec
arpl
xor
xchg
mov
mov
aas
dec
mov
fst
out
ds
mov
cwtl
rcll
pop
movntq
inc
loop
je
loopne
arpl
lea
or
in
push
imul
and
pop
lahf
lock
push
mov
mov
mov
xor
and
xchg
sbb
sub
scas
cmp
sub
fildl
or
xor
imul
data16
xlat
outsl
pop
test
jge
cmpsb
movsb
xorl
pop
pop
inc
push
mov
mov
fcomps
adcl
sti
ret
lds
addl
add
inc
jp
mov
call
xchg
pusha
or
sub
and
enter
add
loop
ret
xchg
rorb
or
jmp
push
nop
sub
pop
jge
out
mov
pop
das
out
gs
mov
outsl
inc
mov
cmpsl
mov
add
imul
fs
fcom
jbe
inc
cld
orb
xchg
mov
jae
mov
jp
and
lods
push
adc
mov
shlb
or
dec
data16
inc
inc
sar
inc
adc
jl
lds
xchg
push
sbb
and
xor
mov
fidivrl
das
mov
xor
push
in
dec
push
pop
stc
aad
je
es
adc
jae
test
ja
repnz
push
sbb
jmp
sbb
cmp
xor
mov
daa
cmc
sub
push
push
mov
sbbl
xor
mov
cmpsb
jg
jne
ret
in
int3
fwait
scas
movsb
push
iret
mov
packuswb
sar
and
testb
sub
jmp
xor
mov
pop
mov
push
cs
loopne
sbbl
mov
jbe
xor
gs
in
dec
or
out
adc
jnp
jb,pn
test
push
pop
fstl
add
lret
out
push
scas
mov
jno
or
cld
insb
dec
insb
jecxz
sbb
push
in
mov
aas
jae
cltd
dec
xor
mov
mov
jbe
push
and
sub
and
dec
sbb
lret
inc
and
push
stos
js
fs
int3
sbb
inc
rol
cmp
inc
loop
jnp
clc
out
cmpsb
in
inc
fsubp
sarb
xlat
inc
loope
mov
xchg
dec
add
and
and
adc
sbb
adc
xchg
cmc
imul
daa
shll
fistpl
imul
dec
sarb
push
push
stos
insb
rcrb
pop
aaa
sub
arpl
sbb
push
pop
out
sub
out
enter
xor
pusha
outsb
cmpsl
mov
rol
jp
jns
movl
stc
xchg
fcomps
mov
test
inc
cli
adc
int3
dec
fs
add
in
fsub
movsb
mov
out
adc
mov
fnstcw
cltd
xor
xor
jmp
filds
dec
lock
sub
jno
add
clc
dec
and
shll
or
in
dec
pop
mov
cmp
xchg
sub
mov
ffreep
mov
pop
jne
jp
outsl
lods
xchg
mov
in
inc
popf
sarb
xchg
fadds
test
enter
pop
inc
inc
dec
sti
cmp
jle
push
rep
mov
movsb
jecxz
sbb
out
daa
inc
adc
sub
cmp
jp
pop
mov
shl
sbb
lods
pop
push
jmp
lret
int3
sahf
std
addb
inc
jns
mov
mov
lods
adc
in
addl
or
mov
push
mov
ja
icebp
or
sub
adcl
stc
ret
iret
add
popa
in
and
xchg
loopne
push
fdiv
add
test
gs
fs
sbb
call
fucomi
inc
out
enter
mov
filds
cmpsl
movsb
dec
aad
addb
fwait
xor
xchg
sub
dec
adc
pop
jmp
out
scas
push
dec
mov
cld
rorl
mov
shlb
jbe
push
mov
scas
cmp
xor
popa
or
jge
cld
out
add
addr16
sbbb
mov
inc
cwtl
push
push
xchg
mov
or
lret
mov
fistpll
rclb
mul
pop
mov
mov
push
mov
mov
jge
and
add
out
test
sbb
leave
mov
cwtl
cmp
in
sbb
imul
daa
lock
bound
rol
push
jbe
insl
cmp
sbb
lock
int3
xchg
cmc
xor
push
adc
and
pop
add
mov
movsb
mov
pop
adc
imul
add
test
repz
data16
ds
dec
dec
xchg
sub
icebp
cmp
jp
mov
pusha
pop
je
lods
inc
inc
and
jecxz
enter
mov
mul
dec
lock
cmpsb
fwait
dec
or
arpl
xlat
jmp
pop
push
es
dec
fdivrl
mov
mull
xor
fldenv
test
jo
push
mov
push
cwtl
imul
sbb
and
push
data16
in
pop
out
scas
ficompl
and
std
shl
xchg
adc
pop
out
xor
push
mov
mov
aaa
jbe
call
test
cld
outsl
jnp
cs
shl
sub
sub
ds
cmp
pop
syscall
repz
inc
insb
stc
add
add
sbb
mov
and
push
hlt
rcrb
inc
gs
hlt
popf
daa
jle
pop
lahf
sub
daa
jge
cwtl
jae
cwtl
jecxz
stos
sbb
jb
insb
dec
fbstp
xchg
pusha
inc
fadds
adc
cmp
stos
aam
adc
xchg
fdivl
shlb
add
sbb
mov
pop
in
inc
fsubr
push
fwait
aas
dec
rcll
jae
cs
xchg
pop
std
shll
mov
insb
mov
fnstcw
jmp
fsubr
add
icebp
push
xchg
imul
movsb
jmp
push
das
xchg
cs
outsb
push
jne
pushw
das
ret
rcl
jl
mov
xor
jno
mov
mov
mov
or
xor
lahf
ljmp
andb
pop
int3
cmp
lods
jb
push
je
push
pop
mov
daa
jle
shlb
enter
xor
test
scas
mov
dec
ret
int
fists
inc
std
adc
mov
dec
push
out
aam
test
lcall
add
or
andb
jne
jno
push
xchg
cwtl
sub
xchg
push
test
repnz
pop
cmc
inc
repz
call
lret
jmp
or
and
dec
add
mov
mov
cmp
lds
inc
or
aas
mov
sub
pop
mov
add
jo
mov
mov
pop
fwait
xor
inc
mov
mov
rolb
sarb
dec
push
je
mov
sub
pop
pop
aaa
pop
popa
push
imul
sub
or
xor
xor
int3
frstor
inc
xchg
decb
dec
outsl
push
cmp
cmpsb
add
push
fcoml
dec
mov
ja
jb
daa
inc
add
and
lea
mov
push
and
mov
sbb
mov
movsl
cmp
pop
mov
lea
add
cs
in
push
lods
rorb
lcall
lcall
sbb
mov
fsubl
inc
add
mov
movsl
pusha
xchg
push
sarl
and
lods
in
cmp
rorb
and
adc
xor
mov
add
sbb
xor
and
iret
pop
sarb
push
jnp
aas
mov
sbb
test
mov
mov
mov
shll
mov
add
dec
fmull
popf
xor
jp
insb
lods
xor
jae
dec
loop
ss
jae
cmp
popa
jo
or
fdivr
adc
mov
add
xor
aad
lods
push
push
call
test
jne
in
sbb
popa
imul
enter
jae
mov
push
xchg
sub
loope
push
or
lea
jo
and
sbb
stc
inc
cmpsb
push
xor
out
sbb
aas
mov
mov
adc
mov
sub
je
inc
loop
aas
push
or
xor
push
lds
adc
stos
mov
adc
orb
shr
ds
lahf
les
mov
sub
xlat
fwait
and
adc
scas
fwait
ds
aas
xchg
xchg
or
and
in
out
inc
xlat
sub
iret
cwtl
mov
mov
out
dec
and
leave
sbb
pop
sub
rcrl
add
inc
cmp
jg
mov
add
or
lods
pop
jo
push
mov
mov
xchg
cmp
inc
loop
int
in
and
bound
aad
loopne
mov
cli
inc
out
and
mov
inc
add
fidivl
push
movsl
sti
or
ficoms
lret
fidivs
add
int
xchg
pop
sbb
hlt
adc
mov
jae
das
inc
mov
xorl
daa
sub
iret
cltd
into
cwtl
cs
ds
insl
dec
xor
pop
aas
inc
add
adc
mov
fs
arpl
push
sahf
xchg
sahf
adc
xchg
sub
and
xorb
movsb
mov
inc
test
call
push
xchg
hlt
sarb
les
ja
pop
mov
mov
xor
ret
fcmovb
lds
mov
adc
xchg
mov
xor
das
out
ret
mov
data16
rorb
cmp
sbb
roll
mov
xchg
dec
and
lea
sbb
sahf
sub
and
pop
push
inc
xor
cmp
jecxz
fistpl
xor
in
shlb
xor
dec
test
xchg
inc
add
fistpl
xor
shr
ret
out
adcl
std
nop
sahf
sub
aad
in
lods
xor
pop
jne
jge
popa
mov
ret
sahf
jo
cmpsl
in
jmp
jns
add
xchg
push
mov
jmp
or
movsb
scas
leave
jg
jno
pop
scas
jnp
or
xor
xlat
pushf
or
jns
sbb
jge
push
jl
dec
gs
bound
leave
fistl
push
add
fiadds
adc
mov
das
inc
mov
fildl
and
fldt
jnp
pop
xor
or
mov
push
fld
ret
add
mov
in
div
cwtl
mov
jecxz
bound
pop
and
shlb
inc
out
jne
in
dec
jbe
dec
testb
cmp
rclb
add
fmull
pop
jb
xchg
in
setg
sbb
in
xor
xor
inc
xor
mov
ss
lret
fists
fnsave
int3
mov
sbb
pop
inc
imul
movsl
dec
jle
icebp
jbe
outsl
and
inc
mov
jl
inc
mov
xor
inc
aas
lods
xchg
xor
push
test
push
and
lret
or
js
sti
shll
loope
sti
movb
out
push
jne
jne
inc
fwait
aam
jg
adc
ljmp
xor
shrb
xchg
mov
rcr
xor
sbbb
leave
xor
test
test
inc
xchg
stos
jmp
push
outsl
leave
mov
sub
clc
iret
sub
sbb
xor
sbb
mov
mov
or
pop
inc
add
and
scas
inc
mov
mov
mov
pop
lret
loope
dec
adc
in
mov
icebp
and
xor
mov
adc
dec
shll
inc
xchg
data16
fdivs
int3
arpl
xchg
mov
or
test
test
out
outsb
fmuls
in
xor
jb
imul
inc
add
xor
lods
push
or
cmp
cmp
test
push
mov
and
xchg
adc
rcrl
lcall
testl
std
add
aad
inc
inc
sub
ja
xchg
cmp
xchg
xchg
mov
jne
sub
jge
sahf
scas
adc
adc
fwait
scas
in
or
add
or
cmpsl
xchg
loope
lcall
movsl
js
mov
cmpsl
push
sbb
leave
add
lret
pop
ja
sub
nop
cwtl
loop
into
aad
test
cld
sbb
lret
es
sbb
jp
push
cmp
movsb
addr16
pop
lea
xchg
lret
cmp
pop
sarb
gs
mov
add
add
dec
mov
mov
insl
mov
pop
add
dec
mov
gs
int
mov
adc
inc
dec
inc
pop
js
pop
rcrl
pop
adc
jmp
mov
sbb
or
ds
imul
imul
pop
aad
mov
out
lret
adc
mov
pusha
clc
int
or
dec
pop
sti
test
pop
inc
inc
xor
sbb
mov
into
aas
loop
stc
mov
shr
int
movsl
or
pop
sbb
aaa
mov
mov
loope
or
ja
xchg
lret
pushf
aaa
sub
mov
add
lock
int
mov
or
add
xor
xor
dec
shr
incl
jno
dec
fists
ja
jg
cmp
insb
push
loop
inc
or
lcall
mov
dec
in
jecxz
push
out
pop
aaa
lret
sbbl
iret
gs
inc
fdivl
mov
fwait
xor
sbb
pop
dec
cmp
repz
cwtl
test
adc
xor
xchg
test
negl
jns
leave
stos
test
lds
jecxz
fidivrl
pop
mov
sbb
pop
insb
ja
pushf
outsl
clc
xchg
mov
and
shrb
int
and
lds
xor
mov
shr
insl
daa
mov
les
hlt
aaa
dec
stos
mov
jns
dec
cmc
xchg
pop
pop
adc
sbbb
mov
xor
add
mov
aas
add
pop
ret
pop
cmp
xchg
fwait
shl
test
jae
pop
and
jns
add
fmul
fisttps
jl
clc
lods
sub
inc
pop
cld
push
mov
outsb
pusha
test
xor
sbb
test
cmp
mov
sbb
into
jecxz
insl
das
ds
enter
inc
sub
scas
fsts
mov
jg
lret
div
jo
add
jg
jns
icebp
dec
cmp
lahf
push
sub
sbbl
fidivs
and
outsl
bound
push
std
shlb
leave
push
hlt
pop
pop
scas
xchg
loope
test
xchg
add
ss
jne
ljmp
enter
cmp
popa
add
jae
mov
or
xchg
mov
addb
nop
cmp
add
xchg
dec
lods
add
xchg
add
addl
mov
movsb
adc
jg
mov
lcall
inc
jno
mov
inc
mov
sub
pop
imul
mov
inc
scas
fsubr
adcl
fsubrs
pop
in
pusha
push
fcmovnb
pop
or
adc
movsl
lcall
loope
sti
push
insb
insl
repz
mov
das
mov
cmp
int3
iret
xor
rorb
jb
jecxz
sub
xchg
andl
mov
fldl
push
cmp
mov
andb
sbb
aaa
xchg
fnsave
data16
jae
test
nop
lret
mov
cmp
push
sahf
jle
pop
je
cmpsl
jle
push
rol
je
push
fwait
xchg
lods
ret
rorb
mov
mov
mov
mov
push
jecxz
ss
sbb
jecxz
mov
pop
cltd
std
ds
sub
inc
outsl
cli
mov
mov
js
cwtl
sbbb
dec
mov
cmpsl
xchg
sbb
jmp
adc
push
or
mov
andb
pop
and
adc
cmc
push
ljmp
data16
mov
inc
out
adcl
jp
pop
lods
push
xor
adcl
adc
cld
or
jmp
sbb
inc
pop
and
xchg
jmp
pop
push
sahf
mov
dec
mov
int3
cmpps
hlt
stc
lods
popa
imul
xor
insb
push
xchg
pop
cmp
push
icebp
movsl
jg
in
inc
aas
xorb
jne
lret
mov
jp
imul
sbb
inc
cli
xchg
or
add
cmpsb
add
into
enter
in
sub
lcall
xor
xchg
jp
or
sub
stc
sbb
pop
mov
sub
jns
mov
or
push
mov
leave
fiadds
xchg
pop
je
pop
mov
loopne
lret
mov
inc
enter
mov
sub
sahf
or
add
loopne
push
jns
adc
imul
insl
push
ss
mov
cmpsl
sub
faddl
addr16
lods
out
fmull
sub
sbb
sub
popf
xor
xchg
in
mov
jp
inc
push
pop
sbb
fidivrl
dec
mov
daa
jg
pop
pop
cmp
push
lea
sbb
and
gs
das
cmp
jge
cmpsl
out
xor
dec
arpl
push
scas
out
or
xor
jbe
mov
push
bound
pop
sbb
sbb
repz
int
icebp
sahf
xchg
ficoml
or
stc
add
hlt
sbbl
xchg
pop
inc
jle
and
mov
push
test
push
addr16
sbb
and
aaa
mov
pop
daa
fiadds
clc
push
sbbl
xor
cltd
xchg
and
orl
jl
js
xor
notb
dec
ret
rcll
in
fcmovnbe
pushf
lods
icebp
lds
ss
mov
outsl
cmp
jb
adc
sbb
cli
or
mov
fs
mov
mov
dec
lret
lret
shl
sub
adc
mov
inc
inc
aas
int
xchg
test
cmpsb
and
popf
or
cwtl
pop
xchg
inc
pop
mov
push
jne
out
or
fsubrs
jo
mov
leave
movsb
mov
mov
lret
andl
xchg
xorb
xor
push
out
push
jnp
ljmp
jno
mov
mov
fs
sbb
les
in
jns
jbe
loop
jbe
lcall
and
jb
jge
inc
scas
inc
arpl
xlat
divb
scas
shl
cmp
mov
sbbb
xor
adc
xor
pop
add
adc
jge
inc
pop
fwait
and
nop
pop
inc
xchg
and
aas
fmuls
jne
cmp
pushf
cmpsb
lds
pop
test
cli
cltd
std
mov
mov
int3
test
jns
shrb
mov
into
lds
in
mov
and
addr16
jge
cmpsb
je
inc
xchg
jp
pop
lods
hlt
fiaddl
aaa
out
push
cmc
jl
stc
sub
orl
pop
mov
enter
inc
addr16
pop
out
mov
popf
nop
push
xchg
or
ss
jp
fstp
mov
inc
inc
mov
je
out
pop
aad
xlat
mov
jecxz
push
push
cli
sbb
js
xchg
push
fldt
stc
jmp
inc
sbb
ljmp
mov
scas
xchg
neg
sub
mov
sub
jne
and
dec
fnstenv
adc
and
cmp
imul
adc
scas
lret
xor
sbb
ds
cmpsb
fbstp
mov
jmp
mov
xchg
push
fidivrl
lods
ja
rcr
pop
and
lock
push
in
xchg
test
stc
rorl
imul
mov
lret
and
insb
xor
in
stc
pop
fistpl
test
push
out
fiaddl
inc
test
enter
add
adc
mov
inc
push
xor
add
sbb
mov
xchg
jo
sarl
stc
js
fnstenv
cwtl
or
stos
flds
cli
push
hlt
sub
rol
pushf
loope
jae
cmp
repnz
jp
popf
stc
jno
aam
jge
loope
push
mov
mov
add
cmp
adc
outsb
add
adc
popf
popf
mov
xchg
in
sub
sbb
jno
sbb
mov
aad
lock
sbb
ljmp
dec
sub
cmp
imul
xchg
inc
push
mov
lea
xchg
inc
addr16
inc
sub
mov
enter
aaa
cld
aam
cli
outsl
sti
int
mov
cmp
jns
cmp
rolb
inc
ss
jp
loopne
stos
dec
lahf
ss
loopne
lock
data16
les
in
aam
lea
ja
xchg
mov
and
dec
sbb
sbb
push
repnz
aad
cmp
xchg
sbb
cld
pushf
mov
mov
dec
stos
shl
jecxz
and
cmp
in
dec
adc
lods
pop
jnp
arpl
jnp
and
jno
shlb
jo
rclb
xor
push
sub
icebp
sub
xchg
sti
outsl
push
in
cmp
dec
mov
pop
jae
stos
push
mov
out
pop
sub
or
mov
cmp
iret
mov
jne
fidivs
je
lret
int
or
push
hlt
aaa
inc
bound
gs
xchg
push
cwtl
inc
aas
imul
bound
jo
mov
pop
xchg
inc
fcomp
push
dec
popa
aam
pop
imul
sub
loope
bound
lahf
shll
clc
and
mov
dec
and
mov
dec
mov
xchg
mov
push
pop
out
dec
push
jmp
mov
pushf
iret
mov
mov
fnstcw
lret
cmpsl
jo
dec
in
cltd
cmp
jno
sbb
in
push
out
pop
dec
xchg
std
sub
push
orb
pop
lcall
jne
leave
jge
and
add
ficomps
pushf
roll
pop
add
cwtl
stos
pop
pop
in
adcl
or
imul
jle
dec
and
cmp
xchg
sbb
inc
mov
out
pop
sbb
scas
jmp
pop
ljmp
cmc
push
inc
inc
testl
pop
daa
push
scas
fldt
pusha
dec
push
lods
jno
shl
push
push
sbb
inc
xor
stc
outsb
loopne
xchg
pop
daa
mov
pusha
rolb
repnz
push
cltd
fstpl
std
xchg
incl
mov
or
out
cli
jecxz
xchg
icebp
push
idivb
push
mov
jae
xchg
or
xor
and
loope
cld
inc
in
sub
push
inc
faddl
and
inc
int
outsb
sbb
shrb
mov
or
xchg
lds
pop
lods
cltd
sub
push
in
mov
jne
inc
stos
dec
and
sbb
cmpsb
popa
fdivrs
jge
mov
mov
xchg
out
aam
mov
or
inc
mov
cmp
clc
xchg
cli
fdivl
and
insl
iret
dec
inc
adc
xchg
or
hlt
aad
mov
daa
call
dec
fcompl
sub
ret
push
mov
cmp
shll
rol
loop
out
sti
inc
sarb
push
popa
loopne
sub
sbb
lods
xor
sbb
in
sar
pop
add
and
mov
inc
addl
sbb
je
add
test
in
dec
inc
clc
outsb
add
pop
stos
je
pop
repz
bound
jns
je
bound
cmp
mov
repnz
je
pop
xor
mov
lds
lock
clc
or
jne
insb
add
stc
stc
cwtl
inc
cmp
mov
push
xlat
or
add
iret
xchg
aas
addr16
push
mov
xor
dec
arpl
push
pop
mov
or
cmc
lcall
sub
xchg
es
dec
push
outsb
mov
xchg
out
cmc
push
mov
decl
xchg
jecxz
addr16
inc
mov
lret
stos
into
sti
sub
cmpsl
hlt
push
lock
loopne
jl
outsl
ret
sub
dec
add
clc
into
gs
jbe
sub
mov
pushf
xor
mov
mov
dec
aad
push
dec
xor
fwait
jmp
es
arpl
pop
inc
xor
mov
mov
cld
xchg
das
cmp
adc
jg
into
pop
fsubl
push
inc
inc
fdivs
jne
arpl
xchg
pop
les
sbb
and
fcompl
loopne
lds
push
mov
push
int
cwtl
jbe
mov
mov
ljmp
sub
inc
mov
fmulp
inc
pop
lds
scas
hlt
cmpsb
outsb
add
push
lret
xchg
scas
cld
aas
lds
adc
insl
lret
dec
dec
ja
mov
stos
lds
pop
xchg
mov
mov
cs
je
out
int
adc
mov
pop
mov
imul
sub
or
jmp
sub
out
push
inc
pop
lea
or
pop
ss
gs
xchg
js
jge
icebp
stc
es
iret
xor
nop
inc
xchg
pop
jbe
stos
add
mov
sub
mov
jmp
or
mov
leave
xchg
sub
sub
dec
sbb
and
mov
adc
test
xor
std
packuswb
xor
jb
push
in
pusha
out
cmc
inc
jae
inc
loopne
xchg
mov
incb
ljmp
sbb
add
ss
jmp
jmp
or
dec
scas
cld
cmc
adc
xchg
jg
pop
mov
shll
push
leave
popa
ret
mov
jecxz
bound
xor
cmc
enter
cltd
lock
inc
cli
cs
jns
mov
sub
pop
mov
jbe
adcl
pop
cmc
inc
xlat
gs
hlt
or
ret
shll
dec
pop
mov
imul
inc
out
jecxz
push
adc
pop
and
repnz
dec
insl
mov
push
mov
jne
es
hlt
mov
push
sub
adc
lods
aas
mov
jp
fsubr
flds
icebp
sbb
mov
jne
int3
lods
add
xlat
xchg
mov
call
mov
jp
shl
aad
cmp
cltd
scas
adc
push
test
int
mov
ds
dec
or
sbb
into
movsb
test
pop
loope
das
pop
add
jbe
shrl
insb
sarl
sbbb
stos
aad
repz
mov
sub
stc
adc
cmc
aad
cltd
push
pop
sub
inc
inc
fs
fdivl
push
mov
lea
mov
or
lcall
sub
mov
inc
xor
mov
in
getsec
sub
pushf
mov
out
pusha
ret
push
pop
aad
lahf
push
add
xor
and
adc
mov
pop
add
fiadds
sub
or
cs
pop
shrl
xchg
and
adc
test
int
shll
jno
daa
mov
les
push
push
pop
jo
sub
mov
jo
lahf
sub
dec
sbb
ror
pop
sbb
jns
aas
xor
jno
js
xchg
popf
je
insb
into
out
dec
fistps
out
cmc
push
pop
jmp
sub
mov
dec
or
push
orb
and
xlat
stos
lcall
mov
int3
jns
jb
push
dec
cli
inc
xchg
xchg
pop
or
repnz
push
call
fnstenv
sub
popf
js
inc
jmp
sahf
jno
fdiv
pop
push
mov
aas
add
add
inc
ret
outsl
mov
and
std
insb
mov
test
mov
dec
dec
push
jg
mov
jp
mov
mov
loopne
jle
xchg
dec
mov
jecxz
inc
ret
pop
sbb
insb
fdivrs
loop
out
ja
dec
cld
stos
pop
inc
pop
jg
incb
mov
fwait
xor
push
shrl
inc
out
loop
outsl
shl
in
rol
lock
add
lock
add
dec
adc
stos
lods
jl
fs
jae
mov
sub
cwtl
inc
mov
sub
test
pop
and
ret
dec
jb
push
sbb
icebp
mov
in
xchg
repz
loop
pop
fsubrs
ja
jle
repz
test
lahf
mov
clc
gs
mov
jbe
hlt
mov
mov
in
aad
fadds
stos
and
test
pop
push
sub
mov
xlat
popf
stos
das
add
outsb
jo
mov
aam
mov
mov
dec
xor
es
cmp
fwait
cli
adc
mov
sbb
mov
jb
add
xor
in
jmp
pop
push
mov
xchg
xchg
mov
sahf
xor
iret
ss
aas
rcll
or
mov
sahf
sub
iret
lds
stos
loopne
dec
loope
or
jp
push
les
pop
dec
test
push
pop
out
test
push
jmp
push
lahf
push
pop
imul
out
dec
out
jns
pop
lea
jle
sub
mov
pop
fwait
and
pop
mov
shlb
xchg
adc
or
mov
test
mov
lahf
xor
push
inc
rcl
jo
mov
cwtl
aad
in
das
lea
cwtl
jns
scas
call
fistps
mov
mov
dec
ret
sbb
pop
mov
mov
mov
push
leave
mov
lods
push
sbb
idivb
dec
cmp
push
test
rorl
jne
xchg
lock
icebp
and
add
leave
add
push
ficomps
je
out
psubusw
sti
jmp
lock
testl
lods
add
clc
rep
inc
mov
popf
subb
leave
mov
ret
fnstsw
icebp
adc
jae
adc
idiv
test
data16
aas
xchg
xchg
push
mov
ljmp
mov
sarl
movb
and
lcall
addr16
aaa
shrl
dec
fidivl
in
out
or
xchg
testb
ret
lahf
adc
aaa
lds
jno
lds
data16
pop
adc
jge
xchg
add
dec
dec
jnp
test
loop
adc
addl
xor
test
loop
push
mov
movsb
jne
sub
out
es
pop
fdivrs
fisubrl
xchg
adc
shll
inc
mov
shl
jle
popf
sub
xchg
movsb
mov
fisubl
xor
push
xchg
and
repnz
add
pop
sub
cmp
mov
push
xor
leave
fcmovu
in
in
push
inc
arpl
xor
xchg
inc
jnp
cmp
movsl
dec
dec
arpl
pop
sub
dec
push
cs
dec
testb
cli
xchg
std
cwtl
add
add
cmpsb
jg
insb
out
or
xor
es
jno
jl
add
fdivrp
push
dec
arpl
and
or
sub
mov
insb
cmp
aas
in
inc
movsl
xor
and
add
es
es
hlt
xchg
daa
mov
ror
xor
or
lea
jbe
mov
std
nop
leave
outsb
lock
ljmp
andnps
sbb
xlat
insl
out
idivb
call
int
int
das
sti
bound
xlat
mov
bound
insl
sarb
inc
fsubl
shl
jne
and
push
fwait
aad
int3
push
sub
dec
cmp
xchg
push
sbb
mov
pop
xor
adc
addr16
les
fistl
js
and
or
xchg
jl
jge
mov
add
mov
in
in
inc
stc
ljmp
iret
ss
dec
cmc
push
jae
lea
in
aam
ficompl
rcrl
cld
jecxz
ljmp
mov
mov
mov
ds
mov
mov
clc
mov
fcoms
push
fs
movsb
data16
dec
imul
fldt
jp
inc
jo
imul
jae
pushf
movsb
pop
jle
add
and
sti
jp
push
out
movsl
pusha
scas
flds
cmp
xlat
sub
mov
fistpl
sti
push
fistl
stc
pop
xchg
cld
data16
les
aam
shl
cmp
insl
or
cmp
imull
fidivrs
add
mov
cmp
popa
dec
adc
jne
sub
xchg
pop
adc
dec
push
fisubrl
in
cld
push
mov
les
xchg
fbld
test
out
xchg
je
fldt
cmp
repnz
xchg
psubb
repnz
fldl
push
jp
jns
xor
jmp
subl
adc
mov
jle
bnd
and
fdiv
push
or
mov
cld
cltd
mov
adc
sub
dec
gs
into
cmp
lret
in
dec
ror
sub
mov
divb
or
data16
mov
popf
xchg
dec
or
jg
cmpsb
aaa
xor
xchg
add
xchg
push
jns
enter
gs
pop
cs
out
cwtl
test
lret
stc
stc
and
pop
adc
inc
fcoml
bound
ret
pop
mov
push
and
pusha
popf
in
and
andb
cmpsl
lret
mov
and
lds
mov
out
cmp
add
xorl
movsb
cmp
inc
xchg
inc
cwtl
iret
cmp
jmp
inc
push
ret
sahf
jge
fldenv
jne
cs
out
les
out
or
xor
in
adc
cmpsl
inc
push
adc
xchg
xor
cs
mov
jecxz
stc
push
adc
mov
mov
call
into
decl
xor
cmpsb
cmp
adc
cmp
dec
or
fwait
cmp
cmp
imul
repz
aas
loop
jp
addb
jbe
out
lret
hlt
ds
stos
stos
push
push
call
push
outsl
loop
mov
mov
sarl
in
cli
push
fwait
lea
cmp
cli
xchg
and
xchg
jmp
dec
stos
test
lcall
into
in
inc
repnz
shufps
dec
add
daa
sbb
fnstcw
cmpsb
and
add
sbb
sar
sahf
pop
or
pop
mov
or
js
dec
lods
xor
bound
mov
mov
ret
scas
add
in
pop
push
pop
jg
je
aas
lcall
insl
and
cmp
pop
mov
pop
leave
int
pop
push
cmc
jl
pop
ret
jge
or
push
xchg
mov
out
mov
cmp
lods
out
rcrl
in
mov
cmp
aam
xchg
add
lock
icebp
or
ret
repz
and
cli
xchg
les
daa
jge
push
or
repz
xor
loop,pn
sub
pop
dec
sarl
faddl
enter
ret
sbb
or
icebp
xchg
loopne
cmp
pop
dec
mov
mov
rcrb
xchg
notb
ljmp
ljmp
jle
mov
mov
popf
adc
orl
popf
xchg
shlb
inc
mov
ficomps
pop
jae
mov
xchg
daa
in
popl
pushf
ljmp
and
int3
fidivrs
mov
dec
je
pop
enter
cmp
adc
push
popf
es
sahf
daa
jae
daa
push
and
lret
and
dec
pop
subb
js
mov
subl
dec
orb
bound
adc
ljmp
mov
push
xor
inc
pop
imul
ds
por
push
jo
inc
jae
in
mov
fidivs
adc
addr16
inc
xchg
test
cmp
cmc
xchg
pop
adc
xchg
jl
fistps
add
sub
and
enter
jl
sbbb
aad
xchg
mov
sbb
mov
out
xor
mov
mov
mov
test
mov
pop
daa
lea
cli
mov
insb
lahf
dec
loopne
add
adc
ret
out
inc
cmp
xchg
mov
imull
jne
sub
pop
xlat
cmp
or
shrb
into
xor
cmpsb
or
mov
pop
test
pop
aaa
add
arpl
sbb
movsb
andl
mov
lahf
inc
mov
cmpsl
fcoml
stos
or
xchg
sbb
dec
aas
mov
push
fwait
pusha
repz
scas
mov
sbb
cwtl
mov
pop
test
pop
idiv
adcb
jno
jge
cmpxchg
je
xor
jne
inc
pop
mov
jp
rcl
xlat
in
mov
out
mov
sbb
adc
adc
cmp
pop
outsb
add
pushf
jns
push
fcoms
jae
sub
pushf
popf
jl
or
lcall
std
mov
sub
push
cmp
push
incl
push
cmc
orps
clc
jo
je
mov
popa
subb
pop
subl
xor
insl
dec
fwait
xor
sub
mov
pop
insl
cmp
aad
xor
daa
adc
adc
adc
test
and
jb
rorb
xchg
fistpl
aad
cmp
mov
addr16
js
or
fldcw
mov
and
pop
out
sahf
dec
sub
js
ds
jmp
outsb
mov
cmp
imul
or
inc
or
fildl
push
ret
arpl
in
movsb
jp
out
sbb
aaa
rcr
add
in
inc
xlat
mov
fisubrl
push
sti
sbb
aam
arpl
js
loopne
lcall
sbb
pop
popf
in
fstps
push
out
dec
pop
sub
outsb
add
pop
pop
scas
dec
popa
dec
or
jge
xchg
ljmp
jno
mov
bnd
adc
rol
sub
mov
sbb
xor
mov
cmpb
xchg
dec
cli
shlb
into
cwtl
in
push
insl
and
sbb
push
stos
in
cmp
in
xor
ss
xchg
les
ret
mov
sbb
push
jno
mov
lret
lret
enter
ret
popa
movsb
or
scas
add
cmc
sub
inc
mov
fmull
jle
mov
adc
outsl
lods
mov
rcl
push
clc
cmp
lods
data16
loope
les
mov
sbb
int
inc
scas
xchg
xlat
mov
repz
stos
test
fdivrl
add
jl
pop
mov
shll
adc
hlt
popa
loope
fstpl
fildll
sbb
mov
and
xchg
inc
les
js
fisubrs
loop
adc
lahf
jae
jnp
aaa
pop
ret
mov
loope
adc
push
cltd
pop
in
pop
jnp
movsb
shlb
sahf
or
push
sbb
mov
andb
adc
in
je
test
xor
mov
xchg
mov
mov
pop
add
adc
imul
ret
lret
add
mov
pop
mov
inc
test
aad
sbb
test
sub
mov
adc
sahf
out
mov
jb
jge
shrb
push
lock
sti
jbe
push
cltd
xor
and
jbe
shll
push
add
das
jmp
test
shl
loope
int3
scas
sbb
cmpl
int
test
jno
jne
lahf
inc
inc
stos
xor
and
hlt
push
cmp
pop
stos
adc
enter
mov
xor
imul
push
adc
inc
mov
imul
idiv
cs
lock
sbb
aas
jae
jnp
and
popf
cwtl
jb
in
repnz
mov
call
xchg
stc
loope
pusha
sbb
inc
out
fdivs
mov
push
cmp
mov
adc
and
insb
imul
out
add
dec
mov
mov
les
test
dec
decl
push
stos
xchg
or
adc
xor
in
push
daa
inc
rorl
push
mov
add
nop
mov
pop
mov
inc
nop
jle
pusha
nop
loop
mov
push
xchg
pop
orl
or
push
pop
inc
pop
loope
outsl
push
pop
out
xor
cmp
dec
jbe
adc
lcall
mov
lret
stc
jb
pusha
iret
ror
add
mov
push
test
movsb
pop
sbb
insb
xchg
insl
loopne
or
adc
adc
cltd
jne
xchg
push
sahf
imul
mov
dec
mov
pop
cmp
gs
aam
pop
mov
dec
in
jns
aas
cld
mov
jle
jg
xor
push
adc
push
mov
jle
movsb
out
inc
dec
pop
xchg
insb
andb
push
into
pop
bound
jmp
shl
cli
sub
sbb
das
lds
stos
lcall
call
leave
mov
adcl
or
xchg
daa
jb
mov
inc
loopne
out
cmpsl
push
add
push
out
in
movsb
test
mov
push
in
jge
sti
jns
lea
jb
xor
gs
inc
in
insl
or
sbb
mov
ljmp
out
dec
out
dec
jle
in
or
pop
mov
cmp
jnp
cmp
cld
outsl
loop
sbb
xchg
or
sbb
subl
dec
mov
cld
pusha
mov
pop
imul
push
js
js
mov
aam
imul
push
sbb
lahf
hlt
into
and
add
sub
mov
pop
es
aad
std
xchg
xor
add
sahf
jnp
js
pop
shll
mov
outsb
loope
cli
adcl
aas
aam
mov
or
addr16
xor
jp
xchg
call
call
xacquire
lcall
cmc
cmpsl
out
xchg
push
cmp
divl
cmc
sbb
or
push
mov
mov
mov
es
pop
jmp
xchg
lods
scas
in
jnp
pop
call
and
mov
cmp
sbb
mov
mov
push
ret
outsl
aaa
scas
roll
xor
mov
lds
aad
ss
lock
movsl
and
lds
lret
sub
std
adcl
mov
dec
adc
add
and
add
jmp
push
popf
enter
pop
mov
in
and
ja
xor
mov
xor
xchg
mov
or
sub
rclb
inc
sub
repnz
jge
cmc
pop
call
or
sub
pop
mov
sbb
stos
xchg
aas
sbb
scas
repnz
aam
dec
pop
imul
xchg
and
push
in
lock
out
sub
testb
enter
pop
jl
lea
inc
adc
lock
movsl
jb
lds
sub
push
sahf
scas
test
dec
loop
aad
enter
add
inc
fsubl
les
mov
and
fwait
push
int3
arpl
xchg
adcb
adc
jns
pop
sub
in
ds
jl
out
pop
pop
add
jge
ljmp
or
mov
push
sub
or
cmc
loopne
and
adc
sub
jmp
mov
add
test
inc
pushf
add
mov
loopne
test
call
stos
mov
dec
int3
mov
mov
and
add
lods
pop
lock
ss
mov
mov
inc
dec
pop
mov
ret
jb
ret
sbb
jp
jno
mov
jmp
gs
aaa
cmpsl
ret
push
dec
cmp
js
sub
push
mov
inc
push
xchg
mov
test
or
mov
mov
decl
enter
lods
inc
ret
push
shll
mov
add
out
xchg
jb
leave
negl
sbb
mov
sti
out
push
pop
fimull
xchg
push
add
mov
bound
add
repz
and
xlat
push
mov
sub
sbb
inc
test
jle
pop
mov
outsl
mov
loopne
mov
out
adc
scas
xchg
add
mov
cwtl
pop
rcll
ds
xchg
and
das
jb
and
mov
cmp
xor
fwait
cmpsb
mov
jns
xchg
out
idivb
out
xor
test
jg
push
sub
lds
inc
xlat
pop
sub
xor
movsl
lds
lock
outsl
cmp
xchg
js
loope
jp
hlt
neg
lods
xlat
in
push
mov
add
nop
adc
push
mov
jmp
mov
sbb
test
fidivs
dec
mov
mov
push
sub
cli
pop
in
lods
popa
clc
push
dec
add
insb
incl
xor
push
fmull
cmpsl
inc
sub
js
fbstp
in
mov
ret
xor
dec
test
out
dec
pop
and
xor
test
iret
in
fimuls
mov
scas
in
shr
xchg
repnz
lds
mov
adc
in
dec
lods
push
test
sub
jnp
bound
je
mov
lret
repz
adc
hlt
xchg
shrl
mov
bound
lods
pop
in
and
xchg
mov
loop
add
xor
jns
scas
adc
lods
cmp
jl
test
leave
cmp
negl
pop
push
push
icebp
orl
int3
frndint
movsb
cmpl
inc
cmpsl
sub
add
jnp
enter
sahf
xor
outsb
shlb
pop
iret
daa
ret
jae
test
mov
mov
loope
push
adc
jle
sub
mov
xchg
sub
push
jnp
bound
push
push
pop
cs
les
rorb
jbe
and
cwtl
sbb
mov
movsl
es
add
push
stos
fisubrl
leave
mov
adc
pop
insl
call
sub
call
into
mov
inc
fs
adcl
pushf
dec
mov
jg
pop
xor
sub
fcomp
inc
in
mov
out
sti
fildl
xchg
outsb
jae
and
repz
fisttpll
scas
pop
mov
sbb
fmull
xchg
xor
xchg
push
sbb
xor
repz
js
andl
ss
out
jnp
lds
cmpl
sbb
jo
push
ljmp
jno
cli
mov
or
mov
stc
mov
xor
mov
sahf
cmc
or
in
shr
inc
jne
imul
lds
mov
fildll
jl
or
pop
cmp
mov
cs
xchg
movsb
push
adc
mov
sub
fists
dec
loopne
into
cmpsl
sar
imul
out
mov
pop
jnp
cmpsb
stos
ss
add
push
or
jl
sbb
cmpsl
nop
jae
in
std
dec
ficoms
stos
add
nop
push
cmp
sub
imulb
ret
pop
icebp
cmp
in
dec
pop
js
push
pop
ds
push
xchg
push
pushf
adc
push
jb
int
cmpsl
jle
jne
cmpsb
lahf
cs
sub
dec
pop
dec
and
insl
dec
sbb
fidivs
mov
std
adc
outsb
sbb
xchg
xchg
push
mov
dec
adc
push
dec
mov
push
pop
or
cmp
xor
rcll
fmull
das
arpl
or
fdivrs
jle
mov
or
push
inc
inc
rol
push
movsl
div
cmp
lea
pop
push
sbb
add
xchg
scas
test
sub
and
sub
inc
pop
or
lods
int
push
aaa
adcl
test
dec
mov
pop
leave
ss
les
or
push
in
movb
cmp
xor
movsb
popa
xchg
fwait
popf
int
fwait
cmpsl
and
or
ds
jge
loop
mov
jge
sub
xchg
mov
leave
push
mov
push
jmp
addps
int3
jb
add
inc
xchg
in
dec
xor
dec
ljmp
enter
stc
sub
pop
sbb
and
pop
mov
jbe
push
mov
and
cltd
aas
xchg
mov
lds
sub
push
push
inc
lcall
push
fs
sub
cmpsl
js
int
daa
mov
xchg
pusha
or
arpl
push
dec
sbb
fidivl
loop
jno
ret
mov
mov
cmpsb
sub
lret
std
insl
sbb
out
cmpsb
sti
sub
lods
mov
jp
cs
xlat
xchg
adc
call
pop
popf
movsb
cld
jl
mov
push
xchg
pusha
xor
mov
sub
out
xchg
data16
add
pop
arpl
cmp
repz
cmp
or
sbb
daa
or
xchg
xchg
ds
lods
inc
add
aaa
shlb
outsb
push
les
jo
mov
mov
push
mov
loop
add
mov
and
jbe
jns
call
mov
test
rolb
inc
pop
ljmp
pop
pmaddwd
arpl
push
dec
sub
and
jb
jmp
fldcw
pop
imul
stos
loope
sahf
into
jle
push
out
and
xor
stos
out
pusha
sbb
xorb
dec
add
movsb
js
jnp
sbb
inc
sub
push
std
or
cmc
aaa
add
mov
jmp
push
movsb
cmpsl
out
test
sarl
push
xchg
mov
shlb
insb
gs
insb
ret
dec
sbb
out
inc
mov
add
add
iret
push
loopne
call
jge
mov
xor
loope
movsb
fidivrs
imul
ret
fildll
scas
sbb
mov
sbb
sahf
cmp
dec
push
out
std
and
sarl
std
mov
test
lahf
sbb
xchg
repz
daa
jo
pop
icebp
sbb
movsb
push
test
dec
and
in
xchg
dec
sbb
adc
rorl
cmp
addr16
pop
xor
mov
mov
mov
faddl
xchg
fidivl
loopne
mov
cmp
inc
inc
imul
dec
inc
push
mov
jo
jmp
sbb
sub
rol
sahf
in
jecxz
add
adc
inc
in
adc
cltd
xlat
adc
stc
adc
popf
push
jnp
rcll
xchg
mov
nop
bnd
mov
xchg
push
js
push
pushf
mov
imul
xchg
test
xor
cmp
popa
clc
add
cli
or
dec
clc
jg
xchg
adcb
cmpsl
jae
add
xchg
lods
cmp
popf
cs
sbb
mov
insb
inc
adc
cmc
pxor
pop
and
xchg
pop
stos
sahf
gs
daa
cmp
sar
xchg
paddd
cmp
dec
outsb
popf
adc
pop
add
sub
cmp
mov
rorl
cmp
stos
xchg
mov
sub
lcall
pusha
push
dec
add
js,pt
dec
daa
nop
pop
ljmp
pushf
jae
add
aaa
idivb
cli
popf
jne
shl
and
mov
lcall
fdiv
xorb
cmp
push
mov
fsubrl
out
movsb
cmpsb
jecxz
into
insl
lret
pop
lock
sbb
xchg
add
call
fs
fnstenv
adc
push
movsl
icebp
pop
fiaddl
adc
ja
fstpl
pushf
shrl
test
insb
jle
mov
push
mov
xlat
cmp
mov
add
cmp
in
or
xchg
sub
bnd
sbb
add
push
jnp
and
out
mov
shufps
or
setno
xchg
sahf
movsb
push
jmp
aam
out
cmovne
inc
xlat
clc
mov
xor
xchg
add
dec
daa
fdivs
leave
push
inc
ret
xchg
jne
push
dec
mov
dec
dec
adc
scas
and
cs
or
inc
js
ret
and
and
push
lahf
ficoml
adc
sbb
xchg
pushf
in
push
pop
cmp
imul
cmp
out
push
sbb
in
ja
xlat
repz
cmpsl
ds
and
push
enter
cmp
sar
cmp
fstl
inc
push
or
adcb
lret
sbb
lds
inc
pop
es
dec
cltd
lock
fistpl
shll
clc
cmpsl
add
push
jbe
arpl
fldl
sub
cmp
sbb
bound
cmp
std
aas
sbb
add
pop
mov
leave
mov
mov
sub
repz
push
loop
daa
addr16
fdivl
cmp
inc
inc
sahf
lea
push
in
push
push
inc
push
or
xor
pop
mov
adc
mov
mov
sub
scas
into
in
add
or
lret
jecxz
aad
push
loope
add
push
outsl
inc
and
sub
add
shlb
mov
imul
fsubrl
lea
lret
sub
sar
inc
add
add
sahf
mov
xor
jb
popa
lock
shll
and
icebp
mov
movsb
jnp
pop
and
pop
addb
mov
mov
cmp
xor
push
jb
or
add
shlb
xchg
sub
stos
or
cmp
cmp
stos
inc
mov
gs
ja
mov
nop
orl
xor
dec
push
push
scas
or
xchg
ljmp
rcrl
lret
iret
xchg
push
jb
adc
ss
imul
fdivrl
insl
mov
lahf
pusha
out
sbb
mov
xchg
xor
inc
call
jecxz
cltd
int3
pushf
repz
insl
dec
bnd
fistpll
rcl
clc
inc
sbb
out
jbe
lock
sub
mull
ret
xchg
jns
lret
xlat
es
xchg
mov
sub
aam
in
test
out
in
mov
cmpsl
inc
and
cmp
add
into
push
push
movsb
jmp
sbb
arpl
xchg
mov
mov
lock
mov
mov
lds
dec
in
cmc
sti
mov
mov
dec
loopne
mov
addr16
cwtl
call
push
out
test
mov
cmpsb
pop
mov
push
sub
sbb
ds
push
loope
stos
add
sarl
addr16
push
call
pop
adc
repnz
imul
jo,pt
cmp
adc
cmc
xor
cltd
cmovnp
ret
loope
cli
mov
dec
mov
xchg
dec
data16
and
push
aam
enter
push
loopne
inc
call
aad
sbb
or
test
leave
cmp
mov
xchg
out
loopne
cmp
adc
sub
shrb
push
and
push
cli
xchg
and
fists
fs
mov
xchg
mov
mov
xchg
jg
mov
jl
mov
mov
icebp
into
ss
js
sbb
add
xchg
dec
mov
or
insl
dec
and
dec
xchg
inc
push
nopl
icebp
mov
pop
sub
lret
cmp
je
push
stc
nop
js
or
sti
outsl
es
push
add
movsl
inc
ja
int
xor
mov
jmp
add
push
scas
inc
pusha
cmp
cmc
xor
pop
out
in
lcall
aas
sbb
movsb
mov
jg
xor
and
xor
sbbb
movsl
mov
or
es
add
into
xlat
xor
pop
add
test
dec
daa
inc
fldenv
leave
sbb
lea
insl
xchg
xchg
ljmp
popf
jo
or
push
xchg
and
bswap
int3
add
jo
push
xor
cmp
in
cmp
sub
in
les
fnstenv
fiadds
push
adc
jge
mov
imul
xor
loop
cld
and
lcall
or
sahf
and
cmpsb
cmp
rol
inc
loopne
jns
outsl
aas
xchg
in
cld
popf
fwait
imul
test
push
dec
inc
dec
mov
stos
mov
pop
cltd
xor
sub
push
stos
in
xchg
out
mov
sub
inc
call
test
sub
nop
lds
imul
pop
mov
int3
push
or
ss
sub
xchg
mov
out
or
inc
and
leave
and
outsl
enter
mov
arpl
dec
cmp
push
jb
movb
xor
mov
mov
insb
fildll
sbb
mov
dec
inc
push
push
insl
scas
xchg
stos
mov
pop
les
repnz
pop
mov
roll
add
psubsb
jecxz
out
mov
rcll
nop
shlb
outsl
lods
cmp
call
fistpl
mov
enter
and
mov
arpl
cmp
pop
aas
pop
cmovg
cli
mov
in
mov
cli
insb
push
push
cmp
jnp
cmp
jne
sbb
add
scas
nop
or
sbb
imul
in
inc
xlat
xor
lcall
mov
jg
mov
aam
and
xor
cmp
popf
sub
mov
mov
jl
mov
sbb
int3
cmc
nop
cmp
mov
fsubl
pop
rclb
or
cmp
pop
mov
int3
ja
pop
pop
shlb
push
jb
xor
cltd
jne
mov
test
test
add
scas
pop
push
rol
add
sbb
mov
mov
inc
repz
mov
in
mov
ja
pop
je
int3
shlb
xor
mov
fwait
cli
addr16
lea
inc
dec
lods
push
dec
xor
and
sub
imul
jne
xchg
xor
or
mov
pop
add
mov
xchg
enter
ljmp
jns
dec
sbb
movsl
jle
jb
out
addb
pushf
mov
xlat
fisttpl
repz
xchg
fmuls
cld
ret
je
nop
mov
imul
xchg
sbb
mov
imul
je
xchg
pop
int
mov
mov
fcoml
mov
fs
mov
xchg
cltd
dec
ljmp
mov
insl
loopne
pop
ss
fs
unpcklps
or
jmp
nop
mov
stos
hlt
loopw
imull
mov
test
shl
sub
test
fwait
mov
mov
mov
out
or
sarl
adc
hlt
inc
add
dec
push
push
push
mov
pop
pop
mov
mov
inc
adc
daa
pop
mov
xor
jecxz
jmp
add
mov
pop
and
fcompl
mov
arpl
push
lods
cmpsb
ret
inc
pop
jp
daa
pop
add
iret
sub
in
xchg
sar
mov
in
xor
popa
jp
daa
jge
pusha
pop
sub
add
mov
loopne
aas
xchg
out
into
dec
sbb
pop
cld
dec
push
xchg
sbb
jbe
rcr
mov
addr16
push
mov
test
push
or
mov
imul
int
bnd
mov
push
or
jae
jnp
scas
pop
pop
repnz
sub
test
mov
xchg
xchg
mov
cmp
mov
jp
lods
cmc
inc
mov
lret
fidivrl
mov
or
inc
xchg
arpl
inc
add
in
sbb
pusha
js
cs
adc
and
jecxz
inc
push
jne
in
sub
mov
sub
lea
lcall
in
stos
pop
stos
sub
movsb
dec
inc
or
jl
lea
dec
add
push
or
testl
cmc
aaa
bound
test
mov
or
sub
pushf
rorl
mov
ret
sub
popl
ss
push
test
cmpl
or
xor
xchg
cltd
push
sbb
rcrb
and
sbbb
in
aaa
mov
mov
enter
mov
and
outsl
test
sbb
outsl
mov
cmp
loop
xchg
out
sarb
push
push
pop
inc
es
aaa
imulb
dec
pop
xor
andb
inc
jbe
xchg
mov
and
dec
fcmovu
test
in
insl
loop
aam
les
les
fbstp
dec
rorl
push
mov
sub
and
mov
add
cmp
lods
test
xchg
xor
sub
mov
xor
jo
jae
push
lret
xchg
jb
and
mov
movsb
pop
dec
pop
imul
pop
lock
scas
jle
xchg
fs
pop
adc
aas
scas
frstor
pop
out
ds
pop
lret
ds
cld
shll
cs
fidivrl
fisttpl
sarb
fistps
or
add
xchg
add
aad
in
loope
xchg
aad
push
out
cmpsl
adc
pop
xchg
dec
mov
xchg
inc
psrad
into
fsubl
ja
dec
addr16
jl
and
clc
jae
scas
cmp
adc
cltd
movb
lret
rolb
dec
gs
imul
orps
sub
mov
jl
xor
cmp
jp
add
nop
mov
mov
jae
pushf
insb
fucomi
pop
cmpl
jl
jg
repnz
and
dec
decb
outsb
pop
adc
lods
and
nop
addb
pop
sub
mov
icebp
aad
xlat
xor
mov
cmp
test
pop
or
xchg
add
xor
js
mov
jae
mov
push
dec
repz
cmp
test
adc
add
dec
in
cwtl
daa
adc
out
std
loop
dec
adc
add
ja
fs
dec
out
and
cmp
ret
ret
sbb
and
or
mov
mov
cld
addr16
popf
stos
jbe
jmp
fnsave
outsb
push
add
pop
popa
sbb
imul
arpl
mov
leave
out
daa
xchg
dec
mov
xchg
jae
xlat
iret
imul
dec
fsubs
sub
in
lcall
xchg
xchg
dec
push
sbb
jnp
aad
lahf
or
repz
popa
and
mov
sahf
inc
push
jmp
mov
mov
inc
xor
dec
incb
add
pop
and
jno
inc
dec
fidivl
dec
es
pop
repz
and
imul
cmc
and
dec
dec
pop
xchg
inc
mov
xchg
sub
movsl
xor
adc
mov
jge
sub
je
icebp
loope
ficomps
idivb
mov
iret
xlat
push
inc
and
cmpsl
pop
mov
sub
cmpsb
mov
xchg
int
fnsave
shl
and
dec
pop
xor
shll
push
sub
fbstp
fwait
pop
dec
or
test
dec
mov
mov
dec
jb
repz
movsb
ja
inc
mov
dec
jl
mov
pushf
out
fs
pop
mov
pop
addr16
push
mov
pop
ret
out
lods
pop
insl
enter
inc
jnp
push
fistpl
push
inc
imul
mov
cmpsl
fs
fcoms
mov
mov
push
cs
and
jbe
js
sarl
stos
sub
pop
inc
out
pop
mov
je,pt
fidivl
push
pushf
gs
mov
jmp
mov
aam
testl
adc
cmc
lods
mov
xchg
push
and
push
mov
lahf
ss
in
lret
repnz
int
adc
jmp
push
push
jo
adc
lahf
cs
push
push
daa
cmp
and
jnp
cwtl
adcb
mov
push
jmp
sub
mov
inc
and
sahf
ss
jns
xchg
mov
out
movb
and
pop
xor
push
stc
jmp
fs
shlb
xlat
adc
jae
cmp
push
inc
sub
pop
shlb
and
adcb
inc
divb
mov
int
insl
and
mov
out
or
cmp
mov
ret
fcmovbe
jo
mov
cmc
stc
cmp
and
mov
xchg
dec
xor
test
pop
stc
js
pop
mov
jp
inc
add
cwtl
ja
jo
imulb
cwtl
adc
divl
mov
and
bound
fsubrp
idivl
or
arpl
fs
add
inc
mov
xchg
and
xchg
sub
jae
sbb
lret
cmp
je
cwtl
setp
sti
cli
or
adc
mov
fdiv
mov
dec
or
out
adc
jo,pt
jo
insl
mov
mov
adc
sub
mov
test
ss
enter
mov
fisubl
insb
add
add
data16
sbb
enter
cmp
mov
int
testb
pop
adc
lea
scas
sbb
aaa
inc
jb
ss
xchg
data16
or
fdivrs
or
nop
int3
ds
call
jle
adc
add
shl
cli
mov
out
mov
fiadds
imul
lds
lcall
mov
pop
fldenv
cmpsl
sbb
bound
leave
jecxz,pn
cli
lock
scas
adc
mov
mov
sbb
mov
push
out
ret
xor
xorl
pop
bound
sub
lret
in
mov
imul
jne
lea
daa
jl
adcl
bound
jb
pusha
addr16
push
bound
or
dec
jnp
dec
and
stos
inc
push
inc
xchg
inc
je
dec
or
ret
hlt
neg
push
fstpt
inc
mov
jle
aad
enter
and
aad
rcrl
pop
out
xor
xchg
sti
fisubl
mov
pop
mov
clc
mov
int
xor
fsts
inc
pop
cwtl
xchg
sbb
pop
mov
xor
sbb
adcl
cmp
dec
mov
shl
dec
in
jecxz
loop
jle
rcrb
es
mov
xor
int
dec
fs
adc
pop
repnz
gs
das
xchg
stos
cmpb
mov
cld
rcrl
out
pop
mov
sbb
mov
outsl
xchg
mov
pop
iret
sub
mov
jns
sub
sub
cli
nop
mov
cmc
mov
add
cwtl
xor
mov
inc
popf
outsb
arpl
test
fs
xor
mov
jbe
mov
insb
call
jle
jl
xor
push
lcall
shll
sbb
lock
jae
call
dec
int
fs
and
pop
js
aad
dec
gs
pop
es
addr16
sti
mov
les
aas
add
lock
lods
rep
or
jmp
daa
lcall
dec
dec
or
fxch
enter
jmp
cmp
fnsave
mov
mov
shl
pop
or
lods
or
out
jle
cltd
std
nop
test
aas
adc
mov
jns
out
jne
xchg
xor
loopne
mov
test
popa
fdivrl
out
cmc
pop
insl
adc
imul
lret
pop
icebp
sti
push
xor
js
js
out
leave
xor
mov
or
push
mov
xchg
mov
jecxz
xor
push
and
orb
or
int
xor
mov
mov
dec
and
and
imul
sub
sahf
inc
arpl
es
push
int
dec
or
mov
idivl
jl
data16
mov
sub
mov
and
xor
shll
leave
xchg
push
test
dec
in
dec
loope
lcall
pop
in
sbb
pushf
addl
call
test
nop
push
inc
int3
decl
sbb
es
jnp
fisubrl
sbb
sbbb
sub
jb
and
sbb
pop
dec
inc
loope
jl
mov
popa
xchg
push
int
lds
mov
xor
xchg
bound
loop
and
pop
int
roll
shr
hlt
scas
arpl
sub
inc
fcmovb
pop
idiv
movsl
cmp
xchg
movsb
pop
dec
pop
repnz
movsb
pusha
int
cmp
ds
cmpb
mov
sbb
push
jle
xchg
xchg
add
sub
sahf
test
cmp
sbb
and
imul
cli
xchg
mov
ficomps
cwtl
cmpsb
adc
mov
pop
lea
sbb
daa
push
inc
fildll
or
push
cmp
xchg
mov
cmp
xor
jbe
mov
ret
cmp
mov
dec
or
push
pop
outsl
xor
fldpi
mov
xor
movsb
xchg
mov
dec
int3
xor
imul
mov
xlat
xor
imul
roll
mov
jmp
cmp
sqrtps
inc
cmpsb
ret
daa
pop
repnz
jns
loop
repz
fdivl
jno
push
push
lods
movsl
xor
push
push
andl
rcrb
icebp
bound
xor
jnp
mov
sub
xchg
rcrb
fsubrl
cmp
cs
rsm
jae
cld
push
xlat
iret
jne
sar
jo
dec
dec
xorl
pop
addr16
ljmp
inc
jmp
movsl
leave
in
ret
sub
adc
ljmp
mov
int
dec
ljmp
shl
push
movsb
mov
push
mov
mov
insb
sbb
fcomp
sahf
adc
mov
fidivrl
lret
pop
ljmp
cmp
mov
inc
movaps
xchg
jnp
sub
lret
push
cmp
mov
aam
outsb
add
fnstsw
into
cmpsb
lret
and
adc
jle
jecxz
lahf
outsb
out
sub
pusha
fdivrl
adc
xor
test
adc
shll
enter
xor
mov
ret
in
mov
mov
in
push
dec
lods
andl
mov
mov
xchg
jnp
in
pop
dec
and
jle
xchg
in
int3
sbb
pop
cvtpi2ps
xchg
xor
std
cmp
outsl
mov
or
mov
rcr
sbb
inc
mov
pop
daa
xchg
xor
cmpb
call
cmp
daa
or
push
jne
push
enter
mov
push
incb
fwait
mov
inc
sub
adc
fmuls
int3
lret
pop
in
sahf
and
cmc
mov
adc
push
test
ja
test
loope
cmovb
cmp
add
in
jnp
pop
mov
sbb
add
push
insl
test
std
je
and
lret
cld
lret
sti
pop
data16
stos
rcrb
gs
cli
inc
or
into
pushf
inc
mov
push
sahf
cmc
add
jne
movsl
sbb
lods
insl
and
mov
xchg
vandnpd
aad
in
xchg
cld
xchg
push
jmp
mov
pop
push
jp
pop
aaa
adc
push
dec
jecxz
imul
data16
adc
cmp
mov
or
sar
pop
lds
daa
push
or
cmp
jbe
frstor
ret
arpl
inc
outsb
add
ret
int
aas
loope
jecxz
lods
dec
iret
mov
lock
dec
xlat
icebp
addr16
stos
and
das
adc
popf
lcall
sub
hlt
mov
pop
cmp
xchg
inc
stc
cmp
push
mov
cmp
imul
test
loope
sub
sub
movsb
pop
mov
xchg
and
adc
add
mull
jg
xor
das
rcrb
xchg
pop
jo
or
xchg
xlat
or
daa
ds
or
cs
dec
cmp
mov
fcompl
mov
pop
out
mov
jnp
test
or
pop
or
mov
or
sbb
sbbl
pop
xchg
push
xchg
pusha
rolb
mov
mov
lahf
cli
inc
icebp
pop
cmp
outsl
pop
inc
js
out
sbb
das
dec
movsb
or
aad
push
push
lahf
je
cmpsl
adcl
mov
int3
stos
lock
sub
aam
aad
cmp
out
imul
push
mov
fwait
in
rolb
imul
shlb
lret
push
lock
cmpsb
and
xchg
push
nop
push
push
cmp
sbb
add
loopne
mov
std
inc
add
fsubs
mov
out
fcomps
sub
iret
pop
sub
js
jl
ret
jmp
push
push
pop
or
sub
xlat
outsb
push
test
mov
lds
mov
pop
push
mov
aas
mov
push
ret
les
in
mov
dec
in
pop
and
cld
testl
pusha
fnsave
dec
add
rol
scas
and
xor
test
leave
loop
sti
adc
xchg
iret
orb
outsb
fwait
sub
xlat
mov
xchg
pop
xchg
stos
mov
mov
and
cmp
frstor
punpcklbw
imul
je
xor
jb
adcl
cltd
push
into
addr16
in
cmpsl
sub
sbb
mov
dec
test
sbb
sbb
push
adc
mov
mov
lods
xor
xchg
fldcw
int3
mov
fstpt
in
repz
adc
repz
mov
test
cs
sub
and
push
push
or
or
test
jmp
cmp
cmp
pop
jmp
lea
mov
enter
push
push
sub
int
call
mov
pop
std
mov
add
in
bound
xchg
fs
pusha
push
mov
adc
mov
fmuls
xor
testb
dec
jmp
mov
lcall
mov
and
cmp
sub
hlt
rol
pop
enter
rclb
cmp
inc
inc
imul
je
addr16
mov
scas
test
stos
jle
popf
rorl
sub
rcrl
mov
xchg
fdivrl
fisttpll
jnp
mov
add
add
out
enter
xchg
cs
js
in
inc
mov
dec
pop
inc
dec
jecxz
jl
jbe
sub
ljmp
jne
adc
cmp
mov
push
and
pcmpgtw
and
dec
mov
mov
stos
xchg
sbbb
jbe
outsl
sub
scas
dec
jns
incb
loopne
and
mov
jb
inc
xlat
jecxz
xchg
mov
aad
dec
jp
in
les
cmp
cmpsb
push
cmovge
fwait
or
mov
mov
push
mov
fadd
inc
xchg
test
lahf
imul
movsb
test
daa
aaa
andl
decl
xchg
hlt
adc
lcall
lcall
pop
stos
adc
lcall
and
loop
add
mov
test
and
adc
jle
fs
inc
loopne
popa
dec
mov
jg
sbbl
stc
sub
dec
loope
clc
push
nop
imul
sarb
push
outsl
jmp
mov
lock
push
out
push
paddb
xchg
pop
ficoml
testb
add
push
pop
popf
fwait
push
mov
push
call
sbb
cmp
movsb
pop
push
test
push
addr16
jp
pop
jp
mov
in
nop
xor
test
stos
mov
push
push
bound
pushf
xor
and
aad
idiv
pop
scas
sub
mov
or
sbb
addr16
cmp
mov
outsb
jg
stos
push
mov
jmp
mov
mov
int
jg
js
jno
and
sbbb
fcompl
sbb
jbe
jae
movsb
sbb
inc
icebp
cmpsb
lock
int3
js
popa
lock
movl
push
jmp
decb
mov
fwait
or
dec
data16
mov
test
fs
je
inc
push
rcrl
jne
pop
mov
les
pop
aam
jecxz
stos
mov
add
sbb
pop
sbb
add
add
jo
jnp
sbb
mov
dec
loopne
dec
mulb
int
loopne
into
and
push
mov
lods
mov
or
into
xchg
sub
and
sbb
adc
and
test
scas
scas
inc
loope
xlat
jle
mov
jo
bnd
sub
lods
mov
stos
mov
cltd
sbb
cmp
sub
push
scas
test
mov
jecxz
cmc
clc
cmp
or
loopne
test
push
leave
int3
inc
push
ljmp
cld
int
daa
rol
movsl
dec
int3
push
into
lds
xchg
outsl
push
mov
push
lea
sub
adc
push
pushf
mov
mov
mov
dec
shl
jno
mov
ret
sub
stos
inc
subl
cltd
cltd
mov
push
cli
inc
imul
xor
xor
lret
lret
fidivrs
insl
cmpsl
daa
ja
pop
fists
jecxz
dec
jmp
popf
xchg
icebp
fcompl
jmp
lret
popa
sbb
insl
cmp
adcb
pop
sahf
jecxz
sub
jno
mov
inc
inc
adc
mov
add
or
clc
test
inc
mov
jb
inc
fdivs
push
lods
cmp
fildl
pop
xor
mov
push
lods
mov
lods
mov
mov
ss
jle
roll
add
shlb
mov
xor
lahf
push
pop
mov
lock
ds
ja
shll
lods
mov
mov
mov
jle
cmp
pop
push
adc
cmpsl
sub
cmp
push
lcall
fwait
int3
arpl
leave
sbb
pop
jmp
enter
xchg
jmp
push
stos
stc
int3
imul
movnti
mov
jp
rolb
xchg
jl
lcall
popf
out
fs
adc
mov
push
adc
fsubr
ret
pop
and
push
ss
pop
lock
mov
add
sbb
sub
add
test
jne
xchg
mov
pop
pusha
testl
xchg
ds
push
and
shl
push
stos
inc
inc
inc
hlt
adc
enter
scas
mov
mov
bound
pop
mov
fwait
jle
or
sbb
or
push
jg
lret
outsb
inc
adcl
orl
fdivs
sub
dec
inc
or
sub
aad
lea
lods
pop
out
cwtl
shl
incl
test
daa
mov
fldcw
pusha
scas
mov
xchg
fcomps
std
xlat
and
bnd
mov
add
imulb
ficomps
jmp
mov
sarl
pop
add
push
or
stos
mov
dec
sub
je
cmp
leave
adc
jnp
fiadds
mov
or
xor
or
clc
std
inc
mov
xchg
aas
adc
lock
jmp
lcall
insl
xchg
push
out
cmp
cld
popa
push
push
xchg
fisttpll
dec
mov
les
repz
xor
lds
or
mov
and
pop
bnd
push
aam
je
jo
ja,pt
jo
shl
cs
or
mov
sub
insl
stos
mov
in
icebp
pop
jl
sbb
cltd
pop
and
push
movsb
push
int
jg
dec
xlat
arpl
call
sub
enter
mov
xor
pop
repnz
or
cmpsb
clc
pop
imul
xor
subl
aam
pop
mov
cmp
ja
xchg
sbb
adc
ss
outsl
push
les
mov
in
stos
sub
fcmovnbe
dec
add
add
shrl
in
loope
rclb
hlt
sub
add
pop
mov
out
sarl
ret
xor
mov
push
jno
push
js
xchg
sarb
mov
mov
stos
mov
or
leave
sarl
mov
loop
out
mov
cmp
aaa
sahf
fldenv
or
clc
or
in
iret
add
pop
insl
jle
pop
leave
icebp
mov
and
aad
sbb
cmp
icebp
pop
add
pop
adc
xchg
cmpsl
stos
mov
jae
test
xchg
add
xchg
mov
faddp
movsb
in
call
xor
xor
pop
xor
xor
mov
sahf
in
xchg
dec
xor
ror
and
rorb
cltd
adc
dec
cli
jbe
aaa
rorl
es
jb
cmpl
pop
sbb
inc
fwait
cmp
or
in
popf
push
and
and
dec
mov
jbe
dec
cli
push
lods
movntq
sbb
xor
pop
test
test
ret
dec
mov
cmpsl
sub
jne
inc
nop
stos
jne
xchg
cmpsb
ret
push
jmp
mov
lahf
test
rorb
pushf
xor
arpl
or
orb
add
lea
adc
lret
jno
out
pop
sbb
call
push
lret
sbb
mov
adc
je
imul
push
fwait
scas
setno
shrl
fstpt
sbbb
fldenv
mov
mov
xchg
pop
shrb
aam
push
jno
xchg
shlb
add
lds
ror
loope
loopne
or
popa
pop
sub
xor
lcall
add
mov
aaa
notb
out
dec
stos
lock
scas
out
jge
nop
mov
xchg
test
sub
sbb
push
or
stc
or
sbb
out
in
push
jno
in
out
jae
ds
lcall
push
out
pusha
aad
jb
jns
jp
xchg
push
dec
jns
loope
or
popa
sbb
sti
mov
leave
add
pushf
xor
pop
ret
sbb
pop
jo
sub
in
jnp
dec
lods
leave
ss
sbb
jo
inc
icebp
mov
sti
xchg
scas
addl
mov
ret
push
inc
mov
xchg
ljmp
adc
ss
imul
lahf
push
mov
mulb
mov
mov
in
shl
cmp
test
ja
stos
mov
xlat
icebp
adc
insl
sbb
xor
gs
cmp
test
ds
jno
mov
fisubl
hlt
adc
jecxz
aas
add
cmp
pop
mov
mov
xor
fbld
ljmp
pop
xor
out
mov
push
or
jmp
mov
insb
aaa
int
in
aad
repz
icebp
loopne
ja
jg
sbbb
mov
mov
call
mov
hlt
jge
push
xchg
js
push
add
add
lahf
stos
add
bound
stc
xchg
inc
sbb
dec
loopne
add
mov
fs
cmp
push
test
push
and
pop
loopne
dec
ja
fadds
pop
xchg
mulb
cmpsl
xchg
sub
mov
cwtl
mov
and
push
jo
add
repz
inc
imul
scas
and
lahf
mov
cld
notl
and
dec
mov
stc
insb
sub
lea
scas
jo
arpl
jae
popa
movsl
ds
repnz
inc
cmc
dec
cld
int3
jns
mov
mov
sub
cmpl
fisubl
into
xchg
inc
add
xorl
sbb
sbb
test
das
push
or
aaa
ret
xor
lret
rcrl
aad
push
and
cmp
outsl
and
lock
movsl
dec
insb
lea
imul
adc
sbb
aas
ljmp
scas
mov
addr16
push
shrb
adc
inc
rcrb
sub
mov
iret
push
fcompl
fstl
movsl
pushf
or
mov
mov
sub
ds
pushf
jmp
cmc
sbbl
cwtl
vmovdqa
pop
arpl
cwtl
hlt
and
in
out
pop
aam
stos
int3
in
pusha
mov
mov
lea
sbb
iret
adc
icebp
cmc
adc
add
cld
xor
dec
cmp
fmull
xchg
cmpsl
movq
mov
push
and
add
adc
add
lods
add
inc
xchg
mov
mov
inc
push
xor
pop
xor
das
mov
mov
das
lret
mov
cwtl
imul
inc
bsf
rcl
cmp
push
jmp
pop
std
or
pop
sti
adc
mov
jo
insb
lret
pop
leave
add
rcrl
outsb
mov
popa
cmp
repnz
xchg
pop
in
aam
lds
sbb
xor
pop
outsb
fs
addr16
movsb
pop
cltd
or
sub
push
xchg
sub
aam
mov
dec
jb
jnp
out
sub
mov
pushf
cmp
push
rclb
dec
xchg
movsl
sbb
fcompl
pushf
xor
fisubrs
sbb
in
cmp
push
mov
cmpsb
mov
stos
push
in
sbb
mov
mov
sub
out
mov
jno
fbstp
adc
mov
or
ret
rolb
in
lock
inc
and
jne
mov
les
jb
adc
stc
or
mov
dec
push
scas
sar
js
inc
pop
xor
and
push
fstpl
mov
ljmp
jle
aas
jns
jns
xchg
cs
test
push
stos
out
push
xor
or
xchg
dec
filds
push
je
mov
data16
inc
push
xchg
lds
lret
inc
jnp
xor
popf
outsb
repz
pop
imul
mov
push
repnz
lea
dec
movsb
testb
push
mov
jg
adc
pop
xorb
je
sub
enter
shlb
andl
cmpsb
pusha
and
jne
xchg
sbb
and
aam
repnz
cmc
jnp
daa
insl
xchg
pop
and
scas
addl
mov
push
cmc
cmpsl
jg
rol
pop
sbbb
aad
aad
dec
mov
jo
and
mov
mul
dec
push
stos
adc
xchg
cmp
sbb
gs
jne
sbbl
jge
sub
mov
inc
in
stos
popl
xchg
jg
fcomp
jle
push
into
cltd
xor
sub
mov
cmpsb
sbb
iret
push
in
cmpsl
out
dec
cmp
jmp
sti
imul
mov
mov
sahf
adc
mov
pop
adc
lods
imul
inc
scas
ja
hlt
test
js
stos
je
push
imul
inc
push
mov
leave
ss
push
add
add
loopne
or
add
aam
ror
and
mov
cmpsb
lock
inc
fnstsw
push
outsb
data16
ds
or
dec
sub
jo
adc
push
inc
cmp
sbb
xor
imul
paddsb
add
and
je
fsubl
shlb
sar
pop
shrb
xchg
xchg
jmp
jns
pop
test
mov
pop
pop
pop
mov
test
arpl
jo
rol
faddl
push
ljmp
insb
lds
push
xor
test
movsl
sub
xor
hlt
or
call
rcrl
cmpsl
jl
xchg
shr
mov
xlat
push
int
movsl
mov
aas
lock
loopne
in
adc
imul
cmp
daa
leave
cmpsl
scas
pop
sub
xor
idivl
xchg
daa
rcll
add
jbe
test
cmpl
push
inc
jne
icebp
int
inc
xor
and
pop
cmp
ljmp
shlb
fcomp
mov
idivl
xor
clc
pop
cmp
sub
dec
es
cmc
fidivrl
cmp
inc
or
mov
out
lret
aad
iret
xchg
mov
adcl
rclb
addr16
pop
jns
cmpb
mov
sub
fwait
push
mov
lret
test
jo
mov
subl
sbb
push
rcrb
or
arpl
push
sub
adc
inc
movsb
inc
adcb
jmp
adc
adc
ret
lcall
mov
loop
sbb
dec
xchg
adc
mov
mov
cmp
xor
adc
push
sbb
mov
lds
adc
lods
ljmp
in
fadd
aas
outsb
daa
push
fnstcw
inc
repz
fbstp
xor
adc
inc
addr16
fsubrp
jae
loopne
xchg
jne
lret
cmpsb
xchg
testl
push
repnz
mov
xchg
out
pop
inc
xor
in
pop
and
in
pop
in
icebp
cld
jle
pusha
icebp
sbb
add
adc
dec
xchg
mov
loopne
push
stos
inc
cmp
pop
enter
je
ds
aaa
inc
xchg
sbb
sbb
in
arpl
or
aad
xor
mov
mov
pushf
imul
scas
mov
out
pop
mov
cmpsl
sbb
ror
leave
mov
add
jno
push
out
jbe
negb
fistpl
sahf
out
jl
xor
xlat
mov
in
mov
xchg
xchg
mov
ret
pop
cmp
cmp
and
loop
dec
or
ja
xor
repz
ret
pushf
in
inc
in
pop
mov
lahf
mov
push
hlt
ljmp
hlt
xchg
add
xor
in
jmp
inc
mov
add
cmp
pop
imul
mov
daa
popf
sub
mov
divl
push
imul
sub
jo
cmp
mov
push
cmpsb
stos
ljmp
in
out
xor
jno
cmp
cmp
or
inc
fcmovbe
pop
std
sub
hlt
popa
jl
mov
push
scas
mov
shll
or
sub
loope
ljmp
cwtl
xchg
add
xchg
insl
sbbl
and
inc
mov
ljmp
jnp
dec
fidivl
aad
cltd
arpl
and
mov
mov
test
scas
sarb
sbbb
push
ljmp
ja
jp
adc
orb
scas
dec
int3
fdivs
fidivs
cltd
jge
out
adc
rorl
mov
push
add
call
ss
dec
roll
cltd
das
jbe
ljmp
aam
arpl
mov
or
dec
fucomip
inc
mov
mov
xor
cmc
push
in
fisubl
or
sti
je
sub
mov
pop
in
jmp
pop
and
cmpps
inc
xchg
pop
repnz
shrb
mov
dec
xchg
pushf
scas
inc
mov
int3
cmpsb
jle
lds
outsl
push
add
inc
aas
mov
bound
icebp
jp
clc
stos
adc
push
lds
cmp
adc
cmp
in
sub
adc
dec
loopne
push
inc
arpl
addr16
lret
and
pop
mov
nop
add
mov
push
jmp
pop
push
loop
cmpsl
aam
arpl
leave
inc
pop
sub
aam
mov
pop
outsb
ret
lret
cli
fwait
cli
addr16
inc
fistpll
inc
jb
ljmp
fimuls
mov
das
xor
dec
outsb
fs
aad
or
cmp
adc
mov
sub
aam
cwtl
and
mov
pop
pop
sahf
xchg
movsb
ds
push
push
ret
popa
sbb
add
pop
sub
mov
xchg
movsb
push
nop
dec
mov
sbb
and
shl
in
test
out
lds
dec
shl
mov
cmpsl
dec
mov
jle
fmull
aam
pop
popf
or
and
mov
sbb
test
or
insl
cmpsl
push
mov
scas
xor
pop
repz
xchg
mov
jge
xchg
xchg
xchg
sbbl
mov
or
mov
mov
adc
bound
push
mov
rcll
adc
imul
fildll
in
imul
push
sub
iret
sub
shrl
dec
sbb
inc
fldt
add
rolb
sub
cli
in
lahf
push
out
lds
mov
ret
out
sbb
add
je
inc
lods
push
rcl
jb
xacquire
inc
inc
xchg
mov
push
mov
sbb
out
push
mov
xchg
sub
jbe
cmpsb
adcb
sub
incl
push
call
lahf
dec
das
stos
xchg
push
cwtl
std
les
xchg
out
movsb
icebp
xchg
pushf
movmskps
mov
jge
push
pop
mov
pop
scas
and
sub
pop
fld
mov
mov
lcall
mov
shr
cmpsl
pop
mov
sub
mov
xor
jp
sbb
sub
or
fsubrs
xlat
sub
dec
xchg
outsb
loope
cld
pop
mov
jge
xchg
adc
sbb
jno
fdivl
sbbl
mov
sbb
xchg
adc
push
loop
repz
insl
into
pushf
pop
ret
cmpsl
or
cmp
and
adc
ss
sub
mov
jae
les
jb
push
mov
cmpsb
mov
jbe
gs
pushf
xchg
fnstenv
mov
rol
jbe
loope
inc
lcall
pop
mov
cmp
loope
ds
rcrl
pop
mov
push
dec
or
xor
add
inc
fisubrl
insb
dec
push
adc
mov
push
cs
inc
mov
aas
fdecstp
jp
int3
fsubr
fs
cmc
mov
xor
lcall
adc
cmp
xor
cmp
in
es
ljmp
push
test
xor
cli
fists
sbb
nop
daa
push
hlt
jecxz
jno
scas
mov
out
pop
sbb
shld
pop
jbe
aam
sub
imul
sbb
dec
rcll
inc
pop
add
and
adc
je
pop
cmpsb
out
cmp
movsb
xchg
xor
sub
inc
ret
xor
adc
das
jo
mov
mov
test
xchg
push
sub
flds
mov
inc
pop
inc
pushf
mov
dec
insl
and
lahf
insb
sti
cmpsl
lods
fcompl
ret
scas
xorb
iret
xchg
insl
xor
dec
fisubrl
cld
mov
mov
pop
hlt
outsl
out
ja
aaa
test
scas
cli
rcrl
rol
sarl
mov
ljmp
rorb
in
lods
subl
sub
mov
push
bound
adc
push
fwait
mov
adc
xchg
inc
sbb
shrb
mov
xor
sbb
xchg
jp
fidivrs
shll
pop
nop
jne
fidivs
xchg
pop
scas
enter
mov
in
sub
cs
fidivs
in
sbb
mov
jle
frstor
cmpsb
push
and
xlat
jb
push
movsb
clc
out
sub
dec
inc
loop
sbb
fwait
cmp
add
xlat
jmp
xor
jo
mov
fidivl
std
movsb
aaa
xor
mov
stc
outsl
push
sub
iret
pop
mov
andb
inc
outsb
mov
cli
inc
into
popa
call
sbb
jg
ss
inc
jmp
cmp
mov
inc
or
adc
ret
repz
jmp
idiv
pop
sarb
or
out
adc
cmpsb
inc
punpckhwd
ljmp
mov
sbb
mov
xchg
aad
jecxz
shl
adc
cmp
fisttpl
jg
jl
pop
push
stos
mov
outsb
fdivrl
icebp
and
add
push
sub
mov
xor
or
push
mov
xchg
jge
negl
fldcw
int3
pop
aaa
hlt
pop
out
fsincos
or
sti
jbe
iret
aas
dec
xchg
repnz
cmp
or
mov
nop
arpl
mov
jmp
popf
faddp
lods
out
jb
jo
cmp
out
xorb
psubb
cwtl
jecxz
les
gs
inc
xchg
jge
lds
outsb
aam
fsubrp
pop
popa
leave
enter
mov
pop
or
test
dec
fs
mov
daa
dec
mov
push
js
out
jno
mov
jle
insl
orb
jno
movsb
mov
inc
mov
cmpsl
and
jo
mov
cmp
aas
adc
rcrb
xchg
xchg
push
sub
push
into
cmp
mov
int3
out
dec
sbb
outsb
jae
sar
cmc
inc
inc
fnstenv
pusha
int
pop
popa
aam
cmpsl
mov
cmp
inc
push
lods
ret
aas
nop
cmp
lods
push
mov
insl
jg
jecxz
js
jo
insl
cltd
add
out
cli
iret
push
sub
jp
inc
mov
or
xchg
mov
in
aam
jge
xchg
mov
fadds
and
mov
push
mov
popf
stc
jb
fldenv
stc
fs
shll
loopne
cmpl
dec
mov
and
jno
sub
shll
aas
or
jmpw
cmp
daa
lret
testl
mov
cmp
adc
dec
and
mov
xchg
inc
jmp
add
push
push
ljmp
jno
outsl
jne
mov
mov
out
adc
es
insb
add
jb
inc
mov
add
mov
pop
jno
insl
jecxz
cltd
std
cmp
outsl
sub
imul
inc
fyl2x
fidivl
lret
adc
addr16
rorb
jne
push
rclb
pop
xor
aas
ja
lcall
sbb
repnz
shlb
or
je
out
ss
dec
fdivrl
stc
adc
imul
cltd
das
inc
lahf
jp
ret
jge
in
js
or
add
repnz
test
mov
inc
stos
gs
pushf
arpl
scas
push
popf
pop
out
dec
insl
dec
jo
jnp
iret
les
mov
mov
ja
int
jbe
gs
push
push
inc
js
push
stos
arpl
jo
cmp
pop
scas
ds
ficoms
iret
mov
xor
pop
push
fdivrs
scas
call
test
jecxz
and
sub
mov
inc
movsb
xchg
add
in
test
loope
pop
cmp
fsubrp
daa
pop
in
xor
lock
push
add
inc
jle
pop
mov
popf
sub
lea
fbld
es
inc
int
pushf
fstps
and
pop
fiadds
mov
rcrb
and
and
or
xlat
hlt
cmp
test
add
jl
xchg
mov
lahf
jns
cwtl
xor
jg
mov
mov
ds
mov
pusha
or
xlat
mov
cmp
push
mov
sbb
ret
pop
push
cmp
cltd
popf
cld
loopne
rcr
mov
push
repz
fsts
out
sbb
push
mov
adc
out
mov
mov
popa
scas
jae
imull
jb
mov
push
int3
inc
push
into
xor
lahf
or
rorb
push
mov
push
sub
icebp
inc
xchg
adc
js
cmc
mov
push
int3
or
repz
xchg
ret
cmp
push
jmp
cmc
cwtl
push
mov
test
das
push
fcompp
lret
lret
clc
jmp
and
push
xorb
int3
test
repnz
pop
repnz
mov
or
jp
and
setb
pop
sub
jge
and
loop
subb
pop
loop
mov
stos
mov
test
mov
push
je
aaa
fnsave
jg
add
sti
jb
imul
pusha
inc
mov
ja
out
cmp
mov
or
cmpsb
lods
loopne
cmc
or
data16
outsb
or
inc
enter
cmp
push
pop
xor
ja
scas
mov
push
ret
jmp
loope
adc
std
pushf
push
or
fldl
into
nop
mov
out
push
daa
jge
add
ja
out
xorb
push
mov
xlat
cltd
dec
push
mov
lds
mov
adc
cli
inc
cltd
fs
ja
fs
xchg
stos
jg
push
out
mov
bound
rcr
pop
rorl
in
addr16
addr16
std
lods
and
ret
imul
jo
mov
push
in
sub
or
fiaddl
and
add
push
push
xor
pop
aaa
leave
lcall
add
ljmp
pusha
xor
xchg
ss
mov
and
lcall
sub
cmp
lods
insl
mov
call
cmp
sub
leave
in
sti
pop
aas
xchg
stos
mov
sbb
std
xor
outsl
sub
pop
test
xchg
decl
dec
and
stos
push
imul
xor
add
xchg
mov
push
mov
cmc
ss
movb
jns
push
push
add
inc
fwait
adc
inc
aaa
cltd
and
mov
cmpl
sub
test
pop
scas
notl
or
or
jbe
addr16
sub
imul
stos
sub
pop
adc
imul
cmc
add
int
shll
lods
xchg
movsl
or
insb
les
push
or
shrb
xor
mov
add
lea
or
ljmp
jb
inc
ror
es
dec
mov
mov
sub
arpl
xchg
push
outsb
ret
addr16
jecxz
dec
mov
lahf
fstpt
es
add
sbb
popa
dec
adcb
jl
mov
cltd
pop
mov
push
mov
adc
bound
jb
fstpl
dec
mov
ret
pushl
test
cmc
mov
pushf
jl
mov
mov
outsl
sbb
lea
cmp
dec
stos
jbe
rolb
jne
movsb
push
cmpsl
rcll
push
dec
sti
add
dec
fnsave
lods
stos
mov
mov
inc
and
shll
push
shlb
shlb
mov
mov
cmpsl
cmp
test
add
cli
lea
fstl
and
addb
sbb
insl
cmp
jne
push
fildll
push
test
aam
jbe
and
into
inc
inc
int3
xchg
movsl
xchg
orb
sub
dec
jp
sbb
inc
das
or
fwait
daa
cmpsl
test
xor
jne
pop
mov
cmp
shl
jmp
xor
inc
insl
mov
orb
or
dec
cwtl
jl
ljmp
mov
sub
cmp
cmp
cli
jb
add
jno
bound
int3
jmp
ss
leave
and
adc
xchg
arpl
test
out
mov
jbe
xchg
sbb
insl
pop
push
cmpsl
scas
xlat
inc
fwait
and
add
loope
pop
add
sarl
out
push
jmp
scas
cmc
lret
sub
aaa
or
push
lahf
je
jnp
push
rorb
lock
push
push
shrb
mov
je
pmulhuw
in
adc
xor
sahf
push
dec
filds
jp
andb
out
sub
out
cs
in
add
je
out
jecxz
add
jae
jge
adc
out
cmpsb
adcl
movsb
push
sahf
dec
lods
dec
pushf
pop
loop
mov
cli
xor
gs
ja
rol
mov
xor
cwtl
jg
jmp
addr16
cmp
dec
jecxz
pop
mov
hlt
rolb
lahf
dec
xchg
sub
lret
jmp
dec
cmp
pop
or
lock
ss
pop
jmp
add
inc
xchg
jmp
xchg
lret
sti
aas
mov
mov
sarb
aam
in
push
mov
andb
pop
shlb
pop
mov
adcb
xchg
pop
adc
mov
pop
adc
and
test
inc
pop
xor
inc
push
add
mov
mov
dec
jno
jg
mov
outsl
cwtl
arpl
mov
jbe
pusha
sub
cltd
xor
fcomip
movsb
sti
mov
scas
push
inc
frstor
lock
and
cli
mov
xchg
in
cli
sbb
aaa
popl
in
stos
push
xchg
add
inc
mov
jbe
jbe
lret
xchg
inc
fidivrl
in
push
popa
clc
leave
pop
arpl
xchg
adc
popf
test
repz
bound
iret
jmp
aam
fcoml
push
pop
dec
stos
fidivrl
mov
and
enter
cmc
dec
xchg
inc
pop
dec
lods
pop
hlt
add
out
lahf
and
pop
fnstenv
scas
inc
imul
push
je
outsl
fnstenv
cmp
loop
imull
sub
loopne
xor
xor
xlat
icebp
adc
fadds
hlt
arpl
cltd
inc
jecxz
stc
mov
add
movsb
or
sub
cli
jne
sub
jne
inc
inc
xchg
repz
repnz
lock
fisubs
cmp
sbb
dec
cld
xor
mov
dec
out
rcrb
add
mov
adc
outsl
pusha
jne
movsl
test
sub
int3
or
cmp
dec
cmp
je
movsl
push
adc
inc
lahf
push
jmp
xorl
ss
pop
xor
jne
repz
sub
shl
mov
jecxz
mov
iret
fwait
pop
add
dec
cmp
data16
les
aaa
into
stc
jno
fisubl
shlb
lea
push
ret
sbbl
jg
loopne
cmpsl
cmc
pop
flds
ja
or
and
mov
icebp
mov
mov
xchg
jl
incl
xchg
je
popa
mov
mov
cld
ljmp
call
pop
ss
sbb
mov
adc
xchg
and
daa
lcall
shrl
shlb
fadds
lds
cld
sub
xchg
lods
pop
sahf
ficomps
xchg
mov
pushf
pushf
lods
nop
push
js
sarl
xchg
das
push
rol
fs
outsb
out
inc
mov
push
jae
out
add
push
inc
dec
cmp
mov
cmp
bound
lahf
inc
xlat
scas
adc
fiadds
push
fildll
and
cli
js
sahf
test
scas
dec
fbstp
fsubs
movsl
jno
or
adc
or
add
lods
icebp
xchg
and
test
rorl
cmp
inc
cld
loopne
je
mov
sub
outsl
faddl
or
xor
sub
fidivrs
rcll
jns
in
cltd
adc
mov
jns
shll
push
popa
icebp
out
mov
arpl
mov
test
shl
ffree
les
mov
mov
jbe
movsb
pop
mov
dec
in
enter
cmp
shrl
ret
mov
and
outsb
stc
cmpsl
mov
out
fldl
addl
and
insb
jb
imul
dec
jnp,pn
outsl
lods
out
push
jb
test
mov
mov
mov
inc
pop
aaa
mov
jg
xchg
popf
xor
jnp
cmp
ss
shlb
jo
lods
and
leave
dec
out
pop
xchg
sahf
insl
mov
rcrb
jmp
xlat
enter
dec
add
adc
add
ds
jge
and
inc
fwait
jle
adc
loope
inc
in
pop
jae
push
or
cmpsl
jg
add
sbb
in
jo
dec
cmp
xor
push
outsb
xchg
or
fstpt
sub
out
mov
mov
rorl
jbe
mov
push
loopne
mov
dec
xlat
je
mov
push
in
push
sbb
pop
lock
add
testb
or
cmp
fdivrs
mov
bound
insl
and
fldt
lea
std
aaa
int
mov
and
or
cmp
jo
sub
fidivl
loop
in
aas
clc
mov
inc
push
jns
xchg
std
les
mov
xchg
inc
fisubrl
pop
scas
cmc
mov
mov
push
jg
test
adc
pushf
ds
cltd
cltd
cmpsl
push
jge
add
dec
std
jns
add
mov
dec
hlt
push
jo
ds
and
ret
jle
out
sub
pop
out
dec
sbb
arpl
jo
rorl
sbb
outsb
sti
add
adc
mov
pop
popa
aam
jnp
push
test
and
xor
jmp
into
jns
mov
in
mov
loop
cmpsb
popa
sbb
roll
int3
outsl
dec
faddl
push
xlat
jae
pop
scas
dec
dec
jne
shll
jecxz
sbb
jne
or
add
adc
int
sbb
pop
xchg
test
mov
inc
ljmp
fcmovnb
pop
gs
xor
or
mov
das
cli
add
cmp
ljmp
shr
or
xlat
outsb
popa
sub
aad
ds
les
popa
fdiv
roll
xor
xchg
icebp
cmp
testl
jle
test
xor
test
pop
andb
xchg
std
gs
cmp
jae
mov
jb
jnp
inc
adc
outsb
push
stos
xchg
mov
dec
loope
pop
pop
addl
sub
fidivl
xchg
dec
dec
dec
jmp
jmp
cmp
daa
lcall
inc
sbb
xchg
mov
bound
sbb
mov
aas
cli
insl
subl
dec
iret
pop
add
fdivrl
fs
into
jmp
movsb
mov
jg
push
sub
js
dec
lret
push
jo
lds
cmpsb
dec
pop
xlat
dec
xor
shrb
imul
cld
leave
push
div
sbb
pop
xchg
xchg
jge
sbbl
mov
lret
enter
mov
lret
cli
xchg
pop
aaa
push
lret
inc
and
lods
xor
mov
push
lret
cmp
push
mov
push
fsubrs
neg
xchg
fidivl
jg
sarl
hlt
test
loop
pop
lods
push
aad
aas
int
and
daa
xchg
rorl
popa
icebp
adc
cmp
xor
das
lahf
test
and
bound
leave
cmp
xchg
jns
adc
lret
ja
loopne
test
ljmp
popf
sbb
xchg
popf
stc
lahf
insl
dec
ds
int
push
bound
sarb
insb
notb
cld
not
push
cmpsb
cmp
in
xchg
fimuls
mov
lods
jmp
sbb
fwait
pop
cltd
jno
shrb
dec
loop
xorb
xchg
icebp
sub
jle
xchg
sbb
fdiv
add
mov
fldt
inc
push
mov
jmp
or
sub
inc
loopne
aam
in
icebp
ljmp
fs
ret
popa
xor
jp
sub
xchg
inc
out
cld
add
xor
adc
mov
dec
pop
dec
rolb
dec
icebp
test
iret
inc
xchg
repnz
xor
mov
fisubrs
adc
dec
loope
jg
mov
sub
sub
aaa
cmc
push
xor
aad
and
and
fmul
idivb
push
rolb
mov
scas
cli
aam
int3
stos
int3
pop
push
in
repz
stc
pop
or
fidivs
or
ljmp
shrl
pop
adc
dec
push
dec
pushf
jno
dec
sub
dec
shll
pop
pop
mov
mov
add
test
and
and
jl
pusha
cmp
insl
sahf
pop
pushf
jb
mov
pop
pop
jnp
in
testb
dec
pop
mov
bound
js
fldt
jle
in
push
test
mov
jb
movsb
test
loopne
push
cmpsl
adc
fistps
jae
scas
pushf
scas
sti
or
lcall
test
mov
push
adc
xorb
jmp
movl
lcall
dec
and
pop
mov
lcall
popl
mov
std
ret
jae
sbb
sub
pop
cmc
pop
and
test
jl
xchg
inc
fistpl
mov
add
cmp
pop
xchg
int3
loopne
cmc
sub
sbb
sahf
and
das
jne
shl
jmp
scas
cmpsb
pusha
jp
push
testb
jne
push
cmpsl
and
cwtl
lods
sbb
mov
into
and
loop
adc
je
insb
jbe
jae
adcb
in
shrb
notl
jle
leave
adc
lock
repz
sub
test
rorl
xchg
pop
ljmp
push
call
rol
repz
enter
jg
add
mov
adc
pop
add
jb
dec
movsb
cmp
mov
xchg
sbb
shrl
insb
sub
sbb
add
movsl
test
repnz
jle
add
adc
dec
sub
bnd
inc
shrl
xor
mov
mov
cmp
add
dec
inc
fdivrl
outsl
rcrb
arpl
lahf
or
dec
cmp
or
push
movsb
adc
mov
mov
fiadds
mov
std
iret
cli
mov
or
bound
jle
push
push
in
ja
rcr
cltd
jae
ret
xchg
mov
or
push
xchg
mov
in
sbb
and
lock
loopne
lods
frstpm(287
add
xor
mov
jmp
mov
pop
fstenv
sub
adc
mov
inc
mov
mov
fsubrs
cmp
xor
push
fcmovnb
inc
push
mov
leave
andb
sbb
mov
ret
movsl
aad
mov
shrl
mov
decl
xchg
xor
push
bnd
in
frstor
jg
nop
cld
adc
bnd
dec
inc
jno
dec
lods
fidivs
push
lea
mov
sbb
sub
jns
pop
mov
and
out
mov
xorb
pusha
das
xchg
pop
scas
enter
mov
xor
inc
mov
jg
inc
mov
popa
decb
les
movsb
mov
push
mov
mov
fldenv
push
xor
mov
sbb
or
cmp
jge
rorb
ror
arpl
sub
ljmp
dec
test
in
shlb
mov
aas
mov
rclb
inc
mov
loop
and
nop
dec
and
popf
jg
test
mov
aam
cmp
xchg
lcall
mov
bound
jne
inc
xor
cmp
inc
or
pop
mov
pop
out
imul
pop
pop
iret
push
dec
cmp
ret
xchg
cmpsb
cmp
or
out
xor
pop
rcrl
ss
pop
fbstp
imul
addr16
scas
rcrl
sub
jecxz
insl
dec
mov
sbb
and
shl
pop
scas
push
or
lea
jne
inc
gs
aad
andl
std
aam
es
adc
je
inc
repnz
lds
inc
push
and
aad
jae
fsubl
push
test
aas
call
jecxz
fsts
or
mov
in
js
xlat
xor
loopne
mov
sbb
sub
insl
pop
lret
aam
push
dec
loopne
lods
cmp
pushf
adc
push
pop
lock
push
dec
pushf
jb
add
in
jno
pop
mov
into
mov
push
push
in
sbb
insl
sub
imull
inc
hlt
or
notb
mov
adc
scas
sbb
lahf
mov
loop
jl
es
inc
mov
mov
xchg
sbb
push
cwtl
inc
sbb
jle
jne
stos
sbb
cmp
hlt
xchg
and
aas
in
insl
sti
call
push
xor
out
aad
addr16
pusha
lret
xor
scas
xchg
enter
xor
fadds
stos
push
inc
inc
scas
out
or
fwait
pop
adc
xchg
xchg
sub
je
xchg
subb
sbb
dec
cmp
incb
pushf
mov
lods
cmpsl
fisttpll
icebp
int
sbb
icebp
arpl
ja
rcl
mov
hlt
or
popl
je
in
add
pushf
adc
sarl
xchg
lock
dec
add
aad
and
cmp
imul
pusha
mov
cli
jle
xor
lods
outsb
mov
jl
or
mov
cmp
cmp
jmp
jno
or
pop
push
mov
mov
mov
out
lahf
xor
and
mov
ret
or
das
scas
scas
inc
idiv
add
push
sti
or
fs
sbb
loop
ret
hlt
xchg
xor
jo
push
adc
jl
out
jo
adc
jne
aad
js
push
jmp
mov
mov
lods
mov
aad
scas
leave
mov
push
gs
add
mov
push
sbb
lret
andb
xchg
insl
cmp
cmc
push
inc
add
cmp
add
inc
out
ljmp
ss
sbbl
add
ret
xchg
xchg
addr16
call
das
jle
out
lds
aas
dec
jns
aas
imul
inc
jl
arpl
fs
shrb
dec
jb
jns
fsubl
xchg
mov
std
stc
dec
cmpsb
jbe
jo
outsb
into
fsubrl
mov
inc
mov
adcl
push
cmp
cmpsl
out
addl
jl
in
out
xor
and
dec
push
inc
in
out
lahf
cmp
mov
jge
mov
push
push
stos
push
lds
in
cmp
sbb
lret
lea
mov
push
stos
das
push
into
add
and
aas
test
in
test
mov
in
std
ret
jbe
sbb
dec
jnp
shrl
sbb
xchg
icebp
fildl
stos
push
test
rolb
jmp
sub
ja
mov
rol
aam
insl
inc
sar
mov
inc
shl
jno
lds
xchg
cmp
hlt
cmp
popa
or
es
jnp
cmp
rolb
pop
mov
fsub
dec
mov
imull
enter
sbbl
push
adc
rcll
xchg
adc
movsl
push
stos
sahf
clc
xchg
les
pop
loop
xchg
push
pop
movsl
mov
pusha
js
mov
push
push
call
xchg
ds
sbb
xchg
mov
pop
xchg
data16
adc
jo,pn
orb
sbb
shl
xorl
push
pop
xchg
lock
cwtl
xchg
nop
ret
stc
mov
leave
pusha
pop
sub
dec
ffreep
jl
cs
cmc
adc
dec
leave
fs
xor
adc
bound
test
mov
mov
out
dec
leave
popa
insl
cmp
out
mov
xchg
xor
lods
push
xchg
dec
out
cmpsl
dec
mov
jae
loop
rcrl
dec
mov
pop
push
sub
subb
lcall
xlat
xchg
scas
push
pop
test
imull
pop
dec
push
ret
xor
and
movsl
mov
popf
jg
int
out
xchg
inc
pop
dec
dec
jle
stos
sbb
lods
or
js
jl
push
outsl
lock
ret
imul
mov
and
stos
mov
mov
test
ljmp
fcmovnu
cmp
insb
cli
xchg
pop
sub
mov
jge
dec
mov
xlat
jge
out
push
es
push
pushf
mov
loopne
rcrb
mov
jae
test
daa
push
scas
lods
sub
push
stc
inc
cld
mov
sbb
aaa
popf
push
jb
xchg
out
mov
mov
mulb
lds
cmp
pop
loope
fwait
repnz
inc
push
sub
dec
shrl
xchg
les
mov
adc
xchg
sbbb
outsl
das
cmpsb
cmp
jl
les
nop
inc
push
sub
lret
sti
insb
mov
dec
in
hlt
cmp
dec
insb
jle
outsb
leave
and
call
or
jns
out
rcrb
addl
int
adc
push
cmp
outsb
test
in
add
std
xor
ja
sbb
jae
into
loop
push
in
shrb
lods
mov
mov
dec
pop
rorl
sbb
dec
jnp
popf
fsubrl
mov
inc
popf
pop
icebp
into
bound
adc
test
xor
pop
push
mov
aam
gs
insl
cmp
and
ret
push
sub
cmpsl
insb
sahf
movsl
cmp
mov
es
enter
mov
push
dec
sub
push
fstps
jle
sbbb
aad
aam
add
push
aaa
imul
xor
adc
jge
cmpsb
inc
jne
shlb
shr
cmpsl
and
bound
lock
mov
mov
sbb
xor
ljmp
shlb
jb
std
sub
push
insl
sub
cli
dec
jg
inc
xchg
jae
dec
sub
movsl
adc
mov
add
xchg
pusha
iret
rorl
inc
push
icebp
and
mov
pop
out
mov
xorb
or
int3
daa
lods
sahf
xor
clc
sbb
cmpsb
ljmp
and
les
jmp
and
mov
jo
pop
mov
lret
loop
dec
clc
test
mov
and
push
and
mov
sbb
xor
repnz
cmp
test
lret
pusha
idiv
dec
shrb
sti
sub
notb
pop
test
lea
cmc
andb
pop
or
out
mov
outsb
out
add
dec
mov
mov
mull
push
mulb
bound
stos
mov
or
jae
loope
movsb
pop
cmp
xlat
dec
dec
mov
arpl
or
xor
mov
add
pop
outsb
xlat
cmp
stos
aam
inc
sub
mov
loopne
jns
ja
stos
jne
jne
movsl
push
jmp
mov
into
mov
jg
fsubrl
cmpsb
xlat
xor
leave
jp
out
sbb
pop
int3
mov
jecxz
cltd
test
pusha
jo
dec
pop
or
and
jmp
pop
add
mov
enter
mov
sub
sub
stos
test
pmaxub
xor
sub
test
add
scas
and
xchg
mov
push
add
out
cmp
push
leave
jecxz
mov
or
mov
mov
cmp
lret
jmp
ret
shr
push
ds
in
mov
lods
es
xchg
inc
out
mov
mov
add
dec
dec
fwait
cmc
icebp
clc
shrb
inc
sbb
cmp
fs
movsl
pop
and
pop
jg
rclb
or
pop
dec
bndldx
jg
scas
push
adc
dec
imul
lahf
fwait
das
or
or
test
lret
xchg
push
add
inc
rcll
rcr
dec
mov
mov
icebp
mov
sub
cmpsb
sub
xchg
mov
dec
pop
and
xchg
mov
sub
dec
aam
dec
sti
xchg
mulb
ja
push
test
push
add
fs
loopne
cld
xor
mov
push
stos
cs
ss
repz
idivl
mov
hlt
int
xchg
dec
cmpsl
addr16
hlt
mov
adc
loope
xor
and
push
push
jb
mov
testl
iret
add
pop
adc
pop
testl
mov
mov
dec
sub
shl
or
fmuls
fwait
jp
sbb
test
insb
fs
mov
push
sbb
movsl
cli
cltd
int3
fiadds
daa
loope
fwait
lods
mov
or
sbbb
mov
cld
pusha
and
push
mov
push
lds
shrl
mov
aas
or
xchg
xor
jmp
test
inc
and
xchg
mov
or
sti
cltd
push
inc
xchg
and
inc
fldenv
fs
push
push
pusha
or
in
cltd
pop
push
and
push
xchg
xor
xor
ret
mov
subb
push
mov
stos
in
sbb
pop
cmp
aad
out
inc
pop
inc
sbb
inc
inc
xchg
sbb
loopne
dec
mov
lds
xchg
jno
mov
mov
fnstsw
testl
int3
pop
cmp
add
je
in
push
adc
add
sbb
test
outsl
xor
xchg
or
out
inc
dec
stos
dec
aam
shl
mov
rclb
pop
dec
hlt
sub
lds
jns
add
repz
ficomps
test
test
or
lods
imul
pop
xchg
mov
daa
mov
dec
jb
adc
xchg
insl
pop
imul
and
mov
lock
fbld
pop
lea
mov
push
xor
fnstenv
test
jmp
aam
mov
ficompl
pop
jg
mov
mov
ds
inc
dec
fildl
pop
add
xchg
mov
bound
push
out
testl
lds
icebp
movsb
sbb
adc
orl
enter
js
sti
mov
fldt
push
mov
addl
cmp
test
jbe
sub
or
or
clc
or
fcoml
jle
clc
add
xchg
jns
xlat
pop
push
dec
pop
fwait
les
int
adc
ds
sub
mov
fcomp
sub
mov
push
jp
in
lahf
adc
mov
mov
bound
hlt
jnp
or
jmp
mov
mov
push
fisttps
cmpsl
out
sti
pop
lods
test
and
push
fbstp
xor
dec
xchg
les
cld
imul
jns
shlb
mov
or
in
lret
imul
cwtl
mov
xchg
loope
adcl
ss
jnp
pop
movsb
lgs
bound
jecxz
call
or
es
xchg
and
out
push
lahf
xor
aam
cltd
sub
mov
imul
lods
xlat
leave
test
inc
sub
mov
repnz
in
inc
popf
pop
imul
mov
jle
mov
hlt
sub
fldcw
push
adc
pop
call
pop
lods
ljmp
lcall
xlat
das
and
movsl
ds
jle
sbb
lahf
loope
rcll
js
push
sbb
aas
xor
mov
fldt
imul
jne
out
sbbb
or
mov
enter
das
cmp
and
fs
sahf
daa
mov
shll
inc
lods
push
pusha
fmull
mov
cmp
lahf
pop
arpl
xor
xchg
sub
and
sub
dec
xchg
aaa
out
std
clc
aas
iret
loope
std
adc
or
mov
repnz
test
push
imul
scas
xorl
sub
xor
pop
xchg
call
mov
mov
cs
inc
adc
jl
sahf
je
adc
outsb
stos
push
add
push
in
push
mov
addb
xchg
out
test
hlt
mov
sub
xchg
insb
dec
insl
or
dec
sbb
stos
test
lods
mov
scas
mov
insb
add
aad
mov
cmp
pop
popa
mov
or
pop
xchg
dec
inc
scas
inc
jae
loope
xchg
aam
loopne
mov
repnz
and
adc
sahf
jle
mov
sub
arpl
mov
sbb
fdivs
lods
mov
xor
test
inc
int3
hlt
sub
sbb
movl
addr16
dec
push
inc
loopne
add
push
test
es
rorb
roll
xor
arpl
xor
dec
xchg
loope
adc
insl
sarl
mov
adc
movsb
cmp
pop
jno
mov
cmp
aad
sbb
push
repz
xchg
ljmp
mov
adc
cltd
xchg
push
xchg
inc
cmpsb
or
xchg
imul
arpl
mov
mov
loope
add
daa
mov
sub
das
shrl
cmp
adc
cld
cltd
lcall
in
dec
and
call
in
cli
xchg
pop
cwtl
das
cltd
mov
ret
stos
iret
pushf
lea
insl
pop
mov
sub
ja
xchg
hlt
rcrl
call
loop
test
or
jnp
test
das
in
inc
popf
inc
pusha
sti
bound
xor
cmp
sub
push
scas
jb
xchg
xor
shl
pusha
add
lods
jbe
lock
out
or
cmp
leave
movsb
out
popl
add
dec
push
push
sbb
cmp
js
test
lcall
cmpsb
xor
inc
lea
sti
cs
adc
xor
jl
setno
mov
xchg
xor
mov
pop
das
add
cmp
lahf
xchg
dec
fcompl
cs
mov
aam
imul
repz
in
sar
push
push
cmc
js
mov
rorb
and
test
pop
and
mov
or
inc
add
pop
jmp
lds
sub
xchg
dec
jle
xchg
ja
sbb
adc
fdivl
imul
out
xchg
push
call
insl
sbbl
adc
pop
hlt
jp
mov
loop
lcall
mov
sbb
pop
cs
je
xchg
sahf
int
std
or
cmp
fistps
dec
dec
loope
xchg
clc
out
jns
xchg
mov
xor
xchg
pop
push
cmpsb
push
fidivrs
and
push
adc
or
aaa
push
int3
in
dec
pop
jb
adc
sub
mov
lods
push
data16
shlb
or
loope
or
sbb
outsb
retw
and
sahf
scas
fisubl
sbb
test
cmpsb
in
mov
test
jbe
dec
sar
or
cwtl
dec
imul
in
xchg
mov
push
jns
loopne
lods
and
repz
jle
xor
jmp
sub
dec
push
mov
cmp
or
push
push
ret
sbbl
jge
rorl
loop
aaa
mov
jmp
or
cmp
fdivrl
in
out
push
adc
jbe
or
jne
push
cmpsb
pop
mov
jg
adc
jbe
stos
add
into
sti
sarb
fdivl
pusha
pop
insl
lret
insb
jne
jno
mov
ss
mov
inc
imul
jno
mov
call
mov
push
pop
lret
frndint
sub
pop
je
jo
cmp
xor
pop
adc
mov
jg
rolb
pushf
bound
push
jo
cli
test
sbb
es
mov
pop
arpl
pusha
lret
sahf
xor
addr16
dec
mov
out
les
rclb
mov
xor
rcl
mov
outsl
mov
sub
mov
inc
in
jg
test
jbe
sub
enter
cld
pop
clc
bound
fisttps
xchg
xor
daa
imul
out
inc
pop
jnp
mov
mov
pop
pop
pop
mov
and
lea
loopne
sbb
mov
adc
fld
lods
pusha
sbb
mov
sbb
sbb
cmp
scas
lods
and
sub
or
ffree
insb
add
xchg
sub
int3
fidivs
or
outsb
xor
push
dec
adc
xorb
in
sub
lahf
jecxz
dec
add
outsl
test
pusha
sahf
or
pushf
dec
xor
inc
popf
pop
stc
movsb
ja
andb
aam
jno
inc
dec
mov
sbb
aas
mov
pushl
ljmp
jno
xchg
lods
mov
fstpl
push
out
xor
cmpb
jne
pop
je
inc
xchg
enter
hlt
fidivl
int3
add
xor
or
sbb
mov
adc
inc
fcmovu
inc
loopne
enter
mov
jno
push
aam
xchg
push
js
push
mov
ret
sbb
imul
mov
jge,pt
xlat
enterw
cmpsl
lods
sub
out
mov
es
mov
les
mov
mov
imul
adc
pop
fildll
addr16
and
out
inc
mov
test
or
in
scas
lahf
stc
ljmp
xlat
add
add
fstpt
fisubl
fs
jp
in
mov
fsubr
xlat
rcrb
sub
adc
popa
or
xchg
cltd
jae
jno
and
imul
inc
data16
idivl
sbb
mov
dec
cmp
and
jne
les
and
push
lock
mov
push
push
popf
mov
and
and
mov
cmpsb
mov
inc
in
mul
push
iret
fcmovnu
sub
and
push
xchg
adc
pop
push
int
sub
xchg
dec
pop
adc
pop
sub
repz
jl
or
ret
xchg
push
lds
mov
sbb
repz
test
aas
add
mov
dec
mov
ja
push
loopne,pn
test
and
enter
sub
scas
pop
repz
outsl
sub
sbb
mov
pop
sahf
repz
and
cmp
bound
xchg
in
nop
jmp
test
shll
cwtl
mov
push
sub
cwtl
dec
fwait
pusha
jl
push
push
pop
add
or
xor
dec
iret
icebp
push
int3
mov
xchg
out
jecxz
fwait
add
cmp
pop
fiadds
lahf
xchg
inc
adc
test
mov
lcall
fidivl
mov
daa
and
sti
adc
fnstenv
cli
sub
pop
sahf
add
jmp
mov
xchg
inc
and
fnstcw
mov
pusha
inc
ds
cmpb
arpl
ret
mov
sub
and
aas
pusha
sahf
cmc
iret
mov
enter
icebp
jge
mov
ljmp
push
add
adc
mov
push
cltd
jp
cmp
mov
addr16
adc
and
sub
imul
xor
push
xlat
lret
mov
push
in
inc
inc
cmpsl
push
push
xor
xor
mov
dec
mov
dec
and
jb
push
addr16
push
add
mov
xchg
fstps
cmp
dec
out
scas
lock
push
fnstcw
xchg
push
jae
fnstsw
bound
mov
xchg
or
cwtl
stos
aad
imul
addr16
jb
cmp
insb
mov
xor
stos
mov
sbb
cvtps2pi
loope
inc
mov
pop
inc
in
sbbb
mov
adc
mov
cmp
and
shr
repnz
out
dec
mov
andl
subb
jno
add
mov
cmp
shll
aam
add
inc
dec
cltd
and
sub
dec
cmp
mov
in
imul
idivb
push
jbe
jg
mov
shrl
imul
mov
testb
mov
push
insb
and
sub
add
mov
push
loopne
imul
jnp
clc
aam
inc
jno
ds
sub
popa
addl
inc
add
inc
mov
adc
into
mov
pushf
les
in
cmpsl
pop
adc
aam
mov
xchg
fstl
enter
mov
sahf
out
push
sbb
shll
shll
cs
in
int3
dec
mov
sbb
and
outsl
ja
pop
repz
fadds
add
test
dec
jge
mov
fisubrs
inc
lahf
lods
ss
push
out
add
jge
push
mov
js
mov
push
sbb
jno
andb
xchg
lods
pop
fcoml
pushf
xor
xchg
pop
mov
mov
sbb
sti
lret
mov
into
jle
add
je
sbb
fldl
add
leave
cmp
pop
shll
stc
mov
jl
adc
push
out
add
lods
and
cli
mov
sub
mov
adc
cmp
sbb
cmc
sbb
ret
ret
es
mov
gs
or
xor
cld
lcall
in
xchg
popf
adc
addr16
movsl
imul
fucomp
jg
or
mov
fists
lods
mov
mov
jnp
cmp
adc
pop
montmul
cmpsb
inc
aaa
aad
xchg
xor
jge
repz
ljmp
dec
dec
mov
push
fsubrl
adc
fstpl
push
or
cmp
push
jle
fmul
mov
push
int
fnstcw
cld
adc
repnz
insl
jg
mov
xlat
mov
rcrl
fmuls
adc
in
push
sub
xorb
xchg
into
dec
mov
jae
ret
xor
xchg
stc
adc
jbe
adc
jl
pop
idiv
xchg
jbe
push
das
or
cmp
fnsave
int3
imul
in
cld
or
or
test
inc
push
inc
popf
or
lcall
push
repnz
hlt
aas
pushf
mov
aam
mov
aam
cmp
bound
ret
sub
jl
xorps
outsb
add
mov
mov
fs
fucomp
pusha
test
fwait
push
in
xchg
mov
bound
jae
xor
decl
push
arpl
sub
cs
pusha
dec
xchg
mov
jmp
fisttps
and
adc
lret
std
or
stos
add
sbb
int3
mov
les
mov
inc
in
or
daa
in
sbb
mov
gs
xchg
stc
imul
add
push
sub
sbb
jbe
gs
out
mov
bound
cmpsl
out
sub
inc
mov
into
sahf
cmp
mov
and
sahf
xlat
push
std
mov
shlb
mov
jp
xor
sub
out
aas
xchg
add
jp
rcrb
pushl
xor
scas
sarl
cwtl
mov
fbstp
ret
push
or
loope
scas
dec
xchg
ret
in
cmp
pop
dec
icebp
xor
or
rcrl
xchg
and
fadd
xor
movsl
repnz
sub
loop
dec
cwtl
movsl
cmp
insl
xor
sahf
out
movsl
adc
and
outsl
jecxz
mov
inc
xchg
sub
xorl
sbb
adc
pop
mov
stos
mov
mov
lret
lods
popf
mov
test
cmpsb
js
sub
xchg
lea
out
jnp
push
andl
in
push
es
fcompl
sbb
lahf
adc
dec
xor
xor
call
inc
fld
cmp
jmp
or
xor
into
enter
movsb
mov
adc
push
bound
out
mov
bnd
cmpsb
push
sahf
clc
sbb
sub
xor
sub
stc
popf
aaa
idivb
pop
xchg
jg
sub
lret
xor
in
mov
inc
or
add
jp
push
dec
and
lar
shl
xchg
xor
hlt
cmc
or
cld
xchg
push
mov
dec
pushf
sarl
in
dec
in
rclb
scas
cltd
sub
daa
mov
into
xor
xchg
repnz
pop
dec
into
gs
adc
jl
mov
or
sub
rcll
subl
aam
lcall
scas
cmp
jle
fidivl
stc
jl
pop
push
loopne
sub
cmpsb
jge
pusha
jo
ret
ret
outsb
in
cmp
aas
nop
in
add
jns
add
mov
fnstcw
sub
mov
pushf
adc
iret
subb
lahf
adc
jp
outsl
arpl
mov
sbb
sub
fs
jo
jge
mov
lret
sti
in
push
and
jb
pop
or
mov
iret
push
ljmp
mov
cmp
pop
cltd
adc
iret
xor
shll
or
cli
inc
inc
pop
mov
push
sahf
in
pop
rolb
mov
loop
lret
mov
add
nop
jmp
movsb
add
dec
aam
dec
mov
mov
mov
and
push
aas
loop
outsl
jp
insl
jb
into
jg
or
lock
xor
ds
outsl
adc
pop
and
loop
push
inc
xlat
test
call
popa
or
cli
xchg
mov
outsl
adc
cs
nop
andb
jb
sub
mov
dec
or
jge
bnd
push
call
adcl
mov
pop
cmp
stos
inc
mov
scas
ret
push
mov
int3
adc
loope
fstsw
jo
jno
adc
inc
sarb
loop
lahf
sbb
loop
ret
lock
call
xor
daa
jae
shrl
mov
cltd
mov
imul
jo
fidivs
sub
adc
mov
stc
sbb
pop
mov
stc
sbb
jo
pop
mov
dec
jns
sub
dec
xor
lret
push
shll
fstpt
into
fidivrl
rclb
dec
data16
adc
jae
lcall
les
mov
loopne
wbinvd
inc
xchg
movsl
cmp
pop
cmp
js
mov
xor
mov
std
push
push
jl
mov
jbe
fstl
insl
cwtl
nop
mov
xor
popf
xor
mov
mov
push
mov
loope
push
enter
adc
data16
cs
dec
out
imul
jge
sbb
int3
loopne
aad
mov
out
mov
lock
ja
cltd
add
lods
xchg
push
outsl
adc
sub
testb
jge
lret
test
loope
xor
adc
cmpsb
sub
pop
and
xchg
out
movsl
cmp
mov
push
adc
pusha
idivb
pop
nop
add
rcrb
out
push
xchg
pushf
das
pushf
fidivrs
sbb
mov
out
fiaddl
cwtl
mov
cmp
cmp
push
mov
xchg
push
mov
andl
or
or
rcrl
pop
inc
and
stc
inc
mov
negl
aas
data16
xor
add
push
arpl
std
lods
push
mov
stos
out
push
pop
push
cmp
insb
xor
js
or
nop
std
xor
sbb
pop
xor
cmp
test
jb
and
mov
out
ficoms
mov
test
cmp
in
rol
mov
push
imul
pop
ret
sbb
lea
outsl
mov
mov
sbb
push
int
divb
mov
mov
add
movsl
mov
mov
shr
loopne
inc
sub
call
xchg
insb
jb
mov
mov
xor
and
xchg
mov
sbb
xorl
lock
stc
mov
das
lret
jge
aas
nop
into
in
imul
and
cld
lcall
cwtl
lods
xor
or
das
addr16
push
inc
arpl
mov
jo
test
and
test
push
sub
out
notl
or
cli
scas
xchg
xor
in
pop
orb
mov
iret
adc
xor
stc
xor
hlt
arpl
and
int
mov
sbb
pop
adc
add
sbb
aas
dec
jle
dec
xchg
pop
cmp
fnstenv
pop
cmpsb
adc
loopne
lods
div
mov
nop
pop
adcb
mov
jae
icebp
jno
aam
sub
pop
mov
test
cmp
mov
fwait
and
jo
cmp
pop
sbb
and
mov
jns
test
lahf
loopne
or
repnz
or
cmpb
pop
or
lret
jbe
imul
fs
xchg
int3
stos
pop
cmp
cmp
add
iret
inc
and
and
aas
xchg
push
out
stos
rol
sbb
push
aam
adcb
adc
jbe
mov
out
dec
push
xlat
outsb
in
push
dec
sub
ret
sbb
dec
shrl
aas
fwait
sub
and
and
call
pop
repz
lods
pop
es
mov
lods
pop
jae
lahf
pop
or
enter
lret
push
mov
lods
out
and
xchg
sub
sub
mov
out
fsubrl
in
imul
mov
lods
movsl
enter
fmuls
xorb
andl
jbe
push
fs
add
stos
popa
sub
sarb
push
ja
mov
xchg
mov
cmpsb
mov
sub
cmp
cmpl
or
mov
je
aad
outsb
test
xchg
jge
outsl
xchg
pop
mov
enter
sub
sti
andl
push
stc
je
or
cmp
lret
pop
push
faddl
push
aad
jbe
lods
jo
scas
cmp
push
inc
push
mov
cwtl
or
adc
dec
ficoms
fidivl
icebp
push
jbe
lcall
pop
fnstcw
test
dec
stos
jl
incb
xchg
out
bound
sbbl
fs
ljmp
pushf
mov
call
iret
push
iret
push
cs
fisubs
jo
cmp
cmp
or
pop
add
cmp
jo
and
mov
dec
jo
imul
jp
jp
mov
cmpsl
repnz
pop
sub
ljmp
mov
pop
jns
fwait
inc
pop
stos
out
sub
fucomp
lret
hlt
cwtl
sti
sahf
inc
cmpsl
jmp
orb
mov
sbb
mov
enter
adc
leave
mov
mov
mov
add
xor
pop
add
push
shlb
dec
scas
fs
jg
jbe
es
ror
movl
pop
aaa
jno
add
xchg
xor
movsl
idivl
sbb
js
sub
dec
leave
push
stc
stos
sbb
sbb
je
subb
pop
push
sbb
mov
mov
popa
imul
mov
mov
mov
add
jmp
pop
aam
or
rol
std
dec
fnstcw
mov
mov
mov
les
insb
push
sub
je
mov
aam
sarb
jbe
sub
sarb
dec
in
insl
push
in
jbe
movsb
lock
insb
sub
jnp
pusha
and
cmp
cld
enter
xor
inc
mov
pop
inc
add
adc
jle
int3
mov
je
push
push
popa
into
xchg
mov
popf
std
jge
insl
scas
pop
repnz
rclb
jb
sub
pop
fs
arpl
idivl
push
or
jl
xor
repz
popa
push
icebp
adc
jmp
push
insb
loopne
xchg
insl
ljmp
or
mov
and
daa
push
pop
and
mov
imul
dec
lret
lods
dec
lock
shrl
push
mov
add
in
fldenv
mov
rorb
lods
add
icebp
push
call
jl
scas
inc
fdiv
jnp
loop
sub
inc
and
jne
test
scas
xchg
adc
scas
insl
test
iret
mov
sbb
mov
adc
in
mov
or
xor
jle
mov
shr
ret
add
jnp
lret
out
pop
les
or
push
fmull
scas
and
subl
or
dec
sub
mov
movsb
or
lcall
dec
push
mov
or
and
add
xchg
fdivs
scas
dec
lds
imulb
adcb
adc
daa
xor
dec
mov
xor
xchg
out
xchg
mov
pop
push
inc
push
fadd
loop
xor
xor
mov
in
jmp
xchg
push
dec
flds
xor
pop
cmp
negl
jecxz
test
push
lock
outsl
inc
fsts
lds
frstor
stc
popf
dec
bound
lahf
test
xor
outsb
inc
cld
push
aam
mov
arpl
sbb
mov
out
xor
or
xor
js
call
movsb
test
xchg
or
add
adc
mov
jp
in
sbb
mov
push
jne
fiaddl
and
xchg
jecxz
in
or
mov
pop
mov
jne
push
aas
inc
cmp
cltd
mov
stc
in
into
inc
cmp
fdiv
fidivs
ljmp
mov
jbe
xor
popa
imul
adc
loopne
js
lcall
mov
pop
mov
fldcw
mov
jno
xor
ja
cmp
gs
dec
mov
movsl
int3
jo
stos
addr16
sbb
add
cwtl
cmp
cwtl
psrad
inc
sahf
dec
loopne
pop
jne
xchg
ret
lods
push
lret
and
jmp
sub
aam
lahf
nop
imul
adc
fwait
scas
movsl
sub
fdivrs
mov
mov
dec
sub
rol
out
imul
sbb
das
jl
aad
nop
pop
and
jb
or
dec
cli
jns
repz
lds
xchg
mov
xchg
int3
sub
sti
arpl
lods
jne
loop
ret
mov
mov
jmp
fstpt
int3
sbb
sub
xchg
pop
xor
out
jo
add
dec
out
jae
xchg
test
roll
sub
sbb
sbb
insb
xsave
mov
cmp
out
jecxz
mov
push
adc
or
or
and
mov
out
notl
and
andl
adc
and
dec
push
aam
sub
jmp
pop
jl
pop
xchg
dec
in
sbb
cmc
push
pop
mull
jb
enter
mov
dec
and
jno
mov
fdivl
movsb
inc
mov
inc
cli
cmp
jae
sbb
xchg
lods
pusha
push
jb
cli
fmul
outsb
inc
icebp
mov
pop
cmpsl
sub
int3
outsb
add
loope
jne
lods
aas
sarb
xchg
std
mov
in
adc
adcl
jp
icebp
movsl
adc
mov
push
ror
xchg
or
push
pusha
loopne
jle
xor
mov
aam
cmp
movsl
cld
sbb
aad
pushf
push
mov
in
inc
inc
repz
clc
mov
dec
arpl
cs
mov
mov
inc
out
fadds
rcr
cmp
repnz
lret
mov
bts
je
bndstx
lods
shlb
mov
outsb
iret
cmp
or
insl
pop
scas
dec
lcall
sbb
and
adcb
inc
test
cmp
cwtl
pop
jp
cmp
xchg
pushf
mov
loop
aaa
or
sti
jne
xor
adc
loope
xor
ljmp
jnp
pop
xlat
test
sub
or
stos
and
dec
inc
pop
stc
adc
aaa
rcrl
mov
rcl
jo
fidivrl
mov
rcrl
insb
sbb
xchg
fcomi
mov
subb
push
xlat
icebp
adc
pop
lahf
sbb
arpl
cmp
in
push
mov
cld
xchg
das
movsb
sbb
test
outsl
jns
lods
push
out
fwait
or
das
mov
imul
xchg
xchg
mov
mov
frstor
into
jb
sbb
out
jmp
mov
inc
sbb
mov
aam
cltd
sahf
stos
cli
push
inc
push
xor
je
fchs
push
push
push
aas
ffreep
cmp
pusha
mov
pop
rolb
jns
cwtl
lcall
shlb
imul
xchg
jne
or
cld
jp
and
jp
clc
jae
sbb
add
movsb
mov
inc
leave
stc
jnp
jae
xor
sti
jns
mov
aam
adc
insl
dec
fistl
in
stos
loopne
in
jb
fadd
out
scas
lea
mov
ja
lahf
mov
or
mov
scas
inc
imul
dec
jecxz
mov
in
mov
jns
jle
insl
test
or
push
cmpsl
out
cli
sub
adc
movsb
test
xchg
cs
add
jae
sbb
push
jae
js
je
push
xor
test
sub
insb
cs
sub
pop
sarb
into
jmp
ret
sbb
dec
push
outsl
dec
dec
rcl
out
or
repz
fidivrl
insb
xor
pop
mov
pop
outsb
sbb
or
mov
lods
rep
movsl
out
pop
jg
decl
movsl
mov
jecxz
cmpsb
into
sbb
and
jp
les
sbb
jp
fisubs
nop
mov
push
xor
fidivs
push
inc
movsb
mov
fsubrl
or
ds
add
push
mov
mov
push
hlt
mov
add
add
fidivrl
add
sub
pop
mov
jg
mov
add
movsb
xor
inc
lret
rorl
mov
fwait
jg
and
out
arpl
roll
mov
std
test
faddl
es
test
js
mov
xchg
or
cmp
cmp
inc
mov
jno
sbb
push
inc
and
jae
push
mov
adc
inc
xor
test
in
xchg
xchg
xor
jle
mov
mov
pop
mov
and
std
jecxz
mov
mov
jle
push
loope
neg
jge
stos
fs
loop
inc
repz
je
imul
jae
lcall
push
scas
out
mov
mov
sbb
lock
ds
jne
scas
repnz
jae
enter
dec
xor
pushf
inc
sbb
fistpl
sub
and
frstor
mov
pop
lock
inc
or
insb
aad
add
mov
call
inc
or
mov
in
les
cmp
test
adc
loope
ret
jmp
jecxz
jl
scas
in
cld
lcall
cwtl
out
push
test
mov
mov
filds
pop
pusha
mov
pop
or
fwait
and
pop
outsb
andl
mov
outsb
scas
inc
out
or
mov
xor
js
xor
adc
movsl
stos
pop
popf
xchg
shrl
inc
jo
clc
dec
cmc
xor
in
lods
push
adc
pop
xor
es
push
je
les
xchg
lds
pop
xchg
push
jp
pop
mov
bound
inc
xchg
fadds
and
mov
mov
mov
jbe
mov
push
push
scas
inc
cmp
lcall
dec
dec
lret
add
mov
xor
adc
fwait
js
stos
pusha
test
imul
cwtl
xor
push
notl
xchg
push
sbb
jns
cmpsl
pop
sbb
pop
lahf
sbbl
and
notl
into
push
call
push
cltd
inc
rcr
outsl
fildl
pop
or
fstpt
and
push
xchg
lcall
xchg
mov
out
adc
push
in
inc
mov
pop
fnstenv
mov
je
into
xor
nop
rsqrtps
adc
shrl
outsl
repz
jne
mov
mov
jl
and
fimuls
mov
add
sbb
negb
das
sub
push
stos
add
scas
call
addr16
data16
ss
fwait
push
imul
xor
sub
inc
sbbl
test
shr
mov
or
push
fisubrl
cs
adc
and
inc
cmp
xor
sbb
jns
in
push
lock
mov
add
pop
adc
xor
cli
imul
dec
sbb
ret
js
jge
fwait
jae
arpl
jae
out
push
adc
mov
scas
jnp
and
movsl
inc
sub
pop
add
je
leave
jne
jno
push
inc
sti
push
in
in
lret
int3
pop
adc
push
add
xchg
into
sbb
shr
dec
push
add
mov
jns
aad
mov
lea
stos
sub
xor
xchg
sbb
inc
push
ret
xor
daa
fisubrl
pop
insl
sti
scas
and
sahf
sbb
lods
ret
xor
loopne
dec
and
outsl
and
sub
lcall
in
inc
stos
int3
push
jp
test
in
cmp
sub
dec
dec
dec
jge
xchg
push
stos
in
popf
int3
icebp
inc
cld
sbb
sbb
rorb
push
mov
stos
or
lret
repnz
outsb
loope
cltd
xor
jns
inc
cs
rorb
mov
sub
movsb
xor
dec
stc
enter
outsl
adc
push
push
sub
add
inc
das
inc
dec
shl
sub
xor
cli
jle
fiadds
clc
fwait
sbb
inc
gs
mov
pop
mov
jle
mov
or
mov
lock
insb
movsb
cmp
xchg
adc
aad
mov
in
cmp
std
jmp
les
dec
add
lea
mov
and
jmp
inc
into
nop
fisubl
add
jns
dec
stos
inc
cmpsl
push
sub
test
scas
jno
aad
sti
inc
add
mov
mov
add
stc
mov
mov
add
lret
lret
stos
mov
scas
inc
movsb
scas
lret
inc
int
testl
push
fs
jl
popf
or
and
stc
fdivr
push
fmul
popl
into
lods
fnstenv
icebp
aaa
cltd
mov
pushf
mov
lds
dec
pop
hlt
pop
test
cmp
and
push
aam
jne
les
les
inc
loopne
test
roll
push
xchg
add
adc
lret
and
std
in
mov
sub
adcl
std
aad
popa
stc
cltd
sub
inc
daa
and
inc
mov
mov
pop
fldcw
or
mov
mov
cmp
cmp
je
out
add
adc
cmc
jo
hlt
addr16
pop
fidivrs
dec
jmp
ljmp
xchg
mov
je
hlt
mov
ss
dec
mov
inc
and
lret
mov
adc
aam
lahf
sbb
fisttps
in
sub
inc
cmpb
in
shl
and
nop
cmp
shrl
loop
mov
push
mov
out
pop
add
xchg
push
jne
adcb
or
xchg
aas
add
mov
arpl
push
or
hlt
push
shrl
lods
sbb
lahf
mov
addr16
popa
and
fiaddl
xchg
pop
mov
adc
mov
mov
out
imul
aaa
std
lds
inc
nop
out
loopne
sbb
lods
ret
addr16
mov
lret
xchg
pop
push
mov
push
mov
sbb
js
aam
mov
clc
add
cmpsb
inc
stos
insl
jnp
dec
mov
fdivr
lods
icebp
mov
inc
test
mov
fwait
cs
xor
sti
cli
and
inc
add
mov
and
mov
lea
cmp
cmc
xchg
mov
inc
dec
mov
jg
xor
mov
cmpl
nop
jge
adc
scas
sbb
sbb
jecxz
aad
sbb
rcrl
adc
fcompl
test
rcl
and
int3
adc
insl
jmp
xor
shlb
add
sub
sub
ffreep
scas
and
cmp
js
cmpsb
lock
sub
xor
out
aaa
fldlg2
add
std
aad
or
fistl
or
aaa
es
cmpsl
addr16
inc
leave
fnstcw
cli
sti
or
sahf
out
adc
and
jno
pusha
mov
and
in
out
roll
adc
mov
std
adc
sub
scas
mov
scas
scas
dec
arpl
adc
push
inc
movb
je
mov
push
pop
jge
fisubrs
repnz
lods
dec
ljmp
mov
aam
inc
aas
jns
mov
push
mov
add
addl
into
pop
out
jno
lods
sbb
ret
xor
and
loope
leave
cltd
cmp
adc
mov
mov
xchg
push
inc
or
inc
lret
shlb
adc
in
xor
xor
push
push
in
test
repz
fldenv
or
movsb
pop
sub
cmp
add
test
pop
loopne
or
mov
mov
and
xchg
pop
icebp
movsb
cmp
push
adc
mov
mov
ja
mov
fdivp
call
add
push
out
and
ret
push
push
cld
push
ret
sbb
dec
mov
fscale
movsb
adcl
clc
leave
rcll
in
mov
fcmove
mov
and
cwtl
dec
je
push
mov
pop
xor
cmp
inc
push
jl
mov
sahf
sbb
in
imul
mov
inc
dec
ds
push
movsb
out
mov
lock
pop
cmp
rorb
ds
cs
xchg
cmp
push
add
pop
cli
and
fsub
jne
fwait
std
leave
pusha
das
jne
jmp
test
stc
mov
push
sti
stos
xchg
test
outsb
mov
hlt
and
inc
and
call
add
fiadds
sub
aas
jbe
jmp
js
inc
arpl
jb
add
mov
lahf
mov
adc
nop
ret
ss
or
pop
xor
outsb
add
add
mov
imul
sbb
aad
mov
jnp
xchg
aad
and
sahf
imul
sub
push
pop
jno
or
fsubl
outsl
popl
cmpsb
pushf
xchg
sahf
aam
out
cmp
mov
dec
cmp
push
jae
and
stos
test
icebp
dec
mov
jns
ss
sbb
movsb
addr16
mov
and
pop
rcll
enter
add
push
xor
test
push
push
fidivrs
mov
push
test
aad
xor
aaa
fnstenv
push
adc
jno
mov
push
xchg
adc
sub
scas
mov
test
fnstenv
add
scas
mov
loopne
ret
push
mov
jne
jmp
push
cmp
aaa
loop
je
and
push
aas
cwtl
xor
ja
call
or
xlat
int
pop
testb
aas
mov
enter
scas
jp
xlat
fcoml
lods
sbb
cwtl
clc
sbb
out
test
inc
int3
push
in
jp
repz
mov
xor
mov
stos
addl
jns
imul
fwait
xchg
stos
or
lds
mov
imul
mov
leave
insb
mov
xor
les
jmp
mov
mov
aad
adcl
dec
mov
stos
xchg
xor
cmc
xchg
sub
enter
js
hlt
mov
sbb
sbb
pop
dec
lods
shll
ror
xchg
sbbb
xchg
int
dec
mov
aam
jnp
lods
pop
xchg
ja
mov
fsts
andb
jl
arpl
push
aaa
data16
outsb
test
pop
dec
mov
loopne
insb
sub
adc
imul
mov
pushf
pop
imul
scas
mov
cmc
cmc
test
fcmovne
lret
inc
outsb
mov
mov
adc
or
lret
jg
xchg
sub
pop
insl
cmpsb
adc
push
inc
hlt
addr16
aaa
in
test
rolb
cli
and
push
add
jnp
pop
test
je
pop
data16
mov
pop
mov
or
sti
xchg
or
mov
sub
cmp
mov
jp
int3
arpl
cmp
push
cmc
movsb
mov
and
and
push
adc
or
repnz
jecxz
imul
mov
or
js
mov
dec
inc
jb
jno
mulb
pushf
jae
fsubl
dec
imul
mov
mov
scas
mov
dec
inc
cli
outsb
and
inc
mov
mov
stos
adc
inc
mov
sbb
and
sbbb
adc
aas
addl
add
xchg
out
cmp
stc
sbb
mov
pop
shrb
cmp
outsb
data16
andb
mov
fsts
fiadds
pop
ss
fnsave
adc
cmp
fs
lahf
mov
loopne
jmp
cmp
test
sub
or
shl
hlt
mov
push
cmp
fs
aam
push
mov
sbb
cmc
fdivl
dec
pop
and
mov
mov
cmp
jg
inc
ja
imull
mov
mov
popf
xor
xor
adc
mov
xchg
sbb
ss
jl
or
test
mov
xchg
push
xor
jnp
push
filds
imul
mov
xchg
mov
push
pop
and
test
mov
sub
pusha
sbb
scas
dec
and
stos
inc
pop
pop
int
outsl
scas
mov
das
pop
jne
mov
jns
imul
mov
push
jae
and
sub
fisubrs
lea
jp,pn
jb
addr16
add
xorb
pop
lods
xor
stc
rol
iret
bound
mov
imul
mov
lcall
mov
and
cmc
adc
or
das
mov
adc
mov
insl
sahf
daa
mov
sbb
in
mov
mov
and
mov
jo
pushf
mov
and
fsubs
mov
and
ret
aam
mov
ficoml
xor
test
mov
in
cli
xchg
push
inc
inc
sbb
js
scas
jbe
fwait
fs
xchg
ss
rorl
shrl
addr16
outsb
adc
mov
inc
outsb
enter
lcall
ror
stos
cmp
push
mov
inc
xor
mov
pop
add
adc
sbb
jmp
xorb
cmc
mov
jecxz
xchg
stc
jl
sub
xchg
fidivl
out
fwait
ret
cmp
orl
inc
movsb
fldcw
pop
fst
test
jmp
mov
frstor
ja
gs
xchg
and
inc
fs
das
shl
in
pop
mov
push
jle,pn
pusha
sbbb
mov
mov
lcall
xor
xchg
inc
movsl
sbb
mov
mov
lret
push
push
pop
inc
arpl
jns
icebp
xlat
repz
mov
xchg
pusha
pop
stc
jne
out
movsb
pop
andl
enter
repnz
insl
or
and
or
subb
mov
xchg
imul
faddl
jno
jb
xrelease
adc
lcall
lahf
inc
call
hlt
jecxz
xchg
imul
orb
movl
nop
jae
jl
push
mov
test
dec
in
sahf
sbb
jo
push
insb
fistps
mov
loope
sbb
fidivl
push
out
ljmp
out
loop
or
mov
mov
bound
divl
mov
dec
jno
xlat
movsb
lds
repz
sbb
inc
or
adc
stos
adc
addr16
and
and
and
dec
mov
stos
shlb
mov
mov
mov
add
out
add
and
ret
push
cmpsl
std
xor
adc
sbbl
and
clc
push
sub
test
mov
xchg
testl
xchg
mov
and
hlt
mov
adc
addr16
mov
aas
les
cmp
pop
shl
mov
xor
adc
mov
push
mov
xchg
add
sbb
insl
push
cli
aad
loopne
repz
sub
stos
pop
jle
inc
in
cmpsl
test
xchg
or
push
je
bound
mov
pusha
lods
mov
xor
inc
bound
cmc
xchg
bound
dec
xor
adc
sti
xchg
outsl
mov
inc
ljmp
movsl
inc
sahf
int
ds
fsts
push
inc
xlat
call
fiadds
dec
loop
and
xor
fs
inc
stc
push
dec
and
inc
push
test
js
mov
mov
push
rcl
dec
adc
ret
jp
push
mov
mov
lods
sbb
sub
xor
iret
mov
sarb
aad
incl
cmp
jo
pop
push
ljmp
pusha
jl
xchg
sbb
std
fdivrs
out
dec
fcomps
insl
jns
sbb
out
add
lret
xor
imul
mov
stos
xchg
mov
or
inc
test
dec
sub
sub
enter
test
sbb
mov
cmc
insl
xor
dec
inc
sub
dec
push
or
mov
mov
cmovnp
mov
add
lret
cmpsb
shr
mov
dec
outsb
jle
add
mov
jo
loope
sti
or
clc
pop
pop
aaa
xchg
dec
pop
or
push
cld
push
xchg
mov
xchg
and
adc
outsb
add
mov
sub
cmp
ljmp
and
mov
jmp
sub
es
lea
jg
in
jge
jns
jmp
dec
cmpsl
cmp
adc
fcomps
js
push
pusha
inc
mov
jl
cld
jae
stos
or
lds
rorl
mov
and
xchg
inc
cli
or
mov
lret
ret
xor
cmp
insl
mov
pop
push
jg
arpl
inc
sahf
loope
in
cld
fisttpl
clc
pop
repz
cmp
mov
add
push
das
sarb
mov
je
jp
movsb
dec
enter
mov
inc
leave
flds
mov
sub
push
sbb
xchg
jno
mov
fdivl
or
push
inc
inc
dec
mov
push
dec
xchg
outsb
sbb
outsb
cmp
or
sbb
ret
adc
push
cmp
jae
and
or
cmc
and
mov
xor
lahf
mov
jnp
shr
add
call
pop
scas
sbb
sahf
mov
stc
pop
addr16
cli
jne
mov
add
pop
fimuls
fdivr
mov
rcrb
add
sti
pop
sub
push
xlat
sub
sti
pusha
dec
sub
mov
sub
inc
test
dec
int
lahf
inc
popf
xchg
add
jno
push
sub
xor
aaa
add
xchg
add
or
adc
mov
jg
jns
add
das
pop
sbb
int
adc
mov
dec
add
pop
fdivs
and
insl
xchg
cli
icebp
pop
and
push
mov
test
out
mov
push
xchg
test
cs
scas
and
and
lret
fdivs
out
mov
xchg
insb
xlat
jno
jmp
repz
cmp
shrl
pop
in
mov
ficoml
cmpsl
movsl
adc
jnp
ja
mov
in
test
das
cltd
sbb
cli
dec
pop
sub
mov
ret
mov
sti
and
sub
and
mov
inc
jne
xor
ja
push
ds
test
fs
enter
push
dec
sub
xor
aam
andl
or
repnz
or
mov
pop
push
into
fsubr
pushl
mov
cmp
fistl
adc
fstpl
pop
xor
push
jmp
xchg
sbb
pop
push
inc
inc
insb
or
sbb
inc
pop
and
jno
add
cmp
pop
pusha
xchg
adc
xor
pop
scas
push
mov
cmp
ja
int3
sahf
pusha
push
or
jnp
pop
jmp
sub
repz
pop
xchg
sbb
xchg
sub
push
scas
lods
cmp
imul
and
in
pop
cmc
addl
pop
sti
jne
inc
pop
sbb
lds
cltd
lock
push
sub
sbb
call
sub
fdivl
xor
jg
mov
arpl
push
leave
dec
in
std
popa
adc
fdiv
mov
adc
cld
pusha
jl
adc
shrl
xor
test
lcall
mov
std
mov
or
sub
fadd
adc
push
push
popw
scas
xchg
pop
pop
cmc
mov
xor
mov
lar
bound
dec
test
mov
in
gs
xchg
cmp
jne
push
mov
dec
dec
enter
dec
mov
xchg
xchg
imul
stos
push
js
gs
sub
cmc
inc
lret
ds
push
xchg
cmp
or
mov
iret
shll
jns
fsubl
jp
stc
imul
sbb
sahf
xchg
decl
fstpt
lods
jno
inc
mov
popa
or
fsub
rcrl
push
adc
rcrl
aad
fwait
sub
pop
xorb
xchg
outsb
jl
lret
adc
cmc
icebp
dec
mov
adc
leave
mov
pop
jb
jge
dec
sub
cmp
dec
aas
dec
jmp
out
lahf
or
fnstenv
xor
aas
aaa
push
js
aaa
pop
les
sbbb
jmp
js
popa
xlat
or
xor
stos
cmp
xor
outsl
jmp
mov
les
mov
jecxz
mov
push
shll
pop
push
mov
out
shld
out
ja
add
jge
jns
fists
das
mov
xchg
ret
and
jecxz
aas
cltd
call
idivl
mov
mov
mov
dec
stc
mov
int
stos
jne
cmp
lods
aaa
push
fisttps
jmp
lret
rcr
jmp
daa
loope
cwtl
push
outsb
dec
lcall
ds
mov
data16
pop
xsha1
cmpsb
mov
ja
inc
lcall
adc
adc
inc
addb
pop
mov
stc
xlat
xchg
sbb
or
outsl
addb
fwait
jl
fnstenv
mov
cmpsl
jne
mov
scas
inc
inc
scas
dec
adc
sahf
sbb
in
sub
pop
or
lock
enter
imulb
add
dec
in
icebp
lods
pop
out
imul
nop
push
mov
mov
push
mov
stos
cs
shll
rcl
out
sub
ret
sub
sbb
popf
jo
jnp
jecxz
and
out
insl
sbb
pop
xorb
inc
mov
adc
sbbb
xchg
push
jecxz
int
cmp
addr16
xor
jp
xor
lret
push
enter
repz
adc
jnp
mov
movsl
nop
mov
pop
xor
je
ja
cmp
add
inc
pop
or
insb
cmp
lock
or
pop
mov
cmp
cmp
xor
repz
mov
aad
inc
in
stos
stc
add
push
cmpsl
push
adc
and
dec
sbb
movsb
icebp
dec
jle
aaa
js
sub
cmp
fnstsw
int
cwtl
push
into
addr16
jb
add
xchg
cmpsb
and
into
inc
stc
data16
jno
jae
inc
inc
mov
dec
rorb
xor
sbb
dec
push
leave
popa
lds
sbbl
push
fs
lds
lock
mov
sub
and
push
inc
gs
jns
add
stos
push
xor
ret
fucomip
pop
sbb
enter
fsubr
mov
jns
sti
and
cwtl
std
nop
movsl
notl
rolb
mov
mov
sarl
dec
pop
faddl
or
frstor
dec
jp
adc
and
stos
push
aas
push
in
push
test
push
fcomps
loope
pop
and
and
iret
mov
clc
push
inc
fs
arpl
inc
cwtl
arpl
dec
lret
push
hlt
cld
into
xor
ret
pushf
mov
aam
loopne
shll
js
repz
lret
add
xchg
push
pop
lret
and
repnz
outsb
mul
add
dec
jmp
cmpb
lods
sub
addl
inc
dec
push
hlt
aam
add
cwtl
test
in
add
je
xchg
data16
and
pushf
or
push
sbb
daa
scas
imul
sub
out
mov
sub
and
scas
in
scas
incb
lahf
add
shl
imul
roll
jbe
loop
aad
cmp
stos
add
push
lea
push
pop
divb
cmp
sysenter
dec
cmp
jp
pop
ds
mov
adc
and
pushf
cltd
ret
push
cltd
jp
push
push
je
andl
xchg
data16
mov
adc
or
ss
mov
cmp
mov
adc
out
or
and
xchg
xor
sbb
repnz
stos
ljmp
aaa
cmp
rorb
sbb
subl
xorb
testb
jns
sbb
imul
adc
shll
rcr
sub
sub
dec
fldcw
mov
aad
hlt
mov
inc
sahf
pop
push
sti
adc
sub
mov
push
pusha
cmp
or
or
mov
cmp
fmul
inc
lcall
repz
jle
pop
mov
sub
xor
ljmp
test
inc
sarb
in
pop
cmc
add
ficoml
sub
int3
push
and
mov
movsl
cli
cmp
pop
cmc
or
pop
aaa
push
jb
mov
lods
push
and
addb
repnz
out
mov
pushf
hlt
pop
mov
rorl
xchg
insb
aas
dec
xchg
and
mov
subl
insb
daa
cli
jns
and
mov
push
adc
fwait
xchg
daa
inc
fcoml
mov
fsubp
sbb
movsb
dec
loope
jb
daa
pop
fidivl
adc
addb
jmp
or
and
sbb
mov
jae
cld
outsl
sbb
xchg
leave
sbb
pushf
xchg
inc
pop
cltd
cltd
aam
out
push
clc
jae
adc
js
test
mov
aas
insb
lcall
mov
call
ss
cmp
adc
in
rcrb
fwait
cld
test
sub
shrl
lret
push
or
je
or
cmpsb
cmp
rol
ficomps
pop
cmp
pop
cmp
lock
mov
and
insl
cmp
push
rclb
cwtl
outsl
sbb
jno
inc
and
lds
es
jbe
xchg
pop
adc
test
test
sti
xchg
dec
adc
out
push
fstpl
push
fwait
addr16
pop
lret
jmp
andl
call
or
outsl
out
xor
mov
pop
out
cmp
gs
outsl
movb
push
dec
cmc
adc
arpl
lcall
xchg
out
cmpb
cmp
enter
xchg
scas
inc
jg
fidivrl
into
or
gs
sbb
and
std
js
xor
js
sub
push
mov
aad
mov
jne
and
rorb
pusha
adc
push
jge
stos
mov
lds
shll
jecxz
sahf
xchg
and
lcall
popa
mov
loope
imulb
out
in
pop
negb
dec
jge
xchg
adc
aam
repnz
fists
in
jo
icebp
jns
inc
lock
cmpsb
jo
out
xchg
lea
adc
or
in
mov
xchg
cs
inc
jmp
shrl
test
hlt
data16
xor
mov
mov
mov
out
outsb
xlat
add
or
stos
call
mov
pop
out
outsb
sub
cmp
push
test
jge
mov
lock
xor
ret
pop
cmp
in
rorl
xor
ret
inc
add
or
xchg
jge
les
das
inc
cli
pushf
call
gs
out
xlat
pop
adc
xor
daa
xchg
test
mov
dec
jo
xlat
addr16
leave
scas
sub
lods
or
fisttpll
jae
mov
or
ss
inc
mov
pop
mov
into
pop
cmpsb
mov
cmp
cmpsl
loope
mov
cmp
mov
aam
cs
movl
aam
clc
jae
andb
cmp
jecxz
stos
adc
push
icebp
or
pop
mov
out
adc
jmp
push
xchg
xor
pushf
das
xlat
shl
pop
in
fistps
dec
pop
sbb
arpl
mov
pop
scas
jle
xor
movsb
xlat
data16
cwtl
ficomps
dec
dec
xchg
jl
cmp
adc
sti
jle
jns
bound
xor
ss
dec
fisttpll
rcl
int
das
mov
push
mov
add
test
adc
fwait
cld
xor
out
dec
jl
mov
jp
inc
dec
cmp
loope
nop
sbbb
push
jne
lock
jae
jp
call
add
call
or
fmuls
andl
icebp
xor
push
js
ljmp
jg
insb
mov
mov
push
mov
fdivrl
cmpsb
outsl
adc
stos
fldcw
push
aad
ljmp
push
test
cwtl
or
push
loope
xchg
or
jo
js
fnstenv
adcl
outsl
imul
dec
bound
xor
cmp
into
fimuls
push
cmpsb
cmp
sbb
into
mov
push
lret
adc
push
push
icebp
inc
cld
add
ljmp
jb
dec
xchg
imul
filds
je
sub
xor
aaa
cltd
pop
hlt
int3
stos
fcoms
dec
jno
xor
out
mov
xorl
pop
jb
lea
fwait
loopne
inc
jecxz
pop
hlt
imul
jnp
testl
outsb
inc
and
dec
loope
rcl
jl
push
dec
and
push
lods
adc
push
cmpps
mov
jge
icebp
sub
push
addr16
test
mov
ljmp
xor
fnsave
pop
movsl
push
lea
fidivrs
add
pop
sbb
stos
push
movsl
faddl
mov
dec
jl
lcall
addr16
add
jle
jne
mov
lret
mov
hlt
pop
mov
dec
rolb
jg
test
popa
and
scas
mov
lds
enter
jecxz
inc
lods
push
jle
push
sti
movnti
in
push
popf
lock
fdivl
mov
lret
dec
mul
ja
imul
sbbb
jge
je
iret
in
add
jecxz
rorl
mov
dec
mov
mov
aaa
or
fldl
insl
mov
sbb
lret
nop
mov
test
rcll
xchg
mull
test
add
mov
jno
mov
lcall
and
in
jae
mov
jg
in
lock
cmpsb
xor
in
push
push
sub
stc
and
mov
out
mov
sub
into
inc
fnstcw
lret
mov
jno
jge
rclb
jne
jae
fwait
and
xor
pop
sbb
js
xchg
arpl
jle
enter
and
jnp
mov
rcrl
jbe
mov
dec
jnp
in
les
loopne
into
adc
dec
add
mov
sahf
push
push
add
repz
inc
lahf
pop
dec
cmp
cmp
xchg
ja
jecxz
mov
lea
cmp
sub
outsl
xchg
orb
fwait
push
or
fistps
scas
test
push
fs
int
test
sub
sub
ds
stos
int
rcrb
sti
sbb
adc
jo
jno
out
cmpsb
jno
inc
and
rcr
es
mov
out
clc
cmp
lcall
cmp
std
sahf
mov
cld
sti
scas
cli
inc
mov
fnstenv
inc
ljmp
push
addr16
fisubs
sub
mov
ret
xchg
adc
cmp
dec
mov
adc
jns
cmc
lock
sbb
insb
arpl
call
fnstsw
dec
lods
mov
aam
mov
or
cmp
adc
xor
cld
sbb
insl
add
mov
rcl
jno
mov
adc
mov
insb
add
movsl
sbb
sub
adc
aam
mov
or
scas
insl
mov
jl
fists
or
aaa
jo
and
out
mov
pop
sub
sbb
rol
cmp
cmpsl
xchg
pop
or
cmp
sub
adc
cmpsb
jg
ffreep
stos
sbb
imul
sbb
adc
cmp
cltd
test
dec
inc
add
shlb
jb
icebp
inc
mov
pop
and
pop
outsb
cmp
cmpl
ss
jg
repnz
insl
daa
lock
dec
imul
xchg
in
stos
inc
mov
fbld
pop
icebp
jnp
pop
mov
dec
fnstsw
iret
into
jle
adc
cmp
aam
mov
iret
mov
or
ficoml
push
pop
jge
shrb
in
push
xchg
jno
mov
in
push
rcrb
scas
jmp
adc
scas
lock
ds
test
pop
xchg
je
ja
mov
mov
mov
push
leave
pop
out
dec
fs
test
aad
dec
mov
out
popa
clc
pop
fdivrl
cmovge
adc
push
sahf
push
pop
mov
enter
mov
pop
jl
loopne
cltd
sbb
int
pop
pop
ret
int
lds
pop
rcr
int
das
aaa
lret
xor
add
or
xchg
jo
xor
popa
dec
push
loope
addl
mov
lahf
jle
push
popa
addl
push
ja
inc
push
fcompl
pop
leave
inc
ljmp
call
loopne
ss
loop
pop
lahf
mov
scas
test
mov
xor
mov
lret
addr16
jg,pn
push
push
mov
jge
mov
jmp
mov
gs
mov
inc
insl
mov
test
fdivl
jecxz
mov
dec
fdivr
mov
fidivl
push
sub
or
pop
outsl
aam
inc
repz
es
inc
in
std
ja
pop
dec
iret
sarb
or
push
mov
inc
jge
into
lcall
jp
mov
xor
out
lret
loop
fstl
inc
shlb
add
jge
aad
aad
pop
dec
pushf
lock
or
jmp
imul
shl
inc
push
aas
pop
lods
dec
pusha
and
cli
into
dec
pop
arpl
repnz
jge
pop
enter
push
insb
xlat
cmp
dec
adc
xor
xorl
mov
fnclex
daa
cmp
mov
dec
adc
shlb
stos
mov
int
jp
icebp
sub
lret
dec
mov
test
push
repnz
xor
lea
cltd
repz
and
inc
out
dec
or
lcall
or
xor
dec
rorl
scas
stc
dec
cmp
adc
jo
adc
mov
bnd
or
testb
pushf
mov
adc
push
and
pop
dec
mov
jne
sub
sub
mov
sbb
adc
fdivl
mov
mov
sarl
data16
pop
jmp
and
add
jmp
lds
mov
pop
outsb
inc
mov
popa
xor
lcall
aam
fidivrl
pop
xchg
adc
lods
adc
stos
je
addl
dec
push
stc
jl
mov
fwait
mov
das
cmp
aad
mov
cwtl
out
testb
pushf
aas
sub
mov
popa
test
xor
cmp
std
xchg
dec
and
aaa
inc
fucomp
stos
push
lds
add
lret
jmp
int3
inc
test
mov
push
pop
xchg
outsl
mov
lret
lods
test
mov
push
lret
int3
test
jae
ds
push
out
or
lret
xchg
stos
add
mov
mov
daa
mov
xlat
sub
sub
aad
mov
jg
fwait
and
xchg
xor
add
aam
xor
mov
pusha
test
mov
xor
push
jns
inc
fs
sub
xor
inc
sbb
or
imul
sub
xchg
movsb
fiaddl
cmp
gs
xor
jae
rcrb
pop
leave
mov
loopne
shr
hlt
fsts
dec
imul
cmpsl
daa
mov
js
sub
aas
mov
fdivrl
fxch
mov
enter
les
mov
jae
movsl
clc
popa
cld
mov
mov
xchg
push
pop
xor
flds
ficomps
cmc
sbb
pop
dec
xchg
cmp
lds
imul
iret
fstpt
mov
mov
imul
push
pop
aaa
std
leave
dec
test
push
stos
outsb
dec
jb
or
repnz
adc
push
cmp
inc
cmpsb
dec
int3
and
ret
mov
out
mov
jne
fidivl
cmp
stos
dec
cmp
icebp
pop
lahf
cmpsb
ret
stc
aad
xor
sbb
push
xor
bound
adc
shll
adc
inc
dec
cwtl
stos
dec
shll
fs
cs
test
mov
pop
in
imul
cld
pushf
jno
xor
and
add
adc
mov
add
pop
xchg
or
lcall
sti
sub
jp
mov
js
movsl
adc
mov
sbb
fisubl
xlat
aaa
clc
fsubs
push
iret
mov
add
jns
add
jmp
jae
lods
mov
xchg
or
mov
add
jbe
dec
popa
mov
lret
mov
and
inc
pusha
sti
mov
stos
repnz
add
cmp
ss
pop
mov
and
mov
pushf
daa
mov
jmp
jg
pop
adc
aad
pop
mov
test
repz
and
and
fldpi
icebp
lret
push
out
or
mov
cmp
dec
add
mov
cmp
push
rol
push
or
shlb
push
jg
ret
mov
arpl
mov
popa
lahf
xor
adc
or
enter
loopne
lahf
sbb
icebp
sbb
decb
mov
jge
pop
and
int3
cmc
cmp
sbb
mov
fcoms
xchg
fadds
mov
push
push
pushf
outsb
push
push
scas
daa
inc
test
fnsave
inc
imulb
and
lret
mov
mov
mov
lea
sahf
lea
inc
je
xchg
cmpsl
adc
sahf
and
xchg
out
outsl
sbb
add
dec
insb
xor
sub
sub
clc
sbb
mov
dec
cmp
andl
push
jnp
push
shrb
add
inc
push
mov
inc
mov
and
sbb
jbe
in
aam
idivb
test
mov
aam
lcall
pop
daa
data16
and
and
mov
stos
mov
psubusw
cmpsb
adcl
les
mov
sti
adc
and
pop
hlt
in
ds
pop
cmp
dec
rclb
cmpsb
les
outsl
xchg
mov
mov
stc
mov
push
data16
push
and
into
dec
idivb
jmp
imul
fdivs
int
sub
jmp
fmul
mov
push
mov
js
xor
pop
ret
xor
repz
and
call
cmp
pop
nop
pop
cmp
mov
xor
adc
fimuls
into
loop
sbb
into
cwtl
repnz
jne
push
addl
push
cli
pop
orb
dec
imul
test
mov
add
sub
idiv
aaa
add
inc
ficoms
lahf
pusha
imul
lock
push
insl
add
mov
adc
xor
inc
fwait
adc
cwtl
addl
imull
shrl
fs
in
enter
jno
into
mov
jl
imul
mov
pop
add
cmp
cs
and
inc
cmpsl
ret
shlb
or
pusha
pop
pop
push
inc
adc
cmp
in
icebp
fsts
dec
inc
jno
aas
and
fisubrs
test
cmpsb
out
add
mov
enter
adc
fnstcw
sbb
bound
inc
cld
std
pop
rcrb
cli
mov
mov
and
cmp
rclb
mov
mov
push
aaa
stos
dec
jne
lret
inc
push
push
pop
dec
push
data16
push
daa
push
outsl
inc
mov
lret
xchg
fldenv
sub
or
jmp
jecxz
inc
cli
data16
xchg
and
pop
pop
inc
dec
test
or
pop
nop
push
stos
cmp
or
mov
mov
insb
mov
dec
push
xlat
add
insl
jnp
pop
shll
mov
push
xchg
subb
dec
repz
sbb
clc
addb
scas
push
out
fistpll
dec
cmp
push
push
sub
out
mov
mov
adc
es
sub
leave
das
lds
lods
dec
in
cltd
adc
xor
sbb
aas
mov
sub
cmc
sbb
mov
cmpsl
nop
jae
dec
movsb
sub
xor
push
xchg
mov
fidivrl
adc
pop
test
jae
jle
push
test
in
add
jae
push
mov
lret
or
adc
adc
jg
jp
rclb
fidivrl
mov
fcoml
mov
ja
dec
loopne
cmp
fidivs
mov
inc
adc
xchg
stos
fcmovb
insb
cmc
mov
sti
add
mov
jbe
xchg
xor
nop
imul
in
out
subl
subl
add
scas
mov
test
jle
mov
movsl
xor
mov
adc
lret
cwtl
and
in
and
xchg
pop
mov
out
mov
mov
xor
decb
sarb
pop
jne
sbb
mov
mov
and
gs
or
mov
or
mov
or
or
inc
jns
ds
sub
adc
dec
cmp
sahf
xor
sbb
add
mov
push
mov
mov
mov
dec
fsubs
pop
pop
sahf
andl
lcall
jmp
cmp
stc
push
jl
xorb
fwait
shll
fimull
movsl
test
pop
iret
jb
sti
sbb
gs
inc
cmpl
inc
inc
fnstenv
loop
scas
enter
cmp
scas
call
cmp
and
test
xor
incl
adc
and
arpl
jno
out
mov
test
jnp
cmpsl
add
push
test
clc
daa
loop
aad
mov
lods
inc
push
sbb
cmp
repz
sti
add
pusha
repnz
or
fsubrs
jecxz
push
sbb
in
pop
js
xchg
aas
ret
mov
fstpl
rorb
adc
loopne
sahf
aas
sbb
and
jae
pushf
and
cmpsb
out
or
and
mov
in
xor
enter
lahf
push
jbe
pop
mov
pop
mov
push
ss
jecxz
xor
lods
or
pop
jbe
push
mov
loope
aad
mov
pop
hlt
ljmp
xor
adc
repz
gs
push
ja
or
pop
mov
mov
jnp
dec
lock
jae
mov
xor
repz
jmp
loope
test
ss
in
int3
xchg
jle
jno
pop
hlt
push
inc
iret
dec
sarl
lods
pop
xor
and
int3
test
aas
dec
pusha
gs
paddb
cld
addr16
jo
stc
inc
int
leave
cwtl
xchg
fwait
rcrl
js
jecxz
shrl
insb
aas
jb
in
insb
mov
pop
out
pop
cmp
fs
fwait
jmp
mov
jnp
xchg
mov
mov
pop
ds
jne
stos
xchg
dec
and
pop
mov
gs
push
xchg
enter
xchg
lcall
pusha
pop
aaa
xchg
xchg
mov
push
pop
lock
pop
ffree
clc
js
sub
mov
xor
cmp
cmp
pushf
inc
pop
xchg
sbb
mov
sti
adc
adcl
popf
mov
hlt
into
bound
les
xor
mov
mov
or
idiv
cld
adc
hlt
fisttpl
jnp
cltd
dec
push
bound
xor
in
sub
insb
dec
pop
push
jp
ret
hlt
dec
shlb
adc
lret
jmp
sbb
mov
icebp
out
mov
inc
testb
add
inc
push
insb
xchg
adc
or
and
mov
xchg
std
test
insb
sbb
mov
adc
sarb
push
out
fdivrl
xchg
popa
lock
jg
push
imul
ds
inc
pop
lea
mov
mov
inc
push
das
fwait
out
and
pop
dec
adc
mov
sub
adc
das
inc
inc
lds
movsl
loope
inc
inc
imul
aam
jp
mov
insl
inc
das
out
ljmp
mov
mov
jno
fmuls
lods
inc
or
dec
repnz
inc
inc
sbb
popa
adc
jl
fwait
stos
inc
or
jecxz
inc
push
dec
aad
call
sbb
insb
shrb
push
push
jno
adc
ljmp
xchg
stos
fstl
xchg
icebp
repnz
jnp
pop
outsb
addr16
mov
nop
mov
daa
jp
push
addr16
push
aas
out
push
imul
inc
inc
mov
ljmp
xchg
pop
cmp
test
jecxz
add
hlt
in
add
inc
xchg
add
inc
lea
add
pop
or
ss
jno
call
cmpsb
test
pop
cwtl
dec
fisttps
dec
add
loopne
shll
fwait
cmpsl
cwtl
call
repz
fbld
addb
mov
and
addr16
ds
or
leave
stc
cli
and
es
pop
pop
cwtl
nop
push
out
push
out
dec
in
sub
imul
push
cmp
sti
lahf
rcrb
fmuls
push
inc
jb
sub
and
hlt
sbb
ror
notb
mov
lahf
pop
loope
into
add
and
jbe
notb
sbb
test
pop
cli
push
dec
pushf
jmp
and
pop
adc
cmpsb
enter
rcr
xlat
inc
jl
mov
xchg
xchg
push
scas
and
je
mov
sub
setle
loope
out
into
sbb
insb
jge
ss
test
jecxz
push
repz
xor
xchg
add
sub
fwait
push
popf
xor
test
rcr
mov
adc
jp
mov
shrl
nop
mov
lret
dec
iret
push
leave
pop
shrl
aam
ljmp
jae
push
mov
xchg
iret
int
or
mov
mov
cmp
pop
hlt
xchg
and
fstpt
enter
je
mov
popf
xor
xchg
outsb
push
es
add
rorl
scas
pop
sbb
sub
sub
cwtl
rol
dec
pop
mov
xchg
insb
cmc
mov
outsl
ss
mov
test
scas
popa
out
testl
dec
dec
sub
rorl
inc
push
cltd
cmp
dec
imull
push
cmp
and
mov
out
xchg
xor
push
push
inc
cmp
mov
jb
in
in
js
xchg
rclb
xor
mov
dec
fcmovnb
call
bound
or
out
xlat
mov
jno
call
xchg
aaa
mov
add
pop
ss
fucom
mov
out
jbe
or
inc
cld
outsl
cmp
iret
pop
mov
inc
movsl
mov
push
movsb
inc
in
aaa
jae
xchg
cmp
insl
movsb
sahf
ss
dec
aad
xor
xchg
ljmp
mov
vzeroupper
mov
test
cwtl
int3
lret
je
push
out
push
mov
jmp
ret
int
xchg
les
mov
lods
mov
lods
lcall
mov
popf
add
mov
cmpsb
pop
scas
add
arpl
xchg
fdivs
add
jecxz
xchg
std
xchg
xor
mov
addr16
and
xorb
dec
iret
es
push
into
data16
bound
lcall
movsl
add
push
and
in
hlt
dec
lods
xchg
pop
orl
xchg
outsb
mov
xchg
add
jl
pop
add
adc
pop
fcomip
mov
out
mov
dec
imul
iret
fadds
cmp
mov
add
clc
inc
jnp
mov
aad
push
std
or
in
xchg
mov
lods
sub
or
xor
les
jne
xchg
and
and
push
inc
sub
and
in
lods
imul
or
push
mov
lods
push
jl
cmp
or
xor
cli
repz
enter
popf
lds
mov
stos
jmp
jae
push
cltd
popa
test
sbb
popf
notb
or
data16
adc
push
subl
scas
xchg
or
insb
test
cmpsb
add
dec
cmpsl
xchg
fldcw
rcrb
movsl
cmp
fwait
dec
pop
xchg
push
adcb
shrb
aam
mov
into
inc
mov
mov
loope
and
nop
xchg
pop
add
stos
mov
push
xchg
clc
cmp
imul
mov
jo
sbb
or
scas
in
mov
scas
push
xchg
mov
enter
mov
daa
inc
pop
cwtl
mov
mov
and
aad
or
sbb
sub
rorl
into
cmp
pop
jp
mov
push
push
fs
or
int
jg
inc
jle
inc
hlt
int3
sub
lcall
ficomps
sbb
ficoms
loop
mov
sub
dec
jae
pop
cmp
sarl
mov
dec
mov
add
adc
cmpl
inc
lock
dec
mov
cmp
xor
xchg
stos
xchg
testl
inc
dec
leave
xor
lret
sti
fistl
mov
imul
filds
sbb
mov
jl
sbb
ljmp
les
adc
jns
jns
cmpsl
dec
push
dec
sub
repz
lds
xorl
xchg
xor
repz
test
mov
sub
loope
cmp
jb
mov
int3
in
cmp
push
test
jge
jne
sbb
sahf
lods
push
dec
jne
scas
pop
jmp
pop
iret
cmp
or
test
arpl
call
mov
push
bound
xor
lea
push
mov
inc
cltd
xor
lcall
test
add
lock
mov
add
repnz
mov
mov
das
jae
sub
cmp
ret
dec
fistpl
add
ss
dec
fs
movsl
inc
cmp
pop
movsl
lods
push
adcb
jb
xor
sbb
ret
repnz
cltd
out
into
cmpsb
mov
dec
inc
push
idivl
gs
and
sti
adcl
jns
fdivrs
pushf
and
add
in
test
arpl
inc
fists
add
pop
push
xchg
sub
movsl
inc
mov
outsl
insb
jno
lods
sub
sahf
sub
psubsb
mov
in
enter
cmp
in
shlb
int
sti
or
or
lock
mov
pop
mov
and
cmpsb
mov
stc
loope
loopne
sbb
mov
sbb
mov
mov
sbb
inc
aaa
inc
or
ret
mov
loope
cld
sub
add
icebp
lahf
lods
and
nop
mov
and
andl
cwtl
and
jb
and
cmp
fistps
mov
hlt
frstor
pop
adc
pushf
mov
mov
inc
or
rcrl
mov
jae
loopne
xchg
push
sub
xorb
push
xor
jmp
push
cmp
enter
sbb
into
inc
ficomps
shlb
aam
mov
and
cs
pushf
sbb
xchg
mov
jno
xor
push
ror
push
sub
repz
sub
push
inc
into
sbb
js
bound
les
pop
shl
sahf
mov
aaa
cmpsl
test
repnz
lretw
xchg
add
sub
js
inc
orl
mov
lcall
add
int3
adc
std
cli
addr16
ss
fmull
push
call
out
adc
jbe
stc
jae
mov
inc
or
call
repnz
mov
arpl
xchg
popf
mov
lret
lock
push
cltd
pop
push
lock
mov
pusha
std
ljmp
sbb
fisubl
leave
das
outsb
and
dec
pop
inc
xchg
xchg
andl
test
int
dec
sbb
repz
inc
lret
clc
cld
mov
inc
std
jbe
xor
jle
repz
push
lods
lahf
xor
mov
test
ret
das
shr
outsb
cmp
mov
pusha
jnp
iret
roll
stos
xchg
jle
jecxz
sbb
mov
xchg
in
mov
subl
adc
or
mov
fsubl
mov
addr16
lahf
or
out
add
aad
out
jecxz
rcll
sbbb
or
mov
arpl
pop
sbb
fs
adc
push
test
mov
cmpsb
lret
jmp
pop
xor
aad
adc
stos
inc
das
push
sbb
or
inc
pop
sub
xchg
add
repnz
cmpsl
lcall
sbb
jmp
jmp
aaa
mov
xor
mov
jl
aas
push
add
jecxz
adc
pop
les
push
jmpw
imul
pop
cmp
mov
jno
jo
or
and
xchg
stos
xlat
outsb
faddl
in
jmp
sbb
cli
pushf
or
and
xor
divl
mov
jb
stos
xor
pop
stos
xor
push
pop
dec
insb
push
inc
sbb
mov
inc
cld
mov
pop
int3
ja
nop
je
fsubs
lcall
or
fadds
popf
or
movsb
dec
add
pushf
pop
jge
cmp
add
jne
jmp
pop
add
fcoml
fnsave
sub
push
sbb
orl
notb
mov
adc
or
xchg
aaa
fwait
xor
xor
lret
sti
adc
pop
push
mov
jle
mov
add
cmpsb
adc
mov
leave
xor
jo
mov
inc
mov
repnz
mov
inc
mov
sub
hlt
dec
movsb
fs
jle
jmp
cmp
insl
sbb
pop
icebp
movsl
fcom
mov
into
loop
dec
out
add
fwait
dec
or
jnp
in
mov
cmc
nop
push
cmp
lcall
lods
or
sub
clc
jp,pt
stos
and
or
in
jmp
aas
xor
lds
clc
pop
add
mov
shrb
or
xchg
sub
cvtps2pd
mov
dec
lds
nop/reserved
dec
cld
cld
outsl
ljmp
dec
inc
jp
jb
pop
int3
outsb
sub
je
andps
mov
sbb
outsb
cmp
stc
fwait
imul
or
jo
je
add
fbstp
ss
sub
inc
mov
sub
push
nop
push
fadd
xor
push
inc
pop
hlt
jbe
ljmp
push
cld
and
stos
or
test
inc
mov
cwtl
xchg
push
fbstp
call
and
mov
das
nop
add
pop
adc
data16
sbb
mov
inc
mov
in
sbb
lahf
pusha
in
push
nop
lea
testb
mov
jp
mov
sub
outsl
push
adcb
and
pop
mov
sbb
cli
xchg
sub
cmp
shl
push
and
mov
or
mov
lods
fadds
aad
cmp
ljmp
and
loope
adc
push
cmpsb
adc
or
sub
call
sbb
aaa
xchg
loopne
stc
inc
enter
lahf
ss
inc
cmp
insl
or
pop
das
stos
int3
arpl
int
and
push
pop
inc
xor
push
lret
jle
add
jne
dec
add
xchg
mov
mov
fadds
ficomps
mov
pop
and
sub
into
loopne
call
incb
aas
pop
or
inc
pop
fdiv
mov
adc
jmp
and
xchg
sub
out
test
pop
int
sbb
sar
push
push
or
cmp
stc
push
jno
pop
dec
and
pop
push
sub
shl
jae
int3
movsb
push
or
inc
repnz
scas
bound
xchg
pop
stos
call
mov
pusha
push
xlat
xchg
aad
icebp
mov
fwait
je
add
inc
stos
xor
xchg
and
cmp
incb
subl
std
nop
sbb
sub
cmp
fnsave
push
pop
dec
xchg
mov
push
jp
in
pop
gs
repnz
int
ret
inc
cmp
insb
out
iret
push
inc
outsb
fwait
adc
div
jno
bound
sub
lods
mov
sti
cmpsb
dec
pushf
push
mov
popf
lcall
fcoml
mov
sarb
dec
sub
or
dec
subb
pushf
jno
es
insb
pop
dec
xchg
shll
xchg
rcll
loop
add
xor
pop
adc
into
gs
mov
in
das
out
xchg
cli
test
mov
adc
xchg
push
jbe
movsb
cmc
cmp
push
or
cmp
scas
dec
es
mov
das
adc
stos
fisubs
push
push
cmp
aad
pop
psrld
andb
inc
mov
inc
fldenv
out
xchg
sti
xchg
push
enter
dec
and
ffree
nop
adcl
int3
ds
sbbb
arpl
lcall
sti
mov
pop
xlat
sbb
push
out
mov
adc
sub
pop
xchg
nop
mov
mov
sub
outsb
add
xor
xchg
jnp
test
loop
jle
repz
sbb
ljmp
addr16
jne
into
dec
lcall
lds
fwait
sbb
jbe
mov
iret
lock
test
pushf
push
mov
popa
rcrb
cmpsl
xor
outsl
negl
lcall
leave
jo
fdiv
jl
movsb
push
imul
in
sbb
mov
jmp
jae
mov
pop
sbb
xchg
dec
in
and
sbb
cmpl
or
jp
cmpsb
stos
loope
sbb
add
cmp
arpl
imul
dec
fdivs
adc
jl
jae
jno
dec
int3
int3
cli
push
adc
mov
adc
and
repnz
mov
jmp
hlt
das
addr16
scas
and
rcrb
dec
jns
loope
je
xchg
cmp
movsl
mov
xchg
sti
dec
cmc
out
cmp
std
xchg
and
add
inc
cmp
dec
in
popl
loopne
aad
into
mov
scas
data16
xchg
jnp
andl
pop
sbb
pushf
loopne
into
fdivrs
inc
lret
add
insl
ja
mov
mov
into
sbb
pop
das
insb
mov
and
mov
push
sti
xchg
inc
sbb
cwtl
jg
loope
or
push
adc
leave
dec
push
popf
jg
dec
stos
pop
adc
js
fstpt
adc
push
xchg
ficoms
mov
or
pop
cwtl
sub
mov
jecxz
in
mov
je
loope
push
inc
movsb
cltd
push
or
push
call
push
xor
movsl
into
hlt
dec
fwait
mov
mov
lahf
roll
jnp
fsts
cltd
xchg
aaa
push
imul
or
fdiv
mov
inc
xchg
call
push
jbe
push
adc
jge
xchg
pop
push
jnp
pop
stos
jmp
and
push
les
xchg
jns
push
push
fimull
jno
dec
mov
add
mov
insb
scas
xor
test
or
push
xchg
xlat
jmp
gs
call
xor
xor
lock
mov
mov
movsb
gs
fimuls
xchg
add
sub
mov
mov
cmp
shrl
xchg
cmpl
jae
ss
xlat
outsl
and
mov
jmp
pop
push
or
inc
repnz
popa
lret
cltd
inc
scas
jae
lret
ficoms
add
cs
push
pop
addr16
xor
lret
xlat
inc
int3
xlat
jnp
test
sti
inc
cmp
push
pop
xchg
mov
push
js
fstp
aam
dec
jg
jg
mov
mov
push
dec
ret
mov
mov
sub
repz
mov
sub
and
inc
mov
push
movsl
test
pop
fidivl
imul
iret
stos
and
fistl
mov
and
into
sub
or
and
adcb
cmp
mov
test
aas
mov
or
xchg
stos
inc
sub
lods
push
push
icebp
pushf
jno
and
sti
push
adc
shrb
scas
sarl
sbb
repnz
jg
or
mov
jg
and
aam
imul
cmp
mov
ds
cmpsb
rclb
sbb
jmp
jp
inc
in
dec
lock
ret
out
add
loop
gs
scas
lods
call
mov
mov
lret
push
sahf
pop
ds
or
xchg
mov
inc
je
xchg
sub
ret
cmp
add
push
sub
adc
mov
data16
sbbb
icebp
mov
negb
inc
add
lahf
jne
icebp
dec
stos
shll
ret
inc
add
mov
jns
addl
push
sub
xchg
fisttpll
inc
xor
xor
movsl
cmp
inc
mov
call
lods
push
xchg
sbb
lahf
je
push
xchg
add
pop
mov
pop
add
dec
fcompl
and
daa
outsl
inc
push
mov
xorb
popf
adc
je
inc
jp
xor
cmp
xchg
nop
inc
loopne
adcb
and
test
pop
cli
test
cwtl
das
pop
inc
cmc
test
sbb
imul
lds
jp
cmc
sbbl
icebp
popa
cmp
cld
pop
cmpsl
cmpsl
sti
enter
or
int
mov
arpl
dec
pop
jmp
lret
cld
cwtl
xor
mov
or
addr16
and
or
inc
out
mov
pop
lret
mov
dec
xor
dec
stos
stc
mov
inc
cmpsl
push
lea
popa
pop
js
ror
pxor
dec
push
outsl
sbb
dec
in
stos
push
push
pop
or
xor
addl
push
jge
aam
dec
outsb
xchg
fidivrs
and
pop
push
js
into
jge
sbb
sahf
push
stos
sbb
aas
push
mov
and
in
push
ss
andl
inc
fs
xchg
repz
daa
add
pop
ja
leave
push
loope
push
sbb
inc
out
test
and
mov
bnd
adc
std
dec
xor
push
stos
mov
xchg
xor
mov
push
xor
rcll
lcall
adc
sub
lock
dec
and
pop
push
dec
adc
andb
sbb
es
cmpsb
inc
enter
pop
movsl
aaa
fwait
mov
xchg
pop
xor
fists
lods
inc
repnz
push
push
inc
pop
sub
mov
mov
push
or
clc
sbb
test
jns
xor
xchg
xlat
or
dec
inc
mov
inc
les
xchg
dec
ja
jne
aad
loopne
xchg
and
std
jnp
adc
mov
pusha
test
push
mov
testl
add
or
lea
setbe
sub
ja
and
lods
pop
and
mov
mov
adc
insb
sti
push
divb
sub
pop
jb
hlt
sti
xchg
lea
notb
ds
jmp
fucompp
fidivl
icebp
mov
push
jnp
xchg
jnp
pop
pushf
in
js
cmp
mov
dec
sbb
jle
and
xor
imul
cli
jmp
fs
aam
fsts
out
outsb
sbb
jno
out
xchg
fs
sti
fwait
es
dec
sti
jge
xor
sub
jno
jl
movups
jb
inc
mov
iret
xacquire
dec
cmpsl
stc
mov
pop
outsb
pop
cmc
icebp
test
inc
push
repz
adcl
cli
clc
push
or
and
cmp
ror
popa
inc
std
add
divl
jle
pop
adc
adc
mov
cmpsb
clc
mov
jno
and
cmpsl
jl
push
mov
fwait
pop
aad
nop
nop
popf
jbe
sbb
sbb
nop
loopne
fwait
adc
sub
sub
aaa
shrb
lret
outsl
and
add
xcrypt-ofb
cmpsl
sub
xchg
mov
jae
cmp
arpl
in
out
add
adc
jbe
mov
in
mov
pop
push
rorb
sti
outsb
fwait
sub
and
mov
out
ret
lods
inc
and
pusha
fsubs
lcall
in
mov
jb
mov
in
xchg
aam
push
xchg
inc
push
je
pop
dec
inc
cmp
mov
enter
or
xchg
xor
hlt
inc
bound
mov
dec
shrb
in
cmp
movsl
js
lahf
xlat
push
rcll
iret
cmpsb
adc
outsl
out
test
cmpxchg
mov
sbb
mov
in
mov
mov
mov
gs
inc
lds
stc
jns
outsb
inc
add
lea
hlt
and
ss
jecxz
mov
dec
loope
push
fsubr
mov
lock
or
inc
andb
pushf
je
add
xlat
xor
push
sub
push
xor
std
aas
jno
ja
dec
mov
test
push
sub
jo
mov
ret
pusha
cmpsl
out
shlb
imul
stos
negb
insb
outsb
cltd
jae
mov
adc
mov
in
sbb
mov
mov
std
mov
pop
scas
pop
stc
popf
fcomps
xchg
jne
ret
mov
fstl
std
lods
mov
cwtl
ror
jb
mov
jo
jo
dec
ss
jl
aas
push
add
or
xchg
imul
ljmp
shlb
sbb
orl
pop
and
ds
jmp
ss
push
je
inc
cmpsb
ss
adc
repnz
jmp
das
xchg
lods
pusha
mov
adc
sub
xchg
dec
lcall
inc
xchg
fdivl
arpl
repz
cli
mov
mov
push
mov
ljmp
incl
and
bswap
cmp
js
lds
dec
xor
xor
pop
clc
test
cs
stos
jne
jns
ss
jl
sarb
shll
pop
pop
insb
mov
dec
dec
insl
outsb
mov
push
shrb
mov
fbstp
mov
xor
inc
or
call
mov
jmp
or
jns
xchg
jge
push
dec
sub
push
push
jg
sub
movsl
jno
push
jae
daa
loope
or
xchg
xor
sarb
push
push
aad
les
rorl
and
adc
scas
movsl
cmc
push
test
repz
xchg
xchg
ret
mov
jge
jge
ds
jae
xchg
mov
sub
sbb
aaa
jne
dec
dec
fistpll
arpl
mov
sbb
inc
movsb
les
outsl
or
ret
dec
movsl
xlat
push
add
lret
rolb
aas
sahf
movsb
test
aad
shlb
inc
lods
dec
rcr
ljmp
mov
pop
sub
faddp
aad
jle
hlt
dec
jg
lahf
mov
push
cmp
sbbl
rorl
lret
inc
cli
in
enter
inc
or
popa
mov
pusha
xor
jo
fs
lret
aad
push
popf
in
dec
push
jo
xor
cli
mov
lock
pop
adc
pop
sub
lods
dec
push
cwtl
cmp
out
xchg
call
lods
xchg
mov
in
js
jp
push
mov
ljmp
out
ret
aas
popa
jns
xchg
pusha
pop
lods
popf
fsubr
cs
mov
cmc
iret
push
push
lea
jno
js
bound
or
add
lods
stos
mov
mov
dec
cmove
mov
push
loopne
rcr
hlt
fnstenv
push
push
js
test
addb
xorl
daa
lret
pop
popf
pop
idivb
sub
lds
xchg
test
insb
add
cmpsb
mov
mov
aad
mov
addr16
or
jbe
out
imull
inc
mov
notb
sub
xor
mov
push
inc
daa
je
inc
fmulp
inc
xchg
repz
and
std
adc
and
mov
push
jbe
sub
pop
lods
std
add
lods
and
fldcw
mov
cli
scas
inc
lock
and
or
xchg
cltd
stos
cmc
das
mov
inc
repnz
sub
or
pop
adc
sub
pop
es
fldcw
xor
jp
mov
push
dec
cmc
cmp
subl
dec
cmp
sahf
jo
imul
mov
inc
sbb
into
out
mov
adc
lds
mov
out
dec
popf
and
aad
mov
pusha
jne
sbb
shrb
lea
out
and
inc
rcl
push
ja
fiaddl
mov
dec
into
cmp
outsl
hlt
or
mov
jle
push
outsb
cld
out
inc
test
shr
roll
ret
xchg
finit
jle
stos
stc
nop
cmc
leave
xchg
xchg
jnp
sbb
xlat
xchg
cs
mov
loopne
int3
out
cmp
lods
loope
mov
sub
xchg
popf
movsb
lret
cld
lds
mov
jb
fisttpll
mov
sub
mov
dec
mov
add
sub
outsb
push
lods
jo
es
and
js
lds
insb
xor
inc
mov
push
js
mov
add
xor
jecxz
cmpsl
inc
rorl
or
stos
dec
clc
int
push
xor
jg
jg
es
rcl
es
sub
out
imul
lea
mov
lahf
pop
xor
ja
repnz
dec
idivl
iret
enter
and
lods
dec
xchg
mov
nop
dec
in
jmp
call
cmpsl
popf
rolb
fisttps
pop
lret
pop
inc
xchg
scas
xorl
push
inc
push
mov
mov
test
enter
pushf
test
fcomip
push
cmc
cwtl
das
sub
xchg
insb
jl
mov
jbe
hlt
add
mov
enter
sub
ds
lds
push
mov
gs
xchg
push
mov
mov
pushf
pop
aam
or
enter
insl
dec
push
sbb
cmp
xor
loopne
jge
pop
or
jecxz
xchg
add
outsl
or
cmp
testl
dec
pop
aad
mov
mov
out
mov
dec
popa
or
inc
js
je
push
mov
mov
pop
sub
lea
ret
lea
stc
fldt
movsb
sub
mov
cmp
inc
das
lods
mov
insl
sub
dec
jmp
xor
add
cmp
movsl
in
sbb
fs
cli
lods
mov
xchg
clc
xor
out
ss
sub
jne
jns
add
cltd
push
mov
pop
js
push
and
lcall
aam
test
push
jae
xlat
add
dec
mov
dec
ret
imulb
adc
fdivrs
push
mov
cld
xchg
inc
fcoml
xchg
push
lock
je
cmp
sub
repnz
mov
fisubs
mov
outsb
pop
out
loopne
cmpsl
pushf
test
stos
das
xor
jns
sub
idivl
inc
jge
nop
lahf
dec
cmpsb
in
xor
push
in
push
push
cmp
in
sbb
mov
add
fnstenv
das
adc
into
mov
mov
xchg
adc
adc
pop
pushf
aam
pop
repz
cmp
insb
insb
cli
popf
call
aam
pop
mov
loope
jae
push
or
pop
mov
es
jg
shlb
or
jge
mov
adc
aad
popf
icebp
scas
es
js
pop
dec
fnstenv
mov
xchg
scas
insl
and
in
cmp
arpl
pop
sub
out
cmp
and
divl
in
mov
movsb
addr16
jl
mov
mov
fbld
call
lods
clc
push
aaa
xchg
sub
mov
lds
or
ret
pop
cmpsb
xchg
dec
ficoml
adc
lods
xor
mov
mov
sbb
loopne
push
xor
push
loope
and
xchg
testb
cs
loope
push
xlat
lds
add
sarl
add
cmp
sub
push
jp
ja
pop
and
xchg
fsubl
mov
std
push
outsl
enter
fistpll
mov
int
cmpsb
ja
mov
les
arpl
pop
test
jnp
sbb
sarl
push
out
es
xor
adc
out
mov
xor
mov
lds
and
pop
jb
add
scas
pop
imul
out
and
xchg
pop
insl
loop
xor
mov
mov
add
dec
inc
bound
inc
pushf
rcrb
aas
mov
in
mov
jle
les
in
aam
cli
pop
sub
movl
push
lcall
cwtl
std
cmp
adc
mov
push
fs
aad
inc
fcmovbe
mov
adc
pop
adc
ds
lcall
imul
pop
stos
dec
push
jns
or
push
xor
lock
push
dec
dec
inc
fwait
clc
push
out
adcb
lods
xchg
out
inc
jo
mov
xor
pop
jno
mov
add
arpl
xchg
aas
xchg
repnz
add
jbe
arpl
pop
and
fwait
bound
sbb
xor
popf
push
cmpsl
or
loope
jo
sahf
out
sbb
lods
out
orb
es
movsb
jecxz
xor
lds
pop
push
push
jno
inc
data16
lcall
dec
mov
sub
jbe
stc
scas
ljmp
jg
loop
scas
adc
std
mov
arpl
rcr
arpl
pop
std
das
adc
push
jno
push
pusha
cwtl
sub
inc
xlat
mov
sbb
scas
enter
enter
clc
sarb
inc
stos
mov
ds
icebp
cmp
lods
fs
daa
and
xor
add
ds
push
push
movsb
int
xchg
scas
xchg
sub
nop
mov
dec
cmpsb
leave
lcall
loop
jbe
and
test
mov
dec
ss
adcb
test
pusha
aas
repnz
lods
inc
push
sbb
scas
lret
fcmove
xchg
pushf
or
xorb
lcall
js
xor
push
js
pop
jns
lret
pop
fisubrl
rcrb
pop
add
or
push
lods
jbe
mov
xor
shll
ret
adc
and
and
pop
rcrb
ret
aam
xor
xchg
sbb
jge
aaa
bound
inc
repz
fnsave
addb
arpl
outsl
pop
jmp
add
ds
xchg
into
sub
cmp
js
in
cmp
push
push
rclb
jg
sbb
mov
pop
adc
pop
ja
aam
pop
and
pop
pop
movsb
cmp
test
ret
imul
test
fsubs
cld
decb
mov
notl
xchg
push
cmp
mov
ret
loopne
dec
test
mov
sub
int3
cmp
sbb
lds
cmpsl
jecxz
cltd
pop
mov
or
and
shrb
sbb
mov
inc
sbb
mov
xchg
into
int
push
pop
cmp
dec
stos
jbe
orb
ljmp
div
cli
inc
scas
out
push
sarb
sbb
lds
add
jp
jmp
arpl
mov
xor
mov
jns
int3
pop
inc
mov
adc
push
xchg
imul
jmp
xchg
mov
adc
and
mov
xchg
or
mov
jbe
add
hlt
dec
iret
push
cmp
repnz
pop
imul
int
std
sahf
clc
xor
ds
xchg
clc
xchg
and
filds
sub
xor
std
inc
pop
cmp
sarb
std
sub
sbb
xor
xchg
icebp
dec
pop
pop
dec
push
mov
in
mov
lcall
and
or
insb
inc
and
ja
xor
pop
andl
inc
pop
call
test
ds
pusha
add
jl
pop
orl
fcomip
mov
enter
sti
cmpps
xor
mov
xchg
add
lds
push
movsl
testl
fmull
cmp
jge
shrl
stos
pop
in
aad
jbe
push
imul
daa
js
mov
and
les
outsl
mov
inc
rorb
repnz
and
aam
xlat
outsb
mov
cltd
jb
add
and
ret
ja
cmp
lcall
mov
fld
pop
or
movsl
sbb
les
mov
in
mov
lods
stos
xchg
or
arpl
into
sbb
jle
mov
loopne
inc
xlat
sbbb
xchg
sub
mov
cmpsb
jge
mov
repz
or
fisttpl
inc
cmp
rolb
addr16
hlt
stos
push
lret
out
mov
mov
jl
mov
mov
lcall
lods
mov
int3
mov
jge
in
pop
out
push
push
imul
icebp
pop
lret
bound
scas
inc
inc
in
outsb
out
and
xchg
iret
dec
repnz
mov
cmp
repz
add
int3
lret
cmc
movsl
fwait
mov
repz
loope
lods
fdivs
test
lret
push
mov
loope
jge
cmpsl
pop
jae
xchg
shl
sbb
add
int
cmp
aad
adcb
ja
and
sahf
cld
pop
ret
ljmp
mov
nop
dec
imulb
aaa
dec
and
rcr
pop
cld
cmp
insl
mov
cmp
loope
or
sbb
sub
loop
movsl
and
cmc
add
sub
jl
into
out
add
hlt
xchg
push
mov
xchg
clc
cmp
jmp
push
addr16
movl
dec
test
cmp
push
clc
scas
and
cmp
jle
fiaddl
cmpsl
fadd
fwait
push
pop
pushf
std
mov
mov
call
jg
mov
aad
xlat
push
xchg
dec
aad
mov
mov
data16
xchg
call
icebp
or
xor
aas
scas
xor
push
adc
aaa
into
jnp
arpl
push
adc
imul
inc
xchg
add
adc
mov
mov
cmp
pop
imul
dec
lea
psrlw
shrl
loopne
insb
aam
push
test
cmp
fdivl
idivl
push
xlat
mov
sbb
imul
subl
xchg
dec
pop
mulb
loopne
xor
nop
adc
imul
sub
pushf
nop
scas
mov
mov
mov
adc
out
js
pop
scas
inc
mov
int
ja
scas
jle
cwtl
jmp
dec
aad
stc
push
jo
jmp
cmp
lcall
addr16
daa
jns
dec
out
jmp
sbbb
dec
sub
xchg
xchg
ret
jnp
test
or
das
andb
dec
enter
loop
fnstenv
out
imul
dec
movsb
cmp
ljmp
mov
push
mov
push
cli
mov
push
mov
jnp
xor
adc
mov
fdivl
push
sti
fldenv
xor
jo
mov
pop
jmp
inc
stos
aas
cld
test
mov
xchg
adc
leave
lret
jb
ljmp
push
aas
mov
push
xchg
mov
or
rol
push
pop
mov
and
sbb
add
in
sbb
lods
pop
lods
inc
pop
int
lret
jns
int3
mov
test
or
lret
xlat
or
sbb
daa
dec
mov
push
fiadds
mov
leave
mov
fdivr
shr
adc
sahf
xor
test
in
incl
mov
mov
mov
fimull
and
scas
fs
add
ja
adc
dec
mov
lret
fnstsw
lods
and
push
pavgw
adc
dec
call
lea
popf
sub
leave
and
ret
out
out
jecxz
dec
std
push
xor
mov
sbb
adc
fnsave
les
jb
sbb
fstpl
xor
out
mov
test
ret
sbb
loope
xchg
cwtl
jnp
rcrb
and
stos
andl
pop
pushf
fmull
sub
dec
jmp
jnp
cmp
xchg
xor
or
pop
jo
ds
sbb
cmpsl
or
cmpsb
sub
lahf
icebp
movsb
pop
iret
xor
mov
xor
stos
test
mov
mov
xchg
scas
push
and
imul
pop
aad
pop
out
aaa
pop
push
cmc
xor
xchg
mov
add
nop
hlt
mov
jmp
in
add
test
icebp
mov
sub
pushf
lret
inc
dec
enter
xor
cmp
and
cs
xchg
int
add
mov
stc
xor
mov
clc
add
sahf
push
adc
gs
cmp
push
test
lods
nop
sbb
push
dec
add
ljmp
loopne
add
jl
push
lock
daa
xchg
lea
test
mov
push
jle
fsubr
pop
pop
in
fstp
movsb
mov
fisubrl
push
mov
sub
fsub
add
sbb
or
inc
iret
loop
pop
push
lods
push
cmp
mov
dec
jae
xor
push
js
and
push
jbe
push
jbe
adcb
scas
les
xor
sub
cvttps2pi
ret
cmp
jecxz
sar
xchg
xor
cli
jno
inc
data16
jae
rcr
dec
out
dec
add
xlat
outsb
or
xchg
mov
and
inc
mov
mov
mov
movb
movsl
imul
js
adc
mov
pushf
push
mov
or
ljmp
jle
test
neg
add
add
out
xor
xor
pop
dec
ret
std
xor
in
int3
push
pusha
jecxz
fnstcw
mov
movsb
repnz
push
mov
cltd
loop
mov
jge
cld
sbb
sub
daa
hlt
rcll
jo
fimuls
call
scas
fwait
jb
movsl
popl
cwtl
in
in
das
addl
sub
add
xor
jns
cwtl
call
sbb
and
icebp
cmp
push
or
xor
test
inc
pop
sbb
lods
sbb
inc
cmp
leave
cmp
cmpsl
mov
add
mov
jnp
sbb
sub
cmp
mov
hlt
or
mov
push
jae
lret
scas
and
roll
cltd
xchg
xchg
rcl
lods
outsb
mov
fisttps
bound
insb
jl
pop
sub
add
add
js
scas
test
fwait
jmp
lea
adc
jbe
xlat
cmpsl
adc
mov
aas
and
repnz
lret
mov
jmp
icebp
or
pushl
int
adc
inc
jmp
mov
jbe
cmp
mov
cltd
adc
shll
std
or
aaa
insb
inc
cli
xor
adc
stc
jl
mov
mov
pop
jns
loope
and
out
xlat
adc
push
jge
jmp
les
mov
js
and
sti
or
call
xorl
pusha
std
jo
push
mov
xchg
sbb
jg
sbb
gs
sbb
add
and
lods
jno
jg
ss
stc
and
leave
jo
xchg
dec
call
jne
jmp
enter
fisttps
outsb
sub
mov
pop
jns
repz
cwtl
cmp
inc
inc
xor
xchg
jg
cwtl
xor
mov
sarl
sbbb
mov
inc
testl
stos
dec
dec
fmul
adc
cmp
call
inc
sbb
xchg
pop
lea
insl
in
sbb
mov
loop
ficoml
push
push
out
jge,pt
mov
mov
push
lods
jb
sub
push
mov
sub
sub
arpl
mov
sbb
sub
push
xor
xchg
xchg
and
decb
push
dec
pop
push
pop
jecxz
or
or
and
movsl
xorl
loopne
mov
mov
sti
cmc
mov
lcall
pop
sbb
pop
frstor
out
xor
out
push
mov
das
add
shr
hlt
out
call
test
and
pop
fs
lea
int
add
ja
lret
jge
bound
mov
pushf
sbb
stos
in
dec
je
ret
arpl
mov
rcr
pop
daa
test
xor
cltd
sbb
out
fimull
mov
sti
xor
sbb
xor
pusha
insl
in
jnp
xchg
mov
pop
pop
inc
pop
cmp
es
sbb
je,pt
sbb
loope
pusha
insb
cmp
pop
xchg
xor
jecxz
fbld
add
jge
xor
push
cli
cmc
scas
aad
add
jb
sub
sub
insl
sti
xor
add
pop
negb
lods
sub
mov
dec
les
imulb
shl
xchg
adc
hlt
add
xor
aaa
js
test
iret
mov
imul
mov
mov
and
mov
sbb
add
int
out
popa
sbb
call
fistps
popf
nop
mov
or
outsb
jmp
or
mov
leave
inc
sub
mov
call
out
dec
shll
pop
mov
aad
lock
daa
mov
push
lds
jns
dec
sub
or
rorb
lods
inc
xor
push
xchg
push
mov
xchg
and
add
jns
lahf
jl
sbb
push
pushf
test
fsubr
std
pushf
jb
mov
icebp
mov
mov
pop
adc
adc
sbb
lds
hlt
jge
cmp
pusha
mov
pop
inc
push
jno
inc
fsts
sbb
mov
xor
sub
jg
or
adc
cld
shr
add
xor
dec
enter
pop
push
jne
rclb
fbstp
repnz
aam
std
maskmovq
testl
les
jns
mov
dec
ret
cwtl
stos
adcb
push
dec
mov
sti
in
icebp
xor
sbb
shrl
out
cli
nop
cmp
sub
add
pop
out
jl
push
mov
ret
jns
xchg
sub
pushf
ret
add
adc
pop
push
filds
scas
outsb
lret
dec
cli
xor
xchg
sub
xor
jne
lea
inc
adc
pusha
cmp
enter
out
pop
dec
out
sahf
outsb
or
push
mov
scas
sbb
movsb
test
lret
clc
daa
mov
fsubrl
cltd
pop
movsl
cwtl
pop
xchg
push
push
insb
mov
xchg
cmp
in
xor
push
lret
jl
icebp
sbb
je
push
mov
pop
dec
imul
mov
push
jno
dec
add
push
hlt
daa
outsl
cmp
and
int3
pop
pop
scas
mov
xor
and
add
vpperm
pushl
mov
fstpl
jnp
ljmp
mov
and
repz
in
adc
popa
push
pop
and
mov
out
in
lea
jl
jne
fbld
test
jae
xor
js
sbb
and
inc
daa
xchg
mov
pop
ljmp
pop
inc
arpl
mov
inc
fsubs
dec
mov
ret
rol
outsb
fiaddl
xor
sub
sti
fists
dec
arpl
push
jnp
and
mov
mov
mov
pop
pop
pop
andb
jnp
push
xor
aaa
outsb
sub
mov
loopne
xchg
imul
bsf
outsl
imul
xor
shl
cli
stos
sbb
adcl
test
jl
xor
sub
js
xor
pop
jle
xor
pop
mulb
mov
lcall
mov
mov
sub
mov
add
ja
xchg
mov
je
andb
pop
pushf
fildll
jno
inc
xor
xchg
jb
es
loop
mov
aad
enter
in
and
call
mov
mov
je
inc
fiaddl
sbb
push
aam
push
stc
fbld
mov
mov
ds
lret
arpl
daa
mov
mov
cld
stc
xorl
or
xchg
sar
and
lods
mov
out
add
inc
aaa
dec
ja
stc
data16
in
out
pop
cmp
dec
lret
adc
and
sub
insl
mov
xchg
mov
leave
scas
mov
mov
jg
push
or
inc
sub
mov
loopne
movsl
lret
inc
insl
fs
data16
fstps
dec
loope
add
mov
sbb
fistl
pusha
outsl
cmc
dec
sahf
test
sbb
int3
mov
sub
shl
or
inc
dec
dec
ds
lods
adc
jno
pop
sbb
adc
dec
inc
shrl
stos
das
addr16
jns
adc
outsl
add
add
xchg
push
mov
mov
jmp
ret
icebp
or
gs
lret
pop
popa
push
mov
xlat
arpl
lock
clc
popf
js
cmp
jecxz
hlt
inc
xchg
in
and
jle
inc
sbb
lahf
push
xlat
jmp
loope
lock
cmp
add
les
jb
mov
cmpb
push
outsb
mov
in
pop
jecxz
inc
cltd
or
mov
mov
sbb
dec
xchg
mov
in
jg
xchg
shrl
pop
subl
clc
cwtl
mov
inc
mov
jne
lds
cwtl
test
xchg
mov
movsb
jmp
lcall
ret
cltd
rcrb
shr
stc
mov
dec
pop
fisttps
aad
test
adc
jmp
das
cmp
fsubl
sub
out
sbb
aad
test
lcall
dec
scas
adc
fsubs
xor
mov
cmp
mov
cmp
xchg
add
sar
lods
hlt
mov
xchg
dec
loope
inc
into
filds
xchg
dec
test
cmpl
mov
into
push
data16
cmp
or
dec
dec
cmc
adcb
repnz
jmp
add
jge
enter
cmpsl
sbb
inc
sbb
fs
xchg
add
scas
dec
test
loopne
pminub
add
in
aam
ds
or
stc
popf
mov
push
jg
xor
xchg
lret
aad
push
cmc
xchg
push
test
jnp
jl
out
or
and
rcll
xchg
mov
mov
testl
add
notb
mov
inc
inc
or
testl
xchg
inc
in
testb
adc
lods
sub
fwait
shlb
add
and
out
ljmp
or
inc
enter
push
mov
mov
and
dec
aaa
ror
pop
pop
sub
dec
mov
push
fcom
mov
pop
and
add
icebp
adc
cld
sub
cltd
clc
cli
or
xor
push
movsb
in
divl
jmp
cmc
out
and
addr16
stos
jne
pusha
divb
test
test
pop
push
or
aam
mov
pop
jmp
int
adcb
adc
mov
or
sub
ret
dec
cmc
test
aad
mov
enter
icebp
adc
cmp
push
sbb
pop
or
fiadds
call
lods
setg
notl
and
mov
and
adc
dec
pop
pop
xor
xor
or
mov
pop
or
sub
lret
xchg
nop
ret
pop
lea
jl
jp
enter
push
xor
adc
bound
jg
cmpsl
push
nop
add
xchg
pop
repz
shrl
mov
adc
or
push
inc
es
sti
mov
xchg
stc
push
dec
imull
mov
add
lret
out
adc
ss
aad
push
insl
push
push
cmp
repz
adc
cmpsb
ss
mov
mov
aam
push
adc
inc
xchg
inc
add
mov
xchg
les
push
loope
call
cld
sub
pop
out
call
xlat
cmp
test
mov
adc
add
scas
jle
inc
mov
insb
jle
add
loop
adc
fbld
icebp
push
adc
adc
addb
dec
xor
fsubs
xchg
dec
xchg
xor
xor
fists
cmp
xorl
das
fxam
sub
ss
mov
push
int
jae
in
xor
push
out
jns
outsb
outsb
mov
es
jo
cmp
pop
not
pop
jecxz
inc
lret
in
mov
adc
das
repnz
out
mov
inc
mov
and
pop
or
xchg
mov
push
push
add
dec
adc
mov
xchg
push
sbb
fldenv
das
das
mov
push
xor
push
add
pushf
cltd
lock
dec
pop
inc
flds
add
inc
sub
roll
mov
mov
pop
in
and
mov
rcrb
aaa
sub
scas
sbb
or
and
in
cwtl
es
xor
faddl
mov
mov
int3
lret
mov
cltd
shlb
mov
cltd
test
jmp
test
js
or
mov
or
xchg
xchg
mov
add
adc
stos
mov
test
in
sbbl
mov
mov
adc
nop
sbb
nop
aaa
lcall
negl
in
call
and
jae
gs
and
stos
lods
lea
mov
push
sbbl
in
lahf
je
push
clc
or
leave
cld
test
icebp
into
mov
mov
sahf
jge
shrb
es
cmpsb
jle
dec
jno
in
mov
dec
lahf
shld
pop
test
out
jae
data16
test
ss
imul
push
aaa
push
jmp
cltd
cmp
dec
mov
stos
cltd
cwtl
xchg
aam
pop
or
jbe,pn
fcmovne
lcall
adc
fs
xor
shl
and
xor
aas
or
std
pop
insb
add
aad
stos
sarl
inc
mov
in
insl
fists
mov
fbstp
mov
push
cmp
mov
or
mov
mov
popa
add
xorb
fwait
sti
jmp
outsb
mov
stc
pop
mov
pop
test
insb
lods
data16
fldcw
lcall
fwait
sbb
bound
sub
cltd
and
inc
push
repz
push
mov
iret
jg
aam
lods
push
mov
shr
inc
and
cltd
dec
js
int
or
sub
add
mov
mov
ja
lret
xlat
outsl
int3
stc
lods
inc
out
or
push
cmpsb
pop
and
test
pop
call
imul
xchg
dec
bound
fdivp
inc
inc
sub
push
out
mov
jmp
lods
aas
aad
sti
sbb
mov
sbb
push
adc
aas
icebp
sub
loope
add
lock
test
jns
jle
pop
dec
dec
push
divb
into
scas
test
je
lahf
jbe
in
bound
and
fistpl
mov
or
xor
aam
js
adc
lds
pinsrw
jb
push
jmp
jle
mov
pop
push
shrl
jb
or
xor
mov
mov
test
mov
add
icebp
dec
mov
idivb
cmp
fucomp
data16
pop
mov
dec
cltd
jmp
das
jge
cmpsl
and
test
fcmovbe
push
int
sub
icebp
into
jnp
xchg
in
push
mov
cmpsl
in
xor
nop
rcrl
cmp
rep
and
sahf
jle
or
jns
xlat
test
lcall
mov
adc
gs
ja
test
cmp
es
dec
sbb
fistps
xor
mov
mov
movsb
repnz
pop
mov
call
inc
cld
movlps
fidivrs
orb
into
xchg
or
push
stos
daa
jae
sub
inc
pop
stos
sarl
fsub
inc
test
movsl
bound
imul
test
iret
or
dec
push
pop
in
or
adc
xchg
int3
mov
roll
adc
test
pop
cmp
popa
jmp
xchg
add
push
and
jne
mov
outsl
mov
rclb
pop
pop
stos
xchg
sbb
or
inc
jg
out
xor
mov
stc
jbe
movsb
add
stos
arpl
pop
lret
je
sub
scas
xchg
mov
test
push
sub
idivb
cmp
inc
inc
shl
lods
int
rolb
out
xor
adc
push
xor
dec
inc
cmp
sub
outsl
pop
mov
inc
add
pop
pop
dec
jns
icebp
mov
aaa
enter
mov
jae
jecxz
mov
pop
fwait
sbbl
loopne
dec
fs
pushf
jl
out
mov
repnz
lock
repz
sub
mov
in
jbe
cld
mov
ret
hlt
or
idivl
pop
out
and
and
dec
fisubrl
lcall
jae
loop
add
mov
mov
arpl
sbb
jbe
cwtl
iret
jbe
call
movsb
enter
jnp
dec
cmpsb
pop
push
js
jp
sbb
mulb
daa
xor
pop
call
mov
arpl
ret
enter
cwtl
pop
lods
push
mov
mov
fsub
mov
xchg
shrb
dec
or
cmp
js
fiaddl
dec
loope
pop
add
daa
inc
ror
jge
lret
testb
shrb
xchg
add
add
fidivs
adc
xlat
sub
lret
in
test
fadds
xchg
xchg
sbb
dec
popf
mov
mov
call
cmp
test
push
push
enter
jno
sbbl
push
lret
inc
fnstsw
aam
int3
inc
cmpsl
loope
push
stos
adc
ja
in
fsub
jnp
and
and
jge
mov
call
pop
adc
repz
inc
fsubrs
xchg
push
lds
adc
dec
pop
jge
mov
or
daa
lods
pop
xchg
fstl
sub
pop
pop
jne
xor
xchg
pop
loop
xlat
jbe
mov
jo
dec
and
scas
std
push
sub
fucomip
mov
sbb
pushf
sub
mov
int
adc
mov
cmp
in
jp
fwait
cmp
sarl
subl
nop
out
mov
inc
cli
shl
das
lcall
jp
push
push
push
push
aas
push
loope
ret
xlat
pop
repz
cmp
in
out
sub
mov
pop
push
lret
repz
dec
shrl
jecxz
shl
mov
cmpsb
hlt
aaa
stos
roll
inc
loop
fmuls
andb
andl
enter
lret
jmp
mov
jle
inc
aas
pop
jl
sbb
and
sub
cmp
mov
jg
cmp
dec
cmc
stc
dec
mov
iret
adc
sub
repnz
add
dec
dec
or
out
push
in
pop
jmp
mov
xor
mov
adc
cmp
xor
mov
cmp
cmpsb
test
push
mov
movsb
test
mov
lock
gs
movsl
push
jne
mov
mov
add
mov
cs
sbb
or
ret
push
cmp
xchg
sub
int3
inc
pop
cli
stos
movsb
xchg
mov
cmp
lods
push
and
xor
cmp
and
cli
pop
dec
jl
xchg
sbb
aaa
pop
sub
call
or
movsl
dec
mov
pop
xchg
xchg
bnd
lcall
js
sbb
xchg
dec
dec
adc
cmp
sbb
fdivrs
xlat
ret
leave
loope
xor
lods
nop
es
imul
stos
mov
push
xchg
jmp
outsb
or
bound
sbb
les
push
scas
mov
orb
dec
repnz
jns
out
cwtl
popf
fcmovb
pusha
loope
movsb
fcmovnb
aas
mov
or
sbb
lahf
xor
xchg
mov
pop
popf
push
dec
xor
dec
stos
call
fistpll
sti
lret
lock
push
or
aad
xor
mov
or
add
xchg
leave
lock
mov
shlb
in
test
push
repnz
in
stos
fldl
jge
or
mov
dec
les
xchg
fsin
lret
cmc
jle
addr16
sbb
pop
lahf
xor
xchg
cmp
in
mov
mov
mov
sbb
jbe
lea
ss
rolb
pushf
lods
push
shrb
add
shl
adc
fdivr
xor
inc
fiadds
dec
jl
jp
data16
in
cmpsb
jbe
and
call
push
sbb
inc
repz
andl
call
xchg
xchg
int3
arpl
jmp
lds
sbb
les
xor
xor
push
or
push
ffree
mov
cmp
sub
in
push
pusha
dec
in
test
inc
ds
mov
pop
or
xor
in
jmp
pop
xchg
sbb
pop
call
push
aam
gs
rcrb
clc
adc
loop
sub
imul
xor
ret
mov
outsb
push
testl
aad
pop
mov
mov
ja
adc
lods
mov
sahf
xor
push
jecxz
ficompl
aaa
lods
xchg
mov
sub
xchg
leave
inc
das
push
or
inc
cmc
lcall
mov
mov
adc
inc
aad
cmp
xor
xchg
std
lret
xor
xchg
mov
xor
xor
in
pop
push
cmc
pusha
mov
sub
gs
dec
dec
sbb
mov
stos
nop
testb
aam
xlat
nop
and
mov
pop
adc
fs
arpl
clc
or
pop
push
push
jecxz
arpl
out
add
cmp
data16
sahf
or
add
push
jl
and
std
adc
hlt
fxtract
sub
jbe
test
mov
pushf
vmovmskps
jmp
test
dec
cmp
pop
fwait
testl
sahf
pop
fstpl
cmp
dec
icebp
in
das
dec
add
addr16
lahf
ss
call
mov
dec
cltd
mov
cmpsl
cmpsl
xor
aaa
xchg
rorl
xor
sbbl
nop
sbb
daa
cmp
pop
or
fldl
add
movsb
idivb
aad
mov
xor
ds
xor
mov
xlat
dec
lods
dec
push
hlt
mulb
icebp
imul
dec
or
mov
adc
push
mov
mov
dec
ja
mov
inc
dec
dec
imulb
shlb
popa
or
dec
jle
imul
arpl
test
adc
mulb
mov
shl
mov
sti
in
mov
mov
in
push
insl
and
jle
clc
xor
mov
cltd
aas
push
imul
sbb
out
shlb
xor
movsl
ljmp
add
inc
push
sub
push
jno
nop
mov
mov
inc
bound
mov
or
sub
rcl
push
push
ret
fisttps
mov
pushf
adc
pop
mov
out
sub
gs
pusha
ficompl
fcmove
inc
es
loope
dec
popl
es
ljmp
xor
jo
sub
pop
imul
lahf
divl
push
std
out
cmpsb
data16
inc
aad
cs
imul
bound
repnz
mov
sbb
test
bnd
inc
adc
mov
sbb
adc
sbb
jmp
xchg
and
xor
movsb
les
adc
fdivl
loopne
rcl
xor
int
push
xchg
sub
arpl
mov
mov
pop
test
bound
and
xor
aam
jp
sub
popa
les
test
sbb
xchg
xchg
jecxz
fst
shll
mov
mov
mov
pop
mov
les
adc
mov
shlb
sub
and
pop
and
xorb
fwait
mov
sbb
xor
adc
sbb
imul
ljmp
repnz
adc
cld
pop
sbb
adc
fsubl
sbb
xchg
ja
dec
aas
in
inc
bound
and
inc
xchg
push
cmpsb
dec
mov
gs
sub
into
jb
cltd
mov
pusha
and
xchg
adc
bound
cmp
adcl
mov
xlat
outsb
sbb
pop
lret
jge
sbb
pusha
mov
mov
ret
dec
fdivrp
push
stc
nop
test
loop
jno
pop
jg
pusha
adcb
orl
mov
iret
cmpb
mov
fisubrl
or
pusha
in
out
jge
add
mov
gs
mov
js
fcomip
xchg
mov
mov
mov
push
cmc
xor
xor
insb
pop
imull
adc
pop
je
adc
dec
ss
mov
inc
jp
das
cmp
jg
push
insl
cmp
cmpsl
mov
aad
in
orl
and
outsl
ds
jo
lods
push
fldl
mov
sbb
jns
jmp
or
in
cmpsl
cmp
pop
shrl
pop
ret
cld
mov
xor
push
and
pusha
mov
xchg
pop
daa
data16
mov
fucomi
test
xorb
or
mov
pop
mov
push
js
das
ds
and
or
icebp
es
mov
sub
icebp
ffree
flds
repz
jno
lock
enter
or
and
sub
push
repnz
sbb
sub
iret
aas
jb
adc
aad
lahf
pop
call
outsl
add
jmp
adc
hlt
rep
dec
insl
add
lds
idivb
scas
les
stc
mov
push
or
add
out
mov
stos
imul
cmp
leave
lret
popa
sarl
add
push
push
loop
icebp
cmp
stc
lods
add
mov
jae
sbb
or
inc
jl
insb
test
loopne
inc
pminub
mov
xor
adc
and
pop
hlt
xchg
test
mov
popf
push
xlat
pop
fsubrs
lret
xor
decb
mov
sbb
dec
dec
ret
test
inc
arpl
jns
outsl
jl
popa
clc
mov
das
mov
scas
outsl
mov
sub
mov
outsl
fdivrp
jmp
aam
pushf
pop
stos
dec
nop
mov
inc
mov
jecxz
mov
xor
sub
mov
xcrypt-cfb
cmpsl
cmpsb
or
loop
or
sub
sti
jne
dec
cmpsl
mov
dec
out
pop
sbb
icebp
or
in
xor
enter
jl
cmpsb
mov
cmpb
cmp
push
or
test
fisttpl
dec
adcl
cmp
sub
push
xor
sub
shl
lret
push
pop
ja
psrad
cld
inc
pop
mov
cmpsl
mov
pop
rcl
in
adc
fdivs
pop
test
js
out
cmc
push
adc
adc
cmp
dec
jge
pushf
outsl
outsb
jl
fcom
mov
shll
xchg
sub
pop
and
insl
cltd
hlt
lods
imul
stos
dec
lods
es
es
js
leave
add
xchg
pop
andb
in
in
lcall
inc
pushf
mov
movsb
pop
inc
pop
lret
mov
out
jne
add
xchg
aas
push
popf
jl
imul
xor
mov
aam
in
cwtl
dec
insl
cmpsb
cmp
test
hlt
call
jnp
sub
pop
xor
js
sub
or
lcall
sbb
fs
aad
or
das
repz
cmc
xchg
fs
nop
push
xchg
popf
pop
inc
or
cld
lcall
pop
cmp
js
loop
add
xor
xchg
dec
and
mull
frstor
out
or
ss
jo
out
pop
insl
scas
setl
jbe
push
psubusw
popf
xorl
xor
shlb
mov
aas
clc
aaa
std
fisttps
rorb
and
xlat
ljmp
jg
inc
xchg
or
xchg
ds
faddp
sbb
jno
or
and
test
shr
sar
and
int3
ficoml
subb
sub
xor
inc
cltd
adc
and
xchg
push
push
leave
les
insb
sbb
and
mov
je
pop
and
sti
sub
in
popf
adc
je
stos
and
jae
cmp
iret
sbb
stos
fdiv
mov
loopne
add
add
push
lret
lret
filds
pop
sub
mov
jmp
fs
ljmp
daa
lds
and
or
push
cmp
data16
dec
jmp
cmp
jb
jb
cmp
cmp
pop
cwtl
dec
in
cmp
lret
mov
int3
stos
push
out
jecxz
hlt
sbb
jne
subb
mov
push
push
adc
lcall
or
push
push
lret
cmp
pop
cmp
fmuls
add
in
mov
fisubs
subb
sub
xchg
add
pop
ss
mov
push
inc
cmp
repz
pop
sarl
pop
and
add
leave
inc
lcall
and
cmp
push
mulb
unpcklps
mov
or
or
rorl
mov
jmp
mov
gs
mov
xchg
ret
negl
neg
bound
add
mov
mov
aad
rclb
xchg
movsl
frstor
dec
xor
leave
mov
cmc
dec
dec
cmp
pop
lahf
jmp
cmpsb
mov
das
ror
lahf
imull
xchg
inc
iret
dec
add
cld
loope
inc
adc
jl
push
iret
iret
jnp
jbe
stc
xor
aas
aad
pop
jno
dec
inc
data16
fsubs
add
add
push
inc
mov
push
pop
jg
add
jg
mov
pop
imul
xchg
je
lock
inc
int3
and
sub
icebp
stos
pop
leave
arpl
cld
addr16
aad
andl
sti
sbb
sub
sub
movsb
push
jl
xchg
fisubs
fcoml
repz
and
pop
into
sub
pop
dec
mov
test
je
ljmp
sti
push
fidivrl
dec
pop
das
stc
loopne
scas
adc
lods
mov
jnp
mov
or
iret
cmp
fstps
icebp
cltd
xchg
je
mov
in
jnp
mov
cmp
sbb
outsl
xor
fbld
fdivrl
rolb
sbb
inc
mov
xor
ss
in
push
mov
bnd
stos
or
gs
in
fs
and
push
xchg
cmp
cld
test
outsb
push
fs
xchg
xchg
hlt
iret
es
or
movsl
inc
adc
sarb
imul
ss
aam
inc
loopne
jne
mul
mov
jle
sbb
sbb
aaa
cmc
mov
nop
loopne
test
inc
ret
in
fisubrs
mov
sub
dec
or
push
jmp
cwtl
pop
cmp
add
je
pop
lahf
push
fisttpl
scas
fs
aam
xchg
test
fwait
sub
test
scas
dec
shrl
fcomp
sub
xchg
testl
cmpb
jp
insl
mov
sbb
push
pop
cltd
mov
fs
push
ret
mov
sti
mov
jno
push
movl
arpl
xchg
into
sub
mov
mov
loop
xlat
pop
iret
mov
and
cmp
mov
dec
mov
and
cmp
lds
lds
decb
outsl
fimuls
scas
cmp
stos
inc
jmp
ds
outsb
sbb
dec
jno
inc
cmpsb
xchg
out
out
outsl
sbb
adc
mov
push
popl
mov
fninit
mov
mov
sub
mov
mov
shlb
lea
adc
es
sbb
push
inc
pop
adc
cmpsb
cmp
rcrb
xchg
es
inc
jg
mov
lods
inc
das
sub
loop
lret
icebp
iret
cmpsb
push
sub
int
mov
data16
or
xchg
into
inc
pop
repz
fldt
jge
mov
clc
or
add
out
adc
add
test
shll
dec
in
sti
das
cltd
notb
ja
out
bound
into
xchg
lahf
aas
aad
cmpsb
loopne
cmc
push
rolb
adcl
fistps
iret
mov
dec
mov
sbb
dec
xchg
ret
out
pop
fs
ss
clc
lcall
data16
mull
push
push
pusha
add
xor
scas
out
mov
sbbl
popa
mov
sbb
or
mov
subb
pop
fisubrl
popf
pop
mov
jl
add
mov
nop
in
shr
mov
and
xor
dec
ret
pop
cmp
sub
addr16
in
or
hlt
lock
mov
into
lcall
rcl
push
pop
xor
shl
rcll
sbb
pop
xor
dec
adc
imul
mov
cmpsl
shrb
xchg
sarl
stc
pop
das
jae
psubusb
jge
repnz
add
inc
out
popa
test
jne
fsub
loop
sbb
mov
dec
cmp
es
bt
push
inc
insb
cmpl
mov
mov
add
lret
mov
aad
inc
in
lods
iret
xchg
sbb
subl
sub
iret
xchg
push
mov
inc
inc
stos
es
aaa
enter
xor
out
out
mov
repz
xor
leave
mov
mov
inc
sub
or
dec
jno
mov
dec
push
outsb
out
adcl
out
xchg
jmp
pop
vaddsd
das
mov
fwait
imul
movsl
sub
movsl
push
jl
xchg
xor
gs
or
test
pusha
pop
jno
lcall
and
lret
jnp
sbb
jecxz
dec
and
add
adc
dec
mov
pop
ficoms
mov
pop
push
mov
adc
push
cmp
xchg
inc
push
dec
clc
dec
in
addr16
jecxz
in
mov
inc
jbe
add
inc
int3
add
repz
iret
jnp
lret
je
aas
aad
roll
sbb
sbb
or
sub
jmp
add
shll
repz
sar
sbb
xor
roll
push
bnd
dec
lret
bound
jmp
mov
sbb
dec
xor
xchg
xor
dec
mov
jns
bound
pop
ss
cmc
xchg
push
lock
insl
inc
mov
std
mov
lds
or
jb
xchg
mov
add
mov
dec
dec
sbb
in
pushf
ss
pop
sahf
mov
jb
in
fbstp
adc
out
test
repz
or
popa
push
pop
sbb
xor
add
lock
adc
aad
repnz
and
push
and
fldcw
xchg
add
push
ficomps
jle
jp
mov
xchg
mov
and
xchg
movsl
or
adc
loop
xor
scas
cld
mov
stos
mov
push
or
jmp
lahf
pop
or
pop
mov
jmp
aaa
iret
pop
sub
mov
xchg
and
jecxz
cmp
aaa
gs
insb
fs
adc
dec
insl
jge
push
sbb
or
in
push
mov
sbb
dec
mov
in
jle
xchg
enter
leave
sub
pop
cmp
loope
sub
adc
les
add
ss
push
sub
mov
xor
push
out
pop
pusha
mov
push
or
and
push
loope
pushf
je
out
das
test
mov
cmp
inc
decb
xchg
adc
cli
cmp
sbb
pop
in
in
scas
and
add
mov
jnp
mov
or
aas
push
xor
out
loope
and
mov
mov
dec
nop
cmc
clc
sub
clc
mov
add
sbb
stos
jle
xchg
push
and
stc
add
cmpsb
mov
xchg
xchg
mov
loop
sbb
divb
movsb
mul
sub
add
add
lods
insb
and
push
repz
inc
cltd
mov
mov
jle
inc
dec
cmpsl
std
outsl
or
out
xor
xchg
and
pusha
sub
pop
jmp
dec
fs
inc
imulb
adcb
clc
push
mov
cmp
dec
movsl
mov
dec
enter
lahf
scas
adc
mov
pusha
call
push
jg
inc
xchg
add
mov
mov
pusha
popa
clc
pavgb
dec
jle
gs
dec
dec
iret
subb
add
cmpsl
ds
adcb
mov
cmp
sahf
mov
and
xchg
repnz
stos
repnz
pusha
ret
pop
push
addr16
push
adc
adc
xor
mov
je
push
add
mov
add
ret
adcl
cs
pusha
push
mov
scas
les
mov
and
xchg
sub
lcall
das
test
loopne
add
adc
mov
jmp
ret
or
xor
mov
stc
cmpsl
mov
hlt
pop
mov
adcb
pop
test
sbb
rorl
jo
adc
sub
jnp
into
push
cmc
cmc
fildl
mov
stos
mov
sub
xor
fs
arpl
lock
cmp
lcall
mov
mov
out
mov
cwtl
xor
sahf
dec
push
mov
jg
out
dec
inc
imul
cmp
add
sbb
in
outsl
add
xchg
mov
or
xchg
cmp
sbb
into
repz
adc
cs
rolb
sarb
lret
mov
push
test
cmp
addl
mov
icebp
pop
test
fsubrs
int3
jecxz
cmp
cmpsb
lods
fsubrl
mov
sbb
jo
hlt
fisttps
pop
mov
inc
sub
stos
movsl
mov
mov
mov
bound
scas
inc
mov
mov
push
push
das
stos
andl
pop
ja
sbb
rcr
lods
test
ljmp
jae
pushf
xchg
mov
fdivp
lock
out
jecxz
sbb
gs
xor
scas
and
cmp
imul
jne
ror
stc
adcl
sub
push
sbb
jnp
fildll
mov
or
dec
mov
mov
out
dec
or
mov
sbb
mov
int3
sub
cwtl
mov
push
out
shrb
dec
push
or
iret
cltd
and
aas
sar
bound
xchg
mov
fidivs
lret
sbb
xor
push
rorb
mov
int3
outsl
push
insl
loopne
push
dec
xlat
subl
arpl
out
cs
lea
daa
adc
pop
ljmp
insb
cmpsl
xchg
push
or
mov
mov
and
jmp
mov
in
add
and
daa
inc
lcall
sub
and
mov
fld1
jmp
out
sub
mov
ljmp
test
out
push
pop
bound
mov
xchg
int
popf
mov
mov
cltd
clc
repnz
xchg
and
rclb
push
movd
fistpll
inc
mov
test
mull
or
aad
mov
add
push
push
pop
scas
cmp
jle
mov
push
or
cmp
mov
sub
push
sbbl
xor
or
adc
pop
mov
arpl
sbb
sarw
xor
clc
ljmp
fwait
mov
addr16
mov
sub
popl
fstpl
fwait
lcall
test
mov
in
cmp
repz
in
cmc
adc
jb
dec
sub
insl
push
mov
outsl
cli
repz
fnstcw
outsb
sub
inc
rcrl
or
mov
outsl
out
xchg
cmp
xchg
shll
mov
cmovge
inc
add
jns
iret
jmp
or
jb
andb
sub
and
loop
xchg
repz
ret
adc
mov
jb
pop
bound
mov
sahf
rep
inc
jecxz
insb
add
xor
movsb
cs
jg
shlb
sub
mov
push
jne
push
mov
lock
mov
mov
push
adc
popa
clc
mov
inc
push
es
ror
mov
pop
cmpsl
ds
push
sahf
xor
mov
sbb
push
jae
shll
dec
inc
repz
cmp
jg
jb
mov
jmpw
mov
mov
lds
mov
outsb
int3
arpl
ret
leave
in
cmpl
sbbb
cmpsl
insl
pop
mov
popf
add
lds
mov
or
jb
pop
mov
adc
mov
push
inc
xchg
cmp
inc
inc
mov
dec
fisubrs
adc
push
out
jle
sar
outsl
subl
mov
cld
clc
add
iret
cli
or
sub
mov
mov
stc
clc
xchg
jns
sbb
and
nop
bound
dec
xchg
out
inc
jp
cmpsl
sub
pop
adcl
or
call
mov
jecxz
jbe
es
cmc
fstpl
adcl
cli
dec
test
xlat
jmp
sub
scas
xchg
adc
mov
aaa
or
mov
shll
mov
inc
or
mov
lret
rcl
adc
pop
jno
sub
fwait
inc
push
jmp
xchg
and
repnz
add
cmpsb
push
inc
pop
jg
jbe
dec
out
jge
test
mov
mov
sbb
pop
mov
nop
xchg
inc
fidivl
insb
inc
pusha
rorb
lcall
rolb
cmp
test
movsl
mov
int
or
nop
adc
out
ret
xchg
insb
inc
push
and
inc
fildll
sbb
addb
fidivs
test
jne
cmpsb
insb
and
add
push
ss
push
push
nop
mov
mov
jne
xchg
dec
fistpl
add
push
add
aad
jle
lods
out
std
les
xor
ret
sub
jmp
cmpsb
cmp
aaa
sub
fcomp
xorb
icebp
dec
cmc
mov
loope
rolb
idivl
dec
enter
loop
dec
xchg
cmp
daa
sbb
fistpl
xchg
xchg
or
mov
mov
bound
cmp
std
stos
add
push
mov
adc
sub
mov
push
out
adc
scas
sbb
sbb
shrb
aad
insl
cmp
andl
sbb
or
pop
or
jns
pop
test
ret
std
outsb
sbbl
pop
pop
pop
clc
lret
push
iret
inc
lods
clc
stos
fsubr
inc
leave
fs
stos
repnz
lret
sub
sbb
loopne
leave
ss
out
lock
and
mov
fs
test
xor
iret
xchg
test
lock
mov
add
or
pop
popf
jmp
jg
test
mov
xor
dec
jns
mov
popf
add
scas
mov
cmp
push
popa
dec
or
ret
add
add
aas
add
arpl
por
outsl
mov
mov
jne
xor
and
mov
popa
jbe
and
dec
fs
cmp
in
push
mov
pop
jg
imul
and
jns
adc
xor
rcrl
stc
sbb
dec
pop
testb
lock
movsl
mov
out
fcmovnbe
fildl
and
sbb
leave
push
aaa
sbb
lahf
push
lea
add
repz
add
lahf
sti
xor
dec
test
lds
cmp
clc
js
in
xchg
pop
repz
mov
push
jge
mov
mov
mov
fs
fstpt
int3
int3
push
jno
xchg
mov
or
or
mov
inc
in
inc
push
xchg
out
dec
add
fwait
scas
cmp
out
add
loop
sbb
arpl
push
enter
rcrb
loope
mov
clc
xchg
enter
and
adc
outsl
scas
out
add
sub
pop
dec
aam
outsl
inc
ljmp
iret
pop
jo
lahf
push
insb
sbb
jns
scas
cmp
repz
and
adc
ljmp
loopne
mov
mov
xchg
and
jecxz
inc
frstor
add
xor
xlat
add
pushf
test
lods
mov
daa
dec
leave
adc
out
mov
repz
sub
mov
mov
dec
outsl
jmp
inc
pop
into
out
add
mov
leave
int
jb
fs
mov
sbb
adc
sbbl
pop
lock
xchg
inc
gs
adc
pop
out
push
arpl
lods
hlt
push
test
in
std
cmp
mov
sub
ret
in
inc
add
ret
lret
pop
dec
inc
lds
fbstp
lea
hlt
loope
and
push
es
decl
add
sub
enter
cmp
jecxz
jae
xlat
das
mov
sub
and
out
stos
aas
add
mov
loopne
jle
addl
push
cld
ja
dec
adc
xor
xor
adc
fcomi
inc
xchg
cs
push
ret
cmp
loop
mov
inc
inc
push
idivb
xchg
jl
cmp
mov
shl
insb
fwait
xor
xchg
lahf
adc
in
pop
xor
push
arpl
fs
imul
cmpsb
jecxz
std
adc
les
mov
jmp
mov
mov
inc
or
cmpsb
lock
bound
mov
cs
sbb
bound
pushf
and
sub
in
mov
inc
inc
lock
ds
dec
mov
and
in
sbb
add
movsl
jg
sub
jae
jp
out
stos
push
mov
stos
cmp
sti
cmp
sub
mov
push
xor
or
inc
push
sbb
fdivs
aam
rol
adc
inc
add
std
repz
sub
out
jge
push
mov
lahf
push
pop
sbb
leave
dec
jp
pop
lods
gs
sbb
pop
adc
sbb
adc
cmp
ja
sbb
dec
fadds
mov
ja
inc
popf
pop
jg
aam
cmp
fucom
mov
jb
inc
hlt
push
jae
xorb
push
out
jae
mov
imul
and
ss
xchg
dec
roll
xlat
pop
testb
in
adc
aaa
mov
lret
int
cmp
cmp
mull
sarb
loop
mov
jno
push
add
ljmp
out
cltd
test
jnp
subl
xor
jae
lahf
test
mov
jle
sbb
fimull
inc
in
fstp
outsl
add
xchg
mov
pop
testb
cmp
mov
lds
xchg
xchg
jecxz
xchg
sub
and
lods
out
pop
mov
sub
xchg
pop
je
sub
and
push
mov
je
xor
or
push
inc
jns
adc
xor
fldl
pop
stos
sbb
adcl
mov
daa
adc
xchg
dec
and
sbb
mov
jge
and
and
mov
out
sub
pusha
or
in
pop
outsb
lds
imul
pushf
jae
and
cmp
cmp
jle
push
dec
ss
shl
sbb
hlt
int
pop
mov
movsb
inc
fbstp
loop
pop
cltd
jecxz
xchg
inc
lcall
cmp
imul
sahf
pop
lret
in
pusha
jl
jae
ror
repz
adc
jb
and
jae
cs
sub
cwtl
mov
into
push
jmp
dec
fmull
rcrl
or
mov
push
in
aad
xchg
add
shr
mov
add
push
fisttpl
xchg
nop
push
pop
xor
fwait
iret
fnstsw
and
xor
jae
sti
iret
jb
pop
adc
push
js
inc
xchg
div
cwtl
es
pushf
loopne
push
mov
ror
dec
add
xchg
out
hlt
adc
xorl
mov
mov
fyl2xp1
popa
mov
sbb
fcoms
fwait
adcl
or
jne
mov
add
outsl
loop
inc
pop
add
leave
imul
imull
imul
ja
shlb
lock
xor
out
decl
into
xor
push
sub
movsbl
pop
pop
cltd
xor
scas
fstl
shlb
leave
sbb
lahf
and
add
mov
push
inc
mov
xchg
les
gs
in
mov
push
testb
std
into
nop
daa
hlt
pusha
and
mov
pop
in
outsl
ret
jb
fwait
cmc
adc
and
sti
fisubrs
push
or
subb
and
leave
les
push
ret
xchg
and
xor
jg
fnstenv
push
ficompl
test
cwtl
jae
sub
jae
int
xchg
jns
cli
xorb
inc
fimull
out
outsb
adc
bound
ds
and
and
xchg
xchg
leave
js
ja
mov
mov
xor
ds
fwait
jge
std
pop
pop
lahf
and
mov
dec
jae
cmpsb
inc
lds
mov
pop
add
fidivrl
xchg
xor
inc
push
adc
mov
ret
mov
add
xchg
push
lcall
and
adc
add
ss
mov
fists
adc
es
mov
inc
in
push
adc
adc
cbtw
outsl
mov
push
xor
mov
xchg
ret
sbb
lret
xor
push
test
out
push
jno
scas
sub
push
cmc
loope
inc
xor
fs
add
push
cmp
dec
push
scas
orb
rcr
or
cmp
push
cmp
ds
int
sub
aaa
dec
pushl
mov
adc
cmp
sahf
bound
adc
ljmp
inc
loopne
xchg
cmp
popf
jb
loopne
cs
std
sbb
out
ret
push
adc
movsb
sti
ljmp
and
add
xchg
in
jp
das
mov
sbb
add
je
xchg
pushf
xor
sti
pop
mov
cmp
add
push
imul
ficompl
mov
inc
mov
add
aaa
lcall
in
mov
insb
inc
xchg
push
cmp
jmp
imul
xor
push
jl
sub
lcall
ficoml
mov
and
data16
aaa
addl
or
inc
imul
and
mov
fmuls
dec
jecxz
dec
xchg
stos
and
fbld
inc
jae
cmpsb
stos
jb
or
iret
xchg
xor
pop
or
leave
adc
or
add
psrad
push
hlt
xor
push
xchg
sbb
xor
in
xchg
cmp
push
movsb
sbb
add
adc
mov
aam
daa
in
stos
ljmp
jns
mov
cmc
scas
sbb
xchg
ljmp
inc
pop
aad
mov
mov
testb
mov
mov
add
cld
in
pop
jns
es
clc
push
loop
inc
std
lea
inc
daa
pop
outsb
test
scas
mov
sbb
xchg
imul
and
or
or
out
inc
rcrl
in
jg
lea
lahf
push
inc
dec
into
cmp
sub
adc
int
ficomps
rorl
notb
fimull
jmp
shl
testb
inc
aam
cld
pop
pushf
xor
loopne
in
in
mov
fisttps
xchg
dec
mov
push
mov
aad
pop
pop
xor
push
xchg
clc
xchg
cwtl
cs
add
mov
sbb
daa
popf
mov
subl
nop
popf
sbb
ljmp
mov
inc
pop
mov
aad
sbbl
lret
sbb
scas
jmp
enter
adc
add
das
push
xchg
pop
ljmp
push
cmp
inc
test
hlt
dec
dec
sahf
mul
adc
and
push
inc
bnd
inc
nop
divl
sub
fcmovb
ficoml
aad
inc
inc
mov
or
js
sahf
out
jecxz
mov
sub
stos
daa
add
popf
das
call
shlb
xchg
imul
pop
test
xchg
pop
aam
into
out
fstl
int3
rcrb
sti
sbb
clc
hlt
test
icebp
push
xchg
jle
sub
mov
cmp
sbb
jb
add
sbb
sub
push
aam
mov
pop
outsb
frstor
inc
icebp
rorb
adc
or
stos
mov
loopne
jmp
dec
sbb
dec
cmp
std
shrd
rol
ret
pop
lahf
hlt
scas
dec
hlt
cmpsl
add
xchg
mov
js
xor
lret
fbld
loop
in
rcll
jmp
incb
xchg
rcrl
pop
jecxz
sti
aam
mov
sub
xchg
jno
pop
sub
push
pop
and
into
loopne
adc
cs
fwait
mov
psllq
dec
aad
jecxz
adc
xor
jg
mov
negb
hlt
lea
inc
push
sti
js
lock
dec
mov
jmp
out
enter
xor
ja
out
xchg
inc
subl
push
push
out
push
or
cmp
dec
jecxz
scas
jns
lock
sub
ret
xchg
in
add
clc
iret
and
fdivs
sbb
add
das
fistl
and
cmp
loope
and
cmp
clc
lahf
ss
dec
push
sahf
cmp
ret
rorl
xchg
xor
vmovhps
jbe
adc
mov
in
stc
nop
fistps
pop
jae
pop
jg
sub
jbe
mov
in
sub
lock
lea
mov
cmpsl
mov
inc
sub
pushf
popf
sub
jle
test
les
add
popf
arpl
cmp
cltd
cld
push
cwtl
or
mov
repnz
and
mov
test
cmp
adc
xorb
mov
jbe
xchg
ja
mov
test
icebp
dec
arpl
notl
pop
iret
xor
sti
xor
inc
inc
lods
inc
sbb
xor
and
cmp
push
test
inc
mov
push
dec
jb
xchg
mov
rcrl
mov
test
loopne
test
aaa
cmp
loope
neg
sbb
arpl
mov
xor
pop
icebp
int3
loopne
aas
fs
popf
push
sub
inc
add
cmpb
push
pop
sbb
push
mov
lods
je
int3
jo
lods
dec
in
xor
xorb
inc
inc
aam
push
and
test
call
into
ja
dec
and
add
out
gs
xchg
mov
gs
hlt
xchg
and
mov
mov
lds
dec
fucomip
mov
add
cmpsl
inc
dec
lea
addr16
jg
inc
sbb
fildl
shrb
push
pop
push
outsl
sub
mov
push
out
cmc
mov
stos
outsb
aam
sbb
pop
push
mov
outsl
cmpl
enter
imul
outsl
xchg
add
outsl
mov
jecxz
push
sub
jno
cld
std
cwtl
mov
icebp
push
xlat
aas
nop
and
push
loop
insl
dec
sbbl
xchg
add
jg
dec
insb
sub
inc
jmp
add
cwtl
jle
add
jmp
mov
mov
test
aam
cwtl
nop
sbb
dec
mov
sbb
lahf
push
adc
lods
inc
cmpsl
jno
into
gs
xor
xchg
repz
mov
push
add
gs
xchg
fcomps
cs
add
sub
dec
gs
sbb
adc
sbb
jae
mov
mov
pop
mov
adc
sub
xlat
icebp
cmpsb
arpl
js
cmp
out
or
fcmove
sub
add
subb
xchg
movsb
addr16
test
mov
mov
test
jno
clc
outsl
daa
lods
into
jne
cmp
mov
dec
out
mov
xor
ja
sarl
das
xor
push
scas
xchg
movsb
xchg
or
call
pop
jg
into
cmp
rcrl
in
test
filds
xor
jns
cmp
push
inc
scas
add
add
adc
gs
inc
push
sti
push
xlat
mov
clc
or
lock
mov
jl
sti
ret
mov
fnstsw
aam
cmp
sub
test
loop
iret
push
xchg
mov
inc
mov
adc
sub
push
pmulhw
inc
jp
jb
cmp
mov
mov
dec
les
dec
jecxz
ret
adc
xchg
mov
paddd
xchg
xchg
or
out
adc
xor
inc
pop
add
rcr
popf
iret
insb
jle
fisubrs
cmpsl
pushf
xchg
adc
imul
mov
dec
push
mov
test
adc
mov
imul
insl
rolb
fwait
repnz
pop
sub
ret
and
sbb
pushf
add
inc
pop
arpl
mov
insl
dec
dec
movsb
inc
fidivl
shll
add
repnz
or
mov
jle
pop
andb
jae
leave
xor
or
test
mov
jb
mov
adc
int3
imul
rorb
sar
int3
xor
std
or
and
daa
jno
daa
cmp
push
aas
pop
out
dec
xor
adc
jns
mov
inc
dec
es
bound
int
sub
ret
std
jg
push
in
add
shlb
mov
xor
add
sub
jge
insb
rolb
out
mov
lds
mov
repnz
pusha
jge
xor
mov
stos
fs
sbb
xor
add
pusha
ss
out
lods
sbb
xor
mov
lahf
mov
jno
stc
or
xchg
stos
in
mov
sbb
in
jge
inc
pop
xchg
movsb
sti
cmpsl
push
mov
cs
and
pop
hlt
sbb
addr16
mov
or
xchg
cld
daa
push
cs
fistpll
adc
push
mov
pop
arpl
inc
sarl
mov
in
stos
xchg
jg
xor
fildll
imul
in
mov
rcrl
icebp
mov
adc
jle
push
mov
imul
sbb
push
aas
loope
or
jns
fwait
and
stc
mov
out
fsubl
pop
adc
loope
jbe
inc
add
lea
sub
ds
mov
movsl
sub
ret
push
jne
int3
dec
ljmp
out
xchg
mov
shl
outsl
mov
insb
test
mov
mov
fstps
popf
rcl
inc
push
dec
jmp
in
and
stc
push
add
pop
mov
mov
jmp
lret
mov
jnp
and
inc
pop
ljmp
jb
scas
mov
sbb
sub
sbb
hlt
jnp
lahf
ss
popf
jnp
xchg
das
jecxz
mov
mov
sub
scas
ja
insl
cmc
mov
repnz
and
test
clc
sub
sub
pop
push
nop
add
movsl
outsl
sbb
sub
jecxz
insl
les
push
out
pusha
dec
mov
push
fidivl
or
push
adc
pop
std
aaa
ret
sub
sub
inc
jns
sarl
inc
pop
out
push
fdiv
pop
in
test
ljmp
ret
xor
scas
call
jo
gs
or
outsb
xor
out
shll
mov
pusha
mov
sbb
or
fbstp
test
adc
inc
or
mov
stos
mov
push
or
mov
sub
sbb
jl
loope
inc
call
mov
aam
jl
pushf
pop
popa
jg
or
pop
adc
push
jmp
data16
mov
cld
xor
in
xchg
je
imul
ds
fs
repz
int3
xor
pop
dec
sub
and
mov
imul
xor
push
es
ret
fcomip
push
xchg
pop
cmp
or
cmp
xchg
cs
jo
or
test
rclb
popf
lahf
jo
cmp
leave
and
jno
cmp
fidivrs
daa
test
xchg
scas
ljmp
jb
adc
test
cmpsl
aad
mov
cmp
inc
lea
sbb
dec
adc
rcl
test
jmp
xor
lcall
ljmp
and
jb
mov
add
sub
xchg
mov
iret
outsl
enter
lahf
loope
xchg
insb
clc
cli
and
sbb
mov
andl
sbb
nop
jp
push
xchg
xor
add
stc
xchg
arpl
ss
dec
mov
jp
out
add
ja
dec
pop
jnp
mov
sbbb
lds
fwait
jp
mov
xor
jb
aaa
mov
push
stos
push
push
lods
pop
aaa
rorl
mov
cld
leave
pusha
out
sbb
sbb
inc
cld
jnp
inc
pop
mov
add
and
mov
ds
loop
nop
in
shl
shrl
lds
adc
mov
cltd
pop
aaa
sub
jecxz
push
sbb
fisttpll
mov
xchg
pop
push
cmp
or
push
ja
cmp
inc
pop
xor
pop
cmp
mov
push
movsl
shrb
loop
je
fbstp
aad
sub
jecxz
inc
sub
xchg
outsb
mov
aaa
out
repz
shlb
movsb
pop
xchg
stos
cmp
lods
icebp
loopne
adc
jne
pop
stos
nop
pop
fnstsw
cmp
test
jae
lock
adc
data16
adc
sub
arpl
fucomip
jns
pushf
inc
push
dec
mov
pop
dec
mov
jecxz
sub
xchg
xchg
ficomps
and
repz
rcrl
stc
and
aaa
mov
sub
sub
adc
mov
das
push
adcb
test
mov
or
shll
in
inc
cmc
cmp
mov
sbb
cmp
xchg
xchg
jb
push
push
out
rcll
arpl
pop
jne
std
sub
and
xchg
and
ljmp
jg
xor
pop
lock
sbb
call
sbb
sbb
cmc
lods
loope
and
xchg
mov
xor
out
cmp
in
xlat
roll
adc
dec
mov
or
push
dec
and
out
inc
sbb
pop
mov
or
mov
xchg
xchg
adc
nop
cltd
mov
dec
fnstenv
sbb
inc
popf
gs
mov
daa
sahf
dec
add
pusha
loope
shl
add
add
addr16
pop
loope
mov
sbb
mov
jge
xor
or
stc
popf
jg
jnp
mov
int3
cmpsl
jp
fcmovnb
lahf
or
test
scas
aaa
imul
ja
inc
rorl
mov
push
sti
sbb
lea
int
call
loopne
stos
dec
das
lcall
adc
stos
loop
pop
ds
jns
sub
xor
imul
jp
nop
cmp
incb
push
adcl
outsl
orl
lea
lea
xor
pushf
scas
pop
movsb
repnz
sti
cmp
jge
xchg
daa
les
jge
data16
nop
bound
mov
mov
pop
cmp
fwait
cmp
pushw
jbe
mov
sbb
cmp
mov
ret
leave
lods
cmp
cltd
mov
push
dec
xor
inc
add
dec
push
popa
ret
outsb
push
movsl
mov
std
rolb
mov
ret
push
mov
out
lods
push
outsl
test
movsl
js
mov
jle
push
sti
loopne
pop
scas
or
and
fadds
xchg
mov
stos
or
sti
mov
dec
fnsave
outsl
sahf
aaa
cmp
inc
outsb
pop
movsl
pop
jg
popf
in
aam
xchg
adc
adc
arpl
pop
sarl
mov
pop
into
sub
in
cmpl
aad
pop
pop
jo
lea
pop
decb
jge
into
sub
jmp
push
mov
bnd
dec
xchg
jp
and
in
fsubr
pop
mov
xor
int3
es
mov
movsl
imul
jmp
jnp
lods
das
ret
test
jne
sarb
push
in
lret
icebp
cmpsl
subl
pushf
jae
jg
lock
mov
ja
sbb
adc
loopne
shlw
sbb
addr16
inc
xchg
icebp
dec
mov
push
jecxz
mov
cmp
lods
xchg
pop
fsubrp
jmp
push
pop
mov
push
pop
loope
sbb
rorl
out
cli
and
pop
mov
mov
and
push
sub
xchg
sub
icebp
inc
and
cmpsb
shll
cmpsb
repz
sbb
enter
mov
and
test
testb
xor
scas
sbb
xor
inc
pop
or
push
popa
push
int3
jo
cld
add
mov
sbb
mov
dec
aad
mov
mov
adc
pop
cmp
xor
leave
pop
repnz
lret
push
out
mov
ss
adc
xchg
mov
cwtl
das
aam
fbstp
add
xor
je
lret
cmp
fcmovnbe
push
sub
jmp
inc
in
mov
lret
and
add
ds
jno
xchg
mov
pop
mov
jge
in
adc
mov
xchg
push
arpl
sbb
xor
xor
mov
cmpxchg
test
add
out
adc
jb
xlat
loope
rcrb
mov
pop
insb
mov
mov
popl
mov
leave
xchg
out
pop
mov
cmp
pop
loop
jl
jae
cmp
sbb
dec
mov
mov
sbb
add
pop
cmp
and
nop
shrb
and
test
push
jae
xchg
insl
mov
lahf
mov
sbb
ja
fnsave
scas
inc
js
xlat
push
sbbl
imul
cmc
cmp
dec
outsl
adc
jecxz
sbb
lret
std
lret
mov
pop
and
push
jle
imul
dec
mov
mov
fidivs
sub
adc
push
cmp
lret
iret
jp
subl
aam
in
lods
imul
das
inc
xchg
call
push
test
mov
add
mov
nop
fnsave
adc
std
jg
xor
dec
imul
mov
cmp
jns
ljmp
push
cwtl
or
adc
dec
push
adc
push
mov
mov
jno
mov
je
shlb
clc
fistpl
push
sbb
outsb
push
cmp
jno
push
mov
int
dec
sub
cli
icebp
cmp
xor
sbb
clc
mov
sti
outsb
icebp
mov
xlat
stc
popf
pop
dec
mov
je
cwtl
dec
push
lcall
inc
dec
dec
push
es
dec
dec
or
add
loop
pusha
les
add
add
mov
pushf
push
mov
xchg
loope
inc
xchg
les
div
dec
ficoml
dec
popa
or
vcvtsd2si
sbb
test
push
mov
pop
fldenv
sub
rcrl
cmp
mov
arpl
xchg
movsb
xor
cmp
sub
aad
fsubrs
insl
rclb
mov
or
sbb
roll
mov
xchg
add
mov
xchg
xorb
xchg
repz
ds
xor
loop
cmp
sub
pop
in
fists
out
rorb
jns
fcmovnbe
idivb
mov
xchg
sub
bound
sbbb
fwait
pop
push
cmp
das
add
jno
adc
mov
xchg
push
add
out
das
into
and
imul
xor
dec
rorb
shr
adc
sbbl
mov
cmc
adc
jbe
je
cmp
stos
xor
es
fnstenv
add
out
mov
dec
sbb
pushf
fiadds
or
xor
push
inc
sbbl
mov
pop
scas
ds
or
mov
int3
xor
es
in
sti
jle
ds
push
mov
mov
push
pop
sbb
loop
jnp
es
mov
ret
lret
in
shrb
cmp
lret
mov
xor
add
push
mov
in
jno
fwait
ss
es
lcall
jno
les
sub
mov
lods
dec
arpl
jge
push
notl
inc
flds
mov
lods
inc
int3
mov
sbb
in
int
jge
movsb
daa
ret
insb
dec
adc
lea
aaa
clc
fwait
bound
fimuls
push
jne
cmp
or
push
push
xor
je
add
cmpsb
lahf
inc
sbb
xchg
sbb
pop
ret
dec
pop
enter
into
mov
mov
jbe
cld
push
loope
std
sbb
int3
les
mov
and
popa
xor
std
lcall
pop
jo
int
xor
and
mov
cmpsl
scas
inc
jle
les
jle
inc
out
fdiv
push
test
insl
jge
stos
rcr
fisttpll
push
enter
ret
in
pusha
pop
inc
sub
mov
pop
dec
and
dec
jo
cltd
neg
push
out
mov
das
inc
or
scas
fcmovbe
adc
cmp
pop
jb
inc
push
call
cmp
hlt
leave
cmc
lcall
sti
lret
xchg
sub
dec
popa
inc
aad
aaa
shlb
inc
mov
rorb
ret
mov
fwait
push
out
xchg
pushf
push
in
outsb
stc
fldcw
xor
xor
add
mov
mull
mov
sub
shrb
jb
enter
sbb
mov
mov
mov
repnz
or
jmp
call
mov
pop
mov
add
inc
jecxz
cmp
out
xor
mov
inc
int
jnp
testl
imul
xchg
mov
xor
sbb
and
stc
addb
jo
dec
into
xchg
test
dec
shrb
mov
cmp
add
je
imul
jp
ret
mov
sbbl
and
ds
mov
mov
xchg
imul
mov
xchg
mov
cmp
pop
and
in
mov
pop
in
imul
cmp
idiv
rorb
loopne
and
adc
or
push
add
fidivl
pop
scas
jb
sti
clc
adc
mov
int
sub
aad
cmp
cmp
push
cmpsb
xchg
sub
jno
jg
mov
jp
push
jecxz
add
jle
xor
inc
lahf
pop
dec
lds
mov
call
in
fcoms
lds
mov
test
aaa
dec
lds
or
inc
and
add
mov
fwait
sub
xchg
test
mov
in
xchg
jmp
mov
subl
sub
pop
mov
jmp
iret
mov
and
fsubrp
inc
loop
enter
push
out
xchg
jmp
and
push
mov
inc
jns
dec
pop
sub
and
adc
ret
lret
lock
xlat
gs
add
test
fadd
xor
xor
jmp
pop
jae
shl
sti
es
xchg
test
rcrl
aaa
pop
nop
js
jnp
nop
sub
test
orb
jle
mov
std
push
scas
push
fwait
sub
jmp
out
or
test
and
push
enter
dec
jecxz
mov
fidivrl
jmp
in
mov
test
sbb
add
sahf
push
ret
xchg
adc
add
loop
popl
lods
mov
mov
push
pusha
xor
sub
push
jle
loopne
push
lahf
xchg
adc
inc
in
stc
jp
mov
sbb
or
inc
mov
jg
les
add
mov
and
inc
shrb
loop
or
mov
pop
push
scas
jecxz
push
mov
shl
inc
loopne
xchg
ret
outsl
jecxz
jns
pop
in
jge
aam
mov
lahf
repnz
xchg
inc
inc
xor
mov
jno
mov
aam
jb
outsl
or
pop
sbb
inc
loope
pop
into
push
ja
push
js
lea
jle
push
cmc
mov
nop
add
addr16
xor
pop
inc
ficomps
push
xlat
jo
jmp
and
or
adc
cli
pusha
mov
add
adc
push
sti
sub
ret
hlt
movsb
insb
add
adc
or
mov
stos
rorl
fisubrs
xor
mov
loop
lret
pushf
xor
adc
lods
pop
xor
fidivl
or
bound
and
jmp
lods
inc
add
fldl
fcompl
push
mov
scas
loop
bound
pop
into
stos
jmp
adc
ljmp
lock
pop
icebp
gs
jns
push
jae
lcall
lods
jp
adc
imul
icebp
testb
mov
lret
out
test
popf
call
shrl
std
outsl
add
test
int
rcrl
hlt
push
imul
mov
out
xchg
push
leave
int
push
or
sbb
rorb
cmp
sbb
sbb
aam
pop
xchg
adc
xor
lds
dec
in
inc
inc
pop
ror
hlt
push
jbe
movsl
add
sbb
cmp
idivl
shrb
icebp
loope
in
push
test
jno
pop
mov
jmp
outsl
mov
stos
mov
mov
and
sub
mov
push
repz
iret
xor
mov
dec
shll
data16
sbb
outsb
imul
frstor
pop
loopne
outsb
mov
adc
ja,pn
aam
imul
pop
mov
pop
fdivrs
add
jbe
cmp
jnp
dec
lds
adc
out
test
sub
mov
icebp
iret
pop
push
ds
out
nop
xchg
xchg
aam
call
push
xchg
fwait
clc
xchg
xor
push
push
sbb
adc
jmp
xor
cmpb
adc
ss
cmp
sub
aas
push
sahf
mov
enter
scas
lods
inc
insl
mov
push
cltd
mov
mov
pop
and
jno
sub
cmp
add
mov
call
or
pushf
mov
sbbb
add
cltd
cmp
loope
rclb
add
pop
mov
sbb
mov
jecxz
dec
std
cmp
movsb
sbb
sti
es
push
inc
push
inc
pop
testb
push
sub
and
push
add
jbe
jbe
sahf
xor
in
push
push
xchg
into
add
pop
mov
and
adc
fnstcw
test
sbb
lret
push
mov
ret
js
mov
scas
addr16
jge
xor
lret
jmp
mov
daa
sub
or
jbe
in
loop
mov
jecxz
mov
nop
sbb
arpl
dec
in
stos
out
loope
push
mov
adc
xchg
jo
sub
xor
xchg
inc
push
bnd
cmpsl
out
sub
xchg
push
in
sbb
xchg
es
and
enter
pusha
testl
jle
loope
adc
dec
push
cs
xor
push
push
fucomp
push
jb
test
out
hlt
xchg
sbb
out
xlat
pop
sub
in
je
jbe
lods
mov
mov
jbe
ret
in
ret
in
mov
mov
mov
pushf
and
cld
outsl
aas
outsl
fildl
sbb
add
push
mov
mov
mov
loope
or
mov
jbe
jp
mov
in
daa
outsl
clc
dec
xchg
sbb
out
into
mov
add
out
jbe
int3
cmp
pop
push
push
jbe
cmp
adc
ret
mov
repnz
sbb
pop
pop
sbb
pop
bound
ds
dec
aam
jl
cmp
xchg
push
ja
cmpsl
ret
sbb
jg
inc
stc
nop
jb
jb
popf
push
add
inc
or
xchg
iret
sahf
and
jmp
sbbl
or
test
movsb
divb
sub
dec
cmc
into
xchg
in
jl
shrl
pop
mov
adc
dec
cwtl
xlat
scas
mov
cmp
repnz
inc
xlat
push
sub
sub
sahf
push
stc
jle
jo
sbb
je
mov
fnstsw
sti
adc
into
pop
dec
pop
mov
pusha
mull
xor
xchg
das
xor
lret
bound
outsl
data16
xor
fwait
cmpsb
out
push
jae
or
adc
aas
cmp
enter
test
enter
jmp
orl
sbb
repnz
and
dec
loop
jle
sahf
adc
xor
and
sub
lods
outsl
mov
iret
mov
addr16
jmp
test
and
and
imul
cmp
sub
mov
es
lret
sbb
mov
adcb
push
aam
test
incb
repnz
lea
mov
push
andl
fwait
xchg
xor
ret
repz
adc
sub
xor
cmp
mov
cmp
adc
les
xor
mov
mov
adc
or
jmp
mov
jns,pt
xlat
outsb
push
lcall
or
test
insb
jns
fistps
jne
addr16
popa
and
jns
mov
adc
mov
sti
push
icebp
adc
mov
bound
xchg
movsl
out
jle
pushf
scas
sub
jno
bound
fwait
push
ret
mov
jl
shrl
add
pop
imul
out
xchg
mov
push
xor
int3
or
pusha
jg
pop
sahf
nop
adc
int
and
push
test
mov
jb
push
hlt
int
pop
andb
repnz
rcrb
pop
ret
jp
pop
mov
fisubrl
imulb
std
pop
sahf
and
mov
rcll
push
jmp
mov
or
dec
nop
push
jecxz
arpl
loopne
adc
arpl
push
jecxz
addr16
push
dec
and
std
sti
xchg
stos
jecxz
rcll
sbb
loopne
sbb
push
mov
js
cli
inc
adc
sub
inc
inc
adc
insb
add
xor
push
mov
lock
mov
fbstp
pusha
mov
jnp
cmpl
jmp
aaa
movsl
mov
mov
lods
mov
aas
out
aam
inc
cmpxchg
inc
hlt
xor
cmp
mov
jae
push
rcrb
ficoms
outsb
pop
movsl
lds
sti
jmp
mov
jbe
mov
bound
jno
jns
je
dec
and
sti
sub
and
fwait
loopne
inc
imul
jo
inc
in
sbb
jo
int3
push
incb
sub
mov
aas
jge
sbb
mov
fdivrs
jnp
mov
xor
jle
pop
icebp
pop
pop
lret
jg
int
mov
loope
sub
pop
repz
clc
pop
jae
cmp
jo
addr16
test
cltd
fiaddl
fwait
push
push
xchg
cwtl
xchg
mov
mov
repz
test
lret
ficomps
jg
test
loopne
aad
jmp
test
or
mov
mov
mov
pop
or
out
add
adcl
loopne
mov
xchg
adc
push
cwtl
sbb
insb
push
jbe
aas
mov
or
dec
push
xor
cmp
ret
mov
mov
push
fnsave
fwait
test
xchg
jle
shll
test
data16
cmp
fiaddl
test
ss
out
pop
rcrl
je
ss
adc
cltd
inc
mov
and
xchg
popf
inc
push
push
in
xor
cmc
inc
fistl
mov
ret
and
jle
jp
jge
iret
jmp
dec
jle
dec
push
dec
lahf
iret
mov
enter
xchg
add
mov
sub
cli
test
pusha
and
xor
jb
scas
mov
mov
adc
pop
imul
pop
popa
lods
loope
sub
repz
jg
dec
add
xor
and
test
out
lods
cmpsl
inc
or
inc
loope
sub
hlt
add
clc
add
jg
sbb
sbb
mov
mov
sbb
jbe
xchg
shr
stos
lds
push
jae
mov
mov
sbb
add
xor
mov
cmp
jmp
mov
push
jne
mov
jae
loopne
sub
inc
pusha
aas
ret
jp
mov
scas
fwait
movsb
dec
push
cmpsl
aam
mov
dec
hlt
nop
sbb
mov
imul
adc
mov
stos
and
mov
jne
sub
leave
orl
fimull
int3
por
in
scas
xchg
pop
int3
add
jle
inc
xchg
ljmp
es
cs
push
aad
repnz
xchg
lret
mov
or
test
cmp
jg
adc
test
dec
jne
int3
dec
sub
rcrl
push
nop
stos
cmp
inc
cmc
fnstcw
cmp
dec
scas
adc
shl
pushf
or
add
shll
ja
dec
adc
xchg
out
cmpsb
push
pushf
cmc
xchg
out
cmc
inc
bound
or
push
cmp
and
out
fnstenv
in
dec
cmpb
pop
repnz
bound
add
lods
lock
xor
add
es
pop
out
ret
fiadds
or
mov
add
fs
dec
sbb
mov
dec
andb
mov
push
or
mov
sbb
dec
out
mov
pop
or
xor
stos
popf
lods
cltd
cmpsl
adcb
cmp
pop
imul
xchg
dec
sbb
out
incb
inc
cmp
sub
pop
aam
add
mov
push
cmpsl
jno
gs
and
jle
push
in
mov
in
ja
lods
pop
pop
cwtl
add
neg
jb
cs
push
add
mov
jecxz
sub
ljmp
mov
adc
jle
out
push
les
add
or
xlat
jp
or
jp
cmp
dec
in
cmp
sub
sbb
mov
xchg
adc
or
imul
fstpt
out
call
subb
pusha
test
shll
stos
cld
shrl
pop
sahf
aas
addr16
repz
push
daa
jge
daa
cltd
sbb
inc
sahf
or
cs
inc
hlt
xor
mov
scas
stos
pop
xor
cmpsb
jge
push
jge
jg
sbb
mov
mov
add
nop
push
pop
adc
push
jg
fs
cmp
fcomi
push
and
push
adc
jne
or
int
pop
mov
fs
jp
outsl
lods
outsl
popf
xor
jno
repz
lock
fsubr
mov
pop
loope
sub
push
fs
arpl
adc
xor
outsl
or
sarb
mov
fistpl
loopne
cmpsl
add
pop
pop
ds
fsubrl
pop
test
hlt
dec
xchg
adc
pop
xchg
sbb
jno
int3
or
and
dec
push
jmp
or
loop
inc
mov
and
mov
orl
mov
out
pop
daa
inc
push
or
popa
les
cmpl
mov
dec
popw
shll
das
pop
mov
mov
cmp
or
out
or
mov
in
test
sahf
fxch
push
push
repz
cmpl
push
and
inc
inc
ficompl
imul
repz
and
cmpsl
fimull
test
cmp
xchg
cs
ss
dec
stos
mov
or
ds
xor
jns
jns
push
adc
dec
cs
mov
and
mov
add
jl
xor
fdivs
mov
imul
mov
rorb
shll
daa
in
aas
adc
outsl
loopne
mov
fsubrl
mov
ret
fstps
pop
pop
cmpsb
mov
daa
sub
stos
sbb
and
stos
in
jo
dec
popa
xchg
sbb
sti
inc
or
test
jle
in
sbb
lds
jb
clc
hlt
mov
mov
in
sub
out
sti
xlat
dec
inc
lods
dec
cmpsl
sahf
stos
out
sbb
push
adc
xor
std
xor
nop
xchg
aam
push
xor
dec
add
cld
adc
inc
sbb
mov
rcrb
scas
mov
sbb
aam
ljmp
adc
mov
sbb
pop
xor
ficomps
xor
sbb
cwtl
jmp
add
add
mov
jbe
pop
or
movsl
sbb
jbe
push
xchg
outsb
shl
fldenv
ljmp
ds
cmp
adc
adc
les
dec
adc
xorl
add
repnz
push
xchg
std
mov
cmp
or
mov
mov
inc
push
lds
pop
addr16
test
adc
adc
rcll
faddp
in
test
dec
ret
push
aaa
into
and
into
lock
filds
xchg
mov
mov
xchg
sub
jb
dec
pushf
mov
mov
nop
push
cwtl
add
in
mov
loopne
pop
push
outsb
sub
scas
and
push
pop
cmp
jmp
dec
sbb
mov
lods
pop
xor
daa
arpl
cmpsl
fcompl
cltd
setle
test
testb
jmp
fisubs
pusha
and
sub
shlb
loopne
mov
cmp
mov
test
ss
fnsave
add
inc
sbb
pop
add
ss
std
xchg
pop
insl
repz
fdivl
xchg
dec
movsb
dec
js
inc
aad
adc
inc
dec
push
fndisi(8087
je
call
push
dec
ljmp
cmpsl
xor
or
aaa
popf
or
xchg
and
xor
mov
mov
xor
test
shrl
sub
dec
stos
mov
pushf
cli
adc
dec
out
jl
arpl
insl
mov
sarl
and
xchg
dec
ja
xor
cld
jne
lods
xchg
push
orb
xlat
cmpsb
jns
hlt
das
pop
sbb
mov
jg
ret
in
xor
mov
mov
rol
sub
jb
insb
push
stos
adc
jmp
xorl
andb
in
scas
push
sub
mov
hlt
mov
jmp
sti
and
ds
pop
add
dec
xor
mov
call
out
int3
and
pop
mov
lret
std
popa
je,pn
mov
mov
rcr
adc
lret
jo
movsb
or
lds
push
aas
jae
jecxz
mov
iret
cmp
ja
movsl
mov
mov
movsb
push
ss
bound
lea
loopne
lods
mov
test
jl
shll
jns
xor
mov
cld
add
in
cmp
xchg
mov
fisttpl
push
inc
loop
leave
fisubrl
mov
sahf
call
mov
sub
add
ds
xchg
pop
fists
cld
enter
ret
add
arpl
push
jg
xor
enter
je
insb
bound
iret
lcallw
xor
jns
lret
mov
or
xchg
out
add
mov
movsl
lods
jmp
sub
shlb
and
insl
test
mov
fs
jp
jp
pusha
shlb
rorl
pop
outsb
stos
inc
pusha
outsl
cmp
pop
movsb
xchg
cmp
fistl
adc
orb
in
outsb
jnp
shlb
jecxz
imul
or
divl
xchg
inc
rcr
and
decb
gs
xorl
mov
std
add
imul
sahf
cs
icebp
ds
sbbb
or
pop
jnp
aad
out
xor
adc
or
inc
insb
jecxz
mov
pop
inc
popa
stos
shlb
xor
mov
test
push
inc
outsb
hlt
out
insb
in
fisttpll
push
cmp
push
gs
push
pop
xchg
xor
adc
and
or
cmp
fstps
lods
aaa
pop
mov
push
pop
jp
popl
mov
mov
cmp
loop
sbb
scas
jle
jl
push
scas
ss
xchg
arpl
pop
lds
jl
sarb
sub
or
pop
push
ja
pop
sbb
or
bnd
or
mov
cmpsl
jo
push
insb
out
inc
fbstp
fcmove
dec
mov
lods
sarb
or
cli
aas
xor
orl
mov
cmpsl
ds
xchg
cmp
ret
ds
popf
mov
lret
mov
movsb
repnz
xchg
sbb
in
add
fbld
test
and
outsb
adc
cmp
and
lret
xchg
mov
xchg
adcb
dec
notb
movsb
mov
popa
das
cld
mov
out
xchg
imul
lods
in
mov
cmpsl
adc
xchg
xchg
push
fimull
mov
xor
and
divb
std
mov
test
cmpsl
jnp
mov
jge
and
imul
popl
and
stos
pop
inc
popa
sub
xlat
repz
inc
lods
aad
jg
std
subb
adc
insl
inc
iret
push
outsl
into
lock
xchg
mov
dec
shrl
insl
sbb
push
mov
fistpll
lds
int3
push
out
sarl
or
xor
lahf
mov
push
sub
inc
fdiv
clc
xchg
rcll
mov
pop
or
xor
inc
gs
outsb
pop
into
cmp
aad
out
dec
cmpl
or
adc
mov
jns
pusha
pop
loopne
pop
push
add
outsl
push
cmpsl
enter
enter
lds
add
pop
dec
add
cmp
mov
add
imul
fwait
vphaddbw
shlb
ja
sbbl
or
pop
jp
cmc
mov
popa
mov
ljmp
add
xchg
xor
inc
cmpl
sub
shl
add
mov
xchg
push
sub
push
sub
rolb
cmp
in
xor
sub
mov
or
push
std
test
out
fxch
lods
jo
push
jno
ror
ffree
dec
shl
pop
pop
sub
fsubrs
outsb
mov
xlat
mov
stc
out
ret
sti
xchg
loopne
lret
mov
push
nop
mov
inc
out
fidivrl
pop
push
inc
cmp
in
push
mov
push
daa
rclb
jge
lcall
jl
lods
mov
aas
pop
clc
fcompl
add
cmpsb
sbbb
sub
mov
jecxz
shl
jmp
mov
jne
xchg
pop
scas
push
sahf
sub
inc
neg
test
xchg
push
add
stos
mov
mov
and
frstor
mov
aam
leave
add
xchg
mov
dec
inc
and
mov
mulb
cmpsl
cli
or
and
dec
ljmp
les
ja
dec
sub
mov
sub
fsubs
pusha
or
popf
aaa
push
inc
sub
int
es
xchg
sub
pop
mov
ret
pop
mov
mov
mov
stc
incl
movsb
fs
out
lds
idivb
xor
ljmp
sub
push
ja
ds
test
push
mov
ficoml
popa
fcompl
frstor
xchg
iret
cmp
xor
loope
inc
out
lret
fstps
mov
push
mov
scas
fsubr
sub
sub
outsb
pop
je
xor
cmpsl
inc
cwtl
gs
pop
mov
sti
add
adc
or
out
mov
dec
cmp
std
imul
out
ss
adc
cs
jp
jns
ja
sub
add
jl
mov
les
or
push
and
adcb
sbb
ja
push
in
mov
xchg
push
jne
jmp
mov
xor
mov
sub
add
lds
dec
jne
psrad
and
push
cmp
shl
enter
repz
lds
fdivrs
negb
js
lods
popf
lea
decl
mov
stos
es
xor
or
xchg
fdivl
mov
ljmp
push
sbb
adc
enter
and
loop
jnp
in
sub
push
mov
pusha
ret
test
pop
xor
jecxz
aam
fwait
cmpsl
lcall
push
dec
sbbl
xchg
rcrl
pop
mov
and
sbb
jmp
inc
notb
js
pusha
addb
dec
pop
adc
sub
mov
fwait
ja
mov
testb
pop
adc
push
and
and
mov
movsl
xor
std
xchg
mov
xchg
imul
ret
jl
dec
or
dec
stc
mov
cmpsl
lds
jg
rcrl
or
int3
jg
lds
mov
mov
loope
test
adc
push
xchg
jne
mov
aas
adc
fsubrs
mov
xchg
adc
push
push
sahf
inc
rcrl
repnz
xchg
mov
ror
gs
xchg
or
fcompl
dec
and
cwtl
adc
lret
and
iret
imul
pop
loopne
ss
cmp
jl
test
sbb
iret
inc
shrb
mov
sub
loope
aam
out
out
xlat
sub
and
fidivs
sub
and
mov
cmp
inc
sbbl
dec
addl
dec
imul
cmp
sbb
int3
adc
ja
shlb
push
lds
xchg
jg
cmp
dec
push
inc
in
mov
leave
push
inc
inc
jno
je
ljmp
inc
movsl
popa
cmp
cmp
mov
lods
mov
ret
mov
pop
outsl
pushl
dec
sbb
pop
lcall
cmpsl
adc
mov
sbb
xor
and
movsl
cmp
inc
mov
dec
push
inc
aas
into
loop
and
or
mov
lock
adc
in
push
mov
pop
jmp
or
or
fsubrs
inc
mov
fstpt
mov
lret
mov
int
jg
lods
addr16
xchg
sub
jae
cmp
jb
cmpsb
sub
mov
loop
push
add
mov
push
push
and
popf
sub
jne
iret
enter
dec
or
loop
lret
inc
inc
sub
sbb
fildl
sti
fcoms
mov
add
les
mov
lods
mov
out
xor
scas
mov
arpl
cs
ja
repnz
leave
pop
jl
cmp
xchg
add
ss
shlb
loop
lock
mov
mov
andb
xchg
dec
cwtl
jl
imul
inc
sub
inc
lret
xor
sar
push
adc
lret
fidivl
cmpsl
test
inc
fistl
push
shll
iret
loop
and
inc
arpl
in
test
xor
lods
sbb
push
push
stc
adc
icebp
movsl
pop
aaa
cwtl
xor
jmp
jl
nop
lds
aas
push
inc
xchg
sbb
mov
cwtl
ljmp
or
pop
inc
push
xor
jge
cmp
inc
jge
cmp
fnstsw
jno
test
add
mov
mov
inc
xchg
jp
loopne
bound
jne
mov
jg
xor
jmp
test
imul
lret
rorl
mov
jo
shlb
xchg
inc
stos
jae
ret
cmp
pop
xchg
insl
shlb
arpl
test
adc
sti
hlt
mov
loopne
aas
add
push
mov
sub
test
jb
imul
or
fimuls
insl
jg
ja
pop
mov
insb
and
adc
jge
std
cs
pusha
push
dec
dec
ret
cmp
cmp
mov
fsubrp
out
xor
stos
adc
rcll
xchg
mov
adc
mov
imul
mov
mov
lock
mov
cmc
aad
fadds
pop
orl
dec
pop
enter
xchg
xchg
popa
jo
adc
and
pop
sbb
dec
outsb
lcall
xchg
lcall
mov
sub
and
sub
lods
fistpl
outsl
sarl
pop
inc
imul
cmpsb
int3
fisubs
xchg
push
pop
sti
mov
rcrb
mov
xchg
xor
rcll
outsl
pop
sub
add
ljmp
mov
fsubr
cmp
into
and
sbb
cmpsl
shr
js
xchg
mov
mov
sub
adc
test
jb
aaa
xchg
cltd
subl
push
movsb
mov
inc
fcomps
adc
sub
scas
out
loopne
pushf
sub
cs
fisttps
inc
mov
xchg
mov
int3
xor
inc
in
pusha
bound
jecxz
enter
ja
outsl
cmp
add
jno
lds
push
xlat
jo
cmpsb
xchg
adc
stos
cmp
push
repnz
ret
xor
arpl
dec
mov
xchg
sbb
insl
pop
jge
jecxz
clc
mov
jbe
or
dec
jp
mov
icebp
jecxz
push
enter
jae
pusha
stos
jl
lahf
push
pop
sbb
movsl
cmc
add
rcrl
repnz
jnp
push
push
outsl
das
cmp
xchg
add
and
push
sti
inc
jae
sarl
fists
push
lods
or
dec
into
jnp
xchg
data16
test
and
flds
fsubrs
xchg
cli
arpl
jecxz
or
fdivl
insl
mov
cs
das
ss
jmp
popa
cmp
and
daa
mov
gs
ds
lahf
into
pop
lret
mov
inc
out
xchg
pop
mov
scas
rclb
xor
inc
pusha
repz
les
stos
inc
sub
int
out
in
test
push
add
loopne
xchg
ss
lock
mov
xchg
popl
inc
pop
loopne
ja
test
xor
mov
pop
popf
mov
mov
push
cli
and
sub
pop
dec
into
enter
stos
mulb
dec
stos
and
popl
and
and
cmp
jb
popl
inc
xchg
xor
push
andl
pop
cli
jne
jae
sub
sti
fdivrl
aas
adcb
filds
sahf
xor
mov
addr16
call
or
or
adc
movsl
sbb
repnz
mov
mov
in
xor
cwtl
cmc
imul
js
mov
shlb
sub
adc
pop
ror
call
sbb
xchg
scas
leave
imul
outsb
cli
popa
mov
mov
add
xor
jns
pop
xchg
lock
rolb
mov
xorl
fnsave
mov
push
sub
stc
inc
xor
push
mov
jne
and
aam
adc
leave
dec
stc
addl
dec
add
push
sub
inc
xchg
push
push
lret
xlat
xor
movsl
jge
add
jno
mov
jnp
or
cmc
movups
or
es
lods
cld
and
sub
jle
mov
xchg
repz
aad
pop
cs
loope
xor
xchg
loop
and
adc
xlat
call
push
dec
sub
pop
ja
lahf
negl
push
xchg
or
push
mov
pop
push
iret
pop
jl
in
ds
inc
cmp
dec
outsb
jb
popa
mov
aas
add
lcall
push
jne
mov
je
es
mov
mov
rclb
and
cmpsb
adc
xor
mov
xchg
popa
jecxz
mov
push
in
lock
cs
cmpsb
out
adc
dec
dec
ljmp
pop
mov
icebp
daa
outsl
inc
mov
mov
push
and
jmp
jecxz
xor
aad
lret
lahf
addl
and
bswap
xchg
imul
or
fwait
mov
adc
lret
ss
test
fidivl
and
xor
clc
jnp
mov
mov
popa
add
dec
mov
inc
lods
das
xchg
cld
lds
cmp
out
popf
fcmovnbe
adc
in
std
mov
pop
mov
mov
fldt
adc
cmp
mov
mov
cmp
jmp
and
or
cmp
mov
sub
inc
pop
cwtl
jp
jl
mov
or
mov
pushf
lahf
mov
cltd
out
fcompl
cli
mov
lret
cmc
pop
insb
cmp
test
mov
mov
xchg
mov
je
fnop
push
jge
inc
dec
loopne
dec
cltd
pop
mov
addr16
xorl
lret
lret
xlat
or
sbbl
lods
out
adc
rol
jbe
cmp
cmp
mov
mov
mov
pop
adc
sbb
mov
scas
and
outsb
xchg
loope
adc
jge
cmpsl
sbb
push
mov
sbb
cmp
pusha
mov
fnsave
sub
jns
pop
scas
sub
lds
fcomps
push
mov
fdivrl
sbb
inc
sbb
dec
and
and
jbe
fidivs
stos
lret
mov
pushf
ss
sti
jbe
mov
movsl
mov
push
shl
ds
mov
repz
mov
repz
pop
add
xchg
je
fsubrs
cbtw
pop
pop
les
adc
mov
mov
mov
jg
notb
sbb
xchg
mov
pop
cli
incl
orb
nop
mov
adc
mov
dec
mov
sub
imul
mov
add
icebp
shlb
xchg
mov
lea
adc
jge
ja
hlt
mov
sbb
ficomps
xchg
outsl
pop
mov
js
in
pop
push
adc
movsl
iret
mov
imul
mov
movb
mov
or
movsl
or
test
or
imul
mov
mov
jge
sahf
cmp
add
ds
icebp
fidivl
imul
jmp
or
lcall
in
stos
lea
or
or
pop
sub
ljmp
pop
movsl
or
stos
mov
pop
sub
sbb
test
or
dec
xchg
cmpsb
cmp
jae
shrb
ds
scas
outsl
popa
mov
push
xchg
xor
rorl
in
and
hlt
cmp
imulb
clc
fnsave
add
xchg
cmp
ljmp
call
xchg
mov
sub
in
sarl
adc
sbb
ret
ja
pop
pusha
les
mov
in
or
test
mov
shr
inc
cltd
push
xlat
pop
fwait
dec
pop
and
dec
jecxz
jmp
adc
sbb
mov
or
or
aad
push
imul
fsubrs
push
mov
dec
sub
mov
inc
push
pop
enter
mov
pop
and
scas
stc
rcr
push
daa
or
cli
mov
sbb
inc
out
call
call
mov
ret
outsl
sub
js
sbb
fildll
and
mov
cli
add
popa
daa
addr16
arpl
shlb
lahf
cs
lahf
fdivp
out
insl
out
cmp
fsubrs
pop
push
ja
je
push
jmp
push
adc
call
stos
sub
push
adc
iret
arpl
and
test
mov
xlat
push
mov
xor
repnz
inc
sahf
pop
add
pop
push
or
jb
test
mov
adc
sbb
aad
pop
lds
pop
imul
clc
or
or
xlat
mov
cmpsb
pushl
cmpsb
add
sbb
add
les
imul
arpl
sub
mov
jge
xchg
sbb
out
and
pop
popa
call
movsb
addr16
and
mov
mov
pop
push
cmp
test
mov
int
dec
loop
daa
js
outsb
cmp
cltd
scas
ljmp
pushf
cli
dec
push
ret
pop
mov
hlt
pop
movsb
add
pop
fimull
xchg
loop
in
lods
add
mov
addb
repnz
leave
addr16
mov
xlat
mov
xchg
dec
sub
adc
aam
mov
dec
mov
fsts
cmp
popa
das
xchg
shrl
out
mov
sbb
cmc
cwtl
dec
std
in
mov
rcrl
repz
lret
or
add
cmp
fstps
ljmp
push
movb
stc
or
xchg
push
lods
sub
sbbb
xchg
bnd
push
sbb
mov
ljmp
fbstp
dec
or
test
imul
lret
rcrb
dec
outsb
pushl
sub
sbb
jle
xlat
xchg
pop
push
lds
pop
dec
cltd
lret
sbb
mov
add
push
add
push
leave
xchg
out
cmc
xchg
out
cld
dec
out
subb
xor
fisttpll
adc
jle
ljmp
push
mov
shrb
std
aas
lea
push
mov
adc
lret
fs
push
sub
pop
xor
mov
sbb
cmp
lcall
push
dec
test
dec
xchg
add
shrl
sbb
pop
sub
pop
loope
mov
mov
inc
outsb
mov
add
pop
insb
inc
cld
pop
cmc
jne
and
aas
fwait
int
pusha
sub
xor
cmp
inc
fimull
in
cs
or
jbe
cmp
mull
std
hlt
out
mov
and
cltd
jnp
cwtl
inc
xchg
push
sti
jmp
pop
pop
pop
mov
pop
rorl
mov
cmp
and
inc
inc
and
cmpsl
out
mov
sahf
arpl
in
lret
pop
mov
cwtl
push
sub
xchg
out
cmp
adc
cld
aad
push
jno
and
mov
mulb
fcomps
push
push
aaa
sbb
cmp
pop
lret
test
xor
movsb
pop
test
pop
mov
inc
or
icebp
and
pop
pop
pop
in
scas
add
cmp
mov
xchg
repnz
xchg
sbb
dec
out
dec
insb
rorb
mov
mov
movsb
repnz
pop
mov
or
push
jmp
aaa
das
inc
and
xchg
popl
and
repz
adc
xor
call
xchg
push
cli
mov
and
and
push
loopne
aas
out
shl
lods
mov
loopne
or
lods
fyl2xp1
popf
idiv
aas
loope
pshufw
aaa
jbe
repz
cmp
imul
adc
int3
xor
lret
pop
mov
sahf
mov
mov
int3
sbb
ljmp
mov
mov
mov
sbb
dec
dec
orb
dec
idivb
aam
cmpsl
cmp
inc
ret
outsb
mov
sub
add
adc
pop
mov
adc
jle
cld
imul
ljmp
sub
repz
fnop
jle
add
pushf
or
add
mov
push
mov
adcl
sbb
jmp
mov
sbb
push
dec
sbb
mov
push
mov
mov
xchg
add
inc
jmp
xor
lea
jae
iret
and
xchg
mov
in
jns
stc
inc
movsb
mov
or
mov
loope
mov
pusha
lods
add
orb
pop
outsb
and
dec
dec
enter
xlat
cmp
inc
jne
lcall
xor
clc
lods
jg
pop
sub
repz
fadds
mov
outsb
push
push
push
mov
adc
mov
test
fdivrs
or
test
or
std
xor
sub
lcall
mov
adc
push
pop
mov
mov
jle
jcxz,pt
mov
in
ffree
mov
nopl
mov
mov
mov
fs
icebp
bound
das
add
push
aas
mov
mov
pusha
je
sarl
inc
test
pop
fs
jmp
fcompl
mov
and
fsubrp
sub
push
dec
nop
andb
test
ja
push
and
dec
dec
adc
mov
push
cmp
adc
cmpsb
loope
das
dec
ss
cmp
inc
int3
adc
sbb
xor
fxch
sarb
shlb
push
cmpsb
xor
icebp
shl
ja
scas
mov
fldpi
sbb
ss
lret
clc
mov
test
and
fistps
clc
sahf
adc
out
mov
inc
lret
push
jg
cmp
in
and
out
cld
iret
jg
inc
mov
adc
fwait
mov
fistpl
imul
mov
sarl
adc
mov
bound
xchg
sub
mov
push
out
test
cmpsl
call
xor
outsb
ret
or
jg
sbb
inc
clc
ljmp
lods
sub
dec
aad
ror
arpl
dec
xchg
outsb
cld
mov
mov
fdivrs
movsb
lret
mov
jle
xlat
sub
leave
loope
dec
pop
cmpsl
icebp
mov
imul
sbb
mov
mov
and
pop
and
dec
xchg
cmpsl
jle
stos
jl
xchg
shrb
ljmp
push
es
mov
add
insl
jge
sub
loopne
or
or
and
or
test
fdivs
aaa
adcl
fadds
adc
or
pop
out
sarl
pop
imul
mov
add
loope
mov
imul
call
test
dec
jne
and
dec
lea
sub
xchg
ret
xlat
cmc
mov
ret
sbb
hlt
or
push
fcomip
into
in
int3
mov
pop
imul
pop
xor
movsb
mov
hlt
repnz
sbb
lcall
pop
sub
sub
popf
jno
sub
ja
lcall
hlt
arpl
dec
sbb
out
sbb
mov
lds
xchg
testb
rclb
sahf
push
push
ljmp
cmp
adc
mov
mov
inc
push
or
adc
repz
jmp
movsl
std
fsubl
insb
shlb
jns
mov
int3
adc
xor
xor
and
frstor
xchg
decb
mov
in
dec
sbb
jne,pt
xor
jb
scas
push
mov
push
push
loope
outsl
mov
loopne
dec
and
mov
call
dec
adc
jno
outsb
jmp
cwtl
jcxz
xchg
cmp
pop
lret
pop
lds
push
or
fyl2x
insl
push
mov
mov
pop
sahf
mov
test
decb
add
out
sbb
testl
sbb
mov
in
ror
sbb
outsl
loope
notb
jae,pn
xchg
lock
dec
sub
push
xor
popa
fistl
cltd
xchg
jmp
mov
rcll
adcb
push
ficompl
scas
jo
or
lods
jo
daa
fbstp
jbe
and
sub
and
cmc
push
arpl
andb
inc
xor
mov
enter
mov
xor
jnp
dec
mov
in
clc
mov
scas
adc
in
lret
insl
jo
xchg
mov
sbb
mov
cmp
inc
stos
cli
inc
subb
test
ret
push
sbb
dec
notb
pop
add
aas
mov
add
hlt
xchg
out
adc
fmuls
shl
incb
mov
seto
hlt
jl
xchg
lods
sub
sbb
cmovnp
outsl
lock
add
imul
pop
adc
sbb
mov
pop
les
ret
test
xchg
out
fucomp
inc
pop
cmp
test
ss
sar
pop
sub
sbb
or
ljmp
fs
movb
clc
push
imul
pop
dec
or
sahf
cmpl
ljmp
mov
inc
ljmp
ja
imul
stos
dec
xor
add
sbbl
jl
ja
test
mov
sarb
mov
xor
fwait
jns
and
xchg
jp
xlat
daa
xchg
insl
cs
mov
scas
adc
jl
add
pop
cmpsl
cmp
test
js
and
fistpl
xor
test
inc
mov
dec
jmp
movsl
mov
aas
fs
or
sahf
subl
inc
lcall
pushf
inc
xlat
cld
pop
xor
pop
push
pop
jns
inc
dec
es
add
adc
pop
mov
int
mov
icebp
cmp
mov
push
test
push
daa
outsb
dec
clc
inc
lret
sti
sbb
sub
mov
push
aad
rclb
adc
pop
in
jl
xor
add
push
cmp
jmp
xchg
lods
mov
dec
xor
pop
jmp
loopne
and
jb
jp
fdivl
push
and
inc
movsl
cmp
dec
cmp
arpl
jae
jae
int3
loopne
scas
adc
fldl
test
mov
xchg
rcll
or
test
push
hlt
mov
test
xchg
mov
cmp
add
lahf
mov
dec
and
push
lods
pop
pusha
mov
mov
push
mov
inc
movsl
inc
pusha
xlat
and
out
cld
movsb
pop
sbb
or
jmp
imul
testl
jge
adc
pop
cmpl
cli
xchg
inc
rcrb
pop
xor
dec
inc
sti
sbb
in
sahf
jne
fcmovb
rolb
inc
sub
and
in
pop
sbb
pop
gs
push
adc
test
scas
aaa
jp
fwait
leave
cmp
jo
pop
aas
decl
scas
xchg
xchg
jmp
hlt
xchg
jecxz
adc
sub
pusha
imul
fcmovnb
pop
adc
inc
sbb
mov
xchg
mov
add
mov
popf
and
mov
sbb
inc
fnstcw
sub
adc
mov
decb
imul
ret
pop
inc
cli
subl
push
cmp
insl
ja
lods
pop
mov
push
mov
into
cmp
in
sarb
pop
out
call
subl
mov
movsl
and
sub
in
mov
fbld
rclb
popf
sub
mov
cmp
cmp
mov
leave
shlb
xor
notl
std
addr16
mov
in
sub
push
mov
sbb
decl
aaa
imul
or
mov
mov
rclb
mov
xchg
imulb
into
data16
mov
repnz
int
repz
loop
jecxz
push
outsl
and
mov
ret
jp
dec
test
cmp
repnz
push
and
push
mov
xor
pop
outsl
jo
aam
rcrl
repnz
dec
in
sub
stos
nop
cmc
out
adc
fucom
xchg
mov
fsubl
int
pop
inc
jecxz
cmpb
scas
pop
lds
xchg
add
inc
loope
sahf
fwait
jbe
jl
mov
fists
test
out
xchg
and
sub
in
enter
inc
dec
imul
aaa
adc
test
pusha
xchg
mov
and
fbstp
add
inc
popf
or
iret
enter
inc
inc
inc
push
xchg
lods
jbe
push
jmp
lahf
dec
repz
cmp
push
fs
xor
xchg
jbe
xor
mov
sti
add
xor
das
inc
dec
sbb
cmpsl
cli
or
cmp
mov
clc
aad
mov
test
ret
cmp
lock
aam
lock
xor
movsb
dec
aaa
test
mov
aam
popa
push
repz
and
aas
xchg
push
sub
pop
fidivl
jge
xor
popa
enter
xchg
in
int3
lret
sbb
dec
mov
test
fimuls
loope
scas
jns
and
shrl
repnz
ljmp
cld
xlat
and
pop
lret
mov
pop
repnz
cld
cltd
repz
mov
push
nop
scas
aam
sub
mov
mov
pop
mov
mov
fdivs
push
repz
push
dec
adc
out
out
pop
sbb
jle
fstl
mov
in
ret
out
cwtl
pop
xchg
and
fcomps
inc
lods
or
scas
mov
or
in
xor
pop
xor
dec
dec
mov
pop
mov
loopne
mov
push
sbb
mov
scas
sarl
pusha
adcb
mov
adc
in
ficompl
dec
mov
jmp
fcmovbe
push
push
pop
cmpsb
stos
sub
loopne
xor
cmpsl
ds
mov
adc
inc
fnsave
fdivl
in
fstps
xor
les
inc
mov
xor
mov
xchg
cmp
test
lret
sbb
xchg
mov
cmp
push
popf
xlat
dec
loop
sub
roll
gs
movsl
mov
adc
sbbl
sub
data16
repz
inc
insl
inc
jns
fcompl
cmc
cmp
clc
iret
imul
xor
ret
arpl
cli
ljmp
dec
mov
testl
push
pushf
mov
pop
cwtl
pop
cmp
rcrl
sub
jmp
dec
jge
cmpsl
cmpsb
mov
adc
adc
sti
or
push
loop
mov
push
inc
icebp
shl
fnstenv
pop
movntps
or
adc
les
adc
xchg
stos
loop
pop
cltd
lds
or
xchg
nop
ljmp
add
add
das
xor
pusha
inc
xchg
xor
push
ficoml
mov
or
xor
lahf
mov
movsl
mov
dec
addb
cld
imull
jmp
push
push
jo
dec
mov
dec
push
cmp
subl
popf
sahf
xor
int
inc
pop
jmp
sbb
insb
add
test
dec
negb
pop
jo
add
movd
arpl
les
or
adc
test
movsl
inc
ja
out
xchg
push
or
add
jge
mov
mov
dec
sbb
xlat
or
dec
pop
aas
jb
push
sub
fcomip
push
push
ljmp
inc
pop
and
pop
add
js
mov
cli
inc
mov
fdivrs
enter
pop
lods
adc
jnp
pcmpgtd
cmpsb
jp
pop
adc
sti
sbb
arpl
mov
cmp
movlps
into
push
test
loopne
js
jae
mov
rorb
adc
lea
xor
push
insb
bound
rclb
lods
inc
mov
loop
cltd
lods
enter
mov
mov
mov
jg
or
pop
or
imul
jg
in
mov
inc
into
je
add
sti
popf
sub
pop
mov
call
push
jnp
aam
pop
movzbl
sub
ja
mov
imul
divb
aam
clc
adc
ss
cmpsl
cmc
mov
fnstenv
add
ss
xor
das
shr
add
adc
std
jno
or
cmpb
and
outsl
dec
rcrl
fs
test
out
je
inc
cltd
pop
mov
cmp
push
aas
fnsave
sub
je
stos
jne
xchg
incl
xchg
jno
xor
mov
jnp
sub
lahf
adc
xor
lds
rol
mov
call
mov
adc
push
adc
pop
jge
mov
mov
push
cmpsb
sub
hlt
mov
outsb
in
pop
sub
xlat
mov
mov
mov
ja
in
adc
int3
mov
lcall
jne
idivb
lret
orl
in
enter
jae
scas
insb
push
mov
inc
or
mov
loope
dec
aad
rorb
push
stc
jbe
add
icebp
nop
stc
mov
sub
rorb
mov
mov
adc
ret
mov
dec
mov
ffree
rcrb
xor
loopne
cmp
inc
sbb
jb
adc
pushf
scas
outsl
shl
jge
jb
lcall
test
test
shr
iret
pop
stos
in
pushf
add
push
dec
loope
das
lods
add
mov
push
cmpb
mov
pop
pop
cmpsb
mov
cmp
pushf
cmc
iret
mov
stc
adc
xchg
pop
rcll
shl
jl
ficoml
lcall
insb
jle
pop
xor
sbb
je
lods
popf
pop
lea
fmull
popa
fdivrs
pop
xor
jecxz
dec
aas
push
sub
stos
mov
loop
aad
lea
testl
pop
das
cmpsl
movsb
xor
movsb
mov
rcl
xor
mov
xchg
push
psubw
jmp
push
adc
pop
sub
out
test
push
or
lret
shlb
imul
adc
xchg
lea
pusha
jb
mov
int
gs
dec
fbstp
pop
cmp
sub
outsl
cmp
in
mov
mov
lods
lods
shll
fisubl
dec
mov
bound
daa
xchg
pop
mov
enter
icebp
nop
xor
data16
xlat
out
dec
mov
pushf
xchg
and
or
dec
aas
or
sahf
or
out
mov
push
mov
jno,pt
xchg
jge
mov
test
adc
mov
push
push
and
fbstp
inc
mov
xor
inc
int3
cld
aad
fdivrs
test
stos
sub
lcall
dec
xchg
xchg
add
adc
icebp
inc
push
fistpll
sar
into
fmull
int
imul
aam
scas
pop
mov
xlat
pop
jmp
adcl
inc
dec
test
imulb
imul
pop
sbb
jmp
gs
xchg
fldt
in
and
or
cmp
pop
testb
and
sub
addr16
loop
sti
enter
jp
jnp
leave
pop
xor
sbb
xor
mov
jmp
xchg
push
nop
das
ret
pop
pop
cmp
cwtl
fistpl
push
pop
push
inc
dec
cmp
jns
jb
add
push
mov
fdivrl
jl
dec
adc
mov
icebp
movsb
es
mov
mov
mov
sbb
mov
dec
mov
ret
shll
pop
aam
jg
mov
inc
stos
cmpsl
cmp
jge
sahf
lods
inc
dec
fdivrs
in
in
mov
push
xor
or
cmc
lock
aas
push
es
stos
fwait
je
xchg
outsb
sub
add
pop
mov
inc
xlat
cmp
pop
mov
into
jle
lods
inc
xchg
push
mov
adc
out
jnp
sub
or
sbb
or
test
or
or
stc
cmp
mov
jg
mov
ret
fwait
pop
pop
arpl
mov
insb
cmpl
jecxz
enter
aaa
push
sti
imul
aad
pop
jo
dec
iret
scas
repnz
cmp
enter
int
into
sub
sbb
loop
jne
sub
jae
aam
dec
fimull
test
aas
pop
cmp
in
xchg
in
cmp
aas
inc
jecxz
les
mov
daa
pop
jge
stc
dec
pop
push
cs
mov
test
outsl
jnp
arpl
stos
push
int
fwait
jns
fcomps
push
lods
mov
sahf
push
mov
fldl2t
add
mov
xchg
push
xor
int
cwtl
fs
mov
xor
into
jle
decl
sub
and
lods
jl
mov
adc
or
jmp
imulb
daa
mov
dec
sbb
push
stc
out
movsl
inc
push
fbstp
imul
dec
cmpsb
jle
mov
loope
sarb
push
mov
sahf
test
push
sbb
test
fsts
cmp
in
push
mov
mov
push
add
arpl
mov
ss
int
daa
cmpb
call
pop
imul
fcompl
jne
icebp
les
and
clc
and
nop
stos
in
cmpsb
arpl
addb
sub
jp
jl
add
mov
mov
leave
cwtl
mov
scas
xchg
push
std
or
test
mov
out
imul
hlt
xchg
xor
add
ss
in
pop
push
pop
push
les
loopne
cmp
imul
pop
lds
js
adc
sbb
mov
mov
int3
push
shlb
xchg
incb
push
or
fidivl
pop
mov
fcomps
pop
sti
ljmp
popa
pushf
pusha
std
test
ss
inc
test
inc
lahf
cmp
xor
shr
mov
stc
mulps
in
jbe
push
test
push
fiadds
rorb
vandpd
test
mov
je
inc
xchg
or
or
mov
pop
out
or
xor
pop
and
ret
add
cmp
fidivs
mov
lahf
and
inc
xchg
sub
sub
or
out
andb
dec
aad
jle
mov
int3
dec
imul
loop
aam
mov
push
cmp
jecxz
je
xchg
subb
mov
mov
push
lret
insb
push
sahf
sarl
adc
jae
pop
leave
mov
fstps
dec
push
cli
sarb
xlat
or
mov
fs
lret
mov
xor
hlt
shr
lods
pop
and
adc
cmp
imul
loope
or
jno
mov
jb
adc
pcmpeqw
mov
mov
outsb
std
sbb
aam
add
std
mov
lods
subl
pop
mov
js
push
lods
xchg
jb
add
cli
xchg
inc
int3
adc
sbb
mov
jne
psllq
lret
fldenv
out
adc
ss
add
repnz
test
xor
jne
mov
lea
xchg
or
dec
push
or
add
lahf
mov
cld
xchg
cmp
dec
xor
popa
xchg
lret
or
mov
ror
pop
scas
mov
movsb
xor
or
aaa
lock
pop
das
test
ret
mov
loopne
cmpsl
jecxz
subl
fistpll
cmp
rcrl
push
fidivl
push
stc
or
mov
dec
outsb
decb
movsb
dec
scas
pusha
movsl
lret
mov
push
xor
push
daa
ljmp
or
mov
or
cmp
clc
xchg
xchg
mov
stos
in
enter
xor
xor
fs
daa
leave
pop
cmc
xor
popf
and
inc
lods
int
sbb
bound
rcl
adc
jns
adc
stos
ret
shlb
clc
pop
xor
fstl
xchg
push
cmpsb
repnz
mov
jecxz
idiv
pusha
pop
ffreep
mov
push
rcll
out
sbb
ret
jmp
or
mov
std
in
adc
lods
or
fbld
sbb
xor
in
ret
jge
mov
call
fnsave
adc
fnstsw
mov
sahf
ret
std
subl
loopne
movsb
adc
mov
outsl
ret
pop
jae
rorb
popa
and
xchg
push
inc
jno
and
push
scas
inc
das
adc
jp
fldt
in
push
sbb
imul
lods
out
cmp
xlat
repz
dec
ja
lds
lcall
sarl
adc
xor
push
jmp
or
hlt
aad
sbb
je
out
dec
out
pop
xlat
pop
mov
dec
jno
jecxz
outsl
dec
mov
ficomps
xor
pop
sbb
pop
xchg
cs
fsubrl
cmc
je
push
xchg
mov
sbb
insl
sbb
adc
sbb
xor
sbb
push
inc
fldl
inc
repz
add
mov
daa
add
out
popf
adc
cmpsl
push
pop
jne
push
test
ficompl
inc
cmp
dec
jo
xlat
stos
stos
dec
lret
sahf
mov
out
mov
sbb
push
push
cmp
rcll
shr
dec
mov
push
cwtl
push
inc
sbb
dec
andl
imul
call
pop
add
loope
adc
mov
mov
aad
pop
ljmp
pop
pop
jne
mov
iret
pop
and
or
cmc
jp
stos
test
xor
daa
popa
mov
shlb
cwtl
and
add
mov
out
add
in
push
or
xchg
test
fs
lea
adc
popa
jmp
sbb
or
xor
jp
sbb
lahf
mov
nop
fnsave
dec
adc
das
xchg
loope
clc
pusha
cmp
and
push
cltd
mov
mov
add
push
jge
cli
cwtl
in
test
pop
jge
leave
scas
dec
jl
divb
fwait
push
ret
pop
mov
scas
jp
arpl
xor
lahf
test
and
repnz
or
dec
es
loopne
mov
cltd
test
testb
rcr
mov
fwait
sbbl
sbb
sbb
cld
leave
mov
repnz
aas
testb
leave
mov
stos
pop
add
outsl
push
pushf
or
into
out
mov
push
and
outsl
not
sbb
mov
js
ljmp
sbb
cmp
mov
mov
jge
fstl
xchg
inc
mov
fsubrs
sti
mov
mov
scas
scas
push
pop
pop
lret
cvtdq2ps
mov
clc
adc
pop
jecxz
cmp
je
and
cltd
mov
or
test
sub
sub
scas
gs
inc
or
lret
sub
jp
lret
out
lret
into
ret
testl
mov
cmp
dec
mov
sub
shlb
dec
aad
in
pop
ret
jnp
jmp
add
jecxz
ja
sub
push
cltd
dec
fs
lods
addr16
push
ss
pop
xlat
and
shll
hlt
dec
jbe
std
js
pop
js
sahf
out
lret
xchg
xchg
and
cmp
andb
add
idivl
fidivrs
dec
gs
stc
push
out
jl
jae
mov
dec
push
loopne
jae
xchg
pop
xor
xor
lahf
fs
mov
pop
sub
or
sub
xchg
divb
or
cmpsl
mov
push
fbld
test
cs
std
sti
mov
push
cltd
cwtl
das
lret
jmp
mov
lods
aam
mov
clc
push
and
outsl
pop
mov
fsubl
cmpsl
lcall
xchg
lahf
orl
roll
push
mov
mov
in
or
popa
ret
test
xor
push
and
popf
adc
lahf
jo
inc
push
inc
dec
inc
mov
dec
jo
shll
repnz
aad
xor
shlb
mov
inc
add
daa
outsl
or
sbbb
pop
in
push
xlat
inc
out
imul
adc
push
sub
daa
mov
bound
shll
inc
icebp
cmp
popa
stc
push
sbb
push
inc
mov
in
pushf
lods
pop
pushf
cli
sarl
stos
add
dec
mov
aas
mov
cmp
push
or
or
cmp
inc
adc
jae
fdivs
push
and
inc
aaa
sub
cmpsl
dec
push
pop
mov
outsl
ss
inc
pushl
push
je
xchg
jg
xchg
faddl
out
rorl
into
xor
or
add
jmp
jbe
push
xor
xchg
test
cmp
pop
push
repnz
repnz
addr16
adc
imul
je
insb
and
adc
or
dec
pop
out
negl
in
jb
out
xor
insb
in
int
lret
pop
scas
mov
mov
adc
or
pop
je
or
scas
inc
data16
jl
cmp
mov
fld
cmp
mov
sbb
cmp
xchg
pop
jmp
dec
pop
shll
in
imul
shl
jge
fstps
cld
jnp
xchg
push
hlt
xor
jbe
ds
xchg
cs
cmp
xchg
pop
adc
popa
aad
mov
jmp
sub
pop
sub
jae
icebp
adc
cwtl
push
mov
mov
dec
mov
inc
fistl
and
pop
lock
dec
call
inc
push
mov
mov
les
pop
pop
fldcw
xchg
movsl
sub
jb
movsl
or
xchg
jmp
xor
jns
mov
push
and
dec
lret
xor
cltd
cmp
mov
push
push
cld
js
sub
push
in
imul
int
add
mov
and
imul
push
enter
rorb
dec
jl
pop
repnz
jo
jmp
repnz
push
les
cltd
xor
stc
stc
ret
pop
dec
loope
mov
push
push
mov
hlt
xchg
sbb
push
cmp
jns
mov
mov
js
mov
mov
ss
mov
icebp
push
jp
mov
cwtl
aaa
jp
fs
mov
dec
mov
push
mov
pop
push
fistpll
push
inc
flds
jo
out
rcrb
outsb
xchg
or
xchg
ret
lock
mov
movsl
mov
and
cmpsb
push
mov
mov
lds
sub
shrd
in
or
vcvtss2sd
les
add
dec
out
enter
dec
pop
call
or
movsl
mov
dec
out
dec
push
xor
jae
mov
imul
or
clc
adc
sbb
pushf
pop
sub
mov
mov
jb
mov
adc
xor
imul
xchg
pop
test
insl
mov
xchg
leave
enter
cmp
in
mov
or
mov
push
andl
sbb
enter
outsl
popf
das
dec
sbb
int3
adc
pop
and
mov
arpl
ja
outsl
and
adc
dec
mov
xlat
subb
mov
or
loope
dec
xchg
cld
dec
sbb
xchg
cmpsl
ret
pop
adc
pop
popa
ret
sbb
daa
cmpsb
pop
dec
mov
loopne
aam
gs
lcall
lods
push
pop
xor
je
mov
scas
mov
pop
fstpt
adc
xchg
xor
pop
js
loop
jge
popf
adc
pusha
add
xor
insb
inc
jle
pmaddwd
adc
mov
mov
outsb
sbbb
adc
gs
add
cmp
push
adc
bound
stos
inc
mov
fdivrs
xor
mov
clc
int3
dec
push
loopne
mov
in
inc
xor
mov
add
adc
sti
mov
jns
cs
add
adc
frstor
aas
mov
mov
xchg
jae
int3
pop
and
icebp
mov
jns
pop
and
dec
out
cmp
imul
lock
pop
inc
daa
adc
push
jo
mov
mov
lcall
dec
and
pushf
jne
mov
xlat
call
loopne
jmp
or
xor
fbld
mov
sar
mov
cli
sbb
sbb
xchg
sbb
mov
imul
push
aad
mov
lret
pop
push
jb
add
adc
mov
call
jnp
fcmovne
sti
and
cld
sbb
pop
loopne
stos
sub
mov
inc
pop
sbb
mov
sbb
adc
cmp
mov
loop
inc
movsb
mov
add
dec
loop
mov
xor
fldt
aad
inc
in
mov
pop
hlt
lcall
xchg
lock
adc
mov
mov
in
call
mov
les
xor
fcmovne
push
cld
mov
fdivs
enter
imul
mov
loop
gs
jb
inc
lsl
push
es
pop
aas
hlt
cmp
dec
lock
adcl
or
jg
stos
mov
adc
adc
xor
sarl
dec
out
rclb
fdivs
subl
xchg
outsl
inc
push
stos
aas
cmc
dec
jae
push
jae
inc
dec
mov
xchg
insb
jle
loope
mov
icebp
mov
or
mov
mov
in
adcb
pop
loopne
xchg
xchg
fwait
rcl
xor
nop
push
adc
test
gs
jne
shll
int3
sbb
xor
insb
dec
push
inc
mov
data16
mov
mov
aam
lahf
add
sarb
shll
rcll
xchg
add
fs
fists
loopne
sbb
sub
insb
popa
and
or
out
in
jo
dec
movsl
inc
imul
ja
ret
dec
aas
push
mov
out
xor
push
add
into
pop
pop
xor
mov
add
add
mov
dec
lret
mov
adc
stc
sub
dec
inc
fdivrs
mov
test
in
add
repnz
cmp
int3
movl
or
or
movq
js
out
fucomip
sub
adc
cli
add
inc
mov
in
ja
repz
dec
push
lds
mov
xchg
or
and
mov
pushf
jecxz
pop
repnz
push
jns
or
loope
jbe
push
mov
push
clc
movsl
fwait
mov
or
in
cmp
lods
rcrb
push
mov
cmpxchg
add
shll
outsb
leave
movsl
or
xchg
jle,pn
sub
push
sub
hlt
lods
jae
xchg
movsl
mov
shl
lock
fisubs
iret
sbb
popa
inc
gs
aaa
bound
fwait
adc
sahf
and
inc
and
adc
xor
call
sti
repnz
rorl
push
ret
jp
mov
jae
mov
mov
pop
cli
pushf
sarl
mov
xchg
push
xchg
mov
jle
or
add
jle
clc
mov
clc
ja
xor
xchg
xlat
js
pop
mov
mov
pop
inc
sbbb
push
mov
dec
xor
rorb
pop
mov
fadds
or
call
ret
fadd
xor
pop
fimuls
les
mov
jp
cmpb
enter
rcr
das
mov
mov
xchg
mov
pop
mov
mov
fbstp
pop
in
dec
add
cmc
es
cmp
andb
adc
loope
repz
jl
inc
insb
sub
das
addr16
in
clc
je
pop
ja
stos
xchg
add
es
mov
mov
cmpsb
loope
test
dec
adc
repz
mov
jne
fisubl
clc
mov
mov
mov
push
or
mov
loop
add
add
jns
sub
push
push
jecxz
loopne
xor
sub
scas
fiaddl
xor
xchg
jnp
in
jbe
cmp
sub
pop
inc
dec
or
ds
sbb
js
loopne
dec
popf
repnz
out
push
lods
mov
mov
pusha
call
ret
jecxz
out
jle
sbb
jle
or
nop
fdivr
pop
push
incb
mov
outsl
or
hlt
mov
call
mov
clc
adc
xchg
xlat
push
std
test
popa
hlt
adc
inc
divb
enter
dec
pop
dec
cmc
mov
sub
xlat
test
pop
in
pop
cmp
mov
rcrl
sbb
out
test
cltd
sbb
inc
cmpsb
or
mov
mov
pusha
inc
add
shlb
jae
add
iret
jbe
aad
out
cld
outsl
lods
into
mov
arpl
xor
mov
fcmovne
cmp
jb
mov
jecxz
insl
mov
pop
clc
jge
mov
sahf
and
dec
xor
mov
push
test
lret
adc
popf
sbb
inc
dec
push
dec
cmp
xchg
jmp
aaa
icebp
movsl
stc
ret
clc
pop
lods
lds
xchg
xchg
cmpsl
dec
and
mov
or
data16
fsubrs
xor
fistl
push
clc
test
shlb
mov
or
cltd
test
push
sbb
pop
adc
aas
xor
mov
cmp
popa
jecxz
negb
aam
jno
sahf
push
xchg
xchg
test
in
iret
mov
lea
sahf
push
adc
inc
call
push
mov
sahf
adcl
or
mov
rorb
mov
es
add
adc
sbb
sbb
cmp
pop
scas
mov
movsl
or
popa
inc
shl
std
mov
mov
mov
jns
subl
mov
pop
data16
pusha
inc
adc
icebp
int3
push
sbb
add
int
movsl
mov
fnsave
cmp
mov
push
jg
jle
sbb
add
or
test
cwtl
inc
push
mov
arpl
in
bound
shrl
mov
outsb
jae
ror
lods
lea
adc
jmp
repz
mov
pop
inc
jmp
and
test
and
clc
adc
pop
insl
mov
add
xor
in
xchg
mov
jle
xor
add
in
xor
push
push
mov
xchg
inc
cltd
xor
push
mov
or
or
in
fucomp
inc
xor
mov
in
aad
xchg
mov
mov
mulb
popf
cli
xchg
iret
mov
push
xor
sbb
into
in
das
and
pop
jge,pt
push
jb
inc
dec
inc
add
mov
jecxz
add
into
cltd
mov
push
push
outsl
xor
mov
xorl
sbb
push
lods
adc
out
cs
repnz
mov
sahf
movsb
sti
pop
and
or
jb
inc
jno
outsl
push
jmp
cwtl
loope
or
nop
sub
sub
pop
jae
lret
xchg
cmc
scas
pop
lea
inc
daa
cmp
push
push
mov
mov
jle
push
cmp
or
mov
std
js
pop
fsubl
jp
jp
and
inc
xor
xor
xchg
int3
movsl
jne
adc
xchg
sub
inc
inc
and
popa
ds
xchg
outsl
xorl
testb
stc
js
movsb
mov
xchg
and
int3
pop
inc
hlt
cmp
lds
icebp
add
mov
xchg
clc
addl
or
mov
cmp
add
push
fstps
in
jns
ret
lods
jbe
rorl
pop
je
rol
push
pop
rcrl
mov
sub
xchg
add
ret
sbb
pop
dec
out
call
lcall
loopne
es
xchg
seta
mov
xchg
mov
add
cmp
jbe
fcmovnu
fnsave
mov
push
mov
or
insb
subl
and
inc
lock
and
xor
and
movsl
push
lds
stc
sub
hlt
adc
or
xchg
sub
sub
aam
cs
cmc
xchg
sub
jmp
mov
jecxz
lods
out
mov
add
out
ja
and
pop
push
popa
aaa
enter
jns
fistl
xchg
add
movsl
jne
lea
jecxz
in
mov
sti
dec
mov
push
out
lret
shll
pop
loopne
iret
lcall
xchg
xchg
mov
test
add
jb
fidivl
pop
enter
out
aam
hlt
add
cmpsl
jnp
into
loop
stos
push
lds
subl
sar
je
nop
mov
xchg
test
jno
and
scas
push
inc
test
daa
mov
push
jmp
mov
jo
adc
movsb
push
outsb
xor
imul
xchg
cmc
jle
lods
cmc
jne,pt
inc
pop
repz
cld
xchg
push
out
add
loop
sbb
std
or
sub
and
lods
insb
insb
leave
jmp
mov
test
push
mov
inc
scas
or
pop
push
jle
fmul
mov
jbe
jge
dec
cs
pop
stos
repz
shrl
jns
lods
inc
popf
lcall
out
in
lahf
divb
es
sub
mov
in
mov
cmpsb
mov
shrb
inc
push
mov
sub
int
lock
leave
lret
out
sub
sub
jae
add
lods
cmp
mov
add
pop
push
lea
and
inc
shrb
lret
mov
ja
sub
push
mov
fsts
mov
std
pop
hlt
xlat
cmp
mov
mov
dec
aas
sbb
add
test
pop
and
dec
fildll
mov
aad
and
daa
add
jbe
xchg
sub
rcr
jmp
add
lods
pop
fisubl
mov
loope
sarl
mov
hlt
jnp
push
int
mov
mov
add
into
mov
or
imul
and
cmp
push
pop
inc
push
sbb
adc
fsubrp
push
cmpsl
pop
ret
es
repnz
ljmp
pushf
out
xchg
sbb
and
cwtl
push
mov
pop
mov
arpl
sbbl
jmp
xor
popf
cld
adcb
fists
pushf
scas
jge
pop
sub
outsb
cmp
xchg
add
dec
jl
sarl
mov
repz
or
cli
outsb
ret
fbstp
ljmp
out
inc
test
push
xor
gs
fsubrs
push
pop
xor
std
inc
bound
mov
dec
pop
xchg
or
clc
jl
inc
loop
or
ljmp
cmp
mov
mov
notb
push
hlt
repnz
adc
es
fmull
loopne
and
mov
mov
mov
pop
mov
shll
sub
insl
sbb
add
clc
sub
or
dec
sbb
mov
mov
cs
cmpsl
sub
xor
je
sti
test
pop
sub
adc
mov
hlt
mov
push
add
mulb
jl
repz
arpl
sbb
lds
sub
mov
adc
jb
cmp
dec
inc
bound
jmp
adc
cli
stc
int3
lods
mov
push
addr16
push
mov
fnstenv
xor
xlat
adcb
les
outsl
and
cld
xchg
dec
inc
pop
jnp
ret
repz
add
adc
pop
cwtl
sub
xchg
xor
pop
push
hlt
or
cmp
nop
daa
xchg
push
das
icebp
loopne
sub
lret
inc
test
popa
xchg
insb
inc
std
pusha
jo
outsl
pop
cld
mov
imul
sarl
lods
mov
call
mov
mov
rorb
ss
add
lods
pop
mov
cmp
and
adc
mov
aad
cs
sbb
mov
jns
stos
mov
xchg
repnz
popf
mov
mov
into
xor
call
pop
adc
add
xor
cli
push
in
push
popf
loop
xlat
outsb
xor
xor
mov
les
cwtl
cmc
mov
lret
pop
push
xlat
push
xor
sbb
jns
mov
cmp
xor
adc
mov
add
enter
push
cmc
fstpl
pop
test
stos
sarb
fs
mov
outsl
cmp
pop
lret
jne
mov
fistpll
or
dec
repz
aad
adc
ja
mov
xchg
lds
jge
jge
xorl
in
ret
jge
shll
dec
cmp
lea
js
lods
or
cld
sbb
cs
pushf
lods
add
push
fimull
xchg
jnp
movsb
xchg
mov
sub
out
ficompl
fidivrl
push
xor
jmp
rorl
xchg
mov
xchg
movsl
xor
jmp
xlat
sbb
nop
lea
ss
pop
movsl
pop
pop
sub
sbb
faddl
and
and
xchg
and
lret
cwtl
inc
push
sar
pop
add
nop
outsb
cs
xchg
sub
add
pop
scas
cmp
sbb
mov
and
cmp
xor
outsb
jmp
mov
aaa
aas
ljmp
or
cltd
mov
sbb
fisubs
repnz
les
dec
push
jo
ds
mov
cli
jmp
jle
or
add
cmp
push
ja
xor
in
xchg
xor
pop
xchg
icebp
inc
cld
sbb
push
dec
sbb
pusha
into
fs
outsb
and
fwait
je
xchg
rcll
dec
jnp
jo
jns
cmp
enter
cmpl
jmp
shll
or
pushf
or
in
mov
xlat
push
xchg
and
cwtl
xor
and
scas
and
fwait
daa
test
insb
out
iret
sbb
out
bound
dec
mov
fadd
outsl
shlb
imulb
xor
fdivrs
and
leave
pushf
inc
inc
or
lods
xlat
pop
fistpl
pop
cmp
and
jae
push
jb
jecxz
ret
ljmp
inc
popa
movsl
mov
push
push
sub
pop
add
divl
xlat
mov
pop
mov
jl
cmp
or
outsl
mov
adc
inc
inc
push
clc
lcall
lea
into
and
jmp
cwtl
stc
sub
fldt
add
lods
xchg
pop
imul
jp
push
mov
adc
sub
sub
inc
scas
daa
or
mov
xchg
sub
lods
cli
nop
pop
pop
sub
sbb
xlat
cs
add
dec
mov
hlt
sti
aad
shrl
out
or
lcall
stos
mov
rcl
push
jno
clc
or
pop
add
sub
movsl
jp
gs
push
cmp
lods
loop
push
fiadds
jmp
mov
xor
push
js
jg
in
adc
cmp
sbb
mov
loopne
pop
cmp
stos
das
push
sbb
mov
and
divl
dec
mov
add
addr16
hlt
adc
pop
jg
aas
ljmp
fcoml
push
or
push
decl
sbb
jo
mov
das
push
in
adc
inc
cli
fwait
ss
mov
and
lret
stc
push
cmp
add
sbb
push
divb
ds
and
sbb
scas
sub
pop
sub
inc
jle
or
push
mov
aam
arpl
dec
jg
cwtl
and
iret
daa
sub
push
sub
push
adc
shrb
jns
ret
mov
loop
test
push
in
jg
push
imul
lahf
jb
hlt
idivl
mov
jmp
push
jmp
iret
sti
push
js
rcrl
pop
in
movsb
jno
pop
mov
pop
adc
mov
ret
shrl
sbb
mov
lods
icebp
or
outsb
aaa
lret
ja
push
cmp
push
in
add
xor
ret
lcall
adc
push
sub
mov
fisttps
or
sub
unpckhps
jno
xor
bound
push
and
sub
pop
aam
scas
loope
mov
or
pop
inc
fistl
xchg
inc
cs
cmp
repz
mov
in
sub
pop
cmp
jo
imul
dec
mov
aaa
mov
popf
pop
and
lds
cmp
dec
mov
aam
lahf
shl
insb
xchg
mov
repz
int
cmp
ds
fs
push
mov
repnz
pop
test
imul
jg
and
mov
mov
dec
xrelease
outsl
test
pop
aaa
mov
push
sbb
jns
ss
sahf
lds
shrb
pop
mov
ja
xor
cld
inc
xor
mov
in
sbbl
mov
imul
movsl
ret
scas
push
mov
sbbl
push
adc
arpl
xchg
xchg
out
adc
mov
cs
pop
test
cs
outsb
aad
out
lret
sbb
or
mov
ds
loope
add
mov
dec
icebp
mov
sub
aam
bound
sbb
repz
imul
sbb
jbe
add
rep
and
pop
ljmp
rorl
cltd
lods
repnz
rcrb
lcall
int3
xchg
mov
inc
mov
mov
xchg
pop
push
dec
in
dec
pop
mov
cmp
sub
fldt
pop
fs
xchg
test
dec
pop
inc
lcall
jge
add
push
movsb
repz
std
or
aaa
cmp
push
pop
icebp
mov
out
sbb
punpckldq
xor
popf
call
mov
jge
xor
pop
std
lret
movsb
ret
cs
cmc
lds
jbe
daa
mov
sti
icebp
hlt
ds
xchg
notl
sbb
dec
dec
jbe
or
jecxz
lahf
dec
dec
inc
ret
jo
sub
fstpl
lahf
dec
cld
pop
jno
pop
rclb
lret
pop
imul
cld
out
shrb
push
inc
in
pusha
popa
imulb
jle
lods
inc
adc
test
inc
pusha
int
sub
push
pushf
xchg
adc
cmp
leave
dec
inc
pop
mov
pop
adc
jb
jecxz
mov
mov
cmp
in
sub
test
and
push
sbb
pop
add
and
mov
movsb
jne
imul
lock
cld
inc
out
sub
dec
aam
outsb
popa
inc
xorb
aaa
pushf
imul
push
cs
xor
aaa
jnp
pop
cmp
xchg
movsb
push
jmp
add
mov
push
mov
sbb
xchg
sub
add
mov
mov
into
fidivs
inc
sub
jge
and
sbb
repnz
mulb
movb
sbb
inc
sbb
pop
pop
cmp
sbb
push
imul
dec
in
pop
test
adc
xchg
push
mov
mov
and
movb
cmpsl
sub
jo
pop
push
push
and
mov
ret
in
mov
fistps
jne
ret
fmull
or
xlat
jne
ds
xchg
repz
lods
pop
repz
dec
mov
es
cs
in
fwait
dec
dec
mov
mov
repz
mov
jmp
adc
mov
pop
ret
insb
xor
and
int3
jno
sub
shl
clc
adc
mov
and
push
lods
roll
mov
dec
adc
hlt
dec
call
mov
outsb
push
cmp
adc
xchg
std
repz
sub
add
loope
ja
cmp
and
mov
mov
pop
fdiv
mov
push
or
imul
cli
cmp
push
inc
pop
jbe
add
xchg
xor
popf
inc
into
inc
xchg
push
mov
push
or
fidivs
mov
idivb
sbb
mov
inc
mov
mov
sbb
push
sub
jl
shll
fcompl
mov
clc
outsl
push
ds
ljmp
add
jecxz
pushf
test
fmulp
mov
dec
sub
outsl
outsb
not
push
fnsave
pop
mov
repnz
dec
testl
mov
mov
mov
sub
adc
sbb
in
clc
lret
lret
cmp
mov
call
pop
jae
lock
mov
sbb
jnp
push
ret
jnp
cltd
scas
xor
and
sbb
imul
sahf
das
test
mov
or
xlat
jmp
push
jp
sub
jb
or
sbb
test
sbb
mov
into
xchg
jecxz
jns
dec
and
cmpsl
jno
fidivs
sbbl
cltd
push
lahf
test
xchg
aaa
push
les
adc
xor
jnp
fdivr
mov
call
test
loope
pop
std
inc
mov
mov
pop
pop
xor
mov
add
mov
mov
mov
xor
mov
rol
sbb
mov
mov
ljmp
test
cli
jno
sub
invd
push
push
add
ja
rcrb
mov
movsb
jl
adc
aam
mov
pop
add
mov
inc
add
mov
xchg
mov
lret
lahf
outsb
jl
cmp
fs
dec
jno
repz
jmp
cmc
cltd
into
fmul
push
jl
xor
lock
fdivrl
paddb
xor
xchg
adc
test
sub
jl
mov
cld
aaa
mov
mov
mov
sub
mov
dec
ljmp
movsb
ja
leave
adc
test
dec
cmp
add
or
xchg
cmc
leave
xchg
cmp
movsl
pushf
stos
and
jmp
lret
adc
dec
xor
leave
sahf
cmpsl
stc
jmp
stos
jge
push
inc
fisttpl
push
divl
popa
dec
cmp
xor
in
adc
add
lcall
pop
call
inc
cmp
or
pop
into
lret
mov
je
fisubrs
mov
popf
insb
add
lret
jae
insb
imul
mov
adc
leave
jno
xchg
in
mov
jmp
or
out
fnstsw
scas
sub
add
lahf
movsb
cmp
cmp
outsb
sbb
pop
cli
daa
ret
mov
add
xor
push
jb
push
or
adc
add
imul
loop
jnp
or
ds
in
test
mov
std
ficompl
sahf
fcom
test
add
xchg
jo
ret
pop
xchg
xchg
sbb
xor
jae
fidivl
xchg
push
pop
xor
test
jne
cmpsl
xor
fwait
mov
push
outsb
mov
fcompl
add
xchg
sub
inc
sbb
push
ja
ljmp
or
dec
lret
pop
negb
in
jnp
cwtl
gs
pushf
stos
inc
xchg
pop
and
aam
cmpsl
data16
stc
popf
mov
push
adc
inc
xchg
pushf
jno
dec
ss
aas
in
pop
popf
aad
movl
ret
fcoms
or
cli
xchg
cmc
int3
jmp
andl
rorb
xchg
incb
push
sub
push
xor
sub
sub
lcall
inc
jmp
mov
das
repz
loopne
adc
iret
mov
add
or
dec
mov
mov
dec
mov
push
xchg
lret
out
xchg
push
mov
pushf
sbb
iret
cmp
ss
pop
mov
dec
sub
push
xchg
call
fidivs
sbb
in
xchg
mov
ret
setle
lret
mov
dec
sub
lahf
mov
dec
push
shlb
addl
pop
aad
push
dec
cld
not
popa
test
or
or
cmp
in
xchg
pop
sub
lea
shrb
adc
out
addr16
lock
push
mov
jge
shr
jg
or
add
les
lods
dec
xor
mov
mov
mov
into
fimull
jle
ds
mov
hlt
xchg
sub
mov
aaa
cwtl
shlb
popa
repz
rclb
hlt
xchg
std
mov
stos
cmp
push
outsb
neg
adc
pop
pop
ss
sahf
mov
shr
adc
jle
outsl
into
adcb
ja
add
mov
movsl
daa
cli
push
pop
push
outsb
fstpl
pop
ret
mov
fldenv
adc
xor
and
adcl
push
lcall
jge
xchg
scas
loopne
ja
pop
and
rcrb
xchg
clc
in
movsl
int3
pushf
sbb
push
loopne
dec
xor
mov
in
mov
loop
dec
mov
ret
in
or
xchg
cmp
lret
je
int
cmp
sti
repnz
xchg
mov
je
cmp
js
in
ja
test
repnz
ficoms
sub
pop
fs
mov
adc
ds
iret
cmp
dec
sub
dec
mov
or
insb
stos
negl
and
sub
outsb
mov
xor
push
add
pop
insl
int3
pop
popa
clc
jns
push
dec
adc
dec
mov
fdivs
cmp
cmp
aaa
clc
hlt
pop
xchg
cmp
mov
jl
inc
push
movsb
inc
ficomps
inc
xchg
cltd
jl
out
cmpsb
movsb
fcomip
stc
sbb
loop
push
std
lret
or
or
xor
push
xor
icebp
mov
jnp
lods
or
xor
cli
or
movsb
js
xchg
insb
insl
inc
in
mov
mov
in
stos
mov
data16
popa
xor
cmp
enter
xchg
test
mov
sahf
out
call
aaa
gs
js
push
inc
stos
cmp
fidivrl
sbbl
push
outsl
dec
mov
repz
pop
in
call
dec
data16
sub
jmp
bound
fidivrs
sub
push
jle
xchg
push
sub
fisttpl
cli
call
in
pop
ds
add
pusha
cmpsl
xor
cli
cmp
inc
mov
popa
or
push
lods
stc
cmp
adc
sbb
dec
add
pop
cs
cmpsl
add
getsec
jae
test
arpl
pop
xchg
mov
fs
and
jne
lret
add
sbb
orb
cmp
adc
mov
jl
dec
popa
pop
clc
mov
inc
inc
fs
hlt
in
out
repnz
lea
rorb
movsl
out
cwtl
das
inc
xchg
mov
lds
pop
pop
pop
subb
pop
xor
cmp
jg
mov
lea
lahf
mov
pop
jno
sarb
gs
cs
mov
xchg
ja
repz
popf
cmp
cmp
lret
call
test
shlb
int
cmp
idivb
adc
xor
stos
insl
dec
test
jmp
mov
sti
or
xchg
and
mov
aas
jge
lret
out
mov
adcb
sahf
fnsave
jno
xchg
scas
push
ljmp
call
mov
pop
mov
sbb
ret
ss
push
jnp
cmp
jecxz
inc
lock
aad
add
data16
sbbl
jno
pop
lret
cltd
fbld
sub
push
adc
adc
mov
out
dec
push
cmp
dec
std
or
dec
fcomi
lahf
push
rorl
add
jnp
xchg
leave
neg
es
movsb
loope
cli
mull
js
stos
fsts
test
inc
or
push
out
lock
adc
inc
int3
pusha
enter
sub
daa
and
inc
arpl
addr16
or
in
fisubrl
or
push
imul
sbb
out
mov
and
call
ljmp
sbb
jl
inc
sbb
rorb
test
pop
pop
jae
and
lcall
mov
mov
sbb
lods
shr
cmp
inc
dec
fisubrl
jne
cmpsl
sbb
cmc
adc
push
dec
add
in
and
lea
jp
insl
lods
jge
aam
mov
mov
stc
rcrl
mov
sahf
leave
nop
or
mov
popa
inc
out
mov
rcll
es
mov
arpl
mov
jbe
mov
mov
je
fs
popf
es
pop
mov
or
pop
sbb
push
das
in
pop
pop
dec
and
sbb
arpl
faddp
pop
xchg
pop
bound
and
out
ret
int3
shr
push
sbb
arpl
mov
add
mov
adc
add
rcl
inc
add
xchg
adc
sbb
jecxz
decb
movsl
cmpsl
xor
mov
add
cs
gs
and
stc
sbb
pusha
inc
out
out
cld
sub
sub
pop
repnz
adc
imul
add
sub
shrl
pop
adc
movsb
lds
daa
add
mov
mov
adc
shll
lods
scas
ds
mov
in
inc
cmp
mov
adc
dec
test
xor
sbb
test
mov
fisubrs
xchg
lret
xlat
mov
fsubl
loopne
mov
insb
decb
push
adc
pop
lret
cmp
pusha
fs
lods
mov
inc
mov
cmp
mov
adc
inc
call
in
ret
repnz
sbbl
xchg
mov
rorl
xchg
clc
insl
jge
dec
or
cmp
cmp
cmp
xor
xchg
push
incl
sub
bound
scas
add
inc
lret
adc
jno
aad
arpl
xchg
cmp
push
add
cmp
popf
lods
addr16
add
inc
pushf
subb
imul
movq
daa
fwait
mov
in
arpl
and
imul
and
push
shll
add
es
dec
dec
pop
sbb
shll
mov
repnz
out
dec
scas
mov
mov
rcll
and
iret
leave
mov
rcrl
sub
das
addr16
add
arpl
gs
xchg
insl
cld
add
add
iret
bound
stos
cli
dec
fsubr
pop
or
ret
mov
popa
inc
out
aaa
dec
das
repnz
test
insb
scas
aas
pop
shll
dec
sub
push
test
xchg
or
inc
xor
andl
rcrb
dec
pop
lds
push
out
push
ja
xlat
push
push
mov
mov
pop
cs
iret
xchg
lret
mov
mov
push
mov
xchg
ret
rolb
aas
insb
mov
rcl
push
jo
lahf
stos
push
mov
and
push
inc
xor
xchg
push
les
or
nop
scas
fldt
sub
push
or
mov
mov
adc
jmp
xchg
xor
mov
adc
rclb
out
mov
xorb
xchg
movsb
mov
push
cltd
les
or
popa
mov
adc
mov
push
insb
iret
pop
adc
push
add
xor
out
mov
insl
call
insl
mov
xchg
adc
xchg
xor
scas
aas
inc
sbb
pop
sub
iret
fstl
ret
outsl
push
xchg
fistl
popf
mov
push
cmp
push
faddl
mov
cwtl
test
test
adcl
adc
and
stc
mov
sbbl
inc
fdivrs
jecxz
int
mov
push
push
pop
mov
pop
sub
lods
jge,pn
pusha
lods
popf
scas
into
dec
and
je
sti
push
dec
jne
cmp
inc
mov
lret
cmp
ret
cs
sbb
dec
sub
popa
push
mov
and
jb
inc
lds
les
mov
push
push
jno
mov
mov
mov
fstps
mov
inc
sub
sbb
xor
mov
decl
int
lret
addr16
mov
outsb
sub
mov
inc
btrl
iret
adc
inc
sbb
adc
fistpll
cmp
adc
sarb
addb
in
test
in
dec
filds
add
lock
data16
xor
sbb
in
sbb
add
cmc
gs
or
sub
mov
stc
in
add
popa
sar
test
sub
pop
xor
dec
lahf
pop
cmp
and
inc
call
mov
xor
xlat
outsb
mov
imul
lock
shrl
cmpl
out
lcall
loope
dec
in
xchg
sbbb
pop
sub
pop
icebp
testb
sbb
aam
sti
xor
jg
popf
sbb
mov
mov
leave
sahf
jle
cli
movsl
cmp
pop
xchg
lret
cld
imulb
mov
test
outsb
sbb
int3
andl
popf
iret
shlb
mov
ret
je
js
cmpsl
lea
rcrl
and
lcall
pop
add
mov
bound
arpl
stos
jae
push
je
sbb
cli
dec
jne
and
pusha
bound
adc
sbb
and
mov
bound
stc
outsl
mov
jecxz
ja
loopne
leave
push
test
icebp
mov
pop
jnp
int3
nop
mov
out
call
mov
fbstp
sbb
cld
pop
loopne
das
inc
scas
adc
mov
pop
cmp
mov
test
push
inc
test
pop
xchg
pop
dec
aam
cmpsl
mov
push
sub
dec
dec
pop
lock
sbb
xchg
dec
adcb
jns
mov
lahf
scas
lea
mov
pop
jl
pop
inc
inc
sbb
sti
aas
mov
mov
fcompl
aam
std
cmp
mov
jmp
shll
les
dec
int
mov
jecxz
stc
dec
dec
cmp
adc
imul
and
adc
ss
adc
bound
xchg
push
pushf
jb
mov
leave
pop
js
pop
jg
lea
ds
aam
nop
push
gs
stos
loope
cld
mov
enter
rorl
in
or
dec
call
aam
cmp
sbb
add
mov
cli
aaa
mov
adc
xlat
mov
out
add
pop
mov
sub
xchg
inc
sub
jg
in
fisttpll
jecxz
aam
or
and
jle
cmp
test
adcl
mov
lea
xchg
insb
mov
ret
xor
icebp
dec
dec
pop
popf
mov
jge
jns
hlt
pop
outsl
sub
icebp
imul
mov
je
mov
shrb
jmp
into
mov
mov
mov
pop
int
aas
mov
push
lret
cld
aas
mov
rorl
test
pop
fcmovu
push
lds
leave
or
mov
rclb
push
jp
shrb
fsubr
xor
call
out
fcmove
test
mov
pop
pop
imul
cwtl
scas
xchg
lods
push
jnp
ret
pop
push
cld
push
add
xor
jle
mov
dec
mov
fisttpll
xchg
dec
loope
popf
pop
mov
repnz
jne
xchg
nop
xor
cld
pop
push
xorl
insl
xor
pushf
xchg
push
inc
inc
mov
shlb
cmp
dec
mov
ljmp
fbstp
xor
inc
mov
sub
push
push
fisubl
sub
pop
sti
fsubrl
mov
inc
mov
inc
and
sbb
xchg
aaa
dec
push
mov
lock
or
std
nop
filds
inc
cmpsl
pop
mov
push
xchg
scas
dec
int
movsb
jne
js
cld
pop
test
into
inc
push
int
push
int
dec
jg
xor
jno
inc
sub
jne
sbb
xchg
xchg
sbb
nop
push
insb
pop
cmpsb
push
cli
leave
loope
xor
test
cmp
aad
adc
divb
mov
repz
cmp
hlt
inc
push
icebp
xchg
mov
sub
andl
repnz
push
popf
push
jns
mov
inc
jo
aaa
inc
stc
and
xchg
jnp
test
in
shl
das
and
insl
lcall
divl
sahf
bound
push
imul
add
adc
push
pushf
mov
bound
dec
cmp
es
or
jg
jecxz
shll
rolb
pop
push
cmp
sbb
xor
dec
inc
in
lahf
std
aaa
and
dec
pusha
dec
dec
rclb
push
mov
es
pushf
aaa
imul
mov
mov
lds
fwait
xchg
mov
gs
imul
les
cmp
inc
mov
jo
sub
fwait
dec
sbb
bnd
push
scas
adc
xchg
dec
jmp
sbb
pop
cmpsl
jle,pt
xchg
mov
lahf
inc
movsb
inc
movb
pusha
popa
sub
xchg
cmpl
jecxz
fdivrs
xchg
lea
mov
popa
inc
xlat
aam
cmpl
int
push
in
sbb
ja
into
jmp
movq
jns
pop
cmpsb
cmp
repz
repz
add
add
xor
in
push
sbbl
add
test
xlat
cwtl
gs
sbbb
fsubr
fwait
xor
sbb
lret
sub
inc
addl
loop
lock
ret
mov
adc
push
out
scas
sarl
outsb
or
lea
pop
sbb
push
jl
pushf
data16
pop
imul
lods
xor
int
inc
push
mov
loope
pushf
or
mov
xor
ficompl
xchg
inc
cmc
in
mov
mov
int
mov
lcall
jg
jnp
or
add
mov
addr16
int
pusha
loop
mov
jnp
mov
call
lods
jp
ljmp
es
push
pop
fcomip
or
data16
ds
test
lcall
bound
gs
rcll
xor
hlt
jo
repz
das
add
dec
ljmp
mov
pop
mov
mov
and
scas
sar
es
out
outsl
enter
xchg
dec
int3
lret
jp
mov
lea
mov
cmpsb
cmp
mov
les
inc
push
outsl
pop
cmpsb
mov
aam
xor
or
enter
mov
lahf
push
pop
pop
loope
stos
xor
popa
int3
js
js
stos
xchg
aad
imul
mov
push
mov
push
jecxz
inc
jle
xchg
push
data16
mov
cmp
or
cs
or
in
in
repz
or
or
or
cmp
fs
jp
in
push
add
xlat
loope
jne
cld
add
insb
out
ja
mov
jg
aam
mov
xchg
dec
popa
pop
stc
sbb
fnsave
movsl
sub
mov
xor
push
add
leave
shr
jge
dec
fstps
push
push
popf
jns
std
decl
fldl2e
dec
cmp
fdiv
add
mov
sub
cli
xor
lds
rorb
pop
jg
jo
mov
ss
sbb
xor
sub
call
dec
mov
rcll
mov
jne
mov
out
push
add
punpcklbw
shrb
add
sub
inc
es
popa
inc
loopne
xchg
mov
les
nop
mulb
and
sbb
jbe
xchg
mov
into
sbb
xchg
add
sub
mov
add
mov
mov
ds
stc
jno
sub
jb
push
clc
fcompl
notl
cmp
aam
sbb
jb
add
shlb
pushf
push
test
and
lods
int3
lret
out
int
daa
incl
jne
aaa
push
clc
adc
repz
loope
mov
int3
or
add
or
mov
es
les
in
mov
mov
mov
outsb
addr16
stos
mov
xchg
sub
pop
cli
dec
test
mov
or
test
outsl
jnp
leave
xchg
out
xchg
mov
adc
out
push
inc
pushf
pop
or
mov
popf
stc
inc
je
sub
lea
mov
lahf
or
xor
pop
arpl
repnz
add
out
in
cmpsl
hlt
or
lret
or
inc
sub
or
jl
and
push
out
dec
adc
mov
sbb
pop
les
daa
addr16
jle
test
jp
sahf
mov
push
mov
dec
insl
das
lahf
stos
pop
iret
iret
inc
popa
pop
mov
mov
mov
daa
or
jl
jnp
sub
dec
pop
xor
xchg
fisttpll
stc
fnstsw
out
add
rcll
stos
lret
cmp
jmp
dec
sti
mov
push
loop
mov
icebp
sbb
fldl2t
lods
jb
outsb
les
je
push
inc
jb
or
out
ret
sub
jbe
pop
cmc
mov
jp
sub
js
cmp
rcrl
pushl
enter
push
push
cwtl
lret
inc
gs
and
mov
lds
shl
cmp
outsb
or
adc
fwait
mov
sub
adc
jo
pop
loopne
mov
addr16
testb
icebp
imul
dec
xchg
lahf
lret
mov
es
stc
inc
inc
dec
int
jl
xlat
xor
lahf
jbe
andl
pop
jecxz
xor
mov
mov
sub
add
mov
adc
xor
jns
aas
fwait
push
adc
jp
stos
xchg
mov
push
add
jle
fisubl
mov
add
out
lea
orl
testb
scas
cmp
adc
xor
mov
test
das
sbb
lcall
loopne
mov
aaa
jo
cmp
out
in
inc
mov
jb
xor
rcrl
scas
ret
xchg
cld
movsl
loopne
xlat
sbb
mov
mov
out
mov
pop
sbb
popa
repnz
pop
jecxz
fcoms
pusha
divl
jne
and
xchg
in
lret
sub
add
dec
mov
jne
jecxz
loop
pop
cmp
ficoml
out
lahf
lods
and
jl
mov
fwait
pop
or
dec
mov
outsl
mov
push
push
bound
std
or
aaa
xchg
filds
pop
mov
sarl
popf
cmp
mov
lds
outsb
dec
push
mov
rcrb
subl
lret
mov
jge
adc
lret
fnstenv
xchg
mov
roll
in
sub
jae
sti
popa
jnp
stc
andl
loope
movsl
ret
cs
lds
in
adc
movsl
cmp
out
ror
mov
pop
add
xchg
ds
mov
test
scas
lock
mov
jns
daa
inc
jb
mov
clc
stos
lea
int3
push
mov
cmp
jno
mov
jg
add
sub
xor
ljmp
imul
lock
mov
ror
lods
pop
call
sbb
repz
aaa
sarb
pop
sub
or
sub
adcl
adc
sbb
jns
push
lahf
outsb
iret
adc
test
in
push
sub
out
add
mov
push
adc
int3
inc
nop
sti
xor
mov
add
xchg
mov
movl
pop
mov
xor
test
adc
leave
sbb
mov
or
pop
inc
and
xchg
cmp
insb
outsb
add
mov
cmpsl
push
in
shll
loop
bnd
and
sbb
ds
sub
popa
cmp
lcall
jae
or
adcl
sub
cmp
nop
push
ficoms
arpl
iret
mov
dec
enter
leave
adc
mov
or
ss
xlat
lds
xlat
inc
call
std
in
mov
nop
dec
aam
xchg
mov
cmc
sub
test
jmp
int
mov
jge
dec
fdivrs
fistps
xor
cmp
xchg
mov
pop
test
push
in
jmp
shlb
jle
mov
xchg
sub
push
xor
add
pop
jbe
pop
cmp
stos
jno
int3
call
fmulp
jae
subl
adc
outsb
dec
cmpb
or
sub
rcrb
jne
pop
push
clc
mov
loopne
sbb
inc
dec
and
xchg
into
sbb
xchg
add
push
lcall
xor
bound
das
dec
fisubs
popf
mov
ret
or
into
push
add
enter
jno
lcall
xlat
in
addr16
insb
add
xchg
scas
jno
mov
rcl
insl
or
divb
cmc
dec
rcl
jl
imul
jg
mov
sbbl
fnstsw
add
repnz
xor
repnz
stos
mov
lret
clc
je
jmp
xor
adc
adc
push
mov
mov
nop
testl
enter
cs
add
jl
mov
aaa
jecxz
imul
pop
sahf
add
call
inc
jo
neg
adc
or
sbb
add
pop
clc
mov
js
into
pop
lock
pop
sub
loopne
popa
popf
dec
xor
popf
imul
dec
cld
cmp
mov
xchg
sub
pop
mov
sub
mov
test
jne
sbb
xchg
xchg
std
xchg
scas
js
icebp
lods
bound
cld
mov
mov
adc
out
mov
mov
js
push
sbb
jge
add
sbb
pusha
daa
pop
adc
pop
loope
rcr
push
add
stos
test
mov
xor
stc
mov
nop
cld
ret
loop
cmc
int
dec
test
mov
ret
sub
add
cmpsl
adc
icebp
and
fidivl
int
xor
insl
insb
lcall
lock
dec
stos
outsb
push
dec
inc
fnstcw
jno
pop
adc
xchg
mov
negl
scas
leave
sub
jb
mov
adc
push
sahf
lock
bnd
xor
push
jge
inc
std
xchg
dec
xor
mov
add
cli
ljmp
dec
or
mov
aad
push
and
lcall
fcmovb
or
xchg
jne
push
sbb
rcrl
int3
xchg
fildll
xor
jmp
mov
sbb
mov
frstor
xchg
mov
stos
inc
dec
xor
retw
push
or
sarl
push
pop
in
shlb
fs
and
orl
adc
popf
mov
or
jle
cmp
aaa
xchg
xchg
xor
outsb
lods
cmp
pop
cmp
xor
push
cmpsb
inc
xchg
mov
push
cmpsb
jge
lcall
imul
dec
dec
or
out
sti
daa
fwait
clc
lds
stc
cmp
inc
mov
into
jecxz
mov
cmc
bt
cmp
push
mov
ret
mov
mov
mov
push
push
xor
push
push
or
ficompl
adc
adc
mov
mov
push
inc
mov
fcomps
popa
clc
dec
stc
xchg
sbb
push
mov
xor
sahf
std
rorb
mov
popa
sbb
sbb
xor
mov
rcrl
stos
mov
jge
pop
in
add
in
insl
insb
lret
pop
icebp
cld
xor
cmp
movsl
lds
adc
xchg
xchg
inc
pop
faddl
jmp
pop
xchg
inc
xchg
mov
pushf
nop
jbe
or
shrb
and
inc
xor
pop
rcl
cwtl
loope
lea
jne
cs
xor
cmp
mov
sbb
pop
pop
mov
dec
mov
cli
xchg
int
jge
xlat
out
xor
and
dec
lcall
jno
xchg
push
insb
jle
add
inc
pop
out
cmpsl
out
and
and
mov
je
cmp
dec
xor
rol
push
push
shrl
sub
shll
or
out
xchg
inc
data16
push
xchg
cld
pushf
pop
mov
outsl
or
orl
or
adc
inc
pop
insl
roll
or
lea
adc
iret
popl
push
outsb
adc
stos
lcall
shlb
pop
and
mov
or
sub
lods
int3
adc
add
adc
aam
dec
cmp
push
in
lea
iret
push
cmc
and
push
nop
pusha
sub
inc
mov
ja
jb
and
rcll
mov
test
dec
and
pusha
mov
push
mov
js
mov
pop
scas
mov
in
jl
xor
adc
les
sahf
out
add
jge
sbb
cmp
add
jo
sub
pusha
sub
clc
jae
sub
inc
fstpt
mov
push
mov
pop
loopne
or
inc
repz
sub
add
xchg
jbe
iret
negb
shrl
lea
push
push
push
lods
adc
arpl
loopne
lcall
or
fcmovu
jb
filds
mov
xor
mov
in
push
xchg
fidivrl
jae
or
or
fnstcw
push
stos
cs
out
dec
xor
adc
jae
fbstp
fwait
movsb
jp
std
xchg
fidivrs
xchg
sub
fiaddl
mov
fisubrl
cltd
fistps
lcall
push
fwait
call
mov
loop
push
popf
addr16
das
jae
fbld
data16
aaa
into
ljmp
test
mov
inc
test
rcrb
stos
inc
call
aad
jl
icebp
mov
popf
add
xchg
push
jae
push
cmp
or
add
and
js
test
dec
xchg
mov
xchg
push
ss
imul
mov
add
jmp
ret
pop
and
cwtl
daa
jns
loope
testl
test
add
ja
je
xor
mov
insl
stc
add
lret
jg
js
enter
nop
pop
push
cmpsl
adc
sti
xchg
sbb
leave
pusha
dec
pusha
or
xchg
outsl
out
jb
lds
jo
jecxz
test
inc
pusha
or
sbb
and
and
pushf
pop
je
test
and
outsb
les
pop
hlt
pusha
and
stc
mov
pop
jne
mov
xor
outsb
xchg
inc
sub
inc
xchg
hlt
and
addl
in
pop
rolb
add
cmp
adc
inc
cmp
adc
nop
and
fwait
cld
pop
pop
and
cmp
ss
popf
add
add
inc
dec
dec
pop
mov
les
and
sub
arpl
aam
in
inc
sbb
dec
cmp
push
xor
pop
sub
mov
mov
fs
jmp
js
jb
and
mov
sbb
push
mov
pusha
shrb
xchg
pop
mov
sub
outsl
in
mov
fdiv
sub
call
mov
ljmp
jne
shl
fs
xchg
and
inc
pop
pop
mov
or
cli
aad
sub
cmp
hlt
pusha
mov
sbbb
vpshlw
mov
mov
mov
test
enter
cmp
lock
jle
inc
lds
sahf
insl
movsl
icebp
ret
addb
mov
xchg
adc
es
xor
repnz
xchg
dec
lret
add
cmp
jbe
adc
mov
int
push
inc
es
std
aaa
jmp
sub
clc
jae
aaa
jns
imul
sbb
adc
cmp
mov
xchg
arpl
test
icebp
mov
movsl
sbbl
push
inc
inc
mov
shr
call
mov
and
fists
jge
pop
lods
push
loop
inc
int
jne
cmp
pushf
push
cld
sbb
add
add
in
and
adc
in
mov
mov
leave
andb
jmp
sbb
mov
shl
dec
lret
ret
loope
xor
shrb
adc
inc
jp
jo
fs
insl
data16
cmp
sarb
ss
in
sbb
inc
loope
rcll
out
mov
cmp
xor
les
push
cmp
repz
jno
scas
pop
add
ret
mov
cmp
adc
push
or
lock
push
aaa
mov
jbe
lock
shrb
ret
movsl
and
xchg
dec
out
js
lahf
jnp
into
fcoms
fildll
icebp
mov
les
dec
fstp
shrl
in
shrb
inc
inc
out
jns
mov
sub
mov
or
or
aaa
adc
jno
push
out
les
sahf
negb
icebp
add
test
mov
cltd
jae
mov
add
jne
mov
xchg
mov
ljmp
test
pop
inc
aaa
mov
loopne
int3
jne
pop
xor
pop
mov
dec
and
lahf
testb
out
add
mov
mov
jl
add
mov
popf
sbb
lahf
jp
fnstsw
movsb
inc
and
dec
jnp
mov
sbb
ss
sub
inc
les
push
and
popa
sar
sbb
int
push
call
dec
adc
jnp
push
insb
in
sub
movsb
mov
shll
jns
cmp
xchg
sbb
pop
roll
rclb
dec
in
add
jae
push
popf
mov
add
xchg
xor
out
jp
mov
xchg
jnp
xor
mov
ret
lret
mov
pusha
subb
or
pop
add
aam
icebp
xchg
and
int
mov
pop
cmp
or
mov
lods
push
mov
jnp
sub
mov
and
cmp
repz
es
out
or
jb
fwait
jne
xchg
loope
into
or
cmp
call
inc
xlat
rolb
pop
cmc
and
fbstp
xor
or
xchg
jno
movb
decl
mov
cwtl
mov
push
xchg
or
push
cmc
shrb
mov
sub
or
xchg
adc
add
mov
outsb
push
jp
cmpsl
cmp
mov
mov
repz
mulb
jnp
or
mov
pop
and
cwtl
xchg
fldcw
idivb
in
ljmp
adc
lret
data16
out
int3
jae
jo
pop
push
mov
xchg
xchg
fucom
jl
mov
mov
xchg
sbb
mov
ret
xchg
sbb
into
xchg
roll
and
pop
cltd
pop
aaa
push
adc
cmpsb
inc
dec
repnz
ja
rorl
inc
inc
decb
pusha
mov
popf
ljmp
jmp
fwait
ret
popf
xchg
cmp
icebp
jmp
add
outsb
int3
sub
and
rorb
pop
inc
gs
test
jecxz
xor
mov
ljmp
insb
cmp
jg
push
outsl
jmp
mov
xorb
rclb
int
mov
mov
stc
aad
mov
mov
sbbb
lea
dec
mov
adc
mov
lds
adc
adc
lret
mov
sbb
adc
andl
jg
aam
inc
mov
mov
gs
xchg
dec
and
jle
add
sub
push
mov
push
ljmp
mov
push
mov
das
xlat
cmp
dec
ljmp
scas
dec
dec
cltd
hlt
aad
and
lock
cmp
push
mov
fidivl
and
mov
xlat
cmpsl
push
push
pusha
divl
cmp
ss
mov
cmpsl
mov
lcall
inc
push
xor
add
mov
sbb
rcll
outsl
out
pop
add
jne
mov
test
jns
mov
mov
call
shr
jnp
mov
mov
and
xor
testl
outsb
decl
jbe
aam
pop
xchg
inc
fcoml
ja
xor
ja
shrb
push
pop
xor
outsb
test
fiaddl
mov
loope
outsl
add
pop
lock
sbb
or
mov
mov
repnz
rorl
inc
pop
imul
loopne
xchg
pushf
scas
pop
repnz
jg
cmpsb
fdivs
test
ror
test
addr16
sub
pop
cwtl
das
sbbl
dec
ss
out
cmpsb
repz
test
pop
test
jecxz
stc
jl
in
stos
push
out
sbb
add
sbb
loope
pop
loope
ja
stos
les
imul
sbb
rclb
mov
sahf
pop
stos
repnz
sbb
mov
pop
lret
dec
jmp
mov
push
xor
jbe
mov
aaa
in
push
ljmp
push
mov
adc
rolb
dec
ss
sti
cltd
xor
decb
cli
or
arpl
loope
or
adc
mov
jmp
out
pop
jl
in
sub
pop
add
test
cmc
into
mov
in
push
bnd
mov
xchg
call
jo
in
push
lods
cmp
fidivs
mul
push
pop
icebp
cmp
fs
shrb
dec
or
shlb
fnsave
and
ja
test
roll
ret
sbb
jno
scas
mov
call
push
add
and
jnp
xor
aas
mov
push
popa
pop
mov
xor
xor
lods
repnz
mov
repnz
addr16
inc
lods
fadds
jmp
cmp
jmp
mov
sub
popa
enter
repz
jb
lahf
out
fwait
cwtl
cmp
out
stos
out
mov
lahf
jge
adcl
mov
xchg
bound
lcall
shrb
dec
xchg
add
mov
data16
jae
sub
jmp
lret
jb
cmp
sbb
sbb
mov
icebp
mov
mov
outsb
cmp
fsubp
test
movlps
mov
cmpsb
or
and
aam
push
comiss
xchg
jae
xchg
ret
dec
lea
mov
lret
and
repnz
inc
stos
sbbl
lret
clc
or
in
pop
lock
lret
jl
ja
xchg
popf
int
cmp
test
insl
push
sub
filds
ljmp
mov
mov
cs
sbb
or
mov
std
subl
test
jns
push
imul
xor
mov
lods
dec
out
lds
ss
pusha
daa
mov
loope
inc
pushf
or
pop
and
movsb
mov
scas
jl
stos
cs
dec
cmp
mov
add
push
pop
fs
into
mov
test
imul
lds
mov
mov
mov
orl
dec
int
and
xchg
jo
cli
jle
pushf
rorl
je
xor
sub
dec
lods
push
dec
cs
push
imull
pop
cmp
xor
bound
into
fnstsw
xchg
cmp
cld
dec
mov
fcompl
insb
fmull
mov
cmpsl
fstps
in
lock
mov
gs
addb
lods
add
scas
sbb
mov
pusha
adc
roll
mov
inc
fwait
inc
fisttpl
sbb
loope
aad
mov
es
mov
cmp
sbb
ficomps
push
sbb
popf
mov
lea
sbb
ret
jmp
mov
push
xor
imul
jmp
jne
std
sahf
inc
pop
icebp
cmp
mov
loopne
add
jge
jb
leave
lahf
sbbb
iret
jo
decb
orl
dec
and
xchg
xor
imul
lcall
push
adc
sub
testl
xchg
ja
sbb
sti
cmpsb
scas
call
lret
andb
popa
xchg
or
or
push
decl
test
icebp
leave
jmp
fisttps
jmp
iret
repz
inc
cltd
push
add
jl
push
popf
and
sub
sbbb
imul
ficomps
cmp
push
addr16
rolb
push
cmp
dec
out
push
adc
es
push
je
pop
mov
mov
std
pop
pop
xor
jle
adc
xor
fcomps
adc
test
gs
dec
loop
sub
scas
mov
mov
imul
fstl
fcmovbe
leave
data16
icebp
sbb
shrb
or
negb
mov
dec
jbe
jg
cmp
sbb
lcall
aam
mov
adc
lea
dec
inc
sahf
shlb
adc
jnp
cmp
es
mov
ljmp
mov
mov
nop
dec
sbb
arpl
rcrb
cmp
jle
pop
or
xchg
push
push
push
or
or
add
sub
fmulp
ret
jmp
sub
call
leave
pusha
in
repnz
je
add
ret
or
gs
xchg
mov
movsl
jne
xlat
xchg
mov
dec
std
daa
lret
cltd
sbb
xchg
in
fiadds
inc
pusha
outsb
xchg
mov
mov
push
int
cmp
aaa
push
xor
push
pop
lea
imul
sub
dec
in
or
in
rcll
icebp
mov
xchg
sub
mov
inc
in
out
aam
xchg
inc
jae
test
outsl
lds
mov
push
jae
mov
lds
imul
jmp
push
adc
adc
push
sub
aad
mov
ds
and
push
shl
ss
pop
and
sub
movsb
xchg
fsubr
lea
inc
sbb
cmpsb
add
addl
adc
aas
notl
cltd
into
sbb
xor
ret
pop
test
lds
pop
imul
mov
adc
dec
popa
daa
jo
fsubrp
xor
fisubs
jno
jae
call
sbb
cwtl
das
xor
test
or
cmpsl
lret
mov
aam
cld
rclb
testb
int
test
jecxz
jmp
jns
subl
dec
mov
sti
or
and
mov
clc
add
sub
xchg
in
fidivs
repz
std
in
test
or
jle
or
neg
mov
xchg
hlt
inc
mov
ja
sub
mov
decb
roll
loopne
and
sti
push
or
sbb
inc
adc
add
movsl
mov
cmpsb
cmp
stos
cmp
push
insl
int3
sbb
mov
movsl
xor
ret
jmp
inc
sbb
mov
je
dec
pop
in
jle
jle
inc
push
adc
stos
shr
jp
add
sub
aas
add
lods
xchg
test
sbb
bnd
mov
and
mov
loopne
outsl
xor
ds
scas
sbb
adc
mov
xor
test
pop
sbb
xchg
adc
push
pushf
adc
add
inc
inc
or
bound
pop
sbb
fdivrl
outsb
cmp
mov
insb
add
add
mov
pusha
pop
xchg
pusha
pop
jge
mov
xor
mov
mov
sarb
mov
add
sar
adc
andps
jae
sbb
ljmp
mov
mov
xlat
sub
dec
pusha
jl
xchg
fildl
mov
je
or
cltd
sub
push
fldt
dec
repnz
shl
pop
pop
fcomip
inc
xchg
lock
cmp
pop
xor
popf
cmp
bnd
jo
dec
sahf
push
mov
out
and
jno
scas
jno
push
jg
xchg
sahf
enter
sbb
mov
adcl
mov
pop
insl
add
add
je
fldenv
mov
imul
push
pushf
push
out
push
fwait
cmpsb
ret
jne
into
push
cmp
sub
pusha
int
pop
repz
push
data16
mov
cs
add
sti
hlt
fisubl
dec
or
and
mov
ljmp
xchg
mov
les
cli
vprotb
ds
cmpsl
fcomip
fdivs
xchg
lods
sub
mov
or
push
inc
mov
xchg
xor
adc
lret
sbb
roll
mov
mov
je
and
movsl
jge
xlat
cmp
hlt
mov
add
lods
sub
cmp
subb
incl
mov
mov
inc
fldenv
inc
pusha
jge
jg
int
test
cmp
pop
sbb
aas
bound
rolb
clc
loopne
cmp
mov
mov
movsl
push
in
pop
sbb
fs
mov
adc
aaa
rorl
mov
loop
inc
mov
xor
subb
xor
push
out
push
sbb
pop
xchg
xor
push
test
cmpsl
mov
cs
pop
cli
sub
pop
fdivs
lcall
test
adc
mov
int
sub
cld
xchg
and
dec
out
js
xlat
adc
mov
sbb
xor
call
mov
xchg
insb
or
mov
dec
jbe
xchg
sub
inc
cltd
jmp
sbb
std
subl
inc
test
mov
jno
out
or
aaa
fisubrl
das
add
and
xorl
mov
jmp
or
inc
pop
mov
xorl
push
int3
cmc
push
adc
push
xor
cmp
mov
loop
ret
aad
pop
mov
cmp
jg
push
cli
mov
mov
shr
clc
pop
mov
xor
cmp
hlt
inc
push
into
imul
xor
call
xor
sbb
inc
out
test
add
mov
jne
jnp
test
data16
lret
ds
scas
cmp
out
jecxz
mov
cli
push
fsubrp
dec
rdmsr
leave
dec
pop
add
pushf
loop
js
out
cli
pop
and
cmp
shll
mov
push
sub
test
and
cltd
testb
dec
adc
sub
jle
mov
std
sub
xchg
cmp
sub
addr16
clc
xchg
ljmp
js
les
mov
fadd
pop
dec
icebp
adc
lahf
sub
enter
or
and
aad
pop
repz
push
ljmp
jno
punpckldq
xchg
movsl
aam
sti
fimull
inc
lea
fnsave
aaa
push
int3
inc
dec
pop
nop
sbb
sub
movsb
pop
dec
sbb
pop
movsl
adc
testb
shlb
es
dec
xlat
push
pop
xlat
psubd
pop
sub
pop
out
and
jae
pop
inc
jne
lock
xchg
insl
movsb
jno
into
dec
je
cld
popf
xor
ret
cmp
pusha
pushf
inc
mov
pop
jecxz
and
mov
push
mov
push
iret
or
cmpsl
arpl
js
xchg
das
lahf
adc
in
add
ficoml
test
pop
sahf
jb
dec
int3
sub
std
orb
rcrb
ss
xchg
scas
movsl
addr16
iret
cmp
push
shrb
addl
pop
xor
call
adc
mov
pop
das
adc
mov
test
subb
inc
lcall
jmp
leave
xchg
sub
imul
lcall
into
inc
push
sbbl
je
stos
not
xor
pop
pop
mov
xchg
insb
bound
mov
mov
fcmovbe
faddl
push
in
xchg
jmp
popa
testb
pusha
cmp
mov
inc
sub
push
add
out
out
push
xchg
mov
push
nop
sub
ret
fnclex
dec
shrl
add
or
or
push
inc
fldt
mov
stos
cmp
or
xor
push
mov
in
add
mov
mov
rcr
lcall
or
adc
and
ljmp
pop
stc
sbbl
int
int
push
std
or
stc
ret
mov
dec
outsb
lret
loopne
cld
loop
cmp
fs
sub
pop
scas
push
loopne
into
xor
dec
mov
rcl
add
inc
cmpsb
lcall
jg
sub
inc
inc
loopne
testb
mov
or
jnp
gs
shrl
sub
out
and
xchg
ret
insb
pop
push
mov
iret
andb
subb
fisttpll
sbb
sbb
sub
sbb
les
or
idivl
sub
pusha
mov
mov
bnd
inc
stos
adc
sbb
ds
inc
insb
shr
push
push
cmpsb
mov
addb
in
mov
pop
or
xor
xor
sbb
sub
push
cmp
insb
sub
popf
test
les
sub
mov
iret
adc
mov
adc
xor
orb
xor
xchg
es
dec
das
pusha
mull
or
pop
jge
shlb
orl
or
pop
sub
dec
out
insl
cmp
jmp
lea
in
es
push
pop
sub
shll
xor
inc
decl
push
sub
xorb
mov
fmul
mov
adc
outsb
dec
loopne
and
add
std
loope
sbb
xchg
jge
popf
lds
sbb
mov
xor
fstpt
out
inc
and
push
jge
scas
scas
mov
sub
dec
lods
push
aam
scas
pusha
in
sub
enter
or
sbb
mov
push
pop
mov
sbb
rcrb
leave
insb
mov
aas
leave
stc
pushf
mov
aad
mov
push
das
jle
popa
addr16
xor
lea
dec
ja
nop
xchg
lea
mov
sub
mov
in
stos
pop
pop
in
dec
js
iret
stos
push
je
cs
imul
loopne
adc
lods
cmpsl
xchg
xchg
stos
lret
loop
push
lcall
pop
adc
mov
ret
sbb
and
inc
dec
jg
jge
add
mov
insl
jge
adc
cmpsb
icebp
xlat
xor
hlt
loopne
cmp
stos
rclb
jge
mov
loopne
push
and
test
mov
mov
fists
data16
dec
addr16
into
pop
out
jmp
test
xlat
cld
out
sbb
pushf
mov
mov
xchg
pop
sub
or
jp
fdecstp
inc
adc
add
mov
cmp
call
add
jb
add
cmc
jl
pop
jp
jo
cli
dec
int
in
mov
inc
jbe
in
jbe
cmp
popa
clc
cmp
xor
pop
pop
pop
ror
int
iret
lcall
dec
mov
jge
add
stc
fnsave
jne
sub
dec
xchg
sub
sub
idivb
inc
jne
sahf
lods
cmp
fsubrp
inc
and
pop
xor
push
jmp
push
bound
lahf
in
push
out
push
rorb
out
lret
or
cmpsb
mov
imul
iret
push
aam
js
mov
popf
xor
enter
aam
loopne
movsb
and
pop
xor
mov
lea
cmp
push
popf
lea
mov
lea
out
inc
aas
push
in
dec
test
jg
lea
inc
mov
xchg
loopne
inc
cmp
xlat
lods
popa
sub
sbb
dec
out
inc
mov
out
mov
mov
fwait
sti
mov
fmuls
cmpsb
mov
mov
enter
sbb
xor
adc
outsl
rcrl
shl
lock
mov
cli
inc
iret
push
adc
fstps
lods
adc
fmulp
sbb
lcall
movsl
or
jge
dec
xor
xor
movsl
inc
inc
test
push
cmp
push
cmpb
sbb
or
stos
sub
cmpl
out
test
add
xlat
fs
push
inc
and
repnz
jmp
fwait
xchg
stc
nop
outsl
movsb
xchg
iret
test
out
test
les
xor
mov
jmp
les
and
jns
mov
push
das
shlb
ret
mov
leave
lcall
subl
in
gs
adcb
ds
in
pusha
xchg
popf
sbb
xchg
sub
cmp
mov
mov
jb
out
outsb
ja
add
data16
and
aam
cmp
stc
xor
mov
push
and
xchg
cmpb
pop
imul
test
mov
xor
ffreep
pop
adc
pop
mov
adc
lret
sti
out
push
jno
aad
aaa
cs
ret
out
mov
in
arpl
fs
inc
push
cmp
fstl
js
das
cmp
shll
mov
cwtl
jnp
subb
shrb
ja
pushf
mov
inc
sub
jno
and
cli
push
imul
mov
movsl
cmp
xor
sarl
es
loope
cld
adc
setbe
test
mov
cmpsl
in
repnz
lods
cmp
fwait
mov
subb
pushf
push
adc
and
pop
jns
sub
cmp
jmp
in
sti
shll
or
lret
loop
push
es
adc
add
roll
aas
add
popa
es
stc
jle
ss
mov
jbe
inc
mov
xor
dec
movsb
hlt
repnz
pop
imul
adc
cs
in
mov
aam
icebp
fimull
insb
addl
mov
aam
icebp
mov
out
xlat
inc
dec
paddsw
outsb
mov
fstpt
pop
in
dec
push
lds
arpl
mov
stc
mov
jae
mov
mov
sbb
das
mov
cmc
nop
das
out
jle
cmc
mov
ds
ja
in
dec
sbb
pop
dec
add
xchg
inc
xor
add
xchg
adc
imul
add
outsl
xchg
and
inc
je
inc
fidivl
shll
sti
dec
test
scas
jmp
std
pop
adc
or
cmp
cmpsl
ds
dec
loope
pop
lds
push
sbb
sub
mov
pusha
enter
inc
frstor
les
xchg
es
int
or
push
cmp
xchg
jne
xor
dec
mov
sbb
bound
mov
fstps
shrd
dec
leave
rcrl
mov
push
xor
sub
cmpsl
adc
cli
bnd
aam
bound
lret
and
test
dec
pop
cmpsb
scas
jge
or
mov
sub
les
xchg
xor
sbb
and
xlat
or
fstpt
clc
rclb
fwait
pushf
ficoms
out
arpl
sbb
lock
pop
jae
movsl
sti
ljmp
into
in
mov
xchg
rorb
mov
fdivl
popf
xchg
repnz
push
jo,pn
push
adc
pop
repnz
out
pop
jge
inc
out
sti
ja
repnz
jae
xor
cmp
rcr
sub
pop
mov
in
mov
jnp
dec
out
popf
adc
xchg
cld
mov
sub
xchg
sub
cmp
or
leave
pushf
ds
dec
sbb
inc
aam
lret
fwait
jp
mov
add
or
in
pop
aam
dec
or
aas
arpl
insb
shrb
mov
outsb
lods
mov
mov
sub
push
inc
xchg
daa
not
mov
sbb
jp
dec
mov
js
in
mov
or
xchg
mov
cmp
jecxz
rcr
mov
inc
adc
mov
or
sub
fsubrp
sub
inc
xlat
je
popf
sub
pop
loop
push
mov
xchg
jbe
sti
sub
pushf
sub
data16
dec
in
jmp
cld
push
shrl
lahf
int3
jae
testb
fidivrs
pusha
cltd
mov
mov
push
out
imul
fcoms
inc
test
mov
movsl
fidivrs
int3
into
in
push
fstl
mov
clc
xchg
adc
push
int3
dec
mov
adc
ficoml
lahf
daa
imul
in
stos
xor
aaa
out
out
dec
mov
mov
mov
aam
int
stos
mov
popf
or
imul
xor
dec
leave
and
mov
shll
aaa
dec
adc
cmp
in
cs
xlat
mov
xchg
push
push
inc
movsl
or
fnstenv
test
inc
fwait
out
int
xlat
out
add
pop
in
lds
aas
sub
xlat
or
pop
cmp
pop
cmc
mov
pop
jl
mov
in
cmp
imul
inc
and
jb
xor
sbb
stc
idiv
xchg
mov
mov
cs
mov
stc
dec
loop
sbb
ljmp
outsl
push
jl
jno
jnp
mov
icebp
add
enter
fwait
mov
fisubs
xchg
xchg
enter
xor
repz
mov
pop
xchg
jg
sub
je
jecxz
adc
mov
jecxz
sub
xchg
ret
es
adc
and
push
sbb
aam
cli
xchg
xor
in
jp
mov
or
fisubs
stos
xor
pop
jmp
shl
out
pop
out
add
or
test
mov
in
and
jnp
cmp
rcll
arpl
xchg
cltd
dec
jbe
mov
enter
push
fstl
in
or
jns
push
and
or
enter
push
pop
push
and
jge
cs
imul
aam
mov
push
movsb
jb
add
rorb
mov
push
push
sub
fnstsw
iret
cli
jae
dec
jmp
pop
cli
mov
shl
xchg
xchg
cld
add
loop
sbb
mov
lahf
sbb
and
xor
mov
xor
inc
inc
imul
inc
cmpsl
cmp
iret
jle
cmp
dec
pop
sbb
sub
ficomps
mov
arpl
dec
jle
stc
mov
xchg
inc
imul
jno
push
imul
outsl
js
push
cmp
jle
push
mov
inc
xchg
sub
repnz
jns
dec
in
loopne
call
jb
icebp
mov
jl
enter
xchg
sbb
ret
mov
jge
pop
popf
push
xchg
iret
cmp
mov
imul
push
sub
xor
push
mov
cmp
fsubrs
arpl
xchg
inc
mov
jnp
adc
fldl
rclb
out
push
adc
data16
fisubrl
mov
test
js
jp
es
pop
or
rcrb
add
cmp
fistps
mov
insl
addr16
or
or
into
xchg
xchg
mov
aam
rolb
pop
xchg
sahf
jmp
lods
mov
das
jnp
sbb
jne
inc
push
sti
mov
loop
enter
add
mov
es
test
push
not
aad
dec
sahf
imul
mov
xchg
mov
lcall
push
test
decl
sub
es
int3
push
adc
cltd
xchg
push
jmp
mov
mov
insb
xchg
shrl
sub
add
xlat
or
jae
mov
jmp
dec
pop
xchg
xchg
inc
aas
nop
add
addl
pop
sub
test
nop
mov
xchg
ja
and
arpl
rcrl
push
out
inc
push
jbe
shlb
clc
xor
jge
aam
sahf
mov
or
rcll
pop
repz
enter
jp
mov
pop
aaa
sub
jno
xor
dec
mov
pop
out
in
pushf
add
fnsave
stos
fsubl
popa
sti
or
add
jle
cltd
and
inc
inc
add
xor
rorb
into
jl
add
pop
fs
xchg
sub
and
dec
mov
subb
pop
cmpsb
mov
lds
add
pop
and
pusha
insb
push
dec
cs
out
jmp
cmpsl
das
scas
xor
push
lods
inc
dec
push
inc
mov
dec
lret
daa
mov
shlb
and
cmpsb
push
and
inc
std
jmp
xor
sbb
cmpsl
or
repnz
pusha
data16
mov
push
and
push
mov
cmp
enter
popf
xor
es
push
cli
mov
mov
sti
aaa
data16
stc
inc
cwtl
mov
dec
cmp
jg
dec
dec
aam
jno
sbb
add
cmpsl
jo
xchg
cwtl
pop
push
mov
jle
or
xor
or
pushf
mov
fmuls
xlat
add
aaa
mov
lret
fstl
ss
push
mov
adc
inc
in
jns
ss
sub
xor
jbe
aas
push
test
xchg
mov
cmp
sub
add
mov
jo
xor
in
pop
inc
fnsave
js
xchg
test
push
jae
mov
les
outsb
repnz
lcall
stos
jns
test
dec
loopne
xchg
bndstx
fdiv
mov
adc
cmovle
xor
cmpsl
lods
negb
aas
push
mov
aaa
call
addr16
xor
bnd
repz
aad
dec
adc
aam
in
adcb
data16
pop
sub
jae
js
add
in
and
fisubrs
call
mov
je
xor
lds
push
add
dec
std
or
in
inc
pop
in
jl
les
and
loop
jle
aas
mov
popa
cmp
push
inc
adc
into
pusha
dec
pop
pop
cmp
fildll
dec
push
out
mov
jae
and
jge
fwait
jg
inc
jo
jg
jne
or
jns
and
ja
testb
jl
fldenv
sbb
call
xchg
sub
imul
lock
mov
xchg
push
nop
movsl
cli
dec
and
pop
sbb
inc
pop
sbb
adc
lea
add
and
fs
addr16
sub
dec
mov
scas
int
xchg
repz
sbb
cmp
pop
in
push
push
mov
les
insb
stc
addr16
inc
imul
pop
fwait
xchg
imulb
imul
jns
xchg
scas
xor
xchg
insb
pushf
pop
popa
shll
jecxz
mov
push
adc
aaa
sti
xchg
push
roll
add
lahf
xor
jle
add
arpl
lret
pop
pop
sbb
cld
fwait
jnp
sbb
xchg
or
in
push
out
fildl
dec
ja
dec
repz
pushf
pop
dec
and
lret
mov
dec
shl
cli
insl
mov
push
push
jae
in
mov
xor
dec
scas
inc
and
xor
push
ljmp
cmpsl
cmp
sub
iret
ljmp
lea
repz
scas
pushf
popa
dec
in
rcrb
in
push
adc
stos
ret
xor
and
in
call
xchg
xchg
push
arpl
mov
in
jmp
lret
je
adc
aaa
aaa
clc
mov
pop
repnz
sarb
xchg
popa
mov
cltd
xor
and
adc
aaa
jae
mov
enter
cmp
xchg
lahf
das
ret
xchg
mov
stos
xorb
mov
cmp
jecxz
inc
fcmovnu
dec
push
int
mov
sub
das
adc
shl
dec
mov
cmpsb
mov
jmp
lret
mov
into
aad
adc
xor
jmp
mov
jo
xor
movsl
xchg
js
loopne
mov
imul
mov
shlb
int3
pop
add
lea
jecxz
jbe
dec
add
push
jmp
or
and
out
mov
dec
or
or
lock
outsb
out
data16
rorl
in
push
ljmp
dec
out
pop
lea
ljmp
sub
push
dec
in
push
lods
xchg
ljmp
int
fisttpl
push
jecxz
popf
dec
jmp
inc
shll
sarl
fs
stc
pop
in
jns
mov
jne
and
pop
sbbb
loopne
xchg
xchg
pop
sub
fdivrl
or
dec
inc
mov
jl
test
mov
xor
les
sbb
fwait
xor
pushf
add
in
jecxz
xor
sbbl
cmp
push
ss
mov
mov
sahf
pop
int3
mov
xor
data16
jp
jb
jo
hlt
shlb
jnp
inc
jno
and
xor
test
mov
mov
cmp
mov
aas
jge
xor
lds
int3
shlb
sub
jle
lds
stc
adc
mov
adc
cmpb
sub
js
dec
fwait
sbb
jne
aam
fwait
xchg
pop
mov
mov
and
andl
imul
sarl
or
cli
and
arpl
push
or
mov
cmpsl
cld
js
cld
lea
mov
jb
push
mov
loop
cmp
mov
mov
mov
mov
mov
mov
mov
fwait
test
dec
shrl
adc
shll
insb
js
testl
cmp
popa
clc
adcl
mov
adc
cmp
loopne
pop
jb
mov
pusha
cmc
stos
aaa
mov
adc
lods
or
jbe
dec
mov
adc
inc
jg
lret
mov
or
loopne
fldl
scas
scas
sbb
enter
mov
imul
fsubrl
bound
sbb
leave
and
and
xchg
dec
or
jno
call
cld
mov
pushf
cli
call
mov
or
mov
mov
mulb
lods
fidivrs
sbb
dec
jne
cli
das
pop
dec
cmpsl
add
cmp
or
cli
push
imul
xor
in
les
xor
jle
aam
fcmovne
jo
pushf
mov
ret
and
hlt
inc
sbbl
inc
xchg
sahf
xor
cwtl
out
sub
mov
pop
cmc
imul
arpl
pop
and
push
mov
arpl
pop
xchg
sub
pop
cmc
ss
arpl
xchg
sub
xchg
pop
cmc
mov
popa
xchg
sub
and
pusha
fmul
pop
rclb
imul
test
xchg
cmpsb
lock
mov
js
inc
mov
mov
leave
lahf
addr16
cmp
fists
fldl
icebp
fcomi
sub
mov
jne
insl
cmpsl
sub
cmc
xor
push
andb
fwait
jae
lret
mov
fcoml
mov
jecxz
mov
mov
shr
xor
or
aas
adc
insl
das
stos
movsb
int3
subl
shrl
fcoms
push
lret
fisttpll
sbb
popa
push
add
add
mov
ficompl
jns
fldenv
adc
xor
add
inc
call
icebp
in
mov
pop
adc
into
push
xor
out
cmpsl
js
pop
in
inc
lods
fstpt
adc
xlat
mov
scas
inc
jp
call
push
enter
jno
mov
xor
xchg
pop
lea
push
aam
push
push
cld
sbb
lret
dec
sbb
movsb
filds
push
test
cmp
les
mov
add
shl
inc
in
xchg
dec
rol
push
in
test
push
dec
rolb
push
stos
mov
out
test
xor
inc
jno
cmpsb
mov
sbb
push
shrb
pop
sarl
pop
add
or
data16
clc
jae
pop
leave
fnstcw
dec
fs
adc
gs
xor
sbb
sub
in
dec
test
pop
mov
or
sub
or
mov
ror
in
mov
out
loope
cwtl
adcl
sbb
xchg
rcll
add
add
in
int3
xchg
fdivr
push
std
mov
ss
loop
pop
jb
mov
out
mov
jae
pop
jecxz
adc
fists
mov
sbb
fldt
js
jecxz
add
stos
add
stc
int3
mov
insl
adc
add
ficompl
fnstsw
dec
pop
insl
nop
pop
das
loopne
les
and
aam
jno
push
fsubrp
dec
or
frstor
aaa
jne
ja
pop
mov
pop
xor
sbb
jl
mov
adc
loope
inc
idivl
push
and
push
jo
mov
fcompl
dec
dec
shl
jnp
add
lcall
dec
jne
lds
arpl
adcb
push
inc
das
into
xchg
ja
sbb
mov
popa
and
mov
dec
cmp
or
lds
ss
and
mov
mov
inc
fnsave
cmp
cmc
pop
loop
shrl
cmp
js
adc
fwait
lcall
mov
ss
add
jb
dec
jle
push
mov
imul
mov
push
js
pop
adc
add
dec
jle
jmp
and
push
pushl
pop
mov
sub
leave
cli
sbb
push
dec
inc
xchg
stos
rolb
adc
shr
addr16
gs
test
xlat
inc
lcall
push
cmp
sub
daa
mov
or
mov
dec
sarb
xchg
fadd
pop
gs
push
lahf
movsb
sahf
sub
fmull
xchg
cmp
and
addr16
push
ficoml
dec
fmul
pop
pop
xor
ds
adc
pop
pop
sub
sub
inc
jle
int3
add
fdivrs
jo
pop
push
push
fwait
repnz
lods
dec
aas
push
or
add
dec
mov
jnp
int3
outsl
lods
xor
jg
cmp
stos
test
mov
cmp
test
pop
push
push
xchg
mov
inc
jnp
fnstsw
xchg
inc
and
add
pop
or
xchg
stos
xchg
cld
aad
imul
ja
cltd
loope
je
xchg
out
leave
sbb
test
out
push
pop
out
dec
btc
fxtract
fmull
filds
jg
and
dec
pushf
sub
cltd
fistl
dec
dec
pop
hlt
jns
fmuls
and
cmp
call
xchg
outsl
fildl
cs
mov
movsl
scas
aas
pop
and
jmp
push
ljmp
jmp
call
pop
xchg
ljmp
xor
mov
popa
fs
mov
nop
mov
mov
and
cwtl
add
pusha
xor
push
inc
or
adc
dec
adc
and
pop
lahf
xchg
daa
lock
jno
in
scas
sti
mov
cmp
les
adc
loop
mov
std
inc
jecxz
jns
sub
in
in
and
shrb
adc
cmp
inc
mov
mov
imul
and
jo
lea
es
xor
and
push
adc
shl
inc
enter
aam
sti
pop
inc
stc
ret
hlt
inc
lret
insl
sbb
lahf
mov
mov
enter
mov
xchg
int
dec
das
aam
daa
add
inc
adc
cmp
pop
or
test
shll
or
ds
pop
mov
push
fiaddl
popf
xor
push
repnz
inc
movsb
mov
mov
sbb
cltd
inc
push
dec
xor
ret
lret
xchg
mov
pop
push
clc
flds
test
movsl
push
xchg
dec
sbb
or
aad
testb
outsb
ss
sbb
sbb
stc
or
lret
aam
int
out
roll
mov
jmp
cmpl
out
inc
and
push
mov
mov
sub
or
scas
inc
lea
int3
mov
mov
xlat
test
mov
mov
das
lea
cmp
jge
mov
rorb
xor
out
pop
hlt
inc
loop
dec
ret
xchg
das
push
out
and
mov
cmc
cltd
shrl
mov
movsb
ljmp
subl
dec
sbb
cmp
adc
sbb
mov
ja
loopne
jle
sub
aas
lret
mov
push
repnz
xchg
shr
xor
jmp
lret
jne
xor
xor
jae
mov
cld
xchg
fs
jne
test
xchg
xor
int3
outsl
lcall
icebp
push
sub
sub
shll
fucomip
outsb
jnp
pmaddwd
xchg
imul
popa
jae
es
imul
in
jnp
insl
out
mov
fistpll
fisubrs
cld
lcall
dec
out
lcall
and
xchg
fdivr
push
fsubrl
stc
nop
aam
out
das
jle
sbb
les
test
mov
dec
std
int
inc
test
roll
bound
sbb
fs
push
add
sub
push
jo
mov
jmp
jno
pushf
inc
jecxz
xchg
xlat
mov
lahf
cmp
jecxz
test
cmpsb
jp
push
lret
bound
stos
jmp
cmp
ficomps
inc
mov
movsb
sti
mov
and
push
adcl
scas
out
xchg
in
push
loope
repz
std
lock
repz
ja
aad
and
dec
ret
ret
arpl
and
mov
cmc
test
les
cmpsb
xor
xchg
out
lods
sub
mov
clc
scas
sbbl
and
cmp
leave
int3
pop
pop
stos
test
int3
repnz
pop
repnz
dec
inc
cmc
jns
daa
arpl
sub
cmp
shll
or
jno
scas
in
call
iret
jmp
jbe
jno
and
dec
aas
push
inc
fisubl
cmp
cli
fldl
pop
lods
mov
pop
out
xchg
das
xor
mov
imul
mov
or
dec
inc
repnz
imul
cmpsl
in
cltd
imul
and
inc
loope
push
xchg
mov
xchg
fs
mov
xor
jmp
in
imul
gs
push
sub
mov
adc
je
mov
cld
int3
dec
cmp
pop
cs
sbb
sbbb
cmp
dec
loopne
test
add
add
xchg
subl
call
shl
jl
stc
and
es
cltd
pop
sbb
push
jo
js
arpl
arpl
jg
sub
insl
mov
xchg
out
push
into
jnp
je
and
pop
jno
dec
call
or
jle
fnstsw
mov
inc
lret
cmovl
test
gs
mulb
mov
sub
hlt
add
sbb
mov
pop
jns
sub
sbb
and
push
mov
mov
dec
pop
pop
cmpb
inc
push
xchg
adc
ret
in
and
push
enter
stc
jo
dec
mov
mov
rcr
int3
in
lcall
mov
outsb
loop
pusha
mov
lds
test
mov
jl
push
cmc
out
add
pop
icebp
inc
push
inc
and
dec
or
cmp
mov
push
xchg
cmpsl
lea
in
rcrl
aad
push
repnz
cmc
hlt
adc
push
mov
pop
imul
ja
ret
adc
jl
xor
ret
jno
adc
loop
sahf
xchg
xor
cmc
ss
pop
sarl
repnz
loopne
mov
ja
aad
mov
inc
push
call
pop
pushf
jne
call
pop
xchg
mov
and
jmp
orl
xor
loopne
fstl
or
pop
imul
mov
rorl
lret
add
out
adc
sbb
push
inc
add
fiaddl
imul
adc
leave
bound
mov
add
xor
ret
rcr
mov
push
dec
imull
ret
gs
leave
and
data16
cmpsl
out
pusha
dec
popa
sub
adc
pop
and
pop
jo
inc
leave
int
inc
pop
outsl
ja
iret
pop
push
mov
ss
pushf
cld
ljmp
push
adc
mov
incb
mov
mov
pop
and
fistpl
add
pop
mov
jne
inc
mov
lret
aaa
sub
call
cmp
pop
fwait
jbe
push
xchg
xchg
loopne
leave
loop
push
orl
outsb
and
mov
mov
xchg
dec
mov
cmp
cmp
xor
lahf
aam
jns,pn
cmp
lods
daa
in
xchg
jmp
pop
cmp
sti
test
fmull
jae
popa
mov
dec
push
das
fucomp
sahf
mov
push
and
loopne
inc
int3
jge
and
inc
stos
and
repz
loop
cmp
mov
xchg
pop
stos
adc
dec
pop
packuswb
dec
in
jl
push
mov
int3
outsl
loopne
fsubrs
sbb
jb
leave
xchg
push
adc
scas
mov
add
xchg
bound
mov
push
shlb
jg
shlb
mov
stos
nop
aas
dec
pop
repz
das
pop
pop
cmp
lds
roll
test
jp
dec
dec
stc
mov
dec
bound
ds
scas
pop
in
iret
adc
dec
fisttpl
punpckldq
cmp
dec
pop
lea
cmp
pop
outsb
cmc
cmp
es
inc
pop
add
xor
into
enter
rdtsc
xchg
ror
dec
mov
mov
mov
ret
inc
push
xor
push
mov
popa
fadds
jne
call
aam
bnd
cmp
sbb
movsb
inc
idivl
push
je
aaa
lea
aad
mov
stos
popa
mov
push
lcall
fsubl
lretw
mov
stos
add
mov
inc
lret
xchg
jmp
cmp
stos
jno
and
stos
pop
daa
in
ja
clc
mov
sbb
test
cmc
mov
cmc
jge
rcrb
push
add
je
jge
or
jno
or
leave
adc
or
dec
insl
out
stos
pop
lea
aam
pusha
mov
scas
ret
push
mov
mull
pop
sbb
cmc
cmp
movsl
icebp
hlt
or
adcl
insb
xor
jbe
inc
dec
mov
insl
ret
fildll
add
fwait
int3
rcrl
out
nop
fimuls
dec
mov
roll
jecxz
scas
sub
xlat
inc
fadd
inc
jge
pop
loope
or
push
mov
pusha
push
dec
pop
ret
mov
cwtl
fwait
sbb
pop
sbb
and
dec
out
xchg
dec
aad
in
or
mov
mov
push
in
lahf
pop
jae
jg
dec
dec
push
push
mov
lcall
jne
add
lcall
add
cwtl
push
xchg
ljmp
cmp
mov
add
test
lods
jmp
sub
aaa
and
loope
popa
and
imul
cs
cld
insb
arpl
out
mov
repnz
inc
pop
sub
fistps
push
add
data16
cmp
jns
loop
cmp
xor
test
jnp
xor
xchg
fisubl
jbe
adc
adc
mov
push
add
xor
movsb
cmp
inc
inc
adc
push
popf
pop
mov
sub
xlat
lods
or
inc
push
jge
nop
jle
js
inc
inc
das
xor
add
mov
dec
inc
mov
je
push
daa
pop
xchg
int3
scas
mov
inc
adc
mov
lods
xchg
cmpsl
rclb
dec
popf
int
sub
and
push
mov
sbb
jbe
stos
mov
fldenv
or
sub
adc
les
fldl
mov
into
and
push
mov
not
test
push
xchg
cli
lret
inc
test
lahf
shl
loop
mov
sub
rcll
test
jns
or
ja
mov
push
sub
in
mov
out
dec
jo
dec
test
xchg
mov
ss
movsb
vcvtsd2si
mov
in
mov
lret
jnp
xor
xor
add
dec
loop
les
out
push
mov
insb
mov
jns
pop
int3
imul
cmp
pop
cmp
mov
sbb
sbb
mov
negb
scas
popf
mov
lods
imul
fistps
xor
mov
and
mov
jge
inc
push
cmpb
mov
adc
mov
xchg
rorl
dec
cmp
out
inc
test
mov
inc
lahf
sub
je
jecxz
inc
rolb
popf
pop
xor
jl
test
sti
bswap
orb
mov
lock
scas
out
mov
inc
enter
pop
loope
pop
cmp
mov
pop
jne
mov
fcmovbe
or
aaa
das
and
cmc
sbb
adc
shlb
addr16
inc
data16
fnstcw
fcmovnb
lds
xlat
cli
call
adc
mov
jbe
sub
imul
nop
scas
and
xchg
mov
cwtl
pop
outsb
mov
mov
jl
push
stos
mov
cmpsb
push
xor
adc
and
mov
xchg
jg
lret
jecxz
adc
ss
pop
out
push
ret
test
repz
fdivrs
or
lret
fistps
shrl
ret
out
fsubr
in
sbb
adc
mov
aam
test
in
movsl
hlt
cmc
jle
cs
mov
push
mov
mov
nop
jbe
addr16
jp
cmpsb
dec
out
les
shrl
addr16
push
mov
test
mov
outsb
jae
dec
in
jle
inc
mov
sub
mov
cli
xchg
mov
test
push
gs
adc
lahf
jae
roll
xor
test
xchg
mov
ret
in
pop
ja
mov
mov
sbb
out
xchg
and
adc
aas
hlt
cltd
cmp
jecxz
add
test
negb
xor
dec
and
test
jo
and
mov
dec
ss
test
cmp
inc
insb
xor
pop
sahf
pop
cmpsb
sbb
xchg
add
fdivrp
lcall
mov
cmpsb
popa
inc
push
xor
inc
lock
sbb
insb
negb
imul
adc
in
js
fdivrs
ficomps
jecxz
pop
sbb
xchg
cmp
xchg
sub
shlb
les
sub
pop
out
cmpsb
clc
or
sbb
pop
out
outsl
test
add
add
xchg
sub
out
sub
out
les
and
jbe
push
in
outsb
xchg
pushf
scas
std
fwait
call
ja
ja
sub
mov
add
fisubs
mov
sbb
sub
adc
insl
xchg
jl
jno
lahf
push
dec
xchg
out
lods
inc
push
xchg
mov
call
cltd
sub
xchg
mov
repnz
gs
test
jg
push
adc
push
xchg
out
outsb
inc
aas
icebp
test
pop
xchg
inc
or
pop
pop
push
mov
sbbb
mov
js
jno,pt
or
pop
push
or
pop
test
cmpsl
xabort
add
into
fdivr
adcl
xor
fwait
ljmp
mov
aad
add
insb
je
aaa
mov
pop
ret
pushfw
add
mov
out
fcoml
cmp
loope
jo
scas
mov
and
mov
cmpsb
mov
add
add
je
mov
loopne
clc
lods
ljmp
pushf
push
xor
jg
rorl
jns
adc
rorb
mov
sbb
add
add
pushf
dec
xchg
scas
je
sub
pop
sarl
pop
enter
adc
imul
xlat
sti
clc
push
mov
popl
sub
js
cltd
add
out
jnp
add
scas
pop
imul
test
out
cmp
cli
mov
xchg
mov
scas
hlt
addr16
or
shll
test
cmp
cmp
int3
jo
mov
je
fsubrp
xor
filds
push
rcl
sub
rclb
bound
fdivl
imul
mov
clc
addl
movb
in
xor
cmp
pop
orb
mov
add
pusha
jmp
clc
or
cmp
pop
adc
xor
pop
inc
xlat
dec
lcall
or
cmp
sbb
push
push
add
cld
or
inc
jp
adc
and
push
int
inc
daa
ss
push
cmpsl
mov
push
cs
out
outsl
stos
or
fmull
sub
or
mov
sbb
xchg
sarl
shl
adc
xchg
cmp
and
add
adc
sti
sbb
bound
repz
js
dec
or
jge
call
push
pop
movsl
scas
cli
lcall
frstor
sbb
xor
jl
vpcmpgtd
cmp
fsubs
add
enter
fcos
inc
xchg
mov
xchg
push
or
jo
lods
rolb
sarb
and
in
dec
xor
jecxz
push
repz
pop
faddl
xchg
push
cmp
repnz
pop
sbb
jecxz
out
push
in
xorl
test
lds
jbe
cli
stos
inc
enter
inc
cwtl
mov
jecxz
add
icebp
nop
lds
popa
ja
jo
pop
into
imul
in
into
pop
push
mov
lret
mov
pushf
aas
mov
adc
jmp
sbb
mov
jecxz
mov
adc
repz
and
push
add
jmp
sub
movsb
xor
jp
mov
pop
cmp
pop
cmc
in
idivl
sub
cmp
dec
sub
dec
xchg
loope
pop
and
hlt
xchg
jg
andb
fs
out
mov
mov
dec
pop
hlt
test
dec
mov
rcr
cmp
push
ret
pop
mov
jp
movsb
xor
pop
in
xor
in
pop
hlt
push
cmpsb
fadds
dec
mov
out
shlb
push
stos
mov
data16
sub
mov
fbstp
add
divl
dec
lds
rcll
nop
lahf
push
clc
or
enter
jl
mov
nop
xor
pop
cmp
lret
data16
dec
mov
cwtl
cli
andb
sub
jns
test
das
rclb
adc
ljmp
loopne
mov
push
out
dec
lods
cmp
add
xchg
push
push
ds
mov
insl
lods
mov
mov
jne
adc
sub
or
jp
dec
adc
inc
xlat
outsb
jb
cwtl
pop
xor
adc
ljmp
cli
imul
mov
popa
enter
dec
cmp
push
pusha
sbb
iret
call
cmp
test
outsb
add
inc
std
jne
arpl
loope
xchg
and
add
push
mov
sub
jns
dec
inc
jmp
mov
cs
inc
push
push
in
hlt
cmpsb
inc
cli
mov
out
shlb
pushf
mov
add
mov
js
push
cmc
cs
jns
sbb
roll
mov
mov
push
movsb
mov
int
loopne
lret
xchg
mov
push
pop
adcb
mov
and
jae
mov
push
adc
jmp
sub
mov
cmp
and
mov
data16
inc
pop
ss
xor
lret
in
das
adc
jae
enter
push
jmp
dec
add
imul
jmp
and
or
cmp
xorl
and
cmp
pop
outsb
negl
mov
jmp
imul
xor
imul
fadds
jbe
xor
scas
dec
andb
int
dec
in
out
push
cmc
pop
push
adc
cmp
add
scas
cmpsl
lea
mov
jne
mov
mov
adc
iret
jp
add
popa
clc
movsl
bound
iret
jnp
and
dec
out
xchg
popa
clc
mov
inc
mov
adc
ljmp
mov
jg
mov
scas
fists
sbb
into
add
pop
inc
insl
das
pop
in
movsb
std
lahf
ss
clc
sub
icebp
push
out
fisubrl
cmp
mov
mov
insb
repz
mov
stc
push
call
cmp
sahf
xor
iret
nop
cmp
xor
mov
push
divb
jmp
or
imul
int
cli
xchg
ss
mov
inc
ljmp
out
fs
xchg
shlb
sti
loopne
jge
xchg
cmp
rcr
mov
mov
sbb
stc
popf
pop
push
cmp
js
mov
ja
idivb
cmpsb
fcmove
adc
lcall
add
in
enter
mov
mov
out
xor
pop
int
gs
loopne
stos
push
or
inc
fsubrl
gs
fwait
dec
arpl
in
mov
stc
pop
mov
dec
js
fidivrl
inc
cwtl
das
xor
in
test
sbbl
insb
or
adcb
in
dec
sbb
lods
aas
lahf
cmp
int
push
jmp
inc
pop
cs
xsha1
cmpsb
dec
dec
fbstp
imul
inc
faddl
xchg
leave
pusha
das
xchg
or
mov
and
inc
dec
loopne
inc
jmp
jb
loope
flds
xor
test
jg
add
sbb
mov
cmc
aaa
inc
fsubrl
adc
jmp
and
or
scas
sbb
dec
fsubrl
adc
and
fs
inc
fadds
or
test
lret
sti
into
dec
loopne
sbb
mov
lds
xchg
sbb
jns
jg
call
pop
into
outsl
push
add
icebp
lods
and
mov
or
add
in
pop
xor
mov
mov
adc
jmp
call
jb
std
cmp
pop
insl
lgs
mov
xlat
pop
shrl
clc
aad
cs
mov
pop
adc
pop
scas
xor
fistpll
outsb
scas
cld
sub
sub
loop
jp
xor
lcall
jmp
cmpsb
leave
fildl
sahf
or
sub
mov
outsb
addb
mov
dec
loop
cmc
mov
xchg
sub
mov
mov
pushf
aas
sbbl
mov
popf
xor
imul
lock
push
das
push
ja
mov
addr16
xor
cmp
loop
mov
push
out
mov
xchg
cmp
jae
mov
data16
cmpsb
xchg
ds
outsl
lea
mov
sub
xchg
ds
outsl
lea
mov
mov
xchg
aas
sbb
lds
xchg
sub
sbb
gs
pop
out
xchg
mov
outsb
mov
fucom
jle
push
mov
enter
pop
mov
outsb
stos
lods
pop
repnz
cltd
xor
cli
or
dec
push
ja
xchg
insl
mov
ret
clc
xlat
outsb
xor
adc
adc
cltd
xor
add
je
dec
in
enter
cmpsb
cmp
sub
lea
sti
pusha
imull
fcmovbe
insb
or
cld
xchg
xor
xchg
adc
lds
add
mov
dec
jecxz
jp
ficoml
or
push
popf
cmp
adcb
jmp
test
adc
and
aaa
fcomps
or
jg
sbb
in
orl
aad
loopne
push
adc
add
mull
out
ret
adcb
add
lods
inc
xor
insl
push
out
aaa
push
or
lret
bound
inc
fadds
out
dec
loop
push
aam
inc
or
inc
inc
sarl
aad
inc
fildl
sbb
dec
adc
fimuls
aam
je
sbb
movsl
dec
and
pextrw
inc
fcomi
sbb
mov
lock
iret
data16
in
xor
and
dec
and
cmpsl
push
fisubs
mov
cmc
sbb
add
int
adc
repnz
or
push
jmp
lret
sbb
push
movsl
testb
xchg
ds
adcl
cli
xchg
testl
shll
aad
mov
das
xor
and
xor
add
mov
dec
scas
inc
and
cs
inc
fdivrs
push
add
sbb
nop
daa
cmp
xchg
in
fdivl
xorb
and
xchg
sub
mov
and
insb
mov
mov
jae
mov
and
and
je
iret
test
and
stos
sti
pop
out
sub
mov
xor
sub
mov
sub
sbb
jns
pop
lods
sbb
stos
cwtl
les
clc
cwtl
mov
mov
cmp
jno
jns
sarb
shrl
and
push
subl
jl
add
shlb
cmp
mov
pop
xor
cld
push
loop
cli
xchg
jg,pn
mov
dec
xor
jns
sbbl
sahf
ss
es
sub
or
movsb
inc
data16
js
daa
mov
into
push
inc
pop
push
out
in
and
std
mov
les
notb
out
push
lock
cmpsl
push
movsl
aad
popa
clc
push
dec
out
jl
sbbl
and
cmp
jge
jmp
cli
movsb
sbb
pop
inc
scas
inc
jbe
pop
sahf
cmc
test
add
jbe
pop
imulb
or
push
movsb
out
mov
movsl
loope
xor
jne
mov
ret
xor
cmpsb
popa
inc
cld
xchg
jne
jae
cmc
test
xchg
sub
and
jbe
mov
aad
adc
cmp
cli
pop
repz
cmp
adc
adc
inc
js
or
stos
inc
sub
sbb
daa
loope
in
adc
testl
push
in
sbb
or
push
cmp
out
sbb
and
push
in
inc
cli
imul
xchg
dec
xlat
outsb
jg
test
outsb
into
bswap
pop
cmp
pusha
stos
inc
xchg
inc
add
in
pop
test
mov
or
pop
ret
pop
lea
or
mov
fdivp
mov
pusha
mov
cmp
pusha
mul
test
and
xlat
cmpsl
mov
mov
xor
scas
lods
loopne
push
popf
test
lret
call
mov
pop
mov
dec
mov
cmpsb
mov
das
roll
xchg
fadds
les
popa
push
out
xchg
ljmp
sub
mov
aaa
jnp
jp
inc
pushf
mov
xchg
out
pop
jae
mov
inc
in
data16
add
add
pop
mov
cwtl
scas
sbb
inc
pop
imul
lods
cs
in
mov
loopne
sub
mov
sub
push
mov
jl
dec
rclb
dec
out
mov
mov
popa
hlt
fs
and
pushf
xor
push
call
in
or
cmp
sub
xchg
fisttpll
daa
out
inc
fiaddl
jbe
imul
outsb
adc
nop
daa
inc
cmp
insb
fistl
adc
fbstp
loopne
or
popa
add
stc
dec
repz
leave
push
jmp
xlat
outsb
je
fldcw
xor
popa
and
jo
jb
xchg
push
push
pusha
mov
insb
es
lea
or
mov
jmp
in
add
jmp
testb
lea
in
jo
dec
jno
push
ret
arpl
popa
mov
pop
js
jp
adc
aaa
xor
test
adc
mov
std
inc
xchg
idiv
sub
cld
into
aaa
jmp
push
fmull
lret
dec
xor
and
pop
pop
mov
data16
dec
push
test
lods
jo
popf
sub
sub
imul
jno
lock
in
fwait
lret
jbe
xchg
mov
int3
fs
test
daa
and
xchg
jmp
repz
pop
stc
jnp
xchg
mov
adc
nop
push
imul
jb
xchg
pusha
pushf
sahf
and
ja
popa
clc
cmp
cmpsl
inc
pusha
enter
push
rclb
rcll
pop
sub
outsl
pop
mov
fcmovnbe
jg
sub
pop
or
sub
insb
andb
sub
mov
and
add
add
sarb
outsb
sbb
cmp
je
ljmp
int
jbe
inc
dec
in
xlat
fimull
inc
dec
loopne
mov
dec
ret
rcrb
pop
pop
mov
enter
sub
jbe
mov
mov
mov
mov
lahf
aaa
jno
push
cmp
mov
data16
xchg
cmp
mov
pop
dec
push
insl
add
sub
pusha
cmc
xor
shrl
arpl
xor
mov
dec
fidivl
sub
mov
repz
jns
outsl
adc
out
stos
and
xor
call
jne
out
cld
push
int3
dec
mov
outsl
sarl
outsb
mov
xchg
movsb
fdivr
pop
mov
fimuls
ror
or
popf
fistpll
icebp
in
adc
loop
mov
pop
lods
pushf
and
int
push
ret
dec
stos
push
inc
fisttpl
iret
xor
dec
and
push
stos
loop
testb
notl
mov
xchg
mov
je
xchg
dec
mov
push
adcl
jo
pusha
pushf
jge
and
jno
outsl
push
mov
aaa
jmp
adc
and
into
xchg
mov
stc
sahf
outsb
mov
cmpsl
lret
pop
movsb
loopne
in
xor
add
jecxz
jmp
sub
out
cs
mov
jge
out
pop
rol
mov
and
hlt
aam
mov
test
mov
pop
mov
jne
outsl
mov
jge
je
inc
xor
movsb
arpl
out
mov
pop
shlb
add
or
cwtl
and
inc
lahf
sbb
stos
inc
inc
sbb
mov
pusha
js
lahf
insb
es
jp
js
push
dec
or
push
pusha
pop
out
xchg
push
cmp
jo
jg
or
sbb
push
jl
cmpsb
imul
xor
jne
mov
in
pop
movsl
or
add
lcall
outsl
add
outsl
mov
push
pop
and
mov
xchg
adc
test
hlt
sbb
daa
ljmp
push
lods
sub
out
dec
mov
sub
jbe
scas
data16
repz
aam
ficoms
idiv
and
shrl
dec
fnsave
stos
inc
sub
pop
mov
push
pop
mov
clc
lods
jno
bt
push
sub
ss
inc
mov
lcall
stos
jbe
dec
xchg
test
dec
rolb
pop
inc
fdivrl
call
ds
gs
test
lret
mov
punpcklbw
call
lret
dec
push
push
fisubrl
or
cmpl
xor
mov
nop
mov
adc
add
icebp
mov
mov
cmp
stos
nop
inc
shlb
in
sbb
imul
pop
leave
add
out
pop
pop
mov
movlhps
mov
test
testb
push
and
cli
sti
xor
or
in
cld
sbb
repnz
mov
cmp
repnz
pop
adc
cmpsb
popf
add
sub
or
cmpsl
xlat
dec
pop
pop
xlat
outsb
nop
test
clc
push
fcomps
cs
add
lcall
cwtl
jns
adc
movsl
inc
sti
sub
imul
leave
stos
pop
fsubrs
lret
int
jb
int
das
xlat
or
dec
aad
xchg
sub
jbe
bound
popa
push
jg
pop
cmp
push
pop
outsb
xlat
es
cmp
rcl
sbb
lahf
mov
push
scas
leave
out
add
fistl
ret
out
xor
loop,pn
loop
fstpt
fisttpll
inc
mov
cmp
jb
jns
repnz
mov
repnz
push
ret
es
repz
clc
sub
lret
xlat
lret
out
subl
xchg
cmc
pop
cmc
es
popa
mov
lcallw
stc
add
add
adc
clc
and
xchg
int
mov
inc
or
sti
sub
lret
adc
sub
mov
not
cmp
repz
jno
int3
adc
iret
lock
mov
shlb
shrl
enter
cwtl
loopne
xor
jo
or
adc
sub
inc
clc
xchg
ljmp
mov
mov
addl
int3
or
push
int
jmp
adc
jmp
sarb
aam
mov
fnsave
scas
sbbl
je
xlat
dec
and
xchg
mov
insb
mov
ja
insl
xor
xor
mov
hlt
pop
xchg
xchg
jbe
hlt
es
andb
mov
in
sbb
icebp
call
inc
push
or
in
hlt
daa
add
mov
push
iret
inc
adc
push
scas
xor
enter
jb
lahf
lock
push
cmpsl
pop
cmpsb
xchg
out
xor
hlt
rcrl
aam
cli
inc
loop
pop
ffree
dec
fstpt
dec
rol
sub
or
pop
sub
andb
out
mov
and
jne
subl
scas
ja
mov
xchg
sub
xchg
jl
mov
jne
pop
shll
loope
jns
adc
sbb
jns
xchg
pop
lcall
dec
jbe
leave
dec
dec
sub
lods
pusha
sub
xor
insl
mov
jnp
cltd
sub
aaa
or
cmp
call
stos
pop
adc
cmpsb
pop
pop
rorl
pop
lret
call
scas
inc
fldt
lock
call
fdivl
or
sub
and
cmpsb
pop
xor
data16
xchg
push
loope
push
adc
push
mov
inc
loope
lods
mov
lds
xor
rol
mov
std
mov
add
add
or
xlat
push
rcrl
leave
insl
rol
inc
icebp
sub
push
lods
test
xchg
sub
movsl
push
adc
add
arpl
xor
and
push
out
sub
test
rorl
cmpsl
mov
cmp
jmp
xor
dec
push
push
cmpsl
sbb
aaa
sahf
in
les
mov
out
dec
mov
mov
cli
mov
jp
insb
movsb
enter
xchg
into
push
xchg
out
lret
or
or
or
fs
pop
jp
insb
jmp
mov
inc
dec
jecxz
leave
jo
mov
jmp
int
sbb
mov
jl
xor
inc
ror
dec
loopne
out
dec
les
hlt
push
adc
mov
add
sbb
div
dec
rorb
mov
imul
mov
or
sti
repz
dec
mov
outsl
jb
ja
daa
lea
push
lea
or
ret
mov
xchg
xchg
aad
jne
das
mov
dec
mov
arpl
cmpsl
inc
daa
sub
jne
pop
iret
xor
sbb
push
adc
cltd
scas
inc
dec
lds
jge
call
mov
adc
mov
push
push
call
pop
and
icebp
xor
cmc
leave
inc
in
mov
ds
mov
dec
test
lret
xchg
push
or
je
sub
repnz
ljmp
mov
pop
xchg
mov
mov
mov
mov
mov
ret
out
jecxz
and
loope
xchg
sbb
insl
lcall
stos
out
jle
cli
jno
sub
add
and
jno
dec
push
push
roll
and
adc
xchg
add
jb
jp
mov
sahf
fs
lea
mov
jle
lahf
adc
scas
sbb
cli
sahf
iret
xor
in
adc
out
scas
mov
or
or
cs
xchg
mov
push
jecxz
push
cs
test
lret
xlat
mov
test
loopne
lahf
aad
orl
outsb
jb
test
sti
out
pop
mov
addr16
xchg
aad
dec
jmp
inc
mov
and
jo
mov
mov
cld
sub
lret
push
mov
mov
push
icebp
push
mov
jne
sbb
jp
inc
dec
aad
insl
push
popa
clc
mov
ljmp
mov
ret
mov
cld
and
pop
addl
mov
stos
addl
cmpb
ret
repz
int3
adc
add
std
sub
sbb
cmpsb
xchg
adc
repnz
mov
stos
ret
enter
xlat
cmp
test
cmp
adc
inc
mov
adc
jns
xor
push
in
mov
mov
xor
inc
mov
lds
test
inc
mov
push
pop
into
xchg
mov
dec
insb
add
jo
mov
cmc
push
into
lds
xor
das
icebp
mov
ret
lret
daa
cmpsb
mov
lods
test
push
aaa
into
push
scas
mov
ja
arpl
xchg
cmp
xchg
insb
mov
inc
mov
out
and
push
into
mull
repnz
mov
mov
or
int3
ja
psubb
xor
cmpb
jo
imul
jl
stos
sti
mov
mov
testb
adc
mov
mov
sbb
sbb
enter
mov
push
ret
xor
pop
jmp
negl
push
aad
or
cmp
in
ret
jl
mov
mov
cmp
rcrl
aam
in
push
shll
push
xlat
cmp
loop
cmc
and
test
cld
inc
cmp
into
arpl
leave
das
insb
xor
and
ja
cmc
mov
or
jle
insb
dec
testl
cmp
aaa
fcmove
js
sub
inc
fstpl
inc
fistl
pushf
add
sub
pop
dec
je
push
pop
insl
mov
xor
lahf
rcrl
cmpsl
pop
jbe
mov
push
lds
dec
jecxz
sub
dec
xor
xchg
pop
call
add
mov
pop
mov
push
push
xor
push
mov
test
sbb
popf
movsl
xor
add
push
call
out
pinsrw
outsl
ret
mov
lea
in
xor
adc
shrl
fwait
js
or
aaa
adc
es
add
movsl
mov
into
jp
xchg
jle
sub
jge
xchg
jg
xor
test
scas
mov
dec
sbb
mov
cmc
nop
lea
mov
ja
roll
fbstp
clc
xor
in
xor
jbe
sub
stc
sub
pushf
mov
push
out
jg
add
pop
aas
add
mov
push
inc
movlps
pushf
push
ret
pop
ret
and
shll
sub
fdivl
or
mov
jmp
leave
inc
xor
inc
ret
mov
fimull
mov
inc
fiaddl
xchg
jp
dec
sbb
push
xor
divl
jnp
enter
arpl
clc
test
adc
mov
std
push
sub
mov
nop
jmp
lahf
fldenv
test
aad
je
stos
enter
sbb
mov
push
inc
mov
lock
mov
or
loop
inc
enter
inc
cmc
test
fsqrt
push
lret
shlb
xchg
mov
adc
add
dec
test
add
and
sbb
bound
ja
and
in
inc
movsl
outsb
push
and
incb
notl
test
inc
sbb
movsb
cltd
dec
bound
andl
mov
sbb
mov
inc
fcompl
insb
cltd
sti
dec
sbb
push
stos
push
fwait
or
sub
jnp
sbb
jp
lahf
fnstsw
jb
test
loopne
and
ja
or
int3
mov
sbb
in
scas
shrb
push
outsl
shrl
icebp
inc
int3
mov
mov
fucomi
jo
aaa
ss
ficomps
inc
mov
and
int3
push
jb
cwtl
xor
inc
fstpl
jno
sti
jp
push
inc
mov
scas
or
dec
bound
mov
xor
fdivrl
pop
xchg
in
pop
repnz
adc
xor
jno
dec
pop
cmp
lahf
mov
mov
adc
mov
leave
dec
and
ret
sub
xchg
mov
jno
mov
sub
sub
sub
ret
pop
jne
add
arpl
shrb
out
xchg
call
mov
cwtl
xchg
pop
mov
sbb
dec
out
cmp
cmp
rcll
in
ret
and
les
lret
in
rcrl
add
aad
mov
clc
cmp
jmp
push
add
push
imulb
nop
xor
dec
mov
add
xchg
fucomip
mov
pop
test
push
xchg
aaa
and
cmp
ds
test
stos
dec
adc
jle
pusha
popa
clc
push
ljmp
dec
leave
xchg
sub
ds
stc
sahf
sbb
test
out
inc
adc
pop
int
out
sub
fisubrl
or
enter
aam
dec
and
xor
inc
fadd
push
sbbl
dec
mov
cld
mov
cwtl
das
movsb
sbb
bnd
ds
ss
mov
test
mov
or
lea
int
incb
out
sahf
int
xor
in
mov
inc
xlat
daa
adc
lods
xchg
addr16
loop
push
je
movsb
popa
and
aas
out
dec
loopne
pusha
cmp
inc
movsl
aaa
or
inc
daa
fldenv
pushl
xor
mov
mov
push
or
xchg
mov
xchg
stc
jmp
jl
std
mov
call
cmp
loop
jne
mov
rolb
out
cs
out
pop
mov
cmc
mov
sbb
dec
mov
mov
adc
pop
lods
clc
sub
mov
jmp
mov
ljmp
arpl
jae
iret
xor
xchg
sub
xchg
add
mov
sbb
daa
xchg
mov
sti
insb
incl
stos
pop
mov
andl
xchg
and
sbb
ds
mov
xchg
enter
lret
xchg
add
push
rolb
rcl
jne
in
cmpsb
fdivrs
in
into
movl
jl
test
add
mov
lock
sbbl
jno
inc
push
lret
ljmp
imul
pcmpgtb
lods
add
sbb
xor
or
or
fistpll
mov
sbb
jbe
cmova
cltd
dec
push
popa
lods
pop
and
jg
dec
jecxz
cmp
test
jmp
adc
mov
loop
loop
in
dec
aad
fnsave
repnz
inc
shl
test
cmpsb
or
subl
sub
loop
imul
cmp
jns
fisttpl
clc
push
mov
adc
pop
mov
in
mov
or
mov
outsl
js
xchg
sub
xor
mov
cmpb
push
pop
jge
jae
adc
rclb
push
sbb
movsb
ret
cmp
mov
add
mov
add
adc
cli
ss
or
cmp
push
mov
push
push
push
hlt
mov
stos
out
add
testl
or
sbb
mov
aaa
dec
jecxz
inc
pop
mov
das
xchg
xchg
pop
out
in
test
lods
mov
xchg
sarl
jle
testl
mov
add
sti
xchg
and
mov
gs
lods
dec
or
dec
loopne
mov
push
es
mov
push
sub
addb
arpl
xor
outsl
mov
adc
or
add
sbb
leave
ret
mov
add
arpl
push
data16
pop
arpl
mov
pop
jmp
push
sub
dec
sbb
nop
movb
dec
xchg
scas
xchg
cmc
sbb
mov
shld
dec
jecxz
mov
inc
daa
or
xchg
arpl
stos
inc
push
popf
xor
or
xchg
stos
jbe
xchg
jmp
push
insl
mov
sbb
pop
outsl
aam
and
outsb
test
inc
sub
gs
push
adc
lea
xchg
lds
call
mov
mov
fadd
aas
jmp
push
cwtl
sbb
xor
xor
push
jnp
pop
xchg
mov
iret
mov
xchg
pop
push
xor
dec
pop
imul
pop
and
test
adc
add
xchg
xor
inc
xchg
sbb
pushf
pop
mov
fildl
xor
mov
sbb
test
lcall
aaa
push
fildl
jae
testb
jp
aas
sbb
dec
xchg
and
add
mov
adc
pusha
dec
xor
cmp
cmp
pop
inc
int3
pop
mov
insl
testl
nop
add
cs
mov
sub
aad
mov
insl
add
jmp
mov
inc
in
pop
lea
shrb
xchg
dec
divb
test
imul
ljmp
scas
push
adc
out
and
sbb
add
lods
xchg
jns
and
adc
mov
adc
mov
jbe
stos
jo
stc
jecxz,pn
data16
cwtl
mov
push
iret
xchg
test
sub
in
sti
lahf
xchg
fidivrl
xchg
adc
inc
inc
add
sub
push
cwtl
xchg
insb
repnz
dec
addl
outsb
cmp
dec
loope
in
js
jae
sub
rcll
sbb
jp
sbb
jns
aad
repz
mov
shrl
repnz
ret
aas
call
sub
adc
popl
es
adcl
js
dec
or
push
mov
mov
jp
pop
icebp
jmp
loope
fadd
dec
fiadds
push
rorl
mov
mov
in
push
mov
jne
dec
ret
pop
in
jae
lds
add
cwtl
mov
inc
mov
mov
jne
mov
sbb
mov
sbb
in
movsb
test
sub
or
divl
mov
jmp
mov
div
mov
push
test
cmpsb
dec
rclb
xchg
cmp
and
jl
push
cs
je
sub
in
es
xchg
into
fmuls
pop
or
sub
repz
mov
push
leave
push
not
cmp
inc
inc
test
in
sbb
xchg
addr16
add
jge
mov
divb
jge
arpl
push
call
mov
jle
jp
ret
cmp
sbb
loop,pt
add
imul
cmc
xor
std
es
dec
fmull
inc
fmull
pop
xchg
pop
mov
xchg
outsb
mov
gs
mov
mov
jae
fdivrl
xor
aaa
push
cmp
sbb
push
xchg
xor
jb
jmp
mov
insl
movsl
fiaddl
dec
fdivrl
push
mov
pop
test
movsl
push
cmp
sub
mov
imul
pop
mov
ljmp
popf
icebp
push
sub
insb
push
stc
es
and
cmp
lret
outsl
stc
xor
sarl
imul
imul
out
cs
out
mov
and
test
std
sub
jecxz
idivb
ljmp
mov
clc
shrb
and
in
mulb
test
fwait
mov
cld
je
shlb
cmp
mov
pop
lds
rcrb
pop
lret
mov
dec
movsl
adc
cmp
addl
mov
mov
movsb
dec
xchg
mov
push
in
lds
cmp
out
cmpsb
pop
adc
xchg
mov
fstpl
fidivl
jg
sti
mov
clc
sbb
mov
lods
mov
fidivs
vmread
jmp
std
xorb
push
sti
xchg
push
aad
and
mov
les
into
cmc
jnp
popa
lods
push
push
in
inc
into
call
or
mov
and
movsb
cmpxchg
lds
mov
aas
xchg
sbb
cwtl
dec
mov
cmc
out
or
sbb
pop
repnz
pop
mov
adc
fsubrs
arpl
mov
mov
dec
xor
jnp
xor
sbb
dec
mov
rcrl
xchg
and
call
pop
sbbl
pop
pop
outsb
call
mov
into
push
ljmp
repnz
adc
xchg
sub
xor
arpl
stos
inc
arpl
pop
mov
lahf
ss
jecxz
or
mov
pop
pop
push
fdivl
dec
mov
mov
push
xor
push
fdivl
into
testb
mov
insb
inc
mov
das
mov
fidivl
cmp
ds
out
sbb
pop
dec
int
in
imul
movsb
popa
fbstp
stos
mov
inc
jle
push
inc
aad
icebp
int3
mov
inc
popa
pop
pop
mov
insb
mov
aaa
fcmovnbe
mov
in
aaa
arpl
inc
adc
pop
movsl
mov
add
ret
andb
mov
ret
jae
jnp
fisubl
enter
in
in
and
divl
aaa
stos
cmpl
nop
xchg
xchg
push
or
lods
pop
mov
adc
push
lret
adc
clc
lea
popf
xor
cvtps2pi
arpl
push
fildll
lock
ret
cmpsl
sbb
cmp
call
sub
pop
fcoms
outsb
sbb
jae
int3
pop
fmull
rep
xchg
gs
out
or
jp
lea
xchg
jp
xor
cmpsb
add
pop
aas
aad
ret
addb
jbe
adc
das
jp
int3
aas
xchg
push
jbe
jl
test
add
jmp
rolb
push
iret
outsl
sbbb
fdivl
jb
hlt
cmp
sbb
push
loope
test
pop
notl
dec
mov
ja
popa
cmc
fcmovnb
push
xor
mov
fdivrl
inc
xor
mov
fildll
stos
sub
mov
jb
jnp
push
or
loopne
push
mov
xor
pusha
testb
pop
jmp
les
int
jnp
fistl
add
stc
and
cmp
mov
mov
sbb
fsts
pop
mov
sub
inc
push
push
testb
push
adcl
aam
mov
sub
mov
les
test
push
out
repz
pause
dec
inc
stos
arpl
ret
dec
mov
loope
sub
jns
and
ret
cmp
pusha
outsb
imul
adc
cmpsl
into
test
stos
pop
jnp
sub
and
jo
or
dec
sahf
jp
inc
or
jmp
jns
inc
hlt
sub
xchg
cmp
inc
imul
daa
mov
fwait
cltd
out
test
mov
or
push
orb
int
jno
imul
inc
xor
into
gs
push
call
testl
insl
or
push
call
das
cmp
push
shlb
inc
arpl
lods
push
loope
pop
shl
add
xchg
popf
clc
push
fsubrs
cltd
call
xchg
and
cs
xor
and
bound
jo
mov
jecxz
scas
out
pop
icebp
loopne
sub
jecxz
mov
xor
ss
jo
hlt
popa
cmp
mov
jb
pop
add
jnp
out
jb
jle
push
or
jno
lods
push
push
mov
mov
push
clc
pop
and
xchg
outsl
cmp
je
sub
xor
xchg
xor
gs
mov
jge
cmp
jo
gs
cmp
fwait
cmp
and
inc
adc
leave
cmp
cld
mov
xor
gs
fnstenv
push
inc
flds
fsubs
mov
push
std
or
sbb
test
xor
push
ljmp
ret
mov
cmp
into
xchg
mov
fdivrs
outsl
negb
and
fcompl
pushf
js
adc
push
push
movsl
xchg
push
shrb
sbb
or
int3
xchg
repnz
mov
mov
pusha
call
nop
and
call
jne
orl
xor
sbb
fs
mov
and
or
les
mov
mov
mov
fs
xor
mov
cmp
pop
les
int
xor
test
fs
in
xlat
flds
mov
jl
movsb
test
mov
stc
popa
inc
jbe
sbb
xchg
pop
push
mov
fs
pop
loopne
add
xchg
cmp
mov
xchg
mov
aad
sub
jg
js
in
das
mov
icebp
push
sarl
stos
fdivrl
or
jle
in
repz
into
add
mov
addr16
mov
dec
mov
mov
js
sub
ss
push
lcall
test
test
int3
sub
js
mov
mov
mov
fmuls
fstl
cmp
mov
jo
enter
imul
fiadds
adc
sub
push
xchg
cmp
rcr
icebp
pop
lcall
fidivs
hlt
sub
pop
and
faddl
adc
or
or
ficomps
les
rorl
fwait
mov
mov
mov
addb
les
jb
fistl
lds
cmp
insl
popa
divb
mov
sbbb
push
imul
sbb
lahf
hlt
mov
lcall
sbb
jle
fmull
lcall
pop
inc
push
and
cmp
sbb
addl
mov
fcoml
jge
mov
mov
jbe
test
ds
push
roll
arpl
pop
pop
and
inc
ds
jbe
jbe
jno
pop
ret
jnp
jg
nop
popa
jbe
push
int3
outsb
in
leave
mov
stos
sbb
lcall
insl
in
nop
in
pop
sarl
clc
pop
stos
bound
aam
mov
in
xchg
or
mov
lock
insl
call
add
add
int3
cmp
in
cltd
adc
mov
aaa
mov
jo
data16
lds
iret
cli
sbb
pusha
loopne
ljmp
mov
stos
lahf
xchg
mov
mov
or
out
pop
jb
dec
jge
negb
xor
cs
add
xor
repnz
adc
jmp
lcall
lea
lcall
pop
scas
imul
div
jns
repz
jmp
ljmp
adc
dec
ret
out
imul
pop
hlt
imulb
arpl
imul
int3
outsl
mov
leave
dec
adc
in
xor
ja
dec
repnz
sub
xchg
push
icebp
clc
in
push
out
aaa
lahf
int3
adc
jmp
sbb
scas
pop
dec
repnz
jmp
jns
push
push
push
movsl
inc
adc
inc
sub
je
and
stos
lret
inc
or
mov
xchg
enter
xchg
pop
sbb
js
add
jo
pusha
push
add
fstpt
fs
xchg
dec
xchg
lea
inc
adcb
in
push
in
pop
push
add
hlt
jb
and
adcb
outsl
out
cwtl
roll
add
inc
adc
insb
xlat
rolb
and
push
lret
addr16
push
push
aam
push
add
or
push
add
push
dec
pop
shl
jae
and
sbbl
jne
sub
mov
outsl
test
lea
dec
adc
int3
xchg
in
test
shrl
outsb
cmc
mov
mov
outsl
dec
or
jmp
push
fld
mov
fwait
inc
lods
js
into
movsl
mov
popa
out
push
aas
movsl
imul
cmpb
pop
aam
test
mov
shll
ja
mov
mov
js
or
push
stc
xor
mov
outsl
jb
inc
sarb
movsb
adc
xchg
inc
mov
in
int3
xchg
cmp
fstps
pusha
jmp
adc
sbb
lret
lret
mov
outsb
dec
adc
ljmp
lds
loopne
add
mov
mov
out
lret
cltd
cmpsl
sbb
xchg
inc
pop
in
dec
adc
mov
scas
push
clc
xor
mov
daa
sub
ja
ss
sbb
mov
dec
xchg
cmp
or
aaa
hlt
les
cmp
mov
das
and
push
ret
loopne
push
shrl
les
adc
lcall
int
jecxz
xor
and
xor
pop
add
lock
push
ss
inc
dec
dec
jecxz
mov
mov
mov
gs
jmp
jno
pop
das
data16
lock
std
sarl
test
mov
ss
cmc
pop
sub
in
cmp
popa
push
lcall
cli
add
cmpb
adc
push
sti
jmp
fs
popf
cmp
cmp
sub
xchg
dec
repz
in
insb
data16
xor
sbbb
into
xor
cltd
dec
adc
xor
adc
in
jmp
mov
cmp
pop
lods
mov
fisubrs
or
xchg
push
ficoms
scas
pusha
fwait
sbb
lods
jnp
pop
lds
xor
cmpsb
push
es
mov
sub
mov
jg
je
pusha
repnz
inc
adc
and
push
scas
mov
add
mov
dec
or
test
pop
sub
icebp
adcl
jmp
inc
inc
mov
inc
adc
in
data16
cs
movsl
xor
insb
out
sahf
mov
and
xlat
xor
push
cmc
in
mov
clc
inc
mov
jecxz
pusha
cltd
jp
adc
testb
mov
ljmp
cmp
fbstp
es
xchg
mov
popf
mov
xorb
mov
rclb
cmp
xor
push
cmp
fnstcw
cmp
xchg
xor
rolb
and
push
stos
hlt
pop
xor
lods
insl
and
out
mov
xchg
pop
sarl
call
jle
jo
imul
and
fisttpl
lods
or
or
adc
int
inc
mov
in
ret
shl
mov
xchg
sbb
out
push
ljmp
sti
mov
es
mov
push
addr16
cld
call
pop
add
call
pop
inc
imul
or
xchg
cmp
mov
test
loopne
xchg
or
pop
jns
push
jg
xchg
cmp
sub
push
or
ds
push
jae
lcall
and
sbb
shrl
test
xor
lock
loopne
inc
xchg
sub
mov
pop
jno
leave
scas
mov
sbb
dec
outsl
addr16
arpl
ds
lahf
inc
or
scas
int3
pop
adc
addr16
add
xchg
mov
mov
pop
mov
push
in
cmp
mov
mov
and
iret
dec
adc
andl
pop
mov
pop
in
repnz
xchg
hlt
lea
ret
imul
fisubrs
mov
and
xor
pop
mov
test
push
cmpsl
insl
icebp
lods
dec
testb
popf
sar
pop
sub
pop
cli
stos
ss
sti
sub
ret
xchg
jl
test
leave
mov
adc
loopne
mov
sub
call
call
inc
xorb
cmp
in
cmp
roll
add
in
push
mov
pop
add
pop
jp
jmp
cmc
mov
imul
pop
mov
adc
sti
lds
fcmovnb
lods
std
pop
inc
sbb
pop
adc
fbstp
out
cli
popa
stc
aaa
jmp
ljmp
cmpsl
or
xchg
mov
repz
sub
dec
dec
aam
lahf
scas
mov
pop
add
jno
mov
aas
data16
inc
lods
sub
sbb
mov
mov
mov
jbe
xchg
movsb
es
enter
or
push
shlb
ljmp
inc
adc
inc
jne
jl
lcall
xchg
fs
mov
int
pop
in
xor
pop
mull
lea
xchg
push
js
rorb
cmc
pop
cmp
jmp
jl
pop
sti
pop
xchg
lcall
loope
fs
cmp
xorl
and
xchg
std
xchg
leave
xor
mov
sbb
sub
or
dec
adc
or
add
mov
or
pop
dec
or
mov
ret
pop
les
fstpl
push
jecxz
push
rolb
pop
cmp
loope
andl
js
ficompl
cmp
push
inc
adc
cmp
fiadds
aad
xchg
aad
add
fdivrl
jb
fnsave
xor
js
cmp
adc
cltd
cmp
sahf
insb
mov
push
mov
in
jae
movsl
jmp
je
ja
shll
ret
adc
pop
int3
adc
fwait
call
std
jl
cmp
addb
mov
iret
sbb
fsubrp
cmp
outsb
enter
or
out
aas
mov
test
push
push
rorl
int
xchg
test
push
stos
test
push
std
mov
pop
inc
in
xchg
push
pushf
push
add
sarl
lahf
dec
push
adc
cmp
adc
nop
dec
push
xchg
adcb
cmp
in
xchg
or
xchg
cmp
mov
psllq
or
out
add
jno
xlat
js
push
insl
icebp
iret
add
notl
imul
lock
cmc
loope
shlb
stos
fdivrs
les
fmull
mov
mov
lods
pop
mov
test
jl
sub
sub
js
mov
outsb
jecxz
jnp
stc
sti
out
mov
mov
adc
mov
cmp
jns
daa
out
push
mull
cmp
jmp
iret
mov
lahf
cmp
jno
clc
cmp
roll
leave
repz
das
pop
xchg
testl
adc
popf
jnp
inc
adc
mov
push
xchg
pop
std
arpl
fnstcw
jge
push
std
sub
rcrb
mov
adc
jne
test
imul
popf
jmp
sbb
icebp
mov
cmp
mov
pop
jg
negl
mull
sub
xchg
das
fiaddl
rol
lods
das
cli
add
pop
xchg
push
mov
pop
push
sahf
cmpsb
jge
ja
push
sti
stc
fs
inc
xchg
in
repnz
or
pop
insl
in
inc
sub
rol
lcall
sub
mov
push
mov
cmc
int
stos
daa
test
jno
nop
loopne
aas
jmp
hlt
sarb
cld
test
pop
insl
out
inc
pop
les
xchg
inc
xchg
jb
sbb
add
mov
inc
std
imul
cs
push
add
imul
call
mulb
mov
xchg
sub
jne
jo
add
test
xchg
test
sbb
out
pop
pop
icebp
mov
sbb
mov
push
rcrl
dec
psrlq
mov
orb
mov
xchg
ret
in
jb
test
imul
sbb
inc
and
out
pop
xor
aam
jge
pop
cli
test
mov
dec
in
dec
in
test
out
xchg
outsb
push
mov
test
mov
sbb
pop
faddl
pop
cmpsl
scas
xor
or
inc
or
subl
mov
ret
mov
rdmsr
std
addr16
pushf
in
lcall
test
cli
pop
scas
fiadds
lock
gs
or
js
sbb
pushf
adc
test
fldt
or
iret
data16
filds
shlb
faddl
orb
std
rolb
dec
out
mov
lahf
orb
xchg
cmp
inc
adc
iret
and
loop
ljmp
test
adc
xchg
call
add
fnstcw
popa
sbb
cmc
fmull
stc
xor
xor
jecxz
sahf
and
rorb
loopne
mov
scas
lea
out
jae
aam
cmp
cmp
sub
or
adc
jnp
or
sarl
pusha
mov
lret
sbb
rorl
inc
or
mov
mov
in
outsl
aaa
lock
pop
and
mov
mov
mov
inc
or
mov
scas
and
mov
dec
out
test
mov
mov
lods
pop
push
sbb
jmp
pop
inc
pop
je
bound
xor
pop
cld
cmp
std
sbb
adc
inc
and
cs
xor
xchg
mov
mov
arpl
fucomi
outsl
inc
into
addr16
cmp
push
mov
js
jle
dec
adc
mov
mov
popa
xor
add
in
daa
sarl
std
cli
pop
ret
cmp
lds
into
je
add
sub
scas
aas
xor
and
repnz
lret
add
clc
inc
push
add
call
push
add
mov
fidivrs
mov
add
outsb
xchg
pop
mov
lret
xchg
mov
fstps
jo
or
out
cs
idiv
mov
enter
push
mov
mov
shlb
jmp
aam
pop
add
bnd
int3
jge
mov
xor
cmp
pop
clc
icebp
fildl
mov
movsb
clc
xlat
ret
cmpsb
cmp
imul
pop
add
push
or
add
loopne
xor
xchg
pop
add
xor
and
pop
addr16
or
mov
orl
push
repz
cwtl
mov
mov
pop
dec
jmp
rcrb
int
pusha
mov
lahf
out
inc
adc
jmp
mov
adc
sbb
pop
cli
ret
inc
jp
sbb
inc
repz
inc
sbb
aad
pushf
fwait
cmp
adcb
test
dec
mov
jecxz
lahf
pop
mov
adc
mov
hlt
sub
and
ss
jnp
add
outsb
out
mul
mov
aam
es
lock
cmp
cmp
adc
addb
pusha
loop
cmp
call
cmc
js
xchg
stos
fidivrl
into
into
mov
push
push
pop
popf
aad
and
cmp
out
mov
fnsave
out
jns
xchg
cmp
push
jg
push
les
add
sarl
test
mov
or
sbb
fistps
cmpsl
or
stos
shrb
mov
mov
pop
mov
xchg
cmp
sub
cmp
add
pusha
sbb
test
jmp
dec
clc
pop
push
in
sahf
aaa
imul
popf
cmpsb
xchg
mov
mov
lret
in
sbb
push
sbb
jecxz
push
mov
pop
fwait
icebp
pop
jmp
sti
cmpsb
sub
xchg
push
std
test
ret
mov
mov
cmpsl
mov
jne
jmp
adc
popf
pop
pusha
in
mov
inc
or
movsl
cwtl
aaa
jp
cs
es
inc
outsl
ds
out
gs
int3
mov
rolb
mov
or
mov
mov
in
fistpll
in
das
std
in
push
std
in
repz
mov
pop
rclb
in
jno
xchg
or
test
push
idivl
mov
popf
push
cmpb
jl
mov
stos
push
mov
iret
push
mov
sub
lods
xchg
mov
pop
stc
and
inc
adc
mov
cmpsl
push
add
sub
sub
push
fcmovu
jae
xor
cwtl
das
pop
out
jbe
inc
in
jae
les
enter
jmp
cli
pusha
into
stc
insb
negb
push
mov
test
cmpsb
daa
adc
pop
adc
ds
sub
hlt
push
outsb
ljmp
add
pop
xorb
xchg
nop
mov
fidivl
loopne
jmp
mov
xchg
pop
adc
xchg
iret
jns
je
push
mov
arpl
push
daa
cmp
out
movsb
cwtl
aaa
add
adc
test
dec
pop
adc
lods
sub
fdivl
into
adc
mov
sbb
pop
in
mov
aaa
push
test
decb
pop
jnp
es
gs
xchg
jns
subl
stos
xchg
cmp
fadds
ja
or
cli
sub
cld
fs
pop
call
or
dec
and
dec
clc
xor
in
push
adc
lods
add
mov
andl
cmpb
cs
sub
imul
xchg
push
jg
pop
addl
outsl
repz
mov
push
mov
or
jg
add
jne
mov
addr16
shlb
mov
or
loope
stos
xor
in
xchg
add
cld
cli
mov
scas
into
sbb
xchg
iret
sbb
sbb
sub
adc
add
ljmp
sub
push
or
pop
fiaddl
ficomps
repnz
pusha
in
cld
call
dec
adc
out
dec
adc
pop
mov
aas
pop
loope
pop
sub
fisttpll
int
inc
mov
ja
xchg
cmp
jp
push
orl
push
dec
adc
mov
loop
imul
test
lods
mov
daa
mov
js
fadd
add
sbb
mov
add
mov
call
cmc
inc
adc
sub
mov
test
push
ljmp
mov
mov
lea
push
test
ret
adcb
pop
fdiv
pushf
inc
shlb
shlb
add
scas
and
ds
xor
repnz
insl
and
aam
sub
cmp
inc
or
lret
sub
and
pusha
daa
xor
mov
mov
dec
in
xchg
sub
adc
mov
dec
cwtl
pushf
cmp
or
into
jno
mov
inc
jae
add
les
lods
and
adc
insb
inc
sbb
scas
xchg
push
dec
sarb
mov
sbb
pusha
mov
adc
inc
mov
imul
insb
dec
lret
xchg
sbb
out
dec
mov
mov
pop
enter
clc
test
shrb
mov
test
nop
ds
cwtl
inc
call
add
jnp
add
lods
push
popf
in
jno
xchg
iret
call
add
adc
add
cli
mov
pop
inc
fisubrl
mov
xchg
rorb
inc
orb
rclb
mov
mov
pop
dec
lcall
inc
je
push
xchg
orb
add
adc
nop
and
pop
test
inc
add
jg
mov
xchg
inc
jb
pushf
cmp
insb
dec
or
pop
cmp
mov
jmp
inc
je
cltd
cmp
insl
jno
add
pop
in
enter
mov
mov
dec
push
cmp
in
iret
and
push
into
dec
push
fwait
cmp
leave
mov
lods
pop
mov
mov
test
outsb
mov
movsb
sub
lods
pop
cmp
sub
orb
das
mov
lods
fs
mov
test
flds
int
and
pop
mov
or
and
and
inc
or
push
movsb
jg
rorb
in
push
and
and
mov
cmp
jb
test
shlb
movsb
jne
mov
mov
lahf
inc
shlb
dec
mov
pop
stc
shrl
stc
popf
jns
fwait
out
lret
mov
jle
testl
leave
nop
sbb
mov
adc
or
les
sbb
sub
cmp
enter
aas
and
adc
add
cmp
jae
jbe
cmp
sbb
ja
cmc
inc
hlt
dec
lock
jmp
rcrl
xlat
and
call
iret
lret
jg
aas
sbb
imull
ret
mov
out
mov
jge
xor
ret
mov
ss
mov
test
mov
mov
pop
sbb
pop
mov
pusha
jge
xchg
pushf
jne
sbb
loopne
sbb
idiv
enter
rorb
mov
push
mov
xor
repnz
push
jle
pushf
lahf
pusha
and
jb
adc
xchg
cmp
or
data16
dec
push
and
lret
sbb
int3
xchg
addr16
lahf
aas
inc
jno
scas
lds
jbe
fcoms
sub
add
xchg
mov
mov
dec
or
pop
std
pop
mov
enter
jecxz
inc
mull
mov
cltd
adc
jo
mov
or
adc
jne
cld
dec
ret
loop
mov
loopne
lds
out
xor
jecxz
pop
push
fs
pop
sti
bound
insl
aaa
sahf
mov
sub
or
xchg
ds
repnz
xchg
jns
jmp
rcll
data16
xchg
xor
int3
xchg
and
pop
add
mov
xlat
dec
adc
sub
test
aas
xor
jno
lcall
jno
inc
rcl
jnp
xchg
cld
bound
sarb
ljmp
shr
fcmovb
xchg
mov
mov
hlt
pusha
mov
cmpsb
in
imul
dec
lds
mov
movsl
fwait
xor
xor
cwtl
bound
push
stos
cmpl
popf
mov
mov
fistps
dec
lcall
in
jl
pushf
pop
or
ret
or
and
fmul
popl
rclb
mov
fildll
xchg
aaa
mov
scas
fiadds
inc
scas
jns
lcall
in
ret
pop
mov
pop
mov
cmp
mov
daa
lahf
aaa
popl
pushf
cmp
mov
mov
das
push
roll
push
sub
push
mov
jb
mov
aam
dec
out
sub
pop
in
inc
or
shrb
cmp
sub
adc
inc
jmp
fmull
filds
xlat
mov
push
xchg
ds
sub
dec
xchg
adc
pop
rol
popa
lock
sbb
mov
movsb
xchg
inc
stc
inc
fwait
cmp
loop
add
dec
ja
cmp
jb
out
xchg
or
stc
pop
and
jge
mov
sub
popa
mov
cmpsl
xor
fdivr
pop
mov
jecxz
xchg
lods
mov
push
cmp
mov
xor
in
ja
jmp
or
pop
push
mov
mov
data16
sti
mov
stos
xor
filds
fs
or
add
pop
dec
pop
ja
cmc
inc
outsb
out
repnz
push
add
inc
adc
sbbl
jp
ja
mov
outsl
jb
cmp
or
mov
sbb
es
xchg
inc
sti
pop
mov
aas
ljmp
jns
and
mov
hlt
xchg
ja
lret
out
sbb
repnz
out
cmp
sbb
in
jo
dec
out
jno
and
addr16
cmpsb
aad
sbb
mov
loop
mov
inc
imull
cmp
cmp
iret
std
dec
jne
jae
in
leave
imul
inc
push
sub
sbb
bound
cltd
aas
xchg
jae
cmp
and
negb
pop
mov
ds
push
data16
ja
jno
lea
loope
repz
mov
daa
jno
mov
xor
adc
int3
xchg
jns
sahf
cmp
sbb
fdivs
inc
arpl
shll
stc
push
adc
out
test
mov
mov
cmpsb
cmp
test
sub
adc
jno
push
add
shlb
inc
out
xchg
dec
sahf
repz
xor
sbb
push
popf
mov
cmpsl
and
mov
adc
xor
pop
inc
dec
adc
test
loopne
rorl
mov
insl
data16
hsubps
fwait
pop
cmpsb
xor
loope
int3
mov
sti
inc
adc
stos
and
mov
movsb
add
lds
nop
push
pop
out
xchg
mov
imul
mov
scas
and
lock
sahf
in
adcb
adc
jae
pop
clc
imul
bound
dec
or
and
pop
push
xchg
inc
hlt
mov
jne
adc
push
outsl
mov
in
mov
or
pusha
repnz
adcb
xchg
inc
mov
fnstcw
roll
sub
and
mov
pop
mov
rcrl
int3
push
push
cmc
jae
or
or
cmpsl
pop
push
sbb
or
jp
add
add
jae
add
mov
popa
testb
pop
and
push
call
sbb
xlat
jle
dec
out
cmp
add
nop
sub
repnz
push
flds
aad
mov
mov
pop
cld
int
test
mov
add
inc
scas
fs
loope
dec
or
cld
sub
jg
mov
sti
xchg
les
add
push
dec
popf
sbb
imul
and
push
jbe,pn
inc
dec
push
or
add
sbb
push
int3
inc
pushf
aaa
ljmp
xor
andb
xchg
and
orl
jmp
ds
call
clc
mov
pop
iret
xchg
push
mov
dec
leave
icebp
mov
jp
mov
sbb
cmp
imul
mov
daa
or
in
push
loop
dec
jl
push
negl
push
and
add
decb
les
add
inc
or
push
and
inc
cmp
xor
xchg
dec
sub
fstl
mov
andl
out
fisttpl
jge
jl
dec
push
call
lds
adc
adc
jg
pop
add
imul
addr16
int3
xchg
xchg
popa
rolb
stos
dec
cltd
cmp
ret
xchg
out
insl
dec
push
adcl
jecxz
fsts
leave
lcall
test
out
sub
mov
cwtl
push
jge
mov
xor
lret
shlb
hlt
mov
xchg
and
cmp
mov
out
orb
out
outsl
add
xor
mov
mov
aad
pop
push
jne
inc
jnp
mov
fs
mov
adc
push
xchg
arpl
lods
repnz
aam
flds
or
pop
icebp
push
inc
or
push
test
cmp
into
mov
jns
aam
ret
xchg
sub
cmp
sub
pop
in
and
nop
daa
mov
lds
sahf
mul
cs
in
shll
push
negl
inc
lea
and
loop
pop
cli
xchg
mov
out
xchg
lock
dec
xor
scas
jnp
sub
lcall
imul
inc
dec
or
inc
lret
mov
test
scas
lods
pop
clc
mov
mov
dec
pop
pop
add
fdivrs
mov
addr16
mov
mov
scas
sub
xor
push
dec
loope
jl
sarb
insl
lcall
push
pop
add
mov
xor
or
pop
aaa
lcall
add
pop
inc
mov
scas
mov
fwait
out
outsl
inc
fimuls
fistps
out
test
shrb
mov
lods
and
sub
test
loopne
scas
and
adc
xor
mov
cmp
xchg
hlt
sub
and
cmp
mov
stos
jge
fisttpll
aaa
pushf
push
xchg
addl
inc
or
gs
iret
cs
mov
xor
jmp
addr16
mov
and
jg
int3
xchg
bound
cmp
jbe
mov
push
out
push
cmp
fimuls
sub
mov
mov
int3
imul
jmp
mov
pop
lcall
aas
daa
cmpsl
sub
dec
xor
mov
in
jge
push
mov
arpl
lahf
sarl
call
icebp
bswap
ret
mulb
inc
and
jae
push
push
imul
sub
adc
fbstp
int3
leave
push
out
loopne
mov
sti
data16
push
mov
fxam
push
shll
xlat
test
jle
dec
rclb
jp
or
mov
mov
les
jns
fidivrl
data16
pop
xorb
imul
mov
loop
jbe
jmp
fistpll
mull
aam
dec
mov
out
xchg
enter
cld
pop
add
pop
stos
pop
aas
mov
loope
insl
scas
push
add
xabort
xchg
mov
cmp
shrl
add
ja
in
and
pushf
fiadds
in
aaa
lcall
cmp
push
add
out
cmpsb
sbb
xlat
pop
gs
pop
xor
xchg
xor
lret
cmp
scas
mov
hlt
arpl
fmuls
out
lock
roll
jbe
and
dec
loopne
inc
inc
or
enter
and
insb
aam
in
sahf
push
insb
hlt
into
rolb
xchg
mov
rorb
lock
sub
leave
arpl
test
push
jae
in
jge
mov
jo
cltd
or
sub
and
xor
fwait
sub
cmp
pop
imul
adcl
ss
mov
mov
jmp
xor
pop
jae
push
iret
or
das
sub
xchg
repz
cmp
pop
cmp
jnp
dec
orb
push
shl
mov
add
fidivrl
sbbb
pushf
inc
or
ja
daa
mov
mov
cmp
std
xor
addr16
and
inc
cmp
int
lcall
sub
cmp
dec
jecxz
nop
cmp
das
or
mov
dec
mov
outsl
adc
jle
xor
mov
push
icebp
shrl
js
inc
stos
inc
icebp
mov
lret
std
xchg
xsha1
push
ljmp
jb
lahf
mov
les
mov
mov
loopne
push
adc
cli
lcall
sbb
xchg
pop
mov
fabs
js
bound
xchg
pop
mov
jae
jg
mov
or
xchg
cmp
cmp
add
lea
pop
lock
scas
aaa
into
fbstp
push
cmpsl
add
xor
xchg
sub
push
je
test
mov
dec
movsl
xchg
sub
outsb
shrb
clc
mov
sub
lock
dec
into
gs
montmul
cmpsb
inc
sahf
in
adc
sub
mov
jmp
sub
ds
inc
ffree
pop
mov
xchg
out
sti
sbb
sbbb
push
lds
mov
jp
fistpll
cwtl
fidivs
fdivl
lcall
mov
xchg
xchg
mov
fstps
scas
or
int
idivb
sub
jmp
dec
xchg
jnp,pn
jb
add
nop
daa
push
lock
ja
inc
test
lret
cld
xchg
montmul
cmpsb
sbb
sub
mov
imul
mov
mov
filds
sti
cltd
xor
sbb
test
pop
mov
mov
js
popa
mov
xchg
pop
mov
je
jle
mov
pop
cld
xchg
cmp
cmp
add
mov
and
push
lods
cmp
fidivs
cmpsb
call
xor
xchg
sub
push
je
sbbl
dec
dec
movsb
xchg
sub
outsb
shrb
divl
xchg
dec
into
gs
montmul
cmpsb
inc
popf
in
or
sub
mov
jmp
sub
ds
inc
ffree
pop
mov
xchg
out
sti
pop
mov
cmp
push
lds
mov
jp
fidivrs
cwtl
fidivs
fdivl
lcall
mov
test
xchg
mov
cmp
scas
or
int
idivb
sub
jmp
dec
xchg
jnp,pn
jb
add
nop
daa
push
lock
jbe
inc
test
icebp
mov
int3
arpl
xchg
montmul
cmpsb
sbb
orb
les
jo
mov
imul
mov
mov
filds
sti
cwtl
xor
sbb
test
pop
mov
mov
js
pusha
mov
xchg
pop
mov
je
jle
mov
push
cld
xchg
cmp
cmp
add
mov
and
push
lods
cmp
fnsave
cmpsb
push
in
das
enter
push
je
sbbb
dec
dec
mov
shrb
divb
xchg
dec
into
gs
montmul
cmpsb
inc
pushf
in
or
sub
mov
jmp
sub
ds
inc
ffree
pop
mov
xchg
in
sti
push
mov
cmp
imul
mov
jp
fnstsw
cwtl
fidivs
fdivl
lcall
mov
test
xchg
mov
cmp
scas
or
int
idivb
sub
lods
dec
xchg
jnp,pn
jb
add
nop
daa
push
lock
jne
inc
cmpsl
inc
icebp
mov
int3
arpl
xchg
montmul
cmpsb
sbb
orb
les
outsl
or
imul
mov
mov
filds
sti
xchg
xor
sbb
test
pop
mov
mov
js
pop
mov
xchg
pop
mov
je
jle
mov
add
cmp
add
mov
and
push
stos
cmp
fdivl
cmpsb
std
push
in
cs
dec
je
sbbl
xchg
sub
outsb
shrb
cmc
mov
daa
ret
hlt
dec
into
gs
montmul
cmpsb
inc
fwait
in
or
sub
mov
jmp
sub
ds
inc
ffree
pop
mov
xchg
in
sti
adc
sbbb
push
lds
mov
jp
fdivrl
cwtl
fisubrs
fdivl
lcall
mov
cmp
mov
cmp
scas
pop
movsb
pop
repnz
ss
idivb
sub
jmp
dec
xchg
jnp,pn
jb
lcall
sub
shrl
je
inc
cmpsb
inc
icebp
mov
fs
xchg
montmul
cmpsb
sbb
orl
sbb
mov
push
sub
mov
fiadds
cld
xchg
xor
sbb
test
pop
mov
mov
js
pop
rclb
call
jecxz
sbb
xchg
ss
cmp
add
mov
and
push
stos
cmp
push
movsl
cld
push
out
sub
dec
jne
sbbb
dec
dec
mov
shrb
hlt
mov
es
repz
iret
data16
montmul
cmpsb
inc
lcall
xchg
in
or
ljmp
add
pop
mov
nop
jecxz
cld
adc
cmpsb
cmp
addr16
mov
jp
fstpt
cwtl
fnsave
pop
mov
cmp
mov
cmp
mov
mov
aaa
into
pop
cmc
jns
daa
jp
in
stos
dec
xchg
jp,pn
jae
fwait
mov
int
xchg
sub
shrl
jae
inc
movsl
inc
icebp
mov
into
gs
xchg
montmul
cmpsb
lds
in
test
sub
mov
imul
dec
filds
xchg
pcmpgtb
xchg
xor
sbb
add
mov
mov
js
pop
rcrl
call
loop
sbb
xchg
xor
push
sbb
xchg
pop
icebp
push
test
rcr
jb
shld
out
sub
xchg
sub
jle
mov
dec
lahf
xchg
sub
insb
shrl
repnz
and
icebp
mov
inc
shlb
adc
cmpsl
inc
cwtl
out
test
gs
mov
sub
outsb
or
cmp
dec
ffreep
pop
mov
loope
std
adc
test
gs
pop
xchg
jnp
fld
push
or
fidivs
std
and
mov
ds
rcrl
mov
mov
cmp
push
hlt
jp
es
in
test
lret
cld
lcall
dec
in
aam
pop
jno
dec
mov
iret
data16
out
test
lds
imul
aaa
dec
jecxz
mov
push
mov
fmull
xchg
das
cmpsb
cmp
out
les
pop
movsb
cmp
aad
jns
pop
ret
sub
xchg
pop
scas
loopne
loopne
push
mov
add
xchg
xor
cmp
std
push
sbb
repnz
cmpsb
cmp
xlat
jo
adc
les
push
jl
mov
dec
popf
xchg
sub
push
imul
mov
inc
shrl
adc
test
xchg
out
xchg
arpl
xchg
jmp
dec
in
cmp
ret
insb
add
lea
mov
fbld
adc
test
add
pop
xor
mov
jl
xlat
rcrl
add
pop
sti
and
mov
aas
jle
sbb
shll
cmp
push
bnd
and
push
out
cmpsl
inc
cltd
xor
jne
cli
cwtl
mov
lret
sub
aad
sbb
repz
shlb
xchg
adc
inc
jecxz
adc
or
in
mov
imul
or
mov
or
push
ds
mov
sbb
mov
movsl
cmp
shl
jp
pop
ret
pop
mov
add
fidivrs
mov
call
cld
push
sbb
repz
movsb
cmp
aad
jp
mov
ret
cwtl
das
cmc
dec
ja
jp
mov
dec
fwait
xchg
sub
imul
dec
and
shrl
adc
test
bound
xchg
out
movsb
sbb
sub
push
insl
add
mov
mov
frstor
push
scas
test
sbb
add
pop
xor
out
xchg
rcrl
add
fldcw
fbstp
cli
and
scas
dec
inc
xlat
jge
sbb
shlb
cmp
push
icebp
jl
and
movsl
inc
lcall
xchg
mov
sub
insl
sbb
mov
lahf
cmp
shlb
nop
adc
inc
loop
adc
movsb
cwtl
xor
in
mov
insb
add
decl
mov
sbb
mov
movsl
cmp
shl
jnp
push
ret
pop
mov
loope
fdivl
mov
std
call
sti
push
sbb
hlt
dec
mov
jnp
mov
ret
hlt
inc
ja
js
mov
sub
push
mov
push
mov
shrl
movlps
les
enter
movsb
push
mov
out
aaa
sub
push
mov
mov
or
stos
inc
fildll
leave
pusha
xor
out
test
rcrl
add
jbe
stc
and
lods
dec
inc
fdivrs
mov
popf
pop
test
cmp
push
out
jge
and
out
mov
les
notb
xchg
sub
call
mov
popf
cmp
mov
shrl
mov
stos
mov
loopne
enter
movsl
xchg
xor
arpl
insl
add
or
cmp
mov
or
mov
test
push
loope
pop
scas
add
jl
push
les
and
lcall
and
sub
dec
push
mov
sbb
dec
mov
jl
sahf
repnz
icebp
and
lcall
adc
sub
cwtl
ljmp
in
cmp
adc
ds
lock
pop
xor
nop
jecxz
movsl
adc
push
out
xor
outsl
push
xchg
mov
fldcw
or
xchg
xor
cmp
rol
pop
add
add
ja
mull
mov
stos
dec
inc
fdivrs
sbb
std
fwait
pop
test
cmp
dec
in
jge
pop
jno
lock
ret
ja
cmc
xchg
mov
sub
sbb
dec
pushf
cmp
mov
shrb
mov
stos
mov
fidivs
enter
cmpsb
xchg
xor
popa
mov
out
insl
add
or
aad
and
pop
push
lea
test
pop
loopne
pop
lods
add
jl
push
lds
add
fidivl
mov
sub
aas
testl
cmc
dec
lahf
cmp
adc
lcall
adc
cs
xchg
jmp
cmc
mov
cmp
push
or
cmp
icebp
mov
pop
xor
mov
xsha256
cmpsb
adc
sub
push
xor
dec
loop
push
lea
fsubrs
or
xchg
pop
cld
leave
pusha
jg,pn
cmp
dec
out
adc
add
js
cmc
and
stos
inc
inc
fdivrs
sbb
test
cmp
dec
jmp
adc
jno
icebp
mov
ret
js
cmc
xchg
mov
cs
in
outsb
push
push
dec
pushf
aaa
cmc
mov
shrl
mov
stos
mov
fdivl
enter
cmpsl
xchg
cs
out
mov
insl
add
or
cmp
mov
add
es
and
jns
pop
stos
add
jl
push
pop
xchg
add
push
cmpsl
in
fnstenv
mov
sub
inc
xlat
cmc
dec
and
inc
sahf
ds
push
pop
repz
adc
push
inc
xchg
cwtl
das
fsubrs
call
testb
or
mov
pop
xor
mov
adc
fbstp
lds
pop
xor
mov
or
mov
pop
cli
lret
jle
cmp
jg
les
mov
loop
push
repz
and
add
jbe
push
mov
xchg
pusha
test
jmp
pop
repnz
sarl
mov
das
inc
loop
outsl
adc
mov
lcall
imul
adc
mov
fidivl
leave
or
test
sub
out
mov
in
outsb
add
aaa
rorl
mov
inc
push
lods
mov
fidivs
pop
test
lret
out
std
push
pop
test
add
jnp
jo
mov
sub
inc
fdiv
dec
and
inc
pushf
ds
addr16
cltd
out
pop
repz
mov
jp
jb
mov
das
lds
jo
out
dec
sbb
aam
imul
lods
cmp
lret
mov
adc
fidivs
lds
jo
xor
and
or
mov
pop
stc
lret
jge
cmp
jle
les
mov
loop
push
repnz
and
xchg
test
inc
fnstenv
push
mov
xchg
pusha
test
call
pop
repnz
cmp
repnz
das
inc
loope
outsl
adc
dec
cltd
xor
lea
aam
in
xchg
mov
fnstenv
leave
or
test
sub
pop
mov
in
outsb
add
rorb
mov
stos
inc
push
stos
mov
fnsave
pop
test
test
xor
out
cld
push
pop
sbbl
jnp
outsl
and
sub
inc
fdiv
dec
and
inc
fwait
ds
data16
cwtl
in
pop
repz
mov
jp
jno
mov
das
les
jo
in
dec
pop
mov
mov
cmp
imul
lods
cmp
xor
mov
adc
fnsave
lds
jo
xor
mov
pop
movsl
lods
inc
xlat
sub
popa
sub
scas
dec
call
pop
add
loop
push
icebp
and
and
xchg
cmpsl
inc
inc
fnstenv
mov
xchg
pusha
test
out
adc
sahf
cmp
icebp
lea
das
inc
loopne
outsl
adc
dec
cwtl
xor
lea
aam
jmp
adc
mov
repz
fdivs
leave
or
test
sub
pop
mov
jecxz
outsb
add
xor
push
insb
add
stos
mov
fdivl
pop
cmpsl
std
test
das
leave
out
sti
push
pop
sbbb
aad
and
daa
roll
dec
and
inc
lcall
xchg
in
pop
repz
jp,pt
jo
mov
das
ret
pop
fnstenv
in
dec
push
mov
mov
aaa
aam
imul
repnz
adc
fsubrl
lds
jo
das
orb
mov
push
movsb
lods
inc
daa
mov
pop
test
cmp
jl
les
sahf
push
popf
iret
and
jns
lock
and
xchg
cmpsb
inc
inc
fnstenv
push
mov
xchg
pusha
test
out
adc
popf
cmp
lock
das
inc
outsl
adc
dec
xchg
xor
lea
imul
adc
mov
repz
pop
adc
pop
mov
loop
outsb
add
xor
mov
add
add
test
enter
test
cs
dec
pop
sbbl
in
aam
and
rolb
inc
and
inc
cltd
ds
fs
xchg
jmp
repz
pushf
xor
cmp
mov
das
ret
jo
jecxz
dec
adc
ss
push
mov
mov
fcoml
cmpsl
or
cs
jo
orl
shrl
add
mov
pop
test
sub
cmp
jnp
les
pushf
push
popf
int
jecxz
push
out
and
pop
je
cwtl
movsl
inc
inc
fnstenv
pop
mov
xchg
pusha
test
in
adc
pushf
aaa
pushf
xor
jp
out
mov
xor
fsubrs
fs
xchg
xor
lea
aad
jmp
or
mov
adc
pop
mov
loope
outsb
add
xor
mov
push
insl
add
pop
stos
inc
push
cmpsl
mov
fnstenv
pusha
movsb
cli
test
jle
dec
pop
jg
push
popf
dec
mov
and
pushf
repz
out
inc
and
inc
xchg
aas
enter
xchg
jmp
popf
xor
cmp
insl
or
rcrb
loope
dec
adc
aad
add
scas
xor
repz
ficoml
test
test
ljmp
jno
sub
dec
in
dec
es
imul
mov
mov
push
hlt
lret
bound
js
ds
inc
jmp
pop
std
lcall
push
in
and
cltd
mov
les
mov
nop
popa
clc
rcll
inc
loop
push
adc
pop
hlt
lcall
adc
mov
xor
fnstenv
bound
mov
insl
out
adc
mov
shll
lret
adc
push
scas
xor
fbstp
push
test
lret
cld
push
outsb
add
dec
movsl
mov
xlat
jo
popa
mov
call
pop
jge
pop
sahf
dec
sahf
out
shrb
mov
and
mov
aas
xchg
inc
xlat
pusha
adcb
out
cmc
sbb
adc
mov
xor
fistpll
nop
loopne
insl
add
scas
xor
ss
fcoms
test
xlat
sub
pop
clc
jb
sub
in
dec
nop
daa
jge
insb
add
lahf
scas
inc
shll
mov
push
repnz
arpl
test
test
ljmp
nop
data16
sbb
pusha
push
and
lea
xor
dec
dec
popf
adc
mov
sub
mov
addr16
leave
xor
lcall
and
pop
rorb
cld
push
fistpll
mov
decl
push
bound
iret
shrl
sub
mov
sub
imul
pop
jo
add
bound
dec
jl
inc
and
adc
aam
and
pop
lea
loop
dec
sbb
xchg
out
mov
xchg
mov
xchg
pop
add
adc
lret
fdivs
lahf
inc
adc
and
repnz
test
in
aam
lret
lods
aas
mov
mov
and
loop
mov
inc
mov
stos
popf
inc
xor
cmpsl
in
push
insl
neg
movsl
imul
hlt
push
cltd
cmp
xchg
movsb
scas
lret
dec
das
cmc
out
jne
scas
or
loopne
inc
mov
sarb
ficomps
stos
mov
xchg
cs
lea
arpl
pop
cmpsl
hlt
test
pop
mov
in
insb
sbb
popf
pop
or
lcall
sbb
xor
mov
jl
nop
outsl
js
jo
and
adc
add
jmp
scas
xchg
test
push
stos
push
sub
push
add
jo
into
lock
sbb
push
das
jmp
sub
ja
mov
push
or
incl
jae
mov
push
bnd
push
xchg
pop
aaa
ljmp
es
dec
xor
je
jnp
test
cli
pushl
inc
arpl
cmpsl
cmp
fimuls
pop
movsl
test
imull
mov
sarl
mov
scas
pop
or
fbld
test
adc
fwait
cli
and
adc
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
mov
notl
jno
fdivrp
out
repz
xor
push
mov
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
sbb
ljmp
mov
jnp
sub
loopne
inc
int3
popa
xchg
repnz
hlt
push
dec
sub
