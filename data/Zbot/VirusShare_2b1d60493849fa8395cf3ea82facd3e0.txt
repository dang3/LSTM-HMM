mov
pop
jnp
fwait
pop
push
and
js
sub
mov
mov
pusha
call
add
mov
or
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
iret
cmp
lret
fldcw
ss
pop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
cmp
ljmp
pop
dec
addr16
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
cli
popa
pop
je
inc
adc
jns
je
gs
mov
push
lcall
sub
stos
jb
lds
repnz
mov
cmp
inc
shll
call
fcoml
sti
mov
iret
sbb
mov
pop
in
mov
cmc
dec
dec
push
adc
fistl
cmpsb
cmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
cmc
sbb
mov
out
pop
lret
int3
mov
mov
pop
data16
cwtl
inc
jg
negl
dec
or
push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
push
pop
test
je
add
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
movsb
sub
push
jbe
and
push
push
js
leave
sbb
push
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
lods
loope
xchg
jge
fbstp
inc
mov
dec
or
rcrb
push
mov
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
loope,pt
xor
sub
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
xorl
cmp
lods
ja
push
and
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
jecxz
inc
add
inc
int3
push
outsl
or
imul
or
movsl
lock
jle
out
clc
push
jge
lea
sbbb
test
xor
pop
xor
push
stos
popf
jmp
ret
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
and
add
pushf
and
add
add
and
add
and
add
and
add
add
movsb
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
add
sahf
and
add
add
or
add
and
add
and
add
add
mov
add
les
add
js
add
push
and
add
and
add
and
add
add
or
add
call
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
and
add
add
and
add
and
add
and
add
add
movsb
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
add
sahf
and
add
add
or
add
and
add
and
add
add
mov
add
les
add
js
add
push
and
add
and
add
and
add
add
or
add
call
and
add
add
add
add
dec
add
insb
outsb
inc
add
roll
dec
gs
jo
jb
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
add
fs
imul
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
sti
add
insb
gs
jae
dec
jne
gs
add
add
imul
jb
je
arpl
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
gs
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
jae
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
imul
jbe
jae
add
gs
imul
je
imul
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
js
outsl
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
movsb
pop
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jnp
lods
stos
stos
add
test
push
mov
mov
mov
ret
ret
stos
leave
lret
int3
int
rcl
in
rcl
shl
iret
ror
hlt
int
int
enter
enter
mov
mov
mov
mov
lods
lods
lea
fwait
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
rcl
sar
fcom
fdivr
xlat
fcom
fdivr
aad
ror
iret
dec
int3
int3
aam
rcl
sar
ret
vfmsub231sd
out
lods
scas
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
dec
rcl
aam
fcom
fcomp
call
aam
into
into
int3
dec
int
call
aad
int3
int3
int
mov
mov
mov
std
test
cmpsl
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int3
into
call
rcl
call
fcom
call
fdivr
aam
aad
into
int
dec
lret
lret
int3
into
inc
inc
sarl
mov
mov
test
test
mov
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
push
imul
pop
fs
inc
push
push
push
das
femms
push
sub
push
sbb
ss
cmp
cmp
and
and
push
push
pop
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
ret
leave
dec
ror
call
aam
call
aam
call
iret
iret
inc
enter
ret
mov
mov
ljmp
mov
pushf
cwtl
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jge
jge
jg
jo
jno
popa
arpl
dec
dec
push
xchg
cmp
inc
inc
mov
outsb
outsb
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
lret
dec
enter
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
cltd
cltd
in
addl
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
nop
nop
fcoms
addl
jmp
jo
out
push
push
ret
jge
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
pushf
sahf
call
xchg
incl
xchg
xchg
sahf
sahf
lahf
sti
mov
xchg
xchg
mov
jns
jp
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
jno
lcall
mov
cmp
mov
std
xchg
jle
jb
jno
jae
je
jge
jge
addb
xchg
addr16
cmp
and
jg
cmp
mov
test
lods
sti
lods
stos
stos
lods
stos
lods
test
test
std
cltd
fwait
cltd
xchg
xchg
xchg
incl
jge
js
jp
jl
jnp
xchg
xchg
movsb
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
lods
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
pop
pop
push
push
prefetch
inc
inc
inc
dec
insl
insl
insb
jl
xchg
leave
cltd
fwait
lcall
fwait
cltd
stc
std
mov
mov
xchg
mov
lea
fwait
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
popf
sahf
popf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
nop
xchg
xchg
in
xchg
push
jne
cmovp
or
sub
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
lea
xchg
call
lahf
lahf
jmp
lods
pushl
cmpsb
lods
mov
xchg
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
xchg
pushf
decl
mov
call
nop
nop
xchg
xchg
xchg
pushf
sahf
pushf
movsb
movsb
movsl
stos
test
movsl
movsb
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jno
jae
jp
jle
test
mov
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
movsl
mov
mov
stos
stos
mov
movsl
mov
add
mov
add
pusha
adc
mov
ljmp
popf
decl
xchg
xchg
call
xchg
xchg
call
cwtl
xchg
cltd
lcall
mov
movsb
movsb
std
movsb
mov
fwait
out
xchg
xchg
mov
xchg
aad
xchg
cltd
in
xchg
xchg
out
xchg
cmc
mov
nop
cld
xchg
adcb
lcall
jmp
inc
jnp
mov
jp
mov
jae
mov
outsb
ljmp
pcmpgtd
stos
or
ljmp
jle
mov
mov
stos
pushf
mov
mov
add
shll
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
sahf
pushf
call
xchg
xchg
decl
xchg
xchg
call
xchg
cltd
cld
cltd
cwtl
pushf
stc
mov
xchg
sahf
cld
pushf
mov
xchg
push
xchg
push
jge
xchg
dec
js
fwait
jbe,pt
lcall
sahf
push
jmp
ljmp
adc
lods
adc
lods
adc
mov
push
mov
imul
mov
cltd
scas
mov
scas
lods
scas
movsl
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
lds
pushf
call
sahf
popf
lcall
mov
mov
call
mov
decl
jle
xchg
jbe
fwait
jno
cltd
bound
call
sub
popa
call
or
xchg
add
push
lcall
push
pop
jmp
sbb
pushl
push
jo
mov
outsl
mov
and
mov
and
inc
test
les
cli
scas
lods
scas
mov
mov
movsl
movsl
add
pop
pop
adc
scas
mov
shll
lcall
mov
jmp
test
jmp
fwait
popf
call
pop
jbe
mov
decl
sub
mov
popa
decl
or
push
incl
add
mov
push
decl
add
fwait
add
mov
or
mov
outsb
pushl
sub
mov
sub
ret
sub
sub
cmp
leave
inc
mov
leave
scas
inc
mov
mov
mov
mov
movsl
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
lods
pushl
scas
scas
jmp
jo
incl
or
incl
or
add
incl
add
addb
incl
add
xchg
add
xchg
add
cltd
add
sahf
add
add
ljmp
sub
cmp
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
mov
mov
sahf
cltd
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
pushf
add
mov
add
lods
add
sbb
inc
cmp
dec
inc
call
inc
mov
rorl
call
dec
xchg
call
dec
xchg
fisttpll
fistl
call
xchg
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
cltd
cwtl
cwtl
add
inc
adc
jl
popf
mov
jmp
stos
stos
pushl
mov
pushl
mov
mov
scas
mov
movsb
mov
decl
sbb
xchg
sbb
mov
decl
add
nop
add
xchg
add
popf
add
mov
add
test
push
gs
mov
inc
call
push
cltd
call
push
fwait
fsts
fistl
ficoms
fistps
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
ja
sahf
fwait
lahf
jmp
sahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
and
xchg
and
xchg
and
xchg
and
xchg
sbb
or
nop
add
xchg
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fistpl
fisubs
jmp
mov
jmp
data16
call
imul
fildl
ret
mov
cmpsl
cmpsl
mov
lahf
mov
add
add
add
inc
inc
adc
jb
cltd
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
call
pop
call
add
lcall
jmp
add
mov
pushl
adc
roll
frstor
jmp
jo
jmp
jno
jmp
jo
ljmp
jmp
mov
out
jne
out
je
in
jae
jmp
xchg
mov
cmpsl
test
lahf
sahf
sahf
pop
sahf
mov
add
add
add
jle
jge
cmp
cmp
js
mov
popf
lcall
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
sahf
cmp
mov
xor
lcall
call
add
movsb
add
test
add
mov
data16
mov
sbb
fistl
jmp
jbe
call
jg
in
xorb
lock
xrelease
push
cmpb
mov
mov
stos
test
popf
popf
popf
daa
sahf
sahf
mov
add
add
add
add
aaa
cmp
pop
pusha
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
inc
ret
mov
mov
lahf
insb
mov
cltd
cmp
movsb
inc
jge
movsl
inc
jge
movsl
ss
fwait
sbb
add
pushf
add
mov
add
scas
add
add
mov
add
call
and
mov
in
mov
push
mov
push
xchg
ret
push
pop
push
xchg
xchg
xchg
push
mov
out
nop
sar
mov
inc
ret
stos
lods
test
xor
sahf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
inc
mov
jge
lcall
dec
jg
lods
dec
test
mov
adc
cltd
add
mov
add
lods
add
mov
arpl
mov
add
leave
add
mov
out
mov
out
xchg
cltd
push
cltd
fwait
push
lcall
negl
int
cli
popf
into
cld
lcall
fidivs
cli
mov
mov
lahf
sahf
sahf
aas
xchg
nop
add
add
add
aaa
add
sub
outsb
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
ret
vshufps
inc
mov
mov
ljmp
dec
xchg
movsl
sub
fwait
push
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
jbe
fiadds
in
mov
push
movsb
into
push
movsl
into
push
cmpsl
iret
cli
test
cld
cmpsl
iret
sti
test
stos
iret
cld
stos
sar
cmpsl
sar
negl
int3
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
daa
sub
or
inc
bound
pop
xlat
jae
jo
mov
rol
rol
mov
inc
ret
mov
dec
enter
pushl
push
test
scas
push
mov
scas
dec
test
mov
add
movsb
add
add
mov
mov
add
into
add
fadds
je
ficoms
in
pop
test
cmc
lahf
lret
sti
lods
aam
cld
mov
cli
scas
aam
cli
mov
cld
mov
std
mov
std
mov
mov
pushl
sar
cmc
movsb
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsl
outsb
outsb
mov
vpsubusb
xlat
xlat
jmp
xlat
test
int3
into
dec
leave
lret
lret
lret
lret
mov
scas
jmp
push
mov
stos
cmp
lcall
add
lods
add
mov
arpl
mov
add
roll
jo
add
filds
jae
ljmp
sti
scas
aam
cld
mov
cld
mov
mov
mov
fcos
std
rcr
mov
lret
jmp
mov
call
lret
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
movb
loop
call
call
loope
fucom
fsub
fdiv
xlat
cli
aam
fdivr
into
ror
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
faddl
jne
in
jbe
out
xor
cli
mov
inc
loopne
inc
loope
inc
inc
loopne
dec
dec
std
fdivrp
dec
fdivrp
dec
loope
cli
mov
enter
sar
mov
mov
xchg
adc
add
add
std
std
add
incl
incb
hlt
div
or
out
in
pop
in
in
out
sub
out
in
dec
call
jmp
jmp
aad
jmp
mov
xchg
cmpsl
cmp
movsl
adc
jmp
pop
pushl
add
les
push
int
outsl
call
add
add
ljmp
cli
mov
loop
std
int3
in
dec
in
std
int3
in
dec
in
std
int3
jecxz
dec
loopne
std
iret
loop
std
iret
in
shl
shl
cld
out
mov
xlat
inc
out
cmpsb
test
mov
xchg
xchg
add
add
add
incl
std
incb
idiv
clc
add
hlt
icebp
add
hlt
repz
in
repnz
pop
out
repnz
out
in
pop
fnstsw
loop
les
sti
mov
add
pop
ljmp
add
rolb
dec
add
add
fildl
jne
in
jns
in
adc
cmc
pop
test
std
shl
std
shl
call
jmp
call
in
call
call
jmp
fucomi
std
fldl2t
std
iret
loopne
hlt
aam
in
lret
lret
test
xchg
xchg
and
xchg
cwtl
add
cld
add
std
stc
add
cld
stc
add
cmc
cmc
or
aad
xor
mov
xchg
negb
add
cmpsl
add
lods
add
mov
add
lret
call
add
fldl
jbe
out
ja
out
sbb
cli
fdivrp
fldl2t
std
fucomi
fldpi
std
fldpi
std
fucomi
std
fucomp
fsubr
std
fsubrp
std
loopne
std
fucomip
cld
shl
push
ret
aad
call
iret
sar
stos
stos
lods
lods
xchg
xchg
xchg
outsl
outsl
outsl
add
add
mov
loopne
add
leave
sbb
lods
jnp
repnz
and
sahf
add
test
pop
pushl
add
ret
add
int3
add
add
filds
jne
ljmp
sti
pop
shl
std
fucomip
fsubr
std
fucomi
std
fsubr
in
std
shl
sti
shl
cld
shl
push
iret
fdivrp
test
xlat
out
mov
fcom
fdivr
mov
mov
fwait
cltd
lcall
fwait
lcall
add
add
aad
mov
mov
mov
lcall
add
mov
fs
mov
add
iret
add
add
loope
jns
ljmp
cld
xchg
cld
lret
sti
lret
cli
fdivrp
stc
rcr
cmc
mov
sar
lock
sar
out
mov
int
ljmp
std
ljmp
imul
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
lret
add
shrb
loopne
ss
mov
add
mov
addr16
mov
add
int3
pop
jno
rorl
jbe
fsts
js
loop
cmp
ljmp
call
mov
std
loop
cld
fisubrs
neg
mov
enter
into
in
leave
iret
into
shl
aad
out
loop
in
in
test
out
out
popf
jmp
lret
lret
push
stos
lods
lods
adc
cmpsl
cmpsl
cmpsb
add
rolb
ret
rol
pop
mov
lods
aam
dec
cmp
cmpsb
sbb
scas
and
jns
mov
dec
xchg
ret
stc
leave
arpl
hlt
iret
mov
out
mov
rcl
ror
aam
lret
rcl
int
aam
shll
rcl
jg
jb
gs
in
out
out
ljmp
sub
cmc
mulb
icebp
lock
fstp
or
mov
into
add
add
add
rol
mov
mov
les
push
lock
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
enter
lret
ret
enter
int
iret
int
addr16
iret
iret
push
rcl
rorb
xlat
xlat
inc
rcl
xor
fcmovnu
daa
fistpl
fstl
fsub
loope
loopne
jecxz
out
jmp
add
cli
testl
std
incb
std
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
rcll
lds
leave
lds
int
daa
int
into
and
rcrl
iret
rclb
iret
aam
or
fcom
push
rcr
fadds
loopne
add
in
add
in
jmp
add
incl
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
enter
enter
lret
add
aad
add
add
fcom
add
xlat
aad
aad
add
xlat
loopne
xlat
fildl
loop
fstp
fiadds
in
call
add
incb
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
mov
ja
stos
stos
dec
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
into
jmp
aam
cmc
rcl
sar
iret
ror
cli
int3
int
stc
int3
int3
int3
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
into
sar
xlat
call
aad
dec
iret
iret
dec
int
dec
int3
lret
mov
mov
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
je
jae
fs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
lret
int3
call
rcl
call
rcl
dec
lret
vshufps
rol
mov
mov
test
popf
popf
cwtl
xchg
cwtl
jmp
outsl
outsl
xchg
adc
add
xor
add
add
add
add
jg
jg
jp
jnp
test
jnp
push
imul
push
push
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
cwtl
cwtl
fcoml
addb
jnp
jnp
jp
js
jnp
jns
jns
jp
je
jb
push
push
push
cmp
jne
sahf
pushf
sahf
mov
scas
scas
rep
lods
scas
sti
scas
scas
scas
std
cmpsl
test
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
movsb
cmpsb
cltd
je
je
adc
adc
add
add
add
add
insl
outsl
insl
pop
nop
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
lea
cwtl
cltd
lcall
lea
call
popf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsl
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
sahf
movsb
decl
mov
xchg
cwtl
xchg
std
lahf
popf
mov
negl
jle
stos
push
push
push
jo
push
pop
outsl
imul
jle
subb
mov
std
xchg
mov
ljmp
jg
pushl
pop
mov
mov
jge
mov
lods
lods
insl
stos
stos
test
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
xchg
call
cltd
cltd
lcall
cli
xchg
xchg
cltd
jmp
xchg
lea
xchg
orl
cld
xchg
pop
jg
popf
dec
jp
mov
aaa
ja
scas
sub
mov
insl
pushl
sbb
mov
lods
mov
mov
mov
mov
add
add
add
add
pusha
or
mov
lcall
lahf
lahf
jmp
mov
xchg
decl
orl
xchg
jae
cld
cwtl
popa
cmp
dec
js
xchg
cmp
xchg
daa
call
lcall
push
popa
ljmp
sbb
mov
outsb
pushl
pop
jb
mov
pop
xchg
mov
lods
lods
xchg
sahf
sahf
lahf
adc
add
add
popa
pop
pusha
or
lods
mov
test
mov
cmpsl
ljmp
test
lcall
pop
jp
mov
push
mov
decl
adc
xchg
pop
decl
add
call
add
cmpsl
or
and
mov
sub
jle
das
cmp
lret
pop
xchg
inc
test
divl
test
add
add
add
popa
pop
pusha
or
movsb
stos
in
mov
cmpsb
ljmp
mov
pushl
xchg
mov
decl
orps
xchg
push
incl
add
mov
push
call
add
cmpsl
add
mov
outsb
inc
cmp
dec
inc
call
inc
mov
inc
xchg
fiaddl
call
arpl
stc
mov
mov
movsb
mov
std
add
add
add
pop
or
mov
ljmp
mov
pushl
mov
test
decl
sbb
decl
or
push
call
pop
ljmp
add
mov
dec
xchg
call
pop
fwait
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jge
jl
pushf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
xchg
add
popf
add
cmpsl
add
scas
add
push
imul
jmp
insl
stos
jmp
jo
call
jo
out
jae
jmp
jns
call
cmpsl
mov
shrl
addl
pop
insl
insl
imul
xchg
lcall
mov
mov
sar
mov
jmp
cmp
lahf
cmp
sahf
sub
lcall
add
movsb
add
lods
add
mov
inc
or
call
inc
xchg
jmp
jns
jmp
mov
in
test
push
xchg
push
mov
mov
test
push
lcall
add
sub
push
push
dec
pop
addr16
loopne
mov
mov
mov
ret
mov
mov
test
sub
cltd
or
mov
add
mov
fs
mov
adc
mov
push
xchg
push
cltd
push
cwtl
push
cltd
leave
stc
lcall
jecxz
inc
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
pushl
push
xchg
lods
dec
cmp
pop
insb
lcall
add
mov
arpl
mov
add
fldenv
cmp
jp
push
mov
sar
cli
test
sar
cld
lods
sar
std
lods
sar
stc
cmpsl
int3
call
rol
stos
test
sahf
or
add
add
dec
push
push
aaa
jb
je
test
int3
into
out
iret
int
lret
sti
enter
leave
leave
mov
popa
mov
lods
inc
jle
mov
add
mov
arpl
ret
dec
add
fiaddl
jbe
call
xchg
sti
mov
std
mov
fcos
cld
mov
fdivr
mov
sar
ljmp
repz
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loop
loopne
loopne
fcmovnu
fadd
fcmovnu
aad
fsubr
mov
addr16
test
push
pusha
pushl
add
lret
call
add
or
dec
mov
std
ret
loop
inc
loopne
inc
dec
loopne
std
leave
loopne
std
lret
std
fdivr
out
mov
leave
divb
pushf
sahf
sbb
add
add
std
add
std
std
add
jmp
or
out
in
sbb
in
jmp
jmp
in
xchg
mov
mov
mov
add
mov
arpl
rolb
dec
add
fildl
jne
jmp
outsb
mov
std
ret
sti
shl
std
shl
std
shl
std
shl
call
out
call
out
cld
shl
push
fdivr
fcmove
sar
mov
mov
add
std
incl
std
incl
cld
cld
incb
aad
push
mov
pop
xchg
lahf
or
pop
pushl
add
roll
jo
filds
ja
out
and
cld
shl
fldl2t
std
fsubr
cld
fld1
std
std
fld1
cld
shl
push
enter
rcl
sti
mov
popf
sahf
das
add
add
into
int
or
arpl
ljmp
gs
add
aam
jno
loopne
ja
in
xor
sti
lret
loope
cli
lret
loopne
test
aad
repz
out
ret
sar
in
out
vpsadbw
shl
in
fsubrp
mov
stos
das
std
incl
aam
push
mov
jb
push
gs
mov
insl
inc
sbb
int
jl
sub
fwait
clc
in
mov
out
in
lret
mov
lret
ffree
lret
sarb
in
ficompl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
mov
ljmp
fidivrl
jg
rol
stos
mov
mov
ret
nop
rol
enter
lret
insl
aam
int
ror
rorl
cmp
loopne
das
in
fisubs
in
repnz
jmp
or
incl
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
pop
mov
rcl
or
loopne
or
into
into
add
std
std
add
std
incl
cltd
cltd
fwait
add
mov
int3
int
stos
lods
lods
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
mov
xchg
leave
enter
enter
sarl
mov
insb
lods
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aam
rcl
sar
into
iret
iret
std
mov
stc
mov
test
roll
sbb
add
add
add
add
add
add
add
add
jno
jb
addr16
dec
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
into
int
aad
aam
into
int
inc
enter
mov
lcall
mov
push
add
add
add
add
jne
jae
test
adc
popa
arpl
addr16
outsl
insl
outsb
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jno
and
add
pop
add
add
jb
jae
fwait
xchg
lcall
xchg
clc
mov
test
addl
push
push
push
inc
mov
pushf
into
movsb
mov
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
stos
movsb
test
test
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
cltd
cwtl
cltd
in
addl
imul
jge
mov
testl
xchg
mov
jb
mov
lods
lods
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
fwait
fwait
lcall
lcall
xchg
mov
loope
jbe
out
xchg
bound
std
pushf
inc
ja
cmpsb
cmp
scas
sub
jo
mov
insl
pushl
popf
scas
lock
mov
imul
into
add
test
pop
lods
movsl
stos
test
sahf
pushf
popf
jmp
movsb
cmpsb
call
push
jbe
nop
inc
je
lea
imul
xchg
adc
cwtl
or
mov
sbb
jne
mov
sub
lds
mov
mov
subl
jne
push
mov
movsb
cmpsl
cld
cmpsl
test
ljmp
mov
jmp
sub
adc
xchg
push
incl
add
add
mov
adc
ret
dec
ds
roll
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
movsl
movsl
mov
add
imul
cmpsb
lahf
mov
pushl
mov
movsb
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
mov
mov
cmpsl
cmpsl
cmpsb
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
xor
cltd
and
call
add
add
mov
xor
call
jl
push
jl
out
jle
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
rol
mov
fs
cmpsb
inc
jle
lahf
and
pop
ljmp
add
les
insl
fisttpl
in
lea
push
xchg
xchg
stc
xchg
enter
mov
movsb
sub
aas
aas
inc
adc
push
xchg
xchg
cld
rol
inc
ret
ljmp
dec
cmp
sbb
movsl
add
mov
fs
add
vmread
in
outsb
scas
push
cmpsl
int
stc
stos
iret
sti
scas
sar
std
scas
sar
std
lods
iret
jmp
lret
mov
movsl
ds
std
incb
xor
xor
scas
mov
mov
aam
mov
aam
out
lret
lret
mov
mov
jmp
inc
add
add
out
xchg
stc
pop
mov
cld
rcr
cld
rcr
cld
rcr
lock
ret
test
addl
stos
stos
stos
add
in
jmp
jmp
call
jecxz
movsl
outsl
ljmp
add
int3
add
faddl
sti
mov
cld
iret
out
std
shl
std
shl
std
shl
std
aad
push
enter
enter
scas
lods
popa
addb
add
std
add
incl
int
shrl
lahf
sbb
lods
add
mov
add
loope
jp
repz
movsl
std
loopne
cld
xlat
out
aad
cld
aad
sti
aam
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
imul
or
fstpl
jg
in
imul
out
mov
iret
bnd
ret
shl
out
aam
call
scas
cltd
cltd
cltd
add
mov
pushf
lods
xchg
inc
and
shll
jbe
mov
xlat
mov
lret
adc
int3
outsl
fmul
rcrb
rcl
dec
jecxz
loopne
call
out
out
sbb
sarl
cmp
mov
scas
push
mov
mov
les
lds
rol
sbb
fstp
bswap
int
or
aad
push
std
add
std
add
add
add
sarb
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
push
and
cmp
xchg
push
mov
test
fsubrl
jge
push
mov
out
mov
sti
repnz
mov
in
pop
or
in
add
xchg
insb
rcrl
rol
mov
test
fnstcw
cltd
xor
xchg
sub
popf
stc
sbb
mov
ficompl
stc
push
mov
std
andb
inc
adc
dec
cmc
dec
push
sbb
pop
decb
xlat
leave
lea
sub
cs
fs
nop
lret
int
pop
xchg
in
push
int3
repnz
cld
inc
mov
pop
push
fistpl
lods
xor
or
xchg
sbb
insb
fcoml
hlt
fdivrl
int3
mov
pop
dec
pushf
out
pop
cmp
sbb
sti
bound
repz
loop
sbb
repnz
aam
add
push
or
dec
divb
dec
js
xor
test
xor
out
push
cmp
fucomp
mov
or
sbb
repnz
aad
xor
scas
inc
mov
es
pushf
dec
ds
aaa
stos
cmp
pushf
sbb
js
jmp
aad
sbb
dec
or
ret
rorb
sbb
dec
iret
loope
mov
fldcw
sub
ljmp
mov
test
add
sub
lahf
gs
lahf
inc
pop
ja
pop
cmc
sar
aaa
xchg
xor
out
pop
test
ljmp
mov
cs
mov
pusha
and
aaa
cmp
sbb
call
and
js
sub
nop
pop
jl
aaa
lcall
xchg
and
ja
mov
imul
fwait
and
jl
add
xor
mov
shll
ret
stos
add
outsb
repnz
cmp
cmp
mov
ficomps
notl
mov
cmp
sub
rorl
dec
leave
xchg
ficompl
and
push
push
add
cmp
add
pop
adc
bound
xor
mov
pop
push
clc
mov
scas
jmp
ljmp
js
fsubl
pop
or
dec
sbb
mov
stc
sub
movsl
std
sbb
lea
pop
std
insb
movsl
and
push
dec
adcl
loop
sub
loope
fbld
mov
mov
push
and
sub
xchg
sahf
cmp
arpl
cmp
push
rorl
popf
mov
aaa
test
sti
stos
ljmp
mov
and
bound
xor
jge
pop
fildl
cmpsl
inc
or
lret
adc
xor
or
push
stos
push
adc
enter
xor
es
das
test
ffree
push
xor
cmp
xchg
sub
bound
mov
pop
push
mov
pop
lods
je
fiaddl
jb
push
adc
aas
sti
addl
mov
in
jne
jo
out
fsubl
mov
mov
xchg
ret
push
add
push
les
movsb
mov
in
decl
or
inc
int
pop
testb
xor
jmp
shlb
sbb
popf
mov
sarl
add
cmp
dec
mov
out
clc
ret
in
rcrl
and
rorb
sbb
lds
and
cmp
mov
sbb
xchg
sbbl
fistps
mov
cmp
push
mov
outsl
jb
jo
cmp
stos
xor
gs
push
ret
lods
outsb
shlb
add
mov
or
dec
xor
fstl
mov
faddl
sub
push
lock
idivb
in
xchg
cmp
repz
xchg
out
dec
and
add
pop
out
sbbb
pop
mov
jp
fistpl
je
inc
sbb
lods
int
negb
inc
outsb
mov
test
dec
decl
stc
jge
cwtl
std
lcall
fnstenv
mov
repz
insl
daa
jnp
clc
xchg
fwait
cmpl
push
mov
aam
adc
lock
cld
pushf
test
int3
inc
push
adc
cmp
or
pop
jecxz
add
aad
ret
xor
xor
sbb
adc
div
sti
push
imul
dec
and
cmpsl
inc
loop
inc
cmp
test
cmc
mov
mov
adc
mov
fs
cmp
filds
popf
fadd
insb
fcoml
mov
rcrb
iret
mov
fnsave
lret
inc
jl
insl
stos
push
xor
fnsave
cmp
ljmp
fnsave
xorl
add
fucomp
nop
or
add
pop
cld
dec
sbb
pushf
xchg
and
xor
sbb
aaa
iret
subb
inc
pop
popa
jae
insb
fwait
or
pcmpgtb
xor
pop
dec
dec
xchg
mov
leave
or
rcll
outsl
mov
or
pop
dec
jecxz
and
out
jns
jmp
sbb
jbe
data16
cltd
dec
mov
mov
mov
aas
adc
test
test
data16
xchg
mov
dec
loop
dec
in
add
outsb
ss
add
push
cmc
mov
stos
adc
cmp
cld
das
sub
dec
inc
fstpt
in
sbbb
aam
xor
pop
scas
dec
jb
pop
fnsave
xlat
mov
jae
cmp
iret
cltd
dec
adc
pop
ret
cmc
inc
add
cmpsb
loope
fmull
jns
xor
fwait
bound
fiaddl
xchg
cmp
jns
and
popa
sub
sbb
cwtl
divb
lds
inc
mov
fsub
pop
into
mov
out
inc
leave
leave
lds
cld
lock
fsubp
scas
pop
sbb
in
xor
push
test
jae
ss
mov
pop
pop
and
cwtl
shr
cmpsb
test
idivl
enter
push
dec
fisubrs
sub
imul
es
scas
cmp
cltd
jnp
mov
imul
int
dec
xchg
ffreep
out
adc
dec
mov
dec
push
xlat
iret
ljmp
enter
insl
jnp
mov
push
test
mov
xor
addr16
cmp
dec
dec
repnz
loop
dec
es
xlat
pop
mov
cwtl
push
divb
std
insl
adc
sbb
push
pop
enter
test
int3
sub
pop
cmp
adc
paddd
sarb
push
fwait
shlb
cmpsl
mov
pop
push
sbb
mov
add
clc
jmp
int
rcr
cs
rorb
ret
rolb
push
sarb
out
test
xor
in
cmp
cmp
push
mov
jb
ds
lea
pop
pop
sub
cwtl
rorb
dec
std
in
adc
fxch
adc
dec
sub
pop
push
sbb
int3
es
mov
mov
fcmove
mov
cld
in
pop
or
cwtl
fisubrs
imul
mov
js
into
scas
pop
inc
mov
leave
rcrb
fsubp
xchg
mov
das
flds
or
sbb
movsb
mov
sbb
shll
jne
and
push
push
pop
xchg
sub
ja
dec
test
lret
cld
lods
iret
data16
out
test
jno
movsb
mov
ret
sub
hlt
movsb
sub
aad
dec
loope
testb
push
gs
jns
xchg
ja
mov
fstps
cmpsl
ds
mov
pop
cmpb
jb
mov
stc
nop
hlt
add
mov
mov
loopne
inc
fchs
add
leave
xor
popa
stc
das
push
push
outsb
mov
inc
inc
pop
scas
je
cmpsl
ds
xchg
xor
pop
out
push
ljmp
pushf
cli
daa
stc
aam
cmp
mov
sub
pusha
mov
jle
out
fistps
push
nop
xor
outsl
loope
mulb
inc
aas
pop
scas
jo
cmpsl
ds
xchg
xor
pop
call
or
scas
cmp
sti
cmp
pop
sbbl
loopne
lahf
ss
mov
xor
fsubrs
gs
pop
dec
pop
idivb
sbbl
xchg
and
and
inc
mov
je
lcall
mov
fstpl
mov
inc
adc
jb
aaa
into
pusha
xchg
xor
les
shl
xchg
push
hlt
mov
cmp
cltd
push
jmp
xor
ds
dec
out
insl
mov
mov
in
inc
les
enter
pop
stos
popa
or
into
imul
clc
sub
sbb
mov
inc
dec
cmp
jne
test
enter
add
xor
sub
dec
push
xchg
sub
test
dec
fidivrl
shlb
adc
test
mov
ret
repz
and
loope
cmp
pop
call
enter
loop
test
sbb
shll
push
pop
icebp
xchg
js
fidivs
cld
xchg
sub
push
mov
mov
mov
cmp
stc
cmc
call
dec
dec
sbb
jns
sbbl
lcall
and
or
js
sub
gs
xchg
dec
ffreep
fdivl
jecxz
pop
aad
add
out
adc
jl
mov
mov
or
sbb
sahf
sub
mov
mov
jl
xchg
sbb
jle
adc
imul
push
mov
sti
xor
bound
sbb
push
xor
push
xor
push
out
push
push
jo
inc
dec
lods
inc
js
mov
pop
and
mov
jnp
pop
insl
cmp
js
mov
xchg
add
call
xchg
ds
dec
and
inc
adc
mov
testl
pop
sahf
pop
pop
pop
cmc
mov
insl
push
inc
fsubrl
rcrl
adc
xchg
ss
bound
add
ss
xor
rorb
mov
pop
sub
outsb
inc
incb
jmp
and
jno
and
xchg
inc
cmp
jnp
fnstenv
and
fstpt
cmp
pop
pop
or
jae
jae
pop
xor
arpl
mov
xor
xchg
push
xchg
add
adc
pop
and
mov
inc
or
daa
and
aas
cmp
adc
push
leave
pusha
push
insl
cmpsl
ds
dec
mov
das
repnz
mov
jmp
push
mov
mov
dec
loop
cmp
xchg
xchg
lret
mov
pop
push
ficoms
iret
dec
jbe
je
adc
loope
push
out
add
push
jbe
js
push
sub
iret
pop
daa
push
jmp
ss
inc
xlat
xchg
dec
cwtl
das
cmp
pop
iret
push
insb
int
cltd
jno
loope
add
mov
js
and
push
aaa
push
in
push
cmp
stos
dec
aam
nop
int3
mov
push
fistps
push
nop
repnz
cmpsl
dec
add
fidivs
cwtl
push
lods
or
clc
sub
fwait
cmp
mov
mov
or
inc
cmp
shlb
inc
xor
xorb
addr16
stos
inc
cli
pop
leave
pusha
jnp
xor
push
bound
sub
xor
sub
cld
push
call
pop
je
sbb
icebp
lea
jae
sub
ljmp
mov
xlat
and
inc
add
push
push
ja
dec
dec
daa
mov
pop
and
pop
jno
fnsave
pop
repnz
cmc
mov
inc
in
je
imul
sub
out
mov
jno
dec
loope
mov
repnz
mov
dec
push
mov
int3
pop
pop
sub
inc
jg
mov
mov
fnsave
fwait
xor
mov
adc
cmp
cmp
ret
pop
insl
add
sbbl
bound
scas
inc
arpl
push
popf
xor
sub
sbb
mov
lods
push
arpl
dec
xchg
sub
shll
sub
in
mov
repnz
jo
enter
or
add
fwait
sbb
dec
mov
fwait
xor
dec
ss
cltd
xor
popa
stos
inc
push
fwait
lahf
les
gs
sub
xchg
xchg
pusha
testl
rolb
cmp
or
sarl
loop
mov
inc
into
gs
xor
out
gs
inc
pop
jecxz
jns
ret
pop
adc
sbb
sahf
sub
je
pop
in
cmp
test
mov
mov
adc
jns
shrb
fbstp
mov
xor
sbb
int3
arpl
loope
cmp
inc
and
add
rcrl
xchg
jmp
mov
insl
pop
push
movsl
lea
clc
push
and
jne
mov
xchg
es
fiadds
movsl
cmp
fldenv
inc
insb
add
sub
insl
gs
jno,pt
xchg
sub
sbb
add
xor
and
in
test
mov
mov
les
insb
cmp
mov
dec
aaa
testl
and
rcrl
pop
mov
push
lds
test
lret
sbb
cmpb
call
pop
int3
adcb
stc
or
rol
jb
cld
repz
in
adc
jbe
mov
rorb
xor
adc
cmpsb
cmp
and
push
call
clc
dec
xchg
sub
xchg
push
jo
jmp
je
stc
gs
mov
cmp
cmp
dec
sbb
xchg
mov
cmpsl
ds
mov
mov
add
push
mov
inc
jbe
sub
inc
mov
int
xor
xor
cli
cld
sbb
adc
scas
call
push
mov
bound
sub
xchg
push
enter
xchg
inc
push
xchg
sub
jnp
aad
popf
lahf
ss
lea
jo
and
aad
dec
mov
mov
cmp
push
inc
shrb
repnz
pop
and
mov
sbb
push
pop
mov
push
mov
lods
sbbl
add
mov
inc
test
mov
xchg
daa
dec
out
jne
push
call
dec
pop
rclb
mov
movd
mov
and
mov
xchg
sarl
sbb
insl
add
cmp
test
int
sub
out
aas
rorl
jne
in
lods
inc
test
cmpsl
ds
cwtl
out
or
shrl
sub
bound
mov
sbb
xchg
inc
jo
lods
movsb
cmp
jge
mov
add
and
negb
and
push
push
push
call
loop
mov
rolb
jmp
jp
or
inc
rcrl
adc
aaa
push
jp
es
stc
add
add
dec
and
rcll
xor
and
cmp
jns
push
aaa
adc
insl
pop
ret
pop
dec
add
fxch
arpl
jg
push
jno
or
les
sub
cs
push
pop
cltd
sub
mov
stc
arpl
test
mov
jp
leave
cmp
jae
outsb
and
gs
add
sub
icebp
inc
push
imul
fsubrs
out
test
in
jmp
leave
mov
lock
ret
and
scas
hlt
pop
xchg
sub
mov
imul
insl
popa
and
addr16
adcb
lahf
mov
addr16
inc
jmp
ret
xor
push
pop
jecxz
push
mov
into
movsl
and
les
add
push
xchg
mov
xchg
xor
cs
scas
inc
jecxz
test
hlt
mov
sub
or
imul
mov
xor
cmp
fabs
dec
push
icebp
arpl
out
cmp
cld
mov
xor
jle
push
imul
xchg
xor
jmp
sub
dec
push
jo
sub
dec
or
xchg
enter
je
in
fimull
rclb
and
mov
cmp
xchg
xlat
sbbl
dec
pop
out
pop
mov
cld
pop
fidivs
xchg
push
lahf
inc
push
adc
mulb
aaa
mov
and
lahf
cmp
lret
daa
mov
push
std
pop
lret
sbb
cmpsl
pop
scas
fsubs
loopne
stc
xor
out
push
ljmp
jno
iret
pop
movsb
cmp
into
ret
sub
pop
xor
cmp
addr16
sub
jno
pop
sub
xor
dec
ret
dec
push
fisttpll
inc
xor
pop
and
jb
dec
or
push
mov
pushf
mov
popw
pop
lods
bound
in
xchg
mov
out
insb
mov
cmpl
aad
call
jle
outsl
push
das
mov
lea
repnz
and
in
test
add
dec
out
jl
mov
sbb
add
outsl
lock
ret
inc
inc
fdivs
jecxz
push
xchg
pop
test
add
sbb
fwait
xor
aam
mov
repnz
loope
outsb
adc
cmc
mov
xchg
cs
mov
stos
mov
fidivl
enter
ret
mov
mov
rol
add
mov
shl
mov
repz
nop
push
dec
cmp
adcb
sub
adc
sbb
lea
add
pop
pop
andl
stos
mov
xchg
out
lcall
into
mov
push
fistpll
and
mov
fs
jo
cmp
movsl
icebp
je
pusha
ss
lods
xchg
add
fwait
test
out
mov
addb
or
js
mov
sbb
inc
fdivr
cmp
mov
sbb
cmp
mov
fists
adc
mov
or
push
mov
sub
xlat
mov
or
iret
pop
adc
mov
jge
test
rorb
mov
out
sub
push
pop
jne
cmp
movsl
pop
xchg
sub
mov
test
xchg
add
xchg
sbb
adc
imul
cmp
adc
hlt
inc
lods
adc
xchg
repz
gs
inc
stc
ja
or
leave
push
cmpsl
ds
add
fnstsw
fbstp
add
xor
mov
unpcklps
push
jmp
clc
push
out
sub
jne
and
xchg
test
call
xchg
addr16
mov
pop
add
xchg
lock
pop
push
mov
add
sub
push
xchg
ja
xor
scas
cmc
test
test
mov
out
ss
pop
adc
js
pop
cmp
shlb
std
or
mov
jnp
ja
dec
xor
or
push
je
test
scas
or
pop
pop
cmp
mov
mov
adc
ret
xor
xchg
xor
cmp
mov
mov
idivl
mov
sub
or
orb
aas
jmp
aaa
pushf
dec
clc
aam
arpl
lods
pop
pop
insb
xchg
dec
pop
repnz
test
je
push
stos
inc
outsb
lret
fimuls
or
pop
sbb
mov
dec
ret
or
insb
push
popa
mov
loopne
mov
jb
add
mov
stc
mov
jmp
sbb
or
insb
ret
pop
lahf
push
xchg
sub
cmpsb
scas
inc
or
int
and
scas
mov
test
xor
fcompl
push
jmp
ljmp
jg
inc
fnstenv
xchg
dec
lock
arpl
adc
insb
dec
out
sbb
insb
testb
ret
adc
mov
xor
inc
xlat
in
or
xchg
sub
fwait
pop
mov
adc
jle
cmpsb
scas
or
roll
pop
nop
daa
nop
and
push
mov
inc
jecxz
push
data16
cltd
xor
cmp
mov
sti
cmp
ljmp
imul
stos
mov
loopne
xchg
adc
pop
stos
mov
mov
gs
ss
push
dec
pushf
jg
outsl
lahf
mov
add
sub
lcall
cmp
iret
cmp
test
fidivl
test
repnz
cmc
jecxz
mov
int3
jb
fisubs
add
in
pop
cmc
mov
mov
in
mov
adc
hlt
scas
mov
and
in
xchg
subb
and
xchg
testl
insb
inc
jmp
xor
sbb
mov
xchg
sub
outsl
popf
xor
adc
out
push
les
ss
sti
cmpsb
cmp
repnz
pusha
mov
xchg
jle
movsl
push
adc
xchg
inc
cmc
mov
bound
dec
hlt
mov
mov
jecxz
aas
mov
aam
push
mov
sbb
xor
mov
dec
jge
inc
inc
sub
jbe
pop
out
push
and
nop
jg
ficoms
xor
pop
insl
loop
or
mov
xchg
ss
dec
inc
cmp
pop
imul
sbb
jo
loop
ret
ret
push
stc
jmp
std
jbe
xlat
daa
sahf
es
dec
fsubrl
pop
pushf
fpatan
mov
mov
xchg
cmc
add
cmp
movl
or
adc
and
inc
rcrl
mov
arpl
mov
mov
and
lock
test
fnstenv
out
mov
stc
mov
ljmp
cmpsb
js
add
push
test
or
mov
es
stos
inc
or
rcrl
pop
testb
pop
sbbb
mov
inc
out
dec
jecxz
and
xchg
mov
dec
out
cmp
aam
mov
outsb
add
mov
sbb
orb
int3
arpl
push
mov
sub
js
test
xchg
sub
sbb
lea
cmp
sahf
dec
aaa
in
adcl
imul
loop
repz
mov
or
sarb
jge
ret
sahf
sbbl
mov
fcmovbe
imul
inc
adc
jnp
pop
dec
jecxz
mov
adc
jo
fidivl
xchg
adc
arpl
cmpsl
je
fidivs
xchg
sbbb
add
enter
in
adc
mov
loope
test
pop
mul
leave
fwait
xor
fcmovu
jno
mov
inc
ficomps
loope
dec
dec
loope
aas
pop
add
fwait
insb
and
cs
push
popf
inc
ror
pusha
lds
rclb
lds
mov
shrl
mov
cmp
adc
lods
hlt
mov
push
jnp
mov
mov
lods
mov
negb
sahf
outsb
out
push
es
stos
xchg
mov
jecxz
dec
fsubrs
ficomps
sbb
lret
push
int
and
mov
les
adc
repz
shll
fildl
les
enter
inc
fpatan
outsl
push
and
inc
fdivl
adc
les
pop
inc
addl
push
js
fidivl
cltd
data16
lret
jbe
xchg
add
shr
adc
jl
aaa
pop
imulb
cmp
imul
test
mov
fbld
iret
ljmp
jne
mov
cli
mov
xchg
mov
fidivs
xchg
int
dec
jno
or
call
sbb
icebp
mov
outsl
repz
mov
lahf
clc
enter
sarl
loopne
mov
icebp
xor
push
cli
xor
stos
inc
out
out
aam
sbb
lock
repnz
dec
and
fadds
mov
mov
int3
xchg
ficompl
jg
xchg
push
push
xorl
outsb
arpl
int
sbb
and
insl
add
int3
dec
stos
lcall
add
pop
clc
insb
cmpsb
sub
imul
pop
repz
and
pop
or
rolb
icebp
jno
adc
lret
mov
aam
leave
pusha
dec
cmc
mov
pop
cmpsb
and
cmc
in
push
xor
cltd
hlt
mov
adc
push
test
std
mov
jmp
iret
xchg
xor
push
or
enter
jle
push
mov
add
popf
sbb
inc
fsubs
mov
fdivl
xchg
mov
sub
mov
cmpsl
mov
clc
cwtl
xor
mov
shll
and
dec
outsl
cmp
mov
sbb
pop
jecxz
mov
insl
hlt
jecxz
inc
lock
cmp
fst
xlat
jecxz
mov
ljmp
aam
fcompl
xchg
cltd
out
xchg
mov
mov
and
xor
xorb
mov
enter
adc
out
add
dec
gs
imul
mov
push
lret
xchg
shlb
xor
aas
std
in
test
popa
ja
pop
lahf
adc
sub
mov
push
shrb
je
in
mov
popf
lock
insl
or
jg
sbb
rcrl
mov
mov
sbb
mov
sub
and
sub
sbb
inc
cmp
fdivl
xor
xchg
xor
in
shlb
lret
bswap
fs
leave
in
pop
int3
adc
dec
test
ret
jns
out
ret
xor
pushf
xor
push
dec
outsl
or
pop
repz
xchg
cmpsb
pop
and
nop
lcall
rcrb
jb
xchg
mov
add
xchg
jge
or
and
loope
loop
cmp
xor
std
pop
mov
push
outsl
add
add
cmp
scas
sbb
loopne
rcrl
inc
clc
mov
jg
out
test
dec
sbb
dec
ja
aas
push
cmp
cmc
ja
fnstenv
cwtl
adc
lahf
pushf
add
mov
lea
icebp
in
pushf
adc
xchg
inc
xor
xlat
mov
add
aaa
xchg
cld
push
fs
mov
cld
push
mov
test
iret
xor
jns
lods
xchg
xor
jge
in
mov
call
cmp
inc
lcall
aaa
lahf
xchg
adc
pop
sub
scas
cli
sub
mov
lret
cmc
fstpt
mov
filds
mov
push
in
in
xchg
andb
xor
xor
daa
into
sub
lea
cmp
inc
mov
sbb
mov
repnz
lret
cmc
in
loope
push
xchg
nop
fucomip
dec
pop
popa
clc
cli
repnz
insl
push
xchg
loope
sarl
xchg
dec
test
pop
fistl
mov
dec
into
gs
cmp
jb
dec
loopne
xchg
outsl
adc
mov
les
xlat
call
cmp
dec
xor
es
rclb
icebp
jg
push
pop
loopne
mov
xor
test
icebp
lods
inc
and
sbbl
scas
xchg
icebp
mov
loopne
loopne
mov
xchg
scas
add
or
xchg
cmp
fsubr
mov
and
or
and
leave
jmp
xchg
icebp
and
add
test
outsl
out
aam
dec
cli
pop
push
or
xorb
jo
mov
sub
shlb
cld
push
outsb
adcl
mov
add
jmp
fistps
cmp
xchg
in
and
enter
scas
inc
push
stc
test
xchg
pop
mov
mov
jb
cmpsb
cmc
adc
mov
repnz
xchg
leave
in
rcll
in
in
push
cmc
mov
xchg
loope
or
loop
ljmp
cmpb
ror
mov
in
pop
gs
xchg
and
mov
mov
mov
push
movnti
jb
aad
mov
mov
mov
scas
mov
add
and
clc
daa
push
adc
vshufps
and
adc
push
sub
fcmovne
in
jo
fsubrl
mov
arpl
add
rcrl
add
lods
cmpsl
fildll
pop
sbb
cmpsb
mov
push
xor
xor
xchg
idivb
je
xor
sub
pop
dec
mov
mov
inc
daa
insb
pop
or
into
gs
inc
mov
gs
mov
das
cwtl
loop
sahf
sbbl
ljmp
xor
movl
cld
mov
pop
ds
fucomp
dec
xorl
jno
fwait
scas
clc
sub
pop
cmpsl
or
dec
sbb
in
test
stc
pop
pop
test
out
lcall
cli
sbb
shrb
addr16
std
ret
rorb
popa
xchg
push
and
inc
xchg
sti
aam
mov
rorl
push
mov
mov
dec
sbb
popf
mov
insb
out
push
je
push
lds
cld
or
sub
nop
jbe
add
es
xor
cmp
cwtl
or
pusha
shr
push
in
pop
aam
or
xlat
xchg
sub
mov
pop
mov
dec
out
adc
cmp
cmp
fisttps
mov
ret
push
ja
inc
fldt
dec
cmp
xchg
or
adc
dec
cltd
push
ljmp
mov
xchg
fs
daa
xchg
sbb
sahf
inc
mov
sbb
inc
sbb
xchg
sub
bound
xor
repnz
shrl
imulb
mov
rolb
adc
mov
imul
cmp
mov
call
mov
in
inc
mov
fimull
ret
sti
hlt
push
jmp
fcmovne
inc
mov
mov
imul
int3
jp
xchg
cltd
fisttpll
inc
out
mov
stos
shlb
fldlg2
xchg
das
out
fwait
sbb
pop
mov
sub
jne
or
aas
jne
mov
rorb
subl
loop
mov
dec
in
xchg
js
out
add
dec
jecxz
int
pop
push
cmpb
cmpsl
push
xchg
fbstp
jmp
test
ja,pn
clc
iret
sbb
and
jge
cmp
mov
lock
xor
and
in
jae
xor
push
cs
fidivs
lcall
rol
out
jg
aaa
into
not
add
inc
xchg
sub
adc
movsl
xor
test
icebp
mov
cmpsl
cmp
and
ljmp
cmc
mov
mov
callw
movsl
xor
mov
out
fstps
movsb
stos
loopne
pop
std
mov
loope
pop
jne
inc
push
cs
je
stc
mov
fsts
lods
dec
nop
mov
shrb
pop
adc
xchg
jo
adc
lock
adc
sbb
repz
add
icebp
push
out
scas
dec
pop
movsl
repnz
cmpsl
lcall
mov
mov
xchg
loop
push
bound
cmp
inc
orl
stos
fcompl
mov
mov
mov
je
mov
test
mov
ds
mov
movsb
or
adc
pop
cmp
shlb
inc
and
gs
jle
add
fcmovne
dec
test
aaa
mov
movsl
mov
pop
inc
mov
push
add
jae
sbb
rcll
insl
jno
mov
stos
xor
test
dec
lods
cmp
or
pop
inc
fdivl
push
xchg
fstp
and
xchg
adc
jno
pop
mov
in
and
daa
pop
jb
test
in
or
mov
outsl
sahf
and
insb
outsl
push
sahf
fildll
insl
push
pop
adcb
jecxz
mov
cld
jl
cmp
push
cmp
add
adc
mov
mov
dec
lods
test
testl
pmaxub
enter
mov
push
mov
inc
adc
push
leave
and
sub
pop
dec
stc
pop
xchg
cmovnp
je
lock
push
in
xor
push
popf
or
repz
push
jbe
les
jl
es
push
notb
adc
push
xor
sub
cmp
and
xor
cmp
sbb
adc
ss
scas
scas
dec
sub
mov
cwtl
inc
cmp
jno
in
lods
mov
mov
in
out
adc
cltd
insb
popa
inc
or
dec
ret
mull
in
orl
cmp
xchg
leave
cmp
cli
rcrb
or
jge
xchg
inc
pop
pop
test
jmp
pop
iret
insl
sub
inc
mov
test
add
lods
jno
idivb
sbb
mov
pop
les
pop
jg
jle
push
sarb
push
adc
aaa
mov
cwtl
mov
repz
sbb
xor
leave
pop
lcall
mov
pop
and
enter
xor
mov
sbb
lods
mov
shlb
lahf
ss
xchg
std
xchg
mov
dec
push
sub
dec
jnp
jg
outsl
or
pop
add
dec
in
in
inc
jbe
pop
xchg
int3
scas
push
jne
or
cs
push
jge
pop
repnz
xorb
std
pop
mov
shrb
jo
mov
pop
hlt
mov
mov
mov
cmp
stc
add
mov
pop
hlt
xor
xor
rcr
inc
fwait
cmp
aaa
out
sti
mull
cs
test
not
mov
fstpl
jno
int
sub
push
popw
daa
fwait
outsb
mov
fdivs
or
stc
mov
sub
test
js
cs
enter
ret
mov
sub
cmp
nop
sub
daa
adc
shrb
xor
aas
push
xchg
sub
add
push
xchg
xorb
test
sub
in
xlat
sbb
call
pop
loopne
or
aaa
jno
push
movsl
pop
scas
inc
dec
fldenv
sub
pop
adc
jmp
negl
adc
mov
xchg
pop
xchg
cmp
cwtl
mov
add
jnp
mov
xlat
aas
push
out
and
sub
mov
jne
jmp
sarb
lret
fs
mov
push
mov
sbb
xor
iret
xchg
jae
push
inc
adc
movsl
mov
lds
cli
push
stos
mov
ret
jp
dec
clc
or
jp
add
dec
pop
test
ret
add
pop
cmp
cs
dec
jnp
lods
adc
xor
push
out
call
hlt
mov
leave
enter
divl
jns
int3
mov
cmp
fiadds
inc
xchg
pop
mov
popf
stos
and
push
or
pusha
std
lea
orb
pushf
in
clc
fstpt
adc
sub
into
or
and
gs
pop
mov
lret
adc
jmp
xchg
xor
push
mov
pop
gs
inc
sbb
mov
inc
int3
sub
xchg
pop
adc
adc
lds
and
push
push
mov
rcll
fnstenv
jecxz
sub
sub
adc
pop
pop
test
push
cmc
stc
dec
mov
xchg
cld
ljmp
int3
loop
sub
pop
jle
fcmovnbe
out
loope
orl
insb
shlb
ret
dec
data16
sti
jmp
xor
add
fsubrl
pop
inc
aaa
dec
ret
test
inc
inc
adc
pop
mov
sbb
js
insb
add
loope
hlt
stos
int
outsb
lcall
ljmp
jns
loop
mov
fists
jl
mov
in
scas
push
inc
lods
jns
aam
sub
cmp
sub
sahf
fdiv
add
out
loope
sub
xor
orl
jnp
addr16
adc
imul
in
cmpb
mov
adc
mov
and
pop
cmpb
popf
sub
push
clc
imulb
stos
cld
in
ja
pavgw
sbb
xor
ja
popf
jle
push
mov
ret
cld
add
adcl
pop
cmc
pop
pop
mov
adc
xchg
rclb
mov
ss
pop
jae
xor
stos
jb
xchg
es
repz
mov
jb
xchg
movsb
fs
or
lock
iret
jae
imul
xlat
outsb
test
mov
push
mov
iret
pop
fs
insb
test
xor
and
mov
adc
jmp
push
test
inc
loop
leave
adc
cmp
cli
mov
aaa
inc
pop
push
jmp
lea
or
movsl
dec
orl
lcall
adc
adc
sbb
jecxz
movsb
mov
bound
xchg
cmp
ret
xlat
lds
xchg
sub
iret
lock
aaa
pop
fstpt
nop
xor
rcrl
push
pop
in
sub
jno
mov
rcl
addr16
stc
mov
dec
xchg
aam
xor
aad
loop
test
sbb
add
fcoml
sbb
mov
mov
out
adc
ss
mov
pop
mov
orb
pushf
mov
add
and
scas
inc
mov
lods
stos
enter
stos
inc
push
sbb
test
rolb
aam
and
in
mov
repz
fdivrl
inc
lods
fs
mull
ds
mov
adc
or
syscall
or
pop
cld
xchg
push
pop
jb
xor
lea
hlt
add
mov
fiadds
gs
daa
and
ret
or
jp
cmp
sub
repz
test
es
shr
and
sbb
aad
adc
cmp
cs
jb
aad
mov
cld
les
or
xchg
ds
popa
or
cs
scas
repz
mov
add
pop
shl
mov
pusha
inc
sbb
add
ret
adc
shlb
test
push
and
leave
xchg
sbb
mov
xor
add
jge
aas
cld
xchg
mov
mov
inc
push
cs
or
and
pop
subb
pusha
scas
movsl
hlt
and
in
int3
jo
mov
push
sahf
dec
cmp
bound
sub
loopne
pushf
xchg
adc
add
dec
add
push
pop
jg
jbe
push
lock
push
cmpsl
pop
xchg
daa
popf
xor
mov
cmp
dec
pop
fnstenv
push
dec
inc
int3
in
shlb
inc
xchg
repz
mov
notl
pop
call
cmpsl
jmp
sbb
xchg
xchg
out
mov
cmp
cli
int
inc
rcrl
call
ficompl
dec
push
cmpsb
cmp
test
in
cmc
pop
mov
lock
xchg
and
js
and
inc
shlb
into
ret
adc
mov
lds
dec
test
cld
xchg
mov
movsb
cmp
fnstenv
leave
in
mov
add
mov
jg
push
in
or
pop
sahf
adcb
pop
dec
mov
clc
popl
dec
jecxz
bound
lods
push
sbb
in
shrb
daa
mov
cwtl
aad
out
in
inc
add
pop
mov
mov
pop
imul
xor
movsb
or
mov
les
aam
cmp
xchg
cmc
pop
out
into
mov
fisttpll
lock
sbb
pop
hlt
int3
cltd
hlt
mov
out
pop
scas
decl
pop
mov
pusha
testl
jle
push
push
adcb
or
fistl
dec
inc
mov
std
adc
mov
pop
push
cmp
jg
sub
sbb
pop
mov
ja
pop
loopne
jno
mov
xor
mov
push
mov
inc
add
sti
xchg
xchg
inc
push
sub
xchg
mov
test
fcompp
mov
gs
jmp
shl
mov
mov
adc
rcrb
mov
fbstp
adc
ja
jae
and
mov
fdivs
outsb
xor
mov
sti
push
shrb
sbb
cmp
into
gs
shrl
aam
pop
push
push
aam
pop
aaa
in
test
repnz
lock
loop
add
jle
xor
clc
loop
and
mov
lods
inc
insl
mov
mov
jnp
jp
and
xorl
or
pushf
xor
mov
lods
inc
lds
xchg
pop
sub
xchg
sub
jecxz
push
daa
repz
mov
xor
pop
cmpsb
pop
bound
sarl
loope
pop
dec
ret
xor
push
sbb
mov
bound
mov
sub
pop
icebp
int3
filds
jg
fidivl
or
ljmp
pop
adc
jbe
pop
sahf
push
add
je
mov
faddl
mov
pop
or
mov
fcomps
call
mov
sub
icebp
mov
push
enter
push
ljmp
sub
sub
shrl
mov
mov
sbb
or
imul
movsb
pop
testl
push
jmp
lds
add
cmpsl
xor
fs
rcrb
fbstp
sbb
pop
xchg
cmp
xchg
insl
out
push
pop
out
aaa
shrd
jmp
push
lods
fdivrl
xchg
pop
xlat
xor
imul
nop
daa
shrb
fwait
imul
mov
jmp
jge
xchg
cld
and
loope
sub
lcall
lahf
es
mov
repnz
loop
jns
test
or
in
pop
pop
call
xchg
sub
or
xlat
push
mov
lock
cmpsl
pop
jno
mov
stos
inc
mov
cmp
xor
pop
fisttps
das
data16
add
or
and
jle
dec
inc
out
xchg
roll
jns
jns
mov
mov
mov
mov
out
pop
mov
cli
mov
mov
lock
rclb
xchg
ds
loop
dec
repnz
sahf
lock
neg
decb
push
ja
idivl
pop
xor
lahf
push
dec
inc
add
js
inc
pushf
dec
pop
into
or
xlat
outsb
test
cmp
jns
add
test
xchg
pushf
inc
mov
les
and
jl
add
inc
cltd
stos
push
jnp
sahf
cmc
cmpsl
in
test
mov
mov
test
cmp
jb
mov
aaa
mov
adc
dec
xchg
push
mov
dec
scas
dec
pop
icebp
pusha
shrb
push
clc
mov
pushf
sub
mov
fld
pop
int
insl
or
cmp
jns
ja
pop
fnsave
mov
dec
mov
ds
jp
lock
int
jge
dec
inc
call
mov
test
cmp
roll
adc
mov
cmp
dec
in
xor
mov
loopne
mov
lea
sbb
or
shll
sub
cwtl
add
cs
divb
push
addr16
cmp
inc
pop
insb
adc
dec
dec
mov
mov
je
pop
je
or
xor
or
pop
fs
iret
and
mov
mov
sbb
mov
and
setl
lret
std
fisubl
sbb
sub
push
mov
xor
jae
inc
push
xor
inc
xchg
xchg
adc
xor
loopne
scas
dec
xor
cmp
inc
rcrl
sbbl
push
test
jmp
add
mov
in
adcb
jb
movsb
ljmp
imull
sbb
mov
insl
sarb
ljmp
push
mov
je
cmp
loope
aam
push
movsb
adc
lods
add
mov
enter
push
inc
fldl
movsb
gs
xlat
data16
sbbl
adc
jge
xor
cmp
jnp
mov
jge
push
inc
jbe
ret
push
dec
cltd
popa
insl
inc
fldenv
pushf
xor
xor
nop
pop
sti
aas
popa
push
ds
mov
cmc
and
jb
loopne
not
in
xchg
mov
or
loope
pop
movsb
ffree
cmp
lds
sbb
stos
sbb
dec
in
daa
mov
adc
not
push
mov
in
push
mov
add
sbb
pop
dec
sub
xchg
ja
cmpsb
xchg
pop
rolb
or
add
pop
rorl
inc
lods
inc
mov
dec
sub
push
lret
pop
iret
filds
xorb
into
mov
dec
cld
aaa
xchg
lar
cmpsb
cmp
jge
cmc
mov
sahf
xchg
sub
leave
inc
loope
push
mov
cmp
cmp
push
dec
cld
movsl
cmp
imul
pop
mov
pop
inc
inc
fdivl
cmpsb
pop
pop
cmp
cld
mov
je
sbb
mov
cmpsb
outsb
inc
ficoml
dec
ffreep
jae
mov
roll
sbb
sbb
mov
movb
add
in
and
mov
incl
jl
jp
mov
scas
fwait
into
gs
jecxz
aam
sahf
xor
aad
enter
fbstp
inc
mov
pop
icebp
mov
xor
cmc
int3
arpl
inc
fnstenv
out
xchg
sub
inc
fxam
jl
bound
sub
add
daa
sbbb
push
mov
arpl
sti
xchg
test
bound
clc
dec
loopne
cmp
adc
test
fwait
jp
mov
out
adc
stc
nop
out
and
lods
stos
fs
test
push
lods
dec
adc
test
push
in
cmp
dec
in
pop
or
cs
es
dec
pusha
notl
sahf
das
jbe
mov
push
push
ljmp
and
addr16
fisttpll
aas
iret
xor
aas
ret
lock
aas
ret
inc
and
lds
and
lds
adc
mov
fiaddl
jecxz
push
jmp
scas
lods
and
out
jmp
movhps
mov
fbld
push
inc
fsubrs
xor
aad
pop
cmc
out
imulb
vmovups
mov
mov
stc
loop
inc
add
ror
mov
sbbl
das
sbb
cmp
adcl
enter
aaa
jmp
adc
pop
adc
out
xchg
cmpsl
das
rep
inc
fcom
adc
in
imull
int3
mov
xor
mov
fnsave
ljmp
es
clc
pop
lock
loopne
mov
sbb
add
stos
inc
loop
or
push
pop
movsb
pop
cmc
or
cs
scas
dec
aam
inc
loop
sbb
xchg
gs
lahf
mov
imul
call
or
scas
or
stos
iret
adc
push
out
sub
dec
imul
and
mov
mov
lret
bound
adc
inc
jns
xchg
stos
arpl
rcll
mov
enter
cmp
dec
mov
add
sarl
sti
xchg
es
inc
ds
sbb
xchg
cltd
aaa
into
lret
jle
jmp
in
sbb
push
popf
aaa
cmp
pusha
idivl
xchg
sub
lcall
push
in
pushf
mov
sti
cltd
mov
xchg
xor
add
and
dec
push
add
mov
stc
inc
shrl
mov
push
mov
mov
aaa
add
mov
std
cwtl
jnp
repnz
clc
xchg
mov
mov
sub
aam
lds
mov
sbb
test
and
repz
iret
ss
or
subb
jmp
or
inc
jg
out
popf
push
dec
xor
and
js
insl
les
stos
rcrb
mov
loop
lds
inc
pop
clc
mov
mov
push
addr16
inc
inc
inc
fisubrs
shlb
icebp
sbb
lea
fidivrs
pusha
mov
sbb
cmp
push
addb
cmp
aam
fwait
mov
mov
mov
or
lret
bound
es
cwtl
outsb
mov
pusha
push
lds
rclb
xchg
mov
mov
xchg
cmp
imul
mov
mov
daa
pop
outsb
and
or
fcmovne
inc
cmpsl
stc
iret
push
in
out
hlt
cmc
push
mov
je
xchg
adc
push
inc
movsl
sub
mov
mov
repz
loopne
cmp
inc
sarb
fcmovu
pop
cltd
or
sub
push
outsb
jg
mov
mov
imul
mov
outsl
inc
sbb
ret
pop
pop
movl
mov
pop
rcrb
fldt
pop
pop
push
hlt
or
data16
in
gs
rep
imulb
inc
arpl
sbbb
test
sbb
loopne
xchg
ret
inc
cmp
sti
sbb
mov
int3
jae
stc
ja
sub
popf
xchg
xor
test
and
sbb
pop
shr
bound
xlat
mov
or
stc
aam
scas
sub
xorb
sti
xchg
mov
scas
fstpt
sbb
rorb
pusha
cmpb
sbb
mov
add
fnstcw
xor
testl
xor
scas
int3
arpl
rorb
pop
jge
ljmp
mov
imul
xchg
andb
cmp
adc
xchg
int
mov
inc
aam
mov
lret
or
insl
push
cmpsl
mov
pusha
pop
dec
in
in
jecxz
and
sbb
aad
rcrb
sbb
fpatan
push
addr16
stos
lcall
adc
insl
xlat
outsb
sahf
and
push
jns
or
shrb
out
mov
fnsave
js
mov
inc
fstl
cmp
pushf
jb
lret
scas
cli
lret
xlat
and
mov
rcrb
in
jle
push
push
jb
and
in
test
and
lea
orl
mov
mov
ljmp
add
stos
cmp
scas
inc
data16
jo
test
movsb
inc
shl
je
mov
pushf
xchg
fcmovne
mov
shrl
cmpsb
sub
fadds
or
dec
aad
sub
jns
jbe
inc
pop
sub
inc
test
mov
jg
arpl
and
or
out
fld
adc
pop
adc
xor
add
fdiv
push
push
mov
sbb
je
movsb
cmc
jl
sub
sahf
jl
shlb
lcall
ret
jne
jno
popa
sahf
ljmp
adcl
lret
adc
mov
cli
xor
popa
sbb
repnz
xor
rcrl
test
cmpsb
outsb
push
cmpsl
or
mov
arpl
pop
clc
or
pop
hlt
xor
insl
hlt
cld
jnp
test
daa
sub
shll
icebp
xchg
hlt
lds
add
mov
lret
scas
jge
xor
xchg
or
nop
adc
pop
lods
arpl
sahf
mov
test
mov
in
loope
out
mov
fidivs
mov
sbb
fcomp
sbb
or
lret
mov
sbbb
pusha
sub
jnp
push
aaa
mov
mov
int3
mov
mov
dec
or
lods
inc
cmp
lret
out
or
inc
loop
insb
push
inc
in
cld
sub
aaa
dec
xor
scas
fwait
int
dec
js
popa
pop
loope
out
inc
add
movsl
hlt
inc
in
movsl
sub
adc
lds
xchg
adc
cmp
jnp
pop
in
jl
xchg
dec
jbe
dec
shlb
rol
jge
xchg
testb
dec
fists
out
and
jecxz
outsb
popa
pop
push
inc
iret
test
fdivrl
xlat
stos
jne
pop
cmp
insb
loope
cmp
cltd
pop
aam
cmp
jmp
cld
adc
pop
mov
xor
push
aam
xchg
jge
scas
sbb
mov
push
popf
ss
add
in
mov
out
push
cs
sub
je
shll
shrb
xchg
xor
imul
mov
fbstp
enter
xor
pop
jne
rclb
jl
dec
test
shrb
gs
jo
adc
jnp
adc
aaa
adc
cmp
push
test
loopne
test
ret
add
in
jne
pop
jecxz
xor
add
push
lret
inc
fwait
and
jbe
imul
loope
std
jae
inc
xchg
mov
insb
push
push
es
and
inc
pop
enter
repz
in
jecxz
add
pusha
sub
sbbl
int3
fsubl
aas
push
add
leave
push
sub
lahf
addr16
jne
adc
xor
and
mov
pop
cld
cmp
cmpsl
rorl
sub
js
mov
mov
daa
sti
pop
shrl
mov
int
mov
or
and
in
pop
sub
cmp
gs
add
sub
les
lret
pop
mov
movsl
sub
push
or
fldenv
inc
pusha
pusha
notb
call
shl
add
push
movsb
aas
mov
scas
and
sar
add
xor
andl
xchg
inc
fildll
mov
push
test
pop
sarl
sbb
jnp
into
sbb
rcll
sti
mov
or
cmp
xchg
cmp
sub
leave
mov
sbb
leave
and
cld
and
jns
cld
sahf
mov
je
xchg
movsl
inc
fwait
mov
mov
out
sti
push
jns
dec
imul
jo
aad
xor
push
fwait
ljmp
or
cmpsl
test
xlat
pop
mov
pop
testl
int
sub
lods
dec
push
inc
add
data16
fwait
push
and
das
xchg
mov
xchg
lret
shll
aas
lea
or
notb
rcll
js
mov
sbb
sub
sti
int
js
ja
andl
scas
inc
push
test
push
aam
mov
jbe
rcrl
inc
mov
movsb
cmp
cld
aaa
into
sub
xchg
sbb
std
mov
adc
add
enter
sbb
xchg
adc
cmp
cmpsl
ret
scas
fstpl
dec
jecxz
jbe
into
xchg
push
push
test
xchg
push
xor
pop
and
and
sbb
subl
mov
scas
insl
push
stc
xchg
sbb
push
jns
push
and
xchg
mov
push
outsb
pop
fdiv
xor
test
push
xor
dec
add
fs
add
shlb
mov
and
sub
cmp
or
push
loopne
sbb
stos
cltd
mov
add
ja
pushf
dec
cmc
cwtl
shr
popf
or
jge
outsb
push
in
lahf
and
ljmp
gs
repz
xchg
dec
fcoml
fnstsw
sub
mov
fsubl
movsl
icebp
pop
dec
nop
pop
sahf
add
jmp
add
mov
push
hlt
lods
or
xchg
xchg
cld
addl
xor
test
lock
push
inc
ja
adc
or
mov
rcll
dec
xchg
mov
xchg
aad
outsb
outsl
sub
xor
js
add
data16
into
inc
fdivrp
dec
jmp
ja
push
repnz
cmp
mov
aad
mov
push
maxps
inc
jae
mov
dec
fsubrp
jp
mov
push
mov
ljmp
out
nop
push
inc
out
cmp
xor
mov
mov
mov
pop
repnz
jbe
adc
aaa
loope
movsb
repz
sahf
cmc
filds
adc
stos
add
es
mov
dec
jp
jmp
pop
pop
mov
lods
fstpl
jle
xor
imul
cmp
insb
ret
outsl
std
rcrb
mov
cli
out
cld
and
sbbl
lods
adc
inc
inc
into
sub
inc
xchg
je
ret
js
in
push
push
or
sub
loopne
in
xchg
mov
iret
adc
pop
push
data16
filds
shr
fs
es
push
or
mov
pop
cs
add
in
sbb
fwait
add
mov
and
lret
cmpsl
xor
lret
aas
inc
fsts
cwtl
mov
pop
shrb
repz
test
push
adc
addl
aam
sbb
mov
shl
or
cld
dec
sub
dec
lahf
fisttpll
jo
out
inc
inc
push
lods
ljmp
jmp
adc
push
fcompl
lret
ja
icebp
mov
cmp
add
xchg
add
or
test
push
and
sti
xor
into
bound
stos
insl
addr16
cld
inc
mov
mov
int
inc
js
rolb
dec
in
aam
rcrl
fcomip
test
xor
push
push
xchg
cmp
sub
std
mov
sbb
hlt
cmp
or
xchg
pop
mov
icebp
cmc
mov
cmp
pop
scas
hlt
imul
pop
into
inc
out
jbe
stos
pop
mov
xchg
into
jne
mov
in
push
cli
in
cmp
std
jo
cs
int3
out
cmp
add
outsb
les
mov
mov
test
jnp
sti
xchg
lods
or
lock
iret
push
sbb
das
mov
mov
push
je
xchg
shl
adc
pop
add
sbb
sbb
lahf
jb
ja
dec
xchg
push
xor
mov
or
cltd
pop
subl
stc
push
or
jmp
or
or
cmpsl
nop
int
jecxz
xchg
adc
inc
repnz
aad
add
cwtl
lret
movsb
adc
incl
ret
pop
pop
icebp
mov
ja
outsb
js
movsb
and
mov
imul
and
ret
pop
lods
mov
adc
mov
ss
rcl
mov
sub
cld
jp
mov
xchg
es
movl
lds
xor
jmp
xchg
mov
push
mov
xlat
fisttpl
data16
int
inc
pushl
fwait
push
adc
xchg
jmp
xor
add
stc
rorl
icebp
push
mov
out
add
adc
flds
test
out
adcb
stos
xlat
sarb
out
pop
inc
ret
pop
and
out
mov
push
popf
pop
jmp
imul
and
pop
xchg
sbb
cmp
add
cmc
and
mov
out
test
jecxz
fxam
add
inc
loop
notb
inc
shll
fimull
or
add
adc
hlt
mov
adc
mov
es
and
xor
inc
stos
mov
inc
and
pop
scas
icebp
notb
cmp
jo
or
fnsave
pop
adc
dec
fisubrl
mov
xor
data16
ss
mov
push
or
lahf
cmp
jl
es
es
test
out
mov
push
in
and
add
insb
fnsave
clc
sti
icebp
pop
movsl
xlat
das
mov
lods
sbb
or
mov
gs
out
inc
fmuls
mov
cld
and
cwtl
push
pushf
lret
pop
nop
cs
push
xlat
out
jl
rcrb
aam
jns
dec
xchg
scas
inc
inc
jmp
int3
add
es
notb
or
leave
jge
cli
adc
out
jmp
mov
pop
push
in
mov
jae
pop
mov
jnp
xor
fs
mov
nop
stc
int3
fists
test
roll
stos
add
repnz
and
mov
jle
inc
jnp
xchg
mov
mov
xchg
iret
pop
dec
enter
pop
push
repnz
adc
subb
frstor
push
pop
ds
mov
dec
aad
hlt
and
dec
add
lahf
add
xchg
out
xchg
mov
or
jecxz
test
mov
cmp
mov
leave
sbb
mov
sub
das
mov
fisubl
xlat
lds
fs
lahf
in
and
jle
outsb
or
je
rorb
cmpsl
cmp
push
sub
cs
popf
pop
add
loopne
aaa
and
xchg
cmp
inc
mov
int3
pop
mul
jp
pop
data16
add
andb
mov
jne
add
mov
jae
iret
loope
xchg
adc
push
sub
mov
loop
mov
sbb
out
mov
or
sub
or
hlt
scas
sub
push
adc
bound
cmpsl
jge
push
scas
enter
std
xlat
and
jns
daa
popw
dec
das
jp
notb
mov
add
mov
lcall
push
push
xor
addb
inc
and
stc
ds
dec
fidivrs
jns
cmp
arpl
ja
jbe
insl
fchs
sbb
mov
mov
ret
adc
push
out
icebp
inc
lea
lock
int
dec
dec
rclb
shrb
lahf
inc
pop
fs
xchg
dec
repz
push
lahf
cmp
stos
out
cmpsb
push
mov
hlt
mov
xchg
inc
fld
loope
lcall
cmc
enter
std
push
sub
inc
ss
cli
out
aaa
jb
rorb
lds
icebp
sbb
scas
ret
fnstcw
add
jmp
fdivl
shll
sbb
lcall
jmp
and
aad
enter
je
pop
ljmp
in
pushf
imul
push
ss
jns
cmp
xchg
jp
ret
push
ljmp
fists
cmpsl
xchg
jbe
outsl
and
inc
mov
dec
push
lock
xor
iret
data16
mov
xchg
sub
dec
mov
and
mov
jg
dec
jbe
pushl
leave
fnstenv
test
push
je
cmp
xchg
std
jp
je
cltd
sti
or
adc
mov
inc
pop
inc
fsubs
and
movsb
test
repz
cmp
and
out
add
or
pop
gs
cli
lcall
push
inc
jae
inc
sub
das
in
push
mov
push
icebp
in
push
lock
mov
inc
incb
mov
dec
je
dec
push
retw
addr16
cmp
mov
sub
push
or
mov
jg
cmp
imul
dec
cmpsl
shrl
cmp
cmpsl
outsl
jnp
shld
jae
pop
movsl
mov
xchg
stc
cmpsb
cmpsb
cmp
xchg
call
ljmp
pop
push
mov
out
xchg
sub
xor
add
cltd
pushl
enter
add
mov
xor
stos
sub
push
jne
xchg
sub
jmp
test
shll
or
jp
gs
sub
mov
mov
cmp
push
xchg
jp
inc
pop
push
add
add
pop
adc
scas
and
shl
popf
mov
test
add
mov
insb
daa
jo
fidivrs
adc
inc
cltd
xor
iret
hlt
addr16
jb
or
xchg
cld
inc
ret
sbb
repz
int
cltd
aaa
push
cwtl
mov
fcompl
mov
in
mov
push
inc
aam
lods
push
fwait
sub
ja
push
jns
mov
test
shlb
in
mov
lret
sarl
fistpl
fists
in
enter
test
dec
cltd
jl
xchg
insl
jge
inc
fstl
adc
nop
int
gs
push
inc
data16
mov
lds
mov
xor
adc
mov
ret
xchg
adc
push
rcrb
mov
mov
adc
dec
dec
clc
or
push
pop
imul
popf
mov
aas
test
rcrl
dec
push
arpl
inc
mov
push
dec
cmp
mov
ret
loope
push
flds
adc
inc
or
shl
fwait
movb
popa
dec
ret
mov
das
sub
jmp
sub
mov
adcb
test
fstpl
mov
cmp
lahf
dec
hlt
or
dec
incb
xor
in
inc
aaa
pusha
mov
push
fcoml
sbb
aaa
ja
dec
into
pop
cmp
sti
dec
out
cmp
out
arpl
xchg
pop
sbb
fistpl
mov
sub
imul
cltd
call
dec
add
mov
xchg
pushf
mov
and
outsb
leave
les
xorl
andb
sub
pusha
jge
fdivp
pop
pop
lods
mov
and
xchg
xlat
insl
ret
in
pop
push
in
mov
push
loop
sub
xchg
dec
stos
jmp
enter
mov
arpl
icebp
sbb
mov
aam
cmp
stos
mulb
pop
scas
sub
imul
movsb
xchg
mov
or
sbb
or
push
mov
pop
ss
mov
shll
cli
push
loope
push
sub
or
lock
repnz
inc
inc
je
xchg
fdivrs
xchg
leave
inc
hlt
sbb
lods
dec
mov
mov
sbbl
mov
cmc
inc
lock
gs
pop
push
jl
cmp
js
dec
or
pop
mov
les
mov
sub
lods
inc
inc
idiv
pushf
jecxz
lret
addr16
cltd
mov
xchg
je
in
xorl
nop
pop
jae
or
ja
push
test
add
cmc
dec
lret
int
repz
test
xchg
lahf
jb
sarl
mov
out
scas
inc
and
and
sbb
adc
out
lock
shrb
les
mov
sbb
ds
or
adc
outsb
rclb
rorb
les
loope
mov
xlat
icebp
test
mov
xchg
mov
imul
dec
mov
dec
xchg
mov
fldt
loopne
les
sub
mov
cmp
push
dec
cld
cmp
push
jmp
xorb
js
sbb
insb
lock
lods
inc
dec
inc
fs
icebp
scas
outsb
or
and
shrb
cmp
shr
add
sub
mov
dec
push
and
aad
cmc
cltd
xchg
flds
out
mov
dec
mov
dec
and
int
dec
lods
mov
jmp
inc
fildl
shrl
add
in
fcomip
xchg
cmp
xor
pop
xorb
push
icebp
pmaddwd
sub
pop
mov
mov
lods
sbb
mov
fwait
dec
sti
imul
xor
sbb
mov
push
lret
adc
jmp
cltd
and
cmp
ret
xchg
outsl
loop
pop
data16
ret
inc
ret
scas
dec
sbb
pop
insb
push
adc
mov
sub
cs
dec
sbb
out
inc
sbb
mov
sbb
shlb
mov
stc
sub
lods
or
xlat
xchg
in
adc
push
xchg
add
aad
mov
xchg
scas
pop
and
push
fidivrl
mov
leave
test
fistpl
or
push
and
fdivrl
mov
in
ret
jle
dec
cmp
lahf
xsha1
cmpsb
iret
js
arpl
cmpsl
ljmp
pop
fcmovne
out
cmp
movntq
clc
mov
aad
mov
pop
cld
inc
mov
loop
xor
lret
les
idivl
add
cmc
cli
sub
pushf
jg
cmpb
popw
ret
mov
mov
sbb
or
lock
sub
pop
mov
fdivrl
ficoml
fmull
jne
stos
mov
push
out
cmpsl
mov
mov
push
pushf
sub
iret
mov
in
pop
arpl
jp
push
add
ffreep
xchg
cmp
bound
dec
dec
imul
popa
pop
cltd
mov
xchg
fucomp
push
cwtl
jp
ret
inc
fisubrs
pop
fnstenv
imul
je
jnp
mov
fcompl
rolb
push
inc
mov
xchg
sub
push
add
mov
test
nop
push
ljmp
jnp
je
daa
repnz
cmp
fs
push
xchg
scas
xchg
out
call
cwtl
ljmp
outsl
jg
adc
cmp
push
movsb
lret
mov
les
adc
add
fcomip
lret
add
xorb
out
jbe
xchg
mov
enter
mov
pushf
dec
loop
out
dec
push
repnz
dec
aas
data16
jbe
xor
jl
mov
pop
or
shl
xor
dec
test
mov
add
lock
popa
loope
sbb
sbb
shrb
cmp
movsl
xchg
and
push
sub
inc
decl
out
shrb
xchg
inc
enter
jne
dec
pop
add
loope
popf
int
fdivrs
dec
jecxz
push
pop
mov
cltd
push
int3
pop
sbb
mov
lea
vmovhps
cld
es
sbb
test
sti
rcrl
jne
popa
mov
sahf
adc
fdiv
outsb
xor
scas
rcrb
xchg
adc
je
movsb
data16
adc
mov
push
orb
repnz
test
aaa
fisubrl
and
outsb
jae
sbb
ja
daa
test
leave
fidivl
rcrb
andl
jns
test
mov
mov
test
scas
mov
scas
sbb
xchg
pop
fwait
dec
sahf
inc
jp
scas
and
ss
call
scas
rcrl
mov
mov
sbb
stos
in
popf
and
cmp
adcl
jnp
mov
xchg
mov
movsl
jo
mov
test
dec
int3
arpl
sub
ficoms
mov
decl
dec
cwtl
movsl
cwtl
fdivrs
cmp
ret
loopne
cmp
cwtl
dec
out
cltd
sub
fnstsw
icebp
in
and
and
outsl
jnp
leave
fnstcw
push
lods
rcrl
jnp
dec
test
popa
mov
and
cs
mov
xchg
pop
jb
jle
in
stos
hlt
dec
inc
int
xchg
fsubl
push
jl
jae
jne
int3
xchg
xchg
outsb
test
adc
js
fcmovb
outsb
adc
mov
ds
inc
mov
cmp
push
add
inc
and
push
popf
mov
push
sbb
cmp
outsl
cltd
mov
inc
inc
stos
fidivrl
push
cmp
push
jecxz
loope
xchg
pop
or
jns
dec
sbbl
repz
mov
pop
pop
fidivrl
or
stos
cmp
add
int3
mov
fsub
sti
push
ret
jae
adc
jno
dec
mov
jle
sub
test
lret
mov
sbb
push
popf
push
aaa
mov
lcall
lods
out
mov
je
sub
cs
pusha
sti
xchg
xchg
lcall
xor
mov
fimull
mov
fidivs
cltd
add
movsb
mov
mov
jg
jmp
pop
inc
cmp
aad
call
dec
and
aas
ljmp
dec
inc
cmp
xor
mov
push
dec
in
int
pop
imul
sahf
imul
pop
pushf
and
adcl
sub
stc
sahf
fisttpll
adc
test
test
inc
je
add
rorl
push
sbb
ficoms
mov
push
push
pop
cwtl
movsb
ljmp
and
push
mov
mov
sbb
and
popl
mov
ret
sbb
dec
jle
xor
inc
dec
inc
aad
data16
inc
pop
jns
dec
and
dec
shll
inc
adc
mov
adc
xchg
insb
cmovle
cltd
stos
aaa
sub
fsub
ss
andl
cmpsb
sbbl
xchg
std
ljmp
cmp
pop
inc
loopne
adc
leave
push
sub
aam
pop
imul
insl
in
imul
xchg
pop
mov
mov
or
loop
or
or
add
lret
mov
xor
pop
insb
cli
sti
aaa
adc
dec
fwait
mov
pop
pop
mov
add
jnp
inc
pop
je
add
sub
sbb
add
inc
mov
or
adc
sub
lds
inc
mov
sbb
sbb
or
dec
sahf
imul
shr
dec
push
xchg
imul
pop
jmp
jecxz
outsb
sub
out
ror
sbb
sub
mov
fdivr
xchg
loopne
cld
sbb
outsl
fnstcw
aaa
xor
ret
ja
jp
out
jae
icebp
negb
into
push
xchg
mov
popf
mov
dec
xchg
mov
push
jp
test
fisttpl
push
and
sti
mov
scas
mov
pop
cli
inc
ret
xor
sbbl
mov
xor
cs
test
and
xchg
popa
icebp
out
imul
adc
mov
ljmp
sti
push
loope
addl
and
xchg
inc
mov
jge
push
pop
push
hlt
push
cmp
jmp
jne
inc
dec
pop
test
fdiv
ret
cmc
mov
adcb
js
push
stos
xor
outsb
push
movsb
cmp
das
pop
jle
xor
sbb
add
shl
sbb
mov
pop
imul
inc
orb
movsl
sbb
and
push
add
dec
dec
mov
pop
xor
cltd
mov
mov
sub
and
pop
loop
jecxz
mov
mov
loopne
into
lret
adc
std
out
aad
aaa
and
push
pop
jle
mov
push
mov
movsb
movsb
mov
sub
loope
scas
and
cli
and
mov
and
mov
pop
fistps
notl
dec
incl
ljmp
std
xor
mov
or
add
add
jmp
fbld
fsts
and
sbbl
cmp
cmpsl
test
test
cmp
mov
rorb
movsl
push
mov
mov
mov
arpl
mov
out
xchg
lods
scas
push
fdivp
decl
stos
mov
pop
pop
mov
les
pand
sbb
xlat
jmp
cmp
cwtl
out
mov
out
xor
sbb
ljmp
lcall
scas
dec
enter
xchg
test
dec
mov
fnstcw
daa
or
push
test
shll
cmp
es
aam
mov
pop
push
xor
push
xor
gs
push
popf
sub
cmp
jle
mov
imul
in
push
sub
mov
and
mov
sub
pop
pushf
mov
aam
insb
cmpsl
pop
mov
inc
gs
xlat
cmp
shll
ljmp
fimuls
push
add
cs
push
push
push
jl
incl
mov
sub
pushf
jns
xchg
and
add
add
shll
push
pop
fwait
cmp
call
and
lcall
sbb
flds
cmp
jae
lahf
cmc
or
orb
scas
and
aad
pushf
repnz
jns
hlt
mov
testb
fst
sub
ret
xor
addl
les
iret
cmc
sbb
lahf
push
shrb
or
jle
jo
lods
cwtl
stos
fxam
aaa
lods
aas
inc
jbe
subb
lods
adc
cmp
fbld
int3
xchg
jns
sbb
pop
sahf
stos
cmp
jmp
and
imul
and
pop
enter
not
cmc
sub
cmp
into
mov
sarl
cmc
fdivl
ljmp
roll
enter
xchg
pop
cmpsb
loope
sbb
enter
addr16
ja
pop
mov
mov
and
sub
sbb
nop
adc
iret
jmp
or
cmpsl
mov
addr16
mov
mov
mov
mov
push
popf
xor
mulb
pop
lock
dec
aad
xchg
cmpsb
adcl
sub
mov
cwtl
pop
and
add
in
jecxz
ror
out
ret
jnp
mov
jnp
sahf
cs
xchg
fsubs
fdivr
inc
push
jge
lcall
jnp
lahf
push
dec
inc
mov
push
lret
loop
jecxz
dec
cwtl
repz
mov
mov
fwait
aam
add
jl
inc
mov
push
pop
lcall
loop
or
add
and
adc
dec
xchg
dec
mov
daa
dec
cmp
jecxz
cwtl
mov
adc
mov
sub
cmp
rorl
inc
lahf
push
pushf
mov
pop
inc
cmp
lcall
and
and
out
insb
sub
push
jbe
jne
dec
sbb
push
or
stc
xchg
cs
jl
xor
dec
jb
testl
lods
inc
nop
mov
dec
in
add
ret
xchg
xchg
addb
inc
lods
mov
test
pop
dec
and
adc
loope
data16
incl
shll
mov
popl
or
add
pop
in
cmp
ja
inc
sub
jnp
jl
pop
lcall
push
mov
bound
loope
fnstsw
mov
mov
mov
jge
xchg
iret
jnp
popa
out
ret
xor
push
sbb
xlat
inc
mov
jae
push
test
push
adc
xlat
lret
jmp
sti
rcrl
leave
fwait
or
arpl
ror
inc
inc
xchg
es
enter
jmp
cmp
push
jbe
pop
test
call
mov
jg
add
pusha
std
sahf
push
lds
sbb
xor
in
sti
mov
mov
and
push
test
stos
push
movsb
cmp
insl
lods
les
icebp
mov
mov
push
pop
mov
cwtl
jge
popa
pmulhuw
movsb
cmp
lds
mov
nop
sub
and
leave
pusha
jae
xchg
ja
cmp
mov
mov
decb
icebp
mov
ljmp
sub
inc
pop
and
xchg
inc
and
int
inc
xlat
fstl
pop
cmp
test
add
outsb
add
xlat
scas
out
mov
je
pop
cmp
push
push
cmpsl
pop
clc
dec
divl
mov
push
lcall
sbb
stos
enter
or
aas
push
sub
inc
lods
push
insl
rcr
xchg
cmc
mov
mov
and
mov
push
addl
jo
repnz
bound
xchg
xchg
mov
pop
jmp
push
ljmp
mov
ret
sub
inc
cmpsb
add
fsubs
mov
iret
lods
adc
iret
ds
dec
and
ficompl
mov
sbb
inc
cmc
pop
lock
in
xchg
inc
sub
sub
pop
cmp
inc
lods
cmp
cmp
cltd
stos
jmp
pop
movsl
xor
mov
jbe
in
addb
arpl
int3
fs
addr16
loope
movmskps
lock
data16
and
xor
cmp
repz
call
fnsave
mov
cmc
mov
repz
std
xchg
inc
imul
cld
inc
inc
fisttpl
lods
cli
outsb
sbb
andb
movsl
in
stos
mov
pop
outsb
push
jge
gs
jle
inc
stos
jne
adc
int
cld
fbld
push
inc
js
xchg
adc
push
je
xor
mov
dec
mov
loope
pop
out
dec
mov
leave
pusha
push
push
mov
inc
out
or
in
icebp
push
hlt
xchg
dec
ret
stc
xchg
ret
icebp
mov
mov
lret
lret
or
adc
scas
fwait
call
dec
loopne
adc
jnp
add
imul
add
scas
and
cs
or
inc
ret
mov
pop
add
mov
mov
jnp
repnz
int
lss
or
push
jb
je
and
je
andb
add
std
test
repz
cmp
lret
mov
loopne
pop
cmp
fucom
iret
dec
in
lret
pusha
adcb
xor
imul
sub
lahf
mov
loope
sub
clc
mov
sbb
mov
pop
adc
movsb
dec
dec
lret
and
in
ret
lret
jne
lock
sbb
mov
ss
test
ret
ds
and
fucomip
les
jnp
mov
sub
and
mov
mov
ljmp
push
fnstenv
xchg
movsl
cli
mov
dec
or
dec
aam
inc
mov
fcoml
jmp
push
sahf
mov
stos
mov
mov
adc
sahf
addr16
inc
arpl
inc
cmp
aad
je
mov
cmp
dec
cmp
jmp
sub
and
xchg
sahf
add
lret
cmp
in
test
lcall
in
pusha
push
inc
test
pusha
fisubl
sub
stos
pop
inc
out
inc
xchg
sub
lds
jno
enter
inc
pop
fs
mov
add
xchg
mov
sbb
rcrb
shrl
outsb
neg
mov
mov
iret
negb
mov
or
cmp
cmp
cltd
movsb
add
jp
aas
xchg
imul
ret
mov
or
adc
pop
dec
dec
mov
dec
movsb
icebp
cmpsl
loopne
xchg
xchg
sub
jne
xchg
mov
jae
lret
xor
sub
xchg
je
test
popa
pop
fnsave
or
or
test
popf
addr16
pop
into
lods
lret
add
hlt
xor
push
mov
sbb
pop
push
xchg
sbb
movsb
out
sub
lods
jg
pop
jp
andb
aad
incb
push
clc
jg
icebp
shrb
push
sbbl
mov
aas
push
mov
hlt
mov
pop
das
decb
mov
inc
rcr
jmp
lea
push
leave
or
sarb
mov
nop
sub
xor
movsb
stc
or
mov
xor
dec
mov
popf
repz
outsl
aaa
jmp
push
iret
nop
adc
cmc
adc
shrb
mov
inc
insb
add
add
mov
xchg
xacquire
das
movsl
adc
dec
lds
enter
mov
mov
mov
fs
and
fs
sbb
bnd
xchg
sub
outsl
xor
in
aad
loopne
mov
xor
cmp
negb
movsb
sti
dec
xor
loopne
and
lods
mov
pop
test
inc
icebp
mov
ljmp
lods
bound
xchg
push
pop
dec
jecxz
imul
dec
dec
mov
mov
ud0
cmp
dec
dec
jp
cwtl
rcr
mov
adc
mov
je
push
mov
aaa
aad
pop
jb
stos
icebp
mov
dec
adc
jmp
es
mov
push
jmp
lahf
adc
jns
test
nop
sub
daa
mov
xor
push
repz
je
pop
shll
orb
sub
aaa
pushf
mov
std
mov
out
test
rclb
sub
js
and
pop
imul
jle
pop
stos
pop
inc
jp
sti
arpl
inc
int
xor
cld
xchg
inc
push
inc
cld
test
cmp
mov
popa
jbe
out
cmpsl
adcl
dec
cmc
jp
xchg
decb
jae
push
fstl
adc
popa
jl
std
fdivs
pop
dec
xor
jns
adc
out
test
adc
mov
mov
xor
mov
push
jo
outsl
push
jbe
jecxz
dec
int
xor
js
aam
jo
mov
xchg
call
call
dec
xor
mov
out
cltd
mov
mov
movsb
jns
or
dec
mov
sub
inc
shl
outsl
mov
mov
sbb
sete
mov
mov
out
jmp
out
movsb
cmp
xor
push
inc
sbb
jbe
pop
test
inc
in
ja
call
pop
xchg
pop
std
cltd
dec
pop
push
jmp
mov
push
pop
sub
sbb
out
cld
jle
shrb
mov
add
inc
push
pop
scas
test
movsl
mov
adc
xchg
imul
sbb
dec
mov
ds
mov
and
pop
in
adc
mov
dec
repnz
das
mov
cmp
push
mov
jno
dec
dec
mov
aad
cmp
jae
dec
sub
rcrl
leave
cwtl
cmpsl
leave
fists
enter
loope
xchg
mov
movsl
in
jecxz
ret
sub
shl
enter
mov
dec
lret
jae
test
adc
addb
rcrb
rcrb
subb
cmp
add
ret
mov
jl
add
lds
imul
lods
inc
cld
or
xor
lret
sbb
insb
mov
jl
jb
sbb
pusha
in
leave
sbb
jecxz
jle
in
inc
movsb
adc
jnp
pusha
sub
jmp
jge
adc
xchg
or
bound
pop
cli
pop
pusha
testl
cmc
aam
sub
std
inc
adc
movsl
mov
mov
fldt
mov
or
popf
inc
cmp
mov
in
arpl
aad
sahf
inc
ror
cmp
repz
xor
dec
jle
nop
mov
pop
xor
sbb
cmc
pusha
dec
mov
mov
cmp
lahf
das
pop
xor
xor
es
enter
jae
arpl
je
xchg
pop
jbe
fstl
xchg
stos
xchg
adc
testl
ret
and
inc
and
popa
mov
frstor
out
jo
sahf
out
ljmp
hlt
lcall
or
je
rcll
insb
cmc
mov
repz
dec
js
cmpb
inc
test
xchg
push
fcmovnu
ja
dec
fdivl
cmpsb
sbb
push
xchg
sub
dec
movsb
cwtl
lcall
lods
clc
adc
pop
out
dec
cmp
mov
cmp
pop
jne
cmc
ret
sbb
test
mov
rep
mov
pandn
dec
mov
or
inc
pop
sub
es
cmp
lcall
dec
inc
dec
push
xchg
outsb
jb
sbb
mov
dec
popa
divl
xchg
inc
jecxz
adc
dec
in
xor
xchg
pop
stos
scas
in
push
test
sub
loope
xor
sbb
pop
out
inc
or
jb
dec
rol
fbstp
and
xchg
cmp
inc
or
mov
cmpl
sbb
cmp
sahf
push
shlb
mov
pop
mov
adcb
das
cmp
fsubl
subl
loope
pop
adc
or
std
cmp
push
out
xor
shll
fdivrl
cwtl
pop
mov
ja
xchg
and
inc
sbb
aam
xchg
sub
jg
arpl
lahf
xor
es
push
sbb
sub
push
or
idivb
or
push
dec
aam
jb
stc
dec
xchg
fsts
inc
cmpsb
les
push
fnsave
push
mov
pop
jl
inc
fucomp
popf
or
ljmp
xchg
scas
stos
mov
xchg
mov
inc
ret
ficomps
out
sbb
inc
pop
cmpsb
dec
xlat
xchg
pop
add
jecxz
test
nop
dec
pop
mov
andb
aaa
dec
lret
lret
and
incb
cmpsl
stos
jle
int
test
adc
adc
mov
mov
mov
xorb
aas
mov
sar
cmpsl
inc
in
inc
pminub
scas
daa
mov
pop
sub
cmp
xor
call
in
pushf
incb
adc
test
mov
jge
xchg
stos
repnz
push
sub
sub
into
push
pop
mov
lret
mov
out
test
sbb
mov
dec
and
je
outsl
jmp
out
add
pop
sbb
lea
fistpl
repnz
push
jle
popa
pusha
xchg
jl
mov
ret
mov
jnp
pop
frstor
mov
cmp
int3
xchg
xchg
into
dec
lahf
push
inc
fs
mov
sahf
cli
sahf
mov
outsb
add
pop
mov
insl
pop
jp
pop
mov
fidivs
cwtl
test
mov
jbe
sbb
and
pop
xor
mov
ds
add
push
mov
and
es
mov
bound
jbe
sbb
pop
repnz
in
loop
cmp
movb
push
mov
rclb
push
idivb
push
mov
test
mov
rclb
sub
repz
cmp
mov
jmp
movsl
arpl
bound
add
mov
movsb
icebp
lds
loopne
cli
aad
fdiv
adc
adc
insb
jmp
stos
xorl
cmpsl
cmpsb
cmp
mov
inc
call
out
aam
mov
pop
aaa
mov
ja
mov
inc
xchg
jns
popf
outsb
xor
mov
jl
lock
mov
push
or
xchg
mov
fstl
add
jp
xchg
scas
sub
repz
pop
not
pop
arpl
rcrl
arpl
mov
es
adc
xchg
pop
push
gs
pop
pusha
and
mov
mov
sub
sti
xor
sub
dec
mov
addr16
dec
fldt
insb
add
xchg
pop
mov
xchg
pop
int3
scas
jbe
sub
ja
push
ss
mov
jns
int3
xor
ficoms
call
mov
sbb
adc
out
jae
rolb
imul
in
pop
fldl
cmp
add
push
inc
mov
pop
iret
rorl
and
and
adc
aas
test
add
dec
jno
pusha
jbe
dec
adc
out
adc
push
sbb
mov
add
dec
mov
push
mov
xorl
fs
jns
pop
test
aad
imul
jae
ret
test
push
adc
repz
xlat
mov
loop
sahf
cmpsl
fists
sbb
sub
enter
in
loopne
add
push
or
sbb
cltd
das
or
mov
lds
loope
std
pxor
divl
lret
mov
imul
sarb
into
popf
stos
pop
add
sub
sti
adcl
jns
stc
aas
dec
mov
sub
cmp
aad
cvtpi2ps
rolb
mov
cwtl
mov
in
cli
mov
mov
jg
xchg
cmc
mov
leave
lahf
xchg
out
and
cmp
lahf
or
ret
mov
jle
dec
mov
push
xchg
test
subl
pop
fs
out
lret
aad
outsb
inc
cs
push
clc
in
cmc
and
mov
cmpsb
cmp
mov
pop
movb
add
repnz
pop
inc
adc
add
lods
pop
add
push
pop
pushf
aas
mov
dec
fstps
adc
lahf
adc
fidivs
lret
jg
cmp
mov
pop
fisubrs
movsb
test
out
push
enter
dec
iret
leave
fcoms
push
stc
pushf
int3
cmpb
ss
or
jns
ret
or
loope
and
ss
repz
mov
fsubs
lahf
mov
add
rep
xchg
sbbl
mov
roll
mov
es
and
ss
mov
clc
popa
add
pop
in
das
cli
push
out
xor
loop
shlb
mov
fsubrs
adc
add
sub
enter
aad
mov
pusha
and
xchg
mov
jle
xlat
mov
xchg
jle
add
inc
xchg
cmpsl
orb
mulb
sbb
xchg
out
shlb
cmp
jnp
mov
ret
xor
mov
pop
mov
lahf
xor
inc
bound
call
mov
sbb
cmp
pop
xor
pop
orl
daa
pop
adc
frstor
inc
push
mov
mov
jno
scas
push
pop
retw
pusha
ljmp
sbb
cld
mov
std
clc
inc
gs
rcll
inc
cmpsl
ljmp
inc
cwtl
sub
fnstcw
push
inc
mov
jg
test
rcll
dec
and
inc
pop
ds
add
je
int
sbb
imul
xor
xor
sbb
jnp
and
dec
push
mov
mov
ret
hlt
dec
push
ffree
xchg
and
and
leave
xor
andl
dec
out
pop
adc
add
lahf
jb
inc
mov
push
mov
rol
popa
into
cmpsl
jle
imul
scas
add
push
dec
and
out
aam
xchg
rorb
inc
lods
enter
ret
jge
pop
out
dec
hlt
dec
pop
pop
out
shlb
jo
enter
mov
push
cmp
aas
lods
mov
subb
insl
lea
pop
pop
lea
imul
adc
sahf
push
xchg
mov
adc
cmp
rol
sbb
push
jg
shr
mov
jg
ror
pop
push
pop
dec
pop
jae
into
mov
xor
add
test
cli
es
cmp
imul
mov
imul
ja
ljmp
xchg
out
xchg
pop
rorl
xchg
pop
pop
mov
lret
jge
bound
or
dec
cld
fwait
mov
mov
dec
adc
adc
jle
cs
ljmp
mov
and
data16
push
mov
ljmp
xor
arpl
shl
add
cmp
fs
data16
mov
je
push
in
push
xor
cmpsb
das
jle
rcl
adc
in
movsb
mov
lea
mov
cld
xchg
and
sti
xor
filds
sub
ja
je
push
jb
xchg
sti
push
and
mov
and
popa
into
xor
punpckldq
xchg
dec
cmp
ja
imul
xchg
cmc
insb
andb
add
nop
iret
popf
insb
test
pop
popa
aad
pop
loop
ret
mov
fimull
cli
adc
xchg
or
mov
fisubl
shlb
pop
pop
scas
mov
or
inc
and
sti
inc
pop
sub
jns
negb
cmp
loop
lret
mov
jle
mov
cmp
jae
stos
in
outsb
pop
inc
push
pushf
mov
push
fstl
mov
sbb
inc
cmp
cmp
push
enter
daa
divl
fwait
in
cmpsb
or
sti
mov
mov
and
daa
cmp
xchg
add
ljmp
pop
imul
jp
shl
push
imul
iret
push
fsts
jne
xchg
mov
push
mov
sar
cld
inc
dec
jl
shlb
es
loopne
mov
inc
jmp
mov
add
icebp
push
and
add
insl
js
fistpl
cmc
pop
xchg
stos
xor
add
repz
ja
nop
xor
or
mov
push
pop
cmp
pop
or
dec
insl
out
int
push
je
enter
sbb
je
and
into
dec
pop
iret
and
jno
addr16
aaa
lea
lcall
jne
lret
jmp
icebp
xor
pop
mov
sbb
cmp
pop
cli
repnz
bound
iret
lea
jb
hlt
xor
jl
jp
rcrb
or
sub
mov
movsl
imul
or
inc
dec
pop
dec
add
and
sub
fistps
ss
push
dec
adc
jmp
xor
and
xchg
in
adc
mov
xor
adc
jne,pt
xor
jmp
pop
mov
and
jge
and
jnp
cmovns
mov
cmpsb
dec
mov
in
adc
mov
xchg
sub
mov
xor
mov
jecxz
xchg
pop
popl
ret
fnstenv
add
mov
pop
cmpsl
out
push
flds
mov
movl
movsl
xchg
iret
pushw
hlt
movsl
lds
mov
push
imul
inc
push
push
lret
add
push
jmp
add
xor
aaa
scas
add
neg
xor
xor
xor
xchg
xlat
icebp
mov
jno
adc
jne
aas
mov
adc
shl
xor
xor
ret
nop
fistpll
sbb
dec
fmull
or
cs
outsl
outsl
pop
decb
cmp
or
dec
aas
leave
jo
pop
mov
inc
and
clc
pop
push
inc
in
sbb
test
loope
mov
shrl
dec
fdivrs
stc
adc
imul
idivb
push
dec
scas
push
ja
mov
lods
add
repz
je
ret
xchg
sub
adc
pop
cmp
in
scas
jb
orb
pop
fistps
out
aam
push
fidivrl
jne
outsl
cmpsl
ret
or
iret
inc
scas
cld
jg
jb
leave
xor
iret
sbb
outsb
es
mov
push
dec
jecxz
add
call
or
addr16
fwait
mov
jb
ret
cmp
or
xchg
test
mov
sub
mov
fucomp
scas
dec
movsl
lret
mov
ljmp
jno
ljmp
inc
test
fldl
addb
int
mov
and
pop
pop
scas
fidivrs
cmp
enter
dec
mov
arpl
iret
xchg
adc
xor
jecxz
adc
xorb
pop
mov
sbb
push
pop
xchg
adc
loope
arpl
inc
pop
and
popa
xchg
or
sub
call
dec
les
ja
cmp
fstpt
xor
push
ss
sub
mov
loop
inc
movsb
add
cmc
mov
and
loope
mov
sub
mov
negl
imul
popf
mov
jnp
insb
std
or
add
fbstp
movsb
es
sar
jp
push
repz
mov
insb
lret
mov
rcll
stc
mov
xor
fstpt
insl
out
ficompl
popa
sbb
add
pop
cmpsb
stc
inc
cmp
jg
mov
test
cltd
or
pop
push
sub
adc
addl
pop
push
pop
rclb
push
and
cmp
and
mov
cmpsb
push
push
push
mov
int
fucomip
jle
mov
mov
mov
nop
mov
mov
push
fsubrs
stos
ret
pop
mov
fchs
repz
insb
dec
popl
pusha
jo
lods
loope
scas
inc
jecxz
mov
std
cwtl
jp
xor
cmpsb
out
test
imul
dec
outsb
insl
in
lcall
enter
push
scas
add
mov
fisubl
es
pop
insb
test
push
shrl
lea
mov
sarl
sub
jnp
stc
or
pushf
pop
testb
jge
lret
out
loopne
pop
testb
cltd
sub
pop
ljmp
hlt
or
popl
xlat
test
mov
fcomps
or
mov
add
les
test
sbb
mov
sbb
inc
or
stc
arpl
sbb
sahf
pop
xorl
lea
and
into
jl
xchg
stos
es
inc
negl
mov
je
aas
ds
inc
out
cld
mov
in
icebp
out
lret
jne
inc
mov
cs
repz
dec
sbbl
scas
jp
mov
xor
xor
jno
cmp
pushf
sub
sti
xchg
mov
or
mov
aad
lds
jae
sub
jecxz
lock
mov
pop
pop
repnz
jp
xchg
mov
fmull
or
cmpsb
jne
push
sti
rorb
fsubl
xor
call
pop
out
add
mov
pop
ljmp
fdiv
ficompl
insl
adc
dec
cmpsb
cmp
lods
ds
lcall
jge
adc
mov
std
jecxz
es
fwait
icebp
xor
inc
out
xor
and
mov
movsl
sbb
sub
cwtl
in
stos
dec
mov
adc
inc
inc
lret
add
cmp
lods
jo
lods
out
cmc
add
sub
lahf
ss
das
pushf
inc
cmp
or
cli
jmp
push
jmp
mov
mov
lret
sbb
scas
or
movsl
ss
insb
ret
sub
xchg
push
add
jge
std
out
jecxz
fucomp
pop
mov
movsb
test
fwait
dec
jbe
mov
mov
and
les
lret
xor
faddl
out
sub
jbe
test
dec
or
xor
mov
mul
mov
dec
or
inc
stos
push
jo
or
inc
clc
lahf
subl
aas
int3
in
xchg
jl,pn
dec
fsubrs
iret
xchg
sub
add
mov
or
mov
mov
cs
sbb
sbb
mov
ja
jo
aaa
gs
sbb
mov
sub
inc
mov
xchg
pop
out
std
mov
mov
test
xor
lods
pop
out
orl
mov
enter
loopne
jge
shll
push
jmp
jle
sahf
mov
push
shlb
andb
repnz
call
mov
add
fbstp
fyl2x
mov
jl
outsb
loopne
inc
push
or
sti
and
mov
jae
mov
xor
in
xchg
in
cmp
fidivrs
mov
cmp
lea
cmp
fsts
mov
mov
mov
ret
dec
push
aaa
es
xor
mov
mov
xor
adc
ror
jo
pop
ljmp
mov
pop
mov
adc
push
adc
rcrb
push
and
mov
sbb
jne
mov
xor
int3
jle
leave
push
pop
push
dec
add
pop
and
or
pusha
enter
inc
dec
iret
mov
xchg
dec
push
pop
test
pop
xor
test
int3
out
inc
mov
jbe
popa
out
fbld
jecxz
push
adc
mov
test
mov
push
mov
sarl
mov
pop
cld
jg
int
xlat
and
push
sub
aad
pop
cmp
cmpsl
push
stos
jecxz
mov
xor
bound
roll
and
mov
dec
loope
out
int3
cs
adc
adc
sbbl
test
push
jne
jmp
jnp
pop
lcall
adc
pusha
in
mov
sahf
cmp
jnp
pop
jne
push
hlt
jg
mov
out
ja
into
outsb
add
jbe
shlb
xchg
xchg
mov
push
push
add
jns
outsb
lock
cmp
xor
in
pop
fsubrp
imull
add
fidivs
and
stos
faddl
psraw
or
mov
push
jne
adc
sbb
cmp
mov
dec
mov
mov
fiaddl
fildl
testb
stc
xchg
adc
ret
je
mov
insl
push
sti
push
push
push
xchg
dec
push
sbb
aas
shll
outsb
ret
or
ret
montmul
cmpsb
les
sub
test
sbb
decl
pop
dec
out
xor
push
std
adc
clc
outsb
gs
iret
cwtl
and
push
subl
add
sti
jl
out
add
push
xor
aaa
into
and
push
or
fistpl
sbb
pop
mov
pop
mov
sbb
loope
fimull
adc
jne
pop
add
mov
mov
ret
push
mov
mov
test
fiadds
xor
enter
cwtl
std
lret
stos
and
mov
je
lret
add
out
clc
sbb
inc
sahf
pop
sti
adc
icebp
mov
hlt
lea
icebp
xchg
jmp
or
sub
pop
push
xor
outsb
das
mov
data16
jmp
in
cmpl
or
stc
out
mov
lds
cmp
popf
mov
pushl
push
sub
push
les
cwtl
ja
sub
pop
rclb
cmpsb
push
jge
mov
add
jns
loope
loop
xchg
and
movsb
repnz
pop
jb
xchg
push
xchg
add
popl
ja
push
xor
test
stc
xor
cli
mov
dec
popa
xchg
adc
sbb
mov
lret
bound
dec
sub
jge
mov
xchg
sbb
test
div
ret
dec
lods
sbb
xor
dec
mov
in
xor
insb
std
ficoml
cmc
mov
mov
outsb
or
push
icebp
mov
mov
mov
mov
ret
sbb
stc
push
movsl
sub
mov
inc
fstps
int
and
push
jmp
hlt
inc
sub
out
in
addr16
push
push
es
pop
arpl
lock
sub
sbbb
or
clc
cli
mov
es
mov
cmp
pop
fsubrl
and
jg
sahf
leave
mov
sti
mov
into
pop
cltd
out
aas
adc
and
xor
cmc
mov
add
cmp
mov
shll
add
fsts
and
push
push
stc
fnsave
mov
mov
sti
or
test
or
cmpsl
addr16
cwtl
pop
mov
sbb
or
sbb
repnz
lahf
pushf
ja
nop
mov
testb
notl
scas
sbb
and
loopne
imul
mov
ja
sub
mov
call
daa
int
mov
pushf
loop
pop
and
rclb
imul
add
mov
inc
ljmp
xor
and
addb
mov
dec
mov
cmp
dec
pop
imul
pop
push
pop
in
and
rcrl
mov
ds
icebp
push
out
pmuludq
xchg
bound
out
push
insb
je
push
inc
or
ljmp
cs
mov
cmc
mov
dec
cmp
imul
mov
daa
bound
outsb
int
sbb
ds
repz
movsl
test
xchg
push
lahf
enter
xorl
dec
push
imul
sbb
fcmovnu
addr16
mov
cmp
xchg
push
dec
cmp
push
insl
aaa
sub
call
loopne
or
inc
je
ljmp
jne
dec
scas
inc
xorl
cmp
lret
jae
sahf
clc
mov
dec
mov
lret
pop
mov
ss
fmul
gs
cmp
jge
sbb
aas
add
outsb
iret
xor
add
pop
xor
test
and
adc
mov
int3
arpl
hlt
adc
sbb
or
xor
es
xor
inc
push
push
cwtl
sub
jmp
push
scas
mov
lods
cmp
jns
jp
js
jo
xchg
shlb
fnsave
add
cmp
insb
es
or
mov
mov
sub
repz
mov
lahf
xor
out
cld
mov
push
sub
ficomps
sbb
lahf
negl
cmp
adc
in
mov
in
fidivl
fidivl
adc
sti
fnstenv
ss
imul
push
sbb
inc
sbb
cmp
push
int3
mov
fs
jo
insb
jle
pushf
push
jbe
mov
test
xchg
lret
pop
push
addb
inc
adc
jae
fs
cmp
xchg
inc
out
fdivl
jl
in
insb
xor
jg
shrl
repz
or
adc
das
mov
popa
ljmp
mov
or
jle
push
and
test
add
lods
mov
test
cmpsl
mov
and
inc
sub
lcall
mov
fnstsw
mov
movsl
or
inc
sub
cmp
aad
cltd
pop
inc
mov
adc
iret
push
xor
sbb
mov
jl
and
sbb
outsb
dec
scas
dec
repz
loop
cmp
and
imulb
pop
adc
sub
fsts
sbb
adc
and
or
ret
pop
dec
cld
inc
mov
ret
leave
int
cli
mov
das
lea
sub
add
lcall
movsl
sbb
push
mov
rcrb
loopne
mov
mov
mov
pop
mov
sub
pop
push
cltd
pop
push
negb
mov
mov
pushf
pusha
mov
xor
fstps
jno
outsl
mov
rclb
subl
add
jno,pn
movsb
ja
jne
aam
sub
lret
xorl
lea
xor
or
xlat
aaa
in
sub
xchg
lods
out
lcall
ss
jecxz
adc
push
add
or
in
std
sub
aam
sbb
jb
rcr
out
cmp
pop
fnsave
add
mov
xchg
cmp
cmp
shl
out
fs
push
in
or
jecxz
pop
jp
and
int3
xchg
mov
arpl
fwait
xchg
pushl
and
arpl
adc
sbb
push
and
mov
xor
shl
je
dec
loope
xchg
js
filds
mov
and
inc
std
test
dec
jecxz
cmpsb
xor
sbb
dec
ja
mov
dec
in
in
sbb
add
jecxz
ljmp
jb
lret
pop
mov
xchg
clc
inc
lock
nop
sub
sbb
lretw
xchg
cs
ja
jmp
jl
push
in
les
pop
cmp
loopne
leave
inc
dec
dec
in
fstl
jmp
sbb
inc
pusha
test
push
out
lret
jae
lahf
addb
daa
mov
iret
enter
mov
xor
lock
ja
mov
inc
fstl
lret
imul
insl
add
or
imul
les
push
and
sub
subb
pop
mov
fistpl
leave
mov
xor
jl
xor
stc
cmpsl
push
push
add
ror
movsl
jecxz
incl
and
mov
cli
mov
sbb
ds
push
mov
mov
mov
shrl
add
cmp
inc
push
pop
dec
pop
mov
jmp
rol
rep
xor
adc
ljmp
shlb
subl
xor
movsl
pushf
cli
mov
jns
fcmovu
mov
sbb
fs
jmp
cs
mov
xor
repz
or
cmp
add
aaa
mov
ds
divb
hlt
aas
es
pop
addr16
jno
mov
mov
push
jbe
xchg
lds
psubd
lret
push
ret
cltd
pop
fcmovu
xchg
int3
and
mov
cmp
outsl
and
xchg
ds
sbb
aam
aas
cmp
daa
gs
sbb
push
mov
lea
mov
scas
shl
fcmovb
iret
mov
clc
aas
aad
js
scas
jmp
mov
jp
and
xchg
test
imul
jle
fdivrs
mov
clc
sti
pop
js
or
mov
pop
inc
es
inc
nop
imul
sbb
andb
pop
push
dec
sub
xor
mov
rcrl
push
add
je
mov
sub
push
and
jbe
jl
and
fldenv
jg
xlat
inc
and
jbe
ljmp
sbb
jo
ret
repz
enter
stc
push
aaa
push
fiaddl
sub
inc
push
xor
mov
les
insl
filds
push
enter
adc
cmp
cmpsb
pop
cmpsb
push
pop
inc
xorl
cmp
cmp
push
xchg
fs
jg
repz
stos
rorb
fs
dec
cmp
sarl
pop
adc
xor
mov
popa
add
cwtl
call
das
sti
inc
sbbb
fimull
xor
push
jbe
cmpsb
out
mov
cltd
mov
out
cwtl
mov
push
stos
stos
dec
std
fdivr
lds
mov
outsb
push
mov
leave
mov
jmp
loop
xchg
pop
push
cli
xchg
inc
xchg
mov
out
lahf
sbb
ret
dec
inc
mov
rclb
xchg
jp
pop
cmp
mov
cmp
aaa
dec
inc
out
iret
sbb
lcall
pusha
mov
iret
inc
in
jmp
movsl
addb
push
push
cltd
xchg
and
pop
push
xchg
stos
cmovae
lods
scas
fs
mov
mov
jae
mov
aad
sbb
pop
mov
insl
pop
shlb
mov
pop
repz
out
hlt
fistpll
or
cs
popa
cli
data16
jle
pushf
mov
fstpl
data16
and
add
xchg
adc
add
mov
andl
iret
and
inc
ret
test
lahf
sti
and
sti
mov
mov
mov
jo
ret
mov
bound
insb
add
pop
mov
mov
sbb
pop
dec
mov
mov
mov
cmp
stc
sbb
mov
adc
jp
test
pushf
stos
pop
or
push
sub
fisttps
cs
les
ja
and
sti
dec
arpl
jge
jno
cld
sbb
xor
lcall
in
mov
stos
mov
xchg
test
pop
bnd
push
mov
xchg
gs
fdivrs
ror
or
add
xor
cltd
sub
inc
sub
inc
outsl
adc
pop
push
sbb
into
into
cmp
push
test
ds
dec
and
enter
insb
inc
mov
sbb
out
and
xor
push
or
lock
pop
pop
dec
cwtl
push
push
repz
xchg
rcll
mov
xchg
mov
and
mov
push
sbb
test
sbb
mov
adc
int3
in
sbb
sub
dec
fistpll
mov
out
fdivrl
jno
jo
dec
xchg
cltd
imul
sub
sub
dec
dec
and
cmc
daa
jle
dec
into
fidivs
loopne
jno
shll
das
pop
cmp
aas
dec
cmp
aas
imul
pop
push
cmp
sub
adc
sbb
mov
sbb
and
lret
fidivrs
jg
imul
push
outsb
mov
stc
jae
daa
inc
cmc
adc
mov
out
iret
arpl
push
mov
or
fistps
push
sbb
and
movsl
cmp
pop
test
sub
negl
daa
lcall
or
mov
lods
mov
add
int
adc
push
jp
stc
stos
pop
sub
aad
cwtl
pop
mov
leave
push
xor
js
movsl
xor
push
cmp
xchg
inc
mov
and
and
cmp
or
and
in
fwait
xchg
sub
mov
lods
cmp
push
sbb
jbe
inc
divl
jnp
mov
cld
sbb
push
ds
addb
fistps
in
cmp
and
cmp
ja
in
push
rorl
mov
pop
mov
jg
cmpsl
mov
jle
repnz
add
cld
or
lock
stos
or
fbld
and
jo
add
add
inc
cwtl
lcall
xchg
scas
push
insl
les
mov
loop
ds
cwtl
mov
popf
lods
cmp
sahf
cmp
testl
data16
add
cmp
cmp
lea
dec
and
mov
lea
stos
pop
jecxz
out
fists
xor
and
sarl
push
xor
or
out
lret
daa
and
push
ds
jo
out
nop
pop
jnp
mov
fbld
imul
mov
pop
sbb
stos
dec
mov
out
ret
xor
sti
bound
adc
test
mov
push
cmc
push
enter
ret
fimuls
fs
ret
ss
leave
mov
rorb
xor
shll
sub
lret
push
ret
ret
pop
mov
dec
notl
sbb
roll
sahf
and
jmp
imull
mov
cli
scas
sar
dec
adc
mov
pop
sub
dec
lods
ficomps
int
add
jne
outsl
cmp
sbbb
mov
cmp
cmp
inc
fcom
daa
dec
xchg
or
movsl
xor
pop
les
cli
inc
mov
in
mov
mov
mov
popa
jg
push
mov
into
or
push
pop
mov
jae
in
fidivs
icebp
push
dec
mov
sub
dec
push
cs
push
mov
and
sahf
xchg
std
mov
sub
iret
mov
sbb
test
mov
sti
xchg
xor
sti
ud2
mov
push
sub
dec
loop
negb
lret
add
lock
adc
pushf
in
into
pop
pop
enter
jg
fidivs
inc
push
sub
sbb
insl
sbb
inc
xchg
sub
daa
out
inc
dec
push
mov
add
mov
xchg
and
imul
fstps
cmpsb
inc
sbb
outsb
loope
jmp
sub
lea
cmpsl
mov
mov
loopne
stc
mov
mov
adc
sbbl
sub
sar
out
enter
pop
dec
xchg
aam
push
movsl
std
test
sub
push
jo
sub
add
jl
sub
push
or
pop
adc
mov
fadds
pop
aas
out
or
into
pop
test
shl
jl
ds
scas
jnp
add
ret
sub
or
sbb
push
sub
push
pop
fisubs
les
insl
xorb
adc
sbb
mov
insb
add
and
sub
pop
test
push
jno
lret
sbb
mov
mov
fsubr
fnsave
fwait
and
mov
dec
leave
cmp
addr16
xchg
push
mov
adc
mov
jl
je
add
add
cmpsb
jge
test
add
fs
sub
push
orps
ja
mov
mov
add
int3
mov
lods
outsl
lret
nop
mov
ficoml
mov
ret
test
pop
lock
pop
mov
daa
imul
inc
or
ja
dec
test
inc
dec
pop
js
inc
adc
outsb
lahf
imul
mov
jnp
inc
ficomps
push
data16
mov
sbb
pop
lea
xlat
push
decb
sbbb
sub
cmp
adc
stos
clc
les
clc
outsl
sub
pop
fldt
pushf
std
inc
fistpl
push
and
pop
push
push
je
xor
aad
mov
push
mov
mov
pop
jo
out
or
insl
jb
jne
xchg
xor
fcoml
hlt
mov
mov
inc
xchg
pop
nop
out
lret
and
push
insb
scas
sti
sbb
incl
stc
mov
xchg
data16
popa
out
lds
and
pop
and
push
and
ljmp
fnstcw
clc
pop
lret
cmp
cmp
push
and
mov
mov
ret
mov
arpl
data16
daa
mov
sub
add
xor
mov
int
sbb
stc
nop
lcall
nop
shlb
es
cmpsb
pop
test
or
les
mov
das
mov
gs
xchg
std
pushf
dec
jecxz
xchg
dec
popf
mov
pop
add
fcoms
pop
movsb
push
xor
jg
movsb
daa
or
hlt
cmp
adc
lret
push
sub
cmc
jne
loop
repz
cli
dec
mov
sti
jbe
and
xchg
inc
lods
mov
repnz
adc
or
je
xchg
xchg
mov
xchg
jmp
ljmp
pop
jae
xor
push
xor
lea
popa
sub
adcl
xchg
xchg
mov
int3
pop
data16
aaa
xor
sbb
push
testl
shlb
dec
cmp
pop
jno
sub
fcomp
shl
dec
gs
movsb
aas
mov
pop
inc
loop
std
jg
push
mov
pusha
mov
jae
adc
data16
mov
fnstenv
addr16
push
add
es
data16
inc
cmpsl
add
jmp
int
xor
adc
imul
fld
sbb
lcall
hlt
dec
into
jb
aas
gs
dec
stc
or
push
push
in
inc
aam
sub
sbb
les
jns
push
adc
inc
addl
scas
ficoms
iret
stos
xor
repz
lods
xchg
insl
push
and
mov
shll
pop
xchg
inc
push
cld
dec
fmull
sbb
clc
pop
stos
xchg
fimull
jp
lock
fstps
subb
repz
inc
popa
aas
cltd
fdivrs
cmp
lcall
and
cmp
pop
inc
adc
int3
sahf
add
test
inc
lods
xor
mov
imul
jmp
movsl
cltd
repnz
dec
dec
daa
mov
pop
sub
movsb
stos
sub
push
lds
aaa
cmp
jecxz
scas
dec
inc
loope
imul
jmp
and
mov
inc
jle
push
daa
mov
jbe
cmp
leave
or
dec
xchg
popl
sub
enter
imul
int
xchg
inc
sbb
fwait
inc
mov
jl
xorl
adc
push
push
add
or
outsb
mov
push
jns
sbb
stos
xor
xchg
mov
cmc
mov
xchg
call
and
xchg
or
pop
mov
or
jnp
xor
loop
and
xor
fcmovbe
jl
mov
dec
inc
inc
dec
jbe
aad
mov
rorl
mov
jecxz
mov
mov
sbb
jle
outsl
movsl
ljmp
push
ja
inc
int3
movsl
sbb
sub
pop
xlat
ret
pop
add
push
push
testb
cmp
rorl
pop
jno
jb
outsb
push
jne
stos
fistpll
bound
adc
inc
cmp
mov
ljmp
push
inc
aad
push
cmp
sti
rol
sub
mov
aas
sub
push
popf
arpl
das
mov
jne
cmp
stc
ja
adc
loopne
inc
lahf
sub
out
push
push
push
movsb
nop
mov
sub
in
xor
scas
sbb
aaa
mov
ss
testb
jg
in
es
jae
cmpsb
lret
notb
jle
mov
cld
jg
sbb
adc
test
hlt
and
leave
dec
push
or
and
mov
adc
imul
mov
adc
adc
cmp
mov
std
jbe
aaa
pop
ja
mov
test
hlt
and
mov
mov
jl
or
jnp
ja
xchg
jp
jge
call
sahf
xchg
fisttpll
and
es
pop
lret
and
sti
jae
jb
pop
popa
mov
loop
enter
adcb
pop
xor
dec
lahf
mov
xor
inc
push
inc
idiv
mov
outsb
dec
iret
pop
lock
ficomps
cmpsb
xchg
cmp
lods
insb
add
test
clc
fwait
xor
mov
mov
das
jl
aam
and
sub
jne
adc
pop
mov
ret
mov
cld
in
mov
push
iret
insl
pop
lahf
lock
std
popa
fsubr
shrb
and
loop
inc
lret
jecxz
je
das
xchg
dec
andl
inc
push
mov
lcall
xchg
sub
jbe
lods
dec
data16
std
xchg
xchg
out
int
repz
sbb
fwait
adc
mov
xchg
sub
adcl
scas
mov
sbb
icebp
xchg
jnp
mov
repz
rcl
inc
data16
cld
add
xor
scas
cmp
pop
pop
sahf
mov
mov
in
and
mov
bound
mov
mov
xchg
sub
cld
loop
aaa
clc
fsts
or
sub
aas
js
cwtl
das
jle
inc
out
xchg
mov
fadd
hlt
addr16
std
lea
dec
lret
es
adc
sti
mov
insl
cmp
xor
mov
dec
mov
sub
das
pusha
stos
xchg
dec
nop
dec
movsl
aad
das
mov
test
sub
insb
imul
stos
mov
lahf
pop
scas
ror
sub
inc
add
mov
pop
mov
jo
insl
cmp
xor
inc
push
and
in
in
xor
push
insl
sar
mov
popf
xor
ficoml
xchg
in
loope
mov
nop
dec
cmpps
stc
mov
cmp
addr16
out
call
sub
xchg
mov
adc
int3
mov
in
pushf
out
jns
and
push
xlat
xor
je
push
mov
add
cld
xchg
test
popf
mov
aas
push
dec
bound
int3
fs
sahf
and
ret
jno
pop
mov
or
jg
das
call
mov
push
pop
add
xor
jae
popf
hlt
xchg
iret
and
push
fsub
stos
inc
mov
cmpsl
into
gs
sub
cmp
mov
mov
pushf
sti
push
dec
or
mov
mov
lcall
aam
xchg
cmpsl
push
dec
sbbl
das
inc
sahf
cmc
repz
xchg
ds
xchg
xor
xor
jns
fstp
xor
push
mov
fcmovnbe
push
std
xchg
push
into
fistps
ja
addr16
inc
mov
int
mov
dec
inc
test
mov
adc
cmpb
mov
popa
inc
jb
pop
addr16
test
inc
xchg
mov
add
sub
outsb
inc
jle
xchg
mov
fsub
out
dec
outsl
push
jnp
dec
add
inc
push
mov
sub
xlat
pop
pop
cwtl
popa
add
push
mov
mov
lods
add
stos
xchg
in
pop
adc
lods
jp
shrd
in
je
clc
movsl
lret
aas
mov
jnp
int
shlb
daa
cmp
adc
enter
dec
jnp
jae
leave
pusha
sti
cwtl
xor
out
cwtl
jb
lret
inc
insl
subps
dec
push
inc
pop
movb
ja
leave
fdivrl
out
xchg
popf
jg
dec
loopne
aad
pop
mov
stc
pushf
ja
push
rol
mov
shl
movsl
bound
or
dec
sbb
cwtl
push
xrelease
xchg
fs
add
inc
mov
mov
sbb
test
jb
jp
inc
mov
popf
mov
sub
stos
mov
test
xchg
add
xchg
stos
mov
xor
paddsb
sub
and
lds
insl
adc
lret
cmpb
enter
pop
pushf
mov
ljmpw
sub
cmp
cmp
es
jno
clc
dec
dec
cmp
xor
idivl
push
test
xchg
dec
jb
mov
gs
mov
add
push
pop
notb
inc
cmpsl
jl
std
je
and
ss
dec
xchg
subb
ret
mov
mov
out
jae,pt
xchg
aad
xchg
xchg
outsb
clc
cmp
aad
adc
ss
adc
push
loope
inc
push
rclb
dec
data16
lret
cmp
inc
dec
pusha
mov
sub
pop
mov
xchg
sub
aad
ja
lret
sbb
cld
push
leave
sub
mov
jle
or
in
xorl
mov
cmp
or
dec
sub
cwtl
push
in
insl
push
lods
das
pop
xchg
addl
mov
push
push
mov
outsb
xor
lods
aaa
dec
and
jg
xor
scas
enter
and
adc
das
jmp
mov
pop
xor
jne
mov
shrb
movb
movsl
add
pop
aas
jg
pushf
pop
push
mov
pop
cmp
imul
cmp
mov
pop
push
pop
dec
fimuls
mov
outsl
jnp
xchg
test
add
push
or
mov
test
mov
in
pop
loopne
inc
xchg
jae
mov
test
jl
xchg
arpl
popf
jne
xor
popl
push
mov
leave
cmpb
xchg
leave
pop
mov
lods
ljmp
pushf
ja
jnp
imul
cmpsl
fisttpl
repz
mov
cwtl
xor
fs
enter
jnp
bsr
std
rol
adc
or
addb
jg
cltd
and
xchg
mov
ss
or
cld
sarb
ja
in
cmpsl
dec
bound
jl
loop
cmp
dec
cmp
xchg
inc
mov
jne
mov
movsl
adc
test
mov
repnz
xacquire
sti
data16
sub
iret
aaa
roll
lock
stos
pop
inc
push
xor
mov
sbb
cmp
push
xchg
andl
mov
adc
sub
xor
dec
and
fs
xor
dec
xchg
mov
push
cmp
xchg
sti
jbe
pop
xchg
ja
data16
cs
cmpsb
cmp
into
test
pop
or
lock
enter
mov
or
add
movsb
xor
stos
pusha
neg
clc
nop
mov
scas
dec
ja
cmovbe
cwtl
ja
cmp
test
jns
lret
cltd
pop
jge
ljmp
sub
mov
dec
dec
sbb
imul
push
inc
mov
xchg
lds
dec
xchg
inc
mov
fsub
cmp
inc
mov
jmp
push
lock
and
and
fisttpll
jb
push
jmp
fwait
xor
sub
mov
loop
jne
lods
and
pusha
lods
jmp
pop
sbbb
cwtl
push
jne
jecxz
mov
jnp
in
in
jg
push
mov
scas
jecxz
cmp
pop
push
xchg
push
pop
xchg
xor
stos
cmp
ror
adc
add
push
aas
xor
xor
mov
cmpsl
out
adc
std
xchg
andb
insb
cltd
sbbb
add
jge
xor
jne
jge
sub
or
or
pop
mov
and
jnp
icebp
stos
jl
shlb
jle
hlt
out
sub
inc
or
shll
push
aad
push
mov
fists
inc
fbstp
cli
loope
mov
shrb
mov
enterw
add
xor
sub
push
add
dec
mov
fstps
rorl
pushf
cwtl
dec
dec
xor
or
daa
or
in
lahf
dec
and
nop
dec
cmp
aaa
popf
in
dec
jmp
mov
or
mov
adc
inc
fcoms
iret
lods
pop
jno
push
test
xor
repz
mov
adc
ret
lcall
adc
sbb
pop
mov
inc
add
fincstp
lahf
or
xchg
sub
xchg
negb
cmp
add
pop
mov
and
push
les
mov
movsb
cmp
pusha
leave
test
ret
aaa
xor
inc
test
fisubl
inc
add
cmp
js
movsb
repnz
cmpsl
int
mov
add
jle
and
stos
cli
out
insb
dec
loope
pop
cmpsl
inc
mov
or
mov
insb
push
inc
lds
jmp
mov
pop
sub
jb
fwait
pushf
lret
xchg
lret
imul
adc
scas
sub
es
xchg
es
push
dec
adc
mov
negb
mov
push
cmpsl
loope
imul
addr16
xor
add
or
stos
add
dec
movsl
iret
xchg
inc
lods
negl
in
imul
outsl
mov
pop
mov
cwtl
pop
lock
dec
addr16
push
js
dec
mov
mov
dec
fsts
ds
dec
repnz
pop
mov
dec
add
pop
das
lea
int
dec
movsb
push
fcom
push
scas
sbb
cmp
xor
cs
stos
aaa
mov
adc
cmp
sub
popa
test
add
loop
scas
pop
std
cli
fbld
ds
das
aaa
push
jmp
into
lahf
stos
pop
cmc
xor
adc
out
bound
or
insb
mov
and
cmp
lods
addl
repnz
arpl
xchg
decl
jns
xchg
xchg
dec
dec
aam
add
xchg
adcl
fisttpll
push
jmp
mov
repz
dec
aaa
push
fs
pop
les
sti
add
mov
gs
mov
popa
sub
rcrb
jp
mov
adc
shl
mov
frstor
mov
mov
add
fisttps
shlb
add
xchg
jmp
cmp
add
imul
repnz
setge
sub
inc
mov
dec
xchg
push
ss
outsb
rorl
das
push
mov
or
ret
ret
push
dec
arpl
dec
test
cmp
and
inc
dec
cmp
scas
push
ss
fcoml
adc
inc
xor
arpl
and
shlb
je
pop
testl
adc
pusha
lret
mov
xor
pop
cmp
sbb
daa
xor
ret
rcrb
loop
aad
push
or
push
mov
jmp
pop
pop
pop
ljmp
push
or
je
les
xchg
insl
ret
xchg
dec
push
aas
sbbb
dec
mov
xchg
mov
sbbl
mov
lea
push
cmp
call
pusha
pop
testb
scas
adc
in
push
hlt
cmc
or
sti
cmp
jb
imul
jmp
inc
arpl
shl
pop
mov
push
stos
jle
jne
jbe
repnz
js
cmpsl
ds
xchg
xchg
pop
cmp
jmp
mov
xor
into
enter
mov
std
popa
inc
xlat
xchg
ret
jne
pop
xor
jae
enter
xchg
sub
and
hlt
inc
mov
inc
mov
ret
in
inc
dec
or
mov
xchg
scas
jno
ret
sbb
mov
pop
loope
fcoms
jl
rcrb
push
push
cmp
push
lret
js
std
jno
movsl
mulb
out
push
sbb
adc
ss
mov
xchg
add
das
repnz
mov
push
fnstcw
in
add
inc
jo
js
stos
xor
mov
xchg
add
daa
push
aas
test
jb
and
pop
movsb
inc
std
arpl
out
idivb
or
cmp
sbb
push
leave
fstpt
sbb
call
lret
pop
fmuls
or
sbb
push
inc
mov
xchg
mov
push
mov
adcb
rcrl
adc
fpatan
add
insb
pushf
hlt
mov
les
pop
hlt
int
ret
out
jnp
push
jo
mov
inc
imul
in
push
adc
add
cmp
xor
jbe
xor
jae
daa
rorl
in
xchg
or
lret
xor
je
in
ret
add
jp
xchg
xlat
hlt
in
sub
gs
or
popf
das
push
mov
andb
pusha
test
dec
mov
pusha
lret
sub
jnp
outsb
ficoml
fistpl
xlat
jns
call
je
fldt
push
mov
cmp
xor
inc
push
jmp
rcrl
mov
loop
adc
stos
mov
insl
stc
fcom
fwait
xor
xchg
add
cmp
xlat
outsb
mov
ja
inc
xchg
je
leave
mov
leave
jle
xchg
sub
int3
pushl
lahf
imul
dec
or
pop
stos
mov
pop
je
insb
sarl
cmpsl
dec
jbe
loop
dec
loopne
xchg
pop
pop
clc
cwtl
or
pushf
test
push
add
adc
das
jg
xor
xchg
mov
mov
into
lods
pusha
fxch
xchg
int
cld
mov
loopne
add
mov
leave
mov
je
sbbl
mov
nop
outsb
pop
add
into
aaa
lret
loope
sbbl
xor
mov
jb
push
ja
inc
inc
fstpt
fidivrl
into
cmpb
stos
adc
fcoms
iret
xlat
push
xchg
ficomps
stc
in
add
add
inc
fldcw
test
inc
sbb
add
mov
in
jg
inc
mov
dec
addr16
push
fildl
loop
fildl
mov
lock
inc
cltd
adc
jns
mov
stc
das
inc
imul
inc
sbb
xor
fisttpll
std
js
rorl
xchg
mov
or
and
mov
mov
jl
mov
mov
xchg
mov
cmp
mov
lock
cmpsl
push
mov
aaa
fldcw
xor
mov
and
and
sbb
popa
mov
pop
lahf
xchg
mov
adc
jb
add
sub
add
cli
shlb
xchg
push
cwtl
das
int
movsl
xor
add
xor
xchg
sbb
push
jns
ret
call
lea
mov
push
mov
xchg
dec
bound
ja
and
cltd
and
dec
das
ds
push
push
or
test
movsl
mov
fldt
mov
add
jge
cwtl
pop
and
mov
mov
push
cli
xchg
test
and
outsl
mov
stc
or
mov
rol
cmpsl
imul
push
xchg
cltd
jecxz
inc
mov
xor
jae
or
xchg
mov
cs
inc
pop
xchg
pop
bound
dec
jne
in
add
inc
lea
sbb
fs
fldt
dec
pop
and
xor
pop
jb
adc
fstp
mov
ljmp
popf
shrl
dec
stos
push
je
fistpl
mov
inc
push
jp
fists
jl
icebp
cwtl
test
pop
pop
repz
les
xchg
inc
int
push
cmp
xchg
sub
xlat
mov
pop
mov
addr16
push
imul
das
ret
xor
dec
loope
popf
xor
fdivp
push
xchg
mov
mov
xchg
add
int3
push
adc
mov
or
fdivl
jno
loope
mov
xchg
push
cwtl
faddl
leave
aas
sbb
lret
bound
xor
andb
push
pushf
arpl
mov
push
shlb
adc
rcl
lcall
jo
pop
cmp
ret
ss
sub
pop
sub
xchg
add
sub
pop
inc
test
add
xor
rol
fldl
icebp
dec
xchg
inc
pop
iret
push
cmp
in
test
jmp
add
adc
in
and
test
dec
cmc
movsb
aad
and
or
call
jb
sbb
mov
jbe
and
xor
and
pusha
xchg
mov
call
lret
mov
fists
js
inc
xor
jbe
lods
ljmp
in
mov
pop
push
ss
dec
gs
xchg
jbe
xchg
jg
adc
data16
outsl
xor
icebp
cmp
imul
aam
xchg
insb
jo
outsb
repz
inc
xchg
add
or
mov
mov
push
add
or
xchg
in
fcoml
arpl
mov
push
seta
xor
jecxz
loopne
pusha
mov
cmp
and
ja
cld
cmpsl
push
cmc
mov
xchg
pushf
sar
mov
mov
jb
sub
push
sub
and
add
pop
xor
mov
test
cmpsl
mov
sbb
dec
imul
pushf
imul
sarb
sbb
and
in
pop
pop
test
xlat
lret
push
add
sbb
mov
sbb
jbe
add
and
xor
xchg
inc
popf
shr
and
sbb
imul
ss
std
mov
dec
jecxz
shrl
testl
push
jb
or
lcall
dec
xchg
pop
jnp
pop
lods
fs
and
out
add
out
rolb
ror
push
xchg
sub
mov
sub
dec
aam
fnstcw
cmp
ja
pcmpgtw
add
pushf
push
push
sub
repnz
std
das
shrl
mov
outsl
jo
loop
dec
pop
insl
shll
clc
inc
fs
and
adc
mov
dec
imul
sub
aad
and
cmp
test
dec
int
mov
out
cmc
jp
cmpsl
int3
push
push
fdivrs
cli
fildll
mov
scas
aas
lods
cltd
or
mov
mov
mov
jo
pushf
dec
add
testl
scas
pop
inc
pop
xchg
add
loop
shlb
add
scas
inc
adc
lahf
lods
jbe
int3
fdivl
jae
mov
mov
fisubl
and
mov
lods
and
mov
adc
or
in
sub
shlb
inc
mov
dec
divb
stc
push
fs
push
stc
mov
faddl
iret
in
mov
loopne
rorb
push
popa
mov
push
and
fsub
mov
fldt
mov
loopne
insl
loop
inc
out
pop
adc
out
push
mov
sti
jae
push
xor
xchg
mov
mov
xchg
mov
cltd
push
push
cmpsb
pop
lahf
inc
xchg
mov
rclb
sub
lret
insw
mov
pop
xchg
jge
jecxz
dec
dec
in
mov
nop
cmp
movsl
jg
xlat
int3
cmp
cmp
pop
pop
ds
subl
pusha
cld
lcall
in
pop
pop
into
idiv
jp
lcall
and
and
mov
pop
jno
cmp
lea
pop
movsl
imul
push
sbb
ljmp
fidivs
data16
pop
dec
push
movsl
cmp
out
sbb
inc
jbe
push
adc
daa
mov
adc
push
dec
loopne
movsl
mov
pop
or
jl
pop
fcmovnb
xor
mov
xor
xchg
jbe
shlb
cwtl
or
mov
je
cmp
imulb
xchg
xchg
sub
into
mov
jbe
inc
daa
mov
sub
sti
xchg
out
jmp
add
dec
fwait
pop
mov
lret
mov
mov
jnp
inc
insl
mov
call
dec
loopne
iret
data16
xchg
sub
stc
xchg
scas
inc
add
dec
loopne
or
lea
cli
pop
mov
in
sub
cmp
jmp
rcr
les
inc
mov
xor
push
insb
add
jne
push
mov
shr
test
dec
ret
pop
aas
push
jp
dec
out
mov
loopne
jge
sbb
add
loope
sub
leave
push
sbb
inc
fstpl
into
fstpt
ror
push
jno
inc
push
fsubrs
loopne
adc
mov
into
daa
cmp
cwtl
cmp
jns
mov
add
xor
pop
enter
cmp
push
mov
test
test
aam
jmp
pusha
sub
push
je
rorl
insb
fcompl
out
ret
push
jl
scas
repz
sbb
out
jne
js
jnp
mov
outsl
push
cld
mov
inc
cmovle
dec
push
and
lret
mov
push
push
scas
inc
lds
mov
jno
pushf
sbb
cmp
add
push
lods
cmpl
jmp
push
ss
lret
shlb
push
dec
in
cmpl
mov
shl
call
cmp
repnz
xor
add
and
test
enter
popf
push
mov
movsb
cmp
test
mov
pop
out
xchg
cmpsl
mov
outsb
fbstp
dec
test
mov
mov
fdivp
pop
lock
inc
fdivrs
cmp
not
js
dec
push
push
mov
fstl
into
cli
sub
filds
icebp
mov
orb
dec
mov
fwait
jecxz
pop
aad
loopne
icebp
pop
sbb
xchg
inc
fs
push
and
push
mov
inc
mov
xor
dec
popf
jecxz
xchg
lock
mov
sbb
lret
repnz
sbb
je
jle
add
nop
fisubl
xchg
dec
lods
je
imul
aam
int
or
sbb
xchg
adc
rcr
shll
repnz
insl
test
or
sub
pop
dec
mov
cltd
decb
sar
es
rcrb
sub
push
push
mov
add
cmpl
sti
dec
push
imul
lret
mov
mov
add
dec
sbb
adcl
pop
ja
xlat
xchg
or
cs
mov
and
add
mov
lcall
and
push
mov
lods
fistpl
pop
push
scas
cmp
cli
adc
add
xchg
dec
xchg
daa
fdivs
dec
movsb
pop
sub
fiadds
xchg
or
pop
xchg
sub
pop
scas
les
outsl
sub
rclb
incb
idivl
leave
test
mov
mov
test
scas
sub
nop
stos
fisttps
int3
jnp
push
leave
in
push
jmp
add
outsl
push
sub
inc
ds
mov
jnp
ja
mov
fs
lods
sub
pushf
fisubrs
adc
mov
sbb
out
pop
out
gs
add
sbb
cmpsb
add
add
pop
les
xchg
jle
stc
or
lahf
sbb
test
push
insl
clc
nop
sbb
nop
imul
jp
out
pop
mov
cmp
gs
push
adc
add
cmp
push
mov
jmp
int
stos
push
and
mov
dec
pop
movsb
shrl
mov
lahf
incl
insb
fcoml
jp
sbb
mov
pop
inc
out
or
arpl
jns
pop
and
adc
add
and
xor
push
inc
mov
fldcw
fiaddl
movsl
out
mov
jg
add
or
and
es
mov
cs
addr16
adc
lret
sti
icebp
mov
in
in
dec
loop
gs
out
lcall
insl
jne
loope
cmpsl
outsb
mov
lods
stos
inc
fmulp
push
icebp
lock
fmuls
pop
pushw
lods
xchg
push
jne
pusha
stos
push
movsl
cmp
in
push
ret
test
rclb
mov
xchg
stc
cmp
mov
jmp
sbb
call
mov
mov
insl
fsubr
gs
xchg
or
or
inc
pusha
cmp
rolb
add
in
jnp
gs
lcall
push
and
xor
pop
mov
adc
cltd
das
aad
dec
mov
divb
rcrb
rclb
cmpl
adc
inc
loop
out
rcll
push
or
les
jo
aad
mov
stos
mov
cli
pop
js
fidivs
jnp
mov
sub
xor
xchg
push
aaa
shr
mov
mov
fucomip
xchg
in
pop
jecxz
or
jl
in
cmp
cwtl
xchg
shlb
ret
inc
shl
icebp
cmp
push
lahf
lret
cmpsb
nop
arpl
xrelease
mov
movsl
or
jns
sub
fimuls
jge
fs
mov
mov
pop
and
popa
pushf
rcl
push
pavgb
sub
ret
jge
mov
sti
and
shl
and
xor
and
iret
and
adc
ret
jns
inc
jno
repnz
mov
rolb
dec
cmp
cmp
fidivrs
nop
mov
jmp
mov
aad
push
imul
add
sbb
xor
inc
push
jnp
jge
jns
xchg
xchg
rolb
cmp
add
popf
cmpsl
fcmovb
pop
or
mov
pop
xchg
pop
loope
test
and
lcall
and
iret
lods
aas
mov
dec
ret
and
pushf
lret
cli
dec
xor
cmp
mov
nop
pushf
xor
push
mov
test
pop
add
repnz
jge
cmp
enter
cmp
popa
in
sub
outsb
call
orb
and
mov
xor
mov
outsb
pop
cmpsb
notb
cmpb
jle
lock
jmp
cmpsb
jl
lea
xor
movsb
daa
fwait
push
in
jp
addb
mov
pop
loopne
stos
xadd
test
push
stos
repz
add
lods
ss
cmp
and
sub
dec
shr
inc
add
scas
dec
push
pop
sahf
inc
test
and
ja
mov
mov
lds
insl
fldcw
hlt
mov
mov
sbb
das
xor
test
es
hlt
leave
dec
in
xchg
jmp
dec
dec
rorl
sbb
cmp
lock
add
inc
xor
cltd
fmull
sbb
mov
push
call
mov
dec
pop
inc
or
mov
sub
pushf
fucomip
jle
out
popa
in
jne
popf
mov
sub
mov
sub
fucomip
mov
jp
ret
hlt
pop
in
mov
xchg
scas
inc
xchg
jo
faddl
add
sub
shll
lret
mov
mov
dec
pop
jmp
out
sbb
stos
mov
jmp
jecxz
adc
cmpsl
adc
lods
mov
aas
or
mov
mov
outsl
movsb
cmp
lock
dec
fstpl
add
cmpsb
xor
shl
lcall
je
or
jb
imul
sahf
jbe
xchg
movsb
test
testb
inc
fucomp
rcl
jp
leave
fisttpl
pop
fistpll
adc
push
inc
xchg
add
push
inc
xchg
mov
adcb
call
jnp
es
pmulhuw
mov
fucomi
imul
dec
cmc
pop
out
shl
je
fsubrs
jecxz
push
out
lcall
pop
sahf
mov
les
and
arpl
scas
fdivrl
mov
sbbl
fsubs
xor
pop
and
in
lahf
mov
aad
insb
cltd
testl
mov
data16
test
js
cmpsb
cmp
pop
stos
nop
cmpsb
xchg
rorl
or
mov
jne
in
xor
faddl
push
push
call
test
xchg
adc
mov
out
js
mov
les
nop
and
jbe
repnz
pop
scas
mov
loopne
ss
pop
pop
out
dec
sahf
push
mov
das
xchg
bound
loope
push
loop
movl
jg
or
mull
push
or
fdivrs
push
fbstp
push
cmpsb
imul
daa
popf
and
sub
dec
lods
push
mov
outsb
jae
aaa
mov
mov
out
xor
sub
out
cmc
and
adc
stos
push
jmp
fildl
jae
test
pop
dec
js
aaa
push
in
int
cmp
mov
jnp
dec
and
lcall
inc
mov
sbb
jge
pop
adc
pop
add
roll
adc
sbb
and
popa
xor
sub
arpl
xchg
jmp
mov
scas
pop
or
inc
ss
mul
mov
jmp
pop
cli
mov
mov
xor
lods
mov
fdivr
mov
or
cmp
fisttpll
out
pusha
adc
lods
pop
inc
int
add
popa
in
jl
add
xrelease
mov
imul
ds
arpl
pusha
in
ficompl
add
xor
pop
push
in
fs
mov
mov
rorb
sarl
ss
outsb
inc
popa
ja
push
in
dec
call
jae
mov
push
add
repz
xchg
lret
rcrb
mov
dec
arpl
xchg
fsubr
ss
inc
aaa
inc
std
jbe
test
mov
jns
into
loop
lcall
xor
xchg
scas
pop
push
outsl
jns
dec
test
out
jnp
icebp
das
cwtl
out
fldt
daa
mov
push
and
stos
dec
mov
fadd
jnp
xor
pop
std
jnp
pop
insl
psrld
pop
mov
lret
jns
cmpsl
mov
sbbl
sti
xor
aas
andl
sub
les
pop
ss
mov
into
inc
out
out
data16
xchg
rorl
aam
jge
loope
jecxz
jne
icebp
add
xchg
jl
mov
ficoms
imul
pop
movsb
cmp
shll
enter
sbb
xor
fdivl
mov
int
pop
mov
add
test
scas
je
aas
addb
mov
push
inc
sti
mov
pusha
out
and
push
xor
and
add
jns
jp
roll
jecxz
add
mov
sub
cmp
sub
std
lods
sti
mov
loope
flds
push
inc
cli
jmp
test
or
mov
mov
shlb
pop
jnp
lods
cmp
imulb
sti
push
mov
das
pop
rorl
and
add
push
inc
xor
mov
adc
or
pop
dec
in
xor
test
add
mov
xor
repnz
imul
xchg
sbb
pop
mov
xchg
hlt
xchg
sub
mov
cmp
mov
pop
repnz
push
xor
pop
sahf
jne
imull
imul
loopne
dec
lea
test
jno
rclb
xor
scas
mov
cmp
xor
clc
dec
jmp
cli
xchg
sub
push
es
mov
mov
shl
dec
hlt
xchg
push
add
sarb
rcrl
and
push
add
mov
inc
shl
ficoml
pop
arpl
push
aas
ljmp
dec
pop
xor
scas
dec
sarb
or
xor
scas
sub
scas
xchg
lock
mov
rcr
inc
fidivl
jbe
sbb
inc
mov
mov
ljmp
inc
jecxz
jg
mov
lahf
cmp
mov
fs
push
mov
dec
adc
lret
adc
out
cmovl
mov
or
mov
outsl
xchg
dec
dec
imul
aas
hlt
mov
push
jb
mov
xchg
cmc
ret
ret
sbb
mov
fldenv
clc
xchg
mov
rclb
fiaddl
mov
lock
cld
xchg
popf
je
push
out
lahf
xor
fldcw
mov
testb
cmpsl
les
mov
push
cmpsl
jno
pushf
mov
fsubrp
dec
aad
pop
in
loop
outsl
mov
push
shrl
push
mov
push
jbe
fs
add
jge
fsubr
sub
jbe
sbb
mov
cmpsl
out
push
push
icebp
mov
push
add
adc
in
lods
repnz
jge
loop
repnz
mov
pop
neg
into
cmp
shlb
add
push
leave
mov
mov
lcall
sti
bound
dec
mov
stos
cmpsl
loop
sahf
adc
cmpsl
xor
pushf
jecxz
jo
push
dec
mov
push
pop
es
pop
cmp
cmp
xor
cmp
mov
xchg
test
xchg
or
lds
stos
movb
cli
data16
popa
and
mov
insb
xor
movsb
sub
mov
sub
adcl
sti
xchg
lahf
dec
pop
shl
jo
sarl
test
push
in
nop
lret
rolb
fwait
sti
andl
jne
xor
icebp
cmp
xchg
and
sahf
adc
pushw
jmp
fcmovnu
sub
xlat
add
jmp
mov
xchg
cmp
movsl
cmpsb
aas
addr16
out
mov
adc
sbb
testl
lret
fxch
sub
inc
inc
sbb
imul
lea
ljmp
jo
pop
popa
adc
in
ja
pop
cmp
mov
stc
out
movsb
ret
shlb
fwait
inc
loope
jbe
inc
stos
and
push
pop
nop
add
jp
cmp
jecxz
xlat
or
ret
pop
adc
sub
je
cmp
data16
push
mov
orb
jp
add
pop
outsl
idivl
dec
mov
pop
sbb
xchg
lea
out
jmp
fwait
push
adc
xor
testl
xor
clc
pop
mov
sbb
pop
cmp
and
outsb
movsb
mov
mov
lock
cmpsb
ja
clc
jb
dec
push
and
mov
pop
inc
sbb
jb
ds
jae
xor
sub
pop
inc
mov
mov
cmp
data16
mov
lea
add
arpl
sbb
cs
ret
hlt
adc
mov
das
push
adc
and
aam
xlat
mov
icebp
icebp
pop
cmp
xor
lcall
dec
ret
loope
ljmp
jne
jb
pop
outsb
xor
pop
popf
insl
pop
mov
push
loopne
and
sub
movsb
jecxz
ret
mov
cmp
inc
dec
xlat
bound
push
ss
sbb
jg
lds
add
out
cmp
dec
in
repz
aam
nop
fisubrs
icebp
mov
dec
xchg
mov
adc
jg
xor
ret
les
or
jg
mov
push
dec
iret
pop
enter
dec
fxam
sub
fs
popf
out
pop
jae
pop
cmc
shl
and
leave
and
add
add
faddl
rcll
add
outsl
inc
lea
lods
mov
std
mov
inc
lea
fdivr
filds
and
sbb
sbb
mov
xor
xchg
popa
push
xchg
and
mov
nop
pop
repz
loop
cld
or
cltd
push
pop
mov
out
notl
push
jecxz
mov
xchg
into
fdivr
and
pop
sti
jnp
lods
sbb
mov
leave
mov
pop
out
mov
jle
cmovge
cmpsb
cwtl
imul
mov
sub
mov
out
lahf
stos
call
and
inc
lods
lret
aas
push
mov
push
addr16
xchg
inc
push
fisubl
add
and
dec
fxch
loop
mov
repnz
inc
leave
xchg
iret
and
cld
xchg
cwtl
repz
xor
addb
or
dec
pop
pop
jbe
out
dec
sbb
std
adc
push
and
xchg
cwtl
das
inc
jnp
add
dec
add
lret
inc
lods
add
mov
mov
stc
adc
testb
roll
jle
es
sahf
in
je
mov
jg
sbb
sarb
lahf
add
jbe
addb
cmpsl
cld
loop
mov
test
aam
cmc
fnsave
mov
jge
sub
and
push
sbb
inc
movsb
pop
ljmp
call
jp
fistl
testl
sbb
nop
sub
or
out
int
and
jmp
aaa
rcrb
cmp
sbb
push
fadds
cmp
xchg
stos
jb
jb
mov
mov
cli
iret
out
movb
dec
call
sbb
in
or
out
jg
jle
iret
pop
mov
fiadds
outsb
std
aad
mov
xchg
mov
jnp
push
push
fwait
jbe
sub
fidivl
pop
cmp
and
pop
pop
pop
cmp
mov
pop
gs
mov
outsb
scas
cmc
lret
jmp
cmp
icebp
or
jnp
ljmp
cltd
inc
mov
sahf
sub
mov
decl
repz
andl
scas
dec
mov
movb
push
mov
lea
loope
mov
pop
sbb
inc
push
call
add
mov
add
inc
dec
dec
and
adc
and
pop
jb
ds
mov
push
dec
int3
inc
add
notb
and
push
fisttpl
test
insb
adc
das
mov
lret
js
mov
adc
mov
cmpsl
imul
test
or
lods
fisttpl
addr16
mov
int
sarb
and
and
cmp
cmpsl
push
cs
adc
sub
push
dec
out
jb
xchg
or
sbb
iret
pushf
pop
push
decl
and
out
adc
dec
push
mov
repz
icebp
enter
addl
fidivs
sbb
inc
fpatan
out
in
cs
mov
aaa
stos
mov
sub
pop
dec
push
js
sub
insb
mov
or
or
sbb
test
leave
data16
jnp
scas
pushf
inc
lods
cli
sbb
scas
push
and
mov
sahf
insl
dec
xchg
add
and
fldcw
adc
dec
pop
hlt
cmp
stos
outsb
psubw
iret
inc
out
ja
jns
or
dec
arpl
in
xor
enter
insb
jmp
dec
rorb
add
fisttpll
xor
adcb
gs
loop
or
sub
dec
lods
mov
dec
stos
fidivl
jecxz
cmp
cmp
in
rcrb
and
inc
inc
mov
xlat
inc
sbb
rcrb
sub
pop
int
and
mov
mov
mov
jge
mov
mov
cmpsb
mov
mov
fnsave
pop
insl
shrl
dec
mov
fnsave
scas
xchg
inc
test
cs
fiaddl
or
ret
xchg
cmpsb
cmp
sbb
clc
or
sub
lea
stc
stos
les
dec
loop
inc
sub
mov
and
pop
outsb
mov
jbe
push
mov
mov
push
jae
dec
cltd
push
sub
test
or
xlat
sbb
loope
lea
push
jge
push
xchg
sub
cmpsb
int3
ret
inc
fidivrs
in
pop
jbe
mov
aam
lret
cmp
push
mov
enter
ja
adc
pusha
imul
jb
aaa
ljmp
lahf
xchg
popf
push
repnz
rol
jns
push
negb
jl
mov
adc
dec
aam
sub
out
mov
xchg
jno
test
idiv
or
push
lds
in
jge
call
adc
add
cli
into
movsl
cli
mov
sbb
sti
add
mov
add
sahf
test
lods
jmp
in
popf
lods
sub
cli
aad
dec
jb
aas
sbb
out
sti
gs
adc
lea
xchg
add
sti
aas
lcall
in
xor
and
fildll
mov
jecxz
sbb
pop
ds
add
sbb
and
outsl
adc
sub
insb
scas
add
repnz
mov
mov
jmp
aaa
mov
jo
bound
jmp
add
in
mov
insl
jge
mov
ja
and
jo
les
ret
mov
sub
enter
add
mov
popa
mov
add
mov
mov
mov
adc
jbe
pushf
inc
shlb
xchg
scas
scas
or
adc
or
xchg
jmp
push
out
lret
mov
sub
pop
sub
mov
scas
push
ret
out
inc
pop
mov
arpl
arpl
or
stos
mov
dec
lods
ret
jle
pop
imul
fwait
jns
inc
cmc
movsl
xlat
xchg
mov
adc
popa
scas
aam
in
mov
outsb
out
roll
jne
out
and
add
pop
sbb
inc
loope
std
pop
ljmp
testl
adc
cltd
mov
leave
outsb
mov
js
icebp
adc
cs
add
movsl
or
rcl
add
mov
ficomps
mov
pop
mov
repz
fs
stos
adc
lret
mov
test
orl
sbb
scas
dec
popf
adc
out
cs
in
push
mov
andb
ja
ja
cmc
daa
into
in
leave
fnstcw
and
fcmovnu
cmpsl
test
sub
hlt
into
and
flds
std
shlb
mov
lds
jnp
lds
dec
pop
sub
cltd
cmpl
mov
mov
mov
fldlg2
xchg
mov
fstpl
pop
scas
or
repnz
ds
mov
adcl
pop
out
mov
xchg
lods
aas
das
mov
aaa
shlb
mov
add
ds
dec
insl
adc
out
jp
gs
insb
nop
mov
call
dec
sub
out
out
fistpl
sbb
stos
into
movsb
ja
fcmovne
leave
mov
flds
or
push
jno
pop
fs
or
test
cmpb
aam
fsubrp
jbe
pop
mov
lret
sub
cmp
dec
fisubrl
imul
aam
insl
add
stos
pusha
mov
mov
pushf
cli
cmp
push
in
xorl
jp
jns
inc
cmpsb
sub
movb
xor
mov
inc
cld
lcall
lcall
pop
ror
out
in
and
xchg
test
movb
inc
sbb
cmc
xor
inc
push
mov
mov
or
iret
push
rcll
inc
scas
inc
ljmp
xor
mov
cmp
out
xor
mov
sbb
mov
sub
pop
cmp
dec
call
daa
lahf
inc
arpl
jbe
in
aas
fldt
test
jg
pop
scas
or
push
jl
and
scas
push
inc
int3
rorb
jl
dec
cmc
sbb
repnz
fdivrl
xor
jmp
jne
sahf
popa
movsb
dec
or
and
gs
add
loop
push
fs
in
adc
les
lret
rcl
ret
sahf
call
incl
bound
out
or
bound
mov
lods
jg
ficoms
or
ljmp
mov
push
addr16
and
mov
mov
add
stc
out
pop
and
mov
scas
and
or
dec
sbb
cltd
pop
xor
addl
adc
movsl
add
mov
jno
lahf
and
testb
pop
pushf
f2xm1
jbe
movsl
push
inc
bound
roll
pusha
dec
mov
cmp
mov
push
adc
jb
mov
jbe
dec
das
mov
loopne
inc
and
inc
sbb
leave
ja
ljmp
sti
aam
test
cld
dec
or
or
inc
jecxz
cli
cmpsb
inc
mov
mov
or
xor
pop
push
mov
in
cmp
pop
mov
jg,pt
cmp
int
and
imul
shrl
cvtps2pd
icebp
mov
lahf
and
mov
xor
xor
inc
cmp
and
int
addr16
sbb
cmp
arpl
xorb
xor
roll
roll
push
cmp
mov
mov
aam
shrl
insb
pusha
out
jo
xorl
pusha
rorb
sti
inc
mov
cli
pop
sub
xchg
sahf
and
out
pusha
pop
xchg
outsb
add
xchg
sub
pop
cmp
sti
das
cmp
xor
sub
inc
jge
pop
es
pop
xor
push
test
test
repnz
dec
test
mov
pop
adc
subl
and
cmp
add
rcrl
lahf
xor
insb
loope
mov
gs
push
jbe
cwtl
and
inc
movsl
cmp
scas
fbld
lahf
adc
popf
rcll
in
and
mov
test
lret
adc
xchg
sub
xor
inc
adc
in
push
pop
pop
fdivs
insl
pop
das
adc
stc
test
cvtps2pd
inc
pop
mov
popa
lret
sub
push
xor
rcr
ljmp
cs
dec
pop
add
jnp
xchg
scas
cmp
cmc
lds
adc
hlt
inc
in
int3
xor
push
sub
into
jns
adc
je
inc
add
outsb
lret
pop
jbe
iret
fnsave
scas
pop
dec
dec
sahf
lea
lds
cltd
jo
outsb
xor
shlb
xchg
cmc
adc
push
lcall
int3
xor
push
roll
ret
adc
xlat
mov
leave
push
stc
push
sbb
or
jae
mov
lea
fidivl
clc
and
pop
aad
and
pop
dec
xchg
pusha
jle
imul
dec
dec
dec
xorb
push
push
mov
mov
dec
scas
inc
jp
enter
push
stc
push
scas
sub
jbe
shlb
mov
or
and
fwait
aas
adc
mov
les
mov
leave
and
mov
push
stc
lea
mov
xchg
xchg
sub
pop
repz
jb
push
movsl
in
add
shll
lret
in
in
leave
mov
cmc
and
add
xor
fsubl
sub
mov
mov
push
scas
add
push
jno
mov
std
xlat
jnp
or
cmpsb
inc
popf
sbb
or
push
jg
pop
in
hlt
and
rcrl
xchg
pop
adc
outsl
andl
dec
mov
movsb
push
sahf
pop
cli
or
push
mov
add
inc
flds
xorl
fcmovne
fcoml
xchg
xchg
ds
in
lds
cmc
mov
shlb
outsl
adc
ret
mov
mov
inc
ficoml
ss
leave
pop
loop
sbb
loopne
pop
std
mov
mov
push
adc
and
mov
lods
inc
mov
inc
push
pushf
js
xor
std
push
cwtl
xor
insb
fwait
pop
insb
stos
mov
rolb
out
icebp
mov
jbe
mov
hlt
fs
mov
xor
xor
test
pop
repz
lds
add
bswap
sarb
push
data16
orb
mov
shll
jnp
push
jbe
push
test
popf
inc
insl
int
mulb
incb
adc
ljmp
mov
test
jne
fwait
bound
adc
adc
test
and
lret
iret
and
and
cmp
adc
in
in
jne
ja
iret
adc
or
pop
scas
sti
jg
insl
mov
xor
shll
inc
xor
cmp
mov
push
push
out
subl
jp
ljmp
insb
stc
scas
mov
inc
pop
popa
imul
lods
shrw
adc
ds
xchg
jo
cmp
xchg
push
cltd
out
dec
fisttps
and
arpl
adc
pusha
or
ficoms
cmpsb
test
push
mov
xchg
jb
cmp
ret
fdivp
cmp
jbe
xchg
push
movsl
mov
clc
fidivl
pop
les
outsl
xor
int
punpckhwd
or
test
aad
nop
sub
adc
jge
pop
mov
xor
xchg
push
shl
shl
push
lret
xchg
xor
dec
cmp
outsl
test
insb
mov
or
sub
sbb
lcall
sbb
lock
outsl
lods
and
mov
scas
sarl
in
mov
out
mov
add
lock
into
xor
inc
lcall
stc
sbb
icebp
ret
mov
int3
xchg
stos
xlat
fsubl
gs
stos
or
push
xor
push
rcl
test
dec
pop
jb
sbb
jo
fldcw
mov
xlat
test
lcall
mov
lret
xlat
popa
xlat
push
cli
test
and
pop
repnz
inc
xchg
fs
xchg
sarl
lret
xor
mov
inc
pop
sub
sti
or
movsb
sbb
pusha
dec
mov
je
ret
jle
ja
mov
lea
ds
ss
and
mov
mov
test
aam
cld
or
incl
data16
pushf
or
push
mov
test
mov
dec
in
dec
ds
fstpt
lock
movsl
gs
std
or
in
jle
leave
outsl
sbb
inc
dec
int3
sarl
rcll
push
in
push
jnp
jns
lods
vmovlpd
xchg
icebp
inc
arpl
pop
aas
outsb
push
push
leave
int
int
push
jp
int
in
test
jmp
test
mov
jo
sub
pop
cmp
push
mov
adc
test
and
and
inc
in
test
aam
leave
pusha
mov
fstl
cld
pushf
repnz
gs
arpl
mov
push
mov
sbb
dec
es
incb
in
daa
in
pushf
scas
pop
loopne
je
push
fisubs
sub
insl
fnstsw
call
mov
mov
movb
xor
lahf
shrl
loop
jbe
and
sbb
ljmp
out
ficompl
scas
adc
pushf
leave
loope
cmp
xchg
inc
repnz
stos
push
lea
in
enter
jmp
jae
outsl
mov
stos
add
mov
push
fwait
lret
call
nop
cmp
fcmovne
jecxz
orl
addr16
fs
adc
int3
ss
and
add
es
fisubs
test
out
lock
or
mov
pmulhw
and
jg
xor
dec
adc
loope
jecxz
cltd
and
mov
addr16
push
test
jae
adc
mov
addl
push
adc
adc
and
mov
jno
imul
xor
les
sahf
pop
ret
xchg
add
adc
and
xor
cld
push
xchg
dec
dec
and
lret
add
call
mov
xor
add
inc
inc
jle
hlt
scas
mov
cmp
ljmp
jae
stc
int3
fbld
inc
push
push
xchg
cs
sbb
mov
aas
mov
out
xor
cwtl
mulb
clc
jg
pop
inc
xchg
int
xchg
loope
pusha
pushf
in
int
sbb
cmpsl
hlt
fidivrl
into
arpl
jp
pusha
into
enter
lods
push
outsl
mov
sub
dec
fmul
mov
mov
add
jns
fistpl
and
mov
sbb
shrl
jp
shr
jo
leave
mov
iret
nop
pop
add
adc
ret
push
aas
sbb
sub
call
in
add
fstps
jge
fdivrs
or
pop
pop
ja
leave
jmp
in
test
cli
sahf
xor
inc
into
insl
call
hlt
dec
xor
out
aas
repnz
cmp
push
fidivl
mov
bound
in
sub
sub
mov
popf
cmpsb
popa
dec
test
movsb
xor
push
lcall
inc
push
cmp
shlb
mov
dec
and
sahf
hlt
ret
sarl
fnstenv
or
rorb
iret
mov
in
or
mov
sbbb
cmp
imul
dec
xor
and
addl
lods
lock
movsb
aaa
cmp
test
xor
cmpsl
nop
jecxz
decb
icebp
pop
cmp
mov
fsub
pop
push
stc
leave
lea
pop
or
lods
in
sbb
dec
sub
mov
fidivrs
test
mov
jo
out
dec
push
sub
mov
mov
pusha
ja
pop
inc
fidivl
push
ret
jbe
or
xor
jns
mov
cmp
pop
xchg
ss
mov
addr16
xchg
push
mov
rcr
rcrl
scas
sbb
jne
mov
andl
sarb
adcb
fcmovb
aaa
gs
sbb
push
cmp
xor
inc
xchg
addl
enter
stos
imul
mov
or
sbb
lcall
xchg
dec
rcll
sbb
jno
cld
lcall
push
mov
pop
or
pop
idivl
cltd
jecxz
and
xor
cwtl
xor
fidivl
inc
adc
cmp
insb
push
adc
xor
mov
dec
sbb
inc
push
xchg
js
pop
mov
xchg
xlat
jno
pop
xor
aaa
and
arpl
js
repz
push
popf
push
insb
shlb
inc
into
addr16
fldl
jge
jb
lock
sbb
push
pushf
mov
push
insb
ret
ret
jp
das
into
lret
mov
int3
or
lods
ja
es
inc
add
fiaddl
inc
jecxz
and
int
or
test
jne
xor
inc
dec
xor
lahf
xsha256
mov
jge
pop
sub
inc
cli
cld
ja
cs
xor
out
add
out
xchg
xchg
shl
dec
mov
sub
mov
incb
jno
ret
rclb
in
int3
mov
jp
rolw
insb
inc
push
js
sub
int
cmp
jo
xchg
ljmp
pop
jg
mov
sub
pushf
lds
cmp
jns
push
mov
popa
sub
cmp
shll
lcall
ret
xor
and
incl
sbb
push
insb
aam
sbbl
push
icebp
mov
aad
int
sbb
ret
mov
push
cmc
xor
popa
cwtl
push
es
mov
bound
imul
nop
lea
dec
rcl
addb
adc
mov
jp
je
imul
mov
adc
and
xor
mov
insl
jge
arpl
xlat
inc
pusha
mov
aam
xchg
pop
sbb
xor
cwtl
jne
inc
pusha
jae
jge
fwait
pop
and
lret
jae
shrl
or
mov
mov
jp
mov
hlt
flds
mov
orb
mov
sbb
sbb
pop
mov
ds
push
sbbl
sbb
ja
inc
mov
push
fstl
cltd
inc
shrb
arpl
les
sub
roll
push
fdiv
rorl
fs
cmp
out
mov
test
in
or
sbb
enter
shld
inc
sub
jno
mov
mov
imul
push
lea
fdivrl
jle
xor
lahf
mov
es
scas
mov
dec
stos
shlb
and
adc
sub
fwait
jo
std
aas
inc
stos
xchg
outsb
and
cli
mov
mov
inc
lods
out
stos
jbe
lret
sub
pop
jmp
sbb
xchg
mov
scas
dec
sbb
rolb
iret
mov
add
push
sub
scas
pop
xchg
dec
pop
addr16
xor
mov
push
jns
pop
push
pop
mov
ja
xorl
push
repz
xchg
pop
enter
int3
ljmp
test
ror
sub
cmp
mov
or
mov
test
cli
nop
adc
push
cs
inc
jecxz
xchg
cmp
iret
jecxz
scas
icebp
or
xchg
das
xor
push
push
push
leave
cmp
shl
mov
sub
cld
and
aad
outsl
iret
sub
mov
in
lods
stc
test
cltd
in
test
fcmovnbe
imul
mov
outsb
mov
fnsave
inc
fwait
mov
push
stos
and
out
mov
jmp
notb
mov
cmp
sbb
push
pop
fidivs
or
lret
jae
cmpsl
repnz
adc
pop
add
inc
shrl
dec
hlt
leave
jecxz
sub
pop
data16
inc
je
sbb
mov
fidivrl
cmp
push
aam
daa
mov
test
mov
and
jl
pop
xchg
cli
push
dec
jbe
push
imul
inc
bound
rclb
scas
addl
add
xchg
inc
testb
movsb
leave
pop
pop
xchg
mov
xor
adc
lret
jl
adc
add
aad
push
inc
test
xor
xchg
stos
shll
out
rcl
dec
test
ja
push
outsl
inc
cltd
std
or
mov
lods
mov
vminsd
inc
add
inc
fnstenv
mov
xor
and
mov
mov
in
sub
pop
dec
or
and
mov
icebp
push
shrl
data16
bound
out
push
ljmp
cmc
push
mov
fcmovu
mov
xor
xor
xor
insl
pop
hlt
pop
and
mov
ja
xchg
movsl
mov
pop
loop
dec
shrb
lds
pop
je
add
mov
mov
push
shrl
push
push
lahf
jmp
scas
test
and
mov
push
mov
ss
push
and
ds
and
movsl
jmp
dec
lods
cmp
sti
cwtl
lahf
xchg
push
mov
or
mov
dec
xchg
mov
lahf
push
hlt
pop
fsubs
jb
jno
sub
movsl
andl
ret
ret
mov
cmp
and
push
loopne
pop
push
div
mov
ds
shlb
mov
xchg
or
out
aas
sub
jbe
inc
sub
mov
xor
push
xor
push
push
pop
icebp
popf
jae
cli
and
lret
mov
mov
dec
loop
xlat
add
shr
and
sbb
into
insl
in
fisttps
lods
mov
cmp
jg
iret
ljmp
adc
fsubr
fs
aas
xor
sub
push
jb
cmp
pop
sahf
outsb
mov
mov
out
dec
movsl
mov
push
sub
mov
push
leave
das
arpl
pop
movl
rclb
mov
les
call
in
mov
inc
adc
and
xchg
cmp
or
jns
sub
jo
jle
or
dec
jnp
aas
movsl
pop
xchg
imul
push
jl
repz
push
or
ffreep
aad
rorb
scas
daa
aaa
in
stc
mov
jecxz
inc
cmp
push
and
leave
add
shrl
pop
sbbl
rcrl
jle
add
dec
dec
sub
or
in
movsl
adc
dec
dec
pop
cmp
mov
loopne
insl
push
ret
outsl
xchg
shlb
popf
popa
xor
sbb
mov
jae
test
ss
imul
lcall
and
xor
pop
jle
pushf
scas
sbbb
fnstsw
push
test
xchg
add
aam
ja
xchg
push
lea
int3
sbb
cltd
push
sub
add
mov
dec
ds
test
aas
inc
nop
rorl
andb
aaa
cld
pop
gs
xchg
jne
clc
and
fadds
adc
add
adc
test
sbb
jae
nop
xchg
push
add
std
sub
or
aas
mov
cmp
jns
into
fmul
pop
lcall
xchg
int
dec
leave
pop
xchg
das
push
inc
push
cs
aam
cmpsl
push
jecxz
adc
mov
cli
add
div
ljmp
rol
sub
adc
and
push
lds
jo
imul
adc
sbb
ds
icebp
addr16
and
and
rorb
ds
dec
add
idivl
test
xor
sub
test
into
loope
xchg
test
add
pushl
out
mov
cmp
in
xchg
inc
pop
stos
lods
adc
out
dec
mov
mov
or
and
js
pop
xchg
inc
out
inc
mov
shl
sub
rcl
cld
xchg
xor
push
xchg
jecxz
pop
push
popa
push
cmc
mov
mov
jb
aad
mov
lods
mov
movsb
shl
aaa
dec
cmpsl
dec
push
add
mov
movsb
addr16
in
inc
std
sar
mov
out
mov
dec
loope
orb
stos
pop
push
jne
out
xchg
adc
inc
pusha
and
inc
cmp
inc
in
or
ficompl
hlt
jae
dec
ficompl
cmc
andl
mov
dec
andl
jmp
cwtl
mov
jecxz
dec
adc
cld
dec
jecxz
inc
je
scas
lret
lods
rclb
xchg
fwait
jecxz
movsb
popf
dec
and
mov
dec
pop
stos
lcall
and
cmpsb
cmp
inc
push
lods
and
ljmp
lods
test
or
xchg
insb
xrelease
dec
arpl
lahf
adc
dec
aaa
stos
out
mov
insl
leave
mov
call
outsl
lcall
add
pop
mov
retw
jae
mov
dec
ja
sub
xchg
pop
jae
push
fnstenv
sub
dec
scas
mull
mov
push
out
mov
or
and
test
jp
loop
mov
mov
pop
adc
call
scas
mov
gs
leave
pusha
jbe
jns
xor
call
mov
mov
mov
pop
popa
hlt
adc
jne
xor
adc
neg
xor
sbb
orl
out
scas
in
bound
jne
add
lods
and
ret
jnp
das
les
dec
loop
cmp
js
pop
or
jg
ret
es
fnstenv
push
in
lds
mov
mov
push
push
fnsave
adc
and
xor
filds
mov
jge
push
dec
mov
sarl
pushf
sub
je
mov
daa
pop
popa
dec
test
push
ljmp
fisubrl
mov
mov
push
jns
test
popf
movsb
jp
mov
xchg
push
loope
pop
divb
cwtl
or
xchg
jge
push
mov
push
ret
les
mulb
mov
data16
cwtl
xor
lds
push
outsl
mov
mov
mov
sub
mov
jae
or
pop
notrack
mov
mov
dec
or
and
fcomp
in
push
stc
mov
jmp
add
mov
xchg
and
sti
mov
fwait
cmp
push
mov
fildl
jg
push
pop
jg
push
push
shll
pop
mov
mov
jg
or
mov
call
repnz
mov
roll
cmpsb
in
std
iret
xor
xor
mov
stos
cmp
lods
mov
mov
loopne
sub
pop
and
xchg
in
dec
jp
or
pop
jge
repnz
dec
xchg
mov
es
sub
ficoml
xchg
xchg
add
push
cmp
jecxz
xchg
mov
aas
pop
hlt
outsl
cmp
jnp
lcall
push
adc
mov
insl
rcl
insb
add
outsb
jl
pop
push
out
les
jb
insb
rclb
aaa
fisubrl
add
int3
in
test
or
popa
pop
into
cmp
mov
xor
jp
jecxz
cltd
mov
dec
sbb
ja
cli
pop
jno
in
imul
mov
push
xor
mov
dec
pop
in
jae
pop
add
sbb
fisubs
loope
shr
push
icebp
int3
repz
add
inc
cmp
test
cwtl
das
arpl
sub
mov
add
dec
mov
mov
das
mov
jae
mov
or
mov
rclb
jae
ja
out
cmpsl
and
int
iret
leave
cmp
lock
pop
rolb
xchg
sub
push
xor
addr16
push
jmp
out
hlt
mov
lea
lds
add
mov
fninit
inc
mov
add
dec
adc
repnz
push
adc
mov
out
pop
mov
add
xchg
and
mov
pop
inc
imul
subl
mov
daa
inc
ficompl
jae
mov
mov
dec
repz
out
mov
dec
in
outsb
icebp
fisttpl
hlt
add
lds
jmp
and
dec
push
sbb
sbb
push
push
mov
sbb
rcr
and
mov
sub
or
sti
mov
out
aam
mov
adc
inc
inc
push
mov
xchg
pop
loope
push
cmpsb
add
jbe
enter
in
lods
inc
pop
pop
push
popa
add
and
jb
push
rcr
jb
sub
shl
adc
mov
sbb
shll
lds
cmc
mov
sbb
mov
jge
ss
push
mov
jns
lds
dec
pop
inc
out
cld
sbb
dec
pop
pop
or
push
lods
cmp
jbe
or
shl
pop
cs
push
mov
push
dec
cmpsl
or
add
in
jae
repz
in
sbb
push
popf
cmp
test
mov
xor
push
cmc
add
mov
add
int
orb
pop
pop
cmpsb
cmp
or
std
xor
mov
enter
sbb
pop
repz
shr
rcll
int
add
in
push
in
xorl
jae
or
js
fildll
push
popf
mov
jp
andl
subl
imul
sub
in
xchg
out
insl
inc
out
je
xchg
rcrb
and
stos
out
xchg
fists
push
rorb
sub
sahf
js
rcrb
fcmove
cmp
loope
lcall
sarb
in
inc
or
and
in
popf
notb
daa
aas
jecxz
jne
movl
out
setp
or
jns
cltd
rcrl
jl
mov
add
leave
push
pop
jae
push
jo
dec
int3
cmp
cmp
lea
movsl
pusha
inc
jg
mov
inc
lahf
test
jecxz
xchg
add
or
pop
xchg
loope
add
mov
outsl
jno
lret
cs
outsb
sub
aad
dec
push
stos
dec
popa
iret
cmpsl
mov
cmpsl
adc
adc
in
popf
dec
movsb
inc
push
shrl
fs
lret
and
mov
pusha
and
mov
xchg
int3
or
sub
aas
push
jmp
cmp
insl
mov
mov
pop
popl
pop
mov
imul
lret
fnstenv
or
daa
dec
or
outsb
adc
les
mov
and
lret
add
xchg
stc
xor
xchg
mov
push
icebp
mov
pop
pandn
imul
fwait
xor
xchg
aas
dec
pushf
lods
push
faddp
push
fisubrl
mov
and
pop
xchg
rolb
mov
sbb
and
in
inc
add
in
popf
or
clc
nop
daa
sub
mov
ja
mov
mov
arpl
test
cmp
notl
jecxz
lods
xchg
dec
add
xor
test
lret
xchg
and
jnp
shll
js
mov
mov
jmp
cmp
ss
or
leave
scas
dec
lahf
imul
test
mov
mov
shll
arpl
jns
dec
cwtl
and
clc
das
lds
dec
pop
and
xchg
pusha
aam
xlat
mov
cmc
call
xchg
movsb
ja
icebp
pop
sbb
lds
sti
xor
sub
mov
loope
lds
xor
sub
push
lods
mov
dec
fucomi
jmp
les
cmp
dec
stc
out
push
call
add
cmpsb
popa
push
dec
cli
shlb
mov
cmp
xlat
xor
pop
aad
mov
inc
movsb
scas
xchg
mov
mov
or
fnstenv
inc
scas
les
notl
sbb
xor
xchg
jae
in
mov
push
cmp
int
sub
push
jb
daa
add
test
mov
xchg
repz
sub
mov
mov
or
inc
fcomps
mov
jle
cld
push
mov
imul
pop
enter
mov
fistl
add
add
loope
movsb
push
sub
inc
aam
sti
adc
in
pop
xor
dec
stos
je
rcr
adc
mov
lock
lods
push
stc
sti
add
aaa
dec
cmpsb
in
xor
cs
add
push
jg
aaa
bound
pop
add
movsb
mov
rcll
test
cltd
negl
mov
push
xchg
inc
cli
cld
gs
call
inc
out
jns
add
mov
adc
jle
shlb
ljmp
imul
movsb
pop
mov
loope
and
popa
mov
jle
out
into
push
mov
inc
inc
dec
pop
fmull
push
ja
jae
or
xchg
pop
test
cmp
sbbl
jbe
push
in
push
xor
filds
sti
pop
addr16
sbb
lea
pmaxsw
xor
sahf
cli
xchg
es
int
mov
xchg
aam
clc
cmpsl
cmpl
scas
adc
sbb
sbb
add
aaa
jecxz
insl
push
mov
dec
movsl
out
mov
out
bound
repnz
fisttpl
aas
adc
fcomi
push
shrb
mov
mov
mov
pop
cmc
or
fidivrs
jge
mov
test
sub
jb
push
add
add
push
int3
sahf
xor
mov
mov
lcall
and
sub
lea
in
push
sub
stc
shrl
sub
sub
loope
sarb
fisubs
lret
push
mov
outsl
push
shr
scas
add
testb
xor
lret
nop
and
in
into
jb
nop
cld
xchg
add
out
out
cs
fldenv
outsl
mov
popa
jnp
cmp
gs
les
addl
enter
scas
lods
into
je
mov
or
mov
sbb
xor
outsl
jne
rorl
add
push
ljmp
jb
lods
jg
jecxz
into
shll
sti
in
adc
subb
or
jecxz
in
push
call
mov
test
lcall
insl
mov
mov
rcr
jb
daa
push
cltd
xchg
xchg
or
mov
cmp
xor
mov
lcall
cltd
rcrl
sbbb
jge
jne
into
lahf
inc
pop
adc
adc
or
inc
sbb
add
mov
fisubs
sub
aam
pop
cld
aad
lret
rclb
adc
dec
loopne
insl
sub
push
and
pop
cmpsb
clc
stos
pop
sub
jno
fsubrl
or
and
adc
imul
insl
mov
mov
push
push
mov
int
mov
into
gs
daa
lock
in
jo
xor
nop
mov
sub
lods
sbbb
rcll
xor
mov
jecxz
daa
fnstcw
les
movsb
inc
push
lds
icebp
mov
les
enter
cli
inc
test
stc
cwtl
inc
fmul
sbb
ja
ljmp
dec
mov
ret
pop
fimuls
loope
cmpsb
pusha
mov
mov
fldcw
idivl
fdivl
fwait
gs
negl
mov
out
fs
mov
xchg
std
adc
scas
mov
sti
push
aad
dec
mov
stc
nop
clc
mov
push
frstor
sbb
ret
loope
dec
dec
pop
xchg
das
inc
fs
xchg
adc
mov
mov
ret
js
cmp
sub
test
in
fs
out
xchg
pop
hlt
lahf
scas
in
rcrl
es
jb
push
test
stos
dec
es
fwait
push
imul
jbe
lods
cs
lahf
jne
or
cmp
xchg
cmp
loopne
or
daa
mov
xor
push
push
sub
je
mov
mov
movsl
push
sti
loopne
sub
jno
cmp
test
iret
pop
sbb
js
sub
xchg
xchg
mov
sbb
lea
imul
ljmp
adc
addb
popf
xchg
int3
or
out
dec
push
and
jg
frstor
mov
fnstenv
aam
repnz
roll
in
loopne
mov
sub
in
stos
sahf
ss
out
cmp
mov
inc
subb
mov
test
pop
jmp
movsl
dec
pusha
sbb
jl
mov
lcall
and
jge
aas
shlb
xchg
fnsave
mov
push
bound
cwtl
xchg
ja
shll
insl
popl
xchg
xor
push
repz
push
pop
pop
cmc
mov
pop
imul
clc
je
xor
sub
call
jmp
sbb
pop
jmp
sbb
mov
icebp
mov
ret
js
lahf
mov
ficomps
emms
sbb
punpcklwd
inc
sub
xor
mov
sub
jne
mov
xchg
inc
cmp
shl
add
mov
cli
imul
jae
add
lahf
js
les
dec
push
or
fadd
scas
cs
insb
and
dec
cli
xlat
insl
adc
push
lahf
jo
push
jno
insl
dec
lock
aas
and
cmp
inc
pop
sub
pop
shrb
mov
xor
je
lahf
int
outsl
xor
in
lcall
je
fidivrs
pop
test
mov
jecxz
test
mov
shll
repz
dec
xorb
cltd
push
add
sbb
adc
mov
jns
inc
adc
cmp
jle
and
adc
shl
sbb
lds
lods
iret
scas
inc
clc
sub
jns
xchg
int3
fadd
daa
repnz
and
sarb
xchg
lods
nop
daa
pop
dec
xchg
push
rolb
fsubrs
mov
rcll
mov
imul
sbb
js
test
ja
fisttpll
movsl
or
jle
dec
mov
cmpsb
lods
aad
outsl
mov
repnz
stos
dec
loope
jl
ja
xchg
jns
add
mov
mov
pop
push
sub
orb
js
mov
stc
or
sub
clc
cmp
imul
pop
lahf
or
fisubl
int3
test
mov
lods
push
pop
push
or
dec
dec
push
lea
ret
dec
push
js
add
add
mov
mov
and
jmp
rcrb
dec
out
into
inc
push
inc
movsb
push
jbe
push
mov
and
lock
fwait
push
outsb
or
or
push
xchg
data16
in
xchg
lahf
sub
xlat
jle
fadds
loope
jge
stos
dec
popa
call
mov
fldt
aad
dec
add
sarb
mov
mov
sbb
cmp
int3
or
lds
push
mov
xor
sub
fnstenv
adc
push
decb
sahf
xor
jb
je
dec
dec
xor
cmp
lret
scas
lahf
push
outsl
ss
je
cmc
cmp
mov
push
push
faddp
mov
gs
pop
or
adc
insl
scas
and
or
inc
push
sub
out
or
mov
dec
push
push
push
add
sbb
fwait
es
mov
in
mov
and
sti
or
adc
out
popf
add
inc
push
sub
xchg
ljmp
push
mov
daa
add
dec
and
pop
les
jbe
mov
std
int3
sbb
mov
adc
lcall
mov
and
inc
out
dec
loope
jp
or
xlat
jnp
lahf
fsubl
out
repz
cmc
or
add
into
mov
pop
jb
pop
arpl
pop
sarb
das
clc
sub
inc
cli
int3
sbb
outsl
xchg
cltd
jl
mov
or
fbstp
cs
in
add
or
outsb
pop
mov
dec
or
pop
cmpb
sub
pop
mov
cmpsb
mov
or
push
cmp
or
sbb
mov
sbb
stc
ss
test
jnp
jle
popa
fcompl
pop
ss
into
es
dec
fs
nop
sahf
mov
outsl
mov
shrb
fucomi
add
cs
adc
jne
dec
pop
mov
jmp
enter
push
jno
shlb
shrl
cmpsb
push
pop
push
repz
outsb
mov
mov
test
pop
pop
adc
out
push
xor
mov
xor
push
flds
ss
into
sbb
std
adc
pop
and
cwtl
stos
jecxz
loope
pop
sub
in
incb
push
fnsave
insl
adc
lahf
sti
mov
inc
dec
xchg
mov
out
dec
out
jbe
cmpb
out
out
sbb
jmp
mov
xchg
mov
jnp
add
lds
fimuls
or
or
cmpsl
push
nop
push
dec
cmpsb
ljmp
jno
inc
dec
mov
inc
fildl
xchg
fstl
gs
and
xchg
mov
data16
jne
fwait
push
les
add
pop
loope
stos
cltd
jo
cmp
cs
adc
dec
mov
into
xlat
push
arpl
xchg
je
movsl
movsl
mov
add
scas
mov
loope
jge
pop
sub
gs
out
test
push
fidivrs
mov
enter
movsb
cmp
mov
lret
and
push
fldt
xchg
repnz
xor
cs
in
adc
fiaddl
dec
iret
xor
fbld
adc
dec
aad
dec
or
dec
jge
jmp
mov
pop
mov
fistpl
das
inc
test
pop
lcall
dec
push
stos
aas
xor
rolb
jae
mov
xchg
inc
sbb
add
fwait
cmp
sub
cmp
mov
test
ljmp
lcall
nop
bound
cld
push
insl
daa
mov
or
or
movsb
sub
adc
mov
out
in
ljmp
xor
shll
sbb
or
xor
imul
push
jbe
cmp
int3
sub
dec
or
mov
test
fcmovb
cmp
jmp
or
insb
adc
xor
xchg
divb
xchg
test
loopne
sbb
adc
pop
int3
or
pop
xchg
lods
xchg
mov
dec
jecxz
decb
cmpsl
test
add
jl
nop
push
mov
xor
dec
scas
ss
cs
pop
loop
push
inc
jecxz
cli
lds
jge
adcl
add
loopne
jbe
cmp
fwait
lods
mov
jbe
pop
cmp
inc
sbbb
jmp
clc
shlb
mov
out
push
mov
cmpsb
mov
xor
xchg
out
cmpsl
inc
add
jo
xor
stc
mov
xchg
stos
add
xchg
pop
add
cmp
inc
push
mov
adc
pop
xchg
dec
imul
test
dec
rorl
adc
mov
aas
daa
mov
cmp
cltd
jb
xchg
pushf
fisubrs
sub
movsb
add
xchg
xor
mov
es
cmp
mov
ret
js
sub
fcompl
dec
divb
mov
adc
xor
pop
insl
sbb
or
pusha
pusha
test
sbb
pop
cs
dec
mov
stc
movsl
sti
test
pop
ret
addr16
pop
fucomi
xorb
xor
xor
xor
insl
xor
sbbl
lcall
dec
loope
dec
dec
mov
jecxz
mov
pop
adc
pop
jns
sub
dec
push
push
ret
xchg
push
dec
dec
pop
xchg
inc
ss
xchg
fcomps
and
xchg
sub
loope
push
in
test
and
das
mov
movsb
inc
pop
fnstsw
fs
pop
lret
flds
mov
adc
xchg
inc
pop
outsb
inc
arpl
sbb
mov
mov
add
push
idivb
addr16
cmpsb
cmp
mov
cmp
outsl
mov
pop
mov
dec
or
pop
les
or
jnp
adc
inc
shll
push
dec
pop
add
push
mov
mov
js
add
insb
jl
ja
fimuls
lcall
popa
sti
cmpsb
ja
imulb
sarl
repnz
out
push
fwait
ja
inc
jo
xor
in
movsb
cmp
jecxz
adc
inc
adc
mov
dec
ss
jecxz
jecxz
sbb
imul
cmpsb
jne
mov
iret
jle
cmpsl
pop
mov
ja
push
movsb
out
cli
aad
nopl
or
sbb
loopne
mov
in
inc
jge
sub
xchg
xor
bound
lock
push
cs
hlt
pop
lret
outsb
loope
jns
adc
add
xor
push
inc
pushl
ds
push
push
jno
add
lock
les
add
test
pop
fucomi
aaa
sub
adcb
mov
sub
add
dec
les
adc
mov
inc
outsb
std
aad
out
std
lahf
int
xchg
pop
mov
pushf
add
mov
lret
mov
inc
fisubrs
xor
mov
and
lret
out
mov
stos
xor
lock
xor
jle
mov
xchg
pop
pop
xchg
out
dec
rcrl
outsb
in
call
lods
or
xchg
mov
call
mov
out
aam
daa
mov
mov
fdiv
cmp
mov
add
fidivl
cmc
mov
jmp
sub
fnstenv
inc
or
mov
pop
add
jb
cs
sbb
in
scas
lea
push
cmp
stos
mov
sbb
call
das
ds
sahf
and
pop
sub
mov
insb
ret
xor
mov
fmuls
test
movsl
enter
mov
xchg
ja
leave
jle
rolb
fmul
xchg
std
inc
push
inc
xchg
sub
inc
sbb
aam
jne
xchg
add
or
int
mov
stc
addb
or
or
out
popf
ss
sbb
add
repnz
jp
or
inc
fwait
dec
pop
xchg
lock
mov
pop
aad
add
ret
add
call
imull
fwait
int3
push
outsb
mov
stos
and
or
and
es
pop
nop
sub
cltd
scas
mov
sub
int3
fdivl
sbb
jbe
cmp
pop
cld
adc
mov
adc
and
bound
push
fldenv
jae
sub
lcall
mov
test
inc
push
lods
push
pop
ja
push
mov
sbb
mov
inc
push
mov
int
push
xor
cmpsb
inc
xchg
and
ss
push
jne
or
movsl
scas
jo
test
fmuls
sbb
adc
lahf
sub
loop
sbb
call
lea
add
sbb
push
divl
test
xor
pusha
ret
lods
outsb
push
adc
scas
outsb
jnp
ficompl
shll
dec
loopne
je
mov
sbb
inc
xlat
sub
push
sahf
mov
in
and
aad
sbb
mov
or
dec
mov
xor
push
inc
mov
shr
out
xor
lds
movsb
pop
lea
adc
cli
mov
mov
adc
cltd
sahf
mov
mov
push
jno
dec
mov
push
divb
call
add
aad
push
sahf
and
push
pop
or
enter
iret
aad
popa
mov
sub
xchg
xor
int
push
popf
rorl
dec
mov
hlt
and
mov
cmpb
push
ljmp
out
cld
xor
inc
enter
cmc
lods
push
push
xchg
lahf
xor
xchg
mov
add
mov
shrb
shlb
cmpsl
mov
je
pop
xchg
mov
or
scas
shlb
pop
adc
push
jae
test
pop
repnz
stc
add
movsl
mov
loopne
fistpll
adc
das
inc
xchg
sbb
cltd
push
pop
or
orb
xor
push
add
mov
repz
pusha
jp
adc
lea
nop
cmp
push
je
mov
mov
jecxz
gs
mov
or
cmp
popl
dec
test
mov
cmc
aaa
lret
lret
xlat
frstor
push
push
sbb
push
stos
push
outsl
daa
int
sbb
sub
fidivl
addb
les
mov
mov
push
out
push
sahf
cwtl
pop
cmp
or
mov
imul
adc
xor
outsl
in
mov
ret
add
sub
ret
sbb
cmp
cmpsl
sbb
pop
in
js
sbb
ds
cwtl
inc
or
pop
ja
or
test
mov
xchg
dec
fldt
mov
push
pop
sub
loopne
jne
orb
js
outsl
and
rclb
iret
gs
stc
loop
inc
in
in
jbe
fs
sub
scas
test
adc
movb
cltd
mov
adc
aaa
imul
dec
addr16
outsb
adc
inc
enter
cmp
call
sbb
mov
and
addl
ljmp
out
adc
dec
mov
out
dec
sbb
mov
fnstsw
movsl
dec
in
mov
out
les
jmp
cmpsl
cmp
cltd
stos
popf
imul
add
ficompl
add
xlat
jmp
arpl
mov
mov
sti
sysexit
or
shll
ja
sub
jmp
mov
imul
pop
imul
mov
push
mov
pop
popf
mov
adc
arpl
leave
pop
stc
dec
jge
dec
or
mov
xor
daa
aad
adc
lea
and
data16
or
popa
je
xchg
or
sub
out
movsb
aaa
pop
add
scas
push
mov
mov
insb
mov
insb
xchg
int
aas
incl
mov
cmp
sahf
in
cmp
out
inc
pop
fisttpll
cmp
cmp
adc
fsubr
push
adc
dec
filds
or
inc
sbb
data16
dec
outsl
cmp
lret
lret
lahf
in
insl
sahf
push
stos
cmp
hlt
mov
aad
in
divl
fdivp
stc
lods
push
cs
push
mov
add
inc
je
dec
in
adc
adc
imulb
out
lea
inc
lock
int3
fcompl
mov
mov
mov
mov
popa
lock
rcll
push
sub
mov
add
xor
ds
jle
clc
movl
lock
pusha
gs
sahf
xor
or
cmpsl
insb
test
outsb
sub
hlt
aad
dec
add
outsl
pop
repz
cmp
aad
dec
inc
out
jp
sub
cmp
xorl
xor
hlt
mov
clc
shl
orl
sbb
testb
mov
shlb
movsb
push
cmp
xchg
xchg
popa
subb
sbb
mov
sub
mov
xor
in
cmp
jno
sbbb
nop
out
in
xlat
pop
lods
mov
ret
xor
xor
cmovae
stos
push
xchg
cltd
nop
dec
inc
inc
xchg
mov
test
pop
sub
and
aas
lret
es
lahf
xor
inc
scas
pushf
outsl
fwait
js
mov
loopne
sub
outsl
mov
jl
pop
jnp
je
cmpsl
mov
jb
repz
inc
jp
mulb
repz
pop
adc
out
push
dec
loopne
cmp
mov
dec
adc
mov
into
mov
xchg
push
push
pop
pop
ja
xchg
stos
push
mov
lcall
out
test
insb
xchg
enter
mov
es
xor
push
push
cmp
cltd
clc
jb
push
xchg
pop
or
or
mov
or
loopne
lcall
ds
in
fdivs
imul
ja
je
addr16
and
xor
das
push
cmpl
or
movsl
int
out
jno
repz
jo
outsb
push
sub
clc
xchg
test
add
jb
lds
sbb
sbb
lcall
pushf
ret
sbb
ds
mov
popa
out
test
cld
cmpsl
int
mov
push
das
or
add
mov
insb
call
pop
adc
movsl
mov
lods
xor
cld
or
mov
aam
vzeroall
jne
cmpsb
mov
insb
sti
or
outsb
jb
fwait
mov
sbb
lods
fninit
inc
mov
sbb
mov
dec
jecxz
or
push
fistps
cmp
mov
lds
cs
jecxz
mov
sub
push
imul
outsl
outsb
andb
leave
loopne
adc
adc
addr16
out
movsl
cmp
dec
imul
andb
loopne
movsb
pop
roll
dec
pusha
adc
sbb
repnz
imul
shll
cmp
cli
or
xchg
or
add
outsl
jl
iret
scas
movsl
xchg
jge
dec
xchg
adc
testb
rorl
inc
cmp
pop
jnp
mov
test
sub
mov
xchg
adc
fidivrl
aad
adc
aad
push
pop
icebp
fwait
stos
fs
test
xchg
adcl
xor
sbb
cmp
adc
xorb
enter
inc
sti
cli
dec
out
sub
add
adc
cmp
repz
xchg
or
lahf
or
mov
pop
roll
dec
xor
fbstp
add
dec
cmpsl
clc
test
mov
dec
es
ficoml
mov
or
cmp
in
fsts
adc
or
arpl
pop
adc
mov
pop
xchg
and
lret
xchg
test
cmpsb
or
xchg
lods
orb
push
push
add
pop
in
enter
leave
mov
pop
mov
repz
jno
loop
push
loopne
scas
adc
xlat
loope
les
popf
loop
arpl
outsb
sub
lret
xor
add
or
loop
mov
lods
jne
test
push
mov
inc
hlt
sbb
push
outsb
mov
xor
lods
gs
jl
imul
ds
cmp
in
ret
jnp
cmpsl
dec
xor
pop
nop
inc
js
xchg
cmc
pop
dec
xlat
mov
mov
jae
mov
mov
loope
ss
call
mov
sbb
ss
mul
pop
add
and
loope
mov
mov
xsha1
cmpsb
mov
push
lods
mov
montmul
cmpsb
ret
mov
mov
scas
notl
adc
subl
fidivl
dec
add
inc
lret
mov
out
push
jge
divb
movsb
call
cli
xchg
sub
dec
test
jno
adc
mov
enter
sub
cs
stos
push
cmpsl
xchg
fadds
jge
movb
lcall
aam
xor
adc
push
ljmp
jno
fsub
lock
jbe
adc
xlat
int
mov
cmpsb
add
mov
fs
test
dec
xor
rep
mov
sbb
imul
ja
mov
and
jmp
sub
add
fsubrs
rorl
inc
adc
push
mov
into
jb
lods
jo
pop
cmp
movsb
outsb
or
cli
jle
cmp
adc
andl
cmp
dec
adc
xor
sbb
mov
fcompl
sarb
imul
repz
idivl
mov
pop
adc
ret
or
xlat
adc
loopne
xchg
push
sub
ror
bound
fmull
and
call
xor
or
dec
dec
fmul
fidivrl
mov
stos
inc
movsb
popf
xor
dec
mov
xchg
and
cli
mov
cmpsl
add
cmp
rclb
lock
mov
dec
add
xchg
pop
rolb
dec
addr16
xchg
adc
or
inc
leave
dec
lock
adc
mov
inc
in
pop
push
mov
notb
dec
ja
outsl
mov
push
mov
xor
sub
mov
pushf
dec
aam
xor
xchg
shr
ss
pop
hlt
and
mov
pop
and
xchg
imul
jns
push
mov
xchg
pop
aaa
push
add
push
push
mov
ret
ret
icebp
mov
add
push
inc
pop
xchg
sub
imulb
adc
xchg
cmp
std
pand
fucomp
push
rcrb
xchg
mov
push
cmpsl
mov
dec
pop
mov
shrl
jecxz
scas
lahf
test
xor
aad
int3
shl
mov
stos
mov
and
ljmp
xchg
add
sub
and
pop
je
xor
dec
loop
popf
sahf
inc
fistl
push
cmp
les
sub
and
jge
or
lret
xorb
jge
insl
mov
in
ljmp
cmp
cmpsl
aas
loop
or
inc
mov
jmp
mov
add
pop
aaa
inc
cmp
pop
and
das
pop
mov
xor
mov
lock
mov
pop
out
mov
insb
sti
xor
jbe
xchg
repz
dec
ss
sub
shr
push
out
rclb
mov
sahf
stos
int3
inc
mov
cmpsl
or
sub
jg
or
cmp
and
sbb
cltd
les
push
insl
jno
mov
movsl
out
aaa
dec
mov
aas
jp
or
cmpsl
inc
push
cmp
adc
push
add
mov
add
mov
mov
mov
xchg
inc
or
add
int3
lods
inc
bound
lret
mov
inc
inc
jg
mov
adcl
pop
push
add
dec
xor
loopne
mov
daa
mov
xlat
pop
mov
push
mov
push
or
mov
test
lret
and
test
lret
push
pop
adc
mov
imul
jecxz
or
push
dec
lret
fiaddl
cli
jne
jg
sahf
xor
jmp
inc
fwait
int3
fsubl
xchg
add
js
cmp
jbe
daa
in
sbb
je
iret
jno
xlat
mov
lret
dec
ret
shlb
lcall
sub
push
sti
aam
push
imul
cld
pop
test
mov
pop
flds
and
sahf
movd
inc
repz
test
cmpsb
fmuls
inc
sti
sub
cmpsl
or
aas
lret
popf
je
hlt
mov
bound
out
jmp
jns
ss
cmpsl
pop
hlt
pop
jno
mov
popf
test
out
repnz
and
xchg
call
sbb
imul
mov
sbb
cld
sbb
fwait
xchg
insl
divb
das
mov
dec
xchg
sub
popf
movsb
in
mov
xchg
push
insb
ret
inc
data16
push
mov
pusha
fildl
push
in
fistpl
dec
arpl
sahf
repz
inc
in
mov
xchg
stc
aas
fsub
dec
and
ds
fwait
xchg
adc
cmp
jl,pn
fnsave
mov
jp
ficomps
ds
adcl
cwtl
das
xchg
rolb
mov
mov
xchg
pop
clc
cmovo
dec
sub
jle
dec
cmc
cmp
xchg
shrl
and
mov
stos
jle
test
loopne
pusha
rcrb
ret
xchg
dec
icebp
fwait
pop
push
mov
daa
outsl
fistpl
mov
movsb
jb
xchg
xchg
test
mov
out
ss
out
and
sub
movsl
pop
pop
iret
xor
sub
insb
push
push
jp
stos
jmp
dec
loopne
nop
adc
xor
xor
cmpsl
movsl
mov
jecxz
sar
and
mov
lods
jle
lret
movsl
sbb
shll
rep
xchg
dec
mov
pop
dec
sub
jbe
push
das
jmp
sub
jge
jle
pop
add
jl
pushfw
cli
fs
sbb
adc
cmp
jecxz
in
sbb
sti
pushf
leave
and
pop
fdivl
pop
dec
dec
mov
adcb
orl
arpl
insb
fists
cmp
xor
push
or
cmp
das
test
sbb
mov
cmp
call
xor
cltd
test
je
filds
loop
nop
sbb
sbb
incl
pusha
sub
sub
jbe
ss
xor
xor
lea
or
sub
inc
loope
and
inc
push
push
mov
or
loope
addr16
mov
xor
sub
lea
jno
das
dec
add
adc
fsubp
sub
scas
pop
cmp
in
out
xchg
test
iret
icebp
mov
inc
xlat
cbtw
mov
adc
rorl
loop
repnz
icebp
push
sub
into
sti
jle
sbb
shlb
dec
dec
gs
mov
sub
dec
add
pop
push
adc
lods
pop
test
inc
sub
push
mov
push
dec
outsl
push
loop
xchg
mov
js
mov
fsubl
fldenv
inc
pop
insl
pop
shrl
adc
loop
mov
movsb
xchg
les
push
xchg
xchg
or
inc
or
subl
hlt
or
imul
adc
add
in
dec
sar
or
movsb
cltd
data16
ret
lods
lds
dec
push
xor
lahf
out
push
ret
jle
pop
mov
sbb
dec
jmp
gs
and
aam
scas
push
mov
jg
movsl
mov
imul
mov
and
pushf
sub
js
rcll
lret
pop
outsb
add
mov
mov
lds
sbb
jnp
leave
ljmp
fmull
mov
jg
cmpsl
out
lods
and
jno
test
fmul
sub
inc
pushf
add
add
and
dec
pop
xchg
push
mov
daa
test
dec
and
push
adc
rcrl
jnp
xor
imul
jg
mov
mov
ret
push
push
pushf
loop
push
mov
test
daa
mov
lods
fldenv
mov
rclb
and
push
sbb
idivl
adc
push
imul
mov
dec
fbstp
rclb
adc
ds
mov
jne
pop
xchg
lock
fwait
mov
cmp
cmp
mov
adcl
hlt
mov
dec
jno
jae
sbbl
div
into
inc
push
jmp
inc
pop
cmp
mov
push
repnz
arpl
bound
mov
lods
and
mov
xlat
cmp
dec
rcl
sub
leave
aas
xor
pop
mov
adc
je
mov
aad
mov
mov
mov
mov
lods
mov
dec
enter
jo
push
icebp
lcall
leave
out
call
push
lret
mov
push
insl
adc
sub
mov
mulb
sbb
and
mov
add
xchg
or
and
xor
out
bound
xor
xor
jl
test
jecxz
dec
dec
testl
inc
divl
cmp
xchg
movsl
lret
test
jbe
cmpsb
push
hlt
mov
jl
pop
sub
mov
cmc
lcall
cwtl
out
lret
int3
bound
inc
call
pushf
lea
mov
xor
jne
mov
sbb
jp
lods
and
fwait
push
inc
push
mov
jne
ds
or
rcll
mov
mov
fsubrs
cmc
pusha
hlt
out
sub
mov
outsb
cld
xor
inc
pop
icebp
jo
cld
mov
push
push
sbb
or
bound
pop
xchg
sub
or
orb
dec
mov
pop
push
lock
call
pushf
pop
sbb
sbb
dec
push
rcrl
cmp
sub
xchg
lret
jp
mov
jno
lods
sub
sbb
cmp
add
fldt
xchg
pop
iret
fisttpl
int3
es
jbe
clc
popf
rorb
jmp
jno
cmp
jno
call
and
jmp
push
scas
inc
loop
push
lahf
mov
add
xor
sbb
jae
test
repz
cmp
adc
scas
inc
out
ret
scas
lods
xchg
loopne
jle
inc
mov
shrl
aaa
sarl
xor
or
adc
scas
lods
sub
out
xor
lahf
and
or
mov
inc
and
push
dec
cmp
cmp
sub
dec
pop
out
bound
sub
pusha
pop
incb
cltd
xor
pusha
fcmovnb
fisubs
mov
daa
adc
lcall
js
aam
mov
scas
mov
fwait
inc
pop
add
mov
scas
inc
aam
pop
into
data16
int3
cmp
or
mov
loop
orps
xchg
push
push
icebp
pop
adc
mov
pop
inc
add
xor
cmp
jb
popf
aam
test
xor
and
mov
test
out
sbb
testl
out
jae
add
inc
roll
sbb
lahf
fwait
pushf
scas
int3
mov
fstl
dec
push
pmaddwd
add
cld
mov
idivl
stos
lods
ffreep
jne
jbe
and
jno
jg
push
rorw
insb
jg
sub
and
scas
out
popf
mov
arpl
xchg
andb
xor
pop
ret
in
add
nop
cmp
imul
jns
out
fidivl
lahf
lcall
lret
pop
push
hlt
mov
sbb
mov
cwtl
cmp
std
mov
fcompl
jae
sub
xchg
pop
stos
adc
inc
sbb
mov
lret
push
mov
pop
mov
bound
sub
mov
dec
cwtl
pop
fmuls
rcrb
mov
out
fcmovne
iret
push
xor
arpl
jns
dec
mov
mov
mov
mov
mov
mov
aas
les
call
popf
loop
push
sbb
xorl
fwait
push
fsubrs
mov
imul
aas
ret
jnp
cld
pop
shrl
bnd
repz
or
jns
inc
mov
enter
das
mov
jecxz
push
out
repz
lea
push
fsub
add
and
xchg
jae
dec
dec
arpl
mov
fistl
fldl
adc
xlat
aaa
push
mov
aas
imul
imul
jl
xor
clc
lahf
cwtl
dec
in
inc
jg
loope
jae
inc
aas
sti
loop
push
aam
jne
push
in
shlb
mov
and
jg
add
or
out
sbb
push
push
insb
gs
shrb
repz
ds
js
jl
jge
xchg
sbb
cmpl
jb
fists
loop
std
ror
dec
in
std
pushf
sub
imul
inc
xor
je
mov
xlat
sbb
in
sbb
inc
movsb
es
dec
loope
and
ljmp
lcallw
jmp
pop
add
or
sbb
filds
out
sbb
fcompl
and
mov
pop
adcb
stc
je
ja
out
cwtl
int
out
cmc
mov
jae
pop
xchg
push
mov
cwtl
lods
mov
jl
sbb
popa
div
shll
movsb
cmp
lods
mov
loop
stc
js
lock
fadds
jbe
jg
rep
bound
inc
stc
mov
loope
clc
stos
pusha
ljmp
test
stos
mov
bound
xor
fldt
push
test
popf
push
xor
mov
out
insb
pop
add
push
lock
push
mov
sub
jle
xchg
inc
or
push
shrl
xchg
in
pusha
add
or
testl
jmp
sub
mov
notl
xchg
inc
push
std
adcb
loopne
les
test
cmc
and
add
outsl
insl
mov
add
call
and
inc
jmp
movsl
xchg
and
pop
fnstcw
mov
dec
jge
lea
mov
negb
test
pop
orl
adc
scas
jl
pop
mov
movsb
xchg
push
mov
xor
in
cmp
push
cmp
xchg
jmp
sbb
push
jbe
repnz
adcb
shr
jo
add
xlat
mov
cmp
fcomp
sub
lea
push
aas
pop
ret
mov
lea
cwtl
mov
aam
jecxz
fimull
lcall
xchg
cmpsl
mov
sbb
cmp
insb
sbb
fs
popf
insb
mov
mov
sbb
adc
es
or
and
out
inc
cwtl
sub
xchg
popa
pop
enter
arpl
pop
shll
loopne
nop
loopne
mov
or
mov
movb
out
push
ror
push
lahf
mov
imul
aaa
mov
and
test
sbb
hlt
lret
mov
xchg
dec
sbb
hlt
xchg
movsb
ret
adc
dec
cltd
das
js
xchg
lret
xchg
mov
xchg
mov
dec
lods
mov
enter
adc
sub
dec
mov
das
xchg
xchg
pop
and
inc
inc
loope
jecxz
test
xchg
or
lds
sub
jecxz
test
and
aaa
mov
cmp
push
into
cmp
mov
cmp
lods
dec
std
popf
insl
pfrcpit2
pop
insb
imul
cmp
ja
adc
movsl
xor
mulb
cmpsl
inc
sbb
lock
mov
inc
mov
inc
cmc
movsb
inc
in
sub
divb
add
arpl
js
xrelease
pop
std
mov
loope
shlb
add
ss
and
dec
shrb
repnz
push
and
inc
adc
fcomp
call
add
inc
add
jge
das
xlat
outsb
outsb
fisttpll
xchg
nop
push
pop
jno
cltd
loopne
inc
cmp
fstp
and
add
sbb
jge
test
jle
inc
in
mulb
int
cs
pushf
inc
mov
xchg
in
adc
or
test
push
push
fdivrl
add
loop
cltd
xchg
fisttpl
xor
lahf
pop
mov
mov
sbb
push
pop
adc
popa
and
sbb
mov
mov
jmp
popf
xchg
out
jg
scas
sub
inc
mov
push
je
push
loope
cmp
loopne
addr16
and
or
xchg
inc
shlb
jbe
cli
or
aas
jns
jo
jecxz
in
fcmovnb
cmp
xlat
adc
push
cmpsb
xor
clc
scas
iret
insb
gs
fmull
xor
cmp
mov
nop
syscall
dec
xor
shl
pop
and
adcb
outsb
stos
arpl
sub
dec
adc
sub
add
inc
incl
loop
pop
clc
and
loopne
jo
fldcw
jb
xchg
cmp
cs
mov
repnz
mov
loop
sub
xchg
aas
div
mov
sub
lret
out
mov
mov
dec
mov
dec
fidivs
and
adc
jns
mov
and
mov
out
inc
sbb
push
sub
ja
xor
add
cld
pop
stc
xchg
or
stos
mov
js
in
mov
out
mov
xchg
mov
mov
cld
loope
push
mov
jns
ret
sub
sub
loopne
xor
push
pop
jb
dec
clc
jbe
daa
hlt
aad
pop
hlt
daa
ja
sub
xor
and
inc
fwait
stos
cld
push
and
repz
sub
arpl
push
mov
test
pop
sbb
bnd
in
or
pop
imul
rclb
push
outsl
pop
scas
pushf
inc
jp
cmp
mov
hlt
cmp
mov
les
xor
shrl
ds
sbb
xor
push
xor
roll
pop
scas
ret
call
sbb
mov
outsl
lock
out
out
int
sbb
test
pop
cmp
fsubr
add
sub
dec
pop
aam
xchg
adc
xor
sbb
sbb
cmp
mov
insb
sbb
adc
inc
sbb
sub
push
fwait
pop
inc
shll
dec
jecxz
aam
bound
dec
rorl
or
xor
negl
inc
sbb
shr
int
lret
lret
notb
xor
push
mov
stc
mov
and
lock
mov
ret
pop
mov
test
or
jo
mov
push
in
mov
divb
mov
push
adc
sahf
jl
fdivl
cmp
xchg
outsb
das
cmp
cmp
and
mov
xor
pop
outsb
xchg
test
adc
call
xor
aad
jl
insb
test
mov
ffreep
push
and
movsl
ja
mov
push
subl
fwait
lock
rcll
mov
push
paddw
mov
pushf
icebp
fcompl
mov
dec
pop
cmp
or
insb
js
insb
add
mov
mov
or
cltd
scas
repnz
push
imul
jle
fwait
mov
mov
push
stos
out
push
fs
popa
movsb
test
fs
xlat
sbb
ret
stc
sbb
mov
dec
jns
jp
cmp
adc
add
mov
out
lret
add
jge
cs
loop
sbb
icebp
cmp
push
mov
das
into
xorl
outsb
mov
les
inc
mov
sbb
loopne
xchg
shrb
aaa
push
stos
ficompl
je
je
mov
out
movsl
fdivrs
pop
sarb
or
pushf
lods
nop
and
mov
and
jne
clc
cld
cwtl
stos
sbb
outsl
idiv
or
mov
aaa
shll
pop
add
aad
dec
and
les
ret
adc
dec
cwtl
adc
arpl
aaa
cli
pop
mov
mov
es
sbb
jmp
adc
repz
dec
nop
push
cmpsb
daa
jno
sub
adc
cld
out
pop
cltd
pusha
sbb
sbb
push
shr
outsb
xchg
jle
push
inc
push
mov
mov
adc
pop
andb
insl
test
inc
iret
fildl
lret
xchg
xchg
int3
push
lret
xorb
dec
scas
mov
insb
add
aam
xor
jbe
sub
lahf
out
push
fisttpll
call
inc
sahf
add
dec
fistl
sti
and
sub
jns
inc
sbb
xor
cwtl
out
fs
idivb
and
adc
cltd
adc
out
mov
mov
mov
sahf
xor
xor
mov
and
sahf
pop
mov
aas
imul
sbb
lcall
imul
fisubrs
inc
dec
fwait
push
popa
aaa
adc
fwait
jbe
jge
rcrl
fidivl
xor
pop
aad
push
lds
xchg
and
fcompl
mov
jae
push
mov
fdivl
xor
and
fs
dec
test
jns
pop
leave
aam
out
movsb
inc
data16
or
repnz
roll
clc
pop
or
lcall
inc
insb
sbb
sbb
push
loopne
aaa
and
out
xchg
inc
lcall
inc
mov
aam
popf
adc
sar
or
jmp
enter
adc
mov
mov
mov
or
sub
adc
push
dec
pusha
pop
stos
xchg
fs
sub
std
xchg
cmp
sub
daa
fwait
or
inc
dec
fistpl
sahf
inc
arpl
sbbb
iret
daa
mov
add
mov
ja
inc
test
shrl
and
dec
in
pop
add
test
jl
jne
mov
cmpsb
fldt
sub
das
and
mov
insb
dec
inc
push
in
in
dec
jbe
insl
jp
fwait
mov
add
mov
and
testb
das
das
das
imul
jbe
pop
jmp
inc
divl
mov
data16
add
hlt
inc
shlb
aaa
xchg
enter
inc
insl
xchg
lahf
cli
add
loopne
and
dec
or
push
jo
sub
mov
rcrl
inc
icebp
mov
les
and
ret
add
adc
xor
jg
push
clc
xchg
shld
nop
mov
les
mov
test
dec
sub
mov
pusha
push
jae
cmp
mov
and
mov
jmp
je
and
cli
xchg
adc
jno
push
gs
push
arpl
jns
or
and
add
or
jo
insb
xor
cmc
bound
sub
aam
pop
movsb
push
cmc
or
jle
pop
xchg
ret
push
push
add
mov
dec
out
pop
sub
dec
rcrb
lds
jp
stos
jp
je
xor
shll
xchg
jne
lock
adc
xor
cli
add
push
xchg
out
sbb
rcl
sbb
fistps
gs
adc
inc
inc
scas
mov
push
xchg
jge
lret
lock
cmpsb
mov
jmp
adc
dec
push
push
or
fildll
cmpsb
inc
jae
xor
jg
cld
stc
sar
repz
test
imul
push
dec
xchg
adc
test
xchg
or
push
push
ljmp
jle
es
fbld
fs
mov
je
jbe
jae
pop
xchg
mov
ja
add
sbb
sti
jb
arpl
roll
push
movsb
test
mov
cli
jmp
and
test
mov
lret
push
jb
push
mov
mov
pop
xor
aas
push
movsl
mov
repz
mov
loope,pt
push
rorb
cs
dec
popf
cli
mov
test
imul
imulb
lret
dec
out
in
push
mov
lret
jl
dec
in
adc
notb
add
rol
testl
jp
test
push
cmp
not
xor
ror
pop
popa
insb
loop
sbb
ja
sbb
and
ret
subl
xchg
out
xchg
int3
inc
cmpsb
inc
mov
jno
pop
sub
movsb
sti
out
sub
cltd
arpl
and
cmp
imul
jmp
adc
mov
fmull
mov
fdivl
sub
mov
fwait
xchg
daa
loop
popa
stos
adc
mov
lds
mov
sbbb
jo
addb
push
push
mov
outsl
mov
mov
or
movsb
cmp
outsb
add
test
push
sbbb
hlt
mov
int3
in
insb
notb
push
adc
test
xlat
mov
or
rolb
mov
mov
decl
jnp
push
pop
cwtl
lret
dec
dec
xor
mov
mov
and
xor
aaa
nop
sub
int
mov
repnz
pop
adc
mov
aad
popf
call
lcall
push
xor
ret
std
jg
jb
jle
cmp
gs
stc
icebp
in
stos
addr16
sbb
imull
out
mov
aaa
ret
pop
xchg
jne
dec
xor
or
cmc
loope
dec
lds
movsl
push
es
daa
loope
hlt
xchg
imul
jp
js
mov
shll
mov
push
sbb
push
imul
ret
ret
sbb
andb
push
lahf
andb
add
stc
inc
push
sub
and
movsl
dec
notb
sub
jl
push
scas
sti
mov
jg
mov
mov
insb
add
push
nop
mov
mov
jecxz
sbb
ret
sub
jbe
jb
out
push
movsl
leave
mov
addr16
outsl
gs
adc
jg
mov
add
test
out
cmp
push
decl
cmc
psubusw
dec
leave
clc
jo
stc
push
sub
out
adc
cwtl
xchg
test
mov
pop
iret
push
ss
mov
icebp
jmp
mov
aas
ds
cs
int
jmp
ljmp
pop
jge
xor
cmp
or
insb
adc
int3
and
mov
xchg
sub
test
pop
pop
fildll
cli
mov
xchg
pop
pop
lock
inc
adc
fistpll
nop
stos
jb
inc
pushf
jge
cmc
mov
insl
sahf
pop
inc
out
lods
loopne
pop
mov
dec
jge
adc
gs
stc
pop
std
or
inc
cmp
inc
inc
inc
imul
js
cmp
dec
pop
fldcw
movsb
aas
incl
leave
fidivl
dec
push
in
add
fucomi
xchg
cli
ds
xchg
mov
mov
fucompp
rcrl
or
outsl
in
sub
mov
jnp
inc
adc
or
sub
xchg
cli
sbb
push
loopne
pusha
pop
xor
dec
and
or
cld
inc
xor
and
push
xor
out
lods
ja
jnp
add
dec
sub
repz
iret
mov
mov
sbbl
ja
dec
cmp
addr16
add
pop
sbbb
cmp
lcall
push
or
shll
negb
ja
aas
test
cmp
loop
jne
jae
push
andb
pop
cmpsb
cwtl
sub
pop
lcall
sub
sub
mov
xor
push
rcll
and
adc
pop
cmc
bound
dec
inc
push
adc
dec
std
into
xor
push
aam
ja
mov
stos
inc
arpl
cmpsl
mov
jp
jbe
out
pop
call
sbb
mov
push
out
sub
popf
xchg
mov
pop
mov
push
mov
pop
les
pop
or
aam
dec
outsl
pop
xlat
jl
pop
mov
mov
cmp
xchg
dec
into
push
hlt
adc
imul
add
adc
fcoml
cli
notb
mov
cmc
enter
cltd
add
hlt
fs
popf
mov
add
stc
sub
popa
fadd
mov
mov
dec
scas
jno
push
divb
cmpl
xchg
scas
cld
add
cld
push
lods
inc
add
in
je
add
mov
push
xchg
xor
cli
je
and
rcr
fnstcw
repnz
test
jle
sub
dec
iret
imul
fldenv
out
mov
int
insb
fists
jo
bound
inc
ss
pushf
jo
sbb
sub
xor
loopne
cmp
in
adc
cli
pop
sub
popa
add
fldcw
push
icebp
movsl
jp
push
pop
xchg
jl
leave
gs
jmp
sub
insl
aaa
sbb
mov
mov
jb
in
add
dec
inc
popa
cmpb
call
or
mov
adcb
sub
cld
test
mov
pop
cmp
insb
push
mov
xchg
or
adc
mov
pushf
jb
mov
pop
popf
cmpsl
sbb
inc
inc
push
pop
jb
mov
pop
cmp
or
clc
ja
movsb
test
push
call
aaa
fwait
mov
add
mov
mov
andl
out
cmp
fdiv
add
lods
std
or
ljmp
out
fcoms
out
test
xchg
aas
insb
popa
mov
fldt
inc
stos
pusha
mov
fsubrl
push
call
cld
gs
cmp
nop
sarb
popa
call
test
xchg
insb
inc
fwait
popf
jp
lea
fwait
and
movsb
xor
pop
lds
mov
jae
insl
jge
dec
add
dec
repnz
sub
cmpsl
sbb
xor
pop
ret
jnp
xchg
push
pop
lods
inc
xchg
cmp
repnz
ds
jmp
mov
mov
icebp
add
xor
dec
popf
movsl
inc
cs
mov
mov
shll
or
inc
cmp
testl
xchg
aad
sti
cwtl
addr16
xchg
sbbb
mov
jbe
loope
rorb
rorb
addr16
pop
ja
mov
lea
enter
jmp
sub
and
repnz
pop
dec
sbb
push
bswap
dec
mov
mov
xchg
add
xor
sub
test
stos
data16
pop
mov
out
and
in
sbb
push
int
mov
rol
push
inc
push
out
inc
lock
cmpsl
mov
mov
xchg
sub
scas
cmpsl
jp
pop
add
movsb
fwait
and
fnstenv
fs
pop
mov
repz
das
lds
mov
lea
clc
cmp
xchg
mov
mov
jnp
push
inc
loope
push
pop
cltd
test
pop
loopne
in
stos
xchg
xor
push
mov
std
lods
popa
ret
pop
xchg
push
out
xchg
popa
shrl
dec
movsb
popa
add
jne
lret
adc
cld
fwait
test
movsb
dec
js
movsl
mov
or
ljmp
js
push
bound
mov
pop
push
inc
pop
lock
jmp
and
add
mov
icebp
push
mov
push
inc
and
cld
js
cmpsb
test
fucom
mov
inc
and
sbb
or
bound
imul
push
test
xor
mov
and
mov
push
in
stos
test
jno
loopne
xor
jb
int
into
and
push
mov
leave
lock
and
cli
xor
addl
rorl
mov
das
lea
roll
pop
imul
mov
mov
pop
sbb
data16
repz
jo
jae
fidivrl
arpl
xchg
pop
or
les
inc
lret
shrb
push
xor
dec
lret
or
jg
jmp
subl
test
dec
dec
test
fnstsw
rorb
ret
mov
inc
fdivr
sbb
inc
pop
cmc
mov
outsl
inc
push
dec
xor
stos
pop
icebp
iret
es
mov
xorb
xor
inc
jb
jp
stc
iret
les
dec
in
mov
xchg
dec
xorb
sahf
inc
xchg
fsubr
dec
mov
jno
sub
orl
cmp
aad
in
lock
mov
notl
and
loope
sbb
mov
mov
lcall
mov
int3
cs
lods
mull
cli
inc
lcall
aam
dec
lock
sub
in
dec
xor
in
ret
jnp
sub
xor
hlt
sub
inc
or
mov
stc
test
shlb
hlt
or
and
mov
or
mov
or
cli
mov
adc
xchg
call
adc
int
pop
add
bndstx
cmp
pop
leave
js
adc
shrb
sbb
stos
lcall
fldenv
dec
add
push
push
lods
aaa
iret
adc
xchg
out
cld
sub
sbbl
or
mov
mov
xchg
scas
dec
out
or
pop
and
lds
xchg
pop
sarl
std
lret
std
pop
mov
pop
pop
insb
add
jnp
jmp
xchg
popa
cmp
mov
cmpsl
ret
lcall
popf
xchg
stos
or
fdivl
mov
and
cmpsl
out
in
dec
pop
fs
in
outsb
pop
les
pop
call
scas
mov
gs
xchg
dec
push
scas
inc
popa
cwtl
iret
cmpsl
cmp
push
int3
push
dec
cmc
lods
mov
pop
pop
out
decl
and
rcl
pop
ja
cmp
xchg
cmp
jnp
xlat
mov
mov
dec
sbb
jnp
divb
and
jge
in
xchg
stos
push
pushf
ficomps
add
sbb
cwtl
inc
icebp
xor
js
mov
mov
loopne
or
inc
inc
sti
xchg
cmpsl
test
inc
lods
enter
mov
ss
xor
inc
xchg
mov
imul
icebp
xchg
dec
push
int
sbb
mov
push
jb
adc
fwait
xor
rcrb
cli
addl
jb
cmp
mov
lods
mov
cmp
in
xchg
push
aas
int3
loopne
cmc
or
adc
pop
inc
mov
mov
push
js
push
subl
dec
mov
cmp
imul
and
pop
dec
push
lret
adc
repnz
mov
loop
in
jb
bound
mov
jnp
fidivrl
aas
ljmp
into
aaa
dec
push
push
push
ljmp
jno
pop
adc
aaa
ljmp
bnd
mov
lods
mov
andl
xabort
dec
pop
insb
sbb
mov
shlb
leave
add
lret
push
pop
aad
pop
aaa
mov
xchg
lahf
xor
or
pop
jmp
adc
cmp
jno
ret
jb
xchg
jns
xorl
mov
jmp
push
inc
out
imul
testl
mov
sub
sub
fwait
in
sbb
push
push
popf
inc
sti
adc
inc
mov
sbb
gs
call
jge
sahf
jbe
fiadds
dec
ljmp
enter
jno
add
cmp
jg
pop
push
mov
inc
testl
pop
movsb
sbb
scas
mov
jmp
orl
sar
push
imul
scas
push
mov
mov
insl
out
andb
xor
xchg
jns
dec
adc
das
sbb
test
mov
cmp
xor
jecxz
mov
iret
sarb
adc
mov
cltd
xor
lret
jno
push
mov
pop
mov
mov
add
sub
mull
sbb
sub
xchg
mov
inc
jmp
xlat
insb
sub
cmpsl
call
mov
dec
push
inc
push
mov
inc
loope
cmp
xchg
add
or
sbb
add
mov
mov
loopne
ss
push
pop
mov
nop
in
sbbb
inc
pop
sahf
jmp
lret
pushf
xorl
xchg
inc
in
test
push
in
sbb
jae
jb
sub
pop
sbb
or
mov
add
js
call
jmp
mov
cmpsb
lds
out
andl
push
and
push
negl
jp
imul
or
pop
jmp
stc
fdivp
shlb
add
pop
push
xchg
sub
xor
rcl
xchg
sahf
mov
push
add
fwait
int3
outsl
xor
mov
fmul
fistpl
cli
fsts
or
int3
jl
mov
mov
aas
outsb
repz
jne
or
test
mov
es
xor
jge
lea
scas
jge
mulb
jb
loopne
push
movsl
inc
push
xor
insb
das
push
out
xchg
bound
std
fisubl
push
cltd
fcmovne
xchg
daa
outsl
xor
mov
dec
imulb
or
xor
fcoms
aas
mov
push
pop
and
sbb
in
lea
pop
adc
daa
call
mov
xchg
push
test
je
push
lcall
inc
push
mov
out
push
scas
inc
in
popl
rorl
gs
imul
movq
mov
ret
jns
test
es
movsl
in
and
lret
jl
inc
push
enter
push
ljmp
add
fisttps
push
in
push
test
test
inc
fimull
imul
pop
sbb
into
jb
sub
pushf
int3
bound
sar
xchg
adc
decb
adc
pushf
in
adcl
test
sub
lret
pop
insb
add
mov
xlat
aam
in
insl
cmp
insb
mov
xchg
stos
lret
int3
sbb
lds
and
outsb
sar
and
or
data16
cmp
mov
outsb
fwait
cld
jmp
rolb
and
inc
stos
mov
cwtl
lret
js
or
lods
jae
loope
cmp
daa
paddw
add
xchg
mov
push
in
or
fyl2xp1
stos
mov
fstp
and
xchg
loopne
test
jbe
jmp
mov
cmp
hlt
mov
fsubl
outsb
fsubrs
es
outsl
cmp
xor
insb
push
mov
jg
test
push
dec
pop
pop
and
ret
aam
ja
stos
inc
call
sub
leave
and
cmp
mov
insb
idivb
mov
aaa
mov
fs
dec
add
mov
push
xor
aad
xor
testl
push
cmp
rclb
pop
adc
mov
adc
ss
inc
jg
mov
cmp
test
mov
fmuls
adc
pusha
int
push
pop
in
dec
mov
ret
add
xor
cmp
jno
sub
push
int
sbb
arpl
int
loopne
mov
cmp
rcll
insl
fwait
lods
inc
mov
push
jo
sbbb
hlt
movsb
mov
sarb
mov
shll
adc
cli
jg
and
fidivrl
and
mov
mov
mov
into
gs
sub
out
pop
in
add
out
jnp
xchg
outsb
cmp
imul
mov
cmpsb
xchg
inc
mov
push
fdivrl
addr16
push
pop
fbstp
out
pop
mov
cltd
pop
push
adc
es
aaa
jb
push
or
addl
nop
mov
cmp
mov
mov
fwait
call
fdivr
cwtl
dec
cmp
xchg
pop
test
aaa
in
and
dec
fildl
lock
jmp
adc
xchg
je
frstpm(287
xor
cmp
inc
loopne
dec
adc
and
fsubrl
fcomps
adc
mov
enter
pop
jns
arpl
push
fwait
sub
call
jbe
push
sub
xor
mov
push
fnstsw
sbb
xchg
leave
or
movsl
in
dec
subb
cmp
jge
or
push
in
or
addr16
pop
or
mov
fistps
rclb
mov
dec
and
jb
mov
lock
mov
xchg
dec
mov
inc
mov
adc
or
rdpmc
out
fs
out
bound
push
mov
cmp
cltd
inc
sbb
mov
cltd
movsb
inc
loopne
mov
mov
inc
xor
test
mov
dec
jge
push
push
popa
pusha
fldenv
adc
clc
xchg
popa
insl
xchg
imul
addl
sti
xor
repnz
cmp
xor
adc
cli
inc
dec
imul
push
out
cmpsl
jp
out
lcall
dec
push
add
or
arpl
mov
lahf
test
es
cmpsb
jl
cmp
xchg
adc
lahf
jb
insl
andl
scas
inc
and
mov
cmpsb
push
sti
mov
mov
pop
cltd
daa
or
cmp
fucomip
xchg
loop
test
mov
dec
jl
inc
not
jmp
dec
pop
sahf
jno
pop
insl
test
out
adc
loop
in
push
divl
mov
or
mov
aam
mov
fnstenv
or
adc
push
add
xor
add
popf
aad
fisttpl
cwtl
lcall
inc
dec
loopne
mov
cmpsb
inc
addl
push
add
mov
ret
test
lret
push
cmp
mov
push
fwait
lods
push
and
or
adcl
adc
and
out
sbb
mov
dec
lock
in
pop
adc
mov
push
repz
xchg
call
or
sub
adc
push
sub
in
test
mov
mov
adc
sbb
mov
adc
and
dec
imul
push
mov
push
ss
mov
pop
fsubrl
cmp
or
xchg
shrb
pop
shrl
or
or
push
mov
push
fimull
test
loop
jae
out
aas
sub
inc
xor
mov
push
cmp
push
xchg
inc
or
push
xchg
or
xchg
das
mov
push
mov
aam
je
dec
xchg
mov
pop
cmp
jge
test
lret
jle
orb
pusha
mov
mov
or
mov
cmpsl
out
adc
mov
stos
inc
jp
aad
les
lcall
ret
in
les
enter
push
jne
and
add
scas
lods
inc
loope
test
jmp
inc
fidivs
xchg
jmp
xchg
fmul
fstpt
rol
pop
mul
and
jno
sahf
and
test
js
call
and
jo
jge
je
cwtl
jmp
sbb
call
in
pop
push
out
and
ficompl
bound
int
ja
sub
adcb
xchg
mov
xor
scas
popa
cmp
inc
and
cld
imul
addr16
fadd
lock
cmpsl
adc
testb
nop
jnp
dec
xlat
cmpsb
sbb
call
mov
jne
in
aas
fst
inc
fsubl
in
mov
shll
jl
int
dec
fcmovnb
add
mov
jb
cld
addr16
cmc
push
jae
iret
gs
dec
loop
in
aam
fsubr
fistl
inc
bound
sub
inc
cwtl
lods
mov
mov
test
cli
in
insl
sbb
fcomip
lea
or
mov
fcomps
clc
ficompl
mov
hlt
dec
aas
push
jmp
mov
cmc
je
rorl
cmp
push
cli
test
ja
loope
mov
cmp
cmp
gs
add
jno
mulb
cmpsb
scas
idivb
cmpsl
add
or
pop
aad
jp
imul
sbb
jge
loope
ret
addb
fwait
push
and
and
dec
leave
xor
or
fbld
inc
lods
test
js
pop
lock
cmp
push
lods
sub
test
mov
jb
jg
and
stc
popf
push
lret
mov
mov
ss
cmp
daa
inc
out
xorb
or
adc
mov
leave
xor
rcrb
pop
out
cld
add
push
jge
fxam
jl
lret
xchg
push
push
add
outsb
xor
cld
inc
rcl
sub
jp
jno
and
int
mov
jae
pop
push
jmp
or
mov
lods
mov
in
mov
adc
jmp
adc
int
cmp
mov
fwait
sub
mov
addl
pop
sbb
sbb
ss
data16
jl
mov
or
cli
pop
sub
mov
loopne
dec
js
jl
and
jp
stc
mov
add
add
repz
cmp
add
fmul
int
cwtl
pop
in
imul
les
mov
inc
mov
aad
mov
pop
sar
inc
fdivp
sub
and
sub
inc
sub
xchg
ret
into
mov
pop
shrb
jbe
pusha
add
sbb
adc
roll
xor
pop
movsl
sbb
das
or
andb
js
push
sbb
test
test
jo
mov
clc
movl
mov
fsub
pop
sbb
loopne
lahf
push
mov
mov
fwait
mov
xchg
mov
shlb
pop
push
popf
scas
inc
mulb
sahf
xor
jge
mov
test
les
add
shrb
repnz
out
cmpsl
lock
push
add
cli
testl
subl
jno
rcrb
push
mov
push
sbb
test
fsubr
cltd
scas
shll
cmp
jle
jg
xlat
mov
xchg
divb
cld
xor
in
dec
insl
add
jmp
mov
cli
dec
mov
sub
dec
stos
dec
popa
jmp
sub
test
fisttpl
movsb
aaa
jae
pop
jb
ljmp
mov
sbb
shrb
xor
push
test
ljmp
mov
divb
lods
sub
and
xchg
push
insl
add
xchg
or
mov
mov
xchg
pop
test
pop
cmpb
xchg
leave
jecxz
xchg
push
inc
sahf
push
pop
and
cli
rcll
jmp
in
sub
jge
mov
mov
fisubrs
mov
xchg
pop
int3
rcll
sti
fisubrs
ja
aad
xor
lock
push
jmp
pop
ret
jo
or
sub
test
pop
mov
push
nop
sub
out
js
loop
inc
adc
test
xchg
add
loope
mov
ss
mov
dec
jno
push
mov
pushf
ss
mov
xor
insb
divl
shl
add
rolb
js
pop
fisubs
push
repnz
mov
adc
sbb
cmp
mov
mov
test
incb
das
andl
flds
cmc
mov
dec
fistps
imul
fcmovnu
add
jg
adc
mov
int3
mov
test
cmp
sub
test
popf
ret
cmpsb
inc
aad
testl
negl
repnz
je
mov
and
lcall
and
mov
stos
xlat
pushf
iret
popa
jg
rcrb
in
and
in
sub
adc
ds
popa
mov
mov
dec
call
or
insl
mov
movsl
push
xor
push
jns
or
cld
fcomip
sub
pop
mov
repz
popa
add
jl
cmp
fidivl
testb
insl
xchg
clc
jae
add
fidivs
jecxz
cmp
sbb
jecxz
dec
and
clc
sbb
cmpsl
jecxz
mov
outsb
cmp
mov
xchg
inc
sbb
ja
add
cmpsb
rcl
lds
or
int
push
out
cmp
int3
push
jbe
push
jge
inc
mov
push
outsb
cmp
mov
jb
popa
dec
aad
mov
dec
outsl
mov
scas
mov
fists
fs
cmp
dec
int3
inc
lret
repz
je
push
test
rcll
pop
je
cmp
push
pop
out
aam
pop
adc
sbb
jp
dec
stos
or
loopne
adc
lea
ret
push
rcrl
int3
push
mov
lea
jge
adc
pusha
fstpt
dec
push
in
jp
jns
cmpsl
sbb
sub
je
jae
loope
mov
in
xlat
outsb
and
push
lahf
add
shl
pop
and
fbstp
ja
dec
loopne
in
cmp
shll
sbb
jge
ror
arpl
push
loope
jns
clc
add
hlt
push
mov
lds
rorl
cmp
out
and
aas
fcoml
popl
js
movsl
repz
jmp
push
mov
sbb
into
xorl
jnp
das
aad
cmp
into
xor
scas
push
scas
xchg
cmp
in
loope
and
jmp
mov
and
add
mov
int
loope
rol
in
pop
jmp
fbld
adc
push
in
cltd
out
xchg
das
cmp
push
mov
inc
sub
push
repnz
fldt
lcall
mov
or
add
test
ss
repz
je
sbb
cmp
inc
and
loope
mov
xchg
cmp
pusha
test
test
subb
mov
xchg
sbb
cwtl
sbb
negl
xor
lock
xchg
xchg
and
cmovs
mov
jns
popf
and
inc
in
je
mov
adc
inc
push
sarb
jbe
mov
cmpsb
imulb
aam
inc
xchg
insl
fldl
xchg
lods
arpl
in
sti
testb
fistpll
mov
in
mov
dec
add
mov
scas
push
mov
lret
inc
rclb
in
bound
int3
loopne
jle
sbb
push
imul
lahf
mov
jle
cmp
data16
xor
jae
stc
ret
inc
test
xchg
xchg
add
addb
dec
stos
arpl
outsl
out
jne
out
leave
jne
jne
jnp
loope
pushf
mov
loope
mov
je
fsubs
push
into
stc
aaa
and
inc
fcmovnbe
xor
xchg
cmpsb
jp
scas
jmp
inc
inc
mov
xor
sub
or
pop
lret
call
cld
ds
out
cmpsb
movsb
jg
inc
pop
lods
std
jb
inc
sub
mov
pop
gs
pop
outsb
jb
cmpsl
lds
ja
fildll
sub
fildl
and
fs
ret
hlt
xchg
lret
cld
sbb
ret
add
pusha
mov
xchg
cmc
dec
mov
movsb
rcl
add
and
or
aam
iret
and
in
in
lahf
call
mov
mov
out
cmp
aas
dec
roll
pop
cmp
sub
movsb
in
mov
nop
sub
scas
aas
call
cmp
pusha
xor
popf
repz
pop
rcrl
mov
mov
adc
mov
ja
fdivl
dec
ud0
mov
jmp
mov
mulb
inc
xor
std
inc
pushf
cmpsl
push
pop
xor
mov
enter
cmc
idiv
mov
stc
aaa
and
fs
icebp
das
and
adc
movsb
mov
sub
push
xor
and
dec
jecxz
adc
int
cmp
out
jle
or
lahf
mov
shrl
mov
int
repnz
ja
iret
adc
sbb
insb
or
andl
sub
xlat
dec
call
pushf
push
mov
aas
in
hlt
aas
hlt
fstpl
lret
outsb
mov
cli
jo
dec
lret
xchg
xchg
out
adc
inc
imul
popf
xor
lret
xchg
dec
rcr
push
mov
test
dec
inc
incl
les
jg
mov
cmpl
fcoms
mov
adc
xor
pop
mov
fwait
jecxz
in
cmc
in
dec
sbb
int3
mov
call
jge
mov
les
dec
hlt
decb
mov
mov
dec
pop
adc
fwait
cmpsl
lds
dec
loop
add
sub
dec
mov
mov
out
data16
imul
push
es
lods
inc
dec
andl
popf
pop
mov
out
xor
dec
mov
or
sub
in
data16
pop
add
mov
push
sub
sub
mov
out
xor
cmp
jmp
int
xorl
cmp
jo
mov
mov
mov
dec
xchg
rolb
es
push
or
push
fnstcw
mov
cmpsb
loope
push
push
and
or
lods
inc
ljmp
cmp
add
jbe
sub
andl
inc
sub
aas
inc
lock
push
push
xor
les
aad
pusha
or
out
test
test
pusha
push
xchg
stos
mov
mov
jnp
add
mov
mov
iret
and
pop
jmp
lret
mov
add
and
imul
into
mov
xchg
cld
jmp
xchg
or
cmp
jl
mov
gs
adc
mov
loope
enter
mov
shrl
xlat
sub
fsts
pop
adc
cs
lcall
cmp
jne
cmpsl
xchg
inc
std
testl
testl
dec
jmp
and
icebp
xchg
imul
fldcw
stos
outsl
or
xchg
or
insb
mov
stos
pushf
into
cmpsl
ret
sbb
or
outsb
pop
push
push
addl
jbe
enter
fiaddl
nop
ss
inc
out
add
ljmp
adc
imul
and
mov
cmpl
shrb
adc
xchg
cltd
jno
js
sahf
add
xchg
inc
andb
and
pop
loope
inc
fisttpl
cmpl
fcom
sub
cs
xchg
out
arpl
pop
jo
jg
scas
dec
mov
mov
js
pop
cmp
clc
movsl
mov
cld
in
scas
xor
cmc
nop
inc
mul
fcmove
mov
stos
pop
sub
adc
loop
pop
jbe
in
cmp
or
add
negl
push
int
lcall
fucomip
fisubl
or
inc
hlt
or
mov
jg
fisttpl
ss
andl
mov
pop
fidivrl
mov
pop
aaa
xchg
out
jmp
xchg
lret
movsb
ret
xchg
loope
movsl
mov
sbb
aas
cmp
add
dec
pop
xchg
sbb
sarl
sub
mov
xchg
jle
pop
insb
enter
cltd
or
lds
pop
mov
mov
pop
jle
mov
xchg
push
sub
push
add
sbb
fadd
cmp
cmp
pop
dec
xchg
xor
fimuls
push
mov
push
add
mov
test
mov
sbbl
push
cmp
pop
jns
scas
mov
xchg
cmpb
and
stos
lret
and
dec
pusha
cmc
cmp
pop
outsb
adc
pop
idivb
mov
xchg
test
lahf
bound
imul
js
lahf
movsl
xor
xchg
js
lret
iret
jg
jecxz
insb
mov
stos
andl
jbe
pop
mov
and
pop
dec
fdivrl
jp
jecxz
push
mov
test
roll
imul
mov
jle
mov
push
sbb
jle
cmp
sub
test
jb
cld
mov
cmpsl
inc
fistps
and
out
xor
jmp
inc
mov
pop
mov
pop
ret
fists
mov
push
mov
js
push
enter
pop
ja
pop
mov
add
inc
pusha
adc
fwait
cmpsl
dec
sub
ret
sbb
cmp
and
ret
notb
jg
adc
enter
int3
mov
inc
sub
ret
cmpsl
jecxz
pop
ljmp
push
and
fstpt
jmp
push
jl
or
mov
lods
test
and
mov
mov
js
dec
adc
xchg
dec
or
bound
pusha
xor
outsl
aaa
enter
sahf
and
fldcw
das
scas
test
sbbb
mov
xor
ljmp
cmc
or
adc
es
xlat
push
pop
out
push
sbb
adcl
test
and
jecxz
mov
jae
bound
mov
mov
mov
adc
movb
push
repnz
mov
dec
mov
sbb
outsb
loope
cmpsb
push
cli
repnz
adc
jns
inc
xor
ja
int
mov
ljmp
jl
sbb
insl
and
ficoml
pop
xor
js
xor
xor
dec
sub
es
add
aam
fdivl
mov
xor
jae
inc
std
xorb
dec
sbb
and
mov
sbb
or
lret
mov
and
out
scas
fwait
add
popl
lea
sbb
andl
lret
jne
std
mov
push
or
cld
icebp
jns
movsb
or
jae
int3
movsb
arpl
das
jns
and
mov
add
jnp
fdivrp
mov
push
jge
mov
in
jmp
add
rcr
nop
aad
dec
xor
into
call
or
cmp
inc
mov
xlat
aam
popl
clc
mov
xor
cmp
xor
divl
mov
adc
hlt
dec
pop
push
das
sbb
cmp
xor
add
cltd
cs
cltd
cmp
cs
rolw
shlb
sarb
sub
add
cmp
pop
popa
and
iret
test
sbb
mov
cmp
out
lock
mov
jmp
aaa
pop
cmp
cmpsl
ja
pop
or
imul
repnz
mov
sub
xchg
test
inc
addr16
pop
neg
mov
xchg
sub
mov
sbb
f2xm1
add
daa
ja
xor
lds
xchg
fwait
mov
cmp
xor
loopne
xchg
adc
rorl
in
jg
stc
mov
xchg
jno
enter
cmp
jecxz
mov
mov
add
sub
xchg
xchg
mov
imul
xchg
sub
cmpsb
jbe
jg
mov
dec
jmp
sbb
arpl
cmp
push
push
roll
xchg
lock
cmp
push
sahf
xor
jg
jmp
xor
pop
dec
inc
adc
inc
inc
hlt
addr16
es
sbb
imul
daa
adc
pop
mov
xchg
dec
mov
xchg
ret
loope
fistps
mov
cmp
insb
fdivrp
addr16
leave
in
or
xor
loop
mov
jne
sbb
and
dec
mov
test
cmp
inc
sub
lret
mov
lds
ss
xchg
push
notb
add
cmp
sub
mov
in
or
call
lds
mov
dec
je
movsb
sub
adc
mov
and
dec
loop
inc
jp
fmulp
imul
adc
pop
xchg
jmp
mov
ffree
and
dec
jnp
jecxz
cltd
adc
fcoms
scas
cmp
jo
rclb
dec
lahf
cmpsl
das
mov
bound
mov
shlb
test
adc
stos
xchg
xor
scas
int3
shr
cmp
inc
aad
out
or
cmp
push
data16
es
xor
sti
stos
push
mov
je
xchg
clc
fildl
and
dec
daa
mov
and
cmp
adc
cld
lcall
jne
sub
loope
and
xchg
pushl
lahf
mov
sbb
adc
sbb
fucomi
push
or
jl
and
ja
mov
jmp
stos
idivb
test
sbb
cwtl
das
out
and
and
add
and
rcr
repnz
sub
jecxz
jg
aad
leave
in
mov
xor
aam
loop
add
add
das
fsubrl
rcll
cmp
push
add
sub
outsb
push
dec
and
lahf
cmp
movsl
xor
out
outsb
sbb
sbb
add
lods
xor
sbb
sub
mov
add
mov
sbb
pop
shrl
iret
lds
and
dec
fisttpl
in
nop
and
scas
adc
inc
fisubs
jge
mov
popf
js
mov
clc
lcall
adc
xchg
iret
push
ss
lock
jnp
cmp
add
and
xchg
mov
push
jo
idiv
ficomps
adc
jle
bound
fldenv
xchg
or
sub
emms
out
cmp
je
xchg
pop
gs
ss
hlt
push
xchg
mov
icebp
mov
mov
fiadds
xlat
std
xlat
push
adc
pop
popa
mov
and
test
insb
mov
addr16
inc
fnstsw
addr16
nop
pop
sbb
enter
add
test
lods
lods
clc
or
int
xchg
sbb
rol
jmp
pop
cmc
out
pop
ljmp
push
sbb
ljmp
fisubl
jbe
pop
das
je
cld
push
lret
int3
or
shr
push
outsb
jnp
mov
outsb
test
mov
add
arpl
cmc
or
insl
xor
icebp
or
fidivrs
aad
sub
into
ds
in
sbb
aaa
add
into
mov
push
pop
mov
lea
sbb
cmpsb
ret
pushf
lret
mov
mov
add
pushf
out
push
dec
cmp
popf
pop
stos
push
dec
xor
pop
jb
jl
and
jb
cmp
iret
mov
enter
mov
mov
repnz
arpl
mov
movsb
scas
dec
mov
add
push
scas
mov
jmp
dec
loope
mov
mov
jecxz
xchg
iret
dec
sub
in
std
or
push
pop
clc
jae
std
cmp
fsubl
loop
sbb
xchg
xchg
test
lods
ljmp
add
jmp
mov
push
mov
scas
sbb
sub
sti
movsb
popf
dec
pop
ljmp
call
sub
mov
sbb
lret
push
xor
jne
scas
mov
mov
shlb
xchg
test
shll
sub
ret
ljmp
sahf
lock
lods
mov
in
outsl
mov
test
inc
pop
cmp
dec
imul
lock
int3
xlat
das
adc
push
mov
mov
adc
add
es
xchg
int
mov
push
loopne
pop
mov
sbb
lods
inc
enter
jmp
enter
push
xlat
shll
inc
popf
orl
jg
iret
sub
adc
ja
leave
je
sub
xchg
divl
leave
loope
int3
mov
cmp
rcrb
arpl
push
xor
cmp
dec
ret
sbb
subb
or
sub
xor
rorb
mov
in
adc
push
inc
or
mov
push
fidivl
or
xchg
mov
push
clc
cmp
push
outsl
and
pop
out
leave
ljmp
fldcw
ficomps
cmp
movsb
aad
jbe
sub
rcrb
rorb
fdivp
imul
pop
lahf
cmpsb
outsl
addr16
imul
scas
fdivrs
sub
add
es
shrb
xchg
pop
je
mov
sbb
in
addb
in
and
adc
push
repnz
sets
and
xlat
xor
jg
int3
movsb
cmp
out
sub
jnp
stos
cmp
fwait
cltd
add
jg
and
xchg
stc
adc
inc
enter
test
lea
pop
jae
lret
push
out
and
aad
in
and
movsb
sbb
mov
mov
jae
mov
xor
loopne
jno
mov
ret
fists
cmp
repnz
cmp
jo
dec
jne
cmc
aaa
push
cltd
lods
jno
sub
push
rcrb
cli
cmp
aad
loope
mov
fbstp
mov
insb
xor
outsb
hlt
lret
ret
cmp
mov
adc
mov
sub
adc
inc
jb
test
xor
mov
aaa
pop
mov
mov
mov
pop
pop
mov
inc
adc
insl
addr16
mov
jbe
ss
push
push
ljmp
ljmp
pusha
cmp
pop
inc
mov
and
dec
ret
outsl
mov
sbb
out
fcomip
lea
clc
stc
push
adc
push
add
repnz
sub
xchg
aam
movl
dec
mov
xchg
jge
mov
gs
pop
sbb
or
dec
insl
and
je
inc
gs
push
xlat
std
sub
shl
pop
je
sahf
iret
loopne
add
je
sbb
adc
inc
loop
sbb
in
jp
dec
jns
mov
pop
nop
or
test
rolb
or
or
jle
push
lods
movsb
sbb
jl
ret
fildll
and
leave
mov
add
adc
push
cmpl
xchg
cli
or
mov
cmp
mov
mov
jae
fwait
lahf
mov
inc
test
jmp
int
sub
adc
xor
call
dec
push
mov
pop
inc
lods
orb
scas
cmpsl
bound
mov
pop
and
popf
add
jmp
imul
imul
jno
aam
xlat
sbb
fwait
pop
adc
pop
ret
xor
jmp
mov
mov
jb
sarb
into
daa
clc
imul
or
push
ss
inc
add
fs
jnp
mov
mov
pop
xor
pop
cmp
mov
cli
mov
sbb
push
leave
clc
sbb
push
mov
shlb
cmpb
cmpsb
mov
sti
aad
imul
xchg
cmp
jle
cmp
dec
test
testl
or
and
cmp
fnstcw
adc
jmp
ret
insl
inc
pop
and
bound
fnstcw
rclb
mov
jb
testb
xchg
pop
and
loop
bound
cmpsl
mov
repnz
fimull
or
dec
and
pop
nop
int
aaa
idiv
outsl
push
and
cwtl
and
push
stc
sub
insb
and
out
mov
sbb
test
adc
mov
fnstcw
shlb
dec
loopne
dec
fs
shlb
push
out
push
cli
pop
jg
xchg
jmp
loope
or
ret
mov
sbb
sbbl
sbb
pop
mov
inc
cwtl
in
pusha
clc
jno
pop
fbstp
xchg
or
repz
push
test
ficompl
push
repz
in
xchg
xchg
fcomps
add
mov
sbb
inc
push
lcall
mov
mov
mov
hlt
pushf
mov
push
push
arpl
add
movsl
sub
push
lods
repz
push
cld
imul
cli
add
inc
cld
mov
rcr
call
cwtl
fdivrl
or
fldcw
jle
in
scas
mov
adc
mov
rolb
push
sti
dec
lods
aad
xchg
or
bswap
out
xor
rcll
and
divl
sar
or
sub
mull
decb
add
fwait
push
ljmp
call
adc
xor
cmp
loop
xchg
adc
sbb
insl
and
or
icebp
ds
sub
dec
pop
lods
test
fcomp
or
mov
fs
fstps
mov
mov
aaa
cmpsl
inc
cli
shlb
inc
pushf
adc
and
xor
sub
and
push
xchg
std
icebp
movsl
fidivs
sbb
loop
jl
fs
inc
rorl
inc
cltd
and
xchg
mov
or
mov
cmp
or
xchg
xchg
hlt
push
cmc
push
dec
sub
les
enter
mov
test
pop
lods
aad
fwait
jmp
mov
mov
imulb
and
add
shrl
data16
inc
pop
xor
hlt
pop
addr16
pop
int
adc
nop
test
scas
sub
rcrb
pop
push
mov
mov
cmc
lods
cmpsl
iret
and
not
jge
outsl
shll
and
sub
sar
or
push
imul
lcall
outsl
cmc
dec
mov
mov
test
shrl
or
pop
cli
inc
scas
mov
add
jbe
lds
pop
fwait
aas
dec
cmp
inc
orl
and
bound
dec
dec
iret
stos
ds
cmc
push
sbb
sbb
lcall
in
pop
pop
jns
and
mov
outsl
stos
adc
mov
insl
hlt
inc
xlat
sub
out
outsb
ret
or
shll
test
xchg
arpl
inc
adc
sbb
jne
sub
pop
imul
sub
outsb
mov
bound
cld
adc
jnp
movsl
out
push
jne
in
xor
sub
int3
mov
movzbl
jecxz
pop
or
mov
cmpsl
add
icebp
cmp
sti
cmp
add
idivb
int
xchg
fwait
mov
dec
shl
js
jle
xlat
stos
rorl
sbb
bound
inc
push
push
std
pop
sub
or
mov
lcall
dec
aad
imul
ss
stos
cmp
xor
fbld
inc
sbb
test
xor
push
pop
push
add
xchg
test
dec
dec
ds
dec
mov
mov
sub
sub
leave
and
mov
sarl
mov
cmp
ds
nop
aam
ljmp
jge
scas
cmpsl
and
lcall
sbb
fwait
push
cmp
jle
and
or
outsb
cwtl
stos
insb
aaa
hlt
mov
outsb
or
jmp
jmp
mov
lcall
xchg
push
ret
pushf
jmp
push
loop
dec
mov
out
test
out
mov
fs
das
test
pop
jg
mov
into
mov
les
mov
or
or
jl
push
cmp
fwait
sbb
sbb
mov
fdivs
fisubs
add
mov
or
test
int3
adc
cmp
gs
mov
inc
mov
packuswb
push
push
js
mov
or
jl
and
adc
mov
jo
mov
fsubrs
push
or
scas
sub
ljmp
pop
dec
or
les
pop
xor
inc
popa
clc
xor
vxorpd
mov
dec
call
int3
arpl
jnp
jne
hlt
sbb
fsubrl
mov
mov
aaa
into
fdivrp
scas
push
xor
dec
and
lea
inc
dec
cmp
jl
pusha
inc
sbb
mov
dec
sub
mov
pop
cmp
pop
loop
mov
imul
nop
mov
mov
mov
jle
fisttpll
daa
adc
xchg
push
scas
add
out
clc
das
and
jp
imul
repnz
test
dec
fcomps
shr
ja
add
xor
stos
inc
pop
scas
push
ljmp
call
xchg
pop
sub
pusha
mov
push
mov
adc
mov
int
ss
pop
jp
test
sub
cmpsl
xor
lcall
dec
mov
push
lcall
cwtl
mov
ja
mov
cmpsl
ds
rorb
mov
sar
cmp
clc
push
jle
gs
xchg
xorb
xor
test
pop
repz
and
jmp
jp
push
outsl
push
jp
push
push
mov
mov
out
push
and
lahf
mov
inc
fnstenv
add
push
inc
cld
mov
cmp
cmp
pop
clc
stos
pop
enter
cli
mov
clc
jae
roll
inc
mov
shr
xchg
add
popf
mov
pop
pushf
outsb
movsl
cmc
stos
xchg
shrl
adc
xor
ljmp
or
stos
mov
sbb
aad
pop
pusha
pop
mov
jl
cld
mov
jns
and
push
inc
lock
repnz
iret
ret
pop
cmp
hlt
and
adc
mov
pusha
hlt
pop
daa
lcall
cmpb
cmp
inc
fldcw
pop
inc
adc
je
test
es
xchg
xor
aam
push
push
inc
in
into
cmc
jmp
enter
and
sbb
adc
push
and
int3
mov
cld
or
sub
sub
dec
dec
pop
out
cli
cmp
insl
movsb
inc
xor
inc
ds
lret
in
insb
or
jl
sub
scas
add
divl
sub
imul
xchg
xchg
sub
xchg
sbb
clc
xchg
icebp
adc
repnz
repz
clc
pop
imul
aaa
lods
mov
mov
int3
mov
mov
sub
add
jae
je
movsl
mov
cli
inc
add
cli
shlb
push
mov
xchg
cmp
pop
lock
shl
sbb
push
fsub
cs
and
sub
jbe
xor
sub
sub
inc
sbb
jnp
outsb
sub
pushf
sbb
lods
add
pop
dec
fiaddl
ret
enter
jo
cmp
dec
sub
hlt
mov
xchg
sar
stos
dec
adc
jl
or
pop
dec
mov
ljmp
inc
orl
add
adc
mov
cmp
sub
mov
cmp
push
push
je
mov
lret
mov
cmp
idivb
leave
mov
inc
sbb
jp
mov
stos
jmp
lds
xor
sbb
into
in
cld
or
popf
push
aas
popfw
xchg
mov
mov
add
mov
mov
andb
stc
insl
lods
inc
dec
dec
mov
mov
cmp
fnstcw
test
nop
nop
xor
negl
pop
cmp
call
data16
nop
push
xlat
hlt
mov
mov
flds
and
pop
cs
mov
adcb
lret
mov
xchg
mov
mov
add
cwtl
test
divb
jb
xchg
pop
cmpsl
shll
call
fisttpll
cwtl
and
jmp
jmp
je
es
insl
xor
push
sbbl
jl
inc
mov
imul
lcall
lods
jb
cmp
out
push
mov
lahf
mov
adc
mov
lock
push
jmp
push
daa
hlt
xor
add
sub
xchg
pushf
add
xor
push
out
dec
int
xchg
adc
jmp
push
stos
clc
fmull
dec
repnz
test
bound
pop
out
adc
and
jb
stos
mov
inc
bound
jp
inc
aaa
movsl
cmp
jno
lods
mov
jo
das
sub
push
fidivs
movb
pop
std
lods
push
inc
or
dec
cltd
mov
dec
outsb
push
lods
adc
add
inc
xlat
outsb
inc
xor
cli
cwtl
mov
test
mov
repnz
mov
push
clc
test
mov
dec
dec
mov
dec
and
jnp
mov
and
cmp
jae
cltd
nop
xor
add
mov
add
cmp
std
xchg
or
xchg
xchg
enter
lret
push
xchg
mov
gs
xchg
subb
push
add
std
xor
outsl
cli
mov
jle
jo
jle
inc
xor
dec
test
jo
mov
jnp
popa
adc
lods
ljmp
es
xor
add
fisttpl
sub
cmc
and
popa
lret
mov
add
ljmp
mov
mov
int3
lea
in
xchg
lahf
pop
mov
mov
sub
ljmp
mov
cmpsl
insb
xchg
cltd
or
lret
ret
add
in
cs
or
out
sti
sbb
or
mov
pusha
imul
push
sub
and
cwtl
shrl
add
cmpsl
lds
stos
int
jge
xor
and
pop
cmc
sbb
dec
sbb
daa
pop
mov
mov
jbe
xor
mov
js
movsl
sbb
push
dec
lock
sub
jae
mov
sahf
sub
or
jp
mov
dec
add
and
push
dec
roll
jno
add
sbbl
or
dec
add
fwait
jg
hlt
mov
lret
cs
stos
xchg
jl
inc
test
ljmp
imul
mov
cmpsb
movsl
cmp
repnz
push
sub
mov
mov
pop
clc
js
in
shl
ss
hlt
xchg
les
adc
xchg
jle
sti
lret
outsb
adc
and
shrb
inc
data16
xchg
or
jo
fsubs
mov
mov
jns
cmpsl
ret
mov
stos
test
or
mov
dec
mov
out
cmp
addr16
in
pusha
pop
push
push
mov
cmp
adc
aas
in
filds
add
fiaddl
dec
fbstp
fistps
mov
xchg
int
hlt
ret
or
outsl
lahf
jl
pop
scas
rorb
dec
push
or
insb
inc
jne
xchg
xchg
stc
cmpb
aad
add
mov
xorb
mov
popf
movsl
ds
and
cmc
fcoms
arpl
push
stos
inc
mov
data16
aas
xor
lcall
nop
sub
arpl
mov
ja
inc
mov
out
or
out
push
jg
iret
test
fisttpl
stos
push
and
loope
outsl
pop
mov
sub
jge
sub
sub
add
xor
cmp
cmc
adc
leave
xor
int3
icebp
sub
fwait
push
ret
lock
xor
in
inc
mov
cmpsb
in
test
jb
cmpsl
or
pop
call
in
add
setp
cmp
push
dec
push
fcoms
lea
push
mov
xor
pushf
dec
jl
out
aad
ret
mov
pop
repz
test
xchg
lock
sub
pop
fdivrp
and
cli
xchg
jnp
lods
mov
repz
incl
or
aam
cwtl
popf
add
adc
adcl
mov
or
jno
push
add
repz
add
xchg
jne
int3
and
or
xchg
and
mov
mov
test
or
std
or
aam
and
cltd
arpl
cltd
inc
adc
notl
insb
sahf
adcl
cld
jg
mov
add
rolb
dec
xchg
ja
and
mov
insb
adcb
jg
xchg
mov
mov
sbb
loope
sub
ja
lods
cmc
pop
sub
or
stos
mov
jmp
and
adc
cmpsb
cmpsl
jne
push
cmp
push
adc
or
mov
cmp
jl
jg
loop
sub
xor
mov
int3
mov
xchg
loopne
add
fcomp
test
bound
call
jae
cld
mov
repnz
movsb
movsb
jns
test
mov
es
call
out
and
rolb
leave
dec
mov
push
lock
and
jge
dec
inc
push
in
jae
adc
xchg
je
les
mov
cmc
pop
repnz
out
mov
jo
inc
lods
push
xor
adc
xchg
sbb
adc
dec
sahf
lods
lret
iret
jecxz
jmp
cli
add
xor
psubd
sbb
dec
lea
cmp
dec
lret
jb
aaa
into
dec
inc
mov
rcrb
push
scas
inc
push
xor
push
xchg
push
pop
adc
cmp
js
xor
loop
ficoms
inc
add
leave
jb
and
xchg
loope
mov
fsubrs
stos
testl
jno
les
fnstcw
jne
leave
sub
shll
push
cmpsb
inc
lea
inc
daa
test
xlat
pop
mov
fldenv
cltd
push
jmp
mov
dec
cmp
dec
loopne
das
dec
out
stos
inc
pop
js
cmp
fisttpll
fcmovnb
sub
pop
lds
cwtl
outsl
add
repz
fpatan
sub
jp
cmpl
mov
dec
xlat
jns
arpl
jae
mov
repz
lahf
push
sbb
rol
mov
add
mov
mov
xor
pushf
scas
push
icebp
icebp
mov
lock
out
xor
das
mov
insl
sub
mov
cmc
sub
arpl
adcb
test
pop
and
xchg
mov
fidivrl
add
je
or
insl
jne
mov
ret
fisubs
and
xchg
xchg
flds
jl
test
loop
stos
adc
jo
pop
mov
out
pop
in
movups
sbb
out
and
es
pop
and
add
mov
fwait
mov
sub
xchg
adc
hlt
dec
mov
mov
and
or
rol
repnz
push
div
dec
lods
sbb
add
divb
or
cli
adc
xchg
push
sub
arpl
add
push
jno
xchg
xchg
mov
fsubl
push
sbb
mov
les
cmc
pop
in
cmp
orl
sar
je
xorb
test
test
lock
bound
ret
pop
cmp
dec
in
push
adcl
out
test
sbb
outsw
cltd
mov
subl
jb
sub
xor
cwtl
call
sbb
enter
or
cmp
lods
fsts
xchg
sti
pop
aad
int3
pop
xorl
ret
pop
shlb
jmp
je
out
jge
xchg
cmp
hlt
in
shll
xor
popf
arpl
shll
rcrl
fcmovb
push
xchg
mov
lock
jns
repnz
lcall
pop
popa
shl
mov
xchg
mov
pop
repnz
add
mov
fmuls
in
jb
sub
or
jbe
jbe
mov
add
fstps
cmc
subl
test
fcoms
sbb
push
jnp
sbb
fs
mov
adc
mov
test
sbb
sbb
mov
dec
push
push
les
pusha
push
popl
inc
sub
add
cmp
lock
les
dec
movsl
sub
ret
lret
adc
sbb
mov
jmp
jne
frstor
mov
push
lock
shlb
push
mov
jno
mov
dec
test
jg
mov
insb
sbbl
movsl
sub
or
lcall
mov
mov
inc
pop
inc
push
xor
fs
xor
iret
add
mov
jo
push
leave
shrb
xor
jp
jp
xchg
cmp
icebp
loop
push
cld
ss
stos
out
pop
in
or
fs
xchg
mov
jecxz
in
push
cwtl
std
jo
ss
lret
xchg
add
xor
cmp
movb
sbb
cmpsl
pop
jbe
sti
inc
addr16
test
mov
nop
push
add
sub
stos
inc
lahf
or
sub
dec
pop
lods
mov
loop
stos
movsl
outsb
je
lock
lods
pop
scas
sbb
std
mov
cs
or
mov
inc
repz
pop
and
xchg
lods
pop
test
sub
push
dec
nop
hlt
clc
daa
lea
or
mov
in
in
push
imul
push
out
aam
xor
lcall
dec
nop
mov
inc
mov
addr16
push
nop
adc
add
cwtl
or
and
ret
push
int
in
push
sub
and
sbb
push
jecxz
fcomps
cmp
sahf
mov
or
out
in
sbb
dec
mov
aad
sub
adc
xor
std
inc
int
dec
sub
cs
repnz
iret
jg
adc
or
xor
in
out
mov
and
test
xchg
add
jecxz
jae
add
inc
pop
jo
sub
mov
cmpsl
add
pop
mov
inc
pop
xchg
movsb
mov
xlat
int
dec
cmp
lock
cmp
sbb
pop
sub
outsl
add
adc
or
dec
pop
or
sbb
dec
add
adc
xor
stos
pusha
inc
mov
pusha
addl
cmp
pop
lock
jmp
xchg
outsb
scas
in
mov
and
aad
iret
or
fcoms
cmc
adc
dec
aas
mov
mov
fisttpll
push
push
adc
sub
ss
adcl
push
or
subb
mov
add
jns
out
out
daa
add
jns
or
dec
adc
jns
loope
iret
mov
mov
jle
fs
fildl
add
cmp
int
cmpsb
cmp
sub
pop
lods
clc
scas
add
pop
sti
shl
adc
xchg
dec
frstor
aad
loop
js
shl
xchg
imul
insl
mov
ja
or
adc
das
cmp
clc
enter
roll
mov
js
ss
ds
pop
sbb
dec
or
fwait
mov
adc
stos
and
dec
stos
push
rcrl
push
inc
adc
mov
ret
adc
ss
mov
ret
jmp
loopne
cmpsb
sahf
xor
test
test
and
rorb
mov
loop,pt
sub
test
or
push
test
inc
lcall
fmuls
xchg
in
les
out
dec
cltd
sbb
aaa
mov
ljmp
jl
pop
imul
arpl
loope
or
mov
xlat
cmc
out
out
xor
cmpb
push
lret
sub
aaa
push
ss
sbb
or
mov
inc
gs
cmp
cmpsl
ret
xor
or
mov
xor
push
adc
js
push
dec
and
inc
in
inc
arpl
popf
insb
rcll
std
jmp
or
cmp
test
xorl
jge
fcomps
push
and
mov
wrmsr
inc
gs
out
xchg
fsub
in
dec
mov
cltd
mov
loope
xor
cltd
or
enter
ret
stc
minps
scas
test
mov
pop
push
pop
adc
hlt
into
testl
pop
dec
cmp
hlt
outsl
fwait
negb
inc
mov
insl
sub
xchg
lods
lods
pop
adc
adc
jecxz
xchg
adc
xchg
push
shlb
xor
ret
scas
in
cmp
push
outsl
and
xor
push
xchg
test
out
push
xor
orl
pop
pop
sahf
xorb
and
daa
or
repnz
sarl
addr16
popa
sub
in
jg
inc
pushf
xor
pusha
mov
mov
sbb
xor
je
mov
ds
sti
jl
jge
inc
mov
xor
inc
shrl
popf
pop
dec
dec
add
mov
lds
les
or
cmp
scas
outsl
push
loopne
inc
loope
mov
lock
fistps
test
xchg
scas
das
push
cwtl
pop
int3
outsb
xor
xor
ds
xor
or
arpl
outsl
lea
add
push
and
and
lret
jp
fildll
ss
jo
push
cltd
inc
xchg
push
mov
fcomps
daa
adc
outsl
add
mov
or
mov
pushf
or
sarb
mov
mov
xchg
lcall
sahf
jl
repnz
pop
or
push
jns
xchg
pushf
and
xor
xor
scas
and
loop
mov
xor
inc
mov
adc
fidivs
shrb
push
mov
push
mov
daa
hlt
pop
rcrb
adc
imul
pop
pushf
adc
hlt
inc
pop
sbb
out
push
add
outsb
out
jnp
std
nop
pushf
push
int
xchg
cld
popf
ficoml
clc
mov
inc
inc
nop
cld
xor
push
mov
adc
cmc
inc
jmp
loop
mov
cwtl
xchg
js
mov
fsubrs
test
scas
ds
outsl
arpl
mov
push
sbbl
bound
iret
xor
sbb
or
pop
scas
or
adc
repz
xor
adc
and
mov
mov
pop
sti
add
pop
sbb
mov
inc
addr16
fsubl
mov
int
and
outsb
push
jb
mov
mov
pop
enter
cmp
insl
aas
add
popf
or
dec
cmp
mov
mov
push
mov
repz
sub
jl
dec
pop
sbb
mov
cmpsb
inc
jge
lods
inc
mov
lds
mov
sbb
adc
popa
mov
les
jae
pop
test
mov
jl
arpl
dec
xor
adc
pop
repz
dec
imul
test
ss
xchg
adc
daa
stc
and
mov
popa
daa
xchg
pop
jecxz
sbb
jl
mov
les
mov
fisttps
pop
dec
outsb
or
cmpsb
imul
cmp
mov
test
mov
jle
dec
jecxz
test
subl
mov
or
xchg
insb
xor
push
mov
adc
adc
mov
sbb
add
xor
cmpsb
mov
add
cmp
fldt
into
push
out
sti
dec
add
xchg
xchg
push
jp
lret
ljmp
shrb
or
das
xchg
mov
sbb
in
in
aad
out
imul
inc
jmp
ds
dec
cld
or
lods
add
rcrb
and
loope
out
ret
push
mov
test
call
add
mov
adc
adc
and
rclb
cmp
iret
icebp
push
lods
out
pop
imul
movsl
icebp
sub
xchg
push
jns
out
ret
stos
pop
adc
call
mov
cmpsl
push
inc
cmp
xchg
cmc
mov
cmp
pop
repnz
lea
shr
cli
mov
push
cltd
mov
pop
cwtl
pop
push
sbb
mov
sub
fdivrl
pop
sti
xchg
dec
mov
sbb
cli
lods
rcrb
ljmp
jl
pop
scas
rclb
inc
aad
add
testl
push
fwait
or
mov
rorb
mov
shll
popf
ret
pop
adc
cmp
lock
shl
fists
or
inc
add
jbe
stc
lods
fiadds
movl
mov
xorb
mov
loopne
dec
outsb
fbstp
push
and
fidivrl
cmp
or
aam
shrl
fbld
inc
fptan
sahf
mov
jne
mov
or
scas
leave
pusha
loopne
addr16
mov
lock
sbb
push
and
out
inc
sbb
or
stos
push
inc
fcmove
xor
xchg
or
popa
addl
xchg
adc
push
mov
cmp
push
jno
push
cmovl
les
cltd
and
jle
mov
in
test
xor
lahf
neg
ret
imul
and
inc
cmpsl
ds
mov
mov
sub
push
sarl
xchg
inc
mov
pusha
inc
inc
fnsave
imul
push
push
call
mov
outsl
push
cmp
jp
pushf
xchg
aas
xor
pop
hlt
inc
jl
pop
pop
lock
jb
ret
out
xchg
outsb
mov
leave
mov
jge
mov
push
int
aam
jbe,pt
int
mov
cmpsl
lret
arpl
gs
push
pop
ret
inc
sahf
xor
leave
mov
xor
xchg
iret
mov
fists
mov
sbb
xchg
and
sti
mov
outsb
lea
std
push
xor
fidivl
and
dec
pop
sarb
sub
ds
and
or
icebp
inc
fs
das
das
cmp
adc
imul
in
es
fmul
movsl
and
pushw
jp
stc
mov
insb
lret
sbbb
pop
jecxz
aad
cmp
pop
out
test
std
insb
dec
stc
fstp
int
fidivrl
or
std
mov
add
lret
xor
incb
lds
inc
mov
in
mov
sbb
int
jmp
arpl
push
sub
jne
mov
mov
sbb
pop
leave
cs
dec
pusha
test
ja
lock
test
adc
das
pop
xor
xor
fdiv
into
mov
inc
cwtl
loope
fistpl
cmc
pop
fsubs
out
mov
jecxz
sbb
jge
adc
outsl
xor
popf
test
into
sahf
out
inc
mov
scas
int
imul
leave
subl
popf
rorb
inc
push
std
mov
movsb
and
mov
pop
ret
lods
cltd
ljmp
lods
fucomip
cmpl
insl
cs
out
movb
lret
out
xchg
ds
mov
ror
push
adc
fnstsw
bound
out
push
nop
scas
jne
in
nop
mov
add
daa
push
cmc
fisttpll
cmp
test
inc
loope
arpl
fidivl
bound
in
imul
inc
leave
imul
jmp
add
adc
mov
add
fdivr
inc
dec
in
add
sahf
lods
add
push
in
mov
ret
push
in
mov
cmc
ja
das
xor
mov
adc
mov
mov
add
mov
inc
pop
sub
pop
xor
and
aam
scas
push
in
and
mov
add
xor
sub
adc
testl
xor
jmp
sbb
loop
test
jns
movsl
pop
xlat
mov
ret
sbb
lods
inc
pusha
addb
dec
pop
cmp
jne
dec
popf
add
sysenter
outsb
std
inc
pushf
loopne
ljmp
pop
jno
jecxz
out
aam
int3
push
test
daa
cs
lods
or
int
cmpb
sub
filds
or
notb
dec
mov
pop
aam
mov
rol
lock
stos
std
cmp
push
xchg
cmp
stos
sbb
out
lret
stc
test
jmp
add
movsl
pop
ret
fidivl
out
les
orl
cmpsb
dec
push
in
jp
lock
pop
pusha
out
jge
dec
mov
adc
mov
inc
gs
or
xchg
mov
decb
cmpsb
fstps
jb
dec
sub
adcb
push
mov
add
ficoml
loope
lahf
in
jge
jmp
or
cld
sbb
jmp
xchg
push
out
bound
ret
adc
int
icebp
adc
jb
out
add
xor
jg
sbb
rcrb
lcall
pop
xchg
sbb
and
inc
adc
dec
jne
icebp
mov
pop
add
int3
xor
dec
add
out
xor
adc
sbb
xchg
push
cwtl
in
mov
and
adc
fcoml
mov
mov
mov
scas
xor
cmpb
pop
sahf
pop
xor
pop
stc
xchg
insb
int
dec
cmp
sbb
lods
fsubl
xor
repz
push
or
cmp
fwait
mov
dec
adc
imul
sbb
loopne
inc
cmp
xchg
pop
daa
outsl
mov
sub
mov
pop
les
mov
shlb
sbb
jb
out
in
jmpw
shrb
push
icebp
pop
mov
inc
xchg
dec
addr16
pop
cmpsb
push
out
inc
fbstp
dec
sbb
mov
ljmp
and
xor
pop
adc
addr16
inc
repz
xchg
and
pop
push
push
addr16
cwtl
mov
mov
adc
fists
cmpsl
push
popa
mov
or
adc
test
aam
iret
mov
and
in
icebp
nop
mov
dec
jg
jno
lahf
ss
outsl
daa
ret
cmp
pop
pop
cs
cli
out
pop
out
jecxz
cwtl
cltd
xchg
sub
imul
lcall
test
sbb
frstor
mov
test
movl
inc
push
push
inc
ret
gs
gs
mov
cmp
mov
jmp
movsb
sbb
or
xchg
mov
sbb
cld
lds
cmp
inc
in
pop
repnz
jno
shr
cmpsl
inc
jnp
mov
add
enter
test
jle
mov
or
sub
fnstsw
push
xor
sbb
loop
cmp
adc
imul
xchg
mov
mov
aad
mov
aad
xchg
repnz
or
push
inc
daa
add
inc
fbld
fcoml
sbb
mov
movsb
repnz
jg
sbb
jno
nop
mulb
loopne
pop
repz
add
movsb
add
jl
hlt
sbbl
movsl
idivb
popa
pop
push
mov
fmull
cmc
add
loop
push
jb
clc
sub
sarl
push
mov
cmp
xchg
jo
insb
shl
dec
pop
arpl
sbb
stos
jp
ja
pop
loop
lea
push
daa
mov
test
cmp
aaa
and
jne
test
adc
jecxz
mov
aad
cmp
xchg
lods
xlat
scas
xchg
insb
pop
dec
out
call
sbb
rol
fsubrl
data16
push
loop
pop
adc
mov
xchg
mov
imul
lcall
fnsave
jnp
xor
mov
mov
pop
js
xchg
mov
in
repnz
jp
xlat
sbb
out
arpl
stos
cwtl
flds
cs
fnsave
dec
sbb
mov
cmp
or
dec
insb
sbb
fwait
lea
xchg
inc
test
je
loop
inc
adc
repz
ja
mov
cmp
test
js
cwtl
addl
icebp
xchg
test
ljmp
jb
xor
pop
push
in
mov
imul
call
fistpll
sar
mov
mov
fcom
sbb
pop
sub
sub
cmp
mov
and
sub
lock
sbb
into
iret
xchg
arpl
incb
push
add
fidivrs
mov
insl
out
fisubrl
in
lcall
inc
xchg
hlt
sti
xor
xchg
std
std
mov
mov
sbb
addb
repz
cmp
inc
cwtl
lock
push
pop
loop
sahf
push
lret
mov
cld
and
popa
test
mov
mov
scas
mov
xchg
jne
lods
xchg
adc
cwtl
lods
or
lahf
sub
push
imul
jp
sub
or
sar
divl
push
repnz
inc
mov
jbe
loopne
faddl
orb
stos
jmp
jns
and
jnp
push
mov
and
aad
and
fsts
push
jbe
jg
dec
loope
jle
ret
cmpsl
enter
out
rcll
ret
ds
inc
out
xchg
sub
pop
imul
or
sbb
sbb
insl
cmp
push
mov
insl
jns
lahf
loop
aas
pop
sbbl
jnp
pop
dec
cmp
and
mov
xlat
mov
cmp
push
push
cmp
pushf
stc
int
in
pop
mov
sti
jbe
popa
xchg
dec
pop
fists
jecxz
sbb
push
xor
add
mov
adc
arpl
outsb
adc
jmp
dec
dec
gs
lcall
push
nop
mov
les
cmp
pop
movsl
jg
xlat
jns
addr16
adc
pop
cs
adcb
iret
mov
mov
in
aad
mov
daa
mov
sub
scas
xor
pop
testb
mov
mov
or
ficompl
pop
mov
cmp
dec
lcall
adc
adc
cwtl
das
call
lea
adc
mov
jns
jae
movsb
mov
lods
aaa
dec
fists
das
sbb
mov
dec
cmpb
push
aad
mov
fstpl
loopne
insb
xchg
mov
push
push
int
jmp
or
inc
add
dec
pop
call
in
pop
push
aaa
mov
and
pop
enter
imul
xlat
addr16
jns
lcall
pop
int
std
lret
out
lcall
lods
int
popf
push
xchg
cmpsb
xor
stos
sbb
std
jns
push
ss
gs
loopne
fdivrs
mov
mov
testb
test
mov
mov
fistpl
psubsb
cmpsl
lds
or
mov
aaa
stos
ret
pop
data16
adc
loop
je
mov
pop
and
adc
inc
dec
push
shrl
xor
std
decl
movsl
ss
popa
in
call
int3
jae
jge
and
cli
push
or
dec
aaa
cmpsb
cmp
addr16
sub
sbb
mov
mov
out
lods
fadd
add
push
jo
xor
sub
or
and
ja
cmp
sub
adc
aas
pop
out
lods
aad
jge
sti
jne
or
dec
cmc
sub
dec
out
pop
adc
scas
push
into
push
inc
sub
aas
jecxz
imul
out
test
test
mov
in
out
sbb
repz
sub
xchg
aaa
add
jns
les
mov
pop
jmp
into
adc
ret
je
xor
mov
adc
movsb
or
sbb
cmp
jo
subb
inc
sub
mov
int
aad
mov
js
fwait
sub
xchg
fisttpll
jmp
or
mov
or
lock
pop
xchg
repz
sbb
add
mov
pop
push
inc
pop
push
sahf
dec
lea
pop
pushf
pusha
pop
mov
sbb
movlps
add
jl
cmp
jle
mov
shl
or
ret
cli
pushf
jle
mov
xlat
xlat
cmp
scas
push
data16
mov
sub
sti
push
test
ja
jne
in
ret
adc
xchg
mov
test
cltd
and
in
jl
mov
aas
mov
or
mov
out
sbb
popa
adc
mov
fisttps
ret
lcall
jne
lret
into
icebp
bound
xchg
dec
pushf
scas
mov
mov
movsb
xchg
jge
fcompl
ret
fbstp
mov
mov
movsl
out
jecxz
mov
ret
adc
repnz
pop
xchg
xlat
mov
mov
dec
mov
imul
rolb
xchg
ljmp
andl
pop
adc
enter
imul
add
lods
mov
es
fbld
lcall
lods
adc
das
negl
mov
mov
xlat
mov
int
add
xor
push
js
push
jp
push
push
out
test
fsubrl
clc
fidivs
push
push
test
stos
in
add
js
sub
ja
imull
loop
jle
dec
cmp
fcomps
in
ret
dec
pop
dec
iret
add
mov
pusha
ss
mov
cs
notb
lret
in
mov
jl
cmpsl
loop
mov
sub
iret
adc
inc
xor
dec
in
jge
inc
gs
sahf
je
pop
ja
imulb
xor
sbbl
test
cld
pop
jno
inc
sub
ja
fwait
insl
test
add
ja
aad
mov
pop
gs
lret
jecxz
test
shll
adc
or
push
adc
xorl
sti
push
outsl
and
rclb
aad
int3
mov
dec
xchg
fidivrl
das
sbb
dec
nop
sbb
cmc
jg
leave
and
inc
add
cmp
mov
mov
adcb
dec
in
or
lods
pop
jnp
out
popf
movsb
pop
loop
adc
cld
pop
popa
mov
cmp
shl
dec
mov
add
mov
aad
pop
sub
xlat
scas
aaa
aad
push
icebp
sub
scas
test
pop
movsb
cs
cmp
cmp
insb
fwait
push
add
cmp
sbbl
dec
shrb
jae
adc
jl
mov
jmp
jle
pushf
or
push
cmp
shl
mov
lcall
imul
dec
cmp
fdivrs
push
ret
jp
inc
sub
test
mov
test
inc
mov
fs
xchg
in
or
fstpt
clc
mov
sub
lods
inc
xchg
push
inc
mov
iret
verw
vmovq
and
lods
push
push
mov
stos
stos
sub
jp
fsubr
inc
fwait
cli
inc
cld
mov
aad
push
push
outsl
ficoms
inc
sahf
call
into
fcompl
jmp
lcall
pop
or
pushl
jae
inc
jnp
ret
dec
jg
jge
andl
push
lds
xchg
lods
push
aad
test
ljmp
jge
leave
repz
mov
pop
stc
push
or
dec
fnstenv
in
sub
rcrb
xchg
lea
adc
cmpb
icebp
mov
in
les
jge
daa
mov
mov
xchg
fcomps
loop
xor
jo
movsl
xor
inc
ljmp
stos
inc
arpl
std
pop
scas
pop
xchg
lcall
cwtl
adcl
fnstenv
jmp
jmp
jne
xorl
sbb
cmp
imul
movsb
pop
dec
jmp
xor
or
test
imul
add
xor
je
sbb
imulb
xlat
xchg
mov
icebp
sbb
xor
call
iret
sbb
decl
push
ja
push
ficomps
test
pop
cmp
sti
xlat
jbe
xchg
cmpsl
mov
fucompp
adc
dec
fwait
mov
push
into
enter
nop
xor
mov
lods
scas
mov
xlat
scas
jb
jbe
shlb
rcr
leave
mov
aaa
jb
push
movsb
push
ret
movb
or
fwait
daa
leave
fldenv
dec
stos
in
in
out
mov
notb
xchg
movsb
fxch
aaa
outsl
push
imul
ficompl
rcll
push
imul
jg
and
test
icebp
pop
jmp
popa
inc
nop
push
jmp
adc
or
test
in
mov
push
bound
xchg
push
sbbl
loope
es
pop
cmp
enter
xchg
mov
idivl
ljmp
repz
mov
fs
sub
push
mov
rcl
xchg
mov
mov
push
and
fbstp
adc
dec
and
dec
daa
bound
cmpsl
andb
mov
push
nop
mov
dec
outsl
stos
jecxz
sbb
enter
jo
arpl
gs
addr16
pop
pusha
pop
lds
mov
dec
movsl
stos
xchg
and
jl
call
xchg
or
push
sbb
jne
push
add
cmpsb
xor
and
xchg
movsl
add
mov
repz
mov
lods
dec
and
add
dec
aas
sub
jmp
lock
shlb
mov
pop
leave
push
pop
sub
sub
xchg
out
ret
nop
addr16
mov
xorb
sbb
lret
fisubrl
imul
inc
gs
leave
mov
push
xchg
ret
in
cld
mull
aad
repz
add
lods
jmp
shll
fnsave
mov
dec
movsl
lds
push
insl
sub
mov
ficomps
fsubs
int
lea
mov
fistpll
aam
pop
sbb
mov
xrelease
icebp
push
xlat
dec
test
seta
xchg
fdivr
lret
pop
sti
xchg
leave
movsb
fwait
jl
scas
sbb
jno
sti
stos
icebp
pusha
fnsave
sbb
dec
or
and
lods
mov
or
dec
hlt
mov
loopne
inc
cmp
ret
mov
lcall
pop
jo
mov
cmc
andb
mov
or
addr16
mov
scas
mov
out
sub
inc
mov
mov
inc
or
in
cmp
add
out
test
lcall
inc
and
cld
loope
ret
aam
pop
xor
jnp
pop
enter
dec
out
jae
ret
or
cli
das
push
stc
or
xor
ficomps
cmp
adc
mov
fwait
sbb
push
pop
mov
sub
lods
inc
ljmp
icebp
or
sarl
inc
js
aad
out
mov
cmp
jo
sub
notl
xchg
add
mov
jne
fwait
push
pop
push
pop
fwait
call
enter
jl
pop
cld
stos
add
jne
xchg
mov
push
sbb
cmp
pop
xor
test
jg
jnp
movsl
xchg
bound
fcmovne
push
lds
mov
jbe
push
stos
push
scas
pop
push
jmp
fnsave
jbe
mov
cmp
jnp
dec
mov
dec
pop
pop
daa
add
js
mov
test
mov
xor
test
movsl
lds
mov
loopne
pushf
test
dec
icebp
cmpsb
in
incl
push
popa
inc
orb
test
test
cmp
and
pop
pop
adc
jnp
add
push
out
adc
add
ljmp
lods
jae
mov
sub
push
fcmove
movsl
fisttps
push
loope
add
test
aad
push
push
add
popa
lahf
push
xor
sub
inc
jle
dec
mov
in
in
jecxz
lret
push
adc
jno,pt
and
addl
dec
leave
gs
call
ja
mov
mov
test
push
ret
repz
jp
dec
fsubl
push
jmp
dec
ror
pop
or
out
add
movsb
orb
mov
push
je
jns
fcoml
aam
es
sub
lcall
out
add
pop
mov
into
loop
rol
stc
lods
test
fldl
pop
sahf
push
dec
mov
hlt
cmp
ljmp
sbb
jp
dec
ss
in
push
pop
outsl
adcb
mov
gs
addr16
adc
testl
and
das
add
cwtl
outsb
iret
adc
and
jmp
cltd
arpl
add
mov
fldenv
outsl
pusha
hlt
sbb
xchg
lods
pop
test
movsl
dec
shlb
pop
dec
push
test
movsl
sub
pop
or
xchg
jb
cli
int3
lods
mov
adc
inc
test
fwait
or
pusha
cli
or
mov
dec
and
fistps
mov
pop
enter
fcmovu
dec
in
push
jns
adc
mov
adc
cmp
int
add
push
jne
xor
jge
clc
inc
sbb
hlt
mov
insb
adc
fnstsw
mov
xchg
adc
dec
mov
test
dec
ficomps
jge
in
jl
sub
mov
jle
cmpsb
lds
inc
sti
jg
xor
adc
fs
ljmp
mov
ficoms
pop
cmp
jecxz
and
xchg
mov
cmpsb
sub
and
mov
xor
fnstenv
push
sbb
sbb
push
setne
xchg
in
or
cltd
jle
inc
les
fadds
inc
aaa
in
xorb
aad
xor
test
es
sub
jge
jns
xchg
scas
in
and
inc
sbb
scas
sub
push
mov
sub
ds
aam
inc
adc
test
mov
aas
enter
sbb
xchg
and
dec
out
cltd
mov
mov
push
dec
inc
pop
pusha
inc
sub
inc
test
movb
iret
mov
aad
js
mov
fildll
cld
pop
lahf
sub
pop
out
or
cmp
sahf
and
cs
jnp
mulb
xlat
movsl
outsb
xchg
sbbl
cmp
cmp
xor
jae
out
xlat
dec
sbb
xor
adc
adc
fldcw
jo
jle
mov
test
aam
out
nop
fs
lods
out
fdivp
dec
or
mov
adc
pop
mov
fistl
pusha
add
aam
inc
roll
icebp
shlb
adc
inc
inc
jp
jno
push
jecxz
ret
adc
sbb
xor
dec
pop
xor
int
imul
sti
sbb
shl
cmp
iret
stos
add
fwait
sbb
mov
xchg
jp
stos
jbe
dec
in
in
fldl
xorl
popf
mov
scas
sub
adc
lds
inc
sbb
mov
fs
ret
int
inc
iret
shlb
test
jecxz
insl
jae
lahf
filds
divb
cltd
xor
inc
inc
int
mov
jae
addr16
ljmp
hlt
mov
in
scas
xor
jle
push
lock
sub
dec
mov
xchg
aas
sub
dec
jno
fsubrl
leave
mov
lret
xchg
fstpl
mov
mov
lahf
xchg
rcl
push
in
es
mov
dec
test
and
int3
mov
cmp
and
push
cli
xor
imul
push
jno
data16
jns
leave
stos
fcomps
iret
inc
push
jmp
xor
mov
xor
adc
or
cmp
push
lret
ja
ljmp
cmp
repz
sub
inc
leave
js
mov
mov
xchg
xchg
stos
cli
imul
out
sbb
adc
xchg
out
jl
loop
jae
mov
jo
das
cli
inc
cmp
inc
cmp
call
cltd
cmp
lret
mov
cmp
dec
jl
inc
stos
lods
push
push
pop
mov
into
shll
pop
out
xchg
ficoml
cwtl
loop
mov
mov
mov
rorb
jge
push
fldcw
ret
mov
out
fildl
andb
and
xor
mov
decb
fcomp
lret
cld
lcall
lcall
mov
xchg
out
mov
insl
mov
or
cmp
addr16
sbb
stos
pushf
test
test
jle
stos
lock
or
sub
xchg
xchg
xor
mov
xorb
les
dec
mov
cltd
out
and
ljmp
pop
adc
xchg
add
aas
lock
insl
inc
add
popl
xchg
outsl
push
loopne
sub
sub
mov
inc
nop
hlt
push
mov
sahf
pop
push
xchg
push
popa
sahf
mov
sahf
lods
ljmp
out
cmp
ret
mov
adc
push
inc
aad
pop
nop
cmp
fdivr
mov
mov
popa
sbb
sbb
fucom
adc
leave
into
cmp
sbb
xorl
jno
add
inc
sbb
inc
xchg
and
hlt
xlat
jmp
dec
call
inc
fwait
imul
pop
cmpl
mov
adc
jbe
inc
xor
add
dec
xlat
adc
fcompl
out
mov
imul
lock
pusha
ss
push
bswap
push
mov
or
negb
cli
mov
nop
jecxz
ret
adc
sub
push
insl
add
or
ret
mov
into
sub
jge
add
pusha
sahf
sarl
ljmp
xchg
sub
xor
or
call
cmp
pop
add
adc
and
pop
push
inc
test
lahf
cmpsb
xchg
cld
fbstp
mov
mov
cmpsb
insl
in
sahf
xbegin
int3
sub
pop
mov
stos
xchg
mov
sbb
and
bound
mov
add
scas
inc
xchg
inc
jg
jg
push
fwait
mov
pop
dec
stc
into
inc
mov
jl
aas
or
mov
cmp
popa
rcr
push
daa
or
and
jle
mov
aas
adc
mov
pop
stos
decl
stos
jle
loope
add
mov
add
add
mov
pop
test
jb
jp
jbe
pop
xchg
fwait
out
dec
jnp
fnstenv
roll
cmp
mov
or
cmpsl
test
fxtract
arpl
in
dec
loope
subl
jbe
xchg
add
sahf
cmp
and
ds
sub
and
and
rclb
cmc
xchg
and
les
idivb
outsl
pop
idivl
jbe
lods
and
cmc
gs
xchg
mov
xchg
jbe
out
add
fs
dec
and
stos
push
sbb
aas
xorb
rcr
push
in
ja
ss
mov
cltd
mov
jns
xor
mov
xor
aaa
pop
sbb
pop
jb
or
adc
inc
mov
stos
enter
andb
mov
mov
repz
mov
aad
sbb
outsb
dec
repnz
sbb
adc
mov
sub
push
sbb
mov
jle
push
addr16
inc
test
stc
sub
frstor
call
mov
mov
or
push
xchg
test
and
mov
push
lea
out
pop
adc
cmc
nop/reserved
mov
shll
ror
fildl
mov
lret
jne
popl
inc
sbb
outsl
push
mov
jbe
jp
rorb
test
inc
in
jb
mov
lret
pop
lods
addb
inc
cs
add
arpl
repz
ds
in
jnp
cmp
dec
cwtl
outsl
mov
and
testb
fcompl
and
jb
in
je
jne
mov
mov
cmpsb
dec
mov
sbb
sbb
xchg
sbb
add
mov
lahf
shll
outsb
push
or
mov
loopne
cld
in
dec
test
jns
pop
dec
jnp
mov
test
dec
adc
push
pop
outsb
mov
mov
xor
loope
out
pop
add
pop
mov
mov
xchg
imul
sbb
mov
inc
jmp
lret
or
popf
xor
or
xlat
push
fists
mov
daa
adc
add
cmp
push
pop
addr16
and
xchg
xor
cld
jecxz
push
adc
aaa
popa
add
and
add
out
jmp
or
jbe
dec
push
and
loop
sbb
mov
cmp
aas
out
sub
insb
mov
mov
add
cltd
mov
stos
ja
lahf
arpl
xor
dec
lods
push
jns
pop
lcall
dec
mov
cmp
xor
out
aaa
mov
movsl
xor
test
fdivrl
fsubl
push
je
rclb
aas
push
mov
loopne
jnp
push
std
or
mov
dec
sbb
sbb
xor
int
push
sbbb
mov
loop
shlb
icebp
fxch
js
pop
les
dec
lret
jl
shrl
sbb
mov
hlt
push
push
sub
fidivrl
ja
xchg
movsl
cld
mov
stos
add
movsl
dec
fisttps
inc
sub
xor
mov
icebp
test
cmp
bound
popf
fcomps
mov
push
cli
and
cmp
sbb
mov
mov
xchg
scas
pop
mov
cmp
lret
lock
sti
add
ret
out
rcll
or
sbb
push
mov
push
popf
pop
jb
clc
test
inc
pop
pop
ja
cli
pop
and
bound
and
fwait
jg
jmp
repnz
or
mov
sub
into
inc
mov
inc
fmuls
adc
fwait
stos
jb
push
out
cmpsl
cmp
loopne
mov
ret
sub
cmp
fwait
dec
pusha
int
flds
dec
ret
leave
lret
insb
out
or
icebp
mov
xchg
fldenv
sbb
mov
aam
adc
mov
outsb
cmp
sub
add
sbb
sub
ret
int3
cmp
xchg
les
aaa
lcall
repz
into
jbe
inc
mov
inc
cmc
mov
dec
cmp
push
mov
in
jecxz
sbb
mov
jne
xor
mov
ret
pop
fnstenv
outsb
mov
daa
test
xor
negl
shld
xchg
cmp
dec
jae
repz
inc
push
sub
bnd
dec
dec
iret
rcr
fisttpll
push
adc
and
cwtl
out
mov
sbbl
mov
mov
sbb
std
repz
push
iret
vmaxps
pop
icebp
xchg
xchg
pop
lahf
in
mov
or
adc
inc
inc
xor
sbb
dec
sbb
push
xchg
sbb
sbb
pop
repnz
fiadds
mov
mov
sbb
push
fisubrl
adc
mov
or
addr16
push
push
mov
fwait
movsl
repz
out
outsb
fdivl
inc
cmc
jbe
ss
stc
xchg
pop
pop
popa
clc
push
repnz
mov
add
sbb
ss
cli
scas
int3
and
es
sbbl
push
or
mov
dec
pop
fwait
aas
add
sub
icebp
sbb
je
lahf
movsl
inc
nop
inc
jle
out
and
in
les
inc
dec
adc
outsl
test
ja
popf
pop
popa
or
es
outsl
jb
int
mov
xor
sbb
cmp
jo
ret
iret
fdivl
lret
mov
sub
popf
shrb
lret
add
cmpsl
ds
int
cmp
adcl
mov
inc
aad
das
push
test
les
lods
insb
aaa
call
inc
mov
jl
pop
sub
test
xor
and
mov
aas
mov
es
arpl
mov
jnp
stos
add
shll
inc
jl
cmpsb
xchg
inc
sub
inc
and
pop
ljmp
sub
sub
dec
sbb
jns
clc
shl
sub
test
add
leave
ljmp
mov
cmpsb
mov
jecxz
sbb
jp
cld
stos
mov
xor
cmp
fsts
aam
sub
dec
iret
jge
imul
into
sub
dec
shr
into
gs
leave
cmc
movsl
aas
sbb
into
loope
cld
push
jl
clc
cmpsl
dec
ret
fdivp
loop
push
adc
je
jno
lcall
adc
in
jo
cmpsb
fiadds
cmp
xchg
addr16
pop
cmpsb
imul
loop
sbb
jp
fisttpl
mov
addr16
dec
shr
jbe
or
out
js
cs
test
mov
loope
dec
pop
popf
or
insb
mov
les
loope
push
ljmp
cmp
pop
scas
push
xchg
mov
enter
iret
enter
dec
xor
cmpsb
into
sub
mov
cld
loopne
mov
jnp
push
out
pop
and
dec
cmc
out
sbbl
fnstsw
push
dec
mov
cmp
push
testl
xchg
imulb
fbld
ljmp
pushf
cli
push
jl
xor
dec
mov
mov
push
fdivl
stc
lret
pushf
and
add
fbld
mov
sub
iret
je
xorl
incl
xchg
xlat
or
mov
fs
aas
mov
push
clc
inc
cmp
push
test
sbb
jl
mov
popa
mov
scas
inc
jno
je
adcl
fucomi
cmpsl
sbb
push
movsb
sub
sub
lahf
int3
and
add
push
rep
lea
enter
xchg
pusha
imul
test
in
xchg
pusha
mov
addl
xor
shl
sbb
xlat
push
and
or
pop
jns
mov
ficomps
test
pop
and
pop
push
xchg
inc
cmp
cltd
mov
int3
adc
xor
shl
cmp
xchg
xor
add
xor
test
mov
rol
or
mov
pop
mov
pop
gs
push
sbb
lods
mov
adc
dec
adc
adc
fsubs
jmp
loop
mov
insb
mov
push
jg
leave
lods
mov
lret
fisttpll
iret
fcoms
cmpsb
rcr
xor
cmpsb
mov
mov
out
in
imul
xor
dec
add
out
aaa
into
and
and
xor
insb
fdivrl
pop
push
adc
fyl2x
scas
cli
js
fsubrl
dec
fistpll
in
cmp
repz
rclb
push
in
inc
jecxz
nop
mov
out
lds
aas
dec
bound
mov
mov
ret
push
pop
cld
rcr
sub
sub
jmp
mov
and
inc
xor
subl
out
pop
dec
pop
cmp
cmp
dec
push
inc
bound
cmp
int
cltd
cmpsl
jge
pop
mov
jnp
aad
pop
insl
scas
out
xor
shlb
pusha
clc
psrlw
es
push
sti
push
int
fnstenv
outsb
mov
repz
test
rcrl
dec
jnp
xor
inc
mov
xorb
cmpsb
ljmp
idivb
jmp
or
xchg
or
jl
push
std
xchg
inc
cli
outsl
push
sub
rorl
lret
adc
sbb
ds
popf
sbb
cmp
jmp
orb
jmp
push
and
xlat
jle
jl
or
add
cmpsl
enter
jne
pop
stos
and
shlb
rcrl
jecxz
out
lock
xor
mov
and
cld
push
ret
pop
inc
sbb
mov
aad
push
add
data16
fisubl
mov
or
icebp
adc
popf
stc
fimull
lea
xchg
scas
and
or
sahf
lret
pushf
cmpsl
push
xor
fidivrl
jne
imul
out
bound
xchg
loopne
jecxz
sub
mov
aaa
and
cmp
shrb
gs
popa
ss
into
ror
mov
out
mov
jmp
jp
jno
sbb
fdiv
or
imul
xor
push
dec
lock
adc
out
inc
cld
outsb
inc
test
push
mov
repnz
scas
out
adc
xor
pushf
adc
dec
sub
lcall
std
js
outsl
ret
roll
jnp
fisubrl
dec
mov
add
xor
fdivp
out
xchg
out
xlat
inc
add
sub
adc
je
cmp
pop
and
loope
add
addr16
or
pop
sub
dec
xor
insl
outsb
pop
sbb
dec
sbb
sbb
popf
rol
into
fists
je
into
ds
adc
cmp
je
mov
adc
imul
int3
pop
or
in
test
push
add
lret
popa
movsl
sub
cmp
scas
pushf
xor
in
aad
xchg
pop
push
push
cmp
pop
rcll
idivb
xor
lahf
and
daa
lea
xor
in
rclb
ret
addr16
mov
popa
xchg
jno
jnp
or
add
mov
jecxz
sub
leave
loopne
out
test
aad
fnsave
jmp
xchg
int3
sti
or
or
iret
es
and
mov
xchg
dec
inc
cwtl
mov
mov
sbb
inc
fnsave
cmpsb
std
cmpsb
xchg
es
mov
pop
xor
mov
mov
jae
mov
inc
mov
add
cmp
mov
jl
arpl
sahf
stc
loopne
loope
or
pop
xor
imul
in
test
sub
pop
nop
sbb
mov
xorb
xor
test
lret
pop
sub
push
or
push
cmp
dec
sbb
mov
shl
adc
loopne
jo
add
ds
clc
and
adc
test
mov
adc
mov
je
test
lret
out
fwait
fwait
mov
jl
inc
loopne
sbb
int3
cmpsb
repnz
adc
stos
xlat
fcoml
loopne
lret
push
test
sub
lret
cld
inc
dec
and
cmp
xor
outsl
cmpsl
xchg
sub
mov
push
or
iret
or
xor
lds
cmp
xchg
xchg
ja
sub
subb
mov
add
sarb
xchg
cld
jg
add
inc
sub
daa
inc
mov
pop
ss
outsl
mov
push
jge
xchg
cltd
mov
cmc
lds
adc
and
scas
inc
mov
add
add
pop
addr16
mov
stos
mov
adc
inc
insw
leave
xchg
addr16
mov
sbb
sbb
jae
test
js
stos
cli
fnsave
std
int3
lods
es
pop
in
out
jnp
pop
cmpsb
push
mov
iret
sahf
sub
cld
int3
arpl
sti
xor
mov
ljmp
test
push
ret
inc
ja
lcall
bts
lret
std
pop
in
pop
pop
cmp
cmp
push
add
mov
mov
push
pop
ss
sub
rcrb
andb
outsl
push
leave
xor
jo
or
mov
or
mov
add
movsl
mov
xor
ss
jl
enter
mov
xor
add
mov
test
sbb
shrb
js
in
fistps
and
cmp
negw
xchg
sub
inc
mov
mov
rcll
mov
sbb
js
jle
pop
push
or
add
bound
xorl
sbb
mov
and
add
inc
inc
clc
sbbl
jmp
cld
faddl
pop
and
cmp
adc
mov
lahf
mov
fbstp
mov
and
shrb
push
or
bound
sbb
mov
mov
rep
sub
cmp
jmp
inc
cmpsb
dec
test
jb
push
out
js
sub
mov
pop
sahf
mov
repz
arpl
in
rolb
icebp
pop
dec
mov
nop
addr16
mov
ret
loope
out
xlat
iret
sub
and
inc
mov
or
xor
inc
inc
orl
cmpsl
xchg
out
dec
stos
inc
jp
aad
lods
fisttpl
ret
cmc
dec
sbb
inc
mov
ss
sbb
arpl
jb
inc
bound
scas
inc
jbe
jmp
aam
push
outsb
lret
or
xchg
lock
sub
cmp
mov
push
dec
and
cs
adc
movsb
push
jmp
xor
out
stc
jb
sub
loop
lret
lcall
mov
and
fistl
cmc
jg
sub
mov
fdivrl
lea
rclb
sub
lds
xor
sahf
adcb
push
inc
test
push
add
dec
push
mov
mov
or
pushf
xor
cld
dec
dec
mov
cmp
pop
mov
sti
call
fdivs
cmc
outsl
in
gs
nop
cmp
jg
jbe
mov
mov
pusha
jp
mov
lret
cld
ljmp
jle
jae
or
cs
sbb
lods
mov
bound
andb
adc
nop
jne
mov
enter
cmc
pop
insl
ljmp
aaa
xlat
hlt
inc
add
call
fsts
pop
jg
lret
or
repnz
or
adc
add
in
in
sbb
mov
aam
fbld
leave
push
push
mov
divl
test
mov
xor
subb
push
lcall
icebp
mov
inc
enter
jae
sub
adc
cld
sub
add
popf
dec
mov
es
sub
adc
fwait
jle
lods
stos
aaa
xchg
pop
es
jp
into
xchg
xchg
adc
stos
inc
pop
aad
fsts
test
fcomps
xchg
xor
jno
lock
fisttpll
sarw
jle
cmpsl
mov
mov
or
and
dec
shl
scas
ja
js
loop
cmc
test
jae
adc
mov
xor
bound
dec
outsb
adc
cs
lock
mov
push
sti
mov
lea
push
imul
or
sub
stc
push
loopne
push
test
xchg
setp
fdivs
mov
out
shll
es
push
mov
fcompl
into
add
sbb
in
out
data16
or
add
iret
xchg
jle
rorl
lods
das
inc
mov
lock
adc
icebp
xchg
xchg
stos
jb
cmp
mov
stos
and
mov
mov
ret
pop
push
push
je
jle
fcompl
or
cltd
or
cltd
push
mov
jecxz
cmpb
and
gs
cltd
int3
cmp
in
je
pusha
or
push
add
mov
push
arpl
jo
cmp
push
ss
in
decl
pop
dec
lock
fisubrs
loopne
mov
iret
pop
pusha
and
mov
fs
mov
and
sbb
mov
in
mov
sbb
sbb
inc
xchg
adc
sti
cmp
call
test
add
les
nop
shll
adc
and
call
int
cld
push
movsl
dec
fwait
mov
inc
xchg
scas
push
push
jnp
mov
cld
mov
shlb
dec
jge
dec
jge
mov
push
fstps
cmp
aad
inc
fxch
or
push
or
add
fbld
lods
bound
inc
call
cmp
addr16
push
call
mov
cmpsb
arpl
sub
push
cmpsb
cmc
inc
movsl
sbb
pop
inc
jle
je
add
add
cli
jnp
popf
pop
pushf
test
lods
sbb
scas
jb
push
cmpsl
mov
add
and
aas
loop
cld
jmp
jge
jbe
adc
or
sub
repz
jmp
movsb
inc
pop
popa
or
mov
pop
iret
fstpt
adc
sahf
fidivs
cmc
and
sbb
nop
sbb
lea
jg
mov
xor
cmp
push
rcrl
push
repz
loope
pusha
ss
aas
pushf
jae
jo
inc
mov
cli
inc
insl
inc
cwtl
inc
vphsubbw
movlps
les
dec
sahf
shll
or
leave
xchg
xchg
and
lcall
add
cmc
iret
dec
dec
idivl
sub
pop
sub
enter
adc
mov
inc
cli
inc
icebp
movsl
jg
imul
nop
stc
and
cmpsl
add
jb
sub
push
arpl
es
sub
jecxz
inc
xchg
insl
jbe
nop
lahf
inc
xlat
push
aas
pop
stos
jl
jne
sbb
je
test
inc
data16
push
push
daa
mov
and
iret
sub
add
in
adc
push
push
icebp
and
pop
mov
jge
sub
mov
push
mov
lods
imul
iret
out
pushf
adc
sbb
cli
imul
add
sbb
in
pusha
mov
or
fs
pop
loope
jae
stos
je
sbb
or
js
repz
popa
push
shl
pop
jmp
mov
sbbb
mov
cmp
mov
cmpl
xor
shlb
sbbb
das
pop
mull
xchg
xor
fsubs
cmp
lock
loop
in
sbb
jle
jge
sub
pop
jl
nop
and
mov
add
jg
lret
jne
dec
aaa
into
cmp
rol
cmp
fwait
xor
jmp
and
lret
cmp
hlt
mov
or
dec
cmp
loopne
shl
into
in
mov
ljmp
pop
mov
mov
loopne
aas
dec
mov
popa
push
jno
mov
mov
in
das
imul
push
dec
scas
push
loope
pusha
lods
rcrb
frstor
mov
ja
cmp
iret
dec
bound
and
out
lcall
xor
xor
loop
test
jbe
fistpl
add
decb
movsl
cmp
ja
adc
stos
addr16
push
pop
xor
push
sub
repz
add
insl
lcall
decb
movsl
xor
mov
loope
mov
movsl
nop
xor
cmp
sub
fwait
outsl
push
or
out
or
jle
jge
ja
mov
sbb
xchg
cmpsl
in
xchg
cmp
gs
pop
jns
add
js
aaa
ret
in
std
mov
jl
ret
stos
lea
adc
xor
dec
sub
dec
subb
adc
add
test
or
pop
cmp
mov
insb
mov
sub
and
push
xchg
mov
hlt
mov
repnz
xor
fistps
lods
dec
je
js
insl
jae
pop
rclb
subl
out
mov
aad
or
shlb
inc
or
jo
out
popa
ret
xor
and
popa
and
and
repnz
inc
inc
cld
aas
out
jno
int3
jae
sbb
ljmp
xor
inc
pop
xchg
popa
xor
mov
cmpsl
inc
sbb
or
inc
pushl
ror
xchg
jno
cltd
and
out
in
adc
fldcw
mov
add
xchg
mov
sub
jecxz
out
aam
inc
ljmp
or
stos
adc
adc
push
add
or
enter
mov
cwtl
mov
testb
ja
push
insl
dec
push
out
sti
inc
inc
sub
push
fwait
or
rol
add
pushf
mov
ret
and
loopne
mov
je
push
cmc
pop
xchg
adc
cmp
mov
inc
inc
jbe
push
dec
in
out
scas
add
or
nop
cld
fsubrp
das
sbb
xchg
inc
xchg
pushf
cli
divb
sbb
mov
sti
cld
sub
repz
pop
sbb
jge
fnsave
add
inc
adc
fidivs
sub
or
mov
pop
out
in
pop
or
jp
jg
ret
inc
pop
nop
jge
sbb
add
mov
rolb
adc
dec
inc
xchg
add
popa
dec
add
pop
cmp
nop
push
dec
mov
repz
repz
mov
fst
addr16
push
addb
or
repnz
cltd
outsl
sub
call
cs
pop
fadds
in
xor
cltd
addr16
loop
mov
imul
rcrb
mov
imul
enter
insl
mov
rcrb
adc
push
mov
out
pop
mov
pop
jae
subb
xchg
aaa
js
addr16
sub
data16
test
or
mov
jae
pop
loope
xchg
and
pop
push
das
and
mul
jae
stc
mov
add
gs
pop
sub
cmpb
hlt
mov
push
bound
push
pop
fisubl
sub
test
sbb
test
pusha
cmpsb
sbb
adc
xchg
outsl
std
ss
jge
outsb
sub
jae
mov
push
adc
dec
sub
sub
cmp
pop
scas
jmp
cmp
sahf
xor
dec
mov
sbb
std
mov
jg
pop
shl
lahf
sub
fcomps
in
mov
sbbl
mov
mov
mov
pop
xor
dec
lock
icebp
sub
sub
xor
adc
pop
out
push
imul
xchg
and
fsubs
xchg
mov
jbe
jo
das
mov
push
sbb
or
mov
mov
jns
out
ds
outsl
scas
sbb
lcall
and
scas
aas
mov
or
inc
xor
sarb
lods
pop
mov
or
cmpsl
es
das
sub
dec
movb
xchg
out
dec
in
jecxz
jle
out
imul
fnstsw
push
mov
push
movsb
cmpsb
cltd
mov
scas
notl
mov
ficomps
jmp
pop
pushf
sbb
dec
xor
lret
inc
jne
xchg
arpl
adcb
xchg
cltd
popl
and
dec
mov
shlb
sbb
mov
aaa
rcrl
lret
repz
and
push
mov
and
push
pop
adc
mov
sbb
nop
daa
pop
fbstp
movsl
clc
push
push
es
push
jnp
sub
cmp
xor
clc
outsl
pushf
cltd
or
out
xchg
std
sub
movsl
xchg
mov
cmp
outsb
or
jae
mov
jg
add
sahf
xor
mov
mov
mov
jg
orl
adc
ljmp
leave
mov
ljmp
push
or
arpl
fmul
cmpsb
iret
and
pop
in
and
mov
neg
cmp
xor
std
jl
jp
in
outsb
xchg
pop
mov
mov
mov
jmp
or
sub
ds
sbb
sti
xor
ret
mov
cmpsb
rcll
xchg
sbb
mov
lahf
sub
push
js
outsb
testb
sub
outsl
mov
pop
mov
inc
hlt
fisubrs
out
and
push
push
inc
out
loope
sbb
dec
in
cmp
inc
insb
and
imul
mov
idiv
sbb
cli
add
pop
xlat
shlb
shll
jno
mov
jnp
mov
lahf
push
push
adc
inc
inc
xor
arpl
js
mov
jle
shrl
cli
xchg
xchg
andl
hlt
fsubl
xchg
cli
xchg
leave
mov
int
push
cltd
xor
mov
in
lds
mov
punpckldq
aaa
mov
mov
add
mov
add
adc
sub
push
imul
and
lods
mov
cs
add
pushf
popa
imul
push
and
mov
jmp
mov
push
data16
das
xchg
xchg
lcall
mov
and
in
enterw
lcall
and
jge
outsl
pushf
aam
pop
test
movsb
and
jle
adc
cmp
iret
xor
and
jge
push
out
push
pusha
fistl
in
cmpl
int
sbb
add
cmpsb
push
test
xchg
jl
or
xor
insb
fisttps
movsl
push
xlat
movb
adc
adc
sub
daa
jg
ficoml
adc
pop
movsl
inc
push
mov
test
int
repnz
fidivs
rcl
adc
push
or
xchg
inc
inc
in
aas
cwtl
and
or
xchg
sbb
dec
jecxz
pop
cmp
pop
sbbl
add
test
outsb
out
pop
jae
cmpsb
in
mov
je
out
or
push
mov
movsb
loope
inc
cmp
push
int
lock
push
cmc
mov
lock
and
inc
movsb
xchg
aam
push
dec
xor
test
movsb
xchg
mov
ja
mov
ret
cmc
inc
into
in
insl
inc
lahf
mov
cmp
in
add
and
push
mov
lret
incb
jae
jge
loop
sbb
push
and
pop
movsb
mov
iret
fisubrs
mov
imul
fwait
insl
iret
sbb
inc
and
ret
inc
push
mov
andl
outsb
inc
lcall
daa
xchg
xchg
ret
or
mov
cmp
dec
imull
jmp
out
mov
or
pop
cli
pushf
sti
mov
jle
sbb
ret
sbb
mov
sub
rolb
shll
push
sub
jge
adc
pop
xor
and
jl
sbb
mov
sbb
push
movsb
or
fdivrl
sbb
lock
rcrb
jno
fldt
jge
inc
outsb
lods
xchg
daa
cmp
int
mov
out
add
fbstp
add
in
stos
mov
in
divl
xlat
stc
or
inc
out
je
ja
cld
push
jnp
test
mov
mov
add
and
out
test
cmpsb
or
fcomps
aam
jmp
jno
mov
dec
cmp
xlat
mov
xor
int
sarb
icebp
stos
lret
jecxz
push
lret
xor
ret
loop
test
jns
mov
mov
xor
mov
sbb
jbe
add
nop
adc
roll
dec
or
subb
lret
pop
sahf
leave
outsl
adc
xor
ds
adc
call
push
int
fsub
adc
mov
jns
pop
je
jmp
fwait
lock
icebp
sbb
mov
in
scas
lods
sub
aam
data16
mov
push
add
push
dec
in
movsl
xlat
adc
adc
fwait
xor
clc
or
leave
arpl
dec
iret
jbe
jmp
std
fsubs
popf
lods
stos
mov
push
ss
push
mov
xchg
stos
xor
mov
movsb
xchg
add
popa
popa
rcrl
subb
dec
add
or
add
cmp
loopne
jnp
mov
or
cmp
stos
lret
in
push
and
int3
mov
insb
cltd
xor
int
inc
in
nop
dec
frstor
rcr
scas
fwait
xor
cli
aas
mov
rcr
int
or
and
add
mov
fs
push
or
pusha
xor
or
cs
outsl
ret
dec
test
in
mov
loopne
xchg
xchg
adc
mov
loopne
ljmp
mov
dec
test
imul
and
test
fstpt
sbb
ret
in
in
push
pop
loope
mov
out
jg
xchg
pop
in
or
repz
inc
pusha
divl
jge
out
sub
mov
rcll
pop
push
mov
and
xor
loope
je
jbe
sub
out
outsl
push
and
imull
into
lea
inc
aad
sti
xchg
mov
std
xchg
push
stc
daa
lcall
or
mov
mov
adc
lock
mov
ret
bound
stc
mov
inc
cmpb
push
fwait
sti
in
sti
jbe
mov
dec
pop
fmulp
jne
insl
cmp
push
repz
or
fimull
xchg
mov
addr16
cwtl
sub
or
add
add
inc
fcomps
lcall
ret
in
lods
mov
ljmp
ret
push
jno
insb
sbb
lret
clc
mov
lahf
clc
inc
xchg
shrb
jecxz
inc
movsb
push
add
int
fs
dec
int
lock
xor
and
and
sbb
fsubs
lcall
js
fs
push
pop
fwait
lods
aad
mov
test
pop
hlt
inc
enter
xchg
inc
cmp
inc
xchg
and
dec
arpl
int
xchg
push
mov
test
or
lods
jae
sbb
std
push
and
and
call
mov
adc
divl
int
pop
pushf
ftst
xchg
push
addr16
push
adc
and
fcoml
movsl
hlt
xchg
inc
sarb
jp
and
jge
push
pop
push
ret
ret
cmp
out
mov
jg
lods
push
mov
push
mov
pusha
mov
js
aas
rcrl
push
ljmp
loopne
stos
inc
ja
inc
fs
sbb
loopne
cmpl
add
scas
xchg
pop
loope
sub
cs
testb
push
movsl
outsb
sbb
test
aaa
iret
dec
sbb
dec
or
mov
sbb
hlt
dec
adc
mov
roll
pop
shrb
popa
lret
cmp
ss
adc
cmp
mov
jl
lcall
xchg
aad
fwait
xor
mov
mov
push
cmp
adc
xor
loope
jne
cmp
and
stos
mov
imulb
fs
pop
sbb
movsb
mov
sbb
movsb
push
fisttps
pusha
cmpb
pusha
mov
pusha
popl
mov
sbb
dec
and
arpl
fadds
scas
movsb
leave
add
pop
bound
hlt
push
fdiv
subl
sbb
pop
clc
lret
jno
stc
xchg
mov
arpl
pop
cli
cmp
inc
push
adc
iret
aaa
pop
call
jae
in
test
out
bound
stc
or
and
test
cmp
stos
mov
fucomi
shl
and
adc
xor
xchg
push
call
jle
pop
mov
call
jg
push
sbb
insl
dec
imul
jmp
fwait
cmpsl
inc
hlt
xchg
leave
mov
push
sub
and
cmp
push
loope
lea
scas
pop
outsl
push
mov
cltd
add
andb
adc
mov
cmp
sbb
leave
fildll
push
jecxz
push
sbb
js
pushf
insl
cmp
ret
mov
ror
dec
addr16
iret
lahf
cmp
shlb
ret
lods
mov
push
test
dec
and
adc
scas
jb
lods
push
dec
xor
add
xor
add
lea
mov
testb
cld
dec
test
jbe
stos
test
dec
shrl
pushf
xchg
jb
test
dec
adc
lea
les
pop
pushw
xchg
cli
movsl
push
mov
push
xorw
cmpsl
ret
addr16
or
or
xor
pop
popl
mov
push
pop
dec
faddl
sub
stos
daa
xor
in
popa
addr16
xchg
arpl
add
sbb
fmull
adc
add
pusha
std
mov
xor
mov
icebp
iret
jmp
push
xchg
xor
mov
xchg
push
jmp
std
mov
es
lds
in
loope
js
imull
sub
mov
adc
dec
mov
or
aas
push
xchg
out
fucomi
repnz
sahf
xor
aad
mov
jbe
scas
mov
sar
repnz
ret
cmp
ss
js
lock
cmp
or
jmp
cmp
pop
sbbb
out
fisttpll
sbbl
rcrb
frstor
sti
aam
inc
sub
jp
push
sub
dec
and
jo
and
jl
stos
outsl
cmpsl
js
or
ljmp
mov
outsb
adc
popa
inc
enter
xchg
loope,pn
xlat
dec
out
sub
dec
adc
cmp
fstpl
gs
aas
daa
ljmp
adc
mov
stos
daa
jbe
or
jo
push
loop
in
xchg
and
test
andb
mov
scas
repz
and
movsl
in
popf
sbb
pop
xor
and
repz
popa
push
loopne
xchg
imul
dec
inc
stc
mov
ret
test
mov
test
or
sahf
mov
adc
adc
push
out
jg
mov
jmp
adc
addr16
movb
fs
insl
cltd
lds
mov
hlt
jecxz
leave
and
or
jecxz
cli
xchg
inc
push
dec
mov
jecxz
adc
xor
and
bound
fwait
icebp
dec
xor
and
lcall
sub
pop
sub
cs
jmp
mov
aam
popa
lret
jmp
outsb
out
jo
mov
fidivs
cli
dec
filds
out
cmc
sbb
shrb
pop
mov
scas
add
mov
int3
cmp
push
mov
cli
ret
test
cmp
fmul
js
test
aas
pusha
mov
jmp
mov
ret
sub
data16
push
dec
mov
gs
or
fistl
mov
dec
push
push
and
aas
test
fcomp
push
lahf
mov
adc
out
jecxz
sahf
dec
gs
and
inc
sub
dec
push
out
aas
xor
jae
xlat
adc
cltd
dec
outsb
push
push
jmp
ficomps
push
outsb
arpl
dec
adc
sbb
cmpsl
pop
je
pop
ljmp
pop
imul
jno
negb
loop
sarl
in
jmp
inc
ljmp
mov
and
dec
fistpll
xchg
jb
les
or
dec
stc
rolb
xor
popa
adc
dec
cltd
xor
leave
ret
xor
loop
cltd
push
daa
cmpsb
imulb
arpl
mov
arpl
xor
dec
dec
sbb
jecxz
cli
dec
shll
xor
div
adcl
sbb
aaa
mov
jl
ljmp
mov
cmpsl
incb
xor
lock
adc
rcll
sub
and
fsubrl
clc
and
mov
jp
xorl
push
arpl
idiv
test
jmp
lds
xchg
push
sub
jp
mov
iret
add
mov
jl
mov
sub
jmp
shl
outsl
rcr
aas
stos
add
xor
std
pop
cld
loope
mov
test
dec
fcmovu
out
das
icebp
stc
sbb
dec
dec
sbb
shl
mov
loopne
push
mov
test
fwait
popl
or
push
cli
xchg
push
xchg
hlt
and
sbb
adc
sub
lods
lods
int
jle
mov
add
mov
lret
adc
leave
in
out
jns
stos
inc
adc
cmpsb
and
inc
insl
leave
arpl
sub
push
and
mov
mov
loop
sbb
aam
sbb
or
push
jmp
fmull
mov
dec
push
jnp
push
adc
jns
into
out
sub
push
jl
mov
or
pop
fwait
mov
sahf
adc
push
outsl
pushf
xchg
mov
xor
pop
mov
ret
and
mov
mov
lock
or
out
xor
add
add
mov
gs
mov
jns
push
and
or
into
in
mov
fmulp
movsl
push
mov
sub
pop
insl
mov
pop
test
fs
cli
fcomi
clc
movsb
xchg
jp
sbb
repz
mulb
push
add
clc
jge
ss
sbb
ret
mov
xor
stos
inc
fists
test
mov
or
xlat
inc
jbe
add
adc
mov
cmp
jecxz
mov
mov
sbbl
xlat
adc
adc
pop
jno
xchg
rol
xlat
pop
stos
lret
lret
cld
jmp
cmp
sbb
inc
pop
xor
ficompl
sub
inc
add
pusha
scas
in
cmc
push
mul
mov
cwtl
mov
ficomps
ret
add
xchg
addr16
mov
cltd
in
dec
sbb
es
popa
in
fld
mov
cmpsb
fsubp
lods
push
or
dec
mov
cwtl
icebp
sub
xchg
push
mov
jg
cli
mov
pop
jecxz
cmp
je
pop
sub
jmp
or
lahf
aad
fstl
pop
lcall
inc
jle
sub
sub
dec
jle
cmpsl
stc
gs
mov
scas
jbe
cmc
lods
dec
cmp
shl
adc
ffreep
in
and
mov
sub
xchg
add
add
mov
sub
mov
insb
xchg
add
dec
popf
cmp
add
inc
mov
imul
pop
push
fucomip
clc
pop
dec
fucomip
jns
xchg
adc
sbb
clc
pop
push
push
xchg
jae
adc
scas
nop
or
lods
mov
fcmovb
or
ret
lahf
mov
fdivrs
push
push
pop
das
addr16
aam
jns
cltd
jl
pop
push
adc
cmp
test
xor
or
sub
jb
enter
mov
dec
mov
fildl
push
jmp
scas
push
or
push
sahf
int
sbb
pushf
out
and
in
and
lods
imul
loop
jg
repz
aaa
mov
sub
pusha
loop
test
inc
inc
pop
mov
push
cmp
sbb
dec
ja
jns
pop
mov
fnstenv
cmpsb
imul
or
ret
dec
pop
push
jo
mov
cs
mov
adcb
imul
adc
mov
enter
sbb
jae
aaa
pop
mov
mov
out
jmp
xchg
inc
sub
pop
in
loope
sti
dec
mov
jae
out
test
xchg
jl
gs
loop
dec
out
jp
inc
pop
imul
iret
dec
jo
ljmp
jge
push
mov
dec
mov
xchg
test
sub
cmp
xchg
xchg
leave
aad
fmull
xor
adc
fwait
popa
mov
in
lock
clc
pop
sub
std
cltd
xsha1
cmpsb
into
pusha
dec
pusha
mov
iret
adc
push
pop
insl
sub
add
inc
inc
into
pop
mov
jmp
pusha
pop
aad
nop
insl
hlt
adc
jno
xchg
xchg
sbb
sbb
cmp
iret
cmp
inc
out
fs
and
push
or
in
sbbb
xor
xchg
ljmp
cmp
mov
xor
leave
inc
repnz
ljmp
jmp
adc
xchg
ror
nop
outsb
push
mov
and
leave
push
lods
cmp
fnstsw
pop
repz
nop
daa
mov
mov
movsl
lcall
rcrl
call
iret
outsb
ja
jl
mov
cltd
adc
mov
pop
lcall
adc
push
les
cs
mov
dec
dec
out
push
pushf
pop
rcrl
pop
mov
es
cli
fdivs
addb
pop
or
mov
pop
mov
cld
iret
nop
shlb
jmp
out
jp
pop
lret
cmp
jb
pushf
cli
loopne
pop
xor
mov
icebp
cmp
insl
inc
dec
pop
dec
mov
or
sahf
and
data16
dec
inc
jb
fidivrs
outsl
scas
in
das
cmp
pop
dec
mov
push
xor
sahf
push
stc
frstpm(287
dec
dec
xchg
scas
ret
iret
mov
mov
inc
jl
sbb
xchg
mov
stc
pop
push
push
sub
popa
push
test
loop
xchg
inc
dec
dec
hlt
nop
jns
negl
jns
sub
lret
inc
js
push
push
cmp
jecxz
and
aas
sub
jle
jle
rcl
jl
mov
pop
jmp
and
fstpl
loopne
or
cmc
mov
repz
cmp
stc
xchg
pop
fidivrs
mov
mov
add
in
aam
mov
pusha
jle
push
movsl
push
mov
adc
jp
pop
push
aam
adc
mov
jb
jne
lret
sbbl
cld
fucomip
mov
les
adc
call
mov
cmc
adc
push
cmp
push
hlt
pop
sbb
jecxz
jg
jo
addr16
shll
popf
jo
dec
in
jg
xchg
insl
or
fistpll
cmp
or
daa
and
cmpsb
fidivl
pop
aad
loopne
imul
mov
mov
mov
aaa
sbb
xchg
jecxz
and
in
xor
adc
and
pop
insb
push
jnp
movsb
pop
test
mulb
inc
push
bound
cli
insb
xor
lock
pop
loop
pop
mov
jle
sbbb
adc
cmp
imul
lahf
jo
lahf
repz
test
ret
orb
xor
dec
sub
xchg
shufps
fs
ficompl
loopne
pop
lcall
pushl
orb
adc
jo
test
fisubl
in
jg
clc
sub
mov
jecxz
lret
stos
xchg
addr16
out
ficoml
add
sbb
fsubs
fcoms
inc
sbb
lret
mov
mov
or
mov
scas
xor
adc
hlt
int3
shld
xchg
lods
sti
inc
dec
dec
sub
push
fbstp
cmpsl
cmp
xchg
pushf
adc
xor
insl
dec
test
mov
dec
or
xorb
jnp
mov
sbb
loopne
and
stc
test
add
xchg
adc
cwtl
xchg
out
jo
test
mul
pop
std
xor
clc
das
or
and
push
cmp
jmp
push
add
lcall
lcall
add
in
push
arpl
xchg
enter
cmp
out
pop
pop
mov
test
cld
in
das
xchg
les
jae
std
dec
lods
cmpl
repz
fxch
pusha
into
shr
outsb
jecxz
xor
cmp
in
hlt
pop
lock
icebp
xor
movb
push
loope
xchg
stc
test
sub
fwait
pop
mov
or
mov
xchg
es
sbb
insl
adc
push
lret
jne
pop
repz
addr16
pop
sub
pop
ret
loopne
bound
xchg
and
ret
jle
inc
jle
jle
cmc
mov
int
mov
add
shrl
ret
mov
insb
and
test
in
lock
inc
jecxz
loop
arpl
cmp
jmp
std
loope
mov
int3
jle
incb
aam
cmp
ja
mov
push
push
lahf
pop
fimull
or
testl
inc
int3
fsubr
je
fdivs
cmpsb
je
lea
dec
or
sbb
clc
mov
aaa
pop
ds
cli
loopne
outsl
xchg
dec
test
push
es
pop
js
scas
push
xor
mov
cmp
test
outsb
adc
xor
ja
or
in
fiadds
repz
int
cs
mov
jg
pop
negb
imul
cmp
test
sbb
movsl
mov
adc
repz
mov
andl
sub
lret
cmpsl
mov
enter
xchg
pop
push
stos
lods
mov
repz
ret
imul
jo
loope
mov
mov
ret
iret
pop
gs
leave
pop
roll
cmp
dec
mov
push
das
mov
jns
cwtl
pop
data16
push
movsl
or
push
hlt
and
hlt
in
sbb
mov
xchg
pop
js
xlat
repz
sbb
mov
push
fists
lods
xor
jb
cmp
mov
mov
cli
scas
mov
add
jp
xorl
das
inc
jp
cmp
sub
xor
scas
mov
and
sbb
sbb
push
ret
ljmp
pop
cld
shlb
cli
jne
enter
pop
in
test
sbbb
or
jne
add
xor
dec
test
mov
dec
rcll
push
push
iret
mov
sbb
cmpsb
shlb
sub
bound
push
jp
add
sub
loopne
pop
sub
stc
clc
movsl
xor
repnz
inc
adc
push
adcl
fstp
and
adc
xlat
push
jo
mov
nop
mov
sub
lea
cld
lea
or
mov
push
mov
xchg
add
pusha
jb
rorl
adc
jne
pop
fsts
test
mov
imul
ds
inc
imul
jbe
repnz
jae
in
jns
fs
adcl
in
sub
jle
arpl
and
loopne
lret
inc
adc
cld
xchg
lock
dec
or
lret
push
aad
cmp
xchg
inc
and
cli
mov
jnp
push
pop
les
and
shlb
dec
addr16
pop
loopne
nop
cmc
add
add
stos
inc
movsl
shlb
dec
and
jns
nop
mov
lods
enter
inc
div
mov
cltd
stc
mov
adc
into
inc
sbb
cwtl
lds
mov
push
add
out
xlat
cmc
mov
shr
fstpt
out
leave
ds
adc
adc
jecxz
iret
push
stos
cmpsb
push
faddl
pop
mov
leave
dec
dec
cli
pusha
pop
cltd
rolb
enter
mov
sbb
xchg
xor
cmp
mov
in
call
jae
jb
jb
sbb
jp
shl
dec
fdivs
dec
imul
or
aad
xchg
xchg
mov
das
mov
stc
data16
jo
xlat
loope
mov
push
cmc
dec
or
xchg
pop
fdivrl
push
mov
and
lock
sub
or
movsl
adc
mov
sbb
arpl
mov
inc
lock
hlt
orl
insl
adc
mov
add
push
jp
sub
sub
or
mov
mov
fistl
cwtl
pop
divb
into
jl
pusha
fiadds
shlb
sahf
push
aam
aam
ja
xchg
inc
mov
gs
xchg
sbb
adc
enter
xor
inc
push
lcall
cwtl
lods
cmpsb
mulb
or
cmp
and
rcrl
xor
xor
mov
test
fdivrs
mov
fwait
test
iret
insb
xor
push
lret
xorb
sbb
imul
test
jne
mov
xchg
ficomps
add
mov
push
jmp
mov
icebp
cmp
int3
lret
repnz
jnp
out
icebp
mov
dec
sbb
outsl
and
mov
movsl
out
pop
out
sbb
sub
inc
add
jge
sbb
cmpsb
mov
sub
add
je
lcall
fucom
daa
jb
ja
push
cs
subb
xchg
jl
pop
out
fucomip
and
sbb
jb
push
daa
sub
or
leave
int
stos
imul
cmp
cmp
pop
and
clc
mov
jbe
sub
movsl
sub
into
pop
aad
out
bound
jnp
js
aas
add
decb
faddl
push
arpl
sbb
ss
fwait
neg
mov
fs
cmc
xchg
cmp
testl
jb
mov
pop
repz
pop
adc
xchg
test
call
fsubr
inc
add
mov
ficoms
and
jp
es
xchg
or
jecxz
or
mov
inc
int
test
loope
cmpsl
xchg
dec
loopne
pushf
push
xor
jmp
and
add
inc
lds
and
fdivl
negl
and
arpl
mov
mov
pop
fdivrs
cmp
push
sbb
xchg
sub
cmpsl
or
in
lods
bnd
aam
adc
mov
and
ljmp
mov
lcall
mov
jbe
mov
shll
jp
rorb
lds
mov
js
mov
mov
imul
cmp
decb
xor
mov
cmp
jmp
pop
lahf
in
xchg
pop
insb
push
test
idivl
fs
pop
sub
mov
push
cmp
cmpsb
push
fimull
insb
imulb
aas
nop
mov
decb
mov
lret
je
or
mov
push
push
shl
dec
dec
loopne
cmp
push
cmp
sbb
jns
mov
shl
mov
lods
mov
jp
xor
pop
xlat
lods
pop
add
lcall
je
xorl
push
sub
rclb
and
leave
and
imul
push
adc
push
pushf
or
push
cmp
mov
mov
xlat
dec
test
in
or
push
pop
push
pop
incl
jns
mov
sbb
jp
add
sbb
lods
and
adc
mov
xor
sbb
repnz
fcoms
mov
pop
lahf
scas
cwtl
mov
mov
mov
push
inc
push
cmpsl
xor
fbld
in
imul
adc
sysexit
pop
pop
mov
xchg
dec
lret
ss
es
pop
loopne
ds
xor
jbe
jmp
mov
xchg
jl
pop
outsl
mov
add
ret
sub
notl
std
jg
adc
push
fisttpll
pop
jno
dec
iret
cmc
mov
pop
adc
push
lock
and
xor
jno
stos
xchg
imul
lock
int
push
les
push
xchg
es
add
imul
icebp
xchg
stos
push
add
mov
pop
jg
jns
cs
mov
stos
imull
movsb
rcrb
sub
rorl
lret
mov
sbb
adc
inc
push
mov
insb
lock
cs
xchg
sbb
repz
pop
mov
out
cmc
mov
mov
iret
cli
fcomps
ljmp
pushf
sub
jge
negl
or
jae
sbb
stos
push
movsl
pusha
sahf
filds
jo
test
lea
sbb
scas
and
jmp
test
push
stos
ja
in
fdivrs
popf
or
cs
popf
jecxz
jns
mov
sbb
pop
cmpsb
imul
movsl
int3
fcom
aam
popa
and
fwait
popa
xchg
test
mov
stos
repz
lds
dec
aad
in
fwait
div
push
scas
fs
mov
loopne
sub
or
push
and
gs
xor
dec
mov
dec
popf
or
jne
gs
in
fsubp
pop
xor
jle
outsb
add
cwtl
and
jmp
xor
push
mov
nop
scas
out
jle
push
lahf
inc
jns
mov
xchg
dec
jb
sub
and
push
in
dec
xchg
ss
add
fistl
loop
popf
push
test
test
cs
notl
xchg
loope
push
xchg
dec
add
push
outsl
push
insb
add
insb
rolb
pop
loopne
mov
jae
jbe
pop
dec
push
daa
outsl
out
int3
lods
and
or
sbb
add
subl
sub
sub
push
adc
shlb
fisttps
push
sbb
inc
out
js
sub
mov
mov
push
shll
into
ret
or
adc
dec
cmp
in
pop
jl
fidivl
in
xor
out
sub
mov
sbb
imul
ds
mov
sahf
sahf
jno
xchg
mov
jbe
mov
jbe
push
daa
orb
outsb
mov
jmp
shrl
xchg
xor
test
jns
testb
cltd
jns
lret
jno
cmpsb
pop
inc
int
add
sub
sbb
sbb
popl
data16
stos
in
aad
inc
or
stos
nop
out
sub
adc
lods
hlt
mov
fldcw
pop
lahf
stos
stos
pop
popf
push
mov
and
inc
shl
pop
adc
push
xchg
dec
fstps
jae
je
jge
inc
subb
push
sub
mov
dec
mov
lock
lods
cmpsl
push
mov
fwait
pusha
psllw
ljmp
pushf
inc
mov
cld
inc
orb
movsb
push
pop
cmp
sub
jecxz
inc
jmp
ror
push
popa
push
inc
sub
sti
stos
int
sub
mov
sahf
fmul
cmpsl
mov
mov
enter
dec
mov
mov
push
ret
sub
or
pop
test
lea
mov
mov
addr16
fnstenv
dec
sahf
xor
jge
adc
or
into
test
jecxz
pop
and
mov
xlat
in
sbbl
repnz
push
call
jnp
popf
js
cmpb
hlt
add
outsb
bound
xchg
arpl
scas
inc
push
sti
je
and
sahf
imul
bound
mov
rcrl
pushf
mov
adc
cs
mov
bound
dec
push
lcall
sahf
clc
mov
mov
mov
fwait
or
idivb
cmp
lds
xchg
mov
cmp
pop
sbb
out
push
jmp
imul
sarb
and
andl
repz
inc
test
mov
xor
cmp
stc
sub
xor
jmp
in
in
xchg
ret
daa
jmp
fstl
cmp
insb
xor
cmp
insb
sub
popf
test
pusha
xchg
pop
jecxz
clc
imul
pop
add
mov
sub
in
cli
xchg
inc
cmp
lock
push
adc
cmp
mov
and
scas
leave
push
loope
cs
sub
movb
clc
cwtl
cld
xchg
lret
adc
xchg
cs
push
sahf
or
cs
sti
sbb
add
mov
testl
std
fs
int3
testl
sbb
jmp
into
fs
sbb
xchg
xchg
lea
enter
xchg
mov
cmp
jns
cmpsb
inc
mov
xchg
sbb
mov
sbb
pop
push
sub
enter
arpl
push
out
pop
stos
and
jmp
loopne
mov
stos
clc
shrl
lea
shrb
shlw
add
pop
test
xlat
adc
jo
sub
scas
dec
loope
pop
push
push
push
outsb
lret
push
movsb
add
xlat
sub
mov
jecxz
aam
dec
jno
cs
adc
adc
push
mov
fsubs
popa
mov
in
jb
dec
out
repz
out
mov
int3
cmp
push
std
mov
leave
imulb
shl
xchg
mov
xlat
ja
mov
cmp
mov
aas
add
cmpxchg
xchg
xor
js
mov
pop
repz
call
inc
sbb
dec
adc
clc
das
pop
loope
rcrl
ret
insb
imul
popa
loopne
stos
inc
mov
push
leave
pusha
xchg
cmc
clc
sub
sbb
dec
pop
cmp
push
mov
dec
aam
pushf
in
and
test
cwtl
mov
arpl
mov
jae
out
add
xchg
push
std
jo
loopne
cmp
jmp
stos
cltd
ret
int3
and
mov
mull
movsl
xor
jbe
mov
outsb
jge
add
out
pop
xor
mov
mov
xchg
adc
cwtl
sbb
add
icebp
xchg
std
adc
mov
out
mov
xor
cmp
flds
cmp
pop
repnz
or
scas
jns
das
xchg
mov
inc
popl
pop
call
inc
xchg
cmp
adc
mov
lds
inc
cli
xchg
std
jecxz
das
clc
jbe
ret
je
pusha
out
notl
psubsb
or
arpl
xor
popf
arpl
cld
or
sbb
or
push
xchg
jae
add
sarl
arpl
mov
sbb
mov
cmp
jg
jp
shlb
dec
add
cmp
and
inc
into
mov
ss
pop
hlt
sbb
and
push
push
jmp
pusha
xchg
test
push
dec
ljmp
and
pop
outsb
jl
ret
cld
scas
sbbb
jp
cmp
sahf
test
lahf
js
dec
pop
in
push
sub
cmp
xorl
xchg
fmull
leave
jle
or
popf
pop
leave
and
mov
mov
test
dec
scas
data16
call
add
out
and
or
mov
push
pop
inc
xlat
mov
pop
sbb
and
cmc
push
add
lcall
and
pop
gs
add
sub
lcall
jmp
inc
jmp
jp
sbb
add
aas
test
jae
jb
popa
sub
xor
inc
sub
lods
inc
sahf
bound
inc
scas
sar
nop
daa
dec
and
mov
adc
sub
movaps
fnsave
sbb
lock
mov
adc
pop
inc
jnp
das
jg
in
jns
mov
cli
jbe
mov
sbb
stc
into
dec
addr16
jl
jg
lock
cmpsb
mov
dec
pop
cld
jno
push
mov
enter
or
loope
fadd
arpl
out
push
adc
push
lods
xor
cmp
cmp
fsubl
dec
arpl
jnp
rcrl
jns
xor
fs
sub
or
rorl
and
movsb
mov
cmp
outsb
adc
cmp
adc
inc
icebp
xor
das
icebp
jns
dec
lret
jne
xchg
sub
cmc
pop
cli
inc
push
adc
vandps
lods
ljmp
pushf
xor
mov
or
in
js
dec
xor
add
pushf
cmp
jmp
add
mov
inc
jmp
bound
xchg
push
stos
ret
sub
mov
mov
es
adc
inc
cltd
aaa
lea
xor
roll
imul
stc
jl
addr16
xchg
add
dec
pop
dec
mov
loope
mov
fnstenv
adc
sti
adc
cli
xor
sbb
mov
js
arpl
stos
or
jno
inc
sub
lret
sti
xchg
dec
out
xchg
jae
pushf
aad
sub
lods
adc
ljmp
and
jge
mov
add
enter
ss
sub
scas
pop
and
xchg
and
movd
inc
sbb
test
mov
sbb
les
adc
inc
fistl
mov
mov
mov
jae
jg
or
pop
xor
sbb
jbe
mov
mov
mov
mov
test
xor
push
mov
and
ror
lds
aas
or
sbb
scas
scas
das
mov
testl
cmp
les
add
or
call
xor
outsb
adc
mov
mov
lods
xor
fisubrl
aad
sub
adc
sarb
mov
xor
int3
or
pop
mov
lret
adcl
insb
negl
adc
sbb
les
jle
scas
sub
push
or
dec
xlat
inc
inc
sbb
mov
in
and
jbe
pop
cwtl
hlt
in
js
mov
jge
out
jge
mov
mov
pop
aam
xchg
fimuls
and
ja
add
cmpsb
icebp
mov
js
jb
int
faddp
or
jno
xchg
ret
push
inc
sbb
call
cmp
dec
stc
lods
inc
ss
repz
push
pusha
sbbb
mov
mov
aam
bound
xor
and
lea
mov
and
push
cmpsb
mov
xor
pop
fstpl
pusha
ljmp
stos
andb
es
movsl
maxps
daa
pop
mov
in
xor
adc
or
mov
push
icebp
xor
fs
fwait
mov
push
fwait
and
xchg
stos
push
xor
rolw
jb
imul
cwtl
cmp
out
shl
sub
lds
push
adc
pop
bound
outsl
test
mov
xchg
xchg
xchg
add
mov
cli
and
pop
mov
sbb
cmp
out
movsl
popf
push
out
add
inc
out
xchg
lods
ja
dec
lahf
pop
cwtl
dec
lods
inc
sub
pop
adc
ffree
sub
pushf
stc
ret
pop
jo
add
movsl
stos
sub
or
and
testb
pop
pop
mov
sub
jge
frstor
popa
xlat
mov
sub
dec
add
cmp
xor
mov
fidivl
push
std
jno
mov
mov
mov
push
in
ja
jmp
push
or
sub
lea
adc
aad
cltd
ss
shlb
fdivrl
fiaddl
dec
cmpsb
mov
dec
call
in
sbb
testl
xchg
cmp
pop
fisubs
pop
inc
mov
cld
jno
sbb
ja
sub
push
dec
and
mov
xchg
movsb
jns
jbe
push
test
paddd
movl
jmp
mov
in
fsubl
out
adc
lods
scas
mov
fcmovnb
out
jl
data16
cltd
sbb
push
inc
push
add
inc
mov
push
lret
pushf
or
sub
xchg
imul
and
xor
in
xor
push
enter
fwait
xor
ds
jns
dec
inc
xlat
js
in
ficoms
pop
adc
addl
int3
and
or
push
ret
mov
pop
jb
in
stos
pop
lods
xor
js
and
fwait
mov
mov
dec
clc
mov
mov
out
mov
adc
iret
push
or
sbb
arpl
jo
rcrl
or
add
and
mov
cltd
and
cld
rorl
fsubrp
push
loop
sub
aad
inc
pop
and
pushf
stos
jo
repnz
jg
xor
aaa
push
adc
xchg
ja
and
pushf
fstps
xchg
cmp
scas
add
inc
scas
or
ret
call
mov
jb
mov
insb
ss
inc
mov
mov
or
sbb
in
iret
or
out
mov
mov
add
shrl
jl
adc
lret
add
lea
dec
test
xlat
cwtl
jg
cltd
dec
das
enter
test
dec
dec
test
int
movsb
pop
mov
repnz
xchg
std
outsl
stos
inc
add
jecxz
cmp
push
pop
sbb
mov
xor
pop
adc
cwtl
push
dec
pushf
adc
out
mov
aam
adc
testb
pop
adc
into
sti
nopl
xor
or
mov
pop
sub
mov
xchg
pop
icebp
mov
cld
dec
test
repnz
jg
mov
jl
jmp
xor
pop
jecxz
in
push
add
sbbl
mov
js
pusha
jp
test
dec
out
mov
dec
arpl
cmp
rolb
fidivs
ficoms
push
mov
adc
xor
bound
push
in
jmp
push
add
fcoml
xchg
xor
xor
das
push
scas
sar
sub
fistps
adc
pop
push
pusha
fisttpl
das
jp
pushf
lcall
xchg
and
adc
push
je
push
mov
sahf
sbb
sub
mov
outsb
aad
jnp
adc
or
rcll
vpaddw
aad
adc
icebp
push
or
add
cwtl
pop
cmp
cmpsl
jle
cmp
adc
aaa
pusha
or
fistpll
push
jne
arpl
xchg
out
lahf
sub
add
popa
aas
sub
cmc
pop
data16
xor
aas
add
or
sbb
rcll
and
push
rcl
xor
mov
movsl
xor
sub
dec
push
insl
sub
aam
int
dec
mov
rol
dec
ljmp
ret
int3
cmp
jo
lret
cmp
pushf
xchg
add
lods
pop
pushf
mov
adc
push
pop
daa
je
jnp
gs
push
jmp
out
xor
sub
mov
mov
pop
add
mov
test
sub
sbb
dec
arpl
mov
mov
clc
fisubrs
adc
mov
sub
sub
xor
sbb
push
xchg
mov
mov
mov
and
ret
rol
addr16
nop
cmp
fcomip
and
pop
pusha
aas
cs
iret
xchg
adc
je
cwtl
xchg
lea
fs
ds
mov
call
mov
into
in
mov
stos
dec
mov
push
gs
popf
popf
pop
call
les
or
xchg
sbb
hlt
or
or
aaa
lods
mov
xchg
xlat
mov
out
mov
clc
mov
add
jbe
aas
inc
stos
or
push
sbb
or
daa
test
imul
outsl
add
jnp
sbbl
jl
mov
sub
lea
mov
gs
dec
stos
push
sbb
aas
xchg
mov
outsl
lods
fsubrp
cltd
push
mov
test
clc
inc
es
mov
and
jge
mov
out
cwtl
add
test
popf
xchg
mov
repz
call
pop
sub
lret
fidivrl
popf
rorl
dec
pop
mov
cli
pop
btl
sbb
xor
sbb
sbb
xchg
mov
xchg
dec
sbb
or
mov
jge
cld
int
mov
or
or
add
iret
xchg
sub
push
sub
xor
xor
adc
in
push
outsl
xchg
mov
mov
out
xor
or
fnstcw
mov
pusha
dec
mov
insb
inc
pop
fs
notb
scas
arpl
jg
cmp
test
mov
mov
or
loopne
ret
xlat
jne
les
inc
xchg
in
push
mov
sub
mov
stc
test
adc
mov
xchg
push
xchg
movsb
cmp
push
push
or
fcoms
sub
cmp
push
xchg
sub
mov
mov
push
sbb
call
fisubs
jnp
jb
jb
jge
push
mov
sbb
xchg
push
sbb
add
aam
mov
aaa
into
jbe
test
loop
push
in
cmp
addb
jl
push
int
cmp
xchg
pop
popf
rcrl
sbb
jo
mov
stc
ss
test
or
cld
addb
cmpsb
cmp
inc
add
mov
push
xor
fdiv
dec
std
mov
mov
add
gs
xchg
hlt
fwait
bound
push
jo
or
mov
shlb
icebp
inc
stos
mov
jbe
popa
ljmp
sub
ljmp
push
cmpl
sub
push
int
lds
data16
in
dec
mov
outsl
xchg
inc
pop
les
rolb
in
and
pop
sub
bound
or
xchg
and
adc
movsb
cltd
cs
mov
add
arpl
cmc
into
fwait
scas
jns
popa
std
and
and
inc
mov
ja
pop
pusha
adc
shll
fsts
lea
cli
dec
in
ds
js
ljmp
cmpsb
mov
inc
lret
ret
movsb
cmp
fimull
ret
sub
jne
js
push
stos
popf
lods
out
inc
mov
push
fbstp
mov
pop
in
inc
dec
push
push
jecxz
pop
inc
mov
and
or
push
and
lahf
loope
jnp
imul
in
cmpsb
dec
subb
pop
fnsave
xchg
cltd
sub
movsb
push
dec
gs
in
sub
cli
inc
push
fnsave
mov
adc
ss
cmp
and
lods
dec
pushf
lea
in
push
pop
pusha
mov
cmp
data16
or
test
xchg
out
in
jge
push
adcl
xchg
sub
mov
in
pop
test
shlb
leave
xor
mov
lcall
mov
js
jno
mov
leave
xchg
flds
xor
pop
scas
cltd
mov
je
loopne
sub
xlat
sbb
cmc
imul
inc
jmp
dec
mov
mov
nop
movl
cli
or
jns
xchg
sub
pop
mov
arpl
mov
push
insb
addr16
es
das
insl
add
add
mov
sub
in
shl
idiv
or
inc
fcoml
mov
jge
sbb
jmp
mov
out
out
in
add
dec
stos
push
xlat
pop
xor
sarl
or
push
aad
mov
xorl
xchg
shlb
fucomp
out
icebp
jmp
jp
out
pop
pop
popf
or
adcb
jp
push
leave
pusha
mov
in
andl
mov
cli
leave
and
add
inc
or
andb
mov
out
add
xchg
ret
popa
adc
or
insb
adc
icebp
adc
xor
mov
mov
or
jmp
inc
mov
or
test
es
aaa
mov
ret
mov
mov
add
insl
add
shll
cmp
push
lods
mov
mov
sti
sti
adc
inc
movsb
push
dec
mov
xor
arpl
dec
jnp
lods
or
push
push
or
js
dec
in
jge
and
add
mov
fstps
mov
cmp
lds
mov
cmpsl
ret
pop
cmp
out
pop
pop
cmp
inc
outsb
jl
push
mov
mov
push
adc
add
push
out
sub
xor
aam
ss
imul
or
ljmp
loope
sbb
xor
outsb
adc
push
in
loope
flds
shll
and
xchg
sub
mov
dec
cs
adc
cmp
insw
ss
test
adc
jb
xchg
add
fs
scas
or
aam
aas
lret
or
das
push
push
add
sbb
inc
subl
addr16
push
jbe
inc
in
das
aas
mov
faddl
sbbl
fs
stos
pop
cs
dec
mov
push
xchg
lock
mov
or
jb
notb
xor
or
fistps
lods
pusha
cmp
push
stc
lahf
push
out
jb
cmp
popf
xor
out
push
cmc
jp
jg
push
loope
dec
lods
imulb
out
sub
fs
inc
int
repnz
fwait
pop
outsl
ret
or
ljmp
pop
jnp
or
gs
lods
cltd
xorl
lcall
lods
in
xchg
imul
mov
fwait
and
push
ds
mov
insl
ret
pop
pop
mov
fs
inc
loope
das
in
dec
out
loope
cmp
add
std
test
jle
in
xchg
std
jg
dec
in
test
testb
lock
xorb
rclb
mov
or
sbb
lock
add
jge
sti
mov
mov
add
and
mov
jp
add
sbb
sbbl
mov
mov
xor
push
clc
add
lods
sub
ficoms
xchg
test
enter
or
jmp
jmp
mov
lret
xor
dec
addl
aaa
std
dec
dec
adc
or
int3
lret
cld
in
mov
cwtl
or
test
inc
fistpl
mov
xchg
push
jns
adc
push
test
loop
fwait
sbb
ljmp
xor
bound
lods
pop
sub
iret
add
xchg
xchg
and
sub
cmp
dec
jnp
sub
out
lret
sub
insb
jbe
popf
call
jno
inc
mov
jo
ret
xchg
add
les
and
adc
fs
xchg
add
and
sti
xor
and
int3
test
hlt
daa
pop
xor
sub
fsts
and
mov
lds
popa
mov
stos
sbb
mov
dec
mov
js
sbb
cmp
loop
cmc
dec
xlat
aam
dec
cmpsb
sbb
aad
push
mov
movsb
xorb
int
jae
stos
mov
push
das
insl
rol
mov
mov
pop
cmp
insl
fmuls
and
je
test
int3
adc
int
and
stos
or
mov
cmpsl
fcmovnb
adc
imul
gs
int3
mov
pop
sub
shl
in
and
adc
lds
inc
iret
gs
orl
leave
fisttps
lcall
and
lock
rorb
adc
es
jb
pop
stos
adc
cli
int
mov
sbb
lret
inc
sbb
push
sbb
push
ss
xor
in
xor
cmc
negl
cmp
xchg
xor
nop
daa
xor
popa
or
imul
sbb
cmc
sbb
and
sub
mov
lcall
sbb
cmpsl
inc
subl
jo
xor
cmpsl
dec
add
les
cmpsb
jmp
sub
xor
popf
mov
jmp
xchg
subb
outsb
repz
mov
dec
mov
movsb
fisttps
sub
data16
repz
xorl
popl
fwait
xchg
nop
lods
inc
ljmp
inc
lret
lret
xchg
cld
inc
dec
loopne
and
adc
ljmp
cmp
in
mov
ret
jmp
inc
jb
int
mov
lock
arpl
or
ss
cmp
push
mov
dec
repz
mov
les
popa
jne
cli
lret
in
mov
popf
lods
sub
fwait
lods
idivb
push
out
xor
outsb
nop
jns
lods
ljmp
into
cli
fnsave
rorl
xchg
add
mov
test
and
inc
ja
push
movsb
aad
cmpsb
cmp
dec
xor
mov
iret
bound
push
and
cli
dec
stos
cmp
xchg
dec
loope
sbb
pusha
inc
pop
stos
xchg
mov
in
lahf
loopne
std
adc
cmpsl
and
mov
cmc
nop
stc
xchg
test
mov
mov
out
cmpsl
leave
in
lds
jecxz
popa
repnz
adc
pop
int3
cmp
movsl
imul
jle
cmp
sarb
loope
mov
or
out
mov
or
je
inc
call
fidivrs
repz
fistpll
cltd
sbb
inc
jmp
orl
mov
stc
adc
mov
dec
pop
ficomps
sbb
fwait
out
popf
scas
sbb
fcmovne
in
test
jo
mull
mov
or
xor
imul
fwait
sbb
inc
mov
pop
scas
pushf
or
fadds
sub
call
in
push
sbbl
xchg
xor
push
fisubrl
mov
mov
cmpsb
push
clc
mov
adcb
fs
bound
shll
cld
fildl
pusha
sub
cmc
dec
dec
fcomps
nop
cmpsl
out
fwait
addb
das
xchg
push
adc
call
pop
xor
in
mov
mov
push
mov
mov
stos
cmp
sahf
cmc
mov
fdivrs
mov
pop
enter
jg
dec
cmp
mull
gs
loope
fstps
paddsw
lret
sti
xchg
aad
or
mov
decl
insb
lea
xor
ja
test
cli
or
sbb
dec
cmpsl
out
call
test
mov
xchg
sub
mov
mov
sub
push
shrb
sbbl
push
in
or
cli
call
test
xor
insl
jnp
mov
xchg
sub
cmc
jg
daa
push
mov
adc
stc
inc
mov
testl
or
out
jge
mov
jge
xlat
pop
mov
fwait
arpl
and
push
call
imul
shll
out
cmp
pop
insb
or
mov
fisttpl
adc
push
mov
push
fldenv
cmp
daa
add
xchg
push
jmp
push
xor
mov
insb
loopne
sbb
mov
test
mov
movsb
loopne
call
sub
sbb
shl
cmpsl
or
dec
xchg
mov
outsb
je
inc
insl
aam
outsb
xchg
or
or
push
in
pop
xchg
sbb
ljmp
in
or
mov
jnp
cmpb
pop
mov
and
stos
ret
dec
loop
adcl
add
push
add
add
jl
xor
inc
cld
xchg
pop
paddsw
mov
mov
cmpsl
mov
loope
fidivs
add
mov
mov
pop
out
or
xor
xor
jns
fs
fucomip
lds
movzbl
sbb
inc
add
pop
or
xchg
pop
mov
insl
push
out
sahf
xchg
pop
inc
dec
jmp
popf
lock
imul
mov
pop
mov
aaa
pop
mov
sbb
dec
cltd
mov
je
aad
adc
loopne
adc
jb
arpl
popa
adc
pop
shlb
mov
mov
scas
ret
push
inc
pop
xor
pusha
ret
inc
sbb
add
mov
mov
inc
arpl
mov
sub
adc
add
xor
in
scas
xchg
addr16
sbb
cmpsb
inc
lahf
inc
in
hlt
jnp
sub
add
pop
cld
scas
xchg
cmp
int3
add
sbb
cmpsb
inc
mov
rorl
daa
mov
test
lock
stos
add
xor
pushf
inc
adc
imul
fistps
pop
jecxz
in
mov
insb
mov
pop
ljmp
cmp
subl
cs
sbb
cmpsb
jg
push
pop
sbb
cmp
fldenv
jae
ds
test
and
mov
fcoms
sbb
out
sbb
daa
jbe
adc
cmp
adc
call
int3
pop
add
ret
xlat
fldpi
mov
mov
pop
rclb
sbb
adc
daa
lcall
cmp
jge
das
nop
pop
add
sahf
pop
test
cmp
cmp
push
fsubr
mov
mov
push
sti
push
lahf
mov
in
call
or
pop
lahf
adc
or
test
in
aas
cmp
cmp
add
jbe
test
mov
sbb
pop
push
adc
inc
pushf
ljmp
jnp
pop
pop
fcmovu
jae
fwait
movsb
sbb
xchg
das
movsb
mov
xchg
jae
scas
dec
dec
inc
and
inc
pop
fstpt
aas
xchg
fcomip
and
fdivrl
movsl
lods
sub
shrl
shll
mov
jnp
je
lea
fwait
stos
mov
xor
loopne
addr16
rorb
notl
dec
popf
fildl
popa
ret
js
sbbl
sbb
mov
pop
enter
adc
loope
push
daa
jne
test
scas
mov
call
pop
add
jb
cwtl
testb
and
test
dec
inc
gs
in
inc
lods
dec
pop
pop
xor
sar
jg
lea
pop
test
outsb
rorl
fstl
shlb
xchg
daa
into
mov
clc
push
out
mov
inc
cmp
and
dec
cli
in
adc
sbb
and
test
cld
inc
aad
shrl
out
ljmp
jecxz
mov
jecxz
lods
cwtl
add
fnsave
mov
sub
lds
fs
inc
les
pop
movsb
dec
inc
pop
movsl
cwtl
inc
mov
cltd
add
out
sbb
add
xor
imul
sti
int
and
cmp
push
loope
test
dec
pushf
fists
nop
sub
jnp
sub
xchg
xor
mov
pop
and
sbb
mov
and
sbbb
fadds
mov
in
mov
inc
faddl
pop
push
cmpsl
mov
fs
jb
mov
jmp
in
js
rcll
sub
jno
xor
xadd
icebp
cmp
and
pop
insl
out
icebp
cmp
test
repnz
cmp
cs
fistpl
loop
out
out
das
or
or
ret
add
inc
ret
jmp
fwait
xor
dec
jmp
mov
daa
jge
cltd
sub
fisubrl
hlt
inc
cmpsl
add
add
stc
adc
test
and
mov
xlat
mov
les
mov
adc
xchg
sbb
inc
orb
mov
sub
jno
movsl
fucomip
xchg
adc
ret
and
stc
ljmp
pop
xor
testl
jbe
out
and
xchg
outsb
in
pop
adc
add
aas
mov
add
insb
inc
out
aaa
test
cmp
nop
cltd
pop
out
lret
into
cmp
scas
in
pslld
loope
stos
add
test
xor
xchg
add
lcall
outsb
std
mov
iret
pop
push
and
rcrb
mov
mov
inc
pop
mov
lea
pusha
insl
repz
sub
or
scas
or
cmpsl
cmp
fistpll
in
in
andb
ss
mov
add
mov
pop
mov
shrb
mov
push
movsl
gs
and
aas
mov
bound
jp
dec
in
lock
pop
lcall
popa
sti
popa
push
test
addl
inc
inc
test
jg
xchg
test
bound
cltd
stc
xchg
push
and
aaa
mov
ficoms
mov
lcall
or
test
ss
sbb
xlat
mov
clc
ds
pop
mov
mov
xor
shrl
lret
dec
scas
and
call
dec
jge
out
outsl
fdivrs
push
enter
push
mov
or
jmp
push
sbb
push
pop
cmp
test
mov
movsl
jb
loop
js
mov
xchg
pop
enter
lret
lahf
sahf
jmp
aad
cmp
pusha
outsb
and
lahf
or
mov
jae
pop
movsl
inc
jle
cli
lret
and
std
sbb
cmp
mov
xchg
popf
pop
out
in
sbb
push
sub
xlat
pop
pop
xchg
insb
mov
sbb
mov
pop
cmpsl
rorl
rolb
fsubrl
jns
cmc
mov
lcall
fiadds
add
add
and
popf
jno
cs
adc
lods
and
mov
or
jbe
imul
cmpsl
je
mov
enter
iret
data16
out
mov
mov
ucomiss
dec
test
inc
pop
shl
and
adc
add
es
and
decl
xchg
js
mov
ret
es
mov
cmpsl
aad
fsubrs
imul
sti
sbb
loop
cmp
dec
loop
mov
outsb
loopne
bound
movsb
fsts
xor
jmp
aaa
pop
ret
xor
xlat
push
or
jne
repnz
adc
mov
out
mov
pop
in
sti
mov
test
mov
test
jbe
dec
loopne
pop
cmp
int3
in
das
out
mov
sbb
add
cmpsb
enter
xchg
pop
call
sbb
xchg
ljmp
push
add
add
adc
mov
pop
jae
xor
out
xchg
xchg
xchg
xchg
les
mov
psllw
les
mov
das
push
cmp
gs
jge
inc
stos
imul
rcrb
xchg
cmp
cld
rclb
dec
adc
ss
jg
xor
mov
mov
out
sbb
icebp
les
insb
jnp
pop
jne
out
mov
hlt
aam
jp
jns
shlb
cmp
dec
inc
fnstsw
ficompl
adc
clc
dec
sub
sbb
in
sarb
sub
dec
fucomip
pop
sub
mull
and
call
or
xor
push
mov
mov
fstpl
lret
cs
mov
adc
sub
mov
mov
sub
movsl
cmc
pusha
mov
pop
in
es
jg
sub
jo,pt
push
push
orl
lods
mov
subb
ret
cli
cld
or
insb
and
pop
dec
rcll
push
outsb
clc
cmp
inc
testl
in
mov
inc
push
les
int3
inc
shrl
mov
xchg
dec
out
sbb
pop
shlb
mov
lock
addr16
and
jne
and
aas
dec
lahf
out
test
jmp
neg
jne
mov
inc
mov
aaa
iret
push
pop
cmp
jo
daa
xchg
shrl
push
mov
test
pop
clc
push
sub
cmp
sbb
cltd
or
mov
push
pop
call
and
jno
sub
jge
pop
out
sti
fwait
mov
adc
dec
push
and
mov
shrl
pop
cmpsb
dec
jne
xchg
add
fmuls
or
sbb
cli
lea
lods
cltd
sbbb
lods
pop
push
jnp
and
mov
push
in
or
xorl
pop
jns
cmp
es
clc
fwait
inc
test
mov
dec
mov
push
and
mov
nop
cmpps
xor
and
pushf
add
inc
sbb
jne
mov
or
mov
adc
rcr
dec
pop
sbb
cltd
push
daa
shl
cmpsb
es
xchg
mov
fstps
push
pop
adc
add
sub
sbb
sbb
out
fstpt
adc
lcall
add
add
je
cwtl
xchg
and
or
fwait
pop
ljmp
push
icebp
cmpsb
roll
lcall
inc
fidivs
popf
je
inc
sbb
sub
xchg
incb
das
mov
imul
movsb
hlt
test
fnstcw
dec
test
nop
daa
cltd
mov
icebp
jb
mov
cli
or
mov
hlt
mov
dec
int
cli
negb
pop
xor
into
fdivl
push
lcall
mov
cli
jecxz
jae
push
sub
sub
lret
shll
mov
mov
inc
in
pop
into
jb
sbb
int3
mov
popf
xor
push
bound
lods
sar
push
lods
jle
jecxz
jo
fldl2t
stos
fcmovu
out
divl
pushf
push
cli
into
and
xor
shlb
in
addr16
out
sub
pusha
call
sbb
xor
fs
push
xorl
mov
aam
mov
inc
jae
bound
imul
mov
cmp
enter
lret
push
out
data16
fnstsw
push
ret
xor
and
add
popa
xor
test
std
mov
sbb
xor
fstpl
xchg
arpl
pop
into
mov
fsubrl
lahf
inc
fistl
adc
or
jns
in
cmc
cwtl
sub
jnp
pushw
jne
or
inc
es
dec
fnstenv
lds
imul
ret
xchg
xchg
and
or
push
mov
adc
dec
lret
js
daa
icebp
jg
int3
loope
sbbl
add
mov
inc
mulb
jle
pop
aam
mov
insl
jp
push
imul
mov
dec
iret
inc
pop
or
push
nop
mov
xlat
lret
pop
loopne
sbb
mov
inc
mov
mov
loopne
gs
dec
pop
bound
insw
notb
dec
cmp
stos
test
adc
popf
inc
push
stos
cmpl
or
lock
jne
cmpsl
loop
xchg
dec
ffreep
pop
pop
mov
enter
shlb
cmpsb
mov
or
sub
sbb
jne
pop
sbb
mov
or
dec
mov
nop
jnp
lcall
jle
xorb
dec
dec
sbb
cmp
scas
push
aam
aas
adc
jp
mov
out
imul
movsl
mov
xchg
loope
std
lods
pop
cmp
stc
inc
cmp
repnz
mov
adc
icebp
std
das
jo
adc
insl
andb
insb
jns
lds
and
xor
ja
in
xchg
int
pop
dec
rol
loop
mov
adc
cwtl
push
arpl
aaa
jmp
lret
xchg
cltd
nopl
pop
xchg
mov
dec
loope
jns
ret
adc
lds
mov
mov
pop
sub
movsb
mov
lock
stos
rorb
sbb
pushf
xor
outsl
and
mov
test
pusha
mov
jno
mov
inc
push
mov
push
mov
mov
ret
xorl
pushf
fwait
cmpsb
sbb
aaa
xchg
test
xorb
fucom
xchg
sub
test
jno
jbe
jle
inc
pop
mov
imul
mov
pop
adc
inc
jo
add
sbb
out
ret
loop
sahf
xchg
add
sub
xor
push
jmp
sub
and
std
lods
cli
lret
pop
data16
mov
mov
dec
push
pusha
test
rorb
popa
lods
stos
and
xor
dec
daa
jnp
push
cmp
in
ret
hlt
push
sbb
sti
push
outsl
jnp
and
out
xor
cmp
ret
call
inc
in
outsb
xchg
bound
mov
addr16
aaa
lret
fistl
lret
xlat
add
data16
xor
and
in
adc
fisubl
outsb
roll
insb
mov
push
outsb
and
sbb
pop
push
bound
pop
test
ja
mov
outsl
aaa
inc
clc
lods
add
insb
out
cwtl
mull
std
mov
cmp
push
pop
int
adc
les
fldt
shll
push
push
ss
push
inc
aaa
jecxz
sti
dec
fadds
in
jnp
sahf
mov
inc
push
mov
fidivrl
movsl
enter
movsl
pop
mov
inc
xchg
jge
mull
andl
or
sti
mov
dec
iret
insb
jno
mov
or
aam
jbe
pop
cltd
sbb
cmpsl
ds
pop
or
jl
lock
inc
pop
mov
sti
push
leave
icebp
sbb
sbb
pushf
or
sbb
ficompl
std
xlat
js
sbb
inc
xlat
sub
pop
push
data16
pop
pop
mov
stos
mov
test
rcl
mov
jb
xlat
arpl
add
out
fnstenv
jecxz
jbe
mov
fdivl
loope
sub
sub
sub
sub
inc
es
je
flds
movb
mov
dec
adc
lock
imul
mov
add
adc
das
divl
jp
xchg
in
cmpsl
push
aas
cwtl
gs
in
sub
dec
mov
aas
cmp
ret
popa
data16
fs
xor
xchg
addl
cmc
pop
scas
repnz
rcrl
jbe
jne
sbb
mov
fucom
sub
pop
inc
ficompl
xchg
test
shrb
stos
das
bnd
sbb
or
fnsave
sub
jp
das
dec
stos
ds
inc
popf
xchg
push
int
hlt
and
mov
sbb
cmpb
je
and
xchg
into
mov
gs
data16
cs
test
lcall
rorb
xchg
or
pop
lds
dec
dec
cmp
sbb
lds
add
inc
sub
pop
jg
push
test
xchg
cli
lods
cmpsb
cwtl
outsl
cwtl
fsubrs
test
rcl
repnz
xchg
lods
jb
cmp
mov
js
jns
notl
lret
js
addr16
xorl
xchg
test
les
shl
insb
rorb
ret
shrl
pop
inc
sub
xor
sbb
mov
std
xor
cltd
lods
jmp
clc
sub
add
aaa
call
inc
inc
cmpsl
ds
stc
bnd
jecxz
loopne
and
xor
mov
nop
in
or
out
mov
add
and
sahf
xor
sub
std
scas
mov
in
jns
inc
xlat
cmp
mov
loope
ljmp
mov
fidivl
popl
mov
icebp
push
xchg
outsl
jg
int3
mov
popa
mov
pop
adc
enter
xchg
cld
jge
jmp
mov
adc
xchg
adc
dec
jno
shll
jl
test
movsb
xchg
lcall
sub
cwtl
stos
adc
add
xchg
loope
push
inc
cmp
in
mul
fidivl
push
jne
mov
es
sbb
in
das
push
testl
mov
loopne
jmp
out
mov
sub
sbb
jecxz
fimuls
push
mov
adc
dec
mov
bound
arpl
scas
cmp
sbb
shr
icebp
cmp
jbe
pop
mov
notl
int
push
insl
pop
and
inc
sti
stos
mov
je
aaa
mov
mov
xlat
xchg
out
jb
addr16
icebp
inc
lods
sarl
ret
add
pop
jno
in
aas
in
cwtl
xor
aam
cwtl
add
sahf
fbld
les
push
mov
in
mov
jle
mov
addb
jg
addr16
pop
pusha
push
push
fldenv
int3
in
or
dec
mov
xor
int3
fwait
push
rcrb
jp
xchg
pop
andb
and
xchg
push
mov
add
dec
out
loop
cmp
push
xchg
cmpsl
inc
xor
push
ds
iret
repnz
xchg
mov
movsl
aaa
out
int3
jg
sub
xchg
ret
js
mov
lds
jp
bound
fwait
enter
xchg
adc
jb
cmp
shll
lds
flds
imul
xor
daa
jle
add
jno
mov
sbb
mov
popa
jnp
push
fwait
aaa
xchg
adc
push
adc
push
xchg
stc
pop
into
inc
sub
inc
xchg
jbe
sbb
test
sbb
mulb
or
popf
mov
lahf
mov
inc
dec
popa
andl
pop
mov
push
inc
pop
mov
aaa
adc
push
sbb
fldt
mov
movsl
jmp
sti
xchg
mov
inc
sbb
inc
dec
sarl
sbb
cmpsb
jge
cli
lock
addb
sub
sbb
mov
jne
repnz
lea
jg
push
mov
out
xor
shrl
pop
ss
pop
jle
add
sub
aam
call
out
xor
mov
add
xor
iret
and
out
pop
hlt
cmp
xor
cmpsb
test
add
mov
and
jne
cld
jge
cli
pushf
xchg
lods
inc
loop
and
inc
dec
mov
insb
test
out
pop
shrb
adc
mov
out
sahf
cltd
or
rcrl
pushf
daa
mov
sub
fidivl
data16
mov
xchg
clc
in
add
add
lock
rorb
adcb
mov
lret
ds
push
and
sahf
xor
and
push
outsb
inc
pop
loopne
dec
pop
mov
in
jmp
das
adcb
imul
frstor
xor
xchg
call
jne
pop
nop
adc
or
es
stos
mov
or
mov
dec
mov
mov
in
inc
sbb
mov
push
daa
sbb
mov
ljmp
inc
in
adc
pop
or
repz
push
cmp
insl
lods
aas
mov
or
and
xchg
sub
inc
aas
pop
jmp
sbb
popf
fsubr
sub
cmp
adc
je
out
mov
popa
repz
imul
and
dec
jp
testl
test
pushf
inc
mov
mov
sbb
test
outsb
ss
loope
andl
daa
cmp
adc
orb
mov
push
adc
mov
mov
and
jmp
jnp
push
dec
dec
movsl
add
cwtl
add
test
aam
enter
mov
sub
inc
popf
jno
arpl
or
stc
jmp
lods
adc
ljmp
and
and
test
sub
mov
cmc
ret
cli
cs
das
in
jmp
inc
adc
outsl
int
mov
data16
jp
dec
cmp
inc
repnz
jb
and
sbb
push
push
cmp
ret
das
ss
dec
js
jns
popa
pop
jbe
in
inc
adc
push
insb
rorb
dec
dec
inc
jmp
ds
or
sbb
xchg
cltd
hlt
adcl
add
xor
or
scas
xor
xor
clc
and
pop
jmp
fcmovnbe
adcl
jb
stos
xchg
pop
mov
mov
fisubrl
dec
in
pusha
jmp
aaa
or
xchg
lcall
xor
inc
mov
faddp
in
popf
outsl
jge
mov
adc
xchg
sbb
pavgb
and
or
addr16
xchg
iret
fs
test
mov
std
repz
mov
push
and
insl
leave
subl
dec
cmp
push
negl
nop
and
mov
or
into
test
pop
inc
test
mov
pusha
mov
ffreep
out
jne
or
mov
inc
cmp
fdivs
and
inc
bound
mov
cs
inc
xchg
pop
leave
dec
popa
add
dec
loope
mov
push
sbbl
adc
notb
or
or
jne
sub
adc
sbb
inc
and
mov
or
cmp
data16
aad
mov
dec
push
mov
pop
add
adc
sub
push
gs
test
push
das
fnsave
jns
out
sub
test
mov
xor
insb
or
cmpsb
adc
cmp
mov
dec
nop
stos
dec
loop
or
bnd
andb
xchg
in
aaa
adc
dec
push
imul
dec
push
cli
andl
mov
adc
push
pushf
arpl
ret
and
jae
cld
in
aaa
test
ret
lcall
xchg
push
pop
mov
jae
in
rcrb
loope
imul
js
movsb
jbe
xchg
inc
rcrl
mov
ret
nop
inc
imul
sbbb
nop
in
rorl
pop
imull
add
xchg
cmc
dec
loope
ss
out
cld
sbb
mov
out
jbe
dec
add
sbb
movsb
mov
ficompl
mov
push
fldenv
inc
mov
int
das
int
sbb
bound
in
mov
mov
popa
mov
pop
mov
mov
icebp
hlt
dec
mov
repz
adc
loopne
repz
pop
arpl
or
jns
sbb
jnp
mov
jp
adc
loope
bound
mov
xchg
xor
repnz
scas
stos
mov
clc
mov
mulb
adc
pop
in
adc
dec
mov
inc
push
dec
stos
jge
push
sahf
pop
sub
xchg
push
and
cmp
incl
scas
jp
jae
lods
daa
cmp
int3
in
pop
hlt
add
mov
fidivrl
aas
or
push
shlb
xchg
out
addb
jecxz
int
popf
pop
sbb
stc
das
adc
push
add
sbb
js
in
lret
xorl
shl
mov
push
enter
movsl
cmp
scas
mov
loope
sbbl
imul
jge
arpl
or
or
jp
addr16
jle
shrb
push
jns
mov
lock
jmp
clc
inc
xor
add
and
push
dec
pop
repnz
pop
cmp
aad
mov
nop
insb
test
cmp
das
out
fsubs
mov
sbb
daa
cmc
dec
or
xchg
jae
sub
cmc
push
fsubrp
mov
pushl
mov
sbb
push
cs
rcrl
pusha
out
shrl
pop
cmp
stos
es
out
push
hlt
mov
xchg
ljmp
cmp
mov
xchg
cld
or
dec
in
out
xchg
lret
fwait
xchg
sub
sub
push
shrl
xchg
dec
cmpsl
lea
mov
shlb
cmpsb
push
repnz
pop
adc
ja
mov
jne
pop
jl
jp
cmp
adcb
mov
dec
sahf
inc
aas
inc
cmp
cmc
pop
add
je
pop
lods
mov
repnz
in
mov
rcrb
and
mov
lods
jo
mov
out
push
lret
inc
dec
adc
or
push
mov
adc
inc
jmp
push
inc
int3
sub
dec
in
and
push
pop
cltd
cmp
pushf
mov
dec
push
fisubrs
push
jmp
loope
and
enter
sbb
adc
mov
dec
cmp
das
dec
aad
or
lahf
sti
pop
jo
xchg
cmpsl
orb
or
imul
insb
jg
inc
cmp
jg
out
push
lcall
and
dec
mov
enter
mov
add
adc
lods
sbb
fiaddl
mov
loop
jp
pop
dec
fidivrs
je
push
inc
sbb
fiadds
pop
xchg
sbb
into
sahf
add
fstps
xchg
fld
daa
test
mov
xchg
jmp
sbb
lahf
test
inc
lods
or
clc
mov
jl
daa
jecxz
mov
es
into
aad
inc
sbb
mov
cmp
jge
cmc
shlb
mov
sub
pop
and
pop
dec
std
fbstp
stc
imulb
rclb
call
adc
jbe
lds
fnstenv
sbb
mov
mov
jne
js
fnsave
mov
and
lret
push
arpl
je
aas
push
int3
lret
pop
jle
repnz
sbb
jmp
scas
out
sbb
xor
hlt
je,pt
test
add
mov
adc
lods
jae
neg
jbe
lods
and
mov
push
popf
jge
lret
sub
js
loopne
cld
push
or
mov
xchg
mov
fnstenv
test
inc
fnstsw
ljmp
cmp
dec
out
dec
push
mov
ljmp
loopne
cmp
int3
aas
sti
cld
xchg
xor
in
adc
sub
ja
adc
jo
inc
cmpsl
dec
xor
ss
or
sbb
dec
or
ja
mov
xchg
jle
stc
and
add
or
arpl
mov
push
dec
ja
out
jne
loope
jnp
inc
call
pop
mov
lods
hlt
mov
lods
and
dec
loopne
mov
sbb
sub
in
or
push
xchg
mov
mov
mov
jmp
sbb
fnstsw
cmp
adcl
andb
das
cmp
mov
push
inc
aad
push
scas
aaa
std
testb
int3
and
rcrb
mov
mov
notb
mov
imul
pop
out
pop
mov
jae
cwtl
mov
push
out
cmpsl
fnstsw
fbstp
mov
sbb
lcall
sub
clc
dec
out
jle
sub
push
mov
xlat
xchg
fs
out
add
inc
or
mov
shrb
int
cmp
xor
push
jbe
daa
cmp
aad
mov
cmpsl
rorl
fimull
testb
int3
xchg
add
aaa
dec
cmpsl
or
lret
jmp
jns
mov
je
mov
and
sbb
faddl
pop
test
orb
xchg
imul
shl
mov
push
loope
subl
xchg
mov
lods
or
or
jae
cmp
pop
cltd
aaa
mov
cld
inc
insb
mov
cmp
inc
fistpl
xor
movl
xchg
sbb
lock
lcall
sbb
mov
cmp
pop
and
pop
fdivrs
adc
andb
and
xchg
sbb
stos
cli
sbbb
push
std
or
pusha
test
shll
pop
lahf
notb
sbb
xor
add
xor
pusha
xor
or
enter
mov
sti
push
inc
dec
add
ja
sub
dec
xchg
pop
dec
xchg
in
pop
call
fmull
icebp
in
add
inc
int
sub
dec
imul
popa
pop
and
xor
fbstp
cld
frstor
fnstenv
mov
jle
psubusb
pusha
cmp
imul
mov
arpl
inc
fwait
insl
sub
xchg
add
leave
pop
sub
cmpsl
lea
ljmp
sub
cmp
leave
push
leave
mov
js
std
mov
cmpsl
icebp
mov
mov
xchg
cmp
stos
jg
xor
push
jp
addl
push
movsb
mov
lea
scas
sbb
cmpsl
mov
shrl
or
jge
mov
dec
dec
mov
push
fwait
sti
pop
fistpl
jnp
mov
ja
in
sbbl
ljmp
repnz
in
jge
lahf
pusha
mov
fcoms
es
popa
jl
sub
mov
fcoms
inc
loop
mov
sub
mov
mov
pop
dec
push
adc
in
cmp
scas
dec
pop
stos
icebp
iret
pop
icebp
fadd
adc
rcrl
sbb
mov
ficoms
add
mov
or
mov
mov
rol
dec
int
hlt
xchg
movl
lret
lock
xchg
popa
fsubs
adc
int3
cmpsb
cmp
jecxz
scas
std
cli
add
sbb
dec
in
inc
and
add
outsl
lods
imul
mov
dec
or
aam
ljmp
insl
negl
jp
pop
pop
fwait
daa
add
mov
adc
sub
add
dec
mov
and
push
daa
call
dec
add
fstps
js
dec
ret
aas
xchg
daa
sub
repnz
jcxz
mov
and
mov
std
or
daa
and
jae
mov
cli
xchg
mov
push
jo
scas
xchg
xchg
sbbl
mov
test
inc
inc
mov
sub
scas
call
dec
pop
lahf
out
sub
push
jg,pn
pushf
scas
adc
inc
stos
xchg
fists
lret
leave
dec
je
fildll
sbb
mov
jb
or
std
or
xchg
fcom
orl
inc
push
adc
shlb
ret
sub
sbb
or
std
shlb
cld
sbb
xchg
xor
cmp
into
jno
dec
out
cmc
xchg
mov
sub
sub
lret
stos
imul
adc
and
in
arpl
and
sbb
je
xchg
xlat
outsb
in
loop
or
orb
rclb
aam
ss
cmp
push
aas
xorl
cmp
test
sbb
dec
dec
inc
jne
add
ret
std
in
pop
dec
cmp
jge
jg
cltd
xchg
mov
dec
in
add
rol
clc
nop
fildl
jno
testb
inc
int3
jo
aam
fwait
arpl
xchg
xor
jb
cmp
jae
inc
stos
add
dec
stos
jle
cmp
cmpsl
pop
lahf
or
sarl
mov
hlt
jl
mov
cmc
jl
adc
outsb
xchg
inc
push
popf
mov
dec
mov
push
mov
mov
or
jo
mul
ss
push
adcl
pop
rcll
mov
xchg
sub
pop
push
mov
jns
push
cmp
mov
sbbl
inc
fdivl
das
mov
jge
xor
arpl
or
mov
fdivl
add
or
xor
dec
shll
xchg
jns
mov
pop
ss
aam
mov
or
or
jae
lods
in
dec
pop
insb
sbb
jae
cld
dec
into
in
sbb
mov
fidivl
mov
and
lahf
idivb
mov
cmp
adc
rol
mov
fadd
sahf
mov
add
mov
dec
xchg
pop
fbstp
cmp
jmp
or
sbb
add
sahf
xchg
pushf
arpl
mov
inc
in
mov
fidivl
rcrl
xchg
add
jae
push
fisttpll
int3
inc
mov
xchg
add
mov
xlat
mov
sarl
das
testb
cltd
xor
mov
jecxz
mov
rclb
pop
iret
mov
add
ret
pop
in
pop
repnz
iret
jecxz
xchg
sub
mov
aaa
call
fdivs
shl
push
pusha
in
call
add
shrb
notl
mov
aam
adcb
pop
dec
fisttps
cmpsl
xor
cwtl
out
cli
and
sbb
xor
cmp
lods
insl
sahf
mov
cmpsl
andb
add
cmp
jbe
mov
rorl
push
rcll
and
or
stos
xor
out
and
pusha
adc
sub
outsb
movsb
std
jae
ss
add
sbb
pop
mov
aad
sarb
cmp
aas
in
movsb
dec
jecxz
add
mov
cs
lea
mov
int3
pmaxsw
dec
jbe
mov
sbb
sub
or
inc
rorl
xchg
mov
cmp
shld
jle
jno
insl
add
insl
sub
test
jb
mov
hlt
and
pop
dec
mov
cmp
push
daa
or
mov
ss
aad
insl
adc
outsb
inc
lcall
arpl
jge
or
lods
add
addr16
xor
dec
cmpsb
out
sarl
jmp
inc
xor
call
and
push
or
cmp
insb
outsb
pusha
push
pop
pop
sbb
lret
jne
das
rol
add
sub
push
mov
mov
mov
sbb
mov
popf
push
rorl
adc
mov
int
inc
inc
or
in
push
mov
test
jne
mov
dec
lret
pop
xor
mov
cmc
in
fwait
sbb
int3
mov
sarb
dec
or
inc
mov
pop
cmpsb
cmp
js
les
adc
in
std
push
nop
xor
dec
mov
pop
sub
outsb
inc
loope
push
push
xor
sub
push
pop
loopne
jge
js
inc
pop
sahf
clc
shr
stc
cmpsb
or
adc
mov
jmp
in
or
mov
push
push
sub
mov
sub
das
pop
in
xchg
sarl
push
jge
adc
cli
fsubl
adc
vpminub
shll
cmp
lods
or
adcl
hlt
mov
adc
das
int3
bound
stos
push
cli
stos
mov
mov
mov
jno
inc
push
adc
rol
lods
push
cmpsl
dec
loopne
cmp
mov
rcrl
shrl
pop
mov
pop
pop
arpl
cs
int3
data16
cmc
push
sub
mov
mov
mov
mov
data16
sbb
das
dec
push
cmp
test
inc
fldenv
mov
mov
inc
lock
xchg
lret
push
cmp
push
adc
test
mov
jb
and
icebp
subl
xor
cmp
add
adc
repnz
adc
lret
mov
dec
test
fdivp
lea
add
adc
es
xor
add
lock
je
xor
and
js
mov
inc
pop
clc
sahf
aas
test
stc
sub
sahf
xlat
pop
adc
ret
mov
jecxz
add
icebp
test
pop
xchg
cmpsl
out
xchg
addr16
sub
and
popf
jg
ret
jb
pop
jg
and
subb
jmp
sub
dec
fs
loopne
int
cwtl
adc
jge
mov
fstpl
in
and
jg
or
push
cltd
lds
std
popl
xchg
push
into
fisubs
jo
lds
cmpsl
shrl
cltd
out
mov
fidivrs
ret
aad
mov
ret
sahf
test
mov
push
jnp
imul
in
or
inc
xchg
push
outsb
mov
fwait
loopne
dec
dec
pop
mov
inc
fsub
fcomip
pop
or
divb
xchg
sub
pop
mov
pop
add
mov
int
jae
add
pop
xchg
mov
test
pop
jmp
push
lds
push
xchg
jge
mov
push
and
fnstenv
jno
daa
cmpb
push
pop
cli
es
jle
and
mov
outsl
shrl
pushf
cli
shl
out
cmp
jb
popf
es
xchg
aaa
in
push
xchg
out
add
or
pusha
sub
scas
cld
inc
lcall
jmp
adc
fisttps
mov
mov
push
clc
iret
add
and
adc
cli
push
mov
fldenv
jo
dec
mov
or
aaa
jle
and
scas
inc
xlat
push
jmp
lds
inc
scas
inc
inc
or
or
or
pusha
pop
iret
mov
fidivrs
pop
dec
aas
adc
ret
jnp
mov
sarb
rolb
cltd
add
cmp
leave
cld
aad
rcll
sbb
fisubrs
jnp
lock
mov
nop
and
imul
fldenv
int3
int
shlb
and
mov
in
movsb
cli
inc
xchg
xchg
jmp
cmp
mov
ret
pop
sub
jb
fidivs
sbb
shr
pop
iret
movsb
aaa
xlat
das
mov
mov
movsl
and
es
dec
jg
icebp
mov
mov
imul
and
inc
adc
fs
mov
bound
adc
leave
pop
jb
xchg
pop
pop
sti
leave
cmpsl
mov
pop
pop
pop
pop
mov
lock
rcll
dec
add
mov
out
pop
xchg
popa
lea
jns
jge
xor
ret
outsb
dec
push
sub
out
inc
out
cli
inc
scas
adc
out
inc
clc
testb
cli
stc
cmp
outsb
jecxz
cmp
lock
in
pop
mov
adc
aaa
cwtl
and
sub
stos
mov
je
inc
pop
xchg
inc
xlat
dec
aaa
stos
cmp
jp
mov
add
int3
in
or
fnstsw
fdivs
mov
sbb
or
add
xchg
cmpsl
xchg
leave
cmpsb
mov
ljmp
xor
xchg
mov
or
leave
pop
xchg
test
pop
jb
push
jg
out
add
loop
scas
daa
shlb
add
add
jne
lods
data16
sub
clc
int
xor
pop
popf
out
loop
out
inc
or
xor
xchg
inc
sub
pop
decl
pop
mov
out
sti
push
jmp
and
cs
xchg
test
add
mov
test
pop
push
out
inc
mov
dec
shl
jae
push
stos
rcll
sub
sbb
push
repz
roll
jno
bound
popl
and
cltd
test
or
jle
xor
mov
in
xor
xchg
ljmp
and
and
inc
jle
jp
sub
insl
mov
mov
push
mov
cmp
pop
cmpsl
mov
aaa
sahf
cmp
fwait
je
in
int
sub
xor
ja
addr16
mov
push
cmpsb
sarb
add
xorl
ret
aam
dec
out
sub
and
xchg
inc
push
pop
add
cmpsl
sub
pop
pop
repnz
les
pop
sub
cltd
or
gs
jnp
xchg
das
push
pop
stc
ss
and
push
push
inc
mov
loop
cmp
push
add
loopne
jns
fcmovb
xor
repnz
inc
sbb
xchg
insl
xor
addb
sbb
push
nop
daa
xchg
scas
jnp
mov
pop
sbbl
pop
popf
jp
inc
xchg
add
cli
sub
mov
int
je
pop
dec
pop
cmp
cmp
outsb
sti
pop
adc
add
sarl
inc
push
stos
cli
dec
lahf
dec
jmp
enter
imul
addl
mov
push
je
xchg
out
cmp
lahf
stos
xor
rorl
xor
aam
jns
add
cmpb
xchg
out
jge
loopne
adc
xchg
cmp
push
cmpsb
push
imul
cld
hlt
xor
lcall
scas
inc
push
addr16
inc
xor
bound
push
iret
int
push
mov
pop
rorl
sbb
mov
xchg
das
cli
dec
push
dec
mov
jbe
inc
das
test
mov
inc
cmp
adc
bound
push
outsb
loope
adcb
in
adc
sbb
js
mov
or
outsl
sub
jae
cmp
sbb
mov
add
push
sbb
ss
stos
outsb
adc
in
roll
pop
cwtl
cmpsl
cwtl
jae
mov
ficoms
mov
dec
pop
es
inc
ljmp
jbe
inc
dec
and
in
mov
xchg
cli
fidivl
or
sbb
ds
cmp
xchg
dec
jmp
repnz
addr16
cmc
xor
cli
mov
out
pop
into
fiadds
les
jmp
mov
inc
cmp
loopne
gs
addr16
or
movsb
fstl
cltd
xor
mov
imul
mov
es
cmp
mov
shll
jl
shr
xor
aas
add
xchg
jb
fidivs
mov
inc
or
cld
push
int3
xchg
mov
sbb
std
lea
jo
adc
xchg
adc
inc
fstps
sbb
xchg
lcall
aam
mov
xchg
adc
and
lret
aad
inc
fnsetpm(287
clc
inc
jge
cmp
testb
or
fisubl
pushf
mov
jnp
out
pop
sbb
jg
pusha
push
daa
test
outsl
push
jne
aam
push
xchg
lea
fwait
push
mov
stos
jp
aam
les
dec
out
push
ljmp
mov
pop
cmp
or
gs
inc
push
pop
and
cmp
repnz
mov
sub
addl
gs
ficoml
mov
icebp
adc
lcall
pop
cli
or
cmpsb
pop
mov
and
imul
nop
movsl
fcmovnb
aaa
add
scas
popa
lods
push
rol
cmpsb
cmp
in
lcall
sarb
cmp
sbb
mov
cmp
sub
imul
into
or
adc
mov
insl
repz
fsubl
cli
sub
std
or
lcall
xchg
test
pop
rcll
mov
sub
mov
popa
push
cwtl
cli
pushf
xchg
iret
imul
xchg
push
and
cmp
sti
cwtl
jecxz
test
ret
fdivrs
imul
push
jb
pop
in
mov
icebp
stos
sub
fistl
ffree
push
lret
out
inc
xor
sub
shlb
testb
xchg
inc
les
rolb
and
addb
lods
mov
outsl
cs
gs
cmp
fidivrl
fs
dec
fdivrs
sarb
mov
lahf
inc
frstor
add
xor
lret
arpl
shrl
mov
mov
push
lods
inc
lret
push
xchg
popf
push
in
lret
mov
std
call
push
mov
loopne
push
jb
xor
push
andl
push
addr16
test
jno
loope
mov
push
stos
sub
dec
xor
dec
and
mov
cld
cmp
imul
rclb
sub
pop
mov
add
popa
fmuls
out
pop
mov
and
pop
insb
cmp
adc
popf
add
jne
push
mov
inc
lret
sahf
mov
sbb
ss
pop
fiadds
test
or
add
cmp
jo
xchg
sti
clc
pop
and
mov
testl
adc
loopne
imul
xchg
jns
xlat
lea
fstps
ja
push
pop
daa
cmpsb
xchg
std
xchg
call
imul
adc
ljmp
xor
xor
add
or
mov
cli
pop
mov
inc
fidivrl
mov
std
dec
lcall
pop
jge
imul
or
in
xchg
add
adc
loope
sub
adc
jne
xlat
ret
hlt
clc
lea
adc
shrl
lcall
sbb
pop
mov
ss
sti
repnz
xor
xor
pop
aas
lahf
negl
cmc
xor
dec
sub
or
mov
jge
insb
incb
fsub
es
mov
pop
xor
xchg
int
xchg
cmc
mov
hlt
out
sub
fcomps
or
sbb
ja
leave
sbb
jle
fiaddl
dec
add
fnstcw
minps
cmp
adc
push
bnd
ror
cld
lcall
ja
test
add
cmpsb
nop
jl
lock
movsl
outsl
and
xor
mov
lds
movsl
mov
es
icebp
je
mov
arpl
cmp
cld
mov
pop
xor
aaa
add
sahf
int
mov
loop
sbb
sti
jle
mov
mov
dec
lahf
dec
cmc
pop
inc
movsb
bnd
movsl
sbb
stos
rolb
mov
xchg
dec
inc
cmpsb
icebp
subb
or
push
jl
dec
sub
shl
cmp
cmp
int3
add
int
std
sbb
aam
nop
sub
in
pop
adc
sbb
inc
loopew
movsb
int3
push
stos
js
mov
jae
xchg
in
aam
inc
pop
mov
or
lret
popf
roll
std
jo
subl
and
bound
and
jmp
ror
sub
popa
add
pushf
orl
mov
xor
push
push
repz
sub
js
fsubl
inc
and
imulb
scas
stos
adc
push
aam
decl
cld
adc
or
rcl
mov
lods
sub
cmp
add
and
cwtl
fs
ficompl
push
xchg
repz
popf
insl
xchg
jle
mov
lods
in
sub
push
int
ret
push
loopne
out
mov
mov
ljmp
dec
repz
mov
push
sbb
pinsrw
fs
dec
out
xor
inc
xlat
inc
push
and
cwtl
decb
jb
std
cs
and
push
nop
dec
insb
or
mov
aas
xor
cmp
hlt
dec
cmp
rorl
out
xchg
pusha
insl
mov
sub
add
dec
pop
push
add
repz
add
xchg
test
call
mov
push
sbb
in
mov
mov
or
adc
mov
mov
lret
addr16
pop
mov
scas
call
hlt
in
push
cmp
lea
sub
mov
rorb
mov
fnstsw
or
xor
add
loope
push
xor
mov
adc
cmpsl
push
in
add
sbb
fwait
dec
clc
inc
lret
xor
or
stos
or
or
push
and
data16
cmpsb
jge
aas
mov
adc
lods
idivb
fstps
sbb
outsb
rorl
lds
push
insb
scas
hlt
inc
rcrb
dec
jecxz
jmp
ds
jp
cmp
in
out
sub
and
inc
test
iret
add
adc
inc
pop
add
sbbb
rorb
pop
lahf
jbe
mov
lods
negl
xor
adcb
and
sub
add
sub
push
push
fnsave
sbb
stos
inc
jae
fdivs
add
mov
addr16
dec
cmp
gs
repnz
xchg
add
ljmp
dec
pusha
cmpb
inc
std
jg
icebp
lock
sbb
pop
add
pop
icebp
inc
pop
stos
and
lret
cmp
mov
mov
push
sahf
add
or
shrd
sbb
cmp
call
adc
cmp
jne
rorb
iret
sub
xlat
jnp
les
cmpsb
imul
jns
xchg
push
mov
incl
faddl
xchg
fstpt
cmp
push
mov
pop
sbb
int
mov
adc
jbe
cmp
adc
sbb
add
lcall
dec
mov
inc
cmpsb
fincstp
fadd
icebp
gs
test
leave
xchg
stos
mov
inc
mov
lods
lds
add
lods
movsl
pushf
fidivs
pop
popa
iret
pop
inc
add
rcrl
adc
stos
fidivl
adc
add
pop
andl
add
pop
cmc
dec
scas
pop
mov
ret
sahf
xor
sub
or
pop
dec
mov
clc
cmc
loopne
push
pop
lahf
outsl
cli
sbb
fstp
pop
cmp
xor
jne
mov
push
push
stc
pop
push
mov
hlt
leave
jle
cmp
cmp
xor
ret
loope
loope
adc
pop
nop
xchg
sub
shrl
jecxz
ret
ror
hlt
jl
mov
sub
aad
fld
inc
in
mov
call
sbb
fwait
insb
push
lds
xchg
sub
pushf
and
or
mov
push
sub
mov
in
xor
loopne
gs
cmp
dec
xchg
dec
push
into
movsb
adc
loope
sti
xchg
pop
jne
clc
aaa
jbe
imul
mov
push
pop
dec
dec
mov
imul
dec
pop
sub
in
push
clc
cmp
or
clc
jns
sub
lcall
jne
fsubrl
pop
mov
loop
adc
sahf
pop
xor
mov
add
xchg
shlb
repz
inc
cmpsl
test
stos
push
adc
adc
testb
jge
aaa
lret
xor
lock
test
xor
cwtl
sbb
mov
push
loop
push
orl
jecxz
adc
movsb
xchg
mov
push
ja
addb
fisubs
jle
jbe
pusha
mov
in
test
outsb
test
mov
movsb
push
jg
popf
add
sub
mov
fidivrl
sub
cli
cmp
and
mov
mov
stos
jp
fnsave
fwait
pop
pop
idivl
cwtl
jl
dec
dec
cmc
popf
pop
jbe
sbb
es
stc
test
dec
add
dec
mov
in
jne
test
xor
xlat
pop
add
imul
xchg
cmp
pop
add
stc
and
sub
movsl
cwtl
imul
pop
ja
dec
pop
int3
idiv
addl
mov
jle
lods
scas
sub
xor
cmpsl
inc
std
xchg
fisubrs
mov
mov
dec
push
out
pop
mov
mov
sub
cld
adc
cmp
push
das
cmp
push
mov
add
into
pop
ret
adc
mov
pop
int
and
hlt
mov
mov
scas
cmp
mov
push
outsl
movsb
cmp
popa
push
xchg
out
push
sbb
outsb
js
xchg
cmp
fstpt
jbe
inc
cmp
xor
hlt
rcll
dec
in
and
popa
insb
sub
and
fstpt
cltd
hlt
xlat
mov
xor
lock
sub
in
fcomps
mov
and
and
xor
jmp
loopne
dec
push
shll
rolb
or
scas
ja
push
sbb
inc
aas
mov
test
in
adc
outsb
mov
test
mov
pushf
js
loop
pop
test
sub
jns
dec
loopne
insb
add
adc
test
sti
scas
jns
pop
sbb
ss
cmpsl
cmp
inc
cmovbe
xor
out
fbstp
sub
sbb
add
mov
bound
mov
rcr
dec
lods
jmp
shrb
shlb
nop
sub
out
sub
subl
aad
in
mov
mov
mov
pop
lods
pop
jne
int
push
inc
out
dec
xor
cli
sub
mov
cmc
add
out
mov
push
fcmovbe
ret
push
adc
mov
es
jecxz
outsl
in
push
lcall
mov
pop
les
jns
cmpsb
subb
push
sahf
ja
add
mov
adcb
stos
subl
popf
pop
mov
jns
jno
call
ljmp
sbb
pop
jbe
nop
xor
stos
adc
cmpsl
adc
or
shll
insb
iret
and
xchg
sbbl
fsubrs
jnp
jmp
in
jecxz
xor
mov
push
xor
int3
in
daa
xchg
sub
jmp
cmc
clc
inc
fwait
push
out
in
cltd
testl
roll
out
xor
mov
sub
ljmp
lret
scas
and
jbe
das
movsl
or
fcom
es
push
add
into
idivb
shll
cmp
call
mov
mov
inc
pop
pop
xor
fucomip
outsb
pushf
push
sub
in
hlt
repnz
mov
mov
sbb
insl
ret
call
aas
orl
xlat
pandn
pop
aaa
clc
test
js
cmc
adc
inc
je
xchg
xchg
ds
sbb
shll
cltd
fcomps
cltd
inc
lods
xor
or
and
jge
outsl
xchg
sub
rorb
sbb
push
xchg
pop
cmc
cld
or
add
jmp
mov
push
xchg
aas
iret
push
add
out
lahf
push
cmp
out
sbb
mov
dec
mov
jge
insl
cmp
insl
sbb
nop
sbb
dec
mov
pop
ret
inc
iret
lock
cmp
idivl
push
or
aas
movsl
icebp
mov
movsl
imul
stc
jp
adc
cwtl
mov
call
aam
stc
xchg
pop
fidivrl
inc
cld
adc
gs
test
mov
pop
arpl
sbb
mov
pop
loop
pop
jae
jne
cmp
mov
stos
inc
int
pop
lret
hlt
lock
xor
push
pop
sbb
cmp
cwtl
icebp
push
movsb
inc
xor
fisubs
in
das
mov
fcompl
xor
std
inc
mov
cltd
pusha
xor
out
mov
pop
ss
xor
mov
sbb
mov
addr16
test
mulb
movsl
and
ret
xor
adc
iret
cli
repz
negb
and
xchg
mov
fistl
jmp
test
js
push
xor
movsb
pop
test
testl
pop
fwait
lcall
jmp
insb
mov
gs
mov
inc
fnstcw
leave
xor
cs
les
pop
ret
dec
sub
pop
mul
movsb
jecxz
in
pop
add
pop
inc
inc
jle
jle
loop
xchg
hlt
xchg
cld
mov
jmp
repnz
or
cmc
cmp
mov
cld
dec
xchg
aad
jae
mov
mov
dec
xorb
xor
ja
jnp
adc
xchg
test
jp
div
ret
sbb
push
test
mov
lret
jo
cmpxchg
ss
das
daa
pop
xchg
add
inc
sub
lcall
lret
pop
insl
or
sti
sub
mov
sbb
pop
insb
jecxz
sahf
cld
sub
js
and
jle
movsl
movl
in
ja
sub
enter
cmp
adc
in
inc
fbstp
push
sahf
mov
icebp
push
or
sub
mov
jg
add
jo
lds
xchg
shll
cmp
mov
or
fistl
pop
lret
sbb
cmc
jne
or
jnp
repnz
push
addb
mov
mov
push
or
fbld
inc
push
mov
movsb
repnz
xor
mov
pushf
cli
cmpsl
cwtl
test
adc
mov
insl
inc
jp
jbe
aaa
adc
fcom
push
mov
test
pop
mov
push
inc
jb
jbe
inc
std
cmp
lea
in
pop
mov
adcb
loop
jg
xchg
in
xor
mov
mov
mov
push
out
imul
ret
out
xchg
pop
push
or
push
or
int3
mov
js
xchg
jno
scas
in
mov
push
xchg
in
xor
stos
inc
sub
enter
cmpsl
inc
test
add
das
dec
adc
test
in
je
add
pop
test
adc
mov
test
jp
das
cmpsb
cmp
pop
int
cli
jnp
dec
lds
ds
testb
jmp
xor
or
mov
fadds
loope
cmpsl
fidivl
pop
cs
lcall
xor
stos
xchg
cltd
dec
or
push
cltd
xor
inc
pop
cs
or
cli
jns
lods
insl
sub
flds
bound
and
clc
or
jl
jge
xchg
es
pop
insl
pop
xor
pusha
pop
dec
dec
pushf
sbb
mov
mov
out
sahf
sbb
rcrl
push
in
sbbb
mov
scas
sub
xchg
ret
ret
xor
lods
inc
cltd
fdivs
or
mov
xchg
mov
or
fdivrs
movsb
cmp
adc
mov
ret
fwait
sub
push
push
lds
fdivrl
ror
mov
inc
popa
fisttpl
daa
cmpsb
xor
adc
xor
mov
jno
jne
jle
jbe
out
pop
jl
adc
xchg
mov
out
insl
add
rcll
test
or
push
lcall
sbb
and
movsl
pop
outsb
test
outsl
aad
outsb
hlt
out
inc
and
aam
fldl
rolb
jno
sbbb
mov
mov
daa
into
divb
iret
jo
cmp
je
adc
inc
outsb
sbb
xor
push
adc
jnp
cmpsb
imul
out
je
ret
adcl
cmp
adc
and
inc
push
add
mov
sub
adc
and
mov
pop
pop
out
call
sub
fwait
loopne
push
push
loope
fwait
dec
dec
mov
icebp
mov
xchg
lret
dec
mov
inc
aas
xchg
test
xchg
and
mov
sbb
or
faddl
dec
push
mov
lods
jecxz
test
mov
sub
sbb
or
push
pushf
cmc
jns
out
cltd
mov
inc
xlat
ljmp
dec
jg
sarb
out
popa
pop
jae
xor
lahf
out
mov
sub
cmp
mov
mov
psubsb
icebp
jmp
lret
xor
add
jne
or
pop
stc
dec
mov
cld
ljmp
cwtl
out
and
adc
mov
mov
push
aas
dec
sub
nop
mov
ljmp
sahf
fnstsw
dec
fcmovb
pop
mov
out
sbb
test
movsl
sbb
sub
and
insl
mov
dec
jg
loop
sub
stos
mov
xchg
imull
push
ret
adc
fidivrl
out
inc
in
dec
dec
inc
loop
fsub
cmpl
adc
lcall
out
jnp
repnz
dec
or
mov
imul
mov
push
and
mov
and
mov
jge
or
or
test
ljmp
out
test
sbb
arpl
sbb
sbb
nop
xchg
xor
adc
ret
adc
aam
std
xchg
push
int3
cli
cmp
fildll
dec
pop
pop
jp
pop
and
lahf
xor
add
mov
inc
pop
cmp
pop
adc
add
fsubrp
mov
jge
shlb
inc
push
adc
jae
std
mov
sti
inc
sti
mov
push
jb
scas
mov
mov
arpl
mov
inc
ficoml
dec
jecxz
lret
mov
xchg
sbb
cmp
jo
insl
dec
push
jnp
test
sbb
xchg
inc
add
fsub
pop
dec
popa
sub
inc
and
mov
jmp
cwtl
push
jmp
mov
or
sub
mov
cmp
idivl
ja
in
cmp
sub
dec
dec
mov
cmp
in
inc
inc
mov
cmp
jb
sub
add
xlat
push
jae
inc
ret
pop
div
test
jle
adc
add
movsl
fst
jbe
mov
aad
repnz
nop
inc
roll
push
xlat
cs
fstl
stos
les
add
bound
int
cld
jns
int
pop
pushf
bt
fcomps
xor
incb
or
push
mov
xor
jo
popa
int3
clc
and
mov
sti
xchg
jnp
scas
mov
lcall
test
pop
lahf
pop
test
push
movsb
js
out
dec
movsl
icebp
sub
or
adc
dec
mov
xor
xchg
sbb
sbb
insl
mov
hlt
mov
cmpsb
pop
or
mov
arpl
or
sbb
lock
lret
sub
xchg
cmp
fwait
jno
and
subl
xorl
sbb
std
les
shl
and
test
push
aas
sbb
add
test
mov
call
sti
pop
cmpsb
jns
sub
xor
ljmp
ds
pop
cltd
mov
fstl
push
fstl
push
jne
test
in
scas
icebp
mov
add
mov
divb
subb
push
sub
add
inc
mov
jae
mov
and
les
cmp
or
adc
sub
xchg
cmc
inc
mov
adc
imul
dec
push
dec
shl
jnp
popl
dec
dec
jp
divl
in
call
adc
or
std
cltd
xorl
xchg
cmp
sbb
cmc
mov
imul
shll
lret
xor
nop
xchg
fs
lret
add
cld
sbb
mov
and
neg
je
test
lahf
mov
addb
cmpsl
pop
mov
ss
lret
in
add
xlat
scas
mov
test
xchg
js
sub
mov
xor
enter
jo
jnp
call
and
clc
inc
push
sub
sbb
cld
lcall
in
decb
aam
fs
and
inc
movsl
nop
adc
negl
movsb
and
fisttpll
xlat
ds
jno
fucomi
scas
scas
xchg
push
xor
add
add
cmc
mov
fldpi
ret
ljmp
or
xor
arpl
pushf
es
dec
scas
cmp
ljmp
out
test
mov
fisubs
sbb
and
les
push
and
mov
std
add
mov
adc
inc
and
or
in
dec
movsb
lods
jmp
push
adc
cwtl
jne
and
jge
imul
pop
leave
jbe
push
mov
pop
sbb
stos
ret
lcall
sbb
iret
out
jno
jmp
dec
mov
or
cld
or
mov
jno
xor
mov
push
inc
xchg
pop
cwtl
push
cmp
xor
xchg
add
insb
out
in
inc
push
jbe
fneni(8087
ds
push
pop
scas
push
push
xchg
lds
cmp
mov
dec
mov
out
iret
data16
insb
inc
test
adc
jge
add
stos
dec
inc
push
inc
jecxz
std
xlat
ljmp
jmp
jl
xlat
adc
adc
dec
mov
into
fistps
mov
and
test
insl
negb
cmp
or
out
adc
in
cmpsb
dec
rorl
jae
push
mov
push
dec
test
xlat
lods
cmp
jnp
shll
ret
dec
push
sahf
jns
loope,pt
adc
add
orb
fidivs
out
push
lds
ja
pop
subb
aad
in
sub
xor
mov
arpl
jle
scas
mov
out
in
cmp
cltd
insl
pop
insb
sub
push
lret
mov
cmpsl
push
cli
mov
inc
hlt
mov
gs
rcll
ja
and
enter
pop
addr16
xor
jl
mov
inc
ficoms
mov
call
push
es
xor
xchg
jmp
push
pop
insl
sbb
js
xchg
push
pop
mov
lret
aaa
test
sbb
loope
movsb
sarl
bound
xchg
and
addb
or
dec
fs
adc
mov
xchg
aad
sbb
cmp
stos
and
push
fs
in
adc
pop
out
imul
mov
leave
push
faddl
adc
fcoml
push
lods
je
shl
mov
xchg
adc
inc
mov
push
test
add
fwait
xor
test
fcmovnb
stos
mov
mov
bound
add
push
dec
shll
ss
stos
sbb
push
inc
aaa
xor
xchg
adc
fnstenv
push
data16
pusha
aaa
jno
pop
mov
xchg
lret
call
mov
aaa
cwtl
addb
cmp
dec
in
inc
mov
pop
pop
hlt
xor
mov
mov
fists
push
call
xchg
xchg
push
push
pushf
inc
dec
dec
dec
aaa
fsubl
mov
repz
movsb
imul
sbb
sbb
outsb
pop
lock
cmp
pop
and
rclw
repz
aaa
into
js
and
insb
push
mov
rcrb
cmp
hlt
jmp
imul
cmp
enter
pop
sub
ss
imul
jecxz
mov
testl
enter
push
insl
jo
cmp
sbb
out
into
sbb
bound
fiadds
xchg
jecxz
sbb
scas
call
sub
mov
adc
add
jno
rcrb
lcall
push
adc
jmp
int
bound
in
push
insl
imul
jno
dec
and
dec
in
jo
inc
push
dec
in
lcall
push
call
xchg
add
rcrb
xor
mov
or
mov
xchg
xchg
in
inc
push
sbb
jbe
lret
mov
mov
sub
lret
push
popf
sub
lock
fisubrl
pop
pop
mulb
push
daa
cmp
lret
test
test
enter
or
stos
sub
xlat
mov
or
jb
xchg
jp
divl
pop
ret
aad
cmpsl
dec
lea
xlat
and
les
push
add
imul
insl
mov
in
int
fcomps
mov
outsl
mov
xchg
int3
fidivs
repz
into
ja
incl
fcmovb
shrb
add
mov
cmpsb
mov
dec
cmc
sahf
mov
mov
xorb
into
cmp
pop
ret
out
mov
xlat
test
jge
es
mov
dec
add
mov
cmc
lds
dec
cmp
bsr
ds
push
jmp
out
and
stc
jb
scas
mov
mov
addr16
ss
xchg
and
cmpsl
test
and
jb
loopne
sub
je
sbb
inc
cmc
push
sti
jbe
lahf
sarl
out
jnp
je
es
subb
ret
imul
out
aad
testb
jne
cmp
gs
pusha
insb
aaa
pop
lds
cmp
mov
dec
and
sti
sub
ss
out
js
es
cwtl
adcb
mov
cwtl
push
lret
or
gs
adc
or
mov
push
in
fstl
jno
dec
xor
int3
fs
mov
and
out
mov
xor
enter
shll
push
scas
fwait
lods
push
stos
or
fimull
jg
sbb
ljmp
xchg
add
mov
cmpsb
cwtl
pusha
or
and
push
pop
popa
arpl
iret
fstl
mov
cld
ljmp
cli
js
mov
stos
xchg
push
fsubl
lea
cmp
lea
testl
rcl
pop
pop
mov
lahf
dec
jecxz
imul
cmp
clc
adc
sbbb
sbb
incb
sbb
xchg
lock
mov
ret
mov
add
popa
mov
ljmp
fisttpl
into
cs
jae
jae
negb
dec
loop
adc
mov
inc
push
int3
fiadds
mov
test
sahf
sbb
xchg
push
mov
fstl
mov
shlb
sahf
repnz
cmpsl
push
cmp
pavgw
inc
mov
mov
dec
jge
mov
add
jo
push
pop
or
sahf
addb
lahf
cwtl
out
cmp
stc
insl
shufps
sahf
mov
sbb
inc
lret
cmc
push
mov
push
dec
cmp
cltd
dec
jl
popa
xchg
pop
xchg
adc
loope
sub
addl
subl
pop
shl
lea
mov
sti
cmp
pop
mov
dec
or
out
aam
adc
hlt
push
dec
rcrb
bnd
das
dec
mov
mov
shl
icebp
arpl
adc
jg
and
push
fwait
sbb
cmpsl
jp
cmp
inc
pushf
lods
in
dec
mov
shlb
push
and
js
pop
jne
cltd
mov
ror
loope
xchg
mov
sbb
fcmovne
fdiv
mov
push
dec
neg
jmp
stc
sbb
ret
out
cmp
pusha
fbld
testl
inc
daa
add
add
fidivrs
sbbl
shll
sbb
xchg
lods
mov
pop
arpl
mov
inc
xor
adc
jo
push
movsl
lahf
xchg
pop
jmp
push
jge
fs
push
cwtl
test
nop
rorl
notb
push
adc
xorl
cld
add
dec
dec
xor
gs
fs
pop
cmp
ss
dec
sbb
insb
jl
jo
cmp
or
jno
sti
push
jle
into
in
dec
cwtl
xchg
mov
push
addr16
lret
add
out
xchg
push
stos
inc
dec
xor
cltd
std
dec
nop
lret
mov
push
addr16
cmc
or
xor
pusha
rol
ret
std
xchg
fbld
mov
into
mov
in
push
xlat
pop
mov
out
scas
xchg
push
inc
jmp
push
fs
hlt
xchg
xor
mov
jle
repnz
aas
mov
clc
push
sbb
add
jl
sbb
into
gs
arpl
aaa
fsts
pop
jmp
xor
popl
sbb
imul
mov
nop
jo
test
cmp
lea
push
jecxz
scas
les
icebp
aam
sbb
int
orb
in
loopne
or
les
fdivl
jg
rcll
sub
das
add
xor
fwait
and
and
inc
in
inc
mov
lret
xor
loope
ja
sub
push
rorl
scas
call
mov
xchg
dec
push
push
imul
je
int3
jmp
stos
aaa
ja
add
enter
call
sbbl
lahf
sahf
call
adc
lret
xor
jmp
jge
outsb
ljmp
sti
fcomps
movsb
jmp
ljmp
cld
std
push
fbld
xchg
andl
mov
push
notb
sub
pop
jb
push
sub
je
push
dec
mov
ret
xchg
ds
mov
sbb
pop
mov
mov
mov
inc
fcmovbe
lods
add
ljmp
mov
xor
mov
jle
ret
mov
xor
push
mov
mov
sub
aaa
dec
int3
adc
cmp
insl
push
les
push
adc
pop
sarb
repnz
cmp
jmp
testl
xchg
xchg
sub
or
pop
cmc
aam
aas
xchg
adc
sbb
outsl
xor
shrl
pop
ret
cs
cmp
les
jmp
out
gs
in
jbe
imul
pop
repz
test
jbe
icebp
xchg
jns
jns
dec
test
dec
icebp
cmp
imul
out
pusha
in
add
cmp
and
sbb
out
add
outsl
add
fstp
jne
pop
jns
xor
adc
bound
notb
jle
cmp
inc
push
data16
dec
mov
pop
mov
cmp
mov
push
or
adc
jle
push
es
mov
mov
fistl
pushf
out
adc
sbb
xor
add
cs
ud2
and
les
js
mov
in
cld
mov
mov
inc
pop
repz
push
or
sbb
lods
dec
mov
inc
in
xor
pop
sti
push
cli
sarb
mov
cmp
push
outsl
jecxz
push
ja
or
hlt
lret
adc
ja
rcrb
add
out
sub
mov
loope
imul
testl
mov
ja
jne
orb
xchg
pop
lock
xchg
cmp
filds
fistpl
mov
stos
shrl
aaa
mov
pop
mov
cwtl
mov
add
sbb
mov
faddl
sbb
push
stos
mov
sub
addr16
sub
xchg
adc
iret
lock
or
cmpxchg
ds
daa
lea
or
test
mov
adc
popa
mov
addl
or
or
lods
xchg
hlt
mov
pop
cmp
std
cltd
jp
movsl
jl
adc
test
imull
cmp
pop
in
or
sti
pop
scas
scas
mov
mov
ja
mov
data16
push
or
push
add
mov
scas
add
jo
testl
fcompl
loop
push
jge
jle
jl
and
dec
pop
jmp
push
icebp
nop
enter
or
loopne
inc
xor
fucomp
insb
shll
lea
push
jg
cmpsb
cmp
cmp
rolb
cmp
shll
pop
and
and
insb
jle
andb
outsb
mov
dec
mov
mov
inc
pop
cmpsl
into
and
mov
into
jo
insb
scas
in
inc
pusha
int3
cli
in
scas
rclb
pop
mov
dec
mov
push
mov
fists
in
fwait
scas
loopne
mov
loopne
inc
repnz
jae
into
movsl
cmp
mov
xor
hlt
mov
loopne
jmp
jge
test
bound
mov
lea
inc
mov
xor
inc
ficoms
testl
xor
outsb
aam
push
add
jg
push
lret
mov
mov
and
mov
xchg
sbb
sbb
xchg
ja
mov
insl
add
adc
xchg
dec
pop
and
fwait
sti
or
mov
pop
in
add
pop
dec
jb
cmp
push
xchg
ret
dec
fnstenv
add
ljmp
scas
mov
fidivs
lds
mov
mov
jnp
pop
negb
ss
xor
mov
jle
push
cmp
inc
adc
lea
xor
inc
and
jae
mov
std
stos
pop
out
fisttpl
push
popl
mov
push
push
les
mov
insb
mov
inc
push
fcompl
sub
sub
adc
shlb
push
push
cltd
arpl
push
jno
icebp
bound
jno
xor
mov
adc
les
cltd
sub
ret
jle
test
enter
fldl
add
sbb
stos
insl
aam
pop
rclb
mov
mov
es
dec
je
mov
fwait
int3
fdivrp
popa
inc
in
popf
mov
into
lods
and
movsb
loopne
test
addl
lea
hlt
outsl
ljmp
test
xor
xchg
stc
and
les
cwtl
jecxz
mov
xchg
dec
lcall
mov
mov
push
cmp
jns
imul
add
dec
fdiv
imul
arpl
adc
sub
loope
and
fistpll
push
out
inc
xorl
xor
cmc
arpl
stos
and
adcl
lahf
or
dec
add
dec
mov
pop
jecxz
lahf
cltd
mov
loop
daa
rcrb
jae
outsb
test
mov
cltd
cmpsb
fldl
into
dec
aam
decl
sub
addr16
test
sub
push
shr
pop
aam
inc
push
sahf
push
add
cmp
mov
je
icebp
adc
push
popa
xorl
fidivs
xor
out
in
cmp
mov
xlat
xor
je
jne
push
lods
add
pushf
mov
in
idivl
lret
mov
push
pop
xor
sub
roll
push
or
sbb
or
fldcw
mov
in
shr
addb
dec
loopne
jle
ror
xchg
inc
stos
in
mov
push
cmpsl
arpl
insl
mov
insb
jnp
sbb
mov
aas
push
lock
lods
std
push
pop
push
pop
push
push
loope
mov
leave
jae
js
jge
lods
fsubrp
ror
test
xor
out
in
orb
push
jle
jns
cmpsb
mov
jl
sub
mov
mov
out
daa
sbb
xrelease
cmp
in
fstl
jge
push
adc
out
mov
es
lahf
mov
sti
mov
sbb
push
lret
sub
pop
in
std
cmp
xor
jg
cmp
daa
push
jecxz
add
mov
fadds
sbb
sbb
dec
push
adc
adc
adc
or
stos
in
jae
jge
mov
cmpb
stos
mov
and
shlb
ss
push
lds
or
dec
cmp
mov
xchg
rol
enter
dec
insl
cpuid
fstp
fnstenv
cli
pop
xor
mov
ljmp
xchg
mov
pop
inc
aas
inc
mov
fdivl
push
popf
inc
sub
inc
stc
adc
clc
xchg
mov
xorb
arpl
loop
scas
and
dec
pop
mov
mov
and
ljmp
jnp
push
sub
jnp
dec
fldenv
cmpb
pop
xchg
pushf
orb
push
xchg
cmp
sbb
mov
cld
gs
ljmp
xchg
fcoml
movsl
in
xchg
pusha
xor
push
pushf
imul
clc
inc
mov
fdivrl
mov
shrb
enter
sbb
sbb
mov
lea
jno
getsec
repnz
mov
mov
iret
shll
bound
adc
sub
movsl
push
push
mov
pop
int3
cmpsl
lods
dec
hlt
neg
push
shll
mov
loopne
test
repnz
sub
pop
jae
inc
cmp
jnp
pop
sbb
xchg
dec
inc
fimull
btr
loop
sarl
cmp
lcall
xor
add
push
adc
fdivrs
sbb
jnp
cli
test
pop
aam
rorb
sub
enter
xchg
loop
jbe
mov
push
je
stos
inc
push
cwtl
mov
xor
dec
mov
xchg
push
int3
popa
add
in
icebp
xor
dec
jns
ds
jns
insb
jbe
pop
andl
inc
cmpsl
cmp
adc
or
dec
jne
idivb
push
adc
pop
adcb
int3
outsb
add
pop
testl
jle
lcall
sbb
addr16
dec
sbb
xchg
movsl
shl
aas
cs
fsts
roll
inc
push
dec
push
cltd
in
jge
push
xlat
lret
aas
add
enter
fistps
dec
arpl
inc
push
out
gs
and
adc
dec
adc
roll
mov
cli
imul
scas
or
fdivp
movb
dec
mov
dec
sti
scas
jb
bound
insb
xchg
mov
add
cs
loop
xor
std
xchg
nop
out
dec
push
in
jne
mov
jae
inc
lods
test
icebp
mov
faddl
in
adc
pop
orb
lods
lds
mov
and
or
out
xchg
mov
pusha
add
daa
or
shrb
fidivs
cmp
rorl
mov
inc
test
sub
add
sti
push
orl
mov
push
daa
ljmp
inc
fs
popa
icebp
pop
sbb
sub
mov
cld
shll
dec
jl
pop
xchg
aas
sbb
or
andl
xlat
jmp
outsl
pop
popf
sub
mov
in
jp
aaa
fwait
xor
mov
movsb
int
inc
cs
push
mov
sub
mov
fdivrl
out
mov
hlt
push
mov
mov
fidivl
or
shll
jae
insl
xor
xchg
js
pushf
inc
outsb
mov
sub
add
cmp
cli
and
push
xor
cmp
aas
push
sahf
jnp
inc
jnp
movsl
dec
mov
mov
addr16
pop
mov
xor
rorb
test
scas
xor
shll
movsl
lret
cltd
cmp
or
adc
scas
xor
xorl
xchg
inc
jg
sti
cli
cmpsb
std
mov
jle
mov
adc
jns
and
mov
cmpsb
es
pop
mov
out
js
cmp
imul
in
sub
loopne
cmp
xorl
xor
adc
xchg
ret
cwtl
movsb
cmp
mov
sbb
shrb
cmp
xor
mov
in
test
mov
repz
rcr
pop
in
out
and
lods
mov
pop
adc
jae
mov
lods
in
mov
sbb
test
je
xor
sahf
stos
in
pop
int
cmp
cli
hlt
int3
add
jecxz
sub
mov
jl
pop
adc
xchg
push
cmp
rcr
faddl
xor
fwait
shl
jmp
cmpsb
adc
pop
dec
je
jle
mov
push
push
movsl
xchg
addr16
imul
mov
das
pop
icebp
lea
call
adc
into
test
rcl
sub
push
out
pop
out
mov
push
xchg
subb
sub
les
ret
sarb
inc
mov
mov
xchg
out
push
hlt
jp
push
mov
xchg
sub
or
fcmovnbe
out
out
pop
cmc
bound
aas
out
mov
insl
dec
fisttps
ss
loopne
cs
inc
add
cmp
jge
in
pop
lret
imulb
clc
mov
movsb
syscall
xchg
jmp
xor
das
shl
adc
int
scas
aas
jecxz
bnd
cmp
call
push
mov
iret
repnz
fstp
mull
sbb
stos
mov
and
sbb
dec
mov
xchg
fimuls
fiadds
data16
adc
lods
cmp
arpl
js
adcb
push
xorb
and
aam
ja
mov
pop
or
or
mov
call
inc
fisttpl
imul
sub
fildl
jl
les
cmp
mov
cmpb
xor
arpl
movsl
push
fistpl
adc
and
mov
add
stc
scas
xchg
or
ljmp
jmp
inc
das
or
mov
xor
cmp
mov
lods
imul
dec
pusha
xchg
cmp
std
xlat
movsl
and
xchg
ja
jmp
aaa
sbb
push
gs
jmp
lret
pop
ljmp
jo
in
mov
sbb
stos
mov
xor
mov
pop
mov
aaa
out
je
lea
into
mov
pop
stos
xchg
notl
adc
dec
aas
inc
testb
sbb
in
lods
cmp
je
shlb
shl
mov
addr16
ret
insl
xchg
mov
fimuls
and
pcmpgtd
insb
lret
jno
in
fnstcw
push
addr16
cld
sbb
mov
mov
cltd
sarl
sub
repnz
jmp
mov
pop
cmp
sub
pop
add
xchg
es
call
fstps
adcl
or
aam
addl
xchg
mov
xchg
lds
iret
ds
test
sbb
data16
test
outsl
jge
mov
xor
cmp
addr16
cmp
mov
inc
repnz
test
fiaddl
or
fstpt
dec
xor
pop
xchg
add
xor
pop
pop
call
in
mov
mov
decb
lods
jns
imul
mov
xor
mov
out
pop
jmp
insb
sbb
xor
ficoms
stc
inc
pop
scas
aas
movsl
data16
mov
loopne
jmp
add
mov
adc
sbb
ljmp
and
lea
xchg
add
mov
push
outsl
mov
bound
mov
into
mov
shl
jbe
insl
xchg
addr16
mov
pop
jl
repz
movsb
sahf
or
repz
scas
jno
popa
scas
jns
cmp
fisttpll
outsb
fbstp
iretw
fmuls
or
test
dec
sub
nop
inc
out
cmp
push
jecxz
lea
or
push
jmp
cmp
cmpsb
pop
cmp
add
out
add
fxch
mov
push
loopne
dec
sub
roll
out
add
push
inc
xlat
fisubs
nop
mov
mov
dec
or
dec
mov
stos
jne
sbb
xchg
sub
scas
ja
dec
call
or
sbb
outsl
movb
jmp
and
ret
aad
leave
testb
push
push
adc
ja
pop
push
fs
lods
lock
pop
mov
adc
in
sti
and
sub
sub
mov
sbb
loopne
stos
adc
pop
outsl
sbb
fnstcw
outsl
lods
std
sub
adc
xchg
clc
sahf
mov
loope
fcmovnu
jo
filds
pop
bound
mov
ljmp
icebp
insb
sub
in
ja
xor
jns
mov
test
push
out
and
pop
js
sub
pop
pop
sbb
jmp
outsb
push
mov
loope
scas
stos
xor
mov
xchg
jns
ja
test
jp
mov
bound
rdpmc
jb
mul
mov
fnsave
push
sbbb
mov
pushf
sbb
cmp
repz
sub
pop
push
jns
inc
cli
daa
mov
xchg
test
ja
in
xchg
push
cld
icebp
mov
add
sbb
sbb
add
insb
in
je
rclb
push
leave
test
pop
and
dec
sbb
loop
dec
adc
fs
outsb
xchg
pushf
sub
loope
cmp
das
cmp
int
ret
data16
repz
test
sarb
pop
cmp
push
and
fdivrs
pop
pop
cmpb
andb
adc
push
jbe
fs
pop
adc
out
repz
adc
pusha
push
test
shrb
incb
in
movsb
inc
ljmp
repnz
and
mov
xchg
insl
xor
pop
in
xchg
dec
arpl
data16
dec
mov
mov
out
imul
call
out
dec
jmp
js
push
stos
lods
sbb
les
iret
mov
stos
mov
pop
pop
mov
add
in
cmc
xchg
mov
sub
cmp
xor
in
mov
cmpsl
testb
cmp
dec
add
les
repz
aad
ja
jecxz
cmp
orb
mov
mov
aas
adc
dec
or
mov
lahf
repz
rcl
pop
popl
fstpl
lock
add
ds
out
ja
aad
test
cmp
dec
hlt
lret
pop
add
cmc
in
cmp
and
cmp
fwait
xorb
scas
inc
sbb
mov
rol
addr16
mov
lds
sbb
gs
jno
icebp
mov
mov
mov
add
pop
pop
scas
mov
testl
mov
xor
rcll
outsl
inc
mov
jno
aas
push
adc
das
sbb
add
mov
pop
fs
pop
xor
bound
push
pop
pushf
cmp
cli
or
nop
out
xchg
arpl
mov
imul
xor
cltd
and
into
ds
outsb
inc
mov
cli
mov
push
push
lods
sbb
dec
fstps
push
mov
cmp
push
xor
pop
jle
enter
mov
dec
clc
jne
les
fistps
jnp
pop
lret
mov
adc
int
mov
ss
inc
repz
inc
decl
ljmp
imul
sahf
and
sbb
mov
jmp
dec
add
stos
cmpb
sub
subl
cli
dec
xlat
inc
cwtl
scas
ret
scas
xor
jp
mov
xorb
push
mov
testb
ret
cld
xor
enter
aad
sub
sub
mov
movsl
movsl
je
popf
rol
pushf
das
cmp
ss
cwtl
nop
mov
xchg
xor
fstl
dec
xchg
sub
push
fnsave
loop
sbb
push
jo
mov
aad
sbb
dec
call
icebp
inc
sub
mov
xchg
xchg
add
arpl
pop
cmp
cmp
scas
and
fcoms
div
or
or
xchg
pop
jno
stos
xchg
sub
cld
adc
jle
or
push
dec
sar
and
js
jbe
test
out
cmc
xor
lea
and
frndint
adc
or
dec
push
jl
shl
scas
aad
push
inc
push
jns
test
shrl
int
mov
shll
ss
mov
add
or
stc
mov
fiadds
pop
mov
and
cmp
xchg
test
ja
cmp
mov
mov
jae
out
rolb
mov
xor
fs
insl
sub
loop
inc
sub
and
popf
bound
push
stos
push
xlat
ss
xchg
clc
xchg
cmp
repz
scas
xchg
mov
add
iret
lods
mov
pop
xchg
mov
movsl
cmp
jno
hlt
xchg
jle
in
or
pop
pushf
xor
push
jbe
push
jmp
push
sbb
lret
cld
stos
inc
adc
adc
inc
xor
xor
test
sbb
and
dec
push
cmp
mov
repz
loop
adc
imul
jns
in
mov
dec
test
ret
mov
cmpsl
in
sub
add
icebp
cli
mov
sub
lods
jbe
popf
stos
mov
cli
or
roll
pop
ds
mov
cmp
pop
in
sub
mov
test
aas
lock
mov
fistpll
and
pop
cmp
into
jbe
enter
int3
cli
mov
in
sbb
inc
cmp
subb
push
push
cmp
pop
and
in
cmp
pop
dec
sub
jmp
repnz
aaa
push
adc
mov
or
adc
inc
xor
dec
icebp
bound
iret
sbb
bound
out
test
int3
aaa
mov
push
push
mov
adc
rorb
int
mov
shlb
sbb
insb
lock
cltd
data16
pop
cmp
sahf
pop
jle
mov
jp
scas
add
subl
jecxz
test
xchg
ret
mov
loopne
sub
mov
stc
cltd
out
mov
mov
int3
pusha
imul
or
stc
jp
xchg
push
out
xchg
xchg
adc
sub
repnz
outsl
or
hlt
pop
pop
or
out
mov
loopne
pop
sbb
sbb
inc
cltd
cwtl
das
lret
bound
js
sub
stos
cltd
mov
out
aaa
pop
jecxz
adc
sub
push
push
out
pop
insb
and
adc
out
lea
xor
inc
xlat
loop
test
rorb
loop
sub
pop
jecxz
dec
dec
sub
in
adc
xchg
jne
mov
rorb
xor
and
fsts
lahf
xor
ret
adc
xor
dec
jge
jnp
dec
mov
push
inc
in
into
cs
ss
arpl
push
pusha
testl
sbbl
sti
pushf
dec
mov
fcmovb
iret
sub
or
push
xchg
mov
add
inc
insl
xchg
mov
dec
loope
add
inc
fwait
xor
cmpsb
les
push
cmc
bound
fld
mov
cmp
mov
or
xchg
and
jge
mov
hlt
mov
cmp
fsts
hlt
lods
adc
sbb
mov
out
rcrl
xorb
or
fcomps
in
push
xor
dec
fiadds
imull
test
or
cli
bnd
sub
sti
psubsb
mov
jle
pop
lcall
adc
jno
xor
cld
adc
dec
inc
dec
lods
or
push
mov
mov
mov
fs
orl
or
cmp
stos
inc
push
pop
ret
insl
mov
push
lock
mov
incl
push
ror
mov
fldenv
mov
and
or
adc
scas
movsb
sub
pop
sbb
sub
scas
and
xchg
mov
lcall
cwtl
stos
loopne
dec
cmpsb
pusha
or
or
inc
outsl
add
out
sub
jb
mov
jl
dec
std
dec
push
inc
int3
jmp
mov
mov
stos
push
add
call
mov
and
call
inc
push
xor
dec
cmpsb
adc
loop
mov
mov
dec
daa
pushf
or
pop
popf
sahf
mov
dec
mov
jno
mov
aad
mov
jbe
jno
sahf
nop
pop
xchg
orl
lds
jg
aas
hlt
xchg
sub
notb
ret
mov
dec
data16
sahf
mul
mov
popl
scas
pop
push
mov
jecxz
xchg
add
sbb
or
xlat
dec
rcll
mov
in
andl
push
cltd
cmp
cmp
sbb
fdivrl
bound
into
je
inc
pop
ljmp
out
cli
jne
lds
stos
jb
mov
mov
shlb
outsl
cmpsb
dec
mov
adc
add
mov
mov
cmp
xor
push
dec
pop
inc
loope
dec
adc
shlb
cmpsl
lret
mov
cs
mov
and
xchg
jnp
mov
es
insb
add
add
sbb
adc
inc
addr16
jmp
popa
stc
aad
rolb
scas
fstpl
test
dec
push
xchg
hlt
sti
mov
fldenv
jo
jmp
pop
sub
xchg
cmc
loopne
stos
dec
mov
mov
ss
mov
cmc
mov
ds
out
sub
stos
cmp
popa
jns
xor
xchg
mov
dec
out
mov
or
xor
mov
adc
fnstsw
or
jno
or
fcomi
shll
sbb
ja
pop
outsl
popf
repz
mov
mov
out
aas
jae
sbbb
push
ljmp
fisttpl
pushf
xchg
into
pop
je
shll
inc
xlat
shlb
jno
in
push
sbb
xchg
jle,pt
bnd
push
jne
dec
add
icebp
xor
aam
das
inc
cltd
outsl
sti
dec
add
ficoml
int
mov
or
cmp
test
or
sbb
cmp
adc
out
ljmp
mov
ret
push
add
out
outsb
adc
adc
test
imul
sub
es
hlt
dec
loope
and
cli
xchg
pop
lcall
stc
adc
adc
or
ret
jge
daa
lcall
inc
test
in
xchg
sbb
push
cmpsl
sub
addr16
add
repnz
sbbl
sti
xchg
mov
idivb
xchg
sahf
in
fnstenv
or
push
cmp
add
in
ficomps
fldl
push
cmp
and
int3
std
push
inc
fisttpl
outsb
fisubs
loop
fs
adc
or
xchg
sbb
and
iret
push
cwtl
js
inc
stos
loopne
push
iret
or
popa
in
mov
scas
add
or
and
sbb
and
or
push
and
mov
imul
mov
test
mov
sarl
inc
adc
pop
out
jae
movsbl
xchg
cmp
and
cmc
insb
stos
movsl
mov
adcb
sub
testb
rol
mov
sbb
sarl
repz
and
mov
xor
scas
aad
leave
sub
push
jbe
xor
jae
sarl
es
or
jo
inc
imul
mov
cld
orb
add
pop
jg
sub
cwtl
daa
jp
imul
fstps
or
sub
xor
or
sub
je
rclb
xor
fldl
es
and
lret
mov
push
push
fsubr
jge
xchg
ss
ret
dec
scas
out
bound
movsl
movsl
test
mov
mov
xchg
mov
idivb
daa
icebp
jns
or
iret
flds
scas
and
lea
and
dec
or
arpl
sub
movsb
adcb
push
mov
dec
cli
daa
lds
loop
xor
ret
repz
out
push
xchg
inc
and
cs
lock
and
xchg
jl
ljmp
push
inc
enter
cmp
lcall
mov
out
ljmp
sub
jp
cmp
daa
inc
adc
inc
adc
xchg
pushf
and
jmp
mov
fsubrp
fwait
testb
loope
sbb
call
rcl
arpl
or
fstpl
or
adc
cmp
push
xchg
rclb
sbb
mov
ret
loope
inc
adc
mov
call
cltd
shr
sar
sbb
xor
in
nop
imul
or
mov
jne
idivb
daa
and
xchg
push
inc
gs
mov
shld
adc
sub
pop
bound
test
push
fdivp
sub
nopl
lcall
inc
out
loop
outsl
aam
jb
jl
imul
sub
sbb
jo
xchg
mov
mov
cltd
pop
mov
insl
fnstsw
mov
mov
jg
rorl
ficoml
sbb
jnp
mov
out
push
cmpsb
cld
add
mov
and
int3
sbb
push
mov
fs
cmp
loope
inc
fnstcw
loope
or
mov
sti
or
fcmovnbe
hlt
mov
mov
xchg
dec
sub
inc
in
imul
mov
xchg
xor
push
nop
or
cltd
add
cmp
add
insl
mov
cmp
frstor
inc
cmp
sub
xor
mov
pop
xor
or
mov
leave
mov
stos
xor
loop
mov
sub
cmp
lea
xor
lret
das
insl
popf
xor
sub
rol
testb
cli
sub
cmc
pop
push
rcrl
int
inc
out
xor
jle
int3
sbb
out
mov
add
shl
inc
iret
flds
dec
add
stos
je
pop
daa
lret
popf
frstor
sbb
hlt
bound
mov
loopne
cmp
lret
inc
inc
inc
or
push
xor
push
lret
dec
cwtl
inc
lcall
xlat
push
icebp
and
aad
pop
or
std
es
adc
imul
adc
jno
pop
ljmp
stos
cmp
or
mov
push
fwait
aas
sbb
xor
ficoms
cs
ret
out
sub
jecxz
sbb
lret
add
pop
popf
mov
or
cmp
mov
movsl
clc
push
add
fildl
sub
mov
loopne
jbe
push
push
out
dec
shlb
in
imul
dec
nop
das
cli
dec
fs
movsb
dec
jnp
and
push
in
fwait
pop
cmc
test
or
fcoms
sub
cld
icebp
bound
xchg
adc
adc
and
push
mov
lret
in
mov
sbb
mov
rcrb
cmp
repz
cmp
mov
adc
xchg
fcomps
sub
jp
sti
jle
xchg
mov
ss
pop
xchg
call
daa
jp
sub
lahf
cmc
std
pop
xlat
lods
leave
int
popa
enter
pop
ljmp
icebp
lods
inc
sbb
dec
push
inc
xor
mov
arpl
and
push
xchg
fstpt
dec
mov
sbb
mov
push
lock
fmuls
jbe
adc
loopne
and
enter
mov
xor
insl
mov
in
cmp
imul
mov
adc
jns
dec
popf
pop
loop
jo
popf
mov
ds
push
test
out
mov
xchg
mov
daa
or
loopne
adcb
adc
ficomps
add
fs
in
xor
rolb
stos
push
cwtl
mov
jmp
lcall
imul
xor
pop
mov
add
or
cltd
popa
push
ficoml
adc
rcrl
adc
icebp
cmc
pop
inc
push
cmp
loop
inc
mov
fucomp
subl
push
mov
fldl
dec
pop
sti
mov
flds
push
cmpsb
push
daa
mov
mov
sub
push
in
pop
mov
icebp
lret
xchg
push
xor
in
insb
inc
insl
div
lods
sarl
mov
jnp
lods
jmp
aaa
into
popf
lods
int3
pop
repnz
outsb
enter
pop
mov
scas
out
dec
lods
aas
lods
jg
into
iret
popa
adc
mov
push
imul
mov
cltd
js
xchg
aad
idivb
mov
out
insb
add
xor
int
mov
pusha
add
push
sbb
stos
inc
xchg
mov
clc
bound
test
jge
addr16
dec
bound
adc
stc
xchg
flds
pushf
pop
test
push
mov
cmp
mov
lock
mov
xchg
cs
mov
movsb
mov
subb
add
jno
lods
sub
int3
leave
inc
scas
mov
loopne
mov
mov
sti
xchg
pushl
sbb
dec
test
and
pop
nop
mov
pop
int
mov
aaa
arpl
push
and
mov
clc
sub
mov
adc
pop
popf
fdivs
and
stc
jle
movsb
fdivrl
push
movsl
push
mov
jecxz
aas
loope
or
jbe
stos
insb
mov
popl
mov
push
gs
push
mov
cmp
clc
pop
pop
out
pop
test
jnp
cmp
xchg
xchg
gs
mov
loop
cs
cld
mov
loopne
lods
push
nop
les
fimull
or
push
mov
pop
xchg
mov
adc
movsl
cmp
loop
mov
sbb
pop
push
lret
jb
jge
inc
cmpsl
add
rcrl
lea
cmp
dec
mov
lcall
and
inc
xchg
mov
js
push
sbb
add
add
mov
push
data16
push
test
mov
mov
fistpll
rcll
hlt
mov
xor
jns
lcall
xor
ja
cmpsb
push
jns
mov
jne
and
lods
mov
fwait
fldt
jb
pop
movsb
sub
cmp
arpl
fstpl
aam
out
imul
dec
xchg
cmp
rclb
xorb
push
and
xchg
inc
push
lds
lods
inc
js
lret
pop
push
inc
mov
popa
inc
push
rcrl
dec
insl
ss
cmpsb
std
and
sub
cld
cmpsb
call
inc
xchg
js
lds
pop
rcll
fbstp
lret
jb
pop
push
xchg
mov
fists
add
xor
shrb
in
pop
push
mov
jge
inc
in
jno
or
ret
push
shll
psllw
jg
cmp
das
jmp
int
cmp
dec
adc
lret
add
es
push
sti
adc
jnp
jo
pop
sub
dec
sbb
or
clc
xchg
in
adc
xchg
subl
outsl
imull
inc
cmp
cmp
rolb
jae
inc
mov
mov
or
jne
icebp
ljmp
push
cmp
pop
mov
mov
or
out
les
xchg
xlat
es
dec
mov
out
inc
mov
lcall
pop
pop
sub
into
aas
push
sub
leave
dec
jno
fwait
mov
in
xor
xor
shl
jge
insb
jl
stos
lods
add
push
push
lods
or
cli
es
mov
int3
sbb
test
data16
cli
or
xlat
in
test
add
push
xor
pop
sub
pop
inc
scas
lret
adc
js
stos
gs
fidivrs
adc
test
lcall
pushf
jb
xor
cli
lods
pop
sub
cwtl
fstl
jle
push
xchg
xor
cltd
gs
fistpl
inc
movsb
pushf
mov
ljmp
clc
mov
jmp
adc
push
ret
sub
fimuls
js
add
arpl
mov
dec
xor
mov
sbb
mov
jmp
aas
mov
fcmove
xchg
inc
scas
inc
sahf
adc
lock
and
mov
loope
mov
ljmp
out
aam
fisttpl
rcr
aas
mov
rcr
nop
stos
jmp
je
jnp
add
repz
in
movsl
push
sbb
in
jge
repz
xchg
xchg
fsubr
mov
lea
shrl
insb
mov
ds
les
add
insl
mov
xlat
xchg
jns
out
in
ljmp
adc
mov
clc
cmp
cmpsb
push
and
in
lods
inc
xchg
cs
scas
mov
outsl
mov
out
cmc
popf
cmp
movsb
push
faddp
jmp
not
mov
mov
out
imul
push
outsb
mov
or
push
cmp
push
mov
mov
inc
in
pop
imul
fs
das
inc
xor
sub
mov
inc
out
aas
outsb
jge
enter
je
outsl
scas
int3
xor
cwtl
hlt
push
xchg
adcb
shl
jo
icebp
xchg
in
mov
imul
out
jp
sbb
aaa
psraw
and
xchg
test
jle
pop
icebp
mov
sub
push
jl
aam
xor
fdiv
lods
jp
fisubs
les
jmp
out
push
repz
xchg
and
pop
cmpsl
incb
movsl
adc
inc
sbb
xchg
and
xor
sbb
enter
xor
movsl
hlt
stos
jbe
sbb
lods
lods
cli
cwtl
pop
xlat
jg
add
pusha
or
hlt
pop
sub
jnp
jnp
push
pop
shlb
lahf
push
sub
or
out
imul
fnstenv
dec
aad
lock
jns
push
dec
pop
add
mov
pop
mov
sarl
std
dec
inc
rcrl
sub
cmp
fildl
imul
jecxz
in
cmp
iret
sbb
or
mov
pop
cmp
mov
or
rolb
orb
sbb
fnsave
mov
and
cmc
outsb
rolb
inc
inc
inc
cmc
push
loope
jl
fldt
movsb
jg
pop
pop
pushf
sub
sbb
and
push
popa
mov
jg
and
dec
test
loop
dec
out
test
pop
loope
in
test
ficomps
xchg
js
inc
stos
push
mov
int3
push
mov
popa
mov
sub
dec
sub
or
jl
push
cmp
xchg
jbe
pop
clc
sbb
jle
mov
inc
lahf
lock
push
lret
pcmpgtd
or
add
push
mov
mov
cmpsb
push
mov
ret
les
add
imul
cmp
iret
repnz
loop
nop
cmp
mov
shl
cmpsl
mov
and
and
aad
int
sti
push
add
mov
mov
and
loopne
push
in
or
dec
push
or
fs
das
sbb
cli
loope
stos
inc
add
xchg
xor
orl
add
lock
cltd
jno
pop
xchg
enter
sahf
jae
loopne
jae
jae
xlat
cwtl
jge
sbb
sbb
sbb
cmp
push
mov
lahf
shl
xchg
adc
push
jae
sbb
adc
mov
dec
sub
mov
jae
scas
and
lods
mov
adc
mov
pop
seto
jno
out
enter
test
orl
je
imul
notb
hlt
in
xchg
push
lret
adc
push
lcall
pop
out
push
inc
sbb
jnp
fbld
adc
cmpsb
xor
xor
rcr
inc
or
pop
inc
ljmp
enter
mov
mov
pushf
ljmp
repz
push
sub
xchg
add
int3
fbstp
fbstp
mov
mov
pop
push
xchg
sbb
lds
das
int3
sub
loop
in
shrb
je
mov
sub
jmp
push
dec
scas
call
rorl
leave
test
mov
cmp
pop
mov
adc
ss
int3
aaa
jae
in
jno
or
mov
jo
sbb
xchg
push
push
lods
aad
add
test
xchg
and
mov
fwait
sahf
dec
es
mov
adc
test
ss
sub
ja
movsl
jae
cmp
jns
out
ds
aas
into
shlb
push
and
loope
sub
jnp
and
and
mov
movsb
cmp
mull
sahf
jae
out
sti
es
and
fwait
xchg
mov
sahf
adc
push
or
xor
and
add
mov
sbb
nop
mov
push
xchg
movsl
xorb
sbbb
outsl
mov
pop
adc
jmp
loop
cltd
xor
lahf
aaa
into
iret
lock
cmp
push
jmp
mov
jb
fwait
movsl
int3
jecxz
mov
lahf
ss
repz
mov
into
xchg
add
cld
out
cmpsb
mov
push
mov
push
out
adc
pop
lretw
in
push
imulb
sub
pop
sbb
iret
xchg
ret
enter
iret
mov
xlat
cmp
xlat
outsb
insl
inc
out
add
dec
shrb
inc
pop
cmc
jbe
add
or
xor
shr
dec
repz
dec
dec
mov
aam
push
push
mov
mull
add
lods
lock
pop
pop
cmp
and
loopne
lahf
add
jno
adcb
push
sarb
fistpl
mov
xor
sub
mov
loopne
mov
mov
jle
jnp
divl
sbb
ja
sub
pusha
stos
sbb
aad
cmp
outsb
test
sub
or
mov
mov
xor
ret
pusha
cmovae
rorb
push
rcll
fistpll
cmpsb
adc
inc
xlat
dec
insl
int3
xorl
add
mov
out
adc
and
inc
xor
cmp
or
dec
dec
nop
scas
jnp
rolb
icebp
mov
and
call
test
cli
or
xor
adc
cmpsl
mov
lcall
sub
shrl
jo
leave
pop
icebp
in
xor
cmp
mov
dec
mov
ja,pn
xor
int3
push
mov
mov
in
jns
mov
test
xor
or
scas
mov
insb
je
mov
int3
bound
push
cld
push
pop
fiaddl
icebp
mov
mov
std
mov
sti
xchg
push
outsb
sub
push
sbb
pushf
notb
xchg
sub
shlb
add
jb
cmc
mov
loope
adc
jae
mov
cld
icebp
and
in
es
addr16
lret
push
mov
add
push
sub
fidivl
rcrl
stos
xchg
and
push
cmp
adc
xchg
fidivl
cmp
lods
int3
sbb
dec
rorl
xor
in
test
lahf
add
loope
or
lahf
orl
and
addr16
mov
loope
adc
fucompp
sbb
pop
jle
xor
outsb
mov
imul
mov
movsl
pusha
stos
push
lahf
fldt
lret
es
outsb
loope
mov
sub
cmpsl
add
mov
or
jnp
cmp
push
gs
add
push
adc
pop
scas
mov
inc
and
or
lret
jbe
cmc
and
cwtl
push
in
pop
stos
adc
sbb
test
cmp
lock
xor
xchg
adc
mov
out
out
shll
fcmovbe
inc
lret
mov
mov
rorb
cmp
jns
aam
movsb
sbb
inc
or
cmp
inc
push
frstor
and
cmp
or
and
pop
lds
sub
cltd
add
pop
xor
push
aaa
adc
call
and
inc
push
mov
inc
xchg
lods
pop
sbb
mov
mov
lock
jmp
int
js
cli
cmp
data16
loop
xchg
outsl
ljmp
mulb
sub
in
mov
out
and
push
or
sub
outsl
pusha
add
subb
pop
mov
cmp
lret
in
push
push
xchg
out
sahf
clc
mov
and
jmp
jmp
dec
arpl
cltd
pop
sbb
mov
mov
insl
insb
gs
or
fst
pushf
mov
sbb
mov
addr16
cmpsl
add
pusha
test
cmp
sbbb
movsb
cs
xchg
mov
cmpsb
dec
cmpsl
or
into
addr16
inc
in
and
mov
jmp
aas
cmp
inc
push
cmp
mov
jne
testb
test
mov
mov
xsha256
cmpsb
aad
push
jecxz
lret
mov
rolb
out
push
sbb
les
mov
dec
cli
mov
inc
addr16
cmp
or
mov
ss
rcl
in
cmc
xor
jmp
sbb
aad
mov
push
add
rorl
call
dec
loop
ret
outsl
outsl
mov
cmpl
lahf
sbbb
or
ljmp
in
jle
out
popa
sbb
icebp
into
dec
stc
or
pop
sub
jb
cmpsl
divl
repz
out
sub
lods
stc
cmp
dec
mov
frstor
daa
cmp
mov
mulb
mov
push
mov
cli
insb
xor
pusha
push
push
clc
or
push
xor
cmp
xchg
imul
ret
inc
ljmp
movsb
inc
push
or
mov
enter
popa
aas
jbe
ss
cmp
loope
movsl
mov
mov
cmpsb
cmp
adc
out
daa
push
lock
aaa
and
add
imul
xchg
adc
mov
add
cli
dec
inc
dec
pop
xchg
pusha
test
rcr
and
xchg
add
fildll
ss
fisubl
or
popa
mov
mov
pop
rorl
mov
das
sub
jbe
shlb
cmc
mov
scas
push
jp
push
pop
testl
fmul
call
push
cmp
pop
jge
adc
mov
inc
mov
mov
es
xorl
scas
out
cld
or
movb
mov
xchg
imul
xorl
sub
mov
xchg
test
add
lds
or
insb
int
outsl
aam
xchg
ret
outsl
nop
pop
divb
pop
sbb
sahf
fnstenv
pop
ja
cmpsl
and
dec
sub
jno
decb
xchg
outsl
mov
xor
push
xor
repnz
or
in
inc
xor
push
pop
pop
jmp
inc
fadd
or
mov
jae
sbb
mov
iret
pop
push
insl
mov
flds
dec
jle
mov
in
leave
cmp
ds
or
mov
test
out
jg
push
xchg
jb
mov
jns
mov
in
mov
stos
jne
inc
mov
dec
jno
xchg
sbb
sub
es
add
fists
shll
movsl
hlt
mov
testb
push
leave
lcall
sbbl
and
ret
imul
jl
mov
hlt
mov
cmp
popf
pusha
dec
mov
mov
xlat
inc
roll
sahf
mov
mov
popa
or
xchg
aad
in
xchg
outsb
xchg
pop
lods
fs
sbb
test
loop
inc
out
jb
cmpl
mov
sbb
sub
jp
clc
jno
pop
imul
push
cltd
stc
cmpsb
and
pop
fisubs
in
mov
test
cli
cmp
push
fidivl
ret
add
mov
lret
fidivrl
mov
push
imul
lret
psrld
scas
into
enter
xchg
pop
xor
cltd
and
shlb
jle
in
and
mov
test
mov
mov
gs
cmpsb
in
xlat
push
sti
mov
xchg
mov
mov
das
aad
testb
cmp
jno
and
inc
decb
or
cld
out
movhps
push
xchg
jae
mov
test
push
icebp
fimull
xchg
cmpsl
jp
pop
cmp
or
mov
adc
cmp
jg
gs
dec
test
rclb
jg
dec
xlat
mov
push
fldcw
inc
loope
aas
into
out
stos
jg
rolb
sbb
mov
lock
jb
sub
jns
push
addb
mov
sbb
mov
lea
add
inc
lods
and
fs
inc
push
mul
adc
push
add
jne
je
inc
mov
scas
scas
sub
or
push
insl
xchg
adc
push
clc
js
js
rclb
popf
mov
cmp
mov
ficoms
xchg
cld
lods
sarl
sub
inc
cs
inc
dec
dec
inc
rorb
insl
lret
cmp
jmp
ja
fmull
shr
stc
cltd
and
fs
out
mov
cmc
pop
adcb
das
sti
pop
test
movl
in
add
insb
add
fsubs
shr
cmp
mov
mov
arpl
std
pop
jb
in
mov
jp
int3
xor
inc
in
mov
sbb
cmpsl
jmp
mov
add
xor
mov
push
mov
test
mov
test
leave
hlt
push
sub
sbb
or
xor
mov
imul
popf
ds
mov
xchg
pop
cmp
aas
dec
inc
icebp
fildl
cli
cmpsb
sar
add
xor
cs
data16
scas
sub
lcall
sbb
xor
ficoms
sbb
add
push
add
push
idivl
sbbl
test
mov
adc
pop
mov
out
push
rcll
mov
mov
pop
mov
stos
cmp
push
sub
fisubs
mov
fidivl
adc
jg
pop
jmp
push
mov
adc
hlt
or
adc
stos
jnp
lods
jp
sbb
or
cltd
adc
push
jae
loop
pop
fcomps
or
aas
sahf
popa
jnp
cwtl
pusha
test
mov
dec
or
cmpsb
xchg
push
out
add
and
mov
inc
pop
mov
in
pusha
inc
adc
jbe
lret
push
cwtl
gs
or
mov
xlat
xor
ud1
jle
jmp
cs
clc
stos
sub
out
nop
pop
or
rorl
xchg
iret
subl
stos
in
cs
mov
xchg
cmp
mov
lcall
push
pop
pop
movl
das
dec
loop
pop
xchg
lcall
das
push
jnp
dec
idivb
loop
fldt
dec
bound
rcrb
scas
mov
adc
cmp
movsb
cmp
repz
jmp
sbb
jb
cmp
add
stc
nop
add
fnsave
popa
add
or
push
jo
and
stc
pusha
je
test
mov
xchg
mov
out
fs
lret
push
xor
jb
cmp
push
cmp
mov
inc
je
mov
lret
enter
movb
dec
adc
cmp
jae
dec
mov
fildl
xchg
push
jmp
xchg
insl
sub
push
add
int
jne
jmp
inc
adc
jmp
data16
stos
add
cwtl
adc
scas
sbb
cli
shll
rcrb
pop
popa
fldcw
add
inc
in
sarb
xor
movsl
cmc
xchg
sbb
adc
pop
cmp
mov
mov
stos
rcrl
lret
push
push
test
shrb
push
icebp
cmpsb
mov
adcl
sub
pop
inc
gs
aad
ss
push
scas
test
fdivp
jmp
pop
mov
or
sub
pop
and
test
orb
dec
dec
jnp
jbe
aaa
pop
lods
push
leave
jmp
pop
dec
loopne
into
cmp
movlps
insb
clc
dec
aad
push
xchg
adc
and
leave
leave
test
decb
mov
sbb
test
je
push
outsb
test
sbb
pop
stos
mov
mov
cmpsb
sbb
sarl
mov
pop
sti
mov
sbb
inc
dec
out
ss
in
insl
push
outsl
repz
jl
incb
rcrb
fs
xor
cmpsl
fidivrs
ss
rclb
nop
mov
inc
lods
ja
fisubs
pop
jns
xchg
add
mov
dec
push
in
pop
sahf
sbb
push
out
sar
and
inc
or
sbb
call
xor
popa
mov
push
iret
gs
xchg
and
int
mov
imul
or
xchg
mov
addl
mov
test
les
sarl
fadds
pop
dec
jp
jle
fidivrs
aas
adc
pop
roll
pop
arpl
insb
and
fisubrs
mov
sbb
cwtl
movsl
cmc
dec
cli
insl
inc
and
inc
mov
in
jg
lods
cmpsb
cmp
test
mov
jmp
cmp
fwait
or
and
xor
jns
adc
out
shrl
push
mov
bnd
stos
mov
mov
mov
aaa
mov
ret
sub
mov
pop
nop
loop
or
adc
sbb
inc
adcb
and
xchg
fdivl
or
aad
dec
repnz
mov
shl
push
out
cmp
cwtl
std
addb
not
repnz
rcrl
pop
cltd
jmp
adc
or
imulb
xchg
cltd
sbb
push
add
rcrl
pusha
adc
push
xchg
lahf
lods
sahf
or
dec
adc
dec
push
fwait
call
xor
add
xor
push
push
ror
int3
pop
xchg
and
ja
lret
pusha
dec
out
adcb
scas
sti
jl
adc
push
cwtl
dec
inc
addr16
out
movsb
xchg
fildll
call
push
xchg
scas
cltd
iret
mov
outsl
cmc
bound
mov
inc
gs
push
add
das
push
scas
inc
jb
stos
idivb
push
mov
jns
or
xchg
jp
lcall
fsubrs
data16
pop
stos
mov
pop
cmp
cmp
cmp
das
divl
lret
jle
lods
repnz
pop
sbb
cmpsl
mov
popf
cwtl
das
cmovnp
pop
stos
cmpsl
adcb
pop
jp
sub
push
leave
mov
xchg
cmpsl
push
sub
pop
cmp
out
dec
ds
cmp
mov
dec
push
test
out
stos
stos
fwait
xor
repnz
xor
adc
aad
stos
add
mov
pop
dec
add
mov
les
add
xchg
adc
stos
sarl
addr16
ss
scas
and
fyl2x
xor
xchg
insb
sbb
incb
popf
inc
imul
push
dec
cmp
mov
push
mov
inc
cmp
data16
jg
je
aam
sbbl
push
ret
mov
addr16
push
aad
ds
mov
xchg
inc
daa
sahf
in
adc
stos
mov
test
jbe
lahf
fisttps
ljmp
pushl
pop
imul
add
test
pop
shlb
pop
add
mov
dec
dec
or
outsl
mov
jne
je
mov
stos
das
inc
stos
pusha
push
xor
cld
push
push
je
cmp
fdivl
mov
leave
test
adc
ret
test
pop
jp
leave
bound
pop
adc
mov
repnz
mov
and
lods
or
lock
loop
pop
mov
adc
xchg
mov
sub
dec
adc
in
sbb
xchg
mov
int
cmp
cmp
pop
cwtl
xor
out
and
jmp
dec
add
sub
add
popf
sub
clc
jl
adc
xor
in
jbe
fimuls
adc
cmp
cmp
fs
xor
imul
xor
mull
lahf
mov
sbb
fmul
leave
loope
in
pop
adc
into
xchg
xor
in
push
lret
aad
orb
popa
cld
xchg
stos
or
xor
mov
jae
or
aam
and
adc
repnz
push
mov
sti
fwait
nop
jb
aam
pop
jmp
push
andl
xor
jmp
jbe
aaa
dec
inc
pop
mov
pop
fistpll
cwtl
sbb
xchg
add
insl
add
or
in
or
sbb
imul
pop
aam
rcpps
sbb
cmp
xchg
and
lahf
sbb
shl
lahf
mov
push
ds
icebp
dec
mov
loop
ds
xlat
inc
insl
add
je
sti
in
mov
inc
or
pop
mov
or
push
xor
inc
loopne
and
inc
push
fstps
popa
inc
lret
mov
jno
inc
xor
mov
sub
sub
adc
and
scas
mov
aad
jp
aam
negb
dec
push
aam
ja
ja
fisttps
mov
ds
pop
push
push
adc
xchg
cmp
roll
loopne
jnp
sahf
test
lock
ljmp
jmp
sbb
scas
jg
repnz
cs
inc
mov
jne
iret
pop
int
out
jmp
xor
cmp
sbb
int
mov
xchg
mov
movsl
lret
lea
call
add
mov
test
mov
fldln2
fdivs
insb
inc
inc
cmpsb
xchg
pushf
imul
call
inc
test
or
stos
jg
add
mov
xchg
jp
and
add
in
mov
mov
dec
push
jno
push
loope
inc
gs
dec
mov
or
lcall
sbb
mov
mov
add
push
cld
cld
sbb
sahf
adc
xchg
jno
aas
in
subl
sbb
xor
test
loopne
shlb
push
jnp
jg
jecxz
mov
rclb
adc
mov
pop
loop
jg
shlb
ds
push
add
fisubl
jp
aaa
arpl
in
xor
loope
and
nop
xchg
inc
lgs
dec
and
rcll
icebp
xchg
cmp
jle
test
add
mov
lcall
popa
jmp
adc
mov
test
adc
push
jns
ja
lret
addr16
sbbl
push
lds
push
pop
mov
notl
jl
sub
test
jne
mov
sbb
pop
xchg
mov
sub
push
jp
movsb
sbb
pop
adc
lret
enter
xchg
and
movsl
fsub
jnp
inc
out
test
rclb
pop
out
push
arpl
mov
or
jns
mov
add
dec
mov
jge
cmpsl
xor
push
push
mov
mov
and
jb
dec
sti
xchg
inc
mov
std
and
outsb
pop
dec
addr16
cmp
addr16
jbe
insl
sbb
insl
fcmove
arpl
mov
shrb
push
mov
cmp
stos
inc
push
jmp
push
jmp
test
xchg
clc
daa
mov
xchg
push
ds
or
pusha
jge
dec
in
loopne
jnp
inc
mov
cmp
call
bound
rcrl
popa
clc
pop
ret
mov
and
add
and
adc
mov
xchg
cli
aas
mov
cs
nop
xchg
add
in
subl
lret
or
cmc
cmpsb
fdivrl
rorb
shlb
pop
call
adc
stos
jb
sbb
xchg
add
mov
mov
inc
lods
cld
and
jnp
lods
jmp
out
jp
mov
loope
jne
push
adc
xchg
cld
aad
lret
bound
and
movsl
push
cli
sub
rclb
cmp
lahf
xor
cltd
mov
js
cmp
mov
jno
jne
dec
xor
push
inc
push
fcmovu
inc
add
outsl
daa
cwtl
or
pop
xor
or
loope
pusha
mov
push
or
or
in
xchg
testl
pusha
or
push
bound
out
pop
insb
lret
sub
xchg
loope
xor
push
orb
cmp
adc
movsl
jno
or
dec
std
push
lods
arpl
pop
mov
daa
ljmp
cmpsl
sti
mov
jl
adc
jl
sub
lret
pop
lds
mov
fs
mov
movsl
inc
test
dec
loope
fstps
xchg
fldt
push
xor
decb
outsb
sub
jnp
test
jns
dec
xchg
stos
jg
shlb
fadds
mov
in
jns
into
pop
test
and
mov
sbb
mov
out
jmp
ljmp
cmp
imul
jae
xor
ret
stos
lds
and
rorl
loopne
ss
mov
pop
xchg
sbb
clc
orl
push
cmp
sub
in
test
jp
lret
imul
push
jmp
ds
cltd
xor
sbb
mov
fwait
xor
arpl
fucomip
jo
or
sub
incl
xchg
xchg
push
aaa
aas
notl
jno
stc
or
scas
adc
imull
jg
addr16
aas
stc
nop
jno
imul
sbb
call
or
push
in
movsb
mov
jae
mulb
and
psllw
mov
jnp
pop
mov
stos
and
in
aam
inc
or
hlt
sub
lods
ficomps
pop
icebp
test
jae
stos
cmpsl
mov
pop
imul
test
dec
pop
inc
jbe
add
fnsave
js
frstor
fmuls
jmp
mov
loop
scas
pop
xor
xchg
bound
adc
ds
cmp
fnstsw
mov
aad
mov
sar
movzbl
and
addr16
fnsave
push
mov
add
shrl
ja
jnp
ja
pop
push
push
out
jb
dec
fiaddl
dec
sub
dec
daa
aaa
push
cmp
in
mov
imul
push
and
mov
mov
push
das
add
ret
out
add
aam
pop
push
and
add
add
cmpsb
mov
lret
push
pop
push
out
fisubl
jg
jnp
icebp
iret
lea
les
stos
add
mov
int
pop
mov
ret
mov
inc
inc
fcoms
lret
test
test
mov
aaa
les
scas
add
cli
out
out
test
and
jb
adc
mov
push
add
in
push
hlt
sub
repz
push
loop
ja
ret
out
lds
mov
sbb
cmp
add
inc
inc
xchg
xorl
inc
cmc
mov
nop
mov
adc
jg
clc
stos
jge
pop
int
mov
test
aad
loopne
mov
lods
sub
idivl
xor
cmp
sub
aam
fnstsw
push
ljmp
or
mov
dec
jnp
loop
repz
ficoml
cmp
push
pop
lcall
sahf
lods
imul
ljmp
aas
cmp
ds
pop
dec
sbb
lcall
mov
daa
into
adc
lock
jge
lods
xor
decb
mov
mov
sbb
jne
test
mov
adc
jne
inc
pop
cwtl
dec
cmp
or
mov
push
mov
push
jmp
pop
sub
pop
mov
sbb
mov
jno
mov
out
cmp
mov
jmp
insb
jle
fwait
leave
fnstcw
push
cmpsb
cmp
mov
adc
mov
xchg
sub
insb
xor
outsl
push
ss
cmp
in
in
enter
mov
dec
pop
ljmp
push
jmp
mov
jb
add
push
jmp
xchg
mov
fucomi
xchg
dec
fdivl
jo
das
daa
push
loopne
mov
sub
xchg
pop
push
out
pop
call
dec
and
cmp
mov
in
and
push
or
cmpsl
sbb
jns
xchg
inc
lods
inc
jne
sub
fmuls
imul
cmp
out
sub
cmovnp
out
das
inc
adc
mov
int3
gs
es
mov
in
ljmp
xchg
mov
jo
mov
test
out
mov
cmp
subl
ret
jecxz
sub
adc
imul
push
aas
ret
cwtl
pop
dec
adc
fimull
int
push
fs
fwait
push
cld
mov
push
jno
icebp
mov
fdivrs
dec
pushf
nop
jecxz
dec
and
cwtl
shrb
push
jns
int
fs
jecxz
jno
adc
xor
insb
push
les
jns
jg
add
rcll
gs
mov
or
jnp
mov
jo
xor
inc
inc
mov
cmp
cld
pop
sbb
int3
and
mov
sbb
sbb
std
pop
pop
dec
movsb
movsl
adc
jne
push
mov
xlat
add
data16
push
jne
popf
or
inc
or
pusha
adc
cmpsb
gs
call
ds
loopne
ja
fucomp
movsb
cmp
inc
in
xor
jb
jmp
xor
shlb
jle
push
pop
sarl
and
leave
mov
cmpsb
add
and
insb
xor
pop
jns
stos
test
push
movzbl
sbb
jp
xor
cmpsl
loop
rcll
jecxz
rcrl
push
inc
xchg
rcll
cld
lods
cwtl
test
aaa
sbb
int
inc
or
xchg
xor
lds
loopne
notb
adc
notl
xchg
mov
jle
cmpsl
pop
popa
add
inc
xchg
jecxz
inc
push
ja
negl
cmp
xchg
stos
and
pop
mov
cmpsb
cltd
out
leave
in
pop
cmc
mov
pushf
movsb
jmp
mov
pushf
imulb
inc
sub
rorb
sub
and
xor
popa
ret
jne
sub
dec
jne
sub
and
push
ljmp
orb
inc
fidivrs
rcrb
loop
hlt
mov
fidivs
dec
imul
or
lea
mov
mov
xor
test
dec
cmp
arpl
xchg
orl
outsl
mov
fdivrl
cld
push
xor
gs
roll
leave
fs
sub
in
xchg
pop
repnz
test
sub
cs
out
nop
mov
dec
xchg
mov
pop
jecxz
bound
jp
pop
sub
pop
dec
pop
stos
aad
xor
add
stos
jp
loop
aaa
leave
pop
cmpsl
bound
imul
adc
mov
insb
gs
add
or
and
clc
loope
icebp
xchg
lods
add
mov
jge,pt
jecxz
xchg
mov
lock
xchg
pop
mov
lock
xor
push
lds
or
arpl
enter
jl
pop
clc
hlt
mov
xchg
pusha
inc
icebp
xchg
dec
mov
mov
ficomps
inc
lods
xchg
addb
faddl
fs
push
sarb
or
adc
dec
add
lods
subl
sbb
xor
mov
idivb
scas
mov
lret
sbb
cmp
pusha
and
pop
repnz
add
faddl
cmc
adc
dec
fadds
leave
pop
in
shl
nop
jnp
js
add
sarl
arpl
or
iret
ss
mov
xchg
inc
pusha
mov
xchg
mov
lret
mov
inc
cmp
and
ds
ret
sub
lods
xchg
mov
add
sub
mov
inc
push
not
ret
xor
js
lods
popa
sub
int3
loopne
mov
jecxz
sub
loopne
das
stos
jmp
mov
cmpsb
and
push
pop
mov
xor
mov
outsl
push
rcrb
dec
nop
push
push
les
jg
ficoms
push
mov
push
pusha
aaa
test
inc
sub
xchg
repnz
lods
xchg
adc
adcl
pop
aas
push
sbb
xchg
cwtl
fcom
popa
into
push
sbb
xor
mov
mov
ss
jecxz
test
and
sub
or
popa
xor
or
jne
fnstcw
je
cmp
out
hlt
xor
ljmp
movsb
iret
sarl
popf
mov
lahf
dec
or
shll
xor
aad
int
sar
or
int
pop
jge
mov
jmp
xchg
jle
ljmp
and
insl
add
inc
xchg
mov
dec
fnstenv
stos
dec
add
out
push
inc
lods
sub
sub
mov
int3
cltd
out
push
ds
xchg
insb
and
mov
movsb
mov
dec
fistl
scas
add
divl
and
ud2
or
jmp
mov
ja
mov
loope
jo
addb
in
in
mov
ja
mov
out
iret
xor
push
and
iret
inc
or
jle
movsb
cmp
xchg
jl
aad
pop
xchg
mov
pop
push
jne
inc
jg
sti
lock
aaa
cmp
mov
dec
pop
push
out
in
out
insl
mov
in
sub
sti
xchg
test
or
test
std
mov
cmp
faddp
shrb
pop
icebp
mov
ret
js
pop
pop
push
or
mov
fcomps
xor
dec
pop
xor
push
loopne
flds
and
and
dec
fs
and
lods
das
add
xor
dec
pop
inc
pop
xlat
sarl
unpckhps
out
test
xchg
xor
xlat
sbb
or
xor
mov
sbb
stos
dec
cs
ret
repz
mov
inc
sub
ficoms
push
pop
sbb
fstpt
dec
nop
stos
ja
dec
mov
pop
call
inc
mov
cmp
add
mov
mov
loopne
in
pop
sub
add
mov
lahf
call
sbb
sahf
push
cli
cli
mov
mov
aad
adc
mov
sbb
jb
inc
sub
cmpb
cmpsl
sbb
mov
or
shlb
cmp
cmp
repz
or
lcall
stc
popa
sbb
xor
mov
jnp
mov
xchg
push
push
fldt
adc
push
pop
bnd
stos
sub
xor
jno
lret
movsb
ja
cmpb
push
mov
jne
rorl
fwait
pop
in
rcll
mov
lcall
ljmp
pop
mov
jbe
ja
pop
sbb
inc
lods
push
rcll
out
inc
neg
negl
add
cmc
mov
mov
add
push
push
icebp
addb
popa
or
or
or
cmp
xchg
add
pop
test
int3
movd
dec
push
popf
xchg
lods
mov
jnp
push
pop
ficoms
sub
pop
adc
into
pop
jne
lds
fldcw
mov
mov
push
je
ror
and
xor
push
add
aas
adc
inc
fnstcw
imul
and
or
cli
mov
adc
sbb
pusha
adc
xor
cmp
add
call
sub
or
adc
jo
mov
adc
jo
inc
dec
out
push
mov
mov
je
xor
add
mov
movsb
sbb
leave
fldenv
xchg
pop
ret
pop
lock
in
movsl
mov
mov
arpl
cmp
pop
call
dec
mov
sarb
sbb
and
and
fldcw
xchg
xchg
pop
data16
lret
out
int
fildll
push
xchg
pop
xor
jle
test
rcrl
add
push
int3
sbbb
sub
mov
push
and
xor
push
sbb
inc
sti
inc
js
cwtl
mov
dec
inc
adc
sti
xor
mov
daa
cmp
inc
lods
in
dec
mov
mov
push
xor
jns
enter
jp
inc
push
jmp
fisttps
scas
xchg
notl
pop
sbb
mov
cs
arpl
dec
and
xor
ja
cmp
cmp
int3
lret
cmp
iret
addl
rolb
lock
in
push
cli
les
push
xor
pusha
int3
mov
outsb
into
mov
lea
or
inc
fisubs
mov
or
mov
xchg
addb
add
fmull
movsb
fimuls
out
xor
inc
jmp
jmp
js
jge
jg
sub
mov
xor
xor
jp
popf
movb
stc
adc
and
jo
pop
xchg
adc
int
add
fiadds
inc
test
xchg
mov
sub
dec
add
call
inc
jmp
jb
pop
xchg
mov
or
adc
clc
scas
inc
sub
mov
sbb
testl
inc
into
xor
cmpsl
cld
ror
cmc
orl
push
xchg
ret
call
outsb
ret
idivl
pop
cmpsb
pop
cmp
push
ljmp
jno
inc
out
jmp
jnp
inc
fsubs
ret
jle
mov
pop
loopne
xor
in
xchg
inc
int
sbb
dec
dec
loopne
bound
pop
andl
das
cwtl
cmp
dec
push
xor
fiaddl
je
mov
test
cmp
xchg
sub
mov
popa
cmpsl
dec
iret
out
lahf
push
jae
test
jae
fmuls
mov
nop
cmp
xor
lds
jmp
out
cltd
sahf
js
sub
inc
fsts
ss
inc
xor
push
andl
in
sahf
incl
push
xor
mov
mov
sarb
lea
push
imul
sbb
xchg
fistpl
les
negb
fwait
in
pop
hlt
adc
imul
pop
ficoms
insl
xchg
pop
cltd
jge
loop
cmp
aas
popf
push
cmpl
push
lahf
push
push
jnp
mov
icebp
aad
shrl
jnp
cmp
cmp
fdiv
roll
bndstx
mov
loope
or
cmpsb
lock
sti
add
xor
mov
enter
mov
lcall
in
imul
aam
test
push
sub
imul
add
push
cmp
out
out
jnp
jp
pcmpeqb
aas
call
scas
out
idiv
movsb
mov
pusha
cli
ljmp
or
inc
in
cld
jae
cs
insl
ja
sub
insl
stos
in
enter
push
incb
mov
ss
push
inc
hlt
imul
push
test
sbb
and
repnz
inc
out
cmp
fs
add
xor
sti
mov
push
jbe
push
je
std
pop
stc
shll
aaa
cmp
and
fsub
insl
std
add
xchg
fadds
orl
in
aad
js
push
xor
scas
call
divl
lahf
js
lds
test
call
popa
repz
cmp
iret
cmp
push
inc
scas
mov
je
jne
xchg
mov
mov
cmp
test
mov
lods
inc
int3
adc
test
in
ss
push
rcll
mov
jge
pop
cmp
iret
mov
mov
push
loopne
nop
or
add
cmp
es
add
fwait
sbb
or
dec
dec
insb
sbb
daa
xor
xor
mov
in
jnp
mov
jle
pusha
jmp
fmull
in
push
sbb
mov
test
inc
out
fnsave
mov
aas
test
xor
shl
add
hlt
jge
sub
ds
pop
xchg
outsb
loope
cs
pop
testb
fwait
mov
dec
jne
and
leave
jb
mov
addr16
mov
jns
push
lds
cmpsl
dec
cmpsb
sub
pop
ja
and
xchg
cmpsb
hlt
inc
pop
mov
xchg
push
push
push
pop
dec
clc
cmpsl
jge
adc
mov
inc
jmp
add
test
popa
sarl
popa
xor
jmp
orl
fs
scas
jp
xchg
pxor
ja
test
push
idivl
jae
jae
pop
pushf
cmp
or
cmp
fidivrs
aad
inc
ss
jg
xlat
mov
mov
sbb
cmc
mov
mov
mov
je
test
xchg
je
adcl
dec
dec
movsb
and
jp
mov
push
fs
loope
out
mov
mov
pop
push
imul
lds
mov
xor
sub
iret
push
xor
mov
test
aad
shrb
mul
jg
fnstenv
add
jl
dec
sub
dec
outsl
jg
fdivs
and
stc
xlat
outsb
sub
arpl
lahf
les
int3
push
and
loop
arpl
cld
ljmp
inc
fbld
pop
insb
push
inc
inc
fisttpll
mov
pop
xor
sbb
int3
and
cld
mov
in
mov
hlt
mov
stos
test
in
js
ja
sti
pusha
rclb
xchg
addr16
push
push
stos
shrb
sub
shlb
pop
mov
add
mov
sbbb
or
cs
fadds
xchg
movb
stc
ljmp
push
xchg
cmpsl
sbb
dec
mov
cli
lods
push
in
fstpl
pusha
xor
push
mov
lahf
sub
push
fadds
fst
add
outsl
pusha
sbb
dec
sub
push
loopne
decl
adc
xchg
fisubrl
jge
or
cmpb
pop
nop
dec
rcr
fldz
pop
pop
aaa
rorl
lcall
jg
jns
sbb
xchg
sahf
imul
push
cmp
gs
insb
shlb
inc
mov
jo
mov
mov
and
mov
ss
out
cld
push
pop
inc
adc
jbe
add
and
icebp
adc
mov
dec
jbe
mov
adc
cmp
pop
inc
adc
mov
in
js
clc
fisubs
mov
jg
xor
and
and
lcall
in
add
insl
inc
fs
adc
lock
out
clc
xlat
outsb
push
xor
xor
cmc
sbb
mov
dec
adcl
mov
adc
sbb
fwait
jne
inc
xchg
inc
xchg
cmp
dec
pop
movsb
pop
stos
push
pop
loop
mov
sub
fidivs
ficoml
ja
cmp
test
sub
popa
xchg
mov
fldenv
daa
mov
loop
out
jb
inc
dec
pop
mov
stc
adc
mov
jge
fs
xchg
aam
inc
std
push
mov
shrl
lds
and
jp
and
jb
adc
in
test
repz
pop
repz
dec
fwait
rclb
inc
fnstsw
inc
sbb
mov
les
jbe
mov
stos
cmp
xor
inc
test
push
mov
and
adc
out
stc
mov
mov
leave
xlat
and
notl
xchg
lahf
xchg
xchg
ret
stos
jbe
fsubl
out
je
cmp
xchg
scas
aam
cmp
lods
insl
jg
dec
movsl
push
es
jge
dec
mov
dec
pop
test
stos
nop
pop
ret
test
dec
cmp
sub
jecxz
sub
push
sub
daa
clc
adc
add
ds
mov
test
scas
shl
push
sub
lds
jb
cmpl
fsubl
sub
pop
loope
es
push
dec
jo
mov
mov
loope
aam
fsubr
or
in
orb
and
xchg
cmp
into
test
ja
jno
and
adc
enter
push
mov
pop
jl
jg
jl
stos
sbb
pop
dec
lret
adc
and
stos
aaa
jmp
fdivrl
push
xchg
lds
cmp
mov
lret
or
add
orl
adc
shr
adc
mov
addb
stos
lods
jmp
sub
ljmp
rorb
mov
pop
xchg
xlat
jmp
in
dec
hlt
dec
lret
and
dec
add
cmp
mov
mov
add
fwait
sbb
dec
xchg
std
mov
arpl
jge
repz
add
xchg
push
es
fmul
out
cmpsl
int
dec
pop
daa
or
push
and
cli
adc
mov
stos
hlt
lret
cmp
mov
lret
dec
dec
addr16
sbb
mov
push
cmpsl
inc
push
sbb
mov
inc
bound
paddsb
insl
movsb
imul
lret
cmp
add
xchg
fbstp
or
jbe
sti
push
and
shll
dec
push
cmpl
and
pop
or
movsl
mov
xlat
inc
loop
out
jle
push
mov
push
jne
adc
or
add
iret
jnp
mov
sti
into
xchg
sub
ret
mov
stos
enter
mov
cmpl
jle
nop
pop
jle
mov
ja
or
pop
mov
or
ljmp
ss
roll
or
dec
es
das
jle
ja
xchg
xchg
xor
faddl
and
mov
pop
fdivl
dec
dec
decl
or
push
jns
test
leave
jne
push
test
stos
mov
and
mov
daa
add
outsb
pop
out
lahf
lahf
xor
mov
scas
ljmp
dec
out
ljmp
push
out
mov
stos
scas
mov
js
js
sbb
outsb
inc
jne
sub
mov
mov
insl
orl
sbb
push
mov
mov
xchg
xlat
stc
adc
in
cmp
aaa
les
fcmovnbe
outsb
or
sahf
jno
lods
cmc
mov
jo
nop
lret
cs
push
jecxz
and
inc
inc
in
pop
clc
xchg
fs
ret
sbb
ds
xor
lahf
jecxz
and
shll
fcomps
push
push
pushf
outsb
loope
ret
subl
std
or
mov
and
in
das
sub
lods
xchg
scas
hlt
addr16
dec
xchg
cli
into
enter
int3
pop
pop
lahf
ss
aad
mov
cmp
sti
cwtl
dec
mov
adc
push
mov
dec
add
lods
xchg
push
lods
pop
mov
repnz
jb
xor
or
adc
std
fsub
sti
or
fs
sub
jmp
push
outsl
leave
mov
fisttpll
pop
leave
push
jae
pop
xchg
sub
add
scas
push
sahf
jbe
scas
xchg
mov
in
decb
sub
js
loopne
in
xchg
rorl
and
out
mov
jns
inc
pusha
sarl
filds
negb
xlat
jns
inc
cmpsl
loope
push
mov
sbb
jne
or
es
jl
cli
or
add
push
jnp
jnp
mov
sahf
xchg
jb
mov
fiaddl
outsb
bndstx
shl
sub
adc
jnp
testl
push
popf
jne
jecxz
or
xchg
popa
cmp
pop
or
in
pop
add
xchg
jae
lret
xchg
pop
lahf
push
out
cmp
xchg
nop
mov
and
dec
add
loope
repz
push
repnz
pop
adc
cmp
push
in
jb
fcoml
std
cltd
sarl
inc
clc
scas
jp
xor
dec
jb
jl
cmpsl
sbb
cmp
adc
pop
sub
movsl
lahf
cli
addr16
or
ljmp
add
pop
call
test
and
pop
push
push
inc
mov
popf
inc
or
cmpl
xchg
jbe
lret
xlat
subl
add
es
out
inc
or
cmp
jnp
jne
movl
dec
aad
in
pop
jmp
std
mov
std
fstpt
xor
sub
jmp
fcoms
cmp
dec
outsb
add
orl
jge
mov
adc
in
shrb
push
es
lcall
scas
test
push
inc
or
xchg
push
dec
movaps
cmp
or
les
jp
jge
loopne
addb
mov
jmp
mov
mov
jnp
mov
lcall
outsb
clc
pop
xchg
sub
mov
addr16
or
or
pop
leave
mov
addr16
push
ljmp
jno
mov
push
jae
cwtl
pop
out
cli
ds
repz
push
push
sbb
jl
test
sub
adc
jmp
jbe
pop
js
movq
sbb
int
mov
jno
andl
fmuls
mov
sar
xor
loop
test
sub
mov
outsb
mov
sbb
stos
loope
mov
dec
cmc
ret
pusha
roll
and
test
pusha
jl
leave
mov
dec
pop
adc
dec
pusha
xor
jmp
repz
pop
xor
mov
xor
push
mov
rol
pop
pop
xor
jne
jb
push
and
xchg
xchg
adc
inc
fnstcw
cmpsl
dec
flds
and
popf
shl
scas
pop
cltd
incb
aaa
or
outsb
std
ljmp
inc
pusha
xor
test
inc
mov
jge
popf
mov
mov
in
test
mov
pop
in
xor
xor
clc
rcr
test
pop
enter
aas
outsb
test
push
or
xor
addl
psubq
pop
cmp
or
addr16
cli
pushf
sub
sti
mov
cmp
xor
dec
aam
dec
adc
push
enter
and
gs
repnz
add
mov
in
rorl
jae
add
out
out
sbbb
xchg
scas
inc
dec
aaa
mov
xor
mov
push
dec
gs
sub
ds
push
sbb
loop
fcompl
mov
inc
pop
lret
arpl
push
into
outsl
adcb
cld
jae
mov
xchg
pop
jne
test
mov
cmc
dec
cmc
cmp
shrb
dec
inc
mov
mov
mov
or
mov
mov
cmp
pop
lret
fnstsw
lret
jne
push
and
flds
mov
or
cs
pop
incb
test
inc
lods
xchg
push
or
je
sub
hlt
mov
scas
movsb
xor
lahf
mov
jbe
loop
dec
mov
mov
ja
into
fdivl
mov
dec
data16
cmpsl
mov
sbb
xchg
cmp
cmpsb
cmp
ja
les
push
nop
imul
fcmove
push
pushl
xchg
fidivl
lahf
cmp
mov
add
or
mov
pop
cmp
mov
dec
mov
jge
cmp
pushf
rcrl
mov
icebp
int3
adc
rclb
sub
or
mov
mov
aam
dec
rorb
movsb
stos
pop
and
dec
lds
mov
push
insb
cltd
sbbb
mov
cltd
fdivrs
sub
mov
add
movsl
std
inc
mov
mov
ljmp
addr16
call
fsubr
sbb
sbb
mov
sub
nop
jb
in
fidivs
pop
mov
mov
or
fcmovnbe
popa
jbe
dec
dec
or
in
mov
lcall
xchg
divl
in
mov
mov
sub
sbb
pop
push
push
cmpsb
aas
fbstp
mov
mov
in
mov
push
dec
push
jnp
add
shll
jge
cmp
dec
out
in
pop
fsub
popa
js
in
rolb
push
je
xchg
jp
adc
data16
cmc
lds
icebp
add
pop
test
out
pushf
das
sbb
mov
cmp
mov
int
xchg
rcrl
mov
int
cmp
scas
bound
xchg
mov
push
jmp
test
clc
aaa
into
sub
ret
xor
std
imul
mov
add
sub
push
icebp
rclb
jo
gs
lcall
push
mov
jge
or
or
mov
outsl
inc
or
ljmp
mov
jle
lcall
in
nop
pop
sbb
xchg
scas
cmp
icebp
aaa
dec
cmp
mov
data16
std
adc
sub
in
fidivrl
fnstsw
push
mov
cmp
sub
ret
aam
or
xor
out
jbe
test
ljmp
test
and
dec
cmc
add
xchg
push
mov
movsl
les
inc
fs
outsl
and
test
xor
cli
push
dec
mov
je
jg
das
inc
lods
inc
and
jae
inc
arpl
inc
push
stc
mov
mov
lock
enter
push
insb
add
xor
mov
mov
sti
push
shrl
or
sbb
dec
cli
loopne
and
testl
aaa
es
test
xor
adc
and
mov
jns
xchg
inc
xor
arpl
mov
outsl
mov
call
add
test
rcll
out
out
jno
popf
dec
ret
sub
scas
lcall
mov
ds
repz
inc
push
mov
aam
mov
outsb
inc
push
jo
push
xchg
fisttpl
and
test
mov
xchg
push
int3
push
rol
mov
dec
dec
cmp
push
std
adc
adc
push
imul
in
mov
mov
fildl
leave
jae
xor
loop
addr16
mov
fwait
pop
roll
aad
out
lods
xchg
pop
lds
movsl
setle
xchg
add
cmp
je
lods
dec
int
push
sub
inc
mov
fcmovnb
mov
adc
mov
cmp
push
jl
mov
lret
out
sbb
sub
pop
ljmp
lods
push
mov
or
mov
imul
and
mov
cmc
fnstenv
xchg
inc
or
adc
sbb
cwtl
adcb
and
lea
cmp
xchg
push
jne
scas
push
rcrl
in
leave
jg
cmp
sbb
in
sbbl
std
cmpsl
mov
push
popf
repnz
daa
mov
dec
mov
out
sti
pop
addb
jl
lods
push
adc
lock
add
mov
inc
fs
andb
or
adc
dec
add
dec
fwait
jmp
cmpsb
push
frstor
test
sbb
dec
xor
jle
out
or
xchg
sbb
xchg
out
jae
mov
ss
movsb
ds
ljmp
das
adcb
fmull
xlat
outsb
cmp
xlat
cmc
adc
mov
iret
xchg
ja
es
repz
popa
mov
rcr
cli
imul
fcoml
lea
loopne
adc
sub
mov
lods
movsb
push
sub
or
outsl
push
outsl
pop
jno
jae
test
inc
negb
jb
fs
adc
in
pop
push
mov
mov
mov
into
xchg
lea
xor
enter
sti
ret
xor
and
icebp
jae
das
xor
inc
shl
iret
ja
shrl
adc
repnz
xor
dec
aaa
adc
sti
push
pop
xchg
xchg
ds
insl
sub
mov
or
push
cld
push
pop
xor
out
jbe
mov
arpl
gs
je
xor
btc
insl
repz
xchg
outsb
fld
loope
cmp
mov
mov
popa
hlt
add
fldenv
xchg
pop
cmc
or
orb
push
test
or
mov
or
mov
cmp
adc
add
fwait
out
xchg
scas
push
outsl
scas
and
jge
stos
stos
inc
fucomp
mov
mov
push
sub
fcom
imul
out
sti
pop
or
loope
hlt
mov
sbb
dec
dec
adc
imul
rep
cmc
or
push
inc
movsb
xor
mov
push
cmp
jnp
bound
mov
daa
fldt
sarl
sti
jbe
aam
jns
fists
es
inc
mov
addr16
pushf
adc
jle
loop
lods
mov
jp
mov
fnstenv
mov
jg
std
adc
ja
xchg
add
add
stc
jne
roll
mov
adc
inc
dec
loope
das
dec
add
idivl
cmc
or
je
ljmp
jno
das
add
iret
shlb
jp
ret
test
pop
rcl
pop
sarb
mov
pop
inc
mov
movsl
xchg
sub
adc
stos
mov
push
and
jnp
clc
cmp
popa
es
call
and
leave
lods
inc
sti
ret
push
rcrl
push
inc
push
ret
mov
mov
mov
cltd
pop
mov
push
ss
fisubs
inc
frstor
outsl
adc
sbb
jbe
cmp
dec
cmp
inc
mov
dec
lock
push
and
cmp
pop
inc
dec
xor
mov
in
pusha
jle
adc
shll
xchg
jbe
movsb
sti
adcl
or
add
out
cwtl
push
inc
cltd
dec
sbb
insl
jp
loopne
mov
rcr
add
outsl
sub
ret
pop
lret
mov
dec
repz
cmp
ret
add
out
gs
test
mov
mov
dec
lahf
push
js
inc
ret
out
cmp
xchg
idivl
ljmp
sbb
and
pop
repz
mov
in
push
dec
and
xchg
dec
lret
flds
jne
leave
fs
int3
push
ja
xchg
in
enter
jmp
jecxz
xor
pop
push
inc
ds
call
das
fsubl
xchg
fstpl
jp
mov
outsb
imul
add
mov
aam
mov
inc
push
push
jbe
or
and
lret
mov
ja
sub
adc
push
ja
cs
and
imul
push
inc
inc
xlat
jle
icebp
or
push
or
inc
mov
or
dec
nop
xor
lret
lret
add
and
push
pop
fidivrl
pushf
and
inc
std
mov
mov
aas
xchg
xor
enter
and
dec
mov
push
fs
sub
adc
loop
dec
adc
lods
xor
cltd
mov
adc
mov
pop
into
out
hlt
lahf
outsl
mov
rcl
cmp
incb
sub
jp
or
call
or
leave
mov
shrb
imul
je
mov
dec
in
inc
cmc
test
in
or
int3
scas
int3
mov
mov
or
dec
dec
fsubrl
lretw
in
lock
sub
imul
jns
adc
mov
xor
push
ret
std
jne
stos
inc
jecxz
add
mov
addr16
mov
fbld
jg
pop
sbb
cs
lahf
sbb
sbb
stos
out
cmp
inc
xchg
out
test
and
or
push
in
hlt
lret
lcall
sbb
sti
fsubs
test
ss
fs
push
xchg
inc
inc
push
icebp
pop
divl
push
in
jne
inc
inc
push
icebp
insb
jmp
movsl
sbb
jno
ds
imul
mov
scas
fiaddl
pop
push
or
dec
cltd
push
push
dec
fs
scas
mov
ret
push
mov
orb
xor
out
mov
ficoml
std
pop
repz
lods
ja
dec
jp
mov
into
js
push
gs
lret
lret
sti
cld
jns
or
fidivs
jno
iret
push
lret
xchg
es
xor
cwtl
inc
or
scas
cmp
ja
sub
dec
nop
xor
inc
cmc
dec
jecxz
scas
in
lds
lds
test
ret
push
test
add
in
in
xchg
mov
mov
jnp
sub
push
dec
aam
into
dec
add
in
popf
or
mov
mov
adc
test
ja
mov
je
and
jno
mov
bnd
adc
lds
push
mov
mov
stos
jge
mov
cwtl
sub
add
mov
or
and
add
loopne
sub
insb
test
cmp
insb
in
inc
fdivl
or
dec
pop
popa
subl
xchg
pop
add
out
push
push
ja
rclb
pop
stc
repnz
xchg
pop
cwtl
sbbb
pop
fisubs
push
roll
lret
cld
mov
arpl
fnstcw
ljmp
es
lahf
mov
shl
pusha
subb
mov
jb
push
rol
and
and
ror
ret
mov
mov
aam
sbb
xchg
sahf
pop
push
daa
dec
dec
fidivs
xor
lahf
sub
cmp
push
mov
jle
push
push
mov
fucomi
fcomps
xor
add
add
or
and
fdivrl
mov
and
popf
jbe
or
dec
push
lods
jae
addr16
es
stos
cmpsl
jp
fcomps
pop
cmp
sbbb
cmp
add
pop
push
and
xor
cmpsl
mov
repz
sbb
mov
in
mov
iret
jp
int
insb
mov
ljmp
pusha
add
mov
mov
mov
inc
mov
int
roll
mov
orl
jnp
ja
pop
inc
cmpsb
mov
lods
lret
xlat
jnp
inc
std
js
dec
sbb
cwtl
xchg
sub
aaa
push
test
and
mov
in
rolb
cmp
dec
push
inc
insl
jae
xchg
xchg
pop
push
in
stos
out
ret
aas
inc
stos
outsl
in
mov
adc
ljmp
or
sbb
sub
aaa
cmp
xor
mov
pop
mov
fst
insl
iret
push
fldcw
xor
push
test
or
xchg
nop
push
lods
fstps
cmp
pop
out
jge
lds
fsubrl
aam
cwtl
js
dec
lods
xchg
or
add
add
lods
lea
mov
dec
mov
arpl
inc
lods
js
and
js
fsubrl
iret
cltd
ret
ror
xchg
sub
in
adc
push
sub
movsb
xchg
aam
in
int
adc
fndisi(8087
int3
aas
repnz
or
lea
push
pop
mov
mov
testb
fdiv
xchg
scas
push
push
push
add
add
mov
repz
cmp
loope
jb
fiaddl
iret
aas
mov
xlat
mov
sub
mov
jne
mov
jnp
nop
or
jno
fcmovne
xor
jp
inc
lock
cld
jg
testl
push
stos
int3
inc
lret
fdiv
cmc
imul
push
aam
dec
xorl
pusha
in
dec
shr
je
and
jecxz
or
mov
iret
inc
adc
and
outsl
xchg
inc
fidivs
xor
cmpsl
sbb
xor
adc
pop
addb
sub
adc
cmp
push
mov
vmovshdup
rorl
ret
adc
insb
in
insb
or
insb
add
mov
mov
testb
xchg
pop
mov
mov
mov
mov
mov
in
add
mov
lret
rcll
movsl
cmpsb
mov
xchg
mov
cltd
daa
jp
cmp
fmull
xor
inc
pop
cmp
xchg
insl
repnz
push
int3
std
or
shlb
dec
jl
sub
jns
pop
aas
rol
and
fstpt
xor
xchg
inc
cmp
fisttps
mov
mov
fsubrl
out
ljmp
push
lods
int3
dec
dec
pop
jp
xor
test
jge
ljmp
jne
dec
cld
push
jmp
jecxz
xchg
or
pop
add
data16
scas
or
push
cmp
or
push
ficoml
or
lret
mov
mov
shrl
mov
pop
xorl
mov
and
test
pop
testb
mov
inc
mov
mov
and
and
lock
xor
cmp
mov
pop
lcall
and
cmp
enter
push
ljmp
jae
call
and
or
or
push
xlat
adc
bound
orl
xchg
xor
or
xor
inc
rorb
xlat
ljmp
mov
aas
js
pop
fst
pop
sub
into
fcoml
lahf
mov
dec
ljmp
lock
rcr
idivb
das
xchg
dec
add
push
dec
xor
lcall
adc
lods
scas
popa
movsb
pop
push
test
loop
sbb
in
push
loopne
clc
ja
mov
loop
test
xchg
stc
add
fwait
mov
insl
cli
scas
pop
add
ljmp
xchg
xchg
mov
add
dec
loope
cmp
add
mov
test
sub
arpl
mov
pop
xor
fwait
push
lret
popf
and
xchg
mov
jmp
inc
mov
dec
cmp
mov
into
mov
jle
mov
cwtl
sbb
adc
gs
dec
ljmp
insb
clc
sahf
lods
sub
inc
jno
inc
fstl
sub
fldenv
sbb
outsb
inc
or
lds
testb
aad
fld
mov
xchg
or
ljmp
add
insl
loop
fldcw
dec
mov
stc
call
cmp
test
scas
in
imulb
mov
icebp
dec
cli
push
repnz
dec
test
jno
mov
adc
addl
add
jg
gs
inc
xchg
xor
sub
loope
out
inc
lds
xchg
sbb
push
adc
push
inc
pushf
inc
dec
push
hlt
lea
adc
dec
inc
mov
std
out
aad
mov
cmp
push
inc
fildll
xor
push
in
hlt
repnz
sbb
mov
cli
fidivrs
xchg
xchg
dec
push
dec
loope
pop
cmp
pop
xor
in
cmp
mov
decl
jg
adc
rorl
outsl
call
or
push
adc
mov
xchg
pushf
inc
dec
ret
pushf
jnp
sahf
jb
je
clc
mov
ret
pop
pop
jae
pop
pop
jbe
jle
or
shlb
xor
subl
push
scas
xchg
mov
fcomps
sahf
jno
dec
ja
pusha
cltd
scas
fbstp
xchg
push
aas
nop
imul
cltd
push
inc
push
setae
aad
adc
outsb
adc
mov
insb
cli
mov
sub
pop
pusha
ret
xchg
pop
xor
dec
mov
jl
xchg
cmpsl
adc
fnstenv
stos
fdivrs
sbb
dec
or
pop
mov
sbb
pop
xor
mulb
loop
inc
jp
cld
mov
rcrl
or
lea
in
lret
pop
sub
inc
imul
push
data16
mov
adc
cli
or
notb
push
sub
xor
pop
push
in
jo
mov
mov
or
sbb
mov
sub
mov
dec
es
ljmp
jb
xchg
leave
sbb
out
cwtl
insl
sbb
xchg
jo
fwait
mov
ret
jb
dec
test
repnz
imul
mov
and
jmp
mov
ret
lock
leave
decb
dec
mov
push
movsl
jo
pop
add
and
xlat
xor
pop
ds
cmpsb
imul
jp
push
lods
or
push
cli
sbb
inc
rcl
icebp
movsl
andb
push
push
scas
ret
mov
pop
push
idivb
push
pop
out
sbb
enter
aas
in
dec
cmpsb
xchg
nop
test
test
test
pop
pop
dec
sbb
push
js
mov
push
daa
in
lcall
adc
sub
mov
nop
xchg
or
in
arpl
imul
stos
sbb
push
pop
in
pop
gs
mov
xor
ja
mov
mov
icebp
sub
fs
outsb
std
shlb
inc
cli
insb
xor
xorb
insl
jmp
ljmp
pop
addr16
fdivr
inc
pop
mov
sbb
or
scas
out
pop
sub
add
fs
sahf
jne
inc
push
out
aad
inc
cmp
stc
lea
fisubl
ljmp
lret
cmpsl
out
jno
sbb
or
or
repnz
das
ja
inc
jo
mov
movsl
pop
jne
in
sahf
jp
stos
xchg
adc
mov
sahf
jp
out
cmpb
xchg
jp
cs
cmpsb
cltd
pop
sub
sti
inc
xchg
or
xchg
dec
sub
negl
jo
popf
adcl
aas
add
mulb
cmp
and
cmp
stc
test
flds
or
sarl
sub
cmpl
imul
das
inc
jl
fcoml
jmp
inc
std
push
dec
loopne
mov
bound
push
add
sub
adc
loope
or
cwtl
mov
xorl
push
sbb
out
push
dec
and
mov
mov
lods
popf
xor
or
pusha
mov
mov
jge
dec
lds
or
jle
lds
lock
inc
test
lret
mov
sub
ja
movsl
xchg
aam
sbb
dec
je
out
jo
xchg
orb
sub
jle
out
push
sub
stos
fsubr
sub
cmpsl
xchg
ret
shrb
mov
add
cld
adc
mov
fldt
sbb
mov
test
jnp
into
sti
jle
cmc
lds
imul
mov
push
pop
loopne
cmpps
arpl
icebp
outsb
push
mov
jne
and
stos
xor
stos
test
pop
sbb
and
xchg
std
mov
inc
pushf
outsl
aas
cmp
xchg
sbb
push
dec
jecxz
call
imul
cmp
enter
xchg
jae
mov
xchg
shrb
ss
sub
movsb
sub
push
stos
cmpsb
push
lret
movsb
mov
mov
mov
movsl
push
sbb
bound
imul
pshufw
mov
repnz
push
stc
or
and
sbb
pop
repnz
fdivrs
and
jp
addr16
adc
add
cltd
mov
pop
test
in
test
filds
add
inc
jmp
cld
cmp
pop
inc
cltd
add
or
loopne
inc
pop
addr16
scas
arpl
xchg
sub
push
repz
xchg
mov
test
inc
loopne
lds
loopne
jmp
add
jecxz
fstps
mov
aaa
std
inc
mov
or
jge
xor
sub
gs
jle
popa
into
dec
pop
dec
sub
out
hlt
mov
cld
push
clc
add
shrb
sub
sbb
pop
jmp
or
rorb
dec
xor
lods
cmp
or
push
jl
sub
imul
insl
dec
xchg
movsb
lods
dec
mov
xchg
inc
sahf
and
xchg
lods
in
inc
push
test
in
push
and
int3
movsl
fwait
dec
mov
jns
or
cli
sbb
stos
das
std
inc
push
int
push
cmpsb
cs
push
lods
dec
push
scas
negl
int
jg
adc
mov
inc
jle
xor
lods
inc
push
out
or
mov
in
ss
loopne
cmp
lcall
jb
xchg
push
and
push
les
push
push
gs
jmp
loopne
mov
andb
mov
imul
sub
adc
adc
mov
inc
movsb
or
leave
jae
ljmp
cmp
cltd
mov
pushf
jg
insl
ror
xchg
loop
mov
jge
xchg
sub
mov
dec
leave
fisubrs
jmp
ljmp
and
xchg
mov
or
sbbl
jle
and
mov
ss
adc
mov
fsubl
jbe
xor
ret
mov
jne
outsl
cmp
or
mov
xor
out
mov
add
mov
xchg
ret
add
fbstp
leave
inc
aad
inc
mov
pop
out
cmpb
inc
popa
repnz
pop
in
ret
sub
sbb
jmp
and
xchg
inc
dec
push
inc
push
ss
ds
xor
pop
sub
lds
daa
dec
je
pop
xor
jbe
mov
les
scas
jns
sbb
sub
mov
ficomps
pop
fidivl
adc
fstl
xor
push
mov
xlat
push
adc
fidivrl
mov
sbb
inc
roll
and
fists
lods
ss
pop
dec
xchg
add
arpl
adc
jno
sbb
lahf
pop
and
cmc
push
in
jns
scas
and
sub
adc
stos
test
aam
mov
pop
mov
out
add
dec
sahf
jp
inc
ss
adc
jbe
scas
out
les
add
ja
add
scas
adc
sbb
test
insb
hlt
mov
icebp
xchg
out
xor
and
lods
jmp
push
mov
es
mov
aad
adc
std
stos
xchg
movsl
icebp
mov
pop
inc
cmc
xor
jl
sbb
out
jl
push
les
inc
test
sbbl
xchg
sbbl
fdiv
fsubl
loope
not
dec
iret
loope
aaa
sti
push
push
and
sbb
push
push
push
and
insl
inc
adc
mov
enter
in
mov
xchg
and
mov
sub
mov
shlb
inc
add
out
aas
out
xchg
dec
dec
lock
xor
idivl
aaa
out
cmpsl
in
imul
stos
xchg
jge
lret
stos
mov
fs
jmp
sub
scas
mov
stos
testl
stos
in
pusha
and
inc
mov
shrl
ret
cmc
inc
add
jo
jmp
cmpsb
cmp
in
shlb
fidivl
mov
cmpsl
xchg
lods
jmp
and
popa
add
mov
mov
out
and
jns
add
mov
popa
clc
sub
mov
aad
and
push
in
call
or
loopne
xor
arpl
addr16
or
xlat
inc
sbb
mov
loop
mov
lahf
loop
sbb
push
or
shr
jno
adc
jmp
xchg
sahf
inc
test
insl
xor
mov
or
mov
jle
sub
fwait
loop
sub
cltd
movsl
pop
popf
jno
stos
pop
push
dec
fmuls
sub
lret
mov
stos
jmp
mov
fmulp
leave
push
ljmp
add
mov
xor
mov
pop
push
pushf
pop
push
fcoms
ljmp
pop
xchg
pop
arpl
in
mov
or
mov
not
inc
mov
jl
dec
addr16
or
dec
es
dec
push
cmp
pop
ret
je
xchg
dec
lret
push
sub
stc
loopne
mov
iret
aad
mov
and
mov
sbb
xor
xchg
stos
adc
xchg
lcall
jle
mov
push
jl
jb
pop
outsb
in
inc
ss
cmp
adc
pop
movsb
out
xor
mov
jb
pop
fildll
or
mov
shrb
push
adc
sub
imul
adc
loopne
jns
ds
repnz
loope
lock
add
in
push
or
ja
pop
sbb
mov
mov
mov
scas
mov
addl
je
das
cmp
and
sub
jle
int
pop
push
mov
mov
out
shl
xchg
repz
dec
push
mov
aam
and
into
aaa
cmc
mov
and
cmp
dec
les
lret
rcrb
leave
enter
xchg
add
mov
add
or
and
insb
js
xchg
loopne
daa
popa
loope
jbe
sarl
loope
jo
sbbl
popf
les
mov
loopne
cmp
fimuls
repnz
fidivrs
movsl
jecxz
andl
lret
inc
mov
shlb
jae
mov
loopne
loope
cmp
jo
test
dec
sbb
xchg
rcl
lods
xchg
mov
push
dec
in
test
xchg
mov
mov
inc
sbb
push
sbb
ljmp
push
fs
dec
popf
add
pop
push
fcom
mov
decb
dec
add
mov
add
lods
adc
ss
jb
adc
inc
push
mov
outsl
shlb
mov
sbb
or
jnp
mov
mov
mov
fidivrl
xchg
push
pop
into
cli
xchg
ss
and
lea
fdivr
stos
lea
add
jmp
aaa
outsl
daa
sti
push
aad
dec
xchg
pop
outsb
sub
cmp
aad
push
xchg
inc
out
adc
push
xorb
js
jns
fisubs
aad
mov
jecxz
adc
xchg
jp
jg
insb
and
out
les
cmc
adc
fidivrs
xchg
pop
jno
mov
sbb
das
lcall
fsubrs
mov
rol
xchg
push
push
dec
icebp
loope
rorl
test
mov
push
fdiv
nop
cmpb
out
mov
in
mov
enter
push
xchg
inc
push
mov
mov
push
sub
shlb
jae
jge
pop
xchg
imul
sub
and
out
aam
testb
scas
fstp
xor
lods
dec
addr16
jo
lods
js
and
adc
ret
movsb
and
push
sbb
dec
jae
inc
and
mov
icebp
out
les
into
xor
ds
mov
cmp
sbb
clc
sarl
test
mov
dec
lods
sub
test
mov
in
sub
or
and
jge
hlt
xor
add
sbb
test
push
pop
pop
xor
lret
ffreep
jns
or
jbe
outsb
inc
movsb
adc
adc
mov
jmp
sub
lds
dec
outsl
or
cltd
fstl
push
and
xchg
mov
add
mov
orb
mov
mov
notl
mov
out
sahf
push
add
dec
xor
mov
jb
leave
sbb
mov
rorl
mov
das
pushf
xchg
fists
lock
mov
ja
mov
flds
into
adc
int
arpl
cmp
pop
xchg
insl
lea
in
adc
mov
sbb
shll
xor
add
inc
mov
movsb
fs
add
mov
mov
fdivl
movl
je
cwtl
icebp
sbb
cltd
das
in
push
testb
lock
ret
pusha
mov
test
es
sbb
int
imul
fs
mov
cmp
aam
xchg
andl
ffreep
addr16
int
mov
leave
int
mov
pop
adc
or
test
call
add
leave
cltd
lahf
test
ret
les
pop
pop
push
mov
popf
scas
std
fidivrs
cmc
in
push
inc
mov
fsubl
fwait
out
sub
das
inc
cmpsl
bound
pop
test
pop
fdivs
rcl
icebp
stos
out
arpl
or
lahf
and
test
or
inc
push
pop
cmpsb
pop
pushf
addr16
jp
fwait
ret
mov
xchg
mov
push
stc
inc
lds
dec
push
inc
aad
jne
cmp
nop
stos
leave
and
mov
xchg
cmp
cmp
sbb
jp
push
xlat
leave
ja
or
mov
pop
mov
pop
jo
fucomp
loop
sub
jmp
sbb
call
mov
xchg
sbb
ss
xor
mov
pop
out
cmpsl
push
dec
mov
sti
push
inc
jno
jmp
cmp
in
fwait
sub
dec
aaa
iret
jl
push
imul
pop
pop
popl
sbb
sarl
xor
jg
sti
jl
subb
int
pop
pop
sbb
xchg
push
imul
fidivrs
stos
sbb
pop
mov
jge
fcmove
sbb
mov
xchg
in
inc
sbb
fcoml
mov
or
or
fcoml
rol
pushf
daa
mov
dec
dec
rclb
into
cmp
mov
xlat
adc
and
int3
mov
jle
jb
out
push
or
mov
sbb
ret
dec
or
cmp
pop
in
nop
rol
outsb
pusha
sub
mov
lcall
les
ja
mov
mov
cltd
or
fcmovne
xchg
aad
inc
inc
cmp
xor
and
mov
ljmp
sbb
inc
push
lcall
stc
je
inc
or
jmp
hlt
xchg
pop
xchg
pop
rcrl
shrb
mov
xchg
sti
xchg
popf
subb
push
hlt
jbe
rol
fnstsw
dec
mov
fsubs
xor
ret
mov
jle
icebp
imul
adcb
inc
jne
nop
mov
stos
inc
pusha
sbb
adc
cmpsb
pop
mov
xorb
movsl
adc
lret
xlat
inc
fstps
sbb
jb
xor
fsub
test
fdivrs
ret
mov
jae
repnz
adc
adc
mov
insb
add
loope
test
std
mov
jno
cs
mov
jl
xlat
jl
sbb
ret
inc
fcomp
inc
xchg
outsb
add
adc
scas
int3
push
fcomip
mov
fdivr
in
mov
inc
mov
das
cmp
push
dec
iret
es
rorb
fdivrs
jbe
leave
pop
cmp
fbstp
add
leave
and
lcall
in
std
gs
aas
dec
sub
dec
fdiv
dec
repnz
push
cmp
das
xchg
sbb
add
jnp
mov
test
push
xchg
push
dec
jecxz
shl
push
sarb
inc
stc
inc
ja
clc
or
dec
popf
stc
out
or
in
and
call
mov
sbbl
mov
and
scas
dec
push
leave
nop
mov
dec
push
push
in
enter
pop
sbb
push
xchg
and
xchg
inc
adc
inc
add
or
push
jmp
jne
jo
pop
sbb
sbbb
jl
stc
jge
outsb
jnp
pop
jle
movsl
sbb
pop
add
fcomip
jle
inc
mov
testb
out
xchg
je
aam
shll
in
mov
bound
and
mov
xchg
and
movsl
cmc
test
scas
push
repz
insb
mov
or
sbb
sti
addl
mov
addl
scas
lods
pushf
in
pop
and
mov
push
xor
sub
les
xchg
minps
dec
or
push
push
jle
aas
out
pop
push
rorb
mov
filds
mov
cs
or
inc
test
je
push
in
pop
test
lahf
mov
cld
jns
adc
adc
and
sub
xor
mov
pop
cmpsl
push
ljmp
ljmp
mov
mov
xor
lret
sahf
sub
fsin
je
push
mov
sbb
inc
aaa
mov
sub
aam
imul
push
popf
outsb
push
jl
inc
jg
aas
imul
sarl
inc
fcompl
pushf
es
jecxz
aas
dec
pop
and
test
movl
dec
inc
push
sub
push
xor
addr16
icebp
mov
bound
dec
rcll
xor
call
dec
lret
jae
das
push
cmc
pop
lods
push
dec
xorb
out
jbe
xchg
inc
loop
lahf
mov
add
cmp
push
dec
loope
mov
fldt
mov
push
cmp
stos
adc
cmc
in
inc
push
out
mov
pop
mov
lcall
mov
fistpl
and
or
mov
jl
xchg
lcall
ds
jp
xlat
mov
mov
sbb
out
adc
cmpsb
gs
daa
xchg
stc
dec
and
pop
in
and
aam
test
push
xor
dec
lahf
mov
inc
fidivrs
repnz
loop
mov
shl
xchg
pop
mov
fildll
addr16
xor
adc
jl
movsb
imul
and
add
int
cltd
inc
stos
mov
mov
cmp
mov
insb
or
fwait
out
pop
sub
test
rep
adc
lret
add
lds
inc
sbb
jae
testb
push
hlt
mov
and
fisubs
pop
adc
jne
addr16
dec
jmp
xchg
in
insb
xchg
dec
inc
test
mov
adc
dec
loope
insl
lods
pop
lahf
add
int
rcr
ret
jno
pop
loopne
shrl
cmpsl
push
or
push
sbb
add
xor
and
lods
subb
pushf
das
jmp
test
fbld
sbb
cmc
inc
pop
je
push
daa
sub
pop
push
test
jmp
or
jp
inc
push
inc
out
rcll
testl
pop
or
mov
sub
enter
pusha
sub
sahf
sti
xor
es
aas
leave
rorb
xchg
mov
push
jmp
daa
mov
test
inc
or
and
call
and
xor
pop
scas
cmp
imul
test
stc
mov
jae
cmp
mov
pop
fstpl
das
rcrb
movsl
pop
and
fs
push
outsl
test
dec
data16
pop
icebp
je,pt
in
push
js
lock
cs
mov
dec
fadds
mov
sahf
and
out
rcr
inc
adc
mov
cmp
pop
cld
inc
fiadds
dec
popa
std
andl
cmpsl
and
push
mov
push
filds
test
ret
movsl
in
data16
ret
aam
movsb
push
jb
xor
xchg
cmp
imul
hlt
push
loop
mov
stos
nop
jbe
or
fldt
dec
push
add
mov
ss
pop
mov
xchg
repnz
mov
sub
jle
xchg
scas
xor
mov
mov
or
mov
sbb
pop
icebp
das
and
shlb
mov
clc
sahf
inc
xchg
pop
mov
xchg
adc
mov
cmp
xlat
repz
nop
adc
and
imul
push
mov
roll
sbb
subb
jb
mov
bound
xchg
fdivl
mov
dec
mov
lods
push
fs
add
push
xor
jmp
out
and
or
mov
xchg
sub
xlat
inc
lods
or
dec
shrl
shrb
lods
shl
dec
icebp
mov
stc
dec
jle
lods
ljmp
pushf
xor
cmpl
sarl
dec
adcb
les
dec
loope
mov
jo
push
adc
loopne
out
dec
inc
pop
test
push
mov
inc
inc
insl
jmp
cmc
mov
fcomi
out
data16
push
push
pop
xor
jmp
pop
outsb
jmp
aam
jle
xchg
jp
pop
push
in
mov
sub
je
cld
mov
pop
mov
mov
cmp
lods
and
insl
add
inc
stc
nop
repnz
mov
push
jno
jp
cld
lds
sbb
jp
outsl
xor
jle
test
or
mov
push
push
cmp
sub
das
dec
add
fists
das
inc
call
mov
std
loope
or
ret
xor
mov
sahf
roll
inc
test
sbb
popf
xor
adc
mov
and
xchg
popa
mov
xchg
sbbb
push
popf
nop
negb
cmp
jp
scas
and
cs
push
jae
inc
repz
xor
push
mov
fwait
and
inc
jbe
sub
rclb
sbb
mov
aad
sub
pusha
stos
rcrl
fisttpll
shr
mov
in
lcall
push
xchg
and
xor
data16
test
xchg
lcall
rcrl
sub
aam
xchg
mov
adc
mov
xorb
jns
imul
jno
sub
mov
dec
dec
push
inc
push
pop
out
frstpm(287
mov
insb
loope
mov
or
testb
int3
pop
aaa
adc
dec
push
pop
testb
movsb
push
jp
or
popl
pop
cmp
jmp
pop
pop
mov
add
mov
rcrb
and
ljmp
cmp
call
test
mov
or
xchg
adc
aad
add
jecxz
sar
mov
test
aad
in
mov
test
fildll
adc
sbb
mov
cld
xchg
xor
sub
aaa
fwait
mov
xchg
pop
ljmp
call
repz
xor
rcrl
aas
and
addr16
sbb
jbe
and
push
test
sbb
push
loopne
xchg
shrb
neg
in
insl
adc
pop
or
sub
or
outsl
dec
pop
lahf
cmc
popf
pop
adc
lahf
and
lods
movl
movsl
pop
in
std
lock
repnz
mov
sub
sub
xor
push
cmpsl
ret
xor
fwait
test
mov
stos
sbb
mov
mov
jecxz
inc
add
push
cs
and
stos
inc
mov
xor
gs
and
stc
dec
adc
mov
roll
mov
icebp
in
mov
mov
or
mov
pop
loope
sub
jae
shll
jne
notb
sub
xor
jg
cmp
cmp
aad
mov
mov
xor
sbb
adc
and
mov
int
sub
sbb
clc
dec
rorl
sub
mov
xchg
ds
popf
insb
data16
mov
add
lods
aas
in
cmpsb
dec
les
mov
pop
fincstp
dec
test
int
sub
sub
cli
push
pop
sahf
jb
adc
dec
inc
fidivrs
out
pushf
inc
shl
jg
loop
push
out
mov
jns
jmp
pop
popl
sahf
xor
or
adc
aad
and
mov
stos
outsl
outsl
stos
and
xchg
scas
add
into
push
xor
jmp
test
cs
xchg
sub
mov
into
lods
mov
arpl
inc
pop
dec
mul
push
in
pop
cs
or
daa
clc
inc
test
add
fdivrs
xor
push
lahf
andl
movsb
lds
loop
or
cmp
inc
sbb
and
mov
inc
std
cwtl
jo
push
xchg
mov
mov
xlat
pop
or
nop
scas
sub
adc
je
add
and
daa
xor
push
insl
mov
stos
ficoml
notrack
adc
and
mov
and
cmc
ret
pop
sub
mov
movsb
bnd
shrl
adc
pop
push
sahf
rolb
int3
sbb
frstor
cmp
fldt
dec
fs
int
pusha
or
jge
and
je
add
pop
das
mov
sub
mov
fidivrl
xchg
ret
or
fpatan
inc
arpl
enter
inc
loope
sub
jle
leave
icebp
push
je
xchg
xor
pusha
adcb
shrb
xor
fbstp
push
scas
aas
lret
xor
xchg
pop
xlat
lret
sarb
cmp
loopne
adcb
mov
fsubrl
in
imul
in
sub
push
imul
adc
or
jns
loope
adc
lea
or
ss
ja
xor
cmp
jl
jg
sbb
mov
dec
jl
pop
mov
sub
frstor
xchg
stos
insb
sbb
or
jmp
jl
lahf
in
xchg
arpl
inc
into
mov
in
test
loope
mov
fnstcw
movsl
inc
add
repz
pop
cmpsl
dec
std
inc
into
out
pop
in
sbb
pop
mov
repnz
push
inc
jl
sahf
jne
jp
insl
lock
cld
adc
and
adc
roll
jp
sarl
scas
inc
pop
cmc
pop
sarb
mov
movsb
rcrl
repz
dec
sbb
lock
sahf
sub
rclb
ret
in
xor
roll
pop
cltd
hlt
jecxz
das
pop
xor
int
pushl
nop
push
sub
je
lret
das
fisubl
mov
or
mov
cli
test
xchg
in
ljmp
daa
out
bound
ljmp
notb
sub
jge
insl
mov
sub
sbb
mov
xchg
data16
lret
lea
mov
mov
movsl
cmp
psubb
pop
jae
cmpsb
sbb
jnp
ja
lods
nop
jae
mov
fiadds
scas
out
mov
popa
fs
pop
pushw
js
lcall
fistl
push
inc
jae
jno
jmp
and
dec
jg
repz
stos
adc
cmp
imul
mov
fwait
push
jmp
or
jge
dec
pop
stc
inc
test
dec
scas
test
out
pusha
rcll
je
movsl
sbb
in
pusha
insb
add
sti
adc
stos
repnz
enter
lea
or
bnd
fdivrl
dec
push
pop
jbe
add
cmovle
sub
ret
ja
adc
aaa
jno
in
jecxz
push
lcall
xchg
cmp
adc
fwait
xchg
es
inc
iret
adc
fs
push
sti
mov
shrb
xchg
or
lret
movsl
sub
jb
test
dec
pop
pop
scas
push
lahf
pop
inc
out
or
cmc
pop
inc
icebp
lret
scas
sbb
loope
out
push
test
xor
sbb
sub
enter
add
xlat
pop
into
sahf
or
ss
mov
xor
mov
lods
fdivl
mov
lret
jns
data16
fwait
cmp
lock
mov
repnz
dec
lahf
and
jne
popa
pop
test
rorb
jb
leave
xor
in
mov
inc
fmulp
test
mov
inc
xchg
popf
out
sub
xor
adc
xor
dec
loope
lret
fildll
push
das
push
enter
into
or
mov
cwtl
ret
sti
notl
cmpsl
and
cs
sarb
or
clc
enter
notb
dec
out
mov
insb
dec
push
test
mov
popa
dec
mov
mov
pusha
pop
ljmp
call
xchg
gs
or
das
cmp
inc
cmpsb
push
push
jle
outsb
jp
mov
push
xlat
mov
iret
test
fistpl
add
sbb
clc
inc
lahf
jbe
aas
test
push
fdivr
jmp
insb
fistpll
je
sub
fnstenv
sub
push
out
xchg
or
sbb
and
xchg
add
xchg
fwait
aam
push
or
xchg
movsb
inc
and
inc
push
cmp
xlat
xor
mov
push
clc
subb
add
outsb
mov
arpl
inc
outsl
pop
xor
stos
push
cwtl
sub
shl
sahf
push
sahf
jbe
lcall
addr16
clc
sahf
int
shrb
mov
xchg
orb
out
repz
or
push
inc
lods
aas
das
jbe
je
stc
xor
decb
mov
outsb
loope
mov
xor
xor
shlb
push
jp
adc
mov
cs
dec
ffreep
loopne
aam
mov
orl
sub
fnstcw
gs
push
xchg
int3
lahf
testb
dec
test
dec
in
jns
iret
in
out
adc
nop
push
xor
pushf
in
enterw
xchg
cmp
js
test
xlat
sub
stos
lods
or
movsl
push
sbb
inc
sbb
fbld
adc
js
pop
cmc
loopne
add
imul
fnstsw
rcl
mov
push
daa
test
pusha
push
js
jae
sub
add
outsl
testl
add
jl
xor
xchg
mov
mov
jmp
cmpsb
out
arpl
aad
jo
push
jmp
adc
dec
es
fidivs
sbb
ds
pop
xchg
loop
xchg
incb
fstpt
out
jecxz
pop
cmp
inc
dec
cmp
dec
sub
jp
aad
cmp
iret
cmc
das
lret
leave
int
mov
push
aaa
shlb
jns
push
js
pop
ja
mov
mulb
dec
pop
shlb
sub
stos
mov
enter
sub
sbb
mov
clc
and
cmpsl
jg
or
test
mov
push
cmp
sub
sbb
std
dec
leave
xor
insb
jnp
cmp
mov
cmp
pop
cld
out
mov
lret
flds
shrl
je
xor
xor
and
sub
ja
push
mov
push
push
jns
xor
stc
mov
mov
cvtdq2ps
xchg
add
adcl
pop
je
pop
fdivl
test
in
pushf
adc
cmp
call
sbb
ds
aam
scas
clc
xchg
sub
dec
push
in
scas
lcall
scas
roll
jge
mov
and
adc
sbb
decl
mov
sbb
lock
mov
pop
push
xchg
sti
or
stc
inc
mov
lret
xor
or
stos
xor
mov
stc
nop
cmp
mov
mov
mov
push
in
pushf
mov
inc
hlt
test
call
xchg
jmp
out
lcall
sub
cmpsl
mov
mov
cmpsb
insl
scas
push
push
pusha
mov
cli
cwtl
cwtl
jp
mov
mov
popf
stos
repnz
sub
ja
push
mull
cmpsb
lock
sub
sbb
xchg
psllq
xchg
daa
cmp
jg
loop
faddl
xor
out
lods
ja
mov
inc
jo
mov
aas
je
xchg
inc
lds
push
enter
cli
pop
addr16
nop
pop
add
loopne
pop
fwait
into
dec
dec
arpl
jnp
pop
pop
xor
ret
push
mov
clc
hlt
lret
in
sbb
aaa
sahf
or
fnstcw
ljmp
inc
inc
mulb
out
mov
adc
iret
stos
jns
xchg
mov
add
cmp
push
xchg
lods
inc
stos
shll
je
pmaddwd
cmc
jb
lea
sbb
jp
xor
dec
xor
fwait
mov
and
rol
xor
arpl
sar
int3
adcl
mov
stc
xor
fwait
in
mov
or
jbe
frstor
inc
mov
loope
xchg
cwtl
daa
or
scas
push
icebp
adc
mov
adc
mov
cltd
adc
sub
push
fisubl
rcr
sahf
pusha
loopne
dec
fs
jb
insb
clc
and
addr16
lahf
pop
adc
add
or
xchg
sbb
fimull
inc
jbe
test
fimuls
or
shrl
fdiv
icebp
mov
cs
xchg
jecxz
add
idiv
cmp
push
lods
testl
sub
sub
cmpsl
aas
xlat
inc
push
inc
stos
cmp
adc
lret
int
aas
or
jge
or
ss
cmp
and
push
jbe
mov
lret
xor
push
loop
lret
add
and
shrl
push
int3
jbe
dec
test
push
inc
jb
je
mov
add
dec
dec
dec
cmpps
pop
inc
xor
push
push
xchg
out
cmp
mov
je
mov
sbb
mov
pop
xor
in
or
stos
loope
fnsave
call
call
scas
addr16
pop
imul
xor
inc
arpl
das
std
addr16
sbb
inc
pushf
inc
jmp
imul
mov
or
inc
and
outsb
pop
aad
lods
ja
push
test
int
pop
orb
cmpsb
lahf
fdivp
push
out
lret
sbb
push
out
pop
jg
jnp
and
in
xor
adc
test
repz
sub
cmp
xchg
out
pop
stos
inc
mov
leave
pop
andb
pop
popa
int3
ds
jge
push
aas
xor
mov
fs
arpl
push
fbstp
stc
out
mov
sub
mov
or
idivl
js
mov
out
mov
shlb
or
out
shlb
dec
scas
dec
loope
ljmp
ss
addr16
push
call
push
pop
push
jmp
stos
adc
loopne
dec
pop
addl
push
imul
test
imul
jp
std
jecxz
das
push
fisubl
and
cmp
fisttpll
xchg
test
js
xchg
cmp
cltd
fsts
mov
xor
test
je
adc
lock
pop
inc
sbb
xor
mov
into
pop
shr
cmp
add
push
adc
push
adc
aaa
fiaddl
enter
jno
test
aas
xchg
mov
popa
insb
adc
pusha
mov
cmc
daa
mov
push
ret
mov
les
push
inc
jo
and
mov
adc
xchg
pop
fdivrp
in
icebp
sbb
cmp
inc
xor
pop
aaa
xchg
es
adc
outsl
in
xor
shl
or
ja
cmpsb
xor
repz
enter
movsl
lods
pop
and
mov
push
push
fcompl
cmp
adc
add
pop
dec
ds
out
test
jb
dec
sub
xor
shrb
mov
sub
fistl
loope
xlat
and
sbb
mov
hlt
daa
inc
cmp
flds
or
push
imul
outsl
and
das
mov
js
xchg
int3
arpl
imul
outsl
mov
mov
pop
push
fs
adc
mov
shlb
imul
lret
aas
clc
mov
mov
out
xchg
mov
jle
xchg
adc
cmp
ret
fildll
mov
fnstenv
stos
inc
fidivs
lods
pop
aas
stc
adc
cmc
aaa
add
scas
call
nop
in
cmp
jbe
push
ljmp
ret
cmp
lds
or
mov
flds
fidivrs
xor
inc
sbb
mov
data16
bound
aam
sbb
or
cmp
jns
inc
fbld
xor
ja
cmp
adc
scas
test
jp
xlat
and
and
push
jp
aam
inc
jno
cwtl
and
inc
shrl
stos
dec
loopne
sbb
das
jnp
sbb
out
jae
pusha
ss
push
or
cmp
repnz
adc
jo
inc
xchg
xor
or
and
xor
in
shlb
inc
jl
pop
cltd
push
scas
xchg
jl
cwtl
out
xchg
cmpsb
sbb
dec
fwait
repnz
push
cmpb
loope
mov
dec
cmc
push
test
mov
xor
ret
outsb
lea
imul
outsb
fsubs
push
rcrb
xchg
mov
mov
je
enter
loopne
inc
mov
push
sub
mov
xor
xchg
lods
fistpll
push
lock
mull
cwtl
icebp
adc
dec
lret
ja
loop
jo
xor
leave
mov
lret
fmull
inc
push
cmp
aas
popa
push
fiaddl
push
jo
out
push
fcom
push
loop
sbb
test
cmp
mov
mov
stos
inc
pop
aad
jnp
sahf
aad
pop
fnsave
sub
out
insb
arpl
outsb
jmp
pop
sbb
sti
loop
sub
in
sti
sbb
ds
jae
sti
and
mov
je
cmpsl
dec
adc
nop
xchg
xchg
ss
sbb
fbstp
into
in
xor
bound
cmpsb
les
xor
fiaddl
fwait
jae
jb
cmp
add
pop
and
pushl
ja
sub
fucomip
gs
lret
bound
adc
test
mov
fldcw
pandn
lahf
test
or
movsl
mov
mov
jmp
jo
xchg
inc
ret
mov
cmpsb
bound
and
sbb
cld
ficoms
mov
sub
lds
pop
stc
add
ret
pop
testl
and
fsubs
outsl
push
sbb
add
inc
xchg
fists
pop
mov
iret
sub
sarb
decb
repnz
dec
and
dec
push
filds
repz
xchg
jmp
mov
stos
test
inc
daa
ds
lcall
add
pop
pop
mov
sbb
add
cmp
sub
ficomps
cmp
stc
push
lcall
gs
cmp
add
out
sub
pop
scas
sarl
stos
jo
mov
shlb
mov
mov
mov
lock
ja
lcall
xchg
icebp
mov
pusha
loop
mov
ds
shl
push
fs
inc
adc
lods
push
push
jb
or
xor
iretw
inc
fidivrs
fwait
loop
cltd
icebp
mov
lret
repnz
fistl
mov
pop
push
loop
add
out
nop
ss
push
cmc
mov
and
stos
push
loope
loopne
add
int
lds
jmp
pop
or
mov
addr16
test
push
lods
jbe
das
ss
ficoml
sub
int
xchg
hlt
stos
test
jecxz
pop
cmc
and
jl
xchg
fidivrs
mov
pop
sub
cli
xchg
into
aas
add
mov
inc
fs
jb
mov
xchg
std
dec
stos
cmp
into
orl
sbb
icebp
pop
jmp
xor
xor
icebp
jmp
outsl
push
int
pop
mov
popf
or
gs
push
ret
cmpsb
out
sbb
adcb
xchg
push
inc
incb
scas
into
mov
sbb
aaa
bound
cmpsl
sub
mov
sub
jb
cmpl
nop
or
pop
mov
dec
inc
fisubl
in
xor
cmp
shll
push
push
cld
sub
sahf
sub
sub
movsb
inc
push
push
mov
idiv
shll
pop
shlb
xchg
add
or
or
cld
xchg
cmp
jl
sbb
popf
popf
adc
ja
mov
scas
mov
int3
cmp
stos
mov
pop
cmp
jmp
inc
rorl
xchg
insb
and
sub
jb
and
inc
add
jmp
ds
int
repnz
pop
cwtl
iret
push
jne
pop
mov
fwait
inc
fisubs
cmpsb
mov
pop
notl
sub
cmpb
sub
sub
add
mov
scas
xor
mov
js
inc
sub
ja
push
gs
cwtl
sbb
inc
cmpsb
xchg
mov
out
jg
xchg
in
dec
fcmovnbe
inc
dec
dec
out
mov
dec
pop
inc
gs
mov
arpl
in
xchg
adc
pop
cmpsb
sbb
js
jns
daa
cmpsl
add
sbb
mov
mov
xchg
rcll
cmp
sbb
das
aas
xlat
scas
cmp
mov
or
mov
mov
in
cmpsl
rcl
xor
shrb
cmpsb
lds
xor
mov
ficoms
fsubrl
mov
xlat
adc
or
rcrl
cmp
jl
adc
fbstp
sbb
push
inc
sbb
mov
pop
inc
loopne
notb
sub
outsl
loop
mov
pop
dec
inc
pushf
out
cmpsl
xchg
fists
inc
test
mov
cmp
cwtl
push
lods
lahf
inc
shll
mov
add
dec
jg
in
dec
lret
je
cmp
clc
cwtl
cmp
mov
lret
stos
fisubrs
mov
out
dec
and
mov
mov
insl
jno
test
wrmsr
imul
or
das
cmp
pusha
push
les
or
xchg
cmp
sarl
shrl
dec
shlb
xlat
and
cmpsb
mov
arpl
push
add
sub
ss
inc
rcl
and
in
test
aad
stos
es
ljmp
inc
mov
mov
adcl
xchg
loop
dec
inc
jl
adc
jns
orl
ja
jecxz
ret
bndstx
push
addl
xlat
aad
idivb
sub
xchg
xchg
ljmp
or
dec
dec
movsb
mov
xor
test
push
inc
mov
popa
inc
sbb
push
lods
pop
or
add
cld
ljmp
cmp
mov
and
add
inc
xchg
cwtl
adc
xchg
cld
gs
iret
mov
cld
cmp
int3
ja
mov
dec
jmp
and
adc
adcb
testb
mov
inc
push
sub
jecxz
js
sub
mov
fcmove
xor
push
movsb
cmp
sti
inc
sub
push
fwait
dec
sbb
cld
loop
mov
inc
mov
in
je
stos
leave
jb
and
xchg
pop
test
les
cmpsb
mov
jmp
and
sar
in
push
mov
cmp
into
push
xor
mov
mov
inc
test
xchg
mov
sbb
xchg
adc
sti
bound
fs
inc
sbb
adc
sub
mov
inc
out
ljmp
xchg
fwait
pop
mov
jge,pn
push
and
bound
in
ret
test
xor
arpl
xchg
movsb
cli
and
add
inc
add
loop
xchg
mov
push
dec
test
aad
xchg
cmp
test
sbb
stos
int3
dec
mov
dec
push
jmp
or
push
js
and
ficoml
call
or
adc
sbb
cmp
cmp
mov
in
test
loope
pop
xchg
rcrb
mov
sbb
inc
fisubrs
mov
mov
sbb
enter
loopne
mov
jb
mov
mov
fwait
push
loop
stos
adc
mov
pop
lock
fs
lea
fiaddl
scas
addl
mov
mov
pop
jo
mov
push
mov
cmp
outsb
addr16
data16
fwait
adc
fcomps
mov
cld
or
fwait
pop
in
mov
stc
and
data16
lret
js
popf
pop
mov
mov
push
fidivl
pop
lods
loope
xchg
jl
lds
into
cmp
mov
js
fsubrl
loopne
aam
in
pop
jne
sub
push
xchg
in
in
and
std
test
mov
sub
lock
add
cltd
add
mov
dec
mov
outsl
into
lret
or
pop
lock
xor
adc
mov
or
dec
pop
rcl
add
in
stos
xchg
in
repnz
shll
sub
cmp
add
pushf
dec
xlat
mov
xchg
aas
and
iret
cmp
or
ja
insb
mov
pop
mov
sub
mov
gs
add
adc
mov
xchg
fisubs
mov
mov
cld
test
fnsave
inc
sbb
sahf
mov
movsl
add
fnstcw
mov
test
popf
pop
xor
mov
mov
out
xchg
jmp
test
push
mov
mov
adc
daa
aam
ret
sub
in
mov
sbb
repnz
xchg
dec
cmpsl
add
int
dec
lods
dec
cmc
mov
xlat
call
jmp
mov
lahf
mov
rorl
xchg
out
in
loop
xchg
lds
pop
jb
push
js
fsts
inc
pop
mov
rclb
in
mov
mov
test
addr16
push
frstor
popf
sub
sahf
mov
adc
je
lock
inc
xchg
cwtl
push
or
mov
sti
mov
sbb
xchg
mov
mov
scas
lods
pop
or
xor
mov
loope
xchg
sub
add
lret
push
fsubrs
inc
add
enter
or
pop
xor
je
lcall
lods
xor
sbb
lcall
jecxz
out
sub
cltd
jnp
dec
and
outsl
mov
mov
jns
in
xor
push
jo
stc
jg
adc
mov
aad
and
sti
jne
insl
jb
jae
repz
cli
jne
jnp
repz
iret
jb
js
add
adc
daa
push
push
dec
push
push
sti
les
lahf
cmc
sbb
repz
push
pop
divb
gs
mov
push
lcall
jmp
xchg
sub
lahf
jmp
push
jle
inc
movsb
mov
and
je
lods
mov
pop
in
shl
xor
dec
notb
aaa
js
and
jo
fidivl
push
fadd
mov
icebp
mov
jbe
mov
mov
loop
je
in
xchg
cwtl
hlt
or
nop
or
sub
das
jb
mov
das
data16
imul
xlat
xor
inc
dec
jecxz
fsubrl
mov
sub
sub
dec
jns
dec
mov
enter
fistpll
push
pop
jo
mov
sbb
cmpsl
scas
mov
in
jbe
sbb
xchg
mov
aas
leave
gs
jae
dec
fildl
jns
adc
mov
xchg
push
ljmp
add
clc
jmp
and
pop
cmp
loope
jp
mov
roll
loopne
dec
adc
xchg
mov
data16
and
pop
lahf
inc
jbe
jg
add
std
xor
sbb
leave
js
lods
jmp
mov
scas
sbb
mov
sbb
movb
les
test
sub
call
dec
xchg
sub
mov
add
or
leave
jle
in
inc
inc
cmp
lods
jmp
or
and
incb
clc
dec
xchg
dec
adc
es
adc
and
cmpsl
aaa
and
ljmp
or
pusha
mov
xchg
andps
fnstenv
push
push
mov
ss
sahf
loop
lahf
out
adc
cmp
or
ds
jecxz
sbb
add
icebp
cmp
icebp
mov
fnstcw
xchg
cmp
clc
pusha
sbb
es
pop
sub
mov
jne
imul
mov
or
fmuls
stc
jb
rcrb
mov
pop
mov
pushf
push
pop
cli
push
adc
ss
in
lea
sub
pop
imul
push
mov
and
shll
repz
mov
loope
jo
shrl
cmp
ret
or
inc
outsb
add
pop
dec
inc
xchg
lock
cltd
xlat
xchg
dec
int
xor
or
and
cmp
into
push
shll
out
push
cmp
fwait
outsb
lods
jb
fxch
lahf
pusha
std
inc
shrl
daa
mov
lds
mov
jbe
jbe
stos
mov
test
jl
iret
fucomp
and
test
push
and
push
pushf
stos
inc
mov
fidivrl
hlt
je
pop
push
cmp
lock
loop
pop
inc
ljmp
mov
sbbb
fxch
aaa
sarb
insb
outsb
scas
inc
in
pop
ja
add
jmp
mov
jns
mov
jno
or
pop
loope
sub
jnp
sub
mov
std
cmpb
and
inc
and
push
fldenv
into
dec
fbstp
std
leave
testb
or
jb
je
adc
loop
add
out
inc
dec
sub
jb
dec
jmp
push
clc
jmp
insb
mov
cwtl
adcl
xor
pop
nop
pop
mov
fimuls
jne
push
jg
jno
dec
int3
xor
dec
pop
enter
test
ljmp
push
cmp
out
mov
jge
shlb
push
inc
fdiv
mov
dec
aas
in
dec
lea
addr16
inc
pop
fwait
jecxz
jb
xchg
and
mov
adc
addl
jmp
add
jne
push
and
push
int
lcall
popa
enter
sbb
in
imul
and
dec
lret
adcb
mov
divl
mov
pusha
xchg
jnp
idivl
sub
lods
xor
or
js
hlt
call
lock
subb
movsl
sub
pop
lahf
je
or
rorb
cmp
loopne
jae
cld
inc
les
adc
clc
inc
push
xor
dec
fcmovb
cltd
xor
cld
in
jp
pop
ljmp
call
fisubs
mov
mov
lods
jg
sbb
es
and
jns
cmp
out
fldenv
sub
mov
push
ljmp
or
out
sub
xor
xchg
mov
lds
add
mov
aas
mov
inc
pop
les
jnp
in
loope
add
leave
lods
add
cmp
aas
add
xor
push
mov
jle
das
xor
ljmp
jae
imul
std
xchg
mov
push
fwait
push
sbb
imul
cltd
cmc
ja
xor
sbb
rcr
xchg
mov
loopne
arpl
mov
fisubs
pop
pop
jbe
pushf
fucomp
xchg
lret
mov
loope
push
je
inc
adc
xchg
aad
sub
repz
and
add
push
and
stos
push
fld
dec
dec
cmc
faddl
ret
and
or
inc
pop
push
in
jae
nop
push
xchg
nop
adc
gs
cmp
aaa
test
dec
xor
aad
rcl
imul
shrb
int
or
hlt
sbb
adc
ja
in
xor
rorb
loop
mov
cmp
push
jns
loope
xchg
xor
and
add
data16
std
scas
mull
hlt
cmpsb
sbb
nop
das
or
lods
shrb
inc
test
mov
lret
fst
sahf
sub
and
lea
movsl
cli
add
jae
lret
inc
aas
sarb
pop
sbb
frndint
sub
jecxz
mov
cmp
shll
mov
sbb
dec
pushf
xchg
adc
dec
sbb
lds
pop
lods
push
jge
jmp
arpl
mov
cmpl
and
fs
mov
mov
adc
push
inc
scas
jno
inc
xchg
mulb
into
enter
pop
pop
jnp
sti
std
xchg
andl
pop
push
sub
ja
cmc
jo
fildl
adc
xor
cld
dec
mov
bound
mov
pop
idivl
repnz
ds
cmp
les
mov
daa
adc
cmpsl
mov
daa
cmpb
mov
insl
add
in
and
pushf
mov
call
sbb
xchg
mov
jg
push
in
repnz
out
add
gs
popa
mov
jno
cmp
push
cmp
sub
mov
pop
loope
adc
test
sub
or
and
test
popf
lret
pop
cmc
jmp
cwtl
add
fwait
pop
or
lahf
pop
mov
mov
rorb
dec
sahf
dec
push
jmp
mov
sahf
call
cmp
int
mov
xor
int3
lret
push
aas
jl
test
push
mov
xchg
pushl
fldcw
cmp
daa
mov
ja
icebp
addr16
inc
imulb
nop
push
or
fdivr
dec
xorl
pop
mov
mov
xor
jae
enter
nop
jle
add
sub
mov
jle
ds
or
fidivrs
or
push
inc
gs
and
notb
mov
push
std
shl
cld
inc
imul
cli
rclb
xchg
in
push
in
or
mov
xchg
jb
or
or
cltd
dec
push
cltd
mov
jmp
push
ret
rcr
sub
test
xlat
or
or
rol
dec
mov
fldcw
xchg
sbb
dec
in
cmp
cmc
xor
push
cmp
pop
int3
sbb
jb
mov
movsl
test
shll
mov
es
in
xorl
pushf
lock
lods
push
mov
mov
sub
cltd
mov
sbb
ljmp
leave
test
xchg
jno
mov
fsubl
es
andl
mov
inc
pop
mov
dec
ss
frstor
mov
add
push
cld
pop
add
pop
xchg
lahf
mov
addl
aas
mov
pop
ret
sbb
in
pop
sub
in
xor
cwtl
daa
xchg
sbb
mov
es
inc
dec
fidivrl
in
add
mov
pop
in
gs
jbe
xchg
xlat
mov
in
add
and
iret
cmpsl
ret
and
test
fsts
loope
pop
cmp
aam
jge
arpl
dec
sbb
jle
cmc
dec
in
cmp
pop
es
aam
je
test
bound
push
daa
xor
xchg
dec
faddl
xor
inc
pusha
or
ud2
movsb
aaa
pop
mov
cmp
inc
adc
cmc
sbb
in
jp
cmpsb
cli
xchg
sbb
invlpg
sbb
mov
adc
push
mov
dec
pop
icebp
out
lahf
test
flds
int
cli
cli
mov
rcrb
out
mov
clc
lods
cmp
sub
mov
loopne
not
push
inc
lret
out
push
sbb
jnp
cmpsl
xchg
int3
xor
or
jnp
loop
xor
inc
pop
lock
push
aaa
push
repz
cmp
movzwl
inc
mov
scas
push
sub
jb
sbb
stos
sbb
test
out
in
sub
add
js
test
out
xchg
scas
and
dec
dec
cli
daa
push
sbb
ret
pop
sub
loope
sub
call
jg
sub
dec
and
out
adc
and
iret
fildl
mov
mov
mov
loopne
dec
jg
jle
add
shlb
in
mov
and
dec
pop
xor
sub
adc
jbe
jg
xor
mov
add
and
xchg
testl
push
in
in
dec
jmp
ljmp
aad
test
dec
leave
cltd
sub
xchg
push
xor
cmp
hlt
push
push
and
sbb
shrb
mov
fs
sub
test
push
or
cli
popf
cwtl
and
or
xchg
jge
fwait
cmpsl
popf
bound
call
sbb
dec
loopne
repnz
dec
icebp
xor
into
inc
lret
pusha
adc
mov
xor
cmpsb
popf
aam
pop
shl
lds
pop
mov
push
scas
and
ficoms
xor
sahf
daa
int
cmpsb
in
and
enter
ss
pop
add
into
rcrb
xchg
aam
jns
mov
sbb
adc
imul
mov
mov
jle
mov
ret
sti
call
shll
mov
stos
fmull
xor
push
ret
fildll
jl
push
or
inc
aaa
in
lock
jge
insl
outsb
aaa
loopne
lock
subl
negl
sub
imull
jge
lds
ret
arpl
test
es
idiv
and
sbb
lcall
out
mov
cmc
sbb
out
stc
mov
inc
xor
xor
sub
dec
push
nop
jns
jl
mov
cmc
inc
out
mov
mov
push
rcrb
mov
fsubrp
mov
xor
jne,pn
pop
mov
mov
and
add
push
fwait
push
fs
and
adcl
enter
inc
mov
inc
push
xchg
mov
mov
push
add
sub
xchg
pop
add
loop
cmp
out
mov
mov
dec
xor
mov
and
and
mov
stos
les
jo
insb
xchg
cmp
daa
leave
mov
push
int
movsl
add
sub
dec
sub
xor
push
fdivs
jecxz
les
enter
iret
loope
pop
mov
out
jge
outsl
pop
stc
rcl
cmc
jno
mov
mov
leave
rolb
ljmp
sbbl
shrb
cwtl
jnp
mov
jbe
pop
mov
jns
mov
test
jns
outsb
ja
jb
mov
fnstcw
in
mov
push
mov
xor
xor
inc
sub
enter
popf
xor
cltd
lea
sub
pop
int3
iret
out
jl
jo
xor
sahf
mov
pop
mov
or
mov
push
push
xor
vmovntps
xchg
sahf
movsl
repnz
mov
mov
movsb
fdivrs
jmp
mov
push
in
sub
jmp
aaa
xchg
sub
loope
inc
iret
imul
data16
dec
gs
jae
movsl
in
push
dec
lahf
xor
aas
fcomps
inc
movsb
jle
fsubl
jbe
js
and
imul
out
xchg
sahf
lods
lahf
mov
imul
xchg
mov
lods
out
adc
fidivs
test
xor
pushf
in
fwait
aas
mov
xchg
mov
imul
testb
outsl
jns
adc
sbb
jnp
xchg
sub
hlt
rcl
or
sahf
dec
lds
sbb
pop
rcrl
pusha
sbb
mov
cmp
pop
mov
in
nop
js
mov
ja
pop
pop
push
mov
pop
imul
mov
pop
sub
pop
mov
mov
js
cmp
pop
idiv
cmp
cmpsl
sbb
rorb
pop
fmul
sbb
cmc
andps
push
inc
neg
adc
clc
lahf
inc
pop
xchg
scas
sub
and
pop
sub
add
sbb
outsl
js
insl
cmc
sbb
imul
pop
jnp
mov
out
mov
dec
insl
jnp
mov
sbb
push
sub
push
dec
dec
scas
lret
out
rcll
jmp
push
lds
insb
mov
or
jecxz
js
mov
lcall
sub
mov
mov
aad
scas
or
push
mov
ja
arpl
and
jnp
cmpsl
sub
or
out
imul
and
jno
cld
jl
lods
xchg
push
test
ret
stc
fdivl
leave
std
dec
jae
stos
mov
pop
dec
stos
push
ljmp
out
inc
jmp
push
lock
mov
add
pop
pop
outsb
je
fidivrl
push
inc
shl
sub
dec
lret
jae
jo
push
and
add
popa
or
pusha
rclb
mov
clc
dec
dec
cmp
push
in
dec
adc
mov
into
popa
fdivrl
repz
and
xchg
fwait
adc
jbe
inc
and
dec
pop
int
int3
mov
and
pop
add
cmp
xlat
pop
inc
xchg
popf
cli
lock
cmp
and
cmp
xchg
popa
push
jge
pop
imul
ss
xchg
mov
xor
adc
and
dec
jp
push
jns
hlt
mov
aaa
call
lds
sbb
jle
dec
mov
data16
hlt
push
jle
cltd
mov
dec
pop
inc
pop
sub
rol
aas
add
sub
push
push
in
rcll
ret
add
int3
dec
sbb
mull
lret
inc
out
cmp
not
mov
inc
jb
push
aaa
addr16
shll
lret
add
popa
push
adc
shrl
or
incb
sub
sbb
std
das
jo
adc
jle
cmp
inc
push
sub
jg
imul
inc
outsl
test
dec
adc
loopne
xchg
jp
pushw
aas
out
mov
test
shufps
xor
jecxz
and
pop
push
ret
xchg
sub
adc
pop
pop
lcall
sbb
inc
lea
sbb
and
cld
mov
scas
addb
xor
mov
addb
pop
ja
add
jg
jnp
jge
xchg
cmp
adc
insl
add
aas
hlt
addr16
jl
outsb
mov
insb
mov
cmpsb
cmp
mov
xchg
jge
div
dec
push
movd
xchg
dec
subb
imul
into
lahf
pushf
repnz
xor
pop
xor
adc
push
or
cmp
adc
rclb
xor
lret
lds
push
push
sbb
and
xor
out
xchg
add
and
mov
jl
push
push
mov
fnstcw
cs
shlb
je
cmc
int3
fdivrs
orb
roll
js
pop
test
or
ss
or
mov
xchg
mov
imul
lret
xlat
js
repnz
pop
ja
fistl
cmpsl
or
and
shl
xor
shl
xchg
sub
mov
or
imul
adcl
cmp
not
sbb
dec
dec
sbb
dec
insl
sub
jns
inc
sahf
pop
xchg
lods
out
insb
rcrb
ret
jb
jecxz
mov
adc
test
fldenv
inc
xor
pop
push
ljmp
sarl
pop
inc
arpl
cmp
or
dec
and
push
ds
xor
inc
aam
xor
fldenv
xor
mov
xor
out
into
sahf
and
pop
cli
jno
sub
es
popa
pop
insb
sti
xchg
xchg
imulb
inc
dec
ds
ret
ss
pop
shufps
gs
bound
cmpsb
sub
sbb
pushf
push
stc
lea
test
xlat
adc
and
fistps
xor
fsts
stos
jmp
int3
mov
mov
mov
rep
shrb
div
scas
xchg
stos
and
cmpsb
xchg
jb
jmp
bound
jmp
popa
fdivr
lret
fsts
loop
jb
enter
cmp
stos
mov
inc
icebp
cmp
scas
int3
xchg
mov
aad
ss
pop
aaa
cmc
push
and
inc
and
pop
mov
xchg
sub
sbbb
das
clc
dec
xor
sbb
aas
push
mov
mov
adc
nop
sub
sti
fxch
mov
outsb
aam
outsl
sbb
fistl
push
mov
jae
mov
jmp
jp
push
je
das
dec
dec
add
cmpb
ds
mov
mov
jge,pn
push
xchg
pusha
pop
pop
cmp
cmp
scas
sub
adcl
out
jno
inc
into
es
fsubl
jg
jbe
ljmp
cmp
mov
int3
aad
jl
repnz
std
mov
pop
mov
push
xchg
jle
xchg
dec
cmp
inc
add
add
or
xchg
jbe
int
in
cmp
mov
sub
dec
mov
sbb
scas
inc
sbb
xchg
out
mov
lea
mov
push
cmp
iret
loop
pop
dec
ret
mov
js
pop
xor
sahf
add
xor
adc
xor
jne
scas
xchg
mov
inc
dec
xchg
cmp
lcall
ret
in
mov
mov
dec
and
jmp
fdivs
push
xchg
cmp
and
fdivl
jnp
ret
repnz
mov
inc
je
and
repz
xchg
fsts
push
cmpb
loop
repnz
and
pop
aam
dec
outsb
mov
and
jbe
pop
dec
or
ds
sub
mov
dec
dec
dec
out
adc
sub
insl
add
add
mov
add
cwtl
in
loop
jne
add
sarb
xchg
mov
mov
je
clc
fsubs
leave
mov
cs
fcompl
sti
xchg
dec
stc
mov
mov
mov
mov
loop
enter
mov
mov
mov
sbb
sahf
adc
rclb
repz
and
lods
clc
rcll
mov
das
lret
lods
jmp
jecxz
andl
addl
out
adcb
fwait
dec
and
test
movsl
dec
lods
jecxz
fisubrs
cmp
aaa
shl
add
roll
inc
out
sub
pop
rolb
hlt
cwtl
imulb
mov
add
cmp
jo
xchg
pop
jmp
jge
mov
repnz
in
jo
mov
mov
test
inc
jp
jns
xchg
adc
adc
movsb
hlt
cmpsl
ret
cmp
sbb
mov
ret
imul
jle
xchg
sub
mov
cmpsb
stc
daa
adc
movntq
mov
xlat
loop
push
sbb
inc
or
and
xchg
mov
dec
loope
andb
fnsave
pop
cli
mov
popa
dec
ror
jl
js
push
mov
xorl
stos
sub
imul
xchg
mov
sub
inc
pop
mov
loopne
mov
cmpsl
int3
rcll
or
mov
mov
outsb
cmp
lahf
fdivrp
je
jecxz
pushf
in
cmc
mov
dec
daa
jecxz
cmp
add
sub
test
xchg
mov
mov
xchg
xorb
and
repnz
mov
fsubr
mov
je
cmp
out
fidivs
xor
movzbl
or
test
pop
leave
adc
repz
mov
sti
lret
loop
push
lea
sbb
clc
cwtl
fstps
add
xchg
push
inc
divb
in
add
push
jnp
mov
or
cmp
inc
idivl
cwtl
movsb
or
sub
stc
jl
pop
cltd
mov
aad
pop
mov
or
in
mov
dec
jmp
inc
add
push
cmc
add
test
sysret
enter
xchg
xchg
mov
dec
push
insl
jae
decl
mov
fdiv
mov
adc
and
int
sbb
push
jb
repnz
or
mov
addb
nop
mov
push
mov
jbe
addb
sti
rorl
dec
lods
nop
pop
pmulhuw
lcall
jno
divl
sub
negl
mov
stos
push
cwtl
icebp
jp
sub
rorl
cmp
in
lret
push
sbb
mov
or
add
push
leave
cwtl
push
mov
pop
cmp
mov
dec
idiv
sbb
nop
aaa
into
inc
fbld
jbe
leave
mov
popf
push
sub
mov
adc
fsubl
cs
shl
jae
lods
mov
jns
mov
js
andb
shlb
or
or
mov
inc
stos
push
jle
lods
xchg
xor
cmpsl
inc
cmp
jle
test
mul
sub
push
aam
xor
stc
jge
inc
in
xchg
addr16
mov
jb
daa
mov
movsl
dec
mov
inc
test
xor
lds
sub
bnd
jno
jl
std
cltd
shlb
inc
rolb
mov
sub
or
cmp
jns
pop
pop
ds
les
mov
dec
lcall
pusha
nop
inc
push
or
lret
das
jl
and
push
inc
rcrl
jns
dec
sub
mov
xchg
rclb
pop
icebp
cmp
iret
and
adc
jnp
into
les
push
jg
inc
jo
jl
shll
mov
sbb
sub
mov
js
mov
mov
add
fucomip
imul
xor
clc
aaa
int3
jle
idiv
jnp
or
dec
pop
call
or
mov
sbb
in
adc
gs
xchg
gs
stc
pop
xor
test
das
pop
dec
rcll
stos
fnstenv
rolb
push
outsl
rol
sarl
aas
insl
mov
inc
mov
adc
jg
sti
xchg
sbb
add
mov
and
ja
jbe
out
std
dec
das
lods
sbb
pop
mov
rcrl
add
fcomip
push
roll
dec
setp
xor
push
out
sbb
push
push
sub
call
pop
jnp
sahf
jne
xor
and
lret
cmp
mov
leave
ljmp
lds
inc
fldt
loop
xor
lcall
insl
add
xor
nop
andb
mov
out
aaa
xor
and
cmc
lods
push
sub
mov
jmp
ficomps
adc
inc
mov
cmp
int3
loopne
add
inc
adc
or
push
in
xor
dec
mov
pop
sub
adc
loop
inc
jge
jae
or
sub
test
test
or
xchg
lea
dec
out
xchg
sub
jecxz
mov
dec
bound
insl
sbb
and
push
xor
aad
adc
sbb
rcrl
jg
and
ss
and
mov
cmp
inc
repnz
ds
xor
fiadds
push
jle
xchg
movsl
cmp
push
add
outsb
inc
repz
mov
xchg
in
ljmp
test
mov
int3
mov
popa
mov
lahf
jnp
movsl
cmp
mov
sti
pop
inc
pop
test
shlb
movsl
push
loopne
xchg
outsb
clc
rol
ret
add
pop
xchg
mov
mov
fs
mov
pop
jp
sub
jae
mov
das
insb
push
call
mov
or
in
lods
ljmp
popf
stc
and
test
data16
xchg
mov
push
cmp
lret
mov
and
jecxz
test
xchg
ljmp
mov
loopne
ljmp
jo
mov
clc
xor
xchg
mov
les
aas
insl
xor
aad
insl
add
hlt
cmpb
stc
cmp
ror
cwtl
popa
push
inc
roll
stc
test
insb
aam
pop
nop
pop
ds
or
cli
inc
js
push
jmp
xchg
or
insb
sti
push
scas
call
xchg
mov
out
cmp
pushf
ja
xchg
mov
xchg
or
xchg
and
aam
sub
jle
mov
mov
loope
cmp
aad
rcrl
nop
mov
mov
jge
xchg
add
out
dec
mov
fdivp
aas
pop
jo
mov
pop
mov
ret
jg
iret
fwait
jno
dec
sub
loopne
shlb
mov
push
mov
icebp
jnp
cmp
aam
sub
sbb
ret
pop
sub
inc
sub
add
xchg
inc
and
loope
push
fs
in
mov
scas
call
jnp
sahf
ss
movsl
xor
ja
mov
scas
mov
repz
dec
jp
jp
scas
lds
iret
mov
sti
adc
test
and
fsts
nop
jecxz
ret
mov
push
xchg
loop
mov
call
imul
leave
or
aaa
pop
xor
stc
push
mov
insb
cmp
and
popa
lahf
lret
inc
add
out
push
cs
jo
pusha
repz
jecxz
lock
mov
push
mov
inc
outsl
hlt
test
xorl
mov
mov
or
stos
scas
hlt
push
push
jno
xor
scas
jle
rorl
jle
stos
pop
mov
add
dec
mov
movl
sbb
in
pop
ljmp
rorb
mov
cmpsb
in
out
xor
insl
rclb
inc
dec
cmp
lea
loope
jns
jmp
pop
lcall
scas
movsb
aad
jb
pop
int3
rcr
jo
jbe
sbb
add
cs
add
sbb
mov
dec
jae
movsb
inc
int3
inc
fsubrs
negl
cmpsb
sbb
adc
inc
dec
jbe
inc
push
repz
cwtl
adc
scas
mov
jp
jmp
xchg
cltd
jp
xchg
cmp
pop
jno
push
dec
push
pop
mov
cli
aad
insb
pop
adc
cmp
pop
hlt
push
inc
call
repz
xchg
cmp
test
add
inc
mov
pop
in
imul
insl
mov
cmpsb
pusha
sub
fldl2t
cmc
mov
es
dec
dec
loope
adc
dec
loop
cmc
pushf
in
iret
pop
mov
mov
dec
mov
loopne
or
mov
pushf
addb
std
pop
xor
dec
sbb
push
sub
mov
xor
rcrl
mov
jae
cwtl
sbb
frstor
out
xorl
dec
inc
inc
leave
push
mov
and
pop
insb
fdivs
adc
add
sahf
mov
push
fdivl
stos
stos
fwait
out
xchg
sbb
icebp
pop
mov
mov
push
jmp
jo,pt
repz
in
pop
push
sub
das
push
iret
xchg
outsl
out
mov
mulb
xor
out
push
ss
jecxz
mov
movsl
sbb
cwtl
mov
cltd
movsb
mov
xchg
cmp
and
scas
sbb
cld
scas
and
in
or
mov
sub
inc
xchg
jns
sub
iret
popf
cmc
xor
gs
mov
loope
ds
push
std
xchg
pushl
adc
sub
inc
jno
movsb
int3
cmp
mov
data16
or
scas
adc
lock
lret
sti
push
out
xor
fistpll
pop
xchg
int3
les
mov
arpl
cmp
sbb
inc
aam
inc
pop
fbstp
push
fwait
add
fs
and
xor
jne
jno
xchg
cs
sub
in
out
cmpsl
cmp
pop
stos
mov
shll
lret
lret
sarb
lock
in
xor
push
je
fildl
cld
lods
sti
fsubrs
daa
cld
xchg
pop
dec
cmpsl
jle
mov
or
into
add
sbb
shl
js
loop
adc
xchg
pop
push
sub
cli
fsubl
inc
inc
data16
bound
fs
push
pop
cmpb
movsb
add
bts
inc
sti
dec
in
mov
rcl
iret
mov
mov
mov
test
mov
cmpb
jo
leave
inc
sub
xchg
or
and
das
fidivrl
icebp
jl
stos
das
nop
jne
mov
sbb
fwait
sbb
lds
jbe
aas
fwait
out
in
cmp
loop
xorl
fsubs
pop
xor
das
cmp
jns
popa
jl
lcall
cwtl
std
nop
and
cmp
adc
sahf
mov
jg
cmpsl
pop
jae
mov
fcmovb
pop
cmp
push
loop
pop
mov
bound
adc
push
into
mov
pop
jne
movups
test
adc
imul
xor
sbb
xchg
clc
xchg
jle
dec
pop
push
sbb
or
je
sub
add
imul
pop
xor
pop
sbb
xlat
rcrl
pop
mov
in
sbb
xor
push
or
out
xor
insl
sarb
sbbb
pop
sahf
lock
sub
ja
mov
fists
lods
ljmp
popf
add
mov
stos
out
cmp
mov
in
shll
cmp
out
push
and
mov
out
ja
int3
lcall
stos
dec
jmp
dec
jge
xlat
scas
insl
nop
push
fistpll
lea
stc
dec
aad
mov
push
mov
imul
mov
in
stos
xor
sbb
lret
inc
lds
in
aaa
mov
lret
movsb
xchg
pop
mov
ja
les
and
iret
dec
inc
fs
shr
mov
cmpsl
int
fsubr
mov
test
mov
les
add
cmp
das
testl
leave
test
jae
pop
stc
test
push
cld
arpl
xchg
mov
and
dec
shll
add
xchg
add
fistps
fs
and
push
jae
add
lret
rorb
ljmp
mov
icebp
movsl
adc
aaa
fisubrl
nop
or
mov
aas
jae
mov
dec
pop
pop
jmp
pop
dec
adc
jb
sub
mov
mov
jno
das
mov
pop
sub
jns
adc
negl
scas
call
pop
stos
mov
adcl
adc
cwtl
and
xchg
pushf
cli
enter
jl
jbe
mov
fisubs
pop
xchg
or
xchg
bound
push
cmp
pop
xor
cmp
addr16
popf
push
mov
push
outsb
out
lods
inc
pop
out
fcmovu
cmpsl
sbb
xlat
out
in
lcall
outsl
push
out
setno
cmp
add
mov
ucomiss
imul
cmp
aam
xor
xorb
icebp
sbb
push
inc
inc
int
xchg
jl
jg
add
sahf
repz
jnp
cmp
or
push
pop
and
mov
in
add
aad
xchg
jae
cli
pop
xchg
pop
imul
lods
rorb
paddb
mov
test
cmp
test
std
pop
pop
scas
fwait
pop
js
shr
dec
test
push
rcrl
dec
shll
rcrb
xchg
call
sbb
inc
movsl
cwtl
hlt
dec
inc
leave
xor
leave
xorb
sub
jg
lcall
xlat
rol
sbb
xlat
mov
mov
cmp
rcll
outsl
sarb
sbb
adc
mov
rorl
movsl
fiadds
xor
cmp
call
int3
je
ror
lret
push
sarb
iret
loop
xor
fs
ss
arpl
cmc
aam
adc
aad
outsb
push
inc
in
les
mov
or
in
push
push
cmp
jbe
push
cmp
mov
int3
mov
ret
outsb
cmp
xchg
lods
popf
add
dec
lahf
sub
es
lcall
push
mov
pop
sub
aas
hlt
out
and
or
mov
cs
popf
cmp
les
es
mov
popf
xor
jns
test
aad
test
push
sbb
xchg
mov
pop
sbb
add
lcall
rorb
add
sbb
sbb
daa
scas
subb
inc
xor
test
pop
in
push
adc
cs
leave
subl
mov
xor
into
rol
cli
mov
adc
ss
jp
pop
jnp
int3
inc
js
inc
jecxz
aaa
and
xchg
mov
xorl
lea
pop
fstpl
ljmp
fwait
xor
fucomp
sub
xor
into
in
cmpsb
lock
pushf
dec
fsubl
or
pop
mov
testb
sub
ljmp
movb
adcl
ficoml
jmp
inc
in
out
or
mov
sub
sub
dec
loope
jecxz
dec
fdivrp
and
subb
pop
aas
stos
dec
sbb
jp
dec
dec
xor
insb
js
push
jne
xchg
mov
add
or
adc
inc
loop
iret
repnz
mov
sarl
jge
cld
loope
inc
push
and
movsl
add
push
push
mov
sub
or
and
mov
mov
inc
out
push
cmp
adcl
jmp
insb
xchg
sbb
dec
mov
pop
je
mov
jae
sarl
push
roll
cmc
cmp
inc
add
push
inc
jl
jno
rclb
sbb
cmp
or
rol
push
jo
adcb
or
scas
push
push
imul
shlb
add
andl
lea
add
inc
lea
fmull
sbb
je
pop
imulb
jns
cmp
cld
testl
sbb
jno
shl
stc
pop
xchg
inc
add
sub
loopne
mov
sahf
call
push
or
or
mull
mov
add
push
out
xor
jecxz
push
testb
jge
mov
aad
test
es
pop
loopne
orb
push
movsb
pusha
jnp
int
xchg
mov
addr16
inc
and
xchg
jle
mov
cmp
popa
add
and
push
or
test
les
enter
or
lds
cmp
fs
pop
xchg
hlt
xchg
xchg
xchg
or
test
daa
xchg
pop
inc
add
cmp
xchg
lcall
mov
adc
jl
scas
sbb
scas
or
adc
mov
jo
nop
leave
arpl
leave
push
in
mov
xor
pop
std
mov
scas
cmp
adc
mov
int
mov
testl
sub
icebp
xor
xor
test
xchg
or
dec
add
popf
data16
sti
cmp
insb
mov
enter
outsl
jmp
mov
xchg
or
xor
cwtl
lret
movsl
ret
jp
out
test
scas
sbb
cwtl
mov
sti
mov
movsl
mov
or
jne
hlt
fs
in
je
xchg
jno
lcall
pop
push
mov
and
movsb
sbb
push
ret
xchg
dec
xor
push
mov
sub
popf
outsl
push
add
mov
and
in
fiaddl
jl
out
xchg
or
dec
mov
pop
fisubrs
mov
sbb
cmp
jle
scas
mov
pop
stc
mov
sub
adc
dec
dec
sub
test
or
sbb
xchg
and
mov
hlt
and
push
mov
je
subb
shlb
negb
call
inc
push
cli
add
in
push
mov
das
xchg
loop
mov
dec
xchg
inc
push
sub
fisubl
in
add
mov
inc
xchg
xchg
or
push
pop
in
fdivs
movsl
jne
cmp
sub
in
sti
add
in
pushw
adc
mov
dec
and
add
dec
popf
negl
arpl
xor
mov
adc
dec
in
mov
dec
lods
scas
test
shrl
call
mov
push
fcompl
aad
aad
jmp
adc
pop
sbb
shll
dec
in
aas
test
dec
bound
mov
xor
xor
rcrb
movsb
fwait
mov
ja
in
cmp
sub
push
mov
push
daa
xor
lods
pop
ljmp
ds
sbb
sub
mov
jle
add
cmp
pop
and
ret
sbb
daa
ljmp
arpl
gs
shrl
and
xor
and
outsb
orb
aam
mov
leave
pop
dec
idivb
call
cmp
iret
jbe
cld
or
into
std
popa
in
ljmp
mov
or
insb
jle
inc
pop
sbb
insb
jle
mov
inc
and
test
test
pushf
sub
in
lods
pop
adc
inc
ret
sbb
ror
shlb
loope
xchg
xor
outsl
jb
movsb
push
jmp
out
xchg
shl
insl
add
jecxz
mov
push
sbb
rclb
mov
jg
pop
int3
mov
sbb
mov
aaa
pop
xor
bound
fnstcw
push
out
pushf
outsl
xchg
lock
lods
push
mov
jnp
push
jge
mov
fists
scas
enter
xorl
jo
xchg
adc
xchg
jmp
mov
gs
mov
arpl
sbb
orl
ljmp
in
les
aas
push
jl
xchg
jno
push
lahf
mov
lcall
filds
jae
and
fwait
out
bound
xchg
xchg
cmc
loopne
jmp
xchg
cmovno
lods
mov
fsts
fldl
test
fnsave
test
mov
sbb
or
jl
jg
mov
sub
ret
enter
and
insb
xchg
xchg
ficomps
or
jnp
push
in
ljmp
scas
adc
test
fimull
xor
mov
lret
add
shll
cmpsl
sub
xor
add
mov
aam
iret
xlat
and
mov
jg
lock
fcoms
nop
in
sub
int3
hlt
lahf
mov
adc
cmp
jg
mov
cmp
pop
fadds
jo
cmc
leave
sub
pop
pop
loopne
mov
inc
lret
lea
or
dec
out
xchg
pusha
adc
divl
test
xor
jp
bound
pop
or
sbb
lock
mov
out
call
leave
stos
mov
ror
or
pop
lds
mov
mov
mov
insb
call
fdivrs
jo
insl
std
pop
sub
nop
daa
roll
sbbl
or
clc
mov
stos
inc
dec
clc
or
dec
dec
test
cmp
pop
mov
push
inc
jb
aaa
adc
inc
push
ficomps
xor
lds
cld
das
or
lret
ja
shl
pop
mov
movsl
js
fwait
push
adc
sub
push
pop
popf
pop
lahf
into
cmp
out
fisubs
mov
dec
pop
in
cmp
arpl
mov
jge
xor
xchg
insb
fwait
mov
and
js
inc
lea
call
xchg
push
cs
inc
lea
pop
sub
dec
lds
jae
out
or
test
fnsave
xlat
addr16
nop
stos
cmp
sbb
sahf
mov
stos
fcmovnb
push
or
mov
es
jle
dec
mov
stc
into
push
movsl
jnp
pusha
loopne
sub
les
fdivs
std
sbb
xchg
scas
aad
pop
mov
aam
adc
and
aam
out
inc
popa
adc
test
fstpl
xor
add
sub
lods
mov
adc
jns
subl
leave
int
in
out
push
and
and
movsl
cmp
enter
ret
aam
xchg
test
pop
push
sbbl
sbb
pop
out
movsl
int
in
lret
and
sub
jns
or
addr16
insl
xchg
insb
xchg
cli
lret
push
mov
mulb
mov
and
jl
test
fsubrs
mov
mov
pusha
or
inc
and
iret
cwtl
popa
jns
pop
aas
mov
pop
lea
pop
mov
sbb
push
lods
pop
mov
xorl
lea
rorb
pop
adc
out
lahf
mov
inc
lcall
mov
addr16
aad
sub
pop
add
out
sbb
add
test
jnp
dec
mov
inc
and
xchg
stc
add
out
push
outsl
sub
popf
pop
push
mov
dec
mov
inc
shll
int3
pop
push
lcall
mov
sub
xor
ljmp
call
push
xchg
lods
push
imul
and
jne
mov
in
lods
dec
stos
jge
es
and
aad
lret
mov
xchg
xor
lods
std
out
pusha
xlat
lret
pop
mov
push
jmp
push
sbb
push
dec
lds
fcomip
inc
popl
test
cmp
xor
jns
mov
inc
insb
pop
jnp
mov
mov
pop
hlt
test
iret
cs
lock
cmp
xchg
cmp
mov
lods
lds
push
jb
jo
lahf
popf
push
lea
pop
jg
mov
sbb
or
popa
out
jo
adc
cld
es
into
adc
cld
xabort
andl
push
outsl
sbb
inc
popa
mov
push
stos
js
int3
fldcw
scas
dec
testl
ljmp
scas
inc
push
pop
mov
adcl
mov
je
cltd
in
lods
fdivl
aaa
pop
mov
dec
rclb
vmwrite
mov
adc
faddl
div
xchg
cmc
adc
stos
pusha
test
ds
out
push
fnstsw
cmc
xchg
aad
add
or
lock
push
dec
dec
mov
sti
lods
inc
lret
pop
and
jbe
ret
adc
in
sbb
test
or
and
fidivs
cmpsb
adcb
in
gs
sub
sbb
pop
mov
xchg
lahf
das
and
push
call
cmpsl
out
xchg
ss
pushf
fs
jmp
pop
jnp
dec
stos
cs
stc
cmpl
push
cmpsl
sbb
push
dec
sbb
add
scas
add
cwtl
lret
mov
add
jg
sub
sub
cltd
sbb
mov
fistl
shl
aas
dec
sbb
shr
mov
enter
add
divl
fs
push
push
aas
cltd
jbe
cmpsb
aad
scas
mov
jne
xchg
mov
cwtl
xor
leave
fnstsw
addr16
insb
fdivl
mov
test
jns
fs
pop
ljmp
insb
mov
xorb
lahf
pop
icebp
stos
shrb
mov
pop
sub
cmp
fstps
outsb
aam
test
pop
sub
iret
xor
out
dec
in
test
test
push
in
stos
inc
pop
sbb
fisubl
sti
lods
ljmp
inc
andb
mov
mov
jle
ds
lret
pop
xchg
js
dec
dec
mov
jg
iret
in
or
jnp
cs
ja
lock
fidivrl
fdivrl
sbb
pop
enter
jge
xchg
dec
cmpsl
push
fisubrl
sar
subb
add
mov
icebp
pushf
fwait
loopne
mov
ror
and
loop
jecxz
loopne
inc
cmp
add
sub
leave
out
push
sbb
out
test
lret
inc
popa
xor
ljmp
out
push
sbb
fstpt
rorb
insl
cli
xchg
rol
repz
jge
xor
xchg
das
in
sub
ljmp
psrld
adc
and
xor
add
lea
pop
mov
pop
jno
test
outsb
popaw
add
out
xor
mov
push
iret
call
sub
jns,pt
movsl
pop
test
lcall
test
pusha
popf
jae
dec
mov
stos
dec
mov
popa
lea
js
cmp
sbb
in
and
fdivrl
sahf
jg
xor
pop
xchg
xor
jno
notl
arpl
push
add
ja
shrb
push
es
xchg
imul
dec
call
mov
scas
adc
and
mov
lcall
fildll
pop
or
xor
fucomip
pop
push
push
dec
or
mov
and
xchg
repnz
push
pusha
inc
hlt
mov
push
sub
dec
jl
dec
in
cmpsl
jecxz
pop
add
in
jge
in
fnsave
test
je
pop
xor
sbb
repnz
jle
js
mov
fildll
jp
inc
int
mov
mov
daa
xchg
add
mov
xor
outsb
std
mov
push
mov
outsl
add
sub
not
imul
in
inc
outsl
repnz
lods
fidivs
or
fnsave
test
lret
cmp
xor
adc
ss
into
repz
lds
jmp
push
inc
adc
add
mov
or
sbb
popa
iret
popl
shr
push
xor
inc
outsl
lea
hlt
mov
mov
or
mov
xchg
mov
add
mov
fstpt
nop
repnz
loope
adc
push
cmp
jg
lret
stos
mov
mov
adc
mov
mov
or
sahf
mov
sbb
fistps
mov
fmuls
out
lods
push
and
rcl
cwtl
pop
arpl
and
je
test
mov
lods
push
lods
inc
cmpsb
jnp,pt
push
outsb
xor
cld
nop
fs
cltd
jl
test
xor
sbb
push
xor
ljmp
rorb
sti
adc
mov
or
dec
insl
clc
imul
jge
js
cmpsb
lcall
scas
mov
loop
jp
xor
cs
mov
gs
adc
xchg
push
outsl
repnz
sbb
test
inc
pop
xor
pop
cmp
xchg
les
or
lds
sahf
mov
pop
data16
aad
xchg
je
clc
push
outsl
rorb
xorb
mov
pop
das
aam
mov
sub
mov
ds
int
pop
lcall
and
stos
aaa
out
jle
aad
dec
pop
xor
mov
adc
inc
cmpsb
xor
nop
loope
ja
mov
or
ud2
jle
icebp
arpl
and
add
mov
test
bound
dec
push
ret
sub
pop
jo
sarl
aas
xor
stos
cmp
push
fiaddl
push
arpl
push
mov
jg
je
dec
imul
daa
adc
push
ljmp
push
mov
enter
js
out
fstpl
lods
add
jb
and
jp
dec
and
mov
push
mov
mov
mov
shrb
and
ret
faddl
pop
movsb
mov
or
stos
dec
mov
insl
adc
adc
mov
int3
inc
inc
adc
movsl
cmc
ja
leave
mov
xchg
ret
cmpsl
clc
xchg
xlat
in
jo
popf
icebp
stos
daa
shlb
xor
xor
sti
shrb
jge
fstpl
and
inc
fs
jbe
pushf
lea
call
cmp
std
sbb
leave
inc
xor
outsb
add
xchg
addr16
xor
inc
adc
push
fwait
scas
push
xchg
movsb
or
jp
mov
das
stc
jecxz
sub
arpl
dec
popa
sub
out
mov
lahf
stos
inc
lea
jg
in
repz
out
cmpsl
xchg
pop
or
inc
daa
ret
adc
ret
pop
in
daa
dec
cmpsb
roll
and
sub
bnd
aas
lods
push
lcall
cwtl
scas
dec
or
jb
cmpsl
out
nop
lods
push
cmc
xor
mov
into
fnsave
outsb
cmc
pop
xchg
int
sbb
sub
lods
xchg
mov
xor
mov
loopne
in
push
cwtl
pop
mov
mov
dec
imul
inc
push
xchg
jae
sbb
mov
aad
enter
rcl
ret
xchg
sub
sbb
out
sbbb
in
fwait
lret
dec
push
cmp
jno
rcl
sbb
jmp
sub
lcall
nop
lret
pop
outsb
fs
and
push
ret
dec
sbb
push
inc
lret
or
dec
mov
lret
aas
jns
cmpsb
stos
pusha
into
dec
sbb
aad
xor
pop
xchg
and
out
inc
gs
xor
scas
cmp
mov
nop
in
lods
ljmp
sbb
dec
mov
sbb
jns
mov
push
dec
cmp
and
or
push
int3
adc
mov
inc
andl
or
xchg
mov
xchg
popa
orb
outsl
pop
movsl
xchg
or
test
fcompl
sbb
or
mov
cld
jge
rcr
fiaddl
sbb
mov
pop
cmpsb
sub
dec
aad
dec
je
or
mov
pop
orb
or
pushw
inc
pop
pop
inc
sub
and
xchg
mov
cltd
add
mov
test
jecxz
push
pop
pop
ljmp
xor
iret
push
mov
xchg
push
int
sub
cmpsl
push
test
and
cmpsl
icebp
pop
mov
pusha
ss
mov
push
je
xchg
push
lods
and
cs
jge
ljmp
loopne
jb,pt
out
iret
push
xchg
inc
in
clc
mov
mov
xchg
dec
mov
pop
int
lds
aam
clc
xchg
dec
pushf
les
scas
cwtl
stos
xor
jbe
or
insb
imul
int
push
add
push
mov
and
gs
das
add
int3
fwait
push
and
jnp
xor
mov
into
xchg
inc
or
sub
in
loopne
mov
flds
sbb
out
push
je
sbb
push
addr16
mov
aas
outsb
pop
cwtl
ljmp
pushf
inc
pop
xchg
subb
jne
mov
or
xor
pop
addb
mov
jg
and
gs
xchg
xor
inc
stos
pop
aaa
inc
sbb
sti
test
xor
push
fldl
loope
rcl
mov
xor
addb
lcall
nop
xor
sbb
pop
imul
xchg
push
sub
pop
cs
add
fdivrs
aad
lds
xchg
stos
pop
adc
addb
jno
pop
cmp
sbb
xor
mov
sarl
mov
and
cmpsl
jp
cli
jnp
sub
dec
dec
clc
inc
jl
or
xor
bound
lds
add
scas
cmp
lret
test
sbb
or
repnz
cli
mov
ret
lea
jp
pop
mov
loopne
jnp
pop
add
repnz
int
pushf
pop
imul
lods
sbb
sbb
adc
pop
stos
push
jg
cltd
or
dec
mov
mov
pop
dec
imul
dec
cwtl
xchg
repnz
cmpsb
add
clc
or
in
dec
dec
cmp
arpl
lea
xchg
mov
mov
jnp
xchg
das
xchg
pop
stos
inc
push
aad
gs
push
mov
dec
clc
inc
jg
inc
or
das
fsubp
decb
push
inc
pop
add
rorl
xor
enter
inc
pusha
inc
cmc
cwtl
roll
pop
cwtl
inc
cmp
xchg
jl,pn
cmp
mov
pop
repz
cltd
std
push
inc
jo
mov
push
outsl
daa
xor
repz
dec
movsb
push
cmp
icebp
push
jae
mov
outsl
xorb
cltd
dec
mov
xor
sbb
out
ret
test
sub
push
cmp
push
roll
adc
rcrb
adc
orb
xor
movsb
jb
int
jge
scas
jg
mov
aad
mov
xor
fcmovbe
aam
add
pcmpgtd
pop
mov
add
jbe
cmpsb
jmp
cmp
iret
into
xchg
add
adc
arpl
arpl
add
les
jne
inc
aas
sub
jecxz
pop
mov
or
jg
int3
lret
fstps
in
push
negl
push
fildl
cmp
mov
mov
mov
scas
lock
int
lcall
rol
les
cwtl
pop
pop
adc
and
ret
xchg
xchg
jno
in
xor
jbe
jo
mov
pop
dec
sbb
push
lock
aas
xchg
push
mov
fdivr
aaa
mov
dec
push
mov
pushf
popa
and
sahf
or
popf
loope
leave
fucomi
add
inc
mov
jmp
icebp
setge
mov
fcoml
ja
inc
out
shlb
inc
notb
push
cmpsl
orl
mov
xchg
sbb
adc
jnp
or
inc
pop
movsb
leave
int
lcall
inc
outsb
js
mov
mov
adc
push
fildll
pop
test
cli
ficompl
mov
sbb
sbb
loop
cmp
add
jo
push
jo
pop
jecxz
xchg
mov
add
xchg
sub
outsb
in
and
push
sahf
pop
shll
pop
lcall
addr16
push
out
push
in
xchg
xchg
lods
mov
cs
into
lods
stos
cmc
xchg
rol
pushf
sub
mov
mov
jnp
insl
sub
ret
mov
jmp
rcll
je
adc
mov
ss
lret
je
cmc
mov
loope
in
and
cmpsl
cmp
mov
jae
inc
cli
daa
ja
cli
add
scas
mov
mov
add
or
mov
lahf
inc
scas
xchg
sub
lds
pop
jno
sub
lock
pop
sbb
and
lcall
arpl
fisubrs
sbb
and
inc
arpl
dec
mov
cmp
xchg
pop
sub
jl
pushf
jnp
cmpsb
les
out
mov
faddl
pop
movsb
aas
xor
xor
push
stos
ss
movsl
clc
scas
push
xor
enter
mov
pop
popf
mov
push
in
loopne
into
jle
dec
dec
data16
adc
cmc
pop
sub
cmpsl
mov
pop
int
fldl2e
jl
xor
xchg
in
test
pop
push
stc
dec
stos
jg
je
stc
adc
stos
pop
sub
cwtl
aas
jno
pop
movsb
cmp
inc
out
mov
sbb
cmp
icebp
inc
xchg
lock
adc
xchg
add
dec
popa
push
imul
jg
mov
ss
test
test
adc
ret
pop
or
jl
push
loope
or
decl
sub
push
mov
es
shlb
mov
push
mov
out
mov
adc
xchg
cwtl
out
inc
adc
jne
jmp
bound
jg
push
jecxz
fmull
fyl2x
outsl
xor
mov
mov
dec
lret
jl
adc
dec
mov
data16
push
adc
ficoml
lahf
pop
cmpsb
xchg
jae
in
je
mov
out
test
je
pop
mov
or
clc
dec
mov
sub
xor
pop
out
in
nopl
popf
or
shlb
scas
sub
xor
lock
lcall
out
inc
pop
cwtl
adc
jle
movsb
lods
stos
stos
sbb
repnz
data16
inc
fcmovnbe
notb
cmpsb
dec
out
xor
repnz
sbb
ficomps
mov
inc
push
gs
xchg
mov
inc
pusha
orb
xor
shll
and
test
cmc
mov
insb
sti
and
push
pop
mov
push
jbe
cmc
and
out
int
xchg
mov
in
mov
dec
mov
push
addb
lds
in
pushf
rcll
ficompl
xor
mov
xor
inc
pop
jne
xchg
fcompl
cmp
in
push
loopne
int3
fs
add
xlat
cmc
imul
cs
xlat
jmp
sbb
jle
mov
xchg
xor
xchg
sub
sub
sahf
imul
push
jae
cltd
out
xchg
xchg
mov
in
repz
adc
push
cmc
iret
xchg
loopne
in
sub
fidivl
or
pop
xor
daa
inc
movsb
mov
ds
pushf
pop
sub
inc
and
orb
imul
loop
lcall
xor
adcb
sub
outsb
mov
fadds
shrl
xchg
xor
jnp
les
pop
mov
xchg
out
cmp
and
loopne
xor
loopne
stc
or
ja
addr16
cwtl
push
mov
mov
dec
arpl
movsl
insb
add
mov
cmpsl
dec
in
insb
xchg
xor
mov
hlt
push
lods
xchg
ss
dec
scas
or
and
jno
jl
cmpsl
movsb
cli
jnp
sub
subl
insb
adc
sub
lea
push
jge
fnsave
cmp
xchg
shlb
pushf
addl
bound
pusha
mov
iret
push
imul
sub
pop
imul
or
pushl
add
cmp
lcall
mov
dec
mov
icebp
dec
xorb
call
mov
lods
mov
outsl
enter
add
ficoms
aad
xchg
pop
aas
cmp
andb
sbb
nop
in
adc
loop
xchg
adc
sbb
adc
fsubrs
and
lds
or
lds
out
dec
aaa
cmp
orb
jb
and
ret
xchg
push
mov
lahf
jmp
mov
pop
sbb
insl
push
xlat
pop
rol
pop
rorl
pop
test
sub
and
mov
and
add
add
sbb
mov
es
cs
inc
out
sub
xchg
push
insl
stos
jmp
or
rorl
sub
pop
jmp
sbb
cmpsl
loope
fcomps
inc
add
dec
mov
xor
out
call
fsts
add
sbb
das
mov
xchg
int
xor
sarb
int3
jg
inc
mov
pop
cmp
dec
push
aam
in
add
lods
lea
je
out
and
inc
jne
js
icebp
push
loope
add
mov
mov
inc
lods
sub
dec
dec
in
pop
shr
mov
out
mov
adc
lahf
mov
or
jb
xchg
xchg
sbb
mov
xchg
inc
pop
je
jbe
rcll
fisubrs
or
loope
jo
cmp
jmp
inc
adc
imul
call
stos
test
add
pop
mov
add
or
xchg
andb
cmp
jecxz
mov
aam
mov
inc
ror
lods
leave
test
mov
mov
sahf
call
mov
es
inc
push
ljmp
pop
lea
jecxz
xchg
sub
adcb
inc
mov
ds
mov
out
sbb
xchg
mov
sahf
data16
push
inc
loope
jb
fistpll
inc
push
repnz
shrb
pop
gs
outsb
pop
sub
pop
scas
mov
loopne
mov
into
inc
out
add
out
dec
inc
adc
push
and
popl
cmp
inc
loope
adc
jmp
incl
pop
jg
addl
add
pusha
pop
or
fwait
push
int
mov
roll
mov
call
cwtl
jnp
test
in
adcl
nop
stos
iret
adc
int
in
cmc
aad
out
dec
aad
mov
std
jg
mov
pop
cmp
addr16
mov
dec
es
pop
test
mov
addr16
negl
dec
shl
arpl
mov
push
aas
lret
imul
xor
idivb
push
scas
mov
incb
inc
test
loop
push
sti
lock
repz
mov
push
or
jne
inc
call
mov
ljmp
fidivl
pop
aad
sbb
shrb
fadds
mov
in
mov
jae
push
bound
mov
negw
fcomps
enter
inc
outsb
fsubr
outsl
fists
cltd
adc
addl
and
dec
popa
sub
lods
xor
in
xchg
add
lahf
ss
jb
cmpsb
fstpt
mov
popa
mov
shlb
jnp
filds
sahf
jl
push
dec
stos
push
fsubrs
mov
and
xchg
push
sbb
mov
fwait
jnp
repnz
sub
mov
or
cmc
sbb
stos
mov
hlt
jno
decl
scas
xchg
mov
xlat
cmp
pop
into
leave
int
mov
mov
ljmp
negb
in
push
push
push
movsb
movsb
mov
add
push
jge
aad
inc
dec
sub
jecxz
dec
dec
pusha
outsb
ficomps
mov
inc
pop
out
popa
or
push
xor
es
jns
push
nop
push
scas
push
push
fdecstp
leave
mov
fnstsw
pop
gs
fs
jb
inc
rcl
arpl
and
addr16
xor
push
push
pop
rcrl
js
rcll
sub
mov
jb
inc
xor
js
xchg
mov
push
insb
or
ss
push
stc
mov
xchg
add
sti
xchg
ss
inc
test
pushf
and
lcall
sub
shlb
test
cmpb
xchg
add
mov
xchg
add
insb
sub
mov
xor
dec
pop
cmp
mov
mov
inc
pop
hlt
mov
shll
xchg
clc
or
test
enter
outsb
cld
pop
int3
fadds
and
cmp
leave
mov
sub
pop
hlt
mov
push
sbb
lret
sarl
ffreep
shl
and
loopne
inc
popa
xor
dec
mov
push
inc
mov
sbb
pushf
lcall
stos
inc
push
add
lods
mov
aaa
mov
pusha
push
mov
int3
push
int
xor
les
iret
fistl
ja
adc
pop
mov
dec
and
xor
jno
pop
sarb
jmp
loop
or
inc
cli
or
test
mov
xchg
inc
int3
fsubr
lea
xor
jmp
test
out
iret
push
shl
out
shrl
sti
inc
dec
xorb
mov
or
xchg
add
cwtl
stc
scas
lock
cmpsb
mov
push
test
mov
out
push
mov
xchg
xor
inc
sbb
dec
jmp
jge
rcr
in
mov
add
das
jnp
es
or
or
add
xchg
inc
xchg
dec
sbb
mov
xsave
cwtl
mov
ljmp
movsb
stos
outsl
sbb
sub
repnz
les
adc
iret
aam
addr16
push
cmp
and
daa
sar
jno
jo
mov
into
sbb
scas
cltd
call
dec
jp
dec
fcom
or
cmpsl
push
adcb
fildll
xor
xor
lea
lret
dec
bound
inc
push
stc
mov
xor
push
notb
xor
and
fwait
insl
lea
inc
aad
aas
dec
or
xchg
mov
pop
movsb
jecxz
xor
xchg
ss
int3
pop
and
pop
xor
jmp
add
int3
es
ljmp
inc
data16
jbe
popf
xor
int
mov
jl
xchg
in
lea
les
jno
push
aas
adc
outsb
jle
cmp
push
bswap
fsubr
repz
pop
pushf
fcomps
pushf
cmpsb
jge
jo
pushf
sahf
cmc
sbbl
push
out
pusha
iret
fcomps
stc
mov
xlat
outsb
xchg
in
adcb
sub
int3
xchg
pop
dec
pop
orl
sub
xor
push
mov
and
jg
scas
in
pop
xor
pop
mov
subb
jo
sbb
xchg
shll
or
sub
cs
mov
xor
into
mov
icebp
and
sti
cmp
jmp
mov
out
repnz
out
xchg
dec
mov
addl
ds
push
sub
mov
dec
pop
push
xchg
clc
pop
negl
lock
mov
pop
cmp
cmp
je
lret
in
pop
hlt
mov
jl
arpl
xor
fwait
test
packsswb
inc
pop
inc
jecxz
jae
push
repnz
les
mov
inc
in
mov
pop
out
scas
inc
outsl
mov
mov
leave
outsb
test
fwait
lods
adc
loop
or
xor
adc
les
icebp
mov
pop
loopne
pop
sbb
sub
clc
inc
dec
or
out
cltd
push
out
jo
jp
hlt
jl
xor
std
inc
popa
ja
arpl
push
mov
stos
push
mov
lret
enter
sub
movsb
fsubl
xlat
xchg
std
xor
loop
shl
mov
inc
sti
dec
fidivl
test
sbb
jmp
je
pop
mov
lds
inc
sbb
pop
push
mov
insl
jno
mov
sbb
sbbl
ljmp
pushf
out
fadd
movsb
inc
mov
js
enter
dec
jmp
aad
fwait
mov
xor
repz
into
adc
cltd
pop
out
lret
jl
mov
or
lahf
test
repnz
rcll
mov
cmp
push
scas
or
mov
ret
jmp
adc
pop
cmc
mov
ret
jle
inc
jle
dec
in
or
xchg
dec
or
lock
or
fstpt
xchg
mov
sub
pinsrw
outsb
gs
fwait
cmp
pop
into
scas
xor
cs
fdivrs
jmp
daa
sbbb
aad
int3
pop
dec
aaa
paddd
inc
fstpt
mov
sti
int3
push
inc
mov
sbb
mov
stc
or
jo
cltd
and
lret
push
push
ret
mov
lcall
mov
jbe
sahf
es
cmp
in
rcrl
fimuls
xchg
cmp
xchg
cmc
or
inc
shl
mov
adc
test
cs
inc
fstps
xchg
fstpt
pop
movsl
jno
cmp
hlt
push
sbb
aaa
dec
sub
sbb
pop
dec
xchg
add
mov
push
jp
movsb
sti
xchg
cltd
scas
mov
fstl
jecxz
mov
mov
adc
and
lret
ror
out
fdivs
dec
hlt
pop
icebp
rorb
pushf
lods
mov
negl
add
scas
nop
pop
mov
mov
mull
mov
mov
fidivl
adc
addr16
arpl
fdivrl
xchg
xchg
stos
test
ret
push
push
inc
clc
gs
int3
push
inc
arpl
push
add
hlt
adc
inc
lds
inc
pop
fdivrl
inc
push
mov
mov
sbb
xchg
sub
stos
jmp
rorl
loope
or
std
mov
mov
in
test
pop
das
mov
adc
adc
std
sbb
cmp
add
xchg
into
enter
jne
popf
aam
dec
in
test
in
scas
jb
inc
out
je
mov
push
test
or
sbb
pusha
pop
sarl
adc
and
fisubs
jge
pop
scas
adcl
mov
push
and
xor
in
in
push
xor
mov
sbb
mov
test
js
les
mov
inc
xlat
sbb
jecxz
sbb
test
addr16
loop
or
fsts
fdivs
jmp
gs
adc
andl
adc
lcall
xchg
xchg
lret
jle
jecxz
mov
cli
les
mov
mov
push
gs
jbe
fsubl
loopne
cli
pop
mov
add
add
test
inc
xchg
mov
xchg
mov
mov
stc
inc
mulb
int3
dec
fcmovnb
sahf
cmp
or
fisubrl
shll
sbb
test
pushf
mov
push
add
fmuls
ffree
adc
sti
mov
incb
scas
push
and
btc
rcrl
dec
stos
add
sbb
rorl
fsubrs
lcall
imul
in
les
xchg
data16
pop
int3
sub
dec
fcompl
jg
jno
shr
lret
sub
addb
push
movsb
sub
and
push
enter
ss
popf
imul
xchg
push
pushf
xor
mov
mov
adc
jbe
lret
enter
js
push
mov
repz
aad
jge
jnp
les
out
sbb
and
xchg
test
mov
jmp
enter
in
add
or
mov
outsl
cmp
lahf
cmp
jge
jge
or
std
xchg
loopne
pop
sub
mov
xchg
fsubrs
mov
ljmp
mov
filds
cltd
adc
in
mov
and
out
inc
cmpsb
sbb
dec
shlb
push
ja
add
jmp
lds
xchg
or
repz
cmp
sub
mov
jbe
test
jb
cmp
inc
rcrb
lcall
fcomps
lock
jne
mov
stos
daa
push
jle
lds
ret
into
cs
je
leave
jnp
jg
cmp
outsb
sahf
ret
sub
insb
jle
jp
imul
push
addl
mov
gs
jp
leave
sbb
push
inc
and
push
sub
dec
mov
xchg
mov
sbb
or
int
ret
ret
mov
mov
and
lds
mov
aad
neg
mov
mov
ret
pop
fildll
dec
mov
lea
lret
add
subb
aaa
jl
subb
or
sub
dec
push
int3
push
inc
mov
clc
es
in
rclb
fs
imul
pop
sub
je
push
mov
cmp
cmp
mov
fucomp
fwait
ror
movsl
adc
xor
mov
push
jb
inc
xchg
scas
movsl
arpl
int
cmp
jne
sbb
cmp
push
jae
and
lcall
nop
mov
xor
dec
xchg
in
arpl
movl
dec
in
and
mov
mov
mov
pop
loop
lods
mov
test
ret
jb
in
rcr
xchg
scas
add
jo
pushf
test
lea
cltd
sbb
cmc
mov
lcall
mov
mov
sbb
into
dec
movsb
scas
mov
stos
jl
les
jo
jmp
cmpsl
xchg
mov
adc
stc
fsubrl
enter
and
mov
jne
push
test
mov
movsl
loope
or
sbb
mov
mov
aaa
mov
les
ss
cmp
mov
dec
jmp
adc
dec
addl
pushf
and
sub
adc
mov
andb
cmp
clc
aam
sub
mov
cmpsb
push
imul
insb
lret
cmpsl
xchg
inc
inc
jns
jl
inc
lcall
pop
out
decb
push
stos
pop
pusha
arpl
pop
cmc
xchg
iret
into
fdivrl
add
imul
mov
jbe
or
pop
loope
adc
mov
lcall
lcall
and
test
add
inc
mov
xor
or
mov
cmp
mov
in
in
adc
mov
push
js
pop
add
dec
push
sbb
cs
scas
inc
fiaddl
inc
fs
gs
jg
sub
add
pop
push
aas
and
loopne
cmp
adc
push
hlt
outsb
mov
push
idiv
jle
test
pushf
mov
mov
sahf
cmp
lods
cmp
jge
adc
xchg
int3
lahf
xchg
sub
movsb
movsl
in
mov
loop
imul
inc
add
adcb
test
das
adc
mov
or
lret
cmpsl
out
mov
fidivl
or
xchg
jae
es
push
mov
icebp
repnz
pop
fs
in
fdivl
cmpsb
cmp
test
inc
xor
mov
add
mov
testl
popa
psubsw
lods
pop
call
add
sub
aas
enter
int3
mov
mov
imul
std
pop
adc
cmp
icebp
andb
push
scas
xchg
sub
xchg
sahf
cmp
inc
jo
adc
pop
iret
dec
pusha
bound
add
inc
cmp
mov
jmp
fisttpl
das
std
nop
push
pop
mov
push
mov
mov
pop
pop
in
aas
aad
popa
call
jmp
mov
iret
sti
repz
push
rolb
jl,pn
pusha
sub
pop
sbbl
ja
xchg
js
test
bswap
in
mov
sahf
mov
mov
sbb
mov
push
bound
xchg
adc
leave
sbb
in
cmp
mov
mov
lahf
inc
sbb
icebp
push
sub
aas
pusha
ffreep
adcb
jge
scas
leave
pusha
pop
into
mov
lret
mov
jne
xor
mull
cmp
test
lds
cmc
enter
mov
mov
lret
add
lret
or
out
lea
mov
stos
inc
adc
test
jae
test
xchg
mov
sbb
adc
lods
xor
pop
mov
fsts
ss
mull
or
mov
pop
pop
sub
cltd
adc
lock
mov
dec
outsl
shl
xor
cltd
pop
in
into
dec
test
xor
and
mov
outsl
jno
pop
adc
lods
sarb
cmp
fldcw
push
push
pop
lret
bound
lret
jmp
dec
adc
enter
aas
add
das
stc
and
out
push
mov
test
in
inc
gs
mov
cmp
loope
adc
push
xlat
mov
mov
fsubs
and
inc
cld
xchg
xchg
aam
fisubrl
sub
mov
inc
insb
js
sub
test
mov
insb
add
outsl
stos
inc
mov
out
push
sbb
test
data16
cmpsl
adc
xor
cmc
movsb
popa
push
aaa
cmp
xchg
test
int
pop
and
je
inc
js
outsb
lahf
div
clc
sub
fstps
sbb
xor
push
ja
loope
cltd
cmpsl
ret
aam
cmc
push
lds
les
xchg
push
or
repz
lcall
sub
stos
sub
mov
ret
fstpt
iret
push
daa
push
xchg
inc
jno
add
or
into
gs
test
push
ja
jb
sbb
or
addl
mov
int
aas
adc
test
sub
adc
mov
pop
faddl
subb
out
je
or
cmp
xchg
ljmp
popa
imul
cmp
jmp
push
por
ds
sub
dec
xchg
dec
cmp
add
dec
fs
dec
in
xchg
imul
inc
outsb
cltd
sub
iret
addl
gs
xchg
pop
test
enter
or
fstpt
mov
mov
testl
sahf
mov
stc
sub
pop
and
or
out
cmpsl
lea
xorb
adcb
imul
inc
fidivrs
fisttps
mov
insl
sub
pop
mov
push
cltd
xor
loop
or
cmp
fbld
inc
pop
mov
xchg
imull
inc
dec
mov
xchg
mov
mov
fmul
sbbl
mov
fdivl
divb
add
xchg
ds
cmp
sbb
dec
sti
mov
mov
xor
bound
add
fsubr
and
shll
xor
mov
inc
lahf
jecxz
shll
stc
mov
add
ret
scas
cli
loop
xchg
lock
dec
mov
mov
scas
and
sarb
mov
out
lock
mov
dec
sbb
je
lret
add
sub
popf
dec
pop
jmp
in
mov
mov
ror
xchg
add
cmp
push
test
xor
sub
movsl
incl
and
adc
cmp
out
pop
fcoms
lods
inc
pop
mov
insl
xchg
fsubp
inc
lret
mov
addr16
push
jb
fwait
divl
lods
shrb
bound
or
xchg
std
or
jmp
stos
xlat
outsb
xchg
sti
cmc
sub
dec
scas
ret
sub
sbbb
dec
adc
or
fnstenv
out
lock
jo
divl
jae
out
fcoms
lea
mov
sbb
pop
dec
cmp
mov
mov
dec
pop
mov
lea
and
mov
mov
hlt
add
jecxz
mov
mov
fwait
pop
mov
outsl
bound
push
push
jmp
les
lahf
dec
outsl
xchg
mov
and
scas
addr16
scas
cmp
ss
cs
pop
cmp
push
sbb
push
mov
ret
mov
test
xchg
loope
aad
xchg
cmpsb
ret
or
push
popa
sub
xchg
adc
jnp
mov
popa
mov
xlat
cltd
scas
xchg
xchg
or
add
fiadds
sub
iret
pop
repz
cmp
data16
dec
cwtl
mov
shl
push
jp
cmp
pop
sti
addl
jo
jne
loopne
nop
daa
inc
mov
stc
mov
loop
mov
pop
sbb
and
int
testl
xchg
das
out
xchg
insl
xchg
inc
faddp
push
out
jge
mov
push
xor
inc
leave
fbld
je
mov
push
mov
push
dec
iret
outsb
insb
mov
fs
lcall
jle
hlt
xor
sub
mov
pusha
mov
jle
je
pop
and
and
lods
into
cli
dec
ja
jnp
xor
lods
xchg
adc
fs
pop
xchg
adcb
lahf
lods
cmp
or
mov
add
out
add
pop
adc
in
xchg
hlt
mov
jmp
rolb
xchg
xor
inc
adc
adc
and
sub
inc
arpl
or
mov
mov
jl
add
xchg
into
out
cmp
xchg
sub
mov
mov
push
shrl
popf
adc
in
icebp
iret
test
add
adc
insb
inc
mov
cmc
mov
sbb
dec
mov
idivb
jecxz
mov
fdivrs
fnstcw
cli
sbb
xlat
jnp
cmpsl
push
jg
lods
mov
aad
loop
dec
mov
xor
inc
inc
fidivs
add
test
or
fs
stc
leave
mov
push
jne
add
aas
mov
mov
xlat
insl
mov
shl
sub
daa
hlt
int
xchg
ret
jl
jmp
daa
sbb
int3
adc
jne
imul
add
pop
sti
orb
xor
in
dec
in
test
scas
fwait
push
dec
pop
mov
lods
inc
int
ficoms
imul
out
nop
ljmp
push
dec
sbb
lret
and
adc
js
push
pop
lock
lcall
cmp
out
mov
cwtl
mov
or
mov
std
movsl
and
clc
es
js
addl
aaa
lret
inc
sbb
pop
fcomi
jno
imul
imul
pop
jecxz
into
lds
cmp
mov
jecxz
push
aad
fcmovnbe
dec
js
jl
stos
mov
sub
roll
mov
mov
stos
cmp
sub
mov
xor
inc
sub
xlat
mov
or
enter
iret
add
in
push
jbe
cld
mov
stos
xchg
mov
ss
je
cmc
push
aad
mov
adc
loope
push
pop
mov
xchg
inc
inc
adc
imul
sub
aam
mov
icebp
dec
loope
pop
mov
xchg
scas
sub
lock
pop
daa
sub
js
shlb
fnstcw
hlt
les
std
cmp
rcrl
push
mov
nop
orl
loope
out
xor
mov
push
inc
loopne
and
loope
clc
fnsave
mov
shlb
pop
into
fimuls
or
mov
test
sbb
imul
mov
jmp
pop
aad
imul
ja
sbb
inc
divb
sahf
data16
jecxz
decb
xchg
incb
in
mov
sarb
ficoms
jb
jle
jmp
pop
inc
into
pop
inc
pushf
inc
push
dec
insb
mov
mov
out
inc
sahf
std
xor
iret
dec
xchg
inc
pusha
inc
repnz
jne
imul
jns
pop
push
jae
cmp
data16
shrl
and
in
test
inc
aad
add
mov
pop
pop
outsb
mov
insb
aaa
cmpsb
pop
stos
bound
enter
lahf
sbb
lock
mov
add
push
xor
loope
stos
lret
sbb
repnz
stos
xchg
mov
loopne
push
movsl
dec
xchg
fsubrp
dec
insl
sub
sahf
jl
lret
outsl
adc
sub
pop
xor
in
adc
fld
hlt
mov
cmp
scas
decb
orb
cmp
or
xchg
dec
push
popf
push
ret
shll
mov
popf
lcall
push
into
ja
ja
jl
inc
das
sbb
loop
daa
out
lds
pop
lret
add
fldenv
lahf
stos
dec
in
rclb
ror
dec
pop
dec
shrl
or
lret
jnp
ds
xchg
mov
inc
xchg
adc
pop
cmp
add
sub
xchg
cmp
imul
cmp
int3
test
and
insl
ds
repnz
sub
fidivs
or
lds
sub
inc
fsubl
lcall
fucomip
cli
add
inc
pop
mov
sbb
cmovg
psrad
xor
jl
or
roll
dec
sub
xchg
ret
lods
in
stos
push
repz
xor
lret
rcll
xchg
adc
push
movsl
das
es
xor
cmc
mov
fcmovbe
or
cmpsl
movsl
xor
mov
stc
cmp
notb
out
and
fnstcw
inc
fimull
cmp
sub
push
mov
mov
lock
pop
shl
jb
push
xchg
xor
sub
cwtl
mov
lret
imulb
cmp
xchg
stc
pop
or
ret
pop
xchg
out
jns
jge
cmp
fnstcw
fpatan
dec
test
add
js
je
es
loope
pusha
idivl
inc
push
and
sti
ss
push
pcmpgtd
sbbl
jp
mov
mov
mov
shrl
push
push
jnp
xorl
cmp
or
call
lods
push
inc
fadds
jmp
cmp
imul
iret
cmpsb
push
sbb
cmp
es
lret
enter
rcll
mov
in
arpl
and
pusha
jl
sahf
pop
or
sbb
jnp
pop
sub
imul
adc
lds
jbe
inc
fdivrl
lret
test
pop
sub
adc
loope
fwait
and
mov
movsl
je
pusha
cli
outsb
sti
rol
pop
push
fdiv
lahf
pop
pop
jo
jno
fwait
xor
aam
push
pop
test
enter
popf
and
mov
out
int
push
fs
xchg
pop
or
jns
lods
pushf
mov
jns
sti
cmc
insl
daa
adc
jne
xchg
out
pop
sti
popf
mov
scas
out
or
out
xor
fbstp
paddd
les
test
in
and
addr16
add
xchg
out
and
inc
rdpmc
cmc
into
lahf
or
rorb
add
inc
xor
mov
insb
cmp
fnstenv
xchg
mov
mov
jbe
pop
mov
cmp
out
test
je
add
or
decb
mov
lds
mov
enter
in
shrl
add
ljmp
movsl
dec
sbb
stc
insl
imul
xchg
into
add
icebp
lret
std
add
lods
rcrb
out
mov
xor
sbb
aaa
jae
xchg
mov
dec
mov
or
enter
popf
pop
lea
insl
lret
shr
pop
hlt
test
jnp
and
push
push
jbe
subb
pop
inc
push
lds
fisubrl
adc
lcall
mov
mov
add
pop
in
shlb
pop
ds
loope
stc
mov
scas
sti
adc
xchg
xor
sbb
int3
jg
jle
cli
or
fwait
popa
mov
xlat
xor
clc
call
in
add
push
mov
mov
cld
jge
mov
in
dec
inc
in
xchg
enter
sub
cmp
jp
cmpsl
dec
inc
adc
lods
pop
or
in
push
sub
dec
int3
gs
js
cwtl
incl
lea
push
hlt
fildll
sbb
aam
and
xor
aad
and
repz
bound
adc
xor
mov
faddl
and
mov
add
or
dec
add
add
inc
mov
std
push
clc
xchg
es
dec
les
mov
sbb
popf
les
inc
out
ss
mov
pop
add
stc
cmp
lea
stc
jno
cmc
lods
subb
cmp
mov
push
lahf
or
add
xor
and
popf
popa
clc
lea
ja
loopne
cmp
scas
mov
dec
lret
mov
inc
pop
arpl
or
mov
arpl
pusha
xchg
or
push
ret
sbb
clc
insl
push
mov
in
insb
imul
push
cwtl
ret
adcl
sub
push
insl
fsubrs
sub
xchg
cmc
outsl
testb
add
pop
iret
stc
dec
stos
jae
push
jmp
dec
sahf
and
sti
iret
mov
and
add
xor
lcall
cmp
lahf
in
je
push
cmpsb
push
daa
idivb
loopne
add
daa
movsl
dec
cltd
xchg
mov
stc
dec
mov
jbe
or
call
add
inc
int
mov
inc
jnp
pop
mov
stos
pop
mov
inc
inc
cmp
fstpt
into
fisubrs
cmc
or
and
fisubl
add
inc
out
push
adc
adc
push
imul
aad
adc
push
int3
inc
pusha
idivl
loop
cltd
jle
adc
mov
daa
push
outsb
lea
scas
sbb
in
lea
fisubrs
popf
push
inc
in
incb
cmp
push
mov
lahf
push
sbb
fistpl
jmp
push
std
std
pop
jmp
pop
and
dec
data16
inc
es
out
nop
int
ret
in
lods
jbe
fisttps
and
cmp
sbb
xor
inc
pop
push
add
rcrl
scas
xor
int
push
xor
and
addl
cwtl
pop
test
test
daa
mov
sbb
mov
push
in
xor
out
jmp
xor
mov
insl
jg
adc
sub
or
aad
sub
cld
test
push
jb
adc
ljmp
repz
loope
mov
or
jnp
std
mov
mov
cmp
xchg
js
subb
adc
or
es
pop
jo
bound
cmp
push
repnz
pushf
sbb
lret
jmp
psllw
shr
loopne
push
std
dec
out
jo
nop
mov
mov
insb
jle
mov
pop
mov
ret
jp
pop
add
js
js
xchg
fldcw
add
push
outsb
push
lods
mov
pop
fcmove
fisttps
push
test
aad
cmp
repz
sub
nop
jne
pusha
cmp
rol
add
jl
addl
dec
popa
clc
jg
dec
arpl
mov
pop
lods
pop
add
pop
fwait
data16
mov
jae
outsb
adc
mov
mov
loopne
mov
pop
rolb
cmp
pop
les
xor
filds
jb
mov
test
mov
xor
mov
xor
sub
jne
and
inc
test
mov
inc
sbb
bound
mov
and
push
dec
mull
lcall
add
shl
fistps
lods
leave
dec
subb
pop
movsl
push
insl
push
inc
or
pushf
cmp
sub
into
cmpsb
sbb
sahf
push
mov
cmp
movsl
psllq
test
fwait
jge
ds
push
jp
or
xor
scas
mov
inc
popa
jl
xchg
addr16
lea
cmp
pop
mov
pop
hlt
jmp
jb
push
pop
frstor
push
and
iret
mov
dec
pusha
and
push
mov
out
xor
sbb
push
hlt
in
pop
testl
sub
popf
jg
mul
test
call
fdivp
clc
cwtl
push
out
push
sbb
mov
mov
test
cmc
subl
les
push
repnz
test
clc
xchg
data16
jno
subb
xchg
cld
mov
pop
xchg
sub
sub
inc
scas
cltd
leave
mov
ror
loop
in
icebp
push
test
inc
lds
cmp
out
mov
in
push
pop
repz
pushf
xor
daa
xchg
movsl
push
dec
sub
sub
into
test
fisttpll
call
data16
test
and
in
sub
xchg
add
cmp
roll
into
movsl
sub
mov
mov
inc
call
cld
jne
dec
xchg
stos
adc
sbb
add
fimuls
push
gs
push
dec
aam
ja
sub
or
mov
inc
sbb
adc
into
ret
lcall
outsl
pop
int
adc
xchg
adc
jg
inc
movsb
jns
loop
ficomps
cmp
mov
inc
cld
mov
dec
mov
jbe
push
lcall
cltd
xchg
inc
cmp
and
xchg
mov
add
out
xor
jmp
sub
ficoml
cmp
inc
jge
mov
jmp
ret
sub
in
sbb
push
out
ljmp
mov
lcall
mov
mov
cmp
aad
notb
aaa
inc
sub
adc
icebp
mov
push
sub
jp
in
sbb
lahf
mov
adc
imul
loop
pop
sahf
mov
cmc
into
loopne
pushf
jb
add
stos
xor
cmpsb
mov
fs
push
or
cmp
xchg
scas
nop
cmp
clc
adc
pop
adc
push
mov
mov
ss
int
sbb
xchg
sub
mov
mov
cli
cmp
inc
in
sbb
mov
daa
jmp
lods
jecxz
jle
jae
test
aam
das
jg
rol
pop
or
shl
sub
popf
inc
int3
inc
movsl
jbe
addr16
mov
mov
test
clc
jg
jnp
lods
mov
fldenv
or
mov
xchg
pushf
or
inc
jns
pop
popf
pop
pop
xlat
jne
jnp
mov
stc
cld
adc
ret
hlt
dec
std
nop
mov
es
inc
cmp
mov
jno
mov
test
mov
adc
sub
pop
add
push
mov
push
xor
cwtl
xor
fs
fistps
cmc
fnsave
scas
xchg
xchg
leave
aaa
lea
jmp
mov
sbb
add
xor
xchg
repnz
outsl
in
sub
outsl
scas
lahf
ss
and
jl
mov
push
jo
scas
pop
jge
arpl
dec
dec
loopne
cmp
push
roll
mov
mov
push
adc
pop
ja
jns
mov
jbe
inc
fs
pop
test
je
dec
in
jl
sbb
adc
cmp
mov
mov
mov
rol
out
lds
sbb
sahf
mov
sahf
xchg
jg
test
jp
jo
mov
dec
in
das
jb
or
push
ljmp
in
or
jge
stc
mov
lret
xchg
xor
pusha
inc
lods
sbb
mov
into
sahf
cmp
inc
ljmp
pusha
cmp
pushf
sub
fmuls
mov
xor
fidivs
add
push
and
push
xchg
std
in
ficompl
in
cmc
mov
loop
in
test
or
pop
scas
mov
push
xchg
loopne
pushf
jns
jle
shlb
rolb
xor
ret
inc
or
cmpsb
jns
cltd
sbb
dec
lods
js
xchg
mov
sub
jmp
movsl
movsb
jmp
jno
imulb
scas
inc
enter
jnp
rcrb
nop
inc
ret
es
jnp
addr16
pop
hlt
xor
sti
dec
or
movsl
mov
aaa
mov
fidivrl
in
adc
push
jl
pop
jge
cltd
dec
dec
cwtl
sub
movsl
sbb
pushf
out
imulb
insb
mov
rorb
cmpsl
and
add
mov
dec
cmpsb
xchg
pop
insb
out
pop
dec
mov
jecxz
shr
dec
or
xor
dec
leave
mov
xor
add
pop
adc
push
insl
int3
and
repnz
jo
push
push
movsb
test
adc
int
or
xchg
xchg
test
and
in
into
mov
mov
jnp
cmp
ds
and
sub
pmaddwd
mov
pop
movb
pop
adc
or
sbb
loope
test
xor
cmc
leave
repz
enter
jmp
mov
jns
sub
and
inc
push
jl
gs
inc
xchg
cmc
mov
xchg
shl
mov
rcll
cs
xor
dec
sbb
mov
icebp
popa
add
sbb
push
adc
add
xor
ss
cld
lcall
dec
mull
and
daa
mov
jno
jae
sahf
adc
cbtw
xchg
dec
mov
shrl
cmp
in
lret
xor
ja
cmpsb
cmpsb
xchg
insb
pop
roll
into
cmc
lret
mov
mov
mov
mov
pop
fidivl
xor
adc
icebp
aam
out
mov
or
out
cmp
jnp
dec
cmpsb
push
xchg
enter
sub
cld
sbb
mov
mov
cmpsl
jecxz,pt
dec
lea
jmp
cld
pop
jo
add
mov
jno
sbbl
cwtl
incb
ja
stos
mov
cltd
pop
xor
and
pushf
jne
aam
pop
jae
and
dec
dec
pop
xchg
pop
pop
mov
fcoml
sahf
cmpsb
push
lock
loopne
mov
adc
add
add
xorb
fs
ret
in
adc
cmpl
in
movsl
fnsave
pop
and
sub
notl
lods
cmp
jo
iret
ss
xor
cmpsl
sub
mov
push
cmpsl
inc
jo
data16
and
inc
out
inc
mov
mov
xor
arpl
push
rolb
mov
cld
cmp
jb
or
cs
aaa
dec
push
fbld
clc
jbe
sub
mov
dec
xchg
jle
xor
cmp
pop
imulb
pop
loop
mov
push
xchg
cmpsl
imul
fnstsw
pop
out
xor
cli
xchg
dec
mov
sbb
and
das
push
loop
in
sahf
xor
pop
inc
rcll
mov
mov
mov
iret
sbb
add
mov
push
jg
lock
rcrl
in
into
cmpsl
lds
xchg
idivb
dec
hlt
jbe
outsb
iret
enter
addr16
aas
mov
sbb
divb
xchg
iret
jns
add
dec
jge
andb
pop
inc
into
xchg
fcomi
iret
out
inc
fsubl
incl
gs
out
out
jg
pusha
adc
fdivr
test
mov
or
enter
push
pop
fistpl
loop
cmpsl
ds
stos
pop
fcompl
inc
cmp
jp
xchg
mov
shlb
pop
push
xor
push
mov
inc
cmpsl
in
loop
aam
test
xchg
jne
jge
out
xor
int
jl
jb
fldcw
xchg
das
sub
and
pop
shll
rol
sbb
push
cwtl
stc
adc
push
inc
scas
xchg
jns
mov
aad
test
jbe
add
popf
xor
sbb
xchg
mov
inc
scas
insb
xchg
cmpsl
cltd
bound
sbb
fdivl
mull
and
outsl
iret
testl
cld
pop
sarb
ret
sahf
pusha
bound
popf
int3
movsb
jl
cmpsb
dec
adc
pop
aam
sbb
dec
out
sub
pop
mov
cmc
sub
cmp
mov
rcr
jp
loope
sbbl
mov
pop
mov
and
xchg
add
xchg
jbe
ljmp
dec
js
js
or
dec
sub
jnp
shrb
adc
repnz
push
popf
int
ljmp
inc
dec
xor
sti
pop
out
dec
mov
adc
push
loopne
sbb
jl
hlt
xchg
pop
stos
dec
popf
pop
inc
inc
cmp
mov
fsubs
gs
push
fsubs
sbb
cmp
add
xchg
scas
xor
lahf
in
jge
aad
cmpxchg
repnz
mov
or
mov
or
jae
xchg
inc
mov
cmc
rorb
mov
sti
addb
or
pop
add
add
mov
and
arpl
rcrl
loop
cli
inc
jno
out
xchg
sahf
sbb
divl
repnz
pop
adc
testb
movsb
dec
xlat
outsb
jg
pop
icebp
pusha
mov
stc
pushf
repz
aaa
sbb
inc
lahf
fsubrs
mov
sub
push
inc
jb
cmp
mov
insb
xchg
icebp
sbb
dec
jecxz
sbb
inc
lds
push
outsl
aad
mov
fs
cltd
ljmp
pop
mov
adcl
cmp
hlt
inc
cmp
inc
or
jb
lods
loop
pop
sub
xor
jb
adc
xlat
pop
push
ja
fmuls
sub
out
js
icebp
movsl
cmp
or
int
imul
push
mov
shll
stos
and
push
xor
aas
mov
daa
mov
or
aaa
in
fcoml
int3
fsubrs
popa
pop
popf
sbb
sbb
jecxz
test
add
pop
mov
sbb
xor
xor
push
jecxz
popf
je
add
jmp
sti
adc
jge
sbb
mov
lods
outsb
daa
mov
mov
arpl
mov
push
sub
jp
sarb
lret
lods
jp
pop
pop
mov
out
xchg
imul
jecxz
and
mov
xor
pop
scas
es
movsl
inc
pop
pop
xor
inc
fstpl
cltd
jae
mov
mov
push
nop
fistl
pop
fcmovne
in
and
mov
call
push
subl
pop
mov
mov
mov
add
sbb
pop
imul
pop
sub
cli
xchg
loope
jg
mov
sbb
dec
fs
xlat
xchg
lock
in
sbb
add
xchg
sub
push
lods
out
inc
mov
adc
and
in
push
adc
adcl
ficompl
fisubrl
jmp
jge,pn
lcall
sub
xchg
mov
push
rclb
in
mov
pop
and
xor
imul
pop
or
mov
test
push
inc
scas
mov
mov
dec
outsl
fsts
cmpsb
mov
pop
scas
and
mov
inc
xor
inc
rcll
add
add
insl
fdivr
nop
push
sbb
cs
inc
inc
sbb
sbb
loopne
imul
dec
shll
orb
mov
ds
dec
push
dec
sbbb
inc
shrl
lea
bswap
xchg
jnp
or
popf
pop
xor
lret
mov
int
push
lret
and
scas
gs
js
stc
or
cltd
mov
cmp
scas
mov
add
popf
in
mov
popa
test
rcrb
stc
loop
das
ret
hlt
sub
sbb
ds
cmpl
push
in
loope
inc
dec
mov
in
xchg
in
sar
adc
je
sub
add
inc
fiaddl
es
pop
shrl
jno
mov
adc
ret
push
xlat
emms
pop
outsl
mov
sahf
insl
rcl
adc
pusha
jle
xchg
nop
inc
lahf
out
rorl
pushf
cmp
jge
pop
and
test
sbbb
aam
daa
inc
sahf
xor
jecxz
mov
push
pop
hlt
sub
and
mov
xor
shl
and
dec
test
mov
sahf
mov
adc
dec
je
jge
push
jb
filds
push
stos
jmp
or
push
iret
mov
out
cwtl
fcoms
add
pop
jne
inc
sub
insl
jnp
pop
repz
mov
cmpsb
fsubs
inc
or
mov
inc
xchg
sbb
push
sbb
xchg
outsl
mov
sbb
mov
aam
loopne
jo
ss
jnp
notl
fnsave
xchg
daa
add
jl
inc
sti
jb
inc
lcallw
test
mov
in
outsl
lret
mov
std
imul
jae
adcb
scas
inc
cmp
cld
pop
scas
imul
out
scas
inc
roll
mov
in
sub
jmp
out
je
mov
xlat
sub
je
dec
stos
stos
int3
mov
gs
sbb
mov
inc
call
xchg
adc
aas
insl
sub
dec
mov
imul
sahf
inc
xor
jnp
mov
cmp
outsl
pushf
int3
arpl
xchg
lock
gs
sub
jp
nop
mov
pop
add
push
cli
sbb
daa
xor
bound
inc
jle
mov
scas
mov
mov
cmp
or
dec
adc
imul
push
ret
sbb
sub
xor
nop
xlat
mov
ds
add
scas
mov
lcall
out
fwait
sbb
int
repz
out
xor
cltd
pop
iret
push
into
cmp
pop
cmp
mov
addl
xchg
sub
adc
clc
push
pushf
repz
cmp
mov
ja
inc
fs
out
test
dec
iret
xor
jbe
mov
inc
xchg
cmp
imul
mov
adc
and
push
pop
outsl
pop
jle
mov
pop
imul
mov
mov
test
cmp
sar
aam
insb
jb
push
mov
pusha
adc
sub
mov
sbb
loope
mov
fisubrl
xchg
jp
scas
mov
lret
and
xchg
fistpl
aaa
or
shll
mov
pop
je
ss
add
add
orl
xchg
and
push
mov
enter
mov
add
mov
scas
addl
sahf
ret
mov
cs
cmp
jae
fwait
insl
xchg
mov
lea
jne
icebp
sahf
std
aad
add
jnp
test
push
push
fists
xor
xlat
fs
mov
add
jno
shrl
adc
stc
or
jo
pop
shrl
inc
pop
int
aad
cmp
and
pop
lahf
rclb
scas
xor
aad
enter
mov
paddd
lea
stos
mov
adc
sub
xor
xchg
in
xchg
out
push
jmp
or
pusha
xchg
aaa
jb
js
je
dec
cltd
pop
push
sbb
mov
dec
in
mov
jno
lahf
mov
sti
in
rorl
adcb
in
mov
les
and
dec
fwait
cltd
in
out
repnz
insb
movsl
sbb
xchg
xchg
js
and
lods
mov
cmpsl
faddl
out
cmpsl
sub
xor
scas
pusha
int
adc
or
cmp
enter
shrl
add
icebp
sub
mov
lret
push
pusha
les
sub
mov
mov
insb
sub
inc
or
mov
aam
adc
mov
jp
sub
mov
or
scas
ds
jae
aam
inc
mov
sahf
mov
fsubl
outsl
xor
cmp
sub
mov
push
mov
fldt
outsl
nop
in
or
negb
and
jbe
adcl
and
rcrb
cmc
iret
sub
sbb
and
inc
xor
pop
inc
mov
mov
shl
js
lods
cmp
std
lret
or
loope
int3
xlat
sarl
scas
cmp
div
mov
inc
xchg
insl
jb
lods
call
mov
ljmp
jno
xlat
popa
jmp
mov
push
in
mov
push
lods
add
in
psrlq
push
inc
fdivrs
jecxz
xor
jge
adc
fimull
fwait
or
cmp
adc
mov
ds
and
cwtl
fsubr
and
xchg
test
pop
pop
scas
push
cmpsl
out
jg
call
dec
in
test
mov
or
add
or
mov
lea
or
xchg
push
ljmp
jno
or
imul
shll
js
jno
out
xchg
xchg
jae
call
push
xchg
ljmp
repz
cmp
inc
jg
je
movsl
insb
mov
fprem1
mov
pop
xchg
popf
adc
bt
mov
bound
sub
pop
fdivs
xor
lea
jne
int
in
push
loope
mov
add
cmp
dec
pop
test
mov
pop
nop
xor
cmc
sub
push
xchg
pop
js
mov
cmpsl
pop
pop
lock
mov
test
pop
icebp
bound
inc
ficomps
mov
ja
dec
call
mov
movsb
fcmovnu
mov
push
inc
sbb
adc
push
pop
add
or
pushf
js
andl
mov
aam
lods
mov
aam
outsl
sbb
bound
mov
test
push
or
push
jbe
mov
or
out
cld
pop
jnp
clc
and
sahf
dec
lret
inc
arpl
sahf
xor
cli
adc
sbb
push
ret
inc
mov
inc
imul
pop
xchg
xchg
rclb
repnz
and
add
fidivs
lcall
movsb
imul
ret
testl
ud1
pop
cmpb
mov
dec
xchg
push
call
ret
outsl
arpl
sbb
hlt
stos
lahf
dec
jle
dec
icebp
cmpsl
cmp
lods
xlat
outsb
fbstp
push
jle
xor
aam
icebp
scas
mov
lods
xchg
loope
or
ljmp
call
jns
lods
rorb
pop
mov
pop
mov
fwait
insl
jecxz
outsl
add
adc
sbb
les
icebp
mov
cmpl
test
jnp
xor
lcall
lcall
mov
inc
mov
pop
mov
js
es
out
or
sbbb
mov
push
fwait
icebp
les
jg
int
imul
xchg
lea
cli
inc
push
in
mov
and
push
out
push
ss
sbb
xchg
mov
mov
inc
jae
fisubs
movsb
stc
loop
loopne
dec
imul
cmc
lahf
and
jmp
pop
mov
inc
scas
push
mov
adc
mov
mov
and
int
das
ljmp
loope
sbb
inc
pop
pusha
push
movsl
lods
mov
sub
movsb
sarb
add
inc
fdiv
and
jb
fdivr
roll
in
popl
sbb
xchg
and
int
arpl
sbbl
fstpt
pop
mov
cmp
mov
jg
jno
pop
inc
mov
lcall
push
sbb
adc
inc
movsl
test
and
jl
cmc
scas
insb
icebp
test
iret
jl
mov
fidivrl
sarl
xchg
mov
mov
ret
insb
mov
andb
pop
je
mov
push
call
push
xor
fnstsw
idivl
pop
repz
sti
sub
push
xorl
push
xchg
addr16
dec
in
fildll
adc
mov
xchg
lret
mov
pop
rcrl
shrb
pop
sub
add
es
jb
jb
mov
insl
in
stc
mov
inc
sub
ret
pop
bound
repnz
mov
dec
pushf
cmpsl
js
push
popa
repz
jb
or
lcall
ret
add
pushf
scas
sahf
mov
add
out
jo
mov
xchg
pop
xor
fs
lods
inc
jno
add
stc
dec
cmp
daa
in
cmc
fcmove
cmc
dec
arpl
aam
lret
cwtl
jl
dec
out
in
into
addr16
insl
test
int3
xor
push
lret
fisttpll
add
cli
shlb
or
in
cwtl
push
in
mov
xor
dec
xlat
xchg
xchg
mov
jmp
lea
inc
or
lods
jge
pop
bound
sub
jns
jge
sub
in
pushf
pop
mov
ret
movsl
pop
jp
jnp
std
dec
push
xchg
notl
rcll
sub
int
inc
movsb
out
insl
pop
jbe
or
jbe
mov
push
loop
sub
cli
pop
sub
fwait
lods
repz
stc
xchg
pop
sub
je
inc
push
jmp
test
jb
shlb
jo
icebp
push
ljmp
jno
das
lods
mov
adc
push
dec
xor
lcall
daa
jbe
ds
dec
ficompl
jb
pop
in
loopne
testl
lods
cmp
mov
push
jo
cltd
dec
movsl
xchg
call
pop
cmp
sbb
sub
push
jbe
outsl
mov
or
rep
hlt
jmp
and
inc
sahf
pop
jb
das
jecxz
dec
inc
sbbl
inc
push
jae
or
fstps
cli
ds
pop
lret
and
or
and
mov
xor
inc
cwtl
cli
repnz
fsubr
cltd
ds
ret
das
push
mov
or
xlat
inc
dec
sahf
xchg
shl
and
out
cmp
sbb
in
jbe
or
leave
daa
mov
aaa
or
outsb
cmpsb
aad
or
movsb
xchg
dec
or
jp
or
dec
in
xchg
sbb
adcb
xchg
movsb
gs
aad
pop
mul
mov
mov
cmp
fs
xor
xchg
enter
inc
push
subps
add
mov
outsl
and
and
mov
loopne
test
lret
mov
push
loop
mov
pop
xchg
clc
dec
mov
das
xorb
je
sbb
mov
mov
sub
cmpsl
jno
hlt
loope
scas
mov
sbb
decl
mov
and
xor
gs
push
push
scas
jnp
mov
fldt
push
push
add
icebp
or
add
repz
push
aas
sbb
push
aas
hlt
pop
bound
mov
imul
push
insl
fs
daa
mov
dec
mov
dec
leavew
cmp
mov
cmp
sub
stos
pop
leave
movsl
cmp
addr16
xchg
xchg
ret
fmul
lods
cmp
adc
fwait
push
dec
shll
loopne
scas
mov
jb
jge
loopne
pop
movsb
repnz
cwtl
pushf
daa
mov
xor
outsb
bound
xchg
fs
jae
cli
pusha
mov
sbb
mov
mov
push
add
sbb
adc
mov
andb
data16
push
test
pop
in
int
push
or
fisubrl
fst
push
popf
lret
pop
push
call
xor
jg
rcll
test
mov
mov
push
cmc
sub
adc
cs
mov
popf
movsb
jp
jle
push
dec
pop
cmp
popf
mov
stos
aam
jge
dec
mov
add
mov
adcb
test
mov
fwait
shlb
mov
pop
negb
xchg
aas
scas
cmp
push
xchg
popa
lahf
stos
sub
pop
lret
or
jae
rcr
sbb
sahf
mov
mov
sub
inc
mov
sub
ficompl
jne
or
arpl
popa
add
or
imul
jmp
sbb
sub
pop
mov
jbe
test
pushf
iret
sbb
cmp
xchg
xchg
lea
adc
stos
mov
sub
cmc
cli
xor
mov
and
std
xchg
std
ds
scas
xorl
jmp
lea
std
repnz
sbbl
cs
jmp
xlat
xchg
outsl
push
pop
xchg
mov
pop
or
mov
adcb
xor
fs
sub
loopne
inc
daa
ja
xchg
or
jns
dec
cmc
xor
lcall
adc
loopne
loope
outsl
outsl
cmp
pop
loope
inc
aam
cmp
sbbl
xor
mov
xchg
icebp
jp
cmp
insl
xchg
pop
jno
cmp
cmp
mov
fcomip
fstps
dec
pop
jmp
rcl
call
pop
sbb
inc
xor
in
cwtl
xchg
pop
out
mov
nop
insl
daa
mov
out
dec
clc
cmp
and
inc
sbb
push
mulb
pusha
test
xchg
dec
pushf
aad
jp
mov
sbb
jp
movsb
fwait
sbb
test
shrb
in
add
sbb
es
cmp
out
loop
mov
sarl
pusha
push
fistps
mov
dec
sbb
push
pop
sub
cmp
sbb
scas
push
ficoms
fldl
repnz
in
mov
inc
fnsave
push
cwtl
ljmp
mov
dec
xor
inc
xchg
sti
pop
mov
movsl
adc
and
imul
push
mov
shll
out
sbb
aam
repnz
xchg
jae
fmul
loopne
les
fwait
out
sbb
inc
shll
gs
add
cmp
scas
jb
push
mov
lret
pop
push
push
or
movntq
dec
les
cmp
pop
lret
stos
mov
xchg
test
jp
cwtl
jmp
xlat
pop
xchg
inc
scas
repz
jbe
sbb
fcmovnu
jge
mov
xchg
mov
ret
lods
add
into
cs
mov
push
adc
and
jmp
js
sbb
xchg
mov
xchg
push
lock
mov
aaa
into
sub
jbe
add
xchg
sub
popa
int3
popa
daa
stos
xchg
lods
lret
jns
xor
in
jo
mov
sub
mov
add
cmp
or
rorl
jp
inc
popl
cli
add
mov
lcall
repz
cmp
mov
mov
loop
daa
cltd
out
inc
out
outsl
sub
int3
mov
hlt
or
rclb
sbb
jbe
aaa
push
mov
cld
clc
and
xchg
sub
cs
mov
pop
xor
shll
imul
lods
mov
xor
xor
sub
sahf
mov
push
mov
xorb
loope
dec
dec
lret
loop
jmp
xchg
lea
dec
or
pop
pop
int
xchg
xor
or
sub
mov
xchg
in
scas
ds
inc
aad
jmp
inc
jmp
pop
loop
xchg
xor
sarb
push
sbb
push
shl
ret
adc
fs
xor
push
mov
call
xor
xchg
mov
out
push
mov
stos
out
jbe
repnz
dec
dec
lret
into
gs
shll
inc
or
in
and
jnp
mov
pop
adc
mov
notl
mov
popa
stc
jle
ss
mov
mov
leave
mov
jp
dec
push
movb
adc
sarb
inc
add
dec
mov
mov
lea
loopne
sti
xchg
adc
push
lahf
add
insl
in
ja
clc
sbbl
icebp
inc
jmp
adc
lcall
mov
jbe
mov
adc
daa
test
adc
xchg
stos
push
mov
xchg
mov
aam
cmp
mov
adc
sti
sbb
pop
or
add
pop
pop
xor
mov
cmp
sbb
adc
push
cli
loope
test
ficompl
cltd
loop
fdivrl
outsl
inc
xchg
jmp
shlb
dec
push
xchg
inc
xchg
insb
sbb
jb
dec
in
adc
push
jae
dec
pop
jp
lahf
xchg
dec
inc
pop
nop
dec
pop
jg
xor
fs
push
cltd
decl
xchg
jge
mov
and
ds
sub
dec
lahf
decb
pop
jg
jle
xchg
cwtl
mov
icebp
shlb
mov
jbe
inc
test
cmp
cmp
push
jno
lock
popa
pop
enter
cmp
insl
je
jl
cmc
pop
inc
clc
mov
stos
jbe
fstpl
nop
mov
cmp
loop
loopne
add
int3
pop
or
popf
xor
mov
flds
and
fdivrs
montmul
cmpsb
xchg
loope
movsb
xor
sbb
in
and
mov
push
lods
dec
push
xor
andl
inc
xor
out
xchg
bound
sub
cmp
icebp
mov
nop
push
lcall
es
cmp
jo
rcr
sbb
icebp
dec
rorl
push
stc
sbb
daa
out
and
outsb
outsb
mov
or
outsb
lret
fs
jne
movsb
cmpsb
jp
fildll
call
shl
adc
lods
or
enter
jl
mov
inc
movsl
mov
mov
test
mov
cmc
mov
or
shl
mov
inc
cld
test
inc
lahf
mov
adc
cmp
adc
cs
xchg
imul
scas
mov
jge
loopne
popf
adc
inc
outsb
cmp
ljmp
sbb
int3
push
pop
cmpsb
mov
push
lock
lods
and
jbe
mov
or
or
add
and
mov
sahf
notb
shrb
push
pusha
lods
mov
movsl
xor
jb
leave
cmpsb
cmp
xchg
xchg
cmp
mov
jle
mov
lea
test
pop
mov
pop
fistpll
pop
pop
pushw
pop
data16
xchg
stos
jecxz
test
mov
push
jg
xlat
fcompl
xor
cltd
notl
mov
out
mov
insl
jno
outsb
add
dec
adc
mov
nop
stos
fdivp
sbb
sbb
fsubrp
pop
ja
add
jbe
lret
sbb
inc
inc
or
imul
and
inc
push
xchg
aas
js
mov
cltd
mov
xchg
insb
sub
rolb
xlat
loopne
jbe
push
ss
cmp
arpl
mov
test
jle
fcompl
or
dec
xor
das
adc
pop
lret
cmpsb
ret
clc
lret
lcall
inc
inc
sbbl
sahf
loope
sbb
cld
push
adc
push
mull
sti
xchg
imul
imul
call
sbb
pushf
xor
mov
into
pop
inc
addr16
jp
mov
cmp
mov
es
inc
cmp
fdivp
mov
rorb
out
pushf
lods
or
scas
mov
add
scas
xchg
fldenv
jae
pop
mov
fldcw
pop
outsl
mov
lock
adc
sbb
dec
fwait
xchg
sbb
xchg
sbb
jns
out
add
jecxz
mov
shlb
add
pop
aaa
push
pop
in
pop
enter
lods
bound
xor
add
clc
add
test
loope
popa
cli
call
fidivl
int3
adc
fsts
xlat
mov
push
pop
xlat
pop
in
mov
inc
pop
cmp
mov
aam
xor
loop
add
mul
daa
imul
mov
movsb
movsb
rclb
pop
jmp
mov
repnz
ljmp
aad
gs
push
fisubrl
sbb
mov
std
adc
sub
or
mov
cmpsb
mov
test
in
movsl
push
outsl
out
xor
sar
mov
mull
call
sbb
adc
shrb
fdivl
mov
cli
rolb
sub
loope
dec
fdivrl
cmp
in
test
add
xorb
mov
add
gs
sub
js
pop
add
das
pop
repnz
mov
and
xchg
pop
inc
mov
mov
dec
sub
dec
adc
sbb
xlat
js
adc
cltd
pop
jle
arpl
xchg
call
cmpsl
mov
push
dec
int
jg
out
lcall
lods
pop
push
mov
int
into
outsb
fmull
and
stos
jmp
mov
add
adc
push
arpl
pop
xchg
jbe
out
mov
cmp
fs
mov
mov
lret
adc
jno
lahf
mov
mov
leave
pusha
cltd
sub
hlt
adc
cmpsl
sbb
pop
push
sub
out
xchg
cmp
imul
inc
cmp
fnsave
notb
loope
xor
xor
ss
cli
inc
mov
and
stc
adc
inc
dec
loope
inc
pop
push
sub
jle
inc
in
lock
enter
gs
data16
add
test
test
lret
jmp
mov
bound
rcll
cmc
pop
jno
fimuls
mov
xchg
orl
cmp
outsl
adc
mov
inc
and
hlt
push
inc
xlat
outsl
pop
dec
xor
sub
dec
jo
pop
adc
pop
mov
pop
rolb
pop
loop
mull
lods
cmpsb
imul
jns
xlat
and
mov
stos
pop
stos
pop
sahf
fldt
test
lock
xor
push
mov
mov
push
sbb
add
sub
fldl2t
push
dec
shl
pusha
into
inc
fimull
cli
rorl
add
mov
rorb
pop
inc
mov
xor
leave
popa
jo
pop
fidivs
in
cld
jle
rclb
sub
nop
add
pop
pop
pop
repz
je
mov
push
inc
pusha
push
mov
popa
arpl
push
or
cmp
call
lahf
loope
mov
and
shrl
movsb
pop
mov
daa
lret
cli
or
mov
fsubrp
inc
pop
pop
cmc
cmp
add
xchg
sarb
out
add
dec
stos
pop
or
cmp
testb
inc
adc
sub
cmp
je
dec
in
subl
lods
movsl
insl
add
xor
sbb
mov
rcrb
xor
xchg
xlat
ljmp
jno
jne
mov
incl
roll
call
pop
ret
lret
jns
pop
lahf
aam
xchg
hlt
inc
push
mov
mov
les
jle
push
aas
loop
pop
mov
sub
sbb
pop
in
scas
pusha
pop
jle
pop
clc
enter
sbb
sbb
cmp
inc
lret
or
mov
push
in
sbb
xor
mov
xchg
jb
into
loope
xor
add
sub
outsl
push
pop
mov
xchg
mov
lea
nop
sti
xor
push
outsb
and
insl
insb
pusha
jne
fsubl
rcll
stos
add
daa
inc
mov
test
xor
popl
lret
out
fisubl
or
sbb
xchg
pop
popf
cmp
inc
scas
sub
jmp
push
mov
leave
inc
iret
fcoml
sahf
xchg
cwtl
push
or
inc
dec
repnz
mov
mov
aam
mov
out
lahf
pop
dec
in
stos
icebp
jle
stc
cmc
into
stos
imul
and
clc
xor
iret
sub
push
cli
or
jge
fwait
mov
js
mov
daa
cli
pop
inc
fisttpll
jecxz
in
pop
fsubrs
mov
jne
pop
insb
adc
mov
ror
scas
cwtl
and
out
data16
inc
mov
insb
lret
movsb
push
sub
mov
sbb
sbb
and
in
movsl
and
jl
arpl
push
cltd
in
pop
and
mov
cmpl
sbb
xchg
adc
xor
mov
xor
mov
cmc
dec
pop
push
roll
sar
mov
loope
mov
mov
push
pop
adc
add
outsl
inc
pop
push
cmp
aam
sub
or
mov
inc
dec
nop
sti
adc
cmp
std
dec
cs
lock
gs
lods
sbb
loopne
stos
cmp
fcompl
pop
out
aad
in
out
jg
mov
gs
insl
xlat
movsl
or
sbb
mov
cld
in
sbb
or
xchg
mov
leave
add
fldt
int
xchg
int3
fmulp
cwtl
int3
arpl
cwtl
aad
push
insl
ljmp
mov
enter
icebp
das
sbb
incl
dec
ja
adc
std
shrl
dec
pop
addr16
xor
add
jnp
int
mov
dec
out
pop
lock
das
insl
sbb
lret
and
shrb
mov
cmp
aas
rolb
and
int3
popa
pop
pop
xchg
pop
push
sbb
dec
pop
imul
jno
pop
int3
aas
mov
mov
in
fisubl
add
cmc
mov
ficoml
fcmovne
jae
cmpl
mov
std
mov
cwtl
test
loop
mov
das
movsb
inc
stos
in
sbb
dec
push
jmp
mov
dec
and
subb
xlat
dec
int3
hlt
mov
in
daa
pop
outsb
or
and
cwtl
push
test
fstl
or
insb
mov
push
and
test
pop
fistps
mov
shrb
and
ja
and
enter
clc
call
aaa
pushf
mov
mov
in
xchg
lahf
es
mov
dec
lret
fisttps
mov
cld
sbb
add
cwtl
subb
sahf
scas
adc
out
fildll
push
cwtl
iret
mov
stos
arpl
stos
push
pop
data16
mov
mov
xor
test
mov
and
or
faddl
stos
xchg
mov
addr16
push
pop
jns
or
rol
enter
data16
cmp
in
add
inc
xlat
orl
jmp
mov
jg
push
stc
xchg
popa
adc
xchg
add
ja
les
or
daa
cmp
bound
daa
es
icebp
push
push
or
mov
scas
push
lods
lea
aam
pushf
cmp
or
repz
enter
hlt
jns
mov
add
pushf
sub
hlt
hlt
out
mov
xor
sbb
inc
ljmp
jno
mov
leave
or
pop
mov
aad
pop
cmc
icebp
adc
leave
popf
mov
sub
or
jle
pop
aam
inc
and
es
mov
add
daa
xor
lret
stos
ret
scas
cmc
jp
out
outsl
or
xchg
mov
lea
addr16
ja
mov
aaa
pop
pop
icebp
push
pop
bound
push
mov
push
test
subb
ffreep
and
jge
push
mov
inc
fisubrs
pushf
or
data16
out
repnz
xchg
not
mov
xchg
in
movsb
mov
cmc
icebp
fldenv
pop
lds
imull
das
push
xchg
xchg
mov
mov
xor
cltd
dec
in
mov
imul
xchg
and
dec
out
lock
adc
stos
flds
mov
fstpl
test
fs
lea
sub
rclb
nop
mov
pusha
testl
sarl
add
mov
stos
lock
lcall
andb
loopne
or
fwait
call
or
ret
in
loopne
cli
push
mov
aad
leave
jbe
xchg
js
mov
movsl
pop
or
mov
mov
cmp
mov
dec
adcl
push
js
cmp
movsl
pop
fstpl
mov
cmp
daa
mov
leave
add
xchg
xor
je
into
pop
sbb
outsl
daa
pop
lods
sub
or
fcoml
push
mov
imul
jae
lds
fwait
cmp
mov
dec
sub
icebp
jp
mov
mov
iret
or
or
dec
pop
pop
adc
xor
cmpsl
push
cmc
repnz
cmp
add
iret
call
and
imul
nop
das
mov
sbb
mov
movsb
cmp
addb
stos
cmp
push
idiv
pushf
push
xchg
mov
cwtl
stos
nop
xchg
pop
loope
rep
ret
repz
insb
shll
js
inc
sbb
fdiv
adc
lods
stc
xchg
push
jmp
popf
out
mov
push
sub
repnz
rep
int3
stos
clc
jg
sub
mul
js
divl
inc
mov
loope
inc
cmp
test
mov
loop
inc
mov
inc
xor
mov
lret
pop
imul
out
mov
popf
mov
loopne
push
sarb
push
cmc
jnp
or
push
fisttps
or
pop
insl
pushf
mov
lods
inc
rcl
ljmp
movsl
cmp
imul
jg
arpl
sbb
clc
jnp
ret
lret
sti
fwait
clc
scas
mov
inc
popf
mov
xor
mov
adc
mov
add
jns
imul
jmp
push
je
xor
adc
fiaddl
mov
mov
loopne
test
repz
and
das
push
mov
nop
mov
mov
das
les
sub
pop
les
in
leave
jae
mov
pusha
mov
jecxz
enter
call
leave
pop
push
lret
pop
in
mov
mov
or
xor
pop
xchg
jb
cmp
ds
jae
outsl
xchg
std
idivl
mov
rcl
and
add
cmp
aad
stos
ror
inc
jl
js
hlt
sub
dec
pop
mov
jns
daa
fdivs
in
sub
push
out
leave
jns
cmp
add
lret
and
test
ss
stos
std
arpl
xor
push
cmp
aad
mov
jmp
mov
jb
lea
lods
es
imul
iret
roll
mov
and
push
rcrb
and
inc
mov
fdivrs
aas
test
mov
sub
das
cmp
mov
sar
xor
and
test
in
int3
sub
xor
jecxz
sarl
mov
add
movsl
cwtl
sub
and
aas
not
mov
xor
scas
push
sti
iret
aas
insb
adc
adc
fimuls
inc
inc
and
loop
inc
push
test
out
pop
mov
mov
inc
icebp
or
aaa
jg
int3
mov
fistpll
mov
inc
rorl
pop
lret
xchg
pushf
and
ja
jb
hlt
push
mov
xchg
aaa
scas
pop
int3
and
or
test
inc
push
shrl
jle
mov
movsb
jmp
mov
int3
stos
or
xchg
sbb
or
ret
aad
push
das
and
or
clc
andb
xchg
cmp
hlt
xchg
cmp
aaa
sarb
mov
lods
sbb
into
ss
and
inc
pusha
cmp
dec
loop
int3
pop
add
pop
sub
dec
shl
jle
shrb
jecxz
sbb
lock
jmp
push
movsl
fsubrl
shlb
dec
cld
cmp
mov
sbbl
dec
rol
jns
roll
adc
push
inc
mov
das
scas
fisubrl
cmp
inc
sub
xchg
xor
mov
adc
dec
scas
mov
nop
xchg
decl
sbb
sub
xlat
int
mov
shrl
fnstenv
mov
inc
les
cmp
leave
stos
and
sbb
out
xor
mov
lea
push
test
jnp
sub
hlt
stc
lret
xor
adc
mov
and
ljmp
xor
mov
loope
mov
pop
js
lret
aam
cmp
ret
movsb
subl
into
imul
push
push
xlat
into
in
mov
jae
ljmp
adc
xor
pop
divb
jle
sub
leave
cli
in
lcall
sti
aas
push
test
cli
xchg
xor
inc
in
fisubl
add
mov
ret
lds
outsl
jne
dec
xlat
lret
sbb
adc
pop
cmc
push
cmp
jge
das
jl
xor
push
xchg
scas
adc
and
sbb
push
dec
pop
jmp
jge
cld
pop
js
mov
lock
cmc
mov
mov
in
xchg
out
enter
std
sbb
lret
push
jb
dec
sarl
inc
inc
lods
dec
push
dec
jo
adc
lcall
fmull
sbb
add
pusha
arpl
sbb
ret
fistpll
sahf
sahf
or
inc
outsb
fs
ljmp
je
sub
fnstenv
dec
addr16
nop
cs
inc
adc
rorb
push
fisubrl
rcrl
ror
test
sbb
lret
cld
push
mov
xchg
push
faddl
adc
sti
xor
andb
mov
repnz
lods
ret
or
inc
mov
test
mov
data16
xchg
jl
inc
pop
or
sbb
dec
fbstp
sub
or
out
cmc
in
sbb
outsl
add
loopne
nop
daa
js
inc
lock
jo
adc
sub
and
sti
sbb
mov
fisubs
ja
loop
loopne
dec
pop
cld
out
sbb
dec
stos
xorl
mov
cmp
fsubrl
fidivrs
push
mov
mov
std
pop
dec
aaa
xchg
jle
fcmovnbe
addr16
lods
jae
pop
jns
mov
dec
dec
pushf
jp
or
xor
nop
aas
sarl
ret
xchg
lds
imul
mov
pop
mov
jae
cmpsl
mov
xchg
mov
mov
addr16
inc
fisubl
mov
jae
icebp
mov
cmp
mov
push
jne
cmp
stos
add
jle
into
jmp
sahf
mov
mov
push
inc
arpl
adc
mov
popa
pushf
inc
lods
inc
sub
iret
cwtl
inc
out
test
leave
pop
movsl
pop
or
add
push
test
mov
pop
mov
lret
and
stc
xchg
pop
stos
lahf
and
push
fcmovnb
xor
icebp
icebp
in
sti
sub
lret
int
ja
fbstp
lds
shlb
je
fxch
xchg
stc
cmp
call
inc
aad
mov
xchg
add
cltd
sub
mov
cmpsb
and
cmp
lock
imul
sbb
adc
add
int3
cwtl
or
mov
loope
in
sahf
push
add
mov
jmp
test
inc
mov
mov
les
aaa
sbb
mov
cmovp
ja
stos
scas
cmpsb
arpl
add
xor
add
fiaddl
ss
jmp
shrb
add
test
lock
popa
adc
jmp
cmp
mov
fimuls
movsl
sbb
pop
jecxz
adc
in
leave
mov
ja
inc
int3
popa
jg
xchg
inc
aam
xchg
dec
jecxz
push
imul
aaa
js
or
es
in
push
lcall
lret
mov
call
inc
mov
mov
push
inc
sar
jp
lds
jmp
in
in
dec
sbb
xchg
ds
lock
or
test
and
ror
push
stos
mov
pop
inc
jmp
and
jecxz
sti
xchg
push
pop
imul
mov
pop
inc
pop
insl
enter
lcall
repz
add
adc
adc
cwtl
das
or
das
fsubrl
popa
fs
adc
pop
push
push
or
or
dec
sbb
cmp
cmp
push
xchg
add
pop
push
pop
ret
cmp
push
push
mov
xor
sub
orl
shll
xlat
pop
cmp
cmp
mov
cmpb
pop
out
adc
mov
adc
dec
inc
dec
in
sbb
push
repz
pop
stos
gs
test
or
jg
ja
push
jl
shll
sbb
push
inc
flds
or
sbb
jg
enter
arpl
adc
mov
mov
dec
dec
mov
mov
jne
jne
das
cld
mov
lds
add
xor
mov
mov
inc
arpl
std
arpl
cld
movl
sbb
pushf
cmp
repz
bound
mov
sbb
or
inc
adc
int
fwait
mov
pop
xor
test
push
loope
fstl
pop
shlb
shll
add
sub
pop
xchg
mov
push
std
stos
cltd
xor
pop
mov
mov
jmp
and
aad
sbb
push
sbb
xor
lods
fldl
sub
cmp
jecxz
jle
fnsave
push
test
popa
cwtl
xor
pop
push
jle
adc
xchg
loop
loopne
flds
js
inc
pop
pushf
movsl
xor
jg
out
sti
ljmp
inc
xor
jno
mov
mov
jnp
lret
push
pop
mov
cmp
mov
les
lods
mov
jle
testb
jnp
jl
outsb
pushf
cs
adc
cmp
leave
mov
iret
cs
fnstcw
sub
ja
mov
dec
in
inc
lock
lock
jmp
and
sti
gs
cmp
cmp
mov
sbb
jecxz
fprem1
mov
addr16
cmp
add
inc
xchg
sbb
pop
ds
pop
rorl
nop
xchg
mov
pop
movsl
dec
adc
hlt
loopne
rcll
mov
ret
les
rorb
xor
add
sub
insb
aad
into
enter
mov
push
out
inc
xor
out
arpl
rcrb
sbb
adc
push
dec
push
inc
dec
out
xor
aam
push
jbe
jns
shll
adc
int
inc
into
mov
and
sti
pop
stc
je
movsb
outsb
outsb
add
stc
pop
cmpb
or
cmp
sub
inc
sbb
jae
les
push
and
cs
ss
mov
sbb
lret
mov
fmulp
mov
xchg
inc
pusha
add
push
ds
mov
fdivl
push
and
imull
mov
loopne
mov
adc
sbb
iret
jbe
cld
ss
xor
push
out
xchg
mov
test
cmpsl
adc
and
mov
jae
idivb
fistpll
push
mov
fwait
xor
test
stos
je
mov
cmpsl
or
bndstx
aad
dec
mov
test
imul
pop
push
jo
and
inc
jb
jae
sub
push
inc
pop
aad
test
nop
inc
sub
add
pop
cmpsb
das
inc
or
enter
fbstp
cmp
xchg
mov
rolb
adc
lock
test
pop
pop
iret
movsl
ljmp
sbb
jno
cmp
insl
push
or
xchg
sbb
lods
mov
jp
les
outsb
push
incl
andl
les
outsl
sarl
out
mov
mov
jo
outsl
rcrb
mov
pop
lahf
mov
ficomps
fistps
mov
mov
adc
loopne
push
dec
cmp
out
int
push
out
cltd
jecxz
inc
dec
mov
adc
sbb
hlt
mov
dec
hlt
jo
pop
push
adc
mov
jp
and
add
inc
push
icebp
nop
push
xchg
jle
push
ret
inc
loop
cwtl
stos
aas
cltd
fisubrs
les
jp
sbb
cmp
adc
pop
callw
outsl
mov
out
adcl
cwtl
xchg
daa
shlb
icebp
lock
cmp
cmp
mov
repz
ss
repz
push
adcl
jno
cmp
fs
cmp
or
dec
loopne
jnp
jns
or
mov
testb
int
or
sub
enter
add
mov
and
aaa
daa
jbe
adc
push
inc
dec
in
xor
dec
mov
mov
xor
enter
or
mov
rcrb
repnz
lret
aas
mov
xchg
mov
ss
sbb
lret
xchg
mov
ret
arpl
in
aaa
stos
ljmp
scas
lea
mov
pop
in
xor
pop
sub
mov
mov
notl
notl
sbb
cs
into
loop
jl
sti
sahf
in
fwait
jne
mov
dec
mov
add
pusha
xlat
pop
sub
jle
in
push
popfw
or
mov
cltd
xor
pusha
xor
xchg
dec
jge
jecxz
enter
sti
into
int
fisubs
mov
cs
push
pushf
scas
pop
cli
testl
les
in
mov
push
pop
fildll
call
and
adc
xchg
xor
adc
xchg
add
movsb
cmp
icebp
into
pop
jmp
mov
sub
or
inc
mov
dec
cmpsb
sbb
adc
push
into
jbe
call
in
pop
adc
inc
aam
and
lcall
push
movsl
jl
add
cmpsl
pop
and
adc
sub
pop
jle
or
lret
mov
jno
cmp
lahf
add
stc
or
dec
inc
push
jge
dec
cmpb
mov
cmc
cmpsb
sbb
and
cmc
fists
push
faddl
sub
jo
mov
shl
push
or
push
mov
jmp
pushf
es
lea
adc
sar
jmp
ss
mov
and
mov
jmp
pop
mov
xchg
bswap
ret
cs
jle
mov
mov
decl
out
dec
mov
testl
in
test
pop
ret
fnsave
jl
push
jecxz
sbbb
fs
call
mov
and
psraw
addb
cmp
sub
repz
in
sub
mov
mov
in
jo
clc
sub
cmpsl
push
mov
sub
das
lods
pop
mov
lea
test
lahf
ss
inc
dec
in
stos
mov
add
mov
pop
out
sti
xchg
addl
das
cmp
cs
pop
repnz
scas
pop
out
filds
sub
xchg
cs
mov
pop
out
jb
xchg
sub
outsl
xchg
mov
jg
out
scas
jo
sub
jnp
repnz
js
out
cwtl
jnp
sub
xchg
sub
pop
lock
xchg
sub
pop
out
cmpsb
pop
fcomps
cwtl
ds
scas
push
enter
adc
mov
jb
notb
movsl
mov
adc
mov
sbb
pop
xor
or
mov
or
sahf
xor
fld
mov
sbb
lret
jae
sub
outsl
int3
sub
ja
lea
sbb
sub
add
ss
mulb
dec
inc
and
mov
ds
adc
out
sbb
lea
jecxz
jbe
or
cmp
movsb
es
add
aad
sbb
pop
xlat
jne
dec
sbb
repnz
cwtl
xor
dec
cmpsl
addr16
pop
jne
dec
and
push
cmpsl
xchg
icebp
in
std
call
mov
xor
jb
dec
and
sahf
xor
add
mov
cld
mov
pop
xor
sub
das
mov
sbb
ljmp
inc
sbbb
add
jmp
enter
mov
xor
sub
xor
inc
xchg
sbb
or
pop
xor
jae
sbb
mov
fidivl
testb
movsb
jp
scas
jo
mov
add
sbb
inc
lds
loop
dec
rorl
sarl
or
movsb
loope
stc
ja
inc
cmpsl
movsb
adc
les
and
mov
adc
mov
add
ds
out
cmp
pop
lods
inc
dec
push
icebp
xchg
leave
dec
iret
inc
int
call
xchg
insl
leave
adc
aam
dec
inc
mov
bound
fnstenv
inc
or
pop
mov
ljmp
fs
sahf
inc
movsl
cwtl
xor
and
fdivrl
mov
scas
xchg
push
scas
and
int
xchg
mov
adc
mov
enter
jle
push
out
movsl
idivb
cmpsb
add
aas
xor
mov
sbb
adc
pop
xchg
add
xor
pop
pushf
lret
sti
mov
lods
mulb
bnd
sub
push
stos
mov
cmp
fldl2t
sahf
lock
jb
adc
repz
bound
and
mov
jmp
and
mov
fcoml
dec
cwtl
loope
inc
pop
stos
ret
hlt
lret
cld
push
push
mov
push
clc
roll
clc
loope
stos
jge
jecxz
jbe
shrb
test
test
dec
pushf
jnp
adc
add
shlb
sbb
jecxz
das
push
fidivrs
jl
cli
movsb
iret
int
add
stos
outsb
jge
out
xor
outsl
shrl
push
popf
push
inc
mov
in
jle
iret
rcll
cmp
pop
sahf
jp
pop
pop
or
dec
push
cmp
cld
fimull
fbld
inc
add
adc
push
insl
sti
addr16
cmpsl
ret
jecxz
sub
pushf
or
stc
imul
jmp
js
ljmp
mov
mov
cmpb
pop
imul
or
cmpsl
xlat
shl
or
data16
lcall
mov
loope
test
inc
arpl
jp
cmpl
adc
inc
sarb
repnz
insl
jo
loopne
inc
mov
mov
jnp
repnz
pop
xchg
in
std
dec
pop
push
test
ret
cli
sbb
imul
icebp
jl
test
xchg
mov
xchg
add
int3
fistl
insb
adc
mov
incl
fisttpl
cmp
sub
inc
leave
xchg
jbe
xchg
dec
mov
and
fiadds
dec
and
sub
leave
jp
negl
pop
addl
jno
xchg
pusha
xchg
xor
int
int
movb
and
test
rcrl
je
mov
aad
xchg
or
pop
repz
fcompl
mov
ss
ja
push
xor
in
out
cmpsl
ret
push
or
cli
nop
sub
mov
mov
xchg
jmp
cltd
das
and
or
xchg
and
or
fnstcw
add
leave
push
pusha
sbb
xchg
jp
aam
add
pop
rclb
dec
fs
and
push
test
inc
xchg
lea
lea
mov
adc
or
jne
aad
sbb
shrb
xchg
dec
dec
cmp
jecxz
push
push
sub
aas
andb
out
sub
jo
cmp
lcall
int3
lods
jmp
add
jmp
push
scas
inc
shr
jge
out
xchg
sahf
roll
or
pop
mov
mov
jns
adc
jae
inc
mov
arpl
fnstsw
mov
int3
mov
cltd
jne
cltd
push
leave
pop
popa
scas
or
pop
xchg
sub
mov
lods
inc
rorl
mov
lds
xor
xlat
jecxz
mov
cmp
lock
pop
inc
daa
ljmp
cmp
lahf
push
rcrl
aam
jo
xchg
xchg
push
and
xchg
sahf
mov
mov
xchg
ds
rolb
into
pop
sbb
xchg
xchg
sub
add
mov
mov
xchg
jecxz
sbbb
add
in
shl
inc
mov
sarl
adc
cmp
mov
lods
outsl
adc
hlt
push
movsl
cmp
xchg
fwait
dec
fs
xchg
fnstenv
fstpl
je
xor
cmp
pop
xchg
adc
dec
xchg
scas
fcompl
sub
cwtl
fadds
mov
jl
into
mov
mov
jb
add
fidivs
push
leave
pop
mov
pop
jae
adc
clc
sub
lods
push
sub
repz
lret
in
xor
out
push
aaa
jp
lods
add
lds
out
nop
pop
sbb
insb
filds
into
gs
push
std
je
jae
or
dec
pop
fistpl
test
jmp
xlat
pop
sub
lret
jecxz
cmp
sbb
nop
sbb
jge
and
xor
sbbl
cmp
fsubrp
test
cmp
and
push
xor
and
push
in
adc
jnp
ficoms
fcoml
leave
test
cmpsb
jae
cmp
xchg
shl
leave
mov
inc
imul
xchg
sub
sub
inc
shrb
repz
xor
jns
push
imul
sub
hlt
sub
lret
dec
jnp
jns
xchg
sbb
sahf
push
lods
dec
mov
mov
xor
arpl
aaa
push
lret
les
cmp
mov
into
and
ljmp
jo
sbb
ret
cmp
aas
outsl
pop
push
xor
xchg
pop
out
inc
mov
rorb
arpl
cwtl
addr16
pop
lahf
dec
repz
or
ss
lods
cmp
xchg
cmp
es
test
cmpl
cmp
rol
pop
rcrl
mov
dec
fcomps
lea
sbb
mov
mov
xchg
jecxz
dec
and
adc
sub
ret
inc
pushf
mov
or
bound
in
scas
dec
and
xor
jmp
mov
sbb
inc
push
or
add
push
sbb
outsb
pop
jg
inc
cmpsb
daa
addr16
pop
push
xorb
mov
jae
scas
cwtl
outsl
adc
mov
add
sbb
fiadds
lods
sbb
push
lcall
stos
das
pusha
mull
fbstp
jns
mov
cmp
or
les
hlt
or
ret
rclb
cli
test
loop
xor
inc
cmp
and
pop
lcall
test
out
into
push
jmp
mov
ret
fdivl
shlb
mov
jne
push
sub
pop
or
out
mov
std
jge
cmpsl
jge
aad
dec
mov
jg
std
and
push
xchg
enter
test
movsb
sub
shll
mov
rolb
aam
ja
rcrb
pop
popf
jmp
imul
cmp
mov
xchg
lods
mov
scas
xchg
jg
cmpsb
ret
movsl
cmp
sbb
dec
scas
ret
fisttps
pop
and
sub
stos
cmp
jb
and
xor
shlb
imul
in
test
fdivl
daa
gs
in
and
mov
cmp
popf
or
in
adc
push
mov
push
je
movsb
xchg
inc
or
mov
jg
sbb
mov
jbe
push
add
lret
cli
mov
into
insb
es
aad
iret
pop
insb
insl
pop
jecxz
dec
pop
inc
pop
add
adc
stos
loop
push
dec
rclb
pop
es
mov
jge
dec
fists
lods
cmp
ss
cmp
nop
mov
jp
mov
or
ficomps
sub
les
mov
or
aaa
dec
mov
shll
lcall
xor
aam
loopne
out
jp
pop
push
dec
xchg
pop
and
jl
cmpl
aam
nop
sub
push
mov
jmp
adc
insb
mov
jmp
mov
fcmovu
push
loopne
xchg
cmp
mov
sbbl
pop
push
repnz
dec
sub
test
daa
mov
loope
inc
gs
add
inc
mov
nop
mov
daa
ss
repz
andl
fs
inc
jecxz
lret
add
testb
xor
cmpsl
out
inc
fdiv
mov
xchg
jmp
mov
mov
mov
ret
xchg
dec
dec
fwait
andb
inc
dec
pop
push
mov
dec
pop
jb
dec
dec
sbb
scas
pusha
jnp
std
xchg
aaa
pop
je
stos
jmp
mov
xor
in
in
xchg
std
cltd
test
cltd
aas
leave
sbb
push
dec
jle
in
fidivl
push
outsl
xor
insb
push
push
ss
lock
mov
imul
nop
mov
ja
leave
jne
xchg
jns
movsb
fbld
int3
lret
or
inc
out
mov
cmp
mov
js
mov
testl
sub
jae
imul
test
ret
mov
push
sub
and
and
sub
fsubrs
call
mov
xor
adcl
mov
adc
sbbl
aaa
or
xchg
sub
cld
aas
add
cmc
stos
xchg
jp
out
cmpl
and
jp
sahf
lds
testl
pop
lock
stos
jbe
jecxz
or
add
or
pop
fcoml
mov
mov
data16
lea
sbb
inc
cmp
hlt
fwait
mov
dec
pop
sbb
xchg
add
jne
in
dec
and
mov
mov
fwait
sahf
jmp
pop
cwtl
jmp
cltd
sub
xchg
cltd
mov
lods
add
mov
out
cmpsl
sub
outsb
lds
sub
ljmp
jno
mov
inc
fmull
aam
dec
ret
jae
dec
mov
rorb
movsb
dec
jl
add
inc
xchg
aaa
jb
push
in
push
mov
mulb
test
adc
popf
inc
subb
mov
mov
and
dec
scas
incl
pop
outsl
add
inc
iret
shlb
xor
gs
pop
loopew
es
push
cmp
scas
cmp
adc
sbb
stos
test
pop
and
cmp
sbb
and
xor
push
cmpsl
out
outsl
mov
fstpt
jo
stc
jno
fidivrl
pop
push
lock
sbb
adcl
push
insl
roll
cs
cmp
pushf
sub
pop
rcll
mov
cld
xchg
add
cltd
adc
xchg
sub
and
push
icebp
jns
bndstx
add
dec
xor
aas
inc
pop
pop
scas
adc
sub
sbb
notl
sub
pop
je
push
fwait
dec
into
sub
lcall
ficoml
xor
xchg
jl
ret
and
jb
add
inc
add
add
outsb
xor
pop
pop
out
ficoml
shlb
mov
push
notl
sbb
iret
cmc
add
icebp
and
adc
rcrl
faddl
xchg
das
daa
xchg
inc
popa
rcll
clc
and
sahf
scas
cmp
push
inc
inc
das
fnstsw
sbb
dec
loope
lahf
xorl
push
test
mov
inc
sbb
or
data16
stos
rclb
int3
push
fsubr
jb
fdivs
insl
sub
scas
pop
xchg
test
lret
dec
dec
dec
popa
xor
cmp
mov
iret
jnp
outsl
stc
orl
fsubs
and
jecxz
ja
jg
mov
add
or
sub
out
cli
sub
pop
addr16
cmpsb
cmp
in
cmp
loopne
mov
sarb
pop
cmp
pop
sbb
sbb
into
dec
fsubrl
imul
cmp
push
fcomps
iret
cmpsb
jp
pop
jns
push
inc
jecxz
loop
pop
cwtl
push
jo
rcll
cmp
inc
push
lcall
xor
pop
lods
fdivrs
pushf
pop
push
mov
icebp
push
cmp
mov
mov
aaa
add
daa
mov
mov
rcll
sbb
clc
cmpsl
lea
outsl
movsb
mov
mov
push
jmp
ret
push
daa
mov
pop
push
fsubs
outsl
inc
pop
pop
mov
add
int
inc
in
lods
adc
push
scas
out
or
and
aas
adc
inc
cmc
inc
fwait
scas
xchg
xor
mov
out
test
lcall
sub
dec
inc
data16
jmp
sbb
lods
stos
mov
rcr
popa
jecxz
sbb
cmp
imul
mov
popl
hlt
lret
xor
sbb
scas
push
mov
mov
sbb
movsl
cmp
sti
cmp
leave
xchg
mov
hlt
movsb
mov
shl
jl
cmpsb
mov
mov
push
into
lret
lret
push
or
out
enter
ja
leave
xchg
sbb
fsub
jl
mov
pop
stos
fiaddl
lcall
xor
mov
ja
dec
add
adc
xchg
pop
dec
loop
sub
out
in
dec
movsl
sub
sub
fcmovne
ja
and
fs
lret
xor
jmp
sbb
outsl
daa
lcall
enter
or
xor
or
jle
sub
sarb
hlt
xchg
push
xor
xor
mov
outsb
mov
fildl
enter
inc
cmpsb
hlt
mov
cmpsb
mov
dec
xchg
or
add
mov
pop
fisubl
aam
sub
in
out
pop
ficomps
dec
gs
sti
mov
popf
adc
sub
push
inc
shr
or
sub
xchg
data16
lods
pop
inc
pop
mov
test
sbb
lahf
loop
scas
pop
or
or
cmp
testl
adc
xor
mov
std
push
push
or
add
dec
inc
sahf
fdivl
mov
push
add
in
ficoml
loop
sahf
adc
arpl
icebp
arpl
pushf
pusha
fwait
mov
pusha
sub
push
je
jg
cmp
outsl
movsb
dec
testl
pop
add
jp
inc
loop
adc
dec
inc
dec
call
fnstsw
je
cmp
or
cmp
les
pop
mov
out
mov
fsubrp
clc
and
jne
psadbw
jge
mov
stos
loope
adc
add
lret
enter
inc
movsb
aam
cli
or
sub
mov
mov
xor
addr16
cmp
sub
pop
repnz
push
mov
aad
pop
dec
mov
repz
stos
jo
in
xchg
sbb
inc
xchg
or
mov
push
sub
mov
inc
cmp
cmp
jecxz
and
inc
in
loope
movsb
jne
jle
mov
fistps
pop
out
bound
cmpsb
movsl
repz
enter
imul
das
aad
popa
test
push
pop
cmp
inc
mov
icebp
mov
adc
mul
imul
fcmovne
xchg
mov
inc
xor
fisubrl
dec
cwtl
rcl
push
out
push
and
lods
inc
lcall
sbb
in
in
std
xorb
pop
iret
adc
sub
in
das
in
cmpsl
inc
xchg
dec
lcall
jnp
addr16
adc
test
mov
fdivrp
fldl
lods
into
fdivr
xlat
outsb
das
push
jne
pop
push
jp
shl
or
sub
mov
jmp
xchg
or
pop
rolb
mov
mov
nop
rorl
cmp
mov
pushf
nop
pop
cmp
mov
xchg
insb
div
xchg
rorl
and
insb
cmp
xorb
cmpsl
fldenv
test
mov
pop
jle
test
jno
leave
dec
fs
push
sbb
addl
incb
and
sbb
ss
ja
push
mov
stos
xor
and
movsb
dec
and
clc
dec
jnp
sbb
aam
outsl
and
loop
in
lret
arpl
lea
jl
das
repnz
movsl
sub
sbb
andb
hlt
inc
loop
jmp
lock
out
aas
sbb
mov
inc
push
xor
mov
jno
xor
mov
add
or
iret
mov
mov
call
in
lahf
lea
ljmp
jne
add
clc
hlt
adcl
out
call
pushf
dec
cmp
add
xor
enter
into
movsb
fdivs
lea
leave
test
and
stos
addr16
lret
xchg
out
into
xlat
push
xchg
ss
out
ficomps
in
sub
sub
shll
lock
jmp
xchg
push
push
cmp
sti
out
cld
sbb
popl
mov
dec
test
es
ss
xor
mov
jns
mov
cli
cmpsb
xchg
ret
cwtl
lcall
sub
and
sub
jo
push
movsl
testl
rorl
iret
ds
int
mull
cmpsl
push
add
cmpsb
and
inc
imul
mov
in
and
lock
sub
dec
inc
fwait
mov
and
xchg
sbb
clc
and
stos
dec
jbe
out
xchg
jnp
int
inc
jne
xchg
mov
addl
add
outsl
jecxz
loop
mov
mov
outsb
push
jo
cmp
and
lea
addb
je
xchg
outsb
and
dec
cmc
mov
lret
popa
push
pop
and
xchg
ja
jg
mov
jle
shll
cmc
cmpsb
mov
xor
lahf
int3
aaa
push
stos
push
or
xor
push
loop
rclb
inc
mov
cmp
aaa
mov
lret
ss
sub
mov
xor
push
or
roll
add
sub
sub
cmp
fldenv
repz
in
imul
cmpsb
inc
pusha
repz
mov
jae
jnp
jb
mov
dec
jns
or
mov
mov
insb
pop
pop
icebp
out
mov
cmpsl
jcxz
dec
pop
and
lret
les
ljmp
dec
mov
rorb
sahf
in
insl
adc
fstp
stos
inc
or
retw
les
daa
inc
cmc
setp
sub
push
push
push
mov
popa
or
insl
sub
cmp
stos
mov
in
cmc
adc
mov
movmskps
fcompl
test
stc
aas
add
dec
negl
jecxz
enter
pop
push
mov
adc
xlat
mov
std
enter
arpl
dec
mov
mov
ss
dec
insb
fsubrl
loope
rorl
xor
mov
cltd
cmp
jp
cmpsb
nop
sarb
test
out
addr16
inc
loope
mov
icebp
sbb
hlt
mov
jl
mov
xor
pop
cmc
test
or
xchg
jns
bound
push
ljmp
hlt
push
adc
xor
pop
cmp
cmp
jmp
cltd
xor
or
in
movsb
sub
jp
in
push
sub
lock
sbb
mov
xchg
lods
mov
add
xchg
jo
loopne
dec
mov
sub
test
mov
rol
sti
adc
ja
mov
sbb
int
xchg
jge
xchg
jnp
cmpsl
and
repnz
int
in
sbb
push
xchg
sbb
cmp
ja
imul
int
xchg
dec
or
sbb
sbb
insb
outsl
addr16
fbld
into
jne
out
loope
dec
mov
repnz
jge
mov
xchg
or
outsb
insl
mov
dec
xor
dec
std
xchg
push
lahf
std
ret
cwtl
pusha
sarb
fwait
gs
jl
divb
imul
in
pop
xchg
sub
push
popa
dec
jmp
mov
jnp,pt
cmp
jl
enter
lret
cmp
adc
or
outsl
adc
dec
loope
xchg
idivb
cs
cmp
mov
icebp
rcrb
cs
fcmovnb
lcall
jl
pop
and
xchg
fsubl
jl
xchg
stc
mov
into
xchg
mov
pusha
aad
punpckhwd
dec
adc
outsl
jecxz
inc
adcb
or
aaa
test
out
push
sub
int3
pusha
aas
stos
or
mov
gs
jp
sbb
pop
and
stos
subb
pop
enter
and
cmpsb
lahf
lret
repnz
dec
or
je
push
cmc
dec
or
cmp
xchg
jp
jnp
sbb
ss
xchg
loopne
data16
rorl
push
xor
cmp
and
jl
pop
fdiv
js
call
push
je
out
mov
xchg
pop
data16
jne
fs
mov
nop
add
and
and
xor
mov
loopne
push
push
jmp
mov
mov
loopne
add
push
call
icebp
dec
outsl
daa
jmp
sbb
cltd
mov
cmc
mov
lods
and
sbb
xchg
lea
push
movsl
repnz
or
call
push
xchg
pop
mov
bnd
imul
push
mov
adc
mov
ret
outsl
movsl
dec
jecxz
sti
pop
imul
les
sbb
mov
mov
dec
shrl
inc
cmp
ljmp
or
fistl
add
adc
icebp
xchg
testl
push
fbstp
add
lds
imul
adc
ret
pop
inc
push
popa
clc
test
int3
fwait
mov
or
das
ja
xchg
and
sahf
add
push
addl
in
mov
into
push
mov
lods
inc
lret
out
imul
lret
sub
pop
sub
sahf
xor
jecxz
push
call
inc
ret
repz
imul
inc
fdivr
mull
cmp
scas
inc
xchg
push
aad
inc
mov
repz
cmpsl
or
cmp
shrl
in
and
repz
and
jmp
mov
fnstsw
xchg
sub
mov
aad
imul
sub
xchg
das
dec
fidivl
pop
jns
nop
mov
lret
in
xchg
jecxz,pn
push
ljmp
jno
jb
mov
es
xor
cmc
mov
xchg
nop
daa
ret
add
scas
inc
push
pop
stc
lea
jmp
in
mov
push
ljmp
mov
lea
test
lret
cld
in
or
stc
dec
xor
fs
in
xor
insl
add
push
or
add
subb
pop
sahf
cli
fsubrs
adc
inc
cmpsl
jb
int3
or
std
notl
ret
ret
jge
jl
mov
add
and
xor
incl
cmpsb
xchg
dec
repz
and
clc
xchg
sub
repnz
dec
sbb
adcb
mov
sti
or
sarb
nop
daa
dec
push
out
xchg
xchg
and
sti
jecxz
ficompl
adc
add
xlat
gs
or
sbbl
loopne
ret
lea
xor
arpl
addr16
mov
lret
test
imul
cltd
ljmp
stos
aas
rcrb
add
sub
int3
in
adc
ds
mov
lcall
sub
stos
clc
loopne
movsb
cmp
rcrb
nop
sbb
dec
mov
sub
insl
pop
fwait
or
sarl
mov
icebp
pop
and
inc
scas
push
lods
and
xor
cmpsb
cmp
xor
dec
loop
mov
sub
fmuls
cmp
addr16
sub
cmp
js
fsubrs
xchg
lds
sub
loopew
adc
xchg
in
movl
aaa
and
cwtl
das
je
push
call
ret
cmp
lret
adc
in
andl
sbb
aad
gs
mov
in
adc
lcall
testl
cmp
dec
in
jecxz
lods
adc
arpl
repnz
cmp
daa
mov
pop
mov
xchg
sub
xor
or
call
pop
hlt
loop
jae
cmp
sub
xchg
adc
out
test
out
push
push
sub
adc
xchg
inc
cmp
push
mov
and
push
mov
cmp
js
jnp
mov
lods
loope
pop
sahf
inc
cmp
into
push
mov
or
push
sbb
fidivs
cmp
adc
or
or
mov
mov
cmpsb
cmp
lock
mov
adc
inc
cmpsl
ds
and
stos
pop
es
xchg
lret
fnsave
add
pop
lret
stc
shll
repz
jns
pop
lret
jno
cli
aad
stc
sub
xchg
pop
and
ret
pop
hlt
das
imulb
adc
popa
enter
rcr
cmc
and
jb
sub
pusha
popa
enter
sarb
pop
sub
inc
popa
enter
shlb
and
jl
sub
in
int
mov
in
test
addr16
addr16
arpl
test
aam
das
push
in
pop
sub
imul
in
and
push
cmp
push
inc
fdivrp
mov
add
imul
lock
das
je
jg
popa
movsb
pop
sahf
fdivs
aas
test
mov
arpl
lret
mov
mov
std
xchg
fs
addr16
mov
sub
pop
std
xchg
xor
ja
lret
mov
leave
pusha
cmp
push
ljmp
int3
je
fnsave
lahf
rcrl
into
mov
sahf
jne
jmp
aad
xchg
aam
mov
je
repz
call
aad
sub
jne
ja
je
inc
mov
ret
pop
jge
pop
hlt
jbe
and
int3
lock
jmp
popa
clc
cmpb
push
insl
stos
pop
mov
mov
cwtl
mov
ficomps
adc
scas
nop
xor
frstor
xor
jecxz
pop
repz
shrl
shlb
mov
and
push
mov
jp
jno
and
xor
push
cmpsb
cmp
push
lods
push
lods
fidivl
in
ljmp
sub
dec
test
sbbb
cmp
mov
aam
lcall
leave
mov
decl
adc
es
mov
test
stc
and
imul
ja
js
inc
xchg
cld
xchg
ret
push
out
pop
mov
push
jmp
dec
test
pushf
fcomps
or
jbe,pn
pop
or
push
stc
loope
dec
adc
push
jmp
inc
into
repnz
bound
mov
mov
fs
loopne
adc
mov
gs
bound
mov
test
loop
dec
adc
in
xchg
xor
insb
bound
daa
mov
cmp
inc
fmull
pusha
testl
jle
inc
lods
negl
jnp
cmc
dec
fsubrs
sbb
sahf
xor
xchg
out
in
sbbl
out
ss
adc
inc
and
sub
fadds
lcall
adc
pusha
pop
sbbl
pop
jne
mov
xchg
xlat
sub
popf
xor
push
repnz
stos
and
pop
add
ss
push
scas
push
add
test
xlat
out
add
outsl
xchg
push
sub
and
leave
mov
fmul
sbb
xor
jno
dec
cmpsl
inc
xchg
lods
js
add
cli
cltd
inc
pop
lret
sbb
or
mov
cmp
ds
out
imul
inc
cld
xorl
dec
fstl
arpl
mov
jecxz
stos
pop
mov
dec
negl
push
lea
mov
fldcw
mov
jbe
adc
int
lahf
decl
mov
push
cmpsl
xsha256
cmpsb
aam
jno
mov
movb
jl
xchg
dec
fwait
mov
aaa
cmpsb
clc
xchg
cs
mov
pop
insl
mov
imul
nop
daa
lods
and
xor
or
jnp
int
arpl
adc
inc
ret
nop
sub
add
ds
test
add
ljmp
sbb
rorl
clc
and
fld
xchg
data16
gs
imul
inc
ds
lods
mov
into
pop
pop
push
out
aaa
jge
mov
data16
arpl
lds
or
and
jge
aaa
adc
rol
sub
clc
loope
pop
or
and
loope
xrelease
xchg
jge
cmp
test
xor
cltd
add
adc
mov
push
call
fsubr
ss
int3
mov
aad
call
int
pop
sar
lods
shrb
mov
jp
lahf
fcompl
inc
lods
dec
mov
pop
jle
mov
add
into
dec
xchg
hlt
daa
inc
xor
push
insb
and
cmp
popf
pop
xchg
insb
popa
adc
cmpsl
ss
push
test
jle
mov
mov
jmp
pop
or
pop
int3
mov
mov
xchg
fiadds
insl
pop
repnz
inc
lea
xchg
cmp
sub
push
dec
jnp
push
sub
in
cmpl
add
cltd
fcoml
jge
and
popf
xor
in
rorb
push
icebp
rcrb
mov
mov
cmp
mov
mov
shl
dec
in
dec
shr
mov
sarl
movb
or
push
pop
cmp
arpl
lea
pop
or
mov
repz
data16
sub
mov
mov
sbb
push
add
inc
mov
popl
mov
out
adc
cmp
xchg
and
jb
jg
mov
jnp
xchg
push
into
inc
push
sub
xchg
xchg
repnz
imul
cmpsb
and
dec
push
test
rorb
mov
sti
sub
nop
mov
test
negl
mov
shlb
mov
pop
add
mov
push
in
mov
aam
jge
inc
pop
ret
das
mov
jl
mov
test
loope
test
addr16
cmp
cmp
ds
popf
addb
test
adc
pop
mov
mov
popa
fwait
mov
jge
scas
cltd
fidivs
in
popa
stos
fbld
and
xchg
push
int3
loope
adc
xchg
mov
leave
lds
adc
rcll
xchg
sub
push
es
xchg
xchg
jnp
fldl
mov
or
jl
lods
jb
push
sub
xlat
jp
movsb
insl
sub
xchg
sub
sahf
orl
popa
xlat
cltd
xchg
and
push
loopne
xlat
dec
xchg
aam
shr
and
pop
xchg
or
mov
in
jmp
psubb
fdivrs
frstor
xor
loop
fidivl
add
lahf
cmpsl
jmp
cmpsb
mov
cwtl
das
and
dec
ret
sbb
cmc
in
add
decb
and
jo
test
xchg
mov
push
jg
movsl
fsubrl
mov
out
cwtl
nop
mov
sbbl
shrb
test
out
and
iret
stos
jne
movsb
mov
jns
mov
push
jmp
or
jge
jl
mov
mov
add
lods
pusha
mov
pushf
jbe
insl
mov
pusha
addl
cmp
in
test
dec
lds
idivb
jecxz
xchg
or
fnstsw
rcr
jle
pop
imul
ljmp
pop
leave
inc
pusha
fimuls
jg
mov
push
or
dec
orl
pop
iret
repnz
pop
dec
loop
fldt
mov
lock
loopne
or
stc
enter
repz
or
dec
cs
mov
cmp
sahf
jle
xchg
mov
xchg
repnz
jne
or
cmp
ljmp
leave
inc
xorl
mov
mov
pop
icebp
ds
xor
add
imul
das
push
inc
cwtl
sbbl
imul
push
pop
lahf
insl
dec
xor
je
mov
arpl
orb
addb
cmp
xchg
and
ja
xchg
imul
mov
aas
loopne
lods
mov
and
repz
inc
ret
ss
push
xchg
and
cli
xchg
inc
enter
call
or
adc
lret
out
int
icebp
scas
dec
cld
js
mov
ljmp
lock
push
dec
shll
and
daa
testl
and
sub
pushf
pushf
mul
sbb
repnz
ror
repz
ffreep
xor
rcl
mov
mov
divl
sub
dec
adc
addb
pop
mov
xchg
movsl
aas
add
adc
inc
xchg
xchg
and
push
test
jne
dec
adc
xchg
les
movsb
cld
dec
add
mov
xchg
sub
insb
add
dec
rcrl
or
bound
pop
cmp
cmpsb
cmp
pop
addb
inc
loopne
pop
cwtl
and
sbb
inc
push
inc
imul
aas
push
push
xor
fs
cmp
add
adcb
decl
adc
ss
std
mov
lcall
sbb
dec
cmp
mov
lock
ds
movsb
sarb
dec
fstl
pusha
xchg
lea
cmp
ja
add
adc
pop
sahf
xor
cmpsb
imul
cmp
jg
fmull
aad
negb
out
adc
sbb
jno
test
adc
mov
out
sbb
je
test
rclb
mov
ret
cmp
mov
rorl
loope
mov
xchg
cmc
pop
shr
or
xchg
mov
sbb
lcall
xor
lret
rclb
insb
lock
pop
cmp
hlt
sub
bound
cmp
push
pushf
mov
fidivrl
cwtl
push
test
enter
sub
lods
lock
in
push
mov
hlt
test
insl
or
xor
xchg
push
adc
mov
test
in
jmp
int
mov
xchg
leave
faddl
push
mov
inc
jo
mov
xor
daa
lods
inc
mov
inc
nop
push
lcall
and
push
lea
out
pop
es
mov
mov
or
inc
cmpsl
push
push
sbb
dec
shlb
fsts
ljmp
inc
cmpsl
sub
inc
mov
and
inc
fildl
push
adc
movsb
sub
mov
sbb
push
sub
movsb
iret
fidivs
loop
out
loopne
ss
and
iret
scas
sbb
sub
scas
nop
into
outsb
in
cmp
addb
stc
insl
mov
push
pop
mov
mov
mov
sub
ja
xor
mov
jno
push
leave
test
mov
jno
dec
mov
je
popa
stos
jmp
mov
enter
gs
inc
and
mov
ss
pop
mov
inc
fs
ds
imull
bound
jmp
cmpsl
outsb
movsb
outsb
dec
adc
mov
mov
cmp
pop
lock
lahf
outsl
fsubrs
in
jae
mov
les
sti
fstpt
mov
fcomps
or
pop
pop
rolb
in
xchg
push
dec
mov
pop
fbld
jecxz
daa
loopne
stos
jbe
sbb
scas
dec
sahf
lret
cmp
jbe
dec
inc
filds
dec
lret
inc
pop
inc
xchg
inc
jge
push
dec
inc
fiaddl
dec
sahf
xor
cwtl
test
or
or
mov
rcrl
loop
dec
mov
std
pop
pop
rcll
pop
lret
andl
hlt
addl
cmp
inc
ret
jecxz
imul
lcall
sarl
cld
or
lret
pop
sarl
sub
add
cmpsb
rcll
push
call
pop
pop
jg
lea
push
xor
push
ljmp
test
sub
xchg
mov
nop
sub
and
test
xor
dec
fwait
dec
jmp
insb
mov
mov
mov
cmp
popa
lods
and
ret
inc
xor
data16
xchg
lods
sub
stc
sub
jnp
add
out
leave
popf
xor
das
mov
dec
rcrb
and
pop
cmp
jne
push
cmp
sahf
daa
lds
cmp
cmpl
or
cmc
add
mov
ficompl
mov
add
in
mov
icebp
sub
mov
add
xorl
in
sub
pop
cli
or
enter
dec
fucomi
test
sub
cmpb
leave
cmp
xchg
sub
inc
in
ss
mov
sub
pusha
sbbl
push
adc
dec
mov
addr16
pop
shr
test
daa
lret
mov
incb
lds
stc
or
xchg
sub
sub
pop
mov
mov
jl
dec
dec
inc
mov
push
jbe
mov
lea
inc
dec
in
les
pop
shll
push
adc
addr16
cmp
in
fisttpll
mov
jp
cltd
scas
inc
fildll
sbb
fisubs
gs
jecxz
cmc
push
cs
daa
mov
pop
adc
xor
in
sbbl
lock
lea
sub
mov
cs
mov
xchg
sub
jnp
cmc
push
iret
ss
push
lds
cmpsb
pop
scas
lret
lret
enter
je
in
mov
call
popa
fwait
lds
xchg
xchg
movsl
cmpsl
jbe
stc
call
arpl
out
fstpl
mov
cmc
sub
sar
pushf
rcl
mov
movl
mov
hlt
dec
ret
dec
fbld
cs
testb
sub
cmc
mov
repz
mov
stc
clc
shrl
shll
push
mov
push
movsb
popa
cli
aas
pusha
mov
stc
emms
mov
mov
add
and
sub
call
add
fists
repz
pop
sahf
lds
jg
pop
dec
movsl
pop
ljmp
push
mov
xrelease
cmp
test
icebp
push
loope
leave
sub
icebp
test
out
data16
and
sub
aam
lret
in
rorl
sub
add
ja
repz
mov
mov
mov
mov
bound
mov
push
xor
pop
scas
imul
daa
outsl
mov
leave
sahf
push
pushf
sbb
rorl
jl
push
mov
jo
mov
cli
scas
mov
or
fs
and
aam
jb
jae
mov
int
sub
sub
nop
int3
cmc
push
into
push
push
add
into
clc
inc
out
add
mov
inc
xlat
js
push
enter
dec
mov
aad
xchg
push
cltd
xor
push
mov
popf
fists
loop
int
mov
in
jne
sbb
mov
mov
inc
lret
jmp
or
ljmp
es
into
repz
sahf
test
inc
push
mov
mov
pop
idivb
fisttpl
lahf
sub
sbb
jge
or
cs
les
in
aaa
in
sub
mov
xor
scas
lods
push
mov
loop
cld
mov
cld
or
mov
out
push
mov
in
xchg
pop
movsl
subb
lds
xor
stos
add
movsl
cld
cmp
into
add
mov
or
mov
xor
mov
in
adc
mov
ljmp
aam
cmp
loope
flds
aam
add
les
xchg
in
adc
rcrl
jns
mov
fidivs
xchg
mov
cmpsb
add
cmp
cltd
mov
adc
cmpsl
aaa
add
xchg
mov
and
leave
aam
loopne
negb
stos
cmpsb
jecxz
cmc
add
xchg
dec
mov
idivl
mov
lahf
ret
xor
fucomi
lea
cld
je
mov
out
xor
adc
notl
and
add
and
inc
jo
jo
dec
and
xor
lea
xor
xchg
mov
adc
stos
jo
aas
cmpsl
jnp
lods
nop
jnp
cmp
cmp
stos
cltd
addb
or
insl
jnp
cmp
pop
dec
mov
je
mov
xor
lea
inc
jmp
pop
mov
mov
pop
leave
inc
incb
inc
or
lock
ja
imul
push
jle
sarb
jae
mov
jl
add
mov
out
rorl
gs
scas
out
mov
into
push
adc
shll
fucomp
sbb
ficompl
call
mov
in
inc
push
insl
aad
inc
inc
mov
adcl
mov
clc
sub
cmc
mov
fldl
nop
rorl
mov
lcall
addr16
arpl
jge
je
mov
jnp
data16
out
jmp
fsubs
nop
mov
rcll
jne
cmp
pop
inc
xor
ds
and
xor
inc
mov
add
mov
mov
ljmp
sub
movsl
mov
insb
pop
push
sbb
adc
sbb
push
cmpsb
and
jp
mov
push
and
icebp
xor
push
clc
lret
push
fdivl
fistpll
inc
imul
xchg
jge
jb
xchg
arpl
xchg
sub
inc
xchg
xchg
jge
and
notb
mov
xchg
dec
fstps
fwait
xor
push
fs
push
dec
pop
lock
and
test
cmp
stc
data16
dec
loop
xchg
adc
sub
or
mov
push
sarl
mov
sub
inc
jl
sub
cmp
pop
inc
mov
add
inc
xchg
cmpb
repz
adc
roll
pushf
clc
bound
inc
mov
ja
data16
cwtl
or
test
in
ss
xor
mov
loop
adc
pop
or
lcall
ret
sbb
in
pop
jecxz
negb
inc
mov
insb
stc
xor
xchg
negb
loopne
std
jbe
push
push
mov
add
imul
mov
lea
mov
fwait
xchg
and
inc
push
shll
xchg
mov
sbb
mov
pop
inc
mov
dec
xor
mov
pop
adc
jl
adc
jnp
jecxz
pushf
dec
mov
add
mov
xchg
xchg
aad
imul
bound
sti
in
adc
mov
xchg
push
out
movsb
imul
in
push
mov
movl
push
jmp
ret
rcrb
fdivp
fwait
xchg
sub
enter
out
mov
shl
cld
int3
scas
popf
jae
mov
mov
mov
xchg
nop
jns
cli
ss
in
fsubrl
lock
sbb
cmc
xor
insl
mov
mov
call
ret
ret
hlt
mov
pop
daa
push
test
xor
mov
inc
inc
sbb
dec
mov
mov
jecxz
insb
add
lcall
or
push
lods
xor
nop
gs
inc
test
es
sbb
fistl
movswl
jb
repz
xchg
inc
ret
sub
xor
sub
insl
or
jb
cmp
fwait
inc
xchg
mov
addr16
jo
push
shl
inc
inc
mov
push
push
push
out
xchg
push
or
xchg
sbb
enter
insb
lcall
push
shlb
xchg
xchg
jnp
or
lods
jno
or
add
add
fwait
in
xchg
in
sbb
mov
stc
inc
add
test
cmpsb
pop
pop
pushf
sahf
xchg
arpl
inc
sub
cld
pop
iret
mov
dec
fs
sbb
add
pusha
dec
sti
xor
mov
xchg
test
add
mov
ljmp
or
xor
adc
decb
cmpl
aaa
xchg
sub
test
lock
sbb
bound
cmpl
test
aas
stos
xchg
sub
pusha
pop
scas
inc
aaa
repnz
hlt
aam
sub
scas
sbbl
fdivs
sti
and
imul
je
sbb
lcall
ret
xchg
mov
in
sub
mov
stc
and
xchg
lret
mov
ss
push
stos
cmc
sbb
es
sub
inc
test
in
insl
xlat
arpl
shlb
cmp
jno
repz
xor
push
xchg
shl
cmc
mov
sub
test
hlt
xor
mov
pop
sbb
push
scas
imul
jg
xchg
sbb
leave
mov
cmp
insl
add
ja
cmpsb
imul
int3
mov
cmp
cmc
sbb
rorb
fwait
add
int3
mov
lock
insb
push
lret
jo
and
lds
jo
jg
sbb
test
sub
lea
adc
test
aaa
bound
xchg
mov
cwtl
les
lds
jns
test
mov
mov
clc
movsb
mov
push
pop
ljmp
push
mov
sub
pop
popf
stc
cli
test
in
xor
jnp
inc
jae
pop
push
jl
push
pop
insb
mov
stos
andl
push
into
bound
xlat
inc
sbb
push
aad
push
fnstenv
and
ja
les
xor
adc
mul
xor
cld
ret
int
fisubrs
mov
mov
nop
mov
movsl
pusha
pushf
or
cmp
and
mov
add
jge
xor
mov
in
in
pop
loop
jbe
xor
inc
cwtl
mov
pushf
and
mov
cmp
jo
filds
mov
inc
xor
pop
ret
data16
insb
xor
adc
cwtl
xor
sbb
cltd
push
movsl
scas
mov
insl
mov
rcll
mov
stc
ds
sbb
fnstenv
xchg
jle
movnti
shlb
enter
ja
add
dec
loopne
bound
hlt
std
pop
xchg
popa
aad
stos
push
inc
jg
cmp
lds
jp
mov
mov
add
add
cmp
push
inc
jmp
lods
pop
cmp
dec
mov
popa
out
bound
pop
loopne
rcr
jns
stos
cmp
sub
mov
aam
push
out
aam
xchg
mov
incb
fmuls
mov
or
sub
mov
or
mov
hlt
cld
xchg
int
sarl
lcall
stc
xchg
mov
adc
adcb
inc
adc
mull
loope
add
xor
aaa
jae
call
jb
add
subb
mov
mov
dec
les
mov
add
pop
sahf
shl
icebp
in
adc
ror
sbb
mov
sub
insl
lret
sbb
gs
xor
jne
decl
mov
loope
call
lods
fildll
fsubr
adc
leave
fisubrl
faddp
ficoms
icebp
mov
jl
jno
or
sahf
xchg
icebp
out
test
adc
das
imul
in
xor
xchg
repz
stc
loop
sub
lret
js
arpl
mov
jnp
and
and
push
cmpsb
orl
push
add
mov
repz
out
push
std
call
push
pop
add
fidivl
popa
mov
scas
loopne
into
sub
fmul
test
fidivl
into
sub
into
xchg
adc
or
aaa
jmp
jle
and
and
push
out
adc
xor
pop
out
sbb
stc
mov
jge
mov
cwtl
xorb
ss
outsb
mov
push
push
jmp
adc
pop
or
cmp
xchg
sub
jns
ljmp
stos
jb
bound
cmp
pop
push
rcrb
int3
cmp
sbb
cmp
sarb
cltd
inc
jns
push
sub
fsubs
addl
ret
mov
fisttpll
sbb
xchg
lcall
mov
xor
scas
mov
rcll
rcll
mov
test
sbb
mov
push
jge
mov
jne
repz
mov
push
mov
add
xor
fmull
imul
push
outsl
sahf
mov
xor
test
cltd
enter
xchg
xchg
ret
sub
push
jge
dec
scas
ja
mov
lret
cld
and
mov
lds
adc
mov
shrl
sbb
dec
adc
and
insl
add
cmpsl
ds
mov
lds
stos
inc
inc
or
enter
add
ljmp
pushf
cmp
aas
xor
push
pop
hlt
xchg
jnp
fiaddl
pusha
divl
sti
cltd
xor
dec
mov
andb
insb
sar
mov
mov
dec
fsubrs
dec
adc
rcrl
adc
and
inc
xor
js
imul
cltd
push
out
xchg
mov
jmp
add
sbb
mov
jno
lds
stos
inc
les
pop
pop
loopne
cwtl
adc
out
imul
mov
mov
mov
fisubs
mov
or
inc
xlat
bound
jns
pop
sbbl
jl
cs
aad
adc
shlb
xor
shrl
jl
dec
scas
jbe
mov
lret
sti
and
mov
lds
adc
lahf
xor
clc
shrb
sbb
dec
adc
add
cmpsw
ds
mov
lds
stos
inc
inc
or
jnp
fs
add
jmp
or
xor
and
xchg
jnp
flds
pusha
divl
cli
cltd
xor
jle
test
dec
jg
pushf
xor
mov
mov
mov
dec
fsubrs
inc
adc
rcrb
adc
and
dec
in
inc
xor
ja
imul
cwtl
push
out
xchg
mov
ret
ljmp
pop
mov
jo
lds
stos
inc
inc
or
or
push
pushf
xor
idivl
shr
nop
fidivs
or
cmp
repnz
adc
push
leave
cs
pop
divb
dec
loope
xchg
jge
ret
insl
addr16
inc
loope
sub
loopne
dec
ret
jno
mov
clc
adc
inc
test
lods
mov
test
lret
imul
pushf
in
scas
inc
push
mov
mov
jno
test
aas
xchg
sub
inc
fcoml
sar
repz
fs
roll
adc
mov
pop
out
xchg
xlat
xor
pop
pop
jbe
mov
nop
daa
pop
lods
xchg
imul
scas
inc
in
repnz
pop
int
inc
cmc
adc
xchg
inc
cs
pop
sahf
mov
sarb
jle
xor
xchg
lds
out
and
push
out
lea
jbe
mov
mov
cmp
push
jg
sub
aas
sahf
out
mov
mov
adc
jl
xchg
xor
and
add
jmp
lock
jmp
or
xchg
rorl
cmpsl
out
inc
push
mov
and
mov
push
lods
pop
inc
inc
dec
scas
xchg
out
pop
fs
pop
out
mov
xchg
out
inc
loopne
and
in
xchg
or
in
push
bound
sub
and
adc
cmp
movsl
js
pop
mov
cmp
fidivs
je
xchg
std
jge
popa
ret
xchg
imul
xchg
int3
pop
in
sub
pop
out
cmp
sbb
sbb
sahf
sarl
js
xchg
pop
sbb
movsl
cmp
xchg
inc
out
pop
cmp
mov
add
pop
mulb
mov
fwait
test
popf
out
dec
ljmp
push
sub
mov
xor
dec
repnz
cs
lods
icebp
or
jbe
adc
es
jecxz
ss
jno
es
and
and
jb
addl
pusha
and
sub
aas
sbb
shll
test
shr
adc
or
xor
mov
lock
stc
jae
inc
mov
push
pop
jl
in
fs
insb
cmp
cmp
fmull
scas
in
js
or
pop
das
cmpsl
ret
mov
daa
mov
jbe
add
loopne
xchg
inc
icebp
push
imulb
cli
sahf
sahf
cmp
xchg
cwtl
lock
fs
imul
mov
jo
inc
adc
cmp
mov
dec
jecxz
je
mov
sbb
add
sbb
pop
insb
or
dec
xchg
addr16
jl
nop
fidivrs
mov
gs
adc
xchg
xlat
xchg
push
fists
sbb
mov
lret
dec
and
pop
mov
sub
test
loopne
cmc
jnp
test
arpl
xor
dec
mov
xchg
dec
push
sub
movsl
cwtl
jo
adc
iret
fistps
addl
dec
sbb
mov
loop
inc
jb
lock
in
out
fnstenv
xor
inc
testl
stc
sbb
mov
rclb
aam
sbb
mov
or
cmp
and
rcl
stc
outsb
mov
outsl
pop
push
adc
loop
lock
sub
jge
mov
aad
xor
movsb
int
inc
mov
push
shrb
roll
jmp
xchg
fstpl
shll
jmp
or
movsb
jge
or
xorl
push
in
lret
push
add
insl
notl
sub
and
and
mov
lret
test
jmp
xor
popa
lock
mov
scas
cs
cmp
mov
shl
adc
xlat
andl
dec
push
rcrb
xchg
pusha
inc
std
push
and
cmp
push
repnz
cltd
inc
inc
rcll
add
pusha
inc
adc
jp
cltd
add
fidivrs
jp
add
xchg
sbb
inc
adc
inc
add
enterw
imul
fnstsw
or
loopne
repnz
xchg
ficomps
lock
adc
jns
cltd
add
fidivrs
jp
add
xchg
sbb
inc
push
fistps
repnz
nop
pop
stc
sbb
jp
add
push
lock
pop
loopne
cld
xchg
int
jae
xor
stc
pusha
nop
add
bound
lahf
pop
into
aam
fldl
lahf
push
and
fs
xor
negl
sti
mov
mov
orb
xor
mov
cmpsl
pop
filds
out
or
dec
clc
add
add
push
test
add
mov
fwait
cmpsb
cs
pop
add
cmp
addr16
or
mov
jp
mov
fldl
jae
fiadds
sarl
add
or
fcmovbe
pusha
flds
mov
push
sti
roll
bound
add
int3
rclb
out
add
pop
ljmp
lods
push
xor
xchg
xchg
jns
pop
stc
popa
xchg
cld
sub
jb
cmp
andl
mov
sub
popa
or
jl
and
mov
xorl
and
xchg
jl
aas
mov
stc
fs
cmpsl
ret
negl
sti
xor
aaa
in
jmpw
xchg
jp,pt
adc
mov
stos
mov
repnz
jle
shl
dec
int
mov
sahf
inc
cmpsw
lret
xchg
jge
sub
shrb
cwtl
push
xor
adc
inc
or
inc
int
inc
sub
xchg
mov
mov
and
stos
repnz
mov
mov
inc
and
notb
cwtl
inc
pop
roll
jge
loop
add
ret
mov
mov
std
add
push
sbb
or
add
jge
add
sub
inc
mov
push
std
movsl
mov
xorl
bnd
push
add
inc
in
jecxz
out
idiv
pop
stc
mov
mov
sub
data16
mov
jg
pop
frstor
push
int
push
arpl
and
test
sbb
stos
sub
ret
mov
mov
stos
sub
mov
jl
ret
cwtl
mov
jo
and
aaa
push
xor
lcall
ljmp
adc
sbb
sahf
or
jo
sbb
jno
jl
insb
loope
dec
in
cltd
xchg
xchg
xchg
inc
aaa
leave
pushf
cmp
lret
sbb
clc
sub
pop
add
out
inc
pop
cmp
mov
cmpsl
pop
sti
les
mov
cmpsb
and
fnsave
fidivrs
cmp
scas
cmp
cmp
xor
sbb
das
pop
cld
pop
in
xor
cmp
xor
ret
add
loopne
cwtl
jae
std
pop
xor
enter
daa
push
lock
xchg
push
out
imul
mov
repz
cmp
push
lret
jbe
adc
dec
xor
jle
jp
cmp
and
fnstcw
inc
push
ret
pop
cli
lahf
cmp
pop
push
inc
lcall
add
inc
sbb
jo
cltd
sahf
aaa
fbstp
je
add
sbb
lahf
cmp
pushf
sti
pop
dec
or
mov
xchg
push
add
popf
cmp
jle
lret
push
movsl
aas
lock
call
cmp
shll
jo
mov
adc
sub
gs
jo
int
in
imul
mov
daa
mov
inc
iret
mov
lret
das
lods
sub
pop
aam
xor
mov
mov
sub
mov
lds
inc
test
in
jbe
test
insl
dec
ret
and
test
sbb
xorb
inc
paddusw
ret
jge
jo
mull
lock
or
aad
roll
aad
lods
cs
cmovnp
cmc
xchg
jno
jg
pop
clc
xor
mov
xor
test
jae
jl
sub
stos
dec
into
iret
mov
gs
or
int3
jmp
into
cwtl
adc
mov
movsb
mov
dec
enter
xchg
addr16
dec
or
popa
popf
cmp
out
push
sbb
les
mov
mov
pusha
hlt
idivl
push
add
fsincos
pop
xchg
int
mov
mov
aaa
mov
cmpl
dec
push
fdivl
movsb
add
aaa
mov
push
sbb
mov
push
pop
push
mov
testb
xor
mov
int3
xlat
mov
xchg
mov
das
pop
inc
dec
push
jge
mov
arpl
dec
pop
fisttps
inc
push
sbb
xor
pop
test
pop
mov
xor
add
iret
ret
mov
lds
fisubrs
in
inc
mov
ja
pushf
inc
mov
iret
xchg
jle
fiadds
pop
adc
lret
xchg
sbb
fildl
sti
xchg
test
inc
push
jp
push
dec
imul
loopne
lret
icebp
add
inc
lock
ss
lods
das
movsl
daa
push
sar
mov
adc
test
jle
fldl
lea
jecxz
fadd
mov
fisttpll
repz
push
sti
popa
fiaddl
test
mov
xchg
dec
js
fcmovnu
sahf
int
lods
or
mov
mov
add
in
mov
add
mov
push
int3
pop
lods
sub
adc
lahf
ds
xchg
xchg
mov
cmpsb
ss
jp
lock
inc
sbb
mov
inc
sub
jne
dec
xor
or
push
mov
ffreep
inc
adc
pop
imul
ljmp
or
pop
mov
sahf
xchg
arpl
ffreep
lahf
cmp
push
cmp
xor
add
mov
std
cwtl
add
mov
mov
orl
hlt
mov
mov
fidivrl
sbb
xchg
pop
mov
jle
xchg
xchg
cmp
inc
jo
int3
mov
insb
inc
adc
push
rorl
and
repz
scas
sub
int
mov
lahf
mov
inc
movsl
hlt
pop
ds
sbb
sbb
stos
mov
daa
cmpsl
rorb
lret
lcall
xor
rcll
leave
push
lret
jno
add
pop
push
mov
js
fidivrl
addr16
add
stos
sub
jae
outsb
push
adc
mov
lret
cld
cmp
iret
insb
lea
roll
mov
enter
mov
int3
jb
add
jns
inc
test
pop
xchg
sbb
push
mov
pop
jae
and
stc
out
push
incb
int
xchg
test
mov
xorb
movsl
adc
sub
ds
cmpsb
xor
test
sbb
sbb
inc
or
insb
bnd
sub
leave
sub
leave
fcom
test
ljmp
hlt
dec
or
push
mov
push
adc
push
jno
cmp
loopne
popa
cmp
and
ja
into
out
sub
sbb
fcmovne
dec
loope
push
pop
mov
shrl
add
xor
push
orl
xchg
ds
and
cltd
ret
minps
jns
mov
pop
cs
out
cmp
and
xor
orb
mov
sub
adcb
ja
dec
pop
lock
notb
push
lret
and
insb
in
or
push
add
jg
cmpsb
xor
data16
pop
cwtl
sub
jecxz
push
mov
lret
cmp
addr16
cld
jp
iret
stos
pop
ret
pop
int3
xchg
cmp
loopne
inc
cmpsl
push
cmp
mov
stos
test
add
sahf
mov
mov
xor
jge
in
dec
pop
in
jne
lahf
and
dec
ret
add
scas
xor
sub
and
lret
jb
xor
xor
jns
mov
mov
test
xor
sbb
jle
ja
add
sbb
pop
xlat
orl
sbb
sub
xor
adc
jne
mov
mov
mov
les
divb
mov
jns
push
add
into
inc
sbb
fwait
and
das
out
stc
xor
arpl
fwait
jnp
movsb
sub
insb
pop
ret
push
jl
sbb
push
pop
cmc
dec
sbb
pusha
lahf
xlat
jl
jae
nop
adc
pop
aad
jge
mov
scas
sub
jmp
add
es
lret
pop
sti
xchg
cltd
lock
dec
push
sub
adc
int3
outsb
mov
dec
adc
mov
xchg
imul
cmp
xchg
ljmp
mov
mov
stos
test
and
jl
mov
mov
stc
pop
out
test
fiaddl
push
dec
and
je
ret
push
sub
jno,pt
cmpsl
pop
push
idivl
and
cmp
jge
mov
pop
add
ret
je
dec
adc
imul
es
mov
scas
mov
pop
fsubrl
cmp
call
cmpsb
cs
pop
imul
xchg
test
and
xor
int
ljmp
and
add
mov
in
les
jns
test
jb
dec
push
fisubs
mov
push
or
bound
mov
lock
inc
push
icebp
jecxz
filds
repnz
xchg
mov
leave
mov
movsb
cs
das
rorl
xchg
xor
aam
sub
lods
xchg
xchg
cmp
cwtl
test
ljmp
sub
pop
fistps
aas
cmp
jecxz
lds
inc
adc
sbb
movsl
xor
jns
mov
aam
pop
imul
test
lcall
test
cmpsl
cs
bound
push
stc
loope
lods
das
stos
repz
push
pop
filds
cld
sbb
cwtl
insl
aad
push
clc
jnp
les
lahf
aas
xchg
test
lret
lcall
cmp
mov
test
add
mov
cmp
lret
cld
push
jb
imul
lea
out
sub
adc
push
ss
dec
stos
sub
push
incl
pop
dec
lcall
cmpl
pushf
fstps
xchg
dec
daa
mov
iret
ja
bound
js
mov
cmpsl
neg
jns
lret
mov
adc
pop
clc
inc
rclb
sub
mov
aam
loopne
cmp
loopne
mov
jmp
cmp
push
jb
jnp
inc
pop
out
fwait
inc
loop
adc
popa
lret
jo
jge
mov
xor
mov
mov
mov
in
shlb
dec
icebp
push
dec
or
mull
insb
sbb
notb
xor
inc
out
in
sbb
xchg
lock
negl
cmp
aad
loop
push
pop
jmp
les
cmp
in
pop
outsl
lock
pop
loopne
arpl
jmp
jbe
repnz
mov
add
mov
cmpsl
ja
js
roll
fistl
sbb
or
jno
sub
enter
movsl
cmp
xchg
xor
out
mov
lock
cmp
adc
inc
filds
and
xor
nop
xor
test
gs
aaa
cmpsl
jg
jge
mov
inc
pop
popa
mov
xchg
lea
vaddsubps
push
data16
cmp
mov
test
add
shlb
mov
pop
and
cmp
lods
mov
mov
fwait
xor
shlb
add
add
jge
pop
sahf
inc
pop
data16
fmull
stos
ss
mov
xor
movsb
sub
mov
inc
imul
arpl
cmp
mov
movsb
sub
adc
pop
mov
sub
xor
push
add
shrl
xor
and
hlt
data16
jb
xlat
into
rcll
insl
push
stos
sub
mov
mov
inc
iret
movsb
aad
sti
adc
daa
fucomip
xchg
add
mov
outsb
push
mov
jns
add
adc
shrl
xor
sub
sub
cmp
mov
push
xlat
jle
sti
mov
inc
or
movsb
mov
in
xchg
arpl
xchg
fidivrs
push
or
dec
inc
lcall
jno
lcall
adcl
adc
push
jne
push
inc
addr16
inc
inc
pushf
mov
xchg
xor
pop
rol
fnstcw
sbb
fdivrl
cmpsl
xchg
inc
add
aad
mov
in
or
or
cld
pop
cmp
sbb
and
ss
xor
int
sti
nop
cmp
pop
inc
or
mov
orl
jo
cmp
cmpsb
jnp
mov
out
stc
or
out
adc
cltd
lret
add
adc
data16
mov
sub
jns
loop
dec
mov
mov
test
cld
dec
mov
jl
pop
out
into
popf
clc
pop
ret
pop
jno
lret
adc
jnp
sbb
push
in
push
fcoml
ret
test
fsub
and
jns
jbe
xchg
imul
int3
xchg
or
lret
nop
push
adc
movsl
sub
cmp
dec
ret
out
push
inc
ror
mov
cmp
push
xchg
sarl
pop
cld
pop
dec
not
test
xchg
fwait
cmp
cmc
pop
decb
insl
in
notl
sbb
xchg
test
mov
and
add
int
notb
mov
mov
lret
adc
jo
and
jge
mov
jo
nop
cmp
pop
add
sub
dec
aam
call
mov
sub
jne
insb
out
xchg
bound
into
xchg
fs
cmp
jb
std
add
push
mov
xchg
xor
ja
xchg
cmp
popa
aam
push
or
mov
mov
mov
xchg
inc
mov
movsl
and
fistpl
test
jg
inc
adc
lahf
ss
in
mov
sarl
in
pop
add
test
fldt
mov
fs
out
movsb
psrlq
sub
inc
aaa
and
dec
jo
xor
popf
mov
pop
or
movsb
mov
mov
mov
mov
mov
push
stc
mov
fistpll
movsb
lcall
cmpb
pop
out
into
mov
andl
dec
or
xchg
jo
das
xor
push
sub
jl
mov
mov
add
rcrb
and
sbb
paddd
pop
sub
repnz
mov
mov
popf
cmp
std
jnp
loope
lcall
sti
popf
cmp
mov
movsb
xchg
inc
int3
stos
cmc
call
cmpsb
xor
int3
iret
mov
xlat
lcall
lret
xor
sub
add
dec
or
pop
dec
or
loopne
xor
shr
insl
aam
mov
ss
cmpsl
cmp
jns
inc
or
fs
push
push
jb
push
loop
lds
add
sbb
fwait
sti
add
add
call
gs
sti
pop
gs
roll
data16
pop
aam
repnz
or
mov
adc
jb
test
mov
in
imul
mov
jle
lock
and
ja
ret
sub
adc
mov
adc
shlb
push
stc
sub
and
dec
sbbw
xorl
adc
sbb
xlat
orl
push
mov
test
xor
lcall
push
incb
dec
fiadds
mov
mov
xchg
mov
inc
roll
aad
popf
inc
adc
lods
fdivrl
cs
or
sbb
in
insl
or
mov
scas
cmp
sti
pop
popa
pushf
cmp
shl
pusha
fcomps
ret
xchg
roll
out
fisubs
xchg
inc
push
add
je
dec
push
sarb
lret
pop
sti
shll
mov
pop
jne
jge
test
push
aad
dec
fisubrl
push
lcall
add
jns
mov
inc
mov
repnz
dec
fcoml
mov
out
sbb
push
cmc
cmp
mov
loop
pop
sub
stos
je
cltd
inc
imul
je
or
xor
rorl
add
pusha
aas
pushf
add
jnp
jp
scas
sub
popa
xchg
dec
or
arpl
push
mov
mov
jno
cmc
jo
test
and
movsl
cmp
mov
mov
in
addr16
shrb
jae
lods
pusha
cmc
cmp
xchg
daa
mov
mov
movsl
test
test
lcall
or
imul
sub
imul
push
push
jl
sub
aas
inc
or
push
dec
adc
push
sub
xchg
cmpb
ret
lahf
popf
leave
xchg
scas
int3
sub
jg
jle
hlt
pop
add
aad
xchg
nop
repnz
pop
lods
xor
pop
mov
subb
and
or
pop
imull
popa
lock
stos
adc
lret
and
imul
rolb
js
cmpsb
ss
jp
les
clc
jmp
hlt
jl
add
pusha
sbb
add
push
add
push
imull
lods
out
xchg
addr16
dec
pusha
repnz
inc
dec
or
out
in
lds
cmc
pop
rcrb
push
negl
pop
mov
je
cmpsl
mov
mov
adc
inc
inc
xchg
sub
push
cwtl
in
mov
je
test
mov
push
cld
and
mov
jne
cltd
aad
orb
mov
mov
mov
lods
pop
cli
loope
roll
xorl
pop
sub
out
sbb
dec
lret
mov
sbb
xchg
mov
movsb
jl
inc
test
testb
push
out
shrb
jge
pop
icebp
inc
push
in
mov
adc
je
cmp
dec
push
sub
ds
mov
adc
push
inc
jge
mov
pop
in
dec
push
gs
cwtl
cmp
subl
sbbl
xchg
cmp
mov
mov
aam
add
cs
imul
cmp
in
jo
ficoms
outsb
cwtl
sub
push
test
leave
mov
jae
and
shlb
aas
rorl
cli
pop
fisttpll
stos
in
push
xchg
div
pop
inc
pop
push
cmp
gs
fwait
adc
rolb
sti
pushf
jnp
xor
fidivrl
sub
adc
dec
or
dec
lea
sub
add
inc
adc
pop
push
ja
dec
push
outsb
push
add
std
pop
cmp
sub
sbb
or
test
mov
in
test
stc
nop
push
mov
and
popa
cmp
add
rorb
lcall
lcall
cwtl
and
psrlq
scas
cmc
pop
xor
and
insb
hlt
cli
adc
cmp
sub
stos
cmpsl
ljmp
inc
into
repz
jo
scas
das
ljmp
js
dec
dec
or
pop
jge
mov
and
mov
cmp
cli
cltd
cmpsl
xor
loope
cld
pop
out
xor
xchg
jae
iret
pop
lret
pop
adc
dec
gs
jl
outsb
add
movsb
cwtl
aad
sub
nop
jl,pt
dec
or
and
inc
es
add
insb
out
cmpsl
cmp
xor
mov
pop
adc
movsb
lods
dec
ret
mov
xor
jmp
mov
or
insb
mov
dec
nopl
push
sti
push
jo
aaa
cmp
iret
xchg
mov
test
inc
or
cmpsl
ljmp
fsubrp
je
ret
adc
inc
adc
ds
xchg
in
mov
jecxz
pop
sub
add
add
pop
mov
js
lods
js
loopne
call
sub
rcrl
aad
mov
xchg
ret
adc
add
cs
adc
test
addl
aaa
fwait
or
xor
pop
jno
xor
dec
push
xchg
and
xchg
arpl
push
xor
outsb
cli
andb
adc
xor
lahf
sbb
scas
ror
out
push
push
ljmp
and
mov
in
inc
adc
std
fstpt
sbb
cwtl
dec
popf
or
arpl
xchg
inc
and
and
cmp
stos
stos
sbb
in
dec
fdivrl
ds
aaa
mov
adc
dec
inc
adc
das
into
xchg
out
adc
jle
xchg
inc
jge
gs
xchg
ds
mov
data16
xchg
and
ss
in
negb
lcall
push
sbb
jge
xchg
jo
arpl
pop
fs
add
mov
inc
mov
mov
and
add
push
popa
jmp
pop
sub
and
xor
orl
popa
jge
test
insb
jne
test
or
insl
in
cld
addl
pop
call
repnz
shrl
movsb
lods
jg
int3
mov
imul
inc
or
in
jnp
sub
leave
inc
je
adc
test
pushf
cmp
cltd
dec
pop
mov
mov
sub
scas
xchg
sbb
rcrb
xchg
movsl
gs
adc
mov
sub
mov
inc
jno
cld
aas
mov
pop
jp
dec
jecxz
sbb
jnp
data16
jge
sahf
rolb
je
and
dec
sbb
jecxz
inc
or
jecxz
mov
mov
lock
aad
in
add
aas
sbb
mov
lods
lahf
inc
inc
cli
inc
or
or
adc
sarb
xchg
hlt
mov
jno
and
xor
mov
in
pop
stos
xchg
inc
mov
mov
repz
fs
xor
sub
inc
sbb
imul
add
pop
dec
mov
xchg
mov
and
sarl
gs
mov
xlat
jg
pop
hlt
mov
mov
popf
mov
scas
sbb
inc
pop
mov
inc
and
push
mov
adc
jp
inc
imul
xchg
movsl
inc
or
enter
add
jb
leave
xchg
lret
scas
cmp
sub
xlat
int3
or
popf
add
enter
arpl
pop
das
popf
cmp
popf
movsl
or
sub
daa
mov
imul
xchg
leave
fdivrs
iret
sbb
jecxz
nop
fstpt
sub
ds
sub
cltd
es
icebp
scas
ret
test
mov
les
mov
pop
add
jns
fldenv
popa
fmuls
lret
mov
rcrb
push
and
mov
sti
pop
imul
push
das
subb
aas
add
das
xchg
filds
push
push
cld
sbb
aad
push
jnp
out
cmp
jl
cli
pop
dec
push
inc
adc
add
add
test
pop
aam
pop
pop
lock
pop
insl
xchg
test
jae
mov
les
stc
sub
jl
inc
pop
ret
add
fiadds
cmp
and
stos
es
in
lret
xor
stc
or
cmp
in
pop
mov
faddl
es
out
cld
dec
cpuid
stc
addr16
pop
leave
negl
lea
fsubrs
mov
push
iret
call
jmp
pop
mov
cwtl
inc
int
inc
arpl
nop
stos
push
notl
mov
js
push
outsl
out
pop
xlat
ja
lea
loop
js
imull
scas
in
push
mov
xor
xchg
and
js
push
mov
pushf
xchg
aaa
inc
int3
cmc
pop
loop
js
mulb
stos
xchg
ja
xor
xchg
push
movups
xor
mov
jl
subl
mov
cmpsb
add
leave
pop
enter
adc
mov
jno
cmp
pop
mov
mov
ficoms
cli
cmp
inc
jmp
lds
add
cmc
shlb
jb
enter
add
fildll
xor
cmpl
or
outsl
in
pop
fdivl
movsl
mov
xchg
inc
cmpsl
or
ss
push
add
imul
inc
cmpsl
jbe
xlat
lds
push
rclb
adc
adc
add
rolb
fdivr
dec
ds
lahf
ljmp
cld
divl
stc
mov
loope
sbb
or
inc
xor
pop
cs
xor
jae
bound
flds
es
flds
sbb
and
cmp
in
jbe
sub
sub
loopne
repz
adc
pop
lods
add
and
push
add
into
out
aas
dec
stos
sub
xor
cmp
popa
in
sbb
andl
sbb
loop
inc
pop
sub
push
cmpl
fs
aam
js
pusha
sbb
mov
mov
push
mov
jns
jne
fiaddl
sti
pop
out
out
adc
cwtl
push
cmpsb
cmp
fnstsw
es
adc
rorl
mov
movsl
xor
sbb
sub
sbb
push
rcrl
dec
lret
test
ljmp
jp
ret
dec
or
inc
push
ret
or
mov
inc
rclb
cmp
xchg
xchg
lcall
iret
fiadds
push
orb
mov
sarl
cltd
mov
mov
rcll
sbb
push
call
imulb
movsl
add
sub
shll
mov
repz
jne
lea
test
inc
or
icebp
test
and
mov
dec
adc
daa
dec
adc
dec
jmp
sbb
or
call
cs
pop
aad
cmp
shll
leave
add
scas
inc
or
pop
push
stc
pop
test
jmp
inc
or
iret
push
inc
or
pop
sahf
inc
fdivl
stos
pop
or
xor
and
mov
or
lods
ja
or
aam
jbe
dec
or
and
cmp
stc
pop
mov
cmp
into
mov
sbb
adc
inc
adc
int
pushf
xor
out
sub
fmul
daa
stos
nop
or
and
lds
adc
stos
das
adc
pusha
into
cmp
push
sbb
mov
arpl
dec
pop
sub
loope
xor
in
mov
push
pusha
sub
pop
sarl
in
imul
lcall
and
mov
cmp
jge
mov
rcl
mov
xchg
inc
inc
add
aad
outsl
sbb
jne
and
cmpsl
xchg
inc
repnz
mov
xchg
mov
jo
imul
xor
jns
cmp
fsubs
ss
sbb
insl
sahf
adc
outsl
or
push
sbb
xlat
imul
leave
sub
cld
sub
nop
and
mov
pusha
add
pop
lret
mov
loope
push
adc
adc
fimull
sbb
add
push
scas
ss
inc
or
cs
test
ss
jge
inc
cmp
loop
xchg
xchg
dec
adc
mov
or
popa
fldenv
int3
jae
fnstenv
cmpsb
pop
add
lret
xchg
inc
cmp
outsb
sahf
inc
inc
or
int3
jmp
jmp
std
jge
dec
adc
arpl
ret
dec
xlat
js
mov
pop
enter
mov
test
stos
negb
pop
jnp
pop
in
mov
lods
aaa
adc
mov
sbb
dec
push
add
loop,pt
push
jo
inc
jne
fdivrl
outsb
lcall
out
mov
xchg
sub
jmp
mov
movsl
xor
scas
dec
push
fwait
mov
leave
pushf
les
lds
push
lahf
lock
add
pop
mov
popf
lahf
xchg
xlat
test
dec
or
in
push
jae
push
outsl
or
mov
jbe
sbb
fnsave
xor
dec
subb
fidivs
xchg
mov
add
mov
mov
xchg
sub
push
and
jmp
orl
cmp
sbb
and
cmp
outsl
in
sbb
imul
inc
mov
fldt
xchg
jecxz
enter
pop
adc
add
push
mov
in
inc
mov
mov
into
addb
out
push
int
movsl
arpl
mov
stos
sarb
aaa
mov
adc
cs
rcr
jo
je
shrl
push
mov
loope
mov
sti
xor
dec
movsl
mov
insb
aas
stc
cmpsl
sub
sub
imul
cmpb
or
test
mov
cwtl
push
lods
jbe
dec
cmpb
xchg
jge
lods
out
sbb
inc
mul
outsb
popa
xchg
pushf
inc
cmpsb
jb
mov
js
aam
push
push
nop
pushf
inc
push
or
rorl
popa
out
pop
pop
add
out
addb
cmpsl
sub
mov
jns
int
xor
out
ficomps
test
rcrb
dec
jmp
pop
aas
sahf
pusha
jmp
sub
jnp
jnp
jbe
jne
aas
mov
sti
inc
lds
aas
add
cwtl
xor
fdivl
adc
mov
jnp
outsb
movsl
xchg
pushf
inc
or
lods
xor
les
lds
scas
jge
clc
fcomps
mov
nop
jle
ret
loopne
mov
jle
ljmp
in
inc
std
les
mov
xchg
inc
ret
aam
sbb
xchg
lahf
shll
xchg
mov
ja
cs
pop
pop
cmp
add
push
sbb
loopne
xchg
stc
notl
dec
or
iret
jne
scas
enter
sbb
iret
adc
add
adc
mov
cmp
fcoms
mov
or
push
cs
xlat
test
shr
xchg
out
test
cli
cltd
xor
out
inc
adc
push
fnstcw
js
ret
popf
mov
cmpsb
ficoms
cwtl
std
add
sbb
int
hlt
inc
cmp
sahf
lahf
fwait
ds
ret
xor
add
lds
movsb
push
mov
daa
enter
cmp
mov
adc
add
lods
and
add
fadds
ret
pop
movsl
sub
sarl
xchg
xor
daa
jne
loopne
mov
push
fadds
or
movsl
sub
sbb
or
movsl
dec
jnp
mov
stos
mov
ret
addl
movsl
sub
mov
mov
or
test
pusha
pop
or
mov
es
push
std
inc
fldt
sub
jne
dec
stc
cmpb
lods
mov
sbb
and
rclb
mov
out
movsb
lcall
imul
clc
pop
sbb
jno
mov
sahf
xchg
xor
ret
mov
push
jmp
inc
ss
push
mov
ret
lods
inc
push
or
cmp
lret
pop
push
jg
scas
xchg
push
add
mov
mov
fldcw
lret
pusha
idiv
cld
call
push
dec
sbb
xor
mov
mov
lock
fidivl
inc
ja
ja
clc
popf
cwtl
xchg
sub
mov
mov
sbb
shrl
arpl
xchg
xchg
out
xchg
mov
or
in
movsb
adc
ss
addr16
scas
inc
mov
int3
arpl
fisubl
or
jmp
xor
push
or
mov
daa
mov
add
inc
fsubrl
fbstp
dec
arpl
jle
std
xchg
stos
lahf
sbbl
std
repnz
ss
cmp
push
inc
mov
out
mov
ret
jbe
cmc
jmp
nop
sbb
ds
scas
outsl
push
dec
pushf
nop
xor
push
adc
lock
jno
fs
movsl
xchg
xchg
ret
out
lods
inc
or
dec
loop
sub
imul
mov
xchg
loopne
pop
sahf
add
cmpsb
cmp
push
push
les
ja
fisubrl
leave
popa
clc
cli
sti
add
dec
dec
push
mov
outsl
sahf
xor
rol
mov
icebp
and
inc
js
jne
stc
nop
fwait
xchg
xchg
sub
in
jmp
ss
cmp
imul
lock
mov
or
loop
movsl
adc
xchg
sub
xor
ret
gs
scas
inc
mov
int
push
xorl
xchg
test
cmp
rol
pop
add
inc
and
ja
dec
fs
jl
xchg
test
lret
sti
lock
rorb
mov
lock
shll
jmp
xchg
sub
insl
push
ss
mov
push
jmp
psllw
bound
cmpsb
xchg
test
in
scas
inc
or
dec
jecxz
sub
arpl
push
mov
xorl
add
mov
test
stc
clc
stc
add
dec
dec
pop
mov
insl
lahf
ss
popf
cmp
push
repnz
pop
repnz
jae
inc
jns
jae
cli
xchg
cltd
xchg
xchg
cs
mov
mov
sbb
shrl
pop
push
in
nop
icebp
mov
loopne
cmpsb
adc
sub
inc
mov
gs
imul
xor
xchg
pop
push
or
scas
movsb
sub
add
inc
and
js
dec
fs
jp
call
int
sbb
aaa
and
mov
icebp
mov
sarl
out
xchg
sbb
sbb
lcall
push
ficoms
pslld
bound
cmpsl
xchg
adcl
in
scas
inc
or
dec
in
sub
arpl
imul
jl
subl
add
mov
test
stc
idiv
add
dec
dec
and
popf
popf
ds
mov
pop
repz
fdivl
inc
jp
jae
cli
xchg
xchg
xchg
cwtl
das
mov
mov
sbb
aaa
into
cmp
aam
insb
pop
push
in
mov
jae
loope
adc
xor
push
mov
mov
gs
push
or
in
subl
mov
pop
push
or
scas
mov
les
cmc
inc
frstor
and
jns
inc
fs
js
add
lret
leave
push
mov
in
mov
aam
aas
mov
repnz
xchg
fdivl
sarb
in
xchg
pop
adc
das
inc
cmp
scas
imul
int
mov
push
jmp
push
repz
jb
pusha
popa
adc
mov
das
in
scas
inc
push
push
dec
in
daa
int3
arpl
insb
add
stos
mov
or
xor
daa
mov
xorl
mov
les
cmc
testl
sbb
and
pushf
fwait
ds
mov
pop
repz
adc
je
aas
jp
jno
sti
xchg
xchg
xchg
cwtl
das
les
mov
pop
or
iret
cmp
aam
push
push
in
lea
je
loopne
adc
xor
lds
mov
xchg
iret
data16
push
push
cld
in
test
sub
mov
lods
mov
les
hlt
inc
fisubs
inc
gs
ja
add
lret
mov
jmp
cmp
ds
repnz
xchg
fnsave
jns
lock
xchg
push
adc
mov
gs
xchg
mov
into
mov
fistl
or
repz
sub
adc
mov
das
loop
scas
inc
add
es
pop
push
insb
add
test
or
cs
sub
xorl
jnp
ret
fs
hlt
cmc
add
dec
inc
and
fwait
cltd
ds
mov
pop
repz
fidivs
cmp
cld
xchg
xchg
nop
cwtl
das
ret
mov
jecxz
dec
adc
ss
push
mov
mov
fcoml
cmpsl
or
cs
mov
xchg
shlb
shrb
add
out
test
dec
or
jg
cmpsb
cmp
ror
les
repnz
fbld
and
jp
inc
data16
jne
add
enter
imul
mov
aad
cmp
push
outsb
push
repz
fidivs
mov
cld
xchg
adc
cltd
xor
sbb
xchg
xchg
iret
mov
fsts
or
hlt
mov
je
pop
pop
adc
mov
xor
loopne
mov
add
dec
out
and
gs
push
insl
add
ja
subl
or
sub
sub
dec
dec
pop
jg
inc
fisubs
shll
repz
inc
inc
and
cltd
xchg
aas
enter
in
jmp
fbstp
cmp
insl
popa
std
xchg
xchg
mov
mov
loope
dec
adc
cmp
cmp
out
mov
jbe
fstp
adc
xor
mov
test
in
movsl
shlb
shrl
add
out
test
and
or
jge
cmpsl
ds
sahf
sub
iret
lret
lds
dec
fbld
pop
in
push
inc
data16
jae
add
mov
mov
out
cmp
pop
aas
dec
cmp
push
insb
imul
mov
loopne
xchg
adc
lcall
bound
iret
mov
insl
out
push
in
or
cmc
mov
sub
pop
adc
scas
scas
xor
mov
add
push
out
and
gs
push
outsb
add
cmpsl
cmpsb
mov
fmul
or
sub
sub
dec
dec
enter
inc
ficomps
mov
add
and
test
inc
inc
and
xchg
xchg
inc
xlat
mov
pop
cmc
sbb
jbe
cmp
pop
std
xchg
xchg
lea
mov
loopne
dec
adc
insl
gs
pop
out
mov
jbe
fcmovnu
adc
das
sub
pop
push
mov
cmpb
scas
mov
insb
add
imul
test
and
and
or
jnp
test
test
lret
cld
out
dec
fistps
push
in
push
inc
data16
jno
add
hlt
in
cmp
push
inc
xlat
inc
cmp
push
push
pop
cmc
cltd
mov
jne
mov
cld
xchg
adc
fwait
xor
sbb
xchg
cmpl
mov
xlat
outsb
out
push
in
push
or
lea
daa
je
pop
pop
adc
mov
sub
mov
call
xor
iret
push
push
outsb
add
cmpsb
movsb
mov
or
sub
sub
dec
dec
enter
dec
fistps
mov
add
and
test
inc
and
xchg
xchg
inc
xlat
lds
pop
cmc
pop
or
ja
cmp
pop
xchg
nop
mov
mov
fidivrs
shlb
push
pop
lock
push
fcmovbe
adc
sub
pop
dec
mov
cmpl
aam
insb
add
imul
xchg
and
movsb
jp
test
cmpsl
fwait
sub
int3
enter
in
dec
loopne
sbb
jl
aas
addr16
jo
add
ret
shll
repnz
cmp
adc
xlat
inc
aaa
rcrl
pop
cmc
xchg
mov
jbe
mov
std
xchg
fwait
xor
xor
mov
pop
mov
shlb
aam
out
add
es
pop
pop
adc
mov
sub
int3
mov
std
push
out
and
addr16
dec
outsb
add
movsl
mov
or
div
stos
inc
daa
sbb
ret
enter
dec
loopne
fwait
out
int
addr16
out
out
add
pop
adc
mov
xchg
xchg
inc
xlat
ret
mov
pop
call
or
js
ss
push
mov
mov
fdivrl
shll
insl
popa
push
pop
icebp
xchg
js
adc
sub
dec
mov
cmpb
stos
mov
insb
add
hlt
lock
and
movsl
js
test
ret
lret
pop
clc
jmp
loope
sbb
jge
cmp
add
sahf
popl
mov
adc
inc
fadds
ret
fs
notb
mov
adc
xchg
or
cs
pop
pop
mov
shll
rcrb
add
mov
and
or
mov
sub
lret
cld
sti
push
call
push
dec
outsl
push
jg
out
xchg
les
inc
and
inc
leave
pusha
js
dec
loope
cltd
out
lret
mov
add
push
inc
and
xchg
nop
inc
fadd
mov
pop
out
pop
notb
or
jns
xor
adc
pop
add
mov
fidivrl
aam
sub
pop
repnz
adc
rcll
stos
add
xchg
sub
xor
push
dec
mov
jge
dec
out
sahf
shrl
lret
cld
icebp
icebp
mov
push
mov
push
inc
jne
stos
inc
mov
enter
dec
loop
sbb
jle
cmp
insb
imul
mov
loopne
cmp
adc
inc
xor
pop
bound
xchg
xchg
js
mov
adc
or
popf
xor
sub
mov
pop
mov
shrb
rcrb
add
clc
xor
ja
push
push
push
lods
xchg
sub
cmpsl
xor
fmul
mov
cli
stc
push
jmp
dec
dec
jo
jge
lock
ret
repz
lods
inc
and
lret
addr16
loop
xchg
call
add
ljmp
aas
cmp
mov
xchg
mov
mov
loopne
notl
pop
jecxz
cmp
jle
fs
add
mov
pop
mov
fdivrs
aam
sub
outsl
pop
push
pop
repnz
mov
jns
aad
adc
add
xchg
sub
mov
jl
push
out
popf
shrl
leave
outsb
add
and
je
stos
inc
mov
ret
leave
pusha
cmc
out
loop
pop
call
add
push
popf
fwait
mov
mov
adc
inc
fiaddl
ret
pop
fs
popa
clc
xchg
test
js
mov
push
in
call
cmp
sbb
push
mov
shrb
iret
pop
lock
stc
nop
xor
ja
push
push
pop
scas
test
cmpsb
cmpsb
xor
dec
stc
clc
push
ljmp
jno
jl
lock
rorl
repnz
inc
and
bound
dec
loop
xchg
jmp
add
jmp
mov
cmp
cmp
mov
fbld
adc
jecxz
cmp
jg
arpl
cwtl
mov
mov
xlat
mov
aam
sub
jo
push
pop
repnz
adc
rcll
sub
lret
mov
jnp
push
call
into
enter
out
icebp
mov
sbb
and
jae
lods
inc
mov
ret
hlt
out
loop
push
jmp
add
pop
sahf
lcall
mov
adc
inc
fstpt
xor
pop
arpl
stc
xchg
test
js
mov
pop
in
call
cmp
sbb
push
mov
lods
lods
into
pop
lock
stc
nop
xor
js
push
push
pop
scas
xorl
movsb
xor
dec
stc
notb
daa
sbb
push
dec
jno
jp
icebp
mov
rorl
repnz
lods
inc
and
lds
lret
bound
dec
jecxz
xchg
jmp
add
out
sahf
sbb
and
cmp
ds
mov
mov
frstor
push
push
in
cmp
jg
popa
pop
add
mov
and
pop
ds
sub
jo
push
pop
repz
aam
adc
das
sub
xor
push
dec
mov
jnp
push
call
into
outsl
push
clc
out
repnz
sbb
cmpsl
jae
lods
inc
lahf
xchg
cs
lret
out
jecxz
adc
addb
add
pop
sahf
cwtl
mov
mov
adc
fstpt
pop
stc
popl
pop
loop
add
sub
mov
push
mov
shrl
pop
icebp
std
stc
nop
das
and
push
push
pop
scas
xorl
int3
rol
mov
clc
hlt
push
ljmp
jno
js
repnz
rclb
icebp
in
lods
inc
push
adc
movb
jno
dec
in
xchg
jmp
add
in
sahf
push
or
mov
nop
mov
mov
or
in
aaa
sub
add
mov
and
add
daa
fnstenv
dec
pop
hlt
cmpb
lods
mov
adc
xor
and
push
inc
mov
jns
push
jmp
int3
les
imul
repz
sbb
test
imul
ret
mov
dec
in
adc
addl
lahf
xchg
mov
mov
push
or
cmp
lds
arpl
lea
sbbl
push
add
mov
push
mov
aam
test
jae
lret
pop
repnz
sti
cli
xchg
sub
dec
sbb
mov
les
jmp
sbb
insb
dec
inc
jb
jbe
repz
mov
scas
inc
sbb
xor
inc
cmp
dec
in
nop
ljmp
jecxz
lahf
adc
mov
cmp
test
fstpt
fldenv
or
out
xor
push
add
xchg
xor
mov
xlat
sub
fidivl
dec
pop
cmc
jle
clc
adc
lret
push
lods
cld
repnz
inc
mov
ljmp
jno
hlt
jmp
mov
adc
fwait
nop
xor
sarl
adc
jmp
inc
xor
add
or
mov
fisubrl
fnstsw
sub
fs
mov
sbbb
roll
cltd
add
mov
mov
push
mov
aad
cmpsb
fnsave
pop
repz
stc
sti
xchg
sub
adc
sbb
mov
ret
hlt
lock
in
and
insl
dec
inc
jae
je
hlt
mov
mov
scas
inc
sbb
xor
inc
cmp
fs
popa
dec
out
mov
add
insl
add
loope
mov
cmp
daa
mov
mov
enter
arpl
or
out
xor
sbbl
test
scas
cmpsb
and
add
inc
fsubrs
and
jb
dec
pop
idivb
nop
test
jge
iret
leave
pop
scas
cli
lock
xor
sbb
int
inc
mov
jmp
xchg
xlat
outsb
enter
bnd
xchg
sub
adc
cltd
mov
enter
fs
loopne
out
push
in
addl
add
popa
or
mov
sub
or
inc
fidivs
sub
pop
pop
pop
gs
mov
jl
stos
sbbl
roll
lcall
and
xorl
cmpsl
movsb
fnsave
pop
hlt
stc
idiv
xchg
sub
jl
dec
dec
sbb
mov
sarl
pop
adc
jae
jb
cmc
mov
mov
scas
inc
sbb
xor
aas
cmp
imul
xchg
mov
cmpb
or
cmp
daa
mov
mov
leave
pusha
arpl
push
add
jg
daa
sbbl
test
lods
movsl
and
int
push
push
inc
fldcw
and
jae
dec
pusha
idivl
cli
xchg
cmpsb
fwait
jle
int
sbb
and
aaa
into
dec
inc
mov
in
popf
xchg
fsubrs
mov
testb
cmp
imul
xchg
mov
leave
mov
ficoms
in
test
xor
bound
mov
mov
sub
loop
stos
inc
or
fbstp
push
data16
xchg
scas
test
sbb
iret
add
add
mov
mov
xorl
aam
pop
cmc
div
cld
xchg
daa
sbb
dec
dec
sbb
sahf
lcall
icebp
in
push
in
sbb
je,pt
jo
testb
mov
mov
push
or
lret
into
imul
cmpl
mov
ss
sub
mov
lret
shll
call
sbb
push
popf
cmpb
stos
mov
mov
fldenv
and
je
inc
pusha
idivl
sti
xchg
movsl
cltd
jle
lret
sbb
push
sbb
iret
dec
aas
mov
in
pushf
xchg
fsubrs
mov
testb
cmp
imul
mov
fcoml
or
outsb
add
popl
sub
loope
stos
inc
push
add
lods
cmc
xchg
loopne
cmp
push
sub
add
rclb
sub
pop
adc
xorb
jae
leave
pusha
repnz
mov
push
sub
out
inc
mov
cmovb
pop
ljmp
xor
lahf
xor
repnz
inc
mov
cmpsb
dec
add
or
sbb
mov
add
jne
test
test
nop
xorl
outsl
push
gs
or
xchg
inc
enter
popf
xor
or
add
xor
cli
sub
test
mov
mov
inc
push
xor
mov
mov
bound
lret
mov
mov
jge
je
xchg
nop
xchg
ret
inc
dec
loope
jl
jmp
popa
popf
js
popf
push
leave
mov
mov
pop
enter
test
xor
repnz
xchg
in
sbb
xor
test
outsl
xchg
out
lahf
std
mov
movsb
ja
mov
test
sarl
adc
pop
sub
or
xor
addr16
lcall
pushf
cmovg
insb
pop
call
ja
stos
int3
push
ret
cmpsl
mov
call
push
lahf
ljmp
lds
adc
out
cmp
int
xchg
push
mov
pusha
push
xor
popf
stc
or
je
js
add
int
icebp
pushf
sub
push
push
fwait
data16
imul
pushf
imul
fstpl
mov
push
sahf
lock
jge
xchg
outsl
sbb
ljmp
pop
in
cmp
pop
cmc
push
mov
not
es
pushf
insb
imul
jne
jae
js
lods
lock
pop
and
inc
cwtl
mov
mov
dec
pop
mov
popf
addr16
pushf
subb
mov
cmp
xlat
fisttpl
xchg
adc
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
and
into
mov
popa
adc
ss
out
dec
les
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fstpt
jmp
mov
outsb
jo
sub
ja
insb
out
fnstcw
jae
push
inc
or
jne
mov
adc
or
or
lock
sub
sbb
push
xor
call
pop
inc
xlat
jle
mov
jb
jmp
mov
cmpsl
dec
iret
aas
push
dec
jae
adc
cmp
lock
lahf
icebp
pavgb
outsb
mov
fldcw
push
mov
into
outsb
cmpsb
jp
out
leave
into
lret
pop
push
ficompl
or
cmpsb
cmpsl
mov
jmp
fsubl
idivb
xor
and
insl
lahf
or
adcl
bound
mov
xchg
das
dec
inc
outsb
or
fldl
inc
pushf
pop
push
cmp
sti
and
xchg
dec
mov
inc
sub
adc
add
in
mov
aad
mov
push
push
and
mov
sub
lret
mov
push
loope
and
mov
ds
hlt
aaa
stos
inc
push
fstl
jle
jb
xchg
mov
sbb
mov
negb
or
xchg
dec
dec
pop
das
stos
das
nop
xor
movsl
imul
aad
aas
sbb
cmp
dec
bound
cmp
xchg
mov
jb
push
adc
sbb
add
and
std
adc
je,pn
test
jge
sub
jo
test
mov
jae
adc
mov
mov
add
pusha
sahf
pop
mov
adc
adc
adc
add
stc
in
sbb
mov
cmp
in
push
fiadds
adc
jb
out
shrb
mov
jmp
repnz
dec
sbb
hlt
int3
lods
ficomps
xchg
lcall
cmc
lods
adc
pushf
inc
jmp
cmp
mov
cli
xlat
arpl
scas
jo
inc
xchg
mov
pushf
fidivs
lret
xor
leave
out
mov
