inc
roll
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
push
cmc
stc
icebp
cmp
mov
mov
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
jl
popf
jae
mov
subl
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
aaa
pop
test
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
cmp
xor
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
inc
push
xchg
sbb
mov
mov
and
int3
cmc
cmp
call
fcmovne
push
mov
es
test
cltd
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
push
pop
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
add
inc
mov
cmpsb
mov
test
mov
jge
popf
ret
jle
or
xchg
insb
addr16
jmp
iret
adc
mov
call
out
cmp
loope
test
orb
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
sbb
or
sub
lret
adc
jne
inc
or
ret
jns
and
dec
inc
cmp
mov
sbb
jo
fldcw
add
and
sbb
add
or
sbb
pop
test
insb
popf
rcrb
ja
fidivrs
dec
add
xchg
aaa
push
pop
inc
shl
movl
mov
xchg
sub
iret
push
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
jbe
jecxz
pop
xor
push
stos
adc
jmp
ret
push
pop
clc
sbb
sub
mov
mov
add
fsubs
add
adc
add
mov
and
add
and
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
xchg
and
add
add
dec
and
add
add
hlt
and
add
add
add
add
add
add
clc
and
add
and
add
and
add
add
jo
add
xor
add
out
and
add
add
and
add
add
dec
and
add
add
add
add
test
add
int3
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
add
adc
add
mov
and
add
and
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
xchg
and
add
add
dec
and
add
add
hlt
and
add
add
add
add
add
add
clc
and
add
and
add
and
add
add
jo
add
xor
add
out
and
add
add
and
add
add
dec
and
add
add
add
add
test
add
int3
and
add
add
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
outsl
jo
inc
imul
insb
gs
sti
add
insb
gs
jae
dec
jne
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
je
insl
push
add
fs
outsl
outsb
jae
insb
gs
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
je
outsl
imul
jbe
jae
add
inc
gs
je
imul
push
add
icebp
add
imul
jb
je
arpl
add
roll
dec
gs
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
gs
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
gs
add
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
outsb
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
fs
imul
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
outsl
js
add
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
inc
push
push
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jp
lods
stos
lods
add
test
push
mov
mov
mov
ret
ret
stos
leave
lret
int
int
rcl
shr
rcl
shl
rcl
shl
int
int3
hlt
leave
enter
leave
out
mov
in
mov
mov
stos
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
leave
lret
not
rcl
cld
xlat
fcom
std
fcom
fdivr
xlat
aad
ror
sar
int
int3
aam
aad
ror
sar
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
call
rcl
aad
fcom
fdivr
fcomp
xlat
call
aam
dec
int3
into
dec
int
call
aam
dec
into
int
mov
mov
mov
std
cmpsl
cmpsl
cmpsb
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
pop
add
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
into
int3
call
rcl
call
fdivr
xlat
xlat
xlat
call
aam
dec
into
int3
dec
lret
leave
dec
into
int3
inc
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
sbb
sub
ss
aaa
cmp
cmp
and
and
push
pop
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarb
enter
rcl
call
aam
call
aad
call
ror
dec
enter
mov
mov
mov
ljmp
mov
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jg
jge
jle
jge
jb
jb
bound
mov
cmp
inc
inc
mov
outsl
outsb
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
dec
leave
lret
leave
inc
ret
ret
mov
mov
lods
lods
lods
jmp
lcall
xchg
xchg
xchg
cwtl
xchg
fwait
fwait
cltd
in
addb
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jnp
xchg
lea
incb
jp
idivb
jl
outsb
outsb
jo
push
push
jne
jle
jg
js
jp
arpl
fs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
nop
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
js
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
mov
jg
jo
jno
je
je
jle
jg
addb
xchg
addr16
cmp
and
and
cmp
movsl
mov
test
sti
lods
lods
lods
stos
stos
lods
test
stos
std
mov
fwait
fwait
xchg
xchg
xchg
decl
jge
js
jp
jnp
jnp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
femms
push
xor
inc
dec
insb
insl
insl
jl
xchg
leave
fwait
lcall
cltd
lcall
mov
mov
xchg
mov
mov
cltd
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
lods
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
xchg
sahf
sahf
pushf
std
mov
mov
xchg
in
nop
in
xchg
jne
or
add
or
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
lea
call
lahf
lahf
jmp
lods
pushl
cmpsb
scas
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
xchg
pushf
decl
mov
xchg
nop
decl
xchg
xchg
pushf
sahf
sahf
movsl
movsb
mov
movsl
mov
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
jne
jnp
jge
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
js
mov
cmpsb
mov
mov
stos
lods
mov
movsl
movsb
add
mov
add
pusha
adc
mov
ljmp
sahf
decl
xchg
call
xchg
xchg
call
xchg
cwtl
fwait
lcall
sahf
mov
movsl
std
mov
cwtl
lcall
xchg
xchg
les
cltd
fwait
in
xchg
cwtl
out
lea
xchg
stc
xchg
test
std
xchg
jb
cltd
push
cmp
dec
cmp
inc
jl
mov
jnp
mov
jb
mov
outsb
ljmp
pcmpgtd
lods
or
stos
or
mov
jle
mov
mov
lods
pushf
movsl
movsl
movsl
and
add
add
pop
pop
adc
mov
lcall
xchg
xchg
call
cltd
fwait
lcall
lahf
lahf
lcall
lcall
xchg
xchg
nop
xchg
nop
call
xchg
lcall
fwait
lahf
stc
lahf
xchg
sahf
cld
pushf
mov
xchg
push
xchg
pop
jge
cwtl
dec
jp
lcall
sahf
pop
addr16
lahf
sbb
mov
adc
ljmp
packuswb
lods
adc
scas
adc
mov
imul
mov
insb
mov
fwait
scas
mov
scas
lods
scas
movsb
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
sahf
sahf
lcall
movsl
movsl
jmp
mov
cwtl
decl
mov
decl
ja
fwait
jb
lcall
call
sub
decl
adc
or
xchg
add
call
add
sahf
push
pop
ljmp
sbb
mov
outsl
pushl
sbb
jb
mov
and
shll
inc
inc
test
ret
mov
lods
lods
mov
lahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsl
ljmp
cmpsb
test
test
test
lcall
jle
decl
inc
jo
mov
imul
mov
pusha
incl
or
incl
push
decl
add
xchg
add
xchg
add
lcall
jmp
and
mov
ja
mov
sub
sub
ret
sub
jge
xor
dec
inc
mov
leave
mov
cld
scas
mov
lret
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
popf
jmp
stos
stos
ljmp
lods
lods
pushl
scas
scas
jmp
mov
xchg
pop
incl
or
addb
incl
add
mov
push
decl
pop
call
add
lahf
add
mov
adc
mov
cmp
dec
cmp
into
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
and
decl
adc
mov
pop
decl
pop
push
incl
add
mov
push
decl
add
popf
add
mov
add
lods
add
jo
ret
dec
inc
mov
int
call
inc
call
inc
mov
fmuls
call
dec
xchg
fimull
fisttpl
ficoml
call
test
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
jnp
movsl
sahf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
decl
sbb
mov
pop
decl
or
mov
push
call
add
popf
add
mov
add
test
pusha
pushl
and
mov
push
cltd
fcoms
fsts
fistpl
ficomps
jmp
pop
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
sahf
add
inc
inc
adc
jns
mov
movsb
test
lahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
mov
call
and
push
call
or
nop
add
xchg
add
lcall
jmp
add
mov
gs
mov
xor
fstps
fisubs
fisubs
in
cmpsb
jmp
cmpsl
call
push
call
stos
faddl
mov
test
mov
lahf
lahf
add
inc
aas
adc
je
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
lcall
push
callw
add
lcall
jmp
add
mov
pushw
adc
roll
fsubrl
jmp
outsb
lods
jmp
jno
jmp
jno
ljmp
jmp
scas
in
jbe
in
jbe
in
jae
jmp
xchg
mov
cmpsb
cmpsl
lcall
lahf
add
add
insl
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
sarb
mov
scas
lcall
outsb
lcall
aaa
jae
sahf
xor
fwait
sbb
pop
call
add
movsb
add
add
mov
pushl
add
enter
ficoml
jecxz
mov
jmp
jle
in
xorb
repnz
xacquire
push
cmpb
mov
shl
stos
test
daa
sahf
sahf
lahf
add
add
add
popa
add
xor
push
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
mov
lcall
cmp
movsb
inc
jge
movsl
inc
jg
mov
pop
call
add
mov
add
lods
add
mov
gs
mov
add
shlb
cmp
data16
ljmp
in
mov
push
xchg
sar
xchg
sar
xchg
push
xchg
xchg
clc
in
mov
inc
ret
stos
stos
stos
mov
popf
pushf
xor
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
mov
mov
jge
lcall
dec
cmp
movsl
xor
pop
lcall
add
test
pop
ljmp
fs
mov
add
leave
add
call
xor
jmp
ja
out
xchg
ret
push
cltd
push
lcall
negl
enter
lret
sahf
int
cld
popf
int
sti
cltd
lret
push
xchg
sar
mov
enter
mov
mov
xchg
add
add
add
ss
or
cmp
dec
jecxz
pop
call
mov
mov
mov
sar
ret
ret
inc
inc
leave
enter
mov
lcall
dec
mov
scas
push
mov
mov
pop
pop
lcall
pop
ljmp
add
mov
add
enter
rorl
jne
fiadds
in
mov
push
cmpsb
int
cmc
movsb
into
stc
cmpsl
into
sti
test
sti
cmpsb
into
cld
test
std
stos
sar
std
stos
sar
std
test
push
sahf
jmp
mov
dec
enter
mov
into
sahf
lahf
lahf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
or
bound
pop
xlat
jne
jb
mov
mov
ret
mov
inc
ret
inc
leave
inc
rol
mov
test
movsb
push
test
scas
push
mov
scas
dec
test
mov
add
movsl
add
stos
add
mov
mov
add
int
outsl
call
add
adc
out
pop
cmpsb
push
popf
lret
lods
sar
cli
mov
cld
scas
aad
cld
mov
cld
mov
std
mov
mov
mov
mov
cld
mov
push
cmpsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
push
add
dec
dec
ss
outsb
mov
fcom
xlat
xlat
jmp
fcom
not
rcl
std
lret
int
dec
lret
leave
dec
lret
lret
lret
mov
scas
ljmp
push
mov
lods
cmp
lcall
add
lods
add
mov
fs
mov
add
rolb
jo
fadds
jb
loopne
je
jmp
jno
cld
lods
aad
mov
fcos
cld
mov
std
mov
mov
fdivr
std
rcr
mov
int
out
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
call
out
loope
loope
fucom
fsub
fcmovu
fcomi
fsqrt
fcom
std
into
rcl
mov
push
test
test
add
pusha
pushl
add
ret
dec
add
add
fldl
ja
in
jbe
out
xor
sti
mov
loopne
std
ret
inc
loop
inc
fdivrp
std
fdivrp
inc
loopne
dec
std
leave
fdivrp
dec
std
lret
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
incb
std
incb
std
std
add
div
or
out
in
pop
jmp
in
sub
out
in
dec
call
jmp
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
mov
add
ljmp
add
mov
add
int
insl
fadds
je
loopne
ja
call
inc
pushf
cld
mov
jecxz
dec
loop
std
int3
out
dec
in
dec
jecxz
dec
loope
dec
loop
dec
loop
call
jecxz
call
jecxz
shl
cli
ret
fdivr
out
mov
xlat
inc
ret
out
cmpsb
cmpsb
cmpsl
mov
cwtl
cwtl
add
add
add
incb
std
incl
idiv
testb
hlt
icebp
add
repz
in
lock
out
lock
cmp
in
in
pop
loope
mov
xchg
sti
sahf
and
pop
jmp
add
mov
inc
add
movl
jno
flds
jbe
in
jnp
in
push
pop
stos
cli
mov
dec
in
std
shl
shr
call
out
call
jecxz
std
aad
call
out
std
xlat
jmp
fldl2e
fucomi
shl
push
ret
jmp
aam
dec
leave
leave
repz
xchg
xchg
and
xchg
xchg
add
cli
add
cld
testl
repz
or
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
roll
jo
fldl
jbe
call
sbb
cld
ret
fsubr
std
fucomi
std
fucomi
fucomi
fucomp
std
fucomi
fucomi
std
loopne
loopne
fucomip
std
aam
push
aam
out
fdivr
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
leave
lds
lods
jnp
repnz
and
sahf
add
test
pop
pushl
add
ret
add
int
insl
call
add
filds
jne
call
sub
shr
std
fsubrp
std
fucomp
fucomi
fldpi
call
call
std
aam
cld
shl
cli
iret
loop
clc
iret
fdivrp
test
aad
out
mov
jmp
rcr
call
fdivr
mov
mov
lcall
add
add
add
fcom
add
enter
mov
sahf
jmp
sub
add
test
add
mov
add
iret
add
fadds
jb
loopne
js
ljmp
cli
xchg
cld
enter
lret
cli
clc
mov
sar
repz
sar
icebp
mov
into
ljmp
jmp
ret
jmp
fnclex
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
xor
jmp
add
mov
addr16
mov
add
int
jno
rorl
jbe
fsts
ja
loope
cmp
call
scas
lret
mov
call
lods
ret
cld
fidivs
neg
mov
leave
ljmp
rcr
loopne
shl
aad
call
in
test
in
out
popf
ljmp
push
stos
stos
lods
adc
test
cmpsl
add
ret
mov
ret
mov
lods
aam
dec
cmp
sbb
cmpsb
sbb
jb
mov
jns
mov
inc
test
les
stc
lret
arpl
hlt
rorl
out
mov
mov
enter
lret
rcl
int3
mov
into
shll
rcl
jg
jb
fnstsw
gs
in
out
out
call
cmc
repz
cmc
cmc
and
icebp
icebp
sbb
fcmovnu
or
mov
int
mov
add
mov
sarl
mov
xchg
stos
jne
ljmp
mov
sarb
test
mov
pushf
lret
ret
int
lret
jp
int3
into
addr16
rcll
rcl
dec
aad
aad
rcl
aad
fcmovu
daa
ficompl
fcoml
fsubp
loop
in
out
jmp
in
icebp
out
add
cld
cmc
add
cld
add
incb
std
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandw
enter
int3
leave
daa
int
iret
and
rcrl
rcl
rcll
rcl
rorl
aam
push
aam
fadds
add
in
add
in
jmp
lret
fcom
add
std
incl
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
leave
enter
leave
add
int
add
aad
add
fcom
add
fcom
add
xlat
add
aam
add
fsub
add
aad
add
loopne
add
add
out
add
icebp
repnz
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
ret
ret
mov
mov
mov
test
stos
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
aam
cmc
rcl
sar
into
rcl
cli
int
lret
stc
int3
lret
lret
mov
mov
lods
lods
stos
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
into
into
aad
call
aad
call
rcl
dec
into
int
int3
int3
int3
inc
mov
mov
stos
stos
lods
icebp
cwtl
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
je
jne
gs
dec
inc
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
int3
call
rcl
call
aam
dec
lret
lret
inc
mov
pushl
test
popf
xchg
cwtl
xchg
jmp
outsl
jno
adc
add
xor
add
add
add
add
cmpb
jl
jl
test
jp
push
imul
push
push
stos
push
push
insl
insb
insl
push
pop
pop
cmp
aaa
aaa
pop
outsl
jo
adc
mov
fstpt
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cltd
fcoml
addl
jmp
jns
sarb
jp
jns
jp
je
je
push
push
push
cmp
jne
pushf
pushf
sahf
mov
scas
scas
repz
scas
scas
sti
scas
scas
scas
std
test
popf
popf
call
test
call
mov
lods
jmp
scas
lods
leave
cmpsb
movsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
insl
outsl
pop
nop
mov
mov
test
std
nop
nop
mov
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
cltd
lcall
lea
call
popf
popf
ljmp
scas
std
mov
scas
mov
xlat
cmpsl
mov
addl
add
add
pusha
pop
pop
or
lods
mov
cmpsb
sahf
movsl
decl
lea
call
sahf
mov
negl
cmpb
push
push
jo
push
push
outsl
insb
outsl
outsb
xchg
subl
nop
xchg
lock
mov
lcall
mov
mov
xchg
mov
mov
jge
mov
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
movsb
test
nop
xchg
call
cwtl
xchg
lcall
lcall
pushf
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
pop
jg
sahf
dec
jl
movsl
inc
jp
scas
aaa
ja
scas
sub
pop
outsb
ljmp
sbb
pop
mov
scas
scas
jle
movsl
movsb
push
popa
popa
pop
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addl
cld
xchg
popa
test
xchg
dec
jns
nop
cmp
xchg
daa
imul
cltd
maxps
lahf
punpckldq
test
imul
mov
outsb
pushl
pop
jb
mov
pop
nop
mov
scas
scas
xchg
sahf
popf
lahf
adc
add
add
pusha
pusha
popa
or
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
cwtl
decl
cmp
mov
arpl
mov
pop
incl
add
call
add
pushf
add
or
pushl
jl,pn
shrl
inc
xor
enter
leave
xor
xchg
inc
stos
mov
mov
mov
test
test
add
add
add
pop
or
movsl
test
jmp
mov
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
push
decl
add
mov
add
mov
insb
inc
cmp
iret
inc
mov
roll
inc
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
add
add
add
pop
or
popf
mov
ljmp
mov
pushl
mov
test
decl
sbb
mov
pop
decl
add
sahf
add
cmpsl
add
scas
add
jne
rorb
fcoms
fistpl
jmp
pop
lahf
jmp
pop
mov
jmp
insl
cmpsl
dec
test
cld
mov
mov
movsl
lods
movsl
xor
jg
add
add
dec
dec
dec
pop
jge
jl
pushf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
xchg
add
popf
add
cmpsl
add
mov
pushl
xor
jmp
insl
stos
jmp
jo
jmp
jb
out
jno
call
test
std
mov
cmpsl
test
addl
dec
pop
insl
insl
push
mov
cwtl
pushl
mov
mov
mov
jne
lcall
ja
sahf
sub
xchg
or
lcall
pop
ljmp
fs
or
dec
xchg
jmp
jns
ljmp
push
xchg
push
mov
fldcw
mov
push
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
ret
mov
mov
test
sub
fwait
pop
pop
jmp
add
mov
arpl
mov
adc
fistps
in
pop
push
xchg
push
xchg
push
cwtl
clc
cltd
enter
lret
xchg
jmp
lods
inc
mov
lods
popa
lahf
lahf
mov
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
cmpsl
jmp
dec
cmp
pop
push
lahf
add
pop
pushl
add
lret
add
and
push
movsb
int
clc
test
cli
stos
iret
cli
test
iret
cld
stos
sar
cli
cmpsb
int
call
rol
stos
stos
stos
jne
popf
sahf
or
add
add
push
dec
push
aaa
je
jae
test
int
out
int
cmc
lret
sti
enter
enter
mov
mov
stos
bound
mov
add
mov
fs
add
iret
add
fiaddl
push
xchg
mov
std
mov
cld
mov
sti
mov
fcos
sti
mov
enter
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loop
fsubp
loope
fcmovnu
fcmovnb
aam
xlat
out
shlb
test
or
mov
arpl
mov
add
add
or
push
mov
std
ret
loop
inc
loopne
std
loopne
dec
fdivrp
dec
loopne
dec
loopne
sti
fdivr
out
mov
lret
mov
xchg
pushf
popf
sahf
sbb
add
add
std
incl
std
std
std
add
jmp
or
out
out
sbb
in
in
xor
loop
loop
mov
mov
mov
add
pushl
add
iret
add
fildl
je
jmp
outsb
mov
cld
ret
sti
shl
shl
std
shl
call
in
std
out
fsub
aam
push
enter
int
stc
mov
mov
add
std
std
add
incl
std
std
cld
pop
aad
push
mov
pop
xchg
lahf
or
test
pop
pushl
add
roll
outsl
fiadds
ja
in
and
std
shl
std
fldpi
std
cld
fsubr
cld
fsub
sti
xlat
out
std
fsub
sti
aam
push
enter
iret
aad
mov
sahf
sahf
das
add
add
int
int
mov
bound
ljmp
add
enter
roll
jno
loopne
ja
out
das
xchg
stc
pushf
leave
cli
int3
loope
cli
leave
cmc
hlt
aad
icebp
ret
out
ret
out
vpsubw
jmp
shl
in
fsubrp
mov
stos
das
std
std
add
add
add
aam
push
mov
jb
or
insb
inc
pop
jb
lret
and
xlat
sub
sti
fists
loop
mov
out
in
leave
jmp
fdivrl
leave
ffreep
sarb
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
ror
aam
lret
insl
ror
into
pop
aam
rorl
fcomp
cmp
fnstsw
das
in
fisubs
jecxz
lock
jmp
or
std
std
add
add
add
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
ret
leave
enter
rcll
rol
adc
rcl
or
loope
or
int
add
std
incb
incl
fwait
fwait
cltd
add
vshufps
int3
int
stos
lods
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
mov
xchg
leave
enter
mov
mov
scas
scas
mov
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aam
aad
rcl
sar
iret
iret
iret
std
mov
stc
mov
mov
cmpsl
test
sarl
gs
push
sbb
add
add
add
add
add
add
add
add
jno
jae
pushw
inc
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int
call
aam
dec
int
dec
mov
mov
lods
lods
lcall
mov
push
add
add
add
add
jne
jne
xchg
adc
outsb
outsb
ret
bound
outsb
outsl
outsl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jae
daa
daa
daa
das
add
add
add
add
jae
je
fwait
xchg
fwait
mov
test
xchg
xchg
test
addl
push
dec
dec
inc
mov
pushf
into
movsb
mov
mov
decb
lcall
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
mov
test
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
lcall
mov
push
push
imul
jg
mov
xchg
testl
mov
mov
xchg
mov
stos
mov
test
lods
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
fwait
lcall
fwait
lcall
mov
loope
jbe
out
xchg
bound
std
pushf
inc
jbe
cmpsb
ss
scas
sub
pushl
sbb
mov
jge
mov
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
lahf
pushf
popf
jmp
movsb
movsb
call
imul
xchg
inc
jae
mov
imul
sbb
call
or
mov
sbb
je
mov
sub
lds
xchg
rcrb
subl
je
push
mov
mov
cmpsb
ljmp
mov
jmp
sub
decl
or
mov
decl
add
mov
adc
shll
call
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
lahf
movsl
cld
scas
lods
lods
pushl
mov
ljmp
cmp
xchg
push
decl
push
push
call
add
lods
add
mov
push
xchg
fistpl
fistps
jmp
popa
mov
call
fwait
mov
mov
mov
cmpsl
cmpsl
cmpsl
pop
add
add
arpl
adc
pushf
lcall
mov
mov
mov
popf
dec
jge
popf
xor
lcall
lcall
add
mov
xor
call
jl
out
jge
out
jge
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
arpl
lcall
add
test
pop
pushl
insl
fmull
in
lea
push
xchg
push
cwtl
enter
enter
mov
cmpsb
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
cld
rol
inc
ret
inc
mov
cwtl
ljmp
pop
jmp
pushl
add
adc
in
insl
lods
push
cmpsb
into
cli
stos
sar
cli
scas
sar
cld
scas
sar
cld
scas
sar
ljmp
fldenv
incb
xor
xor
mov
mov
rcl
mov
aad
fnop
aam
out
lret
cli
mov
mov
jmp
fs
add
aad
jno
out
test
stc
mov
cld
mov
inc
fdivr
std
ret
cld
ret
lock
ret
test
addb
add
add
in
in
or
out
jmp
outsb
fcomp
fldenv
movsb
daa
outsl
ljmp
add
lret
fldl
jbe
lock
xchg
cli
mov
dec
in
call
in
call
out
aad
aad
push
enter
enter
scas
scas
popa
jg
jg
incb
std
incl
int
shrb
sahf
sbb
lods
add
mov
add
loope
jp
cmc
push
movsl
inc
loope
call
cld
aam
sti
aam
sti
aam
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
push
gs
mov
or
jg
jmp
stos
cld
lock
aam
call
ror
call
leave
aam
ljmp
scas
push
cltd
fwait
cltd
add
rol
or
sahf
lods
xchg
dec
and
push
mov
shlb
lret
mov
xlat
mov
int3
adc
int3
outsl
fxch
rcrb
rcl
dec
jecxz
fistpll
out
out
in
out
out
sbb
mov
mov
scas
arpl
lods
mov
ret
cs
mov
int
fisttpll
int
int
aam
aad
std
add
jg
std
add
add
add
rol
std
incl
std
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
int
and
mov
loopne
add
push
clc
popf
jmp
ja
jl
imul
flds
dec
mov
mov
fwait
data16
in
jecxz
addr16
arpl
subb
xchg
mov
lret
or
jge
mov
imul
jge
rolb
cmp
lret
imul
jle
cmovs
bound
jmp
and
xchg
mov
add
ret
xlat
push
jecxz
push
add
adc
cmpb
cli
adc
xchg
adc
mov
test
mov
cmp
out
add
ja
clc
push
addr16
nop
loop
dec
pop
in
xor
or
imul
stc
pop
sub
ss
and
test
pop
cmp
push
add
jo
mov
ret
adc
inc
loopne
or
jno
mov
push
xor
les
into
arpl
and
fstpt
cmp
mov
mov
das
gs
jg
loopne
inc
lock
daa
popl
pop
ret
ds
loop
daa
pop
cld
cmp
dec
or
xchg
and
out
icebp
clc
mov
roll
lds
bound
push
pop
stos
rolb
cmpsb
aam
xchg
mov
ljmp
dec
repz
outsl
insl
cltd
roll
mov
into
fs
pop
idivb
test
aaa
inc
adc
flds
cmp
dec
cmp
in
pushf
scas
sbb
scas
push
inc
and
jns
mov
mov
popf
sbb
push
iret
loopne
xchg
mov
hlt
stos
inc
lds
pop
rorb
sub
xchg
pop
call
adc
aaa
xchg
inc
or
push
cmp
mov
adc
movsb
addr16
ds
jmp
add
imul
push
dec
cmp
cmp
movsb
add
fisubs
lcall
rcll
sbb
and
xor
and
add
stc
or
adc
push
xor
repz
pop
shrl
enter
rcl
inc
shll
stos
xchg
or
insl
mov
dec
outsb
inc
mov
sbb
sbb
cmp
ja
arpl
les
and
sbb
inc
or
inc
jae
push
jl
fcompl
scas
xor
add
scas
test
int
sub
inc
or
fs
or
ljmp
pop
fdivr
ret
pusha
jae
mov
lds
dec
xor
mov
cmpl
out
cs
cli
fs
out
jns
imul
movsl
int3
jnp
or
push
pop
push
subb
je
ss
or
fildll
sbb
movsb
cmpsl
dec
test
out
mov
js
daa
fs
pop
imul
test
orl
fwait
cmp
cmp
ret
or
lock
cltd
in
js
push
cli
inc
insb
nop
cmp
xchg
in
pop
loop
mov
orb
and
mov
xchg
cmc
mov
ds
dec
adc
inc
lret
xchg
pusha
test
xchg
sub
hlt
sub
ret
out
inc
lret
rol
clc
pop
sahf
xchg
sub
add
ret
pop
push
decb
fidivs
and
pop
shll
jbe
inc
mov
xchg
sub
cld
rclb
outsl
js
mov
clc
loopne
int
cmp
and
inc
stc
hlt
push
xchg
ds
lds
xchg
push
out
repz
sub
loope
fcomps
adc
push
stc
sub
insb
cmp
fdivs
jbe,pn
dec
shlb
in
fists
cwtl
clc
lret
test
sub
in
popa
in
push
hlt
loopne
call
cmp
dec
push
jae
dec
or
imul
in
mov
sbb
int3
fs
lahf
ljmp
mov
pop
sbb
sub
push
push
xor
fidivl
fistpll
aad
test
xchg
and
add
cwtl
sbb
and
push
xchg
or
in
fsts
stc
inc
inc
add
iret
mov
iret
add
pop
jp
insb
jle
xor
jno
in
pop
cmp
flds
push
xor
sahf
xor
xor
ficoml
add
in
inc
mov
out
mov
es
aad
jae
xchg
loope
inc
jge
xchg
sub
lds
cmp
pand
lret
inc
pop
je
xor
out
pop
ja
sbb
repz
mov
les
sub
jecxz
mov
loop
pop
lods
loope
lahf
sarb
jecxz
arpl
push
xor
add
arpl
xorl
repnz
xor
ja
cltd
loopne
push
cmp
loopne
inc
inc
dec
cs
cltd
or
sbb
movsl
adc
and
loope
cmp
add
fwait
shlb
les
cmp
xor
xorb
pop
popa
fldcw
stos
test
mov
lret
pop
mov
stos
hlt
retw
andl
pop
loop
scas
mov
repnz
in
add
mov
and
adc
sbb
rolb
fistpll
cmc
push
mov
sbb
movsl
ja
outsl
outsl
or
stos
nop
inc
inc
jnp
inc
aaa
dec
sahf
cmp
hlt
js
inc
push
mov
pop
pop
push
sbb
pop
bound
mov
mov
outsb
ficoml
decb
cmp
or
add
adc
cmpsb
jl
fs
xor
aas
shlb
or
cmp
mov
ret
test
lcall
dec
loopne
lock
fcmovbe
pop
negl
ret
jo
jb
arpl
jae
jg
mov
add
lret
jp
std
testb
push
dec
movsl
cmp
jb
dec
movsb
pushf
ret
pop
into
vpunpcklqdq
out
loope
and
hlt
mov
inc
call
imul
sub
jmp
mov
adc
shrl
nop
leave
pusha
ret
mov
out
adc
ss
testb
jecxz
fiaddl
push
fsubs
test
lret
cld
jle
ja
sbb
xchg
add
push
mov
jle
scas
sub
dec
in
adcb
and
push
shlb
pop
jne
movsl
mov
gs
xchg
xchg
fwait
xor
mov
mov
mov
aaa
xlat
mov
dec
daa
dec
or
mov
insl
pop
sub
je
jg
mov
rclb
test
hlt
mov
jo
in
xchg
xchg
fwait
xor
mov
cltd
out
mov
mov
push
mov
mov
fcoml
or
outsb
add
push
rolb
cmpsb
adc
inc
stc
gs
sbb
popa
dec
mov
repz
or
xchg
cmp
push
popf
repnz
sbb
inc
lods
aaa
into
fisubs
fsts
mov
je
orl
push
mov
ficomps
mov
or
mov
inc
jns
rcrb
test
enter
cmp
es
sbb
nop
sub
insl
mov
jle
lds
xchg
sbb
xchg
sbb
jae
lret
movsb
push
in
cmp
push
jmp
mov
jno
dec
stos
and
pushf
std
ds
mov
pop
repz
arpl
jp
shll
xchg
hlt
cwtl
das
es
mov
jns
daa
mov
int3
pop
inc
fmull
scas
arpl
loopne
adc
xor
mov
jecxz
test
push
fidivl
push
push
mov
xchg
sbb
cmp
shll
les
hlt
xor
and
inc
dec
out
sbb
jnp
cwtl
xor
leave
insb
add
sbb
xor
cmp
push
outsb
outsl
jle
mov
ret
cmc
jecxz
inc
adc
mov
imul
mov
add
cli
in
jecxz
mov
cmp
sub
push
xor
mov
dec
in
fbld
push
add
add
sub
and
lods
lods
inc
loope
lahf
xor
add
pusha
xor
mov
orb
or
fyl2xp1
sub
sub
push
mov
dec
dec
fisttps
stos
inc
xchg
jo
int3
clc
xchg
aad
jne
cmp
mov
and
dec
ret
pop
jnp
scas
inc
loopne
shrb
pop
addr16
jbe
jl
cmpsb
xchg
out
test
lds
lods
mov
fidivrs
pop
cmc
jp
out
xchg
sub
jg
mov
mov
shl
mov
or
pop
jb
cmc
fs
repnz
sbb
pop
dec
dec
loope
cmp
jg
pop
pop
sahf
mov
mov
fsubrl
adc
fidivl
and
sub
leave
push
jno
mov
imul
pop
in
test
mov
mov
xlat
mov
mov
push
mov
lcall
sbb
sbb
xchg
movsb
cmp
in
testl
in
cmp
outsb
push
lods
inc
jns
lcall
fsubrl
cmp
sub
idivl
lcall
sub
sti
iret
cmp
fcoms
inc
ljmp
fs
test
dec
int3
ljmp
popa
pop
inc
stos
pusha
fstpt
out
sub
popf
add
sbb
daa
inc
inc
push
stos
and
enter
xor
adc
ljmp
adc
cmp
xchg
fmul
sub
push
sti
xor
in
dec
mov
mulb
cmp
hlt
mov
jns
inc
stos
sub
mov
int3
fnstenv
jle
shrl
pop
hlt
add
lahf
movsb
and
push
lds
mov
xchg
push
jmp
dec
dec
adc
pop
cli
fcmovne
arpl
repnz
rorl
es
xchg
pop
cld
lds
iret
pop
lods
imul
push
lock
imul
jo
mov
sub
cwtl
das
sti
dec
imul
jns
int
dec
lcall
push
xor
pop
dec
movsb
sub
inc
dec
sbb
mov
and
jecxz
pop
inc
cmp
cmp
loope
pop
pop
and
cmp
pop
ret
pop
cmp
mov
fs
out
test
fsubs
test
fcoml
pop
scas
jae
rclb
jns
mov
pop
shlb
dec
and
push
fisubl
mov
dec
movsb
icebp
lea
vsubpd
in
stos
dec
or
jecxz
lds
or
sub
loope
adc
mov
popf
fsubrl
sbb
cs
movsb
cmp
push
jno
movsl
cmp
xchg
mov
add
mov
mov
es
push
rcrb
inc
xlat
adc
inc
fisubl
ss
fiaddl
addr16
sti
addr16
movb
scas
scas
xor
inc
iret
stc
shlb
lds
mov
mov
repz
lock
add
cmpsl
sbb
enter
dec
jmp
data16
dec
sub
cmp
pop
testb
sub
enter
ja
mov
or
or
add
pop
scas
and
jae
rol
pop
add
mov
scas
sbb
inc
jo
pop
fwait
add
das
dec
lret
cmp
imul
jne
push
inc
inc
add
pop
and
sub
mov
pop
filds
xchg
mov
push
inc
sbb
dec
add
mov
gs
mov
orb
inc
imul
scas
inc
pop
test
repnz
add
dec
popa
adc
xor
bound
jno
test
popf
mov
out
ljmp
das
cli
cmpsl
ds
push
movsl
arpl
das
mov
ret
xchg
sub
dec
or
ja
jns
dec
cwtl
sbbl
arpl
sti
jle
or
je
and
pop
adc
jb
inc
add
mov
mov
mov
outsl
cmp
les
pop
jge
dec
pop
fbstp
imul
pop
insb
jbe
pusha
add
hlt
xchg
lret
xchg
sub
push
ljmp
pop
mov
pop
mov
popf
cli
or
iret
mov
push
in
and
mov
test
fstpt
push
fwait
cmp
imul
push
stc
inc
fldlg2
cmp
pop
lods
sbb
cmpsb
fisttpl
lret
push
sub
pop
call
sub
fnstenv
insb
testb
vprotb
mov
cmpsb
adc
sbb
gs
cmp
jbe
add
push
xor
das
ja
in
sub
cmp
cmp
add
jne
pop
mov
pop
je
jnp
push
outsb
mov
inc
pushf
mov
mov
sub
jbe
sbbl
xor
out
jns
lea
xor
popf
cmp
pop
scas
dec
pop
jp
pop
dec
jae
sbbl
les
loope
scas
popa
dec
mov
add
mov
push
xchg
sub
pop
cmc
jge
into
gs
sahf
and
cmp
test
pop
into
gs
stc
nop
rclb
aaa
into
mov
filds
jmp
or
int
sbb
xchg
lods
mov
ret
cmp
shll
aaa
into
nop
repnz
enter
aam
in
faddl
es
xchg
sub
push
out
mov
fimuls
push
test
std
aaa
data16
stos
push
enter
xor
and
adc
lock
mov
sub
dec
push
mov
inc
xor
sbb
jno
in
xor
aaa
push
scas
inc
imul
mov
and
mov
imul
mov
xchg
daa
mov
inc
rep
add
test
popa
or
loope,pn
push
or
test
int3
out
test
or
cmp
or
push
push
xchg
sub
cs
sahf
sbbl
outsb
mov
push
cli
sbb
ret
mov
sub
insl
jno
pop
test
and
xchg
sub
inc
scas
mov
push
pop
dec
in
pop
add
nop
scas
outsl
push
pop
xor
mov
mov
pop
add
dec
fdivl
popa
jno
cs
popa
jne
and
jbe
jmp
mov
adc
rcll
mov
faddl
and
xchg
mov
cmp
cmpsl
stos
pop
repz
push
mov
sub
cwtl
pushf
push
stc
nop
inc
aaa
sbb
shll
xor
xchg
jns
out
cmp
subb
mov
ss
xor
xor
inc
pop
mov
add
sahf
xor
sub
ljmp
es
add
test
mov
std
ja
loope
push
mov
stos
xor
test
cld
push
xor
insl
sbb
xor
sbb
fwait
xor
cmp
push
mov
into
sub
inc
fldt
ret
pop
pop
mov
push
cmpl
pop
outsl
jae
stc
inc
nop
mov
push
gs
mov
aaa
stos
inc
imul
inc
sub
fmuls
pop
jle
pop
idivb
pop
sbb
push
mov
and
sbb
inc
jnp
rolb
popf
ljmp
or
imul
sub
sbbl
dec
xchg
idivb
xchg
dec
pop
jge
stos
insb
imul
int3
xchg
fists
nop
push
add
xchg
ja
push
dec
mov
mov
add
fnsave
jmp
adc
jne
cmp
xor
jno
aam
scas
xchg
pop
sbb
mov
dec
mov
pushf
xor
mov
lods
inc
mov
shll
xor
jmp
iret
push
lds
or
add
es
inc
jns
or
dec
int3
out
ret
ret
cmp
sub
mov
enter
jnp
mov
setge
sub
cli
xchg
xor
push
sub
cwtl
into
add
push
and
jb
adc
mov
push
in
cld
xor
int
sbb
push
jmp
outsl
pop
repz
adc
mov
insl
push
mov
int
repnz
loopne
inc
adc
pop
icebp
push
xor
pop
gs
or
xchg
imul
add
pop
sbb
xchg
cmp
aad
cmp
mov
insl
and
lahf
push
xchg
adc
xchg
or
mov
or
daa
mov
movsl
mov
popf
test
mov
mov
insl
rclb
cli
lods
push
pusha
les
cmp
cmc
cmp
adc
arpl
add
dec
popf
test
adc
mov
or
lahf
cmp
push
fldl
pop
mov
inc
fmuls
cltd
ljmp
mov
cmp
jl
or
dec
mul
je
push
scas
insb
insl
mov
pop
fpatan
in
negb
add
gs
mov
add
scas
xchg
and
mov
fcoml
mov
mov
mov
xor
inc
mov
ja
aaa
fadd
and
and
inc
faddl
out
out
and
idivl
mov
cmp
push
lret
mov
lods
dec
imul
jne
jo
xchg
mov
dec
mov
inc
lcall
test
aam
pop
mov
icebp
cmp
adcb
sub
sub
xchg
xchg
sub
cld
adc
and
push
cwtl
mov
xorb
jns
ss
popa
clc
test
lods
pop
sbb
xor
hlt
fisubl
lds
pop
push
in
cmp
add
jecxz
push
movsl
jbe
mov
xlat
xchg
mov
pop
mov
notb
xchg
cs
ja
int3
lock
or
inc
fwait
xor
or
jae
jl
jne
add
int
or
mov
cmp
push
mov
jge
out
lret
inc
mov
mov
or
and
ret
mov
mov
addr16
jno
popa
jae
lock
or
leave
mov
lock
inc
mov
pop
dec
movsb
push
inc
pop
ret
cmp
addb
or
sarb
fwait
inc
add
imul
sub
je
incl
mov
jmp
fnstenv
or
je
cmpsl
repz
xchg
loopne
lds
loope
out
hlt
jbe
insl
repz
aaa
xchg
insb
test
push
mov
inc
jno
cwtl
popf
mov
sub
xchg
lea
out
movsb
arpl
iret
data16
enter
lcall
lock
sub
mov
dec
jp
cltd
add
lods
test
mov
mov
ja
add
push
xor
popa
mov
cmp
mov
jae
pop
adc
movsb
pop
mov
push
ret
out
imul
gs
adc
gs
inc
inc
push
cmpsb
ja
push
add
mov
dec
sub
loop
mov
addr16
xchg
jg
mov
enter
fisttpl
add
mov
mov
fwait
and
dec
cs
flds
mov
xor
popa
and
std
mov
push
add
or
cmp
adc
test
xchg
jne
xor
jbe
out
sbb
test
cmp
jge
pop
lret
sub
mov
add
xor
icebp
sub
arpl
sbb
int3
out
pushf
repz
data16
cld
push
mov
mov
dec
enter
ret
lds
jno
loop
jno
pop
iret
sub
scas
add
adc
xchg
ljmp
imulb
or
fmul
in
xchg
data16
stos
adc
out
jl
addr16
jl
int3
andl
or
sub
decl
mov
push
shll
movsb
pop
jmp
neg
aaa
mov
cmp
jecxz
movsl
cmp
aas
jb
adc
jl
mov
sbb
arpl
and
cltd
add
jnp
push
icebp
in
in
dec
push
pushl
enter
push
xchg
or
xchg
sbb
jl
push
mov
jne
ja
and
mov
sub
je
xor
sub
pop
push
jge
stos
xchg
mov
dec
sbb
gs
repz
shrl
js
stos
shlb
mov
mov
test
jg
xchg
mov
mov
je
fwait
shl
std
xchg
mov
arpl
dec
adc
mov
add
mov
shlb
scas
mov
psrlq
add
adc
mov
cs
sahf
aam
inc
jno
xchg
hlt
fcoms
pop
out
fcmovnbe
lock
and
xor
data16
cli
orl
and
shrb
ds
xchg
or
xchg
cmp
push
bound
dec
andnps
lcall
xchg
clc
fldt
mov
adc
push
mov
push
push
bound
sbb
jg
pop
pusha
xchg
cwtl
mov
lret
inc
pop
rolb
and
rorl
clc
roll
shlb
or
aas
movsl
sub
adc
pushf
adcl
add
enter
sub
pop
mov
in
sub
or
decb
fimull
lahf
push
js
cwtl
shlb
jne
mov
mov
jo
cmc
and
mov
cwtl
lods
fisttps
stc
adc
lahf
jl
insl
add
fidivl
xchg
imul
repnz
loope
sub
dec
loop
mov
add
dec
fidivs
ss
into
lods
xchg
add
pop
adc
mov
xchg
je
fbld
movsb
pop
xchg
mov
cmp
jnp
cmp
push
mov
sub
inc
lahf
xchg
movsb
sbb
jmp
jb
jmp
mov
mov
ss
popf
clc
test
hlt
adc
fchs
xchg
and
cmp
dec
xchg
mov
and
pop
lret
pop
in
imul
in
add
stc
nop
in
loop
or
loop
mov
cltd
mov
test
ret
and
push
adc
call
int
push
lahf
sub
mov
cmpl
fmuls
xchg
lods
fsubs
stos
out
mov
xchg
sub
mov
push
mov
adc
xor
xchg
out
push
stc
dec
scas
xchg
dec
mov
sub
outsl
icebp
mov
rcll
cmp
sub
addr16
faddl
pop
pop
mov
ss
push
nop
daa
addb
sbb
cmp
shlb
mov
iret
push
xchg
xchg
mov
adc
cli
mov
jns
add
push
out
test
mov
pop
pusha
jg
iret
mov
push
cmp
pop
xor
or
gs
add
in
push
mov
inc
mov
mov
or
cmp
xor
sub
data16
pop
dec
outsb
clc
ret
inc
push
jns
add
movsb
shlb
imul
out
mov
xor
out
rclb
in
dec
xchg
jl,pn
inc
fnsave
jecxz
jno
bound
subl
fwait
movsb
repz
aad
test
dec
notb
xor
push
jae
bound
mov
sbb
lret
call
les
mov
xchg
jle
mov
lret
fsts
lds
cli
pop
shrl
outsl
cmp
and
imul
push
iret
das
lods
dec
add
addr16
cmp
adc
and
lcall
imul
dec
adc
fistpl
pop
mov
xor
push
push
push
push
outsb
int
add
int3
repz
add
pop
xor
in
jno
pusha
sub
repnz
jg
aas
pop
shl
out
mov
mov
fdivl
hlt
cld
movsl
push
pop
sbb
dec
pop
push
mov
xchg
shlb
sti
jmp
sub
cmp
int
add
pushf
dec
addr16
cwtl
insb
or
aam
or
lock
movsl
cmp
push
mov
lea
dec
jbe
pop
int3
rcrl
push
sub
sbb
aaa
gs
jle
lret
inc
adc
cmp
sahf
test
outsl
push
rcl
fdiv
call
fldcw
rcll
out
mov
fists
adc
ds
aas
xor
dec
sub
ret
inc
lahf
jnp
roll
pusha
pop
sbb
dec
sbb
aad
enter
orl
or
jbe
sub
jae
cmp
daa
mov
test
divl
dec
add
push
push
jl
adc
jbe
pop
enter
scas
bound
cmp
gs
movsl
push
xchg
xor
out
dec
inc
dec
insl
psubd
jb
xor
andl
gs
dec
adc
lods
test
pop
mov
jae
or
jl
and
ss
lods
mov
lods
xlat
mov
stos
stos
mov
inc
pusha
rclb
movb
dec
inc
jb
gs
jle
mov
dec
pop
test
push
jbe
loop
lret
adc
std
shll
fadds
add
jne
stos
lods
pop
push
stos
mov
setae
inc
and
xchg
push
cmpsb
push
xchg
test
cmc
xor
aaa
or
stos
cs
cmp
je
pop
xor
inc
push
sbb
cmp
outsb
xlat
jl
jg
jle
aad
inc
out
mov
popf
dec
loop
cmp
sub
pop
hlt
aad
push
jg
stos
sub
push
and
lahf
loop
les
popa
scas
scas
inc
loope
mov
and
sbb
daa
dec
dec
mov
xorb
pushf
mov
adc
mov
ss
cmp
in
inc
lods
jne
push
das
inc
pop
lock
in
push
xor
cmp
push
push
aad
mov
aam
add
xor
add
cmp
push
cmpsl
pop
hlt
fcoms
or
add
ljmp
pop
inc
dec
add
das
rol
and
fbstp
inc
xlat
mov
loopne
out
xor
adc
sub
fstpl
lcall
push
cmp
and
xchg
in
sbb
xchg
mov
mov
pop
pop
fsubs
jecxz
lods
gs
mov
fmul
mov
cmp
pop
shlb
data16
fistl
cmp
pop
mov
fisttpl
fbld
insl
xlat
and
xchg
fstp
xchg
jns
lret
out
or
pop
in
push
call
adc
lods
cli
push
fsub
lods
jne
and
and
mov
pop
push
rcr
jbe
shrl
in
in
stos
mov
nop
lock
mov
jbe
fisttps
int3
hlt
daa
and
sub
lcall
jmp
pop
clc
mov
cmpl
sub
bound
roll
mov
jno
jle
xor
int3
xchg
int
jae
lods
ret
mov
andl
js
pop
and
aam
inc
push
test
leave
sub
pop
loopew
adc
mov
outsl
mov
popf
and
shr
adc
inc
add
cs
sub
je
xor
cmp
mov
xor
cli
gs
cmp
pop
dec
ss
xchg
pop
testb
xor
sub
stc
je
loop
jne
repnz
rorb
movsb
loop
and
cwtd
lods
or
xchg
rcrl
inc
in
cmpsl
out
dec
inc
add
aam
pop
inc
dec
das
push
stos
inc
cmp
xor
dec
stos
divl
sbb
insl
xor
data16
cmp
lds
lea
orl
xor
not
nop
orb
dec
lock
jmp
cmc
mov
mov
sti
mov
mov
loope
call
bound
adc
aad
mov
mov
int
das
leave
mull
add
icebp
xchg
or
popf
push
lods
fwait
leave
xchg
mov
jg
leave
dec
sub
ss
js
aas
xor
xchg
mov
cmp
hlt
jl
or
sub
sbb
pop
cld
xchg
xchg
fdivl
lods
add
xchg
mov
adc
movl
mov
loop
rorb
movsl
sub
cwtl
sub
sbb
cmpsb
mov
es
push
shlb
aas
test
jo
xchg
push
clc
mov
sub
in
jbe
push
push
push
dec
outsl
in
mov
pop
sub
out
test
fs
or
cmc
int
stos
mov
aam
aas
dec
xchg
jo
jecxz
push
push
scas
scas
pop
add
fcom
clc
cmpsb
lods
arpl
out
pop
lea
xor
dec
iret
test
push
js
rsm
aaa
mov
ret
pushf
xor
jge
mov
pop
dec
push
push
jns
into
mov
fists
push
les
pop
aam
ret
push
pop
sbb
mov
push
loope
xlat
jle
or
mov
ss
add
cs
ja
push
jno
sub
scas
mov
nop
stos
loope
push
popf
movsb
fisubrl
popa
xor
add
xor
cltd
ret
shlb
mov
sub
inc
cld
xchg
ja
neg
mov
scas
aam
and
in
add
jnp
lods
sub
insb
and
cmp
icebp
lds
loope
sbb
in
popf
jmp
repnz
adc
dec
or
xchg
mov
mov
clc
outsl
stos
push
das
movb
clc
or
out
test
ret
jecxz
xorb
icebp
pop
and
xor
sbb
cmp
insb
in
and
leave
pop
std
sbb
fldcw
aas
inc
mov
lods
into
mov
xchg
pop
out
enter
xchg
cmc
jns
add
daa
jg
fdivrs
mov
lret
mov
test
mov
mov
adc
js
shr
and
mov
test
aam
lret
xor
test
idivl
inc
jno
jae
addr16
jno
xor
je
add
xchg
jecxz
jp
in
out
mov
push
ss
cmp
scas
xlat
fnstenv
rcrb
and
mov
sbb
insl
stos
inc
lahf
mov
loope
mov
mov
pop
inc
arpl
push
and
rcll
cmp
pushf
stc
decl
in
jbe
lock
popa
and
inc
stos
mov
mov
repnz
movsl
cmp
jnp
int
clc
xor
dec
loopne
das
imul
mov
sbb
ds
shlb
adc
xchg
mov
and
jmp
ret
int3
sbb
aam
aam
mov
and
and
pop
mov
xchg
shlb
das
cltd
test
jmp
sub
testl
cmp
outsb
or
fnstenv
mov
lds
psllq
xorb
mov
mov
pusha
and
or
clc
enter
mov
push
push
dec
fbld
clc
push
add
mov
in
push
push
push
gs
test
into
cmp
jbe
fsubs
jmp
ret
cmp
icebp
mov
das
dec
xorb
ds
subl
push
fnstenv
cmp
into
mov
and
aaa
lock
pop
pop
insl
jmp
mov
loop
xor
imul
push
sbb
mov
xorl
inc
adc
dec
pop
push
jno
xchg
mov
inc
decb
sub
inc
xlat
movsl
icebp
xor
add
pop
jecxz
push
adc
fidivl
aam
push
pop
mov
cli
adc
xchg
mov
insb
add
mov
ds
dec
dec
loop
fbstp
add
xor
aas
lock
add
popa
pop
repz
inc
xchg
jne,pn
insb
add
xchg
rolb
jmp
add
dec
cmp
mov
pop
cmp
mov
scas
jg
ja
jmp
imul
mov
and
dec
mov
and
inc
stos
pop
ss
inc
jmp
mov
inc
mov
scas
inc
stos
test
nop
mov
test
jp
outsl
mov
or
add
dec
cltd
ret
adc
sbb
aam
mov
dec
cmc
mov
into
dec
xchg
jb
int3
xchg
mov
sub
mov
inc
mov
jb
ds
aaa
in
and
cmp
cmp
adc
insl
inc
sbb
jae
pop
mov
stos
or
cmp
adc
xchg
sub
sub
xor
xor
adc
movsl
aaa
mov
xchg
pop
neg
mov
dec
mov
and
ljmp
adc
add
and
jmp
pop
clc
stos
inc
in
cmp
popa
stos
sbb
jl
lds
ret
out
int
cs
loope
insl
and
xchg
sub
inc
fisttpll
stos
jne
add
out
push
inc
sti
xchg
cmp
popf
pop
or
cmp
mov
sbb
outsb
add
sbb
or
lcall
push
sbb
cmp
cmpsb
and
xchg
movsl
lcall
ds
lods
dec
cmpsl
ds
leave
loope
mov
rcl
mov
jmp
sub
cwtl
das
enter
push
jmp
adc
mov
gs
push
aam
push
jno
mov
cmc
mov
les
hlt
mov
ret
jns
inc
out
int
adc
shl
lret
mov
sti
sbb
imul
cmp
jne
mov
sub
std
xchg
shlb
addr16
das
stos
fidivrs
jle
lds
mov
movb
daa
pusha
das
xor
xor
pop
and
pushl
push
daa
push
repz
rcr
or
cmc
sbb
mov
sub
dec
popf
dec
ret
das
inc
dec
out
jge
jmp
dec
pop
and
insb
inc
pop
mov
pop
jne
mov
scas
jns
stc
rclb
add
cwtl
das
dec
and
push
outsb
mov
mov
rcl
repz
adc
mov
leave
pusha
dec
adc
out
mov
roll
addb
divl
insb
add
push
jle
xor
fcomip
insl
sbb
scas
pop
push
jo
inc
ja
ljmp
ret
pop
in
add
jge
les
movb
add
repnz
mov
xor
stos
jmp
dec
scas
cmp
stos
and
addr16
adcl
pop
mov
addr16
adc
lret
dec
push
inc
push
movsb
mov
sarb
fsubr
test
adc
jne
or
jae
sbb
jno
aaa
jb
inc
int3
push
add
test
jl
pop
cld
pusha
fndisi(8087
notb
cmp
arpl
cwtl
add
pop
ud1
xchg
pop
push
push
ret
pop
mov
sub
inc
movsl
lcall
adc
add
jo
push
or
xchg
divl
lcall
movsl
in
jmp
or
sarl
dec
and
jne
mov
outsl
mov
mov
jg
adc
arpl
or
cmpsl
out
popl
or
adc
cmp
mov
adc
fidivl
cmpsl
ds
pop
dec
or
jl
in
insb
push
insb
cmpsb
aam
xchg
xor
and
push
call
scas
mov
mov
or
xor
sub
faddl
lock
xchg
inc
adc
dec
fwait
std
cmp
inc
mov
jbe
mov
out
in
xor
jo
imul
int3
test
adc
inc
cmp
and
sub
adc
inc
jns
leave
es
int3
jecxz
rcrl
pusha
inc
push
popa
cmp
ret
push
cli
out
sub
pop
ds
loope
out
inc
sahf
ret
xchg
add
push
xchg
clc
popl
hlt
popa
sbb
lea
test
sbb
lahf
aas
sbb
cwtl
insb
cmp
enter
pop
ds
out
icebp
mov
xchg
es
js
dec
test
bndldx
lock
xchg
sub
pop
adc
cmp
out
aaa
dec
and
sbb
mov
inc
lock
arpl
testl
pop
push
pusha
adcb
outsl
addr16
cwtl
cwtl
mov
test
sbb
push
cltd
fnstcw
insl
repz
lds
dec
loope
test
test
mov
xor
xor
pop
mov
xchg
daa
jge
cltd
movsl
push
gs
mov
cwtl
stos
test
arpl
pushf
pop
and
adc
outsl
push
xchg
and
sahf
add
repnz
mov
jns
popa
xchg
in
pusha
leave
fldenv
jae
cs
mov
fdivs
jmp
xacquire
and
fildl
test
scas
popf
addl
add
shrl
sbb
jne
jp
mov
dec
imul
mov
insl
movsl
or
sbb
inc
hlt
mov
dec
cmp
push
in
call
fcoml
dec
mov
aad
sub
in
add
lret
dec
jo
ja
fmull
fld
int3
adc
add
cmp
popa
and
sub
lods
adc
mov
dec
pop
mov
adc
pushf
jge
jno
mov
mov
sub
ret
sahf
xchg
pop
xchg
loopne
dec
test
jmp
add
js
or
dec
pusha
stc
xchg
in
cli
xchg
mov
mov
adc
outsl
int
push
jge
mov
cmp
das
cmovs
cmp
xchg
rcrl
iret
icebp
xchg
sbb
mov
xchg
loope
icebp
movsl
mov
sahf
loope
inc
subb
sbb
fmuls
movsl
std
cli
ret
cmp
sbb
std
nop
es
ret
mov
addr16
jle
int
lods
ljmp
push
gs
inc
push
mov
push
lock
pop
jns
aad
lret
push
inc
cmpsb
imul
jns
xchg
cmpsb
fsubp
ja
inc
das
repnz
lods
jge
xchg
scas
xchg
adc
push
out
cmpsb
addl
leave
and
jae
lds
ja
mov
fucomip
sbb
sbb
inc
iret
push
scas
ja
xchg
mov
inc
fsubs
das
cmp
mov
push
push
mov
popf
push
cmp
iret
sarw
dec
pop
pop
mov
add
dec
scas
jnp
outsl
and
mov
int3
sub
mov
into
arpl
enter
ljmp
in
es
adc
insl
aad
sub
fadds
jno
pop
mov
and
and
ds
inc
int3
cmpsb
scas
sub
ret
sbb
ds
mov
xchg
adc
roll
jns
sarl
sub
and
sbb
lcall
pop
cmp
xchg
inc
fsubl
mov
adc
inc
std
inc
xor
popf
stc
inc
dec
cwtl
mov
jmp
adc
out
in
std
mov
out
ret
jp
pushf
popa
pop
out
mov
inc
jne
inc
test
ret
push
sub
add
fwait
pushf
imul
lcall
pop
icebp
out
pop
outsb
mov
mov
lcall
cmpsl
dec
mov
outsw
outsb
outsb
adc
sub
push
sbb
xchg
mov
test
fwait
shll
xchg
out
add
mov
lret
push
mov
adc
jo
popa
lcall
stc
out
cmp
rolb
inc
xchg
cmp
push
bound
xchg
push
in
sub
cltd
jo
and
push
xchg
testl
mov
push
lods
pop
xchg
push
imul
lods
or
daa
out
dec
pop
cmpsl
sti
jg
insl
aaa
mov
lret
xchg
jns
addb
adc
loope
movsb
mov
add
addb
fnstsw
pushf
sahf
adc
and
cmp
mov
pusha
and
xchg
aaa
or
cmp
sahf
repnz
insb
mov
xchg
ljmp
push
call
dec
shrb
pop
sub
shlb
fildll
mov
jmp
push
lods
mov
xor
jne
pop
lret
sbbl
scas
xor
loope
push
lods
shl
or
sub
adc
dec
lods
stos
repz
or
sbb
and
mov
je
xchg
xor
dec
mov
and
and
xchg
add
in
pop
mov
pop
jmp
test
sahf
or
mov
jmp
dec
and
lret
dec
popf
cmpb
pop
mov
shll
sbb
xlat
into
cld
or
test
dec
xor
push
std
insl
shrb
arpl
testb
call
loop
jecxz
scas
jb
mov
sarb
xchg
jno
rcl
pusha
lahf
mov
or
sarl
sti
stos
movsb
rorl
add
loope
sbb
dec
lret
pop
add
leave
es
mov
dec
push
xchg
dec
or
daa
push
sub
push
xchg
bnd
mov
mov
pop
pop
jns
ss
mov
into
gs
mov
in
jnp
test
mov
sahf
pop
inc
enter
dec
out
mov
xchg
pop
imul
pop
repnz
add
fisttpll
jo
inc
push
es
push
aaa
lea
pushf
and
inc
fucomp
add
xor
mov
ja
addl
dec
out
push
inc
xor
adc
scas
repnz
insl
mov
shrb
cmpsl
test
mov
shlb
or
push
mov
fs
aad
sbb
dec
scas
push
sub
cmp
cmp
inc
cmpsl
cmp
push
mov
popa
stc
push
sbb
dec
in
shl
jno
pop
xor
inc
sbb
dec
pop
std
aad
outsb
xchg
pop
xchg
mov
xchg
mov
pop
push
dec
jge
jecxz
pusha
pop
in
mov
mov
push
pop
andb
jae
pop
repnz
fprem1
aad
jns
xchg
add
xor
addl
adc
imulb
mov
mov
mov
add
nop
add
add
jg
imul
mov
inc
cs
push
xor
lcall
sub
mov
scas
hlt
adc
das
addr16
push
dec
cld
xchg
jg
add
lret
cltd
adc
fisubs
cmp
xor
xchg
cmp
add
inc
pop
js
or
mov
inc
repnz
mov
in
inc
mov
nop
mov
lret
mov
ret
cli
rorl
add
xor
mov
jmp
xchg
loopne
clc
cltd
fpatan
lret
imul
mov
loop
lahf
mov
dec
stos
repnz
decb
shr
adc
xorl
and
fnstenv
mov
aam
sub
cmpsl
cmp
and
mov
test
scas
push
jo
popf
pop
and
xor
sbb
shll
mov
loope
sbb
cltd
inc
roll
imul
adc
rcrl
out
jae
jo
xor
scas
icebp
sub
xor
jnp
xchg
cs
lds
pop
cmp
jle
test
cltd
sbb
mov
jmp
push
jno
mov
out
ss
jne
dec
cmp
dec
fs
lret
shll
jbe
imul
dec
movsl
sarl
fistps
lods
rol
or
es
push
xchg
push
push
or
inc
jmp
cmp
das
push
add
inc
jle
loop
movsb
push
aad
jecxz
shlb
mov
shlb
shll
lret
fxch
pop
adcl
jo
inc
mov
sub
insl
pushf
xor
adc
cmpsb
cmp
mov
aas
or
pop
cmp
pop
sub
inc
jp
mov
xor
jg
out
mov
inc
cmp
mov
inc
mov
insl
adc
outsl
das
add
jno
xor
inc
cltd
and
nop
pop
out
add
xchg
mov
out
mov
jnp
sbb
sbb
repz
scas
xor
scas
lds
pop
leave
jnp
xor
mov
subl
xlat
ror
jmp
inc
inc
sub
lods
out
xlat
cmp
ja
out
push
lods
adc
sbb
dec
or
leave
test
xchg
sub
push
jo
mov
insl
sahf
xchg
ljmp
jmp
cmp
popl
dec
ret
inc
mov
mov
jno
inc
jno
aaa
ss
test
pop
sub
dec
or
pop
xchg
sub
or
fsub
xchg
scas
adc
mov
insl
sub
sbb
mov
mov
loopne
mov
fs
sub
out
into
js
arpl
xchg
push
xor
icebp
cmp
arpl
into
xchg
test
mov
iret
pop
mov
inc
adc
inc
es
mov
jle
dec
xor
nop
mov
fwait
fwait
inc
popf
aaa
and
mov
add
sbb
arpl
lods
sub
mov
or
xor
jecxz
pmuludq
xchg
mov
xchg
add
push
mov
repnz
and
aas
dec
and
movsb
aas
cmc
mov
repz
aad
adc
rclb
jb
pop
or
push
jmp
rol
jp
cmp
mov
and
jmp
data16
sub
mov
cmc
rcl
jb
xlat
xchg
dec
roll
pop
cmc
lret
pushf
addl
sub
movsb
arpl
or
popfw
push
xor
call
mov
leave
fstps
std
bound
int
insb
sbb
dec
lea
push
ljmp
cltd
bound
pop
inc
clc
stos
cmp
inc
aaa
xlat
pop
lea
clc
mov
push
adc
dec
shrl
dec
leave
xor
push
mov
popl
cwtl
adc
jecxz
xor
push
js
mov
rol
mov
daa
mov
adc
inc
push
out
xor
hlt
bound
inc
loop
jl
cmp
or
ficomps
out
or
jle
mov
arpl
and
dec
loop
aaa
or
out
inc
cmp
cmp
cmp
aam
ljmp
out
sbb
push
cmpsb
les
xchg
call
add
sbb
push
and
pop
cli
inc
inc
pop
mov
loop
inc
sub
pop
add
mov
leave
call
sti
loop
mov
mov
cld
out
xor
orb
inc
loopne
pop
shrl
lcall
add
rcl
or
mov
aas
pop
dec
and
mov
nop
mov
les
xchg
inc
fs
pop
jno
fsubrl
dec
inc
inc
clc
ljmp
jo
imul
xor
les
fiadds
adc
subb
push
jne
mov
mov
mov
or
insl
pop
aaa
adc
imulb
add
shrl
dec
dec
icebp
daa
mov
push
stos
sub
fsubrs
insl
dec
in
jbe
pop
cltd
inc
xchg
xor
or
stos
test
xor
add
xchg
xor
stos
insl
and
scas
and
pusha
rorl
mov
pop
repz
sub
jl
mov
and
mov
mov
xchg
mov
xchg
xor
mov
outsb
sti
ds
add
xlat
jb
adc
lods
fsubrl
pop
ss
loopne
js
cmp
and
pop
icebp
add
loopne
mov
cmp
mov
mov
loopne
xor
scas
outsb
cmpsl
enter
push
ljmp
ret
cmpsl
adc
add
in
pop
and
movsb
jo
mov
notb
fidivl
subl
in
ljmp
mov
mov
test
sti
outsb
loope
pop
fmull
mov
push
add
enter
daa
dec
cltd
mov
adc
repz
adc
aas
sub
mov
sub
fldt
lds
fldenv
mulb
dec
dec
subb
fdivrp
xchg
inc
cmpsb
dec
and
xor
and
sbb
cmp
imul
jnp
jle
call
mov
fdivr
or
cmc
adc
fcmovnb
popa
xor
mov
jbe
cmpsb
pop
jne
jmp
shl
and
addl
scas
aad
loopne
sub
outsb
jp
mov
xlat
mov
pop
jle
xchg
pop
push
mov
popa
pop
shll
push
mov
cwtl
das
jge
jb
mov
push
in
test
jmp
lock
popl
dec
dec
mov
int
hlt
xor
cmp
pop
pop
xor
mov
int
sti
jb
mov
andb
push
add
aaa
loope
pop
or
aaa
pop
cmp
fwait
in
int3
test
xchg
pop
icebp
xor
and
mov
sbb
nop
shrb
mov
mov
pop
xlat
fcomi
or
add
add
outsl
mov
and
mov
xchg
ds
inc
cmp
inc
jnp
icebp
movsl
hlt
stos
insl
add
dec
jne
test
movsb
dec
mov
fildll
sbb
repnz
push
mov
mov
sti
sub
and
ja
inc
sub
imul
jne
mov
jnp
mov
daa
pop
or
dec
and
jg
inc
mov
ret
clc
sbb
int3
dec
add
mov
mov
jb
clc
adc
ror
push
or
aas
adc
mov
mov
dec
lock
sbbl
sbbl
or
test
push
add
cmpb
pusha
mov
stc
nop
dec
cli
or
jns
sub
stos
mov
fidivrs
sbbl
daa
and
cli
pushf
aaa
pop
xchg
aam
adc
out
mov
inc
mov
in
aad
pusha
mov
aas
or
inc
push
pop
push
lret
and
cld
int3
xorl
test
lock
cld
sub
xchg
inc
orl
dec
loope
jle
jge
cmpsl
call
and
push
rcrb
add
jle
fnsave
int3
fmul
mov
pop
xchg
jle
sub
push
mov
mov
mov
out
popa
pop
or
sarl
or
xor
mov
loopne
sub
imul
add
add
cmc
mov
outsb
and
push
cmp
stos
addl
inc
lock
pushf
dec
sbb
std
xor
mov
push
and
add
insl
fdivrp
and
push
mov
push
fsubs
lds
sarb
je
push
sub
xchg
cmc
rolb
add
ret
hlt
xor
hlt
js
jo
xchg
bound
mov
sti
adc
cli
ret
pushf
pop
rol
stos
add
push
pop
inc
pop
in
mov
mov
xchg
mov
pop
flds
stos
mov
divb
mov
fdivrl
pusha
and
leave
jmp
lods
xchg
ljmp
cltd
mov
xchg
dec
add
cmp
cli
pop
sub
pop
or
ds
pop
pushf
sub
movsl
jns
add
das
ss
out
cmp
jecxz
scas
clc
into
ficoms
or
adc
push
cmpsb
mov
pop
xor
mov
sbb
jl
leave
mov
inc
push
out
lods
fucomip
cmpsb
clc
outsb
sbb
shrl
push
jnp
iret
rcrb
leave
iret
jnp
push
push
mov
mov
aaa
dec
cmp
sbb
push
adc
cmpsl
mov
inc
out
fcompl
inc
bound
hlt
and
or
push
aaa
pop
or
cmpsl
push
sbb
jae
andl
dec
cmp
out
jge
out
cmp
cmp
clc
fists
cmc
std
push
or
sahf
sub
jno
or
test
movsl
gs
out
in
mov
ret
jae
shrl
mov
adc
xor
outsl
mov
out
lds
fnstenv
out
sub
inc
testl
loopne
stc
and
movsb
add
mov
daa
loop
stc
xchg
decb
lods
into
rcrl
mov
pop
les
jnp
int3
inc
pop
dec
stos
xor
rcll
loop
xchg
in
call
into
in
pusha
mov
fs
xchg
mov
loopne
rcl
scas
and
sub
mov
dec
loopne
ret
out
jmp
cmpb
rorb
jl
insb
in
mov
bound
sub
in
leave
bnd
jp
mov
and
incl
jg
add
inc
addl
mov
fistpll
ffree
fwait
in
shll
in
cmp
fistpll
cmp
xor
das
and
insl
adc
pusha
orl
sub
or
mov
sbb
out
dec
test
or
subl
adc
dec
addr16
icebp
inc
mov
and
flds
sub
in
sahf
mov
je
pop
pop
mulb
enter
dec
cs
inc
popa
loopne
dec
push
in
lahf
lret
enter
cmc
loope
ret
sub
push
sub
stos
push
frstor
iret
mov
jp
mov
mov
pop
add
lret
or
aaa
xchg
popf
xchg
cli
adc
jg
mov
aaa
sbb
mov
sti
out
xor
out
adc
je
mov
mov
xchg
loop
sar
aam
or
pop
int
xchg
int
and
sub
inc
out
out
fdivs
jbe
negb
mov
xchg
and
push
jbe
fptan
jns
arpl
inc
cmp
andl
pop
mov
or
push
testl
or
lret
sub
lock
mov
add
daa
mov
jne
outsb
mov
mov
mov
icebp
mov
ds
add
testl
jmp
sub
jmp
nop
adc
sarb
adc
xor
push
aas
out
jnp
pop
lock
mov
lahf
lods
rol
jo
cmp
jecxz
adc
add
sbb
push
sti
inc
shr
ret
pop
mov
dec
mov
or
mov
pop
sahf
mov
fcomi
out
sbb
fs
ss
push
loope
jns
rorl
enter
mov
loopne
pop
and
insl
nop
mov
negl
movsb
mov
sub
call
lock
mov
push
shll
outsl
div
mov
sahf
add
dec
inc
inc
push
aas
jmp
pop
pop
aad
or
cltd
or
out
push
inc
inc
js
loope
movsl
aam
jecxz
xchg
loopne
imul
mov
loope
and
or
and
lds
into
dec
outsb
clc
or
adc
pop
and
inc
pop
cs
cmp
and
cld
and
xor
inc
inc
mov
arpl
aad
shl
pop
sub
clc
aam
fnsave
jle
push
into
sti
or
cmp
fs
ds
adc
lods
fsubl
or
and
cmp
js
repz
bound
sbb
mov
mov
cltd
cmp
imul
sbb
fmulp
xor
daa
push
jne
mov
sub
repnz
pusha
and
xorl
pop
xchg
mov
negb
pop
xchg
add
subb
fcmovnu
or
sbb
hlt
fldenv
pusha
mov
fldcw
shlb
xchg
ret
or
clc
mov
int
pop
xchg
or
ret
or
in
push
mov
nop
mov
xchg
shll
dec
or
cs
jnp
xor
push
incl
dec
in
addr16
out
sub
insl
mov
addr16
mov
inc
push
push
inc
xor
inc
sahf
push
aaa
fcoml
xchg
imul
mov
les
cmp
fiadds
cld
dec
jge
jl
pop
xchg
mov
fsubrs
xchg
push
popf
sub
jae
inc
pushf
push
loope
and
adc
lret
fildll
aaa
scas
push
rorb
sarl
imulb
lods
fmull
idivl
inc
xchg
aam
fucomi
mov
adc
int3
mov
shrl
fbld
xchg
xchg
in
loopne
mov
xor
pop
xchg
pop
jnp
and
adc
inc
dec
shr
lea
or
and
mov
repnz
jmp
xchg
xchg
call
mov
cmp
stc
mov
or
adc
es
arpl
add
mulb
mov
push
fiaddl
push
into
aas
std
push
cli
cmc
data16
push
pop
sbbb
imul
push
xchg
out
sub
incb
inc
add
pop
lcall
pop
xor
cld
inc
or
inc
mov
xor
xchg
adc
jno
cmp
pop
loope
int
mov
pop
test
insb
dec
cmp
lcall
or
sahf
dec
loop
into
or
sbb
or
cmp
ss
cmpsl
xor
mov
ret
push
cli
sub
stos
mov
aad
pop
push
pop
push
movsb
pop
rclb
dec
in
test
jno
pop
pop
int3
scas
sub
int3
jno
mov
notl
rorl
cmp
shrl
shrb
pop
pushf
pop
sbbl
cli
sbb
push
inc
xor
call
pop
jge
inc
scas
push
xor
dec
inc
jp
add
jo
mov
or
mov
mov
pop
popa
das
cltd
mov
fstpt
mov
loop
cmp
mov
inc
rcll
dec
push
stc
mov
dec
inc
call
cmc
xchg
aas
icebp
int
dec
adc
jae
jmp
enter
xlat
inc
cmp
push
sbb
and
cmp
pop
mov
cwtl
mov
cltd
push
popf
lret
testl
nop
lock
sarb
add
jne
fwait
push
repz
xchg
cmpsl
popa
and
adc
cmp
jno
icebp
xchg
cmp
in
inc
ljmp
test
call
shlb
xlat
pop
lock
add
lods
shll
push
nop
int
jns
fnsave
jg
jno
push
movsl
push
int
push
add
push
test
jo
ret
movsb
cmp
push
outsl
lock
sbb
and
jl
xor
sbbb
out
shl
cmpsl
dec
sbb
dec
fistpll
popf
jecxz
iret
adc
jp
xchg
insl
sarl
push
mov
rcr
and
sub
push
in
adc
test
jl
loope
or
mov
xor
xor
jmp
or
inc
or
push
mov
inc
and
int3
test
dec
ret
pop
pop
jne
iretw
mov
jcxz
ja
loope
mov
sbb
in
push
push
jmp
mov
in
pushf
lock
mov
insl
sub
fistl
adc
repnz
stos
negl
sub
adc
fiadds
xchg
sbb
insl
aas
or
scas
cmp
mov
xchg
jmp
rorb
imul
push
jae
inc
call
enter
leave
and
ret
jb
push
inc
add
in
xor
imul
movsb
movsb
cmp
cltd
lods
pop
int
ret
leave
in
cli
das
enter
lret
jo
dec
addr16
cli
and
sbb
sbb
inc
outsl
pop
in
dec
fwait
inc
lahf
inc
outsl
push
mov
lods
fisubrl
dec
fnsave
jmp
fcompl
stc
mov
mov
pop
cmp
dec
sub
add
es
inc
xorl
jmp
ficoml
sbb
loopne
mov
mov
sti
mov
outsl
repnz
imul
lret
pop
xor
pushf
cwtl
cmc
fnsave
testb
mov
arpl
xor
jnp
lds
cmp
cmp
sbb
jl
ret
cmp
insb
jecxz
adc
xchg
xor
lods
and
or
inc
xor
nop
add
sub
int3
loop
xchg
xchg
cmp
and
int
adc
and
inc
rcr
subl
test
stos
dec
jo
cmpb
add
lea
xchg
xchg
aam
jg
testl
push
repz
and
cmp
mov
pusha
xchg
xchg
movsb
pop
mov
mov
lods
shl
mov
mov
data16
je
inc
mov
xchg
mov
gs
ja
daa
xchg
in
gs
jb
and
push
or
and
xor
jmp
aad
addl
je
mov
cltd
lods
jecxz
jae
adc
mov
xchg
push
jmp
cli
xchg
jo
mov
gs
cwtl
test
inc
cmp
sub
adc
cli
inc
fiaddl
mov
jle
test
shlb
xor
inc
lcall
inc
in
ljmp
cmp
addr16
jg
das
sahf
clc
lods
xor
call
pop
out
lahf
xor
sub
shll
dec
and
shr
xor
cltd
pop
add
pop
mov
xchg
fisubl
nop
inc
shll
dec
inc
mov
in
inc
decb
enter
rcll
fdiv
cmpsl
inc
mov
fnstenv
out
inc
lahf
xchg
addr16
jb
imul
rol
sbb
jae
movsb
push
das
and
xchg
pop
jnp
pushf
mov
ljmp
sub
jne
and
filds
add
jecxz
das
insl
andb
insb
int3
xlat
push
jp
and
xchg
push
jnp
out
mov
in
stos
inc
mov
gs
xor
loope
adc
sub
fiadds
btrl
movsl
xchg
aad
or
movl
sbb
shlb
imul
dec
dec
es
ljmp
repz
pop
pushf
mov
sub
add
sub
dec
add
xorb
xor
pop
cmpsl
sbb
out
jecxz
push
pop
fiaddl
jne
movsl
call
cmp
sbb
jnp
sbb
mov
cwtl
and
mov
adc
dec
popa
xor
fwait
sbb
add
jb
test
ljmp
jbe
mov
arpl
fmul
dec
dec
jbe
jl
cmpsl
adc
shr
bnd
push
mov
cmpsl
stos
fcomps
scas
or
into
push
adc
mov
test
lret
sub
push
inc
sub
scas
pusha
push
outsl
std
popa
subl
xchg
into
fdiv
daa
or
mov
lea
decb
dec
and
cmpsb
jno
mov
mov
mov
push
test
insl
fisubs
mov
inc
cli
cmc
loop
adc
cmp
mov
jg
ljmp
aas
mov
xchg
scas
out
push
sub
mov
jmp
pop
mov
pop
sbb
or
xchg
mov
js
and
push
stos
incb
jne
decl
test
jo
dec
dec
loope
cmp
lods
adc
pop
adc
xor
nop
xadd
xor
mov
xlat
fsts
fiadds
inc
imul
push
cltd
push
and
adc
das
or
mov
sahf
sub
in
rorb
leave
cmpb
outsb
push
dec
cmp
lock
hlt
lea
jb
mov
xor
xor
ror
add
jbe
test
sahf
mov
cmpsl
dec
add
notl
lods
cmpsl
mov
pop
sub
xchg
xor
popf
sub
insl
loopne
les
jmp
sbbl
and
ret
xchg
subb
cltd
push
mov
mov
push
sub
aas
decb
jno
repz
dec
jbe
mov
ret
js
cmp
jae
ss
cwtl
sub
out
xor
mov
xchg
or
outsb
rcll
mov
add
lcall
ds
insl
in
fwait
std
cmp
dec
ret
jp
jl
in
push
jmp
out
je
cli
mov
xchg
cmp
orb
mov
stos
test
cwtl
shl
loop
sub
test
scas
cmpsb
imul
xchg
or
lods
test
mov
fbld
adc
xorl
into
xor
out
mov
sbb
xlat
jle
pop
sbb
sbb
xor
and
inc
std
jle
cmp
stos
das
jle
push
loopw
dec
or
mov
jae
sub
adc
lahf
dec
pop
rcl
fucomp
and
mov
cmpsl
mov
mov
xchg
push
dec
loop
adc
pop
xor
movl
fidivrs
pop
daa
sahf
mov
dec
push
insb
les
movsb
cmp
dec
icebp
pop
sarl
jmp
mov
scas
cld
lea
ret
cmc
adc
or
add
data16
and
dec
mov
stos
mov
lds
pop
jmp
sub
stos
pop
dec
daa
add
mov
sarb
fwait
sbb
cwtl
xor
mov
jno
cli
jge
mov
jge
sbb
pusha
xor
mov
fsqrt
or
jne
cmpsl
cmp
inc
adc
push
or
daa
add
pop
test
ja
or
push
stc
pop
pop
test
push
inc
dec
inc
hlt
cmp
fcompl
int
or
adc
mov
jns
imul
or
adc
xchg
jp
fwait
or
lret
ret
or
insl
jl
push
nop
mov
or
test
popf
sti
sbb
imul
imull
pop
inc
cli
movsb
mov
je
xchg
jns
ss
aam
nop
outsb
ja
lahf
test
xchg
fiadds
out
cli
gs
xchg
mov
pop
pop
jle
push
mov
adc
or
and
add
add
sbb
lea
add
test
fsubrs
and
adc
pop
fcoms
or
movsb
xchg
lds
insl
push
push
sbb
xor
cwtl
out
or
inc
xchg
pop
dec
ret
adc
pushf
in
cmp
pop
scas
push
xor
mov
in
xor
daa
add
jp
fsubl
addr16
aam
aad
push
das
mov
jo
cmc
call
mov
and
or
xchg
in
imul
add
in
ss
cwtl
mov
jge
push
xchg
sub
outsb
pop
js
mov
sbb
outsb
test
ds
push
add
jae
push
stos
mov
cmp
or
insb
cs
in
popf
dec
lock
imul
push
cmp
mov
stos
pop
cmp
cmp
imul
push
nop
icebp
adc
fbstp
push
or
out
mov
pop
and
jg
inc
loope
in
inc
test
loop
pop
clc
ljmp
push
imul
loop
or
mov
test
sbbb
fsincos
mov
movsl
aad
mov
sbbb
das
and
pop
stos
call
ficomps
negb
mov
out
jno
sahf
xchg
rep
shlb
loopne
dec
add
sbb
xchg
mov
sbb
cli
and
cld
mov
int3
cmp
mov
lcall
xchg
adc
dec
and
cmpsl
and
xchg
push
call
pop
xchg
dec
mov
call
or
sub
mov
jb
scas
or
adc
and
or
jbe
loope
movsb
addr16
push
jl
mov
hlt
jns
sub
push
jns
insl
jg
nop
leave
popa
les
inc
stc
mov
inc
je
nop
test
js
and
mov
and
or
xlat
outsb
in
test
cmpl
insl
in
mov
addr16
inc
icebp
mov
sub
xchg
scas
in
les
pop
xchg
imul
stos
mov
add
lcall
stos
cmpsl
jmp
xlat
xchg
enter
imul
sbb
or
rcll
mov
adc
dec
sbb
into
push
push
pavgw
dec
pop
dec
aad
cld
js
popf
jnp
pop
icebp
push
add
mov
test
mov
cmp
in
popa
xor
sahf
pushf
enter
andl
pop
jo
dec
xor
jne
or
ja
movsb
pop
cmpsl
push
xchg
dec
out
orl
daa
mov
jbe
jae
xor
int
adc
sahf
jae
daa
sub
lods
outsl
repnz
xor
int3
pop
lock
cltd
push
nop
daa
inc
clc
aaa
mov
xor
jb
adc
addb
data16
movsb
mov
in
pop
ljmp
jo
mov
ljmp
int
in
stc
push
aad
xchg
pop
jge
jb
scas
call
arpl
sbb
sbb
sbb
jl
arpl
jg
mov
jp
ljmp
adc
mov
mov
in
jmp
idivl
imul
sub
or
ret
enter
jecxz
mov
lahf
jbe
xchg
sub
cltd
mov
xorb
fucom
mov
pop
adc
fdiv
dec
dec
cmp
mov
mov
lds
fs
cld
adc
mov
in
test
cmc
mov
ror
dec
mov
jmp
mov
sub
in
test
push
filds
addr16
jle
inc
enter
sbb
je
js
add
into
jle
je
std
pop
dec
inc
xchg
in
aad
dec
fwait
xor
loopne
and
add
in
xchg
fcmovne
call
aaa
mov
sbb
push
mov
cmp
in
call
cmp
cmp
xchg
cmp
inc
orl
adc
or
add
push
jmp
test
sahf
mov
xchg
cli
inc
fsubrl
fsubs
jo
cmp
test
push
push
mov
mov
cmpsb
lock
call
adc
xor
lods
add
dec
lds
jecxz
imul
repnz
aas
pop
outsl
lock
and
daa
outsl
jp
and
mov
push
xchg
insl
pop
mov
hlt
push
popa
pushf
mov
dec
mov
aas
jle
mov
xlat
pop
testb
inc
aas
jp
add
fwait
adc
loope
xor
mov
movsb
jnp
push
mov
add
add
movsl
lods
andb
int
popa
out
into
dec
adc
cltd
movsb
fnsave
pop
clc
jae
pop
sti
test
mov
mov
clc
cmp
mov
cmpl
fistl
xchg
adc
test
xor
push
mov
clc
jno
dec
jne
sbb
imul
xchg
ret
cs
fcmovnu
scas
xchg
test
jne
mov
or
push
inc
push
movsl
rorl
jo
out
int3
mov
hlt
adc
push
pop
dec
xchg
and
xchg
push
xchg
addr16
cli
jno
and
andl
rol
pop
add
in
fimull
les
addl
mov
testb
jne
insl
les
push
mov
xlat
icebp
out
mov
adc
into
pop
int3
leave
pop
dec
test
or
jmp
iret
adc
repz
mov
dec
mov
add
xlat
inc
cmpxchg
mov
jp
aam
notb
scas
xchg
jns
sub
nop
xor
arpl
sbb
add
push
sbb
out
add
aad
cmp
test
xchg
xor
cmp
nop
dec
mov
das
xchg
sbb
loop
and
sub
mov
idivl
inc
mov
std
xor
out
xchg
pusha
fsubrs
jp
cmp
imull
mov
push
repz
inc
jns
je
or
push
add
pop
and
lds
cltd
mov
mov
or
mov
hlt
adc
addr16
mov
cmp
cmpsl
lods
jl
mov
in
cmp
inc
scas
stos
add
push
mov
mov
sub
xor
arpl
lods
dec
cmpsl
pusha
stos
mov
icebp
cmp
lock
sbb
outsb
pop
es
push
push
and
xchg
data16
xor
adc
scas
mov
addr16
push
jp
clc
and
adc
add
mov
iret
ja
jle
pushf
xchg
pop
or
pop
orl
mov
mov
add
enter
jb
jecxz
cmpsb
add
lods
dec
das
mov
fdivs
pop
mov
dec
movsl
xchg
ficompl
psubsw
jmp
push
stc
testb
aaa
sbb
mull
sbb
scas
inc
popa
test
fnstenv
into
addl
ljmp
or
in
add
or
fbld
pusha
xchg
ljmp
lds
xchg
je
pop
ret
in
mov
movsl
sub
repz
sbb
xor
or
mov
arpl
outsl
push
pusha
cmp
fs
lea
xchg
pop
stc
stc
popf
sub
aam
das
setp
pop
cmp
mov
dec
pop
dec
scas
jge
addl
xchg
outsb
roll
fwait
xlat
or
sub
das
sbb
pop
je
pop
loop
xchg
jp
sub
in
dec
pop
cmp
adc
xorl
insb
je
mov
cmpsl
xchg
insb
xlat
cmpsb
pop
cli
mov
push
inc
mov
mov
dec
inc
jbe
adc
or
inc
fstp
push
mov
sub
inc
iret
lret
rol
xor
cmp
fldenv
mov
call
mov
dec
cmp
or
cmpsl
and
sbb
xchg
xchg
paddsb
lret
loopne
or
xlat
and
insl
push
jnp
cmpsl
inc
xor
jno
pop
cs
movsb
movsl
daa
add
data16
push
fmull
arpl
mov
fstl
iret
and
test
shrb
sahf
rep
or
out
cmpsl
aam
mov
mov
inc
adc
push
sbb
push
ret
and
mov
dec
daa
inc
fcoml
lds
xchg
jge
sub
sub
push
adc
push
sarb
jnp
sub
adc
movsl
repnz
mov
imull
mov
sbb
shlb
pop
cmp
loop
jnp
fidivrl
xlat
jle
aam
out
inc
inc
jp
sub
fstps
gs
mov
mov
dec
mov
push
scas
and
jecxz
stos
fs
mov
js
cmp
mov
loope
es
xor
xor
pop
and
xor
pop
dec
shll
cltd
insb
sbbb
mov
cli
xchg
dec
xchg
cltd
xor
mov
or
cmp
movsb
dec
adc
cltd
imul
xor
sbb
aam
xchg
addb
pop
add
int3
and
sub
lcall
inc
movsl
mov
push
jbe
push
mov
or
jmp
mov
bound
push
aas
push
sub
imul
cmc
mov
jo
cmc
outsl
adc
mov
xor
out
test
cmp
scas
push
addr16
xchg
sub
jno
cmp
mov
icebp
push
int
cmp
pop
cmc
adcl
arpl
mov
inc
mov
cmpsl
ds
subl
push
adc
psubw
sarb
adc
sub
push
sub
xorl
sbb
add
in
pop
jecxz
fwait
sub
rclb
xor
test
outsb
clc
gs
add
cmpb
shlb
add
cmp
jg
cmp
lods
inc
into
dec
mov
push
pop
push
mov
xchg
dec
fistps
or
or
sbbb
cmp
aaa
cmc
pop
cld
btr
xchg
cli
push
jae
repz
popa
and
aaa
add
popf
sub
mov
add
mov
and
sbb
inc
and
xchg
fwait
xor
pop
bound
ds
mov
lods
lret
mov
cmc
sub
fnstenv
sub
inc
stos
in
adc
xchg
jbe
pop
fwait
mov
xor
and
mov
shlb
repz
cli
xchg
ret
loope
jecxz
xor
and
or
xchg
fadd
pop
push
fldenv
ja
scas
and
andb
xchg
xchg
mov
dec
enter
insb
jmp
xor
cs
je
loope
lret
ffree
sarl
mov
ret
inc
pushf
mov
xchg
dec
movsb
out
ret
imul
mov
fcoms
leave
adc
sbb
addl
jo
mov
aaa
aam
roll
fldenv
outsb
add
pop
sub
and
jmp
aam
test
push
subb
lcall
pop
clc
xor
icebp
fsts
xchg
pop
das
push
fstps
ss
ss
andl
mov
jo
adc
in
rcrl
inc
sahf
cmp
fs
mov
fldl
pop
xchg
fistpll
cmp
and
mov
push
pop
mov
shlb
cltd
andb
and
insb
jmp
fsubs
dec
or
repnz
xchg
dec
jae
cmp
cld
and
in
adc
or
mov
pop
mov
or
xchg
push
notl
mov
mov
and
inc
pop
sub
xor
stos
mov
or
xor
and
movsb
and
and
cmp
inc
inc
loopne
rclb
fs
jno
in
call
pop
cmp
nop
add
jno
dec
pop
cs
clc
or
idivl
cmp
nopl
stos
and
sub
mov
pop
stos
popf
fnsave
mov
test
in
nop
push
push
xchg
test
cmp
fsubrs
jo
xor
mov
adc
lods
push
mov
mov
gs
adc
std
fdivl
jmp
mov
fld
inc
fdiv
stc
xchg
jno
or
mov
in
push
xchg
push
out
mov
lods
mov
add
cmp
xor
std
xchg
add
or
test
mov
push
addl
push
and
out
js
adc
test
fisttpl
jmp
and
scas
ret
sub
repnz
cmp
into
xchg
lahf
mov
cltd
scas
loop
call
push
mov
push
js
push
idivb
lcall
add
scas
mov
mov
and
push
js
test
repz
adc
mov
std
mov
lret
push
push
fldl
mov
jecxz
push
adc
pop
scas
repnz
ret
push
jmp
mov
jo
ficompl
mov
add
push
bound
sbb
sub
rolb
mov
jp
imul
dec
gs
arpl
pop
mov
aas
push
dec
xchg
lods
mov
out
test
in
es
jle
gs
sub
xchg
outsl
push
les
xchg
or
fldcw
mov
stos
cmpsb
jge
mov
lods
lret
or
mov
lret
jnp
out
jle
shrb
dec
xchg
popl
pop
cmpsb
mov
es
loopne
jbe
adc
push
gs
loopne
dec
in
lret
inc
decl
out
mov
shlb
xchg
xchg
push
adc
cmp
adc
scas
shrl
add
sbb
inc
movsb
mov
push
in
orl
repnz
lods
hlt
pop
lahf
or
jg
adc
xor
push
test
jae
aad
adc
scas
cmp
pop
push
fldenv
xorl
pop
ss
sub
cld
xchg
inc
pusha
xchg
sbb
and
cmpsb
push
cmp
xchg
mov
pop
push
sbb
mov
hlt
pop
mov
lea
es
xchg
and
bound
xor
mov
push
or
cmp
lahf
outsb
pop
daa
pop
mov
jb
les
mul
testl
sub
ror
dec
lret
filds
loopne
push
sub
inc
mov
movsl
ljmp
xor
xchg
incl
sub
xor
int
aaa
pop
xrelease
nop
daa
mov
outsb
add
mov
adcl
fstpt
sbb
test
jbe
jb
sbb
add
subb
or
setno
test
cmp
nop
inc
ljmp
xor
fwait
inc
ds
repz
jns
adc
icebp
inc
sub
lods
es
cs
in
inc
fsubl
mov
sub
ljmp
and
mov
pop
int3
pop
out
std
dec
sahf
out
jg
arpl
outsl
mov
mov
icebp
mov
inc
mov
adc
or
mov
std
insl
pop
movsb
cmp
icebp
aaa
push
xorl
cmp
mov
pop
pop
dec
stc
dec
push
sub
adc
imul
stos
pop
jo
jl
test
js,pt
stos
rclb
jg
aad
jo
or
jle
test
call
pushf
inc
adc
outsl
in
mov
cmp
sti
std
jns
dec
in
outsb
xchg
fmulp
jb
jns
mov
lret
xor
mov
stos
jne
push
lcall
xchg
xor
in
adc
xchg
mov
mov
aam
rcl
pop
xor
jnp
xchg
pop
cwtl
adc
xlat
pop
cmpsb
adc
pop
inc
les
pop
xor
fnstenv
xchg
lcall
pop
aad
nop
sub
push
xor
jmp
sahf
push
jns
faddl
test
dec
mov
dec
icebp
pop
movsl
stc
test
xor
xor
mov
pop
sti
add
cltd
sbbb
test
xor
and
pushf
hlt
lcall
clc
test
in
mov
mov
inc
sub
or
mov
jp
mov
or
adc
iret
xchg
jnp
mov
mov
data16
push
push
std
cltd
adc
pushf
pop
push
je
jno
adc
push
pop
adc
jns
push
insl
xchg
inc
fidivl
ret
addr16
out
push
mov
lea
loop
push
cmp
add
rcrl
nop
shlb
add
push
mov
xor
pop
add
sbb
iret
lds
sub
cmp
shll
loopne
or
add
ljmp
sahf
popl
xchg
out
mov
xchg
sbbb
add
test
pop
nop
jmp
xchg
ret
ljmp
stos
int
inc
sbb
mov
sti
sbb
lea
das
adc
pushf
fildll
scas
lahf
xor
push
enter
add
ljmp
xchg
jg
mov
pushf
push
cwtl
mov
push
sbb
mov
pop
xor
push
fadd
pop
mov
push
loope
xor
inc
mov
fimuls
movsl
decl
dec
mov
pop
shlb
std
scas
mov
or
xchg
dec
test
cmp
icebp
adc
and
jmp
pushf
mov
jg
imul
push
out
mov
jbe
adcl
inc
mov
mov
test
aas
inc
sub
scas
sbb
out
push
add
lds
add
fistpl
lods
xchg
mov
adc
lret
int3
scas
mov
arpl
arpl
xchg
mov
mov
sub
mov
loop
xor
adc
inc
aam
push
mov
mov
rcrl
sti
cmp
out
test
pop
mov
add
in
sahf
pusha
dec
fiadds
rcr
jae
push
in
addl
repz
pop
inc
popa
inc
xor
out
push
in
adc
fisubrs
dec
out
std
cmp
arpl
cs
mov
dec
loopne
push
les
xor
mov
popa
aad
jae
add
mov
in
xchg
cmp
mov
add
xchg
xor
cmp
into
mov
lret
and
out
aaa
pop
add
inc
ss
xor
push
or
inc
cli
stc
or
movsb
aaa
hlt
and
insb
int3
push
leave
jg
jecxz
stos
jbe
xchg
ds
add
dec
int
bound
mov
scas
ja
xchg
pushf
fwait
and
cltd
sarl
in
std
or
add
into
loop
and
pop
ja
mov
xchg
adc
or
fistl
call
pop
shufps
loope
adc
or
jmp
imul
xchg
xor
or
cmpsl
cmpsl
sub
push
mov
pushf
jne
scas
mulps
sbb
jo
aam
add
pop
xor
xorb
xchg
mov
mov
inc
mov
loop
popa
rclb
incl
fnstcw
test
out
in
cli
insl
mov
imul
cmpsw
push
movsl
pop
or
cmp
xchg
sub
push
cmpsb
cmp
hlt
cli
les
add
aad
jbe
sub
fistpl
pop
icebp
mov
xor
inc
movsb
mov
int
cld
xchg
cmp
mov
fimuls
jle
and
xchg
popa
push
push
sub
or
and
test
fisttps
cwtl
jae
lret
jmp
ficomps
and
test
mov
xchg
adc
je
loop
push
fimuls
sub
dec
xchg
add
pop
sub
pop
add
sub
and
pop
cmp
xchg
cmp
push
fstl
mov
sub
shl
scas
pushf
ss
inc
iret
ja
inc
jecxz
fadds
insl
scas
je
sarb
ret
iret
notb
push
mov
popa
lret
push
nop
enter
pop
in
imul
stos
and
cmp
icebp
xor
xchg
nop
adc
cmp
inc
enter
jmp
icebp
dec
sti
pop
lds
mov
pop
mov
sbb
xor
loope
cmpsb
push
inc
arpl
sub
push
ljmp
jno
test
movsb
aaa
jne
jnp
pop
or
sbb
sahf
and
add
fmul
shrl
je
jo
addr16
lods
mov
fnstsw
xchg
mov
dec
pop
ljmp
add
mov
pusha
adc
add
imul
and
test
ret
pop
sbb
push
pop
push
sub
mov
les
pusha
out
fwait
sub
or
inc
lods
add
lret
ret
cmp
push
lds
je
sbb
mov
mov
fwait
push
iret
fstpl
mov
addr16
push
push
inc
jcxz
rcrb
mov
or
add
cmp
and
out
pop
push
lret
shl
mov
rorl
repz
in
xchg
dec
sti
call
dec
out
addr16
fcoms
outsb
add
aas
in
lods
mov
fbstp
lret
movsb
push
stos
mov
les
jecxz
add
mov
inc
adc
int3
push
xor
sub
sub
inc
adc
sbb
jns
push
mov
sahf
xor
push
xchg
dec
dec
inc
pop
pop
dec
jno
loope
and
inc
cmpsb
into
inc
dec
notl
or
mov
mov
aam
je
mov
mov
mov
xor
mov
sahf
and
daa
cmp
sbb
std
dec
pop
sub
ret
das
loopne
outsl
push
stos
jbe
xchg
lret
ja
jb
mov
sub
push
jbe
lods
arpl
cmc
pop
cmp
cmp
jl
mov
pop
in
jb
push
pop
pop
repz
ja
std
insb
bnd
xor
add
adc
movsb
mov
faddp
jo
jns
pop
mov
stos
loop
icebp
xlat
xor
xchg
cmp
mov
cmp
pop
negl
and
inc
into
xor
negb
mov
add
ficompl
lea
push
lods
mov
xor
push
xchg
adc
lods
je
and
xchg
mov
orl
xor
cs
int3
mov
test
xor
call
mov
mov
sbb
insb
hlt
sbb
mov
mov
out
cli
mov
leave
cmp
leave
pop
cmpxchg
jmp
cmpsl
sbb
lahf
xor
rorb
dec
and
outsl
fwait
in
out
popf
lods
rorb
loope
xor
sahf
xor
cld
dec
mov
inc
fstpl
shlb
and
fcoml
out
jns
aaa
sub
mov
and
xchg
stc
push
dec
jle
mov
in
lea
dec
and
call
sbb
adc
fsubl
out
push
lock
xor
mov
mov
js
in
addb
into
jp
jnp
scas
sahf
xor
or
fcoms
mov
loope
fsubp
outsb
int3
lret
loope
std
out
test
jmp
out
jg
inc
mov
icebp
test
outsl
loop
inc
test
aam
seto
xchg
mov
lods
mov
fdiv
nop
fisubs
xchg
pushf
adc
mov
adc
push
pop
pop
int3
sub
xor
mov
hlt
add
arpl
icebp
cmp
dec
sahf
xor
mov
sbb
cmp
adc
and
pop
mov
gs
push
rol
lret
cltd
or
shrl
xchg
aam
leave
adc
dec
shrb
mov
insl
rclb
mov
push
adc
or
cmc
btc
in
adc
cs
mov
lods
inc
test
push
jmp
inc
cmp
in
xchg
xor
and
into
arpl
add
addr16
es
and
test
push
mov
fsubs
cmpsl
lret
mov
push
push
xlat
inc
sub
add
mov
adc
jno
loop
lcall
movsl
sahf
adc
jge
mov
lods
jmp
clc
imul
xlat
jmp
lret
jb
mov
add
pop
idiv
mov
daa
inc
iret
jg
mov
call
push
ljmp
jo
das
inc
dec
movb
pop
jecxz
mov
fldt
out
sbb
roll
push
jo
inc
sbb
mov
cmp
fdiv
cmp
push
xchg
out
mov
in
in
mov
push
cmpsb
sub
mov
imul
mov
sti
push
and
mov
ficoml
mov
or
add
loopne
push
dec
xchg
imul
repnz
cs
jne
cs
xchg
outsb
jnp
push
jecxz
imul
fcos
mov
cmp
cld
push
int
fsts
clc
push
shl
icebp
inc
arpl
xlat
and
adc
in
scas
ljmp
jo
pop
mov
out
cmp
movsl
cmp
dec
mov
jg
fmuls
pextrw
mov
mov
int
mov
pusha
into
dec
and
jp
cld
jnp
jo
push
ss
sbb
or
cmp
rcrb
out
jnp
es
ljmp
sbb
adc
daa
jmp
xor
movsl
in
mov
jae
adc
sti
cmovno
cmpsl
mov
adc
in
sub
xchg
mov
cmp
push
and
xchg
cmpsb
sti
les
test
adc
xlat
scas
mov
leave
je
and
scas
stc
jb
add
sbb
xor
adc
mov
pushf
sub
dec
and
cmc
xor
inc
pop
icebp
pop
fcompl
movsl
mov
sub
out
in
dec
pusha
adc
cs
insl
loopne
and
dec
nop
aas
xor
push
in
into
push
sub
int3
mov
sbb
jno
fistpll
shll
adc
out
mov
das
cmp
movsb
mov
sahf
add
jmp
sti
xchg
int3
mov
ret
movsb
enter
hlt
or
inc
fistl
cmp
jne
xchg
fadds
pop
and
insl
andb
sbb
mov
mov
test
xchg
xchg
mov
or
adc
push
fs
fs
pop
dec
mov
dec
je
lcall
pop
insb
sbb
in
push
add
inc
mov
movsl
cmp
push
ss
mov
outsb
je
push
call
je
outsl
aam
jb
arpl
stos
ljmp
cmp
sbb
out
dec
push
jae
add
and
xchg
add
push
lods
data16
mov
push
roll
in
push
jno
outsl
shlb
and
adc
testb
inc
adc
mov
push
mov
lds
dec
dec
pop
xchg
nop
mov
out
push
add
movsb
cmp
aad
cwtl
sbb
cmpsb
sbb
sbb
add
and
loopne
mov
repz
imul
rcrl
popf
cld
mov
add
cmp
mov
icebp
daa
inc
cmpsb
fldl
mov
mov
push
jmp
dec
pop
jne
sbb
sbb
dec
shrl
cmc
or
mov
pop
test
mov
sbb
jbe
sbb
dec
mov
daa
jns
lahf
and
mov
mov
mov
sub
cmp
arpl
fs
int3
pop
sub
inc
and
stc
push
std
jo
or
idivl
or
jp
lds
dec
shlb
pop
aas
xor
jnp
repnz
shll
and
mov
push
shr
inc
jl
inc
or
test
out
xlat
hlt
stos
push
mov
add
int3
mov
inc
push
leave
dec
sti
push
sub
fcomps
imul
ss
in
pop
out
in
adcb
nop
push
jb
xor
jl
call
mov
add
or
in
mov
aam
mov
jp
lods
jg
fwait
je
inc
cmpsb
loop
pop
dec
push
dec
and
je
adc
adc
addr16
inc
cmp
inc
jecxz
xchg
mov
test
jg
arpl
nop
xchg
popa
ss
adc
jae
cmpsb
jns
aaa
mov
subl
enter
loopne
inc
adc
dec
mov
test
fstl
pop
jl
roll
dec
aaa
fnstenv
add
jl
test
mov
test
loope
sbb
jbe
js
insl
mov
xor
xorl
cmp
sarl
in
mov
add
and
scas
and
call
sbb
enter
jecxz
lcall
loope
rorl
push
push
nop
leave
test
add
mov
loope
adc
mov
mov
cmpsb
dec
pop
in
testl
xlat
pop
mov
les
fiadds
fdivs
pop
out
sbb
adcb
jae
es
fsubrs
and
push
mov
jno
gs
out
fwait
xchg
sub
xor
clc
bound
jp
outsb
sub
lods
out
pop
sbb
mov
push
push
jl
mov
mov
addr16
mov
mov
test
lods
jno
mov
or
addr16
fsts
or
pop
sti
orl
dec
lds
mov
into
stos
jbe
and
fistl
mov
imul
in
movl
mov
imul
sahf
mov
inc
inc
inc
fisubl
gs
cmp
repz
cmp
cmp
pushf
ss
sub
jns
mov
rorb
sub
add
stos
xchg
jbe
jmp
or
mov
sbb
gs
sub
mov
xchg
push
shrl
sbb
cmp
adc
call
pop
push
jo
stos
and
js
mov
pop
jmp
mov
push
mov
xchg
cld
shl
insl
and
clc
pop
mov
cltd
into
gs
or
mov
in
nop
arpl
sbb
int3
ds
ljmp
cmp
fwait
out
pop
adc
addl
dec
mov
ret
or
and
add
arpl
xchg
mov
dec
out
hlt
adc
loope
adc
in
shlb
dec
xchg
push
clc
mov
cmp
push
adc
fisubs
xchg
mov
add
jb
inc
fidivrs
fbld
inc
insb
mov
fsin
jbe
xlat
xchg
push
and
pop
repz
sarl
leave
fbld
mov
xor
mov
mov
mov
dec
inc
mov
mov
xor
xchg
imul
dec
mov
add
xchg
push
xchg
pop
movsb
arpl
dec
sbb
mov
or
inc
cs
stos
das
orb
mov
ja
ds
dec
xchg
pop
pop
stos
sbb
mov
xor
jns
push
push
enter
or
aaa
push
orl
jae
repz
stos
imul
adc
mov
adc
mov
mov
scas
mov
dec
mov
sub
xchg
pusha
push
jb
lods
inc
jns
jle
iret
lcall
insl
int3
clc
mov
adc
sub
push
jp
sbb
mov
ret
inc
repz
lret
xor
xor
fisubs
inc
leave
fldl
xchg
mov
cmp
pop
cmpsb
mov
test
inc
xrelease
dec
test
mov
ret
mov
sbb
jb
popa
jae
and
leave
popf
aas
shlb
mov
mov
and
lods
jbe
loope
cwtl
out
out
setne
std
xor
repz
adc
aaa
inc
inc
cmp
adc
mov
jno
sub
dec
icebp
dec
ja
inc
cld
pop
push
adc
scas
lret
insb
stos
cmpl
xchg
mov
call
dec
add
and
scas
cli
aas
repz
cld
jecxz,pn
pushf
xchg
nop
out
in
mov
push
push
mov
sub
adc
repz
out
mov
add
jmp
frstor
fsts
lcall
popa
rolb
das
pop
fcmovbe
int3
mov
cmpl
sbb
fcmove
jg
sub
xchg
pop
mov
mov
rcrb
mov
push
dec
push
and
inc
outsl
rolb
andl
pop
push
mov
or
inc
xchg
sub
cltd
jne
loopne
mov
mov
sbb
fcomp
adc
mov
jg
xchg
mov
fidivrl
jmp
js
jmp
arpl
js
mov
rorl
test
cmp
xchg
mov
fadds
push
stos
dec
pop
test
sbb
xor
cs
xchg
pusha
or
cs
cs
lcall
mov
cmp
aaa
sub
int3
nop
lea
cmpsb
mov
cwtl
and
mov
rclb
push
push
ja
xor
xchg
dec
out
in
scas
sbb
frstor
rolb
mov
adc
in
adc
xchg
mov
push
mov
aaa
nop
adc
lods
mov
repnz
fnsave
enter
popl
mov
mov
jp
repnz
sub
arpl
sub
lods
lcall
enter
arpl
call
lret
push
fs
jb
sti
nop
scas
outsl
ljmp
data16
pop
lret
push
test
mov
call
or
clc
mov
push
ljmp
repz
lock
ja
xor
es
cld
pop
loopne
mov
inc
in
ret
lock
mov
xlat
pushf
or
insl
dec
loope
pop
movsl
hlt
psrlq
dec
repnz
aas
mov
repz
aas
call
or
pop
mov
inc
loop
idivb
dec
mov
sub
int3
mov
pop
daa
test
ror
popa
pop
ss
push
mov
iret
pushf
dec
xchg
mov
test
repz
fwait
jo
out
nop
sub
or
cwtl
mov
dec
pop
jp
mov
dec
stc
ficoms
dec
xlat
xor
repz
push
sub
loopne
fsubrs
push
pop
mov
hlt
or
pop
mov
cmp
sarl
fadd
dec
adc
mov
cltd
iret
pop
xor
ljmp
cmpsl
test
out
jno
lods
xor
je
movsl
push
sbbl
lds
arpl
stos
mov
lds
dec
loopne
in
lock
cli
pop
cmc
jo
xlat
fsubs
adcb
jae
pop
in
sahf
je
testl
jmp
lds
mov
sarb
pop
lahf
xchg
pop
les
shrb
sub
push
and
add
pusha
pop
ret
test
mov
sub
out
inc
mov
mov
lahf
or
fbstp
dec
adc
sahf
mov
pusha
sub
aad
sub
push
sti
ljmp
or
xor
sbb
loop
xchg
negl
dec
shll
jl
lds
adc
push
jne
loopne
push
push
fmuls
lcall
jl
pop
cmpsb
xchg
enter
xchg
pop
mov
jns
push
jmp
sbb
and
cmp
mov
addr16
test
xchg
les
movsb
pop
movsl
sbbb
xlat
in
hlt
adc
jmp
xchg
ret
jle
mov
in
idivl
divb
fstpt
mov
mov
call
aas
pop
arpl
xlat
insl
orb
jne
subb
mov
aas
cmp
push
je
movl
sbb
xchg
sbb
push
fbstp
pop
or
mov
sub
ja
repz
mov
clc
and
adc
cmpb
jge
aad
lods
ljmp
call
jmp
fs
dec
lcall
and
stos
xor
mov
fstp
scas
ficoml
stos
mov
shll
pop
fbld
lret
add
xchg
lods
mov
ret
dec
test
roll
pop
fld
ret
sub
dec
jns
pop
shlb
int
jno
cli
stos
push
gs
repz
popa
inc
cltd
sbb
bound
repnz
inc
idivb
data16
dec
sti
fwait
nop
js
mov
xchg
jmp
int
jecxz
stos
addr16
mov
pop
sub
rolb
push
cltd
test
hlt
push
lahf
push
imull
cmp
mov
adc
add
lods
inc
stos
inc
pop
icebp
dec
int
fcoms
mov
lock
mov
aas
sahf
addr16
mov
addb
push
fbstp
movsb
jg
aaa
xor
arpl
push
mov
es
dec
ss
mov
push
pop
cmpps
pop
mov
into
subb
in
daa
in
xor
jno
stos
ljmp
and
sub
fsubl
mov
in
into
test
xchg
jno
lods
nop
pop
loope
xlat
mov
pusha
fwait
jle
dec
mov
pushf
mov
insl
int
pop
mov
je
in
xlat
arpl
es
ljmp
jp
xorl
dec
std
mov
cmp
jge
insl
sbb
sahf
std
xchg
into
fucomip
dec
mov
cmpsb
les
dec
scas
adcb
or
jo
push
jo
jb
sbb
mov
dec
and
or
inc
sarb
dec
pop
mov
xchg
pop
inc
call
loop
adc
push
jbe
xchg
loopne
adc
add
mov
insb
out
or
movb
ja
inc
pop
fnsave
push
and
out
in
or
out
movsl
imul
lret
push
call
fnstenv
in
xchg
loopne
leave
es
add
repnz
imul
lock
push
flds
pop
mov
add
push
jne
fidivs
sbbl
mov
mov
fcoml
jl
out
inc
int
std
mov
leave
pop
cmp
adc
sysenter
mov
sub
cltd
imulb
cmp
ja
pushf
xor
fisubrl
mov
push
dec
mov
loopne
xchg
mov
ret
pop
mov
ror
mov
das
pop
pop
mov
jmp
addr16
xchg
enter
cmp
je
push
pop
roll
push
push
leave
jbe
jg
mov
imul
xlat
jnp
aam
adc
dec
xor
xchg
push
imul
add
aam
testl
adc
jecxz
adc
ss
fistpl
shlb
jno
jmp
sub
xchg
pop
stos
push
loope
pop
negl
add
jo
scas
xor
ret
fprem
icebp
cmp
repnz
and
sti
adc
mov
and
rol
loopne
jl
xchg
mov
rorb
int3
and
xor
out
jge
loope
adc
ret
dec
outsl
in
outsb
fwait
inc
pop
pushl
out
inc
mov
std
loope
das
pop
mov
jae
lds
add
xchg
mov
sbb
push
push
daa
jo
jp
lock
movl
in
movsb
sbb
add
aas
mov
xchg
fcomi
enter
rcll
mov
jno
int
scas
add
mov
fwait
mov
mov
push
dec
int3
arpl
test
xchg
fnstcw
mov
paddb
ljmp
outsl
iret
or
jne
lds
inc
fnsetpm(287
pop
pop
cld
stos
xchg
jmp
xchg
aaa
jns
dec
ljmp
pop
mov
andl
sub
push
cli
cli
mov
mov
fisubl
jle
mov
pop
inc
rolb
sub
lcall
rclb
add
jl
fcmove
jg
daa
sub
xor
and
cmp
inc
mov
out
ret
insl
hlt
je
xor
sub
fwait
xor
addr16
fldcw
lock
outsb
movsl
cwtl
mov
pushf
out
cmp
sahf
xor
rol
push
mov
jno
fimull
xchg
in
pop
aas
leave
fstps
cmp
or
pop
stos
jnp
insl
lods
movsb
inc
in
mov
fidivs
xchg
call
imul
or
imul
insl
mov
push
inc
sub
or
mov
cmp
or
shl
xchg
sbb
adc
loope
pop
icebp
xchg
rolb
rolb
push
dec
push
cmp
lea
mov
pusha
mov
inc
xor
adc
xchg
out
inc
and
fdivs
orb
dec
cmp
adc
pop
mov
imulb
test
popf
xor
hlt
jp
jbe
add
hlt
lds
fistpl
pop
lahf
mov
inc
sub
add
and
sub
insl
pushf
xor
inc
lcall
stc
insl
push
test
jmp
adc
ret
lret
fdivl
adc
pop
xchg
pop
xor
lock
lods
andl
fldcw
in
sti
inc
and
sub
outsl
testb
mov
or
ljmp
inc
cmc
out
daa
mov
rorl
dec
sbb
xor
cmp
lods
adc
vorpd
mov
aad
push
in
std
mov
int
scas
push
inc
mov
inc
out
fiaddl
cmpl
test
daa
loopne
int
rol
loope
xor
cmp
ljmp
fcoml
xchg
lods
ror
sub
data16
sbb
or
mov
sub
popf
lret
mov
mov
jg
mov
mov
sbb
xor
mov
cmpsl
nop
xor
dec
cwtl
fists
roll
and
push
xor
fs
xor
pop
xchg
stos
and
int
iret
int
or
out
add
dec
fwait
cmpl
loop
stos
sub
dec
je
inc
push
add
inc
bound
push
sarl
das
pop
and
test
mov
pusha
in
imul
dec
lahf
movsl
mov
mov
flds
inc
lea
pushf
popf
mov
mov
push
jnp
fiadds
push
fs
mov
sub
sub
sbb
ljmp
cltd
inc
push
xor
mov
arpl
mov
mov
cmp
mov
mov
adc
mov
mov
fsubs
adc
jecxz
pushf
daa
mov
xor
push
loopne
and
dec
lock
inc
stos
xor
fwait
push
fucomp
sbb
add
or
sub
jo
adc
lret
push
push
popa
das
dec
mov
pusha
shlb
jbe
lds
in
inc
movsb
mov
inc
dec
xor
ljmp
and
nop
dec
add
adc
mov
jmp
scas
xchg
push
cmp
mov
cmpsb
test
ljmp
loope
inc
std
xchg
je
ljmp
sub
mov
mov
inc
adc
mov
dec
cmp
movsb
jmp
mov
int3
xchg
push
jge
sbb
ljmp
jb
cmp
insb
add
movsl
ret
mov
hlt
lods
outsb
pop
ljmp
mov
pop
dec
push
fisttpl
xor
lods
inc
out
bound
shl
pushf
icebp
push
sbb
xchg
push
fcoms
ss
mov
imul
adc
mov
dec
xchg
push
out
dec
ss
jns
std
inc
movsb
mov
in
orl
adc
cmp
subl
push
movsl
cmp
cmp
subl
xchg
xor
in
push
ret
add
popa
pop
jo
and
jp
jle
fisubl
pop
mov
dec
xchg
outsb
or
gs
xor
int
out
shrl
ficompl
cld
dec
fbstp
test
data16
subl
mov
jnp
jae
fdivl
out
scas
cmp
jmp
dec
dec
imul
adc
mov
xor
inc
push
add
in
mov
imul
popf
mov
xor
dec
jnp
cli
add
test
add
mov
jg
xorl
out
push
std
xchg
and
jns
fs
sbbl
push
mov
push
mov
dec
outsl
inc
lret
fcoms
jp
test
aaa
mov
xchg
clc
xor
or
cmp
xor
xor
dec
cli
cmc
fcmove
cmp
cmp
clc
daa
arpl
and
mov
ficoml
adc
jle
es
inc
inc
fidivl
add
sub
jnp
xlat
mov
inc
iret
loopne
mov
addr16
xlat
pop
je
outsb
mov
jne
push
jmp
hlt
rorl
cmp
sbb
push
bound
test
dec
sub
pusha
pop
xchg
mov
and
lea
stos
push
fsubrs
int3
xor
stc
idivb
and
inc
addl
in
push
out
lcall
cs
cld
es
jne
add
adc
pop
xchg
cwtl
push
fcmovbe
mov
mov
fdivs
data16
xchg
lea
adc
jmp
rclb
push
arpl
loop
movsb
sti
mov
movsb
inc
fwait
ljmp
addl
push
imul
push
out
xor
mov
aas
or
xchg
mov
push
sub
rcl
pop
mov
sbb
rcl
outsl
cmp
cwtl
mov
push
movsl
push
test
ljmp
cmp
fistps
subl
lods
fidivl
shlb
sub
setl
xchg
mov
leave
ss
or
outsl
pop
ja
add
rorb
fiadds
adc
mov
push
outsb
cmp
cmp
in
cmp
mov
dec
pop
mov
aaa
jge
fsubr
jmp
mov
scas
in
testb
or
jae
inc
iret
adcb
or
adc
pushf
sbb
popf
xor
sub
xorl
mov
in
hlt
mov
sbb
mov
insb
jle
icebp
imul
loopne
dec
add
add
pop
ja
lret
sbb
adc
xchg
pop
mov
mov
and
and
push
scas
addl
mov
push
fisttpll
pushf
xchg
cmp
push
push
les
mov
mov
mov
idivl
fidivrs
pop
std
dec
jge
jl
xchg
push
mov
mov
repnz
and
xchg
dec
add
cmpsl
jp
push
cmp
inc
fndisi(8087
push
aas
jecxz
into
and
and
leave
pop
jg
push
pushf
jle
cmpsb
inc
mov
cmp
sub
dec
push
dec
cmpsl
mov
xlat
adcb
nop
or
mov
sub
cmpb
pop
cmp
test
scas
and
pop
mov
pop
insl
mov
sti
es
cmpsl
mov
or
cmp
mov
mov
sub
sub
dec
repnz
mov
sbb
fistpl
or
cmpsl
aas
fdivrs
fnstenv
add
cld
repnz
sbb
adc
xor
inc
push
push
loope
adc
xchg
lea
pop
mov
insl
in
sbb
adc
xchg
xor
out
mov
aaa
jp
pop
in
jnp
adc
add
push
lcall
mov
ljmp
mov
jmp
fwait
in
push
dec
adc
jle
cli
push
cltd
jl
pusha
repz
cmp
lsl
mov
xchg
and
mov
in
mov
jbe
sti
cs
ds
repz
jp
jmp
and
pop
or
mov
ret
rcl
dec
pusha
mov
sbb
pop
mov
mov
sub
subb
fsubrs
pushf
pop
inc
dec
inc
daa
cmp
dec
loope
lcall
test
mov
push
xchg
add
loope
lahf
fnstsw
jbe
xor
mov
jge
xlat
fsubrl
test
jge
jge
cmp
fadd
push
out
daa
inc
and
fisttps
cld
mov
aam
push
shrl
or
fwait
mov
add
or
das
mov
xchg
jne
rcl
inc
and
mov
sarl
pushf
sbb
sbb
arpl
pop
out
and
leave
push
ret
xchg
xor
pop
cmp
dec
jb
add
lret
mov
sbb
dec
sbb
sbb
lods
inc
xor
cmc
lea
decb
add
sub
cld
and
xor
scas
sbb
cwtl
scas
les
test
jae
xchg
daa
inc
les
mov
std
shll
jg
subl
repz
sbb
mov
mov
popa
and
adc
lret
cld
and
push
ds
cld
or
cmp
sub
and
push
and
xchg
cmpps
je
js
imul
repnz
or
fwait
pop
adc
mov
push
mov
loope
jg
test
je
mov
mov
fistl
add
mov
lods
adc
inc
fsub
inc
xchg
and
pop
rcr
adc
jns
jns
xchg
test
test
test
sahf
dec
cmpsl
mov
popl
popa
mov
pusha
jae
mov
lods
jmp
int3
dec
cwtl
pop
ret
pop
mov
jo
les
jmp
push
test
cmpsb
jle
inc
mov
ds
int
lret
pop
repz
push
mov
inc
or
jecxz
js
call
mov
add
mov
outsb
mov
adc
jle
out
clc
out
sub
xor
dec
lock
dec
and
jb
arpl
aaa
stos
add
and
pop
test
ljmp
out
adcb
aaa
data16
xor
xchg
cmp
dec
loop
push
add
xchg
push
nop
mov
call
shl
cmpsl
or
adc
inc
mov
cmpsl
or
les
pop
gs
push
out
in
jbe
loopne
inc
xchg
add
jmp
into
sbb
xor
lock
aaa
pop
pop
jae
xor
lret
cld
dec
enter
aam
ja
mov
lret
mov
mov
dec
pop
out
addr16
leave
lcall
and
ss
push
cmp
mov
pop
and
xor
cltd
xor
fidivrl
cmp
mov
lcall
loop
pop
jb
sub
cmp
imul
or
mov
dec
lret
subl
js
cmp
insl
inc
push
lahf
jecxz
push
sbb
pop
mov
cmp
lds
jns
jnp
xchg
jp
mov
jnp
inc
bound
adc
cmpb
mov
mov
jmp
insl
dec
data16
xlat
mov
lods
xchg
fsubl
in
popa
stos
mov
sub
lea
ud2
and
jae
fs
inc
leave
add
stos
sbb
aaa
cmc
shrl
aam
jo
push
xchg
pushf
test
mov
out
inc
xchg
in
lds
pop
scas
test
insl
jb
cltd
test
xchg
stos
loopne
fcoml
sbb
xchg
xchg
mov
test
sbb
lock
adc
cmp
cli
daa
mov
and
inc
pop
xor
imul
lods
inc
push
mov
mov
cmp
adc
flds
lods
sbb
push
and
push
push
cmc
inc
fdivr
mov
push
cmc
sub
inc
popa
mov
jge
cs
das
femms
adc
jb
test
rcl
scas
outsb
mov
lock
aas
into
sub
push
insl
or
packssdw
sub
leave
imul
jecxz
dec
es
lcall
in
aaa
push
cmpsl
push
jmp
add
shll
pop
xor
sub
mov
or
mov
movsl
or
xchg
cmpsl
repnz
ret
out
sbb
decl
in
movsl
adc
cwtl
gs
xor
adc
jo
xor
std
stos
push
jnp
push
mov
inc
cmp
adc
dec
fmulp
lsl
ja
rorb
fstps
shrl
or
insb
insb
insl
mov
out
and
pop
pop
fdivrs
and
outsb
scas
out
mov
push
loop
jmp
imul
pop
test
mov
bound
cmc
ret
int
shl
dec
add
dec
jnp
pushf
scas
adc
outsb
xchg
das
cmp
lahf
xlat
mov
pop
add
cmp
ror
out
ret
adc
push
jo
ret
test
inc
andb
mull
pop
mov
mov
push
xchg
xchg
mov
fwait
daa
mov
popa
jns
xchg
mov
rcrb
dec
testl
ss
push
or
pop
mov
mov
stos
sbb
bound
pop
lret
popa
pop
dec
mov
repnz
mov
mov
push
inc
in
and
popl
daa
inc
sbb
pushf
or
adc
inc
loop
mov
cmp
repnz
add
out
into
jne
mov
fisttpl
inc
cmp
gs
int
enter
inc
bound
lret
outsl
test
andl
xchg
out
dec
sbb
rcrb
jnp
jle
fcomip
test
and
cmp
push
xchg
shrb
lds
fdivrl
outsl
orl
pop
lea
inc
mov
iret
sub
stc
push
cmp
in
mov
push
xlat
outsb
inc
gs
adc
outsb
add
sbbb
and
cli
push
repnz
call
mov
pop
call
dec
xchg
repnz
inc
ficomps
subl
adc
mov
leave
pop
add
nop
out
jmp
movsl
cmp
sti
shlb
scas
push
lret
subb
imul
movsb
std
xchg
stos
int3
fs
lret
pop
loopne
aaa
iret
cmpsb
in
addr16
add
mov
cltd
mov
and
jne
fwait
sti
rclb
adc
gs
dec
in
mov
mov
jmp
xor
jecxz
lcall
ja
pop
clc
loopne
sub
add
jns
test
jle
dec
arpl
push
imul
or
ja
sbbl
mov
add
jns
lods
xchg
hlt
pop
push
orb
dec
or
imul
cmpl
js
push
jmp
mov
shrb
arpl
or
scas
fdivrl
cmpsl
popf
push
add
scas
pop
loopne
mov
outsb
cmp
test
aad
aad
ljmp
jno
xchg
aad
inc
mov
add
movsl
xor
in
push
push
imul
sahf
pop
mov
les
mov
adcl
xchg
xchg
push
dec
cmpsb
les
hlt
jns
testl
popf
popa
or
cld
lcall
lcall
inc
and
jg
out
xor
xor
mov
clc
add
movsl
leave
inc
fucomp
ja
fadd
loope
add
xchg
xlat
or
dec
add
cmp
clc
pop
sarl
out
lahf
and
outsl
push
push
ja
test
mov
out
sti
and
jns
sub
adc
sub
dec
icebp
les
aam
insb
push
cmp
inc
leave
mov
jmp
and
jnp
pop
xor
inc
xchg
pusha
push
sub
and
inc
out
ja
lock
mov
rcl
or
cmp
push
lahf
jmp
xchg
int3
hlt
inc
adc
xor
hlt
dec
test
lods
hlt
fwait
pop
jge
sbb
rcll
pop
leave
test
shrl
sub
or
popf
sbb
out
xor
jmp
fsts
loope
aaa
nop
ds
xor
pop
xor
mov
jo
cli
popa
fucomp
subb
outsl
ret
insl
movsb
sub
movsb
pop
xchg
cmpsb
mov
and
out
fwait
into
out
popa
int3
xor
ja
xor
pop
cmpsl
mov
jmp
xchg
aas
testb
lods
adc
sub
movsl
repnz
and
adc
inc
and
out
repz
xor
rorl
mov
pushf
dec
dec
out
add
aaa
bound
xchg
push
or
adc
addr16
lds
mov
jp
cli
shll
outsb
insb
mov
mov
stc
insl
sub
lea
aaa
or
in
add
leave
mov
dec
mov
adc
cmp
mov
in
sbbb
and
push
push
jnp
add
xor
scas
add
cltd
pushf
scas
lret
fnsave
std
jo
sbb
xor
bound
dec
mov
adc
or
stos
sub
fsubl
or
or
popl
xor
or
xchg
sarb
and
jae
outsl
sbb
dec
out
adc
das
add
mov
mov
adc
test
pusha
ret
mov
lahf
ss
sbb
mov
addr16
jnp
outsb
fucomip
scas
fisttpl
sub
add
fisubs
and
inc
lods
out
daa
inc
lock
cmp
mov
imul
dec
test
pop
push
bound
and
xchg
clc
popa
cmp
push
in
push
lock
mov
mov
adcl
sbbb
add
xchg
or
xchg
mov
cmp
clc
jae
push
fistl
push
rorb
lods
or
cmp
into
iretw
outsl
negl
loope
in
pusha
pop
mov
xor
sub
mov
push
mov
xchg
pop
addb
mov
jae
aaa
stos
sbb
push
or
sarb
cmp
cmpsl
cmp
xor
sub
add
ja
mov
sub
mov
add
ss
mov
push
cmp
sub
mov
add
in
jns
mov
cmp
mov
push
ds
push
int3
xchg
push
sbb
mov
xor
mov
pop
ds
subb
aaa
push
cmp
cmpsl
pushf
repnz
jmp
adc
and
inc
ja
dec
sub
sbb
fs
pop
jecxz
or
mov
xchg
icebp
sbb
pop
insl
mov
adc
sub
cmpsb
ljmp
mov
mov
mov
adc
push
sarl
scas
jl
int3
add
popf
mov
fwait
dec
pushf
fldt
aas
or
dec
loop
out
addr16
int
sarl
ja
sti
push
andb
sub
cwtl
and
out
sub
nop
repnz
loop
addr16
inc
movsb
push
inc
fisubrl
in
out
xchg
sub
stc
fwait
inc
inc
sti
mov
loope
jle
mov
mov
pop
std
jbe
push
in
adc
mov
enter
mov
sub
jmp
sub
jo
adc
int
in
sti
sbb
sub
sbb
sub
jge
sub
into
loop
sub
xor
push
and
xchg
cs
fldcw
or
sub
mov
push
stc
or
popa
mov
fidivrl
cmc
sbb
dec
mov
cmc
sbb
es
mov
pf2iw
mov
push
pop
imul
ss
and
loop
sbb
cwtl
push
cmp
sbb
jle
mov
xchg
icebp
sub
xchg
pop
mov
mov
aad
fisttps
loopne
sbb
lods
andl
inc
push
jp
scas
mov
insb
aas
push
push
pop
repz
mov
nop
dec
mov
jecxz
mov
inc
scas
push
repz
test
sbb
push
mov
mov
xor
decl
adc
mov
fbstp
mulb
dec
dec
jmp
cmp
dec
roll
fcoms
push
push
mov
sti
cmpsb
test
outsl
testb
je
psrlq
jecxz
cli
or
jle
push
fisubl
jb
flds
cld
xlat
repz
faddp
pop
rcrb
pop
adc
lret
or
test
xchg
adc
add
mov
fimull
xchg
xorb
mov
pop
adc
lods
pop
sahf
in
push
lods
xchg
out
out
icebp
cli
adc
sub
lahf
pop
jo
xor
aaa
push
push
add
mov
sbb
inc
rcl
lahf
aam
leave
or
cmp
mov
shll
test
cmp
inc
test
cmpsl
out
int3
pushf
sti
js
sub
dec
iret
rclb
ret
dec
pop
or
into
gs
roll
test
adc
test
add
mov
filds
push
int
icebp
insb
std
xchg
xchg
call
dec
sbb
push
jecxz
pop
pushf
daa
jns
aam
stos
inc
dec
jno
imul
insb
push
js
out
in
fcoml
std
lods
loop
scas
pop
dec
js
sahf
xchg
xor
hlt
out
or
shll
adc
mov
les
pop
or
dec
repz
push
aam
dec
scas
aad
sbb
shrl
sub
ffree
inc
dec
or
mov
sub
or
arpl
xor
addr16
popa
xchg
jnp
sub
push
or
lret
mov
rcrl
fcomp
jb
bound
xchg
and
aad
sahf
lret
push
aaa
inc
sub
inc
shl
sub
bndstx
or
loopne
mov
mov
insb
sub
inc
push
xor
decl
and
xorps
emms
xor
mov
xchg
insl
fsubrs
sbb
into
jno
inc
push
roll
cld
xchg
mov
add
in
dec
jecxz
or
push
xchg
repz
mov
movsbl
lods
fadds
mov
int
push
insl
inc
push
dec
int
jo
push
mov
xlat
mov
or
dec
ds
pop
or
ljmp
pop
insl
rcl
ret
pop
inc
aas
lods
dec
pop
fisubs
mov
and
inc
dec
jo
icebp
or
test
lods
mov
arpl
jo,pn
dec
mov
inc
shll
loopne
aad
jecxz
mov
pushf
sbb
mov
mov
cli
in
xchg
dec
mov
stos
inc
or
fdivrl
jo
iret
jns
ja
jl
push
mov
lea
jge
aam
add
cmc
pusha
xlat
xor
es
push
xchg
add
test
jmp
jmp
ljmp
mov
jne
sub
jl
test
inc
fucomip
test
and
std
out
scas
adc
es
pusha
ret
xchg
stc
dec
jno
outsb
jl
and
mov
test
arpl
in
and
add
xor
xchg
jge
or
leave
pusha
push
roll
pop
lea
push
mov
dec
ljmp
lock
lods
or
xchg
pop
gs
jmp
xchg
or
add
movsb
or
mov
mov
pop
out
js
inc
movsl
icebp
inc
aas
shl
mov
mov
fisttpl
mov
inc
inc
pushf
pop
sub
mov
and
psrad
push
sub
out
xor
dec
mov
rcll
cmp
push
or
je
sub
push
lahf
ja
mov
out
into
movsl
mov
cli
cmp
stos
orl
idivl
stos
and
es
jbe
sub
xchg
xchg
sbbb
jne
dec
cmp
cmp
jns
jnp
ret
mov
outsl
inc
cmpsb
jp
test
bound
add
pop
fcompp
scas
xchg
xor
into
int
loop
push
out
xor
sbb
decb
or
mov
cltd
or
sbb
fwait
push
mul
arpl
xchg
mov
jae
add
test
aas
into
mov
cmp
sub
cmc
dec
xchg
mov
int3
arpl
push
aaa
cli
or
ljmp
fisubs
out
push
cmc
add
mov
jne
cmpsb
push
out
in
xchg
fs
iret
sbb
jae
fisubs
jne
mov
cs
cmp
jle
adc
nop
xor
pushl
vpunpcklbw
into
jge
enter
mov
adc
lret
mov
pop
icebp
or
xor
lahf
sub
pop
or
cmp
idiv
pop
sub
std
adc
enter
fsubr
gs
jb
jae
pop
xor
or
stc
shrb
dec
popaw
testb
pop
lods
pop
out
xchg
loope
loop
and
jo
jno
hlt
xchg
lods
inc
std
outsl
add
loop
or
add
lahf
cmp
scas
inc
fs
arpl
dec
or
pop
lahf
mov
sahf
xor
scas
imul
mov
mov
fidivs
dec
add
push
xchg
and
dec
loope
fcomip
adc
pop
inc
inc
xchg
pop
shrl
pop
fcomi
lods
outsb
addr16
jge
mov
or
lock
ss
pop
lahf
sbb
cmp
pop
sub
xor
popa
mov
jg
lods
out
das
push
sbb
inc
inc
stos
fiaddl
jmp
movsb
cwtl
mov
lret
cmp
shlb
sahf
lret
cmp
lock
mov
ja
xor
or
insb
push
push
mov
ds
loope
aaa
or
push
dec
add
or
andb
out
aaa
and
jbe
mov
aaa
mov
aaa
lret
add
push
aaa
test
js
cltd
or
nop
adc
shr
repz
ret
lahf
and
popf
cwtl
popf
dec
mov
das
rcr
into
pop
mov
ljmp
inc
pop
out
xchg
jecxz
into
push
mov
movsl
imul
or
mov
sub
icebp
xor
jp
or
mov
adc
pop
mul
out
push
call
int
int
sti
and
jnp
fwait
and
xor
or
test
sub
cmp
add
mov
std
das
add
insb
js
add
or
insb
push
outsl
cmp
inc
jmp
stos
in
fwait
packuswb
test
xchg
xor
mov
add
fimull
pop
mov
jg
scas
mov
cmp
mov
call
or
pop
insl
adc
push
test
arpl
insl
loope
clc
sbb
or
jmp
in
push
stos
enter
movsl
cmpsl
into
mov
lea
rcll
je
inc
enter
sahf
lcall
cwtl
and
leave
xor
xor
js
jle
bound
pop
sahf
ss
xchg
sub
push
sbb
sub
ss
data16
pop
mov
sub
repz
rolb
push
mov
mov
ret
shlb
jno
mov
iret
lahf
pop
mov
mov
gs
fs
push
shr
push
mov
lods
add
sub
sahf
stc
lock
loopne
shrb
cmp
mov
outsb
pop
adc
inc
xchg
lret
add
imul
bnd
cmpl
adc
shrb
jecxz
pop
adc
and
sub
pop
lret
mov
xor
and
jbe
inc
mov
ds
hlt
scas
outsl
filds
dec
jnp
mov
rol
movsl
jne
or
jbe
mov
or
cmp
jp
nop
mov
addr16
push
jo
mov
fwait
lods
je
shll
roll
jmp
mov
aad
int3
popa
jne
inc
jmp
or
loopne
stc
xchg
lods
fbstp
push
jb
adcl
or
fsubl
pop
mov
rcrl
sbb
adc
ret
sbb
daa
shl
inc
sbb
dec
pushf
arpl
mov
out
shr
sub
dec
sbb
pushf
or
mov
pop
cmp
jo
addr16
inc
cmc
cmpsb
sbb
repz
or
imul
inc
sbb
in
inc
aad
or
sbb
js
fcomip
mov
add
and
int3
push
xor
jg
adc
das
push
test
or
cmp
enter
int3
test
mov
push
mov
cli
outsb
mov
inc
mov
push
sbb
leave
test
xchg
mov
push
lods
into
sbb
lea
bound
cmc
adc
scas
jle
andl
scas
push
outsl
xchg
pop
outsl
fstpt
pop
mov
push
jge
add
sti
mov
jns
pop
ret
dec
inc
push
and
mov
push
pop
filds
jg
mov
test
mov
hlt
mov
cmp
dec
or
hlt
mov
xor
adc
rcrl
xor
fsubr
lds
mov
jp
in
test
scas
fnstsw
push
mov
inc
dec
mov
dec
fbstp
dec
insb
xor
je
or
mov
mov
jae
pusha
or
xchg
and
adc
popf
movsb
mov
inc
insb
cmpsb
outsl
mov
jno
jmp
lea
jb
pop
sbb
push
dec
fs
int3
lock
shll
test
bound
ja
fsubrs
push
pop
sub
rcrb
mov
es
jge
imul
and
jle
and
in
dec
lock
sub
cmp
and
pusha
subb
or
ljmp
sahf
push
mov
fdivrl
xor
push
out
lcall
cwtl
gs
bound
mov
push
nop
xchg
cmp
roll
std
addl
je
add
or
push
ss
addr16
or
mov
pop
jge
ss
sbb
lods
lods
push
aad
mov
xor
call
orl
lock
push
lods
adc
lahf
subl
outsb
sbb
push
push
cli
mov
sbb
arpl
xchg
mov
cmc
inc
dec
mov
mov
out
lea
mov
push
imul
out
dec
pushf
jnp
push
aas
xchg
lea
fisubrl
sbb
mov
sbb
aad
and
movsl
cmp
jmp
cmp
pop
push
movsb
xor
sbb
jmp
add
cmp
adc
lret
out
stos
adc
hlt
jl
mov
addl
fwait
mov
mov
mul
insb
cld
push
arpl
mov
or
lods
int3
push
int
mov
out
mov
leave
fcompl
dec
xor
push
aaa
pop
jnp
push
movsb
pop
cmp
push
push
mov
repz
rorb
jmpw
push
push
shlb
xlat
js
enter
movsb
ljmp
sar
mov
sbb
iret
fstpl
pop
add
mov
pop
fstps
add
xchg
cli
cmpsb
mov
iret
jno
shll
les
jbe
jp
add
das
lds
sub
cltd
adc
add
lock
stos
or
xchg
imul
out
pusha
imul
jge
rcrb
xchg
mov
push
inc
test
aam
stos
or
jae
sub
adc
jbe
sub
or
leave
push
loop
push
jnp
inc
sbb
test
jb
ljmp
cmp
push
fwait
mov
aad
or
aas
push
cld
ds
mov
shr
movsb
jle
mov
loopne
inc
push
stos
es
jmp
xlat
or
les
mov
mov
popf
inc
fxch
aaa
insb
pusha
ret
pop
fstl
mov
adc
dec
aad
lods
arpl
fdivs
in
xorb
arpl
xlat
cmp
sarb
cmp
daa
stos
pushf
lods
jnp
ret
outsb
sbb
in
sbb
rclb
cld
xchg
inc
jl
xchg
cmc
cli
lret
mov
stc
sub
fs
fmul
mov
cmc
loopne
fistps
testl
or
xchg
add
lods
jb
push
fisubrl
sar
dec
pop
and
ljmp
cmp
out
mov
mov
movsb
ret
and
pop
push
add
andl
repz
adc
nop
out
loope
fdiv
push
sub
out
push
popa
loope
rcrl
mov
or
jecxz
lods
adc
rcll
std
mov
stc
into
popa
insl
fistpl
sbbb
out
push
rcrb
push
test
xchg
and
loopne
and
inc
outsb
sti
xchg
scas
sub
push
out
adc
arpl
aas
push
push
outsl
ficoms
cmpsl
cmp
adc
mov
jle
mov
movhps
inc
cmpsl
xor
ja
mov
sbb
dec
jg
adc
stc
mov
adcl
into
mov
mov
jecxz
xor
int3
push
push
stos
imul
sarl
xor
xor
daa
push
dec
mov
ret
divb
fistps
inc
jb
mov
cwtl
xchg
sbb
pop
cmpsl
mov
inc
sbb
jbe
xlat
jnp
mov
inc
fldenv
sbb
mov
inc
testl
int3
cld
and
ljmp
fidivl
scas
xor
cmp
jnp
arpl
and
popl
sbb
cld
dec
push
fistpll
shll
lret
jle
ret
lahf
add
cmp
mov
stos
inc
adc
xor
loope
cmp
cmp
aas
xchg
or
pop
add
loopne
mov
les
insb
and
mov
or
and
sub
jae
cmpsl
sahf
cmp
adc
mov
in
jbe
xor
mov
cmpsb
add
sub
jg
and
push
cmpsl
xor
stos
js
mov
inc
pop
mov
and
inc
xchg
out
mov
cwtl
push
push
cmpb
call
mull
inc
and
sub
fsubl
xor
push
test
xchg
loope
aad
mov
je
or
dec
insb
lds
popf
popf
das
out
sbb
in
and
test
mov
sahf
push
jnp
lret
sti
or
mov
mov
shlb
out
sahf
xchg
cmpsl
into
cmpb
lock
jl
mov
or
xlat
push
inc
pause
loopne
and
test
lcall
outsb
push
out
mov
lods
ja
lret
jmp
cmpb
out
pop
sahf
sub
rorl
test
bswap
fistpll
lahf
pushf
sarl
mov
and
pop
cmpl
dec
mov
pop
rcrb
add
cltd
jbe
cmpsb
sub
cltd
icebp
mov
mov
sub
mov
js
dec
pusha
out
cmp
stc
aam
orb
es
or
mov
push
mov
add
add
dec
mov
test
jo
sbb
filds
iret
stos
xor
sub
mov
js
pop
ss
test
or
xchg
cmp
sbb
sub
adc
ret
stos
xchg
mov
mov
insl
add
jmp
xchg
push
lcall
cltd
enter
ljmp
les
mov
in
outsb
sbb
dec
inc
or
xchg
sub
sbb
cs
jmp
jge
fsub
add
push
pop
cmc
xor
push
test
inc
and
in
filds
dec
mov
popf
lods
out
ljmp
cli
in
pop
repnz
sub
pop
das
xchg
pop
adc
mov
cmp
scas
cs
adc
pop
int
sub
and
loope
pop
add
fistpll
jge
outsb
add
xchg
insb
mov
adc
pop
cmpsb
stc
or
roll
or
jno
inc
into
orb
arpl
iret
xchg
adc
cmpsl
xchg
arpl
cmp
mov
ret
ljmp
out
pop
out
insl
cmp
lock
scas
mov
jae
ss
std
sbb
rol
push
test
and
dec
dec
mov
adcb
loop
or
lds
push
xchg
ljmp
jg
ss
cld
popf
jo
mov
xor
push
icebp
xor
sbb
sbbb
mov
repz
imul
cmpsl
and
jg
fldpi
aas
add
cwtl
pop
xor
push
inc
clc
and
push
es
push
cwtl
sbb
out
loope
xchg
inc
cmpxchg8b
mov
and
es
and
xor
bound
push
or
int
sarb
enter
xor
in
cltd
pushf
pop
clc
xor
in
mov
repnz
xchg
pop
jbe
sub
out
xchg
in
sbb
test
mov
sub
xor
pop
insl
add
outsb
lods
je
cmp
xlat
cmp
sub
and
cmp
movsl
mov
int3
int3
roll
pop
daa
pop
adc
divb
and
inc
xchg
mov
fs
movsl
cmp
sti
into
push
iret
cmp
cs
xchg
pop
add
dec
in
mov
imul
pop
dec
pop
dec
push
mov
jmp
es
mov
xchg
dec
push
add
jmp
subl
sti
push
push
imul
lcall
adc
pusha
or
xchg
sbb
rorl
mov
stc
sbb
cmp
pop
scas
mov
push
mov
sti
rcrb
rcl
xor
pop
jnp
inc
inc
ret
insb
cli
mov
jmp
dec
sahf
mov
cmpsl
aas
mov
sub
push
pop
icebp
test
js
outsb
or
pop
lods
mov
add
cmp
push
adc
roll
outsl
mov
mov
xchg
nop
jbe
mul
mov
mov
xchg
add
sarl
and
rclb
adc
jnp
pop
shlb
jno
cmpsl
xchg
mov
sub
jg
bound
sub
jbe
mov
stos
mov
movsb
test
fs
xchg
jne
push
pop
ljmp
cmpsb
push
sub
or
leave
int
add
push
jmp
sbb
dec
test
mov
dec
enter
fdiv
xchg
xchg
adc
out
repz
fnstenv
in
cltd
fisubs
push
lock
mov
sub
push
sbb
cs
outsl
xchg
cmp
xchg
xchg
sub
push
rclb
lret
lock
movlhps
and
push
cmp
stos
out
sub
push
aad
orl
push
dec
pusha
pusha
gs
push
fbstp
jnp
idivb
fidivrs
lcall
mov
scas
leave
mov
stos
xor
xchg
mov
mov
shll
fcompl
mov
sbb
xor
in
mov
lret
inc
inc
lret
jmp
jmp
loope
sub
dec
aam
icebp
popf
inc
and
mov
leave
enter
xchg
std
adc
mov
andb
push
lods
fisubs
insl
jecxz
mov
das
or
loope
push
bound
lahf
adc
rolb
cmpsb
pop
ret
fadds
pop
imulb
pusha
rcrb
addr16
jge
cmp
lcall
jno
lret
scas
push
fstpt
or
out
jbe
inc
daa
lds
mov
jle
arpl
leave
xadd
and
pop
mov
outsl
add
or
add
cmpsl
xor
mov
das
je
adc
jg
jbe
fiadds
add
jecxz
subb
jne
lret
jmp
mul
push
jmp
or
pop
cmpsl
xchg
inc
add
cmpsl
fisubrl
ljmp
push
dec
aas
or
xchg
mov
dec
dec
jge
cmp
mov
mull
pop
cmpsl
clc
movsb
int
jle
daa
dec
pop
shl
push
roll
insb
fwait
xchg
insb
add
fisubrs
push
sarb
mov
mov
cmp
push
xor
push
pop
jle
adc
cmp
jl
test
xor
loopne
roll
repnz
pop
frstor
mov
fnsave
sub
jmp
andps
mov
xlat
push
mov
mov
adc
adc
jo
std
pop
sbb
pop
icebp
and
js
jno
test
outsl
test
lcall
cwtl
jae
aad
push
lods
mov
cmp
jmp
sti
xor
jp
mov
ret
imul
and
insb
xor
jne
and
jne
mov
insl
ficomps
or
xor
jo,pt
sub
push
cli
xchg
les
inc
add
cmp
test
mov
fsubl
mov
xchg
pushf
pusha
sub
movq
outsl
popf
jl
and
mov
add
inc
inc
clc
and
jmp
add
pushf
cmpb
test
pop
mov
outsl
push
lea
sub
cli
imul
sub
adc
push
jne
mov
imul
mov
jb
sbb
pop
stc
cmp
sahf
out
sbb
imul
ret
bound
das
lds
adc
sub
dec
add
hlt
pop
mulb
lret
sti
jp
into
sub
orb
mov
cs
mov
fdivrl
movsb
jg
jle
rcr
mov
mov
mov
mov
push
scas
ds
repz
and
xor
inc
sbb
dec
pop
and
xor
and
xor
dec
mov
adc
in
dec
sub
adc
sbb
cmp
mov
mov
daa
cli
mov
mov
mov
xlat
jb
lds
sub
test
mov
loopne
das
adcb
mov
test
std
jo
js
out
cmp
cmp
out
add
push
inc
cmp
aaa
sahf
xor
push
push
fldt
test
cmp
sti
jecxz
outsb
mov
ret
pop
ljmp
mov
mov
and
out
or
jge
push
lock
nop
setge
adc
xor
lods
loop
insl
jmp
cltd
data16
aaa
pop
mov
adcl
mov
ljmp
push
mov
jecxz
jns
mov
sub
hlt
xor
js
lahf
test
add
test
xchg
fsubl
jo
test
xor
push
stc
cmp
push
aam
adc
sub
push
adc
andl
call
adc
loop
pop
lahf
or
fwait
push
das
jno
dec
xchg
icebp
aad
and
jecxz
push
pusha
mov
or
or
push
xor
insl
pushf
add
and
mov
ret
ja
push
rcrl
jno
fdivs
lds
out
sub
xchg
es
orb
or
cmp
cmpb
stos
inc
xlat
xchg
xor
pop
mov
mov
decb
xchg
pop
xor
pop
jbe
sahf
ds
rcl
lock
pop
push
sbb
mov
xchg
jns
xor
popa
sub
mov
jnp
mov
dec
xchg
add
cmp
adc
mulb
pop
sahf
push
imul
in
adc
clc
mov
mov
fisubs
sub
push
or
rcll
mov
shl
or
mov
sbb
or
cmp
stc
or
xor
push
in
pop
rcrl
out
jp
into
and
sub
stc
lods
lcall
sti
cmp
jle
mov
jmp
dec
mov
pusha
addr16
adcl
mov
mov
mov
ja
nop
inc
in
inc
dec
out
lret
idivb
mov
inc
and
insl
incb
adc
and
push
in
sub
cmpsl
sbb
fcompl
int
stc
insb
or
sahf
sbb
aam
xor
lock
loope
into
and
xchg
xchg
inc
fsubl
sahf
rorl
mov
arpl
mov
and
mov
push
jg
xchg
inc
aam
jle
fwait
jmp
in
and
cmp
xor
sti
sbb
scas
adc
xchg
mov
xchg
in
or
and
pop
jg
inc
fs
add
add
and
int
mov
jno
push
pop
ljmp
xor
jnp
dec
pop
mov
ljmp
test
fcoml
idivb
cmpsl
xor
and
mov
xor
cwtl
outsl
loop
adc
testb
jge
out
pop
mov
and
xchg
mov
ret
iret
js
jae
in
test
mov
fidivs
mov
jno
push
adc
filds
mov
test
push
fucomp
dec
and
cmpsl
inc
xor
aam
or
jl
ljmp
cmc
inc
add
or
lods
mov
stos
jns
cli
inc
jp
adc
sbb
gs
jo
cmc
sbb
push
xchg
sub
add
sub
mov
add
jno
ret
dec
cmp
clc
inc
std
mov
lods
jns
cltd
gs
xor
xchg
pop
repnz
and
mov
jb
cmc
add
mov
adc
negl
or
and
gs
push
imul
or
loope
loope
cld
pop
rolb
push
call
arpl
pop
scas
js
and
jl
aaa
notl
subb
add
jne
sbb
int3
and
jne
adc
sbb
paddw
fistps
pop
xchg
nop
add
ret
int
jecxz
jnp
mov
lock
jmp
push
xchg
or
lcall
and
addr16
scas
ret
jae
jne
jns
inc
jecxz
test
mov
lahf
cs
xchg
in
loopne
cwtl
fldt
push
or
cmp
lret
pop
xchg
cmp
dec
mov
mov
lahf
mov
xchg
nop
subl
and
sbb
add
mov
adc
fnsave
ficoms
cmp
test
xchg
adc
xchg
dec
mov
jae
lock
mov
repnz
popa
fcompl
test
fs
insl
jb
stos
mov
jnp
xorl
adc
movsl
int3
xchg
lret
cmp
xlat
lret
jge
pushf
mov
iret
jg
pop
xlat
mov
pop
jmp
lret
stc
and
and
sbb
cmp
mov
sbb
jne
out
cmp
ret
hlt
out
insb
imul
add
mov
xchg
test
inc
dec
outsb
jmp
loope
out
xchg
cli
push
lods
jmp
sub
repnz
adc
jl
mov
xchg
std
ficoml
jecxz
lds
in
lcall
pop
shlb
lock
xorl
add
into
repz
inc
mov
aaa
movsl
in
push
hlt
cwtl
jge
scas
jbe
add
cmp
push
cmpsl
enter
cmc
mov
or
and
or
fiadds
cmp
or
leave
jecxz
pusha
mov
das
jg
xor
mov
xor
cld
push
jo
into
out
or
outsb
and
pop
cwtl
mov
or
je
cmpsl
xor
xor
shlb
xor
mov
jnp
pop
clc
pop
push
sub
xchg
neg
cmp
push
sahf
sbb
dec
ss
dec
cmp
jl
jno
cmpsb
in
sbb
shrb
inc
pusha
pop
inc
cltd
jbe
les
shl
mov
das
sahf
lds
pop
insl
pop
pusha
dec
push
xor
mov
xchg
imul
xor
stos
sub
ficompl
leave
pusha
mov
jmp
int
jecxz
adc
dec
push
mov
cmp
mov
je
inc
fsubl
fisttps
or
mov
leave
stos
test
leave
dec
lea
mov
popf
pusha
fnsave
xor
adc
jae
fmull
sbb
inc
iret
fnstcw
mov
andb
insb
jbe
pop
arpl
push
add
dec
out
sub
mov
sub
jp
imul
xorb
cmp
or
dec
popl
mov
mov
int
divb
clc
jl
xlat
outsb
out
xor
or
mov
sub
or
xchg
ds
jae
inc
test
je
mov
outsb
adc
mov
cmpb
pop
jecxz
hlt
mov
subl
and
mov
push
out
add
mov
jnp
inc
fstpl
pop
fcomip
fs
inc
icebp
mov
jge
mov
lds
es
push
orb
mov
mov
test
mov
in
xor
fsubrs
pop
pushf
ret
mov
push
jmp
or
clc
and
ret
loop
sbb
sbb
imul
loope
das
outsl
dec
fcmovne
out
outsb
sub
xor
sbb
out
and
fwait
roll
inc
jns
add
and
stc
subb
dec
mov
fists
leave
adc
xchg
out
in
inc
imul
sub
cmpsb
push
adc
and
loop
ret
jg
pop
mov
cmpsl
xchg
add
inc
jo
xor
cmp
pusha
testl
dec
jl
sub
lret
push
je
jecxz
pop
sbb
sbbl
cmpsl
arpl
pop
jp
ficoms
ret
jle
sub
sahf
fldl
cmp
lock
xlat
cmc
cmpsl
cmp
pop
push
cmp
xchg
and
test
mov
mov
dec
gs
push
gs
xchg
insl
movsl
pop
int
iret
mov
addr16
int
mov
xor
and
and
call
adc
cmp
inc
inc
and
inc
hlt
stos
orl
push
xor
test
faddl
mov
xorb
stos
push
push
daa
mov
scas
inc
pop
orl
movsb
xor
inc
or
push
loope
rcrl
daa
or
ret
decb
jnp
xlat
pop
rolb
es
sbb
cmp
mull
inc
xchg
cmp
rorb
sti
adc
mov
popf
jnp
sub
stos
in
sbb
sub
lcall
mov
mov
add
aaa
sub
jle
mov
test
and
je
out
mov
jmp
jle
lock
add
popf
dec
mov
cld
outsl
cs
loopne
enter
fldenv
movsl
aas
sbb
daa
aam
out
mov
or
lcall
out
into
popf
push
test
sbb
imul
inc
out
stc
je
jle
jns
inc
push
das
cwtl
stos
fisubrs
push
cmp
test
fadds
add
enter
jae
roll
mov
hlt
jmp
jg
lret
add
cmp
loopne
dec
or
jnp
inc
xor
mov
sbb
push
xchg
pop
mov
sbb
mov
cmp
xchg
and
xchg
add
imull
cs
or
ds
mov
out
je
es
mov
cmp
psubsb
ljmp
adc
or
inc
ds
mov
and
lds
mov
lock
cmpsl
cmp
xchg
loope
xlat
js
pushf
fwait
pop
pusha
addb
cmc
mov
or
cltd
add
movsl
adc
aaa
push
movsb
mov
cwtl
pop
push
jle
xchg
shll
sub
out
leave
xchg
mov
inc
push
jbe
ja
test
sub
fsubr
std
adc
or
outsl
jnp
add
and
icebp
iret
add
mov
scas
ret
cmc
mov
sbb
push
push
xlat
push
pop
or
pop
dec
push
add
mov
push
mov
push
pop
push
sub
mov
ljmp
mov
dec
out
add
int3
inc
test
in
sbb
gs
popa
pop
xlat
xchg
sti
adc
mov
repnz
clc
sub
repnz
in
shll
sbb
or
in
insl
jae
loope
mov
sbb
or
mov
mov
mov
in
inc
xchg
pop
js
scas
mov
pop
mov
ss
add
push
pop
lods
jo
repnz
push
insb
outsb
cld
inc
pop
pushf
aas
rolb
mov
loopne
sub
andl
xor
andl
or
xlat
test
adc
jnp
jmp
xchg
jl
ja
dec
cmc
cmp
scas
aas
sbb
gs
sub
push
xlat
repz
mov
ja
push
and
push
int3
mov
jg
cmpsl
sbb
pop
stos
jmp
cmp
xchg
addr16
push
push
mov
fs
mov
in
addr16
xchg
xchg
out
popa
xchg
xor
arpl
or
fucomp
addr16
mov
cmpsl
loopne
psadbw
aad
add
push
mov
jo
ljmp
cmc
jl
call
dec
popa
mov
in
rorl
pop
xor
jg
add
add
dec
mov
sbb
loop
cmp
mov
mov
xor
mov
ret
sbb
iret
cmp
imul
sar
xor
sbbb
push
adc
ljmp
sub
lret
daa
lods
add
push
mov
out
lahf
cmp
sub
mov
or
sarb
cmp
cmp
adc
xor
xchg
mov
lcall
push
jmp
cmpl
pop
xchg
mov
sub
iret
xorb
subb
xchg
adc
mov
cmp
les
fdivrl
fisubrl
xchg
cli
push
jge
mov
add
cltd
mov
xor
cmp
shrl
dec
push
insb
add
sarb
rcl
iret
or
mov
dec
arpl
mov
imul
std
ja
insb
fisttps
jbe
popf
jo
xor
xchg
mov
pop
addr16
or
sti
test
movsb
hlt
jp
mov
inc
lret
jb
mov
in
adc
aas
cmpsl
cli
jne
insb
lret
cltd
test
xchg
and
pop
stos
shll
pop
jle
sub
or
test
rclb
popa
filds
push
int3
or
mov
or
push
jle
mov
cmp
cmp
sbb
inc
loope
mov
or
lock
in
dec
repz
outsb
sub
jb
xchg
aaa
mov
push
cmc
push
cmp
jge
test
cmpsb
pusha
xor
lods
in
stc
je
cli
mov
cmp
sub
dec
stc
jbe
inc
lds
popf
and
or
cltd
popf
adc
inc
and
out
cld
push
mov
adc
mov
adc
cmc
push
cmpsl
xor
ljmp
cli
out
mov
mov
mov
or
xchg
movhlps
mov
push
out
cmc
mov
in
mov
ja
push
insl
in
jl
divb
fdivrl
pop
hlt
rol
aas
jg
dec
shlb
popa
pop
dec
outsb
xor
ret
lret
adc
pop
insb
pop
mov
pop
pop
insl
imul
not
mov
push
xchg
cwtl
pop
ss
out
gs
cmp
push
scas
jg
sbb
iret
bound
and
cmp
add
repz
or
movsl
sbb
push
inc
jbe
push
xrelease
mov
mov
out
dec
or
out
dec
cmpsb
fists
orl
push
test
addb
sub
cwtl
sub
insb
cmp
cmpsl
shll
jae
ss
into
add
jno
int
sbbl
shlb
mov
pop
test
incl
xchg
outsb
lock
sbb
stc
push
das
jg,pt
arpl
cmpsb
cmp
mov
cmp
pop
fcom
and
hlt
push
popa
faddl
jb
shll
dec
add
xchg
jle
sbb
addr16
loope
add
jae
jne
enter
sbb
jecxz
and
subb
insl
inc
in
outsl
xlat
fdiv
lcall
loop
push
movsb
add
scas
in
imul
daa
ljmp
lds
push
and
loopne
sbb
dec
insb
out
mov
pop
mov
push
dec
shlb
stos
aad
adc
clc
inc
sub
subl
fsubr
fsubrs
ret
xchg
int
sbb
lea
mov
cwtl
jg
push
insb
inc
mov
mov
add
xor
cwtl
das
int3
popl
mov
mov
sub
stos
bound
shlb
arpl
sbb
aas
outsb
loope
pop
stos
cmp
mov
pop
pusha
js
pop
jge
fistpll
daa
lods
sbb
push
inc
cmp
in
push
mov
or
nop
mov
les
add
lods
jg
sti
jbe
sub
inc
add
dec
call
mov
xchg
push
mov
fwait
imul
lock
cmpsl
aam
fdivs
filds
lds
std
pop
hlt
out
push
push
fidivs
push
pop
call
aas
adc
pop
xchg
sbb
insl
sbb
outsb
inc
cld
xchg
or
jle
push
fwait
jo
push
lds
adc
and
sbb
out
xor
xchg
jp
xor
mov
push
cmp
pop
dec
xchg
cmpl
and
daa
cli
imul
cld
iret
sbb
std
in
cmpl
sbb
jae
adc
pop
divb
aas
xchg
dec
scas
test
insb
add
ds
aaa
popf
push
aas
jecxz
ds
mov
jae
movsb
stos
sbb
pop
repnz
mov
out
inc
lret
out
mov
sarl
add
mov
je
sub
cwtl
stos
call
sbb
or
js
push
movsl
cld
or
add
jg
mov
into
lods
ja
test
fisubrl
fcmove
xor
ficoms
mov
aaa
or
stos
es
sahf
sbbl
out
imul
xor
fisubrl
sbb
fwait
cmc
arpl
xor
sub
push
inc
fiaddl
mov
cwtl
incb
stos
fnop
test
test
push
push
cltd
push
xchg
mov
scas
js
dec
in
popl
mov
fcmovnbe
aad
cltd
mov
lret
sbb
mov
cmp
orl
fwait
ljmp
xchg
mov
nop
push
test
dec
pop
add
inc
popf
xor
inc
mov
pop
dec
adc
popa
in
jns
es
and
sub
divb
enter
aam
push
jae
cwtl
out
sbb
inc
jmp
stc
pop
push
lods
pop
je
cmpb
sbb
pushf
jb
add
sbb
xlat
pop
push
cmpsb
cmp
pop
ljmp
mov
jecxz
hlt
mov
lock
cld
xchg
test
jo
push
repnz
cmp
add
imul
cmc
outsb
xchg
add
sahf
and
mov
mov
loop
and
fsubs
dec
cld
sahf
addr16
sbb
xor
and
dec
pop
hlt
outsb
mov
jl
movsb
cmp
ret
push
cmpsl
cmp
xchg
dec
les
mov
rcr
mov
stos
iret
sbb
sub
sub
jo
jmp
cld
jecxz
test
sbb
mov
and
mov
lock
lods
test
int3
push
jne
add
adc
jp
cld
cmpsl
test
push
add
xchg
clc
fs
sub
pminub
lahf
pop
xchg
jb
add
jne
lea
pop
ss
ja
dec
fistl
pusha
out
inc
sub
scas
cmp
jl
sbb
ret
hlt
mov
scas
call
repnz
test
cmp
lret
jl
cs
mov
inc
cld
inc
mov
sub
pop
pop
cwtl
das
or
pop
sub
mov
and
rorb
es
test
lock
inc
push
repnz
scas
fistl
je
movsl
mov
stc
into
push
movsb
sahf
lods
aad
pop
fsubp
pop
jmp
mov
push
inc
jecxz
into
cmp
aaa
push
test
push
insl
stc
pusha
shrl
mov
inc
jp
hlt
add
rclb
add
mov
xor
cmp
mov
mov
lahf
pop
and
pop
pop
in
testb
sbb
inc
ljmp
adc
and
nop
stos
add
arpl
push
jo
jge
xor
inc
pop
movsl
cmp
int
aaa
xor
mov
jb
sbb
scas
or
pop
mov
fs
or
ljmp
lods
jmp
or
fwait
pop
inc
jecxz
cmp
and
movsl
cmc
rcrl
shll
or
mov
adc
sub
movsb
sbb
mov
cmp
mov
aad
push
ret
lcall
inc
dec
pop
imul
and
or
dec
and
sbb
jns
sub
xchg
mov
mov
inc
shlb
mov
cmp
cmp
or
outsl
mov
jo
mov
xor
popa
ret
xchg
mov
pop
dec
pop
xchg
out
daa
mov
fsubrp
jno
rclb
loope
jg
or
nop
mov
popf
nop
faddl
aas
test
mov
cmc
xor
jno
jl
adc
xchg
push
popa
lcall
mov
fstl
stos
and
mov
scas
or
or
cmp
or
out
into
in
mov
and
call
adc
sub
cmp
pop
dec
sbb
inc
adc
adc
ss
out
imul
jns
add
lahf
jns
inc
inc
icebp
movsl
lock
std
popa
dec
sub
pushf
das
mov
sahf
dec
jo
test
lock
push
pop
adc
cmp
sub
pop
push
cmp
andl
adcb
lods
je
sbb
sahf
jbe
inc
jle
popa
cmpsb
cmpsl
sbb
mov
mov
notl
stos
test
arpl
xor
push
test
clc
jnp
inc
jmp
fxch
adc
shl
test
push
pop
incb
lock
int
xor
pop
es
mov
and
cmp
ljmp
dec
mov
imul
pusha
and
test
mov
stos
dec
leave
mov
mov
shrb
add
mov
mov
mov
mov
dec
xchg
add
cmp
dec
in
mov
cmp
mov
repnz
cmp
subb
aam
insb
ret
sbb
int
movsb
inc
andl
lahf
add
add
xchg
push
cwtl
mov
pop
popf
mov
or
add
out
jno
imul
add
and
push
push
push
test
xchg
call
sub
inc
out
dec
sub
dec
mov
cmp
sbb
scas
jb
xor
test
cmp
jo
adc
arpl
dec
jecxz
out
sbb
dec
adc
add
pop
or
fiadds
pop
ret
adc
fs
icebp
push
testl
or
outsb
add
stos
xchg
jmp
dec
cmpsl
sbb
jns
lcall
jmp
mul
mov
stos
xor
insl
push
xchg
sub
insb
or
aaa
lods
mov
push
fidivl
call
mov
out
inc
mov
in
orl
shrb
mov
lock
sbb
lods
pop
mov
outsl
ret
das
add
pop
xchg
mov
out
call
cmp
sbb
jo
adc
xchg
int3
data16
mov
loopne
xor
jmp
mov
mov
inc
in
xchg
aaa
clc
push
repz
stos
mov
cmp
dec
jo
frstor
mov
out
sbb
ret
mov
ss
cld
fdivl
out
jns
and
mov
fsubrl
and
in
xor
test
loopne
outsb
xchg
sbb
fnstsw
pop
push
jno
sbb
cmpsl
nop
mov
pop
lcall
and
daa
lret
sti
inc
out
add
adc
jbe
jnp
mov
stc
dec
sub
rcrl
mov
xlat
jnp
es
pop
cmp
icebp
adc
in
sbbl
mov
inc
xchg
xor
loope
cmp
dec
xor
aad
imull
scas
loopne
mov
inc
and
pop
scas
sub
add
jle
mov
test
cmp
or
mov
or
lea
ret
dec
push
mov
fildl
adc
in
daa
mov
xchg
aam
fs
imul
jp
mov
int
mov
and
int3
xchg
sub
xchg
sbb
ret
sarl
adc
test
movd
jmp
push
sbb
add
enter
xor
xor
movl
es
xor
ss
adc
lods
xchg
ja
sahf
cli
sub
or
push
scas
and
jl
inc
inc
cmp
ja
inc
fst
inc
cmp
pop
hlt
data16
daa
test
fwait
xor
or
pop
sbb
fbld
cmp
adc
outsl
cld
rcrl
jne
inc
lret
cmp
and
cmp
cwtl
decl
fldenv
dec
push
mov
sub
pop
in
out
imul
sbb
stc
fstps
loopne
sub
in
sarl
dec
mov
xchg
mov
pop
scas
push
addb
adc
std
dec
sti
popl
in
cmpsb
dec
jo
sbb
inc
xor
adc
mov
cwtl
test
lret
sahf
xchg
jmp
cmp
add
ret
mov
jno
and
aam
testb
in
popf
addr16
sbb
movb
sub
pop
cwtl
mov
clc
jnp
iret
push
fwait
adc
fists
xor
and
in
inc
pop
pop
push
mov
stc
popf
jbe
sub
mov
out
mov
sarb
mov
or
into
cwtl
jmp
dec
pusha
sub
daa
daa
mov
mov
adc
dec
dec
mov
mov
loop
push
jnp
lock
repnz
jnp
push
pop
outsb
stos
xor
or
mov
xor
sub
and
xor
jb
out
pusha
push
push
lret
sub
cmpsb
enter
cmpsl
cmp
insb
xlat
les
push
outsl
push
jae
jecxz
mov
lret
jmp
add
repz
sbb
in
lret
pusha
loop
dec
mov
add
xor
insl
iret
stc
adc
add
aaa
jne
sub
mov
std
insl
ljmp
out
shlb
popf
lret
cmp
sarb
or
cld
inc
ret
cmpsl
mov
xchg
pop
xor
mov
or
jl
xor
mov
cmp
rcrb
dec
jmp
sahf
mov
setp
cmpb
lds
cmp
shr
push
negb
add
addl
dec
je
mov
stc
and
sub
scas
add
addl
cwtl
and
mov
rclb
in
ret
rcr
in
mov
pop
in
dec
stos
pop
shr
inc
mov
pop
mov
mov
mov
pop
mov
subb
push
push
pop
std
xchg
imul
jo
add
out
adc
inc
pop
sahf
or
sbb
testl
or
or
sti
xlat
mov
es
out
sbb
sbb
and
mov
addr16
ret
pop
jae
lret
repnz
bound
adc
shll
xchg
mov
int
mov
push
in
mov
sti
xor
pop
inc
out
xor
push
xchg
mov
cmp
mov
loopne
adc
imul
sbb
add
ret
jbe
sti
data16
xor
sarb
negl
add
mov
inc
lds
out
xchg
outsb
scas
or
dec
out
mov
mov
mov
es
adc
or
jne
cmp
popl
adc
jo
ss
jge
cltd
xchg
adc
dec
call
push
stos
out
mov
xor
popa
cmp
fcomps
pop
clc
and
insl
outsl
mov
ret
push
cs
adc
jnp
mov
xchg
rol
cmp
mov
fcompl
lock
mov
mov
jge
mov
mov
add
mov
xor
das
out
sub
mov
inc
mov
xor
jecxz
dec
dec
mov
sub
push
mov
ret
repz
shrb
adc
or
scas
jmp
push
jno
cmp
lcall
cld
sub
xchg
std
cmp
xchg
and
jno
pop
push
mov
icebp
dec
shll
adc
insl
jb
hlt
mov
ret
and
inc
cmp
ss
sbb
inc
cmp
aam
pop
in
sbb
inc
or
mov
push
fs
sbbb
push
mov
adc
pop
pusha
lds
testl
mov
cmp
cli
push
jmp
imul
mov
sbb
add
hlt
adc
xor
jno
push
call
stc
stc
push
mov
mov
stc
or
dec
fstpt
out
test
popa
out
push
jge
push
movsb
enterw
sbb
les
cmp
movsb
test
sbb
dec
cmc
adc
sbb
jmp
aaa
xchg
dec
cltd
mov
sarb
pop
fdivl
mov
js
sti
loope
pusha
xor
xchg
jp
ja
and
xchg
std
xchg
cmpsb
xchg
dec
sub
xchg
inc
mov
fildl
movsl
inc
mov
rolb
out
sbb
adc
mov
into
int3
call
adc
mov
in
ljmp
mov
iret
jae
jge
addb
adc
pop
pop
aas
rcl
aam
ds
jno
rcl
push
andb
jge
mov
push
test
dec
int3
mov
push
adc
popf
fdivrs
jb
std
je
sbb
adc
test
xchg
sub
lea
sbbb
jle
out
add
pop
dec
pop
jne
dec
pop
mov
fbld
nop
and
cmpsb
xchg
cwtl
push
stos
in
icebp
mov
xor
stos
mov
inc
sub
nop
jge
dec
das
jge
or
push
cltd
cmc
fists
and
aaa
les
pop
push
lods
add
ja
dec
adc
xchg
imul
fistpll
int
xchg
jmp
mov
lahf
sub
movsl
cmp
sbb
hlt
sbb
stos
dec
mov
je
hlt
and
push
adc
push
pop
adc
and
pop
hlt
mov
es
xor
push
inc
pop
cmp
out
pop
fdivl
or
pop
aam
xor
push
test
inc
jmp
cmpsl
xchg
aam
aad
adc
sbb
out
scas
bound
cmp
sub
pop
pop
sahf
cmovb
fdivrs
and
dec
or
test
in
xor
dec
fisttpl
mov
sbb
inc
outsb
lods
mov
lock
xorl
mov
test
dec
sti
jae
or
inc
xlat
das
data16
loop
push
cmp
mov
gs
test
imul
sbb
popa
movsl
sti
movsb
pop
icebp
dec
mov
inc
pop
lods
xor
pop
pusha
ljmp
jbe
push
jle
cmpsb
ret
sbb
ja
or
jae
jnp
push
inc
or
pop
adc
and
push
movsl
mov
adc
test
sub
lods
out
pop
icebp
lret
jmp
mov
xchg
loopne
and
test
dec
clc
xor
lret
pop
ja
sti
or
aam
daa
and
or
cltd
inc
mov
mov
fnstcw
xorl
and
jl
out
lahf
ljmp
je
test
sub
push
push
and
mov
pop
fldt
and
aas
jl
mov
arpl
int3
adc
cli
fisttps
rcrl
xchg
popa
push
rol
pop
negb
jns
outsl
mov
mov
andb
lahf
mov
mov
mov
fwait
mov
daa
cmpsb
les
lret
xchg
mov
and
mov
jg
in
and
pop
lock
mov
push
adc
push
push
mov
jecxz
jns
lods
sbb
gs
jbe
and
test
or
shl
or
data16
inc
mov
mov
scas
jns
js
xchg
mov
jbe
pushf
mov
xor
fldenv
or
mov
cmp
fcompl
mov
aaa
imul
inc
mov
in
jae
xchg
mov
popa
adcl
push
xlat
cs
xlat
mov
test
iret
inc
fadd
gs
not
aad
mov
adc
shll
pop
ljmp
jo
ffreep
in
add
mov
jge
jecxz
push
cmc
push
cmp
fisubrs
lcall
cmpl
add
mov
push
loop
stos
es
aaa
push
inc
pop
mov
push
fistl
lret
push
loope
add
scas
mov
add
call
inc
lahf
xchg
daa
or
sub
mov
mulb
xchg
dec
lret
pop
jno
mov
mov
movsb
test
or
or
xor
out
sub
mov
inc
movsb
xchg
loop
xchg
iret
xchg
jno
mov
adc
mov
fs
xor
add
rcl
or
mov
pop
insl
add
test
ret
cmpsb
xchg
fs
insl
enter
imull
lea
xor
xchg
imul
lea
outsl
lret
push
cmpl
call
movsb
sub
push
pop
popa
dec
sub
xchg
sub
test
scas
xchg
sub
scas
aad
mov
ficoms
mov
fistpl
nop
cld
xor
stos
sub
fcmovne
add
cmp
rcrl
xor
push
test
aam
mov
ret
aas
sub
in
ja
jle
scas
subl
cmp
into
out
bound
fwait
pop
and
movsb
outsl
aas
int3
xchg
sub
adc
cld
inc
xor
xchg
sahf
pop
and
and
sbb
dec
inc
arpl
pop
jnp
adc
or
cmp
iret
rclb
clc
or
fidivrs
stos
or
leave
xchg
ja
dec
pop
xlat
adc
cmc
lcall
iret
int
out
into
mov
sub
pop
adcb
push
jbe
mov
push
outsb
mov
das
fsubr
pop
mov
daa
mov
lahf
cmpsl
jp
idivl
inc
int
fs
addb
rorb
sbb
cltd
stos
mov
mov
mov
push
and
fisubrl
inc
or
decl
jg
decl
push
jb
dec
pop
out
sarl
cmp
mov
pop
lret
cmp
or
or
dec
mov
mov
fidivs
test
xchg
shll
sbb
xchg
fidivrl
test
aas
push
sbb
xchg
lret
adc
jnp
test
cmp
inc
sarb
push
test
cmp
popa
xchg
cmp
rcrl
mov
daa
lea
xor
cmpsl
loopne
or
ljmp
into
fiaddl
cmp
out
jno
pop
mov
fdivs
mov
sbbb
test
aas
lahf
adc
outsl
fnstsw
out
popf
arpl
rcll
push
scas
shrl
imul
sbb
inc
and
gs
mov
andl
adc
xlat
xchg
xchg
out
int3
pop
in
call
cmp
outsb
adc
cmp
andb
cs
mov
jle
mov
pop
cltd
adc
pusha
add
call
out
gs
cmp
lea
jmp
lret
cld
pop
lods
jnp
shr
and
sbb
mov
or
sbbb
jge
sub
lods
lds
dec
dec
fildll
in
push
sbb
in
popa
repz
dec
pop
inc
shll
sbb
shlb
sbb
push
dec
cmpsl
mov
or
mov
and
adc
fdivrs
out
cmp
fisubrs
sahf
mov
xchg
aam
js
mov
push
icebp
cmp
pop
inc
mov
repnz
xor
testl
in
pop
xlat
out
stos
mov
cltd
push
or
mov
negb
bnd
roll
sbb
mov
test
xchg
jbe
mov
dec
pop
jp,pt
les
mov
mov
add
adc
mov
aad
xor
bound
daa
lcall
sbb
xchg
push
xchg
outsb
adcb
loope
inc
lods
xor
fdivp
add
cmc
test
data16
jo
push
mov
inc
dec
leave
mov
je
push
inc
jne
adcl
andl
cwtl
xchg
push
lods
sarl
shll
sbb
push
lret
loopne
cmpsl
popa
int3
xor
cmpsl
push
out
scas
dec
fistps
ds
add
lods
push
mov
pop
xor
and
nop
adc
fs
scas
push
lret
dec
xor
mov
inc
cmp
cmp
shl
repnz
mov
scas
pop
inc
and
mov
mov
push
lds
inc
lods
add
xlat
adc
icebp
inc
mov
pop
call
or
insl
cmp
sub
mov
je
inc
pop
sbb
xchg
sub
jge
sti
sbb
sbb
ret
mov
jb
push
xchg
add
scas
cmpsl
scas
push
sub
mov
sahf
jno
inc
shlb
clc
push
adc
sbb
fidivrl
popf
addl
add
add
test
add
cmp
je
scas
std
ljmp
pop
fnstsw
sbb
into
mov
lock
inc
aad
enter
push
lods
iret
das
fwait
add
jmp
in
cmp
daa
mov
inc
xchg
repz
mov
lods
aad
fstl
fs
loop
pop
inc
jmp
xor
cs
rclb
xchg
mov
add
imull
mov
mov
add
xor
sti
stos
xor
xchg
push
fdivrl
mov
sub
dec
push
call
scas
add
adc
ljmp
fdivs
dec
mov
sbb
or
in
hlt
add
sbb
add
in
jmp
loope,pt
cmc
jle
adc
adc
loope
mov
imul
jnp
lahf
or
test
ja
out
mov
int3
cmp
les
cmp
push
outsl
pop
sub
xor
test
mov
push
fdivs
sub
out
imul
fistps
xchg
xor
popl
mov
fmull
orb
and
cs
push
and
bound
sub
adc
sti
or
xchg
fildl
insb
mov
fmul
and
loop
pop
push
xor
jle
jle
sbb
mov
mov
loopne
hlt
pop
pop
cmc
daa
inc
pusha
dec
and
mov
aam
cmp
iret
mov
lds
pop
push
mov
cmpsb
pop
cmp
push
mov
ljmp
sti
push
outsb
inc
mov
mov
xchg
int3
sbb
cmp
fs
cmpsb
cmpl
xor
push
insl
test
adc
jnp
mov
in
sbb
arpl
xchg
jl
mov
popf
jo
aaa
rcrl
push
mov
out
stc
mov
test
das
push
sub
sub
inc
js
lahf
or
mov
subl
sbb
and
dec
mov
jbe
xor
pushl
jl
adc
add
or
sub
mov
xchg
fsubrl
push
xor
cmpb
sub
das
pop
movsb
sub
adc
pop
fsubrs
lret
notl
repnz
loope
loop
ds
jl
loop
daa
ss
jmp
xchg
loopne
jbe
mov
add
lahf
cmp
dec
inc
bnd
ja
cs
mov
mov
lahf
and
es
rorb
ss
movsl
addr16
enter
int
int
jmp
push
test
inc
aad
jne
cmpsb
inc
jecxz
pushf
addb
or
xchg
enter
jbe
push
in
pop
mov
jne
mov
jl
ds
nop
frstor
negb
xchg
mov
int3
repz
fwait
mov
lahf
push
repnz
inc
or
out
testl
cmp
sbb
gs
add
or
and
popf
or
movsb
stos
jmp
xorl
lods
addr16
jo
add
xchg
sub
stos
lods
test
pop
stos
lahf
mov
sbb
add
in
dec
int3
movsl
mov
fnstcw
iret
into
xchg
lret
xor
fcoml
sub
adc
adc
dec
mov
in
sub
push
xchg
and
ja
cmp
lods
mov
xchg
in
outsl
push
sbb
push
sub
sti
fbstp
xor
inc
in
lahf
ds
mov
ret
dec
shll
sub
xchg
xor
xchg
jmp
pusha
not
or
cmp
sti
inc
and
and
outsl
lcall
mov
sub
loopne
push
adc
scas
fdivl
and
mov
shl
stos
mov
inc
das
fsubrs
orl
imul
std
cmp
ja
or
sub
loopne
loope
jb
xchg
xchg
inc
lcall
test
inc
pop
ja
gs
push
sbb
and
clc
mov
jg
outsl
mov
xlat
push
ljmp
inc
mov
cli
jp
sbb
jae
iret
xchg
into
enter
pop
lods
fnstsw
ja
fisttpl
inc
fstl
shl
je
js
ret
xchg
cmp
lock
jb
scas
mov
or
jge
popf
jg
repz
push
pushf
jnp
add
jl
push
or
test
out
push
vcmppd
js
arpl
les
add
xchg
pop
outsl
add
mov
call
pop
call
cwtl
cmpsl
or
int
mov
jne
popf
xchg
dec
jmp
adc
pop
dec
dec
out
or
test
jp
xor
jmp
xchg
popa
sbb
fstl
mov
or
push
jge
popa
pusha
sahf
jp
jbe
mov
lock
sub
mov
push
jl
leave
dec
sub
mov
mov
imul
push
xchg
test
ret
pop
int3
loop
cmc
jl
mov
insb
adc
sahf
data16
pop
fdivrs
jmp
jnp
or
and
mov
sbb
ja
les
xchg
xchg
repnz
pop
jbe
loope
jnp
mov
hlt
xchg
aaa
nop
sti
or
or
movsb
js
inc
xlat
sub
repz
aaa
add
pop
pop
ljmp
gs
nop
or
andl
lds
ja
inc
mov
jb
mov
lahf
pop
cmc
mov
cltd
dec
dec
ficompl
cltd
jl
jecxz
mov
and
addr16
push
mov
loope
mov
dec
mov
inc
jnp
hlt
xchg
jl
aad
mov
mov
mov
xor
dec
test
loopne
lock
add
insl
mov
push
push
sbb
cld
inc
lcall
jns
in
or
mov
mov
cmpsl
mov
xchg
push
in
mov
pop
pand
or
or
and
xchg
aaa
inc
xor
push
mov
xchg
sub
or
cmpsl
mov
jecxz
adc
or
push
inc
flds
testb
add
int3
mov
out
pop
xor
leave
sbb
cwtl
dec
repnz
lods
pop
daa
cwtl
jae
jmp
dec
rcrl
mov
jecxz
mov
out
push
sbb
shrl
sbb
add
out
xchg
and
mov
dec
lods
push
insb
fildll
pop
mov
xlat
daa
jle
cmp
in
xchg
push
aas
cwtl
jbe
outsb
pop
add
int3
stc
repnz
fsubs
sub
mov
filds
cltd
adc
and
sub
add
stos
inc
imul
mov
xor
push
repz
movl
inc
dec
or
pushw
jno
fldenv
dec
test
jmp
sbb
push
adc
and
adc
sti
into
mov
data16
das
loopne
dec
or
ret
clc
inc
sbb
dec
in
daa
jg
push
insl
int
ljmp
jb
cmp
push
add
inc
add
mov
xchg
scas
roll
daa
mov
cmpsl
addr16
repz
cmp
mov
inc
jl
inc
fsubrl
nop
mov
fldt
int
pusha
cld
and
mov
aad
pop
divb
fbld
jmp
loope
lahf
shrb
mov
aas
iret
cmpsb
imull
les
cmpsb
and
pop
stos
es
sbb
pop
popf
mov
or
pop
push
push
add
push
shll
jbe
repnz
leave
popl
test
cli
push
fsts
fcom
pushf
sbb
or
sbb
and
aam
inc
inc
and
out
lea
das
adc
jns
pop
mov
and
or
and
inc
sbb
lea
mov
or
int
insb
negb
jecxz
and
or
cmp
bnd
sti
dec
dec
sbb
dec
nop
aad
inc
js
push
ljmp
mov
sub
mov
lea
mov
lcall
and
mov
adc
inc
cmc
mov
movsl
pop
inc
fcomps
sbb
cmp
jge
rol
sahf
adc
inc
cli
adcb
aaa
hlt
andl
in
push
movsl
hlt
or
imul
lock
test
push
and
stos
sub
out
clc
push
insb
sub
jl
lret
jno
mov
fldenv
out
js
je
and
add
xchg
push
test
insb
adc
adc
ret
xchg
je
aad
lods
or
sub
lea
inc
jno
popl
outsl
xchg
sbb
dec
and
inc
and
in
or
ljmp
cmp
inc
pop
mov
xlat
repz
fadds
out
sub
jne
and
leave
pusha
or
jl
movsb
out
push
ret
stos
cmp
jg
pop
out
dec
and
scas
into
push
mov
push
aas
loop
cld
jg
mov
jmp
xlat
cltd
mov
je
xor
sbb
cmp
jnp
mov
imul
push
lcall
mov
call
xchg
push
nop
aaa
push
ljmp
stc
dec
dec
adc
inc
ds
outsl
xchg
cmp
mov
out
sarl
push
stos
es
fucomi
into
sub
pop
imul
adc
loopne
push
cmpsl
sub
sbb
add
mov
jo
add
jbe
into
sbb
xchg
lcall
inc
and
hlt
push
in
cmc
movsb
mov
add
sarb
push
in
xchg
ds
das
add
xlat
mov
mov
or
fcoms
push
and
enter
std
xchg
ljmp
das
mov
subb
and
add
lcall
jnp
sbb
mov
in
jp
hlt
rclb
xchg
pusha
int3
fidivrs
push
call
or
mov
or
mov
push
pop
mov
adc
sub
mov
push
subb
daa
or
pusha
mov
mov
lods
mov
fs
stos
mov
sbb
stc
sub
das
fisttpl
xchg
in
mov
lods
and
push
xor
stos
inc
push
mov
shrb
das
loop
clc
out
push
dec
sub
xchg
xchg
inc
fidivs
fdivrs
lret
shrb
jno
jg
scas
aad
pop
or
or
bound
push
pusha
mov
das
and
xchg
cs
push
movsl
cmp
push
int3
mov
cwtl
ror
roll
cmpsb
sub
dec
xor
shl
outsl
shrl
cmp
insb
mov
xchg
mov
and
xor
stc
push
push
adc
xchg
insb
pop
outsl
jmp
js
rolb
xchg
loop
mov
shlb
mov
add
imul
sub
leave
xchg
aaa
testb
mov
ljmp
mov
inc
test
imul
fwait
xor
lcall
add
sbbb
stos
cmp
jl
push
pop
mov
inc
loop
xchg
cmp
jbe
repnz
mov
adc
mov
lock
jns
iret
sarl
add
xor
je
xor
sub
mov
rcrb
adc
arpl
pop
xor
stos
gs
lods
inc
jo
mov
arpl
sbb
insl
mov
lcall
je
imul
ds
lahf
sub
add
fs
xor
sarb
outsb
lods
jmp
mov
and
int3
cmp
insb
stos
repz
sub
pop
lods
xchg
popa
adc
jle
xor
int3
fs
pushf
scas
push
mov
cmpb
or
fistps
mov
ret
fnsave
popf
cli
movsl
mov
mov
lods
loop
dec
push
stos
inc
nop
jge
in
out
aad
shrb
add
test
bound
inc
int
out
gs
lret
sub
cmp
xchg
insb
ljmp
cmp
popf
mov
jle
inc
mov
dec
in
scas
sbb
add
adc
xlat
loopne
test
mov
movsl
mov
push
jl
xchg
lret
xor
jg
das
cmp
mov
rolb
imul
aaa
inc
std
jo
fisttpl
aas
xor
nop
inc
xchg
mov
and
jno
xor
repz
fstps
das
xor
mov
ret
sti
shll
adc
repnz
sbb
je
aas
rclb
test
lods
lahf
push
mov
test
cmp
cmp
push
repz
adc
rcrl
and
hlt
and
stos
lock
jmp
xchg
fisubl
jle
xchg
scas
fdiv
rorb
pop
ficomps
jne
xchg
into
sub
push
loop
test
outsl
icebp
in
mov
pushf
rorl
push
neg
push
outsl
mov
jne
xchg
adc
pop
outsb
cmp
les
in
inc
push
ficoml
cmp
xorb
lret
push
cli
adc
and
jo
lods
add
hlt
inc
pushf
inc
pusha
into
fs
push
in
subb
aad
jae
sahf
shrb
fldl
test
mov
or
mov
js
push
sti
leave
xor
stos
xchg
ss
adc
mov
mov
inc
push
inc
icebp
out
lahf
xor
mov
mov
lahf
rclb
out
xor
mov
dec
out
xor
sub
les
ficoms
cmc
inc
cmp
out
dec
push
nop
in
cmp
repnz
out
cs
inc
pusha
mov
int
into
fcomi
je
push
inc
push
mov
repz
add
sub
sbb
cmpsb
cltd
pop
ss
mov
int
push
jo
scas
into
jl
clc
mov
fcomi
add
mov
scas
or
push
call
leave
mov
sbb
push
dec
imul
loop
loopne
inc
pop
push
mov
push
movsl
push
shlb
stos
mov
dec
mov
rcl
aam
mov
or
aaa
xchg
das
pop
mov
xor
stc
sbb
lret
mov
rclb
xor
stos
divl
jecxz
fs
xor
daa
icebp
cli
in
xor
sub
jg
jge
hlt
mov
add
loopne
fwait
jge
pop
cmp
adc
or
lock
popa
lods
pop
scas
test
dec
jo
mov
rcrb
iret
sbb
lds
mov
aam
xchg
fcmovne
xor
jnp
xchg
mov
das
xchg
int
popf
fsubs
cld
sub
mov
xor
inc
push
xchg
stos
sbb
insl
out
popf
je
rcrb
arpl
lods
mov
mov
bound
push
jge
fdivs
pop
je
cmp
mov
mov
imulb
and
sub
add
mov
adc
fdivrs
pop
ss
pop
test
fmul
int3
mov
sbb
mov
ljmp
ss
sub
dec
std
stos
xchg
loopne
mov
in
dec
dec
pop
fcompl
mov
push
fsubp
sub
call
cli
sub
inc
add
call
xchg
push
jne
subl
adc
mov
lret
xchg
sahf
adc
pop
sarb
pop
divb
mov
adc
and
neg
push
insb
dec
in
loop
popa
and
or
aaa
jne
sub
jp
test
cmp
lea
int
jnp
push
push
jl
pop
into
es
xor
rol
jle
jge
mov
cmp
repnz
jno
pop
push
and
mov
jge
bound
xor
bound
mov
xchg
rorb
adc
pop
fdiv
adc
arpl
repz
das
add
xor
mov
add
xchg
test
inc
push
mov
dec
lods
daa
out
ret
push
insl
gs
mov
sbb
stc
jge
fwait
xchg
cmp
je
add
xor
or
add
loope
pop
jnp
fildl
test
dec
or
mov
add
jp
in
add
jb
cwtl
fxch
loope
cli
jg
inc
daa
lods
inc
dec
push
dec
idivb
lea
ja
movsb
in
aam
xchg
pop
sub
call
insb
std
stos
sub
test
int3
xchg
push
std
adc
scas
or
hlt
scas
cmc
or
rorb
push
ja
popf
lcall
cmp
adc
cli
jle
xchg
sbb
pop
cmpb
and
and
data16
in
rolb
push
mull
xlat
out
in
lret
mov
js
imul
mov
mov
out
movsl
pop
into
pop
outsb
mov
sbb
sub
sbb
bound
dec
jbe
mov
hlt
jno
or
mov
dec
jb
mov
enter
mov
xchg
push
imul
loop
mov
jne
xor
movsb
movsb
and
push
inc
stc
pusha
test
jb
outsb
mov
mov
pop
in
add
aad
sbb
daa
cwtl
dec
mov
mov
mov
add
mov
test
xchg
pushf
rcrl
jo
jg
push
in
je
xor
aaa
aas
dec
cltd
test
mov
adc
addb
sub
xchg
in
inc
xor
ljmp
jle
inc
inc
xchg
jnp
jns
shlb
enter
or
loope
xor
mov
movsl
dec
jecxz
cmc
push
leave
loop
cmp
aam
xorb
push
ljmp
idivb
mov
mov
cmpsl
out
pop
mov
int3
insl
sbb
std
pop
scas
xor
xchg
pop
cs
outsl
cmp
ljmp
movsl
lods
xchg
jmp
dec
aaa
and
push
cmp
cs
pushf
movsb
cmp
aas
dec
sbb
mov
sbbb
mov
cmp
mov
ja
pusha
test
jo
or
dec
out
cmp
loope
mov
xchg
test
adc
outsb
push
iret
dec
pop
pop
aad
jae
sub
pop
jg
jno
lcall
movsl
sbb
push
sub
aas
push
in
push
sub
loope
jbe
mov
mov
or
mov
aam
lock
aas
out
mov
je
xor
out
mov
mov
jg
push
sar
inc
insl
gs
pop
add
mov
xor
pop
stos
mov
mov
add
popf
xchg
dec
popa
std
iret
shl
xchg
dec
xchg
fildll
inc
adc
sti
mov
push
or
inc
stos
jp
je
loope
jmp
lods
inc
sbb
insl
inc
xlat
out
inc
movsl
xchg
cli
mov
test
mov
xor
xchg
daa
jne
pop
inc
fcoms
ss
jecxz
pop
arpl
fs
cmc
dec
jnp
inc
mov
pushf
aad
test
push
sbb
rcll
mov
push
stos
es
pop
es
xor
rcrl
sbb
push
repnz
mov
outsl
scas
adcb
fnstcw
sub
inc
sub
add
xchg
mov
or
mov
and
lahf
out
insb
sub
xchg
je
jecxz
test
xlat
ret
les
repz
cld
addr16
dec
ds
mov
mov
aad
in
je
mov
inc
xlat
push
cld
inc
pushf
adc
fs
bound
hlt
sub
aad
xchg
sbb
clc
push
outsb
test
add
popf
adc
imul
sub
lods
popl
shlb
inc
ret
inc
icebp
mov
cmp
pop
inc
inc
das
pop
test
inc
mov
or
and
and
test
out
push
repz
cmpsb
add
call
iret
scas
mov
pop
add
adc
add
lods
inc
leave
enter
and
clc
cmpsl
mov
cmp
repnz
jae
in
test
inc
test
stos
js
xor
or
fucompp
cwtl
pop
out
mov
jmp
shl
aaa
add
and
sub
inc
roll
cmpl
pop
dec
xchg
hlt
cmp
js
test
cvtdq2ps
sarb
cmp
jns
push
dec
cmp
adc
pop
sbb
fisttpll
cs
xor
mov
pop
imul
mov
or
xchg
xor
xchg
add
in
popf
sub
dec
xor
xlat
cmp
jbe
push
popf
push
dec
xchg
pop
jmp
sbb
lods
add
jecxz
negb
out
xchg
sbb
adc
mov
mov
cmp
pop
enter
ret
lcall
fwait
std
leave
pop
xchg
mov
test
loopne
and
decb
pop
movsb
lds
jne
push
push
push
negb
popa
cs
pop
dec
fists
ss
push
pusha
popf
dec
repnz
or
movsl
sbb
out
notb
inc
add
xchg
mov
cmc
xor
lods
cmp
cwtl
inc
insl
sub
subb
cmp
dec
mov
lret
out
rcrl
push
cltd
popf
mov
push
adc
arpl
xor
clc
xchg
sub
insb
push
das
jmp
fs
push
inc
in
jmp
mov
pop
and
es
jge
jbe
cmp
lea
cmp
or
leave
out
movsb
popf
dec
mov
es
rcll
pop
and
xchg
inc
mov
adc
int3
cwtl
jae
mov
cmp
scas
sbbl
dec
out
inc
xchg
add
das
in
pusha
xlat
pop
aaa
push
cmp
sub
addb
jne
xor
pop
sbb
cmovge
xchg
cmpsl
adc
cmp
orl
sbb
popf
aaa
decb
mov
and
push
lods
clc
shlb
loop
roll
arpl
pop
push
cmc
push
sbb
in
cmp
jl
cld
fwait
test
imul
sub
shll
push
test
js
je
fsubs
dec
data16
jg
cmp
mov
sub
lods
mov
fwait
es
inc
pop
add
jle
xor
lea
xor
mov
jb
call
or
lods
push
pusha
int3
dec
lret
jp
into
pop
ret
adc
mov
add
mov
push
faddp
sub
xor
pmaddwd
pop
movsb
pop
mov
mov
sbb
cmpsb
jmp
cmp
mov
push
psrlw
dec
inc
push
fsubs
rorb
cmp
cmp
and
je
cmp
outsl
push
sub
pushf
push
pop
scas
lds
mov
lds
sbb
ds
jl
xchg
bnd
or
mov
mov
loopne
insl
loopne
test
push
imul
mov
sbb
ficoml
pop
fstps
mov
jne
test
xchg
sub
adc
rorb
sbb
jo
or
inc
popa
clc
ja
ljmp
sarb
in
fstp
jb
mov
stos
out
cltd
hlt
in
es
mov
and
dec
loop
int3
test
lret
jl
push
inc
pushf
iret
add
jmp
or
mov
xor
loopne
sbb
jo
push
or
aam
jnp
test
xor
dec
js
lods
pop
mov
or
pop
das
in
rclb
adc
dec
cmp
fwait
fwait
repz
stc
and
cmp
cld
cmp
pushf
into
pop
je
stc
pop
hlt
add
xchg
outsl
mov
clc
outsl
cli
adc
mov
sub
in
xchg
mov
push
mov
stc
or
push
movsl
lret
inc
fists
clc
fucomi
or
and
fsubs
mov
add
mov
jns
je
and
dec
adcl
mov
xor
jnp
and
mov
xchg
xor
subl
ret
xor
xor
or
push
push
jmp
dec
push
stos
jp
mov
cmpsb
xor
ja
jno
lcall
ror
xacquire
pop
rsm
add
lretw
out
xor
push
leave
je
sub
adc
aaa
sbbl
pushf
xchg
test
fdivrp
inc
mov
ja
pushf
push
jl
inc
cmp
aam
aaa
into
sub
inc
jmp
mov
mov
lcall
imul
mov
pop
insl
imul
ja
aad
pop
pusha
imul
pop
rorl
dec
push
and
push
jmp
inc
cmp
push
mov
dec
xchg
jle
xchg
pop
loopne
push
mov
adc
mov
hlt
xchg
int
cwtl
pop
push
push
stos
push
sahf
mov
push
fwait
push
je
fwait
dec
addb
xor
cmp
mov
je
test
push
fldenv
lods
push
aam
test
jp
outsb
jl
pushf
and
aad
cmpsl
aas
lret
jno
scas
jae
add
jmp
sbbb
cmpb
push
sbb
icebp
mov
xor
mov
xchg
ror
repz
cs
sub
jbe,pt
es
in
cmp
subl
adc
in
into
sub
add
xlat
mov
outsb
inc
idivb
les
cmp
mov
fists
push
jae
movsl
push
cmp
or
in
rcrb
add
sub
insl
fdivrl
cs
shrl
dec
int
lahf
test
lds
cmp
clc
leave
push
pop
sahf
test
test
jl
je
dec
sub
pop
mov
jne
xor
pop
pop
cmp
xor
fadd
or
vmovaps
sub
sbbl
insl
push
ss
fst
mov
inc
aaa
into
fldt
push
fnsave
insl
pop
mov
xor
loope
mov
push
ror
xchg
mov
enter
sbb
jg
aam
mov
es
xchg
jns
subl
dec
jnp
jge
pop
fisubs
lcall
mov
test
incl
xchg
mov
scas
sti
sub
pop
out
test
add
dec
push
add
dec
int3
int
add
or
cmp
dec
in
push
sub
cli
xchg
xchg
test
xchg
dec
pop
mov
fists
lds
sub
or
sub
xchg
sub
cmp
inc
scas
fidivs
push
mov
enter
nop
lea
mov
das
ja
xchg
jo
cmp
es
testb
adc
dec
pop
add
inc
pushf
dec
lahf
test
cmp
sahf
jmp
sbb
mov
inc
outsb
fcmove
fmull
iret
inc
seto
out
and
xor
xchg
xor
push
hlt
rorl
rcll
adc
cmpsl
pop
dec
sub
call
fwait
pushf
mov
adc
push
inc
daa
adc
fcmovnu
ret
aam
popf
pop
aam
pop
dec
ret
je
dec
jecxz
jnp
fisubs
sub
ljmp
mov
popa
loop
jl
aas
push
cld
or
mov
pop
shrb
lahf
sub
cmp
inc
repz
ja
cmp
xor
std
aam
pop
or
jno
push
mov
dec
aad
mov
xor
fdivs
adc
xor
dec
imul
stc
adc
inc
aam
jne
cwtl
xor
jecxz
cmp
push
imul
repz
shl
jmp
mov
push
fsubrs
adc
sub
jg
and
sbb
sub
movsl
pop
add
addr16
adc
sub
jae
scas
dec
fists
mov
imul
mov
jns
lcall
outsl
into
dec
cmp
xor
in
push
fwait
sbb
adc
ljmp
and
xchg
inc
sub
or
add
outsl
lea
mov
mov
imul
inc
cmp
push
sbb
test
xor
push
movsb
jecxz
test
icebp
sbb
ljmp
clc
pop
mov
ret
mov
pop
mov
leave
fcoml
lods
jno
dec
shrb
mov
dec
out
push
xchg
loopne
enter
inc
gs
push
hlt
xchg
adc
std
jns
sub
repnz
insb
xchg
cmp
adcb
popl
les
cmp
sbb
mov
cmp
push
xchg
cmp
push
scas
scas
js
out
xor
sbb
dec
imul
addb
gs
sbb
pop
sub
out
notl
aaa
aad
add
cmp
dec
pop
sbbl
mov
fcmovu
enter
mov
inc
sbb
jo
iret
loop
sbb
cmp
jp
test
ss
cmc
js
cmp
inc
cmp
test
scas
sub
sahf
repnz
mov
jg
popa
int3
rclb
and
pusha
in
call
imul
movsb
inc
add
xor
test
sti
mov
xor
aaa
pop
repz
mov
movlps
mov
int
out
in
mov
ret
repnz
lds
lea
je
push
push
frstor
fsubr
aas
xor
jl
lods
cmp
jo
add
push
mov
iret
testl
mov
sahf
stos
pusha
popa
int
push
gs
jb
inc
bound
xchg
fsts
adc
lea
inc
mov
dec
cmp
hlt
inc
inc
sahf
jo
dec
pushf
ljmp
je
cmp
xchg
add
mov
mov
in
mov
sbb
ret
jecxz
arpl
cmpsb
jle
mov
iret
push
inc
icebp
pop
cmc
mov
lods
outsl
call
mov
stos
jecxz
addr16
push
sbb
add
cmpb
adc
xchg
cs
out
pop
mov
mov
icebp
push
sub
pop
daa
xchg
push
mov
pushf
jmp
gs
gs
stos
mov
orb
insb
xlat
mov
pop
in
gs
jne
sti
jg
pusha
mov
sbb
jl
int3
mov
movsb
repnz
out
out
or
int3
adc
test
jnp
mov
mov
xlat
xchg
sub
push
or
or
cmp
mov
movb
adc
movsb
pop
iret
pshufw
push
mov
or
iret
out
mov
mov
add
lahf
cmp
inc
mov
cmpsl
mov
dec
or
fbstp
test
jbe
dec
pop
cli
call
loope
cmpsl
adc
pop
mov
jne
out
mov
lahf
divl
enter
mov
mov
fnstsw
fwait
mov
loopne
or
inc
push
lret
arpl
dec
mov
jo
jle
and
jl
xchg
add
mov
sahf
ss
or
mov
xchg
xor
dec
inc
test
mov
into
loopne
xlat
icebp
mov
mov
xor
shll
mov
xchg
dec
cmpl
mov
jno
scas
rol
je
aam
cmc
mov
jae
cwtl
xchg
ds
dec
repnz
cmpsl
bound
clc
jne
mov
andb
int3
or
loope
outsl
dec
outsl
or
scas
cmp
out
add
or
push
mov
push
sbb
in
sbb
stc
lds
mov
out
loop
dec
pop
rorb
out
adcl
in
aaa
cltd
test
inc
loope
fwait
aaa
push
popa
cmpxchg
xchg
xor
sub
loop
xchg
ss
jbe
pop
mov
inc
jl
loopne
or
mov
movsb
ss
or
popf
lea
sbb
cmpsl
lock
mov
or
call
cmp
xor
sbb
int
sbb
add
adc
leave
jge
andb
out
cs
cmp
mov
push
int3
ret
xor
bnd
int
jbe
mov
call
mov
stos
mov
lret
clc
fwait
pop
inc
sahf
icebp
jle
jmp
push
jae
movsb
outsb
jp
mov
mov
mov
dec
cmpps
xlat
hlt
andb
and
fbstp
xor
outsb
and
xchg
add
pop
xchg
xor
and
nop
ss
mov
xchg
pop
in
jmp
out
nop
push
mov
mov
fidivs
sbb
or
js
xchg
insl
cltd
mov
jecxz
shrb
imul
mov
mov
pop
enter
sub
movaps
push
sti
dec
inc
fstpt
pusha
push
frstor
mov
ja
xor
lods
jmp
xchg
ljmp
lahf
or
dec
into
rcr
push
data16
scas
je
xchg
lret
cs
fst
push
xchg
jnp
adc
xchg
arpl
testb
jmp
and
jmp
sbb
cmpsl
mov
arpl
mov
nop
sub
sub
mov
outsb
and
das
leave
mov
out
xchg
in
jl
and
aas
loop
cs
pusha
pop
insb
insl
out
adcl
lret
push
lret
out
lret
out
xor
xor
dec
cmpsb
sti
call
or
popl
addr16
cmp
and
insl
mov
xchg
mov
daa
sbb
ja
leave
int3
push
aas
jns
outsb
push
mov
inc
int3
mov
push
mov
mov
push
js
ffreep
pop
jmp
jne
ds
cs
imul
mov
aaa
stos
pop
insl
das
pop
dec
cmp
insb
lahf
add
sarb
push
je
pop
push
sarb
xor
push
pop
cmp
call
hlt
push
imul
and
test
sahf
call
bnd
aas
sbb
mov
lret
mov
pop
les
or
out
push
and
inc
lea
dec
mov
pop
test
jg
mov
push
lods
ficoms
xor
xchg
add
ret
sub
sbb
addl
hlt
cmpsb
test
or
cmp
outsb
fwait
cmpsl
push
cmp
mov
pop
insl
adc
adc
mov
inc
lret
pop
mov
push
xor
mov
rclb
mov
outsb
and
sub
pop
jns
xor
lods
cld
jg
es
test
sbb
adc
xchg
nop
mov
add
mov
shlb
dec
ljmp
push
inc
pop
mov
mov
insb
lret
mov
mov
sub
ja
or
pop
dec
in
or
jnp
pop
cmp
xchg
in
icebp
xchg
and
sbb
inc
inc
sbb
mov
pop
adc
negl
sti
les
push
loopne
jbe
pop
test
dec
pushf
adc
xlat
mov
pop
or
push
lods
mov
sub
mov
in
lods
fisubrl
aas
sbb
jno
subl
inc
les
popf
mov
cmc
lods
push
mov
inc
imul
cltd
and
shrb
iret
leave
shlb
rcll
jb
sub
in
lret
sar
adc
addl
add
out
cmpsl
fcompl
mov
mov
sub
mov
xor
sub
lods
cmc
loope
ljmp
push
outsl
test
stos
xor
mov
cmp
scas
cmpsb
cmp
shlb
aas
mov
fistpll
jns
repnz
xchg
lock
sub
addr16
inc
push
sbb
jns
xchg
outsb
ljmp
push
dec
sbb
inc
fisubl
mov
es
mov
jmp
leave
xor
jo
pop
gs
jno
das
loopne
inc
mov
add
xchg
imul
add
adc
cltd
jge
es
jp
and
or
fnstsw
sahf
mov
imul
mov
inc
or
mov
mov
mov
mov
cmpb
mov
outsb
mov
mov
jb
or
mov
repnz
test
dec
mov
xor
sbb
and
push
inc
hlt
pop
fsubrp
dec
icebp
mov
and
add
xchg
xchg
aad
sahf
xor
stc
in
sub
jg
insb
in
xor
push
push
fcoms
lea
into
sub
jecxz
js
and
outsb
dec
add
sbb
ljmp
fwait
out
pop
and
mov
orb
sahf
arpl
imul
hlt
rcrb
mov
xchg
dec
in
push
mov
or
fisttps
xor
inc
adc
shrb
cmpsl
dec
shlb
lock
js
ds
test
and
sub
int
ja
mov
test
ret
mov
adc
dec
out
mov
mov
shl
dec
pop
or
imul
cwtl
das
jg
jno
pop
adc
sub
stos
adc
test
xor
cli
icebp
movsb
mov
pop
ret
adcb
cmp
mov
xlat
lock
lds
nop
dec
push
stos
inc
dec
pop
je
push
out
jae
sahf
adcl
mov
inc
pop
es
jmp
xor
cli
push
test
shl
addl
jae
insb
add
sub
fs
gs
pop
adc
xchg
sub
xor
dec
xchg
xor
sub
out
shl
xchg
inc
xor
popl
mov
pop
and
cvtpi2ps
or
push
cmp
das
imul
fisttpl
add
mov
xor
ds
push
rol
add
mov
in
cmpb
fdivs
dec
scas
aaa
mov
leave
jecxz
cwtl
and
je
add
adc
adc
push
push
and
lods
inc
xor
and
dec
in
mov
hlt
sbb
mov
pop
xchg
mov
add
xorl
lods
add
repnz
xchg
fdivrs
cmp
movsl
vsubss
xchg
mov
lods
mov
lods
fsts
push
adc
xchg
lcall
ja
fnstcw
ss
inc
jnp
jnp
push
lea
lret
into
pop
imulb
push
xchg
pop
xor
add
test
cltd
push
cmpb
cmp
mov
das
xor
sub
test
aaa
sub
cmpsl
out
ret
jmp
es
movsb
repnz
mov
inc
push
call
sahf
shrb
jge
aad
inc
hlt
mov
lret
xor
mov
lcall
cwtl
mov
inc
push
shll
ds
lods
inc
les
add
iret
cltd
stos
sbb
xor
and
fsubrl
mov
leave
push
in
pop
push
lcall
cmpsb
aam
jge
dec
pop
xchg
jle
jo
stos
ss
in
test
arpl
jbe
push
rcrb
push
adc
inc
shrl
jp
adc
pop
jae
mov
adc
jg
mov
in
test
inc
fildl
loop
jae
lds
notl
popf
out
xchg
lds
mov
mov
jge
lret
mov
dec
lods
adc
dec
pop
sbb
ret
jecxz
bound
bsf
mulb
or
mov
scas
rcll
pmaddwd
ficomps
adc
mov
mov
dec
jnp
insl
jg
pop
dec
adc
adcl
into
rcll
adc
mov
pop
sbb
inc
jbe
dec
jo
insl
mov
out
inc
subl
test
cld
repnz
dec
ljmp
cmp
fwait
out
mov
push
test
cmp
pop
jle
xor
testb
aas
xchg
fstpt
jmp
outsl
ret
xor
xorl
popa
and
fisttpll
jo
ja
adc
jmp
aaa
divl
daa
popf
jb
inc
dec
imul
daa
mov
movsl
or
cmp
out
push
ss
pop
cwtl
fxch
pop
subb
sub
mov
jne
lret
mov
ret
sub
lret
out
dec
aaa
add
in
iret
dec
sbb
test
fmull
and
adc
jle
ja
call
ss
sahf
add
leave
push
jecxz
or
shr
jl
mov
mov
lretw
xor
pop
xchg
sti
adc
jns
xor
ljmp
pushf
or
mov
sub
sub
sub
dec
sub
ficoms
xchg
das
jl
xchg
dec
icebp
lock
dec
mov
pop
xlat
rol
test
idivb
cmpsl
into
out
sbb
sbb
xor
insl
sahf
mov
repz
test
testl
cmpsl
das
add
rcll
and
sub
jb
push
pop
mov
mov
arpl
jp
mov
push
lcall
popf
pop
shlb
sub
sbb
sbb
jl
xchg
or
stos
push
jns
pop
dec
mov
cmp
xchg
fdivrl
mov
cmp
loope
mov
push
outsl
shll
pop
aaa
pop
inc
cld
loope
sbb
cmp
xchg
daa
add
dec
call
in
les
jecxz
insl
cwtl
cmp
mov
aaa
je
nop
lods
push
and
mov
sub
andb
rolb
stos
mov
shl
mov
test
imul
jbe
leave
jo
mov
mov
ret
mov
or
and
jmp
or
jp
adc
hlt
stc
nop
daa
pop
stos
lds
mov
ds
sub
pushf
xchg
jo
inc
mov
mov
cmpsb
packssdw
ja
push
outsl
push
xchg
xor
ds
pop
pop
and
divb
xchg
xchg
mov
nop
test
loope
adc
mov
jns
shrl
out
inc
ror
jle
adc
out
aas
xchg
mov
lcall
je
push
xchg
sub
push
dec
cwtl
pop
loop
sbb
mov
sbb
pop
lods
mov
popa
xorl
push
xor
loopne
std
js
nop
aas
pop
jns
test
lcall
jecxz
jno
insl
mov
lea
enter
cwtl
dec
cmp
add
lret
out
adc
mov
pavgb
stos
push
inc
dec
rolb
add
ss
xchg
xchg
and
mov
pop
sbb
push
cmp
sarb
in
adc
lcall
hlt
adc
lods
enter
je
pop
and
mov
jne
int3
pushf
xchg
jb
cmc
out
ds
cld
push
cmpsl
fadds
cmpb
push
xor
jecxz
inc
popa
inc
xlat
xchg
stc
pushl
cmp
pop
pop
out
test
push
hlt
lret
into
cltd
or
xchg
push
pop
mov
fucom
and
arpl
leave
cwtl
loope
push
xlat
scas
mov
xor
jp
jecxz
or
cmp
out
test
pop
inc
fimull
xchg
popa
or
insl
lock
lret
out
and
scas
push
fnstenv
or
mov
popf
push
popf
into
fwait
mov
and
test
mov
jle
jb
jle
mov
xchg
mov
push
loop
outsl
int
push
cltd
mov
dec
mov
fwait
mov
pop
aas
or
std
jg
pop
or
jae
rcrl
xor
ljmp
enter
pop
dec
outsl
lret
mov
xor
jbe
push
int3
pop
inc
gs
rorb
arpl
ljmp
out
std
subl
dec
int3
xlat
mov
fdiv
clc
mov
xor
mov
jno
mov
out
lahf
add
es
cmpsb
inc
outsl
rolb
gs
mov
mov
imul
das
push
stc
bound
test
ror
jle
xchg
fs
arpl
push
test
push
subb
inc
dec
push
stos
imul
jg
into
and
aaa
ret
add
jnp
jno
ret
mov
mov
push
or
cmpsb
out
aad
adc
cmc
inc
sub
cmc
and
popa
fdivrl
ds
outsl
mov
push
and
popa
sbb
aas
enter
test
inc
cmpsl
fnstenv
mov
in
mov
out
mov
shll
aam
push
xchg
pop
mov
inc
sub
std
xchg
pop
ficomps
xor
fisttps
mov
jne
mov
cli
pusha
inc
mov
lds
iret
mov
lret
xchg
inc
sub
test
in
inc
pop
push
push
arpl
mov
decl
adc
adcl
loopne
les
xchg
mov
repnz
mov
lret
add
lods
out
lds
test
call
dec
not
repnz
sarl
dec
dec
or
jb
fwait
cmp
mov
xchg
lret
jne
fldt
adc
jne
rcrl
sbb
adc
cmp
imul
repnz
and
clc
push
add
jg
push
cmpsb
dec
sub
mov
mov
daa
jl
push
nop
pop
mov
sti
mov
pop
pop
cmp
cs
scas
sti
aam
and
jecxz
add
fnsave
cmp
jmp
xchg
cmp
lods
lods
sub
xor
enter
push
add
out
xlat
ficoms
jl
es
adc
inc
incb
or
add
test
negl
decb
pop
in
sub
nop
jb
push
mov
shrl
into
mov
inc
push
or
mov
sbb
mov
aaa
scas
pop
mov
sbb
movl
adc
xchg
mov
sbb
das
xadd
bnd
stos
jle
jg
je
aad
js
adc
mov
mov
ss
jecxz
ja
shlb
ja
pop
ss
rcrb
arpl
mov
fxch
lods
addb
xchg
cs
and
xchg
mov
loop
das
int3
xchg
or
push
mov
inc
cs
xor
or
push
pop
test
ret
mov
mov
xchg
dec
outsb
mov
out
cmc
loop
popf
not
js
inc
bound
sub
adc
push
pop
adc
or
and
sbb
cmp
and
mov
inc
and
xchg
xor
xorb
je
sub
js
rcll
subl
or
mov
pushl
xor
cwtl
in
mov
sub
push
xchg
jcxz
loope
test
lds
lock
push
aad
cld
push
mov
inc
jecxz
mov
or
mov
push
mov
add
ret
mov
inc
mov
sub
shlb
pop
call
add
pop
jno
xchg
stc
mov
pushf
sub
adc
pushf
lds
xor
inc
popa
je
xchg
and
ja
sbb
inc
gs
jns
imul
inc
ret
int
cmp
xchg
movsl
loope
std
push
gs
pusha
repnz
mov
or
sub
adc
push
mov
test
rcr
pop
jbe
pop
push
xor
incb
or
in
inc
push
popf
cmp
pop
mov
push
adc
daa
mov
pushf
scas
std
mov
lock
cmp
xor
cltd
subb
lret
mov
mov
out
xor
outsb
push
ficoml
push
xor
mov
cmpsb
push
fidivs
xchg
notb
xor
adc
sahf
insl
fbld
inc
dec
cld
sbb
test
stos
scas
jns
daa
sub
pop
push
xchg
jg
mov
icebp
into
xor
sbb
out
js
into
push
jbe
movsl
ret
jle
push
mov
hlt
inc
pop
daa
pop
xor
dec
in
jg
mov
pusha
pop
jnp
sbb
inc
mov
arpl
cltd
jmp
adc
mov
sbbl
mov
inc
sbb
and
rcrb
fbld
int3
mov
ljmp
mov
aaa
or
lods
mov
dec
xchg
adc
and
add
into
pop
sub
sub
mov
mov
pop
sarl
and
jno
cs
jle
inc
add
mov
lds
sub
cmpsb
jp
and
jmp
pop
repnz
sub
fucomi
idivb
lods
sbbb
sbb
jp
xor
dec
insb
or
jle
out
jmp
jl
test
or
cmp
fdivrs
pop
out
xlat
pop
push
sbb
loopne
or
mov
out
test
push
push
dec
lret
mov
jne
int
sahf
clc
jb
aam
lea
inc
mov
push
fwait
dec
popa
xor
xchg
sub
shll
mov
decl
sbb
and
sub
xor
enter
loope
insl
mov
fwait
mov
mov
xchg
fs
or
pop
negb
xchg
iret
out
mov
push
cmp
repnz
gs
lcall
xchg
cli
ja
ss
inc
push
sti
sbb
cltd
xor
lock
mov
arpl
push
frstor
jge
adc
lahf
mov
and
pop
cmp
push
add
daa
test
negb
call
ret
add
ja
xor
cmpsl
push
sub
inc
or
xchg
roll
dec
sub
inc
psadbw
dec
dec
jb
mov
movsl
hlt
push
daa
jo
inc
aaa
stc
sbb
mov
pop
xchg
push
jno
aas
fwait
push
scas
adcb
xchg
and
lods
mov
clc
sub
adc
pushf
into
push
sahf
sbb
sar
push
cmp
push
mov
ror
xor
mov
push
shrl
das
mov
sbb
int
fdivrl
pop
icebp
arpl
shlb
scas
imul
dec
ja
dec
mov
out
inc
push
jmp
inc
arpl
lock
call
add
sbb
sti
outsb
jle
call
push
mov
aam
cmp
cld
stos
test
fbstp
cmp
out
add
sbb
mov
cmp
lret
mov
rclb
or
jnp
outsb
neg
lahf
jmp
arpl
jle
out
sub
int
mov
stc
leave
scas
repz
or
out
shlb
outsl
pusha
sub
fsubrs
testb
xor
cmp
push
rol
adc
cmp
cmpsb
icebp
jbe
popa
outsl
add
push
addb
jo
or
mov
mov
mov
fdivrl
popa
dec
negl
pop
ja
mov
imul
pop
inc
sbb
stos
jmp
adc
loop
inc
xchg
xor
ja
mov
push
inc
enter
call
mov
ret
push
jp
lods
inc
fists
lret
bound
addr16
pop
rcl
mov
inc
dec
xor
cmp
jecxz
pusha
leave
xchg
push
cltd
in
sbb
les
out
cmp
adc
push
popf
imul
cmp
dec
push
ja
xchg
adc
lods
pop
aas
sbb
decl
je
or
pusha
xchg
sub
ds
out
mov
lea
outsb
fwait
mov
push
sbb
jns
xchg
jmp
or
mov
mov
sbb
repnz
mov
stos
xor
add
dec
lahf
push
call
adc
mov
pop
cmp
mov
dec
in
mov
dec
push
imul
inc
fidivl
sub
pop
add
je
clc
push
test
sbb
arpl
cli
nop
jecxz
xchg
test
xlat
push
mov
pop
mov
dec
pop
lock
int3
mov
mov
inc
popa
or
dec
sub
test
mov
sub
insb
or
fs
add
iret
cmp
cld
out
pop
sbb
daa
xor
mov
pop
aad
gs
or
iret
and
lcall
mov
jg
jl
xchg
scas
pop
fistl
adc
xchg
pop
lcall
psrlw
mov
in
jns
std
add
xchg
addr16
mov
add
rclb
and
ds
in
inc
and
outsb
es
pop
aad
imul
iret
fsubrs
push
jmp
or
dec
jae
outsb
test
imul
add
xchg
jle
sbb
pop
jae
xchg
ret
xlat
icebp
fistpll
sub
or
or
notb
mov
mov
popf
mov
arpl
ljmp
or
rcrb
pushf
gs
pop
mov
lds
nop
add
xchg
test
or
mov
mov
pop
push
sub
mov
dec
sub
push
or
ljmp
sbbl
or
addl
pop
adc
mov
jp
xchg
push
fisubrl
mov
inc
xchg
xor
mov
daa
cwtl
push
into
xchg
inc
fs
sub
out
add
cmc
jmp
popa
mov
push
mov
and
lcall
cmpsb
dec
cli
ret
mov
data16
or
ret
das
mov
xor
xchg
add
mov
pop
mov
pop
mov
cmpsl
movsl
add
das
dec
rcll
cmp
mov
adc
mov
jnp
mov
iret
xchg
or
sub
movsl
lret
jae
jb
or
mov
fwait
mov
lds
mov
mov
int
sahf
jo
sub
lods
mov
cltd
xor
negb
pop
repnz
outsb
mov
xor
adc
gs
and
mov
mov
or
aaa
movsl
adc
push
out
pop
jae
hlt
pop
dec
push
jbe
arpl
mov
adc
js
inc
mov
testl
enter
lods
test
arpl
xlat
bound
jae
mov
orb
dec
lret
bound
mov
cltd
or
hlt
mov
mov
mov
fcoms
test
pop
stos
adcl
adc
mov
add
sub
out
cmp
cli
shrl
fstpl
push
push
jge
imul
fnsave
jne
ja
jle
das
inc
cmp
jae
add
ja
scas
mov
pushf
cmp
xor
out
or
adc
push
ljmp
pusha
enter
jp
add
test
sbbb
mov
push
rcr
outsb
nop
push
aad
push
push
mov
jle
pop
sub
lret
jl
mov
pushl
out
mov
rcll
iret
pop
ret
cltd
lods
nop
inc
jb
int
mov
rorb
dec
mov
mov
pop
mov
sub
mov
cmp
and
jo
pop
cld
daa
stos
mov
outsl
popf
jge
mov
mov
jge
mov
xchg
int
mov
scas
scas
or
mov
and
dec
jl
out
lcall
sbb
inc
loope
mov
mov
cwtl
pop
stc
push
push
xchg
inc
pop
pushf
fstpl
leave
std
or
inc
mov
cmpsl
fsubl
daa
arpl
xor
jae
idivl
fisttps
cld
fnstsw
outsl
imul
addr16
out
pushl
jmp
jns
aaa
shl
inc
mov
out
dec
mov
cmpb
cmp
in
aaa
aas
dec
inc
mov
xchg
shlb
stc
icebp
movsl
sub
hlt
pop
negb
cmp
call
loope
push
push
popa
aas
inc
fnsave
dec
sti
xlat
sub
adcb
mov
icebp
mov
inc
ds
and
pop
add
sbb
xchg
sbb
mov
mov
fildl
cmpsb
cmp
ret
cs
das
and
addb
ss
sbb
mov
mov
scas
call
shr
in
jle
xchg
mov
lret
jns
lea
mov
cmpsb
imulb
xor
cmpsl
mov
xlat
jmp
mov
ljmp
inc
mov
fnstcw
dec
pop
je
inc
cmp
cmc
aaa
testb
lret
outsb
cmp
push
fisubrl
xchg
mov
jmp
or
xchg
test
mov
gs
ret
jmp
mov
sub
dec
aam
data16
pop
sarb
shl
mov
inc
insl
and
mov
dec
ds
cld
sub
cltd
adcl
lock
iret
aas
lds
add
daa
mov
pop
mov
outsl
fs
enter
pop
scas
sub
fs
cmp
outsb
hlt
arpl
mov
cmp
push
cwtd
dec
mov
popf
shl
les
add
sbb
mov
xor
mov
cmp
dec
mov
push
pop
dec
test
data16
cltd
mov
das
mov
popa
pop
pop
pop
je
arpl
xchg
shll
add
mov
inc
les
bound
lret
jb
jmp
ss
xchg
sub
mov
pushf
xchg
sub
inc
cmp
repnz
xor
dec
loopne
sub
rorl
jnp
dec
in
sub
dec
push
test
sbbl
and
hlt
aaa
push
es
inc
aad
les
mov
pusha
sub
jmp
and
flds
icebp
sahf
inc
es
mov
cwtd
or
mov
fistpl
mov
into
lcall
jmp
dec
xchg
mov
rcrl
rcrb
lds
add
pop
dec
ja
jp
out
pusha
dec
pop
mov
and
sti
cmpsl
mov
cmp
adc
jp
jns
add
mov
sub
mov
inc
call
or
adc
mov
xor
mov
test
inc
dec
insb
mov
loope
inc
adc
xchg
xorl
push
dec
loopne
inc
stc
lea
cwtl
lahf
and
push
mov
sti
insb
cs
xchg
and
xor
and
cli
push
add
es
cwtl
fidivrs
sub
hlt
out
repnz
ds
out
xchg
das
mov
cmp
add
xor
jbe
out
popa
jle
dec
xor
ja
xor
jno
pop
pop
cmp
dec
adc
out
dec
xchg
jne
push
jmp
and
sub
out
js
popa
jnp
adc
dec
fwait
popa
in
xlat
adcb
scas
dec
loopne
push
and
and
xchg
mov
enter
pop
add
jl
and
inc
mov
popa
inc
adc
inc
cmpsl
or
adc
xor
jmp
fbld
arpl
test
mov
loopne
jl
mov
add
out
test
and
popf
idivb
dec
add
sbb
cld
shlb
adc
mov
orl
sub
push
push
loope
out
scas
aaa
pop
iret
adc
insb
data16
es
mov
fmuls
sub
mov
sub
or
lret
insl
push
xchg
sub
scas
inc
fildl
int
lcall
xor
call
nop
stos
je
aam
pop
inc
push
leave
pushl
adc
jl
mov
das
mov
mov
fisubrl
add
pop
cmc
shr
popa
pop
push
mov
mov
jnp
inc
loop
mov
aam
add
push
inc
add
xor
es
repz
aas
push
add
outsb
jbe
movsl
inc
push
je
iret
mov
cmpsb
adc
pusha
addr16
lods
sbb
pop
inc
arpl
mov
inc
out
fadds
ret
push
rcrl
pop
push
daa
movsb
cld
loope
jecxz
scas
outsb
dec
enter
and
jns
jg
mov
jbe
mov
xchg
inc
fadd
dec
ret
xchg
pop
in
lret
xchg
test
stos
inc
xchg
lret
cmp
fst
aam
push
test
cmp
mov
pop
outsl
jns
mov
dec
mov
cltd
jle
repnz
push
icebp
push
dec
jns
sti
bound
xchg
out
lret
xor
inc
ds
adc
mov
xor
sub
or
or
popa
dec
fbld
daa
xchg
add
cmp
cmpb
stos
dec
dec
jae
and
add
lea
scas
mov
dec
fcomp
jb
mov
call
outsl
jns
mov
mov
cmp
int3
std
mov
in
fwait
into
sub
push
mov
out
lahf
jns
psubw
and
jmp
jmp
lea
or
jae
inc
int3
or
enter
sbb
jg
push
cmpsb
rol
in
sbb
dec
pop
mov
cli
gs
fisubs
mov
outsb
out
jg
mov
ret
jne
sbb
mov
add
loop
mov
push
dec
push
into
push
adc
push
pusha
jmp
sub
add
add
mov
movb
rorb
sub
dec
fildl
lret
dec
push
shll
push
test
fistpll
mov
imul
insl
inc
inc
sahf
xchg
pop
add
inc
push
insl
xchg
mov
movsb
mov
sbb
mov
out
call
add
repnz
fcoms
fstl
std
cmpl
xor
push
lea
repz
xor
icebp
push
mov
adcb
jecxz
mov
dec
add
data16
in
adc
xor
shrb
mov
loopne
pop
lods
xchg
test
mov
aam
daa
addr16
push
das
leave
shlb
jge
inc
sbb
in
sbb
sti
hlt
cmp
scas
fsubr
inc
xchg
inc
xchg
adc
cmp
dec
insl
fwait
iret
fnsetpm(287
push
sti
ja
push
and
mov
dec
mov
sti
out
repnz
aam
add
mov
pop
jne
std
mov
faddl
mov
fisttpl
nop
out
popa
jg
mov
fs
xchg
scas
pop
aam
mov
lea
iret
and
xchg
inc
cld
mov
push
ljmp
cmp
in
mov
sahf
sbb
or
mov
push
aad
test
xor
cmp
pop
mov
icebp
dec
or
lcall
cmp
mov
repnz
out
add
ljmp
ljmp
xchg
cmpsl
dec
pop
xor
sbb
data16
clc
cmpsl
fwait
std
mov
xor
mov
pop
out
fistps
bound
es
push
movsb
fisttpl
std
mov
stos
fsqrt
adc
mov
sbb
test
push
repnz
inc
add
ja
shlb
dec
inc
and
fs
mov
fldl
adc
xchg
jb
xorl
pop
or
call
pop
or
xchg
sub
mov
ss
lea
lods
repnz
loope
out
fs
movsl
sub
outsl
cmp
jo
mov
dec
sbb
or
inc
jle
cmp
push
xchg
and
movsl
xchg
or
xor
jg
clc
stos
inc
sub
pop
mov
out
jl
jmp
xor
rcl
sub
mov
test
adc
sbb
rcrl
subb
adc
pop
sbb
xchg
icebp
xor
pop
lods
sti
adc
test
pop
js
stos
movsl
test
sbb
in
es
push
mov
mov
popf
stos
cs
xlat
mov
aaa
push
sbb
sub
cld
test
dec
mov
push
test
pop
push
jo
mov
test
mov
mov
lret
mov
pop
ds
data16
mov
decb
mov
jg
cmpsb
int
add
ret
ficoml
and
adcb
insb
add
pop
ficomps
ret
or
leave
popa
xchg
add
pop
icebp
call
or
cmp
xchg
jmp
mov
push
rep
das
les
repz
or
push
inc
negl
das
enter
stc
int
dec
nop
mov
cmp
rcrl
jbe
xchg
cmp
cmpsb
les
and
and
jge
mov
lock
and
movsb
mov
outsl
push
dec
in
mov
imul
xorb
push
xchg
mov
outsb
fs
xlat
lea
mov
std
lds
loope
cs
or
inc
out
xsha256
cmpsb
imul
mov
cmpb
xchg
mov
testb
sar
push
xlat
sbb
or
stc
mov
sub
sti
sbb
imul
jb
std
pop
cmp
mov
dec
or
movsl
xchg
cwtl
sbb
mov
insl
sub
pop
in
sub
and
push
pop
or
loopne
xchg
das
pop
into
mov
std
inc
and
push
lea
icebp
mov
mov
pop
xor
push
repnz
ja
xor
mov
outsb
cmp
sbb
mov
sub
mov
mov
icebp
xchg
add
outsb
and
cmp
or
jne
fcomps
adc
out
mov
fiadds
fbstp
push
jl
mov
xor
push
loop
out
cmp
add
sub
cld
xlat
fimuls
xchg
sub
mov
mov
mov
mov
jnp
inc
xor
inc
fimuls
push
push
test
fmull
jle
insl
mov
push
imul
cwtl
cs
cmp
insl
pop
mov
call
sbb
jbe
inc
ret
arpl
sbb
rclb
jnp
fs
add
rcrb
or
cmp
fucomip
add
add
roll
push
cld
repnz
insb
enter
rclb
fistl
mov
mov
pop
xchg
aas
push
popf
nop
pop
xchg
jne
xor
cmpsb
push
mov
repnz
cmp
xchg
adc
and
mov
divl
dec
lock
lods
lea
push
add
cmpsl
pop
inc
mov
adc
mov
outsl
xor
imul
cld
cld
add
xor
pop
xor
mov
adc
repnz
arpl
stos
in
add
lcall
or
pop
jg
mov
mov
and
mov
push
adc
pop
xchg
sub
sub
fidivrl
in
xorl
mov
lret
or
mov
inc
inc
or
xorb
gs
hlt
cmp
loop
cld
mov
xchg
scas
jl
push
pop
pop
pop
repnz
sti
inc
pop
scas
cmp
cmp
iret
loopne
ja
ljmp
sahf
or
xchg
or
jns
mov
shl
or
cmp
pop
mov
sub
mov
add
xor
shrb
add
inc
test
lahf
dec
dec
imul
jnp
rolb
ret
adc
push
orl
fidivs
xchg
adc
repnz
push
fwait
xor
ja
outsl
xchg
or
pop
test
bound
xlat
mov
mov
mov
fiadds
cltd
mov
pop
dec
pop
add
jne
and
mov
or
test
insl
je
jp
sbb
ret
clc
pusha
pop
sbbb
subb
addr16
aad
ret
je
xchg
sbb
enter
push
and
or
shll
add
cmpsl
mov
movsb
imul
rcl
mov
mov
lods
mov
aad
leave
sub
ficoml
inc
inc
rolb
cltd
gs
test
mov
jg
adc
cmp
mov
pop
enter
enter
inc
rcrb
repnz
or
pop
sub
popf
stc
in
mov
adc
add
or
jecxz
insl
mov
xchg
shlb
stos
pop
ljmp
inc
pop
cmp
inc
sti
xchg
cmp
push
outsb
lods
and
xchg
jle
inc
pop
inc
popf
cmp
in
or
loopne
scas
dec
out
clc
iret
pushl
xchg
enter
fnsave
pop
imul
daa
movsb
das
xor
pop
pop
ficoml
nop
mov
pushf
push
addr16
shll
inc
cwtl
cmp
add
ss
mov
mov
daa
inc
in
sbb
loop
iret
push
outsb
sbb
cmp
lods
lock
ficoms
xor
out
data16
or
adc
pop
int3
inc
push
inc
pop
movsb
push
insl
sarb
imul
push
repz
stos
jg
jnp
cmp
aaa
stos
enter
push
ljmp
xor
pusha
push
xchg
sub
or
mov
mov
into
sarl
test
sbb
inc
insl
sub
hlt
stos
mov
adc
aam
or
pop
scas
mov
push
jg
mov
cltd
fsubs
push
push
add
and
and
jb
call
faddp
push
adc
in
rorb
push
mov
or
cmc
mov
push
lods
testb
movsl
push
outsb
and
jnp
adcb
push
enter
jo
xchg
jne
cmpb
or
loopne
sub
push
fadd
pop
or
mov
scas
fs
lcall
dec
dec
push
adc
xchg
sbb
fdivr
aaa
into
xor
add
or
mov
sbb
es
aam
mov
leave
mov
ret
pop
dec
add
xor
repz
dec
js
inc
pushf
cmpl
dec
fistpll
sbb
out
sbb
inc
scas
outsb
add
xchg
fcoms
cmp
sbb
das
das
mov
adc
lods
fdiv
aam
out
test
fcomi
jnp
adc
imul
pop
sbb
outsl
cmp
clc
pop
mov
and
sbb
ret
xor
dec
in
cmp
loopne
test
ss
stos
out
test
fsubrl
mov
push
xchg
lds
je
dec
mov
push
push
roll
dec
inc
popa
mov
dec
out
inc
in
fdivs
insl
add
mov
jge
cld
sahf
cmp
adc
cmp
xlat
imul
lods
inc
mov
jne
cwtl
fidivrs
sub
movsl
push
mov
iret
jbe
cld
jge
and
les
ret
loop
xchg
jecxz
or
adc
pop
in
xchg
sbb
add
cmpsb
out
lock
sbb
push
inc
push
scas
add
call
mov
arpl
fists
enter
dec
filds
loopew
cltd
mov
mov
idivl
ja
mov
fs
sbb
mov
cmpsw
and
cmp
ds
mov
sbb
pop
repnz
jle
nop
inc
aam
cmpb
sbb
loope
mov
and
out
jnp
ljmp
lret
gs
popa
push
sbb
xchg
test
fwait
xor
in
pop
test
dec
fmull
decb
shlb
xchg
lea
cmp
nop
push
int3
xor
xchg
fdivl
scas
data16
lret
cmp
push
mov
sbb
fistps
push
mov
popa
test
push
jmp
loope
stos
fistps
repnz
jno
sbb
push
movsl
push
push
fadd
jnp
and
ljmp
fistpll
fstl
js
mov
ss
sub
dec
dec
stos
cmp
mov
mov
imul
jl
sar
stc
pop
fstp
addl
jno
cs
shl
pushf
jb
mov
add
in
pop
cmc
mov
pop
clc
leave
xchg
inc
inc
pop
mov
dec
push
or
sbb
sarl
adc
jmp
aam
and
cli
pop
sbb
rorl
or
cmp
aaa
popa
xor
jmp
cmp
imull
inc
scas
push
mov
and
push
xchg
cmp
dec
icebp
xchg
pop
aaa
inc
xchg
lcall
push
je
jbe
add
fildl
fs
pop
outsl
ja
mov
les
mov
pop
adc
push
addr16
in
add
mov
cmp
loopne
test
jbe
and
shlb
and
outsb
sbb
mov
or
loope
in
mov
jne
aaa
adcb
lret
adc
cmp
loope
pop
dec
mov
test
mov
loope
inc
mov
jnp
sbb
lods
adc
test
vmovdqa
sub
jno
sub
jp
and
pop
inc
in
mov
jle
decl
xlat
cld
xchg
das
cmc
rol
cmp
dec
mov
je
cmp
push
sbb
or
jne
imul
in
mov
add
icebp
jno
sub
mov
repz
adc
xchg
and
sahf
sti
repnz
rclb
cmpsl
and
inc
aam
cs
jle
in
daa
orb
into
sar
sub
xor
ja
sub
lods
ret
push
fdivrl
sarl
gs
pop
fdivrl
pop
fldt
and
arpl
adc
cmp
lods
cmp
pushf
jp
popa
clc
pop
test
pop
mov
mov
cmpsl
stos
and
xchg
inc
pop
xchg
stos
mov
ljmp
cmc
jp
pusha
cmp
push
add
dec
ret
hlt
xchg
push
insb
int
negl
movsb
xor
dec
out
push
mov
cmp
sbb
movsb
fiadds
cmc
adc
and
divl
leave
nop
enter
fwait
jmp
sti
fwait
dec
cli
mov
jle
jmp
scas
xchg
test
fisttpl
or
sbb
jnp
adc
call
int
rcrl
sahf
fisttpll
adc
pop
cli
and
xchg
call
push
lret
push
popf
push
ds
out
mov
insl
stc
xchg
rclb
test
push
mov
mov
bound
jae
negb
pop
popf
cmp
test
jb
push
js
jg
hlt
inc
mov
nop
adc
inc
cmp
aaa
cmc
frstor
out
dec
aas
in
jno
pop
sbb
mov
jns
pusha
xchg
mov
fadd
insl
stc
icebp
std
fwait
xor
push
push
xchg
lods
sbb
jl
je
fisubrl
js
das
mov
cmp
or
pop
cmp
aaa
dec
xchg
into
gs
cwtl
dec
leave
imul
int
ss
cli
cltd
cltd
mov
pop
dec
loopne
sti
mov
je
pop
lods
jg
jb
mov
cld
add
xor
pop
and
aas
fwait
lock
mov
mov
cld
cld
shll
pop
mov
loop
mov
test
sbb
dec
adc
sbb
xchg
jns
testl
pop
sub
iret
dec
in
xor
jne
pusha
jle
pop
sbb
mov
inc
femms
andl
pop
jns
into
ds
push
sub
push
cmp
pop
jno
xchg
outsb
in
lcall
inc
in
scas
mov
rcll
sub
mov
sub
pop
lods
jnp
pop
gs
daa
mov
stc
xchg
sub
ret
and
stos
out
or
fmull
cld
outsl
jge
jg
imul
add
push
sub
sbb
test
in
mov
rclb
stos
aas
add
jg
pop
or
fbstp
sbb
popf
fcmovb
jns
sti
mov
xchg
in
mov
call
pop
lret
in
jecxz
movsb
sarl
ret
pop
mov
dec
fsubr
hlt
add
xor
push
stos
push
xchg
nop
push
jb
aad
add
incl
ja
adc
pop
xlat
pop
testb
sub
dec
xor
repz
xlat
and
outsl
ret
cltd
imul
insl
jnp
jb
mov
shrl
sahf
inc
xchg
in
jns
pop
pop
add
inc
fstl
es
push
sbb
loope
cmp
bound
push
cmp
notl
int3
aam
dec
in
jns
mov
lahf
push
and
movsb
jae
inc
outsb
scas
jge
mov
dec
add
push
xchg
xor
and
ss
mov
out
fsub
stc
add
inc
pop
incb
sbb
or
or
jne
roll
and
and
shll
xor
int3
inc
pop
mov
pop
lea
push
mov
sti
add
ret
sub
push
jns
cmp
int
inc
mov
fcmovne
sbb
cli
cmp
mov
sbb
jmp
popa
icebp
and
dec
rcr
shl
jge
jecxz
test
stc
adc
movsl
pop
hlt
aad
mov
xlat
mov
xchg
clc
call
adc
popa
sbbl
inc
aam
stos
dec
icebp
pushf
add
mov
clc
and
lods
js
mov
je
and
fisttps
mov
jmp
lods
xor
addr16
jmp
into
sbb
addb
gs
inc
leave
repnz
shll
inc
popf
sbbb
andl
test
roll
lock
pop
aam
repz
call
pop
pop
xchg
fidivs
push
pop
lock
push
lods
pop
adc
dec
inc
sbb
jne
push
nop
stos
jae
and
jbe
hlt
xchg
clc
push
jb
jmp
lret
push
inc
imul
jmp
stos
stos
jmp
fcmovb
jge
xlat
stos
mov
js
push
cmpb
dec
push
fidivl
dec
das
mov
in
inc
fstpl
pop
cmc
jl
imul
addl
pop
pop
add
xchg
cwtl
pop
movsl
inc
mov
sahf
adc
sbb
mov
inc
stc
xchg
xor
mov
adc
pop
out
mov
jg
add
insb
push
and
jp
sub
fs
fs
repz
or
imul
pop
jo
outsl
out
inc
sub
repnz
dec
cmp
fxch
mov
call
xlat
outsb
jo
cmc
xchg
xchg
jae
sub
xor
scas
cli
mov
mov
rorl
push
push
add
loopne
lds
dec
add
jmp
push
rclb
adc
out
imul
in
add
sbb
mov
mov
imul
sub
scas
outsl
repz
aaa
dec
dec
imul
movsb
jo
add
or
add
jle
ss
inc
jnp
push
and
mov
jne
or
sub
loopne
testb
loope
nop
xor
jbe
mov
ret
out
dec
jg
stc
sub
popa
in
mov
cwtl
stos
mov
cmp
push
mov
sub
mov
mov
mov
mov
aaa
mov
leave
lret
call
xor
mov
jno
xchg
aas
inc
mov
into
xchg
mov
or
int3
popf
jns
mov
arpl
shl
cmp
iret
mov
ret
call
lret
xorb
pusha
inc
push
sub
ret
in
cmp
popf
dec
sbb
sub
test
mov
das
mov
adc
and
push
cmp
xchg
add
fmuls
pop
pop
xlat
cmpsl
cmp
xchg
faddp
pop
adc
add
popa
loop
mov
adc
jbe
int
stc
ja
std
xchg
jo
xlat
dec
sbb
iret
jno
push
pop
and
push
movsb
cmp
add
ficompl
mov
fnstenv
mov
mov
iret
adc
dec
aam
lods
pop
rcrb
add
mov
xor
inc
dec
dec
jns
mov
cmc
cmp
sub
das
add
inc
test
cmpb
pop
movsl
xchg
shll
test
test
ss
ret
jmp
xchg
or
adc
pop
out
sub
and
or
nop
jne
jnp
aam
daa
sub
ljmp
jecxz
jg
addr16
sbbl
fiaddl
inc
loop
xor
leave
loopnew
mov
inc
std
sbb
add
imul
xchg
popf
hlt
fdivrs
cmp
mov
sbb
orb
sahf
or
ja
push
mov
lret
push
adc
outsb
xlat
clc
xchg
inc
mov
out
pop
test
andb
loopne
sub
mov
test
push
dec
cwtl
mov
and
lret
mov
push
dec
nop
mov
ja
out
stos
pop
hlt
sub
and
dec
jnp
nop
pop
xchg
mov
aad
test
jb
push
and
push
push
mov
lea
or
mov
cmpsl
fcmovnb
jne
adc
andl
inc
insb
out
cmpsl
xchg
iret
sbb
int
fwait
or
mov
sub
mov
adc
cmp
push
loope
or
sbb
lods
sbbb
movsl
xor
jbe
ds
cs
pop
dec
sub
das
fsubrs
mov
daa
pop
push
dec
dec
jecxz
jl
xchg
xor
or
jae
or
push
jb
sub
xchg
cli
jns
pop
and
testb
sbb
adc
and
mov
xor
add
inc
das
inc
lea
aaa
push
mov
jg
data16
pop
cmp
mov
rsqrtps
jns
sbbb
add
xchg
incl
cmp
xchg
sbb
movsl
cmp
jnp
or
lret
mov
paddq
cwtl
fsts
lcall
mov
imul
push
inc
arpl
gs
loopne
add
adc
insb
in
test
adc
rorl
out
loope
les
sbb
and
sarb
xchg
xchg
addr16
push
in
add
xrelease
imul
test
xchg
xchg
iret
push
ja
mov
pop
shl
and
outsl
sbb
shrl
mov
pop
sbb
cld
xchg
ljmp
jae
pop
loope
push
fldenv
mov
aas
outsl
mov
movsb
adc
pop
mov
imul
sbb
fimuls
cmpb
xor
xor
mov
dec
mov
arpl
xchg
pop
mov
mov
int
push
in
test
out
add
ja
pop
and
and
cltd
pop
in
aas
cmpsb
test
cmpsl
sub
cld
shll
lahf
jno
sbb
in
push
xlat
jns
xchg
jb
pushf
adcb
xchg
int3
push
nop
gs
inc
fimuls
mov
into
xor
adc
push
jns
mov
push
mov
dec
lds
out
mov
xchg
mov
das
or
pop
and
test
xchg
push
aam
or
test
or
leave
aas
jmp
lret
fcmovnb
sbb
cmp
js
cmpsl
in
fsubrs
pop
mov
std
ret
pop
add
std
or
lods
scas
fstp
scas
addl
dec
inc
daa
hlt
jmp
mov
dec
idivl
repnz
or
fdiv
movsl
jl
mov
ja
push
add
ja
scas
cmp
loop
mov
cmp
scas
addr16
adc
xchg
insb
xchg
xor
xor
arpl
sbb
pop
icebp
ret
fsubs
cs
js
push
mov
ret
cmp
enter
shl
jae
xchg
jp
xor
lock
fimull
in
outsl
shlb
and
jns
aad
jno
mov
pop
add
push
xlat
mov
repz
ret
dec
inc
shll
add
fistpl
push
sub
push
jle
or
popa
jecxz
xchg
adc
and
mov
jl
jg
shlb
mov
out
dec
xchg
push
dec
gs
mov
pop
loope
int3
cmp
push
test
mov
inc
xor
test
outsb
js
xchg
pop
in
xchg
aad
stos
cmpsb
loop
add
pushf
and
pop
xchg
lods
mov
cmp
or
nop
sarl
jno
loop
and
xor
cs
ss
inc
cs
fst
shlb
adc
popl
jle
jl
mov
call
rcrb
clc
push
sbb
or
mov
lret
sbbb
out
xchg
sti
or
or
test
into
mov
mov
pop
movsb
jg
imul
mov
sbb
sbb
adc
mov
push
sbb
inc
xchg
sub
add
setae
xchg
inc
pop
mov
sbb
inc
lods
xor
dec
pop
cmp
sbb
xor
mov
lds
jbe
xchg
test
mov
mov
push
cltd
add
es
push
mov
push
test
pop
and
mov
mov
cmp
jmp
or
repz
fnstcw
mov
ds
bound
loope
in
sti
add
test
insb
mov
dec
adc
jae
scas
out
mov
outsl
imull
dec
gs
mov
add
inc
inc
bound
fs
cmpsb
loope
ret
dec
inc
popf
clc
mov
xor
xchg
aam
ss
sub
push
mov
mov
lods
addr16
fidivs
mov
not
imul
icebp
mov
loop
pop
fadds
mov
mov
dec
call
mov
mov
cmc
test
push
cli
rcll
cltd
sti
push
mov
int
push
icebp
push
out
pop
mov
jl
popa
sub
or
jno
mov
fld
adc
add
mov
mov
mov
repnz
push
test
cwtl
dec
out
dec
les
lcall
mov
repnz
mov
or
movsb
mov
divb
sbb
dec
insl
xor
fistps
or
push
or
js
push
imul
mov
push
pushf
gs
mov
and
sub
repz
fwait
stc
arpl
dec
mov
fwait
add
sarb
xchg
fisttpll
arpl
fwait
pop
push
hlt
adc
ficoml
mov
cmpsb
push
dec
add
xchg
or
adc
pop
xchg
out
dec
ja
js
xor
pop
andb
mov
lock
lods
lods
adc
inc
data16
loopne
and
test
xor
loop
test
lea
ficoml
and
or
cltd
std
adc
mov
sub
imul
fistl
xor
inc
jb
es
xor
inc
gs
out
dec
mov
in
mov
insb
testb
mov
outsb
aad
lock
mov
movsb
aaa
scas
push
inc
adc
adc
jl
leave
js
dec
lods
jge
or
mov
push
sub
rcrb
xor
je
jmp
or
sti
pop
cmp
fldl
call
cmp
sbb
mov
mov
or
aam
dec
mov
add
mov
inc
jne
stos
movsl
ds
push
sbb
pop
push
aas
pop
dec
out
cmp
inc
cmc
push
insl
add
lret
jb
mov
dec
push
jnp
dec
mov
popf
xor
dec
leave
test
mov
jne
pop
test
push
xor
dec
mov
adc
scas
test
sbb
inc
int3
fidivrs
inc
adc
cmp
fs
xor
pusha
mov
cmp
pusha
mov
push
pop
mov
inc
loope
in
sti
lcall
push
test
les
push
push
push
xchg
pop
xchg
lods
outsl
rclb
inc
mov
or
popf
inc
ds
pop
out
fucomi
add
mov
sbbl
push
insb
lahf
jae
leave
sbb
dec
pop
mov
xor
test
sub
test
ret
mov
data16
iret
leave
adc
test
insb
mov
out
cs
insb
push
lods
ljmp
pushf
or
in
cmp
push
xlat
and
std
dec
adc
sbb
or
lahf
mov
mov
shrb
enter
jno
dec
shlb
add
pop
popa
adcl
add
cmpsb
sub
loopne
sbb
mov
and
jbe
sahf
std
jbe
addr16
or
out
add
icebp
movsl
je
in
pop
adc
or
sub
xlat
pop
pop
jge
mov
je
jns
aam
mov
xor
adcb
mov
and
add
dec
stc
sub
popf
dec
push
insl
mov
xchg
mov
sbb
fsts
inc
add
sbb
sti
and
mov
cmp
enter
jg
fldt
cmp
es
int3
jb
pop
scas
out
mov
xor
jno
cld
mov
add
xor
repz
mov
aas
pusha
popf
sbb
jno
and
cmpsb
push
push
into
jnp
pop
adc
fwait
insl
jb
pop
mov
sub
add
xchg
imul
cmp
xor
sub
cltd
fidivrs
arpl
jo
jbe
push
inc
xor
sbb
in
je
fildll
push
hlt
push
xor
jecxz
mov
push
cmp
adc
sbb
ret
jg
fcmove
insb
and
sub
mov
adc
hlt
aas
adc
pop
fwait
sti
shl
ret
shll
arpl
add
in
shrl
push
movsb
sarl
dec
mov
sub
sahf
mov
adc
sti
std
cmp
ficomps
jbe
xchg
adc
inc
call
lods
xlat
ljmp
repz
add
pop
dec
mov
lret
pushf
arpl
jbe
test
jmp
inc
pop
jnp
mov
jl
xchg
int3
arpl
sub
or
pusha
sbb
jne
or
aaa
cli
xchg
push
add
xchg
mov
rolb
lock
in
mov
test
cmp
jne
pop
lcall
and
loope
inc
pop
fidivrs
lahf
clc
jmp
and
and
sbbb
test
call
sbb
mov
sbb
push
cmpsl
xor
int
mov
cld
xchg
push
fisubl
das
pop
cwtl
das
dec
push
pop
lock
and
xchg
mov
loopne
pusha
fbld
ss
mov
xchg
mov
jle
jge
jecxz
nop
popf
xor
in
sbbl
iret
xor
rolb
xorl
in
inc
les
int
push
gs
mov
stos
mov
mov
pop
dec
jp
jg
or
and
inc
and
xchg
andl
dec
push
fdivrp
xchg
push
sub
mov
out
ja
sbb
dec
loopne
xchg
cld
mov
pop
addr16
shrl
jae
sub
adc
incb
test
cmp
js
mov
stc
inc
ss
bnd
inc
mov
dec
movsb
jl
test
lds
jo
add
sahf
iret
dec
jns
outsl
dec
and
cmp
mov
cmc
test
in
mov
mov
adc
cmp
in
and
mov
dec
in
push
pop
stos
cmp
movsb
insl
int3
loop
sbb
loop
sub
fstpt
push
xlat
aaa
insb
pop
imul
ljmp
lods
movsb
cmp
jp
dec
js
fs
inc
fcmovb
js
fisubrl
dec
sbb
jmp
into
mov
rcrl
pushf
inc
movl
leave
daa
cmp
mov
ret
out
mov
sbbl
and
mov
xchg
xor
push
sbb
stc
cmpsl
mov
popl
mov
pop
adc
mov
cmp
jecxz
add
repnz
cmc
push
je
push
mov
dec
js,pt
xchg
movsb
xor
mov
sbb
and
sti
nop
cvtps2pd
mov
loopne
ret
add
push
or
sub
sub
mov
sti
sub
mov
aas
push
dec
pop
or
cmp
lcall
dec
test
iret
stc
popf
add
imul
popa
cmpsl
inc
mov
outsb
cmp
rcrb
subl
adc
mov
sbb
or
icebp
rol
aas
xlat
idivb
and
xorl
jp
mov
popf
add
jno
fadds
mov
sbb
out
mov
test
mov
push
cmpsb
and
ficompl
cmc
and
popf
divb
sub
shr
pushaw
sub
xchg
nop
adc
in
iret
es
dec
ss
es
mov
cmp
cmp
mov
jg
jno
jo
or
in
in
sbb
push
jb
test
out
movsl
xchg
stos
mov
or
mov
jecxz
dec
leave
mov
das
mov
shrb
pop
push
pop
cli
sbb
jne
cld
stos
sub
jle
ret
xchg
loope
int3
arpl
movsb
rorl
imul
outsb
out
sub
pop
push
lahf
insl
mov
sahf
shl
mov
mov
mov
decb
cmpsb
sub
mov
jae
les
repz
popf
mov
lret
mov
xor
mov
push
pop
hlt
test
jnp
std
shlw
ret
xchg
push
or
mov
mov
repnz
xchg
mov
adc
inc
jecxz
aad
fcompl
xchg
add
loop
rorl
cmp
pop
cmp
rorl
mov
or
lahf
leave
nop
stos
sti
xchg
push
adc
aaa
mov
sub
push
mov
lods
cli
sbb
cmp
out
fdivr
or
insb
cmp
sub
lock
and
test
ret
ret
lds
rcrl
dec
loope
imul
inc
and
inc
mov
push
xor
mov
adc
xor
xor
and
clc
dec
jecxz
lds
add
les
pushf
jmp
sbb
inc
in
test
das
push
imul
fadd
je
inc
cmpsb
out
gs
lret
sti
mov
push
insb
test
and
cmpsl
nop
stos
pop
icebp
gs
and
push
stc
addb
sbb
nop
cs
mov
sbb
decb
stos
jno
or
rclb
fcoms
fisubrl
arpl
mov
inc
inc
sbbb
test
insl
lahf
pop
jnp
aas
dec
inc
pushf
loop
xchg
xor
sahf
popa
jmp
and
sbb
ficomps
cmc
inc
mov
popf
andb
sub
leave
fnstenv
aad
adc
xor
stos
push
cld
out
sub
cmp
pop
mov
add
ret
cmc
dec
sub
mov
aaa
ficomps
inc
add
lahf
push
je
pop
cmp
inc
in
dec
stc
adc
movsb
insb
add
jns
cs
lcall
xchg
leave
test
lods
pop
lcall
and
pop
push
jnp
js
jne
inc
stc
mov
fldcw
adc
xchg
push
icebp
xchg
cmp
lahf
mov
cmp
push
gs
pop
add
jmp
int
dec
repz
test
lret
enter
shr
mov
mov
iret
data16
test
loop
sbb
test
insb
mov
leave
sub
and
jl
sti
mov
fsts
shr
ss
adc
fs
int3
or
fwait
sub
push
and
lds
mov
add
rep
aas
xor
mov
inc
scas
imul
loopne
aaa
shll
jge
sbb
dec
sbb
mov
adc
icebp
movsl
jecxz
shrb
call
icebp
insb
lea
cmpb
or
jp
sub
cmpsb
and
or
cmp
stc
fs
add
addb
and
add
xor
mov
fldl
xchg
cmp
sub
jp
push
scas
iret
sbbb
and
je
adc
mov
sbb
mov
jle
cli
cmp
por
dec
mov
vminsd
sbb
mov
push
inc
adc
or
dec
jne
jne
outsl
out
insb
mov
scas
mov
loopne
sub
lods
lds
add
pop
mov
sub
fildll
push
nop
xchg
push
xor
repnz
sbb
in
jmp
push
dec
in
mov
sub
xchg
aad
popf
andl
sbb
xorl
sti
aaa
push
ljmp
movsb
rcrl
pop
fs
mov
lret
xor
cwtl
insl
push
push
imul
jp
xchg
ret
pop
push
mov
aam
dec
inc
fld
cmpsl
ds
outsb
cs
push
stos
les
pop
push
lods
mov
jns
xchg
mov
scas
sbb
movsl
inc
ja
adc
inc
cltd
div
xor
push
sbb
push
lds
or
pop
cmc
and
scas
ret
clc
jp
pop
test
mov
shll
xor
mov
ret
jb
incb
lret
xchg
push
or
adc
scas
pop
popf
mov
enter
pop
pop
inc
dec
out
jp
pop
pusha
and
mov
aaa
jne
imul
lret
lret
push
insl
push
dec
les
adc
jle
xor
sbbb
pop
mov
aad
ljmp
data16
inc
fisubs
adc
mov
movsb
mov
fisttpll
mov
js
repz
stc
shl
aaa
pop
lret
nop
ret
andl
jo
add
gs
add
insl
aam
fdiv
push
mov
jae
outsl
push
fistl
nop
arpl
aam
push
jno
xor
xchg
std
xchg
add
jo
and
fnsave
pop
push
xor
pop
arpl
sbb
cmp
jge
and
in
mov
ljmp
fwait
lods
cli
dec
dec
mov
ret
jne
push
dec
cmp
add
adc
loop
lcall
fsubs
arpl
leave
flds
xorb
and
out
mov
repz
in
push
mov
lods
mov
mov
push
push
sbb
in
lret
icebp
jnp
and
cltd
inc
decb
or
in
fdivl
fimull
xchg
test
mov
sbb
jge
sbb
je
adc
adc
or
adc
or
andl
pop
rep
jo
inc
aad
mov
push
mov
push
das
pop
test
cmpsl
mov
pop
mov
nop
add
into
call
or
mov
cwtl
jle
in
push
aad
xchg
inc
int
sub
or
adc
aad
std
xor
std
pushf
jns
jmp
pop
inc
scas
repz
add
ja
xor
leave
adc
xchg
push
mov
sub
insl
jg
mov
ljmp
push
push
test
xlat
mov
outsb
in
nop
roll
adc
or
cmp
lods
ljmp
pushf
or
xchg
js
sahf
sub
ret
cmp
sbb
insb
pop
dec
add
mov
shl
fbstp
jno
mov
fbld
xchg
sarb
mov
pusha
dec
int
jg
es
pop
das
inc
cs
xlat
je
test
pop
inc
out
lret
push
notl
mov
pop
sbb
fs
pop
pop
test
into
gs
test
sahf
repnz
icebp
inc
jge
call
push
nop
sub
pop
mov
das
in
cmp
adcb
adc
jbe
mov
mov
jb
jge
ss
hlt
cltd
sbb
loop
popf
push
out
sahf
sub
cmpsl
cltd
push
mov
test
das
mov
gs
test
cmc
add
add
push
push
and
lcall
popa
clc
push
mov
fsin
out
xor
inc
std
xor
leave
and
pop
ja
insb
cmp
xchg
jns
stc
mov
xlat
jno
cmpb
sbb
repnz
mov
pop
mov
ss
push
dec
dec
cltd
mov
pop
filds
lock
adc
inc
lock
push
adc
mov
mov
mov
and
or
xchg
clc
or
repnz
notl
pusha
call
jg
xchg
shrl
enter
mov
call
pop
and
stos
xchg
adc
ds
lret
pop
dec
in
mov
imul
cmp
pop
insl
fistl
mov
rcr
cmp
test
scas
loope
imul
mov
stos
cmp
mov
xchg
or
idivb
mov
pop
cmp
lea
inc
mov
fnstsw
bswap
cmp
cmp
pop
sub
nop
dec
mov
mov
stos
rcrl
out
or
incb
push
cmp
fidivs
xchg
sub
or
pop
je
push
popf
xor
pop
jo
xor
sub
fnstsw
push
out
ret
les
sbb
outsb
scas
cmp
clc
mov
add
xchg
or
pop
adc
inc
jp
jo
movsl
jge
sub
lcall
mov
sahf
mov
fwait
jle
dec
mov
ljmp
or
fdiv
xchg
aam
lds
insb
xchg
add
data16
add
sbbl
add
xchg
dec
xor
popf
xchg
es
mov
push
out
xchg
pusha
int3
pop
push
inc
push
cwtl
lret
adc
arpl
fmuls
adc
imul
and
push
clc
or
xor
ja
jne
cmp
or
push
xchg
lods
dec
dec
and
fmull
leave
sbb
add
and
test
testl
movsb
pop
movsb
iret
push
in
pusha
xchg
pop
and
inc
testl
sub
popa
flds
int3
sbb
add
in
add
mov
stos
mov
stc
nop
jae
mov
pop
adc
test
mov
fcmovb
mov
sti
cmpsl
sbb
mov
cli
inc
xor
mov
and
ds
xchg
sub
push
jge
aad
mov
sub
inc
outsb
hlt
sarb
out
ja
cli
fidivs
jg
sbb
outsl
mov
mov
pushf
or
xchg
sub
das
pushf
or
or
repnz
adc
test
push
roll
andb
fisttps
mov
inc
arpl
jnp
je
test
xchg
xchg
test
xchg
mov
xor
push
clc
outsb
popf
push
aaa
lcall
cltd
std
sbb
loopne
mov
inc
push
pushl
lret
or
test
jns
push
jl
fcoml
imul
shr
addl
push
inc
orl
mov
push
mov
mov
iret
pushf
in
xchg
idiv
in
inc
pop
pop
imul
pop
mov
inc
or
movsl
cmp
shrl
add
fdivl
jmp
add
sbb
insl
pop
push
iret
mov
out
mov
cmp
lret
cmp
push
push
mov
data16
rorb
sbb
sub
dec
icebp
cli
nop
or
inc
and
fcompl
lods
pusha
jns
dec
sub
xchg
cltd
add
out
push
adc
pop
fs
fsubp
bound
lods
aad
subl
sbb
cs
fisttpll
adc
les
in
out
ret
or
push
out
inc
add
xchg
adc
stc
adc
imul
negl
stos
aam
gs
or
cmpsl
sbb
pop
in
jg
adc
add
sbb
xchg
movsl
idivb
sbb
pop
insb
mov
push
fs
mov
lods
enter
push
inc
int
sbb
addr16
lahf
dec
push
xchg
rorb
lods
sahf
lods
pop
xor
xchg
mov
or
test
setns
push
push
mov
mov
aas
cmp
sbb
lods
neg
popa
jnp
sarl
fcoml
cmp
inc
movl
inc
roll
mov
cmovp
jnp
mov
and
sbb
cmp
pop
jmp
cmp
inc
xor
xchg
pop
mov
into
push
sti
sbb
in
pusha
adc
lea
jnp
lds
lea
push
dec
pushf
test
sub
adc
aam
inc
das
lods
mov
imul
sbb
cld
cmp
and
cwtl
inc
leave
sbb
insl
test
fsts
mov
lods
mov
pop
shrb
sub
adc
fbld
fnsave
sbb
test
out
or
daa
shl
es
movsb
adc
cs
cltd
inc
jmp
popa
mov
and
pusha
pop
ret
fnop
jecxz
lcall
bound
jnp
je
popf
enter
inc
xchg
mov
mov
testb
sbb
push
jne
mov
dec
or
add
or
and
cmp
adc
mov
shlb
or
cmp
roll
inc
in
sub
and
sub
ss
adc
bound
inc
mov
int3
and
mov
aad
pop
sub
cmp
and
mov
shrl
jnp
fadd
push
pop
imul
into
sbb
or
mov
fimuls
sbb
pop
pop
or
fiaddl
fidivs
xchg
push
inc
or
jp
std
and
adc
push
repnz
mov
jp
test
mov
mov
push
lods
jbe
shr
dec
xchg
cmp
nop
sbb
mov
ja
inc
push
mov
les
jge
or
lcall
int3
mov
sbb
jns
out
outsb
inc
movsb
jge
testl
push
syscall
dec
lods
mov
iret
rsm
sbb
pop
mov
loop
push
ljmp
jno
and
or
bound
cmp
xchg
sub
push
dec
add
fstl
loope
dec
mov
sub
ret
dec
add
xlat
mov
stos
mov
mov
js
mov
inc
rcll
push
es
cli
nop
popf
lods
decb
sahf
mov
adc
data16
cwtl
sti
popl
xor
mov
push
add
std
pushf
xor
stos
arpl
stos
mov
sub
test
cs
mov
loop
cmp
mov
xchg
dec
xchg
pop
pop
mov
pop
xor
pop
dec
add
aas
dec
div
adc
and
rcl
or
push
mov
rcll
jnp
jno
or
push
xchg
arpl
and
sub
pop
dec
out
add
mov
lods
mov
xchg
sahf
and
aas
loopne
dec
movsl
sbb
ljmp
outsl
sti
xchg
test
leave
cld
xchg
sti
and
imul
push
pop
sahf
cmpsb
inc
outsb
fwait
jnp
and
inc
in
jmp
push
sbb
dec
add
je
xchg
dec
loop
test
mov
ds
mov
add
pop
repz
int
pop
ret
or
cli
imul
push
lcall
arpl
jp
bound
popf
xor
xor
dec
sbb
mov
cmp
and
rclb
ja
lret
out
add
lds
adc
pop
dec
cmp
inc
and
dec
lock
lea
adc
pop
ljmp
jns
xor
push
testl
sbb
push
mov
subb
addb
jg
imul
mov
pushl
xchg
cmpsb
sbb
xor
jle
mov
dec
fnstcw
stos
popa
in
xorl
and
adc
mov
lahf
mov
lods
pop
out
shr
adc
cmc
mov
add
lock
icebp
sbb
pop
jmp
mov
sbb
mov
push
call
mov
outsl
pop
vmovups
push
mov
push
call
jl
jo
xor
and
add
xlat
repz
xchg
cmpsl
pop
popf
inc
adc
popa
jle
cmp
lret
aam
test
mov
lcall
jo
inc
ds
jmp
fistps
xor
bound
rcll
mov
dec
pop
mov
aad
cmp
jle
ss
shlb
inc
sbb
iret
xor
push
push
in
xchg
lds
es
mov
add
mov
jae
push
ja
ja
inc
mov
jp
xchg
sti
stos
sbb
popa
jae
loope
pop
adc
push
mov
mov
stos
fucomi
rcl
aam
aaa
pop
mov
mov
rorb
dec
lcall
lret
or
es
data16
fwait
loop
cmp
and
std
xchg
mov
stos
fwait
xchg
pusha
jl
push
int3
adc
inc
adc
ret
push
hlt
mov
mov
lcall
lcall
popa
das
mov
fdivrs
inc
adc
pminsw
or
mov
jmp
nop
and
into
sbb
mov
out
xor
pop
insb
jg
into
mov
jne
lods
inc
loopne
test
fisttps
mov
sub
xorl
rorb
push
lahf
bound
jo
cmpl
enter
fcom
movb
aaa
push
sbb
add
dec
mov
not
jne
insl
pop
arpl
mov
mov
push
mov
or
bound
cmpb
popf
jg
inc
fwait
iret
cltd
sahf
daa
push
fldl
or
test
sarb
fldcw
push
data16
jo
arpl
sbb
testl
sub
xchg
cmp
mov
mov
sbb
jne
cmp
xor
cli
pop
jmp
into
xchg
add
negb
mov
jno
pop
aad
aam
cmp
sarl
dec
cmp
mov
fdivs
sub
movsl
xchg
pop
push
outsb
mov
das
rorl
std
pop
je
out
pusha
negl
inc
test
scas
fisttpll
outsl
dec
pop
adc
mov
daa
push
mov
lret
lret
or
das
pop
ret
pop
popf
jns
mov
xor
inc
add
and
out
cmpsl
adc
fsts
add
and
not
int3
cwtl
cmp
subb
lock
call
jmp
gs
sbb
xchg
sub
rcrl
data16
rcll
jge
outsl
mov
inc
xlat
inc
xchg
mov
sbb
call
mov
dec
sbb
orb
xchg
pop
dec
jle
js
nop
and
add
aad
rorl
dec
daa
adc
mov
sbb
add
jge
sbb
mov
and
mov
mov
stos
inc
imul
shlb
call
cmc
sbb
sub
outsl
fnstenv
xchg
mov
ljmp
pushf
mov
int
mov
scas
mov
stos
sbb
pushf
les
pop
xchg
cs
mov
add
mov
sbb
clc
push
out
ss
cwtl
ja
rcl
adc
and
dec
das
cmp
insb
push
jb
or
dec
and
cli
xor
dec
sbb
dec
mov
cmp
repz
pop
fimull
sub
mov
mov
mov
out
or
test
sbb
jb
push
lret
mov
push
stc
je
xor
bound
out
lods
push
adc
scas
inc
loope
or
mov
int
pop
pop
cmp
and
dec
or
xor
sub
pushf
jmp
and
push
ljmp
sahf
sbbl
sbb
pop
shlb
dec
xchg
nop
pop
adc
sti
popa
cmp
adc
add
out
xchg
lods
adc
andl
cmp
imul
iret
fbstp
es
sahf
mov
xchg
orb
or
aaa
adc
mov
inc
fstpt
cmp
aam
cmpsl
pop
ljmp
cli
adc
mov
lods
out
pop
cltd
data16
xchg
icebp
popa
mov
loop
adc
outsl
adc
pop
lods
sbb
ds
jl
fistpll
mov
dec
movsl
icebp
loope
fidivl
mov
mov
aad
les
movsb
xor
mov
fwait
loope
ljmp
icebp
rol
pop
push
jb
in
out
loop
inc
daa
mov
push
stos
inc
adc
jae
jg
sbb
mov
xchg
push
mov
out
arpl
jl
iret
lcall
xor
loopne
mov
mov
mov
imul
ss
jns
mov
push
dec
pop
inc
sar
nop
jecxz
pop
push
loopne
sbb
repnz
or
pop
adc
les
repz
lock
xchg
out
test
scas
mov
and
mov
stos
inc
inc
test
push
jo
loope
data16
rolb
cwtl
add
popa
push
loope
out
addl
jno
jns
mov
push
addr16
std
aad
or
jb
std
pop
scas
add
fldenv
add
pop
test
call
push
xor
jno
and
push
sbbb
mov
mov
or
je
mov
js
push
aaa
sbb
inc
cmp
lret
and
mov
xchg
lret
je
lock
push
mov
xor
out
push
sahf
orl
mov
or
xorb
ret
and
cmp
lcall
dec
jp
ja
jo
loopne
imul
xor
dec
jno
jmp
inc
rorl
xlat
mov
iret
mov
or
add
jnp
adc
sbb
or
adc
jnp
inc
test
xor
xor
mov
addl
test
scas
push
leave
insb
sub
daa
pop
fisubs
dec
mov
and
pop
aam
mov
jg
sti
inc
clc
rol
cmp
arpl
sub
push
out
out
sahf
xchg
inc
test
iret
out
mov
fimull
sbb
jo
cmp
mov
ror
dec
in
movsb
cld
out
jmp
mov
pop
js
pop
and
cwtl
mov
mov
jecxz
aas
ret
ficompl
in
pop
cltd
ja
mov
fists
adc
es
adc
fcoms
imul
xor
fld
out
adc
cmp
pop
mov
pusha
and
sbb
cmp
sub
dec
push
out
inc
js
cmp
cmpsb
adcb
scas
pop
cli
sahf
xor
mov
leave
and
jo
repz
lods
jne
lods
jle
ficoms
dec
cmp
lods
sti
nop
inc
inc
pop
jecxz
pop
push
add
jno
xor
in
xorl
push
adc
mov
dec
repz
inc
sbb
test
imul
mov
fisubl
out
add
ljmp
jl
insb
sub
add
pop
in
or
sbbb
or
jmp
inc
jecxz
pop
xchg
into
gs
pushl
xor
popf
out
add
out
in
rcrb
mov
into
aas
call
cmp
in
popl
inc
pop
xor
int
xchg
jb
icebp
movsl
ss
shl
jl
sti
aas
dec
mov
sti
mov
pop
loop
call
jae
xor
adc
sbb
cmp
icebp
xlat
jmp
dec
ja
mov
inc
adc
lock
jmp
adc
ss
daa
out
clc
sahf
xchg
ret
mov
push
cmc
and
pop
stos
xchg
add
or
daa
push
pop
mov
fbstp
push
mov
dec
pop
pop
hlt
sbb
push
repnz
xor
add
dec
mov
mov
ror
sbb
ret
outsb
mov
mov
cmp
into
data16
lds
push
xchg
lock
repz
push
add
fdiv
je
nop
jg
jae
dec
pop
mov
adc
mov
pop
out
xor
jecxz
pusha
or
pop
repnz
cli
int
push
inc
add
stos
add
inc
gs
and
addr16
je
jle
es
pop
cmp
movl
jmp
push
enter
sub
and
jne
stc
jecxz
cwtl
das
xor
mov
daa
shlb
and
jbe
or
lret
pop
and
jg
imul
adc
mov
popf
sarl
push
loop
pop
stos
push
sub
test
xlat
or
cli
inc
std
mov
pop
xor
dec
lock
cmp
or
iret
adc
rorl
xchg
xchg
call
shll
outsb
push
mov
insb
xchg
xor
xchg
dec
pop
in
shll
mov
xchg
cmp
fmuls
or
std
jae
xor
push
mov
jg
jne
jp
push
repnz
lock
js
sti
adc
push
sahf
sub
rcrl
mov
sub
mov
pop
inc
xchg
notb
adc
mov
xlat
dec
or
sbb
sub
inc
call
mov
shr
dec
jecxz
pop
cltd
aad
repnz
add
clc
mov
lods
push
dec
arpl
sbb
js
jle
out
xor
lcall
ds
xchg
ret
xchg
cmp
sbb
mov
loope
or
xchg
add
lds
dec
repz
mov
stos
jl
sbb
in
aas
sar
aaa
and
jmp
push
loope
pop
repz
je
xchg
xor
add
pushf
xchg
lret
inc
mov
sti
mov
lret
icebp
xchg
jle
int
fadd
int3
stos
in
test
xchg
jo
mov
mull
mov
out
mov
dec
arpl
in
mov
mov
xchg
mov
mov
imul
imul
fisttpl
cmc
aaa
fst
scas
fistl
adc
loope
mov
sarb
hlt
or
push
arpl
jge
add
or
inc
fldt
jl
adc
int
cld
jnp
inc
xchg
stc
lods
das
add
lahf
add
repz
and
or
add
dec
ret
inc
mov
ljmp
xchg
ljmp
std
mov
or
and
std
mov
dec
mov
aaa
cmpsb
add
xchg
xchg
pop
cmc
mov
cmp
mov
les
mov
cmp
sbb
mov
addr16
pop
push
jo
sub
lods
xchg
adcb
dec
aam
cmp
jle
cmp
xorl
mov
push
dec
lret
inc
jmp
fwait
aad
lret
adc
xchg
push
imul
fwait
aam
xor
inc
inc
fistpl
daa
stos
jp
pop
nop
lcall
sbb
xchg
push
ret
jge
jnp
pop
les
adc
jge
mov
dec
xchg
add
aam
cld
lcall
push
movsb
pop
inc
inc
pop
roll
in
out
cmpsl
enter
dec
leave
test
or
addr16
adcb
cmc
je
je
sbb
mov
or
mov
iret
inc
imul
mov
xchg
fs
jl
mov
outsl
mov
jle
jge
push
cmp
sahf
mov
jmp
test
cmp
jbe
adc
fcmovnb
out
mov
or
pop
es
pushf
cmp
rcrl
cltd
lods
mov
jmp
loopne
movsl
xchg
stos
jnp
jno
mulb
jp
shlb
jns
lret
push
loope
dec
adc
rcrl
jno
xchg
mov
sbb
movsb
sarb
sar
insb
repz
rorl
out
pushf
sahf
xor
mov
es
inc
in
pop
ret
inc
lock
inc
dec
mov
clc
imul
rcr
dec
mov
bound
stos
ljmp
sarl
sbb
xchg
aam
std
clc
xlat
movsl
movsb
sub
mov
pop
cltd
push
fucomi
jo
pop
and
aaa
fldcw
cmc
js
mov
cmpsb
mov
xlat
outsl
test
lods
cs
xorl
adc
fstps
xchg
mov
push
dec
add
js
mov
mov
sub
mov
cltd
test
imul
mov
adc
jns
mov
in
lret
out
mov
push
popf
sbb
jmp
sub
mov
pop
les
bound
xchg
jle
dec
fistpll
das
data16
mov
adc
jl
inc
in
and
mov
test
or
mov
inc
fldl
ljmp
pop
adc
sbb
out
loope
mov
xchg
push
inc
aaa
dec
loopne
gs
push
mov
add
sahf
jno
push
clc
or
dec
cmpsb
fst
mov
addr16
sub
outsl
mov
fmull
pop
mov
jg
aas
mov
add
jnp
mov
ds
popf
mov
mov
repz
into
push
xor
pop
cmp
loop
cmp
push
dec
dec
mulb
js
out
cltd
hlt
pop
lret
pop
add
adc
xchg
aas
dec
mov
fwait
jb
ja
fcom
push
cli
repnz
icebp
inc
fsub
dec
sarl
outsl
adc
xchg
jb
addb
ret
nop
pop
or
mov
add
inc
lcall
arpl
rclb
and
jo
int3
inc
shrb
test
push
mov
and
push
popf
mov
push
and
test
jecxz
dec
fsubr
inc
and
iret
int
add
adc
dec
int3
dec
pop
cltd
mov
les
jb
shl
lods
jg
xor
mov
ss
xchg
xlat
lods
push
jl
cltd
jecxz
shll
add
jl
insl
stos
and
hlt
inc
outsl
push
dec
mov
push
push
push
mov
fmul
xor
popa
cmpl
inc
enter
inc
mov
daa
aas
push
sbb
mulb
cmpb
jge
je
push
xchg
rolb
mov
aad
repnz
mov
push
add
adc
inc
frstor
ret
pop
lea
in
in
push
mov
lcall
push
leave
inc
dec
jle
jae
lret
mov
adc
test
or
fstl
mov
sub
fs
inc
addb
and
insb
fyl2xp1
dec
lret
sbb
sbb
clc
cmpsl
inc
cmp
int
fiadds
fistpl
pop
frndint
xor
in
in
inc
mov
js
subb
gs
ds
push
cmp
hlt
adc
into
movsl
mull
mov
aaa
xor
dec
out
outsb
mov
add
cld
ss
sub
cmc
xlat
mov
jecxz
sub
outsl
mov
in
jno
sub
pop
mov
or
or
pop
outsl
shll
aaa
cli
push
push
popf
pushf
dec
cli
adcl
jge
mov
cmp
cli
xchg
pop
pop
out
and
ljmp
pop
pop
sub
jns
sub
ss
xor
cltd
lds
sbbl
or
test
pop
test
pop
cmp
xor
pop
int3
pop
add
fwait
popfw
aas
mov
sbb
dec
adc
push
jmp
fadd
stc
pop
mov
or
push
adc
cmp
sbb
outsl
dec
mov
notb
sahf
bound
dec
pop
push
fwait
cs
push
jnp
push
pop
jae
mov
mov
cmpsb
mov
adc
push
repnz
add
test
orb
xchg
imul
ret
and
inc
movsb
mov
jbe
cmp
pop
inc
dec
or
stos
lret
mov
in
xchg
or
mov
sahf
scas
mov
and
pop
xor
cmc
lret
bound
jb
lods
pop
loop
add
mov
in
lock
mov
repnz
pop
cmp
sti
jbe
shl
mov
loope
sahf
outsb
in
push
adc
pop
sti
rcrb
sbb
aam
lret
jno
in
stc
sub
mov
fs
mov
das
mov
lret
stos
inc
sarl
cmp
push
ficomps
cmp
mov
in
iret
jne
dec
insb
sbb
pop
mov
inc
popa
jnp
mov
frndint
into
test
lods
and
loop
push
aam
repz
inc
jecxz
jmp
jae
ret
in
cs
out
xchg
add
xor
adc
mov
dec
pop
jp
sub
leave
rep
and
sbb
sar
mov
je
shlb
and
inc
dec
sub
clc
test
popa
clc
jbe
ret
fs
dec
dec
push
mov
into
and
cmp
sub
arpl
add
or
jns
in
jge
pop
adc
dec
dec
jb
cmp
ss
pushf
mov
push
cwtl
pop
xchg
pop
out
push
mov
or
sahf
mov
inc
mov
iret
lcall
adc
jp
cld
add
jnp
sti
nop
jp
xchg
lods
mov
adc
jle
sbb
out
cmp
mov
or
stc
fwait
and
mov
mov
sbb
movsb
push
std
lahf
mov
mov
sbb
cmp
xor
pop
std
xchg
cld
xchg
add
sti
nop
pop
subb
lcall
pushf
xor
or
fisubl
jae
cmpsl
into
and
fisubrs
lea
xchg
xor
adc
lcall
adc
mov
loope
push
fdivs
cli
outsl
daa
lcall
adc
adc
shl
das
add
test
push
sbb
addr16
rcll
mov
movsl
pop
insl
sub
dec
and
loop
pop
adc
icebp
push
outsl
cld
pop
push
xchg
std
cmp
or
push
cld
sbb
popa
jmp
mov
cmpsl
mov
ds
add
lds
push
pop
pop
xor
divl
addr16
xchg
sbb
cmp
xlat
xchg
cmp
cmp
adc
mov
pop
mov
in
inc
and
xchg
and
popa
stos
test
or
test
dec
lock
aaa
mov
push
sbb
sbb
or
stos
test
test
cs
leave
fisubrl
out
out
xchg
push
lock
push
xchg
and
pop
je
sbb
mov
dec
movsb
and
sub
icebp
xchg
add
ss
cmp
int3
in
jl
dec
mov
mov
and
daa
ljmp
sbb
ljmp
inc
xchg
icebp
xchg
sarb
adc
push
mov
add
dec
cld
push
and
fistl
ret
or
dec
cwtl
insl
aad
jnp
cmp
int
or
mov
nop
xor
xchg
add
push
add
iret
mov
adc
imul
xor
cpuid
mov
pop
inc
call
in
jno
iret
mov
mov
imul
lcall
push
adc
pusha
ss
jecxz
add
loopne
and
out
pop
iret
and
lea
mov
fiadds
aam
sbb
cwtl
sarl
and
divl
sub
clc
or
call
inc
aas
test
cmp
xchg
cmp
pop
add
mov
mov
pop
xchg
or
cmp
stos
ds
popf
jmp
mov
pushf
shll
insb
mov
sahf
ficoms
push
xchg
daa
testb
ds
les
mov
adc
cltd
mov
xor
and
mov
and
pop
hlt
aad
xchg
push
jbe
sub
xor
in
mov
sub
test
imul
repz
cltd
or
add
add
push
push
xor
andl
jl
sub
mov
jo
inc
and
pop
out
push
subb
xor
push
int
mov
xchg
fs
adc
xchg
rolb
add
fdivl
out
mov
mov
pop
lcall
ret
leave
in
ljmp
mov
add
jne
xor
rorb
mov
lock
xor
mov
cmp
or
adc
sbb
push
cs
movsl
sbb
daa
cmpps
or
inc
inc
shll
cwtl
daa
add
fstpt
sahf
inc
lret
aam
mov
sbb
mov
pusha
dec
xchg
adc
fidivs
scas
sub
aam
lods
mov
enter
imul
pop
movb
xchg
incl
xlat
stc
dec
fbstp
pop
das
mov
fildll
shrb
scas
push
mov
stos
sub
push
jno
and
mov
pop
outsl
ret
stc
cmp
lods
out
inc
mov
mov
int3
push
jae
sub
lret
cmc
mov
dec
mov
jg
and
aaa
movsb
or
jmp
cld
mov
jnp
pop
adc
mov
insl
movsb
sbb
into
loop
inc
int3
mov
jne
into
call
popf
mov
fadds
jecxz
das
xor
and
inc
xchg
dec
inc
mov
push
pop
inc
adc
jecxz
xlat
cmc
sub
sub
ss
mov
es
xor
mov
in
push
and
js
hlt
jae
sub
add
dec
pop
jo
xor
insb
gs
dec
adcb
cmp
mov
lock
test
adc
xor
push
mov
or
inc
pusha
mov
or
cs
clc
or
imul
jecxz
mov
sub
jl
and
sub
call
xor
jns
mull
pusha
adc
and
lret
xor
xor
xchg
bound
mov
push
mov
add
rcll
mov
xchg
adc
mov
adc
adc
add
cmp
jo
add
jge
imul
xchg
movsl
push
add
arpl
pop
and
int3
loopne
orl
or
fiaddl
pop
test
iret
mov
int3
jmp
aam
and
shll
jae
ret
jmp
sbb
popf
push
lods
ret
aas
and
adc
push
xor
dec
jp
inc
dec
jo
icebp
fsubrl
inc
jecxz
cld
fdivl
loopne
aaa
push
arpl
outsl
rcrl
in
or
xchg
jb
ja
jns
xlat
and
out
ret
enter
mov
xlat
sub
ss
stos
daa
mov
xor
and
ficomps
xor
mov
clc
sahf
notl
push
std
icebp
les
inc
xchg
jnp
js
dec
lods
sti
mov
push
jp
jge
jle
fisubrs
adc
lock
leave
cld
xchg
repz
xchg
push
das
andb
lret
add
adc
stos
sbb
push
jmp
mov
xor
or
mull
shll
arpl
or
or
daa
aaa
or
test
mov
or
aad
push
insl
jge
sub
les
and
cmpsl
inc
lahf
mov
jp
sub
sbb
test
lea
pushl
lods
into
cs
and
stos
rcrl
or
mov
inc
orb
push
adc
sub
jge
pop
mov
data16
mov
dec
test
dec
loop
insb
push
cli
pushf
mov
add
pop
mov
cmp
cmp
jb
mov
adc
out
enter
fidivrs
mov
dec
fidivrs
jbe
and
mov
sbb
push
mov
ficoms
test
shll
cltd
sub
lods
push
stos
jno
xor
push
adc
dec
xor
jne
mov
insb
insb
mov
push
lea
aas
and
and
jecxz
jo
in
push
jne
cmpsl
push
aas
and
jmp
jns
enter
fidivrl
lret
test
sub
jo
mov
mov
pop
fbstp
sbb
fcoms
dec
cmp
arpl
movsb
popa
orl
ss
jnp
mov
jmp
inc
push
xor
jo
pop
stos
xlat
iret
dec
testl
test
inc
das
inc
push
lods
out
mov
dec
or
xor
push
or
fldl
push
fldenv
dec
int
adc
iret
cmpsl
shlb
cmc
push
cmpsb
add
add
jp
ficoml
les
cmpsl
adc
push
pop
sbb
jnp
out
lods
andl
gs
mov
adcb
xlat
imul
and
cs
pop
scas
std
xor
push
jo
aaa
into
dec
xchg
dec
ffreep
and
inc
dec
ret
dec
js
lret
cltd
shl
call
cmpsl
ds
pop
out
outsl
rcll
data16
mov
mov
stos
jnp
sbb
fstpt
int3
scas
xor
push
cli
cli
in
aaa
sbb
imul
sub
ret
je
fst
push
out
add
sti
lret
cmpsl
jns
mov
and
inc
mov
femms
mov
and
cs
adc
clc
mov
jg
xor
xchg
push
pop
xlat
lret
jno
inc
mov
and
out
cwtl
je
adc
notl
mov
outsb
mov
mov
xor
aad
add
jmp
sti
bound
sbb
mov
jge
adc
fs
sub
std
or
test
and
cmpsb
inc
fadds
pop
not
out
mov
in
xchg
jl
jg
insl
mov
ret
cmp
stc
cmp
pop
mov
push
xchg
mov
push
insl
xchg
imul
fisubs
aam
in
les
sbb
outsb
imul
push
jbe
mov
std
xchg
les
test
sbb
push
jmp
xchg
sub
xor
xchg
sub
sub
and
pop
ja
push
arpl
xorl
test
stos
and
pop
adc
in
sub
andl
pop
mov
push
and
sbb
lods
and
or
inc
rclb
xor
scas
dec
pop
inc
lods
xor
pop
movsl
lahf
xchg
jnp
ss
ds
mov
jmp
push
inc
xor
movsl
jle
jge
sti
adc
push
test
gs
add
xor
xchg
shll
or
loopne
jbe,pt
repz
fnsave
jbe
hlt
loop
lahf
shlb
mov
push
and
dec
cwtl
inc
fsubl
xchg
mov
inc
jmp
dec
les
add
test
imull
rol
andb
dec
test
lcall
cltd
push
nop
insl
sub
ret
hlt
pop
lods
inc
gs
push
ret
jnp
lods
or
fmull
jns
pushf
xchg
xchg
rcrl
mov
xchg
out
data16
xchg
xchg
inc
ja,pn
aas
test
mov
lods
sub
push
jmp
or
and
jae
push
push
adc
pop
iret
push
mov
push
inc
decb
mov
mov
imul
fwait
movsb
mov
enter
xchg
sbb
mov
test
loope
adc
push
cld
aas
call
or
test
mov
cmp
sub
and
cmp
jmp
or
sub
popf
outsb
xor
ret
jp
leave
popf
mov
dec
push
dec
push
push
int3
sub
sbb
inc
pop
movsl
int3
in
sti
sbb
in
test
sti
repz
iret
fnstenv
or
sbb
push
jl
stc
and
push
std
lods
popf
add
push
mov
pop
subl
popf
jne
xchg
push
in
das
jne
and
cltd
xor
shlb
inc
push
add
jbe
mov
lods
mov
ljmp
cmp
mov
mov
jge
aaa
cli
mov
pop
std
pop
enter
mov
cmpsb
adc
dec
and
aas
push
outsl
jge
cmp
scas
sbb
and
inc
sub
js
roll
ljmp
fsts
in
out
adc
jecxz
cmp
shrb
cld
push
mov
dec
xchg
pop
rcll
dec
cltd
out
cmp
out
inc
push
push
jp
repnz
sub
xor
xor
test
add
fbstp
xchg
stos
mov
faddl
sahf
or
stos
and
imul
imul
push
test
mov
shl
popa
add
leave
and
push
xchg
scas
sbb
and
decl
or
xor
jns
out
mov
repz
dec
jmp
sbb
and
enter
xchg
ds
int
mov
incl
adc
test
jno
jne
outsb
xchg
data16
test
rcl
push
xor
frstor
mov
cmc
jecxz
test
lahf
wbinvd
sbb
cwtl
dec
dec
xchg
in
lds
in
jp
lret
pop
jmp
lods
cmp
fwait
cmp
inc
pusha
xchg
rolb
mov
movsl
sbb
out
add
push
test
jmp
xchg
adc
jnp
jmp
popf
addr16
sub
loope
mov
pop
sub
jnp
sub
rep
xchg
inc
jle
lea
mull
add
scas
les
xchg
pushf
scas
cwtl
outsl
and
outsb
sbb
outsb
loopne
xorb
push
in
xor
cmp
mov
mov
mulb
adc
pushf
lods
add
stos
jbe
jle
pushf
fidivrl
dec
pop
inc
jge
iret
data16
mov
arpl
and
sub
mov
mov
push
scas
lcall
add
gs
jne
add
aaa
in
push
imul
bound
or
jne
mul
decl
mov
add
shlb
xlat
movsb
add
or
aas
lret
mov
inc
pop
jecxz
scas
push
mov
xor
mov
xor
cmp
loop
mov
int
jmp
orl
sbb
data16
fadds
out
pop
mov
iret
push
inc
mov
data16
push
cwtl
xor
xchg
je
ficoml
lock
in
fmul
fisubrl
out
pushf
mov
or
sub
test
daa
stos
adc
dec
mov
mov
sub
or
nop
ljmp
ret
cmp
mov
aas
add
mov
imull
jo
or
cmp
sub
stos
push
mov
xchg
sub
fiadds
dec
cmpsl
sti
pop
in
xor
stc
adc
jg
mov
pop
hlt
out
sub
sar
scas
push
div
mov
cmp
adc
mov
shrl
pop
adc
pop
jbe
cmp
loopne
out
mov
loop
mov
inc
fcoml
jp
nop
dec
movsl
cmp
and
pop
stc
pop
push
mov
push
xchg
dec
inc
pop
fcmovne
enter
lahf
pop
push
imul
add
iret
pop
fists
sub
mov
xlat
leave
inc
leave
or
outsb
bound
bound
xlat
shrl
fcmove
loop
dec
sbb
jnp
jae
mov
mov
lods
pushf
enter
dec
fisubl
xorl
lods
ljmp
call
pop
xchg
aam
push
pop
insl
jmp
mov
jmp
scas
xor
cmp
or
scas
arpl
or
adc
pop
cltd
xor
jns
jl
push
pop
jns
clc
adc
loop
and
std
sub
aam
scas
xor
in
les
or
sub
jb
sbb
pop
in
addr16
ret
inc
gs
sub
mov
stos
in
add
cmpsb
call
or
adc
pop
js
ss
ss
cmovae
cli
add
adc
dec
nop
fdivl
push
nop
cmp
ret
sub
pop
add
and
or
xchg
mov
cli
push
sbb
mov
jl
sbb
imulb
or
inc
cmp
pop
scas
in
jmp
cli
fmull
lods
xlat
fwait
enter
xor
mov
lea
rcll
xchg
mov
xchg
push
or
xor
lods
call
js
adc
jo
nop
xchg
dec
inc
in
divl
ss
xor
lea
shl
outsb
push
pop
pop
jae
xor
popa
or
in
sub
hlt
sub
pop
int
std
dec
scas
out
inc
in
inc
pop
and
cwtl
nop
jno
ret
cmpsl
push
push
stos
sub
leave
out
imul
out
mov
out
mov
push
stos
stos
mov
or
push
dec
mov
pop
pop
jecxz
sub
mov
daa
clc
xlat
add
or
dec
pop
stc
add
icebp
mov
cmpsb
jge
or
add
lods
into
stos
sar
fldcw
inc
inc
jo
sub
bound
jle
popa
cmp
push
decb
popf
add
inc
stos
inc
adc
arpl
leave
cmp
lds
arpl
sub
lahf
test
or
mov
popa
dec
fs
movb
mov
xchg
jl
adc
mov
imul
xchg
jae
push
mov
pop
iret
push
cmp
stos
sti
sub
std
xchg
aas
enter
sbb
push
pop
sbb
cwtl
sbb
repnz
aas
push
dec
notl
xchg
test
mov
mov
and
pop
add
adc
add
push
outsb
xchg
sbb
add
into
xchg
or
sbb
dec
out
mov
mov
xor
sti
push
mov
xchg
daa
fldcw
rcll
aaa
push
mov
cltd
ret
out
add
pop
jmp
inc
sahf
test
negb
sbb
les
push
cmp
dec
mov
cmc
pop
adc
jle
jle
lds
jge
or
mov
jecxz
mov
jg
add
or
jmp
out
push
mov
outsb
sub
xor
mov
xor
pushf
sub
sbb
and
sbb
les
or
cmp
cmp
mov
push
mov
mov
jmp
cmc
insb
cmpsb
out
and
dec
decb
stos
mov
loop
sub
xchg
out
hlt
cmp
xchg
dec
xchg
xor
fmull
cmp
jmp
ss
adc
cmc
xor
sbb
mov
hlt
neg
loop
cmp
xor
pop
jmp
mov
mov
inc
pop
fwait
pop
lcall
loopne
adcb
or
mov
ljmp
sbb
dec
fadds
and
cmp
push
shlb
dec
ret
xchg
mov
xor
add
xchg
pop
call
hlt
fwait
adc
arpl
std
mov
adc
rcrl
xchg
push
lcall
xchg
jmp
mov
lahf
and
cmpsb
sbb
test
popf
decl
xchg
jmp
scas
or
aad
mov
jns
pop
mov
lcall
mov
fstps
mov
fnstenv
in
daa
push
mov
mov
mov
jae
cltd
movsb
jl
fdivl
dec
sbb
adc
add
imul
ds
sarb
add
loopne
dec
in
mov
insb
add
mov
or
inc
dec
std
adcb
push
inc
or
out
xor
mov
clc
div
les
sub
pop
jne
bound
ret
adc
insl
or
test
ret
ja
insl
testb
ret
lahf
mov
std
xchg
fadds
popf
mov
mov
cmpl
xchg
clc
aaa
jns
mov
fcoml
out
add
lcall
sbb
xchg
loope
xchg
jae
adc
xor
xchg
adcl
or
outsl
adc
fxtract
movb
cmp
icebp
cmp
push
push
aas
mov
repz
fs
xor
xchg
out
jmp
out
out
rorl
inc
add
shrl
test
jne
icebp
dec
cmpsl
inc
sub
push
fmul
and
adc
out
inc
loopne
sbb
pop
mov
jbe
out
popa
cmpsb
stos
sti
es
jp
sbb
fstl
fadds
mov
push
jo
mov
or
mov
movsl
cmp
sti
fstpl
xorb
sub
dec
fs
adcb
sub
mov
js
and
jae
out
xchg
sub
xchg
lods
push
dec
push
mov
jne
dec
scas
imul
adc
inc
cld
cmp
mov
enter
pop
jo
sbb
xorl
stc
cmp
imul
pop
cwtl
jnp
xchg
pop
sbb
pop
dec
sbbb
pop
cmp
mov
fisubrl
ror
or
ss
sub
mov
inc
ffree
pushf
cmpsl
or
jb
test
inc
mov
jae
das
cmp
xchg
lods
inc
push
inc
sub
mov
call
fucomi
orb
push
push
rcrl
int
jne
jne
test
imul
fwait
pusha
jo
repnz
cmpsb
inc
rcl
in
or
cs
or
rclb
inc
push
push
bnd
cli
cwtl
xor
mov
mov
cmp
out
pop
out
jl
iret
lods
ror
dec
inc
dec
movsb
xchg
jge
loop
mov
push
adc
imul
dec
dec
inc
fnstsw
add
jl
and
aad
jecxz
mov
out
fbstp
and
sti
jbe
insl
pop
sahf
sahf
ds
jbe
mov
inc
in
stc
mov
mov
shlb
pop
js
xchg
stos
xor
sub
cmp
cmp
sub
addb
or
adc
lahf
das
je
mov
or
jae
fs
insb
test
mov
mov
sub
mov
push
xor
push
pop
push
mov
lret
cmc
movsb
jns
mov
mov
out
mov
push
or
push
cmp
cmp
cltd
daa
popa
mov
xlat
sahf
jns
lds
out
mov
shl
test
das
jge
cmp
inc
call
scas
popa
sbb
inc
movsl
or
and
push
ja
pop
call
es
sbb
pushf
push
dec
int
testl
mov
mov
cmpsl
ret
test
inc
rcrb
dec
daa
shrb
xchg
cmp
lret
push
outsb
add
and
xchg
cmpsb
mov
add
fnstcw
enter
rclb
jge
push
scas
fwait
push
and
jecxz
push
cmp
loope
pop
xlat
stos
test
lods
sbb
push
or
jns
fistpl
stos
inc
pop
push
sbb
xor
cli
out
push
lock
pop
aaa
mov
loopne
leave
push
dec
out
outsl
mov
insl
leave
mov
out
mov
and
adc
movsb
xor
fxch
cmp
jne
push
ss
stos
lock
fisttps
sbb
sbb
cmp
nop
js
mov
xor
xchg
out
xor
xchg
jp
sbb
xor
popl
stos
iret
or
mov
mov
jecxz
pop
aas
testb
cmp
fs
popf
pop
inc
gs
xchg
lret
lea
mov
jp
fstps
jp
lret
dec
inc
fdivrs
xchg
in
dec
pop
cmp
aaa
into
repz
imul
or
cs
test
mov
mov
insl
inc
lahf
jp
lds
gs
pushf
xor
test
sti
adc
cmp
in
xchg
fisttps
adc
push
repnz
dec
lret
xor
xchg
jecxz
cld
xchg
rcl
jne
outsb
sbb
pop
imul
stc
cmp
push
or
pop
dec
movsl
mov
shll
xor
arpl
xchg
mov
test
mov
adc
push
push
mov
inc
dec
stos
jb
dec
push
cwtl
and
inc
mov
mov
pusha
cli
push
pop
mov
shrb
rcll
sahf
pop
xor
pop
mov
add
ds
inc
inc
pop
scas
es
push
push
push
jnp
cmp
outsb
mov
dec
xor
add
sub
pop
rorb
cmpsb
mov
jl
mov
sbb
or
and
push
adc
xor
jo
gs
inc
cmpsl
out
fidivs
mov
divl
in
out
adc
sub
cmp
test
sbb
outsb
loop
sub
inc
jne
jo
xchg
fs
dec
lcall
inc
ret
popf
xor
loop
adc
push
inc
stc
inc
push
xchg
in
push
orl
jmp
cmpsl
xor
add
lods
arpl
and
dec
push
mov
add
push
sub
xorb
hlt
pusha
lds
pop
xor
cmp
inc
lahf
dec
test
cli
rorb
push
xchg
pop
add
xor
mov
int
push
fs
mov
ljmp
jb
inc
sti
or
aad
imul
fmul
sub
sbb
mov
dec
mov
push
pop
pusha
lods
dec
jbe
xor
and
adcl
cmc
les
xor
pop
scas
inc
testl
add
data16
xchg
sub
pop
lock
dec
mov
popa
jl
out
push
shrl
outsb
mov
cltd
js
aaa
stos
mov
jle
clc
xchg
imul
aad
sub
cmpl
xor
stc
nop
mov
pop
pop
stos
dec
xchg
sbb
js
data16
mov
sub
mov
test
ja
das
lret
xor
push
in
sbb
es
inc
mov
imull
imul
mov
lods
out
adc
jo
out
cwtl
mov
or
ja
repz
mov
push
lods
jmp
and
lods
mov
push
inc
cmc
stos
mov
loopne
loopne
je
mov
mov
pop
jl
pop
outsl
or
jg
insl
pushf
pop
jl
fs
insl
fwait
push
dec
jb
dec
insb
loope
int3
cltd
or
jmp
push
cmc
xchg
pop
daa
cmc
cpuid
jle
andb
incl
xor
frstor
push
sar
jno
cmpsl
add
jb
adc
lds
das
sub
bound
decb
fbstp
mov
testb
leave
pusha
cmp
lret
aam
pop
mov
and
pop
pop
xchg
dec
pop
testl
mov
dec
mov
repnz
fwait
or
test
rcrl
push
test
inc
mov
cmp
adc
fistl
pop
addr16
pop
ror
test
pop
push
jmp
mov
push
xchg
jmp
xchg
mov
ficompl
xor
cmp
mov
mov
or
popa
int3
jle
mov
iret
xor
ret
dec
xor
je
daa
iret
lods
jae
sahf
push
add
mov
call
stos
jmp
push
lret
mov
jbe
int
mov
mov
shl
movsl
cmpsl
in
sub
rcr
pop
out
adc
jbe
push
je
push
sub
out
push
rcrb
mov
test
repnz
in
test
jno
push
cmp
cmc
jle
pop
xchg
jmp
pop
lds
add
or
cli
jns
addr16
adcl
shrb
pop
mov
aaa
popa
mov
iret
jmp
xchg
jmp
je
push
in
cmp
jecxz
mov
or
je
mov
xchg
mov
imul
push
into
pushf
jg
fs
stc
int3
pop
pop
hlt
ss
add
mov
pop
sub
mov
adc
loope
mov
xchg
inc
push
lcall
outsb
cmc
leave
push
lcall
push
sub
sbb
fidivl
jge
fs
mov
fnstcw
rorl
sub
mov
scas
lock
xchg
adc
add
sahf
or
inc
into
cmc
jno
mov
enter
test
jl
out
mov
pop
ja
arpl
push
movsl
mov
sub
jne
or
xchg
push
pushf
pop
xchg
mov
push
inc
je
inc
cmpsb
data16
mov
loopne
or
shlb
jg
add
dec
aaa
mov
jp
xor
add
and
cld
dec
sti
add
mov
scas
and
dec
in
jge
sbb
adc
xchg
sub
dec
mov
insb
ljmp
cmp
pop
jmp
add
mov
or
jg
mov
inc
mov
lret
xlat
scas
pop
inc
jmp
and
mov
mov
xchg
incb
test
jecxz
movsb
inc
incb
fs
cld
or
rcrl
test
or
lods
cmp
dec
lret
push
mov
pop
negb
gs
mov
sub
scas
mov
mov
push
or
and
mov
inc
movsb
bnd
sarl
shrb
or
xchg
insb
mov
imul
out
aam
cwtl
xor
push
push
in
fcmovne
xor
fadds
bnd
and
xchg
rcl
dec
push
int3
fcomi
xor
xor
sahf
sahf
js
xor
mov
and
mov
sbb
cmp
mov
clc
pushf
out
movsb
sub
lea
aam
sbb
xor
adc
mov
sub
pop
jmp
or
sub
pop
adc
push
divl
pop
repnz
sub
pusha
add
lcall
out
out
dec
pop
imul
adc
sbb
mov
into
gs
and
clc
add
in
mov
fs
mov
inc
fisttps
mov
add
arpl
xchg
or
sub
mov
add
inc
divl
cmp
shlb
lock
scas
inc
xlat
mov
sahf
push
xor
call
or
xor
roll
push
mov
jae
mov
or
fistl
imul
stos
pop
sbbb
xchg
icebp
cmpsb
dec
jae
jp
fwait
aam
cld
pop
in
cwtl
fidivs
xchg
subb
ja
cmp
in
adc
jno
pop
mov
bound
mov
mov
jecxz
dec
rorb
pop
scas
mov
sub
loop
lods
sti
sahf
sub
pop
sub
add
inc
ss
dec
data16
or
cmp
lds
vmptrld
sbb
pop
jae
sub
es
cmovbe
gs
jns
push
pop
push
fnstsw
cmp
push
adc
cmp
pop
inc
add
ljmp
jl
js
test
lcall
jp
mov
cmp
std
stc
stos
test
into
gs
jg
test
cmp
mov
add
shll
push
jmp
test
inc
cltd
adc
daa
cli
daa
or
ljmp
or
pop
push
lret
hlt
push
xlat
xchg
stos
lea
mov
adc
mov
sub
call
mov
test
adcl
xchg
stc
mov
sbb
roll
outsl
mov
add
and
push
test
lods
and
inc
in
sbb
mov
jecxz
mov
dec
repnz
lods
cs
push
popf
add
ret
jbe
in
loope
mov
inc
aas
inc
cli
imul
sbb
cltd
mov
push
sahf
imul
icebp
fistpl
xor
jns
push
shlb
push
js
add
fxam
nop
push
adc
push
test
bound
push
add
mov
mov
mov
push
rolb
mov
adc
add
adc
aaa
bound
dec
xchg
push
pop
ret
shlb
inc
cld
scas
jp
pop
and
push
mov
movsb
test
addr16
lods
mov
inc
pop
xorl
cmp
mov
mov
xor
xchg
shrb
add
push
fisubrs
xchg
cmpsl
add
fld
mov
push
mov
loopnew
push
xchg
lods
xchg
outsb
or
add
jnp
mov
int3
cld
outsl
mov
inc
rcrl
inc
cmp
inc
arpl
mov
fsub
jae
cmp
dec
xlat
stos
insl
enter
adc
movsb
pop
aas
mov
mov
xchg
cmp
pop
aas
pop
mov
sub
jp
les
adc
out
sub
dec
inc
pop
nop
or
adc
repnz
cmp
out
rcl
movsb
icebp
mov
push
sub
lock
cmp
enter
into
cmp
pop
mov
push
mov
fstpl
movsl
mov
into
cmp
mov
das
dec
dec
out
push
xchg
pop
in
repnz
les
adc
dec
pop
lahf
xor
cmp
adc
adc
mov
test
ficoms
xor
inc
mov
repnz
mov
xchg
jo
dec
loop
mov
dec
and
pop
inc
sub
mov
jae
dec
test
dec
add
into
push
popa
pop
cmp
aas
mov
mov
in
sbb
sub
or
insl
insb
or
stos
cmp
xor
icebp
jl
pop
push
jo
mov
xchg
mov
pop
and
mov
sub
scas
jle
sti
std
and
xchg
lcall
aas
sub
xlat
pusha
popf
jge
cmp
inc
jge
jns
fisubl
push
es
jnp
inc
pop
mov
inc
fidivl
pop
mov
popa
fdivl
push
pop
push
sub
cmp
std
pop
sbb
xorl
sub
testl
iret
pop
sbb
aad
and
mov
jp
push
pop
aaa
ret
test
aaa
rcll
jl
lret
mov
scas
sbb
bound
iret
xchg
add
movsl
mov
add
sbb
cmp
mov
sbb
movsb
jnp
sub
mov
inc
ds
fs
test
outsl
pushf
mov
push
and
pop
or
jle
mov
xchg
stos
rclb
addr16
dec
xor
cmp
push
fwait
popa
xchg
lock
rclb
lahf
daa
sub
jne
add
cmp
repz
aam
xchg
out
or
sbb
mov
icebp
push
or
adc
pop
push
test
sub
and
ret
inc
movsl
test
scas
push
push
hlt
mov
sbb
add
and
fwait
clc
mov
sub
leave
cmp
test
adc
ret
mov
repnz
or
aad
cs
fists
dec
shlb
cmp
xor
xchg
xchg
dec
fsts
ret
jg
into
adc
mov
push
dec
popa
cmp
icebp
mov
daa
cmp
cmpsb
pop
lahf
pop
mov
lret
arpl
fwait
mov
mov
jle
xchg
xlat
jle
pushf
or
mov
mov
pop
in
push
jmp
aam
adc
xchg
cmpsb
pushf
mov
outsb
subl
mov
sbb
inc
inc
adc
pop
mull
cmp
cli
popa
mov
sbbb
mov
mov
outsl
jmp
ss
adc
or
repz
arpl
fwait
mov
xchg
icebp
jl
xlat
in
pop
movsb
jnp
mov
add
imul
mov
andb
cmp
loope
sub
or
mov
ds
ja
pop
test
pop
add
mov
out
and
lods
scas
test
scas
xchg
ss
addb
xor
pop
shrb
arpl
lcall
cwtl
pop
ficomps
ds
adc
jmp
js
add
fsubrp
jns
js
sub
add
mov
sahf
clc
out
loope
cmp
xchg
dec
pusha
sbb
xchg
jo
jge
mov
out
add
cmpsb
les
rorb
jecxz
lds
scas
out
lea
inc
sbb
xor
mov
inc
push
setno
inc
std
xchg
pop
daa
dec
add
mov
out
adc
sub
xchg
movsb
aas
gs
jp
rcrb
imul
push
adc
jns
dec
mov
mov
or
cmp
in
addl
dec
sub
xchg
dec
scas
lret
add
dec
ja,pn
xlat
shrl
cmc
adc
inc
lds
repnz
rorl
mov
mov
adc
stc
and
adc
add
call
popa
and
pop
dec
loopne
aad
push
adc
and
adc
mov
pop
cmp
test
sub
sahf
mov
xor
jae
cmp
adc
cld
inc
and
insb
push
jl
jmp
fmul
xor
sub
sti
pusha
pop
addr16
sub
fstps
push
shrb
addl
push
fsubl
adc
adc
pop
mov
sbb
sbb
loope
push
je
leave
pop
ja
icebp
dec
subb
std
in
por
adc
jmp
adc
jbe
jne
fcompl
loope
push
jmp
jp
xchg
and
iret
fisttpl
js
mov
sbbb
mov
sub
add
xchg
movsl
fstp
jb
je
xor
xchg
cmp
lret
mov
bound
imul
xchg
out
jle
flds
adc
mov
jno
mov
pop
leave
daa
jns
mov
mov
push
push
test
test
inc
pop
arpl
push
daa
mov
sbb
ret
ret
inc
faddl
mov
sub
stos
in
fisttpl
add
aaa
jne
xor
inc
inc
sbb
lea
lods
dec
pop
fiadds
lock
xor
rcll
cld
add
scas
xor
xor
dec
mov
arpl
popf
pop
jo
xchg
subl
ljmp
icebp
xor
sub
xchg
add
jle
fists
popf
and
push
pop
pop
sub
jecxz
outsl
add
nop
popf
lods
push
pop
popf
xchg
cmp
dec
data16
jnp
hlt
ljmp
sbb
inc
dec
test
jmp
aad
lock
mov
adc
push
push
mov
popf
cmp
loop
xorb
pop
ret
cmpsl
cmp
cmp
adcl
push
outsb
cmp
push
adc
aad
repnz
jno
sti
sub
adc
sarl
ds
jno
inc
fs
sbb
inc
adc
mov
dec
rcl
pop
out
loop
mov
aam
inc
sbb
popw
popf
sub
push
adc
dec
sbb
enter
dec
les
dec
fidivl
rcrl
add
movsl
imul
adc
popf
ja
js
out
js
adc
jp
xor
adc
or
mov
fwait
xchg
cmc
shl
add
sub
movsb
jg
sbb
mov
hlt
xchg
adc
in
cmp
insb
xchg
add
push
test
and
jne
add
mov
jbe
dec
test
mov
js
adc
test
cld
lcall
and
mov
push
testb
lods
and
and
mov
mov
out
jae
pushf
sahf
loope
sarb
or
xor
pop
dec
repnz
or
adc
sbb
mov
lcall
dec
xchg
arpl
mov
subl
movsl
push
in
fdivrl
popf
sub
into
push
or
aam
into
fs
mov
decl
out
lret
and
jecxz
push
xchg
js
jae
mov
cvtps2pi
aas
dec
loopne
idivl
cld
pop
dec
in
lds
xchg
xchg
adc
add
stos
xor
push
and
dec
aas
push
cmpsl
int3
out
pop
push
sub
mov
sbb
movsl
pop
mov
fwait
clc
scas
xchg
lods
sub
cmpsb
and
dec
mov
jno
sub
mov
cltd
jae
pop
mov
dec
repnz
adc
fimuls
push
cmpsb
dec
dec
loopne
bnd
cmpsl
je
test
inc
dec
enter
inc
pop
or
daa
out
enter
incb
test
mov
iret
mov
mov
cwtl
cmc
xchg
mov
jmp
or
xor
xor
pop
lods
inc
xchg
pop
popf
fs
sub
test
jbe
ret
test
loopne
or
sub
xchg
cltd
cmp
or
xchg
aad
add
push
jae
jae
sub
pushf
xor
test
loop
mov
xchg
jae
popf
cmpsl
push
xchg
sbb
mov
ret
inc
je
loopne
xor
lcall
stos
jl
insb
xchg
or
lahf
ja
xchg
rcr
jbe
or
scas
add
test
pop
adc
out
jo
xchg
push
rcrl
xor
cli
xchg
enter
ss
add
xchg
mov
out
ljmp
notb
inc
outsb
jne
push
push
add
and
sub
mov
aas
adc
cwtl
lcall
lea
sbb
ret
int3
mov
out
sub
out
sbb
cmp
add
sbb
xchg
xor
push
adc
in
sahf
rorl
divb
icebp
sub
loopne
pop
pop
cwtl
in
sbb
dec
add
dec
test
popf
pmaddwd
cmpsl
mov
jne
lods
cltd
mov
lret
mov
mov
add
aam
push
fcoml
mov
cld
cmpsl
cmp
sub
dec
jne
in
sarb
mov
cli
lock
cmp
mov
mov
fbld
test
mov
inc
xor
ljmp
inc
aas
scas
and
push
mov
into
jl
or
ret
cmc
xchg
int
sbb
and
mov
xchg
repz
repz
mov
sbb
loopne
fwait
or
xchg
js
jo
adc
popa
test
scas
xor
or
sbb
adcl
cmp
aam
out
pop
sahf
ret
jbe
or
inc
add
rcrb
jnp
mov
fistpl
push
cmp
mov
fnstcw
dec
mov
pop
repnz
scas
jns
addb
cmp
sub
mov
test
cltd
push
pop
push
cmp
ljmp
ss
sub
shl
iret
xorl
mov
pop
dec
cmpsb
sarb
leave
fsubrs
xor
push
aaa
or
leave
xor
jecxz
push
sub
in
int3
adc
or
cwtl
shll
leave
jnp
test
clc
inc
fistl
sahf
push
mov
cld
test
ret
les
jge
mov
mov
adc
add
sbb
mov
movsb
cmp
inc
movsl
xchg
pop
push
cwtl
scas
jg
inc
xor
jg
dec
mov
fcmove
es
or
lods
xchg
sti
int
push
fistps
inc
fucomip
mov
fwait
add
mov
inc
pop
je
mov
cmp
das
jp
test
jl
and
xor
subl
add
scas
jns
inc
loopne
dec
ficomps
loope
rcll
push
cmpsl
lock
mov
loop
jo
xor
outsl
loop
addr16
repz
rcll
xchg
jo
mov
adc
arpl
pushf
scas
push
test
push
movsb
mul
mov
dec
xchg
add
push
cmp
data16
shl
js
push
xchg
aas
movsb
and
and
push
jecxz
mov
mov
mov
adc
adc
hlt
or
popa
pop
out
jb
mov
mov
es
in
inc
and
adc
mov
adc
loope
jmp
mov
jl
push
pop
add
ficomps
call
clc
ret
imul
test
mov
mov
dec
stos
movsl
xchg
adc
mov
xchg
arpl
pusha
pop
cmp
xchg
fnstcw
jecxz
out
push
mov
cli
mov
mov
sbb
ds
mov
fdivl
js
cmp
into
xchg
sti
test
ss
dec
push
fldenv
sbb
stos
js
scas
insl
mov
insb
sbb
ss
cld
cmp
jge
inc
fildl
shlb
mov
xchg
or
int
sbb
mov
call
dec
out
xchg
stos
xlat
int3
stc
in
sbb
mov
adc
cli
cmp
stos
dec
stos
insb
mov
gs
cwtl
lret
dec
shl
je
das
pop
into
sbb
repnz
insl
add
xchg
and
sub
adc
xor
push
cmc
in
jmp
and
cmp
mov
mov
mov
call
test
pop
mov
out
mov
xor
imul
in
ds
insb
out
popa
mov
sub
stc
pop
cld
xchg
mov
lret
xor
mov
mov
or
dec
mov
mov
in
sahf
fisttpll
pushf
add
aas
dec
subl
push
out
xor
cmp
sub
xor
stc
xor
xchg
aaa
inc
out
inc
mull
inc
adc
hlt
xchg
mov
push
push
fwait
adcl
mov
shrb
inc
cltd
and
inc
iret
push
aas
clc
test
sub
je
test
adc
mov
jl
jge
xchg
pop
or
into
sub
cmc
pop
sti
mov
rol
rolb
fnstenv
xor
mov
mov
imul
xchg
push
mov
in
int
sbb
dec
arpl
or
sarl
mov
pop
shrl
int3
out
hlt
scas
lahf
inc
adc
jae
mov
jp
push
nop
or
dec
mov
and
arpl
xchg
stos
mov
arpl
push
dec
sub
loop
insb
push
cmp
mov
sub
pop
push
add
pop
mov
cmpsb
ds
aam
or
pop
jle
aas
cld
dec
lret
inc
sti
adc
popf
int
ds
xchg
mov
fsubl
mov
ret
jns
xor
out
cmpsl
jl
pop
loopne
lahf
test
mov
andb
movsb
fildl
inc
push
sub
std
movl
xor
xchg
jp
cmp
inc
xor
mov
sub
ljmp
cltd
sub
pop
jb
or
sub
add
jnp
push
fwait
lea
fdivrl
outsl
mov
mov
lea
push
or
out
xchg
stos
mov
sub
jp
jno
aas
imul
out
adc
pop
lods
imul
movsb
out
lods
dec
mov
mov
pop
xor
fs
dec
dec
push
repz
in
mov
mov
xor
shrl
lcall
mov
cmp
sbb
lret
cltd
fs
repz
cltd
jmp
inc
arpl
adcl
cs
out
sbb
mov
cmp
clc
call
scas
fwait
sbb
int3
jg
int3
and
sub
das
xchg
mov
push
repnz
fbstp
cli
mov
sbb
xchg
jecxz
jno
in
test
jl
adc
push
fdivs
jae
fists
inc
sbb
or
mov
mov
mov
ljmp
lahf
mov
cmp
loopne
cmp
lds
pop
aaa
push
ds
mov
push
test
add
xchg
movzbl
in
jb
lcall
sub
ds
or
jne
and
and
fs
loope
adc
mov
out
icebp
mov
mov
cwtl
jmp
xchg
mov
shlb
or
pop
cmp
xchg
mov
push
mov
mov
sahf
add
or
and
or
fsubr
cmpsl
or
insb
int
lret
push
aas
push
dec
imul
adc
inc
int3
mov
enter
inc
jmp
in
ret
jo
insl
push
jnp
mov
dec
in
mov
outsb
andl
dec
shl
add
sbb
imul
aaa
sub
aas
jge
fdivrl
lahf
mov
gs
sbb
scas
dec
sbb
ss
es
mov
imul
or
push
es
repz
mov
and
push
lahf
aaa
mov
fadd
sbb
inc
and
sti
mov
mov
fs
add
pop
adc
popf
adc
jnp
aaa
scas
xchg
cli
stos
ja
xchg
ljmp
je
insl
enter
rorb
mov
xor
cwtl
adc
pop
shrb
or
pop
jmp
fistps
dec
adc
mov
rorl
mov
mov
outsl
jge
scas
insb
jecxz
std
cltd
cmpsl
cmc
mov
fsubl
add
sub
outsb
stos
jo
push
je
aaa
and
jmp
lea
mov
ficomps
dec
out
sbb
outsl
pop
pop
icebp
mov
loope
ja
stc
push
imul
dec
insb
lret
dec
mov
cmp
inc
aad
mov
mov
les
call
dec
sub
sbbl
or
iret
jg
lods
in
pop
xor
dec
imul
pop
scas
xchg
scas
mov
pop
push
xchg
push
xor
push
pushf
push
enter
popf
pop
adcl
js
adc
icebp
xor
mov
lret
pop
sarl
and
xlat
outsb
add
cmc
mov
adcb
and
jnp
les
daa
inc
dec
pop
push
dec
add
xchg
test
std
mov
test
mov
lods
pop
inc
fcoml
fdivrs
mov
and
int3
pop
xlat
mov
and
jl
cmpsb
mov
iret
jp
sub
mov
nop
mov
add
jle
add
lock
pushf
jmp
or
popf
and
cmpsl
mov
jnp
jecxz
cmp
sbb
lcall
jp
and
mov
lods
aad
lret
call
je
ljmp
sbb
push
push
dec
dec
stos
inc
jno
push
jae
mov
xchg
xchg
movsl
in
aas
fdivrl
xchg
push
adc
out
clc
xchg
imul
or
pop
dec
fnstsw
test
push
fwait
xor
push
pop
jp
sub
loop
pusha
mov
jmp
call
sub
dec
mov
repnz
dec
ljmp
vunpcklps
cmc
pushf
cmp
int
fisttpll
and
or
in
xchg
ret
mov
subl
jl
fstpl
sti
push
call
push
dec
les
ss
xchg
cmp
test
mov
leave
icebp
adc
lock
xor
test
inc
push
lods
lret
nop
les
lods
loop
mov
mov
mov
mov
mov
jge
andl
add
fs
xchg
js
arpl
xor
jmp
push
pop
test
adcl
or
adc
lret
inc
sti
push
jg
mov
fnstenv
cmp
out
inc
lret
xchg
test
jecxz
pop
addl
fimuls
jle
ljmp
dec
ret
mov
in
ret
ds
fcmovne
xor
jnp
bound
addb
std
add
mov
push
push
popf
shl
xchg
xor
jp
sub
pushf
mov
sub
push
call
jno
addr16
scas
lock
daa
inc
pushf
cmp
pop
and
fidivrs
fldcw
sarb
pop
lret
xchg
dec
jmp
and
popf
inc
aam
out
cmpsl
test
pop
mov
xchg
or
enter
jp
push
popf
xlat
push
cli
inc
xlat
mov
or
jl
xor
imul
rclb
dec
inc
mov
adc
push
xlat
dec
scas
mov
pushf
out
add
dec
loope
stc
jnp
lods
push
push
scas
ja
in
cmpsl
divl
scas
adc
xchg
cmpb
fwait
js
cmp
mov
loopne
lods
xchg
pop
ljmp
out
nop
outsl
mov
xchg
inc
jns
jnp
out
mov
js
inc
xchg
fwait
andl
les
mov
push
jmp
xor
mov
jb
sbb
xchg
mov
push
test
cmp
das
pop
mov
adc
and
sbb
pop
adc
or
int3
ficomps
out
lods
pop
fstpl
cli
adc
pop
hlt
cmpsl
adc
xchg
push
pusha
and
lret
insl
adc
sahf
sti
xchg
cs
cltd
das
insb
divb
test
xor
in
sub
adc
sar
cmpsl
sub
pop
inc
fisubrs
lds
out
mov
sbb
or
add
test
push
xchg
mov
neg
jno
lret
lds
je
clc
daa
inc
mov
test
xchg
sub
orl
cmpsl
or
adc
shrl
out
add
mov
mov
lods
shr
sub
movsl
cmp
and
arpl
addr16
pop
cwtl
pop
push
or
inc
loope
pop
lcall
mov
push
jp
sbb
popf
dec
rorb
stos
jmp
into
or
or
outsb
xor
xchg
adc
inc
dec
popa
sbbl
js
pop
out
jge
xchg
mov
dec
mov
in
or
sub
les
pop
pop
mov
mov
pop
rorb
add
sbb
cmp
outsb
mov
adc
sub
in
popf
xor
push
dec
out
cmpsl
mov
xor
into
adc
mov
fisttpl
sbb
add
mov
or
std
addl
and
mov
cli
sub
in
stos
pop
imul
mov
call
sar
hlt
lea
out
xchg
jmp
or
mov
dec
stc
shlb
jbe
lods
fistpll
scas
mov
push
fcmovu
mov
cltd
dec
jg
incb
stos
lods
push
out
mov
mov
fmul
push
pusha
pop
dec
dec
in
or
adc
int
push
adc
mov
cwtl
pop
pop
stos
adcl
lds
outsb
jb
pop
loope
ja
aaa
out
movsb
fists
arpl
cmpsl
arpl
into
mov
fs
inc
dec
jo
nop
repnz
int3
cltd
push
sbb
clc
jne,pt
and
je
out
lea
int
mov
mov
inc
jecxz
sub
push
hlt
pushf
pop
mov
sbb
cmp
mov
jl
mov
int
xor
cwtl
popf
xchg
loope
jb
inc
popa
push
sbb
test
mulb
dec
std
fwait
hlt
push
dec
out
adc
dec
out
sub
push
xchg
in
sbb
lods
or
mov
mov
movsb
mov
jle
push
cli
stos
shrb
imul
pop
fwait
mov
test
mov
xlat
loope
test
jmp
aam
add
xchg
push
scas
jno
insl
cmp
mov
inc
inc
and
mov
dec
les
xor
xor
or
sbb
xor
dec
ja
dec
in
gs
adc
in
sahf
scas
icebp
ss
out
cmp
je
mov
inc
push
xchg
jmp
mov
xlat
jmp
or
daa
addr16
mov
repnz
dec
pop
adc
das
cmp
pop
adc
aaa
in
shl
sbbl
sbb
ljmp
sub
or
bound
add
jns
aad
sbb
sub
sbb
xor
jb
rclb
in
dec
and
adc
cltd
or
push
loope
or
scas
xchg
cmp
and
rcrb
or
les
iret
sub
ret
push
imul
mov
push
jne
mov
mov
inc
push
fadds
mov
sbb
into
mov
push
xor
dec
sbb
sub
xor
aaa
call
or
in
cmp
repnz
cwtl
insb
into
mov
sti
sub
mov
insl
mov
in
dec
pop
in
out
sti
sbb
mov
popf
enter
push
or
sbb
out
xchg
bound
shl
lret
mov
cmpsl
call
cmp
jbe
std
jg
jp
aas
insb
std
push
int
int
clc
sbb
enter
cwtl
test
mov
test
ljmp
out
cmp
pusha
jl
icebp
cmp
ja
vsubsd
shrl
dec
sti
pop
mov
add
cmp
ficoml
orl
jbe
fld1
dec
mov
mov
push
xchg
push
lcall
push
or
sub
loope
das
mov
aad
cmpsb
sbb
in
ja
mov
lods
ljmp
mov
or
dec
lahf
dec
insb
sub
xchg
adc
fldt
loope
push
lret
xlat
adc
rorl
nop
dec
test
inc
out
popa
dec
imul
enter
mov
inc
arpl
imul
jnp
sbb
ja
jge
mov
adc
clc
or
or
ret
pop
imul
test
std
jae
lock
xor
lods
ljmp
mov
pop
lock
cmp
adc
push
outsl
loop
cmp
lahf
pop
and
push
adc
mov
movl
and
mov
add
insb
jns
shll
shrb
jno
or
and
imul
gs
clc
dec
icebp
cmp
sar
adc
mov
pusha
fidivrs
inc
fs
mov
inc
dec
mov
sahf
aaa
ja
out
data16
je
or
inc
inc
lock
mov
stos
fucomi
add
test
add
jp
pop
inc
scas
dec
jbe
jecxz
cmp
arpl
xchg
xor
and
lods
adc
xlat
add
sbbb
and
push
cli
sbb
jno
or
js
push
and
inc
cmp
mov
addr16
inc
scas
insl
and
aad
inc
stos
and
in
addr16
dec
add
mov
or
fisttpll
dec
jne
addr16
je
nopl
aam
imul
dec
negl
imul
dec
add
sahf
imull
inc
cmp
loope
dec
das
mov
jno
pop
jno
inc
mov
and
sub
cmp
addr16
dec
cmpsl
roll
adc
jp
hlt
inc
loop
decl
and
push
movsl
lcall
pminsw
daa
in
fwait
mov
in
ljmp
pusha
cmp
xchg
mov
dec
mov
xchg
les
jecxz
sarl
and
jae
sub
xor
xor
lods
inc
rcrb
xchg
lds
adc
std
jl
mov
dec
push
sub
mov
ret
xchg
out
outsb
icebp
or
enter
gs
xor
js
repz
push
xchg
mov
into
mov
aad
push
pop
pusha
cmp
cmp
jge
in
leave
shl
sub
int3
xor
adc
imul
rclb
inc
outsb
inc
xchg
sub
dec
mov
xchg
mov
cs
lahf
mov
inc
mov
cmp
aam
std
xor
icebp
movsl
aam
ljmp
shll
cwtl
cmpl
adc
mov
sub
in
mov
inc
xchg
ja
dec
loop
cwtl
mov
cmp
jns
std
loopne
jecxz
xchg
pop
ret
rcr
mov
sbb
rclb
fnsave
sub
inc
iret
leave
test
fistl
int
and
test
push
jo
jge
mov
sub
int
pusha
jns
xchg
icebp
psubsb
jb
minps
push
xor
clc
adc
jmp
mov
push
inc
lret
rcl
out
or
mov
adcb
dec
sub
add
adc
mov
jae
jnp
dec
jg
jg
push
xor
test
mov
cmp
mov
test
mov
das
cmp
mov
inc
subb
mov
jp
insl
jmp
xor
mov
scas
add
cmc
jne
pop
mov
mov
jge
mov
insb
call
jb
gs
pop
stc
xchg
jecxz
out
pop
sbb
sub
es
jbe
in
mov
lods
xor
jg
cltd
pop
hlt
lret
push
ret
cmp
pop
xor
push
in
inc
out
mov
jnp
jge
outsl
test
add
nop
add
aad
jb
jnp
pop
sub
pop
cmp
movsl
imul
call
mov
and
xor
pop
insb
adc
lret
sbb
sbb
jns
sti
lcall
outsl
push
push
jb
mov
ss
cs
insl
pusha
pushf
mov
dec
mov
sbb
imul
mov
mov
aam
cmp
sub
adc
repnz
pushf
cli
fsubrs
pushf
pop
test
mov
cwtl
inc
and
sbb
pop
pushf
sub
bound
fnstsw
xor
loop
sahf
pop
out
dec
xor
cmp
adc
ror
mulb
jnp
ds
cmp
xlat
pushl
push
vmulpd
xchg
pop
int
nop
mov
enter
adc
mov
hlt
je
je
and
jbe
inc
rcrb
lds
je
dec
fsubs
xchg
cli
imul
sub
mov
sub
cmpsb
stos
daa
outsb
ds
mov
xor
mov
pop
inc
or
cli
scas
fwait
xlat
into
pop
xor
jp
les
adc
sbbb
shr
rcr
push
xchg
mov
das
enter
jns
sub
pushf
dec
dec
loop
stc
pop
nop
mov
test
sbb
lahf
jae
sub
jp
loopne
add
scas
xor
xchg
jp
mov
sub
add
sbb
and
push
adc
mov
lahf
int3
xchg
test
mov
and
jnp
pop
outsb
or
adc
scas
xchg
add
cmp
xor
push
xchg
adc
cmp
mov
jle
loopne
jbe
repz
and
jl
not
mov
add
int
pop
inc
sub
fnstenv
and
xor
mov
scas
mov
push
orb
xchg
or
and
dec
jp
out
mov
int
daa
outsl
push
fdivl
or
inc
add
icebp
and
stc
sarb
sub
mov
adc
add
sbb
xchg
lahf
in
mov
dec
xor
sti
jbe
xor
mov
outsb
push
test
and
adc
jo
jno
inc
xchg
jmp
push
adc
mov
xchg
or
cmp
push
movsb
repnz
mov
push
xchg
js
cli
outsb
std
mov
lret
jnp
dec
loop
adc
adc
out
lret
daa
cmp
xorb
arpl
pushf
adc
popf
xor
in
xchg
cmp
iret
xchg
sbb
movsl
nop
fnstcw
ret
cmp
jle
or
movsb
xchg
das
add
pushf
sub
push
in
mov
inc
and
adc
js
test
std
jg
fdivl
sahf
xor
pop
bound
je
xor
or
int
imul
and
iret
gs
pop
ljmp
jnp
cli
dec
fidivl
inc
and
cmp
inc
fcoms
shlb
popl
js
mov
les
cmc
xlat
mov
dec
add
xchg
in
cmc
loopne
sbb
cmp
dec
insl
fdivs
mov
ljmp
sbb
mov
aad
add
je
out
mov
fs
and
lahf
adcl
xchg
sbb
mov
leave
mov
or
lcall
xchg
sahf
out
add
pop
pop
pop
jno
jecxz
loope
stos
jbe
cmpsl
cmpsl
adc
aam
push
aaa
sub
cmp
scas
xor
xchg
jge
fbstp
sahf
push
mov
cmp
sbb
inc
mov
dec
mov
jp
xor
fdivrs
xor
scas
sbb
inc
dec
data16
jo
xlat
jb
mov
xchg
mov
fcomps
inc
adc
bound
ds
in
mov
xchg
inc
mov
pop
in
lea
mov
fadds
adc
cld
xor
dec
sbb
mov
lcall
pop
cld
jecxz
dec
adc
push
popa
in
sbb
mov
repz
in
push
cmc
in
dec
gs
je
sub
mov
push
xor
sbb
push
enter
shlb
mov
iret
push
mull
push
test
cmp
mov
addr16
dec
pusha
adc
pop
sub
jb
shll
dec
dec
xchg
leave
movsb
xor
pop
or
sub
sbb
or
out
orb
loope
aam
jle
pop
popa
sti
das
mov
outsb
mov
pop
sbb
mov
mov
add
xchg
sub
and
mov
cmp
shrb
push
pop
gs
inc
imul
loopne
xchg
inc
push
imulb
jp
push
xchg
lods
xor
aas
and
cmp
aas
jge
sbb
push
add
xor
loopne
cltd
outsl
cmp
aad
sbb
sub
pop
je
dec
es
jbe
cmp
rcrb
jb
adc
mov
xchg
lret
mov
ljmp
ljmp
test
aad
sub
or
xor
pop
sar
or
xor
fisttps
test
mov
sbb
lahf
mov
sbb
test
push
repnz
pop
fs
xchg
lods
and
outsb
jl
add
loop
sbb
std
jge
ds
sbb
test
dec
ret
iret
jecxz
aaa
fldcw
jle
sbbl
dec
gs
mov
in
inc
sahf
inc
cmp
add
pusha
and
sarl
test
lods
add
or
mov
mov
mov
mov
mov
inc
es
jmp
push
sub
or
fisubl
cmp
test
add
rol
dec
arpl
push
int
mov
cmpsb
es
adc
arpl
jbe
push
out
jb
ljmp
xor
jno,pt
leave
pop
cmp
out
cmp
mov
sbb
sahf
call
ja
xchg
cs
or
xor
jmp
lea
in
jno
push
or
mov
sub
or
inc
adc
jl
ret
or
arpl
inc
pop
sub
frstor
xchg
and
dec
fstpt
in
lret
int3
xchg
mov
push
cli
jmp
push
mov
push
stos
pushl
movsb
int3
fdiv
push
aad
lock
lret
mov
sbbb
inc
out
add
fcomp
push
or
xorl
test
stc
sub
lcall
push
es
out
jne
movsb
xor
test
push
push
inc
jns
mov
mov
nop
hlt
aas
ljmp
jae
mov
jmp
xchg
ffree
mov
and
movsl
cmpsl
pop
sub
lods
test
sbb
pop
mov
fldcw
arpl
test
movsl
rcl
dec
push
test
fcomp
ja
xchg
and
stos
sarl
and
push
popf
xchg
xchg
add
inc
pop
jae
and
jne
jl
iret
es
shrb
adc
mov
sub
shl
pop
cmp
bound
xchg
sbb
add
popa
add
push
mov
movsb
mov
shlb
cld
xchg
aaa
fidivrl
inc
outsb
insb
or
movl
pusha
add
test
mov
rorb
xorl
mov
jle
daa
mov
ljmp
inc
mov
dec
rcrb
scas
xlat
xor
push
jnp
sub
shl
mov
in
scas
cmc
ss
sarl
mov
add
cli
push
push
sub
inc
fs
stos
aaa
cltd
lahf
jle
sbb
inc
or
hlt
pop
mov
add
pop
out
xchg
sub
sbb
fsubs
push
mov
mov
push
jbe
loope
sub
add
pop
imul
mov
push
xchg
xor
cmc
mov
mov
and
dec
pop
cmp
xor
data16
mov
mov
lods
inc
push
fsubrl
fidivrs
mov
call
insl
rorb
imul
ret
mov
jns
addr16
adc
xchg
movsl
outsl
push
mov
add
test
pusha
ffreep
sbb
test
sub
jne
sub
ljmp
sub
pop
sub
mov
cld
adc
rorl
xor
lahf
loop
pop
hlt
sbb
fbstp
mov
xchg
cmp
push
sub
add
and
and
es
xchg
pusha
dec
dec
cmc
fldenv
and
loope
pop
arpl
pusha
in
jmp
xor
aas
mov
loopne
fst
sti
sub
jg
lahf
stos
movsl
mov
xchg
mov
or
std
xorl
leave
mov
sbb
lahf
call
push
popa
add
movl
push
mov
mov
sbb
daa
jmp
loop
andb
push
jb
in
mov
mov
pop
fimuls
pop
ja
jns
repz
xchg
jle
out
mov
mov
adc
cmp
mov
or
call
inc
pop
cmpl
test
mov
dec
inc
sahf
idiv
pop
adc
add
js
xchg
sub
dec
xor
adc
cmp
add
scas
jb
outsl
testl
add
adc
push
imul
subl
pop
sbb
pop
dec
pushf
pop
dec
lds
sbb
jnp
xchg
jnp
lcall
pushaw
add
test
mov
std
imul
int3
xchg
lret
sub
insl
pop
pushf
xchg
mov
and
push
dec
rcr
imul
roll
nop
add
call
stos
xor
out
daa
inc
cmc
popf
pop
daa
arpl
dec
outsl
add
xchg
stos
dec
cmp
in
insb
jle
rolb
fisubl
enter
add
inc
mov
lret
dec
loopne
cmp
mov
pop
fistpll
or
mov
addr16
ss
jns
inc
out
out
push
and
imul
es
jbe
dec
xchg
jg
add
sub
movsl
cmp
pop
sahf
push
pop
add
mov
add
lds
mov
jnp
mull
cmp
insl
add
jbe
mov
xor
nop
inc
ffree
jmp
sti
inc
pop
stos
inc
mov
stc
stos
push
loop
int3
mov
adc
mov
mov
repnz
xchg
hlt
inc
push
daa
xchg
sti
sub
add
ret
and
test
rclb
repz
and
sbb
orl
sbbb
outsl
xchg
imul
sub
rclb
push
push
xchg
ds
cmp
mov
pop
sub
cmp
lds
cmp
bound
popa
es
adc
outsb
fadd
rorl
test
dec
lret
cmp
xchg
je
cli
dec
mov
call
aad
lahf
ss
pop
stos
std
adc
ficoml
mov
int3
enter
repz
dec
cmp
cmpsb
add
inc
and
dec
scas
in
push
jecxz
lods
inc
int3
dec
rclb
in
adc
mulb
jb
sub
jge
push
dec
dec
in
push
aas
lret
cmc
mov
in
mov
or
xor
sub
stc
pop
loope
cmp
cmp
cmp
dec
dec
pop
cmp
mov
mov
xor
sbbl
jns
loopne
insl
mov
adc
push
jb
aam
roll
ljmp
in
sub
loopne
mov
loopne
sub
sbb
or
out
sub
add
notl
stos
hlt
and
fmul
out
int3
mov
mov
rcll
cltd
sub
adc
scas
fistl
or
cmp
int3
jl
xor
les
sub
lret
lods
adc
rclb
pop
repz
xor
sub
mov
lahf
imul
test
testb
add
aam
aas
push
sub
dec
and
xor
aaa
add
cwtl
movsl
cmp
mov
inc
mov
mov
mov
adc
push
enter
aam
pop
pop
loopne
cmp
push
xchg
in
mov
daa
inc
pop
in
cmp
std
ss
and
inc
fidivrs
sub
xlat
aad
pop
cmpsl
dec
sti
jp
repz
push
popa
mov
fnstcw
mov
shlb
lret
xlat
adc
jo
sbb
mov
scas
jl
loopne
dec
inc
adc
pop
cli
jmp
mov
test
or
push
fidivrl
add
jmp
or
pop
loop
stos
daa
icebp
add
mov
pop
rcr
pop
xor
mov
mov
pop
or
mov
adc
jbe
ljmp
rcr
jnp
addr16
push
mov
xchg
or
out
ret
or
test
adc
and
push
mov
add
pop
nop
outsb
jl
daa
and
sbb
jbe
fidivrs
enter
idivl
test
sahf
icebp
outsb
fistpl
mov
or
cmpsl
adc
cmpl
xchg
stc
sbb
clc
cmpsb
cmp
imul
cmpsb
in
jg
les
sbb
gs
loop
scas
fildl
fldenv
push
push
fstl
inc
push
sub
lea
dec
push
cltd
lcall
xor
add
je
push
cltd
clc
out
pop
mov
sub
cmp
jo
inc
int3
std
mov
outsl
lods
test
lret
push
rcr
int
add
mov
or
mov
jns
cltd
stos
js
popa
mov
ret
mov
popl
imul
in
int
push
cltd
mov
mov
lret
adc
fmull
stc
je
mov
inc
jmp
test
mov
lret
lods
aam
scas
inc
arpl
add
add
jmp
mov
jb
jns
xchg
pop
push
jle
adc
mov
jl
mov
mov
and
cld
fstpl
data16
daa
cmp
mov
sbbl
jle
data16
addr16
scas
mov
mov
jne
fnstenv
and
xor
dec
add
jmp
pop
xor
lods
in
in
in
sub
cli
ret
adc
scas
fst
rcr
repnz
arpl
imul
mov
ficomps
mov
lret
roll
inc
aad
mov
jge
stos
out
aaa
ds
jmp
dec
dec
sti
jnp
aam
pop
push
out
decb
lahf
dec
lret
shlb
pop
mov
ret
xchg
sub
mov
fsubrl
mov
pop
xchg
fiaddl
lods
daa
sub
fidivrs
daa
test
xchg
inc
add
test
push
test
ret
or
roll
sub
and
jae
pusha
movsl
dec
sub
in
jne
cmp
movsl
add
ljmp
xor
int
adc
pop
scas
or
roll
cmp
mov
js
js
push
lds
enter
sub
fcomps
lods
push
mov
ja
ljmp
into
fdivrl
rcrb
lret
mov
fneni(8087
shlb
mov
dec
cmp
sub
pop
ja
jp
inc
mov
cpuid
jecxz
inc
or
dec
sbb
and
adc
or
gs
ja
xchg
cwtl
lods
jecxz
lock
pop
sti
in
mov
sbb
js
mov
jp
mov
ret
sbb
out
shlb
fs
aaa
push
sar
xor
xchg
pusha
inc
jne
dec
xor
push
int3
push
add
mov
adc
xor
push
icebp
sbb
sbb
xor
popa
sbb
cmp
ret
xor
cmpl
fsubrl
bnd
jge
stos
mov
xchg
jmp
sbb
jno
outsb
arpl
imul
outsl
xor
mov
lds
xchg
mov
in
insb
mov
jle
psrad
addb
loop,pn
inc
scas
rolb
mov
add
mov
and
jno
jb
fs
adc
insb
sub
iret
xchg
and
daa
jnp
aad
loope
sti
dec
imul
push
sbb
icebp
or
cmp
push
ljmp
loopne
out
sbb
adc
cld
inc
mov
ljmp
ds
add
cmp
adc
pop
aas
mov
mov
js
sbb
add
addr16
movsl
inc
inc
mov
jbe
lea
repz
popa
imul
aad
jp
clc
mov
into
jecxz
je
outsb
ror
push
xor
js
mov
sbb
aad
shll
es
cltd
sub
in
push
das
rdmsr
fldt
shl
out
mov
addb
pop
fldenv
sub
rcrl
push
ja
out
dec
clc
cwtl
fwait
pop
xchg
push
cmp
mov
into
mov
xchg
gs
mov
xchg
out
movb
shll
cmp
outsl
jl
lods
xchg
iret
push
mov
adc
dec
add
jp
sub
or
sub
add
jne
inc
into
push
inc
jl
inc
and
fs
push
popf
lahf
adc
dec
pop
mov
pop
jb
mov
cmp
mov
push
nop
xchg
or
push
fsubrs
sub
cltd
or
adc
scas
push
cli
dec
push
inc
dec
pop
push
lahf
sub
ds
lods
cmp
pop
or
add
push
dec
in
and
push
pop
pusha
inc
stos
bound
sbb
cli
push
push
jo
push
xchg
add
mov
daa
js
sbb
shrl
inc
lock
test
ret
insl
div
into
gs
xor
xor
pop
inc
imul
push
fcmovbe
lds
shll
add
adc
fiaddl
mov
test
mov
inc
imul
fnstcw
xchg
ds
fstpl
sbb
mov
and
fldl
jmp
or
mov
lea
into
cmp
fsubrl
mov
mov
arpl
les
popa
insb
jmp
jmp
out
and
cmpxchg
out
mov
loopne
cmp
andb
stos
rclb
dec
mov
mov
lds
xchg
das
sub
jle
cltd
inc
mov
aas
push
test
loopne
sub
add
jns
push
shll
ficompl
clc
stos
bound
aaa
mov
int3
out
test
xchg
xor
lds
icebp
inc
daa
sarb
mov
pop
mov
or
lds
movsb
sbb
xchg
mov
aad
cwtl
test
fiadds
push
int3
xor
and
inc
ljmp
or
cli
push
in
das
jns
lods
xchg
sub
fisttpl
repz
push
out
cmp
xor
mov
stos
in
inc
adc
das
and
test
sub
mov
pop
cwtl
out
mov
fld
push
iret
cmp
add
out
negb
mov
and
hlt
dec
or
mov
jbe
pop
jle
cmp
jl
dec
call
xchg
adc
adc
lcall
jne
aas
push
adc
mov
sbb
dec
lret
add
sbb
and
and
push
pop
mov
xchg
mov
mov
mov
das
mov
iret
push
cmp
and
push
jbe
and
mov
cmp
pushfw
mov
adc
lret
shll
add
mov
sub
and
xor
inc
cli
or
cmp
inc
sub
movsb
add
xchg
test
js
pop
das
repz
mov
dec
jp
cmp
jp
or
aam
mov
push
pop
in
mov
xchg
pop
inc
iret
inc
xlat
clc
loope
daa
cld
sbb
jp
jge
xor
popf
stc
mov
pop
lea
xchg
adc
stc
in
addr16
push
xchg
jecxz
jmp
subl
xor
icebp
cltd
test
mov
mov
pop
rol
leave
jecxz
pop
ret
xchg
add
lahf
popf
or
mov
int
out
lahf
pusha
pusha
pop
push
ficomps
xchg
add
and
jo
cmp
inc
cwtl
inc
mull
inc
fstpl
repz
stos
adc
test
ret
jmp
cmp
mov
out
ret
sbb
and
push
scas
xor
mov
repnz
mov
mov
lds
cmp
cmpsb
mov
jp
xchg
sub
inc
enter
arpl
xchg
xchg
les
add
pop
xchg
in
or
cs
and
jle
js
xchg
cmpsl
sub
inc
push
inc
jns
cmp
and
xor
jecxz
out
add
aad
rolb
xor
in
stos
rclb
in
push
push
xlat
popa
xor
call
push
in
aaa
insl
mov
fsubs
lods
fwait
cmp
mov
fs
add
add
push
jno
cmp
incl
mov
push
out
jg
shlb
inc
lods
arpl
jmp
aaa
fnstenv
push
push
test
rcll
mov
push
test
dec
mov
sbb
or
repnz
mov
or
mov
orb
xchg
mov
jge
cs
test
mov
lods
leave
cwtl
inc
aad
push
movsl
xor
aas
mov
xchg
cltd
out
lahf
mov
xchg
jb
push
in
mov
push
inc
lods
xor
popa
lods
repnz
test
and
loop
mov
xor
enter
das
pop
and
or
jg
sahf
dec
jbe
inc
mov
sbb
mov
shr
jnp
hlt
adc
inc
cmp
dec
repz
sarl
icebp
sub
pusha
and
add
jbe
gs
xorb
pop
fadds
leave
pushf
enter
jnp
fldcw
ss
add
cmp
ljmp
jg
pop
pop
ret
pop
jno
jp
cmp
imul
dec
mov
mov
xchg
test
sub
fstps
stc
push
rcl
fwait
ss
mov
pop
movsl
mov
les
cmc
mov
je
mov
sbb
andb
rcrb
sub
cwtl
outsl
daa
cwtl
add
push
repz
mov
dec
ss
xchg
add
fmul
int
and
adc
and
jno
movsl
hlt
lods
adc
dec
jno
aas
xchg
xchg
mov
fisttps
scas
mov
mov
or
int
adc
jle
pop
mov
xchg
sub
cltd
xor
xor
jl
push
sub
nop
test
jae
xor
inc
sbbb
inc
gs
push
addr16
jno
ret
leave
mov
or
mov
jne
mov
cmp
jg
cmp
push
fisubrs
mov
mov
repz
xchg
imul
xor
cmp
push
sub
mov
mov
out
xchg
push
jne
punpcklbw
add
std
pop
in
jo
xor
add
pop
scas
lea
pop
sub
mov
loopne
jno
cmp
sti
jge
mov
inc
fwait
and
lret
xor
leave
out
test
push
inc
mov
jp
xor
js
mov
push
daa
cmp
push
pop
fcomip
std
cmc
and
test
mov
roll
imul
add
mov
popa
lret
repnz
and
ja
pushf
ss
cwtl
inc
ror
in
add
in
dec
dec
cmp
add
lret
jne
std
sbb
lods
mov
shl
pop
mulb
lock
push
sbb
fmuls
es
xchg
dec
dec
push
pop
jnp
sub
mov
mov
and
hlt
inc
lahf
and
lret
dec
jnp
dec
ret
jb
cs
pop
pusha
xchg
repnz
inc
andl
push
mov
pop
loopne
imul
imul
popa
and
ret
and
sbb
inc
dec
push
outsl
stos
mov
sti
aaa
dec
shlb
xchg
cmpsb
jecxz
ret
adc
and
es
imul
xor
lock
push
test
popf
jae
pop
lods
stc
push
mov
out
outsl
pop
fcoml
push
js
inc
sbb
nop
push
movsb
jnp
les
sub
mov
lds
jecxz
dec
insb
jo
dec
imul
sbb
dec
cmp
mov
ret
adc
negl
into
mov
pop
push
pop
sti
xchg
cwtl
cmc
mov
push
and
mov
pop
or
js
rcrl
mov
push
incb
or
aam
push
mov
or
fistps
out
pushf
repz
pushf
dec
jge
scas
mov
les
dec
fnstsw
sahf
push
out
push
add
jbe
shll
push
dec
mov
lahf
or
mov
sub
out
stc
add
push
gs
in
xor
fdiv
mov
sahf
xor
jp
gs
sub
mov
adcb
mov
mov
or
push
xchg
adc
rcll
sub
xor
xor
mov
xor
and
jne
fisttps
leave
jl
loop
and
dec
pop
loopne
stos
ja
add
mulb
jp
cmp
outsb
inc
dec
push
lcall
mov
mov
push
sbb
rolb
cmp
aam
jmp
shll
xor
xchg
mov
lock
mov
dec
xor
mov
shlb
enter
into
in
in
pop
pop
mov
push
push
test
dec
fcomp
or
test
mov
inc
mov
mov
xchg
mov
lds
cmpsl
dec
mov
jo
cmc
pop
pop
aam
cmp
add
push
aaa
int
fwait
arpl
dec
stos
fcoml
lret
pop
lret
setg
sub
movsl
push
mov
lock
and
inc
data16
pusha
mov
push
pushf
jg
sub
sub
pop
loop
fmuls
pop
dec
sbb
cltd
mov
out
insl
push
add
aaa
pop
push
mov
mov
xchg
pop
cmpxchg
lea
out
ffree
pop
idivb
repnz
imul
sbb
aaa
xlat
jmp
fcoms
mov
incb
dec
lock
pop
xchg
pop
sub
or
mov
popa
ss
push
lods
les
mov
clc
jmp
das
aam
pop
pusha
adc
out
xchg
xor
mov
cmp
inc
je
scas
xor
xor
sahf
fdivs
adc
js
leave
pop
outsl
xchg
sbb
push
pop
das
push
nop
popa
mov
inc
scas
mov
hlt
lret
loope
in
cmp
inc
je
pop
data16
jp
pop
fbstp
push
test
das
jae
ljmp
pop
orl
and
mov
bound
cmp
rclb
lret
shlb
or
mov
add
dec
xor
xchg
dec
xor
jbe
shlw
rorl
int3
cmp
mov
ret
lret
mov
imul
dec
or
mov
jbe
aas
mov
pop
add
add
sbbl
cmp
repz
scas
clc
sub
jle
cltd
das
stos
pcmpgtw
xor
popa
push
loopne
roll
cmpsb
enter
jne
pop
adc
push
jo
inc
outsb
call
in
fildll
popa
pop
lods
jbe
jnp
mov
pop
imul
pop
adc
or
jmp
mov
shrl
loop
aaa
mov
sbb
in
xchg
cltd
push
lret
fcomp
bndldx
xchg
xlat
cmp
ja
cli
push
cmp
clc
into
ljmp
add
push
call
call
mov
dec
movsb
or
mov
mov
mov
mov
xor
push
push
and
pop
rolb
shll
shll
aam
jo
cltd
lock
test
ret
imul
fisubrs
sbb
dec
gs
cmc
lret
test
imul
inc
adc
aaa
cld
dec
imul
repnz
or
loop
sti
dec
outsb
std
adc
pop
loope
gs
add
mov
testl
outsb
in
mov
jle
test
cwtl
repz
test
mov
loopne
dec
adc
add
sub
jp
jmp
mov
out
pop
outsb
xor
mov
dec
call
ljmp
mov
lret
insb
and
mov
push
ret
dec
insb
sti
xlat
sbb
stc
rorb
insl
loop
pop
xchg
ror
xchg
stc
popf
dec
cltd
inc
pushf
out
push
movsb
pop
cmp
loop
lods
dec
add
push
fwait
test
cmpsb
xor
int3
pop
or
xchg
xchg
jmp
imul
cld
adc
mov
push
shlb
fwait
sub
add
jne
call
in
push
jmp
mov
inc
fisubrl
insb
movl
xor
dec
xor
mov
orb
pop
and
dec
lods
fidivrl
les
dec
aaa
out
add
fs
push
jno
jae
rorl
ss
stos
inc
mov
idivl
daa
lret
out
jp
outsb
pop
push
jmp
or
mov
aad
shrl
lea
cmp
dec
fstpt
jge
adc
out
jne
fwait
sti
adc
pushf
addr16
or
or
cmpsl
cmpsl
mov
fcoml
mov
hlt
fnstenv
push
ret
fstpl
add
pop
push
test
sub
nop
sbb
sti
sarl
dec
cmp
push
loop
sbb
dec
outsb
in
and
ret
push
lock
negb
ljmp
sub
fidivrl
stos
cmp
stos
loope
add
xor
adc
xchg
mov
sbb
or
jo
and
pop
popf
std
xchg
pop
je
fwait
cmpsl
aad
cmpsb
mov
mov
xor
push
mov
dec
cmp
repnz
sahf
scas
mov
andb
and
hlt
inc
lea
inc
xlat
insl
fwait
mov
and
into
and
pop
lods
mov
pop
lods
ja
or
mov
test
xor
repnz
jecxz
fwait
push
stos
inc
dec
out
dec
jnp
aaa
into
dec
fimull
and
and
fwait
cltd
push
cli
out
xchg
add
mov
inc
imul
loop
xor
dec
xchg
xchg
js
popa
add
adc
push
test
jnp
xor
outsb
fiaddl
jno
gs
jae
clc
sub
movsl
enter
add
sub
pop
hlt
add
xor
lods
jnp
jbe
xchg
mov
stos
push
ret
lea
mov
fildll
ja
andb
inc
iret
push
out
test
push
pop
ret
dec
xchg
lea
lea
es
lret
and
fsts
loope
subb
xchg
xor
push
repnz
bound
adc
dec
ret
les
ljmp
cwtl
test
mov
mov
mov
and
gs
mov
inc
push
es
add
xchg
inc
pop
mov
mov
sbb
repnz
jecxz
or
xchg
cwtl
test
lret
movsb
push
pop
adc
daa
outsl
bound
mov
test
clc
mov
cwtl
jmp
frstor
mov
iret
cld
xchg
add
es
adcb
es
nop
fidivs
inc
in
lcall
adc
pusha
xlat
jne
pop
lods
orb
jge
adc
and
inc
xlat
cmpsl
inc
stos
mov
push
iret
mov
fwait
dec
sahf
inc
sbb
jne
insl
aas
fcomps
pop
dec
add
out
std
and
stc
movsl
loop
push
or
dec
mov
jge
mov
inc
shrl
inc
adc
jecxz
movsl
aas
and
sbb
inc
mov
es
out
cmp
and
jb
fmul
enter
push
popf
xchg
mov
mov
loope
mov
pop
mov
iret
dec
and
mov
add
imul
fsubrs
push
repz
or
pop
sub
add
xor
in
test
sbb
fbld
out
mov
rolb
pop
gs
or
and
mov
adc
dec
movsl
test
ret
cmp
test
mov
popf
call
lds
shll
sbb
mov
imul
push
pop
in
push
xor
or
ret
and
push
mov
mov
dec
fs
cli
lret
bound
sub
jmp
add
cmp
and
cmp
sbbl
or
icebp
xchg
sub
imul
lods
hlt
mov
adc
jae
push
and
or
cmp
ficomps
mov
jle
sub
inc
xchg
out
hlt
sbb
dec
mov
pop
fists
cmc
insl
inc
cmp
jae
outsl
sub
mov
out
jae
mov
ret
lds
xchg
xchg
push
fbld
jbe
jecxz
cmp
sbb
mov
ret
jae
add
cs
dec
pop
inc
pop
sub
jp
add
incb
pushf
lea
fs
test
lock
pop
cmpsl
jne
call
xchg
add
std
inc
or
lods
mov
add
int
pop
jne
xlat
push
cmp
cli
push
xchg
and
add
mov
outsb
loopne
and
mov
jge
pop
cld
fcomp
xchg
sahf
cwtl
in
lret
enter
adc
into
cmpsl
xor
fwait
add
pop
arpl
imull
repnz
ret
lea
xor
test
lods
cld
adc
pop
dec
daa
adc
fbld
loope
and
out
mov
adc
push
sbb
loop
cmpsb
jmp
mov
mov
xor
cmp
rorb
cmpsl
mov
cmpl
scas
mov
and
cli
loopne
call
dec
lret
xor
mov
insl
ror
mov
mov
push
inc
ds
ds
add
test
movsb
cmp
inc
rolb
inc
sub
pusha
notl
je
ljmp
neg
clc
mov
and
rorl
mov
data16
mov
jmp
mov
test
mov
mov
cmp
cmp
cmp
imul
sub
daa
pop
stos
loope
mov
sarl
les
addr16
mov
rcrb
and
imul
insb
rcrb
mov
lcall
pop
mov
jo
lods
jecxz
test
mov
movsb
add
fidivl
loop
stc
jg
sbb
and
mov
fldenv
add
inc
adcb
mov
outsl
jnp
xchg
lret
add
jno
lret
sahf
dec
mov
rcll
mov
pop
jae
push
testb
jnp
push
cld
test
repnz
sub
loope
pop
sub
xor
inc
sub
cwtl
or
jns
push
jno
adc
cmp
in
pop
movsl
shrb
ds
pop
ljmp
jecxz
aam
dec
arpl
cld
cltd
mov
or
sbb
fdivl
sti
push
xchg
xchg
xchg
test
push
movb
daa
jns
lods
jo
cmpsw
cmp
cmp
stos
dec
pop
cmp
faddp
and
je
mov
jno
pop
es
outsb
jl
pop
mov
cmpsl
call
adc
and
jl
and
sahf
inc
mov
pushf
pop
mov
ret
out
mov
testb
pop
sbb
or
fstpl
push
lcall
cmp
mov
or
or
mov
shrb
pop
xchg
jae
dec
jg
xor
mov
icebp
ds
hlt
mov
fldt
sbb
aas
sti
mov
mov
dec
sahf
pop
sbb
xor
fldcw
sbb
cmc
pushf
shl
sbb
cmp
sub
add
push
arpl
ret
shll
cmpsl
iret
and
and
add
lahf
jno
or
jmp
sub
aaa
sti
dec
inc
dec
pop
shl
xor
and
clc
sarl
lods
ljmp
repnz
jo
ss
inc
in
push
jmp
js
mov
lods
loop
int
jb
lcall
arpl
jbe
fimull
lret
cld
insb
icebp
scas
and
or
lods
jo
add
mov
lods
dec
gs
cmp
stc
sbb
sbb
mov
pop
fwait
jl
or
cmpl
mov
sub
iret
lret
addr16
mov
faddl
pop
cmp
and
out
sarl
sbb
sbb
int
inc
mov
fimull
out
mov
adc
inc
stc
scas
test
add
xor
into
subl
sbb
cmp
movsb
movsb
mov
mov
xchg
and
xchg
mov
call
jns
loope
push
out
push
fldt
or
jbe
jmp
mov
gs
dec
cwtl
xchg
stos
stos
xchg
add
lods
test
pop
daa
xchg
jns
jno
add
mov
enter
out
inc
lds
pusha
das
xchg
es
dec
loope
aaa
pop
inc
movsb
sub
push
lcall
stc
mov
push
jmp
mov
sbb
je
in
inc
out
cld
xchg
mov
cmpsb
jle
sub
pop
sbb
dec
aas
aad
jle
lock
outsb
imul
imul
rcrb
enter
mulb
sbb
icebp
xchg
mov
xchg
clc
in
inc
out
lret
mov
pusha
and
dec
mov
push
adc
inc
push
push
mov
xor
inc
loopne
add
xchg
sub
jb
mov
sbb
adc
sub
xlat
gs
fiadds
push
addr16
and
cmp
or
mov
xchg
pop
test
sahf
sbb
out
cmp
jno
shlb
mov
push
jmp
add
xchg
loope
pop
lcall
sbb
pop
rorb
jle
xchg
ficoms
adc
lret
clc
pop
dec
addr16
int
sbb
int
lds
int
inc
in
fptan
das
jo
cs
enter
jl
iret
inc
gs
cltd
adc
mov
mov
push
jle
push
and
lcall
lahf
out
cld
push
pop
in
ja
push
jne
cmpl
mov
das
dec
fsubrs
lret
xchg
cld
shlb
sbb
icebp
int3
test
push
pop
repnz
and
push
jbe
inc
mov
adcb
adc
nop
jbe
dec
dec
xor
push
inc
std
mov
ret
flds
jno
inc
xor
arpl
arpl
xor
jl
stc
jno
sub
outsb
add
lret
xlat
push
add
mov
loope
popaw
push
pop
push
push
cltd
push
ja
stos
flds
fs
daa
and
arpl
ss
iret
lock
and
pop
adc
add
push
call
push
popa
pop
cmpsb
bound
mov
or
jns
hlt
push
mov
shl
pop
and
mov
lods
mov
mov
sbb
testb
xchg
outsl
jmp
jge
orl
rorb
leave
pop
scas
imul
jle
or
cld
xchg
cmp
mov
xchg
sbb
ret
bound
fwait
in
push
inc
in
es
jecxz
jbe
pop
stos
in
lahf
push
xor
popf
insl
mov
cmp
mov
dec
xchg
shll
xor
sbb
cmp
arpl
les
std
les
sbb
cmpsl
sub
jl
and
ja
add
inc
shrl
test
dec
std
dec
inc
add
pop
pop
aam
adc
aaa
ds
je
lret
outsl
cmp
mov
jmp
les
or
out
or
js
sub
cmc
rorb
jnp
add
push
add
push
mov
daa
pop
ja
jns
add
sub
push
sbb
popf
lea
shlb
cmp
push
insb
xchg
xchg
xchg
jbe
mov
in
cmp
fnstsw
mov
test
pop
mov
enter
int3
xchg
mov
je
mov
cli
shl
sub
mov
xor
xor
in
out
push
hlt
xor
data16
shll
dec
inc
test
jg,pt
inc
jns
mov
enterw
inc
pushl
pop
test
dec
mov
xor
bound
sub
pushf
dec
lods
and
mov
out
pop
xchg
xchg
imul
int
movsb
pop
es
mov
jb
mov
fsubl
xor
mov
or
insb
adc
push
scas
fcompl
sahf
cld
xchg
sbb
ds
cmp
xor
sbb
inc
inc
mov
push
xchg
scas
or
mov
aad
sub
add
xchg
sbb
dec
xchg
or
mov
roll
mov
push
daa
ss
push
lea
fistl
ds
xor
xchg
jbe
inc
mov
in
xchg
in
nop
hlt
ret
dec
xor
jns
sub
loope
add
mov
adc
cmp
stos
mov
and
adc
mov
mov
mov
mov
xlat
cltd
pop
mov
mov
sbb
jo
addr16
lds
sbb
outsb
push
sbb
sub
scas
cmp
adc
in
movsb
xchg
pop
xor
sub
add
or
add
jno
jecxz
xchg
sbb
les
aam
add
ficomps
jge
push
lcall
dec
pop
pop
pop
rcrb
fbld
int
pop
repz
inc
xchg
sbb
jp
cwtl
mov
fsubrp
push
lods
int3
pusha
add
push
mov
xchg
push
xchg
ret
jmp
icebp
mov
adc
jne
bndstx
push
movsb
cmp
das
ret
cmp
ret
clc
or
ret
jle
xchg
fsts
sbb
mov
add
flds
xor
sbb
in
or
cmp
inc
std
aas
jp
push
sub
stc
adc
int3
push
aam
aaa
pop
push
movsl
enter
push
scas
call
mov
mov
or
les
pop
insb
or
popa
aad
xchg
jp
cli
adc
fnsave
xor
fists
testb
cmp
jne
rcl
in
adc
xchg
sub
push
pusha
or
dec
cmp
leave
xor
lock
or
jmp
stc
or
or
xchg
loop
sub
cli
push
dec
cmp
repnz
cmpsb
insl
sub
jnp
stos
inc
test
bound
shll
jns
mov
sbb
pop
out
or
mov
lea
insb
movl
xchg
push
sbb
in
sub
rcr
je
std
dec
mov
mov
out
test
pushf
stos
cmc
insb
js
popf
shrl
insb
je
mov
dec
sbb
inc
jmp
jb
sbbb
or
jl
js
icebp
xchg
push
les
adc
mov
mov
inc
fcompl
iret
insl
jge
cli
outsb
loope
mov
dec
push
test
cmpsl
push
mov
and
iret
mov
mov
pushf
and
sub
dec
mov
and
lret
cld
adc
xor
fnstenvs
pop
fbld
ja
cmpsb
test
push
popf
push
inc
push
stc
and
mov
mov
sbb
in
adc
repnz
lcall
les
and
and
loopne
jmp
cmpsb
jno
push
frstor
imull
mov
add
mov
sbb
lea
jecxz
mov
fistpl
sub
pop
int3
add
sub
mov
into
stos
es
jle
aaa
insb
push
dec
mov
cmp
and
or
pusha
cmp
insl
scas
inc
mov
add
xchg
lods
sub
push
cmp
xlat
pop
aaa
pop
lods
pop
adc
inc
in
aad
loopne
movsb
mov
dec
fsubrl
aas
ret
int3
ret
adc
mov
mov
jns
lret
loopne
xchg
aaa
push
leave
mov
add
inc
and
mov
mov
add
mull
add
push
fstpt
lret
stc
inc
mov
pop
inc
pop
jle
jne
stos
es
insb
test
xchg
out
daa
std
lods
pop
jmp
jmp
jns
cs
xchg
out
push
and
shlb
enter
xor
push
iret
push
data16
jg
jne
jbe
xchg
and
adc
adc
mov
addr16
imul
cmpsl
cmpsl
adc
testl
mov
out
mov
scas
ret
cltd
push
xchg
sub
sti
xchg
add
mov
sbb
mov
jl
lret
sub
test
or
in
pop
xor
jmp
fsts
pop
mov
pop
adc
repnz
cs
aas
or
lahf
cmp
shr
jl
lahf
inc
loopne
stos
fcompl
jl
xchg
sub
insl
xchg
sbb
or
aas
push
lea
leave
pop
cmp
inc
inc
sbb
or
mov
push
ret
sub
pop
push
scas
mov
std
pop
inc
gs
negl
mov
sbb
cld
or
cmp
test
adc
inc
cmp
andb
pop
loope
in
pop
push
in
test
mov
pop
out
movsb
cmp
inc
fidivrl
push
xor
std
jns
lea
sbb
rcrl
xchg
sub
cmc
nop
xchg
add
cs
xchg
sub
repz
js
das
pop
mov
add
fnstsw
lcall
and
mov
or
scas
mov
and
cmp
fbld
mov
cmp
jecxz
adc
ss
lea
sub
shlb
pop
in
cmpsl
cmpsl
ds
mov
icebp
cli
inc
and
dec
stos
js
lcall
rcr
jmp
sub
outsl
call
sarl
scas
push
aaa
pusha
cs
es
stc
scas
lret
fsubp
cmp
cli
pusha
into
sbb
rcrb
mov
leave
bound
add
adc
add
mov
mov
mov
pop
mov
insb
mov
cwtl
xor
mov
xchg
std
outsb
mov
scas
push
imul
xchg
sbb
daa
sub
mov
inc
xchg
xor
xor
subps
xlat
les
icebp
ret
lea
cmp
push
jno
in
jb
push
adc
mov
and
mov
push
cltd
mov
sub
inc
dec
sub
outsl
loope
scas
and
ss
pop
cld
fwait
ss
andb
mov
inc
aam
call
andb
sbb
insb
cmp
fs
mov
xchg
out
clc
iret
testb
das
jp
inc
ds
fwait
xor
xchg
bound
inc
mov
sub
xor
imul
xchg
es
mov
cmp
push
mov
xchg
dec
cmpsl
ret
xor
mov
inc
fstp
pop
sti
xchg
rcrl
out
or
cmp
mov
sbb
inc
movsl
jmp
insl
test
lods
xchg
add
mov
fdiv
jg
inc
popf
clc
xor
out
xor
pop
lea
out
and
ret
cmp
dec
fstp
xchg
jp
cmpsb
mov
jb
mov
repz
cli
popa
fdivrl
push
dec
push
inc
mov
mov
jno
or
mov
dec
out
bound
outsb
mov
xchg
aad
test
mov
adc
cwtl
repz
sub
hlt
scas
lods
push
aad
pop
pusha
pop
dec
out
jge
movlps
and
adc
les
push
lea
enter
mov
es
aaa
stos
inc
gs
fdivr
setg
imul
push
adcl
jmp
fimuls
fucomi
scas
jl
xchg
xor
push
jmp
push
mov
jle
bnd
aas
add
fcomi
pop
dec
ficoml
mov
inc
bound
stos
mov
lock
das
call
dec
mov
adc
xchg
lcall
mov
sub
jmp
addr16
pop
inc
roll
jbe
push
stc
dec
push
movsb
iret
fs
jae
push
lret
mov
fisubl
dec
inc
aas
xchg
add
sbb
ret
jmp
xchg
bound
sbb
out
and
movsl
cmp
adc
push
testl
mov
sarl
stos
ja
mov
mov
stos
push
inc
sbb
dec
loop
loope
cmp
in
push
test
ja
xor
adc
mov
xor
sbb
xchg
jp
mov
test
add
inc
je
aas
daa
push
adc
xchg
fcompl
mov
adc
sbb
loop
sarb
fadd
pusha
push
jns
fisubl
scas
sbb
cmp
vpcmov
dec
mov
stos
shrb
test
lea
mov
sub
bound
push
xchg
fwait
pop
pop
scas
dec
repnz
cmp
loop
std
adc
imul
in
lock
imul
cli
std
lods
jl
in
lret
imul
sbb
ds
repz
pushf
mov
ret
subl
mov
movsl
pop
test
sub
imul
cld
and
aad
mov
pop
bswap
sahf
in
push
inc
out
sub
fs
push
push
shll
mov
dec
jl
and
jo
loope
mov
dec
mov
scas
js
mov
jno
hlt
mov
iret
mov
jbe
ja
lock
or
ljmp
pop
pushf
bound
mov
mov
sbb
mov
ds
mov
jle
or
cmp
pop
notl
test
add
adc
jge
fnstenv
into
ljmp
pop
ja
jmp
mov
pop
test
fwait
shrb
jmp
test
popa
jl
dec
lods
pop
mov
loop
mov
aaa
add
xor
sarb
into
dec
dec
ss
lods
inc
adc
cmp
mov
adc
pop
and
fistl
pushf
pushf
repz
inc
or
add
push
cld
lods
imul
cltd
stc
sbb
inc
push
shrl
daa
daa
mov
jne
les
inc
clc
or
inc
add
test
rol
imull
aas
push
insb
add
cmpsb
or
push
orb
inc
cs
test
das
mov
add
test
pop
push
or
xor
xor
pop
addb
decl
in
mov
mov
int3
sub
xchg
push
sub
push
xchg
and
sub
push
movsb
js
ret
jle
push
jl
sbb
jns
mov
fs
lods
sbbl
mov
sub
jne
push
pop
xor
pop
notb
push
jae,pt
jnp
jnp
push
dec
test
xor
ljmp
push
repz
adc
and
aaa
stos
add
push
xor
sbb
hlt
movsl
shrb
in
sub
sub
and
mov
lods
push
cld
mov
stc
ret
inc
loopne
pusha
adc
mov
mov
dec
pop
and
insl
iret
mov
pop
scas
cmp
lods
mov
pop
xor
push
das
sbb
ja
call
jmp
scas
mov
mov
mov
dec
pop
roll
in
sahf
mov
dec
xor
cmp
sbb
push
sbb
add
pop
popf
xlat
scas
dec
movb
pcmpgtb
and
dec
mov
leave
jo
out
repz
aad
sub
mov
mov
mov
xchg
mov
mov
adcb
mov
xlat
test
push
xchg
cmp
daa
mov
jmp
out
add
cwtl
call
or
xorb
add
inc
adc
fidivrs
inc
sti
insl
aad
int
mov
into
pop
es
inc
or
pop
jns
xor
adc
mov
jmp
fucomp
cmp
sbb
sbb
test
mov
xchg
es
pop
adc
dec
in
xor
pop
ljmp
sub
aas
in
mov
xchg
mov
pusha
jg
pop
pop
ja
or
mov
pop
dec
sbb
fdivl
repnz
jp
jle
inc
mov
aad
sub
repz
dec
scas
push
test
call
or
fwait
scas
sbb
dec
repnz
cmp
mov
jp
popa
mov
jno
adc
pop
iret
mov
jne
cld
mov
pop
pop
data16
xchg
cmp
loopne
mov
sbb
push
xor
or
inc
push
dec
in
mov
idivl
sbb
rorb
mov
jns
push
mov
mov
in
push
je
int
leave
xchg
jae
push
jns
rcr
es
fdivs
jecxz
cmpsl
lock
cmpsl
and
or
dec
in
cld
jl
mov
lret
test
and
adc
push
inc
loopne
daa
lcall
cmpsl
sbb
mov
pop
push
lods
pop
mov
cmpsb
loop
das
out
lret
jno
jp
stc
nop
add
jmp
addr16
mov
inc
fistpll
add
popf
inc
sub
dec
pop
or
cltd
xor
out
aas
and
xchg
stos
sub
scas
in
test
andl
rorl
dec
enter
xor
push
jb
push
movd
pop
pop
cwtl
popf
sub
jmp
call
fcom
sbb
and
outsl
rolb
push
dec
je
mov
out
xchg
dec
inc
mov
gs
rcrb
in
inc
cmp
inc
inc
int3
push
adc
and
pop
repnz
push
push
imul
fcos
fbstp
div
int3
push
sub
mov
fstps
xchg
sbb
out
movl
out
int
cwtl
xor
push
movsb
es
fucomp
inc
sub
xor
lret
and
imulb
xchg
popf
aas
lcall
iret
jno
or
mov
outsb
mov
lock
add
cmp
cwtl
imul
loope
and
cmp
je
sub
dec
jno
push
mulb
jp
stos
in
jl
inc
xor
movsl
cmpsl
js
test
fnstsw
sbb
push
xchg
dec
mov
cli
xor
xchg
lahf
daa
lea
lock
jg
dec
dec
clc
jge
mov
push
pop
pop
xor
aas
pop
js
jg
cmp
hlt
insb
or
xor
pop
xor
add
jl
push
mov
mov
loopne
daa
xor
sbb
mov
or
cs
repz
pop
adc
sar
jp
imul
jge
aaa
sarl
les
xor
jecxz
imul
jg
xchg
and
scas
push
clc
ja
add
stc
adc
repz
pushf
mov
add
fst
sti
xor
pop
adcb
outsb
popf
into
aam
roll
xor
push
stos
xchg
xchg
jbe
xchg
mov
xchg
hlt
je
data16
aas
aad
fdivrl
xor
dec
dec
aaa
jg
pop
out
xor
dec
adc
and
adc
lret
xor
insb
bound
iret
jbe
cltd
loope
push
popf
xchg
push
jecxz
and
adc
lcall
stc
jge,pt
push
xchg
push
mov
pop
scas
pop
hlt
pop
mov
sbb
aaa
pop
clc
mov
jo
je
and
out
outsl
lods
push
insl
sbb
leave
jae
lcall
pop
fdivs
jb
dec
in
pop
mov
insb
mov
pop
shrb
and
fwait
imul
mov
movsb
bnd
adc
jle
jns
ficoms
adc
std
into
sbb
or
xor
pop
inc
movb
mov
addr16
data16
in
fwait
mov
in
out
adc
xor
ljmp
mov
clc
lret
push
or
test
fdivrl
jne
subb
sti
pusha
push
sbb
test
dec
out
call
data16
pop
repnz
imul
add
xchg
mov
or
ja
push
scas
adc
out
xchg
aad
dec
int3
push
popf
mov
mov
pusha
cltd
mov
xchg
jg
mov
cli
jae
push
mov
insb
jmp
movsb
jmp
lea
out
inc
mov
fs
fisubl
filds
or
lods
jae
rcrb
adc
loop
cmp
fwait
das
adc
shr
fmulp
dec
jns
aad
insb
push
push
or
sbb
cmc
fcoms
std
rorl
dec
hlt
adc
or
sbbl
jmp
aam
icebp
xor
scas
or
mov
cmp
insl
pop
xor
gs
xchg
adc
xor
xchg
mov
lcall
xor
inc
mov
mov
inc
xlat
sub
pop
call
xchg
adc
push
dec
out
mov
mov
sahf
cmp
outsl
test
dec
mov
fstpt
mov
mov
xchg
rolb
add
aad
test
or
popl
xor
test
fimull
mov
add
dec
dec
or
cs
jecxz
sub
add
dec
add
push
es
sub
mov
pop
mov
inc
fs
stos
and
mov
xchg
rorb
push
les
shr
into
cld
inc
rorb
lea
ja
inc
cmp
push
fsts
sbb
cmc
lret
cmc
lahf
sub
inc
adc
mov
dec
jo
mov
bound
sub
vpaddd
push
hlt
add
data16
adc
mov
outsl
loop
icebp
jp
and
outsl
adc
and
jmp
pop
and
mov
sub
testb
fsubs
mov
jne
in
xchg
icebp
cmpsb
inc
push
push
xchg
or
movsl
pusha
stc
and
subl
ljmp
add
mov
mov
pop
push
lret
sti
xchg
lock
or
imul
movsl
push
je
cmc
adc
leave
pusha
out
ret
inc
out
xchg
loopne
repz
jne
add
test
in
sbb
sub
out
shlb
or
sub
dec
test
mov
adc
pop
and
pushf
cmp
and
mov
rol
outsb
lock
pushl
xor
dec
fs
lock
lds
jecxz
mov
shll
xor
mov
mov
aaa
xchg
jbe
mov
sbb
adc
nop
pushf
xor
fbstp
in
ror
or
dec
mov
inc
xchg
mov
addr16
pop
mov
or
xor
cmp
cs
out
inc
xlat
loopne
repnz
movsb
inc
fldenv
inc
mov
shrb
test
dec
mov
repnz
push
call
icebp
ret
or
aad
popa
imul
xchg
sahf
movsl
mov
repnz
imul
addr16
add
xchg
push
pop
bound
add
inc
shl
ja
arpl
mov
ds
and
push
daa
or
shl
fisubs
sub
bound
sub
shlb
pop
push
dec
mov
push
negb
push
mov
jg
stos
mov
lods
xchg
push
sahf
cmc
int3
dec
ljmp
add
fnstcw
sbb
mov
jb
shrl
mov
lahf
mov
pusha
test
enter
xchg
dec
inc
call
prefetcht0
popf
lock
inc
dec
jl
push
mov
insl
ss
les
mov
ficoms
or
les
sub
fidivs
orb
jbe
out
adc
pop
cmc
mov
push
and
xchg
add
imul
push
sti
int3
push
cwtl
add
int
and
push
pusha
push
fwait
mov
aad
stos
sbb
in
inc
adc
std
arpl
je
aaa
dec
add
int
cmpsb
inc
inc
loopne
iret
test
incl
push
lret
mov
jmp
movsb
roll
adc
xor
les
mov
into
sahf
pusha
arpl
xchg
stc
mov
cmp
out
les
clts
sbb
lods
adc
mov
into
lods
add
iret
xor
mov
testl
ljmp
xor
outsl
push
test
push
in
mov
out
int3
fdiv
wrmsr
data16
fdivl
add
outsl
test
mov
jg
lods
aaa
fs
xchg
arpl
xlat
sbb
mov
cmpsb
out
aam
and
cmp
ret
popa
jmp
rol
pop
xchg
mov
ret
hlt
dec
sub
bound
sbb
jmp
fisubrl
sub
cmp
push
mov
dec
fwait
xchg
sub
scas
movsb
hlt
or
push
out
xchg
leave
dec
out
fmuls
mov
xchg
lahf
es
arpl
pop
int
shr
mov
mov
mov
es
pop
fdivr
pop
xchg
lret
stc
push
cs
pop
mov
pusha
sub
mov
dec
out
loop
movsl
lcall
lcall
std
inc
insl
xchg
daa
jne
pop
lcall
mov
stos
dec
dec
cmp
cs
xchg
sub
ds
jne
roll
adc
jb
movups
add
sbb
sub
nop
lea
repz
imul
addl
cmp
xchg
jo
pop
imul
adc
sub
test
fcomi
xor
adc
jmp
adc
subl
adc
lea
pushf
fildl
in
hlt
jno
vaddsubpd
push
outsb
adcl
xor
cmp
call
test
mulb
jnp
jbe
std
ja
or
cmp
xor
pop
loop
sbb
pop
add
cmpb
out
jp
add
sbb
inc
push
xlat
push
inc
or
push
mov
xor
andb
ljmp
inc
cwtl
mov
adc
loop
mov
fwait
or
in
sarb
jno
mov
sbb
inc
mov
xchg
notl
push
cs
pop
fs
xchg
cmp
cmp
mov
leave
or
movsw
adcl
mov
enter
jmp
adc
ljmp
mov
jp
jbe
hlt
pop
dec
aas
or
in
and
jbe
inc
or
cld
cmp
fsts
fsubrp
test
sub
adcb
pop
les
push
push
sbb
or
dec
push
jae
pop
mov
push
mov
sbb
stos
fsubrl
insl
push
leave
pop
adc
sbb
cmp
pusha
sarb
adcl
sub
lret
add
movsb
subl
pop
jno
mov
rol
filds
cwtl
push
push
mov
xchg
gs
jle
cld
dec
cwtl
in
repz
inc
fsubr
and
dec
sub
stc
mov
mov
inc
fsubl
cld
shlb
insb
or
jecxz
jge
imulb
mov
add
pop
pop
out
dec
nop
shlb
jne
sarb
sub
fmull
negb
lret
jge
cmpsl
dec
dec
test
shlb
loope
into
xchg
adc
dec
xor
jecxz
test
cmpsl
cmp
fwait
hlt
lods
in
mov
mov
insb
lods
mov
or
in
into
or
inc
push
or
sbb
mov
test
repnz
ficomps
int
retw
xor
imul
inc
inc
push
jmp
pop
cmc
cmp
inc
jb
dec
xchg
adcl
rorl
mov
or
imul
mov
icebp
repnz
xor
mov
cmc
sbb
ds
loop
and
push
sub
int
aas
pop
nop
sbb
lods
pop
sahf
mov
sbb
jp
and
pop
jno
popf
dec
add
xchg
sahf
pop
aaa
scas
xchg
cmpsl
sub
aam
scas
add
loopne
pop
push
sbb
stos
jmp
in
aaa
dec
adc
testb
sti
outsb
popf
sub
in
and
jno
xor
add
mov
lods
xchg
outsl
add
in
iret
fcmovne
rorb
repnz
cmpsb
arpl
sub
push
stos
ja
dec
xor
push
in
cmpsl
push
test
push
out
jae
and
movsl
jne
push
lods
xor
mov
xchg
mov
jle
popf
scas
loopne
insl
xchg
shl
repnz
pop
jmp
aaa
lea
rolb
inc
mov
in
or
test
dec
add
adc
jns
in
cld
lock
or
in
pop
and
aaa
cli
jge
sub
mov
sbb
pop
xor
fs
gs
incl
movsb
in
sbbl
pop
icebp
add
mov
enter
enter
into
jle
iret
mov
pop
cmp
cmp
sub
mov
iret
int
out
imul
aad
test
movsl
aas
mov
lods
xchg
fdivrs
dec
loop
push
in
push
mov
push
ljmp
jnp
jp
mov
jo
leave
mov
ja
imul
mov
inc
popa
xchg
sub
mov
push
outsl
or
iret
ret
test
push
cmp
cmp
shlb
rol
sub
sub
ret
outsl
jnp
mov
push
mov
push
shlb
subb
lods
mov
lods
cmpsb
lcall
scas
add
jle
gs
addb
add
mov
les
sbb
roll
test
out
sbb
gs
aad
mov
dec
and
sub
mov
xchg
and
pop
adc
sub
or
pop
sub
sahf
hlt
xchg
sub
push
inc
leave
and
jge
repnz
out
ds
repz
mov
sbb
pushf
inc
loope
daa
push
fbld
inc
pop
xor
and
mov
and
imul
adc
das
popa
mov
push
and
mov
push
pop
sub
stc
jl
movsl
shll
pop
dec
mov
xorl
xchg
icebp
popa
push
or
mov
popf
cmpsl
mov
mov
sbb
jle
iret
in
and
sbb
or
adc
lahf
and
paddb
cld
mov
mov
mov
mov
xchg
sub
cmp
add
shrb
adc
mov
xor
and
repz
iret
xchg
bound
fs
lods
cmp
int
bnd
jp
mov
inc
imul
addr16
mov
push
cmpsb
jns
xchg
cli
insl
add
xchg
adc
cmp
int3
lret
cwtl
and
leave
mov
testb
mov
jno
fldenv
mov
dec
or
imul
adc
repz
cmp
test
stos
or
test
lock
add
xchg
ret
mov
pop
ret
imul
shlb
dec
and
out
push
pop
out
dec
mov
sbb
sbb
popa
push
jge
imull
popa
or
mov
adc
dec
xchg
and
xchg
dec
lret
mov
and
xchg
mov
stos
lcall
scas
int
enter
fs
fdivr
mov
stc
frndint
adc
sub
sarl
adc
mov
sub
iret
lret
aad
and
cmpsb
out
and
adc
sbb
lods
dec
aaa
push
dec
cli
xor
out
arpl
loope
adc
cmp
aad
jge
gs
cmpsl
pop
sti
in
stos
addr16
jne
mov
or
and
add
aas
fldpi
push
xchg
cs
in
repz
mov
pushf
sarl
or
aad
mov
pushf
and
xchg
push
jno
je
sbb
push
xchg
int
xchg
cmp
xlat
movsb
push
es
clc
or
icebp
push
xor
xchg
test
cmc
mov
adc
shl
pop
aas
push
jl
test
cmove
test
mov
jne
cwtl
xchg
js
ja
cmpsb
mov
mov
mov
xor
adc
push
mov
decb
out
sti
rolb
and
loop
sub
pop
push
aam
aam
push
shlb
int
add
sbbb
arpl
mov
loope
adc
fwait
lcall
mov
mov
or
mov
sub
icebp
jmp
rolb
fiadds
inc
dec
rorl
ret
insl
fs
adc
cmp
shlb
xlat
xchg
jb
fdivl
push
test
push
int3
je
and
ret
mov
cli
cwtl
cs
int3
ja
gs
nop
out
mov
cs
clc
mov
fnstenv
cs
outsl
ds
clc
jae
notb
rcr
clc
cmp
aam
stc
sbb
xchg
push
ds
movsl
outsl
xor
sbb
sbb
pop
push
int3
arpl
out
sbb
outsb
scas
pushf
mull
adc
inc
packuswb
adc
mov
mov
fistpll
loopne
cld
inc
cmp
out
inc
out
mov
sub
ret
cmp
add
jno
sbb
push
sbb
out
jno
adc
shll
fadds
pop
sarb
test
pop
dec
movsl
nop
pop
ja
and
add
pop
cmpsl
push
pusha
pop
or
inc
jbe
mov
imul
mov
push
add
inc
mov
add
sub
mov
aas
sbb
inc
mov
adc
loopne
lahf
add
adc
sbb
mov
outsl
sarl
sub
pop
sti
nop
xor
lods
call
push
scas
in
mov
fnsave
cmp
cltd
sbb
lret
das
out
cmp
mov
fst
hlt
movb
sar
adc
mov
mov
mov
outsb
lret
lods
push
stc
popf
adc
in
cmp
mov
push
sbbb
mov
xchg
mov
iret
mov
iret
ds
xor
lahf
cmp
cmp
lret
sub
cmpl
add
sbbb
das
adc
dec
fdiv
push
repnz
adc
adc
lock
cmp
sbb
mov
xchg
fisubrs
mov
inc
push
xor
xor
xchg
dec
ja
imulb
jbe
push
call
inc
jp
pop
nop
or
mov
and
ljmp
adc
jo
sub
mov
es
or
mov
mov
or
xchg
outsb
jmp
mov
stc
dec
pop
pop
jns
jl
dec
test
nop
sarl
insb
scas
pop
lahf
in
cld
xchg
filds
mov
out
pop
add
repnz
sub
iret
test
fistps
mov
adc
cmp
mov
xor
adc
push
sub
sbb
xchg
and
cmp
aas
cmc
mov
pop
popa
pop
repz
and
mov
mov
fcomi
cmp
push
push
xchg
imul
mov
ss
pop
test
mov
fdivl
xchg
inc
xor
flds
jecxz
test
cwtl
int
out
bound
sbb
imul
dec
xchg
jbe
cmpsl
fidivs
aas
pop
push
push
sub
out
pop
imul
frstor
in
jecxz
fs
lods
add
ret
mov
xchg
nop
mov
jmp
mov
fists
xor
nop
jl
pop
mov
lods
inc
cwtl
xchg
sahf
push
rdmsr
cltd
test
lods
flds
jne
adc
xor
xchg
cmc
inc
adc
mov
xor
in
fwait
mov
xchg
pushl
sahf
sti
leave
dec
mov
or
mov
jmp
mov
aam
rorl
stos
pop
in
daa
ret
rorl
imul
popa
sub
xchg
push
dec
lcall
xor
pushf
jae
pop
jp
add
mov
loopne
test
into
sbb
movsb
ja
sbb
push
mov
aad
out
lcall
sub
test
mov
aam
and
cmp
out
ret
les
or
adc
enter
mov
sbb
xlat
mov
scas
xchg
adcl
and
fnstenv
mov
cld
jp
fildll
cmpsb
ja
pop
bound
mov
movsl
and
mov
and
movhps
out
aam
shrl
or
shlb
cmp
sub
adc
sbb
mov
mov
dec
ja
mov
sbb
adc
mov
data16
or
lret
out
jl
mov
mul
popl
sbb
into
xchg
popa
inc
cltd
insl
lret
sub
pop
rcll
inc
xor
in
aam
sbb
imul
dec
and
cmc
shrl
repnz
lods
dec
add
mov
push
xchg
sub
out
test
fsubrp
mov
shl
out
adc
jns
test
mov
xchg
call
inc
shlb
mov
mov
dec
push
cwtl
mov
dec
rcrb
mov
popa
sbb
mov
int
xor
push
or
inc
stos
sahf
sbbl
cmc
and
jno
sub
pushf
loopne
xor
lcall
mov
popf
or
push
xchg
mov
jno
sub
pop
icebp
pop
aas
dec
lea
sbb
adc
add
or
add
test
add
leave
cmp
clc
loop
push
enter
add
std
mov
cmpsl
adc
fsubs
mov
or
or
xor
and
jbe
in
pop
xchg
inc
and
xor
push
push
push
inc
xor
and
push
mov
xor
dec
fidivs
test
scas
test
es
andb
cmp
jno
add
les
ret
hlt
fcoms
xchg
dec
test
mov
ja
push
pop
aas
sbb
jo
push
das
xchg
inc
addr16
ja
mov
fdivr
cli
or
std
test
jecxz
cmovp
inc
aas
jb
movsl
outsl
jp
or
lods
sub
add
inc
or
ljmp
cmc
daa
push
iret
popw
loop
ss
lods
in
divl
mov
jb
and
shll
je
dec
mov
loopne
mov
adc
cmp
cld
sub
dec
sahf
or
sbb
sub
sbb
and
add
stc
xchg
sub
xor
aaa
loope
adc
mov
div
xchg
or
push
sbb
mov
rol
pop
xchg
out
into
aas
jp
pop
mov
inc
fdiv
and
ficoml
xlat
xchg
inc
fwait
sub
popf
jp
std
push
jmp
ss
enter
xor
roll
push
addr16
add
push
lds
mov
mov
ljmp
jno
gs
repnz
push
insl
shlb
rcrl
jl
xor
xchg
gs
pop
fstps
mov
push
mov
mov
mov
jmp
rorb
push
test
mov
incl
clc
add
es
loop
mov
in
jns
enter
adc
push
sbb
lods
xchg
movsb
jnp
lea
stos
push
in
xchg
dec
mov
mov
cmp
jns
cmp
dec
push
add
push
mov
jo
xchg
test
add
add
xor
aam
inc
ss
lods
cmp
xor
std
int3
jne
cld
xchg
adcl
mov
outsb
or
jae
dec
xchg
dec
cmp
fwait
sub
aam
cmp
call
mov
add
packssdw
hlt
movsb
mov
cli
mov
sub
lret
or
mov
sbb
lret
mov
std
outsl
push
jecxz
xchg
pop
rcl
out
mov
jne
mov
sbb
ss
and
or
insb
jg
ds
mov
outsb
into
xchg
mov
jle
or
sbb
loope
fistl
push
or
mov
sarb
pop
lods
xchg
mov
lea
pushf
mov
mov
cmp
dec
repnz
mov
cmp
inc
data16
shr
xor
bound
ret
push
fs
aaa
in
notb
push
lret
in
jb
shll
and
and
pop
incb
out
test
movsb
out
inc
cmp
jecxz
popa
dec
loopne
iret
sarl
mov
lret
mov
mov
pop
mov
push
sbb
push
add
pushf
insl
dec
adc
stos
inc
adc
dec
iret
insb
push
into
divps
scas
or
xor
idiv
dec
cmp
pop
ds
or
pushf
pop
cwtl
or
and
jns
imul
ret
xor
daa
pop
out
movsb
outsb
pop
hlt
pop
imul
mov
cmp
dec
int3
mov
icebp
dec
sub
outsb
aad
ds
push
sub
inc
jne
xchg
mov
clc
cwtl
jae
inc
mov
repz
cmp
pop
lahf
int
cltd
and
out
lods
imul
mov
cltd
ja
adc
jle
inc
enter
mov
push
movsl
fidivrl
stc
and
mov
pmulhw
rorb
inc
push
std
xchg
push
in
pop
push
ja
adc
or
arpl
fildl
pop
pop
icebp
pop
xor
inc
inc
xchg
and
iret
mov
fidivrs
xor
or
ret
sub
add
pop
iret
out
cmp
outsb
mul
adc
cwtl
push
inc
movsl
sub
dec
pop
je
imul
arpl
das
and
imul
xor
dec
adc
cmc
or
sbb
dec
int3
int
cmp
in
cmp
or
pop
ljmp
or
notb
xor
mov
lahf
adc
daa
fwait
cmp
test
add
xchg
popa
cltd
push
test
pop
fdivs
fs
sbb
xchg
pop
jecxz
inc
adc
js
mov
andb
lods
jecxz
stc
sbb
es
dec
cltd
xor
in
add
cwtl
mov
outsb
fsubs
mov
push
nop
sub
or
inc
and
sbb
addr16
mov
mov
jno
pop
sub
lds
repz
xlat
cmp
add
fists
bound
mov
pushf
in
cmp
cld
movsl
mov
ret
outsl
jnp
adc
cmp
jl
xchg
out
inc
sahf
xchg
bound
add
pushf
test
pop
ja
sub
std
xor
or
mov
cmp
add
add
loop
sub
adc
xorb
or
dec
jmp
jns
loopne
pop
jae
add
xor
or
in
pop
out
sbb
cmp
jl
mov
push
xchg
lret
test
pop
xchg
xor
rol
cmova
data16
mov
cli
test
push
rorb
sub
xchg
sbb
adc
push
rorl
pop
sub
ss
xchg
push
add
test
add
stc
lahf
int3
add
cmp
sub
xor
xorb
nop
jl
repz
lock
pop
mov
call
pop
cld
xchg
or
test
add
arpl
and
xchg
jg
mov
lret
push
push
mov
cmp
inc
pop
fsubrl
cmp
notb
mov
aad
dec
ss
sti
daa
mov
out
in
add
mov
int3
movsl
push
push
push
in
inc
fistpl
js
pop
pusha
insb
pcmpgtd
jb
or
fwait
push
lods
or
movsl
adc
lock
out
repnz
rol
push
cwtl
sarb
push
and
cmp
add
sub
pushf
push
mov
jle
dec
xchg
loop
mov
mov
mov
pop
pop
outsl
jne
jnp
aam
and
cmp
push
mov
das
ja
jns
pop
ja
fwait
addr16
insb
and
cmp
ss
aas
add
cmc
xchg
pop
stos
fldenv
and
leave
xlat
test
sarb
jnp
test
cld
outsl
aam
imul
jg
xchg
cmp
dec
cmp
fcomps
or
je
xor
cltd
inc
movsl
jl
xchg
stos
push
mov
push
faddl
mov
outsb
nop
inc
cwtl
pusha
pusha
push
or
repnz
ja
out
es
scas
xchg
cmpsl
inc
jmp
in
int3
mov
iret
push
fimull
test
and
mov
adc
sbb
inc
js
test
dec
dec
repz
cmp
cmp
jae
ss
popf
pushf
jmp
scas
jae
or
cmpsl
xchg
cmp
ds
sub
addb
push
adc
outsl
dec
pop
nop
testb
mov
mov
mov
adc
shlb
scas
in
add
xchg
sbb
fldt
cmp
cmp
imul
shll
daa
push
test
dec
mov
sbb
adc
sbb
mov
pop
je
jmp
lds
mov
data16
inc
push
test
fiaddl
aam
sbb
sahf
andb
or
pop
aas
clc
or
cmc
pop
cmp
daa
in
test
movsb
stc
jge
or
pop
sahf
adc
test
rorb
imul
fwait
sub
add
call
or
xchg
popf
lods
mov
std
flds
inc
shrl
mov
push
cli
and
pop
inc
jecxz
mov
cmpsb
and
popf
ror
cmpsb
sti
repnz
mov
or
jle
bound
dec
xchg
cmpsl
xchg
inc
adc
mov
mov
fsts
sub
jo
or
mov
insl
cwtl
xor
mov
int3
and
in
scas
lahf
push
cli
test
hlt
xchg
dec
leave
push
add
xor
pop
pop
lret
pop
scas
dec
cwtl
dec
pop
push
roll
jg
ds
and
dec
cli
dec
hlt
ljmp
fs
jmp
bound
ficomps
xor
push
sub
call
add
jmp
cmp
pop
xorb
jmp
mov
adc
push
add
and
cwtl
cmp
fidivrl
aaa
lret
dec
dec
mov
dec
cmp
insb
bound
add
jo
dec
mov
mov
push
hlt
lods
inc
es
cltd
test
xor
xor
inc
sub
dec
add
or
arpl
mov
xchg
mov
mov
push
dec
in
mov
sarb
push
not
mov
les
sub
add
outsb
outsb
daa
mov
mov
test
inc
stc
ja
mov
rorl
sbb
jge
jo
mov
popa
enter
sub
test
lock
mov
decl
popa
fwait
sbb
lret
mov
jb
mov
xchg
fprem
xchg
sub
subb
es
mov
ficoml
push
pop
stos
mov
lret
dec
mov
inc
push
fidivs
int
push
rep
mov
pusha
inc
clc
xchg
sub
cmp
pop
jb
stos
pop
dec
fisttps
test
out
and
lret
sub
add
das
loope
ja
push
mov
xor
test
std
push
je
das
add
cmp
jb
ret
mov
stos
add
push
scas
iret
adc
xor
bound
mov
push
in
or
dec
jmp
in
and
call
jmp
or
cmp
cmp
mov
add
insl
xchg
cmc
push
outsl
mov
mov
cmpsb
lods
cmp
mov
lods
pop
test
enter
xchg
imul
pop
arpl
or
dec
popa
or
sbbl
fmulp
sbb
lds
fsubl
xchg
mov
in
icebp
shlb
or
gs
sbb
cmp
fildl
out
sub
repz
push
mov
or
mov
inc
addr16
je
cmp
mov
or
sub
les
pusha
lret
lock
repnz
std
mov
enter
ret
push
xor
jbe
dec
or
mov
xlat
sub
loopne
mov
mov
shrl
jp
stc
xor
test
cmp
ret
inc
std
dec
inc
cwtl
mull
inc
movsl
fiaddl
inc
mov
lret
and
jo
in
xlat
adcb
cmpsl
lods
cmp
xor
mov
ds
mov
mov
shrb
aad
aad
and
mov
jbe
fdivrs
sbb
pop
dec
xchg
stos
or
outsl
enter
dec
loopne
sbb
test
sbb
and
add
jb
fcom
push
dec
nop
call
gs
adc
push
outsl
mov
mov
mov
mov
inc
jnp
add
dec
xor
adcb
inc
and
arpl
addr16
clc
iret
adc
push
xchg
je
push
inc
in
ret
repz
push
test
ds
and
mov
push
xchg
dec
inc
shrb
xor
in
jmp
adc
xor
lods
aaa
aam
pop
and
out
test
je
dec
out
mov
or
test
insb
std
scas
mov
stos
mov
scas
jnp
mov
jae
mov
push
in
jle
inc
fisubl
fisubs
lock
add
test
inc
mov
cmp
mov
es
pusha
xchg
sub
mov
sar
add
push
sbb
outsl
cmp
ret
pop
fistpl
shll
pop
cmp
sub
cmp
jmp
mov
pop
fldt
stos
lret
sub
ficomps
mov
imull
out
pusha
pop
sbb
jne
xchg
sub
notb
jg
into
je
scas
inc
mov
scas
cmpl
stos
movsb
movsb
sub
popa
jg
sub
mov
jne
test
or
jo
cld
shlb
je
and
sarb
pop
sbb
mov
in
repnz
mov
loope
push
lahf
imul
lcall
mov
adc
add
dec
in
dec
sub
aam
jge
inc
inc
fnstenv
adcl
mov
dec
shlb
cmc
aam
mov
ret
sahf
xchg
adc
subl
xor
mov
cmpsb
push
dec
in
adc
es
fildll
js
adc
and
pop
push
iret
jecxz
jns
loope
sub
dec
outsb
mov
sbb
and
push
fimull
sbb
cld
mov
pop
cmc
mov
lret
mov
fdivrs
jns
pop
scas
fwait
imul
ja
xchg
xor
push
data16
shrl
inc
sbb
xorl
fisubl
push
popa
roll
scas
loope
push
test
mov
xchg
popa
jp
imul
pop
mov
scas
mov
pusha
popf
scas
and
in
mov
int
hlt
dec
pop
inc
and
stos
addr16
imul
in
out
clc
xchg
or
and
mov
arpl
xor
cmp
adc
test
xlat
lcall
push
push
stc
xchg
test
pop
clc
sbbb
mov
push
mov
lahf
push
inc
xchg
or
jns
pop
jecxz
lcall
jl
shl
cmp
or
mov
call
add
pop
mov
lds
push
adc
cmc
add
scas
push
mov
push
mov
xor
push
js
enter
xchg
jmp
lds
cmp
mov
fwait
dec
ret
sbb
sub
inc
lret
fnstsw
adc
ja
jno
cmp
push
sbbb
lret
cmpsb
push
pushf
test
repz
cld
rcl
fsubs
rclb
push
mov
dec
mov
fcompl
sbb
cmpsb
and
das
jae
outsl
mov
int
adc
sub
addr16
outsb
cmpsl
adc
orb
sbb
imul
pushf
fldl2t
inc
xor
push
xchg
mov
arpl
pop
xchg
jg
ljmp
inc
out
fists
push
fwait
cs
hlt
roll
adc
mov
mov
aam
test
push
mov
shl
xchg
and
or
cmp
jecxz
xchg
adc
cmp
ljmp
inc
inc
out
hlt
fsubrs
mov
rorl
ret
mov
test
call
push
push
stc
test
nop
and
mov
xchg
mov
fistps
cmc
aaa
mov
ret
lret
jns
sbb
shl
and
adc
xchg
adc
jl
in
xchg
dec
enter
add
jp
gs
lret
pop
add
testl
push
in
ja
push
dec
inc
rolb
fnstsw
sbb
dec
jae
push
in
les
cli
inc
jl
in
pop
cmpsl
push
lds
les
push
add
data16
jae
icebp
cmpsb
icebp
mov
loopne
dec
sahf
enter
dec
mov
push
out
out
aam
adc
adc
mov
js
or
rclb
inc
inc
xchg
scas
orb
mov
jg
subb
ja
dec
or
loop
out
enter
pusha
testl
lahf
add
inc
mov
pop
dec
add
ret
rcll
push
push
ljmp
ss
or
in
dec
or
push
dec
es
rolb
lods
sub
sbb
mov
pop
push
ljmp
jno
or
rcrb
fidivl
popl
out
mov
sub
sbb
dec
mov
dec
adc
xchg
jmp
out
dec
pop
xor
pop
mov
inc
pushf
hlt
cmc
nop
add
std
popf
jae
mov
arpl
addl
rcr
or
pushf
cli
lds
and
cmp
ds
sbb
pop
popa
cld
icebp
sbb
clc
shlb
push
je
ret
mov
mov
mov
pop
shlb
xchg
xacquire
call
or
out
push
push
hlt
testl
call
fdivl
in
js
ljmp
xlat
in
fcomip
or
fnsave
adc
test
pop
sub
sbb
dec
xchg
mov
push
inc
bnd
aad
xlat
push
in
out
stos
lds
aas
xlat
rorl
jo
jo
in
jp
xor
aam
inc
insb
adc
shrl
ljmp
scas
nop
lods
les
adc
repnz
ret
mov
mov
xlat
cmp
cmp
into
mov
lahf
sub
pop
mov
seto
roll
das
mov
icebp
sub
mov
popf
fsub
xchg
pop
cmp
adc
dec
loop
ss
xor
das
mov
pop
xor
out
or
cltd
hlt
lcall
push
es
add
jl
and
xchg
xchg
adc
out
adc
xlat
inc
int3
xor
adc
mov
lea
sub
sbb
jmp
rcrb
or
into
and
mov
test
pop
insb
das
mov
jl
mov
sbb
cmp
ret
fists
mov
fbld
or
andl
mov
dec
lahf
js
inc
sub
inc
into
gs
dec
test
push
arpl
out
xchg
das
test
cmp
mov
push
leave
sbb
dec
xor
adc
add
mov
pusha
sahf
int3
arpl
shl
add
ljmp
and
pop
sbb
mov
test
sub
adc
sahf
clc
dec
push
lret
xor
out
sbb
mov
add
jle
rol
in
add
jecxz
std
movsb
push
jb
jb
cli
xchg
fnsave
jecxz
icebp
cltd
and
mov
bound
adc
jmp
xor
fnstsw
ljmp
jb
or
gs
adc
add
sti
inc
sbb
repnz
inc
jp
ljmp
fsubl
cltd
and
cltd
xor
dec
shlb
jb
ret
jmp
jnp
test
pop
dec
and
xor
push
add
dec
shl
cs
mov
dec
imul
andl
mov
cmovle
aad
pop
push
ljmp
inc
pop
mov
arpl
lret
xchg
ror
jg
adc
mov
xor
mov
pushf
cwtl
pop
ljmp
ficoms
movsb
cmp
mov
pushf
aaa
stos
imul
js
dec
xchg
sub
cs
pusha
dec
stc
or
push
lods
pop
jecxz
out
das
xor
pop
loop
mov
jl
sub
jbe
aam
sarl
xchg
and
jo
cs
arpl
jb
int3
xchg
xor
cmp
out
inc
push
mov
pop
scas
cmp
cli
ret
testb
rolb
sub
jge
inc
mov
push
jnp
test
xor
mov
stos
inc
test
rep
mov
enter
lea
push
xlat
pop
icebp
pop
test
dec
push
lods
js
popa
mov
or
xchg
std
loopne
ret
cmc
ret
sbb
shll
out
pop
cmpsl
cld
mov
push
lock
add
dec
loope
ljmp
mov
push
das
pushl
sti
in
pop
icebp
xor
mov
in
in
rcll
enter
fisttps
xor
mov
in
enter
repnz
cmpl
or
xchg
pushf
lret
out
jae
pusha
pop
push
jmp
test
jb
xorl
int3
std
pop
inc
and
inc
xchg
mov
ss
xor
movsl
add
or
xchg
xor
or
cli
adc
mov
repz
mov
insb
or
lods
inc
dec
xchg
or
mov
lret
mov
outsl
outsl
subl
sub
add
mov
loopne
jno
inc
pop
clc
repnz
sbb
pusha
pop
cmp
lds
orb
xor
scas
push
iret
pop
jb
adc
sub
or
imull
mov
mov
pushf
jge
jno
mov
jne
ror
xchg
shrl
fs
in
add
aam
int
push
pushl
mov
les
les
lcall
int
jno
outsb
or
cmp
iret
sbb
jo
popa
cmp
adc
out
xchg
cmp
addb
cmp
xchg
movsl
add
pusha
out
pop
sbb
fdiv
rcrb
daa
hlt
aas
mov
xchg
push
push
sarl
les
gs
cmp
push
daa
push
out
out
mov
mov
mov
mov
fstpt
ret
int3
fmuls
dec
fisttps
lods
add
adc
mov
jle
mov
xchg
fs
mov
mov
cmp
popf
call
mov
stc
lcall
mov
add
jne
rclb
push
jns
push
leave
aas
add
test
sbb
icebp
sarl
add
mov
mov
xor
cld
cltd
ljmp
test
movsl
mov
pop
mov
rcrb
cmpsl
sbb
ss
add
jnp
pop
lds
loopne
jo
aas
and
scas
add
add
cli
xchg
repnz
push
jecxz
or
cs
jmp
loope
mov
imul
mov
mov
adc
sbbl
push
or
jno
clc
cmpsl
divl
jb
insl
insb
cmpl
add
int
mov
jp
sbb
leave
insb
or
sahf
outsl
loop
adcb
jbe
mov
ret
xchg
xor
fwait
outsb
shl
inc
push
sbb
push
add
aas
jae
push
movsl
pusha
push
mov
sub
xchg
cmp
fidivl
rcrl
jle
ret
into
cmp
in
or
fidivs
stos
ljmp
ds
mov
shl
fs
rorl
imul
insl
or
inc
test
inc
ficomps
mov
in
mov
sub
mov
dec
jmp
add
int3
cmp
lods
fs
leave
loope
lods
xor
dec
outsb
movsl
mov
sbb
sub
mov
push
ss
ret
test
sahf
mov
add
pop
mov
ja
xor
cmp
shl
loope
scas
push
xchg
jns
xor
adc
negb
int
lcall
pop
ljmp
adc
out
std
repz
mov
adc
hlt
adc
xor
insb
xor
out
movsl
or
lahf
scas
push
divl
sub
xor
outsb
cli
cld
jge
stos
sbb
int
shrb
inc
lcall
ss
std
mov
imul
lds
loop
mov
mov
rclb
nop
fnstenv
stc
popf
icebp
fisubrs
jle
push
or
sbb
jne
jmp
or
cmpsl
sbb
fcomps
jg
dec
hlt
cltd
jl
push
sahf
cmpb
and
jno
sahf
cltd
xor
addr16
xchg
outsb
mov
stos
loop
dec
cmp
ret
pop
cmp
add
pusha
mov
in
lahf
movsb
pxor
lods
xchg
xor
icebp
outsb
push
push
flds
cmp
xchg
sub
rcrb
add
inc
mov
repnz
cmpsb
mov
or
test
shll
in
loop
or
mov
jge
push
fidivrl
ret
push
or
out
add
xchg
add
test
push
insb
fldl2t
insb
imul
mov
shrl
cmp
xchg
sbb
nop
jno
adc
dec
cwtl
stos
mov
dec
gs
push
leave
loop
outsl
or
movsb
fcompl
or
inc
ss
das
mov
cmp
sbb
dec
in
test
and
jne
jecxz
ficoml
mov
pop
icebp
inc
or
movsl
mov
cmp
lahf
sub
repnz
sbb
or
jle
add
in
mov
lret
call
cmp
sahf
es
sub
outsl
test
out
fldl
or
rcl
jle
hlt
mov
cmp
dec
jle
xchg
mov
dec
loope
lock
and
pop
or
adc
dec
jbe
push
bound
out
mov
fmull
mov
mov
mov
call
aas
fadds
mov
xchg
push
inc
arpl
xchg
ds
sub
and
movsb
mov
push
or
fcmovne
add
mov
push
fistpll
or
add
repnz
or
xchg
pop
xchg
sub
cmp
int3
add
mov
adc
and
bound
lcall
lcall
xor
fcomps
sbb
repnz
cmpsb
iret
iret
mov
imul
jne
add
and
scas
xchg
loope
inc
sbb
fistps
adc
jg
mov
or
ss
in
xchg
add
shrb
adc
and
dec
divb
rorb
pop
push
mov
das
mov
mov
insb
cpuid
shlb
stos
mov
lahf
outsb
or
test
inc
test
shlb
iret
dec
jp
gs
pop
mov
adc
jno
xor
xchg
jb
jnp
loopne
mov
xor
sub
mov
push
or
xor
mov
mov
adc
xchg
hlt
mov
out
xor
fstpl
std
or
stc
adc
xor
jne
cmpsb
xchg
sub
cmp
sub
jge
in
cmc
mov
mov
test
inc
movsb
arpl
cmp
push
shlb
sti
pop
ss
sbb
xchg
loop
rclb
cmp
popl
stc
push
sbb
mov
insl
jne,pn
xor
mov
js
xor
ss
mov
fbstp
mov
push
daa
inc
push
or
cmp
or
xor
fisubl
mov
repz
das
xchg
sbb
std
jl
pop
int3
pusha
sub
ljmp
pop
sti
xor
sbb
loop
lahf
cmp
sbb
sub
mov
notl
and
jno
lods
xchg
or
mov
cmc
pop
dec
and
pop
add
and
in
je
mov
sub
test
pop
cmp
push
repz
push
sbb
movsb
mov
cmp
sub
xor
adcl
inc
xchg
jmp
sbb
xchg
dec
lods
push
in
sbb
int3
push
and
push
add
stc
xor
pop
xchg
leave
enter
add
sub
xchg
sub
xor
ret
pop
movsl
pusha
jo
xchg
mov
sbb
repnz
sbb
aam
adc
cmpsl
sbb
pop
out
es
je
mov
fildl
sahf
pop
mov
and
mov
std
sbb
das
push
cmp
push
jmp
pusha
xor
lahf
arpl
cwtl
jb
cli
pop
outsl
push
or
sub
dec
loopne
push
pop
lds
mov
mov
mov
pusha
or
cmpsb
jne
sub
ret
and
inc
lcall
shll
aam
gs
cli
mov
inc
test
sahf
or
popf
or
jg
or
jle
repnz
cmpl
jle
jmp
jp
sbb
or
sub
fldpi
stos
mov
lahf
nop
popa
mov
ffree
inc
mov
test
stos
daa
outsl
mov
outsb
ret
pop
lret
dec
mov
add
inc
loop
xor
ljmp
mov
ret
loope
subb
jbe
mov
sbb
jmp
sub
ret
pop
mov
mov
sti
xchg
and
inc
shll
mov
xor
sub
cmp
mov
lahf
push
dec
xchg
in
cld
add
inc
sbb
push
les
pusha
lcall
std
sti
pop
fnsave
dec
pop
insb
sbb
in
mov
subl
push
sahf
xchg
les
nop
jmp
adc
je
aam
jge
cmp
daa
scas
add
sbb
lds
cmp
mov
repz
mov
xchg
xor
xlat
jne
inc
es
repz
mov
test
push
and
dec
fistpll
pushf
push
mov
cmp
notrack
inc
dec
add
das
mov
cmp
mov
xchg
xchg
test
xchg
decl
mov
mov
inc
and
pop
jbe
add
push
xchg
pop
jno
movsl
das
loopne
js
int
pop
in
xchg
or
mov
add
rolb
std
inc
pop
push
bound
and
lds
scas
imul
or
popf
jns
pop
mov
jb
cmpsb
test
cmp
push
xor
dec
dec
adc
lods
stos
or
fldenv
add
mov
lret
divl
adc
lret
fldl
sbb
push
dec
cmpsl
mov
mov
imul
jae
mov
add
mov
mov
dec
sbb
aaa
dec
insb
dec
sub
cmpsb
lock
leave
and
xor
push
and
adc
mov
push
repnz
aad
inc
push
jbe
add
xor
inc
arpl
call
outsl
pop
sbb
pop
add
pop
or
pop
daa
mov
pop
xor
sub
lcall
popa
add
cmp
inc
mov
mov
rcrl
pop
jbe
push
test
lds
sahf
xor
lret
test
mov
ret
loopne
aas
xor
mov
stc
sbb
outsb
je
or
data16
jle
sub
outsl
sub
movsb
js
pop
push
dec
lahf
push
in
inc
pop
cmp
cld
test
pop
jne
arpl
mov
test
lods
xchg
mov
inc
push
fstenv
arpl
das
movsl
cmp
mov
add
mov
pop
loopne
ds
sub
sbb
mov
outsl
jo
imul
flds
aam
push
sub
mov
stos
call
movsb
pop
xor
je
lret
push
mov
out
lds
outsl
pop
push
negl
stos
add
xor
pop
mov
movsl
pop
cmpsb
popf
sti
dec
dec
dec
mov
cmc
popa
icebp
jo
mov
mov
rolb
xchg
mov
and
nop
je
stos
ja
jae
clc
fdivs
cmc
in
or
xchg
xor
pop
cmc
push
out
repz
add
out
jecxz
cmp
test
imul
adc
dec
fwait
call
mov
hlt
and
mov
aas
pop
stos
add
hlt
pop
aad
jno
pop
sti
mov
icebp
andb
push
pop
mov
inc
hlt
pop
or
xorl
xchg
and
add
inc
call
xor
mov
mov
xor
push
imul
dec
ret
call
push
call
lret
movsb
add
jl
jnp
inc
lods
loopne
inc
xchg
bound
sbb
jmp
out
inc
fstps
je
jb
and
push
cmp
imul
test
pop
movsl
loopne
pop
hlt
movsl
adc
add
xchg
mov
xchg
sub
aad
lret
roll
pusha
pop
jne
push
movsb
mov
ret
inc
push
lcall
gs
fcmovnbe
jne
mov
mov
jno
and
mov
cmc
cmp
sub
mov
xchg
jmp
add
out
inc
shr
test
jno
or
dec
push
movsl
arpl
imul
cmc
cmp
scas
mov
in
testl
je
pusha
pusha
adc
push
dec
push
outsl
pop
roll
hlt
insb
xor
sub
xchg
adc
cwtl
push
cltd
push
je
xchg
fdivrp
movl
xlat
out
push
or
aaa
sub
bound
mov
lret
testl
cmp
pop
push
aad
leave
std
pop
lock
mov
ja
mov
cmc
imul
ffree
xchg
mov
aam
ja
mov
pushf
shlb
out
sti
loopne
mov
ds
jmp
in
mov
jne
sahf
pusha
or
adc
sub
sub
aaa
hlt
lock
push
in
xchg
shlb
into
add
das
mov
fs
popa
sbb
jne
mov
aam
addr16
cmp
jne
in
imul
pushf
push
cmc
jge
jge
out
dec
jge
jnp
outsb
mov
jmp
icebp
xor
adc
jb
dec
sbb
daa
mov
xor
inc
mov
and
mov
fisttpll
sub
ret
xchg
dec
daa
aaa
mov
mov
clc
nop
mov
adc
stos
fmulp
push
ja
sub
fmulp
xor
in
inc
loope
mov
cwtl
jp
pop
mov
iret
ja
pop
xor
push
dec
jge
xor
sar
sahf
sbb
arpl
ds
out
cmpsl
sarb
adc
push
ljmp
push
add
les
adc
jp
shrl
xlat
mov
lret
push
xor
nop
cli
xchg
test
jns
jae
sbb
mov
scas
enter
movsb
bound
cli
jns
addr16
inc
dec
call
and
inc
or
jmp
sbb
imul
jmp
ss
clc
aas
arpl
dec
movsl
xlat
aad
lahf
repnz
into
in
xor
test
popa
daa
lds
fnstcw
mov
adc
xchg
outsb
xchg
sub
push
cltd
xor
test
xlat
adc
cmp
gs
bndldx
xchg
push
sub
sti
cmp
cmp
icebp
test
sub
mov
out
dec
pop
add
bound
add
cltd
or
pop
ja
and
cmc
lcall
mov
insb
jecxz
xchg
pop
add
std
ljmp
fwait
push
add
mov
lret
inc
jg
stos
push
fadds
xchg
cs
lret
daa
pop
or
dec
movsl
push
daa
data16
pop
jnp
sahf
pop
outsb
mov
adc
xchg
pop
insl
inc
cmp
lret
sahf
popa
mov
in
pusha
xlat
cmp
movsl
mov
les
dec
sub
divb
or
pop
sbb
daa
lea
leave
stc
in
sub
dec
loop
mov
jmp
lret
and
cltd
test
lahf
push
outsb
jl
xor
adcl
mov
and
fistl
adc
aaa
repnz
push
outsl
aaa
in
xchg
nop
pushf
cli
shl
xor
pop
push
push
or
lock
add
xchg
add
jbe
jmp
or
test
movsl
hlt
mov
and
adc
flds
or
and
push
lcall
mov
xor
lahf
frstor
cld
sti
mov
repnz
and
mov
aas
in
aaa
mov
icebp
inc
sub
jp
mov
inc
pop
sub
dec
enter
push
mov
push
aaa
lods
imul
and
cmp
cmp
pop
cmp
jmp
xchg
lods
push
lock
xor
repz
and
pop
jmp
andl
movsb
sub
or
adc
or
mov
push
adc
sahf
jg
xchg
lret
push
notl
xchg
xchg
push
or
push
pushf
aas
push
jl
dec
mov
fwait
movzbl
sub
xlat
cwtl
pusha
dec
add
jo
movsb
jnp
std
and
xor
xchg
and
lret
pop
lock
xlat
pop
xchg
sub
jl
sbb
jle
hlt
daa
in
aas
bound
movb
es
aad
ret
pusha
dec
mov
or
cmpsb
dec
pop
dec
dec
lahf
xlat
sub
sub
inc
scas
sahf
jle
jg
dec
repz
add
mov
inc
jno
pop
aas
push
xchg
lret
sbb
inc
add
cli
in
adc
or
sub
je
in
test
lock
or
fidivs
out
lret
jno
mov
fs
insl
push
test
lods
outsl
xlat
mov
call
clc
call
xchg
push
push
fistps
iret
xor
or
push
mov
adc
jg
cmp
inc
lods
add
je
insl
cmpsb
psllq
jp
jecxz
sub
imul
dec
lds
adcl
sub
adc
movsl
sbb
push
outsb
add
sbb
stos
dec
aas
mov
repnz
scas
add
insb
sbb
sbb
xchg
add
or
sahf
pop
sahf
jg
out
imul
push
cmp
sub
jl
stos
mov
add
xor
outsb
testl
pop
sub
jl
dec
dec
aaa
lds
scas
inc
and
int
out
mov
stos
mov
test
fldenv
inc
pusha
jo
and
insl
inc
in
daa
loopne
sbb
inc
fidivl
aaa
push
cltd
xchg
in
aad
ret
fisubrl
pop
dec
or
mov
adc
shl
icebp
dec
out
and
mov
test
mov
mov
movsl
test
mov
out
and
cmpb
or
or
aas
mov
pushf
inc
fcmove
in
jge
out
out
popa
lods
inc
pop
push
sub
cmovle
xchg
or
sub
or
stos
inc
inc
jle
inc
daa
cmp
test
jecxz
das
adc
mov
popf
shlb
lahf
lods
mov
popa
test
lods
jae
imul
mov
sbb
not
inc
fadds
or
int3
ss
out
roll
xchg
hlt
lret
adc
xor
adc
mov
sbb
cwtl
andl
ror
mov
sarl
fcomps
sub
adc
ret
movl
inc
or
int3
jns
outsb
and
pusha
mov
cmpsb
push
sub
push
insl
adc
sub
xchg
push
jmp
inc
clc
jo
xor
cmp
dec
push
pop
addr16
imul
mov
mov
inc
fisubrl
test
inc
push
pop
cmp
hlt
mov
jne
add
xor
mov
sbb
pop
test
cmp
push
fsubs
mov
push
std
cltd
sarb
push
add
add
shlb
insl
jae
inc
int
lret
cmp
sub
pop
cmc
or
or
xlat
icebp
dec
dec
in
mov
dec
mov
inc
nop
sub
add
or
jns
or
scas
and
nop
daa
sub
int3
mov
adc
dec
sbb
xchg
pop
mov
rsm
jl
and
nop
sub
pop
addb
cmp
sub
out
shrb
out
add
rorb
and
out
cmp
insb
adc
test
ret
mov
or
gs
pusha
leave
push
mov
leave
fmulp
cmpps
mov
pushf
int
pop
lret
outsb
mov
sub
inc
pop
in
dec
push
insl
xchg
mov
shl
sbb
lock
lret
sbb
dec
aad
test
mov
repnz
lods
cmc
push
stos
test
ficoml
mov
loope
outsl
leave
ret
mov
pop
das
cmp
in
and
iret
lret
adc
xchg
popf
imul
out
add
add
xor
push
stc
push
lock
lahf
daa
or
imul
cmp
adc
xor
pop
jb
fs
mov
aas
imul
sub
inc
pop
jb
jmp
or
sahf
xor
fs
lret
lods
in
sub
out
push
pmulhw
call
inc
mov
add
hlt
jmp
aas
fldl
dec
loope
inc
jmp
ret
mov
fisttpl
fwait
loopne
push
into
aas
dec
xchg
mov
loope
fidivrs
add
scas
test
jg
adc
lock
push
nop
pop
aaa
lahf
pop
dec
push
mulb
xorl
or
cs
fcoms
lock
jb
mov
dec
pmaddwd
pop
sahf
popf
sbbb
icebp
mov
out
xchg
push
xchg
dec
mov
pop
xor
jns
nop
and
mov
xor
sub
scas
inc
fucomip
xor
sahf
jmp
or
mov
mov
rcl
add
mov
xor
in
push
cltd
xor
sbb
cmpsl
jo
jle
mov
or
fs
mov
lcall
rorl
lea
add
inc
test
and
pop
scas
pand
dec
fs
in
in
and
testl
stos
lret
cld
int3
hlt
mov
sbb
adc
into
fcomps
inc
dec
fcmovne
sub
inc
negl
in
jo
outsb
sub
repz
and
cmp
xchg
negb
sbb
in
xchg
inc
inc
sbb
jno
pop
or
sbb
ret
mov
push
mov
jnp
in
shrb
sbb
mov
xchg
lahf
fdivs
pop
mov
outsb
sarb
data16
cwtl
aam
aad
mov
push
jno
adc
push
lahf
popa
xor
cmpl
in
xor
test
sub
fwait
cwtl
in
add
divb
push
mov
aad
mov
les
loope
xlat
pop
or
add
push
lea
push
js
adc
mov
cmp
fwait
xor
ja
stc
push
dec
push
aaa
cmpsl
ret
push
push
mov
nop
xor
fldenv
dec
push
dec
add
push
out
cwtd
push
push
cmp
add
insb
or
and
test
shl
lods
mulb
sub
iret
mov
fldl
cli
sub
push
adc
add
and
push
pop
aaa
xor
push
inc
insl
in
xchg
dec
cmpsb
negb
xchg
xchg
jp
fistl
cmp
jecxz
push
into
outsb
lret
xchg
jp
test
std
movsb
inc
lock
jae
jns
dec
inc
xchg
imul
repnz
test
adc
int3
mov
jecxz
push
mov
inc
in
mov
cmpl
xor
movsb
in
andb
cmp
inc
shll
mov
in
in
push
xchg
out
pop
int
pop
fcompl
jmp
loope
lret
fwait
and
push
out
mov
movsb
aaa
adc
cmp
arpl
jecxz
cmp
ds
in
jno
inc
push
aaa
inc
inc
cltd
xorb
and
and
mov
outsl
add
popf
adc
xchg
cmp
dec
mov
pop
outsl
mov
sub
xchg
cmp
sub
push
sahf
cmpsb
dec
fwait
repz
fisttps
mov
push
in
lods
ss
in
les
je
aad
lods
add
sub
sbb
push
adcl
mov
fiaddl
lods
and
in
adc
push
add
sarl
in
enter
decl
fnstenv
dec
sub
or
jl
lcall
sub
ljmp
and
int3
and
gs
in
xor
or
lret
xchg
dec
fsts
xor
in
ja
fnstsw
roll
in
dec
lea
mov
lock
shll
aad
pusha
add
push
push
and
cmpsb
push
push
outsl
daa
sub
sub
pop
lock
mov
aas
cmp
mov
enter
add
mov
popa
fidivrl
mov
xlat
dec
push
adc
jno
cwtl
sub
inc
pusha
into
enter
inc
xor
test
and
repz
sub
ds
or
mulb
js
mov
sub
into
jno
or
add
push
lods
xor
jmp
cmp
push
sbb
xor
cwtl
push
sbb
jns
push
sub
negb
imul
jns
sub
xor
andl
scas
mov
imul
shrl
aad
fcom
repz
loope
or
push
mov
rclb
dec
std
das
xchg
jne
add
fsubrs
push
int
imul
lea
rorl
mov
push
bound
scas
adc
aam
stc
mov
mov
out
or
xor
and
fldl2t
ljmp
push
shrl
cmc
lcall
sbb
arpl
pcmpgtb
push
cltd
lea
push
shll
push
outsl
popa
adc
into
stos
inc
push
jg
out
js
jb
daa
popa
cld
mov
jbe
mov
add
and
out
jb
ret
mov
fbld
test
out
insl
shlb
lea
push
ret
loopne
std
nop
and
xchg
xor
insb
fsub
jno
gs
push
mov
mov
lea
cmp
sbb
mov
ret
imul
push
jmp
dec
add
loopne
sbb
push
add
mov
add
faddp
and
dec
mov
sbb
mov
push
add
jle
inc
or
loopne
cmp
aaa
adc
addr16
mov
hlt
and
decb
lret
push
jmp
xchg
scas
test
lods
mov
sbb
xchg
or
scas
sbb
sub
inc
pop
jnp
mov
int3
xor
aas
add
push
add
lcall
cmp
mov
das
stos
inc
jmp
mov
gs
sub
ja
ds
pop
aaa
dec
aam
pop
dec
fcmovbe
loope
sub
inc
loopne
daa
ds
ret
insl
jno
or
imul
jnp
adc
and
mov
insl
sti
or
fsubrs
push
mov
jbe
and
and
adc
mov
cmp
stos
push
jnp
out
push
dec
xlat
hlt
inc
pop
and
dec
and
repz
scas
movsb
negl
test
mov
and
mov
lods
push
or
gs
sub
cmpsb
mov
mov
hlt
and
jle
in
sahf
dec
pop
and
faddl
mov
fstpt
rol
add
ljmp
and
ds
mov
call
imul
out
cmp
scas
dec
mov
lods
shrb
cltd
lcall
in
out
cmp
insl
mov
sbb
fnstcw
xchg
les
lahf
ss
pusha
mov
inc
push
shrb
imul
scas
xor
xor
jno
inc
loop
nop
cmp
repnz
aaa
sbb
mov
push
push
fistl
push
mov
sti
lcall
sbb
xchg
add
fwait
aaa
pop
dec
xchg
lods
jno
ja
xchg
xchg
repz
fidivs
mov
cmp
call
push
dec
ds
cmovne
pop
lods
cmp
jns
andl
or
enter
pop
or
loop
pop
gs
dec
lea
add
push
sbb
movb
mov
sbb
add
pop
stc
aas
in
sub
jg
xchg
push
std
or
popf
testl
imulb
aas
cmp
out
jb
push
mov
add
testb
sahf
mov
dec
repz
in
ret
jo
pop
dec
fcompl
jl
jp
loopne
arpl
sbb
mov
lods
and
mov
and
loope
jnp
outsb
stos
stc
mov
mov
sarb
or
hlt
test
sub
enter
gs
xor
les
add
add
ficoml
push
outsb
adc
mov
cltd
mul
xor
fistpl
aad
ds
lcall
inc
out
lret
mov
xchg
mov
movsb
call
cmp
push
push
subl
data16
mov
imul
add
shrb
add
sysenter
jl
stos
test
dec
repz
jb
adc
js
mov
add
sub
imulb
movsl
mov
fcmovbe
and
xchg
add
inc
or
mov
imul
sbb
push
jge
sub
jns
int3
inc
movsb
mov
loopne
jecxz
push
into
dec
jecxz
lret
inc
pop
fucomip
push
mov
jmp
in
jns
dec
mov
jle
orb
push
mov
pop
xorb
push
xchg
xor
in
aaa
mov
and
leave
fsubrs
add
sbb
lret
flds
dec
pop
mov
popf
lret
push
dec
js
pop
daa
outsb
rol
dec
add
repnz
dec
lds
fs
xchg
and
dec
loop
lahf
mov
stc
mov
hlt
mov
shlb
mov
mov
ljmp
add
xchg
outsl
inc
inc
jmp
jo
xchg
inc
fwait
sbb
dec
cld
fdivs
xor
flds
movsb
repnz
out
enter
dec
lahf
push
mov
inc
cs
dec
jbe
icebp
or
sbb
pop
lahf
and
negb
mov
or
rcrb
pop
test
xlat
mov
cmp
jb
and
dec
cmp
std
int3
fisubrs
test
jp
out
rcl
xchg
daa
jl
mov
decl
je
mov
stos
mov
cmp
add
pop
add
movsb
lea
mov
orb
popf
jbe
mov
xchg
dec
pop
outsb
outsb
test
movsl
cmp
pop
mov
fcomps
adc
lahf
xorl
ljmp
or
add
in
xor
xor
xchg
nop
mov
aaa
pop
jg
out
sarb
mov
jl
add
push
call
rolb
mov
rolb
bswap
dec
out
xor
ja
ret
clc
and
pop
pop
popa
fmul
or
xor
pop
lock
sub
aam
mov
xchg
pop
mov
adc
in
icebp
rcrb
mov
xchg
int3
adc
jecxz
cmp
insl
call
inc
mov
out
popl
addr16
lea
mov
rcrl
xor
xchg
sbb
stos
shrb
mov
push
mov
dec
or
std
pushl
adc
mov
cmpsl
call
and
out
test
inc
adc
xor
pop
cmp
cmp
rclb
xor
jo
mov
repz
jge
mov
xchg
jp
push
jmp
dec
test
out
imul
cmp
daa
sub
ljmp
cmp
gs
dec
rorl
fisubs
add
out
inc
or
mov
xchg
xlat
or
call
out
xor
jns
inc
leave
inc
dec
cltd
and
dec
dec
inc
sbb
insl
dec
cmp
mov
fdivl
lods
imul
adcl
xor
sbb
mov
lret
xor
dec
scas
call
mov
add
stc
test
xor
mov
push
mov
push
or
inc
mov
cld
movsl
lret
fists
push
cmpsl
dec
push
push
loop
cmp
lea
mov
in
jge
push
xchg
in
and
mov
cmpsl
loop
pop
xchg
pop
test
add
insl
pusha
negl
or
pop
mov
frstpm(287
cmp
fdiv
hlt
xor
repnz
iret
fiaddl
fcompl
mov
xor
sahf
lock
pop
xchg
sbb
pushl
push
cmp
es
add
out
or
das
cs
testl
jbe
pop
ljmp
in
outsb
icebp
int3
dec
and
dec
shrb
dec
insl
fistl
or
pop
iret
pop
out
hlt
cmp
cwtl
adc
mov
xchg
pusha
and
mov
sub
and
inc
jle
push
and
xchg
popa
and
jl
mov
repz
mov
in
fwait
data16
arpl
sbbl
ja
out
jne
push
sub
fisubrl
iret
mov
lcall
mov
lea
out
sub
outsb
ret
sbb
mov
lahf
sbb
sbb
and
jbe
mov
pop
push
jnp
call
adc
jne
xchg
mov
loop
jne
aam
xchg
addb
imul
jne
jg
push
sub
mov
cmc
xchg
out
or
add
les
aaa
dec
lea
mov
fcompl
sub
pop
jno
xchg
lds
fdivs
mov
cmp
or
loopne
jb
mov
std
gs
fdivl
lds
div
jmp
add
push
cmc
insb
addl
dec
inc
in
sub
sbb
pop
lock
in
push
xchg
sub
int
pop
out
cltd
arpl
fs
adc
fstpt
scas
aad
push
inc
stos
sarb
fsubl
mov
pop
test
sub
and
jne
xor
in
xchg
jno
adc
or
mov
xchg
mov
in
cli
xchg
sub
adc
adc
jbe,pn
add
adc
ret
sbb
pop
loope
outsl
dec
jecxz
jl
sbb
shr
pop
cwtl
sbb
sbb
in
add
jnp
and
js
popa
scas
test
sbb
inc
call
daa
jno
out
xchg
test
pop
scas
pop
inc
leave
fildl
adc
stos
xchg
lods
shll
pop
cmc
xor
add
xchg
or
out
cmpsl
xchg
pop
in
jb
push
stos
aad
sub
push
jg
push
push
xor
and
ljmp
mov
outsb
roll
cmp
aaa
insb
add
int
jno
push
mov
jmp
aam
lret
dec
jne
jle
and
mov
shr
mov
cmc
mov
mov
loop
sbbb
pop
and
xor
stos
mov
fidivl
enter
mov
inc
cmp
popa
sbb
out
ja
fcompl
outsl
subl
iret
sub
insl
fbld
lret
sbb
lcall
push
push
es
pop
sbb
outsl
mov
js
daa
push
test
fstpl
cmp
lods
fldcw
shlb
ss
cmp
inc
fdivrs
push
arpl
xlat
pop
adc
repz
sti
jbe
mov
aas
mov
mov
push
stos
mov
repz
scas
cmp
jnp
inc
icebp
jle
lods
fildll
sarb
or
mov
mov
cmp
add
pushf
imul
and
ret
mov
aas
xor
imul
faddl
inc
cmpsb
nop
cmc
pop
fiadds
jecxz
pop
jbe
xchg
jne
sti
xor
add
and
rorl
popf
gs
jl
push
and
int
adc
int3
mov
sub
mov
push
je
pop
push
mov
mov
ja
fsubrs
push
rcrb
adc
mov
add
shrb
das
mov
stos
mov
les
mov
scas
cld
gs
mov
inc
sub
add
mov
adc
mov
imul
mov
pop
mov
or
sahf
add
xchg
push
pop
and
pop
mov
js
mov
pusha
pop
sub
call
push
roll
mov
mov
shll
xchg
jmp
mov
or
dec
fstp
push
cmc
sarb
icebp
pop
mov
mov
cmp
cmp
jne
ds
mul
cmpb
pop
and
and
jg
int3
mov
adc
cs
ss
inc
gs
mov
je
out
aaa
sbb
shlb
lret
ds
mov
in
mov
jne
lds
jg
lret
mov
stos
add
cld
cld
xchg
jle
std
aam
popf
push
and
sub
lods
sbb
dec
cmp
xor
cwtl
mov
add
mov
fildll
fsubl
mov
sbb
lcall
mov
cmp
xor
cltd
aam
xchg
mov
int
movsb
ret
xor
mov
insb
add
adc
outsb
es
sahf
jb
out
pop
pop
and
xchg
adc
loope
sbb
xchg
jmp
rcll
roll
push
orb
or
and
xlat
aam
ret
xlat
repnz
pop
call
dec
loopne
inc
and
dec
or
xor
ds
ljmp
sub
loope
sbb
sub
cwtl
sub
insl
cmp
int3
popf
stc
mov
push
mov
rorb
sbb
add
jecxz
jno
ret
loopne
scas
xlat
repz
addr16
sbb
xchg
pop
jae
bound
add
pushf
aaa
int
nop
mov
push
movsl
cmp
je
aaa
mov
ljmp
in
mov
testl
inc
ljmp
xor
fldt
sub
insl
fs
mov
mov
std
add
adc
pop
cli
loope
je
pop
test
imul
insl
bnd
iret
dec
push
in
and
fistpl
push
mov
jae
mov
gs
dec
xchg
mov
sbb
jbe
mov
adc
dec
mov
test
lcall
call
je
jo
xchg
mov
inc
or
mov
lcall
fcmovne
insl
out
movsb
call
lea
xchg
fld1
imul
mov
jg
pcmpeqd
adc
sbb
and
arpl
xchg
push
out
aas
popf
jl
out
sbb
popa
jp
in
repnz
jbe
jg
ret
dec
sub
cmpsl
xor
imul
mov
inc
push
outsb
fwait
in
mov
pop
loop
mov
inc
add
adcb
mov
nop
xor
sbb
xlat
jb
cltd
in
xchg
scas
push
addr16
test
into
and
es
sbb
pushf
repnz
cmp
pop
inc
ret
cmp
loopne
ffreep
scas
inc
loopne
jecxz
cmp
xchg
rorb
mov
and
mov
mov
out
sti
mov
inc
pop
xchg
jno
jae
or
dec
rorb
fdivl
adc
shr
cltd
inc
out
cmpsb
daa
inc
movsl
ds
pop
lods
inc
data16
or
and
push
rolb
das
push
mov
pushf
ds
daa
mov
pushf
sub
add
daa
ljmp
jo
fucompp
xor
and
cmp
jbe
nop
pop
push
xchg
popf
lcall
ret
sub
sbb
leave
mov
or
test
push
ret
fs
push
dec
or
mov
cmc
cmpsb
cmpsb
or
xlat
movl
popf
orb
sti
cli
daa
and
push
xchg
ja
sahf
mov
mov
add
repnz
mov
unpckhps
jns
add
loop
in
insb
lret
out
push
fpatan
cmp
scas
fcompl
push
gs
sbb
jg
cmovs
popa
jle
stos
dec
cmp
xorl
and
dec
xchg
gs
pop
je
bound
add
call
ficomps
fisubl
push
outsb
ret
jle
ret
or
jmp
insb
mov
lahf
ljmp
out
sarb
dec
push
inc
lds
mov
mov
sahf
inc
or
into
jl
xchg
and
adc
ja
xor
jecxz
cli
sub
cmp
cli
icebp
test
cmp
cmp
ljmp
stc
lcall
pop
mov
mov
add
push
jmp
inc
stc
loop
das
test
cltd
or
add
das
dec
mov
insb
imul
nop
dec
stos
fidivs
or
sbb
sbb
andb
xchg
bound
insb
jb
shrl
mov
jmp
jbe
push
or
adc
xor
repnz
out
mov
outsb
loop
adcl
subb
shrb
xchg
daa
cli
dec
mov
cmpsl
adc
cltd
xchg
xlat
or
sbb
cmp
sub
push
sbb
cltd
les
sub
mov
es
incb
cltd
mov
push
aaa
flds
xor
pop
inc
cmpsl
mov
dec
push
popf
jmp
mov
pop
leave
xlat
insl
arpl
pushf
repz
lods
xor
mov
mov
mov
adc
add
lea
cmpsl
scas
subb
or
xor
cmpsb
stos
repz
and
arpl
icebp
shlb
mov
pop
pop
insb
testl
mov
dec
in
pop
movsb
sbb
cwtl
call
xchg
cli
bound
lods
test
jle
mov
cs
fstps
sbbl
imul
ja
fs
or
roll
sub
test
gs
out
insl
xor
clc
pop
add
arpl
shrb
push
ret
aaa
fwait
sti
outsl
pop
mov
stos
stc
call
cmpsl
out
push
rcr
out
jb
add
sub
and
sub
pop
scas
xchg
mov
repz
jnp
dec
rolb
int3
notb
decl
adcw
sbb
ja
clc
add
push
iret
mov
mov
lret
jne
dec
adc
mov
mov
adc
mov
ljmp
jne
rcr
mov
jg
adc
and
pop
jle
js
in
mov
pop
mov
xchg
sub
popf
fcmovnb
pop
int
push
repz
bound
ds
lods
dec
aaa
rcl
or
pop
dec
ljmp
adc
lds
addr16
outsb
popa
jl
cmp
and
sbb
insb
cmc
pop
jg
jmp
andl
leave
add
dec
or
add
subb
stc
into
and
lret
xchg
lods
mov
sbb
inc
xor
in
ss
push
inc
xchg
mov
jg
jle
adc
adc
les
repz
sbb
xchg
dec
mov
in
mov
sbb
lea
push
lcall
inc
sbb
loop
mov
mov
movsb
mov
pop
lret
dec
or
mov
jno
xchg
xor
adc
mov
xor
xor
inc
push
cltd
pop
mov
clc
push
sarb
inc
sub
mov
ss
fildl
and
or
loop
daa
shrl
jmp
enter
aam
in
add
sub
add
shl
pop
lods
mov
call
js
sbb
adc
in
cmp
imulb
movsb
push
in
gs
ja
aaa
pop
ucomiss
cmc
xchg
je
push
lods
sub
lcall
sar
sub
push
loopne
or
xchg
or
sbb
mov
sti
aam
loopne
daa
adc
shll
inc
pop
into
int3
sarb
imul
sti
adc
sbb
dec
add
add
mov
pop
cmc
jg
xchg
push
in
and
sarb
pop
stos
enter
popa
lret
repz
adcb
or
stc
sub
jae
mov
es
arpl
jae
jne
lods
or
mov
jl
dec
push
into
int3
push
sub
push
xchg
xchg
cmp
sbb
insb
scas
clc
add
lret
jbe
dec
xor
aaa
pop
xchg
cmp
xor
icebp
cmp
inc
adc
fs
add
orb
int3
sbb
fidivs
add
imul
mov
mov
bound
ror
cmc
mov
inc
insl
mov
dec
shll
popf
je
int3
push
fdivrs
sti
adc
movsl
jo
int3
and
push
jle
jl
fstps
in
or
xchg
cli
mov
sahf
lods
adc
xor
jl
inc
xlat
fnstenv
gs
mov
bound
test
int
jmp
mov
imul
ljmp
lock
and
rsm
inc
sbbl
mov
jae
sub
jmp
bound
or
rcrb
cmp
out
inc
add
test
lret
data16
jbe
push
aaa
pop
jb
sbb
sub
insl
sahf
int
xchg
js
sbb
pushf
add
repz
xchg
mov
pop
sbb
loope
outsl
les
jns
cmp
dec
mov
pop
outsl
daa
cld
adc
sbbl
cltd
jb
iret
fists
rclb
popa
cmp
push
xchg
push
std
or
push
jne
fwait
out
jmp
out
rcl
pop
push
sbb
aaa
jge
aad
insb
mov
pop
and
jl
outsl
cs
jp,pn
lods
aas
dec
mov
push
sub
fildl
jle
fsubp
jbe
add
test
faddp
sahf
mov
mov
jmp
mov
lret
and
adc
xchg
stos
ficomps
push
sub
pushf
enter
rol
sub
stos
mov
stos
xor
push
lcall
popf
notb
fcomi
loope
adc
xchg
test
mov
cltd
sub
test
and
pop
jb
mov
call
cmp
lcall
test
xchg
sbb
mov
outsl
mov
push
shr
add
xor
das
popf
dec
jnp
push
adcb
shrl
jle
pop
dec
inc
fdivrl
adc
shrb
inc
xchg
sbb
dec
sbb
push
cli
xor
cltd
loope
dec
out
lret
sbb
jp
cmp
andl
movsl
push
fcomi
cmc
dec
adc
data16
out
repz
bound
push
push
xchg
jmp
push
cld
lods
mov
xor
xor
dec
and
inc
or
inc
xlat
out
jae
xchg
lods
outsb
je
xor
shl
push
xchg
lret
cmp
outsb
jo
xchg
jo
stc
xchg
xor
sbbb
mov
mov
aam
inc
jmp
mov
and
outsb
dec
adc
inc
iret
call
imulb
xor
stc
into
jle
push
push
iret
mov
arpl
xchg
sets
gs
lock
pop
lock
pop
xor
rclb
ret
cs
jb
call
stc
imul
jbe
push
popf
cmp
push
jne
xor
scas
and
out
scas
or
jle
frstor
test
fdivr
xor
or
imul
and
lods
xchg
lods
xchg
mov
add
push
call
notb
and
dec
push
aad
push
jmp
pop
xchg
dec
mov
fidivs
ror
std
icebp
aad
into
and
inc
pushf
mov
dec
cmc
cmp
push
stc
cld
pop
sbb
add
and
adc
int3
or
or
mov
mov
loopne
icebp
in
cmp
div
mov
dec
mov
pop
sub
xchg
cmp
xchg
andb
shrb
push
cwtl
stos
enter
xchg
in
mov
in
mov
mov
andb
popl
cmp
pop
test
mov
pushf
jne
push
mov
mov
rcll
das
cli
mov
cmp
mov
imul
pop
aad
xchg
dec
xchg
popa
aaa
bound
or
mov
pop
xor
pop
jmp
imul
aaa
inc
popa
push
in
mov
xchg
mov
jmp
push
push
push
inc
xchg
lret
in
sahf
sbbl
adc
mov
popa
clc
loope
inc
cld
mov
jg
jae
fidivl
sbb
jae
push
or
adc
or
and
pop
addr16
into
test
js
adc
pop
jg
jns
jl
jne
ficomps
dec
setle
fsubs
shll
sub
into
dec
inc
xor
or
addr16
xor
add
sub
and
lret
or
enter
push
lahf
mov
sub
pop
movsb
decb
into
xor
andb
add
sbb
cmp
add
add
sbb
push
scas
cltd
fwait
int3
jecxz
xor
jmp
or
cmp
sbb
xchg
sub
mov
cmp
push
xchg
xor
sarl
rcr
clc
adc
sbb
das
imul
inc
mov
jmp
dec
inc
inc
aad
stos
inc
push
mov
cli
xchg
fnstcw
push
out
sbb
pop
das
pop
imul
sti
int
inc
inc
in
stos
inc
cwtl
icebp
mov
pop
mov
mov
hlt
lock
xchg
or
and
xor
leave
pop
mov
es
or
nopl
mov
mov
push
lea
flds
add
inc
shll
xorl
jno
cmpsl
or
xchg
aas
ja
popa
mov
repz
test
icebp
pop
mov
mov
pop
loopne
addr16
adc
std
ljmp
cld
imul
cmpsl
pop
fwait
adc
cwtl
fistpll
add
mov
jo
mov
dec
es
xlat
aaa
cmpl
in
pop
mov
mov
popa
xor
mov
add
rorl
mov
sarl
or
or
jne
mov
xchg
pop
pop
cmp
xor
insb
mov
dec
loope
adc
lds
aam
and
jl
in
mov
jmp
mov
sbb
cmp
push
cltd
adc
mov
iret
es
xor
out
push
sub
xor
into
aad
jbe
mov
mov
cmpsl
bound
lcall
xor
dec
int3
out
mov
adc
cmp
push
movsb
pop
dec
xor
insl
push
push
mov
mov
cmp
pop
mov
sbb
add
cmpsb
divl
cmp
adc
push
and
fistpl
inc
pop
fdivs
xor
cmc
popf
mov
in
dec
inc
inc
clc
jae
daa
loopne
dec
dec
xchg
push
in
lahf
out
ds
cmpb
movsb
push
test
in
fdiv
and
jae
add
and
outsb
icebp
xchg
xor
arpl
jmp
mov
sub
sbb
push
lock
scas
mov
hlt
es
push
addb
xor
popl
pop
xor
mov
lret
add
jb
xchg
arpl
cmp
inc
pop
lods
inc
fsubrs
cmp
xor
add
cmpsl
and
pop
imul
cmpsb
cld
mov
imul
in
mov
cwtl
scas
jge
negl
or
xchg
loop
adc
test
loope
divl
sub
test
mov
xchg
ret
lahf
lea
leave
data16
outsb
pop
ret
xchg
fs
andb
movsb
inc
ret
xor
aaa
ja
jnp
pop
xchg
test
push
pop
movsl
push
adc
ljmp
mov
in
out
fs
out
xchg
add
cmc
mov
repnz
lock
ja
iret
add
js
hlt
push
out
xchg
mov
mov
adcl
xchg
mov
pop
out
iret
mov
mov
jno
add
hlt
fsubr
lods
sbb
sbb
add
loope
adc
or
test
les
sub
test
push
repz
cmp
and
push
jl
add
arpl
inc
out
fwait
pop
lea
es
scas
mov
call
add
sub
into
xor
push
fnsave
test
out
int3
add
test
leave
inc
push
push
mov
cmp
addr16
dec
add
aas
push
jnp
int3
lods
jmp
clc
repz
adc
sbb
dec
mov
out
mov
sbb
lret
jnp
or
jnp
mov
sbb
rcl
mov
lods
lods
cmp
je
hlt
lods
scas
xor
pop
sbb
iret
fsubr
popa
cmpl
aam
pop
pop
dec
or
shll
and
fdecstp
inc
push
inc
mov
push
insl
lods
sbb
jne
pushf
jg
arpl
mov
test
push
out
pop
daa
in
mov
inc
mov
mov
in
push
hlt
lds
scas
insb
inc
jo
xchg
setbe
jecxz
insl
cmp
cs
cmp
dec
clc
push
scas
inc
out
pop
xlat
xchg
bound
out
cmp
popf
mov
out
cmp
or
pop
shrb
sahf
push
stos
mov
inc
ljmp
mov
testl
and
scas
andl
adc
iret
sbb
cmp
inc
jmp
stos
mov
pop
dec
ss
mov
xchg
ja
les
sbb
mov
fdivp
mov
fs
xchg
and
mov
push
mov
and
scas
mov
hlt
and
inc
sahf
pop
mov
imul
inc
out
rcll
fnstsw
sub
jnp
push
fidivs
jns
cmp
and
gs
and
sub
fistps
sarb
loopne
outsb
repz
mov
cmpsb
jge
test
iret
dec
xor
jecxz
sti
sbb
inc
fistpl
add
fisubrl
lahf
pop
notl
sahf
into
jl
imul
cwtl
sbb
aaa
pop
cmp
in
xor
in
out
mov
xor
xchg
mov
ret
push
lcall
and
xadd
repnz
jnp
lret
popf
mov
push
jecxz
iret
jl
sbb
loop
dec
adc
cltd
or
sub
ficoml
sti
mov
inc
or
cli
xchg
gs
gs
xor
mov
imul
inc
lret
xchg
repnz
gs
adc
xor
lea
mov
insb
rcrw
adc
inc
sbb
fimull
or
sub
mov
pop
mov
daa
cli
pushf
cltd
sti
test
les
mov
gs
fisubrl
stos
mov
lret
repz
lods
push
pop
ljmp
idivb
adc
fs
pop
jecxz
xchg
mov
add
sahf
mov
pop
neg
sub
pop
cmp
xchg
movsb
xchg
ss
sbbb
xor
mov
or
push
xor
out
or
mov
sete
sbb
cwtl
pop
jl
inc
int3
pop
sbb
pop
xor
fsubs
add
mov
sti
xlat
das
adc
xorl
xchg
out
notl
or
std
xchg
ficoms
mov
stos
cmpsb
sbb
loope
in
dec
mov
jae
push
pop
jno
jecxz
and
cmpsb
cmp
xchg
imul
add
ja
mov
mov
test
push
insb
vucomisd
push
in
fists
jae
test
pusha
adc
xlat
js
inc
ret
adc
cmp
stc
nop
xchg
fnstsw
mov
int
adc
xor
arpl
nop
mov
xor
sub
jle
sbb
and
add
imul
adc
ja
aaa
cmpsl
dec
in
push
mov
push
stc
or
aam
jmp
mov
push
mov
imul
dec
adc
loopne
or
scas
rol
leave
mov
fcmovnu
fwait
mov
out
cmp
les
fwait
in
pushf
mov
fimull
dec
mov
push
out
into
mov
repnz
adc
adc
cs
outsl
repnz
daa
stos
jns
test
mov
cmp
sub
aas
dec
fbstp
inc
pop
mov
test
mov
sub
jne
daa
clc
adcl
mov
mov
in
orb
mov
xchg
add
sub
fcomi
mov
aad
ljmp
inc
ficoml
add
testb
sub
shrl
ret
pop
rcrl
mov
popa
sbb
mov
shrb
test
inc
mov
js
int
movsl
mov
loop
inc
out
jg
loope
push
and
pop
xchg
aam
pop
scas
insb
mov
or
mov
push
pop
jle
pop
rol
push
insl
or
adc
movsl
mov
fildll
push
imul
fs
push
sub
fbstp
pop
cmpsl
inc
fldenv
ja
scas
push
cmp
add
or
data16
push
xchg
das
adc
lock
jno
lcall
mov
push
movsb
cli
mov
fldenv
mov
xor
jp
lods
and
cmp
push
adc
pop
mov
fs
popf
test
into
fsubr
sti
adc
add
repz
pop
mov
in
mov
mov
dec
test
scas
lea
jmp
fstpt
xor
mov
cmp
hlt
imul
jmp
xchg
sbb
pop
and
int
ja
xor
mov
push
dec
add
scas
stos
test
pushf
and
dec
mov
xor
in
jnp
xor
fwait
mov
ret
test
xor
imul
push
mov
int
out
pushf
lods
mov
fidivs
xchg
cmpl
pop
sub
aam
incb
xchg
fcom
insb
ffreep
lock
mov
and
adc
mov
std
lret
iret
outsl
cmp
dec
mov
and
adc
cmc
fdivrs
enter
pop
pop
jbe
pop
jb
xor
add
jmp
imul
add
test
inc
push
mov
mov
xchg
and
cmc
or
bound
jnp
out
or
gs
jnp
or
outsl
jmp
lcall
cmpsb
sbb
and
or
adc
int3
roll
insl
popf
and
push
pop
mov
lret
jp
loopne
and
and
clc
fildl
js
adc
lret
pop
fidivrl
jmp
nop
fwait
xchg
outsb
out
pusha
dec
movsb
push
jb
pop
scas
add
and
mov
mov
mov
cli
pop
mov
and
xchg
mov
dec
scas
cwtl
pop
mov
sub
mov
data16
sub
ljmp
imul
mov
sarb
push
pop
in
jae
pop
xor
jbe
sub
loop
popa
dec
pop
sbb
xor
push
push
and
or
stc
lea
push
mov
add
adcl
fmuls
popa
cli
inc
inc
xchg
mov
sbbw
sub
shlb
jo
mov
shl
and
ret
lcall
sbb
cli
xor
stos
add
fnsave
or
addr16
ljmp
adc
mov
aad
cmp
scas
mov
les
sbb
pop
pop
addr16
mov
xchg
rcrl
mov
xchg
cmpsb
leave
mov
lret
xchg
call
sbbb
dec
popf
jecxz
lahf
fdivs
cmp
sub
or
leave
das
mov
xchg
notb
cmp
sub
and
fwait
push
in
mov
and
std
sub
out
xchg
popa
jmp
push
xor
adc
sub
ss
jns
stos
pop
dec
dec
fnstcw
pop
jmp
into
and
jnp
lods
cs
sbb
adc
adc
cs
or
fidivrs
inc
fdivrs
cs
sub
jne
sub
push
mov
inc
xor
pop
fwait
pop
outsl
push
lret
fdivrs
daa
lea
adc
mov
pop
jo
shll
mov
push
mov
inc
pop
dec
lcall
or
pop
out
jne
jge
shlb
sbb
cmpsb
sbb
sub
or
paddb
ja
adc
cld
outsl
leave
xor
jl
pop
or
fsubl
mov
fistl
xor
sbb
mov
bound
push
cmp
out
inc
test
adc
sub
inc
dec
arpl
icebp
push
pop
inc
pop
push
cmp
out
stos
jle
dec
subb
inc
les
rorl
xlat
or
lea
jns
scas
pop
divl
inc
outsl
jnp
or
int
or
rcll
fimuls
int
sub
test
movsl
push
xchg
sub
cwtl
arpl
cmc
sub
xchg
add
xor
xchg
rorl
fdivs
sbb
insl
push
sub
or
xor
test
notb
mov
jmp
cmp
sbb
push
repnz
xchg
sub
mov
or
mov
and
mov
repnz
sbb
out
cld
cmp
outsl
mov
inc
int3
fsubrs
shrl
fistps
jle
call
push
jecxz
sbb
dec
xchg
lcall
xchg
mov
popa
lret
push
sti
xchg
sub
mov
lret
shr
adc
mov
seta
push
jnp
fdivrl
cld
out
imul
xorl
pop
inc
mov
xchg
adc
inc
rorl
mov
mov
push
loopne
bound
sbb
scas
mov
pop
daa
push
stos
fmuls
add
in
pop
mov
sbbb
loopne
lock
loopne
jle
rcrb
rcrb
xor
jns
daa
add
rcrl
push
dec
pusha
mov
and
cltd
xchg
mov
and
dec
sbbb
sbbb
loope
jmp
loopne
fwait
push
rcrl
rcrb
in
jp
jmp
add
push
popl
fldenv
popa
mov
cmp
inc
lcall
and
cltd
inc
and
sub
ret
sbbb
fidivs
add
loopne
lret
nop
dec
rcrb
mov
jmp
pusha
mov
icebp
sub
fld
fimuls
xchg
shll
xchg
shrl
call
or
pop
inc
and
cmp
sbbl
loop
cmp
lock
xchg
rcrl
ss
and
dec
push
test
fiaddl
ficompl
adc
fisubrs
pusha
push
push
adc
shl
cmp
pop
fwait
jo
mov
testl
shrl
gs
push
xchg
leave
scas
test
sbb
aaa
cmc
mov
push
fldenv
hlt
xor
call
fsubs
aam
dec
add
mov
cmp
ljmp
mov
sub
sbb
stos
lret
popa
fwait
jmp
fwait
cs
add
pop
push
xor
jmp
and
adc
cmp
and
mov
mov
jp
repz
and
inc
gs
test
xor
and
or
int
test
xchg
push
lods
xchg
xor
and
mov
jle
adc
sbb
data16
in
loop
in
lret
jl
xor
std
iret
popa
mov
mull
sti
push
fadd
pushf
add
sub
pop
es
into
cmp
mov
jg
push
mov
fwait
and
addb
mov
xchg
enter
fcmovne
loope
das
and
aas
xchg
lahf
push
lahf
loopne
movsb
xchg
test
ret
and
mov
jp
js
lahf
repnz
xchg
arpl
adcl
pop
negl
lcall
rol
outsl
add
add
insb
cmp
mov
mov
jmp
pop
pop
pop
pop
divl
dec
pop
movsl
and
cwtl
mov
popa
lahf
dec
int
stos
call
ret
or
sbb
xor
inc
mov
clc
movsb
xor
cmpsl
lds
ds
js
sbb
decb
cld
and
pop
mov
pusha
fcomip
es
dec
ds
mov
dec
or
mov
mov
jg
sahf
jae
xchg
dec
mov
push
shrb
add
sub
aaa
mov
mov
adc
test
pop
sbb
jns
aaa
mov
xchg
daa
stc
adc
mov
sub
dec
hlt
lea
sub
push
fwait
xchg
ja
in
das
aas
loope
xor
fdivs
pop
test
cmp
fistpll
fcompl
sub
sbb
fnstenv
ds
ljmp
pop
out
pop
inc
mov
lahf
mov
or
sub
push
cmp
mov
mov
mov
div
lret
push
push
gs
xor
and
lds
lret
sbb
mov
mov
ret
mov
pop
stc
push
pop
mov
ja
sbb
lcall
cltd
sahf
fdivl
cmp
pop
ret
cli
push
pop
loope
movb
xchg
js
arpl
cmpsl
lods
cli
or
and
sub
cmpsl
je
nopl
or
jnp
je
fldenv
inc
in
or
push
ljmp
mov
dec
sbb
rcl
mov
mov
mov
mov
xchg
xor
sbb
aaa
cltd
and
mov
outsl
cmp
aam
ds
add
cmpsb
lock
or
jno
ds
out
fdiv
loop
or
jb,pt
movsb
push
sbb
inc
test
xlat
aad
lea
out
scas
sub
cmc
or
mov
popf
push
push
mov
sub
push
push
add
pop
xor
mov
inc
notl
test
jns
mov
push
sub
jecxz
push
mov
xor
fs
pop
jnp
sub
adc
push
iret
imul
test
inc
mov
enter
and
loop
out
push
mov
push
dec
insl
push
out
sahf
xlat
js
jecxz
and
add
nop
imulb
das
cmp
sub
mov
push
or
in
and
cs
movsl
jne
xchg
add
repnz
sbbl
cmp
lahf
call
push
push
pop
fdivrl
and
inc
push
jge
inc
in
sub
mov
jae
inc
adc
rclb
add
xchg
pop
ljmp
cmc
push
xor
jp
cmp
or
and
dec
movsb
cld
pop
and
aas
dec
imul
clc
sub
cmpsl
xlat
addl
incb
data16
jne
xor
in
mov
cmp
int3
mov
sub
xor
jbe
shrb
push
pop
loop
shrl
cmpl
jle
aad
or
in
sti
adc
pop
arpl
sub
push
inc
movsb
mov
repz
jp
adc
incl
xor
push
insb
repz
push
test
xor
shlb
das
ds
cmp
xorb
lahf
call
inc
stc
in
ret
ret
movsl
icebp
popf
cmp
insl
jmp
add
mov
loopne
ret
in
xchg
scas
xor
fnsave
add
mull
dec
aaa
mov
jb
popa
jl
shlb
adc
out
movsb
xor
mulb
inc
inc
fsubs
adc
push
pop
outsb
dec
das
test
aad
pop
pop
pop
in
stc
aad
sti
cmp
mov
icebp
or
and
in
dec
mov
sub
cmp
nop
push
mov
inc
mov
stos
sti
push
pop
push
xorb
fwait
xchg
aam
mov
lods
jl
push
and
lods
orl
movsl
jno
sbb
out
stos
addr16
icebp
fildll
pop
aad
mov
xor
sbb
xor
rcrl
mov
jno
add
dec
cmp
push
cwtl
lods
jp
fisubl
nop
fstps
sti
test
rorl
pop
mov
pop
mov
xlat
iret
test
bound
movsb
cmp
add
pop
stos
mov
gs
loope
int3
outsb
jl
adc
fcmovne
mov
push
jmp
jno
jmp
lds
rolb
inc
jmp
xchg
mov
pop
pop
pop
mov
call
mov
in
mov
cmp
pop
lcall
sub
hlt
sbbl
adc
jecxz
leave
push
call
sahf
push
xor
adc
es
jnp
cmp
imul
xor
xchg
sub
inc
push
pop
psubsb
xor
push
xchg
jecxz
loopne
jns
repnz
lods
xlat
leave
test
fidivs
pop
push
xor
aas
iret
push
mov
cmp
dec
lods
testb
pop
insl
jne
push
dec
sub
insl
fsubp
roll
jle
push
add
data16
xchg
sub
hlt
jp
fdivl
scas
mov
out
in
jne
jl
dec
scas
nop
dec
jmp
mov
fst
mov
psllq
mov
xchg
test
dec
dec
int3
xor
repz
shrl
imul
and
mov
push
and
cmp
addb
jb
sub
test
cld
scas
jae
leave
jne
dec
pop
xchg
cmp
sti
pop
dec
addr16
addr16
loopne
xlat
dec
popa
inc
xor
add
mov
jp
in
xchg
sbb
lret
jnp
mov
repnz
fcoms
neg
call
and
inc
pop
ja
jp
xchg
pop
push
fmull
mov
add
scas
cwtl
cmp
cltd
push
int3
into
mov
xchg
fcmovu
scas
and
je
iret
imul
push
lds
or
lahf
xchg
xchg
rcl
adc
xlat
cmc
cmpsl
sarl
add
out
xchg
mov
inc
test
inc
shll
fldt
jnp
das
test
ja
cmc
test
jmp
xor
iret
imul
rcll
push
rcll
or
jg
aad
mov
out
fnstcw
pop
or
jecxz
dec
xlat
mov
aas
inc
adc
mov
mov
psubw
mov
dec
aad
push
nop
sbb
xor
sbb
ljmp
inc
ret
xchg
mov
hlt
pop
mov
sub
xlat
pop
pusha
adc
dec
sahf
addb
adc
xchg
je
push
mov
cmp
loopne
in
cmp
notb
subl
jo
mov
push
cmpsl
push
inc
mov
or
or
mov
xchg
sub
idivb
movsl
jno
cmpb
and
push
jp
jge
jae
sti
notl
push
push
js
inc
xor
and
outsl
pushf
jno
movsb
mov
jne
ds
and
mov
jg
fdivs
fstp
das
fcmovnb
shrl
jecxz
lcall
mov
xchg
push
testb
dec
mov
movsl
dec
xchg
rcl
jnp
aad
out
sbb
mov
test
lods
sbb
loopne
shrb
test
cmp
jns
dec
adc
fnstcw
pop
mov
enter
mov
lcall
dec
scas
sub
repz
xchg
pusha
xchg
ret
pop
add
push
pop
sahf
inc
ret
xor
inc
lcall
and
and
push
cmp
movsl
inc
dec
pop
pop
cmc
mov
dec
mov
push
cmp
adc
cmpsb
sub
mov
inc
cmp
jmp
xor
sub
mov
mov
in
xchg
mov
sub
shll
fwait
iret
dec
loop
sub
adc
call
xor
je
outsl
jmp
daa
in
inc
rcr
mov
or
test
push
icebp
imul
fnstsw
mov
cmp
push
bound
jecxz
jno
test
loopne
adc
xchg
icebp
fndisi(8087
pop
mov
adc
cmp
and
out
fwait
repnz
or
shl
sub
outsb
mov
inc
arpl
loopne
add
or
jge
inc
xchg
jb
dec
mov
xchg
dec
lock
rclb
pushf
cmp
sbb
mov
jb
mov
je
fidivl
xchg
inc
fiaddl
stc
pop
outsl
bound
xchg
nop
loop
repz
leave
loopne
add
pop
je
aaa
mov
xor
cmpb
sbb
std
mov
sbb
jmp
jp
xor
je
and
mov
out
xor
xlat
nop
sbb
lea
fcmovnb
pop
insb
sbb
xchg
jne
into
imul
xchg
addr16
xor
stos
xchg
inc
push
push
cld
jne
dec
pop
or
movsl
mov
push
es
jbe
jp
adc
xchg
push
addl
add
xor
mov
sub
adc
das
fldcw
cwtl
sbbl
test
pop
icebp
jb,pn
jp
sub
sbb
in
pop
imul
movsb
xchg
lahf
clc
sarl
pusha
or
push
add
add
loop
fwait
ret
push
outsb
lret
pop
push
adc
out
sbb
nop
mov
xchg
ss
mov
lret
out
xchg
jg
mov
in
xchg
and
in
dec
fisubrs
sbb
ret
pop
inc
push
xchg
dec
sub
stc
scas
lods
push
or
jbe
je,pn
and
into
enter
shlb
shll
data16
inc
fsub
decb
and
mov
sub
arpl
out
sbb
pop
pop
in
dec
add
push
lret
adc
push
ds
mov
int
out
push
out
fists
inc
out
mov
sub
loope
out
and
jbe
and
int
jo
adc
loopne
mov
imul
test
int3
outsl
ret
aaa
sub
sbb
mov
mov
adc
arpl
outsl
push
adc
xchg
leave
test
jmp
shll
dec
and
daa
arpl
dec
sbb
loop
mov
mov
fdivrs
pusha
xor
jne
jle
pop
or
popa
popf
mov
ret
hlt
push
jae
adc
jnp
dec
jb
ss
ljmp
loope
push
outsl
mov
jae
jo
pop
adc
std
jl
mov
mov
andb
lods
cmp
inc
testb
outsl
sub
xchg
dec
aaa
jg
ret
mov
movsl
ret
lods
testl
jge
pop
ret
loop
add
fimull
or
pop
cmpsb
cmp
and
dec
inc
xchg
test
sbb
movl
loope
xor
cmpsb
rclb
test
inc
aaa
jno
aam
insl
pop
push
and
mov
fnsave
and
mov
cmpsl
dec
mov
cmp
pop
jo
pushf
das
mov
cmp
cmpps
lea
cmp
shlb
outsl
cmpsl
mov
adc
xor
inc
insb
mov
loopne
push
in
rorl
xlat
mov
mov
notl
jno
inc
add
xchg
jg
adc
aad
in
jp
dec
add
lock
pop
xchg
dec
dec
lahf
xor
xchg
aas
in
lods
ja
test
shl
or
xchg
stos
push
xchg
xor
push
cmp
sub
or
mov
push
sbb
push
cmc
and
and
in
pop
mov
dec
sbb
lea
lret
push
xlat
push
fisttps
mov
sub
lea
lods
jb
test
xchg
xor
or
cli
and
jp
mov
ret
cmpsl
ds
dec
call
fistpll
data16
adc
and
adc
scas
js
aam
jb
dec
movsb
decl
es
adc
mov
jae
cmpsl
and
cmpsb
aas
cwtl
add
sysret
sbb
mov
rclb
fmull
cmp
inc
addr16
stos
dec
cmp
xchg
mov
rorb
xchg
repz
mov
into
mov
inc
enter
xor
add
cwtl
stos
xorb
fdiv
into
xchg
popf
iret
fistl
or
push
or
add
cmp
xchg
lea
leave
cmp
ret
jbe
mov
test
mov
cwtl
divl
in
and
sbb
aas
push
inc
pop
lds
aam
clc
add
xchg
outsb
adc
fmuls
leave
pusha
out
inc
push
sbb
insb
add
jnp
jnp
cmp
pop
outsb
js
es
xchg
and
sub
sbb
mov
mov
inc
xchg
aas
bound
cmp
gs
push
pop
push
inc
push
test
push
aas
into
inc
sbb
sub
jge
push
testb
loop
sbb
pop
mov
cmp
movsl
push
scas
ds
fcompl
sub
mov
mov
xor
jb
pop
inc
loopne
mov
adc
loop
stos
and
cli
xchg
mov
xchg
clc
adc
xchg
push
cmp
repz
sbb
sub
mov
jecxz
mov
mov
mov
jo
inc
mov
cwtl
dec
andb
jns
test
pop
cwtl
mov
div
call
bound
jle
aad
int
sub
rcrb
sbb
sbb
xchg
mov
aam
out
sti
hlt
sub
lcall
das
jae
push
adc
outsl
aas
push
sub
inc
loop
rorb
test
into
fstl
fdivr
mov
in
js
pop
xchg
js
psrld
clc
xor
data16
xchg
andb
push
mov
inc
bound
push
js
orb
mov
dec
mov
enter
ja
sbb
inc
outsb
jl
test
xchg
out
js
jge
shlb
mov
call
jp
push
mov
xchg
sbb
nop
cli
sbb
pop
shrb
dec
movsb
aad
std
xchg
sbb
or
in
stos
sbb
mov
pusha
enter
and
inc
mov
stos
xor
push
lcall
push
pop
xchg
lds
hlt
movsb
lea
pop
imul
add
test
inc
pop
ds
mov
push
cmc
push
inc
mov
pop
and
shlb
andb
cli
inc
inc
outsl
rolb
movl
add
popa
add
dec
mov
push
fbld
fwait
insl
shlb
inc
lcall
and
insb
adc
mov
jb
test
dec
int3
xor
arpl
test
aaa
outsb
les
xlat
inc
in
jl
jmp
mov
sahf
mov
jg
or
rcrl
xlat
add
ljmp
stos
imul
loope
lds
pop
xchg
jbe
out
cld
inc
inc
and
xchg
pop
out
inc
lcall
adc
inc
cmp
push
dec
loope
push
cmp
scas
shl
ret
cmpsl
mov
sub
pop
repz
test
lret
ret
cwtl
popa
add
add
test
or
dec
sbb
es
test
std
jo
and
mov
cmp
mov
mov
cmp
cmp
jg
pop
shll
lods
stos
mov
and
pop
sbb
inc
fwait
dec
sbb
les
lds
adc
outsl
fcmovnb
sbb
mov
mov
scas
mov
sub
fsub
dec
mov
icebp
cmp
mov
dec
dec
mov
leave
ret
lods
xchg
pusha
push
in
into
jmp
sub
jg
or
jle
lret
lcall
push
xchg
cmpb
fildl
cmp
shlb
xlat
es
data16
mov
leave
inc
add
mov
fistl
push
gs
out
incb
dec
cmp
pop
cmc
fdivs
cs
push
imul
xchg
xor
xor
subb
adc
rcll
jp
cmp
js
movsl
pop
xchg
in
or
orb
or
sbb
mov
jno
sub
loopne
mov
inc
les
sahf
push
test
sub
ja
sbb
xchg
fstl
xor
mov
int3
push
mov
sub
lahf
call
sub
sahf
icebp
mov
add
lods
pusha
decl
lcall
sub
js
cli
test
popf
or
lret
addr16
out
int3
test
mov
cmovo
imul
cmp
pushf
in
xchg
in
fildl
enter
call
in
xchg
js
and
add
dec
dec
mov
jle
dec
lock
popa
adc
lods
cmp
push
nop
jmp
aaa
push
mov
mov
bound
nop
les
add
pop
out
jno
dec
rclb
dec
into
jp
mov
les
lock
xchg
or
mov
enter
jmp
sbb
imul
testb
fwait
das
insb
sbb
cmpsb
ret
jp
cmp
xchg
mov
cli
adc
mov
inc
add
sarb
mov
mov
insb
and
or
and
repz
je
adc
icebp
call
movsb
push
subb
jl
and
out
xor
xor
push
add
pop
std
adc
cmc
push
mov
movsl
or
stc
cmp
inc
push
pop
fldenv
inc
pop
shlb
push
scas
movsb
out
sti
jmp
cmpsb
push
icebp
js
in
add
push
je
or
pop
mov
in
fimull
add
test
lods
je
std
push
push
jl
inc
scas
enter
iret
shll
test
dec
lret
mov
fstps
mov
push
in
add
xchg
ss
lea
addl
sub
pop
or
test
sbb
shlb
daa
mov
jae,pn
test
mov
lsl
sub
cmp
and
dec
das
dec
pop
pop
inc
dec
and
outsb
xchg
scas
in
adc
push
dec
jg
fisttps
loop
lahf
movsl
or
jecxz
jns
outsb
add
sbb
pop
cmp
add
cmpsl
mov
adc
xor
xchg
add
adc
mov
adc
mov
out
int3
out
xor
jmp
cld
cmpl
mov
and
sbb
xchg
push
and
xchg
mov
nop
push
stc
popf
fcoml
xchg
push
andl
ljmp
je
scas
push
lods
loopne
mull
cs
out
jne
ficomps
pop
ja
mov
push
inc
mov
adc
cli
popa
push
mov
push
popf
xchg
lods
inc
leave
mov
dec
sbb
nop
adc
mov
xchg
std
push
std
aad
xchg
lods
mov
sbb
addr16
dec
adc
jl
and
rorl
pop
pop
cmc
push
les
push
test
lahf
sub
in
sbb
cmp
outsb
pushf
sub
ja
test
ljmp
push
jl
outsl
or
push
xchg
push
push
or
mov
bound
jge
xorl
ljmp
fdivrs
adcl
xchg
fwait
push
pop
pop
sbb
mov
or
mov
dec
js
insl
push
or
mov
js
xchg
pop
subb
cs
dec
add
jg
cmp
cmp
or
push
imul
outsb
adc
sub
xlat
out
imul
mov
mov
xor
mov
ljmp
mov
and
lods
jmp
sahf
dec
andl
xlat
arpl
sub
lcall
cld
js
js
std
mov
outsb
mov
nop
lods
addr16
aam
xor
sub
mov
sub
mov
jb
fnstsw
test
insl
push
xor
push
out
cmpsl
insb
cltd
pop
cwtl
nop
or
dec
cmp
dec
loop
mov
loop
adc
mov
lcall
ret
pextrw
pop
inc
pop
aad
add
cwtl
ret
add
out
jge
and
or
dec
jmp
mov
cmp
sbbl
outsl
aam
cs
mov
lret
loope
das
xchg
in
clc
xchg
pushl
or
push
fistps
xchg
jbe,pn
fwait
ss
push
jo
test
inc
pop
jb
or
lahf
stos
mov
add
cmp
xchg
icebp
add
dec
mov
imul
xor
dec
ljmp
push
aam
ljmp
je
mov
sbb
and
idivl
cltd
jnp
call
pop
or
fs
imul
cwtl
decb
jl
mov
mov
xlat
popf
push
push
add
jl
xchg
jne
stos
xchg
xchg
xchg
stos
mov
lods
inc
push
es
shlb
adc
mov
xchg
jl
inc
icebp
cmp
in
mov
adc
lcall
nop
cmp
pop
mov
push
inc
call
cmpsl
or
xchg
sub
dec
ret
mov
insl
and
in
cmp
and
push
or
inc
cmpsl
shr
daa
push
and
or
mov
lret
pop
lods
jge
test
or
mov
pop
xchg
sbb
pushf
xor
or
stos
int3
xor
icebp
adc
push
mov
push
sub
ret
dec
mov
sahf
es
test
push
jge
das
pop
cmpsl
icebp
dec
call
mov
dec
fbld
cmp
cmp
mov
inc
dec
test
clc
add
scas
mov
dec
pushf
mov
into
imul
clc
insl
push
popf
push
mov
shr
cmc
outsb
insl
add
xchg
vpavgb
xlat
mov
push
pop
xor
add
xor
jae
lock
and
cwtl
jge
loope
or
pop
out
sub
call
push
inc
sbb
int
outsl
sbb
outsb
es
ret
jns
neg
mov
das
shl
hlt
add
lds
clc
rcl
inc
mov
movsl
fildll
lret
sub
daa
add
cmp
ss
and
dec
or
jbe
dec
push
mov
fstpt
clc
fwait
rol
and
push
pop
dec
cmpl
sub
dec
icebp
sar
sub
and
xchg
ja
clc
repnz
add
jg
mov
jge
push
adc
sbb
out
lods
dec
lahf
cld
mov
mov
and
push
sbb
aaa
mov
loope
test
int
jp
dec
push
mov
push
outsb
jne
mov
push
andl
hlt
ret
pusha
mov
and
push
fnsave
lret
xchg
les
mov
js
daa
sarb
cmp
sbb
mov
adc
aad
adc
jecxz
fmuls
xlat
pop
jl
jp
insb
pop
leave
and
enter
loop
xchg
cmp
xor
cmp
mov
pop
xlat
pop
stos
inc
xchg
adc
xorb
xlat
enter
mov
cltd
je
push
nop
xchg
cmp
fsubrs
mov
test
dec
pushf
lret
out
or
push
fidivl
push
in
push
adc
mov
in
fwait
cmpsb
fmul
into
push
xchg
loop
jp
movsb
adcb
sbb
imul
dec
orb
push
mov
push
leave
stos
xchg
pop
mov
shll
jle
lock
mov
inc
pop
clc
aad
push
sti
xor
jae
je
cmpsb
mov
rclb
call
xchg
scas
test
out
dec
mov
cmp
int3
add
jae
xor
aas
xchg
jg
ljmp
jno
jmp
mov
incb
fnstsw
push
cltd
cltd
mov
pop
insl
sbb
stos
add
adc
lds
adc
add
jnp
jno
jne
dec
mov
flds
xor
loope
cmpsl
out
xor
daa
icebp
mov
enter
popf
insl
shrb
mov
add
cmpsb
notl
clc
mov
jo
nop
mov
sbb
pushf
andl
sub
stc
add
outsl
call
incb
jns
sti
outsb
push
xor
push
fnsave
dec
cwtl
imul
mov
enter
mov
clc
dec
out
dec
xor
lods
jae
push
outsl
fsts
jb
cli
es
and
lea
fiaddl
push
bound
sbb
xchg
dec
outsb
jne
push
cmp
sarb
mov
int
gs
push
call
sarb
scas
repz
and
ret
lret
and
mov
add
xor
out
fst
sbb
push
movsl
push
jo
int
fadds
and
into
jne
cmp
das
jmp
int
mov
cmpsl
sub
int3
push
ror
mov
inc
mov
cmpsl
sbb
int3
xchg
mov
xchg
rcrl
sbb
jl
adc
mov
or
lahf
adc
and
cli
xor
inc
ss
shlb
aam
mov
fwait
xor
lods
mov
leave
jmp
sbb
xchg
imul
nop
adc
or
push
sbb
jno
adc
xor
jb
leave
sti
cmp
adc
aad
mov
cmp
or
jge
xchg
imul
in
aam
jo
add
in
rcll
int3
mov
mov
aaa
outsl
movsl
out
popa
adc
mov
fs
ds
bound
fnstcw
iret
cmc
push
sbb
mov
push
or
nop
outsb
push
sti
fcmovb
pop
jne
inc
lahf
mov
cld
jnp
pop
jg
pop
fwait
push
inc
test
add
addl
aaa
adc
xchg
rcrb
ds
loope
pop
loopew
clc
ds
jb
rcrb
mov
mov
mov
shlb
or
jnp
mov
ss
es
inc
in
push
or
pop
and
jecxz
xchg
and
sbb
sbb
rorb
mov
push
jns
popf
movups
dec
sbb
mov
jo
sbb
xchg
xchg
cli
xchg
adc
fidivs
negb
test
fcmovb
popf
push
jae
xor
sbb
int
data16
xchg
test
sarb
out
cmp
push
addr16
sub
bound
gs
pop
xor
xchg
popf
cmp
fdivr
push
pop
dec
mov
loope
aam
cmp
inc
and
and
xchg
sahf
xor
icebp
and
push
adc
fists
lea
and
mov
loopne
mov
pusha
and
es
push
mov
xorl
cltd
addr16
mov
fadd
cmpsl
cli
push
cmp
dec
mov
and
pop
sub
cli
scas
adcb
das
dec
xchg
mov
icebp
inc
aas
jg
pop
scas
pop
sub
popa
cli
jg
add
cld
adc
xor
add
das
jae
pusha
das
lea
add
pop
inc
aaa
dec
dec
out
mov
stc
xorb
loope
add
xor
negl
cld
sahf
pushf
cli
lret
shll
or
add
cmc
imul
cwtl
repnz
shrl
es
test
in
out
add
mov
dec
andb
jle
jo
dec
cmp
xor
pop
mov
lret
inc
test
mov
pushf
jae
jne
ljmp
jo
and
push
pop
mov
xchg
or
inc
ja
je
add
mov
test
pop
push
jbe
xchg
stos
jmp
xor
sbb
not
mov
mov
dec
nop
faddl
push
and
jle
dec
xchg
jne
jge
lock
icebp
mov
sub
lock
xor
fwait
and
lcall
sahf
scas
mov
shl
sbbb
jl
fldcw
or
push
mov
fucom
test
jnp
adc
push
fidivs
lret
insl
movsl
stos
jne
xchg
xchg
bnd
lahf
mov
xor
aas
pop
cltd
icebp
aas
shrl
push
mov
jns
insb
xchg
pop
xchg
jbe
pop
xor
ljmp
push
sbb
iret
dec
add
ljmp
xor
xchg
hlt
pop
inc
mov
addr16
push
icebp
dec
in
daa
loop
push
ret
or
cmp
and
shlb
xorb
jb
xor
inc
pushf
bound
clc
xchg
cmc
push
jns
inc
or
adc
xor
push
out
add
outsb
repz
pop
imul
add
xchg
or
cmp
dec
fistl
inc
fildl
pop
mov
dec
loopne
xchg
stc
jp
inc
imul
push
addl
jo
les
sbb
mov
ss
or
dec
dec
stos
mov
dec
and
aaa
push
pop
popa
mov
mov
loope
jmp
repnz
call
adc
sahf
shll
pushf
dec
ret
repz
pop
fidivs
mov
inc
dec
push
xchg
mov
mov
das
xor
and
movsl
pop
mov
testb
cmp
dec
inc
pop
jbe
cli
nop
push
test
and
sub
lahf
pop
add
sub
cvtpi2ps
xchg
rcr
add
jo
mov
pop
call
sbb
jbe
imul
inc
lahf
add
shr
or
loope
add
test
mov
fwait
leave
int
mov
test
aas
arpl
adc
rclb
inc
popf
xchg
dec
xor
xlat
mov
sbb
mov
cmpsl
and
mov
adc
rcrb
mov
and
push
cwtl
std
loope
cs
int3
and
pop
movb
pop
push
mov
cmp
shrl
mov
shlb
pushf
scas
inc
nop
dec
sub
mov
inc
jle
scas
jno
sbb
pop
pop
aad
push
aam
mov
into
jg
repz
pop
sbb
mov
data16
imul
popa
add
in
int
into
cli
mov
bound
mov
xor
jbe
rcrb
insb
inc
inc
sbb
movsl
sbb
add
mov
mov
xchg
pusha
testl
pop
xor
fs
and
lea
mov
mov
mov
jae
lock
sbb
jo
pop
adc
inc
xchg
and
cmp
mov
das
enter
sub
mov
mov
mov
popa
add
imul
je
pop
adc
lret
inc
or
and
mov
mov
dec
fistps
cli
mov
inc
push
xchg
dec
sbb
out
inc
cmpsb
fiaddl
inc
int
insl
xlat
in
idivl
fnstsw
cmp
push
in
jo
xchg
outsb
shl
jg
nop
test
xchg
lcall
mov
pop
movsb
pop
xchg
xchg
push
mov
loop
mov
in
inc
clc
insl
sbb
push
loope
or
aas
jle
daa
inc
sbbl
push
cmp
jecxz
fmull
xor
mov
push
jge
les
stos
outsb
icebp
cmp
inc
lods
das
fimuls
cmp
and
out
jl
mov
cmp
fstpt
fs
sbb
xchg
pop
cwtl
cs
push
clc
bound
xchg
sbb
mov
mov
or
sub
sahf
lods
popa
dec
sub
mov
add
shrl
stos
sbb
enter
test
lods
out
mov
scas
aam
jo
add
xor
test
inc
cmp
adc
push
inc
lcall
inc
dec
sub
pop
ja
dec
cmpsb
aam
mov
fnstcw
aaa
daa
xchg
push
rorb
scas
push
jae
repnz
pop
mov
mov
push
push
stos
int3
mov
shll
in
insl
ret
mov
and
jo
ja
pop
mov
scas
sbb
daa
xchg
push
or
jl
test
lods
adc
ja
inc
mov
sub
pop
adc
sti
push
mov
inc
sbb
je
xchg
mov
lret
shlb
xchg
sub
popa
repnz
insb
das
sbb
add
dec
dec
add
push
shll
aaa
pop
aaa
call
xor
mov
adc
bound
fs
fsub
mov
sti
and
push
push
adc
or
jne
xor
mov
sbb
xchg
mov
popf
cmp
stc
mov
sbb
mov
jae
ljmp
sbb
movsb
sbb
inc
mov
dec
mov
jns
mov
xchg
pop
test
lods
dec
mov
jmp
push
sahf
push
inc
aad
or
push
mov
movsl
sub
pop
pop
repnz
stos
hlt
dec
das
mov
shl
or
fbstp
lock
out
xchg
inc
imul
adc
jnp
pop
mov
push
sbb
lods
xlat
ret
lods
sbb
cltd
pusha
je
loope
push
daa
stc
or
sub
xorl
mov
test
mov
ds
mov
mov
mov
adc
or
fwait
cmp
enter
sbb
cmp
push
cmc
cld
outsb
out
bound
inc
jae
test
rcrl
xor
xchg
xorb
or
jno
jmp
and
cltd
addl
shl
mov
in
xchg
je
mov
hlt
jnp
adc
push
mov
push
ficompl
in
add
rcr
jae
push
xchg
leave
and
icebp
lret
push
xchg
push
popa
jnp
outsl
jno
aam
push
push
das
pop
and
sub
push
mov
dec
mov
jg
xchg
sarl
xor
mov
into
fidivrl
ljmp
cmovno
add
ret
fisttps
sub
movsl
in
jmp
lret
cld
test
lods
aad
sbb
and
sub
enter
xchg
xchg
mov
inc
dec
jns
xchg
outsb
xchg
lret
xchg
push
jle
push
or
test
loop
shll
ss
faddp
push
cmp
scas
mov
ficoml
dec
adc
js
and
xchg
mov
and
lock
push
out
testl
orl
or
xchg
jl
push
in
push
inc
pop
xor
mov
inc
rcr
mov
xchg
xchg
jle
jmp
outsb
push
dec
stc
sar
ja
pop
cs
sub
pusha
cmp
sub
lahf
xor
dec
pop
icebp
outsl
xlat
ds
scas
aad
rorb
pop
hlt
inc
push
shrb
dec
add
xchg
dec
push
aas
push
dec
pop
lock
insl
stos
inc
pop
out
imul
mov
fisubrs
push
push
lahf
sbb
mov
lret
mov
sahf
and
fprem
dec
jnp
pop
leave
mov
cmpl
mov
fidivrs
aaa
cli
and
sub
sbb
sbb
sbb
movsb
aaa
ljmp
fidivl
push
dec
test
mov
cmp
fstpl
dec
lds
gs
sbbb
adc
popa
inc
test
gs
dec
xchg
stos
mov
outsl
nop
mov
mov
dec
fst
push
adc
sub
push
mov
adc
addr16
push
js
ss
mov
int
xor
jae
decb
mov
sahf
xor
cmp
cmpsl
mov
mov
int3
out
es
divb
fdivrl
cs
mov
dec
js
adcb
or
add
cmp
mov
insl
sbb
sbb
imul
and
les
cwtl
xor
lret
out
add
int3
fimuls
mov
cmp
out
xor
test
sbb
fdivrp
jmp
jle
push
inc
mov
sub
inc
rcrb
add
insl
inc
lods
test
mov
cmp
dec
fsubrs
fld
cmp
lret
pusha
pop
popa
jno
lds
or
push
test
pop
movsb
xchg
in
lods
inc
sub
out
cmp
lea
mov
lahf
into
out
inc
cmp
mov
or
or
movsl
jl
xchg
ljmp
sahf
sub
dec
push
cld
xchg
inc
jecxz
mov
and
or
adc
repz
or
stos
call
or
sbb
jns
sbb
iret
and
push
dec
inc
pop
jg
lcall
jae
mov
pop
aaa
repnz
adc
pop
hlt
cmp
rcrb
sbb
inc
dec
cmp
inc
sbb
imul
pop
insl
mov
addb
jno
jb
pop
sub
cmpl
adc
cli
cmpsl
xor
in
imul
lods
mov
test
in
aam
inc
repz
pop
data16
jmp
test
push
sub
js
mov
or
cmp
mov
insl
mov
add
fdivs
int3
das
sbb
lret
mov
call
mov
arpl
sbbb
dec
std
scas
test
addb
pop
cs
cwtl
stos
sub
sbb
test
mov
fimull
xor
or
xchg
sbb
adc
xchg
dec
in
and
loope
lret
shl
in
insb
mov
iret
fiadds
bound
lret
mov
scas
cmp
insb
jmp
push
jae
shlb
lea
scas
adc
shr
fwait
xor
cmc
enter
ds
adc
std
ss
test
cli
and
mov
dec
in
pop
mov
cmpl
stos
cmpsl
mov
and
test
add
shll
inc
add
imul
loop
push
xchg
add
push
mov
shrl
icebp
lgs
int
mov
lock
sub
mov
aam
cli
nop
pop
imul
ficompl
loope
pop
xor
lret
and
mov
add
repz
and
xlat
jp
add
negl
aas
fwait
stc
jp
mov
push
and
insb
jle
sbbb
scas
push
enter
imull
lds
into
xor
ja
inc
pusha
or
pop
orl
or
dec
inc
aas
xchg
mov
lock
xlat
push
sbb
ret
or
lcall
jno
popa
stos
shrb
popf
lret
sub
gs
nop
mov
push
fs
aas
iret
gs
xchg
jp
dec
xor
imul
pop
push
aas
mov
cmc
scas
into
shrb
adc
push
sbb
test
sbb
inc
and
sarl
movb
dec
bound
xor
outsl
push
and
movsl
scas
fmul
andb
push
iret
gs
cmpsb
cmc
push
dec
fs
inc
mov
arpl
bound
jecxz
xchg
lret
xchg
inc
push
dec
jae
out
jmp
lods
xchg
mov
faddl
enter
jle
push
push
mov
add
push
sbb
lret
dec
dec
ss
push
xor
and
add
ds
lcall
movhlps
orl
lret
and
add
inc
add
les
es
fadds
mov
test
sbb
aam
pop
sahf
pop
mov
push
test
inc
fisubrs
mov
imul
inc
or
fidivs
cld
cmpw
jae
push
cmp
cmpsb
inc
sbbl
mov
sbb
mov
mov
pop
cwtl
push
fsubl
pop
sahf
dec
or
aas
jp
jo
xor
push
push
jbe
or
enter
add
hlt
push
mov
xchg
mov
int3
and
pop
lcall
and
loope
adc
xor
add
aaa
in
xchg
push
shrl
push
or
int3
cmp
in
cmpl
add
jle
sahf
xor
in
mov
push
mov
in
xchg
out
fsubl
cwtl
ss
notl
dec
in
mov
out
cs
push
xlat
pop
ficomps
iret
imul
lret
cmpsl
inc
jb
and
sahf
mov
jne
lods
mov
mov
ret
ja
sbb
mov
or
pop
lahf
bndstx
fdiv
adc
test
pop
xlat
mov
xchg
mov
call
push
fucomi
inc
movsb
decl
lea
into
sahf
lods
jecxz
add
hlt
rol
pop
cmc
imul
jmp
sub
push
add
fmull
mov
and
ror
mov
jg
pushf
shr
clc
adcl
movsb
outsl
stos
lds
rol
loope
outsl
jecxz
fisubrs
testl
xor
addr16
push
and
mov
xchg
xor
data16
push
and
pop
xor
pop
nop
add
or
cmp
sbb
fisubs
bound
sbb
add
jle
mov
add
or
jo
mov
jmp
lret
cltd
fiaddl
es
sub
add
sub
adc
outsl
cli
pop
ret
sub
jecxz
push
rorl
mulb
ljmp
cmpl
jae
lahf
adc
call
adc
xor
fcmovnu
jmp
add
inc
rcrb
test
leave
scas
repnz
mov
ret
nop
dec
faddl
aam
stos
cmpsb
in
out
or
clc
rolb
mov
xor
outsl
je
jle
xor
popf
xor
xchg
and
lahf
insb
in
pop
xor
pop
les
mov
adc
xor
pusha
stc
push
daa
repz
es
dec
ds
jns
mov
es
adc
push
jmp
rcpps
mov
div
cltd
sub
sahf
shlb
sub
sbb
test
shlb
cmp
adc
sarl
inc
lret
cltd
jno
lret
ss
movsb
or
pop
aaa
push
aas
cli
dec
mov
out
aad
dec
pop
mov
and
pop
cmp
lcall
iret
das
out
imul
orb
and
sub
mov
jle
mov
cmp
aaa
call
stos
or
dec
jecxz
aas
inc
fcomps
jecxz
jno
jle
pop
mov
lret
sbb
sub
adc
popf
inc
dec
pop
mov
push
iret
fnstsw
lahf
mov
xorb
scas
add
adc
mov
adc
imul
mov
cwtl
das
or
leave
loopne
jo
cmp
sbb
xor
or
mov
or
push
add
es
pop
cmp
dec
out
les
in
imul
int3
xor
lods
rcrb
in
push
sub
leave
in
mov
or
idivl
mov
mov
in
test
movsl
mov
cmc
mov
adc
sub
dec
pop
test
scas
scas
sbbl
cmp
add
hlt
call
aad
sbb
test
dec
cmp
xchg
movsl
xor
int
inc
cld
ja
cmp
sbb
aam
fidivl
and
cltd
mov
out
ja
sbb
scas
aam
mov
pop
jl
add
es
popf
dec
in
aas
push
outsb
inc
jnp
mov
xor
sbb
lcall
and
xlat
mov
fs
and
addr16
test
mov
jb
pop
or
test
cmp
sub
aam
cmpsb
test
int3
repz
mov
fildl
divb
lcall
sbb
push
into
leave
int
aaa
loop
add
mov
xor
ss
mul
stc
jmp
mov
push
jae
imul
in
pushf
push
sub
gs
pop
ret
fimull
movsl
cmp
lea
push
add
pop
cmp
enter
pop
test
xchg
mov
sti
imul
cmpsb
sbbb
ja
mov
pop
mov
xchg
subb
mov
sub
lods
call
rol
and
out
iret
cmpsb
or
jno
mov
stos
push
jns
rcll
jns
jnp
add
jmp
sbb
push
pavgw
mov
mov
cmp
pop
pushf
dec
mov
mov
sub
in
push
and
pushf
ljmp
mov
mov
sbb
lcall
mov
mov
cmp
add
ljmp
xor
push
mov
xor
xchg
sub
repz
dec
and
sub
mov
jp
shrl
or
mov
sub
out
jno
in
ret
adc
xor
and
jb
adc
push
pop
xor
mov
dec
mov
pop
popf
scas
sub
push
jmp
ds
and
in
push
cmpsl
push
aad
dec
xchg
dec
mov
cld
int
rorl
scas
rcl
and
in
fidivs
push
repnz
ds
mov
movsl
mov
mov
xchg
fbstp
scas
xchg
xchg
shrl
clc
in
mov
dec
xchg
pop
nop
dec
movsl
mov
arpl
cld
aaa
push
xor
shrl
movsl
fimuls
inc
clc
push
cmp
mov
sbb
data16
in
fcmovnb
mov
push
xlat
out
leave
aaa
lret
pop
lea
sub
or
add
xor
inc
in
inc
movd
dec
inc
sub
aaa
cmp
mov
mov
sbb
mov
ja
xchg
out
jmp
jle
insl
ror
push
aas
add
imul
sarb
fcoml
mov
test
or
inc
shlb
jbe
xchg
cmp
mov
ljmp
movsb
and
cmp
push
ljmp
inc
mov
adc
aad
xor
jb
into
xor
sub
mov
jp
dec
add
mov
mov
sti
stos
xchg
adc
or
sbb
scas
notb
mov
test
and
and
cltd
cwtl
fidivl
arpl
inc
pop
mov
xor
sub
aam
sub
mov
fcoms
and
xchg
jl
scas
cltd
xlat
jb
scas
pop
ret
hlt
sahf
repz
inc
ret
fadd
add
ss
sbb
cmp
in
ficoms
xchg
int
mov
in
lahf
xchg
mov
clc
rolb
adc
pop
jb
cmc
std
adc
sbb
jbe
shl
mov
pop
mov
cmp
rcr
inc
mov
fs
fsubrs
inc
xor
xchg
aad
repnz
mov
inc
add
push
xor
xor
movb
mov
xchg
fs
cli
int
sub
jmp
push
sbbl
pop
sbb
pushf
or
dec
inc
sbb
cmp
inc
popa
pop
xlat
adcl
insb
movsl
in
xor
pop
jae
mov
nop
loop
pop
mov
fdivrs
pusha
stos
aaa
xchg
fdivrl
popf
inc
push
stc
lock
mov
xor
mov
out
rorb
movb
mov
lret
mov
pop
imull
stos
cmc
adc
cli
pop
gs
clc
pop
imul
xlat
rcl
repnz
sahf
andl
rcll
inc
pusha
sbb
adc
andl
pushf
sbb
or
push
into
ret
dec
add
imul
jo
test
je
add
mov
and
pop
and
dec
pop
pop
repz
subl
enter
pop
stos
lahf
push
adc
push
or
xchg
orb
fucompp
pushf
subb
aaa
push
cmpsb
les
jo
pop
pop
and
adc
ret
adc
mov
fs
pop
mov
stc
imul
cltd
cmp
pop
lock
lds
mov
das
sbbl
push
pop
cmp
pop
aaa
sbb
inc
xchg
fsubrp
outsl
xchg
sahf
jmp
sbb
das
adc
cmp
dec
xchg
push
and
push
out
dec
insl
mov
cmpsl
outsb
fwait
xlat
cmc
adcl
mov
and
movsl
xchg
add
mov
outsl
push
scas
pop
pop
xchg
insb
cmp
out
xor
dec
mov
test
leave
addb
movsb
arpl
push
push
movsl
xchg
setne
fisubs
mov
cmp
or
test
jp
inc
and
pop
pop
js
pop
repnz
lods
xor
incb
outsl
rorl
fmuls
and
andl
xchg
add
addl
xchg
scas
jp
cmp
fldl
cwtl
push
dec
cmp
dec
sub
fidivrs
mov
mov
stos
add
shll
outsl
push
outsl
cli
push
mov
fcoml
repnz
insb
shl
push
mov
xor
or
dec
es
sub
scas
jb
mov
and
add
dec
repnz
jns
arpl
test
dec
subb
jb
mov
fistl
xlat
ss
stc
xchg
mov
fwait
sti
xor
and
mov
data16
in
pop
movsb
fsts
pop
or
out
or
pop
cld
xor
xchg
cmpsl
add
imul
movsb
sbb
lods
pop
push
push
subb
pop
inc
inc
iret
push
ljmp
insb
je
leave
test
lods
add
test
mov
es
sub
movsl
in
mov
xor
in
clc
jae
cmp
mov
jbe
jecxz
and
in
push
sbb
push
mov
sub
je
inc
or
sub
iret
mov
out
inc
mov
insl
ljmp
in
loop
mov
xor
imul
out
popf
mov
mov
sub
cmp
decl
insb
mov
push
insb
xchg
sbb
add
out
call
jp
stos
mov
movd
out
sbb
xchg
imul
jne
or
lahf
cmp
sbb
pop
mov
add
rcrl
add
ficomps
xor
stos
repnz
or
rorb
pusha
lods
je
stos
fdivrs
sub
pop
and
popa
pop
jge
outsl
dec
or
sbb
bound
inc
jnp
pop
stos
cli
aam
pop
std
push
cli
pop
pop
add
xor
push
cmp
jge
adc
add
nop
int3
mov
xchg
int
ljmp
pop
cmp
movsb
push
add
or
shll
cmp
pop
xor
mov
adc
mov
movsl
ret
xchg
dec
pop
cld
xchg
inc
cmp
mov
orb
call
jge
xor
sub
mov
mov
jge
cmp
lret
int3
xor
push
mov
ret
sub
lds
sarb
sub
jbe
cmp
bound
mov
or
push
in
jb
mov
cmc
jne
or
in
js
xor
push
mov
stos
pop
sahf
fistl
pushf
loop
fldt
cmp
fisttpl
add
or
leave
pusha
repz
push
adc
push
xor
add
and
jnp
add
sbb
rcll
push
gs
mov
mov
hlt
fcoml
xor
test
adc
xchg
addr16
scas
pushf
or
mov
rcll
lock
sub
aam
aaa
into
clc
js
adc
iret
fidivs
sbb
dec
aad
loop
out
xchg
mov
mov
orb
mov
inc
lock
int
sbb
ret
sub
jl
sbb
add
mov
cmp
pushf
add
dec
imul
call
ja
lods
xchg
in
jmp
cmpl
fcompl
sub
xchg
popf
jg
and
xlat
inc
xchg
mov
lea
add
ret
sti
fs
cltd
xchg
mov
adc
pop
adc
dec
iret
outsb
mov
mov
out
test
bswap
lods
jae
fidivrs
jo
into
movsb
scas
mov
or
xchg
rol
or
sub
pop
ret
or
fidivrl
stos
and
neg
outsl
sub
jp
lahf
ret
ret
pop
aas
xchg
cmpsl
arpl
xchg
xor
push
mov
aas
sub
mov
rcll
xchg
clc
out
ficoms
xor
xchg
pop
sbb
push
xor
adc
aaa
fmulp
xor
repnz
out
and
nop
sub
ret
xchg
xor
add
sub
sub
addb
add
pushf
xorb
nop
popa
sub
ret
ljmp
out
int
js
cmp
or
lcall
sub
insl
pop
rcll
sub
mov
mov
call
lret
icebp
in
mov
lret
insb
stc
aaa
cmpsb
jmp
into
mov
ja
xlat
cs
pop
cwtl
test
and
jo
pop
mov
fistpll
lret
fldenv
stos
daa
imul
push
aas
jns
sbb
addl
mov
mov
fbstp
popf
rol
mov
sub
cmp
inc
mov
mov
xchg
in
out
xchg
es
imul
inc
dec
bnd
dec
sbbb
nop
xor
push
inc
adc
and
in
in
mov
cmpl
inc
shrb
mov
xor
cmp
clc
sub
test
sbb
sbbl
loop
push
fisttpll
jns
push
jb
scas
in
add
jb
fsubrs
xlat
test
adc
and
jecxz
adc
aaa
mov
add
fiaddl
test
push
fbld
imul
bound
cmp
fistpl
xor
cmp
out
aad
pop
testl
enter
jg
dec
insl
shrl
jl
adc
cmp
and
cli
fidivrl
mov
xchg
lds
aaa
mov
sbb
std
int3
arpl
mov
subl
adc
pop
and
lret
pop
ljmp
das
out
adc
aaa
add
sbb
pop
mov
outsb
icebp
xchg
push
fistpl
add
adc
xor
mov
sub
sub
leave
sbb
push
push
stos
fcmovbe
std
push
xorb
jle
adc
cbtw
inc
pop
push
sub
sub
addr16
in
popa
dec
push
testl
insb
xchg
xchg
fdiv
mov
cmc
movsb
rorb
dec
mov
dec
or
jo
imul
test
pop
out
jnp
cmp
xchg
mov
leave
mov
dec
popa
xor
cld
shll
or
inc
push
fists
stos
inc
out
test
mov
repnz
jle
stos
xor
frstor
jno
mov
cmp
jecxz
fldl
add
xchg
fstpl
mov
push
jp
out
js
dec
mov
jns
jmp
jmp
or
pusha
gs
pusha
push
push
xor
and
adcb
jle
inc
mov
dec
loopne
call
pusha
clc
sbb
mov
jp
cmp
flds
push
mov
add
jno
cltd
mov
nop
cmp
push
loope
maskmovq
imull
add
fisttps
rorb
inc
sbb
xchg
out
pop
pop
adc
arpl
lret
aam
and
mov
sub
clc
sub
into
fsubl
mov
mov
dec
adc
jne
cmpsb
arpl
jp
ja
ljmp
push
dec
pop
dec
xor
in
pop
lea
dec
test
notb
in
cwtl
push
out
mov
daa
test
mov
inc
xor
sbbl
rcrb
sub
push
jg
call
mov
or
xor
bound
insl
loopne
mov
pop
adc
push
mov
xchg
push
popf
push
gs
jp
decl
test
mov
xchg
xor
or
sbb
enter
and
jb
pop
movsl
cmp
mov
repz
lock
mov
xchg
sub
mov
mov
pushf
jge
je
stc
xchg
sbb
fistl
stc
lods
hlt
fisttps
or
pop
je
or
add
xchg
xor
cld
shrb
adc
out
jns
mov
cmp
jns
cmp
push
lcall
push
mov
mov
dec
xchg
in
lret
pop
cmpsl
aas
inc
cld
pop
mov
add
lret
mov
mov
in
xor
pop
je
sbb
stc
rol
mov
push
sahf
pop
les
fstps
pop
cltd
xchg
push
push
in
mov
outsl
cmp
sahf
add
pop
mov
mov
push
jl
pop
scas
fidivs
mov
test
jbe
or
stos
mov
inc
in
stos
cmp
push
adc
aaa
jno
xor
dec
shlb
fsubl
out
pop
xchg
add
scas
div
jmp
and
inc
push
repnz
push
into
mov
and
mov
in
ret
sub
xchg
and
das
rcrl
lods
mov
xchg
sti
dec
shl
inc
mov
in
out
scas
ds
call
jns
cmpb
inc
loope
sub
scas
pop
xor
and
add
insl
test
mov
mov
cmp
lcall
scas
and
mov
mov
cmp
pop
lock
inc
dec
outsl
sti
mov
test
ret
pop
iret
lret
mov
lret
mov
add
fs
push
fdivrp
add
xchg
cli
lret
adc
xchg
mov
or
add
jg
paddb
or
cmp
out
js
and
xchg
daa
je
push
sbb
add
imul
test
movsl
dec
call
fsubl
mov
xchg
pushl
scas
xor
fwait
pushf
fnstcw
mov
mov
repnz
push
or
pop
mov
fcompl
fistl
and
jnp
add
xchg
sbb
clc
pop
dec
lea
jp
mov
lahf
inc
sub
decb
lods
ss
mov
xchg
fwait
stos
add
mov
leave
mov
xchg
js
shrb
sbb
cmp
mov
pop
mov
bound
or
insl
daa
xchg
and
stc
loopne
push
fidivrl
mov
mov
insb
cmp
jo
inc
adc
mov
adc
and
mov
dec
out
testl
sub
and
xlat
sar
stos
push
mov
lods
dec
fs
dec
icebp
lea
or
call
testl
xor
ficoms
and
imul
and
insl
enter
es
fstp
jbe
lods
xorl
dec
movsb
sbb
or
pop
jl
sbb
ficoms
xchg
pop
pop
mov
mull
xor
in
add
mov
loope
jne
sti
and
cmp
rcll
and
push
test
mov
rcrl
scas
and
add
iret
aaa
fidivl
xchg
xor
mov
mov
pop
loopne
sub
pop
loope
daa
outsl
mov
mov
cwtl
cmp
pop
pop
idivb
sbb
ds
or
mov
imul
addr16
xchg
imul
bound
cmp
fsubr
repz
or
sbb
jp
icebp
imul
lea
enter
fbld
repnz
jb
test
xor
inc
mov
mov
ret
pop
pop
xor
cmpsl
mov
scas
aam
int3
arpl
pop
xor
shl
ljmp
fdiv
add
lea
mov
adc
ds
xchg
or
jmp
aad
gs
mov
cmovbe
mov
dec
leave
ficompl
inc
jecxz
jmp
or
mov
aas
mov
rorl
insb
xchg
inc
pop
enter
mov
jae
cmp
mov
pop
cmp
into
outsl
mov
int3
int3
clc
mov
jle
loope
pop
jne
mov
xchg
jmp
or
ds
fsubrp
push
mov
stos
add
mov
cmp
and
xchg
repz
inc
gs
push
insb
or
insb
xor
js
sbb
pop
inc
or
pop
lods
mov
sub
test
xchg
sub
dec
nop
imul
test
mov
sub
insb
movsb
fcom
daa
push
jb
mov
pop
xchg
fidivrs
xchg
xor
jno
out
xor
or
fildl
pop
addr16
movsb
adc
shl
mov
mov
ret
xor
loop
add
mov
fs
fadd
fistpl
or
and
fdivrl
ds
mov
push
enter
pop
adc
sub
push
sbb
cmc
sbb
xor
into
fsub
dec
mov
int
xchg
addb
or
fidivrs
sub
fdiv
fsubl
and
push
movsl
sbb
jmp
movsl
mov
inc
scas
sub
icebp
test
cmp
repnz
addr16
cmp
fildl
inc
mov
mov
lcall
enter
ret
and
mov
stc
sub
sbb
jae
sub
mov
mov
or
xchg
dec
lods
cld
mov
fwait
call
adc
adc
mov
or
or
add
ret
jmp
adc
pop
cmc
adc
add
scas
int
subl
stos
rsm
scas
mov
mov
xorl
nop
mov
enter
jg
bound
cltd
test
and
and
scas
mov
addr16
xchg
push
shrl
dec
out
sub
loopne
xchg
jb
mov
xor
xchg
insb
repnz
sbb
jnp
stos
mov
mov
dec
loopne
es
jl
cwtl
xchg
mov
mov
outsl
push
inc
fldl
jb
xor
movsl
aaa
ficompl
xor
jns
xorb
xchg
lret
call
push
enter
pusha
dec
mov
push
cmp
pop
sbbb
fdivr
push
fnstcw
out
cmp
aam
mov
ret
push
push
push
test
pop
or
add
loopne
jnp
push
mov
adc
or
cmp
jmp
mov
adc
insb
ret
gs
fildl
add
inc
lret
shlb
cltd
outsb
loope
jle
out
inc
test
cmpsb
jp
and
insl
inc
mov
dec
shrl
in
jnp
jmp
sub
inc
pop
add
cmp
pop
lret
and
push
pop
jg
xchg
and
inc
xor
cmp
xor
and
sub
push
pop
mov
lods
adc
jb
adc
test
or
sub
pop
xor
jle
xchg
imul
adc
icebp
cmpsb
imul
mov
lahf
or
inc
cmp
cs
jp
and
mov
call
bound
ret
ret
pop
push
mov
sti
and
in
dec
mov
mov
in
lea
out
jge
out
and
jo
xor
push
test
sbb
adc
inc
lahf
inc
fidivs
adc
sbb
int
push
pop
and
mov
stc
dec
adc
jg
test
pusha
add
jno
jnp
iret
and
inc
loop
shr
loop
lcall
das
pusha
ss
dec
mov
arpl
mov
imul
and
xchg
outsl
mov
dec
mov
jg
shrl
xchg
into
dec
cmp
lods
in
push
and
or
jno
push
lret
mov
lahf
fistl
mov
adc
shll
jae
outsl
and
addr16
in
pop
sub
inc
jge
sub
ficoms
mov
mov
xor
add
pop
mov
outsl
add
cmp
jmp
dec
sbb
dec
adc
aad
out
xor
pop
xor
and
adc
push
ret
lret
mov
clc
jo
pop
cmpsb
mov
jecxz
rorb
mov
inc
xor
andb
test
fimuls
xchg
push
sti
push
lods
pop
lcall
and
addr16
jge
ret
pop
mov
push
loop
adc
movsl
add
repz
fisubl
das
sbb
nop
daa
sub
xchg
sub
cli
adc
mov
dec
or
loopne
imul
xor
xor
add
dec
pop
pop
inc
cltd
mov
pushf
cwtl
cs
mov
inc
ljmp
insb
sbb
adc
test
cmpsb
mov
inc
dec
icebp
fiaddl
inc
xlat
xchg
rcl
cmpsl
sbb
inc
fidivs
push
mov
call
dec
cmp
fstpl
mov
inc
test
inc
add
stc
unpcklps
stc
testb
testb
rclb
adc
iret
lret
xchg
pushf
xor
cwtl
popa
or
ljmp
sub
xchg
pushf
loop
pop
and
sahf
lods
add
jmp
jg
outsl
add
push
adc
inc
or
je
ficoml
shll
jae
sub
arpl
inc
pop
xor
jo
gs
lods
scas
inc
jg
ljmp
shll
jg
dec
lea
aad
incb
ljmpw
int3
fmuls
std
cli
lds
push
cmp
dec
sbb
scas
adc
imul
test
repnz
or
jns
inc
adcl
inc
pop
mov
add
gs
pop
enter
xchg
cs
and
movsb
int
dec
mov
mov
lods
test
int3
sub
lods
jno
fidivrs
jae
fdivrl
in
adc
mov
subb
jne
in
cld
jge
mov
insl
outsl
cwtl
test
int3
xchg
shl
dec
bound
int3
mov
or
and
test
push
cltd
fwait
test
jo
jge
and
sbb
xchg
aad
and
mov
fnstsw
pop
in
loop
mov
in
outsl
call
pop
in
lcall
popf
ljmp
push
xor
pop
bound
ficompl
mov
or
mov
xor
stos
clc
das
lods
inc
inc
out
ljmp
push
adc
sti
inc
bound
xchg
sub
mov
inc
lods
sub
mov
mov
mov
incl
addb
or
mov
xchg
cmp
sbb
push
fnsave
int
add
dec
scas
lret
lcall
and
push
dec
aas
aad
xchg
jno
dec
lahf
pop
repz
jecxz
jg
adc
mov
jno
in
pop
xchg
mov
and
test
pop
shlb
inc
inc
adc
lret
push
lock
dec
mov
or
cmp
dec
sbb
daa
xor
push
add
push
call
sahf
jno
push
mov
sub
jge
jne
mov
aam
inc
imul
adc
je
pop
aaa
ret
mov
call
test
sysret
sahf
cmp
enterw
xlat
fucomip
lret
push
fistpl
fwait
cltd
mov
adc
shll
mov
arpl
xor
ficoml
push
in
test
das
out
ret
mov
in
mov
nop
cltd
stos
rorl
fistpll
jb
lret
data16
mov
fs
sbb
cld
xchg
cmp
sbb
imul
cmc
fcomi
insl
adc
push
push
pop
xchg
mov
aaa
sti
aad
insl
rcll
or
mov
dec
xchg
mov
add
mov
or
vandps
loope
iret
add
mov
dec
sbb
xor
lods
arpl
ficomps
mov
pop
or
fwait
fwait
sub
out
negb
dec
int3
mov
push
icebp
sbb
jl
loopne
cmp
cmp
pop
push
pusha
test
xchg
mov
mov
hlt
inc
add
xor
adc
mov
clc
mov
dec
lea
ficompl
inc
push
fsts
xor
stos
add
push
or
jmp
test
jo
insl
sbb
or
jnp
hlt
pop
pop
cmp
adc
adc
ss
mov
int
inc
fldenv
rep
mov
mov
pop
jb
subb
mov
and
adc
add
addr16
and
ja
ret
gs
lret
addr16
push
mov
xor
std
out
jle
xor
int
push
test
outsl
push
out
and
outsb
loope
dec
in
test
sbb
dec
hlt
imul
adc
sub
data16
dec
imulb
sub
std
inc
rcrl
cltd
xchg
xor
stos
mov
in
idivb
out
fnstenv
scas
sti
ret
pop
fwait
cmp
mov
dec
adc
icebp
dec
inc
rorl
fsubl
pop
sbb
adc
mov
push
mov
dec
daa
cmp
stos
inc
arpl
mov
imul
stc
mov
ret
xor
dec
cmp
shll
lds
out
pop
jae
add
mov
and
jns
popa
leave
loop
test
test
rcl
jle
push
mov
inc
popf
xor
lcall
jmp
les
cltd
negb
aas
jle
dec
inc
mov
in
std
xor
cmp
ja
movsb
pop
fldt
xchg
add
dec
mov
jmp
jno
sub
gs
mov
mov
popf
repz
adc
or
outsb
push
push
fwait
pop
iret
addr16
sti
and
imul
lret
stos
movsl
cld
xchg
xchg
cmp
sub
outsb
rcrb
lahf
imul
inc
popa
jnp
scas
inc
cli
sbb
nop
dec
sbb
inc
jle
shlb
sarb
push
scas
in
push
pop
lods
dec
dec
test
pop
mov
loope
pusha
sbb
push
dec
adc
push
jbe
mov
cwtl
push
hlt
xchg
test
mov
xchg
cltd
or
ret
mov
mov
pop
je
movsb
inc
aas
pop
jle
add
mov
insb
adc
popf
mov
mov
rcr
inc
sbb
or
jp
sub
lea
scas
inc
sbb
jo
xor
pop
test
cmp
ja
adc
xor
and
cmp
jge
dec
icebp
xor
into
imul
xor
rcr
mov
int
jp
push
imul
mov
outsb
cmp
mov
xchg
pop
ja
dec
cmp
xchg
and
sarb
fs
mov
dec
ja
outsb
lds
in
ds
shl
lahf
ss
sti
fwait
cwtl
ss
jmp
or
lret
leave
movsl
repnz
xchg
add
xchg
inc
in
stos
inc
push
push
aam
push
shrl
sub
arpl
lcall
lahf
aas
mov
cmc
and
push
aas
push
jl
pop
add
mov
cmp
insl
sub
xorl
icebp
mov
and
sbb
adc
mov
in
mov
sub
jbe
nop
xor
cltd
mov
add
lock
lods
mov
sbb
xor
or
mov
dec
setne
lds
insb
add
and
fcmovne
mov
scas
and
mov
jmp
lods
aaa
pusha
xchg
cld
jne
mov
pop
or
pop
cmp
jbe
insb
add
dec
cmp
or
daa
sub
ds
insl
ja
out
and
cli
jmp
scas
jno
jb
sarb
imul
movsl
mov
sub
cmp
adc
jno
and
orl
cmp
mov
jmp
mov
xrelease
stos
cs
push
mov
lods
push
cli
fcoms
mov
mov
or
jnp
jnp
aad
mov
pop
mov
push
push
dec
mov
mov
or
push
adc
ss
push
adc
sub
add
in
test
das
insl
arpl
xchg
jnp
out
mov
iret
cmp
xor
push
dec
xchg
fcmovne
cltd
out
xor
pop
mov
dec
dec
out
mov
xor
dec
add
push
push
pushf
push
and
aad
sbb
ds
in
loopne
fidivs
sarl
mov
cmp
lahf
shll
sbbb
in
aas
fs
fwait
insb
pop
insb
adc
movb
mov
cwtl
xor
mov
cld
inc
data16
jnp
or
or
and
cwtl
sbb
sbb
cmp
cli
sbbb
mov
adc
pushf
mov
mov
call
test
int3
inc
loope
sahf
dec
and
pop
push
call
dec
insl
bound
out
xchg
dec
out
xor
fs
dec
xchg
stos
testb
aam
js
mov
sbb
push
xchg
inc
in
cs
inc
xor
dec
xor
into
testb
inc
adc
or
add
inc
int
cmpsb
outsl
push
add
imul
lret
pop
push
insl
xor
ret
mov
push
shlb
fs
arpl
outsb
lods
jg
dec
inc
xlat
pop
data16
aam
dec
scas
inc
jl
sbb
lods
popf
int
out
fcmovb
popf
nop
adc
add
push
call
or
jb
cmpsb
and
dec
push
pop
popf
in
lds
call
call
mov
imul
hlt
jbe
or
jne
or
ljmp
popf
and
mov
jns
fldenv
adc
in
aas
adc
sbb
xchg
xor
in
cmp
sbb
movsb
cmp
mov
xor
or
lods
inc
sbb
or
add
mov
and
popa
pop
cmp
cmp
imul
mov
add
insb
jns
test
adc
fbstp
cmpsl
dec
lahf
les
or
mov
jp
into
aad
xor
in
and
incl
iret
push
bound
gs
std
mov
movsb
dec
pop
popa
clc
insb
xlat
lods
push
mov
mov
adc
xor
andps
cmp
in
orl
or
mul
inc
aam
xlat
xor
popf
sbb
mov
sti
jp
mov
in
into
jo
repnz
mov
cmp
gs
leave
adc
int
outsb
aaa
iret
leave
das
les
pushf
rorl
imul
adc
pop
ret
mov
or
add
scas
inc
ret
push
sbb
push
inc
punpckldq
inc
stc
mov
push
jbe
movsl
pop
les
insl
shrl
jl
imul
mov
out
out
loope
mov
cli
or
xor
lret
lcall
addb
dec
and
in
cli
sbb
gs
or
or
mov
xchg
mov
mov
rcll
je
sbb
les
jns
and
iret
imul
sbbl
jg
sbb
push
jge
rcrl
insb
lcall
test
pop
sub
add
pusha
repz
jmp
inc
arpl
pop
gs
pop
and
pop
imul
ss
inc
dec
es
jg
add
mov
out
fisttpll
or
es
mov
ds
mov
or
test
and
and
cmpsl
xchg
sbb
push
mov
sbb
cmp
mov
imul
inc
push
dec
ljmp
loopne
nop
lock
mov
scas
popf
mov
cmpl
sub
xchg
nop
dec
push
sbb
out
ret
arpl
mov
shll
jnp
arpl
mov
mov
cmp
andl
movsb
ret
xchg
add
cmp
pop
sbb
mov
inc
jno
hlt
mov
cmpb
lods
in
add
jp
insb
cmp
inc
call
pop
scas
out
fcoms
das
add
sbb
in
push
mov
xorb
dec
xor
push
daa
roll
lods
xchg
cmp
insb
mov
sbb
inc
pusha
mov
and
mov
dec
lds
or
mov
popa
movsb
inc
cltd
mov
pop
cmp
stc
xchg
xor
jmp
fsubrs
inc
inc
int
mov
jg
pop
fdivs
push
mov
jmp
arpl
cwtl
jg
xchg
xor
enter
jns
lret
cmpsl
iret
push
adcl
fdiv
aad
call
leave
push
sub
sar
mov
push
jle
pop
push
iret
and
xor
mov
adc
loope
and
in
fcomps
add
ss
mov
sbb
sub
shll
data16
adc
outsb
das
je
ljmp
inc
int3
mov
leave
outsl
mov
jno
and
lahf
stos
test
mov
pop
xor
add
jo
mov
mov
push
mov
ret
int
xchg
adc
push
bound
xchg
cld
outsl
stc
adc
rcrb
jae
stos
mov
lahf
jge
stc
and
mov
call
jae
adc
loope
fimull
iret
xchg
sahf
pushf
mov
or
mov
jg
fdivr
aam
xor
push
pop
adcb
mov
lock
xor
push
lcall
lcall
and
dec
xchg
lcall
and
push
int
adc
xlat
jmp
insl
fs
mov
int3
shrl
imulb
fidivs
xchg
sub
test
push
jnp
dec
fnstenv
adc
xor
fidivrs
cmp
loop
jmp
sbb
fcomps
push
mov
iret
pop
lods
fistl
xor
push
xor
mov
jno
out
or
pop
cmc
testl
jl
push
jmp
xchg
sti
lcall
repz
ljmp
sbb
outsl
in
lea
pop
jbe
nop
xchg
lret
ds
mov
sbb
mov
mov
or
cmp
xchg
cmc
jecxz
pop
adc
test
mov
or
mov
add
pusha
not
sbb
sbb
and
xor
stos
fsubp
jp
adc
jb
inc
xor
inc
push
popa
push
loopne
mov
jno
pop
rcrb
lea
into
lock
dec
or
faddl
dec
in
pop
mov
jecxz
jnp
les
pushl
fcompl
or
negl
jge
cli
cmpsb
imul
sbb
aaa
fwait
je
clc
inc
xchg
inc
jmp
filds
addb
jb
pop
jb
sub
std
lods
lahf
bound
imul
mov
cwtl
lcall
mov
mov
into
fwait
cmpl
add
jbe
popf
jp
add
jle
or
cs
jl
sbb
jle
std
sub
fs
aad
adc
mov
enter
fwait
scas
jl
bound
movsl
fsubr
hlt
loope
hlt
cmp
or
sbb
xchg
adc
outsb
sub
fbstp
aad
cmp
pop
pop
and
test
les
sub
lea
arpl
xor
dec
sbb
imul
sahf
or
adc
sti
mov
lods
mov
ja
adc
cwtl
add
rorl
push
insl
xor
dec
cmpsb
gs
mov
dec
xchg
sbb
lret
cmp
shlb
xor
ret
shlb
jp
mov
loop
jbe
jp
jg
cmc
jg
cmp
push
aam
inc
add
lea
sub
mov
adc
sub
mov
ret
imull
jg
push
fxch
push
push
aaa
repz
mov
lret
cld
les
mov
notb
push
mov
sbb
jno
dec
dec
fistpll
mov
loope
cmp
scas
sbb
loope
ja
cmp
push
in
jp
push
mov
add
xor
xorb
pop
ret
stos
sbb
aas
push
jno
mov
cmp
mov
add
test
lcall
loope
inc
arpl
shrb
sbb
fmuls
cmp
call
or
jbe
stos
mov
fdivrl
out
je
cs
dec
dec
or
xor
aam
cmpsb
jnp
add
mov
sti
push
loope
and
sbb
or
idivl
xchg
daa
movsl
cltd
out
add
push
mov
fists
test
push
xlat
call
sbbb
inc
jmp
mov
lea
out
push
jb
dec
xor
mov
aam
sub
nop
and
fistl
pop
dec
jl
xor
imul
inc
int3
jecxz
cmp
shl
jle
repnz
push
popf
lds
mov
sub
jecxz
ret
dec
jl
mov
loop
dec
lret
repz
sbb
cmp
mov
cld
mov
xchg
inc
mov
push
and
int
sub
cmpb
mov
add
inc
nop
dec
dec
and
xor
negl
in
insl
xor
inc
cmpl
mov
outsl
cmp
jno
insb
sub
xor
into
pop
jg
subb
sbb
jo
push
lret
addr16
fcompl
popl
and
loope
lods
ljmp
loope
call
or
lahf
pop
scas
fdivrs
cli
push
push
inc
fdivrl
inc
faddl
fldt
dec
daa
repz
fsubrs
popf
or
add
popa
dec
leave
ss
scas
pop
cmp
mov
xchg
outsl
ds
dec
mov
roll
mov
pop
sbb
fcomip
mov
lret
or
xchg
insb
fs
popf
sarb
jle
repnz
adc
stos
inc
mov
lret
mov
and
pop
stc
scas
xchg
sub
sarb
push
push
jge
and
fadd
push
mov
inc
lret
jg
adc
popa
xchg
jb
cmp
shrb
in
lret
inc
and
les
lret
push
in
fs
xor
cmc
inc
nop
in
bound
pop
mov
into
js
icebp
movsl
cltd
test
popa
aad
and
ret
in
cld
rcll
addr16
or
dec
xchg
imul
je
inc
push
add
push
mov
les
pop
push
mov
mov
push
test
pop
testb
mov
cmp
imull
sbb
repnz
pop
xchg
sbb
sub
cmp
inc
or
xchg
popa
adc
dec
shrb
addr16
icebp
jo
ss
cli
xchg
ja
fisubrs
cli
xchg
lcall
ja
out
pop
sbb
cld
jnp
sub
scas
loopne
sbb
jbe
xor
outsl
add
add
aas
cmc
mov
adc
inc
jo
xchg
mov
pop
pushf
push
pop
xor
pusha
cmp
or
popa
mov
in
add
push
mov
test
sahf
cmc
popf
scas
cmp
testb
cmp
mulb
dec
out
sti
cmp
mov
pop
mov
jo
push
jnp
or
xor
add
xchg
dec
mov
push
test
dec
xlat
push
pop
aaa
push
leave
inc
and
stc
or
pop
lds
mov
test
sub
pop
pusha
sub
xchg
jns
inc
mov
inc
data16
imul
into
xchg
add
mov
popf
sub
into
cs
sahf
adc
dec
lret
lock
outsb
dec
popf
push
iret
out
ds
jmp
imul
cmp
les
cmp
std
xor
inc
add
mov
imul
sahf
cmp
into
lods
push
pop
jb
jl
scas
mov
in
test
daa
mov
loope
add
ss
dec
cli
test
call
dec
add
or
fcoml
lret
and
iret
push
dec
jbe
loop
aad
mov
and
loopne
mov
or
je
xchg
jo
jbe
jbe
cmp
or
push
adc
cmp
add
add
xor
pushf
and
or
test
test
in
mov
xorl
or
test
fxch
lds
and
adc
pop
lock
xor
cld
add
jl
and
pop
ret
xor
fs
out
inc
enter
sub
in
xchg
push
inc
inc
pop
loopne
iret
push
sub
cs
xlat
lea
jns
cmp
or
cs
mov
inc
inc
inc
scas
xor
mov
andb
add
pushl
stc
test
push
lods
aaa
pop
in
repnz
sub
jl
lock
sbb
and
inc
mov
jl
sbb
ret
jbe
pop
das
jg
repnz
xchg
add
pop
lret
or
sub
insl
cltd
dec
movlps
shll
or
addb
das
lcall
ja
pop
pop
arpl
xchg
fwait
je
or
rorb
outsb
repnz
in
sbb
incb
movsl
jmp
scas
mov
adc
outsl
inc
lret
insl
ffreep
pop
sub
adc
cmp
fildl
dec
ljmp
jp
lds
insb
nop
daa
mov
lcall
hlt
outsl
cmp
mov
addl
cmp
sbbb
es
mov
mov
add
mov
icebp
int3
xor
push
xchg
push
jnp
and
sbb
in
js
add
insb
mov
sbb
adc
xorl
shlb
in
lods
mov
in
sbb
data16
clc
fs
mov
mov
xchg
call
test
jge
push
xor
pop
or
mov
addb
sbb
sbb
dec
loop
cmpsl
mov
pop
mov
add
insl
and
pop
inc
jno
mov
fs
fsts
in
or
pop
fadds
das
loope
pusha
pop
rcl
aam
pop
testl
imul
fldpi
xchg
clc
sti
push
sub
pop
pusha
nop
jl
inc
shrb
icebp
pop
xchg
adc
ss
lea
jb
scas
test
and
push
outsl
push
push
xchg
lcall
jmp
sbb
out
adc
fstpt
loopne
inc
cwtl
push
and
sub
popf
mov
loop
push
lea
arpl
out
lods
setp
gs
inc
cs
and
arpl
cmp
insl
std
aaa
or
adc
push
sub
jge
mov
iret
cmpsl
rcll
xchg
xchg
xor
popf
pop
or
push
push
or
rol
test
push
pop
push
js
stos
sahf
push
sbb
outsb
jg
mov
fstps
fstpt
fcomps
sahf
out
shlb
sti
and
jecxz
xor
std
sub
xor
or
mov
mov
push
stc
les
dec
xchg
fs
mov
jae
mov
aam
cwtl
lds
popf
in
fdivl
add
pop
mov
lret
cmp
jl
inc
adc
in
shll
jg
mov
sub
std
sub
js
shrb
dec
sub
repz
in
fsts
aam
aam
andl
out
popa
int
dec
jb
add
jnp
jmp
incb
xchg
sub
or
push
push
popf
mov
sub
pop
sbb
loop
mov
orb
mov
cmp
sub
inc
pop
sahf
sahf
sbb
xchg
inc
jmp
bound
push
inc
sub
ffree
rclb
cli
pop
sub
shll
or
popf
jmp
and
scas
scas
es
push
scas
and
clc
sub
idivb
or
loope
addl
pop
jo
push
mov
fwait
nop
pusha
movhps
adc
lret
sub
cmp
inc
mov
or
ret
pusha
mov
mov
jae
scas
xchg
cld
xor
xorl
sbb
mov
cmp
scas
adc
notl
pop
xor
xor
in
xchg
cmpsb
xchg
or
push
ds
fnstsw
inc
rdmsr
adc
or
xor
nopl
cli
push
mov
ss
inc
fidivrl
aaa
push
xchg
frstor
cs
popa
xor
dec
push
or
and
scas
inc
pop
fnstsw
scas
test
jl
jp
add
mov
aaa
mov
adc
push
inc
mov
ja
aaa
fidivrs
ja
xor
negb
push
xor
jl
mov
lret
scas
movl
fidivl
sahf
mov
sbb
clc
test
std
or
mov
lods
inc
imul
mov
bound
jp
cld
std
mov
rorb
out
ss
pop
cmpsb
push
dec
popa
push
push
fnstenv
lret
jns
jnp
and
push
and
push
cmpsl
xchg
fucomi
and
cld
aad
push
jb
testb
fisttpl
mov
test
stos
fldcw
sub
dec
fidivrs
es
fstp
pusha
inc
lods
xor
test
mov
gs
xor
mov
clc
sub
insl
lahf
xchg
aad
div
add
aas
xlat
sub
lds
push
leave
pop
je
jnp
mov
fs
xchg
gs
idivl
adc
dec
push
xor
addr16
cwtl
xor
shrl
and
jecxz
inc
lcall
push
sub
xor
and
movsl
push
test
int
sbb
pusha
sub
xchg
add
push
jecxz
sub
in
cld
lcall
jne
lcall
outsl
add
push
int3
sub
mov
test
mov
pop
inc
fstpl
jl
repnz
rcll
fwait
xor
ljmp
in
outsl
mov
dec
push
fsubrs
hlt
out
xorl
aaa
push
out
push
pop
outsb
mov
insb
std
cmp
mov
dec
sti
repz
pushf
jne
hlt
sub
dec
out
adc
push
sbb
add
cltd
iret
pop
aad
aaa
in
dec
int
add
jl
xor
xchg
sub
inc
aaa
int
cmp
in
out
push
inc
inc
adc
jae
repz
or
in
stos
movsb
hlt
fcoms
daa
test
outsl
mov
jbe
repnz
push
add
jae
jnp
es
mov
std
inc
test
xchg
fucomip
inc
fbld
xchg
xor
push
fs
inc
cli
cmp
daa
push
shl
adc
lcall
lcall
add
pop
imul
loopne
insl
lret
cld
mov
mov
fnstcw
dec
adc
aaa
movb
pusha
fld
push
movaps
in
cmpsb
mov
jo
mov
aaa
rorl
xchg
mov
lds
jne
inc
fldt
ss
out
loop
xchg
lahf
sub
mov
jnp
js
pop
pop
jb
mov
adc
add
ss
sub
jae
xchg
outsb
cmpsb
cmp
ja
pop
dec
and
inc
lret
xlat
pop
dec
ret
pop
jo
mov
add
sbb
jecxz
xor
in
xchg
stos
sysret
xchg
sub
mov
fidivrl
fisubs
in
rorl
add
movsl
mov
scas
dec
insl
idivl
sar
shrl
sbb
es
call
js
pushf
or
lret
loopne
add
fiadds
jle
xchg
mov
push
mov
sbb
pop
lret
push
icebp
inc
xchg
dec
mov
in
js
cli
push
or
jl
iret
xchg
scas
into
addr16
imul
jae
and
int
mov
aad
mov
mov
dec
mov
insb
adc
mov
inc
les
push
mov
mov
test
xchg
popf
jg
sbb
adc
mov
sbb
dec
cmp
add
sbb
mov
and
add
imul
mov
test
pop
cmc
mov
enter
jl
inc
fsts
test
imull
cmp
int
lret
out
push
push
pop
jnp
add
dec
adc
dec
ret
cli
data16
gs
out
call
jnp
dec
add
jge
sbb
popa
arpl
into
stc
push
sub
push
lods
ljmp
imul
dec
lds
insb
rorl
dec
enter
ret
stc
and
inc
aad
dec
rorb
aaa
fsubr
dec
sub
mov
repz
movsb
sbb
xor
daa
push
fwait
mov
xlat
jmp
test
in
and
push
sti
mov
mov
jae
push
fwait
ja
push
mov
dec
insl
int3
jnp
jnp
mov
js
xchg
leave
push
loope
mov
push
dec
dec
mov
pop
dec
inc
mov
fldcw
int3
loopne
adc
xchg
pop
out
jmp
add
push
xor
popf
lods
or
cmp
lods
lret
push
into
sub
rcll
dec
lahf
cmc
into
xchg
push
pop
out
pusha
dec
enter
out
and
fstl
rorl
push
or
inc
mov
push
push
out
mov
fimuls
pop
cmc
xchg
adc
dec
and
mov
lods
push
cli
or
and
cmp
xchg
out
movsb
xchg
leave
sub
bnd
push
movsb
fisubrs
cmp
or
push
or
out
imul
sbb
fucomp
mov
mov
jo
mov
es
fadd
jp
cmp
sarl
add
lret
pop
ret
lret
addr16
dec
cltd
imull
out
insb
or
adc
sub
sarl
mov
ret
pusha
sti
inc
jp
cld
notl
pop
sub
sbb
movsl
insb
data16
push
aam
xchg
inc
stc
push
icebp
add
dec
fwait
and
cmp
testl
imul
mov
and
mov
out
shr
add
test
aam
arpl
adc
in
xchg
lret
adc
or
data16
sbbl
ljmp
mov
stc
and
hlt
shrb
enter
mov
dec
imul
pushf
fisubrs
jns
test
mov
and
mov
andb
push
and
addr16
insb
das
repnz
cli
lds
std
dec
call
flds
inc
dec
inc
sbb
xor
inc
dec
add
mov
push
or
push
inc
pusha
cld
mov
fucomip
loope
addb
ss
push
sti
es
push
add
gs
xchg
xor
pop
call
movsb
sub
xor
xchg
lret
loopnew
add
inc
sub
idiv
dec
mov
lods
loopne
add
xor
sbb
test
ljmp
sub
outsb
pop
sahf
iret
push
loop
push
add
movsl
jbe
rclb
push
icebp
xchg
jg
and
jo
lods
jbe
popa
mov
in
clc
or
lcall
push
je
adcb
push
mov
mov
mov
sub
adc
cld
jbe
loope
mov
aaa
lret
sbb
xor
test
sbb
jge
xor
jne
rcr
lret
lock
invd
adc
bound
gs
icebp
out
push
scas
sbb
daa
xchg
ljmp
cmp
flds
stc
push
cmp
sbbb
and
mov
pop
out
out
idivl
sub
cmp
add
or
repz
addr16
and
or
fbstp
adcl
jl
mov
push
mov
cwtl
jo
into
mov
test
and
addr16
movsb
and
mov
pop
or
cmp
mov
ret
push
pop
arpl
sbb
cltd
je
cmpb
lods
dec
adc
popf
stc
push
push
in
shl
push
shll
pop
jg
iret
enter
jecxz
inc
into
or
iret
ljmp
pop
outsb
pop
iret
pop
fiadds
inc
jp
inc
mov
outsl
int
adc
or
mov
inc
sahf
xchg
xchg
sub
add
dec
jmp
cmp
jb
push
test
mov
pop
cmp
sarb
adc
mov
dec
mov
lret
iret
mov
xlat
in
hlt
xor
mov
addr16
inc
inc
loopne
adcl
jg
xchg
xor
mov
inc
push
adc
dec
test
jl
dec
stos
fldl2e
xchg
cmp
lahf
and
data16
ja
push
mov
fnstcw
jge
sub
adc
jbe
mov
dec
and
aaa
iret
jecxz
inc
jp
dec
insl
scas
fsts
cmp
push
stc
cli
mov
inc
int
cwtl
addl
daa
cmp
push
sub
pop
and
lahf
jl
push
adc
jl
test
xchg
push
jl
xor
out
aad
test
pushf
daa
je
scas
inc
rclb
fs
int
lret
imul
iret
and
ds
daa
je
or
mov
push
pusha
loop
movsl
mov
js
sbb
mov
out
out
mov
mov
and
ficoms
in
out
insb
jle
add
dec
dec
xchg
mov
mov
testb
stos
dec
insb
pusha
inc
sub
xor
mov
popa
sbbl
pop
cmp
movsl
pop
std
orb
es
push
loop
adc
mov
insl
popf
sbbl
testb
paddb
mov
lret
add
or
add
xor
int
arpl
xor
inc
cmp
mov
pop
lcall
dec
sbb
xor
push
add
fildl
xor
mov
push
rcrl
ud1
gs
lret
jg
xchg
xchg
dec
je
imul
mov
push
jo
out
lods
mov
xchg
xor
faddl
inc
stos
sub
mov
inc
out
push
and
jecxz
pop
cmp
in
pop
and
inc
in
js
into
jg
scas
subb
lds
pop
add
enter
jbe
sbb
mov
cld
push
mov
das
cmp
push
sahf
sub
pop
in
add
pop
jecxz
adc
mov
cwtl
mov
and
lret
aam
inc
outsl
addb
mov
jl
imul
push
int
test
jne
into
xlat
ljmp
call
repnz
dec
mov
sub
or
js
xchg
jecxz
jg
pop
xor
mov
int3
mov
push
mov
sti
mov
mov
cmp
jle
add
arpl
push
cld
insb
or
push
xchg
fbstp
and
jecxz
pop
mov
stos
mov
jmp
imul
cmovno
xchg
ljmp
fcomip
xchg
imul
and
lahf
std
inc
test
sbb
mov
xor
cmp
pop
mov
dec
mov
jbe
pop
sbb
mov
push
cli
shll
mov
int
sub
mov
mov
insl
cmp
js
fsubrp
outsl
out
xchg
push
shrl
jmp
aaa
in
negl
lds
test
pusha
mov
int
shll
lods
xchg
push
dec
dec
cmpb
mov
jns
daa
lea
lods
pop
scas
scas
mov
or
xchg
aaa
and
pop
jl
cmpsb
inc
lds
dec
insb
int3
test
fisubrl
addr16
int
lock
sbb
loop
push
popf
aaa
test
cld
jg
or
cmp
sbbl
scas
lahf
sbb
rcl
mov
adc
pop
and
jl
popf
jp
dec
jb
arpl
aas
outsb
loope
movsl
aas
or
aas
fisttps
lods
xchg
xor
xor
rcr
cmp
mov
mov
cli
and
adc
push
lods
enter
mov
dec
test
add
imul
mov
jns
bound
into
movsb
leave
in
pop
pop
cmc
ss
push
xchg
push
aad
or
xor
mov
jns
mov
adc
orb
xchg
in
add
cmp
jns
insb
jae
fisttpll
add
cld
inc
pop
xor
mov
jbe
add
push
stos
pop
cwtl
sahf
dec
nop
incb
or
xchg
es
pop
sub
inc
mov
mov
mov
or
adc
add
scas
pop
pushf
and
jge
or
sti
jbe
cmpsl
insl
loopne
mov
lea
ret
push
cli
sub
icebp
insb
mov
add
mov
js
inc
mov
cltd
cmpsl
mov
mov
add
sbb
inc
adc
cmp
mov
push
mov
cmp
dec
mov
sahf
cmp
mov
mov
jo
shrb
or
cmp
xchg
or
andl
out
jne
into
dec
sub
aam
jle
cwtl
xor
or
push
fdivl
fnsave
xchg
pop
mov
orb
pop
pop
ss
mov
push
add
cmpsb
jne
add
push
incl
sar
adc
and
loope
shr
mov
xchg
out
dec
cmpsb
aaa
jle
and
ljmp
mov
hlt
loopne
fdivrs
data16
roll
sti
mov
outsl
mov
xor
xlat
jecxz
inc
fcmovu
add
push
push
scas
fidivs
aad
iret
ret
xor
es
sbb
mov
fldt
jp
mov
mov
sbb
aas
test
pusha
outsb
jae
out
insb
ds
aam
push
push
js
test
inc
pop
out
fdivl
cltd
mov
xor
outsb
push
out
cmp
inc
or
ret
cmpsl
push
add
rolb
push
mov
push
fisubl
dec
icebp
aas
cmpb
movsl
push
ds
das
iret
add
pop
sahf
loopne
imul
in
mov
dec
int
mov
fldt
stos
push
xor
stc
dec
dec
add
test
mov
mov
adc
sbb
dec
jo
xor
dec
inc
inc
aas
scas
into
pop
or
push
ret
clc
fucom
les
ja
paddsb
xchg
shll
add
pop
test
xor
js
jp
sahf
scas
push
inc
mov
jmp
lea
push
jno
lock
inc
xchg
sbb
push
push
fsubr
add
repnz
or
lock
jl
ret
lock
mov
fstpl
or
xchg
js
mov
adc
xchg
jno
leave
jo
test
arpl
mov
into
dec
ds
repz
adc
mov
hlt
cld
adc
insl
mov
aad
lds
push
dec
pop
jbe
test
jmp
loopne
lahf
pushf
nop
mov
or
daa
enter
clc
cmp
lods
xchg
push
in
pushf
gs
push
sbb
add
add
test
xlat
xor
cwtl
and
push
imul
jp
pop
rorb
les
out
imulb
jno
jno
gs
mov
or
cmp
daa
mov
lds
pop
cltd
push
push
inc
dec
pop
inc
inc
shll
imul
push
mov
xor
mov
mov
push
cmpsl
pop
push
adc
and
out
cltd
push
fisttpll
sbb
xchg
push
fsub
jae
sbb
xchg
pop
in
repnz
or
add
orb
in
inc
out
adc
cmpl
imul
pop
sbb
xor
mov
inc
repnz
hlt
mov
jb
pop
lret
push
mov
test
leave
xor
and
dec
or
in
push
dec
hlt
adc
movsl
cld
pop
cwtl
aam
push
repnz
orb
shlb
sarl
xchg
insb
xor
jl
mov
push
lcall
mov
stos
xchg
adc
jne
repnz
sbb
outsb
mov
cmpsl
add
outsb
mov
out
loop
jmp
daa
outsl
test
pop
ljmp
push
xlat
mov
jmp
movsl
push
mov
ja
jae
fadds
adc
inc
and
mov
push
enter
out
dec
or
ljmp
cmc
cmpb
dec
mov
fstpt
popa
stos
and
xor
insb
cwtl
mov
out
dec
rcll
sub
mov
push
ds
xor
jmp
mov
pop
inc
mov
inc
xchg
mov
mov
mov
jge
sbb
lock
cmp
nop
insb
cltd
rorb
xchg
jae
in
in
pop
mov
pushl
pushf
dec
scas
mov
jg
push
pop
lahf
aas
xchg
add
hlt
push
pop
and
sbbb
sbb
add
js
or
repnz
pop
and
sub
sahf
and
call
in
ja
cmp
inc
shrl
fstl
lods
daa
adc
leave
dec
jae
std
adc
std
icebp
cltd
fstl
pop
and
mov
pop
nop
mov
mov
in
or
sbbl
add
inc
sbb
lock
jbe
pushf
addr16
xchg
stos
cmpl
dec
dec
dec
loope
jle
sub
int3
add
rorb
xchg
stos
loop
sub
orl
fbld
jne
mov
pop
sarl
pop
loop
dec
scas
inc
jl
sbb
int3
mov
or
sub
iret
fidivs
roll
loopne
dec
cmp
cmc
mov
decl
lods
fnstsw
mov
aaa
and
add
setg
hlt
cmp
add
lea
jae,pn
lods
sub
scas
mov
push
sti
inc
xlat
into
scas
push
popf
adc
jmp
stc
lahf
xor
pop
notl
fstpt
xchg
mov
pop
xor
lods
xchg
jle
sahf
movb
mov
push
pop
sbb
adc
sub
jle
xor
shll
mov
xchg
clc
sahf
add
movsl
cmc
lods
cld
pushf
mov
sub
cmpsb
cmp
push
imul
and
inc
or
inc
fildll
dec
shrd
out
and
jbe
inc
fcoms
pop
sub
xor
out
stos
pop
mov
cs
xchg
mov
mov
repz
jle
add
aad
xlat
addb
jb
pop
insb
cli
daa
fucomip
incl
cmp
push
nop
sub
adc
dec
insb
sub
mov
cmpsb
add
decb
enter
test
out
out
ret
pop
pop
dec
cmp
or
lcall
xchg
lds
xchg
and
fstp
ja
mov
testl
xchg
lret
leave
clc
sti
in
in
inc
cltd
in
pop
mov
add
testb
pop
or
push
inc
mov
add
hlt
cli
or
fsts
aaa
pusha
jae
sahf
rorb
xor
sub
movsb
scas
mov
loopne
or
pusha
stc
dec
in
out
lret
insb
sbb
jno
rolb
insb
lret
sub
jmp
stc
pop
cs
jae
repz
rorl
dec
pop
or
mov
sahf
xchg
fists
ret
pop
loope
mov
xchg
cmp
imul
popa
push
pop
imul
data16
mov
lahf
dec
pop
xchg
cmpsl
or
pop
daa
mov
jo
cmp
pop
sub
mov
sbb
jbe
aaa
bound
push
or
adc
lea
jbe
mov
cli
push
sbb
sub
std
sbbl
sbb
aad
mov
pushf
cli
jmp
push
mov
imul
jmp
and
xchg
fcom
out
pop
lock
or
mov
out
rcrb
test
into
cmp
and
rclb
push
inc
mov
lock
mov
iret
inc
int3
adc
push
mov
addr16
or
and
ss
sub
icebp
jae
xor
and
jb
push
ss
ss
daa
loopne
arpl
jbe
pushf
push
sub
xor
test
add
push
push
pop
pop
fidivrl
cli
pop
imul
xorb
inc
outsl
mov
popf
cmpsb
add
inc
in
pop
andb
mov
in
test
mov
outsl
xchg
rcrl
inc
push
enter
dec
and
cmp
hlt
mov
pop
sub
outsl
mov
repnz
sbb
bound
pop
adc
adcl
iret
push
lock
and
mov
ja
xchg
pop
repz
push
xor
fisttps
inc
sahf
fwait
push
imul
and
scas
loopne
jno
pop
ret
sti
test
lods
ret
insb
push
mov
sbb
insb
sub
pop
aam
lahf
test
inc
insb
xorl
arpl
mov
or
dec
ljmp
aaa
cmp
out
test
xchg
stos
out
scas
popf
inc
fnstsw
pop
adc
outsb
adc
ds
pop
jne
inc
mov
imul
xchg
popa
mov
rcll
lret
addr16
dec
int
sahf
adc
sahf
clc
stc
fimull
xlat
das
xlat
cld
lcall
in
pop
int3
repnz
sbb
mov
mov
xor
pop
mov
xor
out
inc
sarb
dec
add
pop
repz
lahf
push
xorl
bound
and
popa
and
fdivrl
ret
bound
jg
push
mov
out
push
imul
psubusb
inc
fsubs
pop
fstps
js
arpl
cmpsl
push
repnz
push
mov
jmp
push
jmp
xchg
push
push
in
lods
lea
xor
movsl
jno
es
arpl
lds
out
cmp
pusha
pop
int
push
movsb
cmp
add
mov
into
sub
add
je
inc
add
xchg
cmpsl
push
pop
out
out
sub
xchg
pop
inc
decb
sub
sub
loop
push
push
adc
push
jmp
flds
push
loopne
jge
pop
sub
std
pop
dec
fidivs
dec
adc
cmpsb
mov
hlt
push
test
jne
lahf
inc
dec
pop
jmp
pop
movsb
add
jecxz
enter
rclb
repnz
jb
sahf
sub
xchg
add
std
iret
inc
test
test
mov
jecxz
popf
xor
cltd
outsl
pop
fnstcw
add
xor
xchg
xchg
adc
push
test
sbb
jmp
mov
mov
jl
cmpsb
inc
cmp
jp
mov
and
ret
aad
addr16
cmc
adc
movsb
pop
sahf
pusha
js
pop
mov
mov
testl
rcl
lret
das
pop
ret
fimull
push
aas
push
insl
rol
imul
out
inc
cmc
or
inc
out
jnp
xchg
rol
cmc
or
push
repnz
dec
call
mov
sub
jl
cmpsb
jecxz
xchg
pusha
scas
xchg
xchg
movsl
fcmovne
push
lahf
mov
add
xchg
adc
imulb
and
cmp
lods
push
imul
and
roll
fstpt
fstl
imull
lret
fimuls
mov
arpl
dec
in
test
fwait
out
xlat
dec
outsb
stc
popf
sbb
jecxz
nop
dec
jo
hlt
loope
dec
push
sub
hlt
mov
mov
fldcw
int3
lea
movsl
jne
cmpsb
ficoms
cmp
inc
push
call
sahf
gs
icebp
aaa
arpl
mov
xor
lret
adc
xor
or
sahf
and
jbe
gs
xchg
adc
je
jp
xor
dec
cmp
or
adc
xlat
sub
enter
push
int
dec
out
jb
inc
mov
insl
aam
aad
addr16
sub
pusha
dec
adc
add
push
pop
and
and
ret
jle
into
push
add
fnstenv
test
jbe
iret
lods
inc
in
call
push
jbe
sbb
dec
sbb
pop
imul
mov
pop
imul
mov
cmp
fstl
lods
mov
scas
push
in
fst
sbb
pop
lods
je
popf
cld
jl
enter
add
les
push
fnsave
fistpll
xchg
fstpt
xchg
iretw
adc
cs
cmp
inc
punpcklbw
fs
push
cltd
adc
mov
in
push
clc
cwtl
cmp
leave
xor
push
rorb
sbb
dec
fs
cmpsb
push
or
mov
das
sub
mov
ja
add
bound
mov
add
push
ljmp
mov
jno
inc
sti
jb
shr
je
push
clc
sbb
add
loop
xchg
cmp
negl
fisttpl
icebp
ror
lahf
and
sub
mov
add
loope
sahf
ljmp
mov
xchg
push
inc
dec
lcall
mov
mov
sbbl
hlt
insl
push
or
je
jno
mov
arpl
push
mov
or
mov
push
in
fdivrl
add
into
jecxz
xchg
adc
mov
mov
fcmove
jecxz
pop
andl
not
sbb
pop
push
push
xchg
mov
ja
test
les
push
fiaddl
pop
and
leave
pop
push
enter
js
lea
sti
xchg
clc
cmp
sbb
pusha
push
sbb
dec
add
fidivrs
push
gs
xchg
movsl
mov
fisubrs
push
call
sub
lock
imul
pushf
ja
sub
sbb
push
cmc
cmp
loopne
nop
movsbl
dec
lock
adc
inc
ja
sub
fnsave
mov
fimuls
mov
movsl
mov
int
lock
xchg
jl
rolb
scas
mov
arpl
ret
xor
cmc
stos
mov
les
sti
sbb
outsb
or
cmpsl
ret
loopnew
fists
xchg
jmp
lock
mov
shrb
rcrb
fsubrl
jge
xchg
loop
in
jmp
sub
ja
mov
xor
loop
lds
ret
enter
xchg
out
inc
clc
add
out
outsb
xlat
data16
pop
clc
lock
push
or
notl
in
dec
lea
or
int3
jne
scas
aad
fiadds
ds
js
icebp
adc
mov
inc
pop
scas
sub
xchg
dec
add
stos
xor
loopne
mov
incl
jae
sbb
xor
in
hlt
inc
mov
addr16
add
data16
mov
push
xchg
mov
xchg
inc
fwait
xchg
fcomi
nop
movsl
jnp
call
cmp
push
outsb
pop
adc
adc
or
cs
sarl
orl
or
mov
mov
xchg
scas
xor
lahf
scas
cmp
pop
lods
lret
leave
test
dec
add
push
and
inc
ds
mov
subl
scas
ljmp
or
outsb
or
push
movsl
stos
stos
loopne
push
les
int
inc
pushl
xchg
jg
inc
push
sub
cli
and
iret
ss
jae
lods
push
ja
jbe
jmp
dec
movsb
jmp
adc
jo
arpl
ret
adc
data16
aam
mov
dec
xor
cmp
fidivl
push
or
call
push
inc
add
out
dec
mov
jecxz
dec
and
add
test
jo
dec
pushf
out
cmp
jb
add
lcall
push
push
mov
pop
loop
lahf
sbb
test
dec
pop
cmp
and
xor
lods
addr16
and
fdivs
and
and
addb
scas
push
mov
mov
dec
cmp
push
out
pop
lret
outsb
std
jp
das
nop
fnstenv
add
scas
sbb
fldcw
fnsave
lock
cmpsb
add
xor
inc
loopne
mov
ja
inc
xor
ljmp
adc
popf
jle
sub
or
pusha
jno
stc
xlat
push
jbe
push
test
fbstp
sbb
rorb
mov
or
in
outsb
sbb
mov
xor
mov
fisubrl
push
in
push
ja
mov
pop
adc
xchg
pop
repnz
xchg
jle
sahf
jns
mov
mov
mov
dec
sbb
sahf
fcmovb
cwtl
cmpb
fwait
loop
pop
fsubs
icebp
adc
mov
popa
cmp
dec
mov
sbb
or
shrl
and
xchg
jae
movsl
push
loop
sub
cmp
sbb
mov
je
sub
pop
push
das
pop
or
icebp
and
loope
sub
lahf
push
jle
test
in
push
cmc
add
fisttps
jb
daa
or
cltd
ficoms
push
xor
test
sbb
inc
fwait
lock
outsb
loope
loopne
inc
dec
xor
push
mov
mov
dec
aad
add
jge
out
mov
inc
lahf
push
mov
das
xchg
adc
lods
push
dec
mov
flds
xchg
jns
adcb
movsl
mov
mov
mull
push
leave
sahf
push
loop
andb
movsb
or
lahf
loope
mov
add
mov
inc
aam
pop
pop
in
into
sub
and
cmp
jmp
imulb
in
lret
pop
adc
rep
test
xor
dec
in
sub
stc
pop
mov
fs
xchg
adc
adc
sti
sbbb
ja
imul
out
cmp
mov
cmp
cli
add
mov
ret
pop
push
adc
loopne
xchg
cmp
jge,pt
add
dec
stos
cmpsl
mov
enter
xor
push
pop
mov
outsl
enter
aad
lds
add
das
popf
out
sub
jae
push
lds
imull
push
cmovs
cwtl
jns
dec
mov
dec
daa
add
daa
xor
sbb
ljmp
fisubrs
push
jmp
out
mov
sarl
inc
repnz
mov
notl
mov
ss
sbb
mov
in
jae
jmp
jno
xchg
lret
ljmp
jae
arpl
js
pop
daa
aad
inc
mov
dec
inc
sbb
xchg
inc
xor
push
dec
lock
add
shrb
in
xor
lahf
loope
add
fnstsw
jge
jmp
sub
rdtsc
ljmp
fdivs
into
pop
cmp
jnp
rcrb
movsl
les
aam
cmpsl
mov
faddl
in
push
fnstenv
lods
daa
outsl
out
or
scas
rolb
stos
pusha
sbb
decb
outsb
push
bnd
lea
sub
mov
bound
xchg
push
sbb
loop
imul
ficompl
test
addr16
fwait
jmp
mov
popf
push
or
sahf
arpl
jb
fsubl
movsl
ja
popl
jmp
or
cmp
push
arpl
addr16
pop
pop
testb
jge
inc
mov
popa
sbb
lea
dec
dec
push
mov
cld
jl
cmp
mov
paddb
jns
mov
mov
jns
test
test
jl
cmp
insb
stos
pop
jmp
fbld
repnz
and
mov
mov
stos
add
adc
es
rorl
das
pop
inc
popa
sbb
xlat
mov
fabs
mov
fdivrs
iret
push
shrl
lock
adc
aaa
jae
imul
movsl
jg
ret
adc
mov
xchg
sub
mov
mov
sub
push
out
test
add
or
inc
xchg
popa
outsl
test
sbbl
daa
fdivs
iret
lret
pop
mov
rcl
ret
loope
daa
ds
or
lret
das
xchg
lret
jns
insb
popa
dec
out
iret
pop
xor
dec
sti
dec
pop
sub
adc
leave
cmpb
inc
lods
xor
push
fistl
xor
imul
adc
push
inc
push
mov
push
inc
std
adc
int
inc
xor
fidivrs
fsubrl
fidivl
scas
and
js
clc
bound
insb
cli
movsb
lock
push
roll
movsl
cmp
pop
loop
fimull
pop
ss
mov
add
loope
icebp
mov
js
xchg
mov
jecxz
inc
mov
pop
jmp
or
aaa
and
filds
inc
fdivs
imull
push
pop
jno
cli
sub
mov
cmp
clc
and
push
fsubrl
mov
xor
fsubr
pop
sarb
out
mov
sbb
mov
pop
pop
out
or
jbe
add
inc
pop
push
mov
int
lahf
or
push
or
mov
mov
jb
jge
dec
sbb
into
mov
xlat
mov
pop
jno
mov
mov
das
test
shrb
daa
mov
cli
lock
in
push
arpl
mov
daa
das
jecxz
cmp
jecxz
mov
ljmp
popf
arpl
push
cwtl
test
inc
out
xchg
mov
jecxz
das
mov
mov
fnsave
jnp
xchg
mov
popf
mov
mov
mov
or
std
mulb
sub
movsl
lea
js
lret
xchg
cmp
adc
push
jp
in
mov
imul
mov
mov
loopne
stos
mov
add
pop
js
or
lock
icebp
add
xor
pushf
clc
orb
shll
ficompl
inc
jo
les
mulb
clc
cmp
xor
cmpsb
fcomps
into
dec
lret
inc
dec
xlat
fs
test
xchg
scas
push
dec
dec
dec
mov
sub
popf
ja
inc
inc
pop
fbstp
cmp
mov
data16
mov
mov
cmp
cmpb
sub
rol
fidivrl
push
rorb
jne
inc
stos
loop
sbb
jno
add
sbb
xchg
dec
add
fbstp
popf
cmp
mov
shrb
cwtl
in
stos
cwtl
outsb
push
mov
jb
sub
lcall
push
xor
iret
ja
sub
sub
pop
lods
push
push
lret
jp
out
mov
add
inc
stc
inc
lea
das
dec
cmpsb
push
cmpsl
pop
jno
and
imul
sbb
push
cltd
std
mov
xor
lea
xorl
and
iret
jo
jne
mov
push
mov
test
scas
ss
push
xlat
das
addr16
lods
push
pop
pop
mov
popa
fcompl
outsb
das
jo
aad
or
notb
lahf
sub
ss
data16
imul
repnz
dec
inc
jne
and
js
lods
push
arpl
iret
push
arpl
xchg
sub
jle
jno
dec
mov
or
das
push
jae
aaa
icebp
dec
scas
aas
lock
fldt
rorl
sbb
mov
jnp
or
mov
jmp
into
push
jp
fisttpl
xchg
cmpsb
pop
imul
add
ljmp
pusha
popa
add
xchg
pop
pop
xchg
dec
aas
insb
jle
cmp
aam
stos
sub
je
inc
dec
and
push
jnp
dec
loopne
mov
xchg
add
push
xor
rorl
loope
dec
push
adc
dec
adc
ljmp
cld
or
sti
lcall
mov
pop
arpl
test
cmp
or
mov
mov
aam
xlat
out
sub
gs
mov
mov
and
int
daa
ljmp
dec
dec
inc
mov
cmp
fisubl
insb
sarl
sub
int3
inc
sub
mov
movsb
repz
mov
mov
icebp
les
iret
daa
inc
bound
aaa
push
test
loop
lahf
jle
out
mov
jne
test
mov
lahf
rclb
jge
into
dec
out
cmp
mulb
test
jns
mov
xlat
outsb
int
cmp
test
dec
inc
cld
in
jo
clc
scas
in
imul
popa
cld
lret
int3
in
adcl
add
cld
popf
data16
sbb
ret
jo
sbb
lcall
and
mov
mov
mov
rcrl
in
jo
lcall
aas
mov
push
pushf
or
and
lods
aaa
je
pop
andl
sarb
xchg
loope
aam
sbb
push
mov
or
xchg
cmc
sbbl
xor
dec
ja
stc
fimuls
stc
aaa
loope
jp
pop
sbbl
add
push
fndisi(8087
mov
jb
ficoms
lock
sti
repz
xlat
in
inc
ficoms
lret
mov
cmpsl
xor
scas
ljmp
pop
popa
loop
push
loop
mov
sub
fistpl
inc
adc
ds
cmp
mov
and
adc
xchg
stos
test
popf
xor
adc
stos
imul
mov
mov
mov
lock
inc
fsubp
inc
adc
addb
jbe
mov
outsl
push
mov
je
and
jmp
test
into
jle
loop
shlb
pop
cs
pop
or
and
jle
js
xchg
pop
stc
jae
cld
stc
je
adc
xchg
orl
inc
mov
mov
sbb
push
in
adc
enter
iret
cmpl
clc
sbb
jbe
into
inc
lcall
and
mov
insl
lcall
jo
mov
mov
dec
mov
dec
sub
sub
adc
xchg
inc
cmp
fnsave
xchg
push
pushf
in
jbe
xor
mov
jp
mov
and
test
mov
arpl
cmpsl
sbb
sub
mov
enter
loopne
arpl
or
outsb
jp
mov
movsl
xor
xchg
into
push
sub
fstl
dec
xchg
sbb
jge
mov
aas
sub
cmp
je
aad
out
or
les
pop
mov
aas
jg
mov
inc
mov
jbe
fcomp
push
into
xor
adc
adc
cld
lret
jne
fistps
or
cld
shrl
popa
arpl
pushf
mov
scas
inc
dec
dec
loope
cli
out
sbb
mov
inc
pop
mov
clc
xchg
cmp
push
les
sbb
pop
clc
fiadds
jo
fistl
in
push
inc
xchg
es
and
cmp
add
loope
pop
jb
fldenv
rcll
inc
or
dec
pop
lcall
pop
cmp
or
adc
js
xor
mov
faddp
scas
jae
jno
loop
test
sub
pop
repz
sbb
cmp
pop
mov
jge
push
test
mov
notl
test
mov
imul
pop
gs
jecxz
sbb
incl
shll
mov
andb
movsl
push
sahf
sbb
in
mov
gs
xlat
testl
sub
dec
loopne
dec
pop
aaa
int3
inc
enter
sbb
popw
mov
xor
fsubs
adc
ret
rorb
fcomps
movsl
jb
cmpsl
xor
jns,pn
adc
inc
or
or
lret
push
icebp
jae
sahf
mov
xchg
pop
push
jmp
mov
adc
dec
push
rcrl
rcrl
push
sbb
addr16
fbstp
mov
pop
sbb
xchg
push
arpl
pop
enter
ret
or
cmp
pop
decb
into
out
cli
ja
jge
inc
and
jmp
dec
jle
scas
sub
stos
lds
daa
stos
add
push
mov
mov
push
adc
movsb
sahf
jle
rolb
rolb
add
pop
pop
push
scas
lds
outsb
das
lret
pop
xlat
mov
imul
mov
ret
fwait
negb
rolb
insl
add
rorb
xchg
push
xchg
mov
mov
into
call
and
inc
cmp
gs
lds
xchg
mov
push
adc
rcrl
xchg
sub
fnstenv
sub
dec
cwtl
or
cmp
mov
std
loopne
jnp
sbb
pop
sbb
int3
xchg
leave
xor
push
mov
insl
jg
and
xchg
xor
ret
jns
lret
jl
shrl
lcall
jns
or
sub
lcall
cmpps
add
negb
jg
xchg
insl
xchg
mov
shrb
popa
stc
jo
push
push
stc
aas
adc
aad
and
cmp
test
push
or
nop
mov
icebp
in
adc
mov
dec
jle
adc
rcll
sbb
adc
mov
mov
icebp
mov
mov
je
dec
xchg
mov
adc
xchg
adcl
aas
jp
sti
stos
sarb
or
sbbb
das
mov
pop
add
int3
or
push
jl
push
jmp
xchg
inc
push
jmp
fcomps
sub
sub
ss
cmpsl
orb
sub
repz
jno
push
push
iret
jp
dec
addr16
imul
jmp
pop
fisttpll
into
adc
fdiv
cmpsl
mov
mov
pusha
sub
fs
xchg
repz
xchg
fmuls
adc
mov
cmc
out
les
dec
es
loop
sub
out
cmp
xchg
aaa
xchg
dec
xchg
ss
push
clc
add
push
daa
arpl
sbb
ret
jecxz
fldcw
sbb
scas
sbb
adc
cwtl
jge
out
push
int3
add
jnp
in
rol
push
out
adcb
dec
into
mov
scas
push
add
xor
insl
aad
xor
adc
jns
mov
push
iret
mov
adc
mov
std
push
jno
in
sub
mov
xchg
cmpsb
hlt
loopw
xchg
mov
mov
sub
pop
outsb
iret
movsl
scas
fdivl
dec
sub
jmp
test
dec
inc
push
loop
sub
rclb
stos
loopne
push
in
jle
js
out
push
jl
pop
add
or
add
rorl
adc
mov
mov
incl
popf
stc
mov
dec
mov
aaa
mov
mov
pop
xchg
repz
scas
inc
stos
js
mov
mov
or
das
push
ljmp
cmp
scas
and
xorl
adc
and
shrb
adc
adc
mov
stc
lea
in
xor
jo
xor
lahf
bound
in
add
call
jo
cmpb
jecxz
pop
jecxz
cmp
mov
fsubs
jge
lea
pop
scas
xorl
inc
into
daa
loop
push
in
xor
jne
cmp
test
and
jne
xor
xchg
add
es
repz
push
cmp
and
sub
inc
push
fs
mov
inc
jne
dec
mov
addr16
inc
lret
pop
mov
and
add
test
fsts
mov
outsb
mov
xchg
movsb
sbb
dec
sub
mov
imul
pushf
push
sbb
jne
push
mov
jnp
dec
pop
sbb
jne
inc
mov
sbb
sbb
clc
or
sbb
jbe
les
test
dec
jbe
in
sti
pop
push
fnsave
jle
push
lahf
dec
out
mov
aam
jecxz
aam
cmpsl
push
jle
push
mov
mov
mov
sbb
pusha
xor
jmp
push
mov
sub
js
test
shrl
push
xchg
or
nop
imul
cmc
daa
xlat
loope
vmovaps
scas
cmp
mov
cmp
sbb
stc
test
insb
mov
and
add
xor
out
sub
inc
push
jmp
out
popf
shrl
fistpll
adc
pushf
cli
je
rcr
and
mov
in
or
mov
psllq
pop
fldl
push
jne
lahf
ss
xchg
adc
mov
push
mov
sub
shlb
imul
aas
jmp
or
jmp
rcll
out
sti
mov
in
test
int3
mov
and
sub
dec
dec
sbb
jnp
cmp
push
mov
add
mov
inc
pextrw
mov
jb
into
xor
or
pop
mov
dec
pop
pop
scas
xchg
sub
xor
cltd
or
pushf
xor
jnp
push
lock
aad
js
mov
pusha
mov
sub
int3
mov
sbb
inc
mov
insb
leave
int3
add
pop
icebp
xchg
add
xchg
rol
pop
decb
lea
jns
es
pop
pop
mov
add
inc
hlt
daa
aaa
push
gs
push
dec
mov
xchg
in
inc
scas
xchg
mov
addr16
movsb
cmp
aaa
cmp
add
add
push
arpl
ret
adc
or
push
test
or
jge
imull
xchg
jo
sbb
cld
dec
popf
loope
iret
imul
imul
aad
dec
push
sub
imul
icebp
aaa
hlt
loope
shr
test
decl
mov
aad
sub
aam
mov
mov
and
cli
push
lods
push
aam
faddl
jmp
test
jmp
jg
mov
sbb
sub
xchg
scas
mul
loopne
and
sbb
mov
gs
dec
or
sub
and
pop
mov
loopne
mov
push
repnz
bound
push
push
or
cld
mov
shll
mov
add
fistpl
mov
push
shrl
pop
add
and
mov
mov
and
mov
ja
shlb
push
push
mov
cld
xchg
movsb
imul
mov
mov
pushf
out
in
test
ficoml
mov
iret
data16
outsb
or
pop
lcall
xchg
jne
dec
push
push
inc
fildl
push
popf
adc
out
mov
or
test
sar
pushf
incl
fnstsw
mov
inc
fildl
leave
jecxz
incb
dec
stos
dec
inc
xor
xchg
cs
sbb
divl
dec
stc
clc
out
mov
inc
adc
or
and
jns
pushf
and
scas
stos
jbe
lret
iret
inc
outsb
repnz
dec
mov
int
rcrb
mov
leave
jo
or
repz
mov
cmp
lods
add
push
push
mov
xor
out
ret
adc
dec
subps
xchg
xor
cli
push
xlat
inc
pop
cs
mov
les
adc
lret
lods
xor
jl
push
mov
push
sbb
lock
das
cmp
stc
cmp
mov
dec
mov
pop
iret
cmp
mov
ret
sbb
sbb
mov
xor
loop
cmp
jp
aam
adc
testl
insl
je
inc
popa
push
xchg
push
fstpl
xor
andl
repz
and
xchg
adc
mov
lcall
sbb
xor
dec
mov
xchg
and
xlat
sbb
adc
and
jno
sub
arpl
sub
lods
dec
pop
push
push
movsl
ja
repnz
aad
push
xor
xchg
mov
mov
popf
adc
jo
daa
popa
cltd
shll
bound
rolb
pop
or
dec
ret
jne
jns
fsubs
adc
popf
mov
xor
mov
push
sbb
imul
push
mov
and
adc
cmp
ret
pause
int
test
lret
into
lcall
cmp
or
int3
pop
dec
lods
ss
cmc
mov
lea
shlb
ja
sbb
mov
lcall
fs
repnz
and
push
hlt
sub
dec
push
xor
push
outsl
cmp
sub
jge
ds
xor
xchg
pusha
cmc
lods
inc
arpl
mov
arpl
xor
and
pusha
mov
repz
xor
add
cmp
addr16
dec
mov
fadd
in
shrb
mov
xchg
ficoml
cmp
inc
sbb
inc
mov
push
test
jg
clc
leave
fidivrs
arpl
sbb
jne
negl
inc
stos
fstpl
cwtl
mov
cmp
stos
enter
jbe
pop
xor
pushf
cli
mov
mov
stc
out
gs
jp
iret
out
push
dec
rolb
insb
push
jle
testl
xor
and
sbb
aas
gs
repnz
and
inc
ss
dec
and
push
nop
lock
stc
repz
imul
xchg
mov
lods
ljmp
ret
lcall
divb
jp
daa
xchg
aas
push
inc
or
cltd
into
push
dec
pop
sub
pop
jg
sub
xchg
ret
mov
aad
test
jmp
rcrb
int3
int3
repz
xor
shrb
int
or
mov
xor
cmp
loop
das
fwait
inc
stc
mov
outsb
xchg
cmp
sbbl
cmc
cmp
adc
mov
arpl
imul
mov
push
xlat
js
sbb
pop
jmp
cwtl
fucompp
mov
jmp
not
xchg
dec
pop
insb
xchg
clc
loopne
movsl
sti
test
out
jb
leave
addr16
fsubs
pop
xchg
and
adc
stc
push
les
addr16
in
mov
xchg
or
adc
xchg
mov
cmp
insl
push
jmp
xchg
mov
gs
cmp
fists
in
and
inc
xchg
and
sarl
je
jmp
mov
cs
jl
in
lds
xchg
or
dec
addl
pushf
roll
xor
jns
jns
sahf
inc
jae
sub
mov
pop
idivl
fxtract
xor
jno
push
sub
bound
jmp
andl
or
add
mov
sbb
xor
daa
loop
cld
jge
test
imul
data16
push
sub
in
pusha
rcr
popa
leave
out
test
negl
es
xor
fs
xor
aad
push
arpl
pop
sbb
pop
cmp
fs
add
lcall
sub
cmc
stos
les
cmc
rclb
add
pusha
push
xor
push
ljmp
in
imul
mov
dec
push
jbe
inc
mov
stc
sbb
xchg
xor
pop
cs
mov
movsb
pop
fbld
cwtl
inc
fnstsw
jne
or
imul
cltd
mov
sub
imul
xchg
mov
add
sbbl
and
add
mov
lods
jecxz
fadd
lret
jae
push
mov
jmp
jo
decb
mov
imul
mov
xor
mov
mov
add
jg
fstps
mov
cmp
cmc
sbb
daa
dec
push
or
das
dec
pop
xchg
xchg
pusha
jo
arpl
sbb
push
add
xchg
dec
or
aam
dec
mov
imul
inc
jge
hlt
out
stos
pop
stc
nop
nop
lret
mov
jae
mov
repnz
adc
sub
into
xchg
sub
xor
insb
add
xorb
push
fwait
ja
repnz
inc
outsl
iret
pop
jmp
add
out
lret
lcall
and
mov
dec
jno
jno
shrl
xchg
clc
subb
pop
and
lret
or
fidivl
cli
sub
xchg
xchg
out
mov
in
fnstenv
mov
mov
jmp
mov
jg
test
stos
stos
pop
into
cmp
mov
xchg
mov
fimuls
js
pop
inc
pop
xor
xchg
add
cmp
mov
jb
mov
movsl
cmp
sbb
mov
add
int
xor
and
xchg
lcall
clc
and
cmp
mov
pop
pop
je
mov
aaa
arpl
mov
and
dec
inc
rol
cmp
cmp
xchg
loopne
cmp
cmp
pusha
adcl
out
or
dec
addr16
or
mov
adc
es
jmp
adc
lcall
sbb
jnp
and
sti
test
out
and
outsl
notl
sub
test
jmp
sahf
jno
test
sbb
out
ljmp
mov
rcll
mov
add
test
stc
aam
fdivrl
dec
mov
dec
cmp
jp
rol
cmpsl
cmp
outsb
mov
ret
xlat
cmc
int
iret
aas
mov
sbb
cltd
pop
imul
or
xchg
sub
mov
push
xchg
pop
adc
hlt
jns
lcall
and
sub
inc
fstps
aas
pusha
imull
popa
stc
fimull
jg
mov
adc
lret
sub
test
jno
push
repnz
aas
adc
cmc
xchg
outsb
in
inc
outsl
sar
cmp
xor
pop
fdivrl
aas
in
add
ror
sbb
push
sbb
std
inc
lods
sarb
and
insl
xchg
gs
scas
ficoms
xchg
lret
push
gs
cwtl
mov
notb
xor
pop
jb
imul
mov
mov
repz
cltd
es
or
divb
pop
sbb
dec
je
movsl
lret
into
gs
fldenv
ljmp
pop
push
or
sti
lahf
push
sub
dec
jnp
jnp
lret
or
pop
cmp
dec
and
mov
aam
and
leave
roll
lea
sti
mov
mov
enter
xchg
cmp
insl
inc
adc
out
or
xor
adcb
xchg
sbb
adcb
es
or
mov
outsl
lods
inc
enter
leave
mov
roll
shl
push
cmpsl
imul
call
mov
jno
vdivsd
lods
mov
rorl
push
and
imul
inc
pop
push
rcrl
cmp
lret
loop
fists
or
loope
es
mov
mov
dec
fbld
data16
loope
add
je
dec
cmpsl
lcall
and
sub
push
outsl
es
sub
clc
inc
repnz
and
faddl
mov
std
push
mov
or
jnp
test
jecxz
incb
cltd
das
dec
add
mov
sub
or
dec
adc
sbbl
loope
sub
mov
jg
cltd
das
daa
push
imul
sbb
sub
push
mov
icebp
or
movb
sahf
xor
hlt
jne
movaps
add
fcmovnb
cmpsb
lock
mov
xor
dec
dec
ror
xor
and
test
ljmp
jno
cltd
adc
lcall
push
mov
cmp
and
adc
pop
xor
mov
dec
cs
pop
inc
in
bound
cwtl
lds
sub
out
lods
lock
sarl
jle
xchg
scas
les
inc
mov
aad
xchg
js
imul
jp
aam
sub
shlb
or
xlat
or
mov
rol
mov
dec
ret
pop
gs
cmp
push
sub
insl
or
stc
ret
aas
push
ja
jmp
or
roll
push
inc
xor
xchg
stos
fcomps
or
insl
sub
add
pop
hlt
cli
bound
or
mov
pop
pop
mov
frstor
addl
dec
jns
xor
outsl
mov
or
jl
sbb
dec
mov
movsl
jnp
ret
clc
mov
push
psubusb
test
sbb
mov
cmp
jno
push
fisubrs
lods
inc
pop
cmp
cmp
aad
aam
inc
push
add
mov
xor
fists
xor
mov
mov
out
push
inc
sub
cwtl
popa
jbe
loope
inc
inc
shrb
movb
test
pushf
mov
push
in
cmp
push
cld
push
les
fldenv
fwait
xlat
lret
sti
call
cmp
nop
cmp
lods
push
fbstp
sub
xchg
repnz
ljmp
push
xor
add
mov
in
test
ljmp
decl
pop
mov
call
stos
mov
insb
movsl
ds
adc
pop
sbbl
enter
adc
jecxz
mov
imul
daa
xchg
xlat
bound
mov
jp
mov
sarb
dec
lea
and
adc
or
outsb
mov
stos
cmp
pop
jnp
push
ljmp
insb
es
fwait
jg
xor
xor
xor
mov
push
iret
cmp
aad
aad
dec
ficompl
les
sub
test
push
loop
adc
outsb
repnz
jo
pop
push
cmc
dec
inc
mov
imul
cmp
jle
mov
mov
dec
outsb
lahf
aas
jl
push
push
mov
inc
and
push
aad
inc
jp
jge
fnsave
mov
aas
loopne
ss
adc
and
push
arpl
mov
data16
imul
das
nop
or
ret
into
or
fucomi
icebp
jmp
cs
out
mov
movb
mov
ljmp
fstl
add
bound
xchg
fwait
orl
and
movsl
js
cmp
or
stos
push
xor
or
dec
repz
and
lcall
cltd
xor
xlat
sub
xchg
out
mov
in
mov
mov
inc
fsubr
dec
dec
or
adc
inc
jnp
fildll
inc
call
pop
mov
stos
in
repz
cli
inc
incl
sbb
sahf
outsl
in
mov
arpl
in
mov
icebp
pop
lods
xor
cwtl
lea
out
ret
lahf
and
lods
inc
dec
cld
out
xor
fnstsw
adc
repnz
mov
iret
xchg
push
and
fmuls
ret
movsl
std
jecxz
aaa
daa
jnp
jae
xor
sbbl
icebp
test
cmpsl
inc
enter
jae
jg
jo
jno
fwait
add
and
adc
mov
and
mov
fidivl
mov
push
incl
aam
mov
mov
mov
lds
xchg
add
mov
mov
or
lds
push
jno
dec
ror
in
adc
cmpb
or
ficomps
dec
scas
and
sbb
push
les
sahf
cmp
jae
pop
xchg
mov
jne
das
mov
fidivrs
lret
mov
outsb
inc
popf
xor
cmp
subl
sahf
testl
int
dec
cs
int
cmpsb
fistpl
jl
pop
mov
call
ds
mov
mov
in
cltd
sbb
or
jae
jp
pop
lods
xchg
test
jbe
cmpsb
sbb
jge
das
inc
push
sahf
out
dec
jp
sbb
out
lahf
mov
cmp
icebp
enter
sub
loopne
scas
pushf
jp
push
fadd
push
sub
insb
inc
out
out
imul
shlb
mov
inc
fbld
mov
lock
or
mov
fnstsw
mov
dec
addr16
mov
jmp
push
aad
xchg
je
shll
in
add
in
pop
push
lock
fiaddl
faddl
add
dec
out
out
pop
sar
stc
push
popf
pop
sbb
inc
dec
fnsave
ds
jge,pn
xchg
mov
pop
scas
sbb
loope
mov
push
fsubr
or
mov
xor
pop
cmp
cli
mov
arpl
and
inc
mov
sbb
mov
sbb
sbb
inc
loopne
cmp
lock
fidivs
lock
aas
add
jb
pop
or
stc
shr
xor
outsl
jg
mov
pop
mov
jne
das
shlb
sbb
pop
or
cs
or
int3
les
dec
dec
aad
cmp
in
push
pusha
xchg
sub
fisttpl
add
mov
push
mov
cmpsl
lret
out
popa
cs
int3
mov
fs
pop
jnp
loop
loop
sub
imul
popa
daa
xchg
pop
cwtl
pop
sub
mov
pushf
lahf
movsb
outsb
enter
in
inc
sub
inc
pop
sub
mov
fmul
or
dec
out
cmp
or
xlat
push
mov
adc
sub
rcr
jnp
or
jno
cmc
mov
pushf
stc
pusha
add
iret
pop
in
cmc
xchg
sub
aad
xchg
xchg
lret
cld
mov
mov
jb
mov
shlb
imul
adc
sbb
pop
or
mov
push
fwait
add
xchg
subb
repz
push
add
mov
cltd
push
and
inc
sbb
sub
loope
ds
and
push
adc
ror
or
lret
ja
dec
mov
pop
enter
mov
mov
fsubl
dec
scas
mov
movsl
ret
sub
aas
xor
inc
jp
aas
and
test
mov
fyl2xp1
cmp
sti
pop
repnz
push
cltd
sbb
je
mov
ret
ljmp
push
je
pushf
and
jno
xor
push
popf
inc
aaa
dec
repz
jmp
mov
adc
insb
pop
jbe
mov
inc
push
lods
xchg
dec
sub
std
xchg
lock
or
ja
fdivs
sbb
sti
xchg
adc
jno
inc
lods
enter
jmp
and
mov
adc
daa
pop
repnz
jg
shll
or
aad
sahf
ret
ret
aaa
fnstenv
inc
and
pop
lods
shlb
repz
cmp
fisttpll
fwait
mov
mov
in
movsb
imul
stc
fmull
jns
loopne
adcb
push
jg
xchg
fs
or
js
enter
fldl
cmpsb
fs
sbb
mov
fdiv
shrl
mov
das
ficompl
mov
sbb
fstpl
mov
push
push
aas
and
lock
jae
push
push
loopne
sbb
es
jno
lods
pop
aaa
pop
loopne
mov
cmp
rol
rcrb
shll
loopne
lock
jbe
pop
inc
and
lcall
sbb
jnp
adc
pop
sbb
aam
mov
in
sbb
push
dec
or
lcall
mov
mov
or
inc
loop
sub
rcll
and
sahf
inc
push
leave
jge
jp
out
xor
stos
push
adc
ja
mov
mov
pop
adc
sbb
sbb
cs
out
loopne
mov
lock
mov
adc
sahf
adc
mov
cmpsb
sbb
mov
lods
mov
and
into
jmp
add
dec
lock
add
mov
dec
xchg
jbe
mov
ja
pop
sbbb
fwait
ljmp
out
xor
aam
mov
mov
rorb
mov
loope
and
aad
mov
lods
push
add
lock
test
je
in
inc
popf
jae
int
out
add
push
jae
xor
loopne
mov
sub
movsb
pop
and
mov
dec
loope
sub
mov
insl
mov
sarl
mov
enter
arpl
shlb
and
mov
mov
loope
aad
sahf
add
shlb
scas
push
xchg
popa
rcr
inc
test
pop
movsl
jle
arpl
mov
fcoms
mov
pop
jae
jae
cmc
sub
test
cmc
divl
rcll
xlat
repz
lret
scas
aas
xor
lcall
dec
outsb
mov
fldenv
imul
sub
xchg
adc
xorb
das
lods
jmp
and
stc
lea
movsb
mov
ret
repnz
cmpsb
pop
xchg
mov
mov
lds
xor
aad
add
repz
loopne
sub
sub
aas
lock
add
pop
into
popa
push
adc
inc
aaa
call
icebp
adc
sub
dec
add
repnz
cmc
xchg
dec
lcall
sbb
xor
shlb
sub
xchg
add
jle
mov
push
adc
fildll
aaa
std
cmp
lret
mov
lcall
sbb
shl
mov
mov
rcrl
stos
cmp
and
dec
cwtl
cmpsl
fisttpll
sub
clc
pop
bnd
and
cmc
adc
lods
scas
sbb
popf
mov
dec
cmpl
mov
mov
push
and
add
mov
mov
add
jle
xor
ljmp
cmp
sub
pusha
shll
adc
stc
aad
sarl
das
sbb
add
cvtps2pd
mov
ja
out
cmovg
mov
test
and
cmp
cmc
xor
ret
push
jl
popa
sub
icebp
rolb
mov
and
sub
sarl
dec
notl
mov
mov
sub
pop
les
adc
pop
pop
int
out
push
out
pop
xchg
sub
gs
mov
jo
xor
inc
cmp
aaa
out
sub
inc
jmp
test
push
adc
into
aam
or
cmp
or
dec
lahf
arpl
iret
adc
inc
lock
scas
fistpll
lcall
arpl
or
pop
pop
ror
jo
mov
loop
imul
xor
decb
mov
inc
pop
cli
xchg
call
aas
mov
push
push
into
stc
mov
lods
out
jnp
adc
out
test
xor
xor
popf
cmp
mov
mov
sarb
push
pusha
xor
xchg
repz
arpl
dec
adc
xchg
mov
aaa
jge
lret
fldpi
sahf
cmc
lret
cmpsl
cld
and
inc
mov
ljmp
cmp
imul
pushf
lods
or
sbb
into
dec
imul
movsl
loope
cld
jns
sub
and
sbbb
dec
cld
imul
nop
inc
sbb
movsl
and
fidivl
pop
sbb
repnz
xchg
inc
sub
cmp
lcall
and
xor
pop
das
movsl
pop
repnz
push
pop
dec
jbe
add
cmp
dec
popa
ja
sub
mov
mov
sbb
ja
das
sbb
mov
mov
outsl
adc
das
inc
xchg
add
sub
addr16
adc
sub
daa
pop
arpl
push
jno
and
dec
fnstsw
pop
stos
fsub
cwtl
pushf
xor
jge
mov
mov
mov
and
dec
cld
push
add
daa
movsl
xor
xchg
adc
daa
cmp
and
push
fwait
imul
sub
jne
jo
aad
xor
mov
adc
inc
sub
into
enter
out
pop
mov
pop
sahf
test
icebp
leave
ljmp
in
jne
imul
mov
pop
xchg
sub
ja
mov
ficomps
cwtl
dec
mov
std
int
incl
movsb
or
mov
outsl
shrb
jp
addr16
adc
lahf
pushf
xchg
or
inc
ficompl
lods
fdivl
test
cmp
mov
inc
jo
int
jnp
bound
dec
mov
rcl
sbb
mov
pushf
dec
sub
lods
daa
sbb
rcr
push
sti
ret
add
movd
iret
mov
jle
push
into
pop
xchg
xorl
sbbb
sahf
fistpll
stos
outsb
cmp
inc
cmp
xor
lahf
xor
inc
fmul
int3
aas
push
or
arpl
nop
stos
inc
xlat
fildl
pop
call
add
adc
lods
add
fnstsw
cltd
subl
pushf
lock
adc
xor
add
notb
ret
sahf
icebp
bound
sbb
std
xchg
cmp
stos
cmpsb
push
mov
popa
xor
xchg
ss
cmp
or
cmp
ret
daa
mov
iret
or
cmp
in
push
fldenv
repnz
jnp
test
pushf
push
sub
push
sbb
mov
mov
stc
nop
nop
cld
scas
lds
lcall
fmul
pusha
in
sbb
loop
mov
adc
out
pop
lahf
iret
je
inc
int
hlt
mov
pop
pop
ljmp
push
xor
inc
rcl
pop
fcomp
dec
and
clc
icebp
shufps
and
push
in
push
popf
push
jo
rolb
mov
stc
jmp
enter
mov
cmp
mov
fxch
leave
aas
push
add
sbb
repz
mov
mov
inc
fs
dec
mov
in
push
inc
mov
frstor
lds
scas
mov
fnstenv
cmpl
xchg
mov
xlat
mov
call
andb
shlb
jno
sbb
mov
shll
pop
lods
inc
mov
jg
and
mov
mov
inc
dec
xchg
jge
pop
mov
cltd
dec
fmull
lods
daa
mov
fs
ret
cltd
nop
fisubrl
xor
imulb
push
mov
fldenv
pusha
dec
mov
pop
cmp
jnp
xor
add
jne
push
call
xchg
mov
cmpsl
ret
mov
lret
inc
inc
jg
outsb
push
les
js
in
ljmp
ja
push
loop
out
dec
ds
lods
icebp
jmp
ficomps
sub
dec
dec
adc
mov
adc
inc
imul
pop
xchg
dec
mov
test
insb
sbb
ja
mov
call
or
jo
pushf
scas
adcb
mov
cmc
inc
bnd
sbb
mov
cmp
push
xchg
add
enter
sbb
sarl
add
inc
push
loopne
shll
push
aas
fstl
inc
xlat
and
pop
insb
or
mov
xor
mov
rcll
insb
add
jne
call
js
xchg
sub
lret
or
and
in
fcomi
adc
cmc
mov
sbb
sub
mov
mov
int
in
sahf
cli
and
pop
loop
push
adc
out
dec
sbb
aas
push
xor
dec
data16
daa
sub
jo
insl
sub
cmc
sahf
repz
add
int3
pop
and
aad
jl
addr16
lahf
jecxz
dec
mov
cld
sub
test
xchg
cld
in
pop
pusha
ljmp
vmovsldup
sbb
sub
in
cld
sub
mov
mov
dec
pop
stos
mov
das
xor
aam
pusha
andb
clc
inc
dec
cld
cmp
cwtl
or
cmpsl
shr
adc
fldcw
xor
enter
adc
aad
mov
cwtl
fwait
xor
jg
rol
iret
mov
clc
sti
jecxz
movsl
mov
mov
fldenv
mov
pop
movsl
aas
loop
bound
dec
jp
dec
outsl
pop
lcall
sub
sub
inc
jne
clc
mov
push
hlt
adc
sub
hlt
or
and
adc
sbb
mov
les
adc
pop
int
mov
push
sbb
jge
sti
xchg
jo
pop
mov
dec
sbb
cmp
xor
icebp
ja
loopne
sbb
cmp
or
out
andb
xor
fcom
jo
mov
jae
pop
and
test
mov
xchg
xor
jg
stos
mov
ljmp
or
jmp
into
xchg
or
aas
test
aad
sbb
dec
and
orb
std
jo
cmp
xchg
add
dec
xrelease
loope
mov
shlb
out
inc
fcoms
pop
sbb
scas
mov
test
sbbb
enter
iret
fistpl
xor
jne
sahf
xor
enter
pushf
fs
or
mov
adc
ljmp
xchg
sarb
mov
cmc
rclb
cmp
sahf
sbb
sub
and
aaa
neg
hlt
sub
out
jae
jbe
stc
flds
xchg
bound
icebp
or
cli
test
mov
and
outsb
in
leave
int
mov
cmc
mov
dec
jl
jo
enter
push
stos
aam
lret
xchg
orl
xor
xchg
rclb
push
movsl
xchg
insl
cld
jp
mov
sub
inc
xchg
movb
out
pop
repz
lret
add
sbb
push
jbe
mov
mov
mov
outsl
andb
mov
or
movsb
enter
mov
cmc
push
das
adc
sbb
inc
jns
dec
sub
jge
xlat
sub
sbb
out
pop
xlat
push
xor
push
je
insb
xchg
ret
jbe
scas
xor
in
push
mov
movsl
int
insl
jns
insl
rcrb
jmp
sub
jge
test
loop
lods
sbb
test
pushl
loop
push
shll
mov
outsb
sub
jo
push
in
cli
int
dec
fisubrl
daa
xchg
in
pop
cwtl
testl
cmc
xor
jae
test
fldt
mov
xorb
sarl
lods
add
pop
xchg
push
jne
inc
xor
int
add
lock
sbb
inc
or
std
xchg
or
sbb
xor
push
cmp
imul
fs
or
aas
or
aam
lock
das
cmp
inc
add
adc
jmp
popa
lret
mul
cmp
adc
xchg
xchg
mov
push
aad
ret
dec
rolb
mov
inc
scas
inc
mov
and
fsts
push
sbb
sub
cmp
push
adc
mov
cmpsb
push
inc
or
jg
cmp
inc
and
fsubrl
cmpsl
pop
movsl
xor
inc
adc
xchg
push
scas
in
sub
addr16
sub
jp
test
cwtl
andb
push
aam
pushf
int
dec
mov
out
stos
lods
imul
fwait
ret
lcall
sbb
cwtl
int
cltd
arpl
outsb
add
mov
aad
faddl
int3
ss
daa
imul
mov
pop
pop
icebp
xchg
inc
movsb
jl
mov
and
inc
in
shr
cmp
and
push
push
jg
pop
sub
mov
jg
add
ret
cmpsb
int
stc
pop
hlt
push
jp
test
scas
fsubrs
loope
cmp
jg
xor
xchg
iret
jns
add
andb
jno
shlb
xchg
fcomi
into
inc
mov
jbe
test
xor
int3
cltd
lcall
sbb
fstps
push
dec
jo
inc
stos
sub
push
fbstp
shlb
repnz
ds
sub
pop
fdivl
sarl
scas
frstor
mov
movsl
loope
gs
pop
cmp
push
cmp
outsl
mov
hlt
out
adcb
sbb
mov
push
clc
inc
cwtl
jo
xlat
mov
sub
in
and
inc
je
mov
push
stos
add
jb
out
and
sahf
mov
ret
fwait
je
fsubrp
daa
and
out
push
xor
mov
lds
pop
rsqrtps
icebp
insb
ljmp
push
dec
jnp
icebp
mov
mov
fimull
loope
gs
mov
insb
rcrb
js
call
and
idiv
mov
inc
mov
ret
lea
test
cltd
pop
adc
adc
ret
mov
sub
push
inc
stos
push
mov
fstpt
lock
and
push
jae
fbstp
lea
ja
fwait
shr
lret
inc
lret
sbb
pushf
sub
pop
aaa
into
cmc
inc
jge
js
mov
test
cmp
lahf
adc
cmp
sbb
jae
stos
push
cmp
pusha
fstps
sbb
bound
xor
jle
mov
dec
mov
test
les
pusha
mov
inc
clc
fists
ja
inc
sti
xchg
jns
aaa
leave
add
rol
xchg
mov
or
rclb
hlt
mov
sub
mov
shll
aad
dec
cmp
ds
popa
jmp
aas
in
xorl
mov
cmpb
push
fildll
fucom
mov
addb
in
sbb
lret
xor
orl
cmpsl
scas
mov
loope
iret
cs
shlb
sbb
ss
pand
inc
mov
iret
lret
outsb
das
stc
ret
cmp
mov
sbb
jo
arpl
mov
rdpmc
mov
push
and
xchg
push
jae
mov
push
popa
and
mov
jno
jo
inc
xchg
addr16
mov
insl
adc
sbb
push
push
xchg
pop
xor
dec
aaa
dec
cmp
aam
sub
dec
or
xchg
sub
mov
ja
sub
out
rcrl
dec
pop
sub
sbb
inc
ja
insb
cmpsb
filds
outsb
stos
pop
jbe
push
jmp
orl
mov
movsl
xor
jae
lock
and
dec
jns
xchg
lods
mov
test
mov
mov
es
call
mov
jg
cmp
imul
popf
outsl
in
dec
aad
add
inc
repz
xchg
sub
scas
mov
cltd
jbe
mov
jmp
cltd
fwait
mov
fcoml
les
sub
std
in
std
fstl
pop
out
sub
es
mov
push
ficoml
hlt
rcr
fildl
sub
and
dec
mov
fbld
out
scas
xchg
add
pop
int
add
push
mov
movsl
ja
lretw
jge
fisubs
lods
nop
je
mov
mov
out
ficompl
scas
fs
lock
push
pop
cmp
cltd
inc
xchg
jae
and
dec
push
js
ljmp
test
pushf
xor
outsl
push
stos
notb
cld
hlt
sbb
scas
mov
push
lods
inc
rcr
xchg
imul
shr
fldenv
sbb
mov
inc
jmp
gs
xchg
mov
cmpsb
cmc
and
addl
insb
mov
mov
lahf
sbb
rcl
mov
jbe
fs
test
std
unpckhps
push
in
mov
mov
or
cs
pop
pop
loope
cld
adc
mov
rclb
cmpsl
add
stos
cmp
stos
outsl
les
out
fisubs
in
fcmovnb
fnstcw
aam
imul
icebp
imul
cltd
push
pop
mov
jmp
shlb
ds
sub
xchg
insb
jmp
push
lds
mov
sbb
mov
iret
mov
mov
fiadds
fisubs
dec
mov
sti
pop
jo
dec
movsl
pop
test
inc
fidivs
xlat
xchg
add
loopne
cmp
push
xchg
xor
cmp
fisttpl
aas
sti
pop
mov
out
mov
push
jecxz
ja
cmp
daa
ljmp
pop
pop
dec
sbb
jecxz
les
xor
lahf
aad
xlat
leave
subl
and
ljmp
mov
bnd
aaa
arpl
push
es
sti
or
bound
pushf
shl
or
sub
cmp
push
or
shrl
cli
inc
mov
ror
cmp
movsb
lret
arpl
mov
xchg
xchg
clc
outsl
sahf
nop
or
mov
cltd
xor
push
popf
ljmp
shrl
inc
dec
popa
int
pop
sbb
push
daa
jnp
xor
sub
mov
fcompl
gs
xor
xlat
xchg
xor
dec
aaa
aad
push
mov
outsl
push
out
jne
add
mov
adcl
push
frstor
inc
cwtl
idivl
into
mov
inc
pop
and
xchg
cmp
cmc
cmp
rcll
pop
arpl
sbb
dec
stos
cmp
push
fnsave
int
sahf
fsubr
mov
pop
cmpsl
in
mov
lds
repz
jg
sarl
pop
rcrl
sub
jmp
adcl
jnp
add
and
mov
mov
jne
inc
scas
add
add
xor
mov
pusha
pop
adc
sub
lods
repnz
mov
sbb
nop
or
fstpt
push
movsl
lret
outsl
aam
adc
adc
testb
ret
es
dec
sarb
outsb
add
xchg
adc
inc
push
loope
dec
sub
or
mov
mov
stos
fcmovbe
jg
and
mov
xor
ror
pop
jbe
hlt
mov
dec
mov
push
insb
aad
addr16
lods
dec
mov
loop
inc
insb
ja
test
insl
inc
pop
sbb
stos
jmp
ljmp
out
pop
cmp
test
loope
dec
lret
dec
mov
mov
fisubs
add
in
mov
aaa
sub
lock
repz
adc
lcall
sub
adc
rorb
lret
dec
xor
mov
pop
fadd
dec
ds
xor
xor
and
adc
jmp
xor
test
cmp
mov
jbe
rcll
insb
popf
pop
jne
in
bound
jecxz
test
mov
popa
mov
lahf
cmp
mov
test
xchg
sub
dec
dec
fsub
mov
xor
sub
mov
pop
daa
jl
mov
and
call
lea
pop
mov
js
or
in
pop
mov
xchg
xor
push
push
js
xor
push
mov
data16
cwtl
mov
xchg
jmp
or
call
cmp
lods
ja
adc
inc
mov
in
adc
out
mov
mov
enter
sbb
jg
jo
out
test
fnstsw
cmp
std
xchg
jp
into
inc
pusha
fmul
or
aas
shll
or
jle
inc
cltd
inc
lahf
sbb
out
push
js
and
jp
pop
add
movsl
jmp
popa
mov
ja
pop
jb
mov
jle
imul
int
loopne
testb
loope
bound
arpl
das
and
sub
push
pop
imul
lds
lock
or
xchg
mov
xchg
lea
pop
imul
jo
sub
pop
rcll
mov
into
gs
cmp
sub
bound
shrb
push
loope
ja
ja
addr16
inc
out
mov
pop
cmp
pop
ja
push
dec
loop
xor
mov
sahf
mov
pop
insl
jg
sbb
arpl
push
or
sbb
pop
lret
cmp
fcmovbe
testl
test
fs
test
xor
loope
dec
sarb
ret
sub
into
aad
aaa
outsl
mov
ucomiss
inc
or
int
inc
sub
cli
popa
jecxz
pop
es
sbb
mov
and
fmuls
je
and
js
mov
out
nop
xor
pushf
xor
inc
ret
xlat
mov
add
xlat
mov
add
xchg
int3
arpl
stos
mov
leave
lahf
dec
fwait
inc
and
into
aad
mov
sub
jns
cld
push
jnp
das
add
pop
jnp
je
cmp
adc
adc
sbb
jp
jl
in
ret
fistpl
xchg
test
js
dec
daa
filds
cmp
jmp
or
nop
je
cmc
frstor
adc
int
add
out
loopne
or
xor
pop
pop
jne,pn
fdivs
mov
and
jbe
pop
repz
mov
dec
ret
push
or
sbb
sbb
incl
jns
jp
and
adc
fcomp
ja
jns
mov
ljmp
xor
or
mov
mov
lret
xchg
and
test
data16
mov
pushf
out
dec
dec
test
hlt
xor
mov
push
jnp
test
es
sbb
jo
int3
and
xor
iret
xchg
std
xchg
or
sbb
inc
mul
fs
jno
xbegin
sub
adc
push
inc
xchg
loop
jo
ljmp
fisubrs
lret
xchg
push
jge
mov
pusha
fwait
mov
in
scas
xchg
pop
std
adc
mov
fdivl
shl
mov
xor
fwait
and
inc
push
cmpsl
in
ja
sub
daa
pusha
lds
jg
jmp
mov
and
js
lea
aaa
cwtl
pop
cmpsb
inc
xchg
push
inc
xor
lods
jne
cmc
mov
dec
lret
pop
inc
jbe
das
lods
xor
jmp
out
imul
stos
addr16
sbb
mov
imul
jecxz
cmpl
xchg
cwtl
xor
test
pop
xchg
mov
fisttpl
pusha
cmp
push
push
sub
lret
pop
push
or
ret
cmp
cmc
js
outsb
cmpsb
jmp
inc
bound
dec
in
sbb
inc
shrl
rcr
jecxz
cmp
sub
popf
xchg
cwtl
xor
jl
movsb
scas
cwtl
jno
jge
sub
mov
sub
pushf
call
or
jbe
mov
inc
in
aad
outsb
aas
mov
shlb
add
aam
cli
scas
jns
int3
dec
sbb
mov
repnz
mov
loope
js
dec
addr16
adc
cltd
cmc
jb
mov
clc
dec
jb
or
xlat
sbb
movb
stos
xchg
cmpsb
testl
es
push
dec
stos
inc
loop
shrl
xchg
cli
mov
push
jg
push
push
fbstp
ds
xchg
arpl
mov
jbe
inc
test
insl
inc
cmp
lcall
mov
clc
rcrb
or
inc
in
and
sub
xor
xor
mov
das
push
xchg
call
pop
inc
mov
das
cmp
mov
cmpsl
xchg
sti
jp
fs
das
movb
inc
addr16
arpl
push
test
mov
mov
pop
fmuls
arpl
adc
cli
mov
lods
or
xlat
jae
lock
and
xchg
popl
adc
lock
push
gs
scas
pop
loopne
mov
mov
push
xchg
sub
or
mov
mov
xchg
dec
mov
ret
shrl
dec
iret
bound
out
lock
popa
jmp
xor
mov
cmp
pop
adc
xchg
test
ss
push
xchg
pushf
sbb
jge
mov
fnsave
dec
sahf
test
xchg
outsb
add
hlt
lods
adc
lret
xor
lods
push
out
sti
xchg
sub
outsb
inc
jbe
xchg
insb
inc
fists
or
out
jecxz
jae
add
lock
ljmp
insb
jno
jo
jp
sbb
mov
ret
lret
aad
pop
comiss
jo
fmuls
cmpb
xchg
dec
push
sbb
adc
inc
mov
mov
and
loope
and
cwtl
stos
imul
jae
lret
jmp
arpl
mov
push
push
dec
sub
loop
out
leave
lea
xchg
lea
sbb
fsubr
jle
popa
cld
mov
sar
cmpsb
mov
out
movb
sbb
inc
inc
fnsave
jbe
les
inc
dec
sub
xor
jg
xor
inc
fldcw
es
cwtl
andps
or
in
mov
iret
int
mov
jge
jle
push
push
and
or
setle
and
sbb
repnz
sbb
add
xor
jno
imul
jl
arpl
mov
jae
loopne
inc
ds
jno
xchg
push
mov
pop
mov
mov
or
aam
cmp
pushf
push
jb
pop
addr16
dec
mov
ret
xor
cmp
pusha
xor
jno
xchg
pop
scas
ret
dec
pop
loope
or
cmp
inc
dec
and
mov
jno
jle
cs
inc
cmpsb
xchg
sub
pop
jno
movsb
lret
stos
into
gs
mov
imul
pop
mov
adc
nop
js
inc
mov
pop
jecxz
filds
rcrb
xchg
imul
and
cwtl
sub
jecxz
or
sti
mov
fcoml
pop
loope
sbb
sub
jmp
inc
xorb
add
dec
or
or
stos
xor
pusha
aas
jnp
ret
loope
pop
cmp
shlb
pop
outsb
notl
dec
push
test
add
push
in
ret
mov
dec
mov
rorl
add
test
inc
fsubrp
sub
adcb
mov
pop
insl
pavgw
xchg
enter
jp
cwtl
xor
and
outsb
sbb
mov
insl
cmp
cwtl
imul
aas
rcll
mov
lds
lcall
clc
hlt
adc
push
ds
fldt
imul
mov
mov
stos
aas
iret
jecxz
lret
push
or
jno
cmp
sbb
jnp
xor
pushf
pop
cmp
shll
pop
loope
mov
add
cld
test
fisubl
mov
cli
cmp
inc
adc
push
adc
aam
sbb
scas
or
cmp
pop
push
jmp
jp
cmp
jb
pop
aaa
or
test
lret
adc
imul
leave
addl
or
shrl
push
inc
gs
int
js
jbe
imul
jno
int3
lea
sbbl
out
and
ds
rcrl
lods
filds
pop
push
icebp
xor
and
icebp
xchg
or
dec
xchg
inc
fadd
ret
fdivrp
stc
inc
fsubrl
and
mov
push
test
shr
aas
jae
mov
inc
fwait
xchg
es
fsubrs
cli
aam
push
push
mov
cmp
outsb
sub
push
xchg
ja
push
jg
xor
call
sahf
nop
push
dec
mov
push
dec
cmc
shlb
add
jg
or
xchg
or
xor
gs
jns
jl
in
xchg
rorl
movsl
add
cmp
dec
and
push
push
repz
ljmp
mov
rorb
adcb
mov
cs
in
xchg
dec
hlt
jmp
mov
outsb
stos
mov
xchg
push
or
ret
lcall
dec
popa
sbb
sub
cmpb
jno
sbb
push
pop
fs
loopne
xchg
dec
std
test
repnz
pusha
fldcw
aad
or
iret
or
call
mov
mov
mov
pop
out
aaa
push
xor
jge
pop
mov
in
addr16
lods
cmp
push
out
cld
mov
xor
mov
and
pushf
jno
sbb
gs
add
pop
cmpsl
jg
mov
xor
pop
push
in
test
mov
inc
sbbl
pop
pop
imul
pop
loopne
mov
jns
pop
inc
iret
out
or
jge
rep
call
mov
bswap
push
push
mov
inc
sti
cmpsb
xlat
repz
sahf
pop
dec
cmp
xchg
call
mov
lods
xorb
mov
inc
and
jl
xchg
lods
gs
mov
xchg
sub
sti
cmp
jmp
mov
mov
insl
aaa
into
pop
sahf
or
lock
mov
xchg
or
stos
adc
dec
mov
cwtl
das
fadd
jmp
mov
pop
fdivl
add
jo
and
xchg
jne
ljmp
dec
loopne
inc
push
popf
xor
push
add
jbe
movsb
inc
out
xor
popf
xor
enter
call
addr16
pop
push
call
cli
out
mov
ficomps
jne
xor
push
iret
fisttpl
adc
dec
lcall
inc
or
sub
adc
dec
and
and
dec
adc
dec
and
loop
adc
imul
cmp
pop
insb
jp
cwtl
jmp
loope
mov
dec
dec
out
inc
sbb
fidivrl
dec
xchg
mov
shrl
call
sub
ljmp
xchg
fcmovne
xlat
rcr
das
fbld
sbb
std
test
out
cld
outsl
fadds
jge
jb
inc
push
jle
jnp
repnz
addr16
fdivrs
rolb
outsl
mov
jp
scas
ficoml
js
add
lret
dec
pop
push
add
in
mov
sub
pop
push
clc
mov
mov
cmp
mov
cli
mov
out
jmp
xorl
xchg
aam
movsb
psubsw
pop
idivl
jl
cmc
mov
je
mov
mov
shl
subl
pop
stos
or
or
ljmp
in
sub
scas
fmuls
mov
xor
cmc
pop
int
adc
test
pop
scas
cli
js
and
lcall
and
bound
sbb
sarl
lods
adc
outsl
adcl
mov
dec
addr16
mov
jo
popa
or
js
adcb
dec
jbe
inc
int3
loope
adc
loope
cmp
into
dec
fadds
xchg
iret
lods
or
jns
shr
js
or
andb
test
nop
mov
cmp
rcrl
adc
ja
pop
mov
and
addb
sub
outsb
add
mov
push
jne
loopne
pop
stos
pushf
sub
mov
add
enter
mov
es
cmp
adc
aas
pop
out
xchg
out
or
mov
adc
ja
adcl
sbb
pop
ror
mov
aas
sub
jecxz
ret
mov
jecxz
pop
flds
lcall
mov
std
mov
into
sahf
daa
int3
push
cmpsl
jb
jb
aam
loop
in
dec
bound
or
hlt
daa
ficoms
call
xor
xlat
int
js
cmpsl
jbe
mov
or
ds
pop
xchg
sbb
mov
out
addb
icebp
lea
lahf
fcomp
ds
xchg
push
mov
pushf
jecxz
jg
jecxz
lret
push
popf
lods
jne
mov
into
and
ja
dec
add
mov
dec
lock
fsubrs
mov
scas
pop
xlat
repz
pushf
lret
mov
popf
in
mov
repnz
and
cld
mov
movsl
fmuls
mov
in
fsubrs
ret
push
or
jae
push
sahf
cs
andb
cmc
in
push
fcomps
lea
les
jo
stos
or
cltd
and
mov
cmpsb
adcb
insb
sti
mov
movsl
stos
xchg
pop
repnz
iret
push
aad
into
jns
or
push
ficoms
cmp
jmp
test
je
into
xor
outsb
cmp
cli
orb
jl
add
int
js
xchg
mov
std
imul
test
pop
pop
je
cmp
insl
stos
or
cmp
sub
pop
and
add
repz
pop
adc
popf
pop
ljmp
or
cmpsl
lahf
daa
ja
mov
stos
sub
fs
jae
lcall
push
mov
call
dec
es
adc
add
mov
xlat
xchg
pop
mov
dec
push
cmc
dec
aas
inc
popa
imul
mov
lcall
and
push
outsl
ret
jnp
lcall
push
inc
call
leave
dec
out
push
jb
stos
inc
adc
pop
arpl
jae
pop
in
cmp
sub
push
ja
xor
push
lret
popa
mov
add
movsb
stos
sub
jmp
mov
adc
aad
jg
imul
outsb
inc
or
mov
mov
fsubl
dec
sub
sbb
stos
addr16
sbb
cmp
mov
daa
outsl
xor
popf
jb
and
fwait
xor
cmp
sarb
cld
rcrl
rolb
pop
lods
cmp
and
adc
dec
sub
arpl
sahf
out
lods
push
lock
das
and
ficompl
mov
mov
and
or
faddp
inc
adc
sbb
pop
mov
mov
enter
push
push
pop
mov
dec
xlat
sub
cmp
fwait
push
cmpsl
fs
push
jp
shrb
inc
dec
pop
int
cmp
fimull
mov
sub
outsl
pusha
mov
notl
jnp
outsb
ret
jl
adc
mov
leave
ss
push
lods
popa
sbb
lods
je
sti
leave
cli
mov
mov
cltd
mov
xchg
int3
or
ror
cmp
shll
xchg
cld
push
dec
fucomip
inc
fcompl
mov
out
ror
aaa
jbe
fcomps
ds
ret
pushf
sbb
dec
test
xchg
lods
cmp
pop
mov
or
psrlw
push
stc
pop
push
pop
mov
pushf
ja
jno
add
inc
in
pop
sbb
outsb
sbb
aas
in
sub
push
jecxz
inc
sti
jnp
sbb
push
push
pop
push
jae
lods
rep
and
es
lods
sub
xor
jns
in
test
fdivrl
test
lea
jecxz
add
xor
imul
repz
adc
pop
stos
enter
sbb
dec
fs
xor
pop
add
stos
mov
jno
push
nop
int
into
loop
sub
mov
mov
dec
xchg
in
pop
sbb
inc
sbb
clc
sbb
pop
sub
fs
xchg
jo
dec
mov
mov
in
and
cli
pusha
dec
fnstcw
je
mov
jne
rol
pop
daa
jg
adc
negl
js
std
pop
repz
adc
test
cli
das
sbb
scas
lret
out
cmp
cli
mov
xchg
lcall
xor
gs
dec
and
push
lods
ljmp
pushf
xor
dec
lds
neg
sti
pop
mov
push
dec
jae
pop
daa
repz
inc
cld
xchg
stos
push
inc
push
fwait
loopne
mov
rcl
adc
xor
dec
push
aad
cmp
cli
xchg
sub
incl
shll
push
repz
push
sbb
jmp
jmp
or
inc
inc
pop
push
lea
or
cmpsb
cmp
arpl
icebp
sbb
lds
push
daa
cmp
xlat
ret
jecxz
loope
movsb
fsts
inc
mov
jbe
xchg
xchg
fistl
add
cmp
fidivrl
out
notl
push
nop
push
filds
scas
fstl
jge
or
sbb
pop
outsb
cmpb
sahf
jmp
or
xchg
out
inc
jae
ret
xor
pop
mov
ss
adc
dec
xchg
int3
jp
xor
adc
fadd
je
pop
inc
and
loop
pop
cli
ja
aam
into
in
xchg
push
fists
out
popf
sub
adc
shlb
mov
xor
repnz
mov
push
xor
inc
outsb
test
sahf
jb
test
insl
sbb
add
xor
inc
jb
shrl
loope
xchg
fmulp
push
dec
mov
mov
dec
cmpsb
inc
dec
sub
mov
mov
aad
lods
std
adc
push
inc
gs
sub
repnz
mov
subl
push
mov
nop
cmp
mov
xor
mov
pop
mov
addps
cld
cs
cmpsb
push
mov
xchg
hlt
test
jbe
xor
std
inc
rolb
cmp
clc
shl
xchg
jecxz
sbbl
adc
dec
dec
mov
mov
dec
mov
shl
push
insl
cmp
pop
xor
mov
sub
cmpsb
ds
mov
pcmpgtd
mov
adc
fstpl
cld
jl
shrl
mov
xchg
inc
addr16
push
jmp
jb
mov
or
mov
les
shll
push
shlb
loope
arpl
mov
cmpsb
cmp
call
dec
inc
or
inc
push
scas
dec
popa
orl
xchg
shrl
xor
icebp
or
call
inc
lret
fucomip
push
cmpsl
incb
bt
mov
push
xchg
mov
xor
adc
xchg
sbb
jmp
mov
sub
stos
into
adc
enter
aam
shl
stc
pushf
jecxz
mov
jl
sahf
gs
js
jns
jne
in
sbb
int
shr
inc
ficoml
in
xlat
lret
add
xchg
or
push
sub
test
in
mov
imul
ljmp
xchg
js
xor
inc
aas
pop
xor
or
push
shrl
fisubrl
outsb
aam
hlt
das
cmp
dec
insb
push
adc
push
fwait
pusha
hlt
xchg
jecxz
mov
mov
insb
xor
lahf
jbe
out
enter
add
out
jno
inc
push
sub
cmp
shl
mov
or
in
loope
lds
out
stos
shr
jecxz
push
lods
stos
in
sbb
xchg
push
das
xchg
sti
bound
je
shll
rcrb
out
or
xchg
loop
es
mov
inc
cli
xor
jmp
or
addl
lock
aam
adc
xchg
push
cs
push
lods
xchg
loope
mov
mov
lahf
fcomi
int3
dec
mov
jge
mov
inc
xchg
shrl
pusha
rclb
psraw
test
ror
test
or
pop
push
lea
jg
adc
sbb
pop
pop
stc
fidivrs
test
es
pop
shlb
loop
or
mov
xchg
push
dec
pusha
ja
loopne
jecxz
dec
aaa
aad
fs
mov
fnstenv
scas
add
mov
adc
adc
call
xor
fwait
cli
mov
push
stc
aas
inc
mov
push
imul
xchg
cmpsl
and
mov
jno
aad
jo
push
and
mov
pop
pop
addr16
push
and
es
jecxz
jl
push
imul
ftst
outsb
shrl
movsl
mov
movsl
pushf
inc
dec
pop
dec
out
sub
cltd
mov
test
push
xor
xor
and
inc
loopne
in
xchg
jbe
cmp
cmp
test
jg
rcrl
adc
outsb
mov
mov
popf
inc
sub
aas
jmp
push
mov
cld
push
outsb
popf
and
push
mov
push
add
mov
mov
ret
into
push
jbe
insb
mov
gs
xchg
out
xor
sbb
aad
lods
xor
pop
cwtl
pop
mov
jecxz
jns
or
test
push
or
pop
pop
movsb
mov
mov
xor
daa
inc
insb
outsl
shlb
out
push
and
jecxz
sub
ffree
loopne
xchg
adc
test
lcall
aam
loopne
cmc
addr16
es
in
ret
test
cmc
push
imul
sub
sub
pop
aad
pop
jb
aaa
cmc
xchg
xor
adc
push
add
xor
loop
lods
pop
jbe
dec
in
mov
push
mov
data16
and
adc
outsl
shlb
cwtl
mov
sub
push
mov
lds
aam
inc
mov
test
loopne
dec
in
sbb
inc
inc
jg
lds
rorb
stc
movsb
inc
mov
daa
mov
jae
rcr
je
in
test
push
mov
fucom
sbb
fs
in
pusha
aam
test
sub
and
movsb
mov
montmul
cmpsb
ret
je
push
jo
out
xchg
adc
movsl
lret
mov
pop
std
je
or
cmp
mov
xchg
std
aas
mov
mov
add
add
aam
imul
sbb
jmp
test
mov
mov
stc
push
or
gs
lock
ljmp
addr16
lods
insb
scas
sahf
mov
or
cmpsl
push
cltd
mov
pop
lds
mov
fdivrl
lret
out
rclb
pop
cltd
insb
adc
jmp
mov
cwtl
into
in
sub
cmpsl
ljmp
mov
jo
lds
ds
add
sub
fisubrl
xchg
ficompl
lcall
das
mov
fidivl
mov
pop
jne
xorl
test
jle
cmp
das
xchg
sarb
insl
push
ljmp
fdivl
and
jg
mov
mov
std
pop
push
clc
dec
xchg
enter
stos
sbb
adc
sbb
sbb
aas
ds
xchg
xor
or
aas
inc
pop
mov
pop
das
call
mov
fldenv
push
pop
in
cltd
aaa
xor
xchg
mov
inc
jge
repnz
out
add
jle
ss
jno
pushf
mov
scas
pop
mov
sbb
sbb
outsl
mov
out
mov
cld
cmp
jno
shrl
fidivrl
gs
jne
lods
dec
in
icebp
dec
and
sub
push
or
jge
fistpl
lcall
cltd
test
fildl
insb
pushl
xchg
add
add
mov
mov
adc
aad
xchg
push
sbb
les
pop
addr16
or
mov
pushf
mov
sub
stos
and
or
clc
xchg
jo
aad
stos
ret
into
pop
mov
or
shll
shrb
xchg
fists
test
mov
xchg
sub
and
add
sahf
jae
fwait
cmc
aas
mov
jo
test
outsl
nop
mov
iret
pop
icebp
sbb
aas
mov
int3
sti
xlat
pop
hlt
in
xchg
sbb
xchg
mov
sbb
mov
jae
add
jl
xor
dec
or
mov
add
faddl
ss
arpl
std
sbb
sbbl
push
int3
lahf
ss
icebp
leave
je
cwtl
mov
cld
dec
stc
push
lods
mov
xchg
dec
out
jno
lret
int
xor
push
cs
jnp
in
dec
fdivl
fmull
mov
add
rolb
dec
mov
push
mov
xlat
mov
aad
clc
cli
or
out
int
fwait
fwait
push
out
inc
sbb
xchg
push
jns
jno
lret
insb
sub
std
aam
lock
testl
insb
fisttpl
mov
mov
or
cwtl
cmp
or
cmovl
dec
jle
cmp
sub
daa
fsubrl
imul
push
imul
das
adc
test
dec
fcomps
dec
int
cmp
fdivl
leave
shll
nop
mov
jge
or
dec
push
les
iret
fcmovnbe
inc
fs
jne
in
adcb
sbb
fmul
loope
cmp
ljmp
cmp
push
mov
and
cmp
adc
push
sub
out
pop
mov
inc
sahf
sbb
xchg
ljmp
ss
cmp
nop
mov
sub
mov
test
bound
cmp
xor
insl
mov
pop
jecxz
imul
ret
and
ret
lret
ljmp
pop
mov
xorb
fs
pop
xor
pop
aas
into
dec
jmp
jo
adc
int3
xchg
cltd
lds
inc
out
hlt
or
stos
fdivrs
push
bound
sbb
inc
mov
xchg
shrl
fmull
pop
loopne
js
inc
cmp
repnz
add
addb
out
lret
sbbb
fcmovnu
inc
iret
xchg
mov
das
lea
dec
lds
push
xchg
fimull
adc
lock
cmp
aaa
mov
xor
and
sbb
je
shl
mov
jmp
ljmp
iret
sub
das
das
adc
mov
pop
cld
inc
mov
mov
fimuls
test
shlb
mov
mov
xor
inc
add
es
insb
push
lods
push
ljmp
es
lock
cld
adcb
mov
fdivl
cmp
out
push
dec
push
push
rcl
sbb
std
dec
aad
mov
or
sub
imul
mov
in
loope
in
cmp
pop
sbb
mov
xor
pop
out
test
or
rorl
and
shrd
adc
aam
popa
jge
iret
pushf
mov
inc
xor
jb
and
xchg
call
add
mov
or
xor
aam
mov
inc
mov
in
stos
out
pop
mov
dec
stos
test
mov
imul
out
cmpsl
cmpsb
mov
cmp
loopne
mov
fdivl
sbb
or
out
lock
mov
sbb
add
cltd
mov
push
movb
sbb
int3
ljmp
sub
fiaddl
sbb
mov
pop
xchg
loop
pop
xchg
mov
cmc
jp
in
sub
mov
rcr
mov
mov
out
mov
hlt
mov
sub
jbe
das
cmp
fbstp
fs
dec
inc
dec
xor
fldenv
rcr
stos
or
adcl
mov
inc
cmpsl
pop
inc
divl
into
icebp
iret
xor
mov
xchg
dec
sbb
ds
sub
adcl
ss
inc
rorl
push
mov
movd
shrb
jno
mov
xor
arpl
push
or
fsubl
gs
ret
adcb
xlat
ror
hlt
lret
jge
lcall
push
sahf
clc
lods
stos
cmc
ja
je
dec
mov
stos
dec
or
loop
or
ljmp
mov
mov
es
cmp
negl
mov
test
mov
or
scas
pop
xchg
add
jnp
adc
pop
jbe
aad
aam
dec
pop
test
fistps
hlt
movb
out
pop
inc
fimuls
gs
or
cmp
mov
insl
adc
ret
lret
shrb
xor
mov
inc
push
or
fwait
jge
sti
xor
add
mov
xchg
and
mov
mov
popf
cmpsl
jne
push
inc
and
mov
xor
iret
repnz
bound
push
scas
inc
fcoml
fldenv
repnz
cld
dec
pop
inc
dec
xchg
loop
push
in
or
fidivrl
mull
sahf
mov
das
ja
in
mov
dec
mov
es
xchg
sub
lret
addr16
adc
pop
iret
or
sahf
clc
fistpl
mov
or
dec
shrb
shl
mov
cmp
loop
dec
mov
jg
pop
mov
xor
pop
aad
ljmp
inc
mov
jbe
insb
sarb
ret
roll
adc
pop
mov
es
push
adc
jns
and
rcll
jns
pop
xorb
push
sbb
icebp
pop
jbe
in
sub
xor
mov
mov
mov
inc
imul
out
mov
sahf
mov
cmc
pop
cmp
es
dec
loope
pop
cmp
sub
or
xlat
scas
call
mov
mull
negl
addr16
stos
pop
cmp
jns
aam
mov
in
or
pop
pop
lcall
ja
pop
mov
jno
pop
sub
mov
sub
push
icebp
out
adc
dec
les
or
xchg
test
and
adc
pop
xor
cmp
mov
dec
fst
lods
inc
pop
test
mov
and
sub
cmp
inc
int3
ja
jne
stos
test
mov
pop
mov
mov
addb
add
xor
push
jbe
cli
jo
aaa
pop
jp
push
loopne
adcb
xor
arpl
xchg
ret
aaa
aaa
rcrb
mov
aas
push
das
adc
aad
pop
mulps
idivb
add
xchg
lret
jb
push
pop
shlb
xchg
push
mov
dec
stos
mov
movsl
lds
cmpsb
std
sub
decb
daa
sbb
stos
ret
jns
push
add
arpl
mov
shl
mov
ret
fnstenv
cmp
sub
mov
push
enter
or
cltd
push
jl
adc
clc
xchg
and
push
das
std
mov
hlt
lods
push
push
rolb
out
add
cmc
jle
ja
or
call
mov
sbb
fs
or
mul
cmpsl
mov
cli
xchg
mov
xor
pop
cmp
insb
aaa
adc
loop
stc
and
sub
repz
mov
push
mov
lods
dec
xor
shrl
add
jmp
or
insl
aam
sub
sub
mov
add
jns
sub
scas
std
and
sbb
mov
cld
inc
fbld
mov
dec
mov
xor
fidivs
push
add
mov
add
mov
push
out
xor
cmp
mov
add
inc
cltd
loope
repz
jns
xor
adc
sti
out
das
in
pop
insb
repz
push
mov
enter
pop
popf
insb
clc
bound
loop
adcb
add
pop
mov
adc
adc
cmpsl
push
aas
dec
push
and
rcrb
loope
xor
dec
in
fists
xor
lock
cmp
cwtl
cs
insl
sbb
mov
inc
fdiv
adc
fxch
or
cmp
bound
ficompl
mov
push
hlt
dec
scas
dec
loop
push
push
mov
imul
xchg
dec
xchg
jnp
daa
inc
hlt
and
cld
fnstcw
pop
scas
das
loopne
pop
fwait
push
xor
test
sub
xchg
sbb
mov
icebp
jge
inc
rclb
repnz
add
push
jb
nop
sub
dec
xchg
notb
jns
imul
mov
roll
in
and
rol
in
ss
out
sahf
ds
adc
or
in
outsl
push
inc
xor
add
mov
ficompl
xor
dec
mov
gs
pop
dec
add
mov
insl
negl
jg
js
cmc
cmpsl
les
inc
mov
orl
lahf
sub
cmp
dec
jmp
clc
xchg
jb
inc
pushf
push
cmp
mov
roll
and
push
push
outsb
sbb
jnp
jp
sbb
decb
cmp
sahf
clc
pop
enter
adc
pop
mov
pop
movsb
lods
and
mov
orl
adc
ret
fucom
lods
js
repnz
aas
mov
jle
and
xchg
mov
mov
mov
or
rorl
lods
sub
ss
xor
aam
test
repz
inc
cwtl
das
mov
adc
push
and
int3
stos
daa
sarl
mov
adc
or
jno
mov
push
dec
loope
push
insl
ret
lcall
jnp
jl
int
pushl
inc
aaa
pop
cmc
adc
out
js
xlat
inc
push
adc
pop
loop
push
or
shlb
pop
push
jo
jle
cmc
and
xchg
cmpsl
xor
movsl
add
outsb
push
ss
mov
popf
xor
jno
push
adcl
iret
pop
scas
jae
int
mov
jecxz
sub
sbb
xchg
mov
dec
xrstor
mov
out
cmp
inc
lods
mov
idivl
fidivrl
inc
sub
ljmp
xchg
repnz
or
imul
lds
loope
jl
rorb
or
mov
in
rclb
xlat
sub
sbb
das
jbe
in
cmpsl
nop
ret
repz
adc
add
mov
notl
adc
jp
pmaxub
rclb
iret
sub
imul
inc
mov
pop
jb
xor
sbb
inc
data16
aad
pop
adc
xchg
js
aaa
push
stos
test
data16
movsb
repnz
shrb
fbld
mov
faddl
repnz
insl
fwait
out
fildll
inc
fnstenv
cld
sub
adc
or
es
bt
scas
call
out
mov
fwait
xchg
inc
scas
lock
adc
lcall
in
fisttpll
stos
push
jb
je
sbb
repz
add
sub
int3
popf
enter
sub
test
cmp
imul
fwait
xor
sbb
and
subb
jle
fs
aas
push
sub
in
jecxz
sbbl
add
add
mov
xchg
push
xor
mov
lret
push
add
mov
or
cwtl
out
or
mov
pop
push
ljmp
jge
cli
xor
loopne
cmp
add
insl
outsb
mov
sub
and
ds
adc
jne
in
adc
ret
cmp
test
jmp
pop
lds
pop
dec
sbb
pop
cmp
adc
sti
imul
pop
push
mov
and
data16
sbb
insb
mov
xchg
test
mov
or
ror
lret
and
out
or
mov
xchg
fildll
mov
in
mov
aas
cmpl
lea
xchg
inc
cmp
push
adc
fcmovnb
sub
push
add
sub
mov
push
lret
test
fbstp
cmpsl
pop
divb
dec
fstps
cmp
sbb
jmp
pushf
pop
add
dec
jbe
ljmp
pop
lcall
push
xor
mov
xchg
mov
mov
sub
mov
inc
gs
push
xchg
jne
lcall
jmp
dec
cwtl
rol
sarl
xchg
jno
nop
sub
xchg
dec
dec
aas
dec
add
sbb
push
les
add
add
test
xchg
xor
push
inc
pop
inc
xlat
inc
aas
or
cmc
shr
andl
sub
and
call
or
arpl
xchg
inc
inc
cmp
ljmp
pop
gs
loope
mov
lret
dec
rcrb
or
stc
or
sub
jg
std
ds
pushf
out
mov
jle
ja
std
sub
movaps
rcrb
jno
dec
cld
xlat
and
fiaddl
lods
jecxz
add
outsl
in
aam
dec
pop
inc
cmp
inc
xchg
or
fcomps
cmp
cmp
loopne
or
pop
fucomp
or
mov
test
push
movsl
sub
sahf
xchg
mov
push
sub
mov
jnp
fsubp
fdivl
notl
in
andl
hlt
loopne
aas
fwait
adc
notb
cmp
mov
ret
enter
mov
or
and
inc
sub
add
das
shl
lods
sarl
mov
cmpsb
mov
sbb
jo
icebp
mov
dec
test
inc
into
cmpsl
ljmp
fdivs
push
sub
sahf
aas
inc
mov
push
push
mov
mov
stos
cmpl
mov
mov
pop
lahf
cmp
inc
xchg
shl
sub
mov
add
sbb
jp
push
mov
ret
jmp
iret
arpl
fbstp
test
shlb
leave
inc
lret
xor
outsl
shlb
aam
bound
mov
jmp
js
sbb
mov
jo
mov
inc
cli
lahf
test
test
in
pop
dec
loop
push
jne
push
aas
negb
jno
jb
push
push
xchg
sub
je
push
adc
cmp
add
pop
jge
lea
mov
loope
mov
mov
mov
dec
sub
mov
dec
repnz
pop
xchg
dec
push
xor
je
pop
mov
xor
dec
push
push
mov
movsl
dec
in
cmp
fimull
and
mov
xchg
jns
imul
sarl
test
cwtl
cs
das
stos
cmp
arpl
das
xchg
push
sbb
out
pop
mov
jae
rolb
lods
dec
gs
nopl
adc
sbb
enter
insl
cmp
addr16
mov
into
ljmp
mov
icebp
fists
xchg
sub
jno
sub
int3
sub
add
jo
push
and
xchg
mov
in
data16
adc
add
lods
mov
mov
xor
and
and
jg
lcall
sbb
mov
out
xchg
inc
cltd
dec
fimull
sbb
dec
shl
dec
test
clc
ljmp
push
fistps
test
push
cmp
mov
xchg
nop
dec
adc
mov
call
dec
sbb
mov
test
loop
or
testl
sbb
popa
clc
add
mull
jg
addl
jecxz
je
loop
sub
mov
aam
adc
cli
ljmp
jne
pop
lods
mov
into
in
iret
mov
mov
jbe
lods
or
adc
xor
push
lahf
mov
pop
lods
mov
shrl
fildl
mov
pop
and
lea
xlat
outsb
pop
push
jmp
or
xchg
cmpsl
imul
lock
inc
outsb
les
sbb
jo
jno
lock
mov
js
pop
rolb
pop
stos
inc
dec
and
or
insl
push
loope
sub
mov
xor
xchg
fwait
jl
cli
insl
jo
movsl
test
loope
inc
sub
test
in
push
aad
addr16
xor
mov
imul
and
inc
mov
pop
pop
push
jae
imul
int
mov
cld
scas
cmp
fildll
and
sarb
sahf
addl
pop
imul
lods
test
cld
cmp
movsl
mov
in
xchg
movsb
nop
ljmp
xchg
mov
cmp
xor
outsl
int3
xor
out
adcl
pop
scas
dec
fcmovu
sub
movsl
jmp
xchg
sbb
add
mov
pushf
mov
dec
mov
cmpb
mov
and
std
aam
and
mov
ss
cmp
popf
dec
aas
iret
jb
insb
add
stos
add
mov
rcrb
pop
inc
int
scas
sub
dec
roll
lahf
fcmovne
cltd
sub
ja
jmp
cltd
cmp
repnz
lcall
aad
dec
sbb
and
nop/reserved
jmp
or
dec
push
les
push
jae
adc
lret
repz
lods
cmp
pop
insl
mov
int3
pop
jecxz
dec
xchg
mov
pop
jmp
mov
jmp
add
fistps
mov
mov
mov
cmp
sub
in
jp
pop
jmp
andb
adc
out
cltd
push
or
pop
adc
adcb
sbb
jge
rolb
jp
mov
inc
fwait
pushf
lods
fmull
movsl
sti
mov
xchg
fbstp
sub
mov
loopne
xchg
sbb
or
stc
xchg
sub
fucom
hlt
xchg
scas
ret
cld
cmpsl
imul
scas
dec
mov
pusha
fs
repz
or
pop
sbb
add
push
aam
and
stc
mov
xchg
push
pop
dec
repnz
outsb
add
xor
push
sub
inc
shlb
jecxz
inc
shlb
out
imulb
into
aas
xchg
arpl
adc
hlt
in
pop
idivl
ja
jmp
cmp
xor
adc
scas
push
jmp
pop
pushf
orl
cmpsb
repz
andb
in
lods
pop
ficompl
js
jp
dec
mov
js
lret
sub
pop
adc
mov
inc
pusha
mov
dec
mov
shlb
and
or
fdivs
mov
sarb
cs
fcmovbe
push
push
inc
loope
xchg
icebp
jle
push
repnz
fists
daa
imul
sbb
mov
in
cld
aas
shlb
push
xchg
inc
push
pusha
xor
stos
cmp
popf
mov
xor
push
bnd
je
jmp
lahf
hlt
push
or
in
xor
dec
sub
popf
sub
sub
test
dec
out
xor
mov
cmp
push
pop
test
jo
into
mov
std
int3
jae
jne
flds
stos
dec
call
stos
mov
jecxz
mov
shrb
out
jle
cmpsb
int
cmp
lods
mov
dec
loop
mov
sbb
je
lcall
pop
mov
fistpl
sar
loop
shr
xchg
pop
push
pop
cmp
testb
adc
or
inc
and
lahf
push
in
sub
cmp
fwait
jp
dec
and
cmp
rcrl
add
dec
addr16
sub
dec
ret
ret
leave
out
stc
test
iret
fldl
pop
aam
cmp
pusha
and
push
cmp
mov
andb
shll
orb
lahf
lods
clc
or
lods
cmpsl
push
dec
es
aas
cmp
test
fsubs
fldcw
or
ss
mov
pop
or
sub
mov
pop
and
jne
rcll
pop
push
ret
push
pop
addl
sub
test
xchg
pop
mov
fnstenv
xchg
hlt
outsb
adc
mov
jnp
mov
stc
iret
call
orl
cmp
into
cmp
scas
mov
jmp
test
jns
mov
lahf
mov
in
imul
push
dec
jecxz
rol
adc
push
xor
lcall
push
mov
mov
imul
sbb
int3
mov
mov
add
mov
repnz
xchg
pop
ret
iret
das
outsb
or
mov
nop
sbb
icebp
in
pusha
sbb
addr16
pop
sbb
xchg
mov
or
jb
out
ljmp
and
sbb
sbb
cltd
sbb
inc
addb
mov
es
adc
fmuls
aad
sahf
xchg
mov
repnz
push
fmuls
scas
pop
rolb
daa
pusha
cmp
mov
out
jg
inc
fildll
rcll
andl
add
out
scas
subl
add
push
jb
inc
in
sbb
gs
cmc
mov
mov
int
insb
mov
pusha
mov
inc
addl
jne
or
loopne
xor
fwait
and
aad
imul
push
cmpsl
pusha
mov
stos
mov
push
fptan
xor
popa
je
cmpb
lods
les
cmpsb
cmc
fcmovne
loope
push
lods
xchg
pop
jne
nop
xlat
bnd
stos
push
lret
inc
pop
jns
outsl
xor
and
lea
sbb
cmp
xor
lds
mov
adc
mov
fnstsw
hlt
xchg
popa
jbe
xchg
sbb
mov
cli
jns
or
and
cmp
or
jno
dec
arpl
sbb
mov
mov
dec
xor
add
or
out
or
add
cs
lds
xor
xchg
in
fidivl
xchg
mov
cmc
dec
out
jle
push
dec
icebp
lahf
jbe
mov
push
xchg
add
not
into
xchg
cwtl
rcrb
push
clc
xchg
jg
pop
movsb
imul
push
imul
out
sbb
in
shll
mov
or
xchg
xchg
shrl
sub
cmp
lea
rcr
xorb
repz
xor
lret
mov
mov
xor
lea
xchg
sbb
shrb
fnsetpm(287
push
cmp
subl
xchg
mov
daa
xor
sbbl
dec
dec
cmp
pop
mov
add
cwtl
loope
stos
pop
jne
repz
movsb
sti
cmpsb
push
cli
incl
outsb
add
pop
ljmp
jge
add
jge
mov
fwait
lcall
adc
mov
xor
in
jle
jne
push
push
int
pop
hlt
mov
fwait
mov
enter
fwait
jmp
cwtl
ret
or
sbb
pop
gs
jp
hlt
adc
je
arpl
mov
cwtl
and
xor
pop
xor
push
test
test
push
sti
test
pop
ficomps
push
mov
xchg
xchg
stos
int
inc
leave
xchg
sbb
data16
loope
add
sti
adc
jns
fnstcw
icebp
jb
popf
sub
aas
ss
lock
fs
cmpsl
out
inc
push
fwait
mov
outsl
xchg
mov
dec
sub
and
dec
cli
add
pop
mov
lcall
sarl
mov
jns
jne
pop
in
adc
arpl
xchg
shlb
mov
daa
jne
mov
xor
arpl
pop
mov
jge
jbe
scas
test
inc
sbb
insb
test
enter
dec
hlt
cld
test
jl
jne
fwait
cli
and
pop
xrelease
jle
fdiv
adc
lods
daa
lds
stos
bound
out
xor
push
jle
aam
mov
push
add
nop
inc
xlat
outsb
ja
sbb
jno
call
inc
dec
sub
mov
jl
cmp
popf
jne
inc
mov
sub
jge
sub
notb
or
push
and
fdivr
mov
sbb
fbstp
sub
movsb
mov
rol
jmp
cmc
pushf
fcmove
xorb
mov
inc
push
movsl
jbe
xchg
mov
mov
arpl
or
enter
jecxz
mov
and
mov
repz
lcall
call
scas
popf
inc
push
repnz
mov
add
call
and
add
das
push
enter
addr16
repnz
jae
cmc
sub
out
ljmp
subl
paddusw
test
sarb
mov
and
lods
in
scas
jno
movsl
repnz
rol
movsl
inc
mov
out
lahf
mov
mov
in
ds
xchg
mov
mov
xchg
ljmp
push
cmp
pop
fisttpll
xor
pop
jnp
inc
inc
bound
das
adc
mov
test
leave
inc
popa
outsl
sbb
fdivs
adc
das
and
mov
jp
mov
or
lret
jbe
push
insb
cmp
dec
lahf
loop
inc
fstps
gs
mov
jne
cld
lock
dec
sbb
sti
xor
xorb
jb
add
inc
mov
and
sbb
stos
inc
insb
xchg
aaa
dec
int3
push
push
insl
or
cmp
lret
inc
pusha
mov
arpl
and
subl
dec
sbb
das
les
or
dec
in
mov
sbb
push
loopne
call
or
icebp
es
je
push
xchg
sti
mov
cs
mov
daa
bswap
jne
stc
cmpsl
add
imul
xchg
cmpl
sbb
pop
cmp
dec
es
aaa
pop
xor
ffreep
cmp
adc
or
jb
xchg
mov
dec
and
mov
sahf
int
adcl
mov
mov
iret
data16
adc
xor
mov
outsl
cmp
mov
sub
out
push
jecxz
xchg
ss
dec
mov
fcmovnbe
ljmp
fistl
mulb
cmp
popf
cmp
iret
les
insl
loopne
pop
pop
mov
xchg
jnp
push
lods
mov
inc
fdiv
leave
popf
call
lret
mov
lcall
xlat
popf
test
lret
cmpsl
sti
rorl
mov
insl
lods
cltd
in
xchg
ret
mov
out
add
rorl
shll
out
mov
dec
fwait
ds
fcomps
lods
std
addr16
cmpb
push
lock
sbb
scas
dec
into
push
ret
adc
jns
jnp
and
adc
repnz
andl
insb
mov
and
mov
ss
or
mov
fsubrs
and
or
jno
arpl
adcl
xor
sarl
out
in
push
jne
js
mov
lods
push
imul
xor
repnz
ret
repnz
push
jns
push
shlb
sbb
push
fisubs
pop
fistpl
pop
add
dec
sbb
cmc
lods
test
mov
ss
lock
stc
mov
xchg
shll
out
push
mov
pop
xor
pop
mov
call
dec
lret
les
jl
xchg
dec
pop
and
in
stos
dec
xor
jbe
imulb
clc
add
inc
sub
mov
push
lcall
jns
cmp
inc
dec
mov
aas
sbb
frstor
cs
inc
fs
int
adc
xlat
add
testl
add
pop
adc
ds
test
leave
sub
sbb
or
mov
scas
outsl
sbb
jge
nop
ret
call
jmp
cmpsl
into
cmp
mov
dec
in
fsts
arpl
pop
pop
daa
pusha
add
pop
mov
insb
sub
repz
xor
jp
pop
sahf
lods
popa
je
cmp
push
push
jmp
cmp
fyl2x
not
cli
push
mov
movsb
add
ja
cltd
test
inc
pusha
std
movsb
and
loopne
push
xor
mov
cmpsl
test
sub
enter
fildll
iret
dec
dec
sbb
jbe
gs
mov
inc
sub
cli
ss
push
insl
clc
mov
cmp
or
push
std
mov
test
pop
daa
adc
in
xchg
sar
jge
cwtl
stos
sbb
mov
sub
xor
test
mov
scas
in
cmpsb
cmp
hlt
imul
popf
add
jb
add
dec
jo
fwait
sti
out
insl
arpl
add
jg
cmc
adc
mov
push
bnd
stos
xor
rclb
mov
mov
insb
xchg
call
insb
sub
mov
fidivs
xchg
or
xor
xchg
jnp
js
pop
adc
add
scas
inc
mov
stos
adc
int
pop
xor
out
mov
add
cmp
xor
inc
leave
das
push
fnsave
push
inc
dec
popfw
xor
push
fsubrl
dec
arpl
xor
adc
pop
cmp
add
ret
mov
ja
loopne
xor
stos
jmp
out
subl
mov
and
movsl
in
orb
push
pop
imul
pop
sub
xor
mov
dec
lcall
pop
push
aam
adcb
mov
cmp
and
sub
and
mov
adc
push
pop
lcall
and
sahf
lods
aas
dec
fidivrs
dec
pop
popa
jbe
sbb
inc
push
xor
lock
pop
mov
aam
inc
rclb
mov
jne
cmc
cli
xchg
arpl
loope
shll
rolb
cs
cld
fs
std
addb
mov
pop
ljmp
hlt
adc
jl
aad
xor
pop
cmpsl
mov
ret
jbe
out
das
stos
shlb
int
push
pop
outsb
popf
lds
insb
xor
repz
out
mov
in
dec
out
mov
jmp
mov
loopne
jg
lds
push
lds
inc
lods
shl
js
rorb
mov
cli
pushf
jb
das
sahf
push
sbb
std
dec
js
mov
in
cli
cmp
in
xor
dec
push
fcoms
push
xlat
and
cmc
cmp
xchg
inc
ss
cmpl
addb
cmc
dec
push
fldcw
push
push
ret
xchg
xchg
icebp
push
inc
and
jne
iret
dec
mov
loope
sbb
leave
push
push
push
xchg
imul
repnz
popf
gs
sbb
sub
neg
mov
push
gs
call
or
sbb
lahf
test
rolb
sbb
push
add
mov
xchg
add
in
and
jecxz
fildl
int3
fisttpl
push
mov
jg
in
dec
aad
pop
xor
xchg
adc
arpl
sub
ficoms
insl
xor
hlt
xchg
std
mov
sub
stos
pusha
mov
pop
inc
sbb
push
mov
andl
cmp
push
sub
out
rorl
lods
cmc
cld
jae
sub
mov
in
and
jmp
sbb
insl
adc
pop
out
pop
mov
sub
mov
add
dec
enter
push
and
movsb
and
fsts
cmp
cmp
jmp
lds
scas
dec
repz
mov
xor
jp
mov
jge
mov
outsb
sarb
fdivrl
leave
out
sti
fcompl
fwait
xor
leave
inc
push
and
sbb
push
hlt
mov
pop
leave
xor
lret
mov
stos
inc
ljmp
push
cmp
les
xlat
testb
fst
cmp
or
call
icebp
fwait
pop
outsb
add
lcall
jo
mov
shrl
dec
sahf
add
leave
rcll
jmp
stc
sbb
push
fisubs
stc
ret
gs
sbb
pop
jmp
cli
subl
or
hlt
lds
sub
pop
jecxz
rcrl
xchg
jp
cs
xor
adc
int3
sbb
push
push
adc
clc
pop
out
pop
push
xchg
mov
int
mov
stos
mov
mov
movsl
fld
addr16
dec
call
test
cmp
daa
loopne
test
repnz
mov
pop
jno
in
imul
push
jecxz
fs
leave
add
cli
mov
mov
adc
mov
mov
and
xor
pusha
push
jae
mov
mov
outsl
xchg
loop
ret
nop
mulb
incb
pop
ficompl
leave
xlat
inc
sub
andl
jle
xor
adc
add
aad
bound
pushf
scas
hlt
pop
jbe
push
lcall
ljmp
pusha
sbb
mov
ret
cmpsl
pop
cmpsl
jg
xchg
lods
and
into
cltd
mov
testl
dec
add
xor
nop
sbb
mov
aaa
movsl
and
cmp
lock
push
lods
add
movaps
les
ss
cld
je
xor
mov
pop
fs
repnz
sbb
testl
outsl
or
ljmp
xlat
mov
popa
push
sahf
push
in
fs
sbb
and
push
data16
loopne
add
repnz
or
dec
dec
int
jne,pt
ds
push
xchg
mov
mov
scas
fcmove
adc
and
and
cmp
fisttpl
or
cmp
cs
pop
pop
out
mov
int3
pop
lahf
es
pop
rcrb
sbb
icebp
stos
xchg
in
gs
sbb
xchg
fdivl
mov
cli
pushf
jl
adc
pop
mov
rorb
sub
mov
fcomps
mov
and
in
mov
in
insl
mov
icebp
mov
lds
and
in
fwait
ret
mov
inc
fs
mov
fnstenv
mov
fisttps
jb
test
inc
fwait
mov
scas
rcr
mov
sub
movsl
xchg
jle
inc
sbb
mov
dec
fsubr
dec
and
cmp
movb
sar
into
push
jno
stos
pop
xchg
inc
mov
mov
outsl
scas
lds
mov
lock
js
shrl
jg
cltd
jmp
sbb
pop
jns
jnp
cwtl
lcall
imul
cmc
test
std
and
cmp
dec
sub
rcrb
out
dec
cmp
sbb
sub
mov
sahf
lock
xor
push
cltd
dec
xor
push
arpl
nop
bound
es
fsts
fmuls
lods
xchg
xchg
movsb
sahf
js
dec
mov
xchg
sti
loop
ds
xchg
jo
jle
add
pop
mov
jg
mov
dec
sbb
xlat
imul
xor
jp
sub
sub
xchg
sub
jle
mov
pop
push
sbb
push
fdivrl
push
jmp
call
or
jl
add
rcrl
xor
cli
cld
pushf
popa
jl
lds
mov
push
mov
imul
and
sti
inc
lret
jne
ljmp
and
cwtl
xor
imul
es
dec
dec
and
inc
test
int
pop
mov
pop
mov
fldcw
aas
adc
push
idiv
or
or
cmp
icebp
sub
dec
js
push
mov
lahf
sub
es
cltd
xor
ret
sbbb
mov
in
test
scas
push
jne
adc
ret
xor
mov
sbb
xchg
ret
insb
mov
shlb
fnstenv
push
dec
mov
ret
insb
xor
mov
cltd
xor
roll
xor
mov
sbb
ret
cmp
inc
mov
fst
sbb
sub
xchg
pop
test
in
icebp
int3
frstor
lods
pop
cmp
pop
shll
addr16
shr
push
jae
loope
sub
jae
sub
pop
pop
ljmp
mov
cmp
jne
pop
fldcw
xchg
lret
pop
or
xor
pop
add
fsubs
cmp
aad
outsl
cli
fisubrs
orl
fs
jb
movl
pop
push
mov
cmp
xor
jns
and
fdivr
mov
daa
jl
push
inc
xchg
jmp
cmpsl
or
je
jnp
dec
ret
lret
push
inc
cmc
push
inc
aas
mov
ljmp
lahf
jmp
inc
push
mov
iret
xchg
push
pop
pop
int
push
jp
cmp
mov
stos
out
inc
sbb
add
mov
inc
adc
mov
daa
in
or
sarb
inc
fisubs
shl
in
test
sbb
dec
adc
ss
sub
leave
and
adc
insb
outsl
cmp
pusha
mull
sarl
loope
and
dec
pop
repz
xor
add
ss
inc
test
arpl
mov
jmp
sahf
cmpsb
sbbl
stc
push
cmp
mov
nop
xchg
xlat
fmul
inc
push
hlt
mov
fdivrl
movsl
cwtl
fstps
lods
iret
aad
dec
outsl
jae
fs
xchg
sub
inc
and
jmp
frstor
jmp
jnp
shrb
sub
or
fbld
push
mov
test
mov
push
into
cmp
mov
pop
mov
mov
push
mov
and
fs
jge
outsb
xchg
out
dec
call
pushf
xor
cmpxchg
cmp
mov
out
and
popa
xchg
push
xor
movsb
mov
sbb
mov
stos
and
loope
loopne
and
jg
gs
shl
lea
inc
xchg
sbb
pop
adc
mov
inc
jb
jae
pop
lret
cld
andps
mov
adc
int3
sub
and
pop
roll
sub
mov
pop
inc
aas
cmpsl
xor
mov
imul
popf
sti
in
or
shr
add
and
cmp
pop
cmp
insb
int3
stc
pop
repnz
in
repz
or
out
add
test
mov
xor
shrb
lret
imul
mov
sub
xor
shrb
mov
push
ret
mov
add
jle
in
orb
or
dec
rep
and
int
fs
mov
pop
ljmp
mov
jge
inc
jle
ja
add
dec
mov
mov
add
into
aam
pop
imul
pusha
stos
add
push
and
sub
loope
aam
test
cltd
mov
mov
mov
or
loopne
inc
ficomps
repnz
ljmp
add
out
iret
adc
mov
push
cmpsl
add
pop
std
enter
popf
movsb
jl
inc
mov
lds
enter
jge
or
lea
ret
cmpsl
fistpl
xor
push
addr16
add
test
testl
ja
mov
test
xchg
xchg
jae
aaa
sub
sbb
jo
lcall
mov
jmp
cmpsb
int
movhlps
addb
cltd
imul
sbb
flds
cmpl
dec
cmp
cmp
cmpsl
mov
xlat
pop
in
leave
add
mov
push
out
aam
aas
xor
outsl
outsl
jno
xchg
fisubs
shr
int3
fisubrs
ljmp
popa
pop
jp
jle
out
sbbl
xchg
insb
add
inc
push
fwait
ss
fsqrt
test
lret
in
out
lahf
fists
ud1
out
movsl
outsl
mov
or
cmpb
aam
mov
shrl
add
xor
sbb
add
insl
pop
data16
lods
jne
push
into
addr16
pop
cltd
or
stos
aad
cmp
mov
out
ficomps
add
sti
lds
in
fdivl
mov
or
and
adc
adc
inc
mov
cld
hlt
mov
out
add
or
sub
add
pop
pop
movsb
movb
pop
imul
les
mov
xchg
loop
jecxz
jae
pusha
shrl
icebp
dec
sbb
sub
push
test
adc
mov
rclb
pushf
rcrl
stos
stc
nop
fstp
ja
or
sbb
pusha
push
das
movb
pusha
not
aam
fwait
add
daa
jmp
pop
inc
loopne
jns
add
lods
lahf
xsha256
jmp
div
loopne
and
add
sbb
mov
in
xorl
loopne
movsl
jmp
movsb
add
test
loopne
jne
add
test
xor
loopne
xchg
das
add
movsl
pop
in
mov
jl
push
push
std
sbb
insb
sbb
vpunpckhqdq
fnstenv
mov
jns
jmp
push
pop
inc
cmc
dec
cld
js
in
and
rep
push
push
mov
sbb
mov
mov
test
cmp
xlat
xor
adcb
adc
adc
divb
add
pop
mov
es
dec
inc
fwait
mov
push
test
hlt
mov
ror
push
inc
jnp
pop
xabort
andb
xchg
aas
fmuls
mov
jnp
mov
aam
loop
cli
divl
dec
cli
adcb
mov
adc
jmp
andb
cmp
rol
push
push
mov
dec
or
inc
aas
sbb
sbb
ret
loope
push
xlat
hlt
aas
dec
mov
push
leave
pushf
mov
dec
jbe
mov
sti
xchg
adc
cmp
xchg
hlt
or
adc
xchg
test
call
pop
sarl
in
pop
mov
add
mov
outsb
xchg
xor
lds
push
mov
jbe
inc
pushf
mov
call
jnp
test
fld
jno
pushf
mov
sbb
shlb
push
lret
mov
pop
in
movsb
mov
jne
test
imul
adc
adc
lock
loop
dec
and
and
jns
xchg
dec
jno
sarb
sbb
mov
mov
pop
fwait
ljmp
leave
pusha
addr16
dec
ror
cmpsl
stos
scas
push
jle
xor
bound
stos
push
in
mov
or
js
daa
xchg
hlt
push
cmp
add
ss
das
insl
popa
das
cmp
sub
std
and
mov
imull
dec
in
mov
jp
and
into
fistpll
imul
js
cmp
pop
movsb
fmull
rcll
call
dec
jno
adc
and
popa
or
rclb
insb
sub
push
rorl
lock
push
imul
xchg
repnz
inc
cmp
subl
dec
in
ss
push
mov
pop
add
push
pop
lahf
cwtl
xchg
mov
stc
mov
and
jnp
xchg
aad
jmp
lds
xor
arpl
sub
fdivrl
clc
xchg
cltd
xor
sbb
les
pmaxub
mov
test
mov
pusha
cmpsl
xchg
dec
popa
lret
or
cmp
or
in
jmp
in
js
imul
jno
ret
push
pop
scas
fdivrl
xor
mov
xor
aas
cmp
sub
dec
loop
bound
xchg
aaa
insl
push
jmp
xor
sub
jl
lods
mov
push
daa
dec
in
xor
shlb
out
andb
mov
sarl
roll
adc
test
push
jle
inc
mov
mov
xor
inc
and
sbb
push
mov
out
add
rol
pop
push
cwtl
mov
ret
inc
std
loop
test
xchg
or
popa
sub
pop
pop
dec
fmuls
ret
mov
pop
bound
push
xlat
icebp
sbb
xor
sub
dec
adc
push
and
mov
dec
push
lret
mov
mov
fisubrl
mov
or
mov
inc
lock
pushl
repnz
clc
and
mov
cmp
stc
push
jns
cmp
mov
hlt
dec
das
jge
mov
dec
mov
shll
adc
jb
inc
xchg
fdecstp
sbb
ljmp
lock
mov
insl
test
int3
lret
movb
cmp
adc
leave
mov
xchg
adc
xor
scas
roll
hlt
pop
fimuls
pop
insb
add
pop
into
test
jge
ljmp
inc
loopne
mov
mov
sbb
pusha
mov
mov
pop
dec
fidivl
adc
gs
fimull
and
push
ja
lret
mov
inc
incl
cld
sti
fwait
xor
push
lods
lock
xor
adcl
sbb
mov
pop
and
add
inc
fbstp
xchg
xchg
adc
subb
lahf
mov
xor
xchg
inc
fcmovb
loope
adc
jp
dec
bound
jnp
imul
std
aas
mov
mov
outsl
inc
xchg
xor
popa
push
ss
into
inc
xlat
jbe
hlt
mov
jl
in
xlat
aad
mov
add
cmp
rcr
mov
pop
in
add
sbbb
cmp
sub
xchg
pop
mov
push
mov
fnstenv
cwtl
popa
cmpsb
stos
and
cmc
push
pushf
dec
push
pop
or
shl
push
rorl
xor
in
mov
jne
xor
rclb
repz
mov
cli
mov
cmp
cs
adc
dec
push
sub
fadd
jl
cmp
sub
rorb
les
js
xor
cld
jge
shlb
add
subb
pushf
xor
dec
jge
jp
mov
scas
push
xchg
inc
xchg
les
add
in
adc
lods
mov
push
imul
out
mov
push
dec
cltd
enter
dec
or
insl
push
movsb
push
test
icebp
adc
ret
les
jbe
xor
outsl
xor
pop
insb
push
inc
inc
ljmp
dec
repz
sahf
pop
testb
adc
out
add
fcompl
pop
pop
mov
inc
fldt
jmp
mov
and
mull
sub
jo
jno
adc
mov
pop
sbbb
cmpsb
test
daa
mov
add
mov
dec
scas
mov
test
iret
rcl
adc
xchg
sti
pop
pop
arpl
int3
cli
stos
mov
lahf
pop
dec
lods
cmp
cltd
in
adc
cmpsl
add
sbb
fbld
int
jle
xor
mov
jecxz
pop
push
cmpsl
add
lods
mov
mov
inc
sarl
fidivrl
cmpsl
inc
adcl
dec
insb
sub
repz
jb
jmp
insl
scas
mov
adc
and
jne
xor
add
xchg
inc
push
pop
jns
sub
cld
sbb
pop
mov
inc
pushf
jo
add
and
cwtl
popa
cmp
test
xchg
stos
enter
stc
jbe
mov
dec
dec
lock
jns
daa
sub
add
sub
inc
movsb
sub
inc
sbb
cmp
inc
rorb
or
test
or
pop
js
sbb
lcall
enter
in
cmpsl
repz
jecxz
mov
lock
adc
in
inc
cltd
test
lcall
test
arpl
push
test
outsb
jp
push
ret
mov
mov
push
xchg
movsl
add
cmp
pop
in
or
mov
adc
xlat
cmp
xchg
xchg
push
stos
add
cmp
push
mov
test
ja
cmpsl
popa
push
cmpsl
mov
jg
mov
push
sub
jno
mov
or
clc
and
mov
push
pop
popf
outsl
int
push
lods
outsl
xchg
mov
pop
xor
pop
and
pop
add
popa
pop
repnz
cmpsb
dec
in
jno
sbb
insb
add
mov
dec
fucom
mov
adc
push
lea
fidivs
psubw
fstl
lret
cmp
push
mov
mov
xchg
jmp
or
daa
adc
rcrb
shll
mov
pop
xchg
rcrb
repnz
or
and
add
xor
int
ficompl
div
fwait
push
lods
jo
pop
les
jecxz
stos
add
inc
dec
fldl
icebp
xchg
or
in
test
in
imul
int
or
pop
out
mov
and
xchg
leavew
and
jge
pusha
inc
fstpl
or
xor
lea
mov
fistps
pop
sahf
jg
add
popa
lds
mov
pop
cmp
lret
dec
stos
inc
cmpb
inc
inc
outsl
icebp
mov
xchg
and
imul
stos
es
xchg
sub
stos
push
test
les
inc
cs
lods
push
movsb
js
lret
inc
fdivr
adc
popl
pop
adc
imul
sbb
sti
xchg
xchg
fstps
lods
pop
cmpsl
rcll
test
sub
movsl
add
inc
hlt
xchg
mov
dec
sub
sbb
fstpl
pop
or
mov
push
movsl
xor
sbbb
inc
adc
or
test
push
cli
outsb
shl
dec
or
mov
out
pop
jmp
and
or
test
xor
or
test
icebp
mov
lret
cmp
cmp
and
or
sbb
pop
adc
cmp
dec
repz
shrb
bound
cmpsl
cmp
pusha
hlt
ljmp
clc
cmp
movsb
xlat
das
fwait
jo
in
and
xchg
jle
xor
adcl
jnp
sbb
outsl
inc
jl
ljmp
fwait
or
adc
shlb
ret
pop
push
pop
mov
fcmovnu
jmp
push
in
cmp
xor
fldlg2
pop
js
mov
add
adc
hlt
iret
jge
mov
inc
pop
and
int
sbb
xlat
data16
in
mov
pop
addr16
mov
pop
add
adc
stos
je
popa
xor
jbe
pop
or
shl
mov
jbe
adc
int
xor
loopne
lods
pushf
aaa
xchg
sub
inc
repnz
ret
adc
adc
add
sbb
imul
dec
decl
adc
push
rcll
mov
mov
add
sbbl
dec
dec
sbb
dec
hlt
and
xor
push
fildll
shrb
sbb
ds
lahf
cmp
sbb
dec
xlat
mov
adc
sbb
je
push
or
dec
dec
cmpsb
aam
sbb
movsl
cmp
fstpt
roll
les
aas
inc
cwtl
lock
sarb
bound
and
les
xchg
lret
insb
fldenv
xlat
jge
pop
insb
mov
ja
mov
repnz
cmpsb
test
pop
or
loop
jmp
aaa
rol
sti
sub
push
aad
rcl
dec
sub
mov
mov
aad
sub
cmpsb
cmp
scas
push
rclb
jne
jae
jae
ja
sbb
jne
add
test
pop
mov
lret
push
pop
and
das
enter
andl
mov
int
pusha
jge
fisubrs
fwait
pop
hlt
cli
nop
mov
data16
aam
jo
enter
sbb
call
push
mov
andl
aaa
cmp
testl
lret
xchg
mov
push
cmc
adc
mov
orb
push
out
sbb
adc
sub
push
dec
imul
mulb
aas
mov
int
aaa
into
jl
mov
sub
int3
xor
sahf
mov
mov
cmp
insl
push
mov
sub
cmp
mov
or
xchg
xchg
hlt
or
in
dec
outsl
push
jecxz
fistpl
xor
push
dec
sarl
add
ficompl
test
or
repnz
jb
xor
pop
aam
ret
je
pop
stos
inc
in
pop
jecxz
push
lret
xor
out
add
pop
aas
push
test
popa
xor
sbb
cwtl
xchg
nop
lret
ret
pop
scas
repnz
dec
dec
cmp
dec
inc
and
aas
ss
popa
push
push
and
cmp
imul
cmp
mov
shrl
addr16
mov
fists
or
or
jecxz
adc
rcrl
js
mov
add
dec
cli
mov
popa
mov
xor
gs
js
scas
rcrl
fucom
cmpsl
test
fmuls
and
loop
or
lds
lcall
adc
addr16
xor
xchg
roll
enter
sub
fwait
push
mov
vcvtsd2ss
adc
pop
pop
inc
int3
push
mov
mov
mov
push
lea
pop
sub
leave
lcall
jno
adc
adc
stos
push
xor
enter
pop
std
sub
stos
aas
or
jmp
adc
addr16
out
arpl
int3
loopne
enter
popa
cmpsl
ds
std
cmp
push
dec
pushf
scas
mov
push
adc
sahf
mov
clc
sbb
or
jecxz
push
dec
cmp
mov
movsb
mov
iret
or
lret
mov
iret
out
add
cmpsl
int
insl
sub
pop
cmp
lods
or
rol
popf
loop
push
mov
fldl2t
mov
jle
lret
iret
xor
mov
les
jo
call
enter
mov
xchg
push
cltd
out
outsl
sbbl
in
les
test
data16
je
hlt
movsb
mov
or
cmpsl
dec
xchg
mov
out
mov
xlat
shlb
sahf
popa
in
stos
dec
ss
pop
pop
pop
cmpsl
gs
xchg
and
inc
adc
sti
lret
movsb
xor
adc
mov
xlat
jo
add
adcb
mov
pop
imul
popf
xor
mov
outsb
out
aaa
dec
mov
mov
xor
rorl
and
fnstcw
inc
cmp
xor
out
mov
pop
gs
sub
inc
mov
dec
xorl
sbb
les
push
pop
roll
loopne
test
mov
or
es
mov
pminub
xor
fucom
fildl
adc
gs
fisubs
lods
repz
xchg
adc
or
mov
fs
pusha
repz
addr16
sbb
stc
rcll
popa
push
or
pusha
dec
push
lcall
out
cmp
outsl
call
ja
dec
sbb
mov
and
sahf
mov
je
inc
cmp
in
sub
call
call
addb
push
push
int
out
les
scas
sbb
xchg
inc
mov
ja
xor
ja
imul
mov
mov
fistpl
adc
adc
rorb
and
test
cmp
bound
cmpsl
jns
inc
sub
icebp
lock
aas
test
push
ds
outsl
jo
icebp
enter
sub
dec
lods
nop
hlt
leave
fldt
mov
outsl
push
mov
arpl
mov
lret
pop
aaa
int
les
div
push
jecxz
mov
repnz
and
xchg
push
fcoms
mov
cmp
sbb
je
imulb
mov
stos
out
mov
cltd
repnz
and
sbb
inc
gs
xchg
out
sbb
push
lret
fistl
xor
jl
fsts
cli
in
hlt
loope,pn
pop
and
imul
nop
shll
sbb
pushf
loop
nop
cmp
cltd
mov
repz
push
shlb
lea
jae
int
insb
adc
out
mov
lahf
xor
inc
outsb
pop
inc
out
mov
inc
inc
fldl
xchg
add
cmp
add
dec
sbb
lock
aad
mov
mov
lock
test
xor
mov
mov
fcomi
dec
jns
shl
popf
sbb
dec
loop
pusha
fwait
jbe
pop
imul
xor
daa
aas
pop
or
inc
sub
adc
mov
lods
stc
or
nop
sbb
mov
xchg
fsubr
dec
rcll
fsubr
xor
and
popf
xor
inc
lods
fstpt
ffree
cltd
out
clc
cs
mov
xor
add
xchg
stos
inc
js
mul
gs
lret
lret
xchg
sbb
sbb
sbb
test
push
mov
adc
inc
mov
push
or
lret
jae
icebp
cmp
pushf
cltd
xor
lahf
ss
adc
bound
int
addr16
inc
jo
sub
shl
stc
pop
das
sub
sub
or
sub
mov
ja
adc
jnp
mov
adc
lret
sub
andl
add
pop
repnz
loop
loop
sub
sbb
add
mov
pop
mov
push
rorb
add
mov
sub
push
je
enter
xchg
pop
jecxz
xor
xor
out
jae
inc
aas
sar
fmul
popa
push
fistpl
aaa
arpl
shr
shlb
clc
xchg
cmc
sub
mov
ret
bound
loop
fsubr
jnp
mov
inc
fcomps
js
stos
std
xchg
fistl
xchg
enter
imul
cmp
in
fcom
dec
push
pushl
xor
or
test
in
repz
js
and
in
js
hlt
lcall
sub
dec
dec
movsb
bound
sbb
dec
mov
loope
dec
int
push
xor
stc
jno
mov
jge
sbb
push
mov
aaa
shll
pop
inc
in
jge
mov
shll
pop
pop
jmp
xchg
sub
dec
sub
xorl
jnp
testl
xor
enter
mov
jg
loope
sbb
jb
pop
mov
mov
jmp
push
adc
adc
icebp
inc
add
sti
pop
push
rcrl
testl
push
mov
and
aaa
iret
hlt
pop
arpl
or
aas
insb
inc
sub
jmp
add
push
rcrl
xchg
iret
divl
and
mov
add
outsb
sub
insb
or
push
sbbl
or
inc
sub
cmp
cmp
fistps
shll
ret
xchg
fists
fdivl
or
add
pop
sbb
enter
jp
sbb
inc
or
jg
push
mov
fcomi
rcrl
push
fisubrl
ficoms
stos
jns
lret
inc
int3
jg
push
pop
inc
push
sub
cmp
and
sub
sbb
or
lea
mov
xlat
aaa
sarb
mov
daa
lcall
or
std
add
inc
cli
and
cs
jns
js
jns
dec
push
cs
lods
push
ds
dec
insl
inc
inc
mov
xor
repz
mov
dec
call
or
aaa
stos
mov
int
int3
cli
xchg
mov
mov
cmp
mov
andl
push
xlat
add
sbb
addr16
lods
leave
and
rol
or
cld
xor
pop
in
inc
bound
sub
pop
out
test
mov
jo
inc
addr16
adc
sbb
xor
cwtl
call
cmp
inc
pop
or
outsl
mov
sbb
nop
daa
pop
sbbl
out
sbb
mov
fstps
xor
ljmp
or
jbe
clc
xor
push
stc
mov
in
cmp
test
ret
or
pop
movsl
cmp
outsb
movsb
push
loope
lret
adc
daa
cld
outsl
xchg
ror
dec
inc
mov
out
popa
loopne
xor
xor
hlt
push
pop
loopne
pop
sbb
cmpsl
pop
mov
mov
mov
sub
add
shl
jb
in
jle
sub
rolb
push
cmp
and
aam
stos
push
jb
inc
aaa
stos
xor
inc
adc
pop
int3
mov
ret
push
lods
sbb
mov
sub
imul
imul
bound
test
out
cmpsl
int3
fisubs
dec
mov
rclb
in
sbb
dec
fadd
pop
into
jp
jp
mov
jp
cmpsb
cli
mov
fstl
or
movsl
lods
inc
rcr
fisubrs
sbb
jno
insl
jp
and
add
push
jmp
sahf
inc
add
arpl
das
add
xor
rclb
adc
jbe
dec
mulb
aaa
std
add
mov
mov
dec
sbb
in
pop
sub
jno
mov
dec
add
mov
iret
movsl
mov
xchg
aaa
loope
insl
arpl
push
sbb
pushf
iret
les
in
add
jecxz
gs
xor
and
xchg
jb
cmpsb
in
andl
jl
sbb
test
movsb
xchg
sahf
js
ret
cwtl
dec
test
sbb
push
and
mov
sub
push
in
push
and
std
inc
cltd
in
xchg
loopne
popfw
fsub
add
cmp
ret
and
loopne
inc
dec
pop
mov
jbe
jecxz
and
inc
leave
int
adc
add
dec
test
jge
mov
lcall
push
scas
cltd
notb
adc
lock
jno
vcvtss2si
test
fildll
rcr
hlt
pop
and
in
add
es
cltd
mov
push
lods
arpl
push
popf
enter
adc
ja
sub
fidivrs
pop
fstl
icebp
cmc
mov
loopne
scas
mov
fs
sub
adc
call
lcall
movsl
pop
cmpsb
mov
cmp
sub
jle
es
rolb
hlt
xor
mov
cwtl
jns
dec
ljmp
ds
and
pop
push
jb
lea
adc
aaa
aas
cmp
add
adcb
pop
adc
push
pop
cmpsb
cmpsb
sub
push
stos
addr16
push
inc
mov
push
xchg
in
fistpll
das
add
test
adcb
fdivrp
or
sahf
scas
mov
int
adc
sub
mov
xchg
xlat
mov
ret
cli
int
jge
pusha
jecxz
mov
mov
sbb
cmp
inc
in
les
iret
out
test
lods
leave
mov
es
leave
fidivrs
loope
push
mov
mov
xor
sub
cld
dec
cs
or
leave
scas
mov
rep
jge
je
sub
test
ss
inc
mov
cld
xchg
inc
or
fwait
js
mov
imulb
test
movsb
jns
jnp
cmp
cmp
sbb
lds
mov
jl
decl
test
sbb
lea
ffree
es
xchg
testb
adc
rcl
push
adc
int
clc
adc
rcl
or
pop
rorl
mov
arpl
xchg
push
push
mov
pop
push
cltd
rcl
iret
sub
rcrb
push
mov
mov
push
and
es
or
cwtl
cmp
out
test
lret
mov
fdivrl
pop
push
lds
mov
cmp
es
pop
cmp
faddp
pop
sarl
in
ds
test
xchg
enter
sub
daa
mov
push
mov
xchg
add
ss
outsb
repnz
and
sbb
jecxz
and
mov
loop
cmc
test
cmp
movsb
cmp
loope
push
adc
ss
in
xor
or
stc
cmp
jecxz
and
jl
cmp
addr16
adc
mov
jg
loop
xorl
movsb
add
sub
stos
inc
jl
jnp
xchg
popf
leave
int
lea
sbb
mov
xor
or
dec
loop
mov
movsb
cmp
pop
xor
jbe
addr16
mov
dec
dec
lcall
movsl
imul
ljmp
pushf
xor
mov
cmp
insl
xor
pop
xor
loope
notb
sbb
dec
add
popf
xor
fs
pushf
push
and
xchg
jne
data16
add
inc
mov
cmc
mov
popf
xchg
cs
jo
or
lock
es
push
shrl
sub
insb
pop
cmpsl
icebp
mov
jge
mov
fnstenv
or
testb
cmp
insl
xchg
cmpb
jge
popf
out
movsb
cmp
mov
sbb
dec
lods
inc
xlat
fisubrs
daa
mov
enter
pop
and
pop
stos
ds
jle
jns
cld
lods
inc
fiadds
push
cld
ljmp
dec
or
mov
insb
mov
sahf
ffree
push
xadd
mulb
adc
ss
enter
mov
jle
movsb
push
ljmp
mov
outsb
push
testb
fmul
pop
push
xor
outsb
data16
out
pop
mov
imul
repnz
mov
imul
sbb
pop
notb
cmp
jge
push
popf
scas
inc
shlb
lcall
and
adcb
ret
dec
mov
dec
loope
mul
jl
mov
add
inc
fwait
inc
fcom
fs
xchg
hlt
scas
inc
and
ja
cmp
inc
xchg
xchg
sub
fs
arpl
mov
das
jmp
or
mov
and
cwtl
aad
mov
mov
popf
xor
or
aad
jnp
pusha
mov
cmp
mov
mov
add
cmc
mov
movsl
cmp
ja
pushf
movsb
pop
insl
add
fbstp
scas
xor
or
sub
ljmp
mov
jecxz
sahf
jmp
int3
add
out
out
pop
scas
sbb
incb
stos
jns
loope
xchg
sub
fbstp
into
or
push
out
es
mov
lods
incb
sub
in
sti
dec
mov
dec
popf
and
fwait
out
scas
inc
sbb
jle
in
cmp
jmp
or
inc
fnstcw
jns
mov
mov
arpl
jo
popa
pop
xchg
mov
ret
mov
gs
notl
mov
mov
gs
xchg
xchg
mov
cmpl
xchg
stc
nop
ret
stos
mov
data16
xchg
xchg
and
add
fidivs
xchg
add
mov
arpl
cmpsl
xchg
cwtl
pop
mov
mov
cmpl
in
xchg
xchg
in
test
nop
add
mov
fisttpll
cwtl
adc
xchg
push
fs
orl
jns
addr16
xchg
dec
inc
xlat
jp
aaa
into
mov
mov
dec
fdivl
mov
mov
ja
push
rclb
lahf
ss
mov
shrb
fcomps
mov
xchg
mov
popa
fbstp
push
ret
mov
sahf
mov
adc
orb
dec
shlb
hlt
xchg
dec
les
mov
mov
lretw
bound
mov
and
data16
into
xchg
inc
sahf
xor
mov
data16
xchg
inc
outsb
add
les
adc
jne
or
loopne
sub
add
inc
into
mov
cmc
out
test
inc
fidivl
lahf
pop
sahf
int
push
add
mov
sbbb
dec
dec
in
dec
scas
inc
jge
sbbl
xlat
inc
addr16
jbe
cmp
jae
lods
inc
shll
outsl
push
js
xor
test
inc
xlat
enter
push
shlb
hlt
test
mov
jo
aad
iret
xchg
sub
jae
push
mov
jne
mov
lret
aaa
into
stc
jb
aaa
mov
jbe
insl
cmpsl
mov
cmp
jb
pop
mov
jbe
andl
dec
popa
clc
jl
inc
xlat
cmpsl
stos
xchg
sub
jae
daa
mov
js
mov
lods
sub
pop
mov
lret
fisttpll
or
cmc
mov
inc
fsts
mov
mov
lret
lcall
lret
imul
movsl
add
push
ss
scas
inc
clc
push
lea
movsb
mov
shrb
popf
repz
sub
jge
jnp
arpl
inc
lahf
daa
mov
xchg
ljmp
call
push
xor
cmp
push
out
out
aas
sbb
xchg
sub
push
mov
mov
lds
imul
lret
cmp
insl
lock
rolb
js
out
xchg
sahf
lret
cmp
mov
mov
fnstenv
setne
ret
jo
in
jnp
xor
mov
fld
pop
jg
dec
loopne
fstpl
mov
pop
aad
jb
enter
sbb
dec
push
xchg
sub
movsl
fwait
insl
jmp
mov
push
or
stos
in
and
mov
or
dec
in
push
int
mov
add
fists
arpl
lret
bound
pop
repz
dec
test
cwtl
icebp
mov
or
inc
in
loop
insb
mov
lcall
js
mov
scas
inc
fistpll
push
pushf
fidivs
mov
sbb
jge
loopne
or
add
inc
lea
xsha256
cmpsb
push
cmpsb
cmp
pop
mov
pop
scas
sub
or
jne
sbb
lret
mov
in
fdivl
add
ret
lcall
mov
fnstsw
push
cmovne
out
xor
repnz
xchg
js
leave
andb
ljmp
cmovno
bound
lds
xchg
stos
adc
insb
orl
or
mov
sarb
or
loop
cld
and
adc
sbb
add
xchg
fstl
loopne
sub
icebp
xor
movsb
cmp
jno
sub
in
test
les
jg
push
mov
loop
jo
inc
sub
and
lret
jle
mov
dec
shlb
int
cmpsl
cli
lcall
dec
icebp
ficoml
jo
fldl
scas
jge
dec
and
pusha
fisubl
lar
decl
xchg
icebp
sbb
push
stos
pop
lods
jb
and
gs
fstps
push
stos
repz
mov
aaa
cli
fisubs
inc
cmpsb
test
lods
jo
sbb
cmpsb
adc
xor
rorb
test
mov
fiaddl
pop
iret
and
inc
inc
lods
arpl
sbb
iret
and
sbb
popf
frstor
bound
sub
mov
or
idivb
je
inc
lcall
jnp
lcall
movsl
stc
push
mov
scas
dec
mov
xor
movsb
jecxz
ja
inc
add
shlb
in
cmp
and
ja
lds
gs
add
cs
xchg
fnstenv
and
jno
inc
fsts
mov
gs
dec
mov
inc
int3
push
movb
fsts
mov
mov
repz
int
xchg
sub
out
mov
jecxz
ret
dec
shll
ss
push
enter
push
lahf
ss
mov
push
and
popa
lds
xor
mov
dec
sub
xchg
or
xchg
fcompl
and
adcl
sbb
inc
bound
xor
xchg
or
repz
mov
fiadds
popf
mov
xor
mov
orl
cli
popa
clc
sub
adc
jmp
mov
aaa
fisubl
inc
ret
cli
and
in
rclb
fistpll
adc
sahf
sti
js
mov
cmp
les
in
jmp
or
pop
mov
mov
mov
xchg
into
inc
stos
cmp
jo
mov
sti
arpl
sub
dec
mov
jno
dec
rorl
push
push
sub
fnstenv
in
cmc
mov
sti
and
jle
jl
ja
push
fidivs
dec
in
xchg
gs
mov
push
mov
and
ljmp
pop
fldenv
fmuls
out
xor
dec
test
add
fisttpl
sbb
mov
xchg
outsl
push
mov
add
int
jmp
movsb
rcrb
ret
push
mov
mov
add
dec
pop
ret
std
xchg
sub
repnz
push
lods
fs
pop
pop
lcall
xchg
jge
adc
sub
jbe
cmpl
jno
adc
fldl
movsl
mov
push
xor
and
pop
rcll
jle
test
stos
imul
push
sub
out
jge
push
rolb
adc
dec
inc
xlat
mov
inc
rcrl
sbb
push
jbe
out
cmp
jmp
icebp
pop
in
ficoms
push
cmp
insb
lds
fisttpll
cs
sub
loopne
adc
ja
in
pop
or
cwtl
lea
add
ss
inc
fld
pop
arpl
fisttps
inc
cmp
je
lods
push
fstl
stos
aas
xor
mov
test
sub
sarb
jbe
sbb
xchg
dec
lock
mov
dec
stc
jb
aam
fcmovnb
cmp
jns
fisttpl
fiadds
inc
ss
or
inc
lahf
les
test
mov
stc
add
jo
inc
xchg
cmp
ret
xor
aad
call
inc
int3
xchg
pop
mov
loopne
imul
popa
dec
add
call
pusha
clc
and
xchg
push
pushf
xchg
movsl
add
sbb
js
fbstp
push
push
mov
mov
inc
xchg
cmp
sub
mov
dec
dec
jp
push
xchg
pop
popa
daa
inc
fwait
jae
mov
mov
ret
loopne
inc
mov
pop
dec
inc
pushf
push
add
pop
mov
or
sbb
sbb
xchg
daa
es
bound
pop
xchg
jge
xlat
inc
mov
lahf
ret
sbbb
jmp
addb
out
jb
mov
pop
testb
cmp
xchg
int
out
or
mov
sti
cmp
in
and
mov
or
jecxz
pop
ret
or
jmp
xor
and
push
jb
jp
pop
cltd
xchg
nop
daa
push
jp
stos
outsb
ja
sbb
inc
data16
inc
lock
push
pop
gs
imul
jge
push
mov
jb
popa
stc
pop
xchg
push
sti
sub
bound
out
inc
inc
popa
lods
push
push
inc
rolb
cli
mov
mov
test
lock
pop
rclb
scas
popa
loop
cs
xchg
add
inc
test
sti
mov
shr
sbb
mov
jecxz
push
aad
xchg
in
mov
push
pusha
test
xchg
jp
out
dec
mov
nop
cmpsb
pusha
sub
pop
int
cwtd
lea
xor
adc
nop
fimull
div
sub
shrl
inc
cli
dec
imul
sbbb
inc
push
xchg
add
scas
pop
or
movsl
push
sbb
aad
cmp
and
sbb
mov
hlt
cmp
int3
or
sub
dec
aas
ljmp
push
lret
dec
mov
push
into
addr16
mov
and
loop
jl
repz
cmp
mov
hlt
sbb
test
lret
and
rcrb
enter
push
ror
pop
std
fcmovnb
int3
arpl
fists
adc
add
sub
adc
xor
rcr
out
jns
ds
cmp
jbe
cld
and
in
xor
or
imul
sbb
movsl
aam
test
clc
push
sub
js
loopne
test
or
cs
das
nop
adc
cmp
or
jl
in
ficoml
mov
test
jne
mov
jns
nop
xchg
sub
add
and
lret
xor
xchg
pop
stc
test
dec
sbb
cli
test
ficoms
pop
adc
stos
push
lods
inc
addr16
adc
mov
in
sub
addb
fsubrs
inc
xor
push
repz
out
sbb
dec
mov
jmp
jg
stos
mov
out
stos
inc
in
jae
adc
jno
movsl
dec
or
push
pop
shrl
or
ljmp
ficompl
insb
pop
mov
ret
pop
push
aam
aam
sti
in
or
lds
or
out
jmp
mov
adc
sbb
xchg
adc
ss
add
sbb
adc
xor
rclb
shrb
inc
mov
mov
adc
mov
cmp
rclb
sbb
nop
dec
dec
add
pop
dec
jl
insb
push
ds
cmp
fwait
test
cwtl
icebp
lock
mov
js
leave
add
adc
xchg
jle
and
jb
ja
fwait
dec
sub
pop
bnd
lahf
xchg
jl
addb
cwtl
lods
xor
fs
lods
push
andb
lea
pop
push
scas
xor
push
fbstp
and
jno
pushf
mov
rcll
lcall
mov
stc
sbb
icebp
pop
outsb
add
and
faddl
sbb
pop
inc
test
inc
adc
mov
xchg
mov
and
adc
pop
mov
pop
add
jne
data16
lock
repnz
in
inc
iret
push
lods
loop,pn
jb
jae
xchg
cld
sbb
mov
flds
or
loop
sub
sub
out
rolb
pop
scas
jecxz
cmp
pop
add
outsl
jl
or
or
sahf
xor
or
inc
leave
shrl
out
pop
ret
fmull
add
or
orb
adc
inc
dec
mov
dec
jne
mov
inc
and
jg
pop
mov
xor
sub
cmc
sbb
into
mov
sub
punpckldq
in
cmp
adc
xchg
and
sub
inc
fidivs
shll
jae
and
js
sub
rcrl
inc
ret
inc
les
jecxz
fcmovbe
ja
vpsubb
mov
icebp
or
mov
out
push
cld
cli
inc
xlat
add
fsubs
and
rclb
mov
and
add
std
sub
and
sbb
rcrb
add
jle
movsl
pusha
mov
adc
lret
jle
cmp
push
or
fisttpll
mov
imulb
pop
test
rcrb
outsl
mov
in
test
popa
inc
lret
mov
loopne
and
cmp
mov
roll
mov
fsts
adc
fsubs
out
test
and
addb
repz
fwait
mov
or
pop
std
jns
shlb
and
into
xchg
dec
mov
xlat
cwtl
pop
daa
shlb
arpl
ret
jl
mov
ss
sti
mull
mov
cmpl
ss
lods
lcall
jg
jle
ret
fildll
sahf
test
adc
xchg
hlt
sub
shr
loopne
incl
scas
rclb
mov
jne
flds
xorl
pop
stos
mov
stc
sbb
dec
aad
cmp
jne
ret
inc
stos
xlat
adc
xchg
or
cmp
nop
pop
sbb
cmpsb
ret
les
jmp
add
push
jmp
je
call
jb
neg
inc
enter
imul
xor
pop
lea
cmpsb
pusha
xchg
pop
movsb
mov
lahf
ss
adc
cmp
push
ljmp
adc
jp
jle
pop
inc
mov
pusha
dec
out
js
sub
cmp
scas
dec
filds
add
add
pop
mov
aas
mov
jae
outsb
mov
mov
js
test
stos
sbb
fwait
xchg
dec
loopne
lahf
jl
sbb
loop,pn
nop
inc
leave
es
cld
mov
inc
ficompl
data16
add
int3
mov
mov
mov
ljmp
or
and
mov
pushf
dec
sbb
or
in
xor
out
icebp
adc
shrl
add
inc
jg
iret
push
icebp
cmp
jno
mov
lods
pop
and
addr16
enter
mov
sbb
lods
cltd
add
test
or
jno
push
test
scas
mov
pusha
pushf
movsb
aad
sti
ljmp
or
push
stc
dec
lahf
add
add
stc
xor
lahf
sub
lcall
aad
fidivs
divl
jne
or
push
inc
pop
clc
and
sbb
gs
mov
dec
mov
xchg
mov
jns
adc
cmp
xchg
sub
shr
xlat
sbbl
xchg
negb
je
scas
pushf
push
add
pop
jno
jge
fcoml
xor
mov
xchg
mov
imulb
cmpsb
sbb
push
or
push
mov
ret
frstor
clc
scas
sarl
or
sbb
mov
sbb
mov
hlt
out
and
cld
repnz
leave
cld
xchg
xlat
ljmp
mov
leave
push
rclb
sub
xchg
faddp
inc
iret
push
xor
stos
ret
mov
das
fcmovnbe
add
fs
inc
mov
mov
gs
js
lcall
xchg
adc
sub
xor
push
cmp
push
push
mov
adcl
mov
mov
fiadds
fs
fbld
mov
jmp
adc
or
mov
call
cmpb
pop
icebp
cmp
jo
filds
mov
dec
xor
push
or
mov
inc
xlat
ret
rcr
rcrl
push
out
loop,pn
test
sub
adc
add
test
sub
pusha
in
mov
jmp
shrb
in
mov
movsl
inc
fsubrl
std
es
int
add
mov
fistl
popf
insb
xor
lock
dec
out
jb
xchg
cmpsb
rorl
dec
fists
sbb
adc
adc
add
add
mov
and
or
sarb
repnz
mov
out
adc
sub
test
xor
iret
mov
mov
xchg
jns
outsb
in
cmp
fbstp
pop
adc
bound
inc
fwait
xchg
cmp
subb
jp
sub
imul
js
pop
enter
movsb
in
cmp
cmp
hlt
sbb
cmp
xor
push
cmp
pop
js
pop
out
cmpsl
push
inc
jb
push
test
lret
notb
jecxz
movl
adc
and
jbe
test
test
or
mov
cmp
cld
jbe
cmp
fimull
jnp
ret
sub
aas
cmp
jle
jecxz
dec
xor
xlat
jns
out
test
pop
mov
sub
pop
mov
push
pop
jne
jo
push
add
xor
lea
subb
fimuls
inc
shlb
jmp
adc
and
jg
xor
fcom
cs
add
push
adc
mov
ror
inc
mov
in
mov
pop
and
sahf
xchg
xchg
xchg
sbb
lahf
and
mov
pop
hlt
ja
addr16
cwtl
push
je
outsl
sbb
ss
adc
popf
cmp
and
cmp
and
gs
pop
sbb
std
pop
lahf
add
aas
sbb
movsl
popf
testl
aam
xor
clc
sub
enter
mov
inc
pop
sbb
inc
xchg
mov
ret
pop
jo
mov
adc
jecxz
cmpsl
lahf
mov
pop
stc
in
dec
mov
mov
cmp
mov
push
scas
in
cltd
jg
ret
lret
jecxz
outsl
mov
pop
mov
push
push
push
out
and
add
push
xchg
pop
sarb
jo
lods
inc
push
dec
jae
push
inc
ret
inc
stos
jbe
daa
mov
cmp
xchg
mov
cmp
dec
and
test
or
push
in
mov
pop
popf
imul
push
push
cltd
aas
cmp
filds
subl
sbb
popa
in
pop
cli
sbb
and
sbb
dec
das
in
push
and
mov
loop
adc
scas
pusha
lds
jns
fisttps
xor
mov
in
cmp
fnsave
addb
and
cmpsl
xchg
fmuls
adc
imul
mov
cs
xor
mov
or
inc
push
xor
fdivs
push
inc
cli
xchg
xchg
jbe
mov
or
jb
insl
add
xlat
outsb
filds
lret
popa
add
in
dec
loop
mov
mov
adc
add
cmpsl
icebp
and
dec
scas
sbb
pop
or
jne
xor
hlt
push
xchg
push
dec
movsl
pop
adc
sbb
dec
push
pop
lret
inc
insl
mov
dec
sub
jb
and
xchg
sbb
repz
dec
lods
xlat
cmp
fdiv
aas
mov
push
out
scas
sub
aas
add
or
push
fwait
inc
pusha
divl
mov
fistl
xchg
jle
xchg
js
pop
xchg
jle
cltd
stc
push
fsubl
movsb
ja
les
pop
push
leave
insl
mov
pop
aad
push
mov
fisttpl
mov
stos
cmp
pusha
divl
sahf
mov
xchg
or
adc
bound
sub
push
repnz
inc
mov
xor
adc
sbb
xchg
jno
mov
mov
lds
jne
int
insl
xor
nop
dec
or
cmp
jge
xor
mov
dec
push
jnp
dec
dec
push
mov
inc
push
outsb
dec
inc
scas
jg
dec
stos
inc
pop
pop
xchg
xchg
dec
jge
push
dec
pop
pop
int
push
test
arpl
faddl
mov
pushf
xchg
mov
in
jg
out
sbb
stos
xchg
dec
lds
and
incb
cmpsl
test
or
test
popa
mov
jb
xor
xchg
nop
lret
or
jo
push
gs
xchg
ja
sarb
movsl
pop
fiaddl
push
popf
aaa
lret
lds
pop
xor
pop
cld
mov
ret
push
xor
xchg
into
das
or
into
xchg
js
or
mov
mov
stc
inc
mov
mov
ficoms
aam
adc
sti
test
pop
leave
dec
pushl
push
loopne
or
aam
jmp
lods
adc
std
cmpsl
jno
fldcw
push
or
les
jge
pop
loopne
mov
lods
arpl
mov
or
cmp
or
iret
xor
jmp
cs
push
fidivs
pusha
add
push
ds
ret
xor
xchg
xchg
mov
scas
push
or
or
in
lods
jg
addr16
sbb
add
jge
push
push
or
mov
loope
pop
dec
je
dec
jge
inc
inc
xor
jo
or
push
cmp
xchg
push
mov
inc
jo
popf
test
ss
fstps
lahf
ss
cli
or
in
and
ds
movsb
mov
add
cltd
fwait
mov
ror
adc
iret
inc
bound
out
dec
lea
sbbb
mov
jle
add
in
mov
or
xor
or
mov
jnp
pop
fcompl
sbb
nop
xchg
pop
or
cwtl
cmc
mov
add
fsubs
bound
cmpsb
add
jno
scas
popa
mov
dec
les
pop
lsl
cmc
jmp
xor
adc
adc
int3
xchg
mov
lock
aam
enter
outsb
int3
mov
clc
or
jg
mov
pop
rcrb
pop
leave
mov
ss
orl
jl
xchg
inc
mov
push
gs
dec
fbstp
stos
jo
mov
arpl
cmp
jle
fwait
xor
daa
inc
sahf
test
mov
mov
dec
movsb
stos
sbb
les
loop
adc
fs
xchg
inc
out
pop
call
scas
ljmp
sub
inc
into
sub
mov
lds
xchg
ds
daa
jmp
outsl
mov
ficompl
inc
add
int3
pop
repz
mov
push
mov
mov
adc
jbe
dec
dec
mov
dec
jne
mov
pop
test
sub
pop
dec
nop
xchg
aaa
jl
and
push
xor
push
out
xchg
cmp
mov
clc
in
dec
call
scas
mov
loopne
outsb
xchg
add
and
mov
testl
xchg
inc
pop
ss
pop
add
xchg
jno
imul
outsl
test
ja
je
pop
cwtl
imul
adc
shrl
xchg
add
mov
or
mov
popa
or
xor
sbbb
and
filds
lock
aas
or
xor
loop
push
mov
sbb
push
rclb
adc
push
dec
iret
cmp
cld
dec
ljmp
pop
icebp
xchg
and
pminub
push
int
mov
packuswb
push
mov
adc
push
push
push
mov
and
inc
mov
aas
add
rorb
push
mov
cwtl
rcrb
mov
sub
mov
sbb
imul
icebp
dec
out
mov
loop
jns
jg
rcrb
in
xchg
sub
out
cmp
dec
jmp
push
getsec
mov
xor
idivl
cmpb
pop
jp
in
mov
int3
inc
xorb
outsl
aam
sub
inc
mov
negl
lcall
adc
addr16
xchg
xchg
jg
mov
or
imul
adc
push
js
cmp
into
cmp
aam
jae
repnz
and
dec
pop
cltd
jb
mov
call
test
insl
aas
sbb
sub
xchg
std
sub
xchg
jp
stos
dec
lret
cmp
mov
fimull
adc
sub
lea
cld
sbbl
push
lock
mov
pusha
add
iret
orl
or
sub
jbe
inc
int3
inc
xchg
popa
lods
push
dec
inc
les
or
sbb
mov
les
loope
xor
mov
dec
movsb
pusha
lods
sbb
sub
shll
cmp
push
xchg
sub
lods
inc
mov
and
mov
lea
aam
or
lret
xchg
pop
fists
pushf
inc
mov
add
mov
sub
push
fidivrl
inc
ret
cmp
xorb
inc
sbb
jmp
push
ss
outsl
push
or
add
out
xor
hlt
imul
mov
sbb
add
insl
imul
pushf
mov
pop
sarb
jge
adc
xor
fwait
bound
xchg
xchg
mov
out
inc
xlat
or
mov
cmp
pop
cmc
pop
pop
aad
mov
scas
scas
repz
iret
lcall
and
movl
enter
stc
insb
add
sbb
stos
dec
dec
mov
jle
xor
lahf
lahf
test
rol
dec
out
repnz
pop
and
outsb
add
ja
mov
cwtl
cwtl
add
jmp
and
aas
cmp
aad
pusha
out
xchg
mov
mov
pushf
in
jp
adc
and
aaa
xor
stos
pusha
neg
imul
jle
das
sub
pushf
xor
mov
lds
neg
outsl
sub
testb
popf
adc
into
lret
cld
out
xor
and
cmpsl
ds
inc
push
out
jno
pop
mov
out
and
sbb
cltd
dec
cmp
mov
stos
js
fstpl
ds
std
cwtl
das
das
jno
clc
bound
ss
popa
inc
ficoms
mov
fsubp
or
data16
jbe
cmp
outsl
xchg
test
leave
nop
dec
loopne
ljmp
adc
ret
adc
adc
lret
sti
lcall
mov
icebp
jno
fsubl
arpl
push
fnsave
lea
sub
popf
pop
fucomip
adcb
jmp
or
mov
rcrl
movsl
adc
imul
lock
xchg
jns
outsb
stos
mov
cmc
dec
sti
inc
in
xorl
imul
loope
aad
mov
icebp
push
out
filds
adc
add
outsl
mov
jae
nop
inc
fld
push
add
sbb
stos
mov
xchg
sbb
ds
cmc
pop
and
clc
ja
xorl
or
lcall
inc
push
pop
or
push
push
xchg
jo
jp
jg
add
sti
add
sub
or
nop
fwait
cmp
and
mov
ds
in
jno
rcrb
in
push
sahf
mov
xchg
std
loope
inc
cltd
add
adc
lods
fidivs
arpl
repz
arpl
shll
sub
daa
jb
out
push
mov
vorps
insl
ret
sbb
push
xchg
pop
test
mov
in
rcrl
push
out
clc
mov
xlat
dec
out
dec
or
pop
pushl
add
imul
daa
xlat
add
adc
mov
arpl
in
cmp
adc
cmp
push
mov
ficoml
lret
aaa
cmp
add
lret
pop
sbb
lds
jo
ret
xchg
nop
stc
and
fisubl
sbb
enter
inc
hlt
mov
push
aas
insb
mov
ficompl
xchg
movsl
incl
mov
xchg
inc
and
aas
or
bound
dec
push
sbb
jbe
or
mov
imul
out
or
push
mov
sahf
pop
int3
lock
and
data16
lea
shlb
sbb
adc
mov
xchg
xor
push
imul
inc
pop
mov
jp
xor
adc
push
jmp
inc
outsl
mov
inc
repnz
lret
and
lret
xor
popa
andb
mov
js
cltd
mov
cmp
push
xchg
and
inc
add
inc
rclb
sete
jmp
mov
inc
push
imul
push
fcompl
ljmp
fldl
inc
sti
xchg
push
in
filds
andb
push
rcrb
in
iret
clc
into
mov
fst
or
lea
mov
adc
call
inc
fldt
sub
mov
js
lret
shrl
sbb
std
lea
pushl
inc
stc
xor
push
out
shl
mov
lds
inc
mov
mov
es
dec
shrl
int
cmpsl
mov
dec
mov
inc
push
sbb
out
jecxz
mov
jge
xchg
or
xlat
sub
xchg
sub
fdivr
xchg
into
shll
and
lret
jg
fsubs
leave
jecxz
push
aad
xor
and
out
popf
fcom
pop
lock
and
sub
push
push
pop
inc
xlat
sarb
inc
pop
mov
movsb
movsl
xor
test
jmp
push
sbb
inc
aad
cld
aaa
jge
adc
jp
inc
dec
ret
lcall
sub
stos
sub
leave
mov
jbe
jecxz
cmp
jb
movnti
inc
add
loope
jg
add
sub
jns
xlat
nop
sbb
outsb
pop
scas
lahf
jmp
jmp
hlt
movsl
ja
test
aam
sub
ret
push
shll
adc
test
jbe
jp
fisubrl
out
xchg
stos
mov
jle
movsl
scas
xor
push
jecxz
and
push
dec
repnz
loopne
cs
repnz
jp
xor
jno
cmp
jnp
push
jno
arpl
xor
jb
cmpsb
daa
sub
jnp
ss
stc
outsb
repz
mov
in
push
negb
ljmp
mov
clc
movsb
sub
aas
das
mov
xchg
imul
lods
adc
inc
addr16
or
push
aam
mov
filds
imul
add
pop
or
sahf
inc
cmp
bound
xor
gs
push
cld
inc
jnp
jno
xchg
pop
mov
xor
mov
popf
jno
mov
stc
repz
fs
out
outsl
repnz
sahf
psrlw
mov
gs
hlt
mov
bnd
outsl
call
cmp
mov
mov
das
push
daa
std
pop
mov
cmp
xchg
jne
sub
les
loope
mov
mov
test
mov
pop
and
movsb
sub
aaa
loop
test
std
bound
movsl
sub
dec
adc
mov
pop
movsb
in
movsl
sub
push
sti
mov
loop
fistps
sub
pop
sarl
cld
mov
adcb
push
sti
pop
sti
cld
nop
push
rolb
sub
mov
pop
add
mov
push
sti
push
mov
jecxz
mov
xor
mov
mov
es
ret
inc
stos
sub
fs
lahf
cld
pop
sbb
inc
scas
sub
mov
cmp
lcall
push
pop
or
daa
test
mov
ds
inc
push
mov
in
outsb
in
pop
aam
add
aam
add
fildl
roll
mov
cmpsb
pop
aam
hlt
jo
pop
ret
pusha
test
test
rolb
leave
cld
sub
mov
jmp
loop
int3
insl
in
shl
or
mov
mov
lods
cmp
sub
and
mov
movsb
lea
pop
and
fsubl
mov
jecxz
test
movsb
dec
je
inc
mov
inc
adc
add
stc
pop
pop
mov
lea
xchg
inc
daa
sarl
cmp
mov
xchg
pop
roll
or
push
mov
popf
ss
dec
iret
mov
out
adc
and
leave
sub
xor
nop
inc
xchg
sub
pop
sarl
and
sub
xor
xor
xchg
inc
push
xchg
and
inc
push
imul
adc
dec
xor
pop
xchg
push
and
les
addr16
sbb
jne
hlt
sbb
aaa
das
cmpsl
dec
fiaddl
aad
xchg
sbb
push
outsl
out
cltd
popa
cmc
push
jbe
mov
or
scas
daa
int3
push
adcl
inc
sbb
in
pop
loop
sbb
lahf
sti
xchg
roll
add
push
lds
fwait
inc
jb
push
fs
push
xor
push
test
icebp
pop
aas
fwait
dec
push
cmp
push
cli
int
cmp
add
in
jae
push
xor
inc
sti
ljmp
cmp
jae
scas
mov
xchg
or
pop
dec
packsswb
inc
inc
jae
lret
dec
in
shrb
rcll
in
movhlps
imul
mov
mov
inc
or
test
dec
xchg
xchg
sarb
cmp
orl
insl
add
pop
mov
ss
ja
outsl
es
pushf
and
sarb
xor
in
add
mov
shr
xor
adc
or
iret
xchg
pop
mov
mov
xor
cli
gs
cmc
sbb
mov
scas
mov
pop
add
mov
add
arpl
mov
scas
xchg
cmp
lea
mov
ljmp
mov
mov
fwait
inc
xor
or
pop
and
mov
aaa
cltd
mov
cmpsl
sub
test
sarl
les
int
fwait
and
iret
das
mov
cmpsl
and
mov
mov
orb
xor
sbbl
hlt
push
pop
and
nop
jmp
into
cmp
orl
lea
iret
cltd
andl
loopne
xor
xor
lcall
iret
and
hlt
scas
das
lcall
mov
test
out
outsl
jno
inc
or
and
dec
xchg
lds
sbb
icebp
pusha
and
cmp
stos
sub
ret
lock
xchg
dec
mov
adc
jns
aas
dec
push
mov
lods
lock
jb
pop
cld
hlt
imul
cwtl
out
jg
and
cmp
push
xor
cmpsb
cmpsl
sub
cmp
mov
rolb
xchg
mov
test
js
jno
aam
or
repz
pop
cld
cmc
or
inc
adc
addr16
xor
aad
lret
sub
sahf
or
pop
pop
add
sarl
jae
pop
cmp
sub
or
int
and
inc
mov
inc
leave
cltd
daa
mov
adc
imul
xchg
cmp
cld
sub
push
out
mov
push
cmp
xchg
push
xor
sarb
or
mov
mov
fidivrs
add
out
jo
or
xchg
push
rcll
repz
mov
sbb
out
sub
ret
add
push
ret
jp
and
cmp
xchg
shll
adc
xchg
mov
add
pop
mov
mov
mov
jo
int
mov
jno
jl
or
mov
push
add
fadd
xchg
into
pop
lcall
aam
arpl
movsl
mov
and
pop
sbb
movsb
cmp
cmp
lahf
dec
mov
push
iret
push
std
lock
arpl
jecxz
mov
push
mov
or
in
cmp
stos
xor
push
ret
lahf
jo
in
into
lcall
xchg
data16
rcrb
loop
stc
adc
cli
jg
std
js
adc
push
or
insl
adc
mov
and
mov
xor
outsb
mov
and
shll
push
mov
cltd
aaa
ret
rol
xchg
cmpsl
sbb
cwtl
pop
sarb
push
mull
out
std
maxps
call
inc
adc
movsl
pop
std
popa
and
scas
sub
pop
jle
cs
inc
push
sub
gs
aaa
xor
xor
pop
add
pop
and
pusha
sarb
push
test
xlat
add
xor
add
sbb
pop
pusha
inc
fnstenv
loope
jnp
cltd
orl
clc
pop
lea
enter
movsl
mov
mov
fdivrp
jno
push
sbb
loope
jl
adc
fmuls
cmp
shrl
inc
lods
js
out
cltd
mov
jg
mov
sti
gs
mov
sbb
aas
dec
roll
call
repz
pop
mov
cltd
inc
inc
and
loop
sub
cmp
lock
inc
fisubrl
fbstp
nop
int
sti
cwtl
int
hlt
jmp
lcall
jle
orl
pop
popa
cmp
jge
mov
pop
add
out
scas
sti
jne
test
adc
int3
mov
pop
cmp
push
ret
or
pop
lcall
jmp
lock
movsb
sti
push
dec
iret
std
pop
push
xchg
bswap
in
sub
loope
sbb
leave
dec
or
mov
cmpsl
xor
adc
mov
loopne
pop
incb
pop
das
mov
ret
pop
insl
dec
in
jle
jne
iret
arpl
in
lds
push
stos
xor
jnp
mov
sahf
filds
outsl
repz
pop
mov
enter
mov
outsb
hlt
andb
and
ficomps
ret
sub
add
xlat
lods
test
xor
movsb
sbb
push
dec
add
cmpsb
test
add
mov
mov
mov
std
pop
fstpl
leave
mov
out
xchg
pop
or
enter
lods
data16
shl
jns
decb
pop
fwait
push
les
insb
fbstp
stos
xchg
aaa
xor
int
in
and
push
cli
gs
inc
mov
pop
mov
test
das
lods
std
jns
call
pop
stc
scas
es
pop
mov
pop
pusha
dec
sub
out
or
adc
push
push
mov
dec
pop
dec
fisttps
mov
mov
scas
orb
data16
pop
ret
xchg
orl
bound
pushl
movsl
jnp
into
mov
pusha
jmp
dec
inc
or
mov
push
or
shll
adc
inc
or
movsl
jno
fnstsw
xchg
xchg
cmp
sub
sub
dec
pinsrw
jne
inc
xchg
out
call
sbb
mov
movsb
push
add
lds
add
pop
dec
pop
xchg
sbb
sti
insl
jle
lahf
sub
pop
pop
rol
xchg
lea
std
or
das
scas
and
adcl
jge
adc
xor
ds
flds
inc
sahf
rorl
push
and
push
push
or
mov
dec
adc
xor
mov
mov
sbb
cwtl
adc
lahf
jae
cmp
pop
and
pop
loopne
jle
inc
pop
jecxz
lock
notb
sbb
ret
or
clc
sub
test
xlat
dec
or
mov
push
mov
cmpsb
push
lret
mov
mov
dec
or
pop
sub
int
out
pop
jnp
out
imul
cmp
leave
test
nop
les
in
adc
xor
mov
in
test
idivb
movsl
or
aas
movsl
ss
jp
adc
inc
sbb
lods
mov
cs
pop
imul
xchg
fisttps
xchg
inc
jbe
lock
xchg
pushf
cmp
test
cmpsl
xor
lahf
mov
push
into
lods
fsubrl
pop
aaa
das
mov
daa
addr16
inc
add
fdivl
cs
jno
jb
adc
push
sti
loop
icebp
pop
in
mull
cmpsb
add
push
pop
add
mov
mov
adc
xchg
int3
xchg
aas
dec
cltd
cmp
out
lea
mov
es
inc
jmp
pop
adc
std
pop
rclb
jl
cmovb
and
or
cmp
fs
fwait
xchg
inc
sub
mov
lock
cmpsl
das
and
cmp
or
mov
jecxz
jmp
ret
mov
flds
or
push
sti
adc
testl
pop
ljmp
into
shll
or
lods
dec
outsl
addl
sarb
mov
mov
push
inc
mov
outsl
xor
daa
push
or
pop
popa
in
add
inc
or
push
sti
popf
jno
and
aaa
cltd
jmp
aam
jge
mov
add
aam
pop
leave
xchg
adcb
inc
fdivs
sahf
fcoms
mov
sbb
inc
mov
test
mov
xchg
inc
mov
and
jl
add
lcall
pop
cld
or
mov
pop
ja
xor
jl
xor
jo
fwait
das
adc
push
adc
roll
rcrl
lock
push
ljmp
cmp
jp
stos
das
ss
mov
mov
mov
push
ss
jnp
dec
mov
mov
adcb
lods
or
push
sbb
rorl
loop
shr
push
xchg
movl
sti
xchg
fisttpll
lods
xchg
cmp
pop
call
xor
and
mov
push
cmp
jle
jg
aad
jp
test
insl
jbe
mov
mov
leave
fsubr
repnz
or
movsl
mov
fisubs
das
out
adc
push
fsubl
add
or
xchg
cmp
mov
insb
out
hlt
mov
ja
add
push
add
pop
jb
jb
lcall
fldenv
aas
cmc
push
cmp
stc
inc
adc
int3
enter
outsl
call
mov
repnz
stos
sub
mov
lahf
sub
js
adc
es
pushf
out
adc
cmp
adc
scas
jl
popf
and
xor
sub
push
jg
es
jo
ja
into
ret
pop
add
xchg
add
inc
aam
push
mov
or
imul
les
mov
jmp
or
inc
pop
fs
jp
mov
js
xlat
outsb
cltd
jmp
sarl
dec
fnstcw
pop
dec
adc
pushfw
inc
mov
lods
int
nop
aad
mov
lds
mov
cmpsb
or
negb
movsl
pop
ret
scas
xor
inc
or
xchg
sbbb
pop
xorl
mov
pop
data16
jb
jae
icebp
ljmp
mov
negl
test
andl
data16
xchg
cs
ret
add
or
test
lcall
out
jno
lods
mov
and
jp
ss
xchg
or
fcom
add
mov
imul
mov
mov
jp
cltd
jp
in
clc
jmp
add
dec
adc
push
loope
mov
mov
js
xchg
lock
repz
cmp
mov
sub
or
sub
inc
jmp
mov
rorl
adc
pop
ljmp
repz
test
sub
add
xor
xor
enter
cli
nop
cmp
lods
push
stc
prefetch
or
add
sbb
mov
imul
fildl
js
rcrb
loopne
jg
or
out
insl
mov
jp
in
loope
das
or
inc
cmp
push
xor
negb
stos
jmp
cltd
adc
lods
cmc
into
cs
loop
pop
pop
adc
int
jp
sbb
out
icebp
jle
aaa
or
mov
and
cmpsb
sub
xor
jne
mov
fs
dec
pop
loopne
xchg
inc
cltd
stc
add
popf
ret
inc
out
outsb
pop
cltd
pop
std
leave
xchg
lret
xlat
jge
adc
lcall
xor
dec
or
sahf
jno
sbb
add
testb
iret
call
hlt
nop
inc
push
mov
outsb
testl
mov
fildll
or
or
aas
push
jge
outsb
and
mov
scas
pop
sbbb
js
fst
sbb
ret
or
jne
pop
inc
fimull
scas
inc
or
push
stc
cmpsb
xchg
insb
cmc
sub
add
data16
std
fdivl
pop
mov
mov
inc
test
mov
lds
ret
xor
jg
jae
jmp
test
ret
mov
dec
pusha
ret
cwtl
test
adc
mov
push
xchg
sub
mov
test
cmp
fnstsw
sub
sbb
jmp
xchg
pmullw
sbb
adc
or
mov
fadds
lret
enter
adc
test
arpl
jb
adc
xchg
push
into
clc
iret
cmp
imul
xor
jbe
mov
sbb
cmpsb
xor
sarl
and
sbb
push
xchg
cmp
mov
adc
jmp
cmp
stos
daa
icebp
daa
and
push
xlat
mov
or
and
mov
inc
xor
je
lahf
xor
popa
adcl
lea
adcl
cmpsl
adc
pop
daa
dec
cmpsl
xor
cmp
inc
push
dec
push
mov
lea
call
xchg
cmpsb
ds
popf
outsl
nop
aaa
sub
push
aad
ds
int
dec
sub
sahf
insl
or
add
mov
or
add
dec
adc
mov
push
icebp
aad
push
push
out
jne
dec
cltd
inc
xor
mov
hlt
daa
test
jecxz
add
xor
xchg
icebp
clc
or
xchg
call
push
stos
fstpt
inc
mov
popf
inc
leave
cli
jecxz
add
call
insb
loop
outsl
out
mov
loop
mov
test
shrl
lods
dec
insb
ja
or
push
and
lahf
stc
nop
iret
pop
inc
fisttpll
loopne
cltd
jbe
or
xor
pop
scas
xor
mov
and
mov
out
nop
cmp
sub
jo
add
or
negb
pop
dec
adc
mov
sbb
ss
jb
bound
into
xchg
cli
pop
orb
mov
jecxz
jb
xchg
lret
pop
mov
and
jno
inc
xlat
js
mov
sbbb
mov
mov
pop
lds
mull
cmpsl
pusha
repz
push
jecxz
rorb
pusha
hlt
sti
lret
jb
pop
out
xor
pushf
cmp
xchg
xchg
inc
sbb
add
push
js
in
ja
adc
mov
xchg
cmp
mov
push
mov
mov
mov
jne
neg
cmc
push
es
cld
in
xor
pop
out
stc
and
dec
jbe
mov
sub
and
xor
sbb
jnp
loope
pop
pusha
out
bound
pop
push
push
inc
sbb
push
test
insl
sbb
xor
lret
sub
inc
aam
or
inc
or
ja
mov
leave
xchg
popf
idivb
rcrb
dec
addl
scas
in
mov
mov
aaa
xchg
add
mov
test
cwtl
add
ds
or
and
sub
aas
cld
pop
daa
call
int3
lahf
cmp
sarl
jge
sti
pop
add
out
pop
sbb
repnz
loope
rcll
inc
loope
xchg
inc
dec
adc
push
add
cwtl
test
ja
movswl
xchg
arpl
daa
mov
jl
jmp
cmp
insb
daa
jnp
add
or
pop
lods
sub
mov
lahf
clc
pop
cmp
mov
fldcw
mov
popf
xchg
test
and
and
cmp
rcll
mov
es
mov
push
rcll
imul
xor
loopne
pop
shll
popa
fs
pusha
out
xchg
cmp
repz
mov
cmp
imul
incb
enter
lds
aaa
cwtl
lahf
mov
xlat
ja
arpl
xchg
cmp
mov
inc
cmpsl
in
push
cld
mov
pop
mov
add
in
loopne
mov
xchg
cltd
pusha
mov
loopne
pop
pop
testb
jge
xor
int3
xchg
cmc
and
mov
and
pop
jne
jl
xor
les
gs
fs
jne
addr16
lret
bound
push
push
cld
shr
pop
aaa
adc
pop
into
and
fs
inc
xchg
movsb
mov
test
mov
movsb
sub
cmpsb
xchg
imul
rcrl
mov
mov
mov
push
adc
out
xchg
xor
dec
inc
or
cmc
sahf
inc
pop
jmp
fwait
inc
pop
out
add
lods
mov
push
mov
and
pop
in
mov
sbb
or
dec
outsb
repnz
cs
cmpsb
push
push
sub
lods
mov
dec
or
dec
or
adc
hlt
mov
mov
hlt
js
lea
icebp
ret
xchg
cmp
push
adc
data16
jge
adc
jmp
push
mov
cmpsb
pop
icebp
aad
adc
in
mov
cltd
loopne
fiadds
mov
cmp
cltd
cmpsl
mov
popf
add
jnp
popa
pop
mov
cwtl
js
inc
fmul
inc
or
cmovae
xchg
lock
mov
inc
psllw
jle
imul
insb
out
adc
dec
jp
out
inc
adc
cld
adcb
enter
arpl
push
leave
mov
sti
mov
gs
faddl
cs
pop
cmpb
xchg
outsl
shrl
mov
out
jo
cmp
test
adc
mov
jmp
ficomps
pop
ljmp
mov
or
ja
mov
ljmp
cmp
pop
fwait
icebp
push
je
arpl
jecxz
pop
sti
ds
mov
dec
es
nop
xor
sub
push
add
sti
pop
ljmp
addb
cmp
js
fisttps
inc
adc
std
pop
rclb
adc
sub
ret
std
roll
pmulhuw
mov
push
add
negl
mov
inc
mov
push
sahf
pop
push
mov
popf
jae
and
fcmovnu
outsl
or
mov
xchg
cmp
int3
xchg
sahf
mov
cmpsl
cs
push
es
sbb
cmp
push
call
xlat
jnp
lds
jg
stc
inc
pop
add
push
call
inc
push
jmp
es
xor
scas
das
bound
push
dec
jne
inc
lcall
pop
cmpsl
and
push
xor
cmp
inc
je
mov
daa
mov
loopne
cmp
mov
addr16
icebp
mov
pusha
xor
push
push
subb
inc
mov
outsl
mov
adc
fldl
sti
xchg
repnz
shr
arpl
and
aaa
push
clc
sahf
ja
xor
sbb
scas
cmp
pop
mov
sarl
jmp
dec
fwait
stos
mov
ror
jmp
popa
je
sub
imul
aad
rcl
mov
orl
jno
cld
pop
jge
xchg
loop
or
rorb
leave
inc
push
cmp
jo
push
add
xchg
jg
filds
sbb
jno
xchg
dec
pop
into
mov
cwtl
aas
inc
mov
insl
hlt
cmpsl
mov
movsb
daa
xchg
shlb
sub
mov
in
add
push
sti
push
fwait
mov
bound
aad
in
dec
xor
xchg
mov
fiaddl
addl
mov
lret
jmpw
push
stc
ret
imul
pop
je
addr16
jb
add
in
push
ja
mov
mov
icebp
sub
cmp
xchg
push
dec
punpckldq
fiaddl
cmp
jo
cmpsl
sub
sub
test
adc
les
sbb
or
daa
mov
cmc
pop
das
popf
inc
dec
cmp
roll
aaa
cwtl
fmull
sti
or
inc
inc
mov
push
jmp
imul
jg
lods
dec
cmp
pop
mov
aam
test
jae
out
inc
clc
cmp
scas
fwait
iret
mov
das
adc
mov
test
out
xchg
lds
pop
jne
xchg
loopne
mov
stos
sarb
cmp
sbb
sbb
scas
and
push
stos
fisttpll
xor
daa
lods
push
jnp
aam
xlat
pop
push
dec
pop
call
add
cltd
scas
xor
dec
or
mov
fstpl
fiadds
lods
jns
adc
js
insl
repnz
outsl
cmc
pop
push
jae
notb
cld
lods
daa
pop
dec
aad
xorb
adc
inc
adc
fldz
push
pop
repz
and
out
inc
sbb
filds
adc
inc
or
push
es
adc
and
pop
pop
mov
mov
dec
sbb
cmpsb
pop
or
xchg
mov
mov
decl
cmp
clc
sahf
pushf
inc
pop
out
adc
mov
lods
cs
outsw
dec
adc
call
gs
je
pop
pop
jmp
lcall
mov
pop
orb
or
lcall
sarl
rcr
fs
pop
pusha
jns
pusha
push
jle
sub
imul
xchg
inc
mov
jno
lds
adc
pop
pushf
repnz
sbbb
lods
inc
test
scas
or
push
sti
test
mov
cmp
insb
adc
pop
ja
outsl
hlt
inc
data16
xlat
xchg
icebp
pop
rolb
adc
jmp
xchg
xor
lcall
or
shr
stos
stos
adc
lahf
inc
fsubrp
or
mov
jbe
repnz
clc
push
mov
cmpsb
mulb
pmaxub
subb
jmp
mov
imul
mov
jne
int
jg
icebp
pop
ds
mov
mov
cmpsl
pusha
repnz
sbb
mov
or
pop
sarl
subb
sti
pop
dec
jne
jno
xchg
cmp
and
push
call
aaa
inc
xlat
jle
sub
pop
jge
scas
xor
mov
push
sti
vmovntps
repz
insl
push
sbb
ds
inc
or
aas
or
popa
push
adc
stc
roll
jno
mov
gs
lock
or
cmpsb
and
xchg
ds
xor
mov
lcall
add
in
mov
shrl
cmp
fists
mov
in
lcall
stos
jb
cmpsl
insl
adc
xor
push
xchg
sub
mov
int
jle
out
adc
cmp
sbb
bnd
add
pop
cmp
jmp
jp
pop
cmc
mov
dec
test
or
mov
stc
in
ret
out
aad
jl
push
jns
popa
or
push
clc
adc
cmpsb
sub
inc
dec
adc
mov
mov
fidivs
ja
dec
jo
sbb
scas
int3
cmp
das
xor
cld
xchg
mov
iret
daa
mov
fisubrs
add
les
xchg
cs
add
rorl
xlat
push
ss
aas
icebp
dec
push
add
add
addr16
adc
fisttpl
jmp
mov
xor
add
push
jne
cmpsl
and
fcomp
xor
roll
xchg
adc
mov
inc
mov
dec
pop
inc
dec
adc
push
in
push
int3
call
dec
lds
inc
sbb
mov
inc
mov
iret
mov
call
xchg
xchg
jmp
adc
cmp
sarb
xor
leave
adc
insl
and
insl
jge
mov
mov
aaa
mov
scas
aam
movsl
inc
mov
sahf
mov
int3
repnz
aad
inc
call
in
jno
inc
xor
call
add
jle
jmp
mov
das
xor
adc
pop
cmpsl
xor
scas
fstpt
jnp
mov
mov
int3
lods
aad
mov
mov
jns
push
repnz
enter
jecxz
push
rorl
repz
xchg
xchg
pop
or
pop
ret
loopne
loop
divl
fwait
pushf
sti
cld
pop
xchg
lds
jecxz
fwait
xchg
inc
mov
mov
mov
xchg
test
mov
dec
out
xor
outsl
cmp
sub
fistl
cmpsl
sbbb
fldl
das
outsb
mov
icebp
cmp
repnz
pop
mov
cmp
pop
push
push
je
and
flds
xchg
aaa
or
pop
mov
loopne
inc
or
je
xor
pop
sub
or
xor
imul
adc
fadd
xchg
int
push
mov
mov
es
call
mov
cltd
push
push
leave
adc
rep
dec
add
test
test
mulb
mov
outsl
jmp
mov
fdivrl
pusha
hlt
push
jbe
cmp
int
aaa
leave
xor
jnp
aad
sub
rolb
lods
fidivrs
lcall
push
xchg
cltd
cmp
fs
mov
arpl
rorl
fs
ret
xchg
cs
jle
xor
fstpl
inc
enter
mov
inc
test
push
outsb
xor
mov
aam
stc
pop
or
ss
orb
mov
adc
in
or
sahf
mov
mov
and
xchg
test
loope
and
arpl
push
xor
mov
test
stc
aad
pop
stc
cmp
insl
jmp
pop
xchg
mov
stos
sarl
scas
leave
lea
dec
mov
jl
adc
sti
popf
fildl
cltd
push
adc
or
pop
inc
fistl
mov
rorl
popa
xchg
cmp
push
push
leave
jo
flds
xlat
orl
adc
js
mov
dec
insl
psrld
popf
mov
mov
inc
std
fsincos
dec
ljmp
jns
mov
outsb
mov
inc
adc
xchg
dec
std
cwtl
das
das
jno
movsl
push
cmp
movsl
mov
mov
jp
sbb
popa
clc
jbe
sbbl
sbb
sbb
fisubs
stos
hlt
scas
push
inc
out
shrb
loopne
mov
scas
std
data16
mov
jb
sbb
scas
dec
jbe
iret
cmpsb
stos
ss
ss
call
stc
repnz
jge
jmp
and
jns
rorb
and
push
inc
mov
out
mov
pusha
pop
aaa
out
push
cwtl
pop
cmp
pop
dec
sbb
cmp
out
addr16
call
push
add
cmp
lods
and
add
cmp
pop
push
inc
or
inc
push
cmp
or
push
mov
mov
or
shrl
je
jbe
jbe
stos
cwtl
cmp
shufps
push
mov
test
pop
lock
movsl
adc
pop
mov
scas
nop
flds
mov
sub
inc
cmpsb
cld
pop
or
dec
or
pusha
out
repnz
or
popa
jmp
pop
lea
imul
out
xor
cltd
jl
xorl
pop
adcb
insb
in
daa
mov
mov
fisttpl
jmp
xchg
inc
dec
icebp
sub
pop
xchg
or
stos
xchg
jb
mov
stc
pop
loopne
or
hlt
pop
jle
inc
ljmp
std
sti
pop
cli
mov
cmpsb
add
imul
aas
lcall
ret
and
cmp
je
cmpb
or
jmp
lcall
lret
add
sub
mov
testl
xchg
test
scas
xor
pop
inc
pop
or
pop
or
add
cmpsb
sub
push
lret
es
fwait
ss
mov
lods
xor
stos
iret
fiaddl
xchg
sbb
xchg
enter
and
mov
jecxz
scas
lods
inc
or
add
pop
and
mov
jge
jg
je
aam
rolb
popf
add
pop
repnz
and
push
sbb
dec
je
fldenv
pusha
div
mov
jg
dec
adc
insb
inc
imul
xchg
mov
adc
inc
or
cmp
xchg
pop
dec
in
mov
lods
call
or
and
pop
push
ljmp
jno
fbld
nop
daa
xor
in
sub
scas
inc
xchg
lcall
and
sub
aas
and
lahf
jg
pop
hlt
jne
es
enter
and
cltd
xor
mov
outsl
xchg
adcb
nop
aad
ret
xor
push
ds
test
xchg
fidivl
mov
mov
fmull
or
imul
mov
mov
fcoml
or
das
jo
popa
sub
pop
pop
orb
lods
aad
inc
pop
iret
add
pop
and
mov
jl
jg
jae
aam
iret
push
popf
add
pop
repnz
and
push
sbb
dec
jae
fldenv
pusha
div
mov
jg
dec
adc
insb
inc
push
xor
repz
mov
test
adc
jno
or
cmp
xchg
pop
dec
in
mov
lods
out
insb
add
or
and
pop
push
ljmp
jno
fisubs
es
in
sub
lods
inc
test
lcall
and
sub
aas
and
sahf
jle
pop
hlt
jne
and
adc
icebp
inc
fisubl
ljmp
jne
mov
outsl
xchg
jg
enter
ret
xor
in
mov
cmp
adc
ret
mov
fmull
or
imul
mov
lret
mov
mov
push
call
pop
outsl
push
pusha
sub
pop
pop
orl
inc
push
iret
add
pop
and
mov
jnp
jle
jae
aam
into
add
repnz
and
push
pop
jp
dec
jb
fldenv
les
cmc
mov
jg
dec
adc
insb
inc
imul
push
out
mov
test
pminub
or
cmp
xchg
pop
dec
in
mov
lods
out
insb
add
pop
xor
and
pop
push
ljmp
jno
fisubs
es
in
sub
inc
test
jge
lret
fcomps
jmp
aad
dec
pop
sahf
jle
pop
repz
and
adc
icebp
inc
fisubl
jmp
popa
clc
jne
mov
outsb
xchg
jg
enter
shr
xor
jecxz
mov
adc
ret
lds
fisttpl
aaa
adc
add
xor
mov
fistl
or
cmpsb
cmp
pusha
daa
les
orl
inc
push
into
add
pop
and
mov
jp
jle
jb
aam
int
pushf
inc
pop
repnz
pop
and
push
push
jp
dec
jno
fldenv
ret
pusha
div
mov
jg
inc
pmullw
popf
xor
mov
adc
inc
pop
xor
cmp
xchg
pop
dec
in
mov
lods
in
insb
add
push
xor
and
pop
push
ljmp
jno
frstor
es
in
sub
inc
test
cltd
jl
lret
xlat
popf
and
sub
ds
dec
pop
sahf
jge
pop
repz
and
adc
lock
fisubl
call
popa
clc
je
mov
insl
xchg
jg
mov
imul
popf
xor
loop
mov
mov
cmpsl
data16
fnstenv
xchg
lds
fimull
ss
add
xor
mov
ficoml
or
cmpsb
cmp
pop
les
orb
stos
shrl
xchg
es
pusha
pop
pop
pop
mov
jns
jle
jno
aam
int3
add
repnz
push
and
dec
adc
inc
fldenv
ret
repz
jg
inc
push
aad
inc
addr16
xor
popa
repz
mov
test
or
xor
aaa
pusha
clc
xchg
pop
dec
in
mov
lods
in
insb
add
add
mov
das
pop
push
ljmp
jno
fsubl
es
mul
jnp
push
lods
inc
orl
jnp
lret
pushf
and
sub
ds
dec
pop
sahf
jl
pop
repz
and
adc
out
inc
fisubl
out
das
sbb
clc
jae
mov
insb
xchg
jg
aam
mov
loope
mov
cmp
cmpsl
gs
jo
xchg
lds
xor
push
pop
xchg
lret
mov
mov
push
call
add
outsl
push
pop
and
lea
js
jns
shrb
xchg
std
and
pop
mov
js
jle
jo
aam
lret
add
repnz
jp
inc
outsl
inc
fldenv
shll
mov
jg
inc
or
popf
xor
pusha
repz
mov
test
or
jno
add
clc
xchg
push
dec
in
mov
lods
jecxz
insb
add
add
int3
xor
push
push
ljmp
jno
es
jnp
push
lods
inc
orb
jp
lret
aad
and
sub
ds
dec
pop
sahf
jnp
pop
repz
and
adc
out
inc
ficompl
out
das
sbb
clc
jb
mov
imul
imul
repnz
cmp
cmpsl
fs
fnstenv
test
lds
fmuls
xor
lods
sub
pop
xchg
lret
mov
scas
fcoms
or
cmpsb
cmp
pop
and
pop
push
jle
and
ja
jns
shrl
xchg
cld
and
pusha
push
sbb
out
test
lret
sti
rcrl
sbb
mov
inc
outsb
inc
fstps
shlb
mov
jg
inc
or
insb
ds
xor
pop
repz
mov
test
or
jno
add
xor
push
dec
in
mov
lods
loop
insb
add
add
and
dec
test
subb
pop
sar
es
dec
lods
inc
orl
aam
and
daa
in
ds
dec
pop
sahf
jp
pop
repz
and
adc
in
inc
ficompl
in
das
pop
inc
popa
clc
jno
mov
push
jg
les
popf
xor
fcomip
mov
cmp
cmpsl
arpl
lds
xlat
dec
jecxz
xor
add
xor
mov
mov
scas
xlat
push
call
add
outsl
push
pop
and
pop
push
jge
and
jbe
jns
shrb
xchg
sti
and
pusha
push
sbb
mov
jbe
jle
outsb
cmp
pushf
cli
rcrb
sbb
dec
adc
inc
insl
inc
fstps
mov
mov
ljmp
insb
cmp
pop
repz
mov
test
or
jno
add
xor
clc
push
dec
in
mov
lods
loope
insb
add
add
and
test
jg
jno
fldenv
es
in
es
lods
inc
addb
js
lret
cltd
and
es
ds
dec
pop
sahf
jns
pop
rep
lcall
ret
ficompl
aas
popa
clc
jo
mov
imul
popf
xor
fdivp
mov
cmp
cmpsl
bound
lds
dec
jecxz
xor
add
xor
mov
mov
lods
push
call
add
outsl
push
pop
and
pop
push
jl
and
jne
jns
iret
stos
inc
add
add
push
sbb
mov
jne
jle
insl
cmp
pushf
stc
mov
and
dec
adc
inc
insb
inc
fstps
mov
mov
jmp
or
insb
cmp
popf
xor
pop
repz
mov
test
or
jno
add
xor
mov
test
insb
add
add
and
push
push
ljmp
jno
fcomps
es
in
and
inc
add
rcrb
jmp
aad
inc
pop
sahf
js
pop
rep
cltd
and
adc
jmp
ficompl
cwtl
das
adc
ss
push
mov
imul
repnz
aaa
mov
cmpsl
popa
mov
jo
subb
mov
testl
bound
push
pop
xorl
mov
mov
lods
aad
call
add
outsl
push
pop
and
pop
push
jnp
and
je
jns
into
stos
inc
add
add
push
sbb
mov
je
jle
insb
cmp
pushf
clc
mov
and
dec
adc
inc
imul
arpl
imul
mov
dec
call
or
insb
cmp
xor
pop
repz
scas
adc
cmp
xor
xor
lea
in
scas
push
lods
fbld
xor
and
push
push
ljmp
jno
xlat
sahf
pop
sar
es
in
and
lods
inc
jle
add
rcll
jmp
aad
inc
pop
sahf
ja
pop
rep
cwtl
and
adc
ljmp
adc
popa
clc
outsb
xor
jg
rorl
xor
fdiv
mov
ss
cmpsl
pusha
mov
jo
subl
mov
aam
jecxz
xor
add
xor
mov
mov
stos
aam
call
jmp
outsl
push
pop
and
pop
push
jns
and
jae
jp
int3
stos
inc
inc
add
push
sbb
mov
jb
jg
push
aad
lds
popf
idivb
mov
inc
imul
xchg
mov
mov
out
adcb
pop
insl
cmp
xor
mov
adc
cmp
xor
xor
nop
mov
in
lods
pop
scas
fisubs
xor
and
push
push
ljmp
jno
popf
pop
iret
testl
inc
jge
add
rclb
jmp
aad
inc
pop
sahf
jbe
pop
rep
xchg
and
adc
loope
das
adc
clc
insl
xor
dec
data16
rolb
xor
fcomi
mov
adc
mov
fcomi
mov
das
adc
add
xor
mov
mov
stos
rcll
add
cmpsb
cmp
push
pop
lds
lea
jb
jp
lret
stos
inc
std
lds
cwtl
negb
lret
pop
and
mov
les
popf
cmc
mov
and
adc
push
cltd
xor
mov
dec
in
adcb
push
insl
cmp
xor
mov
adc
aaa
xor
das
pop
stc
nop
mov
in
lods
pop
scas
frstor
xor
and
push
push
ljmp
jno
aad
pop
into
testb
and
inc
jl
add
iret
xchg
and
and
ds
inc
pop
sahf
jne
pop
repz
adc
loopne
das
adc
popa
clc
insb
xor
push
mov
loopne
xor
mov
mov
cmpsl
pop
xchg
jo
jg
lds
rorb
cs
add
xor
mov
mov
test
lret
cmpsb
cmp
push
push
lds
lea
jno
jp
lret
cld
les
cwtl
cmc
sbb
and
mov
ret
push
popf
hlt
mov
and
adc
addr16
ficompl
mov
mov
in
adcb
add
sahf
xor
mov
adc
ss
xor
cs
stc
nop
mov
in
stos
pop
scas
fsubl
xor
and
push
push
ljmp
jno
aam
pop
int
es
out
in
and
inc
jnp
add
into
xchg
and
and
ds
inc
pop
sahf
je
pop
repz
and
adc
fistps
clc
imul
dec
mov
mov
fistps
mov
xor
cmpsl
pop
xchg
jo
jle
lds
rorl
sub
push
push
jg
lret
mov
test
push
call
cld
and
push
sbb
lea
jo
jp
leave
stos
inc
sti
ret
add
dec
adc
call
aad
ret
repz
and
adc
pop
cltd
xor
mov
dec
jecxz
adcb
add
insl
ss
sahf
xor
mov
adc
xor
push
stc
nop
mov
in
stos
pop
scas
xor
and
dec
push
ljmp
jno
rcrl
es
in
and
inc
jp
add
int
and
and
ds
inc
pop
sahf
jae
pop
repz
ficoml
ficomps
clc
push
mov
arpl
aam
mov
popf
xor
fdiv
mov
xor
cmpsl
pop
test
jo
jge
lds
rorb
sub
lods
pop
and
push
jle
lret
mov
cmpsl
rclb
add
cmpsb
cmp
push
sbb
pop
dec
jne
and
outsl
jecxz
mov
ret
repz
popa
dec
adc
mov
outsb
call
aad
roll
repnz
and
adc
cltd
xor
mov
dec
loop
adcb
add
insl
xor
push
hlt
mov
test
sti
xor
sub
stc
nop
mov
in
test
insb
add
sti
xor
and
inc
test
js
jno
rcrb
es
inc
lods
inc
jns
add
int3
xchg
and
pop
in
aad
inc
pop
sahf
jb
pop
repz
mov
mov
fstpl
clc
imul
jg
mov
fstpl
mov
xor
cmpsl
pop
test
jo
jl
lds
iret
dec
jecxz
sub
add
xor
scas
je
pop
cmpsb
iret
push
call
cli
and
push
sbb
pop
dec
je
and
outsb
jecxz
mov
roll
repnz
popa
dec
adc
mov
insl
call
aad
rolb
icebp
mov
repz
or
cmp
xchg
pop
cltd
xor
scas
mov
loope
adcb
add
insl
xor
sahf
xor
xchg
adc
xor
xor
sub
nop
xchg
jge
pop
scas
fstps
xor
and
test
ja
jno
rcrl
es
in
push
inc
lods
inc
js
add
lret
xchg
and
push
in
aad
inc
pop
sahf
jno
pop
repz
and
adc
fcompl
clc
push
mov
mov
fcompl
mov
xor
cmpsl
pop
sbb
mov
lds
dec
jecxz
sub
add
xor
lods
jae
and
cmpsl
ds
pop
jo
push
sbb
pop
dec
jb
and
sahf
lds
lock
bound
and
popf
arpl
xchg
mov
pop
hlt
out
es
cmp
fistl
mov
stc
in
mov
sbb
add
outsb
xor
mov
mov
cmpsb
adc
xor
xor
sub
nop
test
out
cmpsb
pop
scas
xlat
popf
insl
add
clc
xor
and
dec
push
ljmp
jno
iret
xchg
pop
leave
lock
es
in
sbb
add
leave
nop
and
sbb
aas
adc
pop
sahf
outsl
xor
and
adc
fistpl
clc
data16
pusha
xchg
mov
ficompl
mov
cs
test
sbb
stos
aam
mov
int
in
daa
adc
add
xor
stos
jb
and
test
negl
pop
dec
jo
and
popf
ret
lods
inc
cmc
mov
lret
bound
and
fwait
bound
xchg
mov
pop
cmc
in
es
cmp
fistl
mov
stc
jecxz
mov
sbb
call
outsb
xor
mov
mov
adc
xor
xor
sub
nop
test
out
movsl
pop
scas
pushf
insl
add
divl
and
dec
push
ljmp
jno
into
xchg
pop
enter
and
in
sbb
lods
inc
jne
add
enter
shr
sbbb
aas
adc
pop
hlt
gs
and
adc
ficompl
clc
gs
jg
mov
fstps
mov
sub
adc
mov
das
stos
shl
mov
es
add
xor
test
lret
sti
les
pop
dec
pop
pop
dec
outsl
mov
pushf
ret
hlt
mov
lret
bound
and
lcall
sahf
in
mov
cmc
in
es
aaa
pop
inc
fistl
mov
stc
loop
mov
sbb
push
lahf
mov
mov
movsb
adc
das
divl
enter
nop
orl
jp
pop
scas
aad
insl
add
divb
and
dec
push
ljmp
jno
int
pop
out
es
in
sbb
inc
je
add
mov
mov
sbb
aas
adc
sahf
insl
xor
mov
adc
fstps
clc
fs
dec
pop
test
mov
aad
mov
popf
xor
shl
mov
adc
mov
das
test
lret
dec
in
and
insb
add
xor
test
mov
mov
ret
test
cmc
sbb
dec
push
pop
dec
outsb
mov
fwait
shrl
adc
bound
and
cltd
pusha
inc
xlat
xchg
mov
pop
cmc
jecxz
es
ss
inc
fisttpl
mov
mov
xor
xor
jns
sub
out
pop
scas
aam
jl
std
mov
clc
sbb
pslld
fldl
ret
cs
adc
std
leave
pop
lret
ret
add
cmp
pop
adc
xchg
adcl
push
ss
or
sub
loop
pop
movsb
loop
add
inc
in
inc
jge
es
or
or
loope
aas
cmp
popf
and
dec
mov
pop
mov
push
jo
fisubl
aaa
ss
roll
and
jmp
dec
adc
jns
cmp
sub
pusha
jns
sub
sbb
or
inc
sub
gs
sbb
in
inc
inc
call
sub
or
xchg
test
sub
dec
out
sub
pop
pop
add
add
cmp
ss
in
push
xlat
lahf
xchg
inc
negl
adc
and
daa
cli
insb
arpl
jae
adc
std
cmp
sub
push
push
jo
stc
inc
mov
push
xor
mov
mov
push
or
cli
cmp
xlat
jb
mov
test
jmp
loopne
shr
stos
in
jl
aaa
xchg
inc
mov
xchg
jle
adc
push
and
mov
pop
data16
cmpl
addr16
and
mov
push
int
add
xor
icebp
xorb
pop
push
mov
mov
fcmovnb
js
mov
dec
pop
mov
addr16
mov
inc
test
bound
aaa
pop
fnstsw
push
movsb
lds
xor
xor
movsl
in
add
xor
fldenv
pop
out
push
mov
mov
scas
sbb
scas
aaa
ja
mov
inc
dec
data16
xor
sub
jge
xchg
shl
sahf
lahf
mov
xor
inc
jg
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
data16
test
sbb
adc
lods
push
rolb
das
fadd
add
inc
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
xor
push
jp
arpl
movsb
out
mov
xlat
push
dec
xchg
ss
jno
sub
mov
inc
jge
adc
fsubp
jl
je
mov
add
push
fistpll
or
jb
std
shrl
nop
dec
movl
jge
xorl
mov
inc
xor
fcoms
hlt
cmp
hlt
or
std
or
dec
sub
inc
fstp
mov
mov
loope
mov
out
dec
pop
mov
jns
addb
test
clc
les
sbb
xor
dec
daa
int
jns
jmp
arpl
mov
dec
xchg
jns
cmpsb
leave
nop
cmpsl
adc
cmp
icebp
imull
aam
in
.byte
