mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
movl
movl
movl
mov
mov
movl
movl
movl
mov
mov
mov
mov
ret
int3
int3
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
mov
mov
lea
push
push
mov
mov
mov
call
push
lea
push
push
mov
call
mov
add
push
push
movl
mov
call
push
push
mov
call
mov
movl
movl
movl
mov
mov
mov
lea
push
call
movzwl
xor
cmp
setne
push
add
mov
call
mov
push
push
push
push
push
push
push
push
push
mov
mov
push
push
push
call
cmpl
mov
mov
je
test
jne
test
je
mov
push
push
call
push
call
lea
push
push
call
mov
push
push
call
mov
mov
lea
rep
xor
mov
cmpl
je
mov
push
mov
call
mov
push
push
call
mov
mov
lea
cmpw
je
add
dec
jne
xor
push
lea
push
mov
cltd
sub
sar
push
mov
cltd
sub
sar
push
push
call
push
push
call
push
call
mov
add
mov
cmp
jl
push
push
call
test
je
mov
push
call
mov
lea
push
push
call
movl
movl
pusha
mov
mov
cld
xor
dec
mov
xor
xor
lods
xor
mov
mov
mov
mov
shr
rcr
jae
xor
xor
dec
jne
xor
xor
dec
jne
not
not
mov
rol
mov
mov
popa
xor
push
push
mov
xor
call
lea
mov
mov
mov
mov
cltd
mov
idiv
cmp
jle
add
jmp
test
je
mov
sub
jmp
add
mov
mov
inc
cmp
je
cmp
jl
mov
mov
mov
dec
mov
inc
cmp
jg
push
call
mov
mov
mov
mov
sub
mov
cmp
je
lea
mov
cmp
je
movsbl
movsbl
sub
jne
inc
cmp
jne
mov
inc
dec
cmp
jne
push
lea
push
call
lea
push
call
mov
push
mov
call
test
je
mov
push
push
call
push
call
cmp
jbe
push
call
push
call
push
mov
push
push
call
push
push
call
lea
push
push
call
mov
mov
mov
mov
mov
push
mov
mov
mov
call
add
cmp
je
push
push
lea
push
call
mov
cmp
jbe
cmp
jne
xor
sub
mov
push
call
push
push
call
push
push
push
call
push
call
push
push
call
push
call
mov
push
push
push
call
mov
push
call
or
cmpl
jae
add
jmp
incl
lea
lea
mov
push
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
push
push
call
cmp
jne
mov
mov
mov
mov
lea
add
cmp
jne
nop
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
inc
cmp
jne
mov
mov
mov
mov
lea
push
push
call
push
call
mov
push
push
pushl
call
mov
push
push
push
push
push
mov
push
push
call
test
jne
addl
addl
push
push
push
call
call
mov
mov
mov
push
call
mov
add
mov
call
mov
cmpl
jae
addl
jmp
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
movl
mov
mov
mov
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
xor
jmp
jmp
lea
mov
add
xor
cmp
jle
xor
jmp
inc
inc
cmp
jl
mov
mov
mov
lea
mov
dec
mov
inc
inc
cmp
jne
mov
movl
cmp
jne
push
push
push
push
call
mov
push
call
mov
add
sub
call
lea
push
push
call
lea
push
push
mov
call
push
call
lea
push
mov
call
mov
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
lea
push
call
test
jle
mov
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jg
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
cmp
jne
repz
jmp
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
aam
inc
add
jnp
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
cmpsl
jnp
add
inc
add
inc
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sarb
enter
aam
inc
add
jnp
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pusha
jl
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
jge
add
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
sub
add
add
add
add
add
hlt
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
add
loopne
add
add
add
add
add
dec
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
loop
add
lret
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
fldl
add
fldl
add
fldl
add
fldl
add
add
loop
add
fldl
add
add
push
loopne
add
add
jl
add
mov
add
mov
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
add
je
add
mov
add
mov
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
add
pop
loop
add
add
xchg
add
mov
jecxz
add
add
add
add
add
filds
add
add
or
add
repnz
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
nop
fiadds
add
add
push
add
pop
fiadds
add
add
fiadds
add
fiadds
add
add
push
fiadds
add
fldl
add
fldl
add
inc
add
jae
add
mov
mov
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
lret
or
add
mov
add
add
inc
add
add
add
leave
inc
add
add
add
enter
add
add
inc
add
add
add
enter
add
add
movl
push
movl
add
inc
add
add
add
add
add
movb
add
add
lds
push
add
add
add
add
les
and
add
pusha
les
and
add
jo
inc
add
add
push
ret
jns
add
xor
inc
add
add
sbb
inc
add
add
add
ret
incl
add
lock
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
gs
xor
fs
insb
add
insl
jbe
add
arpl
popa
jae
add
add
push
add
add
outsb
add
and
je
outsl
add
add
add
add
outsl
add
add
add
add
add
outsl
jae
dec
popa
outsb
fs
add
insb
outsl
arpl
gs
gs
imul
add
dec
gs
jo
jb
popa
je
add
imul
gs
xor
add
add
dec
gs
jo
add
add
gs
je
add
inc
insb
insb
outsl
arpl
add
add
add
dec
add
add
add
nop
flds
add
add
nop
pop
add
inc
jns
add
mov
add
incl
add
add
add
add
pushl
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
incl
add
add
pop
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
popa
inc
add
add
add
incl
add
add
incl
add
add
incl
popa
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
jmp
inc
add
addr16
add
add
add
incl
add
add
incl
add
add
incl
add
add
outsl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
fildl
add
fldl
add
add
fcomp
add
push
filds
add
roll
test
add
and
add
or
add
mov
add
add
add
add
loopne
add
rolb
sub
add
add
add
add
add
hlt
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
add
loopne
add
add
add
add
add
dec
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
loop
add
lret
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
fldl
add
fldl
add
fldl
add
fldl
add
add
loop
add
fldl
add
add
push
loopne
add
add
jl
add
mov
add
mov
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
add
je
add
mov
add
mov
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
add
pop
loop
add
add
xchg
add
mov
jecxz
add
add
add
add
add
filds
add
add
or
add
repnz
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
nop
fiadds
add
add
push
add
pop
fiadds
add
add
fiadds
add
fiadds
add
add
push
fiadds
add
fldl
add
fldl
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
addb
jo
outsb
push
jb
arpl
jae
jo
inc
gs
jns
je
insl
inc
imul
jns
add
add
je
imul
bound
gs
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
inc
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsl
arpl
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
dec
add
imul
popa
jae
inc
add
call
fs
jne
jae
jb
add
inc
insb
outsl
jae
push
imul
add
jo
je
push
popa
addr16
add
movb
gs
imul
jae
add
add
je
gs
je
jo
imul
add
insb
gs
jae
inc
inc
add
inc
jb
popa
je
push
imul
inc
add
imul
popa
jae
inc
add
mov
popa
insb
imul
je
add
add
jae
popa
addr16
outsl
js
add
insb
popa
je
push
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
and
inc
gs
inc
add
add
imul
add
adc
inc
gs
insb
imul
je
in
add
fs
arpl
inc
add
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
insb
insb
push
imul
push
outsl
jae
push
jne
je
gs
popa
add
inc
gs
gs
popa
addr16
add
je
outsl
jns
imul
add
fs
popa
imul
inc
push
xor
cs
insb
add
push
add
gs
je
push
outsl
insb
imul
add
push
je
arpl
bound
arpl
mov
je
jne
push
add
dec
add
gs
je
push
outsb
add
inc
imul
add
arpl
insb
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
insb
arpl
push
arpl
out
inc
gs
gs
dec
bound
arpl
jg
push
gs
imul
add
push
gs
imul
outsl
jb
add
popa
je
inc
outsl
outsb
je
outsb
imul
add
gs
outsl
add
inc
inc
dec
xor
cs
insb
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
dec
inc
dec
inc
xor
cs
insb
add
lret
add
popa
jo
insb
insb
outsl
arpl
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
js
je
jb
arpl
jae
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
int
dec
gs
jo
jb
popa
je
add
ljmp
gs
outsl
imul
add
gs
outsb
push
gs
js
gs
imul
gs
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xchg
add
je
imul
je
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
roll
fs
gs
js
gs
imul
gs
add
add
inc
bound
addr16
jb
jae
outsb
je
rolb
jb
imul
outsl
arpl
jae
add
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
addr16
add
popa
jo
jb
add
mov
push
insb
gs
sbb
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
mov
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
xchg
rolb
nop
rolb
mov
inc
add
rolb
adc
add
add
add
add
add
inc
add
add
add
rolb
xor
inc
add
rolb
sub
inc
add
rolb
and
inc
add
rolb
sbb
inc
add
rolb
adc
inc
add
rolb
or
inc
add
rolb
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
int
add
int
add
int
add
inc
add
int
add
inc
add
inc
add
add
add
add
add
or
cmp
inc
add
or
cmp
inc
add
or
add
add
add
add
mov
inc
add
inc
add
or
test
inc
add
add
add
incl
add
add
add
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
lods
or
rorb
rorb
rorb
rorb
rorb
rorb
rorb
mov
inc
add
roll
add
add
and
add
dec
pop
nop
push
add
add
push
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
fadds
add
or
mov
iret
and
push
push
jb
addr16
outsl
and
outsb
push
and
insb
and
and
push
and
arpl
prefetchw
add
add
add
add
mov
push
icebp
push
fsts
push
fistl
dec
inc
int
push
fsts
dec
inc
stc
repz
fists
pop
mov
push
icebp
push
fistl
das
fistl
dec
inc
cli
icebp
pop
fsts
dec
inc
into
repz
fsts
push
imul
add
add
add
push
add
add
add
push
add
push
inc
add
dec
add
add
mov
add
add
push
add
add
and
pop
or
add
add
push
adc
add
bound
push
pusha
xchg
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
adc
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
mov
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
xor
add
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
add
push
push
pop
aaa
add
add
add
push
add
jo
add
add
add
add
add
add
add
push
add
add
inc
add
loopne
push
pop
xor
push
add
add
add
push
mov
add
add
add
add
push
add
add
add
push
add
inc
add
rolb
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
sub
xor
push
push
pop
and
mov
xchg
outsl
clc
fcoml
je
push
pop
daa
add
add
add
add
push
mov
mov
mov
inc
xchg
jae
sub
dec
pop
ret
adc
jg
add
jno
std
adc
ja
insb
add
jne
ljmp
pop
stc
jmp
push
les
sub
fcoms
icebp
push
push
xor
pop
div
cmp
jbe
xorb
jmp
add
mov
inc
test
jne
mov
dec
pop
mov
mov
push
dec
mov
mov
incb
inc
cmp
jb
pop
inc
mov
push
jnp
push
jmp
fmull
sub
inc
data16
push
push
ficompl
jo
push
call
outsl
stc
jbe
adc
push
leave
ret
cmpl
jge
je
out
add
or
add
sub
cmpxchg
mov
add
xchg
mov
pop
insb
push
or
sbb
add
xor
pop
mov
adc
adc
sar
add
ret
je
pop
repnz
mov
cmp
push
test
pop
ja
push
inc
je
and
xchg
in
mov
mov
or
stc
rolb
test
cmp
jb
push
enter
fadds
shrb
cli
push
push
push
mov
or
mov
pop
xchg
jb
xchg
jne
insl
pop
pop
pop
push
pushl
sbb
adc
je
xlat
out
fisttps
mov
outsb
mov
push
fisttps
xchg
popa
adc
jne
mov
inc
inc
dec
jg
push
adc
or
add
enter
mov
mov
pop
lds
mov
adcb
mov
mov
inc
inc
ja
and
mov
and
mov
push
jns
je
xor
sub
mov
fdivrp
in
std
mov
pop
adc
jp
cmp
pop
loopne
or
or
popl
clc
sbb
jns
cmp
hlt
mov
test
ret
jmp
cmp
stc
ja
or
sahf
lret
lea
inc
mov
outsl
cmp
cmpsl
out
push
mov
loope
daa
sub
out
push
xor
jne
adc
fistpll
mov
gs
pop
les
push
pop
mov
push
cs
dec
je
fisttpl
cli
cld
jb
mov
push
xor
rorb
insl
outsl
mov
sub
push
add
sub
insl
mov
cmp
adc
das
jle
and
lods
mov
mov
clc
push
push
push
sti
call
cmp
jbe
and
rcr
stc
pop
shrl
push
lea
pop
jmp
scas
jg
ret
jl
dec
cmp
jae
pop
loop
lods
sti
iret
decl
or
pop
jmp
mov
mov
add
push
xchg
mov
mov
adc
jg
leave
xor
cmp
js
and
xor
roll
je
jge
cmp
jl
leave
jmp
jl
test
aad
fiaddl
adc
mov
add
xor
xor
in
lods
and
std
mov
add
test
sbb
mov
fcmovnb
add
adcl
jbe
push
add
ret
mov
mov
jno
jno
test
sbb
push
clc
jne
xchg
adc
ja
pop
sarb
sbb
lea
daa
adc
push
xor
pop
xor
or
imul
ljmp
iret
std
ffreep
push
mov
inc
cmpsb
stc
insb
mov
push
orps
add
mov
jg
fidivrs
xlat
gs
gs
or
or
push
dec
les
sahf
pop
push
mov
cmp
sbbl
in
shr
xchg
clc
jnp
add
pop
ja
mov
std
dec
cmp
dec
mov
sub
fmuls
mov
popl
or
mov
lea
sub
leave
lcall
movsb
or
shlb
fisttpl
call
test
les
mov
and
out
mov
jecxz
and
lea
and
sbb
pop
dec
sbbl
pop
roll
out
ret
inc
adc
inc
or
mov
inc
xorb
xchg
add
add
xchg
xlat
pop
pop
popa
das
jp
or
or
or
js
inc
stos
adc
add
pop
jmp
xor
loopne
dec
jno
jbe
or
ds
or
mov
lea
jne
mov
jbe
gs
rorl
or
cmp
je
ss
mov
or
mov
add
pop
in
pusha
outsl
push
xor
mov
cmp
and
ss
mov
or
jge
push
pop
mov
mov
jno
adc
adc
test
xchg
xor
push
pop
add
pusha
fsts
je
mov
lods
pusha
hlt
out
inc
add
pop
mov
fisubrs
data16
or
inc
push
div
outsl
addr16
mov
and
clc
dec
cmpl
adc
or
jb
icebp
and
jno
clc
add
andnps
lcall
mov
int
test
and
loop
jo
ja
add
pop
add
mov
add
je
daa
cmp
adc
in
mov
push
adc
adc
push
in
add
je
invlpg
notb
push
outsl
shrb
and
and
in
out
and
adc
outsl
push
in
jbe
cmp
addr16
push
mov
push
sbb
outsl
push
jo
pop
das
jb
push
dec
pop
sub
push
popa
mov
testb
fistl
push
mov
dec
push
push
push
pusha
lods
imul
je
inc
adc
cmp
push
mov
mov
loope
push
mov
mov
add
mov
test
inc
jecxz
pop
add
adc
inc
scas
xchg
lcall
or
mov
pop
mov
insl
push
mov
add
enter
rcr
mov
ja
push
push
or
adc
shrb
mov
push
xchg
dec
jle
add
pop
stos
lea
sub
xchg
pop
or
lret
sahf
dec
vorps
std
xlat
sti
pop
mov
and
add
and
lret
cwtl
mov
push
inc
or
or
jle
push
arpl
outsl
gs
sbb
or
and
xchg
cmp
pop
jb
or
ret
testb
jg
pop
dec
cmp
adc
jg
shrb
or
test
mov
ja
insb
pop
dec
enter
adc
cmc
fsubrp
jge
or
push
pop
sub
jne
push
pop
cmp
add
sub
call
pop
pop
push
or
jp
leave
mov
or
push
mov
hlt
mov
clc
mov
mov
addr16
pop
cmc
repz
adc
cmc
and
jge
stos
test
sbb
pop
sbb
sub
or
mov
dec
push
add
imulb
and
xor
mov
push
cmp
out
mov
in
mov
xchg
mov
std
sbb
in
and
add
dec
and
fbld
xchg
pop
push
mov
in
fs
xor
dec
or
dec
les
sub
jecxz
inc
pop
lods
push
call
iret
add
add
sahf
sub
in
push
dec
and
dec
lock
mov
insb
pop
int
scas
popa
mov
or
fcom
xchg
lea
and
insb
lock
inc
popf
xchg
adc
mov
dec
es
or
fwait
push
mov
mov
sahf
sbb
bound
inc
jbe
out
mov
jg
cmp
push
dec
fadds
ljmp
call
xchg
add
push
leave
cmpsl
arpl
mov
add
and
in
and
cld
cld
sbb
stos
outsl
pop
cmpl
lea
cmp
pop
imul
pop
xor
mov
cmpsb
sbb
pop
scas
or
mov
aam
push
jno
pop
cld
dec
ss
jo
pop
push
aas
mov
inc
outsb
jno
or
sub
adc
and
and
call
outsb
andl
add
aas
xor
mov
popa
and
fmuls
push
jg
lock
int3
mov
pop
sub
std
or
shll
push
inc
ljmp
add
jbe
ret
mov
sbb
pop
inc
jp
icebp
pop
xchg
xor
mov
sub
sub
push
aaa
cmp
pop
adcl
xor
add
cmc
lea
pop
or
push
push
and
test
push
jae
mov
push
pop
adc
gs
adcb
js
cs
fcoms
cmpsb
jmp
jmp
stos
gs
mov
out
xor
xchg
lods
test
imul
push
adc
notl
sbb
daa
or
push
pop
or
or
push
mov
cli
std
cld
std
fmull
mov
decb
mov
push
pop
stos
xor
sti
and
xchg
or
or
sub
rcrl
jmp
ss
loopne
ss
adc
sbb
leave
enter
mov
add
in
loopne
outsb
mov
aad
inc
cmpb
mov
inc
add
cs
mov
sarb
fcomps
rolb
pop
fcoml
adc
cmc
sti
fnstenv
or
pop
adc
pop
push
fsub
bound
pop
or
ret
or
or
pop
xor
inc
scas
adc
pop
fs
enter
add
mov
loop
pop
cmp
or
xor
add
pop
push
call
pop
loopne
pop
or
test
mov
movsl
pop
je
arpl
inc
insb
adc
pop
shll
and
lea
movsl
ja
cmp
inc
mov
cmc
add
pop
dec
lock
and
mov
dec
mov
cs
lods
push
jg
pushl
ret
mov
mov
mov
mov
pusha
shr
add
jno
pusha
xor
stc
xor
jae
xor
xor
dec
jae
cmc
shl
rorl
mov
mov
mov
repnz
je
mov
mov
in
or
sub
divb
clc
icebp
fnstcw
je
ret
inc
push
js
add
mov
insl
mulb
icebp
push
in
push
add
ret
fsubr
mov
add
mov
adc
outsl
sti
pop
sbb
es
andb
pop
stos
fs
ljmp
pusha
mov
jb
xchg
jg
sub
test
cmp
jo
out
xor
and
mov
dec
or
mov
addl
and
adc
test
jmp
mov
cs
outsb
sub
inc
pop
pop
cmp
bound
mov
fisttps
out
lds
xchg
push
mov
jno
jnp
cmp
jo
je
ja
rolb
sahf
nop
int
out
push
lretw
data16
ss
clc
dec
inc
dec
js
mov
xlat
or
and
es
sbb
add
lahf
or
sub
sbb
fisubrs
add
jge
inc
cmp
faddl
jl
fcoms
push
mov
dec
add
dec
push
inc
lcall
or
ss
sub
jmp
push
mov
sub
fistps
push
and
adc
sbb
mov
pop
and
pushf
cmpsb
jmp
or
or
jmp
mov
ret
sbb
movsb
dec
insb
test
xor
pop
sbb
icebp
ret
sbb
mov
dec
push
add
or
or
out
fcmovbe
int3
lock
aad
and
scas
xchg
test
push
aam
sti
nop
outsl
add
outsb
les
cmc
mov
pop
pusha
int3
xchg
ja
or
mov
sbb
adc
mov
jnp
mov
into
addr16
mov
sbb
sbb
adc
lret
pushf
sbb
or
bound
xor
nop
insb
jecxz
adc
std
int
sbb
adcl
paddusb
and
sbb
call
adc
fdiv
lods
pop
and
dec
jmp
aaa
push
vshufps
pop
pop
mov
add
test
aad
dec
lret
pop
sbb
in
fisubrl
sbb
cmp
xchg
pop
in
outsb
sbb
sub
cli
pop
mov
push
test
arpl
pop
fsubrl
push
aas
imul
mov
inc
push
push
adcl
repnz
bound
inc
faddp
in
test
mov
test
push
fnstenv
cmc
cwtl
ret
pop
pop
adc
mov
nop
gs
les
pop
into
insl
out
das
lret
out
in
cmp
jne
push
jbe
loop
adcb
cmp
mov
xchg
jae
adc
je
push
mov
adc
test
fs
mov
push
fidivrl
xor
enter
ja
outsl
push
push
jbe
adc
adc
aam
sbb
cmp
loopne
add
imul
lods
add
inc
mov
dec
int3
and
ja
mov
mov
adc
add
push
xchg
or
mov
rcrb
in
repz
stos
jle
pusha
push
or
iret
data16
adc
bound
out
lock
adc
sti
mov
mov
pop
xor
push
insb
sub
dec
into
cld
jae
sbb
in
sub
enter
adc
bswap
and
jnp
jo
sub
jno
out
lods
int
or
std
mov
mov
add
inc
aas
sbb
iret
adc
jno
in
push
or
fsts
jbe
imulb
add
add
mov
jl
sbbb
testb
popw
scas
clc
es
je
or
xchg
testl
clc
fidivs
ljmp
fldl
pop
fimull
jbe
dec
jo
idivl
aas
leave
xchg
xchg
divl
scas
clc
lcall
je
lock
lock
push
xor
clc
or
ljmp
mov
push
push
test
sbb
lock
pop
pop
inc
mov
pop
push
movsl
push
or
jmp
pop
xchg
jno
mov
mov
jmp
sbb
pop
mov
xchg
out
jecxz
push
out
and
push
je
cmp
mov
inc
movsl
pop
gs
cmc
xchg
pop
and
shll
mov
sub
call
push
lret
sub
jmp
sub
fst
dec
adc
sahf
pop
in
or
push
pop
xchg
sbb
cmp
sub
jb
jns
adc
in
enter
data16
push
sub
inc
clc
dec
inc
scas
add
clc
and
sbb
pop
clc
imul
push
pop
fs
mov
mov
out
incl
push
call
add
pop
pushf
out
add
mov
jl
push
push
movsb
and
lret
mov
aaa
ljmp
sti
iret
jb
adc
inc
leave
mov
les
dec
iret
cmp
sub
cmp
mov
push
or
xor
cld
or
loope
ret
mov
testl
mul
sbb
adc
sub
push
loopne
xchg
mov
xchg
jnp
mov
mov
pop
in
sti
mov
push
insb
or
pop
push
jl
mov
lods
popa
mov
add
mov
into
pop
mov
cmp
mov
das
cmp
inc
inc
dec
jne
arpl
add
sub
insl
fldl
std
roll
and
add
test
push
movsl
out
ss
cli
lock
lahf
dec
cmp
frstor
jmp
mov
pop
sub
push
inc
fisubl
scas
add
stc
pop
es
negl
bsr
rcrb
cmc
ficomps
and
leave
and
rorl
inc
xchg
pusha
addb
xor
test
adc
adc
add
jne
negl
js
add
ss
insb
cmp
and
in
add
mov
je
jno
add
popf
xor
mov
inc
insb
lock
lods
ud2
pop
subl
mov
add
aaa
fildll
lcall
or
xchg
cld
mull
shlb
popa
push
outsb
add
sbb
negb
aam
test
or
mov
dec
add
imul
mov
mov
cmp
jne
mov
sbb
xchg
dec
mov
push
push
dec
aad
sbb
sti
popa
int
sti
adc
xor
lock
stos
push
and
mov
push
inc
push
adcl
inc
insb
pop
xchg
arpl
and
jnp
sub
dec
inc
jmp
xchg
ret
or
sti
cwtl
test
fwait
mov
jmp
ficoms
and
and
mov
push
test
sarb
shl
or
lock
fsubrl
jmp
xor
pushf
lcall
jp
jb
test
out
btr
xor
push
xchg
add
shlb
or
push
and
push
cmpl
cmp
mov
sbb
dec
mov
xor
pop
xlat
pop
mov
mov
mov
or
adc
pop
insb
test
push
cmc
push
pop
mov
mov
sarl
xor
cs
popa
cmp
in
and
jl
or
loope
push
dec
pop
pusha
push
sbb
mov
test
push
dec
xor
mov
daa
adc
pushf
movsb
sbb
mov
xor
ss
cld
mov
mov
or
nop
and
mov
mov
dec
adc
in
xchg
cli
pop
cli
ret
push
jle
pusha
pop
insl
icebp
sbb
fidivl
xchg
dec
je
adc
roll
and
push
sub
insl
push
push
mov
movsl
and
ds
pusha
add
and
in
hlt
shrl
stos
repz
mov
adc
loopne
or
add
cmp
lret
cmpsb
mov
incl
and
cmp
cmc
scas
dec
lds
lea
sbb
inc
stos
sbb
xor
jae
inc
jne
out
rcrl
enter
cs
push
divb
push
pop
movsb
cmp
mov
push
xor
mov
or
add
lea
out
push
out
mov
fs
cld
inc
xor
shll
or
cmpl
es
test
je
xchg
mov
cmp
jp
sbb
rcl
into
dec
or
rcrb
inc
pop
add
xchg
push
jge
and
les
cs
es
xchg
push
sbb
push
and
mov
daa
jb
jb
pushl
jg
mov
mov
and
notl
sbb
dec
jae
jns
xchg
addb
add
xchg
loop
cmc
pop
ret
jno
push
les
aaa
mov
mov
dec
ss
cmp
xor
xchg
roll
iret
pop
imul
pop
nop
add
push
mov
or
add
lea
sub
mov
or
inc
or
cmpsb
cli
jle
lea
mov
sar
in
inc
out
adc
rorb
push
pop
push
cmc
lods
jge
arpl
adc
sub
and
aaa
and
mov
xchg
fs
lock
pop
shlb
or
test
dec
rclb
sbb
cmp
and
cmp
mov
mov
sti
enter
push
out
mov
fiaddl
xchg
jmp
ret
or
xor
xchg
outsl
inc
fsubs
repz
and
or
xchg
sub
outsl
inc
ds
sbb
fwait
lock
insb
dec
push
stos
push
int
add
mov
dec
pop
inc
test
mov
sub
aaa
testl
mov
adcb
mov
inc
dec
pop
or
enter
push
bnd
mov
inc
dec
hlt
xchg
sub
add
cmp
clc
dec
lret
aaa
fildll
sbb
stc
mov
adc
cmp
jb
and
std
mov
inc
jmp
mov
inc
pop
lret
enter
lret
movsl
hlt
out
cld
push
sar
add
ss
inc
dec
out
nop
push
inc
mov
sbb
inc
sbb
fnsave
jb
in
dec
in
push
popf
ja
pop
stos
sub
orl
test
fstl
and
mov
stos
sbb
dec
pusha
test
aam
fdivrp
daa
push
add
sub
push
loopne
sti
ds
push
iret
stos
lods
stos
or
xor
in
or
push
xor
dec
push
xor
inc
push
or
pop
dec
pop
pop
push
cmp
inc
lret
jo
and
or
adc
inc
lock
mov
adc
mov
icebp
movsl
pusha
movsl
lret
xchg
or
stos
mov
enter
aas
fsubrl
mov
cmp
cmpsl
rcrl
jmp
pop
inc
jecxz
xor
mov
lret
push
sub
ja
jmp
sbbl
mov
test
divb
sbb
stos
add
jg
bound
pop
pop
push
sbb
push
fcom
mov
mov
inc
lock
mov
add
or
pop
out
dec
leave
decl
movsl
mov
jge
adc
repz
sti
jg
imul
add
inc
cmp
jp
aaa
dec
lock
xchg
fdivrs
imul
pop
clc
imul
xor
and
lea
aaa
push
add
imul
or
jo
test
cmp
add
stc
mov
jb
neg
and
je
sub
mov
add
mov
lret
or
enter
out
lcall
cmc
stos
pop
or
call
fstpl
add
lea
into
outsb
xchg
aaa
out
shlb
add
mov
xchg
les
sub
add
pop
in
jmp
in
orb
and
cvtps2pd
ret
push
js
jge
pop
jbe
mov
mov
inc
adc
and
inc
xorl
mov
inc
sub
inc
inc
push
je
stos
lea
fnstenv
sbb
pop
pcmpeqd
movsl
insb
outsl
pop
mov
mov
pop
add
fidivrs
push
outsb
ja
jle
inc
and
pop
pop
ret
cmp
ret
icebp
fildl
xor
shr
sbb
inc
ret
sarb
shr
add
cmp
push
jecxz
jl
das
ret
scas
lcall
pop
pop
mov
add
sub
gs
jns
jbe
popa
cld
jbe
push
jnp
je
insl
dec
outsb
outsl
add
je
insb
xor
cs
outsb
insb
sub
sub
inc
dec
push
xlat
mov
fstl
or
cmp
pop
jnp
xor
cmp
cmp
popf
jnp
or
add
push
push
jno
sub
std
gs
je
and
or
aaa
xor
xor
jp
xchg
push
pusha
insl
das
jne
sub
xor
in
dec
jl
fmuls
push
es
mov
and
xor
insl
jae
inc
pop
fldcw
inc
insl
and
sub
jo
insb
mov
gs
pop
das
js
ja
sub
jne
mov
and
data16
add
repnz
fidivs
outsl
fistpl
xchg
push
das
fldln2
sub
outsl
jno
ss
popa
je
jmp
xchg
test
aaa
and
add
pop
add
pop
jne
data16
cmp
push
dec
push
dec
dec
dec
inc
dec
add
jns
or
jnp
lret
fs
arpl
adc
xchg
or
inc
cmp
call
push
arpl
adc
xor
add
mov
sbb
pusha
jns
ret
idivl
jo
fnsave
jb
scas
cmp
add
adc
jnp
dec
push
add
or
jne
outsb
shrb
imul
insl
cmp
gs
test
pop
ja
or
dec
cwtl
out
test
lret
push
pop
inc
dec
pop
je
lock
enter
jbe
push
std
jns
stc
pop
inc
imul
jns
add
bound
std
or
dec
pusha
jnp
inc
addr16
sub
inc
xor
push
std
stc
lcall
jo
imul
popa
cmp
js
jg
jns
dec
jl
jle
jne
pop
inc
pop
pop
xor
push
imul
pop
bound
imul
stos
or
addr16
notl
sbb
addr16
popa
push
test
sar
outsl
fs
je
add
jo
jo
jae
gs
mov
fdivrl
je
sub
insl
and
lods
lods
add
jo
in
xchg
arpl
jp
outsl
sub
arpl
jne
sub
lds
outsb
push
popa
jne
sub
daa
mov
imul
push
push
jae
push
aad
sub
and
scas
insl
and
imul
outsl
je
enter
add
gs
sub
pop
pusha
xor
mov
add
das
inc
call
jb
push
pop
xor
add
ror
add
std
loop
cmp
mov
mov
jae
mov
mov
sbb
pop
sub
inc
imul
daa
ret
mov
add
jmp
sub
xor
ljmp
mov
push
std
and
or
mov
arpl
adcb
add
mov
outsl
es
xchg
hlt
test
push
cmp
push
out
fstl
add
cmp
inc
add
and
loopne
fsubl
push
hlt
in
push
or
lock
add
lock
fiaddl
sub
or
add
or
or
cmpsl
mov
and
lock
mov
inc
xor
testb
std
jmp
jmp
cld
je
dec
mov
jno
sbb
adc
adc
adc
addl
jle
jae
add
add
adc
leave
lret
negb
ret
add
loop
leave
lret
leave
mul
shr
iret
lret
leave
iret
hlt
fcmove
cld
ljmp
out
push
out
in
sarb
xchg
push
sbb
shr
push
in
mov
fidivrs
xchg
add
into
das
lret
or
ja
xor
jmp
cmpl
mov
mov
jp
fcoms
inc
hlt
iret
leave
ret
mov
mov
or
fdivl
push
adc
cmp
mov
addb
adc
cmp
adc
outsb
adc
shlb
fldcw
cmpl
pop
mov
push
and
mov
or
test
or
jbe
mov
mov
adc
mov
inc
ret
jp
mov
xchg
rcrb
scas
mov
aam
cld
mov
push
jl
fldl
xchg
add
jmp
fsubrs
and
mov
ret
popa
sbb
inc
mov
push
xchg
jns
or
movsb
je
cli
sub
xor
mov
inc
jp
and
test
sbb
or
fdivr
bound
and
mov
out
add
push
push
rcll
adc
in
out
inc
jmp
test
cs
pop
ds
out
xchg
and
test
or
sbb
sbb
mov
add
jmp
xchg
jno
xor
jl
pusha
shr
data16
into
fucomi
std
inc
sub
mov
and
adc
dec
in
outsl
outsl
and
add
push
fwait
push
mov
sbb
pop
add
or
xlat
pop
movsb
xchg
add
jmp
inc
xor
andb
cmp
ja
loope
imul
or
leave
fwait
xchg
rorl
jb
cmpb
and
adc
fisttps
shrl
jno
enter
jbe
in
sbb
xchg
and
push
cmp
add
ss
fdivl
adc
jge
negl
int3
add
lret
and
xchg
jbe
mov
lcall
cli
push
lret
or
add
adcb
movsl
and
pop
mov
xchg
or
mov
jbe
dec
movsl
jp
rcrl
scas
cmp
lahf
mov
jl
ss
or
sahf
shrb
cltd
lret
lock
or
clc
mov
sub
jmp
clc
shr
push
jmp
int3
shlb
push
cld
mov
inc
push
cmp
jo
mov
lret
lock
adc
int
fimuls
xchg
inc
xor
insl
je
add
insl
shl
fwait
arpl
lods
xor
adc
xchg
adc
jbe
jae
fimuls
stc
jns
mov
lods
out
jmp
fnstcw
sti
push
adc
andl
fistps
shr
in
add
insb
add
add
scas
call
inc
adc
test
sub
fistps
jnp
push
imul
push
inc
inc
or
cmpsb
or
adc
or
sub
add
jo
mov
pop
loopne
mov
mov
or
test
adc
jge
rclb
pop
or
xchg
adc
or
shlb
adc
xor
sbb
and
arpl
inc
or
mov
or
add
mov
mov
rorb
pusha
decl
add
jne
xor
add
dec
add
add
sbb
je
outsl
outsl
outsb
jno
xor
aas
fs
cmp
arpl
iret
fdivl
scas
jo
dec
add
aaa
insl
mul
fdivl
or
or
inc
es
movsl
es
inc
and
sub
push
add
push
adcb
ret
mov
popa
insb
fs
insl
jae
fildll
outsb
push
inc
sbb
imul
popa
add
mov
cmp
push
insl
dec
inc
orps
ja
lds
push
ss
jb
jne
adc
jle
inc
in
jo
jo
xor
popa
je
arpl
es
sbb
sub
js
xchg
je
neg
out
or
and
popa
push
js
sbb
fdivrs
gs
sbb
sbb
dec
stos
inc
imul
jne
daa
outsl
scas
dec
imul
mov
pop
gs
push
lock
jge
jne
jb
inc
inc
adc
int3
xor
mov
inc
xor
jns
popfw
add
cmovbe
adc
imul
je
cwtl
inc
outsb
mov
lods
mov
inc
jnp
and
aad
push
mov
push
or
test
arpl
mov
inc
mov
es
test
pop
pop
outsb
jl
mov
inc
jns
xchg
push
mov
lcall
outsl
movlps
imul
in
out
mov
outsl
jo
sub
pop
dec
jne
and
jbe
push
xchg
lahf
dec
adc
add
fnstenvs
adc
gs
pop
cmp
jb
pop
push
xor
outsl
outsl
es
rcpps
or
push
or
adc
in
mov
cltd
push
js
pop
insb
sbb
movsb
iret
test
xor
dec
addr16
hlt
jnp
jbe
jo
or
push
ja
xor
imul
push
gs
adc
xchg
shlb
loop
fsubr
sbb
xchg
push
xlat
test
mov
popa
mov
jmp
pop
cwtl
inc
add
add
stc
das
std
add
gs
push
adc
dec
test
pop
push
pop
sub
adc
sbb
cmp
pop
ds
and
or
and
adc
sbb
or
or
sbb
mov
adc
sbb
mov
cmp
push
pop
and
push
xor
sbb
adc
push
or
sub
and
mov
cmp
adc
or
and
pop
xchg
add
adc
and
in
std
xor
sub
cs
add
unpckhps
or
fstpt
mov
add
adc
sbb
std
mov
fnstcw
lcall
pop
add
add
arpl
repnz
jns
std
lods
mov
add
pop
pop
or
mov
push
cmp
and
jmp
and
sub
and
cmp
push
or
sbb
cmp
adc
pop
adc
gs
adc
or
pop
adc
sbb
push
or
add
add
sbb
push
and
push
daa
std
outsl
shrl
or
sub
xor
adc
and
push
pop
lock
pop
adc
or
sarl
lret
repnz
or
pushf
insb
lret
aaa
xchg
or
or
add
or
or
inc
push
sub
xchg
mov
inc
cmp
jns
add
je
and
add
std
sub
xor
add
mov
or
fldt
jo
ljmp
int3
or
push
xorl
or
push
cmp
mov
and
push
add
dec
stos
adc
cwtl
add
leave
out
add
and
inc
sbb
inc
je
adc
add
add
add
push
add
add
cmpb
jne
bound
lea
jmp
nop
nop
xchg
nop
xchg
nop
mov
inc
mov
inc
add
jne
mov
test
adc
jo
mov
add
jae
mov
sub
pop
fistl
rolb
jae
jne
mov
sub
in
leave
test
add
ret
loopne
mov
xor
jb
mov
add
jne
mov
out
adc
adc
add
ja
lea
sub
leave
ja
inc
add
jae
mov
sub
pop
fistl
leave
add
jae
jne
mov
sub
in
roll
add
std
incl
sub
jp
inc
dec
jne
jmp
nop
mov
test
push
mov
add
ja
add
jmp
pop
idivl
mov
inc
sub
add
cmpb
ja
lea
mov
fs
ret
rclb
les
clc
sub
add
popl
add
push
mov
lea
lea
add
push
add
std
xchg
push
xchg
add
xchg
mov
inc
or
jb
mov
push
dec
repnz
std
xchg
push
xchg
add
or
je
mov
test
push
jmp
arpl
mov
add
xor
mov
inc
or
je
ds
jno
add
mov
xchg
rol
xchg
add
mov
jmp
es
loopne
mov
loop
lods
pop
xchg
add
lea
mov
push
push
push
rorl
add
sub
push
push
push
push
push
call
pop
arpl
add
les
sub
jmp
mov
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
js
add
push
mov
add
add
add
add
push
add
cmpsb
add
add
add
push
add
add
add
push
xchg
mov
push
add
add
add
push
add
add
add
push
add
add
add
push
pushf
mov
push
add
cmpsb
add
fsubs
add
out
add
add
add
mulb
add
dec
inc
push
dec
inc
dec
xor
sub
add
push
inc
push
dec
xor
bound
push
push
inc
push
xor
cs
insb
push
add
popa
dec
outsl
bound
jb
inc
push
add
je
jb
arpl
fs
jne
add
push
imul
arpl
outsl
jb
popa
je
add
jb
jne
outsb
inc
push
insl
arpl
add
jb
jne
outsb
inc
je
add
add
addr16
insb
outsl
jno
dec
gs
add
inc
push
insb
imul
xchg
add
or
add
imul
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
stc
xor
adc
fstp
faddl
inc
xlat
push
out
adc
adc
mov
adc
adc
push
in
lcall
jae
and
jbe
inc
and
add
or
jmp
sarl
ds
fistps
jmp
loopne
in
dec
test
jnp
dec
add
add
lahf
rcrl
rcr
inc
cwtl
clc
inc
lcall
pop
call
push
in
xchg
rclb
popf
push
in
xchg
shll
stc
cwtl
push
in
cmp
xchg
clc
adc
adc
fadds
nop
clc
sbb
inc
lahf
push
sbb
stos
out
out
in
lcall
fwait
insb
ljmp
daa
shlb
leave
mov
cltd
lcall
je
int3
arpl
je
xor
ja
loopne
std
out
fsubl
and
and
pop
gs
in
jecxz
lcall
rcrb
push
in
dec
dec
dec
lahf
cmc
dec
rclb
adc
fstp
inc
cwtl
clc
xchg
std
ss
imul
adc
adc
out
lahf
pop
in
cltd
inc
call
inc
clc
lcall
pop
insb
cltd
pop
repnz
inc
lock
push
lock
pop
repnz
inc
in
adc
popf
inc
int
push
hlt
fwait
pop
out
adc
pop
out
push
loope
adc
cli
sbb
adc
hlt
fwait
pop
loop
pop
or
cwtl
inc
loopne
push
negl
test
cld
inc
cli
sbb
out
out
sub
xor
into
sbb
add
fwait
inc
in
push
loop
pop
in
inc
out
pop
add
fwait
inc
in
fwait
push
ljmp
lahf
cmc
dec
rcrb
adc
fstp
inc
fwait
std
inc
aam
in
adc
adc
push
sbb
sbb
out
js
sbb
sbb
inc
out
lahf
push
sbb
sbb
int3
fwait
push
out
cwtl
icebp
dec
rcll
adc
fiadds
cld
xchg
incb
lahf
push
sbb
insb
push
adc
lcall
inc
call
inc
in
lcall
sbb
in
push
sbb
out
add
sbb
ret
add
in
sbb
cwtl
inc
call
push
in
lcall
adc
add
and
lcall
pop
call
arpl
adc
adc
out
sahf
add
in
cltd
pop
in
add
cwtl
pop
jecxz
sbb
adc
jecxz
rclb
fwait
push
in
pop
loop
pop
in
arpl
cwtl
icebp
dec
rcr
fcomp
fstp
faddl
xchg
insl
add
data16
or
cwtl
push
add
pop
sbb
inc
sbb
pop
in
in
jmp
aad
clc
add
cltd
push
add
lcall
inc
cld
out
in
in
xchg
aam
cltd
push
sbb
fcomp
fstp
fcomp
inc
cltd
incl
push
sbb
out
sbb
sbb
adc
cltd
pop
call
lahf
adc
adc
add
aam
cwtl
push
out
lahf
pop
sbb
pop
push
xchg
fs
lds
dec
rcrb
adc
fcomp
fstp
fcomp
fldl
clc
inc
lcall
pop
call
lahf
adc
adc
add
aam
cwtl
push
out
lahf
pop
sbb
pop
push
xchg
fs
lds
dec
rcr
fcomp
inc
cltd
incl
push
sbb
add
adc
frstor
push
sbb
pop
push
cltd
add
sbb
rcll
lcall
rcll
fwait
pop
sbb
ret
cltd
push
call
sbb
fstp
fcomp
fstp
faddl
inc
fwait
push
sbb
add
adc
frstor
push
sbb
pop
push
fwait
sbb
inc
sbb
sbb
int
push
out
lahf
cmc
dec
rcrb
adc
fstp
fadds
nop
imul
sar
das
cwtl
push
add
add
lahf
pop
sbb
push
sbb
sbb
ret
data16
adc
sbb
push
push
clc
lds
adc
sbb
rorb
sbb
lcall
out
adc
adc
cwtl
push
sbb
in
adc
cli
sbb
adc
loopne
inc
push
outsb
cmp
push
sbb
push
in
push
jmp
pop
add
inc
cltd
push
in
inc
stc
jnp
jmp
xchg
shlb
fwait
pop
ljmp
rcrl
dec
roll
adc
faddl
xchg
cld
pop
aad
rclb
adc
adc
push
lds
adc
push
repz
adc
aam
loopne
adc
adc
push
notb
adc
adc
push
les
adc
adc
push
stc
adc
adc
push
out
adc
adc
push
enter
adc
push
ficoml
adc
adc
push
call
cld
fsubr
in
in
popf
push
std
jp
test
clc
inc
stc
test
jmp
cwtl
push
jmp
out
push
outsb
ficompl
xchg
jmp
in
lcall
push
sub
test
xchg
adc
adc
ficomps
lcall
stc
into
adc
adc
inc
nop
outsb
sbb
sbb
adc
sbb
pop
sbb
fs
call
insl
in
adc
sar
mov
inc
rcrb
cwtl
push
jecxz
pop
lds
fwait
inc
lock
push
nop
sub
gs
pop
hlt
cwtl
pop
ret
lahf
inc
rcrl
push
in
push
ret
rcrb
xchg
sub
dec
cltd
push
les
adc
xchg
sbb
cwtl
push
xor
cltd
push
stos
clc
sbb
fwait
push
sbb
pop
lods
fwait
inc
stos
lcall
gs
inc
enter
nop
imul
push
loope
pop
call
les
rcrb
fwait
push
in
mov
push
lcall
out
mov
rcll
adc
fcomp
inc
cltd
call
sbb
push
out
pop
in
inc
sbb
inc
sub
push
ljmp
popf
pop
std
cltd
inc
in
fwait
xchg
mov
adc
cwtl
push
out
lahf
pop
jmp
inc
es
pop
xchg
notb
adc
xchg
outsl
out
adc
xchg
enter
lcall
nop
cmc
adc
xchg
fsts
adc
out
cwtl
push
call
xchg
test
pop
sbb
pop
cld
cwtl
pop
not
push
cli
adc
inc
cli
xchg
shll
push
notl
adcl
adc
sbb
call
push
lret
adc
adc
clc
sbb
adc
cmc
cltd
pop
adc
sub
inc
fwait
inc
bnd
adc
sti
sbb
repnz
cmpsl
fsts
test
sbb
adc
add
ficompl
cwtl
pop
iret
lahf
push
jmp
pop
inc
gs
sti
ds
inc
loopne
inc
into
cwtl
push
adc
pop
in
pop
iret
popf
adc
adc
cltd
push
lock
pop
notb
pop
adc
pop
idiv
inc
out
in
in
lahf
cmc
dec
rcr
fadds
nop
clc
sbb
push
add
call
rcll
adc
adc
cli
sbb
adc
loopne
inc
ljmp
push
in
lods
sbb
call
push
in
and
and
fwait
inc
sbb
inc
in
sbb
sbb
push
in
adc
adc
cli
sbb
adc
lods
adc
adc
lahf
cmc
dec
rcr
fcomp
fstp
fcomp
fstp
inc
lahf
cld
xchg
pop
lahf
push
add
out
adc
adc
push
loopne
adc
adc
sbb
adc
out
inc
call
sbb
push
out
scas
sbb
out
and
fwait
push
sbb
push
in
sbb
sbb
push
in
adc
adc
cli
sbb
adc
lods
adc
adc
lahf
cmc
dec
rcr
fcomp
fstp
inc
lcall
adc
lcall
pop
pusha
sbb
pop
out
xchg
fsts
adc
adc
pop
out
cwtl
inc
sbb
xor
lahf
push
sbb
adc
push
add
sbb
xchg
addr16
fwait
inc
out
nop
ficoms
inc
out
jmp
sbb
adc
adc
pusha
push
lcall
adc
cltd
inc
call
inc
in
cli
inc
cwtl
push
sbb
adc
gs
pop
sbb
xchg
data16
adc
fwait
push
sbb
adc
adc
out
nop
fstpl
cwtl
pop
out
decl
lcall
adc
cltd
push
call
push
in
cli
sbb
push
popf
pop
in
cltd
push
call
fcomp
fstp
fiadds
cld
xchg
and
test
in
in
popf
push
stc
aam
les
push
ret
push
shlb
ret
push
les
push
sarl
lds
push
lds
push
leave
popa
aad
leave
aam
into
pop
xlat
push
enter
into
jb
push
int3
aad
into
adc
push
in
xlat
push
loop
push
loopne
rclb
aad
in
aam
loope
xlat
push
in
push
in
rclb
jno
push
jmp
insb
fcomps
adc
jmp
cwtl
push
negl
popa
clc
out
inc
negl
les
addr16
jmp
cmc
fwait
push
clc
out
inc
in
popa
sbb
inc
jmp
icebp
fwait
push
call
icebp
dec
rcll
adc
fcomp
fstp
inc
lcall
adc
ret
in
popf
push
mov
mov
stc
mov
jmp
cwtl
xchg
shr
out
out
aam
cld
jle
push
cli
pusha
push
clc
ja
push
cli
jle
push
cld
jge
push
stc
adc
shr
jmp
cwtl
xchg
jp
add
inc
stc
ja
jmp
cwtl
push
jmp
xchg
lahf
inc
mov
out
in
lcall
in
lcall
in
jmp
push
stos
jnp
jl
dec
cwtl
pop
mov
out
out
fwait
xchg
pusha
ljmp
jbe
inc
mov
out
out
fwait
push
test
leave
fstps
inc
cld
sbb
push
sarl
stos
bound
cltd
pop
mov
jmp
cwtl
push
idivl
cmp
lahf
inc
mov
out
in
lcall
xor
daa
mov
jmp
stc
out
out
cwtl
xchg
xlat
out
out
out
jp
addl
cltd
pop
mov
jmp
cwtl
push
repz
adc
adc
pushf
xchg
out
out
out
inc
sti
scas
call
fsubr
in
in
push
adc
adc
mov
inc
sub
add
inc
out
nop
add
inc
cmpsl
lahf
push
movsl
pop
repz
adc
cmpsb
cwtl
inc
sub
out
cltd
push
mov
pop
in
xchg
sti
shr
in
lcall
pop
add
inc
cltd
push
int3
inc
stc
in
in
out
xchg
arpl
out
out
adc
adc
cli
sbb
in
in
xchg
rcll
fwait
sahf
fs
movsl
push
push
sub
push
cwtl
cltd
pusha
jmp
in
jg
cmp
sbb
inc
fwait
pushf
jmp
cmp
sbb
push
sbb
inc
fwait
pushf
jmp
cmp
int3
adc
pop
inc
clc
xchg
in
jmp
mov
adc
adc
js
cltd
popf
mov
stc
ret
in
out
jns
adc
pushf
xchg
mov
jns
out
inc
stos
jns
jp
lahf
inc
rolb
mov
push
jns
popf
xchg
push
jmp
inc
cli
mov
out
out
aad
insb
ljmp
lahf
push
rolb
xchg
imul
out
inc
jns
jp
js
jle
jnp
jns
popf
xchg
mov
js
jmp
gs
adc
out
addr16
gs
xchg
ljmp
and
adc
movsb
mov
jmp
out
addr16
gs
xchg
les
cmpsb
mov
out
in
in
popa
enter
jmp
aad
inc
enter
jmp
data16
inc
scas
cwtl
pop
movsb
lcall
xchg
in
sahf
xchg
fsubr
in
in
inc
out
fs
inc
shr
addr16
inc
cmc
in
data16
inc
ljmp
jle
out
inc
repz
fucom
in
in
lahf
cmc
dec
rclb
adc
fstp
inc
cwtl
clc
xchg
std
add
das
lahf
inc
sbb
sbb
adc
adc
cltd
pop
call
inc
loopne
outsl
jecxz
cmp
adc
fwait
pop
loop
add
push
loopne
rclb
popf
push
loope
adc
inc
sbb
inc
in
sti
leave
cltd
testb
fcomp
fstp
inc
lahf
cld
nop
rcll
adc
push
hlt
adc
adc
rcll
adc
adc
push
jmp
adc
adc
scas
lahf
pop
lods
cltd
inc
sub
add
inc
out
nop
add
inc
rcrl
adc
adc
rclb
adc
push
aad
hlt
adc
adc
lahf
inc
rcll
adc
adc
adc
push
rclb
adc
push
aad
in
adc
adc
xchg
insl
or
addr16
cld
xor
in
in
lahf
inc
rcrl
mov
inc
setge
cli
jmp
out
out
fwait
push
lods
js
pop
fstpl
cld
stos
jecxz
in
popf
push
cmpl
pop
lods
inc
stc
mov
push
mov
add
loop
in
lcall
sub
cltd
loopne
jmp
push
fidivrl
jne
mov
cli
fs
out
fwait
push
mov
push
cli
jge
push
clc
data16
cli
jne
push
jl
push
js
push
call
cltd
push
stc
inc
in
inc
mov
ror
scas
mov
sbb
adc
add
sbb
xchg
repnz
sub
ficompl
mov
pop
xchg
mov
push
fwait
popf
push
xchg
jp
push
adc
in
mov
xchg
inc
mov
adc
addr16
inc
movsb
jp
jp
and
adc
mov
xchg
inc
sub
xchg
jle
out
addr16
inc
int3
js
lods
cmp
inc
cld
fneni(8087
in
in
popf
push
popf
jp
push
sub
inc
stc
test
jmp
cwtl
push
xchg
xchg
insl
xchg
adc
adc
adc
nop
and
adc
rcll
addb
xchg
arpl
out
out
inc
jnp
add
adc
xor
out
out
fwait
xchg
jo
out
in
aad
jg
in
in
cld
fwait
inc
xchg
lcall
xchg
insl
in
in
jmp
adc
adc
xchg
jns
in
jmp
adc
adc
xchg
imul
adc
lahf
xchg
gs
in
jmp
xchg
jbe
jmp
bound
adc
jmp
inc
jp
add
adc
in
nop
adc
shl
out
out
fwait
xchg
pusha
out
out
in
cwtl
xchg
fs
in
in
lahf
pop
adc
in
cwtl
subl
in
in
jmp
pop
add
popf
popf
jns
in
jmp
test
jmp
sub
popa
sbb
xchg
imul
out
adc
adc
cli
adc
test
out
adc
cltd
xchg
jno
in
jmp
xchg
dec
in
jmp
out
cmpsl
dec
jmp
out
js
jl
add
adc
movsl
gs
in
jmp
inc
lret
push
lods
imul
and
adc
adc
adc
pushf
data16
jmp
xchg
sti
adc
mov
in
jmp
movsb
dec
in
jmp
out
cmpsl
jae
out
out
jp
add
adc
cmpsb
pusha
out
out
in
in
inc
enter
jmp
out
stc
or
dec
out
out
in
in
mov
jle
out
addr16
inc
int3
fwait
push
xchg
jns
js
and
adc
fs
sbbb
lahf
inc
add
inc
cltd
pop
rolb
mul
jmp
xchg
inc
jmp
out
adc
adc
cli
sbb
in
in
xchg
rclb
fwait
xchg
out
in
cwtl
push
in
push
movsl
pop
push
sub
push
cwtl
addl
cltd
push
lock
pop
add
inc
fwait
test
jmp
jp
cmp
sbb
pop
add
inc
fwait
test
jmp
jp
cmp
rclb
pop
add
inc
clc
insb
loopne
jmp
mov
outsb
loopne
sbb
mov
outsb
hlt
adc
nop
imul
push
aad
sti
xor
out
in
nop
rclb
pop
xlat
lahf
inc
sub
pop
lcall
cltd
inc
cwtl
push
rcrb
movsl
in
data16
data16
inc
enter
jmp
out
adc
adc
cli
sbb
in
in
xchg
rclb
fwait
xchg
in
cwtl
push
in
push
movsl
pop
push
sub
inc
cwtl
addl
cmp
adc
sbb
test
jmp
jp
cmp
add
cwtl
pop
iret
lahf
test
in
jmp
ret
cmp
add
inc
stc
mov
pop
popf
push
fucomp
data16
fsubrp
popa
int3
out
addr16
inc
leave
stc
lahf
lahf
inc
rcrl
add
jmp
cwtl
push
jecxz
insl
or
insb
push
adc
lcall
inc
sbb
push
loop
pop
sbb
lahf
pop
jmp
out
cltd
xchg
out
in
cwtl
push
sbb
xchg
pop
jmp
out
cltd
sahf
pop
out
out
in
cwtl
inc
aam
inc
or
jmp
pop
mov
xchg
out
out
cltd
push
mov
imul
adc
xchg
aad
clc
addr16
insb
push
adc
lcall
xchg
push
out
out
in
cwtl
cltd
push
out
in
in
lahf
inc
sbb
out
in
cwtl
xchg
push
out
in
in
das
xchg
push
in
in
jmp
push
cltd
sahf
push
out
out
in
cwtl
inc
or
inc
xor
lcall
pop
rcrb
push
out
in
in
lahf
push
mov
pushf
push
in
jmp
lcall
add
jmp
sbb
in
clc
mov
pusha
sbb
aad
adc
dec
rorb
fstp
fcomp
fstp
inc
lahf
cld
xchg
incb
cld
cmc
std
in
in
popf
push
loope
cmp
pushl
stc
cmpsb
jmp
cwtl
push
out
jl
add
mov
sti
mov
out
in
lcall
adc
adc
jp
js
jl
adc
adc
gs
inc
call
imul
insl
in
data16
sar
sbb
gs
inc
in
test
adc
adc
hlt
dec
rcr
fadds
nop
clc
add
addr16
jmp
cwtl
push
jecxz
cmp
std
mov
push
loope
sti
push
std
out
in
lcall
mov
clc
and
in
jmp
push
ljmp
adc
adc
jle
jns
adc
out
addr16
inc
in
fwait
push
loopne
insb
out
pusha
push
xchg
outsl
out
gs
out
addr16
inc
jmp
adc
fcomp
fldl
clc
xchg
std
cs
in
adc
adc
push
or
adc
aad
fmull
adc
rcll
or
push
ret
or
adc
aam
les
adc
adc
push
lret
adc
aad
enter
adc
push
icebp
or
push
testl
push
clc
push
adc
adc
push
decb
push
in
adc
adc
push
in
xor
push
jmp
out
out
in
cwtl
push
sbb
cli
adc
xchg
insl
jmp
pop
ljmp
push
lcall
js
or
push
out
popf
push
in
cltd
pop
in
xchg
rclb
lcall
add
or
inc
in
fwait
inc
call
into
pop
adc
sbb
push
in
push
call
icebp
dec
roll
adc
fadds
nop
clc
or
push
lcall
out
out
fwait
push
cld
js
push
xor
fwait
pop
cli
inc
cld
out
cli
in
in
popf
push
cmc
in
callw
negb
inc
in
sbb
push
jecxz
sbb
pop
incl
mov
clc
out
out
in
cwtl
icebp
dec
rcr
fadds
nop
clc
or
idiv
jmp
cwtl
push
sti
jl
clc
std
mov
push
stc
inc
sti
mov
push
in
jns
inc
std
fcompl
mov
in
jmp
push
out
loopne
andb
cmp
in
popf
push
lcall
adc
adc
jp
js
jl
adc
shr
gs
inc
call
imul
sar
push
jns
out
fs
popa
add
addr16
jmp
loope
inc
loopne
fs
inc
call
adc
adc
filds
std
xchg
decl
adc
aas
adc
sbb
sti
mov
adc
cli
sub
out
out
fwait
xchg
insb
in
out
in
jnp
jbe
leave
cwtl
cltd
push
clc
sbb
in
jmp
xchg
out
jmp
jns
or
imul
out
inc
sti
in
out
in
lcall
cmp
std
mov
xchg
imul
enter
cwtl
push
out
add
fistps
jmp
stc
aam
jmp
cwtl
xchg
fwait
jmp
push
jmp
cltd
xchg
in
inc
cld
mov
xchg
insl
out
in
jmp
rcll
sbb
jmp
inc
cli
mov
out
out
fwait
xchg
int3
in
out
in
jnp
add
push
clc
nop
clc
in
jmp
push
aam
loopne
adc
adc
adc
adc
adc
in
inc
cld
fs
in
in
jle
jnp
sahf
xchg
sub
in
inc
clc
jne
in
jmp
xor
cltd
popf
pop
out
in
jmp
stc
inc
jmp
stc
or
xchg
push
jmp
adc
adc
js
in
in
lods
inc
adc
adc
xchg
js
jmp
test
adc
ja
sahf
js
out
in
test
jne
test
in
jmp
push
adc
adc
cwtl
xchg
arpl
out
out
stos
inc
adc
adc
in
in
in
scas
push
adc
adc
test
jmp
and
jne
xchg
addr16
in
jmp
aas
adc
adc
cwtl
lahf
iret
jmp
adc
adc
into
in
in
in
lods
jg
adc
jb
xchg
repnz
jmp
test
adc
ja
sahf
imul
out
in
and
jbe
xchg
jmp
adc
adc
call
pop
jmp
push
call
adc
adc
adc
out
inc
lahf
xchg
jl
out
in
inc
jmp
jmp
sbb
in
inc
lahf
push
sbb
cmp
jmp
xchg
pop
cltd
test
in
jmp
stc
mov
xchg
lahf
jmp
cwtl
in
out
in
sahf
xchg
sub
in
inc
out
movsb
sahf
out
jmp
pushf
xchg
pop
jmp
adc
adc
xchg
push
call
in
out
in
inc
cld
and
test
pushf
xchg
sti
jmp
ss
out
in
sahf
cltd
int3
in
in
in
inc
popf
test
out
jmp
inc
cli
sbb
out
out
js
jle
jnp
jns
jp
jp
adc
xchg
lahf
xchg
cld
in
out
in
inc
jmp
in
xchg
xchg
in
out
in
nop
test
jmp
xchg
mov
adc
jnp
jns
popf
xchg
adc
jmp
inc
cli
sar
out
out
js
cltd
popf
adc
in
jmp
lcall
sti
jp
out
in
nop
rcrb
adc
jp
js
jle
jns
adc
pushf
xchg
sti
jmp
inc
in
xchg
xchg
jmp
xchg
in
out
in
adc
pushf
xchg
adc
out
out
inc
sti
shl
out
in
lcall
adc
inc
in
mov
cltd
xchg
adc
in
jmp
out
cmpsl
xchg
jmp
pushf
in
out
in
in
mov
jmp
std
aad
in
adc
adc
mov
push
jnp
sahf
cltd
mov
clc
cmp
in
jmp
xchg
out
jmp
adc
adc
adc
cmpsb
xchg
in
out
in
in
subl
out
in
jmp
lods
out
jmp
adc
rcll
adc
adc
jle
pushf
xchg
jecxz
out
out
inc
in
mov
cltd
xchg
mov
out
cmpsl
xchg
jmp
int3
in
out
in
lcall
lods
mov
gs
sahf
andl
jmp
xchg
mov
xchg
push
jmp
mov
pop
sbb
push
aas
bound
push
jecxz
adc
adc
mov
jmp
std
cltd
push
in
hlt
dec
rcr
fcomp
fstp
inc
lcall
adc
xor
push
xchg
jnp
adc
cli
repnz
out
fwait
xchg
in
out
in
jnp
push
jp
cwtl
cltd
loopne
in
in
inc
clc
das
cmc
in
jmp
xchg
out
jmp
jns
sbb
fistpl
out
inc
sti
xor
out
in
lcall
lret
lcall
sti
pop
imul
in
lcall
adc
sahf
cltd
call
clc
sbb
in
jmp
adc
adc
out
inc
js
jmp
in
in
jmp
inc
sbb
mov
in
in
xchg
aam
xchg
rcrl
xchg
repnz
adc
push
sbb
or
pop
sbb
push
sbb
inc
sbb
jecxz
in
jmp
aad
clc
xor
sub
addr16
lahf
inc
sbb
pop
sbb
push
sbb
pop
in
jmp
aad
cwtl
inc
sbb
ja
adc
jnp
jns
jp
lahf
xchg
cld
in
out
in
inc
lahf
pop
sbb
jecxz
jmp
cwtl
xchg
jmp
cld
in
in
popf
xchg
cmc
out
in
jmp
xchg
imul
jmp
lcall
add
jmp
pop
sbb
pop
jmp
cmc
out
in
jmp
adc
cmpsb
cld
in
out
in
in
cmp
adc
adc
sub
push
xchg
or
adc
stos
dec
adc
adc
mov
in
in
scas
jl
adc
jb
test
jbe
adc
ja
xchg
mov
out
in
stos
data16
adc
popf
mov
in
jmp
popa
adc
adc
cwtl
xchg
cmp
lcall
je
adc
jb
pushf
mov
jle
adc
ja
xchg
js
adc
jne
xchg
mov
fdivs
mov
push
adc
adc
test
inc
adc
ja
xchg
mov
inc
adc
adc
popf
test
push
adc
adc
cwtl
xchg
push
adc
adc
lods
in
in
in
lods
inc
adc
adc
pushf
lods
out
jmp
stos
push
adc
ja
xchg
in
out
in
and
jbe
xchg
shr
out
out
stos
dec
adc
adc
fsubr
in
in
scas
adc
adc
test
out
jmp
test
ja
xchg
fsubr
out
in
stos
jge
adc
jne
popf
fucomip
in
jmp
jge
adc
cwtl
xchg
jmp
adc
adc
ret
in
lods
ja
adc
jb
pushf
out
jmp
stos
cmp
adc
ja
xchg
in
out
in
stos
adc
adc
xchg
leave
out
in
jmp
jne
adc
cwtl
lahf
leave
jmp
adc
adc
int3
in
in
in
daa
shlb
xchg
lret
in
jnp
adc
adc
ss
out
in
lcall
adc
adc
cld
add
in
in
popf
xchg
aad
in
jmp
adc
adc
movsb
repnz
jmp
pushf
xchg
cmpsl
jmp
inc
call
out
out
inc
cwtl
adc
clc
cmc
hlt
in
jmp
aad
sahf
xchg
fsubr
in
in
inc
fwait
pushf
out
jmp
inc
cli
jge
out
out
lahf
xchg
xchg
icebp
out
in
jmp
stc
dec
cmc
jmp
lcall
sti
dec
out
in
nop
rclb
shlb
fwait
inc
sbb
pop
sbb
inc
and
xchg
icebp
out
in
jmp
stc
sub
jmp
xchg
shlb
out
movsb
repnz
jmp
out
inc
out
lahf
popf
aad
in
jmp
stc
xchg
jmp
xchg
pop
lahf
cmc
dec
rclb
adc
fstp
fcomp
fldl
clc
inc
lcall
inc
sbb
push
push
nop
cld
adc
sbb
lcall
add
sbb
pop
sbb
cwtl
push
sbb
push
pop
adc
adc
cwtl
inc
sbb
push
xchg
repz
pop
sbb
lcall
push
call
fcomp
fstp
inc
fwait
std
inc
aam
in
adc
adc
push
sbb
insb
out
in
in
xchg
aam
cltd
pop
call
inc
in
lcall
in
jmp
aad
xchg
aam
lret
call
fcomp
fstp
fiadds
cld
xchg
cmp
int3
fwait
pop
push
lcall
adc
adc
push
in
adc
adc
push
cli
adc
adc
lret
cwtl
sbb
adc
lret
xchg
rclb
fwait
push
int3
xchg
insb
cli
adc
xchg
pop
adc
adc
pop
lret
ljmp
xchg
rcrl
xchg
push
adc
adc
inc
lret
imul
in
in
xchg
aam
xchg
rcrl
xchg
stc
adc
adc
push
lret
ret
in
xchg
aam
xchg
shll
push
call
adc
aam
call
sti
sbb
adc
jmp
fs
lahf
inc
int3
inc
stc
mov
jmp
xchg
pop
lahf
pop
std
lahf
pop
pop
cltd
inc
clc
into
xchg
insb
adc
lcall
pop
enter
add
adc
sbb
adc
adc
out
adc
adc
je
push
leave
sbb
cwtl
inc
enter
popf
inc
leave
cltd
push
clc
xchg
icebp
adc
jecxz
pop
std
ret
cli
popf
pop
std
data16
sbb
adc
loop
pusha
or
std
cltd
pop
enter
add
adc
int
push
aad
cld
adc
adc
lahf
pop
std
fwait
pop
loopne
push
out
adc
adc
add
int3
inc
stc
dec
in
jmp
xchg
pop
popf
push
std
xchg
outsb
call
imul
push
in
push
clc
popf
pop
lret
sub
in
in
xchg
aam
fwait
push
in
sbb
adc
jecxz
or
cwtl
pop
int3
fwait
add
nop
aam
cwtl
push
iret
dec
clc
mov
outsl
out
adc
sbb
adc
cwtl
inc
cld
xchg
clc
adc
clc
shl
sbb
lret
sbb
cltd
inc
cwtl
push
enter
popf
push
leave
lahf
pop
int3
inc
stc
out
jmp
xchg
pop
popf
push
loope
outsb
clc
adc
sbb
adc
adc
adc
pusha
sbb
adc
imul
arpl
cltd
pop
in
rclb
lcall
loopne
clc
adc
in
or
lcall
pushf
add
adc
cltd
pop
clc
cltd
pop
out
push
in
adc
adc
xor
lret
cwtl
sbb
adc
lret
xchg
rclb
fwait
push
int3
xlat
push
out
adc
adc
mov
push
enter
cwtl
icebp
dec
rcr
fcomp
fstp
faddl
xchg
cld
or
sbb
out
adc
adc
push
in
adc
adc
lahf
inc
in
cltd
push
in
insl
ret
or
loop
push
call
cltd
push
ljmp
popf
pop
in
stc
lret
lahf
inc
jmp
out
in
lcall
adc
adc
out
pop
in
cltd
inc
in
insl
fcoms
adc
xchg
sahf
adc
lcall
inc
aad
inc
cltd
push
call
add
inc
cltd
push
loopne
stc
cmpsb
icebp
jmp
lcall
data16
inc
out
cwtl
push
loopne
pop
ret
adc
inc
sbb
pop
in
cli
add
out
out
xchg
xlat
sbb
ss
inc
sbb
imul
popa
push
lcall
inc
aad
inc
cltd
push
sbb
pop
add
inc
in
sti
jae
out
in
nop
rcrb
push
out
lahf
pop
loope
inc
loopne
inc
rcll
popf
inc
in
push
call
push
in
clc
jno
jmp
lcall
addr16
inc
sbb
and
or
rclb
adc
lahf
inc
std
fwait
inc
cld
fwait
push
testb
imul
in
popf
push
std
cltd
pop
clc
inc
lcall
in
jmp
aad
cwtl
push
cld
lcall
fcomp
fldl
clc
xchg
std
jp
rcll
mov
push
jle
lcall
inc
cld
shl
in
jle
lcall
inc
cld
shl
in
in
cltd
pop
mov
sti
pushf
out
in
aam
clc
adc
adc
inc
loop
lahf
push
lods
inc
cwtl
pop
mov
inc
mov
sahf
push
clc
inc
lahf
pop
mov
stc
inc
in
jmp
inc
cli
dec
out
out
fwait
push
call
popa
sbb
adc
adc
popa
in
sar
or
data16
inc
ljmp
popf
push
in
mov
fs
popa
clc
out
inc
out
dec
fwait
hlt
dec
rolb
add
rolb
pop
popf
sub
popa
cmc
push
cld
cmpsb
sarb
jae
repnz
add
iret
mov
pop
adcb
je
shr
std
xchg
mov
inc
fisubl
lret
or
add
and
xchg
xor
cwtl
pop
outsl
fcmovbe
adc
mov
add
push
imul
fadd
pop
out
lret
cs
std
mov
je
aaa
cmp
xor
cmp
jnp
or
pop
and
push
cltd
pushf
daa
pop
mov
pop
xchg
push
mov
add
cmp
scas
pushf
sub
jo
loopne
mov
adc
push
add
xor
and
mov
aad
out
leave
mov
sbb
push
xor
cmpsb
mov
sbbb
adc
lds
and
call
adc
and
lock
jmp
stos
xor
jae
mov
repnz
mov
jb
xor
arpl
out
mov
stos
in
or
dec
adc
test
in
popa
stc
cmp
pop
jecxz
add
repz
bnd
push
ret
cs
adc
out
aas
push
mov
insl
inc
jge
sub
adc
push
in
je
call
pop
pop
xor
mov
mov
notb
fidivrs
mov
je
sub
inc
in
inc
loop
lods
pop
inc
aaa
sub
sub
jae
ret
gs
adc
loope
rcr
pop
jnp
mov
scas
mov
out
add
pop
stos
inc
mov
leave
out
in
jle
pop
mov
or
or
loope
xlat
fmulp
xor
int3
outsb
xor
push
mov
jmp
inc
fidivrl
shlb
movsb
add
in
popl
fcomi
ret
cmp
loopne
andl
mov
ljmp
mov
mov
lods
ljmp
mov
inc
int3
or
xchg
mov
ret
add
push
cli
loop
aad
or
inc
mov
xchg
clc
stos
and
rolb
push
mov
dec
pop
stc
loop
xor
mov
into
addl
sub
aam
pusha
shrl
cmp
inc
inc
loope
ljmp
test
and
add
mov
popf
jae
lds
sbb
dec
xchg
jmp
out
xchg
or
sbb
lahf
sub
add
pop
mov
cs
adc
xor
es
fs
adc
insl
jb
xor
fs
rol
sbb
xor
jge
insb
dec
sti
xchg
loop
andl
push
inc
les
jle
mov
pop
loopne
cmp
fistps
mov
lds
divl
sbb
mov
jge
les
mov
jp
sub
add
adc
mov
mov
mov
mov
xchg
pop
push
inc
adc
xchg
in
mov
sbbb
xchg
jmp
mov
sbb
mov
jg
ja
lret
sub
int
sub
mov
test
push
jecxz
clc
cmpb
ret
xchg
jne
add
sbb
cwtl
sub
pushf
xchg
dec
adcb
jecxz
sub
inc
es
int
ss
cmp
or
lret
lea
test
push
mov
mov
mov
fcmovbe
inc
cltd
sarl
jmp
adc
cmp
imul
inc
cmpsl
pop
pop
lods
or
add
add
add
add
add
add
add
pop
push
rcr
daa
dec
pop
adc
sbb
adc
push
xchg
negl
sbb
adc
sbb
cwtl
sbb
adc
or
xor
pop
adc
sbb
jg
push
sbb
adc
cltd
dec
ss
pop
cmc
push
adc
push
pop
push
mov
push
mov
cmpsb
popf
shrl
aaa
outsb
jle
imul
fcompl
scas
add
cmp
adc
jle
arpl
xchg
add
ds
adc
push
adc
sbb
fcomps
xor
jb
jbe
push
add
push
cmp
or
lock
adc
les
fnstenv
push
rclb
or
je
and
inc
push
jnp
insl
xor
sahf
rorb
aas
in
pop
adc
das
cmp
push
xchg
mov
push
testl
sub
push
cwtl
mov
xchg
push
sbb
in
adc
and
cmc
gs
rorl
push
mov
jg
adc
push
lret
xchg
cmp
pop
jmp
aad
pop
push
cs
pop
or
mov
jns
sbb
adc
dec
xchg
ja
xor
fistpl
leave
xchg
jmp
pop
jne
or
mov
jge
xchg
xchg
dec
push
jmp
jge
adc
push
repz
fisttpl
inc
adc
or
lahf
add
xor
push
jno
imul
push
mov
sub
fistpl
mov
test
mov
jg
push
sub
mov
test
cltd
imul
pop
das
push
xchg
pop
or
mov
push
lret
aaa
inc
jge
adc
push
fisttpl
mov
aas
pop
push
das
mov
xor
xor
inc
jle
push
movsb
pop
xor
mov
test
push
xchg
mov
pop
jge
xchg
sub
dec
cmp
jp
adc
mov
xchg
or
jns
inc
mov
es
cmp
xor
outsb
pop
and
fwait
pop
adc
adc
mov
sbb
sbb
call
add
inc
add
and
jno
push
cli
adc
fsts
pushf
push
mov
dec
push
and
xchg
add
adc
int3
jg
adc
fstpl
scas
or
mov
inc
pop
push
sub
pop
pop
loope
adc
mov
sub
ss
xchg
andl
es
cmp
sub
sti
cmp
ret
pop
fbld
add
and
push
mov
adc
pop
dec
push
nop
and
daa
cmp
push
adc
push
lret
pop
mov
imul
cmp
pop
sub
cmp
push
jbe
xchg
jl
adc
rcrl
mov
test
fwait
jle
sub
pop
jns
xchg
das
or
maxps
loopne
push
repnz
pop
xchg
push
insl
xchg
addb
lock
inc
cmp
pop
cmp
push
or
jl
mov
iret
cmp
jge
mov
dec
insb
jg
adc
shll
mov
push
cmp
mov
arpl
push
push
xchg
cmp
pop
sbb
roll
daa
sub
test
in
pop
sahf
or
rcl
adc
xchg
jg
jae
test
jle
push
cmpsb
push
xchg
addr16
lret
xor
rcll
push
push
push
adc
addb
or
push
push
or
or
add
rcll
xor
pop
jge
xchg
out
imul
and
xor
adc
subl
sub
push
xchg
mov
sti
cmp
stos
leave
push
pop
xchg
or
adc
adc
pop
movsl
inc
repnz
adc
js
xchg
mov
sbb
mov
or
scas
fisttpl
out
fisubrl
sbb
lret
mov
mov
mov
push
pop
sbb
andb
pop
mov
sbb
xchg
cmp
jge
xchg
sub
fistps
pushf
dec
xchg
or
sti
pop
outsb
sbb
sub
fnstcw
adc
insl
sbb
or
arpl
jns
mov
push
mov
pusha
sbb
mov
imul
sbb
addr16
mov
dec
movsl
sti
pushf
cld
sub
enter
fsubp
test
fcoml
andl
push
fmulp
inc
mov
push
nop
xor
push
andb
ficompl
cmp
popa
jns
push
pop
cltd
outsb
dec
mov
pop
loop
push
and
mov
bound
jge
stc
cmp
cmp
sub
jge
sub
lods
loopne
push
addr16
dec
xorb
xor
call
add
mov
sahf
sbb
lahf
movsb
push
push
mov
inc
xorb
or
add
and
and
cmp
push
imul
mov
out
jl
ja
add
pop
push
cwtl
jnp
jp
or
ds
psubb
xlat
adc
sbb
rclb
xor
cmp
daa
inc
dec
inc
pop
jle
insb
push
jnp
mov
jbe
push
ja
ja
jb
popa
mov
push
leave
push
pushf
pop
dec
push
stc
xor
ss
pop
xchg
sbb
adc
adc
and
jle
jae
cmp
out
sub
dec
pop
cmp
popa
jl
lahf
add
jne
ss
jg
jge
dec
jg
add
pop
dec
bound
pop
ds
bound
jns
xchg
cmp
pop
adc
jns
imul
jl
call
outsl
mov
daa
pusha
jecxz
and
jnp
mov
sbb
bound
and
sbb
pop
cwtl
dec
aas
arpl
jo
jo
or
jp
int3
addr16
dec
cld
push
xor
cmp
not
outsb
sarb
sbb
sbb
sbb
pop
ljmp
xor
fisttps
mov
xchg
adc
jp
fwait
jg
adc
cmp
sbb
sub
sbb
sub
cmp
jb
cltd
push
adcl
sbb
repz
in
push
adc
aam
and
test
cltd
lret
pop
cltd
mov
fwait
dec
in
pop
push
in
xor
imul
sbb
sbb
scas
dec
sbb
fistps
mov
sub
jecxz
lds
cmp
or
pushf
pop
or
pop
jg
mov
and
dec
repnz
dec
dec
xchg
pop
icebp
out
and
dec
adc
jae
nop
inc
lahf
jge
lahf
lahf
adc
lock
loop
lahf
cmpsl
lea
fcoms
pop
test
in
mov
adc
fsub
or
adc
cmpsb
xchg
das
inc
adc
addr16
sbb
xchg
fildll
pop
addr16
fistps
jbe
xchg
fwait
pop
add
sbb
in
fwait
mov
fs
xlat
insl
sbb
insb
add
add
sub
jecxz
xchg
xchg
pop
cmc
jecxz
cmp
add
xlat
adc
xor
adc
fdiv
out
xchg
out
out
push
cwtl
repz
mov
add
mov
push
push
cmp
jge
xchg
sbb
jl
dec
or
imul
mov
xchg
out
cmp
sbb
add
ds
xchg
adc
dec
mov
aad
adc
das
xlat
test
add
xchg
pop
xor
sub
lret
push
rol
xchg
add
dec
call
push
jnp
cmc
loopne
pusha
push
loopne
push
imul
pop
roll
call
and
push
lds
jge
sbb
jo
mov
sti
inc
ja
ja
jmp
cmp
outsl
mov
inc
fldenv
push
fcoms
sub
sbb
dec
inc
adc
jg
add
inc
cmp
adcl
push
xchg
test
jge
dec
shll
inc
push
or
inc
and
and
pop
and
dec
je
sub
jno
insl
subl
pop
test
fbstp
xchg
jnp
test
cmp
sub
xchg
and
sub
sub
jl
adc
imul
cmp
sbb
popw
push
outsb
outsb
popa
outsl
popa
arpl
sub
pop
pop
push
sbb
pop
push
push
push
push
pop
push
push
push
dec
inc
dec
dec
dec
mov
pushf
cmp
inc
dec
inc
inc
inc
inc
dec
inc
adc
jne
mov
jge
jo
jo
adc
imul
lea
test
adc
mov
adc
or
xchg
orb
cmpsl
pop
or
push
sub
push
mov
rorl
iret
jmp
jb
or
or
add
jle
inc
mov
and
frstor
pop
or
mov
add
int3
xlat
or
push
mov
push
roll
fmuls
ficompl
sub
adc
fimull
mov
cld
mov
or
push
cmp
cmpsl
or
or
pop
sub
orl
or
mov
mov
or
call
dec
add
xor
xchg
mov
mov
out
dec
pop
jmp
or
mov
cmp
xor
dec
pop
popf
wbinvd
push
stos
sbb
cmp
sub
or
or
or
cmpb
pop
push
ds
mov
or
imul
or
testl
or
ljmp
aam
insl
mov
ljmp
sbb
or
rorl
push
mov
xchg
or
addb
subb
fldt
or
add
daa
orb
mov
xor
test
pop
andb
divl
mov
push
clc
mov
add
stos
pop
jne
mov
out
sbb
int
js
dec
in
or
enter
or
shrl
or
or
xchg
sub
addl
jle
or
xor
int
jno
or
mov
cmpsl
lea
fisubl
or
xchg
addb
pop
pop
lcall
iret
sub
mov
flds
scas
mov
push
or
cmp
push
pop
xor
add
jg
leave
adc
cmp
xchg
pop
and
and
xor
push
xchg
adc
or
or
pop
mov
push
cli
cmp
xchg
push
cmp
mov
or
xor
aaa
xchg
rorl
fisttps
cmp
inc
aas
sqrtps
cmp
adc
dec
jecxz
out
pop
xchg
mov
or
xchg
orb
rorb
push
fadd
sub
pop
xchg
add
mov
or
xchg
nop
cmp
aas
or
push
mov
or
mov
testl
inc
mov
push
js
dec
lret
xor
sbbb
test
je
or
jne
pop
xor
pop
cmp
pop
lret
fs
iret
push
psrlw
rorl
push
cmp
mov
jecxz
sub
arpl
leave
cmp
ja
or
divb
mov
sub
sub
mov
xor
daa
push
cmpsb
fwait
aas
sahf
test
or
test
mov
push
lahf
les
xchg
ret
or
xchg
xlat
add
gs
sbb
jmp
or
fwait
mov
mov
mov
or
or
xchg
das
xchg
orb
xorl
adc
mov
xchg
fwait
js
roll
ss
push
or
mov
and
scas
or
stos
mov
push
ret
aas
inc
xchg
jl
imul
push
lods
dec
cli
outsl
cmp
jae
and
or
bextr
adc
push
ret
cli
jne
cmp
lahf
jg
push
decl
push
xor
and
xchg
or
push
mov
or
rcrb
subl
or
mov
stc
cmp
nop
cmp
jae
sub
push
cmp
sub
sub
jmp
xor
jecxz
xlat
push
xchg
sub
cmpb
cld
pop
lcall
xchg
aaa
or
or
mov
rorl
faddl
push
or
jmp
adc
jns
sbb
nop
mov
mov
jg
push
or
push
bound
and
inc
aas
and
aaa
pop
dec
sbb
push
push
enter
test
xor
lahf
aas
fdivp
or
dec
lds
dec
stc
mov
insl
test
loope
or
dec
outsb
push
pop
sbb
cmp
nop
xchg
push
sub
mov
xchg
mov
loop
lds
jns
jecxz
fwait
call
xor
rorl
xchg
inc
nop
movsl
sub
jp
test
sti
adc
aam
cwtl
cld
mulb
in
xor
sub
mov
or
or
cwtl
inc
cmp
adc
rclb
sbb
dec
ret
mov
add
je
aas
mov
mov
ljmp
sbb
mov
xchg
jle
lds
push
dec
cmc
push
sbb
outsb
fcmovnbe
test
inc
push
and
ficompl
pushf
scas
lret
xchg
cwtl
sbb
out
push
xchg
sbb
mov
fistl
and
loope
sbb
bound
inc
sub
cli
insb
ljmp
dec
cmpsl
ret
sbb
lods
jl
inc
dec
sti
pop
je
mov
icebp
push
shlb
fwait
jae
leave
movl
xor
sbb
xchg
subb
mov
sbb
mov
fistl
ss
xor
mov
push
sbb
xor
pop
dec
mov
sub
dec
imul
add
mov
test
push
sbb
cmc
stos
cmpsb
sbb
outsl
rcll
add
das
lods
scas
insb
xchg
sbb
iret
xchg
fidivs
mov
sbb
fprem
xchg
xchg
and
sbb
dec
shll
push
arpl
lcall
push
push
imul
xchg
dec
sbb
jl
lods
out
mov
sbb
mov
cmp
cmp
pop
sub
fs
dec
int
adc
xchg
insl
iret
stos
call
stos
movsl
cmp
icebp
cli
inc
sbb
push
xchg
push
pop
jbe
push
dec
daa
imull
into
sbb
outsl
out
sarl
add
pop
sbb
andps
cli
sbb
pop
adc
pop
popf
pop
int3
sub
add
rcl
xchg
mov
cmpsb
int3
and
add
sbb
fdiv
mov
or
and
push
and
mov
xchg
das
stos
out
test
jno
and
cmpsb
jecxz
pop
in
add
or
add
xchg
mov
mov
scas
mov
ljmp
out
in
jmp
add
aas
sti
sub
es
pop
loopne
out
fwait
cmp
jecxz
push
cli
and
insl
sbb
pusha
packssdw
addr16
gs
cmp
imul
divl
xchg
scas
xor
in
lock
sbb
shrb
sbb
push
mov
sbb
push
ljmp
fcomps
xor
icebp
mov
push
es
sbb
out
sbb
and
rcrb
ret
mov
ret
push
ss
dec
movsb
sbb
adc
aas
xor
and
lcall
icebp
add
mov
xchg
sarl
mov
daa
inc
xchg
sbb
inc
jmp
cltd
pop
cmc
adc
xchg
imul
in
fbstp
cmp
jl
lods
popa
jo
negl
imull
mov
std
les
mov
addb
mov
cmp
lret
test
addb
aam
out
stc
fdivl
sbb
test
and
lods
sbb
pop
fmull
ss
jle
insb
mov
mov
sbb
push
cmp
popf
sahf
scas
push
jmp
pushf
dec
cmpsl
lret
leave
sub
fsts
ret
push
rcrl
out
adc
fisubrs
ret
sbb
lahf
add
fnstcw
mov
sbb
lcall
sbb
out
or
sbb
psrlq
int3
sbb
out
sbb
and
cwtl
out
jge
add
and
clc
jae
mov
shrb
xor
popf
push
frstor
and
fstps
and
movsb
and
sub
adc
pushf
stc
pop
and
ljmp
mov
fcmovu
decl
push
jecxz
lret
pop
out
js
xor
mov
icebp
enter
test
push
push
sub
cmp
pop
mov
cmc
cmc
mov
xchg
popf
sub
subl
nop
add
lea
cmp
insl
int3
adc
adc
in
sbb
std
sbb
add
xchg
pop
leave
lret
out
out
ret
in
aam
dec
inc
pop
sbb
jg
pop
inc
stc
dec
sbb
push
into
push
lea
mov
mov
popa
dec
pop
add
inc
sti
mov
pop
call
mov
ficomps
sbb
nop
pop
call
sbb
or
repnz
push
jbe
sub
sbb
insl
push
cltd
and
sbb
mov
sbb
mov
fldt
fsubl
cltd
adc
inc
clc
cltd
loope
jg
repz
sbb
and
cmpl
stc
sbb
xchg
sbb
and
or
rcr
int3
fs
sbb
cmp
inc
out
imull
pusha
xor
jmp
out
in
imul
outsb
mov
gs
gs
mov
add
test
jo
xchg
or
lahf
sbb
xor
xchg
pop
sub
out
das
cmovnp
inc
test
cwtl
rcll
lods
jae
int3
out
jmp
in
out
and
pop
and
sahf
es
sub
gs
fisttpl
test
push
jno
mov
into
sub
jmp
adc
pop
mov
xor
mov
lea
cli
cwtl
addr16
mov
jmp
mov
push
sbb
mov
adc
daa
aam
xlat
inc
aad
cwtl
js
mov
dec
xlat
mov
jg
mov
arpl
mov
fsubs
stos
aam
xlat
stos
fld
adc
mov
in
ljmp
jp
mov
in
out
out
in
out
daa
sbb
addr16
es
and
out
in
out
jmp
in
out
in
out
jmp
in
out
in
out
xchg
in
out
in
out
jmp
mov
shr
imul
data16
sti
imul
cld
and
addr16
fs
imul
data16
call
pop
fs
gs
data16
inc
imul
pushw
imul
mov
xor
int3
in
cwtl
cmc
sub
xchg
xor
daa
and
sub
pop
lcall
xchg
mov
adc
push
mov
je
sahf
fisttpll
loope
cwtl
hlt
adc
pop
ss
jne
mov
sbb
adc
adc
and
sub
daa
cmp
out
cmp
sti
dec
pop
xor
xor
xchg
or
cmp
loop
xchg
cli
push
pop
add
push
push
xchg
sub
sub
psrad
xchg
pop
cwtl
hlt
push
cli
leave
call
sbb
stc
imul
cmp
sbb
xor
dec
cmp
call
fidivs
pop
icebp
push
push
ljmp
cmp
insl
push
addr16
adc
mov
addr16
fs
gs
data16
mov
mov
int
mov
sar
fidivs
fcom
test
out
sbb
fdivl
shrb
fbstp
fisubs
fsubrl
scas
fisubs
aad
or
cmc
call
fcmovnu
fcmovnu
enter
fimuls
shlb
fsubl
data16
ljmp
call
shr
leave
out
call
shr
out
call
leave
jmp
out
call
clc
jmp
out
call
int3
jmp
out
call
lock
out
call
ret
jmp
out
call
imul
out
call
jmp
push
enter
arpl
pusha
push
data16
fsubs
fisubl
imul
shlb
data16
frstor
shll
imul
xor
xor
imul
cmp
ss
xor
fsubs
lret
imul
lret
addr16
sub
sub
fs
gs
and
data16
shlb
into
and
imul
cli
addr16
fs
pop
imul
pop
addr16
fs
ljmpw
jmp
jmp
imul
pop
jmp
repnz
addr16
fs
imul
push
addr16
fs
data16
imul
addr16
fs
gs
addr16
dec
fs
dec
ss
loope
cmp
ljmp
xchg
call
inc
cmp
inc
shlb
mov
mov
inc
sahf
mov
dec
fildll
call
sbb
test
jnp
scas
call
push
shrb
pop
jecxz
jecxz
mov
out
mov
out
adc
test
xchg
cmpsl
loop
xchg
loopne
mov
jecxz
adcb
pop
xchg
loope
jecxz
loopne
mov
out
pop
loope
jecxz
mov
loop
out
shl
and
stc
sub
aaa
and
daa
cwtl
hlt
es
lret
sti
enter
into
cli
pop
clc
sti
pop
stc
iret
cmc
pop
pop
clc
push
sti
iret
stc
sub
pop
icebp
sti
push
stc
ret
cli
sar
pop
idiv
push
hlt
cli
push
clc
lret
pop
in
cmc
pop
push
xchg
push
sub
aaa
loop
xchg
cli
or
cmc
ds
loopne
add
clc
push
push
out
js,pt
cli
or
cmc
cmp
cmp
loop
xchg
cli
add
xchg
push
cwtl
push
xchg
add
out
push
xchg
ljmp
xchg
or
cmp
sbb
xchg
in
xchg
add
cwtl
loope
xor
sahf
xor
in
xor
call
adc
lock
loope
jecxz
loope
sarb
cltd
loopne
jecxz
xchg
clc
mov
testl
out
stos
loope
jmp
loopne
loop
out
shl
lods
jecxz
loopne
jecxz
frstor
loopne
loop
out
test
mov
loop
out
mov
aam
mov
fucomip
mov
and
loop
out
jecxz
loopne
loop
out
and
shl
sub
loope
jecxz
loopne
loop
out
xchg
aad
mov
leave
loop
out
leave
loope
jecxz
loope
js
out
mov
jle
jecxz
sar
stc
ret
hlt
mov
ret
clc
mov
hlt
cli
cli
test
hlt
std
fidivl
lods
cli
aam
adc
xchg
scas
xchg
repz
mov
xchg
repz
xrelease
push
cmc
loopne
cmc
hlt
cmpsb
cli
cmc
aam
jmp
fcoms
jmp
xchg
fistps
loope
fists
loop
fists
mov
lock
icebp
mov
loop
mov
loopne
loop
out
mov
call
mov
and
mov
xchg
mov
mov
mov
mov
test
mov
stos
loopne
and
stos
and
movsl
sub
movsl
and
das
sub
daa
pop
and
fisubrs
pop
daa
shlb
pop
sub
push
into
cmp
xchg
lret
xchg
aam
jns
int3
xchg
or
sbb
xchg
cltd
xchg
lret
xchg
xor
les
lcall
sbb
or
add
add
jmp
push
cmp
ds
sbb
cmp
adc
gs
and
and
sub
cs
fdivr
flds
aas
lock
enter
es
and
sub
daa
es
jmp
mov
es
cmpsl
sub
daa
cmpsl
and
out
jg
out
nop
out
fidivs
fsubr
shr
sbb
enter
popf
pop
nop
mov
fistps
fnstsw
fcompl
fbstp
push
push
add
pop
or
mov
xor
mov
shrb
fisttps
test
faddl
lods
fisttpll
fiadds
mov
rolb
mov
or
cmp
cwtl
xor
fstps
inc
mov
cli
inc
fcom
sti
inc
stc
shl
cmp
rolb
ds
fidivl
aad
lods
pop
rcrb
lret
cmp
jmp
lret
cli
jmp
push
cmp
imul
int
and
sarb
int3
clc
mov
out
fdiv
jecxz
call
loope
jecxz
loopne
mov
out
mov
stc
mov
sti
cli
test
stc
repnz
push
incb
test
incb
movsl
add
mov
or
pop
jns
cli
pop
jg
cmc
or
ljmp
in
cmp
call
xchg
add
out
cli
ja
loopne
pop
hlt
pop
cli
jecxz
sbb
jecxz
push
xor
int
xchg
and
out
add
in
xchg
sub
es
mov
daa
cltd
mov
fstenv
stc
mov
mov
fcomip
fwait
sub
clc
dec
fwait
sar
add
aam
clc
fsincos
mov
std
leave
xchg
pop
xchg
iret
mov
rorb
push
cwtl
mov
cwtl
sbb
icebp
lret
stc
and
and
clc
sub
daa
and
into
sub
daa
int3
and
repz
daa
repz
shrl
daa
shll
sub
daa
hlt
and
les
call
es
and
sub
daa
jmp
and
sub
daa
jmp
in
sub
daa
loop
jmp
loopne
repnz
daa
lock
mov
mov
mov
cli
pop
clc
mov
pop
stc
mov
clc
pop
sti
mov
adc
mov
adc
xchg
mov
adc
mov
imul
fists
in
push
iret
stos
fisttpll
shrb
fisttps
fisubrs
or
mov
filds
frstor
fmull
movsl
fldl
shlb
filds
frstor
aaa
fnstsw
rcr
fidivrs
fistpll
rcl
fdivl
fnstsw
fbstp
fst
shlb
fdivrl
rcl
fidivs
fbstp
aad
cmp
leave
ror
fisubrs
fadd
fildll
shrb
fmulp
fsubl
ror
fisubrs
rcr
ffree
shlb
faddp
fsubrl
ffreep
frstor
rol
fisubs
enter
sti
rcrb
sti
fcoml
sti
fstpl
sti
ficomps
repz
rcrb
cld
fcoml
fstpl
ficoms
fists
icebp
rclb
icebp
fcompl
fstl
cmc
ficoms
out
dec
fucomp
rorb
call
fisttpll
in
fimuls
loop
dec
fucomp
rorb
in
faddl
loope
inc
shl
fiadds
mov
sub
mov
std
das
sarb
das
fnstsw
das
fbstp
fisubs
fdivrl
and
mov
sub
mov
and
fsubl
rcrb
test
push
fildll
ficomps
mov
rcrb
lods
fcoml
mov
ficoms
lods
fists
mov
fcompl
movsb
fstl
cmpsb
ficoms
fists
fcmovnbe
dec
faddl
fcmovnu
dec
rcr
fimuls
rcr
dec
fstp
rorb
inc
fisttpll
fiadds
inc
fst
rolb
rcr
dec
fldl
aad
inc
filds
aam
inc
fmulp
fdivl
enter
lret
fadd
fistpll
iret
sbb
iret
sbb
into
pop
or
imul
ret
ret
add
ljmp
gs
sti
out
push
fdivrp
or
cli
pop
repz
pop
or
addr16
lock
push
or
imul
notb
fdiv
add
sub
shrb
jmp
outsl
lahf
jmp
fs
ficomps
fucomp
rcrb
fucomip
fstl
or
cmp
pushf
in
sbb
inc
pop
dec
sbb
out
clc
mov
pop
mov
mov
mov
mov
call
lret
pop
adc
xchg
adc
push
xchg
insl
xchg
add
push
cmpsb
fidivs
aas
add
inc
mov
cmp
aas
dec
xchg
xor
inc
mov
cmp
jns
in
cmp
jp
xor
xorl
jno
adc
cltd
xchg
cmp
add
cmp
mov
mov
push
xchg
mov
xor
cmpb
addb
mov
cmp
test
xchg
jae
mov
jae
mov
jnp
mov
jbe
mov
je
mov
add
jbe
stos
cmp
stos
jp
scas
add
jb
scas
cmp
scas
jle
mov
push
jle
cmpsl
loop
test
fldcw
fimull
outsb
aas
aam
insb
mov
xor
sahf
fimuls
bound
rclb
mov
xor
sahf
rorb
data16
fcoml
mov
xor
sahf
or
mov
xor
sahf
lret
cmp
lret
pop
lahf
iret
sahf
sahf
or
aas
nop
push
clc
mov
clc
sahf
mov
sbb
repz
mov
push
sti
addl
pop
je
jge
cmp
jne
lcall
push
movsb
pop
rorb
jno
imul
arpl
imul
ljmp
push
push
test
sub
and
insl
jb
shll
inc
mov
in
xor
adc
pusha
cmp
push
lods
adcl
adc
mov
das
xchg
adc
ret
pusha
sbb
aas
les
dec
adc
or
or
push
pop
negb
sti
push
pop
repz
sub
imul
pop
pop
cmpsb
or
xchg
test
pop
push
push
adc
inc
mov
xor
pop
sub
mov
inc
cmpsl
movsl
and
jl
fdivrs
imul
pop
push
fstps
lods
push
fisttpll
or
xor
push
fisttpll
xor
rolb
fisttpll
xchg
rcrb
mov
or
nop
mov
push
lret
xchg
lret
or
sbb
jae
fildll
push
jg
xor
shlb
fs
push
call
mov
mov
mov
xor
es
xlat
and
shrb
pop
sarb
sbb
add
xchg
sbb
icebp
cmp
insl
adc
je
mov
and
sbb
sbb
idivl
jmp
inc
jo
pop
cmpsb
and
dec
xlat
leave
cmc
sbb
xchg
pop
loopne
sbb
and
sbb
test
sbb
cmp
call
pop
or
inc
mov
fnstsw
inc
add
sbb
xor
mov
sar
sbb
adc
cmp
fmul
pop
mov
mov
sbb
jne
iret
push
mov
std
jge
mov
lods
pusha
sbb
xor
repz
add
push
pop
lods
jg
sbb
push
js
sbb
lahf
fildl
mov
loope
addl
rclb
lds
movsb
icebp
pop
jno
adcb
push
stos
dec
lods
push
dec
adc
jge
sub
das
cmpsl
pop
sbb
loopne
sti
sbb
cltd
mov
out
das
cltd
sbb
icebp
rorb
pop
mov
mov
push
sbb
pop
adc
sbb
test
push
jp
enter
sbb
jle
jg
bswap
mov
jle
mov
sbb
in
mov
pop
inc
mov
shrb
fwait
movsb
lret
repz
sbb
mov
aaa
or
sbb
mov
adc
sbb
xchg
jl
mov
pop
pop
push
jle
icebp
sub
aam
out
ljmp
mov
mov
and
sbb
outsb
enter
add
add
ficomps
pop
mov
movsb
add
dec
daa
push
sbb
lret
or
fiaddl
add
xchg
sbb
sub
ds
push
lods
sbb
cmp
arpl
cmc
mov
xor
in
test
lcall
pop
imul
inc
cmp
shlw
cmp
out
popa
stc
lcall
jb
cmpsb
leave
ja
stos
mov
cli
dec
and
xchg
dec
sbb
xor
xlat
jge
mov
das
jmp
std
movsl
rorb
push
mov
cmc
imul
aam
pop
or
push
xchg
push
sahf
cmc
mov
or
xchg
push
jmp
or
test
fdivrl
push
add
pop
mov
repnz
fcompl
push
mov
outsb
mov
push
add
mov
mov
jge
das
pop
inc
imul
fcompl
cltd
push
add
jb
push
inc
dec
mov
out
jmp
imul
dec
xor
fildll
adc
pop
sbb
cmp
jg
aam
inc
sub
add
sub
pop
or
aaa
sbb
sbb
push
adc
or
add
shll
ds
cmp
add
test
push
faddl
pop
push
add
inc
aaa
push
insb
sub
out
and
jbe
test
dec
cmp
inc
mov
stc
loope
outsl
and
scas
iret
cmp
stos
xchg
aam
ds
xbegin
xor
imul
dec
xchg
out
scas
leave
cli
jno
jl
cmp
xchg
jnp
in
add
shrb
jno
cmpsb
xchg
sar
push
outsb
jle
ret
and
sbbl
stos
inc
cmc
lock
lret
cmp
pop
mov
push
in
cli
mov
push
out
adcb
jg
cmp
pushf
xchg
popf
pop
sti
aad
loope
or
adc
lahf
cltd
mov
popa
es
push
cmp
mov
stc
mov
inc
mov
out
pop
xor
sbb
xchg
popf
daa
mov
mov
cmp
push
ljmp
outsb
lods
clc
daa
ja
clc
outsb
das
pop
cmp
and
or
add
call
stc
jp
cwtl
xlat
xchg
pop
add
xchg
das
fdivr
cli
and
mov
push
xchg
and
mov
cmp
sarl
mov
lock
xor
cltd
mov
mov
xchg
and
cmp
jge
xor
mov
adc
xor
fdivp
xchg
jae,pt
clc
enter
xchg
daa
mov
cmp
dec
nop
sti
or
cmc
add
outsb
clc
ds
dec
arpl
xchg
push
nop
pop
and
sbb
cmp
inc
xchg
decl
stos
lret
xchg
je
mov
lahf
mov
and
xchg
mov
std
cmp
lock
pop
ja
jecxz
ret
lods
das
sbb
jle
pop
nop
lret
push
mov
clc
and
ja
lods
mov
cmp
jmp
xchg
sbb
repnz
aas
and
jge
mov
insl
aam
and
cmp
ja
nop
into
push
dec
xchg
xchg
push
xor
cmc
inc
xor
pop
cltd
cmp
mov
xchg
faddl
fdiv
xchg
cmp
outsl
xor
daa
add
stc
jecxz
movsl
sti
and
xchg
xchg
pushf
adc
cmp
and
push
and
xchg
rcl
jg
mov
push
cmp
sbb
in
cmc
sbb
push
adc
cmp
dec
sti
jecxz
jle
xchg
lret
cmp
and
clc
daa
sahf
xchg
mov
and
loopne
or
nop
stos
cmp
cmc
sub
enter
mov
cmp
xchg
xchg
xchg
cld
mov
scas
and
or
mov
pause
aaa
mov
dec
sti
in
inc
xor
arpl
xchg
lahf
xchg
inc
mov
xchg
xchg
xchg
add
or
cmpsl
xchg
ror
cli
sub
lahf
push
xchg
jae
mov
xor
xor
insb
or
or
jnp
mov
lahf
in
mov
or
sub
xchg
movsl
nop
stos
or
dec
push
sbb
push
jp
cld
or
xchg
popf
pop
add
xchg
out
push
sbb
cmc
cmp
repz
movsb
add
dec
mov
cmp
push
mov
xchg
inc
add
pop
mov
out
cli
or
mov
mov
sub
xchg
jb
inc
xor
mov
sub
mov
and
cmp
test
arpl
mov
xor
sahf
out
or
jbe
xlat
mov
es
imul
cmp
rorl
pop
pop
into
push
nop
les
ret
cmp
inc
mov
incb
rcrb
fmuls
or
sbb
cmp
mov
out
fistpl
mov
push
xchg
enter
outsb
dec
cli
pop
sub
sahf
push
or
pop
push
or
pop
sti
mov
aas
inc
push
jmp
cltd
xor
sahf
xor
aas
mov
orl
or
mov
xor
sahf
add
push
dec
mov
push
out
jae
je
pop
dec
jbe
cmc
or
xchg
cmp
inc
or
xchg
cmp
pop
mov
xor
push
xchg
xchg
cmp
pop
ret
cmpsb
push
mov
dec
xchg
cmp
movsl
pop
xchg
xchg
or
fidivrs
mov
push
or
ds
cmp
pop
mov
xor
icebp
mov
xor
sahf
mov
push
mov
pop
mov
sahf
push
or
aas
outsl
push
arpl
lcall
rcll
mov
xor
sahf
rorl
out
rcll
js
fs
insl
pusha
sahf
ljmp
mov
xor
sahf
out
int
mov
xor
pushf
mov
mov
jmp
mov
push
mov
pop
lods
ljmp
push
and
pop
das
mov
cld
or
xor
ret
cmp
pop
rclb
add
mov
cmp
cltd
or
xor
push
cmp
pop
adc
jmp
mov
cmp
push
test
xor
stc
pop
cmp
or
notb
in
stos
add
fsubl
or
inc
pop
xlat
mov
cmp
pop
mov
xchg
push
or
pop
popf
mov
out
pop
sbb
inc
or
mov
mov
pop
xchg
xchg
test
test
and
movsb
fisubrs
aas
pop
push
out
call
pop
sahf
or
idivb
dec
push
mov
fidivrs
jae
inc
mov
xor
sahf
push
or
aas
xor
xor
sahf
mov
push
inc
mov
xor
sahf
and
adc
pop
push
pop
mov
xor
sahf
mov
js
xchg
mov
xor
pushf
in
ja
lcall
jne
dec
xor
push
lock
arpl
pop
xchg
mov
push
xor
or
mov
icebp
or
xor
mov
pop
nop
popf
xchg
imul
jl
pop
cmp
pop
in
sbb
dec
push
mov
pop
push
mov
adcb
jle
rcrb
xchg
orb
xor
cmp
enter
mov
mov
jg
pop
or
cmpsb
rorl
or
cmp
push
xchg
popa
pop
in
nop
jne
sarb
push
sbb
jmp
popa
cmp
push
cltd
xchg
cmp
add
out
mov
iret
push
mov
mov
mov
aas
xchg
sub
push
fisttpl
std
call
cmp
sbb
ficoml
pop
push
lea
cwtl
sti
xchg
lock
bound
xor
xchg
out
pop
jbe
inc
cmp
rorl
xor
mov
lret
xchg
rcrl
stos
sbb
in
stos
or
push
shrb
push
cmp
leave
cmp
push
mov
xchg
pop
add
xchg
mov
push
sbb
dec
add
mov
push
pop
xchg
xchg
mov
loop
pop
lods
xchg
int
cmp
or
mov
cmp
pop
aam
xchg
add
cmc
ds
pop
add
xchg
imul
inc
mov
cmp
fwait
xchg
pop
or
cmp
mov
hlt
xchg
scas
or
mov
cmp
pop
stc
sub
push
pop
push
mov
cmp
fcmovne
xchg
mov
pop
lea
rclb
xchg
xor
sahf
je
dec
aas
jecxz
repz
bound
adc
xor
mov
xor
sahf
lock
aas
arpl
mov
movsl
pop
xchg
xchg
sahf
push
push
jg
push
xor
sahf
jns
das
aas
inc
push
mov
pop
pop
test
push
or
xchg
sahf
orl
aas
nop
push
lock
xor
sahf
xchg
or
mov
sahf
pop
or
cmpsl
pop
inc
xchg
mov
in
mov
jg
or
xor
inc
mov
mov
adc
mov
dec
mov
and
sub
in
lahf
aam
mov
loop
push
aas
push
repnz
in
fidivrs
xor
cwtl
sbb
stos
inc
pop
cmp
pop
repz
dec
out
sti
sbb
aaa
insb
sbb
xchg
push
mov
sbb
xchg
dec
decl
xchg
cld
mov
cmpsb
sbb
leave
push
negl
jo
xchg
pop
outsl
xchg
jae
pop
outsb
pusha
addb
sbb
mov
push
lods
pop
call
cmp
and
sbb
or
and
sbb
push
negl
mov
cwtl
mov
xor
adc
pop
in
cmp
je
dec
pusha
pop
loopne
mov
les
imul
cli
cli
add
out
pop
stos
repnz
lods
fistpl
sbb
and
mov
jmp
movsb
imull
sbb
or
dec
xchg
push
xor
mov
pop
jmp
sbb
sti
mov
sbb
das
jne
pop
fidivrs
dec
mov
sbb
out
repnz
sbb
cmc
and
divl
pop
cmpsl
jne
dec
xor
pop
jne
pop
pop
mov
movsb
pop
sbb
roll
push
sbb
dec
add
add
cmpsl
repnz
rolb
adc
xchg
xchg
cld
push
inc
and
adc
ret
sbb
decb
loope
add
fwait
adc
lcall
imul
in
in
pop
pop
pushf
and
mov
add
and
sarl
pop
mov
leave
cmp
adc
dec
sbb
sbb
sbb
push
jp
sbb
mov
push
or
add
clc
mov
cmp
push
loopne
or
sbb
in
fidivs
mov
dec
ljmp
push
testl
sbb
cmp
cmpsl
push
jle
and
dec
jecxz
cs
push
sbb
insb
shlb
lds
jmp
jnp
sub
fstpl
lahf
or
or
or
out
pop
sbb
loope
loop
sub
fnsave
mov
add
xor
sbb
test
in
lahf
dec
notl
outsl
fdivr
lret
cmp
pcmpeqd
mov
adcl
pop
jl
mov
fcompl
mov
addr16
iret
loop
sbb
fmul
and
lret
ficompl
ret
sbb
sub
loop
mov
shrb
mov
dec
popa
sbb
addb
pop
jns
xchg
or
mov
sbb
inc
cwtl
fcoms
mov
test
cmpsb
jo
sbb
xlat
cmp
or
add
addr16
sar
bound
cmp
in
cmc
adcb
mov
mov
movsb
adc
add
in
cld
pop
add
je
repz
push
int3
xor
sbb
cmp
mov
mov
movsb
cs
xchg
sarb
sbb
mov
sbbl
test
addr16
adc
xor
push
iret
xchg
push
push
imull
dec
decb
lret
push
jo
or
fdivs
add
pop
jl
fs
test
pop
push
xchg
sub
sbb
lahf
insl
imul
test
add
dec
sbb
or
je
pop
add
or
fwait
das
mov
loope
xchg
cld
clc
and
ds
lods
jbe
sub
pop
pop
std
hlt
pusha
pop
cmpsb
and
enter
dec
call
and
outsb
sbb
sub
lock
mov
les
ja
sbb
ret
lahf
shlb
shll
and
das
cmp
fstpt
fldcw
movsb
sti
aas
pop
aas
and
xchg
sbb
adc
sbb
adc
stos
mov
dec
sbb
mov
lahf
jbe
sub
and
jne
outsl
mov
sbb
dec
pop
aam
nop
rorl
out
enter
dec
out
xchg
mov
jne
cltd
xchg
xchg
pop
or
sbbl
sbb
add
lock
aaa
cmp
pop
xor
jge
popa
jo,pt
lds
jg
xchg
fwait
jnp,pt
pop
mov
cmp
dec
or
ds
pop
scas
mov
cmp
pop
dec
xor
sbbl
pop
mov
mov
jmp
mov
pop
push
nop
xchg
mov
mov
mov
cmp
out
or
mov
pop
mov
in
xor
mov
xor
xor
push
rorl
aad
lcall
pop
in
dec
xchg
out
xor
leave
and
enter
push
cmp
adc
or
mov
push
cmp
xchg
cmpsl
push
cmp
sarl
or
cmp
sub
jp
push
jmp
ja,pt
orl
or
fcompl
mov
cmp
pop
xor
lcall
mov
repnz
dec
or
movsl
pop
mov
mov
adc
mov
cmp
pop
pop
mov
xor
sahf
mov
and
sub
xchg
test
push
in
mov
cmp
pop
xchg
fnstsw
cmp
pop
scas
addr16
push
or
push
xor
pop
and
nop
xchg
or
xchg
push
xchg
xchg
cmp
pop
cli
out
cmp
pusha
cmp
pop
sahf
mov
inc
xchg
or
mov
leave
pop
test
outsl
pop
pop
mov
inc
xchg
jl
pop
ds
pop
sbb
push
push
mov
cmp
pop
pop
mov
inc
or
xor
push
fimull
mov
xchg
inc
or
mov
xchg
nop
or
es
imul
sub
xor
push
mov
mov
mov
out
je
loop
les
sbb
std
cmp
push
flds
nop
cmp
add
sti
xchg
out
add
jmp
push
stc
repnz
testl
xchg
adc
icebp
mov
push
sahf
jecxz
repz
push
push
xchg
inc
cmc
sahf
adc
adc
pop
popf
cli
xchg
imul
and
ret
dec
or
mov
aaa
xchg
push
or
xor
cmp
pop
push
rclb
add
mov
cmp
cmp
xor
push
fmull
or
xchg
daa
pop
and
daa
cmp
push
clc
xchg
cmp
xchg
or
cmp
push
mov
mov
nop
fwait
or
cmp
push
movsb
xchg
pop
nop
or
scas
cmp
push
mov
cwtl
cmp
orl
cmp
push
mov
lods
add
movsb
pop
shll
xlat
push
repnz
xchg
stos
or
xor
rcrl
iret
xchg
orl
in
mov
cmp
lods
push
xchg
xchg
cmp
std
sub
cmp
push
leave
xchg
pop
pop
jbe
nop
push
or
cmp
push
rolb
enter
or
cmp
push
mov
ja
rcrl
nop
or
ficoml
xchg
pop
push
stos
nop
decb
cmp
push
lods
xchg
pop
jecxz
nop
or
push
xchg
daa
outsb
nop
or
xchg
mov
cmp
push
push
xchg
leave
pop
cwtl
mov
cmpsl
push
outsl
xchg
cmp
pop
aad
cmp
clc
cmp
les
inc
mov
jo
cltd
adc
les
mov
push
push
pop
dec
xchg
lock
and
or
ds
popa
mov
pop
xchg
and
mov
movsb
pop
in
sahf
fwait
or
push
ja
cmp
xor
mov
cmp
subl
lock
js
push
rclb
popf
inc
cmp
xor
adc
xchg
mov
inc
ds
dec
jp
or
push
orl
or
mov
cmp
call
push
mov
cmp
jge
xchg
pop
or
xor
push
decb
or
cmp
push
mov
pop
mov
cmp
push
imul
call
cmp
push
and
loop
nop
lods
or
xchg
fs
lcall
inc
push
lret
xchg
cmp
pop
mov
mov
push
adcb
add
add
xchg
cmp
push
cmp
pop
add
xchg
mov
xchg
lret
cmp
inc
cmp
jl
ret
cmp
into
cmp
mov
jns
push
cmp
lret
call
ds
pop
in
daa
cmp
mov
xchg
xor
mov
mov
cmp
pop
mov
aas
mov
xor
popf
inc
rolb
cmp
push
or
xchg
pop
cmp
or
pop
adc
pop
add
xchg
push
jns
xchg
and
push
mov
repz
jg
dec
ret
xor
imul
jbe,pt
push
push
or
cmp
and
inc
inc
rorb
push
and
inc
sub
xor
xor
outsl
pop
je
dec
ret
jo
jl
and
or
adc
or
imul
jb
pusha
push
jne
pushf
loope
in
dec
dec
out
je
dec
imul
jg
notb
mov
jo
ja
push
cmp
fsubrs
and
inc
ja
xor
ja
lods
or
pop
cmp
cltd
test
in
je
cmp
arpl
cwtl
loopne
das
add
xor
popf
enter
xchg
aas
outsb
add
pop
jae
adc
pusha
sbb
cmp
push
call
dec
sbb
jle
call
or
xor
jb
jno
cmp
ret
dec
and
mov
ds
xchg
push
jnp
sub
push
jmp
jbe
ss
out
jp
mov
adc
je
and
into
and
jbe
jle
fs
popa
dec
cvtps2pi
sub
inc
dec
repz
pop
ja
pop
les
adc
cmp
insb
arpl
jne
in
push
push
jnp
jp
nop
out
sbb
loope
pop
dec
or
loop
fisubrl
xchg
and
sbb
adc
not
dec
mov
rorl
cwtl
bound
inc
push
dec
pop
sub
inc
cmpsb
and
push
adc
cmc
jge
jnp
xor
jl
lret
pop
push
add
sub
and
out
mov
dec
adc
jno
aaa
xchg
dec
stc
dec
cmpsl
jnp
jle
in
push
hlt
jecxz
imul
shrl
and
adc
sbb
inc
push
xchg
iret
lcall
call
std
push
sti
xchg
cmp
pop
ret
enter
fistpll
sbb
int
adc
cmp
xchg
addr16
insl
je
jne
and
stos
push
jns
jae
aaa
fisubl
xor
mov
sbb
or
adc
pop
sbb
pop
push
jl
pop
dec
stos
cmp
rolb
dec
xor
sub
cmp
aas
ss
aad
pop
dec
push
push
fdivrl
adc
sbb
sbb
or
or
sub
sbb
push
in
cmp
mov
sbb
daa
xchg
in
gs
aaa
lcall
fistpll
mov
ljmp
mov
or
cmp
fists
sbb
das
push
cs
sbb
push
das
and
les
xchg
lds
pop
es
and
loop
lahf
fsubl
nop
jne
insb
lds
mov
mov
add
dec
jg
sub
ss
add
outsb
mov
lret
insb
xorb
imul
or
push
cmp
sahf
hlt
dec
adc
mov
adc
push
mov
mov
push
pop
ds
dec
imul
pop
les
add
dec
xor
sarl
das
cmp
mov
jb
aam
sbb
jno
xor
cmp
push
or
aaa
gs
pop
inc
fldl
cmp
add
xor
outsl
dec
mov
addl
mov
xor
push
or
cs
pop
sub
movsl
ret
dec
popa
dec
aaa
and
shrl
sub
or
and
pop
scas
push
dec
insb
subb
and
test
imul
lea
dec
add
pop
fs
andb
cmp
movsl
movsl
xor
inc
mov
scas
push
lea
pop
pusha
test
fadds
cmc
roll
mov
xchg
pop
xchg
js
adc
jp
movsl
mov
sub
outsl
inc
cmpsl
xchg
dec
jae
jl
or
ds
sbbb
std
je
cmp
dec
insl
mov
sahf
push
rcrl
push
je
mov
xchg
test
push
jp
out
xor
add
cmp
loopne
push
xor
adc
push
movsl
test
popf
out
jge
je
jmp
cmp
jle
pop
orb
and
jp
push
je
cwtl
push
lds
or
insl
pop
pop
push
lcall
lahf
pushf
pop
addr16
rcll
push
xchg
pop
xor
adc
lret
pushf
sub
fisubrl
adc
xchg
xchg
movsl
js
outsl
jno
and
pop
inc
jg
sar
xor
sbb
pop
aam
ja
push
stos
mov
test
sarw
push
jae
test
movsl
dec
push
or
jbe
rcrb
loope
jnp
push
loope
mov
fs
mov
in
push
push
push
cmp
arpl
mov
cld
inc
cmp
add
pop
cmpsb
mov
aas
mov
xor
lahf
cmp
adc
ljmp
mov
and
push
push
add
sub
jp
adc
xchg
daa
ds
int
aam
popf
sub
mov
sbb
jp
and
cmp
push
cmpsl
dec
add
pop
cmp
out
cmp
aaa
jl
and
dec
bound
lret
inc
jnp
aam
xchg
push
mov
inc
nop
inc
or
pusha
aas
push
mov
xor
cmp
mov
popf
sbb
out
call
push
mov
outsb
push
mov
dec
add
jbe
inc
sub
sub
cmpl
push
and
lea
leave
cmp
loope
inc
iret
cld
les
dec
cltd
adc
mov
inc
daa
aas
in
fdivrs
sahf
aas
gs
xlat
arpl
fwait
addr16
jbe
and
arpl
roll
push
xchg
cmpsl
jno
leave
mov
jmp
push
jb
jae
scas
add
or
push
mov
push
jne
or
xor
lods
in
lea
sub
sbb
fdiv
outsl
mov
mov
daa
bound
dec
sub
inc
icebp
dec
cmpb
dec
xor
mov
dec
jge
push
jge
arpl
daa
dec
xlat
pushf
insl
adcl
aas
jle
mov
pop
mov
in
sub
push
inc
mov
rcll
jp
inc
pop
pop
cmp
sub
xor
sbb
cmp
outsl
sbb
data16
addb
xor
mov
imul
and
mov
push
sub
xchg
push
mov
push
fisubl
dec
rcrl
inc
and
pop
adc
dec
test
push
or
inc
movsl
pop
sub
and
stc
mov
mov
mov
mov
pop
fimull
mov
sub
xor
xchg
inc
stos
dec
push
lock
push
xchg
pop
push
push
push
xchg
icebp
sahf
or
loop
aad
je
aas
out
pop
cmp
xor
push
pop
dec
push
pop
dec
mov
pop
sub
push
mov
ds
int
mov
or
pop
cmpl
add
insl
mov
xor
fwait
into
clc
popl
sub
jo
pop
add
push
jne
pop
divl
cli
inc
aam
ds
stc
dec
mov
in
cmp
mov
aaa
add
enter
pop
inc
insl
dec
jnp
pop
pop
xchg
jno
push
lds
jno
adc
ja
fidivl
pop
es
cltd
add
pop
mov
rcrl
pop
sbbl
cli
adc
mov
pusha
sar
orb
adc
shlb
adc
dec
and
pop
sub
adc
jl
adc
jle
and
pop
adc
jp
pop
shlb
xor
adc
iret
xchg
lahf
sbb
nop
sbb
adc
add
xor
mov
icebp
out
nop
mov
sub
inc
aam
pop
and
cwtl
inc
arpl
inc
arpl
mov
ret
ljmp
cs
lahf
sbb
sub
cmp
push
inc
daa
add
pop
inc
pop
jge
inc
inc
fcomps
mov
mov
xchg
orl
xchg
sbb
std
lock
loope
fcmove
sbb
fadd
fcmovne
clc
mov
xlat
lret
sub
iret
ret
out
cli
xchg
push
fcmovnu
shrb
popf
cwtl
and
icebp
cli
lret
repz
dec
add
cs
dec
dec
and
arpl
arpl
xlat
pop
jae
gs
or
sbb
int3
lret
leave
fs
and
int3
outsl
icebp
fisubrs
cmc
out
jecxz
jmp
ljmp
cli
icebp
ljmp
stos
out
ret
and
push
ror
int3
and
adc
add
or
rolb
fcmovne
mov
xchg
mov
push
stos
clc
mov
inc
xor
lods
xchg
sbb
mov
push
inc
dec
push
inc
push
or
aas
jo
popa
adc
pusha
jae
bound
add
pop
pop
push
push
push
inc
pop
ljmp
out
scas
pop
hlt
jmp
and
and
xor
and
mov
test
sbb
fs
sub
fs
daa
adc
and
sub
pop
cli
add
icebp
xchg
sbb
adc
stc
ja
adc
cmp
or
or
dec
and
dec
sbb
hlt
stc
negb
mov
cld
and
loopne
loopne
out
in
in
loope
ret
stc
stos
loopne
icebp
rcll
fidivrl
out
shlb
and
lea
mov
repz
lahf
and
lock
repz
sbb
sti
mov
andb
out
cld
push
in
notb
xor
jbe
das
insb
outsl
jl
sahf
bound
imul
xor
pop
inc
addr16
data16
push
addr16
mov
sbb
mov
mov
pop
loopne
mov
mov
in
mov
rcl
int3
hlt
imul
xlat
rcr
xchg
in
fmulp
out
enter
adcb
inc
push
pop
sbb
jbe
jae
movsb
xchg
sbb
sbb
sbb
sbb
dec
pop
lret
into
ffree
xlat
cmp
int3
aam
int
sbb
stc
lret
aam
shrl
push
xchg
xchg
cwtl
mov
lea
lods
or
mov
fcomps
push
push
push
push
adc
pop
icebp
xchg
call
sti
imul
lock
jmp
loop
jecxz
fcomps
test
ja
mov
test
mov
pop
subl
xor
or
pop
prefetcht2
and
sbb
sbb
jb
inc
dec
inc
dec
test
push
adc
loopne
ja
push
inc
and
xchg
inc
pop
pop
mov
arpl
inc
imul
push
fs
jbe
jae
loope
jp
inc
sbbb
in
cmc
loop
loopne
out
enter
repz
insl
cld
mov
mov
lods
xchg
sahf
popf
xchg
pop
fdivs
add
sbb
xor
xlat
push
sbb
rol
sar
lret
rol
fistpl
test
and
sbb
iret
rol
mov
cmp
fldl2e
and
pop
pop
fsubr
outsb
jns
test
inc
pusha
negb
gs
outsb
pusha
jno
inc
and
aas
adc
or
sub
sbb
js
fs
imul
bound
sbb
cmp
or
xor
es
sub
jns
push
inc
pusha
inc
push
push
inc
fists
es
push
and
pop
add
je
arpl
mov
adc
sub
and
and
lcall
mov
mov
icebp
mov
lods
mov
sbb
cmp
and
sbb
adc
xlat
add
and
mov
adc
or
adc
xchg
inc
mov
jmp
psrlq
in
cmp
bound
dec
jae
jns
cwtl
sub
jbe
jno
sub
mov
mov
movsb
mov
mov
int3
fcomi
and
xlat
adc
rol
psraw
out
not
bnd
ljmp
out
inc
out
ficoml
sbb
lods
lods
sbb
test
test
mov
inc
push
inc
dec
inc
inc
inc
sti
cld
add
loop
push
leave
mov
mov
mov
frstor
fldcw
dec
hlt
pop
xlat
pop
inc
and
sbb
add
or
adcb
add
jb
insl
insl
push
dec
dec
mov
xchg
mov
icebp
aad
mov
lea
xchg
sahf
xchg
sbb
xchg
int
icebp
shlb
mov
aad
mov
and
rolb
loopne
iret
mov
bound
xor
fs
test
stos
xor
dec
sbb
push
xchg
cmp
mov
pop
mov
cwtl
add
lea
nop
xchg
jno
mov
mov
mov
stos
inc
pop
pop
dec
dec
mov
into
cltd
adc
sbb
movsb
mov
mov
mov
xchg
ret
nop
mov
adc
clc
push
sbb
mov
cmp
add
sbb
jecxz
lock
jns
test
incl
shlb
sbb
ror
int
fcomi
repz
js
ds
push
out
adc
push
jnp
cmp
fildll
jns
sbb
sarb
or
adcl
lahf
scas
xlat
lret
xchg
fwait
add
hlt
icebp
mov
icebp
ret
jge
insl
sbb
push
pop
push
push
add
jl
adc
xor
aam
inc
xor
cmp
mov
scas
lods
stos
mov
or
sub
jnp
mov
imul
lret
js
pop
push
inc
inc
lcall
adc
push
inc
cltd
pop
push
dec
jb
dec
dec
pop
push
inc
push
add
inc
push
adc
ss
inc
sbb
or
sbb
xor
ss
pop
das
outsl
jg
jg
gs
adc
add
adc
sahf
xchg
dec
pop
jnp
push
dec
dec
adc
push
pop
pop
or
repnz
ljmp
dec
dec
sbb
push
bound
pop
pop
bnd
stc
in
hlt
icebp
jecxz
mov
stc
sbb
ffree
in
aad
rol
lret
repnz
stc
shl
or
rcr
mov
xchg
movsl
xchg
add
adc
and
bound
sbb
js
js
jbe
adc
push
or
jl
jge
jnp
or
and
aas
daa
clc
loope
ret
shlb
push
pop
pop
cs
push
popa
sbb
mov
movsb
push
test
cli
sbb
push
inc
dec
pop
fisttps
pop
push
mov
push
jae
mov
pop
imul
bound
pop
in
and
mov
jg
push
jns
jg
je
push
cmp
fstpt
mov
rcl
cwtl
sti
js
fcom
test
test
mov
fstp
orb
xchg
nop
push
daa
xchg
xchg
adc
push
daa
sub
es
leave
sbb
das
sub
cmp
add
push
imul
dec
mov
xchg
fwait
das
pusha
jg
popa
xor
pop
sbb
data16
xchg
scas
dec
pop
lea
imul
xor
xor
xor
cmp
scas
dec
addr16
imul
fisttps
sub
inc
pop
push
xor
and
or
add
xor
cmpsb
orl
and
xor
push
pop
pop
inc
pop
pop
rolb
insb
push
arpl
imul
pusha
jne
clc
ljmp
push
fld
jecxz
in
xchg
hlt
repz
ljmp
jb
cli
cmp
xchg
mov
in
jecxz
jecxz
jmp
jmp
call
fisttps
es
ficompl
cmp
cmp
fwait
sub
cmp
sbb
sub
and
sbb
ja
xchg
mov
sbb
fcomp
frstor
mov
xchg
jmp
sbb
xchg
test
sbb
out
rcll
cmp
pop
cwtl
lcall
xchg
int3
arpl
mov
enter
pop
adc
mov
pop
inc
daa
mov
pushf
xchg
adc
or
ss
adc
mov
add
sub
jg
fsts
xlat
leave
cmp
mov
mov
sti
fcmovne
sbb
cmc
ljmp
mov
add
divb
call
mov
mov
xchg
xchg
insb
lret
jecxz
sbb
repnz
repz
mov
and
into
fadd
pop
lahf
test
sbb
push
push
push
inc
pop
pop
dec
push
push
cltd
push
pop
or
add
sbb
data16
inc
inc
adc
or
pop
es
shrb
int3
xlat
lcall
ficompl
lret
ljmp
sub
push
repnz
out
cltd
push
cli
pop
mov
and
adc
in
push
addr16
dec
jmp
js
mov
cltd
lahf
into
lods
test
test
or
push
sbb
nop
setae
es
push
or
dec
adc
nop
mov
addb
fistps
in
std
rol
test
fcmove
dec
cwtl
ror
fcmovbe
addl
aam
icebp
hlt
imul
and
adc
ss
lcall
test
and
insl
add
and
movsb
mov
mov
pushf
test
jbe
mov
sbb
adc
pop
or
sbb
dec
sub
pop
sbb
jg
iret
int3
rcr
popf
hlt
sbb
rol
leave
xchg
clc
jns
add
fcomps
xor
xchg
mov
mov
cmpsb
addr16
cltd
orb
mov
xchg
mov
jnp
mov
sub
lods
in
add
nop
mov
scas
pop
cld
mov
mov
lods
cwtl
add
test
enter
cmp
cmp
daa
sbb
and
and
mov
adc
adc
and
xor
cmp
cmp
or
or
repz
and
ja
dec
mov
xchg
sbbl
mov
in
fisubl
xlat
or
pushf
cmp
repz
daa
roll
aam
roll
les
call
flds
je
cwtl
out
daa
push
lret
lock
repz
mov
imul
test
out
sti
repnz
imul
cmc
cmc
out
imul
rcl
aad
cltd
sbb
nop
cmpb
sar
pop
aam
or
fldt
sbb
mov
push
mov
adc
out
mov
fistpl
rcrl
cmp
xchg
xchg
pop
into
mov
imul
mov
lods
repnz
in
out
aas
mov
stos
cmpsb
ljmp
fcmovb
xchg
fcmovu
js
into
push
ret
ja
or
add
xchg
enter
mov
cmc
and
ret
xor
test
mov
cli
in
out
icebp
and
clc
adc
xlat
lock
and
adc
adc
pop
pop
inc
loope
or
inc
pop
insl
fs
int
add
aas
jno
sub
dec
sub
mov
ss
pop
push
and
or
xchg
das
pop
push
imul
pop
adc
pop
push
das
sbb
and
scas
pop
dec
pop
sbb
push
inc
inc
add
outsb
imul
sti
dec
popaw
popa
pusha
and
pusha
out
push
jbe
jno
and
xchg
mov
xor
lock
movsl
sbb
xchg
mov
leave
cwtl
outsl
mov
xor
xchg
ss
stos
push
ljmp
scas
mov
sbb
mov
pop
pop
shl
out
push
or
adc
roll
es
pop
cmp
pop
or
hlt
add
adc
fmul
les
add
sbb
sub
inc
dec
mov
pop
adc
inc
dec
dec
xor
int3
fmul
xchg
fdivp
fsts
xor
xor
mov
scas
mov
adc
fmuls
or
dec
cmp
sub
cs
ds
jge
aaa
jns
xor
push
add
outsb
dec
test
and
adc
sub
subb
xor
popa
cmp
dec
adc
sbb
aas
pop
add
int3
test
ret
fcmovnb
xor
lea
and
stc
fwait
push
sbb
sub
push
cmp
pop
xor
fsubl
aas
popa
sub
dec
dec
dec
mov
push
lret
sti
and
outsl
jae
jne
jg
push
inc
arpl
jnp
or
dec
mov
dec
popa
inc
add
push
addr16
push
jae
sbb
inc
inc
pop
iret
pop
inc
in
sbb
pop
dec
pop
push
lcall
sub
sbb
sbb
sbb
add
mov
mov
fdivrs
movsl
insb
mov
mov
mov
scas
insl
mov
mov
mov
sbb
cwtl
adcl
aaa
lahf
or
test
sbb
cli
sbb
in
leave
lret
lret
cli
push
add
cmp
sbb
cmp
aaa
and
sub
sub
adc
and
cmp
and
or
sbb
sbb
and
pop
nop
add
push
or
adc
and
sbb
dec
or
jmp
int3
lods
xchg
fcmovnb
cmc
insl
out
sbb
std
ljmp
in
jmp
and
ror
fcmove
call
mov
cli
xchg
aad
in
add
and
ja
in
cwtl
clc
sbb
dec
or
adc
sbb
jbe
inc
sbb
jnp
xchg
xchg
push
jecxz
imul
mov
mov
mov
xchg
repz
cmp
sbb
push
jge
push
fwait
sub
aaa
cmp
sub
out
lret
and
and
jns
imul
pop
stos
mov
push
dec
adc
or
fwait
or
testl
sbb
dec
adc
pop
push
rclb
icebp
sbb
add
push
sbb
pop
outsb
insl
push
add
push
xchg
ljmp
clc
es
sbb
mov
pushf
cltd
push
xchg
popf
xchg
sahf
xlat
inc
sahf
jecxz
idiv
push
out
loopne
dec
and
sub
jmp
fisubs
sbbb
sbb
cwtl
lcall
sbb
mov
test
sbbl
mov
leave
adc
jns
jmp
mov
xchg
mov
sbbl
xchg
mov
jmp
adc
daa
cmp
cmp
clc
add
rcll
pusha
xor
int
bound
mov
test
sub
xchg
xchg
in
stc
sti
mov
mov
xchg
push
adc
je
xor
outsb
add
push
gs
pop
jb
pusha
daa
jg
sbb
sbb
sbb
or
lahf
stc
lock
rcr
lods
aad
rolb
sbb
shlb
sarl
cli
xor
cmc
cmpsl
sbb
fmul
mov
sbb
out
in
loopne
into
adc
lcall
pop
leave
rol
ret
sub
int3
cmp
xchg
iret
ret
std
loop
out
mov
push
mov
cmc
push
stc
mov
sbb
push
adc
adc
adc
add
sbb
sbb
sahf
shlb
in
mov
lods
xchg
mov
sbb
in
jmp
mov
imul
ffreep
fld
cmp
fcomp
sbb
int
xchg
cmc
jmp
repnz
loop
daa
loope
hlt
loopne
cmp
rcl
add
ftst
ds
pop
push
lcall
xchg
sbb
add
notb
sbb
push
push
and
sbb
sbb
add
xor
inc
add
imul
sbb
adc
repz
stc
pushl
repz
in
in
in
stc
popa
in
out
ret
out
div
push
clc
neg
stos
imul
hlt
inc
cmp
movsl
sbb
sbb
sub
pop
aaa
inc
aaa
dec
xor
sbb
dec
ds
xor
or
jb
push
pop
mov
pusha
sahf
movsl
sbb
aaa
cmp
jnp
mull
xor
mov
sbb
jb
arpl
add
xchg
test
outsl
xchg
sbb
cld
push
loopne
das
jecxz
inc
fidivl
jb
in
ret
or
jmp
xchg
aad
nop
and
mov
shlb
sbb
cmp
fnsave
mov
fildll
dec
call
sbb
inc
inc
dec
inc
xchg
dec
aad
mov
sbb
inc
jge
dec
lret
lahf
sbb
adc
sahf
pop
loope
add
rorb
add
stc
filds
sub
push
mov
fcomip
dec
out
adc
icebp
adc
xchg
add
add
add
mov
add
in
push
and
movl
negl
and
jae
sbb
fwait
cmpsl
rcl
dec
mov
sbb
outsl
sub
xchg
jg
pop
sarl
insb
addr16
or
inc
add
aam
popa
insb
mov
sbb
inc
adc
outsb
int3
dec
dec
loope
or
xor
shlb
lock
sbb
sub
or
or
mov
or
popf
cmp
sbbb
sbbl
shrb
mov
enter
push
leave
inc
add
jae
and
dec
lret
stos
lea
cmp
cmovg
push
cmp
and
cmpsb
sbb
sbb
icebp
jle
fcomps
adc
add
push
add
stos
push
repz
xchg
pop
xor
sbb
cmp
cld
push
pop
add
outsb
adc
arpl
arpl
pop
pop
lock
mov
les
and
mov
jb
xchg
enter
inc
adc
pop
std
dec
cwtl
aas
out
add
or
fistpll
xchg
fsubl
sub
in
and
push
jno
inc
outsl
xchg
rcll
push
lods
pop
adc
adc
xchg
movl
fiaddl
xor
pop
popf
jae
add
pop
repnz
leave
push
and
sub
xor
adc
push
xor
push
cmp
in
jp
lahf
add
bndstx
add
repnz
dec
out
pop
mov
xorb
sub
add
xchg
inc
aam
icebp
stc
and
fdiv
dec
fdivrs
mov
loopne
mov
inc
mov
xchg
lahf
xor
push
rcll
incl
andb
mov
xor
xchg
cs
push
scas
push
jbe
icebp
addr16
jmp
mov
mov
xchg
out
es
cmpsl
mov
lret
mov
lret
orl
mov
inc
xorb
test
mov
pushf
fdivp
xor
rolb
sub
xor
mov
mov
popf
adc
xchg
sarb
cmp
dec
les
stos
stc
cmp
mov
dec
lods
mov
push
fs
test
sbb
testb
add
cmp
fiadds
dec
adc
cmp
push
pop
shll
mov
ds
mov
or
and
xor
js
sbb
inc
cmp
cmp
mov
and
inc
pop
dec
inc
shrb
add
mov
add
cmp
adc
aad
cmp
popf
aas
insb
adcb
mov
sti
pop
cmc
movsl
test
add
pop
jle
adc
sbb
mov
sbb
mov
pushf
into
frstor
xchg
sub
dec
sti
jo
add
rorl
xchg
repz
jb
aas
or
xor
push
mov
daa
xor
insl
fsubp
xor
aam
jecxz
xchg
pop
out
jbe
aas
enter
lds
fistpl
xchg
fnstsw
mov
adc
das
sbb
loope
shl
jge
pop
mov
dec
xchg
enter
imull
sbb
mov
ds
bound
fildll
iret
add
in
xchg
cmp
or
jns
xchg
pop
in
jns
xchg
pop
xchg
gs
lahf
pop
mov
call
outsb
das
stc
and
fnstenv
sub
aam
fimuls
jl
inc
sbb
aam
imul
jg
cli
data16
pushf
sbb
repz
jmp
ss
sub
push
cwtl
ljmp
mov
pusha
mov
xor
adc
xchg
adc
jb
push
in
cmp
div
mov
movsb
je
stos
pop
push
pop
sbb
push
xchg
gs
adc
xchg
outsb
sti
fsts
repnz
dec
fs
adc
push
jo
dec
call
pop
xor
sbb
insl
in
sub
cmc
out
fwait
daa
jo
orb
mov
pop
lock
pop
pop
mov
add
imul
les
jae
cmp
sahf
sbb
test
pop
test
adc
sub
pop
aam
repz
sub
dec
sbb
pop
sbb
outsl
add
ljmp
sahf
daa
sub
popf
push
and
push
sub
ljmp
jmp
loop
mov
pop
mov
pop
push
and
mov
jp
jbe
add
xchg
inc
aad
xor
sbb
or
outsl
add
fdiv
mov
xlat
sbb
ja
pop
rep
test
jns
je
sub
jl
pop
and
xchg
andl
or
les
inc
leave
aas
sbb
add
ret
sahf
enter
fbld
xor
mov
sbb
sbb
ds
add
rcl
push
jecxz
inc
in
dec
lcall
pop
testb
fadds
or
fisttps
cmp
dec
xchg
fs
loopne
sahf
cs
rorl
sub
mov
adc
sahf
mov
cmp
ret
push
push
sbb
out
out
mov
in
out
or
pop
pop
pop
mov
enter
xor
xor
pushf
adc
or
xor
push
or
pop
insb
or
je
leave
mov
push
addl
add
bound
out
sub
lcall
dec
adc
sub
adc
stos
inc
pop
and
adc
pop
sti
or
push
xor
dec
outsl
call
jo
notb
xchg
and
push
bnd
jecxz
push
inc
aaa
adc
mov
push
and
es
enter
insl
or
pop
cmp
lds
cmpsb
push
mov
inc
mov
nop
mov
sbb
adc
push
push
fisubrl
fwait
push
xchg
out
mov
dec
cmpsl
adc
loop,pn
cmpsb
and
and
les
sub
fwait
cmp
fcoml
in
pop
dec
add
or
pop
adc
jae
out
adc
testb
cmp
dec
jns
sahf
jmp
enter
outsb
in
cs
insb
jno
add
xchg
mov
sbb
jo
outsb
cmp
decl
push
pop
dec
int3
pop
test
stos
stos
pop
outsl
adc
popa
xchg
pop
dec
cmp
jo
or
sbb
and
mov
mov
popf
adc
or
xchg
lds
cmp
test
and
sub
add
insl
or
roll
cmp
push
lock
jo
inc
inc
add
or
or
or
jp
inc
mov
or
outsb
sbb
xorl
jmp
adc
and
add
sub
ret
jge
sub
mov
stos
clc
sbb
and
add
inc
aas
jae
sub
ret
sub
dec
cmp
push
fadds
add
inc
fcomip
outsb
mov
cmc
mov
mov
popf
inc
add
pmaxsw
leave
mov
fildll
mov
xor
imul
es
repz
pushf
xchg
add
cld
add
repnz
sti
push
sti
jl
lcall
adcb
xlat
or
setle
pop
icebp
scas
mov
xchg
outsb
xchg
aas
ficomps
stos
loopne
in
pop
cmp
fisttps
insb
add
loopne
jp
xor
jnp
repz
or
inc
sub
out
and
mov
or
sub
bound
fnsave
fwait
jge
cli
inc
push
or
pusha
xor
mov
repz
push
sbb
ds
mov
fisttpll
aam
in
add
sub
and
and
push
lds
aam
xor
aad
inc
and
jp
pushf
sub
and
outsb
adc
pushf
enter
adc
out
ss
cmpsl
cmp
int
lods
enter
xchg
daa
cltd
pop
out
xchg
sbb
imul
sub
sbb
add
inc
sbb
sbb
pop
add
adc
loope
int
or
fsts
push
push
pop
jmp
out
xchg
push
xchg
inc
ss
xchg
push
ds
aas
or
pop
adc
sbb
or
adc
xor
sbb
popf
insb
test
inc
pop
out
data16
jae
and
and
pop
pushf
in
and
xchg
in
xor
pop
hlt
icebp
fwait
ss
pop
in
xlat
and
nop
mov
imul
ss
ds
arpl
push
pop
and
jl
ds
sub
push
jno
mov
mov
push
inc
push
mov
sbb
sub
mov
cltd
inc
or
out
jl
bound
int3
mov
test
xor
sub
adc
add
cltd
jmp
inc
in
mov
mov
fistps
adc
adc
repnz
out
add
outsl
xchg
xchg
mov
test
scas
inc
jae
sub
cmc
fnstsw
sarb
rorb
sub
jnp
or
xor
inc
mov
jno
dec
xchg
or
cltd
and
inc
adc
xchg
adc
sub
mov
incl
ret
outsb
mov
inc
sub
out
or
sbb
xchg
dec
adc
fstps
add
out
flds
jne
jecxz
cltd
cmp
fcoms
push
inc
jbe
xchg
dec
mov
xor
sbb
inc
xchg
inc
in
xchg
jecxz
pushl
or
jmp
jecxz
aas
dec
jb
mov
js
sbb
jae
pop
xor
mov
inc
cltd
mov
fldcw
jl
inc
and
mov
or
cmpsl
movsl
inc
sbb
dec
test
lods
push
popa
es
outsb
jmp
leave
outsb
or
adc
jnp
lock
fisubrs
xor
dec
dec
or
lcall
rorl
jo
mov
sahf
rorb
decl
cwtl
lods
sbb
sbb
and
mov
push
mov
jecxz
jg
rcll
rorl
xchg
xor
dec
insl
jns
ret
or
push
xchg
push
sahf
adc
cs
xchg
jl
cwtl
das
in
setae
int3
out
mov
dec
add
mov
pop
jno
xchg
cmp
je
xor
mov
movsb
test
inc
mov
xchg
xor
inc
mov
adc
mov
pop
out
mov
shrl
mov
and
pop
insl
rcrb
adc
push
adc
adc
stos
mov
mov
into
add
mov
pop
pop
jg
cmp
fnstsw
or
add
into
insb
jbe
push
inc
flds
xor
xchg
pop
lret
push
mov
popf
inc
or
frndint
pop
jnp
xchg
push
push
xor
jae
add
jnp
dec
adc
inc
mov
inc
dec
add
cmp
or
les
cmpsb
xor
repz
sbb
and
mov
and
inc
jbe
push
push
adc
xchg
pop
data16
push
insl
negb
inc
add
lods
sub
or
hlt
nop
dec
pop
jecxz
xchg
sbb
and
jge
sub
xchg
outsb
mov
ds
mov
adc
or
adc
lahf
insl
pop
push
inc
shl
and
rorb
in
es
jg
add
cmp
addb
or
add
call
add
leave
or
pop
add
fstpl
add
inc
cpuid
gs
dec
sub
inc
out
fistpl
scas
cmp
add
push
lcall
bound
cwtl
sub
cmp
or
aaa
lahf
negb
sub
ds
dec
dec
js
jbe
pop
jle
adc
or
imul
lret
cwtl
and
adc
adc
push
or
pop
nop
dec
ss
dec
jp
adc
cmpsb
mov
iret
add
jns
and
mov
jbe
mov
mov
cmp
mov
cmp
xor
nop
das
inc
pop
or
add
stc
rclb
fiaddl
adc
pop
aaa
sbb
or
push
cmp
xor
mov
add
or
fdiv
lahf
push
cmp
shll
imul
out
nop
push
jle
sub
push
pop
dec
dec
xchg
xlat
xor
lret
outsb
cmp
adc
dec
sub
cmp
inc
movsbl
pshufw
incl
mov
mov
inc
loop
push
pop
fwait
out
inc
pushf
inc
pop
mov
add
pop
dec
loope
das
mov
lret
sbb
adc
and
lock
nop
iret
repnz
jns
cmc
push
sbb
int
orl
jae
xchg
shll
dec
in
dec
dec
in
rclb
dec
sahf
push
sub
mov
xor
pop
out
dec
sbb
ror
xchg
xor
mov
shll
enter
pop
xchg
subb
pop
xchg
sbb
in
sub
lret
out
xor
decl
jns
sub
sbb
mov
cmp
mov
outsl
pop
es
cvttps2pi
push
lahf
sub
pop
sbb
mov
xchg
hlt
push
mov
in
lock
and
pop
add
xor
adc
xor
push
pop
lds
fistl
in
pop
mov
sub
insb
push
sub
mov
sub
idivl
call
fdivrs
in
fmuls
xor
idiv
mov
test
fidivrs
packsswb
inc
out
or
push
push
testb
sbb
out
mov
cmc
leave
push
or
xor
in
aas
jecxz
mov
dec
addr16
cmpsb
aam
sub
jmp
lock
mov
inc
pop
inc
push
dec
xor
mov
mov
jo
cs
enter
mov
pop
lock
lahf
divb
jecxz
mov
stc
lods
cmp
movsb
jle
jo
sbbb
rolb
jne,pt
push
pop
ljmp
call
add
mov
add
xlat
jbe
mov
stos
nop
add
aam
mov
aad
cmp
sub
add
cmp
movsl
or
imul
mov
xlat
dec
mov
pushf
adc
dec
mov
sub
pop
ret
pop
imul
push
rcrb
or
rclb
mov
out
pop
mov
sahf
mov
pushf
mov
fwait
mov
xor
push
sbb
jg
fsubs
sub
xlat
or
pop
out
popf
pop
jno
test
add
or
mov
jb
daa
or
js
imul
or
dec
sub
mov
sbb
imul
popa
inc
in
leave
jl
lahf
sbb
and
mov
xchg
push
sub
test
and
scas
jmp
repnz
enter
rcll
stos
inc
push
pop
ficoml
cmp
push
push
cmpsl
xlat
cld
ret
sub
xor
sub
mov
sbb
dec
pop
hlt
xchg
daa
add
fldenv
ljmp
push
sbb
jp
jb
jg
sbb
sbb
inc
repnz
ret
or
call
filds
xchg
cmp
jae
jl
cmp
adc
pop
repnz
xchg
or
dec
ret
jae
movsl
mov
test
cmp
imul
dec
push
stos
aas
sbb
pop
jnp
out
xor
add
out
xchg
pusha
loop
pop
daa
pop
pop
lcall
cmp
mov
jnp
jmp
mov
in
add
push
arpl
ret
cmp
cltd
cmc
shlb
xor
sbb
sub
sub
repnz
push
fs
push
adc
dec
push
xchg
insb
xor
and
pop
adc
inc
dec
dec
mov
enter
jne
jo
sub
sub
push
cltd
aas
xor
cmp
xorb
jae
mov
repz
cmp
xor
push
es
pop
push
xchg
lret
enter
sub
add
stos
dec
subl
adc
xor
jbe
dec
cmpsb
mov
repz
jmp
fsubrs
outsb
pop
jl
sub
inc
cmp
or
sbb
adc
sbb
insb
jo
xchg
ljmp
cmp
pop
outsb
cmp
je
insl
cmp
dec
dec
mov
rorl
sub
cs
fistpll
add
adc
add
jecxz
cwtl
sbb
pop
xor
cmp
int3
xchg
mov
bound
adc
xor
adc
leavew
sbb
movsb
push
pop
mov
dec
ja
jno
dec
lahf
mov
push
pusha
subb
pop
dec
cs
scas
or
jno
dec
in
adc
push
gs
lcall
xor
jge
incl
push
push
enter
jecxz
sub
push
jecxz
and
out
mov
or
jge
xchg
fcompl
xchg
rcrl
push
lock
lods
cmp
cmp
cmp
xor
push
or
ret
sbb
insb
adc
xchg
repnz
test
lock
insl
sub
cmpsb
dec
aaa
xchg
jg
mov
inc
insb
lea
popf
jae
call
int3
aas
cld
aaa
inc
xor
jae
and
mov
mov
cmp
aam
das
pop
insb
cld
adc
mov
and
push
lcall
pop
xor
sbb
lock
push
loop
shrb
inc
test
cmp
in
rorb
cmp
std
shlb
fsubl
add
add
cmp
cmp
lock
sbb
mov
fcoms
adc
sub
xchg
add
push
pushl
aam
jno
jge
ss
and
addps
pushf
dec
sbb
ja
mov
or
lcall
dec
and
mov
stos
jmp
sub
sub
inc
movsb
sub
sub
cwtl
movsl
aaa
xor
mov
push
sub
outsl
mov
das
lcall
xchg
aaa
lret
or
xor
sbb
xchg
or
push
rcll
inc
inc
dec
leave
aas
push
daa
jle
aas
aas
pop
dec
into
add
sbb
ret
mov
aam
xchg
adc
out
inc
mov
cld
mov
inc
cmp
sub
or
and
jnp
pop
rorb
xor
nop
daa
xchg
pop
pusha
xor
and
adcl
ror
cltd
add
sub
and
push
xchg
pop
xchg
cmp
cmp
adc
mov
add
sub
inc
add
pop
fwait
and
xchg
insb
sbb
pop
and
push
icebp
adc
xchg
sbb
fs
pause
aas
cmpsb
cmp
rep
rcll
dec
adc
and
push
mov
add
cmpsl
or
add
sub
ret
aaa
push
pushf
mov
insl
mov
or
push
and
push
adc
dec
pop
lock
xchg
lcall
repz
xchg
pop
sbb
pop
pop
or
adc
push
jb
pop
inc
rcll
int
mov
pop
sahf
daa
jo
push
mov
and
pop
es
xchg
outsb
inc
adc
test
or
jecxz
inc
dec
dec
js
mov
dec
dec
mul
pop
xchg
xor
push
add
fists
cltd
inc
ret
add
or
sbb
push
jo
inc
dec
xchg
std
jnp
inc
adc
xor
fnstsw
arpl
repnz
xchg
daa
dec
subb
xor
or
push
in
pop
mov
jno
cmp
mov
hlt
cmp
dec
pop
insb
popf
aaa
add
jns
pop
mov
test
sbbb
inc
or
js
pop
push
dec
xchg
xor
imulb
dec
pop
cmpsb
cmp
popf
mov
shl
xor
insb
push
cmp
and
mov
pop
aas
dec
cltd
test
inc
and
pop
mov
outsl
adc
imul
sub
cmpsb
dec
sbb
adc
lods
std
repnz
lds
push
sbb
pop
lahf
cmp
push
add
icebp
pop
xor
sarl
mov
loop
frstor
test
ret
mov
roll
mov
bound
ret
pop
clc
inc
push
repz
push
out
repz
vphadduwd
nop
xor
cmp
ret
lar
jno
adc
enter
jae
adc
in
movsl
xor
aaa
xchg
arpl
xor
push
rorl
jnp
fistl
cmp
ret
mov
sub
xchg
mov
out
mov
sub
cmp
addr16
notl
mov
sbbb
mov
add
frstor
sti
rcl
es
std
dec
push
inc
cmpsl
and
popa
add
sub
std
aas
lret
addb
dec
inc
aad
cld
cmp
sbb
xchg
lret
inc
dec
jg
mov
aad
sub
xchg
cmp
ret
cwtl
push
adc
xor
mov
sbb
adc
pop
inc
and
jle
mov
loope
mov
inc
pmulhuw
sbb
lea
enter
js
and
push
sbb
jge
js
in
push
std
push
cmp
inc
mov
rcll
sub
adc
mov
push
pop
adc
push
int3
mov
shlb
dec
xor
test
scas
mov
int3
repnz
dec
xchg
dec
ss
sbb
cmp
clc
xor
sub
filds
sbbb
adc
sub
fidivrl
ja
ret
xchg
out
inc
aas
les
outsl
add
xor
push
sti
popa
sbb
repnz
movsl
cltd
movsl
jo
aas
and
fiadds
mov
pop
cmp
push
xchg
pop
outsb
mov
xor
iret
push
pop
out
fsts
stos
and
jae
xchg
sbb
or
or
cmp
inc
dec
jae
push
inc
in
push
inc
icebp
xor
and
movsl
in
js
mov
repnz
setl
fimuls
add
pop
sbb
push
dec
lds
ret
or
cmp
mov
ds
popa
adc
mov
or
push
dec
add
sbb
mov
pop
push
add
pop
cmp
dec
mov
mov
push
repz
cmp
xchg
rcrb
push
pop
gs
xchg
push
enter
cld
add
cs
rcll
sbb
cmovns
push
sub
pop
push
lea
jle
and
or
cmpsb
daa
xchg
int3
fs
adc
outsb
sbb
pop
sub
adc
sub
js
pop
or
sbb
add
push
mov
or
xchg
sub
sub
roll
loope,pt
adc
jmp
loope
shufps
add
jo
cmpsl
sar
iret
inc
enter
dec
bswap
sub
xor
dec
or
or
adc
push
or
add
sub
mov
les
sub
aas
inc
add
adc
push
mov
es
std
sbb
pop
test
cmp
icebp
shr
push
push
adc
xchg
push
sbb
repz
leave
sub
call
pop
nop
mov
jns
inc
xchg
enter
jbe
mov
sbb
rolb
cmp
mov
xor
outsl
adc
jae
xchg
int
mov
push
lret
rorb
outsb
xchg
mov
cmpl
cs
mov
lcall
and
fst
xchg
add
testb
pushf
xchg
mov
fidivrl
lods
loope
xor
xchg
adc
insl
inc
movsb
or
pop
std
sbb
push
loop
mov
push
mov
xor
fidivl
out
and
std
mov
outsl
lahf
mov
popa
or
cmpsl
out
mov
daa
or
rorb
adc
push
jmp
or
addl
push
mov
in
jge
cltd
sti
scas
clc
insb
lret
and
ret
add
fmul
lret
aad
sub
nop
fcoml
idivl
stos
int3
mov
or
mov
rcrl
jg
sbb
stos
inc
dec
aas
js
ja
jg
test
pop
jno
inc
add
adc
sbb
cld
cmovle
repz
lcall
xor
mov
sub
rcrb
in
push
jmp
and
orb
sar
test
xlat
pop
push
pop
lret
pop
pop
outsb
pop
sbb
xchg
push
xchg
pop
leave
mov
sbb
mov
xor
push
and
and
adc
jmp
pop
repz
imul
insb
or
sbb
sbb
xchg
bound
decl
jno
push
int3
pusha
mov
jg
xor
inc
je
add
pop
cwtl
imul
pop
std
xor
xchg
jmp
aaa
add
or
sub
cmp
inc
pandn
add
pop
sbb
cwtl
or
pop
sbb
and
popa
push
cmp
je
jno
data16
sbb
or
sbb
jne
fistl
popf
add
lods
push
mov
subl
aad
push
popa
pushf
fldenv
sub
xchg
cmp
jecxz
mov
jo
and
aaa
mov
push
cmp
test
xchg
adc
or
or
in
pop
push
push
divps
sbb
sub
sti
inc
orl
icebp
aas
out
pop
push
jnp
pminsw
repnz
adc
push
in
mov
scas
fldcw
in
lret
sub
lods
pop
adc
inc
clc
cmp
sbb
xor
dec
out
xchg
mov
mov
mov
sub
outsl
push
ss
sbb
adc
fimull
sti
push
mov
xor
and
shr
sub
xchg
sub
add
loopne
repz
mov
adc
stc
push
aam
ds
sub
js
sahf
outsl
cmp
xor
dec
fisubrl
sbbb
pusha
cmp
pushf
dec
mov
cmp
mov
add
sbb
pop
je
inc
lea
fsts
or
cmp
xchg
or
stc
mov
sub
mov
mov
std
cmp
sbb
xor
shlb
mov
sbb
add
or
hlt
cmp
jnp
and
xor
xchg
inc
pop
jbe
mov
icebp
pop
mov
addr16
loope
xchg
xchg
fcoms
fldz
and
adc
mov
sub
or
pop
lret
mov
shlb
aas
xchg
stos
cmp
popa
mov
jae
or
jp
lods
jae,pn
clc
ror
ds
jb
jae
popa
push
mov
mov
sub
cmp
add
lods
adc
data16
inc
cwtl
gs
cmp
inc
hlt
add
jnp
sarb
xchg
or
test
xchg
xor
sbb
sbb
pop
sbb
ss
mov
rolb
sbb
dec
xor
xor
scas
mov
out
stos
sbb
cmp
icebp
mov
sbb
mov
sub
inc
ret
rolb
fwait
pop
dec
lret
repnz
leave
adc
xor
adc
push
sbb
dec
aad
pop
mov
mov
cmp
xchg
nop
sub
cmp
inc
xor
pop
cmp
xchg
add
push
gs
imul
cmp
movsl
mov
adc
sbb
pusha
loopne
add
inc
daa
shlb
aad
fisubrs
pop
sub
in
push
xor
repnz
test
pop
and
xor
shll
cmp
or
lods
ret
loop
or
inc
jmp
push
sbb
ljmp
dec
pop
jae
clc
loopne
ss
imul
push
or
sub
jno
scas
aas
mov
add
dec
imul
and
adc
cld
sub
adc
add
pop
or
lss
cmp
sub
mov
aas
mov
inc
inc
dec
and
daa
xchg
outsl
fimuls
rcrb
push
jl
movsl
pop
out
ljmp
mov
enter
repz
hlt
das
fistpll
add
repnz
test
mov
cmp
dec
or
cli
repnz
cmp
mov
xor
inc
pop
pop
dec
sti
in
push
inc
dec
jns
enter
inc
popa
adc
mov
mov
shll
mov
inc
ds
cmc
mov
int
lret
mov
inc
cli
jbe
inc
fldl
xchg
outsl
or
fisttpll
fnstenv
mov
fwait
dec
repnz
outsl
inc
in
shlb
not
mov
cmp
jle
notb
pop
cltd
shr
dec
mov
add
cwtl
pop
out
jecxz
js
pop
insb
adc
sub
imul
sbb
test
sbb
nop
inc
push
push
xor
inc
cmp
repnz
bound
jne
xchg
push
adc
out
test
mul
push
ret
mov
cmpsb
ret
loop
in
mov
push
sbb
outsl
or
mov
xchg
loop
add
dec
dec
jge
test
shll
inc
dec
daa
adc
and
adc
cmp
jns
cmpsl
xor
aas
mov
mov
pop
fcomp
int3
adc
sahf
insl
cs
jae
cmp
fcoms
dec
dec
ljmp
adc
repnz
sti
cltd
and
imul
and
mov
fcompl
mov
cs
clc
fcomip
mov
inc
sbb
inc
shrl
insl
jmp
loopne
inc
jge
mov
inc
repnz
repnz
push
ljmp
cmpsl
call
sub
adc
jnp
loope
lock
jmp
or
fidivs
add
xchg
or
js
popa
and
fistpl
pop
pop
scas
ljmp
test
xor
outsb
sbb
dec
dec
and
stos
cmpl
dec
call
mov
jns
xor
xor
or
push
outsl
negl
fisttpll
fsubs
pop
or
adc
inc
sahf
or
jns
sbb
pop
sbb
inc
aas
sbb
xchg
push
decb
rcl
dec
add
jb
in
repnz
shrl
insb
or
xor
inc
cmp
aam
imul
sbb
sub
fistpl
leave
jb
mov
mov
jae
pop
repnz
dec
add
mov
xchg
push
into
out
inc
jnp
push
xor
sbb
xchg
and
sbb
les
outsb
or
arpl
adc
fbld
push
fiaddl
push
jl
popf
cmp
jl
jnp
out
jle
push
mov
mov
mov
bound
sub
xor
popa
push
or
fnstcw
jo
ret
pop
subb
inc
add
movsb
cmp
xchg
push
xchg
lcall
push
and
xor
or
add
adc
push
cmp
inc
aaa
shlb
dec
jge
outsb
add
pop
mov
js
repnz
sti
pop
xor
sub
adc
push
jl
add
adc
dec
xor
fnstcw
icebp
lock
push
pop
das
repnz
hlt
cs
mov
sbb
mov
sbb
inc
rclb
adc
jg
cmp
das
mov
pop
ret
adc
sarb
inc
stc
xchg
test
jge
popf
xor
adc
popf
subps
push
pop
insb
int
jo
pop
loope
or
pop
in
adc
xchg
ss
jns
lret
psadbw
add
and
add
icebp
outsl
sub
leave
rcll
adcb
adc
or
fldenv
stos
in
repz
es
pop
jne
jl
adc
aaa
lea
dec
push
adc
es
jg
add
mov
add
mov
sub
jb
hlt
icebp
clc
xchg
dec
out
push
fwait
push
mov
mov
pop
stos
nop
push
aaa
inc
mov
scas
lods
jge
push
mov
xor
test
push
out
sub
sbb
popf
push
icebp
pop
pushf
pusha
or
cmp
ljmp
fisubl
rcr
xchg
lret
xor
nop
addr16
mov
sub
ss
stos
push
pop
or
cmpsl
sub
ret
mov
stos
bound
cmp
pop
mov
push
cmp
cli
repz
pop
push
add
cmp
inc
cmpsl
and
dec
repnz
dec
xor
jmp
popa
test
xchg
push
mov
out
sbb
push
insb
scas
mov
pop
cmpsl
mov
mov
adc
jg
mov
add
sub
cmc
inc
pop
cltd
and
arpl
or
and
ss
and
cmp
and
jo
xor
xor
rclw
fcmovnb
adc
test
bnd
add
sbb
cli
in
sbb
jmp
and
mov
xchg
repnz
out
xor
cmp
enter
mov
jae
xor
or
stos
inc
jmp
popf
xor
lahf
push
stos
push
and
out
adc
or
and
outsl
mov
dec
addr16
dec
repnz
imul
add
mov
hlt
ret
fwait
aad
scas
daa
orb
inc
push
and
push
add
xor
stos
jae
cmp
mov
dec
adc
mov
mov
jns
inc
pop
das
dec
incb
jae
outsb
and
xchg
mov
pop
fwait
popf
push
xchg
idivb
jno
repz
adc
aaa
sti
pop
mov
lods
fnsave
or
xchg
dec
lea
lret
movsb
ds
fwait
stos
lcall
sbb
test
nop
pop
lods
clc
sbb
sub
jmp
cwtl
push
dec
mov
fistps
mov
aas
cwtl
cmp
sbb
inc
ret
roll
cwtl
mov
pushf
orl
pushf
negb
pop
enter
mov
std
ret
hlt
sahf
outsl
adc
fistps
push
mov
push
pusha
adc
adc
push
sbb
dec
mov
mov
mov
jg
outsl
popf
push
popf
daa
fwait
loope
mov
scas
push
jecxz
mov
arpl
sbb
sahf
mov
arpl
add
sbb
inc
inc
pop
out
jmp
scas
sbb
icebp
insb
xchg
push
loope
sbb
mov
xorl
aaa
ficompl
js
stos
and
push
xchg
push
cmp
sub
test
and
mov
adc
add
test
cmp
mov
sub
outsl
add
clc
data16
fstl
jae
mov
xchg
push
or
aam
cmc
xor
pop
xor
aaa
pop
jg
mov
out
arpl
and
outsb
push
pop
aad
out
cmp
popa
push
fucomp
pop
loopw
call
add
add
in
adc
pop
mov
shll
rolb
xchg
loopne
flds
addb
out
dec
pop
andl
add
cmp
jmp
arpl
push
xor
mov
mov
push
dec
xchg
adc
or
xchg
test
addl
adc
mov
pop
sub
lcall
gs
adc
xor
dec
pushf
pop
and
cmp
push
xchg
xor
cmp
jg
insl
sahf
pop
outsl
cmp
pop
cmpb
or
mov
adc
mov
lahf
push
lock
or
test
or
cmp
ret
add
push
mov
pop
add
or
pop
sbb
dec
pushf
pop
loop
jg
in
xchg
arpl
cmp
sbb
mov
sti
pushf
ja
cmp
mov
rcll
xchg
pop
icebp
xor
mov
lcall
cld
pop
and
adc
pushf
pop
inc
xor
add
adc
mov
adc
repnz
pop
scas
insl
popf
pop
shrl
fcomps
lahf
push
mov
repnz
pop
adc
jae
jl
mov
shrb
lock
mov
mov
repnz
jmp
lods
out
xor
pop
push
popf
lahf
xchg
shrl
imul
add
ja
adc
add
add
mov
dec
popa
push
andl
and
and
mov
fsubl
leave
mov
iret
pushf
shll
fldcw
inc
xor
inc
outsb
inc
push
xor
sub
cmpsl
adc
push
arpl
pop
popa
inc
imul
mov
sub
adc
or
pop
daa
movsb
pusha
inc
fstl
aaa
pop
push
lock
and
add
adc
adc
adc
shrb
sbb
movsb
nop
adc
sbb
dec
lock
fistpl
pop
ret
stc
pop
mov
pusha
adc
pop
xchg
xchg
add
leave
xor
inc
mov
pop
pop
sarl
cmp
ljmp
xor
dec
mov
cmc
mov
outsl
adc
ljmp
adc
repnz
dec
push
aaa
dec
inc
cmp
movsb
aaa
mov
insb
push
push
ljmp
mov
and
loop
jge
pop
je
pop
std
add
filds
cmp
or
in
testb
push
jmp
sbb
xchg
xor
mov
lcall
aam
sbb
loope
lds
and
in
push
pushf
mov
mov
push
adc
out
daa
jp
xor
addb
cmc
pop
out
cld
sahf
mov
pop
xlat
xchg
jge
loop
hlt
lock
enter
lods
jl
in
pop
sub
in
mov
shl
lods
adc
inc
and
mov
jne
cmpsb
dec
xchg
out
xchg
enter
ficompl
xor
test
push
xchg
enter
inc
mov
push
adc
into
xor
aaa
lods
sub
lods
or
sbb
xor
dec
adc
xlat
adc
jmp
inc
and
stos
pop
shlb
in
dec
shr
jns
call
and
shll
insb
push
mov
adc
inc
shr
in
xor
pop
jno
mov
xor
dec
push
movsb
stos
push
loop
and
dec
dec
leave
cmp
adc
inc
adc
pop
cmp
dec
lret
pop
hlt
xchg
lcall
jns
mov
outsb
das
lret
xchg
lret
sbb
fisubl
out
fcomps
mov
cltd
loopne
arpl
push
sahf
arpl
aam
xor
push
push
cltd
out
cmp
inc
test
outsl
push
jae
nop
pushf
sub
xor
or
lahf
nop
cmpsb
outsb
cmp
test
push
adc
or
cmp
pop
or
aad
xor
adc
data16
aas
dec
test
stc
pop
ja
jle
repz
push
clc
push
shl
addr16
scas
pop
jno
roll
es
sub
js
or
aaa
push
ret
cmp
jge
sub
inc
push
mov
repnz
xchg
xchg
add
push
popa
push
loope
pop
out
icebp
mov
or
gs
fs
loopne
out
sti
ja
jl
aaa
test
push
cmpsb
sub
cli
jmp
add
xchg
lods
in
adc
or
adc
repz
pop
or
aaa
cmp
sub
cmp
or
cli
push
in
and
nop
cmp
sbb
sbb
outsb
sub
cwtl
les
test
mov
cmp
adc
mov
mov
scas
sbb
push
adc
or
xchg
clc
icebp
inc
pop
dec
adc
outsl
or
nop
sbb
shll
fistl
mov
flds
stc
sub
add
mov
push
mov
jge
adc
sbb
xor
sub
inc
sub
jbe
mov
add
cmp
xor
ret
mov
adcl
stos
clc
mov
or
fdivr
pushf
shrl
in
or
pop
call
sbb
clc
xchg
pop
sar
lds
add
testb
pushf
outsl
add
jmp
xchg
and
add
pop
mov
push
adc
push
or
mov
mov
in
pop
add
bound
mov
or
pop
stos
jno
pop
in
outsb
lret
inc
cld
ret
insl
adc
sbb
mov
push
xchg
in
mov
rolb
pop
pminub
nop
inc
pop
fildl
ja
push
jno
push
xor
xor
add
push
or
nop
xor
sub
sbb
cmp
xor
inc
sbb
outsb
lret
movsl
lods
sub
add
fnsave
icebp
mov
mov
sbb
push
fdivrl
fisttpll
and
dec
fmuls
sbbl
fsub
xor
cmp
add
dec
adc
dec
dec
jae
lock
cmp
push
cmp
lahf
adc
fldenv
push
out
daa
xlat
daa
rolb
ret
inc
lock
or
js
pmaxub
shrl
les
test
or
cmp
mov
cmp
add
ja
aas
pop
jecxz
jecxz
mov
or
jp
ficomps
adc
sarb
mov
in
out
sbb
stos
xchg
cltd
ror
sbb
jecxz
lcall
push
pop
jl
ljmp
sbb
mov
xor
mov
ss
test
mov
or
out
adc
jecxz
sbb
pop
xlat
loope
inc
fsubrs
ficoml
add
xor
sub
pop
push
pop
xchg
sahf
cmpsl
mov
mov
sbb
add
pop
push
or
or
xor
dec
xchg
xlat
jns
adc
sbb
push
mov
push
fistpl
adc
and
sub
mov
push
xor
push
mov
pop
incl
cmp
adc
adc
pop
shrb
lcall
inc
mov
nop
repnz
cmp
push
sbb
add
daa
mov
aas
dec
push
xchg
outsl
push
xchg
xor
pop
mov
js
xchg
dec
sbb
cmpb
sub
sub
sub
insl
mov
sub
das
jl
outsb
lods
adc
mov
sub
push
or
xor
push
cmp
fildll
push
lock
dec
out
gs
xchg
pop
sbb
jmp
ljmp
loope
jno
mov
pop
xlat
jl
repz
sbb
xor
and
push
inc
cmc
push
jmp
in
repnz
ret
lcall
push
pop
and
in
sbb
xor
or
jmp
popf
outsb
repz
loop
aas
sbb
jg
or
add
cld
or
daa
jg
or
sub
pushf
add
push
jae
push
test
mov
xchg
lods
loope
fwait
sbb
data16
scas
cmp
pop
out
cmp
cmc
add
jnp
dec
mov
call
push
mov
xor
pop
pop
adc
dec
dec
outsl
adc
jae
inc
cmp
mov
xor
mov
aam
or
cmp
push
sbb
add
pusha
jle
add
cmp
xor
mov
pop
sbb
fdivrp
inc
or
xchg
jecxz
adc
and
push
daa
xchg
jno
and
out
sub
jg
cltd
loopne
pushf
pushf
outsl
xor
arpl
jb
cld
jecxz
std
sbb
repz
sub
pop
jmp
jo
mov
imull
dec
jg
aas
fldenv
cwtl
jecxz
lcall
mov
adc
pop
cmpsl
or
movsb
or
mov
or
xchg
jg
pop
add
test
cmp
xor
mov
mov
inc
or
nop
pop
js
inc
or
lahf
push
mov
outsl
jmp
xor
pop
pop
iret
push
inc
fdiv
cmp
sbb
xlat
outsb
mov
aaa
push
data16
push
push
pop
call
mov
fs
sub
setl
dec
dec
or
pop
xchg
or
and
cwtl
mov
insl
adc
repnz
or
cmp
xchg
pop
and
leave
ljmp
jmp
or
loope
adc
jmp
xchg
outsl
jg
icebp
inc
mov
or
cld
mov
into
sub
inc
out
nop
push
sub
repnz
jmp
push
dec
adc
pop
pop
repz
aas
push
push
cmpsl
shl
out
stc
dec
inc
fimull
mov
cmp
cmp
das
repnz
cld
and
dec
sbb
repnz
mov
test
add
add
insb
aam
movsl
pusha
or
lock
sub
dec
push
or
fsubs
xchg
mov
adc
or
push
stos
adc
jbe
adcb
jne
or
mov
lock
push
inc
mul
lcall
mov
or
outsb
frstor
ds
sbbb
inc
mov
cld
sbb
vmovddup
pop
icebp
popf
repz
fsts
jno
xor
adc
shlb
shrl
clc
mov
leave
sub
dec
xchg
inc
repz
test
enter
jle
mov
xor
cwtl
roll
or
in
into
lret
jg
fmull
pop
call
mov
sbb
mov
shl
loop
adc
pushf
cwtl
adc
add
bound
mov
pop
out
sbb
xchg
mov
leave
movsl
pop
inc
sbb
xchg
or
add
pop
and
sbb
sub
call
sbb
stos
ja
out
fcmovbe
adc
in
mov
and
dec
pop
adc
cmp
sub
pop
or
out
jecxz
sbb
or
ds
daa
inc
pushf
les
mov
pusha
inc
sub
enter
fsts
or
enter
wrmsr
push
fwait
daa
sbb
enter
incl
inc
cmp
dec
ss
mov
cmp
sbbl
loope
test
or
sbb
pop
push
and
add
adc
cmp
pop
adc
cltd
xor
xchg
loopne
push
cwtl
cmp
outsb
push
movsb
push
xor
addl
pop
lret
mov
dec
inc
lock
pushf
cmp
sub
ss
cltd
repnz
rorl
ficoms
dec
pop
test
add
fs
test
push
sbb
or
out
adc
hlt
pop
jg
jnp
cld
adc
inc
jo
loope
filds
aam
xor
or
movsb
aas
xor
push
gs
mov
adc
lahf
or
mov
mov
fwait
pop
mov
sub
cmpsb
mov
mov
or
push
add
xor
imul
push
repnz
push
add
dec
xor
and
ljmp
jo
idivl
repz
dec
mov
pop
cwtl
add
dec
xchg
lahf
adc
pop
lcall
inc
sub
cmp
inc
adc
cmp
add
mov
cmp
pop
cld
loope
seto
repnz
mov
subl
xchg
push
pushf
sbb
add
insl
test
push
sbb
pop
repnz
pop
inc
mov
sbb
insb
cmovge
and
movsl
aaa
outsl
icebp
adc
pop
sub
out
dec
or
mov
daa
dec
dec
icebp
int3
mov
mov
arpl
pusha
cmp
repnz
and
stos
call
jg
mov
push
inc
fidivrl
scas
pop
pop
ss
mov
inc
insb
or
xchg
pop
inc
imul
mov
ss
cmp
fisttpll
jnp
xchg
inc
test
fiaddl
hlt
pop
scas
mov
ss
adc
and
xor
cmp
dec
fists
pop
push
sbb
aas
push
fstps
adc
in
cs
aas
xor
xor
femms
loop
mov
cld
test
pop
add
xor
fimull
pop
loopne
scas
cmpsl
or
mov
xchg
loop
cs
xor
mov
in
pop
sbb
out
pop
cmp
imul
cmovo
aas
loop
push
adc
jmp
xchg
sub
jno
loopne
imul
rcll
sub
sbb
xchg
andb
xchg
push
xor
sub
sbb
fsubl
out
sbb
lret
repz
and
adc
or
outsb
shlb
pop
add
out
pop
shl
xor
and
add
push
adc
cli
lods
xlat
cmpsb
xor
adc
hlt
lock
ss
xchg
in
out
sbb
test
xorb
fldt
shlb
mov
and
mov
or
rclb
inc
jp
cmp
jmp
fimuls
sub
iret
mov
xchg
push
ja
fidivs
xchg
sbb
jecxz
enter
test
xchg
jo
sbb
jge
cmp
cmc
mov
xchg
clc
js
or
jge
dec
cmp
adc
pop
scas
dec
inc
out
adc
incb
lods
sub
mov
pushf
pop
outsb
cmp
setns
outsb
ja
jl
lahf
out
out
push
mov
xchg
sub
cmp
leave
dec
cltd
fimuls
adc
add
add
cs
and
sub
pop
mov
jl
sbb
and
lock
pop
pop
ficomps
jno
inc
cmpsb
rorb
jg
xlat
pop
mov
mov
xor
sti
xadd
cmp
mov
xor
push
mov
pop
push
or
jge
add
xchg
daa
enter
mov
jae
or
jnp
jae
ljmp
or
adc
mov
loopne
das
lds
adc
incl
in
mov
sarl
mov
subl
out
int3
lds
inc
cli
test
dec
sbb
lahf
jl
push
jbe
sbb
std
out
jecxz
in
rorb
or
mov
xlat
incl
or
outsb
pop
icebp
sub
and
call
lock
in
pop
in
xor
jno
int3
mov
fnsave
inc
push
sub
sbb
pop
es
sub
daa
lock
out
xchg
stos
mov
push
add
lcall
dec
mov
lock
pop
fisttpl
xchg
mov
aad
adc
sub
xor
mov
mov
lods
and
rorb
sub
jge
iret
pop
jo
jo
xor
pop
nop
xchg
lret
popf
sub
inc
insl
jmp
loop
cmp
xor
pop
xchg
push
push
adc
fs
mov
adc
dec
sub
mov
scas
lock
das
gs
push
test
test
jge
loopne
jns
imul
ljmp
ror
lods
mov
pop
pop
push
pushl
insb
or
xchg
xor
ret
push
and
xchg
or
and
out
mov
cmp
adc
pop
lahf
xchg
subl
repz
add
push
add
xchg
stos
push
call
inc
mov
daa
xchg
aas
inc
lahf
call
add
cld
cmpb
mov
push
es
lcall
push
or
add
dec
and
loopne
xchg
adc
lods
pop
or
mov
xchg
out
loopne
inc
xor
bound
jb
or
push
dec
sub
pop
or
pop
cmc
pop
jno
xor
xor
push
test
push
mov
push
adc
dec
pop
inc
stos
push
add
xor
cmp
xchg
test
push
mov
call
xchg
pushf
xchg
bound
ljmp
dec
inc
mov
scas
sbb
mov
nop
and
xchg
insl
test
sub
adc
xchg
call
je
inc
lods
mov
inc
mov
popf
cmp
inc
cmpsl
pop
mov
dec
jno
cmp
dec
loop
outsl
mov
adc
iret
push
or
ds
sub
cltd
xchg
cmp
fistpll
add
call
mov
lock
mov
adc
jp
adc
lret
enter
mov
pop
xor
insl
push
das
repnz
and
mov
add
inc
cltd
lcall
leave
nop
adc
aas
andl
push
inc
ror
loope
lahf
mov
fisubrs
inc
dec
mov
adc
lahf
inc
jecxz
aas
push
or
out
inc
pop
cmp
loopne
sub
xor
ss
popa
inc
adc
mov
pop
es
pushf
cmc
push
loope
repz
sub
fisubs
mov
cwtl
stc
cltd
dec
sbb
icebp
mov
push
sbb
pop
lock
outsb
pop
pop
xor
int
sti
scas
adc
adc
fildll
jge
cmp
dec
adc
push
add
jge
mov
jmp
jnp
sti
jmp
jl
or
sbb
lret
punpckhbw
pop
add
push
push
and
mov
insl
or
push
fs
dec
jb
push
sarl
push
fimuls
lahf
dec
mov
mov
sbb
popf
scas
dec
jae
xchg
mov
sbb
imul
adc
fadds
inc
jmp
fcompl
and
jmp
xor
push
xchg
aaa
pop
push
cmp
insl
or
lcall
lcall
dec
or
scas
fistps
sub
lret
insb
dec
mov
xor
enter
lahf
outsl
inc
or
pop
ds
shlb
or
xchg
sbb
repz
push
inc
xor
dec
or
jl
sbb
xchg
popa
imul
lock
gs
mov
test
inc
and
call
dec
clc
aaa
or
mov
pop
xchg
dec
push
daa
mov
lahf
outsl
ds
repnz
addb
imul
adc
inc
dec
lea
xchg
lock
and
mov
dec
movsl
cld
mov
mov
repnz
mov
xchg
xorb
dec
mov
jmp
rcrl
xor
xchg
in
mov
popa
or
sub
jne
sbb
mov
mov
inc
add
mov
stc
stos
push
mov
repnz
pop
xchg
mov
xor
inc
ds
or
ja
sbb
lods
push
shrb
or
mov
loope
mov
dec
sub
orb
push
into
pop
sbb
xor
push
or
and
je
xor
push
add
jmp
pop
adc
orl
sub
xor
outsb
testb
mov
adc
dec
loop
lcall
call
sbb
sbb
dec
mov
jmp
pusha
push
in
test
adc
repnz
in
mov
mov
das
push
insb
pop
and
call
mov
or
push
xor
mov
add
cmp
mov
ja
dec
stos
sbb
ror
out
lock
push
dec
inc
push
cmpsb
sti
in
ds
sub
pop
lods
dec
push
or
sub
push
test
aam
lahf
ss
sbb
dec
icebp
rcpps
cmpsl
xor
mov
bound
jo
jecxz
aam
mov
dec
mov
mov
fisubrl
inc
or
aaa
scas
pop
icebp
add
lret
stos
bound
insb
xor
cmp
add
loop
shr
mov
addr16
movsl
int
in
mov
sub
bound
fiaddl
out
xor
xor
addr16
xchg
add
stc
lods
out
sub
or
iret
push
jmp
cmpl
or
xor
push
mov
mov
xchg
cmp
pop
xor
mov
jb
iret
std
mov
les
pushf
loopne
adc
jg
rclb
lods
rorb
pushf
push
fisttpl
mov
scas
add
xor
icebp
pop
lock
rolb
cmp
fcomps
mov
jb
dec
imul
mov
cmpl
fistpll
mov
inc
adc
inc
cmpb
dec
jmp
mov
and
daa
test
loopne
out
jns
or
mov
ds
and
fmull
iret
pushf
xchg
sub
xchg
out
cs
or
jmpw
fbld
xor
in
aas
xchg
insl
data16
call
js
jb
movsl
movsl
or
jl
test
por
pusha
or
cmp
adc
shlb
add
inc
out
imull
dec
ret
test
xor
sub
leave
push
and
pop
pop
imul
add
sub
pop
mov
mov
sub
daa
push
inc
lods
mov
and
sbb
add
sbb
xor
pop
jp
add
rclb
xchg
scas
fwait
pushf
mov
and
dec
xor
cmp
adcb
xor
data16
and
mov
sub
and
sbb
test
sbb
fbstp
adc
fyl2xp1
pop
inc
outsl
push
sbb
or
mov
and
rorl
pop
xchg
test
mov
jo
jg
pop
aad
adc
fwait
insl
xor
jg
push
test
adc
je
popf
ss
mov
lret
aam
ljmp
dec
leave
test
adcl
fcmove
pop
sbb
outsb
mov
ss
nop
test
cwtl
push
mov
loopne
push
adc
scas
pop
lea
push
test
mov
mov
mov
mov
sbb
clc
adc
xor
ljmp
mov
in
sub
push
fsts
pop
and
fists
sub
aam
leave
lods
and
loope
jne
popa
clc
push
test
ja
jp
add
int3
sti
inc
je
aad
inc
fimuls
adc
or
add
fidivrl
adc
mov
cld
sti
insl
popa
inc
mov
sahf
mov
insl
test
repnz
neg
cmp
jmp
sbb
bound
adc
xor
js
and
and
add
dec
or
xchg
cltd
shlb
aad
sti
ficoms
cmp
notl
or
xor
shll
sbb
rcl
inc
or
movsl
xchg
stc
rcr
push
outsb
lcall
test
dec
das
push
or
jmp
lcall
push
mov
dec
sub
sbb
gs
and
aam
or
mov
sbb
and
jne
sbb
daa
adc
add
xchg
or
xor
int3
xchg
sub
aas
mov
roll
cld
lret
out
lahf
rorb
push
jbe
dec
jl
pop
or
mov
out
enter
testl
pop
and
sbb
jg
mov
lahf
pop
iret
and
xchg
sbb
jnp
xchg
push
fcmovu
or
sarl
add
cwtl
or
mov
adc
pop
into
stos
shl
cmp
mov
pop
out
fists
xor
push
jb
push
fisubl
jne
rolb
add
jae
movsl
andb
and
sub
dec
mov
scas
jmp
and
pusha
mov
or
push
jne
xchg
adc
mov
das
test
or
fists
cmp
sub
adc
shll
mov
xor
lods
and
add
fwait
xor
dec
mov
pop
jl
test
add
pop
sbb
inc
add
pop
loope
js
shr
push
xlat
neg
scas
lret
add
xor
pop
mov
fstl
je
test
mov
inc
adc
sub
xchg
push
pop
ds
adc
xor
cwtl
adc
sub
mull
cmp
jmp
mov
iretw
and
lds
jo
and
or
cmp
decl
ljmp
push
add
test
pop
cli
ds
pop
inc
outsb
les
lahf
pop
sahf
stos
push
xchg
dec
xor
xchg
test
sub
sbb
mov
daa
xchg
xchg
mov
xchg
pushf
jge
lret
mov
xchg
sarl
adc
pop
movsb
pushl
or
mov
cmc
push
jg
fcompl
add
and
lcall
test
outsl
mov
adc
push
mov
jbe
dec
clc
add
sbb
mov
insb
js
xor
pop
jecxz
cwtl
pop
add
adc
bound
adc
sbb
or
push
xchg
aaa
sub
and
or
sub
jp
xchg
xchg
nop
lea
movsl
lea
mov
sbb
jns
fists
and
mov
inc
and
xchg
repnz
cmp
sbb
cmpsb
cmc
scas
roll
loope
jle
repnz
mov
mov
jl
pop
sbbl
sbb
addr16
adc
push
outsl
nop
mov
testb
cmp
ds
dec
sub
or
stos
fsubrs
add
inc
lcall
fiadds
int3
pop
pop
xchg
fisubrl
adc
fisubrs
adc
dec
pop
pop
fadds
xchg
jbe
outsl
add
add
sub
inc
out
xchg
mov
push
push
sub
fidivrs
inc
roll
sarl
fdivp
jno
cmp
and
pop
add
and
cmp
pop
ss
sbb
pusha
dec
pop
shlb
notb
dec
or
pop
xor
aaa
pop
inc
xchg
and
push
and
pop
push
imul
push
imul
mov
imul
hlt
fldt
mov
outsl
arpl
in
jecxz
mov
xlat
fs
jnp
push
add
xchg
addr16
xchg
mov
dec
cs
xor
rorb
push
cmp
lcall
cmpl
aad
in
gs
lahf
fwait
arpl
mov
fdivs
sub
push
or
cmp
sub
dec
fdivrp
inc
sbb
ret
daa
mov
xor
pop
pop
dec
adc
aaa
in
pop
xor
pushf
sbb
push
inc
sub
xlat
mov
mov
mov
fstpt
mov
xchg
mov
add
push
sbb
push
mov
mov
fistps
pop
into
loopne
lock
or
inc
adc
out
mov
test
add
frstor
ds
add
pop
inc
lret
mov
mov
sbb
mov
aam
inc
or
pop
adc
mov
into
adc
in
inc
popf
sahf
pop
imul
lea
xchg
mov
and
cmp
add
or
and
aas
std
andb
in
cmp
nop
pop
pushf
pop
insl
cltd
jl
sbb
pop
sub
fcoml
push
or
xor
push
lock
jl
mov
pop
ss
cmc
mov
push
and
inc
pop
push
and
repz
inc
push
pushf
cmpl
nop
aam
fs
mov
scas
mov
pop
pop
loopne
repnz
adc
add
negl
stos
aaa
lock
cs
xchg
xchg
sub
shll
adc
pop
iret
sbb
adc
test
fisttpll
adc
stos
cltd
cmp
adc
push
test
dec
and
add
jne
mov
inc
aad
pop
in
out
ss
popa
push
mov
movsl
and
cwtl
fdivs
repz
push
bnd
pop
dec
inc
jmp
push
mov
dec
cwtl
sub
stc
push
pop
leave
std
mov
scas
enter
xchg
jmp
xchg
loop
sete
insb
and
sti
sbb
or
fisubrs
mov
adc
adc
aam
sbbb
jp
cs
lahf
das
or
add
mov
cmp
mov
aas
lods
mov
sub
fbstp
divl
adc
mov
push
lods
stc
jne
cmpsb
loopne
stc
rcll
out
or
addr16
lret
fdivs
out
cs
scas
cmp
or
dec
mov
in
jbe
and
mov
loop
imul
mov
cmp
repz
inc
adc
scas
out
pop
pushf
pop
jo
xchg
add
inc
inc
lds
xor
pop
add
mov
or
into
push
adc
enter
ds
pop
xor
pop
and
adc
or
cwtl
lcall
jb
xor
adc
xchg
push
test
ffreep
les
or
push
and
sbb
stc
clc
clc
lds
ds
loopne
add
mov
lods
dec
mov
rcrl
arpl
cli
rorl
push
into
push
add
sbb
mov
cmp
pop
cwtl
sbb
mov
mov
sahf
fwait
cmp
adc
dec
xchg
std
add
push
dec
in
int3
sbb
nop
xchg
cmp
lret
lret
pop
xchg
popa
sub
mov
arpl
jmp
mov
push
or
or
pop
jmp
pop
inc
rep
xor
lahf
add
mov
add
add
sbb
adc
and
rorl
ss
dec
cmpsb
addl
imul
or
push
aam
dec
dec
sub
mov
and
adc
pop
adc
adc
cltd
lock
mov
ljmp
mov
shlb
lret
mov
jnp
sbb
insl
pusha
pop
mov
icebp
xchg
sahf
fwait
bnd
mov
pop
jno
pusha
or
out
outsb
iret
stos
cmc
xor
jg
shl
fcmovu
test
ljmp
popa
das
fwait
cmp
shrd
jnp
adc
jmp
je
cmp
repz
push
jl
out
cmpsl
and
dec
rcrb
insl
add
pop
or
pop
mov
adc
arpl
stos
dec
popa
and
mov
push
xor
pop
cmp
or
stos
xor
adc
add
push
jbe
int3
and
mov
popf
bound
mov
popf
push
pop
dec
clc
sub
lods
add
andl
pop
std
insl
in
gs
daa
push
lods
mov
mov
sub
mov
and
adc
adc
adc
fisttpl
pusha
lret
pop
and
inc
rcrl
lret
cmp
jae
jl
jmp
loope
fs
gs
nop
dec
rclb
mov
jne
push
lods
test
lcall
daa
push
insb
jg
lods
add
mov
xor
mov
jns
shl
add
cmp
or
sub
pop
dec
push
inc
xor
int
push
or
movsb
insl
imul
mov
imul
inc
add
inc
inc
xchg
arpl
cmp
in
iret
add
push
push
pop
inc
mov
cmp
adc
sub
lds
sarb
lods
jle
rolb
add
adc
fidivrs
lret
mov
sti
push
sbb
aas
mov
push
addr16
popf
fs
add
fs
outsb
jo
sbb
mov
jno
sub
xchg
lcall
aam
and
xchg
push
fsubl
fildl
mov
dec
sbb
mov
push
push
push
or
xor
pushf
push
push
data16
xchg
js
cld
cmp
out
dec
push
sub
push
std
sbb
subl
aad
or
xor
pop
push
and
and
add
mov
unpckhps
movsb
xchg
sbb
pop
fnstsw
sbb
mov
jle
sub
xor
pop
mov
or
roll
sub
jmp
daa
push
add
outsl
test
das
or
lahf
in
loop
jge
cli
ret
or
sub
xor
jmp
pop
add
and
adc
cmp
sti
icebp
sub
ss
daa
sbb
push
call
pushf
popa
or
push
and
je
or
cmpsb
dec
int3
out
call
xchg
jg
mov
fistpl
in
jg
and
fdivrs
lret
add
fs
inc
pop
mov
jo
mov
xor
hlt
sbb
sbb
imul
cmp
and
sub
mov
pop
ja
sbb
movlps
jge
mov
mov
jl
arpl
push
xchg
push
sbb
movsl
push
aaa
and
insl
sbb
lret
pop
cli
gs
rolb
pop
push
pop
xchg
add
rcll
es
loope
push
stos
push
mov
sbb
xor
or
mov
jmp
dec
popf
insb
xor
add
sub
add
dec
lods
pop
adc
push
ds
pop
lahf
xchg
sub
add
cltd
dec
mov
pushf
jg
cmp
pop
dec
jg
jae
cmovg
pop
adc
les
xor
pop
in
mov
inc
ficompl
insb
adc
stos
out
ds
je
lcall
mov
ja
dec
mov
cmp
lret
jl
push
popa
jb
jns
jge
lock
inc
lock
andb
lea
cs
sub
xchg
adc
jb
inc
stos
pop
push
cmp
lds
lods
scas
or
call
movsl
xchg
fiadds
test
dec
mov
adcl
je
xchg
out
movsb
and
fmull
xchg
lahf
adcb
xlat
sbb
xchg
or
in
xor
in
inc
push
adc
jo
jecxz
mov
les
bound
adcb
cltd
sub
jb
sbb
ds
mov
adc
adc
into
or
jg
cmp
pop
pop
dec
nop
mov
dec
xchg
mov
gs
ret
test
ret
mov
adc
and
sbb
jae
pusha
pop
add
jg
pusha
lret
push
ja
and
mov
add
loopne
adc
ds
inc
and
movsb
sbb
adc
outsb
fidivs
imul
push
pop
ret
sti
mov
out
into
xchg
psrad
inc
mov
mov
mov
cmp
xor
adc
mov
and
or
jl
outsb
adc
adc
movsl
sbb
xor
stos
inc
aad
cmpsb
xchg
pop
push
lahf
mov
bound
stos
xchg
add
xor
gs
pop
cmc
adc
mov
xlat
movsb
test
push
xchg
jg
lods
nop
repz
test
dec
dec
push
dec
js
cmp
sbb
xor
pusha
mov
and
fs
sbb
dec
xor
lcall
test
mov
jo
fsubrs
push
out
popf
cmp
data16
push
push
sub
mov
repnz
mov
aaa
mov
push
enter
sti
shrb
sub
in
sub
jae
into
xchg
dec
push
das
movsl
and
push
xchg
inc
and
mov
mov
mov
inc
sti
push
stos
fidivrl
mov
enter
icebp
lea
int3
in
xchg
push
out
xchg
lock
dec
and
scas
lret
add
dec
loopne
pusha
jl
dec
lret
loopne
mov
lea
test
in
pop
push
insb
xor
pop
orb
dec
repz
push
lahf
dec
mov
add
outsb
cmp
jne
jle
pop
sti
sub
fs
pop
test
cmp
and
je
or
xor
js
rorl
lahf
or
cmp
sub
lock
push
pop
insb
addr16
in
sbb
push
mov
out
cltd
es
xor
mov
inc
jmp
push
jl
dec
push
mov
pop
lods
xor
test
push
add
xchg
es
xchg
add
mov
sbb
pop
pop
inc
xchg
sbb
pusha
sbb
xor
push
pop
mov
push
or
cs
and
jnp
adc
xchg
or
sbb
test
fsts
pop
lock
or
push
inc
out
fstpl
mov
add
in
imul
mov
inc
pop
fidivrl
adc
in
sbb
and
dec
movsb
add
inc
std
mov
aas
subps
cmc
jae
dec
outsl
dec
jg
fdivrl
and
loop
cli
or
add
test
mov
repz
repz
add
les
xchg
out
pop
mov
loop
out
pushf
pusha
or
and
mov
push
add
out
shll
or
mov
cmp
adc
dec
imul
xchg
push
push
test
jl
inc
and
inc
or
lahf
test
mov
dec
aam
cmp
mov
cmp
push
daa
xor
js
add
push
xchg
mov
verr
pushf
dec
or
stos
xchg
mov
or
jmp
pop
or
mov
and
mov
add
cwtl
cmp
sahf
sbb
add
adc
pushf
dec
add
pop
lea
pop
insl
in
lret
lret
jmp
arpl
repnz
or
dec
dec
jae
mov
fcoml
dec
icebp
cmovno
gs
std
adc
lahf
xchg
popa
cmp
out
lret
or
out
cwtl
adc
sbbb
inc
pop
or
mov
mov
inc
fisubrl
pop
pop
cmp
stos
dec
rorb
inc
cs
add
mov
push
lahf
sahf
inc
lcall
repz
icebp
or
jl
aas
pop
fcomip
inc
mov
test
pop
and
or
bound
dec
dec
xchg
adcb
sbb
jmp
inc
push
sub
xchg
pop
dec
or
outsb
xchg
cmc
sub
or
add
sbb
mov
fdivs
ja
push
or
pop
sub
leave
xor
xor
mov
loope
rolb
sbb
jmp
dec
ds
fwait
dec
pop
add
push
xchg
repnz
pusha
jecxz
mov
lahf
js
or
jb
xor
inc
and
adc
cltd
test
dec
sahf
imul
sbb
outsb
sub
inc
sub
sarl
out
sbb
lea
mov
mov
test
pushf
fstpl
fs
dec
adc
or
fldl
fdivl
rcll
fdivrl
pop
adc
rcrb
imul
ss
sbb
xor
and
sbb
push
icebp
mov
aas
lahf
inc
lods
xor
or
mov
mov
add
ret
adc
cmp
dec
jmp
icebp
stos
add
test
dec
icebp
aaa
xchg
insb
iret
fiadds
aam
adc
mov
fmuls
into
jecxz
push
repz
rclb
jl
jo
movsb
ret
das
mov
pop
sbb
inc
cmp
pop
addr16
dec
in
sbb
dec
sbb
push
jae
subl
sub
or
sub
dec
aas
sbb
fldcw
inc
std
icebp
jecxz
adcb
add
ss
fiadds
jecxz
popf
lock
fcomip
or
sbb
icebp
dec
cmp
push
sbb
pop
imul
cltd
or
das
insb
push
jne
add
sbb
sbb
jmp
cmp
sub
jecxz
shl
dec
arpl
decl
push
js
addr16
mov
popf
mov
test
or
je
jno
cmpsb
jnp
or
int3
dec
or
lcall
mov
pop
aam
dec
test
movsl
inc
jle
cmp
pop
or
out
addb
leave
testb
cwtl
repz
and
dec
lods
das
lea
xchg
sbb
test
test
data16
pop
jecxz
dec
xlat
rorb
std
jp
xchg
mov
nop
pop
out
xchg
adc
std
push
pop
sbb
pop
push
or
or
mov
mov
lret
sbb
cmp
push
mov
fwait
push
or
sbb
push
adc
sti
push
ror
movsl
and
push
xor
addl
and
add
xor
push
clc
pop
mov
fwait
mov
inc
repz
xor
repnz
mov
jmp
jle
push
sub
adc
movsl
jo
je
rol
lcall
lcall
or
cs
js
jp
sbb
jge
xchg
enter
std
ret
movb
bnd
dec
mov
xchg
dec
push
call
xchg
call
loope
rolb
leave
ret
and
out
adc
mov
jno
add
pandn
pop
push
adc
mov
into
fcmove
and
int
add
mov
jo
or
jmp
shrl
repz
in
xchg
inc
sbb
xchg
cmpsw
jne
sbb
dec
push
clc
bsf
or
inc
and
setae
rolb
adc
mov
cmp
pushf
aas
push
pop
xchg
shr
cmc
add
insl
rcr
ret
mov
shrb
mov
xlat
fstpl
sahf
les
push
add
pop
cmpsl
inc
lea
cmp
fisttpl
fnstsw
mov
sti
out
arpl
pop
mov
es
adc
push
push
rolb
add
mov
leave
xor
aas
scas
in
pop
test
xchg
adc
mov
xor
pop
and
sub
pop
and
dec
mulb
fwait
sbb
add
cmp
ljmp
rcrb
fsts
loope
pop
sahf
fsubl
inc
jb
ss
mov
outsb
leave
cmpsb
dec
adc
cmp
xor
fisttpll
and
or
lret
jmp
insl
jno
shrl
ljmp
and
cmp
aaa
call
lcall
aad
mov
xchg
lahf
inc
popa
add
adc
mov
fldt
push
cmp
mov
into
arpl
aam
add
testb
leave
and
dec
xor
or
mov
rcll
inc
incb
movb
xchg
ret
or
pop
dec
sbb
jne
rol
lahf
lea
hlt
les
sub
mull
insb
push
ds
bound
push
pop
inc
pop
push
inc
inc
arpl
mov
lock
pop
fimuls
inc
jl
xor
imul
test
ss
je
sub
push
pop
add
sbb
cmp
lcall
cwtl
jne
and
leave
fs
ret
add
add
stos
cmc
fwait
push
lcall
and
fldl
lret
out
push
dec
cwtl
fs
mov
lods
mov
jle
pusha
mov
bound
lock
pop
pop
and
lods
sbb
push
cmp
sbb
mov
xor
popf
popa
add
and
mov
and
adc
shr
cmpb
sub
fwait
ret
and
ss
or
ljmp
inc
dec
mov
xor
sbb
sbb
out
dec
cmp
sbb
pushf
mov
xchg
loop
pop
sbb
int
add
push
insl
cmp
fcoml
mov
or
pop
mov
dec
das
in
in
jecxz
and
or
popa
xchg
pop
insl
cs
stos
xor
mov
nop
or
pop
cmpsl
mov
mov
mov
sbb
add
test
mov
fucomi
incl
dec
lret
xchg
or
adc
bound
push
repz
cmpsb
jmp
test
jo
xlat
int3
pop
mov
ja
pop
adc
add
sbb
cmp
out
es
or
or
mov
gs
in
movsb
adc
jecxz
pop
lea
lahf
sub
dec
repz
ljmp
adc
es
push
mov
lret
sbb
xor
outsb
lret
adc
ja
cmp
imul
mov
pop
dec
inc
fiaddl
sbb
icebp
inc
or
sbb
push
push
addr16
mov
or
out
scas
dec
gs
scas
jmp
fwait
lret
cmp
push
push
push
sub
cmpsl
xchg
out
sub
mov
push
test
sbb
pop
mov
lret
cmp
push
fsubrs
xchg
shll
leave
pop
mov
push
sbb
sub
gs
adc
push
mov
out
notl
inc
mov
adc
mov
mov
pop
push
arpl
xchg
push
pop
xchg
and
jecxz
aad
jecxz
dec
in
and
cmp
adc
adc
inc
fbstp
lahf
sub
arpl
outsl
add
fsubrs
adc
add
or
lcall
and
je
mov
mov
adc
popa
jo
jp
add
dec
xchg
xchg
ss
addr16
stc
pop
sbb
jae
push
out
push
xchg
add
pop
dec
push
mov
sub
pop
xor
and
push
jge
scas
push
or
aaa
inc
cwtl
dec
fadds
lock
adc
das
sbb
jne
xorb
sbb
xchg
int3
mov
test
or
pop
xor
cmp
mov
das
test
test
ret
lea
jo
popa
add
jmp
popf
ds
push
pop
sahf
push
push
popa
dec
jl
or
sub
sbb
repz
adc
inc
push
mov
dec
inc
clc
push
dec
mov
sbb
and
gs
jbe
xchg
xchg
xor
dec
adc
in
adc
leave
mov
cmp
or
cmp
icebp
add
jp
into
sub
fbld
mov
push
sahf
stc
and
in
sub
jmp
add
push
jg
mov
adc
cmp
stos
or
nop
xchg
and
mov
adc
ficomps
cwtl
mov
and
or
pop
scas
adc
or
jbe
das
bound
jg
inc
ss
add
or
fistl
cmp
push
cmc
pop
add
call
cmp
xchg
xchg
mov
xor
or
adc
cmp
or
adc
pop
cltd
in
sub
lret
xor
cmp
or
cmc
cld
imul
adc
xchg
pop
fistl
pushf
adc
jno
xchg
jae
sbb
fcoml
sbb
adc
adc
xor
push
notl
insb
aad
adc
dec
xchg
pop
xchg
jecxz
push
repnz
push
lret
aaa
cmc
add
pop
enter
in
inc
xchg
jb
add
and
data16
inc
add
popf
pop
lret
ficompl
repnz
lds
dec
and
xchg
loop
insl
jnp
repnz
push
push
adc
add
jmp
jo
xchg
sbb
nop
add
pushf
and
adc
nop
imul
push
insl
aam
arpl
int3
add
pop
push
or
sub
pop
insb
and
imul
cmp
ret
mull
fisubl
mov
or
dec
inc
mov
and
data16
xor
jge
mov
jl
jge
inc
jno
fisubrs
adc
push
push
mov
nop
arpl
fnsave
rorb
mov
leave
test
push
into
mov
fwait
loopne
int3
jp
xor
pop
cmpsl
mov
adc
out
pop
jp
pop
fistps
dec
xor
mov
push
lods
ret
outsb
jnp
or
adc
inc
jge
les
pop
aaa
push
xchg
sahf
loopne
and
jo
jl
scas
in
repz
adc
mov
fwait
call
mov
dec
pop
pop
jp
andb
jecxz
sub
mov
mov
xchg
test
int
dec
mov
scas
jns
dec
movb
xor
xchg
adc
and
mov
popa
push
push
or
jmp
add
repz
es
inc
dec
push
jle
rcrb
or
adc
cmp
dec
mov
mov
loop
mov
cmp
and
adc
in
jb
loop
lret
insl
push
mov
mov
jb
inc
ljmp
or
cmp
fcomip
int3
cmp
cmp
ss
jg
xchg
mov
lock
adc
pop
in
fcmovb
fstpl
dec
es
add
pop
lret
jecxz
or
mov
lock
push
cmpsb
mulb
xlat
mov
gs
dec
pop
jl
mov
xorb
and
daa
cwtl
dec
popf
add
mov
jmp
xor
jnp
pop
outsb
cmp
jae
cmp
push
add
inc
out
popf
aas
and
jo
push
pop
xor
movsl
lds
mov
inc
jno
arpl
mov
into
add
test
adc
test
sbb
or
loop
mov
adc
adc
lds
pop
cltd
rcll
push
icebp
pop
stos
mov
mov
dec
push
sub
or
aas
push
cmp
mov
lea
aad
cmp
test
pop
scas
jns
lret
pushf
jo
mov
xchg
and
enter
test
or
lds
inc
lret
xchg
sahf
imul
ja
enter
and
xchg
add
cmp
xchg
loop
repnz
out
outsl
ss
or
stos
jno
push
lods
and
sub
mov
cwtl
fstpl
ljmp
imul
inc
mov
add
push
sbb
aaa
add
pop
xor
xchg
push
pusha
sub
adc
cmp
lock
xor
add
or
ds
sbb
pop
daa
fsubrs
sub
cli
mov
mov
mov
dec
jns
dec
pusha
mov
mov
jg
sub
cmp
push
sub
imul
cmp
sbb
mov
jae
aas
add
cmp
lahf
jbe
stos
clc
jo
lret
or
inc
push
popf
jmp
bnd
sub
sbb
xchg
mov
pop
fwait
sbb
push
push
imul
mov
cltd
shl
add
stos
shrl
cmp
mov
loopne
push
push
jns
add
cmp
xor
or
rcrb
or
daa
stc
mov
dec
lcall
xorb
mov
jle
daa
jbe
xchg
or
jb
push
mov
adc
or
pop
pop
cmp
sub
xchg
fimuls
call
aam
push
sub
jl
push
mov
repnz
imul
push
pop
inc
sub
fisttps
mov
dec
enter
repnz
sub
adc
lock
push
adc
fisttps
sub
lcall
xor
sub
pop
pop
sbb
aaa
decl
cmp
test
negl
mov
mov
cli
sbb
scas
and
dec
mov
les
std
mov
ja
adc
mov
xor
mov
push
rcl
add
es
das
or
outsb
fs
arpl
push
mov
in
data16
inc
adc
lret
out
popa
push
imul
sbb
inc
ds
jae
and
sub
lret
lahf
inc
aad
sbb
cmp
fdiv
mov
jp
add
push
jne
pop
or
cmp
inc
rol
invlpg
cmc
xchg
cmpsl
push
jmp
insl
jo
or
adc
cld
dec
dec
jo
fldt
sub
fistpll
adc
inc
mov
sbb
pusha
cmp
mov
mov
adc
dec
jne
push
pop
xor
sub
pop
cmp
dec
cmp
mov
repnz
push
cmp
pop
mov
pushf
push
sar
sbb
outsb
pop
or
mov
lds
pushf
push
inc
aas
stos
rolb
jns
pop
mov
add
repz
xchg
in
mov
or
lea
mov
rorl
pop
out
and
insb
add
sub
sbb
pop
pop
pop
xchg
pop
push
cmc
inc
or
inc
lock
and
lret
inc
or
adc
fnstenv
xchg
jae
ds
pop
and
sbb
inc
ljmp
pop
sbb
cmp
out
xchg
or
jne
push
sub
fidivl
lahf
mov
dec
fisttpl
pop
mov
popf
nop
iret
jge
ret
xchg
cmp
add
int3
xchg
cmp
mov
cmc
subl
rol
add
mov
xchg
or
dec
fucomip
cmp
out
push
fucomi
jo
push
or
js
inc
or
push
cmpsb
push
lret
rorb
xor
sahf
mov
mov
repnz
adc
ja
sbb
pushf
js
add
cmp
xor
push
pusha
or
pushf
cmp
ljmp
lcall
aam
ss
dec
push
notb
adc
jnp
fbld
pushf
ds
leave
orl
adc
dec
pop
cmp
dec
mov
xor
push
inc
adc
jecxz
into
sti
aaa
andb
ss
xchg
nop
push
pop
cmp
inc
sub
orb
inc
or
sahf
pop
clc
fwait
popl
cwtl
cmp
incl
test
inc
lods
mov
xchg
inc
or
shl
ljmp
js
inc
sbb
push
cmp
notl
sub
divl
push
xchg
mov
xchg
scas
sbb
jg
dec
stos
dec
cwtl
cs
std
and
mov
stos
xor
cmp
push
xchg
lods
dec
pop
add
cmp
call
mov
add
adc
movsb
sub
sbb
push
xor
es
adc
bt
outsl
sub
mull
cmpsb
mov
push
outsb
sbb
inc
sub
push
leave
xor
adc
das
sbb
push
sub
lret
and
shlb
dec
iret
mov
dec
incl
pop
inc
sub
adcl
cltd
sbb
clc
cmp
imul
iret
mov
and
mov
or
pop
xchg
and
xrelease
xchg
or
aaa
push
sub
setae
xor
aad
iret
cmpsb
and
xchg
loope
cmp
pop
jmp
or
cmp
fwait
xor
idiv
rorb
daa
sub
add
stos
popf
outsl
jno
inc
lret
add
lock
mov
xor
out
cltd
pusha
sbb
dec
mov
mov
pop
cmp
pop
mov
xchg
movsl
xor
mov
in
or
int3
dec
dec
dec
jge
push
or
shl
xchg
dec
mov
xchg
pop
mov
sub
cmp
sbb
fimull
xchg
cmp
mov
jmp
push
dec
adc
push
cld
add
sub
cmp
jle
add
and
stc
js
rorb
adc
call
push
out
out
jae
dec
std
pop
or
add
or
and
push
xor
loopne
and
cmp
and
adc
pop
andb
inc
cmp
add
call
insb
lahf
call
jmp
leave
pop
scas
sub
sbb
cmp
dec
inc
sbb
mov
loop
xlat
add
mov
or
sahf
pop
xchg
xor
fs
jl
add
pushf
inc
xor
add
or
jae
mov
sub
daa
pop
xchg
dec
inc
dec
stos
jl
lret
mov
dec
rcrb
or
xchg
or
push
or
jle
mov
pusha
or
je
push
iret
lcall
movups
fists
in
sbb
xchg
daa
cmp
mov
adc
jo
adc
jo
fstpl
lock
cmp
rorl
pop
dec
xchg
lea
outsb
push
push
sbb
ja
push
jno
jge
bound
outsb
pop
dec
sub
jmp
insl
sahf
and
sub
add
sub
outsl
out
and
test
clc
jo
xchg
std
cmpsb
jecxz
xor
sahf
mov
lret
or
push
and
out
mov
mov
test
dec
add
mov
add
stos
rol
rcrl
sub
shlb
adc
cmp
xlat
hlt
pusha
pop
and
fcomps
fimull
or
pop
dec
shll
adc
inc
sahf
dec
lahf
mov
mov
in
cwtl
cmp
mov
mov
enter
pop
sub
lock
sbb
insl
insl
popa
pushf
test
push
out
call
filds
out
mov
das
add
mov
lret
add
mov
fdivrs
jg
sub
lds
push
ljmp
aaa
fildll
lret
imul
push
jbe
mov
xchg
jno
jmp
dec
push
cmp
cltd
fadds
test
jnp
jnp
cltd
mul
cmp
cwtl
shl
lock
xchg
push
out
call
lcall
call
pop
iret
jne
scas
dec
pusha
popa
mov
sbb
rorl
movsb
pop
lock
out
repz
out
mov
xchg
cld
lods
popf
outsb
nop
cmp
mov
xchg
mov
xchg
imul
pop
negl
daa
outsb
call
mov
aas
pop
in
adc
cld
adc
push
arpl
mov
mov
lods
subb
mov
mov
hlt
pop
xor
mov
mov
sub
test
fildl
imul
leave
ret
scas
cmp
cmp
pop
xchg
xchg
and
into
int
cmpsb
popf
mov
ret
fcmovbe
les
push
cmp
jmp
pop
sub
jg
and
aas
cmp
nop
inc
sub
dec
adc
fisubrs
je
iret
lret
je
test
pop
shll
test
adc
dec
leave
push
ja
mov
sbb
sub
pop
xor
cmc
ljmp
out
fdivr
cmp
rorb
rcrb
xor
in
push
adc
shr
pop
adc
sub
cmp
call
jmp
mov
ds
lock
push
pushf
push
jmp
jae
fisubrl
sbb
xchg
xchg
push
pop
in
pop
out
daa
adc
cmp
jno
sbb
sbb
push
jne
add
sub
popf
dec
or
push
inc
or
pusha
or
enter
cmp
adc
jl
adc
lods
jle
mov
jmp
push
push
cmp
xor
cmp
cmp
lret
sbb
rol
jae
xor
inc
pop
andl
xor
aaa
shrl
adc
push
ret
mov
sub
sub
shlb
push
das
sub
adc
pop
bt
add
jge
inc
adc
stos
or
push
push
push
int
add
jg
fisttpll
jg
mov
sbbb
addb
xor
jle
mov
inc
jmp
cmp
jnp
push
in
jg
xchg
insl
cmp
fidivs
data16
jae
and
daa
jge
pop
jnp
test
in
mov
jnp
jg
fidivl
stc
add
imulb
popf
and
mov
aaa
or
test
sti
sbb
out
bound
push
movsl
cmpsl
push
rorl
and
and
push
stc
sub
fs
and
cwtl
fsincos
adc
sti
sub
arpl
add
xorb
cmp
fisubrs
roll
aas
pextrw
loop
xor
ds
aaa
shl
jmp
es
ficomps
repz
push
stos
out
arpl
xor
jle
dec
xor
xchg
pop
xor
ficompl
add
pushf
lods
mov
dec
cmc
xchg
sbb
dec
repz
daa
jnp
dec
int3
daa
push
jae
outsb
sbb
out
mov
mov
shlb
mov
aad
pop
xchg
outsl
lahf
sbb
popf
sbb
xchg
cs
inc
mov
pop
sar
lret
and
sti
cli
imul
push
imul
push
test
pop
daa
and
xchg
or
pop
repz
loop
sarb
push
mov
push
inc
dec
push
jno
popf
lock
mov
mov
jne
nop
mov
stos
fmulp
xchg
pusha
and
adc
jg
std
hlt
jg
jl
hlt
mov
ljmp
jge
test
jnp
out
xchg
gs
jb
inc
sbb
ficoms
loop
stos
fsubrl
imul
xor
jg
push
scas
sbb
push
outsb
add
jmp
push
dec
adc
nop
push
sti
inc
das
dec
mov
sbb
inc
adc
push
add
sbb
shl
scas
mov
cmc
push
jo
push
mov
xlat
negb
mov
mov
inc
fcoms
stos
mov
adc
adc
sub
push
pop
sub
mov
iret
aas
cmpsl
fimuls
ficoml
js
call
stos
enter
add
cmpsb
iret
dec
adcl
add
xchg
push
jp
inc
loopne
bound
cs
out
cmp
adc
ffree
cli
adc
nop
lods
icebp
xchg
mov
lahf
into
in
xchg
outsl
loop
in
jns
push
dec
cmp
pop
sbb
or
dec
fxch
cmp
and
mov
mov
jmp
push
insb
stos
gs
bound
stc
pusha
jmp
pop
xor
punpcklbw
dec
sahf
es
inc
pop
and
addl
lock
sarb
cmp
or
ss
loope
or
movsl
sbb
or
xor
paddsw
outsl
ds
push
sbb
call
popf
addl
jb
sub
add
push
xchg
ficomps
js
adc
fdivs
test
inc
scas
scas
sbb
inc
sbb
dec
pop
or
ljmp
iret
mov
jmp
in
fbld
scas
adc
add
mov
or
inc
xchg
mov
in
cmp
loop
cwtl
repz
push
push
gs
pop
xchg
mov
sub
or
xchg
pop
xorl
adc
add
xor
and
repnz
jmp
mov
nop
shll
dec
imul
cmpsb
outsl
jg
cmp
cmp
es
cmp
out
pop
and
sbb
add
or
rorb
dec
pop
push
adc
pop
xchg
fwait
dec
icebp
pushf
orl
add
cmp
icebp
ds
dec
dec
and
cmp
std
fsubr
das
inc
movsl
aas
outsl
push
dec
repnz
imul
dec
or
addr16
fwait
stos
sbb
adc
push
int3
lcall
pop
adc
aad
push
dec
xor
cmp
inc
pop
sbb
shrb
pop
and
pop
daa
or
dec
stos
push
mov
cmp
fcoml
dec
dec
cmp
xor
outsb
sub
inc
dec
dec
nop
or
mov
inc
jnp
out
sbb
leave
mov
mov
mov
mov
popf
fmuls
pop
les
dec
adc
xchg
jbe
sti
sarl
lret
pop
pop
mov
sbbl
jno
imul
or
push
test
mov
dec
add
imul
sarb
lods
sti
push
jae
arpl
das
or
or
jg
mov
inc
dec
leave
pop
sbb
fsubr
mov
lock
sbb
adc
mov
xchg
lret
fbstp
xchg
ret
dec
jge
cmp
nop
fs
in
xor
jg
decl
dec
sub
movsbl
lret
xor
ret
inc
lahf
in
sbb
pushl
and
lock
andb
mov
cmp
push
cltd
mov
mov
fidivs
repnz
cmc
jno
adc
push
push
cmpsl
add
cmp
mov
decl
sbbb
pop
or
adc
and
add
nop
xor
pusha
dec
xchg
aam
test
xor
test
push
and
shr
inc
dec
fistpl
or
push
mov
push
out
jb
mov
xchg
mov
andl
push
ficompl
dec
pop
push
lds
pop
cli
dec
push
lock
jo
adcb
push
dec
sbb
cmp
pop
gs
outsb
mov
mov
mov
jo
mov
xor
mov
or
pop
fistl
cwtl
out
push
add
outsb
pop
pop
mov
stos
subb
scas
test
sbb
hlt
add
or
insb
mov
fdivr
pop
mov
popl
aam
fistps
repz
ja
int3
cltd
sub
cltd
fwait
adc
push
lods
or
rorl
je
fimull
adc
and
inc
mov
adc
je
cmp
jle
aad
loopne
cltd
and
subl
test
jmp
push
pop
xor
push
cs
test
fsts
dec
inc
xchg
fcmovbe
adc
mov
icebp
hlt
mov
push
mov
cmp
xor
adc
inc
mov
loopne
inc
cmp
mov
and
int
xchg
adc
push
mulb
negb
js
add
out
adc
fsts
xchg
mov
sbb
xor
fldenv
nop
mov
sbb
push
dec
mov
cmp
xor
pop
and
in
pop
jo
add
inc
sti
pop
sub
pusha
mov
xor
add
rcll
icebp
test
xchg
aam
mov
pushf
inc
jo
xchg
xchg
xchg
sbb
lods
jmp
push
inc
mov
sbb
pop
sbb
push
cmp
jne
add
xor
pop
sbb
pop
lods
cmp
nop
push
fnsave
dec
jb
cmp
dec
lock
das
shll
sub
xor
xor
push
sbb
pushf
rcr
jae
pop
xor
js
cmp
mov
add
adc
or
dec
cmp
sbb
and
pop
mov
shll
movl
aam
jle
mov
fnstcw
cmc
fldenv
cmp
ret
add
pop
xor
pushl
inc
and
push
clc
lock
jl
scas
and
pop
or
into
sbb
js
jnp
dec
or
movsl
shlb
icebp
xchg
jne
push
test
iret
xchg
sarl
jg
xor
jno
pop
xorb
int
ds
sti
stos
mov
pmaxsw
or
ds
push
pop
inc
mov
into
xchg
jg
or
ret
ja
push
cmp
fwait
outsl
xchg
add
ss
aam
fwait
scas
fwait
push
adc
dec
push
cmc
cli
enter
les
sbb
outsl
jno
adc
mov
ljmp
loop
in
xchg
bound
out
imul
and
adc
jne
rcrb
pusha
call
jbe
call
cmp
or
inc
xor
cmp
pop
push
mov
jnp
jmp
xor
mov
je
cli
push
in
dec
decl
shrb
in
jle
mov
add
adc
rcll
pop
pop
out
lods
aas
repnz
inc
xor
mov
inc
or
sahf
dec
rorl
and
mov
mov
int
or
arpl
inc
fisttps
out
enter
inc
cmpsb
lock
and
push
std
std
mov
pop
pop
ljmp
dec
jle
and
sti
and
push
mov
mov
imul
xor
xchg
sub
mov
mov
hlt
xor
stos
push
ret
sbb
inc
rcll
lret
dec
loope
and
fsubs
cwtl
clc
insb
jne
mov
jne
pop
push
and
add
push
in
int3
orl
pop
out
mov
and
sbb
sbb
mov
lcall
sub
decl
jbe
cwtl
cli
cltd
and
popa
mov
jmp
sub
push
xchg
insw
push
mov
xchg
cmp
scas
cmp
int
rorb
pop
mov
fisubl
push
mov
call
jmp
sbb
xchg
pop
sbb
clc
push
inc
jg
cmp
pop
push
sahf
fdivrp
pop
movsl
int
push
adc
or
mov
sti
cmp
mov
out
or
xorb
imul
jmp
shlb
jbe
idiv
pop
pop
and
push
push
add
pop
sbb
and
std
jmp
cmp
jae
or
push
aaa
cmpsl
pop
bound
add
sub
push
pop
pushf
or
sub
push
pop
jmp
fcoms
pop
decl
mov
cwtl
rcll
adc
imul
and
xor
pop
mov
push
jge
ds
adc
jb
lods
mov
loope
lahf
xchg
dec
loopne
jg
cltd
lds
dec
xor
jg
add
push
repnz
popf
test
push
aas
xchg
aam
pusha
stos
movq
sub
xchg
jl
lret
push
cld
xor
and
pop
sbb
rorb
jno
or
aaa
out
aaa
ds
repz
mov
mov
ficoms
add
add
push
xor
or
arpl
aas
cmp
mov
je
pop
inc
cmpsl
mov
rcr
sub
fmuls
sarl
mov
rep
outsl
nop
cwtl
or
mov
or
ss
mov
dec
pushf
mov
cmp
mov
lcall
sbb
or
cmp
mov
fincstp
std
ljmp
cltd
jg
cmp
pop
xlat
and
jecxz
orl
daa
aam
pop
sub
outsl
jp
push
or
fists
jge
adc
mov
fwait
sub
mov
fisubl
sti
loope
or
push
les
mov
icebp
xchg
ret
add
mov
repz
inc
stos
mov
aad
inc
or
in
fdivrl
dec
out
ret
pushl
addr16
mov
arpl
push
jnp
rclb
aaa
xor
mov
lds
idivb
int
mov
sub
insl
mov
mov
xchg
les
inc
adc
sbb
popf
insl
adc
loopne
sub
lcall
dec
xchg
dec
push
push
xchg
movsb
ficompl
pop
inc
or
inc
rorb
mov
pop
adc
inc
shll
lock
lret
cltd
call
cmp
push
stos
pop
cmpb
and
adc
sub
dec
shlb
adc
repz
sti
dec
mov
repnz
stos
negb
ret
adc
sbb
sbb
xchg
adc
add
and
push
ss
pusha
inc
cmp
aad
jp
fcomps
add
in
jl
into
lret
and
dec
loopne
movsb
inc
push
adc
or
and
loop
incb
mov
add
xlat
sub
xchg
mov
insb
push
out
mov
pop
lods
lock
aaa
sub
and
decb
adc
fs
popf
int
popl
lret
add
push
sbb
push
out
es
mov
test
dec
inc
in
mov
ja
pop
out
cmc
shrb
hlt
inc
pand
cmp
sub
adc
xor
cmpb
outsl
cmc
fisttpll
or
jl
add
xor
shrl
stos
aas
cmp
cmp
jge
shl
ds
int
cwtl
pop
aaa
or
xchg
repz
loop
js
movsb
in
shll
cltd
cmp
inc
rorl
pop
push
test
daa
lea
jae
and
mov
lods
cmp
fisubs
push
mov
repz
jo
jecxz
mov
adc
cmp
movsb
ret
cwtl
scas
dec
sbb
nop
scas
mov
cmp
pop
adc
repnz
dec
cmpsl
fsts
sahf
xor
mov
mov
pop
testl
or
mov
or
movsl
and
and
xchg
or
gs
jns
loop
jl
pop
cmp
push
pop
xchg
cmp
pop
int
push
jno
add
or
jmp
xlat
pusha
pop
and
test
adc
dec
or
jg
push
cs
push
dec
loopne
arpl
sbbl
push
dec
and
dec
inc
xchg
shl
or
xor
or
xor
xchg
cld
inc
outsb
sub
scas
fildl
stos
xor
cmp
out
ljmpw
cltd
iret
call
add
fdiv
out
jno
or
mov
sub
push
pop
push
int
ret
inc
lock
enter
repnz
inc
jnp
dec
fiadds
push
jns
or
outsl
movsb
xchg
mulb
gs
xor
xor
out
sbb
movsl
daa
sbb
hlt
mov
fistl
loope
mov
push
pusha
pop
cltd
pusha
xchg
pop
sbb
and
insb
bound
fwait
or
in
push
jl
ret
repz
pop
jo
jno
stc
loope
cmp
mov
xor
daa
mov
or
cmp
sbb
int3
es
xor
mov
push
xor
sub
dec
mov
sarb
or
stos
adc
sub
movsb
fcompl
sub
or
in
dec
or
ljmp
call
movsl
orb
cwtl
fstpl
pop
mov
xchg
repnz
sahf
mov
imulb
and
lods
push
pop
sub
in
fcmovu
dec
pop
sub
xor
mov
jne
push
sbb
sbb
add
fisttps
aam
mov
xor
mov
jg
pop
rcrb
adc
out
adc
mov
in
cli
ja
jo
xor
mov
mov
dec
lcall
xchg
loopne
sub
mov
icebp
xor
loopne
pop
outsb
out
popf
popf
stos
adc
inc
push
out
pop
gs
vpaddsw
mov
jns
dec
subb
xor
adc
orb
cmp
mov
adc
adcl
xor
pop
ss
jp,pn
mov
das
das
xchg
add
xchg
jo
mov
repz
jnp
daa
sub
fs
lcall
sub
push
xchg
inc
out
sub
add
adc
pop
jmp
loop
cltd
dec
cmpsl
dec
icebp
mov
int
add
xchg
cmpsl
in
test
sti
enter
vpsubw
insl
mov
lods
testb
cmp
mov
iret
mov
loop
pop
xor
in
fisttpl
pop
outsb
mov
push
lret
dec
dec
sub
repz
and
adc
mov
add
xchg
popa
xchg
and
pop
in
or
inc
pop
decl
test
roll
jle,pt
mov
push
sbbl
mov
mov
xor
repnz
xor
xchg
adc
push
aaa
xor
mov
dec
xchg
jg
inc
std
mov
adc
in
mov
lea
pop
dec
pop
aad
fucomi
and
mov
push
add
pushf
f2xm1
rcrb
or
pop
dec
inc
add
loop
sahf
scas
push
or
scas
add
mov
pop
push
dec
lods
jns
mov
cmp
sarl
repnz
push
mov
adc
imul
inc
adc
cmp
roll
add
and
sub
cli
pop
inc
cmpsl
jp
push
cwtl
idiv
loop
pop
ljmp
movsl
and
cltd
xor
or
rclb
or
push
or
sbb
sbb
sbb
cmp
sbb
mov
sbb
cmp
ret
pop
adcb
sub
call
ret
aas
lahf
xor
pushf
in
jecxz
push
mov
add
and
int3
mov
xchg
lahf
add
stos
cmc
jl
push
push
and
sub
enter
popf
cmp
inc
cli
push
sbb
dec
sbb
jmp
fwait
pushw
fimuls
lret
cmp
stos
add
in
pop
xor
ljmp
and
push
rorb
xor
and
sbb
xor
jle
push
dec
sti
sbb
or
jle
outsb
pop
xor
test
pop
call
insb
pop
fmuls
out
repz
or
stos
scas
insb
inc
hlt
xchg
lcall
aaa
push
xchg
sarb
or
bound
mov
xchg
add
push
cmp
push
mov
outsb
sbb
mov
add
lock
xchg
scas
lahf
sarl
push
sbb
les
rorl
mov
fisttpl
jl
push
fwait
jl
imul
and
enter
ret
popf
mov
ret
mov
rol
dec
pop
adc
sbb
push
pop
arpl
test
mov
push
repz
les
inc
cli
out
inc
mov
inc
test
jae
push
and
mov
gs
lock
roll
adc
pop
pop
xchg
mov
clc
sahf
les
dec
icebp
mov
cld
sub
loop
xor
lods
loop
or
or
jb
sarb
add
inc
cmp
fst
lock
cmpb
push
cmp
push
xor
add
dec
ret
jecxz
inc
inc
daa
jno
or
fimuls
xchg
ljmp
neg
clc
pushl
cs
and
test
call
shrb
enter
cmp
push
fnstsw
push
aas
js
idiv
and
test
lret
mov
xchg
testb
add
enter
aaa
in
pop
outsl
mov
test
ljmp
in
pop
cmp
vmovlps
mov
pop
sbb
pop
sub
repz
push
sbb
jno
jge
dec
aaa
mov
and
filds
in
push
fwait
xchg
stc
pop
and
cmp
pop
jae
dec
dec
lods
cs
into
pop
xchg
pop
jmp
mov
pop
inc
lock
cmp
and
jecxz
lret
mov
pop
cwtl
xor
add
stos
ret
push
adc
pusha
popf
and
ds
fcoml
stc
nop
pop
pop
sbb
jecxz
neg
repz
cli
mov
std
push
movb
int
push
aad
dec
sti
sub
mov
sti
xchg
aaa
pop
and
push
jno
push
jle
fcompl
adc
pop
push
jne
adc
or
subl
in
sbb
movsl
mov
into
int
lahf
sbb
mov
bound
xor
cmp
xor
adc
ss
xchg
mov
mov
or
gs
cmp
push
pop
pop
cs
or
xor
lods
loop
mov
dec
out
push
scas
out
and
lret
notl
test
mov
push
xor
jb
ja
pop
xlat
add
jle
imul
repz
out
loop
add
and
leave
or
sub
cmp
and
xor
data16
call
jno
jecxz
arpl
loope
sarb
adc
xchg
inc
jns
cwtl
or
repnz
sahf
into
stos
mov
xor
std
or
mov
ds
sbb
scas
sahf
enter
imul
push
repz
mov
push
outsb
push
movsb
roll
insl
movb
fsubrl
adc
aaa
aas
sbb
adc
or
loopne
sub
xor
adc
pop
ds
adc
pop
sbb
filds
push
sbb
push
sub
mov
pop
or
sbb
call
xchg
pop
push
jne
jmp
jle
sbb
xchg
cmpsl
adcb
xchg
dec
ljmp
pop
mov
add
out
pop
xor
test
leave
nop
sarl
in
xchg
in
pop
cli
cmp
repz
leave
cmp
sti
movsl
or
inc
cmp
sarb
movsb
add
in
in
mov
xlat
sub
sbb
xchg
or
cmc
movsb
mov
popa
cmc
sbb
loop
mov
notl
into
mov
cld
inc
lcall
inc
lahf
insb
outsb
mov
xchg
add
lock
fwait
push
sbb
shlb
add
mov
and
dec
xchg
and
fmuls
pop
sbb
pop
dec
xor
cwtl
aas
ljmp
outsl
adc
lock
popf
pop
inc
pop
jg
cmp
mov
ja
fwait
aaa
daa
adc
or
sahf
add
ret
jo
cmp
cmp
nop
pop
in
fadds
fadd
cmp
add
ret
or
es
test
cs
pop
inc
test
pop
sbb
shll
pop
or
push
jo
add
adc
mov
imul
xchg
or
sbb
mov
push
or
jle
sub
pop
test
jg,pn
andb
and
jo
push
sub
mov
and
rclb
jle
xor
or
jnp
push
jge
jnp
pop
stos
sahf
pop
adc
imul
adcb
pop
inc
pop
dec
fs
push
pop
sarl
pop
xchg
fcoms
mov
cmp
sub
mov
inc
daa
outsl
pop
aas
sbb
test
sub
movsl
jge
cmp
mov
les
outsb
add
aaa
les
pop
rcrl
aas
push
xor
inc
push
or
mov
or
cmpsl
cs
orb
push
popf
pop
or
lea
fcompl
add
les
adc
test
cmp
xor
push
push
fidivrs
or
out
int3
mov
push
push
mov
push
mov
mov
inc
pop
xlat
sbb
out
xor
dec
xchg
cmp
xor
pushf
cmp
mov
pop
fimuls
lods
in
inc
mov
adc
dec
cmp
add
jmp
inc
jae
dec
dec
adc
out
xchg
and
pop
ret
jge
dec
scas
popa
stos
repz
pop
inc
sbb
cmpsb
dec
or
push
clc
push
mov
lds
sti
sti
sub
lret
add
inc
repz
lock
adc
pop
insb
rclb
cmpsb
test
jne
fs
out
mov
setne
insl
sub
push
fcmovbe
test
xchg
adc
ds
outsl
push
sbb
push
lock
js
cmp
rorb
pop
xchg
or
inc
or
jle
mov
cmp
cmp
out
fxam
mov
dec
test
enter
fcompl
int
test
push
xchg
push
out
or
push
hlt
lcall
jle
insb
inc
adc
stos
cltd
pop
scas
sbb
pop
xchg
dec
pop
push
mov
iret
add
inc
into
xchg
repz
repz
adc
lcall
pop
xchg
mov
jno
repz
and
pop
or
fsubrl
addr16
jne
sub
push
repz
pop
cmpsb
rep
stc
lea
shll
jl
xor
or
cmp
out
inc
std
rorb
sub
dec
xchg
out
lcall
call
mov
std
cmp
and
adc
inc
pop
and
xor
sbb
pop
into
in
outsl
or
xor
cmp
push
je
or
repnz
sub
out
rep
scas
fidivs
adc
out
mov
cmp
in
mov
push
sbb
fpatan
adc
out
and
push
jno
shlb
inc
repz
pop
data16
ret
sbb
jl
std
roll
rorl
idivb
insb
icebp
mov
cwtl
mov
pop
std
int
shrb
std
xor
adc
mov
adc
fwait
jno
ret
imul
rcrb
mov
cmp
int
test
or
sub
add
shrl
adc
xchg
pop
repnz
out
xchg
pop
xchg
push
loop,pn
jae
fs
jecxz
xor
testl
frstor
inc
rolb
rorb
mov
test
ds
filds
push
xchg
mov
sbb
xchg
leave
fldl
cwtl
sub
cmp
adc
add
outsb
sbb
cmpb
xor
aad
insb
imul
xchg
xchg
push
pop
stc
xor
insb
fsubrl
and
movsl
ljmp
dec
adc
je
pop
pop
repz
in
imul
icebp
pop
aam
in
pusha
add
ss
pop
and
xchg
sbb
outsb
fistps
xor
cmp
dec
imul
push
out
stc
push
mov
cmp
lods
adc
mov
sbb
sbb
sub
xlat
aas
sub
cmp
movl
xor
pop
mov
mov
insb
addr16
jae
cmpsb
mov
call
mov
xor
jg
bndstx
adc
aaa
or
cmp
pop
xor
outsb
mov
adcl
imul
mov
cmp
jmp
in
ds
pop
dec
test
xchg
subb
je
sbb
adc
adc
mov
xchg
or
lcall
test
cmp
mov
cs
test
and
mov
lret
xchg
mov
xchg
ss
cmp
cmp
jne
cmp
insl
inc
pop
jno
aaa
inc
dec
call
sahf
mov
dec
pop
adc
ss
add
cmp
push
jb
jbe
in
cld
xor
jle
leave
lods
and
push
dec
sbb
sbb
jle
inc
das
lock
mov
cmp
aad
outsl
mov
daa
lods
xlat
sbb
sub
push
cmp
popa
sub
aas
xchg
inc
ror
dec
movsb
inc
xor
pop
jb
xchg
andl
in
lea
lods
xor
push
cmp
stos
pushf
or
inc
out
adc
iret
in
mov
faddl
mov
rcrb
jmp
dec
jg
xor
shrb
repz
imul
fisubrl
inc
lea
out
lock
dec
jge
jno
and
into
pop
sbb
movsl
cmp
push
movsb
mov
mov
xchg
mov
adc
popa
in
mov
xor
mov
popf
pop
or
mov
lcall
daa
cmc
mov
pop
push
push
movb
inc
xor
shll
mov
or
outsb
adc
push
xor
orl
adc
cmpsl
mov
push
adc
in
daa
add
and
or
mov
cmp
testb
add
sti
insb
out
jb
in
or
test
xchg
idiv
repnz
testl
or
lea
push
jnp
jns
xchg
jne
leave
subl
jne
inc
mov
dec
push
or
and
out
push
mov
xchg
xor
xchg
ffreep
jmp
xchg
push
ds
insb
push
adc
aas
inc
dec
imul
jl
mov
aaa
dec
dec
or
add
jae
mov
mov
xchg
sub
outsb
adc
push
xchg
sbb
movsl
pop
arpl
sbbb
add
fimuls
cmpb
dec
mov
sbb
cli
imul
pop
sub
jae
lock
mov
mov
or
push
adc
dec
insl
das
mov
inc
adc
jmp
push
je
repz
xlat
movsl
in
leave
mov
cmp
popa
icebp
pop
pop
mov
cmp
ss
test
fmuls
and
repnz
mov
aas
mov
pushf
add
add
mov
push
int
mov
push
xchg
enter
pop
mov
fstpl
pop
movsb
subb
fldt
dec
mov
cmp
adc
sub
sbb
sbb
push
dec
arpl
sub
dec
in
jecxz
shll
dec
sub
out
fistpl
xchg
jmp
mov
jle
push
ficoml
stc
sbb
cltd
push
lahf
push
dec
outsb
popf
aas
pop
xor
outsl
xor
cmp
xor
mov
inc
rcrb
xchg
or
or
incb
sbb
inc
mov
out
ds
or
subl
lret
imul
repnz
inc
cmp
sub
pop
add
dec
mov
adc
adc
dec
sbb
pop
jp
lods
inc
cld
clc
push
imul
outsb
pop
faddl
or
mov
and
cmp
xor
pop
insl
add
loop
cmp
iret
out
mov
and
stos
jns
outsl
fidivs
fwait
pop
fldl
xchg
xor
imul
out
fildll
adc
pop
unpckhps
mov
popw
rolb
lods
sub
mov
loopne
pop
int3
aam
add
cmc
jl
adc
adc
jge
into
sub
xor
pop
lods
cli
jge
pushf
dec
inc
add
std
mov
cmp
inc
test
das
jl
negb
je
add
into
pop
add
adc
mov
or
lock
jge
sbb
xchg
repnz
popf
lds
adc
pop
cmp
xchg
adc
fstps
add
xchg
out
xchg
ss
cmc
roll
adc
sbb
jbe
mov
cmpsb
inc
mov
or
stc
mov
add
push
xchg
push
ret
jbe
subl
inc
loop
ds
scas
pop
mov
enter
xchg
dec
sbb
pop
and
and
cwtl
add
inc
xorb
test
roll
xor
mov
jge
outsl
sbb
outsb
lret
mov
sbb
cmpsl
add
xchg
xchg
pop
cmp
fldt
push
gs
nop
inc
adc
inc
dec
push
pop
cltd
xlat
adc
pushf
mov
add
and
sbb
inc
outsb
pop
sahf
insl
push
mov
pop
xchg
test
stos
pop
adc
jmp
push
mov
sub
lds
inc
mov
jnp
xchg
cmpsb
repnz
jl
dec
mov
or
xchg
xor
pop
lret
sub
adc
in
jmp
ja
cmp
insl
popf
pushf
xor
adc
cmp
jecxz
add
ffree
add
xchg
xor
add
call
fistpll
push
mov
push
repnz
aaa
push
xor
push
adc
out
cs
or
sbb
or
fstps
jne
arpl
push
adc
insl
pop
pop
cmp
les
loope
add
out
lret
inc
fsubrs
dec
adc
pop
adc
jp
sub
push
xchg
mov
sahf
in
leave
insb
push
stos
and
lret
repz
pop
popa
fists
bound
mov
sbbl
push
sbb
push
insb
push
ficomps
sbb
push
aam
adc
adc
add
sbb
jno
add
pop
scas
dec
mov
adcl
xor
test
cmpb
cltd
pop
or
shll
mov
sahf
mov
or
stc
call
adc
xchg
xchg
mov
inc
inc
aaa
sti
jae
xor
pop
jecxz
fdiv
imul
aas
shrb
push
sbb
inc
mov
sbb
cli
dec
mov
pop
xor
js
gs
repnz
xchg
cmp
inc
push
inc
int
leave
push
ficoms
add
imul
adc
cmp
add
insb
add
shr
aad
fnstsw
adc
inc
movsb
fiaddl
push
pop
pop
aaa
clc
pop
jo
scas
fldenv
call
cwtl
jmp
je
gs
xor
movsl
inc
mov
ret
jl
cmp
repz
xor
mov
idivb
repz
or
jb
fs
popl
cmp
adc
pop
jmp
leave
inc
hlt
mov
in
repz
popf
movsb
jne
cltd
arpl
lret
pop
adc
in
inc
movlps
in
ss
mov
mov
repz
pop
or
mov
or
lret
pop
nop
dec
sub
xor
in
out
push
add
and
pushf
jnp
jo
push
push
inc
push
sarl
dec
inc
popf
and
aas
push
lret
lret
aas
loope
idivb
pop
shrl
bound
and
sbbl
xchg
push
pop
or
sahf
aaa
sti
cwtl
mov
mov
sub
or
movsb
mov
repz
sbb
sbb
pop
and
xor
xchg
and
sbbl
fimuls
out
outsl
imul
mov
jmp
pushl
inc
dec
nop
pop
aas
dec
fmulp
roll
adc
sbb
adc
ret
mov
loopne
jg
jae
movsl
jne
insb
add
pushl
adc
fcmovu
sbb
dec
test
mov
scas
xor
mov
mov
pop
int
mov
outsl
pusha
dec
adc
arpl
icebp
xchg
sub
insl
mov
push
push
adc
jmp
adc
lock
sub
mov
lea
jb
aas
sbb
add
cs
cmc
push
mov
call
or
sub
aaa
or
pop
es
out
push
movsl
or
aas
mov
inc
das
pop
cmp
loopne
xor
movsl
push
shl
shll
les
pusha
pusha
sbb
leave
push
out
shl
add
sti
adc
dec
daa
mov
xchg
sbb
sub
sbb
sbb
add
mov
stos
pop
sbb
add
in
and
dec
pop
fstps
or
loope
jge,pn
enter
adc
mov
cmpsl
jo
inc
pop
faddl
jg
dec
xchg
int3
mov
test
sbb
xchg
movsl
cmp
ds
mov
pop
jle
or
mov
insl
mov
sub
mov
lcall
adc
out
dec
adc
lods
jp
inc
dec
inc
sti
xchg
pop
outsb
dec
repz
aaa
push
pushf
pop
mov
dec
mov
fs
les
jo
mov
mov
rcll
test
cmp
repz
addr16
jns
or
push
ret
cmpsl
and
push
cltd
addr16
xchg
je
push
mov
dec
cmp
repz
out
sarl
jle
movd
popf
cli
popa
inc
pushl
or
adc
cmp
lock
vpunpcklbw
dec
mov
fs
loope
inc
adc
jge
add
nop
stos
add
push
pop
pop
repnz
jo
xchg
lock
dec
mov
out
pop
inc
mov
xor
insb
pop
lret
cmp
aas
lods
adc
les
pop
adc
push
push
lds
rcr
ds
pop
test
adc
or
cwtl
clc
push
nop
into
clc
add
xor
bound
xor
pushf
inc
pop
lea
frstor
ds
lahf
call
cmp
pop
push
gs
mov
dec
jae
xchg
pop
sbb
push
adc
inc
icebp
sub
imul
shrb
in
jmp
iret
adc
adc
dec
push
decb
scas
push
in
lea
pop
outsl
shlb
mov
mov
pop
adc
lods
jge
add
mov
push
inc
lock
fnstcw
sbb
outsl
lret
decl
fsubrl
clc
jne
jae
dec
adc
ret
popl
out
test
fsubrl
sub
push
dec
mov
inc
out
enter
pop
dec
ret
mov
ss
pusha
aas
fs
iret
cld
jne
pop
add
or
cmpsl
daa
imul
xchg
data16
or
into
repz
fs
jle
jo
lret
pushf
stos
adc
stos
icebp
push
jmp
xchg
adc
and
jae
inc
bound
arpl
shrb
xor
or
lahf
cld
out
rclb
ljmp
sbb
jecxz
sbb
jge
in
mov
sbb
movsb
sti
adc
xor
jbe
xchg
jo
loop
mov
insl
and
out
cmp
add
outsb
gs
cmp
push
adc
push
xchg
pop
add
into
or
shlb
pop
sub
rcl
sub
add
fwait
rclb
sbb
lock
pop
xor
jecxz
pop
jg
and
into
sbb
in
pop
inc
shll
dec
adc
es
ja
or
mov
cs
push
loop
xchg
xlat
or
popf
js
out
add
push
dec
out
sbb
add
imul
rdseed
jmp
jnp
adc
fcoms
cltd
sbb
inc
stos
push
jae
pop
pop
decb
sub
fs
or
call
mov
pop
rclb
out
aas
std
mov
cmpsb
and
cmpsb
add
adc
cmp
inc
mov
push
inc
xor
fdivr
sbb
adc
in
ret
jbe
imul
test
and
or
fisubrl
fldenv
xor
mov
lret
cmp
dec
jo
test
cmpsl
pop
and
dec
jo
adc
mov
aad
repnz
fisubs
cld
sub
xor
jns
cmpsb
outsb
sub
pop
test
mov
xchg
lahf
xor
test
addl
or
std
sub
sub
add
pushf
pop
push
adc
repnz
mov
out
scas
out
and
sar
xor
or
popa
and
mov
dec
stos
cld
lcall
jmp
imul
cld
cmp
rcrl
cmpsb
pop
add
add
mov
cltd
inc
adc
shll
adc
dec
mov
and
mov
sub
leave
ret
xchg
sub
pop
icebp
add
cmp
sbb
pop
mov
ror
and
mov
jle
test
add
pop
mov
dec
adcl
mov
xchg
adc
fiaddl
repz
xchg
pop
mov
nop
cs
adc
xchg
add
mov
adc
cs
xor
and
repz
mov
mov
lahf
sub
fistl
loop
pop
adc
push
insb
push
mov
push
sbb
jb
or
cmp
jb
xlat
cmpsb
cmp
lock
mov
cmp
mov
cmp
scas
sub
adc
test
clc
pop
inc
push
les
jno
pop
and
push
roll
and
scas
fstpl
pop
pop
dec
fdivr
mov
insl
sbb
dec
in
or
and
fsubl
xor
out
popf
cmp
rcll
in
add
sbb
cmpsb
pop
bound
xchg
loopne
add
mov
and
loop
push
icebp
lret
test
pop
fbstp
push
adc
inc
sbb
xor
inc
testl
jmp
cmp
pop
add
cltd
loop
lret
stos
inc
int
mov
adc
lock
jo
pusha
xor
popa
jl
or
repnz
push
and
sbb
dec
mov
and
jno,pn
add
shrl
xchg
push
and
insl
jp
shlb
test
mov
xor
pop
jp
cs
inc
pop
inc
rclb
dec
sbb
xor
cmp
inc
mov
stc
xchg
sub
jl
outsl
icebp
fstps
xchg
sbb
sbb
inc
xchg
sbb
call
mov
add
fucomip
insb
repnz
mov
mov
es
add
push
jp
pop
cmp
hlt
push
or
adc
adc
lret
jp
push
pop
sbb
xor
or
ficoms
outsl
cmpsl
jnp
push
outsb
lds
xor
cmpsl
jg
cmp
call
mov
xchg
cmp
pop
or
xchg
outsb
out
decl
mov
mov
or
mov
in
divl
push
add
fisubs
and
mov
icebp
push
xlat
insl
mov
pushf
loope
outsl
pop
cltd
mov
shr
ret
xchg
popf
pop
call
mov
scas
pop
jg
jmp
inc
push
ficoml
std
cmp
sub
jge
xchg
test
mov
popl
or
xorl
or
jae
and
xchg
lret
pop
pop
test
cmp
jbe
inc
shl
sbb
pop
sahf
ss
xchg
mov
into
daa
cmp
cwtl
icebp
xchg
std
popf
shrl
adc
mov
xor
imul
aaa
xor
addl
push
popf
pop
dec
pop
sbb
xor
inc
mov
mov
or
add
mov
imul
icebp
rolb
mov
push
into
pop
out
icebp
jge
and
pop
pop
fdivs
jb
outsb
push
cmpl
add
fistps
sbb
lcall
push
xchg
add
sub
sbb
sbb
adc
icebp
mov
xchg
scas
sbb
pop
insb
out
inc
push
xchg
jmp
xchg
xchg
xchg
pop
xchg
sub
xchg
push
mov
pushl
aad
sbbb
jge
xorl
jno
movsb
mov
outsb
fidivrs
inc
xchg
push
push
test
cmp
adc
jmp
jae
pop
cmpl
stc
jb
push
cmp
ljmp
popa
sahf
call
push
mov
out
mov
xchg
rorb
aad
add
loopne
sub
cmp
jns
xor
inc
lret
test
aad
leave
push
filds
call
push
inc
adc
xlat
adc
cmc
xchg
pop
outsl
mov
and
sbb
adc
or
rclb
adc
std
or
neg
and
sub
mov
gs
cmp
sbbb
inc
push
xchg
mov
std
pop
mov
jle
pop
jb
push
testl
and
push
and
cmc
inc
xchg
pop
mov
and
es
cltd
or
mov
adc
pop
adc
addr16
cmp
adc
out
sahf
pop
imul
xchg
aaa
outsb
add
push
into
or
xorl
or
outsl
sbb
jl
jbe
pop
push
ss
push
push
pop
testb
in
mov
xchg
ret
or
imul
xchg
push
popa
cmp
lock
dec
std
push
inc
sahf
outsl
xorl
push
inc
cmp
and
repnz
jg
jl
movsl
nop
push
pop
inc
mov
pop
push
dec
out
mov
cli
cmc
es
dec
push
sbb
mov
in
pop
lock
pop
call
sub
jb
or
inc
cmovne
ds
mov
pop
cld
mov
mov
iret
les
inc
sarb
push
cltd
and
inc
mov
pop
mov
lods
fidivs
pop
inc
lahf
sub
adc
pop
mov
outsl
shll
dec
mov
jnp
inc
jb
repz
xchg
pop
cmp
and
inc
mov
jmp
rcrl
pop
pop
push
outsl
in
dec
jle
or
pushf
popf
loopne
test
sub
leave
jne
adc
and
pop
loopne
nop
or
jo
jmp
push
push
icebp
mov
sub
je
mov
cmp
push
dec
test
arpl
mov
or
ds
movsb
lcall
ficoms
stos
lcall
repz
clc
insl
and
pop
stos
pop
sbb
adc
mov
test
inc
cmp
jl
sbb
or
pop
cmp
pop
or
aaa
mov
fwait
outsb
mov
test
ljmp
adc
js
lahf
xor
pop
arpl
push
cmp
sbb
cmp
sbb
or
int
mov
xchg
outsb
loopne
mov
pusha
mov
bnd
sbb
bound
pop
inc
pop
cwtl
or
repnz
bound
mov
je
cmpsb
xchg
or
dec
es
and
cmp
bound
out
jnp
test
nop
dec
xchg
in
dec
or
xchg
enter
repnz
or
hlt
mov
sub
xor
dec
mov
js
insl
rcll
ret
and
pop
shl
lahf
lock
jle
pop
adc
fisubrs
lahf
test
xor
stc
lods
clc
jg
xor
outsb
or
sub
fucom
cltd
icebp
sbb
inc
jge
jns
inc
push
ret
cmp
and
cmpsl
cmp
pop
add
les
inc
iret
xor
add
movsl
inc
dec
loop
fsubl
icebp
mov
ljmp
push
sahf
cmp
cmp
push
hlt
loopne
lret
in
cmc
shrl
or
or
xlat
push
stc
icebp
in
repz
out
mov
sub
or
or
add
outsb
cs
xor
inc
pop
pop
shll
jno
dec
int
mov
adc
cmp
mov
adc
inc
inc
push
lods
mov
xor
and
popf
push
adc
jne
xor
std
mov
popa
inc
add
aam
add
loopne
movsb
mov
icebp
insl
scas
push
test
leave
adc
cwtl
lcall
or
iret
xor
leave
add
add
ss
pop
jge
icebp
adc
in
ss
scas
in
lea
pushf
cmp
iret
ret
lock
flds
addr16
jl
and
adc
and
outsb
add
add
sbb
adc
cmp
insb
xor
sub
cmp
cmp
and
or
xchg
sbb
cmp
pop
jle
xchg
jl
cmp
hlt
es
insl
push
outsb
ds
dec
les
out
xchg
mov
push
sarl
dec
sbb
cmp
adc
pop
and
pop
sbb
inc
insb
dec
xchg
addr16
mov
xor
fcom
movsl
add
mov
test
aad
push
adc
mov
mov
mov
xchg
mov
and
pop
mov
or
dec
inc
pop
mov
xor
stos
test
sub
mov
call
adc
lock
xchg
jle
aad
bound
incl
jp
inc
cmp
inc
call
lock
dec
jae
in
pop
cmp
decl
add
adc
dec
add
loop
mov
pop
mov
sbbb
sub
sbb
or
loopne
add
loop
lcall
jns
dec
jne
lock
adc
inc
xor
cmp
aaa
insb
fs
add
lock
lea
shrb
and
pop
add
jl
adc
inc
cld
fwait
lea
xor
and
nop
ja
lret
std
mov
das
mov
push
das
sti
or
sbb
nop
fwait
xlat
out
inc
inc
jb
repz
sbb
or
pop
jg
leave
inc
dec
push
add
sub
push
inc
push
cmp
aam
rcl
or
lock
movsb
jne
outsb
sbb
cmp
mov
mov
adc
sbb
lret
and
mov
pop
sub
or
lock
pop
ficomps
and
fldl
push
cmp
push
repz
inc
outsb
jmp
es
sub
xchg
jae
out
pop
cmp
je
jmp
xchg
add
and
xchg
pop
jno
add
out
pop
adc
repz
nop
pop
xchg
movsl
jl
and
jl
popf
movsl
fnstsw
mov
aaa
dec
jnp
pop
fs
dec
add
xor
cld
dec
pop
ret
jb
mov
mov
xchg
loopne
dec
jb
pop
sub
dec
scas
push
jns
push
addr16
xchg
cmovs
sti
addr16
movsl
int
jns
test
notl
dec
inc
adc
mov
jg
inc
xchg
cmp
and
inc
mov
ja
cmp
adc
cmc
outsl
pushf
inc
dec
xor
xlat
adc
jl
adc
jg
inc
mov
or
sbb
push
sub
and
loopne
test
lret
and
sbb
and
adc
and
adc
lods
push
adc
or
ja
setbe
adc
push
loop
roll
adc
scas
xor
out
pop
sub
loope
addr16
mov
or
in
sbb
fwait
mov
cmc
jecxz
inc
inc
paddsb
and
pushl
sub
cwtl
pop
inc
test
fcomps
add
leave
mov
data16
inc
cltd
jmp
ss
push
cld
inc
orl
fnstsw
subb
rorl
mov
mov
jae
aad
mov
push
xchg
test
cmpb
jae
mov
inc
fldl
notb
fs
outsl
xor
inc
dec
push
add
insl
cmp
fcoml
push
pop
imul
and
call
daa
adc
pop
ja
or
cmp
push
inc
test
push
xchg
call
cmp
and
mov
xor
push
cltd
mov
add
sahf
and
xcrypt-cfb
cmpsl
popa
sbb
ja
add
insb
mov
sbb
fidivl
ljmp
orl
mov
mov
rorb
loop
cmp
xor
neg
loopne
fsubs
inc
cmpsb
std
stc
jo
loop
mov
jecxz
rorb
je
outsb
cmp
inc
sub
jl
aaa
jmp
adc
or
mov
sti
fisubrl
jecxz
or
push
jae
in
adc
pushf
lods
lret
xchg
push
neg
mov
xchg
add
push
in
loope
jge
je
xor
arpl
test
adc
dec
mov
nop
mov
jo
adc
or
in
pshufw
int
call
movzwl
sahf
pop
insb
xchg
mov
scas
les
lods
stos
and
cmpsb
sbb
jl
mov
out
push
out
and
dec
xor
add
cltd
and
dec
push
dec
sub
inc
pop
std
dec
stos
out
pop
rcrl
movsb
rcll
in
addr16
jle
fwait
sbb
pop
das
cwtl
ss
jmp
xchg
ficoms
popf
push
cltd
cli
sbb
hlt
pop
mov
notl
or
xlat
in
xchg
push
in
lds
dec
mov
cmp
loope
pop
cmp
fs
repnz
mov
pop
call
xchg
jnp
repz
mov
in
cli
dec
rcrb
es
out
icebp
jb
dec
clc
daa
pushf
push
mov
stos
in
loop
inc
inc
sbb
push
cld
fisttpll
mov
and
gs
xchg
xorb
xchg
dec
sub
pop
or
dec
mov
xor
dec
lcall
jmp
dec
inc
inc
aam
or
push
push
pop
pop
dec
pop
adc
dec
stos
jge
add
shll
push
dec
repz
xchg
mov
stos
jl
add
mov
sti
xor
sahf
jnp
lcall
lcall
sub
ja
jge
aas
adc
jnp
inc
or
push
popf
out
pop
ljmp
fstpt
outsl
push
int
dec
leave
lcall
jae
sub
inc
lahf
or
insl
adc
inc
gs
adc
insb
adc
loop
adc
std
sbb
pop
xor
jo
mov
xchg
sbb
add
add
xor
movsl
dec
push
mov
push
rclb
xchg
sbb
jecxz
shl
dec
mov
loope
mov
test
pop
mov
repnz
inc
pop
mov
fdivr
jae
push
sbb
add
push
in
add
or
adc
push
push
repz
jne
dec
scas
outsb
mov
push
or
mov
in
adcl
aam
dec
lock
inc
int
jecxz
in
pop
xor
sbb
push
adc
mov
or
adc
push
ljmp
or
arpl
or
and
pop
cmp
or
idiv
add
xchg
sbb
add
jge
call
shll
dec
xchg
mov
movsl
in
loopne
daa
pushf
and
xchg
fcmovb
push
cmp
mov
sub
pop
pusha
xor
mov
fwait
in
lret
cltd
testb
or
push
popf
shlb
cmc
imul
repnz
lds
sbb
or
mov
jno
or
into
insb
sbb
pop
loopne
xor
in
andb
lret
fistps
jbe
pop
repz
lods
lret
add
or
popf
xor
pop
xchg
cwtl
lcall
inc
pop
dec
dec
enter
and
pop
scas
sub
pusha
pop
adc
cwtl
push
sbb
sbb
dec
sbb
push
sbb
xchg
xor
gs
nop
jmp
xchg
div
notl
sbb
cmp
add
nop
push
and
push
mov
dec
and
mov
outsb
cmp
cmp
sub
testl
cmp
in
add
cmp
mov
inc
lock
add
pop
jecxz
movsb
aam
jecxz
adc
bnd
jge
dec
pop
cld
inc
bound
pushf
inc
divl
or
xor
dec
dec
aas
aam
pop
ret
jnp
fidivs
dec
cmp
sbb
push
clc
adc
xchg
pushf
aaa
ljmp
ja
xor
insb
cmp
cmp
ljmp
inc
movsl
aas
ljmp
pushf
sub
jmp
cli
or
pushf
or
notb
and
push
mov
popf
dec
jl
pop
cmp
imul
inc
insb
adc
push
ljmp
fldt
pop
pusha
pop
lea
cld
decl
repnz
arpl
xor
inc
gs
in
popf
xchg
cmp
xor
or
sbb
pop
pop
jmp
or
shl
mov
movsb
or
ljmp
push
lock
pop
sbb
call
movsb
sbb
jno
sahf
or
fisttpll
mov
cmpsb
sbb
out
lods
add
xchg
cmp
or
xchg
ret
dec
inc
cmc
mov
outsb
push
pop
sbb
xchg
out
ret
jb
lds
inc
icebp
in
fildl
pop
sbb
movsb
pop
and
ss
sbb
loop
xor
sahf
es
sub
fwait
insb
add
das
sub
mov
or
addps
out
popa
push
push
faddl
sbb
jg
mov
loope
xchg
js
inc
xchg
push
sbb
rol
jp
push
xchg
insb
mov
jbe
sub
xlat
inc
mov
mov
mov
fdivrs
push
and
inc
add
dec
xor
cmp
sbb
pop
pusha
movsl
mov
jno
inc
and
daa
shlb
dec
loope
hlt
in
adc
cmp
lock
sub
inc
inc
cs
cltd
adc
lods
aaa
out
xchg
sbb
adc
xchg
call
adc
popa
repz
insb
stos
rcl
adc
mov
popa
adc
pop
stos
std
mov
push
adc
fwait
pusha
in
loopne
adc
and
sbb
dec
sbb
ss
outsl
xor
or
mov
and
fsts
xor
mov
add
fwait
lock
sbb
add
popa
mov
lret
push
dec
pop
fcmovnbe
and
pop
jo
mov
fcomps
cmp
mov
pop
jns
insl
cmp
popa
sbb
mov
insl
fcmovnu
in
in
sub
aaa
mov
fdivrp
stc
loop
jge
pop
and
xor
cwtl
cld
and
addr16
sub
aas
icebp
rcll
cmp
mov
pop
loope
pop
jae
ja
sbb
loopne
mov
clc
jecxz
roll
sbb
sbb
push
push
insb
setns
and
xor
push
or
cltd
addr16
insl
jle
ljmp
push
mov
les
lea
cmp
fwait
inc
inc
dec
inc
inc
inc
mov
leave
inc
call
xchg
outsb
dec
in
adc
adc
out
sbb
inc
jno
ficoms
hlt
dec
mov
ds
pop
push
inc
add
enter
ds
cmp
xor
jmp
ret
mov
mov
push
fildll
pop
mov
leave
push
cld
in
sub
or
pop
dec
add
leave
rcll
lods
and
fmul
add
pop
ret
dec
mov
leave
rol
outsl
sti
mov
add
lea
in
test
mov
xor
popf
mov
roll
jnp
add
stos
scas
xor
daa
fnstenv
adc
add
dec
dec
rorb
or
or
out
inc
add
or
push
sbbl
scas
push
mov
rcrb
loope
ficomps
arpl
xor
icebp
or
mov
inc
pop
sahf
push
repz
inc
in
loope
adcb
and
std
les
xorl
inc
mov
jbe
dec
dec
add
jbe
pop
dec
ss
fldl
mov
lock
xchg
sbb
inc
push
add
dec
orb
repz
push
testl
insb
repnz
or
les
icebp
or
mov
adc
and
mov
imul
or
repnz
and
xor
sub
xor
jle
and
iret
add
xchg
xchg
test
mov
pop
pop
dec
mov
cli
dec
mov
inc
ret
jg
or
pop
add
cmp
or
add
popa
mov
out
sbb
adc
adc
mov
icebp
pop
scas
cmp
push
pop
ret
jp
sub
test
adc
dec
adc
imul
repnz
jle
pop
fwait
mov
repnz
arpl
add
cmp
popl
sub
movsl
dec
test
cmpsl
pop
lea
xor
sbb
icebp
lods
fs
out
dec
xor
repnz
push
shl
mov
fs
mov
cmp
or
popa
cmp
sbb
push
dec
repnz
popa
ror
cmp
inc
cwtl
or
push
lds
sbb
insb
or
or
je
and
mov
pop
adc
dec
lea
mov
test
adc
adc
fidivs
jns
std
xchg
sub
xchg
shlb
pop
out
aas
rcrl
iret
ja
mov
repnz
mov
inc
icebp
faddl
xchg
out
jo
popf
xchg
std
sub
aad
xor
cli
adc
test
pop
or
mov
pushf
inc
test
jge
addr16
into
rolb
pop
add
sub
pop
mov
inc
dec
jecxz
jb
push
sbb
jmp
sbb
sti
leave
es
orb
loope
fwait
mov
jg
xor
loop
and
dec
mov
adc
pop
inc
inc
mov
push
andl
mov
inc
mov
or
or
pusha
sbb
sub
lea
popf
inc
inc
cmc
mov
outsl
push
out
in
sub
das
ror
mov
mov
mov
cld
push
or
adc
enter
push
adc
pushf
mov
xlat
adcb
repnz
mov
dec
mov
xor
pusha
rorl
mov
dec
inc
push
mov
repz
mov
loope
outsl
ss
adc
dec
inc
dec
lock
cmovl
sub
cmp
repz
dec
push
jns
pop
and
mov
test
cltd
cmp
cli
mov
sbb
xor
gs
out
mov
lods
sub
push
or
dec
jg
push
or
pop
or
in
mov
ss
mov
jne
jae
xor
push
jg
cs
xor
dec
inc
repz
test
xor
mov
das
pop
sti
pop
cmp
daa
ret
fisttpll
sub
sbb
sti
lahf
xor
negb
cmp
lock
cli
push
repnz
gs
sbb
xchg
xchg
mov
push
repnz
dec
dec
pop
popa
pushf
push
ljmp
or
mov
jnp
add
es
and
pop
and
bound
cmpsb
out
add
pushf
push
add
loop
cmpsb
jo
imul
or
loope
cli
mov
adc
xor
xor
pop
cmp
mov
or
xchg
lcall
ja
loop
jb
pop
ss
pop
fsubrs
mov
xchg
pusha
pushf
jb
and
lahf
add
adc
xor
inc
ds
push
cmp
sub
leave
ja
lods
pop
jge
clc
sub
pop
sbb
clc
mov
loop
cmp
and
xor
adc
pop
fwait
je
or
sbb
cwtl
shl
push
dec
jbe
sbb
sbb
sub
mov
hlt
cs
cmp
sub
in
dec
cmpsl
loop
mov
stc
lea
popa
lahf
dec
xor
pop
outsb
add
sub
leave
pop
mov
fiaddl
jecxz
and
and
aas
cmc
in
adc
dec
inc
sub
fists
adc
or
and
xchg
test
movsb
or
xchg
aaa
sbb
ret
cli
jge
cmc
xchg
push
add
inc
sbb
xor
adc
mov
fstl
dec
and
decl
call
scas
mov
loop
xchg
pop
in
and
xchg
jo
lea
rol
cs
xchg
inc
xor
lods
sub
adc
dec
dec
jmp
push
sbb
xor
test
lds
aam
inc
cs
mov
mov
or
shl
push
dec
out
cmc
xor
shl
inc
pop
inc
sbb
and
mov
mov
pop
mov
push
jne
prefetchwt1
sar
ja
jp
dec
adc
outsl
sub
sbb
data16
scas
dec
push
popa
out
dec
icebp
mov
add
pop
inc
popf
pop
dec
aas
insl
stc
out
stos
mov
pushf
mov
push
mov
lcall
es
cmp
insb
loope
push
repnz
sbbb
or
inc
push
std
aad
lock
or
movsl
mov
out
dec
cmp
iret
xor
dec
cs
jb
jle
adc
icebp
ficoms
dec
mov
repz
adc
xchg
popf
inc
dec
imulb
dec
inc
dec
jb
call
jmp
inc
dec
stos
decl
adc
mov
imul
repz
mov
cmp
das
mov
pushl
mov
push
mov
cmp
add
dec
fldcw
xor
rorb
add
mov
ljmp
sbb
push
sbb
fcomps
lret
bound
sahf
in
xlat
loop
insb
sbb
pop
ss
adc
adc
sub
das
add
clc
mov
pop
xlat
pop
adc
jo
pop
fnstsw
xlat
xor
adc
pop
pop
hlt
clc
lret
jmp
mov
bound
cli
jne
out
sub
dec
jecxz
daa
repz
jg
and
pop
test
cld
test
push
cmpb
call
sub
mov
push
push
xchg
dec
inc
stc
xchg
push
cltd
mov
xchg
repz
ss
or
inc
xchg
inc
imul
sub
xchg
dec
cwtl
sahf
lret
dec
inc
psllw
cmp
sub
nop
pop
sub
push
and
shl
xor
adc
push
out
sub
adc
and
adc
nop
jle
pop
sbb
inc
or
inc
or
cwtl
push
jecxz
sub
sbb
add
xchg
ret
sarl
sbb
xchg
add
loopne
sbbl
call
popa
bound
jge
mov
sub
xchg
stos
push
dec
sahf
fldcw
pop
js
imul
and
pop
and
push
cld
xor
adc
dec
xchg
lds
sbb
rorl
dec
popf
imul
test
jae
shll
cld
repnz
inc
xchg
test
dec
arpl
aas
xchg
push
mov
cmp
xchg
push
sub
sub
push
cltd
xor
push
daa
aam
xor
loope
ljmp
push
das
cmp
imul
push
or
pop
out
mov
pop
and
fists
add
pop
pop
sub
pop
sub
xchg
test
loop
adc
dec
pop
inc
mov
cmp
lds
daa
xchg
aas
push
iret
adc
pop
add
xchg
pusha
out
mov
test
insl
pusha
xor
addr16
or
jne
add
lahf
push
adc
out
and
lcall
lea
nop
bound
lods
cmp
adc
decb
ljmp
mov
push
push
or
loopne
movl
and
ljmp
rclb
and
cli
leave
xchg
pop
cmc
sahf
xor
xor
popf
adc
out
mov
mov
test
repnz
cmp
pop
cli
inc
cmp
pushf
push
jg
lret
rolb
out
sti
or
add
adc
cmp
inc
dec
pop
mov
rcrb
scas
sbb
sub
and
js
push
int3
cli
insb
push
fisttpl
inc
les
aad
inc
adc
inc
mov
dec
sbb
and
jecxz
cli
add
cwtl
cmp
adc
sub
pop
clc
mov
sahf
dec
jae
mov
sbb
mov
clc
insl
std
fsts
xchg
dec
push
repz
inc
sbb
cmpsl
push
stc
mov
sub
fdivs
int3
incl
sbb
aas
aas
arpl
cld
adc
clc
pushf
fwait
and
fists
add
xor
or
outsb
fists
cmpb
js
out
mov
sar
push
andb
and
lock
ja
xor
ds
or
mov
or
repnz
or
pop
adc
ss
sub
sbb
icebp
dec
and
push
ss
add
xor
repnz
push
push
sub
repnz
pop
cmpsb
xchg
inc
jl
aas
mov
in
lahf
jp
add
adc
push
daa
fbstp
pushf
jo
and
pushf
dec
repz
jno
dec
hlt
pop
inc
or
movsb
inc
sub
fcmovu
out
fistl
lea
fs
mov
pop
xor
aas
push
push
sbb
aas
cmp
inc
out
mov
add
xchg
adc
xor
xor
in
mov
and
cmp
dec
mov
xchg
and
adc
sbb
push
lret
or
jmp
jle
adc
push
test
pop
call
inc
push
rcrb
neg
xlat
scas
fwait
pop
fwait
push
imul
mov
icebp
pop
and
sub
pop
in
ljmp
and
fldcw
jge
push
sbb
cmp
push
adc
or
or
repz
pushf
test
ljmp
ss
inc
mov
test
imul
sbbb
aas
repz
sbb
push
out
popa
insl
adc
xor
adc
pop
mov
pop
gs
out
imul
or
lret
or
add
sub
cltd
dec
mov
xor
add
adc
movsl
je
xor
inc
xchg
push
cmpsl
ret
add
or
enter
inc
cmpsl
std
in
outsl
cwtl
mov
xor
sub
jb
cmc
loop
push
test
ret
and
aam
jp
outsl
jge
adc
gs
dec
loop
mov
pop
dec
mov
js
add
dec
push
pop
idivl
or
xchg
mov
adc
pop
or
fidivrl
cld
push
xchg
push
insl
shlb
gs
pushw
pop
cmp
out
cs
shrb
pop
push
shlb
lret
adc
cmp
or
imul
jne
popf
mov
pop
shll
push
mov
push
jne
into
jb
push
sbb
lret
lret
je
out
push
test
cmp
int
xchg
dec
fucom
push
mov
lret
inc
bt
ja
jb
loop
lods
sub
adc
sub
rcrl
mov
mov
es
push
cmp
or
cmp
nop
fcompl
jo
mov
xor
in
xor
stos
xchg
or
imul
dec
dec
rep
lret
out
push
adc
stos
adc
scas
in
adc
popw
mov
cld
aam
dec
aas
or
dec
pop
pshufw
pop
xor
adc
pop
ljmp
jg
adc
add
pop
outsl
xor
dec
jge
iret
mov
sub
loop
adc
pop
es
stc
sub
add
sub
pop
xor
ljmp
js
test
mov
int3
dec
inc
idiv
fs
dec
rcll
pusha
sub
pop
push
sbb
lret
xchg
scas
cmpsl
sbb
dec
cmp
pop
mov
dec
leave
sahf
push
dec
mov
and
cmpsl
xchg
addb
leave
adc
cmp
adc
adc
mov
or
in
mov
sbb
inc
iret
jae
movsb
push
xchg
cmc
out
movsl
add
aas
mov
cld
in
jg
mov
and
lds
je
lods
out
xlat
fwait
and
jb
dec
dec
sub
pusha
jne
or
sahf
xor
pop
andl
jo
sar
dec
push
xchg
rclb
gs
mov
xor
cmp
pop
add
sti
cmp
mov
push
rcll
out
repnz
mov
xor
lods
cmpb
jne
or
jecxz
fsubrs
ljmp
adc
pop
xor
cmp
sub
das
stos
adc
adc
mov
or
cmp
loop
test
stos
lods
mov
adc
mov
fisttpll
dec
fldt
pushf
cmp
aaa
sub
mov
mov
insb
ds
jmp
xor
inc
cwtl
icebp
push
xor
sahf
and
jg
adc
aad
arpl
sar
mov
add
stos
inc
fnstenv
add
cmp
aad
cltd
push
push
xor
inc
ficoms
test
adc
leave
add
scas
out
movsb
das
inc
shl
int3
in
andl
mov
adc
xor
pop
adc
loop
aad
lret
inc
mov
aad
or
decb
cmp
nop
push
rcrb
mov
lret
pop
shrl
mov
test
hlt
mov
lret
outsl
sub
mov
aas
call
xchg
icebp
or
pop
out
pop
je
stc
into
jmp
lcall
pop
add
pusha
push
icebp
jo
fstps
loopne
pop
push
fnstcw
mov
or
xor
pop
push
push
fimull
dec
adc
sbb
push
aas
jo
out
mov
adc
sub
sub
xchg
mov
or
icebp
stc
outsl
pop
xor
incl
fwait
addl
sub
mov
cmpsb
adc
dec
icebp
and
hlt
mov
push
mov
lods
mov
xor
push
repz
lods
nop
inc
scas
sbb
fwait
add
add
mov
jge
out
testl
mov
imul
mov
sbb
imul
repz
adc
cmpsl
fists
or
add
push
stos
out
jmp
and
mov
or
sbbb
repnz
in
test
cmp
push
aaa
out
sbb
sbb
inc
cmp
xchg
inc
jle
jmp
popa
cmp
popa
lret
sub
es
and
cmpsb
jae
pop
and
adc
inc
sub
lcall
mov
push
add
sub
rolb
add
ss
daa
and
addr16
jmp
jle
push
loop
or
push
aaa
jo
pop
push
push
pushf
mov
sbb
imul
cmp
xor
out
mov
test
movsb
mov
int
or
lods
scas
scas
in
push
testb
push
in
or
in
sbb
bound
adc
or
or
dec
bound
jno
shll
sarl
andl
pop
inc
call
jecxz
insl
adc
mov
xchg
lahf
outsl
or
fdivl
sbb
test
in
push
add
mov
cmp
pop
pop
dec
push
sti
sub
aaa
pushf
or
dec
add
imul
addr16
mov
mov
dec
imul
sbb
ret
and
push
sahf
pop
bound
dec
subl
out
stos
lret
sbb
nop
mov
fstps
pushf
ljmp
pop
pcmpgtw
imul
fnstenv
adc
jp
or
gs
xchg
inc
jbe
or
rclb
dec
lret
add
push
sub
mov
fisttps
inc
mov
mov
add
sbb
jge
repnz
in
insb
rep
dec
jbe
je
enter
xchg
enter
jno
rolb
pushf
fdivl
loop
pushf
sub
xchg
sub
mov
dec
dec
jp
xor
mov
push
pop
sbb
insb
out
push
in
mov
adc
mov
stos
enter
jb
bound
xor
xchg
dec
push
or
les
and
loope
call
jno
loope
ss
orb
mov
iret
mov
fcomps
push
or
add
stc
pop
pop
insl
xchg
mov
push
jo
push
in
jmp
imul
pop
xor
and
dec
daa
stos
push
nop
sbb
loope
out
inc
cld
stos
std
or
dec
frstor
inc
cmp
aaa
rorb
adc
dec
and
sbb
repz
push
stos
mov
inc
push
or
jo
xchg
fists
imul
ret
mov
into
mov
adc
sahf
sub
or
sbb
add
iret
mov
jmp
dec
add
inc
mov
or
sbb
sbb
ss
mov
stc
call
idivb
add
push
call
dec
arpl
movsb
or
lahf
mov
dec
push
push
hlt
pop
dec
dec
or
in
ss
lds
jns
pop
pop
in
cmp
xor
int3
pop
push
test
ja
dec
sbb
inc
inc
jns
dec
inc
push
repz
inc
loope
inc
dec
ja
mulb
shrb
sub
jmp
enter
jo
mov
das
repnz
ret
or
mov
mov
cmp
daa
push
add
cmpxchg
or
in
add
dec
jno
cltd
fidivrs
aam
outsb
jae
add
sbb
decl
inc
pop
fistpl
dec
or
pop
pop
daa
push
push
pushf
mov
cwtl
lea
fwait
adc
xor
cld
aad
mov
out
pop
push
mov
cmp
xchg
pushf
push
push
es
out
sbb
out
and
pop
or
pop
sbb
cld
or
bound
dec
add
inc
and
movsl
aaa
or
mov
mov
fsubr
adc
mov
loopne
out
mov
push
sahf
mov
cmp
icebp
fisttpll
out
sub
jno
insl
into
icebp
fcmovnu
and
sbb
lock
jge
push
imul
adc
jg
fstl
xor
imul
outsb
clc
inc
jae
adc
int
dec
sbb
jno
int3
test
test
rorb
movsl
adc
pushf
jmp
add
and
rorb
ret
add
enter
sub
sbb
lcall
popf
xchg
outsb
adc
mov
add
cmp
xchg
dec
sbb
addr16
clc
jle
adc
pushf
pop
ficompl
jg
and
pop
or
hlt
mov
aas
push
pop
fstpl
inc
fcoml
iret
dec
fucomi
loope
lds
ds
mov
xchg
mov
loopne
add
push
jecxz
rcr
repnz
aam
jp
sbb
and
push
xchg
mov
push
pop
in
cmpsb
into
out
push
xchg
push
insb
test
dec
jge
xchg
les
lcall
pop
call
out
pop
cs
push
pop
outsb
push
xor
jmp
jmp
jns
mul
iret
adc
add
adc
sub
adc
dec
icebp
les
and
pop
push
pop
cmp
jnp
sub
and
fs
sbb
outsl
sbb
fdivrs
dec
cwtl
or
std
in
and
adc
sub
lahf
or
mov
xchg
aas
fcoml
cmp
xor
or
push
xchg
mov
addl
adc
andl
fldcw
lret
repz
inc
out
adc
orb
push
or
xchg
shrb
js
aam
out
sti
push
in
fwait
cmp
add
loop
jmp
jle
push
fdivr
leave
jns
jmp
xor
xor
pop
int
or
stos
insb
inc
lock
jmp
out
mov
push
leave
nop
pop
pushf
int
or
pop
mov
xor
push
into
scas
xor
cmp
sub
das
popf
sbb
fisubrl
and
cmp
popf
dec
mov
sub
mov
lahf
loopne
and
push
scas
mov
adc
xchg
xlat
in
sub
icebp
or
xchg
inc
xchg
out
or
loope
aad
popa
dec
xor
dec
xor
insb
out
pop
cmp
sbbb
jne
pop
inc
std
cmp
lret
ret
fcoms
rorb
pop
or
inc
sbb
add
stos
sub
push
es
jecxz
into
out
mov
mov
nop
ja
cmpl
adc
jmp
adc
and
int
shrd
test
adc
push
cwtl
or
insb
xchg
mov
dec
or
fadds
sub
clc
xor
ss
mov
out
mov
and
lods
sub
add
inc
pop
mov
cmp
pop
adc
dec
aas
push
sbb
xor
inc
repnz
mov
sbb
cwtl
test
ja
inc
imul
push
popf
lds
mov
data16
or
sbb
cmp
es
pop
adcl
xor
mov
and
mov
push
mov
fmulp
in
xchg
mov
xchg
xchg
xchg
push
sbb
cmp
cmp
push
push
add
mov
fcoml
repz
loop
mov
pop
adc
mov
dec
rclb
sbb
scas
push
lea
loope
mov
es
shlb
bound
sbb
sbb
dec
addr16
fidivl
jae
pop
jnp
inc
dec
sbb
aas
lock
rolb
arpl
jnp
enter
xchg
stos
cmpsb
push
popf
inc
test
shll
mov
pop
mov
and
jp
dec
cwtl
sub
adc
jle
adc
inc
sub
add
pop
movsl
pop
cmp
xchg
sbb
pop
arpl
fisubl
sub
pop
outsl
lods
sub
pop
sbb
fadds
lea
sub
adc
pop
movsl
sbb
inc
cwtl
dec
pop
cmpsb
adc
data16
jg
addr16
ds
inc
push
adc
addb
fs
push
lds
sbb
jmp
loopne
fiadds
mov
jo
mov
push
add
jns
mov
mov
mov
push
ds
shll
aam
xchg
cmpsl
add
test
jb
inc
popa
push
push
xor
call
and
pop
leave
call
mov
idivl
sar
and
push
mov
add
outsl
xor
add
imul
push
div
outsb
imull
imul
sbb
mov
repnz
inc
pop
adc
pop
xchg
pop
or
sahf
adc
sbb
lret
sbb
stos
jle
insl
nop
sbb
movsl
fdivrs
repnz
sbb
or
rcl
mov
jle
mov
fists
bound
cmpsl
fildl
push
mov
ret
inc
es
mov
cmovbe
xchg
cltd
jmp
add
mov
push
mov
pop
sbb
mov
sahf
jo
cmp
rcl
cltd
ss
adc
inc
outsl
int3
rcr
pop
stos
sbb
lahf
push
jno
inc
sbb
fcom
lret
aas
xchg
cmp
loopne
mov
mov
in
xchg
push
cmpsb
lods
js
jmp
mov
cmpsl
cli
push
psllw
nop
add
and
jnp
mov
push
movsb
loopne
mov
mov
pop
andl
xor
sbb
pminub
in
les
sbb
sbb
xor
in
mov
cmc
pop
mov
rcl
xlat
test
sbb
sub
mov
or
shl
insl
mov
add
xor
push
and
xchg
push
addr16
iret
or
mov
cmp
lahf
cmovg
lret
jmp
dec
mov
loopne
mov
cmpsb
adc
inc
insb
movsb
test
dec
lret
loopne
pushf
out
xorb
mov
and
lahf
test
adc
adc
add
testl
fwait
pop
psrad
out
xor
push
xor
dec
lods
push
inc
cmc
jge
rorl
cmp
cld
mov
call
bnd
stc
fs
sub
imul
aaa
dec
mov
mov
xchg
out
push
cli
jbe
lcall
cmp
clc
lds
cwtl
add
jmp
or
or
pushf
xchg
push
add
cltd
decl
xor
dec
or
mov
xor
dec
mov
repnz
aaa
adc
dec
dec
insl
add
ljmp
ja
and
imul
jge
lahf
test
mov
outsl
and
rcrl
stc
fldl
fwait
cli
pop
add
shrb
xor
into
mov
pop
or
mov
stos
pop
adc
out
mov
imulb
inc
push
leave
lock
rcrl
mov
push
or
dec
mov
cmp
xchg
adc
push
mov
clc
sbb
mov
loope
dec
push
fwait
mov
repnz
mov
sub
int3
mov
xchg
scas
mov
pop
fldt
fildl
xor
aas
dec
test
xor
dec
movsb
leave
ss
cwtl
mov
and
adc
mov
pop
cmpb
xor
mov
loope
test
loope
push
add
push
clc
cmc
insb
jl
push
and
and
inc
xchg
or
adc
stos
push
lock
mov
cmpsb
stos
adc
add
in
dec
popa
js
sbb
fldcw
mov
into
dec
mov
mov
add
sub
sarb
in
pop
gs
dec
adc
out
xor
cmc
cmp
loopne
js
pop
or
adc
fmull
fdivrp
repz
push
xchg
lahf
ds
in
add
mov
xchg
call
popa
push
sti
and
adc
sbb
pop
scas
repz
insb
sbb
pushl
inc
sbb
shl
outsb
sbb
mov
aad
sub
xchg
sbb
fldenv
imul
cltd
push
xor
or
shr
sub
and
inc
clc
cmp
push
xor
lea
mov
inc
pop
adc
ds
pop
fimuls
fsubr
mov
fisttps
xor
push
leave
inc
mov
out
push
inc
fists
outsb
and
mov
adc
push
sahf
jae
dec
or
and
popf
lock
outsl
pop
adc
pusha
xor
fnstenv
test
movsl
cli
cmp
out
xchg
fisttpl
sbb
adc
loopne
ret
lahf
pushf
aaa
fimuls
push
sbb
scas
cmp
punpcklwd
and
cmc
push
jecxz
jp
jl
cmp
nop
sub
xlat
push
cmp
ficoms
mov
sbb
fstpl
cmp
jbe
mov
xchg
icebp
inc
cmp
dec
xchg
pop
or
ss
dec
adc
ds
dec
rcl
movups
adc
fidivs
mov
rep
test
pop
cmp
repz
xchg
jecxz
push
sbb
cmpsb
cmpsb
xlat
push
push
mov
jl
jmp
push
mov
jb
js
sbb
stos
inc
xchg
addr16
pop
imul
or
test
test
mov
sub
jns
test
leave
xchg
inc
sti
pop
sub
inc
loope
xchg
push
sub
add
cmp
insl
inc
push
adc
lahf
lds
xchg
fldl
pop
js
xchg
stos
pop
add
xchg
sub
jmp
sub
into
loope
jnp
les
sub
dec
xor
and
ss
cmp
xor
add
popf
xor
and
cmp
movsb
adc
lret
xchg
fs
sub
mov
inc
rcrl
dec
call
jb
jne
inc
cmp
push
or
outsl
adc
ss
inc
push
and
pop
sub
or
xlat
add
sbb
cmp
fdiv
or
inc
addl
cmpsb
jo
enterw
dec
mov
js
loopne
cmp
mov
mov
cmpsl
dec
sub
mov
sbb
sub
mov
cmp
jg
mov
leave
xor
das
adc
cmpsb
cld
pop
dec
adc
jae
or
xor
ss
js
and
jp
lods
cs
or
or
jge
in
mov
cmc
subl
pop
xlat
jp
stos
sub
and
scas
sub
repz
sbb
fcoml
test
ficoml
aas
cmp
mov
hlt
xchg
xor
rolb
xchg
scas
pushf
mov
pop
cmp
xchg
sbb
stc
jne
sub
divb
or
push
in
mov
add
paddq
addl
sub
xchg
jnp
xlat
push
loope
es
add
in
aad
or
push
sub
mov
sub
cmp
push
push
cmpsb
dec
ret
push
cmp
rorl
lcall
pop
pop
mov
cmp
nop
stos
push
xchg
sbbl
stos
push
mov
and
loop
push
push
mov
lock
pop
jb
loope
repnz
dec
test
xor
jns
or
movsl
jecxz
shll
lret
and
lahf
push
test
mov
or
jae
mov
repnz
popf
xchg
push
ffreep
mov
sub
and
add
std
xchg
pushf
add
sbb
insl
inc
rcrb
icebp
stc
arpl
mov
xor
shl
adc
enter
cmp
mov
xor
test
jp
popf
clc
pop
xor
aad
arpl
pop
fldt
mov
fisttps
in
push
ficoml
imul
mov
push
jge
sbb
xor
ja
mull
loopne
cmp
outsl
mov
sahf
cmp
aaa
fiaddl
xchg
addr16
inc
lcall
in
loop
xchg
sbb
shlb
loop
sub
mov
mov
repnz
les
fisubrl
icebp
and
push
out
repnz
pusha
stos
adc
jno
push
int3
jnp
or
das
add
inc
sbbl
repz
testl
sbb
pop
or
push
or
popa
cmp
and
mov
sbb
notb
rcll
shl
pop
hlt
adc
and
adc
xor
xlat
dec
mov
push
inc
sbb
xor
inc
inc
dec
in
mov
psllw
repz
mov
call
movsb
mov
add
pop
cwtl
push
out
cli
lds
add
dec
cmp
loope
sar
std
scas
jge
leave
inc
cmpsb
in
sbb
dec
adc
in
or
repz
call
jo
movsl
xor
fisttps
fwait
sbb
dec
jno
sbb
cmp
dec
int
jge
mov
loope
sti
push
std
pop
add
jmp
and
sub
push
pop
inc
xor
xorb
imul
mov
xchg
jmp
lret
mov
jl
lcall
xchg
ret
jo
xorl
mov
mov
push
dec
cmpsl
adc
leave
add
sub
mov
scas
call
sahf
into
add
mov
out
inc
jmp
adc
movl
jge
xor
test
lods
push
test
mov
pop
inc
fidivl
xor
pop
push
inc
mov
js
repz
jl
scas
loop
fsubs
mov
loope
stos
jp
adc
outsl
sbb
loope
repnz
sub
cltd
popa
sub
in
mov
sbb
mov
pop
xchg
inc
add
sub
xchg
add
inc
or
adc
xchg
fbstp
adc
mov
sbb
xchg
dec
mov
lods
push
sub
aas
shl
ret
sbb
jno
psubsw
push
sbb
xchg
out
nop
andb
xchg
inc
add
sbb
hlt
cmp
out
daa
cmp
outsl
xchg
mov
lret
leave
pop
pop
sbb
jge
and
ret
jge
sub
test
or
test
shrb
cmp
and
and
push
jo
pop
push
adc
lahf
inc
nop
imul
and
in
pop
test
jmp
xor
mov
cmp
adc
mov
cltd
jl
or
push
or
shld
mov
testl
fs
inc
icebp
hlt
rolb
loop
iret
pop
insb
pop
jne
cmpsl
inc
or
sbb
out
fldenv
push
lret
add
xorl
pushf
cmp
or
xchg
push
repz
pop
or
fidivl
imul
xor
lret
ror
pop
pop
add
mov
inc
jmp
ret
fnsave
insl
int
inc
in
je
cmp
mov
or
push
xchg
xchg
sti
add
and
adc
cmpb
pop
cld
xchg
xchg
mov
iret
push
cmp
mov
xor
cs
lea
loopne
jo
filds
jp
xchg
fldt
sbb
iret
nop
push
sub
mov
inc
and
mov
jl
int
or
add
mov
orl
mov
push
nop
sbb
sub
push
into
addr16
mov
mul
sbb
data16
loopne
xor
push
xchg
xchg
test
push
lea
and
add
pop
cmp
push
or
xchg
out
rcr
jg
cld
adc
cmp
sti
pop
add
xchg
mov
call
movl
in
std
xchg
sub
icebp
out
adc
rorb
xor
repz
adc
jg
sub
shrl
jge
jno
pop
idivb
lahf
iret
jae
inc
repnz
adc
pushf
inc
and
ja
lahf
or
out
cmp
push
inc
cmc
aas
push
fnstsw
pop
mov
pop
filds
rorb
fsubl
mov
iret
push
insb
in
pop
cmp
cmp
dec
insl
sbb
or
sub
xor
and
gs
mov
popf
jp
aaa
std
ljmp
adc
sahf
test
roll
sub
jge
and
jge
std
inc
push
push
out
dec
or
pop
iret
sbb
mov
outsl
adc
pop
sbb
pop
cli
cmp
sbb
mov
pop
and
jecxz
popa
andb
add
or
push
sub
add
pop
lahf
push
jle
jb
add
pop
addr16
push
mov
mov
rorl
dec
out
mov
sbb
pushf
out
xor
andl
jmp
fwait
sbb
pop
xor
ljmp
in
aad
dec
sub
mov
add
xchg
mov
enter
xchg
pop
popa
mov
lock
fwait
xlat
add
dec
inc
xchg
fdivl
test
push
leave
cmp
push
icebp
pushf
pop
mov
stc
addr16
shl
pop
and
sub
mov
and
aam
or
stos
roll
and
sbb
pop
insb
push
test
lcall
or
popa
aam
ljmp
and
popf
push
hlt
addr16
in
loopne
leave
imul
test
in
in
adc
mov
cld
popf
pop
ret
cmc
push
pop
push
pusha
dec
lret
xor
shrb
jnp
scas
nop
mov
adc
cmp
jmp
cmp
sbb
cld
das
repnz
cmp
in
push
shrb
daa
jge
faddl
xchg
je
pop
cmp
ret
cld
cmp
movb
pop
aad
stos
push
ret
mov
popf
xor
call
jne
pop
mov
mov
stos
pop
movsb
cmp
or
mov
call
or
jle
or
nop
shll
sti
xchg
jmp
icebp
insb
icebp
xchg
loope
in
lret
adc
repz
int3
or
or
sbb
xchg
dec
or
cs
out
iret
mov
adc
icebp
add
in
adc
pop
inc
and
out
push
repz
dec
pop
and
fdivs
sub
lret
cld
cs
adc
cwtl
das
or
movsb
dec
scas
andl
subl
push
ficoml
and
or
adc
mov
ds
lods
jmp
jl
sti
jecxz
imul
mov
jl
sub
adc
adc
mov
inc
jle
mov
ja
mov
xor
out
repz
pop
jnp
or
mov
in
xchg
cmpsb
or
dec
adc
pop
fists
adc
ljmp
repz
clc
fwait
das
inc
stc
or
negb
inc
adc
sbb
sbbb
push
lcall
and
out
adc
xchg
jmp
and
les
adc
ljmp
jnp
daa
mov
cli
pop
pop
sbb
in
aad
add
loope
sbb
loop
sbb
xchg
cmc
negb
fcomip
or
or
pop
cmp
aaa
repnz
adc
repnz
popa
fwait
push
incl
sbb
inc
lock
fadds
xchg
pop
dec
mov
cld
and
mov
cld
loop
xchg
mov
repnz
fimuls
push
mov
sbb
mov
adc
mov
ret
cwtl
fldenv
cmp
pop
nop
adc
rcll
sbb
rorl
push
outsb
lock
add
sbb
fcomps
sbb
rorl
out
cld
and
add
adc
sub
add
ja
jns
sub
cmp
push
adc
std
pop
jns
sahf
push
adc
or
add
cs
xchg
sbb
jg
iret
adc
cmp
mov
and
in
xchg
loopne
adcl
mov
jmp
add
add
push
adc
lahf
movsb
adc
add
fimull
loop
push
jge
and
xor
test
or
and
mov
aam
push
pop
pop
mov
cmp
adc
adc
fistl
jmp
or
stos
push
test
aaa
fsubrl
mov
jmp
and
push
daa
sub
pop
cltd
nop
inc
push
sbb
xlat
div
ja
jmp
das
popf
sbb
pop
pushf
inc
sti
jbe
shll
sbb
and
pop
adc
nop
xor
push
jecxz
xchg
xchg
xor
mov
testl
stos
push
sbb
ds
incl
or
and
push
xor
add
adc
add
or
enter
adc
fisubl
dec
pop
adcb
pop
mov
jo
or
adc
xor
or
dec
rclb
inc
fs
scas
sbb
cmp
lcall
sub
inc
adc
adc
fdivrl
outsb
iret
mov
cmpsb
xor
dec
push
dec
sub
mov
push
xchg
aas
cli
rorl
es
xor
out
sbb
dec
or
test
in
sahf
scas
outsb
adc
orb
dec
mov
dec
loop
fimull
mov
cmp
push
push
sub
mov
xor
mov
push
adc
sbb
push
movsl
xlat
push
xchg
imul
and
cmp
sub
movsl
sub
outsb
lcall
xchg
jae
cld
adc
rcrl
popa
rorb
push
and
sub
xor
dec
call
test
sub
add
gs
mov
aam
sub
push
push
aad
or
lahf
xor
pop
add
mov
mov
push
sbb
xchg
lcall
jno
cli
aas
xor
push
push
xor
adc
mov
dec
sub
sub
not
or
cltd
outsl
decl
movsl
add
mov
les
mov
leave
pop
orl
cld
add
adc
xor
insb
cltd
or
adc
push
push
movsb
loope
or
lcall
or
dec
mov
cmp
sbb
inc
sub
cmp
in
pop
leave
ficompl
loope
xor
or
sbb
insb
in
cmp
xchg
xchg
popf
in
jne
scas
dec
ds
fcmovnu
cmp
jg
jmp
push
orb
mov
adc
mov
inc
add
mov
inc
icebp
and
mov
cmpl
fisttpl
icebp
aas
imul
cmpw
inc
cwtl
adc
or
pusha
icebp
ja
adc
and
or
stc
sub
jecxz
enter
fnstenv
gs
lahf
rcll
jmp
dec
jns
dec
stc
push
inc
lods
ret
out
repz
push
mov
adc
lret
fistl
imul
push
adc
call
adc
js
sti
sub
cmc
add
jg
xor
out
jl
movsb
mov
ss
lds
sub
shlb
adc
sbb
inc
rorl
xchg
pop
adc
stc
out
in
sbb
cmp
or
cmp
data16
xchg
push
flds
cmp
out
jo
mov
lea
fmulp
cwtl
imul
test
out
or
sub
add
cmp
xchg
mov
push
push
mov
pop
sbb
ret
out
mov
cmp
or
cmp
pop
out
jmp
sub
nop
shll
popf
cltd
pop
dec
test
xchg
sub
ss
paddsw
xor
sub
pop
sbb
cwtl
or
mov
jnp
or
dec
icebp
push
xor
or
daa
xchg
aas
les
push
adc
aam
popa
shr
out
cmpsl
adcl
push
out
add
cmp
adc
adc
idivb
ljmp
sarl
and
popa
fcomi
enter
cwtl
mov
loopne
or
push
xchg
adc
xchg
cmp
leave
fbld
xor
jae
cwtl
es
outsb
add
pop
or
jg
pop
insl
add
into
ds
adc
out
pop
push
mov
inc
mov
or
adcl
pop
aad
les
es
lock
jbe
cli
cmpsl
je
push
adc
sbb
cwtl
jp
ljmp
jg
movsl
aas
lahf
push
push
mov
sahf
ret
loope
adc
inc
sbbb
in
pop
jecxz
add
pop
adc
movsb
dec
fs
in
repnz
aaa
mov
jp
lcall
sbb
cld
stos
jo
incl
fldt
pop
into
mov
loope
adc
mov
or
sbb
ljmp
or
lock
out
and
xor
dec
sbb
push
scas
adc
popf
add
add
dec
adc
add
sub
mov
pop
xchg
dec
cld
or
mov
xchg
lods
stc
sub
inc
rol
mov
pop
addr16
mov
sbb
add
int3
rcrb
cmc
sbb
sub
jp
iret
jb
clc
pop
add
rol
mov
aam
cltd
xor
ret
inc
rcl
pop
sahf
cs
rolb
or
testl
xchg
push
enter
jno
xor
cmp
dec
gs
mov
or
sub
mov
imul
pusha
sbb
fucom
orb
sbb
adc
xacquire
fistl
jl
pop
ss
sbb
shrl
add
pop
push
minps
stos
out
mov
sahf
sti
sbb
sub
pop
and
or
loop
cmp
add
lahf
fistl
repnz
jb
rcl
inc
cmp
dec
sti
inc
push
xchg
dec
push
leave
xchg
cld
or
xchg
pop
xchg
lock
jnp
aas
movsb
add
adc
or
sub
and
clc
inc
sbb
push
shr
sbb
pop
scas
sbb
sbb
orb
sahf
dec
sbb
mov
inc
xchg
int
pop
mov
pop
fdivrp
push
mov
ss
push
and
lods
dec
lret
dec
lock
out
inc
inc
sbb
pop
jg
xorl
push
cmp
dec
test
inc
mov
jno
outsb
sub
dec
xchg
push
das
jge
cmp
loopne
pop
adc
and
out
cltd
out
scas
cmp
roll
out
adc
add
or
and
rcl
out
outsb
push
test
fld
jle
out
jns
sar
hlt
aam
rorl
arpl
test
push
cwtl
negb
stos
sbb
push
mov
sbb
dec
addr16
shl
adc
lret
or
pop
jne
cmp
fld
jg
dec
inc
sbb
ljmp
fsts
lret
lret
or
pusha
pop
pop
rcll
loopne
mov
mov
insl
sub
and
in
aam
fmull
icebp
cmp
cwtl
sbb
or
mov
lea
push
dec
scas
xchg
or
stc
fisttpl
mov
addl
sbb
icebp
pop
fistpl
lret
mov
aad
popa
xor
sbb
popf
mov
push
fisubrs
lahf
jb
pop
or
add
fstp
adc
arpl
jmp
clc
adc
add
negl
jno
cmp
pop
mov
int
sbb
leave
hlt
pop
adc
test
jno
add
inc
pushf
mov
repz
sbb
or
sbb
cld
lcall
sub
scas
push
pop
push
xchg
xchg
int
cltd
fistpl
fdivr
sbb
pop
dec
gs
or
jge
call
fwait
pop
pop
xor
add
or
adc
jnp
in
pop
outsb
mov
mov
pop
inc
sti
xchg
pop
call
sbb
clc
mov
mov
push
ljmp
pop
push
rolb
fmull
sbb
push
pop
rol
jl
fistl
and
push
mov
cli
cmp
lret
cmpb
adc
movsl
adc
and
int3
sbb
das
sbb
call
mov
adc
add
push
ljmp
push
notb
or
pop
inc
lock
cmp
rcll
lods
adc
push
std
leave
or
pop
scas
scas
cmp
adc
pop
pop
insb
push
adc
cmp
imul
mov
lods
add
loope
std
cltd
pop
sahf
pop
sub
stos
lods
sbb
rcll
push
adc
xchg
in
mov
cwtl
or
test
mov
sub
push
pop
repnz
cmp
pop
adc
sub
sti
sub
cld
in
pop
test
cmp
lods
lds
pop
divb
imul
push
insb
in
ret
outsl
or
adc
xchg
mov
fimull
xchg
add
xchg
or
cmp
mov
lock
add
xor
xor
or
ds
stos
loop
sti
mov
repz
push
cwtl
sbb
and
imul
in
sub
xchg
xchg
adc
pop
ret
incb
dec
push
mov
popf
jb
dec
shl
mov
pop
icebp
cmp
xor
push
cmpsl
out
xor
and
xor
test
cmc
aas
inc
or
add
mov
sbb
jo
or
xchg
enter
pop
dec
cltd
int3
loope
sub
imul
sub
push
push
sub
sub
or
pushf
xor
push
mov
push
in
lock
jnp
out
mov
push
shrb
in
xchg
imul
mov
push
jge
shll
inc
inc
daa
in
lock
sub
mov
pop
aaa
nop
sbb
stos
mov
jnp
in
adc
or
xchg
fnstsw
rcll
ds
fwait
icebp
loop
or
sub
scas
cmpsl
xorw
lock
in
add
mov
icebp
push
scas
je
shld
fidivl
std
xchg
xchg
testb
and
and
sysexit
or
push
xchg
xchg
adc
cld
arpl
xor
lret
mov
pop
add
mov
pop
mov
pop
sbb
mov
xchg
or
xorl
pop
mov
push
loop
shl
je
out
mov
or
xchg
jne
pop
jecxz
cltd
inc
lret
push
lret
fldt
inc
dec
cmp
testb
icebp
iret
lret
mov
mov
adc
dec
push
icebp
adc
xchg
jnp
loopne
and
outsb
pop
pushf
push
lcall
adc
jecxz
add
dec
push
enter
add
pop
pop
and
in
jmp
adc
adc
fnstsw
mov
data16
insl
loop
add
dec
sahf
rol
aad
dec
dec
cmpsb
mov
loop
mov
out
cmpsl
jp
add
xor
dec
and
call
cmp
adc
movsl
pop
dec
insb
inc
push
aaa
pushf
add
cmc
popf
adc
or
into
loopne
sub
xor
stos
mov
rcr
inc
call
int
xor
cmp
mov
mov
add
and
push
add
pusha
ds
xor
sbb
push
mov
jo
sub
xor
pop
xor
add
pop
lock
push
adc
xchg
lds
mov
push
dec
xor
fisttps
xor
add
pop
xor
enter
sbb
rolb
pop
adc
fsubs
dec
mov
fwait
outsb
call
pop
or
sbb
into
out
or
lahf
mov
scas
mov
cmp
inc
adc
push
in
mov
xchg
cmp
xchg
mov
cmp
mov
cmpsl
popa
mov
cmpsl
lcall
adc
push
bnd
scas
jb
loope
ja
or
pop
adc
pop
adc
out
cmp
pushf
adc
ljmp
jge
xor
lahf
or
rcrb
fcompl
test
jge
and
xor
aaa
dec
rorl
push
dec
inc
cmp
dec
mov
cmp
pop
aas
jg
push
inc
stc
out
orl
aas
outsl
aad
or
shl
rorl
push
lcall
daa
adc
inc
scas
xor
inc
call
pop
ret
dec
std
insb
add
lcall
push
test
and
sub
mov
cli
pusha
add
jge
icebp
adc
pop
mov
popf
adc
repz
jge
js
and
push
pop
sub
or
fnsave
push
pop
inc
dec
pop
sbb
shrl
pusha
mov
lahf
or
nop
lcall
or
loope
and
pop
sbb
enter
or
pop
or
jo
loope
in
inc
jp
push
insb
sbb
mov
pop
inc
cltd
push
pop
imul
imul
aaa
pop
sbb
fldenv
cmpsb
jmp
mov
sub
ss
push
xchg
or
push
test
cwtl
sub
enter
xor
cmp
pushf
pop
push
movsb
xchg
xchg
arpl
sub
bound
les
push
xorps
xor
sbb
pop
sahf
insl
xlat
nop
mov
pop
cmpsb
dec
mov
cmc
test
mov
xchg
outsl
add
stos
adc
in
repnz
adc
aas
cmpsb
adc
and
insb
loope
dec
push
adc
or
dec
cwtl
pusha
in
xchg
push
inc
mov
icebp
imul
xchg
pop
push
pop
sbb
repnz
insl
loop
inc
xor
xchg
pop
sbb
fstpl
aaa
xor
pop
add
ss
mov
xor
jno
lods
sbb
cmp
mov
mov
push
inc
iret
and
push
icebp
jns
cmp
or
mov
fnstcw
dec
push
mov
rclb
jge
into
dec
dec
adc
or
jg
and
dec
xchg
pop
subb
in
cli
or
cmpsb
pusha
pop
addr16
push
out
lds
rorl
or
xor
push
inc
popf
movsb
pop
pop
das
stos
mov
aam
lock
fistps
out
leave
add
nop
inc
dec
or
sub
push
les
push
adc
mov
push
and
std
aaa
clc
jmp
lahf
lahf
shlb
inc
dec
push
or
mov
ret
ljmp
and
sub
leave
push
jno
adc
cmp
adc
sbb
adc
cmp
push
ja
push
xor
push
dec
lahf
and
lods
pop
pop
push
cli
fnstsw
mov
popf
insb
sub
mov
jne
cmp
sub
cmp
aaa
fsub
test
jmp
sbb
xchg
push
sahf
xor
stos
sbb
sbb
rcrl
push
ljmp
repnz
pop
jecxz
xchg
fstpt
popf
mov
iret
xor
mov
push
mov
iret
push
mov
notl
fwait
cmc
sbb
jno
mov
cmp
mov
repnz
popf
dec
dec
test
in
dec
cltd
fistpll
or
or
xorb
pop
test
and
stos
push
ret
jl
aas
ljmp
repz
pushf
aas
xchg
add
or
shrb
push
test
inc
pop
dec
loop
pop
leave
xchg
loope
inc
scas
jle
add
ret
in
adc
xchg
dec
add
movsb
lock
sub
mov
adc
in
inc
leave
scas
inc
adc
mov
and
lahf
ljmp
popf
lods
aam
mov
cwtl
data16
mov
leave
outsl
and
movsb
in
push
cmp
and
push
or
cmpsb
cmc
dec
fs
rorl
cmp
sbb
insl
or
jecxz
stos
sub
pop
inc
fs
mov
iret
pop
push
fs
pop
mov
loopne
inc
dec
sbb
pop
fidivl
gs
rorl
mov
repz
mov
shll
xchg
bound
test
dec
fiaddl
sbb
sti
es
mov
push
in
repz
test
xchg
inc
nop
dec
mov
ja
mov
jae
aas
or
mov
sbb
repz
sbb
pop
mov
loop
aaa
lock
insl
dec
cli
testl
cmp
lock
jo
sbb
xor
cli
loope
int3
dec
cmpsl
sub
push
popa
ret
inc
popa
not
cltd
sbb
cltd
jp
mov
mov
cltd
dec
pop
push
and
xchg
aam
xchg
dec
int
cmpsb
or
mov
add
and
out
push
fcoml
icebp
nop
das
jno
jle
xor
loop
shrb
stos
cmp
mov
out
sub
sahf
add
mov
cmp
or
and
add
pop
aaa
cmp
adc
das
nop
arpl
sub
mov
mov
ljmp
xor
fsts
push
push
lret
pop
mov
rcrl
mov
pop
mov
add
pop
and
ljmp
adc
loope
xchg
push
adc
pop
icebp
push
xchg
ror
incl
fwait
jge
mov
pop
xorl
stos
push
daa
push
pop
pop
dec
mov
and
push
xchg
and
inc
mov
or
roll
in
aad
inc
out
push
dec
push
adc
xchg
dec
test
mov
inc
iret
add
cmp
enter
xlat
cmp
push
push
xor
test
or
jne
clc
xor
xor
outsb
or
cmp
inc
push
lds
bnd
cmc
jp
cmp
pusha
push
cmpb
scas
cmp
lret
dec
clc
mov
cs
or
adc
idivl
cmp
push
add
sarb
or
add
cmp
xor
push
popf
icebp
sub
xchg
lret
fdivrl
dec
jb
insl
mov
mov
scas
or
push
int3
inc
movsl
mov
pop
cvttps2pi
nop
ds
and
and
ds
int
icebp
arpl
repnz
or
in
xor
and
orb
rolb
ja
int3
push
adc
inc
incb
xor
clc
push
ret
sub
dec
mulb
leave
lods
or
xchg
dec
add
out
push
jb
dec
dec
xor
cli
dec
sahf
lods
ret
cs
fisttpll
or
dec
inc
das
imul
insl
push
mov
hlt
and
lcall
pop
hlt
inc
lock
jmp
xor
push
sbb
adc
xchg
sbb
mov
daa
insb
inc
and
mov
push
nop
sbb
jmp
shlb
xor
dec
push
xor
aad
cmp
mul
cs
or
pop
test
dec
nop
push
mov
jne
in
shlb
push
lds
outsl
sub
xchg
push
add
inc
cmpsl
xchg
add
into
lret
mov
jae
dec
ss
mov
mov
push
adc
outsb
jge
cmc
outsb
insl
add
dec
aaa
xor
pop
xor
pop
cmc
adc
in
iret
cmp
sub
xchg
outsl
lods
out
push
ss
imul
jge
sub
sbb
pop
cmp
or
xchg
lahf
imul
xchg
add
push
cmp
mov
rorl
cmovb
sbb
hlt
adc
push
imul
outsl
pushf
adc
push
icebp
dec
cli
jg
sbb
leave
mov
shll
jle
push
enter
xchg
xchg
pop
dec
pushf
xchg
adc
mov
adc
adc
popf
mov
add
or
add
scas
repnz
es
xor
in
pop
insl
cmp
fildll
xor
xor
pop
inc
lret
xor
mov
or
or
xchg
sub
push
stos
mov
sbb
or
stos
cmpsb
addr16
push
jle
sub
or
push
movsl
pop
sahf
inc
cmp
into
mov
ss
add
cmp
mov
aaa
add
mov
xlat
inc
add
cmp
and
shlb
jne
pop
sbb
and
das
ja
push
mov
scas
dec
cs
pushf
dec
fadds
js
push
lds
lock
loopne
test
push
popa
lods
ds
jae
fildll
mov
and
xchg
xor
mov
loop
dec
and
pop
adc
outsb
sub
sahf
sahf
jns
or
jb
aad
push
pop
push
or
dec
xchg
outsl
cmp
adc
push
lods
mov
popf
dec
mov
cmp
mov
jae
add
or
or
adc
inc
mov
lret
movhps
rorb
mov
inc
add
mov
push
mov
xor
or
stos
bound
fs
xor
mov
jb
rcrb
pop
shll
pop
xchg
cmp
ds
aas
cmp
mov
dec
repnz
fsave
add
mov
out
fcompl
adc
adc
pop
notb
fisttpl
push
fsubr
sbb
cmp
nop
add
mov
outsl
and
mov
push
sbb
mov
or
adc
adc
add
mov
sarl
sbb
lret
xchg
dec
sbb
push
rclb
shll
cltd
xchg
rorb
nop
pop
imul
dec
mov
xchg
pop
in
xor
jge
push
bound
fisttps
dec
or
push
cmp
pop
jno
mov
dec
xor
push
or
out
inc
outsl
fnstsw
dec
test
in
aam
adc
lock
je
loope
mov
hlt
or
xchg
mov
in
push
loope
xchg
sahf
cmp
pop
addl
cmp
pop
icebp
sahf
insb
insb
xchg
push
pop
mov
mov
fcompl
cwtl
cmp
inc
xor
aam
decb
mov
sub
xor
cmpsb
jmp
mov
jecxz
adc
xchg
jmp
inc
add
mov
iret
imul
loopne
stos
cmp
outsb
test
adc
mov
jb
jmp
scas
xchg
pop
push
add
mov
sub
inc
or
insl
fldcw
inc
push
out
ds
inc
stc
nop
data16
adc
out
push
pop
add
dec
sbb
push
mov
mov
mov
es
mov
inc
add
popf
sub
or
or
xchg
lea
test
push
add
filds
pushf
sub
decl
push
test
lds
jl
push
sub
or
lds
pushf
pop
sub
adc
addr16
outsl
inc
sbb
or
xor
push
outsl
pop
adc
and
cmpsb
cwtl
add
jo
lret
lods
test
faddl
and
pop
mov
aad
test
and
daa
sub
hlt
mov
cld
add
jo
pop
subb
jno
andl
orb
sbb
push
stos
pop
es
fs
push
pop
or
add
or
mov
jae
pop
jo
fiadds
xor
lds
or
push
push
stc
mov
leave
xchg
lock
sub
or
cmp
rclb
neg
lods
or
jl
repnz
mov
jae
into
out
fwait
mov
out
jle
iret
cmp
xchg
cld
pop
mov
dec
cwtl
mov
sar
stos
fwait
lcall
pop
push
aaa
mov
into
pmaddwd
loope
shrl
cmp
fidivrl
add
push
dec
inc
lahf
sarb
repz
mov
std
xchg
in
jno
dec
jecxz
pop
push
fs
sahf
jae
jb
sub
jecxz
jb
ljmp
iret
les
gs
mov
push
cmp
dec
pop
imul
dec
icebp
data16
sbb
mov
lahf
jg
cmpb
js
or
loopne
les
sahf
ficoml
jmp
lahf
cld
out
mov
shrb
outsb
pop
jecxz
and
rcrl
inc
add
sbb
or
cmp
add
movsb
rcrl
or
push
push
adc
mov
mov
cli
push
incl
jae
cmpsl
lret
dec
repz
fisttps
lock
push
pop
ljmp
jae
gs
xchg
lahf
cli
imul
sub
xor
ds
mov
out
dec
sub
enter
iret
pop
cmp
mov
cmp
jbe
mov
cmp
xchg
push
es
jno
fnstenv
int
push
std
pop
out
mov
mov
cmp
mov
fwait
nop
sbb
movsb
push
fs
pop
in
cmc
mov
fstpt
mov
out
xor
xchg
cmp
pop
roll
adc
xlat
xor
into
xchg
fiaddl
fbstp
mov
pop
iret
les
mov
xchg
add
xchg
jnp
popa
jns
ss
cmpsl
add
sub
stos
lahf
rorb
xor
sahf
rclb
mov
insb
adc
and
adc
mov
adc
icebp
loopne
adc
aaa
mov
popa
mov
pop
iret
xchg
push
mov
dec
dec
cmc
mov
sbb
mov
or
mov
sub
loope
xorb
pop
fwait
jae
pop
cltd
xor
inc
jp
popa
push
loope,pt
jp
xchg
popf
inc
lret
jbe
cwtl
or
loopne
mov
push
add
mul
dec
fnstsw
les
pop
clc
mov
vpmuludq
add
movsl
lret
icebp
dec
and
or
arpl
aaa
add
std
push
xchg
jecxz
sbb
xlat
xchg
mov
stc
xchg
dec
shl
sbb
xchg
inc
sar
popf
mov
adc
adc
rcll
sub
xor
arpl
jmp
jo
cmp
fistpl
cltd
inc
push
cmpsl
rorb
push
scas
popf
jae
jno
xchg
jnp
enter
andb
ds
xchg
dec
cmp
mov
or
or
data16
iretw
mov
cmp
rolb
aaa
fdiv
mov
pop
insb
loope
shrb
mov
addr16
add
imul
jo
lds
dec
loopne
xchg
cmp
in
and
outsl
das
pusha
add
pop
and
aas
push
and
bound
sbb
lret
jb
into
int3
out
xchg
repnz
mov
insb
pop
mov
inc
mov
pop
out
dec
xchg
and
push
jmp
xchg
xchg
adc
jb
xchg
mov
in
lock
es
fistl
ficomps
xchg
sbb
or
sbb
sbb
pop
sahf
push
sbb
loope
lret
xor
add
sbb
ficoml
adc
bound
inc
shlb
cld
adc
or
inc
xor
stos
rcll
mov
icebp
cmpsl
adc
jnp
sti
dec
pop
mov
mov
mov
fisttps
push
stos
lahf
in
push
stos
jb
in
jnp
cmp
xor
xchg
sub
jb
and
jp
sbb
dec
dec
mov
adc
and
adc
repz
jb
mov
push
cmpsl
adc
dec
adc
adc
nop
sbb
push
dec
std
xor
das
cmp
inc
in
aad
add
push
lretw
or
scas
xchg
cltd
int
subb
push
cmpsl
or
and
and
cmp
adc
ss
cmpsb
jecxz
pop
bound
pusha
jle
add
mov
cmp
sbb
out
push
and
iret
push
lock
xor
add
push
xchg
jg
pop
ja
and
int3
cmpsb
test
cmp
or
addr16
les
and
sahf
pop
daa
icebp
std
nop
push
cs
or
or
adc
testl
ficomps
stos
xchg
mov
and
jge
mov
sbb
xchg
hlt
in
bound
repnz
adc
test
push
inc
mov
test
mov
adc
adc
sahf
pop
stc
jns
repz
adc
out
xor
xchg
cmpsb
push
mov
adc
stos
sbb
test
mov
fpatan
xchg
fidivs
push
lock
icebp
sub
push
decb
mov
cmpsl
adc
enter
push
adc
mov
aad
repnz
icebp
dec
sti
or
daa
ret
in
jae
add
cltd
loope
in
pop
push
push
inc
repnz
pop
xchg
call
shl
jae
pop
inc
inc
inc
jmp
outsb
adc
int
adc
rcll
jb
push
les
or
out
jp
and
sahf
xchg
and
orb
sbb
repz
inc
xor
inc
js
and
push
loopne
push
rcrb
mov
xor
dec
pusha
dec
outsb
in
add
inc
xchg
aas
add
les
push
mov
add
push
shl
jo
adc
mov
aaa
pushf
push
out
sbb
jae
ds
mov
or
ds
inc
xchg
das
iret
add
icebp
aas
mov
pop
mov
xchg
sbb
in
xchg
inc
add
mov
mov
pop
js
push
pop
add
xchg
test
hlt
add
pop
sbb
insb
shll
ljmp
lock
add
cmp
adc
lock
outsl
rep
push
adc
hlt
repz
pop
loopne
movsl
movsl
push
mov
jne
jae
in
repz
xor
cwtl
adc
aaa
adc
shrl
nop
ds
pop
mov
or
xor
mov
mov
pop
mov
dec
pop
outsl
cmp
cmp
arpl
push
xlat
push
insl
push
or
push
cmc
jno
clc
inc
inc
mov
sub
xor
or
pop
pop
mov
xor
mov
or
adc
popf
je
fs
push
cld
mov
push
xlat
jp
jp
add
push
pusha
mov
mov
subb
inc
jg
or
inc
or
push
sbb
push
mov
jge
pop
push
push
jns
push
or
jb
cmpsl
pcmpeqd
imul
pop
les
xchg
test
jbe
test
out
loope
mov
mov
inc
fldl
push
aaa
xor
test
sub
xchg
scas
push
xor
ds
repnz
inc
fadds
sbb
pop
mov
xchg
enter
cmc
push
dec
leave
in
stos
lret
shlb
sub
jne
pop
cmp
mov
clc
mov
call
nop
mov
add
repz
xor
mov
cmp
mov
cwtl
fmull
sbb
sbb
cmpsl
mov
insl
and
cwtl
and
adc
lea
mov
mov
xor
sahf
sbb
in
adc
cs
dec
pop
dec
movsb
jp
aaa
xchg
dec
icebp
loop
jbe
sbb
xchg
fcompl
movb
add
mov
inc
push
jmp
push
jae
add
or
stc
jle
xor
xchg
cmp
jg
xor
adc
jmp
fcmovnb
lock
push
nop
dec
dec
mov
aas
jle
mov
imul
fcoms
out
jl
hlt
mov
mov
adc
sbb
pop
and
push
sbb
jge
movsl
mov
lods
dec
mov
insb
jmp
sub
pop
pop
shrl
pop
and
insb
dec
aad
ss
xchg
mov
push
rep
pop
fwait
mov
pop
aas
imul
imul
cmp
pop
cmp
pop
inc
cmp
dec
adc
add
dec
jle
and
dec
outsb
ja
pop
adc
mov
push
cmp
adc
into
or
outsl
aas
xchg
cmp
out
add
adc
lock
and
aas
fnstenv
ret
dec
add
adc
adc
pop
cmc
xchg
fcmovnbe
lret
fistl
dec
xchg
push
or
mov
push
mov
adc
push
ljmp
cmpsl
dec
inc
push
push
xchg
ret
dec
lea
and
cmp
mov
adc
lret
pop
xchg
test
inc
ja
pop
not
repz
lahf
cltd
fs
pop
stc
sbb
dec
outsb
mov
pop
lock
jg
inc
pop
fisttpl
jb
cmp
dec
cmp
repnz
jp
mov
data16
das
adc
dec
mov
outsl
add
jmp
adc
mov
dec
mov
dec
ret
xlat
or
mov
popf
cmpsl
mov
push
xchg
in
adc
aaa
in
sbb
aas
ret
out
sbb
test
xchg
pop
aad
mov
mov
pushf
push
push
jo
aaa
test
inc
add
es
push
inc
pop
adc
lahf
adc
insb
mov
or
push
or
sbb
fiadds
cmc
pop
mov
adc
jo
mov
nop
lret
jecxz
lret
sbb
lret
insl
fists
test
mov
add
jg
fidivrl
iret
push
add
lods
jecxz
adc
jle
sub
lea
out
into
pop
and
das
sbb
pop
jo
dec
shlb
dec
pop
sbb
repnz
out
sub
sbb
push
lret
or
call
sbbb
push
mov
fidivrs
insl
xor
push
xchg
pop
jno
xchg
add
jne
adc
xchg
push
add
pusha
mov
inc
sub
xchg
cli
sbb
cwtl
xchg
push
sahf
sub
sbb
lcall
jne
sub
dec
lods
aam
cmp
sub
fisubrs
sub
ret
push
or
push
or
adc
aam
call
xchg
jno
nop
push
pop
test
adc
daa
out
cmp
push
adc
push
mov
loope
adc
inc
iret
pop
div
mov
rolb
nop
cmpsb
or
adc
xor
adcb
bnd
mov
orl
mov
or
inc
dec
fucom
add
out
cmp
ljmp
fwait
lcall
push
xchg
push
in
lods
in
sbb
jns
shlb
cmc
outsb
mov
push
decb
test
pop
int3
insl
in
dec
js
adc
in
or
jp
or
sub
mov
xchg
add
sbb
or
pop
push
fcmovu
adc
or
adc
or
sub
cmp
pop
inc
inc
and
jecxz
call
push
sub
adc
cmp
inc
push
int3
and
or
mov
push
xchg
push
inc
and
mov
pop
push
into
inc
dec
fmull
dec
sahf
icebp
in
fwait
jg
cmpsb
lods
jbe
pop
jne
xchg
ret
pop
fdivrl
jl
add
das
xorl
sbb
lock
arpl
mov
inc
mov
dec
cmpsl
adc
pop
push
pushf
test
icebp
or
mov
xchg
divb
xorb
dec
cmp
or
jae
jne
fs
loope
add
stos
daa
fdivrp
mov
add
icebp
dec
cmp
sub
cli
je
imull
fsts
test
and
push
int3
cli
jl
and
ds
cmp
sbb
sbb
popf
jge
sub
jmp
add
aaa
or
pop
xchg
fsubs
bnd
xor
rcrl
mov
pop
cs
push
cmc
xchg
mov
add
sarb
cmpsb
arpl
icebp
and
loop
loope
lods
clc
idivl
cli
pop
in
daa
inc
push
inc
push
push
inc
out
rcr
dec
xchg
dec
mov
lret
push
sbb
icebp
in
in
aam
xor
stc
pop
in
mov
sahf
pop
and
clc
mov
xchg
sub
cmp
lods
jge
or
cmc
xchg
lcall
jle
add
icebp
jp
pop
pop
dec
inc
mov
mov
push
push
jmp
daa
and
lock
sub
pop
sbb
jno
repz
push
pop
add
sbb
adc
jmp
and
enterw
sbb
fucomi
dec
ret
or
push
in
roll
xchg
adc
pop
int
push
mov
xor
scas
add
inc
push
cli
popa
cmp
dec
inc
inc
cmp
pop
push
push
dec
cli
stc
jle
or
xchg
jno
push
data16
pop
xchg
ss
sbb
sub
inc
repz
dec
out
ss
insl
and
pop
nop
bnd
jle
shrb
jae
pop
les
xchg
in
sbb
fildll
push
clc
mov
xchg
pop
xor
mov
mov
addr16
aam
xchg
push
jecxz
rolb
add
jmp
mov
fistl
dec
sbb
aas
nop
decl
dec
xor
fwait
pop
add
adc
inc
ds
pop
jl
xchg
lahf
pop
popf
pop
xchg
sub
and
das
pop
pop
mov
jg
and
jge
or
nop
ds
inc
push
mov
sub
jecxz
in
cmp
sub
xorb
mov
lds
ret
add
inc
cmp
cmp
filds
or
mov
or
jl
pop
xor
xchg
xchg
popa
cmp
pushf
dec
push
pop
push
xor
jmp
adc
test
pop
xchg
xchg
cli
test
adc
xchg
cmp
xor
aas
pop
cmp
or
adc
adc
adc
xchg
sub
ret
sub
mov
mov
or
sbb
and
cmp
cmpsl
fists
mov
mov
mov
ds
pop
mov
popf
lcall
pop
jns
adc
sub
dec
adc
push
push
pop
xchg
es
das
sub
sub
cmp
pop
push
push
jo
rcrl
cmp
or
fcmovbe
push
adc
fimull
adc
push
cmp
pop
jecxz
aad
dec
push
and
push
or
sub
adc
cmp
outsb
pop
push
rorb
push
fmuls
lods
cmp
mov
push
mov
aam
clc
shlb
push
lods
shlb
lahf
mov
xchg
test
add
je
push
push
addb
jno
das
add
jns
aas
mov
push
cmpsb
fistps
dec
add
mov
xor
or
cmp
add
in
adc
jmp
xchg
icebp
or
xor
push
mov
sub
xchg
pop
and
fbstp
adc
vfrczpd
call
lcall
faddl
mov
xchg
rcll
xchg
xchg
movsl
cmp
push
cli
out
inc
mov
dec
adc
or
mov
pop
pop
test
or
mov
cmp
add
mov
xor
push
or
pop
pop
out
xchg
in
or
xor
push
repnz
or
adc
xor
and
mov
and
stos
adc
cmp
or
push
test
adc
rolb
ret
leave
add
sub
push
inc
cmp
push
cmp
pop
pop
xchg
daa
add
daa
mov
cmp
push
push
pop
cmpsl
fstl
xchg
adc
adc
cmp
push
call
cld
cmp
sarl
push
enter
add
stos
mov
fcoml
mov
xorps
push
pop
xchg
mov
std
sbb
push
imul
rcll
jae
jl
stos
pop
mov
xchg
cwtl
cmp
sbbb
lahf
pushf
pusha
bound
pop
or
nop
push
or
cmp
push
adc
sbb
xor
push
testb
ret
push
push
jnp
sahf
cs
mov
sub
leave
dec
or
cmp
test
mov
test
ds
pop
nop
mov
notb
pop
jnp
rcll
jg
js
inc
pop
dec
dec
nop
dec
or
push
pop
ret
or
push
pop
mov
cmp
pop
sub
add
maxps
mov
or
sbb
in
adc
xchg
in
or
xor
push
repnz
cmp
pop
iret
xchg
int
lret
xor
push
jae
rcl
or
adc
xor
cmp
or
mov
nop
nop
sahf
or
xchg
pop
jnp
nop
enter
cmp
dec
dec
nop
dec
or
push
push
pop
xchg
es
das
sub
test
or
popf
sahf
nop
cwtl
or
sub
aas
adc
add
jge
or
pop
jno
xchg
ljmp
inc
cmp
out
sahf
jmp
icebp
pop
ljmp
ret
int3
adc
sahf
aad
add
add
or
add
fists
test
mov
mov
mov
or
add
xchg
mov
insb
xchg
fisttpll
add
movsl
mov
mov
cmp
xchg
cmp
gs
mov
jno
jle
xchg
inc
add
inc
mov
push
push
pop
pop
xchg
and
push
and
push
cmp
or
add
adc
sbb
in
sbb
push
in
xchg
cmp
pop
std
nop
clc
or
cmp
push
int
lret
pop
fstp
nop
fmuls
test
xchg
mov
cmp
push
lea
popf
sahf
nop
cwtl
or
arpl
xchg
je
jge
nop
js
dec
cmp
push
dec
xchg
push
pop
pop
pop
nop
pop
or
cmp
push
sub
pop
cmp
or
push
or
pop
sbb
jmp
loope
jmp
cmc
xor
sahf
or
aas
rcll
aad
rcrb
fstps
mov
xor
sahf
xchg
cmpb
push
mov
pushf
cltd
sahf
or
popa
push
imul
jns
inc
or
inc
push
dec
mov
push
pop
pop
pop
sahf
or
aas
and
mov
cmp
add
xchg
xor
or
sub
in
loop
adc
push
ljmp
clc
push
leave
mov
cmp
push
lret
roll
test
push
stos
jb
push
jo
jp
inc
xor
dec
mov
jl
pop
xchg
adc
xchg
xchg
and
or
jbe
jle
push
jle
js
dec
cmp
dec
inc
xchg
adc
push
pop
ss
and
cmp
nop
cmp
xor
xchg
cmp
pop
sbb
nop
sbb
adc
in
cmp
pop
jmp
std
xor
push
les
leave
pushf
pop
sbb
fldt
cmp
pop
stos
mov
xchg
mov
cmpl
pop
mov
lahf
cwtl
xchg
imul
push
je
jge
jg
xchg
dec
or
dec
pop
dec
adcb
adc
fsubs
xor
add
xor
add
xchg
or
cmc
pop
sbb
pop
adc
nop
in
or
cmp
push
icebp
xchg
cmp
pop
leave
ret
or
cmp
push
roll
test
movsl
cmp
push
mov
mov
adcb
push
xchg
xchg
bound
ja
jno
jle
js
dec
inc
nop
dec
or
push
push
push
xchg
pop
pop
sub
nop
sub
and
xchg
cmp
pop
or
nop
or
add
xchg
cmp
cmp
sbb
loopne
sahf
ljmp
mov
xor
sahf
lret
aas
fstl
mov
xor
sahf
stos
or
mov
lea
popf
push
lahf
mov
insl
sahf
push
je
jge
jg
jns
inc
pop
inc
dec
sahf
dec
or
push
pop
mov
es
and
aas
cmp
xor
sahf
or
adc
sbb
pop
out
cmp
push
out
jmp
cmc
add
cmc
mov
cmp
push
into
lret
xchg
cmp
cltd
add
add
or
cmp
push
jmp
out
cmp
pop
jmp
xor
push
mov
cmp
pop
leave
ficoml
fsts
mov
mov
aaa
inc
out
xor
xchg
pop
cmp
jle
dec
jmp
adc
pop
fwait
fs
sub
push
add
xor
jp
xchg
xchg
movsl
inc
xchg
adc
out
push
xor
ss
fidivrs
jns
imul
sbb
out
insb
sbb
sub
in
ljmp
jmp
jmp
xchg
dec
adc
inc
clc
cld
ljmp
or
mov
and
fldcw
lcall
adc
sbb
cmp
outsl
mov
dec
push
xor
sbb
in
mov
xchg
pusha
outsl
mov
adc
pop
bnd
daa
push
jne
pusha
pop
or
xor
cmp
lods
jnp
cmp
push
xchg
lret
sbb
pop
cwtl
or
inc
add
push
xchg
pop
xor
xor
dec
data16
xor
cmp
loop
sbb
sbb
repz
pop
stos
adc
icebp
out
in
test
mov
sbb
mov
fistl
jnp
jp
add
inc
mov
or
sbb
insb
mov
push
add
or
cmp
popf
add
dec
adc
cmp
mov
xor
mov
sbb
imul
repz
mov
pop
push
push
pop
rorl
add
xchg
inc
and
or
insl
pop
lods
outsl
fldcw
add
int
jecxz
jo
jl
clc
aam
popa
push
ljmp
jb
pop
jbe
negb
or
clc
stos
push
adc
vmwrite
mov
popf
das
and
fsubrs
enter
pop
pop
and
sub
nopl
pop
push
xor
push
pop
push
push
or
in
xor
loope
iret
lock
cmp
aas
xchg
push
xchg
mov
stc
test
sbb
xor
jg
adc
mov
xchg
add
mov
adc
fwait
jp
push
cltd
xor
pop
inc
pop
cmp
jbe
incl
jae
mov
gs
push
repnz
adc
adc
xor
xchg
gs
mov
movsb
and
lock
or
in
or
loope
adc
jmp
mov
or
cmp
or
mov
fmull
add
sbb
mov
cmp
lahf
pop
addr16
mov
sbb
jge
or
push
jecxz
sub
push
js
and
mov
mov
arpl
insl
rcrb
dec
cltd
adc
icebp
jecxz
pop
xchg
or
out
int
and
push
loope
movsb
out
stos
loopne
or
sbb
xchg
pop
lahf
imul
bound
cmp
mov
jmp
pop
and
popf
imul
xchg
je
cmc
add
pop
or
push
mov
out
loopne
adc
loop
ds
vcvtss2sd
dec
loopne
mov
mov
outsb
adc
vpmacsdd
jl
rorw
insl
push
sbb
push
inc
aad
out
xchg
out
dec
in
push
dec
loop
xchg
and
xchg
sub
ret
pop
testb
adc
and
sub
in
psllq
push
in
mov
cmp
or
dec
stos
aam
sbb
xor
inc
and
lods
pop
adc
xor
or
stos
or
or
jp
xor
or
ds
push
pop
lret
inc
out
arpl
notb
sbb
sub
pop
sti
mov
adc
mov
adc
push
jmp
cmp
test
jno
popa
out
loopne
pop
adc
and
and
jge
mov
fidivs
fnstsw
fdivrl
or
lock
je
js
sbb
aaa
mov
adc
and
inc
gs
loope
pop
jno,pn
stos
es
data16
loope
jp
xor
loop
daa
adc
out
sbb
and
sub
loope
sub
daa
addr16
xchg
fildl
sbb
adc
push
bound
clc
jecxz
arpl
bnd
fidivrl
adc
and
mov
divl
push
aas
adc
mov
lahf
pop
mov
addl
mov
fdivr
in
push
sub
call
cmp
jp
inc
aam
orb
lods
out
add
repnz
push
push
divb
pop
jg
lcall
mov
or
adc
dec
imull
dec
in
xor
or
push
shlb
dec
cmp
mov
leave
adc
sub
hlt
sbb
xchg
push
rolb
lods
pop
in
cmc
adc
stos
sbb
adcb
jne
call
dec
cmpl
sub
and
pop
xchg
dec
jle
loop
pop
mov
and
or
int3
mov
xchg
or
push
adc
in
jmp
mov
and
dec
out
push
sarb
mov
lahf
ja
xor
pop
or
push
dec
lahf
loop
push
rorb
arpl
out
inc
pop
sub
ds
jle
aas
lock
xchg
inc
and
or
fwait
pusha
jg
lcall
aam
mov
xor
mov
nop
nop
std
outsl
or
pusha
mov
mov
sub
notl
lcall
jle
pop
mov
cmp
rcrl
call
and
dec
pop
jne
nop
nop
or
xchg
cmp
cmp
jne
cmp
aas
popf
push
mov
pop
cli
out
lahf
adc
fwait
add
pop
mov
imul
fdivrs
sbb
or
adc
cmp
adc
pop
push
mov
fsts
stc
xchg
jmp
in
adc
add
sub
push
mov
mov
jnp
push
js
or
cmp
inc
push
jne
cmp
fmuls
fnstcw
push
jmp
sysexit
ds
pop
dec
sahf
jb
xchg
aas
mov
mov
pop
les
jmp
adc
sbb
xor
out
push
or
push
je
mov
xlat
xchg
lret
or
xor
pop
add
mov
inc
pop
jg
xchg
imul
ds
ret
adc
xchg
jae
push
ds
pop
or
int3
fwait
and
mov
mov
js
sahf
pop
or
or
and
pop
xchg
inc
sbb
xor
mov
xor
cmp
sub
pop
cmp
add
inc
outsb
cmp
cmpsb
cmp
inc
jg
or
sahf
push
jle
pop
push
and
or
and
xor
cmp
inc
inc
xchg
daa
or
jne
icebp
or
popa
sub
adc
bound
sbb
adc
das
mov
xorb
sbb
jbe
js
outsl
add
adc
dec
push
xchg
sub
add
sbb
sbb
not
adc
mov
cmp
imul
xor
mov
cmp
fwait
sbb
push
jge
jae
fidivrs
adc
imul
mov
cmp
jecxz
cltd
cmc
or
xor
cmp
mov
adc
inc
sub
ret
pop
push
cmp
jl
cmc
adc
push
fldl
or
adc
pop
pop
inc
xchg
mov
xchg
orb
aas
addr16
inc
mov
and
add
jno
mov
push
mov
mov
in
inc
push
pop
mov
cmp
mov
push
sahf
push
sahf
nop
rolb
or
es
adc
push
cmp
pop
aas
or
push
or
jge
lock
leave
push
aad
cmpsl
xor
sahf
outsb
or
xchg
cmpl
cmp
adc
mov
xor
xchg
pop
ret
jg
sahf
dec
popa
adc
adc
sbb
or
xchg
cmp
and
xchg
or
mov
push
pop
sub
xchg
adc
stc
sub
push
stos
xchg
call
scas
or
cmp
xor
jno
xchg
mov
adc
sbb
sub
fwait
push
add
jl
add
pop
sbb
mov
push
sub
pop
push
mov
imul
push
or
or
imul
adc
mov
dec
pop
jo
sahf
in
cmpsb
sbb
sbb
jnp
arpl
jne
inc
cwtl
ja
ja
push
jnp
jno
jnp
fisubs
push
pop
out
push
pop
bound
movsb
jne
dec
jno
jp
lods
mov
pop
mov
pusha
or
jo
outsb
addb
push
jnp
out
js
push
sbb
push
js
insb
inc
push
sub
ja
pop
inc
pusha
dec
pop
setns
jnp
out
jbe
cld
and
jp
shlb
cmp
inc
sahf
jge
pop
xor
sahf
sbb
test
and
out
bound
ss
jnp
dec
mov
and
je
sbb
insl
mov
mov
push
mov
test
dec
or
imul
push
add
pusha
mov
scas
movsl
jecxz
inc
push
cmp
jne
push
imul
shll
pop
jno
inc
shr
fsubrs
fwait
inc
pop
pop
insb
sub
pop
jns
cmpl
jmp
adc
dec
pop
scas
xor
adc
movsb
out
cmp
iret
mov
xorl
or
imul
cwtl
pop
test
dec
test
jo
sarl
pop
jge
sub
sarb
and
push
sbb
inc
push
stos
pop
and
jne
pop
pop
pushf
jge
cld
pushf
jbe
cwtl
xor
and
or
cmp
fistpll
jle
jecxz
in
mov
aad
arpl
fildll
push
dec
mov
aas
insl
xchg
dec
rcrl
dec
pushf
or
inc
insb
je
aas
nop
imull
jp
je
jg
daa
push
mov
push
push
add
sub
cltd
iret
xchg
pop
jle
pop
xor
lea
cmp
ss
inc
push
dec
inc
lds
fildl
fnstenv
dec
test
adc
push
arpl
pop
sarb
sbb
stos
push
ja
flds
xchg
xorl
inc
in
aaa
push
ja
xchg
adc
aaa
pop
adc
and
enter
xchg
jmp
cmp
cmp
and
lea
mov
stos
adc
push
xchg
aas
push
jg
dec
pop
cmp
dec
xlat
pushf
arpl
outsb
mov
pop
jle
iret
inc
insl
jbe
fiadds
popl
push
pop
dec
sbb
push
not
jno
inc
mov
mov
arpl
je
jne
xorl
mov
pop
adc
jo
mov
pop
xchg
jae
xchg
in
daa
dec
repnz
insb
inc
in
push
imul
cmpb
sub
loope
push
or
aas
jg
cmp
mov
xchg
pop
arpl
push
pushf
fisttpl
pop
pop
push
mov
mov
mov
call
dec
xor
imul
push
adc
andl
rol
pshufw
scas
or
inc
push
jae
popf
stos
sti
dec
dec
mov
cmp
jne
xchg
dec
xchg
insl
mov
addr16
xor
repz
xor
or
ror
push
add
fwait
or
sub
mov
rcll
in
pop
push
in
lods
cmc
xor
xchg
movsl
fdivs
dec
push
dec
imull
clc
scas
popa
shll
mov
adc
jb
sbb
jg
movsl
loop
ljmp
div
movsl
pushf
sub
mov
adc
dec
fwait
cld
aam
jle
adc
mov
out
sar
test
lods
xchg
mov
inc
subl
jbe
pop
sbb
or
clc
cld
adc
ss
andl
inc
jns
lret
push
xor
data16
arpl
xor
push
test
jne
or
jo
aam
adc
jns
dec
or
fistpl
pop
ja
pop
sahf
daa
je
mov
push
mov
movsl
dec
hlt
shr
xchg
shrl
or
or
sahf
adc
and
cmp
outsl
in
stos
mov
fmuls
je
test
bound
jno
into
push
push
test
xchg
mov
andl
dec
pop
xor
pushf
outsl
mov
cmc
ja
add
lret
inc
jle
cmpsl
shlb
stos
push
int
ficoms
cmp
mov
jne
cmp
add
pusha
repnz
cmp
dec
test
sahf
cmp
ficomps
dec
push
mov
push
push
xor
fs
lds
mov
hlt
xchg
pop
sbb
shlb
jbe
mov
mov
push
lods
in
jne
das
adc
mov
clc
flds
add
ss
movsb
sahf
or
or
scas
mov
pop
jo
ja
adc
addr16
push
imul
dec
push
mov
sub
gs
jo
cwtl
repnz
aam
jg
test
push
cmp
fldt
imul
stos
cmpb
aas
sub
dec
call
cs
cmp
daa
pop
lea
add
test
punpckhwd
pop
push
stos
mov
xor
nop
mov
rep
lds
add
pushf
push
fnsave
adc
out
pop
cmp
outsl
iret
adc
jae
jb
jp
push
pop
xchg
jns
js
mov
stc
mov
jae
psubsb
cmpsl
push
xor
test
cmp
push
mov
std
out
gs
xchg
cltd
sarl
ret
dec
push
pop
jg
lret
mov
adc
sbb
test
into
inc
xor
pop
mov
adc
mov
xchg
repnz
xchg
sub
mov
rorb
add
aaa
pop
js
rol
fnsave
sbb
and
rorl
ss
adc
mov
cmp
push
std
adc
mov
aas
cmp
pop
sarb
push
and
cmp
sbb
sub
add
inc
or
jle
aas
pop
movsb
mov
mov
mov
pop
jg
pop
out
adc
ss
arpl
sbb
ljmp
jle
pop
inc
push
and
or
mov
jg
lods
out
jnp
fwait
push
mov
fwait
pop
push
xor
aaa
ficoml
mov
dec
xchg
sahf
xchg
pop
das
aas
xorb
mov
or
xchg
imul
push
and
xchg
popa
imul
cmpl
xor
int3
cmp
sub
aaa
adc
and
cmp
jne
imul
fwait
or
sahf
hlt
push
in
xor
jp
cmp
xchg
mov
dec
jmp
push
pop
add
adc
repnz
in
sbb
jno
mov
inc
fldenv
push
aas
sub
cli
jge
sub
adc
js
adc
add
out
popf
mov
lahf
js
cld
in
dec
mov
xchg
pushf
ret
or
pusha
or
push
add
lret
push
jo
and
mov
pop
decl
inc
or
mov
add
shl
sbb
push
cmp
loopne
cmpsl
or
push
and
insb
mov
inc
js
xchg
ficompl
cli
adc
add
popf
bound
cmp
rorb
imul
mov
sub
pop
mov
add
pop
sahf
dec
push
dec
scas
repnz
push
xrelease
dec
jg
jle
add
in
sub
out
push
cltd
mov
inc
cmpb
ret
loope
mov
xchg
mov
ss
pop
dec
pop
pop
mov
inc
sbb
les
mov
pusha
rorb
sahf
jae
outsb
pop
jbe
out
aad
jo
dec
iret
dec
mov
jl
and
cmpsb
sub
or
and
push
jnp
scas
add
aas
sub
dec
jnp
pop
jbe
xchg
pop
dec
inc
pop
mov
imull
and
pusha
test
fcmovu
push
jne
mov
andl
repz
cltd
jo
dec
rcrl
adc
add
out
adc
pop
jl
mov
pop
mov
jo
and
sub
push
pop
fcom
cmp
ds
mov
xor
aaa
and
jle
js
fs
sub
jne
adc
test
out
xor
push
aaa
pop
test
pop
sub
xchg
xor
pop
cld
xchg
push
int3
and
inc
pop
or
enter
or
xlat
push
dec
hlt
sub
aad
nop
aam
push
pop
in
pushf
inc
sub
push
push
int
pop
inc
push
and
xchg
push
faddl
ds
push
jbe
jnp
divl
adc
test
mov
pop
inc
rorl
sqrtps
sti
jg
mov
mov
xor
sub
pusha
and
push
xchg
pop
data16
push
push
add
adc
push
jns
sbb
cmpsl
pop
xor
lods
xchg
sbb
das
testl
inc
dec
sub
gs
adc
pop
icebp
andl
scas
or
jne
fisttpl
cmp
dec
andl
dec
xchg
xor
cmp
push
sub
adc
xor
aas
sbb
xchg
bound
cltd
sti
insb
mov
push
rorb
push
or
bound
pop
push
add
sbb
push
aas
jb
sbb
mov
xchg
dec
nop
and
add
in
js
jecxz
lods
inc
fstpt
sbb
cmp
fistps
pop
rcrb
dec
popa
pop
pop
inc
push
fs
sahf
in
inc
dec
push
cmp
pop
pop
leave
add
pop
cltd
aas
lods
push
jge
jnp
mov
leave
push
ds
bound
mov
add
repz
push
pop
sbb
push
aaa
pop
pop
push
jbe
mov
or
and
push
inc
shlb
add
cmp
jno
je
jno
mov
sar
jbe
xor
les
jbe
adc
ds
sub
dec
cmp
add
insb
jno
xchg
pusha
add
mov
dec
add
outsb
cmpsl
sub
jle
repz
roll
clc
or
or
jno
bound
mov
aaa
imul
mov
pop
push
or
mov
cmp
insl
adc
xchg
jno
cmp
cmp
movsb
jle
sahf
in
aas
xor
jl
jns
push
push
jle
jns
cli
shrb
adc
pop
mov
mov
push
jmp
add
inc
nop
leave
pop
prefetcht0
dec
push
je
aad
pop
ds
cmp
ret
inc
int
inc
sarl
cmp
sbb
pop
shll
mov
inc
imul
cmp
xor
xor
and
push
xor
jge
ja
sahf
xor
and
mov
xchg
adc
dec
dec
cld
dec
sbb
xchg
addr16
sub
xor
ret
or
mov
mov
xchg
mov
test
xor
sbb
insb
repnz
push
push
or
add
dec
xchg
loope
inc
inc
inc
mov
out
adc
in
aaa
popf
lods
pop
repz
mov
cmpb
dec
dec
push
push
ret
jle
neg
mov
sahf
push
bound
dec
bound
pop
iret
inc
mov
sub
xchg
add
aaa
mov
push
pop
imulb
jne
mov
dec
pop
mov
dec
xlat
iret
xchg
adc
imul
inc
xor
xchg
ss
popf
mov
rolb
ret
dec
adcb
adc
stos
cmpb
dec
push
js
adc
jl
sub
mov
xor
in
push
xor
int
jae
jl
xchg
or
jb
sub
out
fucom
aas
rorl
rcrb
fmulp
mov
sub
lds
push
aas
inc
addr16
stos
and
dec
call
push
pop
xchg
outsb
out
lods
gs
jb
mov
push
testl
xor
stc
imul
popf
sbb
sbb
fsubr
lret
and
negl
push
dec
push
jmp
sbb
loope
xchg
ror
decb
add
out
sbb
dec
pushf
out
outsl
mov
or
ds
icebp
adc
cmp
sub
jnp
out
shl
movsb
gs
dec
sbb
jae
in
in
das
jp
addr16
js
fcomp
pop
mov
sbb
dec
scas
xor
cmp
lea
pusha
mov
push
nop
dec
nop
inc
jns
or
push
jmp
push
scas
in
fadds
insb
jmp
cmovne
fxch
dec
nop
sub
cmp
mov
call
icebp
in
adc
repz
lds
or
dec
call
into
aas
lock
sub
and
jl
insb
push
pushf
jmp
imul
or
push
and
xor
out
inc
pop
sbb
xor
icebp
ljmp
xchg
cmpsl
sbbb
xchg
jnp
mov
push
nop
sub
xor
f2xm1
pushf
push
push
pop
and
loopne
jg
inc
adcb
xchg
add
adc
inc
ja
in
loope
push
sbb
fs
loope
lret
mov
das
mov
sub
xchg
dec
push
inc
pop
nop
jmp
add
lret
adc
arpl
adc
jo
fsub
mov
call
repz
mov
adc
cltd
jg
popl
push
or
dec
sbb
in
pop
mov
out
in
fidivrs
gs
push
inc
dec
dec
add
gs
aas
and
rcll
fsts
adc
fistl
pop
test
cli
fwait
jl
popa
sbb
lret
cmp
loop
stos
sub
mov
test
add
gs
pop
loopne
jecxz
in
loope
push
or
test
inc
in
or
fwait
cmp
lahf
lods
in
sahf
jo
shl
pop
imul
push
pushf
xchg
out
mov
jge
inc
pop
xchg
mov
adc
fwait
ss
xchg
push
and
inc
mov
push
mov
adc
fucom
test
aad
and
sbb
rcrb
bound
lcall
insb
das
xchg
iret
xor
aaa
mov
sarl
dec
xchg
into
or
notb
sub
mov
out
mov
movsl
shlb
jae
ds
inc
xor
cmp
out
xchg
inc
in
lcall
dec
jl
lcall
cmp
stos
pop
sbb
add
and
sbb
sbb
sbb
lods
dec
xchg
fdivrs
lock
rcrb
jg
jmp
std
adc
fildll
rclb
pop
fisttpl
xor
add
fwait
sti
flds
mov
dec
sbb
xor
adc
lcall
mov
out
hlt
xor
push
mov
dec
xchg
das
nop
sub
jecxz
out
adc
mov
gs
outsb
sub
repnz
pushf
outsb
pop
test
movups
push
mov
xor
xchg
sbb
dec
loope
std
paddusw
add
dec
aas
testl
mov
addl
and
mov
sbb
insb
dec
inc
pop
pop
mov
pop
sbb
pop
fadd
inc
xor
mov
stc
mov
and
das
adc
fwait
pop
push
lcall
mov
nop
jl
das
mov
jnp
gs
popf
and
xchg
add
cltd
loopne
arpl
adc
dec
dec
and
cmp
adc
outsl
sbb
addr16
xor
pop
and
popa
add
adc
push
push
pop
popa
cld
pop
and
outsb
adc
sub
xor
loop
xor
test
in
adc
jo
sbb
pop
scas
push
insb
xchg
xchg
pop
stos
test
cmc
cmp
sub
xor
push
repz
and
insl
jne
xchg
xchg
cmc
cmc
xchg
jg
push
pop
adc
push
rorb
xchg
invd
orb
cmp
sarl
test
movsl
hlt
pop
xchg
add
in
sub
arpl
inc
divl
cmp
pop
inc
dec
jb
sbb
xchg
cmp
pusha
sbb
shl
add
and
int3
movsl
adc
push
psrlq
fisttpl
pop
sbb
jmp
mov
and
or
hlt
pop
addr16
and
xor
cwtl
fwait
jae
aas
jp
test
in
push
and
ret
lahf
dec
ret
cwtl
mov
ss
jbe
xor
lods
mov
or
scas
adc
fimull
sbb
fldl
mov
mov
aas
add
pop
lahf
and
icebp
sbb
jmp
jb
out
sbb
aas
sbb
outsl
sbb
pop
inc
data16
test
pop
in
popf
xchg
sbb
les
inc
sbb
sbb
or
adc
fstpl
shl
les
jg
imul
cmpl
fisubs
mov
jnp
fpatan
cmp
adc
lea
lock
cmp
inc
push
adc
cmp
jge
and
jo
adc
cmp
jge
cld
adc
ret
inc
sbbl
enter
dec
ljmp
out
inc
mov
xchg
pop
push
sub
add
or
nop
xor
pop
jmp
pop
gs
pushf
fldenv
xor
jmp
insl
push
or
jl
jmp
dec
jae
and
mov
push
pusha
mov
fnstenv
push
adc
xchg
push
enter
xchg
fistpl
loope
add
mov
movsb
sub
cltd
xchg
pop
add
mov
lock
xor
mov
sbb
loope
add
push
cmpsl
xchg
hlt
adc
lahf
imul
cltd
adc
xchg
mov
cld
neg
xor
adc
loopne
push
jge
mov
arpl
adc
inc
cld
push
mov
imul
es
sbb
and
cmp
and
sti
adc
pop
xor
add
ds
fistpl
pop
xchg
or
push
pop
pop
mov
loop
sarb
xchg
sub
and
icebp
or
lock
repnz
das
outsl
pop
dec
icebp
jb
loope
rclb
or
repnz
cmpsl
and
pop
loopne
test
pop
daa
out
xlat
cld
sbb
or
jne
fs
pop
adcb
xchg
and
adc
push
mov
repnz
cmpsb
mov
jge
lock
add
or
decl
jecxz
fcmovne
cmp
jmp
xor
fdivs
andb
aas
pushf
outsl
or
int3
pop
in
test
or
out
fistpl
and
sbb
xchg
loopne
loopne
add
and
outsb
or
les
in
cs
gs
fxch
in
jl
mov
xchg
outsl
adc
push
jno
imul
push
pop
adc
out
add
xchg
xadd
out
mov
and
loope
js
adc
and
in
sub
mov
cwtl
pop
sbb
dec
incb
and
cld
pop
push
dec
lahf
movb
xchg
dec
sbb
adc
sub
sbb
push
pop
pop
rcr
jb
adc
cmp
stc
inc
jmp
pop
repnz
inc
outsl
add
ds
xchg
mov
cltd
mov
roll
cli
mov
jb
inc
jge
mov
pop
stos
imulb
shr
add
jecxz
sbb
or
pushf
cmp
xchg
pop
inc
into
js
adc
inc
movsl
xor
stos
cmp
fcomps
xchg
push
cld
cmc
out
mov
adcl
loopne
or
jle
cmp
daa
push
xor
test
dec
dec
cmp
dec
pop
out
or
xchg
xor
jl
and
cmp
cmpl
js
sbb
dec
out
leave
push
push
pop
or
sub
or
hlt
lock
xor
or
mov
push
sar
je
shlb
leave
mov
outsl
sahf
faddl
pop
sbb
xchg
rsqrtps
adc
adc
addr16
jns
out
enter
push
adc
fldcw
fs
xchg
adc
mov
rcll
cmp
adc
cmp
jbe
push
xor
out
inc
pop
cmpb
mov
or
cmpsl
aaa
adc
cld
pop
test
repnz
push
cmp
mov
pop
fcoml
cwtl
jno
xchg
fstpl
dec
xor
out
add
push
mov
popf
xor
push
and
andl
and
movsb
adc
rcrl
adc
dec
push
or
rolb
dec
jmp
scas
or
add
vrangesd
mov
dec
out
mov
push
xchg
and
es
or
cs
xchg
fbstp
xor
xor
or
cmp
adc
xor
mov
push
cmp
push
adc
add
shl
loope
out
std
adc
nop
adc
mov
clc
dec
arpl
inc
and
xor
dec
jp
orl
pushf
adc
sbb
adc
pop
insl
push
fwait
dec
fstpt
cld
jns
mov
imul
rolb
inc
xor
mov
xor
or
test
push
ljmp
jne
aaa
push
adc
out
push
xlat
pop
cmp
in
jp
je
dec
divl
or
dec
repz
daa
sub
jl
imul
pop
push
lcall
mov
add
push
sbb
fs
lock
jae
aam
mov
daa
add
mov
fwait
sar
adc
fstpl
sbb
cs
inc
ljmp
arpl
aas
out
dec
roll
cmp
push
push
cmp
mov
test
pop
loop
xor
arpl
lods
cmpsb
in
iret
mov
jb
fildl
test
dec
and
adc
add
in
mov
xchg
mov
sub
js
test
aam
loopne
idivl
negb
cmp
dec
jmp
push
in
insl
lret
or
frstor
stos
sbb
jne
outsl
fisubrs
push
iret
sbb
or
add
sbb
popa
int
push
mov
add
push
xchg
or
xor
pop
pop
dec
in
mov
or
outsb
xchg
pop
push
pop
and
sub
inc
repnz
sub
jbe
adc
imul
xor
adc
clc
ficoms
sarb
cmp
jno
mov
adc
sbb
mov
add
xor
xlat
dec
cmp
adc
and
sbb
pop
pop
adc
hlt
out
fisttpl
xchg
inc
sbb
cmp
stc
or
mulps
adc
adc
testb
add
in
push
add
or
jae
mov
lods
mov
clc
pop
sub
jne
ret
pop
inc
or
pop
sbb
sbb
xchg
pop
popw
pusha
xor
cli
movsl
mov
pop
push
pop
and
push
xchg
sub
pop
add
sub
imul
inc
into
lahf
jg
xchg
adc
arpl
push
in
mov
mov
sbb
adc
pop
sbb
add
stc
out
push
and
insb
rep
fldenv
outsl
call
and
push
jmp
xor
adc
jp
pusha
or
push
cmp
pop
adc
in
out
repnz
xor
leave
pop
call
pop
jecxz
aad
or
adc
xchg
sub
insb
inc
jmp
or
adc
cltd
jecxz
or
fwait
mov
push
mull
fstps
cmc
adc
xchg
jo
outsl
push
fisubrs
icebp
xor
mov
rorb
dec
test
push
ss
lahf
ljmp
sarl
and
adc
out
popf
jno
xor
sub
sbb
sub
or
pop
cld
sbb
push
pop
sub
push
sbb
xchg
add
add
outsl
jmp
mov
cmp
hlt
adc
ja
fwait
repnz
cmp
pushf
shlb
aam
push
add
fdivs
cwtl
dec
cmp
or
hlt
mov
call
jbe
sub
divb
outsl
in
mov
int3
in
mov
xchg
or
stc
dec
sbb
call
adcl
fsubrl
aaa
and
pop
sub
xor
adc
cld
push
popf
add
pop
jle
add
pop
cwtl
xchg
loop
add
lcall
dec
sub
pushf
gs
outsl
loopne
add
lea
loope
and
sbb
xchg
adc
xchg
adc
movzbl
add
fidivrl
lahf
aad
push
stc
xchg
sahf
arpl
sbb
xor
aas
cmpsl
int
or
xor
lret
mov
rcll
cmp
inc
sub
inc
adc
pop
aas
and
add
jg
imul
or
or
mov
or
mov
jno
dec
fistpll
jo
jmp
cmp
add
outsl
gs
pop
gs
popf
in
jo
out
je
push
jg
xchg
in
mov
add
cltd
inc
adc
in
cmp
cmovne
inc
mov
inc
or
mov
lcall
and
inc
mov
pop
pop
mov
or
imul
adc
push
push
and
aam
fcoml
pop
dec
icebp
xor
adcl
add
mov
or
dec
pop
pop
and
out
pushf
lret
into
shll
sbb
xchg
and
insl
sub
jno
adc
inc
mov
imul
sbb
push
xor
ret
xor
pop
or
cmpsb
pop
std
imul
stc
in
mov
or
clc
jl
push
ss
lods
adc
or
xchg
cli
mov
push
mov
sub
pop
imul
jge
jne
cmp
in
sti
xchg
dec
mov
add
pop
pop
fidivrl
push
mov
pop
cmpsl
es
push
add
push
sbb
push
dec
mov
jmp
push
or
pushf
push
outsb
mov
out
movsb
jecxz
jne
xchg
mov
jb
or
sbb
sbb
dec
dec
into
fwait
popa
outsl
xchg
and
inc
nop
in
mov
adc
push
lret
sbb
xchg
mov
nop
int
je
imul
int
pop
inc
xchg
out
xchg
dec
aaa
mov
mov
cld
push
loope
cld
repnz
fistps
aam
xchg
adc
das
xchg
outsl
outsb
cld
jecxz
fsts
dec
cmp
jnp
lret
inc
adc
sub
mov
mov
mov
xchg
adc
sbb
in
push
inc
adc
rcll
or
add
lea
and
mov
cmpl
imul
adc
push
xchg
pop
or
loop
data16
inc
pop
dec
pop
loop
dec
insb
out
popa
inc
mov
sti
sbb
fucomp
aaa
sbb
inc
icebp
outsb
xchg
clc
sbb
fsubr
ds
pop
ja
xchg
dec
out
adc
cli
fwait
daa
popf
inc
sub
pop
inc
pop
leave
addr16
shlb
jmp
pop
fwait
dec
sbb
sbb
fstl
nop
push
pop
dec
cmp
sub
test
adc
inc
push
sbb
out
cli
insb
mov
in
outsb
dec
in
lahf
sbb
sub
inc
imul
pop
mov
sbb
inc
xchg
sbb
push
lret
adc
inc
repz
popa
and
adc
xchg
or
adc
in
sahf
sub
inc
pop
add
rcr
inc
pop
mov
ljmp
xchg
rcrl
nop
adc
in
sub
shrl
push
icebp
or
sbb
xchg
mulb
insb
dec
pop
push
xor
push
push
cs
sub
add
shl
dec
pop
add
push
push
imul
xchg
in
lods
adc
je
repz
inc
sahf
adc
cmp
in
mov
bound
mov
pop
or
adc
cmp
dec
iret
adc
and
adc
incl
xchg
dec
movb
aas
mov
adc
jbe
push
testb
lret
add
xchg
sti
mov
xchg
add
xchg
rcrl
mov
aaa
and
dec
add
cmc
cs
adc
test
leave
mov
mov
sahf
dec
repz
jo
inc
push
in
mov
repz
or
pop
sbb
adc
nop
bound
xor
orb
cltd
sbb
adc
clc
sub
iret
dec
pop
stos
push
sbb
fs
je
adc
dec
push
adc
cmp
push
cmp
dec
loop
dec
mov
mov
or
and
dec
mov
inc
sbb
push
dec
push
in
mov
jp
in
and
adc
inc
push
sti
iret
sbb
jmp
repnz
shlb
adc
cmp
ret
mov
unpcklps
ja
leave
pop
testl
fwait
and
add
je
mov
and
int
pusha
push
mov
bound
mov
inc
out
andl
add
repz
sahf
dec
in
dec
add
sub
fnstenv
outsl
pop
lods
jl
push
mov
add
and
pop
and
mov
jmp
sub
scas
sub
cmp
fidivs
jecxz
cmp
repz
lret
sbb
mov
xchg
xchg
sub
out
add
icebp
cmpsb
sbb
aad
push
and
in
jno
addr16
call
dec
or
repnz
cmpsb
js
add
movsb
pop
xor
loop
out
mov
int
out
sub
or
adc
push
call
hlt
hlt
lret
ret
vpsrld
loopne
out
adc
xchg
sub
lods
xor
sub
testb
das
sbb
mov
add
fcmovb
xchg
adc
nop
les
mov
pushf
dec
jecxz
or
and
rolb
ja
dec
repnz
mov
enter
xor
pop
fiadds
push
leave
popf
add
repnz
xchg
add
jp
int3
pop
jne
cmp
add
lret
push
adc
repnz
sbb
lock
push
xlat
cmp
pop
fcoml
andb
push
sub
pop
dec
mov
xchg
and
add
adc
cs
cmp
out
pop
stos
mov
jnp
and
test
loope
cld
test
inc
xchg
push
in
xchg
pop
stos
rcrl
sub
jmp
lods
mov
stos
add
dec
jbe
cltd
pop
jnp
outsb
call
mov
sub
out
cmp
inc
push
loopne
jno
iret
arpl
xchg
pop
jno
es
push
xor
loope
stos
mov
decb
int
push
inc
inc
mov
dec
mov
daa
cmc
mov
repnz
and
cmp
add
nop
add
or
dec
sub
stc
cld
cmp
adc
aaa
nop
mov
in
out
gs
push
lea
in
jp
test
xor
xchg
push
mov
sub
push
jmp
scas
das
aaa
jp
cld
add
inc
or
jle
mov
es
nop
out
inc
push
les
icebp
or
repz
pop
or
call
add
pop
jl
in
pop
mov
out
sub
sub
xor
fwait
push
pop
loopne
pop
ljmp
subb
lds
shl
inc
fs
orb
fcoms
sub
xor
ds
adc
dec
pop
pop
mov
push
sub
push
cmp
test
and
sub
or
movsb
dec
adc
sbbl
xor
aas
rep
adc
cs
push
push
fwait
imul
pop
and
lods
dec
sub
mov
xor
xor
pop
dec
lcall
inc
inc
push
xchg
pusha
push
mov
sub
test
jle
jb
pop
add
dec
repz
daa
cltd
fcoml
lods
movsb
pop
int
dec
sbb
fwait
push
cmpsl
rolb
cmp
lds
adc
xchg
lods
jmp
clc
arpl
std
sti
pop
or
xor
and
sbb
push
out
rcrl
mov
pop
adc
cmp
cmpsb
lret
ret
adc
and
push
addb
hlt
gs
inc
lock
mov
cmp
dec
inc
loope
mov
mov
xchg
das
add
jb
cltd
adc
xlat
mov
popa
push
fdivp
adc
jge
sub
and
xchg
adc
std
lock
or
push
loope
or
rorl
or
mov
leave
icebp
push
inc
add
mov
call
mov
scas
in
sub
aas
pop
mov
mov
push
mov
jb
adc
xor
mov
dec
mov
mov
cwtl
outsb
xchg
inc
incl
or
call
jb
mov
add
sub
adc
loopne
dec
sbb
int3
into
lods
mov
push
jo
lahf
push
inc
cmpsb
lds
lcall
jmp
cmovns
dec
jnp
sub
pop
movq
leave
daa
push
mov
mov
shrb
pop
int3
and
enter
loop
lock
add
mull
inc
sub
or
fdivr
sub
pop
nop
lock
in
pop
xchg
notb
int
push
fbstp
dec
dec
decb
std
adc
iret
inc
inc
dec
pop
xchg
pop
push
or
cmp
jno
mov
movsb
mov
or
cmp
and
sbb
mov
inc
cmp
repnz
and
iret
mov
jo
fsubrl
movsb
enter
push
movsb
imul
insl
or
or
hlt
adc
clc
loop
jae
mov
mov
jbe
or
push
out
inc
insb
sub
ret
add
or
repz
mov
popf
dec
add
lock
push
dec
dec
xor
push
inc
add
jl
es
iret
pop
xor
mov
dec
inc
dec
lock
push
dec
fiadds
push
pop
pop
push
insl
cmp
mov
cmp
mov
adc
lret
mov
push
loope
mov
push
inc
ret
mov
and
push
hlt
adc
jge
fiadds
and
js
in
adc
into
lds
dec
inc
xor
xor
addb
bound
push
call
xlat
insb
push
dec
mov
imul
sbb
cvtps2pd
or
adc
ret
pop
ret
push
add
fstl
mov
push
dec
push
xchg
mov
mov
loop
gs
sarl
push
pop
pop
lods
inc
rorl
sbb
xchg
add
outsl
pop
mov
inc
addr16
enter
loop
imul
push
mov
push
scas
jnp
and
outsl
wrmsr
jb
insl
push
adc
xchg
dec
insb
add
arpl
sbb
xchg
inc
inc
rcl
pop
int
dec
enter
jno
sbbb
jo
jnp
out
repnz
iret
in
out
mov
mov
sbb
divb
call
in
insl
js
outsb
bound
or
mov
mov
mov
mov
push
mov
fs
mov
outsb
fcomip
sub
adc
or
sarl
icebp
fucomp
cs
jae
aaa
pop
arpl
jge
icebp
scas
adc
and
or
js
mov
mov
int3
ljmp
mov
push
aam
mov
dec
sbb
jae
sub
push
repnz
rorb
mov
push
adc
mov
testl
xchg
out
dec
ljmp
lock
aas
sbb
push
rolb
ljmp
loop
sub
or
pop
cmpsl
push
icebp
mov
pop
out
sub
mov
pop
mov
mov
dec
into
xlat
dec
add
adc
mov
andl
outsb
jns
fmull
out
dec
lret
pop
test
inc
mov
lock
sbb
mov
sub
xchg
out
jbe
jb
push
sub
jbe
pop
lods
cmp
stc
das
lods
add
push
xor
pop
lock
and
in
jg
sbb
sahf
lods
in
jae
popf
mov
insb
sub
xor
stc
mov
sub
insb
cmpl
jg
orb
jb
inc
and
pop
dec
inc
pop
das
cwtl
repz
sub
ret
cmp
fildll
cli
in
xor
pop
mov
mov
push
mov
sbb
inc
and
sbb
decl
adc
cmp
fistpll
mov
andb
fimull
push
sbb
lahf
in
mov
movsb
andb
sbb
imulb
sbb
or
and
outsb
adc
push
out
lret
clc
sbb
mov
cwtl
inc
cmp
outsb
pop
push
xor
hlt
aas
cmp
xchg
scas
repnz
shlb
pop
mov
call
jno
cmp
sbb
dec
or
fisubrs
outsb
push
add
stc
jnp
sub
shrl
fnsave
out
or
push
aas
sti
xchg
jae
dec
inc
cmp
inc
dec
xchg
and
sub
sbb
outsl
scas
and
push
jno
sub
or
xor
dec
pop
test
adc
stos
mov
xor
pop
mov
push
cmp
test
test
or
add
mov
jg
adc
add
xchg
scas
cwtl
rcrl
cwtl
jo
pop
cmp
sub
sbb
scas
adc
enter
or
stc
aas
ds
insl
jl
bound
inc
js
jge
mov
repnz
add
add
subb
dec
inc
dec
mov
lods
ss
outsb
xchg
add
sbb
dec
sahf
stc
fnsave
cmp
sahf
add
aad
pushf
sbb
xchg
mov
cmp
mov
mov
nop
pop
dec
pop
std
mov
insb
sbb
cmp
lds
movsb
xchg
iret
hlt
addps
mov
stc
dec
in
repz
cmpsb
and
sub
sbb
mov
push
sbb
xchg
or
jle
jle
imul
mov
or
popf
bound
cld
out
sbb
movsb
into
lahf
xor
cmp
loop
sbb
in
push
adc
pop
or
cmp
mov
sbb
mov
dec
or
sahf
add
mov
iret
fidivs
jg
jl
add
mov
leave
lods
and
stos
je
lea
push
cmc
jne
push
iret
pop
add
add
and
xchg
iret
loope
mov
inc
ds
movsb
and
fsts
mov
jae
cmp
loope
mov
popf
xor
in
xchg
outsl
shrl
stos
push
dec
mov
xchg
xor
adc
outsb
adc
inc
adc
fildll
fs
stc
imul
out
lcall
jb
pop
js
outsb
cmp
sbb
in
jmp
xchg
jbe
mov
iret
mov
push
or
mov
pop
outsb
fdiv
orl
xor
insb
xchg
ljmp
push
pop
push
pop
cli
loop
mov
test
jle
cmp
dec
inc
inc
out
gs
xor
lods
popa
push
repz
int
out
icebp
dec
icebp
sub
inc
sahf
cmp
xchg
pop
cli
mov
pushf
sbb
adcl
outsl
or
out
enter
adcb
add
pop
push
sbb
mov
jnp
jle
das
in
cmpsl
cld
arpl
adc
cmp
pop
adc
jne
loop
or
and
xchg
fdivrl
pop
inc
xchg
out
jecxz
cmc
mov
mov
add
fwait
cmp
add
jle
xor
dec
lahf
test
add
stos
sbb
adc
mov
je
fcmovne
cwtl
jmp
sub
sbb
lretw
aam
int
js
mov
addb
lcall
call
cmc
add
cmp
pop
cwtl
adc
mov
fs
xor
in
mov
je
push
cmp
dec
xor
xchg
xor
aad
or
or
xchg
ds
mov
lds
jmp
inc
cmp
aas
pop
mov
sub
arpl
push
xlat
cmpsb
dec
dec
test
call
cld
cmp
inc
int3
sub
lea
mov
repz
nop
add
dec
das
and
insl
and
or
or
aad
add
aas
xchg
inc
adc
mov
aas
jno
out
cmp
pop
sub
pusha
xlat
xor
mov
inc
dec
test
add
dec
jmp
xchg
or
leave
inc
sub
adc
pop
and
outsb
bound
testb
imul
stc
outsl
and
sub
add
xor
adc
sbb
clc
adc
fcmovbe
cmovnp
sbb
push
in
clc
lret
icebp
jno
mov
cld
ds
xchg
pop
xchg
xchg
aam
mov
pop
out
fistps
sbb
out
fstpl
adc
jo
xor
fst
push
mov
and
inc
and
xor
in
dec
call
pop
rcrb
push
or
dec
pop
inc
dec
or
stos
xlat
std
cld
cmp
ficomps
pop
pop
push
jb
shlb
sbb
push
or
cwtl
adc
jg
push
push
je
dec
movsl
scas
xchg
inc
and
xchg
pop
out
push
and
mov
not
inc
es
roll
ret
add
rorl
xchg
pop
push
dec
adc
xchg
fwait
pop
sub
mov
sbb
fwait
in
cwtl
fldcw
hlt
push
test
inc
sbb
push
cwtl
mov
ss
dec
adc
outsl
adc
ficompl
push
pop
adc
xor
rorb
repnz
mov
sub
pop
xchg
add
mov
dec
sub
jl
inc
adc
repz
xchg
insl
fmul
sarb
add
sbb
sahf
xchg
or
sbb
adc
lcall
push
pop
mov
push
pop
adc
jns
mov
push
dec
jg
nop
rorl
mov
filds
gs
add
pop
push
dec
in
jge
push
lcall
vpaddusw
xchg
lret
cmp
jo
imul
dec
dec
push
xchg
inc
fstl
pushf
lcall
icebp
jo
cmp
ss
andb
or
and
pusha
dec
insl
or
or
and
sbb
jecxz
xchg
repz
push
cmp
ret
mov
add
sbb
xchg
loope
out
scas
push
movsl
popa
or
xchg
outsl
daa
cmp
mov
fistl
adc
es
dec
popf
sub
pop
pop
cwtl
inc
xchg
push
sahf
mov
aam
mov
lcall
pop
movsl
and
dec
pop
xchg
xlat
andb
movsb
popa
fsubrs
fmull
xchg
arpl
aam
push
insl
pushf
mov
inc
setnp
test
xor
out
mov
add
pop
pop
xchg
adc
mov
fists
dec
stos
nop
xchg
inc
dec
in
xor
pop
mov
inc
cmp
sbb
xchg
mov
sub
xchg
inc
sbb
pabsw
xor
outsb
mov
or
and
xchg
pop
ffreep
bound
jno
cs
bound
pop
lret
push
lcall
in
inc
jl
adc
push
sbb
jo
pop
xchg
mov
lret
cltd
loop
jg
jo
dec
addb
push
push
push
cmp
dec
jo
pop
pop
pop
in
sub
xchg
jecxz
add
push
add
sti
xor
sub
jl
mov
lods
push
sbb
pop
adc
push
addl
sub
into
pop
xchg
jl
or
fistl
jb
dec
mov
push
int
dec
jo
and
adc
sbb
jmp
into
fwait
and
data16
pop
push
cwtl
fldcw
push
xchg
push
or
add
cmp
add
xchg
sahf
and
xchg
daa
sahf
inc
lcall
and
roll
sub
fsubs
sub
and
push
outsl
insl
xchg
mov
pop
pop
mov
push
or
insb
pop
inc
sbb
lea
cld
movsl
or
pop
xchg
push
or
or
clc
dec
test
cwtl
xor
add
insb
stos
dec
stos
dec
ds
mov
loopne
or
inc
add
push
repz
push
pop
fcoml
mov
add
mov
or
or
cs
lret
shrl
adc
lock
push
inc
add
pop
xor
sub
xor
adc
xchg
mov
push
outsl
adc
call
mov
pop
fiaddl
pop
cltd
pop
push
andb
cmp
daa
adc
adc
xchg
insb
push
and
andb
out
in
movl
sbb
and
repz
idiv
adc
data16
lret
sbb
loop
jae
sbb
push
adc
std
into
xchg
or
xor
push
rcrb
push
dec
xor
mov
sar
xlat
les
add
pop
jle
pop
les
in
pop
push
loope
shr
sub
dec
lea
add
sbb
or
das
fcomps
lahf
xor
inc
inc
je
dec
cmc
imul
pop
or
push
xchg
jnp
inc
adc
adc
stos
fs
sbb
add
negl
stc
push
xchg
pop
les
xor
into
into
in
sbb
pop
dec
mov
cwtl
loope
test
loope
negb
loop
adc
sub
repnz
add
sbb
inc
xchg
loopne
js
repnz
int3
sbb
inc
jmp
inc
add
adc
sahf
and
daa
test
iret
mov
jbe
adc
inc
adc
clc
or
fmull
mov
xor
lock
push
mov
es
jae
lock
mov
in
xor
cli
sub
nop
sub
adc
imul
pop
cltd
cltd
aam
xchg
sti
or
inc
imul
and
or
adc
cmp
lcall
lods
out
nop
pop
pop
sbb
jl
push
or
pop
cmp
jl
cmp
adc
out
mov
or
dec
push
push
call
adc
or
push
pop
dec
out
push
aas
ficomps
xchg
adc
sub
or
xchg
sub
or
cmp
mov
xor
or
sahf
cmpsb
add
loopne
push
xchg
jnp
push
mov
or
mov
shrb
imul
lods
mov
add
or
push
adc
ja
jo
lock
mov
stos
pop
outsl
sbb
dec
jecxz
pop
inc
inc
and
sbb
loopne
push
and
adc
aad
jae
mov
jmp
xchg
push
xor
adc
push
mov
js
mov
sub
lods
fdivl
outsl
jae
sub
cmp
pusha
enter
mov
jne
pop
push
fbld
or
dec
adc
shlb
pop
adc
outsl
adc
xor
add
fidivrl
sub
enter
repnz
jmp
shl
out
push
sub
fsubl
popa
push
ret
sbb
cld
pop
sbb
sbb
fistl
popa
insb
sub
xchg
rolb
add
push
cmp
jg
sbb
rcl
dec
xchg
lret
push
mov
cli
pop
cmp
push
xchg
sbb
rcll
aas
xchg
das
icebp
or
mov
aas
fadds
push
hlt
or
loope,pt
sbb
add
jb
push
enter
and
addr16
lock
mov
add
jnp
pop
mov
js
sub
nop
mov
or
outsb
push
out
cmp
dec
mov
fwait
int3
nop
jge
or
or
xor
inc
and
mov
dec
fstps
daa
pop
pop
pusha
cs
mov
pop
lcall
mov
mov
ds
out
pusha
or
and
mov
push
pop
push
repz
mov
jb
pop
leave
inc
gs
sbb
loopne
jge
lea
nop
in
cltd
sbb
clc
lret
imul
sbb
sub
or
cmp
or
int
sub
dec
jl
pop
adc
pop
jmp
sub
dec
or
push
cltd
call
divb
cltd
std
mov
pop
fstps
or
sbb
inc
fcomi
and
popf
adc
outsb
out
js
leave
imul
cmp
repz
addr16
dec
ss
dec
lcall
jl
lods
test
mov
sbb
fcos
fiaddl
xor
outsb
jl
mov
cmp
pop
add
icebp
or
mov
pop
dec
in
mov
cmp
dec
inc
sarb
shrb
jmp
pushf
imul
pop
push
and
mov
fsubrp
rcrb
jge
fwait
and
cmp
clc
sbb
sbb
sub
push
lds
arpl
adc
sbb
icebp
xorb
int
out
and
movsl
xchg
adc
push
mov
fisttps
inc
dec
loope
fdivrl
sub
cmp
push
pop
cmpsl
add
leave
imul
mov
jg
inc
in
sbb
xor
cmp
nop
cmpsb
mov
leave
loopne
jo
or
fnstsw
adc
test
mov
roll
mov
jno
jae
mull
xchg
adc
pop
test
push
push
cld
roll
in
into
push
in
xchg
mov
enter
sub
adc
adc
pusha
vmovss
xor
or
xchg
fbstp
cmpsb
cmp
addr16
sub
xchg
cmp
mov
and
push
aaa
adc
push
inc
add
push
pop
incl
cwtl
inc
outsl
cli
mov
insl
sub
cmp
scas
outsb
fs
push
add
pop
stos
lods
adc
jo
xor
fpatan
adc
movsl
mov
es
pop
xor
push
int
out
rorb
mov
xchg
jnp
bound
mov
mov
sub
addr16
push
loope
xchg
xchg
or
ljmp
sub
aas
xor
adc
add
inc
test
je
lock
xor
sub
pusha
inc
mov
aad
cwtl
xchg
fidivrl
ret
sbb
jge
inc
sbb
and
mov
les
lcall
cmpsb
mov
mov
std
push
mov
push
dec
loopne
popa
cmp
daa
jb
push
dec
cmc
pushf
lods
dec
and
adc
aas
adc
push
xlat
fiadds
mov
cltd
mov
popf
loop
pop
aad
xchg
test
lock
into
fwait
adc
dec
enter
or
icebp
jbe
cmc
cltd
xor
das
push
dec
add
mov
push
pop
fidivl
idivb
cmp
loope
lahf
or
sbb
xchg
fisubs
xor
imul
insb
inc
xchg
out
lahf
xchg
mov
pusha
adc
adc
jne
mov
insl
inc
dec
rcr
xchg
sti
jle
in
mov
pop
jmp
fdivrs
jae
mov
jecxz
jle
movsl
jne
cmp
sub
daa
lods
mov
out
lahf
mov
addr16
nop
xchg
movsb
xor
adc
je
and
pop
cmp
adc
iret
call
pushl
leave
mov
arpl
push
imul
mov
jno
and
gs
lds
lds
cmpsb
addb
push
xchg
fcomip
mov
into
lcall
sub
cmpsb
sub
jl
sti
xor
test
xchg
das
inc
mov
or
mov
push
push
flds
movsl
dec
dec
pop
arpl
into
jne
insl
call
test
test
sbb
icebp
int
fldcw
adc
mov
subl
aas
dec
lods
sahf
inc
xchg
sub
xor
or
push
xor
dec
sub
imul
push
jno
mov
mov
sbb
push
cmp
nop
or
xor
jle
test
jmp
add
xchg
push
scas
or
mov
dec
mov
fs
cwtl
mov
adc
cmp
sbb
xchg
shll
jno
ljmp
pop
mov
lds
ret
popa
push
scas
jae
push
or
pop
mov
pop
pop
and
push
mov
or
nop
pop
adc
pop
xchg
sbb
add
loopne
mov
push
popf
push
mov
loop
outsb
add
cmp
outsw
dec
push
and
or
jb
repz
pop
cmc
xor
movb
fildl
push
or
add
shrl
sbb
jmp
repz
scas
inc
cltd
cmpsl
in
out
out
lock
mov
or
std
jne
testl
repz
jae
lock
imul
sbb
push
dec
inc
jl
shll
fbld
in
sub
sbb
out
or
and
inc
insl
or
inc
adc
mov
dec
mov
or
vmulps
mov
mov
add
inc
pop
mov
lret
dec
adc
mov
pusha
jmp
pop
or
push
jg
repz
or
pop
mov
mov
and
lods
and
ja
or
push
out
lock
shl
inc
dec
add
ret
sub
outsb
pop
sbb
pop
cmc
dec
cmp
or
mov
fdivl
mov
enter
mov
and
adc
stos
add
ret
out
cmpsl
lret
push
orb
es
dec
icebp
mov
scas
jno
and
sahf
daa
incl
loopne
inc
cmp
xor
outsb
in
mov
repz
or
cmpsl
cltd
xlat
jae
dec
loop
xchg
xchg
or
or
test
cmp
fisubs
mov
cmpl
or
sub
lock
and
cli
and
mov
or
cmc
test
lock
mov
xlat
lock
jmp
xor
xchg
pop
iret
inc
in
shll
dec
out
fldl
mov
repz
mov
ret
sub
xor
outsb
adcb
scas
shll
adc
stc
test
and
out
push
adc
jge
adc
lret
xchg
iret
or
repz
stc
shl
inc
cmp
dec
xchg
or
repz
lock
adc
add
xchg
int
pop
cltd
jmp
sbb
add
and
adc
pop
xchg
popa
sbb
scas
mov
or
adc
mov
mov
cmp
dec
push
cmp
unpcklps
pop
sti
pinsrw
jg
cmpsl
sub
pop
sbb
icebp
stos
pushf
ficompl
scas
repnz
lret
dec
fsubrs
xor
movsl
xor
test
sbb
pop
sbb
push
fldenv
mov
cmp
xchg
push
dec
xchg
fs
add
sahf
or
mov
fsubs
add
dec
or
sub
sbb
insb
lods
cwtl
pop
repz
mov
insb
jge
xor
adc
subb
xor
adc
cmpsb
rcrl
call
test
push
inc
stc
xchg
push
sub
adc
cmp
push
cld
mov
out
mov
lock
mov
inc
lahf
mov
data16
jo
dec
mov
pop
popf
mov
jmp
scas
repz
and
test
add
repnz
mov
and
adc
bound
adc
ljmp
jns
sbb
lds
scas
lock
pop
lods
xchg
cmp
pop
cmp
dec
cmp
mov
mov
ret
mov
test
xchg
sub
scas
add
push
lods
aad
or
jge
push
icebp
push
jnp
xchg
add
mov
popf
mov
push
jbe
int3
iret
pop
add
das
pop
jno
notl
push
inc
inc
pop
and
push
push
xchg
pop
cs
and
gs
sahf
adc
aam
pmulhuw
add
bound
cmp
outsl
cmp
inc
xchg
xchg
lock
push
add
cmp
bound
lods
dec
testl
xor
nop
push
and
xor
out
push
sbb
rclb
xchg
adc
add
pop
xor
lock
popf
pop
or
mov
in
cmp
cwtl
ret
jae
cmp
pop
mov
jne
push
stos
pop
sub
les
push
mov
rclb
xchg
cltd
push
out
push
outsl
sbb
imul
mov
adc
jno
adc
test
pop
fists
pop
adc
push
loop
xor
add
dec
inc
dec
outsb
inc
adc
loop
or
fisttpll
mov
sbb
xchg
pop
stc
pusha
mov
dec
subl
or
ds
lods
cmp
mov
dec
mov
jl,pt
adc
cltd
movsb
das
adc
ljmp
jmp
fs
in
test
dec
push
mov
adc
sbb
adc
mov
fadds
out
mov
mov
in
outsl
nop
movsl
aaa
je
cmp
outsb
out
jp
push
cmp
cmp
mov
aaa
stc
jmp
adc
xor
loope
inc
mov
or
xor
xor
or
inc
jo
js
pusha
mov
fimuls
cld
push
mov
cmpsb
add
sbb
rorb
loope
sub
outsb
outsl
pop
pslld
testl
jp
inc
movsl
adc
cmp
cmp
add
imul
add
or
push
cltd
outsl
push
or
addr16
push
xor
sub
mov
xor
jnp
rorl
mov
lret
pop
sahf
scas
mov
sbb
int
or
ret
xor
movl
push
cmp
jle
ret
clc
mov
push
inc
popf
outsl
push
jmp
cmp
push
dec
in
icebp
adc
fs
rclb
xchg
mov
repz
lret
xchg
xor
and
or
jbe
cmp
fsubs
and
add
push
popf
dec
subl
add
iret
enter
and
jecxz
mov
mov
push
push
adc
push
movsl
mov
adc
jne
hlt
and
fistpll
add
test
mov
xchg
inc
or
imul
xor
lea
push
in
or
pop
mov
add
shlb
sahf
mov
pop
add
or
popf
es
stos
pop
push
test
ljmp
mov
aam
imul
aam
dec
repnz
push
inc
js
pop
cmp
clc
mov
popf
stc
shlb
adc
fwait
mov
jl
or
mov
sub
xor
adc
lcall
and
cli
adc
call
dec
inc
sub
xor
and
insb
inc
sub
aas
sahf
push
inc
in
push
movsb
xchg
jo
xchg
sub
stos
flds
jnp
adc
fsubrs
es
jbe
mov
cwtl
daa
pop
jmp
jo
cmpsb
or
xchg
sub
dec
shll
lods
add
sarb
cld
fadd
cli
sub
pop
jb
inc
popf
mov
loopne
mov
xor
leave
das
lods
mov
sbb
cmpsb
fisttps
test
or
add
xchg
push
dec
das
pop
fnstsw
ret
in
jge
ret
aad
sar
lahf
in
cwtl
out
in
aam
insb
jge
cltd
xor
add
sbb
call
push
movsb
in
xchg
repnz
lret
pop
mov
xor
sti
sbb
pop
and
test
mov
repz
xchg
sbb
adc
andb
out
loope
push
pop
mov
xchg
jge
sbb
lock
mov
xchg
fimuls
lock
gs
mov
test
das
pop
fwait
adc
pop
mov
xchg
pop
push
push
inc
xorb
iret
sbb
fisttpll
and
lods
decl
pop
pop
addr16
leave
inc
cmp
decb
inc
test
pop
cmp
mov
ds
jl
dec
das
mov
popa
xchg
insl
xor
in
inc
cmp
imul
fldl
fwait
cs
outsb
aas
repz
aas
lods
xchg
inc
or
sub
jecxz
and
mov
mov
cmpsb
insl
xchg
xor
or
xchg
push
mov
pop
fwait
repnz
out
inc
inc
inc
cmp
aas
lret
ss
repnz
adc
movsl
ret
andl
sbb
mov
mov
jge
pop
es
fs
dec
mov
xchg
aad
xor
sbb
xchg
cs
dec
jne
out
shll
pushf
in
jmp
add
dec
sub
or
or
pop
in
out
cmpsb
lods
jbe
mov
test
aas
adc
push
jmp
repnz
fdivrl
cld
adc
jecxz
test
icebp
dec
xor
loopne
lahf
test
cltd
cmpsl
cli
xor
pop
jmp
aas
bnd
xchg
pop
les
sahf
repz
fistpl
cwtl
push
jmp
dec
jecxz
jmp
adc
xor
pop
sbb
lock
aam
xor
and
outsb
push
xor
notb
addr16
pop
pop
jno
cmpsl
push
sub
outsb
pop
out
mov
fld1
cwtl
jne
xor
push
in
mov
push
fcomps
in
nop
or
outsl
adc
adc
sarb
test
xchg
push
adc
int
sbb
sbb
test
xor
mov
inc
xchg
push
mov
mov
inc
or
ficoml
add
pop
mov
jl
mov
xor
mov
or
in
pop
out
test
mov
stos
cmp
fbstp
xchg
jle
mov
mov
adc
add
mov
push
test
xor
cmp
mov
outsb
xor
add
mov
daa
out
pop
mov
vmovdqa32
mov
sub
out
cmp
or
push
ds
lcall
push
mov
pop
push
or
or
push
or
stos
or
sub
jle
jbe
jae
jno
cmpl
test
push
bound
push
mov
in
andb
add
mov
pop
xor
jae
adc
bound
push
call
pop
mov
push
out
sub
dec
es
or
in
call
sub
mov
pop
daa
pop
adc
pop
roll
push
push
std
mov
xor
frstor
lret
adc
cmpsl
dec
data16
aaa
mov
pop
or
pop
repnz
jg
adc
fidivs
mov
xchg
daa
pusha
out
dec
dec
sub
or
dec
adc
mov
addr16
or
fcoml
pop
in
or
pop
mov
js
inc
or
call
inc
fcmove
add
push
adc
imul
adc
xlat
iret
lods
add
popl
cmpsb
dec
iret
xor
loopne
and
push
rcr
sub
sbb
shl
inc
repnz
push
mov
jb
ljmp
popl
adc
js
dec
xor
pop
pusha
mov
hlt
repnz
ret
lret
out
dec
ds
dec
dec
or
pop
push
lds
test
cmpsl
test
add
ja
int
fisttps
add
lcall
pmaxsw
xorl
cmc
cld
cmp
outsb
inc
push
mov
add
cltd
mov
push
test
add
dec
dec
jb
je
mov
repnz
repz
popa
push
movsb
rcrl
sub
rclb
shll
cmp
xorb
jo
fimuls
pop
mov
adc
or
sbb
cwtl
loop
inc
repz
and
pusha
mov
adc
out
icebp
insl
pop
adc
insb
pop
rcl
dec
adc
movsl
sbb
push
in
movhps
lock
push
fcomip
jae
jno
sahf
xchg
dec
sbb
pop
sub
dec
inc
jae
inc
push
repz
cld
add
popf
cli
jnp
popa
and
fiadds
xor
xor
enter
adc
push
adc
dec
ret
repnz
ljmp
mov
enter
or
push
addr16
xchg
mov
mov
push
test
fs
rcr
dec
cmc
adc
inc
xor
pop
ret
fsts
aam
lods
std
mov
fbld
stc
mov
ret
fisubs
or
xchg
pusha
out
ret
cltd
cwtl
sbb
jmp
jne
call
and
ds
lcall
cmp
dec
mov
xchg
jg
mov
xchg
loopne
enter
push
mov
xor
mov
add
xor
inc
jg
outsl
adc
mov
inc
and
pop
lock
cmpsl
push
int3
mov
xchg
sub
inc
loop
out
repnz
add
jae
and
pop
popf
push
mov
pop
sub
fidivl
lret
cmc
lods
and
sbb
and
mov
push
add
arpl
movsd
and
and
xor
mov
adc
xchg
insl
pop
add
pop
insb
adc
xor
fsubrs
xor
out
ss
mov
add
ret
loopne
pop
mov
movsl
nop
pushf
push
das
fwait
jle
inc
push
push
dec
lds
cld
lret
push
in
clc
inc
dec
pop
outsb
es
jmp
dec
hlt
ficomps
testb
adc
cmpb
dec
jg
add
mov
imul
mov
ds
ljmp
lret
insb
imul
inc
sub
inc
jecxz
out
int3
dec
ja
sbb
and
and
push
pop
mov
and
fsubp
lret
cmc
push
ljmp
clc
cmp
push
inc
dec
movsl
sahf
or
mov
sbb
push
mov
jbe
push
aam
pop
ret
dec
add
inc
std
mov
mov
push
jmp
jae
jle
jae
in
repz
lret
push
test
cmp
cwtl
inc
push
lcall
mov
push
dec
sbb
dec
cld
pop
xchg
sbb
mov
mulb
push
adc
adc
cld
pushl
mov
cmp
fimull
pop
ds
pop
xchg
daa
and
or
cmp
insl
mov
sub
outsl
mov
pop
jmp
push
loop
mov
xchg
sbb
pushl
cld
sbb
test
add
and
mov
mov
inc
scas
pop
xor
xchg
jb
sbb
sbb
adc
adc
icebp
les
xor
pop
add
add
push
jge
fdivrl
or
jge
inc
repnz
mov
push
mov
mov
adc
clc
mov
adc
pop
fnsave
mov
jne
pop
lea
sub
popa
aaa
dec
loope
popf
push
and
gs
xchg
pop
adc
cli
mov
outsl
cmc
jno
mov
fnsave
shrl
dec
ret
pop
ret
inc
stos
insb
jae
repz
dec
call
stos
cmp
lods
cmp
stc
cmpsl
cmpsl
jl
pop
ret
xchg
jge
inc
sahf
fists
icebp
adc
cmp
out
out
loop
repz
push
pusha
cmc
cld
push
cltd
or
adc
jbe
aam
or
inc
xchg
fldl
cmc
addr16
sub
pop
pop
call
inc
das
jle
lds
mov
push
jbe
shll
inc
and
push
mov
adc
pop
lret
cli
icebp
movl
dec
test
adc
insb
pop
outsl
sbb
adc
inc
rclb
cld
in
dec
or
in
cmp
outsl
mov
mov
shll
dec
mov
dec
mov
push
sub
enter
insb
loope
stc
xchg
lea
cmp
pop
push
jecxz
sahf
arpl
jb
or
push
cmc
adc
addr16
xchg
es
adc
sub
aaa
pop
sub
jl
cmp
imul
popa
adc
and
cmp
xor
pusha
ds
adc
inc
sub
or
mov
lea
mov
inc
push
cs
sub
les
or
das
rcr
pop
or
popf
mov
sbb
or
xor
adc
pop
xor
mov
sbb
cs
leave
or
jnp
test
inc
jmp
loopne
xchg
lods
mov
jl
cs
call
xor
add
sbb
decb
xor
mov
addr16
pop
cmp
incb
sbb
xchg
pop
repnz
adc
dec
lahf
sub
push
mov
ficoml
test
push
pop
or
mov
sarl
outsl
fcompl
outsl
cmp
sub
movb
dec
pop
dec
mov
das
sbbb
dec
cmp
call
aas
sub
hlt
and
nop
adc
lods
adc
je
test
test
mov
in
repz
outsl
addb
shrl
cmp
daa
jmp
cmp
pop
aaa
outsl
add
pop
sub
and
sbb
dec
mov
add
adc
push
push
jae
inc
xchg
mov
movsl
lcall
fdivrp
push
or
push
int3
inc
sbb
sbb
sub
mov
nopl
outsb
fildl
inc
jb
fistl
lock
xchg
push
lea
add
mov
ficoml
repz
loope
insb
adc
fstpt
sub
outsb
ds
xor
push
mov
lds
and
add
fisubrs
push
mov
int
mov
pop
and
and
cmp
push
leave
and
push
push
and
orb
pop
call
push
sbb
push
lea
dec
out
dec
sbb
lcall
mov
dec
mull
fldenv
jmp
sbbl
repnz
add
sbb
leave
in
pop
sbb
out
lcall
lods
inc
test
xchg
fwait
sub
pop
and
push
cli
lods
addr16
test
test
sbb
cld
add
mulb
adc
pop
adc
cmp
lock
mov
cmp
sbb
popf
push
or
adc
aad
sbb
push
cmp
fists
mov
in
mov
decl
add
push
arpl
sbb
icebp
inc
mov
push
mov
sub
xchg
das
popa
cs
lret
sbb
scas
pop
loop
lcall
cltd
or
xor
daa
movsl
ret
push
xchg
into
mov
inc
dec
mov
ljmp
adc
sbb
cli
adc
jae
pop
lcall
mov
xor
mov
sahf
jae
cmp
outsl
dec
xor
arpl
push
imul
pop
push
andl
pop
push
outsl
insl
rorb
sub
push
pop
stos
shlb
fsubrs
jge
xchg
add
adc
push
jmp
add
push
mov
sbb
insl
lds
dec
out
dec
dec
mov
jb
dec
in
test
das
pop
test
fidivrs
jge
leave
mov
shrl
push
sbb
mov
inc
cmp
adc
mov
xchg
aas
sbb
or
add
xor
sbb
repz
dec
cmp
outsb
push
int
dec
mov
jge
add
mov
es
in
pop
dec
mov
into
inc
out
mov
sub
sub
aaa
dec
mov
inc
adcl
or
sbb
sbb
xchg
cmp
xchg
dec
fxch
dec
jle
insl
test
sbb
xchg
mov
push
gs
sbb
inc
add
adc
xor
inc
push
incl
xchg
out
jo
cmp
or
repnz
icebp
hlt
mov
lods
or
orl
and
dec
test
aam
xor
pop
push
dec
sti
gs
jnp
cmc
subb
mov
pop
insb
nop
push
cmpxchg
into
add
pop
out
out
lret
mov
lahf
and
sahf
lods
dec
or
xor
in
rorb
sub
bound
cwtl
loop
sub
icebp
incl
lods
cmp
inc
aad
add
repz
movsb
xchg
push
je
cltd
dec
idivl
out
cwtl
fmul
mov
dec
adc
mov
fisttpll
nop
adc
jns
add
stos
dec
push
dec
cmp
mov
and
add
sahf
sbb
loop
dec
mov
xchg
inc
cmp
pop
inc
pop
push
je
lahf
cwtl
or
data16
insb
pop
aaa
out
and
push
mov
mov
pop
xor
cld
push
mov
rorl
popa
sbb
pusha
ljmp
and
insb
or
xchg
jmp
pop
fwait
mov
adc
jnp
std
sbb
enter
nop
pop
inc
pop
or
and
scas
shll
in
mov
rorb
mov
dec
and
mov
std
out
mov
pop
icebp
inc
adc
dec
and
mov
scas
push
pop
jecxz
lahf
mov
mov
rclb
pop
sub
aas
jecxz
mov
xchg
add
push
dec
mov
outsb
cmpsl
rorb
cmpsb
xor
jecxz
inc
lret
cltd
cs
sti
or
mov
test
jp
xlat
ja
jno
inc
mov
sub
loop
outsb
xor
enter
sbb
test
pop
cwtl
aaa
cmc
stos
mov
pop
adc
inc
lods
sub
ljmp
dec
mov
pop
inc
dec
out
out
insl
jbe
mov
ja
mov
fdivp
mov
or
iret
lods
or
sbb
lret
cmp
cmp
xchg
xchg
inc
adc
pop
popf
gs
es
cmc
mov
xor
push
aaa
fcoml
mov
pushf
sub
cmp
pop
jge
popl
out
and
mov
inc
inc
icebp
xchg
addl
fldt
inc
inc
ds
repnz
adc
rep
ja
jae
pop
cmpsb
pop
mov
pop
mov
aam
xor
xor
sbb
dec
ret
cmp
lea
mov
adc
mov
jnp
adc
mov
adc
nop
cmp
outsb
outsb
sbb
loopne
imull
icebp
xabort
dec
loopne
mov
int3
fwait
leave
leave
or
xor
push
fistl
pusha
mov
clc
mov
or
addr16
mov
pop
data16
cmp
repnz
inc
xlat
xchg
outsb
xchg
das
cmp
addb
sbb
je
add
mov
pop
push
inc
inc
adc
fisubrl
ret
fidivl
js
pop
jb
testb
jmp
cmp
push
cmp
fcmove
dec
ret
mov
mov
data16
in
xchg
ret
pop
mov
inc
adc
push
sub
nop
cmpsb
movsb
sbb
inc
stos
shrb
lock
test
add
out
push
xor
cmp
sbb
cmp
fbstp
inc
fildll
in
cmp
mov
les
cli
add
jl
pushf
adc
pusha
cmp
cmp
add
push
inc
dec
push
and
aas
xor
sbb
jl
sub
xor
shl
pushf
mov
dec
fisttps
xchg
dec
mov
icebp
sub
pop
cmp
aad
shlb
xchg
cmpsb
push
cmc
sub
push
pop
xchg
inc
icebp
and
ds
adc
les
orb
leave
dec
xchg
mov
cli
cmp
fdivrl
cwtl
negl
pop
in
aam
sbb
or
loope
mov
and
call
pop
sti
xor
pop
jp
gs
inc
icebp
cltd
cmpsl
or
dec
pop
xor
in
or
das
cmp
int3
or
push
sbb
ds
popa
mov
inc
cmp
pop
push
insl
xchg
inc
jb
jae
inc
add
test
dec
dec
mov
cmp
fmuls
out
je
dec
push
out
movsl
sub
and
mov
adc
sub
cmc
ret
sub
or
xchg
rcrl
push
pop
pop
shrd
shl
sub
mov
cs
hlt
or
cmp
pop
es
mov
or
inc
shlb
push
rcrl
pop
or
dec
aam
addr16
pop
inc
dec
testb
mov
icebp
mov
stos
dec
fstl
sbb
lcall
aas
push
inc
jmp
and
lcall
pop
jnp
aaa
shlb
mov
push
or
fcomps
add
movsl
push
jns
insb
adc
fwait
mov
pushf
mov
push
in
rorl
loop
jns
push
lods
sub
xchg
adc
pop
sti
pop
ficoms
add
mov
inc
mov
and
sbb
mov
fstpl
cltd
cmp
int3
mov
mov
cmp
adc
aad
inc
inc
pop
orl
fidivl
mov
insb
mov
pushf
and
test
sbb
add
jecxz
jp
pop
in
lea
push
inc
out
jecxz
sahf
jb
adc
out
push
mov
jmp
push
dec
sub
cmp
xor
cwtl
dec
out
in
push
add
push
popf
push
sub
icebp
jne
xchg
jns
insl
inc
add
movsb
les
mov
mov
adc
inc
pushf
xchg
xor
sbb
dec
out
pop
ficoms
aam
sbb
out
or
jae
xchg
or
jmp
test
xchg
repz
adcl
sarb
add
xor
dec
push
add
fisttpll
sub
pop
add
lock
or
or
notb
and
outsl
cmp
arpl
xorps
addr16
ss
std
adc
or
mov
dec
fadds
pusha
adc
pop
pop
sbb
out
jmp
cmpsl
insl
cltd
repnz
xchg
outsb
sbb
inc
push
lcall
adc
push
and
sbb
mov
adcb
pop
orb
and
cmp
xchg
and
adc
inc
es
or
outsb
icebp
rclb
psubb
dec
mov
lcall
mov
fldenv
mov
cmp
test
fs
sub
lret
adc
sbb
jno
cmpsb
pop
fsubl
jecxz
rorb
test
arpl
lcall
jp
addr16
xchg
push
addr16
out
add
stos
sbb
dec
lcall
sbb
xchg
sbb
xchg
or
fidivs
xorb
pushf
cmpsl
add
inc
sbb
movsb
leave
or
push
mov
lcall
mov
adc
dec
xor
test
into
aam
push
ds
add
push
adc
cmp
test
nop
pop
xor
or
inc
inc
sbb
incl
pop
push
xchg
xchg
add
fstps
push
push
cmp
xchg
aas
iret
push
mov
sub
test
loop
dec
test
cmp
sbb
repnz
inc
xchg
and
adc
jge
and
sbb
outsb
pop
icebp
mov
clc
xor
test
jne
loope
xor
idiv
jae
add
pop
icebp
or
dec
xchg
jecxz
lds
jb
xor
xor
mov
loop
outsl
mov
xchg
mov
add
out
pop
ja
and
insl
arpl
sahf
inc
lcall
mov
inc
dec
or
stos
dec
inc
lods
popa
mov
roll
roll
in
mov
in
cwtl
inc
loopne
inc
in
dec
fbld
cli
xchg
sub
fwait
mov
mov
xor
xchg
mov
fdivs
cmp
jbe
cmp
lcall
daa
aad
mov
fimull
fdivl
fst
adc
dec
and
lret
rcrb
in
inc
int
cmp
repz
sub
fcomps
push
xchg
mov
int
movsl
mov
popa
xchg
pop
push
insb
popf
out
add
cmp
inc
xor
mov
in
mov
mov
arpl
sahf
mov
daa
xor
std
push
push
add
lds
mov
jbe
mov
xor
data16
mov
in
inc
pop
fstpt
add
sbb
into
leave
pushf
fnstenv
mov
sahf
sbb
insb
mov
mov
or
mov
push
insb
in
and
outsb
sub
xor
add
add
or
sbb
push
xchg
dec
pop
push
mov
xor
testl
pop
lret
jne
push
add
dec
test
aas
mov
pop
dec
pop
gs
push
nop
xchg
adc
addr16
mov
outsl
jo
jbe
mov
sub
add
out
sbb
inc
cmp
leave
sbb
push
or
and
xchg
sbb
inc
or
xchg
repz
loop
out
adc
insb
dec
mov
push
rcr
dec
sbb
cmp
sbb
push
aas
inc
lods
loope
inc
inc
mov
dec
leave
xchg
pop
loop
push
pop
pop
fcmove
aaa
inc
sub
dec
stos
es
mov
xchg
in
enter
ss
dec
mov
icebp
fnstsw
sbb
xchg
gs
jl
or
mov
test
shrb
adc
lods
inc
icebp
jecxz
rorl
insb
pop
aam
sub
lahf
xor
loop
jae
insl
pop
out
pop
je
enter
rep
and
cld
fs
stc
mov
xor
cwtl
sbb
pop
inc
gs
inc
jbe
repnz
pop
jp
sbb
out
inc
cmp
bound
adc
jp
pop
lcall
jo
cs
or
testl
pop
pmuludq
pop
dec
cmc
jge
enter
cmp
inc
fwait
sbb
dec
aas
lahf
inc
adc
xchg
push
fldcw
push
mov
mov
outsb
add
mov
les
sti
or
pop
testb
es
push
xchg
aaa
imul
movsl
cs
sbb
and
inc
aas
cmp
div
jae
add
out
shlb
jnp
add
or
loope
xchg
adc
rcl
call
push
push
cld
daa
mov
add
sub
add
sahf
push
adc
pop
mov
mov
icebp
adc
push
lahf
mov
lods
dec
iret
xchg
ret
adc
enter
sub
jecxz
insl
bound
sub
imul
mov
in
pop
jecxz
out
mov
inc
lods
loop
push
shll
lahf
test
xchg
push
and
in
dec
inc
sti
es
jmp
xor
stos
xchg
shl
mov
add
movsb
add
fdivp
mov
icebp
mov
loop
push
lahf
in
aam
fsub
dec
les
push
dec
lahf
mov
psubq
lahf
and
push
dec
push
incl
xchg
mov
pop
aam
es
cmp
jne
cmp
cmc
cmpsl
pop
aas
popa
mov
outsb
add
mov
hlt
cs
cmp
movsb
mov
add
dec
push
and
or
push
bound
mov
xor
das
pop
cmpl
mov
shlb
ficomps
and
xor
pop
fistps
out
dec
popf
cmpsb
inc
fsubrs
inc
inc
call
outsl
int
and
adc
xlat
pop
aaa
pop
fdivl
popa
repnz
or
leave
dec
out
xchg
and
aam
bound
mov
inc
dec
push
mov
push
outsl
jno
icebp
xor
in
push
ljmp
repz
dec
xor
pop
push
dec
pop
dec
outsb
add
sbb
cmpsl
pop
scas
pop
mov
add
loope
mov
mov
xchg
pop
sbb
xchg
movb
js
test
ss
jno
adc
xchg
dec
shlb
xchg
push
xchg
dec
adc
lock
sbb
loope
aaa
adc
out
jle
gs
sbb
xchg
jle
and
fmuls
lods
push
adc
xor
rclb
adc
push
insb
dec
sbb
mov
push
ret
sub
addl
pusha
inc
test
movsl
mov
jo
outsl
xor
sbb
out
shl
cwtl
or
fimull
cmpsl
out
mov
ds
outsb
cmp
in
pushf
sti
fsubr
xchg
mov
inc
xchg
aam
adc
adc
enter
repz
popa
adcl
fwait
mov
test
cwtl
inc
inc
mov
shl
add
outsl
add
leave
xchg
sbb
adc
push
and
fnstcw
lcall
push
aam
std
mov
mov
push
cmp
jmp
jg
loope
adc
std
sbb
sbb
icebp
jge
push
rclb
xor
add
jl
fists
pop
repnz
loopne
leave
mov
cld
out
imul
es
imul
and
cmp
xchg
push
and
xchg
push
call
repnz
mov
lahf
mov
mov
in
mov
push
jno
dec
inc
xchg
addb
outsl
and
movsb
sbbb
cmp
ficoms
sub
push
xchg
push
add
mov
inc
inc
mov
adc
xor
stc
pop
rdtsc
out
inc
stc
jle
push
push
xchg
mov
add
push
sbb
fwait
sti
scas
shll
je
and
in
bound
mov
push
push
and
ror
xchg
xchg
and
jo
or
sbb
and
sbb
jne
pop
pop
in
pop
cmp
out
cmp
inc
dec
lcall
insb
inc
push
call
jecxz
push
movsl
cli
mov
and
cld
pop
or
push
mov
dec
fidivrl
mov
mov
arpl
sahf
out
test
dec
dec
dec
push
mov
adc
arpl
outsb
lahf
call
rcll
out
rcll
inc
and
push
ds
or
xchg
sbb
pushf
ficomps
out
sub
repz
fidivrs
lret
or
or
or
icebp
mov
lret
push
icebp
insb
nop
aad
std
fisubl
adc
push
imul
xor
std
xor
cmp
cs
mov
sub
dec
sti
sahf
xor
and
xchg
jo
xchg
fcomps
xchg
es
mov
inc
xchg
push
dec
rorl
stos
sbb
repz
insb
in
dec
leave
insl
dec
adc
xchg
xor
jg
dec
adc
ja
sub
mov
xor
scas
cwtl
mov
bound
sbb
mov
stos
lcall
fs
or
loopne
mov
push
out
data16
cmp
cmc
clc
out
repnz
daa
icebp
inc
inc
ja
lds
out
adc
adc
lahf
popf
mov
inc
jle
dec
push
cltd
mov
ret
dec
test
mov
rolb
leave
in
ret
js
pop
fldcw
and
adc
sbb
add
fcomi
cmp
jno
shlb
in
jle
cld
stc
outsl
iret
and
mov
and
popw
xor
andb
outsl
inc
cmp
or
lock
jecxz
jb
jb
bound
sbb
xlat
mov
pop
add
xchg
or
ljmp
into
cmp
adc
pop
add
cmp
push
or
add
mov
or
insb
jp
inc
mov
in
or
jge
inc
mov
cmp
xor
incb
out
mov
jmp
insb
mov
lcall
adc
mov
loop
call
push
in
dec
data16
mov
push
ret
dec
add
sbb
mov
arpl
sbb
shl
fcmovbe
adc
xor
or
dec
test
or
mov
in
cmp
mov
sub
je
dec
push
jbe
les
add
sbb
mov
cld
mov
mov
push
lds
sarl
or
insb
mov
pop
scas
push
and
xor
in
and
pop
insl
in
popa
push
test
push
jo
add
inc
loop
cmp
jmp
mov
aaa
repnz
dec
sub
sbb
sbbb
cmc
out
xchg
cmp
daa
loop
cmp
sti
rcr
das
jae
idivb
cmp
lods
push
push
xor
fsub
ret
pop
xchg
arpl
and
mov
sbb
clc
sbb
jl
lahf
sub
loopne
push
mov
lret
lahf
test
mov
mov
dec
nop
sub
xchg
xor
sbb
sbb
push
dec
roll
mov
sub
or
mov
sbb
push
sub
or
xchg
cmp
pop
xor
add
adc
push
xchg
out
insb
mov
jle
or
pop
jne
or
adc
in
pop
je
cmpb
push
xor
verw
adc
add
and
or
jmp
and
aas
adc
pop
pop
out
mov
pop
push
stc
mov
lcall
mov
jae
dec
sbb
cmp
out
cmp
cmp
xor
cli
fistps
cmp
xchg
dec
loope
add
mov
ficoms
pop
fsubrp
insl
add
shlb
push
popa
fistl
shll
icebp
add
fsubl
push
arpl
mov
xor
shll
lods
xchg
scas
cmp
ficomps
xchg
xchg
mov
out
push
add
mov
in
pop
push
cmp
cmp
ljmp
in
call
insl
clc
sbb
and
repnz
gs
std
nop
push
jecxz
or
in
clc
cld
and
cmpsb
shl
loopne
notb
mov
fisubs
pop
adcb
mov
nop
jecxz
rcrb
pop
inc
test
sbb
mov
mov
sbb
outsb
sbb
jb
push
sbb
cmp
sbb
and
inc
inc
cmp
pop
xor
xchg
pop
adc
push
push
xchg
adc
pop
add
rcrl
push
mov
xlat
cli
push
and
or
cmp
jb
lahf
pusha
pop
out
jg
inc
jecxz
push
rolb
mov
xlat
xor
add
or
fnstenv
cmp
ret
sti
mov
add
fsts
add
fwait
mov
inc
repnz
fsubs
pop
pop
xchg
sub
bound
push
add
sbb
stos
pop
push
cmp
or
dec
sub
ja
insb
cmc
data16
in
xchg
loop
jmp
in
out
in
out
jmp
in
out
in
out
jmp
in
out
in
and
sbb
or
and
and
pop
sub
and
daa
jge
ja
insb
es
daa
xchg
and
mov
and
and
daa
lds
out
and
push
sbb
xchg
push
aam
pop
xor
pop
aam
xlat
dec
aad
fdivrs
aam
xlat
gs
fcoms
mov
cmpsb
aam
xlat
aad
iret
fadd
aam
xlat
in
aad
aam
sub
add
iret
sbb
pop
fs
imul
outsl
imul
xchg
addr16
mov
imul
data16
imull
addr16
adc
add
ds
daa
imul
fs
je
outsb
imul
xchg
imul
movsb
fisubs
data16
imul
in
pop
and
push
push
or
sub
test
push
test
inc
xchg
jnp
insl
test
pushf
xchg
test
test
mov
xchg
test
xchg
test
mov
sahf
push
sub
aas
or
sahf
ss
pop
lock
decb
dec
jge
ja
insb
data16
xchg
call
mov
std
cmpsl
lock
cld
ret
inc
std
push
hlt
out
cld
jmp
sbb
enter
stc
xor
loopne
loop
loope
jecxz
out
jl
jbe
arpl
gs
out
xchg
loopne
loop
loope
jecxz
out
lods
loopne
loop
loope
jecxz
out
loopne
loop
loope
jecxz
out
sbb
push
arpl
bound
clc
push
mov
loop
jmp
cwtl
and
ficoms
enter
stc
or
loopne
loop
loope
jecxz
out
sub
loop,pn
loope
jecxz
out
pop
loopne
loop
loope
jecxz
out
fsub
loop
loope
jecxz
out
hlt
loopne
loop
xchg
insl
and
push
aam
pop
xor
pop
aam
xlat
dec
aad
fdivrs
aam
xlat
gs
fcoms
mov
sar
bound
adc
andl
push
insl
mov
insl
mov
cld
xchg
repnz
sti
mov
mov
loopne
out
jmp
in
out
in
out
jmp
in
out
in
out
ljmp
add
hlt
pop
loop
push
sbb
mov
fs
jle
and
pop
xor
dec
mov
lret
add
cmp
dec
incl
jmp
in
insl
loop
jmp
in
out
in
out
adc
mov
mov
fdivrs
lods
xchg
pop
icebp
xor
push
push
sub
pop
sub
test
loopne
in
push
adc
jge
enter
in
inc
sub
mov
sub
push
cmp
xor
inc
jle
pushf
call
fimuls
stc
sub
cs
loopne
loop
loope
jecxz
out
inc
cmp
in
mov
jg,pn
enter
cmc
movsl
jmp
and
mov
lcall
and
mov
and
ret
sub
pop
sbb
xchg
fs
arpl
mov
sti
or
ret
pop
mov
adc
cwtl
sbb
or
and
cltd
cld
mov
clc
std
jmp
xor
das
shlb
test
mov
xchg
insl
fiaddl
mov
push
push
pop
sub
pushf
and
cld
cmp
xor
pop
and
outsl
mov
rcrl
out
loop
adc
push
outsb
push
pop
inc
repz
repz
cli
xchg
test
xchg
popf
adc
pop
ds
leave
int
sti
push
jmp
xor
sub
adc
testl
mov
in
and
and
and
dec
and
and
xchg
es
cltd
jmp
mov
jl
xchg
xlat
cmpsb
xchg
jnp
daa
dec
rol
lret
andl
sub
pop
sti
xchg
icebp
shl
cmp
mov
dec
movsb
out
pop
sahf
adc
imul
inc
arpl
sahf
dec
movsb
and
push
sbb
pop
lahf
xor
inc
mov
inc
jge
lcall
scas
aaa
test
mov
xchg
mov
pop
mov
push
xor
jl
lahf
mov
lock
adc
ss
push
cli
data16
xchg
jmp
out
mov
loopne
and
insb
dec
insb
fisubrs
push
or
xor
test
rcrl
xor
cwtl
std
ljmp
push
sub
sub
fldenv
in
inc
sub
fldl
negb
and
jae
jp
fbld
imul
xchg
loopne
loop
insb
aad
out
in
out
jmp
in
out
cmpb
imul
les
stc
js
jmp
loope
loop
sbb
mov
push
cmp
out
cmc
sub
cld
pop
jecxz
out
push
loopne
loop
loope
jecxz
pop
or
imul
call
pushf
call
cmpl
scas
in
test
and
daa
shll
int
mov
xchg
mov
push
out
aam
shl
pop
sbb
pop
lret
or
add
pop
repnz
sub
jle
and
pop
pop
cld
pop
cld
push
mov
out
jmp
in
out
in
xorb
cltd
addr16
gs
mov
adcb
or
movsb
xlat
mov
rcr
pop
aaa
leave
loopne
loop
loop
fisubl
data16
in
pop
cs
cwtl
xor
stos
cmp
sub
pop
jmp
inc
or
and
inc
stos
lret
imul
sub
push
ret
xchg
hlt
xlat
cmc
adc
adc
cmp
movsb
push
ficoml
test
in
jae
lcall
leave
xchg
ret
xchg
mov
loope
jecxz
and
mov
push
arpl
imul
gs
push
sarl
mov
mov
imul
callw
popf
jmp
mov
mov
lret
ljmp
and
addr16
aas
cltd
push
and
repnz
out
mov
add
or
cld
clc
push
sub
and
push
and
xor
mov
ds
insb
adc
xchg
aam
rclb
adc
pop
mov
fldcw
pop
ficoml
addr16
cwtl
jmp
mov
jmp
jmp
loopne
adc
mov
test
fstpt
scas
mov
lret
loope
daa
mov
pop
and
xor
insl
jg
mov
in
out
jmp
and
popa
daa
xchg
cmc
xchg
pop
jmp
mov
pop
and
xor
xchg
aad
leave
pop
add
or
mov
sub
addr16
lahf
adc
push
int
rcll
fsub
adc
das
jge
xchg
dec
stc
ljmp
shl
iret
out
jmp
in
aaa
and
lahf
and
pop
and
daa
jb
arpl
mov
or
sub
inc
in
es
sub
aas
fcoms
mov
sbb
lcall
imul
insb
jns
xchg
or
sbb
cs
push
ficoml
les
pop
cmp
test
hlt
in
jmp
sub
pop
sti
js
mov
and
ss
imul
pop
test
push
inc
xchg
orl
and
cmp
cld
fwait
andb
and
mov
xor
sub
arpl
outsl
dec
push
jo
daa
gs
sub
pop
aas
xor
out
and
xor
push
mov
jg
and
add
and
test
pop
pop
popf
and
mov
sub
push
repz
xlat
sarb
cmc
aam
and
mov
sbb
push
add
and
and
push
add
and
outsb
jg
popf
mov
lods
cld
leave
mov
out
mov
or
xchg
adc
or
xchg
jbe
arpl
addr16
gs
inc
mov
imul
imul
sub
arpl
pusha
pop
mov
jmp
mul
add
and
pusha
test
imul
and
xchg
jge
push
xlat
dec
adc
in
sti
jae
loope
jnp
push
std
mov
mov
and
or
cmp
call
cmp
daa
std
int
adc
adc
pop
xlat
jge
xchg
jle
movb
sarl
and
inc
ret
adc
in
pop
sub
rcrl
lcall
jl
push
and
mov
shl
mov
cmp
cs
sbb
sub
icebp
cmpsl
les
and
out
sbb
sub
dec
rcr
xchg
jnp
sbb
repz
cwtl
inc
and
std
mov
push
jno
popf
pop
sub
jl
dec
mov
and
dec
adc
adc
shll
ret
repnz
stos
jne
dec
adc
xchg
mov
rorb
sub
ds
nop
insb
jecxz
xchg
cs
sbb
and
repz
jle
arpl
jns
dec
shrb
lock
enter
mov
or
xchg
or
dec
adc
int
jmp
sbb
leave
pusha
pop
pop
and
cltd
adc
and
ror
jmp
cmp
cmpsb
inc
fcomps
jp
into
sub
pop
mov
push
or
dec
jns
add
mov
out
loope
sub
push
ss
cmp
fiaddl
pop
mov
popa
js
fs
xchg
sbb
mov
aaa
icebp
stc
push
cs
ror
icebp
ret
push
sub
push
das
adc
ja
es
outsb
stos
xchg
cmp
sbb
jge
mov
orl
outsl
sub
add
push
ss
cwtl
lods
sub
inc
int3
mov
je
sahf
fnstcw
jg
mov
clc
or
pop
pushf
cmc
push
lds
fwait
adc
lret
aad
sarb
lods
jne
fisubs
push
xchg
pop
stos
xchg
aam
roll
sbb
or
inc
cmpb
jp
jge
mov
lcall
in
xchg
pop
test
or
and
xor
daa
addr16
gs
dec
fs
imul
outsb
imul
aam
xlat
mov
aam
xlat
rcl
fdiv
hlt
aam
xlat
loop
adc
sub
dec
addr16
data16
imul
scas
pop
sbb
loopne
loopne
and
jnp
xor
icebp
and
in
add
adc
xchg
test
cli
les
adc
mulb
vaddsd
xchg
aas
mov
mov
fwait
dec
jmp
loope
add
repz
icebp
inc
testl
xor
call
rcrb
bound
cmp
and
mov
int
cli
sbb
xlat
add
push
push
daa
dec
cmp
fisubl
test
in
adc
pop
sub
aas
test
movsl
inc
pop
dec
gs
cmp
out
cmp
xchg
jecxz
in
mov
sub
adc
push
push
push
stc
pop
xchg
jge
je
data16
out
mov
and
push
lcall
ficoml
or
cmp
leave
xchg
negl
push
pushl
or
pushf
jne
push
stc
mov
jp
rcll
xor
sub
popf
jmp
mov
mov
pop
stos
push
and
xor
jle
mov
and
mov
mov
sub
pop
cmp
push
push
dec
xchg
push
pop
and
pop
sbb
xor
nop
aas
sbb
jg
insl
and
aas
lds
adc
imul
and
cmpsl
sub
popf
scas
cld
jmp
or
cmp
adcb
stc
or
push
adc
jp
pop
and
aad
mov
sahf
adc
mov
sub
pop
insl
nop
in
clc
mov
and
sub
lea
subl
push
push
adc
mov
xchg
mov
out
loop
mov
testl
in
ja
pushf
movsl
mov
jecxz
push
adc
or
adc
dec
cmp
and
shll
lret
push
sub
push
pop
jl
xchg
cli
inc
cli
lock
jo
and
sub
dec
cmp
pushf
daa
push
enter
enterw
jmp
add
cltd
fstps
jne
and
in
testb
sub
push
lea
mov
mov
pop
sbb
lods
idivl
aaa
das
sub
sbbl
pop
scas
push
in
ljmp
pusha
leave
pusha
shrb
push
imul
xor
test
adc
sbb
mov
aas
and
xchg
out
or
cli
int
ljmp
sub
cld
adc
lcall
sub
mov
out
inc
mov
sub
and
mov
pusha
push
sar
aaa
push
rorb
xor
scas
push
aam
ss
xor
call
test
and
call
call
mov
idivl
pop
or
daa
jb
fildll
inc
test
mov
out
repz
fsubrs
add
jg
lahf
divb
sub
xchg
daa
inc
sbb
push
pop
addb
popf
imul
xchg
or
push
cs
sub
xchg
das
push
inc
pushf
iret
sbb
and
sbb
inc
push
sbb
jo
flds
in
sahf
jle
jge
lahf
pop
xchg
jo
sahf
cmpl
cmpsl
adc
sub
clc
pushf
test
or
test
adc
mov
jp
and
shll
xchg
int3
fisubrs
pop
mov
mov
rorl
lret
xor
psubb
pop
and
push
cmp
movsb
add
add
orb
test
sbb
jae
dec
jmp
in
mov
pop
adc
ss
inc
jle
clc
and
mov
adc
mov
lods
fscale
out
sbb
inc
cs
lea
mov
mov
sbb
xchg
pushf
mov
mov
fs
push
cmc
xchg
lock
daa
lods
movsb
outsl
outsl
push
cltd
pop
jmp
xchg
fcmovbe
lret
out
push
es
daa
in
insl
push
dec
cmpsl
xor
mov
in
add
xor
hlt
push
xchg
jecxz
mov
out
mov
frstor
push
divl
fldl
sbb
aad
sbb
loopne
and
insb
xor
pop
hlt
push
ljmp
popf
imul
cmp
xor
xchg
pushf
mov
push
aad
jmp
rcrl
sub
shll
mov
xchg
aam
les
jge
sub
xchg
sub
sbb
sbb
xor
push
jb
dec
xor
jb
scas
insb
std
lcall
test
push
add
aam
jg,pn
bound
or
ds
fdivrs
push
mov
rcrl
jno
aaa
out
push
test
test
mov
lock
cmp
ljmp
pop
sub
rcrb
pusha
lock
and
and
fs
mov
repz
out
loope
daa
gs
insl
and
dec
pusha
jne
imul
notb
xor
aam
adc
in
jecxz
aas
ss
and
outsl
mov
movsl
test
jecxz
or
xor
cmp
adc
call
popf
jge
clc
daa
daa
int
inc
and
xchg
shl
das
mov
mov
and
inc
mov
cmp
mov
je
lret
and
pop
sti
mov
jns
sbb
cmp
and
daa
adc
pop
xlat
inc
adc
lock
leave
std
mov
dec
aam
and
repnz
jns
or
popa
mov
adc
rcr
mov
lock
add
pop
rorb
pusha
shrb
adc
cld
shl
pop
and
jbe
vpxor
out
dec
gs
insl
sub
into
pop
clc
dec
aaa
push
daa
imul
mov
fst
rcl
mov
mov
repz
into
push
dec
adc
out
mov
lds
es
xor
cmp
dec
cltd
std
pushf
lock
xchg
mov
enter
pop
sub
lea
or
jns
mov
mov
lods
jg
repz
adc
add
cmp
inc
mov
mov
dec
repnz
roll
fidivl
pushf
sub
jge
leave
mov
outsl
sub
pusha
xchg
test
in
mov
sbb
sub
push
or
xor
jae
jns
frstor
jne
jmp
data16
cmpsb
test
sbb
cmp
jecxz
adc
cmpsl
pushf
cld
mov
mov
test
jae
inc
mov
mov
call
xor
mov
inc
rcll
nop
loopne
fstpl
adc
stos
fdivs
adc
pop
cmp
pop
xchg
xchg
xchg
or
notl
inc
fiaddl
clc
stc
jmp
push
or
mov
mov
test
outsl
test
fisubrl
fwait
ss
jl
mov
pop
dec
and
lahf
dec
leave
jl
push
sahf
in
mov
in
cli
add
rcrl
pop
sbb
pop
cmpsb
pop
pop
pusha
xchg
ret
daa
cmp
mov
in
xchg
or
scas
nop
pop
pop
sub
sub
test
jl
xchg
or
pop
mov
lea
mov
pop
mul
mov
inc
test
or
xor
loop
cvtpi2ps
test
ret
les
addr16
inc
cmp
enter
jecxz
jnp
jae
or
mulps
test
push
in
adc
and
js
pusha
decb
insb
std
repz
scas
sbb
xchg
out
fstps
call
std
in
jmp
repnz
repz
rcrl
lcall
cltd
jge
stos
or
pushf
lcall
or
and
xor
sub
imul
pop
pop
cld
push
jmp
inc
movsl
out
pusha
lcall
fs
scas
out
adc
push
and
mov
xor
jo
cmp
repz
xchg
test
push
push
andb
xor
adc
inc
dec
les
adc
xchg
lret
sub
imulb
subb
jbe
mov
or
mov
sahf
es
jnp
push
imul
repnz
call
pusha
pop
push
sbb
xor
test
movl
and
movsb
mov
aaa
and
push
sti
jg
add
xchg
or
xchg
inc
or
pop
mov
sub
inc
dec
and
sarb
sbb
adc
clc
das
dec
dec
jnp
inc
dec
add
jg
xchg
mov
mov
pop
mov
rcll
adc
out
xor
xchg
push
pop
sbb
inc
shrl
incb
sub
push
and
je
sbb
cmp
adc
and
mov
mov
in
mov
pop
ficoms
push
cmp
test
or
jbe
call
and
sub
pushf
pop
jne
ret
mov
sbb
xchg
fistl
daa
inc
je
aad
or
dec
mov
fstpl
push
sbb
and
push
sub
push
test
stos
pop
cmpsb
xchg
rcr
add
mov
xchg
pop
lret
imul
cmp
jb
push
jae
sub
xor
clc
mov
fcomps
push
stos
ficoms
lcall
sahf
and
call
jbe
sub
lahf
xchg
sar
shll
inc
notl
or
popf
pop
mov
in
pop
lahf
xor
int3
push
dec
adc
adc
aam
in
dec
xchg
mov
les
ja
popf
mov
mov
cmpsl
pushf
sbb
neg
and
movsl
sahf
imul
fmull
jb
hlt
jbe
imul
aad
push
dec
inc
add
xchg
mov
xor
sub
push
lods
xchg
push
xor
pop
inc
ja
adc
mov
xlat
xchg
leave
or
xor
inc
cmp
cmp
dec
push
jnp
push
mov
cmp
push
sti
xchg
imul
dec
cmp
push
mov
sbb
push
mov
cs
aas
hlt
call
imul
and
clc
out
mov
iret
sbb
loopne
mov
xor
cmp
jnp
xchg
pop
dec
push
mov
sbb
cmp
dec
push
lahf
jbe
sbb
test
pop
icebp
xchg
mov
jb
sub
jno
fisubl
pop
dec
pushf
bound
stc
inc
sbb
cld
mov
jmp
ficoms
aaa
loop
jns
xor
dec
js
jbe
fstps
scas
pop
pop
add
loopne
nop
adc
jnp
sbb
mov
adcl
mov
xchg
sbb
mov
pop
sbb
cmp
mov
and
outsl
scas
sbbl
lea
sbb
rorl
jecxz
les
pusha
cwtl
jo
insb
xchg
jmp
cmp
movsb
rorl
sbb
mov
cwtl
fwait
jecxz
xchg
insl
sbb
push
sbb
adcb
fdivrl
mov
imul
xor
stos
div
push
sbb
mov
or
sbb
dec
and
sbb
mov
outsl
sbb
stos
pop
imul
out
sbb
das
add
jns
pop
pop
hlt
sbb
sti
sbb
mov
ret
dec
and
and
and
movsb
sbb
aad
dec
sbb
lock
push
sbb
pushf
cltd
ret
imul
dec
mov
pop
cmpsl
sahf
sarl
mov
mov
sbb
jl
adc
pop
out
dec
mov
cmp
mov
sbb
icebp
adc
lcall
xchg
pop
sub
mov
jl
mov
cld
add
lahf
les
xor
popa
push
test
sbb
inc
jecxz
push
gs
dec
sbb
repz
or
adc
cmp
sbb
cmpsb
loopne
sbb
dec
mov
jne
das
xchg
fbld
mov
mov
or
std
lahf
xchg
pop
push
ja
movb
xor
dec
cmp
cmpsb
sbb
ret
add
std
inc
aaa
shl
or
jne
mov
pop
in
ja
cwtl
xor
and
fs
imul
test
add
es
out
fnstcw
push
dec
push
mov
cmpsb
adcb
dec
aas
mov
into
scas
adc
push
mov
in
sahf
loope
sbb
sub
fcmovbe
mov
sbb
push
clc
jp
sbb
out
mov
dec
sbb
xchg
ror
in
lods
mov
mov
mov
sbb
roll
pushf
repz
xor
and
xor
cmp
shlb
shrb
jg
aas
mov
or
icebp
ret
pop
dec
mov
jmp
sbb
sbb
inc
sbb
dec
std
or
leave
cmc
sbb
mov
incl
call
push
mov
sbb
js
jnp
pop
or
pop
mov
aaa
adc
pop
jmp
sbb
dec
jmp
cli
enter
and
xchg
bound
stos
or
insl
xchg
sbb
pop
and
setl
adc
jg
and
adc
sbb
push
in
jb
push
pop
sbb
mov
icebp
fnsave
dec
or
sbb
aam
jmp
pop
adc
loope
and
sbb
pushf
cmpsl
sbb
jae
jecxz
lret
and
rorb
mov
dec
imul
add
cwtl
adc
sbb
std
stos
push
mov
in
jns
adc
outsl
mov
add
pop
xor
lock
negb
push
les
mov
cmpsb
cmpsb
hlt
pop
sbb
popf
pop
loope
scas
and
test
mov
adc
add
cmp
popw
call
ss
sbb
dec
add
ret
xchg
sarl
jp
dec
arpl
mov
jecxz
js
hlt
outsl
shlb
sarl
cmc
xlat
mov
rcl
or
inc
fs
pusha
ja
lds
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
addb
add
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sahf
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
add
dec
add
bound
and
add
jbe
add
add
add
and
arpl
outsl
add
insl
add
outsb
add
je
jns
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsl
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
and
dec
add
outsb
add
imul
add
add
outsl
add
add
imul
and
bound
jns
and
je
push
add
dec
add
bound
and
push
add
popa
add
and
popa
add
add
add
je
push
add
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
adc
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insb
add
bound
add
outsl
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
add
add
xor
pop
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
