push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
lcall
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
cld
and
add
and
add
add
push
and
add
add
add
add
outsb
and
add
add
pop
and
add
and
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
xchg
and
add
add
fsubs
add
fsubl
add
push
and
add
and
add
add
mov
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
cld
and
add
and
add
add
push
and
add
add
add
add
outsb
and
add
add
pop
and
add
and
add
add
add
add
add
push
imul
je
add
popa
je
inc
jbe
outsb
je
add
aad
inc
gs
gs
inc
imul
imul
jb
je
arpl
add
jge
dec
jo
outsb
dec
jne
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
outsb
arpl
dec
outsl
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
imul
insl
gs
insb
outsl
jae
add
add
insb
jae
gs
popa
insb
jne
add
add
popa
jo
gs
jb
jns
ret
gs
jne
jb
outsb
je
jb
arpl
jae
dec
add
insb
outsb
inc
add
cmp
fs
imul
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
push
push
je
imul
inc
add
roll
dec
gs
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
addb
jae
push
arpl
add
push
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
jns
inc
gs
push
jns
push
imul
jb
ja
push
fs
inc
gs
push
gs
dec
gs
imul
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
push
dec
inc
dec
inc
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jnp
stos
lods
lods
add
cmpsb
test
mov
mov
mov
ret
ret
stos
leave
leave
lret
lret
int
rcl
shr
rcl
shl
iret
ror
hlt
into
int
hlt
enter
leave
leave
out
in
mov
mov
lods
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
xlat
xlat
fdivr
fcom
xlat
fcom
aad
ror
sar
into
int
aam
aam
rcl
iret
inc
ret
mov
mov
lods
iret
movsl
movsl
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
iret
iret
sar
aad
fcom
xlat
call
xlat
call
aam
dec
into
into
dec
int
call
aam
dec
into
into
mov
mov
mov
std
cmpsb
cmpsl
cmpsb
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int3
into
call
rcl
fcom
xlat
call
xlat
xlat
call
aad
dec
into
int
lret
dec
into
into
inc
inc
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
push
sbb
sub
push
xor
cmp
aaa
cmp
cmp
and
and
push
push
push
pop
add
add
add
add
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
enter
rcl
call
aam
call
call
rcl
inc
leave
enter
inc
mov
mov
scas
lods
scas
jmp
pushf
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jge
jge
jge
jb
jo
popa
bound
dec
dec
push
xchg
cmp
mov
outsb
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
lret
dec
leave
lret
inc
enter
ret
ret
mov
mov
lods
lods
scas
jmp
fwait
lcall
xchg
xchg
cwtl
xchg
xchg
fwait
cltd
cltd
in
test
ds
femms
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
jp
lea
incb
jl
idivb
jmp
outsb
outsb
out
data16
data16
jne
jg
jge
jp
jp
arpl
fs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
mov
mov
mov
jns
jp
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addb
decb
mov
jle
jg
jno
jo
je
jne
jle
jg
addl
xchg
push
cmp
ss
push
jle
jg
cltd
lcall
test
lods
lods
sti
stos
lods
lods
lods
lods
lods
test
mov
cltd
xchg
xchg
xchg
decl
jg
jp
jp
jp
jp
mov
xchg
movsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
incl
test
lea
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
insl
imul
test
fwait
fistps
lcall
mov
mov
xchg
mov
lea
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jl
scas
test
add
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
popf
std
movsl
mov
mov
in
xchg
nop
in
xchg
push
jne
push
or
inc
or
inc
daa
sub
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
mov
nop
call
sahf
mov
ljmp
test
pushl
mov
test
std
les
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
les
lcall
mov
call
nop
nop
xchg
xchg
xchg
popf
sahf
sahf
movsb
movsl
movsl
stos
test
movsl
mov
xchg
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
bound
jno
jae
jp
jg
test
mov
xchg
xchg
in
xchg
xchg
testl
lea
jmp
lahf
pushl
imul
mov
ss
mov
ja
mov
cmpsb
mov
mov
mov
mov
movsl
movsl
add
mov
add
pusha
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
fwait
cltd
lcall
mov
movsb
std
mov
cltd
cltd
out
xchg
xchg
xchg
xchg
les
xchg
lcall
xchg
cmc
nop
mov
cld
xchg
orb
cltd
imul
ljmp
cmp
mov
je
mov
insl
ljmp
adc
lods
or
or
pushl
mov
mov
pushf
movsl
movsb
movsb
and
add
add
pop
pop
adc
mov
jmp
xchg
xchg
call
fwait
lcall
sahf
lahf
lcall
lcall
xchg
xchg
xchg
xchg
nop
call
cwtl
lcall
cltd
mov
cld
pushf
xchg
xchg
insb
mov
xchg
pop
jg
xchg
dec
jns
fwait
cmp
lcall
sahf
pop
jmp
adc
adc
stos
pcmpgtd
lods
pcmpgtw
scas
adc
mov
imul
mov
insl
mov
lcall
scas
lods
scas
scas
movsb
movsl
movsl
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
sahf
popf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
cltd
jb
cltd
arpl
call
sub
decl
adc
xchg
or
pop
call
pop
jmp
adc
ljmp
insl
pushl
sbb
jae
mov
and
mov
aas
test
les
mov
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
mov
lcall
movsl
mov
cmpsb
ljmp
test
cmpsb
lcall
orb
inc
jno
mov
imul
sub
mov
pop
incl
add
incl
add
lea
push
call
add
cltd
add
mov
or
mov
outsb
pushl
sub
mov
sub
inc
sub
sub
cmp
das
cmp
inc
mov
enter
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
mov
mov
stos
ljmp
lods
lods
pushl
scas
lods
jmp
jno
decl
push
push
incl
or
test
incl
add
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
aaa
cmp
cmp
into
cmp
call
cmp
mov
roll
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
mov
cmpsl
cmpsb
ljmp
mov
pushl
mov
mov
mov
lods
stos
stos
lcall
and
push
decl
pop
incl
pop
push
incl
add
lea
push
call
add
sahf
add
mov
add
stos
add
pushl
cmp
into
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fistl
call
test
mov
mov
movsl
movsb
movsb
arpl
mov
add
add
add
lcall
adc
jl
lahf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
outsb
decl
popa
call
adc
decl
or
add
popl
push
call
pop
jmp
add
test
pop
pushl
and
call
push
cwtl
call
push
lcall
pop
fwait
jmp
push
pushf
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
lahf
or
xchg
xchg
cwtl
add
inc
adc
ja
sahf
lcall
lahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
pop
call
push
call
or
xchg
add
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fstps
jmp
arpl
jmp
cmpsl
jmp
fs
call
push
cmpsl
ljmp
dec
mov
mov
mov
sahf
mov
add
add
add
inc
aas
adc
je
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
cltd
outsb
lcall
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
jo
jmp
jno
jmp
jb
call
je
in
jae
out
je
out
je
in
jb
jmp
xchg
mov
cmpsb
cmpsl
lcall
mov
add
add
add
add
insb
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
aaa
jae
mov
sbb
call
pop
jmp
add
add
mov
popa
pushl
add
sbb
fistl
in
mov
call
jge
in
cmpl
push
test
push
test
call
mov
mov
cmpsl
sahf
sahf
pushf
daa
lahf
sahf
lahf
add
add
add
popa
add
cmp
pop
pusha
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
ret
mov
jmp
cmp
inc
jl
mov
aaa
ja
lcall
lcall
add
add
lods
add
add
mov
add
shll
movsb
jmp
mov
push
sar
nop
ret
push
nop
ret
push
xchg
xchg
ret
stc
xchg
push
pop
out
mov
inc
ret
lods
lods
stos
mov
popf
pushf
xor
pushf
popf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jge
lcall
dec
cmp
dec
test
movsl
xor
fwait
punpcklbw
lcall
ljmp
add
mov
fs
mov
add
enter
xor
mov
out
xchg
ret
push
lcall
hlt
lcall
cmc
pushf
lret
popf
lret
cli
sahf
int3
cld
popf
int3
cld
cltd
leave
push
xchg
ret
fidivs
cli
mov
mov
sahf
sahf
lahf
aas
xchg
xchg
add
add
add
ss
or
cmp
outsb
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
ret
vshufps
enter
mov
mov
ljmp
push
xchg
movsb
sub
lcall
jmp
add
mov
popa
mov
add
movl
jbe
loopne
xchg
in
mov
push
movsl
int3
push
cmpsb
int3
push
cmpsl
int
cli
cmpsl
sar
sti
movsl
iret
sti
cmpsl
sar
std
stos
sar
test
sar
negb
lret
leave
lret
std
mov
mov
lahf
mov
xchg
add
lcall
xor
xor
sub
or
inc
bound
pop
xlat
je
jo
mov
rol
rol
mov
ret
inc
mov
enter
ret
pushl
push
test
scas
push
mov
scas
dec
test
lahf
sbb
lcall
add
lods
add
mov
fs
mov
add
int3
add
fadds
jae
fists
jge
out
pop
test
negl
sar
sti
scas
aam
cli
mov
cld
scas
sar
std
mov
std
mov
std
mov
cld
mov
mov
mov
push
movsl
jmp
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsb
outsb
outsl
mov
fcom
jmp
xlat
not
rcl
std
int3
into
int
leave
lret
leave
dec
leave
lret
dec
leave
lret
inc
mov
jmp
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
roll
outsl
fadds
jae
filds
je
jmp
jb
cld
lods
aam
mov
fcos
cld
mov
fcos
cld
mov
fdivr
mov
xlat
inc
mov
int
out
call
lret
int
mov
sahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
out
jmp
test
jecxz
leave
fsub
fsub
xlat
cli
aam
std
int
iret
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fldl
ja
in
js
out
das
xchg
stc
mov
cld
mov
std
loopne
inc
loopne
std
std
fdivrp
dec
loopne
std
leave
fdivrp
std
enter
fdivrp
dec
sti
mov
lret
leave
sar
mov
mov
xchg
adc
add
add
std
incb
std
std
std
add
incb
repnz
or
out
in
pop
in
out
in
sub
out
in
dec
call
jmp
call
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
mov
add
test
popa
pushl
add
les
push
int3
add
add
fiadds
js
jmp
inc
pushf
sti
mov
jecxz
dec
loop
dec
out
std
int3
jecxz
dec
jecxz
dec
loope
std
int
dec
in
std
iret
in
std
shl
shl
cli
fdivr
in
mov
xlat
inc
ret
ret
cmpsl
cmpsl
mov
xchg
xchg
add
add
add
std
add
incb
div
testb
repz
repnz
in
repnz
pop
out
repnz
cmp
out
in
pop
loopne
les
xchg
sti
mov
add
pop
ljmp
add
rolb
dec
add
roll
jno
fiaddl
jbe
jecxz
jnp
in
push
jge
cmc
pop
stos
cld
mov
std
shl
std
iret
jecxz
std
shr
std
shl
std
shl
call
call
fsub
fucomi
fldl2e
cld
iret
loop
repnz
aam
in
fcos
lret
repz
xchg
xchg
and
xchg
xchg
add
sti
add
std
testl
repz
or
shlb
mov
jae
negb
add
cmpsl
add
scas
add
mov
add
lret
add
roll
jb
faddl
jne
call
sbb
sti
ret
cld
xlat
jmp
fldpi
std
fldl2e
fucompp
fucomi
fsubr
std
fucomp
fucomip
std
loopne
std
loopne
std
shl
push
ret
jmp
aad
call
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
mov
loopne
add
enter
mov
xchg
repnz
jmp
add
mov
add
into
add
aad
jno
filds
je
call
sub
cld
aam
fucomip
fsubr
std
fldl2e
std
jmp
aam
cld
shl
sti
shl
clc
iret
clc
lret
fdivrp
cmc
ret
aad
in
mov
fcom
fdivr
mov
mov
lcall
add
add
add
xlat
xlat
add
mov
subb
imul
add
stos
add
mov
arpl
mov
add
iret
add
xlat
add
add
ljmp
sti
cwtl
sti
leave
loopne
cld
int3
loop
cli
test
aam
hlt
mov
iret
push
mov
int
jmp
mov
sar
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int
mov
rol
mov
movsl
loopne
xor
jmp
add
mov
addr16
mov
add
dec
push
jb
rorl
je
fsts
js
loopne
cmp
dec
xchg
call
scas
lret
mov
out
leave
std
loop
cld
fildll
neg
mov
enter
int
fmul
rcr
loopne
shl
fcmovb
out
loopne
in
in
test
out
out
popf
jmp
lret
leave
push
lods
lods
stos
adc
cmpsl
test
add
rolb
ret
mov
lahf
stos
aam
dec
jg
sahf
sbb
cmpsl
sbb
jb
mov
jns
mov
inc
test
ret
stc
leave
gs
test
mov
out
mov
mov
enter
int3
rcl
int3
mov
into
shll
fcom
aad
fcmovu
fnstenv
loopne
gs
jecxz
out
out
jmp
div
sub
div
and
repnz
or
mov
int
mov
add
mov
rol
mov
scas
mov
stos
test
lock
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
mov
leave
int
ror
shlb
rcl
push
iret
rcl
dec
aad
inc
rcl
xor
daa
xlat
fstp
sbb
loopne
adc
jecxz
push
in
out
jmp
add
cld
testl
std
add
std
std
add
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int
daa
int
iret
and
rcrb
rcl
rclb
rcl
rorl
aam
push
aam
fadds
add
jecxz
add
in
ljmp
incl
mov
mov
add
rol
lds
mov
mov
mov
push
rol
or
mov
add
int
add
aam
add
aam
rcl
aad
aad
xlat
aad
add
xlat
loop
aam
add
loop
add
fsubp
add
in
add
lock
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
ja
stos
stos
dec
test
test
pop
add
add
add
add
add
add
mov
scas
adc
sarb
iret
into
shr
rcl
shl
aam
sar
iret
into
into
cli
lret
int3
int
int3
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
xlat
call
aad
call
iret
iret
dec
iret
iret
dec
int3
lret
mov
mov
lods
lods
lods
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jae
jae
gs
inc
dec
inc
cmp
sub
sub
ss
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
lret
rcl
sar
rcl
sar
lret
inc
rol
pushl
stos
test
cwtl
cwtl
xchg
jmp
outsl
outsl
xchg
adc
add
xor
add
add
add
add
cmpb
jl
jnp
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
aaa
aaa
pop
jo
outsl
adc
mov
mov
sar
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
cltd
cltd
out
addl
wrmsr
add
add
add
add
add
pop
fwait
cltd
fwait
add
popf
cwtl
cwtl
fcoml
addb
jge
jnp
jns
jp
jns
jp
jnp
jnp
jae
je
push
push
push
cmp
jae
popf
sahf
pushf
mov
lods
lods
rep
scas
scas
sti
lods
lods
scas
std
test
pushf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsl
outsl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
mov
mov
scas
mov
mov
mov
cmpsl
mov
jg
pusha
pop
pop
or
lods
mov
movsl
lahf
mov
decl
nop
nop
call
lahf
mov
negl
jle
stos
push
push
push
jo
pop
push
outsl
insb
insl
outsb
xchg
subb
mov
std
xchg
xchg
ljmp
sbbb
mov
push
mov
mov
mov
out
lods
lods
insl
test
add
add
add
add
popa
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cltd
xchg
lcall
pushf
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
jg
sahf
dec
jl
movsl
inc
jns
lods
ss
scas
daa
jb
mov
outsl
pushl
sbb
pop
mov
scas
mov
movsb
mov
add
add
add
popa
pusha
pusha
or
mov
in
mov
xchg
lcall
mov
mov
decl
addl
cld
cwtl
pop
cmp
dec
js
nop
cmp
nop
daa
push
call
or
imul
mov
outsb
pushl
push
jno
mov
pop
mov
scas
scas
xchg
lahf
popf
popf
adc
add
add
pop
popa
pop
or
mov
stos
movsb
test
mov
test
ljmp
test
lcall
pop
jp
mov
imul
sub
mov
pop
decl
or
mov
pop
call
add
or
and
mov
sub
jle
enter
leave
xor
xchg
inc
stos
mov
scas
mov
movsb
test
test
popa
popa
pusha
or
movsb
test
jmp
scas
mov
mov
mov
mov
mov
movsb
cwtl
lahf
decl
adc
mov
push
incl
add
push
decl
add
mov
add
mov
insb
inc
cmp
rolb
call
inc
nop
call
inc
nop
fimull
call
popa
sahf
dec
cmpsb
mov
mov
movsb
movsb
daa
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
ljmp
push
jge
mov
popa
decl
or
popl
push
call
pop
jmp
add
mov
dec
nop
fcomps
fcompl
jmp
pop
lahf
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jle
jl
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
imul
and
xchg
adc
xchg
add
sahf
add
cmpsb
add
mov
mov
xor
jecxz
stos
jmp
jo
jmp
jno
in
jno
jmp
js
call
test
std
mov
test
inc
jg
addb
add
dec
dec
dec
pop
outsb
insl
imul
test
cltd
cltd
xchg
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
cwtl
or
pop
jmp
add
mov
fs
or
xchg
jmp
jp
jmp
mov
in
test
push
xchg
push
xchg
mov
test
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
gs
loopne
mov
mov
sarb
mov
xchg
ljmp
sub
fwait
or
add
add
mov
gs
mov
push
ja
loope
mov
push
xchg
push
cltd
push
cwtl
clc
fwait
enter
leave
push
xchg
lods
inc
mov
stos
popa
mov
add
add
xor
pop
pop
pop
fisttpl
mov
mov
ret
inc
xchg
test
cmpsb
pop
mov
lods
dec
test
mov
add
ljmp
add
mov
add
fsubs
cmp
jnp
push
mov
into
cli
test
iret
std
stos
sar
cld
lods
sar
cli
cmpsb
int3
jmp
mov
inc
mov
stos
jne
popf
sahf
or
add
add
dec
dec
dec
aaa
je
jae
test
int3
int3
out
iret
lret
cmc
lret
sti
lret
std
enter
mov
mov
test
inc
jg
mov
add
mov
gs
add
int
outsl
flds
xchg
push
xchg
sti
mov
std
mov
fcos
std
mov
xlat
std
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
jecxz
loope
fstp
ffree
fcmovnu
fcmovu
xlat
fsubr
shll
test
je
cmpsb
push
popa
ljmp
add
enter
aad
jae
jecxz
jl
repnz
mov
sti
ret
loope
inc
loope
std
loope
inc
std
leave
loopne
dec
std
fdivr
out
mov
lret
mov
xchg
sahf
popf
pushf
sbb
add
add
std
std
add
std
std
add
jmp
in
sbb
jmp
xor
loopne
jecxz
mov
mov
mov
add
pushl
add
int
outsb
faddl
jbe
jmp
insb
mov
sti
std
iret
in
call
in
call
in
aam
aad
xlat
call
push
enter
lret
sar
mov
mov
and
add
add
incl
std
incb
cld
cld
pop
aam
aad
mov
pop
mov
popf
or
ljmp
add
lds
push
rolb
jo
fiadds
jbe
out
and
cld
shl
fucompp
fsubr
cld
fld1
cld
fsub
std
fsub
std
xlat
call
push
jmp
rcl
sti
mov
sahf
popf
das
add
add
int
into
or
arpl
ljmp
add
movb
call
add
loopne
jns
out
das
xchg
stc
fwait
cli
int
clc
lret
loopne
test
icebp
rcl
lock
sar
out
sar
in
in
aam
jecxz
fsubrp
enter
test
std
std
add
add
add
aam
mov
jae
or
mov
imul
sbb
int3
and
sub
pushf
clc
loop
mov
out
in
leave
jmp
fidivrs
lret
leave
iret
mov
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
les
rol
lret
insl
aad
int
rcl
rorl
fcom
cmp
das
in
fsubl
jecxz
lock
in
in
or
std
std
add
add
add
std
add
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
rcl
aam
sarl
or
fnstsw
or
int
add
incl
incb
lcall
pextrw
or
into
int
add
std
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
rol
enter
leave
leave
mov
ret
mov
scas
scas
scas
insb
lods
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aam
rcl
sar
int
into
std
mov
mov
roll
sbb
add
add
add
add
add
add
add
add
jae
jno
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
into
int
mov
mov
jmp
mov
push
add
add
add
add
jne
je
xchg
aad
outsl
jo
bound
mov
data16
outsb
outsl
outsb
jb
pusha
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
cwtl
cltd
lds
jb
and
add
pop
add
add
jae
jb
pushf
xchg
fwait
mov
test
mov
mov
test
test
push
push
push
push
inc
mov
popf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
popf
pushf
popf
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cltd
cwtl
cwtl
in
addl
pusha
pop
fs
jl
mov
xchg
xchg
notl
mov
mov
lcall
jo
mov
lods
lods
push
stos
stos
lods
add
add
add
scas
test
xchg
xchg
xchg
call
lcall
cltd
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
arpl
std
pushf
inc
jbe
cmpsl
ss
scas
sub
pop
jno
mov
insb
pushl
sahf
lods
lock
mov
imul
into
add
test
pop
scas
cmpsb
stos
test
lahf
pushf
lahf
jmp
cmpsb
call
push
ja
xchg
inc
jae
lea
push
mov
call
or
mov
sbb
pushl
es
shrl
inc
inc
xchg
mov
scas
mov
stos
stos
test
add
popf
lahf
test
test
scas
scas
ljmp
xchg
decl
or
xchg
push
decl
add
mov
adc
shll
dec
ds
iret
inc
mov
aam
mov
aad
xchg
dec
cltd
mov
mov
mov
movsl
movsl
movsb
push
add
add
imul
test
lahf
mov
pushl
mov
movsl
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pop
movsl
jmp
cmpsw
call
pushf
mov
mov
mov
test
test
add
add
popa
popa
bound
popf
pushf
fwait
cld
mov
scas
mov
mov
scas
lcall
xor
cltd
and
xchg
or
sahf
add
stos
add
mov
push
jmp
outsl
stos
jmp
js
in
jl
out
jl
out
jge
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
arpl
jmp
add
test
add
les
outsb
fisttpl
in
mov
push
xchg
push
xchg
enter
jmp
cmpsl
inc
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
sarb
stos
dec
cmp
sbb
cmpsb
add
mov
fs
add
aad
js
in
insl
scas
push
test
clc
lods
sar
cli
scas
sar
std
scas
sar
lods
sar
jmp
lret
mov
movsb
ds
incl
xor
xor
mov
mov
rcl
aam
rcl
aam
out
leave
leave
lret
xchg
jmp
arpl
les
push
add
out
xchg
clc
pop
std
mov
cld
rcr
cld
ret
inc
fcos
lock
ret
in
test
addl
stos
stos
lods
add
in
in
or
jmp
in
outsb
fcmovu
fldenv
mov
add
mov
add
add
out
aaa
xchg
cli
mov
dec
in
call
in
std
shl
std
aam
std
aad
push
leave
fdivr
aam
into
in
lods
scas
lods
popa
jg
addl
add
add
std
incb
std
incl
lret
int3
shrl
sahf
sbb
lods
add
mov
add
jecxz
jns
cmc
push
cmpsb
std
loop
cld
call
cld
aad
cld
aad
cli
shl
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
push
jne
fistps
cmp
imul
mov
into
repnz
loope
leave
aam
jmp
scas
vsqrtsd
add
add
sahf
lods
xchg
dec
and
shll
int3
ja
mov
xlat
mov
lret
adc
int3
outsl
fmul
iret
pop
xlat
dec
in
loopne
out
out
out
out
out
sbb
mov
mov
cmp
mov
lods
push
mov
mov
les
les
ret
ror
fstp
fimuls
int3
int3
into
or
aad
push
std
incl
addl
add
stos
incb
sarb
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
fcomps
aam
jae
or
insl
lea
in
xor
inc
repz
xchg
pop
add
shl
popa
xchg
adc
mov
addr16
pop
xchg
pop
mov
jmp
clc
and
jo
pop
roll
and
push
xor
pop
fcompl
cmc
fwait
jne
je
es
mov
lock
arpl
xchg
dec
xchg
dec
loopne
sbb
dec
ret
sahf
fistps
neg
sub
gs
cmp
lods
jle
adc
dec
xchg
rcl
divb
testl
mov
or
ss
nop
hlt
fs
insb
inc
add
orb
fxch
jbe
jmp
out
mov
or
sbbl
mov
out
xchg
loopne
insl
mov
nop
insl
cwtl
jg
ret
notl
lock
popa
sbb
inc
test
lods
dec
repnz
dec
or
fadd
jg
jl
jns
in
and
sbb
hlt
and
and
mov
mov
fstpl
or
imul
test
loopne
jno
fcomi
sti
sub
mov
mov
repnz
or
adc
leave
in
xchg
jle
aam
add
xor
sahf
dec
add
and
jne
pop
jno
call
ss
pop
pop
aad
outsl
in
adc
ss
pusha
in
dec
mov
mov
or
mov
in
imul
cltd
testl
flds
inc
xor
jne
xchg
pusha
in
test
jg
inc
push
cltd
jae
jg
pop
pop
inc
add
ret
mov
in
jl
mov
mov
rcrl
mov
mov
fistl
out
out
cmpsb
push
out
imul
sub
jmp
int
ljmp
xor
xchg
inc
cmp
mov
lahf
add
pextrw
xor
push
xor
adc
jno
inc
adc
push
xchg
rcrb
push
dec
or
arpl
fucomip
sub
inc
cld
std
sub
test
mov
jg
lcall
popf
cmp
dec
bswap
sub
pop
mov
arpl
stc
or
jge
ret
mov
sti
sbb
and
loopne
fistpl
out
outsb
sbb
pop
jge
out
pop
cmpb
cmpb
daa
dec
cmp
cmp
jb
loop
cmp
jge
pop
pushf
arpl
scas
sub
iret
pop
sbb
in
ss
cmp
push
and
js
and
punpckldq
or
ljmp
xorl
call
xchg
ret
xor
or
add
dec
or
pop
adcl
jb
push
sub
loopne
mov
mov
jns
test
ss
mov
icebp
fs
dec
lahf
cmp
loop
mov
sbb
mov
inc
cltd
push
std
xor
pop
mov
test
aad
mov
sbb
lret
shlb
push
pop
filds
ds
and
loope
mov
test
inc
mov
aaa
mov
lods
xor
cltd
mov
mov
repz
test
test
xchg
mov
nop
loopne
sbb
iret
mov
jge
in
push
xor
inc
lock
mov
sbb
faddl
fisubrl
pop
repz
inc
add
gs
cmpsl
sbb
and
rclb
xchg
popf
mov
cmp
adc
push
mov
fisttps
cmpsl
adc
mov
mov
mov
sti
xchg
inc
mov
cmp
mov
repz
push
nop
mov
add
adcl
pop
clc
aas
cmc
push
in
jg
mov
out
shlb
pop
or
jb
pop
decl
aad
lods
cmpsl
jns
loope
repnz
adc
sub
xrstors
aaa
pusha
outsb
cwtl
mov
imul
jae
xchg
lret
push
jmp
insl
jmp
loop
cld
pop
sub
xor
sbb
sbb
lret
pop
pop
test
push
nop
push
es
cli
fwait
outsb
pop
call
in
mov
stos
popf
inc
leave
jmp
or
sbb
xlat
imul
jmp
jno
dec
std
sub
aad
jmp
inc
imul
sub
jae
cmp
arpl
mov
jl
add
les
mov
imul
or
add
xchg
push
in
mov
aaa
leave
aad
stos
call
mov
rcrl
sti
mov
int3
mov
hlt
adc
sbb
test
adc
cmp
push
cmp
mov
inc
shlb
mov
neg
mov
lret
cmp
pop
imul
push
dec
xor
test
sub
idivl
movsb
mov
mov
lahf
mov
test
fldl
cmp
dec
or
sub
cmpsb
rcll
negl
dec
mov
popa
mov
pop
mov
sbb
popa
mov
sbbl
and
push
pop
push
xor
and
xchg
mov
stos
mov
push
mov
sbb
mov
mov
add
xlat
jmp
dec
push
daa
adc
int3
cmp
jnp
mov
stos
jns
mov
or
xchg
or
insb
pop
mulb
fisttpll
nopl
sub
mov
and
test
sub
and
cmc
and
xchg
xchg
jp
ja
movsb
push
xchg
insl
inc
loope
xor
mov
leave
sahf
xor
xor
enter
out
fiaddl
jle
test
ret
pop
jnp
loopne
sub
es
imul
orl
ret
add
jl
popf
xor
push
lea
call
adc
lock
xor
cmpsl
sub
stc
jnp
jno
sbb
dec
into
clc
popl
insl
je
lahf
and
lods
push
rclb
jecxz
rep
add
xor
pop
dec
negb
orb
out
xchg
hlt
std
xchg
es
add
push
out
mov
add
cld
cmp
dec
sti
and
iret
data16
loop
cmpsb
in
and
ror
cmp
lret
inc
fwait
xor
mov
sbb
add
mov
jo
jp
push
lods
stos
testl
das
and
xchg
push
push
xor
xorl
rol
aaa
into
div
outsl
push
sbb
dec
inc
lea
imul
stos
inc
int3
mov
leave
pusha
pop
adc
jle
gs
xchg
xchg
add
test
in
mov
cmp
pop
sub
mov
fstpt
or
cs
sti
add
mov
inc
push
mov
adc
js
push
or
push
sub
jmp
cmp
dec
dec
xchg
dec
dec
push
lcall
cld
mov
jns
sbb
pop
or
popf
and
dec
fnsave
dec
jmp
aas
aam
fnstcw
in
leave
int
cmp
pop
testb
ret
test
inc
mov
cltd
std
add
inc
push
les
or
pop
ss
aam
jnp
es
es
jns
inc
fcmovnbe
lcall
and
fidivs
inc
adcb
inc
cld
xchg
jae
sahf
xor
push
sbb
cmp
sbb
fidivl
cmp
push
clc
pop
mov
in
lods
adc
aaa
xor
push
mov
mov
or
das
mov
pop
subb
aad
popa
pop
roll
add
call
sti
push
jl
popf
lods
jne
xchg
mov
fs
arpl
jns
out
stos
inc
and
leave
pusha
jae
pop
mov
xchg
xchg
sub
sti
daa
mov
jbe
mov
popf
xor
dec
ds
dec
jecxz
jg
hlt
mov
xchg
sub
fs
clc
iret
jb
sbb
mov
scas
stc
lods
sub
push
lahf
testb
fs
lods
inc
les
push
movsl
push
loopne
xlat
bswap
fs
rcrb
mov
or
mov
leave
popf
cli
xchg
movd
mov
mov
in
ret
add
pop
aad
pop
incl
sub
outsl
push
fcmovne
and
out
stos
jge
ja
cmpl
scas
adc
add
add
outsb
sbb
fadds
leave
aam
mov
frstor
push
popf
out
jle
cld
test
dec
mov
push
adc
or
cmpsl
loop
fwait
sub
sub
mov
jg
in
es
xchg
jmp
stos
pop
adc
cmp
mov
pop
shrl
or
stos
stos
ds
lret
fnstenv
jp
lahf
lods
fiadds
loope
icebp
sub
loop
or
mov
pop
repnz
xchg
test
or
test
pushf
jp
and
dec
inc
fdivs
bound
add
push
rol
pop
or
subb
mov
cli
jno
mov
xor
jae
scas
call
xor
aam
jl
push
es
scas
testl
cmpsb
jp
adc
mov
lea
adc
mov
xchg
and
lcall
mov
cltd
es
out
xchg
ret
sti
pop
sub
dec
popf
adc
pop
pop
mov
jnp
pop
jo
imul
xchg
pop
mov
ficompl
stc
and
lcall
push
in
inc
cmp
cmp
lcall
insl
cmp
pop
into
hlt
mov
sbbb
icebp
test
in
adc
test
pop
pop
pop
data16
test
ret
pop
stos
sub
leave
pusha
mov
ficomps
iret
jmp
movsb
sub
xor
loop
out
xchg
add
cmp
mov
test
xchg
xchg
sub
jb
lcall
adc
das
faddl
sahf
or
or
loopne
and
mov
xchg
addr16
pop
lock
mov
stc
adc
mov
mov
inc
push
loopne
lahf
adc
push
xor
xor
inc
cltd
inc
xlat
mov
push
mov
mov
int
and
mov
sti
add
jb
in
mov
sub
jecxz
incb
cmc
xor
cli
xchg
inc
arpl
cwtd
addr16
xchg
pop
xor
inc
bound
xlat
imul
sub
mov
cltd
or
test
mov
outsb
and
inc
fnstcw
push
xor
mov
dec
dec
and
push
push
cli
pop
stc
in
das
jge
movsl
outsb
movb
add
pop
scas
xchg
xchg
out
push
sahf
xor
jae
xchg
dec
sbb
jo
insl
insl
pop
hlt
pop
mov
subl
mov
xchg
and
mov
push
pop
sahf
mov
mov
mov
ficomps
stos
and
xor
jecxz
lods
inc
add
push
out
fstps
stc
nop
cltd
sub
dec
inc
mov
sbbl
inc
mov
or
imul
mov
inc
push
cmpsl
mov
mov
push
push
sbbl
and
xchg
and
shrl
inc
mov
aaa
jle
jbe
pop
inc
fisttpl
test
push
out
aaa
adc
outsb
add
or
adc
xchg
xchg
out
and
sbbl
cmp
data16
dec
mov
test
outsl
ss
lods
pop
repnz
icebp
mov
inc
scas
inc
andb
or
cmp
add
shrl
lods
icebp
mov
filds
sarb
mov
pop
in
test
testl
sub
and
mov
or
ds
jne
insl
push
sbb
add
fs
andl
push
ljmp
ss
mov
xchg
in
popf
xor
lea
pop
mov
inc
fistpl
xor
andl
fnstenv
idivb
aad
frstor
mov
jns
int
mov
push
testl
js
sbb
dec
shr
jg
jecxz
jmp
fdivrs
shrl
mov
lret
or
je
gs
sbbl
cmpsb
cmp
movsb
push
sbb
mov
xchg
sub
fldcw
sbb
in
pop
neg
outsl
push
add
sti
xchg
jb
test
incl
testl
cmpsl
mov
inc
fidivrl
movsl
cmp
mov
dec
int
out
cli
outsl
mov
mov
sub
hlt
jno
push
test
pop
stc
xchg
lock
jno
lods
add
test
loope
jmp
shl
pop
repnz
jmp
lods
jbe
shrl
xchg
sbb
pop
sub
stos
lcall
inc
sub
dec
clc
popl
loopne
lods
popa
push
popf
push
pop
mov
ds
xchg
iret
clc
mov
call
mov
data16
sbb
ds
jae
rorl
ret
popa
sub
fwait
xor
fidivl
enter
dec
fimuls
push
popf
jp
dec
jecxz
fwait
es
das
aad
mov
ret
mov
cs
ds
sahf
jo
lret
out
pop
fdivrs
lea
push
test
nop
or
pop
jge
and
unpckhps
movsb
mov
ret
test
mov
aad
jno
enter
cwtl
jmp
rcrl
push
in
in
sbb
cmpsl
inc
push
data16
jg
insl
sbb
sbb
xlat
xor
dec
cmpsb
fs
dec
jecxz
flds
stc
push
in
mov
fistpl
add
mov
add
es
xchg
push
mov
sub
mov
dec
cmp
push
jmp
push
stos
aam
fidivl
push
arpl
stc
xchg
test
imul
mov
leave
ss
stos
cwtl
das
sbb
rclb
mov
outsl
neg
jne
lock
scas
loope
cmpsl
bound
adc
mov
mov
xchg
adc
movsl
cmp
mov
sbb
pop
mov
xchg
add
ds
mov
cmp
int
aaa
into
fucomp
pop
icebp
sar
and
fcomi
ds
cld
jae
jmp
jp
fidivs
fwait
push
in
and
inc
and
popa
fiaddl
lds
mov
fisubl
ret
dec
jl
outsl
fdivl
xchg
clc
add
jns
mov
ret
push
popf
negl
or
rcr
jg
loope
dec
or
sbb
ljmp
lods
outsl
push
push
jge
jo
aaa
repnz
pusha
idiv
popa
enter
jg
pop
or
xchg
jo
adcl
xor
inc
inc
aaa
movsl
cmp
popa
mov
test
fstp
jbe
or
mov
xor
jg
pop
cmp
mov
pop
repz
stos
jnp
sbb
stos
es
ja
inc
fsubrs
xchg
sub
lret
mov
mov
fwait
inc
fmuls
or
cs
loop
loopne
das
ja
pop
icebp
cmp
je
loope
lods
jo
cli
dec
or
pop
rolb
push
fadds
ljmp
or
nop
daa
dec
mov
imul
mov
pop
lea
ds
scas
mov
std
ja
jo
push
mov
push
testl
test
mov
fdivrs
jecxz
lods
negl
and
push
out
nop
data16
cmp
out
mov
pushf
cmp
int3
fistl
int
outsl
sahf
ja
dec
je
sub
test
push
call
lock
mov
shr
cmp
test
lock
push
mov
sub
jge
pop
outsb
inc
lea
xchg
or
scas
pop
js
cmp
mov
cmp
mov
fwait
mov
lcall
fldcw
lods
mov
enter
std
push
xchg
cwtl
push
mov
cmc
int
xchg
rol
jne
les
and
mov
repnz
push
aad
enter
jns
out
inc
fimull
jnp
sbb
jle
inc
lahf
push
roll
out
iret
cmp
inc
mov
jmp
mov
popa
jae
xor
jle
roll
fstl
add
jecxz
dec
inc
or
rol
sbb
ret
pop
gs
mov
icebp
clc
cmp
loope
pop
in
test
adc
add
popf
adc
pop
add
test
and
add
sub
jne
push
dec
imul
inc
jne
push
jo
frstor
mov
shrl
ret
gs
imulb
loopne
idivl
shl
pushf
and
movq
jae
les
ljmp
in
jecxz
gs
xchg
aaa
push
in
test
inc
frstor
mov
pop
repnz
sbb
lcall
and
je
and
insl
xchg
xchg
mov
cmpsl
or
leave
pusha
int
dec
in
out
lods
inc
mov
fists
dec
add
xchg
xchg
imul
dec
mov
push
push
imul
jnp
xor
test
mov
and
jle
popa
clc
xchg
lahf
testb
inc
outsl
push
push
dec
dec
filds
xchg
sbbl
fdivs
pop
cmp
insb
add
pop
mov
je
es
adc
sub
mov
fstpl
push
xor
arpl
fistps
andb
mov
sub
in
sub
pusha
mov
cmp
pop
hlt
mov
cltd
xor
adc
pop
inc
sub
jns
cmpsb
sbbl
ds
out
jmp
push
popf
push
mov
aas
dec
and
movsb
lea
or
scas
adc
add
adc
mov
pop
hlt
push
dec
or
mov
xor
mov
pop
xor
dec
gs
push
sbb
scas
mov
pusha
testl
xchg
push
mulb
in
adc
xor
xchg
xchg
rorl
mov
imul
repz
fwait
xor
ror
gs
test
cmp
stos
xchg
push
inc
fnstsw
mov
enter
xlat
inc
sub
inc
fstps
daa
mov
mov
stc
mov
pushf
xor
ret
pop
push
xor
pop
bound
jle
lret
mov
cwtl
add
addb
sub
push
sti
imul
int3
popf
les
mov
pop
repz
lret
sub
pushf
adc
pop
test
sti
inc
lret
out
jmp
fs
shll
mov
test
xchg
jp
add
pushf
xchg
add
push
inc
movsl
cmp
das
mov
mov
add
and
jmp
icebp
mov
ja
xchg
lods
jg
and
jle
cmpsl
pop
cmc
push
mov
add
popa
jno
imul
sbb
jge
and
mov
lods
and
sbbl
xchg
shll
leave
les
pop
sahf
scas
and
out
push
movsl
push
iret
inc
fdivrs
adc
fwait
js
add
cltd
sub
mov
sti
arpl
loopne
pop
repnz
int
je
shlb
cmp
fistpl
out
xchg
mov
daa
mov
jb
arpl
mov
sbb
xor
mov
cmp
ds
inc
daa
mov
sets
sbb
pop
nop
cmp
mov
jecxz
daa
mov
mov
shrl
adc
ja
ja
mov
out
xchg
sub
or
cltd
lods
cmp
arpl
addr16
fwait
ljmp
dec
imul
and
in
xorl
dec
loope
push
or
das
je
repnz
push
pop
icebp
data16
mov
sub
push
in
push
adc
adc
loopne
dec
in
add
mov
clc
push
movsl
lret
jmp
fistpll
loopne
shll
xlat
xor
or
sahf
xor
jnp
into
add
fnsave
insl
add
lcall
cmc
in
in
mov
fstp
jae
lcall
sbb
pusha
cmpsl
int3
test
xchg
sub
int
mov
xchg
out
jnp
and
call
dec
addl
inc
repnz
jno
adc
arpl
les
mov
shrb
mov
lock
cmpsb
cmp
push
inc
xchg
sub
lret
cld
xchg
push
popf
and
cwtl
das
mov
ja
imul
repnz
hlt
inc
js
je
stc
nop
mov
lock
fldcw
call
or
cmpl
pop
sub
jmp
sub
fisttps
repnz
pop
inc
fstpl
and
dec
sbb
imul
xor
push
xor
gs
inc
fisttpll
test
push
sbb
popf
daa
repnz
ds
xchg
sbbb
xor
orb
push
mov
sbbl
pop
call
jg
imul
mov
mov
and
scas
inc
jnp
lcall
mov
add
add
ds
out
push
or
addr16
adc
jbe
in
dec
xor
jge
mov
pop
js
push
popf
filds
sbb
mov
ret
and
push
jno
and
mov
scas
inc
pop
out
jb
sbbl
cmp
mov
stos
outsl
pop
out
mov
mov
movsl
in
add
and
ja
jo
push
decb
add
gs
adc
adc
dec
add
lods
int
xor
enter
sbb
push
push
pop
in
test
xlat
outsb
jnp
cmp
mov
mov
add
inc
push
and
push
inc
jne
xor
add
sub
cmp
jo
mov
sbbb
xchg
sub
nop
clc
popl
das
cmp
xor
dec
add
add
jbe
and
dec
in
mov
popf
daa
js
mov
sub
daa
mov
sub
adc
dec
xchg
sub
xchg
ret
pop
ficompl
jle
sti
call
dec
push
or
xor
add
shll
cmp
xchg
nop
mov
add
pop
fstpt
lret
inc
adc
pop
out
sub
dec
jbe
inc
fcmovb
xchg
les
out
fdivrl
ficoml
stos
fisttpll
loope
xor
mov
mov
fucompp
orb
call
mov
lahf
and
add
mov
in
shrl
push
jb
cmp
movsl
cmp
imul
pop
hlt
add
fstps
lods
dec
pop
push
ljmp
popa
clc
in
test
cmp
stos
out
xor
mov
push
lods
pop
push
mov
pop
mov
lahf
ss
loop
mov
in
cmp
sbb
pop
cmpb
pop
icebp
popf
xor
xor
or
es
jmp
sahf
xor
out
sar
xchg
add
imul
lcall
lock
movsl
cmp
adc
dec
jb
xchg
sub
lea
addl
mov
mov
jmp
inc
push
mov
sub
pop
xor
mov
cwtl
adc
inc
loop
or
sub
sbb
shll
dec
call
rcrb
mov
push
in
cmp
in
mov
mov
rorb
or
mov
jbe
mov
out
cmp
sbb
test
aad
mov
or
sub
xlat
outsb
cmp
mov
imul
dec
fwait
inc
xlat
int3
outsb
push
stc
xor
cmp
pop
cmpsb
dec
cwtl
ss
sub
xor
shrl
xlat
xor
addl
cmpsl
repz
in
lret
ret
shl
daa
out
fisubs
dec
loope
mov
or
jle
dec
not
sub
xchg
jb
sbb
out
pop
cmpsb
jne
hlt
pop
repz
jmp
add
stos
jecxz
adc
hlt
mov
out
push
leave
mov
incl
das
fmull
ficoms
enter
xor
loopne
cmp
jo
inc
dec
lea
lcall
fs
shlb
dec
ret
rolb
iret
data16
adc
xor
mov
into
test
dec
mov
xchg
roll
adc
adc
into
inc
ficoms
shrb
jecxz
sub
mov
or
sbb
testb
mov
add
push
mov
sub
pushf
inc
repnz
mov
adc
pop
push
jmp
push
leave
pusha
inc
pop
lds
sbb
pop
jbe
je
push
xor
adcl
mov
ret
fnsave
mov
cs
fidivs
dec
fnstenv
mov
jae
mov
lea
iret
test
sbb
in
rorb
divb
fisttpll
in
lock
dec
scas
mov
xchg
push
lods
jbe
rorl
arpl
cmpsb
jb
incl
add
movsl
lahf
jl
jecxz
out
faddl
xchg
ss
cwtl
sub
je
stos
dec
push
lldt
imul
sbb
pop
std
je
mov
inc
hlt
in
xor
mov
test
es
jbe
mov
fsubrl
les
mov
cmpsl
ja
mov
jge
lea
xchg
sub
pop
pop
mov
and
test
nop
daa
sti
leave
jns
int3
sbb
imul
fwait
shlb
test
aad
xor
jge
ds
insb
bound
jae
cmp
test
or
pushf
mov
call
jmp
jne
push
int3
in
pop
into
popa
iret
aas
out
xor
xchg
adc
mov
ficomps
mov
adc
inc
insb
es
ret
mov
jns
lds
sti
xor
add
xchg
xor
and
imul
je
cmp
mov
and
ja
jecxz
sbb
ds
jnp
jb
int
and
outsb
out
les
loope
rcl
xsha256
cmpsb
push
jae
daa
bound
shrl
lahf
xchg
sub
jbe
adc
aaa
into
out
ret
adc
aaa
rorb
dec
jbe
inc
stc
lret
in
xchg
insl
lret
or
out
test
dec
clc
cmp
hlt
ds
xchg
jg
in
inc
fsubrs
pop
aas
mov
popf
lcall
sub
dec
leave
or
sarl
inc
pop
stc
aad
sbbl
out
rcr
lret
jg
push
push
mov
sbb
aas
dec
add
pop
cs
xor
das
mov
dec
leave
mov
and
xor
or
cmpb
mov
jbe
mov
bound
mov
jmp
sahf
xor
xor
movl
mov
es
xor
jmp
mov
mov
push
out
aaa
in
cld
mov
pop
add
pop
popf
call
sbb
pop
dec
mov
sub
add
add
hlt
pop
jb
stc
pop
sbb
mov
push
call
adc
nop
jbe
into
gs
xchg
pop
jge
xchg
sbb
or
aas
or
or
dec
icebp
data16
and
push
fwait
adc
sti
inc
cmp
dec
int
fsin
outsl
frstor
add
adc
mov
add
xchg
xor
lock
repz
into
jp
lahf
cmp
jne
stos
das
jp
push
cli
jnp
mov
out
push
sbb
in
das
adc
out
xor
pop
in
clc
scas
mov
mov
lock
fbld
mov
jmp
dec
divl
fbstp
fimuls
sub
pop
pop
xchg
mov
pcmpeqd
fwait
push
movsl
int3
sti
popa
flds
push
insl
add
push
push
in
subb
push
in
sbb
dec
or
lods
mulb
out
mov
test
ret
xchg
or
lahf
stos
sub
inc
pop
sbb
mov
push
dec
jg
mov
add
scas
inc
imul
imul
bound
mov
add
add
add
rcrb
lcall
mov
lds
and
cmc
mov
test
inc
or
lods
aaa
mov
sbb
inc
mov
mul
jne
popf
xchg
jle
push
dec
shll
xchg
dec
mov
shrl
stos
adc
pop
insb
movsb
cmc
and
inc
imul
fwait
jno
int
jnp
jecxz
and
xor
sti
stc
mov
lock
ss
jbe
mov
lret
daa
dec
jns
mov
lds
mov
daa
sti
fidivs
stos
mov
addr16
loope
lods
adc
mov
rorl
push
push
in
xorl
out
xchg
mov
mov
dec
insl
mov
lahf
insl
dec
mov
lret
dec
and
add
stos
aaa
inc
adc
testb
pop
stos
sbbl
mov
cmpsl
popa
int3
lcall
push
in
add
sbb
and
jnp
dec
sub
mov
clc
subb
inc
mov
adc
gs
fs
cli
movl
xchg
sub
sub
or
loopne
cmpsl
push
rcrb
push
lahf
ss
xchg
je
pop
jmp
cmp
mov
adc
sahf
add
or
and
mov
stos
mov
test
sbb
sbb
adc
sar
call
ljmp
stc
xchg
ret
jbe
or
sub
in
subb
imul
pop
pop
out
mov
cmp
fisttps
mov
jbe
sbb
sbb
mov
rolb
popf
leave
fstps
lret
nop
mov
xchg
pusha
das
jae
popf
mov
jno
fs
jmp
fmull
sub
adc
pop
in
inc
sti
or
push
add
cmc
dec
or
mov
and
cmp
lea
sbb
cwtl
cwtl
das
int3
and
call
dec
add
frstor
add
test
add
lods
lea
or
imul
cs
les
cmc
mov
aad
pop
jo
enter
nop
es
push
mov
dec
int
cmp
mov
xor
mov
and
cli
shll
or
pop
test
cmp
xchg
scas
ret
sbb
test
or
xlat
lcall
adc
add
xchg
sub
inc
in
push
lea
mov
cmc
pop
test
adc
dec
jl
mov
ss
add
mov
inc
push
int3
mov
jno
lret
in
sub
mov
or
mov
aas
inc
mov
repz
push
pop
loope
adc
jmp
add
enter
sbb
loop
dec
xchg
push
mov
inc
stc
rorl
pop
cmc
push
push
xor
cmp
stc
fimuls
rolb
mov
cmc
inc
addr16
jmp
imul
out
push
ljmp
cmpsl
sbb
dec
cmp
push
mov
push
jbe
ss
sub
xchg
int
insb
xchg
gs
ds
andl
lret
sub
jne
fwait
test
out
jge
outsb
das
nop
in
clc
dec
roll
jno
sub
push
cld
jecxz
xor
loope
enter
xor
dec
jecxz
push
jnp
inc
ja
xchg
scas
cmp
in
lret
sti
xchg
movsb
sub
movsl
xchg
cmp
sbb
pushf
inc
call
or
int3
push
push
outsl
ret
jnp
sbb
add
or
mov
lret
adc
xchg
sub
dec
lret
divb
popw
cli
mov
adc
add
adc
cltd
stos
mov
push
std
mov
faddl
push
test
pop
adc
and
sub
fwait
xchg
test
cli
popf
sub
scas
lcall
cmc
lahf
cltd
popf
std
mov
outsl
dec
out
repnz
call
aam
sbb
insb
les
or
xor
repnz
xchg
xchg
insb
out
or
imul
sub
pop
cmp
mov
dec
sub
daa
jl
fisubrl
es
pop
xor
stos
xor
push
lret
subb
dec
mov
rol
pop
insb
test
and
test
test
out
lea
ljmp
sbb
sbb
in
jne
adc
cld
push
popa
roll
pop
hlt
jns
out
arpl
str
mov
mov
push
and
data16
adcl
and
mov
push
sbb
call
push
lods
cmp
xor
aas
ss
add
mov
gs
in
repz
loope
pusha
in
sbb
movsl
push
sub
pop
dec
pushf
test
jmp
lret
cld
sbb
mov
outsl
push
in
addr16
inc
and
bound
in
roll
mov
inc
shll
fsubrs
scas
xor
lret
xor
bound
pop
pop
or
pop
push
sub
pop
inc
adc
push
mov
add
adcl
loop
cwtl
dec
dec
stos
inc
out
dec
loope
addr16
lcall
movsb
fnsave
data16
mov
inc
les
mov
icebp
mov
std
and
scas
dec
push
ret
lret
lods
jae
iret
lods
jg
fcom
push
dec
adc
inc
outsl
dec
ret
dec
pusha
aas
in
pop
sub
pusha
nop
sub
das
xor
lahf
jp
add
push
cmp
pop
imul
fmuls
dec
les
cmc
imul
sbb
inc
fnstenv
or
xor
cmp
jmp
cwtl
out
jp
push
jmp
sbb
aaa
sub
mul
fwait
mov
ljmp
ja
sub
cmp
cs
add
and
fisttps
mov
pop
cld
ljmp
sub
scas
push
loop
xor
fxch
and
dec
cmp
mov
aad
stos
cwtl
mulb
xchg
jae
add
mov
mov
fists
lret
push
mov
lods
dec
inc
pop
xchg
mov
stos
pop
push
pop
mov
cmp
and
js
lds
stos
lahf
dec
fistpl
cmpsb
sub
leave
and
cmc
xchg
push
xchg
push
adc
jp
adc
sbb
lcall
pop
cld
cmp
and
lret
stc
lahf
mov
pusha
idivl
loop
lret
daa
dec
pop
xchg
js
sbbb
popa
push
fldt
add
xchg
inc
jae
add
sbb
fisubrs
dec
pop
mov
scas
into
or
in
sub
shll
pop
xor
popa
dec
inc
int3
pop
je
mov
mov
shr
sbb
sub
pop
pop
out
test
fs
xchg
loopne
or
enterw
xchg
mov
sub
rolb
pop
outsl
adcl
sub
push
ss
push
push
cmc
ds
push
cmp
fs
sub
pusha
inc
inc
sbb
pop
sbb
movsb
aad
repz
mov
into
add
sbb
bound
xchg
ja
sbb
cmp
mov
aaa
xchg
popf
jl
adc
dec
cltd
adc
and
inc
frstor
xor
xchg
or
push
and
cmp
dec
loopne
push
sbb
popf
push
ljmp
shll
add
xchg
shll
or
push
adc
push
sbb
pop
divb
insl
inc
add
pop
testl
pop
aad
andl
sarl
push
aam
or
add
push
movsl
leave
cli
ret
pop
ja
mov
insb
stos
shrb
ret
fcompl
loope
movsb
into
lods
sub
sbb
mov
out
lock
sbb
and
jbe
inc
jns
add
gs
cs
shlb
pop
iret
popa
clc
add
pop
popa
jbe
lcall
imul
addr16
icebp
and
dec
mov
filds
ret
xchg
loopne
dec
sbb
jl
in
push
push
out
mov
sbb
popa
inc
cwtl
cmp
and
pop
test
dec
jecxz
cmc
int
push
movsl
stos
fldl
adc
mull
sub
ss
add
add
xor
shll
movsl
sbb
adc
mov
test
mov
pop
scas
xchg
sarl
pop
fsubs
fs
insl
inc
jnp
es
not
xor
or
pop
repnz
aad
int3
leave
pusha
sbb
mov
inc
mov
mov
stos
xor
int3
push
cmp
pop
popf
mov
ds
pop
gs
stc
stos
mov
jnp
movsb
mov
in
push
xchg
je
mov
gs
sbb
stos
mov
call
push
lea
jae
dec
mov
ret
sbb
sub
je
dec
sub
push
gs
xchg
das
mov
jge
cld
data16
add
xchg
out
xchg
add
inc
cli
cmc
dec
fdivrs
and
es
sbb
sti
dec
mov
mov
cmpxchg
lret
stc
jge
sbb
and
in
push
cmc
sub
inc
mov
jg
out
insb
inc
stos
push
daa
add
jnp
aas
jg
sbb
push
loopne
jnp
inc
scas
into
push
add
sbb
arpl
mov
sub
dec
lea
push
rcl
cmpsb
popf
xor
jne
mov
insb
inc
mov
push
cmp
stos
xchg
lods
mov
pop
or
push
mov
jnp
cmp
adcb
dec
mov
xor
pop
arpl
movb
sbb
test
fidivl
nop
fs
lods
ret
cmp
inc
push
push
pop
inc
jl
jecxz
adc
pop
loop
sbb
adc
nop
jns
popf
cmpsl
sbb
aam
xchg
add
gs
jo
scas
pop
jg
cmp
insl
cmp
scas
inc
sbbl
mov
mov
push
push
js
cmc
mov
imull
dec
add
imul
in
dec
inc
jp
push
imul
inc
sub
mov
jo
dec
mov
cmp
iret
dec
pop
ja
xchg
push
addb
cmp
and
xchg
mov
mov
xchg
sub
adc
xchg
pop
push
fisttpll
iret
sub
inc
aad
mov
adc
and
mov
cmp
daa
ret
adc
cmp
cs
dec
inc
jo
lds
xchg
mov
fcoml
cltd
repz
test
imul
mov
cmp
fwait
insb
mov
in
xlat
dec
pushl
jl
movsb
mov
xchg
comiss
shrl
xchg
aaa
into
les
movb
lcall
sarl
or
lret
xchg
mov
stos
lret
popf
mov
jne
lea
xor
shrb
in
mov
insl
mov
jne
arpl
out
pop
jle
pop
lods
repz
test
dec
inc
std
mov
orl
in
mulb
xor
mov
cwtl
mov
daa
push
push
xor
sub
dec
loope
stos
and
testb
lock
bndstx
loope
mov
cmp
mov
push
fnstcw
lock
add
jle
mov
or
mov
mov
std
cmp
xlat
pop
sub
nop
clc
push
xorb
push
xchg
std
sti
dec
fcomip
mov
mov
pop
sbb
loop
jno
into
xchg
fnstenv
jae
xchg
mov
sbb
insl
fs
xchg
iret
stos
dec
fcmovu
cld
sbb
daa
or
mov
lods
cmp
mov
lcall
lock
scas
xchg
jge
loopne
jecxz
movsl
mov
out
fsubrl
out
hlt
mov
pop
icebp
add
rcr
in
mov
out
push
mov
cld
sbb
outsl
cmp
mov
rorl
mov
or
xchg
mov
push
mov
imul
jge
cmp
das
idivb
push
jecxz
lret
arpl
jnp
inc
mov
fnstenv
jne
pop
leave
lods
out
pop
lret
dec
in
rcll
cmp
xchg
sub
mov
ss
dec
sub
jae
pop
outsl
xor
test
mov
cmp
jp
stc
lock
out
mov
or
inc
xchg
and
cli
xchg
bound
jb
sbb
mov
pop
rol
or
adcl
repnz
stos
out
insl
sahf
cmp
iret
mov
in
add
and
mov
out
jg
push
movsb
insb
push
rcll
lret
cmp
xor
movsb
and
sub
add
jge
das
xor
sbb
je
pop
les
iret
fdivrl
or
int3
arpl
cs
push
in
push
jb
decb
data16
iret
mov
push
jp
js
lods
lods
ljmp
stos
loope
imul
mov
xchg
add
mov
lods
jle
and
nop
daa
pop
xchg
mov
push
gs
ss
jo
xchg
inc
mov
jle
xor
cmp
call
jge
xchg
lcall
mov
test
sbb
push
xchg
fisubrl
or
cli
push
xchg
imul
cltd
dec
sbbl
sbb
jecxz
pop
push
jae
dec
inc
into
gs
scas
inc
mov
iret
data16
inc
fdivl
gs
ficoms
cmp
xor
sbbl
cmpl
imul
mov
loopne
jb
dec
mov
jge
stc
nop
gs
shrl
xchg
scas
mov
out
xchg
fnstenv
movsb
xor
insb
push
sub
test
sub
sbb
xchg
stc
mov
mov
jmp
cli
xchg
xchg
sub
xchg
add
scas
dec
daa
inc
jg
outsl
jle
ficoml
or
mov
xor
mov
test
int3
inc
pop
cli
mov
mov
data16
cwtl
sti
clc
xchg
cmp
add
pop
ror
add
movsl
fldt
mov
dec
sbb
push
insb
pop
xor
lock
lods
sarb
orb
jge
jns
cmp
nop
mov
outsb
dec
cwtl
inc
leave
cwtl
shrb
xchg
dec
pop
inc
ja
xor
repnz
push
pop
testb
push
out
lret
add
outsl
mov
or
push
cmpsb
mov
inc
int
mov
cmp
outsl
mov
out
repz
push
cwtl
or
pusha
cmp
pop
mov
mov
inc
lret
sub
and
xor
xchg
cmc
rclb
pop
sub
pop
loope
sub
aaa
adc
loop
sub
dec
pop
lods
icebp
and
loope,pt
pop
rcrl
fdivl
jo
jmp
bound
add
cli
das
dec
in
xchg
arpl
mov
ds
or
inc
and
sbb
dec
add
test
sbb
fnstcw
call
mov
jl
dec
jae
fists
data16
fwait
inc
jecxz
in
push
push
add
fdivs
jae
push
movsl
pop
inc
clc
inc
dec
sbb
or
push
cmp
movsl
inc
std
repnz
icebp
daa
aad
out
les
and
push
andb
inc
enter
cmp
stos
test
mov
add
cmp
jg
push
mov
imul
jg
movb
adc
stc
movb
and
stos
sbb
pop
mov
sbb
push
and
lods
lret
ljmp
fwait
dec
out
inc
popa
lods
mov
div
cli
mov
in
clc
inc
call
inc
push
mov
cmp
sbbl
sbbb
cmp
xlat
fwait
pop
or
mov
loope
outsb
pop
fdivs
loop
in
dec
out
lret
xor
jmp
js
orb
sahf
adc
dec
insl
into
pop
les
inc
pop
jo
ret
or
stc
adc
mov
or
je
jp
inc
pop
adc
pop
mov
xor
and
mov
sub
sti
jmp
pop
test
xchg
sbb
and
test
and
repz
movsb
dec
scas
shlb
push
inc
pushf
inc
xchg
jns,pn
xor
or
cmpsl
xor
xlat
stc
mov
jg
xor
lock
jne
stos
sub
imul
pop
xchg
xor
addr16
icebp
xor
inc
in
in
sbb
mov
insl
dec
pop
lahf
adc
mov
in
pop
addr16
aam
aad
fcomps
mov
mov
jle
mov
scas
lods
mov
push
in
inc
cmp
jno
test
or
and
lahf
subl
push
ljmp
clc
lret
dec
mov
xchg
call
or
mov
std
ds
inc
pop
shrl
out
enter
sbb
fisubrl
mov
mov
rcrb
imul
add
sub
push
int
adc
adc
ss
call
xchg
daa
cld
pop
dec
in
push
sbb
movb
xchg
shrl
pop
mov
sbb
gs
cmp
imulb
mov
add
sub
and
lcall
imul
stc
mov
scas
xchg
jno
push
aad
dec
or
pop
inc
xchg
jle
xlat
pusha
mov
adc
outsl
mov
or
rolb
adc
adc
inc
xchg
std
lds
sbb
pop
push
fldl
cmp
repz
fcoml
shl
inc
mov
jo
cmp
sahf
sub
mov
mov
and
fiaddl
pop
stc
in
popa
ret
cmp
call
aam
ja
loopne
cmp
jmp
enter
and
ret
lahf
cli
inc
stc
mov
mov
adc
mov
pop
hlt
pop
jge
cmc
pop
inc
jnp
je
insl
in
aad
rolb
mov
enter
jb
out
jecxz
pop
test
pop
jbe
add
icebp
orb
sarl
pop
ja
cmp
lea
jbe
daa
push
call
mov
ret
hlt
loope
insl
pop
bnd
sbb
jo
xor
jp
fcomps
xchg
bound
and
push
stc
je
inc
adc
push
fnstenv
test
inc
ja
outsb
frstor
mov
ss
mov
out
loop
or
sub
outsb
cwtl
outsb
fwait
sbb
mov
push
xor
mov
test
and
shr
jne
mov
add
fxch
lea
insl
test
pop
std
inc
sbb
inc
pop
test
pushf
arpl
int
cmp
out
xor
or
jge
and
inc
push
add
jbe
mov
push
add
mov
lods
out
shlb
cltd
adc
jb
xor
in
decb
ljmp
mov
lods
test
push
int3
sbb
ds
inc
cmp
insb
out
xchg
cmpsb
jb
push
xor
pop
mov
dec
loop
jg
push
jmp
adc
and
mov
or
inc
lahf
test
aaa
movsl
mov
fisttpll
popf
sti
add
xchg
imul
sub
cli
or
xchg
int
lds
scas
or
push
dec
aam
and
jg
je
xor
jbe
in
push
pushf
push
sti
inc
or
dec
fmull
jbe
cwtl
pusha
lea
jl
adc
jp
ficompl
fnsave
push
or
mov
ficompl
mov
add
fdivr
xchg
push
sbb
inc
pop
ja
mov
scas
dec
pusha
lods
mov
mov
or
das
aam
cmc
adcl
sbb
and
push
jecxz
fcoms
xor
ljmp
jb
fdivrs
scas
add
fwait
xor
lahf
mov
shrl
cmpsl
and
push
call
cmp
movsb
cmp
mov
inc
ret
js
xchg
cmp
aaa
outsl
loop
xchg
cmp
sbb
dec
mov
push
out
aam
adc
mov
int3
arpl
test
mov
xchg
and
mov
xor
data16
push
popf
std
mov
lcall
ret
movsb
aam
rol
sbb
je
mov
push
xchg
lods
lret
pop
adcb
test
mov
lds
cld
add
jl
sbb
xchg
in
ljmp
jle
xchg
add
mov
test
push
lea
imul
and
dec
movsl
iret
in
das
lahf
inc
jno
ja
ljmp
outsl
inc
arpl
test
and
jno
cmpsb
cmpsl
out
xchg
inc
dec
xor
int
dec
and
xlat
lds
popf
xor
jno
outsb
imul
mov
pop
cvtpi2ps
dec
popa
mov
pop
jae
xchg
mov
stos
xchg
test
lods
fsubr
iret
test
sub
jmp
xor
arpl
hlt
push
sbb
cmp
pop
cmc
cmpsl
inc
inc
fiadds
add
cli
mov
jae
lahf
mulb
sub
pop
adc
or
mov
out
cwtl
inc
ud1
adc
mov
inc
test
mov
push
data16
icebp
jne
cmpsb
jecxz
loop
inc
lret
xor
lds
fnstcw
aas
imul
aaa
jbe
aas
shll
mov
roll
andb
lahf
loope
aaa
out
cld
jcxz
mov
add
out
leave
mov
push
push
je
rorl
xchg
out
or
pop
in
inc
push
gs
and
das
push
push
sub
jge
xchg
jmp
nop
shrl
cmp
dec
stos
jnp
call
and
imul
out
cld
les
or
or
mov
xlat
pop
pop
out
outsb
jne
xor
mov
xchg
in
lods
push
xlat
mov
sub
mov
pop
add
sahf
mov
shlb
and
clc
mov
sbb
outsl
adc
or
bnd
jns
andl
mov
xchg
iret
testl
or
jg
jbe
repnz
ljmp
mov
xor
fwait
mov
mov
jnp
hlt
out
cmc
xor
mov
cmpsb
sbb
xchg
stos
mov
xor
or
idivb
clc
or
decb
add
pop
es
cmc
testl
mov
gs
mov
rol
pop
add
and
or
pop
or
or
out
sub
jo
sbbb
jb
mov
mov
push
cmp
xchg
out
sbbl
mov
cmpsb
inc
and
aad
gs
mov
std
pop
aad
jb
sub
int3
or
shlb
xchg
repz
fldcw
dec
insl
aad
shrl
idivb
pop
std
cmp
fsubrs
jl
sub
lret
lret
cmp
jmp
or
cmp
clc
xlat
xchg
sahf
jns
jg
pop
lcall
mov
ret
and
ss
cmpsb
daa
iret
aad
xchg
sub
ja
push
dec
jecxz
pop
push
pop
in
out
sti
out
pop
mov
not
les
mov
shrl
sub
cltd
or
and
mov
mov
or
mov
sar
mov
sub
cmp
cmp
dec
xlat
ret
cs
adcb
mov
push
iret
adc
js
inc
stos
jl
daa
push
xor
scas
push
mov
fistps
inc
pop
adc
addb
mov
jns
inc
fdivrl
lahf
loopne
mov
sbb
movsb
dec
jnp
pushf
mov
sub
rclb
xor
fbstp
faddl
orl
out
jmp
sbb
jg
aaa
rorb
and
loope
and
mov
xor
cltd
sub
mov
stc
jnp
push
ds
repnz
lcall
mov
or
fiadds
pop
in
xchg
mov
pusha
hlt
jb
xchg
int
fldenv
xchg
sbb
mov
fisttps
adc
cmp
bound
sbb
mulb
sub
out
mov
inc
insl
das
jns
push
sbb
mov
pop
mov
jg
stc
or
leave
pusha
xchg
inc
push
movsl
xor
sub
mov
rol
hlt
lods
adc
or
mov
dec
jmp
or
and
popa
pop
ja
ss
out
xchg
cmp
push
jnp
mov
cmp
xchg
or
mov
imul
pop
mov
movsl
mov
jl
cmp
aaa
dec
push
movsl
push
push
fidivrl
dec
mov
into
pusha
xor
or
add
mov
aas
push
xor
pop
imul
repnz
xchg
and
daa
ss
enter
repz
int
scas
lods
cli
push
adc
cltd
cmp
mov
clc
call
push
mov
dec
sbb
xor
cs
or
mov
das
mov
ljmp
xor
aad
pop
mov
scas
mov
sahf
decb
adc
ret
outsb
arpl
xor
pop
imul
sahf
xor
cmpsb
pusha
mov
cltd
lret
adc
sub
lcall
xor
xor
movsl
loopne
push
inc
std
jo
cli
arpl
sti
mov
movsl
mov
add
or
push
mov
jecxz
mov
mov
and
hlt
lods
sub
add
mov
jge
sahf
mov
test
jge
jp
in
dec
adc
sahf
and
dec
xor
imull
in
or
jl
rol
out
sub
je
imul
fsubr
or
cmp
lret
xor
mov
jmp
insb
push
cld
push
lret
xchg
daa
sub
xor
addr16
shl
xor
jg
dec
sub
fimull
lahf
loope
subl
adc
out
xor
inc
mov
jp
mov
iret
arpl
cwtl
stos
jge
mov
sbb
pop
ja
pop
mov
pop
cmp
adc
inc
jmp
dec
cmpsb
inc
xchg
ret
jp
outsb
and
push
shr
test
cli
pop
outsb
adc
push
jnp
mov
jno
dec
xor
jecxz
in
ja
pop
push
mov
popf
push
jae
jmp
hlt
mov
sub
ret
mov
icebp
sbb
pop
jl
xchg
sbb
scas
mov
sub
mov
pushf
mov
gs
inc
in
and
js
inc
xor
and
orl
imul
and
pop
xchg
ret
cs
scas
and
mov
loope
mov
mov
nop
std
xchg
icebp
cmpsl
lods
add
jbe
push
or
sahf
xchg
mov
jmp
cmp
popa
mov
scas
stos
mov
inc
ror
rcll
jl
push
scas
ja
xor
out
and
pop
test
js,pt
mov
clc
mov
popa
data16
dec
in
cwtl
push
das
inc
jp
add
inc
dec
int
into
mov
push
adc
mov
icebp
adc
sub
add
scas
xor
std
leave
cmpsb
orb
mov
push
jmp
icebp
xor
testb
mov
loop
addr16
xor
mov
cwtl
clc
pusha
adc
push
stos
arpl
add
dec
ss
insl
adc
inc
mov
adc
sti
add
movsl
iret
in
adc
sub
mov
leave
xlat
pop
jecxz
xchg
sub
dec
or
and
inc
mov
nop
sub
cmpsb
cmp
add
cmp
jnp
adc
mov
mov
test
mov
clc
cmp
mov
and
fldcw
shrb
mov
push
sbb
dec
js
mov
sbb
adc
nop
arpl
cmpsl
ja
shlb
pop
mov
nop
jo
cwtl
mov
push
lcall
fsubrs
inc
cwtl
mov
les
dec
adc
jnp
jno
imul
xchg
lahf
mov
mov
stos
outsl
test
pop
mov
push
push
jae
xchg
sub
int
sub
add
lretw
jo
jmp
loopne
jp
cmp
fwait
sbb
fidivs
int
xchg
std
lods
or
mov
mov
mov
mov
out
xchg
sbb
or
fsubrl
in
xchg
mov
mov
ret
xchg
pop
dec
lods
testl
push
mov
imulb
lods
push
cmpsb
pop
pop
lock
fucomi
mov
or
jl
push
cmpsl
test
push
daa
ja
fcoms
cld
jb
and
sub
into
sub
xor
cwtl
ja
xchg
test
les
xchg
mov
scas
jmp
inc
sti
push
mov
test
inc
mov
je
sub
filds
jno
ja
fisubrs
lcall
dec
dec
out
jge
imul
fimull
repnz
jnp
inc
fs
pushf
xor
adc
ss
in
sbb
fidivs
hlt
insb
push
cmp
and
jnp
push
sbb
pushf
test
outsb
std
and
loope
pop
jae
push
iret
in
mov
fstl
cmp
lahf
test
push
rcll
push
pop
xor
iret
add
icebp
push
mov
push
mul
jle
repz
lret
inc
fwait
scas
sti
ljmp
mov
mov
push
ret
fidivl
ja
arpl
daa
jno
jo
push
jge
and
and
push
ficompl
cmp
test
repnz
mov
jp
imul
sub
fdivl
xchg
inc
mov
adc
dec
iret
inc
into
xchg
enter
add
jne
std
xlat
addr16
lcall
ja
scas
fwait
mov
lcall
ds
or
xor
add
jmp
idiv
mov
push
jb
or
inc
dec
dec
pop
fs
and
cmp
outsb
sub
call
push
cmp
inc
mov
inc
push
xchg
gs
adc
into
inc
mov
inc
fcomps
lds
inc
cltd
cmpsl
out
xchg
sarb
cmp
repnz
xchg
xchg
call
ljmp
jb
es
mov
fistpl
xor
fmuls
add
push
and
mulb
scas
repnz
mov
clc
stos
xchg
adc
out
andl
aad
xchg
xchg
loopne
adcb
mov
cwtl
out
lock
and
and
and
mov
cs
xchg
pusha
mov
dec
pop
mov
pusha
xchg
stos
sub
add
adc
jmp
push
out
mov
stc
cltd
in
mov
and
xorb
xchg
pop
cmp
nop
mov
adc
or
adcb
xchg
movsl
mov
lret
adc
hlt
cmp
rcl
jg
aam
jne
cmpsl
and
aas
adc
mov
scas
or
cld
inc
mov
or
sub
xchg
sub
push
sub
xor
sub
cmp
popf
adc
inc
push
aam
inc
out
mov
mov
mov
call
inc
cmc
outsl
jnp
push
jns
add
lds
pop
xor
sbb
sub
movsb
and
and
aad
cmp
and
out
outsb
inc
xchg
or
jmp
aaa
lods
inc
js
adc
adc
mov
push
jmp
rcrb
inc
loop
cmp
xchg
addr16
dec
mov
hlt
mov
inc
or
mov
int
inc
gs
fucomip
add
faddl
nop
arpl
push
inc
sbb
test
add
push
test
insb
fbstp
dec
loopne
xchg
inc
mov
in
leave
mov
sbb
popf
je
add
ret
xor
and
mov
push
push
cmp
cmc
mov
adc
xchg
mov
jge
xchg
dec
and
pop
jbe
sbb
pusha
push
in
leave
pop
outsb
je
mov
lea
xlat
movsb
cmp
out
loope
mov
pop
add
es
push
iret
fnstsw
dec
ret
fcompl
fs
cmp
lret
xor
jmp
mov
jmp
cmp
in
rcrb
jge
clc
push
xor
mov
shl
movsb
lea
adc
fmull
sub
xorl
push
mov
icebp
inc
pop
dec
mov
adc
add
and
fisubrs
sbb
out
cmp
mov
xchg
notb
or
or
nop
pop
mov
test
pop
fwait
cltd
rcl
jb
js
jnp
mov
movsl
shrb
xchg
imul
cwtl
icebp
fistpl
sub
or
dec
sub
dec
test
orl
cmpsl
sub
mov
jb
mov
xchg
sub
jne
lcall
and
sbb
inc
cmp
cmp
int3
sbb
outsb
popf
fcoml
jo
mov
imul
xchg
jg
push
mov
sbb
flds
addr16
test
jp
jb
jb
das
arpl
test
mov
pop
sahf
mov
sbb
pop
jns
lahf
arpl
bnd
aam
add
insb
xor
rep
scas
fiaddl
inc
inc
aad
js
idivb
pop
insb
xchg
or
sbb
aad
cmp
outsl
fcomi
enter
rol
and
loopne
pop
push
cmpsb
sbb
dec
repnz
push
cli
dec
jns
rol
cli
daa
stc
icebp
jnp
loop
lods
outsl
jg
pop
sbb
notl
fiaddl
mov
sbb
imul
cmp
pop
pop
aaa
stos
inc
icebp
je
in
into
jns
pop
push
inc
pop
inc
jp
rcll
pop
pop
xchg
or
adc
jp
das
popf
push
or
ret
xor
jnp
mov
mov
dec
xor
jp
push
fstl
jno
std
adc
mov
notl
sub
bswap
xor
xor
add
lock
mov
xchg
pop
push
rorl
sub
daa
repnz
pusha
jb
xchg
testb
mov
cld
cmp
aas
mov
into
orl
jl
inc
jbe
cltd
cmpsl
call
loopne
push
sti
cmp
xchg
pop
inc
dec
mov
pop
ljmp
pop
push
es
cmp
xor
je
out
rcrb
adc
and
inc
xor
aam
lahf
add
xchg
out
sbb
sub
adc
xor
xor
pushf
scas
int
push
sub
fdecstp
adc
fdivrs
gs
sbbl
mov
xor
cmpsl
inc
test
cwtl
push
push
mov
sahf
gs
adc
inc
jmp
add
mov
in
in
cmp
jp
xor
rcrl
xchg
stos
dec
rcll
mov
filds
xchg
repnz
cld
scas
push
or
fsubrl
xlat
push
fs
fdivs
mov
mov
int
pop
rorb
sbb
arpl
dec
push
mov
dec
insl
scas
mov
push
cmp
or
std
sarb
pusha
pop
cmp
dec
pop
push
mov
idivl
jb
ret
pop
cmp
cmp
ds
ja
adc
mov
ror
inc
fsubrs
sub
dec
pop
ret
inc
std
in
push
push
dec
andl
jmp
push
hlt
add
call
xchg
icebp
fbstp
and
mov
sti
pop
xor
push
xchg
aaa
ficoml
loope
adc
hlt
adc
xor
mov
lret
notb
aaa
xchg
movsl
cld
adc
in
mov
out
push
fdivrl
sub
jmp
fs
ss
mov
push
scas
dec
clc
ret
adc
fstpt
fwait
jbe
adcb
add
fldenv
aaa
inc
stc
enter
dec
dec
cld
and
cmp
inc
ficomps
out
jmp
xchg
xor
push
xchg
int
cmpb
pop
ficompl
test
test
and
hlt
cld
repz
pop
inc
inc
cmp
adcb
aas
cs
mov
rorb
int
pop
cltd
push
inc
cmp
jne
dec
lret
fildl
pusha
scas
dec
mov
je
lahf
mov
imul
nop
add
sti
xchg
and
ret
jl
or
shl
pop
rcrl
fcom
out
shll
mov
adc
mov
dec
sub
and
inc
testb
and
pop
push
xchg
add
xchg
in
test
and
sti
dec
outsl
inc
mov
jnp
push
sti
sbb
cmpsl
cmp
pop
mov
mov
and
mov
jmp
cld
mov
loop
clc
dec
in
jo
test
gs
push
cltd
pop
inc
sub
push
mov
test
add
mov
push
mov
dec
push
pop
sbb
movsb
into
mov
mov
fadds
push
mov
subl
or
std
test
cmp
sbb
iret
push
lea
into
inc
xor
arpl
adcb
popf
addr16
and
mov
jle
or
xor
and
ja
mov
push
cli
or
ss
popf
aam
lret
dec
cli
xchg
in
repnz
adc
dec
lret
adc
out
add
xchg
xchg
adc
repnz
add
in
sub
or
in
jecxz
loope
in
cmp
out
sti
xor
rcll
xor
and
repnz
or
pop
test
sbb
ret
imul
js
out
adc
push
adc
mov
xchg
push
sbb
adc
and
test
lds
ret
test
into
ljmp
clc
rorl
cmp
sub
sbb
les
add
cmp
push
in
dec
int3
loopne
ljmp
aaa
adc
cld
leave
mov
nop
test
cmp
mov
xchg
xor
mov
shl
jp
push
scas
dec
add
add
jne
outsb
lahf
push
dec
fs
push
shr
dec
das
popa
das
inc
xchg
nop
loope
icebp
or
sbb
mov
out
inc
rep
xchg
pop
push
scas
cltd
add
and
scas
mov
xor
add
sub
outsl
inc
mov
add
icebp
fcom
pop
test
hlt
push
sub
sub
pop
aaa
fwait
inc
jmp
ds
xchg
xor
movsl
in
movsb
mov
hlt
dec
sub
ret
in
lret
sbb
push
dec
cmp
jno
test
clc
outsl
gs
scas
lods
inc
call
add
call
or
or
fucomi
popa
stc
shll
jo
push
cmpsl
out
dec
das
hlt
and
inc
jnp
ja
or
daa
arpl
push
xchg
ljmp
data16
cs
fdivs
xlat
mov
cltd
fildl
cwtl
sub
and
sahf
sbb
inc
pop
pop
repz
jecxz
cmpsl
jp
mov
imul
inc
mov
lret
gs
jb
lret
adc
cmpsl
cmp
popa
mov
ret
or
dec
xor
out
push
ljmp
pushf
jecxz
or
and
cmc
cmp
sbb
sbb
into
call
and
hlt
data16
and
xchg
xor
aas
pop
jbe
arpl
sub
int3
mov
jnp
xchg
jp
add
adc
inc
mov
lahf
jg
rorb
mov
adc
sti
dec
sbb
pushf
lea
daa
jl
adc
pop
mov
daa
insl
mov
jle
add
das
into
or
pop
push
aam
aaa
jnp
int
fs
andb
or
out
dec
repnz
out
ret
xchg
hlt
ljmp
jl
test
pop
das
lret
hlt
push
fidivs
add
icebp
jbe
and
mov
imul
std
lods
inc
das
pop
lahf
jb
xor
mov
stc
inc
das
lcall
adc
mov
in
mov
mov
lock
xor
stos
xor
fdivrl
or
dec
int
in
int
pop
aaa
and
inc
cltd
add
stos
imul
and
ret
mov
test
xor
aaa
pop
sub
in
jns
pop
out
inc
not
push
mov
loop
adc
pop
push
sub
xor
testb
dec
ret
add
aam
or
sub
fsubrs
mov
pop
int
in
test
inc
adcb
nop
push
push
data16
movsl
push
fwait
arpl
mov
mov
mov
push
fnstcw
and
sbb
and
inc
xchg
or
int
cwtl
je
mov
adc
sbb
push
mov
fidivrl
jns
test
into
gs
xor
inc
ds
add
fcomps
test
into
scas
dec
cmpsl
xor
das
addr16
lods
push
loopne
mov
inc
pop
jl
mov
pop
fmuls
cmp
insl
or
pop
xchg
aad
and
loopne
repnz
cmp
mov
push
sbb
cmp
aaa
ljmp
push
out
push
dec
outsb
aas
xlat
jle
cltd
push
stc
or
jbe
insb
add
and
ja
cmp
inc
fisttpl
sub
test
imul
xor
jg
jl
es
inc
in
fistl
jb
mov
mul
jge
shr
xchg
es
ja
mov
loopne
sub
cmc
sbb
cmp
inc
not
lods
mov
sbb
and
mov
divl
add
ret
movsb
int3
arpl
add
ret
jp
jecxz
jne
cs
arpl
sar
repnz
pop
pusha
lahf
inc
lcall
pop
out
jecxz
inc
push
push
arpl
out
out
cmp
addr16
push
out
mov
inc
and
stos
fsts
dec
mov
mov
in
inc
xlat
fidivrl
flds
push
sbb
adc
inc
nop
or
loop
xchg
subl
mov
popf
je
popf
pop
dec
cmp
aam
es
test
mov
mov
lcall
push
ja
dec
pop
loopne
mov
and
mov
sbb
in
push
fwait
aam
movsb
negl
adc
mov
adc
jg
xor
dec
jl
xchg
mov
popf
or
mov
ja
cli
jecxz
add
mov
jb
lret
in
sarl
pop
jg
test
stc
push
outsb
cld
jl
jnp
lcall
repnz
leave
shlb
add
popf
push
xchg
xchg
sub
cmpsb
sbb
out
fs
imul
shll
or
out
jp
and
xchg
inc
adc
jmp
imul
sub
push
sub
dec
dec
pusha
int3
insl
bound
mov
xorb
xchg
dec
fdivs
pusha
jp
or
or
loopne
nop
adc
push
pop
jb
cmp
cmp
shrl
and
scas
mov
jmp
pop
xchg
dec
mov
clc
cmp
mov
test
push
mov
dec
repnz
adcb
loopne
mov
adc
jl
iret
inc
or
pop
vmovhps
dec
sub
jecxz
push
sub
dec
sahf
xor
xchg
push
mov
lcall
and
out
test
in
subl
xor
lea
cmp
cmc
les
jge
ljmp
mov
mov
fcmovnb
cwtl
mov
test
int3
jle
ret
ja
push
mov
push
mov
sub
or
arpl
jge
sub
xlat
and
fdivrp
rcrl
push
nop
iret
mov
dec
jecxz
mov
mull
push
idivl
or
dec
rolb
jl
add
mov
dec
jg
jecxz
lock
xor
ffreep
dec
push
jno
xchg
push
sti
fdivrl
fsubrp
int
cwtl
repz
es
sub
dec
push
stos
add
jo
fsts
lahf
add
enter
cmp
cltd
xchg
sub
fadds
xchg
mov
fcmove
inc
lods
cld
mov
lods
xor
inc
stos
mov
mov
shlb
mov
jne
push
arpl
pop
mov
jns
adc
adc
jns
adc
movsb
pop
sti
mov
mov
sbb
sub
arpl
ja
out
mov
push
sub
pusha
decb
mov
hlt
push
bound
scas
daa
loope
xchg
push
sub
dec
xchg
rcrb
pop
fcom
jo
ret
fcoml
push
xlat
insl
jl
inc
leave
adc
cmc
push
mov
fisubs
into
sub
lea
jecxz
lods
scas
icebp
stos
sbb
outsl
shlb
sbb
iret
data16
lret
push
push
in
pushf
fcoml
mov
ja
cmpb
push
dec
inc
cld
xlat
adc
push
xor
aas
mov
xor
jns
je
shr
lock
pop
repnz
adc
imul
fcomip
add
repnz
js
pop
mov
sub
ja
dec
iret
movsb
adc
arpl
addr16
mov
sahf
jnp
or
shl
in
sbb
aad
ja
and
cli
push
in
dec
dec
inc
out
and
fistpl
jmp
mov
fiadds
jp
cmp
xor
sbb
sub
test
adc
xchg
test
ss
imul
stos
int3
lcall
ja
xor
fldenv
push
mov
les
xlat
jbe
test
stos
out
std
lods
movsb
add
cmc
mov
and
arpl
clc
aam
or
test
mov
sbb
sbb
lcall
dec
sbb
sbb
test
sub
or
mov
adc
clc
mov
int
das
push
cmp
mov
and
dec
push
imul
xchg
test
outsb
jle
ret
mov
sahf
in
sub
rol
movsl
pop
dec
cmp
ret
int
mov
and
daa
push
jmp
jns
test
imul
mov
popa
arpl
adc
mov
call
repz
mov
mov
sub
inc
inc
push
inc
aas
pop
mov
dec
lret
icebp
cmp
inc
and
jae
and
into
popf
dec
ret
jbe
mov
test
jecxz
cwtl
or
mov
insb
sbb
sbb
pop
sub
mov
sarb
sbb
rorb
pushf
loop
dec
aad
mov
lods
mov
xchg
inc
mov
jns
testl
mov
mov
js
test
ds
cmpsl
mov
cltd
jmp
xor
inc
ret
and
test
dec
and
xor
jg
sbbw
xchg
push
inc
xchg
outsl
test
loopne
push
jae
add
sbb
cmp
inc
cmpsl
lahf
sahf
adc
sub
outsl
adc
in
cld
pop
xor
inc
cmp
cmp
shrl
xor
mov
test
cmp
outsl
dec
fcomps
inc
test
popf
xor
cwtl
or
inc
scas
fdivr
xor
out
xchg
pusha
test
lret
sub
sbb
pop
cli
xchg
mov
push
mov
jnp
mov
loop
addr16
mov
push
lret
jecxz
gs
mov
mov
aaa
adc
adc
fmull
clc
adc
fs
xchg
xor
cmp
cmp
or
or
xchg
sbb
or
mov
cmp
mov
in
pop
out
push
mov
daa
mov
mov
in
pop
mov
xchg
pushf
push
cmc
jnp
stos
push
fnsave
xor
notb
lahf
push
test
movsl
unpcklps
test
xor
int
jg
sbb
daa
mov
jg
test
adc
jo
movsb
xchg
daa
xchg
adc
insl
sub
les
test
lret
adc
push
ljmp
cmp
mov
push
sarl
jo
sbb
add
insw
push
sub
mov
movsb
scas
fisubs
cli
mov
push
mov
loopne
cmp
cmp
shl
fcom
sbb
mov
xlat
movsb
push
std
clc
or
loopne
fstl
test
push
call
or
xchg
jle
mov
push
mov
or
pop
punpckhdq
and
data16
lahf
push
jge
jmp
decb
pop
mov
mov
ret
cld
adc
repz
pop
and
dec
mov
add
rcl
xor
sbb
lcall
pop
inc
sbb
sar
loop
jecxz
mov
mov
in
cmpsb
add
insb
std
js
mov
push
fnstsw
hlt
ret
hlt
cwtl
cmpsl
and
and
push
dec
push
sub
dec
pop
xlat
cmpsb
sub
int
fildll
aaa
and
std
pop
jne
xor
arpl
sub
mov
js
xlat
les
inc
lock
inc
fadd
xchg
pop
arpl
mov
ret
out
jg
sub
movlps
dec
xchg
mov
sarl
mov
bound
loop
dec
mov
cmp
cmp
cmp
negl
movsb
and
fcoml
push
fnstenv
pop
jecxz
daa
mov
jo
jmp
mov
xchg
jo
movsb
inc
pop
cmp
adc
fistps
pop
cmp
pop
sahf
scas
and
sub
js
xchg
push
stos
lahf
out
enter
cmp
cmp
inc
pop
insb
js
cmpsl
jp
in
cmp
insl
cmc
rdpmc
lret
adc
mull
out
sub
popa
faddl
mov
ficoml
ljmp
leave
dec
or
outsl
stos
xorb
imul
jno
mov
lods
xor
mov
sti
pop
insl
scas
loope
sub
cmc
inc
lods
xlat
push
pop
sub
xchg
cmc
int3
inc
cs
ja
aas
push
jbe
mov
int3
iret
push
pop
jg
sbb
icebp
jnp
xor
incl
aad
add
in
jecxz
mov
mov
or
mov
push
inc
xchg
stos
jl
rolb
mov
movsl
cmc
mov
nop
pop
out
mov
popa
mov
aaa
sti
mov
jmp
test
test
sbb
jp
enter
adc
push
ret
rcr
lea
adc
mov
cmpsl
insl
jle
stos
test
push
push
lret
pop
in
adc
push
test
inc
fimull
scas
inc
lods
leave
sahf
bound
fcmovnbe
inc
fcmovnb
jmp
add
lods
addb
xlat
push
popf
xor
mov
dec
movsl
movsb
mov
lock
mov
or
adc
cld
and
jns
add
push
mov
fwait
idivl
sub
loopne
cmp
data16
push
out
mov
icebp
sbb
nop
mov
cmp
in
imul
leave
pop
mov
sbb
sbb
out
and
shufps
int3
xchg
xchg
sub
jl
mov
cmp
fisubl
mov
pushl
and
test
push
xchg
out
ret
outsb
pop
push
mov
sahf
stos
out
sahf
and
xchg
mov
call
movsl
xchg
enter
pop
call
shr
cmpsb
push
jb
cmp
dec
xor
push
inc
xchg
es
lock
sub
mov
sub
hlt
jl
add
addr16
in
incb
fildll
test
mov
mov
push
pushf
mov
frstor
sub
loope
sbb
push
je
push
cmp
jmp
push
jmp
lcall
inc
or
int3
insb
sub
and
pop
fimull
sub
dec
add
mov
or
sub
xchg
xchg
int3
test
sahf
movsl
imul
mov
jp
adc
das
xchg
test
push
push
mov
fcmove
hlt
push
subb
add
dec
sarl
mov
enter
clc
pop
hlt
dec
adc
mov
fsubrl
jle
jbe
cld
imul
push
or
mov
lcall
les
cwtl
jnp
fmulp
push
pushf
pop
scas
iret
and
ds
lods
ljmp
and
ss
inc
fsubrl
dec
fstps
aad
filds
fmuls
add
xchg
sbb
jae
stc
loop,pt
test
adc
sbb
bound
ret
das
cwtl
sbbl
les
faddl
imul
psadbw
adc
fmull
jp
inc
std
pusha
divl
xor
pop
jno
movsb
sub
push
add
and
dec
lods
xlat
aam
xor
dec
negl
scas
xor
mov
push
cmpl
fildl
xchg
and
or
adc
mov
sub
stos
and
pop
cmpsl
cmp
lahf
std
dec
in
mov
sub
popf
dec
fldenv
lods
enter
scas
insb
xor
insl
lods
xchg
xlat
bound
into
jae
hlt
in
inc
ficoml
jnp
repnz
mov
data16
fcmovnb
das
aad
das
inc
lret
dec
stos
cmp
mov
mov
jle
movb
shlb
fists
mov
xor
hlt
jle
cmp
outsb
xchg
xlat
test
test
adc
adcl
and
push
cld
ds
mov
push
test
gs
jns
je
shl
mov
mov
scas
sub
aas
mov
or
aad
mov
adc
push
or
xorl
dec
testb
jae
loope
ret
stos
inc
cld
jnp
in
rcll
pcmpeqd
les
pop
sbb
sbb
cmp
push
adc
jecxz
cmpsl
jno
push
sarb
inc
and
rorl
push
push
fldenv
sahf
mov
dec
inc
and
mov
mov
or
mov
lods
mov
scas
hlt
pop
jecxz
sbb
dec
mov
inc
cmp
xchg
mov
pop
ficomps
jp
ja
lret
mov
outsl
shrl
lret
mov
xchg
sub
dec
iret
andb
sub
test
inc
out
movsb
cmp
sahf
sub
dec
test
and
lods
mov
mov
push
jnp
xchg
sub
outsl
loop
or
push
call
es
adc
mov
jns
cltd
jl
push
lods
ljmp
and
inc
dec
push
ds
sub
mov
pushf
lcall
inc
es
rcl
sub
pop
call
outsl
push
movsl
rcrb
add
adc
arpl
pop
icebp
mov
cmp
scas
adc
es
dec
imul
ja
loopne
imul
lods
cmp
stos
ds
dec
mov
jg
lret
jne
dec
add
shll
mov
xchg
add
push
cmp
add
jb
lds
mov
lret
sahf
test
pop
rcl
ds
pop
jo
arpl
daa
and
mov
les
insb
dec
notb
out
sbb
dec
add
add
adc
inc
or
fildl
adc
jae
push
mov
pusha
sub
push
and
push
fidivs
fistl
jno
xor
mov
outsl
and
sbb
stos
sahf
mov
or
add
mov
and
mov
mov
push
mov
jle
or
sbb
and
in
jns
xchg
les
cmpsb
dec
mov
aam
ret
div
mov
outsb
pop
pop
lds
nop
xchg
ss
adc
pop
jp
pop
mov
inc
fcompl
mov
and
xor
fildl
fs
das
pop
mov
mov
inc
xrelease
xor
rol
xor
sbb
cwtl
daa
insl
sub
fistps
mov
mov
xchg
orl
lahf
inc
pop
dec
in
sub
inc
and
mov
sarl
enter
insb
xor
mov
aad
adc
cwtl
cs
xchg
push
push
pop
shrl
movb
mov
std
loop
xchg
adc
sbb
insb
push
jg
orb
mov
mov
ret
jp
jb
dec
pop
add
mov
scas
les
jecxz
inc
mov
dec
pop
insl
mov
cs
xchg
pop
dec
inc
push
dec
jae
fstl
cmp
add
stos
push
sbbl
out
jns
cmp
push
lea
fdivl
std
bound
mov
pop
or
sub
imul
xchg
test
stos
repz
pop
or
adc
inc
mov
ret
cmp
push
jne
pop
dec
lods
lret
or
cmp
and
cmc
push
inc
data16
jl
pop
mov
xlat
outsb
cmpsb
xor
shll
enter
add
lock
sbb
shl
imul
lret
mov
icebp
push
add
roll
xor
or
clc
mov
inc
lods
imul
les
popf
jmp
dec
fistpl
shll
jnp
insb
shlb
mov
cmc
adc
aad
loop
sub
sub
inc
pop
jns
jnp
popf
dec
or
nop
dec
push
adc
xchg
jnp
jns
jae
adc
mov
mov
lods
xchg
jo
xchg
jae
mov
adc
out
lock
bound
mov
stos
inc
lret
push
mov
or
inc
sarb
das
cmp
push
adc
and
out
outsl
pop
dec
ficomps
jno
cmpl
dec
outsb
or
sbb
jg
mov
xlat
addl
mov
out
mov
pop
xchg
lea
inc
fucomi
jp
je
test
pop
icebp
fcmove
sahf
or
cmp
hlt
pop
loopne
or
sub
popf
adc
daa
mov
inc
and
ss
fistpll
leave
lret
decl
aaa
dec
stos
xor
fisubs
outsb
sbbb
icebp
enter
test
pop
lret
sbb
test
cmp
cmp
arpl
pop
fcoms
lds
ret
sbbl
not
ljmp
out
cmp
test
arpl
mov
nop
cmp
rorl
cmpb
adc
xchg
nop
push
mov
mov
rcrb
xorl
cmpsb
sbb
rcrb
loop
add
ss
gs
mov
push
scas
inc
mov
xor
mov
and
lret
xlat
mov
jns
stos
ficomps
fmulp
mov
mov
or
adc
in
cmp
adc
cmp
int
ficomps
mov
stos
jp
push
dec
pop
mov
scas
mov
cmp
adc
icebp
and
js
push
cmp
xorl
test
sbb
inc
pop
push
scas
adc
testb
xor
test
or
movsb
repnz
jnp
jle
std
outsb
icebp
in
aaa
add
push
call
fldenv
jo
icebp
cmp
idiv
test
and
xor
add
cs
and
nop
std
cmp
loopne
shl
and
into
inc
ss
fs
add
and
outsl
adc
sub
mov
cmc
jae
lods
sbb
or
into
leave
pusha
add
push
les
fdivl
test
lods
inc
jb
pop
sbb
aas
in
jno
es
xchg
sbb
shlb
aam
lock
push
cmp
adc
sbb
xor
push
or
fbld
mov
sahf
les
iret
push
adc
xor
push
popf
jge
inc
scas
sub
xor
jp
and
and
stos
and
push
xor
shll
mov
fsubrl
shlb
jg
fsubrp
mov
push
rorb
inc
pop
mov
popf
je
insl
pop
mov
nop
cmp
jg
cmp
insl
add
and
sti
ds
xor
xchg
fcomip
and
imul
cmpsl
sbb
jl
mov
pushf
test
pop
out
loop
and
das
cmp
subl
mov
add
sub
jno
inc
mov
sahf
or
inc
add
std
fwait
sbbb
and
inc
sbb
adc
out
adc
jns
sysexit
lods
ljmp
push
stos
out
pop
jns
mov
inc
rclb
pusha
testl
stos
sub
push
insl
cmc
aad
pop
xchg
mov
push
scas
adc
pop
mov
mov
in
pop
fcoms
cltd
ret
jp
aad
test
scas
push
repnz
and
aad
in
enter
or
das
ljmp
out
dec
sub
ret
js
lret
push
dec
and
jp
fwait
inc
ja
jne
sub
int3
mov
lds
addl
lock
lret
and
cmp
mov
enter
pop
fdivrl
mov
pop
cmc
decb
lret
pop
jbe
cmp
movsb
adc
sub
inc
dec
or
popl
ja
fwait
or
into
cmp
sbb
push
inc
or
insl
mov
stos
mov
std
ja
pop
push
cmp
aaa
subl
sbbb
fdivrs
arpl
into
in
scas
inc
sbb
mov
mov
xor
arpl
fwait
aas
cmp
jl
or
stos
sti
and
mov
andb
push
pop
mov
fcmovbe
and
inc
push
movsb
dec
decl
pop
mov
arpl
and
and
adcb
push
mov
adc
mov
pop
mulb
scas
jp
test
inc
add
cmp
nop
mov
shll
pop
add
pop
jl
inc
xlat
dec
jge
or
cltd
dec
xchg
pop
cmp
ja
hlt
jg
fsubrs
sarl
lods
push
xchg
add
cmp
std
jecxz
repz
mov
and
mov
addr16
orl
pop
out
mov
popa
aas
out
xchg
loopne
inc
aam
out
mov
inc
fcoms
add
sub
mov
in
aaa
mov
cmp
pop
ljmp
leave
xchg
pusha
jg
lods
insl
out
pop
cli
mov
jmp
xor
and
or
iret
jle
lret
xchg
push
inc
sub
scas
lahf
out
daa
leave
inc
in
xchg
aad
inc
leave
jno
jno
arpl
xchg
pusha
jno
cmp
sbb
push
jmp
fisubl
jmp
pop
xchg
jecxz
add
xchg
loopne
gs
xchg
enter
adc
pop
cmp
dec
loop
push
inc
mov
lret
aam
pop
pop
or
jg
ss
subl
negb
mov
pop
xor
bound
add
cmpsb
into
in
call
mov
testl
mov
sub
sbbl
mov
xor
sti
push
xor
xchg
push
imul
aas
jne
push
sub
fnsetpm(287
push
or
lea
add
dec
pusha
add
sbb
mov
push
mov
fcmove
in
jg
lock
pop
push
mov
int
es
int3
cmp
pop
pop
xchg
cmpsl
stos
push
loopne
movsb
add
add
fimull
mov
popa
outsl
fiadds
bnd
pop
repnz
test
xor
fdivs
xorb
xor
sbb
push
xchg
mov
enter
rcr
test
dec
inc
xlat
in
xchg
call
mov
sub
sub
je
sbb
dec
and
jns
repnz
scas
pop
fnstcw
int
loope
in
jmp
cld
data16
add
nop
pop
sub
shlb
sbb
jnp
inc
inc
fisttpll
xor
out
inc
fcmovbe
jno
xchg
jp
xor
sbb
jae
xor
cli
sbb
dec
mov
in
mov
mov
adcl
xor
ljmp
add
adc
pop
rcr
jno
or
mov
ret
hlt
push
mov
inc
jmp
mov
aad
inc
fcoms
mov
imul
test
mov
dec
test
and
sahf
xchg
ds
scas
xchg
shrb
dec
iret
pop
outsl
rorl
sub
fmuls
sub
push
pop
mov
in
lret
and
push
call
sbb
or
mov
mov
sbb
fnsave
jo
adc
adcb
clc
adc
push
cmpsb
add
adc
inc
in
mov
dec
pop
xlat
mov
ret
jns
out
mov
xchg
sbb
xchg
sbb
sub
or
jnp
sub
cmp
jne
cmpsl
and
jle
repz
or
or
fbstp
fnstenv
dec
call
lahf
stos
mov
xorl
popa
fisubrl
mov
int3
adc
mov
std
sbb
enter
mov
loopne
stos
lds
shll
stos
test
push
push
inc
scas
xor
inc
fwait
loope
dec
loope
mov
mov
fwait
adc
or
pop
pop
add
push
jl
fsubrs
shlb
sub
outsl
ret
pop
mov
negl
stos
pop
mov
mov
frstor
mov
sub
xchg
cwtl
imul
mov
lahf
hlt
shlb
out
mov
call
pop
adc
or
inc
adc
ss
bound
shrb
xor
in
hlt
leave
movsb
stos
and
rcrb
fcomps
push
shrl
push
rorb
bound
test
leave
mov
popa
shrl
movsl
mov
mov
jp
testl
testb
lock
ss
adc
test
sub
cmp
xor
call
jp
pop
jno
pushf
das
outsb
push
pop
cmp
adc
mov
lods
mov
mov
iret
xchg
incl
ja
sti
xchg
leave
jno
inc
cmp
xlat
mov
dec
pop
xor
sbb
dec
inc
pusha
add
repz
inc
int3
fdivs
push
mov
push
fsubr
ds
rcrl
bound
xor
mov
dec
fsubl
aas
add
leave
or
mov
sub
mov
add
stos
stos
outsb
mov
mov
test
sti
sbb
sub
jns
push
out
mov
mov
loop
stc
lcall
xorb
and
push
sbb
cmpsb
lods
jmp
cltd
ja
and
out
sahf
xchg
jne
stc
ret
mov
fidivrl
xchg
mov
cmpxchg
adcb
js
jecxz
into
mov
xor
sub
mov
mov
xlat
mov
popa
scas
jp
arpl
inc
fs
in
or
scas
dec
aas
inc
test
in
loop
jmp
insl
sub
cmp
inc
add
push
testb
pop
xchg
js
sarl
decb
sub
orb
loope
cmc
mov
add
cmp
or
fmull
push
inc
cli
loopne
xor
jae
sbb
das
fs
in
pop
ss
dec
mov
push
inc
fcomps
sti
aaa
gs
sti
inc
pop
pop
mov
rolb
mov
sub
ja
int3
mov
cs
outsl
fldenv
push
popf
pop
xor
lods
ljmp
mov
push
jbe
sub
loop
test
in
ljmp
xor
lahf
mov
loopne
fmuls
iret
loope
sbb
movsl
sbb
dec
mov
mov
mov
xor
imul
gs
cltd
sub
pop
xchg
dec
sub
lock
insb
cmp
mov
psrad
sahf
int
mov
push
dec
loope
inc
jo
std
out
sbb
xchg
cmp
sub
cmp
cwtl
je
mov
mov
hlt
ficomps
incb
adc
shlb
xor
mov
inc
fcmove
ja
stc
fs
stos
fadds
sub
add
push
lods
loopne
mov
cmpsl
sub
ds
sbb
fldl
jae
mov
and
out
aaa
adc
adcb
inc
int
inc
fwait
je
out
dec
mov
std
ja
enter
push
pop
das
jp
mov
mov
inc
out
shll
mov
out
testb
cmpsl
adc
adc
enter
xlat
ss
lods
nop
inc
clc
scas
inc
inc
mov
ljmp
sbb
xorl
mov
sbb
cltd
or
jle
pop
pop
pop
divl
jns
fisubrl
jp
nop
dec
popl
lahf
sub
es
cwtl
cmp
lcall
jne
arpl
and
push
jecxz
add
cmpsl
lods
push
mov
pop
adc
add
cld
and
and
inc
cmpsl
add
mov
shlb
fistl
sarb
insl
jnp
pop
out
cmp
mov
pop
addr16
out
jmp
subl
insl
dec
xor
jb
jo
int3
xchg
jne
pusha
jo
jg
xor
sbb
mov
clc
dec
mov
mov
push
sub
shrb
add
sub
les
repnz
sbb
mov
addb
lea
jb
pop
cmp
insl
sub
xchg
add
ret
daa
xchg
call
adc
and
dec
ret
fisttps
rclb
sub
mov
out
lret
mov
cs
loop
hlt
mull
xchg
pop
adc
add
sub
mov
sub
fisubl
and
xor
and
push
insb
mov
in
hlt
pop
xor
jl
cmpsb
adcb
insb
cmp
dec
int3
jle
jns
enter
ss
sbb
and
cli
aam
xor
dec
push
scas
dec
pop
sub
mov
iret
sub
arpl
cmp
or
imul
xor
loope
mov
inc
mov
sbb
addb
imul
adc
mov
stos
dec
scas
sub
jno
mov
je
adc
adc
inc
dec
in
or
jnp
jg
in
rcrl
xchg
mov
insb
popa
jg
jp
pop
jmp
out
and
popa
sbbb
sbb
mov
cmp
sbb
in
cmp
ja
or
xchg
dec
addr16
push
adc
int
xchg
jbe
outsl
stos
addr16
inc
cmp
test
mov
jnp
xchg
popa
ss
mov
sti
rcl
or
lahf
add
fwait
andb
mov
pushf
pop
out
mov
inc
inc
std
push
or
fnstcw
orl
iret
and
sarb
int3
mov
xchg
ss
bound
lret
fwait
inc
xchg
pop
in
dec
cmp
push
lock
sti
pop
repnz
lret
hlt
stc
or
jl
push
js
insb
pop
or
pop
dec
push
cwtl
xor
mov
bound
lret
jle
js
adc
push
pushf
inc
xchg
nop
and
clc
pop
inc
push
xor
pop
jns
sbb
loopne
xor
mov
mov
add
xchg
imul
call
pop
mov
pop
inc
scas
pusha
ja
cmc
cltd
or
into
adcl
jl
push
inc
sbb
mov
mov
ror
insl
jno
pop
pusha
loopne
inc
inc
out
in
push
push
fnsave
sub
xchg
pop
gs
cmp
inc
lods
into
fdivs
push
sarl
imul
test
addr16
dec
dec
or
popf
sahf
add
push
dec
mov
fs
sbb
pop
pop
dec
or
add
mov
push
mov
neg
dec
fsts
sarb
jmp
aaa
mov
sub
sbb
cli
lds
shr
testl
push
and
call
ret
std
lods
repz
mov
add
lcall
dec
mov
xchg
mov
sub
lods
nop
test
daa
inc
iret
jl
loope
add
loop
lods
pusha
lods
test
rcl
popf
sub
mov
pop
mov
dec
fmuls
adc
stos
dec
fadds
stos
fucomi
fstl
add
sbb
es
and
cmp
push
mov
mov
cmpsb
inc
cmpsb
cmp
mov
aad
mov
mov
sub
xor
jle
cli
nop
xchg
sub
repnz
push
hlt
dec
lock
test
xchg
xchg
xor
xor
jno
mov
dec
call
fs
inc
mov
addr16
and
mov
jno
insb
lahf
repnz
test
loope
daa
cltd
jae
or
mov
movl
les
cmpsb
mov
pop
imul
adc
shlb
add
xor
and
cli
leave
inc
stos
inc
mov
int
cmc
mov
aas
xchg
add
mov
adcl
and
or
adc
jmp
call
jae
sbb
ss
sub
cmpsb
addr16
cwtl
iret
xor
lahf
push
xor
dec
mov
scas
jmp
xchg
mov
pop
xchg
xor
cmp
nop
addl
lcall
push
mov
test
push
jmp
fisttpll
ja
mov
jb
adc
insb
outsb
xor
daa
mov
arpl
dec
hlt
icebp
ljmp
add
inc
fidivl
xor
jp
push
test
mov
adc
add
std
int3
mov
fwait
xchg
int
inc
bound
out
pushf
imul
push
mov
fldcw
mov
xchg
aas
cltd
popfw
mov
jle
cli
lahf
ljmp
lcall
nop
clc
fstp
pop
ror
int
popa
shl
xchg
imul
xchg
dec
scas
outsl
or
adc
loopne
lret
xor
add
or
insl
push
stos
mov
pop
jae
sub
out
dec
xchg
jo
xor
mov
push
lds
or
ljmp
cltd
dec
in
mov
fstpl
push
dec
bound
cld
enter
insb
push
push
or
push
pop
jne
cld
inc
lcall
or
jg
mov
fidivrs
inc
mov
lds
outsb
aad
mov
inc
inc
test
ljmp
lea
xchg
mov
push
push
stos
inc
mov
xor
incb
and
sbb
insl
mov
mov
test
stc
out
ret
es
pop
aas
stc
pop
test
jl
lea
pop
cmc
popa
inc
icebp
dec
push
mov
mov
dec
inc
mov
cmp
cmp
mov
push
mov
push
cwtd
dec
pop
lret
mov
or
adc
std
or
push
pop
and
popf
lods
bound
lods
jmp
cmp
test
or
jge
sub
ret
pop
adcl
add
pop
mov
xor
dec
adc
jg
test
into
icebp
lret
rol
dec
cmp
cmp
mov
and
or
push
inc
fimuls
lcall
shrl
jne
jmp
rclb
sub
inc
xchg
adc
adc
or
mov
adc
hlt
shl
xor
ret
filds
lcall
xchg
jmp
movsl
ja
mov
out
xor
pop
xchg
adc
and
rorb
out
das
rcr
repz
inc
add
xchg
js
xor
lds
adc
mov
sub
fidivl
or
mov
push
aad
enter
fmul
jl
inc
lret
push
addl
jbe
lock
rcrl
fiaddl
test
push
jb
test
dec
jb
mov
outsl
bound
enter
mov
cmp
mov
pop
mov
popa
pop
sub
mov
dec
aaa
cmp
dec
in
adc
cmpb
stos
dec
jge
xchg
sub
sub
dec
icebp
mov
mov
cmp
pop
mov
out
cli
in
jae
adc
aad
xor
ret
push
les
inc
mov
addr16
jge
sti
movsb
mov
mov
flds
mov
loope
cli
adc
rol
rolb
mov
fistps
ljmp
jns
iret
or
arpl
leave
inc
and
call
xorl
push
pop
cmp
stc
xchg
xlat
push
insl
lea
mov
sbb
mov
imul
mov
test
add
mov
cmp
fistl
popa
ja
xchg
mov
jmp
shrl
cmp
testw
jae
jns
dec
inc
pop
jp
icebp
add
fmul
dec
mov
or
dec
mov
push
dec
fists
movsl
inc
fs
stos
enter
cmpsl
pop
dec
xchg
enter
jg
push
mov
cmpb
scas
test
pop
cmc
cmp
mov
repz
pop
fsqrt
mov
mov
mov
push
push
shll
je
sti
push
fisttps
fldt
add
stc
or
push
aam
cmpl
mov
mov
adc
or
pop
rsqrtps
push
cli
add
mov
push
hlt
call
ficompl
dec
popa
sarl
sahf
lahf
xor
cld
jle
loopne
mov
or
jmp
out
sahf
push
or
add
jb
pop
repz
and
enter
pop
scas
and
mov
gs
pusha
gs
cltd
push
mov
pop
mov
jns
hlt
out
cmp
icebp
dec
xor
mov
adc
and
and
in
xchg
lgs
test
fdivr
push
xor
stc
fildl
stos
push
fwait
push
xor
push
jne
cltd
popa
movsb
icebp
jg
cld
push
je
sbb
rcll
test
push
leave
js
sub
repnz
imul
aad
cltd
leave
jbe
jae
rcl
pop
int3
and
sub
repnz
xchg
aas
xor
dec
cmc
pop
cli
fldt
dec
mov
xor
and
mov
js
jmp
imul
andb
sti
nop
aad
gs
stos
pop
scas
loopne
mov
add
imul
sbb
lret
cld
pop
sbbl
mov
lahf
test
loope
insb
add
adc
nop
mov
movsl
in
pop
mov
sbb
daa
xchg
fistl
call
cld
dec
inc
fdivrl
aam
into
xor
lds
pop
inc
pop
xchg
jg
idivl
outsb
mov
jg
push
insb
sbb
fisubrl
into
insl
sbb
add
es
loop
mov
outsb
test
jl
cwtl
orb
lcall
add
xor
mov
sub
mov
xor
jo
mov
xchg
add
add
jmp
sahf
int
outsl
jb
pop
jae
cmp
popf
pushf
push
mov
add
pop
jno
push
inc
leave
fadd
and
jnp
dec
loope
out
nop
frstor
add
decb
repnz
pop
test
hlt
in
push
cltd
mov
add
in
faddl
pop
fistl
dec
and
je
aaa
jnp
jl
sti
dec
cmp
rol
cmp
outsb
pop
push
adc
mov
loope
mov
cmp
test
mov
mov
ret
pop
iret
lret
dec
xchg
push
test
mov
popa
push
sbb
addl
aaa
scas
lds
push
int
inc
or
adc
test
push
xor
sub
mov
ds
sbb
aas
jge
rcrl
mov
jbe
jne
mov
jno
lods
mov
stos
fs
loop
aad
sbb
jmp
sub
push
test
add
or
sub
mov
jmp
scas
dec
xor
cmp
cmc
xor
popa
add
lcall
sub
lock
push
stos
inc
loope
int3
outsl
mov
mov
jb
and
loope
mov
jne
aad
push
loopne
mov
aam
and
ja
ja
icebp
test
cmpl
adc
lret
sahf
mov
pusha
jp
fsubs
mov
mov
jns
lea
das
mov
sbb
mov
jnp
les
jmp
sbb
mov
pop
push
add
mov
scas
or
push
stos
aas
mulb
pop
jnp
in
xchg
push
cmp
adc
xchg
inc
cmp
xor
xchg
adc
pop
dec
adc
in
dec
mov
outsl
adc
int
pop
ja
inc
sbb
push
push
dec
imul
cmp
cmp
cs
or
or
adc
dec
cmp
mov
loopne
and
fwait
push
leave
mov
es
add
movsl
out
push
mov
lds
dec
jnp
mov
xor
cmp
push
lcall
cltd
and
push
fadd
rcrb
sbb
lcall
adc
jne
mov
mov
scas
cmpsl
sarl
xlat
xor
lods
sti
repnz
in
mov
adc
mov
roll
clc
and
fsubrs
or
jno
and
adc
cmp
cmc
xor
data16
mov
add
rcrl
stos
adc
pop
jecxz
lods
sbbl
inc
sub
push
mov
mov
sbb
hlt
and
fdivl
jmp
push
in
or
xchg
sbbb
or
mov
push
iret
mov
and
lret
bound
push
mov
jbe
mov
cmc
xor
cmp
mov
dec
sub
stos
adc
sbb
jmp
mov
or
pop
inc
repnz
outsl
xchg
ret
inc
inc
mov
std
movsb
jne
sbb
movb
out
xor
mov
les
pop
dec
sub
les
mov
dec
loopne
mov
addr16
lret
mov
adc
mov
push
inc
dec
sbb
call
push
cmpsb
std
int3
mov
sbb
out
aam
xchg
push
sbb
lahf
push
ljmp
add
push
mov
cmp
outsl
cmpsb
divb
lcall
in
clc
or
cs
sbb
and
mov
adc
ljmp
enter
rcrl
sub
jo
negl
addr16
jle
test
mov
jle
xchg
loop
loope
mov
aad
inc
cmp
pop
ss
in
stos
push
push
and
xor
push
xchg
sub
lds
adc
inc
xchg
ja
loope
sbb
jmp
out
mov
cs
inc
fwait
movsb
mov
inc
xchg
je
jbe
mov
bound
imul
xor
jae
mov
sti
sbb
sbb
jne
ljmp
sub
test
dec
mov
movsl
push
xor
or
jno
mov
loopne
fwait
hlt
out
test
mov
leave
pusha
push
lea
aaa
je
jg
shll
push
out
iret
loopne
aaa
scas
inc
imul
test
fldcw
andl
lea
jo
push
cmpsb
mov
leave
lods
mov
ja
outsb
in
mov
push
cltd
std
int3
or
xchg
fidivrs
adc
pop
scas
aad
aaa
adc
add
xchg
sub
andb
jbe
sub
fbstp
push
sub
cmpl
jmp
aaa
sbb
or
push
mov
mov
dec
negb
cwtl
lods
jmp
add
mov
pop
hlt
das
pop
cmp
inc
lods
push
icebp
pop
insl
mov
cld
push
sub
jns
movsl
mov
add
jp
adc
fisubl
sti
popf
pop
stos
jno
sub
ljmp
shlb
fldcw
xchg
xchg
inc
adc
push
fwait
sbb
imul
lea
js
mov
or
or
ja
inc
adc
gs
dec
fdivrp
and
insl
inc
out
ja
clc
mov
mov
ret
lret
cmc
mov
popf
stos
sbbl
mov
je
std
sub
xchg
sub
fldenv
repnz
mov
jle
adc
aad
dec
leave
mov
sbb
lock
fcomp
sbbb
in
dec
mov
inc
push
jne
dec
movsb
pop
insl
out
imul
ss
sbb
jecxz
ret
ret
leave
dec
in
cmc
and
add
test
dec
loop
aad
cs
out
xor
mov
dec
les
stos
mov
pop
jbe
aad
inc
cmc
dec
test
add
sarl
iret
je
or
pop
adc
shrb
cs
sbb
adc
std
leave
mov
scas
adc
jo
xlat
enter
int3
scas
jns
lcall
or
sbb
add
dec
arpl
scas
xchg
lahf
subb
data16
sub
neg
mov
mov
inc
fimull
mov
push
sbb
popa
mov
cli
clc
aas
aam
loopne
test
ret
inc
fidivs
push
nop
jmp
xor
add
imul
pop
sbb
dec
sub
mov
pop
mov
sub
cmpb
lock
std
jo
dec
fwait
lods
dec
inc
shrl
mov
add
mov
mov
adc
dec
call
test
hlt
rcrl
scas
nop
icebp
jb
fidivl
bswap
into
rol
xchg
xchg
test
add
fists
fbld
dec
cmpsb
push
mov
pop
movsb
nop
stos
mov
fdivl
dec
mov
mov
sbb
repnz
add
dec
shrl
mov
adc
inc
fcomps
inc
push
aaa
jl
adc
fmull
movsl
or
mov
mov
popa
das
cli
xlat
add
call
pop
loope
mov
arpl
loopne
pop
cmp
fs
cmp
pop
cmp
or
add
add
psadbw
and
shll
add
out
dec
sti
cmpsl
test
sbb
shl
cs
or
cmpsb
cmp
inc
fisubs
inc
xor
fnstsw
mov
daa
test
out
cld
addr16
fldl
and
aaa
xchg
faddl
pushl
in
js
dec
stos
xchg
adc
sub
pop
scas
mov
jp
inc
adc
mov
dec
imul
xchg
enter
xlat
out
movsl
scas
dec
in
loop
or
insb
add
jg
test
pop
jp
test
adc
in
push
test
aad
push
nop
add
and
jae
and
ljmp
dec
es
mov
imul
adc
testl
sti
xchg
adc
dec
cmp
mov
add
push
cmc
xchg
cmpsl
cmp
sub
negb
xor
shrb
call
cmc
cmp
add
shl
aad
jmp
adc
pop
in
test
outsb
gs
aas
sub
jmp
pusha
test
jae
lods
or
scas
jne
or
adc
jno
mov
ret
push
mov
inc
fstl
mov
push
fidivl
daa
jmp
roll
xchg
mov
das
stos
cmp
lret
jo
lock
out
push
jae
sti
xchg
movb
mov
dec
inc
dec
dec
nop
and
mov
loope
sub
adc
pop
xchg
push
jb
frstor
xor
and
mov
mov
popa
or
out
test
popa
ficompl
mov
xchg
popa
mov
xor
arpl
rcrl
jge
jl
addr16
ja
nop
mov
mov
js
dec
add
add
rolb
pop
pop
aaa
int3
pop
xchg
ss
clc
ret
mov
out
fidivl
or
lret
cld
and
sbb
mov
mov
popf
push
mov
mov
xlat
mov
add
mov
adc
pop
mov
test
gs
pop
pop
dec
cmp
pop
ds
stos
repnz
jae
xor
jns
movsl
fwait
xlat
cli
es
aas
sub
xor
imul
fsts
pop
loope
insb
adc
mov
shl
gs
loopne
adc
jns
dec
pop
pusha
xor
push
fwait
mov
mov
sti
jmp
out
inc
sbb
rcrb
cmp
sti
jge
cmp
xchg
jo
mov
mov
jo
lret
inc
roll
adc
push
xor
sub
mov
inc
sbb
enter
jne
add
dec
aas
mov
loop
cmp
jmp
pop
sbb
xchg
sub
xchg
das
adc
fwait
and
fmuls
insl
sub
in
test
xor
pop
inc
gs
in
push
sahf
rcrl
inc
inc
hlt
cmpsl
cmp
mov
sbb
out
pop
or
jecxz
dec
mov
add
aas
mov
loop
andb
xor
enter
loop
adc
inc
pop
cwtl
imul
xchg
fxch
inc
cmpsl
sbbl
data16
into
ret
fisubs
pop
pop
scas
lret
call
insb
add
mov
add
repz
seto
pop
mov
pushf
cmp
enter
jmp
into
xor
aad
and
mov
xchg
stos
mov
pop
sub
hlt
insb
sub
sbb
lret
cld
mov
pop
inc
inc
add
std
aas
jp
scas
ss
inc
out
cltd
push
ljmp
dec
cmp
adc
es
dec
cmp
aas
int
jno
or
push
shl
jns
mov
jnp
pop
dec
in
gs
sti
mov
test
cmp
int
adc
daa
inc
lcall
xchg
lret
pop
pop
push
cmp
stos
adcl
clc
dec
jb
dec
movsb
xchg
out
mov
movsb
mov
dec
cli
incl
sarl
add
xor
das
lahf
mov
loop
jmp
xchg
or
incl
mov
ret
repz
sbb
adc
pop
fisttps
test
pop
insl
fldcw
int3
mov
inc
lcall
clc
inc
imul
jne
data16
es
fisubrs
ret
adc
mov
add
inc
mov
cmpsl
xor
mov
mov
int3
cmpsl
add
pop
mov
sub
cmp
sbb
cs
aad
mov
mov
push
push
cs
cld
dec
je
mov
aad
stos
xchg
sub
lcall
out
adc
iret
imul
push
dec
dec
loopne
out
jnp
inc
push
aas
jmp
jle
pop
ss
and
push
or
pop
imul
rcll
dec
sub
xchg
je
movsl
cmp
xchg
test
jne
cmp
jns
ficompl
mov
sbb
stos
gs
xchg
cltd
jo
xchg
loop
dec
push
xor
mov
nop
adc
jne
lcall
imul
inc
lods
and
and
stos
insl
hlt
out
das
push
imul
scas
out
jne
jnp
shlb
fstps
or
push
and
push
xchg
inc
push
inc
loop
pop
jbe
push
ja
pop
pop
scas
test
mov
mov
push
in
sub
stc
adc
lock
xchg
mov
mov
push
call
adc
ljmp
mov
fsts
cmpsb
sub
sbb
inc
stos
mov
rorb
jnp
mov
ficoml
push
xchg
lret
repz
ds
jecxz
pop
or
xchg
fs
call
sub
outsb
mov
hlt
fdivl
mov
or
sub
repnz
fildl
ss
mov
jecxz
pop
stc
mov
xchg
pop
bound
mov
push
adc
inc
xchg
into
lcall
arpl
mov
push
mov
push
rorb
outsb
pusha
cwtl
pop
loopne
xor
adc
lret
add
jecxz
jae
cmp
and
mov
in
pusha
sbb
test
idivl
sub
xchg
call
jecxz
icebp
push
scas
lret
int3
jno
xor
shll
rcrl
sub
sbbb
cmpsl
popa
clc
fcoms
fisttps
mov
les
nop
sub
lock
daa
or
mov
jle
std
int
cmp
and
int
mov
push
inc
push
arpl
mov
pop
clc
repnz
or
xchg
mov
fwait
push
popf
xchg
or
lea
loope
mov
inc
adc
int
mov
popa
mov
pop
fst
mov
fs
jmp
or
dec
mov
mov
cltd
xchg
fsubrl
fwait
idivb
mov
mov
in
pop
es
imull
out
xchg
sbb
jge
mov
cmpsb
dec
mov
sbb
movsb
gs
jp
push
pop
inc
ja
fdivr
adc
xor
loope
and
pop
bound
leave
dec
mov
dec
ljmp
shll
adc
dec
xchg
inc
lods
mov
push
stc
test
lret
std
mov
adc
xor
das
dec
push
cld
outsl
sbb
sbb
cmc
sahf
push
push
xchg
jg
adc
mov
pop
mov
in
test
inc
or
cmp
pop
hlt
mov
push
jl
jae
gs
popa
xchg
cltd
jp
or
push
mov
aaa
pop
lcall
push
mov
or
cmp
xchg
sub
cmp
ret
cmp
add
cltd
push
and
push
jmp
mov
out
mov
lea
int
sub
or
xor
push
and
fiaddl
pop
sarl
subb
into
popa
aaa
ja
mov
dec
inc
inc
test
sub
xor
insl
xchg
xor
jl
ja
sbb
nop
pusha
inc
ja
test
arpl
cmpsb
adc
stc
push
test
xchg
in
jae
cld
cmp
xchg
jbe
inc
jnp
subb
pop
push
push
or
test
xor
pop
sub
stos
js
into
test
jb
lret
fisubrl
int
fidivl
negl
dec
sub
test
andl
cmp
xchg
inc
clc
sahf
inc
mov
push
out
test
lret
js
jne
lods
mov
or
dec
movsb
cmp
aad
out
sub
pop
repz
push
fnstenv
icebp
movsl
inc
ror
adc
sub
popl
test
jp
push
cmp
mov
sub
int3
outsl
cli
xlat
aaa
lret
jno
loope
enter
xor
mov
mov
es
jmp
into
jo
das
cmp
ss
aam
aam
jl
hlt
fwait
inc
dec
repnz
cli
dec
pop
xor
js
daa
std
or
mov
push
sahf
or
imul
mov
aam
in
in
mov
shrb
inc
idivb
and
adc
lahf
jg
pop
movsl
mov
push
mov
cmp
dec
sbb
push
das
sbb
leave
sbb
idivl
idivb
add
mulb
sbbb
rorb
add
fwait
push
push
popf
push
in
mov
xchg
out
cld
popf
repnz
mov
inc
push
sub
sbb
leave
mov
ffreep
push
hlt
adc
fs
arpl
bound
sbb
int
dec
fidivrl
adc
lods
nop
push
aam
pop
mov
repz
jb
mov
push
add
inc
scas
mov
les
mov
scas
push
inc
adc
es
lds
dec
sti
push
hlt
nop
or
icebp
add
cmp
xchg
jmp
adc
call
iret
popa
mov
and
das
arpl
lds
in
adc
repnz
fidivrs
mov
mov
mov
les
clc
in
test
mov
mov
push
pop
fwait
inc
pusha
fstpt
aaa
rol
xchg
notl
stc
lods
pop
sbb
fisubl
inc
mov
mov
cmp
jnp
push
call
jns
or
lcall
fs
subl
mov
pop
mov
test
xlat
cltd
pop
mov
or
loope
fstl
sub
loopne
je
repnz
inc
stos
test
je
sub
cli
mov
dec
and
or
cli
pushf
aas
sbb
movsl
jns
jge
push
jo
jb
push
sub
shll
mov
pop
jo
stos
xchg
clc
mov
push
push
sub
jae
out
push
daa
or
ret
xor
or
xchg
push
push
pusha
outsl
jmp
sbb
sub
cmp
rcrb
out
lods
decl
jmp
mov
addr16
bound
xor
andl
xchg
xor
popf
xor
roll
rolb
inc
test
sub
jnp
jp
sbb
pop
ret
jmp
push
sub
xchg
sub
in
test
mov
push
sub
mov
dec
add
les
add
imul
clc
and
repnz
jne
ss
popf
lods
ror
lcall
mov
ljmp
dec
sub
jb
push
pop
jle
sti
xchg
push
adc
int
jle
imull
sbb
push
mov
mov
out
jo
and
stc
std
pushf
mov
lret
movsl
add
mov
xchg
push
in
add
add
sub
push
lret
sub
repz
inc
jmp
sti
xchg
sub
lret
mov
adc
aam
jo
clc
bound
int
jne
jo
aaa
fnstenv
stos
push
leave
das
fldl
ret
stos
dec
dec
insl
sub
imul
andb
and
popa
es
mov
fldenv
out
mov
adc
adc
push
xchg
cmpb
outsl
mov
int3
sub
jnp
jae
fsubr
push
dec
xchg
add
lods
gs
mov
add
dec
loop
ds
lods
cmp
into
subl
jl
hlt
subb
jbe
push
cwtl
mov
mov
xor
stos
xchg
mov
mov
mov
xchg
mov
mov
imul
dec
mov
out
shrb
xor
leave
pusha
mov
shrl
rolb
movsl
sbb
stos
inc
and
je
ljmp
add
sub
loope
daa
data16
sbbl
rclb
sub
adc
mov
loop
outsl
push
sbb
leave
mov
xlat
je
or
mov
add
imul
pop
push
mov
icebp
and
fdecstp
aad
sub
repz
pushl
stos
adc
xor
dec
ljmp
testb
jle
cld
or
lahf
pop
lods
inc
cmpsl
lcall
mov
lds
pop
out
lret
je
arpl
jp
mov
inc
dec
xchg
test
inc
adc
mov
fstps
sub
outsl
jnp
push
out
jmp
dec
loope
sahf
inc
sbb
sub
sarl
cmp
push
daa
inc
push
call
inc
or
loop
jmp
out
int
cld
ret
hlt
jnp
mov
call
sbb
adc
into
data16
mov
out
adc
gs
lea
mov
scas
cmc
jo
cmp
mov
stos
loop
aas
mull
mov
mov
pushf
arpl
call
dec
shll
insb
and
mov
jmp
xchg
fiaddl
test
cmc
adc
sub
jle
sahf
fwait
test
inc
fistl
sub
sbb
dec
out
ffreep
nop
jnp
dec
jmp
jmp
sbb
mov
and
xor
jl,pn
jp
lret
cmpsb
fadds
and
sub
fistpl
fucom
cld
jecxz
push
ja
dec
sub
pop
fcmovnu
inc
test
mov
pop
lahf
not
push
out
int3
pop
nop
stos
ja
push
and
adc
cld
cmpsl
int3
push
scas
jb
test
lret
xor
paddsw
or
and
inc
lret
inc
enter
fists
xor
int3
arpl
mov
xchg
mov
aad
negl
jecxz
mov
je
movsb
mov
add
aaa
cli
lcall
and
inc
fdivl
int3
fsubl
pop
jg
jne
adc
stos
dec
fwait
sub
xor
jns
or
andb
adc
loopne
fldl
popf
adc
stos
inc
or
out
clc
or
pop
stc
cld
sbb
insl
aad
cmp
out
mov
pop
push
sub
pop
push
mov
add
test
fdivl
jo
inc
push
in
xchg
pop
ljmp
fiadds
imul
push
lock
fcomi
mov
or
pop
int3
lret
add
movsl
pop
mov
jbe
enter
ljmp
sub
adc
aaa
dec
pop
xchg
int
add
push
sub
pop
out
cmp
xor
mov
sbb
bound
lods
add
xor
int
jmp
das
push
ss
fsubl
lret
ja
fsubrs
cwtl
fidivs
jge
xor
mov
inc
popf
or
sub
xor
arpl
pop
pop
jle
mov
outsb
ret
dec
in
push
mov
add
sbb
flds
dec
jb
lods
xchg
fwait
or
in
clc
cmpsb
cmp
loopne
les
mov
push
mov
push
mov
and
jo
push
push
or
testl
mov
mov
jle
cld
and
fisubrl
gs
das
pop
sbb
mov
repnz
xchg
adc
orl
inc
test
lret
sbb
jg
sub
inc
xlat
adc
sub
mov
scas
xchg
pop
repz
sub
imul
gs
lret
mov
fstpt
sbb
mov
mov
pop
xchg
mov
sub
pop
xor
les
fiaddl
cmp
mov
mov
insl
fldt
and
arpl
sahf
cmc
mov
jg
es
jl
sub
mov
jge
mov
pop
push
aas
sahf
push
jge
cltd
pop
addr16
mov
rolb
xchg
and
or
popa
clc
aaa
sub
nop
aas
xchg
cli
test
mov
pop
xor
imul
pop
loope
insl
add
fcoms
mov
sbb
add
test
cs
cmp
push
je
fwait
andl
xchg
jno
pusha
xchg
cmpsl
mov
ret
pop
daa
and
xchg
dec
sbb
outsb
test
xor
sahf
in
mov
push
rolb
xor
cmpsb
jnp
inc
stos
lret
dec
icebp
and
push
adc
mov
xchg
jle
mov
push
daa
popa
xchg
sbb
push
lods
inc
inc
in
adc
mov
and
and
inc
adc
inc
test
out
xchg
add
mov
add
mov
movsl
xchg
mov
loope
repnz
add
or
int3
jno
push
jecxz
jb
jle
icebp
sub
adc
shrl
sbbb
lock
pop
sti
add
dec
xchg
test
jbe
push
mov
pop
push
into
mov
paddw
dec
mov
movsb
fidivrs
cld
test
xor
push
in
mov
pusha
call
cmp
push
mov
fbstp
pop
scas
cli
adcl
jb
outsl
mov
or
add
out
in
adc
fwait
pop
leave
das
fsts
jno
test
cmp
xor
ret
mov
sub
outsl
loop
pop
mov
pop
idivl
mov
inc
cmpsl
test
sbb
leave
lret
in
jecxz,pt
lret
and
mov
test
ds
inc
pop
adc
lret
add
or
push
shrl
mov
inc
add
addr16
pop
mov
adc
out
cmp
sbb
loope
movsb
adc
ds
jp
inc
sub
les
sbb
test
xchg
jle
sbb
xchg
mov
gs
lahf
push
in
mov
icebp
jbe
push
inc
add
inc
inc
push
btc
mov
pusha
enter
adc
dec
dec
jp
leave
mov
cltd
adc
or
mov
jl
pop
dec
hlt
or
mov
push
loop
inc
movsl
mov
popf
je
ja
adc
pushf
sbb
and
in
mov
in
popa
or
ljmp
in
adc
and
mov
sbb
stos
mov
ja
mov
insl
inc
out
ljmp
insl
subl
rolb
inc
movsl
jl
mov
movsl
loop
pop
pop
push
insl
adc
mov
mov
xchg
imul
shrb
mov
fs
popf
fwait
inc
call
sti
mov
jl
push
icebp
jno
jmp
mov
and
or
mov
xor
rcr
jmp
lret
jnp
pop
movsl
popa
imul
jbe
fisubrl
ret
mov
inc
fidivl
inc
popa
aad
pushf
arpl
movsb
out
test
repnz
test
jmp
aaa
push
repnz
ljmp
aam
sub
adc
js
jnp
cld
je
dec
mov
mov
test
xor
jmp
pop
inc
xchg
lret
enter
pushf
mov
mov
xchg
mov
add
clc
push
jge
shlb
out
sub
imul
dec
or
and
xchg
sub
lds
movsb
in
ljmp
sbb
push
or
out
cvtdq2ps
repnz
xchg
int3
pusha
adc
cld
and
or
lret
cmp
lods
xchg
mov
push
idivb
sbbb
enter
adc
push
cs
test
xor
pop
insb
xchg
sub
sbb
sbb
mov
movl
cmc
mov
out
jno
in
das
sbb
sarb
inc
sub
dec
fmuls
push
sarb
gs
cmp
rcrl
cmp
repz
or
pop
push
inc
rcrb
dec
jge
mov
dec
cmp
movsb
pop
cmp
mov
mov
int3
push
jne
adc
xor
sbb
popf
push
xchg
call
rcr
and
dec
jnp
call
loopne
shll
movsb
xchg
data16
mov
les
cmp
mov
xchg
incb
js
sbbb
aam
sub
daa
repnz
inc
fidivs
inc
fcomp
sbb
dec
pusha
loop
pop
int3
jg
lcall
cli
inc
xchg
pushl
mov
popf
addl
ss
ds
sti
lcall
insb
andl
adc
sbb
mov
pop
hlt
dec
push
mov
mov
jnp
mov
and
sbb
negb
jge
cld
clc
or
fcoml
arpl
pop
lock
loopne
jle
push
clc
cmp
inc
loope
push
in
push
xor
fisttps
mov
data16
icebp
in
mov
cmc
movl
lret
ja
mov
cltd
pop
and
lock
leave
mov
dec
out
inc
les
lcall
mov
lods
jo
ret
xlat
sahf
mov
mov
lock
scas
dec
lret
mov
sbb
das
sti
dec
cmp
pop
int3
jno
mov
push
jnp
mov
add
popf
imul
pop
shl
nop
scas
aas
enter
and
xorl
decb
ret
mov
int
sub
xchg
inc
mov
movsl
jp
mov
call
pop
scas
and
fidivrl
movsl
or
jg
lods
push
mov
xor
dec
ja
dec
dec
dec
xchg
adc
xchg
push
add
jbe
ret
dec
mov
aaa
packuswb
loopne
sub
add
jl
and
xchg
das
pop
cmp
or
or
cmp
test
xlat
rorl
mov
mov
pop
jecxz
cwtl
cmp
ret
adc
jo
mov
dec
sub
fisttpl
sbb
pusha
sub
test
inc
pusha
xor
xor
repnz
jl
mov
adc
xchg
push
mov
insl
dec
mov
sbb
or
out
decb
jecxz
pop
jae
or
dec
sbb
mov
mov
aaa
aam
ja
pop
xchg
or
rcrb
dec
lea
mov
dec
mov
into
lcall
insl
sub
out
lea
xor
fistpl
lcall
arpl
in
std
jo,pt
dec
fidivrl
or
unpcklps
pushf
das
jg
movsb
repnz
outsb
movsl
xchg
add
iret
jp
lret
call
add
mov
cltd
sbb
add
jb
pop
sahf
or
arpl
mov
imul
adc
stc
inc
clc
icebp
sbb
lods
iret
fwait
xlat
sub
fwait
in
icebp
test
jg
cli
int
loope
mov
lea
pop
push
and
test
in
xchg
mov
ds
mov
mov
mov
xchg
stos
mov
cmp
mov
add
inc
loope
aaa
cltd
loop
mov
pusha
push
mov
fldl2e
xchg
leave
test
mov
faddl
lods
jp
out
sti
fwait
das
addr16
add
inc
or
inc
test
jne
mov
pop
lock
mov
add
das
les
or
das
sub
mov
div
lret
test
imulb
mov
dec
cmpsl
cmp
push
aas
ja
es
aad
xchg
outsl
pop
test
mov
xor
dec
jb
sarb
push
mov
add
mov
cli
div
sub
push
dec
clc
stos
call
cmp
das
outsb
mov
jmp
je
popf
xchg
imul
lds
test
jae
xor
dec
push
test
dec
jg
xor
inc
in
cmpl
imul
mov
sub
xorb
out
mov
in
jns
cmpb
pop
pop
clc
push
testl
xchg
xor
gs
mov
out
xor
xlat
rep
and
adc
mov
add
jae
push
dec
fidivl
xchg
push
hlt
test
xchg
push
and
fcmovu
inc
les
fists
sbbb
sbb
dec
adc
testb
adc
xor
int
adc
in
mov
jg
arpl
push
xor
sbb
cmpsb
or
sub
inc
sbb
shll
dec
cmpb
dec
out
add
sbb
xchg
add
adc
gs
jmp
jmp
push
or
cld
lcall
jb
mov
pop
pushf
cmp
gs
out
sbb
mov
mov
sbb
out
sub
push
cmpsl
ret
sti
sti
sbb
add
dec
in
imul
sbb
andl
mov
ss
cmp
pushf
movsb
repnz
out
inc
mov
cmp
enter
xor
mov
xchg
out
or
mov
addr16
jmp
ja
sub
cmp
inc
and
mov
lock
out
and
lods
mov
mov
cmp
add
scas
ret
lcall
xor
ret
jnp
jb
adc
jle
mov
jo
lods
mov
popf
jbe
xor
ret
dec
push
inc
cmp
mov
int3
call
add
xor
int3
xchg
test
insb
xchg
fildl
jle
scas
stos
inc
es
dec
lret
and
push
cmpsl
popf
mov
js
jae
in
nop
sbb
sbb
ds
shrb
inc
in
lock
addr16
fistl
jmp
out
sub
push
xchg
pop
sahf
push
imul
shrl
inc
pusha
sbb
shrb
imul
insb
lret
and
in
lods
loopne
mov
pop
mov
xor
mov
inc
pop
iret
mov
sub
sub
fs
sub
add
add
dec
int3
test
inc
sbb
aam
test
add
fwait
orl
dec
jle
nop
jecxz
fildll
hlt
push
ss
notb
cmpsl
or
insb
pop
jae
stc
fnstenv
jecxz
cmp
rolb
aas
or
in
sbb
imul
cmpsl
stc
imul
cmp
xchg
sarl
inc
dec
push
jl
dec
jb
xchg
sub
fwait
mov
data16
inc
fistl
mov
bnd
pop
out
push
xchg
movzbl
mov
popf
test
add
aaa
fs
jne
add
cmp
jp
xchg
cmp
cwtl
int
jmp
cmp
pusha
testl
adc
fs
cltd
std
mov
pop
mov
xchg
mov
shlb
adc
mov
jae
push
cmp
dec
ds
fwait
jecxz
fs
and
sahf
sub
xchg
clc
pop
xor
jle
dec
leave
mov
faddl
pop
adc
cs
insl
dec
cltd
fisubl
xchg
repz
xor
dec
bound
fildl
push
jp
xor
add
pusha
xchg
push
pop
sub
lret
call
sub
mov
iret
and
aaa
dec
in
insb
in
push
scas
xchg
pop
jg
iret
rclb
repz
xchg
imul
jmp
dec
mov
or
sub
pop
fpatan
xchg
mov
sub
xchg
adcl
xlat
pop
xor
rcll
inc
sarb
sub
pop
mov
xor
sahf
xchg
mov
cmp
jno
lea
cmp
out
xchg
jecxz
xor
fldt
cli
inc
pop
cmp
mov
mov
subb
sbb
cmp
xchg
pop
insl
jge
mov
add
push
sar
sbbb
lret
cmp
xchg
mov
push
movsl
and
pop
test
push
jecxz
mov
cmp
outsb
addr16
mov
add
xchg
test
or
outsb
ret
dec
pop
dec
ficomps
add
jmp
add
or
push
jle
xor
lods
push
cmp
lods
bound
inc
out
dec
mov
aad
and
das
imul
test
cmp
cmpsb
mov
test
or
and
test
cmpsb
jmp
or
daa
ljmp
addr16
out
je
jnp
fstpl
push
inc
iret
in
imul
in
jg
xor
push
ss
sahf
lods
adc
cmp
addr16
add
nop
andb
sub
aam
xchg
dec
add
ss
icebp
fs
mov
movq
or
fsubp
jo
push
aaa
xchg
mov
pop
mov
adc
cmpb
arpl
loopne
fs
lods
aad
jae
loope
cmp
aam
std
fmulp
addr16
add
push
adc
xor
es
lea
in
pop
lret
cld
jg
push
lods
test
lcall
inc
mov
sub
decb
cld
stc
jo
push
stos
add
and
push
popf
daa
sahf
testl
sbb
popa
andl
inc
mov
or
movzwl
sbb
shrl
insb
mov
into
cmp
rcrl
iret
or
stos
jns
lea
jb
jns
inc
adc
js
mov
aad
sub
jg
ss
pop
lahf
sbb
sarb
add
dec
in
adc
mov
xchg
mov
xchg
sub
mov
push
das
adc
mov
and
hlt
decl
push
or
or
add
pop
jl
mov
mov
xchg
std
sbb
arpl
insb
add
aaa
mov
cmp
orb
and
andb
push
sahf
mov
lret
sahf
aaa
adc
int3
arpl
or
int
fsubr
lods
push
jl
test
lea
push
add
dec
fsubr
jle
or
cmpsl
popf
push
or
pop
negb
xchg
jge
inc
dec
sbbl
addr16
data16
test
push
in
aas
jno
std
sub
xor
pusha
int
je
push
push
sub
shrb
stos
sub
movsl
test
in
sbb
sub
push
adc
lret
sbb
clc
test
mov
sbb
js
imul
or
dec
aam
sub
daa
add
and
and
pop
rcrb
and
mov
sub
xor
sub
fcompl
es
dec
mov
inc
outsb
push
jecxz
loopne
dec
push
cmp
lods
jp
daa
aaa
add
push
xchg
test
mov
in
cld
push
xchg
lret
mov
sbb
xor
mov
push
bound
in
inc
xchg
xor
push
repnz
add
adc
mov
outsb
and
sbb
inc
subb
rclb
dec
inc
cmp
or
mov
pavgw
or
add
mov
mov
or
rcrb
out
nop
mov
mov
dec
jo
je
mov
push
sbb
inc
fistl
das
mov
fwait
insb
add
or
clc
and
js
mov
sub
shrb
ficompl
iret
ss
pop
imul
xchg
pop
lcall
ret
cld
xchg
cmc
dec
sbb
xchg
sbb
jecxz
ret
test
loopne
adc
and
push
outsl
iret
andl
mov
out
xchg
test
mov
jnp
outsb
subb
cli
or
ss
push
rclb
adc
mov
lret
shrb
es
fildll
ret
adc
inc
push
enter
pop
xor
aad
gs
dec
push
stos
add
xchg
xor
mov
sub
mov
mov
inc
jp
jmp
data16
adc
je
jns
jge
mov
test
pushf
push
dec
dec
cmp
ja
cmc
rcrb
pusha
or
pop
sahf
loopne
inc
adc
pop
mov
std
cld
cmp
cmp
dec
imul
mov
inc
push
out
sub
popf
aam
outsl
inc
lcall
in
jp
insb
jb
jle
mov
lock
pusha
cld
loop
sub
imul
dec
fildl
push
mov
es
out
inc
cmc
xchg
jge
adc
scas
sub
test
pop
repnz
outsb
shll
bound
in
pop
pop
imul
es
cmc
mov
pop
sbb
add
xchg
jl
lods
dec
lret
mov
add
data16
sbb
testb
in
in
test
sbb
out
nop
pop
rol
jnp
push
movsl
loop
ljmp
jne
or
mov
lds
xchg
lret
xchg
sub
pop
fidivrl
pop
and
repnz
pushf
xchg
or
es
jge
cmpsl
and
xchg
mov
xchg
adc
pop
scas
inc
adc
inc
and
cli
rcrl
and
jb
xorl
addl
ret
mov
push
lret
pushf
mov
addr16
sarl
sub
sub
fsts
sub
lods
inc
xor
jbe
in
pushf
mov
roll
jp
add
or
pusha
xchg
insl
jle
mov
movl
push
pop
scas
shl
into
sbb
xor
bound
movsb
jno
jecxz
les
mov
jg
hlt
cmp
cwtl
daa
and
pop
out
popa
ds
out
jne
outsb
in
sub
mov
stos
and
test
inc
in
addl
outsl
push
lock
cmp
arpl
shrl
mov
icebp
jmp
and
cmp
add
pop
ror
out
out
mov
jns
sub
call
mov
jecxz
and
ret
lcall
jne
dec
es
imulb
mov
bound
jmp
push
push
inc
arpl
lret
mov
clc
mov
test
and
fnstsw
push
insb
inc
loope
mov
imul
cmp
repz
xor
arpl
subl
pop
mov
mov
loopne
sub
leave
adc
mov
das
ljmp
adc
push
push
ljmp
push
rcrb
sbb
rcrb
and
insb
sbb
sbb
fimull
addl
mov
nop
je
outsb
sub
call
pop
lds
or
fldenv
sbb
add
sbb
inc
lret
pushf
fnstenv
jge
mov
out
lret
cmp
xor
add
mov
scas
sub
loopne
les
loopne
or
pop
out
sahf
and
mov
nop
insb
jne,pn
jmp
pop
shl
js
in
xchg
sub
cmpsl
sbb
lods
xor
cmp
and
jle
inc
inc
push
addb
adc
cltd
fwait
pop
hlt
lret
sbb
bound
shll
jg
xchg
and
sbb
clc
sbb
inc
add
push
into
seto
test
mov
pop
push
lods
orl
inc
mov
fwait
ss
dec
nop
or
shr
loopne
insl
rorl
aas
rorb
sbb
pop
push
outsl
loop
repz
aam
adc
cmp
fwait
sti
es
dec
and
and
movsl
cmp
sahf
arpl
loopne
loopne
clc
sbb
divb
loope
mov
js
push
push
mov
bound
lret
and
popf
lock
pusha
add
xchg
cmp
xor
enter
std
rorb
testl
icebp
sbb
push
lcall
scas
pop
cmp
fwait
lds
icebp
adc
imul
adc
out
mov
push
add
scas
mov
xor
outsb
add
jae
sbbl
adc
mov
xchg
lock
cmp
subb
sbb
out
mov
fs
insb
lcall
jl
or
jne
ret
xchg
popa
xchg
xchg
repnz
pop
jne
sub
test
shrb
pop
jbe
enter
dec
pop
sahf
jg
jne
mov
mov
test
out
dec
push
lret
jecxz
inc
mov
sbb
mov
cmp
inc
xchg
mov
inc
fwait
xor
mov
test
mov
jb
int3
ljmp
mov
sub
sub
mov
add
ss
daa
pop
dec
pushl
cmpsb
push
mov
outsb
lahf
repnz
dec
dec
or
and
popf
sarb
rclb
sbb
push
and
sbb
mov
sub
inc
int3
lret
es
xchg
dec
cs
mov
test
xor
lret
out
push
int3
out
fisubrs
aam
ja
xchg
mov
mov
xor
pop
adc
data16
jl
or
xchg
sbb
test
mov
outsl
addl
pop
lock
add
adc
jne
test
mov
je
cmc
addr16
jecxz
lcall
push
jne
adcb
jmp
dec
mov
jg
mov
ror
aaa
mov
insb
sahf
mov
mov
call
aam
roll
call
std
aas
std
xlat
mov
shlb
icebp
shrb
daa
sub
sub
test
mov
bound
hlt
pusha
and
and
mov
fadds
or
das
pop
cld
shlb
int
mov
dec
push
xchg
mov
or
je
mov
lret
cmpsl
call
aad
daa
xchg
sbb
pop
dec
ss
nop
dec
pop
xlat
lcall
hlt
sub
es
sbb
fidivl
or
popa
xor
push
in
dec
push
cmp
icebp
insl
jae
lahf
adc
adc
mov
in
loop
xchg
jo
jns
mov
daa
clc
xchg
or
insb
jl
out
xor
hlt
sti
push
lcall
push
mov
xor
loope
fcmovbe
or
mov
fdivrp
xchg
loope
fcmovnbe
fidivl
ljmp
imul
pop
out
cmc
mov
filds
int3
adc
mov
aad
jl
mov
add
jecxz
adc
addr16
std
lret
cmp
mov
push
lock
xchg
inc
or
sbb
jns
repz
repz
add
xor
xor
mov
sub
xlat
mov
mov
mov
rol
pusha
inc
pop
movsl
cmp
inc
imul
les
mov
arpl
pop
xchg
sbb
jge
pop
data16
pop
xchg
shlb
push
popf
in
dec
jne
in
out
cmp
sahf
imul
xor
cmp
mov
das
adc
and
sub
sub
dec
movsb
fwait
dec
mov
mov
fcomps
inc
push
mov
sub
mov
xchg
incb
cmpsl
fidivs
push
aam
insb
xchg
call
insl
rcrb
push
cwtl
insb
popa
imul
dec
pushf
or
aaa
into
iret
dec
fmuls
lahf
test
pushf
adc
push
sub
adc
pushf
add
cmpsl
xor
or
cmp
in
adc
mov
inc
in
sbb
xchg
add
shrl
inc
stos
inc
jle
mov
xchg
daa
jbe
or
cwtl
das
cmp
sarb
xor
fildll
repz
push
mov
fs
repz
mov
mov
inc
lret
cltd
outsl
mov
add
inc
std
add
add
xor
test
or
push
xchg
adc
ds
jo
loope
dec
push
jmp
dec
pop
cmpsb
xchg
sub
jl
jnp
cmp
test
or
jge
mov
pop
mov
or
xchg
lahf
lock
iret
fwait
sbb
mov
mov
gs
and
sti
adc
and
push
insl
inc
push
sbb
xchg
or
test
aad
mov
and
fldt
xor
mov
andb
xor
ss
inc
dec
jns
divl
fucomi
hlt
outsl
ret
xchg
mov
movsl
js
mov
mov
shl
fwait
imul
dec
push
mov
cmp
xchg
cmpsb
dec
stos
pop
mov
lret
xchg
dec
adc
mov
mov
or
or
mov
aaa
test
mov
insl
ja
xlat
sub
push
mov
xchg
les
cmp
mov
out
mov
ficompl
mov
dec
enter
xor
inc
sub
push
jb
inc
push
in
dec
ret
xchg
movsl
ret
xor
iret
and
push
or
inc
imul
jle
fbld
inc
mov
pop
push
xor
xchg
mov
add
or
test
aaa
lahf
cmpsb
fsubl
mov
stos
adc
mov
cmpsb
jmp
sbb
bound
fstpt
mov
sbb
pop
xchg
mov
dec
adc
out
jno
movsb
loop
out
je
add
or
int
or
loope
mov
mov
xor
inc
ljmp
loope
and
imul
dec
mov
int
or
dec
int
push
jbe
or
cmp
mov
repz
inc
mov
jle
lds
lea
mov
pop
fnstsw
in
inc
and
mov
cmp
or
idivl
aam
xchg
lret
enter
mov
push
push
pop
imul
pushf
ss
xchg
jmp
or
lret
or
cld
dec
mov
push
add
loope
dec
mov
sbb
or
mov
jmp
cli
nop
ja
in
xchg
js
sti
test
bound
jbe
push
jno
mov
les
adc
lret
xor
cmp
inc
mov
adc
push
lods
fisttpll
test
nop
lea
loopnew
inc
xor
mov
sub
ja
push
add
inc
dec
stos
xor
cmp
push
or
mov
stos
sub
into
mov
and
mov
inc
jmp
or
fisubs
ljmp
push
dec
lock
data16
insl
push
mov
add
sub
es
mov
sbb
inc
sarb
test
adc
inc
les
out
add
dec
cmpsl
sub
dec
hlt
adc
mov
test
aad
add
lods
jo
js
jae
lret
mov
arpl
sbb
mov
mov
sahf
mov
flds
jno
push
xor
xchg
fdivs
je
shr
aaa
imull
add
out
stos
and
xor
xchg
pop
push
add
pop
ss
mov
xor
mov
cmpsl
inc
fs
or
push
add
rorb
stos
into
jmp
rcr
mov
sahf
cmp
mov
lahf
dec
mov
or
mov
movsl
xchg
xchg
aam
pop
icebp
and
lds
xlat
and
repz
jb
pop
jl
push
jl
pop
mov
sbb
loopne
adcl
test
cld
lcall
insb
add
shrb
or
addr16
cs
dec
jmp
pop
iret
jae
iret
lock
cs
mov
sbb
sbb
pop
mov
movsl
sti
jnp
sub
adc
xor
xchg
lcall
daa
das
mov
and
ret
xor
fldenv
pop
ja
xchg
out
sti
adc
pop
repnz
dec
dec
and
lret
data16
adc
insb
dec
in
inc
rclb
mov
movsl
lds
lock
into
mov
das
int
fwait
pop
and
fstpl
inc
mov
cli
shrl
into
pop
adc
imul
push
jmp
fnsave
lock
or
popa
push
fidivl
inc
jecxz
xor
shl
iret
popa
and
dec
or
cmp
mov
or
cwtl
daa
and
xchg
or
inc
push
mov
jmp
cmpsb
das
outsl
inc
mov
imul
shrb
leave
fnstcw
xlat
test
cltd
pop
cwtl
ret
hlt
std
mov
add
xor
add
fnstcw
lret
pop
arpl
xor
and
cmp
inc
ds
ja
push
adc
mov
outsb
stc
iret
pop
es
xchg
cwtl
push
jb
pop
xchg
cmp
test
inc
sbb
mov
outsb
sub
iret
fcmovnb
pushf
scas
out
dec
xchg
sub
enter
aam
imul
adc
pop
mov
cmp
negb
mov
mov
and
iret
in
popa
call
rolb
out
shrl
cwtl
xchg
push
movsl
jae
cmpsb
add
pop
shrl
mov
or
jmp
call
mov
or
ret
sbb
mov
sub
fnsave
cmp
scas
cmpsb
dec
mov
push
inc
test
ja
int3
test
mov
xchg
gs
dec
incl
mov
lret
mov
xchg
push
outsl
aas
inc
mull
sbb
add
mov
mov
cwtl
push
outsl
sub
popf
dec
adc
arpl
sub
pop
jg
jno
cld
mov
ret
andl
in
std
fsubr
aam
xchg
fbstp
sub
mov
out
testl
icebp
lods
or
mov
jno
mov
adc
mov
lock
cmc
mov
mov
jbe
push
lret
cmp
xchg
gs
cwtl
stos
mov
in
push
dec
daa
or
lahf
inc
std
pop
fsubrs
faddp
mov
mov
int3
pop
push
lea
add
pop
in
adc
aam
dec
bound
mov
mov
mov
jne
mov
daa
inc
cli
add
dec
jge
and
fadd
mov
mov
cmpl
pop
or
push
repnz
jns
ror
xchg
push
lds
call
in
ss
or
inc
fisttpl
jmp
xor
adc
or
mov
inc
mov
mov
add
cmc
stos
lahf
les
cmp
sbb
lret
adc
push
movsl
frstor
lahf
push
xor
inc
sbb
jl
dec
fiadds
addr16
aad
cmp
pop
jge
enter
pop
cmpsb
push
cli
inc
sub
push
fnstsw
test
mov
mov
push
ds
xor
out
cmpsl
jmp
xchg
cli
mov
in
push
adc
outsb
rorl
insl
or
push
les
pop
xor
imul
adc
xlat
lods
sub
or
dec
aas
lret
test
in
test
pop
shl
jnp
psubsb
adc
fnsave
mov
push
gs
movsl
inc
mov
xchg
xor
icebp
gs
mov
push
push
stos
and
jecxz
movsl
xor
mov
mov
or
gs
pop
adc
mov
sarl
mov
and
int
xor
pusha
rolb
xchg
cld
sbb
sbb
daa
jp
xchg
mov
pop
push
add
lretw
mov
aad
cmp
out
call
imul
addr16
repz
add
and
jge
testl
popf
movsb
rcrb
xor
dec
aas
add
scas
sbb
sar
movntps
mov
cmp
push
outsl
push
inc
popf
pop
fdivrs
das
mov
cltd
lds
mov
stos
inc
addb
mov
test
sahf
fs
out
inc
pop
push
inc
fs
xchg
add
dec
sahf
add
sti
repnz
pusha
aaa
xchg
xor
push
xor
shlb
or
testl
mov
scas
fcom
imul
loopne
icebp
push
dec
inc
pop
jnp
mov
call
inc
jns
xor
int3
mov
sbb
loopne
loop
sub
rcrl
push
add
in
daa
xchg
cmp
insb
or
jnp
sti
and
and
lcall
push
mov
outsb
in
lods
aaa
rcll
jnp
bound
stc
sub
js
outsl
ret
sub
je
stos
hlt
sbb
or
testb
ja
repz
jp
cmp
mov
ret
and
frstor
or
add
push
jae
jg
adc
fdivrl
bound
and
add
scas
xor
inc
arpl
xchg
test
xchg
add
popf
mov
xchg
popf
subl
jge
das
mov
inc
loopne
testl
inc
ja
fldt
inc
adc
or
pop
xchg
lea
xor
rcrb
push
push
stos
jbe
dec
pop
add
mov
pop
repz
aad
scas
push
ljmp
jno
out
aas
outsb
adc
data16
adc
hlt
dec
roll
jmp
lahf
lahf
insb
ds
inc
popf
add
mov
and
sahf
lods
sub
dec
dec
imul
mov
push
test
mulb
push
jbe
pop
jo
and
add
mov
shlb
and
movsl
mov
lock
dec
outsl
daa
jmp
and
push
add
jno
pop
addb
jecxz
or
imul
jo
add
push
mov
iret
in
aas
outsb
pop
movsb
and
inc
xlat
mov
ja
mov
fiaddl
or
into
adc
hlt
dec
movsb
adc
jmp
ja
stos
fidivs
ds
or
in
out
popf
mov
int3
daa
or
mov
jns
sub
loopne
pop
dec
repnz
jnp
sub
enter
popf
fptan
and
inc
popf
cmpsl
inc
loopne
outsl
push
test
shlb
call
in
pop
pop
mov
inc
pusha
clc
ficompl
loopne
mov
sbb
sbb
push
jnp
cmp
or
rcr
in
shrl
dec
iret
sbb
sarl
repz
cmp
mov
sub
xor
adc
inc
ret
inc
push
test
inc
loope
xor
jecxz
pushf
xchg
rclb
cwtl
mov
push
mov
sahf
adc
mov
cmc
sbb
xor
into
or
lahf
mov
jb
push
sub
lret
sub
icebp
and
fsts
sbb
loop
mov
xchg
or
dec
jae
cmp
js
ret
sub
sub
pop
add
pushf
sbb
mov
ds
addr16
les
mov
pop
xchg
stc
mov
cwtl
adc
or
xchg
outsb
dec
call
mov
aad
inc
pop
adc
je
lea
jl
jge
inc
adc
mov
out
in
stos
insl
jmp
cmp
sti
xchg
mov
inc
fs
push
das
xor
cmpsb
xor
mov
push
iret
leave
int3
dec
lds
push
mov
dec
jne
sub
sbb
ds
adc
sub
jecxz
inc
mov
adc
or
movsb
jmp
add
dec
jo
popf
xor
fwait
sub
int3
pop
mov
fadds
cmpsb
and
mov
stos
jl
repz
fstpl
out
cmp
inc
fisubrl
inc
push
popf
xor
popa
enter
jmp
lea
out
jp
sbb
movlps
sub
xchg
or
cltd
dec
add
ss
push
push
shrl
aaa
in
jg
xchg
xchg
ficoml
stos
jne
lds
jno
inc
lods
dec
cmp
push
inc
dec
pop
xchg
call
cmp
sbb
dec
loop
rep
mov
rcl
shll
insl
pop
fiaddl
fimuls
mov
pop
fdivs
fbstp
sub
fstpt
imulb
cmp
imul
subl
shrb
mov
xchg
push
adc
mov
mov
jno
loope
push
outsl
imul
adc
cmp
pop
add
daa
stc
cmp
xchg
insb
ljmp
add
inc
jecxz
or
xor
sti
stos
add
shll
inc
ret
pop
push
in
fstpt
pop
rol
je
xor
mov
jmp
mov
push
rcrl
or
addr16
es
scas
outsb
ds
sbb
pop
ss
pop
mov
ss
pop
xchg
shlb
pop
push
mov
leave
fsincos
cli
std
cmp
into
inc
ds
popf
roll
scas
jp
daa
inc
adc
in
push
sub
sbbl
pushf
mov
xchg
test
std
inc
insb
mov
iret
enter
sbb
les
inc
mov
fnstenv
adc
pop
insb
push
fwait
sti
pop
mulb
sahf
pop
out
int
mov
loopne
mov
sbb
into
into
cmpsb
jge
testb
pop
pusha
dec
push
jb
adc
cmp
or
daa
lds
push
bound
fsub
adc
xchg
lods
cmc
xor
repz
in
mov
pop
jns
push
jge
aaa
sbb
in
lods
xchg
jle
loopne
pop
xchg
xor
sub
mov
mov
jg
jecxz
add
mov
xchg
out
and
sar
fistps
lret
push
fbld
ljmp
ret
inc
int3
xor
mov
and
xchg
push
test
mov
push
arpl
dec
mov
xor
andl
jo
mov
ja
mov
out
mov
jle
adc
mov
lods
jp
fiadds
sbb
mov
iret
scas
fsubrs
insl
rcll
mov
clc
mov
jns
sbb
push
stos
cmpsl
sbb
enter
testb
jae
aam
cmp
test
mov
std
or
mov
push
lret
out
and
cmpsb
push
add
mulb
sub
pop
insb
insb
dec
mov
out
cmp
push
out
pop
pop
notb
loop
ds
jo
dec
mov
cmp
scas
jmp
test
shlb
add
shlb
fists
sub
adc
js
xor
enter
js
push
dec
inc
or
add
inc
cltd
flds
out
adc
and
jns
orl
loop
repz
or
imull
movsl
fldt
pop
repnz
mov
aam
add
or
lods
inc
push
jmp
xchg
ja
loop
loop
push
adc
fucomi
xchg
dec
test
pushf
shlb
or
jecxz
cmc
hlt
pop
mov
insl
inc
xor
in
pusha
loope
sbb
es
jmp
out
jno
in
nop
sub
lods
ja
push
out
inc
sbb
xor
outsb
mov
mov
jb
xchg
popf
push
or
iret
pusha
les
push
xchg
out
xchg
testb
jp
dec
cmpsb
pushf
mov
add
cmp
pushf
incb
pop
add
in
pop
scas
jno
aad
js
movb
xor
ret
lods
cmp
mov
pop
js
and
cmp
test
in
xor
movsb
cmp
push
mov
sub
stos
repnz
sub
dec
xor
mov
fistps
mov
dec
lods
fisubrl
in
imul
inc
xor
or
push
out
mov
xchg
mov
push
mov
mov
dec
out
adc
sbb
dec
js
push
shrb
add
xor
sub
mov
aaa
adc
data16
xor
xlat
out
out
test
inc
xor
arpl
int3
xor
or
xchg
sbb
push
daa
cmp
aam
cltd
and
in
xor
and
mov
mov
leave
sub
sub
sbb
or
sub
out
push
and
lret
adc
dec
nop
cmp
cmc
rcl
or
cmp
decl
pop
call
roll
adc
sbb
cmp
push
mov
pop
loope
iret
adc
int3
pop
repnz
adc
jae
loop
mov
movl
xlat
mov
xlat
in
nop
xchg
xor
lock
fildl
packuswb
cmpsb
fisubrs
sub
sub
jmp
outsl
aas
mov
xor
push
shrl
mov
fcmovb
pop
arpl
cmp
icebp
cmp
mov
xor
das
pop
popf
and
int3
xor
in
or
lret
mov
out
mov
xor
mov
xor
sbb
dec
addr16
inc
fcoml
shrl
adc
out
rcrl
pop
sub
loop
out
add
je
xor
lret
ljmp
lahf
adc
dec
dec
mov
xchg
push
sbb
jne
scas
push
push
sahf
out
and
fnstcw
loop
jbe
pushf
xor
call
pushf
imulb
fs
push
push
mov
push
or
int
fsubl
pop
lret
inc
filds
gs
mov
jecxz
ret
cmpsb
daa
or
lahf
arpl
shrb
popf
xor
jbe
frstor
xchg
push
or
cmpsb
mov
int
enter
cld
xchg
adc
int
enter
jecxz
add
xor
lea
push
jbe
inc
stc
imul
push
push
in
sub
xor
xor
jg
fwait
mov
add
incl
mov
gs
into
xor
dec
or
mov
mov
or
aaa
fs
xchg
adc
stos
popa
enter
add
lret
ds
push
dec
pop
inc
rorb
dec
push
and
stos
rclb
lret
fwait
stc
sub
test
leave
inc
lock
xchg
mov
push
outsl
push
cmp
in
mov
bound
mov
mov
pop
das
xchg
pop
add
xchg
mov
ss
arpl
push
lods
inc
cli
add
int3
mov
shrl
cmp
jns
bound
cmpsl
repz
xchg
test
mov
pop
and
out
and
fcoml
jb
in
adc
pop
mov
and
xor
adc
push
xor
xor
in
cmpsl
mov
gs
dec
inc
push
dec
pop
in
inc
jle
into
pop
call
dec
arpl
mov
fiadds
iret
or
fs
push
adc
hlt
loopne
or
push
xchg
xor
jge
mov
jge
and
popw
mov
mov
xor
ret
lods
movsb
and
inc
je
out
dec
in
mov
loop
xor
and
push
jp
pop
xchg
xor
xor
inc
push
lret
movsb
aam
pushf
imull
mov
jl
sbb
int
lds
or
or
jl
push
andb
mov
mov
jle
lahf
aam
lods
into
sbb
pop
jae
pusha
popf
xlat
xchg
test
mov
and
push
mov
movsl
sbb
push
repnz
pop
shl
inc
arpl
repnz
gs
push
adc
sub
push
and
xor
mov
and
je
js
shrb
push
cld
push
mov
mov
sub
fildl
cs
sbb
jo
fwait
mov
jge
adc
fwait
adc
mov
fwait
loopne
xlat
inc
fimuls
jns
push
push
add
mov
add
jae
in
imul
jb
dec
outsb
ret
pop
rcl
and
lock
fstps
xchg
sub
sub
cltd
sar
mov
in
leave
push
push
xchg
pop
test
pop
daa
sub
sbb
js
insl
scas
mov
push
mov
push
inc
out
mull
push
push
mov
std
add
xorb
subl
jle
inc
int3
orl
sbb
mov
inc
xchg
data16
cmp
push
insb
adc
xor
lret
or
dec
inc
into
mov
test
inc
loopne
ljmp
rolb
rcrl
inc
stos
std
jo
jmp
adc
sbb
mov
mov
sbb
movsl
pop
pop
into
mov
mov
inc
insb
cld
ret
mov
fs
dec
outsb
stc
lcall
je
popf
pushf
sub
pop
add
or
divb
add
mov
jge
cmp
sub
adc
mov
push
push
int
jmp
mov
fdivl
in
jns
adc
test
add
sbb
das
lcall
js
inc
or
int
inc
daa
dec
pop
mov
ret
xor
icebp
adc
sub
fs
adc
fimull
outsb
aad
outsl
push
loopne
ss
and
or
push
mov
out
cmpsl
mov
cli
add
and
mov
nop
fcomip
mov
idivb
je
xchg
inc
icebp
mov
popf
sbb
mov
nop
imul
inc
mov
mov
mov
fnstsw
push
dec
lret
pxor
jns
pop
insb
add
stos
fisttps
test
and
jmp
or
adc
pop
pushf
xor
in
jns
jae
pushf
lcall
cmpsl
aas
add
or
and
push
outsl
jl
mov
loopne
dec
add
stc
insl
rcr
mov
fcoml
mov
call
aam
xchg
pop
movsb
add
jl
in
scas
add
xchg
sub
sbb
inc
push
aam
repz
sahf
stos
std
test
sahf
in
cli
jne
push
xchg
ret
xchg
mov
ret
cmc
ss
test
xchg
mov
xor
movsb
sub
cmpl
or
test
mov
push
in
inc
rorl
mov
mov
jmp
icebp
add
dec
cmpsb
sbb
std
fidivrs
dec
cli
sbb
add
pop
incl
fisttpl
testl
sbb
mov
push
fsub
mov
pop
outsl
or
and
call
push
je
cli
test
into
insl
mov
pop
outsb
add
lods
xor
lds
jae
xor
push
ret
pop
push
mov
lea
in
xchg
rorl
nop
xor
or
mov
dec
mov
loopne
outsb
shrb
jno
cmp
cld
inc
jecxz
shll
and
and
jns
adc
fstpl
push
lahf
fbstp
push
leave
push
js
out
pop
cmc
mov
xchg
pop
mov
bound
xlat
push
shr
mov
mov
sub
xor
cwtl
divl
add
test
pop
rcrb
pop
cmp
or
aas
subb
jp
mov
add
push
pop
arpl
xchg
push
push
gs
fisttpl
xor
popa
fstpl
mov
dec
pop
push
pushf
push
cmp
sub
bound
mov
add
jns
out
insl
fbld
lahf
subb
ss
loope
sarl
in
inc
add
push
cmp
mov
test
mov
and
cs
dec
jne
jnp
mov
push
mov
dec
loopne
bound
xchg
cmovbe
inc
andb
xchg
sti
aas
divl
mov
testb
or
popa
sub
push
pop
je
imul
mov
add
mov
mov
leave
xchg
stos
push
test
xchg
stos
cli
push
cmp
push
testl
enter
cmc
mov
pop
mov
jmp
inc
pop
ret
jnp
pop
lock
cli
loop
minps
stos
popf
dec
fstl
cmp
lret
push
cmp
enter
mov
mov
jle
repz
lods
cwtl
inc
fdivl
and
dec
iret
outsb
cmp
push
mov
cmp
and
sbb
lcall
xor
idivl
adc
in
jo
fdivl
cmpsb
out
mov
pop
mov
pusha
xor
push
mov
repnz
mov
push
adc
mov
xchg
or
xlat
xchg
mov
or
jge
nop
jae
stos
mov
bnd
cmpsl
mov
inc
jae
jg
fstl
stos
mov
pop
addb
cltd
sbb
mov
mov
les
aad
mov
push
in
test
aas
addb
mov
test
lods
push
popf
adc
sbb
lret
adc
push
nop
add
insl
add
jnp
dec
pop
dec
jl
ficomps
mov
out
adc
pop
mov
pop
idiv
sbb
and
sbb
sub
stos
daa
pop
scas
test
test
dec
call
jnp
in
jnp
pop
cmpsb
pusha
xor
mov
adc
ds
xor
inc
ljmp
xor
mov
cmp
loopne
push
shll
pusha
xor
lods
xor
mov
gs
loope,pt
dec
adc
jnp
data16
xchg
jne
pop
cmpsl
mov
mov
mov
inc
adc
mov
movsb
fimull
push
sbb
lods
popa
pop
aaa
or
test
jmp
cmp
inc
push
inc
cmc
loope
xlat
fidivl
mov
xchg
sbb
jl
aam
mov
xorb
sub
lods
lock
enter
adc
dec
adc
sub
jo
imul
sub
loopne
pop
xor
mov
jb
xor
movsl
push
or
or
mov
sbb
jmp
leave
mov
pop
mov
and
mov
and
mov
sti
or
lcall
push
cmc
rcrl
rorl
mov
jp
lcall
nop
push
mov
xchg
lret
mov
rorb
mov
cltd
xchg
pop
jae
jp
dec
push
and
pop
fistl
mov
push
push
call
fnstenv
inc
frstor
movsl
jecxz
fidivrl
xor
mov
jb
sbb
lods
jl
lret
es
lock
jbe
xchg
lea
add
inc
push
fwait
inc
and
adcl
cs
cld
in
lock
push
dec
dec
pusha
pop
add
cmpb
jl
and
clc
jg
nop
push
rorl
or
js
jnp
das
xchg
daa
adc
icebp
and
cmpsb
xchg
inc
sbb
lret
sub
mov
lds
pop
sbb
in
pop
mov
pop
js
mov
xchg
sub
mov
aad
faddl
xchg
lods
or
sbb
jge
lea
nop
and
push
jle
cmp
adc
mov
incb
cmp
adc
stos
jecxz
jmp
addr16
adc
int
lcall
popf
mov
push
imul
aas
pusha
mov
ret
jb
mov
xor
repnz
dec
adc
cwtl
das
push
daa
fiaddl
stos
sub
mov
cmp
stos
push
or
inc
pop
lock
imul
sub
pusha
xchg
aas
push
add
xor
xchg
pop
inc
popa
xor
icebp
aad
sub
jns
std
aad
hlt
mov
or
push
mov
mov
mov
mull
leave
push
xor
ljmp
adc
pop
scas
sahf
sub
sub
test
ja
xchg
test
std
fldenv
das
add
andw
adc
rolb
call
inc
xor
idivl
aad
sahf
or
aaa
call
push
cmp
mov
ficomps
sub
jecxz
icebp
mov
scas
imul
adcl
bound
and
in
mov
push
lea
into
pop
pusha
testl
mov
add
or
aas
bound
js
out
stos
cmp
push
insb
jg
movsl
in
adc
loop
mov
or
out
into
jno
adc
mov
add
adc
fsts
adc
repz
lods
xchg
xor
sahf
mov
push
xor
leave
push
push
mov
lcall
aad
xchg
sub
push
add
adc
cltd
mov
push
adc
add
xorb
mov
push
pop
mov
pop
cmp
pop
loop
add
push
or
iret
mov
adc
jbe
insb
nop
ret
jb
mov
out
loopne
and
sub
ds
cli
out
test
test
lcall
out
and
ret
xchg
cmc
dec
insl
add
mov
adc
push
call
aad
adc
dec
repz
xor
leave
adc
test
mov
pop
arpl
xchg
aas
add
int3
pushf
push
add
mov
mov
faddp
js
int3
cli
daa
fidivrl
mov
lods
mov
sub
pop
mov
popa
sub
scas
outsl
loopne
aaa
pop
dec
sbb
repz
sbb
lods
outsl
pop
mov
in
sbbl
xchg
xchg
or
notl
stos
outsb
popf
cs
pop
inc
lahf
pop
adc
daa
cli
shrl
cld
out
mov
push
sbb
ret
loope
fisttpl
add
xor
pop
es
test
cmp
push
mov
dec
or
repnz
inc
testl
mov
or
mov
fucomi
cmpsl
dec
in
mov
xlat
lcall
jge
outsl
imul
sub
cli
jne
imul
loopne
ja
push
outsb
nop
mov
push
cmp
pop
sub
xchg
jp
ds
aaa
jge
jno
notl
cmpb
sahf
mov
adc
adc
mov
jp
aas
dec
insb
jg
lcall
pop
loopne
ret
repnz
aam
or
adc
cwtl
push
xchg
mov
repnz
mov
clc
mov
add
rol
and
push
in
pop
push
out
sub
cmp
inc
jp
jne
xchg
mov
xchg
push
inc
hlt
mov
into
or
pop
xor
stc
aad
rcrl
sbb
mov
inc
lds
dec
cmpsb
cmp
mov
sub
mov
adc
cli
pop
mov
push
jnp
pandn
insb
jno
shl
mov
addr16
mov
imul
stos
sbb
mov
lods
sahf
mov
push
vpacksswb
jno
sbb
dec
mov
push
push
pop
fimuls
fidivl
jae
mov
js
cs
pop
mov
popa
scas
rolb
sub
jge
or
pop
sub
outsb
push
test
xchg
cmc
mov
imul
fisubs
scas
xor
aam
test
lods
andl
jnp
insl
mov
fidivrl
shr
push
or
lods
pop
jge
sti
lods
call
xchg
push
xlat
in
ret
fists
aas
adc
fcoml
shrl
movsb
mov
xchg
xor
mov
or
lahf
adc
test
icebp
mov
mov
call
cs
jno
push
lret
push
cmp
clc
xchg
cmpsl
mov
sub
mov
cmp
jne
aaa
cmp
mov
shrl
cmp
xorl
dec
pop
pop
call
inc
xor
sahf
and
xchg
push
outsl
mov
mov
mov
xchg
and
dec
mov
cmpb
adc
gs
inc
xor
pusha
dec
sbb
pop
fisubs
pop
push
data16
push
sub
out
fstpl
lds
test
adc
int
or
and
xor
adc
aaa
test
sbb
insl
dec
loop
enter
shrl
cmpsl
cmp
mov
rclb
cmc
dec
mov
clc
mov
add
mov
cmp
pop
imul
add
mov
and
test
lret
repz
rol
mov
arpl
jmp
lods
mov
mov
fisubl
rorl
cmp
xor
fucomi
jae
es
fbld
pop
aaa
addr16
in
push
push
push
add
xchg
lods
je
jmp
mov
xorl
mov
or
sub
push
mulb
xchg
out
test
push
xchg
jb
es
xor
addr16
or
xchg
aaa
and
out
fmuls
push
sti
push
jmp
xchg
pop
jnp
cmp
enter
dec
xlat
cmp
fwait
in
movsl
sbb
dec
lds
cmc
and
sti
roll
outsb
xor
mov
ret
ret
inc
inc
ljmp
xor
xchg
dec
cmc
pop
aaa
adc
ss
psraw
loope
fcom
lods
shlb
addps
mov
iret
dec
mov
loope
lea
and
mov
ret
jne
pop
cli
jae
movsb
lds
loop
lret
inc
inc
stos
mov
imull
sarl
mov
rorl
enter
repnz
dec
mov
andb
adc
gs
jo
and
outsb
xchg
sbbl
scas
mov
lahf
push
mov
cli
jle
mov
adc
pop
jmp
push
jne
or
dec
dec
add
lcall
push
shll
add
addl
mov
push
cs
stc
inc
enter
sub
into
jae
in
sub
push
pop
int3
and
iret
pop
mov
jge
data16
mov
sbb
jns
fdivp
scas
inc
dec
lock
in
fnstenv
sub
testl
push
xlat
ficomps
fs
subb
push
xor
outsb
in
inc
shll
std
mov
arpl
or
adc
js
inc
dec
push
jmp
sbb
sub
pop
cmp
xchg
sbb
or
cmp
std
sbb
movsb
xor
inc
lds
lock
dec
imul
subl
sub
es
adc
push
cltd
xor
outsl
xor
mov
or
popl
aad
pop
mov
fnstenv
inc
inc
inc
mov
mov
fisttpl
lret
xor
adcb
mov
dec
sub
lahf
test
aam
sbb
pop
pop
aad
movb
lods
dec
jle
jecxz
inc
lcall
hlt
rcrl
sbb
ds
out
pop
ja
adc
inc
arpl
jne
lret
sbb
sbb
xor
jp
jl
add
adc
bound
jne
sub
not
fs
pop
xchg
mov
jb
mov
bound
fnstsw
lea
outsl
push
or
adc
bound
pop
xor
cmp
in
xchg
adc
jns
sub
add
in
repz
xchg
scas
or
ds
push
or
cmp
cmp
imul
lcall
and
stos
jg
xor
rcrl
test
out
pop
dec
cmp
jl
cmc
pop
outsl
lds
sbb
icebp
dec
xor
pop
mov
sbb
mov
fiaddl
daa
adc
pushl
xor
xchg
mov
sub
ss
lods
clc
ret
jne
in
dec
loop
adc
mov
xlat
push
pop
xor
jns
out
cs
xor
fmull
push
push
bnd
popa
stos
adc
or
insb
add
fdiv
das
mov
fbstp
addr16
outsb
clc
cmp
sbb
or
movsb
repnz
popf
xor
xor
xchg
sbb
dec
or
iret
loope
fldt
loopne
mov
insl
mov
mov
inc
shl
mov
mov
or
mov
out
push
fadds
lea
mov
cmpsb
scas
fisubrs
jae
add
stos
lock
adc
call
mov
filds
mov
insb
pop
push
out
jl
scas
sarb
int3
adc
ljmp
mov
sbb
fistl
fldcw
cmp
aad
call
fdivrl
insl
pop
sahf
popf
or
fwait
xchg
lcall
mov
movsl
movsb
sti
enter
icebp
mov
ret
jmp
sbbl
ret
and
pop
test
cmp
mov
shrl
stc
out
sub
icebp
int3
xlat
xor
cmp
or
hlt
mov
call
aas
adc
jecxz
cmp
jnp
adcb
dec
jno
std
fcmovne
dec
push
pextrw
sub
xchg
aaa
rcrl
int
jnp
cmp
sbb
push
sub
xor
xchg
and
divl
mov
arpl
and
in
stc
popa
ret
movsl
xor
popf
sbb
jb
sarb
int3
jecxz
sub
mov
or
pusha
pop
arpl
add
mov
mov
insl
sbb
pop
testb
jb
mov
xor
cmp
shrl
or
in
movsl
push
jbe
es
inc
sbb
and
push
popf
jg
sti
or
push
arpl
xchg
mov
lret
xor
jmp
sub
fisubrl
fdivrs
test
lods
jno
js
jp
jmp
scas
movsb
jo
lahf
adc
aam
pop
adc
stc
inc
jg
mov
mov
lret
bound
sti
inc
dec
mov
je
icebp
push
fidivrs
iret
mov
sbb
sbb
lea
mov
cltd
and
aam
ss
popa
xor
inc
pop
lcall
faddp
xchg
xor
stos
sub
lret
bound
gs
adc
sar
bound
jle
aad
out
and
imul
pop
sarl
inc
mov
fistpll
lods
int
push
mov
xchg
xlat
add
inc
fsts
je
cli
into
arpl
cmpsb
mov
icebp
data16
adc
push
add
lods
pop
fstps
enter
dec
pop
push
dec
and
cwtl
xchg
lahf
lock
ljmp
sbb
es
cli
test
xchg
je
dec
and
les
test
jge
arpl
loope
les
ljmp
push
or
aad
lcall
in
data16
xchg
bt
inc
mov
in
test
mov
mov
sarl
notl
adc
popf
cmp
rcll
inc
sbb
xchg
cmp
imul
mov
mov
push
and
daa
cli
test
leave
lock
xchg
mov
shrl
xor
and
leave
inc
ljmp
std
iret
push
es
or
popa
sti
cwtl
mov
es
shll
sbb
loop
lods
subl
cmp
movl
dec
mov
push
je
push
loop
jb
jbe
scas
cmpsb
mov
pop
hlt
call
xor
adc
ja
add
sbb
push
inc
ss
push
add
je
jecxz
jo
add
aas
ret
frstor
fcomip
inc
notb
jbe
inc
das
lcall
jle
mov
iret
outsb
push
inc
pop
sbb
inc
in
mov
xor
sbbb
sbb
fdecstp
scas
aad
aam
lods
dec
mov
in
loop
imul
fidivs
xchg
mov
pop
fisubrl
aam
mov
mov
sub
xor
sub
mov
push
jne
imul
mov
or
gs
sahf
jge
bound
mov
push
jmp
pop
out
js
popa
cld
mov
pop
aaa
dec
add
inc
jne
cmp
in
cmovo
adc
lea
inc
lods
xlat
in
and
andb
jge
sub
ljmp
xor
sbb
xchg
into
fldt
nop
daa
repnz
imul
pop
add
dec
jne
stos
out
or
aad
aas
fwait
cmc
repz
xchg
xchg
or
data16
xor
mov
push
jle
outsb
fnstsw
adc
sti
xor
dec
add
sbb
lock
adc
ret
mov
out
les
stc
iret
jge
out
sub
pushf
in
mov
stos
jb
sub
cmc
mov
sub
and
fwait
xor
xor
shlb
gs
dec
cmp
insl
js
clc
pop
jmp
repz
and
cmp
sti
sub
clc
pop
jb
jbe
adc
fldcw
mov
out
pop
stos
mov
mov
jbe
or
xor
test
cmc
push
xor
rorb
lock
mov
or
mov
hlt
add
test
cmpsb
cmc
sub
leave
mov
pop
dec
cmp
aas
mov
inc
iret
int3
add
loopne
lods
dec
sub
mov
jge
dec
nop
and
stos
inc
add
sbb
fidivl
dec
add
test
jecxz
sbb
mov
sbb
ljmp
and
push
movsb
add
in
and
shrb
cmp
and
lahf
or
mov
fldenv
mov
and
dec
inc
daa
scas
mov
es
pusha
fmuls
rorb
es
push
push
sub
cmp
pop
mov
xlat
sub
dec
pop
inc
pop
out
fs
jecxz
mov
aad
sub
sbb
add
mov
xchg
mov
inc
jmp
shlb
in
dec
add
jle
out
sti
add
jb
inc
ss
xchg
daa
push
ret
lahf
imull
aad
cli
inc
add
insb
jle
sbb
mov
aaa
mov
repz
pop
mov
lock
in
movsb
or
sub
cmp
sub
stos
adc
add
mov
enter
cmp
rcl
xor
sub
icebp
mov
setl
ret
ds
dec
mov
out
int3
adc
adc
sub
mov
insb
xchg
js
adc
xchg
add
xor
jecxz
push
sub
in
std
es
pop
rep
lret
test
outsl
adc
popf
push
ja
xor
pusha
je
ret
hlt
div
lea
aas
loop
or
clc
adc
ss
mov
jg
and
loope
xchg
jns
jg
dec
fcomip
adc
hlt
jmp
and
pushf
test
jae
mov
aaa
xchg
imul
pop
ljmp
jno
ficoml
push
ljmp
jno
clc
add
fs
ffree
sub
gs
mov
pop
mov
lret
rclb
rolb
js
sub
popa
leave
daa
outsl
es
mov
mov
sbb
out
cmc
mov
jbe
dec
ss
std
pop
fbstp
mov
cmpsl
xor
repz
test
movsb
jnp
popa
lods
xchg
pushf
sub
repnz
dec
pop
mov
jne
pop
sub
mov
jecxz
or
stos
mov
mov
mov
fwait
aad
add
pop
jecxz
adc
mov
outsb
or
inc
or
out
sbbl
mov
arpl
or
mov
clc
pop
rol
aad
js
xor
cld
xchg
mov
shlb
test
lahf
popf
pop
cmpsb
ljmp
push
icebp
out
sub
add
jb
inc
mov
dec
mov
js
jne
inc
mov
ficoml
outsl
jnp
mov
mov
cmp
in
scas
jb
mov
je
mov
xchg
cmp
pop
sbb
jno
mov
imul
jns
out
and
sub
push
cmp
mov
jo
in
sti
nop
pop
sbb
mov
add
fs
and
mov
lret
mov
cli
mov
mov
jbe
pushf
pop
mov
sub
leave
outsl
jg
xchg
push
icebp
jmp
xor
mov
mov
bound
test
pop
call
dec
jmp
aam
push
call
sub
movsb
cmp
test
xchg
cli
test
jo
ret
push
pop
adc
jae
nop
sub
insb
mov
je
xchg
rcl
jns
push
mov
mov
out
aam
outsl
mov
adc
hlt
add
lea
mov
inc
imul
or
sti
pop
add
ret
scas
test
push
mov
addr16
cmpb
sbb
mov
shll
fnstsw
das
and
repz
and
lret
mov
es
jo
adc
add
stc
sahf
es
cli
int
add
iret
or
out
mov
enter
ljmp
fs
mov
pop
test
xchg
add
clc
xor
xchg
xchg
xor
ds
addl
lret
push
cs
test
daa
pop
push
loop
shll
jo
ja
cld
mov
test
push
fs
xchg
lcall
daa
pop
pop
sbb
xor
and
lahf
repnz
into
dec
cld
mov
inc
or
insb
xchg
mov
push
lahf
test
shl
cli
cmp
fldl
or
mov
pop
pop
mov
enter
dec
dec
inc
inc
inc
pop
in
cmp
sbb
shlb
mov
add
push
mov
shlb
or
ret
and
iret
movl
inc
sti
iret
xchg
sub
lret
popa
pop
push
dec
aaa
clc
shlb
push
mov
or
jns
xlat
xor
jo
jge
xchg
add
mov
dec
imul
movsb
les
aam
mov
mov
pop
jno
fbstp
adc
dec
mov
push
nop
cmp
add
outsb
or
push
sti
daa
xchg
mov
mov
push
add
mov
fildll
les
xchg
popa
jo
jno
or
scas
push
dec
dec
xchg
ljmp
insl
aad
pop
sti
jge
or
and
gs
pop
sbb
inc
orl
into
push
clc
or
hlt
inc
test
adc
mov
inc
push
inc
ror
or
sbb
sti
cmp
add
jg
or
imul
popa
add
adc
roll
popa
sbb
mov
sahf
mov
scas
adc
insb
ss
adc
jns
and
adc
inc
and
frstor
add
inc
pop
mov
outsl
mov
mov
mov
mov
pop
dec
pop
mov
shrb
ror
subb
cmp
outsb
rorl
pop
arpl
scas
ja
mov
pop
repz
sub
decb
lret
xor
mov
loopne
movsb
into
cwtl
cmp
test
inc
or
dec
pop
or
shl
cmp
bound
stos
inc
sub
sbb
push
sbb
aad
daa
in
cld
mov
test
pop
out
lds
out
mov
stos
inc
push
jae
cld
movsb
sbb
bound
dec
negb
sub
js
sub
inc
mov
and
out
lret
xor
mov
xchg
push
loop
add
lea
and
mov
cmp
ljmp
jae
mov
push
shrb
sub
fnsave
outsb
add
cmp
jecxz
mov
pop
dec
call
sub
jle
sub
andb
sbb
mov
inc
xor
pop
repnz
fstpt
out
inc
int3
fdivl
jl
jecxz
and
add
sbb
not
sub
ret
mov
jmp
jmp
outsb
out
cmp
sbb
ja
lret
leave
stos
mov
mov
lahf
pusha
sub
aam
inc
add
es
sbb
xor
jbe
push
fidivl
cmc
mov
imul
jne
cltd
lods
push
sbb
test
gs
loop
into
xlat
jl
je
cmc
test
push
mov
cmp
leave
pusha
jno
imul
scas
fisubl
xor
sbb
std
jne
stos
push
xchg
mov
int3
mov
add
adc
xor
xor
das
push
push
push
test
push
xchg
movsl
iret
data16
mov
loope
lret
mov
push
or
addl
xchg
aam
rclb
jns
mov
cld
in
out
mov
les
pop
insb
pushf
dec
mov
cwtl
rol
stc
jle
add
xchg
push
xchg
sbb
push
adc
or
movsl
dec
push
sub
clc
fdivrs
mov
sub
xchg
jg
dec
popf
fcomps
hlt
adcl
push
mov
lcall
or
icebp
ja
sbb
lea
xchg
push
dec
mov
mov
mov
ret
out
js
leave
sbb
movsl
jle
or
mov
sub
stos
cmp
divl
mov
pop
mov
lcall
mov
rcll
das
movsb
neg
or
mov
mov
movsb
ss
dec
xlat
into
hlt
out
popf
adc
or
xorb
sub
jp
sbb
push
and
pop
stos
add
lea
in
sti
xchg
and
cmp
inc
sbb
dec
inc
out
lahf
mov
in
test
fucomp
inc
add
imul
js
loope
ud2
pop
mov
cmpsb
mov
imul
xchg
inc
clc
cmpsl
sub
sbb
stos
and
lahf
xor
lock
mov
jns
push
pop
mov
das
push
mov
xlat
lds
cwtl
ja
inc
out
jl
fisubrl
data16
jmp
loopne
sbb
aas
shll
rcll
pushf
sub
or
test
insb
lret
clc
fdivrl
inc
outsl
or
xchg
shl
push
fadds
fdivl
sub
mov
xor
into
fidivl
or
fsubs
and
mov
mov
push
jne
push
jno
ljmp
push
add
gs
es
outsl
imul
jecxz
repnz
jecxz
mov
mov
sahf
pushf
cmp
dec
lods
push
aam
jbe
adc
nop
mov
add
mov
movsb
pusha
adc
cld
sub
xlat
jl
fs
sbb
sub
outsb
arpl
pop
in
xchg
mov
inc
push
sub
sbb
pop
xor
imul
int3
xchg
sarl
sbb
cwtl
outsl
aaa
fmul
les
mov
xchg
xchg
out
mov
push
cmp
adc
xchg
push
mov
jmp
sbb
cltd
scas
xchg
cmp
mov
pop
pop
addr16
mov
movsb
cmp
xchg
or
inc
cli
int3
test
std
pop
dec
cs
mov
jmp
xor
sbb
pushf
aaa
in
outsl
sbb
xchg
mov
fdivl
mov
int
arpl
aad
outsl
or
popf
vmread
jg
bound
xchg
sub
outsb
mov
sahf
adc
loope
test
test
pop
or
bound
fsubs
pop
scas
inc
pop
negl
push
push
adc
cltd
jmp
push
dec
or
xchg
pop
adc
loop
xchg
pop
xlat
rorb
inc
iret
mov
inc
leave
pusha
xor
pop
call
aaa
or
ds
push
movsl
xlat
loopne
mov
clc
sub
xor
in
addl
dec
fldenv
testl
repz
jmp
stc
fcmovbe
test
scas
push
fcomps
mov
sub
mov
push
mov
sar
or
pop
pusha
and
inc
pop
enter
jge
or
or
popa
or
cmp
adc
decb
and
xchg
or
cmp
mov
adc
incb
test
push
and
or
or
fildl
test
dec
in
cmp
insb
xchg
jnp
pop
cmp
insl
sub
je
dec
in
movsl
pop
mov
pop
mov
sub
subb
xchg
dec
sahf
cli
cmpsb
shll
fiaddl
sbb
cmp
jle
and
adc
sbb
push
int3
pop
or
test
daa
aam
pop
jae
mov
push
sbb
or
mov
jo
popf
movsb
cmp
call
and
inc
cli
add
data16
sbb
shll
clc
add
inc
inc
xor
outsb
cmpsb
dec
in
mov
mov
popf
jo
imul
mov
movsl
das
adcl
lds
jge,pt
push
arpl
lods
and
or
push
jge
mov
pop
outsl
fsubs
mov
test
shl
jl
xor
push
inc
mov
add
mov
sbb
mov
sbb
shlb
in
ror
lea
mov
mov
jp
xor
js
ret
or
jnp
imul
mov
hlt
adc
and
fwait
jb
cmp
lcall
and
daa
pop
adc
or
aas
mov
or
cmpsl
psubsb
push
pusha
sbb
test
rcl
lret
adc
mov
xor
in
mov
inc
int3
cmp
stc
pop
mov
hlt
fsubp
mov
fisubrs
jmp
sbb
fidivs
mov
std
imul
mov
pop
outsl
sbb
mov
mov
cmpsl
jecxz
xchg
and
stos
repnz
sarb
add
out
loopne
test
inc
pop
push
mov
in
subl
arpl
imul
jl
mov
add
cmp
adc
call
adc
fwait
outsl
push
js
popf
jae
cltd
popf
sbb
imul
repz
out
pop
aas
test
mov
push
sbbl
mov
mov
fildl
fidivrs
jmp
xor
ss
xchg
push
stos
mov
out
xor
and
mov
add
subb
xor
loopne
jne
dec
mov
ss
ljmp
lret
inc
push
cmp
mov
movsb
fldl2t
fsubl
sub
lahf
mov
rolb
push
in
scas
mov
stos
dec
jg
mov
stos
je
mov
in
lahf
jecxz
dec
xchg
sub
popf
je
cmp
hlt
mov
insb
pop
inc
fmull
xchg
ficoms
jmp
stos
mov
rol
mov
iret
xor
lods
pshufw
xor
or
jl
pop
loopne
daa
add
add
xorb
call
jecxz
xchg
lret
add
sub
cwtl
mov
inc
es
push
in
inc
mov
daa
inc
out
test
push
xchg
jmp
push
pmaddwd
push
jo
xor
xlat
lods
aaa
ret
pop
push
xchg
test
cmp
lahf
xor
cmp
shrb
cltd
jae
in
shll
loop
sub
sub
call
lret
inc
fisubrl
shlb
add
xchg
call
es
aad
jb
stc
jno
test
xchg
xchg
pop
cmp
or
test
fadds
cmpsb
pop
ja
fwait
dec
lahf
lea
push
jle
inc
out
jle
cmpsb
cmp
push
repz
mov
repnz
andl
in
movsb
mov
enter
mov
js
les
lods
mov
das
test
xchg
sbb
icebp
dec
int
mov
movmskps
shll
repz
xor
jle
fsin
jns,pn
ja
fwait
test
add
rcr
pop
cmp
loopne
imul
or
ja
repz
je
xor
adc
out
int3
xchg
lret
dec
dec
fnstenv
dec
idiv
inc
cmp
cmp
jp
sub
lret
stos
fisttpll
lahf
jo
mov
cltd
push
cltd
and
xchg
pop
push
data16
cmp
xchg
inc
xchg
test
aam
cmp
xchg
arpl
cmp
lods
mov
lock
inc
dec
jmp
mov
fcom
and
push
lea
cmp
fmull
pop
mov
xchg
jle
xor
push
lock
dec
leave
testb
mov
in
data16
jnp
scas
push
inc
push
out
add
dec
jns
data16
sub
sti
icebp
test
fcoms
test
cmp
stc
inc
jne
xchg
popa
cmp
scas
jbe
int3
je
test
imul
adc
pop
faddl
shrb
and
stc
hlt
dec
xlat
gs
sbbb
jno
inc
fdivl
movsl
xlat
shrb
scas
in
dec
xlat
lods
lock
jae
xchg
cmpsl
sbb
cmpsb
push
xchg
add
test
or
and
xchg
test
mov
lret
mov
mov
sbb
bound
hlt
mov
addl
cmp
insl
or
mov
or
test
mov
scas
mov
push
loop
rcl
dec
inc
std
cmp
mov
movsl
fidivl
add
fidivl
jb
int3
ror
clc
inc
jne
xchg
outsb
cltd
xchg
lret
rcrl
pop
test
or
cs
mov
or
pop
push
js
xor
cld
lock
vpmullw
pop
push
jne
mov
paddw
fcmovb
cmpsb
add
mov
testl
pop
lret
test
mov
jne
nop
push
mov
ja
xchg
gs
sub
sub
jg
xchg
fsts
mov
push
or
adc
int
aaa
stos
xchg
stos
push
xor
or
jae
das
cli
and
gs
data16
jg
pop
dec
jl
mov
pop
pop
or
and
mov
push
add
xor
cmp
xor
dec
inc
push
pop
out
sbb
dec
aad
lret
mov
add
pop
mov
in
cmp
sub
subl
xor
fldl
and
add
inc
inc
sub
xchg
mov
insb
fidivl
adc
insb
jle
pop
mov
daa
or
daa
loopne
lods
push
or
mov
xchg
and
dec
in
jmp
rorl
mov
idiv
gs
xor
jnp
leave
inc
lcall
xchg
inc
push
dec
fsubrl
sub
adc
out
stc
fsubrs
and
int
test
fidivs
mov
test
mov
mov
jg
std
push
push
jb
stos
sub
adc
pop
jecxz
pop
imul
mov
mov
pop
aad
or
mov
test
and
pop
mov
mov
data16
cld
xchg
dec
mov
push
or
fs
mov
sbb
enter
or
pop
inc
lret
cmp
es
mov
ret
fisubrl
mov
in
jae
lods
int
loopw
outsl
ss
test
cmp
inc
add
pop
and
int
push
mov
push
mov
jne
pop
addr16
mov
js
mov
bound
insb
test
ret
push
mov
add
das
push
jmp
icebp
jg
xor
adc
jbe
orl
clc
mov
push
xchg
mov
adc
xor
push
lock
push
jne
repz
and
pop
cltd
lcall
mov
push
mov
insl
arpl
mov
inc
sbb
movsb
inc
out
test
sbb
mov
sub
pop
and
test
mov
es
jl
es
cltd
push
xchg
push
clc
mov
mov
cmp
adc
popa
fildl
mov
mov
cwtl
xchg
pop
cmpsb
or
in
ret
xor
popf
xor
pop
mov
mov
push
movsb
push
aad
mov
mov
push
sub
ficomps
ret
sub
mov
xchg
pop
cmp
dec
fs
xchg
mov
lahf
add
dec
rol
dec
out
push
jecxz
lret
dec
aaa
hlt
inc
cmp
ljmp
lock
add
daa
shll
xor
pusha
fcmovnbe
fdivl
pop
sbbb
aad
stc
inc
add
dec
pop
pop
rorb
push
jae
cmpsb
dec
dec
mov
mov
adc
mov
test
mov
outsb
lock
jbe
sbb
pop
lods
cwtl
lods
cmp
push
in
sbb
mull
xchg
fldt
jbe
xchg
or
pop
adc
mov
mov
mov
pop
sub
sbb
movsb
mov
imul
or
or
pop
push
jmp
lcall
adc
sbb
dec
jl
js
pop
lahf
add
inc
fldenv
add
mov
leave
jbe
jl
push
adc
pop
ja
push
push
loop
inc
aam
shl
test
dec
repz
push
and
leave
push
dec
arpl
cli
add
mov
jns
dec
mov
inc
pop
dec
pop
sti
fwait
ds
ja
inc
adc
mov
dec
jbe
out
enter
or
je
push
fsubrs
js
call
push
sub
test
repz
cmp
jne
push
cmpsb
mov
jno
stc
xlat
push
pop
jno
mov
insb
scas
push
mov
mov
sti
outsb
or
adc
fimull
dec
dec
and
mov
pop
push
out
dec
push
xchg
add
inc
mov
push
mov
fsts
jge
imul
js
scas
imul
scas
add
cmpsl
rorl
sbb
mov
sub
cmpsb
push
into
sbb
imul
fdivs
mov
les
flds
hlt
mov
fnstenv
aad
and
pop
xchg
xor
mov
je
mov
xlat
imul
int
andl
inc
in
jbe
das
mov
inc
roll
jbe
push
fwait
pop
in
ss
lods
addr16
inc
mov
fs
jmp
loop
fidivl
xchg
cmpsl
push
or
jmp
ds
mov
xor
mov
mov
lret
leave
in
jbe
push
sub
pop
icebp
idivb
or
pop
jns
adc
or
into
mov
mov
shrb
jp
pushf
in
dec
mov
jmp
jp
je
jo
addr16
outsl
inc
add
shrb
hlt
repnz
mov
mov
mov
or
sub
mov
in
lea
mov
mov
jnp
insb
fmuls
pop
mov
pop
test
mov
icebp
fldl
addr16
dec
mov
xor
lcall
adc
mov
cmp
insl
pop
jg
pop
xor
inc
xlat
and
and
mov
xor
and
cli
pushf
jmp
lret
sbb
fsubr
out
stos
rcl
cmpsl
mov
mov
dec
outsb
sub
mov
mov
jae
mov
mov
sbb
cmp
cmpb
divb
or
xor
into
fsubrl
push
fnstsw
inc
sub
pop
arpl
xchg
add
lods
or
cmp
ret
js
imul
movsb
ds
sub
push
jg
hlt
and
mov
jl
cmpxchg
inc
sti
xor
cs
or
dec
and
push
mov
repz
std
jo
xchg
xchg
mov
movsl
arpl
aam
dec
aad
loope
jo
add
sbb
inc
lahf
mov
aam
sub
xor
mov
push
lods
sub
mov
stc
push
ljmp
jno
mov
fiaddl
dec
cmp
push
pop
fmull
adc
dec
imul
sbbb
xchg
leave
mov
xchg
subl
pusha
ret
jno
imul
lock
sbb
adc
sub
pop
push
ret
or
jmp
push
in
imul
sbb
xchg
dec
arpl
sti
das
push
rcrl
lds
lea
cmp
cmp
dec
mov
movsb
xor
shlb
iret
loopne
jbe
rcrl
ret
jmp
pop
aam
lahf
and
mov
into
pop
stos
lret
lret
jbe
or
lods
or
adc
lods
fcmovne
cmp
push
fcomi
cmp
mov
jne
push
mov
cltd
aaa
sub
and
call
adc
adc
cmpsb
enter
outsb
cld
pop
bnd
push
mov
sbb
dec
out
inc
push
and
daa
dec
mov
add
in
lods
push
jns
jp
insb
adc
sub
or
jbe
lods
mov
adcl
out
mov
jns
insb
es
pop
cmpsb
pop
iret
xor
in
insb
add
jnp
pop
stos
inc
inc
jb
stc
dec
fiadds
vrsqrtss
neg
jmp
inc
fstpl
pop
hlt
decb
mov
mov
jg
gs
sarl
lods
aam
and
mov
idivb
daa
xor
or
sti
sarl
movsb
mov
adc
idivb
inc
mov
daa
mov
dec
jns
into
stos
insb
push
movsl
arpl
xchg
xor
add
mov
push
cmp
int
pop
out
std
jl
cmp
add
lret
pop
adc
inc
pop
mov
mov
faddp
leave
test
or
int
cli
lahf
adcb
push
fwait
int
or
jnp
test
test
mov
jge
sbb
jno
pop
imul
and
mov
inc
daa
cmp
test
jnp
movsb
mov
inc
popa
loop
push
lret
jb
mov
mov
das
popa
xor
pop
je
mov
mov
inc
addr16
movsl
xchg
add
lea
inc
and
fisttpl
jg
sbb
mov
jo
sub
lock
pop
testl
dec
dec
xor
test
mov
sub
stc
mov
scas
pop
shrb
jp
dec
ret
mov
dec
loopne
mov
or
adc
test
jo
cltd
insb
shrl
sbb
mov
test
sub
xchg
in
push
shl
add
js
jo
mov
xchg
fsubr
rorb
cmpsl
sub
xchg
jb
stc
ljmp
jecxz
js
sbb
or
ljmp
and
fs
lahf
jae
mov
cmp
in
data16
out
add
test
cld
push
mov
fcmove
jecxz
mov
sub
stc
jle
xor
mov
roll
sbb
es
ds
add
sarb
and
outsb
dec
mov
shrl
xchg
mov
jecxz
insl
add
hlt
ret
sub
ljmp
popl
iret
aad
push
mov
inc
mov
int
xchg
sarl
cwtl
and
or
inc
movsb
xchg
jb
mov
cmp
push
fwait
out
lods
push
cmp
stc
inc
adc
mov
mulb
cmp
in
adc
out
ficompl
js
mov
in
xor
shll
out
xor
lods
xchg
repnz
or
call
mov
dec
dec
jnp
cmc
sbb
and
pusha
or
pop
mov
call
xchg
pop
cmpsb
jns
fadd
mov
push
or
pop
push
mov
imul
cwtl
mov
and
cmpsl
repz
popa
adc
sbb
ror
xchg
mov
lahf
and
enter
push
push
addr16
push
cmpsb
sub
mov
sbbb
xchg
cmp
add
in
push
out
loop
pop
push
test
loopne
mov
testl
cmpsl
rcll
pushf
cli
pop
adc
mov
mov
loopne
outsl
daa
outsb
stc
adc
into
pop
mov
push
xchg
loope
xchg
mov
or
mov
inc
and
mov
mov
loope
repnz
insl
iret
sub
push
sbb
or
fsubrs
jne
mov
jo
push
je
xchg
mov
popf
outsl
js
mov
lcall
sbb
daa
fsub
mov
insl
scas
push
aaa
mov
cmpsb
cmp
loop
pop
sbb
movsl
cmp
dec
pop
out
cld
cmp
pop
jmp
fistps
ss
insl
in
lahf
add
jmp
jge
push
add
xchg
nop
dec
xor
and
xchg
test
cmpsl
cli
lock
les
daa
inc
bound
sbb
pop
mov
aas
sarb
xor
hlt
sbb
mov
dec
dec
jne,pn
insl
shll
jns
add
xor
test
push
fsubrs
mov
lods
scas
std
xchg
loope
push
cmp
dec
cmpsb
les
sub
add
test
in
rol
pop
rcrl
clc
mov
mov
inc
fidivrs
shlb
cmpsl
xor
loop
repz
sahf
mov
xchg
and
call
and
roll
ds
jne
mov
mov
ds
loopne
icebp
pop
imul
loopne
mov
dec
push
loopne
stc
push
out
mov
jb
inc
pop
dec
mov
cmp
mov
bound
in
insl
mov
ret
pop
mov
es
sbb
jae
xchg
repnz
js
int3
popf
xchg
insl
push
es
clc
fwait
push
fs
imull
cmp
xor
pop
inc
stos
lret
daa
pop
cwtl
pop
sbb
gs
sarl
orl
arpl
fmul
js
adc
push
ffree
mov
jg
jmp
stos
or
xlat
lea
pusha
call
imul
lds
pop
leave
cmp
out
scas
dec
imul
jge
cmc
outsb
jmp
sub
mov
add
sahf
mov
pop
cmpsb
mov
mov
pop
adc
je
aaa
rorl
stos
dec
test
cld
sti
repz
mov
out
xor
sbb
pop
in
fisubrs
push
aam
test
xchg
xchg
sub
test
mov
mov
icebp
and
cmp
push
sbb
cs
inc
pop
insl
aad
adc
xor
push
les
add
data16
xor
into
mov
push
push
loopne
dec
sub
bound
bound
test
mov
fdivp
mov
pop
push
inc
pop
jg
mov
sub
xor
std
cmp
or
pop
insl
test
scas
mov
sbb
imul
out
xchg
jb
sub
aad
dec
pop
cmp
rcrl
add
pop
push
lea
das
insl
loopne
das
or
jl
dec
scas
dec
out
popa
imul
out
psubw
in
cmpl
outsb
shlb
jg
xchg
adc
imul
or
or
mov
ja
iret
in
jae
sub
push
les
cwtl
das
inc
push
sub
push
mov
dec
pop
cltd
lcall
cmc
mov
xor
lret
ret
xor
cmc
or
out
nop
push
xchg
insl
out
imull
add
sbb
scas
std
inc
xor
mov
movsl
pop
lock
movsb
pop
and
stc
sub
test
fcomp
xor
les
movsb
loope
and
mov
push
insl
sub
inc
mov
icebp
jne
sub
adc
jge
mov
aas
push
aas
dec
dec
push
int3
stos
in
mov
addr16
out
jmp
or
xor
ljmp
and
or
ja
fdivrl
mov
test
pop
adc
jg
int
out
in
mov
jmp
fstl
mov
popa
lods
cmp
out
adc
das
xchg
inc
dec
aam
into
xor
loope
push
jge
mov
sahf
mov
outsb
pushf
outsl
adc
das
shrb
cltd
sti
xchg
or
adc
mov
insw
mov
jb
scas
mov
nop
dec
xor
scas
sti
fisubrl
sub
nop
sub
inc
scas
inc
jns
mov
fistl
mov
push
pop
jno
mov
loope
enter
dec
insl
gs
leave
pop
cmp
inc
jmp
push
jmp
jno
fnstenv
in
mov
sbb
test
popa
cmp
scas
or
in
jnp
adc
push
loop
sbb
adc
mov
in
in
sbb
mov
adc
nop
daa
cltd
stos
jg
repnz
adc
clc
int3
int3
arpl
push
aaa
jns
iret
ljmp
dec
add
inc
pushf
pop
mov
mov
cmp
xlat
dec
ret
pop
repnz
outsl
mov
adc
je
gs
lds
adc
cmp
dec
movsl
and
das
cmp
inc
push
push
mov
lcall
movsl
cmp
rclb
xor
dec
arpl
dec
jbe
pop
loopne
mov
addr16
das
add
test
mov
les
lea
jle
xchg
jmp
sar
jg
push
cld
aas
subb
lcall
and
mov
push
movsl
push
popa
icebp
mov
mov
data16
jmp
sbbl
or
pop
out
es
mov
xlat
jb
popf
mov
icebp
adc
lds
ret
arpl
jbe
dec
pop
cs
pop
fsubrs
int
sti
jb
cmp
mov
mov
sbb
outsb
fistps
arpl
fdivs
mov
daa
mov
lds
push
out
psraw
xchg
cmp
ret
sub
pop
cmpsb
xchg
mov
lods
aaa
push
adc
and
jl
arpl
sub
sbb
mov
inc
jle
cmc
mov
push
ja
sbb
add
add
insb
xchg
mov
das
mov
mov
les
jmp
ret
pop
jns,pt
cmp
inc
cli
outsl
das
cmp
and
mov
mov
sbb
mov
inc
or
int
xchg
ds
sbb
cmc
or
lcall
gs
xor
loop
sbb
or
dec
lock
push
aam
inc
lahf
scas
jg
ss
push
xchg
add
aas
push
mov
sub
or
sarb
cmp
adc
xchg
stos
sub
jo
or
mov
shr
inc
push
out
mov
fidivrs
stc
or
jg
frstor
out
push
and
daa
cs
push
clc
xchg
mov
mov
xchg
adc
pop
data16
mov
std
sahf
es
mov
inc
and
push
pop
sub
xor
lcall
adc
push
push
pop
add
mov
dec
or
test
push
fadd
ss
movsb
xchg
fidivl
leave
lds
outsb
xchg
sarl
jmp
ljmp
lods
mov
sahf
movsb
jecxz
or
imul
lahf
enter
aas
fsubp
pop
sub
sbb
test
lcall
cmp
les
mov
pop
es
mov
and
jle
mov
shl
je
insl
xchg
mov
loop
shrl
xlat
mov
loopne
cmc
mov
ret
repz
xor
stc
fmuls
cmpsb
mov
sub
xchg
scas
jno
loop
rcrb
jae
xchg
jbe
aad
xchg
xorl
mov
inc
sub
rclb
add
ljmp
mov
dec
mov
aam
insl
pop
fadd
jecxz
clc
in
loopne
adc
movsb
int3
fs
ds
mov
add
mov
cmpsl
mov
ret
flds
enter
mov
je
cmp
push
push
pop
sub
iret
imul
push
xchg
or
add
cmp
dec
push
lea
sarl
sub
sub
dec
or
inc
xchg
mov
xlat
lods
xorl
nop
pop
and
adc
cltd
clc
mov
outsl
or
mov
ljmp
inc
aas
push
mov
es
pop
daa
and
pop
imul
push
mov
sahf
add
mov
enter
dec
cmp
sbb
iret
repz
cmp
fldcw
insl
lods
testl
and
pop
xor
icebp
xchg
xchg
addr16
sbb
js
sub
lea
ss
pop
add
lcall
adc
xor
xchg
popf
sar
and
in
xchg
add
loop
jg
push
orb
mov
scas
test
xchg
fbstp
clc
and
sahf
sub
sti
icebp
pushf
mov
cltd
ss
ljmp
lods
xorl
or
in
xor
jb
and
out
lock
fwait
aas
je
in
cmp
push
cmp
loopne
lds
rorb
jge
mov
clc
jmp
stos
and
les
mov
sub
mov
out
scas
rorb
pop
jg
sti
pop
je
dec
pop
mov
sub
push
lods
or
push
xor
std
and
loope
add
mov
cmp
dec
jne
bound
out
dec
pusha
adc
in
pop
popa
fidivrl
out
dec
loope
jae
scas
mov
ds
push
or
clc
out
repz
xorb
jno
fs
popa
adc
pop
jmp
into
mov
cltd
inc
clc
ss
mov
push
inc
sub
jno
dec
ret
sbb
mov
test
push
xor
xchg
ss
imulb
sub
mov
mov
notl
testb
or
jmp
sub
stos
cmc
dec
outsb
sbb
push
ficoml
movsb
mov
jmp
inc
mov
dec
cmp
pop
lock
mov
lret
sbb
mov
push
and
sub
cmp
das
lret
dec
arpl
mov
xor
rolb
jp
lds
mov
jno
iret
data16
scas
xor
mov
push
xchg
xor
shrl
sub
inc
jb
mov
jle
lret
flds
pusha
lea
xor
movsl
mov
fstpl
loope
jbe
cmpsb
push
push
cmp
and
cmpps
icebp
call
dec
lea
sub
stos
repz
popf
xor
scas
mov
sub
jp
mov
test
jbe
jl
and
subb
rcrl
movsb
adc
inc
test
mov
repz
add
add
adc
jle
add
cltd
mov
sbb
cld
addr16
add
mov
test
push
adc
mov
repz
jne
fsubl
sbb
jle
movsl
xchg
in
pop
mov
jecxz
in
lock
xor
xchg
ret
mov
pop
ret
push
icebp
dec
in
icebp
ja
mov
add
popa
jns
sub
scas
sbb
xor
add
cmpsl
iret
int3
sub
bound
add
xlat
and
pusha
sub
xor
dec
push
addl
ljmp
gs
jb
lret
add
idivl
ret
jmp
pop
xor
push
sub
cmpsl
and
xchg
cwtl
dec
arpl
cmp
dec
loope
cmc
jns
lcallw
xor
aas
mov
jmp
pop
inc
test
xchg
outsb
and
xor
xchg
sbb
ja
imul
jecxz
in
stos
jmp
pop
xor
sbb
pop
lods
inc
nop
lahf
ss
push
push
mov
shll
cld
adc
outsb
cmpsb
arpl
push
and
aam
mov
push
stc
inc
ljmp
jno
incb
bound
pop
stos
mov
inc
and
push
adc
sbb
clc
shrb
mov
mov
repz
aam
jge
sbb
mov
leave
adc
cmp
push
repnz
mov
mov
add
test
or
mov
mov
mov
cmpsl
int3
add
xor
mov
pop
pop
pop
addr16
scas
lret
lods
adc
pop
or
out
popa
inc
mov
outsl
ret
sbbl
aad
cmp
outsl
clc
mov
aaa
pushf
cmpsb
adc
cltd
std
sub
negl
cli
inc
test
in
pushf
lcall
popa
test
clc
adc
sahf
dec
call
jb
sbb
inc
and
xchg
jge
scas
scas
mov
cli
cmp
fsubs
sbbl
call
and
or
cmp
dec
mov
mov
mov
popa
and
pop
nop
stos
sub
adcb
pop
cmc
repz
jne
cmc
sub
shll
shl
test
inc
flds
cmpsb
pusha
jl
jnp
pop
xor
inc
cmpsl
sub
js
lret
push
pushf
sti
adc
xchg
inc
mov
imul
aad
adc
es
inc
xlat
or
mov
ret
aas
push
add
popf
jo
outsb
out
pop
jo
jge
pushf
inc
fmul
mov
jp
jo
mov
and
xchg
bound
out
popf
and
adc
addr16
fiaddl
mov
push
dec
scas
xorb
pop
mov
call
fwait
mov
xchg
sarl
and
in
rol
roll
decl
gs
or
aam
lock
lret
push
sbb
mov
push
cmp
in
clc
adc
aad
sub
add
call
push
repnz
ret
jecxz
scas
push
dec
leave
fdiv
aaa
ss
ljmp
into
jp
jo
das
sub
roll
mov
popa
mov
sbb
cmpsl
ds
fnstenv
adc
add
inc
mov
stos
es
xchg
inc
adc
inc
pop
daa
popa
enter
pop
mov
push
loope
mov
and
daa
pop
lods
add
ret
daa
std
jo
add
mov
rcrl
loope
xor
xchg
mov
ficomps
or
mov
call
jg
sbb
cmc
adc
insl
fmul
jno
jb
push
mov
dec
dec
xchg
xor
push
or
mov
sti
jae
test
pop
repnz
loope
lods
lret
cld
leave
pop
cmc
popf
icebp
jg
arpl
jl
push
or
fmull
fwait
xor
sti
aam
mov
jmp
xor
aad
xor
or
cmp
out
bound
lods
pop
adc
data16
out
repz
loopne
divl
xor
fdivp
adc
lret
inc
mov
xlat
pop
repnz
and
pop
jbe
repz
fldcw
les
in
pop
in
daa
jmp
rcrl
repnz
or
add
cwtl
sbb
lods
and
out
int3
push
fldl
cmpsb
enter
sbb
cs
aaa
inc
leave
push
or
cmp
jle
aad
sub
push
sbbl
dec
dec
arpl
jo
mov
add
shll
pop
inc
push
push
inc
mov
add
test
cmpsl
lea
loop
mov
stc
pop
dec
mov
insl
push
ss
das
in
dec
out
jbe
pop
cltd
and
add
hlt
mov
ljmp
and
loope
and
mov
aas
push
test
jge
nop
fsubrs
xchg
fildl
arpl
fsubs
jp
pop
rol
mov
push
jle
mov
addr16
imul
mov
push
jecxz
pop
inc
fidivl
or
jns
int
xor
jno
fs
xchg
movb
insl
fs
push
imul
rcrb
inc
ljmp
inc
shrb
mov
pushf
and
rcrb
pop
mov
mov
cmp
cmp
ret
xchg
push
sub
xchg
sub
fcmovnbe
mov
pop
pop
mov
xchg
sbbb
sbb
mov
loopne
push
xor
movsb
jmp
test
xchg
inc
fcmovnb
negb
mov
popa
lret
rcll
loope
sub
outsl
scas
xchg
sub
add
mov
lea
push
cmp
addr16
aaa
cmp
out
or
dec
jle
repnz
dec
adc
aaa
and
inc
mov
jae
std
nop
mov
shll
outsb
pushf
cli
ret
pcmpeqd
mov
lea
addr16
add
adc
in
lahf
rorb
inc
and
lret
jge
bound
and
iret
loope
subb
xchg
cmc
cmpsb
jns
lods
out
xor
popf
or
daa
and
push
leave
mov
sub
push
push
fiaddl
or
gs
sbb
mov
push
cs
cmc
mov
lcall
iret
sbb
jne
jo
and
pop
adc
and
lods
xchg
out
jge
adc
dec
add
idivl
push
ljmp
scas
jns
test
fldenv
push
icebp
fiadds
popf
push
jae
sbb
lret
pop
arpl
in
outsb
ret
dec
add
mov
ss
inc
mov
pushf
mov
pop
jecxz
mov
mov
and
lret
fucomi
mov
test
sbb
lock
outsl
popa
cli
dec
pop
adc
clc
sbb
test
adc
repz
lock
ljmp
adc
popf
adc
int3
out
cmpsb
in
dec
pop
imul
lea
jae
jge
adc
mov
repz
mov
and
sub
test
jecxz
mov
push
andl
pusha
loop
mov
add
xchg
dec
fists
sub
call
popf
mov
je
mov
push
mov
dec
jp
cmp
inc
push
je
inc
xlat
fldt
push
fisttpl
inc
cmpsb
xlat
mov
mov
add
push
push
add
enter
push
clc
adc
mov
or
inc
push
jg
sub
lret
xchg
push
cmp
xor
mov
loop
adc
jae
hlt
jns
mov
lret
lock
sub
dec
cmp
pop
push
ljmp
mov
test
sti
andb
in
inc
or
enter
popf
push
movsl
mov
aaa
into
aas
outsl
test
aad
je
imul
clc
xchg
sub
mov
xchg
jns
lds
pushf
sub
xchg
xor
scas
push
out
push
sub
ss
add
int
adc
mov
or
into
aas
mov
or
fisubl
mov
add
aam
xchg
jge
cmp
clc
cld
sbb
push
jle,pn
movsb
les
sbbl
mov
rol
insb
or
shlb
dec
pop
mov
sub
xor
aad
enter
dec
cmp
sub
int3
loopne
xchg
scas
addr16
icebp
jnp
sbb
lock
mov
dec
out
ja
sbb
shl
out
and
sarb
sbb
outsl
in
mov
jno
stos
mov
push
cmp
repz
adc
shrb
stos
xlat
jp
lea
sti
fs
xor
loopne
sbb
push
addl
imul
ja
test
xor
and
cltd
test
mov
das
push
jno
cmc
sub
push
mov
ja
mov
ljmp
lea
jle
dec
rcl
pop
enter
ret
push
aaa
adc
add
xor
daa
or
fldl
icebp
iret
mov
fildl
or
scas
add
and
push
pop
adc
js
add
int3
movsb
mov
xor
xchg
inc
stos
cmpl
sub
mov
xor
jo
jbe
add
js
pop
testl
movsb
aam
clc
mov
and
in
sahf
mov
shrl
push
pop
cmp
ret
out
inc
dec
bound
loop
sub
out
out
sbb
adc
mov
mov
arpl
imul
or
adc
dec
mov
js
xchg
mov
jae
pop
test
mov
ret
jecxz
mov
test
lret
or
jl
push
sub
loopne
sarb
pop
pop
fwait
lock
adc
push
mov
out
ret
subl
and
aaa
std
push
je
xor
shlb
jb
mov
xor
je
xchg
xor
imul
frstor
fcmovne
std
pop
jbe
fldenv
jbe
sarl
add
sahf
cmpsl
in
ss
push
lret
pop
ds
push
and
inc
adc
out
cmp
cmpsb
les
call
mov
shlb
das
add
jnp
shlb
cwtl
in
jns
push
mov
xchg
xor
jecxz
test
loop
sbb
lock
adc
cltd
lret
movsl
cmpsl
sti
inc
sub
aad
sub
aad
sahf
pushf
scas
jmp
sub
cltd
orb
fwait
jae
inc
mov
pusha
inc
lret
add
clc
add
rcrl
stos
push
adc
and
xchg
jo
adc
mov
mov
pop
pop
insl
cld
push
js
stos
lds
xchg
jge
cmp
push
cwtl
insl
sbb
mov
mov
adc
fs
mov
xor
and
rorb
xchg
cltd
push
leave
push
inc
sbb
jle
jecxz
adc
mov
xchg
das
xor
fnstsw
fsubl
cmc
or
fimuls
ret
shlb
mov
mov
push
das
rorb
xchg
cmpl
lret
sbb
rclb
andl
jno
dec
mov
imul
ja
mov
into
fs
andb
sbb
cli
push
insl
test
pop
adc
xchg
pop
sbb
add
mov
scas
adcl
dec
jb
out
leave
iret
jecxz
outsb
stos
mov
loopne
sbb
inc
xor
jp
out
or
ficoms
xor
pusha
int3
add
dec
or
iret
and
mov
data16
cltd
clc
mov
jo
jbe
push
jbe
sub
mov
sbb
pusha
in
cwtl
lahf
xchg
push
push
jnp
pop
das
xchg
pop
mov
adc
push
int3
add
mov
inc
and
inc
jb
and
int
and
mov
fistpll
push
pcmpgtb
jmp
inc
lds
pop
jnp
popa
mov
add
or
mov
inc
mov
add
test
xchg
jge
mov
fstpt
gs
cmp
xor
jge
in
clc
jmp
vcvtdq2ps
cmc
xor
add
sub
sub
addr16
xchg
cs
push
insl
xchg
pop
mov
inc
cmp
jge
into
xchg
iret
add
cmp
insb
and
lds
inc
hlt
lret
test
sbb
jb
pushf
cli
add
adc
sbb
add
push
icebp
lcall
icebp
xchg
lods
movsb
repz
or
jb
stc
scas
jns
push
inc
test
jnp
mov
push
pop
mov
fstpt
sbb
push
sbb
xchg
dec
cli
xchg
leave
test
xlat
aad
pop
sbb
xchg
pop
cld
cs
cltd
or
mov
cmp
popf
cmp
shl
daa
lahf
cmp
xchg
and
in
mov
push
xor
xchg
pop
scas
xorl
jns
addl
mov
les
mov
jb
adc
xlat
dec
adc
pop
inc
insl
mov
imul
adcb
cli
pop
pop
sahf
nop
jmp
adc
in
in
aad
mov
loop
shlb
push
outsb
dec
sub
push
sub
movsb
jbe
mov
mov
rcl
loopne
pop
and
inc
adc
xchg
cwtl
insl
push
sahf
push
popf
nop
repnz
lods
jg
inc
out
dec
mov
pusha
inc
lea
xchg
and
ret
ja
xor
pop
pop
filds
dec
or
sub
test
push
and
xchg
mov
mov
ja
jo
cmp
test
frstor
cmp
rclb
sbb
dec
out
sti
std
in
sub
jg
dec
dec
xchg
pop
mov
out
test
icebp
in
push
pop
mov
mov
mov
fdivrl
cmpsb
stos
addr16
fildl
rolb
jne
add
dec
mov
xorb
inc
daa
sub
mov
into
gs
xchg
xlat
lcall
xchg
fs
sbb
shl
inc
mov
xchg
xor
mov
orl
sub
sbb
jecxz
movsb
cltd
loope
jnp
popf
lods
aaa
sbb
cltd
xchg
inc
fcmovb
out
lods
shrb
out
nop
and
nop
cmp
int
inc
adc
mov
adc
cmc
dec
mov
mov
ret
insl
ljmp
sbb
jns
sbb
sub
and
mov
cmp
add
xchg
cmp
cmp
repz
stos
cmp
jo
fdivrs
cltd
ja
ficompl
push
push
xor
pop
mov
push
negb
leave
outsl
and
sahf
push
mov
addr16
pop
aad
unpcklps
mov
sbb
shll
std
pop
adc
les
mov
lds
lret
adc
inc
jl
cmp
mov
out
mull
lock
test
out
mov
imul
mov
lods
and
cmp
test
dec
daa
mov
xchg
in
and
dec
loope
jbe
xchg
push
movsl
cmp
add
pop
sub
push
in
lahf
xor
mov
sbb
mov
inc
dec
stc
fbld
int
cmp
into
rcr
fists
imul
mov
fs
loop
mov
and
mov
mov
iret
xor
stos
movsl
xor
xchg
test
popf
or
dec
lahf
cwtl
push
jne
or
dec
and
sahf
in
mov
sbb
sar
aas
jnp
mov
push
push
test
pop
xor
push
dec
mull
mov
std
pushf
fidivs
rclb
and
dec
stos
jns
shrl
pop
jno
in
enter
int3
inc
je
repz
mov
lret
dec
mov
mov
sbb
shl
insb
xchg
or
inc
test
scas
add
push
cltd
hlt
sub
push
scas
jp
cmc
pop
ret
mov
jecxz
jle
lods
mov
fwait
inc
sbbl
popa
and
sbb
sbb
mov
add
sbbl
dec
push
es
xchg
xchg
call
je
les
aam
xlat
imul
sub
js
mov
inc
xor
adc
lds
mov
xchg
push
lret
int3
je
orb
push
pop
pop
xchg
push
pop
push
into
clc
jp
scas
out
adc
jbe
movl
add
xor
sti
mov
aam
sub
pop
sub
fldt
inc
xlat
mov
mov
jmp
dec
filds
mov
aad
inc
popa
imul
movsb
sub
lods
or
jne
popf
xor
mov
mov
jmp
push
mov
stc
pop
fdiv
xchg
insl
jmp
add
and
fnstcw
popf
jg
pop
xchg
mov
push
push
stos
adc
lock
test
adc
ret
or
or
bound
inc
and
mov
mov
cld
ret
call
inc
add
andl
insb
pop
pop
icebp
hlt
mov
mov
mov
data16
insb
push
out
call
arpl
and
push
push
repz
fidivl
xchg
sub
add
xlat
out
xchg
xchg
pop
cmp
jl
mov
and
aam
cmpb
test
mov
leave
fbstp
pop
fidivs
dec
mov
or
jo
jle
push
dec
loopne
cmp
push
icebp
jecxz
push
fwait
mov
int
add
adc
xor
pop
repz
mov
push
mov
jbe
push
push
xor
or
dec
sti
lcall
stos
movsb
sbb
ds
repz
stos
mov
sbb
jg
adc
outsl
push
push
push
xor
push
mov
es
jae
fs
or
xchg
pop
ljmpw
rclb
or
int3
add
out
jg
push
scas
sarl
pop
mov
fsubrs
clc
into
lock
dec
and
push
insl
adc
popa
divl
or
inc
or
or
mov
jae
mov
jg
rcrl
pop
adc
xchg
fstl
jnp
sbb
jle
xor
mov
fistps
add
pop
push
dec
sub
rcrb
dec
adc
and
jne
lahf
xchg
test
in
in
leave
push
icebp
push
fmuls
and
dec
pop
adc
pushf
pop
inc
dec
stos
fwait
or
mov
repnz
nop
adcl
imul
mov
mov
jge
dec
and
push
lret
inc
lret
daa
dec
jbe
fistl
mov
bound
and
mov
add
inc
pop
inc
adc
pop
pop
popf
dec
in
sbb
lret
xor
fcmovu
adc
adc
xchg
cwtl
adc
in
inc
mov
lret
xchg
xchg
add
cmp
and
mov
fcmovbe
enter
pop
lock
cmpsl
push
jns
fisubs
inc
fdiv
hlt
fisubrl
loope
lret
jp
and
mov
push
mov
dec
cmp
pop
decb
pop
in
rclb
stos
mov
add
fwait
loop
cld
aam
or
je
lahf
cmc
push
lea
cmp
ds
in
cmp
add
push
push
and
lock
lods
sub
dec
int3
xchg
adc
fisttpll
or
push
jmp
lods
shrb
mov
and
mov
in
add
push
enter
fsubs
sub
cmp
add
sbb
mov
cmp
inc
pop
les
mov
jns
mov
add
mov
mov
xchg
stos
loopne
add
rorl
push
xor
repz
adc
dec
loopne
insl
jns
fdivrl
jle
pop
repz
adc
push
mov
aad
jne
sub
int
mov
lahf
mov
push
xchg
jle
fdivrs
leave
bound
mov
cmp
jno
sbb
cltd
pop
addr16
addr16
mull
pop
add
jae
or
mov
mov
cld
dec
push
jg
cltd
std
jge
inc
cltd
loop
outsl
jge
mov
insl
inc
sub
mov
scas
cmpsb
pop
mov
pop
gs
bound
loop
jmp
jo
push
addr16
dec
sti
pusha
adc
lods
push
adc
jns
cmp
push
cs
test
push
sub
out
outsl
jnp
aas
push
in
movl
inc
dec
add
mov
and
test
lock
inc
mov
loopne
mov
mov
mov
or
cmp
ljmp
outsl
sbb
cmpsb
in
and
sub
inc
repnz
leave
cmp
repnz
cmp
test
insb
loop
ret
inc
je
add
sbb
mov
mov
repnz
aas
aad
mov
in
pop
cmp
xchg
sbbl
pop
adc
cwtl
xor
pushf
cli
jmp
dec
jbe
mov
xor
mov
fimuls
int
int
fisttpll
and
cmpsb
ret
iret
fnstcw
adc
push
lret
test
dec
or
mov
roll
gs
mov
lods
movsl
jl
inc
fists
out
xchg
mov
repnz
sub
push
push
repnz
sub
mov
inc
jno
into
jae
push
test
and
loopne
jg
mov
fisttpl
pop
push
jbe
into
iret
xor
or
push
mov
scas
ljmp
int
pop
cli
xchg
inc
cmpsl
and
loopne
jo
iret
dec
mov
mov
xor
ds
adc
int3
arpl
ljmp
leave
enter
jmp
lcall
movsb
adc
xlat
adc
outsl
jnp
in
addb
aaa
lret
adc
xchg
sbb
mov
xor
jle
cmpsl
cmpsb
sbb
add
ja
mov
addr16
into
xor
mov
test
fisttps
insl
lods
in
test
mov
jg
jp
sub
in
movsb
gs
fidivs
jno
arpl
or
movsb
lock
jae
add
sub
mov
rcl
in
cli
and
dec
fstpl
addl
push
jecxz
inc
push
mov
push
mov
lods
inc
leave
jp
adc
popf
dec
mov
shlb
mov
mov
pop
push
push
ljmp
jno
pop
push
jmp
mulb
cmp
sbb
sub
testb
cmpsl
insb
fwait
mov
sbbl
shll
shrl
ds
int3
dec
mov
mov
and
xchg
push
xor
push
ljmp
loope
cwtl
mov
iret
pushw
xor
mov
test
lock
fcom
adc
test
or
movsl
push
cmpsb
xlat
call
mov
repnz
add
mov
out
sub
mov
jl
cwtl
stos
add
pusha
jg
or
mov
cmp
dec
fnsave
sub
cmp
icebp
negb
stos
int3
bound
int
repnz
loop
daa
xchg
mov
and
lret
lods
add
out
push
aam
mov
in
pop
test
ss
mov
dec
clc
or
cmp
ret
shl
shlb
scas
sbb
ret
push
dec
xchg
testl
xlat
adc
xchg
mov
sbb
cmp
add
mov
fisttps
mov
shlb
dec
insb
add
xchg
mov
je
testl
int3
sbb
popf
jp
sub
push
dec
or
jge
inc
add
sbbb
into
enter
jbe
test
cmp
ss
hlt
push
imul
out
push
pop
jnp
addr16
je
frstor
mov
mov
add
inc
mov
ljmp
and
repnz
cmpl
rorb
push
or
mov
scas
and
jmp
test
pop
bound
xchg
jle
xchg
mov
dec
dec
add
cmp
xchg
mov
test
popw
lcall
clc
xor
cmp
sahf
ss
inc
bound
in
popf
cltd
mov
xchg
push
xor
mov
adc
mov
mov
mov
imul
inc
fidivrs
jnp
sub
cld
xchg
popa
cltd
xor
sti
testl
jg
in
xchg
pop
mov
std
cli
mov
xor
shll
sub
mov
in
outsb
fdivrs
jae
in
jne
test
enter
adc
fldenv
loope
xor
data16
xor
int3
sti
sahf
fsubrl
mov
add
adc
dec
jl
dec
aaa
test
dec
in
clc
sub
stc
nop
cmc
movsb
pop
lock
sub
xor
ror
xlat
pop
mov
fstps
mov
push
dec
cli
push
mov
xchg
add
jns
ljmp
lods
into
xor
jp
imul
cmp
daa
cltd
stos
or
xor
cmp
mov
sub
test
outsl
addl
jne
outsl
into
xor
cmp
cltd
lahf
sbb
std
adc
clc
mov
push
jnp
arpl
mov
push
cmpsl
fdiv
mov
jle
adc
mov
push
dec
and
adc
pop
xor
push
test
dec
cmp
leave
popa
push
aaa
add
jns
dec
mov
mov
imul
sbb
pop
sbb
in
mov
inc
ffreep
cltd
mov
sbb
stos
dec
mov
pop
inc
in
stos
jle
in
xchg
jns
pushf
fwait
mov
pop
pop
int3
stos
iret
and
aam
xchg
mov
cmp
cwtl
in
dec
loopne
cltd
sub
sbb
loope
cmp
mov
mov
dec
or
loop
cmp
cltd
insl
add
scas
sub
xlat
pop
cmc
jg
es
sub
pop
mov
push
xchg
pop
xchg
sbb
je
pop
adc
ficomps
inc
mov
leave
ja
xor
add
cmp
mov
icebp
nop
ljmp
insb
adc
mov
bound
iret
cmp
push
xor
and
ja
fistl
jne
sbb
add
jno
mov
out
mov
adc
cwtl
negb
xchg
fnstenv
test
pusha
mov
std
daa
sbb
push
lods
nop
push
fs
push
lea
or
jl
cmp
fnstcw
mov
and
adc
or
scas
bound
push
and
int
lods
push
or
jl
sbb
popa
lret
test
push
cmp
stos
xchg
add
popf
inc
adc
gs
insl
mov
inc
gs
mov
and
pushf
pop
ret
dec
dec
pop
jb
aam
mov
outsb
movsl
sub
vshufpd
sbb
push
mov
mov
adc
sbb
pushf
push
dec
gs
aam
mov
xchg
sub
loop
dec
pop
add
icebp
mov
dec
cltd
std
call
push
mov
sbb
add
push
rol
fmulp
and
ret
shrb
imul
dec
pop
sbbl
hlt
out
in
cwtl
cmp
mov
lea
iret
rcll
push
or
imul
clc
out
push
sub
mov
test
cmp
pop
push
cwtl
push
mov
sub
outsl
sub
divb
insb
out
jno
sub
cmp
inc
je
repnz
rcr
rclb
fisubrs
int
jae
add
sub
cltd
mov
cltd
test
ja
fcoms
enter
xchg
pop
lock
cmp
imul
sub
fnsave
in
pop
pop
pop
cli
xchg
pop
add
jne
fs
sub
or
mov
push
jmp
clc
ds
inc
pop
push
cmp
jnp
inc
and
cltd
xchg
mov
movsl
popf
sti
pop
push
add
mov
adc
in
adc
mov
xchg
out
add
lea
xchg
jne
scas
xchg
mov
xchg
mov
or
push
pop
push
push
cli
cmp
movsl
dec
pop
xchg
add
sbb
or
jle
push
sbb
pusha
cmpb
rcrl
xchg
shlb
cmp
sub
jecxz
cmp
mov
loopne
mov
cmpsl
sbb
pop
lods
xchg
ret
mov
xor
pop
inc
pop
mov
mov
bound
hlt
cwtl
xchg
xchg
xor
push
fwait
xchg
add
mov
lret
and
xchg
cmp
pop
or
shr
clc
inc
in
add
cltd
insb
aaa
imul
adc
iret
sub
push
lcall
xor
xor
sbb
jg
lods
jmp
mov
dec
test
push
or
and
push
adc
sub
hlt
pop
notl
and
mov
xchg
lcall
movl
imul
sahf
dec
pop
decb
nop
pop
rcll
push
pop
jmp
fisubl
mov
and
pop
push
sub
cmp
jle
rcrb
into
js
push
outsb
data16
cwtl
add
mov
pop
cmp
outsl
insl
mov
fistl
enter
cmp
inc
loop
xchg
ret
cmp
dec
inc
mov
sbb
dec
pop
mov
incl
and
test
mov
mov
cmp
bswap
and
lret
cmp
aad
jmp
out
xchg
dec
sub
dec
mov
sbb
daa
xchg
test
aam
mov
out
in
jecxz
dec
and
sub
ficompl
cld
sub
dec
pop
and
mov
ja
add
sbb
xchg
xor
sub
mov
lds
mov
mov
into
out
test
lods
or
test
jno
xor
bound
fwait
lods
dec
ljmp
sbb
push
pusha
mov
xor
in
test
fistpll
sub
repz
bound
outsb
jl
dec
sbb
xchg
push
mov
stc
fs
push
xlat
add
sbb
scas
cli
inc
push
xor
enter
inc
cmc
daa
ret
fsubrs
ret
into
mov
mov
mov
pop
or
lcall
dec
dec
xor
add
xlat
sbb
adc
sbb
jo
xchg
push
loope
aaa
inc
push
pop
gs
aaa
int
stc
popf
sbb
push
leave
pop
or
out
cmp
rcll
and
jbe
mul
test
pop
push
sub
xchg
fnstenv
or
lods
mov
jle
cmp
std
in
sbb
cli
out
aam
das
icebp
les
mov
push
sbbb
xchg
dec
sbb
shlb
pushf
in
mov
mov
push
scas
gs
stc
adc
jmp
xchg
mov
out
enter
divl
inc
sbb
pop
ret
pop
cmp
loope
vshufps
dec
les
test
cs
jle
ds
or
jmp
jae
shrb
outsb
or
sub
and
jp
lds
and
add
mov
and
pop
sub
dec
in
insl
inc
and
jmp
xorl
inc
pop
push
and
shl
mov
dec
cmp
jmp
std
dec
sub
jp
or
push
push
nop
sub
xchg
mov
pop
push
xchg
mov
xchg
out
dec
pop
cmp
movsb
imul
add
or
iret
mov
movsb
notb
mov
bound
or
int3
mov
outsb
into
and
ljmp
lcall
faddp
xchg
ljmp
insl
sbb
and
je
mov
adc
mov
xor
lods
cmp
inc
lcall
in
mov
icebp
jo
mov
mov
icebp
dec
shr
inc
loope
push
adc
jle
add
aas
push
out
xchg
xlat
sbb
aaa
ds
iret
aam
in
dec
insl
fisubrs
fwait
cmpsl
aaa
mov
stc
cwtl
mov
movsb
pop
shlb
dec
lret
enter
cmp
lret
test
pop
mov
push
cs
idivb
gs
ljmp
cmp
repnz
sbbb
xor
js
jmp
xor
decl
inc
pusha
dec
lret
and
lods
daa
subl
mov
fcoml
fdivp
dec
lret
and
iret
sub
inc
or
cmp
test
fucomi
test
add
mov
push
loop
je
cmp
icebp
sbb
loopne
bound
mov
xor
js
push
mov
les
jmp
push
fs
setbe
pushl
dec
adc
jbe
clc
into
dec
lea
mov
aas
fwait
dec
adc
jnp
pop
rcrb
or
popf
jg
aam
pop
enter
mov
and
add
lahf
pop
mov
inc
leave
fwait
inc
add
lret
leave
or
notb
push
add
sbb
in
adc
sbb
daa
adc
and
adc
cmpsb
cmp
pop
cwtl
les
or
or
shlb
mov
mov
adc
aad
mov
shrl
or
shrl
xchg
mov
cmp
call
and
out
ss
loope
imul
pushf
mov
es
mov
dec
fwait
inc
scas
std
in
and
push
test
jnp
pop
jmp
int
ja
stos
out
push
mov
mov
mov
ds
jbe
or
mov
bound
dec
and
mov
adc
sbb
fcmovbe
lds
xchg
cmpsl
push
sahf
and
or
xchg
xor
mov
movsb
insl
std
jg
adc
cld
daa
adc
xor
out
andb
add
scas
inc
dec
out
dec
fs
mov
inc
inc
xor
xor
adc
jg
mov
push
jbe
movsb
push
mov
xchg
imul
jge
mov
shr
fdivrp
inc
mov
rcrb
fidivl
jo
jmp
sub
out
ja
aad
lahf
push
fdivrs
pop
mov
pop
xchg
push
add
or
stos
push
sub
pop
aaa
xor
pop
lahf
mov
in
cmp
in
test
sub
movsl
or
xor
push
jne
mov
adc
je
mov
xchg
add
pop
mov
fs
pop
cmpsb
dec
xchg
xchg
cmp
and
out
mov
shrl
ss
and
dec
jmp
ret
and
sbb
lahf
int3
push
test
add
xchg
das
mov
mov
testl
aaa
hlt
notl
mov
or
mov
iret
xor
jae
out
sbbb
outsb
std
pop
cmp
cmp
insb
add
lods
inc
fsub
cld
xlat
mov
push
jp
pop
call
imul
mov
in
test
sbb
adc
adc
repz
out
jb
fcmovnb
adc
or
jbe
imul
popa
xor
jbe
dec
sbb
push
push
cmp
aas
jmp
stos
cmp
or
pop
mov
ds
in
pop
icebp
rolb
nop
addr16
imul
add
repnz
or
scas
movsl
xchg
shlb
jb
cs
sub
frstor
insl
cli
cli
test
out
push
mov
cmp
cmp
in
repz
jp
lcall
shrl
cmp
into
xor
sbb
sub
rcr
cmp
popf
and
loopne
scas
add
in
lea
subb
ljmp
int
insb
aas
out
or
popf
and
mov
pop
adc
mov
mov
iret
int3
mov
gs
enter
mov
cmp
pop
push
xchg
out
popa
inc
sbb
push
inc
fidivl
and
cwtl
popa
cli
and
stc
pop
xchg
dec
cs
lods
shl
mov
inc
das
mov
cmp
pop
cmpl
jae
jecxz
ss
inc
cmp
addb
lahf
xchg
sub
add
sbb
fcmovu
sbb
push
mulb
outsb
push
mov
insb
shll
pop
insl
fdivrs
or
cmp
mov
jb
stos
sub
pop
ret
sub
call
push
int3
leave
cltd
push
mov
mov
daa
cmp
js
adc
ss
pop
pushf
sarb
xchg
sub
imul
mov
or
lock
mov
das
jae
mov
ss
enter
add
sbb
movsb
fbld
call
mov
xor
push
pop
cwtl
xor
mov
rcrl
jo
aam
ljmp
xor
or
xor
mov
or
jle
loopne
icebp
push
adc
pop
ja
xor
in
lret
xchg
mov
sub
stos
xor
add
shl
or
dec
or
scas
mov
fldenv
xor
std
and
lret
bound
stos
or
xchg
push
nop
mov
jge
jl
subb
dec
pop
cmc
mov
mov
repnz
jecxz
lcall
lea
mov
sbb
pusha
ss
insb
scas
movsb
xor
bound
xchg
mov
pop
jmp
mov
lds
movsb
loop
cmp
nop
ja
mov
jle
fiaddl
xlat
cmp
jle
mov
jle
daa
xchg
ret
shl
push
std
add
push
push
cli
stc
test
inc
push
ljmp
lahf
lds
xor
movd
stc
mov
sub
adc
pop
je
imul
out
cmp
inc
push
insb
js
add
lret
xor
out
ficomps
cmp
popa
movl
sbb
mov
rcll
mov
test
lock
sbb
and
daa
sub
out
and
push
xchg
test
mov
sarl
movl
add
xchg
push
fdivl
dec
push
add
dec
fisubl
cli
sbb
popf
scas
and
jae
push
movsl
cltd
cmp
movsl
inc
insl
loopne
inc
das
inc
popa
loop
lods
adc
xor
xchg
and
cli
insl
xor
or
lock
icebp
mov
mov
dec
insl
and
test
or
imul
add
pop
sahf
into
push
xchg
cli
loopne
es
jge
jno
mov
ret
jge
cmc
in
inc
fisubrs
rep
jb
lcall
insl
gs
pop
addr16
xor
cmpsb
ret
push
jge
xor
mov
ljmp
lods
mov
xor
mov
pop
pop
rorb
push
jge
inc
pop
push
mov
pop
xchg
mov
jmp
cld
cmp
dec
mov
insl
fbld
movsl
adc
ret
jmp
sub
mov
adc
cmp
adc
cmp
popf
out
lret
sbb
enter
sbb
fsubr
push
and
shll
lea
adc
ja
imul
fwait
jbe
cmpsb
and
shrb
fisubrs
mov
dec
inc
sbbl
jecxz
movl
lds
out
pushf
pop
pop
xor
aad
mov
push
iret
pusha
pop
or
cmpsl
shll
pop
inc
fsubrl
adc
and
ror
jbe
in
sbb
dec
mov
mov
shrl
push
lahf
sub
push
shr
push
or
scas
dec
xchg
inc
mov
ror
lret
jne
mov
sub
enter
and
andb
mov
dec
dec
and
push
ja
add
adc
dec
sub
repnz
or
cmp
adc
or
out
add
xchg
or
mov
inc
aas
int3
fcmove
cmp
addl
mov
hlt
mov
fistpll
cltd
jmp
clc
adc
push
and
xor
int
leave
pop
cwtl
and
xchg
jns
xor
pop
xor
sarb
lret
cmp
pop
push
dec
sub
adc
jnp
xchg
cltd
adc
jbe
into
and
and
sbb
cmpsb
fstp
mov
dec
jg
in
mov
sub
aaa
xchg
xorl
xchg
test
lcall
lds
inc
fsubl
movsl
xor
fs
in
cmpsl
ds
jae
outsb
push
dec
arpl
jae
mov
push
cwtl
dec
xor
push
rclb
cmpsb
inc
jp
xchg
outsl
lock
outsb
out
jl
je
popf
dec
push
and
or
or
out
xor
inc
inc
out
ss
mull
push
cmp
cmp
push
ficoml
in
jp
xchg
dec
popa
sub
cmp
pop
outsb
mov
inc
mov
std
xchg
data16
push
fs
or
inc
out
cmp
ret
scas
leave
adcb
mov
sbb
push
lods
scas
cmp
imul
mov
inc
sbb
mov
insl
sub
daa
dec
cmpsl
push
lock
out
push
subb
mov
xchg
mov
jae
push
fmull
inc
mov
stos
inc
inc
fmul
add
inc
adc
shll
pop
inc
cmpsb
or
adc
mov
jp
pop
dec
fwait
pop
testb
popf
inc
loopne
jp
out
mov
insl
cmp
mov
ds
mov
lods
sbb
femms
shlb
cmpsb
push
jno
jno
xor
mov
lods
cld
push
jmp
imul
xlat
xor
and
shlb
pop
xchg
int3
ljmp
das
jge
mov
in
test
iret
lahf
bound
xor
mov
fs
pop
jno
ret
dec
dec
mov
push
fstpt
mov
adc
aas
xor
and
cs
sub
push
or
lcall
in
fsubr
cs
sub
pop
mov
mov
int
out
aam
push
mov
mov
inc
fisubl
out
add
pushf
testl
mov
std
or
xor
test
cmp
sahf
shrb
stos
mov
and
mov
es
mov
xlat
loope
mov
cltd
shl
dec
sbb
out
out
aam
mov
jno
mov
xchg
out
add
lods
mov
xchg
jmp
rcrl
adc
je
in
fsubr
xor
inc
inc
shll
sub
popa
ret
js
jp
dec
or
test
mov
fcomi
lahf
fs
dec
stos
or
xorb
mov
ds
xchg
cmp
hlt
mov
fcoms
mov
sbb
ret
xor
out
mov
lahf
pop
les
add
xchg
add
push
popf
or
ret
stos
pop
sahf
push
addr16
xor
js
mov
sbb
inc
inc
ss
jb
fcomp
add
mov
push
or
push
hlt
adc
fucomi
rorb
cwtl
push
bound
fldenv
pop
fcompl
out
cmp
in
and
ds
call
xchg
popa
mov
iret
sub
je
outsb
add
push
inc
mov
xchg
xchg
test
pushf
inc
pop
scas
sahf
jl
mov
bound
sbb
mov
cmp
adc
je
arpl
push
insl
xorb
shll
xchg
xor
daa
adc
imul
lahf
mov
jecxz
jp
and
pop
bound
ret
jge
and
add
cmp
aas
xlat
inc
dec
fdivrl
pop
fdivs
repnz
push
sub
or
insl
sub
rol
dec
pop
pop
ret
je
das
cli
adc
mov
cmpsb
into
dec
out
sbb
addr16
in
push
mov
push
xor
push
xchg
mov
cmp
outsb
xchg
js
icebp
push
inc
and
mov
movsl
shrl
rorl
push
cltd
or
rcl
les
mov
xchg
scas
arpl
in
popf
cmp
mov
aaa
out
jge
cmp
jl
sahf
aam
mov
ljmp
cwtl
inc
shrb
jp
or
dec
loopne
cmp
pop
shl
ds
xchg
pop
xlat
adc
push
test
insl
mov
mov
xchg
mov
fiadds
sub
cwtl
in
sbb
js
jge
or
mov
sbb
push
push
jmp
dec
in
loop
mov
loope
sbb
inc
inc
dec
pop
test
int3
lret
and
jecxz
bound
in
divb
ljmp
lcall
cwtl
mov
xchg
dec
cwtl
inc
jae
inc
movsl
and
mov
shlb
inc
fadds
and
and
jno
mov
jb
push
mov
sbb
and
pop
push
loopne
mov
sub
loope
cmp
cmc
arpl
xchg
sub
jae
cmp
and
cmp
jb
inc
push
pop
sub
fimull
push
pop
cmp
icebp
insl
sub
cmp
jne
mov
fidivs
aam
in
mov
and
mov
les
dec
sbb
and
and
xchg
dec
out
in
and
jne
jmp
sub
lods
out
add
scas
jp
and
xlat
pop
pop
in
push
negb
jb
push
push
roll
insl
sub
int3
in
int
out
xchg
outsl
push
inc
sub
or
fcmovnbe
fists
das
pop
dec
decl
mov
insl
call
lock
and
adc
sbb
jb
xor
andl
adc
and
stos
jg
popa
jl
add
mov
pop
xor
xchg
pop
cld
push
cmp
lcall
pcmpeqb
xlat
addr16
sub
push
cmp
xor
popf
mov
xor
jg
insb
dec
popf
lods
jp
mov
xchg
xchg
add
aam
rcrb
enter
int
mov
cld
out
ljmp
out
pop
call
out
rorl
cmpsl
xchg
cmpsb
xchg
adc
stc
lret
cmpsb
inc
popf
xchg
mov
inc
fdivs
adc
jns
sbbl
mov
popa
repz
or
dec
shr
xchg
icebp
outsl
ret
mov
shrb
mov
test
lcall
and
xchg
xchg
aaa
jne
iret
movsb
xchg
mov
bound
lcall
inc
and
cmp
add
add
btc
push
jmp
jo
bound
scas
mov
inc
mov
sub
inc
dec
sbb
xor
mov
push
jmp
dec
mov
data16
cmp
mov
mov
pop
pop
divl
xor
ja
jo
fcmovb
lea
and
dec
fidivs
pop
shr
mov
hlt
dec
ljmp
mov
aam
loopne
sub
icebp
adc
dec
scas
rcll
mov
testl
cld
push
xchg
js
lcall
dec
xor
dec
icebp
fwait
mov
shll
or
data16
addr16
sub
lret
in
push
sbb
mov
jno
xor
lock
xchg
movsb
hlt
xchg
test
dec
mov
pop
mov
fcomps
or
iret
cmp
add
aas
mov
int
sub
inc
and
jae
mov
cld
stos
fimull
cmovo
xchg
jo
cvtps2pi
push
js
into
outsb
push
ja
push
pop
ja
lea
push
enter
mov
aas
mov
xchg
lods
icebp
dec
aad
andb
ss
imul
mov
jne
int3
das
inc
mov
xchg
call
data16
jno
mov
loop
test
inc
aam
cli
jb
push
inc
xor
cltd
call
adc
fimuls
out
inc
lock
mov
dec
push
movsl
negb
sub
mov
lahf
add
daa
sar
fnstenv
xor
add
mov
pop
stos
xor
and
ficoml
shlb
push
mov
and
fincstp
js
std
jmp
jmp
popa
jmp
sub
cmpsb
testb
nop
jns
addl
cmp
adc
sbb
out
sti
mov
mov
dec
cwtl
stos
cmp
out
inc
lcall
jecxz
aas
xlat
lock
insl
mov
mov
filds
pushf
fidivrl
inc
lret
pop
cmpsb
lock
iret
or
xchg
xchg
inc
or
xor
cld
xlat
leave
xor
adc
rcl
fwait
and
sbb
insl
out
orl
xchg
sub
mov
jo
push
daa
cmp
mov
adc
mov
mov
or
icebp
enter
es
cmovne
push
mov
aam
imul
sub
sarl
and
repnz
ret
xchg
sub
xor
daa
mov
mov
stos
shll
xor
xor
aas
ret
je
xor
aad
adc
dec
nop
in
inc
icebp
jecxz
cmpsb
jo
out
sarb
imul
iret
adc
or
je
mov
imulb
push
mov
adcb
sbb
call
idivl
lahf
ss
mov
scas
xor
loopne
ret
daa
push
dec
dec
push
mov
imul
mov
int
test
or
sti
es
lds
xor
sub
out
ret
cmpsb
jnp
popa
xor
xor
aam
mov
xchg
mov
sbb
mov
rcll
or
repnz
rcr
jae
ret
aam
pusha
lods
lods
xchg
sub
hlt
sub
aam
cmpsb
cmp
mov
arpl
pop
xchg
jnp
adc
mov
jbe
add
sbb
out
mov
pop
addr16
shrl
fwait
arpl
icebp
xor
sub
stos
mov
cmp
popl
int
cs
popf
cmpsb
repz
ret
jb
insl
decb
rcrb
push
sub
aas
cld
jo
dec
pop
push
jmp
imul
push
push
idivl
inc
cmp
in
dec
push
shll
fistpl
mov
push
mov
mov
cmp
sbb
rcll
lock
movsl
mov
mov
scas
lock
push
mov
ss
jns
jnp
movsl
call
rorl
jae
inc
sbb
mov
push
lret
dec
loopne
stos
mov
and
add
ja
sbb
xchg
push
mov
push
mov
xor
xchg
in
stos
lcall
xor
aaa
and
cli
jb
inc
mov
or
pop
sahf
int3
pushf
lea
or
mov
xchg
adc
fistpll
out
dec
in
pop
inc
in
mov
mov
jne
adc
xchg
mov
movsl
sarl
testb
push
pop
scas
into
jno
fmul
mov
bound
xchg
xchg
jne
icebp
push
in
stos
mov
je
rclb
inc
fisubl
xor
bound
mov
and
pushf
imul
xchg
xor
test
lcall
testb
out
out
nop
jnp
xchg
in
stos
inc
out
xlat
push
inc
mov
movsl
ror
loope
or
add
mov
xor
ds
jl
stc
adc
bound
inc
jbe
dec
not
insl
js
std
aam
mov
fcomps
out
sti
add
jge
lahf
in
cmp
jmp
aam
or
and
inc
push
outsl
mov
xor
add
lods
ficoml
dec
jb
inc
pop
push
sbb
mov
scas
pop
cmp
in
aam
jae
push
lcall
lcall
mov
pop
adc
mov
xor
inc
test
ret
xor
mov
cmp
push
xor
sahf
jg
dec
xor
cmp
and
sarb
icebp
pushf
xor
add
repnz
out
in
pop
outsl
pop
adc
dec
xchg
mov
lret
int
push
outsl
mov
mov
in
lods
aam
and
dec
mov
repnz
xchg
lds
popf
stc
pop
or
je
cwtl
mov
inc
lcall
sahf
mov
mov
dec
in
clc
mov
fists
mov
sub
jge,pn
sbb
lds
testb
out
push
lods
mov
sar
xchg
xchg
scas
mov
adc
mov
std
fbld
movsb
lock
xchg
jmp
and
add
dec
fsubr
lock
scas
xchg
mov
movsb
aam
fstl
mov
aas
pushl
mov
add
mov
divb
push
popa
pop
insb
or
and
pop
sbb
mov
push
xchg
int
mov
scas
gs
jg
sbb
ds
pop
cmp
in
mov
scas
mov
nop
loop
push
cmc
or
xor
fldt
setnp
mov
mov
mov
dec
pop
shlb
sub
mov
xor
rcrb
addr16
jns
ret
cmp
popf
or
fcoml
inc
xlat
and
and
push
aam
arpl
test
gs
cmp
enter
mov
popa
aaa
mov
lock
jo
fcomps
punpcklbw
adc
adc
inc
fdivrp
jno
push
fs
je
pop
xchg
and
sahf
pushf
xchg
sar
imul
clc
xchg
sub
fnsave
dec
stos
notl
dec
inc
push
out
xchg
xchg
out
sbb
imul
cwtl
xchg
mov
les
push
iret
add
jge
insb
scas
xchg
pop
xchg
repnz
repz
cld
add
and
cld
call
lret
ret
add
outsb
push
idivl
push
pushf
mov
mov
dec
add
jno
stos
mov
and
mov
and
sarl
jo
xchg
cmp
subb
and
in
and
jmp
test
test
fdivl
int3
das
js
outsb
inc
cltd
dec
ljmp
cmp
aad
mov
shrb
pop
in
mov
cmp
rcrb
notb
mov
imul
mov
imulb
popl
xchg
daa
hlt
ds
mov
std
je
repz
jle
pushf
stos
je
lods
xor
dec
imul
dec
lock
xor
cmp
xchg
cwtl
stos
fldcw
cmp
jnp
loope
arpl
add
scas
push
imul
in
and
or
jecxz
das
in
repnz
cmp
fld
mov
push
lss
mov
movsb
xlat
sbb
call
insl
add
cmpsl
pop
mov
jmp
jnp
xchg
push
xchg
add
test
data16
data16
sarl
push
pop
mov
cmp
decb
popf
xor
fucomp
orb
xchg
mov
scas
mov
fwait
sbb
ds
faddl
or
adc
jns
loopne
popf
fcoml
mov
ret
lret
xchg
sbb
stos
push
push
xchg
testb
rcll
add
outsb
pop
adc
jp
mov
mov
popf
xor
les
adc
jae
mov
cmp
add
decb
int
enter
rol
xor
std
push
hlt
dec
shll
test
cmovbe
push
dec
dec
idiv
mov
jne
jbe
adc
fdivrl
mov
jbe
push
pop
sub
pop
adc
adc
dec
ret
push
sub
jge
inc
push
test
lcall
mov
push
sbb
fisubrs
ds
pop
cmp
lock
inc
pop
cmp
or
pop
sub
dec
dec
jne
lods
call
xchg
fisubrl
std
cmp
add
es
pop
movsb
mov
jle
pop
sub
ret
in
dec
cmc
cltd
cmp
lret
adc
sahf
sub
mov
jne
pop
sub
xchg
push
out
and
lods
out
lret
jne
cld
or
pop
mov
mov
stos
fwait
cmp
mov
inc
sbb
test
in
and
dec
cltd
jb
adc
hlt
and
pop
shlb
lock
subb
int
aas
outsb
outsb
ds
dec
mov
nop
cmc
and
addr16
hlt
jbe
cltd
mov
cmpsl
pop
mov
jae
cmp
ret
mov
cmpsl
es
mov
out
xor
mov
repnz
lea
pop
lods
pop
dec
pop
adc
jl
xchg
sub
lea
adc
adc
sbb
jb
inc
pop
sub
inc
mov
sbb
std
mov
jecxz
jg
jecxz
push
out
jmp
sbb
jl
popf
add
sub
jp
xor
shll
imul
adc
fbstp
movsl
or
xchg
incb
cmp
add
cmp
mov
cmp
push
mul
andb
sub
push
or
scas
pop
das
adc
cli
int3
arpl
scas
ljmp
hlt
and
stos
push
cmp
push
repz
pushw
popf
sub
or
enter
leave
sbb
adc
jb
mull
mov
push
test
hlt
data16
dec
mov
mov
rcll
pop
sub
inc
pop
xlat
iret
pop
jge
cs
ss
insb
cmovne
clc
shlb
mov
das
or
and
sbb
std
lds
sbb
ds
pop
fcompl
ds
in
mov
les
mov
movd
mov
jno
cltd
or
xor
lea
repz
test
subl
cmp
xor
rorb
sub
out
shrb
or
and
cmp
and
or
into
cmp
int3
lret
mov
cmpsl
loop
jnp
dec
mov
data16
mov
les
pop
dec
and
jns
inc
sub
dec
xor
pop
das
test
or
jo
das
jo
shld
dec
ror
adc
mov
ja
and
cmp
xchg
sub
test
bnd
std
xlat
data16
lret
cli
push
and
loop
or
shrb
sbb
in
stos
bnd
cltd
push
out
sbb
lods
inc
arpl
je
jl
add
or
sub
xor
jo
xor
add
cmpsl
arpl
pop
pop
stc
popa
cmp
outsl
dec
ds
inc
push
push
lcall
inc
arpl
jbe
lods
cltd
mov
xor
inc
fimull
and
fisubs
popf
je
iret
jne
xor
loopne
jl
pushf
mov
inc
cli
mov
pop
xor
mov
mov
jo
jne
cmp
clc
xchg
inc
call
shrl
fs
jle
sahf
test
shrb
dec
ds
rcl
imul
stos
mov
repnz
mov
mov
rcrb
mov
imul
jge
cmp
nop
jmp
push
cmp
imul
rcl
add
xor
push
mov
pop
bound
push
iret
dec
pop
jno
or
enter
stos
into
push
sbb
mov
pop
es
lea
xchg
inc
pop
int3
pop
jecxz
xchg
out
negb
js
and
cli
mov
aad
cmpsb
dec
arpl
lea
scas
mov
lahf
and
xlat
ret
js
push
sub
lods
jo
adc
push
pop
outsb
mov
imul
push
call
and
lahf
ss
xchg
iret
ds
mov
dec
sbb
push
or
jnp
lods
inc
cwtl
inc
popa
xor
movsb
cmpsl
aas
dec
inc
sub
std
call
hlt
pop
shlb
aas
push
sbb
dec
popf
jg
jno
xor
jge
test
cmpsb
out
jg
mov
sub
movsl
out
pop
rorb
out
ljmp
mov
jb
add
fdivl
or
cmp
adc
ret
push
add
mov
sbb
mov
popf
sti
fucomp
jmp
mov
addr16
adc
mov
cmp
sbb
jb
or
sbb
cs
out
pop
fisubrs
insb
dec
push
pop
les
ret
sub
cmp
adc
cld
into
add
xchg
shr
iret
fs
mov
push
jmp
in
and
cwtl
push
push
mov
pusha
xchg
arpl
pop
fs
fadds
outsl
xorb
mov
dec
inc
imull
out
jge
icebp
stc
sbb
add
mov
xor
cmp
ss
dec
rcrb
repz
aaa
cmp
mov
and
adc
sub
push
or
jp
and
push
or
xor
xorl
fsubr
and
fwait
shlb
push
fs
dec
add
inc
gs
push
or
mov
test
jns
jecxz
test
movsb
mov
add
xlat
mov
fisttps
add
xor
cmpsb
xchg
mov
fistpl
or
lret
loop
test
jne
cli
and
mov
cmpsl
push
xchg
fcmovb
pop
repnz
leave
mov
repz
xchg
je
xchg
xchg
cmpsb
movsl
push
push
hlt
push
inc
testl
mov
add
ja
lahf
push
enter
inc
pop
repnz
xor
xchg
push
xchg
sub
dec
sbb
sahf
mov
mov
bound
jp
add
lods
loope
addr16
and
add
dec
decl
adc
adc
adc
inc
push
pop
adc
inc
push
imul
mov
add
cmc
movsl
xchg
bound
jge
loop
std
in
aas
adc
pop
clc
cmp
mov
pop
jg
pop
xor
dec
imul
mov
add
jmp
add
out
dec
xchg
sub
ds
or
xor
sub
mov
das
mov
mov
adc
lea
jmp
data16
adc
cmp
fdivrl
rorl
mov
mov
fs
pushf
popa
dec
sub
in
mov
mov
sbb
lea
les
add
imul
or
int
test
push
or
and
xchg
jle
dec
sbb
lds
mov
jnp
lods
xor
jae
out
inc
out
jle
imul
cli
loopne
cltd
clc
aaa
lds
inc
mov
fiaddl
data16
imul
js
js
iret
imul
ljmp
xchg
mov
push
into
add
mov
or
mov
adc
imul
dec
loope
ret
or
mov
orl
lahf
add
cmp
lods
jge
jmp
inc
int3
mov
sbb
cld
dec
mov
xchg
je
push
mov
xchg
sbb
mov
xor
in
cmc
dec
sti
xchg
mov
aam
xchg
lret
in
mov
ljmp
imul
insb
int3
add
mov
mov
inc
adc
jg
sti
xchg
cltd
fiadds
mov
push
pushf
mov
lcall
add
push
add
lret
cmpsb
stc
or
int3
lahf
push
ror
pusha
add
mov
mov
jb
stos
push
mov
cmpl
sub
push
fsts
testl
cmp
fs
pop
les
xchg
sahf
push
mov
ret
mov
ja
sbb
pop
aam
inc
cld
mov
or
imul
add
enter
ds
mov
mov
movsb
cmpsb
mov
sub
adc
cmp
inc
mov
push
or
ret
scas
sub
sbb
sarl
mov
mov
ja
and
xchg
push
addr16
aam
dec
and
jne
jb
sub
jmp
sti
push
shll
stos
jl
mov
or
mov
ret
rclb
sahf
jae
push
push
movsb
pop
sahf
mov
or
push
sub
pop
pushf
jle
in
stos
or
cmp
es
fcmovu
pop
loope
mov
sub
adc
xorb
jne
cld
push
mov
fwait
push
pop
xorl
sub
arpl
lods
pop
sbb
dec
jl
fwait
insl
inc
popf
lods
inc
mov
sbb
cmp
and
mov
sub
stos
jbe
dec
stos
jmp
imul
xor
mull
int
xchg
jge
data16
repz
das
adc
xlat
lret
outsl
mov
mov
inc
in
test
xchg
data16
jl
rclb
fbstp
mov
xor
shrd
cmp
pop
and
pop
jp
mov
test
leave
jl
je
jmp
push
fcmovnu
rol
mov
sarb
in
or
cmp
cmc
stc
sbb
fidivs
loop
lahf
mov
pop
lods
pop
fdivrs
mov
mov
pop
mov
lock
mov
cli
push
pop
jno
daa
xor
mov
pop
cli
outsl
daa
negb
ja
fidivrl
jl
cli
mov
adc
popf
xorb
adc
popf
pop
jns
mov
mov
iret
fcomps
sbbl
hlt
cmpsl
push
push
test
lahf
pusha
push
imul
rclb
sub
subl
jl
pop
scas
fucomp
stc
jle
dec
lods
pop
pushf
push
idivl
sbb
xchg
mov
jb
dec
int3
push
sbb
inc
xor
mov
pop
nop
cmp
nop
fdivp
mov
cmpsb
dec
or
xchg
jl
andb
lock
loop
adc
pop
push
or
insl
xchg
cmp
test
mov
jae
push
adc
mov
scas
daa
xor
ficomps
enter
push
add
or
xor
ficompl
aaa
pop
daa
out
cmp
pop
and
push
mov
in
outsl
daa
ret
ret
sbb
stc
sbb
inc
adc
jbe
jle
and
sbb
cmc
cwtl
out
decl
xorb
sub
jno
push
dec
cmp
aad
cwtl
add
jecxz
stc
enter
push
sbb
imulb
es
or
scas
inc
push
dec
mov
insl
ja
fs
sbb
addr16
add
mov
mov
pushf
push
mov
mov
mov
xor
push
pop
in
and
hlt
out
sub
cltd
pop
lahf
lcall
js
stos
mov
pop
imul
nop
sarl
ljmp
ss
ds
pop
rclb
std
call
loopne
push
inc
xlat
xchg
dec
enter
xor
maxps
test
lret
bound
add
clc
xchg
scas
iret
xchg
nop
sbb
add
push
jg
add
mov
adc
fcompl
cmp
push
call
aam
jmp
cltd
and
jns
imul
sbb
dec
lret
sbb
ja
aaa
cli
pushf
xchg
sub
outsl
loop
mov
sub
pop
jns
or
sub
loopne
pop
dec
rcr
test
stos
test
push
fdivrp
ficomps
mov
test
push
rdpmc
arpl
iret
sahf
push
in
jp
das
inc
xor
mov
jae
inc
pop
sbb
js
repz
pop
mov
les
icebp
out
jp
inc
das
dec
mov
pop
out
scas
inc
mov
andb
orl
mov
mov
std
ds
repnz
add
adc
pop
inc
mov
sub
mov
xor
aad
test
and
cli
in
call
mov
fldl
push
pop
dec
cmp
cmpsb
push
mov
xchg
pusha
jne
fs
sub
push
test
mov
lea
in
repnz
clc
sbb
cmp
lods
mov
mov
push
pop
movsl
xchg
loope
push
imul
cmc
fsubl
inc
and
push
sahf
jo
mov
push
mov
xchg
icebp
insb
adc
addr16
jne
lods
nop
adc
mov
xor
fistps
pop
push
test
in
repnz
jp
inc
adc
push
mov
push
imul
pushf
aaa
gs
addr16
pop
push
adcl
aaa
add
cmp
push
negl
adc
jb
mov
sub
pop
stc
popf
aam
aad
scas
dec
push
jne
iret
adc
in
mov
push
mov
inc
iret
movl
dec
cmp
jp
sbb
pop
dec
push
leave
dec
lods
mov
popf
gs
sbb
jle
and
data16
add
js
jmp
adc
popf
push
or
repnz
xchg
insl
roll
cmp
xor
std
scas
sbbl
pop
xchg
or
dec
inc
bound
pop
sbb
mov
flds
gs
ss
ret
imul
jmp
in
das
adc
adc
call
je
and
mov
push
ret
out
pop
repz
test
mov
dec
je
mov
mov
arpl
and
dec
dec
sbb
push
movsl
jecxz
add
mov
mov
in
popa
sub
test
dec
lock
pop
les
arpl
sub
lods
pop
adc
lret
stos
and
hlt
mov
repz
outsb
cltd
inc
pop
lds
pop
pop
sbb
scas
mov
mov
je
xor
les
mov
test
lock
jno
dec
add
dec
mov
sbb
cmp
pop
repnz
rclb
adc
mov
and
jbe
sbb
shlb
in
sub
loopne
outsl
filds
outsl
xchg
mov
add
cmp
movsl
ret
adc
outsb
sbb
iret
gs
xchg
scas
stc
je
nop
xchg
push
cs
mov
inc
jmp
xor
dec
lock
and
loopne
xchg
add
mov
pop
daa
adc
pop
fcmovb
sar
adc
cmpsl
push
aas
push
das
pop
mov
arpl
pop
jecxz
mov
adc
aaa
out
and
add
inc
and
push
and
mov
and
lret
std
push
das
loopne
xchg
inc
lret
cmp
pop
mov
xchg
lock
lods
mov
pop
outsb
stos
popf
popa
sbb
push
shrl
cltd
add
inc
inc
pop
cli
xchg
cmp
jmp
pop
lea
in
insl
and
jnp
pop
loop
dec
pop
cwtl
cmc
jo
dec
push
inc
and
pop
fld
and
pop
sbb
shl
add
sub
ret
jb
fwait
sbb
add
call
push
pop
mov
add
shlb
ret
xchg
sbb
inc
enter
stos
repz
jnp
pusha
lods
mov
out
mov
and
dec
add
xchg
outsb
inc
das
sub
pop
insb
adc
mov
loope
pop
xchg
add
out
movsb
insb
pop
pop
xchg
cmpsb
add
mov
xchg
sti
xor
add
sbb
sub
or
push
outsb
mov
inc
icebp
and
out
in
sahf
push
ljmp
mov
push
insl
sbb
clc
aam
sub
movsl
dec
add
mov
mov
add
lcall
xchg
push
pop
into
gs
fs
ret
outsl
add
xor
inc
clc
sbb
std
xchg
jge
or
data16
pusha
sub
outsb
test
nop
lock
and
das
jg
shl
dec
xchg
popf
out
ret
insl
add
jo
mov
imul
adc
leave
pop
mov
mov
pop
cltd
cmp
lods
out
cld
aad
mov
cmp
or
push
negb
inc
mov
rol
cmp
pop
xlat
stos
int
sbb
ret
das
inc
pop
mov
dec
jge
insl
cltd
mov
xchg
xor
leave
xlat
cli
or
mov
sarl
adc
lcall
lret
mul
xor
enter
dec
pusha
aad
popa
loope
push
cmp
jno
ljmp
inc
inc
xchg
fcoms
out
cmc
xor
int
repnz
pop
or
addb
lods
jns
gs
add
stc
aas
leave
jae
xlat
jo
cmc
ficoms
pop
mov
cmp
das
adc
adc
mov
push
jl
lock
aad
stc
fsubrl
and
adc
push
repnz
mov
test
lods
mov
lds
mov
pop
xor
sarl
add
imul
shl
xchg
ror
jl
bound
aam
pop
leave
inc
rorl
add
jno
dec
iret
iret
adc
push
sbb
arpl
sub
cmc
jnp
cmp
arpl
fdivl
lea
subl
lcall
push
lock
cld
sbbb
xor
cmpsl
or
mov
xchg
mov
test
cmp
fwait
xchg
add
ds
xchg
xlat
shl
mov
std
call
fidivs
mov
loopne
stc
dec
and
add
cmp
andl
outsl
xchg
dec
pop
nop
iret
sbb
leave
mov
repz
xor
cmp
loope
add
sub
fidivrs
cmp
ret
and
mov
sub
cmp
sub
enter
arpl
dec
in
into
xor
movsb
ss
push
push
je
lea
mov
shlb
lcall
test
imul
arpl
adcb
dec
pop
test
add
rcrl
cmpsb
cmp
in
dec
les
outsl
movsl
aad
mov
push
aam
pop
lods
inc
mov
mov
mov
dec
xlat
in
add
add
inc
std
jo
hlt
and
js
out
jmp
push
jecxz
add
insb
jae
lcall
aaa
xchg
push
cli
js
fsubrl
push
fistpll
fdivl
int
xlat
sahf
cmp
sbb
push
ret
hlt
lahf
addr16
clc
pop
cmp
cwtl
push
int
in
jae
loopne
scas
rorl
ficoms
repnz
out
cltd
xor
jnp
lock
imul
out
sub
dec
repnz
out
or
insb
shrb
and
mov
roll
push
out
icebp
cmovl
and
push
sub
xchg
ljmp
inc
fsubrs
sbb
fstps
mov
sub
lods
jmp
push
nop
pop
adc
aam
xor
test
xchg
imul
es
fnsave
inc
jb
enter
mov
nop
call
and
xlat
xchg
into
adc
imul
scas
out
sbb
pop
imul
test
lret
aad
sahf
dec
notb
cmp
loope
into
push
es
sbb
sub
mov
fstl
insl
mov
pop
lock
sub
movsb
ja
pusha
out
inc
inc
fs
fwait
xor
push
cwtl
push
das
cmp
stos
mov
test
lods
lahf
testl
xchg
mov
rclb
jle
insl
pop
cmp
lods
dec
adc
adc
and
lret
das
cltd
pusha
push
test
int
and
loope
dec
xor
mov
mov
xchg
shl
pop
lret
fldcw
jae
sub
rorl
pop
movsl
lock
fisubrs
pop
aas
mov
sub
lcall
mov
adc
cmp
mov
dec
fistpl
loop
inc
mov
notl
aas
sbb
jmp
stos
inc
sub
inc
inc
pusha
mov
jle
les
fs
xor
in
ds
data16
sbb
ss
daa
test
adc
lret
hlt
test
xor
xchg
dec
andl
das
mov
cwtl
mov
lahf
cs
pop
in
sbb
push
jmp
inc
adc
dec
jae
mov
insb
fldcw
test
sbb
pop
mov
xchg
lods
and
mov
ret
mov
jl
mov
subb
mov
lock
adc
sub
pop
ret
dec
fidivl
pop
xchg
inc
cwtl
test
cmc
lea
mov
std
jp
adc
sub
mov
imul
rcrl
lahf
mov
mov
inc
fists
push
flds
mov
daa
push
popa
sti
repnz
mov
ds
in
xor
mov
sub
cmp
dec
call
push
fildll
aaa
mov
pop
dec
dec
sbb
sbb
pop
xor
mov
add
lahf
imul
add
mov
push
cmp
lcall
popa
jl
cmp
inc
cmp
inc
pop
addr16
js
mov
and
loopne
mov
xlat
sub
xchg
rolb
insb
ja
pop
mov
xchg
shlb
mov
cmp
mov
pop
mov
movsl
jae
out
ljmp
in
int3
push
push
adc
sub
jmp
inc
pop
dec
into
pop
sbbb
sub
arpl
push
cmp
imul
mov
sub
cmp
adc
add
inc
push
sahf
mov
pop
push
ljmp
inc
fnsetpm(287
mov
add
insb
sub
mov
adc
mov
mov
repnz
popa
out
fldl
mov
outsl
lret
mov
inc
push
push
pop
push
jne
call
daa
push
and
outsl
icebp
sbb
shll
mov
jne
jp
insb
lods
cli
stc
inc
test
mov
xor
stos
sbbb
shl
movsb
dec
in
aas
dec
and
fs
iret
pop
xchg
and
into
mov
push
xchg
sub
lods
inc
lret
sahf
jo
lahf
mov
cld
inc
add
mov
jmp
out
adc
jo
xchg
lds
mov
ficoms
hlt
push
aad
xor
divl
pop
popf
cmp
jmp
xorl
hlt
int
jge
mov
aaa
push
das
lods
xchg
ss
xchg
adc
mov
xor
or
out
enter
loopne
shr
dec
inc
aas
cmp
dec
bound
rcrl
mov
clc
or
nop
mov
cld
add
lahf
jmp
daa
out
inc
popf
pop
in
adc
pop
xchg
dec
arpl
je
pop
icebp
pop
sbb
inc
jne
ljmp
or
or
test
ds
shl
push
lods
inc
push
add
fs
inc
insl
lds
mov
xor
mov
lret
stos
pop
sarb
movsl
sub
in
jl
jns
fwait
cltd
mov
inc
movsb
inc
or
xor
dec
lahf
and
jecxz
mov
call
dec
lahf
inc
out
je
lock
fwait
ret
shl
mull
jmp
imul
mov
adcb
jnp
fs
xchg
je
pushf
dec
cmp
stc
mov
xchg
cmc
rcrl
push
and
clc
sahf
movsb
jmp
or
push
in
cmpsb
sarl
enter
call
fsubl
push
in
test
movsl
repnz
pop
mov
ret
jmp
cmpsb
mov
popl
testb
pop
out
push
cmp
repnz
dec
andb
aad
mov
aad
arpl
jmp
daa
jae
cmp
jnp
sbb
push
jae
cwtl
push
loop
push
in
mov
cmp
ficoms
adc
mov
js
inc
fstpl
fdivrl
push
dec
lds
in
popf
sbb
dec
std
stos
stc
seta
xorl
sbb
xor
and
fcomps
cli
cwtl
call
jo
xor
inc
or
xor
ljmp
ja
push
cmp
in
sbbl
jg
jp
sbb
call
addr16
aas
loop
daa
outsb
or
shrl
daa
sub
pop
or
pop
xor
out
mov
std
enter
hlt
adc
mov
fyl2x
mov
jle
adc
gs
iret
inc
jbe
cs
xor
inc
dec
add
divb
jge
repz
ja
inc
int3
arpl
jns
jecxz
ljmp
cltd
andb
outsb
sub
lahf
pop
add
pusha
ret
fisubl
xor
xor
mov
mov
daa
sub
lds
xor
mov
filds
fdivl
in
sbb
cs
mov
stos
arpl
xchg
mov
cmpsb
popa
pop
and
ss
shr
xor
mov
push
mov
add
test
cmp
xchg
mov
test
in
sti
ret
jnp
lods
mov
cli
cmp
int3
hlt
es
pop
stos
aad
out
test
mov
inc
scas
gs
jo
xor
push
out
xor
into
adc
jl
fwait
or
xchg
cwtl
fwait
xor
insb
sub
and
dec
cli
daa
popf
sti
shll
dec
call
lret
lods
sbb
sub
cmp
jecxz
inc
pop
mov
and
mov
inc
xchg
ja
push
js
push
ds
xchg
dec
pop
sbb
test
fwait
adcb
in
into
and
out
loop
sub
sar
and
cwtl
mov
out
lahf
hlt
outsl
test
pop
push
push
pop
fidivrs
sbb
sub
mov
mov
cmc
or
out
clc
jg
jmp
jp
adcl
scas
sbbb
fcomp
inc
les
aas
cmp
into
xor
repz
in
inc
test
loop
adc
xor
pop
push
pop
fisubs
xor
push
aas
mov
mov
dec
cld
xchg
mov
sbb
stos
mov
shll
lret
xchg
mov
vfrczss
xor
mov
jne
cmpsb
out
mov
sub
or
fucomip
add
in
lcall
scas
push
cmpsl
inc
ret
aam
fs
xchg
jne
jne
loope
cmpsb
es
rclb
jbe
pop
cs
and
mov
int3
xchg
cmp
into
vpshufd
pushf
cli
hlt
jge
cmpsl
out
xchg
mov
lds
stos
cmp
lret
mov
mov
xchg
jecxz
push
xor
fiadds
call
jno
outsl
sbb
adc
add
add
aaa
fistps
sbb
bound
add
xor
cmpsl
push
and
or
sti
sbbl
rclb
sub
dec
dec
sub
hlt
outsb
andl
adc
xlat
mov
enter
mov
cmpsl
sbb
jl
pushf
push
je
dec
add
aas
xchg
xchg
sbb
sar
ss
out
pop
jmp
int3
pop
cmc
stos
cmc
push
jb
lret
fnstcw
out
movsl
jle
outsb
pop
mov
in
pusha
shll
mov
add
aam
adc
mov
int3
fs
jbe
mov
jmp
inc
sbb
rorb
mov
fxch
bound
jl
fs
add
mov
dec
mov
xchg
jbe
aaa
test
pop
psllq
fsub
xchg
ret
adc
push
xor
loopne
jns
mov
or
cmpsl
inc
mov
test
es
pop
inc
test
ret
jbe
or
jg
xchg
push
addr16
sbbb
repz
jbe
xchg
xor
sbb
stos
mov
imull
push
pop
xlat
loopne
adc
add
adc
inc
dec
mov
dec
mov
dec
push
fimuls
push
icebp
xor
fisubl
pop
push
jl
cmpsl
je
shlb
inc
sbb
int
add
jno
pop
dec
adc
pop
lahf
sbb
jge
enter
stos
daa
into
aam
jg
fldl
movsl
mov
movsb
fistps
sti
push
jecxz
xchg
sub
fnstenv
nop
scas
jno
cmp
je
or
fwait
mov
lods
xchg
jo
scas
jne
sub
test
arpl
adcb
mov
adc
mov
mov
test
or
dec
inc
aam
nop
into
sub
dec
outsb
rorb
mov
pushf
incl
sub
mov
jae
bnd
sbb
lret
and
pop
decl
jl
adcl
dec
and
or
cs
and
popa
dec
push
test
push
mov
xor
xchg
jne
lock
les
xor
addr16
mov
mov
xlat
push
lods
add
scas
xor
popf
adc
es
in
out
rorb
cmp
dec
pop
jo
cmp
mov
pop
xor
dec
sub
movsb
addr16
aad
jnp
inc
fimuls
gs
xor
outsb
cmpb
push
mov
pop
push
or
outsb
xchg
mov
lahf
sub
shr
insb
leave
popf
stos
cli
lea
adc
ja
lcall
shrl
loope
mov
pusha
jecxz
in
stos
mov
out
aad
push
pop
out
out
dec
mov
insl
sbb
adc
and
and
ret
cld
stos
adcl
sbb
int3
add
mov
mov
jge
dec
scas
cmpsl
add
in
out
push
in
inc
jmp
je
imul
push
cmc
sbb
xor
imul
je
repnz
fcoml
loopne
inc
lcall
sti
dec
divb
cmp
mul
notl
lods
std
pop
mov
jl
inc
push
add
xchg
mov
inc
sbb
int3
outsb
sub
rcrb
jno
scas
push
xor
insb
inc
xor
xor
fst
fiadds
lcall
rol
and
hlt
ja
cmp
push
and
pop
sub
xor
jmp
mov
mov
int
addr16
clc
and
xchg
fistps
or
into
shlb
imul
jno
cmp
divl
stos
inc
imulb
mov
outsb
out
jo
mov
faddp
sahf
pusha
jnp
lock
and
out
roll
int
pop
mov
les
jo
sub
sub
mov
fs
call
sub
push
cmp
in
jb
pop
scas
push
test
inc
iret
std
pop
jecxz
daa
js
jbe
and
das
adcb
lods
in
jne
or
push
adc
lea
add
push
rorl
dec
pop
xchg
xlat
loop
add
fs
and
xchg
push
test
xchg
push
sti
sbb
lock
jbe
push
lret
out
popa
sarl
and
das
ret
divb
pop
notb
in
or
ja
pop
fs
xor
or
sub
fsubrs
pop
int
test
fildl
out
andl
mov
push
pop
shrl
xchg
mov
das
mov
pop
insb
inc
pop
cmpsl
jp
push
in
lock
and
xor
xorl
popf
push
xchg
sub
jo
push
das
xchg
mov
xchg
xor
mov
aad
imul
roll
test
jl
aas
and
repnz
scas
push
mov
cltd
mov
jo
jae
push
aas
movsl
shlb
cmp
out
inc
test
mov
leave
enter
mov
loopne
add
outsb
inc
rcll
fsubl
mov
fbstp
mov
mov
pusha
outsl
pusha
jmp
pop
xor
sti
in
fcompl
mov
movsb
sbb
fsubrs
jmp
sub
sbb
sub
repnz
lds
leave
push
int3
mov
jb
mov
or
cmp
cmpsb
fmull
sti
cmp
movsb
cmp
push
fwait
aaa
jae
inc
mov
mov
pop
outsl
push
inc
lds
test
ds
inc
jmp
push
mov
pop
adc
jnp
in
outsb
dec
add
push
and
hlt
scas
add
out
sti
arpl
test
ds
daa
cli
or
js
mov
fwait
mov
mov
adc
in
push
jae
jge
int
or
subl
add
aad
rorl
and
jp
cmpsb
ds
bnd
dec
notl
cld
lea
aaa
idivb
add
xor
fimull
divb
jl
inc
push
push
cmpsb
and
jl
push
pop
icebp
cmp
test
mov
push
hlt
cs
adc
int3
pop
pop
aaa
adc
and
or
pushl
dec
enter
popa
pop
add
adc
sbb
into
test
add
or
addb
sbb
jno
pushf
xchg
cs
xchg
negl
or
push
loopne
aaa
fcoms
mov
mov
mov
mov
cmp
jl
insl
jb
adc
jo
add
ds
dec
orb
popf
out
add
aaa
mov
sub
ret
pop
jl
call
push
jne
stos
cmpsb
daa
or
cmp
dec
loopne
and
mov
push
adcb
test
cmpl
mov
popf
lahf
jle
mov
jns
push
jnp
test
addr16
popf
push
mov
ret
xlat
bound
daa
sbbb
push
mov
test
pop
pop
repnz
hlt
ja
mov
mov
scas
mov
stos
adc
stos
fnstsw
arpl
int3
mov
test
mov
mov
stos
inc
int3
stos
in
sbb
das
loopne
adc
add
mov
jge
mov
sub
pop
sahf
stos
ds
imul
push
jae
jae
imul
push
jl
lods
test
jmp
out
pop
out
or
lahf
testl
adcl
cmp
inc
pop
xor
mov
dec
add
xor
push
lds
mov
dec
popf
adc
push
inc
push
push
or
iret
xor
mov
adc
sbb
sbb
mov
cs
sbb
stos
rol
nop
outsb
jns
enter
jnp
cmc
js
pop
jb
loop
jp
cmp
or
insb
icebp
int3
mov
movb
mov
iret
jg
scas
add
shl
xchg
mov
cmp
xor
enter
aad
mov
mov
jmp
negl
pop
sub
inc
sbb
push
push
sub
lcall
cwtl
or
inc
push
test
ret
sbb
cmp
out
lea
xchg
ret
push
lea
aas
jge
jo
and
push
mov
push
popf
repz
mov
push
dec
add
pop
repnz
ljmp
pushf
repnz
mov
push
test
out
stos
shll
dec
cmpsl
bndstx
mov
push
clc
inc
sbb
lahf
push
repnz
mov
rorl
dec
mov
and
cmc
outsb
inc
insb
lods
sub
pop
push
add
testl
adc
mov
test
stos
vpunpckhwd
mov
sbb
jnp
loop
sahf
push
stc
mov
cmp
mov
dec
push
ja
xchg
imul
and
cld
push
ljmp
insb
jmp
cmpsl
sbb
adc
push
and
popf
inc
inc
hlt
push
lcall
mov
movsl
xor
and
and
fsts
movsl
cs
cli
iret
dec
push
push
orb
and
push
insb
leave
mov
sbb
inc
leave
clc
pop
lds
test
add
mov
mov
add
sbb
add
subb
movb
paddb
adc
pop
arpl
cs
jno
and
in
stos
pop
aaa
dec
movsl
mov
jns
decl
fdivrs
js
or
aas
or
xor
sub
sub
sbb
aaa
cltd
dec
or
aaa
fdivrp
popa
sub
add
adc
icebp
cmp
sub
rclb
rolb
push
cmp
mov
ljmp
pop
out
sub
in
vpshab
stos
push
sub
fisubs
sub
xchg
mov
fyl2x
push
adc
call
lret
inc
dec
fnstenv
pusha
jmp
push
mulb
lea
ss
mov
fstps
push
xor
ljmp
or
jbe
jp
push
mov
jl
iret
push
into
xchg
xor
and
add
cld
aaa
sahf
or
push
sub
std
jo
xchg
mov
ds
and
mov
push
xor
sbb
loope
dec
xor
jp
mov
mov
mov
jmp
cmpsl
mov
mov
insb
sub
jge
fucomip
jnp
sub
mov
sbb
outsl
adc
aad
shlb
sbb
jecxz
lods
xor
mov
gs
sbbl
loop
ret
call
cmp
addr16
dec
xchg
repz
or
cmpl
mov
xchg
dec
dec
mov
add
push
movsb
jg
xor
mov
cmp
pop
dec
loopne
sbb
insl
add
xchg
notb
pop
pop
lods
ret
dec
and
jne
fwait
das
dec
jnp
out
repnz
push
nop
sbb
xchg
adc
sti
addr16
ss
lea
sub
ss
inc
loope
sahf
into
in
cmp
add
sbb
jae
imul
sub
push
adc
pop
fsubrs
add
int3
jg
push
pop
cmc
xchg
mov
add
call
mov
outsl
daa
ljmp
cmpb
jecxz
int3
out
sbb
cld
mov
rcll
jne
pop
xor
pop
jae
lock
and
push
test
sub
jnp
and
notb
mov
sbbl
scas
arpl
sti
sbb
js
in
or
pop
ret
stc
push
sub
xchg
xchg
push
jns
xor
and
mov
xchg
in
test
sbb
push
push
movsl
jge
add
add
and
pop
jne
mov
add
out
testb
add
jecxz
fwait
and
enter
cmp
inc
mov
and
outsl
addr16
ret
push
cmp
add
push
ds
dec
push
movsb
sbb
xchg
add
aam
add
pop
pop
pushf
scas
cmp
jne
mov
fdivrl
out
lret
xor
jbe
mov
fcoml
adc
xor
aad
scas
aaa
sub
xchg
sub
les
add
test
xor
ficomps
incb
pop
fstps
sbb
loope
cli
shlb
and
insb
mov
push
sbb
in
xchg
or
gs
pop
sub
sbbl
les
and
jp
and
mov
sarb
mov
pusha
jnp
jmp
or
adc
cmp
daa
mov
movsb
repnz
or
loope
clc
dec
xchg
jo
sbb
cld
xor
cltd
pop
in
push
aaa
mov
fmuls
sub
movsl
xchg
sub
clc
adcl
es
das
es
lret
sti
jo
insl
in
jl
or
in
enter
adc
sub
cs
push
cmp
xchg
sti
scas
inc
inc
lods
shrl
push
mov
xchg
out
fiaddl
mov
adc
jmp
inc
mov
and
stos
pop
loopne
pusha
adc
jb
imul
pop
lret
testb
addr16
adc
sub
adc
out
mov
inc
test
repz
std
paddsw
aas
in
dec
mov
ja
icebp
pop
andl
ret
stos
mov
mov
sbb
pop
cmpl
mov
ror
out
cs
rcr
mov
subb
sahf
or
xchg
add
sbb
push
push
mov
pushf
fidivrs
leave
ror
das
mov
push
mov
adc
aam
pop
jne
test
fidivs
outsl
pop
mov
mov
mov
or
cmpsl
dec
mov
mov
ret
add
inc
pushw
cwtl
push
loop
mov
in
out
inc
dec
cmc
xchg
out
scas
inc
test
jge
mov
nop
aas
shll
call
icebp
push
cli
imul
adc
dec
movsb
pop
sbbb
insb
in
sti
sbb
fsubp
hlt
movsb
pushf
dec
cmc
mov
adc
jo
mov
testb
inc
enter
out
fmull
push
sbb
push
pop
sbb
pop
inc
jae
frstor
sahf
lods
push
std
es
loopne
test
xor
jp
dec
push
and
pop
fsubrl
mov
xchg
xor
fists
frstor
sub
hlt
push
xlat
outsb
adcl
mov
push
jne
pop
loope
push
mov
pushf
adc
push
dec
push
xchg
jge
adc
push
call
dec
gs
out
sbb
nop
ds
pop
testl
cmp
push
add
jae
and
imul
mov
adc
aas
jae
out
pop
in
ret
push
cmp
xor
sbb
out
pusha
in
lahf
lods
sub
sub
xchg
xor
inc
out
mov
pop
fwait
push
pusha
mov
sahf
cli
add
faddl
and
push
push
or
mov
xchg
scas
or
andl
inc
pop
sbb
divl
aam
sahf
leave
loopne
sti
pushf
mov
dec
shrb
add
ret
fimuls
cmpsb
dec
push
clc
mov
sub
call
dec
pop
inc
scas
sahf
testb
and
pop
jbe
dec
lahf
sub
jecxz
je
and
cmc
pop
mov
jbe
sub
cwtl
dec
xorl
out
cld
mov
ja
outsb
push
pop
xor
fdivrs
in
push
fs
pusha
mov
lods
fidivs
mov
xchg
mov
mov
in
jge
in
jp
cmpsb
pushf
xchg
xchg
icebp
push
and
mov
mov
pop
mov
lock
push
inc
test
jne
mov
and
mov
fildll
ja
pop
push
mov
push
int3
ja
sbb
js
mov
push
shlb
aaa
lret
cwtl
jecxz
scas
lcall
notl
stos
sub
jo
rcll
or
daa
out
ja
andl
pop
aaa
into
lea
js
and
jp
xlat
pop
xchg
pop
inc
frstor
je
shl
lods
inc
and
push
xchg
in
jb
call
push
sbb
and
mov
xor
leave
bound
jno
mov
loopne
adc
loope
jl
mov
loopne
and
stos
imul
in
xor
ret
inc
data16
nop
mov
and
fwait
stos
cmpsl
negb
icebp
or
dec
adc
adc
nop
push
aad
mov
push
lret
push
push
mov
pop
pushl
popa
aaa
or
lret
das
andl
dec
jge
cmp
decb
push
daa
jns
fsts
dec
mov
shll
jmp
pop
icebp
idivl
insb
cmp
test
mov
test
aam
mov
cmp
xor
rorb
xorb
bound
push
mov
mov
test
inc
fidivs
adc
lret
xor
push
jb
mov
mov
ret
sub
scas
pop
movsb
lock
xor
cltd
aaa
push
jb
rclb
xchg
pop
gs
test
jne
mov
addl
leave
lods
cltd
xor
stos
rcrl
xor
push
outsl
and
rcrb
cmp
or
mov
addb
repz
jnp
cli
shrl
add
inc
lds
xor
sarl
sahf
fildl
sahf
or
push
aas
fcomps
adc
adc
inc
fldl
mov
js
jmp
and
pushf
aas
aam
sbb
jmp
push
pop
hlt
popf
push
in
mov
je
fidivs
xchg
cmpsl
xor
out
inc
cmpsb
popa
mov
inc
int3
adc
iret
cltd
mov
add
push
aas
jp
les
popa
jle
mov
fdivl
mov
lds
pop
je
mov
cmp
cmpsl
out
and
cmp
adc
incb
gs
push
rcl
int3
sbb
std
loope
inc
loop
xlat
dec
fisubrl
fisttpl
movsl
sbb
shll
sub
mov
push
mov
xchg
arpl
push
popa
cmpl
cmp
je
mov
dec
or
pop
vpshufd
loop
inc
push
repnz
xor
fs
cmp
fsubs
sbb
frstor
bnd
inc
xlat
mov
stc
test
mov
imul
popf
mov
cmp
dec
push
in
mov
jae
or
stos
and
out
daa
hlt
movsl
cmpsl
mov
mov
mov
adc
xchg
imul
icebp
mov
cltd
lock
xchg
add
fs
and
mov
outsl
out
int
ficomps
and
mov
dec
xchg
loope
cmp
inc
dec
movsl
mov
fnstsw
mov
int
jb
and
mov
mov
pop
cmc
sub
xchg
inc
mov
movsl
sti
pop
ret
push
adc
aas
sbbb
jl
jae
cmp
js
xchg
push
loop
movsb
or
movsl
pop
sbb
pop
ljmp
push
clc
adc
cmc
dec
arpl
add
inc
insb
das
nop
pop
xchg
mov
enter
add
sbb
adc
bound
and
push
xor
adc
pop
dec
in
jbe
mov
call
movsb
pop
dec
sti
es
mov
repz
mov
xor
mov
cmp
sub
xor
sbb
xchg
or
pop
push
rcll
cmp
filds
xchg
test
cmp
test
pop
cmp
sahf
iret
xchg
ja
dec
push
std
cwtl
pop
sub
sub
out
pop
ljmp
push
roll
mov
popa
js
push
mov
bound
mov
fxch
popa
fistps
push
dec
add
fwait
aas
fidivl
mov
clc
sahf
xchg
xor
xchg
clc
call
dec
push
inc
cmc
inc
add
rorl
jae
push
sub
aaa
bound
sbb
jp
dec
popa
daa
arpl
sti
stos
or
out
sbb
push
add
push
jne
pop
xor
test
cmp
push
or
push
sbb
rcrb
adc
bnd
adc
xchg
jle
mov
cwtl
sbb
or
out
sahf
es
mov
repz
dec
mov
jo
outsl
pop
in
ror
xchg
mulb
push
shl
rolb
addr16
cmp
mov
jp
ret
shrl
and
jge
xchg
outsb
cld
adc
rorl
or
xor
adc
lock
into
cmp
mov
inc
pop
add
push
scas
sbb
or
inc
leave
inc
scas
cmp
jge
hlt
and
cmp
jnp
sbb
mov
stc
dec
imul
sbb
int3
cmp
inc
pop
int
push
iret
adc
add
fistpll
push
sbb
rol
aaa
hlt
cmp
cmpsb
jecxz
nop
adcl
mov
loopne
fmuls
and
lcall
cmp
xor
movsl
cmp
stos
repz
mov
cmp
mov
jle
leave
int
sbb
aad
cmpb
adc
pop
xor
or
in
into
ret
sbb
jp
je
inc
xor
mov
daa
push
rcl
scas
mov
or
cmp
loope
or
cmp
push
add
int3
mov
fldcw
aaa
mov
dec
sarb
jl
mov
sbb
adc
stos
pop
cmp
data16
les
sti
pop
sbb
add
push
dec
out
mov
dec
pop
sbb
in
loop
cltd
mov
sub
pushw
adc
mov
sub
in
divl
dec
adc
mov
adc
mov
jecxz
addr16
fs
movsb
imul
sarl
loope
jne
bound
mov
loop
imul
cli
push
aad
mov
push
cmc
mov
dec
into
and
stc
cmp
sbb
add
out
int
ljmp
push
and
or
bound
xor
sub
and
scas
sbb
popf
rclb
cmp
add
icebp
leave
xchg
push
in
aas
pushf
iret
xor
popa
add
or
cs
lret
add
push
jb
jae
hlt
sub
mov
out
aad
or
mov
jno
rorb
and
cmc
popl
mov
imul
fnsave
pop
sbb
adc
outsb
add
cwtl
or
js
ss
and
mov
or
ds
out
shlb
or
popa
or
out
and
fucomip
nop
add
cmp
aad
out
and
ds
jnp
stos
cmpb
or
cmp
test
loopne
push
mov
rorl
xor
mov
dec
in
ja
repz
add
mov
push
dec
movsb
or
daa
insl
jl
out
popa
push
xchg
mov
mov
and
outsb
ds
xlat
pop
and
and
cmp
fsubl
push
stos
inc
dec
aas
pushf
pop
out
push
aam
out
in
adc
pop
push
mul
mov
jns
mov
test
popl
xchg
mov
mov
xor
adc
sahf
imul
mov
aas
jge
mov
inc
xlat
jge
stc
subl
je
call
xchg
push
xchg
insb
mov
into
shrl
and
add
std
insb
jge
aad
xchg
aam
int
pop
xor
in
lret
dec
fs
shll
int3
add
arpl
adc
inc
cmpsl
dec
xor
mov
mov
push
add
jnp
add
stos
pop
imul
cmc
add
add
push
cmc
jge
jecxz
lahf
xchg
sub
dec
jmp
jnp
dec
pop
lock
jae
aad
adc
xchg
mov
xor
pop
leave
mov
bound
imul
add
and
jle
adc
mov
add
mov
fdivrl
pop
stos
imul
or
stos
xchg
fistl
rorb
movsb
xor
adc
not
sbb
stos
popf
arpl
lods
cli
fst
mov
cmp
test
xor
dec
mov
mov
mov
sub
inc
cmc
dec
add
hlt
pop
xor
aad
push
xchg
popf
pop
shlb
sbb
xor
rcr
jo
mov
cli
shrl
sbb
in
popf
jl
pop
cmp
stos
enter
dec
jmp
mov
arpl
xor
lcall
mov
xchg
gs
in
ret
sub
push
sbb
lahf
mov
ljmp
mov
addr16
mov
mov
outsl
push
aaa
into
test
and
push
cmp
addr16
dec
jne
xor
jge
mov
aas
sbb
mov
pusha
out
test
in
or
or
repnz
dec
inc
xlat
mov
and
add
push
xor
fstp
xchg
shrl
or
push
scas
sarl
movsb
push
adc
adc
mov
int
xchg
push
push
xchg
in
or
stos
mov
sub
mov
js
stos
ret
cwtl
or
lcall
push
or
pop
cwtl
sub
jb
loop
mov
mov
nop
test
loopne
mov
data16
jo
loop
push
xchg
mov
aas
out
rcrl
inc
mov
jb
or
push
cltd
popa
sub
jno
jp
sbb
add
pop
or
rclb
lds
lock
bound
adc
int3
lret
xchg
outsb
pop
mov
cmc
mov
cmp
mov
or
gs
mov
jne
jmp
cld
xchg
sbb
enter
pop
shr
ds
pusha
mov
call
jl
mov
adc
cmp
and
gs
inc
push
xor
cltd
pusha
shll
add
call
enter
nop
outsb
pop
mov
div
mov
cld
xchg
imul
mov
icebp
pop
lcall
inc
clc
popa
cmp
lret
out
adc
lahf
xchg
jb
xchg
sbb
addr16
and
call
test
stc
jg
push
jns
jb
mov
xchg
push
and
cmpsb
push
mov
hlt
cmp
in
icebp
test
in
data16
pop
and
push
daa
xor
test
lahf
xchg
mov
mov
mov
cmp
test
adc
mov
ret
jno
fstl
lods
ss
mov
ret
bound
lahf
out
add
dec
jae
jl
test
sbb
mov
and
cmp
xor
and
pushf
mov
int
icebp
xchg
jg
cmp
fstpt
pop
cmc
cltd
push
cmp
jbe
and
aad
mov
and
stos
pop
sbb
sub
cmc
imulb
or
popa
mov
inc
xor
ja
inc
flds
lcall
test
repnz
add
xchg
lods
mov
addr16
push
sub
xchg
xchg
mov
adc
xchg
dec
dec
or
push
loope
jmp
mov
insl
adc
pop
jmp
lods
add
iret
xchg
jmp
arpl
es
inc
jmp
rclb
and
inc
adc
loopne
fld1
jns
cmpsl
scas
and
lret
xlat
cmp
out
jp
xchg
mov
data16
inc
adc
push
cld
or
pop
pop
jns
jp
dec
sub
and
loopne
imul
mov
add
adc
pop
pop
sbb
aam
push
jb
dec
push
pop
repnz
xchg
lds
sti
pusha
xchg
jb
pop
test
jne
dec
int
ret
cmp
and
leave
jno
out
jge
jbe
test
scas
lods
int
pop
rclb
imul
mov
jno
mov
cmpsb
sbb
decl
imul
cld
jae
out
fmull
pop
int
inc
lret
mov
jecxz
pop
movsl
cmp
xchg
insl
loope
jnp
out
test
mov
xchg
jmp
shll
pop
in
jns
inc
stos
jmp
mov
vlddqu
stos
js
rcrb
cmp
insb
cmpb
repnz
push
and
aaa
xchg
dec
stos
lret
jb
rcrl
ret
dec
es
inc
sbb
into
adc
jle
add
stos
mov
stc
sbb
or
and
sub
or
pop
lret
cwtl
push
adc
jp
in
idivb
inc
int
out
leave
push
inc
mov
sbb
dec
push
mov
push
mov
stos
iret
jge
or
lods
mov
dec
pop
mul
aad
pop
les
jle
ja
rorl
in
sbb
mov
movsl
cld
lock
or
adc
sbb
xchg
icebp
adc
jnp
add
fidivs
popf
lock
mov
sbb
xchg
stc
int3
fstl
add
test
jne
ja
push
cwtl
scas
js
pop
mov
pop
push
mov
add
stc
ror
push
add
testl
mov
add
andl
out
push
nop
inc
retw
mov
sbb
pop
rcrb
push
scas
lds
daa
cmp
lret
rcr
xchg
pop
repz
out
push
mov
popl
pop
mov
stos
lods
cmc
push
jge
lret
mov
add
cmp
leave
mov
jp
pop
nop
movsl
xchg
in
pop
lods
cli
adc
gs
lods
xchg
adc
or
mov
out
rcrl
adc
scas
pop
loopne
scas
repz
mov
fsub
mov
lcall
cld
mov
js
imul
movsl
inc
pop
dec
orl
or
sarl
jbe
pop
es
pop
mov
mov
lock
or
push
pop
arpl
js
popa
fmuls
push
stos
sub
aas
adc
pushfw
mov
ljmp
shr
iret
jg
add
popf
dec
xor
arpl
xor
rolb
fnsave
push
xchg
cmc
mov
sar
add
xor
xchg
dec
scas
fildl
out
movsb
popa
leave
push
rolb
push
cmp
pop
xchg
pop
adc
in
push
cmc
fwait
xchg
pop
xchg
mov
ds
stos
sbb
xor
jge
mov
rorl
mov
rcr
xor
imul
fldcw
add
aas
popf
mov
mov
jo
jo
cmp
push
cmc
mov
fists
movsl
dec
jno
inc
incl
mov
inc
ss
inc
xchg
aam
adc
pop
pop
cmpb
push
leave
mov
int3
and
lret
push
inc
adc
inc
push
jbe
cmp
scas
call
adc
aas
push
ucomiss
add
sbb
push
dec
imul
adc
or
lcall
and
loopne
pop
insb
jmp
out
cmpsl
sbb
mov
xchg
sar
push
sub
push
or
pop
sub
aam
xchg
inc
pop
jo
in
movsb
and
and
push
outsb
push
jbe
dec
test
or
mov
dec
and
jne
and
lahf
xor
insb
lea
jbe
ds
pop
div
loopne
lods
sbb
push
sahf
xchg
shl
or
jp
mov
scas
fldcw
pop
in
jp
repz
loop
lds
dec
fyl2x
ljmp
xchg
jmp
lock
test
scas
cmp
int
sbb
fisubrs
cs
jle
mov
jl
pusha
out
dec
xor
adc
push
rorb
mov
filds
int
xchg
scas
out
fists
insl
jecxz
dec
lcall
inc
pop
push
daa
lds
or
imul
loopne
or
cld
sbb
addr16
pop
cs
jnp
test
cmpsb
repnz
ja
pusha
leave
cmp
push
mov
enter
push
mov
xor
pop
repz
mov
and
lret
test
test
lret
push
sti
cmc
js
mov
pop
jecxz
out
inc
lods
clc
icebp
push
cmpsb
addb
lret
lods
inc
mov
outsb
or
shrl
fdivrl
mov
jo
xchg
shll
and
cwtl
das
fstps
jno
or
mov
pop
push
repnz
jmp
ja
cmp
shll
subl
fisubrs
jge
pop
lcall
in
inc
ret
out
les
xchg
lret
adc
xchg
daa
hlt
jae
and
ret
xchg
mov
daa
cmp
push
sahf
ljmp
insb
insl
inc
xor
fnstcw
les
aam
divl
or
adc
xchg
sub
cs
call
arpl
dec
filds
movsb
pushw
push
push
cmpsl
out
test
and
mov
inc
xchg
sub
jb
inc
dec
rcl
fwait
sub
fdivrs
and
inc
lods
scas
ja
pop
repz
call
enter
xchg
mov
sbb
mov
add
and
mov
dec
loop
push
cwtl
fs
jne
pop
xchg
sub
jne
add
mov
pop
pop
sahf
xor
cmp
shrb
adc
test
pop
cmc
or
xchg
movsb
jl
aam
in
dec
adc
xorb
and
adcb
ret
les
lret
sub
jp
cli
dec
sbb
pop
out
jp
jl
lods
mov
or
test
pop
rcrl
adc
movsb
cmp
das
icebp
mov
or
cmovl
cmp
mov
inc
sbb
out
xchg
add
es
jp
out
add
mov
push
sbb
sbb
imul
subb
scas
popf
sbbb
addr16
pop
push
mov
aaa
and
mov
iret
adc
add
cs
xlat
sub
js
mov
sub
push
test
daa
adc
mov
cmp
push
fidivrs
sbbb
mov
out
jo
mov
jp
adc
xor
mov
ror
mov
jecxz
fdivrs
insl
mov
sbb
cwtl
mov
pop
mov
shl
cld
push
jns
mov
jo
push
mov
push
imul
lcall
pop
mov
mov
fwait
cmp
loop
mov
testl
iret
push
bound
mov
inc
fwait
xchg
lods
nop
adc
inc
mov
dec
xor
aad
cmp
scas
dec
sti
pop
nop
sti
pop
jmp
rorb
js
xor
fdivrl
mov
inc
inc
out
pushf
add
nop
test
in
out
xor
pop
and
test
notl
sub
mov
add
xor
insl
mov
cs
cmp
fiaddl
je,pn
push
sbb
push
fs
add
jne
sbb
jge
xchg
scas
idivl
xchg
sub
ljmp
and
movsb
push
sbb
pop
dec
xor
das
add
clc
inc
jns
jnp
jo
cmp
dec
test
lcall
jle
iret
mov
int
mov
mov
test
lret
mov
adc
xchg
loopne
hlt
sbb
or
sub
hlt
pop
aam
lahf
imul
cmp
mov
scas
out
lods
test
add
inc
test
or
out
xchg
and
mov
mov
test
push
fs
ret
dec
mov
je
mov
fwait
inc
pop
ljmp
pop
and
sti
sub
ds
in
das
push
fstpt
jb
mov
and
adc
and
enter
adc
push
js
movsb
and
cltd
cltd
push
in
clc
out
jns
adc
sarl
cltd
inc
push
stos
add
lods
cld
xchg
sbb
cwtl
and
call
inc
in
pop
cmp
cmc
jns
movsl
outsb
or
rcrb
insl
add
add
cmp
sub
loopne
inc
daa
cmp
scas
push
cmpsl
pop
xor
fldcw
insl
into
gs
std
cli
and
outsb
xchg
and
pop
push
clc
mov
adc
sti
stos
inc
in
adc
and
fsubp
dec
push
popf
scas
in
sti
jnp
mov
pop
cmp
xchg
arpl
mov
mov
mov
mov
sub
fmuls
pop
std
xlat
or
movntq
lods
inc
mov
pop
adc
test
outsl
push
repnz
test
cmp
mov
out
and
movsb
mov
out
loopne
repnz
icebp
mov
cmp
xchg
jg
sub
mov
test
shrb
xor
or
int3
arpl
lret
sti
lea
jg
hlt
xchg
cmc
inc
es
sti
rcrl
push
cmp
jmp
lock
repnz
jp
loopne
add
mov
mov
int3
add
push
mov
enter
or
pop
mov
aas
popf
jae
fwait
movsb
mov
gs
daa
mov
jae
dec
stc
lods
mov
enter
daa
sbbl
stc
nop
inc
pop
dec
adc
push
mov
xor
mov
xchg
out
notb
ss
fsubrs
jle
lahf
je
imul
fnstsw
mov
call
sbb
mov
idivb
and
or
mov
jg
adc
test
adc
jg
fistpll
dec
test
aaa
sub
mov
pop
mov
push
pop
cmp
lock
out
dec
loop
or
std
adc
outsb
add
xchg
mov
sub
pop
scas
cmc
push
mov
jg
in
arpl
inc
push
or
lcall
xor
mov
mov
mov
outsb
add
mov
rorb
push
sub
das
dec
and
sub
xchg
mov
into
gs
fstl
dec
dec
in
cmp
inc
lods
mov
pop
mov
push
mov
lock
rcll
inc
das
add
jp
pusha
adcb
lods
jns
dec
mov
jg
jne
mov
jp
call
insl
mov
dec
xor
inc
es
ret
shll
insb
pop
loop
aad
mov
pop
outsl
lret
add
in
divb
jecxz
in
jae
pcmpgtd
xchg
mov
nop
sbb
dec
cmpsb
ds
mov
pusha
or
iret
pop
xor
xchg
adc
aam
pop
cltd
mov
dec
dec
mov
and
pop
xlat
mov
push
in
xor
test
inc
push
jae
push
pop
jl
shrb
lea
or
test
inc
add
pop
or
aad
cmp
pop
loope
cltd
std
leave
aad
mov
rorl
or
mov
lods
add
fiadds
mov
loop
aad
push
cmp
dec
ja
pushf
xor
je
hlt
xor
xchg
sub
in
mov
push
out
sbb
jecxz
mov
in
jne
pop
movsl
divl
pop
push
or
cmp
rcrl
pusha
cmpb
outsb
cmpsl
loope
cli
and
mov
lds
pop
dec
pop
or
sahf
or
or
dec
dec
out
jg
aaa
mov
lock
mov
and
xlat
loopne
lds
divl
call
shr
lcall
leave
xor
mov
mov
js
or
leave
mov
shrl
addr16
loope
dec
lfence
clc
icebp
repz
xchg
sahf
sbb
mov
mov
movsb
or
inc
ret
xchg
mov
adc
adc
bnd
cmp
and
push
pop
scas
add
mov
inc
adc
es
mov
push
mov
lcall
sbb
xor
pop
ds
or
shll
dec
mov
insl
push
cmp
sub
roll
fdiv
jp
dec
in
xchg
pop
cmc
mov
pop
jnp
call
je
push
push
loopne
nop
push
dec
inc
push
cld
lret
sub
scas
call
jge
and
popf
outsw
jnp
aaa
orl
fcmovne
imul
fsub
mov
mov
mov
stos
mov
dec
inc
ds
inc
out
xchg
cmpsb
mov
das
mov
pop
repz
imul
jo
inc
loop
inc
pop
or
scas
jge
pop
dec
ss
cmp
in
leave
pop
push
cmp
cmp
js
mov
jbe
sbb
jo
pop
scas
test
movsl
sub
fwait
xchg
ficomps
inc
leave
pop
push
in
dec
bound
cmp
add
adc
pop
fldt
fiadds
movb
lret
jecxz
data16
mov
aaa
sbb
je
cmp
fs
inc
pop
ja
sub
test
lea
pop
xor
in
dec
rorl
test
mov
sbb
inc
or
or
cmp
mov
push
inc
lods
xchg
add
mov
jg
sbbb
int
hlt
ss
adc
sub
mov
fistl
popa
inc
inc
ret
inc
cs
jo
sub
push
stos
pop
pop
movsb
hlt
rcl
adcb
mov
sub
dec
dec
push
xchg
push
mov
pop
fadds
shr
scas
mov
sbb
sarb
rcrb
enter
cmc
adc
repnz
sbbb
push
xchg
jo
loop
shlb
dec
stos
pop
jmp
add
popf
and
sti
fsubrs
cs
sbb
mov
cmpsb
xor
xchg
loopne
xor
call
rorb
dec
loop
sbb
in
push
cmp
imul
cmp
ss
dec
xor
loope
jns
test
dec
mov
jnp
js
mov
loope
mov
jge
add
mov
add
mov
xchg
inc
xlat
push
jb
nop
lret
xor
xchg
cltd
mov
fs
sbb
push
or
cmp
add
add
jne
cwtl
test
adc
push
test
gs
cld
fsubr
mov
loope
pop
xor
inc
inc
sub
mov
xor
xchg
mov
fs
mulb
inc
jge
outsb
shrl
push
cmp
les
push
xlat
loope
mov
cld
lcall
in
int3
pop
push
jne
xchg
jg
or
jecxz
cmp
dec
mov
mov
les
mov
inc
jmp
sub
fisubs
sti
je
mov
lds
jb
pop
and
mov
pop
cmp
aas
and
icebp
das
shrl
add
xchg
sbb
repnz
in
sub
lret
mov
std
inc
aad
or
adc
pusha
fwait
xor
or
ja
lahf
outsl
out
jnp
or
sub
icebp
xchg
aaa
and
mov
test
icebp
movsl
imul
das
das
or
pushf
xor
js
adc
xchg
clc
push
push
and
push
mov
xor
ja
fnstcw
pop
or
adc
dec
push
lds
jmp
sub
jb
mov
push
lret
addr16
xchg
inc
xchg
cmp
fsub
cmp
cmp
daa
pop
lret
movsl
xchg
popf
mov
outsb
inc
es
mov
fcoms
lea
or
loopne
push
xchg
iret
in
cwtl
jecxz
sub
lret
xchg
mov
jns
add
cmp
dec
dec
dec
dec
xor
in
adc
std
mov
outsb
insl
aaa
jl
mov
pop
rcrb
test
loop
lock
add
push
nop
clc
mov
mov
mov
in
xor
jo
jl
and
sti
sbb
shlb
pushl
cmp
inc
jecxz
inc
lret
lret
mov
pop
push
add
push
sub
inc
cpuid
cmp
fcmovne
adc
inc
icebp
fadd
jecxz
cmc
out
mov
test
int
es
jg
bt
ret
call
dec
jle
jns
fimuls
fisttps
repz
test
bound
mov
jl
push
xor
jns
xchg
pop
out
call
dec
out
xchg
popa
mov
sbb
mov
fwait
ss
loopne
std
and
xor
xchg
inc
push
xchg
inc
dec
cwtl
std
xor
cwtl
iret
or
popa
mov
les
xchg
mov
xchg
mov
cli
mov
scas
cld
aam
fsubp
jp
add
or
stos
fwait
jbe
and
pop
dec
std
das
mov
mov
psubsb
jns
in
test
shrb
cmpsl
xorb
enter
pop
rol
addr16
mov
into
mov
pop
cmpsl
fidivs
pusha
outsb
jecxz
pop
or
push
jnp
fs
push
pusha
gs
jl
xor
cwtl
add
xor
dec
mov
out
jo
and
sub
mov
fs
and
lods
imul
adc
dec
outsl
sub
stos
dec
je
rolb
add
test
jns
or
mov
inc
sbb
shrl
xchg
and
inc
mov
test
inc
lods
sbb
rcrb
subl
aad
inc
and
jle
pop
push
fbld
mov
stos
add
out
int3
mov
mov
xor
ret
push
shrl
pop
cmpps
bound
in
aaa
dec
icebp
hlt
lods
mov
jecxz
in
xor
in
xor
cltd
mov
stos
xchg
loopne
loope
mov
dec
sahf
lret
cmp
adc
loop
pop
mov
push
and
movsl
push
mov
fistps
mov
jmp
incb
sarb
enter
inc
sub
negl
xor
sub
xchg
xchg
loop
push
adc
sti
xor
xor
dec
cmc
outsb
and
pusha
jnp
or
fwait
jb
jns
popa
jmp
stc
aaa
dec
xlat
movb
jl
mov
rclb
in
and
pop
stos
xchg
cmp
and
jecxz,pt
xchg
mov
repnz
mov
js
outsb
mov
jg
mov
mov
mov
lret
stc
or
sti
adcb
adc
jae
mov
pusha
sbb
cmpsl
jmp
or
dec
push
sbb
movsb
rcr
out
push
mov
jbe
inc
int
jae
or
cmpsl
mov
sbb
xchg
mov
movsl
aad
mov
xchg
jbe
push
pop
inc
movsl
dec
dec
imul
bound
jae
push
sub
lods
fldt
ret
es
les
xor
mov
and
xchg
mov
lock
les
aas
adc
hlt
mov
stc
mov
sbb
push
sub
lcall
and
cmpsb
sbb
dec
pop
aad
inc
mov
xor
fmul
cmp
subl
loope
xchg
sub
shll
xchg
in
xchg
sbbb
jno
rol
push
outsb
sbb
imul
pop
push
and
iretw
jge
sub
daa
jmp
sbb
fucomip
cmc
fdivrl
mov
jb
clc
sub
lods
pop
std
add
mov
adc
arpl
mov
pop
mov
fisubs
or
and
out
repnz
shl
scas
adc
sbb
test
js
decb
loope
test
stos
imul
xor
push
cmpsl
lret
cmp
push
and
or
out
inc
and
jmp
call
and
jb
cmp
push
outsl
addl
sbb
cmp
xchg
imul
or
dec
scas
imul
iret
imul
scas
or
es
adc
add
dec
inc
test
cmc
sbb
jne
sub
incl
cld
das
inc
in
stos
jbe
push
inc
and
jno
repz
xchg
clc
fs
icebp
mov
mov
fmuls
imul
xor
pop
enter
gs
mov
inc
mov
cwtl
dec
and
mov
pop
push
xchg
dec
mov
out
sti
fnstsw
jecxz
push
sbb
dec
dec
inc
mov
adc
xor
xor
movsl
cmp
pop
sbb
jmp
mov
out
adc
jl
add
cmp
test
stos
outsl
push
fistpll
pusha
scas
mov
xchg
dec
dec
jne
adc
push
dec
jecxz
mov
push
jo
test
jnp
adc
mov
lret
cmp
out
iret
adc
or
hlt
inc
cmc
jo
daa
int
ljmp
and
inc
scas
sbb
lcall
scas
cmp
adc
adc
mov
add
cmc
xor
mov
lcall
xor
mov
fistps
mov
out
jno
jnp
rcll
imul
pushf
imul
and
sub
shl
test
aas
inc
jno
cmpsb
pop
sbb
fcmovnb
sub
repnz
ret
addr16
gs
hlt
or
dec
fxch
pop
loop
mov
or
sbb
push
jno
lea
pop
out
pop
sub
stos
xchg
and
imul
sbb
mov
into
mov
push
mov
add
mov
imul
or
andb
cli
pushf
test
dec
push
mov
pop
hlt
sbb
pushf
inc
inc
push
in
mov
jbe
or
inc
nop
daa
jbe
pop
cli
and
xor
lods
xchg
data16
jbe
inc
xor
in
jns
xchg
mov
mov
mov
inc
insl
mov
push
rcrb
mov
sarl
outsl
mov
aaa
jl
add
movsb
sbb
or
and
push
sub
xor
in
dec
push
mov
jl
in
mov
lods
inc
add
sub
stos
pushf
mov
mov
ret
pop
rcr
out
or
das
shll
test
cmp
jle
sub
push
pop
or
out
loope
std
dec
loope
out
pop
pop
daa
push
stos
and
mov
std
pusha
lcall
xchg
jb
push
mov
in
sti
dec
fstpl
ficompl
mov
and
inc
adc
imulb
mov
dec
push
popf
call
mov
push
xor
sub
sub
sub
fcmovbe
out
test
jb
or
push
or
adc
mov
outsl
test
dec
popa
or
mov
fstl
mov
les
fists
jne
out
lods
xor
push
aad
xchg
movsb
push
pushf
inc
add
and
lods
cmp
push
addr16
sahf
cmp
fdivl
or
mov
pop
mov
adc
test
mov
pop
loop
or
popf
pop
xchg
sarl
loopne
sbb
notrack
faddp
popf
push
aam
test
mov
jo
or
lds
mov
lods
mov
and
jae
push
cmp
mov
jecxz
mov
mov
shrb
sti
pop
scas
cmp
js
idivb
lahf
xor
adc
cld
das
out
and
push
lret
insb
sub
out
push
xor
lahf
sti
dec
mov
push
mov
aad
pop
iret
cld
lret
cmc
ja
outsl
xor
arpl
es
jns
mov
push
or
xor
sub
mov
mov
push
adc
out
cmpsl
mov
mov
dec
push
fcoms
cmp
sbb
add
addr16
mov
out
dec
lds
clc
cli
xor
daa
notb
sub
aam
rorb
xor
ja
movsl
jb
arpl
mov
xor
daa
test
iret
mov
fists
imul
jg
je
in
pop
push
push
add
loop
es
dec
jl
clc
popa
out
imul
mov
into
out
adc
pusha
cmp
push
insb
inc
dec
fnstenv
dec
jecxz
cmp
cmc
xchg
xchg
push
std
xchg
dec
inc
and
jg
fnstcw
popf
and
subb
sub
call
mov
mov
xchg
inc
adc
jge
fidivrs
pop
hlt
mov
push
je
jnp
push
jge
mov
pushf
jno
cmp
in
pop
vprotq
pop
ja
pop
stos
sbb
mov
xor
jmp
outsl
mov
ret
hlt
hlt
mov
test
das
sub
pusha
ss
testb
push
bound
aad
and
mov
scas
jb
test
push
push
inc
add
mov
and
addl
or
sub
js
jb
mov
dec
add
sub
sub
push
dec
icebp
mov
mov
mov
fsubrp
cmp
out
iret
mov
lods
mov
xchg
popf
rolb
sub
mov
imul
dec
and
push
addr16
int3
arpl
jp
shlb
iret
and
in
test
fs
adc
push
mov
data16
pop
and
scas
dec
xchg
insb
xchg
lods
repnz
mov
pop
fidivs
cmpsb
test
mov
sbbl
filds
in
dec
in
sbb
mov
or
jbe
inc
xchg
js
inc
lds
xor
jp
loop
mov
sahf
imul
aam
cmp
cmc
or
xchg
dec
fsubl
push
ja
push
sbb
call
push
push
imul
pushf
int3
add
add
xor
shlb
lea
jns
mov
push
call
into
push
notl
pop
repnz
aad
or
mov
ljmp
xor
add
daa
mov
mov
and
aad
inc
jbe
xchg
mulb
pushf
mov
mov
mov
js
and
test
mov
std
ds
in
push
jno
pop
mov
push
out
or
xor
pop
xchg
nop
jmp
xchg
sub
movsl
icebp
fmuls
and
cmc
or
adc
mov
jo
bound
xor
xor
repnz
into
fimuls
mov
nop
adc
aad
pop
scas
testb
dec
sub
mov
fistpll
arpl
push
jns
insl
les
fisubl
sub
ret
mov
aas
pop
out
fildl
inc
das
ret
pop
pusha
inc
test
js
dec
ljmp
xchg
outsl
inc
adc
jg
clc
js
pop
cmp
movsl
push
bound
sbb
mov
xchg
pop
inc
cwtl
sbb
std
and
push
adcw
aad
js
lahf
insl
sbbb
adc
xchg
inc
nop
cmp
dec
dec
push
jp
mov
shrl
iret
ds
ds
pop
push
sub
in
cli
in
adc
pop
sarl
push
xlat
mov
adcb
fcomp
sub
fmull
dec
cmp
dec
lahf
pop
sub
stc
pushf
aaa
pop
mov
sbb
repnz
jge
cld
rclb
test
leave
lea
imul
inc
fcmovb
push
nop
insb
xchg
inc
sahf
mov
pushf
jg
out
and
loope
out
iret
jmp
cmp
lret
mov
mov
in
stos
mov
sbb
mov
jns
lock
in
std
pop
mov
clc
push
pop
xor
xchg
pop
ficompl
mov
mov
cmp
adc
pop
nop
jnp
push
cmc
push
adc
mov
insb
mov
test
mov
adc
jge
inc
pushf
stc
out
outsl
and
pusha
mov
sarl
int
add
jp
or
imul
push
repz
pop
pop
sbb
icebp
mov
cmpsb
inc
addr16
dec
mov
out
adc
sbb
cs
aad
jp
insl
in
ja
pop
cltd
cwtl
push
hlt
test
subb
pop
mov
mov
aaa
inc
xchg
or
mov
faddl
pop
aad
jg
shrl
clc
push
lods
jg
repnz
and
xor
inc
mov
out
ja
call
mov
roll
jge
ret
dec
dec
pusha
stc
pop
push
movsl
lea
out
sub
pop
inc
insl
add
mov
mov
js
pop
jns
adc
add
aas
push
mov
lods
out
sub
lret
shlb
in
mov
jns
sub
mov
sbb
cmc
gs
cmp
xor
ja
dec
xor
adc
add
xor
pop
mov
push
out
pop
mov
xlat
je
add
pop
pop
lea
adc
push
stos
push
inc
jge
addr16
mov
enter
or
push
rorb
sbb
adc
inc
js
xchg
movsl
imul
outsb
sbb
jg
lcall
push
jae
xor
cmc
mov
ret
jnp
mov
cwtl
into
xchg
test
and
mov
jno
mov
pop
add
std
mov
mov
xchg
add
and
repnz
incl
in
cmp
in
test
mov
aam
dec
repz
out
int
fstl
test
lcall
aad
cmpsl
ret
lcall
in
std
fbld
fdiv
pop
popf
mov
mov
pop
and
mov
faddl
push
in
cmpsl
stos
inc
jp
clc
lods
inc
adc
push
cmpsl
inc
sbb
dec
lret
aam
push
jae
pop
push
mov
out
int3
aaa
pop
pop
enter
lcall
push
movsl
xchg
mov
or
aad
push
shll
mov
pop
lcall
and
and
lcall
mov
add
ds
push
movsb
out
aad
jg
lods
adc
mov
popa
test
popa
or
mov
inc
leave
inc
jecxz
addr16
je
xor
jmp
and
pop
pop
sub
popf
out
xchg
repz
mov
pop
imul
lret
xor
xor
push
lods
push
mov
out
std
ljmp
mov
cmp
sbb
lahf
mov
xchg
mov
lahf
mov
xchg
out
inc
mov
push
inc
iret
dec
pop
icebp
das
loop
pop
xchg
push
shrb
movsb
pushf
cmp
sbb
jp
mov
sbb
in
pop
sbb
inc
dec
and
push
lods
push
dec
pop
or
add
cli
jne
adc
and
inc
adc
sti
or
imul
pop
notb
xor
jo
filds
repz
mov
add
es
insl
gs
mov
in
ds
cli
das
add
lods
inc
and
lret
incl
pusha
in
cmpl
cmp
xchg
sbb
fmuls
or
sub
mov
or
dec
sti
sbb
sub
mov
out
mov
or
lea
pop
xchg
stos
and
imul
scas
jge
clc
push
jb
addl
mov
test
lds
in
enter
bound
sub
lret
dec
or
sub
sub
outsb
cld
clc
ret
mov
rcrl
and
sub
push
inc
ret
jle
cmp
lods
mov
dec
inc
push
out
jno
xchg
cwtl
sbb
test
mov
jl
je
pushf
cli
das
movsl
cmpl
les
jo
pop
popf
xor
push
cmpsl
repz
ret
sub
test
mov
sbb
jne
cmpl
and
push
dec
jmp
aad
add
xor
adc
jnp
sub
cld
jmp
or
push
dec
test
scas
popa
rcl
add
xlat
fcomps
ja
stc
inc
dec
dec
xlat
fdiv
arpl
dec
stos
push
call
data16
outsb
stos
int
inc
jp
cmc
test
mov
jns
out
sti
pop
and
mov
mov
test
dec
in
out
adc
lahf
shlb
data16
sti
iret
fldt
adc
push
fcomps
dec
cmc
dec
in
dec
insl
iret
mov
inc
pop
mov
add
cmpsb
and
inc
mov
jns
insl
pop
xor
mov
mov
mov
movsb
push
loope
xchg
out
push
pop
out
addl
pop
lahf
in
adc
into
js
mov
xlat
mov
inc
ljmp
add
lahf
fldl
cmp
ret
hlt
xchg
jnp
cli
xlat
sbbl
xchg
ficomps
pop
insl
cmpsl
outsb
xor
outsl
fdivl
subl
in
pop
sub
adc
ret
loopne
xor
or
inc
test
mov
cmpsb
insb
in
mov
rclb
int
pop
aaa
xlat
xchg
lret
cmpl
add
outsl
xor
sbb
bound
mov
pop
sbb
js
cltd
stos
xchg
cltd
dec
mov
test
rcr
scas
jae
pop
repz
popa
pop
adc
jbe
jae
mov
nop
sbb
jne
xchg
cmp
inc
stos
add
ret
dec
push
out
jle
and
fidivs
outsb
push
inc
mov
addr16
push
lcall
inc
mov
inc
pop
pop
jmp
mov
cmp
xchg
faddl
rcrl
pop
mov
ja
sbb
adc
ds
sbb
jmp
sub
call
stc
sbb
push
sbb
inc
scas
pushf
shll
or
pop
enter
nop
and
adc
ja
ljmp
pop
or
aad
dec
aas
in
xchg
sub
cmp
ljmp
pop
arpl
int
or
arpl
scas
mov
in
fiadds
adc
and
push
loope
loopne
mov
imul
sub
scas
inc
sbb
ds
mov
push
ljmp
jmp
lret
pushf
inc
sbb
out
dec
movsl
sbb
fs
lods
mov
sarl
aad
push
or
mov
or
test
sbb
push
les
addl
pop
adc
cs
daa
inc
andl
jnp
lea
mov
jg
int3
cmp
inc
and
pop
push
cmpsl
iret
fwait
ljmp
add
fnstsw
rcrl
repnz
ret
movsb
cmp
sub
xor
cmc
add
and
repz
and
andl
ljmp
ljmp
xor
lods
add
jae
cli
lds
cmpsb
shlb
cmp
je
inc
cmpl
mov
xlat
xor
push
icebp
sbb
pop
cmc
gs
call
js
mov
push
push
mov
in
cmp
inc
ds
fsubrl
pop
cmp
or
xor
rclb
mov
jo
aad
cmp
lahf
insb
inc
push
inc
jmp
or
movsl
xchg
inc
inc
or
add
imulb
add
jecxz
xor
aas
jae
ds
pushf
pop
sbbl
push
xor
sarb
mov
cli
stos
push
mov
decb
sbb
cmpsb
outsl
and
mov
jp
lcall
mov
jecxz
pop
lods
sbbb
push
scas
dec
inc
addr16
add
jnp
nop
push
daa
cwtl
mov
bound
loopne
push
adc
push
mov
lea
cmc
sbb
xchg
popf
in
push
in
cmp
out
sbb
inc
test
mov
cmp
dec
mov
clc
mov
fbstp
insb
mov
rcrl
ficompl
pop
repz
adc
loop
mov
mov
test
dec
loop
insl
push
jmp
test
jno
push
xlat
rcrl
mov
mov
imul
icebp
jnp
dec
and
movsl
push
out
leave
scas
mov
mov
rclb
add
sbb
repnz
stc
jo
icebp
cmp
inc
testl
mov
movsl
add
xor
shrl
fsubs
dec
add
es
outsl
sbbb
shll
aam
pop
popa
mov
pop
jge
inc
movsb
jg
add
push
sarb
xchg
sub
mov
xchg
sub
sbb
inc
in
into
sbb
xchg
add
or
jns
add
jecxz
jbe
aam
push
adc
xor
push
xchg
out
test
cmc
xchg
fsubl
cltd
xor
cmpsl
or
les
pop
jle
pop
in
movsl
or
sti
pop
inc
sub
pop
bound
jmp
pusha
fdivrp
or
add
adc
or
cmp
xchg
dec
fisttps
ret
mov
fdivrs
outsb
out
out
xchg
in
in
xchg
bnd
mov
ret
std
adc
pop
add
sub
mov
pop
shlb
lret
cmpsl
sub
loopne
push
aam
mov
jle,pn
push
mov
in
test
es
xchg
jge
mov
xchg
inc
pop
mov
decl
scas
and
pop
mov
dec
loopne
sbb
into
aas
or
mov
and
lds
xor
outsl
outsb
sbb
xor
mov
xchg
xlat
xchg
sahf
xchg
in
or
dec
mov
pop
scas
add
jae
mov
js
jg
push
cwtl
addr16
jbe
sbb
cltd
mov
outsl
mov
adc
fcompl
cmc
jbe
inc
xchg
into
jno
and
mov
roll
dec
fstps
add
fdivp
loopne
in
data16
shrb
mov
nop
ss
jp
sbb
enter
jo
pop
call
dec
sub
cli
pop
imul
movsl
aam
push
and
popa
loopne
adc
lock
shlb
jns
mov
sarb
push
ljmp
jno
xlat
push
mov
aam
xor
cmpsl
push
or
adc
jp
in
fdivl
loop
cmpsb
pushf
xor
xchg
dec
jno
inc
inc
pop
push
leave
dec
mov
out
xchg
xchg
in
pop
dec
mov
movsb
in
mov
pop
sub
mov
mov
fldl2t
pop
or
rol
rol
cwtl
test
cmp
and
fsts
ret
cmp
cltd
jno
sub
insb
fildll
iret
es
dec
mov
fdivrl
mov
nop
inc
cmpsb
fstl
mov
pop
das
es
lock
or
andb
push
or
mov
mov
test
sbb
popf
leave
mov
inc
mov
xchg
jg
mov
fists
sbb
int3
dec
xchg
mov
fcmovb
sbb
and
xchg
into
in
inc
aam
hlt
das
enter
insl
cmc
xchg
insl
scas
sahf
rclb
jne
ja
rol
ret
mov
adc
sbb
fldt
xlat
pushf
pop
lds
jbe
sub
xor
or
inc
cmp
insl
jmp
jnp
ds
mov
je
jecxz
scas
sub
ja
mov
test
outsb
push
lods
sbb
psrad
and
dec
cmp
xor
lods
fwait
xor
outsb
jecxz
sbb
mov
xor
test
sub
jb
xchg
jg
pop
test
je
mov
sti
pop
outsb
pushf
sbb
and
xchg
xchg
inc
rorb
lock
fistl
shl
shrl
dec
hlt
mov
mov
es
adcb
inc
mov
shlb
push
jmp
inc
sbb
ficoms
add
sub
xchg
mov
or
jl
es
push
pop
test
shll
and
mov
fcmovnbe
pop
xchg
dec
mov
fnstenv
jp
ja
fsubl
popf
inc
rolb
arpl
repnz
insl
jo
mov
lds
mov
insb
xchg
add
test
int
stos
and
pop
jns
mov
lcall
xchg
call
or
dec
cmp
inc
pop
mov
lds
pop
in
dec
cmc
arpl
and
rolb
sub
adc
movsl
data16
pop
insl
push
enter
push
mov
cltd
mov
push
mov
add
test
aaa
repnz
sti
daa
mov
mull
sub
test
daa
and
pop
xchg
int
sbb
test
jno
cmp
push
xor
xchg
push
test
add
inc
cld
mov
jo
repz
inc
sub
rcll
dec
push
in
jp
in
push
adc
inc
stos
les
adc
int
adc
int3
pop
cmp
mov
push
or
stos
test
test
and
push
jle
repz
imul
orl
mov
cvtdq2ps
aas
stos
aam
scas
aad
btc
cs
mov
pop
aad
dec
push
jge
mov
jns
ret
les
mov
in
cltd
cmp
or
imulb
or
mov
jmp
cmp
fcmovbe
and
mov
bound
fwait
mov
or
lcall
aaa
pop
into
addl
dec
dec
or
cmp
mov
scas
adc
jmp
inc
jg
mov
adcl
mov
or
mov
shl
add
xchg
mov
mov
dec
lods
cmp
aaa
ds
and
or
jge
push
lods
push
lcall
lea
fs
mov
lods
push
lret
je
std
jne
rcrl
cltd
cmpsl
jmp
pop
lahf
xor
in
mov
inc
mov
sbb
adc
lret
int3
das
std
jmp
icebp
push
xchg
push
js
fimull
push
jle
and
jo
test
subb
add
pop
pop
test
stc
flds
fidivs
or
call
loopne
pop
imul
mov
inc
mov
push
das
addr16
xor
movsb
jae
out
mov
xchg
outsb
sub
mov
es
adc
popf
and
sub
loope
notb
sbb
jo
sub
sahf
mov
dec
or
notl
xchg
lcall
ja
fisttpl
mov
push
mov
add
pop
xor
xor
movsb
push
fsub
mov
cmpsb
test
pop
lods
sar
sarl
add
lret
into
fmull
mov
sbb
lock
push
push
xchg
lds
cmpsb
out
and
cmp
lret
cmp
and
jo
xor
pop
mov
sub
jg
insl
inc
sub
mov
and
fstpl
jno
dec
push
xor
dec
pop
xor
mov
in
jnp
xchg
ss
sub
int3
rclb
add
add
mov
add
test
repnz
out
dec
dec
jb
pop
scas
push
cmp
data16
xor
int3
mov
fcompp
nop
sub
dec
sbb
sbb
mov
push
test
iret
movss
ret
jae
loop
test
push
loope
or
arpl
dec
stos
inc
jno
data16
dec
fstps
shl
mov
mov
sarb
lods
xorb
in
ss
addr16
ljmp
pop
movsb
jno
sub
mov
xor
ret
jle
shll
push
or
jns
and
fcompl
jp
push
in
jne
test
iret
daa
mulb
shll
ja
hlt
sub
pop
push
addb
sbb
fdivl
mov
xor
pop
adc
sub
mov
ret
repz
dec
testb
jmp
sub
fistpll
fstl
nop
and
aaa
push
mov
loopne
cwtl
cmp
inc
addr16
movsl
dec
xchg
dec
sub
dec
fwait
jecxz
les
loopne
je
mov
xlat
mov
das
add
push
or
dec
and
pop
push
in
cmp
out
cld
push
push
mov
cwtl
lock
xchg
dec
inc
cmp
js
or
sahf
and
sbb
loop
pop
sahf
scas
dec
pusha
pop
mov
aaa
jo
ljmp
lods
cli
lahf
sahf
jne
xchg
scas
fmulp
push
cld
lcall
xor
out
lock
or
xor
mov
ret
daa
xchg
mov
dec
rclb
pand
mov
fs
pop
ds
mov
pusha
dec
divb
loopne
loopne
jmp
add
outsl
lahf
outsl
push
out
mov
shlb
and
inc
pop
mov
lods
orl
or
lock
in
ftst
jg
adc
jb
mov
lods
ret
dec
jle
cmc
movsb
xor
and
mov
popf
jecxz
ds
cmp
jne
in
mov
notl
aaa
std
test
cmp
scas
push
sbb
ret
push
je
sub
data16
bnd
stos
mov
jge
add
mov
jbe
out
lret
fstl
push
mov
cmc
adc
lods
xor
cmpsb
mov
pop
repnz
sbb
shrl
daa
inc
add
ds
dec
push
aad
arpl
popa
into
dec
mov
cmpl
lahf
les
ljmp
ja
shlb
lods
mov
or
mov
mov
cmp
xchg
ja
fsubr
lahf
inc
sti
lds
inc
xchg
mov
stos
movsl
in
push
lea
sti
shrb
push
xor
pop
lcall
adc
pop
cmp
movsb
fs
or
xchg
repz
push
pop
push
dec
push
mov
xlat
rcll
sub
lds
int3
imul
jae
test
neg
bound
push
insb
pushf
repnz
jle
nop
je
mov
mov
pushf
jns
ljmp
mov
push
out
lods
inc
and
mov
dec
pop
aas
ffree
pop
andps
in
dec
sub
mov
mov
lret
ficoml
mov
int3
lock
dec
mov
fldenv
mov
lods
lahf
lret
mov
xorb
mov
fldl2e
and
into
and
xor
filds
xchg
mov
xor
mov
scas
orb
push
fdivrl
adc
adc
cmp
lcall
test
sbbl
xor
and
fists
lods
mov
inc
sub
jg
sub
mov
dec
stos
and
andb
rorb
xchg
jmp
test
sub
mov
lds
push
jecxz
add
dec
incb
and
fsubrs
mov
sti
fs
sbb
fdivl
js
xor
sbb
xor
je
pop
sbb
jle
xor
jbe
inc
cli
stos
es
mov
xor
stc
or
add
cmp
aad
ss
aaa
xchg
mov
add
dec
fwait
or
inc
push
lods
jb
push
icebp
xor
jns
mov
xchg
outsl
add
sahf
sub
pop
cmp
in
mov
outsl
sbb
notb
lods
popf
cmp
test
lret
mov
roll
fs
jge
ret
out
pop
push
or
adc
stos
or
jmp
cmp
adc
daa
pop
pushf
xor
pop
lret
mov
ds
cmp
sbb
mov
xchg
cltd
out
adc
mov
fmull
xchg
pop
cmp
add
and
and
cmpsl
mov
movsl
xor
xchg
in
out
subb
xchg
hlt
and
jae
out
andb
mov
nop
daa
pop
cli
inc
ret
dec
scas
cmp
stos
les
js
dec
gs
cmp
into
xchg
cmpsb
dec
in
loop
and
shrb
mov
out
bound
andb
std
xchg
scas
iret
das
fcmovb
mov
stos
add
xor
cmp
push
lcall
test
rclb
or
jmp
subl
or
pop
fdivrl
arpl
jae
mov
sub
popl
stos
movsb
lahf
jb
lds
dec
mov
fnstsw
mov
adc
mov
dec
es
je
lock
and
add
add
mov
test
xchg
lods
cmp
and
lods
inc
cmc
nop
popf
jne
pop
adc
mov
mov
push
je
pop
dec
sub
xlat
das
pop
and
adc
mov
jno
outsl
mov
inc
mov
mov
xchg
enter
arpl
push
inc
scas
add
mov
sti
push
dec
or
add
push
and
mov
cwtl
test
jecxz
push
mov
mov
push
jo
fs
pop
xchg
subb
jmp
out
jecxz
loopne
in
dec
cmp
add
cmp
movsb
test
scas
pop
pop
cmp
add
fstpl
and
dec
dec
arpl
or
stos
sub
fsubr
ja
pop
inc
fisttpll
xchg
andl
sbb
mov
bound
pop
imul
adc
push
xchg
xchg
sbb
lods
shrl
push
fisttpll
popf
pop
addl
ljmp
ljmp
andl
add
mov
xchg
fisttps
repz
ja
mov
ficoms
push
add
pop
cmp
add
xor
movsl
test
test
mov
adc
adc
imul
sbb
stc
lock
loop
popf
jle
lret
jg
popa
and
inc
test
xchg
icebp
aas
ret
pop
dec
fdivrl
push
push
insb
xlat
repz
xchg
mov
add
es
sbbl
mov
ljmp
dec
sti
xchg
rorb
in
mov
out
mov
sbb
data16
adc
mov
jle
fimuls
and
or
mov
sbb
ds
mov
push
cwtl
mov
mov
shll
xchg
lods
ljmp
pushf
sti
out
dec
out
push
mov
jbe
lds
data16
dec
enter
es
mov
mov
pop
mov
jle
cmpsb
scas
or
cmp
in
push
mov
fldl
fildll
fprem
and
jl
mov
or
js
sub
push
loop
fs
stos
mov
mov
aaa
data16
lea
and
fs
outsb
daa
jge
repnz
in
pop
sbb
pop
adcl
mov
and
push
and
mov
mov
pop
cmp
arpl
cmp
das
notb
add
sbb
lret
jb
aam
push
stos
inc
xchg
fdivrs
cltd
popa
leave
or
enter
xchg
mov
popf
dec
les
cwtl
clc
pop
dec
popa
mov
stc
dec
mov
add
jo
add
into
or
adc
lret
mov
lret
test
outsl
dec
data16
fcoms
mov
cmc
rol
xor
jmp
js
dec
cmp
aam
mov
dec
sbb
jne
lahf
divl
sub
adc
out
add
xor
push
pushf
cld
fiaddl
fdivr
aas
push
xor
das
push
loopne
rcr
sahf
ss
mov
sbb
lods
and
cmp
out
aad
mov
in
fnstenv
push
es
sbb
add
xchg
sbb
int3
lret
and
rorl
mov
aaa
sbb
mov
mov
bound
mov
pop
jl
push
jno
push
or
inc
mov
loopne
sti
push
dec
inc
stc
jnp
inc
fwait
jg
sti
xchg
xor
arpl
inc
push
js
mov
sbb
iret
ret
in
rorb
fdivrs
ret
sub
inc
jg
in
jo
repz
lahf
xchg
je
mov
push
sub
cmp
pusha
or
mov
xor
aam
push
movsb
addr16
xor
push
fcoml
sahf
sub
mov
test
scas
xchg
pop
mov
lods
and
jbe
cmp
push
xchg
cltd
std
clc
sub
test
lret
and
call
sub
mov
and
popf
cmp
add
push
inc
add
js
lcall
sahf
mov
shrl
add
jnp
xchg
jno
std
cmp
lock
pop
xchg
pop
or
fbstp
test
push
lea
xor
sahf
push
arpl
sub
cmp
in
push
dec
call
outsl
test
xacquire
movsb
or
scas
pop
dec
xchg
addb
cmp
icebp
cmpsb
xchg
and
mov
ja
lret
repnz
sbb
jmp
inc
mov
packuswb
pop
hlt
sbb
ficoml
jmp
or
orb
xor
and
pop
jmp
dec
out
mov
adc
cwtl
aas
pushf
push
dec
dec
movsl
icebp
jle
fnsave
jnp
sbb
test
push
lods
pop
dec
or
xchg
popf
ret
sar
mov
push
sbb
loop
arpl
pop
lock
push
pushf
mov
lcall
push
sub
push
fs
pop
add
ficomps
pop
or
cli
out
sahf
sub
shlb
push
outsl
stos
sti
fwait
test
push
jg
mov
aad
inc
fstl
sub
sahf
cmp
inc
lock
push
lock
icebp
fstl
adc
repnz
bound
inc
dec
dec
jae
ljmp
lret
or
pop
call
cwtl
cmp
push
add
mov
fbstp
jbe
push
arpl
std
adc
int
inc
decl
sti
sahf
pushf
dec
pop
into
mov
popa
fcompl
lahf
ss
ds
mov
push
fidivs
hlt
cmp
mov
test
int
cwtl
std
mov
inc
dec
push
xchg
add
xor
stos
out
sbbb
or
mov
loope
test
sub
mov
mov
testl
sbb
iret
mov
sarb
mov
imul
xchg
pushf
lret
ficoml
mov
adc
inc
test
push
sub
add
mov
int3
mov
shl
cli
lock
neg
std
push
xor
jge
out
cmp
jbe
xor
mov
loope
pushf
dec
fadd
pop
or
loopne
mov
outsl
mov
inc
lea
testb
add
insb
mov
add
lods
in
dec
inc
push
mov
js
out
data16
jns
xor
lcall
push
mov
jecxz
out
mov
add
add
mov
xchg
jg
testb
das
or
push
mov
jecxz
in
add
xor
push
fcompl
jnp
dec
in
inc
jge
pushl
insl
lret
push
jge
aas
fninit
add
pusha
lcall
lcall
pop
cmp
imul
add
test
cmc
mov
ja
test
test
inc
jo
xchg
loope
test
or
fidivrs
lods
adc
movsl
and
shl
loope
aam
push
imul
icebp
jae
scas
jmp
and
ja
add
sbb
ljmp
dec
imul
jecxz,pn
inc
dec
insl
stc
fcoml
popf
xchg
lock
into
movsb
jle
adc
add
es
call
push
add
sbb
mov
movsl
daa
into
mov
rol
outsb
add
scas
nop
imul
adc
ret
jmp
mov
repnz
icebp
mov
fnstenv
negb
mov
push
test
loope
push
pop
cwtl
inc
sbb
clc
cmp
orl
faddl
int3
ss
ds
cltd
xor
jo
cld
aam
jne
sub
xchg
vpsubusb
sbbb
dec
add
sarb
addr16
mov
mov
add
sti
out
sbb
jo
cli
or
in
mov
and
shl
enter
jb
xchg
mov
mov
pop
adc
cli
shrl
cmpsl
iret
adcb
cmp
mov
fldcw
jecxz
pop
cli
and
aaa
sub
xchg
dec
push
fnstenv
mov
xchg
xchg
sti
ljmp
push
mov
sbb
cmc
push
in
inc
add
test
mov
inc
test
lds
dec
rcrl
test
loopne
repz
out
test
movl
mov
daa
inc
loope
mov
sub
aam
push
rcrl
add
popf
push
filds
mov
dec
call
lods
xor
pop
data16
jae
pop
jne
movsl
push
insl
js
out
push
sbb
fdivl
add
inc
sti
jbe
ret
hlt
dec
mov
mov
rorl
fmuls
mov
sub
mov
or
fcmove
daa
adc
orb
out
cmp
int3
pop
shl
inc
std
mov
das
push
cli
pushf
mov
shr
gs
cmp
out
jmp
sbb
dec
sahf
aaa
push
mov
jge
sbb
pushf
loop
inc
and
add
call
or
pop
or
mov
or
das
dec
pop
add
in
fwait
mov
es
imul
push
pop
imul
or
mov
ret
mov
popa
mov
pop
xor
xchg
pop
lock
je
push
in
push
adc
lret
daa
je
pop
mov
xchg
pop
lods
xchg
hlt
addr16
jae
sub
mov
add
scas
xorb
mov
test
or
divb
dec
outsb
repnz
dec
sbb
in
aam
call
inc
fisubrl
jmp
jp
sar
add
test
into
add
xor
daa
mov
xor
aas
and
pop
movsb
repz
xor
sub
hlt
xlat
adc
and
shll
mov
mov
aam
movsb
cmp
sub
push
in
jl
push
sbb
mov
dec
gs
movl
ds
les
sbb
dec
mov
mov
sbb
and
in
cld
mov
xor
and
sbb
pop
shrb
in
movsb
in
ret
fldl
mov
xchg
mov
cltd
add
xchg
mov
rcll
nop
cmc
in
imul
cs
mov
push
inc
fwait
sahf
shrl
test
mov
roll
loopne
mov
daa
inc
xor
cli
mov
aaa
mov
in
rcl
cmpsb
popa
jb
addr16
and
xchg
add
jge
push
cwtl
pop
lret
push
movsb
add
lods
sub
mov
js
cmp
loope
push
or
push
add
adc
nop
jne
pop
icebp
imul
js
or
xchg
into
ficoml
xchg
test
push
in
sub
push
cmpsb
ljmp
pusha
ds
xchg
jmp
test
je
pop
inc
stos
mov
xlat
xchg
push
out
scas
fsubrl
dec
hlt
movsb
stc
imul
inc
dec
inc
lret
bound
pop
aad
jmp
ret
xor
adc
pop
in
flds
ds
xor
jmp
fdivl
jbe
imul
je
mov
jge
jmp
pop
outsl
mov
clc
notl
xor
xor
decb
push
or
sub
shl
inc
out
adcb
test
adc
arpl
addr16
sbb
inc
and
cmp
ss
pop
call
loopne
mov
cmpsl
je
inc
push
cmp
aas
inc
mov
lods
mov
fstl
mov
mov
ja
arpl
push
cli
dec
je
cmc
mov
cmpsl
inc
and
dec
sbb
ret
insb
xor
or
adc
mov
dec
jmp
inc
mov
cli
or
fcoms
jmp
or
pusha
mov
jmp
pop
imul
push
icebp
jae
cmp
js
ja
pop
call
ds
sbb
popa
daa
adc
or
adc
test
leave
cltd
ret
dec
mov
sahf
cwtl
in
pushf
leave
mov
sub
in
ret
mov
je
imul
fisttpl
repnz
sub
or
scas
pushf
into
in
int
aas
lret
pop
shlb
dec
pop
and
mov
or
es
xchg
push
jge
jnp
jnp
addr16
push
jbe
pushf
hlt
aas
dec
mov
test
jp
mov
xchg
lods
xor
test
loop
xchg
cmp
addr16
sub
dec
xchg
add
sub
int
addl
cmc
pop
jbe
shl
ja
das
mov
pop
xchg
lcall
sub
pop
jns
mov
xchg
mov
std
dec
loop
das
sbb
adc
ret
mov
inc
repz
push
xor
dec
dec
dec
aam
test
lods
lea
lds
and
shll
mov
xchg
bnd
fldl
incb
or
lea
out
cmp
mov
dec
fbstp
lds
mov
cltd
xor
daa
push
test
push
xchg
add
sbb
jp
adc
xchg
push
push
aas
jmp
push
xchg
negl
fiadds
fs
aas
push
roll
sub
add
inc
or
stos
inc
scas
dec
addr16
inc
ror
sub
push
mov
in
sbbb
jge
add
sarb
call
cmp
cmp
idivl
scas
int3
cmp
cmp
or
jns
ret
xchg
sub
push
jo
andl
jno
popf
fs
das
and
pusha
or
dec
aas
fiaddl
bound
in
cmp
aad
call
adc
fisubs
lods
inc
xor
pop
arpl
mov
mov
and
mov
mov
mov
or
lea
push
sahf
lods
loopne
mov
mov
aaa
dec
nop
mov
outsb
outsl
les
mov
mov
stos
inc
inc
xlat
dec
mov
sahf
in
pop
cltd
test
push
mov
mov
test
int3
push
push
enter
ja
mov
inc
pop
mov
inc
add
and
jae
loop
dec
fdivrs
dec
shrl
daa
mov
lahf
rcrb
repnz
and
xor
push
jne
fwait
mov
cmp
sbb
call
lcall
repnz
dec
mov
mov
mov
pop
mov
push
popa
out
xchg
jne
and
idivl
cmp
fidivl
int
inc
sti
jecxz
mov
xchg
imul
lock
out
gs
cwtl
pop
lret
jne
fnstcw
aad
les
jno
jnp,pn
mov
mov
pop
test
scas
or
pop
and
xor
push
sbb
fmull
cmpsb
mov
push
jge
shrb
out
aaa
mov
imul
addr16
aad
pop
push
ret
jp
in
fld
in
cmp
sarl
or
xorl
cmp
or
mov
jmp
lret
enter
dec
jmp
mov
mov
int
mov
jmp
sub
jno
or
push
popf
pop
jbe
xchg
xlat
jns
mov
jbe
inc
sub
mov
pop
aas
or
xor
pop
inc
push
jbe
fwait
jne
stos
xor
pop
cmp
or
add
in
iret
mov
xchg
dec
in
push
aaa
rorl
stos
mov
out
pushf
mov
cmc
push
jnp
mov
outsb
push
cli
rolb
mov
xchg
push
cmp
repnz
mov
jle
sti
sub
push
jl
mov
xor
push
adc
lret
xchg
and
lret
test
mov
fdivr
cmp
mov
mov
fisubs
cmp
jl
cltd
mov
vdivpd
call
imul
ret
mov
ja
mov
or
lcall
sbbl
inc
outsb
popf
negb
sub
xchg
repz
ds
mov
pop
addr16
fstps
hlt
sub
and
xchg
add
mov
mov
es
push
add
test
outsb
sub
push
imul
aas
pop
or
iret
loop
lods
mov
lret
jns
hlt
push
xchg
xchg
mov
inc
jecxz
pushf
cli
push
inc
loopne
pushl
push
sub
loopne
cmp
push
test
adcb
dec
movsl
xor
adc
sub
or
mov
sbb
nopl
add
pushf
mov
fsubr
dec
in
pop
add
xchg
add
push
mov
test
pop
mov
mov
mov
leave
and
dec
jns
cmc
stos
lock
leave
fsubrl
je
xchg
jno
push
xchg
lods
or
cs
push
push
pop
popf
fisttpll
jge
jb
push
test
aaa
or
or
mov
sbb
xchg
sub
out
dec
cmc
jg
lods
mov
rolb
aas
sub
pop
push
add
sbb
lods
jb
jo
fsubrs
int3
and
add
cltd
adc
and
add
movb
pop
outsl
lds
add
loopne
and
sub
sbb
mov
data16
mov
inc
sar
add
sbb
pusha
mov
rolb
icebp
pop
or
stc
sahf
aad
cmc
movb
pop
jo
cmp
cmp
sbb
lea
add
in
inc
mov
add
aad
int
mov
lods
xchg
inc
xchg
inc
mov
out
mov
repz
insl
sbb
jp
and
xor
inc
dec
sub
pop
jno
orw
fs
in
inc
sbb
int
mov
sbb
jae
xchg
mov
out
lods
call
insl
jge
mov
dec
cmpsb
and
mov
daa
xchg
sub
call
cld
push
outsl
les
stos
dec
mov
jl
daa
cld
lock
xchg
roll
jmp
movsb
insl
mov
mov
cmpsb
jmp
scas
sub
adc
and
mov
ds
pop
mov
jp
in
lds
sbb
pop
push
sub
lds
pop
add
dec
mov
lahf
int
jg
fldl
dec
pushf
push
inc
pop
add
fs
xchg
mov
in
mov
stc
movsl
add
in
adc
pop
push
xor
xchg
aaa
and
xor
pop
pop
mov
dec
sub
lahf
cmp
xchg
popf
jbe
lods
jecxz
rcl
push
and
fnsave
mov
sbb
cld
inc
mov
int3
fmulp
sbb
test
push
jle
insl
jns
add
daa
pop
scas
xor
pusha
stos
add
out
sbbb
sbb
mov
lahf
je
pop
int3
and
push
sbb
xchg
xor
lcall
jne
sbb
mov
dec
cmpsb
xchg
test
xchg
sub
mov
cmp
adc
xchg
int
rcrl
push
push
and
xor
or
mov
sub
jmp
mov
or
mov
sub
fwait
cmpsb
testb
jbe
or
enter
pop
inc
pop
fstps
vpcmpgtw
lahf
stos
jns
or
jg
es
xor
inc
scas
cltd
loope
cmp
mov
mov
fwait
jns
ds
lret
push
dec
xchg
mov
popf
or
sti
mov
fidivs
ljmp
mov
cmp
pop
mov
movups
in
pop
out
push
mov
call
out
mov
mov
pop
fstps
popf
iret
or
dec
shrl
clc
shl
repz
ret
arpl
pop
xor
push
out
repz
dec
adc
jae
cmc
popa
je
cmp
imul
mov
imulb
jecxz
cmp
or
ja
popf
inc
shll
js
lds
jle
cmc
scas
ret
jecxz
loope
movsb
push
stos
xlat
testb
mov
test
ljmp
neg
stos
lret
rolb
mov
and
cli
daa
out
fs
pop
in
gs
xor
push
lahf
or
mov
repnz
xchg
mov
mov
pop
inc
clc
mov
stc
nop
push
push
mov
sub
lock
andb
cmp
lock
dec
mov
adc
cmc
adc
jp
test
mov
jnp
clc
ret
loope
mov
sub
sub
dec
out
aam
sbbl
pop
inc
loope
out
mov
cmpsl
and
dec
cmc
jge
mov
repz
sub
arpl
sbb
stc
nop
push
cmp
lcall
pop
scas
call
or
lods
inc
fucomp
popa
mov
repnz
lods
dec
cmp
fidivrs
jp
cmp
stos
lods
add
mov
fimuls
sub
dec
out
arpl
inc
xchg
adc
jecxz
sbb
mov
inc
push
je
mulb
and
xor
cmpsl
sbb
lds
push
dec
cmp
adc
adc
cmovs
ss
push
imul
jnp
mov
mov
sub
jne
cmp
or
jbe
xor
or
adc
shrb
lcall
cmp
loop
bound
xchg
mov
push
jp
jns
or
xchg
arpl
push
jb
pop
rcll
jge
outsl
push
jp
sahf
aas
cmc
mov
fldt
arpl
xchg
xchg
je
sahf
scas
and
ficomps
and
mov
loop
push
adc
lret
and
ljmp
out
and
mov
icebp
insb
ja
arpl
enter
or
pop
mov
ffreep
pop
jns
jecxz
imul
sbb
sahf
jbe
mov
arpl
or
dec
pop
adc
cltd
pop
jmp
push
mov
mov
lret
sub
cltd
stc
das
sahf
and
or
out
adc
fwait
xor
loopne
xchg
inc
loopne
push
shl
jnp
xchg
addl
adc
sub
in
sub
sarl
mov
fildll
cmpsb
test
ljmp
mov
sti
jbe
lahf
addr16
jp
xor
es
adc
ljmp
lods
mov
pop
test
ret
mov
fists
adc
mov
pop
jmp
movsl
hlt
jb
xor
mov
scas
mov
adc
inc
fstps
push
push
cli
movsl
jne
sub
movsb
icebp
inc
inc
dec
ss
insb
xchg
call
xchg
push
cmpsl
adc
popa
insl
cmpsl
dec
rcrb
adc
decl
xor
mov
cmp
xchg
jp
les
mov
inc
outsb
clc
cmpsl
mov
pop
mov
aad
jne
loopne
and
pusha
and
pop
pusha
cmp
add
pop
push
pop
rcrb
and
jae
dec
add
sbb
dec
shlb
xchg
xchg
cltd
test
jns
ret
loop
inc
jns
xor
jnp
inc
gs
sub
loop
stc
fsubrs
mov
sbb
mov
ret
dec
orl
inc
push
or
lock
dec
scas
xchg
pop
dec
xlat
repz
pop
sbb
ret
add
cltd
movsb
cmp
pop
and
mov
std
push
mov
and
mov
fidivl
fbld
out
mov
mov
scas
sub
push
push
sbb
xor
cwtl
push
push
ret
push
jb
lret
dec
inc
negb
int3
pop
shl
push
idivl
loope
sahf
dec
pop
repnz
rorb
cmp
imull
sahf
jge
movl
loopne
mov
push
in
fs
je
cmp
pop
dec
les
jg
inc
lea
enter
adc
stos
jp
jno
cli
mov
enter
clc
imul
mov
ss
leave
mov
mov
push
aad
int
testb
jnp
pop
pop
pop
ss
std
push
and
dec
outsl
push
sub
add
dec
jecxz
mov
dec
clc
xchg
pop
and
cmpsb
getsec
shrb
je
jb
lret
pop
dec
iret
mov
cmp
cmp
imul
lock
and
cmp
pop
fbld
jns
js
sub
mov
xchg
inc
xchg
test
add
pop
faddl
xor
jne
loopne
or
xchg
scas
fildll
dec
inc
push
rcl
in
outsl
sbb
jae
fidivrl
push
test
jns
push
int3
push
ljmp
cwtl
sbb
adc
ss
imul
je
cwtl
cmp
sub
xor
mov
xchg
clc
cltd
push
push
xor
push
rorl
das
mov
hlt
test
jle
cltd
out
push
call
leave
je
loop
fs
inc
xchg
xor
pop
cltd
pushf
cld
outsl
pop
xchg
pusha
mov
push
jne
dec
sbb
das
pop
call
and
mov
nop
dec
pop
pop
movsb
clc
mov
jle
rorl
dec
add
sbb
or
stos
add
mov
daa
jecxz
mov
inc
je
scas
and
popf
inc
ss
lock
xchg
ret
mov
popa
adc
shrb
ljmp
popa
xorl
jge
mov
jno
jge
in
lock
push
in
aas
jnp
nop
and
clc
sbb
cmp
xchg
leave
arpl
addr16
pop
les
gs
out
and
fnsave
pusha
andb
or
popf
sub
mov
cmp
inc
mov
dec
mov
jge
adc
loope
xchg
xor
xchg
pop
cmpsl
xor
cmp
iret
testl
mov
mov
sbb
loopne
xlat
mov
cli
bound
mov
les
jns
push
sbb
enter
insb
adc
adc
inc
xcrypt-ofb
dec
cmpl
iret
jb
pop
and
cmp
jns
jnp
push
mov
push
outsb
xchg
dec
add
fnsave
xor
xor
xchg
push
aam
or
dec
ja
in
stc
sahf
std
ret
mov
jae
jb
sbb
fsubrs
xor
rorl
sbb
imul
iret
ret
fmuls
das
pusha
pop
fidivrl
inc
xor
mov
adc
jge
popf
mov
xchg
push
xor
icebp
jno
adc
xlat
jne
and
int
mov
roll
mov
je
pop
repz
jb
stos
sub
mov
pusha
fcmovnb
cmp
lcall
sbb
shlb
push
or
inc
sub
lods
daa
inc
fldt
leave
stc
stc
push
fists
and
push
and
push
fdivrl
je
sub
dec
rol
lret
test
mov
adc
mov
xor
fiadds
and
addr16
cmp
pop
out
jge
adc
adc
pop
inc
iret
pop
repz
pop
test
add
xor
fnstsw
cs
jp
push
push
repnz
add
outsb
mov
mov
fs
xor
jnp
test
popf
jge
inc
sbbl
mov
iret
es
lods
ss
aas
in
mov
lcall
pop
mov
dec
xchg
das
enter
mov
jle
ds
into
and
out
inc
lods
jmp
sarb
nop
sub
inc
pop
cmc
cld
or
and
adc
pop
cmp
stos
out
pop
add
mov
aam
and
out
push
in
out
lods
outsl
pop
fs
popf
xchg
hlt
lock
mov
aaa
push
mov
js
lds
mov
pop
jmp
out
cmpsl
jp
fnsave
cmp
fwait
jb
rorl
mov
std
cmp
pop
push
push
sahf
lods
xor
pop
addr16
andl
add
pop
sbb
jle
out
push
add
mov
andb
ficoms
imul
cmpsb
shll
orl
xchg
ret
cmpsb
adc
xor
dec
sbb
cwtl
pop
out
xor
cltd
int3
lcall
test
xor
outsb
das
add
cmp
mov
cmp
jle
jmp
sbb
out
push
xchg
fdivl
std
nop
ret
sub
and
jmp
in
jne
xchg
or
fcompl
dec
stos
test
fwait
inc
sub
insl
cmp
xor
shlb
in
das
mov
ret
or
lret
fcmovb
shrb
and
mov
push
or
sub
jns
or
sahf
out
sub
xchg
pop
test
and
repnz
pop
mov
mov
fidivl
and
or
sahf
cmp
sbb
outsl
pop
jmp
or
xchg
fcmovb
push
lahf
mov
movsl
hlt
out
fwait
mov
inc
xor
ret
xchg
cmp
mov
fistl
lahf
insl
adc
filds
mov
imul
xorl
mov
adc
movsl
icebp
movsb
or
xchg
mov
or
sub
pop
in
cmp
push
jae
in
adc
fiaddl
push
add
and
rorb
outsl
cmp
mov
mov
jbe
repnz
pop
jle
dec
jae
push
shll
sub
ret
fmuls
dec
pop
jecxz
shlb
pop
add
dec
pop
imul
je
rcll
pop
jne
mov
jge
jecxz
rcrb
lock
add
shr
bound
xor
pushf
mov
dec
jp
cli
stos
jo
mov
sarb
out
iret
mov
lret
mov
clc
or
jecxz
fwait
shl
cs
jp
cmp
int3
cmp
jecxz
je
out
pop
mov
or
jns
pop
imul
adc
jb
pusha
push
xlat
push
jg
mov
and
jmp
or
add
mov
mov
fldenv
fcmovnb
cli
insl
shrb
loopne
lock
xchg
ljmp
adc
cmp
lret
loop
cltd
cld
mov
pop
xor
scas
cmp
mov
jns
sub
xchg
push
pusha
xchg
test
xor
test
xchg
mov
ljmp
jne
dec
xor
jae
inc
push
push
sbb
pop
jbe
loop
cmc
xchg
mov
mov
clc
pop
sbb
mov
scas
movsb
iret
loope
out
ret
into
push
xor
pop
fimuls
xor
jnp
movsb
stos
xor
jp
xor
dec
cmp
push
daa
cmp
cli
adc
xor
adc
aaa
xchg
jg,pn
inc
mov
inc
mov
sti
adc
nop
fidivrs
lock
loop
mov
gs
mov
mull
pop
dec
cmc
gs
fsts
mov
and
fidivrs
and
push
lds
pop
pop
das
pop
and
cmpsb
stc
repz
shll
add
out
pop
mov
dec
sbb
push
push
idivb
je
pusha
test
sbb
mov
out
xchg
sub
xchg
jae
xor
mov
sbb
add
mov
ret
leave
pusha
cmc
inc
push
xlat
xchg
fidivl
test
push
jnp
sbb
dec
sbbb
dec
sub
cwtl
fdivs
sub
test
fnstsw
inc
pop
in
lods
pop
inc
add
mov
ljmp
outsb
dec
xlat
sub
jo
subl
xchg
test
scas
xor
push
sbb
fisubrl
mov
test
rclb
pop
je
rcrb
and
inc
inc
push
out
inc
sbb
in
xorl
push
es
loope
inc
xchg
mov
arpl
outsb
into
aas
sbb
pop
sub
push
nop
aas
cmpsl
mov
mov
jns
jb
push
inc
dec
add
pop
jle
addr16
and
ds
rclb
cmp
jmp
test
pop
jg
cwtl
lcall
lods
inc
fcom
aas
mov
dec
and
mov
lds
jns
mov
pop
xchg
popf
xor
bound
lret
inc
push
lret
pusha
or
pop
push
les
mov
ficoml
leave
jbe
aad
push
or
pop
lea
movsb
add
inc
mov
in
mov
push
in
or
jmp
in
pop
and
cld
add
add
add
loope
mov
mov
ds
dec
adc
and
adc
rol
inc
xchg
and
push
adc
xor
popf
xor
or
out
inc
inc
sahf
stos
test
xor
fcoms
mov
bound
adc
adc
push
mov
sahf
leave
mov
je
inc
out
mov
rcll
clc
xchg
sub
xchg
scas
mov
push
sbb
mov
mov
pop
and
xchg
aas
mov
lahf
mov
in
xchg
xor
into
popa
loop
jno
jecxz
jno
inc
fdivr
and
xor
mov
popa
mov
loopne
xchg
cltd
inc
sbb
sbb
xchg
sahf
push
hlt
mov
in
and
inc
push
and
xor
mov
mov
enter
push
ss
or
repnz
fsubrp
pop
rcrb
imul
inc
sub
xor
and
jg
sbb
and
ss
cmp
lds
pushf
adc
mov
aas
divb
sub
dec
pop
movsl
jg
jne
dec
dec
jp
mov
aam
add
mov
test
popf
dec
scas
movl
cmp
loop
sti
jae
xchg
mov
pop
rclb
adc
inc
mov
test
cwtl
dec
idivb
fstpl
add
xchg
mov
push
and
in
sbb
adc
sub
add
push
mov
not
and
inc
adc
jnp
es
push
fists
test
nop
sub
push
sub
mov
jp
cli
mov
xchg
push
outsl
xchg
sub
int3
add
call
loop
jns
movsl
xor
jnp
cmc
inc
loope
sbb
insb
push
movsl
push
add
enter
fwait
xor
out
aas
sbb
arpl
mov
mov
js
icebp
lea
rcll
cmp
in
cli
out
arpl
xchg
jbe
jne
push
or
lret
ds
xchg
xor
sarl
pop
cmpsb
pop
mulb
jle
inc
sbb
stc
jecxz
das
nop
pop
inc
inc
call
aas
mov
hlt
push
inc
inc
or
dec
cmp
mov
jbe
ret
inc
jo
cli
and
cmp
fdiv
mov
fs
aam
aam
in
sbb
aam
in
cmp
pop
clc
sbb
sub
inc
loopne
pop
shlb
fidivl
cmp
shl
push
movsl
lret
mov
sbb
imul
lock
incl
repz
jp
call
or
addb
fnstcw
out
sahf
xor
jb
adc
xor
mov
lods
out
or
mov
fldt
push
insl
addps
in
push
xor
mov
push
pop
repnz
xchg
fwait
cmp
pop
test
sbb
jne
in
push
out
cmp
test
repnz
xchg
fisttpll
add
out
mov
pop
sub
mov
mov
jl
inc
jb
push
movsb
gs
ficompl
in
adcb
pusha
and
pop
aaa
jmp
push
push
or
ficoms
lret
push
inc
pop
bnd
ja
sbb
das
or
test
cli
xchg
inc
aas
or
pushf
jmp
adcb
ss
popl
push
in
inc
pushf
shlb
dec
je
jecxz
out
test
out
movsl
sbb
xchg
pop
push
mov
push
hlt
test
imul
adc
and
ds
sub
enter
or
pop
and
push
jmp
xor
mov
movsb
rcrb
push
and
sbb
sbb
adc
sbb
jle
cwtl
mov
lock
ss
insl
push
cmp
pop
sub
adc
mov
push
and
test
sub
xchg
js
cltd
movsl
sahf
jg
ffreep
and
iret
mov
sbbl
lods
mov
mov
mov
scas
or
jno
out
lret
inc
das
push
ret
sub
cmp
add
ljmp
add
loope
cmp
shll
inc
mov
or
imul
mov
push
xor
cs
and
leave
dec
decb
das
xor
inc
dec
pop
cmp
pop
pusha
push
inc
jge
in
ret
jne
cli
insb
dec
xchg
lret
test
sub
out
dec
dec
rcrl
inc
dec
dec
lock
lods
sbb
xorl
cmp
jns
jp
xchg
dec
sub
dec
mov
addl
pusha
add
xchg
test
xchg
cltd
icebp
mov
adc
cmc
scas
enter
mov
or
pop
cmp
out
ds
push
inc
and
sub
popa
cmp
jbe
sub
cld
xlat
push
jo
ja
xchg
int3
jbe
sbb
js
ja
mov
jae
outsb
or
outsb
nop
outsl
mov
fcomi
imul
daa
jb
cmpsb
in
ja
pop
mov
clc
xlat
test
jp
mov
cmp
adc
jmp
add
aam
inc
lods
andb
sub
cltd
stos
jmp
xorl
es
push
jge
sarl
shlb
dec
js
stc
lea
xor
fwait
loopne
mov
jo
sbb
cmp
popa
fmull
movsl
push
fidivs
stos
and
inc
add
cmp
cmp
ds
loopne
js
hlt
pop
ja
mov
loope
and
push
xchg
push
sbb
out
mov
cmp
testl
gs
cmp
xchg
dec
mov
fcoml
sub
xor
sub
aas
cmp
mov
xchg
mulb
pop
adcb
dec
sub
lcall
bound
mov
aad
mov
fisttps
mov
sub
lock
in
pushf
gs
into
mov
mov
fdivl
pop
or
rorb
dec
xchg
ss
inc
push
leave
int
fisubs
aaa
push
sbb
jns
int3
push
movsb
ret
push
xchg
dec
mov
mov
push
adc
int3
cmpsb
and
es
popf
test
xor
mov
push
adc
xor
pusha
adcb
gs
outsl
scas
jno
xor
into
xchg
mov
jae
ss
dec
movsb
in
mov
cmpsb
inc
fstpt
subb
jne
mov
add
pop
pop
dec
iret
clc
xor
mov
out
dec
sbb
dec
cmp
and
hlt
mov
adc
dec
inc
pop
mov
arpl
sbb
sbb
mov
push
fstpt
out
jp
sbb
incl
out
mov
xchg
cs
add
jg
clc
mov
lods
shl
fnstsw
jnp
mov
int3
imul
outsl
ret
loop
push
or
jmp
fstp
cmpsl
cmpsl
scas
fadd
fstpt
mov
sub
loopne
pusha
call
mov
addl
push
or
inc
in
stos
popf
addr16
xchg
ss
vpshufhw
out
fs
mov
ret
pop
movsl
aad
jns
mov
imul
mov
dec
mov
cmp
and
and
movsl
and
scas
pop
test
dec
xchg
adc
sahf
aam
ljmp
push
mov
fs
gs
out
push
push
outsl
subl
add
inc
cmp
push
and
outsb
add
imul
jno
incl
push
xor
scas
push
push
add
movsb
push
xchg
call
xlat
adc
sub
gs
mov
shll
jo
gs
dec
int3
int
cmpl
test
jb
xchg
insl
cmpsb
dec
loope
andl
and
lcall
mov
aad
arpl
int
dec
pop
jmp
adc
cmpsb
stc
add
lret
xor
and
test
xlat
imul
stc
push
stos
inc
les
std
sbb
jno
lret
push
out
add
jge
pop
sub
pop
mov
cmp
add
sbb
adc
mov
call
jns
stos
dec
fisttps
sbb
cltd
fsubs
shll
cli
aaa
and
fimuls
mov
xchg
flds
jnp
repnz
mov
scas
mov
jno
mov
jmp
ja
dec
cmp
jae
inc
test
push
mov
xchg
movsl
inc
rorb
jg
and
jns
in
jnp
mov
scas
jg
or
aam
sub
pop
mov
scas
insl
jo
repnz
fs
mov
repnz
or
jle
dec
xchg
cmp
addl
adc
sub
not
dec
xchg
sbb
std
or
es
push
or
pop
xor
xor
rcll
xor
stos
aas
sbb
cmp
out
pop
or
aaa
mov
add
insb
sub
insb
addr16
stos
movsl
xor
mov
jae
mov
sub
and
cli
or
cmc
dec
cmpsl
mov
shl
jp
cmp
repz
ret
xchg
dec
hlt
imul
push
iret
std
or
ljmp
mov
dec
call
add
in
fs
mov
shlb
xchg
cmp
xchg
xor
testl
pop
aad
leave
loopne
mov
push
and
jmp
sti
adc
mov
gs
mov
mov
xchg
rcrb
push
fsts
fdivl
cli
fiadds
int
xor
or
jp
pop
dec
movsb
lret
mov
or
es
cmpsl
xor
pop
mov
push
push
in
or
adc
rcrl
icebp
mov
xchg
mov
mov
out
insb
cs
scas
pusha
mov
aaa
ret
or
fstl
sub
dec
outsb
mov
adc
into
add
pop
sub
dec
xchg
shll
or
in
das
inc
and
push
push
mov
fisubs
xor
bound
mov
sub
sbb
sub
shll
movsl
in
xchg
enter
notl
and
mov
fidivs
mov
je
push
pop
or
add
mov
inc
and
jno
add
xchg
mov
jmp
loopne
mov
shlb
cld
mov
or
jmp
addr16
cltd
adc
addl
add
cmp
scas
shl
mov
and
jne
orl
lock
out
add
push
sub
sub
insb
jp
js
jg
mov
dec
add
adc
fistps
clc
stos
lods
hlt
cmp
cli
or
mov
jne
sub
sub
jge
outsl
dec
out
xchg
xor
ljmp
ljmp
lock
lcall
adc
and
mov
rcl
push
mov
xor
inc
inc
cltd
stc
add
dec
mov
push
rep
ret
jge
add
adc
pushl
out
or
xor
bound
test
testl
cmp
test
pop
mov
pop
repz
xchg
pop
in
cltd
dec
dec
insl
add
jg
pusha
jge
adc
jb
jns
xchg
cmp
or
fs
jmp
or
ret
pop
loope
les
jo
xor
xchg
sub
jecxz
or
push
nop
out
dec
xchg
add
sbb
sbb
in
data16
mov
test
mov
out
mov
jo
shr
jl
adc
add
push
mov
inc
stos
aad
sbb
mov
addr16
xchg
lret
mov
hlt
adc
aas
mov
std
cmp
push
xor
ficoml
sub
js
lods
ret
pop
jmp
addr16
std
lods
test
add
popa
mov
xchg
lcall
out
std
cmpsl
sbb
xchg
jne
jae
into
in
in
push
lea
mov
aam
in
aam
popf
and
fwait
popf
dec
sbb
xlat
sbb
outsl
adc
insb
mov
adc
mov
fbstp
leave
loope
mov
cli
push
adc
dec
dec
push
push
lea
in
push
mov
lret
cmp
pop
lds
mov
leave
mov
push
xchg
push
xchg
jl
add
out
cmp
call
add
repnz
cwtl
int
xchg
dec
js
cmp
inc
sbb
jbe
xchg
imul
jae
dec
frstor
xchg
push
ljmp
pop
cmp
pusha
cld
nop
cmp
add
or
dec
sub
sub
fidivs
js
xchg
les
jnp
jg
adc
jns
ret
lcall
mov
xchg
clc
outsl
sub
js
movsb
xchg
and
orb
jp
mov
pop
mov
in
sti
mov
stos
hlt
push
xchg
sbb
gs
inc
dec
ljmp
inc
lods
fs
in
xchg
clc
ret
cmc
sbb
inc
mov
or
sub
sub
enter
mov
inc
inc
lock
pushf
add
xor
push
or
testb
inc
xor
scas
les
sti
leave
int
sbb
pop
ret
icebp
sahf
sub
ja
dec
lds
push
incl
lret
cli
push
pop
push
imul
xor
iret
in
jg
push
jecxz
insb
clc
pushf
stc
in
pop
filds
push
addr16
in
mov
ret
cmp
das
dec
mov
in
sub
pop
fbstp
loope
xchg
in
sar
pushf
pop
add
sahf
clc
std
bound
outsl
out
cmc
adc
xchg
dec
andl
rcll
imull
xor
and
sbb
cmp
cmp
sub
in
sbbl
jbe
negb
iret
push
ss
das
out
inc
sbb
jo
and
xchg
pop
loop
lcall
cmp
pop
pop
mov
xor
push
int
mov
scas
ret
inc
loopne
repz
repz
pop
imul
ds
icebp
push
test
add
lods
and
enter
imul
orl
dec
adc
mov
decl
in
mov
sub
dec
xchg
fcomi
inc
cwtl
fs
fmull
and
icebp
mov
xchg
add
call
loopne
outsl
loop
lea
dec
insb
popa
or
pop
mov
aad
or
outsl
add
xchg
sub
jae
add
xchg
xchg
movsl
lret
mov
mov
lcall
pop
mov
inc
fstpt
mov
fstl
arpl
enter
cmpsl
jmp
cld
xchg
mov
pop
aam
pop
adc
test
cwtl
fidivs
push
gs
pop
nop
scas
shrl
push
mov
add
arpl
sti
cmp
and
cmpb
pop
movsl
addl
or
idivl
and
xor
aas
insl
xor
ret
or
adc
adc
lds
push
and
pop
push
push
inc
fsub
xchg
arpl
hlt
or
in
cmp
add
dec
mov
inc
cmpsb
ret
jno
push
in
mov
imul
cmp
dec
sub
dec
cmpsl
push
sahf
int3
addr16
sbb
sbb
repz
into
mov
xchg
xchg
in
add
leave
xor
out
ja
into
in
xchg
test
pop
repz
lds
jle
adc
xrelease
mov
jae
movaps
repz
mov
xchg
cmp
call
sbbl
cmp
sbb
xor
push
repz
addr16
cld
xor
and
sub
xor
push
add
std
sub
jne
outsl
nop
sti
or
rorb
lahf
add
sbb
arpl
jle
imul
stos
shlb
jp
insl
add
incb
xchg
outsb
push
jmp
stc
inc
add
out
mov
push
xchg
shlb
jb
mov
sub
push
push
daa
add
sbb
and
sbb
dec
aas
pop
imul
push
sarb
push
ljmp
pop
jne
sar
jo
jae
adc
popf
sahf
push
test
pusha
testl
push
cmpsb
jl
lods
xchg
aad
sarl
add
lret
pushf
mov
dec
sti
xchg
aaa
repz
mov
fisttpl
je
mov
fwait
pusha
push
lock
jmp
popf
lods
xor
jecxz
aas
push
outsl
pushf
sarl
inc
notl
ds
dec
hlt
mov
jnp
js
cltd
outsb
push
inc
mov
push
push
adc
scas
enter
insl
lock
stc
and
jmp
movsb
dec
orb
test
test
aaa
fldenv
mov
or
insb
xor
repz
jl
popf
aad
rcr
les
repnz
mov
mov
pop
xchg
adc
ss
xor
jp
adc
xchg
adc
dec
pop
sub
jbe
mov
orl
rep
data16
push
add
pop
stos
xchg
push
mov
or
leave
aam
rcl
add
imul
sub
int3
xchg
or
mov
pusha
mov
mov
jecxz
in
jno
rcll
cmp
jge
adc
mov
jl
push
scas
out
std
jmp
shrb
rcr
sbb
add
inc
xlat
stc
outsb
jne
or
pop
out
mov
scas
mov
xor
jb
push
push
test
add
stos
mov
std
popf
cld
test
ja
clc
test
sbb
xchg
xor
lret
mov
cmpsb
sbb
push
adc
or
into
mov
push
inc
sub
push
mov
inc
lods
scas
in
lret
cltd
js
mov
lds
inc
cmc
shl
int
inc
jb
jl,pn
scas
sbb
xchg
dec
cmp
jns
pushf
pop
pop
lahf
cld
jg
cmc
fldt
scas
loop
fldenv
dec
push
mov
mov
cltd
lods
cmp
pop
sbb
sti
hlt
dec
movsb
dec
push
stc
mov
inc
fnsetpm(287
rcll
sti
int3
divl
push
adc
insb
mov
popf
pop
out
inc
cmp
fimuls
jnp
gs
xchg
into
scas
outsl
mov
mov
inc
ficoml
xchg
loopne
sar
xor
pop
push
xchg
inc
pop
xor
int
sub
out
out
dec
arpl
sarb
push
in
mov
mov
filds
shrl
test
in
inc
out
fnstsw
in
inc
xor
cmp
add
or
loop
pop
sbb
ror
movsb
shrb
push
dec
push
negl
loope
pusha
not
stos
je
xchg
jl
dec
pop
data16
shrl
pop
fwait
je
int
jl
push
xchg
stos
jecxz
add
dec
ljmp
stc
sub
pusha
dec
pop
jl
dec
out
subl
nop
ret
enter
push
cmp
sub
mov
jbe
sbb
fisttps
aas
shrb
cmpsb
arpl
cmp
sub
inc
scas
imul
sub
dec
jecxz
push
mov
pop
lods
push
or
pop
xlat
mov
push
push
jg
sahf
jge
repnz
das
inc
dec
cmp
or
jo
dec
or
pop
mov
push
div
adc
arpl
or
xchg
in
leave
xchg
lcall
enter
add
sbb
sbb
sbb
xchg
push
lea
test
jo
andb
adc
scas
test
add
pop
mov
sub
sub
aas
mov
lret
and
sbb
and
mov
test
inc
fsubrs
pop
or
mov
fsub
add
stos
test
scas
adc
and
call
lret
sbb
aad
sub
rorb
jmp
iret
push
jb
test
mov
cmp
xchg
ja
cmp
fisubl
mov
lea
mov
out
loopne
add
push
out
lock
push
int
mov
scas
cmp
daa
jmp
pop
ja
movsb
cwtl
rorb
je
mov
ja
repz
push
rorb
xchg
pop
pop
mov
in
mov
mov
mov
popf
sub
je
xor
adc
pop
pop
mov
mov
sahf
mov
aam
sub
test
sbb
nop
test
adc
aad
jno
inc
shr
and
mov
jne
inc
leave
jbe
rcl
in
push
inc
adc
arpl
aas
cwtl
inc
pop
inc
mov
cmpsb
test
jle
pop
inc
loopne
decb
mov
mov
dec
mov
nop
pop
and
or
ret
loope
sub
pop
daa
js
cmp
pop
out
push
inc
rcl
lea
lahf
orb
mov
jecxz
jae
ffreep
cmpsl
or
bound
and
stos
iret
push
popf
lods
mov
in
jbe
lods
cmpsb
cmc
dec
ss
loopne
hlt
sbb
cmp
into
xor
jmp
pop
out
filds
pop
cmpsb
faddl
aaa
jb
cld
cwtl
jmp
jo
sub
sub
or
out
and
inc
jl
jmp
inc
jmp
cmpl
dec
call
cli
xchg
hlt
cli
dec
movsl
cmp
cld
mov
inc
jge
xchg
repnz
fdivrs
sbb
leave
pusha
hlt
cmp
inc
je
out
cltd
outsl
mov
icebp
pop
mov
or
cmpb
or
adc
movsl
inc
movsl
mov
mov
scas
dec
aas
add
pop
aam
sub
sbb
imul
pushf
jmp
xor
fcoms
jge
repnz
pop
out
sub
push
fs
rcll
and
adc
pop
ja
fst
lock
dec
shll
xchg
mov
fistpll
mov
cmp
push
adc
arpl
or
sahf
xor
pusha
push
mov
push
mov
arpl
inc
inc
mulb
sahf
push
imul
sbb
lods
xchg
cmp
jle
lock
mov
push
popa
jmp
call
push
je
cs
push
fidivs
cld
hlt
cltd
stos
lds
idiv
mov
jns
push
xchg
xchg
rol
fisttps
xchg
mov
and
repz
ds
loopne
cmp
jecxz
jmp
shl
repnz
jbe
dec
jg,pn
aad
int3
lret
call
push
and
add
ds
cmp
xlat
dec
lock
sti
clc
adc
ret
ljmp
mov
adc
outsl
sbb
or
aaa
cmp
test
or
mov
lcall
roll
sarl
pop
dec
xlat
jnp
jnp
sbb
jnp
pop
enter
cltd
pop
push
mov
jge
mov
sub
jne
push
outsb
pop
xor
sub
mov
or
xor
imul
xchg
mov
aaa
adc
gs
daa
fldl
fildl
das
dec
adc
sbb
call
push
push
mov
sub
dec
push
jns
or
pop
sub
std
xchg
nop
pop
fsubl
cmp
sar
sbbb
inc
or
lret
dec
in
dec
pop
in
pop
test
sub
xor
int
imul
push
and
test
push
mov
jns
mov
xlat
jmp
sbb
xor
xlat
jns
or
js
ret
sub
pop
fisubs
pop
mov
push
inc
movsb
mov
ljmp
and
inc
cltd
lcall
in
dec
hlt
jle
sbb
addr16
lds
jae
dec
aad
out
mov
lods
inc
mov
cmpsb
inc
sbb
sbb
inc
pop
jne
aaa
cmpsl
pop
ret
jle
jns
outsb
mov
fnsave
jno
inc
fld
subl
pop
fisttps
inc
fiadds
jle
pop
mov
mov
in
xchg
mov
lds
ret
hlt
xorb
cltd
cmc
dec
mov
mov
aad
adc
loop
or
xchg
pop
inc
sub
pop
movsl
movsb
imul
xor
mov
pop
clc
daa
xchg
and
rclb
shll
call
stc
nop
add
xchg
lahf
jg
fistl
sub
cwtl
es
adc
xor
sub
fidivs
ljmp
jno
in
daa
mov
test
insb
lock
testb
int3
cld
in
mov
sub
cmpsb
push
movsl
xlat
gs
mov
xor
lret
xor
ds
or
adc
or
mov
data16
ret
fdivrl
mov
add
inc
sbb
dec
mov
test
and
rcll
mov
xlat
dec
outsl
imul
mov
push
mov
test
sbb
sbbb
and
xchg
test
dec
daa
jg
xchg
push
xor
xchg
jno
lcall
jns
sbb
call
repnz
or
mov
rsqrtps
inc
push
lcall
add
into
adc
sbb
hlt
sbb
pop
out
aaa
mov
mov
mov
sbb
or
xorb
das
or
out
jbe
popf
jb
lcall
jb
in
fdivs
xor
cmpsb
or
enter
push
cmp
mov
in
inc
mov
lcall
and
jo
pop
out
into
fwait
test
add
aad
inc
add
leave
mov
int3
mov
xchg
sub
xor
jo
stos
lods
fsubs
jno
jg
xor
lret
push
iret
sbb
jp
xor
inc
daa
xlat
cmpsb
arpl
shl
or
in
mov
mov
xor
xor
jmp
imull
into
arpl
add
mov
test
and
cmpsb
dec
in
mov
rorb
sub
sti
fwait
jle
dec
dec
in
jmp
jecxz
in
das
ror
aam
icebp
xchg
inc
and
dec
stos
cmp
das
jle
pusha
push
mov
mov
sbb
sti
insl
dec
sbb
in
cli
pop
push
inc
fiaddl
fwait
xor
add
ret
xchg
add
lds
je
stc
test
cmpsb
xor
push
bound
pop
in
jle
dec
cwtl
das
jle
xor
pop
dec
dec
in
cmp
lock
push
loop
sbb
ret
testb
mov
lods
insb
add
cwtl
cs
or
sub
xor
out
das
jo
and
pop
adc
dec
cmc
ret
loope
mov
stos
and
push
arpl
sbb
jg
outsb
dec
add
loop
ljmp
jno
cld
mov
inc
popl
daa
out
mov
lods
jmp
and
or
les
lret
mov
add
xchg
add
pop
cli
or
inc
rorb
xor
lock
hlt
dec
icebp
and
xchg
pop
mov
cmp
mov
mov
pop
loop
adc
sub
add
sbb
sub
divb
fwait
ret
jo
sbb
mov
clc
jge
scas
pop
fcomps
sahf
popa
adc
ss
dec
rclb
pop
mov
movsb
sbb
negb
fwait
mov
popf
xchg
xor
inc
xor
or
insl
movsl
ds
test
mov
add
adc
add
dec
stos
xor
lcall
ljmp
mov
fidivs
pop
jg
sbb
push
cmp
push
fwait
movsb
inc
clc
jae
xchg
adc
and
loop
mov
loopne
inc
mul
push
in
je
xor
imul
add
mov
cld
push
iret
sub
shrl
cmpb
lods
ret
and
add
inc
dec
mov
inc
loope
lock
jns
scas
add
xor
xor
jl
jno
add
shl
sub
sub
dec
mov
xor
idivb
in
inc
xchg
fadd
xlat
outsb
push
sti
mov
in
mov
bound
mov
adcb
inc
sbb
sub
jb
mov
iret
jno
pop
ja
dec
lcall
clc
inc
ljmp
cmp
insb
lods
test
test
hlt
lods
cmp
sbbl
cld
in
mov
loope
or
sbb
xor
incl
jns
sub
inc
ljmp
out
stos
gs
jg
mov
mov
sbb
lret
xchg
in
push
sbb
mov
loopne
popa
xchg
and
call
jp
sub
sbb
inc
xchg
out
xchg
push
je
fnsave
ja
xor
loopne
inc
popa
pop
cmpsl
inc
popa
fwait
test
xor
ret
js
push
std
inc
mov
notl
jp
das
and
dec
bound
sbb
dec
mov
insl
jge
addr16
shl
aaa
push
repz
shl
cmp
insl
cmp
mov
out
mov
adc
lahf
mov
mov
inc
pop
xor
cmp
jecxz
pop
mov
fs
fildll
scas
inc
xor
dec
std
fstp
mov
or
cltd
mov
loopne
call
insl
xor
xor
decb
inc
mov
test
push
pop
in
out
add
mov
stc
push
fcomps
add
ja
mov
scas
jo
rorb
imul
popf
pop
adc
daa
repz
mov
fldt
es
add
mov
push
add
shlb
mov
inc
dec
je
inc
leave
xor
incb
in
cmp
lea
enter
mov
sbb
in
adc
mov
mov
lods
adc
xchg
mov
sti
mov
arpl
nop
mov
xor
xor
mov
ds
pushf
sbb
loope
loopne
add
hlt
jmp
cmp
out
data16
adc
shrl
push
cwtl
test
and
nop
lods
inc
and
mov
cmpsl
sub
mov
xchg
jmp
push
inc
data16
pop
jbe
inc
out
mov
pop
scas
shld
sub
ja
sub
and
dec
enter
jno
ljmp
stos
js
xor
push
fwait
mov
jl
out
movsb
pop
xchg
fwait
mov
sahf
fisubs
jne
xor
xor
clc
std
data16
mov
jle
sub
and
idiv
jae
imul
repnz
movsb
repnz
es
inc
xchg
sub
mov
std
push
add
and
adc
stos
movsb
cmp
data16
pop
sub
mov
or
and
jae
idiv
push
mov
out
flds
out
jp
add
pop
jle
or
aas
sbb
fdivl
pop
into
and
xchg
fwait
jbe
inc
ja
cmpsb
and
push
push
mov
out
imul
mov
or
cltd
loopne
mov
push
xchg
daa
adc
inc
mov
jg
mov
rcrb
mov
mov
fimull
imul
out
xchg
cwtl
outsb
sub
dec
pop
cwtl
testb
lock
xlat
add
test
cmpsb
rcr
mov
movl
mov
push
rcll
dec
dec
div
inc
push
push
cmc
rcl
pop
scas
sub
aaa
pop
les
addl
mov
sbb
xor
add
xchg
shlb
mov
dec
cmp
dec
iret
mov
testl
arpl
cltd
pushf
ja
sbb
ret
sbb
das
nop
push
popf
cli
fiaddl
or
xchg
pusha
cmp
mov
inc
cmp
flds
mov
insl
cltd
pop
cmp
xor
add
fldcw
add
addl
add
das
mov
jno
cli
mov
add
loope
mov
sub
adc
sub
jp
pop
dec
stos
adc
pop
enter
add
stos
sbb
fistl
mov
jge
cs
mov
cmpsl
sub
popf
pushf
xlat
xor
mov
mov
cmp
cwtl
xor
scas
inc
jl
fbstp
lcall
outsl
adc
mov
shrl
mov
add
xchg
xchg
mov
jg
add
sbb
pop
mov
mov
fucom
jne
xor
inc
cld
pop
into
xor
or
push
lahf
adc
call
mov
in
dec
call
sahf
lods
fisttpll
jo
dec
push
mov
cmpps
mov
outsl
movsl
dec
pop
jle
popf
lods
cmp
sarl
les
movl
pop
scas
nop
push
xor
mov
or
cmp
xrstor
fists
push
cmp
cltd
mov
jbe
xorl
loope
repnz
dec
mov
pop
sbb
jnp
imul
cmp
loope
push
aas
lret
lret
icebp
add
sahf
inc
int
cld
adc
loop
gs
ret
repz
and
sub
dec
call
arpl
push
dec
adc
fadds
test
xchg
push
aam
jecxz
push
sbb
cmp
push
mov
mov
sub
andb
ss
xchg
icebp
pop
dec
test
in
or
mov
stc
mov
arpl
jmp
ds
xor
inc
push
insb
sbb
push
js
inc
lret
jo
aaa
test
je
lods
inc
push
ficomps
or
xchg
inc
scas
and
xchg
cmpsb
sbb
xlat
repz
mov
xchg
lahf
cmpl
es
adc
pusha
lods
push
mov
lea
push
xor
sbbl
adc
shlb
dec
in
shl
pop
or
mov
xchg
or
push
push
push
iret
pushl
sub
iret
in
sub
pop
inc
shrl
repz
insl
xor
mov
pop
or
dec
xor
inc
push
lahf
push
test
fnsave
hlt
mov
lret
inc
sbb
jge
addr16
jmp
adc
lods
jecxz
pop
adc
ds
std
jo
mov
into
xchg
inc
pusha
lds
add
ds
pop
repz
add
fcomps
test
addb
jle
adc
mulb
fistpl
push
sbb
cmpsl
and
ja
add
jp,pt
pop
rol
outsb
ret
repz
andl
mov
ja
dec
xorb
pop
xchg
dec
cmc
mov
xchg
adc
iret
test
test
fldcw
sbb
dec
add
add
push
mov
dec
mov
aaa
movsl
popa
cld
dec
pop
dec
mov
ror
mov
in
push
jns
js
adc
cli
pop
mov
out
out
mov
xor
jbe
in
mov
push
push
adcb
mov
dec
xchg
out
jle
cwtl
and
out
and
mov
xorb
test
mov
aas
ljmp
lcall
mov
pop
ret
fimull
dec
ds
sub
es
push
icebp
cwtl
dec
jnp
fisubrs
xor
jge
insb
mov
je
xor
push
jno
jne
sub
mov
inc
push
mov
shrl
cltd
mov
xor
xor
cmp
xchg
notb
fidivl
add
test
jg
jbe
popf
jbe
mov
int
xor
lret
adc
arpl
push
outsl
push
jno
std
push
lahf
inc
fisubl
mov
sub
dec
push
xchg
fdiv
ret
daa
or
popf
sti
jmp
clc
or
cmc
add
cltd
stos
es
push
dec
decl
mov
mov
imul
xlat
jb
ret
xor
fnsave
jbe
push
sbb
repz
push
cmp
adc
and
push
cld
pop
stos
test
lret
sti
stos
dec
cmpsb
popf
or
scas
or
in
or
xchg
adc
xorb
lock
jb
hlt
or
repnz
sub
test
sbb
inc
xchg
xor
mov
aad
scas
fnsave
mov
cli
jne
or
scas
daa
in
hlt
cmp
jp
xchg
push
mov
leave
daa
mov
push
or
in
pop
cmp
insb
pop
ds
jne
xchg
push
jnp
xchg
rorl
ficoms
ret
hlt
xor
push
lret
fisubl
popa
adc
lock
xchg
mov
or
cmp
ret
pop
mov
rorb
popl
pop
lea
xchg
jns
cltd
scas
xchg
or
mov
into
mov
dec
jl
inc
xchg
mov
push
mov
test
mov
aas
bound
ss
and
cmp
inc
stos
mov
push
test
inc
js
inc
lahf
fildll
jae
push
inc
and
lea
sbb
adc
fisttpll
xor
fbstp
dec
mov
push
ret
into
das
add
sti
inc
lods
xchg
adc
dec
in
scas
imul
and
cmpsl
pushf
aas
push
xchg
adc
ret
arpl
loope
ds
fstpl
addr16
xchg
mov
cmp
lods
mov
loop
pop
mul
cmp
pop
popa
xchg
mov
push
lock
and
xchg
pop
lock
sub
push
xchg
sbb
push
and
rcr
sbb
mov
sub
test
adc
fcmovnbe
popa
movsb
je
mull
je
fldt
push
push
sbb
lret
and
mov
sar
mov
int
subb
ljmp
mov
lock
aad
fistps
or
jg
and
sub
jge
xchg
inc
dec
xor
out
stos
subl
or
fwait
addr16
ds
mov
clc
adc
aam
pop
seto
inc
inc
sti
mov
in
add
dec
movsl
xchg
mov
xchg
push
jb
pop
movsb
jnp
xchg
js
pop
mov
pop
mov
add
xor
jbe
xlat
push
sub
pop
testb
mov
mov
xchg
add
xchg
imull
mov
mov
test
dec
iret
jg
aas
sub
mov
sbb
or
push
test
jbe
and
arpl
rolb
lahf
sub
shrb
pop
mov
mov
xchg
lcall
out
sbb
popa
jbe
xchg
cmpsb
cld
aad
in
mov
jecxz
ljmp
xchg
call
inc
shlb
insb
mov
leave
sbb
jne
es
lcall
jle
stos
imul
iret
sti
sbb
rcrb
cmp
pop
inc
pushf
cmp
andl
mov
or
and
incl
jmp
mov
paddsw
mov
andb
jg
push
gs
cmpsl
pop
xchg
dec
imul
xchg
adc
daa
insl
ja
sbb
stc
popf
mov
push
cmpsl
int
pop
jmp
mov
jp
jp
mov
mov
sbb
ja
in
pop
pop
hlt
dec
insb
jle
mov
in
mov
lret
fs
roll
lcall
int
mov
dec
ss
ficompl
ficompl
jb
mov
or
mov
mov
mov
aam
adc
jns
mov
pop
aad
out
push
push
mul
pop
add
xor
or
and
add
es
dec
fs
sbb
cltd
xor
push
mov
dec
add
loopne
xor
stc
ja
aaa
or
ret
mov
les
push
js
sub
pop
jo
in
dec
cmp
add
test
fs
and
dec
movsl
fisttpl
arpl
jne
test
lret
and
sbbb
pushf
movb
negl
je
lods
sahf
pusha
fxam
sti
xchg
es
push
push
add
int
ljmp
adc
xchg
popf
das
aad
stos
mov
js
push
sahf
cmp
mov
sbb
sahf
pop
sbb
hlt
popa
enter
mov
leave
xchg
leave
mov
push
pop
pop
scas
xchg
mov
fwait
push
stos
mov
pop
inc
enter
jns
push
enter
int
mov
and
fisubs
add
scas
je
ret
sub
push
scas
adc
stos
or
push
enter
xor
shrb
cs
je
imul
inc
sub
lcall
xchg
daa
cmpsb
shlb
jge
aam
jae
repnz
jl
scas
scas
aaa
lods
or
pop
mov
cmp
mov
xor
mov
negl
xorb
ljmp
je
mov
xchg
std
push
iret
and
stos
inc
xchg
push
popf
arpl
pushf
rcrl
mov
ja
daa
inc
sub
jb
adc
push
bound
imulb
push
add
pop
popa
js
fs
xchg
sub
movsb
adc
sbb
add
pop
xchg
pushf
pop
cmp
or
adc
adc
push
adc
jbe
repnz
testb
mov
mov
mov
jo
nop
dec
jecxz
mov
mov
dec
adc
in
adc
mov
call
test
mov
or
jg
into
outsl
ret
sti
dec
into
es
sbb
lret
mov
enter
aas
xchg
movl
add
rorl
fcmovb
and
fsubs
cmpsb
arpl
mov
xorb
add
fldt
daa
xchg
sub
mov
pop
das
aad
aad
shlb
push
loope
push
out
test
lahf
pop
je
mov
dec
imul
rcrl
int
mov
test
clc
inc
dec
or
lret
lret
movsl
sub
mov
jge
out
add
testb
xchg
cmp
adc
pop
iret
fs
cmc
lcall
jbe
xchg
or
pop
inc
xchg
adc
pop
lret
jmp
cmp
inc
leave
pusha
ja
sbb
pop
jb
jnp
out
xchg
cmc
sbb
leave
call
dec
rcrl
lods
cmc
sbb
xchg
repnz
dec
push
sub
repnz
daa
cmc
cs
add
sbbl
test
lock
pop
pop
outsl
fnstsw
sbb
lret
or
fbstp
cmpsb
test
ffreep
adcb
hlt
insl
xor
add
nop
push
insl
ds
das
or
or
loopne
lock
adc
scas
jae
adc
rorb
jb
jne
sbb
mov
in
xor
sub
push
add
out
xlat
shrb
mov
lock
cmp
in
xchg
or
dec
fwait
pushf
jg
ljmp
jno
mov
xchg
adc
jo
outsl
movsl
mov
push
fisubrl
cs
pop
xchg
cmpsb
in
in
pop
cmc
push
daa
movsb
les
repnz
imul
in
addb
jge
mov
and
out
icebp
pop
lock
push
fdivrl
or
fsubl
data16
jno
shlb
mov
or
sbb
in
dec
mov
test
mov
mov
stc
insb
sub
mov
daa
or
mov
dec
leave
arpl
mov
clc
cli
popa
cmp
and
leave
xsaveopt
xor
pop
fcmovnb
pop
or
inc
in
mov
jns
fs
mov
cwtl
sbb
sbbb
mov
das
fcomip
faddl
js
and
xchg
sub
inc
outsl
add
aaa
adc
sbb
outsb
jnp
adc
pop
xor
loope
in
mov
adc
xchg
xchg
pop
mov
sbb
jo
fnsave
fcoms
repz
mov
std
mov
mov
mov
fcmovnu
flds
lock
hlt
aad
pushf
pop
cwtl
push
frstor
push
push
test
lock
roll
lret
cmp
lock
aaa
popa
pop
repnz
fs
cs
ss
cs
pop
aad
mov
and
push
imul
ret
in
sbb
imul
jecxz
sub
in
xor
lret
cmp
jo
loopne
adc
jmp
xorb
nop
mov
pop
mov
es
lcall
out
sbb
dec
xchg
adc
xor
sub
pop
repnz
and
cli
or
xchg
xor
add
data16
ljmp
add
cmpsl
insb
in
jns
loop
jbe
andb
dec
dec
ret
in
shrb
push
adc
data16
aad
clc
dec
outsb
cmpsb
test
jg
testb
mov
push
mov
loopne
dec
movsl
int3
loopne
mov
cmp
rcrl
cmp
dec
insl
movsb
lods
outsl
jecxz
mov
lcall
and
and
or
pushf
mov
push
cmpsl
dec
insb
ljmp
pushf
pop
mov
ds
cld
in
lret
into
or
out
lahf
pop
lret
xor
lcall
pusha
icebp
sarb
ds
push
adc
jae
sahf
into
cli
adc
add
push
jne
gs
mov
mov
fs
inc
add
loopne
pop
cmp
mov
daa
cli
xchg
mov
ret
or
mov
daa
sahf
in
shlb
fmuls
or
cmp
cmp
and
jecxz
adc
daa
mov
or
stos
mov
in
std
mov
add
xchg
leave
jl
aad
das
or
and
mov
jne
je
adc
inc
sbb
aad
stc
lock
mov
aas
mov
arpl
or
or
push
fidivrl
fstpt
bnd
adc
mov
mov
jne
inc
stc
xchg
sbb
andl
xor
sbb
mov
inc
pop
mov
out
lock
dec
add
jnp
push
jmp
jl
push
sbb
gs
les
mov
std
jge
dec
testl
outsl
cmp
jle
pusha
push
dec
or
aad
push
mov
movsl
sub
dec
mov
clc
cmp
rclb
mov
pusha
into
loopne
ss
pop
andb
push
aaa
in
pop
cmp
loopne
push
jecxz
or
jb
lcall
scas
shr
mov
fnsave
sub
cmc
mov
dec
outsl
daa
out
pushf
repz
es
xchg
sub
push
or
push
mov
loopne
iret
dec
adc
fistpll
rcrb
or
idivl
xchg
jg
loop
subl
loop
and
jbe
mov
inc
mov
cwtl
mov
adc
push
movsl
jns
xlat
xor
push
decb
adc
pop
in
mov
lds
adc
pop
icebp
cmp
int3
sbbl
js
or
pop
jae
fwait
xchg
cwtl
loopne
mov
sbb
jp
fst
rorl
mov
js
mov
adcl
sbbb
jg
push
xchg
fsubs
das
ret
outsb
push
test
mov
mov
pusha
and
push
sahf
ds
aad
pushf
repz
sti
mov
lds
leave
dec
nopl
pop
jp
jge
push
movsb
pop
out
loop
lods
sti
jbe
inc
into
pushf
lods
jmp
insl
jbe
xor
aad
add
or
add
adc
ror
mov
push
mov
mov
mov
dec
dec
in
js
sub
adc
pop
xor
testl
mov
xor
shll
inc
in
out
xchg
sbb
sbb
into
xorl
clc
fs
fwait
leavew
inc
dec
push
pop
jne
je
loop
aad
aad
aaa
sub
mov
jl
nop
stos
lock
cmp
xor
ds
jmp
es
fidivs
inc
add
jbe
cs
negb
int3
push
fsubl
inc
adc
push
jmp
repz
push
push
mov
shrl
dec
repz
push
rorl
mov
fsubrl
jnp
outsl
les
inc
cmp
pop
cmp
lea
scas
lcall
outsl
iret
inc
pop
push
xor
orl
mov
ja
mov
fstpt
fistl
repz
outsl
lret
in
std
mov
cmc
mov
cmp
xor
mov
fstl
push
enter
push
incl
adc
mov
stos
mov
lcall
dec
repz
rcrb
shrb
cli
fs
out
sbb
hlt
dec
cmp
mov
inc
fstpl
xor
xor
dec
mov
arpl
xchg
pop
mov
shl
xor
xchg
add
mov
pop
test
inc
fidivs
daa
lods
je
jg
and
sahf
lea
pop
push
mov
and
sub
mov
lret
fidivrs
insl
or
adcl
repz
push
or
and
jmp
repz
bound
jg
sbb
lcall
jo
xor
das
aas
rcrb
or
cmc
jne
pop
cmp
dec
test
xchg
jno
in
movsl
jae
bound
test
addb
insb
add
clc
cmpsl
or
mov
and
mov
mov
cmp
movsl
push
jb
inc
mov
cld
cli
ffreep
js
xchg
push
mov
pop
sbb
xor
mov
push
popf
outsl
push
jmp
cmpsl
ds
std
pop
icebp
jae
testl
push
popf
adc
pop
fildl
ljmp
fists
push
mov
icebp
dec
repz
icebp
jo
enter
rolb
and
jne
dec
inc
xchg
lods
jl
negl
pop
mov
je
cltd
sahf
and
xchg
fildll
stos
sbb
in
and
sti
fwait
jbe
and
shlb
jle
pop
mov
cmp
in
add
mov
mov
int3
jge
addl
xor
hlt
mov
ret
sub
push
xlat
and
xor
or
or
aaa
xor
mov
push
pop
in
shll
xor
aam
jmp
or
insl
jnp
lock
jbe
bound
lahf
xor
ret
lods
cmp
ds
fidivl
or
loop
mov
dec
jmp
adc
aam
fwait
push
out
jbe
arpl
and
jne
lret
push
leave
outsl
lret
jmp
mov
xor
bound
aam
pop
xchg
jle
and
jns
es
adc
or
xor
stc
movsb
xchg
je
into
cwtl
cs
jle
and
xor
int3
pop
jne
mov
add
adc
cmp
insb
movsl
mov
push
pop
and
mov
xchg
aas
test
ret
and
cmp
mov
xchg
mov
movsb
popa
imull
pop
lods
les
and
push
pop
dec
dec
jl
xchg
sub
iret
iret
dec
sub
xchg
mov
insb
shlb
sbb
rcl
mov
sbb
inc
dec
lahf
stos
push
jecxz
jl
pop
xor
mov
sbb
sbb
dec
xchg
data16
in
subb
add
sub
mov
arpl
mov
cld
outsl
xchg
mov
add
lret
into
sub
add
xor
mov
scas
mov
adc
dec
dec
in
sub
sub
xor
hlt
pop
mov
xchg
lds
cltd
dec
cmp
jns
shlb
lcall
mov
jns
gs
mov
mov
mov
mov
push
jne
inc
cmpsl
aaa
and
mov
cld
xor
pop
outsb
inc
imul
mov
arpl
outsl
adc
or
fwait
cmp
xchg
mov
push
movl
lret
push
lcall
leave
dec
call
leave
in
push
rcr
into
stos
jne
xchg
sub
outsl
cmp
notb
push
loope
les
cmp
jne
cmp
jmp
jecxz
push
push
mov
xchg
push
mov
aad
rolb
push
js
ret
arpl
sub
sbb
sub
push
add
mov
push
push
insb
add
sbb
iret
and
enter
cmp
lahf
cmp
call
sub
in
dec
out
inc
add
into
fists
lret
sub
mov
lock
stos
lods
dec
outsb
test
imul
cmpsb
shlb
ficoml
in
push
xor
mov
popf
sbb
sbb
sbb
imul
mov
test
pushf
xor
mov
or
lahf
adc
or
sarb
ds
inc
leave
cmp
iret
sbb
inc
ret
clc
inc
jo
fdivrl
xor
testl
inc
mov
in
pop
jg
ja
enter
jmp
fsubrs
je
icebp
mov
repz
xchg
dec
dec
add
rcrl
dec
dec
idiv
rcrb
cmp
xlat
mov
jns
or
popl
fwait
mov
sub
pop
clc
iret
mov
add
jnp
push
cltd
repnz
or
pop
cs
pop
cmp
push
int
xor
nop
mov
loop
xor
jmp
in
or
mov
jmp
adc
jo
sbb
cmp
mov
or
sbb
add
stos
jns
lods
scas
outsl
daa
xor
inc
fmull
movsl
mov
outsl
mulb
ss
cmp
push
lcall
push
je
dec
push
aas
dec
icebp
test
repnz
sahf
mov
xchg
cmp
lds
sbb
jge
adc
insb
shlb
adc
mov
insl
cmpl
push
lods
sub
test
addr16
data16
cmp
cwtl
bound
jl
xor
adcb
xchg
es
imul
xor
jne
or
sbb
and
pop
mov
push
adc
and
sbb
dec
aam
pop
out
out
jnp
pop
sahf
jbe
jne
les
nop
shrb
movsl
mov
daa
enter
push
test
scas
mov
sbb
hlt
fistl
lock
adc
mov
scas
cmpl
and
jo
sbb
inc
adc
jp
aam
mov
add
add
inc
repnz
sub
fildl
dec
test
test
ja
rol
fstps
adc
jne
mov
test
rcrl
stc
aas
decl
daa
mov
ret
cwtl
push
cmpsl
sbb
dec
push
js
decl
pop
and
gs
jne
xchg
xchg
stos
pusha
inc
lret
dec
pop
xor
cmpsl
sub
movl
movsl
divl
push
stos
cs
jb
fistl
dec
call
call
cmp
dec
push
popa
dec
es
jg
ds
loop
mov
and
clc
mov
push
in
mov
fdivrs
push
psadbw
xor
mov
rcl
xor
adc
inc
sti
cmpsl
cli
test
inc
pop
adc
mov
cmp
cmp
xor
xor
push
loopne
jb
movsl
cmp
sbb
mov
aas
les
pop
hlt
mov
and
mov
out
cmc
sbb
and
dec
mov
sbb
and
push
loop
jecxz
jb
xor
out
mov
lahf
mov
push
call
or
outsl
jnp
sub
jae
cltd
aam
fnstenv
push
stos
push
das
sub
sub
out
pop
and
lods
shl
adc
jle
xor
nop
cmpsl
and
cmp
cmp
pop
aas
sbb
dec
dec
pop
sbb
ret
ret
pop
xchg
mov
int
cmpl
out
jg
push
push
outsb
mov
xlat
mov
push
fwait
cmp
or
inc
pop
xchg
jmp
and
cmpsl
adc
push
pop
lods
imul
movsb
dec
xchg
sbb
ds
xchg
pop
xchg
ss
cli
loope
sub
adc
dec
cmp
cmp
mov
cltd
das
push
rcrl
push
jno
mov
ret
loope
fwait
mov
scas
inc
loop
push
lds
fxch
mov
push
cmc
dec
mov
mov
jecxz
cltd
push
or
iret
adc
ja
mov
leave
je
mov
hlt
mov
outsl
add
pusha
mov
adc
pop
cmp
dec
jge
mov
jg
add
jge
movl
jae
cli
lret
and
pusha
test
xchg
lock
adc
pop
mov
inc
std
arpl
and
jmp
roll
outsb
mov
push
pop
push
push
cmpl
xor
adc
pop
movsl
push
mov
or
adc
daa
cmp
jl
imul
movsb
mov
arpl
sti
mov
rcrl
xchg
test
pop
and
pop
mov
cmp
shl
mov
lret
movsl
adc
shl
inc
lcall
daa
aas
dec
mov
dec
jnp
jnp
gs
mov
xor
dec
js
stos
mov
push
stc
je
outsb
xor
sbb
das
dec
call
sub
lods
and
push
push
int
or
mov
add
divb
mov
add
add
fwait
imul
fidivl
sti
jbe
sbb
mov
fcomps
jg
mov
fildll
jbe
iret
jnp
sbb
add
mov
stos
ljmp
cwtl
or
stos
xor
jne
add
pop
push
test
test
flds
cltd
loope
cld
and
mov
stc
push
shl
cmp
scas
loope
loopne
mov
pop
shrb
and
out
stc
mov
xchg
sub
push
dec
mov
inc
push
jmp
test
lret
xchg
lea
and
pop
jnp
sbbl
add
pop
xor
and
mov
push
pushf
sti
into
testl
outsb
ret
mov
adc
pop
lods
cmp
pop
orb
cmp
or
inc
jg
hlt
inc
addr16
pop
pusha
sub
rcll
jbe
sbb
nop
out
fmull
add
aam
imul
jnp
jo
imul
cmp
add
rcrb
push
pushf
nopl
mov
cmp
cltd
fs
outsl
iret
shll
mov
ret
xlat
push
dec
rcrb
mov
filds
aaa
fmuls
pop
outsb
xchg
nop
negb
jne
test
xchg
inc
pop
xor
div
aad
mov
fildl
adc
mov
push
add
sub
jp
jo
or
mov
rol
mov
push
sub
fsubrl
loopne
push
xchg
repnz
xchg
and
and
xchg
cmp
in
mov
bound
dec
pop
out
sahf
popa
out
leave
call
leave
sbb
ja
sbb
les
sahf
addr16
js
push
push
in
lods
add
sbb
pop
mov
int
xchg
lods
fsubrp
in
sub
lds
mov
sub
or
mov
mov
mov
mov
dec
add
adc
pop
dec
sbb
shlb
fsubr
pop
inc
inc
fisubl
popf
dec
xchg
lret
jo
and
dec
out
mov
jp
jl
pop
mov
loop
cmp
dec
fdiv
loope
pusha
adc
xchg
push
dec
out
sti
jl
gs
sbb
nop
outsb
stos
mov
out
jg
sub
je
sbb
push
jp
loop
stc
adc
mov
cmp
je
dec
xchg
sarb
popa
sbb
jno
ficomps
pop
push
test
test
loopne
inc
xor
pop
jg
jbe
mov
testb
mov
pushf
outsl
jge
inc
dec
or
sub
rcrb
mov
inc
mov
jp
jb
mov
dec
xchg
das
rcr
jle
bound
add
aam
icebp
cmc
mov
cmp
cmp
push
fsubl
repnz
decb
lock
lods
push
aad
push
mov
movsl
jp
lret
divb
enter
mov
sbb
pop
rcll
push
ss
mov
and
mov
mov
shlb
sub
out
sub
xchg
push
cmp
jge
ret
mov
movsl
mov
sbbl
jmp
push
insb
fdivl
pop
mov
imull
inc
pop
daa
push
xor
lds
and
sbb
dec
in
mov
push
cltd
ss
push
or
in
and
in
add
mov
xchg
sub
imulb
cmp
aam
jmp
mov
and
lds
repnz
and
aaa
mov
or
cld
xor
in
jp
mov
sub
cltd
mov
test
sbb
sbb
sub
push
repz
sub
xor
sub
inc
fidivl
mov
leave
mov
cmp
icebp
xchg
or
jns
push
icebp
xchg
mov
pop
xchg
movsl
adc
mov
push
mov
aas
bound
cmc
movsb
test
xor
mov
jge
and
in
mov
mov
test
xchg
push
xchg
nop
lods
and
jmp
xchg
adc
int
mov
lods
mov
pop
popa
cld
dec
sbb
out
inc
repnz
int3
jo
fs
inc
imul
idivl
xchg
pop
xor
sbb
mov
enter
inc
popl
in
mov
and
inc
push
or
inc
or
xchg
pusha
jno
jnp
test
pushw
xorb
std
roll
in
nop
jae
or
fisubrs
pusha
mov
dec
adc
sbb
and
push
sbb
or
mov
test
mov
or
sub
adc
mov
icebp
or
mov
push
inc
jmp
jbe
insl
or
pop
pop
cmp
sbb
and
mov
insl
push
lds
cmpsl
jg
insl
add
or
sub
repz
sarb
sahf
cmpsb
cmp
sub
dec
pop
pop
rcrb
das
mov
test
xchg
es
lods
es
cmp
call
flds
popa
pop
mov
cmc
xchg
add
loopne
jnp
mov
loop
or
cmp
add
push
call
bound
outsb
xchg
jne
ret
xchg
xchg
sub
dec
fsubrs
xchg
mov
cmc
mov
pop
adc
jo
sti
xor
mov
inc
pop
sub
sub
cmp
jae
push
cmc
lods
lods
fidivl
mov
xchg
jge
clc
mov
ds
popa
push
sbb
jp
outsb
cmpsl
scas
and
push
mov
pusha
imull
push
push
add
sbbb
mov
sbb
dec
mov
das
sarl
mov
fldenv
into
jmp
out
outsl
ret
dec
mov
pop
insl
loopne
insl
insb
jle
push
daa
jb
cmpsl
cmp
pop
jno
mov
mov
jae
add
daa
cmp
aam
outsl
jnp
ret
jnp
mov
xchg
jo
fdivs
sbb
push
jae
mov
in
icebp
mov
hlt
xchg
ja
cld
pop
test
jle
or
cmpsl
xchg
adc
test
xorb
les
pop
hlt
sbb
mov
mov
pop
add
enter
inc
xor
icebp
in
dec
add
cld
das
in
insl
lret
fwait
sti
xor
xchg
xor
ljmp
pop
jmp
arpl
mov
imul
lcall
mov
rclb
testb
adc
fsub
cli
push
or
mov
add
nop
dec
ret
stc
mov
cmp
mov
in
mov
std
cmp
jecxz
push
and
jne
mov
test
mov
or
jnp
sub
mov
lods
outsl
cmp
inc
mov
mov
or
xchg
add
pop
nop
andb
mov
xor
inc
push
arpl
fidivrs
inc
aaa
into
push
jne
sbbl
push
mov
aaa
loopne
mov
xor
and
push
xor
xchg
test
add
xchg
add
inc
ljmp
popf
insb
shlb
pop
stos
or
pop
pop
sahf
js
std
xchg
sti
jae
adc
sbb
mov
cld
ficoml
addl
pop
pop
add
fsts
pop
dec
sub
outsb
in
mov
jb
cmc
inc
mov
mov
lods
in
jg
push
mov
mov
cltd
add
jnp
out
js
pop
cmp
dec
loope
xchg
inc
fimull
test
insb
imul
out
push
daa
mov
pop
scas
mov
xchg
les
mov
sub
dec
into
pop
out
jecxz
aaa
pushf
xor
out
lcall
repz
and
rcl
cmc
jecxz,pn
aad
repnz
push
mov
mov
ds
in
clc
aaa
testb
int
sub
sbb
imulb
mov
or
or
jne
cmc
xor
lret
lret
dec
lods
lock
pushf
imul
adc
out
xchg
sub
jae
aad
popf
enter
pusha
or
or
fcomi
cmp
nop
stos
es
mov
int
shll
stc
adc
dec
sbb
inc
mov
icebp
subl
cmp
lcall
outsb
mov
data16
add
lea
dec
inc
bound
dec
lahf
dec
loopne
mov
hlt
dec
sbb
sub
mov
jnp
mov
fwait
bound
into
in
andl
in
popa
pop
mov
mov
fsubrl
loopne
repnz
fcomps
or
jae
jb
pop
es
pop
push
loopne
jg
mov
daa
or
fcomi
push
rep
stc
sub
mov
inc
inc
fwait
lods
sahf
mov
xchg
inc
fmulp
testb
xchg
and
dec
pop
mov
rorb
in
xor
cld
adc
addr16
into
pop
mov
mov
or
cmpsb
cmp
sub
dec
add
push
adc
loope
testl
fsubl
mov
es
dec
xor
sub
pusha
mov
mov
int
int
and
dec
mov
loop
sahf
xor
mov
jmp
pop
jmp
cmpl
leave
xor
cli
pop
mov
push
int3
and
xor
or
push
and
ret
hlt
icebp
mov
pop
push
lods
test
jp
lods
scas
adc
orl
or
sub
daa
cmp
jecxz
cmp
push
push
mov
dec
dec
jo
fadd
jbe
js
and
sahf
mov
adc
add
mov
cmp
push
mov
dec
cmpsb
push
out
mov
outsb
mov
xor
ret
repz
adc
lahf
ss
ror
test
aas
push
cld
dec
ds
cmp
and
mov
fldcw
pop
fs
rcrb
mov
in
inc
xlat
arpl
les
cmpb
mov
hlt
mov
mov
jnp
and
push
mov
inc
int3
dec
mov
jo
leave
int
cld
xor
insl
in
pop
sbb
push
in
inc
jg
outsb
xor
push
mov
xor
ljmp
inc
fsubrl
scas
and
enter
addb
mov
adc
out
pop
push
mov
pusha
cmp
mov
loope
or
mov
push
cmp
lods
mov
shrl
mov
pop
stos
fstpl
sbb
mov
jge
out
out
xor
insl
sub
insb
sub
jnp
jne
loop
jmp
les
push
lret
and
and
sub
subb
cmp
cld
outsl
inc
fsubrs
mov
xchg
daa
mov
fcoml
and
psrlw
jmp
scas
mov
xor
mov
shll
call
add
pop
pop
sub
fdivrs
mov
mov
loope
pusha
mov
insb
mov
test
sahf
out
enter
inc
cmp
in
loop
jg
into
addr16
fs
adc
pop
adc
int
loope
and
mov
mov
mov
or
cli
ds
or
dec
xchg
lods
lret
enter
and
push
popl
aaa
popa
push
jne
add
cmp
sbb
mov
out
imul
in
repnz
jge
shrl
jns
mov
addb
scas
push
in
lods
cmc
dec
pop
mov
enter
sbb
and
mov
test
repz
insb
outsb
fsubrs
or
xchg
xor
movsl
pop
cwtl
dec
test
sub
xor
jbe
subl
push
or
xchg
jb
test
lahf
rcrl
fnstcw
add
dec
push
xor
daa
movsb
dec
arpl
sbb
adc
outsl
mov
mov
insb
xor
mov
testl
jns
jo
loope
and
stos
dec
rclb
imul
outsb
mov
test
rcll
insl
imul
jmp
and
inc
inc
imul
push
xlat
icebp
mov
add
jne
lods
fcom
mov
scas
jg
imul
in
lret
mov
int3
lret
push
or
xor
jmp
popf
pop
outsb
int3
cwtl
jb
mov
outsl
dec
xchg
push
cmpsl
mov
add
pop
fs
dec
jno
gs
mov
push
add
pop
sub
imul
ja
sub
add
jnp
movsl
mov
push
stos
push
jae
js
add
adc
mov
nop
fcmove
std
push
nop
xor
pop
jmp
lcall
es
clc
fmulp
nop
stos
hlt
lods
cli
inc
xor
int
insb
fistpl
mov
jnp
pop
lods
test
divb
fsts
pop
popf
stos
cmp
jne
aaa
sbb
mov
add
sbb
lods
xchg
pushf
pop
inc
popa
jns
jp
ret
stos
mov
int
fbstp
pop
lods
mov
out
or
loope
out
cmp
js
out
push
xchg
mov
cmpsb
push
push
sbb
lea
aas
sahf
add
cmp
pop
push
hlt
stos
dec
div
movsb
jg
lret
in
push
jecxz
inc
jne
out
and
test
sbb
sub
jbe
ffree
sbb
hlt
pop
jl
add
or
xor
sbb
add
test
cmp
jecxz
lds
jnp
cmp
jecxz
pushf
test
icebp
pop
or
sbbb
xchg
hlt
int3
xchg
jne
push
jae
mov
fdivrs
in
leave
jecxz
mov
stos
mov
aaa
testl
jl
mov
sbb
call
add
xor
mov
mov
push
fwait
in
stc
ds
daa
aad
sub
push
mov
jmp
mov
mov
mov
pop
dec
mov
cld
xor
jecxz
jno
sar
push
mov
cmp
or
mov
mov
mulb
rclb
sbb
jl
cmp
adcb
fstps
sub
int
repz
jl
adc
das
ljmp
lcall
sbb
inc
sahf
orl
mov
stc
push
rep
in
incl
adc
cwtl
inc
imul
adc
mov
insb
xlat
inc
scas
sbb
fnstcw
loop
stc
pop
outsb
sub
repz
xchg
xor
jp
xor
mov
add
dec
mov
pop
dec
sbb
sti
xor
and
fs
pop
je
pop
push
cmpsb
push
add
pop
aaa
add
shll
out
mov
mov
sbbl
dec
roll
test
aaa
jae
pop
scas
ds
outsb
xchg
sub
xlat
stos
cmpsb
cmp
sbb
pop
insl
mov
xchg
data16
jp
test
std
xchg
add
xor
imul
loope
repz
and
cmp
push
mov
push
test
push
dec
inc
cli
andb
rolb
inc
and
stc
inc
inc
das
insl
neg
sbbl
shll
cmp
cmp
pop
lods
ja
pop
inc
pushf
je
xor
xchg
movsb
lods
mov
sahf
mov
in
out
ret
mov
push
testl
outsl
loopne
mov
popf
rclb
add
push
push
push
inc
andl
sbb
push
dec
and
push
xlat
mov
jecxz
hlt
sti
or
adc
mov
clc
insb
popf
sub
repz
cmp
dec
das
cmp
test
jmp
cmp
jb
orl
inc
pop
mov
js
stc
mov
fidivl
mov
cs
movsl
cmpsl
ret
outsb
xchg
cs
aam
lret
test
xor
das
pop
cs
sbb
sarb
rcrl
sbb
fisubs
out
sbb
cmpsl
std
fs
push
mov
mov
sbb
call
sub
pop
negb
dec
je
cmpb
imul
jge
mov
in
ret
je
movsl
sahf
fdivs
mov
and
andnps
loop
mov
and
shl
std
insl
in
push
push
inc
sbb
insl
xchg
mov
add
int
jmp
cltd
sub
shlb
inc
xor
add
jnp
xor
xor
fdivl
addr16
test
ja
lock
or
ds
pusha
loope
pushf
loopne
testb
adc
arpl
adc
mov
adc
mov
push
call
ss
cmp
je
sub
adc
nop
xor
js
xor
call
faddl
fwait
out
sub
and
sub
xchg
shlb
pushf
sub
mov
xor
gs
aam
aaa
and
nop
adc
hlt
mov
ljmp
mov
dec
add
stc
ret
jnp
sbb
into
push
cmc
std
jecxz
xor
xor
insb
jmp
movsb
repz
dec
xchg
repz
xchg
mov
dec
sbb
pop
xor
push
push
sahf
xor
sub
subl
popcnt
dec
dec
sub
mov
es
pushf
iret
xchg
jge
dec
sti
ljmp
fistpll
sbb
or
cmp
ja
push
nop
mov
add
dec
repnz
fildll
in
pop
outsl
jnp
lret
cmp
je
jb
mov
flds
inc
cmp
cmpsl
sbb
pop
jne
nop
sbb
loope
and
ljmp
sub
mov
mov
mov
hlt
divl
mov
jp
mov
fcoms
scas
ret
popa
stc
in
xchg
scas
pop
add
lret
inc
xor
add
mull
dec
je
in
cmc
into
add
or
dec
xor
xchg
mov
sbb
lret
icebp
fidivl
shl
push
xchg
popa
jnp
pop
fs
mov
pop
mov
loop
push
call
jae
xchg
and
cmpsl
aas
or
mov
hlt
sbb
cli
out
shll
add
inc
jae
pop
repnz
ljmp
or
push
sub
int3
adc
pop
cld
fwait
cmpsl
lret
shll
cmp
sbb
lds
pop
adc
je
stos
and
xchg
out
and
fsubp
adc
subb
push
xchg
fxch
sub
mov
sbb
add
and
sub
out
sub
cmp
xchg
insl
jae
sub
push
adc
xchg
pop
andb
cli
and
add
fildl
das
or
in
lahf
or
cltd
add
lcall
mov
mov
imul
and
popa
scas
aad
sub
cmp
adc
sahf
lea
xchg
push
jmp
ja
shrl
push
jns
jge
xor
jl
jne
mov
addl
mov
pop
insb
daa
adc
jb
pop
movsb
in
inc
inc
mov
xchg
adc
out
xchg
sbb
xchg
push
dec
in
and
addr16
ja
fcomps
movsb
out
xchg
lea
mulb
sbb
outsb
push
rorb
fbstp
test
mov
es
jle
enter
xchg
test
dec
jecxz
mov
cmp
sub
mov
les
loope
cltd
fiaddl
push
into
nop
add
mov
cmp
sbb
add
cld
js
ja
lods
mov
andb
dec
cmpsb
dec
dec
push
jmp
push
cltd
icebp
sbbl
cs
test
mov
js
mov
adc
inc
pushf
scas
xor
pop
mov
dec
sbb
adc
loopne
addr16
notl
hlt
and
adc
mov
into
push
push
jg
cltd
and
or
push
dec
stos
inc
jl
adc
or
enterw
outsb
fsub
mov
stos
nop
das
or
aad
xor
sub
rcrl
pop
mov
sbb
jnp
pop
cmc
ret
loope
mov
dec
cmp
add
or
call
dec
outsl
push
mov
test
lods
arpl
jle
int3
cld
cltd
pop
adc
in
mov
rorl
mov
fstps
mov
bound
test
xchg
and
ret
int3
push
in
aas
sbb
imul
notb
test
fnsave
xor
loopne
pop
sbb
push
xor
jge
mov
push
clc
jg
into
inc
sbb
mov
inc
add
jg
sbb
loopne
sarl
sub
push
fstl
pop
mov
xor
inc
cld
fcmovne
inc
dec
shrb
rclb
shrb
dec
pop
orb
or
fldt
outsl
and
sti
inc
sbb
loope
or
scas
and
adc
or
outsb
cltd
and
insl
mov
pop
clc
pop
cmp
xor
insb
jno
lret
mov
popa
dec
pusha
xchg
stos
xchg
fdivrl
adc
std
or
jo
lods
in
inc
ljmp
mov
dec
sub
cwtl
call
shlb
and
push
mov
sahf
jge
hlt
scas
mov
scas
push
dec
sbb
dec
insl
clc
sub
popa
xor
mov
in
inc
sti
xchg
sbb
bound
arpl
les
scas
mov
mov
push
cmpsl
cmc
mov
aaa
cmp
mov
mov
pop
pop
cltd
xor
sub
test
xchg
jne
dec
mov
fst
imul
insb
adc
mov
xchg
add
cwtl
in
mov
ret
sbb
add
or
cmpsl
insb
mov
jmp
push
lods
stos
jne
inc
adc
cli
outsl
inc
sub
rcrb
and
inc
push
mov
push
mov
icebp
push
fwait
movl
xchg
or
call
out
jnp
cmp
or
mov
outsl
add
ds
loop
mov
idivl
rcrl
xor
add
dec
dec
lods
sbbl
loop
mov
loope
sbb
fsubs
inc
add
inc
lds
cmp
pop
rorl
jle
aam
pop
arpl
dec
jp
mov
les
outsl
xabort
mov
sbb
pusha
ss
add
xor
push
iret
cli
cmp
mov
int3
pop
mov
pop
sub
push
pop
pop
je
les
repnz
push
ret
dec
dec
outsb
inc
das
xchg
iret
push
add
lret
xchg
sub
xchg
aam
cli
add
cmp
ljmp
mov
or
in
dec
movsb
stc
adc
xor
cmpsb
fsubrs
loopne
xchg
std
ss
movsb
or
pop
xchg
inc
and
mov
adc
jmp
push
pop
out
ljmp
idiv
mov
cli
or
mov
push
or
inc
aaa
in
imul
sbb
rcl
dec
xor
sub
jecxz
mov
les
fisttpll
pop
push
xchg
test
xlat
fidivrl
pop
aaa
jb
iret
xor
aam
imul
repnz
xlat
imul
loopne
jecxz
push
add
pop
lea
mov
mov
and
in
xchg
gs
sbb
xor
pop
jbe
pop
sbb
lahf
roll
pusha
nop
repnz
mov
jg
fcmove
aad
mov
sbb
clc
imul
lods
pop
fsubs
dec
mov
jle
mov
adc
pop
call
fs
inc
aas
cmc
test
push
fucomi
dec
adc
xor
cmp
insl
testl
mov
push
shlb
loop
sub
mov
sub
lods
xlat
lods
dec
xchg
sub
lret
xchg
scas
aad
pop
and
adc
xchg
xchg
sub
sub
repnz
sub
shrb
dec
adc
mul
xor
adc
hlt
addr16
and
movsl
fcmovb
xchg
mov
jb
mov
and
lea
adc
inc
jae
popa
ss
adc
sbb
fistl
movsb
cmp
data16
ss
lea
test
push
sahf
loopne
shrb
xchg
ret
dec
fbstp
imul
push
fldl
sub
pop
pop
movsb
mov
inc
orl
sti
cmp
inc
test
jnp
sub
inc
adc
mov
add
xor
adc
pop
fcoms
sbb
insb
icebp
dec
stos
imul
mov
iret
mov
shrb
pop
pusha
ss
aam
cmc
push
mov
mov
mov
addr16
mull
loop
mov
fsubrl
push
fwait
xlat
jbe
push
mov
dec
stos
sbb
push
push
mov
out
xchg
xor
inc
call
popa
inc
cmpsl
popf
stc
fmuls
scas
jae
adc
or
into
push
sub
je
popf
pop
dec
inc
cli
push
push
lds
adc
xchg
adc
leave
dec
mov
push
testb
out
mov
in
sub
ss
push
add
mov
out
or
lds
lea
sub
pop
gs
es
and
mov
push
or
adc
cmpsl
sbb
in
push
sbb
cmp
inc
fsts
sbb
push
ss
sahf
add
cltd
scas
ds
fidivrl
and
stos
out
es
pop
push
sahf
cltd
xor
nop
int
out
push
mov
push
jno
mov
ret
cltd
inc
pop
lret
movsb
mov
cmp
mov
jno
adc
mov
int3
jae
fnstsw
mov
push
mov
in
cmp
sahf
adc
or
cs
pop
cmp
in
es
outsb
mov
jns
cltd
mov
outsl
mov
inc
sub
iret
fldt
ret
dec
adc
mov
inc
int
and
popa
mov
std
dec
in
push
pop
loope
mov
mov
loop
lea
mov
xlat
jne
and
adc
gs
repz
inc
fninit
lcall
mov
outsb
movsl
cmp
and
sub
jo
outsb
in
dec
gs
or
ret
outsb
jmp
dec
inc
xchg
and
shr
ja
xor
call
scas
sbb
xorb
or
and
frstor
mov
mov
iret
jecxz
mov
lret
adc
pop
ret
out
push
push
and
jmp
cmp
in
cs
jnp
lea
iret
push
dec
cli
repz
or
sbb
stos
push
fidivs
push
xor
xchg
into
sbb
in
jbe
jno
push
adc
sarl
ljmp
inc
test
sahf
add
enter
jne
xchg
mov
sbb
jo
mov
dec
pop
or
sbb
and
dec
xchg
and
sbbl
and
add
loop
xchg
pop
jle
xor
xchg
sub
pop
inc
inc
shrb
rorb
pop
mov
andl
lcall
outsl
sbb
mov
cmp
push
push
mov
and
adc
aas
repnz
ds
lods
inc
push
loop
test
sbb
xor
call
call
cmp
and
pop
mov
push
push
pop
xchg
pop
fs
add
movsl
jbe
adc
xchg
daa
pop
pop
mov
xchg
and
in
repnz
adc
inc
push
or
mov
ror
insl
cmp
jmp
push
add
aaa
jb
fwait
xor
addr16
jbe
out
incb
xchg
sub
lret
add
js
in
dec
mov
add
and
dec
and
jg
push
push
pop
dec
or
loope
xchg
subb
int
mov
cltd
push
loop
call
cmp
lahf
mov
lock
nop
mov
fwait
jp
int
push
jo
scas
pop
aaa
cmpl
test
imul
lods
mov
jb
std
subl
mov
fwait
xor
leave
or
add
xor
mov
scas
sub
data16
iret
xacquire
jl
cmp
sbb
aas
pop
dec
add
pop
movsb
mov
adc
jbe
or
add
cmpsb
cmp
add
adc
sbb
and
cmp
push
out
fisubrs
inc
inc
cwtl
repz
xlat
mov
inc
jmp
or
jno
sbb
inc
fmul
mov
jno
cwtl
mov
cmpsl
imul
ss
cli
mov
inc
jecxz
xor
leave
nop
loop
inc
pop
lea
jl
arpl
ficompl
or
hlt
aas
push
fsubrl
leave
cwtl
leave
fnsave
xchg
lea
rcll
iret
jne
out
jg
sarb
inc
dec
and
adc
loopne
mov
into
or
mov
cmp
pop
out
shll
mov
push
xor
push
fcmove
adc
cmp
cwtl
push
xchg
lds
loopne
inc
rorb
sbbl
data16
lods
outsl
cmpl
cmp
cmp
jb
push
call
or
and
test
rorb
cwtl
jle
sbb
xor
or
adc
mov
xor
mov
repnz
xor
fucomi
mov
fwait
in
mov
jp
insb
sarl
inc
cltd
stc
aas
mov
add
lds
imul
mov
add
ds
testl
fcmovne
popa
int
stc
test
sahf
popf
ss
std
xor
scas
in
and
jb
mov
xchg
jp
pop
adc
loop
inc
dec
jae
adc
mov
leave
test
test
xchg
sub
movsb
adc
outsl
in
sbb
daa
cmp
out
jae
pushf
mov
adc
fnstenv
sub
jle
xchg
xchg
mov
aam
or
movsl
push
shl
bound
xor
aas
xor
out
pop
jl
add
inc
push
sti
imul
in
push
xchg
dec
aas
dec
or
sub
sub
add
mov
les
jp
xchg
rorb
ror
xor
arpl
hlt
lds
or
js
stos
jnp
push
mov
cmp
adc
sub
sub
stos
lds
scas
inc
inc
cwtl
push
ljmp
imul
push
pop
mov
jbe
push
cs
push
cs
xchg
inc
or
pushl
xchg
mov
mov
fdivl
shlb
repz
shrb
or
inc
dec
movl
inc
cmp
push
push
pusha
fmull
cmp
outsb
push
testl
mov
dec
adcl
pop
mov
orl
jge
mov
xorl
sub
fs
push
add
or
mov
in
orb
mov
fmull
imul
mov
shrl
mov
inc
jb
movsb
xor
loopne
insb
popf
aam
xchg
iret
mov
pop
mov
cmpsb
fldenv
ret
pop
arpl
stos
loopne
mov
dec
inc
popa
mov
push
push
out
iret
les
dec
loope
aam
in
subl
inc
cmpsl
enter
jecxz
cltd
enter
xchg
jb
call
mov
lods
test
cltd
or
icebp
xor
ja
in
pop
inc
xor
jb
jns
push
inc
xor
xchg
add
sar
aas
insl
andb
je
adcl
jno
aad
es
test
test
pop
cltd
in
repnz
and
mov
mov
xor
fnsave
bound
mov
subb
into
fdivl
daa
cltd
test
aad
dec
add
loope
push
ds
or
jbe
dec
data16
jecxz
cmp
outsb
loop
stos
pusha
stos
jae
adc
lods
inc
push
in
addl
cld
pop
call
cld
mov
aad
mov
pop
repz
add
sbb
pop
repnz
test
in
add
inc
pusha
jge
sbb
call
mov
fldcw
inc
fdivs
loopne
pop
shlb
stc
mov
push
cmc
in
pop
or
pop
pop
sub
pop
cmp
push
cltd
push
scas
sub
and
dec
mov
xlat
in
sub
cmc
insb
xchg
aam
xchg
add
adc
cmp
add
mov
mov
fsubr
cmovl
sti
cmp
xlat
repz
adc
sbb
insb
outsb
jge
rcll
stos
add
jecxz
fxam
sbb
sub
cmp
jmp
or
add
daa
jbe
sub
add
dec
inc
fdivrl
fldenv
pop
inc
outsl
adc
jbe
mov
test
into
xchg
in
hlt
push
lock
icebp
lret
jno
mov
push
movb
cmc
cmp
gs
and
or
mov
orb
sbb
stos
fst
add
add
daa
and
test
cmpsl
mov
insb
out
push
scas
cs
addr16
mov
movsl
cmp
adc
mov
xchg
mov
popa
mov
jns
jg
scas
stc
loope
loop
int3
aas
push
sub
sub
out
and
bound
mov
int
cld
arpl
pop
testb
jae
cmpsl
cmp
cmp
add
mov
pop
push
sub
and
cli
pop
cmp
inc
sub
cli
mov
mov
repz
out
push
xchg
add
and
mov
insb
inc
shr
dec
scas
or
push
loope
pop
cmp
xchg
mov
out
lret
call
imul
imul
lock
push
mov
push
sbb
push
nop
jecxz
jae
and
mov
cmp
inc
fwait
sub
sbb
mov
divb
pop
test
in
cmpsl
out
dec
bound
mov
xchg
outsb
mov
rcl
pop
sarb
mov
push
dec
stc
nop
jp
fwait
arpl
push
add
imul
das
dec
push
pop
loope
jge
sub
outsb
sbb
fiadds
orl
jmp
repnz
lock
jne
adc
int
mov
addl
aad
lahf
jo
pop
inc
mov
mov
lcall
mov
inc
lods
mov
adc
jno
xchg
test
push
push
jmp
fs
and
in
sahf
and
or
and
inc
push
fwait
rorl
sbb
mov
cmpl
xchg
jl
mov
add
notb
fildll
xor
dec
das
xor
mov
ffree
inc
pop
repz
mov
fldl2t
orb
mov
and
adc
out
sbbb
mov
adc
cmp
pop
mov
cmp
lcall
jb
shll
aad
cmc
inc
pop
cs
mov
mov
cmpsl
ss
push
pop
lds
or
mov
enter
or
push
cmp
out
adc
scas
jge
or
insl
xchg
lods
and
adc
out
popf
addr16
push
mov
mov
push
lahf
ss
mov
pop
test
and
mov
add
je
mov
and
andb
imul
jp
cmpsb
push
cmc
adc
test
add
jl
lods
cs
in
xchg
nop
jmp
mov
mov
xsha256
cmpsb
xlat
add
repz
sub
jo
inc
fcomi
xor
mov
stos
xor
cmpsb
icebp
mov
lcall
sub
lock
repz
cs
jl
divl
dec
test
inc
sub
stc
inc
xchg
sarl
lret
lcall
sbbl
ret
jno
in
xchg
dec
gs
mov
das
call
jmp
jg
pusha
lds
mov
pop
push
sub
sbb
xor
mov
ret
insb
pop
rolb
scas
xchg
or
sbbl
push
cld
filds
scas
in
mov
add
mov
add
movsl
mov
jle
xchg
test
aam
and
push
inc
xchg
std
xchg
xchg
sub
push
loopne
sbb
outsb
or
jb
xchg
movsb
sar
pop
sbb
xchg
bound
cmp
xor
sub
iret
mov
aas
lcall
pop
jmp
in
sub
pop
aaa
imul
in
xchg
pop
mov
dec
lret
loop
loopne
in
scas
lcall
std
out
adc
push
cltd
out
rorl
sub
loope
jbe
or
fs
push
jne
adc
out
mov
cld
call
mov
mov
das
sahf
or
sub
repz
shrb
popa
add
pop
xchg
test
push
insl
les
cmpsl
testl
cmp
lcall
pop
fldenv
lret
sarl
cmp
mov
mov
mov
add
addb
out
mov
cs
mov
adc
fiaddl
mov
mov
jg
add
ja
push
cmp
iret
mov
adc
out
mov
repnz
inc
push
jecxz
inc
cld
xchg
mov
mov
xchg
aas
sub
jbe
mov
popa
adc
enter
ja
jge
ficomps
addl
adc
popf
dec
xchg
and
xor
jp
rclb
adc
pop
dec
pop
andb
mov
inc
int
push
dec
push
push
out
jle
inc
outsl
lcall
pop
loopne
arpl
shrl
dec
adc
sub
mov
jge
mov
cmpsl
cmp
adc
pushf
xor
insb
ret
into
outsb
and
add
pop
mull
lcall
out
pusha
xlat
sarl
fstps
cli
sub
cltd
and
jp
push
inc
push
loope
in
fmul
pusha
adc
lahf
lods
ffreep
pop
outsl
std
sbb
xchg
jp
or
mov
test
jecxz
outsl
ret
loopne
es
iret
fcmovnbe
scas
adc
sub
pop
adc
rcll
xorl
ja
xor
movsb
scas
aas
xchg
popa
mov
adc
mov
test
adc
sbb
insb
into
xorb
data16
pushf
negl
xor
push
gs
ljmp
jb
xchg
xchg
stc
lea
sbb
pop
jbe
mov
cmpl
loope
in
ficoml
clc
in
pop
out
mov
add
mov
and
mov
test
repnz
outsl
jne
jl
or
loopne
push
orl
mov
fisubs
shrb
dec
js
fs
add
popa
dec
mov
sbb
mov
dec
sahf
sub
push
mov
push
jb
fwait
sarl
sbb
stos
sub
mov
jb
out
jo
or
inc
cmp
mov
xor
mov
pop
adc
dec
jmp
or
cmp
jo
dec
ds
stc
push
ret
mov
cmpsl
mov
jle
ret
lcall
sub
dec
cmc
sub
jmp
cmp
fs
dec
push
xchg
cmpsl
fpatan
fdivr
enter
mov
pop
pop
arpl
sbb
cs
stos
inc
out
mov
pop
aaa
push
cmc
in
xor
pop
xchg
cmp
cltd
push
fnsave
je
jno
fisubl
andb
es
les
cld
shlb
scas
jno
fld
lahf
andl
adc
lret
sbb
inc
jns
push
push
jo
or
xchg
in
xchg
jo
pop
mov
mov
int3
and
outsb
pop
mov
adcl
in
push
shll
or
xchg
mov
pop
xor
and
mov
out
ret
clc
cmp
ljmp
sbb
dec
int
hlt
pop
mov
dec
lahf
jb
mov
repz
adc
fbstp
mov
test
xor
addr16
adc
lea
dec
imul
jg,pt
pop
cmp
sbb
insl
add
mov
pop
adc
popa
std
call
xor
ljmp
ret
ret
arpl
sbb
mov
rcl
push
pop
sbb
ret
mov
push
cld
mov
std
sbb
imul
adc
bound
cltd
inc
inc
test
fimuls
jne
fs
inc
inc
or
pusha
pop
dec
pop
xchg
lea
rclb
pop
mov
xlat
imul
sub
in
jno
xor
faddl
fimull
sub
lods
sub
cmp
mov
dec
test
xor
cmc
inc
into
mov
push
negb
fdivl
and
mov
adc
inc
test
xor
sub
lea
je
xor
adc
stc
xor
in
sub
mov
aaa
clc
lock
mov
jns
or
lock
push
lock
xor
inc
ss
adc
push
shl
jo
xor
cwtl
xorl
sbb
out
jno
mov
and
pop
cmpsb
lock
lret
add
mov
mov
or
cmpsl
gs
jno
js
push
push
cmp
outsl
pop
andl
cmp
add
gs
xchg
sub
sbb
xchg
mov
das
mov
stos
lds
mov
or
mov
xchg
xor
or
inc
data16
lea
adc
dec
cmp
pop
out
mov
in
and
repnz
dec
cltd
rclb
jnp
imul
test
mov
pop
addr16
inc
mov
jns
xlat
mov
sbb
ja
sub
imul
arpl
xchg
push
xchg
mov
movsb
cwtl
cmp
rclb
xor
pop
adc
cwtl
push
mov
imulb
movsb
xor
sbbb
and
cmpsl
loope
xchg
and
negl
lods
cmp
repz
inc
fmulp
xor
int
js
cmc
aas
dec
aad
out
jle
jg
pop
movsl
ret
in
std
jnp
mov
jg
adc
cwtl
xchg
xorb
jnp
inc
test
or
push
lods
pop
xor
mov
mov
sub
orb
push
lods
jae
sbb
aad
call
xor
arpl
imul
aaa
jns
push
inc
jmp
adc
jo
scas
sbbb
lods
mov
or
outsl
cmp
rclb
inc
add
icebp
cltd
mov
stos
inc
lret
push
inc
outsb
inc
dec
lock
addr16
sub
fs
and
push
push
mov
mov
xchg
xlat
sbb
clc
and
shl
lds
xchg
aaa
xor
leave
loope
xchg
mov
notb
sbb
stc
out
or
or
jbe
pusha
test
mov
push
std
daa
ja
mov
mov
dec
not
cmp
push
aad
popf
push
inc
fwait
or
lahf
sub
fs
shr
popf
pop
outsl
int
mov
and
lds
enter
rorb
sub
adc
test
xlat
jg
jb
subl
lret
int
stos
outsb
push
jecxz
pop
gs
cltd
jae
pop
dec
push
dec
jns
sarb
jo
cmp
pop
lods
test
sti
or
cmp
in
rcrb
pop
xor
int
cmc
xorl
or
rclb
fs
inc
and
movsl
push
mov
repz
push
cld
push
sub
and
cmp
minps
xchg
in
jns
push
cmp
mov
xchg
mov
fsubrl
in
ljmp
testl
lods
cld
movsl
xchg
mov
inc
pop
inc
test
das
pop
xor
notb
push
addr16
enter
and
mov
loopne
pop
cmp
sub
pusha
fistpll
dec
dec
cmp
scas
add
pop
out
push
or
mov
sub
add
movsl
mov
pusha
or
push
xchg
popf
lahf
aaa
and
imul
nop
je
in
sub
sahf
pop
sub
inc
mov
xor
pusha
test
ss
imul
mov
cmc
rcl
rcrl
repz
int3
mov
sbb
sub
mov
cmp
jbe
add
sub
cmpsb
js
lahf
out
lret
aaa
cld
jmp
xchg
pop
imull
ret
mov
sahf
or
dec
pop
xchg
sub
mov
mov
in
cmp
insl
xchg
jne
add
je
rcrl
mov
xchg
fwait
les
xor
xchg
push
aad
insb
fdivl
repz
mov
insl
decb
outsl
jle
ficompl
and
ss
fsubs
push
lods
int
into
arpl
icebp
cmp
jecxz
aas
adc
addb
std
pcmpgtd
lock
inc
jmp
daa
or
cltd
jge
push
xor
mov
pop
mov
aaa
sub
push
adc
add
mov
movsb
fldenv
or
add
sub
imulb
in
adc
jge
inc
ss
and
add
xchg
dec
dec
hlt
and
or
hlt
mov
xchg
xor
xchg
aas
mov
or
ljmp
stos
mov
add
les
loop
xchg
lea
lret
js
sbb
popa
xchg
fidivrs
pop
xchg
into
push
lahf
jl
push
xor
es
cmc
sbb
loop
cld
stos
repnz
into
xorb
xchg
gs
lcall
push
mov
rol
movsl
xor
sub
rcl
mov
in
mov
daa
test
imul
in
pushf
inc
or
and
push
out
mov
dec
addr16
dec
dec
and
pop
int
xchg
sub
insl
lcall
sub
es
or
and
out
mov
xor
mov
clc
pop
popf
sbb
and
loopne
mov
or
test
aam
pop
push
cmp
repnz
nopl
js
cmpsl
sub
and
inc
xchg
decl
movd
sbb
inc
popa
push
mull
push
lret
jl
testl
pusha
std
lods
out
test
sbb
xor
jnp
push
test
inc
fildll
and
xor
dec
movb
sti
jecxz
repz
push
xchg
push
cld
jmp
stos
sub
xchg
stos
inc
in
test
push
jb
push
mov
shll
inc
into
cmp
add
addr16
pop
push
sbb
iret
jp
mov
adc
fwait
xchg
xchg
pop
das
inc
and
rcrl
xchg
outsb
mov
jno
dec
jmp
mov
and
gs
or
add
or
adc
das
mov
adcb
sbb
insb
addb
push
sahf
in
xchg
jno
shl
and
xor
js
cmpsb
push
fucom
mov
xlat
outsb
add
ret
lret
inc
outsb
mov
xchg
push
dec
loop
mov
push
and
sbb
idivl
loopne
movsl
fwait
cmp
jns
add
fwait
pop
adc
rorb
leave
sbb
mov
dec
xchg
xchg
adc
stc
add
test
push
nop
xor
pop
dec
inc
push
mov
rcrl
xchg
cld
dec
aas
fdiv
popa
flds
xchg
pop
mov
mov
xchg
or
xor
js
repz
arpl
push
sahf
sbb
cwtl
mov
jbe
sahf
mov
out
add
sbb
mov
sti
push
or
mov
ljmp
mov
shll
imul
ds
mov
repnz
or
or
mov
sub
filds
mov
in
test
fimull
mov
xlat
and
mov
xor
sub
je
int
jmp
aaa
mov
push
insl
es
xor
imul
fstps
daa
outsb
xchg
add
push
mov
mov
out
iret
inc
xorl
stc
and
repz
outsl
mov
adc
or
popf
or
pop
std
repz
cs
int
in
ja
mov
nop
jnp
outsl
cli
aad
rolb
dec
sbb
mov
cmp
sbb
repz
mov
mov
push
mov
and
imul
mov
testl
nop
sbb
sbb
leave
andl
aad
fcmovnu
outsl
add
cmp
xchg
mov
inc
push
jbe
mov
cmpsb
cmp
push
fisubl
int3
inc
shr
xor
repz
dec
insb
cmp
in
mov
dec
out
or
rcrb
call
sub
sub
push
dec
aaa
into
out
cmp
mov
mov
push
push
jmp
jp
push
inc
cli
test
in
lea
popf
xor
iret
in
sbb
mov
sbb
fwait
xchg
mov
fwait
push
mov
test
scas
pushf
aaa
mov
mov
out
scas
in
pop
dec
aaa
popa
xchg
pusha
neg
mov
xchg
xor
fsts
push
sbb
sbb
cs
or
mov
push
in
and
icebp
jl
test
mov
aas
jle
repz
xlat
sbb
iret
dec
ret
movsb
cmp
mov
mov
fcomip
test
sbb
ffree
xlat
lret
mov
cltd
loop
fnstsw
daa
leave
int
push
xor
jne
adc
fmuls
test
push
in
fmul
rolb
jg
push
mov
inc
push
push
lahf
push
sbb
cltd
dec
or
mov
add
cmpsb
test
xchg
mov
popa
std
dec
sbb
aad
jecxz
repz
fcmovb
or
stc
lea
jle
iret
adcl
mov
push
jne
insb
xor
iret
mov
xor
ljmp
lods
xor
popf
or
sahf
fistps
in
test
dec
dec
jl
js
lcall
mov
movsb
mov
inc
ret
add
mov
push
test
inc
push
push
fcompl
xchg
mov
push
sbb
mov
xlat
xchg
push
mov
fnsave
dec
push
sbbb
sbb
mov
fmull
pause
jns
in
test
fmuls
fldl
mov
sbb
push
in
jns
push
mov
sub
or
and
and
xchg
dec
outsl
dec
stos
out
mov
movsb
les
aad
cmp
bound
xchg
push
lret
out
push
lret
mov
outsl
mov
je
nop
mov
sub
add
pop
in
jne
sahf
andb
cli
jo
push
mov
mov
imul
cli
roll
movsw
jns
mov
dec
arpl
mov
sbb
lds
out
ret
popf
sub
cld
aam
push
in
in
pop
repnz
push
ret
mov
add
sub
aad
and
js,pt
ds
dec
cmp
fsubrl
fcmovnbe
enter
filds
aad
addb
icebp
out
push
jle
dec
pop
mov
add
pop
mov
dec
inc
clc
ja
insl
push
push
xchg
aas
and
imul
push
dec
addl
lods
xor
push
dec
pop
xor
jae
add
lea
lret
ds
scas
sbb
sub
repz
dec
sbb
nop
jns
mov
stos
mov
and
out
add
xor
inc
popf
mov
das
adc
scas
cmp
mov
adc
jmp
xchg
mov
test
inc
aas
push
cmpb
xlat
out
and
cs
fmull
cmp
loop
pop
mov
pop
inc
cld
test
inc
jecxz
imul
scas
out
sti
call
in
inc
rclb
push
cwtl
sbb
sbb
push
fwait
cld
imul
div
sbbl
xchg
jne
jp
push
and
int
in
es
push
daa
jg
adc
jne
mov
ds
xchg
out
iret
jnp
jbe
cmp
xchg
dec
fidivl
inc
push
push
cmp
repz
test
orb
and
xchg
push
lods
stc
stc
es
lret
cmpl
mov
xchg
push
js
pop
cmc
or
mov
pop
mov
ficompl
mov
dec
pop
lock
inc
lahf
les
je
lea
repnz
les
xor
push
cmp
in
or
mov
push
add
enter
mov
sbb
mov
pop
loope
call
filds
fucomi
xor
cld
or
pop
adc
out
fcomps
and
mov
shrl
shrb
adc
jns
sub
or
mov
lret
mov
jb
js
leave
repnz
inc
outsl
arpl
cwtl
dec
mov
push
push
mov
ljmp
jo
and
andb
jbe
cmpsl
daa
mov
push
pop
mov
dec
negb
ror
push
cwtl
je
out
mov
pop
xchg
test
cmp
fwait
pop
fs
xchg
push
cmpb
dec
ljmp
ja
fisubrl
bound
sbb
dec
cwtl
add
push
cmp
pop
mov
lcall
popf
test
jne
jmp
push
pop
out
dec
enter
ss
push
leave
icebp
out
jl
lcall
sbb
out
jae
mov
popf
popf
iret
or
fdivrl
and
scas
ja
cmp
xchg
pushf
push
fwait
sub
shll
fistpl
mov
mov
xchg
pmulhw
sub
mov
jmp
xlat
addr16
inc
fcomps
sub
sbb
lock
pop
pop
push
js
jge
in
mov
inc
cmp
aaa
push
lock
mov
icebp
les
or
or
movsb
inc
push
mov
subl
mov
dec
popa
sub
rcrb
jo
out
int
add
addb
xor
and
push
adc
mov
push
test
or
mov
loope
fdivs
pop
test
hlt
into
ret
pop
repnz
lea
lea
xor
lahf
ds
pop
or
add
mov
in
out
loop
push
test
sub
in
test
testb
repnz
mov
pop
enter
divb
loop
movsb
mov
jmp
push
rcrl
xchg
outsb
shl
das
cwtl
and
mov
add
xchg
dec
fisubrl
gs
or
jno
test
mov
outsl
adc
aaa
or
subb
stos
pop
insl
test
decl
decl
sahf
in
arpl
jl
sahf
xor
fisttpll
mov
addl
and
ficoml
dec
sbb
popa
cmc
scas
adc
cmp
ljmp
jnp
push
loope
test
cmpsl
std
scas
add
scas
test
dec
aaa
cwtl
mov
mov
in
or
pop
aas
jbe
out
pop
mov
sbb
enter
jle
add
push
or
jl
mov
dec
xchg
xchg
dec
jl
add
jecxz
dec
arpl
int
xor
push
push
mov
mov
aad
or
loope
inc
dec
inc
push
ret
lret
decl
std
fldcw
cmpsb
xchg
pusha
stos
fwait
fs
pushf
les
mov
inc
jmp
fildl
fmuls
fs
xlat
inc
jmp
adc
pusha
lret
lret
and
fmull
ja
aaa
xchg
lds
aam
fld
xor
dec
bound
and
xor
mov
fstl
shrb
inc
and
add
jae
aam
mov
fistl
loopne
cltd
push
das
inc
mov
movsl
add
or
mov
sahf
cmp
and
into
lds
std
sub
push
inc
push
sbbb
fdivrs
xor
xchg
add
add
and
jno
dec
pusha
test
rclb
xor
jne
xor
into
xor
loopne
xor
lods
and
push
push
insb
pop
cmpsl
shrl
jp
aas
sub
xlat
mov
add
push
cltd
gs
stc
mov
sarb
add
inc
pop
dec
dec
popa
subl
test
test
sub
popa
lods
or
mov
cwtl
mov
push
and
mov
ss
xchg
pop
mov
pop
cwtl
lea
call
and
pusha
scas
inc
xchg
jg
ret
int3
into
jno
or
xchg
imul
xchg
iret
sbbb
inc
inc
pop
adc
mov
sub
add
popf
or
lods
insl
add
cmp
ss
mov
js
lret
add
stos
adcl
and
jmp
insl
shr
das
push
adc
cmp
mov
mov
adc
out
nop
jge
adc
jno
mov
stos
jbe
push
or
add
add
cli
pusha
out
xchg
mov
adc
fmul
mov
cmpsl
out
mov
and
push
or
aas
pop
in
xor
push
dec
mov
inc
mov
jp
pushf
enter
xchg
pop
mov
iret
out
xchg
testb
pop
dec
adc
push
push
mov
pop
cmp
mov
aas
bound
daa
test
pop
push
sbb
orb
mov
adc
bound
cmp
pop
into
push
or
dec
clc
sub
jecxz
cmc
mov
ja
imul
sub
sub
jmp
inc
cmp
jnp
lret
fstl
scas
jns
mov
dec
mov
jnp
cmp
sbb
out
xchg
ret
pop
repz
jl
adc
xor
popf
lods
out
lods
mov
xor
xchg
adc
pop
inc
mov
popa
fsubrs
sbbb
push
pop
mov
sahf
dec
stc
mov
inc
and
jmp
push
inc
lret
mov
mov
push
hlt
fwait
sbb
scas
insl
add
mov
mov
sbb
xchg
ds
out
popa
ljmp
mov
outsb
ficomps
pop
adc
xchg
sub
mov
cmpsl
clc
adc
inc
jecxz
sbb
pop
movsl
push
mov
aas
mov
fnsave
fwait
sub
mov
xor
imulb
jo
dec
jmp
add
out
xor
cwtl
push
mov
and
iret
data16
xadd
add
imul
out
lock
adc
lret
rorb
mov
jns
or
and
rcr
inc
add
cmpsb
mov
test
ret
in
add
mov
jmp
addr16
pop
loopne
stos
and
mov
fisubs
rcrl
fisubs
push
xor
leave
int3
jp
inc
push
outsl
js
in
jge
gs
add
test
sbbb
setno
insl
cmp
aaa
outsl
adc
movsb
push
jle
int3
xor
push
test
inc
data16
aaa
loopne
adc
cmp
inc
cmp
xchg
mov
adc
mov
popf
adc
cmpsb
test
orb
mov
out
decl
movsl
js
mov
jecxz
subb
sahf
push
xor
in
stc
mov
repz
fidivl
xchg
loopne
leave
test
rcr
cmp
int
mov
push
mov
push
pop
test
cwtl
cmp
pop
cmp
lcall
push
popa
fsubs
xchg
mov
stos
pop
insb
rolb
arpl
mov
dec
js
mov
inc
lock
mov
or
inc
jmp
sti
cmp
mov
xchg
ds
pop
sub
lock
gs
add
shrl
scas
cmp
inc
loope
xlat
or
sbb
sub
cld
in
fwait
push
xchg
xchg
and
sarb
lea
sbb
cmpsb
pop
in
mov
cmp
push
jno
pusha
scas
pop
push
shlb
jnp
repz
lret
testl
flds
cld
lods
inc
icebp
scas
std
push
push
mov
or
mov
push
jmp
mov
xorb
cmp
push
test
and
mov
ds
pusha
ss
cwtl
inc
out
repnz
and
adc
add
scas
dec
fs
scas
dec
push
daa
lret
xor
cmpl
sub
mul
fs
jg
inc
cmpsb
rcrb
or
pop
jno
xor
cmpsl
int
in
mov
sub
push
test
inc
and
inc
push
cmp
lret
inc
add
scas
sub
neg
ret
hlt
sti
jle
stos
adc
pushl
dec
js
stos
push
cmp
dec
add
mov
hlt
dec
movsb
pop
outsl
popf
xor
add
scas
and
push
imul
push
fstpt
out
xor
jp
outsb
and
or
adc
push
xchg
jo
es
adc
dec
cmp
inc
flds
mov
stc
arpl
inc
xlat
xchg
mov
dec
dec
cs
jp
push
repnz
sub
rcrl
movsb
push
sti
xchg
pop
subb
sbb
out
ret
dec
mov
out
bound
pushf
clc
les
push
shlb
std
int3
pop
dec
xchg
xor
divb
push
outsl
aam
movsl
sbb
in
xor
hlt
addr16
ret
adc
ror
aas
xor
ljmp
sub
test
jns
push
ret
loopne
sbb
popf
mov
mov
cli
xor
pop
cmp
je
dec
enter
mov
sub
ret
in
dec
mull
mov
hlt
add
lcall
jne
out
aas
mov
dec
mov
outsb
mov
stos
jl
movsl
and
push
movsb
add
add
notb
adc
cmpsl
daa
aad
faddp
push
call
scas
dec
or
mov
jne
jmp
mov
cmp
mov
sahf
mov
pop
les
jmp
scas
cld
fwait
mov
sbb
data16
xchg
mov
imul
shll
repnz
pop
shl
cmc
xchg
push
fdivrs
popa
cmp
jle
fmull
inc
nop
push
mov
ljmp
out
sahf
inc
cwtl
xor
lods
fisubrl
push
repnz
inc
dec
pop
pop
inc
mov
fidivrl
mov
pushf
dec
cmp
dec
fcoml
out
popf
dec
mov
and
loop
jmp
jns
jno
adc
imul
sub
orb
stos
imul
add
sub
sub
fistl
out
adc
cmp
insb
sbbl
xchg
leave
push
mov
enter
pop
test
into
mov
aas
sti
in
sub
lock
ret
jle
repz
daa
in
rol
into
inc
sub
fldt
mov
sti
push
popl
mov
push
out
sub
xor
jmp
inc
outsb
add
lahf
push
sbb
push
pusha
pop
pop
fwait
rorb
xrelease
mov
insb
pop
sub
cwtl
and
add
shlb
pop
cmp
jns
mov
jp
push
test
aad
fs
iret
adc
mov
rcrb
ret
mov
adc
and
lahf
push
jge
adc
sbb
inc
jo
movsl
scas
lahf
testl
mov
outsl
mov
push
negb
addr16
aad
xchg
mov
push
gs
enter
dec
pop
out
jle
jmp
mov
or
cmpsl
sub
jl
fcompl
push
loop
xchg
jmp
pop
inc
dec
shr
aas
addr16
fst
rcl
mov
cmp
bound
stc
sbb
add
cli
adc
or
add
push
mov
inc
xchg
in
xor
pusha
xor
push
stos
cli
not
es
cmp
subl
mov
or
jb
lds
add
repz
outsl
rcrl
testb
nop
lea
scas
pop
ficoms
fldl
adc
mov
fstpt
cmc
push
or
rclb
fdivs
lret
and
fmulp
inc
fdivr
incl
add
xsha256
cmpsb
push
jnp
and
cmc
mov
imulb
mov
mov
test
mov
inc
dec
sub
jmp
and
psraw
adc
hlt
mov
sti
or
lods
add
jo
push
das
dec
sub
mov
adc
sub
sbb
mov
mov
rcl
test
cmpsb
shll
cmp
mov
lock
jbe
adc
dec
and
cmpsl
in
test
adc
shll
sbb
add
mov
test
and
sub
into
lcall
xor
or
imul
loopne
mov
pop
cli
push
inc
xchg
xor
ret
pop
mov
mov
mov
jg
push
gs
or
push
shr
inc
push
loop
test
xor
dec
and
cmp
mov
and
leave
push
inc
cmpsl
cmp
fsubs
fsubs
dec
out
jp
push
or
mov
or
cli
ret
into
fdivl
inc
loope
clc
out
sbb
and
into
pop
mov
cmp
pop
leave
and
jle
stc
pop
test
fistps
enter
pop
cmp
jmp
dec
loope
push
js
xor
push
and
or
scas
std
aad
sahf
dec
out
inc
push
fisubs
rcll
imul
inc
loop
jo
iret
daa
leave
sub
sti
dec
push
in
jg
inc
popa
dec
ss
imul
pop
mov
xchg
call
imulb
cmp
into
jo
or
incl
jg
xchg
test
mov
out
xchg
loop
jge
mov
ss
xor
sub
out
xor
sub
or
insb
dec
ljmp
mov
int
cli
std
cmp
out
xchg
xorl
mov
outsb
std
mov
les
lea
mov
push
loope
fnsave
mov
loop
xchg
dec
jl
jecxz
in
jno
movsb
sbb
mov
lret
jle
in
fstpl
cmp
loope
mov
and
mov
mov
mov
cli
test
shr
outsb
add
pop
push
out
xor
dec
add
and
pop
test
push
xor
das
fcmovnu
mov
push
mov
into
xor
inc
rclb
pusha
xor
lock
xchg
out
jae
xchg
lcall
jne
sub
dec
stmxcsr
ds
in
lahf
ja
xchg
test
cmp
inc
push
dec
clc
mov
outsb
fildl
add
cli
or
rcrl
jo
hlt
lock
fsubrs
jl
insb
xchg
jnp
add
movsl
shlb
mov
mov
decl
cmpsb
insl
in
adc
enter
sub
cmp
pop
sub
lret
negw
add
inc
lods
inc
jne
pop
mov
stos
fwait
cmpsl
fcoml
cmp
mov
ljmp
notb
das
dec
push
jmp
or
add
aas
inc
cwtl
std
sbb
mov
rcrl
push
pop
stos
and
jnp
mov
jmp
ljmp
jmp
xchg
mov
sub
inc
sbb
mov
cmp
push
sbb
pop
mov
sahf
xor
cmpsb
xchg
sbb
ret
inc
cmp
cmpsb
cmp
xchg
mov
dec
and
aaa
dec
out
xlat
js
ret
in
out
xchg
ss
cli
in
andb
and
sbbb
cmp
pop
insb
imul
mov
idiv
inc
cltd
cmpsb
das
sbb
rcll
cmc
pop
sbb
xchg
outsb
cmpsl
mov
and
mov
out
jae
rcll
dec
and
pushf
stos
inc
xchg
push
mov
mov
pop
xor
nop
mov
add
dec
icebp
sub
cwtl
stos
dec
mov
pop
mov
leave
out
inc
cmp
fcomip
scas
fcomps
movsb
mov
test
sub
lret
std
out
and
int3
sysenter
push
xchg
ss
fwait
lret
jae
pushf
mov
daa
sbb
pop
add
mov
jno
out
mov
lcall
mov
jno
mov
jge
aam
and
negl
push
clc
mov
ss
sub
inc
push
lods
push
push
and
clc
lods
or
mov
aas
iret
inc
lock
xchg
sub
jbe
mov
shll
xchg
loop
dec
jne
and
call
cmp
jmp
dec
fdiv
cmc
push
xchg
nop
mov
rcrb
pushf
es
sahf
popa
inc
jge
rorb
inc
es
jo
sbb
push
xchg
jg
jae
imul
mov
clc
std
jbe
and
fwait
enter
add
adc
out
jno
or
mov
ret
and
mov
jno
or
ret
outsl
push
fmull
lock
cmpsb
sbb
mov
sbb
test
jg
aam
dec
mov
mov
inc
clc
sub
arpl
mov
lcall
rorb
jo
mov
or
push
loopne
add
push
mov
and
adc
popf
int3
jg
dec
fs
adc
in
or
in
cmp
lock
xor
or
mov
pop
aas
jl
mov
imul
iret
lcall
repz
pop
movsl
mov
cmp
adc
mov
fdivr
inc
fisubrl
cmp
imul
pusha
test
cwtl
mov
test
repz
mov
test
out
xor
lcall
pop
xchg
pop
cmp
movsl
mov
mov
pop
test
mov
fidivs
mov
shlb
jle
test
imul
inc
lds
mov
hlt
sub
mov
clc
aad
push
nop
sbb
mov
outsl
push
mov
nop
mov
test
enter
pop
pop
adc
aam
pop
dec
pop
jp
dec
sbb
sub
imul
cmpsb
mov
mov
test
cli
inc
add
mov
xor
jmpw
stc
inc
sbb
dec
cmp
fildll
push
data16
lea
mov
cs
mov
popf
pop
lods
xor
je
fistps
faddl
in
sbbl
arpl
or
add
cmpsb
push
sbb
mov
or
lcall
add
es
push
jno
xchg
cltd
cmpsl
cmp
jmp
ljmp
push
pop
popf
cli
test
rol
mov
mov
in
and
loopne
mov
ds
loope
xchg
inc
lcall
mov
mov
out
push
inc
adc
sarl
xchg
mov
mov
xchg
inc
daa
inc
ljmp
sbb
lcall
add
cmpsb
push
pop
fldl
mov
and
rol
fimull
sub
lods
adc
add
jge
mulb
push
xchg
jnp
lds
cltd
cmp
insl
sahf
orb
cmc
stc
sbb
mov
iret
add
mov
adc
or
pop
mov
xor
lret
pop
mov
movsb
sbb
cs
jg
or
in
cmp
shlb
ret
push
push
test
adc
sub
push
inc
adc
lock
cs
cmc
mov
aam
mov
adc
aaa
inc
ja
inc
lock
mov
xor
in
das
stc
xchg
sub
leave
data16
push
arpl
sbb
dec
test
adc
bound
aad
or
in
xchg
in
mov
cmc
pop
adc
lahf
xchg
jp
ret
mov
mov
insb
mov
adc
jb
out
hlt
sbb
test
sub
push
repnz
sub
std
sti
pop
jno
fbld
push
push
cmp
mov
adc
xchg
popf
adc
mov
inc
jnp
test
mov
inc
push
cmpl
das
sahf
xor
push
hlt
insb
in
pop
sbb
testl
es
pop
lahf
div
imul
cmp
xor
and
pop
call
push
ret
repz
and
push
adc
inc
sbb
mov
push
ds
mov
or
dec
add
pushw
divb
jno
mov
insl
xor
lods
pop
cmp
dec
daa
outsl
call
dec
jno
jnp
inc
push
inc
aas
psrlq
and
cltd
jo
shll
mov
inc
cli
xlat
cli
pop
loopne
sbb
and
es
lret
int
push
dec
rcll
mov
inc
std
pop
testl
inc
and
xor
push
sahf
aas
dec
sarb
adc
pop
cld
mov
test
dec
mov
sub
loopne
les
push
mov
out
fcomps
pop
mov
stos
mov
movsl
icebp
jns
add
and
cmp
mov
or
push
jne
fsubrl
push
adc
icebp
movsl
lods
aaa
call
push
test
mov
sarl
outsb
andb
pop
xor
inc
sbb
pop
adc
mov
enter
adc
insl
add
push
shl
mov
inc
inc
adc
gs
addr16
into
adc
ret
xor
push
test
add
xor
enter
adc
pop
xor
push
sbb
and
push
scas
push
fidivs
test
xor
pop
mov
out
and
icebp
cmp
add
add
sub
jns
in
divb
inc
mov
and
mov
bound
mov
push
sub
pop
mov
lret
lds
pop
add
jl
fists
adc
xchg
lock
test
pop
mov
outsb
loope
pop
sbb
aad
sahf
xchg
inc
add
jecxz
inc
leave
pop
insl
shlb
ret
lahf
push
jbe
inc
jg
adc
and
mov
cli
jnp
fisubrs
std
sbb
fisubrl
add
cmpsb
mov
fistps
mov
mov
popa
mov
push
jecxz
gs
aad
adc
cmpxchg
arpl
test
fsubrl
in
jnp
loope
xchg
sub
xor
jg
cwtl
aas
out
insl
push
orb
and
dec
test
xor
sub
fnstsw
and
mov
outsb
jecxz
lods
jp
mov
lret
sbb
xchg
pop
aad
jmp
dec
pop
jno
scas
mov
pop
enter
repnz
mov
adc
mov
mov
frstor
test
jbe
in
sub
out
cmc
xchg
mov
sub
fadds
dec
cli
fcmovbe
imul
popf
icebp
lcall
xchg
xor
push
fidivl
out
aam
ja
rcrb
adc
sub
fwait
jle
mov
je
or
xor
test
jbe
inc
popf
sub
mov
lahf
rcl
into
mov
sbb
mov
mov
sub
push
out
jne
je
enter
inc
xlat
imul
or
mov
shrb
push
cld
dec
add
xchg
cmpsb
pop
fstpl
dec
stos
cld
in
sub
out
inc
or
test
ss
cmpsb
add
sub
fadds
cmp
xchg
repz
in
mov
fbld
out
mov
inc
fisubrs
out
sbb
xchg
pop
in
test
in
in
add
loop
pop
pop
jne
addr16
repnz
mov
jmp
jns
loop
xchg
and
sbb
cmp
add
out
adc
fbstp
test
pushf
sbb
lahf
mov
insl
shl
push
movsb
mov
push
pop
insl
in
leave
cs
idiv
cmpsl
movsl
jne
iret
push
pop
push
mov
test
sbb
mov
repz
or
inc
roll
mov
adc
decl
dec
jae
into
mov
in
in
push
cli
insb
ljmp
mov
mov
data16
pop
mov
sarb
mov
cs
pop
icebp
out
push
outsb
add
xchg
jnp
stc
push
ja
insb
js
cwtl
les
and
sbb
lcall
fnstsw
psubq
aas
dec
xchg
xchg
add
imul
popf
pop
mov
push
test
cli
xchg
test
jg
jbe
sbb
inc
test
pusha
shl
out
xchg
dec
pop
daa
mov
aas
sub
insl
pop
push
mov
imul
jp
test
andnps
sub
xchg
jp
push
jmp
ljmp
outsl
sub
jl
jae
sbbl
mov
or
insl
lods
in
push
shrl
inc
movsl
ret
in
cmp
fwait
dec
or
xchg
xor
push
inc
pop
sbb
push
stos
test
hlt
jbe
mov
cli
ja
fnstcw
insl
inc
data16
dec
scas
sbb
fidivrl
je
ds
xor
enter
rcrl
mov
lds
add
dec
pop
pop
dec
jecxz
hlt
cmp
pop
jmp
ss
push
outsb
mov
mov
nop
clc
ja
std
pop
es
and
push
repnz
xchg
ss
mov
psadbw
add
ds
fists
jmp
mov
adc
push
in
cmp
data16
movsb
jmp
inc
test
jae
push
insb
cld
lret
mov
std
sbb
xor
push
lods
out
fisttpl
xor
cmp
cwtl
test
mov
popa
insl
or
rcrb
js
cmpsl
movsb
inc
sbb
sti
xchg
xchg
sub
ficomps
cmp
nop
scas
mov
test
lods
int
lret
ljmp
xor
push
or
shr
sti
arpl
and
aas
add
sti
pop
andl
loopne
and
stos
jns
mov
or
fidivrl
cmp
fwait
jle
pop
pop
lea
pusha
and
stc
pop
cmp
and
pop
mov
mov
aas
push
inc
pop
dec
aad
rcrb
aam
mov
lds
jb
xor
out
dec
and
popf
inc
mov
pop
aas
daa
or
ljmp
cmpsb
in
push
jo
xchg
test
pop
jg
adc
jle
mov
jns
outsl
cmpl
in
cwtl
push
clc
jmp
loop
or
dec
pop
jge
aaa
and
lds
nop
test
push
adcb
lock
jb
jb
lock
in
sub
add
and
add
mov
imul
icebp
icebp
aas
push
xor
testl
stc
nop
lock
pop
xor
xlat
sbb
mov
jmp
loop
arpl
pop
mov
cmpsb
sbb
decb
nop
mov
jnp
mov
mov
sbb
jmp
mov
jg
jae
mov
lret
rcrb
adc
inc
enter
test
xchg
rorl
or
call
or
addr16
or
mov
pop
pop
mov
bound
mov
ljmp
icebp
lahf
cmp
jl
xchg
xchg
dec
sbb
jecxz
dec
pushl
inc
push
dec
cmpsb
mov
mov
adc
push
jecxz
xor
sub
sbb
out
add
fnstenv
inc
xchg
push
fidivrs
fwait
sub
inc
pop
and
mov
and
pop
fildll
push
adc
adc
and
aas
mov
adc
stos
loopne
jecxz
ja
gs
dec
adc
cmp
inc
imull
jb
sub
adc
into
pop
bnd
outsl
loop
xor
ja
push
xor
in
add
daa
xor
xor
adc
ret
and
ret
cld
jne
in
xchg
and
dec
ljmp
ds
mov
ds
jae
cmp
rorb
in
jmp
clc
or
mov
insb
je
sub
dec
out
cmp
inc
lret
hlt
jnp
cs
cmpsl
add
lea
lods
ds
cmp
sti
sub
lahf
ss
mov
push
mov
xchg
imul
mov
cli
leave
fldcw
mov
push
xor
and
push
frstor
xchg
addr16
lods
adc
mov
mov
dec
xchg
cmpsb
mov
push
dec
cwtl
mov
adc
pop
rcll
in
jb
xchg
sahf
imul
mov
push
cmpsl
data16
dec
rol
in
nop
jl
cmp
ljmp
and
iret
xlat
scas
dec
icebp
mov
jne
mov
jne
mov
pop
and
ret
cld
sub
and
movsb
mov
daa
icebp
call
fstps
cmp
dec
mov
pop
int3
sub
or
in
mov
pop
add
int
add
cmp
xlat
cltd
xor
aaa
xchg
mov
sbb
jl
les
negb
iret
test
int3
sub
in
int
sbb
sti
pop
inc
mov
leave
jmp
shlb
notl
loopne
shll
or
dec
inc
loopne
in
insl
rdpmc
cwtl
cmpsl
add
movl
cmp
sbb
pop
xor
loopne
orl
adc
mov
xchg
add
add
popf
movsl
in
insl
inc
dec
push
insb
jb
sbb
scas
lret
push
xchg
pop
mov
xor
in
and
dec
inc
pop
jge
xor
xchg
sub
hlt
add
mov
stc
push
xor
fs
mov
ret
sti
cwtl
push
insb
leave
mov
dec
fcmovb
aaa
pop
hlt
addr16
cmpsb
ret
mov
stc
pop
fldt
xchg
dec
shlb
cmp
cs
das
mov
in
sti
adc
mov
mov
pop
jne
les
mov
mov
mov
rorl
inc
shrl
sbb
sbb
pop
dec
inc
adc
or
adc
lret
and
ret
test
add
nop
and
fs
sbb
xchg
mov
mov
jmp
sbb
jno
adc
imulb
push
aas
dec
aad
mov
pop
dec
enter
sub
jo
outsb
lahf
scas
xor
or
sbb
and
enter
jae
ja
xchg
lods
jo
lret
in
dec
fnsave
stos
and
mov
fs
add
jle
cld
add
adc
cmp
test
dec
insb
call
mov
lods
xchg
test
rcl
insb
add
rcl
push
mov
mov
sub
std
jns
and
pop
or
mov
ret
push
and
popf
aas
dec
dec
and
adcb
cld
cmp
pop
mov
sbb
inc
push
push
sub
gs
dec
jb
cmp
lock
rolb
push
icebp
mov
mov
mov
aam
pop
push
in
pop
aaa
movsl
fcoml
and
sbb
insl
insl
adcb
push
out
xor
popa
stos
pop
es
or
sub
imul
orb
lea
sbb
mov
and
mov
loopne
stos
clc
mov
in
insl
xor
pusha
and
test
lret
mov
adc
jnp
xlat
out
xlat
adc
jns
cli
aam
movsb
jg
jp
fcoms
jmp
in
mov
aaa
lret
xor
lods
in
xchg
stc
adc
jo
xchg
popf
jo
aad
dec
in
jg
jne
pusha
out
rclb
in
xor
xchg
pop
clc
notb
into
push
fisubrl
push
imul
adc
mov
sarb
ja
rclb
xchg
inc
cli
add
es
testb
xchg
xor
dec
lds
adc
xchg
mov
sti
xchg
push
adc
pop
mov
xor
or
daa
push
cwtl
fdivrp
xchg
imul
fxtract
mov
movsl
nop
sbb
fstps
mov
sbb
in
sbb
lea
mov
rorl
add
clc
mov
and
test
sub
or
das
xor
fs
nop
add
jne
dec
pop
rorl
add
jns
loope
fcomi
stos
or
pop
out
hlt
in
sub
jno
mov
mov
shlb
ret
pop
xor
scas
cmp
in
popa
clc
pop
dec
inc
mull
jg
lods
xchg
and
jo
mov
fnsave
icebp
fs
or
dec
movb
insb
mov
mov
ljmp
dec
addr16
jnp
jp
cwtl
in
out
sbb
outsl
stos
mov
int
jg
pop
out
test
pushf
ja
aas
test
adc
jnp
test
xchg
sahf
add
sbb
dec
imul
inc
popf
adc
aas
in
mov
fstpl
cmp
cmp
jo
or
mov
or
sbb
shll
sbb
pusha
fidivl
aaa
iret
arpl
shr
stos
mov
arpl
and
add
jo
mov
push
push
jle
jbe
into
xlat
mov
stc
jge
ret
adc
stos
in
pop
inc
inc
loop
stos
insl
xchg
cs
roll
mov
xlat
bound
nop
outsb
or
fs
push
cmp
pusha
stos
fcoml
push
test
xchg
jae
notb
movsl
mov
mov
lock
pop
xlat
push
and
pushf
addr16
jmp
cld
dec
jns
dec
and
pop
fiaddl
push
scas
and
or
dec
bound
jmp
enter
out
enter
or
pusha
insl
inc
loop
jno
call
mov
and
icebp
sub
stos
push
or
jo
in
arpl
mov
sti
xor
sbb
in
test
mov
xchg
or
cmp
push
icebp
stc
adc
sub
loopne
cmp
in
pop
inc
data16
add
fldt
mov
mov
rorl
jne
mov
cmp
sub
mov
mov
fidivrl
int
cmp
or
in
imul
pop
insb
fidivrs
add
push
xchg
aam
test
scas
add
push
sar
mov
xor
movsb
out
xchg
push
mov
mov
dec
iret
inc
or
mov
test
mov
mov
xchg
outsb
xor
mov
aaa
rorb
cmp
cmp
dec
push
cmp
xor
hlt
inc
sub
sbb
mov
sub
or
shll
mov
icebp
and
mov
adc
and
sahf
push
sahf
cmp
mov
and
sbb
popf
and
mov
leave
test
leave
sub
clc
insl
mov
pusha
cli
add
in
jns
push
xor
xor
scas
pop
xchg
add
xor
push
xor
popl
fidivrs
sahf
mov
push
out
fisubrs
hlt
cmp
sbb
sbb
sbb
cmp
ret
hlt
rolb
arpl
adc
mov
cs
pusha
push
sub
ret
repz
push
xchg
in
dec
int3
test
mov
fs
test
push
jl
repz
lock
aad
xchg
mov
out
aas
lahf
inc
xchg
mov
cmp
repnz
les
sahf
ja
es
sbb
mov
decb
test
ficoms
push
push
mov
test
jl
adc
ljmp
enter
sub
dec
dec
jle
andb
es
push
mov
jp
add
out
add
in
dec
jo
jmp
in
add
scas
fnstsw
out
adc
popf
jbe
sbbl
adc
popa
add
out
cmc
mov
jne
sub
xchg
xor
imul
fcomi
mov
mov
daa
mov
inc
fmull
push
mov
fwait
xor
popa
sbb
push
inc
loopne
push
repz
mov
int3
arpl
push
icebp
cmp
or
mov
pop
adcl
lcall
sbb
pop
aaa
movsl
cmp
lret
jmp
sub
gs
pushf
out
push
dec
sub
xor
call
in
enter
lahf
or
jle
std
jl
and
xchg
fildl
mov
xchg
je
pushf
into
frstor
jge
fstl
imul
sti
and
shl
sbbb
xor
sbb
mov
sbb
push
xor
xlat
outsl
dec
push
mov
cld
sub
cmp
mov
mov
dec
push
cli
and
xlat
push
stos
mov
dec
pop
imul
sbb
les
enter
inc
pushf
repnz
or
push
and
pop
into
add
cmp
xchg
pop
xchg
out
fistpll
hlt
push
jmp
pop
scas
scas
xor
sub
or
es
ja
daa
dec
xor
cld
pusha
push
out
push
jge
or
iret
mov
jnp
push
test
cltd
push
xlat
fnstsw
int3
ret
rclb
fbstp
pop
fidivrs
push
fcmovne
dec
nop
jnp
sub
ljmp
lahf
dec
mov
mov
mov
pop
lahf
not
inc
sbb
arpl
ds
sbb
jnp
ja
jcxz
dec
pop
lock
shll
xor
cltd
push
sub
test
daa
aad
mulb
dec
popf
push
incl
cmpsl
mov
sahf
ror
repz
jmp
test
insb
shrd
xchg
sub
push
scas
cwtl
cmp
mov
push
sub
arpl
and
insl
call
xchg
je
movsl
movsl
mov
inc
test
xor
iret
push
cli
xchg
jp
rcr
mov
jne
dec
mov
jae
fmul
push
rol
popf
mov
xchg
sbb
mov
in
xchg
pop
pop
lret
sbbb
fstpl
push
xlat
xor
push
mov
daa
add
xchg
scas
mov
lcall
jle
jmp
lods
dec
es
pushf
sub
adcl
ljmp
dec
add
jne
hlt
cmp
add
testb
lods
decb
lea
inc
and
and
adcl
jl
sbb
fimuls
push
neg
sub
stos
nop
xor
inc
leave
pop
outsb
lahf
inc
dec
push
gs
cmpsl
inc
leave
push
gs
dec
fildl
lock
xor
or
pop
outsl
dec
xchg
push
inc
mov
or
and
std
mov
mov
popa
jl
out
push
cltd
fcmovne
jbe
data16
repnz
addr16
jge
in
mov
push
cltd
xor
push
arpl
popf
int3
xchg
add
cmc
sbb
xchg
xchg
test
xchg
mov
cmp
mov
mov
xor
xchg
aad
in
xor
insb
adc
cwtl
insl
xchg
pop
dec
mov
jne
cmpsl
and
pop
cmp
mov
pusha
out
rcll
lret
in
jge
cli
scas
add
jge
or
fs
dec
sbb
sbb
xchg
sbb
cli
arpl
mov
lret
leave
and
dec
push
stos
cmpsl
xor
out
popf
mov
mov
arpl
loope
inc
fistpl
ss
or
jg
mov
and
pop
fsubl
inc
mov
lods
fidivl
subb
daa
pushf
dec
cmp
inc
adcl
subl
dec
xchg
dec
mov
or
and
pop
leave
clc
nop
daa
sbb
gs
push
xor
gs
adc
push
xchg
sbb
push
in
jmp
mov
sub
int
cmp
test
data16
xchg
daa
inc
push
fnstenv
fsubr
sub
fwait
xor
fistpll
adc
xor
xor
dec
pushw
imul
negl
mov
sti
jle
lods
push
ret
pushf
inc
stc
loopne
sbb
clc
test
jne
imul
jmp
movsl
xor
sub
lea
test
sbb
test
in
or
sub
or
mov
or
loop
mov
inc
mov
and
aam
outsl
rcll
outsb
pop
rsm
rcrl
mov
shll
call
mov
loope
test
insl
andb
or
call
add
sbb
adc
xor
cmp
insl
inc
pop
mov
push
rcr
dec
mov
test
loop
xchg
pop
pushf
or
mov
roll
cwtl
push
mov
sarb
sbb
dec
dec
push
push
adc
mov
push
add
jo
popa
pusha
sbbl
xor
int3
in
in
fstpt
mov
ret
add
outsb
incb
or
imul
aam
mov
loop
mov
mov
roll
sbb
shlb
xlat
dec
push
xorl
sbb
add
stc
lods
outsb
test
dec
pushf
adc
popf
lods
call
ret
mov
dec
shrb
xor
orb
or
lods
xchg
ret
gs
or
add
shlb
push
out
rcl
adc
mov
decb
mov
iret
or
mov
and
movsl
cmp
adc
cmp
es
xchg
mov
inc
sbb
rcrl
mov
hlt
push
lock
mov
xchg
mov
js
pop
sub
cli
shll
in
sbb
lcall
scas
lods
inc
push
fdivrl
jmp
mov
xchg
inc
stc
stc
icebp
cmpsl
arpl
fdivrs
xor
dec
pop
cmc
incb
xchg
adc
dec
jne
out
adcl
xor
mov
and
mov
xchg
decl
mov
in
jns
jecxz
xor
dec
fsts
mov
scas
cmpsb
int3
stos
call
das
xchg
imul
lods
ret
xor
inc
in
cwtl
mov
jo
push
xchg
lods
nop
xchg
jnp
ret
mov
dec
es
movsb
inc
mov
inc
rorb
dec
fistl
ljmp
push
adc
ds
sub
pop
xchg
test
movl
adc
mov
add
mov
xchg
adc
scas
stc
nop
loopne
pop
lock
mov
in
ja
inc
stos
or
xor
mov
aas
or
jp
stos
lcall
aad
push
in
pushf
xchg
popa
mov
scas
enter
jno
sbb
daa
mov
outsb
mov
daa
clc
add
cmpsl
pop
out
or
jl
movsb
xor
mov
mov
mov
sti
or
hlt
mov
xlat
outsl
adc
jo
fistpl
push
lods
push
arpl
sbb
mov
bound
movsb
mov
sbb
lods
out
sbb
popf
jb
pop
cwtl
xor
mov
add
adc
mov
xchg
and
push
and
cwtl
imul
aas
mov
mov
pop
mov
or
and
cld
lods
dec
cs
rolb
fiaddl
out
sub
cmp
testl
dec
dec
add
xchg
enter
cmpsb
jno
adc
xchg
ret
shl
jmp
xchg
cwtl
adc
fnstenv
sahf
clc
repz
cmp
adc
fwait
je
repnz
movsb
pop
adc
pop
cmp
roll
shlb
ficoms
or
mov
mov
cmpsb
cmp
cmp
stos
mov
push
into
add
cmp
xlat
int
insb
jb
jno
or
insb
ljmp
lcall
cmp
stc
cltd
jmp
jle
adc
sbb
inc
mov
and
rcrl
mov
cmc
xchg
in
sahf
lahf
xchg
jl
cmp
leave
sub
enter
rcrl
ljmp
loopne
ret
addr16
jmp
pop
or
add
push
rcl
sbbl
mov
insb
fstpt
or
mov
lods
bnd
sub
test
adc
xor
stos
test
aas
mov
sub
pop
insb
and
xchg
mov
and
jb
inc
loopne
ja
pushf
mov
push
ljmp
mov
cmpsl
push
into
addr16
mov
xchg
cmc
ja
loop
push
inc
fnstsw
mov
xchg
jno
mov
fsubrl
int
stos
outsl
pop
jbe
xchg
fdivrl
aad
int3
leave
cmpsb
popa
xlat
rcrl
sbb
movsb
daa
imul
xor
scas
aaa
hlt
push
pop
jne
pop
adc
jp
lods
jmp
or
lock
popa
push
mov
int
mov
arpl
scas
xchg
and
xchg
adc
cmp
mov
cltd
sub
mov
flds
or
call
pop
mov
lds
lret
add
xor
mov
jg
xchg
push
jmp
cmp
jo
lods
push
scas
mov
inc
sub
sbb
pop
repnz
jns
cwtl
cmp
bound
nop
imul
pop
jnp
inc
rolb
mov
data16
and
xchg
mov
loope
out
into
les
ds
popl
xchg
pop
hlt
fs
jg
ficoms
daa
ljmp
push
xchg
fmull
pop
mov
leave
mov
daa
lds
aam
push
arpl
into
or
nop
pop
stos
inc
sahf
aad
pushf
dec
stc
jg
pop
insl
xchg
out
adc
out
jbe
test
dec
jne
inc
fs
fistps
jnp
xor
enter
lcall
jne
mov
mov
aaa
shll
mov
or
sbb
pusha
lahf
test
mov
add
or
pop
mov
pop
xchg
cld
or
icebp
xor
lock
incl
rorb
jbe
lahf
mov
mov
or
cmp
stos
cld
in
add
cli
mov
out
mov
in
xor
xchg
xor
cmp
stos
cmp
inc
aam
ss
imul
add
add
pop
xor
pop
mov
adc
lods
adc
adc
lcall
push
sub
rorl
add
ret
cld
loop
sbb
inc
mov
xchg
inc
pop
mov
mov
loope
lods
repnz
shlb
adc
lcall
cmp
xchg
mov
lock
mov
lea
adcl
mov
add
lret
movsb
outsl
xchg
stos
cmp
mov
pop
lcall
clc
jnp
das
sti
push
shlb
lea
adc
xchg
xchg
ljmp
test
jg
inc
pop
outsb
testl
lahf
outsl
imul
adc
or
push
mov
jmp
push
clc
pop
cmp
xor
jl
rorl
adc
jbe
mov
adcb
imul
jnp
adc
pop
imul
add
ljmp
cli
rol
scas
push
mov
sbbl
jae
push
test
add
les
adc
shrb
mov
in
xorl
jmp
push
pushf
xor
mov
xchg
movsb
fnstsw
fistps
rcrl
push
std
push
frstor
cmp
sbb
mov
add
mov
or
rorl
mov
pxor
mov
inc
cmp
loopne
jnp
lea
push
mov
in
pusha
ljmp
pop
mov
inc
loopne
cmp
in
ja
clc
ret
ror
xor
mov
dec
and
push
mov
je
adc
ret
mov
pop
sbbl
cmc
jl
bound
shlb
gs
es
leave
jle
mov
outsb
das
pop
imul
pop
int
jmp
rclb
push
ss
aad
imul
shlb
pop
jbe
dec
pop
jns
dec
fstps
mov
int3
pusha
stos
inc
push
pusha
mov
repnz
jo
sbb
fs
inc
and
repz
and
stos
xor
lahf
cmpsl
adcb
addr16
mov
jl
mov
shlb
add
and
into
lcall
inc
add
stc
int
and
dec
sti
dec
jecxz
fidivs
xor
xor
mov
shlb
xchg
sub
push
idivl
aad
cmp
mov
pop
icebp
movsb
popa
sbb
mov
std
sub
imul
xor
xchg
sbb
rorl
fstpt
dec
shrb
addb
mov
lds
pushf
dec
ret
sub
std
pop
add
push
arpl
and
inc
aaa
pop
outsl
add
mov
mov
jae,pt
or
lods
cmp
iret
push
cwtl
jns
cs
loope
testb
ss
pop
sbb
imul
or
cmpsb
jg
movsl
cmp
rol
pop
pusha
xor
xor
jg
daa
jne
jae
push
fdivrl
popa
pusha
adc
dec
jns
clc
test
jmp
pop
xor
xor
test
cs
cli
stos
mov
lea
push
test
dec
and
cmp
jb
lds
imul
clc
and
pusha
rorl
xor
out
xor
dec
xor
cld
cmp
das
xchg
arpl
mov
adc
and
rorb
loop
xchg
adc
rcl
and
imul
aam
add
jne
aas
push
mov
out
shrl
xchg
fstpt
iret
or
lea
xchg
push
mov
sarb
out
or
pop
loopne
add
pusha
mov
pop
mov
jmp
sarb
and
sbb
mov
imul
inc
pop
bound
popa
js
test
or
daa
bound
cltd
lock
test
test
jne
popf
push
mov
pusha
es
out
xchg
jg
cwtl
pop
fistps
push
icebp
push
test
jns
sar
daa
fmul
mov
lahf
in
mov
and
jo
cmpsb
ret
insb
js
lock
xor
movsb
inc
cmp
pop
adc
push
shll
cld
xlat
jge
push
cwtl
xchg
mov
shll
mov
test
test
cld
or
mov
icebp
or
imul
pop
jge
pop
xchg
fs
adc
sub
push
lahf
sti
add
mov
adc
pop
or
ja
push
outsb
stos
in
mov
mov
aas
jnp
gs
xchg
sahf
mov
jnp
mov
ja
xor
mov
fsub
pop
cmp
mov
xor
aad
cmp
pop
js
xor
inc
mov
inc
testb
roll
mov
arpl
adcb
movsb
mov
clc
or
daa
pop
ljmp
bound
iret
or
xchg
sub
sbb
cmpsb
mov
xor
outsb
mov
mov
push
fldln2
add
in
addr16
push
sub
outsl
add
xorl
dec
nop
and
lods
mov
mov
fisubrs
aas
jg
adc
cmp
out
push
add
aaa
cwtl
popf
add
lret
sbb
insl
mov
icebp
addb
xchg
movsb
nop
mov
sarl
mov
jmp
pop
mov
inc
adc
rcr
push
loop
xchg
dec
mov
loop
out
xchg
bnd
aam
jp
pop
and
out
add
dec
out
lods
mov
stos
mov
fwait
xor
rolb
int
mov
or
mov
mov
out
jl
jmp
leave
inc
cmp
jnp
xchg
stos
icebp
adc
cmp
sbb
fwait
int3
lods
inc
sub
insb
mov
lods
js
outsl
in
mov
mov
push
add
roll
mulb
dec
aaa
push
or
or
inc
std
nop
sub
jmp
dec
les
xor
sub
pushf
js
add
fadds
arpl
fsubp
lods
loop
sub
or
dec
sub
ret
addb
pop
icebp
xchg
int
and
jno
inc
pop
push
les
jle
mov
std
inc
jae
cmp
roll
mov
pop
fwait
mov
int
jo
out
pop
dec
movsl
push
lock
jecxz
inc
adc
cmp
add
mov
int3
and
jp
cmpsb
test
dec
xlat
stc
popf
mov
xchg
daa
ret
pop
mov
cmp
lods
out
int
subl
scas
xchg
mov
scas
andl
dec
movsb
aad
sub
pop
cmp
xor
repz
add
sub
jo
mov
push
arpl
pop
imul
fsubr
les
es
cs
ja
sub
dec
xchg
add
insl
cvtps2pi
scas
inc
leave
xchg
push
pop
and
pushf
xor
add
test
adc
icebp
sub
adc
cmp
cmp
or
daa
fcomps
nop
dec
shl
or
mov
mov
ret
in
jmp
popf
mov
sbb
ja
std
xchg
lea
or
popa
jo
scas
cwtl
xchg
pop
add
and
xor
xchg
cmp
mov
pop
icebp
inc
daa
adc
test
mov
and
sbb
aas
push
push
or
js
pop
sbbb
push
or
add
testb
push
cmp
movsl
repnz
ja
add
mov
dec
arpl
ja
mov
fstpl
adc
loope
mov
aas
popa
add
dec
mov
icebp
inc
orb
out
pop
dec
stos
lea
sbbl
sbb
orl
mov
insb
dec
xlat
pop
sarl
mov
je
out
pop
xchg
enter
mov
and
cmp
adc
push
movsb
xor
push
arpl
sbb
sbb
adc
mov
aaa
jecxz
movsl
in
mov
cmpb
lea
dec
outsb
loope
ja
pushl
test
mov
rorb
cmpsb
sub
sub
mov
jmp
or
pop
jmp
js
fwait
sub
mov
pop
std
orl
jge
stos
lods
push
pop
mov
leave
rolb
ljmp
aam
pop
xor
mov
lds
lock
push
std
inc
and
jle
add
rorl
shrl
std
loope
aam
and
fwait
cld
arpl
sub
scas
inc
test
push
xchg
push
out
sbb
xchg
push
test
cmp
sub
cmp
cli
daa
fiaddl
mov
push
lods
inc
inc
or
sub
jo
add
and
pop
in
out
repnz
fisubs
push
or
pop
xorb
loope
push
adc
cmp
aam
mov
pop
adc
xor
test
scas
xor
push
cltd
push
or
int3
in
jbe
inc
lds
int3
imul
jns
xchg
sub
jbe
cmp
inc
xchg
scas
movsl
sbb
sbb
jne
push
adc
pushf
mov
popa
test
in
push
aad
dec
push
adc
mov
mov
push
mov
mov
xchg
stc
mov
out
cmp
mul
mov
repnz
or
jae
stos
movsb
cmp
mov
not
cmp
cmp
jno
dec
rolb
ja
push
mov
out
andl
lret
xchg
ljmp
es
pushf
or
daa
mov
inc
push
sub
clc
cmp
stos
subb
xchg
cltd
or
pusha
mov
mov
adc
aas
aas
jg
outsb
push
and
arpl
push
jle
dec
inc
decb
out
ficomps
in
push
gs
gs
test
cwtl
cmc
and
loopne
and
jg
fdivrl
jbe
xor
push
mov
add
adc
xor
sti
jl
leave
repnz
pop
imul
pop
mov
addr16
out
loope
scas
call
js
les
xor
or
imul
pop
dec
dec
mov
push
jge
ret
and
mov
adc
mov
sub
lret
cltd
jle
inc
mov
stos
adc
je
loopne
movsl
xchg
shlb
jo
rorb
mov
sahf
jecxz
lods
inc
xor
hlt
pop
push
mov
push
and
sbb
inc
inc
jge
inc
in
mov
adc
imul
mov
popf
sub
test
ja
add
js
insb
mov
aaa
jp
or
sarb
sub
inc
lods
icebp
repnz
dec
shr
jb
push
arpl
xor
insb
cmp
sub
cltd
stos
aas
stos
fldt
insb
sbb
push
push
cmp
jge
int
cli
cld
faddl
pop
cmpsl
cmpsb
mov
mov
stos
gs
dec
inc
pop
js
mov
add
cli
fsubrl
es
cmpsl
out
fnstenv
jbe
outsb
add
or
daa
outsl
out
push
mov
pop
out
jo
fidivrl
jg
leave
cwtl
mov
adc
push
xor
mulb
jnp
test
mov
rcrl
fmull
popl
dec
dec
lret
mov
jl,pn
dec
das
push
or
bound
cmp
int3
mov
leave
sbbb
cmp
jno
inc
xchg
mov
mov
add
pop
test
fmul
cs
add
and
popa
jl
inc
into
test
pop
cmc
dec
or
jge
push
push
rolb
push
cmp
into
into
movsl
mov
jg
jo
enter
mov
icebp
sub
dec
jl
inc
stos
shlb
aam
xchg
rol
jo
push
dec
lahf
jl
sbb
lea
mov
fisttpl
mov
cmp
jl
lds
adc
mov
addr16
es
fsts
adc
scas
fcompl
inc
sbb
jno
pop
cmc
adc
shll
pop
cld
and
xchg
and
loopne
sti
mov
out
sub
lods
pop
loop
adc
das
lcall
ds
push
xchg
sub
and
cmp
xchg
sbb
addl
out
push
loope
mov
jb
fnop
jmp
popa
daa
xor
mov
idiv
stos
mov
leave
out
xchg
ljmp
outsl
les
sahf
cltd
dec
jae
clc
mov
jb
in
pop
inc
push
cmp
jmp
dec
sbb
mov
add
jle
insb
stos
inc
push
popf
jns
cmpsb
daa
enter
shl
das
sub
scas
pushw
pop
cmp
adc
cmp
das
stos
call
int3
data16
out
push
dec
mov
or
fs
sub
cmp
orb
aas
orl
pop
lods
inc
dec
xchg
cli
pushf
cmp
mov
ds
jnp
lods
push
shr
and
push
mov
sbb
test
pop
sub
repnz
xor
out
sahf
xchg
mov
sub
notl
mov
push
fdivrs
fidivrl
cwtl
repnz
in
pushf
adc
xor
adc
and
int
push
andl
in
scas
adc
into
xor
inc
lods
cld
pop
xchg
je
das
lods
mov
jmp
and
lods
aam
ret
outsl
dec
stc
ja
mov
sbb
xorb
mov
push
push
lods
fnsave
sub
call
dec
push
aad
imul
mov
rcr
addr16
pushf
xor
mov
mov
pop
lods
mov
loope
or
jmp
stos
push
fdivs
pop
push
ret
das
push
or
outsb
mov
stos
imull
lods
push
in
xchg
les
cli
test
or
es
xor
xor
mov
sarl
xor
xlat
icebp
enter
mov
aad
mov
sbb
adc
jbe
loope
imul
insb
and
sub
pop
xchg
jle
push
mov
mov
jne
sbb
enter
pop
icebp
pavgw
les
push
sbb
add
loope
std
fcmovnbe
pop
xor
xor
lea
imul
mov
ret
test
ljmp
push
fcmovnbe
cmp
and
jecxz
xchg
mov
rcrl
repnz
jns
or
pop
inc
dec
in
stc
fistpll
pop
jmp
test
sub
sub
dec
inc
lods
mov
dec
adc
enter
mov
mov
sub
xor
xor
mov
xchg
adc
xor
mov
push
insl
cmp
pop
hlt
rolb
and
cmp
fwait
xor
push
mov
clc
push
mov
fidivrs
loopne
and
call
in
push
or
ss
leave
inc
pop
sti
sub
mov
in
sahf
inc
sahf
mov
mulb
mov
shll
inc
pusha
mov
shrb
mov
aaa
pop
js
cmp
adc
rorl
xor
ja
imul
pop
lea
inc
pop
mov
push
and
mov
mov
andb
mov
js
enter
cmp
push
inc
and
out
stos
pop
xchg
pop
roll
imul
sbb
in
pop
or
jb
repnz
popf
dec
inc
in
lock
pop
shll
test
add
jg
pop
pop
push
popf
cmp
loope
sub
lods
dec
dec
dec
cmpsb
lea
sub
js
outsl
movsb
jnp
inc
hlt
adc
inc
add
xchg
mov
data16
jns
jno
cltd
cmpsl
xor
fsqrt
and
xchg
sub
aas
mov
fistpll
inc
xchg
mov
test
dec
movl
mov
pop
add
jo
xchg
mov
clc
fcompl
cmp
xor
pop
fidivl
ficoml
test
ljmp
push
popl
add
out
test
xchg
jmp
xor
xlat
cs
add
xchg
jae
js
mov
ja
sbb
jecxz
jae
mov
lods
jg
cli
cltd
sbb
jmp
popa
dec
je
dec
push
sub
bound
dec
stos
frstor
mov
dec
pop
cmp
mov
inc
xchg
test
cmpl
jo
fwait
dec
sbb
jmp
icebp
xchg
enter
lahf
stc
inc
adc
push
iret
cwtl
stos
and
and
add
dec
xor
mov
xchg
incb
gs
or
xchg
lret
and
mov
lods
std
xchg
pop
notb
scas
jnp
cmc
dec
mov
les
ret
ljmp
les
sub
daa
std
int
outsl
ret
xchg
pop
cli
inc
jecxz
insl
sub
ds
and
pop
xor
mov
shll
sarb
sbb
iret
dec
movsb
mov
mov
pop
xor
or
scas
cmp
jnp
fisubs
cltd
lods
inc
fnstenv
xor
idiv
pop
cmp
insb
out
sbbb
add
into
cmp
adcl
mov
push
lea
fiaddl
pop
xchg
add
mov
fdivrl
sub
push
in
cwtl
pop
repz
jns
xchg
mov
lret
out
jecxz
lea
rolb
mov
cmpsl
mov
pop
or
cwtl
pop
jnp
shlb
jl
out
jge
xchg
mov
mov
xor
dec
cs
lea
cmp
cmc
ss
clc
inc
out
daa
mov
or
adc
inc
inc
xchg
inc
fsts
mov
lcall
pop
push
pushf
fisttpl
add
mov
cmpl
rcrl
xchg
fsts
inc
adcl
xor
std
pop
mov
jmp
outsl
add
movsl
pop
pop
fistl
aaa
or
jle
cmp
out
fmuls
and
xchg
movsb
mov
adc
pop
jnp
cmp
cs
int3
xor
hlt
in
push
fidivrl
lahf
in
bound
sub
int
lock
mov
cmp
mov
xlat
lods
incl
jp
int
lahf
jbe
dec
inc
push
lret
cltd
xchg
xsave
jge
jl
mov
xor
push
inc
sbb
add
dec
xchg
aas
cmp
cs
push
jae
or
adc
push
movsb
jne
dec
mov
sbb
fwait
test
jo
adc
adc
or
es
imul
shlb
lea
pop
xlat
inc
daa
call
stc
in
shlb
cmpsl
dec
pusha
mov
pop
push
push
mov
scas
in
shll
enter
fwait
ja
and
jnp
data16
sbb
test
cwtl
fsubrs
inc
fiaddl
inc
jno
loope
popa
clc
aam
sbb
inc
cmpb
cmp
push
dec
dec
add
insb
sbbl
xor
sbb
push
dec
pop
loop
cmpsl
pop
js
jns
mov
lods
hlt
inc
push
cli
push
leave
imul
jns
shlb
pop
popa
push
fldt
shlb
pop
std
adc
push
sbb
shll
pop
jge
insl
xchg
mov
lds
mov
and
nop
or
in
js
shrb
add
and
fsubl
aaa
pop
es
inc
lods
dec
xchg
scas
pusha
mov
gs
pop
xchg
push
add
and
cmp
push
mov
scas
push
sbb
adc
into
cmp
int
jge
addr16
enter
sub
test
andl
add
ficomps
out
pop
lock
je
mov
test
daa
bound
pop
xchg
sub
cs
incb
xor
adc
test
mov
sti
fwait
ror
movsb
shll
lods
jmp
sub
popf
or
dec
xchg
add
iret
ljmp
xchg
dec
dec
lcall
xchg
dec
xchg
shrb
addr16
mov
movsl
mov
mov
popf
aam
outsl
pop
dec
roll
push
cs
scas
lahf
hlt
popf
test
lods
mov
or
jp
xchg
into
cs
jne
push
dec
test
add
pop
shlb
inc
mov
mov
pop
add
xchg
fs
sarl
cmc
xchg
stc
dec
shrb
je
notl
icebp
adc
and
imul
sub
and
lea
lcall
push
mov
cwtl
jecxz
add
push
repnz
ds
insl
call
sub
in
movsb
icebp
sbb
subl
ja
xor
or
jns
sub
or
pushf
and
ret
jnp
repz
pop
jne
cltd
data16
mov
aad
lock
gs
push
mov
mov
das
push
fs
popf
mov
std
pop
mov
ds
es
pop
jecxz
adc
jecxz
sbb
cmp
filds
push
insb
inc
fxch
fnsave
mov
icebp
pusha
sub
push
aad
sarb
test
call
cmc
sub
push
out
aas
jecxz
or
xor
sub
xor
jnp
add
and
adc
inc
jecxz
xorl
pop
cmp
adcl
inc
xlat
adc
sbb
imul
and
xor
and
inc
cmp
xchg
push
movsb
fwait
and
icebp
movsl
jne
icebp
xor
stos
loope
iret
xor
frstor
ja
out
mov
push
mov
lods
mov
xchg
jnp
enter
rcll
ret
into
jmp
sti
xchg
mov
notl
iret
aam
out
adc
adc
cmc
jg
roll
jecxz
or
jno
sub
cmpsb
lock
pop
cmp
ja
mov
sbbl
orb
inc
sbb
adc
testl
aam
ljmp
jmp
cmc
jp
or
mov
sbb
leave
addb
dec
loop
sbb
mov
or
cltd
pop
cmpsl
mov
cmp
les
repnz
or
in
xchg
roll
mov
lret
xorb
pop
je
movb
sbb
das
aaa
cmp
das
mov
insb
xor
int3
hlt
dec
or
shlb
mov
cmp
rcl
rcrl
sahf
xor
repz
out
sub
inc
push
notl
sbb
add
mov
add
add
sti
shll
outsl
jnp
icebp
popa
shl
push
inc
orw
aaa
aas
enter
outsb
xchg
xchg
mov
sbb
dec
push
cld
jle
mov
rolb
xchg
loop
push
lods
xchg
push
js
aad
add
pop
xchg
add
push
jo
sti
test
mov
mov
or
pop
rcrl
lcall
fbstp
icebp
mov
das
repz
xchg
imul
test
and
cmpl
push
mov
push
divb
nop
xchg
dec
leave
pusha
inc
fdivl
lret
fnsave
push
lock
mov
dec
and
lcall
or
mov
flds
add
ds
sahf
mov
dec
push
add
or
je
sub
icebp
rol
lcall
in
nop
jae
repnz
test
adc
mov
data16
sub
aam
fs
mov
sbbl
adc
fildl
and
shld
jbe
xor
sub
sbb
xlat
sbb
push
xchg
lods
add
loope
or
cmp
pop
popf
xor
inc
out
rorb
mov
sbb
fisubs
jae
add
sub
cmp
mov
data16
push
out
ret
and
nop
mov
adc
jb
mov
and
mov
mov
scas
stos
cmp
sbb
inc
push
mov
push
andb
iret
mov
test
pop
sbb
aam
or
push
pop
int3
aaa
or
mov
mov
nop
push
adc
cltd
js
int
and
call
int
loopne
cmovae
je
fisubs
das
pop
pop
ror
test
jp
repnz
push
cmpb
mov
fdivl
lds
mov
movsb
add
pop
out
inc
ret
lods
ljmp
shll
iret
mov
add
jl
adc
jle
pop
adc
int3
inc
addr16
mov
lret
sub
sarl
push
add
push
cltd
cwtl
sbb
add
pop
insb
dec
cmp
xor
mov
rcrl
xor
jmp
add
push
cmp
fisttps
outsb
loopne
push
popf
pop
fwait
lea
pop
cmp
mov
fsubr
push
push
add
lds
cld
xchg
adc
mov
mov
mov
shr
leave
cmp
sbbb
or
sbb
test
lahf
data16
push
inc
ljmp
scas
lret
dec
loope
out
xor
fldcw
xchg
pop
sbb
xor
xchg
pop
jg
inc
aas
sub
xchg
js
inc
stos
bound
pop
cmpl
jg
lods
icebp
jp
or
ror
dec
mov
fildl
loop
sbb
sub
push
and
sbb
push
pop
mov
mov
push
loope
jb
xchg
add
adc
and
mov
pop
pop
loope
outsl
sub
popf
movsl
cmp
push
xorl
push
outsb
adcb
adcb
std
js
fs
out
push
xor
dec
rolb
shll
mov
test
data16
push
inc
out
ja
mov
push
stos
jecxz
lcall
and
pop
xor
xchg
jp
sub
pushf
clc
cwtl
faddl
or
mov
jns
add
lods
mov
sub
xor
sub
pop
pop
shrl
jg
aad
popf
sub
push
mov
fs
inc
arpl
xor
inc
lret
sbb
dec
mov
pop
jb
fidivs
fimuls
lcall
cmp
cld
lcall
sarl
cmp
std
fmuls
sub
and
sub
lock
pusha
and
sti
cwtl
sub
je
out
aas
lds
pop
ss
imul
insl
inc
inc
arpl
jb
je
cmpsl
scas
xor
fisttps
inc
out
jmp
jmp
fldt
pop
loope
shr
stos
pop
imul
outsb
sub
pop
pop
pop
mov
jg
fwait
mov
jmp
mov
aad
imulb
test
js
test
bound
das
mov
cmc
bound
mov
push
pop
lds
test
jae
test
lods
je
mov
lods
mov
push
aaa
cltd
aad
dec
pop
xchg
js
aad
test
sbb
pop
pusha
cmpsl
jle
push
add
cltd
cmp
cmp
dec
mov
movsl
testb
nop
add
loope
mov
add
lods
or
repnz
subb
jmp
lcall
movsl
dec
ffreep
xlat
in
aas
sub
cmpsb
out
mull
pop
and
cmp
clc
adc
pop
or
or
add
enter
add
fsubl
or
es
sub
ljmp
cmp
test
mov
push
outsb
dec
mov
mov
pop
hlt
test
bound
xchg
xlat
inc
lret
movsl
jns
adc
sub
mov
iret
sbb
mov
cwtl
pop
mov
inc
push
stos
ljmp
mov
or
sbb
sbbl
jecxz
movq
and
popf
outsl
push
sbb
inc
mov
orb
xor
mov
aam
gs
lahf
aam
cmp
rol
out
out
out
jecxz
adc
and
sbb
mov
jo
jae
insb
lea
ficoml
mov
mov
inc
jmp
pop
xor
js
lea
out
in
paddw
and
xchg
xchg
sub
dec
inc
je
lock
cmpsb
popf
mov
scas
mov
inc
daa
cmp
mov
or
jle
jnp
lret
xlat
push
pushf
rorl
ficomps
ret
pop
jmp
xchg
leave
loope
inc
or
push
mov
jbe
mov
xchg
btr
jl
test
lds
fs
int3
pop
push
popf
dec
cli
das
adc
lods
movsl
dec
ds
jbe
pop
pusha
xchg
add
push
incl
sbb
adc
stc
cmp
cltd
xor
push
add
pop
xchg
aam
lret
xchg
les
mov
mov
cwtl
out
pop
clc
cmc
scas
cld
cmpsb
addr16
arpl
jbe
rorl
repnz
push
push
sub
hlt
xchg
mov
sar
cmp
rcrb
mov
fnstenv
enter
push
push
lods
and
shrb
mov
push
popf
xor
adc
mov
jl
shll
jbe
jae
rcr
jg
or
hlt
add
mov
js
mov
fadd
pop
call
or
pop
mov
cmp
mov
movsb
xchg
lods
mov
fsubrp
adc
hlt
jmp
add
inc
das
jmp
mov
mov
sbb
fwait
sbb
pop
sub
cld
cwtl
jb
fnstenv
mov
pop
jmp
xlat
insb
scas
out
push
dec
adc
stos
mov
lret
push
dec
nop
fbstp
sub
dec
xchg
cmp
rcr
xlat
pop
xchg
push
mov
add
dec
shrl
xor
loop
rorl
movb
lcall
cmp
lods
loopne
cmp
sahf
xor
mov
mov
cmp
xchg
sub
pop
subl
int
leave
and
cvttps2pi
pop
dec
or
rcl
clc
rorb
repnz
push
aam
add
pop
loope
cmc
push
xchg
mov
sub
mov
push
dec
stc
loop
sub
mov
incl
popf
lock
mov
xor
aam
in
pop
out
cld
xchg
int
cli
iret
fimuls
idiv
or
in
cmp
pop
je
stos
cmp
xchg
add
fucomp
sub
movsb
cmp
cmp
add
sbb
aas
fbstp
adc
pop
ljmp
push
ljmp
jns
dec
add
sbb
inc
xchg
add
test
push
fisubs
jns
inc
stos
mov
test
inc
int3
ljmp
dec
jle
outsl
adc
mull
or
cmpsl
dec
or
popf
mov
test
xchg
ficompl
xchg
imul
rclb
mov
call
rorb
lds
sbbb
jns
std
cli
mull
les
test
jge
hlt
and
sbb
add
mov
push
and
mov
cld
mov
pop
add
xchg
call
lret
in
jecxz
mov
mov
push
mov
push
sub
or
or
loope
movsl
adc
fsubrl
mov
sub
or
mov
cmp
fdivrl
fstps
mov
je
andb
jne
sbbb
faddl
add
mov
and
test
sbb
notb
jns
out
syscall
and
inc
in
out
mov
outsl
push
add
movsl
lock
sbb
xchg
outsb
dec
jg
mov
ljmp
push
sbb
data16
adc
addr16
cmp
mov
iret
xor
jg
rorb
mov
pop
jnp
cmp
imul
dec
jae
addb
cltd
push
and
and
jp
cmpsl
cmpsl
inc
add
fimull
sub
inc
test
xor
fidivs
push
mov
dec
or
iret
gs
sti
xor
xor
mov
and
dec
adc
dec
aad
nop
test
pop
xchg
fadds
push
js
pop
mov
test
pop
push
sbb
stos
mov
sub
ss
int3
loope
aad
jo
in
test
pop
loop
sti
adc
sti
cli
xchg
sub
rdmsr
in
inc
mov
cmp
push
outsb
inc
inc
icebp
push
and
sbb
call
fs
sub
jmp
jnp
sbb
bound
cmp
arpl
inc
fsts
jbe
scas
movsl
shl
mov
sub
inc
fnsave
iret
mov
arpl
xchg
sbb
xlat
xchg
mov
pop
in
xchg
mov
adc
cmpsl
sub
sub
dec
sub
mov
xor
daa
mov
fisubs
cs
dec
jns
shrb
out
cmp
pop
sub
inc
push
notb
adc
adc
mov
jge
push
out
adcl
jne
pop
dec
xchg
jge
jnp
scas
push
daa
icebp
sbb
aaa
xor
pop
and
jp
adc
jmp
and
xchg
ds
divl
loope
lods
stos
nop
daa
fmul
stc
push
in
mov
sbb
lds
stos
rcrb
fadd
inc
enter
mov
shll
mov
mov
adc
mov
push
adc
jecxz
outsb
push
push
insb
cmp
push
outsb
rcrb
fmuls
dec
cmp
cmpsl
inc
movb
subl
imul
jb
lock
push
mov
cmc
sub
jbe
push
push
mov
add
jae
sbb
aaa
add
xor
sbb
rcrb
lea
or
fldenv
lahf
test
push
decb
addr16
jge
aad
cmp
aas
ja
icebp
push
pop
inc
cmp
mov
insb
lcall
popa
decb
sub
out
mov
je
pop
adc
ds
fwait
stc
loop
xor
fcompl
lahf
mov
leave
lret
push
mov
or
sub
and
mov
f2xm1
xor
and
movsb
aaa
xor
sbb
inc
xor
ja
cmp
sbb
mov
stc
ret
sti
outsb
jmp
sbb
xor
faddl
or
push
daa
aas
aam
in
push
inc
test
pop
and
cli
cmp
lock
int
inc
add
aad
pop
or
cmp
daa
out
lcall
repz
mov
inc
adc
push
insl
roll
fdivl
in
incb
outsb
push
movsw
mov
imul
ljmp
sub
jno
and
fcmovnbe
imul
jno
push
andb
or
xor
mov
ja
xor
mov
insl
pop
aas
add
nop
mov
out
pop
pop
jp
into
sbb
jl
imulb
cmc
xor
icebp
popa
adc
fadds
xchg
jp
and
xor
enter
mov
js
lods
xlat
and
pop
or
out
mov
xor
imul
lock
mov
xchg
adc
add
dec
in
xchg
xor
sbbb
mov
push
add
leave
data16
cli
and
stos
push
loop
or
xor
cmc
add
dec
pop
jbe
adc
lods
jl
dec
mov
sub
sub
push
fistps
aas
out
mov
push
negl
in
sbb
push
add
xor
xor
aam
addr16
cmp
sub
leave
dec
es
pop
jg
nop
fidivl
jmp
loope
adcl
sub
iret
jl
jns
shll
lcall
stos
movsb
lret
xor
push
push
mov
cmp
insb
add
mov
mov
sahf
roll
ja
mov
dec
loopne
mov
out
sahf
lea
lock
mov
mov
out
outsb
sbb
cmc
mov
jne
and
inc
pop
cs
fwait
jne,pt
loop
lods
cmp
sbb
pop
aam
inc
lock
adc
stos
jne
dec
popa
mov
and
aas
loopne
xchg
add
adc
ret
cmp
cwtl
jmp
repnz
xchg
mov
xchg
insl
enter
mov
or
aaa
xchg
and
subb
mov
sbb
imul
push
xchg
sbb
jmp
sbb
add
daa
mov
adc
push
mov
int
push
mov
loope
cmp
push
add
xor
push
mov
mov
test
sub
sar
loop
add
xchg
scas
sub
mov
adc
or
xchg
xor
bound
movsb
adc
cld
sub
inc
pop
or
cs
in
test
mov
xor
cltd
fs
lods
inc
int3
push
cwtl
in
cs
lret
packuswb
popl
and
cli
and
fs
sbbl
enter
push
ljmp
out
xor
mov
dec
or
xchg
popa
clc
ss
js
sbb
inc
movaps
jmp
pop
in
push
jmp
cmp
xchg
inc
inc
in
xor
push
jmp
push
sub
lods
and
adcb
cmpsl
mov
into
ss
scas
push
mov
fbstp
cmp
dec
push
rorb
or
rcrl
es
leave
call
fdiv
and
movsb
addr16
enter
je
pop
xor
popa
loopne
xor
xchg
mov
add
add
mov
add
jbe
push
aas
or
movsb
daa
and
aad
push
outsl
dec
into
mov
les
or
scas
mov
cld
icebp
inc
and
push
or
lcall
pushf
rorb
mov
mov
out
mov
ret
sbb
inc
push
bound
scas
js
fcompp
ret
cmc
inc
test
xchg
mov
pushf
pop
push
and
jge
mov
aad
xchg
test
in
movsl
cmp
cmp
in
insb
add
inc
mov
fs
mov
mov
jmp
std
shr
movsl
mov
mov
xchg
imul
pop
in
aas
and
mov
mov
mov
icebp
mov
jl
into
out
movlps
push
pushf
xchg
jmp
mov
add
cmc
push
ds
adc
in
add
pop
jne
jge
repnz
mov
iret
out
xchg
push
push
dec
push
les
inc
imul
scas
sarb
add
inc
pop
ljmp
mov
xlat
in
das
or
fwait
xor
mov
dec
and
lods
inc
stc
adc
repz
sbb
arpl
add
lods
iret
data16
pop
sub
adc
xchg
mov
stc
mov
cld
rclb
cmpsl
add
repz
cmp
imul
gs
test
hlt
popa
shll
xchg
pop
aam
xchg
mov
cmp
in
mov
pop
inc
push
arpl
ds
mov
movsb
out
insb
add
pop
sub
rcrb
imul
jns
imul
cmp
inc
icebp
mov
outsl
xorl
test
clc
popl
outsb
xchg
pop
scas
dec
push
loopne
sbb
mov
push
adc
cltd
jecxz
add
xchg
mov
adc
dec
mov
test
aas
vpmulhw
stc
cmc
push
leave
pusha
int3
fwait
dec
fcompl
out
out
movsb
test
ficoml
add
mov
mov
fdivl
outsl
mov
fadds
cmpsl
out
lods
or
and
fwait
push
mov
mov
pop
cli
test
and
pop
cmp
int3
jg
jecxz
add
pushw
movsl
xchg
insb
sti
jbe
cmp
fnsave
inc
std
iret
outsl
sti
or
inc
sub
test
fimull
pop
sbb
mov
dec
fs
cmpsl
adc
xlat
mov
push
xor
mov
mov
pop
icebp
lock
daa
pop
imul
inc
jae
jno
pop
push
mul
popa
jg
iret
ds
xor
sbbl
jecxz
dec
mov
mov
adc
dec
enter
or
insl
pop
pop
lahf
test
pop
outsb
jl
pop
adcb
and
in
mov
or
fstp
xor
les
xor
adc
movsb
jbe
subb
lea
pop
or
lret
pop
lods
mov
push
out
fs
push
pop
push
xor
mov
cld
pop
outsb
cmpsl
add
test
enter
or
cmpsb
mov
sbb
jb
pushf
mov
jns
mov
das
lods
mov
push
imul
and
in
push
sub
hlt
mov
cld
int
popa
lcall
aam
ja
inc
push
mov
jle
bndldx
pop
push
mov
push
lahf
dec
mov
push
mov
shll
sbb
roll
cmpsb
pop
ret
sbb
scas
shrl
jbe
cmp
repnz
inc
lea
loopne
js
xchg
mov
outsl
movsl
cltd
lods
ljmp
es
into
inc
xor
jbe
cmp
and
rclb
mov
cmp
dec
mov
outsl
push
mov
lcall
mov
jnp
push
fcompl
popf
bndmk
rclb
cltd
ret
mov
or
cs
or
imul
repz
xor
mov
jbe
rcrb
or
xor
jo
or
into
das
mov
jno
mov
push
xchg
jns
mov
subb
pop
shl
ror
cld
stos
subb
pop
hlt
movsb
fld
xchg
or
pop
xor
xchg
cmc
mov
cmp
xchg
ret
adc
sub
lods
pop
pop
jge
jbe
sahf
in
xchg
jno
mov
sbb
fbld
shlb
cwtl
pop
ffree
dec
pop
dec
out
stos
push
adc
push
lret
fstpt
sbb
ds
sub
sub
ds
lahf
inc
std
dec
vpcmpeqw
xchg
sub
add
dec
movsl
cmp
cmp
push
cmp
pop
pop
out
stos
mov
fldt
mov
orl
jp
xorl
sub
sbb
stc
pop
add
lcall
lds
divb
push
scas
clc
adc
or
test
hlt
aas
push
sub
dec
js
ja
and
dec
ds
cmc
dec
mov
sbb
loope
xor
clc
push
cld
mov
sahf
fdivl
fsts
jbe
ficomps
aam
cmp
mov
push
mov
aaa
in
data16
cwtl
fs
shll
adc
andl
popf
push
sub
sub
push
xlat
outsl
or
adc
rorl
repnz
dec
sbb
insb
add
fnsave
std
xchg
and
cmp
cmpsl
jp
jecxz
mov
in
add
data16
adc
mov
mov
jle
mov
out
or
jb
jo
pushf
dec
loop
aad
fsubr
addl
or
test
xchg
fcmovu
iret
xchg
xor
movsb
repnz
stos
add
mov
ret
adc
gs
je
test
mov
in
sarl
adc
xchg
or
mov
jae
imul
mov
push
dec
push
cvtdq2ps
enter
push
test
push
daa
lret
daa
mov
lret
arpl
sbb
loope
dec
mov
or
call
rcrl
fs
js
dec
sbb
mov
stc
adc
pop
nop
inc
mov
insb
subb
addb
pop
jbe,pt
jle
mov
adc
daa
or
dec
sub
xor
adc
mov
sbb
icebp
stos
hlt
dec
cld
sbb
xor
pushl
movsl
adc
pop
mov
mov
enter
sub
shll
pop
das
insb
pop
jns
jns
call
cmpsb
cmp
push
mov
push
imul
push
clc
and
inc
dec
or
sbb
mov
push
cmp
addb
mov
fwait
gs
jle
adc
lods
mov
jb
dec
outsl
cmpsb
test
insl
jp
xchg
sbb
dec
dec
movsl
fiadds
fst
ja
cwtl
mov
fsubrl
cwtl
fsubl
pop
or
push
add
mov
hlt
xchg
pop
xor
sahf
xchg
xchg
lock
outsl
adc
add
dec
hlt
sbb
aas
pop
push
cmpsl
ds
rolb
add
dec
xor
sbb
cmpsb
js
filds
sbb
add
inc
jnp
jne
stc
movsl
adc
daa
or
fsubrl
iret
arpl
lods
sub
mov
pop
and
cmp
adc
pop
mov
pop
cmp
mov
outsb
pop
xchg
xor
rorb
dec
or
cmp
daa
std
jnp
loop
lret
inc
adc
mov
adc
imul
insb
cmp
or
popf
dec
xchg
mov
or
sbb
pop
push
or
js
mov
lea
mov
addb
jo
shrb
cmp
push
sbb
sub
cltd
jp
pop
imul
xor
push
push
in
ljmp
push
lret
cmp
adc
pop
int
dec
sbb
scas
mov
sti
inc
shlb
xchg
fstpt
ss
lret
pushf
rcll
and
dec
jmp
mov
xor
mov
arpl
adc
je
mov
pop
lock
out
imul
arpl
out
ljmp
fcomi
xchg
movsl
cmp
xchg
inc
iret
adc
xor
and
outsl
sbb
cmp
arpl
jnp
mov
test
inc
inc
call
fidivrs
jae
int3
jmp
xchg
cmpsl
cmp
fidivl
jne
movsl
pop
lock
xchg
inc
and
mov
out
and
jge
mov
add
jle
vpsubq
xchg
inc
or
iret
fcmovnb
or
aas
fs
fcmovnbe
mov
pop
pop
insb
mov
pop
imul
inc
sbb
lock
repnz
scas
adc
xor
lret
fisttpll
xlat
cli
lods
or
pop
dec
sub
jl
stos
dec
pop
sbb
dec
dec
aas
dec
cmp
in
dec
mov
rorl
add
xor
cld
mov
inc
push
push
mov
sbb
pop
push
cmp
sub
pop
jp
int
lods
ret
addr16
add
mov
xchg
cwtl
or
mov
mov
shlb
fimull
sbb
push
add
push
cmc
cwtl
xchg
inc
fdivrp
push
fisubrl
enter
mov
mov
sbb
les
mov
test
xor
push
xchg
mov
inc
jmp
andb
inc
xor
ds
dec
push
inc
je
sbb
xchg
mov
pop
mov
ret
mov
jp
fidivrl
inc
lret
jg
mov
shrl
in
add
sbb
mov
mov
fcmovnbe
in
push
adc
adc
sar
sahf
pop
scas
jae
js
jb
test
jns
inc
jno
xor
lods
dec
mov
jo
jbe
ret
cmc
dec
xchg
hlt
lret
cmp
in
aad
jecxz
subl
stc
mov
cmpsl
insl
or
rcrl
rol
push
jp
push
xor
mov
push
test
test
lea
dec
mov
cmp
xchg
sarl
movsb
sub
out
lods
popf
push
flds
cld
adcb
sbb
pop
cmpsb
push
out
push
inc
jne
add
xchg
aas
pop
stc
popa
test
sbb
pop
jle
push
inc
pushf
push
ds
inc
jp
bnd
das
mov
hlt
and
add
mov
xchg
out
xchg
jle
fsubr
cwtl
inc
ret
mov
outsb
cmp
or
stc
adc
mov
loopne
xor
add
negb
add
into
mov
or
cmp
fwait
or
test
sub
insl
rorb
jno
je
adc
ret
mov
insl
adc
mov
dec
jbe
mov
and
inc
clc
inc
adc
jg
arpl
mov
int3
jle
leave
mov
pop
mov
test
iret
test
lret
push
out
pop
inc
outsl
jbe
ret
sub
and
jge
cmc
push
daa
or
mov
aad
rorl
mov
scas
xchg
push
shlb
in
lods
sbb
lahf
out
and
clc
rcll
inc
and
lcall
roll
jmp
sbbb
stos
repnz
pop
out
call
xor
nop
std
test
sbb
jne
out
pop
test
mov
inc
loopne
sbb
mov
popa
cmp
jne
xchg
push
mov
cwtl
cltd
std
adc
sbb
out
xchg
test
xor
jb
cmp
cmc
dec
repz
xor
shr
popa
dec
int3
mov
repz
rcll
lods
and
out
xor
pop
cmpsb
xchg
sub
xchg
push
push
xchg
out
mov
mov
xlat
pop
sbbl
das
sub
lahf
add
dec
aad
icebp
dec
adc
jecxz
in
mov
add
cmc
mov
jle
movsb
pop
bnd
sbb
mov
push
dec
add
mov
stos
mov
jmp
movsb
cmpsl
fbld
xor
jns
mov
lret
aam
pop
cmp
xchg
pop
push
mov
repz
adc
pop
push
ret
pop
daa
out
or
and
imul
leave
sbb
pop
inc
call
jb
das
inc
cs
notl
rorl
hlt
sbb
out
enter
push
cmp
addr16
mov
inc
inc
lahf
or
mov
and
sahf
xchg
inc
aas
lock
push
in
in
arpl
mov
ret
dec
dec
dec
out
push
dec
fdivrs
dec
sub
gs
xchg
and
xchg
jge
iret
int3
jo
adc
test
lahf
jbe
in
or
mov
fwait
inc
cli
adc
loope
cwtl
gs
push
mov
ret
decl
xchg
lcall
gs
and
js
inc
dec
out
cmp
insl
insl
push
adc
lret
push
xor
xor
inc
fs
add
push
adc
lea
aad
push
mov
add
out
les
cltd
adc
rcll
fs
or
stos
in
jo
xor
dec
cmc
dec
xchg
scas
loopne
jmp
mov
jmp
cmpsb
inc
mov
dec
int3
leave
cmp
pop
xchg
mov
popf
cmp
and
cmp
adc
cmp
mov
test
sahf
inc
jns
xor
push
mov
mov
xchg
scas
mov
jg
js
out
sub
scas
shll
mov
mov
sbb
fimuls
loopnew
lcall
sbb
mov
pop
outsb
test
shlb
popa
or
jle
ds
push
mov
popf
cmpsl
push
into
cmp
into
lret
mov
xchg
and
dec
movsl
xchg
add
notb
les
mov
cmp
adc
cmpsb
adc
mov
repz
sub
pop
inc
xchg
out
mov
jecxz
imul
imull
xchg
mov
sub
rcll
xchg
pushf
cmp
sub
lods
pop
outsl
roll
int3
push
mov
inc
push
or
fmuls
or
cmpl
mov
sbb
pop
fidivs
mov
inc
test
mov
fiadds
int3
sbb
add
hlt
shlb
out
or
jmp
jmp
fwait
aas
mov
sbb
test
subl
pop
in
icebp
and
mov
pop
aaa
mov
lret
xor
inc
fistpll
lahf
jae
xchg
jo
pop
shl
test
or
adcl
push
jnp
aas
xchg
mov
test
xchg
jb
lcall
inc
rol
inc
mov
jns
filds
mov
or
pop
xchg
push
fwait
inc
testb
into
mov
add
cmp
jl
xor
mov
jle
jae
test
test
push
pop
mov
es
pop
rclb
jbe
jg
loop
sbb
inc
push
cld
add
sub
mov
mov
and
inc
push
sbb
jbe
and
mov
and
adc
lods
mov
xor
call
insl
xor
es
shl
mov
mov
dec
fldcw
repz
rcrl
adc
mov
inc
nop
mov
add
inc
repnz
sti
push
repnz
loopne
les
hlt
pop
cmp
xorl
fmulp
xchg
ds
dec
call
dec
jno
adc
lret
rcll
test
scas
out
sub
aaa
sbbb
pop
adc
mov
das
rolb
mov
jge
pop
push
and
adc
lods
shll
cmp
aad
inc
rclb
mov
and
add
scas
add
fisttpl
sar
sbb
cmp
popf
xor
mov
mov
in
das
dec
jnp
dec
inc
and
mov
adc
gs
push
jecxz
mov
lret
fs
inc
jmp
jmp
sub
or
sub
aam
outsb
sbb
stos
in
rolb
cmc
and
lods
call
and
fldenv
pop
cmp
mov
fidivl
imul
pop
nop
rcrl
push
out
jnp
mov
sub
aaa
mov
jbe
push
je
outsl
xchg
pop
jns
icebp
testb
push
stc
xchg
xor
push
inc
or
fldt
mov
roll
or
cmp
inc
fwait
insl
imul
ret
outsb
or
pop
mov
sti
jle
aaa
iret
int3
sbb
nop
cmp
sub
sar
rcrb
insb
lock
sbb
mov
jmp
fistps
fnstsw
jo
bound
or
in
sbb
adc
int3
pop
imul
push
movsl
and
sub
jae
fisubl
dec
shrl
pop
insl
stc
mov
lock
add
push
in
test
mov
test
leave
shl
jl
bound
iret
fimull
sbb
or
je
std
frstor
dec
ret
jle
lret
bound
in
mov
sbb
into
andl
iret
sbb
pop
adc
push
enter
pop
scas
mov
xchg
data16
arpl
outsb
mov
scas
mov
xor
or
inc
pushf
push
imul
fildl
sbb
ds
mov
cmpsl
arpl
push
pop
pop
mov
add
adc
mov
jb
jae
xchg
ja
xchg
mov
and
cmc
dec
loopne
mov
pop
jmp
sbb
mov
xchg
and
xchg
imul
aam
xchg
data16
les
insl
out
test
out
push
xor
fmulp
fstpt
jno
xacquire
mov
push
loop
and
xchg
stc
test
adc
lods
push
add
nop
popa
jns
scas
jne
xlat
push
rcl
pusha
xlat
iret
ret
les
ljmp
insl
sub
addr16
inc
push
inc
fldl2t
inc
data16
popa
pop
in
xchg
pop
xlat
cmpsl
mov
cmp
jmp
out
xchg
and
repnz
push
mov
inc
pop
sub
dec
push
or
push
arpl
aas
outsb
or
or
fsubrs
jg
jmp
nop
mov
xchg
insb
jb
leave
and
pop
iret
cmp
dec
xchg
mov
jnp
mov
pop
fcoml
in
sbb
sub
aaa
cmp
adc
mov
push
add
mov
repz
pop
xchg
pop
insb
inc
sub
jp
and
pop
push
lret
aas
push
hlt
pop
mov
jl
popf
xchg
jne
out
ss
lock
mov
cld
mov
test
cmp
subb
push
or
rorb
adcb
orb
loop
mov
dec
fldenv
mov
loope
aaa
jns
mov
sbb
sub
mov
int3
arpl
sbb
rorl
iret
fstp
jle
js
sbb
hlt
ret
add
mov
add
es
loope
cmc
dec
cltd
ljmp
mov
add
roll
mov
jnp
inc
inc
sti
xchg
adc
mov
repnz
dec
or
iret
xchg
inc
insl
dec
mov
ss
fnstenv
add
jbe
std
mov
insl
xlat
leave
mov
sub
cmc
adc
in
loopne
pop
pop
mov
shl
movsb
arpl
popf
mov
insb
xor
xor
pop
jle
jae
das
pop
xchg
bswap
clc
ljmp
popf
pop
pop
dec
sbb
daa
je
jp
testb
push
imul
je
in
pop
repnz
or
stc
push
push
jnp
or
sbb
frstor
push
pop
mov
xchg
pop
je
mov
xor
dec
icebp
mov
daa
push
inc
push
cli
jb
xchg
mov
sarb
in
aam
leave
push
sub
daa
add
pop
xor
and
fadds
jg
dec
adc
insb
xchg
cmc
mov
mov
aaa
mov
mov
fistps
xor
popa
adc
cmp
into
mov
and
mov
sbb
push
out
pusha
cltd
leave
daa
xchg
pop
faddl
jnp
mov
call
ljmp
dec
dec
lahf
jae
inc
mov
mov
bound
and
arpl
js
add
mov
push
fmul
jbe
push
test
jnp
cmpb
pop
inc
daa
cmp
in
stos
in
or
dec
fildl
xlat
leave
cltd
fnop
addr16
mov
jae
and
push
xor
ljmp
cmp
repnz
push
jno
pushf
sub
mov
cmp
push
in
jmp
jbe
cmp
lds
out
sbb
inc
sub
xchg
test
push
add
fadds
push
jne,pn
scas
mov
insb
cmc
mov
test
popf
or
xor
jne
call
repz
jmp
xchg
jle
fidivs
cmc
dec
fidivs
loope
test
mov
sub
data16
mov
fidivrs
sub
jl
movsl
fsub
mov
or
cmp
jnp
mov
mov
inc
or
and
repz
mov
stc
sub
or
cli
adc
out
mov
ret
push
sub
inc
es
inc
dec
lds
and
test
stos
nop
ljmp
mov
sbb
push
inc
in
in
push
pop
sub
and
lcall
arpl
aaa
into
add
scas
mov
and
inc
xor
bound
adc
xchg
cmp
xchg
jle
loopne
add
icebp
test
mov
cmp
adc
aad
bound
pop
sub
test
xchg
insl
test
out
xor
arpl
push
and
push
ljmp
xor
test
cli
cwtl
daa
movsl
sbb
xor
xor
flds
out
into
rol
bound
adc
pusha
dec
rcrb
insb
xor
sarb
loop
cld
stos
ret
fnstcw
dec
es
lods
stc
cwtl
inc
rol
cli
add
sbb
mov
mov
shl
adcl
mov
and
inc
loope
ds
inc
aas
call
mov
into
mov
or
les
js
mov
push
push
jns
dec
mov
cmpsb
pusha
popaw
shrb
mov
ds
fmuls
sahf
popa
popf
in
xchg
mov
jbe
clc
fwait
jle
cmc
pop
xor
ss
jno
add
dec
cs
pop
mov
add
sahf
mov
or
cmp
outsl
mov
fimuls
pop
pushf
jno
add
mov
out
mov
imul
mov
mov
cmp
cmpl
cmp
add
repnz
dec
call
fldpi
std
mov
mov
lock
pop
push
loopne
jo
mov
xor
sub
mov
arpl
loop
push
jmp
in
cld
adc
mov
ds
aaa
mov
icebp
bswap
test
jecxz
orl
adc
sub
pop
ja
mov
push
std
mov
sti
push
mov
push
les
push
pushf
data16
sbb
dec
jbe
scas
xlat
cwtl
insl
add
mov
das
or
outsl
mov
pusha
shrl
cmpsb
sbb
xchg
pop
ret
scas
xor
mov
loop
stos
stos
mov
or
jnp
inc
sbb
pushf
in
cltd
fldcw
cmp
clc
inc
in
mov
xchg
and
jnp
add
xor
xlat
rcl
mov
gs
aam
sub
adc
mov
mov
repz
cmpsb
jb
xlat
bound
xchg
jge
xor
cmp
mov
movsb
sbb
jne
and
adc
mov
clc
mov
ja
mov
roll
mov
jg
sbb
lods
je
mov
sbbb
mov
add
aad
xchg
and
cltd
daa
mov
push
or
clc
and
xor
mov
lock
mov
pusha
mov
sbb
addr16
repz
mov
mov
into
xchg
push
jno
jl
ret
sbb
mov
mov
aam
or
dec
cltd
test
les
js
mov
pop
out
in
stos
sti
adc
addr16
push
sub
es
jae
into
dec
movsl
je
mov
cmc
adc
es
pop
pop
jmp
sub
fnstsw
addr16
jmp
jp
xor
lahf
ds
push
jbe
mov
outsb
loope
xlat
adc
pushl
or
mov
mov
mov
fmull
mov
push
cld
outsl
push
pop
inc
negl
out
in
ret
repz
lock
les
cli
xchg
add
push
ss
or
scas
cmp
cltd
push
sub
sub
push
xchg
cwtl
jg
and
fsubl
in
jnp
pop
mov
or
jnp
lds
or
pop
dec
aad
loope
xchg
pop
add
test
or
cld
scas
jbe
adc
aad
rclb
inc
lock
call
je
arpl
out
mov
enter
addr16
insb
sub
std
imul
inc
fwait
rorl
iret
mov
pop
fidivrl
xlat
aaa
sub
insb
xor
aas
push
cmp
rol
in
dec
in
jle
or
add
jl
cmp
sbb
xchg
inc
xchg
sahf
andb
adc
inc
pop
pop
xor
mov
push
push
sub
in
ja
sbb
sahf
xchg
and
imul
icebp
and
movnti
stos
mov
pop
push
xchg
mov
shrb
sbb
cmp
adc
sbb
mov
fstps
daa
pop
jae
xchg
jbe
fdivr
adc
data16
inc
std
mov
popf
call
adc
add
notb
mov
xor
push
lods
inc
inc
popa
cmp
lret
mov
ljmp
das
mov
outsl
jns
test
and
stc
rcrb
into
fs
lret
and
and
pusha
repnz
cmp
add
lahf
fiaddl
xorl
lret
mov
or
dec
mov
imul
jnp
sbbl
push
sahf
push
dec
or
das
mul
enter
add
and
scas
and
and
push
movsb
mov
sbb
push
cmpsb
aam
fmuls
sbb
pop
lahf
in
stos
stc
jo
add
filds
ret
dec
aaa
jb
out
xor
push
dec
cli
sbbl
pop
adc
mov
push
aaa
enter
cli
jns
out
cli
bound
xor
cmp
cmp
aad
lcall
shll
cs
inc
pop
push
dec
xor
jb
mov
dec
imulb
shl
pop
cmpsb
cmp
fwait
cmc
push
cmp
lcall
out
insb
mov
xchg
dec
pop
iret
outsb
push
mov
cmpsb
std
dec
cmp
test
sub
idiv
and
xchg
xchg
or
icebp
dec
pushf
jp
mov
out
xchg
jp
sbb
push
hlt
cmp
out
pop
shrb
jne
jle
or
shll
decl
jecxz
sti
es
jnp
sub
add
or
fiaddl
repz
cltd
cmp
xlat
dec
dec
pop
mov
sahf
xor
dec
add
fwait
mov
mov
dec
pop
inc
fs
sbb
test
adc
pop
leave
jg
lahf
and
leave
or
or
xchg
push
mov
inc
mov
jbe
xor
addb
and
jno
or
adc
std
imul
pushf
push
or
scas
mov
cmpl
sub
movsb
das
mov
push
mov
pop
mov
mov
sub
sbb
jae
sub
pop
ret
pop
adc
lods
inc
mov
loope
ljmp
in
je
mov
and
cmp
fwait
inc
mov
cli
outsl
push
gs
adc
out
add
adc
and
xor
mov
mov
ret
inc
pop
outsb
cmp
mov
add
lahf
adcl
lret
aad
enter
push
adc
pop
mov
pusha
xor
scas
movups
in
mov
popf
mov
cltd
loopne
mov
pop
inc
dec
dec
loope
jle
fs
out
jne
sbb
xchg
incl
out
nop
es
pop
ret
popf
daa
pop
jge
into
outsb
in
les
int
mov
mov
pop
adc
xchg
in
notl
and
imul
add
lock
push
cmp
int
dec
in
jae
xor
in
aas
xchg
in
fimuls
stos
mov
in
shl
jo
dec
stos
jge
cmpsl
negl
mov
xor
cmpsl
adc
vmwrite
xor
xor
aam
insb
loopne
int3
rep
mov
pusha
sub
xorb
add
add
xor
or
cld
int3
sub
daa
ror
jo
js
cmpl
and
fxch
or
mov
inc
cmp
sarl
cmp
loope
insl
pop
mov
adcl
bound
adc
imul
fisttpl
call
mov
or
xor
or
data16
daa
scas
jo
jns
push
sub
or
insl
clc
mov
mov
fisubrs
hlt
or
lahf
stos
xor
jl
lret
out
jmp
and
mulb
adc
mov
test
inc
orl
fsubrp
repnz
cs
cltd
lods
push
into
imul
jne
frstor
repnz
or
cmp
dec
lea
out
jno
stos
inc
adc
adc
mov
loop
xor
fwait
test
xchg
cmc
cmp
adc
stos
xchg
in
aam
inc
mov
cmp
push
outsl
shlb
cmc
mov
imul
mov
or
mov
push
lds
dec
mov
dec
addb
jge
sbb
pop
jb
jle
and
adc
call
or
jmp
cltd
add
in
xchg
or
or
and
inc
pop
loop
iret
dec
ljmp
inc
enter
dec
dec
adc
cmpsl
lcall
stc
sbb
and
cmp
add
and
mov
ss
adc
ret
xchg
cmpb
push
add
inc
scas
adc
sbb
outsb
mov
mov
loope
int3
mov
addr16
push
sahf
xor
push
mov
test
cmp
fwait
inc
decb
inc
insb
inc
idivl
pop
mov
xchg
mov
mov
adc
pushf
movsl
aam
xlat
xor
arpl
repnz
mov
and
xchg
mov
push
inc
push
pop
or
jmp
or
mov
loopne
or
rcrl
popa
nop
das
fdivs
jecxz
mov
xor
and
fcoml
sub
mov
cmp
mov
sti
lahf
sbb
int
xor
stos
or
cltd
jns
out
in
mov
or
shl
jl
add
repnz
cmpsl
cs
and
push
sbb
mov
insl
and
iret
int
in
inc
adc
xor
jns
and
sub
mov
pop
ret
adc
bound
scas
mov
in
pushf
adc
fsts
ds
dec
daa
xorl
stos
bound
dec
jbe
inc
les
popf
test
out
inc
inc
xchg
push
sub
mov
je
jbe
jo
icebp
inc
xor
neg
jo
into
push
loopne
mov
fisubrs
lea
push
sbb
xor
mov
aam
cmp
test
jno
mov
sbb
mov
shrl
mov
pop
imul
addr16
loop
int
push
out
jns
xchg
outsb
icebp
or
pop
ret
inc
push
push
mov
and
push
stos
push
push
push
push
sbb
dec
xchg
lods
outsl
sbb
mov
ret
sbb
xor
mov
xchg
vandnps
stc
or
and
subb
test
xchg
inc
rcll
ret
faddl
int3
pop
or
push
xor
repz
jecxz
cld
test
data16
sub
and
jae
push
divl
test
aam
or
cltd
sbb
xchg
aam
sbb
les
jnp
pop
cli
jl
jl
mov
hlt
subb
lds
adcb
mov
lret
lret
aas
add
es
mov
pop
cmp
mov
cmp
lods
xchg
sbb
dec
and
fnsave
lcall
out
adc
or
and
push
cltd
lock
jge
jmp
add
mov
sahf
scas
inc
sub
out
in
xchg
adc
sbb
aas
push
lods
jecxz
insb
sub
xchg
lock
and
cmp
adc
int
xor
cmp
mov
scas
int3
cltd
ja
repnz
adcl
ss
shrb
sbb
sub
push
sbb
inc
inc
push
push
add
mov
enter
mov
jle,pn
mov
lods
pop
lock
and
or
mov
xchg
xor
scas
cli
out
push
fsubrl
xor
xor
shlb
mov
fucomi
xchg
xor
enter
push
fwait
fwait
push
fwait
mov
popa
jg
jo
sub
sub
pop
les
imul
out
mov
pop
test
sub
jg
nop
jmp
inc
jne
ret
mov
push
or
into
js
shll
push
add
add
ficompl
in
pop
dec
add
icebp
cmc
mov
cwtl
lods
mov
dec
push
and
nop
adc
fisttpl
mov
subl
xchg
mov
add
jle
ja
sub
int
pop
std
cltd
ljmp
aad
loope
and
aad
lcall
push
dec
shlb
cmp
das
or
lcall
xchg
mov
stc
inc
mov
or
push
sub
cmp
xchg
push
sbb
lahf
div
inc
sub
adc
jmp
shrb
repz
out
add
mov
or
push
lods
pop
cmc
mov
inc
fsubr
mov
shrl
cmp
mov
lds
or
pop
adc
sub
add
mov
imul
popf
subb
adc
aas
xchg
imul
shlb
loopne
jg
xchg
sbbb
test
jg
call
pop
xchg
lahf
neg
inc
cmc
mov
sub
push
int
psubsb
xor
jae
jne
cmp
leave
mov
addr16
mov
stos
mov
fmul
and
xchg
outsb
int
and
add
jbe
xor
inc
mov
std
jp
jmp
push
das
inc
mov
mov
aad
inc
lahf
call
jae
cltd
int3
push
ja
sub
add
ljmp
lea
repz
inc
scas
ret
clc
or
and
jae
jg
sub
fdivp
or
pop
je
dec
push
mov
sub
cmp
pop
xor
sub
xchg
inc
orb
ds
decl
cmpsb
sbb
es
lods
or
hlt
push
pop
dec
jbe
faddl
adc
xor
dec
outsl
addr16
sbb
or
cmp
mov
enter
pop
bound
sbb
xchg
stos
test
les
add
into
sbb
arpl
test
fstpt
movsl
fadd
dec
dec
jge
sbb
gs
clc
push
xchg
in
add
mov
ja
stc
bound
jno
mov
cmc
test
repz
rcl
neg
pop
cmp
sub
cmp
pop
rcr
cmp
aad
or
es
pop
pop
pushf
int
mov
mov
push
int
or
ret
insl
and
outsb
push
hlt
mov
loop
pop
add
xchg
lret
jmp
push
mov
leave
hlt
or
pop
push
out
js
push
cltd
sub
jbe
cs
outsb
call
xchg
nop
or
dec
inc
adc
pop
lahf
je
rolb
jge
movsb
inc
adc
daa
loop
fstps
cwtl
jecxz
out
cmp
pop
loopne
mov
cmp
loope
inc
mov
fisttps
jl
jb
jae
decl
fadds
mov
add
aad
pop
nop
pop
ds
push
rolb
xchg
enter
loopne
xlat
ffreep
movsl
icebp
imul
push
repz
or
repnz
arpl
mov
lods
inc
sbb
cld
xchg
sarl
enter
dec
push
int
test
pop
push
cmpsb
mov
jo
mov
test
xchg
sbbl
ficompl
sub
testb
test
cmp
cmp
jns
mov
push
das
mov
sbb
pop
das
orl
int
scas
or
xchg
add
jbe
add
imul
sbb
mov
mov
jne
jg
loopne
dec
add
lcall
ret
adc
insb
or
jl
fldt
cld
xchg
dec
std
jne
lret
pop
daa
cmp
pop
imul
add
inc
fldl
into
rorl
icebp
xor
sub
fdecstp
mov
xchg
mov
cmc
jb
int3
mov
lahf
shlb
ret
lret
ret
sahf
xor
sbb
mov
cmp
xor
rcrl
outsb
cli
or
jnp
xchg
push
iret
loop
pushf
inc
mov
shrb
mov
cmp
pop
in
fsubs
inc
ljmp
jmp
movsl
int3
jecxz
mov
mov
lock
mov
jo
shlb
pop
movaps
pop
cmp
sbb
addr16
mov
push
dec
cmp
loope
loop
dec
aad
cwtl
sbb
lods
jmp
xor
popf
in
shr
insl
jg
mov
movsl
fmuls
cld
int3
xchg
fwait
xor
jb
dec
cmpsb
jp
adc
pop
movsb
inc
mov
mov
pop
cmc
lea
inc
push
mov
adc
add
adc
shll
sub
cmpsb
jae
lock
lcall
stos
xlat
shrl
daa
mov
ret
jmp
adc
out
lea
mov
scas
jne
loopne
adc
add
jle
push
or
clts
popf
inc
sbb
pop
ret
mov
pop
push
inc
flds
push
mov
cmp
mov
imul
push
add
sub
xchg
imul
lahf
pop
lahf
cmp
sub
cltd
xorl
rcll
mul
fbstp
fwait
ret
fistpl
addr16
jne
cld
cmpsb
add
fisttps
or
lock
mov
addr16
addl
cmp
jb
aas
clc
repz
int
xchg
out
and
jmp
push
cmpsl
jb
mov
imul
stos
ficoml
fcmovnb
ljmp
fwait
scas
daa
stos
mov
movsb
inc
aaa
dec
lods
push
mov
stc
cmp
push
xor
cmp
daa
pop
loope
xlat
push
movsb
xchg
sub
jnp
xchg
push
insl
leave
gs
pop
fisubrs
test
sbb
mov
inc
test
in
cmc
fnstenv
sbb
pop
cmp
adc
addl
lock
pop
dec
or
hlt
js
mov
cmp
pop
dec
xchg
sbb
dec
sub
int3
xor
shr
mov
fistpl
in
adc
dec
cltd
or
or
lds
mov
repnz
shll
dec
jl
xchg
cmpsb
cmp
jecxz
jnp
cmp
in
cwtl
data16
aad
xchg
pop
loop
mov
outsb
inc
jecxz
xor
arpl
pop
popa
and
xchg
out
jns
bound
sub
sub
insl
mov
mov
mov
fidivrs
in
inc
adc
jns
xor
orl
test
loope
mov
sbbl
mov
cmpsb
sbb
sbb
mov
dec
and
sub
xchg
mov
jp
cld
mov
test
cmp
jns
cltd
aam
dec
clc
pop
sti
lea
jge
mov
jl
out
scas
pop
sub
fwait
lock
pop
cmpsb
sub
adc
add
shlb
dec
or
ja
icebp
rcrb
mov
dec
cmp
inc
scas
out
rcrb
fadd
dec
pop
into
data16
mov
mov
jp
das
cli
adc
js
js
test
push
xchg
pop
sbb
jo
adc
mov
ja
ret
and
movsb
mov
mov
insb
sub
xlat
js
mov
or
push
shlb
dec
fcomip
sbb
mov
mov
into
andl
test
cmpsl
sti
add
sbb
push
xor
pop
iret
push
mov
js
es
xchg
pop
jg
pop
pusha
cmpb
add
jge
insl
lahf
inc
divl
push
mov
mov
arpl
cmpsl
idivb
add
xchg
adc
andb
xchg
inc
push
popf
or
fists
or
imul
push
xlat
lahf
dec
mov
clc
lea
and
das
or
insb
aad
fsubr
test
cli
cld
push
mov
or
frstor
jno
mov
lods
jo
fisubs
jns
mov
loopne
or
in
and
aas
loopne
mov
cmpsb
pop
mov
iret
fcmovnbe
loope
hlt
add
lods
cmc
xchg
mov
or
imul
push
mov
pop
lods
inc
aaa
pusha
enter
lret
bound
dec
xor
mov
std
lcall
in
push
jle
and
sahf
dec
mov
push
lock
adc
cmpsl
jo
mov
loopne
or
loop
jne
or
add
cmp
push
shrl
std
fs
push
fnsave
insl
loopne
addr16
repnz
add
rcr
xchg
jne
es
in
outsl
mov
sbb
pop
xor
jmp
daa
test
mov
xor
dec
dec
mov
mov
dec
dec
cmpsb
inc
ds
jp
sbb
jecxz
test
sti
arpl
pop
ds
xor
mov
movsb
outsb
jmp
jecxz
shl
rclb
sbb
pop
aam
sub
mov
insl
lods
inc
mov
push
push
inc
mov
jl
pop
repnz
sub
cld
hlt
dec
xor
jnp
iret
xor
and
jnp
popf
ja
cli
push
push
in
int
push
xlat
daa
repnz
cld
aad
push
or
out
in
rorb
js
jbe
mov
loopne
inc
fmull
lcall
push
adc
inc
cmp
stos
call
or
sti
cmp
mov
mov
jge
icebp
mov
push
andl
iret
testb
std
rorb
dec
loope
jl
push
push
push
mov
sub
jecxz
fsubl
addl
sub
xrelease
ret
or
stos
sbb
faddl
insb
scas
fildll
jbe
sbb
sub
add
cmp
cli
dec
mov
dec
leave
xor
mov
adc
xor
out
cld
inc
pop
ret
notl
sbb
sub
das
cmpsb
arpl
pushf
test
inc
in
xor
pop
mov
mov
mov
mov
out
insb
rorl
shrl
repnz
cs
js
inc
xchg
push
mov
inc
push
cmc
sbb
sarb
mov
xchg
std
add
adc
pop
loopne
inc
rorl
sahf
xor
mov
lahf
ss
xchg
inc
push
roll
fs
pop
loope
rclb
cmp
idivb
sbb
in
jle
stc
fsubrl
les
dec
fstps
adc
pop
cs
outsl
push
xor
sbb
xor
loop
mov
dec
or
or
add
inc
sub
arpl
sbb
pavgb
ret
outsl
lds
fucom
ljmp
or
mov
adc
je
in
cmp
add
dec
js
jl
ret
jl
js
or
jbe
lods
jmp
stos
sub
psubb
inc
xlat
inc
xchg
or
outsb
in
cltd
jno
shl
jge
in
scas
and
pop
addb
and
hlt
fdivs
rcrl
add
sbb
in
jl
pop
lock
dec
ja
clc
call
push
pop
adc
add
aad
stos
and
ds
inc
test
sub
pop
mov
dec
sti
sbb
mov
in
test
sub
dec
test
cli
sbbb
xchg
xor
repnz
mov
fldenv
or
jmp
fsubrs
pop
pop
mov
testb
adc
rcr
repz
nop
popl
test
in
xor
mov
inc
xlat
je
stos
xor
pop
jecxz
ja
ja
sbb
pop
ds
push
jnp
pop
ret
outsb
popa
mov
insb
imull
mov
sub
icebp
mov
or
mov
fisttps
ds
inc
jl
fiaddl
xrelease
cmp
and
sbb
pop
outsb
mov
nop
push
sbb
in
test
movsl
push
or
cli
fldt
mov
sbb
mov
push
mov
xchg
mov
and
xchg
outsl
shrl
and
jns
je
arpl
loop
pop
orl
push
aas
fdivs
jb
sub
fwait
push
mov
mov
or
cli
pushf
scas
sti
jle
mov
in
popa
clc
loopne
fdivl
xchg
cltd
pop
fisttpl
mov
notb
jb
pop
lret
jge
jp
sti
mov
xchg
movsl
add
jo
or
pusha
lea
jnp
hlt
lock
test
aas
outsl
mov
cltd
add
mov
sahf
nop
lods
out
fsubp
incl
mov
cld
xchg
jp
sub
mov
dec
or
stos
lds
repnz
shrb
and
mov
mov
pushf
in
dec
into
mov
dec
mov
and
mov
mov
in
cmp
xchg
jns
lods
fsubrp
daa
leave
inc
daa
js
cltd
jb
xchg
mov
adc
sub
xchg
jmp
mov
fwait
sbb
daa
data16
stc
mov
lcall
mov
in
adc
sbbl
clc
xlat
mov
test
int3
and
cmp
jmp
cmp
push
cmp
aas
outsb
jno
adc
mov
sub
xor
int
int3
cmp
push
inc
pop
lods
nop
xor
enter
or
pop
dec
or
stos
inc
sbb
push
inc
mov
sbb
stos
or
cmp
sub
daa
xlat
pop
or
cmp
cmp
test
dec
loopne
mov
jo
call
xchg
pop
push
push
push
add
lahf
sub
sarl
mov
gs
jns
jne
push
sbb
inc
inc
xchg
xchg
fimuls
xchg
pushl
shlb
aaa
pop
pop
flds
mov
loopne
jo
fnstsw
adc
fistpll
sti
push
dec
sbb
std
jno
push
jae
mov
cwtl
sbb
ljmp
ja
int
add
es
sahf
ret
xchg
int
mov
or
fdivs
pop
imul
or
aaa
sahf
popa
dec
mov
mov
fs
pop
fsubs
or
lods
out
pop
push
pop
cld
push
movsb
mov
cmpps
adc
inc
pop
mov
sti
xor
scas
addb
cmp
mov
test
out
dec
lock
out
mov
jge
out
pop
mov
inc
push
sti
push
or
pop
ljmp
in
repz
xor
or
mov
xchg
and
mov
push
jae
loope
push
mov
sbb
mov
out
dec
pop
xor
xchg
xor
push
cs
push
sub
js
mov
jge
and
and
push
por
fistpl
or
hlt
icebp
adc
insb
mov
push
add
pop
mov
pushf
out
jb
dec
mov
dec
jns
adc
push
add
pop
aaa
out
lods
sub
cld
push
push
cmpsl
or
outsb
sahf
dec
in
dec
cmpsl
fwait
gs
and
js
mov
add
je
and
xchg
out
mov
in
sbbl
sub
xchg
icebp
mov
sbb
imul
aam
test
xchg
xor
inc
jo
xor
iret
sub
repz
leave
lea
xchg
add
lahf
fidivl
sbb
cmp
mov
fucomip
fstl
divb
movsl
dec
jmp
mov
ss
testl
stos
andb
inc
arpl
jne
stos
lret
arpl
out
ficoml
mov
jno
js
iret
test
cmp
add
mov
out
cli
dec
and
pop
pop
jnp
cmpsl
mov
bound
sub
bound
dec
fdivrs
sub
cmp
mov
jle
jg
shll
outsb
jl
cmova
insb
shlb
add
js
rcl
xor
adc
lds
mov
fld
iret
int
jg
mov
fnstsw
sub
adc
lea
and
nop
jmp
cld
jl
data16
sub
push
xor
fisubl
stos
xchg
outsb
mov
adcl
jno
lcall
jecxz
call
sub
je
push
mov
ficompl
push
pop
sbb
mov
mov
andl
mov
inc
inc
mov
adc
into
xchg
inc
lods
lods
shrl
cltd
mov
mov
in
movsb
imul
cmp
inc
jnp
mov
cmp
rcr
jo
pop
andb
icebp
call
dec
es
dec
cmp
or
push
lea
clc
xor
push
cwtl
adc
sbb
inc
inc
xchg
pop
stos
fadds
popf
out
sub
cmpsl
hlt
mov
cli
push
add
jno
pop
add
sbb
pop
mov
out
iret
jecxz
lea
mov
xor
dec
adcb
xchg
fildll
or
xor
ljmp
jo
js
mov
shl
loope
aas
adc
push
stos
jbe
jno
gs
add
popf
push
js
aam
add
inc
fisubs
orb
xor
sub
std
int
test
rcrl
or
int3
scas
bound
or
jae
jmp
addb
pop
adc
enter
xchg
jecxz
and
dec
cmpsb
wbinvd
scas
scas
xchg
cmp
pop
idiv
pop
int3
pop
sbb
or
cmp
add
lcall
push
pop
jmp
mov
lret
jo
lcall
push
popf
out
or
lods
testl
shlb
sbb
shl
sbb
lods
push
jns
mov
cwtl
and
or
ljmp
inc
and
ficoml
mov
push
loopne
adc
jae
inc
fwait
sbb
mov
cmp
pop
repz
add
movsb
jmp
pop
cmp
mov
jge
lods
mov
ja
cs
adc
push
out
and
dec
test
movsb
xchg
push
mov
mov
add
jecxz,pn
push
inc
xor
jbe
push
xor
jmp
xchg
add
cmpsb
test
and
dec
xor
jmp
dec
icebp
mov
arpl
dec
mov
cmpsb
xor
sbb
loop
aam
dec
test
stos
adc
xchg
mov
add
nop
sbb
test
cmp
push
loop
movsl
icebp
test
imul
pop
mov
lcall
stc
sti
xor
repnz
testl
mov
adc
in
cmpsb
xor
cmp
adc
in
pop
mov
movsl
mov
test
adc
sub
xchg
sbb
push
leave
rorb
jge
xchg
push
loop
or
cltd
or
cmc
stc
inc
out
push
imul
pop
das
stos
inc
and
push
out
fisubrl
shlb
xchg
or
or
jge
and
das
bound
xchg
xchg
add
bound
in
imul
dec
cli
xchg
in
mov
cmp
push
out
js
int
cmp
pusha
rorb
and
aaa
and
flds
mov
jb
cmpsl
adc
insb
clc
mov
push
iret
and
sti
int
dec
pusha
ss
mov
sub
repz
push
rclb
mov
iret
addr16
cwtl
lods
jb
pop
popf
ss
jg
lds
inc
aad
cmc
inc
or
test
jl
xor
jmp
loope,pt
inc
or
out
out
loopne
adc
mov
pavgw
cmp
push
loope
push
loopne
loop
in
xor
rcll
jp
xchg
jmp
mov
sahf
mov
cltd
rol
xchg
or
fimull
in
cwtl
mov
fdiv
mov
enter
xchg
add
loope
jno
adc
rcrb
adc
mov
loop
rcl
cmp
fdivrl
inc
fwait
int
pop
icebp
test
lret
pushf
pop
dec
and
scas
mov
fidivrs
clc
fwait
jo
test
inc
pop
or
inc
loop
pop
pop
cmp
sbb
stos
xchg
jp
loop
std
adcl
repz
push
into
fwait
adc
fcmovnbe
iret
fldt
sbb
push
sbbl
std
daa
icebp
js
jae
pop
in
jp
lds
adc
out
push
mov
scas
cmpsl
test
call
add
mov
sub
mov
popf
test
mov
scas
cld
push
mov
iret
ja
pusha
pop
pop
xor
jns
je
sub
sbb
add
mov
pop
pushf
pop
in
les
cmpsb
push
sub
add
add
and
out
jge
xor
cmp
int
add
ret
ja
adc
lock
pop
icebp
inc
shlb
mov
pop
mov
test
sahf
arpl
jb
mov
popa
lods
insb
mov
or
cmpsb
ja
rolb
stos
fcmove
loopne
xchg
shr
lds
xchg
loope
dec
shrl
add
int
pop
mov
push
push
jne
push
or
std
stos
jmp
sbb
push
sbb
or
sub
call
dec
outsl
mov
push
rcr
xchg
shr
les
fdiv
imul
lea
jmp
loope
mov
jmp
xchg
data16
push
pusha
jecxz
cs
hlt
mov
enter
mov
push
xlat
addl
sub
popf
cmc
pop
lret
adc
dec
inc
loopne
mov
mov
xchg
shl
sahf
jmp
push
jbe
dec
inc
inc
push
ljmp
push
jg
fsubl
xlat
sbb
or
insb
sub
sub
mov
and
cld
dec
and
cmp
jns,pn
and
add
orl
inc
lock
mov
or
dec
fstpl
sub
xor
hlt
cld
fistl
nop
sbb
push
add
in
inc
mov
xchg
inc
push
insb
repz
mov
add
xchg
pop
and
fisubrl
jmp
sbbl
roll
shrb
mov
mov
xchg
jle
mov
ja
aaa
sahf
jae
aam
pop
dec
lcall
dec
mov
sti
fs
sbb
pop
jp
mov
mov
add
sbb
mov
inc
xchg
cmc
repz
mov
aaa
push
inc
jl
add
dec
enter
insl
sub
adc
cld
xchg
stc
sti
jecxz
movsl
adc
test
dec
sbb
cmc
lret
xchg
xchg
jp
or
xchg
lea
out
push
inc
in
mov
xor
movsl
popa
lea
shlb
loop
pop
sti
xor
adcl
cld
push
xor
pop
lcall
sub
and
into
bound
jmp
cli
test
test
push
rcrl
jp
gs
out
pop
ja
pop
sub
scas
pop
fs
notl
xor
inc
incb
push
push
in
xor
dec
arpl
out
inc
and
and
mov
outsl
adc
sti
ficompl
jbe
lret
cmc
in
push
dec
pop
loopne
insb
cli
jne
and
dec
pop
inc
xlat
nop
mov
rcrl
test
and
iret
pop
add
push
jnp
popf
sub
pop
es
jmp
mov
into
cwtl
nop
mov
adc
xor
movsb
jecxz
fwait
cmpsl
inc
add
clc
mov
or
push
sub
pop
out
fcom
sbbb
cmp
dec
in
sbb
mov
in
movsb
testl
popa
push
aaa
in
add
aaa
add
cmp
lods
xor
das
dec
out
cmpsl
out
or
xor
mov
gs
pusha
dec
out
sub
jns
and
xor
sbb
cltd
xor
mov
lds
and
mov
cmp
aad
rorl
arpl
sbb
push
les
inc
lret
cli
push
aam
pop
in
mov
dec
jmp
rclb
adc
icebp
test
ja
frstor
notb
in
aas
pop
test
hlt
loopne
pop
and
movb
jl
cmc
inc
or
cmp
mov
xor
cmp
mov
fnstsw
xchg
push
loop
pushf
fcoms
test
ds
push
nop
jl
dec
je
test
ljmp
sbb
jns
fildll
outsb
adc
xchg
scas
fbld
mov
lock
mov
mov
inc
shlb
push
cwtl
push
jb
les
pop
pop
dec
xorl
jnp
aaa
divl
push
sub
pop
loop
inc
mov
ja
imul
imul
pop
or
add
mov
mov
fbld
inc
mov
jp
hlt
or
js
pop
or
pop
cmp
insl
xchg
outsl
sbb
mov
mov
and
mov
or
xor
jnp
lea
out
pop
js
arpl
std
xlat
outsb
cmovle
sub
movsl
ret
ret
cld
int3
scas
mov
xchg
and
loop
sbb
xlat
push
dec
lahf
mov
jb
test
xchg
hlt
nop
stos
add
lds
lret
and
stos
push
mov
xor
cmpsl
into
call
das
sub
push
movsb
inc
stc
cs
xor
add
cli
cmp
in
mov
mov
sti
inc
xlat
pop
ss
xchg
push
jb
adc
mov
push
ret
inc
and
mov
std
insl
sub
leave
scas
pop
test
inc
and
repz
jge
call
jle
rcr
popa
inc
fldt
mov
xlat
mov
sarb
sub
xor
aas
xor
jbe
xchg
out
int
and
xchg
sbb
mov
push
or
in
mov
push
in
pop
adc
push
mov
push
movsl
pop
pop
and
mov
bound
pop
cs
popa
xor
jb
or
mov
xor
out
pop
mov
dec
lds
ljmp
ss
or
scas
jp
and
icebp
sqrtps
test
pop
movsb
pop
cmp
or
mov
cmp
and
out
push
popf
iret
mov
sbb
dec
push
sub
imul
inc
push
sub
mov
mov
lock
sarl
add
pop
ljmp
xor
incl
loopne
dec
filds
inc
out
xor
fildll
imul
lock
xchg
pop
and
inc
gs
push
aaa
stc
cmp
idivl
sbb
and
cmpsl
lods
lds
outsl
js
adc
sbb
pop
repnz
imul
test
sbb
add
ljmp
add
mov
inc
mov
movsl
aas
arpl
adc
decl
aaa
sti
ja
stc
test
push
xor
pop
jbe
jo
dec
daa
inc
cmp
mov
stc
or
mov
shl
repz
add
call
loopne
pop
sub
push
cmp
outsl
dec
shl
sbb
pop
test
aas
push
popa
xor
mov
mov
pop
mov
stos
xorb
dec
andb
outsl
mov
jnp
push
out
std
movsl
dec
dec
sbb
lahf
idivl
test
lret
movups
mov
cmp
xchg
cmp
cmpsl
or
add
sar
xchg
add
xor
andw
scas
mov
xchg
cmp
inc
ficoml
rol
mov
movsb
jnp
flds
and
cmp
les
adc
shlb
or
and
jl
addr16
insl
add
xor
pop
das
ret
les
sbb
in
movsb
mov
mov
push
movsb
js
or
xchg
jns
pop
popf
rcrl
and
ja
jo
mov
in
sti
inc
sbb
add
loopne
push
lahf
jno
cmp
xor
test
pop
mov
mov
mov
mov
mov
jg
jl
fst
lods
mov
jle
pop
shrb
mov
outsl
pop
add
cmp
pop
dec
loopne
dec
daa
inc
ja
repnz
lahf
mov
inc
divl
scas
test
dec
mov
std
xchg
clc
data16
scas
sbb
cmp
xlat
js,pn
sbb
imul
mov
fldl
mov
xchg
pop
nop
mov
sbb
lock
iret
dec
inc
adc
push
data16
pop
cwtl
jno
jo
lcall
push
int
cmpl
adc
js
dec
cmp
test
aad
das
pop
sub
sbb
sub
cmp
lret
outsl
lods
add
test
cwtl
loope
mov
or
push
out
sahf
shl
jp
jne,pt
arpl
popa
mov
cmc
sbb
pop
sub
cs
dec
fbstp
push
adc
ror
fdivl
dec
adc
inc
xchg
sbb
mov
push
or
test
xchg
sub
cmp
pop
mov
cmpsl
mov
in
in
add
mov
inc
out
repz
jnp
sbb
add
jo
lods
mov
cmp
fwait
shrb
mov
xor
xlat
fimull
mov
int3
sbb
js
sahf
lods
mov
stos
fidivs
idivb
lods
push
adc
arpl
or
mov
and
mov
mov
sbb
mov
pop
mov
mov
xor
and
in
sahf
jmp
addr16
inc
cmpl
mov
clc
das
mov
cli
or
mov
xor
out
jmp
loopne
lret
inc
out
xor
sub
xor
shl
repz
mov
xor
into
push
pop
jg
jae
jg
jnp
push
push
mov
push
std
sub
add
dec
insl
add
lods
add
add
cld
xchg
sahf
xchg
add
xor
xorl
or
fisttps
pop
cmp
and
shld
jae
cmp
jl
push
loop
jl
les
or
jo
sub
jg
mov
push
mov
lods
dec
xor
shl
lea
sarb
shl
xchg
adc
mov
sub
ret
pop
fidivs
jp
and
test
mov
cmp
sbb
cmp
outsb
pop
adcl
imul
xchg
mov
adc
sub
and
or
out
test
pop
icebp
and
fiaddl
getsec
sbb
sub
adc
and
inc
xor
aaa
xchg
ljmp
jne
mov
xchg
and
scas
test
pop
mov
inc
push
mov
andl
leave
cwtl
lock
shrl
mov
test
and
fdivp
mov
cmpsb
lock
xchg
pop
lock
js
mov
cwtl
popa
insb
aaa
dec
xchg
sub
clc
mov
push
fs
sbb
lcall
int3
popa
adc
mov
in
cmp
or
add
or
dec
inc
mov
adc
test
and
inc
pop
js
test
frstor
aad
movsl
adc
lock
lea
stos
xor
or
adc
ja
in
mov
repnz
in
cmovo
ret
out
sbb
and
ret
sahf
negl
outsb
jg
jne
push
mov
pop
adc
mov
and
icebp
movsl
lods
sbb
jmp
push
ljmp
je
adc
sbb
leave
xchg
mov
cltd
push
push
ficoml
ss
outsb
fcoms
mov
push
fistpl
xor
jae
xor
add
es
fsubrs
sarl
sub
push
mov
negl
mov
push
inc
push
mov
pusha
popa
sbbl
es
add
pop
mov
bound
imul
push
and
outsl
andl
xor
iret
jno
adc
inc
rol
jecxz
and
lods
int
pop
sbb
inc
jno
adcb
jb
nop
std
mov
xor
hlt
fs
addr16
sub
or
fdiv
pop
test
sbb
mov
daa
adc
lcall
add
std
repnz
imul
outsl
lock
inc
insb
dec
push
adc
gs
or
jae
pop
add
xor
pop
inc
sarl
mov
stos
fstps
xchg
ret
shlb
mov
lahf
out
mov
jge
les
cmp
add
insl
or
ret
inc
andb
mov
inc
dec
inc
mov
pop
dec
dec
lods
cli
mov
je
dec
sub
sub
testl
data16
xor
lret
mov
movq
shrb
ror
pop
or
ret
outsb
loop
ficoml
int3
loopne
add
mov
andb
xchg
push
outsl
xor
inc
sbb
lret
and
imul
jmp
iret
dec
sbb
fsub
daa
arpl
daa
jp
add
add
jge
lock
xlat
scas
push
int3
iret
int3
inc
scas
mov
fsub
scas
ss
jbe
xlat
mov
jno
scas
cmpsb
xchg
repz
inc
stos
push
cmpsb
aam
inc
push
ja
stos
daa
cmp
das
xor
sbb
imul
cwtl
push
jp
cmp
cld
push
aaa
gs
movsl
or
push
insl
out
call
hlt
test
xor
pop
aas
dec
or
lock
pop
sbb
scas
mov
mov
mov
xchg
adc
js
mov
int
loope
nop
push
pop
ja
nop
data16
imul
out
push
cmp
outsb
dec
dec
ret
cmc
mov
xchg
add
movsl
push
sahf
mov
movsb
push
sub
jecxz
push
dec
mov
or
mov
xchg
add
xor
dec
xchg
dec
loope
mov
scas
mov
mov
mov
leave
xor
mov
call
cs
pop
fildll
movsb
sbb
insb
clc
int3
and
sub
or
mov
jge
arpl
add
mov
adc
cwtl
sbb
mov
jnp
jb
cmp
cmp
mul
xchg
mov
aam
and
hlt
js
mov
dec
push
xchg
xchg
stos
xor
scas
sbb
and
and
pop
imul
xlat
movsb
cmp
mov
mov
jle
mov
in
push
ret
icebp
adc
inc
dec
cs
fbstp
stc
add
push
jbe
les
jb
cmp
xchg
ljmp
jne
pop
xlat
call
xor
xchg
lods
push
xlat
dec
mov
sbb
test
cwtl
sbb
shlb
insb
adc
call
xor
movsb
push
aas
push
xchg
lea
mov
sbb
sub
adc
cmp
sbbb
push
mov
push
mov
shlb
int3
jge
aas
jecxz
out
mov
into
mov
or
add
shll
push
in
das
lds
aam
pop
mov
or
icebp
cmpl
sub
jns
or
arpl
iret
push
jb
dec
and
mov
cmpsb
push
mov
push
inc
pop
mov
sti
sbb
ss
add
xor
sub
jmp
cmp
cmp
inc
jbe
add
mov
push
je
adc
popl
mov
pop
sub
cmp
jmp
idivb
jle
pop
adc
fstpt
mov
enter
pop
mov
test
cwtl
sub
fdivrl
fistps
sbb
shrl
imul
and
dec
cltd
test
ja
shll
sbb
xchg
mov
sub
adc
add
daa
inc
fsub
mov
pusha
stc
sbb
sahf
enter
pop
frstor
int3
fnstcw
in
stc
xchg
xor
add
data16
mov
fistps
xchg
aas
fwait
cmpsl
outsb
jle
add
fdivrl
aaa
into
or
push
in
pop
push
out
test
fsubr
leave
push
or
jno
scas
sub
es
or
jno
push
outsl
insb
scas
je
loope
xor
mov
pop
ljmp
es
fdivrs
or
adc
and
out
mov
mov
pop
shr
pop
xchg
fst
push
mov
push
imul
mov
fiadds
out
lret
xchg
gs
ret
ds
repnz
pop
fucomp
mov
daa
pop
mov
vhaddpd
mov
mov
add
std
inc
adc
je
flds
movsl
mov
pop
adc
adc
mov
das
call
in
jnp
out
subb
dec
pop
jp
outsl
out
cmpsl
ja
out
std
out
test
mov
sbb
repz
fwait
jmp
mov
mov
shrl
cmpb
ja
mov
pop
sbb
bound
pop
mov
je
sub
sbb
dec
icebp
mov
cmp
push
xchg
sub
pop
into
lret
mov
mov
loopne
sub
push
cwtl
ret
mov
fucomp
int
mov
xchg
or
xchg
sub
sub
mov
dec
lds
imulb
sbb
ljmp
fsubl
sbbb
testb
mov
out
jb
in
ret
jne
lds
push
in
xchg
decl
sbb
aas
pop
jns
or
cmp
push
sub
jno
cmc
cmpsl
add
inc
push
dec
int3
mov
xchg
out
test
mov
inc
jno
outsl
push
xlat
mov
into
sub
sub
inc
out
insl
pop
xor
cs
negb
pushf
out
nop
gs
fidivrl
lock
sahf
lods
or
sub
cmp
into
fimull
test
cmp
aaa
bound
fsubr
xchg
mov
inc
fs
enter
jne
jno
aad
push
inc
push
jns
stc
sarb
in
mov
sti
push
sbb
push
mov
add
xchg
hlt
mov
loope
nop
cmpsl
add
fisubrs
xchg
stos
xchg
sub
ljmp
jno
pop
imul
mov
jnp
hlt
cmp
mov
inc
mov
add
imul
ja
out
lods
repnz
rorb
jecxz
jmp
fcom
mov
fwait
popa
or
push
insb
movsb
mov
ss
sti
cmc
pop
daa
or
outsl
push
popa
push
jne
lret
mov
lret
xchg
mov
mov
mov
xchg
out
adc
imul
jns
jg
repnz
and
jecxz
push
in
sarl
in
cli
int
dec
fwait
scas
fdivrs
lret
dec
in
mov
mulb
mov
add
mov
sub
push
jmp
xchg
dec
mov
fcmovbe
jb
mov
popa
stos
mov
xchg
int
pop
adc
ss
adc
xor
aam
dec
xchg
and
cmp
sbb
mov
shr
push
arpl
mov
lcall
lahf
sbb
lret
push
hlt
push
add
stos
xor
lds
inc
movsl
lods
inc
xlat
pop
leave
xchg
pop
divb
cmpsl
mov
cltd
and
pop
jge
jg
xor
movsl
dec
sbb
aas
xlat
daa
jmp
cs
popl
ds
lds
adc
xor
arpl
dec
xlat
int
mov
out
push
mov
push
push
jae
sub
lods
std
push
sbb
cmpsb
jg
or
push
les
mov
dec
sbb
jg
mov
mov
xchg
mov
test
jp
add
sbb
insl
jne
sub
xchg
mov
mov
out
fcom
stos
or
sbb
jmp
or
and
call
rorb
outsl
or
data16
dec
stc
push
ljmp
jno
xchg
mov
pushf
int3
xchg
xorl
dec
lret
fdivrs
push
stos
into
cli
mov
adc
stc
mov
in
sub
xchg
in
dec
dec
jnp
pop
outsb
lods
fnstenv
jecxz
mov
lret
push
lret
movsl
shrl
loope
sbb
lods
loop
adc
loope
adc
ljmp
xchg
dec
fcoms
mov
int3
loop
lret
repz
dec
sbb
and
inc
mov
imul
les
out
cmc
xchg
cld
data16
dec
test
lds
mov
out
fisttps
fdivs
add
in
imul
fcompl
xchg
or
lahf
xchg
test
imul
jno
mov
pop
popf
lods
in
dec
mov
scas
cmp
sarl
dec
push
aaa
lods
loope
pop
inc
scas
cmp
mov
shll
testb
xor
sti
data16
mov
popf
sti
xchg
sbb
or
add
ss
mov
int
test
adc
sub
aaa
sub
adc
dec
pop
pcmpgtb
je
lods
xchg
mov
daa
sti
fwait
aad
push
push
out
pop
add
mov
out
movl
adc
testl
fwait
pop
mull
cmp
fsubrs
or
bound
mov
sbb
and
add
ret
mov
outsl
jle
xor
mov
cmp
aam
or
pop
xor
cmp
pop
xchg
sbb
scas
test
sub
add
pusha
mov
mov
mov
rol
rorl
mov
sbb
inc
push
outsb
std
call
push
sub
mov
pop
daa
inc
cli
xchg
jns
sahf
adc
rol
daa
jno
jo
cmc
scas
pop
sub
adc
sarl
mov
movsl
loope
pop
mov
mov
iret
out
test
sub
cmc
aad
dec
pop
test
sub
scas
mov
mov
lahf
jo
add
jne
in
sub
and
add
jbe
shlb
nop
paddw
movsl
test
xchg
or
mov
int3
sub
andl
mov
call
jno
fiadds
and
subl
and
or
inc
lahf
pop
loope
push
loope
call
addr16
xor
inc
mov
das
insl
data16
cwtl
mov
enter
inc
cmp
nop
cmp
pop
out
test
movsl
or
push
or
mov
mov
ds
jl
pushf
sub
popf
sub
adc
and
and
adc
xor
leave
xlat
push
fwait
je
sub
add
adc
jecxz
xlat
dec
pop
mov
mov
mov
jb
stc
pop
sbb
xor
jo
add
and
es
pop
or
test
inc
movsb
test
add
sbb
ret
popa
leave
pop
stc
rcrb
adc
xor
rcrb
leave
ja
xchg
bound
xchg
inc
pop
cmovnp
inc
inc
mov
negl
or
sti
addr16
push
cld
jnp
sub
test
ret
fucomip
inc
scas
cmpsb
int
push
lret
stos
jmp
xchg
cwtl
cmp
jae
pop
test
fs
sub
lret
xchg
inc
fucom
inc
mov
cs
iret
sub
movsl
dec
pop
mov
repnz
jbe
inc
popa
rclb
cld
push
mov
add
verr
push
andl
push
mov
xor
popf
jno
adc
fiadds
loop
or
jbe
sub
sahf
ficomps
inc
adc
loope
mov
mov
lea
repz
pusha
test
mov
pop
mov
jecxz
jne
subl
push
arpl
mov
clc
pop
shr
cmp
inc
dec
in
shlb
out
call
add
inc
adcl
xchg
push
addr16
cwtl
jno
data16
daa
out
cmp
xchg
sbb
pop
fldl
mov
addr16
and
test
je
stc
pop
mov
test
jns
mov
js
mov
add
int3
mov
jmp
bound
inc
sbb
and
cmpsb
out
fimuls
pop
mov
sbb
cltd
repnz
popf
xor
jo
pop
pop
dec
mov
mov
push
xchg
jo
int3
xor
rol
fcoms
dec
sub
and
jbe
pop
jbe
push
imul
add
sahf
sbb
add
mov
enter
xchg
stos
mov
sub
mov
vprotb
xor
outsb
inc
sub
gs
push
fstl
add
sub
stos
xchg
xchg
stos
cmp
call
jl
inc
popa
rcrb
mov
lods
sbb
ja
pop
sub
pop
filds
vpcmpeqw
xor
std
or
push
ret
jmp
fists
out
enter
fisubs
jle
and
movsb
inc
fwait
imul
lock
mov
push
inc
cmp
inc
fsubs
inc
lret
lret
les
int
mov
movsl
jo
das
repnz
xor
inc
mov
ja
xchg
test
push
xor
hlt
lahf
jno
mov
or
fwait
cmp
jle
and
xchg
gs
jbe
mov
inc
je
dec
or
cmp
shll
arpl
dec
cld
pop
rcrb
aaa
icebp
movsb
mov
les
push
xlat
mov
push
inc
push
pop
mov
daa
scas
adc
mov
icebp
inc
cmpsl
roll
mov
xlat
aad
sbb
and
fiadds
mov
daa
mov
js
inc
push
iret
mov
pop
sub
xchg
out
mov
dec
es
test
and
sbb
lret
inc
push
jp
enter
xchg
add
mov
test
outsl
mov
xor
sub
xor
gs
fsubrs
dec
push
lea
add
mov
push
sub
insb
push
leave
ljmp
bound
popa
jne
jae
fdivs
fcomps
es
les
jbe
outsb
into
es
fstl
jnp
xchg
push
pop
fstpt
mov
mov
xchg
sti
xchg
stos
loop
popf
lods
push
mov
push
jne
sahf
xor
nop
mov
test
lret
dec
lret
mov
ret
repz
xchg
popl
fisttpll
lea
pop
mov
test
aas
adc
aaa
cmpsl
pop
arpl
stc
fwait
and
push
pop
icebp
arpl
xchg
iret
mov
jno
push
lea
add
decb
testb
rclb
cmpsl
add
sbb
push
ja
and
std
jae
mov
xlat
push
jecxz
cli
nop
lea
xor
rcll
das
add
fbstp
shlb
cmp
std
hlt
fwait
and
or
imul
fstpt
pop
in
divb
add
adc
outsb
jl
jmp
cwtl
or
pop
mov
pushf
pop
push
andl
jmp
adc
cwtl
xchg
pop
jp
or
inc
xor
js
aad
jno
adc
xor
xchg
pop
aad
xor
cmp
in
hlt
jmp
in
add
cmpsl
xchg
lret
adc
cld
mov
ljmp
mov
xor
movsb
or
xor
or
in
sahf
dec
imul
outsl
loop
push
or
sub
repnz
fidivl
add
adcb
stc
xchg
test
scas
inc
mov
inc
bound
sub
shr
fisttpl
jge
cld
add
int
xor
dec
push
mov
shlb
add
sbb
lahf
movsb
cltd
push
xchg
mov
lock
xchg
hlt
and
cmp
sub
sbb
out
jne
inc
xlat
pop
cmp
xor
push
test
fimull
divb
cwtl
movsb
xchg
subb
pop
jnp
fucomip
adc
in
fdivs
and
out
pop
pop
jge
out
sti
xchg
sub
into
fucomp
xor
xchg
sti
cmp
jp
jno
ds
mov
xor
mov
mov
sub
push
lcall
aaa
andb
inc
outsb
daa
inc
clc
or
lcall
add
jns
and
push
cmpsb
xor
data16
pop
cmc
ficoms
fiadds
adc
fs
fisttpll
cli
mov
mov
pop
cmp
pop
jo
in
fsts
xchg
in
cli
and
mov
dec
pop
inc
sahf
addl
xchg
ss
iret
mov
call
add
sub
lret
repz
stos
mov
cmp
xlat
jb
pop
mov
adc
scas
popa
jmp
ja
mov
inc
pop
jmp
inc
jmp
pop
mov
scas
cmpsl
aas
leave
jp
rcrb
push
popa
pop
inc
lods
push
mov
je
out
popa
mov
nop
xor
nop
cmp
mov
push
rorb
mov
rorb
inc
arpl
loopne
or
mov
jge
les
sahf
rorb
daa
loopne
js
dec
pop
and
ret
pop
pusha
ret
mov
loope
icebp
jmp
popa
sti
icebp
mov
outsl
scas
mov
movd
or
xor
jbe
or
add
xchg
jne
sbb
inc
outsl
mull
xor
in
ljmp
mov
or
outsl
cmp
mov
mov
out
pop
fwait
adc
xor
or
popa
popf
cli
xchg
mov
push
sbb
dec
fldenv
adcb
lcall
loop
jp
and
loop
jbe
xor
fisubs
cmp
cld
mov
das
jp
pusha
in
mov
lods
sbb
inc
fldl
cmpsl
fs
fdivs
mulb
out
popa
sbb
jb
leave
xor
jmp
dec
pop
xor
inc
inc
lds
sub
lret
xchg
test
mov
in
dec
mov
sub
ret
xchg
jb
rcr
clc
push
jl
into
pop
popa
inc
pop
sarl
aaa
mov
shl
or
add
cmp
sarb
cmp
jns
cmp
cmp
les
out
insl
sub
pop
sti
addr16
lods
pop
call
jge
outsb
cmp
or
pop
into
or
iret
or
add
js
outsl
jecxz
arpl
jmp
test
dec
mov
xchg
sbb
iret
mov
inc
cs
push
cltd
outsb
or
xor
dec
sub
popf
mov
or
call
int
jne,pn
clc
ljmp
and
iret
xchg
lods
insb
lret
mov
cld
andl
popf
movsb
sbb
add
daa
dec
or
outsl
adc
mov
out
aaa
xchg
pop
cmp
int3
pop
push
jb
popa
movsb
nop
push
out
shll
lea
insl
daa
mov
mov
pop
sbb
mov
jne
sub
sub
ret
mov
mov
aad
adc
lods
arpl
pop
imul
sub
xor
push
dec
pusha
lcall
jbe
dec
shll
adc
jp
dec
mov
fwait
xchg
sub
sbb
ja,pn
jecxz
sbb
shr
sub
inc
cltd
dec
popa
inc
fsts
sub
cwtl
lods
mov
fisubrs
mov
divb
lret
std
imull
shrb
cmpl
test
and
push
sub
sub
mov
sub
loop
adc
inc
xor
add
xlat
ret
add
xor
in
lock
xor
xor
mov
dec
fistl
xchg
inc
test
mov
cwtl
into
jns
arpl
rcrb
in
add
out
in
mov
subl
idivl
pop
cmpsb
inc
mov
jns
mov
mov
loop
testb
jb
xor
push
arpl
push
cmpsl
test
xor
fdivp
stos
in
int3
jnp
test
inc
mov
cld
lods
scas
and
xchg
xorl
int
lea
mov
fidivrs
adc
fdiv
xlat
es
add
inc
dec
or
inc
mov
pop
mov
jmp
faddp
jo
idiv
aas
test
into
or
cli
and
pop
aam
add
dec
cmc
cmpsb
std
mov
inc
jns
std
and
xchg
mov
sub
sub
or
addl
enter
push
movsl
push
xor
ret
xor
stc
enter
pop
and
pop
push
test
divb
sbb
scas
xchg
dec
ss
cmp
inc
lret
into
and
stos
mov
out
fwait
les
push
and
mov
cmp
inc
repnz
mov
popf
cmp
leave
in
aaa
push
pop
jmp
lock
xchg
pusha
or
mov
push
arpl
outsl
sahf
or
pushaw
lea
xchg
push
lahf
mov
inc
aam
int3
add
not
jbe
sbb
lahf
add
daa
mov
inc
roll
add
xchg
xchg
aad
roll
negl
mov
jmp
movsl
push
mov
insb
mov
adc
xor
mov
fdivs
mov
icebp
sbb
stos
or
popa
addb
jnp
jb
in
sbb
xor
nop
mov
and
add
xor
pusha
loop
xchg
cmpsl
mov
test
push
hlt
adc
inc
sbb
or
nop
jno
sahf
pop
out
xor
or
cwtl
in
inc
repnz
cmc
add
jmp
fistl
js
outsb
imul
inc
fcoms
bound
push
outsb
jmp
bound
xchg
lds
std
xor
push
push
push
adc
cmc
outsl
pop
out
cwtl
test
scas
inc
jno
dec
or
and
sbb
popf
repz
lahf
arpl
fdivrl
xchg
mov
popa
mov
addr16
jb
pop
mov
rcll
adc
jg
jbe
xor
mov
adc
dec
add
cmp
push
sbb
lea
mov
jo
ret
dec
mov
xchg
mov
shrl
jg
pop
loopne
out
cmp
jo
call
add
and
shrl
xchg
sub
jl
dec
ret
dec
fstl
mov
ret
rorl
xor
addr16
xchg
clc
inc
jle
push
mov
inc
shr
repz
shrl
push
inc
int3
xchg
jmp
leave
in
fidivrs
rclb
dec
nop
ds
mov
fstps
mov
dec
jb
fcmovnbe
sbb
js
hlt
popa
push
xchg
add
gs
fwait
insb
jnp
mov
cli
movsl
xchg
roll
test
jnp
xor
fisttpll
inc
rolb
sub
daa
nop
daa
jg
dec
mov
ficoms
shrl
xor
add
in
or
push
sbb
es
mov
cmpb
pop
inc
pop
data16
cmp
or
jno
in
and
call
push
test
leave
fcmovne
sarb
mov
cmp
or
popf
jl
xchg
xchg
jnp
aam
sbb
fdivl
pop
xor
dec
lock
clc
cmp
sub
pop
out
in
or
arpl
jmp
add
ss
dec
cmp
dec
cmp
inc
out
mov
in
fwait
lret
jmp
test
inc
data16
insb
stos
lds
lds
add
pop
aas
add
lds
mov
ret
lds
or
pop
cmp
push
je
cmp
dec
xlat
sbb
fstpl
js
pusha
dec
mov
stc
mov
dec
jg
cmc
mov
pusha
push
fisttps
adc
xchg
js
mov
jp
movsb
pop
leave
pusha
cmp
inc
fcomi
addr16
mov
pop
sti
inc
roll
and
sub
scas
sub
sbb
mov
sub
test
sar
subb
push
sub
data16
lods
orl
xchg
stos
xor
icebp
lret
out
out
dec
push
and
xchg
push
cmpsb
pop
xchg
shr
jl
aas
movsl
push
cwtl
das
inc
enter
arpl
data16
fsts
sbb
lahf
jno
testl
sub
push
or
sar
push
cmpsb
pop
add
cmp
add
negb
aaa
scas
ds
mov
clc
ljmp
gs
or
ja
clc
adc
fdivr
inc
mov
mov
into
jno
inc
call
jg
sbbb
cwtl
pop
mov
jns
pop
popa
lock
mov
lds
lahf
sub
add
orl
nop
out
dec
push
mov
loop
es
mov
test
test
mulb
inc
ret
mov
dec
xor
cmp
push
and
and
stc
test
add
cmc
inc
test
mov
lahf
test
or
mov
cs
xlat
mov
imul
xor
negb
pop
into
pusha
gs
in
in
dec
and
shlb
lret
aad
mov
add
icebp
enter
pop
sub
push
lock
fsubr
add
clc
aaa
xor
mov
pop
call
jnp
out
push
nop
icebp
cmp
hlt
in
inc
je
ja
js
cmp
jnp
in
mov
sarb
out
sti
shll
inc
jecxz
cmc
jne
adc
lcall
icebp
sub
cltd
flds
loop
mov
lcall
popa
add
cmp
cmp
xlat
sub
nop
std
movsl
dec
aad
xor
lcall
push
mov
lcall
xor
fistps
dec
jmp
push
dec
xchg
mov
stos
push
add
adc
jl
lcall
in
nop
cli
jbe,pt
pop
aad
outsl
mov
out
inc
test
jmp
inc
mov
mov
cmpl
add
mov
insb
xchg
sbbb
mov
sbbb
loope
xchg
push
mov
in
jecxz
and
fdivrp
ds
jl
call
cli
lea
pop
pop
pop
mov
mov
cmpsl
mov
faddl
imul
push
xchg
shrl
lret
cwtl
and
add
jno
insb
sub
lock
out
xor
pop
lock
fdivs
rcrl
pop
push
gs
push
xchg
jb
test
enter
inc
xchg
loopne
sahf
scas
repz
adc
mov
aad
mov
push
js
xchg
das
xor
cli
add
jge
and
imul
mov
mov
out
insl
in
sub
pop
incl
inc
xor
jno
mov
mov
cli
nop
rorb
call
jne
push
addr16
ret
mov
jb
ljmp
inc
push
pop
push
lcall
inc
pusha
ljmp
mov
pop
nop
gs
push
mov
jb
and
xchg
dec
imul
dec
bound
cmpsb
lahf
and
scas
cmp
ret
sbb
add
popa
je
cmp
shll
sbb
and
jge
xchg
mov
fdivp
and
pop
out
aas
sbb
cmp
js
lret
test
inc
pop
inc
js
push
xorb
es
out
cmp
pop
inc
lea
js
fstps
orl
xor
push
insl
xchg
in
mov
mov
int
mov
adc
pop
cli
sub
or
les
or
dec
mov
popa
jg
mov
mov
adc
aas
imul
dec
cmc
fadd
test
xchg
fucomp
mov
lret
jae
lcall
inc
jmp
fcmovb
subl
mov
loope
test
cmp
dec
adc
pop
pushf
out
pop
nop
popf
mov
popf
in
pop
push
outsl
sbb
inc
nop
test
sub
inc
mov
orl
fiadds
push
lsl
mov
xchg
and
scas
ficoms
push
sahf
dec
push
movsb
sbb
sti
ret
pop
or
xorb
pushl
mov
push
adc
inc
icebp
pop
lock
sub
roll
cmpb
imul
lock
popa
push
jo
push
cli
iret
cltd
fdivrl
cmpsl
mov
mov
pop
or
jecxz
dec
and
scas
pop
icebp
int
cld
addr16
mov
add
test
and
mov
gs
loopne
lds
in
xor
push
add
mov
popa
outsb
repnz
pusha
imul
stos
mov
test
dec
jnp
xor
das
cmp
xchg
adc
sub
dec
dec
repz
and
mov
mov
sti
adc
jmp
and
mov
push
jns
pop
dec
dec
aam
test
mov
jne
mov
mov
scas
inc
push
out
scas
adcl
scas
inc
sbb
ja
sarl
outsb
gs
or
test
push
or
cmpsl
pop
cmp
fcompl
aaa
mov
pop
filds
adc
out
mov
mov
push
pop
ds
fsubrl
jmp
fsubs
rcr
mov
add
lods
jb
into
mov
mov
call
into
in
fstl
decb
or
cld
lods
jno
fisubrs
hlt
add
jge
push
jl
sub
pushf
arpl
inc
mov
jns
addr16
inc
mov
mov
fstpl
sub
adc
ret
xchg
add
push
negb
daa
jae
cmp
mov
sbb
sarl
dec
ficoms
mov
out
sbb
pop
inc
es
js
push
adc
stos
lock
rclb
adc
ss
out
popf
test
test
mov
arpl
test
test
daa
xlat
outsb
jg
js
loopne
or
xor
jne
cmp
test
pop
lcall
push
mov
mov
ret
test
and
mov
out
stos
pop
outsb
clc
lret
jne
scas
inc
testl
in
inc
inc
add
mov
push
jp
test
dec
fcmove
popa
or
cs
repz
into
hlt
or
xor
or
dec
test
push
dec
and
ds
jmp
or
jae
xor
inc
pusha
cmp
pop
filds
fmuls
sahf
or
xor
popf
ret
xor
aas
sbb
mov
xlat
stos
mov
out
inc
lahf
pop
imul
xor
stc
out
pushf
mov
mov
iret
div
sub
mov
adc
mov
iret
mov
addr16
or
push
mov
aam
es
fcmovnbe
insb
add
xor
mov
mov
movsl
lock
and
in
int3
imul
call
lret
cli
pop
mov
int3
mov
jb
cld
cmpsb
jo
mov
sbb
imul
cmove
mov
imul
in
call
int
out
cmpsb
and
mov
or
push
out
movsb
push
adc
xchg
jl
mov
insb
fidivs
enter
outsb
shrl
ja
pop
icebp
sbb
jmp
cmp
fs
mov
ret
movsb
push
mov
fs
xlat
sbb
dec
movsb
push
pop
icebp
cmp
xchg
mov
pop
js
xchg
add
mov
outsb
mov
adc
in
mov
push
in
mov
es
in
pop
sbb
ds
out
mov
jge
cld
outsl
shll
inc
mov
bound
sarl
nop
xor
fidivrl
dec
and
int
jl
jp
push
sub
gs
scas
jle
cs
dec
mov
fmuls
cld
shr
and
pop
sbb
roll
adc
in
int
dec
decl
shll
cmp
ret
test
ret
sbb
dec
pusha
push
sbb
pushf
ret
ja
imull
mov
sbb
cmp
aaa
or
cmp
xor
les
or
adcl
mov
cwtl
pop
pop
decl
xor
filds
xor
and
orl
inc
fsubr
test
mov
arpl
pop
sbb
js
ss
movlps
in
xchg
test
pop
inc
xchg
fidivrl
pop
adc
je
jle
and
pop
test
mov
sbb
fstpl
sub
push
outsb
push
addl
inc
xlat
xchg
mov
and
out
push
cwtl
xchg
in
test
mov
push
mov
add
filds
mov
jbe
push
pop
popf
aam
icebp
fisttpl
dec
adc
ret
xor
adcb
in
mov
sub
push
popa
sbb
ret
pop
icebp
adc
int
add
xor
push
mov
pop
insb
xlat
mov
ret
xor
out
sub
fcomp
mov
sbb
outsb
dec
jb
push
and
out
xor
and
lods
dec
and
ljmp
ret
sub
mov
sub
jp
shrb
ja
jp
dec
shrb
jl
out
ret
or
or
out
jns
lahf
ljmp
ds
mov
adcb
and
lcall
cmp
xlat
push
push
in
mov
shl
cmp
fmuls
jno
sub
test
repz
pop
adc
mov
jg
sbb
mov
cld
cmp
mov
mov
sub
jbe
ss
fcomi
mov
stc
mov
pop
jmp
jge
jmp
sti
repnz
es
mov
je
adc
dec
rolb
in
cmp
dec
rol
in
dec
fsubl
stos
int
arpl
out
cs
cmp
mov
fs
mov
adc
cmp
sub
fistpl
lea
jmp
and
mov
pop
jne
sbb
ret
ss
or
or
out
dec
dec
out
or
and
or
in
dec
inc
or
sub
mov
cmpsb
ja
or
mov
or
fs
mov
roll
mov
mov
movsb
repnz
and
xor
stos
adc
mov
jae
jae
lock
iret
lret
mov
daa
gs
cmp
pusha
int
arpl
lret
lock
sub
dec
sbb
jnp
popf
data16
push
sub
cmpsb
scas
repnz
and
and
xor
pop
cmp
in
or
pusha
xchg
mov
mov
add
adc
pusha
dec
cld
movsb
jnp
jo
xorb
pop
cltd
dec
or
jbe
push
int3
pop
xchg
and
mov
sub
and
ljmp
mov
popf
fs
decl
pop
sarl
in
sub
mov
fisttpl
mov
cltd
mov
mov
rorb
repnz
xor
mov
ljmp
dec
jmp
jne
bound
jne
inc
inc
cmp
xchg
pop
xlat
sub
mov
mov
scas
lret
cmp
test
or
push
add
push
rol
pop
enter
pop
add
cmp
xlat
mov
aad
inc
sub
ljmp
loopne,pt
adc
sub
mov
sbb
fs
stos
aad
add
aaa
push
test
stos
xchg
pop
mov
mov
or
cmpsl
sbb
jmp
mov
jbe
jno
pop
push
mov
push
into
push
fwait
mov
fcmove
push
loope
cmp
bound
icebp
das
mov
add
pop
out
push
ljmp
and
icebp
orb
jle
cli
xorb
pop
push
add
jns
stc
sub
jb
xchg
xchg
jno
movsb
andb
jmp
xor
popa
or
sbb
fwait
fs
mov
mov
dec
ja
pusha
loope
int3
out
add
push
aas
movsl
cmp
dec
insl
enter
pop
add
cmpsb
cmp
mov
mov
push
mov
mov
in
adc
pop
inc
aad
push
nop
fistps
dec
out
or
jl
mov
mov
jno
sbb
jmp
out
or
fdivrl
add
mov
cld
in
std
sub
imulb
mov
lods
mov
fdivr
int3
mov
xor
dec
scas
cwtl
cmp
leave
loopne
jmp
ljmp
jg
pop
cmpsb
mov
push
push
pusha
fisubrl
mov
je
xchg
jmp
and
jl
sub
ficompl
mov
cld
subb
cwtl
cmpsl
hlt
dec
stos
and
jmp
subl
mov
ja
sbb
shrb
cmc
mov
loope
xor
adc
push
add
sahf
and
lret
dec
out
cmc
pop
pop
repz
jo
orb
xor
fsubs
js
add
dec
mov
mov
aas
outsb
or
xchg
xor
in
fisubs
mov
push
push
push
mov
mov
cmp
dec
fnsave
sbb
push
xchg
lret
addr16
in
inc
jns
stc
inc
imul
xchg
xor
mov
aad
in
ret
dec
scas
mov
cmpl
push
mov
div
nop
xor
xchg
sub
popf
pushf
xor
mov
jmp
push
mov
insl
cltd
int3
push
insl
push
add
cmp
xor
xchg
push
aas
dec
push
xchg
xlat
pop
push
enter
and
lahf
and
push
incl
mov
mov
mov
sub
jae
push
xor
loop
addps
movsl
in
add
inc
cmp
xchg
cwtl
cltd
outsl
test
jmp
mov
sarb
fnstcw
sub
pusha
jmp
jmp
lea
adc
adc
jo
test
push
call
dec
in
push
cmp
push
push
rcl
inc
lods
sti
mov
test
rorb
js
xor
fimull
ret
inc
mov
addr16
adc
cmp
daa
ss
cltd
cli
inc
add
xchg
in
roll
cmpb
inc
mov
hlt
fdivl
cmp
dec
in
cli
int3
sbb
dec
lcall
push
pop
lods
sbb
movsb
ffreep
out
sahf
and
dec
into
and
push
cmp
push
pushf
outsb
call
filds
lds
les
imul
ret
pop
push
cmp
mov
test
cmp
icebp
jne
into
stos
ror
fs
lds
imul
testl
sti
mov
ds
shlb
inc
pop
enter
frstor
cld
pop
xchg
sbbb
jl
xchg
xchg
xlat
mov
jb
dec
jno
testl
jmp
jb
jg
imul
xchg
enter
cmpsl
jle
lcall
xchg
sub
push
mov
mov
sub
cmp
mov
ret
cs
pop
pop
add
xchg
popa
jg
jl
jecxz
xchg
mov
rorl
jp
xchg
lret
dec
cli
bndstx
pop
repz
or
sub
inc
lret
mov
mov
xchg
shr
movsb
cltd
and
testl
jnp
outsl
insl
inc
cltd
pop
xchg
imul
loop
xor
test
gs
cltd
movsl
dec
pop
sub
add
jmp
cmp
jmp
mov
fstpt
sbb
and
iret
jmp
sbb
sub
mov
push
jbe
push
lods
xchg
push
cltd
xor
in
mov
arpl
inc
loopne
js
outsb
sub
sbb
mov
sub
popa
or
adc
sti
iret
fisttpll
ja
xchg
or
out
xlat
shrl
mov
xchg
dec
cs
xor
mov
xor
push
aam
enter
xchg
subl
mov
hlt
aas
or
pop
test
daa
dec
mov
in
stos
loope
push
mov
pop
daa
add
mov
iret
sbb
int3
les
mov
ret
dec
popa
adc
subb
mov
es
jmp
or
cmp
pop
gs
es
pop
pop
mov
sub
jl
lods
mov
xor
insb
push
sub
ficoml
pop
cli
in
add
ficoms
push
xor
xor
int
or
popf
adc
push
xor
sub
cltd
in
inc
dec
cli
push
ds
adc
popa
lods
mov
push
sub
fsubrl
insl
jg
pop
scas
stc
mov
inc
mov
setge
mov
jg
into
es
and
jp
push
lods
xchg
xor
mov
sub
clc
sub
int3
ss
loope
out
scas
inc
and
xchg
mov
mov
xchg
or
pop
imull
sbb
scas
mov
xchg
mov
or
ret
fwait
and
mov
loop
cld
rclb
push
or
bound
mov
insb
movsb
mov
cmpsl
lods
add
cmp
mov
cmp
stc
fdivr
or
and
dec
xorl
aad
adc
jecxz
popa
xor
mov
aas
mov
fs
pop
fistpll
mov
imul
or
pushl
in
addr16
mov
add
movsb
jge
enter
mov
clc
cmp
cmp
sbb
xchg
dec
pop
jmp
shll
mov
fwait
ret
mov
mov
icebp
jnp
sub
dec
cltd
mov
cli
aaa
into
sub
sub
jne
sbb
mov
loop
mov
je
dec
mov
stc
pop
xor
dec
push
testl
sub
orb
mov
jl
xor
movsl
push
ljmp
je
jo
call
or
lods
stos
xor
add
int3
pushf
adc
outsl
mov
pop
mov
lfs
mov
in
cmp
repnz
ret
outsb
mov
cld
xchg
outsb
sbb
dec
inc
mov
into
cmp
int
push
sub
pop
dec
fcoml
call
stos
jecxz
sbb
jb
mov
cmpsb
leave
adc
ret
xor
lahf
mov
push
and
xchg
repz
std
xchg
pop
sarl
add
pushf
xor
in
aas
orl
push
inc
in
out
sub
rcrl
rorb
and
push
daa
cmp
scas
test
shrb
test
dec
mov
jne
mov
aam
cs
cmpsl
dec
icebp
mov
movsb
fstps
repz
cmp
cwtl
pop
push
mov
dec
iret
push
jp
cmp
fcompl
nop
ss
loop
in
fnstcw
pop
mov
out
cmp
pop
adc
out
stos
into
and
repz
xchg
icebp
pop
hlt
sub
sahf
add
adc
xlat
jae
dec
stc
mov
nopl
lods
jg
jp
add
inc
push
into
jl
push
popa
pop
adc
popl
pop
repnz
out
mov
push
notb
mov
mov
push
shrb
mov
mov
cmpsl
jp
fisubrl
or
mov
pop
scas
xchg
je
mov
fwait
adc
mov
ret
or
clc
xchg
xor
in
popf
xor
sbb
lea
dec
push
push
in
out
mov
int3
jg
stos
inc
inc
mov
enter
pop
scas
repz
mov
push
adc
xchg
arpl
movb
cmp
lahf
jecxz
fldenv
or
jns
rcl
xchg
mov
shll
repz
and
roll
addb
push
call
cmp
fwait
ja
pop
inc
mov
pop
pop
sarl
cs
mov
xor
and
mov
movsl
push
addr16
push
shrl
sbb
sbb
mov
or
shl
cwtl
xchg
pop
cli
pop
sub
mov
and
mov
pop
enter
popa
andl
pop
sbb
popf
or
les
daa
mov
mov
mov
pop
mov
fdivrl
movsb
mov
ljmp
repz
pop
lock
stos
call
or
aam
sti
mov
bound
int
push
ret
lahf
mov
rol
pop
add
xchg
xchg
aad
stos
mov
cmp
sbb
jne
pop
negb
lcall
pop
inc
sub
sub
lret
sbb
std
mov
dec
mov
aam
jbe
push
aas
xchg
jg
out
out
inc
cwtl
add
sub
xor
roll
enter
xor
mov
pop
sub
in
adc
repz
mov
xchg
sub
pop
xor
ja
sbb
cltd
pop
cmp
sti
into
lds
aaa
or
xor
push
push
cmpl
outsb
mov
mov
inc
jg
or
movb
xorb
jae
jl
add
das
les
or
sarb
push
imul
icebp
mov
xchg
into
fiaddl
daa
and
rclb
jle
push
inc
filds
jl
xchg
add
mov
test
add
icebp
mov
popa
xchg
jmp
addl
int
fs
dec
out
cmpsl
call
int3
shll
outsb
adc
mov
iret
stos
cmp
frstor
add
sbb
xor
scas
pop
ds
les
cwtl
fmuls
popf
cmc
in
xchg
test
sub
lock
cmp
clc
add
push
div
xor
popf
sub
stos
and
lret
dec
sbb
mov
sub
push
mov
mov
in
daa
arpl
pop
dec
xchg
jb
dec
insl
aas
rol
mov
pop
push
popf
adc
jmp
dec
cmp
or
aaa
pop
jb
imul
push
jp
mov
stos
jb
cmpl
es
loope
cmovs
cmpsb
jns
push
je
push
mov
inc
adc
xchg
adc
lahf
stos
xor
icebp
ljmp
ret
or
bound
out
push
ljmp
jno
cmpsl
sbb
shl
addr16
pop
test
lods
cmpsb
dec
in
pop
pop
sub
insb
aam
cmp
leave
mov
push
lret
sbb
xor
sbb
mov
sbb
jb
inc
popa
mov
mov
adcl
in
loopne
or
das
inc
test
adc
or
mov
pop
or
test
scas
xor
or
lcall
cmpsb
int
push
movsl
insb
add
jne
or
jno
inc
cld
push
bound
gs
dec
adc
dec
scas
add
pop
addr16
push
fs
sub
arpl
js
xor
mov
fisubs
popa
push
push
jb
inc
ja
rclb
mov
in
cli
xchg
aam
cmp
push
cmc
sbb
push
add
fldcw
lahf
aaa
push
mov
mov
dec
filds
add
sbb
add
jns
ds
outsb
jns
cwtl
jle
popa
mov
push
inc
shr
clc
iret
lods
push
pop
push
pop
xor
mov
dec
push
adc
mov
xor
push
pop
xor
or
cmp
mov
sub
push
cld
out
es
jp
inc
shll
es
cmp
pop
sbb
push
push
insb
mov
dec
sbb
mov
inc
mov
test
sub
out
into
xchg
gs
cmp
pop
fwait
xlat
mov
mov
pop
xchg
daa
jo
pop
jg
xchg
scas
adc
icebp
add
out
cmp
clc
les
cmp
inc
pop
push
ss
test
mov
pop
push
mov
call
dec
sbb
leave
bound
scas
mov
inc
icebp
xor
scas
fists
xchg
stos
jmp
subb
pop
mov
iret
adc
je
fwait
call
mov
pop
sbb
jg
cmp
pop
cmp
or
add
dec
and
jl
imul
pushf
sbb
pop
inc
or
inc
movsl
pusha
ss
insl
std
or
push
lahf
sub
sbb
clc
mov
aas
cmp
xchg
pop
ljmp
jne
jg
int
adcb
inc
xor
bound
bnd
xor
cmp
je
fidivs
leave
add
and
fwait
popf
sub
sub
xchg
ss
or
pop
roll
xlat
addl
pop
mov
jl
data16
sub
mov
pop
loopne
xchg
mov
shlb
mov
int
inc
popa
mov
xrelease
stos
adc
andl
dec
sub
in
ret
lods
out
push
push
xlat
test
mov
cli
mull
test
pop
pop
sti
jl
pop
cli
pop
scas
shll
aas
shrl
mov
imul
shr
or
shrl
mov
mov
pop
sub
xchg
sub
sbb
and
add
scas
ds
cmp
inc
sarl
or
cmpsb
jne
je
out
ret
and
loopne
dec
ss
leave
fidivl
gs
push
push
fwait
int
ret
pop
mov
into
pop
inc
mov
ja
pusha
cmpsb
in
pop
loopne
and
or
std
loop
jmp
push
out
repz
mov
push
inc
fldt
into
in
or
mov
test
stc
inc
mov
cmp
loopne
add
pop
jnp
adc
or
fdivrp
push
out
pop
mov
lods
cmp
sbb
or
sbb
sbb
std
std
push
push
dec
dec
cmp
loop
clc
xchg
fs
mov
add
inc
cmp
add
push
push
test
adc
in
lret
lock
movsb
stc
mov
shll
inc
pop
ret
jecxz
sbb
subl
fcompl
lock
cltd
loope
je
in
sub
pop
dec
ret
sub
sbbb
negl
sub
dec
movsb
push
imulb
mov
out
stos
mov
fimuls
popf
jnp
int
xor
sbb
lea
or
push
push
add
sarl
push
idivb
pop
fwait
psrad
mov
and
mov
lcall
adc
jbe
jne
inc
mov
inc
and
movsl
nop
mov
imul
push
jle
dec
push
xor
mov
lock
cld
das
mov
movsb
int3
call
mov
push
das
mov
pushf
fnstsw
repnz
sub
dec
dec
rcrl
cmpsl
in
sbb
xor
hlt
jae
in
jns
loop
ret
jge
ss
mov
out
decb
sbb
hlt
dec
inc
mov
ljmp
flds
push
outsl
cwtl
ficoml
and
sti
test
cmp
rol
out
cld
ret
cmpsl
outsb
mov
and
jg
cmp
dec
out
popf
xchg
sub
pop
outsb
mov
sbb
cmpsb
cmp
fwait
andb
xor
in
rol
push
adc
insb
daa
jne
xchg
or
fnsave
rorb
push
cmp
pop
imulb
adc
dec
mov
cmp
xchg
fnstenv
jo
mov
dec
rcl
lock
inc
add
dec
dec
rorb
pop
icebp
lock
pop
lock
adc
arpl
cs
or
add
pop
jbe
push
mov
loop
add
outsb
fmull
cmc
stos
mov
xchg
mov
inc
loope
pushw
nop
cwtl
mov
sahf
movsb
mov
sbb
iret
call
mov
mov
adc
mov
addr16
cltd
cmc
aaa
mov
aad
jne
adc
push
sub
fs
fcompl
mov
lock
in
mov
xor
into
cmpsl
push
dec
mov
test
and
xchg
das
nop
imul
loop
dec
cltd
xor
insb
xchg
mov
xchg
jge
jl
imul
push
dec
pop
out
andb
fists
mov
roll
fdivr
cld
pop
shll
imul
jp
xchg
shrl
mov
data16
mov
gs
inc
push
dec
inc
call
adc
sub
lock
out
mov
dec
add
pop
mov
push
jmp
sbb
cld
push
test
and
and
xchg
dec
dec
add
adc
adc
cltd
cmp
or
movsb
push
jmp
mov
jnp
lods
jb
test
add
arpl
mov
jecxz
fsubrl
jmp
imul
dec
ret
push
push
outsb
cmp
repz
cwtl
inc
push
xchg
mov
shlb
jge
push
adc
cmpsb
cmp
shl
mov
jmp
mov
jl
or
xor
movsl
push
ret
xlat
cltd
mov
mov
out
add
movsb
and
xor
cmova
sbb
mov
mov
fstl
loopne
jecxz
rolb
jl
sbb
cmpsb
pop
call
xchg
lcall
cli
cmc
int3
frstor
sti
fwait
or
cmc
jbe
xorb
xchg
or
cmovge
cmp
fnstsw
xchg
jle
fs
inc
fisubs
and
mov
cld
xchg
out
inc
jne
dec
mov
mov
in
fmull
mov
add
fcompl
data16
sub
aam
add
insl
pop
hlt
pop
js
xchg
insl
loop
inc
rcll
dec
in
xchg
out
or
jo
int3
dec
loopne
mov
push
jmp
sbb
pop
push
lock
add
mov
mov
pusha
jbe
mov
fistpl
ds
lds
pop
lock
jmp
ret
cmpsb
jmp
cmpl
adc
out
mov
mov
pop
add
jo
or
jmp
fisttps
add
mov
or
jmp
pop
pop
test
sahf
xchg
xor
dec
mov
je
mov
rcr
and
repnz
cs
and
mov
leave
cmc
add
fiaddl
jno
mov
insl
adc
lret
imul
lea
shrl
fdivrl
inc
and
imul
test
andl
cmpsb
mov
pop
repnz
jl
xchg
inc
push
int3
push
les
sbb
cltd
and
lret
jnp
xlat
repz
aaa
inc
call
in
std
pop
pop
add
andl
mov
neg
scas
insb
dec
int3
xchg
mov
jmp
enter
movsl
and
pop
fisubrl
and
sbbl
andb
jle
jns
sti
sub
or
js
adc
inc
xchg
jmp
mov
outsl
mov
sub
push
shlb
inc
adc
lret
cmp
aam
test
pop
mov
mov
cmp
fwait
adc
lcall
inc
movsl
inc
xchg
mov
insl
mov
push
hlt
mov
inc
xor
sub
popa
add
jns
jge
or
shrb
sub
push
push
mov
mov
out
nop
aam
mov
dec
adc
pop
pop
shrl
sahf
mov
push
sbb
jne
popf
xor
and
xor
mov
jp
pop
jne
mov
loopne
xchg
sbb
loop
aas
imul
cld
clc
push
cli
xchg
inc
iret
fbstp
lds
push
fldt
fmul
cld
ljmp
dec
mov
inc
jge
jmp
cmc
test
xor
fld1
sbb
pop
and
push
push
aas
pushf
sbb
rol
pop
ret
daa
cwtl
mov
jl
jp
add
mov
cmp
in
repz
fs
xor
pop
jns
xchg
and
mov
lea
movsb
push
jmp
mov
iret
push
repnz
add
imul
xor
cmpsl
or
mov
pop
ldmxcsr
jns
jge
aaa
dec
dec
push
xor
bound
rclb
fstp
pop
add
push
pop
int
mov
jp
addb
xor
inc
repz
jecxz
lock
pop
xchg
xchg
mov
sub
js
fsubr
add
sbb
dec
sbb
push
lcall
mov
add
sub
je
int3
sub
scas
push
push
adc
push
shlb
xchg
cmpsl
dec
test
mov
mov
sarl
pop
js
dec
fists
or
mov
and
xor
inc
push
pop
push
stc
addr16
inc
scas
xor
xchg
pop
adc
cmpsl
out
cmp
xlat
jnp
pop
jbe
cs
idivb
test
mov
shr
cld
add
mov
movsl
jg
pusha
sbb
push
adc
adc
mov
jge
jl
cmp
pop
in
test
xchg
mov
fldenv
adc
pop
and
pop
pop
ret
mov
sbb
inc
sbb
add
lods
sub
fldt
pop
leave
pusha
mov
mov
push
mov
popf
xchg
call
mov
inc
jne
xor
pop
mov
aas
fistpl
mov
xchg
inc
xor
pop
push
push
lahf
xor
cmc
sahf
andb
sbb
ret
js
outsb
hlt
mov
push
inc
aas
push
stos
add
scas
jo
mov
pop
dec
test
lock
adc
push
mov
mov
or
jge
jge
push
mov
ss
mov
mov
int
out
jae
pop
enter
pop
adc
sbbl
in
fisubl
push
faddl
adc
jb
push
adc
add
push
add
in
jmp
movsb
jge
push
jno
or
ljmp
sbbl
inc
inc
mov
mov
mov
aas
les
inc
pop
cmpb
lods
daa
outsb
pop
sub
adc
dec
mov
and
fs
adc
scas
pop
push
sbb
in
ja
arpl
push
in
sub
jae
repz
stos
adc
jo
test
icebp
and
imul
js
jnp
xchg
mov
xchg
sub
mov
loope
sbb
sub
or
lret
nop
out
in
addb
int
jae
aad
dec
repz
cld
push
out
cmpsb
iret
adc
jecxz
ds
or
call
add
or
insb
jl
sub
nop
je
jmp
clc
cwtl
test
cmpsb
mov
sub
jo
dec
rcrb
ss
jp
lods
sbb
inc
das
dec
cld
jecxz
enter
cs
cmp
ret
test
inc
xor
lcall
subb
inc
mov
aaa
popf
jo
dec
cmc
popf
mov
add
icebp
mov
push
jno
sti
sbb
inc
out
sar
mov
mov
into
xlat
jae
mov
cli
xchg
ja
arpl
mov
cmpl
adc
mov
les
mov
pop
and
adc
sbb
das
les
jb
xchg
pop
mov
sbb
push
jge
fisttpl
incl
jbe
xchg
jbe,pn
fwait
cmpsb
ret
dec
into
mov
shrl
inc
jmp
mov
fld
pop
mov
sub
xor
arpl
inc
sahf
popl
mov
stos
popa
sub
loopne
xchg
mov
cmp
subb
pop
lds
pop
std
ret
and
jge
gs
pop
pop
xchg
bndldx
mov
movsb
aas
xchg
xlat
or
mov
sub
lea
push
jmp
adc
mov
lahf
testl
push
inc
pop
cmp
sub
mov
adc
icebp
inc
jbe
lock
inc
push
leave
in
cli
xchg
pop
jmp
das
aad
mov
test
movsl
movsl
lods
jnp
jo
aaa
jl
movsb
mov
daa
rcll
call
je
cmp
outsb
movsl
jbe
cmc
lds
sbb
fldenv
in
xor
xchg
mov
mov
or
mov
or
mov
ret
aad
push
aas
repz
stc
mov
sbb
icebp
adc
repnz
adc
in
in
jns
cltd
xor
sbb
mov
imul
lods
in
mov
call
sub
pop
je
pop
or
in
andl
push
imul
fsubrl
jecxz
test
mov
in
fwait
stos
add
or
lcall
add
in
in
lret
fnstcw
or
jle
jbe
stc
lea
pop
mov
into
out
outsl
int3
push
imul
xchg
push
ja
les
pop
lods
xchg
fxch
ds
repnz
sub
and
xchg
jecxz
sub
mov
and
adc
movsl
mov
lret
fsub
int
or
or
lods
mov
in
mov
jo
inc
sbb
jecxz
sahf
std
aaa
mov
xchg
aas
mov
sbb
fnstenv
xor
mov
je
repnz
mov
sub
mov
pop
cltd
out
or
mov
insb
mov
inc
jnp
mov
ror
add
in
mov
push
ret
jge
into
pusha
mov
or
cmp
sub
and
mov
lds
jg
insb
xchg
xchg
mov
lahf
push
dec
or
adc
push
rcrl
cld
fcmovne
cmpsl
ja
shl
pop
xchg
fidivrl
push
add
xchg
jae
pop
scas
arpl
xchg
lret
xor
fs
lock
loop
jns
ja
icebp
lcall
cltd
jle
mov
mov
fisubrl
out
inc
lahf
aad
pop
outsl
cmp
xchg
inc
iret
mov
adc
and
dec
test
mov
add
out
pop
fcoms
adc
cmp
mov
sub
pop
add
jp
mov
scas
mov
push
push
jmp
lods
sub
stos
popf
adc
decl
jnp
inc
aaa
cli
adc
test
cmp
mov
or
xchg
push
adc
lds
in
ds
inc
insl
pop
scas
int
outsl
jp
loope
ss
call
jmp
jnp
out
and
xlat
pushl
xor
sbb
pop
mov
jbe
xchg
push
mov
jns
inc
xchg
xor
lret
and
pusha
fwait
inc
out
push
adc
lret
jne
fs
arpl
xchg
dec
stc
push
cmc
movsl
pop
das
push
aas
dec
xor
pop
pusha
and
mov
nop
push
pusha
orb
cltd
or
nop
dec
xchg
mov
xchg
mov
mov
loope
push
or
or
out
cmp
clc
jecxz
and
mov
in
add
stos
lds
jo
lea
or
cs
pop
flds
in
jb
imul
cmpsl
mov
clc
into
imul
and
decb
das
add
jno
cmp
ljmp
inc
in
popa
adc
mov
repz
dec
mov
xchg
add
mov
lret
and
in
inc
dec
pop
xchg
cltd
xor
mov
mov
es
xchg
idiv
xor
icebp
mov
cmpsb
mov
rclb
cmp
push
add
xrelease
xorl
test
jae
cwtl
test
pop
pop
idivb
test
ret
xchg
inc
jecxz
push
xchg
fcmovu
jmp
or
inc
in
cmp
jns
shr
jge
add
sbb
fmuls
loope
fnstsw
push
push
std
sbbw
or
mov
lcall
lret
or
cmpsl
inc
mov
adc
and
imul
adc
loop
test
loope
xor
fldl
jns
xchg
pusha
lds
push
mov
dec
jecxz
subb
xchg
adc
cmp
cmpsl
insb
aad
leave
dec
add
push
jb
xor
push
mov
push
sbb
add
or
int3
or
and
repz
mov
xchg
cmp
mov
fucom
outsb
xchg
push
dec
mov
mov
sbb
push
add
out
add
pop
mov
fiadds
add
lret
mov
sub
dec
ret
stc
push
jae
dec
add
pop
inc
ljmp
mov
push
out
pusha
outsl
sbb
lock
add
out
dec
in
adc
aam
cmpsb
cmc
into
push
add
idivl
xchg
jbe
icebp
rdtsc
pusha
movsb
inc
cmp
shrl
mov
out
nop
xor
push
pop
mov
daa
inc
xor
adc
out
ret
adc
aaa
dec
pop
pop
pusha
or
inc
cwtl
inc
arpl
fldl
push
fld1
ljmp
mov
add
adc
push
push
xor
push
push
jo
pop
fisttpl
out
jp
mov
stos
pop
hlt
fcmovnbe
xchg
adc
cmp
xchg
outsb
and
out
cli
and
in
fbld
lea
xchg
call
mov
push
in
jmp
test
cwtl
pop
push
stos
add
test
insb
mov
arpl
inc
mov
lea
cmp
add
out
mov
jae
mov
enter
dec
jmp
cmp
or
outsl
pop
dec
nop
out
cli
cltd
daa
and
mov
int3
aam
pop
cmp
pop
in
mov
push
movsl
cmp
movsl
out
or
dec
je
mov
jle
mov
and
add
push
ficompl
lcall
push
cmc
cmp
cltd
fcompl
pop
ficoms
jp
and
push
jo
dec
mov
jg
sbb
or
jl
xor
and
and
test
mov
mov
not
lret
xor
outsb
inc
lret
fisubl
rcll
dec
add
lret
arpl
jmp
je
lock
stos
xor
or
sti
shrb
int3
loopne
jge
add
adc
pop
nop
xor
xchg
xchg
test
dec
pop
mov
shrl
movb
add
adc
inc
inc
mov
ljmp
and
test
andb
sbb
lcall
push
je
fldt
adc
fs
jb
xchg
xchg
mov
xor
dec
push
add
cli
inc
imul
sti
sbb
outsl
adcl
nop
sbb
cli
jns
sbb
cltd
lcall
cli
xor
and
and
jle
inc
mov
es
ficoml
roll
or
je
ja
sub
fistpl
fcmovb
jae
pop
movsl
jecxz
je
lret
cld
lods
dec
fildl
hlt
sub
pop
mov
jne
nop
inc
dec
in
dec
or
push
das
imul
cwtl
xor
shrl
in
mov
ja
push
subl
orb
mov
mov
out
ret
jae
mov
and
adc
mov
jg
fs
sbb
lret
pop
xchg
les
fistpl
andb
jno
aaa
mov
add
mov
cmp
and
add
mov
call
xchg
dec
jecxz
lods
lcall
scas
ljmp
decb
aas
shlb
inc
add
mov
push
jbe
test
xchg
lds
sbb
cmc
pushf
inc
sub
loopne
xor
jmp
jb
icebp
mov
lret
divl
sub
dec
sub
divl
rol
mov
in
icebp
stos
pop
mov
stos
pop
cld
push
insl
int3
lahf
adc
sub
lcall
sbb
dec
in
stc
popa
add
daa
insb
sub
adc
mov
push
adc
xchg
icebp
in
lods
mov
cmp
and
adc
adc
inc
pop
pop
jb
ds
mov
scas
aaa
into
ljmp
push
mov
adc
rcr
xchg
int3
mov
ficoms
jp
lcall
jg
push
push
push
fidivl
into
jne
std
xor
add
and
push
retw
or
mov
ret
loopne
jb
sub
mov
mov
popf
jle
adc
mov
xchg
push
imul
push
pop
add
jae
movsl
in
int3
popl
dec
dec
pop
inc
test
push
frstpm(287
pop
pop
ss
sbb
gs
nop
daa
mov
rol
lret
sub
pop
insb
jp
xchg
cmp
xlat
outsb
push
movsb
push
pusha
sarl
cmp
loop
dec
in
outsl
gs
hlt
cltd
test
push
and
mov
pushf
scas
ss
orb
sbb
aas
movsb
scas
mov
sbb
mov
test
pop
or
pop
inc
mov
fsubrl
and
lock
adc
aaa
jb
jp
add
cli
int3
mov
dec
int3
sbb
call
or
sbb
mov
cmp
mov
insl
rcll
rcrb
aas
push
out
es
loop
inc
fnsave
inc
mov
cmp
dec
xor
push
fwait
dec
pop
int
mov
sbb
fdivrs
test
mov
dec
jge
and
mov
test
je
push
add
inc
xchg
and
inc
pop
test
push
push
cmpsb
jno
das
cmpl
mov
cmp
adc
push
jo
mov
ret
jl
pop
jmp
cwtl
pop
pop
jp
push
pushf
xor
clc
inc
mov
cmp
dec
xchg
push
les
mulb
inc
repnz
stos
push
jne
push
or
loope
pop
sub
ljmp
imul
shll
and
mov
cmp
pop
ficoms
inc
es
xlat
stos
push
jmp
cli
cmpsl
jo
imul
out
xor
xor
adc
xor
xlat
and
mov
pop
jl
fmull
lahf
int
sbb
sbb
dec
sub
outsb
adc
xchg
mov
testb
xor
or
aad
xchg
daa
push
jmp
loop
jmp
aam
and
jae
mov
push
mov
int
loopne
nop
jl
ret
add
mul
leave
ret
fcompl
imul
clc
cmp
mov
imul
rclb
enter
jecxz
stos
loop
adc
addr16
bound
mov
orl
mov
sub
aad
pop
bound
dec
pop
lock
ja
popf
lods
xchg
add
jg
mov
test
lcall
xor
sbbb
bound
mov
adc
mov
xlat
sbb
cs
out
call
fldl
loop
adc
test
data16
mov
sbbl
shlb
repz
sbb
je
rorl
out
mov
loop
dec
test
mov
das
arpl
jecxz
xchg
cwtl
xchg
push
fucomp
jge
ror
divb
jl
push
in
xorl
jnp
jbe
or
mov
sahf
dec
mov
fucomip
or
pop
icebp
popa
aas
fnstenv
xchg
test
mov
aas
adc
dec
fistpl
jl
jmp
aaa
inc
loop
push
test
fcoms
faddl
stc
mov
pop
data16
js
adc
pop
lods
pop
adc
aas
dec
aad
ss
mov
sti
dec
push
ss
or
push
sbb
push
stos
pop
mov
fmulp
and
mov
or
js
cmp
ds
popa
mov
js
int
test
shlb
xchg
loope
and
mov
push
shll
fldt
es
mov
les
cmp
jns
negl
fsts
xor
rolb
pop
cmc
pop
pop
jg
adc
stc
lds
lcall
lea
gs
jnp
xlat
inc
in
adc
mov
mov
fsubrs
stos
pop
mov
out
fnstenv
pop
std
enter
rcrb
subb
fsubr
rol
jg
scas
lock
cmpsl
inc
mov
movsw
cmp
mov
mov
xchg
jns
add
mov
lods
or
dec
cmp
sub
movsl
test
pushf
incl
add
mov
xor
loopne
xlat
mov
pop
jp
aad
clc
pusha
subb
dec
loope
mov
mov
lods
into
loope
clc
push
testb
icebp
inc
loop
inc
or
xor
lods
in
and
arpl
lret
adc
cld
add
test
gs
mov
and
xor
lret
icebp
inc
std
shl
mov
iret
es
adc
xchg
mov
jne
lds
xchg
test
jb
xchg
out
adc
sub
mov
test
inc
or
add
repnz
out
inc
mov
or
mov
sub
int
out
cltd
xchg
add
jecxz
pop
leave
div
adc
ds
dec
mov
add
pusha
subl
outsb
std
xchg
inc
daa
cmp
cwtl
stos
push
ss
loopne
out
loope
js
orb
je
or
movsb
test
xor
pop
ret
xor
data16
add
push
je
dec
dec
fistpl
push
jb
adc
ret
mov
js
cs
sar
cmp
xlat
and
fstl
cmp
in
jecxz
push
in
test
jl
pop
inc
jmp
mov
inc
mov
push
sbb
outsb
push
xlat
stos
icebp
out
add
ret
sub
std
test
faddl
sti
add
gs
sub
jle
shlb
sub
addr16
dec
lods
inc
jge
data16
lret
iret
cmp
das
mov
dec
ss
mov
loope
mov
jbe
add
or
repnz
cs
mov
sub
mov
nop
push
xchg
outsb
mov
xor
shll
jae
aas
loopne
push
ds
xchg
push
andl
or
loope
push
jae
dec
jo
cmp
fists
adc
stc
imul
push
inc
mov
push
rcrl
out
test
fucomi
dec
jg
or
shlb
pop
icebp
and
into
add
xor
insb
xor
stos
clc
mov
in
cwtd
push
fidivs
scas
mov
xchg
pushf
push
mov
ret
cmp
sub
jne
cmp
xchg
mov
pusha
cmp
insl
mov
push
inc
mov
mov
int
pop
xor
jns
in
fadds
add
xchg
mov
loopne
mov
jbe
in
pop
out
jl
lods
or
mov
inc
lods
mov
add
xor
sbb
xchg
push
pop
dec
enter
hlt
inc
cmp
mov
mov
lret
push
mov
lret
inc
mov
mov
xor
loope
mov
out
and
shll
shlb
loope
inc
pop
xor
adc
pinsrw
mov
cmp
push
or
sub
add
adc
push
mov
inc
call
jecxz
jecxz
stos
inc
cli
or
decb
scas
enter
adc
sbb
fadd
std
and
cld
shl
cmpsl
notl
adc
js
pop
mov
mov
push
mov
xchg
xchg
sbb
je
lds
fwait
test
inc
inc
test
jnp
test
pop
pop
mov
push
rorl
clc
adc
jge
xor
mov
jge
cli
scas
add
lea
stos
adc
in
sti
pop
mov
inc
sbb
ds
xchg
dec
enter
test
iret
daa
dec
fwait
cmp
scas
in
pop
test
lahf
jns
xor
inc
dec
loopne
insb
cmc
clc
adc
push
pop
or
lds
fists
lods
pop
je
jle
jb
push
mov
mov
daa
mov
xor
or
adc
cli
and
mov
lahf
mov
arpl
jne
cs
mov
lret
jnp
je
das
daa
mov
push
xchg
pop
or
xchg
cmp
pop
dec
jecxz
cmp
hlt
into
lcall
cmc
push
xchg
cmp
lcall
popa
iret
jne
mov
xor
sti
iret
shll
outsb
jge
cmp
ret
inc
mov
loopne
pop
loopne
int
ficoms
mov
jg
pop
dec
loopne
mov
sarb
xchg
mov
cld
in
daa
fucompp
fldl
inc
fdivs
in
fdivrl
adc
loop
fsubs
repz
cld
mov
jg
popa
test
pop
out
lock
mov
sub
mov
sbbb
pop
xorb
pusha
stos
sbb
imul
repz
test
dec
jnp
and
lret
xor
sti
cmp
push
insl
push
repnz
push
ljmp
pusha
pop
and
jle
adc
fmull
xchg
lcall
in
inc
xchg
js,pn
ret
inc
inc
dec
sub
dec
lret
enter
sbb
inc
jns,pn
mov
jns
cwtl
cmp
xchg
pop
inc
movsl
lret
sbbb
dec
pop
push
pop
inc
pop
into
jnp
cmp
stc
push
sub
or
and
test
and
cmp
aam
mov
inc
insl
push
dec
pusha
mov
dec
xchg
ljmp
or
das
bnd
and
aaa
push
and
je
movsb
jae
inc
fnsave
icebp
test
out
test
test
or
icebp
push
andl
push
cmpsb
inc
fmull
into
aas
push
inc
stos
push
jecxz,pn
fistl
adc
fxch
popa
enter
stc
jecxz
fs
cmp
dec
adc
jecxz
xor
aam
jno
xchg
roll
xor
in
hlt
ficoms
push
aad
insb
sbb
aad
inc
push
out
and
mov
aas
mov
sbb
xchg
push
push
lahf
cmp
xor
popf
push
test
pop
inc
and
loop
dec
pusha
inc
mov
repnz
push
jecxz
cmp
sub
lea
sbbl
out
lahf
mov
lea
inc
leave
dec
jmp
repnz
adcb
sbb
jo
fxam
pop
ds
adc
addr16
dec
add
jae
inc
roll
mov
mov
popl
addr16
xchg
add
shrl
xchg
mov
adc
push
and
push
dec
mov
ja
lret
xlat
push
and
pop
movsl
xor
rcll
sbb
jno
mov
fistpl
stc
cmp
sub
pop
dec
addr16
mov
dec
jmp
mov
xor
data16
push
fisubl
or
add
imul
ret
popa
rclb
outsb
xchg
fbstp
xchg
in
aaa
test
in
xorb
mov
outsb
or
hlt
push
push
movsl
lds
movsl
ror
mov
mov
xchg
addb
ret
adc
leave
jmp
push
sub
push
jmp
int3
data16
aam
rcrl
mov
mov
sub
push
mov
jne
repz
pop
mov
inc
fidivl
add
xor
aam
insb
lret
push
jmp
mov
fmull
loopne
pushl
cmp
imul
xor
in
push
call
imul
jno
mov
clc
sahf
mov
pop
inc
add
testb
or
mov
xor
xor
in
scas
push
push
pop
cmp
in
aaa
mov
out
or
jp
add
xchg
gs
rorb
add
xor
nop
call
mov
shll
cltd
cmpsl
out
xor
outsl
incb
jge
pop
jae
out
mov
arpl
pop
xor
test
shlb
sbb
loop
jo
mov
arpl
sub
mov
test
nop
mov
inc
gs
out
push
rorb
lods
dec
loopne
mov
mov
jno
push
mov
insb
xor
pushf
mov
sub
lods
mov
ret
sub
andl
shrl
sub
dec
push
cmp
dec
rolb
rorb
and
pop
cmp
shl
gs
mov
add
fidivs
push
dec
shlb
lret
arpl
addr16
push
ds
sub
sbb
adc
jne
pushf
testl
and
test
add
add
xchg
outsb
insl
pop
iret
leave
pusha
add
push
nop
xchg
inc
loop
and
dec
filds
rcrl
sub
lds
mov
in
adcl
dec
push
xlat
sub
fs
push
pop
mov
inc
xor
or
xlat
fwait
fs
in
xrelease
ljmp
pop
loop
pop
out
sub
mov
ffreep
sub
out
jecxz
dec
mov
inc
fmulp
arpl
repz
loop
das
dec
test
arpl
loop
push
xchg
push
out
cmpsb
loop
nop
outsb
mov
pop
mov
pop
jne
pop
mov
loopne
stc
daa
sub
inc
jl
mov
pop
mov
into
outsl
jo
enter
xor
xchg
scas
mov
sub
bound
in
and
add
jmp
mov
fsubrl
mov
jo
ficomps
outsl
mov
movsl
mov
fdivl
push
inc
xlat
ja
jp
insl
cltd
movsb
ds
dec
scas
push
jnp
jns
xor
insl
xchg
dec
out
jg
push
mov
jp
dec
scas
insl
xchg
adc
mov
shr
jg
mov
mov
shll
sbb
je
push
mov
rcrl
pop
icebp
hlt
cmp
lods
inc
rcrb
cmpsl
cmp
jle
leave
mov
sbb
xchg
repz
pop
mov
shl
ret
repz
jl
add
cmc
push
adc
imul
jne
jmp
dec
push
enter
cmp
arpl
jae
jecxz
mov
cmp
fldln2
aam
idivb
pop
mov
repnz
insb
xchg
inc
fdivrl
pop
and
push
push
or
and
mov
pop
dec
fidivs
hlt
jb
cltd
insb
lcall
cmpsb
fcmovu
stos
inc
mov
imul
push
sub
loope
insb
or
cmpsl
aam
lret
es
sub
movsb
outsl
aaa
je
add
push
lcall
out
xchg
mov
aas
cmc
cmpxchg
ds
outsb
loope
fsts
sbb
lret
cmp
xor
pop
add
jmp
je
nop
imul
pop
int
gs
scas
sbb
lods
inc
cwtl
sub
mov
mov
xor
mov
out
inc
mov
inc
mov
or
mov
lahf
or
mov
daa
mov
ds
cmp
xlat
pop
in
rolb
ljmp
push
inc
jae
enter
dec
fbld
pushf
lea
cmp
dec
cltd
stos
out
mov
shll
js
stc
negl
jmp
adcl
scas
enter
loope
fistpl
inc
ficoml
mov
sbb
mul
js
sbb
dec
incl
push
xlat
or
push
je
js
adc
or
xor
push
mov
dec
xor
scas
mov
jb
dec
sub
push
bnd
sub
test
lods
or
imul
adc
loope
shr
sarb
adc
add
fsubr
outsl
imul
inc
sub
lret
repnz
pop
mov
pop
jae
xchg
xchg
icebp
jp
frstor
setl
gs
je
xchg
sub
dec
into
mov
add
cmp
rol
repz
xchg
aas
clc
movsl
cmp
sbb
loope
imul
cmp
call
clc
ds
lock
cmp
sub
dec
loopne
idivb
aad
hlt
cmpsb
cmp
adc
dec
loopne
push
aas
mov
jg
dec
mov
dec
loopne
outsl
ds
add
inc
shl
inc
dec
inc
shl
loope
pop
push
aas
mov
pushf
daa
iret
es
inc
fisubl
popa
adc
adc
sbb
es
movsw
js
sbb
jecxz
xlat
repnz
stos
lods
mov
inc
push
and
out
mov
inc
pusha
ret
jl
int
ja
insb
mov
andl
dec
cs
out
jp
test
mov
dec
mov
pop
imul
mov
or
js
test
mov
push
adc
or
daa
dec
and
clc
xor
xor
in
leavew
xchg
add
ffreep
push
inc
add
or
lods
or
cmp
xor
and
mov
xchg
cmpsl
push
inc
xchg
adcb
fldcw
adc
xchg
mov
lret
xor
stos
mov
pop
enter
add
idivl
fs
in
mov
mov
sub
inc
stos
xchg
cltd
fnsave
sub
dec
out
jb
jo
loope
test
repnz
mov
popa
lods
test
xchg
shlb
jl
int3
scas
scas
adc
ss
jae
add
add
lcall
push
into
sub
stc
xchg
shr
aas
repz
sbbl
adc
xchg
dec
in
mov
mov
dec
add
inc
sub
loope,pt
loopne,pt
cmp
sub
je
popa
sahf
adc
dec
iret
movsl
sbb
mov
repnz
adc
pop
fst
pop
sub
mov
xor
adc
push
pop
popf
mov
xchg
cmpsb
insb
xchg
in
dec
sbb
push
mov
fistpll
arpl
dec
sahf
cli
out
push
pop
add
out
pop
cmp
lret
jg
rep
dec
cltd
das
mov
push
inc
mov
lahf
adc
lods
and
sbb
cld
pop
xor
xor
loopne
std
aam
cmp
aas
data16
jae
test
fcmovnb
jne
dec
jno
pop
sub
adc
sub
mov
fsub
jo
sbb
sarl
dec
scas
out
dec
shll
jns
xchg
je
int3
xchg
out
and
out
inc
out
les
lods
add
xlat
ljmp
or
cmpl
cwtl
xchg
cli
in
cmpsl
les
add
pop
fisttps
xchg
test
cmp
leave
xchg
jmp
jl
or
cmp
push
fdivs
dec
lcall
cltd
pop
mov
push
mov
xlat
movsl
fs
inc
mov
and
sub
incl
xorl
or
push
dec
fsubs
jno
jp
fidivrl
or
xor
in
add
push
cmp
in
sahf
mov
ds
lea
fisubrs
mov
push
or
nop
add
xchg
dec
jae
jecxz
push
jb
jmp
cltd
dec
mov
xor
popa
in
xchg
mov
cmp
jns
iret
sbb
and
push
dec
call
mov
jo
dec
sub
subb
adc
imul
call
mov
push
insb
sbb
sub
cmp
sbb
and
mov
and
add
sub
jne
or
in
or
mov
test
mov
jne
or
jp
rorl
aad
sahf
roll
sbb
mov
clc
mov
xchg
in
mov
daa
mov
sbb
lds
test
cmp
mov
mov
mov
fistps
scas
popf
and
das
cmp
cltd
test
movsl
dec
jb
js
outsb
add
or
data16
mov
xor
fnstenv
adc
int3
dec
std
and
mov
sarb
popf
push
dec
std
call
test
jo
ljmp
mov
pop
jp
mov
fsubr
mov
jmp
fwait
xor
filds
lret
cmp
lds
mov
int
pushl
inc
incl
movb
or
xchg
shr
jg
xor
insl
in
lea
int3
outsb
aas
sbb
ret
xlat
pop
mov
xchg
push
xchg
sub
movsl
cmp
pusha
ss
xor
push
mov
cmp
mov
push
in
addps
sbb
aas
ret
pusha
cmpsl
cmp
into
cltd
mov
jmp
gs
inc
push
mov
sbbl
push
mov
cmp
cmc
test
or
mov
cmpsb
pop
popf
fdivrs
test
shrl
in
jb
sbb
inc
std
sub
in
xor
insb
mull
and
lcall
les
mov
sbb
inc
adc
sbb
sub
dec
push
roll
and
inc
or
ds
mov
cmpsb
dec
loop
imul
xor
cli
add
movsl
sbb
sti
push
inc
push
fildl
cs
jmp
out
sub
sub
rcl
cmp
inc
add
popa
inc
enter
es
push
or
ret
bound
jg
scas
int
mov
mov
lret
inc
mov
jl
lock
fwait
xor
sbb
andb
pop
outsl
push
nop
shl
sbb
dec
mov
rcrl
xchg
outsb
ret
jl
lahf
sub
jb
cmp
mov
pop
dec
adc
jp
gs
adc
jl
dec
jmp
sbb
lcall
repnz
jmp
jg
sbb
push
shl
fsubs
add
dec
sub
jecxz
mov
xchg
mov
jo
xchg
and
pop
mov
nop
ss
test
mov
rcll
jmp
xchg
pop
and
sbb
push
rcrl
mov
test
scas
add
ds
setns
xorl
sbb
rorl
rcl
ja
fistpll
ljmp
fdivrs
inc
pop
push
shll
js
movsb
jecxz
jns
mov
fsubl
mov
enter
or
dec
nop
insb
mull
push
lahf
dec
pop
xor
mov
push
mov
jmp
out
push
repz
xchg
lods
adc
int
pop
mov
cmp
int
jl
jns
jl
ljmp
jb
fwait
dec
sub
jo
icebp
xchg
adc
into
movsl
jnp
sahf
push
mov
test
sub
outsb
adc
push
call
sbbb
pop
das
stc
add
mov
test
cmp
pop
jp
lcall
and
xorl
clc
xor
xchg
js
sub
lcall
dec
sub
data16
push
aas
xchg
xchg
pop
fnstenv
lret
mov
cltd
jns
jg
add
and
aad
rcr
das
shrl
leave
loope
dec
jecxz
inc
ret
mov
xor
mov
clc
test
test
enter
pop
mov
das
ds
loope
mov
daa
enter
adc
mov
rcll
rcl
pop
jg
xchg
jbe
lret
xchg
push
out
ja
add
adc
push
jae
sbb
cli
cwtl
pusha
popf
adc
movsl
mov
scas
adc
xchg
ret
subb
nop
push
mov
jg
ficomps
bound
je
lahf
imul
xchg
jmp
mov
sti
std
aad
mov
lret
xchg
inc
fadd
ljmp
push
add
push
adc
jecxz
dec
pop
jl
es
mov
movsl
hlt
pop
mov
sbb
mov
mov
push
dec
mov
mov
arpl
mov
fstl
push
into
lret
ss
inc
mov
cmp
xor
pop
cld
stc
inc
out
fstpl
in
test
ss
inc
adc
xchg
jb
add
hlt
xchg
enter
mov
cli
xchg
repnz
inc
jbe
outsb
push
and
rorb
stc
repz
or
xor
call
popf
mov
stos
cli
ss
ret
push
add
push
lcall
ret
scas
std
mov
mov
orl
fistl
test
fstps
popf
mov
mov
das
movb
pushf
jg
loop
pop
js
cli
xchg
dec
cltd
fbstp
jne
inc
scas
xchg
fdivs
add
jecxz
pop
and
add
pop
popf
sbb
imul
push
in
dec
out
cmp
or
push
hlt
inc
lret
int3
or
rclb
fbld
hlt
les
inc
or
jo
andl
or
inc
mov
mov
or
jge
or
scas
push
pop
jmp
dec
push
inc
xchg
xchg
cmp
sub
arpl
data16
inc
push
lret
mov
arpl
test
jo
hlt
mov
lcall
push
ljmp
inc
aaa
or
cmp
int3
pop
jo
aad
push
or
adc
aam
fsubs
subl
jnp
lock
mov
popa
loope
cmp
icebp
xlat
mov
cmp
push
fwait
xchg
cli
cltd
jno
pop
fnstenv
mov
repz
jl
cmp
pop
mov
lcall
mov
bound
pop
outsb
jp
or
cmp
dec
sub
test
dec
mov
fs
push
mov
xor
pop
aaa
add
jbe
cmp
js
iret
test
push
notb
std
bound
sbb
add
mov
mov
cwtl
and
lahf
stc
dec
ficomps
or
fwait
std
mov
mov
xor
jp
adc
dec
sbb
js
sub
cmpsl
xor
add
dec
dec
test
inc
pop
push
adcb
and
push
sub
xchg
mov
or
aam
sub
pop
movsl
mov
sbb
aad
fistpll
pop
push
lret
adc
sub
pushl
int3
jb
cld
xchg
push
mov
lea
iret
xor
push
or
push
fimuls
and
push
rclb
outsl
mov
or
insl
push
mov
clc
addr16
lds
cld
clc
and
out
lret
nop
mov
dec
rep
mov
iretw
xor
jo
inc
and
aad
rorl
push
std
cmpsl
xchg
out
pushf
push
and
push
inc
mov
pop
xor
in
jae
jmp
adc
xor
aas
addb
mov
mov
mov
jp
pop
pop
lock
add
dec
or
add
test
ret
loope
xor
sbb
cli
push
lds
xchg
insl
jge
cmp
sub
jp
in
std
imul
popf
lahf
xor
insl
pop
add
loope
mov
dec
or
fistpll
or
movsl
cmc
in
jl
push
pop
lock
mov
fbstp
mov
aas
xor
shr
adc
push
mov
xor
cmp
push
rcrb
js
xchg
stos
xchg
push
daa
loope
scas
adc
scas
out
sbb
mov
rcrb
cmpsl
mov
out
repz
daa
cwtl
test
push
out
jae
sub
pop
push
and
test
mov
inc
sub
arpl
iret
sub
jl
mov
in
xor
add
insl
pop
test
mov
cmp
into
gs
mov
std
into
mov
mov
push
hlt
notb
adc
or
pop
insl
inc
dec
stc
mov
jno
dec
add
jp
divl
ja
inc
lods
jmp
xor
adc
test
push
mov
adc
mov
ds
es
aaa
mov
sbb
sbb
aaa
leave
mov
cmp
ret
xor
push
mov
out
mov
jbe
cltd
pop
in
mov
jl
outsl
lock
pop
fs
push
mov
push
inc
nop
inc
mov
mov
outsl
sbb
push
jl
push
mov
movsb
jecxz
fstps
sbb
enter
mov
ret
mov
jmp
fs
fs
call
push
rorl
pop
dec
pop
out
ss
push
sbb
push
scas
nop
xor
neg
mov
dec
push
pushf
push
add
dec
adc
mov
shr
mov
mov
push
psllw
lret
andl
roll
xor
mov
pop
cmp
out
mov
jnp
pop
stc
sti
daa
rcl
xor
pop
cli
and
mov
ret
leave
shrb
clc
stos
std
out
ret
pop
adc
test
loop
rorl
imul
movb
imul
inc
xchg
xchg
xor
nop
xchg
cmp
pushf
loope
mov
lods
push
rcrl
cs
jns
cmpsl
xor
xor
out
fbstp
jle
iret
push
xor
ss
fdiv
paddd
in
fnstcw
cmp
sub
into
xor
push
inc
popa
clc
or
es
mov
sarb
sbb
test
cmc
mov
test
in
xchg
xor
icebp
bound
cmp
aas
inc
shr
addps
ss
addr16
mov
rol
sbb
xchg
sbb
mov
inc
mov
cmp
int
out
mov
les
push
sbb
popf
dec
loop
pushl
lcall
shll
sbb
cmp
mov
lcall
and
ljmp
rcll
ror
mov
jl
ds
mov
mov
ret
jp
sarl
adc
dec
pusha
cmp
xor
mov
adc
xor
inc
push
jecxz
xor
add
repz
xlat
pop
pop
mov
and
jp
add
aaa
scas
jmp
imul
ss
adc
sub
repz
cmp
sub
sub
mov
icebp
lock
and
fldcw
je
lds
out
mov
xor
into
fmul
out
xor
pop
lret
in
mov
lock
movsb
sub
call
xor
mov
jnp
inc
je
cmp
or
push
movsl
cltd
pop
enter
mov
shrb
mov
ja
int
ds
insb
movsb
popf
ja
pushf
and
jmp
stc
loopne
pop
mov
mov
mov
mov
sbb
add
lock
xchg
add
ret
int
outsb
in
cmpsl
call
push
bndstx
out
ja
jo
dec
fsubrs
fdivs
rorl
clc
adc
xchg
int3
mov
int
sub
iret
push
xchg
cltd
cld
sbb
jo
dec
in
xlat
cwtl
pop
aaa
xchg
fs
push
mov
adc
jmp
push
out
mov
sub
xchg
movsl
ret
dec
fnstcw
cmpsl
jp
and
and
addr16
mov
pop
test
xlat
pop
inc
inc
cmp
call
mov
pop
xchg
ret
push
adc
lahf
es
nop
jno
aam
xchg
scas
ja
sbb
jns
xor
addr16
adc
jbe
mov
aad
dec
or
test
and
mov
out
xor
sbb
jbe
inc
popa
data16
arpl
pop
mov
sub
or
hlt
add
outsl
sub
or
jo
lods
inc
scas
adc
bound
add
repnz
mov
inc
or
into
sti
cmc
wrmsr
and
xchg
dec
bound
mov
shl
push
loopne
inc
negl
aam
pop
iret
bound
or
xchg
pop
pusha
les
sbb
ss
push
or
mov
ret
or
rcrl
pop
adc
xchg
pop
pop
xor
sti
ret
mov
rcll
lret
scas
mov
dec
add
jl
pop
fisubs
adcl
ret
leave
mov
lock
cmp
lea
movsb
stc
fcompl
fstps
mov
out
aad
cld
das
and
rcrb
shlb
sub
sbb
insl
fsubrs
out
ret
aad
push
or
jg
jns
into
mov
or
add
push
aam
dec
xor
pop
bound
cmp
iret
push
imul
cmp
or
mov
ljmp
aas
neg
jae
fwait
sub
int
cli
cltd
push
dec
fsubs
inc
sbb
repz
shll
cmp
fsubrs
call
push
leave
andb
jb
jae
popa
sub
mov
mov
push
ds
mov
movsl
cmp
xchg
loope
decb
aam
lret
sub
aad
sub
dec
ret
cld
ret
xor
push
mov
stos
sbb
mov
push
insl
pop
or
daa
aas
xchg
hlt
mov
fiaddl
adc
cld
dec
jbe
xchg
mov
lods
aaa
or
jmp
cmp
icebp
out
and
or
pop
jmp
jecxz
xor
aas
cltd
mov
stos
enter
xchg
sub
lods
jbe
loopne
dec
in
test
nop
inc
in
mov
mov
jmp
dec
jle
and
xor
or
out
and
jb
xchg
loop
xor
cmpsl
mov
adc
scas
mov
and
jge
inc
sti
shrb
ljmp
push
push
jne
dec
inc
mov
dec
xchg
lcall
sub
jmp
sbb
inc
packssdw
xor
stc
popf
clc
test
movsl
cli
xchg
jmp
sbb
fdivrs
test
pop
outsl
mov
lock
imul
fldlg2
aaa
fwait
lock
popf
jmp
dec
mov
scas
dec
or
cmpb
pop
mov
mov
shll
mov
jle
or
push
or
add
orl
and
xchg
mov
xchg
xchg
dec
cmp
mov
mov
int3
nop
repnz
ficomps
adc
push
mov
jmp
mov
nop
fcmovnu
shll
sbb
or
add
and
mov
mov
insl
ja
stos
mov
in
loop
es
call
insl
scas
push
cmpsb
call
xchg
add
and
cltd
lods
mov
bound
pop
lods
loop
pop
popf
into
mov
or
out
je
sbb
movsb
inc
rclb
add
xchg
sub
jmp
rclb
jb
or
and
mov
insl
das
cmp
and
dec
pop
xor
pop
test
jp
das
in
insb
push
pusha
sti
inc
or
outsb
jcxz
hlt
daa
xchg
push
dec
inc
int
push
fidivrs
adc
push
fnsave
push
cltd
and
cli
lea
push
rcrb
dec
jecxz
mov
sbb
or
leave
pusha
sbb
adc
sti
mov
pop
and
sti
lods
daa
outsl
fidivs
add
sbb
xor
push
cmp
shrl
xor
add
or
ret
aas
adc
lahf
adc
adc
sbb
pop
rcr
mov
sub
xor
sub
incl
inc
push
fcoms
cmp
pop
or
dec
lods
cltd
test
and
and
pop
lods
icebp
xchg
cmpsl
cmp
xor
andb
pop
icebp
mov
jb
push
scas
movsb
fistpll
fisubrl
mov
sbb
frstor
negl
mov
push
mov
xchg
add
lock
cld
push
popa
punpcklbw
cli
enter
push
insl
aam
xchg
jp
xchg
in
jp
pop
jmp
xchg
push
out
or
mov
push
jo
loope
in
fs
pusha
xchg
movsl
add
push
fbld
or
cmpsl
inc
inc
jecxz
dec
jl
dec
xchg
loop
ficoml
icebp
xchg
call
dec
jmp
fidivs
fdivr
bound
cld
xchg
sbb
aaa
movsl
leave
cmp
je
popa
adc
iret
mov
xor
and
sbb
xchg
mov
int
pop
and
rclb
lock
out
dec
in
aas
neg
seto
mov
clc
das
push
dec
loopne
outsb
mov
sub
xchg
loopne
inc
leave
cmp
inc
mov
xor
inc
jno
out
sahf
jmp
or
sbb
test
in
mov
mov
or
test
ljmp
dec
stos
js
lods
es
popa
push
xorl
imul
pushf
mov
jb
add
cltd
test
outsb
sbb
mov
addr16
in
mov
xchg
call
daa
fucomip
xchg
sub
push
and
movsb
pop
or
pop
cmc
imul
xor
in
add
mov
movsb
fcmovnb
inc
faddl
cmp
movsl
je
jecxz
enter
loop
js
mov
idiv
inc
jle
shrl
cwtl
je
mov
jp
adc
cld
or
push
jnp
ds
aad
orl
loop
sub
adcb
imul
lret
push
sbb
stos
in
cmpsl
imul
add
sti
adc
fildll
jg
xor
sbb
push
or
add
jno
out
sbb
add
and
cltd
jno
mov
clc
aas
add
and
ret
xor
sahf
sbb
ss
cs
js
inc
jbe
push
ficomps
adcl
lods
push
adc
add
push
dec
adc
push
inc
outsl
jecxz
bound
mov
int3
xchg
icebp
xor
lds
and
push
scas
pop
lods
js
fsubrs
enter
mov
popa
repz
mov
clc
and
dec
xor
dec
fcom
sbb
xchg
cld
pop
nop
fistpll
cwtl
pop
inc
inc
mov
cmp
sti
mov
mov
xchg
jns
orb
jle
mov
loope
out
pop
mov
nop
fnstcw
jecxz
sub
push
pushf
inc
testl
pop
dec
hlt
cli
pushf
cmp
in
fists
xchg
sub
lahf
pusha
mul
dec
xchg
lods
jge
outsl
cmp
mov
dec
pop
leave
cli
jg
push
mov
mov
sub
bound
mov
data16
xor
sub
movsl
test
mov
pop
cmc
lock
gs
in
shrl
cs
fisubl
in
inc
push
je
cmc
mov
cli
push
in
in
cmp
insb
or
sbbb
movl
notb
mov
xchg
jmp
xor
push
push
js
mov
push
sub
lret
bound
fldl2t
lods
push
push
push
jmp
repnz
lock
out
xchg
js
sub
add
int3
imul
nopl
out
add
xor
in
and
mov
adc
hlt
or
inc
les
stc
das
fnstenv
and
jmp
inc
fsubl
lret
lret
xor
adc
insl
sar
mov
loop
mov
in
jge
out
lds
pushf
cli
sub
rorl
cld
enter
sub
adcl
clc
jg
jmp
sbbb
cwtl
sbbl
and
add
jge
movsb
cmp
sahf
xchg
xchg
ds
loop
jo
daa
fs
outsl
push
les
adcb
push
arpl
sub
aad
and
push
sub
fisttpl
mov
sahf
push
pop
cmc
aaa
mov
jl
lea
push
mov
mov
pusha
testl
sub
pop
fisttpl
cmpsb
or
jl
movsb
add
lcall
sub
repz
mov
sahf
xor
inc
sub
punpckhdq
pop
aaa
mov
mov
fs
les
movlps
xor
ja
adc
js
push
push
cltd
pop
icebp
lret
pop
test
outsb
add
or
cs
pop
imul
aaa
mov
mov
push
mov
fdivl
rcr
outsl
or
fisttps
sbbb
nop
mov
aaa
psrad
inc
ss
and
jmp
jae
je
out
imul
mov
lret
fnstenv
push
call
mov
arpl
roll
sbbl
add
or
das
bound
dec
in
add
mov
add
popa
jb
sub
lds
fstl
movsl
je
fcomps
aaa
into
dec
stc
xchg
sub
insl
push
in
lcall
sbb
mov
mov
sub
push
rclb
mov
jge
and
rcrl
inc
mov
mov
xchg
mov
or
pop
sahf
xor
test
push
jmp
pop
push
push
cld
xchg
test
sbbb
pop
dec
jecxz
push
out
xchg
in
adc
jl
nop
dec
cli
xchg
jp
push
jmp
mov
fidivl
dec
stc
jge
insb
add
fs
xchg
cltd
inc
test
jbe
dec
fistpll
arpl
cmp
xchg
mov
mov
dec
fists
nop
ljmp
in
pop
adc
jle
or
les
sub
cltd
rolb
sbb
cmp
push
cmp
outsl
daa
fidivs
nop
scas
inc
jbe
daa
movsb
out
push
adc
mov
fs
mov
adcb
or
dec
cmp
lock
js
dec
cmp
inc
or
mov
hlt
sbb
push
adc
sbbl
cmp
sub
inc
lock
gs
clc
or
push
stc
and
repz
mov
pop
loope
sbb
lret
lahf
ss
add
xchg
xor
shrl
loope
pop
adc
dec
out
add
into
xor
mov
int
add
dec
loop
out
xchg
pop
push
out
cmc
or
cmp
cmp
push
in
and
cld
or
sbbb
negl
ror
bound
adc
mov
or
es
push
adc
push
dec
ret
mov
repnz
pushf
adc
ret
add
jecxz
in
test
push
add
push
ret
repnz
jle
daa
adcb
adc
imul
ret
es
push
push
mov
push
hlt
rcrl
add
loopne
dec
shl
hlt
loopne
iret
adc
xor
push
add
pop
cmp
dec
filds
add
add
or
cmp
std
xchg
pminsw
cltd
sbb
push
jmp
or
cmp
push
in
adc
jae
sbb
lahf
ss
pop
inc
call
inc
flds
push
cmp
ds
cwtl
dec
lock
and
notb
test
add
and
icebp
stos
inc
and
sbbb
neg
jae
les
lahf
sub
push
jae
lret
into
gs
loope
cmc
adc
adc
call
jecxz
ja
sbb
shlb
mov
lret
ds
out
outsb
or
mov
shl
in
and
push
out
in
inc
fisubl
sbb
mov
int
and
jmp
cmp
arpl
cltd
xchg
push
call
out
leave
les
inc
push
in
jno
lret
mov
in
adc
jl
push
pop
fidivs
int
test
mov
ja
mov
pop
js
clc
stos
movsl
cmp
push
cmpsl
ds
add
lds
jbe
cmpl
jmp
punpcklbw
repz
and
inc
or
js
mov
aas
int3
aaa
imul
cmpb
xor
gs
push
in
test
add
xor
cmpsb
push
mov
mov
test
sbbl
inc
jle
jb
adc
iret
fistpll
data16
adcb
lods
inc
scas
pop
cmc
fldl
mov
fsubrs
mov
push
in
sahf
xor
insb
dec
dec
in
mov
jo
mov
mov
add
cltd
movsb
cmp
add
xchg
sub
cltd
scas
inc
int3
add
arpl
out
dec
in
sti
mov
lahf
cmp
call
rcrl
fidivl
add
jbe
sti
pop
icebp
sub
es
es
sub
sub
sub
push
ljmp
clc
xor
dec
jecxz
out
mov
push
xor
pop
scas
cmp
outsl
mov
sbb
lods
into
fldt
in
subl
pop
cmc
ss
xchg
andl
xlat
repnz
arpl
testb
inc
pop
icebp
je
loop
rclb
push
out
jmp
outsb
test
xchg
insb
popf
sbb
mov
loopne
imul
xor
gs
data16
xchg
jge
loop
add
jb
fs
xchg
jg
jbe
fbld
enter
and
lods
push
sbb
ss
jno
shll
mov
cmc
mov
sbb
inc
or
xchg
arpl
hlt
call
or
idivl
add
jnp
lea
pop
mov
fcomip
fildl
xor
or
sub
dec
lods
inc
jg
add
leave
icebp
movsb
cmp
out
cld
xchg
sbb
cmp
pop
jo
xchg
lds
loopne
sbb
data16
push
sbb
insl
mov
iret
shlb
jle
nop
daa
mov
sub
outsb
cmp
sahf
std
or
das
and
mov
stc
and
das
sahf
std
stos
inc
xor
into
test
lea
mov
add
std
fwait
out
xor
mov
mov
mov
xor
push
out
xor
mov
jg
inc
aam
and
ljmp
or
cmp
dec
xor
sbb
jne
gs
push
inc
cwtl
das
pop
js
xchg
arpl
inc
inc
cmp
pop
push
daa
les
js
mov
mov
mov
jae
cmpsb
mov
aad
jmp
aaa
into
mov
fists
icebp
mov
es
clc
sbb
mov
icebp
out
and
cli
and
mov
out
es
shl
aad
cmp
enter
loope
lds
rorb
lea
or
mov
pop
cmp
push
cmpsb
adc
int
push
jp
mov
aad
adc
sub
std
push
and
mov
outsl
jb
jle
cmp
sbb
xchg
xchg
outsb
xor
xor
add
jne
mov
jmp
iret
mov
lods
inc
lods
xchg
jge
fs
jmp
aam
push
adc
lods
pop
mov
std
das
call
inc
pop
push
lret
push
xor
pop
addr16
pop
les
mov
cwtl
pop
movsl
mov
scas
ds
movsb
add
cmp
imul
push
mov
cltd
cmpsl
bound
ja
lock
mov
iret
out
in
xchg
xchg
lea
int3
stc
nop
out
outsl
mov
fwait
dec
pop
mov
sbb
scas
sub
sub
and
divb
push
sub
push
add
push
sbb
fnsave
sub
jb
lahf
and
sub
aad
xor
rolb
xchg
dec
push
adc
mov
cli
cmp
pop
xchg
mov
sti
sub
xor
out
stos
iret
add
sbb
mov
hlt
sub
pushl
movsl
daa
loop
xchg
jecxz
mov
mov
sbb
out
out
xorl
and
bound
lahf
dec
and
sbb
ja
adc
in
sti
xchg
xchg
sub
mov
xor
dec
xor
pop
enterw
cpuid
and
je
gs
inc
cmp
ret
rorb
cmp
adc
cmp
fs
out
std
adcb
sbb
cmc
cmp
fwait
and
and
jae
stc
sub
mov
pop
fs
leave
and
xchg
jno
pop
iret
and
jmp
icebp
daa
add
rclb
push
clc
inc
bound
testl
icebp
sbb
mov
add
pop
sbb
das
lahf
pop
jmp
sbb
push
jmp
in
add
sti
inc
jecxz
lcall
adc
addl
jmp
pop
mov
mov
xor
lock
and
repnz
repz
mov
popf
ret
fisubrs
fisttpl
cmp
cmpb
dec
mov
pop
add
mov
call
daa
adc
cld
nop
divl
jbe
dec
sbb
filds
cmp
inc
push
test
jo
inc
sahf
popa
pop
inc
mov
push
push
xchg
push
mov
add
xchg
mov
std
sbb
mov
lret
adc
out
call
scas
stos
pop
leave
or
mov
pop
pcmpgtb
add
dec
mov
pop
mov
jle
cwtl
push
ljmp
xor
aad
or
fdiv
sbb
or
out
test
call
test
into
divl
cli
lret
mov
adc
pop
movsb
add
std
sub
push
aad
jae
imul
outsl
xor
ljmp
pop
movsb
jmp
mov
sahf
mov
jge
push
fmuls
shrl
fisubrl
das
aas
ljmp
push
push
daa
push
lds
jo
add
pop
ss
fistps
lgdtl
inc
mov
rolb
pop
les
mov
or
lods
xchg
in
mov
inc
bnd
and
jno
xor
outsb
lcall
jno
popa
je
push
cmpsb
push
pop
iret
inc
mov
fstpt
inc
mov
in
dec
mov
or
pop
int
test
sbb
inc
xlat
fmuls
pop
pop
jmp
lds
fmuls
mov
sbb
and
ja
pop
jmp
aaa
or
jne
or
cmpsb
enter
repz
mov
jecxz
push
xor
dec
jae
icebp
sbb
cmp
cmp
sbb
and
add
push
lcall
outsl
mov
jecxz
imul
repnz
aam
dec
in
mov
ret
mov
and
pusha
sub
dec
mov
js,pn
cmp
mov
dec
clc
add
jno
adc
inc
xchg
cltd
xchg
add
les
push
cmp
insb
lahf
cli
xor
daa
icebp
xor
lds
xor
adc
fimull
xorl
fcom
data16
mov
fldt
leave
dec
mov
jmp
aaa
jg
sbb
jl
push
jge
mov
push
jle
mov
jmp
xchg
xchg
cmpsb
fidivrl
idivb
stos
xor
in
mov
cld
push
or
push
lods
pusha
and
mov
jmp
rcl
cmp
loopne
jae
fildl
popf
mov
loopne
int
mov
insl
repz
fsubrl
jmp
ret
ret
or
cli
repz
xchg
loop
lods
mov
hlt
dec
fbld
inc
jb
push
pop
gs
scas
and
jle
subb
inc
xlat
xchg
mov
adc
imul
xchg
add
push
testb
inc
mov
sub
xor
add
add
sub
rorl
out
xchg
ret
pop
int3
pop
mov
cmc
movsb
dec
mov
lods
push
mov
sahf
push
cwtl
inc
sbb
inc
push
push
mov
cmp
testl
mov
sbb
add
test
clc
xor
push
sti
mov
clc
unpcklps
and
add
sbb
inc
orb
cmp
addr16
jmp
cmpsb
ja
pop
jl
push
push
stc
xlat
and
sar
sbbb
inc
mov
mov
out
mov
mov
fildll
mov
mov
icebp
aad
inc
popf
scas
rorl
loop
jg
lock
sti
or
adc
pop
mov
stos
xor
mov
mov
add
xor
sub
loopne
sub
dec
in
pop
popa
inc
ret
push
out
sbb
mov
sub
scas
jb
cmp
sub
lcall
xchg
mov
sbb
jecxz
mov
in
add
shrl
ret
cmp
or
sbb
or
je
cmc
daa
pusha
push
jmp
push
push
leave
dec
inc
push
leave
popa
test
in
lods
push
lret
mov
sti
inc
push
iret
pop
mov
aaa
daa
sbbl
dec
inc
jo
fildl
stos
popa
push
push
cmp
loope
mov
dec
ja
bound
xchg
popf
cmpl
pop
pcmpgtd
mov
push
jg
out
loop
push
mov
add
pusha
mov
jne
push
scas
cmp
shl
clc
sub
out
test
cmpsl
pcmpeqb
rclb
addr16
jns
lods
shlb
fsubr
xchg
pop
mov
or
lea
pop
mov
sarl
mov
pop
adc
ja
mov
mov
xchg
lret
jg
das
leave
aas
pop
fisubs
xor
in
test
push
aas
push
pop
mov
mulb
push
cmp
cmp
cmpsl
mov
dec
mov
rcrl
adc
add
mov
push
push
adc
in
add
hlt
cmpsl
cs
in
test
and
xchg
lods
cmp
fisubrs
add
xchg
lret
xchg
nop
shrb
hlt
jge
mov
mov
aad
inc
lret
add
xchg
js
xchg
lods
xor
xchg
mov
push
imul
in
pushl
push
mov
sti
out
leave
lahf
daa
mov
rol
jno
xlat
fstpl
mov
out
inc
cltd
leave
movsb
fcompl
repz
ja
aad
std
das
sub
fisttps
loop
push
mov
lret
leave
xchg
pop
or
cmpsb
mov
mov
pop
pop
shrl
stc
inc
jne
outsb
outsl
fisttps
sbb
add
push
lahf
lock
jb
sbb
cmp
ficompl
fdivs
sti
cmc
daa
shr
cmp
hlt
ficoml
loopne
cmp
inc
pop
mov
repz
ss
nop
jnp
ret
fisttpll
cmpsb
aaa
inc
in
mov
in
aad
jnp
and
mov
aam
sub
fadd
sbb
jg
sbb
cld
inc
sti
dec
inc
ficompl
sbb
nop
xchg
mov
sbb
lock
xor
test
or
adc
cmp
jmp
scas
pop
jb
sub
mov
in
lret
mov
stc
mov
mov
notl
sbb
cmpsl
and
std
sub
cs
fstps
iret
inc
enter
push
movsl
mov
sbb
jmp
add
fcmove
jmp
in
loopne
add
push
fldt
lods
mov
lret
xorl
xor
std
and
enter
int3
inc
jb
test
jp
dec
adc
cwtl
adcl
push
in
mov
xor
mov
aad
mov
pop
repz
cmp
fsubl
divb
int
loop
xchg
loopne
es
fdivs
call
mov
cmc
daa
scas
andb
and
lret
cmp
inc
adc
pop
cmc
mov
pop
out
and
pop
mov
jbe
data16
pushf
inc
test
scas
mov
popa
enter
jno
fisubrs
loop
sarl
cld
mov
add
sbb
out
pop
add
mov
jnp
shlb
pusha
hlt
add
fidivl
push
dec
dec
cmp
xchg
imul
js
and
decl
in
xor
add
in
movsb
and
sbb
lret
daa
lods
iret
int3
cmp
cli
sti
sub
test
aam
xor
cwtl
xchg
mov
icebp
jl
in
js
push
pop
push
pushf
xchg
xchg
lret
push
jno
stos
lcall
mov
adc
cmp
inc
mov
pause
pop
mov
fucom
cmp
loope
add
push
in
test
out
shll
ret
test
scas
popa
test
dec
or
lods
inc
cwtd
push
cld
test
cmc
out
ja
es
mov
add
pop
fs
stc
xchg
and
inc
mov
adc
pop
out
pop
gs
push
jp
les
and
addb
mov
sub
xor
mov
daa
mov
cs
and
pusha
xchg
jge
pop
xor
push
stos
test
loopne
sbb
or
adc
sub
sub
pop
imul
pop
in
shlb
pop
mov
outsb
add
lret
xchg
mov
xchg
jge
test
jb,pn
mov
adcb
call
dec
movsb
inc
into
leave
aas
mov
icebp
shrl
jns
loop
out
xor
int
and
jp
lock
push
push
mull
stc
and
jecxz
xchg
adc
jecxz
sbb
and
rcr
inc
ficompl
mov
jmp
testl
ret
icebp
and
je
sub
adc
push
pop
push
fmull
pop
call
dec
add
lea
ss
xchg
mov
scas
fcoml
nop
mov
mov
xchg
sub
pop
add
xchg
add
jmp
xchg
loopne
mov
sbb
jae
mov
and
mov
in
lret
cmp
mov
loop
and
fildl
xorl
sub
pop
and
inc
int
xchg
es
inc
fsubs
push
pushf
insl
bound
jmp
das
sbbb
or
jo
movb
add
jno
mov
fists
jl
xchg
cmp
jg
inc
popl
into
gs
jnp
xchg
hlt
and
push
cmp
out
bound
std
cmp
outsl
rcrb
out
insb
cmpsb
pusha
mov
push
clc
xor
mov
adc
shl
xchg
and
aaa
cmc
fsubrl
popf
or
mov
div
sub
shrl
cmp
mov
push
sbb
lcall
ret
out
sbb
popf
aad
and
mov
popa
cmp
xchg
sub
lret
icebp
mov
lret
mov
sbb
test
ret
popf
pop
rorl
cltd
inc
mov
in
xchg
pop
shrl
cmpsb
mov
adc
cltd
inc
mov
pop
push
hlt
mov
hlt
bound
rcrb
out
js
pop
dec
mov
loope
push
bound
pop
push
sub
outsl
test
mov
sub
pop
dec
in
repz
aad
cld
xor
lock
pushf
in
and
icebp
sub
jae
push
add
fsubl
clc
cmp
test
jmp
cli
or
fcoml
enter
cmpsl
pop
jns
mov
jae
mov
and
xchg
mov
sahf
xchg
addr16
jg
pop
inc
jl
pop
dec
pop
testb
xor
jle
repz
adc
cmp
dec
pop
out
mov
adc
jns
mov
mov
out
hlt
nop
out
sub
fildl
cmp
aas
mov
push
addb
and
mov
fnsave
enter
fldl
test
insl
xor
pop
clc
mov
cmp
pop
das
jb
imul
loopne
mov
in
jle
xlat
ds
pop
loope
push
enter
jb
mov
ret
inc
push
call
mov
repz
dec
into
xor
pushl
mov
xchg
std
sub
sarb
je
fnstenv
xchg
aad
adc
pushf
mov
cltd
mov
imul
and
or
push
cwtl
sbb
pop
jle
mov
stos
incl
mov
lods
dec
rolb
mov
dec
js
in
push
sbb
push
mov
sub
inc
scas
orl
scas
fs
ljmp
sub
inc
nop
data16
cmp
mov
cmc
push
lret
push
in
mov
mov
ret
ss
and
ds
lret
flds
in
out
sbb
scas
inc
add
jb
jnp
push
jg
pop
lds
cmp
mull
pop
icebp
mov
lret
inc
xchg
cltd
mov
cmpb
pop
stc
out
jmp
frstor
cmp
icebp
fidivs
dec
leave
push
pop
jbe
mov
mov
push
jo
lcall
xor
jns
fidivrl
out
pop
rol
getsec
fwait
scas
aam
repnz
xor
fiadds
es
xorl
push
lret
ret
clc
mov
fstp
inc
lcall
das
hlt
fsubrs
sbb
fiaddl
jmp
push
cwtl
rorl
jmp
les
inc
fcmovu
jmp
adc
jge
lds
enter
stc
fdivrp
xchg
adc
gs
sahf
arpl
jnp
stc
inc
pushf
dec
roll
inc
lds
cmp
sub
sub
leave
daa
mov
inc
shlb
dec
movsb
add
push
dec
lea
and
imul
and
sub
mov
icebp
mov
shlb
mov
xchg
iret
mov
test
repz
hlt
repnz
leave
cmpsl
xchg
xchg
push
into
negl
loope
jg
sbb
cli
xchg
xlat
cmpb
filds
andb
xchg
sub
mov
push
mov
lods
inc
push
cwtl
les
cmp
sub
scas
inc
or
hlt
sub
xor
jl
jecxz
jl
aaa
into
fs
push
int
and
adc
jae
inc
push
fsubr
inc
shll
jnp
add
imul
xchg
cwtl
pusha
idiv
sbb
mov
jmp
xchg
int
fnsave
jg
int3
cwtl
mov
push
xlat
fwait
imul
clc
lea
scas
faddl
rorl
push
sarl
rcll
mov
out
pop
mov
jns
push
ret
outsb
into
gs
lret
leave
push
mov
sti
mov
arpl
mov
insb
rorb
mov
pop
push
mov
xor
inc
jae
push
stos
inc
inc
cwtl
xchg
gs
push
rolb
outsb
sahf
jbe
or
xchg
imul
testb
inc
shll
xchg
mov
cltd
outsl
imul
popf
cmp
imul
insl
sti
daa
push
fisttps
jp
xchg
pop
leave
fwait
sbb
or
xor
mov
popa
mov
mov
imul
outsb
ficoms
cmc
lods
pop
ret
fs
jecxz
push
add
mov
sahf
inc
iret
push
push
xchg
jl
pusha
test
mov
adc
cmp
xchg
mov
pop
push
cmpsl
xchg
mov
and
sub
jp
call
or
int3
ret
inc
push
inc
ret
sahf
add
shll
cmc
jg
and
mov
cmp
jne
sbb
xchg
ja
sub
loop
and
fists
push
push
xor
ja
inc
jo
xchg
jl
and
mov
das
cmp
mov
mov
and
inc
js
test
jno
push
cmpsl
ds
pop
pushf
jno
ja
outsl
inc
in
mov
push
xchg
shlb
rcrl
cmp
lret
mov
imul
es
add
and
sbb
xchg
arpl
sahf
xor
test
pop
repz
cmpsb
push
int
add
xchg
mov
adc
xor
dec
jecxz
xor
jo
jl
fcmove
push
mov
lock
adc
stos
lea
adc
sarb
das
xchg
pop
mov
mov
insb
sub
jp
jo
xor
daa
imul
sbb
mov
out
das
mov
xor
jecxz
popf
sub
add
mov
clc
and
add
pop
jne
pop
daa
xchg
and
push
fs
orl
mulb
mov
mov
or
ja
pop
aaa
imul
inc
inc
or
pop
dec
aam
loope
imul
push
stos
pop
xor
les
mov
adc
dec
mov
push
into
es
cmp
push
xchg
mov
hlt
jo
out
mov
jp
insb
mov
dec
sarl
imul
cmp
std
push
mov
les
mov
push
testb
pop
adc
or
scas
aas
lret
mov
fsubs
sub
pop
aad
aas
xchg
jno,pn
inc
mov
adc
jae
inc
mov
mov
inc
mov
sti
dec
jmp
lds
sti
xchg
ljmp
mov
scas
cmpsl
pop
mov
or
imul
dec
sbb
cld
jae
in
and
adc
and
call
mov
jns
iret
fisttps
mov
mov
repnz
xchg
push
mov
dec
mov
cmpsb
cltd
ja
add
test
mov
fstpt
push
or
xchg
in
test
sbb
shrb
xor
test
test
sbb
add
sbb
test
cli
ss
cld
loop
inc
adc
jne,pn
jno
sahf
xchg
inc
lret
dec
loope
dec
push
leave
pop
sahf
adc
inc
out
fstl
pop
and
mov
xor
sbb
ds
cmpsb
jle
divl
jp
loop
cmpsl
lcall
rcll
xlat
cmp
imul
popf
enter
mov
les
sub
aas
lea
dec
inc
sbb
push
mov
mulb
jl
dec
ja
push
aam
loop,pn
test
or
jp
in
dec
mov
fwait
ss
ror
push
flds
add
js
stos
nop
fldt
and
js
imul
pop
or
inc
sbb
xor
repnz
push
aam
test
lods
pop
mov
cmpb
mov
jg
into
jae
rcrb
adc
jb
xchg
push
sub
inc
ja
insb
xchg
je
scas
insl
mov
jns
jb
xchg
push
ds
enter
and
pushf
inc
mov
lock
sbb
jns
iret
adc
enter
and
out
inc
mov
jne
insl
add
xchg
shrl
or
sbb
inc
xchg
cmp
cmpsb
insl
mov
pop
in
sub
jle
loopne
loop
pop
add
add
mov
mov
inc
fsubrs
fldenv
testb
jge
aam
loope
mov
fwait
xor
sar
xchg
lds
mov
add
shrl
imul
add
and
mov
pop
jne
jns
out
jns
push
popa
clc
aaa
cli
add
mov
jge
nop
daa
ficomps
lock
pop
sub
pop
cmp
fnstsw
mov
jmp
iret
push
pop
sahf
sbbb
aas
push
mov
xchg
sub
cmp
xchg
fimuls
out
je
das
cmpsb
pushl
xor
xchg
sub
test
mov
dec
movsl
sbb
fmuls
aam
inc
stc
jbe
sub
dec
cltd
add
sub
mov
mov
xchg
aaa
out
test
adc
mov
outsl
push
rcr
push
or
lea
fsubrs
dec
jmp
cmpl
sub
jmp
call
add
jnp
sub
mov
mov
loopne
mov
sbb
lahf
sbb
fidivs
push
imul
mov
dec
shll
add
popf
inc
xor
gs
add
or
int3
cmpsl
loop
mov
jge
jb
imul
rcrb
jne
test
jnp
adc
jae
loop
leave
dec
sbb
call
test
jge
cltd
mov
cmp
xchg
mov
sbb
push
jecxz
adc
cmc
push
mov
dec
jnp
pop
dec
jg
int
mov
mov
mov
xchg
mov
movsb
dec
fs
test
and
inc
in
outsb
dec
out
nop
cmpsl
imulb
sbb
cmp
mov
gs
or
adc
sub
push
ret
jp
je
lods
shrl
inc
js
xchg
ljmp
stos
clc
mov
popf
movsb
lret
push
sbb
mov
cmp
xor
rcll
out
push
je
xor
lock
lods
add
add
inc
jno
loopne
lea
addr16
xchg
cs
cmp
xor
popf
outsl
inc
mov
fisubrl
sti
mov
es
dec
mov
dec
lret
mov
arpl
dec
jg
mov
sub
mov
lcall
nop
xor
mov
mov
repnz
fnsave
mov
lds
inc
sbb
in
into
ret
into
mov
test
jo
mov
xchg
or
pop
sbbb
inc
jle
sbb
pop
ret
out
in
mov
dec
mov
js
pop
jl
jnp
repz
mov
dec
adc
out
xchg
xchg
add
imul
in
stc
jl
mov
inc
je
dec
adc
loop
adc
jg
fbstp
test
or
cli
mov
out
jns
dec
push
mov
jg
data16
repz
push
jg,pn
inc
mov
sbb
mov
pop
add
movsb
or
icebp
xchg
push
dec
cmp
xorb
test
pop
push
fstpt
testb
xor
inc
or
adc
sbb
rcrl
mov
inc
ret
hlt
dec
arpl
push
jmp
jle
cmc
testl
cli
adc
pop
sbbb
mov
lods
std
xchg
pop
aaa
hlt
mov
dec
push
popf
cmp
test
mov
out
mov
outsb
ss
ja
mov
icebp
aaa
add
and
fnsave
test
repnz
mov
and
subb
jno
jmp
movsl
xor
mov
std
adcb
adc
inc
push
sahf
xor
mov
mov
push
int
xchg
push
add
dec
bound
das
shrb
mov
jp
jge
push
mov
mov
cmp
je
aaa
lahf
subl
fstl
jecxz
cmp
sub
aaa
loop
push
add
sbb
insl
call
test
pushf
xor
scas
andl
mov
int
hlt
movsl
inc
or
in
into
cli
cld
scas
ss
dec
stc
pusha
icebp
or
ror
out
ja
pop
add
mulb
sub
pop
push
cld
arpl
lea
dec
les
cli
pushf
pop
add
movsb
stos
xor
in
cmp
sbb
arpl
negb
mov
les
pushl
insb
or
icebp
and
push
loope
jae
pop
ss
hlt
cs
out
dec
leave
xchg
cld
lcall
hlt
stos
mov
leave
out
repnz
xorb
mov
popa
imul
dec
adc
sti
pusha
xor
rorl
pusha
out
jae
add
add
adc
icebp
xlat
inc
mov
aam
lods
sub
pop
ret
test
fiadds
fsubl
rcll
fwait
adc
pop
lret
cmp
sbb
shll
cmpsb
mov
out
shlb
stos
lods
pop
lock
dec
mov
push
leave
xlat
sbb
adc
add
shl
clc
arpl
cmpsb
jle
cmp
orl
psrld
popf
or
lock
cmpl
xchg
sub
cmp
cmpsb
mov
mov
cmc
or
or
add
mov
cmp
mov
hlt
orl
xchg
ss
and
or
sahf
arpl
lea
test
js
in
inc
adc
lods
dec
mov
ret
pop
mov
out
outsl
imul
xor
loopne
push
push
mull
scas
sub
dec
adc
cmp
or
jne
mov
jno
pop
rolb
aam
test
push
inc
push
fmull
add
hlt
aaa
inc
unpckhps
repz
stc
jmp
cmpsb
ss
hlt
mov
rorl
add
test
adc
in
cmp
push
pop
aad
je
push
adc
loope
out
dec
or
divl
cwtl
adc
dec
or
dec
lret
mov
mov
cld
pop
adc
push
enter
add
imul
popf
lret
mov
adc
xchg
sahf
fs
dec
into
std
pop
mov
dec
or
sarb
xor
leave
mov
xchg
fs
std
pop
sub
enter
add
outsb
sub
or
inc
mov
or
cltd
sub
mov
mov
adc
jns
cli
pop
mov
cmpsl
cmp
cmp
sbb
inc
sbbl
clc
cltd
inc
adc
mov
rolb
pop
pop
xchg
andl
mov
xchg
inc
push
jae
push
shll
mov
nop
out
jg
lock
and
or
push
mov
fldcw
enter
cmp
out
ja
jge
fwait
cmp
push
into
sbb
daa
mull
test
adc
jmp
outsl
call
xchg
in
jnp
or
mov
rcll
xor
cmc
bound
xor
pop
clc
jae
push
add
outsl
jmp
or
push
push
add
lods
arpl
mov
rcrl
push
add
loop
or
mov
cmp
xor
hlt
mov
inc
sbb
vmptrld
push
add
outsb
loop
or
xor
pop
mov
hlt
bound
hlt
mov
lods
sahf
aad
es
and
push
sub
push
adcb
xchg
icebp
sbb
dec
lods
cs
pop
inc
pmullw
cmc
xor
xchg
inc
dec
xor
dec
xchg
jmp
icebp
wbinvd
mov
xchg
imul
pop
std
sub
xchg
inc
mov
movsb
imul
push
adc
xchg
xchg
aas
fistl
xor
stos
sub
das
mov
popf
lahf
xchg
aas
std
ret
icebp
gs
ljmp
pop
cwtl
ds
push
push
inc
stos
sub
mov
lock
in
iret
jle
test
adc
xor
repnz
and
jo
insl
hlt
sub
ds
push
movsb
shr
iret
mov
push
pop
mov
adc
sarl
pop
shl
dec
push
stc
pusha
out
lahf
adc
and
inc
or
pop
mov
xchg
popf
mov
add
filds
jno
imul
pop
ret
nop
dec
xor
adc
test
inc
scas
xor
scas
scas
push
outsb
arpl
outsl
xchg
mov
nop
lret
ja
sbb
mov
push
or
or
test
lret
mov
mov
pushf
lods
xor
xor
push
daa
adc
push
movsb
inc
stos
xor
ficompl
mov
dec
add
inc
loopne
repnz
mov
aad
xor
inc
fidivrl
xchg
add
push
lods
xor
push
pop
imul
mov
mov
cmpsb
cltd
inc
in
jae
insl
xchg
stc
out
test
mov
ljmp
into
mov
test
mov
pop
add
bnd
aas
out
adc
popa
bnd
out
out
rcrb
repz
std
pop
add
into
mov
in
mov
jb
mov
mov
or
loope
push
adc
outsb
xor
xchg
and
jmp
cmp
mov
xor
push
pop
ds
xchg
push
sarb
cmp
jmp
and
lock
push
cld
fsubrp
insl
icebp
imul
lods
sub
stos
mov
jmp
icebp
lea
sbb
cmpsl
popf
or
divb
cmp
outsb
insb
add
cwtl
jb
insl
out
subl
cmpsb
roll
dec
pop
imul
inc
sub
out
mov
jo
sub
and
sub
or
roll
fnstenv
pop
movsl
add
inc
mov
outsb
in
add
mov
leave
mov
and
addl
fwait
aaa
mov
mov
sub
aas
dec
rolb
shlb
push
stos
jnp
sbb
jnp
jo
fsubs
adc
inc
enter
pushf
test
pop
mov
popa
repz
pop
mov
movsb
cmpsl
xor
outsb
out
addl
adcl
dec
mov
sar
mov
mov
fisubrs
cld
pop
xchg
cmp
insb
xchg
lds
aam
insb
ljmp
cmc
popa
ss
mov
adc
jmp
clc
mov
adc
sbb
inc
negl
xlat
in
in
movsb
imulb
sti
mov
andb
cmp
shlb
clc
xchg
add
nop
ret
iret
ret
inc
or
sbb
fwait
inc
lods
sub
pop
mov
lods
out
fsubp
fidivl
add
mov
faddl
xor
xchg
cmp
pusha
mov
dec
pop
pop
xlat
mov
xchg
insl
xchg
cmp
mov
cmpsl
xchg
add
ss
cmp
pop
test
out
scas
mov
scas
xor
dec
js
sub
cmp
dec
pop
push
shrb
popf
inc
sarl
movsl
dec
push
movsb
sub
mov
and
push
ret
cmpl
sbb
scas
dec
mov
adcl
fnstcw
add
xchg
fildl
or
sub
adc
adc
xchg
jle
mov
mov
mov
je
movsl
adc
les
sahf
inc
in
jno
mov
adc
or
xlat
jp
inc
mov
loope
das
mov
imulb
mov
push
ret
sbb
jge
shr
jb
movsl
and
fwait
add
push
mov
stos
cmp
aaa
pop
add
out
cmpsb
daa
or
cmpsl
daa
push
pop
mov
mov
in
adc
pusha
mov
lods
cmp
push
jmp
mov
push
jl
inc
adc
push
add
leave
adc
daa
jbe
add
sub
cmp
data16
sarl
aas
mulb
ret
aam
ss
fdivrs
pusha
mov
sbb
adcb
iret
addr16
test
mov
jge
iret
mov
push
add
inc
jae
fidivs
push
jg
adc
enter
loope
std
mov
or
xlat
les
and
sub
lods
xor
insb
repz
and
movsl
mov
jge
aam
dec
pand
cli
popa
xor
fadds
sbb
push
idivl
dec
xor
adc
rorb
orb
xchg
cwtl
jmp
push
mov
mov
mov
pop
pop
jmp
stos
cwtl
inc
lahf
hlt
iret
llwpcb
cmc
lahf
pop
out
pop
incb
fcmovb
xchg
pop
cmpl
imul
lds
int
xlat
xorb
icebp
sub
imul
in
push
in
xlat
sbbl
sbb
gs
or
daa
lods
jp
ret
sub
aas
sbb
mov
or
pusha
mov
hlt
pop
stc
inc
or
push
mov
fs
bts
in
sar
sti
mulb
add
rolb
dec
pusha
inc
divps
jo
jmp
cmpsb
xor
or
inc
adc
mov
mov
in
sub
sti
xor
jne
das
xor
inc
std
xchg
ja
outsl
push
jmp
xchg
cld
pop
mov
xor
adc
xchg
shlb
push
les
fcmovnbe
jnp
jnp
mov
pushf
lods
sbb
or
popa
in
inc
pop
add
jb
test
imul
mov
rorl
mov
nop
mov
mov
mov
add
xchg
xchg
inc
sbb
cmp
insb
icebp
and
lock
push
mov
ret
cli
mulb
fs
cmpsl
mov
pop
insb
dec
lea
xchg
inc
not
jge
cwtl
icebp
pop
sbb
dec
mov
and
dec
adc
aaa
xchg
cmp
cmp
xchg
rorl
ret
xchg
or
in
insl
sbb
inc
mov
je
cmpsl
stc
pop
mov
mov
fnstenv
cmc
in
mov
lods
jp
call
std
test
bound
rclb
mov
mov
insb
in
in
movb
pop
insb
popf
jge
dec
jno
es
ret
test
daa
mov
repz
sti
jae
mov
mov
insb
call
popa
sahf
repz
jge
test
mov
lods
or
outsb
inc
mov
js
lahf
add
jge
push
jno
mov
pop
inc
fmuls
int
lahf
repnz
rolb
pop
add
mov
test
mov
push
mov
call
fs
test
pop
data16
lahf
add
gs
sbb
in
add
mov
mov
adc
loope
in
pop
cmp
mov
stos
jne
ror
inc
or
or
rcl
pop
jbe
xor
cmpsl
sub
sub
push
orl
test
adc
sarl
test
pop
push
jae
inc
data16
adc
dec
cmp
dec
or
cwtl
jle
jns
cmp
je
mov
fs
or
cmp
rcrl
mov
sub
adc
inc
notl
lds
cmpsl
in
xor
stos
sub
pop
insb
mov
pop
nop
sub
mov
dec
or
pop
xchg
adc
clc
das
jb
psubsw
jnp
push
imul
cmp
inc
mov
mov
enter
je
push
add
cmpsl
sub
pop
jns
ja
xchg
outsb
sbb
shufps
cmp
enter
lret
aam
dec
adc
add
mov
pushf
cmp
mov
add
iret
mov
xchg
aas
jl
mov
mov
sub
shll
push
clc
cmp
daa
lods
lret
sbb
sbb
addr16
push
pop
lcall
clc
bound
mov
dec
imul
outsl
dec
adc
pusha
sarb
packsswb
xor
and
xchg
orb
ret
in
jbe
dec
push
stc
repnz
xchg
aad
mov
loop
mov
mov
pop
xchg
inc
test
mov
pop
sbb
inc
add
push
add
dec
push
cld
xchg
enter
sub
fadds
nop
stos
lods
xor
je
icebp
pop
imul
cmp
shl
popa
mov
movsl
jbe
or
and
in
sub
mov
cld
dec
pop
rolb
mov
mov
cmp
mov
out
ds
ror
xchg
cmp
ljmp
arpl
es
push
push
xchg
push
cmpsl
dec
aas
mov
fs
dec
out
pop
mov
add
sbbl
pop
add
out
mov
clc
and
int
and
adc
out
mov
int
imul
xor
lock
imul
scas
js
in
sahf
inc
add
sub
fcom
loope
sub
movsl
xor
loopne
pop
dec
mov
xchg
arpl
fidivrl
popf
addr16
cmp
and
pop
mov
mov
scas
mov
push
and
xlat
xor
int
add
sbb
out
lret
aas
sti
stos
xor
mov
popa
leave
faddl
shl
inc
faddl
adc
sti
arpl
push
lret
imul
sbb
mov
mov
pop
les
iret
mov
xchg
aaa
movsb
dec
pop
xchg
aas
sti
xchg
mov
call
xor
push
shlb
mov
icebp
gs
outsb
ljmp
xor
testl
andl
and
insl
jbe
sbbl
ljmp
imul
cmp
ljmpw
shlb
in
push
loope
inc
cld
cmp
ret
hlt
fs
movsl
fwait
mov
pop
jo
insl
jmp
mov
inc
dec
fbstp
xchg
cmp
fisubrs
xchg
mov
mov
negl
sbb
pop
pop
xor
jg
and
xor
ss
and
mov
sarl
jg
mov
arpl
mov
push
shrb
mov
outsl
out
cmp
cmp
jle
bound
or
std
cld
out
jl
in
sbb
jnp
push
loop
int3
mov
stc
add
mov
movsl
cli
pop
cmp
mov
rolb
fnsave
aaa
sahf
ret
dec
xchg
adc
testb
pop
add
pop
mov
popf
pushl
sbb
dec
ljmp
enter
or
push
mov
das
xchg
inc
ljmp
es
and
mov
inc
adc
test
pop
ja
xlat
subl
ss
push
inc
push
jmp
add
out
sahf
dec
wbinvd
sub
into
pop
mov
and
aad
push
loope
cli
fs
notl
adc
cmpsb
imul
orb
stc
pop
cmp
or
sbb
jecxz
xchg
imul
in
mov
pushl
mov
cmp
pop
mov
aas
fwait
jae
mov
jno
mov
lds
pop
hlt
dec
or
dec
sbbl
xorb
or
rcrl
shl
jns
xchg
jecxz
cmp
enter
push
add
adc
test
inc
cli
pusha
enter
rcrl
popf
aas
lcall
popf
or
stc
data16
or
cli
imul
scas
dec
cld
call
mov
out
sub
jl
aad
pop
adc
leave
imul
loopne
mov
push
std
pop
lds
movsl
mov
mov
mov
mov
jmp
rolb
dec
adc
cmp
jp
fidivs
std
mov
sbb
pop
fnstsw
inc
mulb
ret
and
int3
lea
cmp
push
add
mov
cmp
push
aas
movsl
xor
jbe
shlb
test
xchg
sub
inc
or
je
mov
fildll
outsl
mov
inc
jge
cltd
sub
pop
add
cmp
inc
push
or
movsl
lods
js
sbb
pshufw
cmp
sub
push
aam
xor
add
jbe
xchg
clc
inc
fisubrl
xchg
xchg
sub
dec
sub
pop
call
std
fildl
adc
adc
cld
mov
negb
shrl
rorl
faddl
cmp
int
movsl
xor
push
ret
xchg
fisubl
fidivrs
mov
mov
icebp
push
add
dec
in
pushf
cmp
inc
imul
and
or
cmc
mov
cwtl
adc
enter
push
sbb
mov
push
lods
mov
inc
lret
sahf
and
sub
fs
cmp
mov
and
cmp
dec
or
aaa
pushf
popa
outsb
aaa
pushf
or
pusha
mov
mov
scas
push
shlb
out
adc
xchg
call
std
jo
jb
fiadds
lods
xlat
jnp
call
aaa
gs
mov
outsl
lret
sbb
dec
inc
or
lret
pop
mov
mov
and
fwait
jl
jo
sar
inc
or
sahf
push
xchg
or
test
mov
sub
cwtl
cmp
pusha
into
xor
sbbb
test
mov
sti
gs
cmpsl
dec
adc
je
repz
loope
pop
add
stos
xor
push
inc
pop
bound
pop
out
jne
arpl
cli
pop
add
fistpll
pop
mov
inc
push
mov
mov
xor
xor
adc
push
xchg
xchg
aas
int
clc
pop
mov
jl
cmp
daa
mov
and
sti
cmc
pop
out
and
subl
sub
roll
xor
lret
das
das
mov
inc
repnz
addr16
out
inc
xlat
sbb
and
leave
loopne
sbb
sbb
ljmp
sbb
mov
stos
das
in
aas
add
mov
and
cmpsb
decl
jg
or
lds
cmpsb
sbb
pop
dec
mov
dec
js
rcrl
fadds
out
lahf
lcall
or
pop
ds
jno
sub
jns
dec
xchg
ds
arpl
lret
nop
adc
dec
adc
movl
xchg
ds
test
mov
jl
test
push
mov
lods
sbb
xor
pop
push
mov
scas
inc
or
iret
dec
adc
stos
xor
lahf
push
mull
mov
jl,pn
jle
xchg
add
shrb
les
lock
pop
stos
xor
jecxz
add
mov
and
fwait
inc
adcl
cmp
stos
jmp
cmc
scas
faddl
iret
dec
jle
cli
sbb
add
in
jb
push
xchg
aaa
shll
pushf
out
and
add
mov
pop
or
lods
fistps
in
mov
stos
mov
scas
push
jno
add
sub
sti
pop
jne
xchg
lock
stos
push
jmp
icebp
mov
or
push
add
push
aaa
cmpsb
dec
mov
imul
inc
adc
jle
test
scas
sub
add
sub
jno
mov
in
lcall
or
fiadds
adc
mov
mov
cmp
sub
dec
jg
rcll
ficoms
xchg
cmp
enter
fldl
dec
xchg
lahf
aas
jp
mov
add
mov
jo
sbb
jne
icebp
jns
data16
xchg
inc
jno
in
mov
lahf
shlb
mov
cmp
sbb
mov
inc
rcll
mov
jnp
push
mov
movsb
mov
fmuls
cmpsb
sub
or
mov
in
pop
popf
inc
call
cld
xchg
cmp
add
push
xchg
cmp
mov
mov
cmp
push
rolb
aaa
enter
inc
adc
test
lahf
icebp
popa
divb
push
leave
pop
out
pop
hlt
sbb
cmp
pop
int3
jae
aam
push
int
add
pop
mov
aad
add
inc
or
jbe
xlat
mov
sar
push
mov
mov
mov
cmp
aam
mulb
mov
and
cmp
adc
xor
mov
push
std
dec
push
and
in
mov
in
frstor
xor
pushf
aas
dec
es
cmp
rcrb
mov
jo
mov
scas
icebp
pop
scas
ret
or
cld
mov
push
std
pusha
sbb
xor
and
testl
lea
push
add
xor
ret
adcb
stos
daa
mov
test
jbe
push
pop
clc
rclb
mov
cmp
insl
in
daa
and
nop
in
sub
pop
movsl
fistpll
sbb
mov
mov
add
push
mov
and
aas
mov
push
stc
mov
nop
xchg
xchg
pushf
rcrl
into
insl
mul
incl
pop
icebp
int3
xchg
add
gs
testb
out
leave
push
jl
sbb
rol
mov
or
jo
es
pop
popa
sar
data16
repnz
popa
dec
stos
xor
mov
adc
add
movsb
mov
cmp
pop
add
adc
xlat
orb
lock
stos
ret
jg
shlb
xchg
aad
xlat
jmp
clc
das
cmpsl
mov
cmpsl
pop
xlat
ljmp
dec
dec
mov
stos
sahf
jne
sub
xor
aaa
and
pop
test
and
add
adc
loop
jns
ds
fdivrl
sub
out
mov
mov
mov
es
mov
iret
xor
jle
shl
jp
push
rol
addr16
xor
or
mov
out
mov
jmp
push
jge
fadds
lea
mov
mov
push
adc
inc
aad
mov
mov
fwait
inc
jmp
stc
les
shl
insl
lock
in
rorb
push
push
sti
pop
or
sbb
fdivrl
dec
movsl
sub
notl
or
cmp
add
les
mov
bound
mov
xchg
cmp
scas
sub
cmp
cmpsb
xor
xor
mov
mov
cmp
mov
mov
repnz
add
fcomps
test
xchg
adc
sti
jl
and
xchg
gs
mov
mov
push
aad
sbb
shrb
add
mov
iret
add
push
dec
int3
xor
data16
cwtl
inc
das
jb
mov
cmp
mov
clc
pop
dec
mov
int3
std
xchg
lds
xorb
fcmovu
inc
cmpxchg
repz
movsl
xchg
imulb
lods
ds
leave
mov
and
mov
push
dec
or
mov
xor
mov
sub
mov
cmp
popa
sub
cli
add
std
gs
pop
jl
cmp
mov
xchg
popa
and
cmp
mov
cmp
cmp
xor
mov
mov
sbb
pop
into
fidivrs
ss
scas
adc
outsb
inc
mov
push
sti
push
jp
insl
adc
nop
cmp
mov
in
inc
mov
push
lock
mov
adc
inc
adc
inc
dec
xchg
cmp
xchg
and
andl
adcl
shrb
out
jae
mov
lcall
or
ds
push
xchg
inc
aas
test
xchg
xor
loope
iret
sub
stos
movsl
adc
nop
popf
mov
lcall
ret
adc
addr16
jnp
sbb
push
xor
fsub
arpl
subb
stos
inc
test
popa
call
lcall
addr16
mov
lret
pusha
jmp
lea
push
mov
jle
in
lcall
lahf
call
icebp
outsb
in
cmpsb
das
outsb
in
aam
in
imul
shll
mov
gs
mov
add
pop
mov
pusha
stc
sbb
sahf
in
push
cli
ljmp
fxch
ds
int3
jnp
xor
push
test
jl
cmpsb
xor
imul
cs
mov
mov
xlat
mov
cmpsl
movsl
or
mulb
rcll
je
pop
lret
in
lods
adc
mov
out
inc
daa
mov
hlt
mov
lods
lods
dec
xchg
mov
into
ret
daa
adc
fstps
jae
test
mov
mov
out
jg
gs
adc
enter
aas
adc
imul
xchg
inc
sbb
loopne
dec
out
stos
rcll
sbb
mov
outsb
or
sbb
addl
push
push
fcmovb
inc
lret
pop
pop
add
fidivrl
cmpsb
add
inc
or
sbb
sti
mov
xchg
mov
mov
cld
pop
in
sub
add
pusha
jbe
popa
pop
mov
jnp
cwtl
aas
shll
sbb
inc
adc
inc
dec
push
scas
push
xchg
inc
xor
sbb
mov
icebp
jg
pop
stc
shlb
out
adc
leave
repnz
cld
pop
add
sbb
or
movsl
adc
repz
dec
cmp
xor
iret
data16
call
aad
push
lds
mov
mov
jne
jne
outsb
sub
orl
push
mov
mov
xchg
shr
je
inc
mov
inc
aad
inc
in
adc
mov
mov
sahf
mov
test
into
mov
and
inc
jp
inc
pop
fwait
push
in
leave
dec
adc
mov
inc
popf
jg
ds
into
xchg
test
mov
rorb
fs
fcmove
push
iret
push
adc
mov
push
xchg
pop
std
rorl
inc
adc
loopne
sbbb
lcall
mov
cmc
fs
les
ret
sarb
fstpl
sbb
mov
fildll
mov
scas
add
stos
daa
fisubl
mov
ss
push
push
mov
and
cmp
cmp
mov
int3
sub
or
sub
pop
idivl
cmp
mov
cmp
jle
xchg
inc
imul
jbe
imul
add
dec
fidivrl
jns
addl
pop
lahf
inc
jmp
out
jae
cli
int3
xchg
scas
mov
mov
sub
negl
cmp
jnp
push
mov
lds
adc
vmulsd
div
pop
inc
adc
inc
xchg
cmp
sub
mov
cmpsl
cld
mov
test
jo
pop
mov
scas
incb
lods
inc
adc
sbbb
xor
xor
pop
sub
outsb
or
insb
out
fldenv
aam
adc
jnp
fildl
shrb
adc
jl
jo
outsb
gs
mov
mov
mov
adc
out
fstpt
cld
pop
ret
mov
ret
or
push
leave
mov
arpl
fisubrs
sbb
dec
push
xchg
ds
fwait
sbb
in
jne
mov
or
xlat
mov
loopne
sub
mov
cmp
jl
xchg
mov
jbe
add
push
lds
pop
jns
fistpl
std
pop
stos
dec
xchg
cmp
mov
sub
fistl
sub
jae
lods
xchg
jle
pusha
mov
in
dec
mov
push
in
outsl
xchg
aas
movsl
pop
outsb
call
lock
add
cmp
mov
and
pop
xchg
mov
mov
lea
stc
xchg
ds
and
jbe
cli
bnd
addb
lret
int3
xchg
aam
inc
push
rolb
mov
sbb
push
dec
lcall
inc
jb
mov
mov
icebp
pop
out
sbb
test
inc
das
mov
and
bound
loope
mov
inc
adc
xchg
add
insb
ss
lret
cli
repz
sbb
nop
test
mov
dec
and
jo
xchg
pop
cli
enter
cmp
cld
xchg
dec
mov
mov
mov
jne
imul
jo
xchg
xor
or
mov
imul
mov
mulb
xlat
fwait
cmp
fsubrl
test
repnz
mov
outsl
outsl
in
loopne
jnp
stos
sti
scas
sub
mov
cmp
ret
sbb
aad
into
lcall
inc
sub
fsub
jno
sub
addr16
into
insl
mull
adc
adcb
insl
out
stos
adc
out
out
cmc
arpl
repnz
add
or
movsl
fstl
mov
ss
mov
je
add
sbb
mov
cmpsb
test
fdivrs
mov
pop
push
jp
sbb
int3
mov
inc
sarl
mov
lret
bound
test
jbe
leave
xchg
add
or
xchg
cmp
pop
lods
xor
mov
push
aas
into
ret
xchg
mov
test
xlat
pop
mov
pop
mov
jns
jp
fisttpl
shrb
jno
jl
push
neg
outsb
xor
mov
scas
negb
dec
adc
jp
data16
mov
int
sbb
xchg
sbb
push
cld
sbb
pop
add
dec
dec
adc
cltd
leave
xchg
jo
push
ss
insl
sbb
or
push
cpuid
xor
pop
push
addr16
mov
mov
mov
inc
jp
push
jno
xor
flds
mov
mov
das
xchg
fcomps
cmp
push
push
xor
sub
mov
mov
push
testl
sbb
sbb
addb
imul
mov
push
and
in
movsl
stos
xor
pop
add
push
sbb
test
sbb
mov
dec
adc
fisubrl
popf
inc
add
cmp
loope
add
enter
and
inc
jmp
js
loop
mov
ret
add
sbb
pop
mov
cmp
cmp
cli
sarb
sbb
or
lahf
ss
cwtl
das
xchg
xchg
dec
in
pop
aad
cmp
repz
adc
add
xor
xor
ljmp
jno
test
insb
add
leave
es
testl
aas
jl
int3
arpl
ret
ljmp
pop
or
je
daa
mov
mov
ds
push
fs
aas
cmp
pusha
sbbb
mov
mov
ficomps
push
cmp
mov
arpl
je
test
imul
repnz
add
mov
sub
cmpsl
pop
push
cmp
test
lods
movsl
push
in
into
dec
jecxz
divl
and
push
dec
xchg
sub
and
cmpsl
ds
lock
and
pop
dec
inc
in
xorl
jnp
xchg
or
bnd
and
imul
xchg
mov
mov
sbbb
or
xor
xor
mov
dec
jecxz
fdivl
add
cli
xchg
pop
pop
cmc
mov
stos
adc
add
xor
das
and
push
dec
out
je
or
nop
daa
stc
cmc
mov
daa
sbb
inc
jp
int
mov
shr
repz
in
and
add
cwtl
xchg
and
ljmp
cld
cmp
pop
sbbl
mov
mov
fcompl
push
aaa
das
mov
popa
pop
fidivs
adc
mov
cld
xchg
fst
repz
lcall
mov
sub
test
push
cmp
cmpb
lods
mov
dec
in
cmc
je
daa
and
dec
xchg
sub
mov
movsl
fwait
mov
int
test
clc
out
into
and
pop
dec
inc
in
xorl
jl
xchg
or
icebp
out
mov
inc
cmp
imul
sti
mov
faddl
adc
das
mov
xor
mov
push
loop
fdivl
add
outsl
ss
xchg
pop
push
testb
stos
adc
fcmovne
ss
cld
xor
sub
dec
push
out
jb
or
xchg
sub
repz
and
inc
stos
inc
js
into
gs
cltd
enter
in
xor
out
push
adc
mov
jo
sub
xchg
xchg
and
call
or
cmp
test
mov
mov
xor
rcrl
mov
jbe
adc
mov
std
xchg
fcmovnbe
hlt
mov
daa
adc
cmpb
stos
mov
dec
in
repz
and
inc
xchg
sub
mov
mov
les
pushw
sbb
pop
dec
aas
in
test
out
popf
xchg
or
out
in
rclb
inc
fisubs
inc
fcoms
pop
mul
fiaddl
adc
pop
pop
pushf
xor
scas
mov
je
add
jo
es
xchg
pop
push
testl
fxch
aaa
into
cld
cli
xor
sub
push
in
dec
dec
push
call
mov
ret
xchg
sub
icebp
lea
pop
mov
dec
inc
stos
inc
jbe
iret
pushfw
xchg
leave
pusha
leave
mov
out
sbb
or
inc
cmp
sub
xchg
and
out
inc
fcoms
or
cmp
pop
mulb
sbb
test
mov
mov
xor
add
pop
xor
mov
ja
jle
outsb
mov
xchg
cmc
mov
sti
sbb
sub
adc
jle
xor
test
pop
out
ror
dec
out
icebp
jbe
and
add
jbe
mov
mov
ret
hlt
ljmp
dec
cmp
out
fwait
nop
or
sarl
adc
and
inc
xor
fbld
inc
fsts
mov
mul
fadds
cmp
mov
xor
jle
push
mov
mov
jne
add
jno
and
xchg
push
push
clc
popl
cmpsb
push
lods
xlat
leave
cmp
cli
clc
xor
sub
out
dec
dec
push
jmp
mov
rcll
and
lods
inc
je
shlb
xchg
lret
mov
call
movsb
inc
cmp
popf
insb
popa
sub
xchg
lea
mov
filds
adc
push
mull
xchg
mov
movsb
cmp
pushf
xor
inc
pop
xor
mov
ja
jge
outsl
scas
movsl
xchg
xlat
shl
lea
stc
sbb
sub
stos
push
dec
cmp
jl
xor
cmpsl
popf
pop
out
into
enter
out
jbe
and
outsl
push
dec
inc
xchg
sub
and
xchg
mov
mov
shlb
adc
out
test
call
mov
in
loopne
rcll
and
fbld
inc
ficoml
mov
clc
jecxz
test
or
mov
xor
scas
stos
mov
jne
fidivl
and
xchg
push
push
clc
popl
push
lods
enter
divl
sub
push
out
dec
dec
push
jmp
lahf
fwait
jo
int
xchg
sub
out
mov
inc
inc
lods
inc
jae
shlb
xchg
lret
mov
call
movsb
aas
cmp
popf
imul
xchg
mov
mov
fiadds
syscall
push
mull
xchg
mov
movsb
cmp
aad
xor
inc
pop
xor
mov
ja
jl
outsl
scas
movsb
xchg
iret
testb
and
push
dec
cmp
jnp
xor
cmpsb
pushf
pop
out
int
push
out
out
jbe
and
outsl
push
dec
inc
xchg
sub
lea
xchg
mov
mov
inc
repnz
sbb
lret
cmp
test
jg
lea
mov
fildll
rcll
and
fbld
inc
ficoml
mov
clc
loop
test
pop
add
pop
sub
xor
lods
stos
mov
jne
fidivl
and
xchg
push
push
clc
popl
movsb
push
lods
aad
cmp
clc
divb
daa
sbb
dec
dec
push
jmp
sahf
lcall
icebp
in
mov
inc
inc
lods
inc
jb
shlb
xchg
lret
mov
call
movsb
cmp
popf
push
sub
nop
mov
mov
fldl
push
add
pushl
push
xchg
mov
movsb
cmp
aam
xor
std
ret
sub
ja
jnp
outsl
lods
mov
testb
and
push
dec
cmp
jp
xor
movsl
fwait
pop
out
int3
push
out
in
jbe
pop
sbb
dec
inc
xchg
sub
lea
xchg
mov
lds
shlb
adc
popa
inc
cmp
test
call
mov
ljmp
mov
popa
pop
inc
fimull
mov
clc
loope
test
push
add
cmp
sahf
xor
lods
test
fidivs
cld
fidivl
and
xchg
push
dec
clc
popl
mov
cmp
div
xor
and
inc
push
jmp
popf
cwtl
jo
lret
sub
jmp
and
inc
lods
inc
jo
shrl
xchg
lret
mov
call
movsl
cmp
pop
sub
mov
fildl
or
imul
pop
push
xchg
mov
adc
fcmovnbe
pushf
xor
mov
js
jns
outsl
stos
mov
testb
and
sarb
xor
mov
les
cmc
in
ja
push
pop
jo
dec
aas
xchg
sub
push
and
les
shrl
adc
bound
out
xchg
jmp
movsb
mov
ret
es
pusha
pop
inc
fisttpl
scas
stc
test
mov
xchg
pop
stos
cmpsl
mov
jbe
cli
and
xchg
push
dec
stc
nop
jg
sbb
movsb
mov
cmp
div
xor
lock
inc
push
ljmp
jno
enter
out
jmp
mov
inc
cmp
inc
outsb
shrb
lret
jmp
or
cmpsb
cmp
pop
sahf
pop
sub
mov
loopne
inc
fimull
add
xor
popa
clc
pop
push
mov
xchg
push
scas
test
cmp
add
les
and
push
push
dec
loop
xorl
xchg
ror
testl
dec
inc
cmp
ja
xor
mov
ret
repz
inc
cmp
es
inc
in
jecxz
imul
ljmp
mov
lahf
out
sub
or
daa
mov
pop
pop
inc
fmull
lods
arpl
fst
xchg
xor
lahf
test
pop
stos
movsl
mov
ja
clc
pop
call
jge
sbb
scas
iret
les
shl
lock
icebp
dec
inc
push
ljmp
jno
mov
sbb
mov
inc
cmp
push
lret
bound
loopne
adcb
adc
fs
lds
scas
dec
jecxz
xlat
inc
fimull
add
xor
popa
clc
pop
push
mov
xchg
push
lods
cmpsl
cmpsl
ds
popf
xor
sti
lds
mov
jp
jne
jo
mov
testl
dec
inc
cmp
lret
lahf
xchg
pop
repnz
icebp
jmp
jno
inc
cmp
outsb
data16
es
mov
sarl
push
or
icebp
mov
ljmp
mov
lahf
in
sub
mov
pop
pop
inc
fmull
stos
arpl
fcmovnbe
xchg
add
sbbl
push
push
lahf
cmpb
stos
mov
loope
std
neg
jb
pop
add
jnp
push
mov
pushf
pop
scas
int
cmp
hlt
out
xor
repnz
inc
push
ljmp
jno
les
es
movzbl
cmp
imul
mov
fsubrp
adcb
adc
bound
mov
dec
in
aad
fiaddl
add
daa
popa
clc
pop
push
mov
test
push
stos
cmpsb
test
fmul
popf
xor
stc
pop
sub
mov
jnp
jae
jno
lahf
add
clc
icebp
and
dec
inc
ds
insb
xor
repz
mov
jp
sbb
jb
inc
cmp
daa
xchg
lea
inc
jmp
or
fs
pop
jmp
nop
xchg
cmpsl
mov
or
or
mov
pop
push
inc
fldl
test
sti
fxch
mov
add
sbbb
and
aaa
xorb
test
mov
jns
hlt
fdivl
sbb
cli
xchg
jns
pop
mov
lcall
repnz
ss
adc
repz
ds
jmp
data16
cwtl
nop
jb
ret
das
jmp
nop
daa
adc
ss
inc
push
mov
arpl
fsubr
orl
das
or
mov
dec
in
roll
insb
add
es
stc
push
push
mov
cmpl
stos
movsb
test
lret
sahf
xor
sub
mov
jnp
jb
jb
popf
add
imul
and
dec
inc
ds
imul
pushf
xchg
pop
repz
jp
pop
adc
inc
cmp
sub
mov
inc
call
or
gs
repnz
in
orl
or
pop
add
shlb
jecxz
push
inc
fiadds
cmpsl
gs
fmul
mov
stc
sbbl
and
cmp
lds
mov
jp
repnz
add
ja
and
leave
mov
aaa
into
sbb
pop
hlt
inc
cmp
in
insl
fs
xchg
mov
shlb
sub
or
inc
pop
insl
nop
xchg
fs
orb
mov
mov
mov
fcmovbe
inc
faddl
cld
insl
add
and
cli
push
dec
mov
xorl
inc
aam
lahf
ss
cmc
pop
daa
sbb
in
jp
fdivl
fwait
add
cmc
in
and
dec
aas
aas
jo
aaa
into
lcall
in
in
jecxz
adc
ss
xor
xchg
sub
mov
inc
out
aad
push
or
data16
repz
in
test
scas
or
add
es
in
push
dec
filds
data16
lret
mov
std
testl
jl
pop
movsb
popf
rclb
in
div
fidivs
sbb
lcall
and
mov
cmp
sbb
pop
cmc
inc
cmp
imul
xchg
mov
mov
xor
fists
push
cmp
mov
fs
xlat
outsb
mov
cmc
mov
fsubr
orl
adc
xor
or
xchg
mov
fmul
inc
fldl
cli
outsb
add
push
dec
mov
jg
sbbb
mov
mov
pop
and
inc
out
js
fnsave
add
lret
xchg
repz
mov
inc
cmp
cmp
cwtl
pop
cmc
sarb
adc
or
or
xor
xor
xchg
sub
mov
dec
in
insl
or
shlb
sub
out
test
lods
or
fst
xor
add
sub
xor
dec
filds
mov
mov
cld
cmc
test
daa
push
test
cmp
pop
mov
in
imul
fidivs
sbb
dec
inc
cld
xchg
jae
and
lds
iret
pop
maxps
inc
cmp
imul
or
xchg
sub
or
inc
bound
outsl
lea
testb
add
mov
test
mov
xlat
int
clc
outsl
push
sub
gs
push
dec
lea
sahf
stos
inc
rol
mov
pusha
and
rclb
out
jbe
fidivs
xchg
add
xchg
icebp
jmp
sbb
insb
gs
xchg
lea
mov
fistpll
adc
jbe
cmp
fwait
xor
sub
mov
dec
loop
xlat
outsb
or
push
pop
push
out
xchg
stos
or
enter
ret
dec
out
dec
dec
loopne
jne
add
mov
mov
cli
repz
inc
mov
pop
mov
ret
hlt
in
fbstp
push
add
xchg
jno
and
ret
mov
cmp
adc
ss
out
addr16
jle
xchg
mov
mov
fistl
push
cmp
mov
pusha
pop
fnstenv
or
mov
aam
test
add
lods
xor
or
cmpl
stos
movsb
push
jmp
cld
divb
sub
data16
dec
dec
mov
mov
ret
mov
popa
and
rcrl
call
jbe
xchg
push
popf
mov
and
sbb
sbb
inc
cmp
push
cmp
xchg
mov
mov
fnstsw
invd
ja
cmp
pushf
xor
xchg
sub
cmpl
loopne
fsubrs
add
imul
lock
test
movsl
fxch
xor
cli
sub
sub
push
call
jge
outsl
push
movsl
sahf
push
and
lock
dec
inc
movsb
cmp
lret
xchg
ret
shr
bnd
pop
sahf
inc
cmp
xchg
outsb
and
sbb
sarb
rcll
or
cmp
pop
out
fs
adcb
test
mov
sahf
xor
or
dec
pop
push
jle
addr16
stc
nop
out
test
pop
scas
das
and
xor
shrl
dec
hlt
jno
es
decb
es
test
lcall
repz
lret
bound
adc
jmp
ja
xchg
pop
sahf
les
and
mov
aaa
inc
fisubrl
cmp
xchg
mov
mov
fstpt
or
cs
xor
pop
xchg
sub
mov
mov
fnstenv
add
push
daa
testl
stos
cmpsb
xsha256
cmpsb
xlat
int3
xor
std
clc
sub
jmp
jnp
jo
mov
les
push
and
lods
inc
dec
inc
movsl
cmp
imul
popf
xchg
ret
pop
mov
loope
sbb
or
insl
fs
mov
loopne
rclb
or
cmp
pop
lock
sbb
scas
lahf
ss
xchg
sub
add
dec
pop
push
fdivl
jge
push
fcmovbe
out
xchg
cld
sbb
push
dec
ss
jbe
ret
push
jmp
enter
bnd
and
push
daa
ja
xchg
lret
cmp
jmp
arpl
ds
mov
xchg
movsb
inc
fwait
cli
adc
pusha
sub
outsb
loope
dec
js
jb
fcmovne
sub
aam
sahf
push
jp
fucom
testl
roll
or
jb
xchg
cmp
les
aad
mov
stos
andl
mov
xor
dec
mov
lcall
cmp
inc
jg
lret
lds
mov
jmp
xchg
popa
fwait
cmc
stos
imul
in
cld
mov
pusha
push
test
xchg
and
cwtl
out
or
loop
aad
hlt
aam
leave
sarl
mov
leave
test
or
test
lods
rcl
mov
or
dec
lret
jecxz
or
fldcw
xchg
mov
mov
rcll
or
dec
js
fdivs
push
movsb
int3
pop
lds
icebp
adc
mov
js
mov
jno
dec
sbb
jo
mov
lock
dec
inc
popf
fwait
test
pop
inc
fyl2xp1
and
les
roll
inc
enter
mov
jmp
and
mov
dec
pop
jge
insb
mov
xchg
fxch
scas
data16
sub
adc
xchg
lods
mov
rcll
mov
aam
divb
mov
jne
jecxz
cwtl
push
fisttpl
sbb
xchg
jp
call
ja
scas
call
xchg
leave
test
mov
cmp
xchg
dec
dec
jecxz
xor
insl
fisttpl
mov
push
lods
mov
ljmp
std
push
mov
ljmp
popf
cwtl
and
aam
mov
ds
movsl
mov
es
lods
and
pop
mov
xor
mov
adc
fildll
scas
mov
cwtl
sbb
mov
sub
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
or
push
scas
mov
pop
xchg
lcall
sbb
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
test
inc
mov
rcrl
out
jecxz
lahf
nop
mov
shl
inc
call
data16
icebp
clc
imul
or
out
in
pop
push
adc
pop
stos
imul
pop
test
dec
xchg
mov
push
cmc
inc
ss
mov
cmp
rcr
test
mov
cmp
sbb
cmp
adc
pushl
icebp
mov
xchg
pop
fcmovnu
dec
and
push
fcmovnu
test
nop
mov
push
inc
outsl
jno
pop
dec
inc
jge
dec
sti
push
adc
or
sahf
adc
cmp
push
cmp
je
mov
mov
mov
cwtl
mov
sahf
jge
jecxz
or
inc
and
or
fistpl
mov
mov
les
sbb
mov
mov
sbb
xor
xlat
mov
fs
or
cmp
mov
sarb
mov
inc
and
rolb
jno
xchg
sbb
in
jl
inc
out
repz
loop
sub
je
sar
stos
fisubrs
sub
sbb
or
jp
leave
sub
jno
or
xchg
rorb
bound
test
frstor
xor
xchg
mov
inc
sub
adc
dec
jl
test
movl
pop
xchg
leave
xlat
gs
rcrb
cwtl
out
mov
outsl
nop
fidivs
and
mov
pop
xchg
fs
pop
mov
push
data16
scas
insl
add
fwait
and
inc
orb
mov
sahf
or
sarl
mov
fs
test
lods
adc
in
xor
lock
mov
mov
and
sub
lock
pusha
test
pop
dec
lds
and
in
pushf
jg
negb
ss
mov
mov
in
ljmp
