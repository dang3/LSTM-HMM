lret
add
out
add
out
add
out
add
add
add
in
add
in
add
in
add
in
add
add
and
add
xor
add
inc
out
add
add
jb
add
and
add
out
add
add
call
out
add
out
add
add
inc
out
add
add
add
sahf
in
add
add
push
add
pop
in
add
add
in
add
jmp
add
jmp
add
jmp
add
add
pop
jmp
add
add
add
push
add
jp
add
xchg
add
cwtl
call
add
enter
add
call
call
add
sbb
add
xor
add
dec
jmp
add
jl
add
mov
add
cmpsb
jmp
add
jmp
add
loopne
add
out
jmp
add
adc
add
and
add
cmp
add
inc
ljmp
ljmp
mov
add
mov
ljmp
in
add
hlt
ljmp
or
add
push
jmp
add
jmp
add
jmp
add
add
dec
jmp
add
add
add
add
or
add
push
add
orb
orb
add
adc
add
pop
add
andb
add
push
call
add
jp
inc
add
mov
inc
add
add
add
daa
mov
dec
mov
cld
mov
sub
push
sub
nop
ljmp
add
add
add
add
stos
lahf
jb
sub
push
add
neg
jge
adc
mov
add
xor
imul
mov
packuswb
mov
sti
shl
xchg
jne
aas
hlt
call
pop
pusha
mov
push
pop
fisttpl
call
ds
inc
cs
dec
movsl
enter
add
add
add
add
fildll
inc
in
inc
add
add
add
add
in
mov
or
sti
sub
jo
loop
scas
or
jno
int
dec
jae
push
mov
pusha
cmp
sbb
fsubl
repz
arpl
push
push
mov
rorb
dec
sbb
xor
add
push
fbstp
loope
rclb
add
add
inc
rcrl
test
ret
mov
subl
fucomi
jns
lods
or
or
sbb
scas
js
push
push
pop
xchg
cmp
cli
sti
push
mov
and
jle
mov
inc
rorl
aas
dec
adc
adc
add
jb
xchg
nop
aaa
rcrb
push
adc
mov
fs
movb
add
add
add
aas
mov
ljmp
popf
enter
stos
and
push
shll
orb
cmc
pop
sub
jb
and
jmp
adc
dec
jne
sub
loop
xchg
scas
and
dec
pop
lods
jmp
dec
xchg
imul
add
add
add
xchg
dec
sub
jbe,pn
jbe
call
call
cli
testb
jb
mov
nop
cltd
sbb
bound
addr16
or
mov
sub
jno
xchg
inc
xchg
cmp
lret
cmp
push
add
dec
js
pop
add
or
sti
clc
xor
pop
repnz
les
pop
add
repnz
jge
xor
mov
add
mov
adc
sbb
dec
xchg
jbe
sub
and
sub
shlb
fstl
lret
jmp
out
push
insl
sub
sub
add
js
negb
mov
mov
xchg
push
fisubl
movsb
pop
loopne
out
cld
scas
mov
and
pushf
add
add
in
arpl
dec
cmp
mov
inc
xchg
push
or
loope
mov
lret
cmp
dec
fs
je,pn
mov
fstps
inc
pop
push
pusha
inc
cld
and
adc
jb
test
and
mov
cmpsb
int3
cmp
mov
jne
add
add
add
add
and
dec
call
adc
add
gs
cmp
push
fs
push
into
push
fadds
add
add
add
push
mov
add
cmp
push
xor
fiaddl
das
cmp
xor
jne
hlt
jns
push
inc
lods
cmp
push
ret
popf
cmc
cmp
shrl
or
add
int
movsl
les
jne
ret
test
xchg
out
bound
jb
add
movsl
insl
jbe
pop
sub
jp
and
call
call
or
daa
xor
out
cs
shlb
lret
and
adc
in
xor
add
ret
xor
pop
or
dec
aaa
dec
gs
js
jp
mov
cmpl
xchg
and
jg
push
ss
out
sbb
push
arpl
or
stos
or
lret
xor
add
add
adc
jp
and
jp
inc
and
cmpsb
insl
cs
jb
lret
imul
cmp
push
sarb
mulb
sahf
lret
cli
rolb
mov
add
addr16
pop
pop
iret
cmp
cmp
mov
sub
add
push
movsl
lods
push
stos
stc
repnz
add
add
aad
lret
lea
add
and
cmp
fdivr
pop
add
call
or
pop
mov
jmp
ror
xor
ds
jb
pop
stc
mov
xlat
push
jge
call
call
cs
sbb
add
add
or
ret
inc
cltd
sti
stc
jmp
mov
dec
dec
mov
pop
mov
mov
mov
outsb
mov
std
loopne
mov
aad
jbe
add
cmp
jl
xchg
gs
js
out
leave
jno
lea
push
cmp
out
movsl
inc
cltd
aaa
stc
mov
push
sbb
mov
call
call
xor
sbb
mov
pop
je
ret
jge
mov
sbbl
ja
add
push
push
add
add
add
stc
add
call
test
lods
dec
cmp
lcall
pop
scas
jg
subl
fbstp
shll
lret
data16
adc
mov
fldt
sahf
sub
push
pop
adc
dec
rolb
add
cmp
cmp
sub
jl
leave
push
sbb
cmp
add
add
xor
imull
test
cs
fs
add
in
test
mov
jge
push
push
fnsave
out
test
dec
jbe
nop
enter
outsl
imul
stos
rcrl
pop
test
mov
cmpsb
enter
mov
loop
test
add
daa
fcomps
leave
mov
arpl
push
xchg
and
sbb
movl
add
jl
sbb
mov
lcall
repnz
mov
or
movsl
and
lahf
js
fwait
add
imul
jecxz
inc
insb
insl
and
cmpps
adc
mov
and
arpl
cmp
das
dec
imul
or
daa
dec
xor
push
sub
cmpsl
mov
test
rol
fnstenv
mov
jb
imul
or
add
add
add
outsb
fnsave
cmp
insl
xchg
data16
fmull
imul
cmp
mov
call
add
add
add
push
std
add
imull
mov
mov
call
call
repnz
aas
adc
add
add
add
inc
call
call
call
orl
xor
lods
sub
mov
pop
inc
dec
sub
xor
jg
mov
add
mov
pop
sbb
add
xor
rcrb
push
xor
fisubrs
xchg
call
call
xor
jno
sub
adc
add
add
icebp
jg
dec
add
pop
pop
cmpsb
pusha
sub
aas
stos
test
addb
fisubl
pop
cmc
lds
cmpsb
scas
xlat
pop
lcall
add
add
add
sbb
jp
push
and
mov
pop
mov
repnz
ljmp
mov
cmpsb
adcb
sub
imul
insb
sbb
pop
inc
adc
jo
hlt
inc
bts
sbb
dec
dec
mov
add
adc
or
lahf
aas
roll
xchg
jmp
cltd
push
add
add
add
push
ret
adc
xchg
shrl
add
sahf
out
mov
and
in
xchg
adc
mov
insl
aam
shll
add
add
mov
repz
push
add
cltd
sub
pop
mov
and
cmp
pop
lahf
mov
imul
add
push
push
mov
call
call
mov
jge
dec
jns
add
cld
sub
insl
movsb
rcrb
out
ds
inc
cmp
dec
mov
mov
scas
pop
pushf
mov
fwait
jecxz
or
push
jmp
and
cmp
xor
adc
fnstcw
pop
adc
add
add
jne
and
ja
xor
xchg
add
mov
jne
adc
sbb
fmulp
mov
lock
mov
rcrb
pop
inc
js
out
xlat
shrb
imul
mov
mov
mov
jb
inc
aad
fwait
repz
inc
pop
and
pop
mov
stc
lds
sbb
lods
cmp
dec
and
dec
cmpsl
scas
jmp
or
xchg
fcmovne
push
add
add
add
add
scas
gs
xor
test
jp,pt
adc
jo
shll
nop
or
shr
add
inc
xor
xchg
xchg
icebp
mov
cmp
scas
enter
sbb
adc
push
mov
jns
dec
hlt
xchg
mov
push
or
scas
stos
add
cltd
fisubrs
mov
dec
dec
inc
push
daa
xchg
jne
fldt
call
cmp
adc
std
push
popf
push
push
dec
test
data16
das
mov
notl
popa
pop
cmp
imul
ret
addb
mov
aam
lods
lret
push
cli
cmp
imulb
je
lods
jle
lods
adc
add
add
test
add
lret
mov
mov
bound
mov
add
add
add
add
sbb
sub
mov
cmpb
adc
add
sub
or
sti
insb
dec
push
adc
mov
xor
repz
in
fisttps
push
repnz
int3
inc
sbb
jbe
cmpsb
xchg
sahf
jge
in
mov
add
cmp
sbb
add
in
sub
fcmovnbe
pop
mov
mov
inc
xchg
adc
call
sbb
xor
and
adc
mov
sbb
xor
dec
xor
dec
negb
jl
add
add
add
add
add
int3
icebp
je
push
or
inc
mov
dec
daa
test
inc
shll
mov
add
stc
sub
shll
add
add
test
out
mov
pop
mov
jno
repz
xlat
aam
and
psubsw
add
add
add
mov
add
pop
call
sub
das
nop
mov
ds
int
xor
and
pop
push
sub
repnz
repz
or
add
mov
jmp
push
stos
pop
mov
dec
jp
repnz
adc
loopne
lock
movsb
inc
xor
add
add
add
add
push
push
dec
inc
call
call
xchg
sbb
lea
popa
es
out
or
and
pop
cmp
pop
pop
xor
fwait
iret
dec
je
data16
add
push
or
rolb
dec
bound
mov
add
aam
add
ret
imul
mov
into
fbld
or
bound
icebp
aaa
cmp
in
jmp
fists
add
add
adc
and
adc
loop
add
clc
jae
inc
xchg
sbb
cmpsb
es
jne
popa
loop
test
mov
shlb
inc
outsl
popl
or
ret
mov
jecxz
icebp
add
mov
xor
inc
rclb
js
or
add
movsl
adc
adc
inc
cmc
imul
call
call
push
ret
call
call
call
dec
cmpsb
rcr
daa
jb
fistpl
xor
cmpsb
cmpsb
push
pop
shrl
out
dec
xlat
nop
insl
or
jnp
ljmp
fimuls
rcrl
xchg
sbb
aaa
mov
mov
pop
pop
not
fwait
fs
fildl
lea
add
add
add
add
push
sub
arpl
mov
or
lea
push
stos
les
sbb
add
add
push
cld
push
fdivl
jne
stos
sahf
je
pop
dec
repnz
and
dec
into
mov
sbb
ret
pop
aam
inc
loopne
lcall
push
mov
jmp
mov
arpl
test
adc
jne
add
repz
movsb
call
add
and
leave
ja
test
pushf
or
shl
sti
ret
lods
ret
pop
out
fs
push
iret
fxch
out
adc
sbb
xchg
push
and
je
sbb
leave
mov
cmp
popa
ljmp
push
jle
push
imul
xchg
hlt
mov
or
call
call
add
daa
in
push
mov
imul
add
mov
or
xchg
mov
add
dec
mov
add
subl
push
jp
sub
add
pop
adc
dec
push
add
add
lret
flds
sub
movsl
movsl
enter
jo
shlb
jo
pop
ret
ss
cmp
push
mov
leave
pop
inc
imul
inc
xor
imul
cmp
sub
pop
inc
imul
push
scas
inc
iret
aas
fnsave
add
pop
jge
pop
xchg
and
fwait
cmpsl
mov
fistpll
dec
mov
cli
mov
lods
test
or
pop
imulb
stc
leave
inc
or
sti
cmc
add
add
xchg
sbb
add
add
add
pop
adc
fbstp
into
push
adc
xor
pop
in
pop
mov
push
lds
xor
add
inc
cwtl
jne
jo
adc
lahf
bnd
push
dec
or
add
sbb
bound
jnp
jne
add
jge
xchg
xchg
mov
cmpsb
mov
jecxz
in
aas
popa
stos
lahf
loop
inc
int
sub
inc
jbe
cwtl
xchg
enter
in
adcl
sub
comiss
in
xor
repz
andb
lahf
dec
xchg
cmp
dec
inc
mov
lahf
and
add
stos
mov
add
add
add
dec
ds
mov
hlt
sbb
mov
aam
js
dec
cld
popa
and
call
call
cmp
push
fnstcw
add
push
call
call
cmp
gs
jnp
andl
iret
jne
std
sub
inc
sub
sub
out
test
cld
cmp
imul
mov
jae
pop
sbb
fistpl
loop
fucomip
push
mov
test
out
pop
xchg
cmc
leave
xor
jmp
jo
or
repnz
add
and
mov
sbb
mov
sbb
jmp
push
push
jmp
fucomp
pop
stos
fisubrl
in
sbb
cmp
imul
cmpsl
jbe
dec
cmp
mov
push
pop
lods
aaa
jae
pop
or
les
mov
xchg
je
add
add
xchg
cmp
mov
test
sub
out
fidivs
push
push
es
push
ffreep
lock
in
dec
adc
mov
or
out
stos
jmp
cmc
xor
or
sbb
add
sbb
dec
ljmp
int
push
push
jbe
add
dec
int3
lret
scas
inc
add
mov
imul
sbb
repnz
jbe
cmp
ja
push
sbb
add
enter
cld
lods
mov
stos
mov
cmp
lret
lods
sbb
fucomip
add
add
add
sbbb
aas
dec
pusha
sub
xor
cld
jmp
nop
jno
subb
xor
lahf
jle
jp
outsb
xchg
out
jecxz
and
and
call
call
nop
jo
adc
add
add
lock
sbb
adc
lds
jg
or
xchg
and
inc
mov
push
scas
push
orl
add
push
cmp
add
pop
and
mov
inc
pop
mov
dec
jo
inc
mov
add
xor
mov
call
call
call
jae
hlt
pop
dec
pop
arpl
fstl
icebp
or
cmp
je
mov
and
flds
add
add
cmpsb
push
pop
push
cmp
xor
mov
xchg
lahf
in
in
xor
mov
mov
cmpsl
adc
sbb
pop
rolb
js
mov
or
and
push
mov
je
mov
inc
lahf
imul
jg
ja
mov
and
sbb
ffreep
add
add
add
add
insl
call
call
call
push
jmp
push
test
or
aaa
cmp
out
pop
push
add
add
jle
cmp
pop
std
mov
iret
sub
xchg
sub
add
add
add
loopne
cmp
or
inc
dec
ret
add
add
add
add
dec
xchg
repnz
ds
sub
imul
in
mov
int
jecxz
sbb
mov
sti
arpl
push
mov
popf
adc
cmp
xchg
lahf
jnp
or
add
ja
inc
sub
inc
mov
add
sub
popa
xor
add
add
add
ret
fildll
cmpl
iret
bound
and
subb
mov
aam
dec
pushf
sbb
into
lcallw
sbb
scas
add
adc
lock
insb
je
jns
adc
les
pop
pushf
jle
pop
pop
inc
cmc
in
pop
shlb
mov
insl
pop
sub
aad
call
xchg
pop
or
add
xchg
ja
adc
jle
dec
jae
jp
add
fdivrl
push
jae
inc
out
call
call
dec
shlb
mov
push
dec
sub
test
adc
add
add
add
add
adc
sbbl
out
mov
push
mov
adc
adc
and
out
adc
jb
sub
cltd
and
cmc
movsl
testl
rclb
fistpl
inc
adc
push
push
xchg
inc
std
dec
inc
cmp
daa
loop
push
cmp
add
add
mov
std
out
dec
ficoml
cltd
inc
nop
mov
lock
jg
xor
nop
sbb
lahf
lret
test
fs
bound
mov
rcl
inc
add
sbb
pop
test
fldcw
mov
les
push
enter
call
call
call
inc
mov
sbb
jg
inc
mov
cmp
aam
dec
xor
add
cmc
mov
cmp
ljmp
subl
xor
test
sbbl
jns
test
push
xchg
ljmp
icebp
sub
adc
xor
imul
jo
out
out
jnp
xchg
jl
inc
inc
and
loop
in
popa
xor
scas
ljmp
xchg
sbb
bound
add
add
add
pop
xor
mov
dec
pushf
scas
bound
add
add
sbb
push
sub
loope
mov
lahf
dec
shlb
idivl
insb
add
add
push
outsl
push
jno
add
dec
inc
scas
inc
mov
mov
push
sarb
xchg
adc
push
jp
das
mov
sbb
dec
adc
xlat
jne
add
add
add
mov
inc
xchg
aam
call
call
outsb
lahf
hlt
xchg
call
addl
mov
cld
xchg
imulb
aas
int3
jb
cmp
fs
arpl
fwait
adc
leave
mov
out
and
lods
inc
mov
mov
js
mov
inc
mov
mov
adc
adc
imul
scas
jnp
cmp
enter
mov
pop
test
into
sbb
or
les
fdiv
push
add
add
cmp
inc
data16
loope
xor
dec
pop
mov
lock
add
lock
push
jbe
fstpt
ja
int3
das
jae
mov
enter
cmp
clc
sub
mov
and
add
add
add
out
test
dec
adc
pop
fwait
jb
mov
in
or
mov
mov
inc
push
cwtl
andb
fistl
inc
jl
fmul
push
fisubs
or
std
dec
jne
adc
sub
test
out
sub
clc
je
add
out
ss
into
loopne
sahf
xchg
jmp
mov
lcall
leave
mov
sub
aas
lret
jg
scas
ljmp
dec
bound
sbb
and
call
popf
push
mov
push
fld
arpl
jecxz
pop
adc
movsl
decb
cmp
movsb
cmpb
imul
add
out
arpl
dec
inc
loopne
and
stos
mov
ds
sbb
sub
and
ret
pop
pop
mov
pushl
mov
sub
lahf
inc
sub
push
add
push
xchg
add
aam
xlat
sbb
fucomp
mulps
xor
test
insb
cltd
pop
cld
hlt
sub
es
popf
lds
mov
pusha
jge
call
call
insb
inc
imul
js
adc
enter
sbb
xchg
cld
mov
add
add
add
add
inc
rcr
xchg
lret
xor
xchg
mov
or
pop
add
add
add
or
mov
call
call
call
pop
sbb
fbstp
add
mov
fcmovnbe
jmp
cs
cmp
mov
xlat
mov
int3
mov
xchg
jae
mov
xor
test
xchg
loop
cltd
enter
in
rcrl
pusha
das
jbe
stc
push
and
mov
imul
add
call
orb
xchg
add
sbb
ret
mov
aad
add
add
ret
mov
lods
sbb
pop
lcall
sub
int
jnp
notb
jno
mov
add
adc
in
inc
adc
addr16
lds
add
jp
cmp
xor
xchg
inc
testb
call
and
loop
push
inc
std
or
push
sbb
cmc
dec
cmp
or
push
stos
ja
cmp
add
cltd
cmpsb
fcoms
inc
ja
pop
enter
jge
je
sahf
add
add
add
add
jb
gs
gs
pop
push
popa
icebp
jmp
cld
mov
outsb
inc
cld
test
add
inc
fwait
xchg
fwait
or
cli
scas
fs
dec
sub
inc
loop
add
pop
sbb
add
aas
je
sbb
jle
xor
xor
lcall
mov
jno
and
xchg
cmc
pusha
add
mov
push
pop
in
cmp
mull
aam
sbb
dec
dec
test
js
pop
sarb
jle
sbb
lods
repnz
cld
add
mov
xor
xlat
add
insl
outsb
fwait
mov
cmpsl
out
or
stc
dec
repz
pop
or
adc
js
dec
rolb
add
add
or
inc
fmull
cli
clc
inc
push
pop
mov
mul
pushf
xchg
scas
sbb
jae
xor
push
xor
fcom
push
mov
mov
mov
jp
or
fiaddl
mull
popf
lahf
out
cmp
out
lret
xchg
adcl
and
popa
xor
stos
aas
push
pop
or
or
push
add
pop
mov
cmpsl
movsb
nop
jmp
add
adc
movsl
dec
xchg
jne
push
xchg
dec
in
loop
aad
add
aaa
or
int
decb
cmp
sub
pop
cmc
push
xor
fdivl
mov
idiv
xchg
jae
popa
out
iret
scas
in
mov
mov
scas
add
rcl
int
inc
mov
xchg
or
jmp
mov
call
add
scas
pusha
insb
xchg
lea
hlt
add
and
ja
or
insb
add
add
add
add
mov
insb
jae
pop
fcoms
loop
test
pusha
xor
sti
mov
inc
cmpsl
out
fstps
pop
dec
and
bound
adc
mov
adc
jbe
pop
in
mov
insl
stos
pop
mov
jecxz
nop
popf
mov
mov
sbb
in
js
insl
cmp
and
pop
adc
jno
js
arpl
int
inc
jns
ss
xor
push
push
inc
popa
cmc
cmpsl
add
sarl
add
adc
call
call
pop
and
leave
mov
add
add
mov
cwtl
xchg
cwtl
fwait
iret
and
mov
pop
lcall
add
inc
or
cwtl
jge
add
add
inc
dec
jae
sub
fwait
addr16
lahf
stc
xorl
decb
imul
xor
pusha
and
cmp
add
add
add
add
pop
lock
push
push
mov
and
mov
loop
lret
add
repz
push
mov
lods
mov
mov
mov
rolb
mov
mov
jne
push
push
sbb
mov
inc
outsb
ja
rcrl
lcall
bound
repnz
or
push
add
adc
stos
push
std
sbb
pop
and
test
imul
xchg
daa
add
mov
jp
jg
fnstsw
mov
outsb
mov
lock
push
pop
mov
add
mov
addr16
adc
rcl
add
fmull
adc
repnz
inc
iret
andl
movsl
inc
int
pop
jnp
lea
bound
jle,pt
cmc
push
mov
ret
icebp
popf
or
aam
mov
inc
out
std
xchg
aad
ret
inc
out
jecxz
or
add
jl
scas
xor
ret
inc
xor
cli
jge
call
call
call
inc
fnstcw
adc
jb
sub
or
pop
jbe
stos
mov
ret
pop
sub
pop
packuswb
add
leave
subb
jnp
xor
push
fldl
add
fsubrl
xor
jmp
push
cmp
sub
std
cmp
jb
add
push
jae
cli
jbe
xchg
push
test
addr16
add
iret
or
sbb
insl
lock
push
fimull
int3
add
xchg
cli
or
leave
pop
xchg
push
adc
jle
pop
fwait
lret
int
jp
push
sub
inc
sub
cmpsb
ja
push
pop
jle
xor
aam
scas
fildll
adc
lea
addb
xor
xchg
sub
xor
addr16
pop
and
xor
js
adc
jmp
push
leave
sti
insl
inc
adc
imul
add
sbb
cltd
in
stos
hlt
aad
test
jp
mov
les
xchg
push
daa
and
fmul
xchg
loopne
and
sbb
push
and
or
cld
loop
stc
dec
inc
push
pop
je
into
std
vdivss
add
call
call
call
inc
fldl
pushf
jae
sar
loope
daa
pop
fnsave
xchg
in
int
movsl
inc
test
out
in
cvtpi2ps
pop
cmpsl
dec
das
mov
les
mov
out
inc
insb
mov
xchg
test
test
scas
xor
mov
test
mov
mov
cmpsb
pop
add
add
add
push
ret
fidivrl
xor
jae
cmp
cld
xchg
mov
adc
xor
pop
insb
or
push
addr16
pop
xchg
jecxz
movsb
hlt
outsb
aam
cmpsl
cli
jge
jl
ljmp
add
add
add
aas
mov
les
sbb
outsl
jp
iret
mov
stos
ret
lods
out
add
push
xor
add
add
add
add
test
xchg
pop
jecxz
push
add
add
add
add
ja
xor
jns
cmp
adcl
clc
push
das
out
jo
mov
sub
mov
sub
sbb
mov
jecxz
xor
hlt
aas
push
xor
mov
xlat
stos
xchg
push
movsl
out
iret
mov
repnz
in
test
std
std
jb
loopne
push
cmp
push
hlt
inc
push
mov
jno
ds
jmp
pop
pop
inc
push
add
cmpsl
inc
das
call
adc
mov
cmp
cmpsb
mov
add
mov
add
push
and
mov
push
sbb
add
cmp
negl
and
pop
xchg
vandps
pop
int3
mov
inc
out
add
shll
je
xlat
xor
rolb
xor
adc
pop
sbb
call
xor
add
sar
cmp
jo
movsl
pop
or
sub
add
pop
add
xlat
pop
jo
xchg
push
jge
mov
add
add
add
sti
scas
and
push
mov
add
gs
outsb
pop
dec
fisubs
jne
sahf
mov
adc
je
mov
dec
cmp
jb
cs
xchg
and
adc
push
xor
pop
in
jge
aad
lds
xchg
add
add
fcompl
mov
xchg
jne
roll
call
call
call
int3
jno
sub
ficoml
pop
sarb
jge
ret
das
mov
call
xchg
or
adc
movsb
push
lea
stos
cmc
add
push
xchg
call
call
xor
sub
fisttpl
inc
xor
mov
aad
ficoms
xchg
incl
adc
xchg
dec
sarl
and
or
adc
cmp
inc
mov
push
mov
dec
sbb
roll
mov
xor
xchg
addr16
aad
xchg
in
add
fimull
xor
mov
xor
mov
inc
cmp
test
fcom
hlt
icebp
pop
push
push
pop
mov
push
ss
pop
xchg
xor
sub
mov
add
cmp
out
in
xor
jg
xor
push
xchg
fidivrs
cli
push
and
ja
pop
sub
addr16
jl
ds
les
sbb
cltd
in
push
fisubrs
ss
or
dec
lret
and
add
cltd
push
imul
fsubp
and
sbb
loop
jb
out
xchg
ret
adc
scas
jnp
add
icebp
push
scas
xchg
testb
iret
push
pop
mov
push
or
hlt
fcmovb
sbb
dec
insl
dec
push
pop
sbb
push
arpl
mov
pop
ret
pop
push
push
jnp
xchg
jno
icebp
mov
add
ljmp
cmp
mov
mov
call
call
ss
out
sahf
mov
in
orl
add
add
add
in
pop
add
inc
outsl
push
pusha
jne
stos
cmp
leave
arpl
sub
add
cmp
popf
fucomi
xor
add
add
xchg
inc
push
push
push
mov
imul
leave
mov
mov
cmp
jnp
cmp
jmp
or
movsb
sahf
pop
in
scas
mov
lahf
xchg
dec
push
or
jo
pushf
ja
sbb
jmp
dec
or
stc
mov
outsb
push
ffree
push
pop
adc
mov
cmc
add
fdivl
repz
leave
sub
jnp
or
push
lea
add
divl
xor
repz
pop
ret
call
gs
and
inc
or
adc
movsl
test
aas
add
jp
adc
scas
cmp
pusha
test
call
call
js
in
add
add
add
xchg
das
xlat
pop
mov
in
add
rcrb
fs
mov
sub
adc
mov
ljmp
dec
out
push
ljmp
pop
adc
adc
add
add
add
fisubl
xchg
stc
pop
out
out
and
cmp
xor
ret
ja
dec
mov
jo
push
add
lret
pop
jno
xchg
and
loopne
xor
loop
xor
mov
pop
lret
xor
popa
jge
aad
shlb
je
popa
push
adc
add
add
and
and
xor
mov
test
xchg
xor
ret
cmp
xor
mov
and
idivl
mov
lods
inc
add
pop
sub
xchg
inc
data16
js
jp
cmp
jnp
in
fwait
pop
and
add
add
add
add
and
xchg
sub
js
and
mov
xorb
shrb
rcll
lea
push
push
sbb
dec
ss
push
call
test
sahf
push
adc
pop
dec
sbb
cmp
add
lahf
insl
ljmp
cmp
sarl
sti
inc
push
mov
in
faddl
aam
mov
jne
subl
cmp
insl
call
call
mov
aad
jecxz
mov
add
add
add
repnz
bound
ds
mov
adc
and
movsb
push
sahf
add
xor
js
bound
add
and
jl
enter
jo
adc
and
lds
es
sub
mov
int
jne
shlb
fsubrl
push
dec
mov
enter
ja
int
xchg
and
add
lds
in
loop
call
ss
xchg
push
mov
out
in
add
dec
dec
xor
or
push
pop
sub
shll
decl
push
jns
inc
outsl
mov
and
or
outsb
iret
mov
call
call
call
sbb
jbe
add
and
jnp
pop
mov
fld
push
pop
add
into
push
xchg
loopne
sub
xor
jmp
repnz
xchg
into
gs
xorb
stos
cmp
or
pop
mov
or
call
call
or
sub
cmpsb
mov
jno
xor
ret
jle
pop
cld
test
sbb
lret
test
sub
push
ss
fistpll
push
jle
aam
ja
sarb
fidivs
out
inc
or
xor
jne
in
cmp
sbb
xchg
inc
addr16
or
divb
mov
dec
jnp
add
add
add
add
pop
das
and
jle
dec
push
cmp
sub
pop
int3
jecxz
out
cmp
adc
lea
pop
push
pop
call
jg
outsl
mov
cmpsl
xchg
add
push
in
fs
pop
bound
cmpsb
out
push
mov
inc
lret
sub
xorl
push
and
ret
scas
inc
aaa
push
mov
enter
test
flds
or
sub
dec
cmp
call
call
call
sub
sbb
push
pop
mov
nop
and
pop
or
pop
imul
les
aaa
dec
iret
inc
movsl
push
ret
insl
imulb
xor
in
out
ficoms
movsl
xor
xchg
mov
and
inc
cs
add
xor
mov
cmp
cmpsb
or
das
jle
jl
test
add
add
add
cli
mov
inc
and
sub
fstpl
mov
and
xchg
sbb
xchg
les
test
divb
mov
jb
ljmp
cli
dec
xor
insb
pop
mov
mov
add
sbb
mov
cmp
std
outsb
xchg
mov
add
sbb
cltd
and
xchg
int
inc
or
adc
jmp
ss
ljmp
inc
mov
cmp
aaa
lret
xchg
mov
xor
jns
jbe
push
add
xor
cwtl
je
or
adc
shlb
pop
add
pop
sub
rorb
xchg
sub
add
jnp
or
lods
fadd
xchg
aas
int
add
add
pop
mov
pop
jns
ja
out
lock
jmp
inc
cmpsb
pop
cmovg
lret
int
xchg
and
push
sub
inc
cs
jmp
and
pop
loopne
jg
rcr
jp
pop
add
add
add
add
scas
call
call
call
fs
dec
xchg
pop
fmul
lock
sub
insb
xchg
sbb
jae
mov
push
jo
dec
cmp
jae
pop
mov
adc
movsl
cld
sbb
jg
cs
sub
sbb
pop
outsl
xchg
cwtl
inc
imul
xchg
cmpb
add
cmp
lds
xor
pop
test
jb
data16
in
cmp
add
add
mov
mov
cmp
or
or
mov
dec
nop
shrl
push
int
sub
fsts
lret
and
jge
fs
or
mov
adc
call
ss
add
xchg
push
call
call
call
add
add
loopne
jo
inc
loope
sub
shl
clc
push
sub
mov
idivb
add
scas
ljmp
iret
dec
pusha
xor
push
jns
add
pop
inc
inc
daa
adc
add
add
add
add
cmp
dec
push
test
or
adc
push
cld
shl
fcmovbe
inc
push
adcl
gs
adc
std
xchg
test
hlt
xchg
push
lock
rcrb
pop
xor
sub
inc
out
nop
mov
or
mov
xor
add
add
add
mov
add
pop
repz
sbb
leave
int3
and
and
bound
push
mov
loopne
dec
movups
cmp
shlb
mov
add
push
sub
pop
outsl
xchg
scas
add
jecxz
mov
sbb
xor
mov
int
xchg
mov
fs
fstpl
and
add
add
add
push
jg
inc
int3
sahf
lods
imul
jge
rolb
mov
sbb
inc
stos
mov
and
add
push
sbb
inc
ja
out
and
sub
sbb
or
pop
inc
mov
loopne
bound
or
mov
mov
dec
push
xchg
mov
xor
ja
mov
sbb
rcr
mov
xchg
ret
sub
or
jp
or
push
xchg
push
pop
xor
bound
rorl
jno
cmp
cmp
leave
addl
dec
mov
push
outsl
fdivr
mov
scas
inc
mov
add
lahf
xor
insb
cs
test
jnp
popf
pop
aaa
and
mov
sub
push
rorl
fstpt
cmp
push
push
pop
mov
cwtl
fstp
push
push
cmp
jecxz
mov
leave
push
xchg
addr16
cmc
das
jnp
sub
add
add
and
jnp
arpl
pop
or
icebp
push
xchg
out
pop
add
add
add
add
add
jne
insl
pop
jae
imul
adcl
inc
push
enter
adc
and
sub
int
fsubr
sti
mov
inc
daa
pop
mov
xor
jmp
inc
aaa
jbe
cmp
and
cmp
jmp
rolb
xchg
add
call
popf
xchg
adc
test
inc
adc
sub
add
jg
stos
xlat
dec
out
arpl
mov
xchg
adc
call
bound
cmpb
out
mov
mov
mov
or
iret
mov
movsb
and
sbb
out
pop
sub
push
mov
or
and
sbb
cs
dec
aaa
sbb
out
mov
xchg
pop
mov
and
iret
lahf
ss
lods
pop
add
add
call
into
out
scas
js
sub
clc
cmp
and
xor
fstpt
mov
lret
mov
call
call
call
dec
add
aam
pop
aas
add
push
mov
and
pop
mov
push
and
add
add
fs
lret
jb
dec
sbb
loopne
mov
aas
mov
shr
fsubrp
mov
pop
add
fs
ds
adc
adc
add
add
push
and
mov
or
cs
cltd
xchg
lods
pusha
filds
adc
or
das
adc
sti
outsl
jp
in
sbb
mov
add
sti
clc
stos
into
jg
lahf
push
jae
jnp
hlt
inc
ds
mov
add
jl
mov
pop
movsl
push
int3
mov
ss
push
out
xchg
xchg
and
xor
adc
xor
orl
add
mov
add
in
cmp
push
stos
dec
xor
or
test
add
add
add
cld
fnstcw
add
pop
aam
push
lcall
orb
cmp
add
push
aaa
mov
push
fldt
dec
notl
mov
add
add
add
mov
aaa
mov
jbe
jno
popa
adc
xchg
xchg
repz
outsl
ds
dec
xchg
pop
push
add
jo
jp
pop
or
loope
outsl
jne
es
sahf
lea
push
in
sbb
and
dec
data16
adc
and
push
cmpsb
sub
sbb
jmp
push
mov
jb
inc
repnz
and
call
call
call
pop
popa
push
sub
imul
add
add
add
jg
xor
repz
xor
pop
add
add
add
add
sub
push
out
adc
sub
cmpsl
packuswb
add
std
outsb
adc
pop
fnstsw
jne
dec
sbb
outsb
jb
sti
pop
outsl
push
ds
jo
fidivrl
addr16
outsb
lcall
or
insl
add
pop
add
add
pushf
cmp
cmp
xor
add
mov
xchg
xor
mov
inc
cmp
je
mov
inc
jo
or
es
popf
pop
aas
and
outsl
sub
mov
inc
cld
and
insl
pop
repz
xchg
or
and
push
adc
rorl
addb
add
add
jl
fwait
cli
lret
inc
sub
inc
loope
lods
sub
cmp
sarl
test
and
dec
ds
ljmp
adc
outsl
xchg
pop
call
add
add
shl
mov
mov
cmpsl
loope
insl
add
push
mov
xchg
add
inc
test
pop
add
hlt
mov
out
sbb
add
add
and
cmp
sbb
push
xchg
add
add
mov
decl
es
jns
sub
push
sbb
xor
insb
pop
popl
push
jmp
push
inc
mov
int3
push
and
add
add
add
cmp
xchg
stc
xchg
pop
push
in
ds
arpl
pushl
sbb
jecxz
scas
jo
gs
cs
add
fcmovbe
inc
or
ss
loope
mov
outsl
cmp
test
add
pop
stc
mov
push
fcoms
xor
dec
gs
inc
cli
aaa
fisttps
pusha
scas
and
pop
cwtl
push
js
dec
adc
add
aad
cmp
pop
jns
fadd
dec
xchg
in
stos
push
fdiv
push
or
cld
out
insb
sub
add
add
xor
ror
xor
in
cmp
add
cmp
cmp
add
out
imul
int3
iret
rorl
dec
cmpsl
mov
insb
pushf
dec
rcrl
sbb
dec
jo
or
sub
xchg
push
mov
push
stos
jmp
cmpsl
adc
ss
adc
or
pusha
shrb
insb
mov
and
adc
or
cmp
or
push
movsl
mov
push
cltd
inc
adc
inc
adc
cmp
std
adc
mov
mov
sub
mov
push
add
and
sbb
dec
js
cld
push
aas
stc
mov
in
pop
test
mov
push
shrb
out
pop
mov
pop
test
adc
adc
in
pop
sbb
cmp
lea
add
add
aam
cmpsl
jmp
lock
in
pop
lods
fs
jne
push
push
or
sub
fstp
sbb
mov
into
mov
mov
xchg
jmp
pop
mov
lret
or
and
shrb
call
call
call
mov
pop
leave
mov
nop
push
sbb
push
jb
mov
repz
add
add
nop
xchg
adc
jmp
push
loopne
adc
decb
es
dec
sbb
add
cs
xor
inc
jmp
push
idiv
xchg
ficomps
test
lods
stc
mov
xchg
cmp
and
add
out
ljmp
xor
xor
inc
cmp
cmp
fldl
in
add
aad
or
das
gs
push
jno
aaa
inc
stos
mov
inc
add
adc
dec
pop
inc
call
add
cmpsb
sub
mov
nop
adc
add
add
add
add
outsb
push
adc
jae
ds
pop
sbb
adc
xchg
mov
dec
lret
dec
ja
clc
scas
std
fistpl
and
add
add
add
ss
xchg
dec
jmp
rorl
xchg
test
dec
insb
test
or
jg
popl
xchg
xchg
add
push
mov
mov
aaa
rcl
adc
add
jnp
not
cmp
test
fistps
pop
mov
add
ret
sbb
mov
jmp
cwtl
dec
jg
test
add
in
mov
or
xor
xor
inc
adcb
jmp
push
add
lock
out
sbb
mov
mov
ja
call
call
xchg
pop
in
aaa
loop
cmp
xor
lahf
add
push
or
jmp
into
imul
sarl
icebp
jne
dec
xor
pop
test
stos
aas
dec
mov
and
push
jo
sbb
idiv
aam
roll
add
xchg
loope
and
dec
xor
dec
pop
sub
add
addl
push
jo
movsb
sbb
or
adc
ja
das
pushf
mov
jg
shlb
out
inc
jbe
loop
out
or
dec
adcb
mov
mov
xor
add
add
repnz
xor
int3
jnp
test
sub
or
outsl
loope
adc
cwtl
fdivrl
mov
mov
mov
pop
pop
mov
std
jmp
repz
lret
dec
push
out
dec
jbe
adc
xchg
mov
pop
imul
sbb
jp
jns
xor
adcl
add
add
add
add
ss
ret
or
cmp
out
cmp
push
xchg
ljmp
mov
sub
mov
into
mov
inc
roll
ljmp
mov
mov
mov
hlt
repz
dec
inc
fldenv
cmpsb
dec
inc
jae,pn
inc
ja
andl
sbb
push
xorl
call
stos
sbb
add
add
jle
sub
mov
ret
or
test
dec
jb
lret
and
sarb
jg
into
xchg
gs
shl
jge
aaa
shlb
or
add
jp
adc
sbb
sub
out
aas
cmpsl
cmp
cmpb
test
leave
adc
cmp
adc
into
aaa
roll
jmp
jae
test
rcll
or
mov
xor
mov
fldenv
jle
xor
and
cmp
in
loopne
dec
mov
add
arpl
dec
aas
mov
xchg
push
out
cs
mov
jbe
ss
adc
addr16
sub
stos
stc
xchg
fimuls
bound
pop
pop
add
cmpsl
out
in
or
add
add
add
and
test
jae
add
pushl
addr16
dec
push
iret
loope
jbe
fimull
inc
jo
sbb
push
mov
sti
cmp
adc
rolb
or
call
lods
int3
fs
or
and
cmpsb
xchg
loop
sub
add
add
mov
add
pop
inc
adc
repnz
inc
fildl
into
mov
adc
pop
jge
rclb
jbe
xor
cmp
call
call
call
int3
xchg
in
outsb
mov
mov
mov
loope
ret
sub
arpl
jle
pop
jb
dec
add
or
test
sub
add
add
add
add
hlt
inc
jno
xchg
bound
ret
xor
xchg
mov
cmpsb
sbb
rorb
dec
iret
lods
jae
mov
jnp
push
aad
std
adc
jl
adc
inc
xor
popf
loopne
outsb
adc
xchg
adc
rorb
add
add
jae,pt
sub
cmpsb
mov
pop
inc
clc
andb
test
pop
scas
addr16
scas
jecxz
aam
xchg
out
lcall
cwtl
adc
pushf
add
rcr
mov
clc
test
notb
xlat
enter
add
lock
mov
inc
aas
inc
dec
fstpt
aaa
jge
sub
nop
mov
jns
and
sub
adc
stc
xor
xchg
scas
ljmp
cmp
cmp
add
add
add
mov
xor
dec
popf
pop
cmp
rorl
fnsave
fwait
and
sbb
notl
add
dec
add
push
push
imul
mov
xchg
hlt
jns
lods
adc
decb
stc
cmpsb
sbb
cmc
or
inc
pop
mov
mov
test
pop
out
mov
leave
scas
dec
pop
add
call
call
mov
jnp
sahf
insl
sub
je
int3
push
sbb
add
add
add
sbb
mov
push
loopne
dec
iret
sbb
aas
mov
loop
leave
xchg
add
cmp
in
icebp
outsb
pop
rcpps
sbb
insl
jne
sub
call
call
mov
bswap
mov
js
in
add
or
jo
test
pop
xor
or
or
jge
sti
movsb
out
fistpl
pop
shlb
jnp
inc
out
sbb
pop
jns
lahf
aam
and
add
cmp
popa
fs
negl
sbb
mov
pop
out
jmp
call
call
call
aas
stos
in
pop
leave
or
cmp
daa
xor
aad
jmp
mov
add
in
insb
lds
out
call
or
mov
inc
rorl
add
add
push
pop
clc
lock
arpl
push
sub
mov
loop
add
dec
xor
xor
xchg
shrl
outsl
jecxz
push
sub
inc
aas
cs
sarb
gs
jge
and
call
add
add
add
add
fcmovnbe
aam
jge
push
idivb
dec
test
xorl
add
lahf
push
insb
xor
add
add
add
repnz
scas
add
add
cmc
adc
lock
sub
movsl
xlat
push
mov
call
call
ja
dec
stc
lret
adc
jb
negb
adc
shll
into
or
fcomip
jecxz
fmul
out
push
out
cli
sbb
ja
rcrb
ror
pop
jp
xchg
hlt
aam
mov
push
and
dec
xor
push
arpl
ja
sub
add
add
add
jne
outsl
xchg
pop
pusha
into
lods
loopne
sbb
mov
scas
push
shll
lahf
xchg
je
jb
pop
xchg
mov
mov
mov
addr16
ds
push
add
lcall
test
sbb
fsubl
cmp
cld
xor
and
subb
mov
and
mov
cmp
fwait
stos
push
pop
int
cmp
stc
push
xchg
insb
js
jle
jl
ret
inc
subl
bound
cmp
and
add
jmp
mov
movsb
arpl
lahf
cwtl
mov
inc
hlt
lcall
lahf
jbe
shlb
xchg
ja
push
lock
mov
aas
cli
push
jg
rcl
pop
aas
cmc
xor
int3
orl
in
enter
cwtl
in
push
fisubrl
add
add
add
add
jno
ljmp
xchg
addr16
negb
iret
pusha
out
in
sti
test
in
sbb
sub
mov
or
xchg
lahf
push
inc
dec
lcall
xchg
enter
ficoms
adc
mov
sldt
add
mov
popa
adc
cli
mov
xchg
sbb
mov
mov
inc
test
call
call
call
and
mov
cltd
fadds
pop
push
incl
mov
add
push
iret
popa
xchg
stos
push
imul
add
add
add
jle
ja
scas
fwait
daa
or
icebp
scas
stos
loopne
push
mov
xchg
jbe
jnp
add
ret
inc
dec
outsb
push
lret
jl
sub
cmp
adc
sarb
mov
pop
daa
loope
loopne
push
cmp
mov
pushf
sub
mov
fmul
cmp
jae
shll
movsb
mov
jl
lea
rcrb
lds
sub
daa
lahf
xchg
and
xor
add
add
test
hlt
xchg
and
jo
mov
mov
cmp
pop
xchg
add
add
aaa
rolb
ss
pop
stos
loop
or
mov
and
inc
dec
pop
mov
in
inc
into
jmp
sbb
iret
and
icebp
add
frstor
je
scas
sbb
and
call
and
add
ja
add
dec
sbb
fmul
xor
hlt
stc
and
aam
aam
in
pop
or
in
int
cld
das
add
lahf
popa
sbb
or
mov
movsb
mov
mov
call
call
call
add
push
add
in
or
xchg
dec
add
adc
xor
mov
shrl
dec
imul
or
xor
lahf
lods
jb
in
sub
add
xor
dec
cld
jp
jl
testl
std
test
cmp
je
mov
add
insb
shr
mov
and
jl
ja
or
add
repz
jo
mov
xlat
lock
xlat
add
or
jge
jo
xchg
mov
push
in
sti
shl
mov
out
sahf
lds
jno
xor
cmpsb
enter
in
xchg
inc
dec
adcb
dec
mov
jne
add
add
add
add
add
sahf
mulb
aam
imul
insb
cli
fidivs
xor
dec
mov
sbb
push
rcll
pop
and
xchg
sub
pop
mov
xchg
in
adc
push
outsl
mov
lahf
and
mov
sbb
filds
jno
add
iret
fisubs
push
andl
aas
push
clc
pop
jge
sbb
adc
std
mov
popa
ret
subl
add
add
xor
inc
cmpl
lret
dec
je
xchg
and
call
jo
jae
add
aas
jge
dec
in
out
xchg
mov
xor
out
outsl
inc
push
clc
lock
in
bound
sub
pop
movsl
cli
mov
test
cmc
and
jbe
out
mov
hlt
ret
stc
add
add
jle
jns
jmp
add
lret
sbb
mov
fwait
andb
xchg
call
call
call
call
test
inc
dec
pop
cli
sub
cmpsl
xor
je
mov
pop
mov
sbb
pushf
pusha
les
jmp
adc
xor
rcr
cmp
call
or
sarl
add
add
jecxz
push
xor
outsl
sub
ljmp
mov
sub
mov
call
call
call
add
jno
add
add
add
add
add
mov
xor
adc
sbb
test
cmp
jb
jno
dec
and
out
lods
jmp
test
call
add
mov
in
add
inc
xor
jmp
sub
add
cmpsb
loopne
adc
push
or
cs
jae
sbbb
mov
imull
test
iret
mov
add
jnp
inc
inc
dec
or
cli
fdivs
dec
shll
xchg
pop
xor
test
nop
inc
out
xchg
pop
imul
sub
push
mov
stc
add
add
add
fs
stc
stos
and
aam
sbb
addr16
call
call
in
push
pop
sub
daa
mov
mov
cmp
add
xchg
xchg
lods
jmp
jle
cli
pop
jecxz
loopne
arpl
sub
data16
adc
mov
sbb
mov
mov
xor
add
push
roll
imul
mov
lret
pop
ror
popa
xchg
lock
test
clc
xchg
push
stos
ds
nop
pushf
std
sub
test
clc
lea
mov
cltd
jge
out
mov
inc
lahf
add
bound
stos
cmp
call
and
in
jne
jno
into
push
xchg
int3
hlt
fisubrs
roll
cmc
sbb
popa
repz
scas
inc
loope
xor
push
pop
cli
sub
inc
enter
push
xchg
or
out
xchg
dec
filds
add
xor
daa
dec
add
test
std
mov
and
add
add
pop
movsl
mov
push
rcll
jl
pusha
popa
incb
push
dec
lods
push
mov
add
in
lods
cmpl
pop
bound
jo
cltd
les
scas
mov
sub
jg
cmp
mov
aaa
es
jns
add
push
test
adc
and
ss
jbe
or
loop
mov
imul
sub
call
call
inc
ds
mov
jno
int3
fcoml
aaa
je
stos
adc
pop
xchg
xchg
rcl
mov
repz
popf
frstor
jl
push
or
sbb
inc
xchg
iret
adc
mulb
xchg
call
call
call
jae
lods
dec
pop
add
popa
jecxz
movsl
jle
pop
fimull
push
cli
xchg
dec
pop
lods
add
add
add
xor
in
pop
cld
fdivrp
ljmp
mov
fst
push
popa
add
add
add
adc
rcrb
jecxz
cmp
inc
pop
mov
sub
sub
and
dec
shll
add
test
rcrb
je
jnp
aaa
mov
add
xchg
cmp
sub
sbb
jo
js
jo
xchg
pop
inc
jae
pop
gs
mov
jge
sbb
inc
pop
jle
arpl
cld
pop
inc
push
sub
add
add
add
add
pop
and
jbe
insb
pop
call
mov
loope,pn
mov
xor
add
add
add
push
adc
scas
mov
sub
loope
stos
movsl
pop
cmovl
cwtl
sub
xchg
out
cmp
fnstsw
pop
call
enter
push
fdiv
mov
aas
xchg
xor
sub
call
pop
pop
inc
adc
js
popa
fbstp
stos
pop
into
outsb
pop
cmp
cmp
scas
jecxz
hlt
add
add
add
add
sbb
or
sbb
jle
mov
adcl
inc
xchg
adc
jnp
frstor
fbld
jg
xchg
cmp
xchg
loop
jmp
inc
sub
sub
lahf
sub
dec
adc
fidivl
pop
je
jae
cltd
jmp
idivl
xchg
ret
stos
sub
adc
add
test
mov
out
iret
les
stos
leave
push
fnstsw
cmp
bnd
call
call
out
xor
push
hlt
in
int
and
cli
popa
es
scas
mov
cmp
mov
rcrl
push
push
ret
sub
add
add
add
out
push
dec
in
add
inc
nop
mov
and
call
movsb
dec
xchg
jb
xorb
test
stc
mov
loop
add
push
rorb
test
stc
test
popa
jl
push
jmp
push
push
cmp
mov
fimull
pop
loopne
loopne
imul
jno
sub
shll
shlb
add
adc
fidivs
pop
push
inc
mov
out
in
testl
add
add
add
add
popa
popa
outsl
mov
add
adc
xlat
push
jo
push
je
filds
add
push
loope
jmp
adc
mov
mov
jp
sub
push
sbb
call
call
call
sub
add
test
push
cld
ss
dec
mov
pop
sbb
push
mov
push
mov
pop
xlat
xchg
in
push
jmp
sub
mov
pop
pushf
sbb
test
add
shlw
rcr
add
sbb
incl
sub
aad
push
out
fldcw
stc
dec
rolb
add
call
movl
add
sahf
mov
pop
mov
test
es
and
lahf
sbb
icebp
lock
imul
call
call
lods
mov
fists
sbb
xor
in
pop
addr16
or
sahf
push
pop
stos
nop
loop
dec
shrb
movsb
stos
inc
arpl
mov
push
cmc
test
and
outsl
sub
inc
shlb
subb
stc
das
stos
popf
add
jnp
ret
and
leave
jno
add
xor
add
add
add
add
inc
push
xchg
xlat
add
add
clc
orl
add
cmp
pop
mov
add
pushf
or
inc
sub
push
inc
cmp
adc
xchg
outsb
repnz
add
inc
push
sub
ds
sbbb
mov
arpl
and
dec
cmpsl
push
outsl
adc
pop
xor
lea
idivb
mov
sbb
lea
sub
sub
jnp
xor
xchg
sub
sbb
les
dec
xor
shrb
jns
pop
jae
and
pop
ljmp
jae
lds
mov
pop
pushf
arpl
jae
aaa
pop
cwtl
call
in
dec
and
add
push
cmp
pop
adc
test
inc
repz
sti
fistpl
add
add
add
add
ljmp
jbe
mov
hlt
les
or
outsb
and
shlb
andb
out
pop
push
iret
add
sbb
jmp
sub
add
add
loop
inc
cld
xor
icebp
mov
test
stos
cmp
mov
add
mov
dec
inc
aaa
xchg
mov
ffreep
mov
jp
cmp
cmovb
push
push
cmp
arpl
or
inc
push
fwait
shrl
leave
adc
pusha
inc
icebp
add
adc
jl
dec
ret
mov
adc
adc
leave
lret
insb
add
dec
mov
cmp
ret
movl
add
add
sub
jbe
dec
cmpb
pop
adc
shll
arpl
mov
fsubp
out
outsb
stos
mov
fsts
inc
cmpsl
lcall
inc
push
push
mov
stos
cmp
ljmp
add
pop
mov
xchg
in
jmp
cmp
das
xor
mov
leave
repnz
lret
aam
jmp
inc
jae
and
test
xor
pop
and
dec
mov
test
and
pop
sti
into
add
xor
repnz
mov
push
cmp
add
add
add
arpl
add
jmp
rolb
xchg
xchg
rorl
xchg
mov
call
test
mov
bound
cwtl
pop
jp
callw
call
call
mov
pusha
aad
adc
or
sbb
jbe
cli
add
add
test
inc
jmp
pop
fwait
add
pop
stc
stos
jbe
sbb
jle
push
push
pusha
jb
fnstsw
cs
pop
xchg
std
push
cmp
std
subb
inc
push
lcall
mov
jno
sahf
push
cmpsb
or
ds
and
and
and
xchg
int
cltd
pop
addb
add
add
add
mov
cwtl
into
pusha
mov
mov
mov
es
inc
inc
inc
pop
inc
jno
xchg
in
call
das
loop
adc
push
adc
xor
lock
stc
cmc
xor
cld
test
sbb
mov
cs
dec
adc
call
add
add
add
add
jo
cmpsl
xchg
dec
lds
imul
std
mov
std
push
jne
nop
xchg
movntps
arpl
movsb
lods
adc
inc
loop
shrb
xlat
imul
ljmp
mov
pop
shr
cwtl
mov
icebp
mov
pop
mov
mov
dec
iret
out
cmp
jmp
sbb
mov
dec
jne
les
addl
add
dec
adc
sbb
sbb
call
call
jno
sub
ja
imul
rcl
sub
xor
push
sbb
cli
fwait
add
xlat
inc
fmuls
add
add
add
add
adc
cmp
nop
dec
sbb
aad
jge
adc
inc
and
jl
adc
fldt
push
rolb
cmp
lahf
dec
ficoml
mov
push
pop
sti
rclb
imul
sbb
lret
movsb
cmp
rclb
add
jb
dec
sahf
jle
add
mov
imul
mov
push
and
sub
and
jl
les
sbb
les
cmpl
out
pop
push
test
push
andb
inc
ja
es
add
add
add
mov
adcl
adc
inc
call
call
call
call
pop
filds
lods
imulb
lahf
jo
test
push
dec
outsb
push
push
out
inc
nopl
jmp
add
add
mov
sbbb
mov
jae
jmp
movl
test
push
nop
loope
std
sbb
fimuls
push
mov
jae
fistps
fadds
insb
sub
movsl
jl
dec
aaa
or
ss
and
inc
jmp
sti
jl
mov
inc
add
and
cltd
shll
mov
les
aad
arpl
inc
or
sub
mov
in
orb
in
vpsubsw
fsubs
xchg
bswap
sub
sbb
lock
add
clc
mov
dec
pop
mov
push
sbb
jmp
sub
aad
jo
jl
stc
lahf
insb
pop
mov
je
leave
sbb
jne
or
mov
shrl
dec
ret
hlt
and
inc
mov
sub
xlat
in
imul
pop
or
add
add
add
add
ret
xchg
push
push
popf
int3
jb
outsl
loop
popa
int3
icebp
sub
push
or
imul
outsl
and
punpckldq
xor
xlat
mov
ja
inc
inc
jnp
lcall
and
scas
jecxz
or
add
add
add
add
in
movsb
xor
push
jp
je
imul
jbe
jp
call
call
int
lds
int
cli
mov
lcall
jbe
repnz
lods
sbb
jbe
or
sub
mov
mov
jo
mov
jmp
bnd
xchg
jbe
sub
addb
scas
mov
inc
xorb
mov
jbe
sbb
nop
sbb
add
push
insb
sbb
movsb
xor
push
orb
inc
sub
push
inc
mov
and
jb
add
add
cmp
mov
adc
repnz
dec
clc
inc
rclb
ja
nop
sbb
mov
push
adc
xchg
push
xchg
xchg
cmp
add
or
call
call
fistps
jp
inc
loopne
stos
pop
adc
loop
stos
xchg
add
or
adc
xor
adc
lods
std
jge
test
sub
gs
add
add
adcb
jbe
fucomp
and
adc
mov
rcl
jp
imul
add
or
and
lcall
cmp
cmpsb
push
aad
mov
ljmp
dec
and
sbb
data16
mov
and
sub
shll
adc
xchg
pop
inc
enter
or
std
add
sbb
cmp
shr
mov
dec
gs
add
add
cs
out
dec
shll
loopne
mov
push
insl
sub
sbb
call
call
call
call
pop
sbb
mov
daa
jns
enter
shrl
and
out
mov
int
push
push
or
dec
insb
jge
add
aaa
imul
sub
and
dec
bound
outsb
into
xor
sbb
cmp
jle
add
mov
sub
out
mov
xchg
aaa
xchg
push
in
jno
jb
outsl
xchg
lods
jp
je
sti
outsl
js
add
inc
adc
and
cmp
ret
inc
jle
push
mov
push
xor
cmp
cmc
das
sub
mov
mov
pop
lea
xor
repnz
push
add
add
add
dec
int
mov
jecxz
add
mov
jge
test
inc
and
cmp
stos
push
lds
or
mov
sbb
dec
push
lret
fwait
jbe
xchg
mov
cld
test
dec
mov
mov
inc
iret
add
add
rol
dec
mov
call
mov
loope
pop
push
push
outsl
dec
lret
jb
rcr
fistpll
bnd
mov
insb
push
jo
pop
push
es
insb
or
fimull
push
insl
sub
repz
xor
es
push
subb
imul
add
sub
test
add
add
add
add
cwtl
daa
jns
outsl
mov
and
cmp
leave
or
push
shll
sub
call
call
inc
stos
adc
inc
or
push
cmp
cmp
inc
jns
mov
xor
add
push
out
shlb
inc
push
pop
fcoms
imul
cwtl
data16
mov
add
push
mov
mov
cs
popf
mov
sub
pusha
sub
dec
dec
leave
sub
hlt
mov
dec
fbstp
stos
mov
mov
adc
out
sbb
xor
push
push
nop
imul
dec
iret
shll
push
sbb
lock
and
out
pop
hlt
aad
push
adc
fcom
jmp
jle
popa
xor
sub
mov
dec
fs
ror
outsb
pop
rcrl
in
add
push
xchg
or
pop
mov
jmp
test
and
xchg
inc
ljmp
icebp
cld
das
mov
jmp
dec
fadd
sub
imul
sbb
jne
add
sbb
in
dec
js
dec
js
cmpsb
outsb
sti
xor
mov
add
sub
xchg
clc
or
jg
sbb
pop
sbb
int
push
sti
mov
add
mov
rorl
sahf
orl
add
add
add
add
dec
outsl
cmpsb
mov
jg
inc
imul
jle
das
jno
pop
adcb
mov
xchg
dec
sbb
sub
fwait
xchg
jbe
cmp
cld
cmp
adc
js
out
adc
mov
call
les
sbb
mov
aaa
jne
or
fisubs
add
xor
inc
std
inc
ja
sub
cmpl
vpcmpgtb
push
dec
sbb
mov
push
aam
loop
or
or
and
sbb
sbb
je
test
jmp
cmp
push
fstl
dec
jne
sbb
add
adc
sbb
rorb
cmp
adc
push
std
jae
add
aas
sbb
xor
xchg
mov
push
scas
and
adc
adc
cmp
jecxz
xor
shlb
sub
xchg
mov
jno
sti
call
call
push
add
add
add
testl
sbbb
add
add
add
add
cwtl
mov
pusha
jmp
cli
xchg
lods
insl
and
add
add
fidivs
jge
insl
cltd
xchg
in
cld
mov
into
out
cmp
push
or
rcr
dec
ljmp
mov
cli
cmp
ret
lahf
ljmp
or
sbb
xor
mov
sub
imul
shrb
adc
add
xchg
adc
add
fucompp
sbb
xor
xchg
xchg
dec
rcrb
push
sub
in
das
scas
pusha
pop
xlat
jno
int3
xchg
inc
mov
movsb
add
sbb
inc
inc
je
jl
sub
xchg
repz
mov
fnstsw
or
mov
or
cmp
adc
es
enter
pop
cli
mov
add
mov
ret
inc
jno
movsb
lea
mov
mov
xor
push
test
cwtl
imul
lret
xor
std
cld
push
popf
xchg
jl
jecxz
hlt
out
inc
cld
cltd
aad
adc
and
mov
testl
cld
fildll
mov
xorl
cmp
add
fidivrl
dec
sbb
xlat
test
test
data16
xchg
mov
je
add
repz
imul
shll
dec
adc
lcall
daa
sbb
in
loop
es
shlb
adc
sbb
jecxz
ficompl
popf
or
add
xchg
fisttpl
sarb
inc
loope
mov
add
lock
cmc
int3
inc
or
call
call
in
push
stos
imul
lods
aam
stc
mov
out
mov
or
mov
inc
dec
push
or
add
add
xchg
sub
in
adc
test
and
add
cli
rclb
sbb
pushf
jno
loopne
incb
mov
push
mov
jne
or
inc
dec
and
cmp
nop
imul
mov
ljmp
ret
sbb
or
add
sub
push
push
pop
push
add
xorl
or
adcl
outsb
mov
dec
xchg
sub
xchg
xchg
int3
push
pop
push
jmp
sub
or
add
adcl
or
adc
dec
je
add
add
and
cmpsl
or
mov
out
inc
in
cmp
mov
sti
sbb
add
push
push
lret
aam
insl
jge
sbb
dec
xchg
sub
xor
sbb
mov
stc
mov
test
icebp
cmp
ret
sub
bound
cmp
push
cmp
add
es
pop
jo
mov
adc
sbb
xorl
pop
lahf
jecxz
gs
mov
add
add
xor
sub
mov
pop
test
je
into
insb
popf
mov
pop
mov
and
add
add
push
mov
outsb
push
mov
int3
nop
inc
add
pop
mov
pusha
lods
and
out
and
std
mov
add
cmp
lahf
sbb
call
call
ficompl
and
jmp
repnz
inc
mull
dec
inc
push
sbb
lahf
and
inc
mov
or
call
call
mov
xchg
jp
out
clc
xchg
pusha
lods
push
dec
outsl
sub
leave
or
and
jnp
inc
fwait
cmp
cmp
mov
inc
popf
and
dec
mov
adc
jno
and
and
add
xchg
sub
pushf
lcall
push
inc
mov
mov
jp
fidivs
loop
arpl
aam
pop
add
or
outsl
loop
and
jno
in
push
daa
into
movsl
inc
cmp
ljmp
xor
or
lods
cmp
pushf
inc
or
push
into
dec
and
sub
pop
adc
loopne
lock
gs
jno
pusha
cli
mov
dec
sahf
in
lcall
push
and
cwtl
jne
pushf
pop
add
call
call
adc
inc
jae
xor
ret
mov
and
add
xchg
fwait
sub
xchg
fbld
cmpb
lahf
addb
fisubs
aaa
setbe
or
push
cmp
into
decb
inc
push
push
push
cmp
jb
in
daa
xor
xchg
inc
hlt
xlat
cmp
add
push
mov
sbb
aas
mov
add
add
shl
jo
fisubs
clc
outsl
jns
add
inc
jecxz
mov
jle
jnp
jae
jns
sub
outsb
dec
jnp
bound
jle
hlt
sub
xor
xlat
pop
gs
data16
xor
call
jo
jmp
hlt
and
xchg
push
daa
dec
in
cmc
add
push
pandn
push
sbb
aas
pop
inc
inc
and
daa
pop
jbe
push
adc
xor
mov
push
add
add
add
pop
decl
mov
pushf
add
sahf
push
out
and
scas
je
add
pop
out
add
imulb
and
jnp
movsb
mov
jnp
mov
in
push
data16
lgs
je
cmc
movsl
jge
cmp
les
mov
pop
sub
and
pop
xor
sbb
in
add
add
add
add
inc
je
push
xchg
scas
dec
dec
inc
insl
in
add
call
call
xor
push
dec
in
shlb
push
popf
lds
imul
cld
adc
mov
mov
in
pop
loop
and
xchg
add
push
lahf
in
std
mov
mov
mov
loopne
add
sub
sbb
bsf
sbb
lods
cs
or
int3
jg
pop
sahf
into
sub
aaa
add
sbb
push
pop
inc
mov
cwtl
pop
add
inc
adc
push
adc
sbb
mov
sbbl
out
lret
dec
fldt
in
inc
adc
mov
cmp
mov
stos
test
repz
in
test
call
call
call
xchg
mov
add
pusha
xor
lret
repz
inc
cmpsl
rcll
sub
fistpll
add
cmp
dec
jo
mov
and
stos
dec
pusha
jnp
jns
xor
xor
out
push
lods
out
loop
pushf
mov
cs
jg
xor
lret
and
aaa
testl
add
jl
mov
fwait
adc
fbld
sbb
daa
mov
inc
inc
mov
cs
lcall
cmp
xchg
mov
aad
sbb
rclb
mov
adc
imul
rcl
or
push
ss
add
jo
xor
pop
addb
push
shrb
lods
sbb
xchg
push
js
mov
loop
jp
and
insl
add
add
repz
int3
repz
or
rcl
push
outsb
lret
das
dec
jae
push
lods
outsl
hlt
jg
loop
jecxz
notb
and
or
mov
adc
mov
pusha
arpl
shrb
inc
push
lret
shrl
jne
pop
add
adc
call
call
loop
xorb
jmp
addr16
rolb
jo
add
mov
outsb
shrb
jg
xchg
in
fsubrs
loopne
pop
cmp
insl
add
pop
sub
mov
inc
pusha
shrb
push
mov
xor
cli
ss
xor
fldcw
mov
mov
pushf
lods
dec
jo
pop
jge
push
or
cs
push
aam
add
add
rcrl
push
adc
pop
iret
jne
js
out
pop
mov
mov
push
enter
jnp
cmp
mov
jge
pop
stc
mov
ja
mov
jl
stos
shll
sub
add
jnp
sbb
push
mov
jg
sub
int3
mov
add
dec
gs
inc
pop
js
mov
mov
lods
data16
ljmp
insl
clc
test
push
imul
mov
sti
inc
xorb
mov
xor
adc
jb
cmp
jbe
in
int3
pop
add
pop
push
xchg
loopne
ret
push
outsb
loopne
clc
push
and
cmp
out
into
and
push
int
mov
out
push
imul
ss
inc
int3
lds
stos
pop
inc
mov
sbb
xchg
call
mov
imul
mov
mov
add
or
fnstenv
dec
push
call
call
cmp
jno
imul
gs
dec
mov
insl
mov
aas
cmp
xchg
mov
lods
jge
stc
push
in
incb
test
out
add
mov
jnp
fnstcw
sbb
ss
sub
xchg
add
popf
pop
js
ja
fidivrl
daa
dec
inc
add
pusha
xchg
in
sub
inc
rorl
cmc
push
mov
xor
or
pop
cwtl
and
test
pop
test
aam
gs
xchg
jns
or
xchg
cmp
mov
cwtl
xchg
add
pop
jp
push
adc
cld
nop
loopne
cltd
out
xor
mov
adc
sbbb
mov
imul
sbb
mov
int3
testl
add
mov
js
stc
mov
test
enter
mov
aas
sub
call
call
xchg
int3
cwtl
adc
mov
mul
add
push
filds
add
add
add
fcomp
xchg
xchg
sub
aad
int
sti
sbb
sub
arpl
das
shll
jnp
xchg
jnp
mov
clc
mov
add
add
add
add
ficoms
aaa
test
rol
dec
mov
mov
inc
into
imul
mov
mov
xchg
stos
xchg
leave
std
stos
std
dec
push
fistps
and
out
inc
out
push
mov
sub
sub
sbbl
xor
jo
dec
adc
mov
mov
add
aas
sti
and
and
test
jns
lret
or
cmc
mov
scas
dec
dec
pop
ret
outsl
repz
and
sbb
and
cwtl
fistpl
dec
int
dec
js
add
add
inc
out
add
pop
xor
mov
bound
aaa
push
pop
fwait
inc
dec
jae
pushf
push
sub
mov
arpl
leave
mov
add
add
mov
add
out
xor
fisubrl
test
inc
jno
icebp
je
popl
add
add
jns
inc
add
mov
subl
adc
jle
es
gs
loopne
cmp
jb
cmc
push
lods
jnp
icebp
in
repz
incb
insb
add
adc
movsl
push
inc
cwtl
arpl
cmp
das
adc
inc
jecxz
dec
pop
repz
add
loop
fisubrl
repz
xor
dec
orb
mov
imul
cmp
adc
pop
cmc
inc
lret
ja
rcrl
adc
insl
mov
mov
lea
jb
mov
dec
std
addb
add
add
pop
and
pushw
inc
dec
and
pop
cwtl
pushf
shrl
insl
push
leave
and
fdivl
inc
xor
pusha
in
aam
dec
add
and
xor
push
repnz
sub
aas
cltd
inc
add
lcall
push
cld
je
pop
dec
sub
cmpsb
cmpsl
pusha
mov
imul
cmpsl
dec
ret
mov
push
jnp
add
add
add
add
data16
stc
xchg
ret
sbb
insl
sub
in
cwtl
push
loop
jle
jo
push
out
loop
push
pop
jbe
dec
pop
dec
mov
daa
dec
push
call
call
call
pop
mov
pop
call
dec
lods
or
push
or
popa
sub
add
pop
idiv
mov
dec
pusha
test
shll
dec
addb
push
xor
sbb
lea
icebp
jne
pushf
dec
fildl
push
or
mov
xchg
test
inc
shrb
jne
sub
add
mov
mov
mov
jecxz
xchg
adc
aas
repnz
insl
sub
cli
pop
daa
icebp
lcall
push
ret
je
xchg
xorb
cmp
ja
aas
dec
push
sbb
pop
adc
aaa
mov
adc
mov
call
call
call
add
loope
cmpsl
test
sarb
scas
test
add
add
add
fwait
ret
dec
jge
leave
push
cmp
xchg
jne
stos
push
jae
push
mov
push
xchg
xchg
rcl
ret
mov
movsl
stos
fidivl
cld
and
out
jle
es
cmp
and
push
outsl
mov
mov
xchg
xor
add
add
add
pop
pop
adc
cmp
bsf
adc
cltd
cmc
orl
jle
sti
jae
sti
cmp
or
sub
jl
mov
add
add
add
add
adc
mov
jl
imul
aad
sti
ffreep
mov
sub
and
aaa
mov
addr16
push
xchg
xchg
in
popf
jb
fcmovnu
loopne
mov
out
xor
icebp
lods
push
fnsave
sbb
push
sbb
inc
nop
push
ret
add
add
pop
fadds
push
ret
or
xchg
mov
xlat
popa
cmp
mov
add
lret
flds
add
add
fs
repz
pusha
aam
insl
fisttps
stos
ss
les
jge
mov
std
and
xchg
lods
stos
js
testl
xchg
cli
loopne
mov
adc
and
xchg
add
add
add
pop
cltd
xor
mov
inc
sbb
xchg
jmp
adc
add
add
add
or
movsl
call
call
fistps
lcall
fisttpll
cltd
jmp
sbb
shrb
inc
mov
pushl
push
add
dec
insb
and
pop
into
push
inc
test
pop
adc
dec
test
cmpl
dec
repz
jecxz
data16
lret
inc
stc
adcb
add
std
adc
push
jg
aas
mov
mov
sbb
in
xchg
mov
jnp
xchg
sub
ficoml
lahf
ja
dec
dec
arpl
popa
ret
mov
mov
and
stos
inc
in
ja
sub
cld
cwtl
dec
in
jmp
cmc
in
cmp
dec
aas
negl
xor
mov
inc
push
add
add
dec
test
scas
iret
adc
dec
jecxz
push
pusha
pop
test
leave
mov
sub
mov
lods
xor
and
xchg
and
push
add
add
outsb
in
sub
clc
inc
and
mov
mul
or
fbstp
add
fiadds
add
add
add
stc
jne
xor
sbb
call
testb
roll
add
adc
rcll
mov
test
loope
decb
push
das
hlt
lds
cwtl
adc
or
pop
ja
jae
int
lret
xor
fsts
fsubl
add
add
add
outsb
fisubl
xchg
rcr
inc
dec
sub
es
stos
test
add
add
add
add
cmpsb
jmp
cwtl
inc
sub
push
cltd
cld
pop
in
aad
dec
inc
xor
adc
lret
add
mov
jo
fdivrs
mov
insb
sbb
push
sbb
pop
outsb
jmp
lds
lods
cmp
lret
mov
pop
out
dec
dec
xlat
dec
jne
or
dec
loop
in
loop
cmp
stos
inc
pushf
loope
and
ret
jo,pn
nop
add
lahf
sbb
sub
lock
add
sbb
add
add
add
add
mov
push
lcall
fs
cmpsb
and
pop
subl
ljmp
jae
xchg
cmp
dec
adc
adc
rclb
call
call
mov
and
mov
push
icebp
mov
ja
mov
and
cwtl
outsl
mov
int
int
test
scas
cld
xlat
mov
xor
stos
add
add
jnp
dec
sbb
das
sahf
cmpsl
or
shll
dec
mov
mov
cld
push
sbb
clc
and
std
sub
xchg
test
inc
aad
repz
jge
and
movsl
fcmovne
mov
inc
in
pop
sub
mov
mov
lods
fistpl
bound
add
add
add
add
add
add
jo
gs
jl
adc
mov
outsl
mov
call
test
pmaddwd
ja
les
jne
leave
mov
fwait
scas
adc
push
fs
inc
pop
out
in
call
call
mov
outsb
fstpt
in
outsb
ftst
mov
adc
into
test
xchg
mov
sbb
or
inc
add
cmpsb
clc
aad
inc
xchg
adc
and
pop
mov
mov
mov
mov
jle
mov
mov
lahf
mov
ja
psubd
xor
xchg
add
add
add
add
cmp
fwait
lock
cmc
dec
cmp
inc
ret
stos
fdivp
sub
adc
cmp
aaa
push
and
add
mov
test
aas
rorl
xorb
jmp
cmp
call
call
loope
push
cmp
mov
cltd
arpl
sbb
push
rorl
xchg
repz
add
add
dec
lret
pop
aaa
rorl
lods
nopl
mov
test
jecxz
jne
das
shr
sub
sub
cmp
push
push
imul
adc
cs
out
push
repnz
cmpsb
sub
adc
scas
mov
test
xchg
shrb
mov
push
fs
jg
cmp
leave
jg
jb
iret
std
sub
mov
popa
xor
insb
lds
enter
repz
mov
mov
ret
movsl
push
mov
jmp
test
loopne
addr16
fstpl
int3
fwait
inc
cmp
pop
sbb
mov
add
add
add
mov
idivl
in
pop
aad
cmp
lds
xchg
aas
aas
adcl
in
je
es
pusha
and
bound
xor
leave
jmp
pop
fs
cmp
inc
imul
xor
mov
out
leave
int3
xor
mull
jno
xchg
mov
call
call
sahf
add
int
ja
xchg
push
inc
mov
cmpsb
jae
arpl
add
push
lcall
shll
and
and
loopne
lret
jns
lods
mov
and
add
shr
call
call
push
add
testl
add
add
aas
mov
jbe
jno
roll
cmp
lahf
hlt
lcall
xor
jg
out
leave
adc
cmpsb
jae
fistps
outsb
out
in
sub
pop
xchg
add
add
lock
in
push
add
add
add
sbb
sub
pop
nop
lods
jbe
and
dec
or
inc
inc
mov
fisubrl
iret
mov
mov
orb
movsb
mov
mov
add
jg
jno
pop
mov
dec
fs
dec
mov
cmc
dec
and
loope
push
pop
mov
cmp
aas
dec
mov
adc
and
in
or
popf
je
movsb
adc
dec
dec
pop
mov
or
dec
outsl
dec
mov
fs
ret
mov
bound
add
mov
xor
ja
pop
fs
cmp
fistpl
dec
call
call
cltd
and
in
insb
cmc
sbb
ret
outsb
pop
or
add
adc
adc
das
cmp
or
int3
lahf
cs
imul
aaa
pop
pop
mov
sbb
test
sbb
pop
sbb
movsl
mov
sub
dec
sbb
aas
aam
test
or
enter
add
adc
fs
popf
adc
cmp
pop
mov
scas
or
call
call
sbb
push
sub
pop
pop
jae
movsb
das
sub
inc
and
jl
fiaddl
push
dec
sbb
add
add
or
add
js
dec
dec
adc
xor
push
mov
cmp
push
xchg
adc
mov
jecxz
inc
mov
xchg
sub
loope
push
into
or
cmpsb
xor
sti
testb
fucomp
mov
jmp
add
add
add
xchg
insl
scas
or
es
xchg
pop
inc
out
andb
sbb
adc
sub
int
imulb
enter
push
xchg
aam
int
and
scas
dec
sub
jno
iret
jne
and
and
cmp
cs
imul
inc
stos
enter
dec
sahf
shr
jle
xchg
inc
push
stc
pop
push
sbb
ret
fiadds
add
add
aas
fs
sti
les
imul
push
adc
aas
mov
mov
inc
lret
enter
mov
inc
repnz
xchg
in
sub
frstor
xor
popa
xor
and
stc
dec
xor
fstps
add
add
add
aam
mov
jg
in
les
ds
fists
movl
mov
inc
int3
fcompl
cmp
scas
mov
call
mov
mov
aaa
jns
and
pop
lods
cmp
test
add
add
add
add
mov
int3
and
jle
loop
imul
mov
cmp
cld
pop
dec
shr
ficoms
pop
dec
in
mov
rcll
adc
insb
testl
sbb
xor
pop
pop
shr
call
call
ret
jno
rcl
pop
pusha
in
xor
cmp
inc
imul
add
add
fwait
sbb
aaa
cli
stos
add
sbb
and
das
mov
cmpsl
mov
dec
je
mov
inc
out
movsl
icebp
imul
mov
inc
imul
cwtl
xor
dec
and
in
add
push
adc
outsb
inc
xchg
add
add
adc
aad
inc
dec
hlt
sahf
sub
and
lret
pop
xor
push
cltd
and
pop
cmpsl
mov
mov
lock
mov
mov
push
add
ret
push
add
enter
inc
jmp
pop
mov
add
mov
pusha
inc
jb
mov
andl
jp
jne
shlb
and
icebp
xchg
das
inc
cli
sbb
xchg
jmp
lret
lock
mov
jae
daa
adc
in
mov
cmp
shlb
icebp
dec
loop
js
seto
inc
les
xor
inc
and
inc
in
mov
mov
mov
mov
sbb
std
cmp
and
popf
movl
ljmp
call
sbb
add
add
add
lret
test
lahf
test
jnp
adc
daa
stc
or
adc
cmp
jge
cli
out
stc
jb
out
loope
int3
and
fs
pop
std
push
sub
call
call
jmp
jae
mov
cld
xchg
insl
jo
add
adc
mov
adc
aas
sbb
jecxz
push
sbb
push
inc
popa
mov
sub
rclb
mov
imul
push
cmpsb
jg
inc
lds
add
add
adc
sarl
das
faddp
ficoms
arpl
out
jp
inc
aad
push
jno
aas
or
dec
sbb
repnz
push
sbb
jg
cltd
dec
xor
clc
movsb
xchg
mov
stos
lods
shl
and
addr16
jle
cli
xchg
pop
xor
add
add
xchg
inc
icebp
std
andl
mov
addr16
ja
push
pushf
xor
cmp
clc
outsl
cmc
lods
jle
int3
jge
sub
lret
hlt
fs
jp
or
ja
xor
or
fimuls
jl
test
cltd
sub
add
add
add
add
dec
inc
mov
jle
aaa
sub
adc
call
call
call
cmp
inc
push
aas
jp
jp
mov
jnp
push
xchg
adcl
xor
jmp
inc
sbb
add
sub
dec
jge
add
or
cwtl
push
or
imul
addr16
inc
aas
rcrl
add
les
fs
xor
sub
insb
adc
daa
jno
in
ss
test
adc
add
out
cmpsl
push
pop
das
mov
dec
adc
add
or
fs
out
and
mov
push
cmp
fnstsw
xchg
pop
and
add
inc
call
lods
incl
adc
and
out
insb
xchg
mov
jns
shlb
insb
pushw
cmp
insb
xor
xchg
jmp
push
or
jno
adc
imul
pop
es
adc
loop
and
call
call
sbb
adc
mov
imul
and
addb
cmp
les
pop
idivl
add
add
add
xchg
das
bound
dec
scas
imul
fidivl
add
sti
jns
inc
lods
sub
hlt
ja
push
leave
or
mov
cmp
loope
and
cld
xchg
lock
ficoms
cmp
imul
push
cmp
adc
fisttpl
cmpsl
dec
jnp
lds
xor
dec
mov
hlt
out
push
sahf
xchg
and
add
xchg
adc
jg
lret
outsl
cmc
imul
mov
data16
push
or
scas
dec
lahf
int
test
or
mov
mov
pushf
xchg
pop
ss
sub
lea
fmull
pusha
mov
ja
xchg
jge
mov
add
fs
sarb
mov
or
jne
mov
adc
xchg
aad
shrl
sbb
sbbb
jns
mov
repz
addr16
insb
aad
add
out
pop
sti
sub
adc
add
pushl
cld
jbe
push
lds
add
cmp
adc
out
repnz
adc
mov
xchg
in
into
leave
arpl
call
lock
scas
jno
pop
sbb
sbb
call
call
sbb
je
inc
sub
sub
add
fcmove
fistpll
fsubrl
filds
add
adc
dec
imul
sub
jb
sub
cmp
cmp
push
ja
cld
jl
mov
xchg
iret
mov
es
and
cmp
pop
xor
or
test
add
cmpb
scas
xlat
pusha
push
xor
sahf
out
dec
into
inc
faddl
push
jp
pop
xor
cmp
mov
sub
mov
popf
sub
push
in
xor
ret
test
xchg
test
sub
inc
add
mov
inc
cmp
pop
xchg
pop
add
ss
std
fdivs
and
data16
push
in
cmpsb
mov
add
insl
jge
gs
push
scas
loopne
ja
decl
int
ret
outsb
in
out
enter
in
ret
aad
jo
ret
mov
mov
push
jl
push
iret
add
add
mov
lock
mulb
insl
call
call
iret
ljmp
mov
jge
inc
sub
add
std
cmpsb
push
int3
adc
daa
fcoml
jb
xor
pop
subl
jmp
scas
dec
js
verw
push
jge
dec
xlat
in
scas
jle
mov
jo
jbe
jmp
add
add
add
add
test
outsl
mov
les
adc
enter
push
addb
call
sbb
mov
dec
pop
xchg
push
mov
nop
dec
outsl
sahf
xor
imul
sub
inc
out
or
push
call
push
data16
cmp
cmp
rcll
or
fiaddl
adc
arpl
pop
fnstsw
xor
cs
gs
arpl
xchg
loopne
loopne
and
push
jl
fidivrl
repnz
xchg
cmp
mov
mov
insl
clc
jb
inc
dec
rcrb
aam
vpsadbw
xlat
test
rolb
add
add
add
add
pop
rol
mov
bound
adc
sub
cli
loope
dec
dec
mov
sub
xchg
jge
pushf
xchg
fldcw
inc
push
nop
xchg
inc
cmp
es
and
call
mov
add
add
add
imul
imul
add
jl
clc
adc
pop
mov
addr16
pop
jne
and
in
pop
jb
jae
or
add
add
add
and
sbbb
sub
push
xor
sahf
sub
add
add
clc
pop
lcall
inc
sahf
out
or
xchg
sub
fldt
push
popf
add
pop
stos
lahf
pop
aaa
jb
lock
sbb
ljmp
fidivs
hlt
mov
cmpsb
mov
dec
pop
outsb
sbb
stos
sub
and
sbb
into
pop
pusha
add
repz
jne
pushf
sub
loop
inc
in
dec
shll
sub
rcll
push
lret
test
mov
call
jbe
iret
jp
xchg
call
ss
js
mov
stos
dec
insl
ffreep
loop
xchg
call
call
adc
add
add
add
xchg
fidivrs
es
shrl
xorb
cmp
lcall
loope
loope
insb
xor
cltd
loope
das
inc
jmp
xor
test
cli
sub
fistps
dec
cmp
jl
icebp
mov
testl
fstpl
arpl
pop
adc
mov
dec
lock
jno
outsl
cmp
cmp
inc
pop
stc
xor
add
add
and
fs
imul
lea
pop
sbb
jbe
jnp
sub
add
scas
xchg
aaa
sub
sbb
movsb
pop
xchg
jno
jb
insl
push
lcall
add
sbb
testl
call
call
mov
movsb
xor
int3
dec
mov
cmp
ds
lds
inc
sub
push
das
cmp
and
mov
or
and
mov
jb
daa
mov
test
test
push
or
lret
rcrl
leave
mov
jge
addl
add
add
add
data16
rorl
adc
sub
mov
loope
imul
lret
add
mov
fs
mov
fidivl
lods
movsl
cs
lahf
inc
push
shl
pop
lock
push
xchg
adc
cmp
mov
jl
mov
ds
inc
imul
add
add
test
mov
stos
push
add
add
mov
add
dec
cmp
lods
xchg
sbb
lea
stos
clc
push
lcall
loop
push
scas
mov
pop
mov
stc
lods
repz
mov
jle
inc
call
call
inc
push
and
dec
jne
shrb
cmpsb
mov
lret
into
test
stos
sbb
test
js
cmpsl
sar
pop
dec
popa
mov
out
jae
lods
popl
lock
xchg
lahf
mov
push
lret
mov
inc
psrld
enter
xor
fisubs
inc
adc
fbld
cmp
xor
push
fcomps
inc
pop
push
hlt
cmp
int3
xchg
out
out
ss
xchg
push
ja
pop
leave
mov
inc
jge
subl
add
add
add
je
xlat
stos
pop
pushf
push
cs
div
fisttps
jae,pt
rcr
xchg
and
fimuls
dec
ret
sub
dec
out
jmp
jo
lds
pop
sub
arpl
inc
sub
push
call
icebp
push
cwtl
mov
and
or
sub
add
add
add
xorl
cmp
or
xchg
cs
add
pop
jb
ljmp
gs
arpl
sub
imul
cmp
cmp
sbb
xchg
mov
cmc
icebp
fisttpl
int
jp
ds
mov
add
add
or
mov
jmp
fidivrl
push
nop
adc
scas
insl
movsb
frstor
adc
jns
sub
repz
jae
lock
push
dec
into
xchg
call
call
andl
and
fldl
sbb
out
lods
mov
aas
push
jns
ja
push
or
daa
push
out
mov
dec
jle
or
imul
add
add
add
sbb
imul
xor
add
mov
sarb
inc
aaa
or
aaa
arpl
out
add
lahf
dec
adc
insl
sbb
cmp
inc
sbb
out
movsb
cmc
cmp
dec
lods
fadds
fdiv
push
pop
in
cmp
adc
push
inc
int3
aad
xlat
repz
movsb
stos
ja
hlt
push
sub
cmp
roll
ret
add
or
pusha
shrb
insb
cmp
or
mov
push
loop
add
call
pusha
out
push
fimuls
adc
ja
fisttps
jmp
mov
xor
push
lcall
call
inc
int3
adc
jns
pop
icebp
test
call
call
push
pop
cmp
bound
cmc
push
rep
or
jne
mov
es
xchg
add
jns
mov
shl
lret
jl
mov
adc
rcll
arpl
xchg
push
imul
xor
push
mov
and
aam
ficomps
hlt
or
add
std
push
add
pusha
rorb
dec
lea
or
lret
mov
push
js
hlt
sbb
add
add
cmp
pop
fbstp
dec
xor
xchg
pop
jg
mov
xor
dec
imul
jo
fisubs
sub
mov
add
imul
inc
loopne
lahf
sub
adc
shlb
lret
fistpll
or
outsb
lret
xor
popf
in
sti
cmpsb
jecxz
pusha
repnz
enter
jg
sub
loop
push
inc
insl
push
and
dec
push
testl
fildll
push
adc
add
test
les
inc
out
dec
outsb
mov
xchg
push
inc
cmp
pop
sub
popa
ja
xor
ss
call
call
jle
xchg
ja
mov
repz
mov
fistpl
dec
and
push
mov
outsl
inc
imull
dec
inc
mov
pop
rol
add
add
add
leave
pop
pop
mov
out
std
inc
gs
lea
or
fmul
test
push
popa
aad
sub
cld
les
mov
pop
in
dec
nop
ret
mov
cwtl
dec
mov
inc
mov
jb
testb
jbe
add
jmp
mov
jg
add
add
das
adc
lods
cli
push
cld
jmp
jae
sarb
lea
aam
dec
adc
add
fcmovne
lret
push
in
ret
test
call
call
in
fsts
dec
push
xchg
dec
jno
jbe
in
lods
cmp
adc
add
and
pop
pushf
mov
push
fwait
dec
outsl
addr16
dec
cmpsl
mov
test
cli
call
cltd
mov
mov
out
push
dec
jae
and
push
shlb
fbld
test
jnp
mov
push
xchg
xchg
popf
jbe
fdivs
lds
pop
into
lods
mov
xchg
in
and
adc
push
push
lock
les
add
stc
mov
flds
hlt
call
insb
int3
sub
clc
jmp
cmc
aas
aas
xchg
adc
mov
out
and
andb
fwait
mov
sbb
or
jno
lret
mov
lret
jge
mov
xchg
hlt
and
fiadds
add
rcll
mov
mov
adc
lret
adc
lds
out
mov
aam
mov
popf
jle
clc
in
mov
cltd
cmpl
add
cwtl
or
imul
push
adc
pop
scas
mov
test
add
aam
mov
add
lcall
fbld
test
or
mov
lods
aas
aas
in
mov
add
or
dec
mov
leave
movsb
xchg
ret
call
call
call
add
add
testl
add
pushf
push
icebp
pop
mov
test
adcb
sub
in
jp
pop
out
insl
movsb
cmpsl
inc
repnz
or
movl
mov
lea
mov
pop
data16
pushw
data16
sbb
add
add
push
idivl
mov
cmp
xor
jle
ret
jmp
push
iret
fnstsw
sarl
fsubr
dec
scas
imul
cltd
push
clc
jmp
cmpsb
inc
and
movb
or
lcall
fsubl
out
lods
mov
divl
outsl
jecxz
xchg
out
dec
arpl
inc
mov
pop
lret
pop
mov
add
add
add
add
add
add
mov
adc
adc
cmp
test
mov
insb
jne
shll
clc
ret
cs
fs
add
bound
jg
repz
add
mov
sahf
inc
push
pop
test
aam
mov
imul
add
add
cmp
mov
fnstcw
dec
xchg
cs
pop
jp,pn
push
int
or
pop
sbb
jl
mov
cwtl
je
mov
mov
bound
nop
out
pushf
jo
fs
test
outsb
aam
outsb
xchg
stos
dec
stos
xchg
jbe
mov
xchg
add
add
pop
and
lock
out
xchg
mov
inc
sbb
and
in
aas
aaa
jmp
shrb
stc
fst
adcl
push
call
call
cmc
and
lret
ljmp
push
pop
pop
test
out
add
or
xchg
test
movsb
icebp
pop
pushf
fsubp
adc
in
mov
mov
leave
and
sbb
test
hlt
lret
mov
jno
sub
leave
adc
popa
xchg
lret
xchg
inc
push
xchg
pop
mov
incb
add
pop
nop
out
ret
jle
pop
ret
sub
jle
adc
sbb
dec
xor
pop
lret
aam
in
pop
mov
xorl
sub
sub
fwait
enter
out
mov
mov
adc
hlt
pop
or
push
fwait
xchg
sar
je
jno
mov
roll
scas
scas
add
mov
or
add
sbb
push
aas
std
pop
out
fldl
push
push
mov
faddp
out
stos
push
xor
jmp
mov
add
add
add
xchg
insl
cltd
xchg
and
ret
xlat
push
add
add
mov
sahf
cmc
jo
add
jle
mov
mov
es
jns
push
push
dec
cmpsl
xchg
hlt
sub
push
lahf
addb
or
sbb
add
inc
fs
out
negl
add
push
jg
loop
cmc
clc
inc
jo
xchg
test
push
or
loopne
data16
aad
enter
aas
aaa
shrl
jo
loopne
js
call
call
cs
add
stos
mov
imul
jo
popa
arpl
stos
popf
inc
out
jle
cmp
add
mov
xchg
push
pop
inc
mov
fwait
dec
ret
push
dec
mov
add
push
sbb
mov
push
or
sub
xor
scas
add
mov
rdtsc
fistl
cmpsb
pop
mov
adc
iret
repnz
add
dec
pop
movsb
imul
push
fwait
mov
cltd
fldenv
pop
mov
and
fisubrs
mov
out
cmp
jge
call
add
add
movsl
shlb
add
add
add
mov
push
shrl
fdivp
dec
roll
adc
inc
outsl
stos
mov
pop
lods
repnz
add
jo
iret
push
hlt
xchg
jns
xchg
add
pushf
jo
pop
test
push
mov
push
es
mov
jmp
jle
sbb
loopne
test
cmp
rcll
add
add
sub
mov
fcoml
test
pushf
sub
or
push
xchg
outsl
bound
cltd
add
mov
mov
aad
or
pop
cmpsl
fsin
mov
mov
add
add
add
jns
repnz
add
add
loopne
and
xlat
jmp
mov
imull
sbb
mov
lds
arpl
jle
xor
sub
arpl
lahf
cmpsb
add
rcrb
xchg
push
mov
rep
bound
or
or
mov
jl
addb
lods
ja
fstpl
pop
pop
push
add
stos
xchg
fstl
leavew
xor
cmp
les
jno
sbb
mov
and
lds
mov
dec
xchg
pop
or
sbb
inc
add
mov
add
sub
mov
loop
nop
jno
xor
lret
inc
dec
pop
mov
clc
cld
lods
jmp
add
xchg
pop
in
gs
icebp
nop
stos
cmc
pop
or
sbb
sbb
mov
test
sbb
mov
mov
xor
pop
pop
pop
sbb
fdivrs
mov
and
jl
iret
sub
add
add
mov
add
addr16
data16
bound
sti
call
call
call
jecxz
jns
dec
movsl
mov
nop
test
add
add
add
lds
pop
lods
fistpll
stos
mov
outsl
inc
test
sbb
push
cmp
and
stos
push
hlt
lock
inc
stos
mov
and
out
int3
push
das
add
insl
push
popa
leave
add
inc
and
icebp
mov
mov
xchg
jne
es
pop
fsubp
push
sub
xchg
and
fs
inc
or
mov
and
sbb
lret
adc
iret
sub
popa
xor
or
arpl
sub
clc
fcmovnu
iret
xlat
add
add
lock
fistl
out
lock
or
cmp
into
mov
inc
rcll
data16
repz
cli
xor
add
add
add
fistl
mov
mov
aaa
insl
test
pop
outsb
dec
mov
rolb
out
mov
add
pop
add
sbb
or
loopne
mov
xlat
pop
push
push
fnstsw
adc
ficoml
pop
pop
xchg
bound
mov
mov
push
into
mov
dec
arpl
pop
mov
mov
add
add
daa
jno
sbbb
cmp
in
mov
cmpb
stos
mov
popa
lods
mov
in
pusha
fs
pop
mov
push
add
lods
lods
es
daa
mov
jb
imul
xor
jae
add
push
icebp
popa
add
test
add
add
add
mov
push
test
gs
dec
add
sub
inc
cmp
cmpsb
xor
dec
call
call
jle
fidivs
and
xor
ficomps
stos
add
stos
jno
imul
and
outsl
cmp
adc
pop
mov
fsubs
je
add
inc
sbb
fnstenv
mov
add
cmp
or
bound
rcrb
jae
cmp
lds
adc
or
and
jb
or
dec
mov
mov
repz
insl
push
mov
xor
dec
dec
sbb
mov
add
add
add
je
ljmp
dec
mov
cwtl
out
mov
push
push
adc
mov
xorl
sub
pushf
in
lea
mov
mov
sti
bound
cwtl
jp
mov
das
push
mov
sub
xchg
pop
inc
and
call
call
call
mov
add
in
call
add
add
cmp
xor
jl
add
push
cwtl
and
add
add
decl
pop
out
movsb
jb
test
imul
hlt
jmp
adc
xorb
dec
adcb
insb
popf
lcall
mov
add
sbb
insb
push
dec
rorl
dec
adc
sahf
xor
ljmp
push
pop
sbb
hlt
ljmp
sbb
push
add
or
je
mov
mov
lods
mov
and
insl
movsl
out
les
sub
arpl
add
add
or
repnz
fs
add
negb
outsl
pop
add
xchg
add
fdivr
adc
add
je
pop
push
mov
sbb
xlat
ja
call
call
add
dec
and
out
push
shr
push
push
dec
mov
ljmp
mov
jno
hlt
popa
xchg
sbb
push
roll
push
lods
push
iret
cli
jb
pop
add
mov
adc
cmp
out
push
idivl
lds
in
sub
jg
lods
inc
mov
loopne
sbb
jns
aaa
test
les
xor
mov
xchg
inc
mov
jb
loope
lret
test
lods
adc
xor
mov
lods
and
add
add
add
test
andl
shrl
mov
xchg
dec
lods
popf
jns
out
pop
or
aas
out
jb
pop
test
les
out
icebp
push
stc
jge
add
add
add
add
sbb
and
imulb
adc
mov
mov
cmp
aam
lahf
faddl
ficoms
stc
dec
pushf
pop
cmpsb
cmp
adc
ret
cmp
cli
cmc
pop
rcr
inc
cmpb
sbb
add
mov
sbb
push
sub
cmp
into
add
ficomps
and
int3
lods
adc
jle
pop
jmp
push
in
test
adc
push
cmp
mov
mov
jae
dec
add
pop
push
jbe
sbb
sar
fisttps
and
xchg
pop
fnstsw
dec
repnz
cmpsb
call
call
ficoms
mov
mov
incl
add
add
add
add
pop
push
mov
mov
out
pop
sub
xor
call
cmpsb
dec
cmp
cmpsl
test
aas
jne
add
divb
repz
mov
cmpsl
sti
inc
pop
in
mov
jae
cmp
in
or
or
insl
int
adc
in
sti
aas
push
inc
loopne
aad
mov
dec
rcl
push
or
in
arpl
loope
push
mov
lret
sub
dec
or
leave
negl
loope
mov
inc
data16
incb
cmpsb
add
sub
mov
cmp
add
add
add
xor
push
stos
fcmovnbe
mov
mov
and
or
sub
sti
adc
mov
je
mov
sbb
jg
call
push
lret
sbb
xchg
sub
add
cmp
xchg
or
mov
out
adc
pop
xchg
lret
xchg
rorb
repz
sub
pop
popa
xor
add
add
add
add
int
rclb
jne
mov
cmp
add
add
add
add
xchg
lods
stos
pop
jnp
push
mov
in
adc
add
add
add
add
cli
sbb
jle
xor
outsl
push
data16
outsb
out
inc
xchg
cmp
out
fwait
aas
je
mov
sahf
add
mov
lods
push
mov
xor
negb
ljmp
add
adc
push
add
add
mov
sbb
imul
pop
sub
cld
ret
das
pop
leave
add
lods
and
lahf
imul
int3
push
fisttpll
out
xchg
add
std
clc
xor
pop
cmp
jecxz
das
adc
sub
add
add
add
add
aas
sub
mov
or
and
sub
xor
enter
adc
in
loope
sbb
push
mov
or
and
aas
fsubrs
push
sahf
mov
fwait
sbb
clc
mov
mov
add
add
add
add
jecxz
js
jbe
pop
fisttps
adc
call
addl
add
add
pop
arpl
aas
repnz
call
call
adc
add
cmpl
in
pop
push
push
test
lret
xchg
fisubrl
xchg
push
sub
push
out
or
inc
jecxz
jb
andb
fsubrs
data16
sbb
add
add
call
call
dec
xor
push
pusha
adc
xor
mov
adc
fwait
sti
je
enter
pop
or
ret
or
clc
insb
mov
test
add
add
std
push
das
sti
lret
inc
add
lret
lret
xlat
cwtl
inc
ds
lahf
fucomip
jne
adc
and
icebp
push
jo
lcall
lods
xor
and
loopne
or
mov
add
adc
jbe
arpl
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
insl
imul
outsb
arpl
gs
outsl
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
inc
add
dec
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
test
inc
add
mov
add
rcrb
add
add
push
mov
push
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
ss
and
inc
gs
loop
and
insb
aam
pusha
lea
ds
scas
lock
xor
sub
leave
jle,pn
xlat
inc
mov
loop
push
ja
cld
shrb
add
or
scas
add
pminsw
push
ss
sub
rep
pop
push
ds
inc
sahf
addl
insl
and
inc
shll
insl
call
ja
sub
cmp
mov
dec
pop
or
add
add
loope
nop
pop
push
and
and
arpl
in
inc
enter
int
inc
pop
xor
mov
out
push
add
mov
add
push
and
inc
pusha
jl
inc
iret
and
pop
leave
in
mov
or
sbb
mov
push
and
in
inc
jp
out
push
movsb
in
add
add
add
nop
movsl
push
adc
call
call
xchg
daa
cmp
mov
jno
ds
push
jmp
pop
mov
add
add
add
inc
cmp
je
pusha
mov
jg
daa
jo
jge
cmp
imull
add
or
fs
loopne
sub
lods
loopne
mov
addl
sub
sbb
imul
mov
or
jbe
sbb
push
sbb
inc
lods
add
arpl
cmp
fiaddl
mov
sub
mov
adc
or
jg
add
aas
pop
and
pusha
mov
cmp
mov
pusha
aam
cld
arpl
pusha
or
add
add
add
data16
in
sbb
sarb
or
xor
xchg
movsb
jbe
mov
sbb
cmpsb
add
add
jl
cli
out
push
les
jns
das
adc
imul
imul
call
call
inc
pop
and
dec
inc
xchg
cmp
add
cmpsb
nop
jno
add
pop
mov
test
jp
jnp
aas
mov
jno
fisttps
roll
add
add
add
add
insl
in
and
xor
push
mov
insl
or
pop
arpl
lods
add
jle
std
sbb
pop
mov
movsb
jbe
sub
mov
aaa
pop
dec
rclb
mov
pop
or
xor
mov
jge
popa
mov
ja
xchg
pop
sbb
or
leave
aad
fldt
add
add
add
adc
sub
movsb
cmp
divb
jno
xor
sub
xorb
inc
ret
and
shl
insb
push
sbb
pop
addl
add
xor
dec
or
dec
jne
movsb
sbb
call
call
push
sbb
sub
ds
lods
add
cmp
inc
movsl
sbb
add
add
add
leave
out
test
dec
pop
sbb
or
push
in
or
jae
add
lods
add
jge
or
or
sub
mov
xchg
es
add
add
add
ja
push
dec
mov
jne
daa
movlps
cmc
xchg
bound
daa
es
mov
bnd
out
in
bound
add
add
fadds
and
int3
push
inc
data16
addr16
inc
stos
push
fwait
push
add
mov
arpl
outsl
call
call
call
jle
jne
les
mov
jns
jne
iret
mov
out
jbe
pop
push
bound
sahf
insl
jb
cmp
push
sarb
call
inc
mov
add
iret
adc
insl
sbb
xor
lahf
or
push
pop
pop
xchg
pop
add
mov
inc
sub
pushl
or
jp
and
mov
dec
scas
lret
fisttpl
push
js
popa
sbb
push
cmp
and
pusha
aad
arpl
adc
shrb
cmp
mov
inc
imul
sbb
je
mov
cmp
push
mov
adc
sbb
xchg
push
sub
xchg
mov
and
lods
loopne
xchg
mov
sbb
stc
pop
or
add
insb
ret
add
sub
or
fistpll
sahf
hlt
cmc
mov
jae
inc
pop
sbbb
or
adc
stos
cmc
dec
pop
mov
jl
sbb
test
lahf
mov
in
xchg
ficomps
mov
add
add
insb
adc
sahf
cmp
test
sbb
jb
pushf
scas
call
call
push
sbb
lds
pop
je
jnp
jle
fidivl
lret
ret
inc
xchg
add
add
sub
xchg
add
cli
sub
in
pop
push
cmp
cmp
sub
pop
mov
push
sub
out
dec
enter
insb
and
and
jp
fdiv
mov
std
enter
jp
insl
or
inc
adc
push
in
stc
pop
aaa
sbb
add
add
add
add
dec
data16
mov
fistpll
mov
cmc
sbb
xchg
cmp
mov
jmp
pop
lret
jmp
bound
pop
xlat
or
mov
aad
mov
scas
sub
sbb
dec
roll
add
add
add
add
negl
cmc
stos
jg
sub
call
fimuls
iret
mov
xor
sub
push
adcl
jne
xor
or
cmp
out
call
call
mov
stos
imulb
push
fsubr
lods
cmp
pop
inc
lcall
enter
or
in
pusha
sub
push
call
call
call
cltd
imul
outsl
sbb
popf
adc
push
dec
push
or
jno
ficoml
loope
pop
xchg
gs
pop
popf
pop
jno
arpl
repnz
pop
mov
adc
test
imul
sahf
jno
xchg
sub
into
xchg
pop
sbb
popa
rolb
cmp
or
enter
add
add
fsts
xor
ja
out
mov
xor
ja
inc
out
pop
xor
xchg
cltd
or
pop
in
ret
fwait
ud2
out
insb
sbb
mov
fs
jns
aaa
xchg
dec
dec
les
ljmp
jg
or
jecxz
xor
xchg
shrl
in
inc
add
push
cmp
jmp
lods
ja
in
adcl
add
add
add
sbb
iret
lret
sub
outsb
insb
xor
and
popa
lahf
lcall
cld
imul
cmc
call
call
call
cmp
out
daa
mov
or
ljmpw
add
add
add
fucom
repnz
dec
mov
push
movsl
imul
mov
cli
jl
mov
sbb
rolb
dec
mov
mov
xchg
mov
cltd
cmp
cmpsb
xor
lods
sbb
xchg
push
add
jns
and
addr16
inc
ljmp
and
xchg
pop
xor
add
add
add
add
add
fwait
pop
das
jge
addr16
jg
rcl
cmpsb
repnz
xchg
imul
mov
and
lcall
test
loope
decl
shlb
arpl
inc
inc
xchg
js
adc
sahf
imul
mov
push
xor
adc
xchg
lods
dec
cmc
sbb
add
jmp
add
fsubrl
cld
aam
test
fwait
enter
out
je
xchg
scas
decb
sahf
loopne
xchg
jmp
addr16
pop
call
call
scas
or
dec
in
cld
sub
sarl
inc
icebp
mov
adc
add
inc
loopne
add
test
xchg
inc
std
xchg
fmull
sbb
sub
adc
pop
les
test
jmp
push
fiadds
fsubrl
int3
xchg
mov
push
push
stos
testb
mov
mov
jno
jo
pop
sub
cmovnp
lds
jo
push
scas
mov
dec
ljmp
das
faddl
sub
add
sbb
inc
loope
sub
inc
adc
push
pop
leave
push
stos
push
xchg
leave
nop
mov
js
xchg
lahf
mov
jg
insl
mov
adcl
adc
enter
in
sub
dec
and
gs
stos
jne
movsl
mov
cs
daa
xchg
aaa
xchg
cmp
arpl
ja
pop
int
xor
cmp
dec
adc
fisttpl
mov
clc
ss
xchg
jbe
sbb
jge
cwtl
call
call
call
add
rcrl
test
pop
xchg
popa
pop
lret
fiadds
cmp
push
add
add
add
rcrl
fs
cmp
iret
jb
add
xor
repz
push
mov
lods
ljmp
pop
xchg
into
out
loope
sub
bswap
push
xor
pop
arpl
js
pop
dec
jno
mov
sbb
sbb
shlb
adc
call
fldl
or
dec
sub
movsb
in
insl
mov
xlat
adc
daa
lods
jno
mov
cmp
xchg
or
adc
sbb
sbb
dec
cmp
dec
fnstsw
cmp
and
xlat
adc
in
idiv
mov
mov
sarl
add
fisttpl
mov
inc
sbb
aaa
xchg
xlat
mov
mov
pushf
fistps
adc
add
push
arpl
hlt
in
dec
jae
popf
ret
stos
or
es
add
sub
inc
fucomp
into
int
sub
das
testb
push
mov
sub
sbb
movsl
aas
loopne
adc
lret
pusha
push
out
push
cmp
push
jne
sub
mov
call
mov
add
js
inc
lret
fwait
inc
aaa
repnz
mov
adc
mov
push
es
cltd
push
pop
pop
pop
xor
sbb
ja
pop
push
jb
and
push
fwait
cmp
daa
or
inc
incb
sub
int3
sbb
add
dec
pop
fwait
imul
scas
call
call
xor
pop
inc
data16
add
add
mov
fstl
jbe
sbb
addr16
into
sbb
push
pop
inc
add
jae
sub
inc
leave
jl
imul
sarb
insl
lcall
pop
xchg
outsl
cld
sub
and
lock
andl
sub
loop
pop
cmpsb
pop
and
sub
rclb
xor
add
add
add
add
pop
or
pop
adc
push
jp
and
imul
mov
cmp
and
dec
pop
sbb
mov
and
push
jl
lds
je
sbb
ja
cli
call
add
cmpsb
cmp
aas
loop
or
xchg
in
and
inc
xchg
add
cmp
add
adc
push
out
sbb
pop
or
sub
sti
or
enter
inc
ja
push
dec
rclb
mov
xchg
xchg
jecxz
fimuls
pop
jg
jns
push
sub
call
call
stos
sub
add
andb
sahf
sub
leave
std
pop
pusha
shlb
adc
inc
scas
lret
cmpsb
add
push
sbb
sub
cld
push
insl
inc
inc
cmc
mov
pop
pop
push
jae
js
loopne
and
pushf
lsl
adc
imul
rorl
adc
jne
cmp
cwtl
rolb
sub
call
call
call
add
dec
sub
call
call
outsl
cmp
push
cmp
roll
js
mov
dec
add
rorl
adc
mov
es
in
jo
in
pop
lods
mov
mov
cld
int
sbb
jmp
mov
icebp
ljmp
adc
pusha
movsb
or
sbb
jp
movsl
mov
jae
aad
mov
mov
jnp
push
sarb
pop
in
data16
aad
mov
inc
mov
leave
inc
mov
push
add
sbbl
or
jno
xchg
and
push
xlat
fldenv
into
outsl
test
inc
hlt
adc
jnp
in
push
loope
roll
pop
out
bound
call
call
mov
in
lods
mov
sbb
sub
iret
call
lret
mov
inc
add
leave
xchg
int3
jnp
pop
sub
stos
sbb
mov
push
add
sub
sub
add
add
add
orl
lds
push
jg
stos
lret
clc
popf
pop
xlat
notl
lcall
push
sbb
sub
mov
and
lahf
dec
ljmp
leave
jg
int3
popa
mov
xor
movsl
shlb
mov
dec
dec
cmp
inc
add
xchg
mov
add
add
add
inc
test
cmp
add
fisubl
jmp
jno
nop
mov
lcall
adc
scas
fildl
push
and
inc
mov
add
pop
loop
pop
dec
xchg
xor
fistpl
jae
sar
inc
xchg
sbbb
push
pop
cli
cmpsb
jmp
or
cwtl
mov
sti
or
pusha
fists
xchg
je
pop
loop
fbstp
das
sar
data16
mov
cmp
into
mov
xor
stc
add
add
pushf
fsubr
fistpll
cwtl
iret
setnp
pushf
jo
jmp
jl
inc
cwtl
ffreep
mov
xchg
divl
test
lahf
ss
mov
imul
aad
cli
shr
aas
xor
mov
mov
and
push
lahf
frstor
sub
cwtl
cmp
ljmp
ja
rcrb
xor
idivl
add
ja
mov
jge
mov
xchg
aaa
jne
aad
sbb
loopne
add
js
adc
aad
xchg
ret
loop
add
loopne
out
pinsrw
xor
pop
cld
test
hlt
jno
jecxz
jl
jne
mov
call
add
out
movsb
dec
test
xchg
je
jg
pop
lock
mov
imul
push
in
sbb
iret
jle
cld
mov
pusha
ljmp
mov
sbb
jle
addl
add
repz
push
mov
loopne
lds
lcall
rclb
push
or
sbb
repnz
hlt
stos
loop
push
or
or
sbb
cmp
inc
orb
fiadds
cs
inc
fsubrl
rolb
xlat
test
dec
mov
lea
adc
add
mov
out
call
dec
jp
mov
push
das
push
fcoms
mov
popf
dec
push
imul
das
add
adc
pop
scas
ss
into
test
lret
push
mov
test
add
or
xchg
sub
mov
cltd
movsl
xor
adc
mov
out
or
call
call
xchg
jmp
sbb
into
mov
fstl
cmp
xchg
arpl
clc
mov
add
and
fnstenv
mov
add
add
add
pop
iret
loop
mov
rorl
push
lds
call
call
mov
xchg
pop
pop
mov
mov
iret
std
inc
jp
mov
imul
aas
je
mov
xchg
imul
ja
xchg
jae
shr
lds
ret
mov
insl
ljmp
jne
lahf
xor
mov
add
add
rcl
xchg
mov
sub
lods
xchg
xchg
sub
in
es
test
xchg
mov
or
dec
xchg
mov
add
add
add
lret
arpl
xchg
mov
sbb
mul
cmpsb
xchg
iret
xchg
jno
jle
push
in
xchg
repz
push
sub
movsb
mov
add
inc
add
mov
arpl
cwtl
mov
add
inc
add
jecxz
loopne
mov
add
lret
stos
outsb
out
iret
lret
pop
dec
jge
xchg
mov
out
xor
adc
cli
test
mov
aad
lods
movsb
lea
stos
adc
mov
add
add
add
add
sahf
push
jge
shrb
push
pop
mov
call
aad
mov
jp
or
add
fisubl
inc
sahf
loope
inc
dec
mov
incb
lock
adc
mov
inc
rclb
cld
mov
call
call
xchg
mov
cs
fisttpll
in
scas
mov
testl
scas
into
out
in
or
adc
jb
ja
push
add
add
hlt
mov
pop
add
sub
icebp
push
stos
jb
sti
mov
pop
out
out
scas
mov
add
add
add
add
divl
dec
jnp
lods
imul
test
lcall
imul
out
dec
lcall
ss
test
sub
aas
aad
cltd
mov
lahf
test
decl
imul
add
add
add
add
bound
sbb
inc
jb
jne
mov
inc
xchg
loopne
inc
xchg
and
or
and
add
mov
sbb
call
call
call
data16
jecxz
movb
lret
daa
or
lods
imul
cld
and
adc
sbb
and
jae
scas
ljmp
ljmp
add
add
add
jle
rcrl
out
jb
int
enter
cmp
movsb
mov
repz
mov
repnz
adc
mull
push
pop
call
mov
cld
push
cmp
adc
sahf
inc
lret
negl
enter
add
add
add
dec
jmp
add
xchg
adc
mov
mov
pop
sbb
outsb
add
jo
jnp
cmpsb
sti
sub
mov
mov
xlat
aaa
xor
subb
repz
inc
ds
insl
dec
int3
jno
aas
shlb
in
pop
clc
mov
add
ret
repnz
sbb
fistl
jle
outsb
call
call
call
pop
in
push
mov
mov
lahf
ds
dec
jb
fldl
add
jno
xchg
sti
mov
jp
mov
outsb
xchg
lods
je
test
and
clc
push
mov
pop
lahf
pop
cmp
jno
mov
pushf
call
xchg
movsl
mov
ss
adc
imul
dec
jg
mov
cs
sahf
stos
pop
xor
add
int
popf
push
xchg
inc
test
std
lock
dec
sahf
out
add
bound
sub
clc
add
mov
call
mov
add
add
add
dec
call
imul
fmuls
ficomps
sbb
pop
jge
pop
loopne
mov
insb
mov
pop
sub
mov
push
mov
mov
xchg
sbb
cli
out
fisubl
ja
sbb
adc
sbb
add
add
add
jo
out
sbb
jbe
aam
push
add
lcall
int3
add
add
add
or
insl
test
mov
mov
mov
add
cld
xchg
push
gs
push
mov
jle
mov
mov
mov
in
pop
push
xor
push
pop
insb
inc
ljmp
cmpsb
mov
mov
mov
aam
adc
mov
push
push
fiaddl
fucom
test
addl
int3
enter
es
jl
and
iret
es
faddl
add
add
cmp
push
aad
xchg
cmp
sbb
mov
sub
push
add
jp
iret
call
call
call
in
shll
movsb
cmp
sbb
ja
ja
pop
in
lea
icebp
adc
insb
stc
dec
pop
inc
push
pop
sub
jmp
or
or
sbb
mov
add
add
add
add
fisubs
aam
jnp
out
jl
mov
xchg
inc
fdivrs
call
dec
fs
lods
xchg
mov
xor
mov
xchg
add
in
xchg
xlat
loop
fwait
loope
pusha
cmpb
dec
ret
cmp
in
filds
add
mov
cmpsb
lcall
leave
push
mov
and
out
fs
and
lods
repz
hlt
push
xchg
aam
jmp
cmp
add
mov
xor
inc
add
add
add
add
fdivrs
push
mov
sbb
hlt
adc
push
mov
push
and
mov
mov
sti
mov
inc
mov
shl
mov
jns
inc
stos
sbb
pushf
add
sbb
cmpsl
mov
adc
push
rcl
mov
adc
test
xor
mulb
or
mov
cmp
jecxz
aam
cli
xchg
adc
mov
aas
cltd
push
mov
mov
shl
jle
lea
pand
adc
leave
or
iret
pushl
mov
add
add
add
adc
mov
lret
mov
stos
mov
loope
fcoml
jbe
cmpsb
push
ret
aam
inc
lods
pushf
xchg
pushf
stos
push
add
jge
pop
cltd
nop
orb
add
call
call
call
rorb
add
pop
sub
andb
cmp
sub
and
cli
pop
push
xchg
popf
sub
mov
add
mov
fnsave
mov
call
ljmp
jl
jb
add
fwait
mov
repnz
mov
rorl
add
jae
jnp
jl
jae
pop
call
repnz
sub
call
call
mov
inc
popf
push
imul
in
pop
xchg
dec
clc
pop
cwtl
or
repnz
test
test
push
push
inc
xchg
cmp
pop
clc
jbe
xlat
out
adc
jno
dec
popf
or
xchg
or
add
sbb
repz
jbe
pop
es
dec
push
cwtl
mov
sbb
fstpt
add
call
call
sub
jmp
call
mov
ljmp
jmp
adc
xor
ret
jmp
dec
or
clc
add
push
add
mov
sub
in
mov
pusha
pushf
in
dec
cli
sar
inc
in
mov
push
adc
xor
test
mov
loope
movsl
lea
xor
or
jecxz
leave
lods
popl
sti
test
cmc
xor
aam
push
or
into
jbe
push
sti
push
lock
movsb
push
stos
cli
shr
lcall
mov
push
aaa
jg
outsb
loope
loop
sub
add
sub
xor
inc
shll
call
add
add
add
add
or
lcall
imul
jecxz
repnz
mov
fcmovnu
fcoms
jns
mov
sub
sbb
mov
push
mov
xor
xchg
cmp
add
add
add
dec
cli
sar
out
rcl
push
mov
push
mov
and
add
lods
enter
add
js
dec
pusha
or
push
insl
mov
push
js
adc
pop
pushf
inc
cmpsb
xchg
aam
push
push
ds
lahf
inc
dec
push
sbb
icebp
dec
clc
jo
inc
shrl
mov
pop
add
addl
add
add
add
add
ret
sub
loopne
xor
outsb
push
call
call
call
pop
xor
and
jnp
lret
idivl
cs
cwtl
xor
cmp
mov
lahf
inc
jnp
add
mov
jle
out
or
cmp
fsubl
daa
imul
and
adc
mov
data16
sub
xchg
pop
mov
sbb
mov
in
add
cmpsl
or
rol
mov
fidivrl
sub
push
lds
inc
cltd
cmpsl
out
dec
dec
pushw
popf
jb
mov
in
inc
andl
call
call
call
inc
mov
mov
nop
mov
add
add
add
add
mov
enter
cltd
sub
imul
and
cwtl
mov
je
pop
mov
std
imul
jle
add
ds
xchg
dec
pop
pop
sub
mov
sub
mov
scas
jno
and
test
add
in
loopne
inc
fdivrs
xchg
xchg
cmp
scas
push
sbb
cmp
mov
data16
in
js
xor
xor
push
iret
push
sbb
jmp
mov
cmp
lahf
fisttpl
stos
scas
arpl
xor
mov
add
dec
js
sti
into
jne
mov
xchg
test
add
bound
mov
jno
ss
dec
aas
or
decl
pop
lret
sarb
push
cmp
pop
jge
fadd
add
add
add
add
in
les
push
pop
lret
stc
add
filds
popf
dec
inc
cmp
add
add
mov
mov
pop
dec
call
call
call
add
xchg
xchg
int
je
adc
popa
fdivs
mov
in
mov
adc
mov
pusha
pop
push
je
adc
jb
es
dec
daa
dec
mov
cmp
dec
mov
hlt
push
sbb
push
mov
lret
jle
xchg
mov
jp
cli
push
sbb
call
call
cmp
add
dec
mov
fildl
movsl
push
loop
div
aas
xlat
pop
fbld
loop
or
cwtl
shl
adc
mov
mov
popa
rcr
orl
ja
bound
and
cmp
icebp
into
add
pop
cmp
ds
xchg
cmp
popf
xchg
xor
dec
adc
ret
add
add
add
add
and
push
jns
scas
push
outsl
aam
add
add
add
add
shll
sub
outsb
mov
add
enter
jno
adc
lahf
or
loopne
nop
rorl
dec
xor
mov
hlt
in
cmc
sub
add
add
add
add
ret
pop
mov
test
fsubr
lahf
scas
pop
popa
xchg
adc
jle
jmp
fistps
mov
into
mov
add
out
movsl
fisttpll
shl
mov
loopne
outsb
jmp
stos
sbb
fnsave
movzwl
test
xor
push
add
add
pop
ljmp
sub
scas
aas
fstp
mov
cmp
add
pop
xchg
adc
clc
ds
std
add
nop
fdivrl
int
scas
jmp
arpl
test
and
outsl
jae
test
ficomps
out
adc
cmc
out
xor
jae
mov
jne
dec
xor
xchg
pop
and
mov
int
lea
fldt
add
add
mov
xor
fwait
add
add
add
add
inc
mov
add
add
test
xor
loopne
add
sbb
or
ds
call
call
push
cmp
xor
je
imul
dec
cmovp
out
ret
jo
sub
aam
arpl
xchg
xchg
in
sbb
mov
jae
xchg
addb
addb
or
mov
jp
bound
test
xor
scas
lds
dec
out
cmp
mov
or
sbb
jecxz
sbb
mov
inc
xchg
jmp
jecxz
jb
fwait
pop
test
mov
sbb
inc
push
inc
jnp,pt
out
fstpt
sub
add
add
add
sti
inc
rcrb
adc
xchg
aas
outsl
push
bound
pop
push
pop
sti
cmp
dec
pop
jmp
in
dec
faddl
push
repz
or
add
mov
push
inc
int
aad
test
fdivrl
jg
inc
dec
leave
lahf
dec
jae
pop
push
xchg
aad
repnz
push
test
ss
addr16
inc
sbb
negb
inc
outsb
and
add
add
add
jg
add
dec
mov
adc
push
push
call
call
xchg
test
call
call
or
sub
dec
in
popa
mov
jbe
jae
sub
xchg
mov
inc
and
pop
jb
cmp
imul
pop
outsb
fimull
dec
outsl
test
jmp
nop
xor
inc
xchg
mov
push
mov
add
stc
mov
in
adc
mov
cmp
mov
je
add
iret
stc
sbb
xchg
push
movsl
and
and
push
int3
mov
dec
cmp
pushf
and
je
jae,pt
mov
add
add
add
xchg
adc
pop
es
push
cs
nop
ljmp
orl
xchg
ret
jbe
push
aas
insb
ds
int
or
stc
daa
mov
mov
outsb
icebp
dec
or
add
add
add
pop
adc
mov
je
add
mov
leave
scas
jge
xchg
sub
jns
inc
or
push
push
popa
movsl
ss
lahf
mov
dec
pushf
xor
out
iret
mov
push
sbb
scas
lods
or
addr16
js
out
pop
push
add
add
sub
cs
sbb
jno
hlt
push
js
xchg
nop
not
inc
and
rorb
push
test
mov
sub
xchg
fs
vunpcklpd
pop
pop
adc
fwait
dec
sub
xor
je
test
call
call
call
pusha
push
jae
push
xor
pop
or
das
xchg
adc
dec
aad
daa
repz
sub
insl
push
xor
repnz
sahf
fbld
ja
mov
adc
dec
dec
in
call
icebp
jge
hlt
adc
dec
mov
mov
test
loope
push
cmp
sbb
cmp
fxch
in
xchg
aam
in
pop
in
mov
out
xor
and
fcomp
fildl
push
add
add
add
inc
popa
sbb
sub
cwtl
push
adc
fisttpl
in
rorl
add
add
add
sbb
jne
jge
dec
jmp
aaa
jp
stos
enter
pusha
dec
cwtl
pusha
inc
and
pop
sbb
jmp
push
and
mov
inc
jno
inc
hlt
mov
stc
inc
test
and
cmp
pop
sub
push
xlat
cmp
cmp
add
adc
cwtl
fcoml
or
adc
and
add
call
call
xchg
mov
jle
outsb
daa
inc
mov
add
jle
add
add
mov
xor
in
add
add
lods
push
mov
cmp
cmp
decl
add
and
cmp
lahf
cmp
mov
adc
adc
dec
clc
or
mov
adc
add
pop
sub
jno
fistps
mov
outsb
testb
add
add
add
add
ljmp
add
mov
aam
jmp
rclb
stos
push
je
rcrl
cmp
imul
add
add
add
add
sub
push
mov
jnp
aaa
add
xor
call
call
stos
sbb
xchg
push
imul
fldcw
lret
inc
call
call
call
loop
fstpt
and
add
sbb
pop
sbbl
cmovo
jbe
insl
call
call
call
ja
and
pop
xorb
dec
and
xchg
push
fstpl
sar
pop
add
std
pop
dec
adc
addb
add
inc
and
pop
xchg
jnp
test
inc
inc
in
jmp
xchg
stos
jg
inc
hlt
lea
imul
sbb
jbe
sub
inc
sahf
xchg
or
or
pop
xor
or
add
jle
sbb
cmp
out
outsl
adc
subb
sbbl
cli
mov
call
call
call
movsl
cmpsl
scas
cmp
in
push
fsubrs
lahf
ficomps
dec
inc
je
stos
cltd
pop
std
adc
push
pop
xor
jns
cmp
sahf
add
push
jne
mov
add
push
popa
dec
nop
insl
cwtl
lods
or
dec
sub
enter
add
out
test
inc
fldcw
dec
add
cmp
adc
or
add
inc
pusha
sub
mov
aas
mov
jmp
pop
add
into
push
add
add
dec
jle
mov
lock
shll
adc
outsb
icebp
cwtl
cld
jns
outsl
mov
addb
jae
test
fisttpl
scas
add
adc
sub
lcall
or
scas
xor
test
loope
push
add
ds
arpl
inc
mov
cwtl
xlat
test
fsubrp
sti
movsl
scas
sbb
jmp
test
cmp
imul
add
add
add
add
xchg
ret
mov
outsl
lahf
shl
xor
das
push
bound
aaa
es
mov
jmp
add
nop
or
add
cwtl
dec
mov
mov
sti
sbb
fmuls
add
adc
and
mov
fnstcw
jl
movsl
inc
and
sahf
mov
sar
sbb
xlat
add
add
and
mov
rcrl
rol
sti
nop
jl
ficoms
loopne
and
js
xor
jge
test
dec
sub
aas
jbe
adc
loopne
sbb
dec
jp
and
xchg
add
cwtl
fstp
jne
outsl
movsb
and
shl
sbb
aad
cmp
xchg
aad
cmp
cmpsl
add
int3
sbb
lock
mov
pop
int3
inc
scas
cmp
aaa
ret
frstor
popa
jle
stos
jle
aam
mov
jcxz
add
add
inc
sbb
movsb
mov
rcll
mov
lret
xor
or
mov
add
pop
in
scas
push
es
xor
fstps
std
clc
adc
call
call
call
out
dec
rcrb
mov
das
outsl
or
sub
out
in
mov
adc
clc
loope
or
fsubs
cld
movsl
mov
add
sbb
inc
ret
and
push
es
add
mov
mov
mov
add
mov
out
out
stos
add
in
cmp
add
adc
sahf
popa
stos
cmp
out
or
data16
repnz
xor
in
xchg
idiv
fstpt
jnp
dec
sbb
pop
push
xorl
call
loopne
pop
sti
dec
cmp
sub
popf
int3
in
xor
fisttpl
push
nop
jo
jae
and
add
inc
faddl
add
add
add
cmpsb
cmp
mov
inc
es
stos
push
xor
movsb
in
and
fcoml
or
jbe,pn
in
outsb
push
pop
adc
pop
adc
and
fidivl
add
add
add
sarb
scas
jns
cmp
mov
mov
out
shll
fistpl
jno
add
add
mov
xlat
push
inc
out
and
add
inc
inc
int
xor
call
mov
call
call
add
add
rolb
xor
mov
sub
and
xchg
int
pushf
pop
pop
mov
cmp
aaa
mov
sbb
scas
xlat
ficoml
std
imul
fbstp
jmp
xor
leave
mull
sub
insb
xchg
jg
dec
mov
mov
es
adc
pushl
sahf
sbb
xor
icebp
cmp
or
mov
loopne
inc
inc
scas
fwait
clc
xchg
mov
mov
xor
daa
xor
mov
ret
pop
and
add
mov
ljmp
add
je
or
stos
scas
xchg
add
inc
adc
pop
addr16
xchg
sbb
add
add
add
mov
sub
js
bound
std
push
xor
jne
or
dec
shll
es
mov
ljmp
add
nop
xor
cltd
inc
or
push
rclb
pop
and
mov
sbb
je
jge
gs
stc
xor
adc
rcl
pop
xor
sahf
sbb
push
inc
pop
daa
lods
sub
repnz
xchg
mov
add
jge
add
push
cmp
pop
daa
cmp
fiaddl
add
add
add
xor
cmpsl
ss
sbb
pop
dec
push
pop
dec
and
pop
fisubs
pop
push
jns
addl
and
popa
and
and
xchg
pop
outsl
cmp
call
call
insl
sbb
pop
jno
cmp
mov
insb
jne
lods
in
ss
in
sub
mov
add
and
add
xchg
stc
push
dec
or
pop
pop
or
daa
xorl
push
push
sbbb
add
pusha
add
mov
mov
inc
cld
movsb
add
es
daa
adc
jmp
aad
rorl
jmp
inc
pop
outsb
ret
nop
pop
and
pop
or
jp
scas
data16
pop
sub
in
or
add
add
add
and
fistpll
pop
push
inc
in
add
add
add
add
lods
outsb
arpl
popl
push
mul
jno
std
sub
fdivl
imul
sbb
gs
add
loop
mov
push
push
sub
push
aaa
xchg
jno
in
xor
dec
jns
daa
leave
pop
add
add
add
add
add
test
cmpsl
mov
inc
in
aaa
dec
add
ljmp
xor
movsl
daa
push
xor
adc
push
xor
fisubs
aad
add
mov
push
imul
add
cmp
push
jb
xchg
je
sub
sbb
xor
and
jae
adc
inc
inc
jb
xor
mov
add
add
add
adc
sbb
jge
imul
or
out
dec
jb
fstpt
inc
cmc
adc
inc
inc
inc
push
mov
sub
pop
daa
or
mov
jle
pop
push
jae
sbb
imul
pop
insb
pop
and
ret
xor
and
call
call
and
jne
push
imul
add
add
aas
cmpsl
cmp
xchg
out
xchg
push
and
loope
pop
shlb
add
push
cmp
push
in
fs
imul
jge
sahf
cmp
pop
jg
sbb
add
jno
add
add
push
push
ds
insl
pusha
or
clc
pop
or
push
je
xchg
cmp
stc
stos
je
inc
orb
mov
sbb
scas
pop
xchg
movsb
dec
xor
mov
add
add
dec
push
outsb
xchg
stos
loopne
and
push
dec
xor
and
xchg
fiaddl
mov
adc
or
jg
push
push
dec
aas
mov
idivb
or
sbb
jecxz
and
inc
sub
test
call
call
call
add
fstps
shlb
cmp
xchg
and
cmp
sbb
mov
movsl
push
dec
clc
lret
pop
gs
gs
enter
mov
adc
sub
mov
push
jno
popf
shrb
xor
add
cmpsl
inc
or
fwait
inc
arpl
add
je
cmp
add
mov
mov
dec
xor
andb
jbe
dec
dec
push
jns
cli
repz
push
push
xor
jl
cli
test
and
jno
push
cltd
push
repz
dec
sub
and
pop
push
pop
cmp
mov
add
add
xor
jne
test
add
add
add
add
jle
dec
add
mov
out
or
dec
adc
pop
xchg
xor
inc
lock
aas
test
stc
mov
jne
cmpsb
lock
popa
pusha
cmp
imul
mov
add
arpl
js
test
dec
push
mov
mov
jnp
mov
call
call
call
sbb
hlt
or
pop
insb
push
dec
mov
mov
jno
fs
adc
or
sbb
push
and
jg
fbstp
push
add
sub
ss
pop
or
jge
lods
es
jnp
pop
mov
insb
and
dec
and
cmpsb
and
mov
add
addr16
push
movsb
adc
adc
add
pop
push
es
and
cwtl
fbstp
push
call
call
sub
je
push
mov
add
pusha
aad
pusha
mov
sbb
adc
outsb
mov
pop
decl
jl
adc
or
in
int3
xor
or
dec
cmpsl
dec
add
adc
inc
arpl
jb
ret
and
xorb
outsl
pop
loope
and
jb
sub
inc
xor
in
and
repz
and
or
les
jb
dec
and
mov
sub
push
int3
stos
cmp
gs
sub
repnz
or
lods
in
adc
jge
sub
inc
roll
add
pop
stc
shll
mov
test
cmpsl
xor
rclb
leave
stos
movsl
pop
movsb
dec
aam
or
fisubrs
out
hlt
push
nop
int3
add
cmp
jo
sbb
add
add
add
add
sub
or
das
sbb
or
push
dec
cld
add
mov
sbb
stos
outsb
pop
mov
cmp
cmp
xor
pop
add
loop
adc
mov
aaa
add
lods
ja
call
pop
bound
js
outsb
fs
pop
add
out
data16
add
dec
cli
add
push
dec
sbb
scas
jno
out
dec
movd
jp
sahf
nop
imul
add
or
es
bound
outsl
sbb
sbb
roll
jne
cmp
pop
inc
mov
add
sbb
lods
jbe
orl
add
ja
sub
aas
push
fwait
js
push
xchg
xor
lahf
inc
ja
in
mov
add
add
add
xchg
int
call
call
add
pop
fs
inc
lods
rclb
jle
pop
pusha
push
jmp
or
jp
test
sub
movsl
ds
mov
fldcw
dec
add
ds
dec
adcl
shll
pop
push
frstor
add
add
sbb
cmp
xor
push
sub
insb
mov
scas
pop
repz
add
add
add
fimull
es
lds
insb
add
add
or
insl
enter
js
data16
fcompl
outsb
push
je
stos
icebp
loopne
mov
pop
jnp
fdivrl
inc
aaa
adc
sub
push
pusha
mov
je
mov
add
sub
call
call
mov
or
dec
nop
jl
dec
inc
add
dec
pop
lea
insb
sub
bound
mov
and
mov
fisubl
sub
aam
cmp
pop
out
xor
cld
cs
mov
arpl
movsb
hlt
or
mov
sub
xor
add
gs
pushl
cld
mov
imul
enter
mov
push
test
movsl
inc
cmp
fwait
outsl
or
jl
loope
es
call
sbb
scas
xchg
imul
mov
out
inc
fs
gs
mov
sbb
add
ljmp
lea
push
sub
jb
fcoms
mov
sub
add
lods
popa
mov
xor
mov
outsb
inc
pop
popa
pop
adc
adc
pop
sbb
inc
sbb
add
add
add
andl
dec
call
call
inc
ret
pushf
push
adc
cli
je
push
dec
sbb
cli
int
push
mov
mov
sti
xchg
lret
sahf
xchg
mov
sub
adc
hlt
pop
dec
movsl
cmpsb
enter
clc
std
and
fcmovnbe
fimull
leave
xchg
gs
mov
movsl
jle
dec
inc
and
push
int
test
add
or
jg
mov
pop
in
adc
add
cmp
add
add
xlat
cmp
inc
mov
sub
xor
add
arpl
add
add
lods
clc
cmp
repz
dec
repz
adc
dec
fnstenv
and
inc
jle
cmc
rcrl
test
pop
cmp
scas
dec
stos
push
adc
call
call
cmp
inc
insl
or
add
and
jecxz
add
or
adc
inc
mov
add
mov
ljmp
add
add
add
xor
add
aam
adc
mov
js
std
dec
add
add
mov
or
rcll
or
les
dec
in
pop
lahf
pusha
fs
push
lods
pop
dec
data16
inc
adc
or
sub
ja
decl
insl
std
clc
scas
push
dec
xor
pop
into
sub
jbe
inc
jecxz
adc
sbb
sbb
pop
shll
sbb
pop
push
push
push
add
add
add
add
pop
push
out
xor
stos
call
mov
jae
daa
adc
aad
repnz
call
call
call
pop
out
clc
scas
jo
jl
lret
add
cltd
pop
or
mov
mov
push
sub
jb,pn
jns
inc
das
cli
cmpl
sub
ljmp
or
xchg
xchg
or
ljmp
adc
xor
add
fs
jg
xor
aaa
or
dec
rorl
dec
cmc
and
and
push
fs
bound
xchg
rorb
mov
inc
cmc
xor
push
adc
cmp
popa
test
sub
cmp
jl
test
xchg
out
jbe
mov
push
pop
icebp
iret
pop
ja
loop
iret
dec
test
jae
rol
mov
lock
jne
loopne
daa
add
adc
pusha
dec
sbb
outsb
push
pop
xor
add
fiadds
and
dec
xchg
adc
les
in
enter
aas
dec
add
mov
daa
imul
lret
lods
mov
movsl
adc
test
jg
cwtl
xor
xor
inc
sub
insl
ss
dec
sbb
sub
adc
or
sbb
add
push
dec
sbb
sub
lock
dec
adc
add
add
add
add
fisttps
mov
popw
mov
jns
call
hlt
jnp
xlat
and
xor
leave
mov
add
decl
call
call
call
mov
fdivrs
add
add
add
push
jae
push
push
push
imul
add
add
add
add
fwait
addr16
adc
cmp
ja
sub
sbb
sub
mov
or
mov
call
mov
pusha
push
push
adc
or
xorb
sbb
pop
xor
inc
sbb
in
ljmp
ds
mov
jnp
cmpsb
daa
gs
cltd
pop
xlat
mov
pop
sbb
push
aas
jnp
sub
dec
mov
add
pushf
cmp
mov
lods
or
push
add
cs
push
push
in
lahf
push
mov
and
mov
push
or
push
and
xor
xchg
icebp
lea
push
dec
dec
into
add
push
pop
add
arpl
daa
push
and
sbb
gs
xor
js
pop
add
jle
mov
mov
cmpsl
pop
je
cmp
ficoms
sbb
push
ret
clc
sti
fisttpll
test
sbb
and
testl
cld
sub
and
imul
pop
jecxz
add
add
push
mov
ja
xor
cmp
lods
ret
add
add
arpl
xchg
ss
daa
mov
jne
pop
inc
ret
push
nop
jbe
dec
push
push
mov
jg
aaa
jns
push
jecxz
mov
add
push
sub
add
add
add
jg
cmc
and
mov
mov
dec
idiv
push
adc
das
sbb
jl
jecxz
call
call
lret
ret
sub
add
stos
inc
popa
inc
aam
sbb
js
pop
loope
sub
out
out
pop
or
mov
outsb
test
inc
mov
mov
aam
mov
dec
xchg
shll
fucomip
lcall
fisttpll
mov
mov
push
mov
mov
add
add
add
pushf
mov
gs
iret
cmpsb
test
mov
rcl
mov
or
scas
sbb
push
cltd
lea
iret
popa
jnp
mov
ljmp
enter
cs
inc
ret
and
mov
add
fnstsw
arpl
test
add
sub
fidivs
add
popa
addb
or
dec
and
adc
aad
adc
pop
push
jmp
loop
and
shll
mov
stc
pop
and
ds
lahf
jnp
sbb
add
add
add
adc
mov
test
insl
xchg
pop
sbb
mov
scas
xor
xchg
iret
fisubrs
test
push
mov
mov
addr16
jo
xchg
mov
inc
jae
push
push
and
xchg
and
loop
ret
inc
repz
mov
add
decl
cmp
mov
pop
inc
int3
dec
adc
push
xor
dec
xor
mov
iret
dec
pop
dec
fildll
nop
xor
out
push
xlat
scas
lea
shll
adc
add
add
add
add
pop
mov
or
js
mov
je
lret
cld
or
sub
pop
jp
pop
outsl
bound
ds
rcr
cmpxchg
add
movsb
es
or
or
call
call
and
inc
cmc
das
fcmove
ret
jb
inc
out
add
cld
and
add
out
fs
fwait
jnp
aaa
cmpsl
pop
dec
stos
test
sarl
cmp
push
mov
cmc
push
outsb
mov
cmp
xor
js
aam
ja
add
sarb
sbb
mov
ret
lret
mov
ss
arpl
mov
add
add
mov
adc
out
or
cmp
xor
daa
cmp
ds
mov
jg
popf
popa
sbb
cli
xor
sub
addr16
pop
adc
add
push
lock
push
stos
cmp
outsl
rcrl
inc
or
loop
out
push
add
mov
pop
popa
les
add
mov
xlat
dec
mov
out
js
or
jns
inc
mov
aad
xchg
mov
push
and
loop
aas
push
ret
or
lcall
push
inc
cli
inc
adcb
or
ljmp
xchg
loopne
aad
mov
or
cld
sahf
divb
rcrl
inc
pop
pop
pop
push
cmpsb
sub
call
call
call
adc
not
adcb
or
sahf
jb
sub
in
xchg
lea
add
mov
test
cwtl
je
ds
movsb
push
inc
stos
lret
mov
and
cmp
xor
push
and
lods
addr16
add
add
add
add
add
into
outsb
add
rorl
and
je
out
jp
rcrl
enter
xchg
cmp
and
sbb
inc
cld
je
lea
addl
outsb
std
xchg
add
test
cmpsl
sub
inc
mov
std
les
add
add
add
add
lods
fidivs
aaa
js
xchg
call
call
xchg
mov
lret
pop
push
xchg
shrl
jns
cmp
jl
mov
add
push
adc
je
dec
adc
jle
xchg
jge
imul
jo
cmp
or
xor
dec
sbb
in
lds
add
jge
push
xchg
outsl
ss
mov
roll
add
add
add
loopne
inc
push
lock
fiaddl
jb
mov
add
dec
push
add
push
jl
lods
add
adc
and
cmc
enter
rcrl
daa
mov
sbb
sub
pop
add
decb
mov
xor
imul
rorl
push
fcoms
xchg
dec
xchg
sub
lcall
mov
outsl
das
xchg
arpl
xchg
jnp
addr16
sahf
pop
push
loop
test
dec
jno
jne,pn
push
cmp
test
jmp
popf
mov
mov
sarb
addb
add
ror
add
das
or
loop
inc
fcom
clc
pop
ficoms
mov
outsb
fnsetpm(287
pop
add
cltd
and
mov
and
mov
mov
test
push
cmp
nop
jg
cltd
repz
jno
outsl
out
imul
sbb
push
sti
in
jo
arpl
call
call
adc
lcall
add
lret
push
insl
in
pop
dec
mov
negb
push
adc
push
push
outsl
mov
cmp
push
lret
out
es
fdivl
loop
or
xor
xor
call
mov
add
add
add
add
xchg
stos
mov
idivb
adc
mov
call
or
lahf
repz
jb
cmp
pushf
mov
xchg
dec
xor
clc
movd
or
dec
js
dec
jmp
addr16
adc
popa
xchg
mov
or
mov
xor
enter
faddp
das
hlt
add
dec
xchg
mov
mov
in
lcall
dec
adc
and
xchg
sub
std
loopne
or
in
pusha
imul
cli
xchg
xchg
add
notb
adc
adc
sarl
test
add
add
add
add
ljmp
aad
rol
setge
jns
leave
sub
xlat
movsl
enter
push
jbe
mov
add
outsl
fcmovnu
ljmp
push
cmp
sar
sub
jb
mov
pop
cmp
icebp
add
cmp
sub
add
stc
aam
add
add
add
add
cmp
mov
inc
gs
pop
adc
loop
xor
repnz
or
and
movsb
sbb
xchg
imul
divb
sub
adc
test
dec
adc
call
call
adc
cmp
int
je
jle
fisubrs
cld
out
xchg
adc
clc
fldl
rcr
hlt
pop
cmpl
lahf
mov
adc
repz
adc
out
mov
hlt
mov
addb
mov
negl
gs
sub
xor
jns
mov
adc
dec
or
fcomip
pop
test
xchg
mov
mov
push
enter
add
add
add
stos
clc
cmp
xchg
aam
jmp
xchg
divb
sub
xchg
lret
test
das
or
jp
insl
out
jae
add
sub
ja
cs
je
pop
jmp
sbb
jmp
out
mov
adc
int3
add
bound
dec
lods
lds
push
nop
adc
pop
sub
adc
xor
movsb
inc
pop
dec
jno,pt
outsl
ja
insl
adc
add
dec
jo
cmp
int
push
jecxz
dec
cmp
add
clc
data16
add
jno
cmp
sbb
push
pop
xor
lcall
lods
movsb
repnz
pop
into
push
mov
add
aam
ret
loopne
test
add
mov
add
jmp
add
add
add
rcll
in
test
sub
call
call
test
jmp
mov
lds
pop
insl
or
jmp
leave
cwtl
cmp
nop
or
movl
shrl
test
inc
and
add
add
add
shr
sbb
leave
xor
mov
daa
loope
mov
push
movsb
ljmp
xchg
dec
pusha
jns
jle
jne
mov
call
call
adc
add
add
add
jl
pop
or
push
out
mov
xor
sub
bound
push
mov
xorb
mov
sub
or
xor
addr16
xor
jge
push
rorb
push
dec
inc
cmp
cli
push
xchg
add
add
add
dec
leave
pushf
mov
and
pop
into
dec
xor
add
add
cli
mov
aas
adc
mov
mov
or
mov
mov
jmp
loop
mov
mov
cmp
aad
dec
les
sub
sbb
outsl
mov
jmp
push
xchg
dec
cmc
int
repz
sub
sti
add
add
cs
mov
xlat
xchg
xchg
nop
lret
leave
mov
jo
cmp
dec
pop
sahf
and
adc
std
sbb
nop
subl
or
xchg
cvtps2pi
add
inc
push
sbb
outsb
cmp
or
jae
sbb
sub
adc
dec
sub
add
add
mov
sbbb
dec
cmp
pop
pop
call
fisttpll
movsb
mov
or
lcall
xchg
orps
xor
mov
aad
test
sbb
jle
js
cmp
mov
enter
popl
pop
cmpsl
aad
jae
nop
dec
and
call
call
aas
pop
cmp
add
add
jg
dec
add
jecxz
cmp
mov
jne
dec
rcll
pop
or
xchg
sbb
pop
lods
jbe
lcall
add
push
mov
cmp
cltd
cmc
and
cmpsb
stos
cmp
dec
inc
bound
rclb
push
cmc
jne
sbb
inc
push
bound
data16
inc
xlat
cld
cmpsb
pop
xchg
add
add
test
and
ljmp
lret
imul
fdivl
push
mov
inc
adc
fsubrl
idivl
xor
adc
mov
cmp
xchg
and
ljmp
push
and
jne
sub
lea
add
jnp
jle
lret
call
call
stos
add
cltd
add
fbld
jle
aam
inc
jp
test
jp
or
adc
add
add
lock
fstpl
or
movsb
add
stos
inc
sub
mov
popa
xorb
sarl
ljmp
xorb
mov
loop
lods
int
aam
frstor
add
mov
shlb
repz
loope
xchg
push
fdivl
ss
xchg
add
fisubrs
pop
shll
push
jmp
mov
scas
mov
push
icebp
inc
add
inc
and
push
repz
xor
aad
mov
mov
adc
dec
orl
and
cltd
mov
popf
mov
dec
into
or
xchg
and
nop
pop
stos
imul
add
call
call
call
xchg
adc
dec
dec
jmp
add
or
xchg
lahf
push
nop
je
dec
enter
dec
lods
ret
add
add
add
add
enter
in
adc
rclb
jecxz
int
push
sub
mov
in
jmp
xlat
dec
ficoml
into
pushf
iret
cltd
mov
jo
mov
popa
jge
or
and
pop
and
push
pop
ficomps
and
pop
jl
mov
xchg
jo
mov
add
add
add
add
push
arpl
jp
clc
xor
arpl
sub
insb
pop
js
scas
jbe
lock
out
xor
daa
inc
mov
pop
stos
push
sbb
add
scas
das
movb
add
adc
cmp
popf
mov
mov
xor
push
cmpsl
inc
roll
dec
push
cmp
jno
call
call
call
dec
push
add
inc
movsl
in
add
xor
dec
in
ja
in
cmp
dec
mov
mov
mov
add
jmp
shr
cmc
adc
or
fimull
int3
xor
inc
imul
push
jmp
push
inc
push
or
insb
test
call
sub
outsb
inc
push
popf
jp
inc
push
sbb
psllq
mov
jle
out
pusha
ret
mov
mov
cs
xor
inc
jecxz
stc
ret
push
mov
decb
xorl
push
cwtl
fsubrs
add
or
add
add
add
dec
mov
bound
es
testb
sub
divb
aas
xor
popf
lods
push
mov
adc
adc
je
xor
jno
or
or
jle
mov
or
fmull
test
jno
shll
ljmp
add
je
sbb
dec
jl
mov
cmpsl
jno
call
call
pop
movsl
insl
mov
mov
add
add
add
pop
push
icebp
xor
jp
adc
in
fidivl
movsb
add
mov
sub
repnz
fnstcw
lds
mov
or
sarb
add
add
add
and
xor
ret
stos
pop
push
test
inc
jns
cmc
xchg
in
xlat
sbb
mov
jo
pop
mov
adc
push
out
daa
jnp
push
lock
imul
xor
pop
mov
push
sti
push
jbe
mov
xchg
in
pop
out
aas
pop
fistl
clc
mov
cmp
adc
or
iret
lods
pop
pop
mov
mov
mov
dec
jge
aad
cs
and
sar
add
add
add
add
adc
gs
cwtl
sbb
call
jo
push
mov
movsb
addr16
push
inc
movb
dec
test
or
jecxz
jecxz
inc
adc
mov
push
cltd
int
xchg
jl
nop
jb
jecxz
les
adc
dec
fsubrs
lcall
add
mov
loope
incl
test
inc
add
insl
inc
add
mov
xor
inc
sahf
inc
ja
mov
add
add
add
pop
pop
xchg
rorb
call
call
stos
jne
inc
inc
jbe
adc
inc
sarb
push
cwtl
cmp
pop
push
adc
les
and
inc
out
int3
xchg
dec
cmp
jb
sub
xchg
mov
jmp
inc
movsb
sti
aas
mov
add
add
add
add
xchg
jge
sbb
jno
dec
and
pop
leave
push
das
jns
sub
scas
mov
clc
hlt
dec
push
jge
pusha
loop
sbb
xor
jae
mov
insb
jae
pop
sbb
mov
ds
mov
out
adc
push
jb
adc
mov
add
add
add
cmpsb
sub
inc
jecxz
mov
dec
call
aad
faddl
sub
sti
dec
out
sub
adc
testl
xor
into
push
push
sbb
insb
inc
les
popf
push
mov
call
call
call
xor
adc
aad
fcompl
je
or
outsb
adc
add
add
add
imul
xor
stos
fidivrs
aam
fsubl
out
push
mov
lock
xor
add
add
add
add
jo
out
push
xlat
fcoml
add
jbe
sbb
lea
pop
push
clc
in
push
mov
pusha
insb
fbld
cmpxchg
add
outsb
cwtl
std
push
mov
dec
or
imul
call
call
add
jle
es
push
stos
sub
popa
pushf
clc
je
mov
sub
fimuls
add
cmp
ljmp
mov
cmc
clflush
push
inc
dec
or
shrb
fs
xor
mov
sub
das
scas
aas
sub
orb
insl
idiv
lret
add
add
add
add
jp
mov
cmp
pushf
jnp
xchg
jge
push
adc
xor
xlat
jp
mov
mov
pop
add
clc
add
cmp
cli
les
xchg
and
sbb
xor
imul
imul
add
sbb
push
pop
sub
mov
cmp
mov
mov
cs
mov
pop
enter
cmp
les
insb
add
add
mov
dec
ja
shrb
daa
icebp
mull
adc
pop
push
fs
dec
mov
adc
fxch
mov
xchg
jmp
jle
jb
pop
push
lcall
pop
cli
hlt
and
jns
jb
lock
xor
mov
je
add
add
add
add
mov
dec
push
cmpsl
fwait
or
dec
dec
and
call
popf
mov
jp
sahf
movsl
push
jl
xchg
lock
ja
iret
xchg
rcll
push
dec
jnp
sub
aaa
jo
sub
push
jle
pop
xorb
addl
cld
arpl
add
mov
sbb
mov
xlat
sub
iretw
icebp
ljmp
call
pop
pop
ror
cmp
lret
in
iret
mov
dec
mov
sub
fwait
mov
imul
das
lret
jo
inc
inc
scas
pop
jl
xchg
jo
repz
sti
sbb
jb
sub
mov
dec
jne
lahf
cs
xchg
insb
fwait
or
sub
movsl
fldl
xorb
mov
mov
inc
dec
pop
dec
or
or
arpl
cltd
bound
or
add
adc
adc
sbb
cmp
out
pop
fs
add
cmp
ja
fiaddl
add
add
add
add
inc
pop
mov
aaa
pop
add
add
jne
repz
insb
clc
jb
stos
sbb
testl
sbb
imul
add
add
add
mov
pushf
shrl
notb
xchg
jecxz
add
xor
aam
insl
sarb
fimuls
out
xchg
add
sbb
les
dec
call
call
call
add
aas
bound
mov
sbb
imull
fisttpl
mov
sahf
test
popf
outsb
pop
dec
andb
dec
ret
pop
cltd
pop
sbb
jb
es
push
or
and
rolb
sub
ds
mov
xchg
inc
jg
fwait
xor
icebp
ret
mov
adc
push
loop
clc
out
cmp
pushf
test
lds
cmp
loop
lea
jns
push
fiaddl
push
push
stos
and
lea
aad
mov
adc
cmp
in
popf
push
ss
testl
or
add
imul
add
add
add
xchg
mov
push
adc
cs
notb
mov
pushf
test
xor
sarl
cmp
out
les
popa
xor
pushf
cld
adc
jae
push
and
mov
dec
or
rclb
add
insl
mov
call
call
or
enter
adc
mov
leave
mov
xor
jns
test
pop
iret
xor
ljmp
in
push
icebp
ret
testb
shll
aam
cmp
aas
lret
fs
push
pop
rcrb
push
lock
mov
repz
add
ror
mov
gs
jb
je
leave
sub
mov
push
jae
out
jmp
sub
dec
cmp
jg
lods
inc
in
mov
insl
popf
xchg
call
call
lock
std
jg
xor
vpmadcswd
arpl
scas
int3
clc
push
jae,pt
mov
mov
cmpsl
push
aas
xor
sub
cs
orl
inc
insb
jb
xchg
call
call
call
push
xor
and
jns
bound
pop
mov
xchg
push
inc
stos
jmp
push
popa
sti
mov
adc
call
call
lret
and
push
pop
test
cltd
push
jle
lahf
pop
xchg
pop
mull
jo
std
out
jmp
insl
stc
sbb
push
xchg
push
jo
int3
popf
dec
lods
bound
push
pop
fisubl
sbbb
movsb
pop
add
or
inc
aam
add
push
out
mov
popa
inc
push
xlat
gs
add
inc
cmp
pop
das
div
testl
push
iret
adc
cmp
mov
fstps
jle
mov
mov
rcrb
orl
popa
xchg
call
call
js
popa
pop
xor
mov
jle
mov
add
add
add
add
out
or
push
lock
cltd
dec
aas
vunpckhps
int3
in
cmp
push
pop
dec
mov
les
sub
cmp
push
jge
add
add
add
add
in
mov
sub
fistpl
inc
pop
push
xchg
aam
sarb
test
rorl
lahf
cmp
push
cmp
sbb
clc
pop
or
leave
cmpb
xchg
in
push
push
lods
sub
mov
call
cmpsl
ficoms
add
sub
ljmp
add
add
add
xchg
test
mov
mov
cmp
push
inc
stos
sub
push
iret
std
sbb
lret
insb
adcl
dec
movsb
adc
xor
or
aaa
es
dec
cmp
fmul
pop
push
add
fsts
aad
sti
add
cli
or
daa
imul
push
mov
xchg
jb
jl
adc
pop
push
in
add
adc
add
add
das
xor
or
jecxz
push
mov
insb
aaa
xchg
inc
loope
xor
andb
push
int3
mov
in
rcll
mov
popa
or
mov
or
dec
sar
pop
lock
sub
popa
sub
dec
test
push
or
cmp
shrb
jge
leave
loopne,pn
sarl
leave
mov
push
aad
pop
notb
test
dec
sahf
xchg
int3
cld
sbbb
in
pusha
mov
and
add
add
and
cmpb
jp
or
push
xor
and
mov
mov
jns
or
imul
jbe
dec
push
cmp
inc
push
pop
pop
dec
pop
lock
or
sbb
lods
insb
sbb
dec
movsb
xchg
fisubrs
daa
jge
mov
jmp
push
in
sbb
add
add
add
mov
out
sub
mov
loope
jns
fistl
je
repz
push
xchg
or
push
lea
sub
call
cli
cmpsl
imul
call
sahf
dec
adc
push
clc
jne
add
sbb
or
add
lods
lea
inc
out
cmp
insb
xor
cli
test
cli
ret
mov
fisttpll
aas
repz
add
movsl
inc
fs
test
test
lea
sti
call
push
fstpl
cmc
jns
outsl
int
fidivs
inc
and
add
add
cltd
jmp
cld
mov
stc
dec
inc
in
fcomi
int
dec
adc
insb
ss
dec
push
stc
and
and
std
loop
add
sub
adc
mov
jmp
pop
lods
inc
ret
pop
xchg
lret
or
ss
inc
cmpsl
jno
or
daa
push
pop
es
xchg
push
mov
out
popf
lods
xor
ret
jo
pop
imul
sahf
fst
andl
inc
xor
in
xlat
icebp
repnz
xchg
bound
push
lods
movsl
fs
imul
cmpsb
or
mov
and
insb
add
add
mov
rcll
pop
shll
imul
clc
push
sub
sarl
out
pop
sbb
adc
daa
aam
fwait
aam
pop
ljmp
pop
sub
pop
test
mov
push
test
add
add
add
or
mov
lret
xchg
jo
jae
mov
lret
in
or
jne
push
aam
add
mov
add
add
add
add
dec
test
dec
or
ja
call
call
call
test
ljmp
pop
sub
and
inc
mov
jne
stos
mov
aam
xchg
mov
mov
pusha
dec
mov
aam
add
inc
in
push
insb
mov
xor
gs
push
inc
pop
arpl
fs
mov
xor
cmp
jne
imul
movsl
outsl
lcall
fld
dec
push
outsb
aam
addl
les
shll
into
add
mov
outsb
xor
leave
mov
xor
jmp
mov
xchg
aam
sbb
es
subl
cld
jecxz
cmp
or
and
jns
mov
test
pusha
jo
xorl
jg
hlt
or
mov
add
iret
add
cmc
ficoms
es
pop
mov
lods
cmpsl
sahf
sbb
icebp
push
xchg
jge
inc
add
or
fcmovnbe
cmp
pop
mov
js
or
push
inc
jbe
test
pusha
inc
xchg
mov
or
push
xor
xchg
lea
push
dec
mov
sub
scas
es
inc
sbb
pop
mov
xor
dec
xlat
popf
aas
jmp
pop
inc
out
loope
dec
pop
enter
popa
sbb
insl
sbb
add
add
add
outsb
scas
dec
jge
jns
mov
int
inc
xor
xor
inc
pop
imul
push
pop
call
call
call
add
add
add
out
mov
jecxz
push
mov
dec
in
daa
mov
xchg
jmp
ds
cmp
sbb
movsl
das
cmp
dec
mov
inc
fistpl
xchg
pop
dec
idiv
mov
ror
push
add
sub
cli
lsl
call
call
add
test
aam
pop
inc
jp
shl
fwait
mov
add
xchg
repnz
lods
movl
add
push
xchg
xchg
cmp
sahf
jnp
pop
mov
inc
test
scas
fsubr
xor
mov
add
fsubr
rclb
add
divl
call
pop
jp
ja
cs
push
adcb
sub
add
jnp
adc
xor
mov
or
adc
aaa
mov
sub
add
inc
jbe
test
call
call
fimuls
inc
add
add
add
add
mov
xor
addr16
xor
mov
sub
pop
mov
push
push
dec
in
popf
std
inc
push
or
jmp
and
je
scas
test
pop
sub
sahf
sub
pop
pop
jne
dec
cmp
imul
inc
arpl
xchg
clc
ret
aad
lahf
dec
mov
jo
push
in
add
add
push
sbb
les
xchg
sub
and
add
js
sbb
leave
mov
add
je
mov
imul
nop
mov
es
ficompl
mov
das
imul
call
call
adc
pop
test
pop
push
rcrb
push
fs
cmp
jns
cs
xchg
cmp
jns
add
add
adc
dec
stos
and
test
loopne
in
and
pusha
pop
xchg
cmp
pop
addr16
add
add
add
sub
sub
data16
repnz
jmp
jg
jb
bound
iret
in
jae
loope
cmp
push
fs
jg
insb
mov
in
jg
and
jae
xor
call
jmp
mov
cwtl
jne
lds
call
sbb
je
and
ret
cmp
insl
ror
cltd
jp
push
cmp
push
add
jae
ret
inc
lock
add
xor
subb
mov
sub
lea
jge
test
movsb
add
out
or
bound
test
cmp
scas
mov
pop
in
add
int
push
lods
or
jnp
cmp
dec
stos
hlt
push
pop
movsl
pop
xor
inc
rclb
and
notb
call
call
sub
std
push
scas
dec
or
sbb
xchg
leave
hlt
mov
jmp
add
add
add
dec
in
jo
je
xor
mov
push
and
jle
xchg
jle
add
push
dec
pop
ds
pop
pop
es
bound
mov
aam
push
fwait
rcrl
in
repnz
test
ficompl
cs
and
cltd
rol
xor
js
mov
nop
or
insb
js
inc
jns
popf
dec
sub
sbb
ds
addl
add
add
add
add
add
add
add
mov
lock
jae
daa
lcall
shrl
fdiv
fsubrl
leave
sbb
or
stc
jnp
daa
dec
add
sbb
mov
lret
jl
jns
cvttps2pi
outsl
lcall
add
add
add
push
sub
sbb
mov
add
jg
dec
hlt
fstps
daa
movsw
xchg
inc
stos
movsb
adc
roll
add
add
inc
outsb
mov
es
sbb
jne
outsl
pop
js
idivl
shl
ja
dec
adc
stc
sbb
out
ds
mov
cs
push
jo
sbb
cwtl
xchg
jno
sbbl
add
ljmp
loop
dec
jecxz
sbb
insb
outsl
daa
and
lahf
addl
shlb
jecxz
add
cmpsb
adc
jge
push
mov
fnstcw
jnp
pop
add
pop
inc
dec
nop
xlat
pusha
js
out
pusha
xchg
out
push
imul
add
mov
movsb
jecxz
jmp
js
loope
jns
inc
inc
dec
adc
loope
imul
arpl
add
jl
imul
lret
bound
pop
xor
into
and
jge
pop
pop
pusha
add
test
rcrb
add
push
jb
push
out
jmp
call
call
lahf
cmpsb
ja
pop
dec
inc
sti
movsl
xchg
push
mov
and
mov
in
and
add
xchg
hlt
push
mov
push
inc
lea
and
adc
add
add
add
add
push
orb
or
rcll
imul
call
call
addl
add
add
add
inc
movsb
mov
xchg
mull
int3
fisttpll
cltd
push
clc
insl
xor
jg
pusha
adc
stos
or
shrl
pushf
scas
cwtl
fadd
shll
add
jl
mov
xchg
aad
pusha
sbb
inc
mov
jecxz
or
hlt
inc
dec
lods
shr
call
call
push
inc
xchg
xchg
add
adc
in
xchg
inc
rcrb
inc
sbb
jl
jmp
movb
mov
pcmpgtb
leave
pop
sbb
mov
push
std
xchg
lods
pop
and
pop
out
shlb
inc
jl
mov
outsl
fwait
cmp
pop
inc
pop
mov
aaa
cmp
iret
push
cmp
jns
add
add
add
add
inc
inc
ss
push
sbb
shll
dec
mov
sub
inc
xchg
rorb
or
sahf
imul
popa
inc
push
add
mov
add
add
add
sub
stos
sbb
jmp
cli
sub
fcomps
push
incb
add
add
stc
jge
fists
push
cmp
adc
mov
push
jns
dec
jecxz
xchg
or
dec
and
inc
ss
add
adc
jae
add
add
add
xchg
add
or
dec
xchg
dec
or
loop
push
or
aam
pop
xchg
inc
insb
call
in
pop
mov
cmp
adc
or
iret
and
xor
xchg
dec
add
add
mov
add
scas
jnp
xchg
paddusb
dec
dec
movsl
mov
cmp
push
cwtl
pop
into
insl
pop
cs
lahf
test
fnstsw
mov
mov
mov
call
call
call
inc
push
daa
movsb
add
ret
push
shlb
fs
push
adc
mov
lds
mov
or
sub
pop
sldt
es
out
xchg
xchg
stc
pop
test
inc
ret
iret
aaa
cmp
push
shlb
dec
bound
cmp
popa
mov
or
int
adc
and
push
sub
enter
inc
popa
popa
sbb
xchg
stos
push
mov
sahf
add
call
call
xchg
pusha
daa
in
jae
sbb
lock
subb
xchg
dec
cld
test
push
sub
mov
pushf
lcall
and
inc
adc
inc
ljmp
es
js
add
gs
sbb
adc
push
push
lcall
pop
mov
xchg
arpl
fldcw
clc
push
mov
inc
icebp
add
mov
in
cmp
sar
and
jmp
mov
or
add
add
add
sbb
or
std
popa
pop
dec
push
xchg
lods
popf
ss
fistpll
xlat
fistpll
sti
add
orl
lods
adc
gs
cmp
das
add
add
add
dec
mov
push
mov
and
sbb
adc
bound
sbb
les
adc
xor
add
add
mov
lahf
enter
mov
add
dec
jae
add
xor
sub
jle
pop
pop
gs
add
push
paddw
mov
pop
outsl
pop
leave
mov
or
sti
sbb
mov
mov
cmp
lods
cmc
hlt
xchg
mov
ret
in
in
rolb
mov
call
call
call
push
cmp
jb
sub
scas
outsl
sub
add
dec
and
imul
sub
ja
adc
push
jcxz
shll
mov
sub
fidivrs
cs
push
sub
js
stc
sub
adc
scas
add
add
cmp
dec
adc
add
mov
add
insl
push
dec
mov
inc
pop
push
fucom
sbb
jmp
mov
mov
pop
add
lahf
mov
call
call
loope
testl
add
add
add
add
hlt
add
ficoml
enter
lock
add
add
add
add
sbb
rorb
icebp
and
adc
jo
push
mov
cmc
outsb
sbb
dec
push
add
int
dec
or
inc
pop
dec
movsb
aas
aam
loopne
add
lock
popf
or
leave
repnz
daa
mov
pop
and
lock
fisttpl
ss
cmp
aaa
adc
divl
cmpsb
subl
add
push
xor
daa
sub
leave
jge
sub
mov
shll
jns
push
mov
sbb
add
xchg
test
push
xchg
insb
mov
dec
sarb
jge
sbb
push
xor
repz
sub
or
inc
mov
call
call
mov
add
add
add
xchg
sti
imull
add
mov
aas
movsl
daa
ret
insb
mov
cwtl
outsl
or
mov
add
and
inc
add
fldl
add
add
add
add
xlat
jne
pop
nop
sbb
repz
sub
mov
jbe
adc
jp
jecxz
inc
push
cwtl
sbb
mov
push
or
insl
sub
push
cmp
clc
and
inc
stos
shlb
add
xchg
cmp
fsubrs
inc
xlat
adc
in
repz
or
mov
hlt
and
inc
xor
outsb
xchg
out
sahf
push
aam
sbb
daa
ss
jne
orb
shrb
and
into
fwait
push
add
add
adc
in
sbb
dec
jbe
insb
mulb
dec
ds
fwait
push
mov
adc
cmpsl
adc
daa
inc
dec
pop
xor
in
push
movsb
loop
dec
das
or
add
add
add
add
push
inc
in
push
sbb
scas
sbb
jae
std
scas
insl
ficompl
out
je
fwait
adc
pushf
mov
sub
je
or
sbb
push
aaa
shl
mov
xchg
cld
mulb
mov
mov
xor
stos
mov
adcl
add
add
add
add
ja
movsl
jb
add
mov
jbe
into
cmp
pop
fdivr
popw
sub
mov
cmp
daa
jp
fisttpll
loopne
mov
ljmp
pushf
daa
or
cli
mov
xor
or
call
call
jmp
xchg
mov
mov
jmp
repz
fstpt
lret
xchg
xor
popf
call
call
movsl
mov
xchg
mov
jmp
leave
fwait
cli
mov
outsb
cmpsb
jmp
cmp
and
add
inc
dec
sbb
imul
mov
add
adc
or
push
mov
pop
je
xlat
adc
insl
lahf
and
fdivrs
fiadds
jbe,pt
pop
inc
pop
push
mov
add
add
testl
clc
imul
mov
add
movsl
push
pop
movsb
sub
test
test
mov
push
outsl
adc
xchg
push
mov
xor
fwait
inc
insb
test
imul
dec
leave
mov
lods
dec
loop
sti
add
imul
pop
ja
and
cmp
dec
dec
pop
cs
scas
sti
addb
out
rcrl
enter
daa
mov
out
pop
jno
xorl
lods
pop
jno
ss
loope
in
xor
pop
ja
pop
xchg
add
adc
pusha
icebp
xchg
and
adc
push
xor
scas
sbb
lds
add
add
add
mov
xchg
and
lea
dec
fdivrl
cmpsl
jne
mov
mov
imul
sbbl
int3
cmp
push
add
xchg
andl
aaa
imul
add
in
xor
cmpsb
call
call
call
fsubs
rorl
xor
cwtl
cmp
test
psadbw
hlt
outsl
test
pop
cmp
and
sbb
add
fsubrl
cmp
fwait
into
es
sbb
add
add
add
push
lea
mov
push
lcall
mov
pop
ss
sub
push
cmp
pop
mov
imul
sbb
push
lret
movsl
cmp
andl
mov
push
lock
icebp
xor
push
mov
add
movsb
decl
lock
js
add
repz
xchg
repnz
sahf
pop
test
in
push
push
fs
or
fsts
or
mov
jl
inc
pop
xchg
sbb
sub
cmpsl
xchg
sbb
je
and
xlat
pop
add
add
add
add
pop
mov
mov
mov
paddsb
xchg
mov
sbb
jne
das
or
mov
loopne
push
inc
jg
jb
ljmp
andb
repz
jno
popa
les
outsb
cs
stc
inc
shl
jne
xor
test
sbb
add
fsubs
cmp
daa
pop
push
pop
adc
cld
xor
xchg
pop
xchg
xchg
fisubl
push
outsb
inc
add
jbe
sub
pop
jbe
movsb
scas
dec
shrb
call
loopne
fcomps
mov
dec
or
jbe
push
outsl
loop
or
mov
inc
inc
dec
dec
mov
inc
mov
cmp
pop
pop
int3
push
inc
out
dec
xor
xor
and
cmp
add
add
add
data16
lock
lret
push
repnz
lds
mov
fists
rorl
xchg
xchg
loopne
scas
push
or
dec
fsubrl
sub
push
outsb
pop
ret
es
and
out
or
call
call
out
mov
pop
lods
mov
jl
addl
bound
sbb
xlat
loope
fstps
add
add
out
mov
ficompl
clc
adc
negl
push
outsb
call
add
pop
call
call
call
mov
cmp
add
in
push
xorl
jns
add
repz
cltd
adc
cwtl
imul
mov
jge
stos
popa
cmp
inc
and
add
arpl
test
push
jno
inc
dec
lods
jg
xor
xchg
hlt
push
mov
sbb
sti
cmp
jbe
jecxz
movsl
xchg
pop
out
pop
int3
in
adc
and
push
dec
les
lods
fadd
hlt
or
or
movsb
jb
adc
int
sbb
hlt
in
inc
nop
sbb
mov
fwait
nopl
push
sub
stos
popa
imul
add
add
dec
ficomps
sbb
popf
or
scas
in
push
pop
xchg
sti
inc
or
xor
mov
or
push
and
pop
mov
clc
out
in
out
test
cmpsl
test
lock
and
loop
add
and
mov
and
out
rcrl
aad
jno
mov
test
shll
pop
call
call
call
call
add
cmp
push
fnstcw
or
cmpl
add
add
mov
pop
add
je
mov
mov
call
mov
outsl
xor
mov
cmc
mov
mov
mov
push
inc
lret
lds
mov
call
nop
mov
cld
imul
mov
sbb
xchg
fdiv
inc
pinsrw
add
jmp
add
pop
std
sbb
jecxz
in
add
jae
jp
xor
and
in
popf
movsl
sbb
sbb
orl
mov
fldt
adcl
or
and
push
out
loope
outsb
mov
movsb
je
adc
outsb
stc
xchg
lds
aad
mov
xor
jmp
sbb
outsl
test
sbb
popa
rcr
insb
jle
add
add
dec
inc
js
jp
dec
idiv
popa
mov
mov
inc
mov
loope
inc
in
mov
inc
xor
cwtl
loop
and
lret
cli
fdivp
mov
movsl
enter
jecxz
pop
lret
cmp
clc
add
sub
jg
add
add
or
gs
shlb
mov
inc
pop
fs
dec
mov
sub
or
and
test
test
push
dec
push
cli
jo
sub
pop
cmp
sub
ret
inc
bound
sarl
pop
repz
in
add
add
sub
sub
or
xchg
fstl
fadds
adc
fwait
pop
imul
cmpl
rcrb
sub
pop
int3
adc
push
mov
jp
lods
sbb
pop
adc
mov
sub
stc
out
cwtl
mov
add
add
add
ds
add
or
xchg
fmul
push
repnz
les
shlb
sub
je
aaa
cli
in
adc
bound
fcompl
add
or
fcmove
push
into
pop
fnstcw
stc
or
adc
popf
out
cmpsl
ljmp
mov
loope
lret
or
mov
jl
out
lahf
add
or
xchg
add
mov
jmp
mulb
xchg
jle
push
mov
sbb
add
add
add
add
and
sbb
sar
adc
xorb
mov
inc
sahf
inc
arpl
xor
push
and
xchg
pop
cmp
or
movsb
test
jae
xor
dec
add
push
mov
out
cwtl
insl
lods
cmp
pop
fstps
jl
faddl
add
add
add
add
mov
daa
aaa
cmpsb
jp
pop
add
popa
repnz
sub
ficompl
jno
scas
xchg
add
test
out
das
or
cld
rcrl
mov
jb
shrl
xor
bound
add
bound
lret
add
or
je
xchg
sbb
jmp
fnstcw
data16
fwait
pop
ror
cltd
pop
fwait
or
push
inc
mov
imul
xchg
jl
loope
cmc
enter
push
fcmovu
inc
jbe
addl
pop
mov
out
mov
add
mov
or
mov
test
in
shrl
cmc
call
jno
mov
ss
jbe
test
ljmp
or
xor
mov
loop
pushf
fldt
push
or
shl
and
jnp
out
lods
mov
sahf
cwtl
sub
add
out
out
adc
sbb
dec
out
jl
or
rcrl
cmp
call
push
push
sbb
mov
aaa
jge
cli
cld
call
mov
loop
clc
cmpsb
mov
push
push
testl
rcrb
dec
jo
dec
into
xor
add
add
loope
or
inc
arpl
call
call
call
xlat
ret
dec
pop
imul
nop
mov
xor
cmp
and
mov
arpl
pop
sbb
daa
mov
adc
add
in
das
jb
cmp
jnp
xor
inc
cmp
mov
add
data16
das
sub
mov
add
or
lods
jne
pop
jle
xor
xor
shll
jg
imul
fisubs
lods
pop
mov
arpl
ljmp
scas
or
imul
xchg
jo
add
jne
inc
aas
or
or
add
sbb
adc
adc
sbb
call
call
movb
repnz
test
push
aaa
cs
or
pop
leave
inc
pusha
cwtl
or
jae
shrb
cmpsb
mov
ret
or
mov
stc
loopne
inc
dec
aam
sub
jmp
dec
mov
mov
sti
mov
cwtl
imul
aas
add
movsl
stc
clc
lahf
jnp
jns
test
mov
push
fadds
push
sbb
arpl
push
clc
inc
jp
cmc
cmp
or
dec
movsb
fisubrs
mov
sarl
dec
sub
shlb
add
lods
imul
cmp
dec
push
dec
push
sbb
repnz
xor
enter
dec
enter
jno
add
xorb
push
and
pushf
sbb
xchg
rcrl
cmp
mov
mov
cs
add
jns
imul
mov
jecxz
cmpsb
mov
add
add
add
sbb
mov
popf
inc
clc
iret
mov
mov
mov
daa
das
dec
adc
frstor
repnz
call
call
call
je
inc
int
sbb
xchg
mov
cli
and
add
repz
inc
daa
not
call
jge
mov
add
sub
push
push
push
mov
dec
faddl
add
add
add
arpl
push
or
sbb
jae
imul
jb
inc
sub
sub
daa
insl
xchg
ret
mov
pop
jb
cmp
roll
cmp
call
incl
das
clc
or
jmp
jle
es
or
hlt
stos
jne
cmpsl
dec
jl
mov
sub
movsb
xlat
mov
push
aam
adc
addr16
divl
add
dec
mov
scas
addr16
fildl
rcrb
add
pusha
and
push
in
out
jmp
pop
push
outsl
xor
ja
dec
push
push
pop
adc
out
xor
shll
data16
jle
rorb
xor
lock
iret
movsl
mov
dec
xchg
lret
shrw
cmp
notb
sub
inc
stos
xchg
xorb
test
mov
fldl
add
pop
hlt
cld
lods
dec
jmp
add
add
push
jb
mov
cwtl
sub
add
ljmp
add
add
add
pop
out
mov
push
lods
cmp
jb
jle
test
add
add
mov
iret
hlt
stc
mov
add
xchg
pop
cs
daa
lahf
cmp
insb
mov
pop
jne
jmp
jno
dec
in
call
mov
repnz
repz
loopew
dec
add
mov
vpxor
add
mov
sti
cmp
lahf
sbb
out
loopne
clc
hlt
outsb
mov
ljmp
ss
loope
test
push
jo
push
jnp
repnz
cbtw
pop
jb
ret
sbb
subb
cld
cmp
xor
xchg
ja
in
cmp
add
shll
scas
inc
xor
xchg
je
es
add
add
add
add
pop
xor
decl
xor
push
aad
outsl
int
push
jge
xor
jmp
cmp
out
insb
and
ljmp
popf
jbe
sbb
jno
mov
add
push
test
jnp
and
incl
mov
add
add
addb
testb
jbe
out
mov
push
fiaddl
clc
insb
rcr
xchg
dec
inc
push
pushf
pop
push
hlt
je
leave
mov
jge
jo
cmp
scas
addr16
repnz
call
call
add
mov
sbb
leave
adc
ret
repnz
xchg
popf
xchg
pusha
into
rorb
and
sub
js
fwait
in
test
inc
std
imul
and
add
add
add
add
xchg
inc
add
outsl
movsl
xlat
cvtdq2ps
pop
sbb
aam
sbb
adc
in
xchg
lock
mov
cmp
sbbl
inc
inc
das
aaa
jl
xchg
addb
jecxz
mov
add
xchg
cmp
sbb
mov
popf
sub
xchg
pop
bound
aas
into
stos
xor
mov
cmp
aam
push
rcrb
out
sbb
add
pop
adc
fimull
push
sti
cmp
lock
jne
fisttpll
imul
and
add
mov
frstor
jno
call
call
mull
ja
jg
mov
out
pop
mov
add
add
pop
sbb
loope
jae
jne
xchg
je
in
psubsb
call
call
jb
mov
push
insb
cli
test
jb
fldenv
out
push
mov
sbb
pop
es
pop
add
add
pop
fs
pop
push
adc
cmpsl
push
test
gs
rorl
jo
pop
inc
out
clc
xchg
inc
mov
sbb
ja
xor
push
xor
dec
lcall
dec
stc
mov
div
push
jne
punpcklbw
pop
movsl
mov
pop
adc
and
add
add
mov
cmpsl
mov
push
in
xorb
inc
sbb
pop
push
xchg
pop
jg
pop
sub
call
call
aas
cmp
push
cmc
add
push
scas
push
inc
push
mov
imul
add
test
and
fs
jl
push
sbb
sti
repnz
add
cmp
cmpsb
std
addr16
sbb
adc
add
push
fsubp
jmp
stc
call
jo
repnz
lret
lret
daa
push
arpl
jno
add
add
iret
pop
sbb
sbb
iret
jbe
lahf
ret
mov
repnz
sub
cmp
add
add
add
ja
add
icebp
stc
pop
fnstcw
add
cmp
sbb
pop
loop
arpl
ret
sbb
xor
lret
icebp
mov
pop
repnz
add
call
data16
or
pop
jno
test
ret
lcall
test
jmp
xor
call
add
add
out
enter
sbb
rcrl
rolb
mov
mov
test
out
inc
in
cmp
cs
sub
pop
adc
pop
dec
and
mov
sbb
call
call
fdivs
mov
xor
jne
inc
out
sbb
jae
sub
in
xchg
mov
sahf
add
add
mov
and
mov
ja
cmp
xchg
add
adc
call
test
jae
dec
int
daa
rcrl
jmp
lret
arpl
jmp
ret
insl
push
add
negl
scas
pop
loop
add
dec
mov
out
sti
or
dec
cmp
add
shl
add
mov
loopne
lods
sarb
xchg
jl
shrl
mov
std
aas
popa
cmp
dec
inc
nop
cmpb
cld
and
sbb
lds
les
add
add
add
inc
mov
rcrb
lods
js
lcall
movsl
stos
pop
lock
jle,pt
sub
nop
xchg
push
jecxz
xchg
mov
out
jno
testb
imul
add
mov
mov
insb
mov
movsl
sub
xor
ljmp
add
add
add
ret
mov
and
insb
dec
add
dec
cmp
and
jmp
shrl
test
das
cwtl
mov
push
mov
testb
add
add
lds
jne
pop
and
pop
mov
movsb
or
xor
and
cli
jle
pop
test
call
call
call
jle
xchg
leave
and
iret
pushf
mov
loope,pn
negb
inc
jecxz
ja
rcl
test
sbb
movsl
push
cmp
jecxz
scas
or
push
int
and
push
aaa
movsb
out
cmc
shll
mov
cli
add
sbb
rcrl
dec
je
and
pop
fcomi
test
add
jno
adc
les
fnsave
lahf
add
or
adc
push
mov
jne
int
cmp
xchg
pop
push
das
test
xchg
ficompl
popa
cltd
mov
xor
add
xchg
fdivrl
shr
mov
or
js
shlb
pusha
std
jmp
mov
cltd
or
icebp
das
push
push
dec
out
loopne
xchg
clc
movsl
cmp
add
xchg
jns
dec
loope
sbb
or
mov
cmp
mov
cmp
das
and
sbb
enter
cmp
add
add
add
in
lods
mov
and
jl
mov
push
lea
jo
adc
add
add
add
mov
add
fcmovnu
nop
or
push
add
test
dec
test
call
call
xchg
rep
add
shr
arpl
pop
push
lea
insl
daa
cmp
idivb
jno
subb
add
out
and
test
ljmp
xchg
aas
fmuls
iret
mov
and
mov
xchg
cmpsb
movsl
scas
pop
add
xchg
mov
loop
add
add
or
aaa
mov
mov
jne
cmp
repnz
jecxz
f2xm1
rcl
mov
fidivrs
shlb
ds
pop
int3
out
cmp
call
sar
mov
iret
xlat
inc
loope
mov
cmp
mov
js
fmulp
adc
and
nop
push
inc
dec
xor
lods
push
push
push
sbb
enter
add
addr16
andb
xchg
insb
xlat
test
push
sub
pop
mov
mov
cli
sub
in
scas
jge
sbb
push
sbb
or
arpl
sub
les
adc
add
push
adc
test
dec
data16
xchg
add
push
or
call
fcmovne
jnp
push
lret
dec
mov
or
mov
scas
aaa
je
xchg
or
fcmovnb
cltd
adcb
mov
mov
dec
add
sbb
pusha
data16
add
fs
cmp
xor
adc
or
sub
sub
icebp
dec
xchg
adc
sub
xorl
mov
aaa
or
add
lret
lret
bnd
inc
xchg
mull
insb
push
push
shrl
rcll
push
int
mov
cmp
add
or
nop
add
insb
xor
je
cmp
adc
lahf
mov
pop
pop
jnp
cmp
push
fst
fwait
in
sbb
and
cltd
leave
repnz
sahf
mov
pop
arpl
lods
out
inc
inc
icebp
inc
dec
fcoms
call
call
jne
mov
jecxz
push
xor
or
mov
es
push
adc
push
mov
iret
mov
push
call
call
call
repz
out
mov
popf
dec
lret
sub
add
add
inc
test
int
and
push
xchg
cmp
inc
mov
call
call
call
cs
inc
xchg
mov
cli
jge
push
add
add
add
inc
mov
xor
ljmp
push
mov
insb
in
scas
js
imul
mov
call
rclb
dec
lea
add
jbe
dec
out
loop
imul
xor
stos
xchg
fnstsw
ss
test
add
add
add
mov
mov
ja
mov
fsubp
pop
or
or
adc
sbb
push
out
mov
call
call
call
push
inc
and
push
jge
lahf
jecxz
xor
aam
hlt
jne
dec
fiadds
ja
dec
lock
pop
imul
movsl
imul
std
sub
inc
out
and
lret
jo
call
call
out
add
add
and
clc
sbb
push
xchg
loope
lcall
out
bound
inc
sub
add
pop
shll
cmc
push
ja
xchg
pop
jae
xchg
aaa
cltd
insb
add
pop
push
dec
enter
jo
xor
add
add
add
clc
xchg
outsl
xor
aaa
cmp
and
mov
pop
or
enter
cmp
sbb
jmp
adc
lods
addr16
cmp
lock
mov
jmp
loopne
lahf
pop
jmp
rcrl
jae
or
add
in
fsubrs
jo
cmp
dec
nop
in
jb
in
stos
cs
sbb
arpl
cmc
cmp
adc
or
imul
popl
xchg
add
and
push
data16
dec
jb
imul
daa
xchg
dec
js
in
mov
mov
test
jns
ja
jp
xchg
fwait
fs
leave
push
lock
int3
xor
dec
loop
jne
cmpl
add
xchg
das
or
adcb
movsb
out
loopne
pop
push
and
jecxz
loopne
test
push
cld
xor
adc
inc
das
dec
lcall
arpl
jl
push
sbb
pop
pop
xchg
add
arpl
mov
insl
call
call
inc
push
lods
adc
daa
and
cmp
add
add
inc
imul
int3
jmp
test
fpatan
pop
cmp
and
divl
repnz
pop
inc
jg
sbb
call
pop
adc
clc
pop
stos
jg
out
out
inc
mov
cmp
cmc
adc
add
push
roll
std
dec
jl
insb
cld
aad
nop
inc
aam
sub
fnstenv
mov
popf
pop
xchg
icebp
push
add
movsb
repnz
int3
and
mov
xor
sbb
push
add
adc
ss
mov
push
popa
jae
fidivrs
add
push
mov
scas
mov
ss
pushf
outsl
dec
cmpsb
dec
sub
dec
andl
or
inc
jno
jmp
dec
jmp
sbb
out
test
les
pop
sub
loope
in
subb
and
pop
jp
mov
pop
xlat
sub
mov
or
mov
lahf
and
cli
jbe
mov
and
add
dec
stos
mov
inc
dec
cmp
add
add
arpl
pop
adc
jl
sbbb
add
arpl
pop
xor
fiadds
lret
or
xchg
enter
test
lret
jecxz
cmpsb
adc
or
call
add
add
add
les
push
or
outsl
or
adc
bnd
pop
test
and
xor
push
arpl
sub
leave
fs
aaa
call
mov
mov
mov
adc
or
fldenv
cmpsl
outsb
stc
mov
pop
jb
fisttpl
add
fimull
repnz
loop
in
add
scas
mov
hlt
rcrl
push
movl
jbe
sub
lods
or
dec
jb
in
add
shlb
jl
nop
pop
push
dec
lea
or
jbe
xlat
mov
std
cmpsl
mov
push
clc
jo
cmc
add
add
add
add
cmc
sbb
mov
jns
rolb
jl
add
sbb
dec
or
stos
add
add
add
and
aad
imul
mov
lahf
xchg
xchg
and
imul
cltd
jne
mov
mov
mov
cmc
adc
push
pop
sahf
andb
pop
lret
movsl
out
add
popa
mov
mov
add
add
add
mov
or
push
ret
jle
ja
mov
imul
mov
call
call
cmp
mov
jo
int
or
and
arpl
pop
das
test
cmp
cmp
in
pop
inc
mov
pushf
in
fldl
mov
xor
cmp
adc
add
inc
and
push
adc
push
cmpxchg
xchg
mov
cmp
jl
pop
stc
cwtl
push
dec
jo
fbstp
je
or
xchg
pop
push
idiv
addr16
arpl
out
out
mov
jo
sbb
mov
ja
fisttpll
push
xor
jno
jae
cmp
gs
sub
add
add
add
adc
repz
shlb
pop
mov
es
mov
mov
into
jbe
sub
xor
xor
call
jnp
and
sbb
push
pop
dec
ret
adc
adc
js
inc
int3
aas
sbb
ja
add
adc
out
int
adc
adc
pop
or
sub
ja
popf
lret
insl
mov
jae
incl
fmull
adc
push
sahf
cmp
push
or
sub
xchg
jns
jg
std
push
inc
pop
repnz
pop
sti
dec
jb
adc
incl
or
xor
push
stc
pop
add
addr16
cmp
ret
or
push
out
or
push
pop
loop
dec
jl
adc
orb
xchg
mov
pop
dec
cmp
pop
lods
cs
jno
and
cld
outsl
sbb
and
mov
inc
inc
jg
or
cmc
imul
dec
or
jmp
dec
mov
inc
leave
ds
addr16
les
add
sub
add
ja
rcll
subb
mov
mov
into
pop
imul
mov
fld
push
mov
push
inc
sub
dec
sbb
mov
sub
dec
sbb
or
lock
test
xrelease
mov
push
sarb
mov
and
push
adc
or
call
call
xor
lds
add
call
mov
fstpt
push
jmp
idiv
pop
xor
das
dec
icebp
push
into
lahf
xchg
add
arpl
cmpb
shrl
nop
lcall
jg
js
aas
sahf
cmp
out
add
or
mov
adc
movsb
mov
jl
mov
inc
loope
cmp
or
fistpl
jge
push
xchg
shlb
xor
or
paddsw
push
push
jg
sub
das
lock
add
add
or
repz
fisubs
rol
clc
aas
ljmp
mov
jne
mov
inc
divl
add
ja
fdivl
icebp
sbb
pop
pop
aad
insb
sarb
xchg
xchg
push
add
mov
xor
add
test
pop
imul
mov
call
call
push
adc
xor
test
in
outsb
jo
pop
pop
outsl
enter
push
xor
xor
add
test
ss
mov
sub
sarl
js
jnp
inc
push
xchg
in
sahf
mov
add
mov
fisttpl
iret
xchg
sub
push
dec
bound
movsb
imul
icebp
inc
aas
in
data16
xlat
jle
pusha
les
mov
add
jo
add
add
add
add
int
popa
xchg
or
mov
ljmp
arpl
test
xor
mov
repnz
ss
sub
sbb
movsl
xor
dec
cld
push
icebp
sbb
cmp
sbb
add
add
add
add
add
loop
cwtl
loope
mov
mov
xchg
push
lock
dec
in
xchg
out
dec
dec
cmp
xchg
call
and
test
aaa
mov
adc
and
push
dec
sbb
xor
push
push
push
enter
mov
mov
imul
mov
add
enter
jp
adc
cltd
mov
push
or
sbb
add
add
add
add
shlb
loop
shrb
loopne
hlt
inc
jns
mov
mov
stos
test
adc
inc
outsb
xor
or
call
call
push
ficoms
push
push
in
xchg
stos
cmp
add
add
add
idivl
add
add
nop
mov
push
ss
push
movsb
xor
iret
jmp
roll
cmp
mov
mov
xchg
iret
push
shrl
push
cltd
les
add
add
add
addr16
ficoms
cmpb
daa
mov
loop
fcmovnbe
xchg
daa
mov
xor
fadds
inc
sbb
mov
rcrb
push
bound
std
stc
in
push
jp
fnstsw
adc
dec
stc
test
pushf
sahf
popf
imul
push
insl
movl
add
add
add
push
mov
jp
cmp
roll
ja
movsb
cld
add
add
mov
ss
je
and
xchg
subb
pop
and
jbe
sbb
xlat
mov
loope
cmp
mov
cld
incb
dec
xchg
jns
xor
dec
scas
dec
je
lahf
sahf
mov
dec
pop
push
pusha
clc
pop
add
imul
pop
test
daa
movsl
orb
ss
test
fistpl
lret
sub
ljmp
call
call
fcoms
loope
mov
mov
cmc
inc
push
imul
cmpb
add
add
bound
jns
sbb
fldt
stc
lods
add
add
xchg
in
pop
ds
rcrl
jno
xor
popa
dec
fcompl
cmc
jle
enter
call
dec
inc
xor
icebp
jp
adc
pop
inc
maxps
shl
push
sahf
add
mov
test
mov
mov
lock
scas
push
jg
sahf
mov
lea
xchg
add
add
add
add
jmp
or
cmp
pusha
xchg
jo
xchg
pop
ljmp
popl
in
bnd
push
mov
fbld
jne
add
mov
cwtl
jae
movsl
fisubl
ret
movsb
pop
stos
cs
inc
mov
lahf
jle
inc
ret
inc
add
outsb
jo
test
pop
fidivs
nop
add
add
jge
insl
movsb
arpl
push
add
add
add
pop
jge
cmc
pop
testb
prefetch
dec
dec
jp
sub
mov
lods
hlt
or
stos
lods
and
stc
in
push
fcomip
daa
insb
in
inc
inc
lods
in
sub
xor
int3
out
rorb
mov
push
jne
pushf
int
fs
das
mov
add
add
add
pop
sbb
inc
xchg
push
sub
and
or
inc
bound
or
mov
int3
xlat
rclb
data16
popf
repnz
scas
pop
jle
add
add
add
add
add
mov
outsl
push
outsl
out
lock
orl
and
mov
inc
inc
imul
jecxz
pusha
xor
dec
dec
icebp
popl
add
add
addr16
cmp
jp
mov
mov
jae
icebp
stc
pop
xchg
aaa
dec
jl
and
jns
mov
scas
mov
mov
add
add
vpslld
test
sub
sbb
push
adc
jmp
ret
xor
out
dec
repz
xchg
insb
cmpsl
xor
movsl
xchg
fnsave
mov
ds
call
call
dec
dec
jge
outsl
cmp
scas
add
pop
scas
dec
in
js
dec
lods
idivl
cli
push
lock
enter
add
popa
stos
fdivrl
es
xchg
hlt
jae
xor
mov
in
insl
test
lret
jle
inc
add
data16
cmpsb
push
dec
popa
sbb
lret
addr16
mov
xor
bnd
or
jl
out
ret
repnz
lret
jno
mov
movsl
out
pop
push
fs
imul
add
push
cwtl
test
xor
sub
dec
adc
repz
out
in
dec
aaa
pop
dec
cs
adc
mov
xchg
adc
or
clc
je
xchg
push
pushf
sub
pop
fwait
xchg
out
sahf
insl
ds
ja
ljmp
adc
inc
fwait
cmc
pop
enter
test
mov
imul
call
std
out
jecxz
add
adc
outsl
and
inc
push
insl
push
dec
mov
and
into
mov
mulb
ret
test
adc
adcb
test
cmp
ljmp
sar
nop
xor
pop
or
mov
mov
mov
mov
dec
and
jmp
add
add
add
push
test
leave
pop
rorb
into
mov
mov
repnz
jle
jl
xor
enter
add
or
cmp
cmpsl
push
mov
call
call
cmp
mov
add
add
add
xchg
jmp
ss
and
rclb
js
stos
adc
add
inc
adc
movsl
idiv
xchg
int
push
or
rcrb
shlb
clc
fimull
sti
jnp
es
push
insb
add
inc
xor
dec
aad
cs
fdivr
inc
mov
adc
cltd
and
jbe
pop
popa
sbb
fidivs
je
outsl
mov
jl
jmp
sub
add
sti
mov
sbb
add
add
add
push
lret
push
popa
popa
imul
add
push
adc
dec
leave
fisttps
pushf
je
push
push
daa
imulb
sbbl
mov
add
add
add
add
ss
jb
inc
pop
pop
add
lods
outsb
adc
add
fs
push
and
call
call
mov
in
bound
xchg
ss
and
inc
sub
sbb
mov
outsl
ret
pop
sbb
lods
ret
je
or
add
add
and
test
and
cmp
repnz
mov
pop
sub
add
xchg
jbe
lahf
hlt
pop
xchg
movsb
in
popa
outsb
ja
push
pop
inc
into
jle
jb
pusha
dec
out
jg
dec
fsubrl
mov
xchg
dec
pop
sahf
sbb
adc
push
add
xchg
and
test
jge
leave
cs
rcr
dec
adc
sbb
xor
inc
push
cmp
inc
cmp
jne
and
cld
loope
dec
sbbl
fbld
jg
stos
stc
data16
out
movb
add
add
setbe
pop
and
or
jnp
mov
mov
or
inc
aad
add
sbb
jns
filds
adc
push
mov
add
xchg
out
popl
xor
jp
popa
inc
add
dec
xor
lock
push
ds
pop
jge
xor
outsl
jb
sbb
jl
les
out
popa
stos
stc
lcall
adcl
sbb
jne
mull
add
mov
outsb
divl
sbb
gs
inc
out
out
mov
adc
mov
jge
xor
lea
pop
dec
mov
ja
add
push
cmp
pop
push
pop
lahf
pop
jns
add
jle
ficomps
mov
push
jmp
pop
mov
call
call
call
add
call
call
call
and
test
out
outsb
inc
cs
fisubl
cmp
sbb
add
lahf
mov
iret
xor
pop
cmp
add
sub
cmp
mov
push
test
xor
lahf
add
mov
xor
add
aaa
cmpsl
test
cmp
and
jmp
jae
outsl
test
jne
fnstsw
push
fstpl
nopl
xchg
xor
call
call
sub
adc
add
add
and
das
or
mov
sbb
fldenv
mov
pop
push
lcall
cli
jns
out
das
sbb
sub
flds
lea
mov
adc
call
call
mov
outsb
in
pop
std
shrb
cmpsb
cmp
pop
in
arpl
repz
add
add
add
push
fdivr
dec
or
lock
lret
lahf
rcrl
cwtl
in
inc
fidivs
std
cmp
repnz
xchg
inc
push
stos
dec
dec
pusha
lds
mov
test
loopne
cmp
cmp
push
push
mov
mov
jp
ds
add
add
add
jmp
arpl
mov
adc
iret
pop
das
lods
into
push
pop
sub
dec
mov
dec
sub
lcall
xor
inc
call
cmp
cmp
and
pop
and
add
add
jb
add
add
add
add
sub
test
andl
add
xlat
jne
mov
rorb
xchg
cmpsb
stc
sub
sar
cli
xor
test
add
add
add
mov
scas
jbe
pop
xchg
pop
imul
push
xchg
jns
adc
push
rcll
jle
pusha
imul
jge
mov
bound
jmp
imul
add
add
pop
pop
lret
out
out
out
test
shrb
out
stc
jle
sub
push
jno
enter
in
fs
repnz
mov
add
add
add
or
ret
cld
xchg
pop
cmc
mov
mov
xchg
outsb
aad
mov
xchg
pop
mov
sbb
sarl
pop
mov
pop
mov
outsl
pusha
push
call
call
lahf
icebp
shrl
inc
cmpsb
pop
scas
jl
or
add
inc
fnsave
or
aad
lock
ret
movsl
push
sbb
sub
inc
jl
or
fs
imul
cld
divl
scas
add
jecxz
mov
xchg
inc
mov
pop
ret
jns
jp
shlb
aas
ret
mov
jbe
and
or
add
add
pusha
out
out
es
jp
adc
faddl
aad
ds
mov
insb
push
sbb
sub
or
xorb
add
jl
lds
add
mov
push
add
lock
inc
mov
test
mov
loop
add
jp
out
add
dec
adc
call
call
call
pop
adcb
dec
sbb
ficoml
imul
pop
arpl
incl
fwait
cmc
xchg
enter
sahf
jmp
scas
push
aad
cltd
pop
test
add
cwtl
mull
jns
adc
sub
js
adc
rcrl
in
fimuls
dec
or
call
test
notl
sub
into
testl
movsb
dec
sub
bnd
cmp
subb
xor
pop
xchg
roll
mov
xor
add
add
add
inc
inc
mov
pop
jno
add
pusha
jns
lcall
add
add
mov
jp
imul
stos
shll
cmp
dec
adc
test
gs
xchg
adc
dec
orb
notb
insb
orb
jne
test
add
add
add
loope
cwtl
aad
gs
out
pushf
cmc
jo
shl
call
pop
popa
sbb
mov
mov
popa
add
cld
adc
mov
ss
fiaddl
rorl
dec
rolb
adc
sbb
and
sbb
subl
add
add
test
mov
adc
ficompl
pop
sbb
mov
jo
imul
mov
add
in
cwtl
dec
pusha
and
adcl
sub
cmp
inc
hlt
dec
mov
push
inc
adc
sbb
imul
lock
aam
daa
mov
jbe
test
xlat
xorl
xor
push
cmc
push
arpl
pop
jmp
lcall
jecxz
push
pop
cmp
or
push
jnp
lods
mov
add
add
adcl
pop
mov
inc
mov
pusha
or
scas
cmp
mov
ret
push
jle
bound
leave
shll
push
mov
imul
add
xor
popl
cmc
shll
leave
mov
rcrl
cltd
xchg
out
fisttpl
jnp
cmp
cmc
mov
and
imul
mov
enter
clc
es
sti
addr16
scas
push
push
call
call
call
xor
in
imul
sbb
jmp
push
add
xchg
lret
inc
sbb
sub
xchg
fsubl
jg
call
call
jo
cmp
add
cmpsl
adc
mov
add
sub
dec
and
cmpl
test
cltd
pop
gs
dec
jno
fcomp
shll
mov
lcall
adc
das
jge
adc
test
xchg
add
in
xchg
pop
and
inc
pop
pop
sahf
inc
or
aaa
lock
add
jnp
sbb
jp
mov
add
add
add
or
mov
add
and
xor
test
stos
pop
cmp
into
cmpb
push
adc
cmpsb
and
jg
pop
or
jle
repz
inc
insb
jp
lods
daa
inc
cmp
or
adc
adc
dec
call
pop
fwait
cmc
movsb
cmc
in
or
add
pushf
pop
sarl
add
or
jb
push
or
push
ret
call
outsl
in
xchg
ffreep
ret
sbb
push
mov
jno
or
stc
pop
push
jns
vandps
sbb
cmp
mov
pusha
stos
jae
cmp
or
or
add
cmp
xor
into
push
stos
ficomps
xchg
pusha
pop
push
and
das
out
inc
and
sub
add
sub
test
int3
rcr
cmp
call
mov
inc
out
data16
or
stc
cmp
xor
jno
xchg
sar
xchg
fsubp
aam
call
call
mov
ja,pt
push
inc
test
loop
inc
push
in
stc
gs
xchg
insb
fwait
js
and
call
rolb
roll
fisttps
dec
ret
icebp
test
test
and
and
add
call
call
pop
mov
push
xlat
ret
es
ja
stc
insb
inc
sbb
std
ret
cmp
out
call
call
call
mov
add
pushf
sarl
push
fldl
xchg
lret
jae
dec
push
inc
sbb
ljmp
lock
xor
call
call
jl
dec
shlb
leave
loopne
fistl
mov
mov
xor
test
out
inc
stc
ret
aam
and
call
lret
imul
add
add
mov
pop
jg
sbb
loope
pop
inc
inc
loopne
insb
aas
adc
inc
test
adc
test
mov
sbb
jl
mov
cmp
xchg
in
mov
insb
stos
jge
mov
arpl
jecxz,pt
mov
push
mov
pop
lahf
icebp
int3
add
add
negb
mov
je
out
push
push
cmp
out
and
mov
mov
dec
daa
add
add
xor
sub
cld
mov
adc
jp
or
arpl
cmpsb
cmpsb
mov
scas
cmpb
mov
js
mov
ss
jle
push
dec
sbb
adc
dec
int3
and
mov
mov
inc
mov
lds
adc
fldt
add
out
pusha
mov
add
add
jp
movsl
mov
push
fcmovbe
fadd
sub
xlat
pop
push
sub
rolb
and
std
in
aad
fisubl
fidivrs
xchg
xchg
add
cmp
add
cmp
adc
cwtl
ljmp
das
inc
pop
pop
jl
jp
xorb
mov
fdivrp
xor
call
call
call
iret
mov
sub
out
popf
adc
add
imulb
clc
mov
fadds
sub
jge
shlb
sbb
mov
cmp
add
push
sbb
pop
jno
pop
xor
xchg
popa
lods
push
xor
cmp
mov
jae
add
add
xchg
sbb
leave
jp
dec
cmp
int3
test
adc
xchg
mov
pop
mov
cltd
mov
lea
jp
cmp
movsb
clc
mov
dec
or
mov
push
mov
iret
inc
mov
rcll
js
xchg
or
jecxz
pop
add
adc
daa
dec
test
lahf
outsl
cli
ja
shlb
movsl
rcll
jle
xchg
inc
movsb
js
and
js
ljmp
pop
push
test
or
es
mov
ret
jne
push
mov
stos
repz
call
mov
mov
rcll
add
add
add
cld
cmpsb
stos
push
push
add
mov
add
jge
sbb
xchg
push
cli
lahf
pusha
lcall
flds
push
cli
mov
clc
and
sub
jbe
cmpsl
movl
jbe
lcall
add
add
push
pop
clc
scas
push
js
pop
sarl
test
pop
adc
repz
sbb
iret
jl
inc
pop
xchg
lahf
imul
inc
jno
lods
sbb
subb
scas
mov
xchg
fdivp
jge
sti
out
stos
lcall
arpl
jmp
test
daa
add
les
cmp
cmp
or
xchg
push
push
outsl
cmpsl
push
mov
or
out
jmp
jns
jnp
movsl
pop
mov
out
js
mov
psrad
add
call
call
mov
add
add
xchg
mov
bound
cmp
add
add
loop
add
das
lea
ds
jb
xlat
dec
push
pop
lock
cmp
jge
call
call
test
cmp
ja
xchg
scas
jno
mov
adc
out
and
add
cmpsb
or
out
cltd
hlt
mov
mov
sahf
je
out
ret
mov
add
sub
jns
outsb
push
inc
loope
data16
andl
add
inc
xor
sbb
dec
popf
lcall
popf
add
push
movsl
xor
jae
and
jo
mov
ror
inc
mov
xchg
add
in
movsl
mov
sub
lret
inc
and
xchg
imul
ja
pop
testl
xchg
ljmp
jecxz
shll
cmp
loopne
mov
in
xor
inc
xor
data16
fisubrs
je
movsl
js
push
mov
add
add
add
ds
mov
jb
xchg
lret
in
sub
in
push
aaa
fiadds
addr16
cmp
popf
cmp
and
das
shlb
add
roll
cmp
adc
subl
adc
or
sti
in
popa
scas
adc
xor
inc
iret
mov
add
push
push
stc
stos
into
aas
out
sahf
adc
lds
test
shrb
cmp
ds
and
movsl
cmpsl
rorl
sarl
push
jp
subl
int
lods
dec
sbb
rcrb
enter
bound
testb
popf
xchg
pusha
ja
loop
stc
add
and
cmpsl
or
xor
imul
push
int
call
call
push
aam
jno
movsl
inc
mov
xchg
pop
push
rorl
inc
xor
enter
fisttps
adc
and
test
mov
pop
clc
jne
xor
or
insl
test
and
jo
mov
add
add
add
push
push
rdtsc
add
adc
xlat
inc
popa
js
sbb
lcall
into
add
imul
add
icebp
mov
inc
decl
push
mov
add
outsb
jg
aas
or
sub
pop
jp
dec
inc
cmp
jns
or
notb
test
inc
xchg
cld
in
repnz
stos
dec
btr
jno
inc
lods
mov
adc
add
add
add
sub
out
push
dec
out
fidivs
in
filds
mov
xlat
dec
fstpl
scas
cmpsb
addb
mov
adc
add
xchg
or
test
popa
outsb
cld
rcrl
add
add
add
add
clc
dec
aas
sbb
ss
cltd
add
sub
inc
jne
mov
push
out
jecxz
cmp
shl
outsl
mov
pop
flds
mov
pop
call
call
mov
add
mov
sarb
clc
je
jecxz
sbb
stc
jecxz
fldl
add
dec
sahf
insl
xchg
jb
lret
data16
jecxz
adc
call
call
call
call
loopne
push
sbb
lods
push
cmp
fldcw
sbb
mov
cltd
cmovge
and
gs
add
movsb
lcall
dec
mov
hlt
cmpsb
pushf
movsl
ret
add
dec
xchg
scas
add
std
out
mov
aas
inc
shll
fldt
lods
test
push
sahf
or
sahf
rcr
movsl
leave
in
adc
cmp
in
mov
sub
or
aam
lcall
jno
mov
out
out
mov
sub
dec
out
pop
addr16
shlb
std
popf
dec
mov
mov
mov
add
sahf
add
jecxz
scas
fidivl
ss
call
sahf
cmp
dec
int
mov
xchg
adc
not
sbb
push
xchg
sbb
cs
add
add
add
xor
cmpsb
mov
xchg
mov
add
add
add
add
pop
mov
add
inc
add
jae
call
call
call
push
scas
push
or
sbb
push
test
dec
gs
in
mov
add
repz
pop
les
sub
mov
jge
aas
xchg
fsubrs
fsubs
dec
sahf
add
add
add
repz
in
lea
divb
lods
dec
out
loop
push
jg
cmpb
and
adc
divl
ljmp
mov
lods
cltd
jno
pop
inc
cmp
not
xchg
mov
push
out
pop
inc
je
jns
sbbb
shl
adc
add
add
or
das
adc
add
add
add
add
dec
loope
pop
mov
xchg
rol
inc
in
call
mov
push
add
add
add
sbb
pop
adc
stc
adc
sub
jne
call
call
call
pop
push
xor
rol
mov
mov
jno
and
xchg
pop
jb
push
add
nop
fsubrl
adc
jae
add
xor
add
fildl
pop
insl
mov
pushf
push
xchg
rcr
in
adc
lret
jbe
fucom
movsl
jle
adc
push
adc
xchg
iret
gs
stc
cmp
sbb
xor
add
lods
adc
int
sub
mov
loope
cld
mov
inc
bound
fstps
call
call
xor
insl
mov
cmpsb
js
dec
jo
enter
imul
mov
push
js
add
add
or
das
movl
test
test
lret
je
push
stc
enter
mov
push
add
pop
sahf
cmpsl
xor
movsl
stos
std
js
lock
xor
push
cld
inc
lcall
sbb
xor
aam
jne
add
add
add
add
pop
adc
leave
out
repnz
or
cmp
test
add
add
add
add
movsb
iret
ret
mov
mov
mov
cmp
dec
in
mov
push
adc
fwait
pop
lcall
add
add
add
je
sbb
inc
outsb
inc
repnz
aaa
iret
add
jne
das
cli
mov
mov
mov
cmp
or
shl
inc
jbe
cmp
rcrb
ss
imul
push
and
jle
jg
mov
push
add
rcrb
push
xchg
jns
lret
dec
dec
cmp
test
add
add
push
jg
jno
xchg
test
jmp
rorl
stc
cmp
stos
xlat
jo
jns
xchg
mov
sbbl
and
pmulhw
inc
hlt
popa
xchg
clc
scas
rcll
enter
aam
into
add
mov
push
sbb
arpl
dec
daa
sub
add
xchg
cmp
pop
addb
mov
mov
outsb
ja
push
adc
sbb
fsubrl
and
popa
pop
push
sub
or
mov
pop
add
push
mov
push
xchg
jle
xchg
dec
movhps
push
and
sarl
orb
ss
daa
or
jne
dec
sub
imul
sub
mov
xlat
dec
icebp
lret
pop
jmp
aad
aad
adc
push
push
push
add
inc
inc
in
and
pushf
ret
mov
icebp
in
push
jecxz
adc
push
or
out
icebp
mov
push
cmc
test
jmp
inc
cwtl
ffree
and
mov
or
out
test
lods
cmp
fistpll
inc
sub
push
mov
ret
and
mov
mov
mov
es
fcompl
xchg
add
enter
or
sbb
cmpsl
jl
jmp
call
call
push
out
jne
dec
in
adc
jl
cmp
cmp
add
add
add
stos
scas
insl
push
mov
arpl
cmp
inc
and
int3
lahf
jp
push
cltd
inc
push
cmp
sub
test
bound
xchg
push
push
xchg
icebp
pusha
push
add
in
sbb
mov
push
push
pusha
loop
lea
sbb
dec
shll
inc
and
leave
push
mov
cli
outsb
lods
adc
jge
dec
call
aas
adc
ds
pop
or
mov
add
bound
cmp
pop
and
stos
sahf
jne
mov
pop
xor
jmp
xchg
xor
xchg
xlat
xor
movsb
add
jg
jmp
add
into
fmull
fbld
cmp
inc
push
jb
xchg
pop
xor
and
dec
in
iret
or
xlat
test
fwait
testb
add
or
rorb
xor
ja
inc
and
insl
les
jge
aaa
push
std
xor
movsl
sbbb
gs
jnp
rcrl
cmp
in
push
mov
push
std
gs
clc
movsb
add
add
add
add
pop
jmp
in
mov
inc
pop
adc
inc
insl
imul
pop
xchg
pop
sbb
fdivs
fsubp
and
push
cltd
add
push
mov
jne
jge
leave
xor
mov
rclb
mov
add
add
add
add
fdiv
loop
fldcw
xchg
jge
outsb
dec
test
fnstenv
add
add
add
add
cmpsl
orb
jnp
and
vmwrite
add
insl
jae
fstl
std
cltd
jbe
mov
ret
xor
movsb
push
data16
out
fisttpl
add
add
add
sbb
mov
push
dec
test
clc
adc
push
js
aas
mov
stos
xchg
or
sbb
dec
cmp
in
or
or
add
push
push
pop
iret
mov
ja
xor
pop
and
xchg
push
add
mov
rcrl
leave
jne
incb
sub
cmpsb
add
xor
imul
mov
pop
lret
movsl
adc
hlt
fsubr
pop
in
push
add
repz
xchg
inc
sbb
cwtl
inc
add
sarl
xadd
lea
into
sub
enter
sub
sbb
clc
sub
imul
cmp
fadd
test
hlt
mov
add
add
add
add
push
adc
sbb
dec
and
call
call
call
cmp
mov
outsl
cwtl
test
xor
into
and
adc
ret
jmp
out
sbb
and
jle
inc
sub
int3
into
mov
add
and
in
cld
ja
sarb
stos
cltd
jmp
xor
pop
pop
add
sti
out
inc
mov
leave
mov
add
add
es
repz
xchg
orb
test
scas
adc
cmpl
mov
cmp
gs
dec
lea
jle
adc
insl
xchg
and
mov
push
inc
adc
or
je
retw
and
add
fwait
mov
xchg
jae
dec
add
mov
imul
out
jbe
pop
shlb
mov
js
test
xchg
push
add
inc
xor
inc
enter
call
inc
and
je
iret
mov
push
mov
or
xchg
outsl
sahf
shlb
pusha
sbb
cmpsl
and
fxtract
dec
sti
inc
sti
xor
out
push
add
imul
jne
or
mov
pop
xor
aaa
jbe
mov
sub
leave
cmp
push
das
loope
punpckhdq
mov
nop
popa
xchg
sub
add
jb
pop
negl
aas
adc
call
call
sbb
out
pop
mov
xor
lret
sbb
stc
jp
mov
aam
imul
push
cmp
scas
movsl
add
sub
inc
mov
lret
es
xor
sub
dec
add
out
sub
add
inc
inc
aas
or
and
fisubrl
nop
jl
test
jnp
rolb
add
cli
pusha
and
push
cwtl
cmp
jns
or
iret
inc
mov
hlt
mov
and
xor
pop
adc
jo
insl
push
test
push
jg
lea
adc
and
adc
in
xchg
pop
lock
inc
or
outsl
push
sbb
es
cmp
cmp
push
pop
enter
add
sbb
pusha
repz
dec
test
int3
imul
jbe
dec
pop
mov
sbb
pop
dec
sub
sbb
xchg
xchg
or
dec
add
add
add
add
add
inc
sbb
and
push
sbb
fisubs
into
pop
sub
mov
das
mov
or
pushf
mov
cltd
and
jg
das
imul
dec
sub
outsl
dec
in
xor
xor
mov
fisubs
mov
ljmp
fmulp
outsb
add
add
add
add
dec
adc
addr16
mov
or
mov
mov
gs
sar
jo
insb
sbb
mov
inc
cmpsl
andl
xchg
xor
std
pop
mov
cltd
in
pushf
std
mov
js
call
call
call
out
fnstenv
push
cmp
mov
add
add
add
or
mov
push
loop
flds
test
xlat
xor
sub
faddl
and
enter
gs
sarb
add
or
mov
mov
arpl
dec
mul
xlat
bound
cmpsb
push
imulb
and
cmpsb
and
aaa
xor
cmpsb
and
dec
mov
imul
loopne
mov
pop
imul
dec
dec
cmpsb
cmp
add
xchg
fdivrl
sub
xor
mov
adc
xor
insb
push
ja
fstps
add
jp
pusha
fisttpll
jp
mov
push
mov
sub
mov
xor
add
sub
and
mov
push
mov
pop
mov
mov
add
add
mov
sub
add
sub
sub
jmp
xor
add
shl
mov
add
add
add
mov
mov
add
add
and
mov
sub
add
sub
cmp
jne
test
ja
add
and
mov
sub
sub
or
or
and
leave
ret
int3
int3
int3
push
mov
push
push
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
xor
add
xor
mov
add
or
or
mov
mov
or
add
call
mov
shr
or
add
sub
add
add
sub
or
mov
push
add
sub
pop
sub
cmp
jne
mov
xor
mov
push
sub
xor
pop
mov
sub
sub
push
and
ret
xor
add
xor
call
xor
sub
add
ret
int3
int3
int3
int3
int3
xor
add
and
mov
mov
mov
sub
add
mov
leave
ret
int3
push
mov
sub
mov
and
sub
and
and
and
mov
add
mov
add
mov
mov
add
sub
mov
mov
mov
sub
mov
add
sub
mov
mov
sub
add
mov
mov
add
add
add
sub
add
mov
mov
add
add
sub
and
cmp
jne
xor
sub
sub
sub
xor
sub
or
mov
imul
mov
sub
sub
sub
or
mov
sub
and
sub
addl
or
add
sub
add
add
cmp
je
or
mov
xor
add
or
jmp
add
sub
xor
inc
mov
sub
sub
or
add
add
mov
mov
sub
call
cmp
jne
mov
mov
mov
sub
sub
sub
mov
add
mov
mov
sub
add
mov
sub
or
mov
mov
add
mov
add
add
add
sub
mov
xor
sub
add
shl
cmp
jne
call
mov
xor
and
mov
and
or
add
add
sub
add
mov
add
sub
inc
push
xor
mov
pop
mov
xor
add
add
mov
add
sub
add
sub
or
add
xor
add
mov
mov
add
add
sub
dec
cmp
jne
call
cmp
jne
add
mov
mov
sub
mov
test
jne
mov
add
mov
add
rol
mov
sub
sub
push
add
add
pop
mov
add
sub
sub
imul
sub
add
or
add
or
sub
or
xor
or
add
add
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
imul
sub
mov
sub
sub
sub
add
sub
sub
sub
sub
sub
dec
sub
or
add
add
mov
push
xor
mov
and
and
sub
add
add
cmp
je
sub
ret
and
mov
sub
sub
sub
pop
push
add
push
das
pop
xor
imul
pop
jns
dec
push
add
and
push
add
mov
imul
mov
pop
push
popa
and
add
jo
push
adcb
push
xor
inc
inc
add
jg
cmp
xchg
adc
pop
das
pop
sub
inc
jo
cmp
and
add
jns
xor
push
addl
sbb
mov
add
add
inc
inc
sub
sub
inc
add
sbb
xchg
daa
dec
sub
push
sub
add
jne
add
cmp
mov
add
push
sbb
add
pop
jae
and
ss
add
add
push
adc
lea
inc
push
jb
cmp
pop
and
push
jns
add
daa
add
popl
adc
xorb
cmp
inc
imul
and
push
sub
jnp
add
add
push
add
jge
push
xchg
add
sub
sbb
pop
jp
add
add
aas
push
add
add
inc
push
adc
pop
jno
pop
pop
test
addb
add
mov
add
and
pop
test
xor
add
inc
add
and
jno
add
xchg
add
push
push
pop
adc
dec
jae
test
pop
imul
cmp
dec
sbb
aas
pop
pusha
sbb
add
pop
sbb
sbb
sub
inc
dec
push
jl
add
dec
arpl
and
cs
dec
xorl
adc
push
add
xchg
and
add
xor
lea
push
push
inc
jae
es
daa
pop
inc
sbb
add
add
xchg
push
data16
add
sub
inc
dec
add
outsl
add
dec
adc
pop
inc
push
jnp
xor
add
xor
inc
add
cmp
jge
sbb
jle
add
push
push
mov
test
aas
xor
add
add
add
add
imul
dec
push
and
xchg
jg
add
and
mov
xor
add
and
jp
adc
cmp
push
mov
push
jbe
ja,pn
sbb
pop
je
aas
push
mov
pop
inc
sbb
cs
xor
insl
inc
dec
push
add
arpl
js
cmp
cmp
jg
pop
imul
sbb
push
arpl
aaa
sbb
inc
bound
push
add
add
xor
push
add
add
jnp
bound
and
sbb
inc
dec
add
jne
add
add
add
mov
xor
dec
jns
cmp
and
bound
aaa
pop
outsl
insl
add
add
and
adc
inc
lea
push
add
pop
and
xor
adc
sbbb
add
sub
adc
mov
dec
inc
pop
mov
sub
cmp
dec
jb
add
dec
jg
pop
add
xor
bound
mov
push
add
inc
push
push
and
cmp
add
xor
add
xorb
pop
and
mov
sub
outsb
push
das
lea
inc
add
add
je
pusha
add
jbe
add
insb
xchg
sbbl
adc
je
sub
and
pop
adc
inc
dec
popa
add
xor
jno
add
add
sub
mov
add
sbb
imul
jno
add
add
sbb
add
push
outsb
dec
dec
jno
cmp
inc
pop
dec
imul
popa
add
inc
pop
dec
mov
js
add
inc
push
cmp
add
add
jnp
pop
sbb
sbb
mov
add
and
js
and
mov
and
add
sub
sbbb
jb
add
and
sbb
pop
popl
jp
pop
jge
je
add
adc
pop
adc
fs
cmp
sbb
pop
inc
outsb
push
imul
add
pop
adcl
inc
push
xchg
add
inc
jne
adcl
pop
dec
ss
js
add
add
inc
push
cmpb
add
xor
push
pusha
jge
add
push
push
lea
adc
adc
fs
jle
inc
jge
jb
sub
push
cmp
adc
jge
add
gs
cmp
add
and
and
add
xor
je
and
test
dec
cmp
add
adc
sub
pop
mov
add
jp
xor
dec
cmp
add
add
adc
dec
adc
addb
add
add
add
outsb
inc
add
inc
inc
jo
ja
aas
push
sbb
sbb
and
addb
add
push
jnp
mov
test
pop
push
add
inc
inc
xor
add
aaa
inc
insl
inc
push
push
mov
sbb
jnp
pop
push
ja
pop
and
pop
dec
xor
add
add
add
pop
adc
fs
jo
add
mov
xor
inc
add
add
daa
pop
jge
pop
lea
jae
add
aas
add
push
pop
push
imul
push
add
dec
sub
add
sub
xor
add
bound
inc
pusha
add
pop
cs
addl
jne
jo
test
push
push
add
add
add
add
sbb
pop
add
es
mov
popa
dec
xchg
push
pop
mov
push
push
jp
adc
sbbl
pop
mov
imul
sbb
and
push
insl
jno
add
pop
dec
push
mov
inc
xor
and
sbb
xor
add
cmp
add
dec
dec
jp
ds
cmp
adc
cs
adc
ss
das
imul
add
add
pop
dec
dec
add
sbb
add
je
jno
add
sub
mov
push
je
pop
add
jno
imul
test
add
sub
lea
xor
inc
xchg
inc
insb
and
add
add
xchg
add
adc
popl
inc
and
pop
insb
sub
jle
add
jae
adc
inc
lea
add
pop
pop
add
es
cmp
add
jno
pop
jns
inc
mov
dec
sbb
jne
cmp
xor
lea
xor
mov
mov
add
jle
add
sub
sbb
sub
adc
inc
jnp
push
pop
and
push
add
inc
add
add
add
push
popa
sub
pop
sub
add
aaa
add
push
data16
je
pop
pop
pusha
adc
pop
add
cmp
bound
mov
imul
xor
push
jae
push
xor
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
jge
add
jle
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
movsb
jle
add
inc
add
jle
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
jg
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
jg
add
jg
add
jg
add
inc
add
inc
add
inc
add
addb
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
addb
addb
addb
addb
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
mov
test
je
mov
mov
leave
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpw
jne
mov
cmpl
jne
cmpw
jne
cmpl
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
andl
lea
push
call
movl
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
andl
call
mov
xor
ret
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
ret
push
call
xor
ret
call
pushl
call
pushl
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
pushl
call
ret
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
cmpl
je
push
call
test
pop
je
pushl
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
je
mov
mov
mov
cmp
jne
pushl
call
mov
pushl
call
pop
pop
mov
mov
cmp
je
sub
mov
cmp
jb
cmpl
je
mov
call
cmp
je
push
call
pop
call
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
push
mov
push
push
xor
xor
cmp
je
inc
cmp
jb
cmp
jae
push
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
cmp
pop
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
pop
pop
ret
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
test
mov
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
push
inc
push
call
mov
cmp
pop
pop
mov
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
mov
push
xor
cmp
push
mov
mov
mov
movl
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
test
pop
je
incl
cmpl
je
mov
mov
incl
mov
inc
test
mov
mov
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
movsbl
push
je
call
test
pop
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
test
pop
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
test
pop
pop
je
andl
incl
leave
ret
push
mov
sub
push
xor
cmp
push
push
jne
call
push
mov
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
cmp
pop
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
push
push
xor
lea
inc
xor
push
mov
mov
call
cmpl
pop
jle
mov
jmp
push
push
call
mov
add
cmp
movzwl
lea
jbe
push
push
call
test
pop
pop
je
movzwl
inc
add
cmp
jb
jmp
andl
mov
pop
pop
pop
leave
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
call
ret
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
mov
movl
xor
inc
mov
test
je
call
test
je
push
pushl
mov
call
mov
push
pushl
call
mov
mov
movb
movb
mov
mov
push
call
push
call
pop
andl
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
push
call
pop
ret
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
cmp
mov
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
cmp
mov
je
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
mov
push
push
push
lea
xor
push
mov
mov
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
pop
jne
cmpl
jb
xor
inc
leave
ret
push
pop
leave
ret
xor
cmp
push
sete
push
push
call
test
mov
jne
xor
ret
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
andl
jmp
xor
inc
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
sub
push
mov
push
push
mov
xor
push
mov
cmp
movb
movl
lea
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
cmp
mov
lea
mov
mov
mov
je
lea
mov
test
lea
mov
mov
je
mov
call
test
movb
jl
jg
mov
cmp
mov
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
pop
add
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
jmp
cmpl
je
push
push
mov
mov
call
jmp
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
movl
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
mov
pushl
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
ret
mov
ret
add
push
pop
cmp
sbb
and
add
ret
call
test
jne
mov
ret
add
ret
push
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
test
pop
pop
jne
lea
cmp
jb
push
pushl
call
test
pop
pop
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
xor
lea
pushl
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
pushl
call
xor
inc
ret
push
push
call
xor
mov
pushl
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmpl
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
mov
ret
pushl
call
test
pop
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmpl
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
jb
orl
jmp
orl
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
pushl
call
mov
pushl
call
cmp
pop
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
movl
call
add
or
pop
ret
mov
test
push
mov
movb
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
push
push
pushl
push
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
push
push
mov
mov
push
xor
lea
push
push
call
mov
mov
mov
xor
lea
stos
stos
stos
mov
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
lea
push
pushl
call
test
mov
je
xor
mov
inc
cmp
jb
mov
test
movb
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
add
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
push
mov
sub
push
xor
push
lea
call
cmp
mov
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
cmp
mov
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
push
push
xor
pushl
call
mov
test
pop
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
call
mov
test
pop
pop
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
cwtl
mov
add
mov
add
mov
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
imul
push
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
and
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
mov
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
push
push
mov
mov
xor
cmp
push
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
lea
pop
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
mov
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
test
pop
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
cmp
jne
repz
jmp
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
push
lea
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
andl
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
test
je
sub
cmpl
jne
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
mov
je
testw
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
cmp
mov
je
mov
push
push
pushl
push
pushl
pushl
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
cmp
mov
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
push
mov
cmp
ja
push
mov
push
push
xor
cmp
mov
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
cmp
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
cmp
pop
jne
cmp
jne
xor
inc
add
and
push
push
pushl
call
mov
test
jne
cmp
push
pop
je
push
call
test
pop
jne
jmp
call
mov
call
mov
pop
mov
pop
pop
pop
ret
push
call
pop
call
movl
xor
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
cmp
movl
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
push
push
pushl
call
add
ret
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzbl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
or
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
int3
int3
int3
int3
incl
add
add
add
add
in
addb
addb
pushl
addb
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
add
call
xchg
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
xchg
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
pushf
inc
add
pushf
inc
add
add
add
incl
add
add
incl
add
add
inc
pushf
inc
add
pushf
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
incl
add
add
incl
add
add
jns
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
ljmp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
into
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
roll
mov
add
je
add
and
add
xchg
jecxz
add
out
add
adc
add
in
add
call
add
lret
add
out
add
out
add
out
add
add
add
in
add
in
add
in
add
in
add
add
and
add
xor
add
inc
out
add
add
jb
add
and
add
out
add
add
call
out
add
out
add
add
inc
out
add
add
add
sahf
in
add
add
push
add
pop
in
add
add
in
add
jmp
add
jmp
add
jmp
add
add
pop
jmp
add
add
add
push
add
jp
add
xchg
add
cwtl
call
add
enter
add
call
call
add
sbb
add
xor
add
dec
jmp
add
jl
add
mov
add
cmpsb
jmp
add
jmp
add
loopne
add
out
jmp
add
adc
add
and
add
cmp
add
inc
ljmp
ljmp
mov
add
mov
ljmp
in
add
hlt
ljmp
or
add
push
jmp
add
jmp
add
jmp
add
add
dec
jmp
add
add
add
add
or
add
push
add
orb
orb
add
adc
add
pop
add
andb
add
push
call
add
add
add
ljmp
jb
imul
xor
dec
jae
popa
fs
gs
fs
je
add
xchg
dec
jo
outsb
push
jb
arpl
jae
out
add
jne
push
jb
arpl
outsb
inc
popa
arpl
add
jne
inc
imul
gs
outsl
arpl
gs
outsb
outsw
push
add
movsb
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
incl
inc
insb
outsl
bound
inc
jb
add
clc
add
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
dec
outsl
arpl
add
imul
outsb
je
outsl
insb
add
je
outsl
jb
imul
push
arpl
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
gs
jo
popa
je
push
add
push
add
fs
imul
add
jmp
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
enter
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
inc
jb
popa
je
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
jb
je
arpl
push
arpl
outsb
add
popa
add
je
imul
bound
gs
add
sbb
push
gs
imul
bound
gs
add
inc
add
je
jne
jb
outsb
je
push
dec
add
adc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jno
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
xlat
add
arpl
gs
insb
imul
int
dec
imul
roll
dec
outsl
jbe
push
outsl
inc
js
add
add
je
imul
add
add
je
imul
dec
jb
inc
js
add
push
gs
dec
jne
inc
add
cmc
add
arpl
jae
bound
inc
inc
dec
xor
cs
insb
add
add
inc
inc
outsb
jne
dec
gs
outsl
jb
inc
jbe
outsb
je
add
inc
add
inc
push
popa
imul
je
jo
gs
jbe
outsb
je
add
push
add
inc
inc
fs
jae
push
outsl
push
je
imul
xor
xor
fs
insb
add
lret
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jo
jb
add
jmp
push
gs
imul
adc
dec
gs
jo
insb
insb
outsl
arpl
mov
push
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
outsb
push
gs
js
gs
imul
gs
mov
push
jb
arpl
fs
jae
add
mov
je
jb
arpl
jae
movsb
add
imul
mov
push
je
dec
popa
outsb
fs
add
jge
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
add
inc
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
gs
add
je
imul
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
insl
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
add
inc
bound
addr16
jb
jae
outsb
je
push
add
fs
imul
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
aas
add
push
popa
insb
imul
add
push
insb
gs
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
xlat
add
insb
push
outsb
ja
outsb
add
dec
gs
jo
imul
dec
jne
je
inc
jns
gs
outsl
push
imul
je
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
push
je
imul
push
cmp
mov
add
adc
aaa
pop
lods
popa
je
mov
pop
fdivr
out
clc
sub
xchg
push
jge
ss
pop
int
mov
scas
into
lods
fistpl
in
or
fisttps
ss
mov
loop
cld
ret
xchg
push
in
bound
push
xchg
aam
xor
clc
pop
imul
fbstp
add
cld
xchg
nop
or
mov
js
imul
mov
imul
shll
dec
push
pop
sub
sti
arpl
lods
loopne
lds
hlt
cld
sbb
shll
add
aam
popa
outsb
rcll
xchg
sbb
ss
push
inc
mov
mov
xchg
std
insb
iret
push
cs
out
js
adc
shll
in
push
xor
adc
and
jns
adc
inc
aas
inc
out
mov
xor
or
and
stos
mov
loop
add
aad
rol
in
nop
mov
in
arpl
sbb
leave
movsb
mov
jge
mov
xor
nop
movsb
cmp
mov
cmp
adc
push
pop
insl
jno
jnp
aam
mov
mov
call
imul
int
movsl
je
sbb
xchg
cmp
and
jnp
sti
test
lret
mov
xchg
std
and
xchg
push
repz
rcl
imulb
mov
bound
and
lcall
jecxz
divb
sbb
mov
or
ja
push
mov
imull
div
or
aad
call
sub
mov
outsb
fcmovb
cmpsl
cmp
popa
movsl
fisubl
xor
rcrb
jbe
inc
jge
push
adc
pop
jmp
andl
adc
push
sbb
push
repz
lahf
push
cmp
rcrl
inc
cli
pop
pop
mov
xchg
lds
ljmp
icebp
and
push
inc
push
push
in
in
or
in
pop
test
out
inc
push
adcl
fucomp
dec
mov
clc
arpl
ja
repz
jl
mull
dec
subl
loope
dec
mov
std
sti
aad
loop
mov
pop
mov
adc
adc
cmpsl
add
pusha
into
and
rcll
mov
xchg
andl
dec
icebp
sahf
and
cmpl
jbe
add
shll
aad
or
dec
or
gs
fcmovnbe
out
mov
imul
mov
mov
or
inc
jne
arpl
cmp
or
adc
je
scas
and
xor
in
dec
loop
add
or
push
loop
mov
pop
mov
pop
popa
loop
or
push
jns
push
fldt
xchg
aas
xorb
shll
dec
xor
cmp
stos
loop
and
sub
xchg
loop
icebp
bound
insl
cmpb
xchg
sahf
fidivrs
jp
mov
cwtl
ja
sbb
jne
mov
cmpsb
loope
pop
or
imul
mov
loop
test
mov
scas
jae
jp
add
and
jle
xchg
loop
pop
outsl
mov
cmp
hlt
push
mov
add
mov
mov
dec
sti
or
aaa
fiaddl
loop
or
fs
push
repz
cli
les
ss
pusha
ss
push
jnp
add
jge
nop
rolb
pop
push
xor
pop
cmp
jle
dec
xor
cmp
add
psubq
mov
push
push
sub
fdivs
imul
mov
imul
ds
test
mov
xchg
mov
mov
outsb
push
imul
repz
fcoms
xchg
orb
repz
andb
subb
or
repz
jbe
rorb
mov
push
cmpsl
mov
lret
or
rcrl
inc
ljmp
or
rorb
repz
mov
sub
repnz
xor
and
sub
cmp
popa
mov
in
push
insb
movsb
or
ja
test
in
idivl
in
sbbl
outsb
mov
mov
add
mov
xorl
mov
xor
fs
ds
addl
dec
outsb
out
ret
adc
sbb
mov
mov
shrl
mov
ucomiss
mov
push
mov
xchg
sti
scas
push
lock
ss
pop
in
pop
jmp
jl
flds
mov
dec
hlt
pop
push
add
in
out
lret
push
sahf
mov
cmp
inc
nop
movsl
add
xchg
jns
cmp
sub
daa
cmpsb
popl
movsl
out
scas
mov
push
call
es
add
nop
mov
aaa
xlat
rcr
les
and
gs
xchg
sbb
outsl
jmp
psubsw
fsubrs
mov
and
dec
add
stos
in
sub
repnz
or
jle
das
push
or
fimull
repz
repz
repz
aam
repz
pop
and
cmpb
repz
repz
repz
cltd
cli
mov
pushf
sbb
and
or
ljmp
data16
add
add
add
mov
mov
dec
pop
icebp
dec
lds
shlb
mov
dec
int
jae
rorl
bt
pusha
sub
xchg
cmpsb
adc
mov
jge
or
add
pusha
mov
adc
out
cmpsb
rcr
add
add
add
add
jo
mov
sub
sub
dec
or
jns
push
dec
sub
add
shl
push
loopne
in
add
mov
bound
mov
push
inc
mov
lcall
repz
xchg
push
imul
sbb
and
outsl
xor
and
push
repz
mov
sahf
cmc
jae
jo
add
dec
push
or
add
adc
sti
int
imul
xor
add
mov
jecxz
loope
pop
xchg
fisubrl
dec
push
mov
xchg
das
loopne
mov
jl
ret
fisttpl
in
sbb
push
push
pop
std
sbb
mov
push
jo
pop
pop
push
mov
scas
dec
and
sub
call
call
call
sbb
sub
test
add
add
add
out
fwait
test
xorb
jns
inc
repz
xor
frstor
sbb
into
in
repnz
dec
fwait
mov
enter
popl
mov
aam
outsb
add
inc
cmpsl
test
sub
popf
pushf
add
dec
adc
stos
jb
and
into
imul
sarl
je
or
pop
jmp
mov
mov
std
out
call
push
out
ljmp
add
mov
test
add
add
add
sbb
stos
out
adc
pop
adc
ficomps
nop
addr16
ss
je
inc
jmp
inc
pop
add
push
inc
lods
push
ret
push
stos
ds
inc
leave
data16
mov
xor
orb
pusha
dec
shrl
sub
into
mov
clc
or
sub
cwtd
inc
dec
cmpsb
enter
jno
push
adc
adc
pushf
xchg
call
call
push
mov
stos
mov
jno
pop
xchg
cmp
add
add
add
add
loop
inc
add
xor
cmc
cmp
and
push
insb
loope
mov
roll
dec
xorl
jns
push
cld
outsl
repz
ret
cld
push
scas
sbb
jg
jg
mov
ljmp
shll
mov
pop
sub
or
inc
and
add
call
mov
add
add
add
add
pop
mov
out
jge
repz
inc
inc
out
xchg
sub
cld
sti
pop
mov
dec
iret
enter
jl
fwait
xor
xor
mov
jg
adc
adc
and
decb
push
fistl
xor
push
inc
add
aaa
out
inc
std
sarb
iret
add
add
arpl
cli
shr
jne
pushf
push
sub
call
call
xor
aas
std
jbe
fwait
shlb
roll
fisubs
ret
daa
sub
push
add
add
add
add
sub
push
hlt
mov
xchg
pop
out
dec
jno
jae
fisttps
test
sub
les
add
add
add
loope
jp
or
inc
mov
mov
adc
adc
or
jl
mov
int
cmp
popa
mov
xor
push
mov
fs
nop
ljmp
sub
lock
mov
mov
rorl
cmp
popa
std
sub
ret
gs
pop
addl
add
jmp
xor
push
push
mov
sub
imul
fdivl
movsl
or
int
popf
mov
xchg
push
push
and
lret
push
mov
and
push
inc
insb
push
outsb
dec
adc
or
and
pop
shlb
mov
adc
adcb
dec
es
or
dec
push
nopl
push
cwtl
psubusb
mov
ret
sub
push
call
pop
mov
fcomps
sahf
adc
iret
mov
add
test
loop
mov
jae
pop
icebp
jle
in
cmp
push
lea
cmp
or
rcll
add
add
add
test
jns
inc
jno
mov
andl
test
jmp
xchg
cmp
mov
xchg
jne
leave
mov
bound
cmc
out
aad
test
call
call
call
cwtl
sub
stos
sbb
push
add
or
mov
mov
pusha
push
cltd
fcompl
aas
sahf
repz
sbb
pop
pusha
inc
or
xor
xadd
clc
jns
inc
inc
adc
jmp
cmp
sub
pop
lcall
add
adc
test
or
xor
movsl
fldt
fimull
idiv
lods
mov
pop
add
hlt
sbb
add
mov
add
add
add
je
lret
stos
dec
out
stc
test
xchg
push
xchg
dec
mov
loope
xchg
inc
add
popf
jae
aas
test
arpl
push
jle
das
pop
push
mov
clc
push
mov
and
test
lods
xor
sub
add
add
mov
iret
jne
testb
add
ret
imul
out
sub
and
scas
out
mov
cwtl
xchg
jo
nop
push
push
cmp
mov
lods
lret
adc
cld
nop
mov
daa
pop
into
nop
nop
push
xchg
lds
movsb
pop
mov
call
call
je,pt
loopne
ret
push
push
pop
mov
fs
push
add
add
add
ret
sahf
clc
retw
adc
or
movsb
stos
in
popl
daa
mov
sub
outsb
adc
and
pop
mov
in
stos
mov
add
cmpsl
ss
pop
xor
dec
fstl
or
test
jecxz
xlat
add
pop
mov
cmc
jge
sbb
cltd
insl
movsb
dec
out
inc
sbb
insb
inc
push
je
cmp
sti
xlat
add
dec
mov
inc
shlb
daa
cmp
daa
adc
loope
and
aaa
push
sahf
dec
sub
and
add
mov
test
add
mov
pop
cld
iret
aaa
lea
xor
testb
daa
out
cmp
or
inc
testl
add
add
iret
pop
cmp
sbb
lcall
xor
adc
shll
add
and
cmp
xchg
xor
fisttpl
cmp
jo
cli
or
arpl
shlb
sbb
int3
dec
mov
cltd
ds
scas
incl
inc
fiaddl
lret
add
xor
pop
out
mov
adc
test
and
into
jno
lock
cmp
enter
adc
jge
inc
pop
jmp
push
ficomps
add
add
add
adcb
call
call
les
or
cmpsb
int3
jns
movsl
jne
pop
sbb
clc
mov
or
test
add
add
add
add
pusha
sub
shlb
int
adc
xor
rcll
outsb
mov
jge
push
dec
pop
popa
jno
mov
mov
push
xchg
fldcw
mov
add
add
add
adc
or
daa
push
add
loope
mov
xchg
push
add
fisttpl
dec
dec
outsb
jl
push
xchg
cltd
adc
cwtl
xor
stos
pop
adc
lcall
ja
add
add
add
mov
inc
arpl
std
out
mov
lods
pop
call
jmp
cmp
ret
cmpsb
xchg
fistpl
or
testb
pop
scas
sbbl
les
sbb
sbb
ficoms
adc
pop
sub
call
adc
int
dec
cmc
ss
gs
outsl
fcoml
scas
ja
jae
das
add
add
pushf
inc
add
ffree
and
and
imul
xor
in
push
dec
fstl
ret
enter
adc
add
dec
mov
cwtl
enter
cmc
enter
pop
popf
icebp
dec
jg
es
fisttpll
repnz
ds
bound
jge
into
lock
in
mul
aaa
xchg
xchg
sbb
ffreep
add
addb
int
push
add
add
add
push
jg
dec
sbb
sbb
movsl
pop
or
ret
dec
arpl
icebp
or
cmp
xchg
pop
in
push
add
in
std
push
jge
add
mov
ss
lcall
sar
inc
jmp
cs
jb
int
insl
push
push
adc
das
orl
jl
mov
cmp
dec
aaa
std
lock
cmp
pop
ss
adc
test
fsubr
inc
mov
adc
in
fistpll
add
adc
aam
int3
add
nop
add
push
lods
lcall
inc
sbbb
xor
loop
jne
or
out
sub
and
pop
push
xchg
test
add
xchg
dec
mov
rep
sahf
xchg
cmp
sbb
out
shr
cmp
mov
in
ret
test
cmp
pop
fildll
mov
lock
lods
push
lahf
fisubrs
cmp
lahf
jle
orb
add
call
call
call
call
add
and
mov
sahf
cmpsl
pop
dec
stc
gs
xor
ljmp
lods
mov
or
std
test
push
cmp
inc
xchg
mov
lahf
push
jnp
lret
push
cltd
add
add
mov
je
sahf
aad
scas
or
jnp
aaa
adc
or
add
stc
adc
xor
stc
sub
xor
gs
imul
popw
sbb
mov
add
lods
push
mov
xor
pop
push
in
add
add
add
add
pushf
and
xor
orb
pop
pop
cmpl
mov
adc
addr16
add
sub
repz
xchg
push
push
add
mov
test
inc
mov
mov
mov
jno
scas
rclb
notl
adc
lods
test
aas
xchg
stos
cli
xchg
into
lods
mov
pop
mov
leave
fcomi
stc
bound
add
add
daa
push
push
fst
jno
or
adc
std
add
in
xor
xchg
repnz
popf
cmpsb
fcom
sahf
fs
ss
ficoml
sub
dec
aad
scas
push
jbe
loope
add
call
call
add
add
add
add
pop
pop
add
mov
or
add
add
add
add
mov
leave
pop
pop
push
push
xchg
pop
daa
js
lods
or
mov
cmp
push
in
scas
xchg
dec
repz
arpl
inc
out
xchg
push
or
fmuls
and
icebp
xchg
lahf
xchg
jae
loop
arpl
ret
punpckhwd
je
inc
sbb
adc
ret
sbb
adc
add
clc
xchg
lods
pop
sbb
lahf
clc
test
clc
pop
icebp
xchg
popl
scas
inc
movsb
sub
adc
jne
xchg
pop
mov
out
cmp
xchg
fcomp
dec
mov
mov
int
dec
or
cmp
add
add
add
add
and
add
lahf
rolb
ret
cwtl
test
call
adc
call
call
call
add
stos
outsb
push
jne
ja
xor
pop
jne
cmp
and
mov
xor
xchg
jo
add
adc
jecxz
sub
sbb
push
out
jp
lahf
inc
mov
or
leave
out
xor
xlat
xchg
pop
jecxz
in
sub
popf
cmp
js
adc
sbb
dec
out
add
fnstcw
outsb
jnp
xchg
xor
dec
lcall
add
add
add
add
pop
mov
jmp
popa
int
dec
mov
cmpsb
push
mov
mov
outsb
lea
repz
push
inc
cwtl
mov
adc
adc
ss
je
out
sbb
cmp
xchg
adc
sbb
rcrl
fildl
add
and
bound
mov
jae
jb
sub
out
sub
or
xlat
gs
cli
mov
inc
insl
or
mov
add
mov
into
jne
bound
inc
ljmp
fisubrs
arpl
push
add
add
add
add
xor
outsl
enter
ret
mov
jb
dec
cli
lahf
sub
push
out
pop
aaa
fildll
add
jo
xchg
nop
mov
inc
push
add
jae
lcall
shlb
mov
mov
cltd
int3
lods
lret
mov
mov
mulb
dec
cmp
hlt
and
mov
xor
popf
sbb
aad
scas
ret
dec
subb
iret
adc
sub
in
inc
and
mov
add
add
add
ss
mov
aas
and
push
dec
cwtl
insb
gs
cli
pushf
test
push
gs
or
jp
test
jb
pushf
pop
scas
dec
mov
mov
rcrb
lret
hlt
stc
divb
cmp
testb
add
add
ror
sbb
add
scas
xchg
mov
cltd
jle
sbb
aam
mov
inc
lea
jnp
jb
call
call
into
lcall
in
push
adc
pushf
fsubr
call
call
call
dec
popf
or
or
test
dec
and
lahf
dec
inc
sub
dec
pop
pop
fmuls
add
and
jmpw
pop
mov
adc
add
add
add
adc
mov
pop
pusha
mov
mov
ss
xor
xchg
das
or
xchg
add
fisubl
ja
cmovle
mov
mov
or
ljmp
out
mov
sub
jae
cmp
in
push
je
repnz
pop
push
push
lcall
mov
pushf
enter
sbb
stos
out
sbb
in
xor
iret
call
call
data16
arpl
mov
mov
add
add
shrb
fisttps
popf
jp
call
call
jmp
cmpsl
inc
test
or
leave
mov
jmp
imul
xor
mov
pop
pop
sbb
aas
add
pop
es
pushf
test
popf
daa
icebp
xchg
adc
iret
pop
cmp
mov
add
add
sti
jbe
and
xchg
and
push
and
icebp
xor
in
int3
cmp
daa
ret
in
pop
push
add
mov
in
lods
mov
xchg
sbb
push
out
xor
loop
rolb
and
dec
dec
jmp
push
dec
std
pop
mov
es
mov
add
aam
ja
jl
nop
js,pt
or
aad
pop
add
push
sub
in
and
insb
adc
or
test
daa
pop
xchg
xchg
jb
xchg
push
aaa
jecxz
popf
inc
adc
or
pop
popa
xor
and
nop
jo
xchg
fwait
lods
dec
mov
add
std
pop
and
aad
adc
add
add
test
movsl
mov
pusha
or
or
arpl
xchg
aaa
inc
and
pop
popf
sbb
stc
or
movsl
jp
fldl
stos
pop
in
ja
scas
adc
sub
pop
fildl
mov
xor
das
ret
inc
test
pop
sub
and
nop
out
pusha
fmuls
orb
xor
je
lea
nop
sub
mov
mov
int3
inc
fsubs
stos
cmc
cld
test
data16
pop
xchg
cli
arpl
sbb
lods
je
and
and
insb
push
lahf
ret
push
sub
sub
stc
push
pop
lret
sub
pusha
pop
pushfw
mov
fnstenv
adcl
out
adc
ss
cltd
xchg
lret
hlt
ficompl
icebp
int3
gs
iret
push
out
clc
push
cmpsl
cli
or
jmp
pop
clc
jge
cmp
idivl
popa
fldt
pushf
into
pop
aaa
outsl
mov
aas
lods
jl
pop
or
xchg
cmc
cmc
add
mov
xor
pop
int3
fwait
cld
mov
jnp
ficomps
jg
loopne
or
icebp
mov
mov
mov
pop
testb
mov
dec
fldl
jbe
call
call
mov
lret
push
cmc
test
pop
and
xlat
inc
lock
mov
insl
lea
xchg
clc
aad
adc
xchg
ret
add
add
add
mov
pop
jno
cmpsb
mov
idivb
jnp
xor
inc
nop
xor
sbb
pushf
and
inc
bound
clc
mov
mov
mov
xchg
movsb
out
cwtl
fldt
sti
hlt
repnz
add
add
add
add
lahf
pop
shrl
roll
cmp
add
inc
std
fstps
inc
addb
add
or
jb
insb
test
adc
xchg
pop
cmpsb
push
mov
cltd
addr16
adc
call
jno
mov
or
add
add
aaa
andps
adc
rol
push
out
dec
or
sbb
mov
in
inc
cmp
xor
and
mov
cmpsb
inc
mov
popf
arpl
jns
jl
xchg
addb
lock
xchg
in
sahf
lock
jg
push
adc
aas
es
shrb
or
jo
clc
mov
lds
add
in
mov
fwait
cmpsb
mov
rcll
subb
jge
out
mov
xchg
icebp
jl
pop
loopne
sub
and
cmp
mov
mov
adc
sub
cmp
icebp
inc
test
sub
popf
and
test
je
loop
mov
loop
insb
pop
into
lret
cli
filds
push
ja
push
xchg
mov
add
jl
inc
mov
mov
std
cmp
lahf
jnp
call
rcr
aam
pop
xchg
sbb
sbb
loope
dec
testb
mov
add
add
add
add
mov
xchg
faddl
loop
rorb
outsb
test
jnp
push
shlb
movsb
xor
call
call
call
leave
mov
xchg
je
add
fcomps
dec
out
rorb
stc
or
popf
xchg
xor
leave
inc
add
fdivs
add
add
aaa
jg
and
xchg
push
cli
jl
mov
out
out
fstl
mov
mull
inc
add
fidivs
xchg
sub
aam
adc
sbb
and
cmp
hlt
aam
pusha
pushf
fistpl
sub
push
ja
jnp
or
add
add
add
add
jbe
xchg
dec
flds
xlat
inc
testb
or
idivb
jns
mov
inc
jbe
adc
add
in
in
sbb
popw
xchg
test
shll
jmp
inc
pop
loopne
add
add
add
add
ss
fidivl
add
xchg
shrb
inc
jp
push
sbb
out
push
pop
push
xchg
popa
sub
mov
popa
jp,pn
mov
int3
sbb
xor
daa
cmp
adc
sbb
xchg
inc
fcmovb
roll
mov
sbb
jp
cli
out
cmpb
jg
jp
inc
add
add
add
add
scas
lock
loop
insl
sbb
jns
cwtl
push
and
hlt
iret
mov
jmp
inc
nop
in
and
cmpsl
jg
mov
lods
and
xchg
pop
ret
out
stc
out
pop
push
pop
hlt
leave
cmp
add
push
rcr
outsl
inc
sub
add
mov
gs
lods
push
out
movsl
scas
pop
test
mov
pop
pop
or
ljmp
jp
fisttps
mov
out
jmp
sti
das
or
add
out
popf
aam
fcmovne
aaa
rcrb
dec
aam
test
aam
mov
test
stos
imul
dec
adc
ja
test
or
add
or
inc
pop
xor
add
pop
addr16
test
sbb
cld
in
mov
testl
adc
cmc
inc
lret
jecxz
push
mov
mov
adc
ret
mov
mov
icebp
fistpl
xchg
imul
lret
cmp
jb
mov
and
aad
add
xor
cmp
xor
add
dec
jmp
jno,pn
std
xchg
xchg
jmp
lods
bound
das
sbb
push
xchg
xor
fisttps
jp
mov
out
test
aam
sahf
call
call
sub
call
call
sbb
mov
sub
sub
rorb
ss
aad
cmp
lea
dec
cld
cmc
outsl
mov
rol
xlat
sub
fst
xor
xchg
inc
call
call
call
inc
inc
jno
adc
and
into
dec
addl
add
add
add
shl
jbe
sub
jp
dec
xor
mov
call
test
add
add
dec
sbbl
xchg
pusha
decb
test
xchg
or
mov
pop
add
or
out
les
xchg
std
xor
mov
or
jae
jecxz
fiadds
mov
stos
sub
push
xchg
dec
ds
and
stc
add
mov
pop
int
mov
push
lods
dec
jg
sti
jns
cli
sbb
aad
call
call
call
call
lds
stos
cmp
sbb
cltd
mov
lods
mov
and
enter
pop
jne
adc
cmp
lods
pop
jns
pop
std
push
sbb
mov
jae
adc
ss
mov
shlb
or
leave
aam
rorb
add
add
add
xor
mov
fmuls
test
mov
fidivl
loope
xor
mov
add
jbe
xor
mov
shll
lods
dec
out
and
inc
mov
add
add
add
add
add
add
push
jno
xchg
pop
cli
add
add
add
add
add
decl
inc
jne
stos
mov
int3
cmp
cwtl
push
mov
loopne
xlat
pop
push
lock
pop
imul
daa
lahf
fwait
imul
adc
clc
test
enter
push
bound
cmp
dec
dec
into
in
push
outsl
xlat
xchg
or
add
mov
imul
lahf
and
into
rorl
addr16
mov
pop
xchg
in
mov
mov
inc
add
repnz
int
in
clc
jg
into
lea
mov
push
and
mov
aad
add
add
add
add
pop
mov
ds
xchg
xchg
call
call
fildl
bnd
addl
out
adc
adc
das
xor
out
mov
cmp
das
je
xorl
xor
gs
xor
cmp
mov
add
add
add
clc
dec
ret
add
cmp
in
mov
jmp
push
fcmovnu
cmp
mov
pop
push
call
insb
xor
cmp
push
sub
adc
push
pop
push
lods
call
call
lods
stos
mov
mov
cmp
jg
and
mov
mov
pop
push
addr16
inc
js
push
cmp
iret
pop
jnp
sub
mov
insb
mov
jb
aam
rsm
mov
mov
inc
or
stos
jns
inc
iret
add
add
into
sub
repnz
xor
ret
es
into
rclb
push
cmovl
shlb
cli
stc
dec
div
inc
sbb
jecxz
pusha
mov
add
add
test
jp
push
push
je
rol
mov
jecxz
adc
add
inc
loopne
and
fxch
cmp
adc
cmp
mov
stos
mov
sbb
test
xchg
hlt
push
mov
lcall
icebp
mov
cmpsl
ja
or
movsl
or
add
imul
out
push
sbb
push
dec
inc
jno
push
xchg
inc
lret
pop
out
adc
add
add
out
push
mov
cmpsl
jg
add
imul
pop
sbb
xchg
out
jbe
pop
mov
add
sub
jg
mov
lahf
or
sbb
mov
add
xchg
int
push
add
add
cli
cmp
dec
es
int3
pop
xchg
mov
ja
cmp
jbe
clc
shlb
xor
sub
jge
adcl
pop
cmpb
xchg
addr16
xor
mov
dec
sbb
sub
push
add
aam
pop
or
add
es
ss
test
inc
ljmp
xor
add
test
call
call
call
xchg
pusha
addr16
into
add
bound
or
adc
in
pop
stc
cwtl
das
jno
imulb
jle
fistl
pop
dec
xchg
in
push
pop
inc
ret
mov
mov
out
pop
sahf
mov
add
movsb
inc
dec
leave
adc
add
pop
xchg
dec
or
cmp
mov
mov
pop
gs
lock
mov
dec
mov
sub
es
popa
xor
adc
insb
jnp
test
cmc
pop
jg
gs
mov
sahf
out
mov
mov
sbb
icebp
fs
std
push
inc
fidivl
pop
pop
lods
push
xor
ljmp
dec
test
sub
fstp
int3
imul
cmp
mov
sub
pop
jnp
or
add
pushl
sub
add
sbb
xchg
sbb
add
popf
lahf
jge
jo
enter
add
add
push
sbb
xchg
or
jmp
insb
outsl
pop
dec
push
mov
lds
inc
adc
mov
add
or
fdivs
xor
mov
test
jne
int3
xor
lods
shr
adc
hlt
sbb
out
xor
sbb
aas
ss
mov
enter
call
call
mov
xor
nop
enter
js
inc
ja
xchg
jae
cmpsl
repz
mov
jge
imul
jl
jmp
cltd
js
mov
xchg
pushf
lret
pop
cmp
cmp
scas
jae
dec
jb
xchg
jb
scas
test
aas
insl
scas
and
lret
add
scas
fists
popa
gs
inc
cmp
mov
fdivrl
or
add
add
add
add
push
jp
shl
adc
shlb
pop
lahf
and
ja
jg
push
insl
adc
sub
sbb
pop
adcl
or
inc
cmp
test
out
jg
mov
aam
push
sub
pop
xchg
adcl
lret
popa
or
popf
fs
pop
cmp
sbb
es
icebp
mov
inc
pop
add
bound
jno
mov
fidivrl
mov
mov
adc
jne
cmpsl
rolb
mov
jo
addr16
inc
out
lcall
sti
pushf
dec
jmp
cmp
dec
add
add
xchg
aam
hlt
add
lret
xor
bound
jp
xchg
fnstenv
inc
adc
jmp
dec
push
sbb
incl
call
call
fsubr
enter
mov
add
push
icebp
lock
jmp
stos
adc
das
loop
stc
or
call
call
adc
movsb
mov
orl
cli
push
testb
cmp
movd
js
inc
outsb
inc
fimuls
test
ljmp
gs
jle
jp
imul
add
add
add
add
test
xchg
arpl
mov
cmpsl
inc
or
and
test
inc
test
adc
pop
sub
stos
repnz
popa
pop
xor
sub
nop
jns
loopne
pushw
add
add
add
in
gs
addr16
and
jae
call
or
or
hlt
push
movsb
mov
xchg
xchg
or
stc
mov
and
clc
sub
mov
das
xchg
pop
in
std
flds
jge
mov
jge
adcb
jnp
loop
leave
mov
int
sub
nop
dec
jne
nop
dec
popf
add
add
add
dec
push
add
add
add
insb
fldenv
movsb
jle
inc
jae
add
call
call
lcall
or
xor
punpckhdq
cmp
and
dec
mov
imul
stos
mov
pop
test
push
or
daa
add
in
mov
mov
inc
jae
adc
popf
adc
xor
or
jb
mov
daa
es
cli
mov
es
mov
add
add
add
dec
xchg
add
dec
outsb
lock
outsl
inc
mov
mov
jbe
adcl
in
add
ret
inc
sti
push
xchg
jo
sub
xchg
jns
loopne
xchg
xor
mov
aam
movsb
cmp
call
call
and
sbb
ret
fldt
inc
adc
je
lret
sbb
pop
das
pop
lods
pop
js
sbb
pusha
cmc
jae
mov
lahf
dec
sbb
sub
cmp
mov
lea
popf
loop
pop
sub
rorl
mov
jle
andl
and
mov
cmp
mov
sbb
ss
in
ja
xchg
sarl
mov
jno
cmp
imulb
xchg
fdivl
mov
pop
jmp
xchg
mov
movsl
and
gs
jmp
fisubs
fwait
or
sbbl
mov
mov
ss
dec
lock
dec
mov
push
loope
inc
push
and
push
inc
aas
adc
push
fdivrl
xchg
cltd
out
lock
add
add
add
jae
pop
ret
xchg
mov
mov
add
add
add
add
cvtpi2ps
shrl
pop
pop
movb
add
in
jp
mov
pop
push
sub
adc
imulb
jb
mov
out
jge
jb
jnp
cmp
or
jae
adc
mov
outsl
sbb
fdivl
pop
mov
and
mov
inc
add
add
add
rclb
sti
popf
jae
and
test
imul
stc
add
jmp
lahf
popl
cmpsl
lods
test
and
push
jno
sbb
xor
addr16
sbb
ficoml
fwait
mov
dec
enter
cli
and
xchg
outsb
mov
dec
fimuls
lock
xor
imull
cltd
into
cmpsl
into
lods
cmc
leave
std
mov
aas
xchg
in
fnsave
lods
ret
push
mov
movsl
shlb
movsb
cmp
mov
outsb
nop
inc
dec
cmc
mov
jb
push
mov
js
add
inc
dec
xchg
sub
or
outsb
mov
add
add
add
mov
ljmp
fnstsw
fisubrs
or
cwtl
mov
in
daa
mov
inc
loope
orl
aas
fcmovbe
xor
mov
mov
push
pop
test
std
jle
and
shrb
add
and
cvtps2pd
jo
enter
xor
push
mov
push
add
icebp
pusha
repnz
add
and
or
cmc
mov
add
cmp
les
leave
dec
outsb
sub
das
dec
jl
jo
push
jg
pop
ljmp
mov
test
push
add
test
pop
xchg
pop
xor
je
jge
mov
or
cmp
add
popa
hlt
mov
xchg
inc
aaa
sbb
push
dec
mov
lcall
mov
add
add
sahf
xchg
mov
gs
lret
sti
adc
mov
or
call
call
pop
push
sbb
repz
mul
out
je
push
movsl
cmp
mov
dec
outsb
ljmp
cmp
fbld
inc
outsb
cltd
pop
popa
mov
fisttpl
dec
add
xor
add
nop
int3
mov
add
sarl
imul
pop
inc
arpl
int
into
mov
je
cld
push
out
jne
bound
add
add
add
add
repnz
mov
shrb
dec
xchg
daa
mov
mov
inc
pop
inc
sahf
dec
lock
fwait
sahf
dec
insb
xchg
sbb
out
adc
push
xchg
sarl
or
aas
mov
arpl
mov
pop
enter
popa
xor
pusha
pop
jg
push
flds
add
add
jno
outsl
lock
ret
add
cmp
jb
popf
cmc
stc
pop
daa
les
lock
mov
fisttpl
sub
add
fiadds
add
add
lcall
dec
jae
iret
cmpb
sarb
loope
movsl
dec
sub
mulb
push
daa
xor
mov
adc
lret
sbb
xchg
inc
lods
mov
in
clc
and
mov
xchg
and
adc
push
inc
incl
sarl
cmp
mov
pop
pop
fistpll
cmp
icebp
popa
cmp
add
adc
in
je
lret
xchg
inc
mov
sbb
add
call
jl
xchg
or
add
add
add
add
mov
ja
shrb
rolb
sbb
jmp
inc
sub
lds
or
sbb
call
dec
xor
and
mov
std
adc
dec
and
cwtl
repz
push
jnp
pop
jne
imul
dec
sbb
mov
xchg
mov
inc
adc
sub
add
cmc
repz
sbb
stos
jnp
and
mov
mov
jbe
dec
or
imul
mov
aam
jno
sub
cmp
stos
jns
add
cld
dec
test
fadd
dec
xchg
notl
out
sarl
inc
lea
xchg
cmp
push
mov
xor
sbb
int
mov
std
cmp
sarl
daa
add
mov
sbb
fs
out
add
sub
pop
add
stos
pop
mov
addl
lahf
adc
loope
in
jmp
or
cmp
bound
les
jno
outsl
jb
mov
mov
xor
jo
dec
addl
and
dec
ja
add
add
pop
jle
int3
inc
pop
icebp
or
call
or
mov
jae
cwtl
mov
popa
fsubrs
out
cmp
cmp
dec
pop
mov
adc
loopne
sub
cmpsl
ror
push
pop
dec
stos
lea
pop
fdivrs
add
sbb
add
add
dec
bound
adc
mov
jecxz
add
hlt
dec
fadds
and
and
je
sbb
test
adc
fldl
push
dec
cltd
test
sub
mov
xchg
pop
push
sbb
cmp
in
int3
mov
imul
push
popaw
sti
mov
insb
popa
sbb
mov
imulb
lock
push
jo
jge
pop
or
cmp
lret
adc
jo
sub
insb
lock
cli
insl
shll
add
add
imul
sub
repz
xchg
pop
lea
fst
call
repz
push
in
push
imul
dec
inc
test
cwtl
gs
sub
xor
cmp
lock
cmp
mov
imul
lea
ja
and
sbb
add
add
add
leave
daa
cmp
insb
push
add
test
push
xor
xchg
push
stc
outsb
mov
lock
add
add
add
das
das
jle
xor
sbb
scas
movsb
pop
and
clc
dec
mov
mov
and
jbe
adc
lret
fildl
push
xchg
mov
loopne
jne
int
outsl
xor
push
cmp
xchg
subl
dec
mov
jo
je
push
popf
or
add
add
adc
add
add
pop
add
daa
push
mov
aad
push
mov
xchg
fisubrl
xor
mov
pop
imul
ss
inc
xchg
add
dec
fcmovnu
mov
mov
and
lods
push
push
push
sbb
dec
lret
lods
rcrb
sub
or
dec
pop
out
push
add
xor
sub
sub
call
call
int3
adc
aas
push
and
call
and
popa
sbb
mov
mov
test
orl
or
xor
aas
or
out
leave
loope
bound
pop
pop
mov
js
iret
call
call
call
jge
pop
push
adc
or
icebp
inc
loope
jns
adc
or
push
mov
jmp
mov
loop
push
sub
cmp
add
insl
mov
add
add
cmp
mov
insb
mov
xor
push
jbe
in
test
mov
dec
gs
loop
add
pop
cmp
adc
jo
arpl
push
lods
add
add
add
add
adc
sbb
add
add
add
sbb
lds
mov
adc
je
cmp
add
add
add
add
stos
in
int3
xor
fcmovb
out
popa
cmp
dec
dec
lods
pop
mov
cmp
stos
xor
mov
sub
xor
mov
outsl
fcmovb
fs
add
add
btr
lret
inc
xchg
hlt
pop
or
push
cmpb
fisttpll
pusha
call
call
lods
or
push
adc
cmpsl
xchg
lock
adc
ljmp
test
mov
mov
push
repz
cmovp
jbe
out
cmpsl
mov
fwait
push
xchg
lea
push
dec
lods
or
insb
jns
mov
lret
and
mov
cmpsl
xor
inc
or
xchg
cmc
push
pop
loope
shll
pavgw
mov
repz
out
inc
xchg
aaa
sub
sub
add
add
add
jns
insl
inc
into
movsb
clc
or
test
mov
fldenv
and
jb
xlat
out
push
pusha
add
jbe
adc
imul
cmp
add
js
sti
xor
fisubl
adc
xchg
adc
xor
and
cltd
out
aaa
cltd
fs
imul
ds
pushf
mov
int
notb
push
jle
sbb
gs
xchg
shrl
dec
pusha
lock
add
add
stos
adc
adc
and
mov
inc
pop
shl
call
adc
cs
loop
das
and
out
adc
adc
test
mov
adc
pop
pop
pop
pop
stos
ja
adc
fcmovnu
pop
jae
clc
sub
loopne
fldcw
add
add
add
add
jle
mov
cli
stos
jecxz
pop
rorl
popf
frstor
cmp
sub
mov
int3
pop
mov
fidivl
test
pop
mov
adc
jg
and
xchg
das
push
xchg
popa
gs
dec
ret
pop
in
sti
inc
adc
mov
sarb
add
add
loope
nop
movsl
call
call
call
dec
xor
or
shrl
mov
sbb
es
out
bound
or
adc
pop
dec
fbstp
and
outsl
jo
inc
imul
adc
pop
mov
das
out
daa
jns
je
rcr
xchg
jns
icebp
add
pop
inc
mov
add
out
testb
out
sbb
pop
ja
xchg
cltd
cwtl
cmpsb
push
mov
sub
add
out
jb
pop
pop
xor
cmp
inc
fcom
jge
adc
insb
jns
rclb
and
or
mov
mov
outsl
ja
mov
cmp
and
add
pop
addr16
sbb
sahf
jp
dec
cltd
xchg
add
mov
xor
ljmp
sti
sbb
imul
pop
and
jmp
scas
and
add
add
sbb
xor
stos
mov
ljmp
mov
pop
call
add
into
dec
out
xor
push
and
sub
push
xor
js
inc
ss
lcall
xor
and
push
es
cmp
sbbl
sub
sbb
lods
mov
scas
push
push
mov
sub
or
jb
call
call
in
sahf
rorl
out
sub
inc
cmc
dec
cmp
scas
fdivrs
mov
ljmp
jg
insl
std
push
and
lret
std
xchg
fadds
jecxz
sbb
call
call
call
mov
jecxz
movsl
cld
inc
imul
je
and
pop
sarb
stos
xlat
fstpl
imul
add
add
add
gs
lret
push
push
push
lds
ss
ljmp
push
xor
rolb
and
popf
std
or
cmp
cmp
repz
inc
repnz
call
call
call
test
lahf
add
add
mov
popf
aaa
and
cltd
incb
sbb
sahf
pop
pop
xor
daa
add
add
mov
and
jo
fwait
into
daa
xor
pop
add
add
popf
mov
movl
out
rorb
xchg
and
arpl
fdivrs
adc
inc
sbb
fisubl
lret
xor
lcall
lcall
lahf
mov
mov
dec
jns
dec
mov
and
add
scas
xor
mov
test
js
sti
sti
cmp
test
mov
icebp
out
leave
add
daa
filds
imul
xchg
mov
add
mov
scas
push
push
xorl
cmpsl
xchg
hlt
mov
mov
push
cltd
xchg
mov
insb
and
shrb
pop
sub
call
call
jne
lods
jne
cld
and
jae
jb
pushf
inc
inc
shrb
mov
xor
add
add
jg
test
imul
add
add
add
add
call
push
jecxz
pop
mov
movsl
js
or
dec
mov
ret
les
sub
inc
pop
add
fucom
or
arpl
sbb
add
in
adc
mov
sub
sarl
mov
mov
mov
pop
xor
add
pop
cmpb
pop
outsb
jnp
in
pop
fmul
cmp
nop
fimuls
mov
sahf
mov
sbb
sub
out
pop
dec
push
pop
pop
pop
sahf
pop
stc
out
pop
imul
add
push
out
add
add
popf
pusha
sub
inc
jnp
push
stc
dec
jbe
in
mov
inc
inc
mov
scas
cltd
or
push
mov
clc
mov
daa
ret
repz
dec
icebp
dec
adc
mov
cmc
and
cmp
es
cmp
add
add
add
test
nop
in
dec
sub
inc
mov
dec
ret
movsb
div
mov
sbb
pop
xor
sbb
mov
adc
test
sahf
bound
inc
test
add
dec
mov
push
cmp
mov
jno
and
ja
lds
jne
jmp
add
mov
mov
bound
jecxz
pop
in
cmp
adc
xor
adc
call
call
call
mov
cmp
movsb
das
or
test
add
pop
imulb
test
mov
stc
xchg
jne
xchg
je
pusha
sbb
push
jge
sub
iret
xacquire
inc
xchg
inc
mov
push
pop
aam
outsl
lods
adc
mov
pop
cmp
add
add
add
add
or
cmpsl
out
or
inc
sub
pop
popa
aam
test
rcrb
outsb
inc
pop
xor
inc
jns
test
push
pushf
xchg
enter
and
or
push
mov
jnp
subl
lcall
add
inc
imull
sbb
and
js
push
aas
call
call
call
imul
xor
add
sub
cli
mov
das
adc
pop
lods
pop
insl
sub
ret
inc
in
inc
fimull
hlt
enter
sub
add
add
add
sbb
sbb
and
jp
dec
cs
mov
sbb
cmp
test
icebp
push
clc
into
rorl
inc
cmpsl
xchg
adc
adc
lret
mov
sti
mov
pop
sub
or
pop
dec
pop
js
add
add
add
add
lods
pushf
pop
adc
lods
aas
push
lret
sub
jecxz
sub
push
jno
sub
movb
pop
sub
add
and
call
call
call
push
sbb
lock
test
and
in
andl
push
push
or
call
call
adc
push
mov
int3
pop
sbb
imul
add
ret
cmp
insb
mov
inc
sub
mov
lds
aam
push
int3
and
inc
xchg
outsl
aaa
dec
loop
sbb
inc
mov
xchg
or
sbb
jle
imul
sub
jl
or
js
stc
aam
out
cwtl
jo
aaa
in
dec
push
jl
cld
pop
int3
or
jge
xchg
pop
outsl
and
push
push
insl
rorb
dec
js
xchg
fimull
aad
test
pop
gs
add
dec
mov
cmp
loope
fidivs
andb
pop
sub
add
add
add
xchg
xchg
sarb
ja
or
sti
cmpl
jne
mov
add
sub
cltd
mov
jno
mov
aad
pop
pop
loope
and
aad
or
lret
sub
dec
andb
and
lds
mov
in
fldt
sub
xlat
cli
adc
cwtl
stos
sbb
sbb
xchg
add
in
push
inc
xchg
lret
lock
cmp
fucomi
fcompl
xchg
bound
popf
xchg
nop
rcl
movsl
push
add
add
add
add
ss
lea
dec
xchg
jge
popf
adc
ficomps
das
pushf
mov
icebp
pop
pop
arpl
in
xchg
ror
sbb
fcompl
sbb
xchg
pop
outsb
adc
loope
test
and
jle
mov
and
outsb
mov
lea
es
stos
xlat
arpl
jbe
fcmovnbe
test
insl
and
mov
nop
mov
jmp
pop
clc
out
cltd
loope
sbb
or
roll
add
test
inc
and
fsubl
sbb
mov
cld
lods
sti
in
scas
out
add
pop
dec
cwtl
jo
gs
stos
cmp
js
xor
xchg
sub
xlat
test
add
or
sbb
sub
mov
or
add
add
add
sub
pop
fisubs
out
out
jmp
leave
gs
sub
cmp
or
xchg
jge
scas
lods
aad
or
cmp
in
add
add
add
repnz
and
sbb
mov
jo
mov
das
leave
pop
rorb
aaa
push
push
imul
add
push
lea
jae
xchg
ss
xchg
xchg
push
mov
fldcw
or
inc
xchg
push
inc
aad
add
jge
xor
jmp
adc
clc
dec
add
add
add
add
dec
sbb
clc
push
cmc
xchg
push
cs
adc
inc
pop
sub
js
rcrb
sti
mov
es
and
push
sbb
call
call
jbe
out
repnz
inc
pop
pop
repnz
movb
add
add
add
inc
or
orl
mov
add
add
inc
out
insl
icebp
scas
out
loope
lods
in
mov
stos
movsl
sbb
jge
mov
scas
popf
cs
mov
add
add
bound
aad
pop
popf
aas
ja
adc
sub
xlat
faddl
test
js
movsl
out
pop
orb
pushf
outsl
sub
add
scas
lock
gs
aad
es
cmp
ja
or
shrl
add
notl
stc
cmp
or
cmp
clc
xchg
mov
cmp
jb
inc
ficoml
xchg
xchg
jle
xor
dec
insb
enter
call
enter
cltd
pop
and
je
stos
lcall
gs
dec
inc
movsb
adc
call
call
call
sbb
stos
in
add
icebp
enter
xor
xchg
adc
fwait
dec
aam
cmp
dec
xor
fstps
mov
shll
sti
pushf
push
fldenv
shlb
add
add
add
rolb
stc
mov
ret
add
fwait
push
and
cwtl
das
sub
jnp
repz
or
jg
or
cwtl
pop
pop
addb
add
add
jge
int
cmpsl
push
cltd
mov
testl
imul
gs
pop
jmp
addr16
add
cwtl
test
push
ficoms
jge
pop
inc
dec
lahf
sbb
test
aam
lods
dec
cmp
pop
in
aas
inc
jb
leave
in
adcb
push
andl
aam
shl
lods
imul
xchg
shrb
cli
sahf
shrb
arpl
test
sbb
add
sub
mov
jne
sarb
xchg
dec
icebp
push
push
js
pop
add
js
test
nop
fstl
add
add
sub
push
sub
sub
decb
jl
daa
jnp
imul
idivb
std
sarl
sbb
rcr
pushf
sbb
or
cmp
rolb
cmp
push
enter
adc
lods
push
and
enter
call
call
mov
lods
jo
mov
fildl
add
pop
push
mov
pop
pop
pushf
cltd
ljmp
rcrl
lcall
sub
dec
int
xor
inc
shrb
insl
or
nop
or
inc
sub
add
fsubrs
push
xchg
stos
fucomip
jne
cmp
push
dec
fistl
mov
in
pop
addb
cmp
mov
add
add
dec
lock
sub
push
sub
std
out
data16
adc
aaa
icebp
pop
jae
in
mov
mov
push
les
and
mov
imul
in
push
test
pop
rolb
sbb
pusha
xchg
mov
xchg
arpl
aam
pop
enter
sti
dec
push
push
xlat
cwtl
arpl
insb
xchg
cmpsb
push
inc
std
mov
sbb
mov
add
xchg
test
add
mov
jbe
mov
mov
cmp
dec
arpl
push
adc
add
add
add
add
hlt
add
call
call
in
dec
aad
js
add
in
push
into
xor
push
lds
out
lcall
push
push
add
add
add
add
pop
and
scas
adcl
adcl
sbb
sbbb
xor
fsubr
hlt
pop
fwait
xor
shlb
inc
inc
jae
icebp
cmpb
jmp
mov
ficomps
sarb
lea
dec
loopne
push
and
mov
sbbl
add
add
sub
outsb
inc
push
test
mov
xchg
sbb
in
pusha
outsb
lods
sti
and
dec
outsl
int3
repz
fisubl
push
js
popa
fidivl
sbb
das
cmp
adc
inc
dec
sub
sbb
outsl
and
add
add
inc
jnp
lret
sub
jno
add
outsl
pop
repz
add
shlb
out
subl
jecxz
test
and
movsb
xchg
insb
jle
dec
dec
pop
sub
jge
cmp
jmp
mov
call
call
arpl
add
add
test
enter
xor
and
call
call
call
ss
gs
jp
lods
das
out
mov
or
or
rcrl
mov
fildll
in
jb
repz
cs
mov
add
add
add
fnstenv
test
cmp
fstl
xchg
call
loope
pop
lcall
add
stos
dec
xor
fiadds
add
xlat
out
sub
pushl
je
lods
adc
sub
add
mov
jae
sbb
je
lcall
dec
xchg
sbb
test
push
inc
js
sbb
enter
and
out
lcall
mov
popf
cs
les
mov
scas
pop
push
dec
pop
xchg
cmp
test
adcl
add
add
add
add
call
call
int
mov
ja
call
call
call
popf
dec
xchg
add
mul
push
push
pop
jno
popa
mov
daa
mov
cwtl
pop
mov
jp
cld
push
push
test
push
pop
and
and
lds
icebp
in
in
xchg
in
divl
or
sahf
mov
mov
pop
inc
stc
push
mov
inc
insl
push
add
add
test
call
call
call
add
jmp
in
jns
inc
jne
pusha
scas
andl
loop
dec
imul
adcl
into
xchg
add
shll
aaa
or
popa
mov
int3
push
test
insb
add
test
or
jmp
das
mov
add
add
add
add
mov
pop
mov
sbb
lret
sub
mov
daa
pop
pushf
pop
push
test
mov
xchg
and
inc
mov
add
or
adc
add
xchg
cld
or
fistps
cmp
in
pop
rorl
lods
add
cltd
inc
mov
ljmp
add
add
add
push
in
cmp
and
shl
sub
gs
outsb
inc
enter
test
js
sub
sub
pop
sbb
into
int3
in
add
xor
stc
inc
iret
popf
call
call
jns
cmpsl
call
push
jnp
mov
or
and
lods
mov
add
call
call
call
pop
addl
or
sbb
aas
add
sbb
popf
push
dec
clc
in
add
add
outsl
pop
jb
dec
sbb
sbb
add
cmp
xchg
insb
push
jnp
sbb
push
repnz
fidivrs
jge
mov
add
add
add
mov
push
sbb
add
add
cli
dec
pop
inc
movlps
xchg
cmp
cli
iret
jns
insb
lock
jnp
pop
sub
jo
pop
mov
mov
push
int3
pop
in
flds
and
rolb
add
add
add
add
popf
jge
arpl
cmpsl
pop
testl
hlt
and
aaa
inc
sbbl
in
xor
mov
aas
arpl
aaa
vandnpd
stos
inc
aas
push
cmc
mov
add
add
xchg
add
add
add
add
cmpsb
pushf
repnz
add
sub
adcl
inc
mov
or
xor
xchg
or
nop
pop
xor
rolb
mov
cltd
jge
inc
nop
xor
ret
jne
mov
call
dec
adc
push
test
add
add
add
add
xchg
fidivrs
pop
mov
icebp
aas
pop
das
sahf
add
or
outsb
popf
je
in
push
nop
lcall
call
call
bound
je
js
xchg
sbb
rol
bound
das
push
xchg
dec
leave
out
leave
sub
test
push
push
sbb
push
jns
sahf
jne
push
lret
lock
cmp
mov
bound
imul
add
add
add
mov
add
sbb
and
pop
mov
jle
pop
imul
sbb
add
inc
pop
std
call
call
call
das
and
mov
movsb
dec
add
mov
stc
inc
loope
add
mov
jo
jl
sahf
or
lods
pop
and
outsb
imul
dec
push
xchg
cmp
sub
add
add
dec
or
jge
inc
add
shl
push
push
mov
sbb
enter
push
add
sub
push
ds
sub
xor
jne
mov
dec
fwait
xchg
enter
add
cwtl
add
add
push
ljmp
or
aas
sahf
cmp
lret
push
rcrl
bnd
inc
cmp
xchg
cmp
lahf
dec
adc
sbb
jne
xchg
push
aas
in
and
cmpsl
inc
cmp
out
iret
mov
sub
popa
sbb
add
ret
sarl
shrb
iret
roll
mov
add
xchg
jnp
adc
push
xchg
jp
dec
call
out
mov
jge
jns
pop
mov
add
add
popa
add
add
xchg
inc
imul
or
mov
add
or
pop
adc
enter
call
call
outsb
xor
inc
mov
cmp
xchg
pop
orb
outsb
mov
push
insb
or
rcll
xchg
dec
int3
sub
dec
test
ljmp
dec
shr
sbb
cmp
scas
and
sub
js
popf
and
sti
or
cld
push
jae
adc
cld
or
in
add
add
roll
xchg
ret
sub
jno
push
sbb
enter
jp
idivl
push
daa
inc
ja
xchg
ja
pushf
gs
and
lds
ret
out
xor
inc
add
sbb
add
bound
add
dec
or
push
popa
sarb
test
push
ret
add
dec
cld
enter
mov
mov
add
add
add
stos
jnp
shr
call
call
rcrb
jb
add
and
mov
es
xor
dec
push
jecxz
ret
idivb
or
sarb
mov
into
cmpsl
std
lret
aas
aaa
and
mov
adc
movb
cmp
and
and
inc
push
lahf
insl
jge
cmp
rcr
test
mov
hlt
sbb
or
xchg
mov
xchg
leave
pop
pop
pop
test
jecxz
movsb
repz
test
adc
mov
or
mov
andl
call
call
loop
add
inc
in
imul
cltd
ss
mov
or
jnp
loopne
fildl
imul
pop
mov
movsb
jmp
push
orl
and
idivb
push
out
call
call
pop
xchg
cld
in
popf
and
push
inc
out
and
lret
mov
icebp
push
stc
pop
loope
pop
inc
into
lds
cwtl
jns
sub
imul
jne
pop
mov
xchg
push
jno
imul
add
cmc
pop
mov
xchg
ret
aad
pushf
sbb
rcr
pop
rclb
lret
add
adc
sarl
cmp
pop
push
add
mov
loop
in
mov
scas
mov
call
call
xchg
mov
mov
test
push
stos
sbb
leave
xorl
mov
jg
pusha
adc
dec
shlb
mov
mov
xchg
mov
fildl
inc
shll
or
fimull
inc
xchg
sarb
mov
fdivrs
in
push
adc
call
call
pop
fldl
mov
push
les
push
or
popa
push
fcomi
jg
nop
jae
mov
cmp
testl
push
cmp
fucomp
mov
insb
es
lea
adc
jns
sub
mov
push
addr16
repnz
out
nop
fs
mov
repz
or
push
outsl
cmp
pop
push
jge
cmpsl
mov
dec
add
mov
inc
cltd
xchg
and
ret
xor
es
imul
push
aaa
outsl
and
inc
icebp
push
inc
fdivs
cltd
lahf
ss
ds
adc
subb
cmp
inc
push
inc
mov
or
sbb
and
dec
loope
adc
adc
arpl
es
add
lds
and
dec
mov
loope
cmp
xor
cld
pop
jle
shlb
jbe
in
jns
adc
sbb
scas
or
add
inc
push
loope
dec
mov
clc
cmp
mov
push
bound
sahf
stos
dec
ss
pop
mov
insl
in
test
test
call
push
or
inc
ja
ficoml
incb
add
adc
add
inc
jno
loopne
orl
ljmp
jg
pop
add
addl
ret
popf
push
dec
repz
popf
sahf
pop
add
and
sub
inc
add
dec
push
dec
xor
push
xchg
adc
add
add
add
jecxz
js
mov
add
fwait
pop
into
jmp
arpl
and
ret
mov
mov
pop
xor
jne
cmp
loop
xor
test
mov
ret
es
leave
insl
inc
pop
fmull
inc
xchg
movb
popa
das
add
call
call
call
jmp
and
cmp
xor
add
mov
add
add
add
pop
aas
sbb
push
gs
pushf
imul
call
call
insl
enter
aam
std
jg
imul
cmp
push
dec
and
ja
mov
xchg
repz
in
in
push
stos
repz
push
adc
adc
or
movsb
icebp
nop
ja
popa
lds
inc
adc
add
adc
pushf
add
xchg
nop
cld
pop
push
mov
xchg
jb
sti
mov
and
call
call
call
lret
jle
xor
and
push
jmp
xor
inc
dec
jb
cmp
idivl
and
lcall
mov
sbb
mov
test
mov
js
inc
push
inc
xchg
xor
add
jb
add
sbb
call
sti
xchg
sarl
pop
or
xor
sub
fsts
notl
xor
clc
push
mov
les
add
add
in
fstp
jle
adc
mov
test
int
cmpsb
sbb
shr
inc
push
mov
fildll
xchg
faddl
adc
jl
or
sbbb
rol
sub
lcall
add
add
add
add
pushl
mov
fidivrl
jne
sub
jg
addr16
push
xchg
aaa
outsb
fcmovnb
inc
ss
pop
pop
adc
mov
jge
fs
ret
jg
pusha
sub
mov
sar
push
jp
cmp
dec
jae
push
sti
cs
ja
jecxz
and
frstor
dec
dec
mov
loop
add
add
add
xor
or
lock
mov
and
mov
out
loop
add
add
add
xchg
push
and
dec
dec
mov
inc
adc
mov
or
xor
or
cmpsl
insl
fstp
int3
mov
call
call
xchg
movsl
leave
mov
inc
in
pushl
dec
rcrl
add
add
add
sbb
mov
outsb
and
pop
sarb
ja
cld
and
sub
xchg
push
stos
inc
mov
in
lcall
fnstsw
mov
mov
jbe
aas
jmp
sbb
jl
add
fdivrl
pop
insl
cmc
daa
jo
or
imul
mov
push
jmp
lock
pop
imul
xchg
cmp
cmp
mov
pop
loop
inc
xchg
xchg
sub
in
pop
mov
push
inc
ss
lock
mov
push
xorl
repz
push
inc
xor
mov
xchg
adc
mov
push
add
add
les
xchg
push
addb
cmp
mov
aad
mov
jg
andl
inc
xchg
and
loope
insl
movb
stc
or
cld
push
sbb
or
testl
xor
mov
outsb
adc
cltd
sahf
jg
xor
xor
push
mov
call
aam
aaa
cmp
add
push
out
inc
das
mov
jae
aas
mov
call
call
out
push
mov
push
push
lret
outsb
subb
pop
lock
ja
aas
xchg
pop
mov
loopne
aam
out
cmp
addb
mov
sub
or
mov
faddl
imul
xchg
js
mov
int3
push
sbb
outsl
lods
cmp
int
cmp
sbb
dec
fldln2
ja
push
fs
jle
mov
sub
xor
pop
cmovbe
adc
sbb
mov
adc
addr16
lods
add
repz
cmp
sub
adc
addl
add
add
dec
loop
adc
ljmp
lock
mov
ror
jne
jns
std
popf
int
xchg
push
das
fcmovnb
jp
sbb
jno
or
loope
mov
add
icebp
lods
sbb
aad
call
call
call
jne
add
pop
jnp
outsl
add
mov
inc
cld
mov
rclb
push
daa
push
sbb
add
test
jle
rorb
jl
lock
pop
cmpl
mov
adc
cmp
mov
cmp
jge
adc
mov
add
and
daa
mov
insb
fs
test
les
call
call
iret
xchg
outsl
inc
cltd
movsl
xchg
add
lret
push
sub
les
iret
mov
adc
mov
inc
rcrl
cwtl
je
mov
jg
xlat
stos
lds
loop
mov
in
shlb
cld
fcomip
sub
negb
in
push
pushf
and
ret
in
jo
mov
addl
js
jp
sarb
add
add
add
push
lret
mov
sub
mov
xchg
imul
add
add
add
add
push
stos
call
sub
adc
call
call
bound
cmp
nop
push
test
call
call
cwtl
ret
rcrl
stc
xor
add
add
add
add
rolb
fs
out
arpl
cmp
loopne
inc
loope
cld
jb
xlat
dec
jle
dec
xor
and
push
add
jl
stc
jbe
mov
inc
lods
mov
mov
dec
dec
ss
leave
sti
dec
jge
shrl
sbb
out
mov
push
cmc
sbbb
add
jae
fs
or
push
imull
sub
call
call
and
xchg
or
and
aad
push
testl
add
add
cmpsl
rcrb
push
inc
scas
xor
jno
movsl
pop
lret
je
divb
mov
add
nop
adc
pop
sbb
mov
jnp
mov
inc
and
xchg
in
adc
dec
add
add
ss
stos
jg
push
pop
sub
push
xchg
xchg
in
xchg
and
cmp
adc
jo
mov
sbb
jnp
in
stos
or
and
bound
add
add
and
or
lock
lock
xor
sahf
cmpsb
xchg
testb
nop
adc
ljmp
pop
and
pushf
dec
dec
movsl
js
cmp
inc
stos
or
mov
je
pop
cmpsb
lea
imul
xor
xor
or
daa
popf
adc
out
shll
or
mov
mov
sbb
cmpsb
out
mov
adc
pusha
add
add
add
fcmovnbe
pop
int3
scas
adc
iret
aaa
icebp
sbb
pop
jecxz
aaa
insl
into
push
xchg
jg
test
mov
sbb
lcall
mov
sbb
pusha
cs
aad
dec
int3
repz
js
cmp
xchg
sbb
mov
div
push
insl
lahf
inc
icebp
out
push
nop
jnp
int
repnz
and
or
sub
xor
fs
lock
lret
daa
lret
je
call
call
call
add
call
dec
repz
push
and
sub
and
out
push
add
nop
cmpsb
or
cmp
and
push
jl
jo
push
lea
aas
popa
cmp
cmpsb
mov
cmpsl
aam
add
add
add
add
idivb
scas
xchg
jge
adc
lahf
scas
out
push
imul
jne
add
add
mov
cmp
mov
std
jnp
sbb
inc
push
adc
repz
sbb
loope
dec
outsb
fiaddl
lcall
call
gs
xor
sbb
je
div
pusha
jg
xchg
scas
add
add
mov
push
mov
cs
imul
add
add
out
mov
lahf
repz
mov
pop
mov
push
js
cmp
push
add
add
add
jg
ss
addb
lods
push
pop
fsubr
lock
mov
and
add
in
pop
ja
lea
repz
cmpsl
sbb
shr
ds
or
pushf
inc
lret
xchg
sbbb
xchg
ja
icebp
pop
aad
mov
mov
mov
lock
xor
sbb
mov
insb
or
push
stos
loope
push
push
sub
add
add
cmp
mov
ret
inc
fs
adc
add
pop
xchg
insl
and
xchg
call
call
cmp
xor
decl
sbb
call
call
cmp
or
pop
in
sarl
pop
mov
adcl
roll
or
add
lods
rolb
dec
not
je
addr16
lods
and
add
pop
pusha
jne
shll
ret
aad
mov
jne
aaa
dec
cmp
imull
mov
mov
pop
and
xchg
add
cltd
std
mov
in
mov
add
add
add
add
enter
pop
pusha
xchg
js
xor
add
jns
add
mov
add
sub
mov
or
push
inc
minps
push
pop
and
lods
repz
sub
test
je
push
sbb
push
cmp
scas
int3
aad
jmp
pop
ret
sahf
xor
pop
faddl
add
cli
shll
mov
xchg
adc
dec
or
add
adc
les
mov
int3
xchg
jg
push
cltd
rclb
cli
int3
dec
stc
mov
dec
loop
and
and
iret
adc
outsl
add
add
aas
cltd
call
dec
gs
jle
ficompl
pop
xor
pop
stc
adc
aaa
xchg
jle
mov
mov
mov
in
std
cmp
leave
and
add
call
call
mov
mov
iret
push
push
jns
xorl
fiadds
in
loop
inc
ret
mov
test
cltd
and
and
mov
jmp
mov
in
mov
stos
add
mov
xchg
cmp
add
inc
add
push
pop
ret
add
add
add
rcr
push
stc
dec
lcall
inc
sub
inc
dec
jnp
lds
add
dec
inc
pop
loop
xchg
popf
rcrb
int
adc
push
popa
push
mulb
jae
jne
aas
stos
ja
ja
ret
icebp
mov
repnz
das
push
popf
es
add
add
add
push
lret
mov
jb,pt
ss
lock
xchg
leave
adc
mov
roll
dec
addl
add
add
xchg
add
int3
scas
and
pusha
dec
out
loope
mov
pop
stos
or
xchg
or
repnz
cmp
xchg
and
adc
mov
jg
repz
dec
add
ja
int
mov
ret
jle
in
fisubrs
push
adc
mov
aaa
das
shlb
xor
pop
fs
add
call
ret
xchg
sbb
icebp
lret
adc
or
xchg
pop
rorl
push
and
clc
mov
lret
adc
das
rcrb
mov
xchg
testl
pop
movl
stos
push
sub
call
mov
mov
pop
out
call
call
mov
xor
cli
mov
inc
mov
arpl
or
lea
addl
adc
pop
jl
aad
jmp
add
xchg
bound
mov
add
mov
xchg
push
jl
jle
rcl
sbb
out
adc
xor
mov
adc
cmp
lock
cmc
jmp
std
in
and
mov
push
mov
test
add
add
add
add
adc
call
testl
jl
or
add
xchg
add
dec
xchg
lea
and
add
add
add
add
ds
push
add
add
add
add
add
add
push
fistpl
or
jb
out
push
mov
jo
je
dec
lret
pop
cmpsb
sub
jb
lds
fnstsw
or
out
sub
inc
popa
mov
or
xor
jmp
nop
jno
je
mov
bts
sahf
mov
je
or
arpl
jmp
dec
fisubrs
xor
fidivrs
cmc
inc
fs
ret
add
std
sti
cmpsl
push
jne
repz
loope
sub
nop
nop
in
leave
fcmovnu
mov
add
add
add
add
lods
aam
jb
stos
pop
js
jmp
pop
test
adc
test
mov
insb
test
in
pop
sbb
dec
jne
clc
pop
add
add
int3
pop
adcb
test
iret
push
call
sbb
pop
push
loop
dec
pop
and
push
inc
adc
imull
test
jle
cmp
cli
fdivrl
scas
out
pop
jecxz
cmpsl
je
cmc
adc
mov
out
dec
shll
stos
cltd
imul
add
jmp
or
push
icebp
dec
pushf
mov
add
add
add
add
xor
and
nopl
scas
aas
mov
xor
subl
or
and
pop
js
pop
out
adc
add
mov
pop
ljmp
loope
xlat
rcr
mov
fcoms
add
add
add
xor
aam
lea
jo
nop
adc
pushf
std
dec
rep
xor
xchg
mov
sti
loope
shlb
and
mov
xor
int3
call
call
call
dec
mov
or
push
xchg
cmp
aas
movsl
imul
add
shrl
imul
negb
add
lret
cmc
test
mov
lret
imul
jne
dec
lds
add
add
add
jnp
sbb
out
sahf
bound
xor
fs
push
xchg
mov
sbb
into
repnz
jbe
cmpsb
xorb
loop,pt
pop
cmc
inc
xor
aas
out
and
push
lods
mov
mov
mov
add
inc
jge
fdivrl
jb
mov
jnp
adc
inc
lds
mov
cmp
pop
jg
sbb
mov
dec
shll
xchg
mov
sbb
push
in
subb
xlat
push
push
xchg
inc
rclb
mov
andb
add
testb
add
add
pop
push
pop
cmp
cmp
in
mov
add
mov
mov
xchg
add
loop
xor
push
sbb
das
push
mov
outsl
or
in
ja
sahf
pop
movl
repz
int
in
mov
leave
in
testl
mov
and
dec
push
lcall
jno
in
add
imul
in
lcall
imul
out
mov
pop
push
inc
xor
mov
sub
add
add
add
xor
sbbl
dec
cltd
pop
jp
add
mov
cmp
scas
push
mul
dec
sbb
lods
jmp
add
add
add
add
mov
push
jbe
test
add
add
xchg
es
sbb
rorb
loope
pop
iret
lock
stos
out
push
xchg
jle
repz
xchg
pop
inc
jle
or
mov
cmp
aas
sbb
test
insb
cmpsl
orl
movb
fmulp
mov
imul
xchg
les
dec
xchg
rolb
testb
sbb
add
add
mov
out
out
clc
inc
xchg
shr
in
out
cmp
push
push
dec
lret
mov
mov
movsb
cltd
cli
mov
bound
sub
lret
cs
rorb
jne
ficompl
and
ss
inc
adc
sub
jl
ja
mov
pop
mov
mov
and
xorb
add
add
arpl
loopne
fs
add
xor
add
movsl
and
cmp
loopne
mov
rorb
pop
and
rolb
add
adc
add
add
add
jge
inc
dec
sub
add
push
imul
imulb
add
loope
adc
andl
ret
hlt
mov
xchg
xor
cmp
mov
cltd
sbb
xchg
inc
mov
xchg
add
add
xor
mov
aaa
dec
adc
orl
imul
mov
add
add
add
lods
call
call
scas
mov
dec
jno
push
sub
sub
dec
xchg
cs
in
add
mov
stos
jmp
clc
xchg
mov
and
cmpsb
ret
rcrl
or
imul
gs
xor
sub
cmp
xor
fldl
add
add
add
ret
push
mov
xor
xchg
dec
imul
fldcw
cmpsb
xor
mov
mov
sub
mov
jecxz
dec
push
xor
in
push
loop
int
add
pop
movb
add
add
add
pop
std
add
loope
out
push
or
jmp
repnz
jo
or
dec
pop
jmp
inc
push
addl
aaa
mov
fnstenv
sub
mov
scas
and
bound
jmp
dec
xchg
and
rcll
outsl
sbb
mov
dec
clc
inc
lahf
in
fsubs
pushf
push
jge
xor
xor
xorb
pusha
sbb
and
xchg
rolb
call
call
add
sub
gs
lock
popf
aas
xor
pop
das
into
xchg
push
jp
or
jne
lcall
das
and
aad
test
pop
js
and
adc
fsubs
stos
mov
sub
add
add
add
add
pop
inc
mov
and
mov
cs
outsb
das
js
adc
pop
dec
call
call
call
in
push
in
or
sub
mov
or
push
shll
xchg
mov
test
loopne
test
out
and
insb
shrl
repnz
sub
dec
mov
into
adc
rclb
and
or
add
icebp
push
mov
pop
sub
pop
aas
adcb
add
add
add
rcrl
mov
add
and
mov
loope
shrb
clc
pop
mov
mov
lret
ficomps
test
nopl
pop
fdiv
and
int3
push
add
out
shll
add
fdivr
cmp
sub
shl
leave
mov
mov
and
ret
fisubrs
dec
adc
dec
je
mov
mov
push
mov
xchg
push
pop
inc
outsl
and
cmp
outsl
xchg
sbb
xor
sbb
push
cmc
cmc
ss
dec
cmp
sbb
lds
mov
add
scas
clc
cmp
xchg
adc
cmp
add
push
ss
sti
test
push
dec
pusha
mov
sahf
cmp
and
daa
push
add
notl
int
xchg
dec
add
mov
mov
mov
je
mov
add
aas
dec
mov
int3
out
test
sbb
mov
loope
ficoms
cs
std
push
ficompl
and
jne
jge
lret
pop
mov
push
or
xchg
jge
or
pop
rep
or
test
and
add
add
add
add
stc
and
or
cmp
and
jns
pop
xchg
add
mov
add
sbb
js
mov
arpl
dec
loop
sarb
lods
cmp
sub
add
add
imull
in
xchg
popf
loope
xor
jnp
sarl
into
pusha
cmp
aad
fdiv
into
mov
cli
push
lock
hlt
test
mov
xor
gs
scas
mov
outsb
fidivrl
dec
popa
test
rcll
dec
xor
cmp
incb
add
add
add
cwtl
xor
add
sti
iret
std
test
aas
imul
adc
iret
mov
pop
subb
int
or
mov
push
adc
lods
rcll
jbe
jno
xorl
imul
jno
inc
cmp
dec
cmp
movsl
add
push
fistpl
das
xor
in
popf
dec
lea
push
add
add
orb
call
call
call
cmpsb
add
arpl
dec
pop
pop
adc
les
and
insl
lock
sub
cmp
inc
gs
arpl
and
xchg
add
aaa
int
inc
xchg
add
rol
add
fwait
jmp
xor
aaa
rorl
lcall
je
rcrb
push
leave
jb
in
bound
push
jns
arpl
ss
pop
mov
out
test
in
cmpsl
test
add
test
add
push
lret
insb
aaa
ss
fs
mov
mov
movsl
sub
pop
jns
jae
add
int
push
add
lahf
xchg
jb
test
mov
lcall
movb
jno
lea
out
or
jl
add
add
add
add
push
loopne
stc
out
stc
iret
push
push
sbb
jnp
mov
sub
ds
push
dec
xchg
and
sbb
lods
add
mov
shl
subl
jnp
scas
mov
xlat
mov
xchg
add
push
out
daa
xchg
mov
repnz
add
stos
mov
push
call
call
and
and
movsl
das
inc
xor
inc
xor
sbb
xchg
mov
jbe
add
add
add
mov
rorl
jne
imul
call
call
call
mov
dec
cmp
pop
bound
mov
fldl
jb
push
popf
mov
jmp
push
sbb
dec
xchg
les
mov
add
add
add
add
outsb
das
dec
xorb
pop
fnstcw
mov
fstp
pop
mov
sub
jae
cmp
and
icebp
pop
xchg
fcompl
fs
xchg
ds
cmc
ds
ret
cwtd
cmc
lahf
add
add
add
add
add
pop
or
mov
sub
into
iret
dec
add
xchg
jo
push
pop
data16
xchg
loopne
inc
lret
movsl
jb
jnp
mov
shrl
cld
jp
add
call
call
call
dec
in
ljmp
cmp
dec
mov
cmp
pop
adc
xchg
stos
add
fwait
ss
je
pop
jge
movsb
inc
add
jae
push
lock
inc
push
mov
or
call
call
andb
push
inc
out
jns
mov
adc
jne
xor
xchg
loopne
add
enter
call
push
ret
lods
repnz
sbb
out
mov
adc
bswap
movsb
dec
neg
dec
jecxz
jb
out
sub
sbb
movsl
sti
jmp
je
push
and
cwtl
and
add
add
xchg
adc
fcmovb
call
mov
aam
imul
xchg
pushf
add
and
rorl
cmpsb
pop
data16
or
icebp
mov
ja
jnp
jne
fnstenv
out
sbb
bound
repnz
sti
sbb
hlt
push
jecxz
and
xchg
mov
jmp
in
dec
test
lret
ja
lret
fadds
xchg
and
mov
jg
adc
mov
push
add
add
add
add
adc
sbbb
fidivrs
jl
push
jmp
mov
pop
add
push
sub
scas
lcall
mov
xchg
inc
imul
jle,pn
pop
pushf
add
and
add
add
add
mov
jnp
loopne
mov
bound
cmp
shrl
pop
pop
jae
outsb
fldcw
xchg
mov
mov
adc
insl
add
push
xchg
add
push
inc
int
push
outsl
cwtl
sub
outsl
je
iret
sub
xor
push
stos
jg
and
add
add
add
add
jle
scas
xchg
xchg
das
push
icebp
andl
call
call
in
mov
enter
push
movsl
mov
fstpt
cmpsb
in
addb
loopne
add
add
daa
cmp
mov
jne
mov
pop
push
stos
pop
in
or
dec
enter
adc
dec
mov
mov
push
sub
ror
jmp
dec
imul
in
sbb
outsb
and
out
mov
loopne
lahf
mov
inc
cld
sti
sub
ficoml
xchg
add
add
push
jle
dec
cmpsl
push
jl
cmp
icebp
int3
jecxz
inc
xchg
adc
push
test
iret
fiaddl
lcall
push
mov
push
cmpl
mov
mov
add
add
add
add
scas
xchg
mov
pop
ds
idiv
imull
jge
inc
pop
daa
jle
sub
sbb
mov
into
test
aad
add
add
sub
iret
sti
cmp
ror
aam
sbbb
enter
cltd
testb
jne
xchg
fdivs
stos
adc
mov
dec
push
call
xchg
cmp
loopne
pop
inc
pop
mov
out
cmp
fidivl
push
cltd
adc
add
in
mov
imul
ljmp
adc
xor
sub
jb
mov
pop
add
add
ret
pop
xchg
adc
push
mov
pop
fwait
jle
lret
in
pop
repz
fisubrs
call
call
cmp
aas
jb
imul
movsb
push
shll
jb
jo
push
add
inc
or
ret
lret
inc
lods
outsl
cltd
mov
cmp
xlat
shll
and
sub
fbld
push
and
negb
int3
sbb
xor
ljmp
add
add
cmp
or
jge
dec
into
push
mov
and
add
add
add
lods
pop
push
adc
xor
inc
add
mov
fmul
dec
sahf
adc
dec
mov
scas
scas
ret
stos
cli
daa
cwtl
xor
push
xorb
or
movsb
mov
add
inc
dec
mov
adc
mov
add
mov
out
sub
aaa
add
imul
rcrl
into
lret
ret
mov
std
ror
inc
leave
lret
fmuls
and
or
fistpll
sub
mov
mov
push
aaa
xchg
fcoml
ljmp
daa
inc
ret
aaa
adc
mov
std
add
xor
ss
pop
std
lret
test
jl
push
arpl
inc
addr16
call
push
and
adc
jno
out
or
add
add
add
repnz
ss
mov
clc
dec
mov
push
mov
das
lret
cmp
lahf
sub
push
pop
jb
stc
push
out
cmpsb
out
ficoml
and
stos
sub
and
adc
mov
adc
mov
aas
loope
mov
add
and
mov
push
jbe
data16
cmp
mov
aaa
push
iret
je
or
clc
push
pop
stos
xchg
fimuls
mov
jle
popf
imul
movsl
imul
lock
fsubl
add
add
insb
jne
pop
ss
aam
or
mov
inc
mov
je
push
inc
lea
adc
inc
adc
dec
sbb
adc
loop
xchg
pop
adc
mov
imul
test
outsl
outsb
adc
mov
push
adcb
add
add
jp
xor
mov
xor
sbb
jbe
xchg
dec
lahf
push
mov
add
add
gs
mov
das
mov
outsl
pop
pop
ss
inc
push
lds
mov
das
mov
add
pop
mov
add
call
call
mov
sbb
jae
mov
sub
fdiv
out
sub
in
push
gs
lahf
test
inc
add
inc
sub
out
xor
dec
inc
xchg
push
insl
inc
icebp
cmc
inc
dec
fs
sar
roll
add
add
add
xor
jp
ja
cmc
dec
call
rcl
inc
sub
adc
outsb
xor
loop
push
xor
cmp
andb
dec
inc
cld
jle
ret
fs
adc
mov
push
mov
inc
push
addb
fmuls
adc
mov
out
push
sub
xor
fisttpll
divl
enter
outsl
or
cmp
enter
daa
jb
push
or
test
sbb
cltd
stos
sub
and
sub
jne
mov
sbbb
fwait
mov
outsl
icebp
addr16
push
xor
adc
add
add
hlt
popa
sahf
push
test
mov
cmp
jo
leave
test
mov
out
stc
jno
cmp
and
push
mov
push
aaa
mov
ja
aad
xor
inc
insb
jl
dec
repnz
dec
mov
popa
mov
sub
jbe
jmp
mov
dec
hlt
pusha
push
mov
sub
jle
addr16
pop
push
arpl
orl
xchg
mov
jno
dec
fadd
adc
ror
out
call
call
clc
mov
lock
lods
add
pushf
sub
add
add
add
add
pop
or
out
pop
pusha
or
add
mov
sbb
repnz
xor
cmpsb
or
add
fstpt
or
les
jnp
addl
add
sbb
aam
out
scas
xchg
or
mov
add
leave
cmp
jg
repz
daa
arpl
mov
neg
mov
jbe
sbb
add
cli
inc
dec
in
call
call
xchg
pop
lods
or
sub
jle
das
adc
scas
sub
push
jl
lock
lahf
add
add
add
enter
add
mov
enter
leave
shll
cltd
test
jae
ss
xor
push
repz
and
bound
imul
xor
lahf
out
loope
adc
leave
mov
inc
jb
fnstcw
push
cmc
popf
mov
cmc
dec
in
mov
add
add
add
addr16
aam
cmpsb
jae
dec
cmp
and
push
add
and
enter
add
add
add
dec
daa
sub
nop
jb
mov
scas
lret
and
add
fwait
pop
add
add
add
add
add
mov
xor
xchg
push
xchg
lcall
fcomps
xchg
jmp
out
aas
aad
repnz
add
add
cmp
push
lahf
sub
and
imul
shll
iret
std
push
rolb
loop
push
ds
in
dec
mov
call
call
and
xchg
push
or
loop
cmp
push
mov
jne
ret
std
cld
mov
push
or
fsubr
repz
pop
imul
inc
mov
sub
add
fs
cmp
mov
and
jbe
sbb
dec
jp
mov
inc
ja
cmc
sahf
gs
jecxz
inc
pop
ja
es
test
lret
call
call
call
add
adc
xchg
mov
dec
cs
mov
outsl
or
test
or
shll
repnz
mov
imul
ds
sub
repz
pop
ret
cmp
pushf
ret
jb
mov
push
lret
mov
sbb
push
cmpsb
dec
add
mov
mov
fs
add
pusha
dec
call
call
dec
xchg
scas
jb
out
sub
lret
cmpsb
aad
nop
data16
rorl
or
insl
ret
inc
insb
fadds
add
add
xor
dec
das
inc
cmp
or
aaa
lret
bound
rcrl
into
inc
push
cli
repnz
xchg
sbb
call
call
call
push
ss
push
in
sbb
movsb
push
fsub
push
sbb
xor
loop
mul
sub
insl
js
xor
and
fs
adc
ret
psubusb
mov
sbb
lods
loopne
popa
xchg
mov
les
or
pop
clc
pop
mov
jg
imul
ljmp
cltd
data16
inc
dec
test
movsl
push
cs
call
call
call
add
mov
inc
repnz
mov
fcoml
daa
add
jle
adcb
pop
add
aam
inc
das
nop
mov
mov
jl
movsl
push
ljmp
add
jle
cmpsb
sbb
jmp
mov
pop
push
jl
and
add
pop
inc
in
jbe
aad
dec
dec
mov
add
xor
dec
sbb
mov
xchg
or
sbb
loope
mov
pusha
sub
sub
jb
push
xor
fwait
add
add
jnp
or
mov
hlt
loope
in
dec
xor
sbb
pop
push
pusha
cmpsl
cmp
mov
stos
dec
mov
mov
xchg
or
push
push
aas
scas
rcrb
mov
popf
pop
cltd
shll
push
jg
push
add
shlb
adc
add
add
add
add
jp
nop
insl
sbb
call
loop
stos
ss
aam
ds
mov
pushf
fs
shll
test
rcrb
push
inc
clc
xchg
cmpsl
pop
mov
adc
idivl
in
push
sbb
add
add
sub
lea
adc
mov
pop
ret
jge
jp
sbb
sub
fadds
add
cld
aad
xchg
inc
or
pop
mov
or
call
call
jle
or
cwtl
out
push
add
jmp
mov
gs
ljmp
add
add
add
adc
int3
bound
gs
jnp
insl
adcb
adc
es
mov
add
sub
pop
imul
sbb
cs
mov
add
add
outsl
cltd
pop
js
cmpb
in
mov
pmaxub
roll
adc
or
add
cltd
xchg
nop
xor
sbb
jge
mov
fmul
cltd
mov
dec
mov
mov
rcrb
push
xchg
roll
mov
push
ret
mov
cmpl
call
call
call
mov
test
jbe
dec
data16
xchg
add
popa
sti
jbe
int
jle
orb
jno
lods
sti
xchg
push
mov
xchg
je
loope
fcoml
lcall
pop
cmp
push
xor
aam
mull
add
dec
pop
cmp
xor
stos
into
test
inc
inc
test
pop
addl
mov
lcall
test
inc
sub
or
add
add
add
add
arpl
or
stos
xchg
insb
jge
popf
cmpl
add
add
add
hlt
inc
stos
cmp
lret
sarl
xor
push
mov
scas
add
xlat
lods
add
jae
pusha
push
fildl
xlat
cmp
out
push
es
fnstenv
sbb
cld
call
add
fidivrs
sub
xchg
lods
sbb
sbb
lods
pop
pop
loop
sbb
jbe
js
mov
and
and
repnz
adc
sar
lea
pusha
mov
push
mov
mov
jb
mov
xor
adc
add
add
add
add
rorl
fsubp
stos
or
lds
mov
xchg
arpl
pop
mov
add
mov
adc
cwtl
bound
add
and
les
or
adc
and
add
cld
push
mov
mov
call
call
jne
out
shl
addr16
mov
add
cmp
out
stos
adc
lods
jg
addb
iret
cld
mov
inc
add
add
add
add
and
dec
cmpsl
xor
pop
xchg
mov
cwtl
je
sbb
add
add
add
leave
clc
hlt
pop
cvtdq2ps
lods
pop
and
nop
ljmp
loop
mov
aas
jge
mov
adc
sbb
add
aam
add
nop
fimuls
xchg
pop
stos
mov
int3
daa
mov
ljmp
push
mov
adc
and
add
jnp
ds
rol
sahf
shll
lock
ret
dec
and
loopne
jmp
imul
push
mov
icebp
leave
jmp
add
fsubs
mov
jle
push
fldl
daa
cmp
xchg
pop
lahf
jne
mov
sti
aad
jp
inc
jle
fstpt
nop
loopne
std
lahf
pop
jnp
jmp
hlt
jp
mov
pop
scas
jnp
shlb
test
add
in
repz
ret
lea
testb
and
sti
jmp
loopne
in
addb
loope
in
or
rcl
fnstsw
add
outsl
mov
mov
call
call
int
leave
inc
nop
insb
shlb
and
xchg
out
xchg
pop
sub
outsl
cmpsl
ja
or
cmc
and
ljmp
inc
add
add
add
add
cltd
insb
not
int
lods
push
xchg
pop
push
sub
mov
cli
inc
fdivrs
mov
pop
dec
mov
jns
pop
cmp
jne
push
loop
cwtl
shl
cmp
pusha
in
insl
jne
sbb
add
add
add
gs
es
inc
push
outsb
jae
sti
xor
call
or
mov
leave
lahf
movsb
aam
filds
jo
lcall
js
iret
lods
mov
mov
jne
lock
aaa
testl
push
and
mov
sbb
pop
insb
mov
mov
stos
hlt
push
push
adcb
mov
cld
pushf
cmp
das
js
out
inc
shll
cmp
or
lret
xorb
lret
clc
pushf
mov
or
inc
cmp
int3
sub
jp
jl
mov
adcb
dec
outsl
data16
sub
pop
jecxz
lock
pushf
pop
and
dec
jns
gs
mov
add
inc
adc
scas
pop
in
pusha
push
dec
push
jg
movsl
cmp
sbb
outsb
push
les
push
mov
popf
dec
xor
cld
repnz
icebp
in
cmpb
xor
fs
cmp
xor
adc
int
cwtl
mull
add
add
add
or
insl
ss
insb
adc
mov
sbb
sahf
jle
or
xor
psraw
or
fdivr
and
sbb
sbb
call
call
adc
push
cmpl
je
adc
push
sbb
lret
movsl
inc
xchg
and
dec
ret
sahf
imul
add
test
or
into
add
mov
xchg
xchg
jmp
int3
adc
adc
and
test
adc
sub
add
add
add
sti
inc
add
data16
enter
rcrb
xor
outsl
add
in
inc
scas
jbe
fwait
in
cmp
insl
iret
mov
call
mov
or
leave
stos
cmpsb
sub
sbb
hlt
or
jp
push
shll
xchg
lret
sbb
repnz
inc
pop
push
int
rcrb
mov
add
add
andps
arpl
add
repz
pop
nop
cmp
daa
jae
cmc
call
call
ret
pushl
ljmp
add
add
add
add
nop
xchg
adc
nop
shll
xchg
stos
loope
out
jbe
ds
scas
fdivrl
sub
mov
dec
sbb
add
iret
jb
lret
push
xchg
xchg
cld
sbb
outsl
lds
xor
out
jl
dec
cmp
pop
aam
add
jne
fdivs
int3
mov
and
ret
push
cmp
sbb
sahf
sbb
jnp
jne
aas
mov
insb
cmp
jge,pt
les
mov
scas
addr16
cli
repnz
add
add
add
pop
aam
sti
jo
or
scas
pop
repz
mov
call
cld
test
xlat
pop
dec
test
pop
sbb
call
call
cwtl
shrb
mov
hlt
jo
mov
scas
shlb
ret
sub
and
dec
jp
jge
adc
dec
test
test
int
outsb
mov
frstor
movsl
pushf
jle
filds
mov
call
repz
out
cmp
pushf
lock
xor
into
and
in
add
repz
mov
icebp
push
je
sub
pop
sub
pop
xchg
ret
call
stos
imul
insl
pop
scas
ja
mov
aaa
pop
push
lods
lret
mov
ja
inc
std
xchg
mov
enter
xchg
sub
out
add
mov
data16
les
and
add
xchg
lea
adc
sahf
dec
or
jg
add
cld
es
add
mov
jb
dec
xorl
daa
fs
je
jae
inc
mov
inc
mov
lahf
addr16
fcompl
adc
mov
adc
mov
lods
add
add
add
inc
mov
popf
jp
add
inc
outsl
push
or
call
call
call
mov
cld
addb
xlat
cmp
out
jo
pop
lcall
scas
cmp
mov
push
out
inc
loop
or
scas
punpcklbw
test
shl
sbb
lods
rcrl
mov
out
ficomps
add
mov
add
add
pop
or
rcrb
jne
fwait
out
pop
mov
loop
mov
push
xor
and
dec
stos
insl
sbb
fsts
xor
out
add
push
scas
es
nop
or
mov
xlat
or
or
mov
xchg
xor
ljmp
mov
jno
add
test
lret
xchg
adc
mov
adc
testb
inc
nop
pop
arpl
sbb
divb
jae
out
iret
cmp
dec
fcoms
out
sbb
clc
testb
iret
jmp
mov
sahf
leave
inc
lea
add
cmp
or
add
add
daa
jb
lret
and
jl
hlt
in
jmp
cs
scas
mov
sti
fstpt
dec
fildl
xor
dec
sbb
lcall
and
sbb
push
outsb
sbb
xchg
lods
jo
xchg
xchg
orb
fnstenv
movb
dec
adc
divb
cmp
rorb
add
in
sub
mov
jbe
and
ja,pt
icebp
xchg
sbb
jmp
or
call
call
outsl
xor
insl
leave
daa
sbb
add
add
add
and
jnp
jnp
mov
pop
xor
mov
push
rclb
and
dec
call
orl
out
ficoms
fidivs
shll
or
dec
lods
adc
jno
sbb
fcom
daa
int
jb
mov
pop
test
xor
push
and
or
inc
mov
add
add
add
add
dec
or
mov
outsb
js
adc
sub
int
adc
in
outsb
pop
jecxz
push
dec
stos
xchg
out
sub
mov
xchg
das
js
mov
xchg
inc
jmp
dec
movsl
clc
test
or
test
dec
mov
pop
lods
roll
jg
push
cld
pop
jge
cmp
mov
enter
add
add
add
xchg
lock
sbb
add
popf
data16
je
push
sbb
push
stos
xchg
dec
add
repnz
pop
and
add
add
add
dec
aaa
sub
and
jnp
aam
or
ret
lods
ss
push
cmp
imul
xor
fldl
movsb
and
adc
xor
gs
call
call
add
add
add
add
nop
testl
sbb
add
out
jecxz
mov
sbb
or
xor
sbb
add
push
jo
fcomi
inc
and
and
arpl
test
sub
add
in
adc
or
and
cmp
ret
cmp
call
test
and
pop
cld
add
dec
inc
dec
push
enter
or
jnp
loopne
xlat
test
jg
jae
jnp
xchg
mov
pop
popa
and
in
stos
dec
sub
mov
mov
aad
cmc
sub
loope
dec
loope
fldenv
imul
movsl
adc
jl
add
or
add
pushf
imulb
ljmp
add
add
add
or
add
fildl
cmpb
mov
xor
or
pop
and
pusha
push
loopne
mov
fwait
in
pop
push
adc
or
stos
mov
test
call
call
fsubp
pop
test
add
std
xor
and
call
call
push
mov
pop
sbb
andl
sbb
cmpsb
dec
pop
pop
xor
xor
mov
mov
xor
pop
mov
lds
nop
dec
push
and
mov
js
push
call
les
rcll
cmp
add
add
add
add
inc
ret
out
ljmp
cld
xchg
xchg
pop
shl
sbb
ja
mov
jp
out
repnz
daa
and
mov
mov
add
adc
ret
fnstsw
call
movl
sar
push
testl
outsl
mov
jp
bound
stos
adc
aaa
add
mov
pop
pop
xor
lds
jo
mov
orb
jno
push
xchg
mov
out
inc
pusha
sarl
movsl
ss
add
loop
dec
mov
js
xor
dec
imul
cmpsl
pop
add
or
xor
push
cs
and
push
mov
int3
out
mov
pop
adc
jo
add
xor
sbb
push
and
lcall
lods
stos
daa
pop
add
ret
xor
add
daa
out
ret
and
nop
sub
repnz
pop
sub
addr16
call
call
call
loop
cmp
test
out
xorl
or
or
lret
push
je
and
add
sahf
mov
jbe
test
mov
xor
in
xchg
fldl
mov
mov
cld
in
xchg
inc
call
or
mov
pop
decb
or
push
mov
inc
add
out
out
or
outsl
mov
shll
inc
fnstenv
pop
pop
adc
push
pushf
insl
cmp
xchg
loope
add
add
pop
inc
pop
fsubp
in
movsb
mov
dec
and
leave
pop
cwtl
dec
out
loopne
outsl
sub
add
sbb
add
lock
scas
fwait
incl
jns
mov
jg
loop
xor
cwtl
rcl
sub
mov
xchg
orl
out
sbbl
inc
adc
push
icebp
data16
inc
cltd
bound
jmp
shlb
sub
addb
or
loope
and
push
fbld
sbb
pop
ret
xchg
inc
es
cmpsb
test
push
ret
in
nop
out
out
lcall
cmpsb
fcomps
or
xor
sub
pop
xor
scas
in
cmp
or
sbb
and
dec
jne
aas
adc
pop
jae
rcrb
xor
inc
and
lahf
divb
mov
and
mov
scas
push
mov
jmp
adc
es
inc
push
cli
call
call
call
fistpl
jae
hlt
mov
int3
andl
mov
fbld
cmc
fiaddl
push
in
dec
lret
cltd
push
call
testl
add
in
and
icebp
stos
add
or
and
shrl
jge
cmovae
push
jbe
or
clc
push
push
test
aaa
sbb
add
add
add
outsb
arpl
mov
pop
roll
jecxz
fldenv
and
cmc
mov
outsb
aam
add
or
mov
lock
js
pusha
add
xchg
outsl
pop
pushf
sub
xchg
pop
inc
call
add
add
xchg
cmp
out
mov
push
stc
add
xor
aam
adc
out
mov
in
push
call
call
push
push
sub
fcomps
cmp
rcrl
stos
mov
pop
xchg
pop
jns
outsl
out
add
fstp
jmp
popa
aad
ret
xchg
test
push
sub
jo
jl
sbb
lods
xchg
adc
cmpsb
int
out
inc
scas
fsubs
mov
fisubl
add
add
add
or
enter
add
into
lds
mov
dec
cmpsb
adc
pop
into
cmp
mov
cmp
out
dec
inc
push
mov
ljmp
add
add
mov
xchg
mov
pop
sbb
in
add
insb
push
cs
or
nop
in
push
les
jbe
jne
xor
fwait
ss
lcall
insb
inc
ss
arpl
cmp
add
xor
imull
jge
rolb
test
push
add
andps
scas
or
dec
mov
xchg
cld
mov
call
dec
lods
outsl
js
dec
imul
into
and
mov
test
mov
mov
call
call
call
or
lods
push
aam
sub
pop
aam
lock
or
test
add
add
pushl
sarl
add
popa
xor
cmpsl
jo
adc
pcmpgtw
cs
pop
or
xor
and
or
mov
test
sbb
xchg
push
push
mov
test
lds
imul
jle
pop
stos
mov
test
cmp
mov
push
nop
jb
lahf
loop
jp
jmp
add
xchg
ret
shrl
mov
mov
adc
test
pop
xor
adc
lds
xchg
xchg
lret
jecxz
lea
push
stos
add
push
notb
push
xchg
inc
mov
cld
push
movsb
scas
push
rclb
push
lock
leave
lret
and
sbb
sbb
cli
xlat
and
push
test
loope
lea
in
xorb
test
jnp,pn
pop
xchg
push
mov
mov
dec
fwait
out
fnsetpm(287
lret
pushf
inc
leave
or
lret
cmp
fimull
or
pop
push
add
add
mov
hlt
mov
inc
and
lods
hlt
sbb
int3
add
sarl
scas
pop
mov
ss
clc
popf
cs
out
aad
lea
xchg
call
call
call
popf
ja
pusha
ss
mov
sbb
inc
adc
xchg
pop
aaa
jne
push
test
add
add
add
add
loop
hlt
mov
out
xchg
xor
out
jnp
cmp
dec
pop
mov
lret
push
in
fndisi(8087
loope
enter
js
push
jmp
lods
xchg
or
add
in
jne
jne
push
cmpsl
repnz
out
mov
dec
testb
pop
xor
cmp
lret
sub
add
add
add
add
rolb
leave
push
cmpl
pop
sbb
test
call
call
inc
leave
fiaddl
call
inc
add
add
add
add
insl
push
and
mov
lcall
lds
add
fisttps
mov
cmp
adc
inc
dec
pop
bound
inc
add
call
and
pop
sbb
ret
mov
mov
xor
sub
in
popf
mov
cmp
mov
jnp
add
xchg
cmp
sbb
lock
fmulp
outsl
xor
out
inc
or
push
movsb
xlat
inc
decb
or
mov
ds
jno
pop
or
pop
mov
add
add
add
repz
push
xchg
inc
xchg
inc
sbb
aaa
je
mov
push
or
add
repz
mov
mov
sti
fwait
jnp
aas
pop
cwtl
adc
scas
hlt
and
mov
popf
addb
mov
and
xchg
les
out
and
cli
lcall
add
pop
cmp
pop
pop
test
fnstcw
jmp
clc
mov
sub
xlat
pavgb
mov
add
add
fdivrl
dec
pop
popa
adc
arpl
pop
cmp
scas
sub
and
push
xchg
cmc
enter
fbstp
xorl
sub
pop
orb
inc
adc
aas
push
mov
stos
fistpl
stos
add
add
add
add
daa
mov
pop
cmp
and
add
add
dec
mov
cmp
mov
je
movsb
pop
jecxz
incb
adc
inc
mov
push
xchg
pop
cmpsb
movsl
mov
push
js
sbb
xchg
adc
out
in
sbb
popf
mov
cmpsl
add
loop
xchg
xor
lea
and
pusha
sbb
add
movsb
mov
aaa
push
push
adc
or
lret
mov
call
call
call
loop
das
mov
in
ret
cmpsb
cmp
or
or
mov
adc
dec
ljmp
lcall
xchg
stc
xchg
out
icebp
jecxz
pop
mov
add
into
mov
sbb
das
cmp
or
or
daa
out
push
adc
dec
call
xlat
and
in
data16
inc
pop
loope
jns
idivb
mov
mov
push
andb
subl
mov
lock
and
call
call
pusha
add
add
sbb
loope
sahf
add
movsl
xorl
adcb
loope
jecxz
test
or
mov
xchg
lock
cmp
or
jge
in
int3
sub
xor
shrb
cmp
xchg
and
xor
add
add
add
add
push
enter
jle
jmp
inc
aaa
iret
in
mov
fst
inc
inc
push
inc
mov
mov
xor
add
add
bound
insb
mov
movl
and
add
add
imul
add
xor
dec
sub
mov
iret
xchg
add
xchg
sub
lea
out
jp
mov
dec
cwtl
adc
mov
adc
enter
inc
mov
cltd
push
dec
call
orl
je
or
lret
dec
js
mov
fwait
add
add
mov
jp
out
jne
cld
testb
cmp
or
add
and
mov
cmpsb
push
dec
stos
add
jl
xchg
insl
icebp
add
and
pop
push
ret
pop
inc
and
addr16
push
in
inc
adc
je
ja
stos
mov
jb
pop
incl
addr16
and
push
arpl
inc
inc
es
ffree
or
sub
call
call
lahf
pop
push
mov
into
cmc
cmpsl
push
fs
push
dec
cmp
mov
sbb
movsl
add
add
add
add
add
lods
push
mov
stc
inc
inc
adc
jmp
adc
add
arpl
push
cmp
adc
add
cmp
and
mov
dec
mov
xchg
mov
pushf
inc
jnp
push
inc
jb
add
js
cmp
in
adc
dec
push
pop
push
push
mov
inc
add
or
call
sub
clc
mov
insb
adc
punpckhbw
stos
push
into
dec
jo
aad
and
mov
add
faddl
push
repz
repnz
cmp
pop
shlb
cmp
rcrl
in
scas
adc
and
mov
jle
repz
add
xchg
pop
add
xor
lods
cmpsl
test
stc
mov
scas
push
add
jno
dec
add
add
cmpb
hlt
adc
je
es
das
andb
xor
lods
aas
jmp
and
cmp
cmp
ud1
pop
xor
add
test
jno
inc
clc
mov
popf
stc
push
insl
insb
arpl
orl
cmp
cmp
add
add
add
inc
and
pusha
out
repz
mov
xchg
inc
lret
xchg
es
das
push
lret
sahf
xor
add
mov
pop
mov
pop
jecxz
mov
xlat
xor
mov
push
sti
out
xchg
fiadds
sbb
bound
add
and
cmp
add
call
call
add
xor
rol
add
int
in
and
popf
and
push
fcmovne
pushf
jbe
enter
cmp
or
cs
cwtl
sbb
inc
inc
mov
pusha
shll
aam
inc
inc
dec
sti
dec
xor
add
add
and
call
call
call
lods
dec
ds
test
stos
sub
jae
or
cmp
sub
push
pop
out
orb
mulb
add
adc
jge
imul
add
add
icebp
adc
movsb
or
add
add
stos
imul
jbe
mov
mov
adc
enter
adc
mov
ret
arpl
mov
mov
mov
loop
fs
adc
mov
pop
or
enter
add
push
ret
call
jo
inc
xchg
push
pop
sub
or
leave
inc
pushf
push
add
addl
cld
popf
popa
cmp
fbstp
xor
xor
push
xchg
std
jnp
rolb
mov
imul
cmp
pusha
lods
pushf
and
in
adc
jle
inc
ss
add
stos
lock
popf
mov
jl
shll
sbb
xchg
push
pop
xor
add
cli
dec
les
rolb
ja
ffreep
push
out
ljmp
xor
mov
inc
push
setge
bnd
je
fdivrl
ror
aas
xor
mov
jp
shrd
jb
pop
mov
add
xchg
mov
jg
mov
es
sub
and
and
enter
add
jns
add
andb
lahf
cmpsl
std
daa
je
imul
shlb
dec
andb
sbb
fcom
loope
shll
jbe
add
call
call
push
xchg
popa
xchg
mov
pop
hlt
adc
add
add
or
fsubrl
dec
icebp
stos
sub
mov
std
sub
jp
sub
cmp
cmp
mov
or
ljmp
and
push
sub
js
jg
cmp
sbb
mov
or
pop
clc
mov
rcrl
pop
pushf
mov
mov
sub
add
add
add
add
daa
inc
in
pop
arpl
pop
dec
and
notw
pushl
push
jns
outsl
cli
jb
aas
jmp
inc
fsubrs
lret
or
cmp
dec
and
add
add
add
add
lods
xchg
or
add
add
add
mov
je
jb
xchg
data16
lret
pop
pop
loope
pop
and
mull
in
xchg
icebp
in
leave
mov
xchg
push
inc
dec
std
and
and
add
jmp
push
dec
and
ja
shl
inc
and
clc
sub
push
xchg
mov
int
into
jmp
scas
int
add
ret
out
js
daa
movsl
iret
gs
movsb
fnstcw
rcll
push
outsb
cmp
jne
jg
mov
add
out
cld
leave
inc
push
add
jae
stc
das
sbb
repz
mov
inc
xor
movsb
mov
imul
add
add
add
add
add
call
call
mov
dec
call
or
loopne
call
call
call
add
sbb
test
dec
pop
inc
mov
jnp
push
lahf
dec
add
push
dec
std
push
iret
les
incl
mov
cmp
dec
adc
mulb
cmp
js
insb
rol
mov
repz
and
call
add
leave
loope
pop
cld
xchg
imul
add
inc
lea
ja
dec
add
add
add
popf
imul
es
in
imul
lret
cmp
cld
shrb
enter
jle
or
push
sub
mov
inc
and
push
daa
xchg
inc
xchg
pop
js
jno
nop
lods
mov
push
rolb
jmp
add
add
add
in
mov
addl
loopne
testl
rolb
jp
sbb
add
aas
shr
jmp
inc
outsl
mov
sarl
addl
inc
mov
arpl
mov
js
mov
adc
adc
add
seta
sbb
insl
das
and
push
testl
add
add
add
add
jecxz
inc
or
dec
jne
pop
inc
mov
call
call
call
data16
inc
popa
fistpl
add
add
mov
enter
or
mov
ret
movsl
cmp
mov
imul
jp
xchg
in
imull
sub
pop
jnp
sub
pusha
out
pop
dec
jns
and
push
div
dec
push
add
pushf
call
adc
jae
cmp
out
test
call
add
add
add
ljmp
mov
cltd
push
std
in
fs
shl
sbb
daa
cwtl
pop
sbb
cmp
fsubl
xor
cld
push
mov
or
out
fs
push
adc
xor
movsb
scas
xchg
adc
and
push
add
add
add
and
mov
flds
sbb
lret
jmp
mov
jo
push
lcall
jno
jp
andb
call
les
push
and
mov
or
incl
add
xchg
push
cs
sub
add
add
add
je
pop
aaa
jns
movsl
pop
das
xor
scas
movb
jb
rol
and
sbbb
jp
js
dec
mov
add
and
mov
es
or
or
je
pop
push
mov
test
sub
add
sub
popf
pusha
nop
fdivr
aam
loopne
stc
movsl
insb
stos
jmp
xor
les
cmpsl
outsb
jmp
inc
or
out
sti
out
insb
adc
dec
lock
outsl
push
adc
lahf
dec
or
addr16
xor
mov
pop
cmp
cmp
imul
add
add
or
add
add
sbb
leave
gs
stos
pop
ljmp
cwtl
sub
cltd
jmp
and
mov
xchg
repz
or
call
call
scas
cld
jg
pop
inc
push
dec
negl
pop
mov
insb
scas
pop
add
shll
jns
or
push
fisubrl
insl
outsl
xor
orl
loope
cwtl
sub
stos
inc
cmpsb
sbb
repz
cmp
cwtl
sub
jns
mov
fisubs
imul
add
push
jmp
inc
stos
mov
fistpll
xor
movsb
ret
pop
mov
lcall
ret
jge
jl
loop
jle
orb
popa
and
inc
pushw
pop
subb
icebp
push
adc
lret
dec
xchg
call
call
call
call
pop
sub
cmpb
xor
jp
out
sbb
ret
push
push
push
sbb
popa
jl
or
rol
sahf
mov
jge
scas
sti
test
push
imul
pop
mov
movsb
sahf
ror
mov
cltd
mov
jle
test
cmp
mov
add
add
sahf
call
call
call
loopne
and
jmp
cld
repnz
xchg
pop
inc
loope
lcall
add
add
jne
nop
int3
mov
int
sbb
pop
insl
jecxz
jle
cmp
cs
and
repnz
loop
outsb
ja
outsl
test
lock
mov
jae
or
or
mov
adc
std
cmp
or
outsl
rorb
call
call
call
sub
or
add
jns
rcrl
and
scas
or
fdiv
or
rorl
pop
sub
nop
cmp
imul
fbld
and
sbb
roll
or
add
ljmp
xchg
hlt
je
or
insb
aad
add
hlt
sbb
sub
stos
arpl
jae
push
es
call
mov
mov
mov
js
mov
jg
adc
push
fptan
mov
add
loop
dec
lock
adc
mov
in
add
mov
fwait
lods
orb
ljmp
mov
adc
mov
dec
leave
mov
test
xor
cmp
inc
in
sub
mov
out
or
lret
mov
push
loopne
scas
add
jne
shrl
xchg
rcrb
in
test
cwtl
dec
fwait
inc
test
add
add
add
add
dec
or
lret
xorps
jecxz
into
movsl
je
or
enter
and
inc
sti
ja
repnz
and
leave
lods
dec
push
pop
jb
fwait
ret
cli
sbb
call
inc
or
xchg
or
aad
int3
jns
mov
mov
cmp
lea
mov
mov
cwtl
inc
inc
lods
lcall
cvttps2pi
test
or
stos
sub
add
cltd
rorb
add
add
jmp
xor
push
nop
in
incl
insb
test
or
cmpsb
push
out
movsb
or
sahf
pop
out
je
pop
scas
repnz
sti
stos
pop
mov
iret
xchg
test
fisttpl
sub
cli
daa
shl
cmp
hlt
add
and
cmp
add
add
add
add
mov
or
push
or
add
add
add
add
sub
add
add
cmp
out
cld
jbe
and
int
bound
inc
pop
sti
test
dec
inc
xor
jns
or
sub
dec
cli
xor
loope
aad
xchg
sub
inc
mov
loope
mov
test
sbb
lods
inc
ljmp
call
call
call
lods
gs
add
int
ret
mov
cmpsb
dec
adc
mov
loop
loop
rcrl
lea
call
add
add
add
add
ficomps
js
clc
cmp
jae
lret
cmp
push
mov
popa
in
jnp
dec
aas
rclb
outsb
push
xor
subb
mov
push
in
out
fsubrs
adc
js
stos
push
es
stos
mov
push
sahf
xor
loop
faddp
push
pop
xchg
aad
cmp
dec
xchg
or
into
je
push
insb
ret
jae
inc
add
stos
in
sbb
fwait
xor
insl
sub
jb
mov
cltd
cli
out
pushf
inc
loopne
sahf
adc
and
cmpsb
push
sub
xor
fcmovbe
xlat
pop
jp
or
jne
adc
lret
add
add
add
movb
call
call
lahf
mov
leave
icebp
pop
repz
push
int
cmp
fs
push
push
aas
and
test
ljmp
jne
adc
adc
lea
add
add
add
adc
sbb
test
lret
xor
lret
neg
pusha
in
cmpb
cmpsb
push
decl
xchg
loopne
out
iret
mov
sub
clc
and
adc
lods
sub
push
insb
xchg
test
adc
pop
jo
scas
clc
notb
jne
insl
imul
add
popa
pop
jb
fcompl
ss
stc
cmp
repnz
jnp
clc
cmp
adc
into
push
out
enter
mov
fcoms
adc
in
ficompl
ret
push
lret
mov
push
cmpsb
mov
sub
stos
and
shrl
pop
es
sub
sbbl
lea
cmp
jbe
outsl
and
popa
lock
add
aas
push
jno
cmpsl
jns
rcll
dec
push
bound
inc
lahf
cmc
or
sub
dec
push
leave
or
leave
jne
insl
movsb
pushf
mov
mov
mov
leave
mov
dec
push
and
xor
add
add
pop
addr16
sbb
idivb
mov
dec
cmp
add
add
xchg
add
jne
in
data16
pop
iret
in
rclb
sub
movsl
and
inc
jmp
mov
clc
fwait
sub
mov
xor
jp
mov
or
clc
cmpsb
push
clc
pop
call
call
sbb
lods
fmuls
jo
jl
sarb
cmp
sbb
pop
and
mov
adc
int3
cmp
add
add
add
test
cltd
mov
rorb
adc
mov
sub
cmpsb
sub
or
cmp
cli
dec
jbe
mov
add
movsb
mov
xor
mov
scas
push
incl
push
cmp
sti
je
mov
push
add
out
add
notb
cmpsb
outsb
pop
popfw
mov
sbb
mov
sarb
movsb
ds
cwtl
test
in
add
outsl
mov
adc
fildll
or
fdivrl
cmpsb
jecxz
pop
mov
notb
nop
inc
xchg
cmp
adc
mov
push
dec
test
push
int3
cld
iret
cli
les
fcoml
adc
cmp
loope
scas
sub
dec
outsl
dec
notl
xor
mov
insb
sub
cltd
jo
push
bound
push
or
add
add
add
movsl
and
push
idivb
cmp
loopne
clc
fsubl
jns
xor
and
ja
sbb
xchg
push
pop
call
call
lret
inc
and
fmulp
inc
leave
sub
hlt
cmp
add
add
fucomi
std
mov
xchg
xor
sbb
sub
adc
adc
mov
inc
adcb
add
jae
bound
sbb
stos
add
fldt
jecxz
fidivs
sbb
mov
push
mov
inc
cmp
fcoms
mov
outsl
mov
ret
pop
add
popa
loopne
scas
repz
repz
push
loopnew
fcmove
fwait
imul
popf
in
add
add
or
aas
movsl
mov
xor
pop
stc
insl
dec
mov
or
ljmp
dec
mov
add
ja
cltd
movsl
js
add
xor
mov
pushf
lahf
stc
loop
mov
ds
mov
mov
mov
orb
jmp
add
fldl
idivl
and
sbb
jmp
gs
test
mov
add
add
movsl
std
or
lods
cmpsb
lock
gs
mov
sbb
stc
std
add
add
sub
jb
sub
js
xchg
nop
inc
jns
lods
shlb
and
stos
cltd
push
dec
js
scas
jmp
popa
xor
outsl
jge
pushl
sbb
push
or
or
mov
cmpsl
ret
inc
jecxz
popf
pop
jb
sahf
sub
xchg
test
das
add
in
dec
lahf
out
inc
bound
dec
sub
sbb
xchg
jge
and
popf
out
insl
int
ja
lods
out
sub
popl
repz
sub
cmp
in
mov
lods
lds
js
js
dec
jbe
push
push
in
adc
xchg
jp
add
add
out
outsl
lds
les
mov
int
pop
sub
call
call
out
loope
or
xchg
jle
pop
das
pop
enter
add
rorb
mov
add
push
fs
xor
jmp
cmp
sub
mov
add
push
push
pop
push
lcall
and
jmp
adc
sub
sbb
icebp
push
add
push
aaa
xor
ret
in
jae
add
dec
adcb
and
sub
mov
add
add
add
add
dec
jmp
add
add
cli
aas
mov
mov
pop
cmpsl
in
xor
call
dec
pop
adc
push
inc
cld
out
inc
ss
inc
aam
xchg
aam
frstor
fidivrl
add
add
add
dec
idivb
jb
mov
mov
fisubrs
shr
ds
push
lret
das
jnp
push
popf
push
movsb
in
stos
pop
mov
xor
adc
into
lret
push
in
stc
mov
test
in
int
adc
sarl
aaa
enter
bound
add
add
add
int
mov
fdivl
mov
jg
add
outsb
roll
cmpsb
pushf
fsubrp
call
add
aaa
lods
or
in
add
add
pop
jmp
inc
dec
jl
inc
gs
xchg
add
jo
int3
fsubs
addr16
adc
add
or
adc
imul
loopne
push
out
enter
fildll
sub
mov
insb
imulb
xchg
sbb
push
push
test
hlt
inc
pop
ljmp
mov
into
adc
add
xor
out
xorb
cmp
jae
mov
aas
aam
cltd
jnp
xchg
js
fdivs
loopne
add
add
add
or
mov
fistl
pusha
cwtl
mov
add
mov
sbb
rcrb
adc
xchg
push
dec
lea
loopne
rorl
push
ret
into
mov
cmc
cmp
sar
jns
pop
insl
adc
jne
add
dec
push
sub
data16
jmp
cmpsl
sahf
pop
sarb
push
add
subl
mov
cltd
ror
fbstp
imul
ja
call
call
sbb
aas
les
jmp
or
rorl
add
dec
not
out
lods
or
pop
scas
push
xchg
pop
xchg
test
push
inc
or
add
add
add
inc
dec
popa
scas
mov
jecxz
add
ret
mov
add
push
jno
jnp
add
aad
xor
push
mov
xor
test
mov
inc
sbbl
add
add
add
add
sbb
add
add
add
add
mov
mov
cli
fiadds
scas
jl
jns
jl
fiaddl
fnstenv
jge
jge
dec
daa
cwtl
or
jb
or
lahf
inc
loop
loopne
mov
push
div
popa
xchg
jns
inc
into
dec
dec
jo
fisubrs
xor
add
add
add
jl
dec
mov
ljmp
adc
and
loop
mov
out
push
test
push
ljmp
mov
push
inc
adc
imul
sub
mov
cmp
mov
add
outsl
mov
add
jae
ljmp
arpl
mov
out
js
mov
add
push
jmp
int
ds
rolb
add
add
add
add
adc
incb
sub
cmp
icebp
shrb
pop
ss
pop
clc
inc
insb
mov
fs
jge
fwait
mov
icebp
push
mov
les
jle
add
add
add
mov
vphaddwq
inc
push
cwtl
cmpsl
mov
test
movsl
jns
std
jl
and
xlat
xor
loope
ja
orb
insb
fidivl
hlt
popa
jns
int
ljmp
call
add
add
add
ljmp
add
add
add
shlb
push
inc
jecxz
mov
addb
add
add
add
add
add
add
shrb
inc
imul
dec
and
adcl
xor
xchg
dec
fiaddl
dec
pop
js
shrb
xchg
and
adc
add
add
mov
pop
xor
xor
push
mov
scas
cmp
jge
xchg
ljmp
push
or
ds
addr16
cmp
fistpll
xchg
cld
dec
mov
sar
xchg
cltd
data16
shrl
addr16
outsb
iret
popf
xchg
pop
push
ja
and
xchg
lcall
addb
add
add
ljmp
mov
aam
sbb
inc
lret
ja
cmp
inc
outsl
jno
sub
push
sub
call
call
ret
repz
and
pop
rcrl
mov
push
add
mov
sarb
add
pop
jns
sbb
jge
and
rol
imul
adc
add
add
add
adc
call
sub
inc
pop
xor
fisttps
mov
add
stc
pop
and
jmp
call
call
xchg
ror
icebp
popa
cmp
cwtl
shlb
lcall
pushf
cmpsl
xor
and
xchg
ret
insl
aaa
inc
or
add
fsubs
hlt
xlat
mov
call
call
stos
mov
xor
pop
add
outsb
mov
sahf
lds
adcl
xchg
sbb
mov
sahf
mov
push
adc
int
dec
into
jge
and
mov
lcall
frstor
aad
jo
sub
xor
jg
or
movsl
push
sub
call
cmc
rep
mov
call
call
insl
lcall
mov
add
jmp
call
call
call
push
mov
fsubrs
clc
jbe
push
sbb
or
jns
xor
dec
adc
add
movswl
test
mov
pusha
push
push
push
push
cmovo
pop
test
push
xchg
loope
add
add
add
xchg
test
cltd
repnz
sbb
sub
fadd
loop
sbb
and
stos
mov
aaa
inc
xchg
je
adc
out
xor
jne
dec
sub
xchg
cmp
addr16
xchg
xchg
loopne
dec
int3
dec
xchg
mov
xchg
out
daa
mov
add
or
or
push
fwait
xor
jne
testb
call
add
cmpsb
jp
jns
dec
jae
enter
into
sub
fbstp
sub
dec
push
repnz
sub
dec
add
sub
add
jecxz
and
fcoml
repz
gs
dec
jecxz
push
mov
push
call
pop
mov
xchg
out
cmpsl
sub
ljmp
mov
imul
leave
mov
lock
xchg
mov
add
or
xchg
inc
stos
cli
movsb
dec
sbb
push
inc
into
mov
cmp
or
inc
fdivrs
fidivl
loopne
cmp
addr16
test
das
add
jo
dec
cmp
and
mov
shlb
lds
add
jl
bound
roll
ljmp
mov
cmpsl
add
add
add
add
negb
inc
push
jnp
and
cmc
es
aad
icebp
dec
js
pop
ret
mov
stc
lcall
int3
mov
mov
call
mov
add
imul
mov
add
lock
aaa
inc
in
dec
jl
add
add
inc
aam
addl
lock
jecxz
dec
jle
vmovdqa
xchg
rcrb
or
mov
mov
push
mov
aas
fmull
mov
sbb
dec
push
es
ret
fwait
push
in
ss
xchg
and
adc
cmc
and
push
sub
lods
push
jno
mov
add
add
mov
sbb
lods
cmp
clc
jmp
ljmp
pop
cld
outsl
lds
xlat
lret
lods
jae
jno
cmc
dec
roll
sub
int
int3
subb
loope
and
add
add
add
add
mov
inc
stos
and
hlt
sbb
add
add
jmp
stc
xor
arpl
adc
mov
mov
pop
test
movsl
and
daa
push
cmpsb
ret
push
mov
add
add
add
xor
or
xor
push
and
fistps
mov
jecxz
or
adc
push
sub
sbb
sti
out
sub
cpuid
or
dec
add
out
add
dec
ret
mov
dec
jae
fidivrs
push
je
or
adc
call
xor
scas
dec
jno
jno
or
mov
and
cmpl
jbe
stc
pushf
dec
fmull
hlt
movsl
or
cmp
lods
inc
cmp
pop
outsl
add
add
add
add
add
mov
cmpsl
inc
or
insb
sbb
xchg
xor
in
add
add
cltd
mov
fcomps
loopne
sbb
addr16
mov
mov
pusha
or
loopne
add
add
mov
cmpsb
jno
jge
jnp
or
sub
in
cld
fxch
xchg
pop
and
aas
push
cmc
int3
mov
sbb
imul
popf
cmp
pop
or
aas
or
xor
or
sbb
fstps
fistpll
add
add
std
add
clc
add
popa
movsl
out
mov
call
call
call
push
cmpsb
lcall
mov
sub
ljmp
fs
repnz
sbb
icebp
imul
add
stos
call
call
call
jb
mov
jae
test
lcall
pop
orb
lods
lods
or
xor
mov
dec
ja
mov
push
sbb
call
call
mov
sub
pop
cmp
addr16
adcb
sbb
push
sti
sbb
cmp
call
push
mov
sti
fcoms
add
add
add
dec
xchg
mov
das
pop
jg
xchg
aas
mov
adc
cmpsl
and
sahf
jnp
mov
mov
out
mov
repnz
stos
mov
push
fcomi
mov
test
add
lret
mov
push
fistpl
xor
jecxz
loope
ret
mov
push
mov
adc
into
mov
faddl
add
scas
in
jmp
sbb
cld
mov
testb
sub
and
out
xchg
iret
pushf
insb
push
push
jo
mov
or
mov
mov
in
pop
lret
jmp
mov
pop
add
add
inc
mov
pop
sti
mov
lret
sub
pop
push
cmpsl
ja
dec
enter
ljmp
ss
fimull
lods
dec
sub
cmp
out
mov
xchg
add
jg
sarl
mov
gs
test
mov
pop
adc
mov
cmp
add
lcall
adc
repz
jnp
push
add
add
cmp
push
lea
mov
mov
lahf
arpl
xor
call
call
fldt
dec
ds
das
je
inc
fwait
jns
inc
and
mov
aaa
arpl
lret
ss
add
fcmovb
inc
fidivl
dec
mov
jno
es
outsl
rcrb
xchg
xor
retw
dec
ds
jns
inc
jg
lret
outsl
bound
in
fwait
leave
lcall
popa
pop
mov
gs
jg
dec
mov
aas
aaa
adc
xchg
and
xchg
mov
add
mov
add
add
adc
pop
sub
pop
into
xorb
mov
lea
lcall
enter
stos
out
call
call
mov
mov
mov
mov
fstpl
mov
inc
iret
pushf
cmp
pushf
arpl
and
mov
pop
lea
aam
and
push
mov
mov
cmpsb
mov
shld
fisubrl
pop
ret
test
dec
mov
fcomps
push
sub
add
pop
shrb
push
jecxz
aaa
dec
sbb
xor
test
jle
pop
cs
jl
clc
or
adc
xchg
jno
push
pop
mov
mov
xchg
and
call
and
add
add
lods
sahf
mov
insl
repz
and
xchg
inc
inc
inc
inc
movsb
mov
inc
push
ret
shrl
pop
cmp
and
mov
fimull
insb
sub
jo
data16
addr16
cmp
sbb
dec
mov
inc
add
push
add
fidivrl
mov
fwait
dec
xor
push
or
pushf
aaa
dec
adc
pop
add
xor
cmp
addl
add
and
fmul
sub
add
add
loope
inc
into
or
push
xor
sbb
cmp
jmp
push
pop
mov
inc
mov
xchg
ficomps
ljmp
push
xchg
movsb
mov
or
leave
adc
cmp
mov
lret
cmc
mov
lret
add
cmpsl
shrl
sarb
pusha
xor
das
mov
je
enterw
int
addb
cmp
add
add
add
add
filds
in
gs
lea
push
push
call
call
sub
daa
call
jl
mov
xor
incb
cwtl
out
aam
adc
push
incl
add
add
insb
dec
cmp
aaa
jns
ljmp
mov
lods
mov
pop
sub
xor
lods
fistpl
loope
push
jecxz
decb
repz
or
pop
imul
fistps
dec
jecxz
jle
inc
mov
inc
fwait
jne
movsl
repz
inc
push
sub
call
and
scas
ffreep
adc
and
or
xor
push
sub
cs
shlb
icebp
mov
das
out
cmc
pop
int
sbb
xchg
daa
mov
add
adc
enter
add
add
add
ficoml
in
xor
leave
in
stc
fstp
add
test
jg
add
mov
add
jno
hlt
mov
lock
jp
adc
int3
add
mov
and
mov
cmc
inc
loop
out
add
add
add
add
inc
inc
stc
jg
jle
into
mov
dec
pusha
and
call
call
sbb
fiaddl
jne
jmp
mov
int
sub
sbb
fcmovne
and
sahf
sbb
cwtl
sub
xor
test
addr16
xor
scas
cmc
jnp
mov
and
cld
and
fcompl
add
mov
mov
mov
add
mov
push
and
jnp
movsb
adc
sti
shlb
rcll
xchg
fdiv
mov
inc
out
rclb
mov
leave
or
cmpsl
mov
mov
pop
js
fcmovb
inc
js
scas
mov
mov
add
add
add
ja
pusha
xchg
mov
iret
lea
loop
sub
rcll
sbb
arpl
in
outsb
add
push
add
cltd
idivb
fdivrs
repnz
mov
add
add
fidivrs
ret
enter
sbb
inc
xchg
inc
xlat
mov
stc
cmp
jnp
add
and
mov
cmp
call
call
sbb
loop
mov
mov
cwtl
sbb
orl
sahf
in
fstpt
push
fnstenv
push
icebp
imul
lcall
pop
lock
add
dec
adcl
cmpsl
scas
mov
mov
in
pop
test
jb
add
lods
nop
rcr
pop
sbb
lods
xchg
adcb
in
stos
push
je
dec
mov
add
add
push
push
cmp
daa
aad
mov
xor
and
add
add
add
bound
jp
push
dec
lds
jmp
pop
pushf
pusha
imul
aad
out
sub
test
or
int
insl
nop
dec
fldenv
xor
push
sub
aam
cmp
adc
adc
fwait
stc
mov
enter
bound
dec
rolb
add
add
mov
pop
xlat
aam
jmp
imul
imul
add
test
mov
aam
in
in
call
call
call
push
outsl
es
pushl
cs
inc
cmc
add
add
add
ljmp
jb
mov
fs
add
leave
adc
jge
adc
jmp
pushf
xchg
repnz
sbb
andl
mov
push
mov
mov
hlt
dec
lods
jl
jo
mov
lods
in
ret
hlt
mov
lea
sahf
sahf
bound
testb
in
xchg
sub
fsubrs
dec
in
arpl
push
adc
add
inc
sbb
lret
scas
adc
pop
jp
sub
xor
dec
nop
mov
daa
cmp
lods
jbe
sbb
push
dec
jg
mov
sub
fisubs
mov
inc
pop
stc
cs
inc
or
loop
addr16
mov
pop
xor
pusha
stc
mov
lods
les
repnz
sbb
jno
adc
jmp
sub
repnz
cmpsb
add
mov
fdivs
add
add
rcrb
adcl
mov
lahf
cwtl
or
movsl
mov
xor
dec
cmpsb
mov
adc
mov
and
adc
cmc
pushf
adc
xor
cs
add
push
div
call
call
call
sbb
icebp
addr16
inc
jmp
cmc
pop
mov
add
add
stos
dec
cli
stc
cli
mov
fcomip
cltd
xchg
bound
test
cld
pop
add
test
mov
data16
and
ret
mov
movsb
add
jmp
fidivl
jo
push
cmc
fistl
mov
sub
mov
ud1
rcrb
mov
call
add
add
add
add
add
pop
sti
rcll
das
pop
inc
fmul
popa
repz
nop
popa
pop
sub
pushf
loope
dec
das
pop
stc
lahf
mov
incl
mov
mov
or
fnstcw
int
ret
lds
pop
xchg
add
add
add
add
xlat
and
stos
adc
nop
jmp
mov
es
jge
int
movsl
ret
adc
das
in
push
in
xchg
gs
add
lret
lahf
sbb
xor
pop
pop
sub
jmp
pop
sub
lods
jbe
and
ss
mov
fld
test
repnz
adc
insb
sub
jbe
fisubrs
adc
out
insl
sbb
pop
sub
inc
test
dec
jnp
repnz
jno
xchg
mov
je
cmp
mov
popa
dec
add
lahf
mov
xor
inc
test
inc
push
int
test
push
cmp
hlt
mov
push
sbb
adcl
xchg
or
test
add
and
mov
add
fcmovnb
mov
pop
mov
jbe
cmp
pushf
cmp
inc
scas
mov
call
call
or
mov
adc
cltd
inc
jg
ss
jb
mov
sub
sub
je
aad
sarl
push
lahf
pop
cli
jmp
add
aaa
xor
sub
xor
scas
xor
adcl
cmpl
mov
pop
ret
xor
inc
sub
add
pop
jmp
les
insl
sbbl
sbb
mov
sbb
les
adc
out
push
lret
scas
out
out
inc
inc
mov
sahf
ja
in
dec
push
cmp
xchg
dec
mov
dec
loope
loope
dec
jg
bound
fucomp
fs
mov
add
add
pop
xchg
xchg
fwait
sti
xlat
add
in
pop
xor
movsb
jl
or
push
repz
fsubr
push
mov
pop
test
and
or
mov
fistpl
add
sarb
jo
stc
mov
pop
insl
mov
add
cmp
fbld
sarb
mov
inc
add
mov
pop
and
mov
dec
jmp
addr16
sbb
gs
and
push
nop
sub
dec
jle
jne
jnp
scas
pop
push
xor
or
sub
push
mov
adc
lcall
add
add
add
add
cmp
insl
jno
pop
subb
call
call
xchg
shr
cmp
stos
mov
scas
lds
xor
cmp
popf
arpl
stos
or
arpl
pushl
popf
dec
movsl
iret
add
add
lret
pushf
sbb
mov
movb
into
add
add
adc
lret
fsts
and
gs
cmpl
push
lcall
mov
add
in
arpl
dec
icebp
out
jns
adc
sbb
cmpsl
ja
aas
in
mov
mov
cltd
stos
dec
and
mov
pop
pop
scas
adc
add
add
inc
add
push
stc
outsb
pop
ljmp
mov
mov
sbb
cmp
sub
add
add
add
js
jnp
sub
test
cmp
push
pop
mov
inc
add
pop
add
inc
lret
dec
outsb
insl
push
and
and
movsb
out
pop
mov
test
scas
or
je
mov
inc
xchg
jmp
call
call
sbb
dec
test
enter
add
add
dec
insl
xorl
add
xlat
ret
sbb
pop
or
or
or
filds
and
mov
or
and
stc
mov
or
std
inc
in
test
fs
mov
ss
sbb
mov
jecxz
testb
mov
enter
pop
insb
call
call
jge
add
add
add
add
cmp
fcomp
test
lcall
or
call
push
pop
add
add
add
add
dec
call
cs
dec
xor
cltd
sbb
dec
into
dec
js
inc
cld
mov
mov
daa
test
mov
adc
mov
bound
negl
mov
xchg
xlat
jmp
mov
xor
xchg
stos
xlat
mov
and
pushf
cmpsb
lcall
test
popf
addr16
in
dec
test
add
add
add
rclb
gs
sbb
sbb
clc
iret
and
sbb
andb
iret
xchg
lret
test
dec
mov
jne
test
cmp
enter
xchg
loop
inc
dec
add
jp
jne
xlat
mov
add
add
add
add
or
push
cmpsl
or
push
sbb
jno
pop
scas
sbb
xor
into
sbb
inc
lea
cmp
push
push
push
popf
imul
notb
sub
jb
lock
xor
daa
rorl
jb
out
push
adcl
add
add
jecxz
mov
mov
dec
stos
ljmp
movsl
push
add
xchg
push
xchg
aaa
inc
cmp
cmp
inc
out
cmp
insb
sti
fistpll
dec
nop
iret
dec
mov
add
add
push
gs
cmc
stc
mov
jno
sbb
lds
add
loop
or
xchg
pop
xor
fnstsw
or
leave
pop
shrl
movsl
imul
call
call
mov
cmp
icebp
inc
mov
arpl
outsb
dec
sbb
movsb
stc
aas
arpl
push
rolb
ja
cld
pop
aam
mov
les
and
gs
push
xor
pop
inc
jge
inc
fld1
call
call
jmp
das
inc
pop
mov
cmpl
ss
jb,pn
sarl
arpl
and
jecxz
jnp
ljmp
test
out
push
dec
sahf
mov
cmp
rorb
pop
dec
xor
gs
movsb
cltd
xor
sbb
mov
add
js
push
inc
mov
dec
sub
clc
sbb
and
cld
xchg
pop
push
stc
xor
repz
mov
add
pop
dec
adc
push
je
dec
cmp
mov
add
mov
lahf
insl
fcomps
in
movsb
inc
cmp
es
add
add
les
fimull
or
es
mov
and
mov
fidivrs
out
cmpsl
cld
xor
push
imul
imul
push
mov
outsb
test
roll
add
cmp
jle
cmpsl
aas
sub
adc
lcall
push
add
add
cs
ficompl
xchg
add
add
movsl
or
fs
inc
and
cmpsb
mov
sub
mov
popf
push
add
fisttps
pop
sub
add
add
pop
jns
call
call
cmp
out
rcrl
lods
jne
add
add
add
add
add
addr16
mov
inc
add
add
jne
lret
mov
push
movl
add
add
fildll
pop
add
repz
xchg
out
aas
fisubrs
cli
and
movsl
dec
dec
xchg
dec
or
adc
xor
loop
orb
sub
jbe
loope
in
dec
into
adc
outsb
dec
cli
ret
out
add
push
and
ret
fnclex
cltd
mov
adc
imul
add
add
lods
push
cmpsb
mov
cmp
je
clc
ficoms
in
popa
rclb
imul
call
call
call
pop
inc
mov
enter
hlt
push
das
clc
pop
pop
test
data16
cltd
and
mov
inc
or
insl
dec
and
lods
pop
cwtl
cmp
clc
add
mov
shll
popf
mov
daa
jns
addb
add
add
add
stos
add
jge
adc
sbb
loope
add
push
pop
aaa
xchg
jle
out
stos
dec
imul
add
out
popa
jno
pop
xchg
xchg
jp
sub
add
pop
mov
scas
sbb
ss
adc
out
out
xchg
movb
lahf
xchg
add
call
call
jae
add
cld
jge
ficomps
push
fwait
or
mov
sbb
xor
sub
push
jge
xchg
cmp
inc
pop
add
inc
out
and
mov
std
mov
mov
in
jne
cmp
sbb
cli
imul
jo
xor
xor
out
fwait
mov
add
add
add
add
xchg
hlt
cmp
add
test
das
and
xor
inc
or
dec
xchg
into
xchg
fs
and
mov
test
jbe
jg
repz
add
aad
add
cmp
pop
cmp
and
push
out
int3
es
dec
inc
roll
dec
dec
sub
stos
icebp
call
and
inc
push
mov
jnp
pop
lds
push
pop
add
or
fmull
xchg
sub
xchg
popa
xchg
jmp
cs
iret
out
pop
inc
scas
and
pusha
std
ja
movsl
mov
jno
scas
jbe
jbe
jbe
xchg
xchg
adc
add
add
add
add
mov
ds
mov
xor
leave
dec
dec
push
cmp
add
dec
cmp
add
add
add
add
add
inc
or
fs
push
add
in
in
push
es
add
sbb
push
mov
sti
pop
adc
ret
outsl
jl
mov
ret
cmp
inc
push
fs
test
and
outsl
std
pop
or
icebp
or
dec
subl
or
leave
xchg
dec
push
mov
add
add
add
call
call
fldcw
xchg
sbb
test
add
clc
pop
push
nop
sbbl
adc
aas
js
cmp
mov
or
call
call
fstl
jnp
test
xor
cmp
cmp
sbb
es
jo
xor
lahf
or
inc
mov
cli
sbb
adc
ss
jecxz
cmp
fs
arpl
add
add
push
pop
lods
sbb
xor
push
dec
push
imul
imul
and
and
outsl
repz
jno
mov
sub
add
add
add
add
cmp
popf
push
mov
in
jnp
xlat
mov
jno
or
push
test
out
jle
clc
icebp
push
jp
inc
jge
push
and
and
test
or
add
add
add
lret
inc
int3
push
add
add
add
add
dec
mov
js
shlb
push
add
or
cmp
imul
ljmp
mov
adcl
push
push
imul
mov
inc
mov
jo
call
call
and
aaa
cmp
mov
pop
or
mov
ss
cmpsl
adc
outsb
mov
add
add
mov
push
xchg
inc
xor
jp
out
rorb
adc
inc
push
enter
add
add
dec
iret
or
push
fdivrs
mov
call
call
call
enter
push
add
pushf
ljmp
add
ret
xchg
cltd
xchg
scas
popf
pop
sub
pop
jp
xorb
add
cmp
sub
inc
js
mov
iret
enter
jno
imul
push
inc
cmp
xor
repz
lret
jno
add
add
pop
movsl
xlat
xlat
inc
pop
jo
cmp
cmp
mov
addr16
dec
cltd
popa
push
lcall
in
je
or
rorl
aam
add
psubd
add
add
add
int
inc
insl
adc
insb
jp
cmpl
pop
out
or
int
sbb
xor
call
call
call
add
xlat
inc
or
jb
aas
nop
outsb
push
dec
cmpsb
jle
pop
sub
jp
or
add
or
add
xchg
ljmp
adc
or
sub
cld
out
pusha
test
cmpsl
jle
loopne
jp
movsl
adc
mov
ja
mov
test
jl
and
aaa
in
insb
push
outsb
adc
xchg
cmp
xor
sbb
xchg
fistpll
push
adc
pop
test
dec
imul
pop
jnp
or
cs
add
sbb
jns
or
daa
lods
pusha
and
outsl
push
cmp
es
fadds
das
repz
jecxz
je
push
add
adcb
or
imulb
sub
xchg
sbb
jbe
push
popf
pop
sbb
cmp
divl
stc
loop
pop
out
addr16
fistpll
xor
pop
inc
insb
insb
dec
and
add
data16
ret
jl
push
mov
ljmp
adc
movsl
and
or
sbb
sbb
sbb
and
cmp
add
adc
or
adc
sub
cmp
pop
mov
shlb
cmp
or
pop
add
inc
mov
popa
and
sahf
add
add
imul
mov
aas
xlat
inc
sub
enter
es
dec
call
call
call
pop
adc
xor
mov
jnp
inc
fidivs
cmp
sub
ficoms
sub
xchg
cmp
mov
iret
dec
es
jl
push
or
daa
fsubs
push
cmc
pop
out
mov
or
pop
fidivl
dec
and
dec
imul
xchg
and
push
call
add
push
sarb
pop
add
fdivrl
sub
xlat
inc
addl
or
mov
into
and
mov
xor
inc
stos
mov
or
push
adc
movsb
jge
andb
bound
add
mov
cld
test
inc
gs
cmp
fistpll
add
dec
scas
movsl
lret
sub
loop
gs
sbb
das
rcll
dec
sub
js
lcall
pusha
adc
fdivs
jle
stc
jno
dec
add
lods
xor
cmp
scas
je
mov
pop
shr
call
inc
ja
and
dec
gs
rolb
add
add
add
xchg
sub
imul
aaa
pop
in
je
movsl
scas
imul
dec
pushf
pop
dec
dec
push
or
outsb
adc
xlat
out
xor
jno
dec
and
cmpsb
push
pop
lock
push
xor
ss
xchg
mov
adc
sub
fbld
das
loop
lea
sub
add
outsl
aad
call
call
scas
icebp
insb
adc
xchg
add
ljmp
cmp
mov
pop
add
ss
ss
mov
clc
outsl
adc
sub
cmp
dec
mov
add
fcoms
push
or
xchg
add
inc
jae
mov
cmp
mov
jg
das
lret
mov
push
stos
jp
jge
popa
data16
fwait
dec
arpl
and
adc
inc
arpl
sub
iret
gs
movsl
jne
shrb
bound
mov
mov
xor
montmul
cmpsb
add
stos
mov
sub
jp
lock
dec
jae
imul
sbb
inc
lock
sub
xor
repnz
ljmp
push
jbe
push
adc
stc
imul
add
inc
pushf
dec
daa
mov
pop
fistpl
add
add
scas
ja
cli
jnp
gs
rorb
pop
xlat
dec
fadds
loope
rorl
cmpsb
adcl
add
add
xchg
ljmp
mov
inc
outsb
pusha
inc
call
call
and
and
ret
and
or
mov
dec
push
cmp
repz
add
pop
pop
xchg
cld
jae
lds
mov
push
je
add
add
fwait
pop
add
jl
adc
leave
push
add
adc
dec
or
fs
outsl
les
or
outsl
insb
mov
push
bound
sbb
notb
add
mov
inc
xor
idivb
insb
outsb
pop
outsb
inc
loope
inc
mov
movsl
pop
adc
mov
adc
daa
xor
adc
cmp
push
cli
push
cmp
aas
push
sub
sub
lock
or
je
add
push
or
pop
mov
and
jne
or
daa
adc
and
fs
jmp
pushf
aad
and
or
mov
pop
add
jo
stos
add
push
pushf
jmp
xor
popf
bound
push
fidivl
adcl
scas
jbe
xchg
or
and
xor
lahf
sbb
add
cmp
faddp
das
loope
ss
lea
call
data16
sbb
mov
jp
aas
mov
inc
xor
lahf
cmp
push
adc
gs
add
cmp
das
jb
bnd
ljmp
pop
cmc
mov
add
jmp
push
and
xor
lahf
pop
ljmp
cmp
jno
idivb
push
lret
cltd
jne
dec
pop
inc
cld
jo
or
add
add
push
mov
push
add
add
add
add
and
idivb
dec
push
xchg
xchg
nop
pop
jge
jae
js
push
mov
xor
add
inc
xchg
test
aad
inc
outsl
push
das
pop
add
mov
add
aam
push
int
daa
in
xor
lahf
or
xchg
pop
push
ud2
inc
jno
aaa
push
sldt
add
push
rorl
and
ds
push
arpl
add
repz
cmp
pop
xor
imul
cmp
jno
sub
xor
shrl
xchg
or
cmovne
sbb
or
loop
sbb
dec
call
call
call
ljmpw
dec
lret
and
add
add
add
add
stos
jae
stos
outsl
sbb
jo
mov
pop
jp
movsl
sub
outsb
mov
mov
data16
add
addr16
test
imul
mov
cmp
adc
outsl
fimull
inc
pushf
mov
add
add
add
add
sbb
fiadds
divb
sub
sbb
jnp
and
jmp
outsl
push
loop
call
call
pushl
xchg
ja
sub
cmp
jno
cmpsb
shll
stos
mov
inc
jge
jg
rcrb
nop
out
sub
xchg
ljmp
xchg
bnd
sbb
lock
lcall
ja
cs
sub
mov
or
or
jmp
push
or
pop
jg
push
push
jge
add
add
add
add
inc
adc
add
add
add
add
and
dec
sub
add
add
and
jns
sti
xor
xchg
mov
or
jg
dec
imul
or
ss
aam
add
dec
call
addr16
pushf
pop
jp
dec
add
xchg
outsb
mov
sti
imul
call
cmp
fdivrs
mov
add
or
lock
add
jecxz
or
out
pop
sbb
stos
and
cld
les
pusha
rclb
push
and
cmp
pop
js
rcrl
push
add
or
daa
sbb
and
jge
daa
adc
test
push
add
stc
push
fnstcw
cmp
push
or
daa
xor
lahf
inc
mov
inc
dec
push
cmp
adc
shll
push
jo
jp
push
bound
outsb
or
add
add
pusha
cmp
add
jns
push
dec
cmp
js
or
push
adc
imul
inc
and
or
out
pop
ljmp
add
add
push
or
adc
addr16
cmp
dec
imul
inc
jae
add
pop
push
inc
jno
and
pop
push
popa
cwtl
pop
or
popa
or
ds
and
add
add
push
call
call
add
cwtl
push
das
sbb
and
fnstsw
sbb
imul
jno
push
pop
add
add
add
add
add
add
jno
pop
iret
sub
inc
jne
aaa
push
or
dec
std
jo
fisttpl
push
das
mov
push
add
pop
add
xchg
pop
adcl
cli
imul
aam
inc
clc
ret
pop
dec
lea
lods
js
mov
sbb
mov
dec
mov
xor
fdivrl
xchg
addr16
bsr
cmp
jge
pop
pop
jge
push
adc
cltd
pop
lock
and
cmp
dec
imul
mov
xlat
push
push
sar
jne
xchg
icebp
jbe
gs
rcrb
push
insl
and
xor
add
push
add
pcmpeqd
adc
add
jmp
and
aaa
pop
jg
cmp
daa
inc
xor
mov
fs
mov
dec
xor
sbb
inc
pop
cmpsl
pop
rclb
das
adc
add
add
add
add
mov
adc
dec
sbb
js
mov
call
call
push
std
js
ficoml
jg
loop
jle
and
add
push
push
jne
and
lock
insl
mov
enter
mov
dec
cmp
cmp
xchg
pop
sbb
mov
inc
ljmpw
fs
daa
sbb
test
gs
jno
ss
pop
js
mov
fs
xor
pop
shlb
pushf
gs
lea
add
dec
das
shll
sub
adc
jle
add
jne
dec
aas
push
pop
lret
cld
dec
in
pusha
cltd
ljmp
and
add
arpl
outsl
pop
xchg
pop
xor
mov
mov
pushf
and
cmp
or
add
add
add
add
leave
mov
ljmp
push
and
call
call
pop
or
daa
push
int3
xor
or
or
stc
adc
and
or
arpl
push
jg
jge
mov
sub
jne
js
leave
test
mov
pop
add
add
out
adc
push
out
addr16
push
dec
ja
jae
sub
ljmp
cmp
sub
xor
sub
roll
inc
mov
pop
insb
and
ljmp
pop
cmp
xor
movsl
je
mov
inc
je
mov
xor
dec
jo
call
cltd
outsb
iret
mov
add
add
add
roll
cwtl
out
pop
leave
lods
arpl
pop
mov
xor
das
int3
das
pushf
outsb
sbb
addb
js
shlb
cmp
pop
or
ja
or
jge
jle
mov
lahf
jns
js
mov
or
push
xor
and
add
and
arpl
jbe
sub
add
in
sub
jg
jnp
fimull
arpl
push
fsubrp
das
ds
adc
inc
mov
sub
jno
add
sub
cli
jle
sbb
push
ss
pusha
pop
sub
inc
pushf
jbe
cmp
cmp
mov
push
aas
out
adc
jae
add
add
xor
sub
pop
clc
jl
dec
arpl
je
enter
sub
push
push
push
jp
jl
push
outsb
sti
cmp
insb
jg
push
lods
xor
and
loop
jg
sahf
xor
mov
lds
stc
dec
mov
pusha
insl
scas
add
and
add
add
or
div
stos
pop
js
dec
jbe
sbb
bound
cltd
push
dec
adc
mov
pop
dec
rolb
cmp
leave
jl
pop
dec
mov
cs
jbe
sbb
push
fimuls
fsubl
fs
xor
js
mov
xlat
cmp
xchg
int
mov
adc
xchg
sbb
push
mov
hlt
push
insb
test
inc
mov
aaa
cmp
push
add
insl
or
aas
add
pusha
imul
xor
mov
or
daa
rcll
aas
adc
dec
fcomip
push
cmp
addb
push
add
mov
pop
or
add
add
add
add
orl
cmc
imul
out
pusha
jge
add
add
push
and
or
not
mov
rclb
sbb
push
or
pop
xchg
add
add
adc
xchg
icebp
outsl
xor
test
xchg
xchg
pop
shrb
sbb
pop
in
fsubrs
call
call
call
div
stc
jl
adc
je
adc
push
pop
xor
adc
imul
popa
ljmp
jge,pn
pop
push
mov
mov
xor
fs
cmp
pop
add
mov
add
add
add
popa
or
ret
sub
adc
push
xor
mov
imul
in
xor
test
shl
imul
in
cmp
mov
xor
and
not
mov
and
add
push
add
jp
add
test
pop
jge
inc
pusha
adc
cwtl
imul
aas
pop
or
sarl
sbb
dec
add
add
add
add
or
push
xor
pop
cs
xor
mov
sub
in
arpl
add
add
sub
ja
jne
jp
inc
pop
jo
push
ret
fs
cld
mov
outsb
es
outsb
es
push
or
insb
and
mov
inc
xchg
or
push
dec
jno
or
push
mov
and
imul
mov
pop
popa
adc
sub
inc
ss
pop
add
cvtdq2ps
imul
test
add
mov
lcall
xor
lock
divl
pop
cli
dec
aas
lock
call
call
gs
mov
data16
mov
in
sub
inc
in
jno
mov
mov
jge
int3
in
push
pop
add
sbb
leave
and
push
outsb
data16
movups
cwtl
pop
push
lods
sbb
push
adc
call
call
call
lods
scas
aas
imul
std
out
jno
stc
jmp
or
loop
into
inc
sub
sub
aad
leave
bound
jl
loope
mov
sbb
add
cs
loop
add
add
mov
xchg
pop
pushf
pop
mov
push
ret
inc
sti
push
fmulp
mov
push
shr
popa
ret
add
add
xor
xor
and
add
add
pop
inc
add
inc
mov
pusha
or
sbb
xor
jle
pop
iret
dec
enter
sbb
mov
pop
or
push
inc
cmp
push
fldl
sub
lret
mov
mov
call
ret
or
xchg
xor
or
ffree
mov
cmp
enter
add
mov
mov
mov
faddl
shrb
push
lea
push
fstpt
mov
cs
sbb
add
add
adc
icebp
add
mov
add
xchg
sbb
jae
negb
jmp
add
add
add
cmp
stc
pop
push
in
test
arpl
daa
cmp
or
imul
mov
pop
gs
push
push
inc
mov
shlb
pop
shll
loop
scas
dec
insl
sahf
aaa
mov
xchg
sbb
imul
repnz
or
push
xchg
cmp
int3
xlat
pop
jecxz
enter
mov
add
add
add
add
in
fldt
aam
cmp
mov
hlt
adc
jge
mov
fwait
out
pop
inc
adc
mov
sbb
dec
pop
pop
cvtpi2ps
scas
mov
pushf
sbb
and
cmp
imulb
or
out
lock
adc
inc
rdmsr
and
aas
xchg
and
int3
mov
add
and
mov
lods
xor
mov
jp
add
cmpsb
mov
call
or
movsb
mov
in
jb
pop
or
adc
mov
jecxz
push
aaa
inc
mov
xor
add
add
add
add
loope
in
pop
sub
cmp
dec
sarl
ss
jbe
mov
mov
call
call
dec
imul
testb
pop
jnp
std
sti
call
inc
mov
movsb
cmp
hlt
dec
adc
jp
popl
mov
pop
xor
xchg
sub
shl
jp
js
cmpsb
mov
mov
jbe
mov
out
cmc
mov
add
add
add
jbe
jbe
add
pop
scas
mov
es
mov
push
call
call
mov
mov
mov
outsl
xorb
sbbb
jb
pusha
sbb
jae
sbb
cmp
mov
icebp
fsubl
pop
stos
lcall
push
mov
push
bound
push
pop
add
add
add
cmp
xchg
mov
aaa
xchg
out
stos
sbb
sbb
insl
enter
mov
shlb
setbe
and
mov
xor
sbb
add
sub
inc
jge
and
rclb
aas
pop
cmp
lcall
sub
iret
daa
lret
aaa
aam
cmp
jns
mov
lock
inc
mov
push
or
fsub
adc
inc
das
jno
int
cmpsb
mov
add
jle
loope
stc
inc
out
scas
in
loop
aas
outsl
popf
sbb
inc
dec
sahf
mov
orb
sub
sbb
out
nop
jo
pop
shl
xor
jp
xor
subb
jp
inc
add
xchg
loopne
pop
add
pop
loope
sub
adc
sub
scas
mov
push
add
cmp
mov
ficomps
xchg
lret
jl
add
add
add
pop
sti
add
add
add
add
adc
adc
enter
sub
jns
mov
add
add
pop
jno
mov
inc
xor
cmpsb
mov
jecxz
xchg
out
mov
jb
pop
sub
push
test
cli
mov
add
pop
loope
sbb
sbb
adc
pushf
push
mov
cmc
mov
mov
out
mov
pop
pop
out
out
add
dec
es
out
and
inc
shl
enter
ljmp
and
pop
mov
xchg
push
cmp
inc
adc
iret
ret
fbstp
les
mov
sbb
adc
jo
mov
mov
sub
and
adc
popf
dec
out
and
add
push
mov
in
lods
js
mov
mov
fwait
add
add
add
pop
ds
mov
jecxz
lcall
xchg
push
dec
push
jle
lods
pop
pop
inc
mov
inc
add
pop
push
and
jp
add
rolb
mulb
pop
ds
in
xor
push
cli
in
std
sub
and
sahf
sbb
mov
outsl
pop
pop
jmp
jge
movsb
mov
inc
int3
enter
lds
dec
sbb
add
add
xchg
scas
xchg
mov
cmp
pop
mov
call
call
shrb
mov
sub
loope,pt
push
daa
dec
adc
std
mov
int
jecxz
fidivl
imul
aas
xchg
sub
adc
xchg
jecxz
jp
dec
cmpsl
les
add
add
add
cs
xlat
or
pop
xor
and
mov
lock
and
movsb
ds
mov
mov
xor
jge
lock
rcrb
dec
push
mov
scas
test
fstpt
xchg
pop
inc
ficoml
jae
inc
push
cmpsl
adc
push
sahf
dec
data16
add
add
push
xor
repz
mov
call
sub
aad
sub
into
and
fdivrs
adc
roll
mov
push
loopne
and
xor
rorl
sbb
push
faddl
icebp
mov
repz
add
aas
push
pop
ret
and
loop
sub
mov
xchg
into
nop
or
iret
inc
sub
incb
enter
pop
icebp
int
pushf
shlb
stos
call
ret
pop
aaa
mov
cmp
xchg
ljmp
mov
cmp
scas
int
pop
sub
fistps
mov
adc
repnz
mov
jmp
or
jb
seta
popa
xchg
scas
arpl
mov
mov
shlb
xchg
lahf
pop
enter
loop
inc
push
out
in
xchg
mov
bound
jns
sahf
jne
jp
pusha
or
lea
push
xchg
push
aam
imull
xor
int3
imul
mov
adc
shlb
das
ret
fsubr
push
sbb
ret
popa
enter
ret
inc
lock
dec
lea
inc
cmp
ret
das
lahf
shrb
aad
add
add
push
inc
imul
adc
in
add
lods
shl
sub
push
mov
jge
or
mov
add
add
jl
sub
sti
push
jbe
mov
and
mov
js
mov
bound
add
dec
mov
insb
push
icebp
push
xor
insl
lahf
mov
subb
nop
cs
pop
daa
scas
insb
inc
xchg
out
repnz
xchg
inc
add
fs
pop
inc
inc
inc
pop
jnp
mov
jg
mov
xor
mov
mov
hlt
lcall
push
or
int
mov
add
add
mov
cs
aaa
adc
mov
xor
or
dec
push
add
ret
dec
xchg
imul
out
out
push
adc
dec
in
and
gs
stos
insl
leave
mov
lods
push
dec
orb
add
shrl
imul
ud1
int
jp
mov
jo
dec
sbb
jg
xchg
sub
outsb
jne
call
inc
enter
adc
or
sbb
fnstcw
int3
and
iret
jnp
add
pusha
addr16
out
out
pop
ret
cs
jge
add
add
add
xchg
lret
call
mov
dec
loopne
adc
js
mov
or
ror
int3
out
test
dec
mov
lahf
into
ja
dec
mov
mov
out
cmp
jmp
xchg
popl
aaa
push
add
aad
adc
inc
adc
add
push
sbb
call
call
add
add
add
int
sbb
fwait
mov
stos
stc
aam
leave
add
sbb
mov
ss
inc
rolb
add
add
add
add
rclb
push
lcall
in
sbb
adc
fistl
sub
bound
add
nop
xor
mov
or
sub
xchg
jno
out
outsb
test
andl
sbb
data16
ja
sub
int3
push
sbb
or
int3
fisttpll
add
sbb
sbb
jecxz
or
pop
lds
and
adc
jle
add
sbb
mov
add
jb
ror
test
inc
sbb
or
inc
aad
mov
mov
pop
sub
and
bound
inc
ljmp
push
pop
dec
adc
les
scas
cli
fcomi
ret
shrb
adc
inc
test
data16
cltd
in
or
jecxz
or
addr16
push
lods
sub
add
add
xchg
rclb
jnp
sbb
pop
xchg
subl
test
shll
jmp
cmp
fidivrs
inc
dec
jge
scas
jge
push
fistpll
xor
or
sub
pop
add
add
rcrl
push
sbb
xchg
clc
sub
in
pop
loop
int
lds
cli
js
push
cmp
call
call
call
cmc
inc
dec
pushf
xor
dec
repz
fdivs
sub
inc
xlat
sub
sub
mov
jmp
cmp
pop
cwtl
dec
fmul
add
and
imulb
and
and
data16
mov
mov
lock
mov
xor
aam
addb
lock
fyl2xp1
call
enter
mov
inc
jnp
stos
cmpsb
rolb
in
stos
aaa
sbb
out
mov
das
loope
pop
cmp
call
call
call
add
les
jge
iret
jo
inc
and
sbb
cs
or
push
arpl
mov
push
add
jnp
daa
jns,pt
xchg
dec
dec
jbe
in
sbb
jns
fcmovnb
bts
lds
cmp
mov
sub
fisttpl
sahf
mov
pop
jle
mov
add
cmp
imul
shlb
xchg
outsl
ret
pusha
push
ljmp
mov
imul
jp
adc
test
stos
cwtl
add
lock
vpsllw
cli
dec
xchg
fnsave
push
sbb
dec
loop
dec
call
call
call
les
sub
leave
sbb
mov
xor
push
aas
and
test
mov
lret
push
cmp
rorl
pop
xor
in
or
lods
inc
shl
cmp
outsl
xor
int
mov
or
sbb
orl
sbb
and
mov
add
cmp
call
call
int
add
xchg
jb
loope
mov
cmp
xchg
xorl
sbb
lahf
mov
or
add
popa
scas
inc
sbb
xor
loopne
ret
imul
jp
xor
rsm
or
aas
flds
mov
inc
pop
iret
dec
lcall
push
pop
daa
jns
aaa
pop
xchg
aas
shlb
xchg
imull
int
jmp
jb
aaa
fcmovbe
push
insb
sahf
imul
ffree
cmpsl
xlat
ret
add
dec
jl
mov
scas
jecxz
ljmp
mov
inc
dec
dec
and
or
fcomps
adc
mov
sbb
sub
daa
loop
cld
cltd
cli
mov
imul
ret
add
push
dec
loop
push
test
and
stos
inc
xchg
cmpsl
push
enter
mov
mov
pop
mov
push
jnp
leave
push
push
hlt
in
or
add
add
and
cmc
cmc
lock
cli
call
call
call
dec
mov
mov
jge
cmp
xor
icebp
int
xor
add
inc
sti
cld
shl
pop
xchg
xlat
pop
outsb
notb
fwait
loop
lea
xor
pop
aad
adc
scas
test
mov
xor
sbb
jge
mov
xchg
xor
std
adc
mov
stos
mov
push
dec
addb
insb
xor
jns
add
add
inc
mov
add
add
fmuls
push
ja
adc
cmp
out
and
mov
cs
stos
jecxz
imul
les
mov
ss
add
add
add
push
inc
lods
in
shll
imul
in
add
mov
test
mov
ss
inc
gs
and
cmp
pusha
adc
push
jg
sub
dec
call
call
add
add
jge
inc
pushf
adc
dec
icebp
cmp
xor
test
push
mov
sarb
mov
or
nop
mov
iret
rep
adc
mov
mov
aad
stos
sub
inc
call
call
dec
and
dec
lock
add
add
add
icebp
mov
shrl
stc
and
je
cmc
inc
jne
stc
jne
inc
mov
pop
push
sbb
sbb
lods
add
add
mov
int3
popf
int
add
add
add
pushf
ss
pop
push
sarl
repz
jle
fldenv
iret
stos
outsb
add
pushf
cmpsl
jae
lock
aaa
test
xchg
imul
les
add
add
add
add
jl
mov
inc
adc
cmpl
lods
data16
dec
cmp
xchg
mov
inc
fsubl
lock
sbb
mov
inc
mov
std
cld
out
pop
jp
xchg
sub
call
rcrb
add
int
pop
cmpsb
repnz
jb
push
adc
sub
gs
inc
ret
loopne
fucom
cld
xchg
mov
cmc
aam
mov
daa
popa
inc
addw
sbb
cmp
push
popf
sbb
cld
repnz
inc
in
or
dec
addr16
add
fdivrl
icebp
xlat
mov
fcomps
shr
imul
test
push
fdivr
fcomps
es
cmp
mov
shlb
add
add
add
arpl
cli
movsb
sub
fimuls
jmp
leave
mov
std
inc
pushf
sbb
jnp
shlb
xor
mov
lock
in
cmp
shlb
int
cmp
out
inc
sub
pop
mov
out
adc
test
inc
call
call
call
xchg
mov
sbb
loop
ljmp
or
sub
shll
mov
pop
dec
or
data16
adc
mov
pop
test
popl
add
sub
fmull
jle
push
lea
fs
icebp
cmp
cltd
test
rcrl
in
cltd
cmp
inc
out
fcompl
inc
xchg
scas
incl
inc
mov
lret
mov
and
insb
fmuls
repnz
inc
dec
cmp
mov
add
rorl
out
sbb
fdivrp
sti
pop
roll
ja
out
int3
jg
sub
call
arpl
aam
add
add
sahf
lock
pxor
rcll
add
sub
je
push
imul
pop
sbb
mov
aad
lahf
add
call
call
call
mov
mov
mov
dec
mov
jl
insl
data16
les
out
fcom
sub
aad
sarl
add
add
add
add
loope
ljmp
ds
adc
cmp
inc
repz
adc
jmp
sub
mov
push
aaa
mov
adc
sarb
aad
mov
push
jo
movsb
jg
and
xchg
stos
push
mov
pop
dec
in
clc
inc
int3
or
mov
pushf
ljmp
add
imul
xor
ror
rep
jae
push
sub
xchg
call
call
push
mov
loopne,pn
es
popa
xor
cmp
pop
aas
cli
out
and
or
inc
dec
rorb
or
dec
push
hlt
in
movsl
jnp
sub
adc
out
mov
repz
jmp
fdiv
icebp
es
mov
mov
fdivr
aas
jne
loop
fstl
sbb
jne
aam
mov
adc
pusha
cmp
mov
xchg
int3
mov
imul
and
insb
mov
xor
sub
or
addr16
cld
int
jecxz
shll
pcmpeqd
hlt
xchg
cmp
push
popa
pop
add
cli
or
stos
sbb
mov
mov
sub
inc
inc
out
adc
sti
push
popf
pop
mov
cld
sbb
push
repnz
dec
daa
sbb
dec
pop
fsub
dec
lret
or
xor
sbb
add
icebp
cmp
mov
pop
insb
adc
sbb
movsb
or
inc
adc
mov
mov
fnstcw
std
sub
or
add
add
out
sbb
jge
call
call
add
xchg
test
repz
adc
mov
lahf
icebp
mov
push
inc
imul
and
sbb
and
or
fmuls
or
jg
rcr
je
sbb
ljmp
repz
fwait
daa
add
cmp
pop
sar
cmp
sub
add
add
add
movsb
inc
adc
cmp
fwait
daa
jbe
cld
cmp
pop
fldl2e
cmp
nop
cli
push
xlat
cld
cmc
rcll
call
sub
xchg
leave
shlb
jg
mov
push
mov
repnz
cmp
insl
fs
jo
adcl
lds
ret
sub
add
add
xchg
mov
adc
dec
std
popa
jnp
sub
outsb
mov
inc
pop
clc
jae
jbe
sbb
daa
out
aad
sub
rolb
stc
jbe
xchg
loop
mov
ja
daa
jecxz
dec
jbe
mov
jo
outsb
xchg
bound
mov
push
push
fwait
mov
jne
add
sbb
or
stos
into
pop
arpl
xchg
cld
adc
sbb
add
add
add
add
add
and
or
inc
xor
fucomi
pusha
xor
hlt
arpl
iret
mov
sbb
or
add
mov
mov
loope
jns
in
shrl
aas
arpl
fstpl
pop
lret
int3
pop
push
add
add
dec
cltd
inc
das
adc
lret
adc
int3
fs
shrb
sbb
jnp
subl
call
call
imul
sbb
dec
cmp
es
sub
xchg
pop
add
xchg
out
das
dec
lret
jnp
das
pop
sbb
test
shrb
add
mov
sbb
stos
dec
dec
push
imul
ss
adc
mov
insb
sub
mov
and
rsm
mov
cmp
inc
sbb
inc
pop
sbb
repz
xor
add
dec
jp
stc
sub
sbb
hlt
sub
cmpl
add
add
add
add
cmc
xchg
add
movsb
or
fiadds
imul
mov
bound
xchg
xchg
add
add
add
int
push
xchg
and
int3
outsb
jmp
inc
adc
jb
jecxz
jle
in
and
gs
dec
mov
lcall
adc
repz
out
adc
push
popf
mov
sub
dec
fcoml
or
sub
stos
pop
jbe
imul
add
sbb
loope
imul
or
sub
push
cmp
xchg
xchg
push
mov
mov
dec
sbb
pop
adc
dec
jnp
jnp
clc
add
pop
and
lret
push
gs
pop
or
push
xchg
dec
push
push
pop
add
je
cld
loope
mov
es
call
call
call
inc
sub
mov
lret
insl
pop
mov
add
jnp
outsl
cmovb
adc
sbb
mov
sbb
test
mov
sub
js
lcall
inc
push
dec
jb
sub
dec
dec
push
fimuls
mov
add
xorb
mov
insl
lock
iret
pop
repnz
out
and
sub
add
sbb
std
lods
or
jne
and
insl
mov
xor
add
add
add
add
push
es
mov
imul
imul
jge
and
sub
adcb
cld
inc
add
adcl
call
call
and
push
add
add
repnz
push
mov
add
or
roll
adc
dec
and
inc
lea
add
cwtl
sub
fldenv
add
data16
mov
dec
push
cwtl
adc
aas
push
mov
adc
add
dec
xor
repnz
xor
cmp
push
xlat
sbb
xor
add
fsubs
daa
push
and
adcl
add
add
push
jle
aas
js
push
push
xchg
dec
jo
mov
sub
sub
cs
cli
mov
cmp
xor
mov
add
inc
ss
push
mov
out
pushf
push
jbe
mov
cwtl
popa
sbb
iret
arpl
jecxz
push
push
lock
mov
fisubrs
rcl
ss
in
push
mov
shll
dec
push
push
dec
mov
and
sbb
cmp
stc
mov
fisubs
push
pop
in
sub
cmp
push
pop
inc
cmp
sbb
mov
add
add
add
cld
sbb
push
mov
and
test
jle
adc
or
std
leave
and
xor
pop
insb
movb
nop
cmp
or
fildll
push
rolb
pop
adc
ret
xchg
gs
xchg
and
inc
mov
add
inc
hlt
adc
mov
sbb
inc
insb
add
jae
or
cli
ss
outsl
sbb
subb
sbbl
mov
push
cmp
dec
xor
in
lock
mov
rcrl
push
mov
pop
clc
mov
stos
ror
jle
sub
push
pop
add
add
add
dec
addl
das
dec
dec
cltd
jg
jns
cmp
inc
adc
inc
jle
frstor
push
xchg
int3
sub
sarl
mov
dec
pop
cmp
jne
mov
add
sub
add
pop
and
pop
add
movsl
cmp
add
add
mov
das
add
jne
sub
loope
add
outsb
das
inc
addr16
jp
fs
mov
dec
jo
stos
pop
adc
push
cmp
inc
ljmp
into
in
mov
pop
lods
pusha
notb
leave
xor
xchg
mov
ret
cwtl
inc
ss
push
adc
mov
add
stc
jbe
mov
and
sub
mov
mov
cmp
ret
enter
or
pop
roll
mov
or
pop
dec
mov
fsubrl
imul
and
add
add
pop
es
sarl
call
outsb
sbb
call
call
fidivl
adc
inc
push
push
push
int
pop
add
adc
pop
leave
cmp
xlat
adc
sbb
outsl
dec
jno
ja
cwtl
into
add
repz
sub
push
out
dec
dec
or
mov
dec
add
add
push
xchg
pop
dec
lods
ret
lret
adc
dec
jg
and
jp
jmp
mov
call
call
scas
pop
lcall
movsl
xor
pop
sbb
inc
add
mov
pop
dec
jo
rcrb
push
jmp
xlat
mov
rcrl
jne
jp
in
int3
jnp
fisubs
jne
push
shlb
gs
add
xor
cltd
adcl
xor
cmp
stc
pop
adc
xor
xchg
add
add
add
add
and
lcall
rclb
jno
mov
es
cmp
pop
fiaddl
add
add
add
inc
in
pop
or
mov
ja
mov
push
dec
dec
imul
insl
pop
jl
ret
insl
insb
addr16
das
outsb
inc
xor
jbe
les
or
add
in
push
mov
push
imul
aaa
daa
xor
jns
gs
or
cmp
in
sbb
xor
aaa
lret
dec
add
aaa
test
jno
repz
adc
push
ret
sub
std
pop
sub
add
add
cmp
cmp
push
repnz
sarl
and
inc
mov
sbb
daa
add
adc
jge
das
push
or
sub
arpl
sbb
ss
iret
clc
adc
inc
cltd
addl
adc
data16
and
imul
xor
call
call
call
sbb
pop
dec
inc
lods
orb
in
pop
wrmsr
int3
imul
mov
pop
xor
jno
adc
cmp
push
dec
cld
mov
ja
push
push
lcall
adc
push
mov
mov
ja
lahf
cmp
or
push
add
jl
dec
popl
dec
xor
inc
adc
sbb
jge
es
movl
add
add
add
jb
sbb
add
add
add
jae
sub
jge
add
ss
dec
jne
cmovge
lea
xchg
xchg
sbb
mov
inc
into
cmp
xchg
mov
loopne
xchg
loop
add
insb
test
sub
or
add
add
shrl
daa
loopne
out
adc
mov
jne
call
call
and
inc
dec
nop
push
add
ret
pop
adc
insb
loope
jl
mov
xor
inc
insl
pop
shrl
fmull
add
push
bound
aam
push
je
iret
insl
pop
inc
les
out
add
pop
push
mov
jns
in
sbb
lret
and
gs
sub
mov
sbb
data16
push
out
fisubrs
push
mov
test
xchg
clc
mov
inc
mov
push
sub
pop
add
add
add
add
dec
sub
cmpsl
dec
pop
lret
mov
pop
xor
mov
sub
dec
mov
inc
inc
fcoms
mov
je
pushf
std
dec
push
cmc
call
adc
dec
xchg
add
add
xorl
fisubs
inc
inc
idiv
adc
pop
subb
jnp
jge
call
pusha
pop
jnp
divl
je
jmp
dec
push
aas
dec
sahf
xchg
addr16
add
sub
filds
pop
outsb
push
cmp
xchg
int
pushf
sub
jp
sbb
inc
xchg
repz
arpl
pop
xchg
pop
testb
pop
xor
xor
pop
popa
js
in
push
add
add
bound
fidivl
add
fmull
push
imul
aaa
enter
pop
dec
arpl
cmp
and
pusha
clc
fistl
xchg
or
and
dec
xor
or
aas
lods
jae
and
cmp
add
lock
xchg
inc
sbb
pop
aad
ret
pop
xor
mov
sub
cwtl
push
sbb
iret
or
fdivrl
and
pop
popf
pop
repz
pop
mov
and
pushf
lods
mov
cmp
test
fsubp
enter
inc
xchg
fiaddl
add
add
add
add
pop
shl
push
cmp
rcrl
sbb
pop
sbb
pop
push
inc
addr16
jecxz
cmpsl
jge
pop
mov
dec
xchg
cmp
loop
xor
loope
push
mov
add
add
add
in
pop
mov
insl
je
aam
sbb
dec
test
add
jmp
ss
clc
cli
cmpsb
push
mov
scas
fwait
mov
add
add
cmp
aad
push
lock
pop
push
ret
sub
sbb
int
js
data16
cmp
pop
lock
pop
aaa
mov
mov
add
add
stos
pop
dec
xor
lods
pop
jmp
mov
mov
shrb
add
rorb
pop
clc
sub
add
push
int3
push
dec
dec
xchg
or
push
inc
or
mov
inc
gs
push
mov
add
jb
push
dec
lods
mov
push
jo
scas
push
in
test
dec
daa
mov
daa
test
divb
and
clc
xor
repnz
or
xor
rol
add
movl
pop
cmc
xchg
xor
out
mov
dec
in
pop
sbbb
add
add
add
add
add
add
add
add
adc
push
push
movsl
enter
mov
stc
imul
mov
adc
and
dec
rclb
adc
push
pop
mov
jne
sub
sti
push
push
mov
mov
call
call
cmpsb
inc
xor
mov
pop
aam
push
xchg
sbb
cmp
push
leave
lods
sbb
adc
add
add
add
enter
and
imul
jmp
test
add
xchg
xor
insl
ret
sbb
adc
test
notb
adc
lock
jp
fcmovb
bound
sub
jmp
jl
add
add
lret
jnp
dec
les
xor
fwait
mov
ffree
mov
cmp
fcompl
push
push
jno
dec
jno
and
cmpsl
stc
push
add
rcrb
xorl
dec
push
fstpl
sbb
daa
pop
adc
cmp
insb
das
je
sub
cmp
jno
lock
es
and
inc
inc
lock
cld
or
push
adc
stc
les
adc
ds
int3
add
xor
xor
je
add
add
add
sbb
pop
mov
gs
fs
push
pop
ja
add
add
push
adc
fnstcw
nop
aas
sbb
xor
into
pop
add
lock
adc
cmp
mov
push
or
jno
jle
or
push
lcall
add
add
add
adc
jno
lret
adc
add
insb
adc
in
daa
fsub
xchg
jp
pusha
iret
jb
cwtl
dec
inc
in
das
xorb
cmp
xor
imul
jns
xor
call
stos
xor
adc
add
add
add
out
aaa
add
jae
cltd
inc
mov
dec
repz
pop
je
mov
clc
mov
sbb
sub
add
divl
sbb
or
je
sub
sub
das
dec
aaa
cmp
jnp
add
fildll
jbe
add
jne
push
add
imul
popa
pushf
or
jmp
dec
inc
push
push
and
int
cmp
testl
pop
out
pop
jno
aad
ss
lret
les
ret
adc
test
stos
xor
arpl
inc
dec
ds
mov
es
inc
mov
scas
or
aaa
cmp
add
xor
sbb
in
sub
push
add
jl
fistl
fistl
pop
jge
cmp
out
adc
cmp
or
xchg
add
dec
dec
sti
scas
inc
cmc
push
jbe
jnp
jo
ret
dec
jmp
push
jl
jge
inc
pop
inc
leave
add
ljmp
pop
inc
push
add
dec
pop
mov
jne
push
cmpsb
jne
sbb
lcall
push
lret
mov
sub
fimull
add
filds
push
adc
cli
call
call
call
sbb
push
mov
ds
mov
stos
out
lahf
sub
sbb
ret
add
add
add
enter
test
or
pop
and
pusha
and
insb
filds
add
add
ljmp
sbb
push
cmp
add
add
add
icebp
add
mov
add
sbb
shlb
add
adc
pop
in
in
xor
and
mov
sub
pushf
ja
add
call
and
cwtl
sbb
adc
or
inc
pop
cmp
mov
xor
xchg
andb
mov
ja
hlt
lcall
jb
call
call
in
push
mov
adc
sub
add
add
add
add
xor
outsb
push
push
test
jnp
pop
fildl
loopne
pusha
mov
sub
xchg
add
add
add
add
add
es
sbb
xchg
jbe
pop
and
jge
fwait
sbbb
mov
and
jbe
jg
or
lret
or
push
and
jl
outsl
jnp
fwait
call
call
call
in
and
adc
push
xor
call
call
lea
xchg
arpl
add
push
xchg
lods
lcall
cltd
sub
lret
cmp
sahf
add
add
dec
jb
fiaddl
adc
inc
dec
fs
add
popa
xor
pop
inc
das
lret
sbb
bound
rcrl
add
add
add
int3
push
adc
jmp
fs
cmp
daa
jnp
jmp
pop
adc
sub
xor
dec
xchg
das
dec
outsl
inc
adc
xor
pushf
adc
fadd
xchg
or
add
inc
fnsave
and
bound
aad
inc
jbe
pusha
and
pop
or
xor
imul
dec
pop
inc
aad
jecxz
jp
dec
dec
pop
rclb
insl
inc
inc
daa
rorl
fadds
push
fmuls
sub
movsl
push
sbb
loop
pop
add
sbb
int
push
or
jno
sub
and
bound
xor
sbb
adc
pop
dec
adc
sahf
pop
pop
and
jbe
xor
inc
aas
cmp
xchg
sarb
mov
adc
or
add
cmpl
inc
sub
fisubl
cs
es
push
push
and
ret
cmp
mov
pop
and
jl
add
add
mov
loop
push
add
pop
sub
insb
loop
imul
add
dec
fsubrl
add
add
add
dec
or
mov
add
repz
push
cmp
or
or
outsb
stos
sub
addr16
je
outsb
and
ret
or
adc
mov
add
add
add
and
dec
adc
je
cltd
sub
mov
scas
push
sti
push
clc
or
xor
and
sbb
sahf
mov
pop
dec
lret
aas
sub
xchg
ds
lret
jnp
call
call
call
ja
xor
sbb
decl
outsl
jle,pt
dec
insb
adc
add
sub
dec
sahf
leave
movsb
dec
fcoml
and
loope
jae
add
mov
inc
xchg
movsl
jp
out
test
sub
stos
js
mov
inc
popa
lock
add
outsl
and
jb
pop
test
cs
shl
imul
ss
or
out
dec
ret
add
jl
inc
out
lock
mov
or
sub
push
push
mov
and
push
push
inc
popa
push
cs
bound
jbe
add
add
add
add
sub
push
sub
push
xor
imul
scas
sub
inc
mov
cmp
mov
sbb
cmp
dec
and
add
fistps
adc
cli
xor
mov
add
mov
push
clc
push
sbb
jns
mov
xor
and
add
mov
xlat
or
mov
mov
push
mov
add
add
add
xor
add
lret
in
inc
add
add
add
add
sub
add
add
add
add
inc
shlb
cmpsl
and
mov
pop
sbb
scas
cmpsb
xor
fdivr
enter
cmp
cmp
shrl
pusha
addr16
jecxz
dec
and
add
arpl
ss
cmp
and
out
dec
or
pop
add
daa
call
push
out
outsb
lret
fcompp
adcl
mov
or
add
add
mov
jo
adc
pusha
add
cvtps2pi
lods
jae
inc
loop
js
jae
xchg
ja
add
pop
fiaddl
mov
push
cld
xchg
aas
das
jl
js
rolb
inc
add
add
dec
ds
xor
adc
dec
mov
pop
roll
test
push
fidivl
pop
jle
sub
push
popf
and
mov
jno
add
subl
ljmp
add
add
add
xor
lods
dec
mov
movsl
and
dec
rorl
hlt
and
sub
sahf
mov
jae
pop
or
xchg
imulb
inc
cld
icebp
sub
adc
pop
and
imul
cmc
add
cltd
add
inc
in
jp
movl
sbb
or
push
push
and
mov
mov
xor
dec
inc
push
sbb
cmp
adcl
in
inc
ja
sub
popa
mov
add
jp
fucomi
add
scas
xchg
pop
inc
xchg
pop
fs
adc
pop
repnz
cmpsb
mov
add
es
sub
jae
hlt
fildl
jne
int
data16
outsl
xchg
sbb
pop
inc
add
dec
test
ljmp
sbb
flds
cmp
add
sbb
dec
xchg
adc
shlb
imul
imul
test
sbb
add
add
out
inc
pop
sbb
pop
cmp
inc
lahf
leave
ds
fs
jge
dec
loop
pusha
aas
pop
or
enter
call
call
insb
inc
jecxz
in
adc
loope
jle
test
add
push
xchg
or
push
ljmp
dec
arpl
mov
in
push
pop
dec
add
or
jp
dec
mov
push
icebp
jnp
clc
push
add
es
push
outsb
xor
addr16
ljmp
bound
call
call
push
push
jo
sub
jns
push
and
jnp
dec
int3
jne
mov
testl
or
push
mov
inc
inc
cmp
mov
arpl
add
add
add
add
stos
jae
sbb
pushf
add
inc
push
ret
rcrl
and
jns
and
dec
dec
push
sub
sbb
call
call
rol
popa
jl
es
shr
add
fistpl
ret
cmpsl
lds
mov
xor
inc
stos
jo
mov
repz
add
cmp
sbb
add
mov
inc
xchg
in
add
cmp
pop
pop
loopne
int3
test
mov
aad
adc
arpl
bound
out
loop
ss
push
push
jae
and
rorb
clc
xor
push
push
push
xor
imul
push
xchg
add
jns
arpl
pop
push
adc
jp
xor
dec
or
frstor
push
xchg
or
sub
xchg
cmp
mov
daa
shll
cmc
int
popa
xchg
mov
cmova
stos
rol
sbb
ja
pop
sbb
sahf
xchg
push
or
and
mov
add
add
add
add
loop
xor
mov
pop
and
ret
ja
add
xor
sbb
pop
inc
and
jbe
call
call
call
sub
mov
rclb
dec
out
mov
sub
lahf
lods
add
pop
dec
rclb
jae
dec
fisubrs
sbb
sbb
fimull
dec
in
dec
jg
push
mov
test
popa
xchg
mov
jno
inc
jg
cld
jae
or
push
insl
bound
cmp
lret
popa
arpl
or
outsb
fdiv
js
dec
add
dec
das
loope
dec
adc
popa
cli
sbb
sbb
inc
jns
inc
sub
add
add
add
add
cmp
mov
inc
and
cmp
repnz
add
and
sarb
adc
adcb
push
jno
addr16
jno
mov
push
ss
adc
add
outsl
addr16
add
outsl
and
out
jp
inc
imul
adc
add
xchg
repnz
push
sets
sbb
adc
lret
sbb
mov
daa
gs
mov
jnp
test
aas
dec
sbb
and
add
or
dec
mov
outsl
mov
mov
pop
loop
leave
jg
loope
sub
jmp
adc
add
add
jne
mov
imul
dec
jmp
ss
or
aaa
mov
in
mov
ja
sbb
dec
sbb
mov
call
call
jns
aad
inc
dec
mov
inc
sub
aam
arpl
add
push
cmc
mov
cld
mov
sbb
or
loop,pt
shlb
add
in
mov
cld
std
or
arpl
dec
movsb
ss
ret
cltd
cmpsl
dec
sbb
fistpll
imul
add
jno
dec
mov
cmovae
inc
pop
pop
loope
loop
test
jno
push
adc
loop
jae
daa
lret
jmp
sbb
dec
add
pop
js
sbb
sbb
and
and
add
dec
inc
mov
xor
mov
push
cmp
jp
add
push
iret
out
adc
add
sbb
adc
jp
adcl
repnz
dec
dec
mov
sub
jle
cld
fimuls
cmpsl
call
add
bound
cmc
or
xchg
enter
sub
add
out
dec
xor
sbb
jnp
add
adc
aas
inc
fisubrl
or
mov
add
cmp
movsb
dec
mov
mull
arpl
dec
mov
mov
ret
movl
cmp
add
add
ds
cmp
mov
jmp
jge
call
js
insb
pop
cmp
xor
jb
out
das
dec
cmpsl
adc
jle
negl
xor
jge
or
add
add
imul
aad
push
orb
das
xchg
sbb
push
mov
sahf
or
repnz
scas
cltd
sub
in
add
scas
cs
repnz
out
push
adc
pop
pop
sbb
or
sub
pop
inc
adc
xor
mov
push
sbb
lock
mov
mov
out
push
push
push
flds
sub
js
jle
pop
push
cmp
pop
adc
push
jg
cmp
pop
or
je
sbb
mov
mov
adc
aas
xchg
bound
dec
jo
fimuls
inc
cmp
jo
sbb
ss
cmp
xchg
arpl
add
adc
or
cmp
movsb
dec
jb
add
divb
adc
push
add
dec
das
mov
jo
stc
mov
js,pt
int
mov
scas
fmull
push
add
jge
and
shlb
and
in
inc
sbb
inc
push
insb
ret
pop
inc
and
pusha
pop
add
add
add
sbb
jne
data16
pop
jmp
data16
loope
xor
insb
and
push
pop
or
daa
cmp
sbb
outsl
daa
cmovle
call
call
call
jne
jne
and
ffreep
daa
jecxz
jbe
cmpsl
push
jle
loopne
jns
daa
sarl
imul
sbb
add
add
xchg
pop
or
iret
ss
nop
pop
mov
addr16
pop
sbb
xlat
in
xor
mov
add
add
add
push
cmp
out
movsl
sub
or
pop
dec
and
dec
je
fmull
faddl
fidivs
sarb
nop
bnd
and
jns
sub
lds
jl
or
push
cmp
fimull
sub
add
add
cmp
push
mov
adc
les
pop
lds
jl
fucomip
arpl
jbe
fst
cmp
dec
jno
es
js
cmpb
inc
cmp
je
push
jg
push
sub
adc
and
and
sub
jmp
fisttpll
add
add
add
add
jge
sub
inc
movsl
push
pop
push
mov
xlat
and
sbb
pop
and
pop
lock
push
mov
mov
push
adc
xchg
pop
lock
aas
pop
rorl
push
cmp
test
add
jl
into
ss
sub
fmul
sbb
daa
dec
outsl
cltd
leave
cltd
dec
int3
lods
add
add
add
add
call
pop
or
loope
push
insb
mov
repz
mov
dec
pop
sbb
cmp
lods
adc
cmp
call
call
call
int3
ljmp
dec
pop
fadds
das
inc
int3
xchg
add
push
shlb
jp
push
and
cmp
xorl
test
adc
pop
aad
sbb
popf
inc
pop
add
add
add
add
psllw
shrb
inc
pop
add
mov
aad
outsl
fdiv
push
lods
data16
roll
dec
cmp
lods
fwait
stos
push
add
dec
mov
ljmp
add
jmp
insb
sbb
data16
sti
repnz
add
ss
pop
cmove
cmc
outsl
cltd
xchg
imul
xor
xor
sbbb
and
and
or
jg
xchg
pop
imul
add
add
cmc
data16
push
sbb
jne
and
iret
fildll
mov
add
add
fldl
pop
push
in
dec
jae
and
add
ss
or
push
js
fldl2t
pop
push
mov
xchg
pusha
lea
adc
and
mov
xor
out
outsl
fcoms
pop
or
xor
cltd
loopne
mov
mov
sub
rcll
sbb
fs
add
adc
push
push
jl
mov
fdivr
jnp
aas
dec
jo
out
filds
or
mov
add
imul
es
push
add
push
add
or
add
adc
in
jl
jne
jp
je
or
fcoml
sbb
dec
jo
leave
sub
push
int3
lock
lahf
ss
leave
pop
pop
push
jp
inc
or
pop
cmp
jo
in
add
add
push
cmp
leave
pop
aad
sub
or
inc
sarb
or
push
push
cwtl
idivb
inc
das
jecxz
mov
call
call
dec
push
jg
dec
xchg
pop
jge
outsb
es
push
and
pmuludq
push
jbe
dec
add
testl
add
stc
pop
outsb
and
push
or
push
ljmp
dec
xor
sbb
xlat
xchg
inc
bound
loope
push
cmp
call
call
xchg
shll
add
arpl
add
add
add
add
fwait
imul
pushf
push
mov
daa
add
inc
imul
xchg
arpl
or
pop
add
sbb
mov
verr
push
sub
pop
or
add
add
xlat
inc
ja
sub
leave
gs
leave
pop
cwtl
xor
sub
or
ljmp
ss
fisttpll
dec
jb
lcall
faddp
inc
data16
lds
xor
faddl
add
or
ds
out
movsl
sti
repnz
push
mov
popf
imul
aas
add
add
add
add
add
add
fimull
stos
and
fisttpll
or
js
add
add
imul
adc
push
xchg
sbb
push
mov
sbb
or
leave
jle,pn
divl
jp
cmpsl
out
scas
push
push
mov
xchg
pusha
cmp
sbb
test
add
loopne
jl
cld
sarb
je
jnp
stos
fdivr
js
orl
dec
mov
push
and
fwait
imul
call
call
call
cld
mov
pop
xor
mov
add
jo
lock
and
rolb
pushf
push
sbb
inc
or
and
imulb
cmp
movlps
sub
cmc
or
nop
sub
add
add
add
add
das
shll
cmp
in
dec
xor
vunpcklps
imul
sbb
xchg
adc
test
ficompl
data16
notl
pop
adc
mov
cmp
sub
hlt
cmp
sub
ds
xor
sub
and
sbb
xchg
mov
and
stos
test
fwait
out
outsl
push
mov
cmp
sbb
pop
and
enter
mov
insl
hlt
mov
movsl
and
fisubs
int3
xor
push
xchg
imul
int3
pushf
cmp
pop
imul
add
sub
mov
dec
sbb
rorl
sbb
stc
mov
cld
in
push
mov
shl
popa
dec
repz
insb
sub
mov
test
mov
push
sub
dec
pop
sub
sub
stos
xor
xor
pop
mov
cltd
sub
imul
mov
mov
add
daa
pop
sti
xchg
push
lret
jle
mulb
cltd
pop
outsl
pusha
mov
lret
pushf
pop
and
ja
xor
xchg
dec
or
call
ret
xchg
enter
add
add
rorl
jp
mov
push
out
pop
lret
jno
push
aad
ljmp
es
mov
sub
ss
bound
and
call
call
sub
insl
xchg
ds
ss
sub
insb
sub
loop
inc
and
outsl
add
pop
cmp
jno
syscall
pop
xor
lcall
test
loope
out
in
sti
adc
push
inc
add
add
sbb
inc
leave
ret
jle
inc
mov
cmp
shl
mov
jns
pop
jbe
bound
ret
jle
or
fisubrl
loop
popl
sbb
pop
or
hlt
pop
jge
in
add
inc
mov
xchg
cmc
cmp
es
add
add
lahf
cmp
leave
fldenv
xchg
data16
lahf
or
iret
es
fildl
stos
and
mov
imul
cs
push
popa
dec
enter
ja
insl
in
xchg
aam
xchg
jns
cmp
or
rolb
jl
dec
push
push
fiadds
leave
add
push
add
add
mov
sbb
in
cs
inc
lds
lods
mov
pop
xlat
push
pusha
pop
sahf
sub
pop
or
cmpsl
jg
das
jp
adc
jmp
push
xchg
stos
add
rcrl
ss
lds
loopne
mov
add
add
add
lret
cmp
pop
fsubrs
xlat
push
fcom
in
out
aaa
sbb
fistpll
in
jne
lahf
in
sti
push
ret
cmp
mov
add
add
add
loope
arpl
mov
adc
mov
push
mov
jg
add
inc
in
pop
pop
jmp
call
call
es
xor
je
popa
cmpsl
notl
sbb
cmp
mov
mov
xchg
test
cmp
jecxz
xchg
push
jle
subl
and
pop
sbb
add
mov
jmp
adc
cld
fisubs
xor
mov
mov
imul
xor
mov
fbstp
aas
enter
or
cld
lea
fildll
add
add
add
jno
and
mov
mov
inc
jne
adc
aas
cmp
adc
xchg
mov
jb
push
cmp
add
lcall
or
jno
mov
cmp
jb
ja
mov
push
sub
in
repz
pop
add
daa
int
test
dec
or
jecxz
xchg
jbe
pop
decb
out
or
jo
push
and
js
and
push
mov
push
adc
add
test
xor
jnp
stos
mov
imul
call
call
test
dec
and
mov
sahf
xor
jmp
setae
icebp
arpl
dec
aaa
jo
pop
insl
scas
bsf
sub
adc
jnp
sbb
dec
rcrb
pusha
fnstenv
mov
addl
add
test
add
outsb
js
outsb
sub
push
mov
pop
push
movsl
and
fsubrp
sub
cmp
sbb
add
add
test
push
xchg
add
shll
jecxz
pop
pop
push
jl
cmp
shll
or
add
cwtl
mov
imul
je
popf
popf
push
scas
adc
or
add
add
or
lahf
sub
add
add
add
fdivrl
adc
ret
loop
and
out
mov
sahf
cmp
leave
bound
ss
in
sub
call
fcoms
enter
test
pop
dec
scas
inc
add
call
sub
insb
fldenv
leave
aam
push
sbb
xchg
sub
cmp
mov
rolb
ja
loopne
jmp
xchg
mov
cmpsl
and
sbb
cmpsl
add
sti
xor
jmp
sbb
fadds
inc
fcompl
push
or
cld
bound
je
pop
in
sarl
xor
and
divl
jecxz
add
pop
xlat
or
push
xor
push
loop
aaa
mov
leave
lcall
push
fcoms
xor
call
call
stc
pop
lock
sbb
add
and
cmp
dec
fs
xor
popf
sbb
test
xor
cmp
mov
dec
outsb
lock
xchg
mov
cmp
xor
and
inc
mov
add
nop
xor
rcll
cs
outsb
push
cwtl
jbe
jne
pop
pop
mov
insl
lock
fldenv
mov
pop
jo
out
or
push
fdivs
push
dec
out
pop
inc
inc
fisttps
mov
pop
lock
adc
pop
adc
push
shlb
push
ja
adc
push
incl
mov
add
add
add
mov
or
fwait
daa
data16
lcall
negl
or
dec
sub
add
add
add
add
or
out
cld
hlt
addr16
lock
cmp
mov
outsl
fcomi
cmp
test
add
lea
cmp
adcb
mov
xor
repnz
add
or
cmp
fistps
inc
in
call
call
call
adc
jge
ret
mov
pop
add
dec
jmp
xor
add
add
cli
xchg
outsb
ret
sub
aam
pop
lods
xchg
rolb
add
sbb
mov
std
jnp
call
fisttpll
sub
or
or
inc
adc
out
xor
sbb
push
xchg
or
jmp
in
adc
add
add
in
xor
jno
jg
pop
sbb
icebp
add
mov
int
mov
insb
lods
dec
push
lret
addb
add
add
add
add
cmp
xor
mov
stos
outsl
testb
xchg
xor
test
xchg
repz
pop
mov
jecxz
push
dec
push
inc
or
mov
out
call
call
call
fwait
in
in
shlb
jp
mov
outsb
push
xor
push
mov
push
pop
mov
sbb
filds
insb
shl
in
add
add
add
add
pop
pop
xlat
xor
stos
into
rorl
lock
je
ja
inc
mov
push
icebp
xchg
cmp
and
fwait
dec
adcb
mov
dec
pushf
cmp
mov
add
add
add
add
add
decl
jbe
pop
pop
testl
add
add
add
lock
mov
test
mov
fsubl
pop
popa
or
adc
mov
ds
sbb
inc
adc
mov
shlb
xchg
mov
add
clc
outsw
mov
xchg
les
push
xchg
aaa
sbb
push
adc
hlt
pop
jmp
add
add
add
add
pop
mov
ficoml
dec
aad
arpl
mov
push
cld
sub
ljmp
jns
dec
or
and
inc
ret
in
daa
xchg
jnp
outsb
xor
test
test
add
add
add
add
insl
imul
sbb
int
add
mov
add
add
add
add
adc
int3
cwtl
cmp
mov
outsb
add
jo
cmpsl
clc
fsubr
movsb
mov
adc
mov
cmp
lcall
pop
fwait
and
outsb
mov
and
and
movsl
sbb
movsl
sub
inc
inc
and
xchg
rorb
xor
scas
pop
add
or
sbb
jns
cmp
xor
lret
psllw
mov
xchg
call
call
call
cmc
xor
add
mov
pop
xchg
clc
adc
fnstenv
lret
addr16
xlat
xchg
or
sbb
inc
sbb
inc
mov
jecxz
push
call
call
or
call
mov
outsl
sbb
or
jmp
add
add
add
add
fstl
mov
and
or
call
call
test
sbb
loope
ja
xchg
ss
cmp
jle
mov
inc
jmp
push
adc
clc
sub
scas
out
inc
sbb
mov
add
call
sahf
sbb
mov
cmp
or
add
add
icebp
inc
mov
add
add
jno
xchg
mov
mov
roll
or
loop
dec
cltd
mov
call
call
adc
fisttps
push
pop
xchg
mov
jno
rcrb
lret
jns
push
cmp
inc
mov
mov
loopne
loopne
pop
or
ja
test
add
add
add
clc
jl
pushf
add
add
call
call
call
shl
mov
lock
loopne
gs
mov
enter
add
loop
call
call
call
lcall
inc
mov
cmp
in
lods
into
cmp
ja
test
sti
mov
cmp
mov
add
out
inc
cltd
pushf
lods
enter
inc
push
and
jmp
call
call
jns
ret
aam
inc
inc
fimull
mov
push
ds
add
mov
mov
mov
add
bound
cs
or
xor
int3
sbb
add
add
jl
push
jnp
mov
stos
xor
jne
xchg
es
mov
sarb
push
idivl
and
into
or
shrl
jno
jnp
call
les
jecxz
xchg
xchg
inc
loop
jp
jge
pop
mov
sub
mov
jb
int
mov
push
repnz
or
add
loop
mov
inc
push
clc
call
call
call
add
add
add
push
jne
js
pop
pop
dec
adc
fisttpl
add
test
xlat
stc
add
add
mov
aaa
jne
or
imull
pop
rorl
rcll
push
decb
daa
push
and
jecxz
adc
xor
in
xor
dec
jl
jge
popa
aas
push
rorb
push
bound
imul
lret
psrlw
and
insb
test
inc
dec
les
mov
arpl
addr16
dec
xor
xor
and
xor
add
add
add
mov
aaa
fwait
enter
pop
push
pop
pop
stc
inc
or
xor
sbb
adc
xchg
add
adc
sub
jge
mov
mov
cli
dec
and
ja
fs
fcompl
jns
sbb
add
xchg
xchg
ds
jmp
sub
jmp
sbbb
sbb
mov
int3
xor
mov
pop
cmp
repz
cltd
cwtl
add
pop
add
popf
shl
mov
test
inc
xor
pop
fst
insb
xor
sub
lea
repnz
lret
ds
pop
loopne
scas
icebp
notb
pop
bound
outsb
add
pop
pusha
stos
call
call
mov
stos
dec
aaa
mov
sbb
jae
call
call
call
mov
loope
push
mov
lods
je
rcll
sar
xor
fists
arpl
mov
mov
jnp
or
cmp
and
add
mov
sub
sub
std
pop
mov
idivl
lcall
xor
mov
cmp
lds
popf
xor
dec
sbb
loop
daa
inc
out
stos
imul
call
roll
add
add
add
into
gs
pop
xor
imul
movsb
push
push
rcl
or
sar
das
mov
das
push
sub
cmp
add
xor
or
jg
lahf
push
add
pop
je
shrb
cmp
jb
insl
xor
or
push
rcrl
iret
andb
iret
les
arpl
pop
movsb
push
add
add
int3
addl
mov
rcr
jp
leave
pop
push
pushf
push
andb
push
or
mov
sbb
mov
push
dec
fstl
movsb
pop
sub
rorb
or
sbb
jecxz
add
fimull
outsl
pusha
push
shrb
notl
cmc
push
js
ljmp
out
into
add
mov
jge
jns
testb
add
add
mov
cmpsl
loope
pop
arpl
fs
sahf
sbb
call
xchg
jns
add
dec
ret
gs
mov
loope
adc
mov
call
call
add
xor
and
add
lea
and
cld
jge
xor
xor
or
jnp
add
sbbl
sub
je
xor
out
int
fucom
in
cmp
xor
loopne
imul
sub
adc
inc
mov
add
push
mov
loopne
add
in
fdivl
pop
or
cmc
in
push
push
pop
inc
popa
and
and
outsb
dec
sbb
test
insl
add
popa
inc
std
xlat
push
pop
lods
add
fsubs
inc
pop
sbb
jge
dec
fcos
aad
mov
into
std
xor
sub
cld
clc
aas
pop
daa
stos
dec
popf
cmp
push
push
pusha
scas
stos
cmpsl
inc
adc
pop
and
mov
pusha
ret
adc
lock
mov
cmpsl
test
cmp
push
test
add
add
pop
push
mov
icebp
mov
xor
stc
call
aas
pop
loope
xchg
mov
sub
pop
test
fbstp
push
pop
xor
pop
out
hlt
movsl
lret
loop
leave
push
fiadds
adc
jnp
sbb
mov
xor
inc
loopne
movsb
stos
rorb
xor
outsb
add
jo
mov
cmp
jge
pushf
shlb
rcll
jo
stos
push
pop
cli
popf
fcmovnbe
outsb
or
pushf
sub
inc
pop
outsb
test
adcb
or
fistpll
ret
call
call
add
push
sahf
popf
lds
mov
sub
sbbl
and
sub
lods
ds
or
les
or
push
mov
add
pushf
push
cli
mov
popf
cmp
xor
add
addr16
push
xchg
xor
jg
call
call
call
add
cld
xlat
mov
ds
xlat
sub
dec
sub
xchg
stc
jbe
inc
pusha
push
add
dec
push
adc
push
cld
cmp
in
cmp
imul
mov
and
jg
bound
jo
and
xlat
adc
add
orl
push
clc
push
adc
add
aas
add
bound
cmp
xchg
rcrl
pop
cmp
repz
mov
push
xor
adc
xchg
dec
jo
mov
aam
ret
sarb
stos
stc
jbe
xchg
xor
cmpsb
out
xchg
sarb
cmp
add
add
int3
xor
jo
or
dec
sbb
mov
lock
sub
xor
sub
xchg
bound
in
fs
popa
add
adc
jmp
arpl
mov
hlt
outsl
ss
dec
xchg
jns
mul
pop
or
rolw
cmp
mov
cli
ja
and
cmp
das
ss
jg
imul
aas
pop
inc
jnp
les
jno
cmpsb
jns
push
test
jle
inc
daa
cmp
loop
scas
outsb
shll
mov
js
mov
jb
jns
push
push
mov
push
and
pop
les
arpl
xchg
sub
ds
jp
inc
arpl
out
sub
sub
out
mov
das
jns
imulb
add
jle
xchg
pop
add
or
pop
add
add
cmp
addl
ret
je
and
lahf
jmp
fisttpll
int3
xor
cmp
add
add
add
xchg
lods
push
add
add
push
iret
arpl
aas
sbb
dec
xor
fmull
mov
cmp
in
ss
lcall
pop
or
inc
bound
and
mov
iret
jb
push
cmp
stos
add
sub
push
add
inc
bound
mov
jns
pop
dec
jbe
repz
ret
lock
jbe
push
cmp
inc
jns
add
cli
ja
inc
gs
fmull
push
pop
or
mov
jl
mov
je
outsb
fisttpll
lea
add
lret
dec
sub
inc
cltd
fidivrs
push
jbe
push
hlt
xor
or
data16
sbb
pop
sub
mov
sbb
pop
cmpsb
out
js
cli
ja
imul
sub
das
je
test
cli
ja
pop
sarb
xor
inc
mov
int3
xor
adc
xchg
jbe
add
add
add
popf
insb
ds
xor
cmp
push
fisttpl
add
setnp
outsb
xchg
call
call
call
cmp
sub
sub
clc
jne
jg
cs
mov
sbb
pop
sahf
jmp
jle
outsb
and
outsl
jmp
pop
push
aas
test
jge
add
ljmp
jge
in
emms
rcl
inc
sub
pop
cwtl
fs
pop
or
sub
or
xor
xor
add
add
add
sub
in
add
fstpt
std
jnp
xchg
inc
jno
fisttpl
shll
pop
outsb
mov
gs
into
ss
mov
dec
mov
add
sarl
mov
sbb
aad
pop
or
cmp
mov
ss
je
insb
mov
out
je
dec
pop
or
imul
push
jge
dec
pop
or
daa
sbb
pop
and
add
lock
lods
add
mov
push
cmp
mov
pop
cmp
fadds
add
aaa
adc
aas
inc
mov
aaa
sbb
dec
sarl
in
fs
std
jl
popf
fisttps
add
or
daa
mov
popa
push
add
add
push
add
icebp
xor
add
add
jmp
dec
sbb
call
push
pop
xor
repz
lret
xor
fld1
pop
nop
incb
pop
xor
jnp
cmp
leave
call
call
jno
test
jp,pt
cmp
mov
scas
in
xor
and
add
sbb
aaa
sbb
cmpsl
jp
enter
jo
add
dec
test
push
cmp
sbb
inc
test
inc
gs
notb
add
add
mov
je
push
jns
pop
xchg
popa
imul
and
cmp
call
call
imul
push
popf
mov
lahf
imul
cmp
arpl
inc
jb
xchg
jle
in
bound
xlat
inc
outsl
pushf
push
repnz
jp
shrl
outsb
add
add
mov
inc
push
sub
pop
sbb
add
dec
xor
vpcmpgtb
movsb
cmpsl
jnp
adc
jno
fwait
imul
xor
xor
out
int3
xor
data16
add
cltd
test
std
jl
push
or
xor
pop
inc
pusha
nop
pop
mov
xor
fiadds
cmp
push
sbb
subb
or
push
sub
xchg
xchg
adc
push
mov
xor
add
mov
xor
jg
sub
outsl
jge
inc
fs
clc
les
sub
je
jne
pop
or
cmpsl
push
adc
aas
add
push
cmp
dec
aad
push
add
call
add
add
je
js
and
dec
arpl
and
outsl
mov
push
sub
xchg
into
add
add
in
inc
add
add
add
add
add
scas
inc
add
add
add
scas
inc
add
add
add
add
add
scas
inc
add
add
add
scas
inc
add
add
add
add
subb
add
add
add
add
inc
add
add
add
lods
inc
add
add
add
add
test
add
pop
lods
inc
add
add
add
add
fsubrs
add
add
add
add
add
stos
inc
add
add
clc
stos
inc
add
add
call
add
add
stos
inc
add
add
add
stos
inc
add
add
add
stos
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
jge
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
inc
add
cmp
add
add
sarb
add
out
mov
add
add
lcall
mov
add
mov
add
add
add
inc
add
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
mov
add
add
add
add
add
sarb
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
jg
jg
jg
nop
cmp
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
cmp
xor
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
adcb
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
pusha
add
pusha
popa
add
dec
add
add
add
incl
add
add
add
add
add
addb
add
add
testl
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
adc
add
add
incl
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
pop
add
sub
pop
add
sub
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
je
jne
insl
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
jo
outsl
add
je
and
push
add
add
and
dec
add
je
add
data16
arpl
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
pop
add
outsl
add
add
add
jo
dec
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
imul
insl
add
add
add
add
add
add
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsl
add
pop
add
outsl
add
add
add
add
add
and
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
outsb
add
je
jne
insl
add
add
jne
je
jo
outsl
add
je
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
