add
inc
add
push
push
je
imul
pop
adc
add
add
add
add
enter
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
push
dec
bound
arpl
cmp
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
push
push
call
cmpl
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
push
call
mov
call
xor
mov
mov
pop
ret
lea
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
mov
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fldt
fmulp
shr
je
mov
and
je
lea
fldt
fmulp
shr
je
lea
fldt
fmulp
jmp
neg
cmp
jge
mov
and
lea
fldt
fdivrp
shr
je
mov
and
je
lea
fldt
fdivrp
shr
je
lea
fldt
fdivrp
jmp
fstp
fldt
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
mov
inc
add
bound
inc
add
xlat
fadds
nop
lods
outsb
xor
xchg
add
test
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
roll
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
push
push
push
push
push
jmp
ret
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
xor
push
push
mov
lea
mov
mov
mov
add
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
push
add
mov
cmpl
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmpl
je
mov
cmp
je
mov
cmp
je
mov
cmp
jne
mov
call
mov
jmp
mov
mov
mov
cmpl
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
lea
mov
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
test
je
push
push
call
mov
cmpl
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmpb
jne
mov
cmpb
jne
mov
add
call
mov
mov
cmpb
je
mov
inc
call
mov
mov
cmpb
je
jmp
mov
add
mov
mov
sub
lea
push
mov
push
lea
push
call
jmp
mov
inc
call
mov
mov
sub
mov
add
inc
cmp
jg
inc
push
mov
push
lea
add
push
call
lea
push
lea
push
call
mov
cmp
je
push
call
lea
push
call
lea
add
inc
cmp
jg
movb
mov
sub
dec
push
lea
push
lea
add
inc
push
call
lea
push
call
inc
add
mov
mov
mov
cmpb
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
mov
add
push
mov
push
lea
push
push
call
movb
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
movb
movb
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmpb
je
cmpb
jne
cmpb
je
lea
push
call
lea
add
mov
jmp
decl
mov
cmpb
je
lea
cmp
jne
lea
cmp
je
incl
cmpb
je
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
cmpb
je
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
movb
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
mov
pop
mov
pop
ret
add
push
outsl
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
dec
outsl
arpl
gs
add
add
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
jae
add
add
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
push
add
push
mov
mov
test
je
cmpl
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
nop
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
add
mov
mov
mov
call
mov
movb
movb
xor
mov
mov
inc
inc
test
jne
xor
xor
mov
mov
cmp
jge
mov
mov
mov
jmp
movb
inc
cmp
jl
xor
mov
add
add
mov
mov
xor
mov
mov
mov
xor
mov
lea
mov
mov
inc
dec
jne
add
pop
pop
pop
pop
ret
push
movb
movb
movb
pop
ret
lea
mov
mov
movb
dec
cmp
jne
ret
mov
push
mov
add
push
push
push
mov
mov
mov
call
mov
dec
test
jl
inc
mov
mov
mov
mov
incb
xor
mov
mov
add
xor
mov
mov
xor
mov
mov
xor
mov
mov
call
xor
mov
add
xor
mov
mov
xor
mov
mov
incl
inc
decl
jne
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
push
mov
call
push
mov
call
mov
mov
pop
call
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
lea
call
call
xor
push
push
pushl
mov
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pusha
cmpsb
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
inc
dec
inc
add
add
inc
add
add
or
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
add
add
add
add
add
adc
add
add
or
arpl
je
outsl
outsb
lods
dec
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
outsl
inc
add
das
inc
add
inc
dec
gs
jo
js
gs
imul
add
push
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
outsl
inc
add
das
inc
add
dec
gs
outsl
jb
lea
fs
inc
add
add
add
add
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
dec
jne
inc
jb
outsl
jb
push
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
js
gs
popa
insb
mov
adc
inc
add
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
js
gs
popa
insb
inc
js
gs
imul
add
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
je
jb
outsl
jb
ror
inc
add
push
inc
add
add
add
push
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
imul
outsl
nop
and
inc
add
inc
add
add
add
push
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
popa
outsb
addr16
jb
outsl
jb
push
inc
add
add
add
add
push
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
jbe
jb
insb
outsl
ja
inc
add
push
inc
add
push
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
popa
je
inc
jb
outsl
jb
xor
add
push
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
dec
outsb
jbe
insb
imul
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
pop
gs
inc
imul
inc
add
push
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
dec
jbe
jb
insb
outsl
ja
sarb
inc
add
push
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
push
outsb
fs
insb
outsl
ja
nop
push
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
outsl
inc
add
das
inc
add
inc
dec
outsb
jbe
insb
imul
jb
push
inc
add
push
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
insb
imul
add
inc
add
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
jbe
jb
inc
jb
outsl
jb
shlb
add
add
jo
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
arpl
jae
push
imul
outsb
lea
add
inc
add
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
jb
jbe
insb
gs
pop
push
inc
add
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
je
arpl
jbe
jb
insb
outsl
ja
mov
add
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
outsl
outsb
je
outsl
insb
inc
mov
adc
add
push
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
imul
outsl
jb
shrb
insb
push
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
jae
gs
imul
gs
int3
push
inc
add
push
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
bound
jb
arpl
jb
jb
sub
add
pop
inc
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
je
inc
popa
jae
inc
jb
outsl
jb
test
add
add
clc
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
popa
data16
insb
inc
js
gs
imul
add
add
aaa
xor
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
rol
inc
add
add
cmp
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
sar
incl
add
add
add
push
push
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
incl
add
add
add
add
incl
add
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
incl
add
add
add
in
add
push
mov
test
je
mov
jmp
xor
mov
lea
push
lea
push
lea
push
lea
push
mov
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
mov
mov
mov
mov
xor
repnz
mov
sub
mov
ret
nop
push
mov
xchg
call
mov
pop
ret
nop
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
sub
je
pop
pop
pop
ret
mov
push
mov
mov
jmp
test
jne
xor
mov
jmp
incl
mov
mov
cmp
jne
mov
pop
ret
nop
push
push
push
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
call
cmp
jne
dec
mov
mov
mov
call
movb
mov
mov
movb
lea
mov
xor
call
add
pop
pop
pop
ret
push
mov
cmpl
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
add
mov
xor
mov
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmpb
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
cmpl
je
push
lea
call
pop
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzbl
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
incl
mov
cmpb
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
incl
mov
lea
mov
movzbl
jmp
mov
add
pop
inc
add
pop
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
shr
add
add
fsubrs
rorl
std
decl
faddl
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
ret
cmp
jne
cmpw
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
mov
lods
movzbl
jmp
mov
jmp
mov
add
cmp
jne
mov
lea
push
mov
call
pop
mov
mov
jmp
cmp
jne
mov
or
je
mov
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
mov
sub
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzbl
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzbl
mov
call
mov
lea
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
movb
mov
jmp
xor
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
mov
call
cmp
jge
mov
call
push
mov
push
mov
push
mov
lea
mov
call
mov
jmp
mov
call
mov
mov
mov
dec
cmp
jl
jmp
add
mov
call
mov
mov
call
mov
call
push
mov
push
mov
push
mov
mov
dec
mov
call
mov
mov
dec
cmp
jge
mov
mov
call
jmp
lea
mov
mov
call
pop
pop
pop
mov
pop
ret
lea
push
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
divl
add
mov
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmpb
jb
mov
push
lea
call
mov
movzwl
sub
cmp
jae
mov
call
lea
add
mov
rep
jmp
lea
movzbl
cmp
je
cmp
ja
movswl
cmp
jle
mov
lea
add
mov
add
call
mov
sub
pop
pop
pop
jmp
xchg
bound
icebp
bound
sub
add
arpl
xchg
arpl
dec
dec
inc
dec
inc
dec
lods
or
jne
mov
dec
ret
cmpb
je
mov
stos
ret
call
movswl
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmpb
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
stos
loop
lods
or
je
mov
mov
stos
lods
or
je
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
movswl
dec
call
ret
call
mov
cmp
jb
mov
movswl
or
jg
mov
stos
jmp
xor
cmpb
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmpb
je
mov
mov
cmp
jbe
mov
add
lea
add
mov
mov
cmp
je
push
push
cmp
je
cmp
je
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
movl
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
testw
je
cmpl
jne
cmpl
je
inc
xor
movb
jmp
fldt
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fldt
fcomp
fstsw
fwait
testw
je
fidivl
incl
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmpb
jb
movb
dec
js
incb
cmpb
ja
jmp
movw
incl
jmp
mov
movb
dec
js
cmpb
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fildll
mov
mov
sub
je
mov
fidivl
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
movb
dec
cmpb
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
mov
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmpl
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cltd
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
movl
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
jmp
mov
mov
call
jmp
mov
and
bt
jae
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
add
incl
add
add
add
jns
add
add
incl
add
gs
add
jns
add
incl
add
add
add
incl
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
mov
mov
mov
push
lea
push
push
call
cmpl
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
inc
lea
mov
call
mov
mov
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
mov
cmpb
je
mov
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
lea
mov
movb
lea
mov
movb
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
add
add
add
add
ljmp
add
add
push
jmp
cmpb
je
mov
call
call
lea
push
lea
push
call
push
lea
push
lea
call
push
lea
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
add
ret
add
add
incl
add
add
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
cmpb
je
call
ret
hlt
outsl
inc
add
or
jb
jb
arpl
add
add
add
add
adc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
movb
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
je
inc
add
or
arpl
je
arpl
add
add
add
add
adc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
and
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
and
mov
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
cmpl
jne
lea
mov
call
jmp
lea
mov
call
mov
mov
push
lea
push
mov
push
call
cmpl
jne
push
lea
push
mov
push
call
test
je
mov
mov
movb
lea
lea
mov
call
mov
lea
call
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
and
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movl
mov
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
ret
mov
cmpl
je
mov
movb
mov
mov
call
xor
mov
cmpl
je
mov
movb
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
lea
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
xor
test
je
cmpb
je
test
jne
mov
and
bt
jae
mov
jmp
mov
dec
jmp
dec
test
jl
mov
and
bt
jb
mov
sub
and
jns
dec
or
inc
test
jne
mov
jmp
mov
and
bt
jae
mov
mov
pop
pop
ret
lea
push
push
mov
mov
xor
cmpb
je
mov
call
mov
dec
call
pop
pop
ret
nop
xor
cmpb
je
call
mov
mov
ret
lea
push
mov
cmpb
je
push
call
sub
pop
ret
mov
pop
ret
lea
push
push
mov
mov
mov
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
pop
pop
ret
lea
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
mov
test
je
cmpl
je
mov
mov
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
mov
call
mov
cmpl
je
mov
sub
mov
call
sub
jb
je
jmp
incl
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
mov
lea
push
push
mov
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
call
call
cmpb
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
call
lea
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
pushl
pushl
push
pushl
mov
mov
call
pushl
pushl
push
pushl
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
fs
jns
add
decl
add
insl
insl
insl
insl
and
jns
jns
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
inc
dec
push
dec
add
add
incl
dec
push
dec
and
add
incl
add
add
insl
insl
add
incl
add
add
insl
insl
cmp
add
push
push
push
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
cmpl
jne
pop
pop
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
or
inc
mov
sbb
xchg
inc
add
xchg
inc
add
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
xchg
inc
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
jo
inc
add
add
insb
xchg
inc
add
add
add
inc
add
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
xchg
inc
add
add
add
inc
add
inc
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
cmp
inc
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
add
inc
add
xchg
inc
add
add
add
nop
inc
add
xchg
inc
add
add
add
nop
inc
add
xchg
inc
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
mov
call
mov
call
cmpb
je
mov
mov
call
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
incl
add
add
js
add
std
add
xchg
inc
in
es
stc
or
outsb
arpl
xchg
dec
jge
cmp
mov
lock
mov
fcomps
sub
in
sarb
push
je
xchg
xchg
testb
dec
inc
mov
jle
jecxz
push
fidivrl
stc
mov
pop
inc
les
inc
push
push
mov
cs
mov
adc
sbb
jge
cmc
out
and
mov
out
stos
bound
iret
jecxz
jo
sbb
cmp
xchg
loope
into
pop
in
jge
insb
cmp
sbb
loop
sub
xor
orl
test
cltd
stos
dec
ja
rolb
movsb
pusha
repnz
retw
inc
in
movsb
xor
jae
jns
xor
cmp
fisttpll
push
xor
adc
push
xor
inc
fistpl
pop
in
jmp
or
inc
lock
xor
cmp
xor
lea
mov
pop
jmp
test
mov
popf
pop
das
xor
inc
xchg
loop
popa
add
mov
ret
or
dec
dec
divb
fstpt
push
js
mov
jmp
daa
ret
aad
mov
jbe
or
daa
pop
ss
jp,pn
push
mov
lret
inc
and
ret
mov
or
inc
hlt
pop
xchg
cmp
lret
out
int3
movsl
f2xm1
mov
sbb
lds
aad
cmp
inc
insb
sahf
sub
cli
fs
idivl
fidivl
mov
rcl
push
rep
imul
insl
pop
test
pop
pusha
clc
mov
loopne
cltd
push
dec
sti
adc
stos
xchg
stc
les
repz
add
ds
push
negb
cmp
cmc
stos
xchg
pop
add
push
pushf
pop
xor
std
data16
gs
cmp
lahf
mov
dec
xchg
push
mov
dec
dec
pop
insl
push
ss
and
fdivrl
pushw
orb
add
mov
mov
mov
sub
cmc
rolb
pop
add
and
call
inc
sbb
and
aam
bound
mov
arpl
mov
dec
es
pop
les
lahf
mov
and
push
dec
ret
xchg
xchg
push
hlt
sub
jno
xchg
or
fiadds
mov
icebp
inc
jbe
lods
xor
xchg
scas
dec
push
jmp
lods
popf
fidivl
push
repz
sbb
and
aas
push
xor
js
movaps
sbb
adc
fdivl
inc
lahf
hlt
lods
test
pushf
mov
pop
and
lcall
add
cmpsl
pop
cwtl
jo
popa
jo
in
stos
loope
cs
mov
roll
lock
test
pop
cli
cmp
sub
icebp
mov
push
cltd
fdivrl
cmpb
xor
push
std
int
jo
and
pop
push
aad
xchg
dec
test
sbb
repz
outsb
scas
mov
out
pusha
xlat
ficoml
fmull
loopne
sti
cld
out
fmull
inc
mov
add
jae
subb
imul
imul
adc
ja
jge
dec
cmpsb
rolb
and
mov
mov
mov
aam
push
lock
jb
adc
outsb
inc
cmp
xchg
enter
and
mov
xlat
addl
mov
mov
sub
push
lahf
je
ds
add
or
add
cwtl
push
in
mov
out
cmp
xor
mov
push
mov
push
mov
fldt
add
adc
ret
dec
jb
xor
mov
loope
mov
gs
les
cmp
sbb
cli
xchg
into
xchg
push
push
cld
add
jp
xor
push
addr16
outsb
and
or
sbb
out
fwait
push
roll
frstor
and
lods
lret
mov
mov
xor
mov
cmp
fwait
xchg
popf
push
into
mov
es
push
dec
cmp
or
pop
mov
repnz
and
push
pusha
sbb
dec
xchg
testl
scas
mov
push
adc
mov
jmp
mov
xchg
or
sahf
movsl
insl
jb
cmove
pushf
cltd
cltd
pushf
stos
test
pop
xchg
xchg
sbb
mov
cld
xor
sub
lahf
andb
outsl
push
leave
push
sbb
je
fmull
repz
cmp
gs
push
adc
push
pop
pushf
cmpsb
xor
mov
aas
mov
cmp
aaa
cmp
in
or
cmp
imul
stos
lret
mov
jae
ret
test
inc
jno
xor
loope
out
and
jg
fsubrl
aad
mov
mov
lret
outsb
inc
lcall
cmp
fstl
into
xchg
xchg
pop
dec
xor
cmpl
lods
mov
sbb
lret
cmc
pop
mov
daa
cmp
fldcw
lods
cmp
pop
movsb
mov
sub
mov
mov
push
cmp
jo
lcall
in
or
inc
out
std
mov
jnp
mov
jg
pop
inc
dec
int3
xor
inc
mov
jmp
add
ss
xchg
aam
loope
xor
adc
repnz
adc
divl
es
daa
arpl
add
add
and
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
or
add
enter
or
add
dec
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
addb
addl
mov
in
add
xor
mov
mov
call
xor
push
push
pushl
mov
push
push
push
call
movb
jmp
bsr
sar
neg
bts
bsf
xadd
btc
dec
movb
lea
mov
mov
call
mov
mov
call
mov
call
mov
jmp
call
movb
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
call
add
incl
add
add
pop
push
data16
add
add
lea
xor
mov
add
inc
add
lea
adc
inc
add
inc
add
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
call
add
add
inc
add
add
dec
inc
add
dec
inc
add
add
cmp
fidivrs
inc
mov
or
add
nop
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
int3
push
inc
add
add
add
inc
add
add
add
add
add
add
push
inc
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
inc
add
add
add
pop
inc
add
add
add
add
rcrl
and
add
add
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
mov
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
nop
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
jo
add
jnp
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
ja
add
addb
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
jo
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
inc
add
rolb
nop
inc
add
rolb
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
add
add
dec
add
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
pop
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
js
je
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
add
outsb
add
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
or
out
jns
xchg
aaa
fisubrs
test
push
xor
or
andl
lock
xlat
inc
pop
jp
pop
mov
add
pop
xchg
cmp
cmp
ljmp
fxch
dec
loope
jo
das
cmp
push
or
jb
rclb
mov
jns
push
clc
lahf
xor
mov
sbb
push
es
cmc
in
loope
cmp
xor
dec
hlt
push
fnstenv
xchg
cmp
jl
lods
sbb
push
jle
stos
push
xchg
xchg
adc
xchg
mov
clc
pushf
add
int3
add
imul
pushf
xor
xlat
mov
stc
mov
jle
roll
inc
popf
xor
dec
test
pop
subl
leave
xchg
stos
push
outsb
insb
arpl
mov
fistps
mov
or
mov
xchg
mov
sub
dec
hlt
sub
inc
fiadds
leave
outsl
push
and
bound
cmpsl
ret
int3
out
jmp
cmp
push
sbb
leave
std
les
xchg
xor
sub
lcall
or
mov
mov
xor
add
pushf
repnz
jns
push
clc
lahf
int
out
nop
jecxz
xor
pop
data16
shr
int3
hlt
add
cmp
add
mov
cmp
add
dec
out
xchg
xchg
xchg
fadds
pusha
imul
int
xlat
idiv
mov
inc
lea
fidivrl
mov
sbb
imul
aas
jae
sub
loop
popf
shll
jns
imul
fdivp
repz
inc
jge
dec
outsl
subb
call
mov
inc
movsb
dec
repz
aaa
aaa
fldl
outsb
adc
pop
jmp
call
push
bound
enter
aam
mov
mov
ljmp
jnp
mov
and
add
xchg
mov
push
lret
jno
adc
mov
hlt
add
xchg
loop
loope
adc
pop
push
push
push
movsl
bound
mov
jg
lods
popa
jecxz
sub
aam
cmc
and
push
mov
nopl
nop
lret
cmp
cmp
cwtl
xor
or
mov
cmp
adcb
inc
addr16
add
xchg
xor
sbbb
adc
data16
push
sti
mov
in
xor
push
fnstenv
sti
sub
jne
scas
push
addr16
or
ja
cld
push
add
xchg
fdivp
and
inc
gs
insb
adc
repz
pop
jmp
in
fstl
adc
popl
lcall
je
xchg
inc
jmp
add
jp
jo
insb
xchg
or
hlt
pushf
inc
popa
test
cmc
xchg
pop
push
mov
sub
xchg
mov
loopne
movsb
in
push
add
pop
ja
pop
add
in
xchg
cmp
push
cmc
jl
lret
in
mov
nop
xchg
sub
sahf
inc
in
push
add
xchg
cmc
or
fs
push
stc
mov
loop
xor
pop
shll
ret
int
add
push
add
cmp
shll
jne
cli
adc
pop
push
pop
insl
sbbl
subl
push
mov
std
mov
fisttpll
dec
pop
lds
sbb
scas
push
std
jb,pt
mov
in
sbb
push
outsb
lea
mov
fistpll
lcall
sub
jecxz
mov
xchg
mov
int
dec
hlt
adc
mov
ljmp
pop
jno
pop
add
jmp
cmp
mov
leave
fldcw
les
xchg
xor
pop
add
test
or
or
js
push
negl
loopne
das
inc
inc
pop
xorl
adc
cmpsb
cmp
xchg
cmp
sbb
lods
cmp
jae
clc
adc
pop
add
imul
jne
jg
dec
dec
popa
subl
or
scas
inc
mov
push
mov
sbb
and
sub
int
in
mov
jbe
pop
push
push
mov
sbb
mov
lea
mov
fwait
xchg
sub
movsl
dec
repnz
fnsave
xorl
adc
pop
jae
push
movsl
in
loopne
jmp
push
mov
sub
or
lahf
aaa
cltd
lcall
sub
adc
aas
pusha
jp
dec
cmc
pushf
rcl
jmp
fiadds
mov
xor
dec
jp
lea
scas
sbb
lret
xchg
mov
add
imul
xlat
jge
pop
dec
arpl
cmp
xor
lahf
inc
imul
sbbl
mov
daa
test
xchg
adc
loope
pop
int3
je
imul
out
xchg
cmp
andl
adc
mov
andl
adcl
fsts
fcmovne
loop
out
xor
mov
vcvtsi2ss
adc
popf
xor
or
icebp
sub
js
call
xchg
test
dec
repz
sub
pop
push
outsl
adc
xlat
cmpsb
dec
arpl
fimuls
adc
outsl
mov
cmp
pop
inc
ljmp
jnp
jne
insl
aaa
fs
lret
negl
xchg
sbb
xchg
lea
xchg
xchg
pop
cmp
mov
sbb
pop
je
pop
add
in
xchg
cmp
dec
dec
jg
int3
jmp
mov
mov
out
pop
add
jg
hlt
push
add
jg
push
cli
mov
in
xor
pop
je
ret
lock
leave
pop
lods
push
gs
xor
ds
or
loop
shll
pop
mov
and
push
or
int
cmp
jo
or
repz
inc
push
dec
adc
sub
loop
mov
xchg
mov
adc
dec
aaa
fldl
outsb
adc
pop
jmp
call
push
adc
enter
movsb
or
dec
popf
inc
ljmp
jnp
lock
arpl
dec
negb
loope
jns,pn
pop
cmp
mov
add
sbb
push
lods
lea
sbb
adc
jno
in
xchg
stos
fcomi
fst
jle
pop
dec
pusha
sub
cmp
inc
je
inc
or
mov
sbb
imul
xchg
jno
in
mov
jne
push
push
imul
lods
ljmp
sbb
iret
fisubl
loop
mov
je
dec
icebp
and
pushf
or
cmpb
adc
pop
jb
push
std
movsb
ror
jecxz
out
xor
js
loopne
shl
mov
add
xor
cmpsl
pop
sub
jns
adc
mov
test
dec
hlt
fwait
shr
cmpsl
fiadds
inc
outsl
push
mov
add
addr16
cmp
sbb
scas
mull
leave
jo
xchg
xchg
dec
in
shrb
dec
insb
mov
jo
xchg
xchg
jns
bound
aaa
adc
sbb
mov
test
clc
or
mov
loop
mov
jae
outsb
push
jne
pop
add
ffreep
fisubl
cmp
mov
cli
jge
int
and
lahf
xchg
sub
mov
sahf
xchg
xor
subb
adc
jl
push
sti
mov
in
xor
push
push
jbe
loopne
ret
cli
pop
scas
push
jno
xor
aas
out
or
ja
cld
push
test
xchg
dec
repnz
fdivp
mov
inc
gs
insl
adc
icebp
xor
icebp
movsl
dec
jg
cmp
fisttpll
adc
cwtl
test
test
je
cmp
nop
movsl
out
sarl
inc
push
insb
sbb
cmp
shl
pushf
inc
push
test
inc
xchg
rclb
gs
mov
scas
test
notb
jge
cmp
loopne
movsl
in
push
mov
jno
xor
sbb
test
in
xchg
cmp
push
jl
and
jecxz
mov
mov
inc
in
imul
or
xlat
jle
cmc
or
fs
cmp
xchg
mov
into
pusha
push
push
stos
int
cmp
sub
cmp
andl
push
xor
lock
mov
test
subl
push
mov
std
mov
sbb
adc
mov
std
and
popa
inc
out
in
fst
js
inc
push
outsb
dec
arpl
mov
fistpll
mov
int3
xchg
rcl
sbb
nop
mov
lock
dec
hlt
add
sahf
xor
add
outsl
push
daa
pop
jno
pop
add
call
push
fidivrs
leave
out
les
pop
xchg
xchg
xor
sbb
lcall
or
mov
js
push
negl
jecxz
das
push
sbb
cwtl
aaa
iret
inc
add
icebp
xchg
cmp
adc
lods
gs
int3
jae
clc
adc
imul
sub
jg
pop
dec
popa
aad
adc
clc
mov
icebp
mov
fnstenv
mov
push
ret
push
andl
cmp
mov
int
xlat
xor
sbbb
scas
push
cld
or
inc
aas
out
xchg
pop
mov
cmp
xlat
jge
xchg
jns
repnz
lret
rcrb
not
js
dec
jno
int
ljmp
and
and
xchg
flds
icebp
insb
adc
insl
std
cmpsb
dec
outsb
mov
fimuls
adc
outsl
stos
test
cmp
lods
inc
ljmp
jnp
inc
dec
insl
xchg
addr16
lret
popa
hlt
popf
inc
stos
inc
int
cs
sbb
popf
lea
sub
xchg
mov
movsb
pop
adc
jb
outsl
adc
add
push
lahf
outsb
fwait
cs
cs
lods
test
icebp
aaa
int3
push
add
add
imul
jle
int
sbb
loopne
addr16
sti
mov
lods
icebp
cmp
andb
nop
push
xor
mov
loop
xor
sbb
sbb
imul
cld
pop
shlb
fcmovne
aad
mov
popa
or
repz
inc
pop
mov
sarb
imul
cwtl
and
mov
test
or
hlt
dec
cmpsl
fcoml
lock
inc
inc
add
jl
mov
sbb
or
add
lods
cld
jnp
data16
gs
cmc
add
and
popf
insb
popf
sub
std
dec
sarb
in
sub
test
jno
cmp
daa
pop
insb
jle
lret
pop
outsl
jp
jp
mov
in
mov
repz
sarb
arpl
mov
jne
pop
add
std
lea
inc
inc
xchg
adc
xor
add
insl
sbb
pop
add
pop
cltd
in
in
xor
sbb
lcall
xorl
xchg
xor
add
pusha
ret
add
scas
push
push
shll
lods
pushf
aas
out
xor
lds
push
lds
fisttpl
add
shl
mov
xor
stc
pop
insl
mov
push
shl
movsb
call
pop
test
and
outsb
mov
pop
xlat
shl
scas
jmp
fisubrs
pop
test
mov
pop
sub
hlt
stos
out
cmp
mov
or
mov
hlt
pop
fmuls
bound
cmc
push
mov
and
ficomps
adc
arpl
push
lds
and
dec
lods
outsl
adc
add
cltd
out
hlt
loop
xor
xchg
pop
pusha
and
mov
sbbl
jo
push
xchg
lock
fnstcw
bound
mov
sub
mov
imul
andb
mov
js
pop
pop
fs
ret
sti
jecxz
ljmp
cmp
sar
in
inc
lahf
mov
push
shrb
in
lea
mov
dec
mov
inc
filds
inc
dec
pop
mov
jbe
imul
outsl
lods
cmp
pop
inc
inc
pop
mov
mov
ss
ret
test
pop
cmpsb
mov
pop
mov
rclb
mov
neg
mov
xchg
xor
jbe
add
xor
rcr
mov
or
in
in
lret
mov
jns
mov
xchg
cmp
mov
int
and
cld
adc
das
mov
xor
pop
sbb
pop
ret
jns
xor
testb
adc
lahf
ja
loop
cld
jns
push
jle
insl
sub
fucomip
not
cmp
decb
jg
int
gs
push
lods
add
cmp
hlt
roll
ds
jnp
push
lods
and
inc
and
mov
loopne
xchg
pusha
ret
jmp
scas
push
mov
push
sbb
sub
push
cwtl
mov
add
mov
out
lcall
mov
bswap
sbb
push
decb
mov
inc
call
mov
xchg
addb
ret
and
xlat
push
nop
popf
vorps
fs
adc
or
ljmp
sub
fbld
and
mov
scas
test
jmp
cmp
sub
jg
lret
add
std
scas
or
aas
das
xchg
cmp
cld
nop
jns
push
mov
sbb
addr16
xchg
lods
fisubrs
mov
cmp
inc
lods
mov
jae
mov
or
pop
sub
call
xchg
cmp
and
int
outsl
jge
mov
daa
andb
xchg
dec
pop
inc
popf
lods
cli
pusha
int3
jne
insb
push
xchg
sub
sti
mov
push
idivb
pop
das
xchg
add
mov
jae
xchg
push
movsb
mov
addr16
lret
daa
lock
and
cmc
fnstsw
movsb
dec
repnz
dec
popa
cwtl
test
shll
push
push
arpl
movsl
cmp
mov
insb
sarb
push
mov
sbb
fwait
inc
adc
and
push
push
jnp
enter
movsb
mov
jbe
popa
xchg
adc
xchg
cmp
push
xchg
jns
leave
fists
adc
jle
popf
add
lahf
call
test
bound
or
incl
cmp
test
or
jb
rclb
jle
imul
inc
dec
cwtl
cs
jle
mov
sbb
push
add
rcl
std
fucom
inc
mov
xor
rclb
aaa
sbb
imul
out
cmp
mov
inc
push
pop
test
xor
xchg
ds
inc
pusha
addb
xchg
lods
int
pop
pop
ds
add
lret
push
jle
mov
in
inc
sahf
notl
add
or
lret
aad
xchg
cmp
dec
test
pop
mov
gs
jnp
sub
ljmp
pop
mov
fs
jp
sub
fidivs
nop
jmp
cmpsb
lcall
or
adc
shrb
test
ss
repz
movsl
push
mov
bound
js
sub
inc
cltd
repnz
movsb
std
push
scas
or
adc
ja
sub
aas
cwtl
icebp
dec
mov
pusha
mov
jbe
sub
ds
lock
mov
pop
mov
jne
daa
sbb
mov
cmp
cli
push
lods
add
ret
sbb
data16
xor
mov
xor
addr16
pop
mov
gs
sbb
aas
jo
fcmovnb
movhps
insl
arpl
jmp
imul
push
fwait
lcall
cmp
jge
pop
push
mov
push
loop
sarl
sbb
cld
adc
sub
into
cs
ficompl
cltd
fcomps
pop
subl
cmc
mov
je
lds
outsl
mov
out
shl
or
cld
sbb
fists
and
jp
cs
mov
jmp
adc
mov
lcall
scas
sbb
arpl
mov
or
data16
dec
movnti
fisttps
pop
xchg
enter
add
rolb
movsb
mov
and
fdivrs
xor
sub
sbb
xchg
pop
xchg
aaa
sub
daa
into
cmp
lcall
call
repnz
dec
dec
popa
lods
add
lahf
icebp
sub
or
pop
loope
add
pushf
mov
or
jecxz
packuswb
push
mov
inc
clc
push
es
pop
insb
pop
std
movsl
jg
aas
dec
int
in
mov
mov
jns
push
inc
and
mov
cmc
add
rcr
and
daa
adc
icebp
jp
mov
lock
loop
mov
cltd
repnz
aaa
cmpsl
xor
pop
es
or
xor
xlat
jmp
imul
sbb
insb
add
rclb
out
sbb
hlt
sub
sbb
ja
int3
inc
aas
fwait
mov
sti
int
inc
mov
hlt
faddl
bound
xchg
adc
pop
mov
inc
sbb
push
das
arpl
add
push
cmc
hlt
pop
out
xor
and
mov
dec
or
inc
pop
aaa
pop
fbstp
push
mov
cld
cwtl
test
sbb
xchg
lock
mov
mov
pushf
pop
imul
sahf
movsb
push
push
fnstcw
clc
repz
lret
call
js
pop
gs
mov
js
stos
xor
jge
or
outsb
out
mov
xor
bound
lret
iret
mov
cwtl
test
push
cmp
sahf
ljmp
and
xchg
insl
rcll
loop
ljmp
sti
adc
in
daa
shlb
shr
loope
jbe
adc
iret
call
xchg
cmp
outsb
push
mov
outsl
push
mov
es
test
hlt
add
dec
lahf
mov
outsl
cmpsb
sbb
fcoms
inc
shll
ds
sahf
xchg
les
cld
fistpll
arpl
sub
dec
enter
jne
xchg
xchg
shll
filds
fiaddl
js
and
aaa
fs
cmp
cmpsb
enter
lea
or
xchg
push
mov
in
cmpsb
add
inc
jle
sub
cltd
sbb
push
ds
push
sub
outsb
cmp
stos
enter
xchg
fiaddl
inc
lock
or
xchg
scas
add
dec
pop
test
outsb
negb
insl
xor
jge
add
dec
mov
std
inc
jmp
lods
push
enter
call
test
outsl
jle
jbe
cs
mov
or
call
cmp
insb
iret
lea
lea
leave
leave
test
mov
fistps
daa
pop
jae
xor
cmp
int
xchg
outsl
push
xchg
cld
jnp
pop
out
pop
pop
dec
and
jmp
xchg
insl
data16
push
cmp
pop
and
lods
in
sbb
testb
in
ljmp
xchg
repnz
adc
pop
push
add
mov
sahf
xchg
lret
inc
ficoml
lods
scas
and
push
sarl
pop
xchg
lods
leave
sbb
mov
mov
mov
out
fwait
sarl
insb
sbb
stc
pop
int3
mov
dec
add
jmp
enter
xor
or
out
sub
rolb
out
decb
in
dec
test
ja
clc
fldt
lret
test
ds
dec
add
mov
or
push
shlb
add
pop
inc
add
push
int3
add
push
adcl
pop
mov
ljmp
clc
push
das
sbb
dec
cmp
je
mov
mov
push
lahf
daa
push
lret
mov
lret
mov
pop
arpl
xchg
xlat
mov
push
cwtl
mov
inc
lods
shrl
gs
lods
in
mov
dec
popf
dec
fldcw
jle
lods
mov
mov
sub
lea
and
dec
jle
js
push
add
loop
enter
ret
pop
cmp
jno
out
cmp
sbb
fnstcw
pop
popa
scas
shl
pop
jne
call
sub
xchg
mov
out
in
dec
cmpsl
icebp
lcall
aam
sub
ret
mov
loopne
dec
xchg
jp
or
mov
hlt
inc
inc
xor
add
add
jg
insl
jne
jae
add
push
ss
out
mov
std
sahf
das
and
aaa
data16
daa
mov
scas
pop
mov
pop
shlb
xchg
or
xor
outsb
jg
push
xor
cmp
mov
pop
inc
pop
and
and
mov
jl
and
aam
pop
pop
push
mov
cmc
mov
lds
movsl
lret
xchg
outsl
xchg
inc
sti
xlat
pop
loope
push
in
mov
push
jnp
push
fsubl
std
inc
aas
das
dec
in
push
jle
ss
repnz
daa
inc
inc
sub
out
fistpll
iret
lret
mov
je
add
int3
sbb
push
mov
dec
adc
sbb
sarl
push
aad
xchg
adc
clc
inc
scas
movsb
dec
mov
mul
and
rcll
stc
pop
mov
mov
ret
sahf
ss
stos
or
mov
cld
sbb
rcll
mov
mov
cltd
rorb
lret
outsb
xchg
sahf
push
cwtl
cmp
shll
fsub
mov
fists
rorb
sub
xor
pop
pop
mov
call
pop
jmp
push
ret
xchg
push
aaa
xchg
push
lcall
subb
sbb
add
repnz
cmp
ss
adc
bound
pop
cltd
jb
out
push
adc
inc
xor
xchg
arpl
pop
add
push
lock
es
xchg
mov
sbb
test
out
int
movsl
fildll
aaa
test
inc
mov
and
xchg
lods
imul
sbb
jne
sbbl
into
mov
lret
inc
pop
test
sti
mov
cltd
add
and
loop
stos
into
in
xchg
popf
push
lret
xchg
out
inc
sarb
adc
ja
das
sub
subb
push
lcall
stos
arpl
movsb
xlat
xor
xchg
jge
dec
cmpsl
std
pusha
dec
call
nop
inc
mov
xor
sbbl
adc
in
add
in
pop
mov
adc
push
jl
sbb
ss
mov
dec
scas
js
and
dec
push
jo
mov
loope
and
sahf
test
cmp
stc
push
in
or
or
fiadds
fisubl
and
mov
push
cmp
xchg
mov
xchg
mov
repnz
data16
push
bound
ret
pop
ret
pop
sub
inc
and
lcall
lock
pop
sbb
dec
adc
out
into
out
xor
insb
fucomi
dec
dec
push
sub
arpl
cltd
aas
iret
pushf
clc
dec
lret
imul
mov
pop
ret
shr
inc
adc
pusha
and
cld
mov
scas
push
mov
sbb
inc
mov
jg
loope
cld
and
and
shrb
mov
in
sbb
xchg
es
lahf
cmp
aad
js
and
cmp
loop,pt
jmp
stos
punpckldq
cmp
jge
lcall
cmpsl
lea
dec
inc
adc
mov
in
mov
sti
call
fistl
test
or
jle
and
pop
scas
in
pop
negl
add
jns
movsl
cmp
sub
xchg
data16
and
mov
mov
insl
xor
jnp
xor
inc
adc
xchg
lds
shll
jb
lret
jne
lahf
jle
mov
out
jnp
ljmp
rcrl
sarb
jl
clc
push
insb
cltd
and
les
into
inc
xchg
loopne
mov
inc
sbb
aaa
xor
cmc
pop
adc
jbe
adc
int3
sahf
movsb
sbb
push
adc
ja
test
psubq
mov
adc
sbb
hlt
add
fsubs
in
lea
aad
adc
sti
js
mov
out
jns
in
mov
ljmp
popa
inc
add
lahf
ret
cmp
jo
fcompl
push
pop
lret
add
hlt
xor
sub
cmp
push
incl
jno
ss
in
mov
daa
frstor
mov
sbb
pop
add
mov
jp
dec
or
cmp
ljmp
insb
ficoml
sub
stos
push
data16
cmp
cld
or
in
jmp
add
cli
pop
push
cmc
inc
and
push
xchg
out
and
mov
sbb
jge
mov
and
cld
dec
mov
or
jbe
arpl
jl
fdivrs
ficompl
gs
xor
sbb
adc
dec
repnz
jbe
pop
jle
xor
pop
shl
adc
add
out
adc
sahf
fnsave
nop
loop
mov
stc
dec
pop
rcrl
push
ret
fisubrs
mov
mov
arpl
inc
pop
hlt
xor
out
fnstsw
out
mov
xchg
fidivrs
adc
mov
je
pop
sub
xor
fs
inc
leave
aam
or
inc
in
outsl
lods
xor
mov
mov
jecxz
sub
dec
cmp
cwtl
jp
xchg
fbstp
test
mov
lret
je
loope
xchg
add
pop
ja
cmp
sbb
test
inc
test
imul
dec
sahf
das
popa
cli
das
jb
adc
fdivl
xchg
jb
pop
int
mov
xchg
aam
loop
aam
sub
fisubl
xor
xor
lock
xchg
cmp
xor
pop
mov
dec
testb
loope
xor
jecxz
mov
rcrl
subb
xchg
dec
mov
mov
adc
testl
idivl
enter
in
lock
lahf
ss
testb
data16
adc
int
or
out
push
negb
push
jmp
hlt
jmp
adc
les
jmp
push
dec
cmp
negb
mov
add
push
test
sub
dec
jmp
xor
pop
outsb
pop
lods
call
sarl
sub
jl
lds
popf
push
pop
dec
out
inc
mov
mov
sti
into
in
gs
aas
imul
sbb
int
add
jns
push
cmp
or
ret
mov
mov
rolb
push
push
fcomps
xor
jle
adc
cmp
fsubrs
js
jno
cmp
adc
xor
scas
pop
pushl
clc
pop
out
inc
cmp
dec
or
out
mov
aam
stos
iret
lods
adc
cmp
and
sbbl
sub
ret
cmp
addr16
aaa
jmp
cmp
subb
sbb
and
mov
fcmovnbe
shrb
jmp
xor
push
repnz
sub
cs
and
pop
cmp
push
lahf
je
aas
fs
scas
cs
shr
jb
lret
bound
in
jbe
xor
pop
push
test
inc
sahf
push
jns
out
addl
and
iret
rorl
sub
int
mov
rorb
and
cmp
add
cmc
dec
inc
std
orb
lcall
lods
add
and
push
pop
call
lods
sub
imul
push
fs
repnz
jo
push
stos
sbb
jle
ds
decb
dec
rclb
repz
xchg
leave
dec
jge
push
add
pop
clc
mov
pop
xchg
jmp
scas
jbe
js
mov
inc
rcrl
cmp
call
aaa
adc
xchg
pop
jecxz
fldz
pop
mov
sbb
mov
jmp
xor
xchg
and
outsl
jl
push
and
jl
dec
mov
push
sub
std
cli
pop
sub
jnp
mov
mov
hlt
jbe
lds
xchg
push
adc
ljmp
pusha
jecxz
push
xorb
xchg
jnp
dec
dec
adc
or
sbb
bound
test
dec
fldt
xchg
jb
ljmp
hlt
in
xor
out
cmp
mov
ljmp
shrl
sub
mov
arpl
ds
lods
push
dec
aad
sbb
sbb
add
xor
mov
mov
sub
or
pop
and
dec
cltd
fimull
in
cmp
cmp
push
dec
and
das
push
addr16
sbb
stos
inc
rcr
xor
push
lods
ljmp
out
mov
ret
lret
fiadds
faddl
dec
mov
aas
xchg
aas
xor
jp
out
je
cmpsl
jmp
test
mov
shrb
into
fwait
sbb
mov
mov
lods
ds
adc
test
xor
das
out
push
imul
xchg
cmp
out
mov
push
cmp
rorl
xchg
mov
aaa
pushf
push
push
insl
push
insb
or
cmp
data16
push
shlb
or
dec
addr16
inc
and
loop
insb
mov
and
scas
sbb
cmpsl
and
adc
and
ret
jae
jbe
sti
daa
outsb
int3
mov
ret
dec
clc
push
and
ja
inc
xchg
jl
aas
insl
lret
outsb
adc
cmpsl
cmpl
shrl
imul
push
and
jecxz
push
cli
dec
out
pushf
adc
out
pop
ror
outsl
lahf
cmp
and
fidivrl
jle
or
mov
insl
ret
push
and
rclb
nop
sbb
out
int3
push
pop
jecxz
inc
call
push
xchg
xchg
pop
loopne
jne
movsb
fs
add
ret
popf
adc
roll
sbb
scas
push
bound
inc
mov
push
mov
add
nop
xor
ja
xchg
arpl
and
mov
sub
mul
and
xchg
pop
clc
jle
je
aam
jae
outsl
push
nop
adc
cltd
jnp
xchg
and
xchg
in
or
dec
cmp
pushf
addl
sbb
stc
cmp
dec
nop
xor
cld
push
cmp
out
sub
lods
in
outsl
xor
xchg
incl
stos
adc
dec
test
jle
test
push
sarl
aad
or
push
sbb
ja
imul
jle,pt
lretw
sbb
xor
adc
push
cmp
inc
hlt
or
mov
sub
cli
mov
mov
fidivs
js
adc
mov
shr
push
fcompl
and
aas
mov
xlat
jns
dec
cltd
push
dec
movsb
xchg
pop
and
std
int
loope
mov
pop
xchg
jo
and
pop
mov
js
movsl
dec
mov
in
add
in
push
loopne
mov
rcrw
dec
and
sbb
outsb
daa
fwait
mov
std
pop
sbb
lahf
sub
cli
sub
mulb
jle
sbb
loopne
scas
int
dec
push
push
mov
and
icebp
stos
in
aam
je
sahf
insb
ret
lods
pop
popa
repz
pop
arpl
dec
out
push
xor
mov
mov
es
lahf
sub
pusha
pop
out
adc
rcr
hlt
decb
mov
xchg
cmp
fdivrl
dec
mov
test
inc
shrl
sub
dec
mov
aas
mull
mov
daa
sarl
mov
hlt
mov
mov
and
sbb
add
jg
mov
sbbb
cmp
push
and
cmp
outsb
fnstsw
adc
imul
jbe
add
loope
stos
popa
pop
mov
inc
cltd
addr16
loop
inc
out
push
push
pusha
xchg
jecxz
repnz
inc
cmp
jmp
aaa
les
xchg
out
mov
pop
mov
icebp
mov
aaa
cmp
xchg
cld
insb
jle
push
gs
lods
test
mov
cld
es
fdivs
call
pop
xchg
loope
xchg
scas
inc
fstpl
cmpsl
push
imul
add
and
mov
mov
in
dec
sbb
aaa
loope
jl
mov
fwait
punpcklwd
sbb
rclb
fldt
xchg
push
shlb
push
jno
dec
or
sbb
loope
jecxz
xor
out
into
xchg
add
xor
mov
cli
lds
xchg
cmp
cltd
repz
inc
push
cmpsb
sbb
mov
jno
inc
ds
imul
inc
adcb
push
call
mov
sbb
daa
lods
lds
ljmp
ret
outsl
mov
insl
cltd
cmp
das
int3
lcall
sbb
adc
enter
sbb
jbe
mov
push
add
jns
push
mov
out
addr16
inc
pop
sub
repz
cmpb
push
lret
jmp
cmp
repz
pop
mov
cmc
cmp
adc
push
loope
lds
roll
sbb
adc
into
add
xor
loopne
xchg
stos
nop
mov
popa
push
or
xchg
pop
sahf
jno
push
cmp
into
cs
lret
mov
xor
pop
sub
scas
xorb
mov
push
lock
scas
jae
inc
iret
jl
lea
dec
jmp
dec
jge
push
pop
sub
ja
ret
out
pop
xorb
jecxz
js
xor
into
mov
pop
cmp
test
push
rcll
lret
pop
sub
rcr
adc
jg
pop
andb
popa
in
je
scas
push
dec
stos
xchg
cwtl
popf
pusha
lcall
pop
dec
and
rcll
shll
aas
jnp
outsb
arpl
into
aas
inc
mov
aam
nop
inc
push
mov
cs
mull
mov
add
shl
pop
or
add
je
cmp
sbb
mov
pop
stos
sbb
xchg
cmp
or
jp
push
mov
inc
mov
inc
mov
dec
xchg
xor
push
call
push
jns
sbb
inc
setbe
cs
les
mov
in
dec
and
push
and
mov
enter
idivb
je
movsb
push
adcb
mov
out
ud0
mov
ds
and
inc
lcall
jo
push
cld
adc
push
ljmp
pop
imull
xor
mov
dec
mov
pop
enter
sub
sub
call
mov
add
xchg
cld
xor
jae
and
sub
xchg
or
mov
xor
push
sub
xor
icebp
sub
mov
sti
leave
sbb
sub
scas
xchg
mov
mov
out
xchg
mov
adc
fsubl
lods
sub
or
int
xor
out
and
pop
mov
les
lods
rolb
out
mov
push
xchg
sbb
test
in
jg
inc
or
in
fildl
shrl
std
movsl
dec
in
inc
movsb
orl
and
lcall
push
jns
lcall
mov
or
cs
iret
sahf
jnp
push
sub
push
clc
addr16
ret
xchg
popf
lea
loop
push
lods
dec
sub
pop
mov
lods
xchg
and
inc
cs
sti
mov
cmp
xor
addr16
push
in
pop
pushf
inc
cmp
push
mov
int3
into
sub
lds
cmp
inc
xchg
out
push
mov
sub
or
dec
aam
lock
mov
movsl
xchg
js
fxch
or
loope
sbb
out
pusha
cmp
leave
insl
jb
sub
inc
das
mov
pop
into
in
dec
gs
dec
xchg
das
rcrb
je
inc
lods
stc
mov
lret
add
enter
jno
adc
stos
mov
mov
in
rol
xchg
jmp
int
pop
aad
sbb
xor
mov
push
out
xchg
jnp
stos
push
ds
sub
inc
adc
loop
pop
test
sahf
jle
mov
xchg
ljmp
bound
int3
pusha
shlb
push
es
cmpl
in
aaa
pop
out
pop
pusha
mov
adc
pop
and
sahf
xchg
jbe
ret
xchg
jle
mov
fsubs
xchg
jb
into
js
mov
pop
lods
push
lea
and
xor
sahf
bound
and
xor
imul
into
dec
lea
call
mov
pushf
dec
mov
mov
mov
call
add
scas
ret
sub
and
mov
push
mov
clc
mov
and
js
sahf
xor
out
dec
pusha
push
ss
push
mov
das
rcrl
mov
or
aas
aaa
add
mov
push
pop
cmp
call
sarl
fdivrl
mov
push
test
lds
sbb
mov
mov
clc
mov
and
add
push
fsubl
ret
leave
sbb
mov
dec
mov
cmc
clc
pop
dec
cmp
daa
popf
in
jg
push
fisubrs
sub
mov
and
scas
inc
aad
aas
call
lea
icebp
push
xor
jecxz
xchg
push
xchg
mov
xchg
fwait
les
shrb
int
sahf
pop
pushf
stos
int3
or
sub
push
xor
mov
leave
subb
adc
sahf
std
cli
shrl
mov
sub
xor
sbb
aaa
cli
scas
push
lock
fists
call
inc
xchg
pop
lcall
and
scas
shll
imul
jnp
push
mov
enter
jns
in
or
mov
lods
lcall
mov
mov
jns
lds
or
add
dec
xchg
mov
and
out
sbb
cmp
sub
pop
add
mov
sbb
dec
inc
fadds
xor
xchg
aaa
outsl
cld
mov
mov
les
mulb
ja
insl
arpl
ja
inc
in
or
jecxz
dec
inc
addr16
inc
les
mov
mov
push
and
clc
fsubs
je
pop
dec
fisubl
dec
cmp
push
or
jecxz
test
xor
and
lahf
stc
out
lea
data16
sbb
rcl
leave
adc
fsts
enter
push
and
xor
push
pop
movsl
or
inc
jg
jnp
data16
lds
cmp
dec
lret
test
loop
or
sub
mov
sarb
add
ss
push
lods
stos
push
mov
enter
aaa
fcmovne
cli
in
insb
mov
pop
xchg
daa
cld
lcall
out
test
and
cwtl
pop
pusha
jb
sbb
adc
mov
mov
dec
mov
mov
sbb
arpl
cwtl
push
inc
or
jp
xor
and
xchg
mov
outsl
and
fcomip
das
dec
xorl
iret
cmp
sbb
pop
cs
lds
mov
dec
jae
add
cmp
add
mov
loopne
nop
mov
ret
or
dec
into
sbb
jmp
dec
in
push
sbb
divl
pop
aas
es
enter
shlb
mov
sub
lods
idiv
jnp
and
enter
andb
jle
mov
or
in
lahf
cs
fsubrp
jge
loop
or
int3
sub
fidivs
xchg
or
out
aad
ret
insb
xor
imul
inc
and
fldl
rorb
mov
imul
ljmp
movsl
repz
sbb
cmp
jle
push
push
xor
and
jle
or
loopne
mov
jnp
push
or
subl
pop
sub
imul
and
rcll
sti
dec
jecxz
call
outsb
cmp
loop
pop
mov
xor
stc
lret
aaa
cmp
mov
ja
movsl
out
xor
addr16
sub
hlt
xor
push
lret
mov
addr16
dec
stos
mov
mov
fucomip
mov
cld
clc
lock
add
sub
push
dec
and
mov
lock
jb
lret
pop
sbb
nop
add
cltd
cmp
sub
jmp
push
jge
jg
lret
sub
sbb
ss
mov
mov
notl
mov
and
fcmovnu
jnp
sub
push
xchg
push
fnsave
pop
adcl
pop
pop
testb
sub
xor
dec
xchg
test
sub
push
pop
jo
fdivr
push
repz
xor
add
and
adc
mov
icebp
xor
pop
sub
sbb
fsts
sbb
fistpll
xlat
sub
loope
mov
in
aad
loope
push
and
jg
cmp
cmp
lock
test
fcoms
jne
mov
jb
xor
cmpsb
dec
sub
lcall
xor
xor
mov
cmp
sti
dec
dec
mov
sub
mov
dec
inc
dec
repz
jle
fucomip
xor
sbb
movsl
xchg
xor
outsl
cli
cmp
pop
and
inc
pop
push
insl
outsb
or
loope
icebp
cltd
in
shll
fistpl
xchg
adc
leave
mov
sub
add
testb
add
push
les
cmp
adc
repnz
sbb
pop
verw
jmp
push
repnz
mov
jg
sbb
xor
in
cltd
cmp
jg
ret
cmp
shll
mov
out
jb
mov
or
andb
imulb
sarb
mov
xchg
xchg
adc
arpl
mov
in
in
lcall
stc
stos
int
xchg
outsl
pop
push
mov
push
pop
leave
xchg
movl
aaa
daa
sub
sub
ja
pop
sbb
lret
and
mov
testl
sub
pusha
cmpsl
push
sbbb
insl
repz
iret
les
or
xchg
sub
cmp
mov
aas
cmp
dec
fs
adc
test
test
add
in
or
cmp
out
add
rcr
sbbl
mov
mov
mov
dec
cmp
mov
dec
jno
mov
lret
aad
nop
andb
arpl
push
sub
push
fidivl
fcmovnb
jg
sbb
dec
fsub
or
rolb
js
loopne
mov
pushf
lahf
lea
sbb
add
movsl
add
inc
jns
or
and
hlt
mov
or
loop
and
jbe
cmc
aad
sub
pop
not
movsl
outsb
cmp
xor
mov
aaa
cli
stos
add
daa
mov
cmp
aas
or
addr16
push
cmp
sub
sbb
inc
stos
pop
stc
rorl
xor
lcall
pop
repz
testl
add
leave
push
xchg
cld
adc
inc
cmp
je
push
push
in
js
ret
bound
sbb
fldt
pushf
cmc
adc
shrb
leave
push
cltd
shll
call
dec
ja
adc
mov
jg
push
adc
and
mov
mov
cmp
pushf
add
mov
inc
pop
cld
xor
push
xlat
aaa
xchg
mov
mov
imul
loopne
inc
cmp
cmp
cmp
nop
mov
stos
std
mov
pop
cmp
lock
cmp
push
pop
lret
dec
jbe
lds
pop
cmp
popf
movsl
sub
fsubrs
fidivrs
mov
dec
fildll
aas
fldenv
xor
imul
sub
jl
test
dec
jns
inc
jle
call
mov
fisubl
jno,pn
fnstsw
fdivrs
fsts
inc
out
push
mov
insb
testl
mov
jns
add
jecxz
pushf
and
cs
pop
mov
fcmovnbe
cmp
mov
cld
xor
scas
sbb
jne
lods
pop
ds
lahf
cmp
push
pop
pop
fistl
push
loopne
push
sbb
mov
mov
insb
and
cwtl
cld
dec
popf
ret
fwait
imul
mov
fwait
xchg
popa
mov
ret
xchg
or
lods
jbe
push
in
aas
nop
cmpsb
mov
add
pop
fisubrl
movsl
pop
dec
inc
jecxz
inc
cwtl
std
cmp
jno
dec
cwtl
dec
rcrb
test
addr16
sbb
add
aas
in
cmpsb
push
inc
pop
arpl
or
andb
sbb
scas
or
or
cmp
lahf
mov
add
mov
push
lret
lret
mov
cld
les
pop
int3
in
int3
jge
fbstp
in
adc
xchg
les
jb
pushf
cmp
stos
cld
scas
add
mov
mov
dec
fisttps
cmp
jns
rol
fstl
jle
adc
ja
hlt
xor
mov
mov
repz
push
sbb
or
cmp
int3
inc
dec
bound
movsl
sbb
lods
dec
test
pop
xchg
xorl
xchg
test
dec
aad
xor
mov
repnz
mov
out
test
outsl
mov
je
and
xchg
mov
sbb
aaa
adc
nop
repz
and
inc
push
jle
cmpsb
pop
inc
mov
dec
mov
mov
loopne
in
cmc
test
dec
push
scas
sbb
pop
dec
fprem1
xor
js
sahf
mov
push
xchg
pop
and
rcr
push
sub
out
mov
leave
mov
mov
addr16
lea
jns
xchg
mov
out
aam
dec
push
in
loop
inc
push
or
mov
push
lahf
or
addr16
cmp
xchg
jmp
xchg
inc
loopne
dec
fwait
pop
sbb
or
mov
mov
popf
and
cmp
mov
add
and
adc
jae
das
call
mov
push
cmp
or
enter
and
and
and
cmc
aam
push
dec
mov
gs
pop
cwtl
out
movsl
enter
clc
and
nop
xchg
neg
mov
push
addb
push
xchg
and
jg
fdivs
in
dec
into
mulb
xchg
fsubs
xlat
xchg
iret
mov
pop
dec
outsl
out
sbb
nop
cmpsl
or
pop
mov
or
ret
mov
insl
inc
mov
es
adc
lods
mov
jb
xchg
stos
lods
pop
fbld
jns
cmpsb
dec
inc
xchg
pop
test
xchg
int3
adcb
shrl
jp
push
adc
push
nop
mov
mov
jl
icebp
mov
imul
add
mov
stos
sbb
popf
cs
out
fimuls
pop
mov
jmp
push
sub
adc
jmp
cmpsb
or
or
mov
jne
test
or
inc
add
adc
mov
fidivrs
mov
sbb
jnp
cmp
inc
add
das
pusha
adc
xchg
xlat
in
leave
imul
dec
or
jns
popa
repnz
lahf
jp
outsl
stc
cmp
mov
ljmp
add
inc
adc
xchg
leave
into
in
les
fcoml
cmp
flds
jl
lea
lret
mov
jo
mov
fimuls
jge
jle
addb
arpl
dec
daa
or
scas
jle
sbb
test
aaa
push
jecxz
insw
mov
or
pusha
pop
adc
ja
and
sahf
xchg
cmp
mov
faddl
jmp
aas
movsl
movzwl
ljmp
jg
sub
jmp
mov
push
lret
aad
push
ja
stos
repnz
cmp
shll
lsl
mov
les
jl
push
insl
cmc
into
stos
jno
scas
gs
jp
lret
and
mov
jecxz
xchg
cld
sbb
enter
xlat
xchg
cmp
mov
cmpb
push
in
clc
hlt
mov
xor
sub
cmp
imul
or
int3
or
fadds
jmp
push
jge
shlb
fstpt
cmc
mov
lea
mov
fimuls
hlt
lretw
scas
fcomp
xchg
jae
insb
and
cwtl
call
cmp
in
les
push
rclb
mov
mov
dec
add
insl
xchg
test
push
fadds
xchg
dec
ds
test
out
mov
push
stos
mov
jbe
dec
out
daa
repz
fistpl
sub
jae
jl
loope
bound
mov
popa
sbb
outsb
test
add
cmp
idiv
cmp
mov
sub
mov
inc
pop
mov
inc
lods
es
or
repnz
jg
xchg
jge
add
and
push
dec
movsl
and
xlat
fiaddl
dec
jbe
pop
push
inc
mov
test
sub
test
in
cmp
and
int3
stos
rolb
fldl
xor
ja
mov
jne
testb
mov
jns
jle
pop
add
mov
ret
push
adc
movsl
fsubr
out
icebp
insl
xor
sbb
inc
ja
mov
mov
dec
push
jp
or
stos
test
push
jo
jecxz
push
fwait
cltd
cwtl
sbb
cmpsl
xchg
xor
inc
dec
sbb
movb
sub
push
xchg
arpl
mov
cmp
adc
lret
js
jae
ljmp
dec
loop
cmp
pop
jbe
lods
inc
les
jge
mov
shlb
cmp
sub
xchg
ret
stos
or
movsl
push
mov
lret
cmc
cs
dec
movl
xchg
into
add
out
mov
mov
leave
pop
push
pop
mov
and
mov
sbb
subl
and
cmpsb
pushl
ror
loope
add
cltd
mov
stos
cmp
clc
mov
iret
shl
shlb
loopne
add
mov
and
in
push
out
or
lahf
mov
out
sub
push
or
shlb
lahf
mov
mov
sbb
dec
jb
into
dec
jne
cs
and
pop
scas
inc
jne
jle
andl
add
out
cmp
mov
cli
ja
icebp
mov
xchg
loope
or
mov
and
pop
daa
cmp
push
clc
push
pop
loop
jecxz
mov
cmc
dec
mov
push
add
xchg
push
fsubrs
subb
mov
test
cmp
or
gs
shll
dec
adc
leave
sub
xchg
ljmp
and
insl
fdiv
fisttpll
js
js
into
lcall
call
mov
sub
dec
ficomps
and
mov
pop
cld
fsts
xor
rcll
or
push
mov
stos
cmp
push
cmp
ja
ja
push
loop
xchg
sbb
xchg
mov
idiv
or
lods
jp
lock
addr16
stc
mov
in
add
pushf
and
push
xchg
cmp
jg
dec
bound
pop
jb
mov
add
aaa
xchg
shrl
mov
lods
add
mov
rorb
nop
fwait
cmp
mov
mull
pop
mov
add
sarb
pop
lret
xchg
cs
cli
push
jg
imul
in
aad
ds
jbe
sub
lods
xor
mov
aaa
pop
push
xchg
scas
adc
outsl
adc
and
sbb
cmp
inc
xlat
cmpsb
mov
jo
adc
push
adcl
movaps
icebp
pop
cmp
cmp
mov
call
loope
ret
mov
aaa
int
mov
xchg
lret
mov
fisubrs
mov
int
test
je
ficompl
in
filds
jmp
and
mov
out
or
add
jmp
sahf
repz
popa
dec
shll
add
nop
ret
sbb
push
and
push
test
mov
push
add
scas
mov
mov
fmuls
adcb
mov
sti
mov
fistpll
test
mov
pop
xor
test
leave
adc
sbb
mov
scas
divb
add
nop
jle
push
mov
mov
xor
pop
pushf
fisttpl
mov
push
xchg
iret
in
lods
xchg
pusha
sub
stos
sub
stos
std
lcall
mov
cltd
jae
inc
xchg
sub
dec
inc
pop
dec
and
sub
xchg
stos
jbe
mov
jb
mov
lret
inc
add
loope
aas
loopne
test
xor
sbb
nop
out
icebp
ret
xor
inc
repnz
out
pop
xchg
mov
cmp
dec
daa
push
and
mov
mov
std
sub
mov
xchg
inc
sub
xor
cld
add
mov
xor
xor
cmp
ret
aaa
cli
mov
enter
scas
inc
outsl
lret
xchg
sub
mov
mov
scas
push
sub
inc
popf
sbb
cmp
sbb
or
mov
jns
scas
fwait
cwtl
mov
inc
xchg
icebp
adc
pop
into
jle
jge
int
cli
das
aad
out
push
inc
je
arpl
pop
mov
sbbb
dec
psubsw
mov
mov
popa
outsb
jg
fdivs
popa
fcompl
sub
aaa
xchg
int
jg
lock
into
in
add
sti
outsb
adc
jle
or
inc
jp
xchg
inc
mov
mov
movsl
fcompl
cld
movsl
in
mov
push
inc
lods
push
sbb
shr
or
js
mov
imul
dec
lret
jecxz
subb
or
xchg
jle
icebp
arpl
pop
outsl
and
cli
xchg
popa
sub
imul
test
push
xchg
mov
cli
sbb
push
mov
dec
inc
stos
lcall
jmp
sqrtps
mulb
jae
shlb
adc
rcrb
scas
scas
adc
out
enter
int
nop
push
imul
cwtl
pop
adc
fdivl
add
stos
push
jp
rclb
sahf
mov
loope
lock
loope
rol
push
out
loopne
loop
mov
mov
jne
push
or
or
js
fsubr
push
xchg
jecxz
push
mov
dec
test
jne
out
sbb
inc
push
or
into
jmp
jnp
into
enter
ljmp
cmp
mov
test
out
test
movsl
mov
xchg
push
into
jl
add
out
sbbb
stc
mov
xor
int
test
lahf
and
daa
adc
fidivs
xor
push
mov
les
test
xor
push
jge
lcall
movsb
cmp
bound
ljmp
aaa
cmp
int3
imul
js
fsubrs
cmp
pop
xchg
hlt
out
jg
fs
adc
cli
fildll
inc
sbb
mov
xor
rcrb
cwtl
jl
mov
jno
mov
xchg
mov
mov
or
sbb
xor
outsl
loope
cmp
inc
or
imul
pusha
daa
fcompl
outsb
ja
cmp
fwait
std
jmp
mov
jb
mov
sbb
test
mov
pusha
push
mov
loop
subb
adc
mov
pushf
repnz
fistps
scas
stos
daa
shlb
xchg
les
lods
mov
mov
push
shll
nop
cmp
pop
and
mov
inc
dec
outsl
cld
mov
mov
xchg
negl
mov
gs
push
std
das
aad
lahf
mov
sub
js
jae
fcmovnbe
push
mov
dec
fimull
outsl
and
sub
jno
xchg
outsl
mov
neg
shll
mov
testb
lds
jb
jo
lds
stos
inc
test
and
nop
dec
xchg
pop
outsb
xor
inc
push
icebp
pop
jp
mov
out
cmp
push
outsl
nop
ss
jo
addb
push
fstl
xchg
lods
mov
mov
cltd
add
jns
int3
mov
ret
cmpsb
call
mov
loope
adc
push
xor
icebp
out
or
outsb
push
push
xlat
pop
sbb
pop
cs
xchg
shrb
push
adc
xchg
mov
jne
test
imul
adc
add
inc
cwtl
int3
pushf
push
fnstenv
in
and
push
stos
inc
jns
insb
push
sub
out
mov
and
test
mov
pop
xchg
outsb
in
repnz
hlt
ds
add
adc
call
bound
and
add
gs
jno
xchg
jecxz,pt
pop
push
inc
imul
out
inc
push
mov
leave
ret
rcl
scas
lea
fistpl
out
movsb
lcall
add
mov
and
inc
rclb
xchg
or
xor
rcll
mov
mov
jb
inc
sub
enter
arpl
out
xorl
es
mov
jo
push
sbb
in
into
sub
jae
leave
loope
sub
lods
push
pop
xor
and
push
dec
pop
adc
jne
cld
mov
cld
imul
or
aaa
cli
jae
xchg
test
lds
mov
and
dec
jle
pop
sahf
jnp
sub
jg
xchg
lds
push
clc
fstps
or
mov
jmp
shrl
iret
xor
sub
pop
push
leave
lcall
scas
ret
sbb
push
mov
stos
out
fwait
enter
stc
fdivr
inc
cmpsl
push
jb
loope
pop
mov
jbe
mov
xlat
push
fistpl
outsl
popa
xor
ds
outsl
cmpsl
xchg
jl
test
push
inc
dec
mov
leave
out
loopne
xorb
sub
cmp
jbe
inc
scas
xor
arpl
xchg
aad
adc
ss
js
sbb
stc
sahf
add
sbb
jle
in
dec
push
out
mov
movsb
xor
jne
in
data16
mov
xor
dec
cmpsb
data16
nop
sbb
ficomps
or
sarl
loope
or
call
mov
xchg
push
push
inc
or
mov
shl
jle
in
and
in
lock
std
seta
sub
add
xor
aam
in
fstpt
or
xor
fwait
fwait
aam
arpl
dec
mov
and
push
mov
test
shll
push
pop
rclb
out
mov
clc
ret
mov
xchg
dec
push
repnz
mov
mov
mov
pop
rcll
xchg
outsb
xchg
mov
xor
test
mov
jnp
test
ror
clc
movsl
mov
cmp
sbb
icebp
popf
cli
ljmp
into
inc
les
popf
xchg
inc
jmp
addl
and
shl
aaa
fxch
fdivs
add
aas
jae
les
push
lret
movsb
repnz
inc
stos
push
cmp
mov
jnp
aad
lret
mov
push
lock
imul
out
mov
out
jl
bound
xor
ret
es
cld
adc
idivl
fmull
xchg
inc
sbb
jbe
loop
jg
test
lods
popf
push
cltd
push
inc
xchg
cmp
add
mov
mov
rcr
pop
jp
xor
push
cmp
jns
ss
xchg
sub
cmp
and
int3
adc
fisttpll
xor
pop
jg
cmp
xor
mov
mov
jb
inc
jg
mov
pop
pop
arpl
mov
adc
mov
roll
mov
stos
ja
rclb
pop
lods
mov
mov
loop
xchg
sbb
xchg
add
cld
adc
flds
call
imul
ljmp
frstor
dec
fcmovnbe
out
popf
in
aas
movsl
jp
sbb
cmpsb
js
fs
fbstp
dec
or
inc
mov
push
lods
xor
xchg
mov
sarb
cmp
mov
mul
ret
jp
sbb
push
sarb
loopne
lret
push
cs
cli
push
incl
imul
popa
stos
mov
aam
sti
mov
xor
pop
int3
push
sti
mov
outsb
pop
les
stos
push
sahf
jb
jg
inc
loope
adcl
cltd
xchg
sub
xlat
icebp
cmpb
clc
lret
and
or
xchg
loopne
outsb
es
jae
cmp
out
xor
or
rclb
ljmp
xor
in
push
add
in
stos
out
imul
xchg
cmp
add
sub
mov
imul
inc
sbb
loopne
or
jmp
push
shr
insl
dec
sub
inc
or
insb
xchg
fisubrs
pop
movsb
xchg
push
lahf
imul
bound
into
cmp
push
nop
neg
and
sbb
mov
add
movsb
nop
out
leave
mov
inc
push
pop
cs
jp
mov
rol
push
rcrl
mulb
loope
sbb
push
clc
sarl
out
jge
inc
sub
stc
rcr
inc
pushw
std
xchg
rolb
pusha
mov
mov
cmp
xchg
adcb
mov
xor
repz
cmp
push
add
jg
repz
xchg
dec
dec
or
adc
dec
sub
ret
jecxz
dec
mov
sub
orl
xchg
iret
or
fs
icebp
fsubrs
or
mov
cmp
xchg
adc
lret
fldl2t
xor
repz
and
mov
dec
popa
mov
nop
clc
sbb
push
jo
out
mov
mov
call
sbb
or
iret
stos
test
fldl
lret
subl
ja
rclb
add
add
pop
negb
mov
jae
testb
pop
adc
lock
repz
aam
inc
mov
pop
lods
adc
cmp
fmuls
inc
lds
cmpsb
inc
pop
jecxz
and
jp
sar
pop
ds
mov
inc
ficoml
add
cmp
push
cld
pushf
dec
loopne
dec
stc
mov
ds
inc
push
jp
insb
insb
mov
orl
int3
fdivs
shrb
rclb
data16
mov
dec
xlat
nop
out
loop
mov
cmc
push
mov
pusha
sbb
xor
es
xchg
sbb
repz
decb
sub
aaa
inc
pushf
popa
mov
xor
jl
dec
jbe
dec
cwtl
daa
ss
push
pop
dec
dec
gs
mov
dec
push
test
out
xor
xchg
push
clc
pusha
mov
ja
xchg
adc
lahf
and
movsl
clc
xorl
icebp
iretw
push
test
leave
fnstcw
sub
testb
xor
mov
rcrb
je
mov
jge
inc
data16
dec
fbld
sti
movsl
fxch
adc
sub
sahf
dec
xor
or
push
and
adc
push
mov
pop
test
fwait
push
in
dec
aas
jmp
repnz
pop
ja
mov
ret
xchg
test
mov
mov
and
jle
cmp
lret
mov
and
sub
inc
rcr
push
ljmp
scas
nop
sbb
dec
dec
mov
jecxz
xchg
outsl
mov
mov
sub
push
jnp
inc
scas
jl
or
aas
enter
dec
sbb
jmp
sub
inc
aaa
aas
lea
jb
inc
jmp
sbb
and
popa
lahf
lret
int
jnp
test
ljmp
pop
aaa
mov
cmp
ret
adc
mov
pop
sbb
mov
out
movsl
in
fcomip
cs
jno
mov
inc
sbb
jmp
mov
and
mov
dec
xchg
imul
sub
cmp
je
scas
icebp
xchg
aas
stos
lods
out
addb
and
push
pop
push
dec
cmc
jae
dec
xchg
orl
shl
ret
inc
lds
loope
jae
je
rorb
fcmovu
add
push
shlb
cli
push
ja
cmp
aad
repnz
fcoml
mull
decl
call
call
sub
lret
mov
push
jns
arpl
les
mov
les
push
mov
lds
adc
mov
mov
cmp
adc
add
mov
sub
xor
out
fistl
or
shll
pop
mov
ljmp
mov
push
xlat
int3
in
jp
sub
lea
scas
inc
pop
or
out
mov
jns
rol
pushf
jo
ds
in
sahf
lcall
mov
into
stos
jl
sub
fadds
hlt
sbbb
iret
jge
sub
test
lea
xor
jne
arpl
or
mov
in
pop
push
mov
bound
je
stos
hlt
sbb
dec
push
mov
inc
xchg
mov
push
adc
mov
out
push
dec
mov
pushf
shr
add
mov
mov
js
pushf
movb
arpl
fadd
xorps
sub
sub
bnd
jp
sbb
nopl
mov
push
mov
ss
aaa
adc
gs
mov
stc
std
dec
dec
popf
sbb
xor
addl
imul
pop
mov
stos
xchg
xchg
fld
sub
pusha
iret
leave
adc
arpl
mov
out
aam
jne
addr16
and
sub
scas
fdiv
scas
inc
jnp
or
push
sub
jnp
int
pop
sub
mov
add
jo
or
inc
and
and
decb
mov
lods
outsl
incl
inc
rclb
dec
jns
lret
icebp
sbb
jle
sub
cmpsl
xchg
in
mov
fs
enter
lods
loop
and
sub
test
mov
das
repz
rcrl
mov
cmp
das
fisttpll
out
xchg
push
inc
divb
mov
jbe
mov
mov
jp
bnd
jne
movsb
push
ficompl
xor
dec
pushf
cmp
sti
hlt
xorb
mov
mov
popl
repnz
pop
or
test
mov
les
js
cli
fisttpll
jo
mov
cs
mov
les
aas
imul
xchg
xor
bound
int
cmp
stos
or
es
out
test
inc
pusha
sahf
pop
cmp
cmp
push
mov
fbstp
arpl
mov
lods
xchg
outsb
shlb
in
xor
mov
jb
adc
nop
xor
gs
nop
push
andl
inc
jo
adc
mov
in
cmp
and
inc
sarb
out
push
cltd
jae
xchg
icebp
aam
test
sbb
movsl
lods
ja
or
shll
popa
jnp
lock
xchg
mov
mov
inc
iret
adc
fildll
cmp
leave
mov
push
lea
inc
sbb
sbb
add
mov
cmp
loope
sbb
lret
dec
jns
mov
adc
pop
ja
leave
mov
inc
insl
sarl
mov
add
testb
mov
mov
sub
and
jne
les
je
mov
xchg
movups
xchg
xchg
pop
aaa
pop
mov
jg
mov
add
mov
mov
sub
popf
mov
insb
and
rol
pop
sub
mov
adc
pop
xchg
fld
sub
jge
iret
test
or
movsl
lock
dec
fwait
out
in
sub
loop
ret
mov
cs
or
je
inc
scas
out
and
add
push
push
roll
insl
lcall
cmpsl
in
popa
mov
mov
pop
sti
out
mov
jb
adc
loopne
adc
rorl
std
icebp
daa
ret
cwtl
mov
inc
clc
adc
mov
xor
push
cwtl
test
orb
xchg
jp
or
sub
pop
add
lds
je
into
and
adc
mov
or
mov
and
adc
pop
outsl
scas
or
int
scas
xchg
push
out
xor
push
xchg
mov
mov
fcoms
jns
pop
dec
loop
fsubs
cmp
mov
stc
jp
inc
push
out
fwait
mov
loopnew
sub
inc
xor
dec
jb
shlb
and
push
jg
lods
xchg
fcmovnbe
or
cmc
fldenv
cwtl
push
lea
cmp
rcrl
outsb
push
shrl
adc
gs
movb
push
arpl
ficomps
add
std
push
mov
mul
mov
inc
push
push
inc
cli
adc
xlat
adc
pop
call
add
fbstp
dec
add
in
hlt
jne
mov
push
and
mov
ret
gs
in
inc
insb
fxch
sub
xchg
aad
or
cltd
pop
iret
lods
cmp
sbb
addr16
jnp
xchg
in
mov
scas
pop
pop
mov
cld
mov
inc
bound
scas
xchg
xlat
cmc
and
pop
pop
or
mov
lds
std
mov
dec
mov
dec
pop
push
outsl
movsb
in
mov
int3
and
std
xchg
inc
pop
cltd
jbe
and
inc
and
jb
jae
xor
imul
lret
jle
test
push
pop
cmpsb
and
les
inc
dec
paddq
lods
stos
mov
xor
and
shr
adc
dec
push
pop
sub
adc
mov
fptan
push
add
stos
pop
js
push
pop
idivb
scas
popf
inc
mov
sub
leave
sub
jle
enter
jnp
add
test
lods
dec
and
mov
sbb
sbb
sbb
sbb
gs
pop
push
in
jne
into
je
adc
pop
rolb
and
inc
loopne,pt
lods
fiaddl
rcr
mov
cli
scas
pop
sahf
inc
cwtl
stc
ror
push
jo
or
jmp
pop
inc
add
pop
add
addb
mov
jle
or
ficoml
or
lret
incl
jl
imul
xor
int3
sahf
test
cli
gs
push
neg
push
mov
jns
push
cmp
xor
xor
fdivs
or
sti
aas
adc
pop
and
push
xchg
pop
push
movsb
push
xchg
sub
mov
lret
xchg
popw
mov
add
call
add
arpl
in
add
dec
push
test
hlt
mov
nop
sub
mov
jle
enter
sbb
cld
pushf
push
out
xchg
cmp
mov
aam
es
jo
ret
scas
and
lock
lods
insl
sbb
mov
shlb
mov
stos
mov
adc
test
xchg
dec
sbb
std
push
out
clc
in
or
and
mov
dec
sub
xor
add
into
adc
inc
sub
push
cmp
insl
mov
jle
or
fisubrl
push
mov
out
jl
push
lahf
sbb
cmpsb
and
inc
sarb
cli
jae
pop
push
out
in
mov
inc
pop
push
and
mov
xchg
dec
jp
dec
and
lock
mov
push
sbb
test
jbe
add
shlb
jg
int3
cld
lcall
mov
inc
cmc
adc
ficomps
outsb
cmp
enter
and
repnz
loop
push
js
push
sub
pushf
bound
mov
lret
call
add
xor
iret
lret
push
es
mov
xor
or
xor
shl
sbbl
xlat
adc
mov
sbb
sub
and
scas
ja
popa
or
fdivr
lods
xor
ret
ss
jecxz
xchg
mov
sbb
into
pop
pushf
or
cli
clc
xchg
xchg
xlat
sbb
xchg
rcrb
stos
les
pusha
mov
aad
ss
add
lahf
sahf
cld
sub
cli
pop
mov
and
mov
inc
or
dec
fsubrl
push
xchg
sub
test
dec
bound
addr16
jbe
add
rcrb
cld
testb
mov
inc
adcl
or
dec
enter
and
bnd
cmp
sbb
stos
inc
js
push
ds
bound
mov
pop
xlat
call
insb
adc
cmp
lret
xor
xorb
fidivrl
or
xor
shr
test
dec
ljmp
mov
and
ret
xor
push
fidivrs
js
jno
ja
xchg
jge
mov
dec
mov
in
cmpsb
fisttpll
cmpsb
xlat
or
arpl
mov
out
push
repnz
into
or
test
add
pop
adc
dec
test
push
xchg
negb
sub
cmpsb
outsb
jne
add
rcr
sahf
movsb
sub
cli
inc
mov
push
pop
mov
les
mov
xchg
inc
inc
xchg
outsb
and
aam
lock
int3
lods
shr
xor
push
bound
cs
cmc
movsb
aad
test
es
jmp
pop
lds
addr16
jge
daa
push
hlt
repz
or
out
movsl
xor
mov
movsb
shll
scas
mov
push
mov
test
sub
iret
popf
aad
fidivs
div
xlat
lret
bound
xchg
cwtl
mov
xor
xlat
call
dec
subl
cs
hlt
repnz
jae
xchg
inc
sahf
mov
adc
sahf
jmp
ret
xor
call
in
sbb
sub
shlb
or
inc
dec
sbb
sbb
test
les
mov
mov
and
pop
pop
dec
push
fsubrp
adc
or
aam
ljmp
clc
push
dec
hlt
addr16
add
or
push
pop
mov
mov
ss
and
xchg
xor
les
xchg
cmp
jg
dec
popf
mov
and
jae
mov
add
fcomps
sbb
mov
insl
add
sub
enter
shll
loope
jns
jp
fisubrs
ljmp
pop
test
xlat
cmp
inc
inc
repnz
mov
scas
and
sarl
loope
insl
and
lea
ss
pushf
in
in
ljmp
test
or
ret
dec
int3
lods
inc
outsl
dec
jle
mov
sbb
pop
mov
test
loopne
ret
pop
in
push
sbb
out
pop
sti
daa
shll
icebp
inc
negl
push
gs
or
xchg
ss
cwtl
in
je
aam
stos
imul
fiadds
out
xchg
mov
cmp
xchg
iret
adc
stc
or
adc
pop
cli
pushf
lret
cmpsb
mov
fdivl
js
hlt
loop
rcrl
cmp
lret
push
cmp
lcall
inc
repz
es
mov
leave
lahf
ss
adc
pop
lds
xorb
sti
xor
lods
aaa
scas
in
xchg
xor
lret
test
pop
iret
clc
ret
cmc
in
fadds
enter
scas
cld
adc
test
cltd
lods
mov
les
insb
testb
sarb
sbb
aaa
testb
scas
or
frstor
pop
sub
call
push
xlat
push
dec
dec
mov
jle
pop
inc
divb
in
in
cmp
stos
out
and
imul
cmp
dec
inc
test
test
push
pop
lret
repz
or
fidivs
mov
and
xlat
lahf
xchg
loope
jmp
mov
pop
out
or
cmp
mov
mov
xor
adc
dec
mov
push
adc
cli
pop
ficomps
hlt
enter
dec
lret
lcall
or
std
xor
mov
cmpsl
out
sbb
jae
jbe
jbe
outsb
call
push
mov
nop
push
loopne
int3
test
mov
ja
sbb
xchg
iret
mov
mov
sbb
dec
stos
in
adc
int
scas
inc
test
or
mov
and
fs
mov
push
cmpsl
imul
pop
es
imulb
pop
push
mov
mov
add
out
or
loopne
xchg
test
pop
lds
cwtl
addr16
or
mov
mov
fcomi
xchg
rclb
mov
pop
out
scas
cwtl
add
cmpb
xchg
inc
clc
sbb
lods
js
mov
les
push
cld
ret
inc
aad
fisubrs
pop
push
das
xlat
rorb
sbb
ss
dec
stos
in
mov
sub
adc
sub
stos
aad
push
cmpsl
test
push
jp
stos
push
mov
ret
test
mov
notb
or
mov
imul
addr16
jno
mov
xor
jae
xor
lock
int3
ja
out
push
lcall
sbb
cmpsb
and
pop
push
or
xor
popa
push
out
frstor
mov
dec
sbb
fdivrs
shrb
icebp
sbb
addr16
fnstcw
mov
cmp
adc
icebp
add
sbb
in
hlt
jg
sub
cli
xchg
rcrb
les
ret
repz
outsl
cmp
sub
aad
jecxz
sub
mov
jge
xchg
movsl
mov
mov
ljmp
cmp
insb
push
cmpl
jae
popa
jo
shrl
ja
movsb
push
sahf
ficomps
lret
jb
daa
xor
jl
xchg
dec
lret
cmp
pop
add
xchg
pop
mov
cltd
inc
dec
fsubrl
push
add
rorb
mov
into
stc
sbb
jbe
mov
fisubl
push
fldcw
xor
sub
lock
pop
add
insl
sti
sbb
fcomps
mov
adc
and
mov
movsb
push
mov
jnp
cli
add
mov
in
push
xchg
mov
push
movb
sub
inc
dec
addr16
xor
int
pushf
mov
fstpt
xchg
sbb
repnz
js
push
lock
push
fisttpll
jp
jo
cmpb
and
pop
mov
mov
enter
aad
aaa
jg
pop
lret
test
cmc
das
xchg
fcmovnbe
lahf
dec
mov
pop
loope
cmp
daa
mov
and
in
jae
repz
sbb
ds
push
cmp
pushl
scas
test
sti
xor
ss
push
sbb
bound
fs
jno
icebp
xchg
mov
stc
mov
fcmovb
stc
movl
mov
int3
xor
mov
pop
dec
adcl
mov
sub
adc
subb
out
xor
bound
adc
jecxz
test
scas
mov
lcall
add
js
test
aam
je
xchg
add
fisubrs
add
jnp
pop
dec
in
sub
adc
add
rorl
mov
or
push
or
sbb
add
xor
in
fisubl
mov
fadd
shlb
sahf
ja
cmp
push
dec
xchg
lods
cmp
test
addb
add
fs
sub
dec
sbb
stos
outsb
push
repnz
push
insl
mov
fidivrl
add
ja
ret
push
out
int
dec
scas
mov
mov
nop
cs
sbb
cmp
pop
pop
lds
xor
shll
insl
jmp
push
ja
out
push
cmp
pop
ja
cmp
mov
add
and
mov
shlb
shll
mov
dec
sub
adc
jle
cmp
in
sti
dec
jg
xchg
jp
test
adc
push
adc
push
lock
pop
mov
jbe
add
push
push
pop
sub
je
outsb
xchg
aad
mov
cltd
pop
mov
pop
loope
adc
rcrl
jnp
pop
vmread
sbb
or
cs
adc
xor
xorb
mov
dec
lods
mov
and
fildl
fdivr
mov
xor
addr16
out
cmp
test
and
into
mov
sbb
data16
shr
jg
pop
or
fiaddl
sub
dec
adc
cmpsb
jb
lcall
add
sbb
cltd
sbb
sub
mov
jns
mov
stos
clc
xchg
xchg
cs
std
adc
jl
fs
in
cld
not
push
cmpsb
es
lods
test
push
inc
sub
add
push
adc
ds
out
mov
push
and
fistl
mov
in
rcll
inc
push
mov
sahf
sbb
mov
aad
mov
xchg
aaa
mov
clc
in
enter
jecxz
sub
mov
flds
es
add
rclb
adc
xor
pop
cmp
push
aas
rcrb
je
fisubrs
pushf
jbe
fs
adc
das
mov
jge
mov
sbb
adc
sbb
fbstp
cli
and
fs
push
jge
movsl
jns
mov
mov
dec
pusha
jns
test
clc
bound
sub
cmpsb
push
mov
icebp
mov
les
pop
jge
in
call
imul
fisttpll
jmp
orl
out
push
mov
sub
movsl
cmp
sbb
mov
jg
jae
ja
data16
dec
stos
add
jnp
and
das
jecxz
bnd
jbe
xchg
mov
pop
jle
in
and
lret
xor
ret
outsl
popa
xor
cwtl
xchg
or
inc
hlt
sbb
fdivs
push
or
sbb
lahf
push
jp
push
xchg
imul
mov
clc
bound
or
faddl
pusha
inc
mov
test
or
mov
sub
and
or
mov
mov
and
int3
repz
adc
sub
in
xchg
mov
mov
or
xor
inc
inc
ss
xor
cmc
movsb
jo
inc
lock
xor
shl
jbe
sbb
in
push
nop
dec
lret
mov
or
mov
xor
push
dec
outsl
inc
cld
pop
pusha
js
mov
repnz
jne
push
and
call
cmp
mov
jb
sub
roll
adc
jnp
dec
inc
push
rclb
cmp
jne
and
mov
push
in
inc
push
nop
dec
and
pop
repz
pusha
adcb
push
cs
adc
jbe
shrl
mov
test
rclb
rclb
lock
inc
aaa
mov
mov
jl
ret
out
adc
mov
in
mov
jns
inc
mov
aad
out
mov
jge
dec
cmp
adc
jmp
xor
sub
push
push
and
scas
push
cld
mov
xchg
daa
adc
or
add
out
ss
rcll
mov
inc
loopne
jmp
mov
test
insb
addr16
movsl
or
dec
sub
pop
and
cmp
dec
push
xorb
repz
mov
or
mov
or
sbb
mov
jl
fisubrs
dec
or
mov
fwait
dec
gs
stos
sbb
icebp
notl
ljmp
leave
jg
jg
nop
aaa
mov
mov
xchg
sub
ljmp
xor
adcb
imul
ljmp
sar
icebp
adc
xchg
rep
pop
icebp
mov
fdivr
sbb
adc
adc
xchg
enter
jg
mov
adcb
push
addl
in
mov
flds
sub
mov
mov
nop
scas
fxam
pop
adc
pop
jle
lock
adc
cli
and
fsubl
xorb
xchg
mov
loope
hlt
scas
jle
fwait
cmp
push
call
imul
mov
sub
jl
rolb
mov
mov
inc
ljmp
cmp
popf
pop
fcmovu
xchg
sbb
mov
icebp
pop
scas
adc
ror
push
adc
pushf
pop
in
jmp
iret
pop
sti
lds
lcall
add
xchg
test
lret
sub
addr16
sub
arpl
dec
imul
sbb
outsb
pop
mov
sahf
daa
testl
icebp
test
jmp
jbe
and
cmp
jno
cmp
xor
adc
sub
dec
aaa
push
pop
adc
hlt
xlat
mov
sub
ss
mov
xchg
scas
pop
leave
pop
ja
int3
stos
sbb
fdivs
fimull
pop
lods
add
cmpsl
mov
cs
repz
push
les
xorb
mov
xchg
mov
test
cli
jns
aaa
jle
push
mov
mov
cli
es
mov
cmovns
cmp
jne
lods
jmp
pop
lret
jge
jge
or
sub
addr16
bound
ds
inc
mov
cmovl
jae
xchg
mov
mov
or
jo
lret
or
ljmp
ret
pushf
scas
xor
pop
sbb
cmpsb
incl
inc
mov
push
incl
cli
mov
je
leave
hlt
sahf
ss
pop
jae
mov
mov
push
xchg
add
jmp
jne
adc
in
sbb
mov
bound
pop
cmpl
fwait
xor
jecxz
mov
pop
lea
fistps
insl
cmp
addl
not
stos
fstps
pop
xchg
ja
mov
xor
xor
push
popf
jl
sub
mov
scas
push
xlat
xchg
mov
scas
orl
push
mov
ljmp
orl
push
jne
cmpsb
cmc
sub
mov
dec
jg
movb
pusha
push
addr16
pusha
pop
push
mov
mov
xchg
jae
fs
or
lods
or
mov
xchg
out
dec
and
push
xor
fiaddl
pop
push
into
repnz
push
in
xor
xchg
cmp
lods
lea
mov
cmp
jbe
mov
mov
lcall
jnp
leave
pushf
sbb
in
hlt
cmpsb
ja
or
cmp
mov
mov
iret
sbb
leave
ret
xchg
ret
xchg
outsb
arpl
lahf
loop,pn
ljmp
addb
dec
dec
in
push
mov
fmul
shl
sub
push
cmp
inc
add
cwtl
sub
inc
cs
inc
stos
scas
cmc
in
mov
jnp
mulb
cmpsl
incb
movsl
out
lods
or
pop
mov
test
xor
mov
addr16
dec
jecxz
dec
out
std
pop
js
ret
pusha
sub
pop
xor
ja
adc
xor
stc
lods
lods
dec
dec
clc
push
adc
addr16
pop
push
cs
sbb
pop
cmp
and
fisubrs
pop
sahf
sub
dec
dec
pushf
std
mov
ja
push
push
rol
ja
imul
outsb
add
and
das
mov
mov
xor
insl
add
in
pusha
jne
mov
ja
mov
leave
push
imul
ds
sbb
and
cmpl
ret
in
sti
stos
add
pop
repz
andl
jg
sarl
lahf
inc
cld
mov
sbb
sahf
int3
icebp
out
sbb
mov
call
in
pop
cs
loop
pop
mov
adc
push
insl
scas
out
jb
add
push
scas
sti
dec
mov
push
adc
or
sbb
cmpsb
sarl
lds
cmp
ja
adc
data16
sub
decb
cltd
pop
mov
aaa
add
dec
insl
push
in
push
stos
jmp
repnz
pop
xor
mov
sbb
adc
mov
jmp
les
sbbl
jg
jb
repz
sub
lods
in
xor
imul
mov
pushf
orb
cmc
push
cmpsl
cmpsb
scas
jo
adc
addr16
inc
jno
dec
rolb
xchg
xor
adc
shl
xor
hlt
dec
and
xchg
addr16
outsb
and
jo
test
jp
xchg
sbb
push
inc
je
sbb
stos
lods
adc
clc
loop
add
or
clc
mov
sub
push
inc
xor
add
pushf
mov
pop
jb
xchg
ret
mov
in
pop
in
fnstsw
lahf
cmpb
add
out
add
add
out
mov
pop
jae
pop
lea
popf
push
ret
das
add
mov
cs
cltd
imul
pop
jb
ja
aam
mov
mov
push
incl
enter
popf
ret
lahf
jle
mov
je
sub
pop
inc
sub
loope
test
inc
sti
add
outsb
stc
lret
js
pop
incb
lods
push
lock
pushf
xor
jb
xor
add
jl
mov
sub
cmp
mov
in
mov
in
or
ja
inc
cwtl
aad
imul
add
in
jp
inc
push
mov
jnp
popl
xor
pop
loop
xor
ret
cmp
int
insb
lcall
leave
and
sar
fnstenv
aaa
xchg
in
imul
dec
aam
inc
push
cmp
icebp
loopne
jp
mov
xor
cmp
or
inc
ret
dec
fadds
jecxz
push
inc
dec
enter
xor
movsl
mov
sub
call
je
sub
mov
jb
inc
popa
daa
movsb
sbb
jle
lods
or
mov
out
cmp
cltd
movsl
xchg
mov
jno
push
ds
sar
nop
push
mov
add
adc
stos
jecxz
je
sub
mov
and
dec
lods
outsl
jae
in
xchg
pushf
sbb
push
sbbl
jne
icebp
inc
in
adc
xchg
push
xor
add
mov
jnp
mov
aaa
scas
jnp
loop
pop
shlw
pop
lods
ja
scas
or
push
sbb
lock
mov
pop
mov
test
les
mov
cmpl
sbbl
push
enter
pop
stc
cwtl
mov
call
fstpl
mov
roll
pop
sbb
shr
sub
and
scas
push
lret
sarl
add
adc
add
andl
jns
mov
mov
add
rcll
nop
nop
jl
cmp
lea
mov
jo
pop
adc
push
jnp
jbe
xor
add
das
insb
jb
mov
pop
sbb
xchg
jae
sub
call
lods
mov
out
mov
pop
push
push
mov
pop
sub
imul
xchg
dec
jbe
lds
jp
mov
ss
out
cmp
scas
cs
je
scas
pop
dec
sub
dec
adc
push
ljmp
xor
xorl
mov
cmp
ja
cltd
mov
or
sub
xor
mov
sub
mov
icebp
ret
push
cwtl
fadds
cmp
stos
mov
sbb
adc
dec
es
fwait
sub
or
in
dec
and
or
in
test
sub
ret
mov
punpckhbw
or
add
push
arpl
cmc
int3
fs
xor
mov
jmp
inc
mov
sub
pop
xchg
fsubs
out
inc
test
sbb
push
mov
call
mov
dec
mov
and
add
jb
cwtl
mov
repnz
std
mov
sahf
dec
pop
out
int3
dec
rcrb
pushf
test
bound
xchg
mov
loop
and
pop
pop
shrl
fidivl
adc
xchg
stos
cmp
cmp
imul
int
clc
inc
or
mov
dec
and
xor
test
inc
add
lods
mov
pop
push
mov
ret
adc
ret
lahf
call
fldcw
repz
mov
data16
fs
ss
dec
out
test
add
xchg
xchg
out
rcll
add
jle
xlat
inc
scas
push
sbb
mov
iret
fcomip
or
mov
popf
adc
and
out
ja
or
lea
sub
adc
sarb
pop
sbb
pop
pop
leave
nop
mov
stos
xchg
mov
lahf
in
aam
adc
insl
call
outsl
sbb
jle
xor
repnz
mov
addb
imul
imul
xchg
mov
fisttpll
adc
ret
mov
and
jb
inc
popa
and
orl
mov
outsb
sub
pop
cmpsb
jle
push
popf
test
sbb
or
adc
mov
ret
cmpsl
dec
daa
add
mov
adc
out
ret
push
lds
lods
add
and
or
pop
fsubrs
popa
fsubl
mov
adc
lods
or
cmpsl
mov
jmp
sbb
jecxz
pop
mov
jb
or
adc
daa
adc
jecxz
loop
sahf
lock
out
in
pop
mov
sbb
xorl
fcom
push
xchg
jno
sub
test
xchg
shlb
pop
jo
mov
movq
dec
jnp
dec
cmp
aad
dec
sbb
sahf
xchg
sub
enter
and
pusha
bound
xchg
and
sbb
test
xchg
cmp
lret
sti
fisubrs
cmc
inc
xchg
mov
adc
pop
cmp
or
mov
sub
mov
clc
xlat
adc
stos
fsubrs
jge
inc
or
mov
popa
mov
out
add
in
fbld
add
repnz
mov
jne
adc
mov
shr
sub
or
mov
xchg
xor
or
fld1
mov
test
inc
jno
mov
add
mov
adc
mov
pop
rclb
pop
iret
jne
mov
xchg
and
out
lods
int
xorb
pop
xchg
popa
insb
dec
or
pop
loopne
popf
mov
lods
jns
mov
pop
jbe
loop
add
cmp
ret
and
sbb
repnz
ja
and
fs
or
mov
lret
fimull
mov
mov
push
adc
pop
ret
add
or
into
repz
xchg
ljmp
ror
jge
ja
rorb
dec
jmp
inc
movsb
pop
cmp
add
movsb
cmp
mov
or
fcmovu
in
sahf
push
mov
jne
jo
cmp
lods
jl
enter
cltd
mov
stc
xchg
imul
mov
xor
jg
pop
add
int3
lret
and
shl
nop
test
xor
jecxz
xor
jmp
test
rolb
push
into
addr16
cwtl
or
mov
ficompl
imul
cmp
dec
dec
repnz
dec
mov
jle
fmull
lret
sarb
mov
xchg
sub
xchg
cmp
lcall
mov
or
xchg
dec
shll
les
dec
aas
cltd
and
mov
inc
fs
mov
inc
cltd
add
movsb
leave
inc
popa
es
out
sti
int
fadds
rorb
popf
int3
xor
push
jno
shrl
cmp
jno
jbe
lahf
and
fisubrs
cmp
daa
or
dec
xchg
scas
or
das
inc
mov
cmp
aad
cmp
loop
push
xchg
sbb
dec
test
cmp
mov
andl
jno
jecxz
fsubr
cmp
sti
stos
mov
pop
inc
nop
mov
addb
and
ds
jnp
pop
std
aas
stc
jecxz
imul
inc
pop
and
inc
cmpsb
xchg
divl
xor
adc
push
inc
into
fsubrs
cmc
sahf
das
test
gs
std
lods
cmp
cmc
mov
jno
and
sarb
dec
push
inc
sbb
mov
outsl
aam
sub
sbb
sbb
mov
dec
xchg
cmpsb
outsb
aaa
roll
dec
pop
and
xor
fucom
or
mov
mov
pop
outsl
mov
push
mov
fmuls
andb
adc
out
add
jge
push
movsl
ret
and
ja
jb
inc
movl
fprem
mov
pop
stos
movsb
test
dec
hlt
or
and
lock
xor
fwait
xchg
pop
mov
lcall
das
mov
std
or
rol
push
test
pop
jge
jnp
pop
pop
sub
adc
mov
into
insb
push
std
jp
mov
popa
rclb
outsb
ds
xor
aad
push
in
in
lods
in
dec
imul
sarb
pusha
push
loopne
mov
xchg
lcall
pop
cmp
popf
sti
jge
inc
repz
jmp
xchg
jns
out
mov
xchg
mov
mov
mov
test
dec
xchg
sub
and
push
or
sbb
push
cmpsl
add
adc
daa
pop
fucomi
cmp
fstpt
icebp
js
imul
mov
call
xor
mov
mov
and
rcll
jne
fisttpll
adc
addr16
stos
adcb
sbb
popf
cmp
subb
add
int
push
push
nop
push
lods
imul
jns
shll
test
dec
out
aaa
movsb
rcrl
cld
jns
out
xchg
clc
pop
add
mov
mov
outsl
and
dec
sahf
lock
mov
faddl
outsl
loop
xchg
into
movsl
jle
mov
xchg
cmc
insb
cli
sbb
test
mov
in
call
sbb
mov
addb
lea
push
dec
in
fdiv
stos
enter
cmpsl
cmpsl
sub
cltd
and
test
or
rclb
adc
out
aad
jp
enter
or
xor
xchg
notl
add
test
adc
in
ror
cmovl
arpl
bound
inc
xchg
lds
jle
and
fimuls
push
nop
sub
xor
adc
cmpsl
popf
lock
push
or
jns
cltd
je
adc
call
push
mov
adc
incl
push
lods
and
fcomip
jbe
dec
cs
lret
shl
call
ds
jp
repnz
bnd
jb
sbb
in
mov
pop
das
or
shll
inc
clc
xor
cwtl
add
daa
imull
aaa
scas
inc
loope
jmp
jecxz
les
push
add
xchg
sub
int3
inc
push
iret
and
jbe
dec
push
sub
je
sti
ffreep
mov
push
clc
nop
xchg
inc
and
test
xor
in
fwait
pop
lcallw
pop
inc
xchg
mov
cmpsl
rcll
jne
or
xchg
popf
repz
jg
push
aaa
out
and
int3
xchg
cli
add
incb
sahf
mov
mov
pop
ja
hlt
mov
loop
rcr
cld
mov
in
gs
and
data16
pop
mov
lret
sbb
adcl
das
cmp
dec
scas
jno
aad
fmul
xchg
xlat
xchg
xor
mov
jp
push
fadd
inc
pusha
jb
fcomip
popf
sub
cwtl
sbb
adc
fldt
mov
dec
je
cmp
imul
cmp
filds
adc
xor
cld
hlt
dec
pop
inc
push
fst
fdivrs
inc
dec
mov
dec
cli
in
das
scas
insb
adc
out
notb
jg
mov
xor
dec
and
jge
scas
enter
fcomps
imul
nop
leave
cmpsl
leave
test
cli
mov
fildl
repz
mov
mov
push
sub
sub
jno
sub
push
push
add
shlb
mov
push
jbe
dec
lahf
pop
je
pop
test
sub
xchg
pop
enter
lock
sbb
out
adc
mulb
xchg
xchg
mov
xchg
jmp
addr16
pavgw
add
jl
shlb
xor
outsb
sub
add
sysret
or
test
push
dec
pop
pusha
das
cmp
dec
pop
andl
cmp
mov
popa
jecxz
push
cli
push
test
xchg
pop
xchg
adc
dec
ret
mov
jmp
and
inc
test
out
xchg
jnp
add
in
lcall
pop
push
das
orl
pop
into
es
push
ljmp
mov
shrl
xchg
xchg
dec
xchg
in
sub
sbb
mov
xchg
lods
add
sahf
insl
fdivs
lock
sbb
mov
sub
cmp
mov
inc
imul
imul
jg
daa
jne
sbb
stc
pop
fildll
pusha
pop
adc
xchg
mov
mov
sti
xchg
ds
pop
pop
xchg
cmpsb
lea
xorl
ror
mov
and
mov
pusha
inc
mov
loope
data16
xchg
lock
ja
push
jecxz
pop
imul
mov
or
pop
mov
test
outsb
aaa
push
jecxz
push
aaa
stos
add
and
inc
cld
xchg
dec
sbbb
xchg
mov
cmp
add
lods
shl
inc
stc
push
jp
mov
add
push
pop
fstpt
push
inc
das
int3
scas
popf
push
das
addr16
cmp
sti
pop
push
lds
insl
xor
test
fwait
sub
dec
cmp
lods
pushf
into
mov
repnz
bsr
dec
es
pop
sti
insl
scas
movsb
loop
daa
cs
dec
mov
cmc
jmp
in
int
int3
adc
mov
dec
pop
dec
xchg
loopne
mov
sub
xor
jo
pop
aaa
inc
pop
jne
inc
outsl
xor
jno
jnp
sub
mov
iret
insl
clc
lods
fbstp
mov
or
mov
inc
jne
xor
je
cmp
xor
sub
mov
popa
push
pop
jo
ret
push
push
lret
xchg
int
outsl
sbb
adc
dec
mov
cmpsb
cs
xchg
movl
sti
scas
dec
xlat
mov
mov
fsubp
and
ss
cmp
push
or
mov
fimuls
gs
dec
cmp
mov
insb
sti
ja
push
sbb
xor
inc
pusha
adc
mov
xchg
inc
mov
lret
xbegin
sbb
imul
push
mov
mov
jo
mov
ret
and
data16
stc
lea
push
xor
lea
mov
in
fidivrl
je
adc
jno
inc
pop
movsl
push
dec
mov
aam
ja
xor
xor
pop
in
lock
mov
adc
xchg
test
or
call
mov
pop
sarb
mov
mov
imul
push
xchg
repnz
int3
adc
shll
mov
jg
or
in
lahf
data16
push
xor
mov
movsb
lea
pushf
pop
pushf
mov
mov
xor
hlt
repnz
fldl
lcall
inc
mov
pop
mov
pop
int
add
lcall
mov
lret
fnstsw
mov
dec
loopne
xor
jecxz
adc
les
shll
push
out
push
pop
ds
cmp
xlat
push
test
out
jl
sub
xchg
cmp
jbe
mov
mov
xchg
cmp
int
lock
push
cmpsb
mov
flds
push
ljmp
out
dec
xor
mov
dec
cmp
or
push
lock
ret
cld
sbb
pop
int3
out
test
out
jnp
jg
jnp
call
pop
jb
mov
dec
sbb
or
std
test
aas
in
sbb
inc
sbb
mov
imul
push
cmpsb
ja
rorl
push
sti
add
dec
pop
adc
mov
fistpl
ljmp
addr16
jno
sub
stc
sub
fisttps
push
or
pop
fs
out
in
aad
imul
mov
dec
cld
adcb
mov
cmp
inc
dec
or
push
cli
sbb
test
mov
cld
mov
ss
push
add
jmp
fists
fcompl
inc
scas
adc
xor
jle
pop
sub
jl
xchg
inc
cmpb
inc
xchg
mov
addb
cmp
mov
or
pop
push
out
xorl
addr16
and
xor
pop
mov
ret
sahf
lea
jecxz
cs
and
inc
cmp
les
clc
fsubrl
xorl
mov
sub
pusha
test
inc
dec
jecxz
daa
mov
xchg
inc
cmp
test
ret
jp
or
adc
cmpb
mov
push
fisubs
jecxz
lds
hlt
lret
out
pop
stc
push
lea
mov
cmp
pop
mov
imul
push
xlat
test
ljmp
dec
gs
pusha
pushf
xor
rcll
inc
push
popf
or
rorl
repnz
sti
pusha
fnstsw
rcll
cmpsb
or
out
jne
ss
pop
jl
test
cmc
clc
xor
sbbl
insl
mov
test
movsb
rcll
js
ret
fs
xchg
test
movsb
inc
repnz
mov
xchg
std
es
stos
xchg
gs
or
lods
mov
fadd
mov
dec
int3
adc
loop
inc
mov
push
sbb
pop
cmp
dec
fcoms
scas
ret
cmc
and
clc
xchg
cmp
mov
xor
xchg
xor
fnstsw
scas
pushf
mov
lcall
mov
xchg
aaa
push
push
movsb
loop
mov
add
mov
ljmp
sti
js
scas
add
add
aad
and
jo
inc
out
inc
fs
ficomps
ds
cltd
cs
adc
push
dec
push
loopne
lods
push
push
jg
loop
sbb
sbb
int
aas
loope
pop
pop
aam
pop
repnz
pushf
jo
mov
xchg
clc
and
jns
jo
add
add
out
mov
xor
mov
lods
stos
ds
inc
cmp
sbb
mov
add
mov
sti
cmp
jmp
test
xchg
xchg
push
fimuls
cwtl
adc
push
lret
lds
mov
xchg
cmp
push
movsb
jo
inc
jb
flds
push
sub
add
in
mov
loopne
mov
dec
add
lods
aad
cmc
mov
jecxz
pop
insl
aam
andb
push
xlat
pop
call
mov
cli
xor
mov
mov
ljmp
jns
in
mov
sub
push
push
shll
inc
lret
insl
push
mov
push
imul
push
lret
ja
jg
inc
cmp
in
cmp
mov
cli
out
mov
out
lcall
sahf
jge
push
icebp
adc
pushl
mov
xor
clc
and
int
mov
push
pop
push
insb
jne
stos
xchg
jb
loopne
add
fsubp
dec
jno
fildl
sub
lcall
jp
jge
mov
adc
stos
push
mov
dec
cmpsl
inc
mov
push
pop
movsl
imul
les
mov
mov
lret
lret
mov
enter
jmp
imul
dec
xlat
mov
mov
inc
cmp
mov
or
loopne
push
sub
and
push
std
and
xchg
lret
cs
loopne
push
call
scas
cmpsl
adc
hlt
pop
fnstsw
hlt
jmp
mov
xorl
and
fs
in
jmp
adc
dec
lcall
hlt
pop
jo
xchg
jae
push
mov
fwait
hlt
into
jp
out
sub
test
repnz
xchg
fdivrs
adc
nop
push
fcmovnu
fisubrl
sub
lret
setae
aas
sub
jae
in
xor
cwtl
sub
shlb
lret
lret
push
dec
inc
push
sahf
scas
fstps
test
cmc
mov
or
stos
fmull
push
jecxz
pop
ja
mov
cmp
inc
out
outsl
add
mov
or
xchg
dec
sub
out
sahf
xchg
shl
in
nop
dec
outsb
inc
xor
gs
add
pop
std
inc
jl
lods
stos
in
insb
push
xor
fwait
ss
cmpsb
dec
dec
jno
xor
xlat
pushf
sahf
bound
pop
imul
fnstcw
inc
cmp
shrl
jl
imul
aaa
and
pop
aam
fildl
cltd
jl
push
iret
pop
cmp
xlat
insb
int3
inc
daa
lcall
out
and
sub
shll
roll
clc
xchg
ret
or
test
pop
sti
mov
and
outsb
mov
stos
insb
mov
jecxz
cmpb
in
fdivp
gs
nop
xor
fisubs
out
mov
stc
mov
pop
out
rolb
sub
mov
lock
or
mov
mov
imul
aas
lods
dec
jge
xor
mov
push
mov
mov
mov
mov
jle
fdivrl
mov
add
inc
push
mov
cmp
push
clc
repnz
subl
mov
sahf
jns
adc
mov
dec
jmp
inc
xchg
sub
inc
fwait
push
pop
xchg
pop
mov
out
and
push
imul
cmpsb
mov
push
loopne
insl
sarb
push
sub
stos
mov
subl
icebp
inc
sahf
inc
out
mov
repnz
add
dec
jle
test
lret
dec
push
pop
push
pop
or
adc
test
rep
lds
sub
cltd
aas
inc
adc
xlat
add
fidivrs
andb
xor
test
rcrl
mov
xor
fimuls
int3
in
andl
test
sahf
mov
jp
and
xchg
adc
push
lahf
push
xchg
xor
mov
in
imul
sbb
ffree
mov
cmp
jne
or
dec
push
dec
outsl
jp
lds
fwait
in
call
adc
cli
mov
pop
adc
sahf
packssdw
dec
xchg
xchg
add
push
das
imul
push
cmpsl
add
or
js
mov
arpl
loopne
movsb
ds
jo
push
mov
inc
sbbl
test
mov
mov
mov
call
jmp
mul
nop
mov
inc
add
push
jne
and
stc
sub
scas
out
jge
push
fyl2x
movsb
lret
cmp
add
inc
fbld
jae
movsl
xor
sbb
pop
cmp
lret
jae
add
fmuls
call
sbb
mov
inc
ja
cltd
jp
adc
adc
cmc
sahf
cmpsb
or
loope
push
leave
jns
ljmp
std
out
imul
rorb
fsubl
sbb
mov
add
pop
call
std
aas
fsubs
outsl
sbb
add
cmp
jne
icebp
xor
lods
sbb
or
jmp
popa
into
imull
xor
sub
jl
pop
cmp
sub
push
jg
inc
cmp
mov
inc
movsl
imul
mov
rolb
rcll
in
fildll
and
sbb
sub
mov
mov
lods
dec
or
test
sub
mov
adc
dec
fs
sbb
aam
push
mov
adc
scas
das
push
jno
pop
pop
loop
sbb
dec
loope
movsl
les
data16
sub
pop
pop
xlat
add
arpl
cmpb
fisubs
xchg
subl
das
xlat
pop
jnp
inc
jmp
pusha
popf
lret
bound
loopne
lret
xchg
xor
xchg
rol
leave
adc
dec
and
test
movsb
shrl
shlb
gs
dec
cmpsl
and
sbb
imul
fistps
arpl
jne
fcomp
enter
or
fwait
addr16
or
sti
stos
daa
inc
mov
dec
mov
sarb
je
add
pop
adc
out
dec
cmp
jl
push
and
subb
or
ret
mov
push
je
sub
cmp
adc
mov
mov
xlat
mov
mov
out
add
or
sub
dec
sub
inc
mov
aad
in
adc
outsl
add
addl
ret
jg
push
push
negl
imul
or
aam
int
shll
mov
xchg
cli
icebp
fldenv
xor
sahf
lea
sub
cmp
lahf
iret
daa
loop
cmp
adc
adc
sbb
mov
into
or
loop
ja
jp
imul
mov
or
jle
mov
pushf
cmpsb
dec
cld
fstpt
sbb
ja
fwait
or
inc
repz
mov
lea
cmp
sbb
scas
iret
jbe
adc
fidivl
mov
fbstp
sbb
scas
repnz
jle
pop
dec
push
mov
jae
gs
jl
xchg
test
fsubrl
aam
xchg
imul
aam
add
add
cmc
jns
jg
pop
add
loop
ret
mov
test
mov
push
xorb
cmp
test
pusha
lock
es
dec
xor
sub
or
es
jg
xlat
inc
push
and
les
popa
xchg
cmp
call
jb
in
and
adcl
jo
in
cs
mov
dec
imul
popf
inc
les
outsb
bound
lods
pop
mov
rorb
fadds
jl
mov
mov
dec
xchg
xchg
repnz
jno
addl
dec
cwtl
fbld
sbb
in
sub
addb
xor
push
cld
dec
jmp
loopne
negl
cmp
int3
xchg
aam
jbe
cmc
imul
dec
dec
cli
in
mov
cld
cmp
pop
fsubrl
jle
fldl
hlt
scas
lret
pop
mov
xchg
push
rcrb
dec
loop
cmpsb
cmp
pop
push
dec
pop
pushf
pusha
loop
cmpsb
push
or
mov
mov
jg
insb
fldt
cmc
lds
in
outsb
arpl
mov
mov
push
daa
dec
aad
movsl
and
ret
and
cmp
pop
int3
nop
pop
mov
sbbl
shrl
push
popf
fiadds
repz
aam
mov
aad
dec
repz
cmpsb
add
fisubrs
shrb
in
jnp
add
mov
cmpsb
push
int
pop
jno
scas
xchg
loope
pop
jo
mov
add
dec
lds
clc
pusha
pop
mov
xchg
xor
dec
lret
push
cmp
cmpsl
push
mov
and
fdivrs
cmovnp
inc
fldt
lods
sub
pop
mov
lds
test
lret
pop
push
xchg
pop
push
enter
or
mov
aam
push
outsl
jnp
mov
outsb
pop
sbb
and
or
in
lahf
out
js
inc
or
lret
aam
fmull
xchg
test
sub
cld
pop
jle
push
mov
bound
sub
sbb
cmp
inc
sbb
pop
dec
push
faddl
in
dec
inc
jecxz
inc
or
inc
loope
fs
das
pop
and
pop
ljmp
pop
sbb
inc
mov
xchg
and
ss
cmpsl
xchg
sbb
loop
xor
repnz
cmp
mov
enter
ljmp
js
repz
fildl
mov
jmp
ret
aaa
bound
mov
mov
jmp
imul
sbb
nop
inc
jmp
pop
jo
dec
dec
sbb
dec
sbb
push
push
roll
outsb
inc
mov
add
pop
js
notb
mov
test
adc
js
inc
sub
es
sbbl
and
xor
and
adc
roll
or
dec
or
push
sbb
or
cmp
mov
fistpll
pop
pop
dec
shll
lcall
mov
xchg
clc
cmpsl
lret
test
dec
pop
sub
fstpl
insl
out
dec
aaa
pop
mov
out
popf
add
aad
dec
pop
leave
mov
es
or
or
and
cmp
negb
lcall
int3
inc
push
clc
mov
adc
lahf
sbb
xchg
push
xchg
jecxz
sarb
push
sub
cmp
mulb
push
pcmpgtw
ret
push
and
add
repnz
cmp
fsub
pop
and
mov
mov
add
add
sbb
xor
js
cmp
hlt
jmp
cmp
movsl
mov
gs
mov
pop
addr16
hlt
or
adc
test
pop
incl
jnp
cmp
insl
pushf
loop
mov
inc
loopne
rclb
scas
cmp
mov
xchg
test
inc
jo
xchg
push
popf
stos
es
enter
mov
xchg
addb
fisttpll
nop
insb
add
hlt
xlat
mov
pusha
push
ljmp
dec
jae
stos
ret
pop
mov
adc
mov
je
imul
mov
cmp
mov
mov
dec
das
xchg
std
cmp
das
data16
outsb
loope
pushf
dec
imul
sbb
cmpsb
pop
into
loope
jmp
es
and
int3
jp
fs
push
dec
sub
mov
sbb
aaa
mov
rcrb
es
sbb
cmpsb
or
sbb
cmp
sub
cmp
mov
or
cmp
in
faddl
pop
push
jnp
mov
cwtl
sbb
insl
or
clc
mov
jnp
sub
and
fwait
int3
xchg
aaa
cmc
mov
and
lea
sub
xchg
inc
out
pop
fidivrl
repz
andl
cmp
add
cmc
lret
sbb
pop
jno
ss
inc
xchg
add
sti
inc
mov
xchg
xor
xchg
pop
pop
arpl
cmpsl
mov
mov
cld
cmp
xchg
jge
jae
dec
xor
rcll
cmc
push
imul
push
mov
repnz
dec
popf
insl
pop
int3
popf
cmc
sub
and
mov
mul
mov
jnp
leave
adc
bound
push
cmp
aaa
and
iret
xchg
add
mov
push
fldt
movb
xor
mov
xor
loope
cmpsl
adc
mov
pop
hlt
cmpsb
xchg
xchg
mov
add
clc
jb
xchg
outsb
outsb
and
and
fsin
jno
nop
fs
push
sub
lds
ret
or
test
jl
shll
mov
xchg
or
push
mov
sub
jns
xor
popf
xor
mov
out
adc
fs
dec
sub
fistps
data16
inc
and
cmp
adc
mov
scas
push
xor
cmpsl
xlat
xchg
cmp
add
adc
jge
loope
push
cmp
fcoms
fdivs
cmc
mov
das
sub
je
add
cmp
and
cli
jno
cld
call
loope
lahf
adc
les
insl
int
fnstenv
xchg
mov
pop
ret
ret
fiadds
cmpsb
loop
leave
int3
pop
stos
pushf
push
jl
mov
pop
fucom
filds
cmp
cmp
outsb
mov
jns
pop
and
shll
mov
push
dec
notb
pop
cmp
push
bound
and
test
jp
dec
mov
or
pop
add
int3
sbb
jne
test
shlb
imulb
stc
pop
xchg
cmp
jmp
dec
ret
cmp
xchg
mov
pusha
cmc
push
pop
loop
scas
push
call
dec
sub
orl
cld
sub
dec
outsb
jge
dec
add
arpl
dec
fnop
test
stos
sub
jbe,pn
loopne
notl
pusha
daa
ret
fadd
inc
xor
outsl
pushf
xchg
jno
cmp
push
push
rolb
inc
or
icebp
jp
xor
rclb
adc
fstl
enter
movsl
mov
enter
das
sub
pshufw
jecxz
lret
shl
push
inc
cs
adc
outsb
lock
daa
pop
jmp
xor
or
loope
divl
mull
imul
pop
lock
dec
or
mov
mov
push
lock
gs
iret
test
dec
andb
or
cli
stos
mov
rcrb
test
or
test
or
xor
cltd
jbe
cmp
lods
dec
mov
mov
out
mov
dec
cmc
cmpl
imul
or
inc
xchg
dec
ljmp
imull
jge
aad
xor
cmp
mov
stc
push
cmp
and
leave
mov
andl
cmp
mov
cli
sub
pop
mov
sbb
mov
mov
fimuls
leave
in
mov
nop
leave
enter
dec
push
imul
ss
pushf
mov
loop
pusha
cmp
xchg
jbe
ficoml
addb
aaa
sub
and
imul
add
jmp
inc
loopne
jl
movsl
push
lcall
adc
mov
push
xchg
cmp
and
imul
fcmove
sub
sbb
lds
call
pop
xchg
add
mov
inc
clc
rclb
mov
std
push
xor
imul
nop
add
scas
sti
inc
int3
mov
add
sbb
sub
mov
frstpm(287
cmpsl
outsl
sbb
pop
icebp
sub
push
lods
aam
mov
fwait
add
dec
and
fsubs
inc
mov
sar
cmp
mov
xchg
repz
adc
stc
push
aad
mov
movsl
icebp
jmp
enter
divl
nop
push
repnz
add
mov
sub
lea
xor
mov
shlb
and
arpl
xchg
xor
pusha
sti
fyl2xp1
aaa
mov
int
gs
loopne
push
mov
mov
fldt
cmc
popf
adc
outsw
ja
ficoms
mov
scas
mov
sub
or
cmpb
push
mov
or
hlt
push
dec
sti
popl
fs
scas
fidivs
mov
rcrb
movb
jg
ret
fistpl
loope
int
es
insl
or
jecxz
mov
jo
outsl
jno
jae
mov
subb
loopne
lods
addl
adc
outsl
repz
or
mov
fiaddl
dec
jecxz
popf
in
ss
sub
mov
mov
xor
pusha
iret
out
sub
lret
addb
push
in
insb
imul
xchg
sbb
in
shll
stc
insb
jb
lock
push
jnp
mov
pop
push
mov
mov
jne
inc
cmp
rclb
mov
sahf
test
mov
test
xchg
adc
sub
add
cwtl
mov
adc
cmpsl
jns
cmp
inc
inc
idivb
adc
xor
rcrl
cwtl
je
and
push
push
imul
data16
call
mov
fprem
xor
ds
adc
imull
sbb
jp
ljmp
fmuls
lcall
mov
push
cld
jo
pusha
push
and
std
jo
rcrl
sahf
roll
movsl
int
cwtl
and
lahf
jecxz
mov
les
mov
adc
test
andl
pushf
pop
pushf
sub
cwtl
lcall
fdiv
pop
fimuls
stos
adc
sub
into
insl
imul
mov
and
les
andl
mov
xchg
pop
and
cltd
sbbl
push
and
pushf
loopne
pop
jo
lock
aam
or
push
pop
xadd
cmp
aas
or
in
fldenv
and
jnp
push
push
pusha
out
ja
fs
in
outsl
fnstcw
xorps
movsl
xor
ja
lret
and
mov
scas
xchg
xchg
cmp
iret
dec
bound
mov
push
aam
jg
aas
cmpsb
ret
xor
js
sbb
adc
adc
call
jge
stc
pop
call
push
sahf
xor
repz
mov
flds
outsb
dec
push
pop
rcr
cmp
pop
sbb
mov
cmp
lret
lcall
in
pop
mov
icebp
outsl
lea
add
and
into
inc
data16
das
cmp
ja
mov
mov
and
les
out
pop
sbb
jne
or
push
jg
pop
stos
orl
fidivrs
in
scas
xchg
gs
lock
sti
sub
rcll
push
mov
jns
testb
mov
add
sbb
cli
es
hlt
hlt
and
pop
mov
iret
dec
xor
cmp
subl
mov
inc
jl
xchg
or
sbb
cmp
cmpsb
mov
orl
out
xchg
imul
outsl
sbb
mov
mov
sub
dec
mov
enter
or
xor
xor
in
shlb
or
cmpl
adc
sbbb
xor
decb
xor
sub
enter
mov
bswap
shlb
mov
rcr
jle
dec
sbb
and
cmp
fisttps
das
add
orl
pop
popa
sub
mov
or
inc
pop
rcrl
cmc
sub
data16
xchg
inc
and
out
sbb
js
xchg
xor
call
subb
pop
pop
xchg
sub
lds
xor
sub
adc
xchg
pushf
stos
aaa
and
testb
adc
test
mov
cmp
call
loop
pop
pushf
lret
cli
movl
mov
gs
xchg
into
add
mov
push
nop
add
mov
outsl
sbb
iret
xor
daa
inc
imul
jp
or
inc
repz
int
into
pop
or
jge
and
xchg
imul
lods
pop
ss
stos
or
pop
fwait
xor
jno
add
les
fwait
lds
rcrl
xlat
andb
lock
and
mov
movsl
cltd
dec
dec
mov
in
add
stc
ljmp
into
addr16
dec
mov
leave
inc
out
in
ds
stos
ja
or
leave
aam
or
xchg
dec
gs
fsubr
aas
inc
hlt
mov
dec
lcall
in
adc
mov
cmpsl
add
adc
int3
mov
add
lods
or
xor
aad
ret
jge
pop
push
dec
lock
ljmp
and
fidivs
outsl
fwait
addr16
out
cmp
push
pop
int
mov
out
aaa
aaa
adc
mov
shll
add
inc
dec
pmulhw
test
push
ss
iret
inc
inc
mov
aam
sub
stc
pop
fnstsw
mov
addr16
stos
and
stc
das
cmp
insl
xchg
jle
das
add
xor
insb
mov
fnstenv
jbe
xchg
jg
loope
mov
cmp
mov
ds
jae
mov
sbb
call
lods
xor
loope
push
shl
cmpsl
mov
loope
popf
test
jno
or
or
xchg
pop
pop
jecxz
negl
mov
adc
jne
xor
repz
mov
lahf
js
cld
dec
int3
push
cmp
ret
sub
insl
rclb
or
pop
push
cmpsb
lret
inc
push
sti
subb
fldl
mov
jns
imul
inc
popa
cmp
pusha
divps
ds
aas
pop
inc
adc
scas
in
or
xchg
pop
inc
imul
mov
repnz
out
jns
negb
rcr
lret
in
in
and
push
cmp
cwtl
inc
ds
arpl
push
sbb
dec
lahf
ret
inc
xchg
mov
sbbb
push
fildl
or
mov
mov
lret
mov
push
rcr
xor
shrb
xchg
mov
shll
mov
icebp
aaa
loope
jge
cld
inc
mov
test
fsubl
sbbb
test
imul
mov
push
xchg
je
mov
repnz
insl
mov
jg
popa
pop
xchg
js
sbb
sub
pop
sub
jns
mov
out
popf
shll
mov
jg
mov
aad
sarl
mov
push
mov
add
fcmovbe
loopne
push
dec
xor
movsb
xchg
aam
inc
cltd
out
cmc
les
outsb
lock
or
icebp
mov
pop
cs
cli
arpl
add
fcompl
fmull
lods
scas
lret
lods
into
adcb
cmp
xor
lahf
cwtl
repnz
sub
mov
sbb
leave
mov
call
test
imul
adc
adc
iret
pop
jge
cmp
jns
rclb
out
cmp
or
ljmp
sub
inc
mov
jo
and
test
sub
pushf
cmp
ret
jns
fldcw
subl
aaa
inc
xchg
pop
mov
push
sarl
pop
sub
and
push
adc
cmp
pop
adc
xchg
jne
pop
sub
mov
xor
int
cmp
fwait
cmp
dec
mov
out
push
cmp
dec
xchg
mov
mov
std
cmpsb
out
xchg
xlat
push
repnz
xchg
aad
xor
clc
and
leave
fdivp
lods
insb
icebp
test
xchg
inc
adc
mov
mov
pop
push
fsubs
aam
and
loopne
ljmp
sub
sbb
imul
mul
mov
or
test
cltd
mov
push
or
jbe
subl
insl
insl
mov
cmpsb
iret
mov
sbb
push
push
dec
mov
int3
fucom
imul
xchg
lods
jns
setg
or
fidivl
lahf
test
daa
add
mov
push
ljmp
sub
mov
push
int3
rclb
aad
into
push
xchg
inc
in
dec
rclb
aam
fstps
xchg
pusha
mov
jg
add
push
lret
cmp
lock
xchg
test
int3
and
fbstp
dec
pop
xchg
jnp
pop
add
js
sbb
and
add
dec
std
sahf
adc
add
je
dec
ss
loopne
ljmp
dec
fstpl
dec
js
cwtl
imul
outsb
in
jecxz
nop
arpl
je
jmp
inc
lret
push
xlat
mov
add
xchg
xchg
push
xchg
inc
or
and
cmp
cmpsb
jb
sbb
ds
push
popf
jecxz
es
or
add
push
cld
scas
xchg
imul
add
cld
stc
leave
jmp
popa
inc
mov
out
hlt
in
cmc
cld
xlat
lock
push
dec
mov
fstl
jge
or
repnz
js
mov
test
movb
ja
das
bound
push
cs
inc
paddw
mov
xor
lcall
iret
and
add
push
mov
mov
sub
popf
fsubl
jbe
fmul
dec
mov
loop
andb
insb
add
push
out
fimull
lea
add
mov
in
pop
xchg
push
lods
jnp
pushfw
push
inc
arpl
xchg
loope
lret
in
mov
and
std
and
and
xchg
stc
lret
jns
push
aam
movb
imul
insb
cmpsl
sbb
xchg
lret
pop
test
loope
sub
fsubrs
iret
cld
ret
mov
inc
dec
sub
mov
xchg
xor
inc
fidivs
sbb
imul
cmp
jne
jns
xchg
xor
data16
or
push
inc
jg
jne
dec
call
jl
fstpt
stos
insl
ret
jno
pop
out
sub
or
int3
pop
mov
pop
test
sub
into
cmp
stos
mov
lahf
sub
sbb
fdivrl
nop
mov
sahf
cs
push
cmp
lds
mov
or
lcall
or
in
mov
mov
or
sti
mov
xchg
vunpcklps
xlat
cmp
scas
dec
and
inc
or
mov
jecxz
repnz
test
adc
mov
test
ret
dec
mov
lds
mov
jo
add
ss
push
adc
jae
inc
data16
roll
and
mov
xchg
cmpsb
dec
push
popf
loopne
pop
cmp
xor
mov
lcall
jle
add
testl
pop
fs
cwtl
outsl
jecxz
sbb
outsb
mov
sub
pop
pop
test
lds
ja
cmpsb
push
jge
push
rorb
sub
arpl
lahf
jmp
xlat
sub
les
imul
sbb
mov
daa
out
addr16
jge
fstps
lea
lods
imul
pop
pop
mov
lods
fs
xchg
shlb
mov
and
jmp
dec
and
les
mov
mov
les
aaa
push
sbb
popf
lods
mov
xlat
or
inc
dec
add
cmp
in
jae
fidivs
or
lahf
inc
xchg
add
mov
lock
pop
ljmp
enter
aam
xor
mov
add
imul
rcrb
insb
pop
mov
test
xchg
pop
xor
rcll
cmpsb
cmp
jne
mov
subb
lods
fcoms
mov
pop
pop
pop
lock
fs
pop
sbb
dec
mov
jae
inc
fbstp
xor
dec
sub
lock
push
in
mov
lods
push
or
dec
cs
je
push
stc
sub
mov
incb
adc
cwtl
fadds
scas
jb
cmp
int
mov
call
cmp
and
cmp
and
lods
outsb
mov
inc
and
cmpl
scas
out
or
mov
cs
out
push
fcmovbe
lret
jne
jno
int
and
in
pop
push
pusha
or
push
push
cmpsl
cld
mov
loopne
mov
xchg
xorl
jle
pop
dec
dec
xchg
lock
jae
fisttpl
mov
movsl
cmp
pop
xlat
sti
jnp
andb
pop
ss
add
mov
and
cmp
cmpsl
out
push
push
adc
pop
pop
clc
pop
lock
dec
mov
adc
mov
sbb
adc
adc
das
in
ds
mov
mull
lret
int
or
jb
or
aas
pushf
lock
lds
xor
cmp
push
ljmp
and
loopne
jnp
pop
movsb
ret
mov
enter
stos
loop
pop
and
add
data16
and
inc
cltd
clc
jp
sbb
fidivl
rcll
fst
adc
xor
sbb
push
push
and
sbb
pusha
dec
add
dec
test
psllq
cmpsl
mov
xchg
adc
hlt
stos
sub
hlt
push
jnp
mov
cld
dec
or
enter
ficomps
sar
int
mov
fcompl
lds
sub
enter
es
arpl
mov
imul
xor
xchg
call
mov
mov
inc
push
jb
ljmp
fisttps
fcomp
inc
dec
movsb
dec
stc
pop
aad
out
rolb
mov
pop
movsl
jnp
fdivrs
jb
xor
push
mov
enter
inc
sbb
mov
cmpsb
mov
lds
xchg
mov
into
iret
push
cmp
jl
mov
push
lea
aas
add
mov
mov
sub
jb
int3
inc
pop
lods
or
es
push
fs
and
jge
sub
adc
fistpll
pusha
fsubrs
or
dec
lods
cmp
mov
mov
pop
clc
lds
xor
dec
push
roll
jp
ret
push
enter
outsb
push
sahf
inc
loopne
xchg
aad
cltd
xchg
push
push
pop
fdivs
sbb
mov
fcomp
add
mov
je
push
jns
dec
sbbl
cmp
add
or
cmp
mov
das
mov
outsl
int3
sti
jmp
shl
mov
mov
push
cmp
in
mov
fimuls
and
cmovg
ljmp
stc
out
and
xlat
test
notl
push
iret
xcrypt-cbc
cmpsl
adc
cmc
or
imul
jb
or
mov
outsb
jnp
sarb
and
jp
imul
cmp
add
cmp
stc
into
aad
inc
jl
outsb
movsl
push
ja,pn
and
push
sbb
out
mov
fs
mov
int3
jle
mov
push
dec
sbb
outsl
sbb
and
mov
jno
jmp
xchg
aas
inc
int
inc
ret
pop
int
lea
mov
lea
std
pop
adc
mov
mov
sub
sbb
cltd
xor
imul
dec
lods
pushf
mov
nop
xchg
mov
ss
lds
mov
scas
xor
push
cmc
sub
hlt
out
int
es
out
push
sub
jmp
xor
add
or
insb
ja
ret
and
jge
ss
das
xor
es
sahf
lahf
cmc
push
mov
dec
xor
std
mov
fistpll
jae
lds
mov
and
and
cmp
int
add
push
and
cmp
loopw
push
push
call
ret
enter
js
pop
in
mov
mov
mov
shlb
cli
jne
ret
mov
stos
jnp
aam
lds
lahf
out
dec
mov
test
and
out
mov
fwait
pop
repz
insb
ja
mov
lcall
push
or
fsubr
xchg
in
inc
rcrl
jmp
sbb
adc
addr16
pop
push
mov
sbb
imul
push
imulb
mov
push
and
dec
sbb
insb
out
bound
cmp
in
addr16
adc
sbb
dec
mov
repnz
dec
push
jbe
jp
ficomps
cltd
aad
mov
pop
xlat
cmp
enter
mov
mov
dec
loope
std
or
lods
ja
mov
or
or
inc
movzwl
lods
fisubrl
fwait
or
mov
aad
mov
fisttps
popa
fwait
aad
mov
pop
test
push
xor
outsb
data16
call
xor
clc
sub
pop
dec
jbe
jmp
mov
fstl
jno
sub
pop
push
sbb
or
inc
inc
add
jb
je
mov
push
dec
mov
gs
mov
js
inc
pop
sti
repz
aaa
push
rcll
push
xchg
mov
mov
sahf
or
jge
inc
jno
dec
outsl
push
test
and
xchg
xchg
mov
mov
mov
lods
pop
jnp
ja
inc
loope
pop
mov
dec
jno
std
imul
insl
inc
das
cwtl
xor
push
sbb
sbb
shll
aaa
inc
xchg
push
or
lcall
repz
mov
pop
jge
add
aas
push
pop
jecxz
push
mov
xchg
shrb
loop
add
movsl
sarl
push
fs
cwtl
ret
pop
sub
testl
and
fwait
cld
mov
int3
xchg
ret
lret
aam
cmp
test
jge
mov
scas
fidivrs
outsb
ds
pop
xlat
xchg
xchg
mov
lods
in
pop
dec
outsb
daa
test
fwait
or
jle
jl
push
push
sub
mov
push
repnz
and
pop
int3
aad
pop
add
cmp
imul
mov
xchg
dec
adc
rol
or
jle
ljmp
int3
sarb
sahf
sbb
int3
movsb
aad
ret
andl
xchg
insl
cltd
bound
scas
rcl
jle
mov
cmp
jb
and
mov
push
mov
mov
nop
cmp
push
movsl
mov
pop
aam
dec
ret
arpl
cli
mov
std
out
rcrl
mov
xchg
call
or
scas
jb
enter
pop
mov
sub
aad
and
and
sbb
shlb
add
pop
out
mov
push
out
push
jge
pop
sbb
mov
dec
xchg
nop
lret
jbe
push
jo
imulb
push
mov
enter
mov
sbb
flds
movb
and
lea
inc
and
mov
test
xchg
sarl
shrb
insl
sub
mov
mov
dec
loope
sahf
stos
mov
mov
into
loop
popa
loopne
ret
mov
or
mov
pop
mov
fisttps
dec
loopne
out
cmp
dec
aaa
nop
leave
xchg
mov
into
rcrl
dec
mov
enter
cmp
scas
adc
adc
lods
rcrb
popa
scas
mov
rcrl
mov
dec
cmp
mov
loope
adc
je
dec
lock
outsl
fisubrl
ret
xor
mov
cli
push
jl
insb
cmc
push
push
mov
in
aam
rcrb
fucom
mov
or
test
cli
cmp
or
sub
push
shll
add
push
outsl
cmp
cmp
xor
mov
hlt
outsl
dec
nop
xchg
pushf
xor
cmp
iret
push
xor
sub
fwait
inc
loop
loopne
pop
ja
xchg
xchg
dec
movsl
or
xchg
jns
jo
rolb
repz
iret
loope
loop
jo
inc
icebp
jbe
flds
sahf
call
xchg
fwait
lock
enter
mov
ds
and
cli
faddp
or
int3
pop
test
aam
lcall
xor
inc
push
dec
push
inc
jno
insb
shl
outsl
bound
jge
sbbl
mov
cmp
jecxz
mov
push
xchg
data16
repnz
mov
xor
sub
mov
push
bound
lods
in
and
mov
push
mov
int3
adc
pusha
push
cld
sbb
sbb
pop
add
adc
lcall
push
or
loope
or
lods
icebp
in
aad
sti
sbb
adc
in
pop
fsubl
and
pop
data16
aam
dec
insb
or
mov
push
fstps
pop
dec
ja
push
scas
fcmovnbe
jo
lahf
adc
stc
inc
cmp
divl
jb
cld
stos
push
decb
mov
sbb
stos
dec
xor
push
dec
mov
add
mov
mov
ud1
mov
push
and
pusha
outsl
lret
icebp
adc
frstor
das
inc
popf
lods
and
sbb
jmp
mov
mov
test
xor
and
leave
fdivl
add
rol
xchg
imul
jmp
fs
push
pop
xchg
cmp
repz
js
push
mov
in
add
pop
inc
or
imul
xor
cmp
lcall
cs
aas
pop
aam
mov
mov
pop
jmp
jecxz
iret
stos
clc
pusha
arpl
xchg
xchg
and
mov
dec
inc
cmp
imul
insb
xor
and
shl
jecxz
mov
mov
ret
repz
or
adc
inc
xorb
push
and
xchg
loop
insl
mov
xchg
add
mov
inc
push
gs
mov
mov
data16
jns
in
out
aas
xor
push
ja
adc
and
push
insl
and
cmp
xor
pop
push
and
fcom
ljmp
cmp
dec
inc
outsb
popf
add
or
mov
xor
cmp
call
push
out
jb
or
inc
cs
in
and
xor
int
sbb
in
enter
xchg
test
fadd
cmp
test
dec
xor
loop
add
pushl
es
and
in
andb
mov
cli
enter
enter
int
push
fistps
push
outsl
fstpl
add
lock
cmp
int3
jle
push
or
in
xchg
mov
shlb
imul
std
imul
insb
add
pop
fwait
jmp
lret
cld
sbb
xchg
cmp
add
adc
mov
adc
xor
pop
loopne
pusha
ror
add
sbb
adc
test
test
inc
mov
ljmp
mov
bnd
scas
cmp
mull
mov
sbb
mov
xorb
movsl
dec
and
loop
lret
bt
popa
stc
dec
cli
cmc
std
jl
cmc
xor
test
enter
in
in
mov
pop
test
test
or
mov
or
insl
push
mov
pop
jb
pop
cwtl
lods
xchg
dec
dec
stc
in
cwtl
pop
sub
mov
lret
fcomp
inc
push
mov
out
or
stos
dec
ret
cmpsl
jae
and
xor
cld
inc
pusha
xchg
jecxz
push
cli
jne
mov
insb
insl
int3
cmpsl
pop
rolb
jo
lds
mov
xchg
xchg
jle
movsb
mov
pop
cmc
loop
cltd
jne
cld
dec
jb
cmp
pop
sbb
out
or
in
rclb
out
sbb
iret
mov
lahf
aaa
addr16
imul
aas
cmp
jns
pusha
les
jne
mov
sub
stos
lcall
mov
shl
jl
lcall
clc
cmp
mov
es
shlb
and
ss
xchg
cmp
lret
movsb
push
push
pop
sbb
outsb
xlat
pusha
rorl
mov
xchg
cwtl
outsb
push
movsl
aam
inc
mov
mov
imul
sbb
cmp
mov
ret
mov
jmp
mov
insb
insl
mov
lahf
jb
jb
out
enter
pop
shlb
insl
push
xchg
ds
jbe
out
stc
inc
sub
loop
push
pop
imul
pop
icebp
and
inc
xor
jno
int3
rclb
int3
xchg
inc
aas
and
leave
cwtl
and
sub
xor
in
xchg
fwait
pusha
push
jbe
jo
sti
test
pop
add
pop
mov
idivb
popf
dec
mov
test
das
imul
ficoms
push
fsubs
mov
xor
test
das
test
pop
clc
fsubr
mov
push
lret
ja
ss
and
mov
stos
mov
mov
ja
jno
pop
inc
mov
movsb
pop
test
daa
sub
cli
add
pop
push
movsl
xchg
loope
or
jle
xchg
loopne
fisttpl
lahf
push
mov
or
fwait
mov
mov
mov
test
int3
gs
mov
cmp
fdivrp
pop
arpl
lds
add
dec
jb
xor
pushf
jbe
and
inc
mov
in
pop
imul
out
xchg
xlat
es
xchg
arpl
push
call
sti
imull
lods
into
data16
scas
nop
sub
stos
mulb
aas
insl
out
fstps
and
in
dec
xchg
ja
push
sbbl
inc
mov
mov
pop
mov
pop
imul
pop
xchg
push
fisttps
sbb
push
xor
je
sub
mov
imul
ds
fisttps
xorl
test
or
call
xchg
cmp
dec
xor
daa
rorl
lods
aas
add
int
jns
stos
or
stos
fidivl
jle
inc
hlt
pop
pop
sbb
enter
in
add
adc
movsl
shrb
cmp
ds
out
mov
sbb
mov
jg
sbb
lahf
leave
pop
lcall
mov
stos
in
aas
mov
sbb
or
xchg
fabs
jne
psadbw
xchg
mov
xchg
cltd
mov
jecxz
out
loope
inc
nop
ja
lods
in
dec
test
cmp
stos
fsubr
sub
in
cli
mov
ljmp
clc
mov
in
push
ss
lret
jmp
pop
mov
mov
out
lods
pop
jb
aaa
arpl
cmp
adc
stc
pop
scas
dec
sub
jp
in
cmp
xchg
mov
mov
ds
xchg
test
pop
add
pop
xlat
das
cwtl
in
lahf
cmp
sub
xor
or
insl
shrb
pop
or
subb
outsb
sub
xlat
imul
adc
mov
ljmp
das
daa
or
out
mov
jmp
add
dec
xchg
mov
aas
jo
stos
fwait
nop
push
addr16
movsl
inc
cwtl
data16
fisubrl
testl
outsb
loope
mov
mov
pop
das
je
aas
stos
aaa
std
insb
lock
inc
sbb
sbb
lahf
push
fnstsw
dec
sbb
mov
push
push
add
cwtl
lock
mov
and
jnp
inc
and
xchg
jle
lods
repnz
jno
push
mov
push
jbe
test
arpl
inc
mov
sub
call
cmp
cmpsl
js
push
das
mov
jns
mov
or
mov
ljmp
mov
loop
dec
jne
cltd
pusha
and
mov
scas
leave
sub
add
dec
lods
lods
sub
mov
xchg
jbe
mov
scas
adc
add
mov
lret
jg
cmp
outsb
jl
pop
lods
mov
nop
jmp
or
jmp
xor
pushf
stos
xorb
or
cmpsb
mov
inc
stc
addr16
lcall
pusha
lods
inc
fwait
xor
call
jo
mov
in
inc
adc
jb
mov
nop
rol
add
bnd
cs
push
xchg
in
mov
adc
cmp
mov
fldl
mov
lods
push
repnz
jnp
imul
int
mov
jecxz
daa
adc
mov
mov
or
and
xor
daa
inc
pop
pcmpeqd
shr
sahf
outsl
imul
inc
dec
sbb
shll
add
adc
mov
mov
loop
mov
mov
adc
mov
call
push
sbb
or
dec
outsl
jo
adc
ljmp
sub
rclb
or
out
dec
dec
push
mov
ja
adc
add
cli
mov
enter
int3
aaa
cmp
mov
pusha
subb
mov
pop
xchg
movsb
clc
cmpsb
movsb
lods
ret
mov
pop
jne
lahf
mov
cmp
sbb
add
test
or
std
test
mov
leave
addr16
arpl
sub
mov
mov
testb
jl,pn
repz
adcb
or
in
lret
adc
dec
mov
jge
cmp
insb
xor
out
sub
mov
mov
adc
cli
jl
xchg
mov
andb
mov
aad
push
repz
jne
cmp
mov
outsl
adc
jns
jno
sbb
out
inc
into
dec
shr
inc
and
mov
lea
rcl
mov
out
mov
lahf
pop
int3
mov
push
dec
mov
jecxz
push
cmpsb
push
mov
test
mov
adc
scas
sbb
or
add
dec
add
adc
push
sub
fsubs
int
fidivl
cld
cmp
loopne
cli
or
js
push
sub
mov
or
and
addr16
pop
mov
loopne
mov
rep
test
pop
sub
dec
pop
dec
xchg
mov
add
push
add
mov
sti
xchg
mov
sbb
in
addr16
mov
addl
xchg
int
lods
dec
xchg
inc
sub
daa
adc
rcr
fisttps
sarb
mov
jbe
cmpsl
or
fs
loopne
repnz
mov
jb
pushl
movsb
pop
mov
orl
pop
fadd
scas
sbb
das
xchg
test
pop
cmpsl
jg
movl
cmp
cmp
fcompl
mov
leave
mov
sbb
sbb
std
aas
add
ret
cmp
and
jg
lahf
insl
and
pop
mov
imul
mov
or
or
pop
jae
pushf
push
push
inc
pop
add
in
out
movsl
xor
test
mov
pop
push
jge
pop
jnp
mov
fs
push
fistpll
jmp
sbb
cltd
movsl
clc
hlt
icebp
xor
sahf
imul
mov
leave
ficoms
out
push
adc
cmp
jle
jmp
insl
sahf
xchg
call
pop
push
jno
push
cmp
rol
in
xor
ret
cwtl
lods
pop
pop
or
cmpsl
lds
inc
push
dec
mov
push
xchg
or
mov
lock
fisubrs
pop
jmp
cmp
movsb
jo
mov
xor
pop
aas
pop
jg
sti
or
xchg
les
aad
sub
xor
lret
pop
pushf
hlt
je
cmp
push
jo
sub
clc
stos
or
sub
stos
sub
mov
cli
pusha
mov
sbb
and
or
xchg
fildll
dec
xchg
ljmp
popa
addr16
xor
pusha
lods
mov
lea
jns
std
push
jo
xlat
mov
cs
mov
xchg
orl
scas
scas
and
addb
jg
and
jo
rcll
mov
jno
inc
stos
cmpsb
xchg
jns
pop
cmp
push
je
inc
popf
mov
lods
sbb
jecxz
test
scas
dec
std
push
nop
push
stos
mov
test
push
jg
sub
and
push
jecxz
ficoms
in
mov
dec
fs
dec
mov
in
pop
jbe
mov
aad
cmp
aad
daa
dec
dec
fsubs
cltd
sti
xor
xor
dec
sub
cmpsb
inc
cmc
test
pop
and
or
cmpsl
aas
push
ljmp
enter
sub
std
push
inc
mov
mov
dec
pop
shrb
mov
mov
jb
lock
pop
adc
sarl
cmpsb
lret
mov
push
data16
sub
or
and
mov
in
fdivrp
mov
movsl
mov
mov
or
test
fisubrs
test
mov
int
sub
lcall
arpl
mov
add
sub
mov
mov
push
adc
shll
xchg
pop
xlat
cmp
movsb
add
icebp
cmp
sysexit
pop
push
push
insb
push
popf
mulb
std
in
adc
mov
cld
insl
mov
push
pop
mov
imul
stos
aaa
notb
sti
fmul
add
rcrb
cwtl
push
mov
xor
into
cmpl
add
imul
repnz
jle
sbb
das
adc
cmpsl
nop
jo
jmp
inc
lock
idiv
and
daa
int3
lret
sbb
bound
out
out
cmp
cmp
mov
mov
jns
js
scas
js
stos
add
add
sbb
push
sub
cmp
fstl
jecxz
bound
push
mov
jl
imul
pop
sbb
loope
movsl
clc
stos
pop
out
xor
lds
pop
mov
dec
insb
rol
or
xorb
fstl
jmp
ss
pusha
cmp
sahf
divps
xchg
pop
inc
in
in
shll
sahf
or
cs
sahf
pop
fbstp
pavgw
loopne
mov
sti
lock
sbb
jno
loope
shr
cmp
ds
or
test
js
arpl
fldcw
movsb
subl
clc
psadbw
loop
rcrb
push
mov
inc
pop
fildl
cmpsl
sub
pop
pushf
xor
int
mov
les
lahf
aaa
and
bound
cltd
out
jmp
clc
cmp
in
push
insb
inc
mov
xchg
sub
dec
pop
rcll
mov
mov
push
xchg
add
loope
xor
loop
or
cwtl
or
aaa
ljmp
out
xorb
outsb
pop
xor
gs
pop
dec
xlat
mov
popa
pusha
imul
out
sub
add
lcall
mov
dec
test
enter
ret
mov
sbb
pop
enter
imul
ret
aam
stos
ja
icebp
pop
arpl
cmc
lret
jne
adc
hlt
dec
mov
cmpsl
add
inc
mov
jbe
daa
adc
fdivrs
add
icebp
lea
lea
push
sbb
scas
sbbb
clc
sub
gs
stos
cmpsb
inc
add
sahf
or
mov
push
test
sub
mov
hlt
mov
fsubl
pop
pusha
lods
xlat
test
lods
pop
icebp
sub
sahf
hlt
xchg
lret
cmp
xchg
pop
mov
jl
mov
mov
push
push
es
adc
push
shll
dec
cmp
cmpl
push
repnz
in
jmp
in
push
rcl
andl
push
jge
mov
inc
cmc
jp
inc
cmp
inc
inc
xor
iret
push
in
loope
pop
jae
lret
sub
stos
inc
fmull
jno
fsubl
lods
mov
lock
popf
mov
mov
pop
dec
shrb
and
loop
mov
or
dec
pop
fnstcw
fbstp
jg
mov
mov
push
dec
test
dec
pop
cmpsb
mov
adc
add
stos
int3
xchg
add
push
xchg
pop
sahf
jle
sub
idivl
shlb
push
mov
adc
movsb
cmp
mov
mov
cmpsl
hlt
stc
sbb
inc
cmpsl
sbb
mov
ss
and
push
insb
jge
in
cmc
add
push
lea
mov
mov
mov
stc
data16
pop
lret
call
or
mov
sbb
or
xor
ret
or
pop
mov
mov
into
mov
push
loopne
push
sub
sti
inc
push
sbbb
or
stos
mov
dec
and
je
dec
mov
xchg
sarb
lcall
sbb
ss
or
lods
cmp
mov
test
xchg
stc
in
repnz
cltd
and
dec
es
mov
add
sti
popa
dec
cmp
or
imul
icebp
lea
sarl
inc
stc
inc
ja
popf
out
cmp
lods
or
mov
scas
dec
fsubrs
or
in
mov
aad
call
and
aaa
div
push
ret
sbb
pop
popa
fists
xchg
out
in
jns
aaa
test
fcoms
cmpsl
in
sbbl
jnp
sbb
pusha
rcll
adc
js
mov
insl
mov
xchg
in
and
movsb
xor
daa
dec
cmp
test
sbb
push
jo
mov
cwtl
push
xor
jo
jns
add
push
xchg
faddl
scas
inc
mov
pusha
adc
inc
stos
subb
mov
or
repnz
pop
daa
mov
ficomps
xchg
lahf
dec
mov
leave
mov
or
fstpt
xlat
jo
fwait
jae
mov
jne
sti
adc
or
ret
jmp
or
mov
sub
daa
int
cmp
or
sbb
jg
jp
mov
in
loop
test
arpl
das
add
dec
xchg
out
out
cmc
xchg
jns
mov
sahf
mov
test
clc
and
sbb
iret
xchg
adc
pop
push
push
adc
jbe
call
aaa
rol
pop
inc
idivb
mov
mov
enter
out
xchg
mov
xchg
sbb
and
fwait
push
ret
adc
call
movsb
dec
jl
sar
or
sbb
test
lret
adc
push
pop
test
add
push
stos
and
jp
fwait
mov
cmp
sub
xor
sub
les
jae
aad
push
fcmovbe
pushf
pop
sti
movsl
or
dec
scas
sbb
decl
mov
fnstsw
aad
xchg
mov
pop
mov
pop
cltd
das
bound
dec
sbb
scas
adc
out
or
jmp
xchg
popa
call
mov
scas
ficompl
in
jge
aad
xor
push
fdivrs
push
add
in
adc
push
cmp
js
push
push
repnz
pop
xor
sarb
out
push
int3
cmpsl
inc
jns
rcrl
jnp
cld
push
dec
sti
push
std
fnstenv
ficoml
ficomps
xlat
rclb
xchg
cwtl
bound
xor
pop
mov
mov
or
subl
cmp
mov
sub
mov
pop
repnz
loopne
insl
mov
push
add
pop
stc
pop
mov
cmp
out
sub
dec
xor
adc
sub
fs
jne
ret
loope
pop
sub
clc
scas
xchg
fwait
mov
xchg
dec
jnp
loop
jnp
sbb
hlt
xor
xor
inc
pop
leave
repnz
xor
and
pop
pop
in
xor
lods
pusha
cltd
shrb
fiadds
xchg
jb
popa
jbe
push
in
roll
lcall
lcall
dec
push
push
leave
mov
je
popf
in
push
dec
stos
inc
in
push
ret
sbbb
mov
insb
add
mov
cmp
sub
shrl
sbb
rol
scas
jge
sbb
mov
jns
fisubrs
hlt
jg
mov
mov
add
rcrl
stc
cld
adc
neg
push
mov
insl
notl
mov
shrl
test
ds
mov
or
inc
fdivr
pop
data16
sub
outsb
xchg
fs
push
lods
add
in
cwtl
xchg
rorb
cwtl
roll
decl
roll
pop
xor
pushf
shll
pop
mov
mov
out
dec
setp
push
jl
ret
sbb
or
mov
pushf
pop
pusha
mov
add
mov
iret
sbb
mov
lret
pop
pop
vmwrite
cwtl
inc
andl
inc
push
movsl
adc
sahf
outsl
add
adc
jo
lds
das
addl
push
adcl
shll
rolb
dec
sub
mov
hlt
iret
cld
test
cmp
jnp
sbb
add
aaa
xor
sbb
movsl
nop
and
int
addr16
int
insb
ja
xchg
jecxz
mov
mov
jle
mov
xor
add
dec
add
cmp
mov
stos
sbb
popf
mov
leave
mov
jo
sub
xor
pop
lock
pop
mov
sti
daa
shrb
sbb
push
lock
mov
xor
aaa
popa
sbb
mov
sub
mov
cs
call
movsl
jmp
sbb
scas
cmpsb
stos
pop
mov
outsb
and
push
in
adc
pop
and
mov
nop
pop
sti
jae
pop
sbb
popa
add
mov
jnp
xchg
js
dec
enter
cmp
arpl
pusha
int3
and
mov
add
push
jge
dec
out
cmpsb
dec
cmp
lock
pop
js
in
lahf
or
inc
negb
inc
xchg
and
sub
push
xchg
push
in
jbe
dec
add
loop
add
and
outsb
jae
pusha
mov
jmp
iret
sbb
xchg
mov
dec
loopne
fistps
inc
icebp
scas
xchg
cmpsl
fiadds
jns
sti
and
add
sub
movsb
cld
sub
or
push
dec
mov
lret
aaa
or
out
xchg
imul
dec
fdivs
push
jle
aam
cwtl
xor
xchg
xchg
fsubs
sub
in
mov
push
loop
repz
mov
ret
inc
test
xchg
sahf
das
daa
lret
push
cmp
movsl
in
pop
insb
or
mov
sbb
dec
xchg
adc
daa
jnp
shrb
xlat
sub
int
out
insl
fildl
inc
mov
scas
inc
mov
cmp
fdivrs
jp
fsts
cmp
pop
jle
call
les
adc
sbbl
ss
daa
arpl
mov
xor
jns
pop
sbb
outsl
add
call
jno
jne
mov
mov
cmc
fsts
es
jmp
xor
das
jnp
fsubr
sbb
jg
fbstp
mov
pop
adc
mov
daa
pop
cmp
pop
lea
out
in
jb
call
inc
hlt
fsts
test
add
mov
jbe
cltd
cmc
push
mov
mov
jge
jmp
mov
mov
xchg
scas
or
jle
inc
xchg
mov
add
test
mov
dec
movsb
pushf
sub
sub
sahf
in
not
fwait
mov
mov
test
dec
imul
lahf
ss
cmp
add
movsb
hlt
or
shrb
add
inc
sub
pop
adc
jae
xor
sahf
mov
jns
mov
push
dec
adc
mov
pop
and
xorb
sbbb
sbb
test
and
pop
subb
add
les
xchg
sarb
pop
add
cld
test
lahf
mov
andl
adc
cmpl
mov
adc
outsb
shll
cmpb
cmpb
ss
outsl
ffreep
cmp
imul
rcr
insb
dec
stos
jae
ds
mov
ja
lock
sahf
push
je
pop
jb
sub
lret
xor
test
xor
notb
jo
inc
ljmp
ja
lods
push
scas
lret
out
dec
push
lods
jb
movsb
lds
xchg
ljmp
dec
pop
jle
adcb
ret
imul
out
xor
shrb
in
pop
mov
in
lds
push
repnz
shlb
sub
jnp
adcb
jne
out
add
mulw
jno
ss
or
cli
mov
jge
subb
and
lds
mull
push
cld
sahf
loope
jne
sbb
inc
in
mov
pop
push
and
mov
fisubrl
les
jmp
sbb
adc
xor
ret
stc
push
arpl
mov
dec
jge
pop
sub
rcll
subl
add
xchg
pop
xlat
push
push
ss
push
jge
xchg
call
call
push
pop
out
xor
divb
scas
inc
or
shr
cmp
adc
xor
insl
cmp
xchg
mov
jg
out
and
test
stc
popf
mov
cmc
cmp
outsb
dec
mov
je
mov
xchg
and
lahf
mov
mov
inc
repnz
hlt
arpl
mov
daa
adc
lahf
xor
push
pop
sar
jae
js
in
pop
sub
xchg
mov
test
mov
lret
fcompl
mov
hlt
and
and
push
mov
pop
xchg
xor
and
pop
xlat
movb
movb
fs
outsl
movsb
hlt
add
mov
push
push
shrl
mov
stc
and
adc
xchg
xor
dec
add
cltd
dec
pop
push
pop
fsubl
inc
sbb
and
into
lcall
inc
adc
out
jbe
mov
mov
inc
cmp
xchg
std
jge
adc
xorb
push
scas
adc
popl
cmpsb
rcr
lods
cmp
lahf
pop
jb
dec
mov
fwait
mov
or
mov
movsb
pop
or
mov
repnz
lds
push
subb
ret
mov
mov
mov
leave
cmp
repnz
inc
gs
ficoml
jmp
inc
aad
cmp
xor
push
jne
or
lea
dec
sti
sbb
test
pushf
push
pop
sbb
xlat
xchg
in
sbb
push
inc
jbe
inc
loop
test
int3
mov
inc
insl
lea
out
push
pop
aaa
jp
sub
jnp
adc
dec
test
push
and
test
out
jo
ds
data16
int3
xor
adc
dec
repnz
arpl
test
cmp
fs
out
and
scas
in
jns
cmpsl
rorb
mov
sub
add
push
dec
sti
sti
mov
movl
lretw
aaa
movsl
es
ret
repnz
push
scas
jl
loop
jp
sbb
pop
mov
jge
daa
scas
pushf
pop
mov
cmp
out
mov
xor
cmp
and
stos
loopne
clc
mov
mov
mov
mov
les
xchg
xchg
pop
test
rcrl
in
jns
repnz
scas
mov
es
sti
xor
arpl
test
jne
stos
mov
adc
ret
pop
sbb
adc
add
out
ds
ljmp
push
xchg
and
jb
xchg
int
cmp
mov
nop
cld
lahf
and
dec
repnz
jle
es
lods
mov
sahf
adc
pop
out
outsb
mov
add
repnz
adc
mov
xchg
lret
pop
push
pop
int
scas
or
test
mov
push
hlt
mov
mov
pop
pop
xchg
and
adc
pop
pop
les
mov
mov
push
mov
push
aad
dec
push
jno
stc
aad
mov
xchg
pop
mov
dec
cld
aas
in
or
jno
or
cs
jl
mov
fldl
pop
lret
mov
pop
ret
lcall
sbb
imul
outsl
pop
ficomps
fisubs
cmpsl
sahf
arpl
pop
sub
pop
xchg
mov
shlb
stos
xorb
and
insl
outsb
adc
mov
sbb
sub
in
jecxz
sar
aas
pushf
clc
dec
jl
lock
sbbl
inc
in
mov
fadd
push
pop
push
imul
fistl
out
adc
in
fsubs
and
mov
out
test
pop
movsl
dec
or
pop
test
adc
sarb
fcoms
int
pcmpeqw
shl
lcall
jmp
sub
mov
iret
mov
pop
shl
xchg
mov
out
push
in
jmp
push
pop
dec
popa
jg
out
cld
sti
adc
xchg
mov
jp
jle
or
enter
xchg
xchg
cmp
xor
push
mov
ret
es
xchg
add
push
or
push
and
xchg
pushf
push
add
xchg
mov
mov
xor
bound
fs
pop
lcall
outsb
add
pop
fmuls
lcall
into
mov
je
in
inc
ljmp
outsl
adc
into
or
out
rclb
jno
xor
add
jge
inc
cltd
pop
jb
push
inc
in
test
push
shl
xor
movb
xor
mov
imul
pop
mov
movsb
lock
push
jo
out
mov
and
jns
cmp
sahf
insl
fildll
imul
testb
jno
ret
mov
xor
cmp
cmpl
adc
roll
jnp
inc
push
ror
les
cmp
adc
add
xchg
cmp
outsl
enter
dec
sahf
cld
divb
mov
test
mov
add
out
lods
cmpsb
sub
cld
xor
push
hlt
loope
xchg
mov
pushw
icebp
push
iret
push
lock
testb
rcr
adc
cwtl
shl
and
icebp
jno
sahf
xchg
insl
popa
sub
jo
movsb
push
insb
stos
xchg
es
sub
pop
lcall
add
rcl
shll
ja
adc
fwait
enter
and
mov
jecxz
lods
xor
lods
leave
jle
insl
inc
cmpsl
add
es
mov
mov
xor
cmp
mov
test
js
sbb
cmc
push
hlt
push
mov
jge
test
test
xchg
inc
push
aam
ds
push
xchg
out
push
subl
fnstcw
add
xor
sbb
or
notb
sbb
xchg
int
cmpsb
and
hlt
imul
and
push
cmp
push
test
jo
repnz
cwtl
adc
stc
mov
addr16
nop
mov
ja
sbb
cmp
insl
push
bound
sub
add
jno
ljmp
sub
movb
loopne
adc
inc
or
cltd
and
inc
inc
and
adcl
daa
jno
xchg
notb
or
out
aad
cmpsl
inc
push
sub
int
ficoms
push
filds
cmp
mov
aad
inc
cs
xchg
ljmp
int3
std
lcall
pop
dec
inc
jmp
jle
mov
lahf
ljmp
and
ret
dec
mov
scas
mov
pop
cltd
mov
push
xchg
xchg
dec
xchg
inc
cmpsb
sbb
mov
xor
inc
arpl
jae
sub
xor
sub
aad
aaa
xor
in
xchg
cmpsb
add
pop
mov
sti
add
jecxz
mov
push
cmp
icebp
mov
shl
or
mov
push
dec
or
popf
and
and
int
add
pusha
mov
or
mov
mov
xchg
repz
sub
cmp
jb
fdivp
push
test
movswl
or
loope
pop
popa
push
push
push
and
std
sub
and
hlt
mov
lret
cmp
cwtl
inc
mov
enter
jl
dec
hlt
divl
rorb
mov
test
outsl
cmp
jl
fwait
inc
sub
cmp
mov
into
bound
mov
adc
xor
or
adc
adcl
iret
push
and
scas
ds
outsl
add
popl
test
cli
inc
and
push
sub
pop
incl
jle
in
roll
out
imul
fstl
lds
mov
adc
xlat
mov
cli
sbb
rcll
ss
filds
js
push
stos
bound
imul
jg
pop
adc
or
loop
pop
das
dec
mov
jmp
addr16
addr16
test
sbb
pop
mov
mov
jno
pop
push
or
adc
fdivrp
xchg
fwait
or
add
icebp
inc
repnz
loop
cmpsl
jns
sub
shl
or
shlb
les
das
mov
fnstcw
jbe
cli
fadds
mov
sub
and
imul
ret
sub
xchg
mov
mov
adc
das
stos
jae
rep
dec
and
xor
lea
sbb
dec
stc
out
mov
inc
mov
lock
pop
pop
imul
decb
push
idivl
pushf
and
loop
stos
test
mov
mov
xlat
into
adc
cmpsl
outsb
inc
inc
pop
pop
xor
add
cld
negl
lds
add
cmp
daa
or
add
inc
ret
testb
jge
push
repnz
mov
sbb
sub
dec
es
mov
jge
popa
inc
cmp
movsl
mov
or
sub
jo
jge
push
lret
mov
insb
in
xchg
daa
xor
out
and
push
sahf
jbe
add
idivl
inc
dec
or
cmp
push
into
xor
out
add
leave
in
mov
mov
fwait
xchg
add
or
jne
hlt
lcall
xchg
sbb
inc
les
xchg
je
je
push
sbb
aam
lret
jmp
jg
adc
xor
pop
inc
lea
cld
xchg
inc
imul
cli
sbb
icebp
imul
cmp
fstl
outsb
mov
mov
push
les
mov
pop
push
in
cmp
bound
fs
mov
shl
adc
lret
les
stos
adc
rolb
adc
cmpsb
imul
mov
push
fs
in
xor
jmp
ljmp
fisubrs
inc
jl
mov
mov
push
push
sbbl
loope
movsl
outsl
mov
sbb
inc
mov
mov
imul
imul
mov
in
ss
lods
dec
sbb
mov
xorb
int3
gs
lret
dec
jnp
ds
data16
jnp
pop
add
adc
mov
imul
jbe
outsb
cli
fcmovnbe
pop
data16
or
and
cli
xchg
stc
mulb
stos
or
ret
mov
adc
mov
cltd
sahf
jl
lods
rcr
inc
adc
hlt
mov
adc
insb
mov
xor
sbb
mov
mov
in
imul
icebp
sbb
and
aaa
mov
mov
sti
scas
push
pop
pop
sahf
push
sub
daa
aaa
cmp
xor
out
or
xor
fbld
daa
ret
mov
jno
fdivl
loope
in
pop
nop
lret
dec
mov
push
or
push
bound
test
pop
imul
es
push
adc
xchg
jno
aam
and
fwait
arpl
inc
or
jg
mov
cwtl
repnz
sub
adc
leave
inc
pop
push
notb
fucom
mov
mov
ret
jb
sbb
int
jge
sbb
pop
daa
lret
xchg
lds
adc
shlb
and
insl
push
jno
or
repnz
jb
pop
and
shll
icebp
mov
push
push
fnstcw
pop
in
sbbb
dec
icebp
testl
fildll
out
sbb
arpl
fisubl
pop
or
cmpb
jg
lahf
push
mov
out
ja
rcr
arpl
mov
xor
cs
aaa
clc
mov
xor
xchg
test
mov
or
mov
adc
and
int3
pop
loop
xchg
test
lods
sub
sbb
shll
cmp
fwait
adcl
jnp
mov
push
mov
movsb
lret
xchg
das
push
call
mov
and
adc
lods
push
outsl
mov
in
pushf
adc
test
push
lock
mov
push
enter
mov
iret
xor
dec
jns
in
jno
je
fisubs
out
iret
pop
mov
mov
or
cmpsl
mov
pop
leave
sar
outsb
hlt
lods
mov
es
mov
arpl
test
jae
clc
adcb
mov
mov
add
stc
shll
mov
sbb
and
test
sahf
ss
mov
repnz
mov
js
aas
add
push
call
stc
and
jne
dec
pusha
out
push
insl
cld
mov
or
push
pop
push
jmp
xchg
mov
xor
jo
add
stc
cmp
test
mov
xchg
push
dec
jne
out
sbb
cltd
fstpl
inc
xchg
enter
push
enter
sub
or
sbb
sarl
mov
out
pop
jecxz
daa
ds
mov
jae
dec
add
or
es
or
in
xchg
sub
xchg
outsl
mov
int
dec
shll
outsl
mov
nop
jnp
sub
ror
inc
imul
mov
iret
mov
mov
mov
xchg
jp
push
push
sbb
loop
je
lea
test
mov
out
push
test
fimull
fcmovne
sbb
or
stc
cmp
pop
pop
add
cmp
leave
inc
in
rorl
sub
mov
std
out
mov
imul
sbb
rcrl
cmc
xchg
jbe
pop
dec
fsubrs
pushf
mov
cmp
jae
mov
gs
or
pop
hlt
pop
xor
mov
mov
jns
fisubs
rclb
and
and
dec
insl
mov
cmc
or
imul
jp
jo
rclb
adc
mov
jmp
je
mov
xchg
xlat
jmp
or
lret
cmp
les
sbb
jb
arpl
js
add
pop
sbb
divl
lret
lds
test
push
xchg
stc
bound
mov
add
or
and
lds
out
lds
jp
adc
add
sbb
push
pop
fcoml
imul
mov
jle
xchg
enter
sub
je
stos
outsl
xor
adc
ljmp
in
int3
push
cmp
in
dec
sti
sbb
jo
shrl
aam
pop
out
dec
mov
cmp
xor
xchg
push
jns
cwtl
pop
mov
cld
lods
fistl
neg
repz
jns
cmpsb
mov
xor
imul
push
push
add
aaa
data16
pusha
lock
adc
jo
fsubrs
je
adc
inc
out
and
in
adc
or
stos
mov
lcall
jnp
jmp
into
push
jnp
and
add
cwtl
xchg
out
ret
mov
fcomps
loopne
int3
repz
xchg
hlt
push
rcl
leave
jbe
lods
cmp
lret
pop
loopne
mov
shrb
cmc
cmpsb
mov
jecxz
in
adc
flds
cli
and
test
cmp
out
movsl
sbb
cwtl
mov
pusha
hlt
push
repnz
outsl
cmpl
lea
es
mov
mov
mov
or
lret
jge
lcall
insb
js
addr16
jnp
or
mov
fmuls
sub
cbtw
aaa
mov
xchg
pop
leave
lods
xor
repnz
mov
xchg
xchg
jge
scas
or
jb
jmp
sub
xchg
mov
mov
js
jns
movsb
xchg
adc
push
test
mov
pop
dec
inc
or
mov
daa
sub
loopne
cmp
in
loopne
cli
jl
into
and
pop
das
add
adc
out
jp
pop
ret
sub
adc
jb
mov
or
scas
je
out
pop
in
sbb
mov
push
xlat
lcall
out
dec
and
adc
out
mov
mov
daa
iret
test
fs
add
imul
rclb
test
daa
adcb
and
les
nop
std
sarl
loope
lods
or
xor
insb
mov
jnp
fdivr
mov
aam
mov
repz
mov
mov
aaa
adc
scas
jp
loop
xchg
jl
push
adc
out
jge
cmc
mov
stos
icebp
push
sahf
fstpl
mov
xchg
cmp
xchg
cmp
out
rcll
in
movsl
adc
jmp
mov
fisttpl
cmp
fidivrs
push
rcll
push
clc
push
lcall
imulb
xchg
sarl
mov
rcr
xor
nop
and
popf
mov
ret
enter
mov
out
mov
cli
push
add
pop
in
adc
and
or
flds
cmp
adc
ja
push
pop
ss
sti
scas
push
or
lock
pop
or
xchg
test
jp
cmp
ds
loop
inc
push
outsl
and
inc
aaa
lret
vpsubsb
cmp
jecxz
inc
inc
jb
cmp
clc
jns
add
fsincos
sub
sub
xor
sub
outsl
test
pop
fimull
lock
adc
lods
pop
jns,pt
push
aad
inc
out
popf
inc
stos
imul
mov
gs
incl
jno
rorb
out
mov
out
lret
mov
out
stos
adc
xor
mov
notb
jg
add
or
popa
sti
or
ljmp
pop
jae
repnz
out
sbb
dec
cmp
cmc
adc
push
jo
mov
xor
aam
addr16
mov
pop
fsub
jle
jne
mov
aas
push
rolb
mov
and
xchg
push
imul
cmp
stos
shlb
imul
decl
jmp
jge
mov
insb
addb
lahf
inc
and
xchg
mov
push
push
ret
jne
lods
fwait
xlat
jb
bound
ja
outsl
mov
cmc
pusha
scas
pop
xchg
cmp
xor
ret
pusha
loopne
mull
fsubl
ret
sub
rolb
sub
jecxz
fs
dec
lret
cld
call
or
rorl
adc
jl
xchg
adc
inc
les
xchg
out
jo
mov
xlat
cmp
notb
int3
cmp
in
or
sahf
bound
sbb
adc
ljmp
inc
aam
stos
mov
stos
cmpl
jge
xchg
lahf
stos
sbb
cmc
rol
xor
sbb
fwait
jle
shlb
cld
inc
pop
dec
into
addr16
iret
mov
shrl
insb
pop
sub
dec
arpl
jo
dec
into
mov
cmpsl
cli
xor
cltd
mov
or
test
add
mov
mov
xor
push
ds
test
and
loop
xchg
inc
addr16
int
sbb
jae
lea
insl
mov
and
cli
jo
and
push
adc
add
xchg
jns
ja
xor
cmp
es
int3
ret
ror
movsl
loopne
inc
xor
cs
adc
scas
fadd
xchg
int3
inc
pusha
ss
xchg
out
mov
pop
lahf
mov
jg
dec
mov
shll
iret
adc
data16
negb
xchg
jne
shll
inc
lods
jmp
lahf
lahf
jnp
fwait
mov
call
adc
imull
dec
or
add
add
sub
test
xchg
rcl
mov
or
ds
adc
push
hlt
inc
jae
add
data16
fstpt
cmp
inc
adc
mov
jg
push
push
add
data16
push
adc
xor
xchg
jmp
incl
xor
aam
xchg
pushf
adc
jno
js
sahf
xchg
aad
cmp
xchg
push
dec
jg
insl
loopne
insl
mov
hlt
cbtw
xlat
lret
inc
jbe
sbb
pop
or
sub
sbb
enter
out
das
das
hlt
lret
roll
mov
sub
inc
sbb
jmp
add
loop
inc
ss
mov
dec
orl
jp
scas
jg
pushf
cmp
fdivs
sbb
jb
inc
dec
cmp
bound
pop
in
mov
sub
js
into
repz
lock
sti
jg
add
int3
das
mov
push
call
lret
or
into
fsubrs
cld
icebp
mov
adcb
in
stos
mov
pop
add
es
adcl
mov
mov
xor
and
adc
inc
inc
or
shr
aaa
call
in
mov
loopne
xchg
mov
mov
in
fwait
pushf
mov
jmp
inc
xchg
mov
mov
stos
scas
adc
jg
sub
xchg
xor
dec
dec
cmp
push
popf
lcall
jle
inc
fisubl
sub
sbb
inc
mov
push
mov
add
jnp
mov
xor
out
jns
ja
sti
fstpl
cmp
adc
fcomps
fs
cs
xchg
push
mov
fstpt
sub
out
rep
imul
push
xchg
mov
popf
mov
push
inc
cmp
shlb
and
push
inc
sub
xchg
xlat
testb
xorl
xor
cmp
leave
jg
and
lds
shlb
sbb
sub
dec
mov
sub
dec
jae
rorl
sbb
popf
lds
inc
inc
mov
lcall
or
les
shrl
fistpl
sub
data16
orl
stc
out
inc
pop
mov
loopne
jmp
fldt
lods
cwtl
nop
cmp
subb
fstpt
xlat
mov
xor
jno
mov
inc
add
mov
jns
lods
jnp
popa
sub
pop
stc
iret
jns
add
decl
xor
dec
pop
sbb
rolb
inc
inc
jmp
clc
or
adc
adc
fstpt
sbb
or
mov
pop
mov
jbe
jnp
jecxz
or
movsl
adc
enter
push
mov
inc
das
sbb
dec
jb
push
dec
jmp
or
cmp
aam
loopne
popa
push
inc
test
adc
flds
cmpsl
sahf
aad
cli
repz
popf
dec
std
jecxz
jne
aaa
adc
rcll
lea
loop
test
insl
fucomp
adc
dec
jno
hlt
rcll
int3
push
cmp
adc
jle
pop
mov
mov
ret
xrelease
pop
shrb
test
and
ret
cld
repz
xchg
fsts
insb
test
rcrl
scas
sub
add
xchg
les
cmp
push
or
mov
xchg
mov
mov
mov
inc
insl
and
popf
pop
fwait
mov
dec
xchg
idivb
dec
pop
leave
mov
jp
out
in
mov
idiv
ja
inc
shll
jmp
xor
div
faddp
add
cli
pop
cmc
fcmovnb
cmp
hlt
fadds
aas
push
addr16
inc
data16
js
push
scas
xchg
add
daa
stc
adc
popf
int
cli
pop
out
mov
aas
rcrb
dec
sub
jne
cltd
popa
jns
pop
push
inc
aad
jbe
loope
fldenv
jle
sub
sahf
or
test
pop
lea
xchg
cld
dec
insb
adc
lock
mov
cmpsb
ds
es
inc
push
popf
jae
rol
ret
push
adc
adc
out
pop
icebp
jae
mov
push
aad
mov
mov
dec
push
fs
cmp
lods
subl
call
push
mov
jmp
sub
sub
sbb
xchg
scas
jle
xchg
xchg
inc
jae
fildl
push
xchg
xchg
mov
stc
jnp
test
and
cmp
aas
imul
lea
push
ss
int3
fdivs
sbb
jmp
xor
in
loopne
cwtl
adc
mov
es
mov
pop
mov
outsl
sbb
movsl
movsl
add
xor
push
jg
stc
pop
out
fdiv
xchg
jns
xchg
or
adc
pop
mov
iret
in
ror
xor
outsb
fcomps
xchg
inc
jge
sbb
mov
cltd
xchg
or
dec
shr
or
pop
stos
lcall
je
pop
sbb
sahf
inc
jle
decl
xor
mov
bound
add
shlb
lret
jge
les
ror
in
mov
jmp
mov
icebp
je
jl
mov
repnz
bound
pop
mov
lods
push
loopne
test
sbb
out
ret
pop
lods
xchg
inc
adcb
jge
and
jge
imul
lea
inc
inc
push
xchg
xor
pop
adc
adc
mov
cmp
cmpsl
push
pop
sbb
int
fnstcw
je
xor
jnp
dec
mov
adc
jb
mov
and
jnp
xchg
jmp
call
sbb
bt
das
jle
or
jnp
or
and
and
cli
add
adcb
mov
mov
add
sbb
setne
and
mov
jl
adc
jae
test
sahf
shr
and
dec
pop
jge
sarb
xor
add
push
cmp
repz
sahf
orb
add
sahf
mov
shl
dec
lret
cmp
push
jmp
iret
dec
inc
shll
cmp
pop
cli
sub
cmc
cmp
mov
lret
dec
xor
inc
bnd
mov
cmp
or
and
movsl
andb
or
mov
cmc
rcr
sbb
sub
call
insl
inc
inc
jg
mov
jae
add
scas
mov
fs
test
push
sub
xchg
mov
sbbb
icebp
inc
stos
lahf
mov
out
insl
out
push
leave
aam
je
daa
sbb
or
aam
xorb
std
jmp
and
cmpsb
sub
sub
jecxz
jns
adc
nop
bound
out
push
inc
pop
pop
sbb
std
cmp
jmp
std
sbb
xchg
jmp
fidivl
gs
xor
into
sbb
sbb
pop
scas
mov
mov
pop
loop
std
dec
pop
pop
pushf
imul
loope
xchg
push
ja
mov
pop
pop
mov
dec
nop
inc
mov
and
shll
mov
push
test
lods
xchg
iret
xlat
or
push
and
dec
bound
loopne
pop
xor
dec
jmp
flds
dec
inc
arpl
jno
push
pop
or
mov
and
test
lds
push
mov
sub
insb
out
add
aam
in
hlt
insl
dec
push
jbe
sbb
hlt
popf
inc
mull
cmpsl
lods
sub
dec
dec
lods
rolb
jno
cmp
pop
xchg
out
jae
mov
mov
lds
dec
sti
lcall
dec
cmc
mov
mov
outsl
xchg
mov
inc
inc
push
cmp
jb
inc
jne
data16
aas
nop
push
out
or
addr16
aaa
addr16
jae
ret
adc
stos
or
sub
push
adc
repz
test
mov
jg
clc
dec
xor
lods
aaa
out
pushf
push
jmp
out
out
int3
jbe
mov
inc
inc
pop
jle
movsl
xor
jle
fisubrl
mov
es
push
pop
fwait
icebp
inc
lahf
cmp
xor
mov
aad
sbb
out
sub
testl
out
mov
insl
adc
xchg
jo
arpl
mov
dec
std
arpl
pop
adc
fidivrl
lahf
dec
add
shl
fnstcw
mov
lds
call
jno
lods
sti
bound
stos
lret
xorb
push
mov
push
xchg
pusha
int3
pop
jp
push
dec
cltd
sbb
dec
nop
xor
push
je
cltd
push
sbb
push
sub
add
mov
inc
cmpsl
repz
cmp
adc
in
cmp
int
sub
jp
xlat
stos
cltd
daa
cs
cmpl
daa
or
hlt
sub
jne
mov
cmp
sub
jb
ss
add
mov
xor
fdivr
rclb
xor
mov
push
outsb
xchg
xchg
dec
ja
xchg
sbb
cmove
imul
xchg
xchg
ss
push
xchg
repnz
cmp
jp
test
aas
jnp
jbe
mov
int
inc
leave
test
idivl
dec
xor
mov
xchg
popf
stc
sbb
lret
jmp
or
shr
lods
jb
in
in
jmp
cmpsl
jl
add
dec
lahf
lret
xchg
fsts
push
repz
and
in
fs
fs
xor
xchg
popa
cli
subb
pop
sbb
push
add
pop
rcrl
inc
orl
popf
shl
outsl
add
jbe
enter
aad
cld
fdivs
int3
fsts
mov
xchg
mov
jmp
lret
adcb
pop
jmp
loope
lcall
and
sti
mov
ja
xchg
jnp
mov
push
add
or
ljmp
pop
stos
fimuls
iret
mov
fdivrp
aas
pop
aaa
aaa
pop
cmpsl
arpl
addr16
movsb
movntps
mov
jle
je
lea
lods
cmp
xor
mov
lock
push
gs
push
inc
sub
and
ja
insb
js
jge
cmp
xor
adc
dec
xchg
cwtl
jp
loope
int
push
loop
cwtl
inc
or
push
jp
sarb
movl
sbb
jnp
pop
leavew
xchg
cmc
int3
mov
loope
sar
not
inc
xchg
clc
ret
mov
aad
daa
mov
lret
sbb
rcl
sub
push
repnz
adc
or
dec
inc
gs
loop
sti
push
lret
xchg
aas
or
mov
fwait
in
dec
es
lcall
movsl
cmp
mov
out
pop
xor
sti
push
xor
cmp
sub
cmp
lds
dec
aam
icebp
cltd
adc
mov
or
je
push
adc
or
add
pop
arpl
dec
gs
and
xlat
push
aas
shl
mov
flds
mov
inc
sub
fstpl
jbe
or
outsl
pop
pop
aam
mov
out
nop
add
movsl
xorb
add
pop
mov
fcomps
test
lea
push
aas
shrb
mov
fildl
jns
xchg
or
xor
fwait
cmp
jl
push
inc
sbb
sbb
xor
lret
icebp
popf
sub
inc
lds
dec
lods
jl
sbb
inc
ljmp
ret
sbb
enter
out
sub
push
fidivs
lcall
jg
add
dec
push
inc
or
aam
in
scas
mov
jo
add
mov
fbstp
mov
enter
lret
lds
mov
adc
xor
pop
and
jb
inc
aas
pop
cli
add
and
out
xor
mov
xorb
mov
jecxz
les
and
cmpb
add
add
lret
inc
add
xor
xor
shrb
jmp
adc
xchg
mov
idivb
mov
pop
pop
inc
add
sub
cmp
gs
pop
mov
loope
mov
mov
ja
mov
mov
test
decl
cwtl
xlat
and
xor
mov
mov
inc
inc
push
cmpsb
sub
loop
xchg
adc
shll
fidivs
push
or
dec
adc
ret
cmc
or
dec
jmp
pop
outsw
std
sbbl
jae
jp
lock
push
add
inc
jb
xchg
push
xchg
and
leave
loop
mov
ror
mov
sub
jmp
pop
cmp
rolb
roll
rcrb
rorb
shl
pop
call
sbb
out
or
adc
adc
inc
dec
mov
enter
lods
lahf
ret
loop
dec
sbb
jae
mov
cmp
jmp
adc
pop
xor
rcrb
iret
scas
dec
enter
fldcw
imul
or
jl
cmpl
cmp
cmc
insl
out
or
lahf
rcrb
dec
jecxz
push
or
les
fdivrs
inc
int
aad
lcall
rcll
pop
sarb
mov
jge
addb
addr16
cmp
in
jae
fisubs
inc
ret
push
inc
nop
jne
call
adc
repnz
stc
pop
ret
mov
dec
sahf
add
mov
jae
icebp
inc
push
call
pop
sahf
sbbl
iret
pop
rcll
lcall
cli
xor
out
outsl
out
xlat
sbb
cmp
movsb
mov
pushf
jp
xor
pop
xchg
fldcw
sbb
cmp
xchg
ds
movsl
imulb
mov
clc
cmp
cwtl
inc
jne
or
sub
mov
inc
cmp
and
mov
pop
adc
mov
xor
sub
pushf
mov
mov
and
push
aam
push
test
mov
xchg
std
rolb
mov
mov
ss
xorb
lcall
subl
or
test
mov
cwtl
js
cld
das
icebp
out
lock
add
aaa
stos
mov
jp
pusha
cwtl
rclb
lcall
mov
lcall
dec
pop
lock
out
push
cmp
sbb
nop
loope
cld
lods
mov
push
xchg
and
loopne
sbb
pop
insb
int
aam
mov
sahf
loopne
inc
cwtl
mov
fistpl
xor
push
jae
out
jecxz
clc
push
stos
mov
sbb
cmc
sahf
xchg
lret
dec
mov
push
and
into
cmp
or
outsb
loop
mov
pop
fsubl
pop
stc
and
inc
pop
sbb
or
jmp
icebp
hlt
or
pop
adc
and
jecxz
xchg
faddl
movsb
push
in
xrelease
adc
shlb
cs
clc
push
bound
flds
xchg
cmp
push
dec
test
jne
sbb
cmp
push
sub
push
push
sub
cmpsb
dec
mov
les
inc
xor
push
out
cmp
sti
test
pop
jne
icebp
xor
xlat
or
out
aaa
sub
sbb
fistl
push
jns
shll
sbb
addr16
mov
or
lods
cwtl
pop
imull
aas
xor
inc
pop
cmp
mov
push
cmc
mov
pusha
sub
cmp
push
outsl
cmp
test
movsb
scas
fwait
stos
call
xor
sub
push
jp
mov
stc
inc
or
rcrl
dec
pop
iret
ds
sahf
jbe
fs
loopne
stos
fucomip
pop
int3
daa
js
js
scas
insl
js
testl
daa
ss
jbe
adc
insb
cmpl
sbbb
jno
sub
iret
lds
in
add
jecxz
sub
bound
push
mov
movsl
outsl
inc
mov
and
pushf
iret
into
adc
hlt
xor
sub
stos
jge
cmpsl
das
lret
nop
fnstenv
xchg
js
inc
mov
les
enter
in
imul
jge
ss
test
xchg
mov
jbe
cmpsl
cmp
lods
out
rcrb
mov
mov
add
scas
shl
repnz
nop
mov
or
adc
icebp
das
mov
cmp
jmp
mov
in
pop
rcrl
rcll
add
lret
jne
lods
movsb
outsl
sti
movsl
lea
and
cs
arpl
dec
call
aas
int3
dec
add
xor
sub
sarl
hlt
jb
push
in
scas
mov
in
pop
push
and
dec
mov
sub
dec
in
icebp
lret
lea
lods
cld
mov
out
test
dec
pushf
lret
pusha
mov
stos
cmp
mov
sub
or
popa
sbb
lods
sub
call
lret
and
dec
jl
imulb
imul
lcall
dec
flds
sub
lods
sbb
adc
fcmove
pop
outsb
mov
adc
out
push
lret
xlat
push
or
sub
in
cmpsb
ret
sarb
pop
iret
ja
pop
enter
add
in
out
mov
hlt
fs
outsb
ret
pop
rclb
into
jmp
adc
sbb
stos
pop
add
mov
xor
cwtl
jg
add
lods
adc
stos
jb
cs
fcomps
mov
cli
jno
test
xchg
adc
mov
sub
mov
test
popa
dec
in
lret
cmpsb
xlat
pusha
push
mov
or
cmc
pop
adc
xor
lods
inc
loopne
dec
jo
cmpsl
xchg
adc
lret
leave
out
gs
repnz
sub
push
jns
andl
ljmp
pop
inc
cmp
repz
pusha
jle
fcomp
leave
cltd
mov
jmp
jb
mov
aaa
lds
mov
out
pop
mov
test
jmp
push
jmp
aaa
test
arpl
inc
add
sbb
loope
mov
out
roll
iret
ljmp
sub
adc
lret
test
xor
mov
jl
jne
jle
mov
cld
mov
mov
mov
enter
jmp
nop
daa
cmpsl
idivb
mov
cld
mov
popa
inc
call
loop
jp
mov
xchg
mov
pop
sar
xchg
adc
xlat
out
hlt
shll
mov
mov
sbb
in
jne
iret
movsl
pop
xor
pop
jmp
dec
rorb
pop
jo
dec
adc
popa
mov
and
sub
fstl
push
iret
fstp
push
dec
jne
dec
imul
cmp
jno
mov
icebp
jne
inc
cmp
movsb
jb
pop
pop
mov
push
pop
jge
mov
in
sbb
test
lret
adcl
push
pop
fdivrp
test
cwtl
push
mov
sub
leave
cmpsl
cmp
xchg
inc
pop
xchg
mov
in
jle
leave
adc
mov
mov
in
inc
mov
xchg
jle
mov
jnp
inc
into
mov
jne
repnz
dec
scas
into
mov
lods
nop
arpl
ljmp
dec
add
push
fmul
or
sahf
jno
stc
inc
cmp
rcrl
xchg
inc
mov
lahf
add
xchg
cmpsb
aas
cwtl
imul
dec
sbb
push
subb
pop
cli
daa
jle
insb
aaa
push
int3
pop
fnsave
inc
orb
shll
push
xor
push
cmpsl
jge
dec
inc
and
jns
or
jp
clc
cs
lret
mov
push
cmp
call
mov
push
pop
inc
dec
mov
in
dec
push
mov
pop
sbb
ret
sti
jl
mov
adc
shrl
popf
and
xlat
insb
stc
repnz
imul
jg
rol
cvtpi2ps
aas
pop
das
ret
mov
fnsave
and
sub
fcoms
inc
adc
sbb
test
sbb
adc
mov
or
into
test
jmp
ficomps
lods
testb
sbb
pop
fdivrs
sbb
insl
jbe
xor
dec
inc
fiadds
pop
enter
gs
leave
mov
mov
mov
sbb
cmp
scas
adc
incl
jo
scas
xchg
out
lea
add
aad
ds
pop
cli
jns
sub
add
lds
and
std
or
mov
push
dec
xchg
inc
mov
dec
jge
push
lods
shlb
sub
jo
decl
loopne
inc
or
ret
xor
jle
and
mov
cmp
rorb
sti
cld
inc
enter
push
lcall
fiadds
cmc
jle
movsb
gs
sub
daa
cltd
ds
lret
ljmp
or
inc
mov
pop
mov
mov
stc
pop
outsl
sub
es
mov
dec
enter
cmpsb
imul
sub
addr16
pop
cli
sbb
mov
inc
lret
adc
jb
in
sub
mov
add
adc
xchg
jae
mov
repnz
and
sbb
fwait
idiv
lcall
arpl
jp
xor
test
pop
push
data16
pop
int3
int3
stc
cmp
xor
ljmp
fcomps
cmp
je
push
mov
push
lcall
pusha
xor
call
loope
lret
mov
ss
mov
or
fsts
mov
loope
pusha
in
jmp
push
js
mov
add
mov
fidivrl
or
jp
adc
sbb
push
out
sbb
xchg
test
popa
cld
adc
loopne
adc
adc
shll
fistpll
pop
ljmp
arpl
test
xor
add
mulb
mov
into
movsb
and
and
daa
xor
les
shrb
mov
arpl
es
jo
adc
add
fwait
scas
and
bound
jbe
sbb
sub
mov
sbb
mov
cltd
and
movsl
addr16
lahf
sub
mov
test
ja
mov
mov
shrb
js
leave
cli
divl
mov
adc
pushf
subl
add
jle
std
addr16
out
mov
imul
push
int3
sbb
cmp
bound
jl
dec
lret
add
mov
int3
aad
sbb
inc
push
xor
enter
ss
lret
jle
mov
pop
adc
stc
or
ss
insl
rcrl
inc
inc
dec
es
icebp
enter
ror
sbb
out
imul
lcall
push
pop
popf
cmp
xor
aad
add
mov
sbb
in
xchg
lock
or
push
cmp
je
pop
sbb
orl
icebp
dec
cmp
in
inc
gs
pminsw
push
mov
mov
dec
xchg
shl
xor
mov
pop
inc
nop
sub
loopne
sub
imul
in
sub
pushf
pop
or
jae
push
outsl
sub
mov
aam
aad
xchg
test
in
loopne
stos
scas
cmp
mov
icebp
out
clc
mov
pusha
mov
divl
sbb
mov
and
in
add
scas
imul
popf
es
inc
pop
cld
iret
loopne
rolb
pop
xchg
mov
push
xchg
frndint
jb
xor
into
jo
sub
inc
pushf
cld
dec
je
ljmp
push
and
sub
lods
adc
mov
mov
jg
push
int3
hlt
adc
outsb
aaa
pop
and
jg
cmp
xchg
aas
push
aad
lret
mov
imul
les
fidivrs
adc
adc
cmpsb
sbb
fidivl
outsl
and
repnz
out
std
jle
add
mov
out
adc
dec
fcmovb
mov
sub
cmp
jecxz
nop
les
xor
dec
mov
mov
out
mov
mov
xor
jle
jne
lds
push
es
lods
daa
mov
mov
out
gs
cmp
les
or
push
into
sbb
xchg
or
mov
pop
shlb
xor
imul
je
pop
cmp
adc
mov
mov
jmp
jge
push
leave
pop
and
xlat
fmuls
call
dec
and
addr16
fisubrl
pop
nop
fs
lea
pop
pop
adc
test
mov
dec
shl
les
in
out
mov
rorl
pop
add
mov
cs
in
fwait
inc
and
ret
popa
test
rcl
loop
fwait
cmp
stos
leave
mov
push
cmp
mov
inc
mov
mov
mov
xor
xchg
sbb
fisttpll
or
xorb
cwtl
jo
movsb
fdivrs
push
mov
test
jnp
sub
add
std
int3
xorb
mov
dec
pop
loop
pop
out
insb
inc
push
push
ret
or
fmull
loop
push
mov
adc
movsb
mov
add
adc
ljmp
pop
lret
pop
in
sbb
xchg
xchg
popa
cmp
dec
adc
bnd
stos
repnz
notb
jp
in
sbbb
shlb
sbb
mov
jle
xor
das
pop
xchg
cltd
cmp
stos
lret
test
filds
lock
andl
incl
mov
data16
lcall
aas
dec
roll
xor
push
sub
cmp
jecxz
call
loope
mov
into
es
xchg
and
rorb
mov
add
fidivrs
je
mov
pop
lahf
mov
test
xchg
mov
nop
sbb
sub
pop
scas
stos
loopne
add
xor
cmpsl
and
gs
stos
and
int3
ret
and
mov
int3
or
stc
loopne
and
sub
mov
or
pushf
inc
add
rclb
add
rcl
lcall
push
mov
xor
add
xchg
imul
mov
sub
jp
dec
mov
inc
xor
sarb
lahf
mov
add
call
xchg
pop
cmp
push
subb
ret
adc
jmp
adc
push
arpl
das
cmp
pop
and
int3
inc
jecxz
pop
add
clc
test
mov
outsl
mov
mov
test
or
insl
in
scas
push
sub
push
rclb
pop
sub
shl
in
xor
xor
lea
out
sarl
popf
cmp
dec
adc
sub
and
stc
sbb
loope
inc
sub
faddl
mov
pop
cwtl
jae
push
mov
inc
xchg
jb
in
sub
lahf
inc
jno
jg
add
aam
or
outsb
fwait
es
and
sbb
adc
in
in
xchg
mov
xchg
iret
push
pop
lods
xchg
faddl
inc
add
dec
push
ljmp
out
adc
loopne
fwait
add
push
lods
xor
sbb
xchg
lea
or
and
push
pop
jmp
add
mov
jnp
push
loop
or
adcb
xor
lock
aas
add
imul
jmp
aaa
mov
mov
cmc
push
sbb
test
push
xchg
ror
pop
aam
and
add
repnz
or
push
std
pushf
nop
push
pop
pop
je
fstp
shrl
inc
mov
cld
pmulhw
mov
ss
rcrl
fidivl
jp
adcl
hlt
sub
push
fisttpll
test
andl
cmpsl
mov
ret
jbe
nop
dec
repz
or
mov
scas
pop
insl
mov
xchg
mov
jnp
jns
movsb
in
sbbb
mov
pushl
sbb
jo
in
push
jno
bound
jae
popf
and
jb
fdivrl
mov
mov
lahf
imul
mov
mov
add
xchg
cmp
lea
push
xor
inc
sub
cli
ret
daa
mov
lods
add
jnp
mov
cmp
or
cmp
inc
lock
add
fnstcw
push
mov
insl
insb
mov
mov
loope
ja
dec
mov
ret
lret
xchg
xlat
shll
jl
fisubl
imul
out
xchg
dec
or
push
bound
and
or
and
sub
nop
add
ss
iret
out
test
addl
cltd
cmp
sub
add
imul
aaa
xor
mov
ror
and
mov
ret
outsl
adc
mov
mov
pop
add
cmp
out
jno
int
outsb
in
ljmp
ret
mov
lahf
xchg
outsb
adc
mov
push
push
movl
hlt
int3
or
cmpsb
and
xchg
push
imul
mov
mov
cs
mov
push
ss
push
inc
push
add
roll
popf
dec
xchg
xor
lea
gs
lret
jb
dec
pop
ss
pop
mov
inc
jne
stc
inc
cmp
inc
add
adc
push
in
sti
xchg
xor
cmpsl
rcll
cwtl
and
loop
sahf
or
and
inc
or
xor
test
xor
and
aam
adc
push
sub
js
xchg
aam
mov
jne
xor
dec
xchg
add
and
mov
push
jl
fidivs
aaa
std
jle
jb
adc
push
fstl
jle
cmp
pop
pop
notb
mov
je
mov
jae
aaa
push
fwait
adc
loopne
fldenv
dec
ret
jp
pushf
dec
xor
push
sar
mov
roll
mov
dec
jb
arpl
xchg
loop
push
xor
test
arpl
lahf
test
hlt
cmp
or
outsb
call
divl
ljmp
mov
and
adc
ret
dec
outsl
mov
xchg
sbb
rcrl
insl
jbe
push
fsubrs
gs
xchg
jge
sbb
jge
pop
pop
repz
push
call
rolb
xchg
and
pop
xor
les
sbb
test
mov
push
cmp
bound
jne
fsubrl
mov
gs
loope
test
out
fcomp
adc
xchg
inc
sub
xchg
push
sbb
and
pop
adc
push
test
xor
jnp
cmp
adc
and
push
inc
rcll
dec
cwtl
das
jg
or
and
sbb
pop
inc
clc
aad
sbb
xor
fmuls
jns
push
outsl
test
popa
sub
cmp
loopne
push
sub
or
push
xchg
movsb
cmp
xor
sbb
pop
ja
dec
pop
out
test
mov
cld
inc
pop
lods
mov
shr
cmp
js
shl
ss
test
cmp
inc
mov
xlat
pop
xchg
in
xchg
pop
mov
xchg
inc
in
lock
scas
cmpsl
addb
inc
imul
pop
or
ljmp
jbe
call
das
pop
pop
movsl
adc
inc
popa
sbb
es
dec
add
xor
adc
jne
jmp
iret
repz
xor
js
int3
mov
les
lods
add
les
add
scas
inc
cs
adc
test
notb
vmpsadbw
pop
and
mov
mov
inc
cmp
cmp
rcr
mov
stos
imul
jnp
out
mov
mov
pop
rorl
push
into
inc
arpl
or
push
into
int
jno
ds
mov
xchg
jg
or
xchg
popa
sarb
mov
lcall
std
lret
xchg
and
sbb
cwtl
in
cs
aad
push
or
addl
mov
xor
lods
je
mov
fsubs
jb
loope
inc
mov
mov
dec
cs
lea
mov
mov
adc
imul
sbb
ss
inc
aad
sbb
lock
dec
bswap
aas
rolb
jno
loope
adc
in
hlt
ja
dec
aad
pop
sub
call
adc
add
lcall
stos
mov
push
xchg
pop
mov
dec
mov
stc
or
mov
lods
pushf
or
les
sub
lahf
lods
push
addr16
add
out
and
mov
xchg
ljmp
lea
cltd
lds
in
mov
add
fstpt
test
or
ret
loope
push
gs
lds
sbb
movsl
sarl
push
jns
mov
jmp
jecxz
out
mov
push
pushf
je
pop
adc
addr16
inc
dec
mov
xchg
inc
cmc
jo
pop
xchg
sarl
sarl
aad
ja
dec
inc
dec
push
push
cmp
movsl
mov
lret
out
int
mov
mov
sbb
arpl
xchg
mov
leave
dec
xchg
mov
enter
jl
jp
js
inc
adc
mov
fidivrs
push
push
jp
adc
aad
inc
push
mov
jg
fsubl
lds
push
movsl
bound
negl
mov
add
outsl
mov
sbb
mov
jno
cs
push
dec
inc
xor
shl
aam
cmpsb
cli
lsl
inc
add
mov
clc
or
cmp
test
ss
insw
ss
mov
sub
shll
jle
std
fcos
or
aad
jno
addb
out
repz
pop
into
mov
fwait
mov
rolb
pop
iret
cmp
add
add
xlat
aam
mov
and
cmp
js
jg
out
xchg
int
cltd
shll
push
in
repz
in
mov
repnz
push
and
xchg
xor
mov
add
sbb
movsb
jmp
mov
jno
mov
stc
hlt
pop
insl
test
add
gs
mov
out
mov
scas
fstps
pop
sbb
xchg
mov
enter
aas
jns
int
pop
insl
add
lea
sbb
movsl
lret
sbb
frstor
ret
mov
mov
cwtl
dec
cli
add
mov
sub
lret
jbe
sbb
gs
add
or
add
mov
js
mov
jl
lahf
cli
xor
ljmp
sbb
mov
add
ja
mov
das
sbb
xchg
dec
and
pop
mov
rorl
jnp
or
push
xor
dec
adcb
loopne,pn
sbb
cmp
xor
inc
insb
sti
push
xor
mov
adc
jg
or
js
jns
and
sbb
inc
call
xchg
mulb
in
adcb
cmp
setbe
test
cli
sahf
pushf
repz
xlat
pop
sub
or
xor
xchg
xchg
mov
inc
push
testb
cmpl
movsb
loop
sbb
fwait
in
lahf
ds
cmpsb
mov
pop
loopne
and
popa
adc
andl
mov
mov
outsb
push
dec
stc
imul
lahf
cmp
movsb
inc
sub
mov
dec
xchg
dec
push
xor
xor
scas
sub
scas
jle
push
data16
xchg
sub
mov
sub
mov
xor
xchg
jne
dec
push
dec
mov
mov
vpsubsb
test
xchg
mov
push
pop
inc
popa
dec
pop
push
ljmp
add
scas
decl
mull
lcall
cwtl
xchg
addr16
jno
inc
inc
push
sti
push
pop
insb
dec
fwait
adc
mov
dec
mov
pushf
daa
gs
cmpsb
sub
jmp
sub
sub
jne
loop
mov
xor
mov
imul
ret
pop
das
xchg
xchg
ds
fwait
jae
rorb
scas
jecxz
inc
add
stc
mov
mov
and
sub
mov
jmp
jg
or
frstor
out
cmp
nop
mov
mov
fisubl
sbb
add
xchg
out
fs
mov
xlat
icebp
jbe
or
repnz
loope
js
inc
js
xchg
or
mov
test
mov
lds
sub
mov
inc
add
loop
or
es
inc
inc
sub
les
mov
movsl
pop
fcmovbe
push
adc
or
jl
mov
cmp
push
xor
lods
inc
mov
fstpt
xchg
xor
sbb
fidivs
movsl
les
cli
jno
xor
nop
jae
mov
andl
mov
xor
ret
inc
push
test
or
sub
stos
inc
shrb
rorl
dec
sbb
sbb
mov
fildll
lods
jns
test
sub
xor
sbb
ss
xchg
dec
xchg
push
call
lods
sbb
sbb
test
push
or
imul
mov
cmp
inc
js
mov
popa
sbb
pop
sbb
mov
std
jg
xor
pop
jl
mov
xlat
or
sbb
in
inc
iret
mov
and
pop
pop
popf
hlt
and
cmp
sub
fucom
dec
mov
scas
pop
pop
fnsave
scas
cmova
test
push
mov
inc
jp
and
repnz
or
jp
sub
icebp
jg
les
movsl
sbb
push
push
cmp
push
out
mov
sbb
ret
sub
push
mov
adc
test
inc
xor
xchg
scas
xchg
and
orl
cld
jg
mov
call
in
jnp
jne
jno
mov
inc
daa
daa
dec
loopew
aad
repz
mov
mov
mov
push
popa
test
fs
mov
pop
xchg
lods
pop
xchg
xchg
lret
pop
pop
ret
test
outsb
out
adc
scas
lods
push
mov
lea
popa
mov
dec
lds
xchg
test
mov
jge
movsl
and
adc
lds
daa
lds
popf
adc
and
mov
enter
or
js
jnp
jnp
mov
adc
fdiv
insb
insb
dec
sbb
add
add
xchg
das
into
stos
xor
cmp
call
imul
dec
dec
inc
sub
sarl
mov
jnp
pop
ja
mov
xor
enter
fisttps
lds
pop
mov
dec
cltd
push
push
jns
mulb
addl
lods
sbbb
pop
aaa
add
xchg
mov
lock
shlb
dec
inc
add
call
into
in
xchg
loope
xchg
mov
nop
push
mov
repz
pushf
mov
lret
xchg
pop
arpl
test
jo
add
aaa
lcall
loop
cmpl
fcomps
fadd
push
xlat
lea
jb
add
jb
cli
dec
jmp
and
inc
std
mov
cltd
je
cld
xor
cmp
fwait
js
jbe
shl
stos
dec
sti
adc
test
testb
in
inc
jmp
push
pop
push
and
aas
xor
ljmp
push
cld
xchg
mov
lret
mov
mov
jne
js
stos
out
cltd
rorl
lea
push
dec
mov
ds
mov
push
cwtl
das
pop
sbb
dec
and
outsb
addb
pop
mulb
push
push
and
sbb
nop
inc
xchg
dec
sub
mov
add
push
inc
adc
loope
push
shlb
out
jne
rcrl
sti
pop
and
inc
adc
push
mov
pushf
aad
lretw
iret
sahf
bound
adc
mov
testb
mov
push
push
xor
into
xor
ror
ficoml
jge
cmp
cmc
sbb
jecxz
std
cli
lea
pop
rolb
push
fistl
pushf
das
mov
fwait
and
shll
or
and
and
mov
ret
cmp
pop
enter
mov
enter
imul
add
xorb
lods
mov
fcoml
testb
cmpb
pusha
sahf
inc
das
xchg
xor
sbbb
repnz
adc
roll
push
ret
sbb
dec
stc
mov
popa
sub
push
xchg
pop
in
scas
test
dec
xchg
cmp
jmp
sub
enter
nop
push
sbb
adc
push
in
xor
and
xchg
fadds
ljmp
aaa
movsb
js
push
mov
ret
enter
push
mov
cld
cmp
sub
cs
scas
cmovge
loop
jl
pop
outsb
cmp
and
mov
push
ja
and
cmpsb
xor
cmp
push
or
push
mov
mov
bound
es
mov
push
popf
push
mov
pop
test
push
out
dec
pop
enter
xchg
jecxz
add
inc
fwait
shlb
push
aas
call
and
sub
stc
and
xor
sub
xchg
push
jg
bound
lahf
inc
and
shll
mov
inc
jl
pop
test
out
xchg
xor
pop
sti
pop
mov
dec
movsl
add
pop
idiv
sub
mov
dec
fs
mov
dec
les
loop
dec
jmp
rol
std
mov
mov
adc
xor
mov
xchg
jecxz
loope
movsb
pop
dec
mov
or
add
cld
aaa
loope
dec
mov
mov
inc
sbb
mov
int
mov
dec
jne
lcall
fcmovu
inc
insb
mov
mov
das
orb
dec
dec
leave
dec
lret
bound
movsl
inc
sbb
imul
aas
imul
sbb
arpl
cmp
sub
xlat
in
mov
cmp
scas
add
mov
and
jns
lock
xchg
mov
js
push
mov
lcall
ret
hlt
push
pop
icebp
adc
dec
mov
ss
incb
inc
lret
outsl
pop
decl
pushf
cmp
xchg
scas
cmp
cmp
mov
fwait
call
test
or
fmul
call
push
imul
dec
pop
ror
iret
xchg
shl
rclb
xchg
in
mov
push
lahf
insb
inc
pop
jecxz
mov
mov
aam
inc
fistpll
daa
and
in
outsb
test
es
and
mov
insb
daa
or
out
test
aad
xchg
mov
sti
cmc
fdiv
fdivrs
out
lret
outsb
mov
jb
xchg
and
lahf
repnz
mov
or
lea
push
in
in
add
sub
mov
rclb
in
jns
dec
xchg
sub
adc
mov
pop
cmp
mov
test
sub
fadd
test
push
or
fidivl
cmp
loopne
jne
push
leave
ja
push
and
pop
cs
jne
out
ret
fisubl
sti
arpl
scas
int
out
adcl
aas
pop
cmp
cmp
push
mov
lmsw
std
je
xor
scas
cs
xchg
bound
dec
push
xlat
lahf
xorb
clc
mov
data16
push
imul
dec
jmp
xor
pop
fcomps
pop
sub
shrb
jg
jo
xacquire
sub
mov
dec
xchg
into
push
sarb
xor
int3
jl
sub
ss
and
push
lret
sbb
lock
fwait
insl
dec
cltd
dec
stos
leave
xchg
int
mov
jbe
add
stos
xchg
scas
mov
ret
jnp
xchg
dec
adc
test
or
sbb
xchg
jecxz
mov
pop
mov
push
pushf
out
mov
push
push
es
add
or
test
add
sbb
and
cmpb
push
inc
or
int3
cltd
addr16
scas
ret
or
push
jl
scas
or
xor
push
gs
sbb
mov
mov
jmp
scas
es
ret
test
pusha
jae
xchg
push
ss
pushl
adc
fwait
nop
shl
dec
imul
jle
xorl
mov
xchg
cmp
fidivs
pop
or
loopne
mov
mov
adc
lods
dec
icebp
jae
sbb
cmc
dec
shl
xor
pop
mov
mov
ret
push
or
cs
pop
sbbb
out
cmp
shl
sti
cmp
adc
rclb
roll
or
aam
lcall
dec
test
push
daa
imul
mov
and
subl
and
mov
jbe
out
or
jg
in
pushf
push
mov
rorl
cld
call
sbbl
add
cmpsl
scas
jns
push
jp
push
scas
orl
jg
mov
fst
push
jbe
dec
jle
gs
bound
and
mov
and
ss
jo
insb
add
inc
icebp
mov
pcmpeqb
or
push
fldl
sub
adc
push
add
mov
inc
imul
imul
ds
ja
movl
test
rcrl
jbe
nop
xchg
fildl
loop
arpl
jl
push
xchg
cld
adc
int
lahf
es
or
mov
ljmp
decl
or
fisubl
pushf
push
aas
arpl
test
jecxz
xor
fdivrs
sbb
jae
mov
insl
jb
ret
inc
pop
mov
in
es
inc
aas
jge
and
adc
fisubrl
mov
adc
mov
enter
mov
pop
sub
mov
and
imul
jl
and
clc
cli
sbb
push
or
push
push
scas
mov
jle
jbe
data16
sbb
sbb
sti
fs
pmovmskb
rcl
xor
inc
push
sub
insb
std
mov
add
and
js
je
xor
jne
faddl
jns
sub
into
loop
pop
icebp
inc
stc
xorb
adc
lahf
cld
loopne
jmp
fisubrl
inc
mov
shrd
sub
test
pop
adc
xor
cmpsl
xor
mov
mov
push
xchg
outsl
mov
cmc
aas
adc
sub
mov
lea
xchg
shlb
test
cmp
xchg
jae,pn
fwait
pop
lret
mov
insb
loope,pn
les
rcrl
inc
dec
aaa
xchg
and
xchg
lret
pop
cli
jl
out
loop
dec
out
sbb
and
lret
dec
mov
lahf
adc
jb
mov
andl
add
jmp
mov
jo
adcl
paddb
ds
jge
repnz
and
pminub
and
cli
js
aad
int
pop
test
pusha
movsl
mov
jl
mov
mov
les
adc
mov
aad
sbb
js
push
adc
iret
push
push
and
or
adc
dec
lds
pusha
pop
loop
test
je
adc
or
hlt
iret
arpl
iret
jmp
cmp
push
stos
sub
mov
cmp
pop
pop
loope,pn
stc
fwait
mov
scas
mov
jmp
pop
les
aad
mov
pop
popa
push
fimuls
loopne
repnz
mov
xlat
sti
jae
cs
loop
fisubrl
enter
jecxz
lretw
shl
je
sub
lcall
push
cmp
dec
add
out
cmp
mov
mov
jp
fistpll
pop
rorb
add
sub
cmpsl
sbb
inc
inc
jns
cwtl
xor
pop
les
lea
jecxz
sub
dec
clc
outsl
testl
imull
jecxz
sub
sbb
inc
push
movsb
push
popf
sbb
sahf
mov
pop
in
xor
movsl
push
stc
outsl
divb
push
stos
xchg
jge
jnp
xchg
push
xchg
dec
out
aad
mov
sub
ljmp
xor
xor
pop
pop
lods
out
outsl
jb
daa
js
add
jge
add
xchg
call
jl
ds
mov
in
in
rorb
push
popa
dec
xchg
mov
sub
jns
negl
jl
loop
icebp
and
insb
mov
sub
arpl
ljmp
ds
adc
sub
repz
decb
or
push
adcb
je
jae
sbb
and
or
das
mov
jp
xor
xchg
xlat
mov
lds
xor
add
inc
sub
sbb
icebp
mov
add
maxps
mov
fimuls
push
inc
xor
cmpsl
mov
stc
push
js
push
in
sbb
mov
jb
sub
mov
add
xor
imulb
cmc
pop
cmp
movsb
add
imul
dec
push
pop
test
pop
push
jae
push
in
popa
iret
cs
jmp
add
lahf
jp
mov
sub
jnp
cld
mov
std
nop
pop
pop
dec
icebp
mov
sub
pop
popf
nop
adc
sub
gs
in
and
shll
rolb
mov
into
sahf
mov
xchg
adc
push
sub
xor
xor
sub
mov
xor
dec
push
cld
xacquire
push
popf
or
movsb
ret
xor
outsb
or
testb
mov
rcr
mov
stc
dec
push
test
bnd
lahf
ret
lods
adc
dec
cli
mov
jne
or
sbb
fwait
lods
aaa
add
int3
movsl
iret
pop
lcall
jnp
sahf
pop
scas
mov
cmpsl
int
add
call
jae
inc
sahf
dec
dec
push
jae
jecxz
mov
lret
rcll
mov
fildll
inc
fdiv
and
pushf
loop
jne
jp
es
je
pop
jb
dec
imul
push
pop
and
dec
test
ror
repnz
fimuls
push
sti
mov
stos
inc
ja
dec
outsl
cmp
push
push
pusha
or
loopne
add
pop
fadds
mov
jmp
sbb
pop
mov
imul
add
adc
mov
shr
popa
fincstp
or
fsubl
fisttpl
dec
loope
rcrl
dec
cmp
sub
pop
push
jg
out
add
mov
push
pop
loop
push
insb
adc
int3
jns
hlt
xchg
adc
mov
repnz
rcl
clc
jns
jne
and
adc
insb
sbb
xchg
lret
push
xchg
sub
js
je
and
or
lods
aaa
xchg
fdivl
fisubrs
cmpsb
pop
ja
out
mov
cmp
clc
inc
ret
xor
rorb
jecxz
pop
sbb
hlt
pop
sub
jp
sti
outsb
ret
or
loopne
mov
jecxz
pop
sub
mov
aad
sbb
rclb
pop
scas
in
jb
fcomps
jmp
sarl
in
xchg
clc
cmp
dec
mov
mov
jno
pop
mov
notl
cmp
add
out
mov
push
adc
loopne
and
rcr
xchg
pushf
aaa
push
fs
push
dec
push
lods
xor
push
jg
cmp
mov
nop
outsl
fwait
adc
adc
fisubl
xor
into
mov
lret
movsl
xor
mov
testl
mov
insl
sub
or
and
lret
push
ds
dec
sbb
outsl
push
test
cmp
sub
pop
mov
cmp
mov
ret
cld
data16
mov
or
mov
pop
jb
jecxz
inc
sub
xchg
fcmovnb
xor
sarb
adc
movsl
push
cmp
adc
pop
fistpl
or
fsts
jo
aaa
fmull
xor
mov
sbb
mov
lock
pop
cltd
adc
out
lock
jo
aaa
adc
push
out
xchg
stos
fcmovne
cs
cvtpi2ps
adc
pop
pushf
fsubl
mov
test
mov
cmp
bound
push
js
jp
pop
cmp
pop
push
hlt
or
jg
mov
dec
and
push
mov
mov
inc
lods
nop
lea
lret
jbe
sbb
fsts
xor
mov
inc
jbe
adc
sti
fs
inc
loopne
mov
jbe
clc
mov
pushf
sbb
fcoml
xchg
aas
jl
fldenv
dec
es
fwait
mov
insl
push
add
or
push
aam
outsl
scas
stc
std
int3
jb
call
push
cmc
and
shl
dec
data16
xor
sahf
negb
push
sbb
sbb
sbb
cs
add
imul
push
adcl
mov
nop
jns
jecxz
mov
pop
ret
out
and
imul
dec
add
sbb
dec
das
push
add
mov
push
push
jmp
mov
lret
call
stos
jmp
fs
std
rcrb
dec
arpl
push
pop
addr16
adc
fs
or
jge
pop
ljmp
ret
insl
popa
adc
movl
fwait
mov
fstpt
test
icebp
jmp
loopne
add
jbe
repz
adc
popa
push
loope
imul
cmovbe
or
int
iret
inc
pusha
dec
aam
or
mov
dec
lret
adc
jno
call
lds
imul
pusha
inc
pop
or
push
test
fldt
push
scas
or
iret
mov
pushf
shl
fildll
out
das
in
je
dec
sub
mov
jo
jg
xlat
xorl
fdivrs
add
imul
dec
arpl
jge
cmp
jno
cs
pop
inc
ret
dec
xchg
test
push
add
jge
cltd
inc
bound
or
add
pop
push
mov
sbb
outsl
cld
int3
mov
les
mov
insl
int3
mov
stc
mov
out
movsl
aad
add
cwtl
lods
dec
jo
sti
mov
ja
fs
pop
outsl
and
add
stos
lods
push
jae
pop
pop
sub
lods
mov
push
sti
scas
pop
inc
cmpsb
test
pop
mov
inc
and
xor
repnz
mov
out
sbb
leave
adcl
cmp
inc
pop
in
xor
test
lahf
mov
mov
sbb
in
jg
cli
scas
clc
or
cmc
movsl
xchg
sbb
std
negl
ret
cmpsl
add
test
cld
mov
push
mov
icebp
dec
adc
cmp
lods
sub
sbb
mov
dec
rolb
rolb
xor
add
inc
cltd
mov
mov
movsl
cld
push
jno
icebp
mov
mov
cli
or
lods
mov
and
jne
jno
mov
inc
fwait
lcall
xor
shll
xchg
addr16
cmp
dec
orb
imul
lret
lahf
je
cmp
mov
popa
out
mov
imull
fsubrs
add
rcll
xchg
pop
sbb
inc
xchg
or
test
xchg
rcl
cmpsl
pop
in
lret
xor
dec
sub
lahf
leave
andl
arpl
lds
lds
gs
or
mov
scas
es
stos
int3
jl
mov
xchg
inc
jns
or
inc
jle
push
xchg
jae
fiaddl
pop
xchg
repnz
push
adc
sub
xorl
bound
sti
xor
dec
ss
jns
sub
push
ret
stc
pusha
and
outsb
sbb
sub
lret
xchg
sbb
sbb
dec
fucomip
mov
fisubrl
stc
inc
and
pop
das
lahf
inc
inc
shrb
add
push
ds
push
ljmp
jns
jp
orl
mov
xor
push
clc
int
xchg
in
pop
add
out
iret
cmp
cmc
arpl
mov
outsb
call
dec
scas
enter
insl
cmp
mov
hlt
cmpsl
inc
negb
insb
sub
xor
outsb
addr16
add
data16
fstl
sbb
lcall
ss
push
push
pop
push
mov
into
mov
shrl
sbb
movsl
sub
push
dec
clc
pop
push
mov
push
repnz
out
jns
inc
mov
ret
or
xchg
std
mov
sbb
test
dec
sub
iret
ljmp
data16
cmp
or
add
push
fsubp
cmc
cld
aaa
out
jnp
xlat
sti
faddp
subb
sahf
insb
mov
push
pop
cmp
and
arpl
inc
sbb
sbb
sahf
mov
inc
lcall
mov
xlat
push
loope
sbb
mov
lret
mov
shl
aaa
addr16
out
mov
movsb
out
fstl
xor
cmp
xor
pop
div
pop
out
les
fdivl
inc
pop
sub
dec
inc
add
and
or
adc
dec
aad
ret
sub
mov
roll
dec
xor
sbb
ljmp
sbb
nop
in
jge
pop
add
outsl
lods
inc
xchg
dec
cwtl
mov
and
mov
xor
cld
out
test
or
aad
cwtl
jb
xchg
sti
cld
cmp
lea
cmpsl
lret
pop
addb
int3
in
mov
jae
jmp
enter
mov
scas
adc
sbb
or
mov
dec
lock
ljmp
int3
andb
cwtl
push
mov
inc
fsubrp
mov
cmp
bound
nop
enter
inc
addr16
arpl
adc
mov
lret
daa
dec
adc
pop
mov
pop
scas
filds
hlt
mov
mov
outsb
xor
push
push
pop
lcall
jg
xlat
and
push
loopne
jmp
pop
daa
xor
fsubs
cmpsb
and
in
jmp
add
out
setnp
test
jge
out
ficomps
sbb
cmp
mov
in
scas
stos
jp
pop
sub
shl
cmp
cld
cmp
inc
addb
sub
inc
fsubl
mov
mov
pop
xchg
les
stc
in
mov
xchg
test
xor
mov
jge
xor
js
adc
jne
test
loopne
sbb
nop
cmp
inc
push
loop
fdivrl
mov
jnp
ss
sbb
int3
addr16
ja
mov
sbb
add
add
inc
sub
ret
test
pop
repz
push
imul
icebp
cs
jne
mov
pop
sbb
jmp
pop
dec
jg
add
ljmp
mov
dec
cmp
jge
nop
jle
adc
into
pushw
xor
mov
icebp
mov
jmp
xchg
pop
xchg
mull
inc
add
sarl
sahf
pop
mov
aam
cmpsb
push
mov
mov
nop
push
addr16
loopne
inc
sub
dec
es
sti
adc
jae
adc
dec
jle
jno
mov
sti
sbb
icebp
mov
xchg
gs
jp
dec
fwait
clc
pop
xor
repnz
jmp
push
ja
dec
xlat
push
lods
xor
fistpll
pusha
inc
xchg
stos
sbb
sbb
sub
push
cmc
ljmp
xchg
test
inc
or
jbe
pop
call
add
cmp
sbb
pop
fs
jecxz
inc
pushf
in
pusha
pop
push
cmp
push
sbb
mov
sbb
loop
sub
xchg
jnp
push
add
mov
cltd
mov
fdivrs
mov
shll
xchg
lock
popa
sub
sti
loop
dec
fwait
aad
dec
icebp
mov
cld
arpl
pop
xchg
int
jecxz
dec
mov
in
scas
out
setge
icebp
test
and
cmp
add
sbb
pop
sub
cmp
daa
mov
add
in
lock
sti
pop
jg
jle
push
mov
cltd
jge
mov
fidivrl
out
sub
mov
rorl
fcompl
pop
cmp
into
icebp
test
test
lret
aam
xor
test
adc
mov
jb
push
jmp
in
imul
imul
and
out
mov
movsb
sub
inc
mov
stos
add
push
rcr
inc
loopne
adc
push
pop
adcb
adc
js
aas
dec
popl
popa
pushf
xor
push
ja
mov
mov
leave
add
les
xlat
mov
shrl
inc
mov
incl
out
jmp
xchg
pop
pop
cli
pop
xchg
xor
cmpsl
mov
push
mov
pop
xor
add
jl
inc
ss
xchg
cltd
sbb
daa
mov
sbb
cltd
push
jl
test
insb
loopne
dec
xor
xor
xchg
xchg
aas
mov
int3
pop
mov
popa
fisttpl
jle
popa
mov
push
je
jle
fists
in
and
adc
clc
push
xorl
or
xor
outsb
adc
cmp
push
enter
pop
sbb
nop
cmpsl
sub
pop
push
mov
pop
addb
jmp
out
incb
dec
div
loop
cmp
scas
in
add
push
inc
flds
mov
fadds
mov
sub
lahf
aaa
out
jbe
stc
rcl
pop
xor
or
test
gs
cmp
mov
jg
xchg
mov
mov
pop
lds
xchg
xor
sub
jl
mov
mov
mov
xlat
lea
dec
pop
mov
imul
cmp
and
xor
cmpsb
test
addl
rcrl
arpl
cmc
add
enter
inc
jb
lret
push
add
mov
and
orb
into
sbb
mov
js
xor
cltd
dec
mov
or
mov
repz
lret
arpl
mov
stos
dec
inc
xlat
add
pop
xchg
mov
xor
and
ljmp
orl
mov
or
fsts
adc
aad
stc
clc
loope
daa
push
stc
xorl
addl
mov
sub
outsl
jns
mov
data16
xchg
stc
daa
pusha
inc
xchg
out
sub
adc
icebp
imul
loopne
cmp
cmp
xlat
dec
hlt
or
mov
cmc
mov
inc
mov
xor
call
pop
imul
mov
shll
btc
mov
cmpl
adc
cmp
jnp
xchg
cmp
dec
mov
std
mov
or
daa
mov
inc
push
xlat
jo
sahf
addr16
mov
cmpsl
jo
xchg
cmp
cmp
pop
and
test
clc
inc
test
xor
xor
adc
orb
lcall
stc
loope
dec
lock
jo
addr16
xlat
xchg
loop
xor
cmp
mov
add
xchg
dec
mov
mov
sbb
inc
data16
cltd
mov
dec
fsubrs
xor
pop
out
pop
int3
clc
sbb
in
ss
and
stc
es
jae
scas
jp
icebp
mov
jge
cmp
shr
lock
dec
push
cli
pop
test
xor
frstor
mov
pop
xchg
outsb
jecxz
inc
in
insl
or
inc
pop
add
inc
mov
add
cmp
mov
movsb
stos
jecxz
sub
cmp
aam
cmp
sub
cli
xchg
in
imul
gs
push
loop
jbe
cmpsl
cmpsb
adc
inc
ja
mov
mov
ror
xchg
shl
dec
add
xor
xchg
push
jns
movb
arpl
es
ja
addb
into
out
lock
rcrb
adc
int
xor
in
xor
cwtl
xchg
cs
pop
ret
push
test
movsl
mov
sub
dec
in
xchg
outsl
cltd
scas
scas
mov
dec
int3
sub
ret
fisttps
and
mov
dec
test
cmc
sbbb
xchg
in
mov
jl
arpl
lret
dec
test
dec
cltd
dec
lcall
sub
add
leave
mov
ret
adc
push
add
inc
jmp
sub
or
sub
loop,pn
test
push
push
add
xchg
mov
imul
test
jne
mov
jge
xchg
and
jecxz
addr16
stc
aad
pop
push
js
jns
lods
iret
cmpsb
mov
ficompl
xor
inc
lock
dec
push
cmpb
xchg
les
fildl
scas
scas
xor
ds
push
pop
mov
lock
xchg
in
nop
and
adc
xor
fdiv
in
cmp
mov
adc
pop
out
divl
cli
push
fs
loope
stos
mov
sub
loop
add
incl
add
fidivrl
shlb
ds
mov
mov
out
movsl
mov
xlat
fiaddl
lods
mov
popa
mov
fs
push
mov
ret
and
mov
fistpll
shlb
mov
jl
inc
ret
dec
nop
ja
int3
adc
stos
int
sub
ljmp
aam
fimull
sbb
pop
sbb
inc
ret
fidivrs
ja
sub
mov
cmp
imull
cltd
fwait
loop
notl
push
loope
nop
movsb
sbb
jge
push
jo
call
je
cmp
mov
ljmp
mov
hlt
pop
xchg
and
out
adc
xlat
pop
sbb
add
lcall
sub
mov
int
sub
xor
mov
or
iret
loope
in
stos
cli
push
pop
sub
or
dec
adcl
mov
push
cld
ss
xchg
and
call
in
sbb
and
outsb
rorb
lcall
fsubr
movsb
jno
adcb
mov
add
add
in
dec
sub
mov
outsb
flds
jmp
adc
mov
adc
add
testl
jp
inc
cmpl
test
mov
cmp
and
adc
inc
adc
pop
in
jge
jo
stos
sbb
loopne
cli
rclb
pushf
mov
outsb
lea
lods
mov
push
push
pop
cmp
mov
jnp
cltd
xchg
insb
mov
xor
nop/reserved
xchg
in
push
mov
out
jge
aad
and
in
lea
add
dec
pusha
clc
stc
test
stos
stc
std
mov
sub
xchg
fimull
lcall
xor
iret
mov
lcall
add
sar
cmp
and
and
mov
movsb
pop
push
adc
add
frstor
pop
in
aas
call
xchg
incb
aaa
jne
ss
in
adc
add
push
xor
fninit
pushf
inc
lcall
icebp
repnz
les
sbb
sub
dec
in
jnp
xor
lds
add
pop
cmp
xchg
gs
ret
mov
cmpsb
pop
lcall
jmp
fcomps
add
sbb
rolb
es
mov
lods
dec
cmpsb
mov
lahf
outsb
inc
xchg
mov
add
mov
negl
inc
push
add
fwait
mov
jne
and
xor
add
mov
gs
mov
scas
mov
jge
js
pop
jp
and
shrb
scas
push
decb
bound
repz
rorb
lock
adc
inc
xchg
add
stos
rcll
cmc
aaa
call
sbb
mov
jg
cmpsl
cs
add
mov
sub
leave
fstl
mov
stos
and
gs
push
push
xchg
test
pop
out
pop
ret
xor
or
lret
mov
sbb
lret
inc
sar
cli
and
jecxz
mov
inc
sub
fldt
mov
jno
loope
lea
add
imul
sbb
jbe
mov
xchg
shrl
xor
xlat
jecxz
pusha
ds
fsub
mov
lret
xor
lods
pop
lods
push
inc
inc
pop
insl
rcll
in
mov
xchg
ja
insl
mov
cltd
xchg
push
pushf
add
outsb
jmp
call
add
xchg
sbb
fnstsw
jp
insb
jno
aas
imul
mov
xor
mov
ds
xchg
stos
fs
cwtl
aad
int3
dec
stos
and
aas
cmp
mov
outsl
add
adc
xchg
lods
sub
and
jns
lods
add
fldl
fistps
push
gs
and
fisubl
xchg
mov
pop
xchg
inc
sub
xor
divb
xchg
pop
pusha
mov
xlat
lahf
jmp
sti
push
push
sbb
nop
sub
xchg
sbb
cltd
rolb
imul
paddsb
int3
adc
fsubp
arpl
mov
xor
adc
cmp
or
mov
xor
add
hlt
xchg
bound
stc
or
mov
mov
in
mov
jbe
mov
das
popa
pop
jmp
dec
xor
movsl
pop
ss
imul
cld
in
sbb
aaa
mov
jns
xor
scas
xchg
ljmp
mov
call
insl
sbb
dec
xor
sbb
pop
mov
ds
cld
or
inc
jp
loope
lock
inc
jmp
arpl
add
dec
mov
push
cmp
inc
adcl
xor
rcl
and
enter
mov
cmc
mov
mov
push
sub
add
insb
jmp
mov
jmp
jge
pusha
hlt
divb
aas
stc
dec
dec
cmpsl
xchg
pop
fcomps
jo
xor
adc
mov
adc
adc
stos
shrb
ror
xchg
loop
sahf
outsb
adc
pop
adc
lock
test
dec
mov
pop
fsubs
push
push
cmp
lods
sbb
mov
fbstp
adc
sti
mov
negb
jecxz
in
clc
push
inc
mov
push
int
jbe
mov
shll
push
insl
daa
les
pop
aaa
das
dec
iret
adc
mov
push
fld
mov
subl
leave
sub
ror
add
mov
sub
lahf
insl
shlb
fldenv
jno
dec
lods
mov
jge
sub
jnp
popa
inc
pushf
loopne
leave
test
lea
subl
les
aam
imul
in
shlb
sub
adc
fdivs
lret
inc
stos
leave
ds
jecxz
fcoml
jmp
jae
dec
daa
js
xor
popf
cli
mov
sbb
jae
inc
add
lds
sbb
les
and
adc
pop
sbb
adc
xor
add
bts
fdivl
mov
cmp
mov
xlat
insl
dec
xor
lock
clc
fsubs
sub
xchg
movsb
scas
xchg
nop
push
nop
daa
xor
or
ret
mov
sarl
nop
not
pushf
jo
push
mov
sbb
jmp
dec
clc
fpatan
dec
stc
add
jp
xchg
dec
loope
pop
mov
loopne
push
inc
adc
cmp
cmp
push
sbb
cmp
mov
sbb
jo
shlb
out
push
or
and
xor
jecxz
add
lea
or
imul
adcl
out
nop
lcall
or
out
push
cld
xchg
add
loopne
pop
in
mov
jg
sbb
repz
sub
cmpsb
xor
insb
mov
xor
mov
xorb
lods
aaa
dec
jl
inc
inc
aad
divb
test
ds
movsb
rol
xor
mov
lea
inc
fists
cmp
adc
cwtl
ss
loop
mov
sub
shlb
xor
pusha
push
int3
adc
fs
adc
mov
sahf
inc
pop
push
pop
leave
pop
rcll
ja
mov
aas
popf
jbe
pop
xor
inc
cmpsb
pop
inc
rcrl
jge
shr
loop
frstor
or
xor
adc
mov
xchg
jnp
stos
cmpsb
inc
push
inc
inc
sub
in
adc
mov
decl
sbb
lods
fs
std
jp
adc
dec
lods
inc
in
movsb
pop
pop
std
repz
js
and
xchg
jg
adc
shlb
test
out
sub
and
dec
loop
mov
test
jg
xchg
pop
js
dec
xchg
mov
push
cltd
mov
lahf
pop
imul
or
adc
cmp
ljmp
jecxz
mov
mov
xor
or
ja
popf
mov
inc
leave
adc
mov
cld
ret
add
xchg
inc
pop
or
cld
inc
dec
in
cmpsb
push
sbbb
negl
adc
inc
popa
mov
cld
lret
test
push
mov
mov
cli
sbb
sbb
inc
insl
call
mov
movb
xor
mov
jecxz
repnz
in
pop
ficoms
cld
mov
fnstenv
loope
and
gs
loopne
adc
out
mov
es
mov
pop
or
divb
mov
aad
jae
lret
xor
mov
xchg
imul
push
add
out
lock
ds
je
cld
xor
sbb
movsb
cmp
jge
mov
lahf
bound
lods
js
or
inc
and
sub
cltd
pop
adc
and
popa
rorb
cwtl
push
and
add
jae
lods
mov
call
mov
stos
je
out
cltd
lret
subl
push
cmp
setnp
and
js
das
outsb
xchg
jbe
iret
iret
xchg
loop
subb
stos
xchg
popf
scas
call
pop
lods
inc
roll
xchg
out
out
inc
cli
and
ret
shll
mov
add
rcr
push
mov
or
jb
or
add
outsl
cwtl
push
fstpt
shlb
sub
push
push
pop
orb
lret
popf
xor
lretw
jmp
cltd
call
dec
mov
jmp
jg
jns
and
mov
lahf
sarb
xchg
xchg
xor
pop
sbb
out
nop
fcomp
aam
push
sub
jno
pop
sbb
fdivrp
adcl
daa
mov
call
mov
cmc
into
dec
jnp
ljmp
xchg
mov
out
mov
call
bound
adcl
or
scas
mov
mov
xchg
fbstp
aas
cmp
divl
pop
in
roll
pop
push
cwtl
sbb
div
push
sahf
cld
out
push
rcrb
orb
pop
pop
xor
cmp
test
imul
inc
push
or
sbb
sti
imul
out
add
inc
add
adc
loopne
jmp
adc
ret
fcmovbe
add
mov
push
sub
stos
cmp
jecxz
and
mov
pusha
add
aad
or
popf
adcl
adc
fnstsw
clc
jg
jg
xchg
out
inc
push
es
es
stc
jnp
int
in
js
sbb
add
cld
sarb
lds
stos
jg
test
iret
rol
notl
pop
bound
xchg
cmp
ja
mov
js
icebp
cli
push
xor
cltd
push
mov
insl
jp
and
sub
jg
mov
scas
icebp
les
mov
js
sbb
call
shr
mov
fcompl
add
sbb
mov
scas
fiaddl
in
sbb
and
sbb
fs
popa
push
xor
xchg
in
push
xchg
adc
inc
sbb
lahf
pop
and
ja
jns
clc
aam
mov
and
dec
xchg
sub
leave
sti
lret
cmp
loop
mov
pop
sub
imul
pop
lahf
rcrb
pop
daa
fidivs
leave
mov
jb
mov
xchg
daa
inc
lret
mov
add
daa
popf
or
pop
pop
add
data16
dec
cmp
rclb
add
enter
adc
rolb
jecxz
nop
mov
bnd
or
and
iret
push
scas
iret
lret
add
cltd
push
mov
mov
scas
jecxz
pop
roll
dec
cltd
jo
imul
xchg
dec
dec
ret
inc
pushf
aas
mov
pop
cmp
aaa
jnp
sbb
aaa
icebp
in
aaa
subl
js
ret
into
test
and
push
lcall
fstl
repnz
pop
pushf
dec
movsb
push
sub
or
push
add
fwait
dec
pop
mov
pop
or
cmpsl
out
xor
cmpxchg8b
mov
lahf
xor
stos
sti
mov
xchg
les
mov
insl
pop
push
int3
xchg
jge
sti
mov
and
jns
xor
xor
push
mov
inc
leave
test
mov
es
sbb
dec
mov
fstpl
pop
pop
sbb
ficoml
jbe
adc
cmc
and
mov
adc
ss
gs
jo
stos
sbb
aad
mov
xchg
rorl
dec
lcall
xor
sub
test
lds
push
push
cmp
mov
jge
push
cwtl
sti
cmp
and
sti
add
jle
sbb
mov
sub
pop
mov
jno
stos
sbb
fidivrs
iret
cs
pop
aas
loopne
cmp
neg
fmull
arpl
push
jb
in
cltd
push
add
adc
push
push
les
aas
xchg
mov
insb
fcomi
cmpsb
pop
sub
jl
xchg
shll
add
xchg
shlb
jno
js
stc
cmp
iret
mov
adc
jae
frstor
iret
movsl
xchg
mov
icebp
pop
mov
loope
stos
jp
ja
mov
gs
add
and
mov
ds
sbb
shll
sub
cmp
imul
je
mov
or
scas
adcb
inc
xor
xchg
mov
xlat
adcb
hlt
fs
arpl
sbb
cmp
sub
push
outsb
bound
xor
subl
cli
xchg
mov
imul
cmp
leave
adc
mov
lret
mov
add
inc
xchg
xor
mov
mov
test
adc
sbb
mov
adc
lea
pop
adc
jns
ljmp
andb
sbb
vblendvpd
call
sub
jo
xchg
gs
mul
and
ljmp
out
inc
fnstsw
xor
ja
pop
stc
inc
pop
fidivl
ds
divb
in
scas
add
xchg
es
lahf
and
jae
fcoml
xor
ja
orl
push
mov
out
lds
addr16
out
jne
cmpsl
iret
scas
push
aad
mov
outsl
mov
push
xchg
jecxz
addr16
lret
mov
decb
lret
arpl
mov
push
lcall
add
or
icebp
aaa
or
xchg
push
add
lods
movsb
mov
ret
dec
repnz
inc
add
jns
inc
pop
mov
repz
push
dec
mov
xchg
fiaddl
cld
push
mov
mov
in
cmc
pop
or
mov
cmpsl
cmp
cmp
loopne
mov
shl
repz
out
add
or
dec
adc
jnp
cmc
rcrl
inc
or
nop
out
sarb
inc
repnz
adc
mov
rorl
cmp
push
mov
out
insb
inc
aam
sbb
pop
dec
out
push
push
lock
pop
out
jns
out
addb
mov
mov
cmp
mov
xchg
and
push
daa
jg
lahf
ficompl
mov
push
mov
lret
test
dec
xchg
xchg
aam
inc
int3
push
adc
test
xor
inc
inc
ja
dec
syscall
push
nop
pusha
pop
test
test
mov
mov
push
adc
loop
arpl
and
insl
icebp
test
stos
cwtl
push
loope
or
or
std
lahf
xor
xchg
push
lods
or
clc
jae
push
jl
sbb
or
xor
out
pop
xor
mov
shr
or
sub
idivb
xor
shlb
push
lock
and
stc
gs
mov
lds
push
in
adc
push
sub
jle
rorb
lea
jae
pop
xchg
ss
sbb
fs
pop
aad
push
lock
scas
or
movsb
mov
push
cli
jle
ret
pushf
les
mull
into
outsb
push
sub
andps
ficoml
sub
shll
xchg
mov
dec
mov
mov
or
gs
ja
jmp
shlb
xchg
insl
sahf
popf
mov
and
sahf
jecxz
mov
push
mov
scas
out
test
push
ss
es
xchg
int3
jmp
arpl
lods
pop
xor
jne
mov
lods
ret
push
cmp
call
enter
adc
outsl
add
sbb
jno
outsl
mov
in
pop
mov
mov
fistl
mov
hlt
xchg
add
iret
push
mov
sbb
mov
jae
pop
daa
dec
xor
xchg
mov
icebp
ljmp
in
js
mov
fistps
lret
rclb
mov
xchg
or
loope
jmp
loopne
cwtl
cwtl
push
in
push
pop
shr
ffree
xchg
in
push
loopne
xchg
xor
mov
xor
jp
out
xchg
int3
cltd
stc
dec
add
xchg
pop
sbb
xchg
or
sub
mov
xchg
sahf
adc
movsb
sub
scas
aad
dec
adc
push
cli
jecxz
mov
sbb
inc
sub
pop
ljmp
stc
xor
pop
es
neg
scas
pop
add
popf
mov
lahf
xchg
lods
cmp
pop
pop
xchg
movsb
shrb
lods
sbb
sub
sbb
std
aam
psubq
mov
adc
xchg
loope
in
lock
fdivrp
mov
mov
movsb
out
push
cmp
mov
add
dec
in
mov
adc
test
adc
mov
fisubrl
mov
insl
dec
lret
and
cld
add
push
mov
shrl
cmp
xlat
fisttps
dec
pop
repnz
xchg
or
jns
mov
leave
mov
jno
out
sbb
movsb
dec
lahf
adc
cmp
test
xchg
adc
test
and
xchg
xchg
dec
mov
push
inc
sti
shll
mov
ds
call
cld
pop
cmp
push
enter
hlt
inc
add
xchg
sbb
mov
inc
and
mov
repz
push
xchg
repnz
pop
jnp
mov
jb
sub
roll
sub
repz
dec
shl
insl
sub
fsubr
xor
sub
rorl
xor
lahf
lods
mov
cmp
xor
pop
cmp
fcmovbe
push
lea
rorb
dec
cmp
dec
xor
jmp
adc
xor
xchg
pop
jno
dec
xor
pop
cmp
aaa
xchg
stos
mov
jmp
push
cmpsl
pop
xchg
fld
je
test
mov
xchg
ljmp
jle
mov
call
add
jb
xor
stos
pop
and
sub
jg,pn
cmp
shrb
jmp
mov
jmp
xchg
dec
mov
push
mov
and
movsb
repz
xchg
andl
sub
test
adc
and
xlat
push
gs
sub
pop
mov
mov
mov
into
mov
sti
loopne
idivl
movsl
ss
icebp
and
shr
inc
or
lret
pop
ljmp
xchg
sahf
xor
pop
xlat
jg
aaa
inc
lods
jno
stc
xchg
rol
cvtps2pd
mov
mov
push
aas
out
sahf
test
mov
shll
xor
and
das
int
int
mov
popf
or
bound
pop
lods
push
mov
cwtl
test
into
ret
test
dec
dec
xchg
add
jl
je
les
loope
outsl
mov
sub
je
mov
sbbl
add
mov
xor
jns
gs
leave
pop
jne
movsl
dec
jmp
xor
jl
mov
icebp
mov
aam
or
mov
out
jb
sbb
sbb
jecxz
push
xchg
mov
das
jge
and
stos
mov
cmp
mov
mov
pop
push
loope
xchg
lock
and
lahf
mov
sti
xor
sahf
jbe
cli
and
adc
push
jle
shll
push
mov
xchg
sbb
sub
jno
imul
ret
lcall
aad
add
pop
sub
or
dec
jnp
scas
and
imull
jp
insl
inc
inc
mov
mulb
fdivrl
jb
clc
and
fldenv
mov
repz
lds
jge
arpl
adc
pop
lods
sarl
adc
rcrb
add
push
jno
sub
lock
shlb
int
imul
pop
adc
jbe
aad
adc
enter
out
mov
nop
jg
nop
lods
xchg
fimuls
in
sub
loop
mov
mov
test
add
cs
sub
adc
pop
inc
jns
mov
cltd
out
scas
mov
mull
pop
ret
sahf
sbb
je
and
test
pop
push
cs
pusha
les
adc
in
ljmp
pop
and
sub
fnsave
and
cwtl
or
jl
cmp
inc
imul
movsl
ss
inc
and
mov
in
mov
and
les
push
movsl
repnz
sbb
pop
les
pop
adcb
stos
jl
xor
xchg
mov
xchg
sub
push
adc
outsb
addr16
stc
add
inc
int3
cld
pop
fisttpl
xchg
jbe
fcmovb
mov
lea
popa
pop
mov
dec
mov
rol
xchg
jbe
mov
jb
dec
testb
jb,pn
mov
jge
data16
inc
sbb
insl
insb
aad
sub
pop
fstpt
sbb
rolb
and
shl
dec
mov
inc
lret
cwtl
ret
rcr
into
jae
sbb
in
mov
nop
inc
jae
or
pop
out
push
outsl
add
or
add
cmp
bound
gs
lahf
test
sahf
push
pop
sbb
jg
sub
xor
shll
into
bound
mov
sub
pop
push
lret
xchg
clc
xor
dec
inc
int
in
loope
dec
push
jecxz
clc
push
or
or
sub
xchg
add
mov
in
out
add
xor
mov
mov
stc
lock
inc
pop
xor
sub
jmp
xchg
inc
push
mov
cmp
push
repnz
popf
mov
pop
cmp
enter
pop
sub
inc
out
inc
sbb
outsb
sbb
loop
loopne
mov
shl
ljmp
test
les
xlat
mov
and
adc
xchg
stc
lea
stc
pop
mov
or
int3
out
and
mov
cmp
push
jp
inc
lea
jle
data16
insb
push
adc
mov
fnstcw
mov
jecxz
and
add
out
mov
add
dec
push
push
xchg
jo
clc
mov
and
test
push
insb
mov
mov
sub
jmp
test
test
js
sub
fs
filds
clc
inc
in
insb
les
adc
repz
decl
sbb
cs
jl
mov
mov
add
bound
dec
push
inc
adc
sbb
lock
add
ja
ret
jns
clc
mov
xorb
sub
mov
dec
pop
in
cmp
pop
ds
adc
insb
shrb
jle
aam
adc
data16
adc
movsl
cld
int3
out
adc
pop
add
scas
mov
xchg
pop
dec
dec
and
cs
loop
loop
ja
dec
jbe
aaa
aam
fs
xchg
push
pop
test
mov
test
adc
js
cmpsl
jo
mov
xchg
pavgw
xchg
xor
not
pop
jl
pop
push
fbld
fsts
xchg
test
in
push
adc
hlt
out
xor
xor
lds
dec
loope
out
xor
out
push
sbb
and
xchg
je
push
daa
js
out
sbb
cmp
call
rclb
ljmp
fdivl
fstl
or
mov
sub
je
into
xor
sub
lods
mov
aas
inc
ret
dec
sbb
bound
in
mov
mov
sub
sub
pop
shl
xchg
enter
xor
inc
gs
xor
mov
lret
lods
int
mov
mov
mov
push
cmp
iret
fiadds
fstps
xor
cmp
and
leave
inc
pop
jno
daa
leave
and
or
push
fnstenv
mov
jne
adc
scas
ja
mov
scas
sbb
stos
test
cwtl
jae
sahf
js
jbe
testl
shlb
lds
outsb
xorl
mov
sbb
lcall
movsb
mov
xchg
mov
adc
clc
ret
pop
test
test
lock
dec
pop
dec
std
mov
push
addr16
lahf
mov
jne
xor
mov
sub
push
out
add
inc
xchg
dec
data16
int
mov
out
fs
xchg
cmc
outsb
xor
cli
ja
gs
icebp
xlat
aad
mov
sub
sbb
push
jmp
push
push
bound
shrb
sub
mov
xlat
jecxz
xchg
repz
pop
das
mov
sub
popa
mov
mov
in
xor
insl
push
inc
cltd
jb
xor
pop
fstpt
into
scas
rcll
aam
mov
frstor
hlt
mov
scas
daa
clc
aas
mov
sbb
ss
addr16
xor
push
jns
test
adc
push
mov
pop
test
xlat
insb
add
adc
insl
test
ja
inc
jbe
mov
xchg
xchg
cmp
lahf
jb
dec
xchg
cmpsl
or
or
dec
int3
aad
pop
pop
andl
out
mov
aas
fstpl
arpl
orb
in
jmp
mov
loop
jb
icebp
andb
cli
mov
fcompl
xchg
out
sub
cmp
daa
or
cmp
pavgw
push
push
jp
fs
pop
mov
pop
sub
test
andb
dec
or
test
mov
xchg
ret
lcall
sbb
cmpl
call
push
inc
jb
jne
lds
addr16
aam
lcall
xchg
aas
and
imul
inc
push
into
out
pop
jmp
sti
fs
mov
aam
imul
stos
jne
aaa
cmc
mov
cltd
xor
jb
sbb
test
sub
or
xchg
neg
lods
stos
test
fwait
stc
insb
clc
inc
fwait
mov
int
push
mov
jbe
cmp
gs
pop
nop
fwait
iret
dec
push
mov
inc
jp
mul
lds
adc
jnp
rcrb
or
adc
es
sbb
add
jne
mov
jmp
push
push
or
adc
jnp
insl
cmp
mov
mov
fs
popf
into
pop
or
pop
int
imul
dec
inc
push
push
inc
ficomps
in
push
lea
fs
sahf
xor
sub
test
xchg
mov
in
and
dec
add
mov
aas
xor
fwait
inc
cmp
mov
addb
mov
fidivl
mov
adc
movb
inc
xlat
mov
dec
jmp
aas
pop
push
or
adc
xchg
dec
mov
add
pop
pop
aam
and
imul
fistpll
xchg
or
or
push
aad
mov
dec
insb
jae
mov
scas
xchg
mov
sti
cmp
outsl
xor
or
shll
xor
inc
dec
fdivs
sbbb
sub
adc
add
cmp
jae
fwait
imul
roll
lods
out
pop
inc
lret
add
pop
icebp
popl
inc
dec
sbb
aad
jecxz
or
and
sbb
rcrl
bound
pop
add
std
test
dec
out
std
and
push
ret
mov
call
mov
sub
mov
cmp
ljmp
adcl
adc
mov
pop
jns
mov
data16
cmpsl
decb
lret
nop
pop
mov
inc
and
or
mov
fmull
push
or
pop
ja
outsl
and
pop
mov
adc
in
xchg
leave
sbb
push
repnz
cmp
icebp
jb
pop
lock
out
xchg
outsl
iret
mov
jmp
nop
fidivl
push
je
inc
jns
insl
inc
sbbl
mov
inc
sbb
std
dec
mov
sbb
mov
and
or
in
ja
xchg
inc
xor
call
or
es
adc
or
pop
and
or
push
popa
mov
pusha
mov
imul
pop
sub
aam
shrb
adc
flds
push
jno
lret
adc
imul
push
pop
cmp
adc
fucom
push
xlat
lret
xchg
xchg
mov
add
cmpsl
out
push
dec
mov
mov
fs
push
mov
push
xchg
cltd
pop
xor
cmc
imul
and
movsb
je
incb
cmpb
mov
add
push
or
inc
mov
out
inc
mov
push
lods
test
push
sub
pop
test
jne
rclb
repnz
add
sar
adc
fldt
inc
mov
pop
jg
and
lods
mov
mov
mov
xor
add
add
insl
aad
mov
inc
dec
mov
sbb
sub
gs
xchg
mov
inc
push
jb
sub
mov
cmp
outsl
aas
ret
psubq
xor
mov
rcr
int
mov
mov
sub
sub
inc
dec
mov
shll
inc
jle
es
outsl
mov
jae
outsl
lds
pop
sub
and
jge
pop
sbb
in
ja
js,pt
add
mov
xchg
ss
aaa
mov
outsl
aad
jle
in
jle
cli
mov
mov
movsb
push
ror
xchg
xorl
or
loope
or
nop
push
mov
pop
lds
scas
loopne
data16
bnd
sbbb
gs
scas
js
aam
cli
sub
negb
aad
add
fdivr
sbbb
iret
clc
sbb
xor
bound
scas
insb
xor
add
cwtl
mov
fisttps
xchg
jb
sahf
nop
jl
sub
xchg
push
adc
mov
inc
xchg
lock
xchg
jp
add
mov
adc
outsb
cwtl
rorl
mov
adc
mov
andb
cmp
xor
repz
bound
inc
subb
mov
shlb
out
sbb
cmp
lret
sahf
ret
int
fisttps
hlt
cmp
outsl
sub
push
mov
mov
addb
dec
mov
fnsave
movsb
xlat
and
pop
xlat
xchg
inc
lods
imul
cs
fcomps
pop
sti
mov
out
out
pop
inc
imul
jl
jne
push
push
cmp
pop
dec
daa
inc
stos
ds
int
jmp
mov
xor
pop
cmp
jb
push
mov
inc
sbb
mov
cmp
dec
ds
mov
and
mov
push
mov
loopne
fldl
jecxz
in
fildl
inc
mov
sahf
or
mov
push
xor
popf
shr
aas
add
xchg
jl
fwait
mov
les
out
rolb
add
repz
outsl
cmp
test
je
cltd
or
cmp
cmp
popa
imul
xchg
into
sahf
negb
ret
push
sub
imul
cmp
outsl
push
cld
jge
inc
pusha
movsb
int
inc
clc
adc
andb
gs
fldenv
call
adc
inc
jp
shrb
loope
decb
xchg
lahf
dec
out
push
dec
xor
mov
xor
xor
out
adc
int3
test
push
xchg
jae
sarb
addl
jg
movsl
push
notb
lock
sbb
lret
jo
xor
ret
push
cmc
out
add
adcl
addb
jnp
mov
push
int
xchg
je
xor
mov
sbb
std
add
in
and
adc
clc
jae
jle
cli
fmuls
out
ficomps
fidivs
stc
xor
jbe
xor
push
pop
mov
pop
push
pop
dec
int
jg
xcrypt-cfb
cmpsl
pusha
adc
int
insb
ror
loope
shlb
and
ja
movsb
jecxz
pop
out
data16
sbb
inc
iret
push
mov
jb
or
adc
sbb
dec
sarb
adc
push
dec
xor
ret
mov
sub
loopne
mov
in
jns
or
enter
xor
mov
xchg
in
out
jo
sub
push
test
sti
scas
shrb
cli
mov
xchg
or
popa
js
pusha
stc
popf
lods
mov
jle
jecxz
xchg
and
mov
pop
mov
lds
cld
out
mov
ret
jmp
pop
mov
and
dec
push
mov
mov
sbb
inc
lods
scas
data16
jg
and
in
gs
leave
or
scas
movsl
cs
cmp
loopne
xchg
dec
aas
cmp
ds
mov
rcr
mov
push
pop
sub
shl
outsl
adc
test
cli
je
daa
mov
inc
adc
mov
xchg
cmc
mov
movsb
sbb
out
out
outsb
sub
jecxz
pusha
and
cwtl
shrl
add
sbb
adc
add
or
inc
cmp
imul
clc
push
nop
aas
idivl
mov
mov
loopne
cmpsb
inc
sarl
push
adc
cmp
pop
or
andb
cmc
push
xlat
add
aad
mov
cmp
cmp
and
and
sbb
cmp
sbb
mov
test
bound
sbb
lods
add
sbb
add
out
scas
jmp
fwait
lret
pop
call
and
inc
out
fdivrl
out
and
dec
and
test
sbb
lea
adc
inc
pop
cs
push
fnstsw
inc
pop
orl
xchg
inc
inc
das
out
cs
insl
mov
pop
mov
lcall
test
xor
xchg
sti
fiaddl
in
jmp
xchg
mov
push
pop
leave
mov
adc
int
push
rcl
or
movzbl
add
rcrl
inc
lcall
cmp
and
sarl
aam
jge
lods
iret
test
pop
ficomps
cltd
cmp
sbb
lods
jp
aas
mov
pop
enter
mov
andl
sbb
outsl
cmp
sbbb
cltd
aad
mov
out
shll
popa
and
inc
aad
jo
sub
enter
out
xchg
adc
sbb
loop
push
out
repz
mov
jno
inc
inc
pop
dec
add
dec
lods
jp
or
int
sub
jg
inc
flds
add
jo
jle
stc
push
pop
inc
rorl
aas
xchg
sbb
jno
add
fadds
out
add
mov
jle
mov
add
sti
jmp
and
lret
out
hlt
das
sbb
adc
push
xchg
jne
lods
in
jbe
sbb
mov
add
filds
mov
xchg
sub
movups
in
dec
jg
xorl
jo
push
mov
outsb
cmpb
jne
fildll
mov
dec
int
ja
mov
push
popa
jg
xchg
sub
xlat
xor
pop
mov
jns
call
sub
cli
outsb
add
or
xchg
fs
adc
push
push
add
push
scas
sub
adc
in
lea
jb
scas
aad
adc
add
fwait
xor
push
push
lods
leave
pop
mov
in
test
adc
hlt
cli
fisttpll
mov
popa
stos
lahf
es
pop
std
js
es
xchg
div
icebp
mov
and
jmpw
mov
mov
aaa
cld
fcomps
pop
aam
pop
mov
inc
pop
adc
pop
xor
scas
mov
daa
in
test
mov
or
std
mov
mov
jno
cs
std
dec
leave
fdivs
mov
push
add
div
iret
das
adc
jge
imul
mov
cmp
xor
xor
xchg
rol
mov
arpl
icebp
cmp
mov
in
mov
pop
mov
jg,pn
and
mov
lahf
int
sbb
cli
or
xlat
pop
in
pop
and
cmp
adc
rorb
lock
imul
popa
aad
xor
std
movsb
inc
adc
cmpsb
into
or
call
inc
push
movb
cmp
es
outsb
xchg
orl
sarb
dec
xchg
sbb
and
push
out
push
inc
rcrl
xchg
cmp
dec
inc
inc
pop
pusha
jae
xchg
aad
lret
je
or
mov
scas
es
cmpsb
cmp
sbb
adc
sub
push
movsb
adc
pop
sbb
jne
cs
mov
shll
cmp
xlat
movsb
xor
stos
clc
sub
cwtl
pop
xchg
out
in
jg
cmp
cmp
inc
cltd
push
lods
loop
outsb
mov
decb
mov
std
rcll
and
cld
lods
shrb
jnp
int3
sub
ret
xchg
mov
sbb
sti
xlat
jmp
mov
imul
outsl
add
js
mov
sbb
mov
add
mov
add
cmpsb
je
outsb
xlat
int
jae
movsl
cmc
cmp
jp
xchg
adc
sbb
xor
lret
movsb
fucom
push
icebp
adc
lret
xchg
jbe
adcb
add
jbe
sub
nop
mov
xchg
arpl
add
inc
add
adc
lea
and
into
addr16
pop
inc
lds
sub
jnp
mov
inc
or
in
cwtl
jns
popf
subl
mov
mov
mov
mov
cmc
add
pop
jo
pop
mov
aaa
in
ss
add
fnsave
jne
or
mov
addl
pop
pop
lods
sub
cld
jne
and
mov
jbe
xchg
orl
les
repnz
jge
fsubs
orb
push
loope
jg
out
loopne
push
inc
mov
addr16
dec
adc
ja
ret
imul
and
push
dec
popf
jne
fimuls
fwait
inc
adc
cmp
xlat
out
mov
inc
sub
xchg
mov
add
daa
rcr
imul
rolb
popf
push
mov
lcall
or
dec
mov
or
inc
mov
sbb
mov
adc
fwait
les
int3
pop
cli
cmp
mov
cs
inc
jno
popa
aas
sub
xchg
lahf
jnp
mov
popa
out
outsl
insb
dec
inc
dec
mov
xchg
loopne
ret
icebp
roll
sbb
je
push
cld
inc
aaa
sbb
push
mov
jbe
xchg
inc
cwtl
sbb
dec
jns
gs
jns
ret
fisttps
cmpsl
mov
fsubrl
push
pusha
iret
stos
test
leave
lods
mov
inc
add
push
aam
outsl
mov
lret
test
mov
sub
fdivs
addb
clc
xorb
insl
jae
aad
sub
mov
js
scas
pop
pop
inc
mov
push
and
mov
push
pop
add
cs
leave
sub
fmul
les
imul
sbb
in
mov
orb
imul
mov
outsb
and
out
ss
add
roll
add
insl
hlt
mov
lret
shrl
jmp
jbe
jp
or
xor
cld
xchg
out
adcb
cmc
or
adc
inc
xor
push
iret
jns
nop
xor
lahf
rcrb
test
inc
mov
push
xchg
aad
int3
mov
mov
inc
lret
or
pusha
js
cwtl
scas
dec
mov
out
shl
das
es
insl
gs
stc
call
idivl
lea
jecxz
mov
scas
or
mov
jb
dec
inc
js
hlt
rol
jbe
and
nop
mov
pushf
addl
inc
mov
pop
add
daa
push
jmp
std
cld
lcall
fcomps
scas
mov
pop
sub
jno
repz
and
push
jle
fdivrp
je
rorb
loopne
test
push
cmp
or
imull
call
test
mov
enter
xchg
pop
loopne
sbb
xchg
ficomps
push
xchg
jl
dec
push
dec
notl
fs
fwait
aas
and
arpl
mov
ret
sbb
hlt
add
lahf
jmp
fimull
xchg
cmp
rorb
inc
in
dec
in
repnz
pop
inc
pop
xchg
lea
xchg
jbe
in
or
push
stos
or
das
sahf
xchg
mov
pop
inc
push
enter
xchg
xchg
xor
ret
hlt
out
push
or
mov
lahf
adcl
aas
leave
xor
and
mov
jno
dec
stc
sbb
ret
sbb
in
aam
fisubrl
pop
movsb
xlat
daa
dec
mov
imul
jmp
mov
out
arpl
jecxz
cmp
inc
lock
xchg
pop
cmp
fwait
adc
and
iret
arpl
dec
inc
or
push
test
push
jl
cli
ss
in
mov
mov
gs
pop
repz
push
sub
add
mov
call
adc
dec
cld
rcrl
movsb
int3
add
jnp
sub
sub
and
or
and
cs
xchg
popl
clc
in
loope
push
mov
sti
std
outsb
loopne
push
arpl
loope
data16
inc
mov
pushf
out
lock
push
push
ds
sbb
adc
jno
mov
movsb
xchg
test
fldt
icebp
xchg
add
pop
mov
cmp
mov
push
int3
rcrl
sbb
jb
mov
shrb
cwtl
inc
jno
or
dec
imul
leave
loope
push
dec
xor
aad
scas
mov
repnz
enter
in
jge
insb
sbb
fcmovb
pop
xchg
dec
xor
cmp
jne
xchg
scas
sub
stos
test
int
ret
xchg
xchg
outsb
push
mov
xchg
mov
lcall
cmpsl
test
add
mov
into
test
cli
sbb
add
popa
addr16
xchg
inc
mov
adc
aad
mov
out
cmp
jle
stos
rorl
jbe
pop
in
dec
fwait
ljmp
sbb
inc
movsl
inc
ror
pusha
jp
or
add
gs
cs
jae
sbb
loope
sub
mov
dec
loop
adc
mov
pop
rcr
movaps
mov
aam
cmpsl
xor
mov
ja
cmc
inc
dec
subl
cmp
pop
jp
or
sbbl
iret
gs
pop
or
test
cmpsb
cmp
enter
mov
jnp
sarl
in
sub
adc
cmp
addr16
xchg
dec
rcrb
outsb
dec
scas
push
enter
mov
xor
sbb
stos
or
cs
dec
int
push
xchg
jmp
push
push
mov
mov
push
mov
scas
ljmp
imul
jns
mov
push
das
test
loop
movsb
dec
xor
jno
cmpsl
mov
jbe
push
push
addr16
pop
into
pop
or
or
imul
inc
adc
adc
inc
and
and
repnz
iret
in
fimuls
mov
in
repz
mov
rorb
xchg
jmp
sub
cmpl
data16
ret
mov
cld
push
cld
aam
jo
add
mov
mov
loop
lahf
popa
jle
mov
hlt
fmul
in
insb
sub
mov
jle
mov
out
das
cld
mov
xchg
aaa
xchg
jmp
clc
lods
cmovle
xchg
ds
pop
in
shrb
sub
xchg
mov
jae
stos
sub
or
dec
sbb
leave
dec
cmc
mov
or
jle
mov
pop
jnp
js
mov
cmp
aam
imul
xchg
test
repnz
scas
xchg
cli
pusha
mov
cmc
testb
inc
hlt
movsb
inc
shld
sbb
mulb
push
add
ds
test
xchg
aam
cmp
in
call
dec
sbb
aaa
jns
dec
and
cmc
fsubl
xor
mov
pop
fdivrs
sbb
addb
sub
sub
mov
mov
mov
push
push
push
jle
test
cmp
and
and
mov
and
fildl
popa
inc
sahf
sbb
test
jp
lds
sub
jp
push
add
divb
popa
xchg
je
leave
mov
shlb
cltd
mov
imul
loope
pop
in
repnz
cmp
in
aas
push
adc
cmp
or
sbb
sub
sub
fxch
out
sahf
ja
dec
pop
cmc
dec
std
clc
out
xlat
fwait
sbb
cli
repnz
ret
cmpb
mov
cltd
sub
add
adc
inc
dec
fidivl
pop
je
loop
pop
xor
test
fmull
in
int3
sub
pop
ret
fwait
clc
pop
push
pop
xorl
std
xchg
jb
inc
cmpsl
mov
in
lods
push
ja
cld
push
jbe
cld
test
xchg
ss
int
jo
outsl
pusha
das
pop
cmpsl
sahf
xchg
inc
push
mov
xor
sarb
pop
pop
push
arpl
aas
orb
xchg
in
sbb
xchg
das
test
ret
pop
mov
out
lods
out
pop
test
xor
rep
pushl
jmp
fidivl
push
mov
jns
notl
jmp
xor
dec
jbe
push
ds
dec
and
das
jecxz
pop
sahf
push
imul
les
adc
and
hlt
call
inc
sbb
pop
orb
sbbl
testb
push
add
add
fistps
mov
nop
lret
push
adc
pusha
pop
push
insb
mov
fwait
push
dec
push
dec
inc
pop
and
mov
cmp
fdivp
push
aam
jecxz
pop
dec
test
test
jp
push
jl
repnz
or
mov
add
loop
fidivrl
call
ret
mov
dec
mov
fs
inc
fadds
xor
jb
in
adc
out
and
subb
cli
rorl
stos
lods
jl
pop
les
inc
sub
test
cld
add
lock
inc
in
pop
sbb
ljmp
jmp
mov
in
xor
cmp
mov
mov
int3
mov
fiadds
dec
sub
icebp
sarl
int
repz
aaa
and
mov
jle
hlt
cmc
inc
push
popa
mov
sub
or
xor
mov
bound
sbb
pop
mov
jmp
mov
inc
push
mov
pop
stc
pop
ffree
scas
cwtl
dec
jg
cli
mov
pop
hlt
fldz
lret
test
mov
sub
cmp
sub
mov
xchg
es
lcall
xchg
mov
dec
std
and
lea
cli
icebp
sub
pop
adc
ljmp
dec
ret
aam
or
add
pop
jge
xchg
jb
cmc
sub
or
sub
dec
inc
inc
sub
push
ret
outsl
mov
fisubl
push
inc
dec
cld
mov
ja
sbb
inc
aad
in
ret
ss
lahf
inc
jb
imul
out
rcr
mov
or
aaa
shlb
jne
imul
push
jo
push
ficoms
test
inc
sub
lds
mov
jne
idivl
hlt
les
lcall
cmp
or
icebp
shll
mov
pop
lret
fistpl
sub
pop
fwait
mov
pop
add
ret
adc
ficoms
cli
xchg
sti
arpl
bound
lcall
xor
insl
push
sti
push
jmp
aam
dec
xchg
in
mov
mov
jnp
fisttpll
lret
insl
mov
lods
imul
pop
mov
insl
fsub
push
sar
hlt
and
clc
sbb
sbb
decl
mov
mov
addr16
sbb
fsubrl
fistl
adc
jns
cld
cmp
shr
mov
and
addb
sub
add
andl
pusha
inc
adc
and
arpl
mov
daa
aad
fs
cmp
shlb
xchg
pop
mov
fsubrl
add
jnp
inc
ljmp
push
adc
mov
cli
mov
adcl
data16
xchg
sbb
in
push
lock
sbb
xchg
jmp
mov
pop
and
loop
outsb
and
cmp
push
sub
leave
sarb
push
inc
inc
in
addr16
out
dec
xor
add
mov
push
clc
jl
mov
ja
cmp
mov
and
pop
and
or
stc
in
data16
bound
cwtl
sbb
mov
inc
xchg
stc
mov
pop
or
iret
in
and
rcrl
stos
daa
inc
push
outsl
adc
pop
loope
call
negl
mov
mov
mov
fimull
lahf
mov
cs
xor
mov
cmp
pushf
clc
push
loopne
mov
jo
cltd
xor
fcomp
aas
dec
or
sbbb
in
je
mov
pushf
ficomps
popf
xchg
lock
stos
aaa
mov
xchg
imul
cmpsl
jecxz
adc
lods
mov
inc
push
popf
pop
inc
sub
jbe
loope
dec
fdivrl
xchg
gs
es
test
test
test
icebp
jl
pop
inc
sbb
mov
sbb
es
roll
or
inc
ss
push
mov
jmp
mov
cs
imul
pop
xor
and
cltd
push
nop
lods
or
adc
fildl
rcll
push
ret
jmp
rcl
pop
pop
xor
dec
pop
int3
imul
pushf
es
ds
je
mov
mov
dec
dec
mov
lods
test
mov
rorb
repnz
xlat
mov
or
mov
ja
push
xor
loop
adc
sbb
bound
aaa
fsubrs
adc
jne
xchg
cmpsl
jo
popf
imul
mov
mov
xor
cmp
orb
inc
push
std
and
shl
push
mov
out
jo
hlt
ja
out
sub
xchg
inc
jmp
loop
cmp
fwait
mov
jbe
into
and
dec
xchg
push
xchg
push
testb
push
popf
mov
sub
mov
cmp
ss
das
les
cmp
fidivl
dec
dec
sbb
or
or
popf
add
das
xor
inc
xor
out
xor
decl
ljmp
mov
popf
scas
stos
pop
or
out
mov
xchg
mov
pop
fdivs
cmp
es
mov
jae
insl
stos
sub
push
xor
xor
es
jmp
mov
repz
inc
repnz
push
lcall
cmpsb
mov
push
add
repz
jmp
arpl
imull
hlt
out
or
dec
mov
jl
xchg
and
xor
lods
out
mov
sub
sarl
shl
icebp
cmpsl
mov
inc
mov
mov
cmpsl
push
sub
out
adc
mov
out
jo
mov
rcr
mov
inc
adc
fmull
popa
or
jbe
aaa
stos
lock
add
out
mov
push
stos
jne
xchg
inc
shlb
adc
mov
or
push
push
jbe
jae
in
mov
dec
stos
cltd
mov
out
push
jecxz
push
mov
loop
iret
pusha
push
nop
cmp
cs
lods
cmp
cmpsb
sbb
fisubs
imul
sbb
scas
pop
mov
gs
mov
adc
xchg
outsb
gs
pushf
pop
lret
or
push
sub
inc
and
sub
stos
cmpsb
std
sub
iret
das
shrb
mov
cmpb
push
loope
push
ret
jns
adc
hlt
xor
push
and
in
mov
mov
sbb
in
clc
dec
adc
shrb
xor
mov
out
arpl
add
adc
jl
dec
pop
pop
aad
push
add
movaps
lods
xchg
and
jae
int
jl
push
leave
fstp
mov
mov
jmp
insb
ret
mov
mov
leave
lret
mov
xchg
shll
pushf
ret
aad
sbb
inc
add
pop
push
dec
or
cmp
mov
fistl
push
sub
repz
mov
test
add
leave
clc
sbb
enter
cmp
push
dec
cmpsb
scas
jbe
in
sti
outsb
lods
les
stos
arpl
xor
inc
js
add
mov
cmp
dec
xlat
das
pop
pop
pop
pusha
jb
lret
movsl
or
sbbl
add
popa
mov
pop
fadds
mov
addb
lds
inc
insl
adc
mov
loopne
and
pop
mov
cld
sbb
loop
divl
and
insb
jmp
ret
stos
or
jg
test
dec
pop
fs
mov
pop
pop
shlb
sbb
lret
sub
subl
pop
popa
sbb
mov
nop
add
and
call
jle
enter
push
cs
push
sbb
push
mov
jmp
push
or
in
xchg
lods
incl
or
fmuls
push
sub
xchg
out
sbb
mov
cmp
jb
push
mov
lahf
mov
or
idivb
movsl
xor
xchg
xchg
sti
loopne
jae
test
inc
sbb
mov
adc
rol
ror
test
es
sbb
js
insb
adcl
dec
xor
xchg
aad
pushf
adc
dec
test
nop
mov
pop
sub
call
loop
pop
aam
mov
stc
sahf
imul
inc
jl
fmuls
jnp
sub
ss
push
shl
pop
sbb
cmp
xchg
and
add
xor
movsb
mov
dec
xchg
je
sbb
mov
xor
pop
xor
mov
sqrtps
or
dec
mov
or
push
nop
inc
lods
mov
mov
inc
mov
mov
jmp
in
sbb
xor
mov
cmp
jmp
icebp
lods
mov
jbe
stc
and
sbb
sahf
clc
cmp
dec
je
lahf
clc
fs
cmpsl
push
adc
sbb
mov
loopne
mov
jno
push
mov
cwtl
dec
pop
stc
inc
cmpsl
adc
int3
pop
sbb
pop
mov
mov
sub
daa
xor
fisttpl
dec
dec
push
dec
xchg
xor
sahf
icebp
adc
aad
hlt
aas
enter
push
cmp
das
inc
and
cltd
sbb
lcall
popf
add
in
iret
add
push
test
jl
jg
cs
jmp
jbe
out
jno
and
mov
fwait
lods
sbb
scas
inc
repnz
lcall
arpl
ficoms
xchg
outsl
negb
out
pop
xor
sub
out
or
push
sub
cli
mov
cmp
cld
stos
in
fs
lods
sti
lret
xor
pop
outsb
pop
test
daa
aaa
es
mov
icebp
cmc
add
xor
fistps
sub
cwtl
leave
jp
arpl
sbb
inc
or
xchg
dec
xchg
xchg
mov
cmc
fisttps
xchg
xor
jl
inc
inc
or
push
jns
xor
push
mov
sbb
jb
test
idivb
push
pop
mov
jns
insl
movsb
movl
repz
test
ret
pop
lds
aad
xor
adc
in
test
pop
push
rcrl
mov
pop
or
in
insl
dec
xor
and
call
js
cmp
mov
and
jmp
add
ja
pop
sub
pusha
or
std
cwtl
mov
cmc
mov
mov
mov
sbb
int
xchg
out
int3
in
jb
xor
xlat
adc
sub
sti
fsubrs
fbstp
sbb
enter
inc
std
mov
clc
mov
jns
int
lcall
sbb
jecxz
mov
sbb
lods
adc
adc
inc
mov
int3
pop
scas
mov
das
push
mov
cli
xor
xchg
mov
cmp
or
out
mov
push
mul
repz
cmpsl
cmp
scas
loop
jg
repz
push
in
adc
xchg
fiadds
dec
push
dec
jl
xor
test
das
sbb
dec
fwait
mov
adc
dec
scas
jnp
clc
in
push
cmc
pusha
dec
xchg
sbb
test
int
lods
shr
mov
je
or
mov
mov
fst
pop
jae
sbb
sub
dec
ffreep
es
aas
jecxz
or
xchg
sbb
push
andl
pop
ficomps
mov
pop
cmpl
pop
jnp
inc
rcrl
xor
fisttpl
cmp
dec
and
fildll
iret
sbbl
lret
fldt
push
pop
mov
cli
dec
dec
adc
pop
mov
iret
stos
movsb
pop
iret
jle
adc
aaa
mov
dec
ror
pop
out
jne
push
test
cmpsb
dec
push
and
mov
popa
js
and
hlt
and
dec
je
pop
cmp
pop
cs
fnstsw
add
test
imul
or
sbb
aas
push
and
jnp
inc
in
xchg
js
push
in
add
pushf
cmpb
test
mov
mov
scas
mov
pop
pop
out
cltd
fxch
mov
sbb
and
mov
jle
movsl
outsl
lret
mov
add
inc
mov
xor
cmp
push
inc
dec
stos
test
fwait
fwait
mov
xor
or
push
lret
lds
movsl
shll
adc
jg
aad
sbb
or
ret
aad
pop
inc
arpl
dec
scas
lock
rorb
xchg
jp
bound
add
fcom
lea
push
daa
ss
mov
lods
aad
rol
jno
dec
inc
sub
dec
jmp
cwtl
enter
jbe
popa
inc
xor
pop
repz
out
add
dec
jl
mov
cltd
add
dec
insl
clc
test
insb
insb
mov
cmp
aam
xchg
rcr
in
andb
dec
xor
insb
ret
xor
shl
xor
cli
mov
mov
dec
add
mov
or
and
jno
xor
or
mov
and
push
call
push
icebp
sub
pop
jmp
aas
lods
sub
fistpll
stc
mov
mov
jg
sbb
jo
dec
sub
adc
mov
and
dec
mov
mov
sbb
or
dec
xor
adc
dec
fldt
inc
ficoml
scas
xchg
adc
jns
outsb
rcll
or
push
daa
push
and
jle
adc
jle
and
mov
inc
out
hlt
outsb
add
add
sub
je
fisttps
push
je
insl
cmp
not
leave
mov
fsts
call
insl
pusha
outsb
out
inc
movsb
cmpl
lret
jl
and
cmp
mov
push
fwait
xchg
std
cmpsl
jecxz
push
xchg
dec
out
jns
ror
mov
in
mov
or
daa
or
pusha
xchg
stos
ljmp
lret
jg
mov
and
dec
stc
and
and
mov
or
mov
in
or
in
pushf
xor
and
sahf
aam
rcll
popa
pop
aas
fcmovnb
out
call
xor
and
dec
dec
lods
xchg
add
in
cmp
in
cmp
outsl
or
rol
ficompl
inc
xor
jle
cmp
dec
sub
sti
push
cltd
roll
mov
test
jmp
jb
xor
in
cmp
xlat
push
int
subl
sbb
mov
adc
lahf
push
ret
lea
aas
icebp
test
fs
sbb
push
fstp
xor
popa
enter
cwtl
cmp
lods
popa
aas
insb
cltd
and
outsl
loope
mov
xlat
and
repnz
or
lock
cmc
int3
and
lea
adc
adc
test
add
loop
aad
fidivrs
not
mov
add
push
cltd
xchg
mov
sub
sbb
add
in
mov
pop
sub
clc
mov
aam
and
scas
je
mov
cmpsb
mov
mov
loope
sbbl
inc
jae
sbb
call
mov
mov
pop
sub
inc
mov
jno
pop
xor
and
es
lret
fistpl
mov
loop
jno
xchg
push
sbb
mov
cmp
outsl
push
mov
add
cmpsb
stos
or
lahf
lret
int
shl
inc
sub
lea
push
sub
fcmove
or
aad
sub
dec
adc
sbb
pop
out
pop
add
in
lret
loope
mov
hlt
pop
xor
ret
dec
or
xlat
rorl
pusha
fisubrs
cmp
xor
jno
jp
mov
rorl
mov
rclb
jecxz
mov
pop
mov
dec
xchg
sbb
cmpsb
xchg
and
aam
or
and
paddusb
mov
cli
jl
add
lcall
xchg
xorl
sub
jp
sub
cmpsb
stos
jo
add
xchg
mov
pop
inc
push
add
mov
mov
jecxz
xchg
fwait
dec
das
xchg
test
into
incb
shrb
fdivs
sub
mov
in
add
insl
ss
insb
push
mov
cmp
mov
pop
or
jb
mov
add
xchg
xchg
mov
out
lcall
cmp
aad
outsl
shlb
ret
icebp
loopne
xchg
pusha
inc
push
push
push
sub
test
std
mov
ret
cmpsb
pop
inc
call
pop
xchg
push
stos
mov
stc
ja
roll
nop
gs
das
and
push
test
repnz
cmovnp
xchg
cmc
in
aaa
add
fadds
xchg
aaa
and
dec
movsb
ja
mov
arpl
dec
mov
lds
in
les
mov
push
sub
out
es
addl
push
sbb
mov
mov
jecxz
xchg
fwait
and
sub
shr
fdivrs
mov
scas
pop
je
insl
lret
shll
sbb
in
xorl
fs
decl
pop
mov
mov
stos
hlt
pushf
pusha
fisubrs
loope
or
jle
cli
imul
repz
shll
iret
fstp
shlb
test
sub
push
cmp
hlt
enter
sar
or
push
cmp
push
clc
dec
sub
or
rcrl
jae
int
xchg
and
sub
cmp
push
insb
pushf
ss
rcrb
scas
inc
xchg
jl
mov
jge
inc
lahf
sub
dec
sub
cmp
or
xchg
xchg
jns
cmp
push
pusha
sbb
xchg
loopne
pushf
lea
xor
loop
push
fisttpll
fdivr
hlt
lcall
sti
cltd
lods
cmp
mov
test
fldcw
out
lock
pop
xorl
adc
scas
jl
mov
call
push
stos
sub
push
push
pop
bt
ja
divb
in
scas
xchg
pop
lcall
xor
pop
lods
jno
mov
rorb
mov
fsub
or
pushf
cmp
xchg
pop
mov
cmp
push
xchg
in
mov
jae
mov
add
mov
and
sbb
in
cmp
mov
sbb
loope
lret
sub
sub
sbb
or
mov
pop
mov
inc
mov
pop
fldt
sub
push
push
inc
xchg
mov
in
outsb
shl
xor
cmpsb
pop
lret
filds
das
inc
dec
push
cs
ljmp
xchg
mov
ja
sbb
aas
sub
xor
pop
ret
dec
cmpsl
mov
mov
fcomip
sbb
ss
loope
aas
dec
mov
push
mov
or
fiaddl
fwait
or
jns
cmpsl
pusha
in
dec
arpl
shl
adc
pop
loope
xor
sbb
stc
and
cmp
push
mov
lock
mov
das
gs
mov
mov
cmc
mov
dec
pop
dec
pop
repnz
xor
sub
cmp
add
imull
ficoml
fnstsw
movsl
mov
pusha
in
xorl
sbb
fstpl
or
fdiv
xchg
sub
lock
lods
cwtl
data16
arpl
shrd
je
jmp
sbb
iret
cmp
in
mov
ja
pop
dec
fildl
int3
cmp
gs
inc
mov
inc
add
pop
repz
pop
jecxz
pop
jg
mov
iret
mov
pop
mov
ret
repz
cmp
push
lods
mov
xchg
out
sub
jb
out
inc
jo
mov
pushf
and
ja
jp
push
test
iret
cmp
pop
pop
lea
mov
sbb
inc
hlt
xor
mov
inc
loop
jecxz
jg
inc
mov
mov
xorb
cmp
push
cmp
nop
mov
maskmovq
add
stos
aas
and
jae
pop
xor
and
iret
add
sahf
addl
mov
lea
xor
outsb
or
cmp
sti
mov
outsl
cmp
jae
cltd
lret
xlat
movsl
ss
cmpsl
mov
out
sbb
sub
sub
xchg
sub
das
cld
mov
fcompl
sbb
mov
test
pop
aad
xor
outsl
imul
decb
daa
and
aaa
cmp
and
pop
rolb
mov
aaa
sub
jnp
push
dec
out
and
pop
out
xchg
mov
or
out
adc
testb
inc
mov
dec
jp
xchg
lds
push
cmp
dec
insb
xor
stc
xchg
lcall
sbb
push
dec
dec
sub
inc
push
ljmp
iret
mov
jp
and
pop
cltd
sbb
sbbl
test
push
push
mov
iret
rcrb
xchg
dec
ss
mov
xchg
int3
enter
or
aad
aam
add
xchg
int
jnp
sbbl
test
rcrb
jo
xchg
dec
ljmp
pop
gs
pop
mov
int3
fistpll
sub
xor
loopne
stos
mov
mov
aad
aam
mov
sbb
rolb
pop
push
push
neg
mov
sub
add
cmp
std
lcall
dec
jo
jmp
jbe
loope
mov
lock
insb
scas
call
loopne
jb
add
fadds
jle
daa
clc
bound
sbb
test
das
test
cmp
inc
daa
std
cmp
repz
adc
loop
or
sub
dec
cld
arpl
lcall
stos
je
jae
push
dec
xor
pop
cmpsl
imul
jne
nop
push
js
arpl
in
popa
mov
imul
mov
adc
mov
mov
outsb
test
adc
pop
add
dec
repnz
jp
jp
xor
lret
in
mov
loope
cld
sbb
hlt
into
adc
inc
mov
movsb
jle
pop
push
jp
sub
pop
int3
imul
imul
and
ss
push
roll
inc
cli
pop
mov
mov
stc
xchg
test
jp
mov
mov
idivl
lcall
xor
scas
push
mov
imul
add
mov
in
les
sub
pop
xchg
ret
divb
scas
outsb
fstl
mov
xchg
cmpsl
adc
ficompl
push
sbb
rcrb
pop
outsb
push
stos
add
bound
pop
mov
jl
ret
js
and
jmp
jne
jo
loop
push
fidivrs
cltd
mov
sbb
dec
mov
incl
jne
jg
nop
mov
mov
pushl
xchg
data16
aad
sbb
pop
adc
jg
ss
push
mov
iret
add
sub
clc
cmp
cwtl
pop
outsl
cmc
leave
rorb
cltd
sahf
sub
cli
xchg
xor
inc
push
jbe
xlat
inc
shlb
sub
les
or
cli
out
add
outsl
xlat
push
loop
ja
mov
sbb
mov
repnz
outsb
sahf
pop
cmp
add
arpl
and
nop
lds
dec
push
mov
xchg
scas
mov
insb
into
cmp
outsl
mov
jge
movsl
gs
test
iret
lock
jle
neg
sub
mov
pop
daa
stos
sti
hlt
push
mov
cmp
or
aas
push
or
in
fs
jo
stos
push
and
scas
xor
in
mov
pusha
mov
mov
popf
pop
leave
sbb
movsl
pop
jnp
mov
insl
ljmp
imul
repz
imulb
inc
or
out
ljmp
mov
into
pop
push
xchg
and
mov
fistpll
cmp
lock
imul
call
inc
xchg
call
xchg
out
sbb
fsubrs
fs
jnp
movsb
jp
arpl
xchg
pop
adc
xchg
mov
negl
or
shlb
out
dec
lods
dec
aas
aam
loope
sbb
jl
mov
push
ret
xor
test
dec
loop
mov
adc
cmpsl
outsl
out
les
cltd
mov
arpl
push
jmp
dec
mov
js
fwait
pop
sbb
xchg
sti
clc
ss
into
push
and
mov
pop
push
cld
out
mov
pop
shll
sub
sbb
pop
fs
aas
xchg
sub
iret
shlb
or
push
enter
and
std
xchg
loope
cltd
mov
fnsave
popa
rorl
add
lcall
push
mov
jae
inc
pop
xor
jl
and
dec
imulb
in
pop
cmpsb
adc
pop
popa
mov
mov
dec
retw
add
nop
mov
sub
out
xor
sti
mov
inc
lds
cld
repnz
int
daa
cli
mov
sub
test
push
aam
inc
ret
daa
add
pop
xchg
imul
cld
into
pop
lods
sbb
push
fxch
xor
or
decb
test
ret
loope
mov
movsb
dec
pusha
pusha
add
xchg
push
pop
jmp
cmpsb
in
inc
ret
pop
xor
sbb
and
repz
cmp
addb
push
cmp
add
or
fs
xchg
jae
pop
fadds
push
sub
inc
fiaddl
out
dec
push
sub
rorl
ja
fsubl
jae
adc
pop
push
out
and
cmp
lock
das
mov
mov
loopne
xor
fldcw
xchg
lea
jae
hlt
daa
dec
jge
push
and
aas
lret
mov
adc
mov
jmp
sar
fsubrs
push
sub
lods
push
outsb
inc
rclb
pop
leave
adc
push
in
sbb
jne
adc
lock
mov
dec
push
push
into
pop
mov
cwtl
cltd
rclb
push
cmp
xchg
dec
dec
fists
adc
mov
and
push
adc
jne
jmp
push
and
aad
add
jl
sahf
cmp
lahf
xchg
mov
add
inc
imul
push
jecxz
insb
int3
inc
add
sbbb
dec
xlat
imul
xor
xchg
aas
scas
ror
pop
mov
push
aas
sub
stc
imul
sarb
mov
adc
sbb
pop
jmp
iret
out
das
mov
jbe
mov
push
cmpsl
jp
loopne
mov
mov
xor
ja
inc
mov
fwait
jle
pushf
in
call
mov
bound
test
xlat
test
push
mov
sub
lahf
stos
sbb
mov
pusha
dec
add
stos
cmpl
mov
rcrl
cmp
xor
in
cmp
insb
jg
mov
mov
sub
gs
cwtl
std
inc
mov
dec
jecxz
sbb
cld
sbbl
push
repnz
mov
sahf
cmpsb
mov
mov
cmc
push
adc
sbb
pop
lock
jo
push
dec
in
push
jo
orl
in
and
incl
jp
inc
adc
sub
jo
jb
or
mov
test
icebp
rcr
ljmp
popf
adc
mov
lcall
js
sahf
lea
inc
mov
push
out
fisubrl
sbb
icebp
xchg
mov
loop
mull
jle
into
cli
ss
sbb
push
fdivr
pushf
xchg
ljmp
jge
pop
add
push
inc
out
dec
jae
cwtl
sub
and
out
xorl
in
movsl
push
test
push
in
div
mov
inc
rorb
push
cwtl
sub
stos
sub
jno
stos
mov
push
jge
in
dec
icebp
leave
cmpsl
mov
push
inc
loopne
test
daa
mov
in
repz
cmpsb
push
cwtl
and
pop
rolb
mov
and
add
inc
sbb
sbb
fmul
hlt
insb
add
adcl
mov
xor
mull
pop
icebp
aas
inc
xor
insl
pusha
push
fldcw
mov
inc
sahf
stos
loop
lea
jnp
fiadds
lret
push
xor
or
add
push
fs
dec
loopne
xchg
inc
fistl
aad
push
mov
insl
stos
cmc
mov
adc
jnp
cmp
pop
sbbl
leave
gs
inc
inc
or
jno
fwait
ret
scas
ret
lahf
pop
inc
adc
push
sbb
inc
stc
adc
rcrl
pop
andnps
mov
fld
jns
out
xchg
mov
clc
push
and
imul
outsb
stos
pop
call
repz
jecxz
and
je
jg
jae
mov
aas
dec
enter
mov
cmpsl
pop
and
loopne
unpckhps
mov
jg
cmp
mulb
test
mov
insb
mov
cmp
push
sahf
pushf
pop
repnz
das
push
cld
pushf
adc
nop
adc
adc
stos
fsubl
pop
addr16
hlt
sti
mov
push
nop
mov
or
mov
sub
adc
mov
mov
or
pop
mov
mov
subb
dec
xchg
adc
pusha
inc
or
xlat
mov
hlt
or
push
insl
mov
xchg
mov
cwtl
iret
jmp
in
adc
inc
and
js
icebp
mov
or
xchg
jp
call
pop
dec
popa
cmpb
jnp
and
mov
fiaddl
jge
cmp
and
ja
ret
stos
and
dec
lcall
ja
mov
pop
call
jl
in
push
aad
pop
jl
cmpb
imul
daa
in
jno
mov
cs
out
mov
dec
insl
sub
and
lods
mov
add
push
add
xorb
pushf
cmc
sbb
insl
shl
push
stos
int3
push
test
addb
mov
out
cmp
mov
mov
inc
movsb
cmp
pop
movsb
mov
jnp
xor
fsubrs
aam
fwait
xlat
les
shlb
addl
pop
shlb
dec
sbbl
xchg
cmp
add
js
xor
stc
xchg
mov
dec
hlt
jbe
iret
scas
out
movsl
xor
inc
aam
rolb
imul
cmp
test
test
sarl
sub
dec
cmp
movsl
call
mov
lea
repnz
ds
aad
in
lret
out
movsb
loopne
fldcw
lahf
cmp
mov
dec
adc
cmc
adc
in
mov
pop
movsl
cld
add
ljmp
mov
and
dec
mov
cltd
fwait
nop
sub
iret
fwait
xchg
inc
fidivl
icebp
mov
int
jmp
loope
xor
sub
out
iret
iret
fldpi
sub
mov
pop
push
outsl
cwtl
rcr
xchg
pop
adc
fs
outsl
mov
loopne
push
dec
cli
mov
jns
repz
out
dec
clc
movsb
ret
mov
ds
and
sbb
cmp
jp
mov
subl
in
aas
in
movsb
movsb
mov
fidivl
cmp
mov
insb
add
mov
andb
add
xchg
dec
sub
cld
orl
lods
jmp
aad
mov
mov
adc
les
cwtl
sub
insl
pop
dec
pop
leave
dec
shlb
adc
mov
stc
je
xor
add
sub
cmc
and
ja
xchg
xor
shlb
out
push
ja
push
cld
aam
dec
jl
jns
sub
xor
inc
cmc
or
jne
fdivrl
mulb
hlt
or
mov
test
mull
aas
sbb
xor
fwait
aaa
cltd
adc
push
test
sub
jp
jle
mov
jns
cli
aas
xor
lods
in
mov
sbb
mulb
lods
mov
pop
mov
mov
cmp
inc
mov
pop
cmp
sti
mov
cmp
mov
sbb
addr16
sbb
xchg
push
pop
fldenv
rclb
jecxz
stos
lahf
jae
das
push
test
test
insl
scas
cmp
sbb
cmp
test
in
lock
push
pop
cmp
int
sbb
movsb
mov
iret
cmp
imul
cs
imul
push
jle
sub
adc
or
lahf
mov
inc
cmp
jl
push
sbb
jns
jge
push
movsb
ret
test
jecxz
mov
inc
dec
adc
scas
int3
sbb
pushf
data16
arpl
loopne
or
rclb
aas
xchg
aas
sti
and
dec
adc
sbb
push
mov
lret
sti
xchg
sbb
sbb
sti
push
jge
pop
push
cwtl
imul
iret
and
rclb
mov
jo
xchg
push
jns
sub
insl
jle
mov
test
test
pusha
or
leave
mov
lret
mov
pop
cmp
fstps
mov
stos
push
call
sahf
enter
xchg
imul
ror
lods
add
sar
mov
mov
adc
pop
mov
jb
les
data16
enter
je
pusha
adc
sub
shrl
mov
lock
or
mov
imul
jge
lods
xor
cld
loope
fistps
das
mov
add
jo
movsb
mov
push
push
xchg
jmp
les
test
cmpsl
pop
pusha
mov
loope
xchg
xchg
jb
nop
insl
test
or
mov
div
faddl
cmp
pause
mov
mov
xchg
call
lcall
mov
cmpsl
cmpsl
mov
mov
in
loopne
cmp
fiaddl
pop
mov
adc
out
pop
mov
or
mov
cmp
outsb
sub
or
pop
cmc
pusha
je
mov
out
xor
sub
out
push
pop
in
sub
outsl
in
rorb
and
fldt
pmaxsw
adc
xchg
mov
jg
sub
mov
push
lock
in
mov
or
xchg
mov
mov
cmpsl
fcmovne
das
imul
jge
and
xchg
popf
push
push
adc
jae
mov
sbb
push
cmp
inc
cmpsb
int
out
shrl
bound
inc
mov
inc
xchg
addl
out
xchg
aaa
fmull
push
fmuls
jecxz
push
dec
dec
push
jl
xlat
outsw
fidivl
test
fimull
dec
iret
mov
loopne
cmc
sbb
nop
push
lods
push
sbb
es
add
jno
out
not
mov
mov
mov
jp
fidivs
and
and
cwtl
negb
insb
pop
xor
data16
jne
ret
cltd
outsl
mov
std
push
ret
xchg
mov
les
aas
sub
xchg
das
add
jbe
popf
sbb
nop
test
mov
xor
hlt
xchg
push
mov
push
lret
xchg
xchg
outsb
mov
jbe
inc
addb
add
lods
divl
jecxz,pn
push
dec
add
mov
les
out
pop
stc
scas
sub
mov
das
xor
jl
or
push
xor
or
adc
jnp
in
push
cmp
int
scas
movsb
and
dec
pop
lret
push
dec
sahf
xor
dec
shlb
jae
or
xor
push
mov
test
xchg
loopne
test
sbb
mov
mov
inc
xor
jo
xchg
pop
movsl
xchg
xchg
push
in
inc
test
add
test
add
out
dec
adc
push
and
jo
imul
enter
stos
cltd
or
leave
sub
adc
push
xchg
jle
mov
add
dec
jno
ret
and
cld
int
jb
aad
and
aas
and
sub
jecxz
push
test
pop
test
test
xchg
jnp
out
adc
out
inc
xchg
lcall
int
arpl
stc
jecxz
js
enter
in
mov
inc
mov
je
lret
sbbl
int
xor
adc
cwtl
push
sbb
clc
mov
js
mov
cmp
fcmovnbe
cld
jnp
fisttpl
ljmp
ja
and
mov
loop
or
push
sarb
push
into
insb
in
cmp
mov
movsl
pop
jns,pn
je
leave
mov
mov
mov
fisttpl
pop
inc
dec
mov
nop
cmp
out
jecxz
ljmp
mov
pop
sub
test
sti
inc
pop
mov
xchg
sub
sbb
mov
dec
jno
and
push
ljmp
xor
shrb
mov
mov
leave
divl
mov
and
xchg
in
adcb
jmp
loopne
push
and
mov
xchg
rorl
xchg
roll
mov
orl
push
jecxz
xor
push
fsubrl
mov
ss
lock
and
xor
add
lods
push
pop
xor
and
rclb
sbb
pop
adc
shr
xchg
jmp
dec
daa
shl
mov
and
xchg
pop
push
ds
imul
test
sbb
fdiv
gs
jae
sbb
pop
adc
pop
inc
aam
ja
xor
adc
jge
add
xchg
out
addr16
repz
imul
clc
push
pop
xor
sub
aas
lds
dec
data16
push
sbb
pop
add
loop
pop
dec
paddsw
xor
jne
movhps
xor
fcmovbe
dec
mov
jl
dec
jle
inc
out
icebp
mov
xchg
dec
sahf
test
aad
ja
js
fstpl
mov
jb
inc
sub
push
fwait
inc
insl
addr16
or
test
dec
in
xchg
movsl
mov
aad
enter
sbb
push
repnz
adc
adc
pop
jmp
sbb
mov
xorl
mov
test
sub
ret
pop
cwtl
les
in
inc
loope
insb
outsl
and
std
hlt
adc
sarl
in
mov
and
jae
rorl
cmp
loopne
sbb
mov
das
jns
mov
clc
std
dec
xor
idivb
out
ljmp
arpl
les
jne
dec
cwtl
popf
cli
jb
mov
scas
add
cmpsl
and
push
mov
add
jl
xchg
add
rorl
cli
out
test
fidivrl
xchg
mov
push
inc
shl
les
xchg
pop
sahf
and
aad
cmp
cmp
bound
adc
fistpll
scas
add
ds
mov
inc
jnp
cwtl
int3
lcall
jae
xlat
in
sarl
fs
dec
js
aam
dec
or
cltd
and
push
xor
mov
cwtl
ljmp
sarl
aaa
adc
pop
jno
or
iret
lods
push
addb
sbb
lds
jb
leave
jp
xor
adc
dec
mov
lock
arpl
in
add
xor
cmp
sbb
outsl
scas
xchg
pusha
xlat
jbe
mov
adc
sbb
mov
sub
adc
cmp
add
inc
jmp
mov
push
in
sbb
ds
dec
push
adc
inc
iret
jo
mov
daa
push
and
vpunpckhdq
std
mov
xchg
sbb
cmp
dec
push
push
scas
in
repz
push
mov
xchg
inc
jecxz
xor
in
nop
dec
dec
sub
pushf
jmp
jmp
sbb
pusha
ds
shrl
inc
xorb
and
and
lock
js
jnp
loop
scas
xchg
mov
sub
cmpsl
xchg
mov
aad
and
sub
es
dec
sbb
sbb
mov
add
pop
or
xorl
outsb
mov
pop
xchg
mov
into
cs
in
sbb
movsb
outsb
mov
leave
fwait
in
leave
adc
mulb
dec
xchg
daa
loop
jmp
add
daa
adc
xlat
popa
out
jge
sub
aad
int
inc
mov
jg
arpl
push
mov
add
test
sub
int3
fsubs
insl
icebp
leave
inc
cmc
sahf
popf
dec
mov
and
push
std
cmp
roll
mov
cmp
xor
inc
imul
test
sbb
jmp
seto
inc
cli
ret
and
and
cmp
xor
aam
pop
icebp
fsub
std
fldl
clc
xchg
test
outsb
cmp
aam
shll
das
insb
jge
movl
bound
push
push
xchg
lods
fnstcw
aad
sub
xorl
loopne
push
mov
jmp
andl
cmc
mov
in
xor
or
inc
add
loop
sbb
xorl
or
cli
pop
cli
sbb
les
inc
loopne
mov
sbb
lret
mov
push
jmp
into
mov
ret
ret
push
xor
and
add
mov
push
iret
cmp
cmp
mov
xorb
shl
jno
mov
add
push
cld
repnz
or
mov
popa
bound
out
and
test
cmp
push
arpl
xchg
mov
mov
int3
imulb
jg
pop
shll
and
sbb
cmp
pop
leave
adc
mov
add
lock
ds
cwtl
repz
cld
ret
frstor
in
mov
pop
sbb
pusha
jg
inc
daa
xchg
xor
push
cmp
shl
push
ret
jecxz
cwtl
scas
aam
andl
fisubrs
sub
mov
inc
imul
or
movsl
outsl
loopne
out
int3
or
mov
sub
aam
sub
test
dec
scas
das
cmp
pop
sbb
push
mov
fwait
in
mov
in
ret
shlb
dec
pop
cmp
mov
scas
add
jp
mov
out
dec
cmc
out
mov
adc
add
test
stc
mov
fcoms
sbb
fs
jae
jp
mov
xchg
fsubr
inc
lahf
sub
inc
out
repz
mov
mov
sbb
loop
test
push
dec
fnsave
lret
test
frndint
xchg
push
or
fsubrs
adc
or
cmp
xchg
sbb
ret
sti
das
dec
jecxz
lahf
hlt
aaa
test
rorl
ljmp
pop
dec
dec
mov
sub
xor
repz
outsl
jo
jmp
fisubl
jg
sti
xor
jne
lods
fidivl
cmp
call
add
or
inc
sbb
inc
mov
jae
rcrb
and
jg
jle
xchg
inc
scas
mov
sbb
iret
ss
loop
cmpsl
sub
and
push
insl
in
rep
rcrl
mov
popa
test
call
push
mov
sbb
loop
push
xor
adcl
cld
fcmovb
sub
xbegin
cmp
add
push
aad
leave
pop
ss
inc
pop
int3
pushf
lcall
aas
fnstcw
loope
movsb
dec
ljmp
into
lods
or
orb
fcoml
lods
and
pop
push
loopne
hlt
ret
pushf
fildl
je
das
add
pop
aam
cld
mov
mov
push
jle
addb
popa
mov
mov
dec
mov
dec
and
or
add
adcl
out
lds
cmp
adc
inc
test
xor
nop
jno
fwait
js
mov
inc
bt
jae
out
je
jle
lods
jae
lret
pop
pop
add
pusha
mov
repnz
xorl
xor
in
roll
dec
mov
jp
mov
and
cs
and
notb
sub
and
sarb
inc
int
dec
fldt
push
ss
mov
repz
pop
flds
mov
movsl
dec
outsl
out
adc
outsl
incb
es
dec
xor
lds
push
insl
test
jae
fldcw
pop
es
orl
mov
mov
dec
inc
mov
cmc
jo
sub
in
cmp
add
fwait
xchg
ret
push
sub
pop
cmp
and
mov
and
movsb
dec
adc
or
scas
push
in
inc
inc
scas
fisubs
jle
ja
outsb
jbe
mov
jbe
sti
popf
ja
mov
js
cmp
adc
daa
jo,pt
out
xor
pop
movl
pop
test
or
rcrl
inc
dec
aas
psllw
sbb
or
enter
xor
in
leave
iret
pop
aam
mov
inc
test
push
sub
inc
jne
insl
sub
mov
int
xor
dec
arpl
jmp
mov
insb
ja
das
lock
jge
call
jmp
decl
mov
scas
and
imul
out
cmp
ret
cmp
mov
fistps
out
sbb
fidivrs
lcall
hlt
jnp
sbb
pop
cwtl
ret
insl
loopne
push
fisttps
sbb
inc
mov
jmp
add
loope
rcrb
clc
shlb
cmpb
movsl
or
xor
xchg
dec
mov
push
imul
cmpsb
pop
lods
scas
or
xchg
loope
enter
mov
push
hlt
std
cmpsl
out
jg
cld
add
mov
lea
loope
fs
hlt
push
lods
sahf
lret
sub
sbb
ss
movsl
data16
shll
mov
or
fnstsw
cmp
dec
sub
fsts
mov
dec
sbb
mov
loope
clc
push
sbb
mov
jg
adc
ret
fisttpl
mov
inc
ja
mov
out
jnp
lods
pop
sbb
sahf
xchg
mov
rolb
cld
dec
xchg
dec
mov
mov
fs
imul
jbe
sahf
mov
addr16
xor
dec
or
insl
fildl
pop
icebp
mov
cmp
add
jecxz
mov
ret
les
lds
pop
cwtl
xor
adc
popf
loope
repz
jl
jge
sub
stos
cmp
ljmp
xor
inc
test
inc
cmpsl
lcall
or
xor
mov
pop
mov
dec
lds
out
repnz
outsb
inc
gs
cmp
aas
fwait
rolb
inc
cmp
clc
movsl
xor
sub
pop
dec
add
dec
addr16
mov
testl
fsub
adc
jle
mov
jmp
cmp
les
and
aam
arpl
and
inc
hlt
push
jnp
arpl
int3
push
sub
adc
and
dec
xor
ret
jecxz
ret
lahf
xor
lock
push
and
mov
or
into
cmp
jnp
and
popf
mov
inc
shlb
mov
aaa
mov
add
adc
outsb
scas
push
lea
inc
xor
aas
cmp
cmpb
ds
pop
lds
jl
push
dec
stos
push
mov
aad
push
jle
mov
cmp
lods
lcall
cmpsl
ja
cmp
xor
sbb
jle
mov
add
mov
aaa
and
xchg
cmpsl
xchg
ds
sub
xchg
lods
sahf
out
mov
popf
add
insb
inc
push
lret
pop
or
pop
and
insb
les
xchg
add
add
sbb
xchg
mov
pop
dec
les
int3
xchg
clc
mov
jl
xchg
movsb
adc
xchg
out
inc
lea
iret
and
out
stos
bound
nop
jp
mov
lahf
loop
jl
stos
pop
pop
dec
cli
mull
adc
jl
ret
leave
push
imul
lea
inc
mul
push
sub
pop
lods
fnstsw
stos
mov
add
aam
pop
jl
push
dec
leave
cmp
adc
ficoms
fsubrs
jg
mov
jmp
fucomi
xchg
test
sub
pusha
cli
adcb
call
mov
and
ret
arpl
rolb
adc
aas
jmp
scas
xcrypt-cfb
cmpsl
and
movsl
popf
in
fidivrs
pop
xchg
xchg
mov
push
adc
cmp
adc
int3
int3
xchg
scas
push
aad
inc
or
dec
adc
cmp
or
scas
hlt
mov
clc
aam
lea
stos
and
dec
shrb
mov
xor
jbe
mov
mov
popf
pop
stc
mov
sahf
test
repnz
sbb
leave
out
call
dec
xchg
call
aad
popf
aaa
adc
pushf
adc
jecxz
pop
fwait
fwait
test
mov
pop
push
scas
jl
lock
mov
daa
dec
outsl
rcll
outsb
xchg
cmp
cmp
or
xchg
shll
xor
or
mov
push
pop
jmp
test
xchg
into
jb
mov
lcall
add
movsl
adc
popa
outsl
leave
bound
inc
jp
mov
jno
es
aaa
aam
xor
scas
and
iret
dec
xchg
dec
rcll
cmp
cmp
adc
adc
dec
or
adc
sub
aad
sarl
pop
sub
lret
pop
addb
cmp
push
cmpsl
ret
in
mov
aam
fcoml
xchg
push
dec
test
fwait
mov
in
fimull
push
jmp
add
aas
xor
cld
stos
add
mov
imul
inc
clc
xchg
xor
int
gs
push
dec
inc
xchg
ret
push
outsl
cmp
lahf
icebp
push
xchg
aaa
xchg
fcompl
mov
mov
imul
in
movsb
es
xchg
adc
cmp
insb
jbe
pop
cld
cli
push
xchg
mov
mov
xchg
pop
xchg
jo
and
std
dec
cmp
scas
sub
or
test
je
pop
cmp
mov
adc
pop
loope
mov
inc
fadds
sti
fldl
into
aaa
pushf
add
push
push
xchg
push
negb
loop
lea
movsl
in
lods
mov
sub
xor
sahf
or
pop
or
in
pop
push
testl
shlb
cmp
ss
in
xlat
cld
daa
daa
ja
xlat
add
clc
adc
xorb
insb
ss
in
or
roll
sti
lods
test
jle
jmp
pop
sub
rolb
in
ss
test
int3
test
in
mov
test
push
mov
adc
outsb
mov
mov
aam
lahf
lods
mov
or
pop
dec
or
pop
sub
out
pop
add
nop
scas
dec
inc
es
mov
jo
fcmovu
rorb
cli
insl
mov
fistps
jae
or
aad
sbb
push
sbbl
loop
sub
push
out
not
daa
rolb
jg
inc
outsb
add
inc
outsl
outsb
jb
push
mov
mov
loop
inc
test
mov
sub
cmp
push
push
jl
adc
lret
or
jb
mov
out
lcall
hlt
movsb
in
cvtps2pd
shll
adc
jle
int
mov
add
add
into
jecxz
push
mov
arpl
inc
insl
and
sti
or
cmpsl
dec
mov
push
cmpsb
mov
mov
into
sti
cmpsl
adc
inc
sub
nop
push
sbb
push
dec
dec
push
repnz
into
popa
out
mov
lods
cmp
fs
or
push
mov
pop
scas
cwtl
nop
inc
cmp
call
cld
adc
or
movsb
or
cld
idivb
das
dec
shll
mov
add
clc
nop
jnp
into
fcomps
int3
mov
aas
or
sub
cmp
jmp
pop
cmpsb
mov
sub
mov
inc
lds
cmpsb
mov
mov
shll
dec
mull
cmp
sahf
scas
es
cld
ljmp
mov
mov
pop
mov
jmp
push
push
xchg
adc
repnz
cs
and
mov
inc
pop
popf
and
ds
addr16
cli
insb
ret
xchg
stos
ret
fpatan
xor
iret
hlt
imull
cmpsb
aam
add
rcrl
cmovne
xor
xchg
push
jns
icebp
int
mov
lods
out
lret
or
add
imul
aas
pushf
fcoms
rcr
push
jno
and
xor
pusha
lods
pop
lods
cmp
shrl
lret
or
stos
aas
shll
pop
loopne
mov
in
inc
inc
mov
xor
jnp
lret
and
out
mov
cltd
push
mov
scas
jns
xchg
imul
fdivs
sub
mov
adc
inc
mov
mov
mov
dec
outsb
jg
pop
cwtl
dec
int
cld
popf
pop
int
cwtl
xchg
in
sbb
xor
inc
mov
and
add
fsubrs
jmp
add
mov
push
cmp
mov
xchg
dec
mov
and
pop
test
imul
lods
lds
mov
in
jle
or
and
test
ja
and
mov
ljmp
leave
aad
sbb
jns
jge
jae
push
iret
xchg
lods
sti
cmp
adc
ljmp
lods
out
add
aam
movsl
int
cmpsb
push
imul
outsb
mov
ja
xor
clc
daa
and
lock
orl
mov
mov
in
and
mov
ja
xchg
dec
fidivs
ja
add
mov
lods
ja
xchg
repz
xchg
adc
jbe
aas
add
mov
inc
lock
sahf
scas
cmp
call
and
pop
into
inc
sbb
cli
lcall
mov
push
repnz
inc
lcall
repz
inc
cmp
lcall
rolb
mov
es
push
stos
daa
scas
dec
clc
sub
push
cs
or
popf
js
mov
mov
subb
jle
xchg
jo
and
stc
shlb
sub
jle
lret
rcrb
pop
add
imul
jb
jg
xor
shr
cmc
shl
xor
ljmp
push
jge
sbb
xor
jns
andl
cmpb
xor
mov
push
inc
clc
test
test
push
ret
lds
and
das
adc
dec
or
rcr
adc
ss
jmp
adc
jp
or
mov
dec
jl
movsb
subb
jle
ret
xor
cmp
xchg
lcall
pusha
call
push
add
xchg
xor
or
mov
lcall
cltd
xchg
fisttps
je
das
dec
cmpsl
jp
cmc
inc
and
aam
dec
movsl
xchg
cli
push
sbb
or
popa
push
dec
test
jno
pop
orb
or
imul
mov
xlat
movsb
sti
cwtl
ja
add
and
pop
add
pop
test
arpl
push
jp
test
push
cmp
sbb
cmp
xor
and
jecxz
aaa
and
insl
fmull
or
imul
mov
cs
jmp
addb
mov
pop
or
xchg
xor
jb
rolb
insl
cmp
stos
lods
cmp
mov
pop
adc
sub
push
sbb
xchg
and
add
sub
cmp
push
cmp
and
xchg
mov
lea
mov
outsb
shrl
xor
popa
fdivl
sub
or
inc
stc
push
pop
pop
push
push
inc
scas
adc
mov
push
mov
push
xchg
mov
push
cmp
xchg
xchg
icebp
pop
mov
sbb
aas
aaa
das
loop
jp
incl
gs
push
cmpsl
out
jle
cmp
dec
out
and
adc
mov
add
jno
lods
sbb
cmpsb
insb
xchg
add
cwtl
in
jno
pop
ja
mov
ret
cmp
xchg
sbbb
sahf
ss
pop
jo
jns
push
jne
jbe
cmp
adc
insl
cld
push
xchg
ror
insl
xor
add
pushf
lock
rorb
mov
mov
inc
and
loopne
fwait
cmp
xchg
add
mov
enter
jne
jbe
jo
leave
cmp
test
int
sub
loop
xor
stos
mov
sbb
rcll
cmp
hlt
mov
fisttpl
nop
test
jg
mov
xor
jmp
outsl
cld
adc
mov
test
xor
data16
fimuls
cmp
push
in
pop
out
inc
and
pop
sub
push
inc
lds
pusha
outsl
fs
mov
or
data16
nop
call
jg
out
mov
mov
mov
push
dec
movsb
xchg
inc
sub
xchg
leave
xor
loope
or
shr
push
sbb
lahf
mov
fsubrs
loope
pop
rcr
std
pslld
push
sub
nop
bound
pushf
mov
insl
pop
xor
sahf
insb
push
repz
rcrb
mov
pusha
lds
xor
into
fistl
movsl
xor
inc
cmp
mov
jg
pop
inc
movb
aas
std
adc
int3
mov
es
push
push
scas
push
adc
inc
std
cs
in
sar
push
pop
cmp
add
xor
push
add
shll
cmp
dec
cld
inc
pop
ljmp
test
sarb
jns
cmp
mov
notb
lock
fsubl
inc
cmc
xor
adcb
mov
popa
push
ss
dec
popf
sub
test
jae
icebp
pusha
xor
fmul
add
imul
and
popf
jecxz
xlat
or
dec
or
mov
fstl
inc
mov
or
mov
leave
mov
xchg
out
cmp
mov
std
and
ror
push
sbb
js
das
lret
push
inc
imul
jae
inc
and
repz
mov
iret
clc
aas
mov
testl
jae
xchg
imul
pop
adc
jbe
subl
adc
leave
rcrb
stos
sbbb
movsb
pushf
lcall
jnp
cmp
repz
repz
outsl
add
roll
push
js
pushf
lret
test
cwtl
push
dec
or
out
pop
dec
popf
mov
lret
in
out
push
in
psubsb
out
fs
ret
xchg
or
push
mov
fs
jp
push
push
jno
cmp
ret
push
sti
in
sub
cmp
jae
mov
mov
cmp
insl
mov
nop
inc
sbb
mov
lods
ss
xor
or
mov
inc
rcrb
jg
mov
lds
cmp
iret
popl
add
push
notb
rep
mov
jne
jo
and
loope
int3
clc
adc
pushf
cli
in
fnsave
inc
push
push
mov
inc
mov
jle
mov
pop
sbb
stc
rorl
push
push
pop
inc
push
mov
cmp
ficoms
repnz
pop
daa
orl
or
xchg
mov
inc
sbb
or
mov
push
xchg
popa
dec
and
dec
jne
push
lahf
lret
addr16
mov
push
xchg
xchg
fsubl
inc
xchg
pusha
sbb
mov
sti
das
lds
jno
xor
mov
rorl
pop
in
push
push
fldenv
xchg
and
add
sub
push
lcall
xchg
aad
add
adc
inc
xchg
dec
inc
jb
xor
push
adc
cmpsb
adc
scas
push
push
mov
adc
xchg
mov
ljmp
add
sbb
ret
fwait
mov
lcall
push
icebp
leave
adcb
sub
push
jo
sub
jae
rcrl
xchg
push
add
iret
stc
push
test
cmpb
mov
aad
sub
orl
outsl
add
iret
push
sub
fs
test
add
js
andl
mov
mov
fmull
test
lea
mov
out
in
je
fildll
sbb
sti
mov
sub
je
inc
jle
ffree
je
sub
test
jmp
lret
xchg
sub
pop
fstpl
in
xor
jg
xorb
push
add
cli
int
cmp
sbb
jge
shl
andb
repnz
lcallw
addl
stos
test
es
adc
and
movsl
dec
arpl
aam
mov
cmc
es
inc
dec
mov
mov
dec
and
mov
sbb
loopne
sub
xlat
mov
and
stc
push
mov
push
pop
sbb
pop
or
faddl
jnp
mov
push
imul
es
jb
ficompl
lret
je
hlt
insl
cmpl
adcb
dec
sub
xchg
cs
out
testb
cld
gs
gs
mov
mov
mov
push
mov
push
or
fcomip
cli
lds
pushf
inc
push
test
in
jmp
jnp
test
cli
push
or
mov
or
xor
out
stc
lret
jae
pop
jmp
jns
or
inc
cmpb
lock
lods
cltd
dec
push
das
and
cmp
int
cli
push
mov
push
mov
push
mov
add
sar
dec
lock
mov
xchg
rorl
lret
inc
lahf
pop
push
imul
push
fiaddl
add
pusha
jge
fwait
cmp
dec
ss
pop
js
mov
push
mov
mov
loope
in
pusha
lret
or
push
fstpt
push
xchg
mov
fwait
and
add
out
or
stos
out
aaa
movsl
mov
xor
cmp
hlt
lcall
inc
xor
hlt
mov
push
jns
mov
ja
clc
mov
cmp
test
jmp
mov
ret
out
and
fsubs
pop
pop
inc
stc
mov
test
sub
adcb
sub
push
mov
in
out
adc
subb
addr16
adc
or
mov
test
insb
mov
cli
mov
mov
aas
fidivrs
xor
adc
pop
in
or
lret
scas
std
in
jbe
jle
dec
jno
push
popa
popa
sti
unpcklps
enter
sub
adc
jbe
stc
idivl
sbb
fbstp
shr
pop
dec
or
pop
shrb
les
or
mov
cltd
jmp
cmp
test
aad
pushf
pop
cmp
lret
or
cmp
bound
mov
jns
xchg
in
xchg
into
scas
test
mov
fs
mov
mov
mov
mov
repnz
lea
mov
and
int
ret
mov
jo
xorb
mov
pop
stos
in
into
mov
push
or
loope
cltd
loope
mov
push
adc
pop
xchg
mov
js
push
xchg
mov
rclb
test
fistps
stc
subps
or
icebp
pop
addr16
xor
fisubrs
icebp
test
data16
enter
pop
mov
arpl
pminsw
mov
sbb
orb
dec
xor
jno
and
jo
ja
xor
ficoms
sub
add
dec
mov
lods
stc
fildll
mov
sbb
call
shl
je
mov
add
fcmovne
pop
mov
jl
or
insl
inc
clc
mov
rclb
push
push
repnz
fists
dec
push
mov
sbb
sub
mov
mov
mov
xor
subb
int
inc
shl
xchg
cli
in
fldenv
push
orl
push
xor
test
mov
pop
and
mov
subb
pop
in
inc
sub
xchg
dec
push
insl
mov
jge
jns
mov
dec
aam
dec
cmc
inc
xchg
repz
pop
and
das
and
scas
push
pop
stos
push
repz
jae
cs
mov
adc
cmp
push
mov
sub
xor
cwtl
int
cmpsl
or
cmpsb
push
mov
adc
jecxz
ret
test
sub
xor
movswl
nop
and
lods
push
lock
enter
rcrl
popf
mov
gs
push
movsb
es
jle
out
mov
leave
leave
loope
xor
in
insb
fidivl
xor
xor
add
mov
cmpsb
push
cmp
add
dec
sub
push
jnp
arpl
pop
aam
jl
cmpsl
xor
push
bound
pop
mov
or
sbbl
add
bound
mov
andl
add
jmp
ljmp
xorb
xchg
repz
cmpsb
cmpsl
out
insb
js
jle
fsubs
push
mov
push
dec
lcall
adc
movsl
xchg
pop
lret
pop
add
hlt
dec
add
jecxz
addr16
mov
xor
cld
xchg
inc
mov
and
adc
push
test
ljmp
test
push
insb
jo
mov
and
sbb
sub
mov
mov
pop
push
jo
ljmp
or
sahf
ret
add
loop
mov
pop
stc
mov
sub
stos
pop
jae
movsl
outsl
mov
xchg
jns
push
cmpsb
bnd
xor
mov
std
mov
dec
jmp
iret
and
stc
jmp
dec
pop
xchg
and
loope
inc
sbb
int
mov
imul
push
je
xlat
jl
xchg
xor
mov
pop
pop
sbb
rcl
xchg
xchg
mov
adc
fidivl
ja
dec
push
or
mov
jle
lret
adc
imul
xor
inc
cltd
xor
movsl
add
add
mov
sbb
dec
pop
or
lds
nop
insb
das
fldl
or
jmp
xchg
xchg
xchg
and
insb
lret
xor
xchg
add
jecxz
sbb
push
out
popf
cmp
pushf
outsb
ljmp
and
xchg
fadds
mov
nop
lret
xor
xor
dec
dec
push
mov
cmp
add
dec
push
std
adc
push
iret
inc
shlb
mov
mov
mov
je
lret
xchg
lcall
mov
adc
pop
flds
mov
push
addb
fnstcw
mov
jmp
int3
mov
int3
dec
cli
xchg
pop
xchg
fwait
mov
ss
adcb
mov
std
push
test
sbb
ret
dec
push
test
sbb
leave
jecxz
inc
int3
cmpsb
dec
ja
fdivrp
jmp
leave
je
pop
mov
fs
adc
dec
sbb
add
sbb
in
loope
aaa
xchg
out
lret
inc
xlat
add
adc
dec
aaa
insb
jne
ret
fisubs
sarb
sub
mov
popa
cld
rcr
jecxz
mov
movsl
adc
pop
mov
fdivl
dec
cltd
dec
dec
and
mov
fcmove
cmp
xchg
push
jno
sbb
inc
hlt
sbbl
pop
lahf
ret
mov
xchg
out
add
rolb
pop
lods
fidivrl
ss
push
jecxz
testl
mov
cmc
xor
mov
int3
cmc
incb
xchg
sbb
decb
mov
loope
cmp
mov
insb
and
aad
inc
fistps
scas
push
gs
sbb
mov
inc
mov
jnp
dec
movsl
ds
cld
in
inc
int3
add
push
or
or
cmp
addr16
or
inc
sbb
dec
loop
push
adc
loopne
out
and
aad
mov
test
jecxz
inc
imul
xchg
arpl
sub
mov
sub
lds
aam
roll
paddd
movsl
or
imul
pop
rclb
mov
ss
movsl
mov
mov
dec
enter
sub
imul
insl
and
int3
int3
sub
sub
cmp
jne
in
lods
mov
sub
adc
mov
cmpsl
xor
jmp
fidivs
adc
roll
clc
inc
mov
push
cmpsl
lods
loop
rcrb
aas
fiaddl
mov
enter
sbb
decl
inc
or
movsb
jb
sub
jbe
mov
inc
aas
cmp
call
lock
insl
mov
hlt
shrb
into
fdivrl
push
outsb
subb
mov
mov
mov
ret
xor
push
push
push
push
jg
push
iret
out
push
sbb
xchg
mov
add
jnp
push
jbe
loop
shrl
cmpsl
jbe
fdivrs
push
test
fnstcw
add
pusha
fmull
incb
sub
lahf
pop
add
ljmp
or
xchg
mov
lods
roll
push
ret
clc
aad
shlb
cmp
and
clc
data16
das
out
fildll
add
shlb
sub
inc
mov
addr16
ss
sar
outsb
test
test
lret
ss
dec
clc
lret
mov
xor
ss
push
aam
pop
cmc
jp
or
lock
sub
and
lds
loop
in
aas
fwait
mov
push
cmpb
pop
lret
mov
sbb
xchg
insl
test
and
xchg
sbb
sub
in
push
in
stos
dec
xchg
lds
mov
mov
test
and
push
andb
xor
scas
jle
js
or
push
inc
mov
aad
sub
negl
mov
icebp
xchg
jns
or
das
pop
lahf
int
rcrb
mov
insb
pusha
sbb
loop
fdivrs
int
dec
mov
pop
jae
pusha
subl
outsb
mov
aam
les
add
mov
sbb
xchg
push
aam
cmpsb
mov
mov
push
dec
cmp
addr16
push
and
ja
inc
lret
cmp
pop
cmp
xchg
sbb
mov
add
lds
pop
sub
ret
cld
subl
or
pusha
mov
pop
sbb
dec
cmp
inc
es
push
add
push
movb
hlt
xchg
sti
mov
mov
xchg
fidivrl
sbb
repnz
out
test
inc
mov
and
repnz
adc
push
xor
movsb
nop
rclb
dec
inc
aas
sub
fimuls
lds
mov
inc
xor
insl
xchg
jb
adc
xor
adc
push
lret
and
ja
sbb
loop
dec
sub
scas
idiv
iret
xor
jle
cmp
and
xor
jnp
jg
rcl
pop
xchg
or
sub
inc
fldl
cltd
subl
and
fnstenv
or
cli
pop
lods
shlb
or
push
adc
movsb
and
add
ljmp
cli
push
push
pop
sar
sbb
xchg
sbb
pop
cmp
fisubl
xlat
jnp
mov
and
dec
fsts
fstps
add
cs
imul
pop
sub
jmp
mov
pop
sub
fstpl
xchg
push
mov
pop
push
add
icebp
inc
cmp
adc
int3
mov
cli
lea
aaa
sub
adc
and
sub
pop
divl
movsb
out
sbb
aam
jns
lret
addl
push
xor
sbb
int3
jle
pop
mov
adc
loope
pop
add
lods
sti
int
pop
test
xchg
lret
xchg
std
arpl
add
add
loope
sub
push
jmp
sarb
add
or
or
xchg
jbe
fsts
fdivl
ds
outsl
add
cmp
out
popa
xchg
and
adcb
xchg
pushf
jecxz
cmp
rorb
adc
shlb
mov
dec
jb
inc
inc
cmpsl
sbb
mov
cmp
ret
add
push
popf
cmc
inc
addb
mov
lock
xchg
shll
idivb
mov
sub
add
scas
je
push
movsl
es
mov
hlt
cltd
mov
sub
clc
lahf
stos
das
sbb
cmp
jp
lea
cmpsl
mov
out
ret
into
cmc
imulb
and
inc
xlat
mov
ja
movsl
aam
or
and
loop
repz
fs
imul
addr16
icebp
or
leave
pop
push
outsb
mov
in
loop
cmp
xchg
ljmp
outsl
dec
sub
fsubrs
cmc
sti
push
jl
loope
stos
imulb
bound
test
aas
stos
sbb
sub
adcb
stos
adc
scas
sbb
and
mov
repnz
loope
cmp
nop
lock
fnstsw
dec
test
jnp
sub
stc
xchg
fcmove
jno
xchg
gs
dec
lahf
push
cmp
sbb
lahf
or
cmc
sti
mov
adc
sbb
stos
jge
or
lahf
pop
lds
cmp
loop
mov
loope
pushf
pop
add
cmpl
sub
imul
add
jns
jbe
lahf
push
imul
into
add
add
lods
mov
and
jnp
push
loop
xchg
inc
add
push
jmp
nop
push
sarl
popl
adc
sbb
aaa
push
mov
loop
jne
loop
out
cmpsb
xchg
fldcw
inc
scas
mov
push
aas
movsb
pop
add
test
icebp
and
stos
mov
and
pop
imul
data16
mov
fdivs
and
xor
adc
outsl
inc
shrl
mov
jae
pushf
xchg
or
push
pushf
jge
inc
add
insb
ss
jle
scas
or
push
sti
mov
jno
push
pop
adc
hlt
ficoml
scas
xchg
mov
mov
leave
xor
aad
xor
sbb
loop
or
int3
popf
leave
mov
enter
jmp
jb
bound
xchg
out
sbb
inc
flds
sarl
roll
adc
jmp
push
inc
sbb
loop
mov
into
lret
dec
int
call
push
push
stos
add
mov
sbb
ljmp
roll
rep
jne
jp
shl
sbb
sbb
cmpsb
rolb
shll
mov
mov
jmp
mov
in
xor
sub
das
sub
mov
shll
sub
cmp
sbb
push
bound
testb
mov
cmp
shll
insb
mov
subb
mov
mov
sub
dec
scas
mov
jl
js
sbb
outsb
daa
insl
fcmove
js
scas
sti
rolb
lahf
fs
je
addr16
js
mov
in
dec
or
inc
mov
loope
lds
add
fwait
lods
dec
xchg
xor
pop
divb
mov
call
pop
pop
shll
cmpsb
stc
jl
mov
mov
shl
mov
inc
incl
das
pop
push
sub
mov
sub
pop
push
dec
cmp
dec
data16
cmpsb
xchg
mov
lds
and
dec
inc
addr16
push
lret
mov
lcall
pop
insb
jb
aad
mov
in
fwait
xchg
nop
xchg
mov
popa
in
mov
mov
icebp
repnz
xchg
xchg
sub
idivl
adc
sti
sbb
dec
dec
aad
daa
xor
int3
aam
movl
bound
pop
dec
add
aam
sub
inc
fwait
cmp
xchg
xchg
daa
in
sahf
mov
or
fbld
dec
jmp
mov
jmp
hlt
es
rcll
cltd
xchg
add
dec
lcall
cmp
subl
lea
xchg
jp
dec
stc
pop
or
iret
cmpsb
xor
pop
sbb
push
mov
pop
inc
mov
inc
ds
adc
sbb
in
dec
cmc
outsb
pop
or
mov
push
movb
jecxz
inc
movsb
or
push
lret
cltd
int
pop
sub
clc
inc
xor
sbb
pop
repz
pusha
rcrl
xor
xlat
mov
mov
orl
and
add
xchg
into
fcoml
das
nop
popa
add
mov
xchg
or
cmp
loopne
xor
mov
lret
jae
or
add
ficompl
inc
addr16
stos
je
js
fstpl
iret
xor
popf
std
mov
aad
jbe
test
cmpsb
dec
xchg
mov
test
mov
pop
mov
xor
mov
scas
sub
pop
pop
xchg
ret
pop
push
arpl
adc
cmp
repz
push
scas
xor
in
les
in
and
xor
test
jnp
inc
cs
sbb
xor
out
pop
gs
mov
add
les
scas
andb
lahf
data16
cmpsl
popf
jo
sub
cmpsl
int3
xor
outsl
out
stos
es
cmp
and
call
push
aad
call
sbb
retw
dec
xor
arpl
mov
cmp
mov
push
or
fidivs
inc
dec
arpl
xchg
xor
int3
sbb
ffreep
rcrb
imul
pop
dec
sbb
test
sub
inc
xorb
shlb
xchg
mov
test
call
push
or
adc
dec
sub
loope
mov
data16
sub
mov
pop
loope
xor
inc
sti
es
sub
rcll
ret
mov
jnp
mov
xchg
div
mov
cmp
jnp
mov
je
xchg
sbb
pushf
pop
pop
adc
stos
rol
imul
ds
cli
xor
loop
dec
cmc
xor
dec
popa
push
or
in
jp
out
cwtl
sub
push
ds
pop
lret
in
adc
mov
xor
xchg
pop
lods
sbb
push
push
lahf
jg
das
pop
and
scas
mov
std
adc
std
mov
dec
loop
shll
mov
shrb
into
or
pop
int
imul
loopne
adc
ficomps
sbb
adc
mov
add
fldcw
ror
adc
add
scas
in
imul
ss
call
push
mov
paddsw
push
mov
lock
stc
sub
lods
cmpb
inc
fisttpll
lret
bndstx
ss
mov
mov
imul
in
jno
sahf
push
or
inc
jbe
mov
push
or
subb
lahf
lock
mov
popa
lahf
jl
xor
xor
and
scas
cli
jo
sbb
jmp
les
pushf
cmc
in
scas
and
mov
clc
call
std
nop
call
dec
mov
or
pop
flds
jo
push
aas
femms
pop
imul
outsb
clc
and
xlat
sub
jns
call
xor
cld
mov
sub
cmp
lcall
or
and
stos
adc
xor
jecxz
mov
movsb
repz
test
push
sahf
lea
insb
dec
dec
and
cmp
push
test
xlat
xor
iret
leave
add
push
into
jbe
mov
xor
rcll
and
cli
int
fisubl
stos
pop
aas
jo
sbb
mov
and
adc
js
repnz
cld
mov
das
mov
adc
aas
dec
jno
cld
and
test
lahf
fists
cmp
add
xchg
pop
cmp
rorb
ror
push
mov
mov
sbb
ja
sbb
in
cmp
mov
je
jbe
mov
pop
dec
push
sbb
bswap
push
mov
adc
push
repz
repz
movsb
div
pop
gs
push
or
push
roll
in
adc
test
dec
call
cmpsb
and
std
outsb
jmp
gs
mov
and
gs
cmc
cmp
pusha
mov
add
mov
jnp
mov
stc
xor
stos
push
jb
add
ss
dec
pop
pop
call
in
dec
mov
xchg
cli
iret
mov
push
shll
mov
sub
mov
stos
addr16
pop
ss
cmp
lea
loop
cmp
mov
cli
cmp
mov
rorb
cwtl
xchg
pusha
push
pop
popf
adc
flds
std
push
jmp
xorl
add
mov
popf
pop
sub
loop
jno
push
jle
xchg
repz
cmpsb
cli
mov
or
xlat
out
bound
push
icebp
adc
movl
movsl
mov
xor
push
subl
mov
lock
pop
jb
pushf
jnp
fmull
test
xchg
push
es
add
fnclex
xlat
jno
push
shr
mov
rorl
shll
adc
adc
sub
mov
push
in
leave
push
xchg
adc
pop
jbe
jnp,pt
lret
push
out
xor
cmp
rclb
pop
pusha
rcrb
sbb
xor
ja
sub
mov
insb
add
mov
bound
add
and
jnp
hlt
aaa
ss
sub
jb
pop
addb
cli
push
stos
or
mov
inc
xor
xchg
push
clc
push
dec
jo
pop
std
inc
loope
adc
shrl
pop
sbb
push
insb
add
xorb
mov
and
pop
loop
int3
push
imul
adc
mov
jg
out
add
push
or
push
or
inc
inc
stc
mov
rcll
xchg
arpl
mov
inc
sbb
mov
cmp
sbb
pop
fdivrs
ret
enter
lahf
fstpl
mov
mov
cmpsb
jge
or
das
lret
dec
pusha
dec
pop
jae
pop
into
inc
jcxz
shlb
or
rcrl
jns
mov
xchg
movl
jne
in
jno
lret
stos
push
mov
mov
aad
xchg
cwtl
or
mov
push
push
xor
jb
xor
repz
or
stos
cs
xor
mov
push
mov
cmp
add
push
decb
enter
cmp
dec
cmp
push
stos
jae
mov
int
jno
pop
addr16
mov
pop
loopew
cltd
sbb
add
sbb
or
nop
push
insb
or
inc
or
fdivp
mov
clc
and
imul
add
push
call
jno
push
inc
nop
enter
fstl
ret
fs
push
sub
push
subl
std
ds
cmp
loope
lea
add
xor
pop
or
xchg
mov
xorb
xor
outsl
add
push
add
sub
loopne
std
cmp
add
ficoms
sahf
jns
jno
pop
lods
pop
test
jnp
lock
nop
mov
sti
sti
push
int
int3
stos
xor
mov
fdivl
xchg
shll
insb
push
xor
xor
mov
cmpsl
aas
dec
push
adc
cmc
aad
insl
mov
pop
imul
ret
addb
jbe
xchg
adc
sbb
imul
inc
sbb
mov
aam
push
cs
mov
mov
sub
cli
lods
mov
lock
pop
add
dec
push
pop
jmp
mov
lret
psubusb
cmc
fadds
adc
andb
mov
insl
or
addr16
rcl
shrl
out
bound
mov
js
nop
lret
lock
loope
add
ljmp
aad
mov
test
aam
add
lret
loop
inc
das
cmp
ficomps
sub
scas
arpl
out
fs
pop
jmp
adc
or
in
mov
inc
xlat
cli
or
pop
cmp
rclb
ljmp
sbb
inc
popf
les
jbe
xor
inc
mov
push
idivl
cmp
lcall
add
neg
xor
sub
fdivl
ficomps
repz
push
cld
dec
es
inc
daa
mov
jns
cltd
add
shl
xchg
cmp
popf
mov
rcrl
add
jbe
fbstp
bound
or
lods
or
xchg
adc
cmc
fstpt
xchg
mov
inc
add
fists
lahf
dec
mov
xacquire
sub
jnp
cwtl
das
xchg
adc
pop
test
pop
and
icebp
and
data16
adc
mov
int3
addr16
mov
jg
rcrl
leave
push
dec
push
aam
push
sbb
cmp
xchg
or
fstpl
lahf
test
xor
mov
pop
adc
fisttps
in
add
movsl
sti
in
shlb
out
lret
fwait
ljmp
dec
into
jb
leave
mov
insl
sahf
ror
dec
jo
mov
dec
push
xor
push
sub
out
add
or
adc
add
xor
cmp
rcll
push
decb
push
jo
testb
and
add
add
mov
jno
jl
ljmp
mov
shlb
mov
mov
outsb
mov
das
gs
jae
pop
sbb
lds
push
pop
adcb
sbb
filds
or
cmpsl
test
scas
dec
mov
sub
push
or
sbb
loopne
call
push
dec
sti
mov
or
sub
scas
xchg
pop
adc
pop
test
cmp
sbb
cmp
mov
in
outsb
mov
xor
dec
movl
rcll
cmpsl
std
and
cmpsb
inc
test
pop
test
mov
sub
adc
in
and
pop
ja
leave
lods
add
or
xor
jne
rcrl
xchg
pop
mov
shll
cmp
mov
push
popa
pop
fcmovnb
sub
xor
imul
popa
xor
fmuls
iret
push
mov
xchg
call
std
sub
mov
mov
insb
neg
mov
fidivs
fisubrl
repz
or
xchg
and
and
xchg
out
stos
sbb
test
xchg
dec
inc
sub
out
dec
mov
mov
stc
mov
mov
xor
jnp
test
sahf
leave
pop
jb
sbb
rclb
inc
sub
inc
or
je
cmc
cmp
push
xor
test
outsl
clc
sbb
push
cmp
pop
dec
xlat
and
lcall
dec
pop
adc
jle
jne
lods
inc
lret
mov
jne
rcll
sub
mov
jbe
push
adc
xor
push
icebp
mov
loopne
jae
xchg
mov
cld
fimull
sbb
sub
rcrl
mov
repz
sub
or
icebp
xchg
jmp
lods
ret
cwtl
jg
les
xor
cld
jne
add
scas
mov
dec
call
in
lret
xchg
int3
arpl
hlt
int3
out
adc
or
enter
jg
cmpsb
iret
sahf
ss
xchg
lods
repnz
imul
aad
movsb
inc
mov
data16
hlt
lahf
rclb
push
leave
mov
jle
inc
rolb
out
mov
mov
jecxz
cmp
lret
and
popf
cmp
clc
gs
stc
xor
imulb
lods
inc
gs
adc
push
jle
popa
inc
movsb
add
pop
inc
shrl
enter
rcrb
dec
xchg
rcr
xor
insl
sub
and
repz
adc
out
and
es
int3
stos
jbe
scas
andb
inc
icebp
scas
push
adc
jo
push
jmp
imul
lock
out
push
insb
mov
es
or
fidivrs
movsl
clc
push
mov
cmpsl
std
sbb
mov
cmp
loopne
sti
enter
cmp
mov
loope
push
mov
movsb
mov
mov
rol
jge
aaa
mov
out
negl
nop
cmp
mov
lods
enter
mov
sahf
arpl
dec
pop
cmp
sbb
daa
fwait
addl
and
ja
fmull
mov
pop
adc
arpl
stos
data16
aam
jmp
scas
aas
push
jecxz
and
xor
icebp
dec
pushf
sub
mov
sbb
rol
mov
cmp
sub
outsl
jp
xchg
sahf
inc
cmp
pop
lods
ja
add
mov
mov
shl
icebp
and
sarl
sbb
push
mov
pop
popf
in
xchg
cmp
loope
divb
cmc
cltd
push
xlat
lret
add
lods
dec
mov
jo
xchg
mov
inc
push
push
dec
ficomps
fwait
lret
mov
sti
xchg
movsl
mov
mov
lods
aas
int
sbb
test
adc
add
dec
shll
stos
insl
aas
inc
add
mov
aas
loopne
out
notl
fsubrl
fwait
sar
pop
lods
in
ret
and
mov
mov
or
test
int3
push
stos
cld
loop
insb
aaa
test
mov
cmpl
mov
test
or
cld
inc
pop
pop
je
sub
je
push
jb
push
adc
xchg
mov
sbb
scas
and
data16
popf
mov
pop
fs
subb
jge
sbb
pmulhuw
push
jp
xchg
xor
popl
mov
je
dec
subl
adc
jb
adcl
pusha
aas
mov
jne
jno
xchg
xchg
pop
lock
dec
adc
inc
lahf
xchg
mov
xchg
adc
filds
sub
notb
pop
pop
shrl
cwtl
repnz
dec
stc
push
pop
outsl
jmp
dec
cmp
or
push
push
imul
and
fmulp
xchg
push
std
ds
fldcw
lret
ljmp
leave
test
lret
inc
insl
dec
cmpsl
andl
xchg
jbe
push
xlat
icebp
stc
ss
push
xchg
fisubs
cmp
sub
daa
arpl
push
pusha
push
in
jmp
addl
sarl
shrb
ret
pop
adc
or
iret
jo
mov
rcll
decb
jmp
ret
outsb
addr16
stos
jne
lret
insb
icebp
pop
pop
xor
adc
clc
iret
es
push
lods
dec
jecxz
cltd
pop
push
das
cwtl
cmpsl
call
and
adc
in
enter
stc
mov
lods
pop
push
mov
xchg
or
insl
mov
jmp
scas
jae
inc
ret
popf
icebp
notl
test
icebp
shlb
mov
fs
inc
cmpsb
push
ljmp
sbb
test
jl
push
xor
stos
cld
mov
inc
jnp
cltd
ret
or
jae
pop
int
out
orb
mov
pop
in
into
xchg
xchg
mov
jno
in
daa
xchg
aam
jge
add
fisubl
xchg
lret
xor
sub
lahf
mov
roll
cmp
sub
adc
ret
movsl
dec
inc
pop
push
cli
les
mov
mov
push
jno,pt
and
cli
test
sbb
or
push
leave
lret
fsubr
lea
inc
jae
rcll
cmc
outsl
andb
lds
shr
into
nop
xchg
sbb
push
mov
jo
stos
shl
jp
mov
in
into
inc
inc
pop
lods
and
les
leave
push
enter
or
std
inc
cmp
aam
and
addr16
nop
mov
push
or
out
stos
mov
aam
sub
pusha
rclb
out
js
repz
movsl
xor
testb
mov
out
std
jae
fxch
enter
cmp
xchg
and
cmpsl
jb
mov
stos
imul
mov
inc
dec
fnstcw
mov
mov
test
loopne
in
aas
mov
lret
push
int3
mov
fucomp
rcl
imul
gs
mov
mov
push
int3
loopne
adc
pop
push
cmp
xchg
sub
or
mov
push
add
pop
enter
jae
movsb
inc
fistpl
into
sub
pushw
pop
sub
lock
iret
in
pop
pushf
jne
push
or
loope
imul
sbb
or
cmc
mov
sbb
clc
insb
or
and
cli
and
add
in
mov
sub
cmpsb
sbb
mov
notb
pop
sbb
repnz
xor
xlat
in
jb
popa
xor
inc
out
jle
lds
xor
aad
adc
sub
or
push
sbb
adc
into
in
repnz
ret
mov
rolb
mov
roll
mov
xor
rorl
out
sbb
dec
mov
insl
add
sbbb
push
xor
push
fbstp
imul
xor
push
xchg
jge
jbe
add
ja
fidivrs
jno
dec
stc
sub
xor
pop
jmp
adc
push
push
xchg
fdivrl
ljmp
push
repz
pop
loop
and
jle
cmp
subl
push
xchg
lods
jp
inc
shrl
dec
movsb
push
and
xchg
rsm
xor
hlt
bound
into
xor
adc
mov
dec
jns
xlat
jle
lods
movsb
scas
lret
push
ja
push
push
out
out
pusha
or
das
adc
fstpt
jb
jg
mov
inc
imul
iret
mov
mov
push
js
xlat
add
sbb
mov
in
iret
or
jge
vcomisd
inc
cmp
cmpsb
and
rcrl
inc
jge
inc
jnp
movsb
sub
mov
fdiv
idivl
push
jecxz
rcr
repz
aas
sbb
gs
mov
push
in
out
lahf
fbstp
bound
fiadds
int
lcall
xchg
inc
sub
lods
add
and
cmp
add
ja
pop
loop
jo
cmp
mov
xchg
push
xchg
xchg
hlt
scas
sbb
ja
mov
test
testb
and
out
sub
xchg
outsl
loop
outsb
mov
dec
movsl
xchg
mov
nop
jbe
jp
dec
cmpsb
int3
fucomip
or
inc
movsb
or
jecxz
outsl
pop
push
lea
push
mov
inc
sub
sbb
ds
pop
mov
jle
enter
or
es
scas
fidivl
ror
mov
mov
jno
cmp
sub
adc
nop
daa
mov
add
inc
lar
sub
jns
lods
push
mov
xor
das
dec
arpl
xchg
xchg
loope
sbbl
rcr
test
cmp
pop
shlb
xchg
jle
es
xor
pop
in
adc
mov
jb
push
int3
fwait
push
in
xor
and
mov
cs
mov
jnp
leave
aaa
adc
mov
cwtl
arpl
inc
enter
repnz
add
scas
movsb
jae
xchg
dec
cmp
dec
clc
mov
mov
cmpb
dec
mov
fs
outsl
imul
push
mov
frstor
xchg
dec
jno
push
add
xchg
mov
xchg
lds
fucomp
dec
mov
adc
movsb
or
jb
sub
ficoms
fld1
jg
adc
push
rcll
stc
popf
add
cmp
jae
stos
sub
aas
in
cmp
dec
jno
out
es
jb
mov
cmp
fdivrl
and
and
or
stos
inc
sub
mov
in
mov
repnz
jecxz
das
push
orb
push
and
mov
mov
adc
cmp
out
dec
push
shlb
addr16
stos
je
jns
pusha
xchg
or
push
dec
iret
mov
pop
repz
insb
cld
mov
jnp
popa
sbb
popf
and
std
scas
and
pop
aaa
sub
mov
sbb
aad
pop
pop
mov
sub
std
pop
hlt
mov
iret
enter
loope
addr16
or
stos
adc
and
mov
ljmp
mov
mov
xor
mov
push
push
dec
adc
mov
mov
cmp
insb
or
stos
inc
dec
mov
jns
sbb
fisttpll
sbb
scas
cmp
mov
test
clc
and
xor
add
repz
pop
sar
mov
cmpsb
cmp
pop
dec
jl
mov
sbb
jnp
test
mov
into
push
cli
adc
sub
adc
adc
faddl
mov
movsl
and
mov
jge
out
in
cld
xor
test
cs
jecxz
out
jne
icebp
xchg
xchg
push
loop
imul
inc
subl
cmp
mov
fsts
jmp
mov
popf
pop
icebp
push
xor
lods
repnz
jo
xor
mov
adc
push
cmpsb
out
cld
cmp
mov
pushf
jp
sub
mov
loopne
and
fwait
mov
out
popf
mov
push
xor
arpl
inc
and
inc
jl
or
push
mov
sub
mov
and
push
cmpsb
fmuls
push
sub
adc
sub
sub
jp
mov
data16
xor
cmpsb
int
fiadds
pop
sub
xor
mov
add
lcall
into
das
call
mov
addb
aam
iret
pushf
mov
jle
pop
sbb
icebp
stos
dec
inc
lret
cltd
ror
inc
dec
pop
jae
push
lret
mov
fsubl
and
ret
sbb
fsubr
sub
fwait
aas
pop
test
out
add
int
test
adc
add
adc
pop
mov
and
inc
cwtl
mov
mov
bound
xchg
popa
dec
ds
or
mov
clc
scas
jne
sub
dec
sbb
adc
inc
mov
fs
mov
aaa
or
adc
adc
push
mov
inc
rcrl
sbb
pushf
dec
xor
aas
out
enter
ja
push
add
rcl
mov
into
cs
sub
decl
jle
out
shr
pop
push
mov
cld
inc
lret
push
testl
test
daa
pop
xchg
and
daa
imul
jno
mov
jne
mov
fdivrl
mov
aaa
mov
mov
pop
push
outsb
jl
jne
and
mov
shll
dec
stc
sbb
popf
ljmp
mov
pop
adc
arpl
mov
and
shl
mov
sub
or
addl
push
pop
jmp
lret
xor
cs
fdivr
cmp
call
push
inc
pop
movsb
pop
cmp
cmp
xor
mov
sbb
idivb
mov
loop
push
sub
roll
scas
or
mov
and
inc
scas
jmp
add
das
adc
fdivr
in
adc
jge
mov
pop
cmp
push
ss
xchg
mov
mov
jecxz,pn
or
mov
xor
ror
addr16
push
cmp
sub
dec
outsb
jb
outsl
inc
cmp
mov
lret
pop
and
pop
scas
out
mov
mov
mov
frstor
shlb
frstor
cmpsb
test
fcomps
daa
xchg
push
stc
arpl
push
xchg
push
adc
jge
add
pop
loopne
pop
xchg
jnp
mov
das
pop
cmp
mov
das
add
ss
insl
fnsave
lods
imul
pminsw
in
stos
pop
pop
add
dec
aad
cmc
lret
inc
pop
sub
addl
cli
fidivrs
repnz
call
xchg
in
popf
loope
fadd
push
jl
mov
dec
cwtl
jg
jecxz
insl
imul
add
sbb
nop
fsts
fdivs
xchg
shlb
stos
push
inc
inc
xchg
push
jg
lcall
fwait
adc
pop
incb
loop
fs
call
mov
sti
test
sar
cmp
jbe
sub
sarl
mov
jne
loope
mov
sub
mov
or
sbb
cli
ljmp
jns
nop
or
mov
fisttps
ds
lds
jl
cs
xchg
cmp
inc
mov
imul
push
insl
jl
mov
sub
mov
xor
lods
loope
mov
ljmp
xchg
jmp
das
mov
dec
and
int
ret
xor
jno
mov
jnp
xor
xor
fidivs
lret
jns
mov
sahf
adc
jbe
xor
loop
push
jae
inc
jno
mov
aaa
add
push
dec
xchg
fistps
stos
lahf
out
xchg
sbb
test
jge
rolb
lds
scas
pop
pusha
les
ja
xlat
in
xor
clc
jecxz
fistpll
orb
jne
push
lret
inc
xor
aad
test
je
hlt
mov
sub
popf
das
fcompl
inc
lock
push
pmulhuw
xchg
add
ret
mov
pop
shlb
xchg
stos
mov
pop
int3
mov
outsb
dec
mov
jns
mov
push
xchg
iret
arpl
pop
out
mov
aaa
dec
mov
cmp
xchg
mov
mov
jno
gs
inc
call
test
pop
iret
add
in
and
push
adc
in
sti
loope
mov
ss
pop
jle
daa
das
insb
aad
pshufw
or
push
in
jmp
sbb
arpl
in
mulb
jecxz
in
mov
adc
sub
shrl
addr16
loopne
stc
in
iret
fdiv
sahf
pusha
mov
movsl
sub
add
cmpsb
aaa
or
xchg
insl
cltd
lcall
mov
imul
push
mov
outsl
adc
fisubrs
enter
mov
add
mov
stc
nop
loope
cmp
aaa
mov
cmp
jl
jb
push
enter
mov
push
hlt
mov
mov
jae
or
test
cmc
mov
daa
outsl
push
and
inc
push
xchg
jns
pop
out
mov
test
mov
fimull
ja
push
les
ret
in
push
mov
ret
jg
jns
push
xchg
lock
mov
aam
clc
push
xchg
push
fdivrs
popa
push
lahf
cmp
popa
jno
sbb
pop
push
push
xchg
fsubrl
ss
out
add
pushf
pop
clc
ljmp
push
fsts
orl
addr16
adc
mov
in
in
jbe
pusha
xor
xorb
fisttpll
loopne
leave
clc
dec
mov
sub
push
fs
movsb
orl
leave
dec
clc
pushf
das
mov
mov
lahf
je
pop
shll
add
mov
das
or
cmp
loop
rcll
pop
cmp
daa
jns
cmpsb
fisubl
mov
push
shll
frstor
loop
ljmp
lret
fildl
mov
rcr
mov
sbb
aaa
lock
and
pop
cmp
push
xor
jne
jle
jmp
clc
in
mov
cmp
fsubrl
lret
outsl
shll
jo
jl
addr16
dec
xchg
inc
sbb
push
lock
sbb
stc
insb
mov
adc
cmc
je
test
sahf
mov
int
ret
or
popf
mov
popf
mov
gs
inc
xchg
ror
lcall
adc
or
and
jp
inc
ja
pop
bound
fildl
xchg
cmp
fidivl
push
push
fcompl
jns
xchg
push
push
aad
or
push
out
xor
fiadds
inc
aam
ds
inc
sub
jae
out
push
dec
and
mov
sub
mov
aad
jge
fnsave
mov
add
fwait
lret
pop
pop
in
aam
aas
pop
int
lret
jle
movsb
pop
popf
mov
stos
xor
divb
out
aas
add
xor
js
outsl
mov
ret
lret
scas
mov
xchg
fstpt
push
and
outsb
sbb
cltd
js
push
adc
int
jae
sub
adc
fnstenv
int
aaa
nop
sub
push
mov
or
into
insb
adc
int3
push
inc
loope
xor
xor
shlb
outsl
inc
out
or
pop
fcoml
call
cmp
jbe
or
or
push
movsb
push
inc
les
mov
push
xchg
push
ret
dec
jno
jne
or
mov
or
lods
loop
inc
or
xchg
jp
jl
popa
dec
lret
scas
movsl
and
cmp
dec
jbe
fistpll
ss
aad
push
pop
xorb
inc
and
sbb
sub
or
pop
std
sub
mov
stos
dec
mov
mov
xor
ljmp
bound
xchg
test
xor
sbb
addr16
lods
jae
and
hlt
movsl
sarl
mov
xchg
sbb
test
aad
pop
ss
jl
outsl
out
pop
icebp
cmpsl
mov
ret
cmpsl
icebp
fisubl
or
out
fstl
pop
insl
mov
addl
loope
sbb
ficompl
js
cmp
push
push
inc
popl
ret
ja
mov
hlt
and
jge
mov
popa
push
sahf
cmc
push
lahf
adc
fistpl
fs
insl
stos
xchg
xchg
push
out
push
rorb
xchg
clc
xchg
fcom
mov
jo
shrb
out
pop
pop
sub
jbe
jg
cmp
orb
xchg
in
fwait
xlat
rcl
mov
dec
ret
aam
lahf
mov
xchg
push
xor
insl
push
mov
mov
or
sub
and
push
fdivrl
push
push
pushf
call
movsl
and
mov
cs
mov
inc
shrb
pop
mov
and
push
mov
xchg
mov
add
out
aad
mov
ja
ds
popf
mov
lds
sub
adcl
jb
jge
std
adc
dec
push
and
ljmp
cmp
lahf
in
cmp
cmp
into
pop
push
jb
jg
jae
or
inc
or
sbb
pop
mov
mov
push
pop
jno
movsl
push
mov
int3
cmp
lds
mov
mov
jo
push
xor
sub
popa
mov
outsl
add
mov
jmp
push
push
mov
clc
pop
cmp
sub
es
adc
push
cmp
cld
xor
daa
and
xchg
sti
aam
add
sbb
lods
xor
into
sbb
xor
and
cli
and
jmp
outsl
jecxz
out
test
and
subl
sub
mov
jo
jns
add
test
mov
lret
jle
ret
dec
mov
push
pop
sub
imul
rol
test
testl
dec
jbe
loope
xchg
xor
je
mov
sbb
pop
sub
dec
ret
bound
dec
loope
mov
mov
cmp
ds
pushf
lock
in
pusha
les
jnp
jno
dec
sbb
sub
outsl
enter
and
cmp
daa
adc
mov
push
stc
push
fcoms
sub
inc
add
sub
stc
imul
mov
rolb
dec
nop
aas
int
mov
mov
lea
push
xorb
pop
xor
aad
fs
jbe
orb
dec
xchg
xor
int3
les
pusha
pusha
enter
ds
lock
sub
andb
insl
jmp
fwait
stc
mov
adc
cmp
inc
xor
cmc
push
xor
and
repnz
loope
dec
push
and
jmp
je
in
mov
ficomps
cmp
fs
iret
insb
mov
enter
test
gs
push
rcrl
icebp
cmpsb
imul
int
das
aas
arpl
dec
add
inc
ljmp
jmp
repz
pop
lods
inc
and
int
outsb
fstpt
out
fstpl
cmp
std
call
pop
mov
ds
pop
xchg
sub
idivl
lods
jmp
insl
imul
rcrl
fisubs
lock
cwtl
dec
andl
mov
out
aam
cmp
mov
js
je
pop
xchg
in
rcr
jns
fmull
les
push
int3
psubsw
fisubs
and
jl
stc
out
mov
sbb
daa
and
cmpl
adc
leave
xor
ret
cld
inc
out
pop
inc
xchg
and
xlat
mov
add
and
push
negb
repz
data16
add
aaa
imul
inc
and
fidivrl
push
add
ret
orb
imul
fisttps
mov
in
movsl
sarb
jg
lret
jg
mov
push
push
push
sbb
mov
mov
inc
sahf
call
icebp
js
sub
push
arpl
outsl
imul
pop
add
ret
mov
xchg
inc
and
cmp
test
fdivrs
sarb
popf
add
jo
cmp
sti
daa
jmp
je,pn
xor
sti
icebp
inc
jno
mov
rcrb
stos
jmp
pop
test
add
sti
int3
stos
sub
imul
iret
fwait
je
cmpb
xchg
repnz
inc
in
nop
or
es
mov
fs
add
hlt
xor
dec
bnd
sub
adc
adc
add
scas
cs
addr16
sub
xor
rcll
shr
sub
je
int3
pop
xor
int3
cs
popf
ds
pusha
fwait
sbb
mov
inc
xchg
pop
inc
push
mov
adc
mov
bnd
rol
shll
mov
mov
add
call
push
out
mov
sbb
xchg
add
leave
xchg
and
mov
call
pop
arpl
cmp
adc
sbb
xchg
mov
mov
cmp
dec
mov
jmp
test
sub
jno
sbb
inc
in
mov
add
insl
add
cmp
fistpll
fsubl
ljmp
pushf
xchg
bound
lahf
push
imul
cwtl
or
pop
add
cmp
dec
decl
jmp
lods
and
data16
loopne
dec
xlat
clc
lahf
cmp
faddl
insb
inc
push
test
btr
fs
notl
pop
xchg
cmp
pusha
aas
sub
cmc
push
or
pusha
call
pop
mov
xchg
in
xchg
daa
push
xchg
mov
adc
out
pop
leave
jmp
es
xchg
pop
int3
cmp
aam
scas
mov
aad
int
xor
sub
cmpsb
mov
mov
enter
mov
sbb
repz
test
test
sti
int3
pop
das
sub
fldt
out
int3
in
int
scas
fnstsw
jo
pop
hlt
push
sub
arpl
dec
mov
add
imul
dec
mov
out
xchg
out
jae
shll
aaa
dec
mov
inc
mov
mov
adc
enter
adc
cld
test
or
ss
cmpsl
sarb
fcomps
cmc
pop
inc
add
fcompl
ffreep
lods
xor
inc
mov
les
mov
sbbl
mov
push
repz
call
pushw
call
adc
jmp
jb
test
or
jp
out
dec
loop
add
add
sbb
ja
sub
data16
mov
xchg
cmc
data16
push
out
add
lds
mov
fnsave
mov
mov
mov
xor
and
mov
adc
inc
adc
les
into
or
mov
xchg
sarl
je
std
pop
pop
jl
push
xchg
iret
lock
mov
outsl
ret
or
adc
fsubl
mov
or
jle
andb
nop
sti
out
cmc
repnz
data16
outsl
mov
push
cwtl
movsl
mov
pusha
push
sar
idivl
movsb
sbb
sub
inc
in
dec
xor
add
push
cmc
in
scas
aaa
stos
cmp
mov
cli
lea
xchg
cmp
jns
sahf
lea
or
push
in
rcll
push
dec
push
xchg
xchg
stc
xor
addr16
sbb
jl
data16
subb
xchg
je
push
xor
mov
test
pop
xor
dec
vpinsrw
daa
adc
mov
clc
sbb
adc
mov
bound
je
mov
les
pop
stos
faddl
in
jecxz
mov
xlat
cmp
ss
sarb
fidivrl
daa
push
pop
push
and
inc
xchg
fdivrl
int
testl
xchg
repnz
icebp
xor
hlt
jae
andb
andl
clc
pop
sbb
mov
or
sbb
mov
test
sbb
dec
sbb
sub
lret
sub
cmp
pop
stc
mov
fs
out
test
push
push
js
pop
mov
inc
imul
adcl
test
add
in
imul
dec
sahf
xchg
push
idiv
lods
sti
icebp
inc
andb
popa
mov
pop
mov
cmpsb
es
inc
mov
inc
test
inc
cld
push
movsl
sub
jne
shll
and
or
aaa
push
mov
sbb
pop
adc
add
mov
xor
xchg
idivb
pop
std
lcall
movsl
jae
or
sbb
mov
jne
ret
mov
loop
push
pop
mov
mov
loopne
cmp
je
scas
inc
or
imulb
add
adc
ret
pcmpgtd
dec
addr16
mov
test
cli
pusha
dec
or
or
lret
jbe
mov
cli
add
outsb
sahf
fsubr
adc
insb
cmp
mov
inc
push
mov
add
sub
ret
cmp
xor
sti
jne
ret
dec
adc
sti
cmpsl
dec
loope
lret
and
aas
loop
das
mov
fcoms
inc
out
adc
fidivs
lods
cmp
enter
and
repnz
std
stos
mov
jno
mov
xor
rorl
scas
or
stos
jg
or
pop
rcl
fisttpl
xor
insl
add
jo
scas
stos
sbb
dec
pop
mov
cmp
jnp,pt
movsl
fcmove
or
inc
xchg
mov
loop
push
popa
mov
cmc
add
scas
dec
call
push
mov
add
idivb
faddl
ret
pop
jmpw
cli
jge
aaa
sahf
icebp
loopne
xor
fstps
push
push
mov
mov
mov
outsb
loopne
mov
je
ds
mov
and
pop
mov
jb
shr
cmp
sub
movb
push
aam
sahf
jle
int3
inc
sbb
push
mov
out
cwtl
pop
adc
cmp
and
aas
enter
sbb
push
ja
add
scas
das
clc
std
mov
insb
pop
push
out
mov
inc
adc
test
add
mov
and
push
dec
pop
add
cmpsb
fbld
or
or
add
jge
iret
insl
sbb
imul
push
pop
mov
cmp
and
iret
adc
pop
xchg
scas
int
daa
dec
popa
xchg
dec
and
dec
sbb
clc
mov
loope
xor
iret
loop
enter
push
or
imul
bound
stos
out
jp
xor
ljmp
cmp
xchg
js
mov
in
pop
call
out
les
push
xor
mov
out
cli
xchg
loopne
xor
adc
pop
in
pop
push
lret
outsl
dec
pop
push
xchg
gs
add
jmp
jg
cmp
pop
jp
pop
xchg
xlat
adc
outsl
and
stos
fcmove
pusha
cwtl
mov
add
push
jmp
frstor
jno
dec
jp
scas
mov
cltd
push
insl
ljmp
leave
sub
lcall
pop
pop
mov
push
aad
in
push
neg
and
loope
adcb
inc
pop
mov
xor
out
vpmuludq
ret
data16
add
scas
dec
scas
sub
mov
dec
adc
mov
jnp
mov
in
pushfw
insl
out
sar
add
adc
xchg
push
jnp
movsb
movsb
push
or
ljmp
stc
add
lret
out
scas
cmp
mov
xor
inc
cmpsl
flds
addb
xor
add
add
push
enter
xchg
lret
sub
andb
data16
add
cmc
fadds
or
popf
push
inc
aad
movsl
ds
adc
xchg
lahf
lcall
mov
dec
mov
notb
jne
push
pop
popf
xlat
out
sub
scas
int3
adc
ds
sub
div
ret
dec
shll
sub
or
push
pushf
cmp
scas
in
xor
inc
xchg
pop
mov
loopne
sbb
or
loop
imul
dec
jl
sub
sarl
out
xchg
aad
inc
jo
mov
cli
mov
inc
test
ljmp
and
pop
cmc
inc
push
stos
sbbl
sub
lock
pop
sub
shlb
lret
leave
mov
pop
dec
push
push
cli
lods
test
adc
mov
jb
shl
and
fsub
sarb
mull
out
les
sub
outsw
mov
add
cmp
ret
shrb
mov
out
aas
jg
push
cmp
cld
sbb
insl
pop
mov
add
das
inc
lds
inc
mov
xlat
lock
cmp
lock
in
out
add
pop
in
push
jecxz
mov
or
scas
loope
jbe
jecxz
mov
inc
lods
jbe
mov
lods
outsl
lock
sub
jp
popf
bound
orb
xchg
or
push
push
stos
jge
stc
xor
and
in
and
xor
ja
cmpsb
push
loop
push
jns
mov
popa
ljmp
pop
lods
and
lret
test
pop
mov
iret
xchg
jne
lods
xchg
into
pusha
popa
cmp
in
shl
mov
into
and
mov
int3
xchg
adc
pop
popf
scas
inc
or
testb
orb
shrl
in
adc
dec
test
push
sti
and
sbb
mov
cmp
sub
shll
sub
sbb
adc
cmp
loopne
popf
sti
mov
cs
jg
int3
push
cmp
aam
scas
cmc
xchg
and
mov
pop
imulb
into
test
aaa
add
push
mov
rcrl
out
movsl
pop
in
ret
jb
stos
mov
or
jno
mov
add
out
push
popf
xchg
and
testl
sbb
mov
shlb
js
lret
dec
and
cltd
ljmp
add
adc
mov
push
push
xor
mov
jg
mov
or
pop
push
scas
xchg
in
xchg
pop
xchg
ret
mov
jns
fisubrl
mov
inc
cli
fidivrs
in
pusha
cmp
or
out
cmp
popl
std
add
pop
jg
cmp
inc
inc
stc
movsl
sar
push
dec
xchg
rcrl
fstpt
mov
and
inc
xor
inc
out
lods
xchg
sub
xchg
stos
in
xor
sub
out
test
adc
pop
inc
cmpsb
cli
call
cwtl
and
lock
sub
ljmp
mov
and
inc
sti
mov
xchg
jp
xor
sub
fmuls
and
pop
pushf
pop
sub
clc
cli
xchg
mov
jle
or
in
je
sub
out
fcoml
mov
jmp
mov
adc
jge
dec
mov
or
mov
jns
inc
sbb
xchg
enter
popf
jl
xor
mov
rcl
orb
xchg
sub
rol
icebp
cmp
fs
sbb
sub
mov
sbb
sbb
nop
insb
fbld
out
aad
lahf
aaa
fprem1
arpl
and
pop
les
mov
add
mov
repnz
add
outsl
inc
cmp
mov
mov
loope
ds
or
adc
mov
jecxz
ror
shl
jp
out
in
imul
ss
jo
push
fdivs
sub
dec
sti
dec
mov
gs
stos
sub
pop
or
pop
xor
repnz
ss
jp
mov
and
mov
rolw
jecxz
mov
fs
adc
cltd
jp
mov
in
test
inc
xchg
stc
lods
mov
mov
ret
push
push
xorb
sub
sbb
in
ljmp
dec
push
imul
jecxz
stos
xor
scas
fdivrp
in
aas
and
cs
adc
js
sbb
mov
enter
mov
mov
push
movsb
xchg
lret
fldenv
call
pop
clc
test
add
fisttpll
mov
mov
or
js
aas
ret
inc
fs
mov
sbb
pop
add
mov
stos
cmp
in
out
shrb
xor
cmp
sub
or
push
or
mov
shrb
clc
push
rcrb
dec
mov
push
mov
jge
lds
nop
jle
pop
ja
test
mov
fimuls
cmpsb
js
add
push
repnz
cltd
and
jmp
sub
jmp
mov
push
repz
dec
lea
iret
xchg
mov
sub
jne
sub
lret
cmpsb
hlt
sarl
sub
fwait
aas
mov
das
xchg
cmp
push
fucomp
int
ja
or
shlb
sub
mov
adc
push
mov
push
sbb
orl
fisubs
outsl
repz
outsl
cltd
dec
hlt
movsb
test
and
xchg
mov
pushf
je
dec
aam
js
cmp
out
pop
outsb
lea
sub
inc
add
scas
ds
hlt
and
jge
mov
in
insb
lods
stc
outsl
insb
adc
fsts
lods
or
rclb
ret
sbb
orb
and
dec
sbb
das
mov
cmp
sub
pop
jge
lods
cmp
test
popa
mov
out
inc
icebp
xor
test
and
push
cmpsb
inc
je
orb
test
rclb
movsl
push
shll
movsl
jle
int3
inc
sbb
pop
pop
mov
addr16
pop
mov
cmpsl
fsts
fs
pop
pushw
xor
int3
cmpsl
sub
push
mov
dec
jl
jb
dec
push
cmp
lret
sbb
jae
adc
mov
sub
or
sbb
xor
push
cmp
pusha
std
add
out
cmovno
out
mov
sbb
es
add
jle
int3
sub
pop
dec
and
lock
mov
cmp
inc
aad
fimuls
adc
hlt
fdivrl
andb
enter
faddl
ret
xchg
daa
int
dec
mov
adc
data16
cmpsb
in
sub
cmp
sbb
jmp
xor
pop
jmp
jo
sahf
mov
push
dec
sbb
xor
aaa
test
shl
dec
cwtl
insb
sbb
sbb
lods
sarb
rorb
loope
aas
and
mov
fmull
fiaddl
xchg
divl
dec
cwtl
stos
sub
js
lret
cmc
test
shrl
hlt
call
hlt
addr16
jns
sub
lcall
ljmp
daa
notb
rcrb
and
clc
sbb
push
xchg
sbb
mov
shrb
pop
std
ljmp
out
mov
sahf
imul
fsts
je
xor
xchg
rcrb
jmp
inc
int3
sbb
xchg
sub
ja
test
xor
das
loopne
or
jmp
dec
xchg
fstp
insl
loope
lea
subl
jnp
mov
adc
ss
subb
add
cmc
adc
add
jecxz
stos
cwtl
pop
fstp
and
ret
mov
inc
stos
loopne
or
push
shlb
arpl
push
jmp
or
lret
or
and
fs
xchg
cmpsb
mov
fsubrl
xchg
out
jmp
adc
push
cmp
movsb
xor
jmp
cmp
fstps
stos
hlt
jne
aaa
mov
jb
addr16
mov
cmp
add
jnp
cmp
leave
jl
aas
pop
testl
fdivr
mov
test
subl
mov
xchg
pop
xchg
shlb
das
nop
std
inc
jp
xchg
sub
mov
mov
dec
inc
das
out
sub
mov
repnz
jno
movsl
into
rolb
pop
mov
cmp
ljmp
sub
push
jle
push
adc
mov
mov
and
xchg
adc
popa
lret
and
loopne
jmp
mov
inc
cmp
mov
push
xor
xor
sub
ret
arpl
mov
push
xchg
cmp
into
and
jbe,pn
sbb
mov
inc
insl
jp
call
mov
jne
cltd
sti
adc
push
xchg
xor
nop
outsl
out
push
sbb
fsubr
test
jp
push
sarb
gs
sub
pand
xchg
sahf
mov
jp
les
mov
in
inc
pop
pushf
xchg
jns
lods
int
rclb
inc
mov
adc
mov
add
dec
lds
imul
lret
es
pop
adc
mov
mov
mov
fadds
out
lcall
arpl
xchg
rclb
xchg
fdivl
insb
je
ja
push
lea
cld
andb
mov
push
xchg
xor
lret
xchg
push
jae
pop
or
nop
sar
pop
add
rclb
out
fsubrl
push
push
fstpl
xor
and
push
stos
movsb
mov
test
fwait
sbb
dec
je
inc
or
lahf
cltd
jle
enter
mov
outsb
inc
cmp
and
mov
hlt
mov
pop
jae
pop
or
stos
movsl
dec
or
adc
test
cmpsl
xor
push
push
stos
cmpsb
push
cltd
xor
jb
mov
jmp
aam
mov
xorl
xchg
xor
shrb
rol
xchg
mov
int
daa
xchg
mov
or
inc
cmc
dec
out
xchg
cwtl
fwait
shlb
xchg
pop
inc
in
or
xlat
mov
push
cmp
adc
popf
add
popa
in
loope
xchg
sbb
or
jne
inc
xchg
xchg
cmp
xchg
nop
push
mov
pushf
cwtl
jne
push
inc
sti
lods
cwtl
dec
mov
add
cmp
outsl
mov
sbb
mov
push
dec
das
push
xchg
mov
mov
ss
mov
xor
and
mov
cmp
push
fdivrl
xor
stos
test
add
inc
movsl
rcrb
repz
dec
sub
pop
push
adc
scas
nop
xchg
push
out
sysret
subl
add
out
lds
push
mov
aas
decb
cwtl
ja
and
sub
inc
push
sbb
inc
xor
jmp
int
xchg
iret
pop
mull
push
hlt
or
jg
pop
push
ficompl
rcll
ret
dec
std
jnp
out
dec
out
dec
cwtl
cmpl
ss
push
out
xchg
fcoms
and
jp
dec
jp
mov
mov
sub
gs
pop
xrelease
les
out
pusha
ljmp
adc
shrl
lea
inc
pop
js
xchg
out
in
mov
inc
lds
cld
add
stos
test
call
test
pop
fists
ss
das
loope
mov
repz
mov
and
cwtl
lods
pop
push
add
mov
dec
dec
lods
cmp
and
dec
mov
ss
stos
cmp
scas
imul
xchg
push
lds
mov
jns
jge
cmc
fdivl
scas
cld
lds
mov
xchg
or
orb
mov
test
pop
or
mov
xchg
test
jbe
fstpl
xchg
arpl
xchg
sbb
jbe
add
mov
or
mov
daa
mov
push
int
jecxz
mov
adc
jmp
jg
pop
aad
pusha
mov
add
push
imul
sarl
inc
shll
mov
add
dec
aam
pop
ljmp
push
fwait
push
push
fstps
xchg
add
rolb
cmp
and
push
mov
and
hlt
cld
clc
or
and
mov
scas
dec
fmull
cmp
mov
xor
adc
push
dec
mov
sbb
pop
mov
jno
test
pop
test
mov
fstpl
std
cmp
push
add
addr16
fs
mov
mov
invd
xor
inc
movsb
or
cmpsl
or
cmpsb
inc
cld
mov
test
mov
insl
fsubr
les
arpl
inc
call
mov
out
fcoml
lahf
sub
iret
and
dec
shl
sub
cmp
mov
iret
subb
cmpsl
jle
dec
sub
test
fldt
sbb
cld
jb
shrb
popa
ss
jne
inc
dec
xchg
fwait
vmwrite
add
sub
and
mov
xchg
xchg
not
aas
add
cli
mov
std
cld
and
jne
das
mov
sbb
rorb
add
fwait
mov
sti
popa
aam
aad
or
mov
add
push
movsb
sbb
lahf
pop
stc
dec
popa
and
pusha
js
mov
xlat
stc
jmp
pop
scas
clc
mov
or
or
or
lods
mov
and
xchg
mov
out
jo
mov
and
daa
or
inc
test
in
fstpl
fnstsw
mov
movsb
mov
push
xchg
pop
movsb
pushf
insb
or
imul
and
dec
clc
adc
mov
shl
xchg
and
push
lahf
xchg
aam
pop
lock
ja
mov
lock
mov
push
aas
mov
push
push
xor
cltd
js
mov
andl
inc
pop
mov
mov
sub
mov
sbb
loop
or
or
pop
mov
sbb
or
xor
mov
and
or
jne
pop
sbb
jp
mov
sbb
sti
aam
lret
repz
scas
popa
or
iret
clc
inc
dec
jp
scas
in
popf
pop
xchg
cmpb
cs
mov
xor
std
jo
aaa
enter
call
movsb
inc
jg
mov
pop
push
jno
enter
inc
mov
inc
js
fsubr
mov
int3
or
add
in
sahf
iret
movsb
arpl
mov
sub
mov
jp
loope
inc
jnp
push
repz
data16
xor
repnz
adc
jb
test
push
scas
cmp
roll
sub
in
adc
int3
ss
sub
outsb
cmp
jno
js
addr16
mov
std
jb
fildl
sbb
stos
adc
inc
and
push
es
movsl
das
inc
mov
push
or
pop
dec
cmc
test
divb
clc
test
test
jmp
mov
aad
xlat
dec
add
aam
cld
movsl
mov
inc
fsubrs
push
popf
leave
mov
scas
insb
lgs
dec
movsl
out
cmp
cmp
enter
lret
ss
lret
into
push
popa
xor
inc
pop
sub
xor
sub
add
into
jmp
imul
add
jge
fmulp
mov
xor
xor
ja
lods
or
in
or
pop
pop
mov
loope
enter
sti
in
jmp
sub
repnz
xchg
cmp
jecxz
dec
shl
xchg
and
xchg
je
pop
clc
daa
mov
xor
iret
add
repnz
dec
dec
in
sbb
lock
sub
jae
rorb
icebp
icebp
jmp
cmp
mov
leave
std
loop
hlt
clc
cmpsl
xchg
aad
push
data16
rorb
mov
adc
xor
cmpsb
mov
std
sti
aad
sub
mov
jae
roll
cs
mov
cmp
pop
xchg
mov
loopne
test
cwtl
mov
xchg
mov
xor
pop
adc
subl
cmpsb
sti
cli
out
ja
xor
insb
xor
sarl
pop
and
or
xor
enter
movsl
add
mov
inc
pop
aas
in
icebp
mov
lcall
xor
jp
arpl
or
in
out
icebp
inc
ds
xchg
fucomip
aam
inc
dec
xchg
sub
dec
pop
sbb
in
mov
cmp
sub
cmc
jmp
mov
ja
adc
pop
jp
add
aas
sub
pop
jns
dec
mov
inc
clc
dec
fistpll
mov
dec
xor
pop
add
rolb
add
scas
lods
lods
daa
notb
cmc
je
in
xchg
sub
adc
jnp
fs
push
cli
push
cmp
pop
dec
nop
pop
push
shlb
push
add
push
jns
mov
xor
xor
add
cmpsb
rclb
jl
ds
clc
jp
int
out
jmp
lds
arpl
rcl
adc
lods
fmuls
sub
popf
int
icebp
dec
lahf
cld
pop
and
push
add
rorb
xor
push
xor
loop
ret
ficoml
ljmp
shlb
movsl
fmuls
hlt
or
adc
test
or
aas
push
xchg
aaa
fcomps
js
sbb
sbb
pop
jo,pn
fwait
flds
call
clc
loopne
mov
imul
xor
cmp
dec
and
adc
addr16
dec
ss
decb
jbe
fstpl
xchg
and
insb
pop
cmp
xchg
sub
js
adc
mov
cmc
ficoms
mov
in
push
scas
push
add
scas
aas
test
pop
bound
sbb
int3
jbe
push
and
pop
pop
movsl
add
dec
jb
add
mov
ret
pop
sub
fsincos
out
stc
mov
cli
dec
jns
cs
test
cli
out
es
pop
or
sbb
mov
pop
in
fcmovbe
cmp
out
or
xor
pop
push
xchg
add
out
cli
mov
adcl
push
xchg
jnp
or
inc
dec
cltd
sbb
and
in
sub
insl
cmpsl
inc
push
add
xchg
pushaw
add
pop
insb
adc
fs
mov
mov
out
test
dec
and
test
jnp
jp
add
push
push
dec
outsb
rorl
pushf
xchg
idivb
insl
sbb
shl
sub
das
imul
arpl
cmp
sbb
pop
outsl
shl
pop
test
mov
arpl
std
inc
leave
js
aad
divb
or
je
rclb
out
xchg
jge
push
pop
adc
in
fs
jnp
pop
subb
icebp
mov
mov
pop
test
push
lahf
sub
btc
mov
cmp
dec
nop
sbb
call
push
rorb
lock
dec
cltd
lods
mov
cmp
loope
repnz
daa
enter
jle
mov
cld
outsl
sbb
ss
inc
hlt
push
lahf
pop
mov
cmp
fcomps
cmp
push
or
insl
in
jnp
mov
inc
push
mov
out
or
ljmp
adc
outsb
adc
jl
jns
ss
and
ficoml
jno
shrb
sbb
and
mov
push
or
or
add
cmpb
mov
in
adc
sbbl
inc
push
mov
mov
push
lds
mov
pop
int
bound
cmpsb
scas
shrl
or
stos
push
icebp
xchg
shrb
adc
insb
sub
adc
loopne
push
push
inc
test
xor
xchg
shr
cmp
lret
loope
cmp
dec
sbb
and
push
gs
add
cs
pop
cmp
jg
sub
jp
adc
aam
ss
icebp
cltd
jle
pop
fldt
xor
fiaddl
cmp
adc
jno
or
or
cmc
inc
xchg
push
adc
dec
xor
ja
aas
insl
sbb
or
pushf
enter
pop
stos
sbb
fnstcw
ror
add
sbb
inc
test
aad
inc
or
mov
ss
sub
fcoml
dec
or
mov
sahf
shrb
jmp
sub
push
repz
fsub
sahf
mov
push
adc
gs
inc
push
sub
roll
mulb
push
mov
fcomi
xchg
fdiv
ss
sbb
aas
repnz
inc
lret
pop
cmp
stos
shlb
xor
cmp
lock
dec
inc
enter
push
jl
in
mov
fbld
das
cmpsl
outsl
xchg
push
inc
sbb
dec
rcrl
hlt
or
ret
clc
lea
iret
pop
push
jns
push
jbe
push
lock
mov
xchg
jecxz
xor
push
mov
neg
fstl
sbb
jecxz
addb
aaa
shrb
pushf
push
or
xchg
mov
xchg
imul
int3
xchg
movsl
mov
lret
xchg
gs
arpl
dec
fidivs
rolb
add
in
sub
jnp
mov
fldl
in
lods
and
pop
or
gs
push
mov
movsb
arpl
mov
jmp
cmp
insb
xor
push
daa
mov
ljmp
jg
fstpl
jl
test
out
push
jmp
dec
fidivl
push
xor
dec
cmp
inc
leave
xchg
jle
mov
repz
out
push
cld
jge
stos
data16
push
notb
sti
test
les
in
sub
sbb
dec
les
bnd
out
aas
mov
mov
out
pop
out
mov
aam
and
gs
in
pusha
or
xor
xlat
xchg
outsb
sbb
imul
outsl
sub
fisubs
in
sbb
inc
add
jb
subb
imul
xor
lahf
cmp
outsb
sub
addr16
lods
inc
sbb
push
jmp
push
idivb
out
adc
push
sbb
arpl
mov
ret
mov
aam
pop
icebp
jg
xchg
pop
mov
mov
in
subb
push
ret
pop
xor
pusha
or
cli
mov
hlt
mov
les
int
or
sti
mov
into
lea
daa
aam
xor
inc
adc
jl
movsb
dec
push
xchg
jge
mov
jmp
ret
dec
daa
in
js
mov
sbb
mov
loop
push
int3
xchg
sbb
dec
adc
jbe
scas
imul
push
xchg
outsb
out
orl
pusha
or
pusha
sub
sub
icebp
movsb
sub
xchg
xor
addr16
int
xor
int
dec
idivl
out
ss
and
jns
scas
inc
push
sahf
inc
rcrb
les
aam
push
aad
or
int
inc
xlat
mov
fisubs
in
add
leave
test
scas
pop
in
mov
iret
nop
adc
inc
sbb
jb
mov
mov
les
lret
mov
lret
mov
fisttps
int3
imul
push
aad
inc
leave
mov
fstpt
leave
inc
sub
inc
cmp
pop
sbb
into
lods
jge
mov
hlt
bound
stos
jb
mov
shrb
mov
leave
dec
sub
pop
adc
xor
pop
in
test
cmc
sahf
and
gs
push
or
inc
push
movsl
push
fldt
rorl
int3
dec
pop
mov
das
fwait
inc
loop
imul
add
cmpsb
add
arpl
rcrl
push
add
push
popf
push
les
xlat
xchg
push
jmp
add
jae
fwait
inc
ss
loopne
sub
mov
xlat
outsl
add
data16
dec
adc
ret
scas
sbb
lcall
xor
pop
sbb
lret
mov
movsl
or
mov
loope
sbb
jp
lods
pop
sub
lds
icebp
mov
dec
sub
pop
sbb
lds
in
adc
dec
pmaxub
mov
pop
loop
inc
jmp
sbb
scas
adc
jg
mulb
mov
ss
dec
shll
loopne
shlb
fiadds
mov
sbb
shrl
call
cmp
pusha
xor
adc
sti
cmpsb
push
cld
xchg
adc
dec
push
mov
sahf
outsl
or
aad
push
incl
in
inc
and
pop
xor
inc
loope
jnp
mov
sti
imul
pop
pop
mov
outsb
into
xchg
push
fnstcw
cmc
popa
sub
imul
pusha
sub
stc
mov
aad
ds
es
jge
mov
mov
leave
pushf
jns
addl
push
out
sbb
arpl
notb
lea
mov
aam
xor
cltd
sub
xchg
das
lret
ret
mov
shlb
mov
ret
jecxz
cmp
jne
lods
imul
inc
in
jnp
xchg
sbb
mov
repnz
push
mov
call
inc
rorl
ret
push
adc
push
add
je
lods
bound
nop
jge
mov
aad
sbb
jb
stc
dec
and
pop
cmp
inc
push
mov
ret
clc
mov
ret
clc
inc
add
push
mov
cmc
lcall
sub
push
mov
les
shll
sti
pop
cmp
inc
or
xchg
divb
call
cmp
xlat
lods
inc
rcll
int3
xchg
xor
dec
paddw
andl
mov
sarl
jbe
mov
xchg
mov
shlb
les
jns
mov
mov
aad
inc
cmpsb
pop
lret
jmp
xor
push
pop
mov
notb
hlt
pushf
pop
out
mov
pusha
daa
push
inc
mov
cmp
jns
jno
or
sub
int3
add
add
or
add
add
popa
inc
add
popf
push
jns
inc
outsl
outsb
jae
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
push
jns
push
je
insb
jae
or
push
imul
add
dec
gs
popa
addr16
rolb
add
test
jb
je
inc
imul
je
popa
insb
push
jne
jb
add
inc
gs
gs
imul
add
je
push
dec
outsl
arpl
add
inc
gs
je
imul
inc
js
add
inc
gs
je
dec
popa
outsb
fs
add
inc
gs
jb
arpl
fs
jae
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
inc
gs
imul
push
jo
arpl
add
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
inc
imul
jne
arpl
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
rolb
add
enter
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
popa
insb
inc
jb
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
je
gs
imul
je
jne
jb
outsb
je
push
dec
add
push
imul
outsl
dec
jne
je
inc
jns
add
insb
jae
jb
outsb
inc
add
insb
jae
jb
jo
outsb
inc
add
dec
outsl
popa
fs
imul
js
add
inc
gs
push
dec
outsl
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
jb
arpl
fs
jae
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
jb
gs
imul
add
outsb
fs
imul
gs
add
inc
imul
add
inc
js
je
jb
arpl
jae
add
imul
add
push
gs
js
gs
imul
gs
add
insb
push
outsb
ja
outsb
add
push
popa
imul
jo
imul
je
je
dec
popa
outsb
fs
add
rolb
add
jo
add
add
push
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
fldl
add
pop
mov
gs
jne
jb
push
popa
insb
jne
inc
js
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
insb
outsl
jae
dec
gs
add
add
add
mov
gs
imul
push
add
testl
add
add
outsl
jo
popa
jb
popa
outsb
je
outsl
jo
add
add
add
push
push
jns
inc
jb
gs
je
imul
add
les
gs
popa
addr16
outsl
js
add
dec
outsl
popa
fs
je
imul
gs
jns
je
insl
dec
gs
imul
popa
jb
gs
inc
add
inc
push
dec
gs
inc
add
push
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
dec
outsl
popa
fs
je
imul
gs
popa
addr16
outsl
js
add
inc
push
js
inc
add
add
add
push
inc
add
dec
add
add
pop
inc
sub
add
add
add
add
add
sbb
jl
add
push
add
add
add
or
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
insb
or
add
rolb
add
add
add
inc
inc
add
add
aam
add
add
add
add
add
add
add
pusha
inc
inc
push
inc
add
add
add
add
nop
add
add
add
addb
inc
add
rolb
add
add
add
mov
add
add
shrb
fs
je
add
lcall
add
or
add
test
add
add
je,pn
jae
add
add
add
add
rolb
add
add
add
shrb
fs
je
add
sbb
add
add
add
add
add
add
add
add
jb
insb
outsl
arpl
add
add
loopne
add
or
add
mov
add
add
jb
jb
add
add
add
add
lock
add
add
lcall
inc
add
push
add
add
in
mov
add
add
hlt
add
pop
int
out
orb
mov
pop
in
into
xchg
mov
filds
jae
in
jno
in
daa
xchg
ljmp
cmp
and
dec
lahf
mov
roll
cmp
call
orb
test
dec
inc
pop
push
cli
les
mov
mov
and
cli
test
sbb
or
push
leave
lret
fsubr
lea
inc
jae
cmc
ljmp
outsl
andb
lds
shr
into
nop
xchg
sbb
or
loop
xlat
mov
jo
stos
shl
jp
stc
dec
jl
jmp
scas
into
inc
inc
pop
lods
and
les
leave
push
enter
jg
inc
jg
std
inc
cmp
test
pop
push
mov
nop
mov
inc
call
or
out
stos
mov
aam
sub
pusha
rclb
pop
decl
scas
movsl
xor
neg
mov
out
std
jae
fxch
enter
cmp
xchg
ljmp
and
cmpsl
jb
push
xchg
sub
stos
imul
mov
incl
fnstcw
mov
mov
test
loopne
in
aas
mov
lret
push
int3
mov
pop
mov
rcl
loope
mov
dec
std
decl
xor
jmp
sub
int3
loopne
adc
mov
jmp
xchg
sub
or
mov
push
bound
pop
enter
jae
jmp
pushw
pop
sub
lock
iret
in
pop
pushf
jne
push
or
call
repz
imul
sbb
or
cmc
data16
jg
ljmp
mov
in
mov
js
sub
cmpsb
sbb
mov
push
in
movsl
ljmp
cs
lret
scas
repnz
xor
xlat
decl
lcall
xchg
jl
jns
out
jle
lds
xor
aad
adc
movsl
mov
sub
jne
and
leave
adc
inc
incl
in
repnz
ret
mov
xor
mov
incl
mov
outsl
std
and
inc
dec
mov
dec
and
fiaddl
push
xor
push
fbstp
imul
pushl
cmp
jge
jbe
add
ja
fidivrs
jno
dec
stc
sub
xor
pop
jmp
adc
push
push
xchg
mov
fdivrl
ljmp
push
repz
pop
loop
and
jle
cmp
cmc
insb
sar
test
incb
fdiv
push
xchg
lods
jp
shrl
into
movsb
push
and
mov
xchg
bswap
in
bound
into
xor
mov
sti
fmull
shrb
movsb
scas
lret
cld
mov
mov
push
out
out
pusha
or
adc
pop
cmp
test
mov
inc
imul
iret
mov
mov
call
push
js
xlat
add
test
outsl
sub
adc
jge
vmaxpd
mov
das
icebp
inc
cmp
or
cmc
ficomps
das
sub
jge
inc
jnp
movsb
sub
mov
fdiv
idivl
push
jecxz
rcr
call
cmpsl
movsb
iretw
aas
sbb
clc
mov
push
in
out
lahf
fbstp
xlat
mov
cld
in
mov
test
out
lahf
stc
loope
movsl
jbe
inc
pop
ds
call
mov
add
and
cmp
add
ja
pop
loop
jo
lcall
cmp
mov
xchg
push
xchg
xchg
hlt
scas
sbb
ja
mov
test
incl
testb
and
out
sub
xchg
outsl
loop
outsb
mov
dec
movsl
xchg
mov
nop
jbe
jp,pt
dec
cmpsb
int3
fucomip
or
inc
movsb
or
jecxz
outsl
pop
push
lea
mov
or
insl
out
push
mov
inc
jle
enter
or
es
scas
fidivl
mov
rcl
int
push
mov
mov
jle
cs
adc
nop
mov
outsl
icebp
daa
mov
add
add
sub
sub
lcall
cld
call
lock
das
dec
arpl
xchg
xchg
loope
sbbl
dec
insl
pop
shlb
pushl
pop
xchg
jle
es
xor
pop
in
adc
mov
movsl
mov
xor
and
fwait
cs
mov
jnp
jg
loop
leave
aaa
mov
pop
bound
arpl
inc
enter
repnz
mov
jge
push
jg
cmp
dec
clc
mov
sub
jle
test
mov
fs
mov
imul
mov
lds
jmp
in
dec
jno
push
add
xchg
mov
xchg
lds
stos
dec
mov
inc
adc
adc
jb
sub
ficoms
fld1
jg
adc
push
incl
push
push
pop
stc
popf
add
cmp
jae
stos
sub
aas
in
cmp
dec
test
fildll
xlat
es
fistpll
mov
cmp
fdivrl
sub
fs
loopne
cmp
pop
sub
stos
sbb
repnz
mov
pushf
in
mov
repnz
push
orb
push
and
mov
inc
inc
cld
fbstp
or
out
dec
push
shlb
mov
repnz
stos
je
jns
pusha
xchg
or
aam
pop
inc
icebp
push
and
insb
cld
mov
jnp
popa
sbb
cwtl
stos
popf
and
std
scas
and
pop
aaa
sub
mov
sbb
aad
lcall
lcall
adc
frstor
pop
hlt
mov
iret
enter
loope
addr16
or
pushl
mov
decb
and
dec
add
jmp
jmp
xor
mov
push
push
dec
adc
mov
mov
cmp
push
pop
in
insb
or
stos
inc
dec
mov
jns
sbb
fisttpll
sbb
inc
scas
cmp
mov
test
clc
and
xor
add
repz
pop
sar
mov
mov
cmp
pop
mov
movsl
pop
sbb
jnp
test
mov
into
push
cli
ds
or
int
adc
adc
fsubrl
test
lea
mov
and
mov
jge
out
mov
xor
test
cs
jecxz
out
jne
icebp
xchg
or
push
loop
imul
subl
nop
ja
loop
pop
or
fsts
jmp
mov
popf
pop
icebp
push
xor
lods
repnz
scas
jnp
jo
xor
mov
adc
push
mov
mov
pushf
jp
sub
mov
loopne
and
fwait
mov
out
ljmp
popf
mov
push
xor
arpl
inc
and
inc
jl
or
jae
mov
popa
orb
lcall
mov
push
cmpsb
fmuls
push
sub
sbb
dec
or
sub
sub
jp
mov
data16
xor
cmpsb
int
fiadds
cmp
mov
fwait
loop
mov
add
lcall
call
add
movb
addb
aam
movsl
dec
pushf
mov
jle
pop
sbb
icebp
stos
dec
inc
lret
cltd
ror
mov
pop
jae
push
lret
out
cmp
and
ret
sbb
fsubr
sub
fwait
aas
pop
test
out
add
int
test
adc
add
incl
pop
mov
and
inc
cwtl
mov
mov
call
ret
call
dec
ds
or
mov
clc
scas
jne
sub
hlt
jl
jno
sbb
adc
inc
mov
fs
mov
aaa
or
adc
adc
mov
sahf
inc
add
dec
xor
aas
outsl
cmc
das
cld
out
enter
call
add
rcrb
mov
or
jmp
sub
decl
jle
out
shr
push
mov
cld
inc
sar
inc
adc
icebp
add
dec
cld
adc
pop
test
daa
pop
xchg
and
daa
imul
pop
mov
jg
call
jne
mov
fdivrl
mov
mov
jl
jne
jg
sbb
and
mov
mov
lods
les
sbb
push
call
adc
mov
sbb
lcall
adc
arpl
mov
adcb
shl
mov
sub
or
addl
push
call
lcall
lret
xor
cs
fdivr
cmp
call
inc
pop
movsb
pop
cmp
shll
jno
mov
sbb
test
xchg
sub
decl
roll
scas
or
mov
and
inc
scas
jmp
add
das
adc
xlat
sbb
fdivr
in
adc
jge
mov
pop
cmp
push
ss
dec
add
mov
sahf
jg
decl
insb
flds
dec
adc
lret
addr16
push
cmp
call
sub
dec
outsb
jb
outsl
inc
cmp
mov
lret
pop
and
dec
mov
jae
das
push
imul
stc
xchg
cmpsb
test
cmc
pushf
dec
dec
fdivrs
pop
add
xchg
push
stc
arpl
push
xchg
lcall
push
adc
jge
add
pop
loopne
pop
xchg
jnp
mov
das
cld
incl
inc
mov
das
add
pop
insl
fnsave
lods
imul
cmpl
pminsw
in
stos
pop
pop
add
dec
aad
cmc
lret
inc
pop
sub
jg
incl
cs
fidivrs
cmc
call
xchg
in
popf
loope
fdivr
inc
push
jl
mov
dec
cwtl
jg
insl
imul
add
lcall
outsl
xor
fsts
fdivs
shlb
stos
push
inc
cmp
test
jle
jbe
in
pusha
js
adc
pop
push
call
xor
mov
call
mov
sti
test
cmp
jbe
sub
sarl
mov
jne
loope
mov
sub
ljmp
mov
or
sbb
cli
ljmp
jns
nop
or
mov
fisttps
ds
inc
cmp
push
xchg
cmp
inc
mov
imul
push
insl
jl
mov
add
add
mov
xor
lcall
ljmp
jge
dec
push
add
repz
das
mov
dec
mov
dec
repz
and
aam
decl
jno
mov
jnp
xor
xor
fidivs
fbld
loopne
xor
jns
mov
sahf
adc
outsb
dec
scas
xchg
push
outsl
lock
jmp
mov
xchg
inc
jno
mov
aaa
add
jle
fistps
xchg
clc
add
stos
lahf
out
jmp
jge
rolb
lds
mov
pusha
les
ja
xlat
in
xor
clc
jecxz
or
fistpll
orb
jne
push
lret
inc
xor
aad
test
je
in
mov
sub
popf
das
fcompl
inc
lock
push
pmulhuw
xchg
add
jg
ret
mov
pop
shlb
xchg
stos
mov
pop
int3
mov
outsb
dec
ljmp
push
xchg
push
jns
mov
push
xchg
iret
arpl
pop
out
mov
jg
movsl
loope
and
mov
jno
gs
ljmp
jo
inc
xchg
cmpsl
test
pop
iret
add
jl
in
and
push
adc
in
sti
xchg
ss
add
jle
daa
das
insb
aad
pshufw
or
push
in
mov
sbb
arpl
in
mulb
jecxz
in
mov
adc
addb
std
jg
sub
sub
loopne
stc
jns
cmc
sahf
pusha
mov
movsl
sub
ficoml
aaa
or
xchg
insl
cltd
lcall
outsl
movnti
inc
adc
push
pop
lcall
rorb
scas
mov
popl
and
stc
nop
loope
cmp
aaa
mov
cmp
jb
jg
call
aam
pop
mov
push
xor
dec
or
test
incl
insl
sub
outsl
mov
inc
push
xchg
jns
pop
out
mov
call
add
cmp
mov
fimull
ja
push
les
ret
in
push
mov
inc
jg
jns
push
xchg
lock
mov
aam
clc
push
xchg
push
fdivrs
popa
push
lahf
cmp
fisttpl
add
lcall
out
sar
mov
stos
cli
out
add
pushf
pop
clc
ljmp
push
fsts
orl
lcall
addr16
adc
mov
in
in
jbe
pusha
xor
xorb
fisttpll
ljmp
cli
leave
clc
dec
mov
sub
push
fs
movsb
orl
leave
dec
clc
lcall
add
pop
mov
lahf
je
pop
shll
add
mov
jp
or
or
loop
rcll
pop
cmp
daa
jns
cmpsb
fisubl
mov
push
shll
frstor
loop
ljmp
lret
fildl
mov
ficoml
arpl
mov
sbb
movsl
aaa
lock
and
cmp
cmpsl
jle
jmp
xor
jle
clc
in
mov
cmp
sub
outsl
shll
jle
mov
addr16
pushl
call
lock
sbb
stc
insb
mov
adc
cmc
je
bound
loopne
and
sahf
mov
int
ret
pop
popf
adc
fistpll
popf
mov
gs
mov
inc
incl
lcall
dec
imul
incl
test
inc
ja
pop
bound
fildl
xchg
cmp
fidivl
push
push
fdivr
lcall
jns
xchg
push
push
aad
or
push
out
xor
fiadds
inc
aam
call
aam
outsl
sub
jae
out
push
dec
and
mov
sub
ljmp
cld
mov
aad
jge
dec
imul
adc
mov
movsl
rcrl
mov
stos
aas
pop
int
lret
jle
sti
popf
mov
stos
xor
divb
call
aas
add
xor
js
outsl
mov
ret
lret
scas
mov
movsl
pushl
xchg
fstpt
push
and
cld
xor
std
call
adc
push
push
adc
int
jae
sub
adc
fnstenv
ljmp
int
aaa
nop
sub
push
mov
or
into
insb
adc
shll
push
inc
loope
xor
xor
shlb
outsl
inc
out
das
hlt
outsl
push
xchg
aad
fcoml
call
push
lcall
cmp
or
push
movsb
push
inc
les
mov
push
xchg
push
ret
dec
jno
cmc
inc
pushl
or
mov
fisttpll
inc
lods
loop
inc
or
pop
dec
mov
adc
pushf
popa
dec
lret
scas
movsl
and
pushl
cli
adc
dec
jbe
mov
ss
aad
push
pop
xorb
fwait
inc
and
pop
sub
or
pop
std
sub
mov
stos
dec
jmp
mov
xor
ljmp
bound
xchg
test
xor
sbb
addr16
lods
jae
test
call
xchg
mov
dec
xchg
cld
stc
outsb
mov
xchg
sbb
decl
test
aad
pop
ss
jl
outsl
out
pop
icebp
cmpsl
mov
ret
cmpsl
icebp
fisubl
or
das
cmc
dec
out
fstl
pop
insl
mov
add
mov
js
call
pusha
ficompl
js
cmp
push
inc
mov
call
mov
hlt
and
jge
mov
popa
in
cmc
push
aam
jg
lahf
test
push
fs
insl
stos
xchg
xchg
push
out
mov
pusha
ret
clc
xchg
fcom
mov
jo
shrb
out
pop
pop
sub
jbe
ljmp
repnz
orb
xchg
in
fwait
xlat
rcl
mov
dec
ret
aam
lahf
mov
and
push
xor
insl
push
mov
mov
or
sub
lea
mov
dec
push
in
push
push
in
call
cli
mov
movsl
and
mov
push
mov
inc
shrb
pop
mov
and
push
mov
js
fadds
roll
adc
out
aad
mov
fisttpl
popf
mov
mov
mov
scas
xor
adcl
pushl
jge
std
adc
dec
push
and
ljmp
cmp
mov
cmp
cmp
into
pop
push
jb
jg
adc
and
decl
pop
push
sbb
pop
mov
mov
push
pop
jno
movsl
push
mov
cmp
clc
in
push
lds
pop
jg
lcall
mov
jo
push
xor
sub
outsl
add
lcall
mov
jmp
push
push
mov
clc
pop
cmp
sub
es
or
pop
jno
cmc
push
cmp
cld
jnp
bound
daa
and
sti
aam
add
sbb
push
das
cmc
fucomip
or
jbe
lahf
out
xor
and
and
jmp
incl
jecxz
out
test
and
subl
jmp
mov
add
dec
pop
jo
jns
add
test
mov
sub
mov
push
pop
sub
imul
fisttps
mov
test
pop
sbb
dec
and
dec
jbe
loope
xchg
xor
je
mov
lcall
int3
cmpsb
xchg
bound
ret
bound
jmp
mov
mov
loopne
sbb
pushf
lock
clc
mov
scas
testl
jno
dec
sbb
sub
call
and
cmp
daa
adc
mov
push
stc
push
fcoms
icebp
jmp
fs
inc
add
or
js
imul
jmp
fiadds
nop
aas
int
mov
mov
lea
push
scas
mov
orb
fs
fs
jbe
orb
dec
xchg
xor
int3
les
pusha
pusha
enter
test
and
ljmp
or
jmp
fwait
stc
mov
adc
les
enter
lcall
lds
and
repnz
loope
dec
push
and
jmp
je
decl
pop
ficoms
inc
adc
fs
iret
insb
mov
ljmp
sub
mov
mov
dec
sub
rcrl
icebp
cmpsb
imul
call
arpl
dec
add
inc
ljmp
dec
popa
call
ja
pop
lods
inc
and
int
outsb
fstpt
out
fstpl
cmp
std
call
fists
cli
sbb
ds
pop
xchg
sub
idivl
lods
jmp
insl
imul
sar
ljmp
icebp
sbb
addr16
sarb
dec
andl
mov
out
aam
aaa
cmp
mov
js
je
pop
xchg
in
rcr
jns
fmull
les
sub
call
psubsw
fisubs
and
lcall
decl
push
stc
out
mov
sbb
dec
mov
cmpl
cmc
call
imul
ret
cld
inc
out
pop
inc
xchg
and
xlat
mov
ljmp
and
push
negb
repz
data16
add
aaa
imul
inc
and
fidivrl
inc
repz
add
ret
orb
imul
fisttps
mov
in
movsl
aaa
clc
sub
in
jg
jg
mov
inc
decl
call
js
mov
sub
jmp
js
sub
cld
incl
call
arpl
outsl
imul
add
ret
mov
xchg
mov
ljmp
fdivrs
sarb
popf
mov
cmp
sti
daa
jmp
je,pn
xor
sti
icebp
inc
jno
mov
dec
incb
rcrb
stos
jmp
pop
test
add
sti
int3
stos
sub
ljmp
pop
int
aaa
iret
fwait
je
cmpb
xchg
repnz
inc
in
nop
or
es
mov
fs
add
hlt
xor
dec
bnd
sub
adc
adc
incl
cs
addr16
sub
xor
rcll
shr
sub
lcall
int3
pop
xor
int3
cs
popf
ds
pusha
fwait
sbb
mov
pop
sahf
inc
xchg
pop
inc
cmp
jae
bnd
rol
shll
decb
dec
aam
int
nop
loopne
xor
pop
jg
and
out
mov
stos
or
xchg
add
leave
xchg
inc
mov
dec
std
fisttps
arpl
notb
or
push
out
xchg
mov
push
clc
idivb
mov
jmp
jmp
aaa
dec
dec
test
sub
jno
sbb
inc
in
mov
add
incl
pop
adc
fistpll
fsubl
ret
mov
xchg
lcall
mov
lahf
fsubrl
out
sub
sub
jge
push
push
dec
decl
jmp
and
data16
loopne
call
clc
lahf
cmp
faddl
insb
inc
push
test
btr
fs
notl
pop
cli
mov
xchg
sub
and
adc
fildll
lcall
pop
mov
xchg
in
xchg
das
pop
sub
daa
push
xchg
stos
pop
out
ret
leave
jmp
aam
lea
int3
cmp
aam
scas
mov
aad
int
xor
sub
std
xor
insl
mov
enter
mov
dec
sub
xrelease
lock
dec
push
jecxz
das
sub
jo
ljmp
push
outsl
int3
in
int
scas
fnstsw
jo
pop
hlt
push
sub
lcall
arpl
dec
fsubl
pop
or
xchg
lock
mov
pop
clc
out
out
xchg
out
jae
shll
aaa
mov
inc
mov
mov
ljmp
mov
jl
fmul
enter
adc
cmp
or
ss
lcall
int
fcomps
cmc
pop
inc
add
fcompl
ffreep
xchg
clc
ljmp
dec
inc
mov
les
mov
pop
cmp
call
mov
push
repz
call
pushw
call
adc
jmp
jb
pop
ljmp
push
out
dec
loop
incb
ljmp
outsl
sub
cmp
bound
jno
mov
xchg
cmc
data16
push
out
add
lds
mov
fnsave
mov
mov
mov
xor
and
incl
adc
inc
lods
lods
nop
mov
or
incl
cmp
sub
pop
pop
jl
push
mov
mov
push
shrb
mov
in
mov
adc
jg
decl
jb
call
andb
nop
sti
out
cmc
repnz
cli
incl
mov
push
cwtl
movsl
mov
push
sar
idivl
movsb
sbb
sub
sti
mov
dec
xor
add
push
cmc
fidivl
stos
cmp
mov
std
sbbl
pop
cmc
push
or
push
in
fnstsw
rcll
fwait
adc
xchg
xchg
stc
xor
addr16
sbb
jl
xchg
sub
jmp
stc
subb
xchg
je
push
dec
dec
test
incl
xor
dec
vpinsrw
daa
adc
mov
clc
sbb
in
jmp
jp
xor
mov
bound
xor
les
pop
stos
clc
jg
push
fidivrl
in
jecxz
mov
xlat
cmp
ss
sarb
fidivrl
daa
push
pop
push
and
jg
mov
int
testl
xchg
repnz
icebp
xor
hlt
jae
dec
sub
pop
lds
clc
pop
sbb
mov
fdivr
mov
sub
test
sbb
dec
aaa
clc
dec
cld
sub
pop
sub
pop
call
jecxz
sub
out
test
push
push
js
pop
mov
pop
sub
jg
pop
incl
imul
push
outsl
std
jmp
and
xor
in
imul
dec
sahf
xchg
push
idiv
lods
mov
mov
pop
mov
cmpsb
es
inc
mov
inc
or
mov
inc
cld
push
movsl
sub
jne
shll
mov
mov
sbb
enter
xor
jl
sbb
pop
adc
add
insb
scas
push
xor
xchg
negb
jns
iret
pop
std
lcall
movsl
jae
or
sbb
mov
jne
ret
mov
lcall
mov
mov
loopne
cmp
je
scas
inc
or
imulb
add
fstp
push
adc
ret
pcmpgtd
dec
push
mov
incl
dec
or
or
lret
jbe
mov
cli
add
outsb
sahf
fsubr
adc
decl
insb
cmp
sbb
mov
add
sub
ret
cmp
cmc
pushl
xor
sti
jne
ret
dec
adc
cmpsl
dec
loope
lret
and
aas
loop
lods
jle
ljmp
mov
fcoms
out
adc
cmp
ljmp
pop
enter
and
repnz
std
stos
mov
jno
aam
std
add
wrmsr
pop
rorl
outsb
mov
xchg
xchg
pop
push
or
pop
shlb
cli
scas
or
or
jecxz
call
subb
mov
cmp
jnp,pt
movsl
fcmove
or
inc
xchg
or
call
loop
push
popa
mov
cmc
add
scas
dec
mov
popf
jl
mov
add
negb
xchg
call
rorl
adc
jmpw
cli
jge
aaa
sahf
icebp
loopne
xor
fstps
call
lea
in
mov
outsb
loopne
mov
je
ds
mov
and
pop
mov
jmp
jb
shr
cmp
sub
movb
push
aam
sahf
jle
int3
inc
sbb
push
dec
cld
incl
push
in
dec
out
cwtl
pop
adc
cmp
xchg
cli
mov
push
jle
enter
sbb
push
ja
add
scas
das
clc
std
mov
insb
pop
push
out
in
mov
add
test
cmp
fbld
dec
pop
add
cmpsb
fbld
or
or
cli
mov
into
stc
jge
iret
insl
sbb
imul
jg
lcall
mov
cmp
and
adc
pop
xchg
scas
outsl
mov
dec
stc
daa
dec
popa
xchg
dec
and
dec
fs
sahf
out
cmp
jmp
ret
iret
loop
enter
push
or
imul
bound
stos
out
inc
jp
xor
iret
and
imul
push
in
pop
call
loop
lock
xor
mov
out
cli
xchg
loopne
call
shlb
adc
pop
in
pop
push
lret
outsl
dec
pop
push
xchg
clc
decl
mov
gs
add
jmp
cmp
pop
jp
pop
xchg
xlat
adc
ljmp
sbb
daa
mov
mov
add
push
jmp
frstor
pushl
dec
jp
scas
mov
cltd
push
insl
ljmp
leave
sub
lcall
pop
pop
mov
decl
cs
aad
in
push
neg
and
outsl
adcb
jmp
dec
ja
xor
out
lds
decl
add
scas
dec
scas
sub
mov
dec
adc
mov
jnp
mov
dec
sarb
out
sar
add
adc
stos
jnp
fisttps
push
or
ljmp
stc
add
lret
out
scas
cmp
mov
xor
jg
incl
flds
adcb
loopne
mov
sahf
inc
cli
jmp
add
push
enter
xchg
lret
mov
inc
jg
pop
test
jbe
add
cmc
fadds
or
popf
push
inc
aad
pushl
clc
inc
adc
lahf
lcall
mov
call
pop
outsb
dec
popa
mulb
mov
push
pop
popf
xlat
out
sub
scas
int3
adc
ds
sub
sbbb
mov
lcall
std
shll
sub
fistl
cmp
scas
in
xor
inc
xchg
jg
lcall
sub
cwtl
loopne
sbb
scas
mov
shl
jle
loopne
lahf
or
dec
jl
sub
sarl
out
xchg
aad
inc
jo
mov
cli
mov
inc
test
ljmp
push
push
and
pop
cmc
inc
push
stos
sbbl
addb
xchg
sub
lock
sub
shl
mov
leave
mov
dec
push
push
mov
test
adc
jle
mov
and
jg
in
ds
pusha
add
add
sub
outsw
mov
add
cmp
ret
shrb
mov
pushl
pop
out
aas
jg
push
cmp
cld
sbb
insl
pop
mov
add
das
outsl
lock
inc
lds
mov
xlat
lock
cmp
lock
mov
push
or
add
in
push
jecxz
mov
or
test
lea
jecxz
mov
jbe
add
push
sbbb
sub
outsl
lock
push
mov
and
popf
bound
or
and
xchg
xchg
jmp
push
push
stos
jge
stc
xor
hlt
in
and
xor
sbb
pushl
push
loop
push
jns
push
popa
ljmp
call
lods
and
lret
test
pop
mov
iret
xchg
jne
lods
xchg
into
pusha
popa
cmp
decl
shl
mov
into
and
mov
xchg
adc
outsl
adc
lcall
scas
inc
or
jg
xchg
and
mov
fwait
sbb
test
in
adc
dec
test
push
sti
and
pop
cli
out
sbb
mov
cmp
adc
ljmp
sub
enter
cmp
cmp
loopne
popf
sti
mov
cs
cmp
jg
cmp
aam
scas
cmc
xchg
and
mov
pop
imulb
into
test
aaa
jmp
cli
outsl
jne
mov
lcall
pop
in
ret
cld
mov
mov
or
jno
jno
stos
pop
add
mov
inc
sbb
and
xchg
and
testl
clc
call
xor
mov
mov
shlb
or
and
cltd
ljmp
pop
sbb
in
add
adc
mov
push
xor
mov
jg
mov
mov
push
xchg
in
xchg
pop
xchg
ret
mov
mov
sub
mov
fidivrs
in
pusha
cmp
or
out
cmp
inc
popl
std
add
pop
jg
cmp
inc
inc
stc
movsl
sar
push
dec
xchg
rcrl
xchg
sub
fstpt
mov
and
inc
xor
inc
out
outsb
xchg
inc
dec
decl
in
xor
sub
out
test
push
pop
inc
cmpsb
cli
call
mov
inc
mov
mov
lock
sub
ljmp
arpl
pop
mov
hlt
mov
sub
xchg
xor
sub
pop
or
and
pushf
pop
mov
cmp
mov
jle
or
in
je
sub
fsubrl
cwtl
hlt
subb
ret
jmp
mov
adc
jge
dec
mov
clc
decl
cwtl
xchg
fsubrp
das
mov
jns
inc
sbb
xchg
enter
push
xor
jmp
mov
rcl
orb
xchg
sub
rol
icebp
cmp
fs
sbb
sub
pushl
lcall
nop
insb
fbld
out
aad
lahf
aaa
in
fprem1
arpl
and
pop
les
mov
or
mov
call
adc
add
outsl
inc
cmp
mov
mov
loope
ds
or
adc
pop
decb
mov
ror
shl
jp
out
in
imul
ss
jo
push
das
icebp
pop
clc
fdivs
add
mov
cmp
jmp
shrl
or
pop
xor
repnz
ss
jp
mov
and
mov
pushl
rolw
jecxz
mov
fs
adc
cltd
jp
mov
in
test
inc
xchg
stc
lods
mov
jmp
ret
push
push
xorb
sub
sbb
in
ljmp
js
lock
xor
call
mov
inc
add
aas
and
cs
adc
js
loop
ljmp
inc
mov
adc
pushl
mov
push
movsb
xchg
lret
fnstcw
cmp
in
pop
pop
clc
test
add
fisttpll
mov
mov
or
js
aas
ret
inc
fs
mov
sbb
pop
add
lods
jmp
cmp
cmp
xchg
outsb
movsl
cmp
dec
inc
mov
or
dec
in
fdivrs
or
mov
shrb
hlt
jge
idiv
push
pop
dec
mov
push
mov
jge
lds
nop
jle
adc
lcall
ja
test
mov
fimuls
cmpsb
js
add
push
repnz
cltd
and
lcall
shr
sub
jmp
mov
push
repz
dec
lea
add
xchg
mov
jne,pt
sub
lret
cmpsb
hlt
sarl
sub
call
aas
mov
das
xchg
cmp
push
fucomp
int
in
or
fildll
xor
adc
or
mov
push
sbb
movmskps
pop
ljmp
cmc
fisubs
outsl
repz
outsl
cltd
dec
push
test
and
xchg
mov
pushf
je
das
cld
decl
cmp
aad
dec
dec
out
pop
outsb
lea
sub
pop
ret
scas
ds
cli
jg
dec
hlt
and
ss
in
push
ljmp
adc
fsts
lods
addsubpd
ret
sbb
push
incl
xchg
dec
and
lcall
das
mov
cmp
movsl
incl
cmpsb
push
sub
pop
jge
lods
cmp
test
popa
mov
out
inc
aas
lods
fsubp
ljmp
cmpsb
inc
je
addb
sbb
test
aaa
pop
clc
test
rclb
push
xchg
movsl
jle
int3
inc
sbb
pop
pop
mov
call
ljmp
pop
mov
xor
fs
pop
pushw
xor
int3
cmpsl
sub
decl
push
mov
dec
jl
jb
dec
push
cmp
lret
sbb
jae
adc
pushl
or
sbb
xor
push
cmp
pusha
std
add
out
cmovno
jmp
pop
mov
sbb
es
add
jle
int3
sub
pop
dec
and
lock
mov
incl
and
inc
aad
fimuls
adc
hlt
fdivrl
andb
enter
push
xchg
andl
daa
int
dec
mov
adc
data16
cmpsb
in
sub
mov
cmp
sbb
jmp
xor
clc
and
ljmp
hlt
jo
sahf
mov
dec
sbb
xor
aaa
test
sarl
cwtl
insb
sbb
stc
mov
loope
das
icebp
sarb
mov
lods
fdivl
lcall
std
jg
adc
mov
fmull
fiaddl
pushf
je
lds
stos
sub
js
cmp
jae
cmc
test
shrl
hlt
call
hlt
addr16
jns
sub
lcall
popa
in
cwtl
dec
ljmp
daa
idivb
dec
sti
aas
daa
rcrb
lcall
fwait
test
mov
imul
xchg
sbb
mov
shrb
xchg
and
ljmp
mov
jl
and
fsts
je
xor
jmp
cmp
xchg
sub
ja
test
xor
das
loopne
or
jmp
dec
xchg
jg
pop
lods
adc
lea
insl
and
jnp
mov
adc
ss
subb
add
cmc
adc
add
jecxz
stos
cwtl
lcall
fsubs
sahf
sbb
inc
ret
mov
inc
stos
loopne
or
push
shlb
arpl
mov
stos
push
and
push
xchg
jecxz
test
cs
fs
lcall
call
or
fsubrl
xchg
jmp
adc
push
jg
test
cmp
movsb
xor
jmp
xor
pop
ljmp
std
stos
stos
hlt
jne
aaa
lea
ss
addr16
mov
cmp
jmp
add
jnp
cmp
leave
jl
aas
pop
testl
fdivr
mov
test
pushl
ja
push
add
pop
das
nop
std
inc
int3
call
stc
scas
mov
mov
dec
inc
das
out
sub
mov
repnz
pushl
movsl
into
rolb
pop
mov
cmp
ljmp
sub
push
pushl
push
adc
mov
mov
pop
mov
cmpsl
lret
and
loopne
jmp
call
mov
lea
and
add
call
xor
xor
sub
ret
arpl
mov
push
jg
addl
sub
mov
xchg
sbb
mov
inc
insl
jp
cmp
jle
test
mov
jne
cltd
sti
adc
push
xchg
xor
nop
outsl
out
push
sbb
mov
test
cli
push
xor
push
sarb
gs
sub
pand
or
mov
mov
les
insl
inc
xchg
in
inc
pop
das
pushf
xchg
jns
lods
int
rclb
inc
mov
adc
cmc
ret
dec
mov
shrl
push
fsubl
es
pop
adc
mov
mov
mov
arpl
scas
and
inc
cltd
out
lcall
arpl
xchg
rclb
xchg
fdivl
ljmp
ja
push
lea
cld
andb
mov
scas
pop
add
movsl
ds
xchg
push
jae
pop
or
nop
sar
pop
add
rclb
dec
pushl
sbb
mov
pop
les
and
push
stos
movsb
mov
test
cmp
lcall
insl
inc
or
lahf
cltd
jle
enter
mov
outsb
inc
cmp
loop
xlat
and
mov
shll
jae
pop
or
stos
movsl
dec
ljmp
add
aas
xor
cmpsl
xor
push
push
stos
cmpsb
push
lcall
clc
mov
jmp
aam
mov
xorl
xchg
xor
shrb
rol
xchg
pushl
mov
or
inc
cmc
dec
out
xchg
cwtl
fwait
shlb
xchg
pop
inc
in
or
jmp
push
std
xlat
mov
push
cmp
das
cld
pop
fidivrl
xchg
sbb
or
pop
inc
xchg
xchg
mov
cmp
xchg
nop
push
mov
cwtl
jne
push
gs
cwtl
dec
inc
dec
add
sbb
test
jg
addl
pop
push
mov
push
dec
das
or
or
fnstcw
ss
mov
xor
and
aad
jmp
mov
cmp
push
fdivrl
xor
stos
test
inc
bound
call
cltd
push
jmp
sub
pop
push
adc
scas
nop
xchg
push
out
sysret
sbbl
ljmp
mov
lds
push
mov
test
adc
mov
pop
pushl
aas
cwtl
ja
and
sub
push
sbb
inc
xor
jmp
sub
int
xchg
iret
pop
mull
hlt
or
jg
mov
push
ficompl
rcrl
dec
std
jnp
out
dec
out
dec
cwtl
in
cmpl
imul
push
out
xchg
fcoms
and
jp
dec
jp
mov
mov
repnz
mov
gs
pop
xrelease
les
out
pusha
fnstsw
ljmp
adc
pop
lea
or
out
in
insb
jge
xchg
xor
add
call
test
pop
fists
ss
das
loope
mov
repz
mov
and
cwtl
lods
pop
push
add
pop
add
pop
mov
decl
cmp
and
dec
mov
pushf
stos
cmp
scas
imul
xchg
push
pop
cld
push
mov
xchg
jge
cmc
fdivl
scas
cld
lds
mov
jg
or
push
sbbb
ret
jmp
test
pop
or
mov
xchg
test
jbe
fstpl
jecxz
incl
xchg
sbb
jbe
add
mov
or
mov
lcall
jmp
mov
push
int
jecxz
jnp
sti
or
shr
or
negl
das
lock
jmp
mov
add
push
imul
sarl
xorl
les
xlat
shrl
jmp
lock
push
fwait
push
push
fstps
xchg
add
rolb
dec
xchg
jae
cmp
and
push
mov
and
hlt
cld
clc
push
jle
jmp
adc
fmull
cmp
mov
xor
cmp
push
dec
mov
cld
mov
fldl
out
mov
jno
test
test
xor
xchg
fstpl
std
cmp
push
add
addr16
fs
mov
mov
call
fs
xor
inc
movsb
or
cmpsl
or
cmpsb
inc
cld
mov
test
incl
mov
insl
fsubr
les
arpl
inc
call
mov
out
fcoml
lahf
sub
iret
fdivr
call
inc
movsl
lret
shl
sub
cmp
mov
pop
sub
or
scas
xchg
cmpsl
jle
dec
sub
test
fldt
sbb
inc
mov
imul
bnd
jne
inc
dec
xchg
fwait
vmwrite
add
pop
movsb
add
sub
bound
xchg
add
aas
add
cli
mov
std
cld
and
mov
sti
or
pop
ret
dec
and
out
imul
pop
xchg
in
scas
or
mov
add
push
movsb
sbb
outsl
je
lcall
and
js
adc
stc
jmp
pop
scas
clc
mov
or
or
or
lods
mov
and
xchg
mov
out
aaa
pushl
mov
and
daa
or
inc
test
in
fstpl
fnstsw
and
mov
mov
add
xchg
fnstenv
mov
fstps
pushf
insb
sub
decl
imul
and
dec
clc
adc
mov
shl
xchg
and
call
dec
push
lahf
xchg
aam
pop
lock
ja
mov
lock
mov
push
jg
inc
int3
shr
pop
xor
cltd
js
mov
andl
inc
pop
mov
pop
cmpb
mov
sub
mov
mov
arpl
or
aas
pop
mov
sbb
or
xor
mov
and
dec
ljmp
inc
mov
jp
mov
sbb
sti
aam
lret
repz
inc
fs
iret
clc
inc
dec
jp
scas
in
popf
pop
xchg
cmpb
cs
mov
adc
std
jo
aaa
enter
call
movsb
inc
jg
mov
jmp
pop
pop
push
jno
enter
inc
mov
inc
js
fsubr
mov
int3
or
jg
cs
movsl
in
sahf
iret
movsb
arpl
mov
sub
push
mov
jp
inc
jnp
push
repz
data16
xor
repnz
adc
jmp
jb
test
push
scas
cmp
roll
sub
in
adc
int3
ss
sub
outsb
cmp
or
mov
jno
js
addr16
mov
std
jb
fildl
sbb
stos
adc
mov
add
pop
push
es
movsl
das
inc
scas
call
call
push
rcrb
cmc
test
divb
fstpl
test
jmp
mov
clc
mov
dec
pop
lods
aam
cld
movsl
mov
inc
fsubrs
push
popf
leave
mov
pushl
nop
insb
lgs
dec
movsl
out
cmp
cmp
enter
lret
ss
lret
into
push
in
popa
xor
pop
sub
xor
sub
add
into
jmp
imul
incl
jge
fmulp
mov
xor
xor
ja
lods
or
in
or
pop
call
outsl
std
pop
mov
loope
enter
in
adcb
mov
clc
sub
mov
xchg
cmp
dec
shl
xchg
ljmp
movsl
push
pop
je
pop
clc
daa
mov
xor
iret
add
xchg
jg
repnz
icebp
lock
sub
jae
dec
rcr
jg
icebp
icebp
jmp
sti
stc
mov
std
loop
push
hlt
clc
cmpsl
xchg
fcoml
mov
rorb
mov
adc
xor
cmpsb
mov
decl
xor
sti
aad
sub
mov
push
roll
cs
mov
cmp
pop
mov
mov
loopne
test
cwtl
mov
xchg
mov
sub
adc
jg
cltd
pusha
sub
xchg
fsubs
add
xor
insb
xor
sarl
pop
icebp
jmp
rorl
sahf
xchg
stc
jg
enter
movsl
stos
push
sbb
mov
fildll
in
icebp
mov
lcall
jp
fisttps
mov
arpl
or
in
icebp
inc
ds
test
in
xchg
fucomip
lea
dec
xchg
stos
outsb
fstpt
loopne
ljmp
mov
cmp
sub
cmc
jmp
mov
ja
cs
mov
pop
jp
add
aas
sub
jns
inc
std
inc
call
dec
fistpll
mov
dec
xor
pop
add
rolb
add
lcall
pop
lea
cmc
je
in
xchg
sub
lock
lcall
jnp
fs
push
cli
push
cmp
pop
dec
nop
pop
push
shlb
push
add
push
jns
les
inc
cmc
mov
inc
int
lcall
mov
in
push
and
dec
bnd
int
out
jmp
lds
out
xorl
push
rcl
adc
lods
fmuls
sub
popf
incl
int
icebp
dec
lahf
cld
pop
and
push
add
decl
xor
push
xor
loop
ret
ficoml
ljmp
shlb
movsl
incl
pop
or
adc
test
or
loop
push
push
xchg
aaa
fcomps
js
lods
sub
jmp
pop
jo,pn
fwait
flds
call
clc
loopne
mov
imul
loopne
incl
cmp
dec
and
adc
addr16
dec
ss
decb
cli
pop
pop
fisttpll
scas
jecxz
dec
insb
pop
cmp
filds
jmp
adc
mov
in
push
scas
push
add
scas
aas
test
jmp
pop
fcomps
push
hlt
sbb
int3
jbe
push
and
pop
pop
movsl
add
dec
jb
add
mov
ret
pop
ljmp
push
ljmp
fsincos
out
stc
mov
jns
cs
test
sub
out
es
fsubl
daa
adc
mov
or
sub
in
fcmovbe
cmp
out
jae
or
in
pop
push
xchg
add
out
cli
mov
subl
push
ljmp
mov
dec
cltd
sbb
and
in
sub
insl
cmpsl
inc
push
add
xchg
data16
jmp
pop
iret
and
add
push
mov
mov
out
test
dec
and
test
jnp
jp
outsb
lock
incl
push
push
dec
outsb
rorl
pushf
xchg
idivb
insl
sbb
shll
xor
das
cld
pushl
imul
arpl
pop
dec
test
movsl
ljmp
shl
pop
test
mov
arpl
mov
cmpsb
cmp
pop
decl
fidivs
adc
cld
xchg
jge
push
pop
adc
in
mov
in
outsl
jl
jbe
xorb
push
or
xor
push
lahf
sub
ud0
mov
pop
dec
nop
sbb
call
push
rorb
lock
dec
cli
call
cltd
lods
mov
nop
into
dec
adc
jle
les
daa
enter
lea
sarb
les
in
xchg
inc
hlt
push
lahf
pop
mov
movsl
mov
fcomps
cmp
push
or
jmp
mov
mov
out
or
decl
inc
pusha
or
adc
outsb
adc
jl
jns
ss
and
ficoml
decl
jno
shrb
sbb
bound
push
or
or
ljmp
adc
arpl
in
adc
sbbl
inc
push
push
push
mov
pop
push
lds
mov
pop
int
stos
push
pop
jp
mov
cmp
stos
push
icebp
xchg
shrb
std
xor
jnp
inc
insb
sub
adc
loopne
push
push
inc
test
decl
insl
int3
xchg
shr
cmp
lret
loope
cmp
dec
sbb
cli
and
int
in
push
gs
add
adc
movq
aaa
mov
jp
push
mov
push
es
icebp
push
les
fiaddl
cmp
inc
cltd
adc
jno
or
or
inc
xchg
push
adc
dec
xor
pushl
aas
insl
sbb
or
pushf
enter
pop
stos
sbb
fnstcw
ror
add
sbb
inc
test
call
aad
inc
or
mov
ss
sub
dec
enter
mov
sahf
sar
ljmp
shr
sub
nop
mov
mov
hlt
fcoml
scas
push
adc
gs
inc
push
ljmp
in
lds
mulb
push
mov
fcomi
xchg
fdiv
ss
sbb
aas
repnz
jg
das
loopne
dec
pop
cmp
stos
shlb
xor
cmp
lock
dec
inc
cli
jmp
jl
in
mov
fbld
das
cmpsl
outsl
xchg
push
inc
sbb
dec
rcrl
add
xlat
ret
clc
lea
iret
pop
call
clc
out
push
lock
mov
xchg
ljmp
push
mov
neg
fucom
sbb
jecxz
sub
incl
shrb
pushf
push
or
xchg
mov
pop
cmp
mov
int3
xchg
movsl
mov
lret
xchg
gs
arpl
dec
fidivs
gs
mov
mov
pop
sub
jnp
mov
call
in
xchg
push
in
lods
and
pop
or
gs
push
mov
popa
loopne
sbb
cltd
or
mov
jmp
icebp
jmp
ret
ljmp
jg
fstpl
pop
test
pop
mov
mov
mov
ljmp
push
xor
cmp
inc
leave
xchg
jle
mov
lcall
mov
out
push
cld
jge
stos
data16
push
notb
sti
test
les
dec
push
adc
popa
sub
sbb
test
jmp
lcall
dec
aas
mov
mov
out
pop
out
mov
aam
and
gs
in
pusha
or
and
ljmp
pop
jg
jg
fs
outsl
sub
fisubs
popf
push
in
sbb
sar
inc
add
jb
subb
lret
pushl
lahf
cmp
outsb
sub
addr16
lods
inc
sbb
push
jmp
push
idiv
jg
mov
dec
adc
push
sbb
arpl
mov
ret
mov
call
mov
icebp
jg
xchg
pop
mov
mov
in
subb
push
ret
pop
xor
pusha
or
or
call
cli
mov
hlt
mov
adc
out
pop
xor
pop
or
incl
cltd
dec
sti
mov
into
lea
movsl
ret
xlat
inc
adc
jl
idiv
cmp
mov
jmp
ret
dec
dec
js
mov
sbb
push
dec
les
int3
xchg
sbb
dec
adc
jbe
scas
imul
push
adc
movsl
call
std
nop
es
sub
call
mov
icebp
movsb
sub
xor
addr16
int
decl
inc
xor
int
idivl
out
ss
and
outsl
hlt
ljmp
mov
inc
rcrb
les
pusha
push
jg
call
pop
or
int
inc
xlat
mov
fisubs
insb
add
insl
adc
sti
scas
pop
in
mov
iret
nop
adc
inc
sbb
jb
mov
mov
popf
mov
cld
test
lret
cmp
mov
fistps
add
xor
dec
fstpt
or
xchg
cmp
inc
sub
inc
cmp
sbb
into
lods
jge
mov
sub
hlt
bound
stos
jb
mov
outsl
jo
sbb
leave
dec
sub
lcall
std
std
pop
adc
mov
shlb
ljmp
decl
inc
push
movsl
push
fldt
rorl
dec
pop
mov
dec
sbb
das
fwait
inc
mov
xchg
mov
shll
rcrl
sbb
push
popf
push
les
push
idivl
fs
inc
sbb
fwait
inc
ss
xor
mov
loopne
sub
mov
pop
mov
cmp
test
dec
ret
scas
sbb
jg
stc
lcall
lret
pop
sbb
lret
mov
movsl
or
mov
call
ret
jp
lods
pop
sub
lds
icebp
mov
dec
sub
incl
adc
pop
sbb
dec
loopne
push
in
adc
dec
in
dec
pmaxub
mov
pop
loop
inc
jmp
shrb
idiv
jmp
mov
ss
dec
shll
loopne
shlb
fiadds
mov
sbb
add
incl
stos
pop
int3
sahf
add
mov
ret
imul
jle
mov
mov
sti
cmpsb
push
cld
xchg
adc
dec
push
mov
sahf
outsl
or
jg
test
aad
incl
in
inc
and
pop
xor
inc
loope
jnp
fdivr
outsl
cmp
test
sti
imul
pop
mov
lods
outsb
into
jmp
mov
cmc
outsl
imulb
stc
jl
movsb
pusha
sub
stc
mov
and
mov
out
es
jge
mov
mov
leave
pushf
jns
addl
push
out
sbb
arpl
push
lcall
notb
lea
mov
aam
xor
mov
inc
cmp
jg
inc
jg
lret
cmp
fnstcw
mov
ret
fsubrp
incl
adc
inc
in
jnp
sbb
mov
rcll
repnz
push
mov
and
fiadds
or
mov
add
je
lods
sbb
call
sti
mov
out
jb
stc
dec
and
pop
cmp
inc
push
mov
jp
cmpl
mov
ret
clc
inc
add
push
mov
cmc
lcall
fimull
push
jecxz
mov
les
shll
pop
cmp
or
mov
rclb
je
call
incb
jnp
mov
xlat
lods
mov
int3
xchg
xor
dec
paddw
incl
adc
rcrb
cmpsb
or
mov
out
jbe
decl
int3
mov
shlb
les
jns
mov
stc
jmp
mov
aad
inc
cmpsb
pop
lret
jmp
rcll
insl
daa
cmpb
jl
xchg
mov
hlt
pushf
pop
out
mov
pusha
daa
push
inc
mov
cmp
sub
mov
jno
or
sub
fwait
popf
add
or
scas
inc
jne
push
popa
inc
add
popf
push
fldz
mov
mov
je
or
or
dec
outsb
imul
jo
mov
and
or
fstpt
outsl
ja
xor
jae
addr16
sbb
inc
imul
test
je
jge
push
inc
imul
popa
insb
push
jne
jb
or
or
mov
outsb
fwait
push
inc
stos
and
push
push
jno
or
dec
or
and
fs
popa
outsb
fs
or
in
push
jb
inc
fs
cmovge
ror
fs
and
jle
lds
sub
pusha
mov
loop
dec
outsb
outsw
negb
push
or
mov
lods
mov
inc
push
push
outsl
jne
and
fwait
sti
inc
outsb
jne
inc
inc
adc
jb
out
xlat
insl
insl
mov
mov
inc
cmc
imul
arpl
dec
fnstenv
xlat
push
mov
dec
sub
push
adc
imul
in
scas
or
insb
insb
shll
sub
or
data16
pop
fld
and
dec
lods
lock
lahf
imul
sub
ret
jns
inc
insb
jae
fiadds
arpl
mov
push
pushf
imul
test
popa
xchg
jo
mov
inc
outsl
insl
insl
xor
and
cmpb
out
mov
je
inc
cmovae
jae
movsl
jge
mov
xchg
push
jg
push
mov
mov
push
je
sbb
inc
and
pop
fisttpl
popa
imul
sbb
jo
and
leave
ja
sub
sub
imul
aaa
mov
icebp
outsb
dec
gs
cmpsl
fstps
ljmp
int3
push
aam
push
pop
imull
out
jo
insb
pop
mov
add
push
xchg
cmp
or
pop
push
les
fabs
insb
jecxz
outsl
cmovae
pop
out
adc
sub
gs
sbb
dec
sbb
dec
popf
outsb
pop
mov
xchg
cmpsb
bound
mov
xchg
mov
dec
imul
push
inc
add
add
pop
inc
sub
out
jg
add
sbb
jl
add
mov
subb
nop
inc
or
add
mov
mov
out
sub
adc
pop
xor
pop
jae
insb
add
xor
mov
nop
popf
add
loopne
or
test
fnsave
fsub
push
inc
dec
inc
inc
aam
nop
jl
mov
adc
and
inc
push
inc
loopne
or
pop
sti
pop
andb
rolb
and
mov
jbe
pop
mov
dec
shrb
popa
stos
repz
into
xchg
je
or
jae
or
stc
xor
int
xor
daa
rolb
adc
jb
push
adc
add
loopne
or
jae
es
jne
add
lock
pop
lcall
pop
in
mov
hlt
add
add
add
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
dec
inc
add
add
add
add
add
push
add
add
add
orb
add
and
add
add
add
add
add
add
add
add
add
addb
cmp
add
test
add
rolb
add
clc
add
addb
add
add
add
add
add
add
add
add
add
jo
add
in
icebp
add
lock
add
add
add
add
add
add
add
add
cwtl
add
add
repnz
fadds
add
in
add
add
add
add
add
add
add
rolb
add
add
in
add
add
add
add
add
add
add
call
testb
jl
add
in
add
add
add
add
add
add
add
adc
add
nop
stc
add
mov
add
add
add
add
add
rolb
orb
add
add
rolb
add
add
add
add
add
add
add
pusha
add
add
cld
add
jp
add
in
add
add
add
add
add
add
add
mov
add
lods
repnz
adc
add
in
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
mov
push
add
leave
push
add
xchg
push
add
push
add
pushf
push
add
jecxz
add
movsb
push
add
in
push
add
lods
push
add
cli
push
add
mov
add
add
add
adc
add
push
add
xor
add
add
dec
push
add
add
add
pop
push
add
add
add
push
add
add
add
jp
add
add
add
mov
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
imul
push
add
add
outsl
jo
popa
jb
popa
outsb
je
outsl
jo
add
add
jae
jb
gs
je
imul
push
js
inc
add
mov
mov
add
mov
mov
add
mov
mov
add
dec
push
add
pop
mov
add
call
push
add
fdivl
add
add
add
jmp
push
add
in
add
in
push
add
push
add
add
add
add
cli
push
add
les
add
add
add
cli
push
add
inc
mov
