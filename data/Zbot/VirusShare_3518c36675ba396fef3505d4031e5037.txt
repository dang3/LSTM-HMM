jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
mov
push
push
movl
jmp
cld
add
js
jmp
sub
add
add
add
push
add
jmp
jge
cmc
cld
add
clc
add
add
add
add
sbb
add
inc
pop
add
add
add
add
add
rol
add
add
add
int
cld
add
add
add
add
cld
cmpl
jl
pop
pop
pop
ret
nop
nop
nop
push
mov
push
jmp
stc
inc
dec
add
add
add
add
shr
add
add
ret
nop
push
mov
add
push
push
movw
movb
movl
movl
movb
movb
movl
mov
cmp
jg
je
sub
je
sub
je
sub
je
jmp
sub
je
sub
je
jmp
xor
mov
xor
mov
imul
mov
xorl
jmp
xor
mov
xor
mov
imul
mov
call
movl
lea
xorl
jmp
xor
mov
xor
mov
imul
mov
call
movl
xorl
jmp
fldl
call
and
cmpw
jne
mov
jmp
xor
mov
mov
fldl
faddl
fstpl
mov
movl
xorl
jmp
xor
mov
xor
mov
imul
mov
mov
lea
mov
rep
xorl
jmp
orw
fldl
call
xor
mov
or
lea
imul
mov
xorl
cmpl
jne
xor
pop
pop
mov
pop
ret
addr16
sub
stc
lahf
cld
fdivrl
push
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
add
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
pop
pop
ret
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
mov
and
andl
mov
mov
mov
mov
add
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
jmp
jmp
lea
push
call
pop
test
jne
push
call
pop
jmp
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
add
mov
and
add
add
cmp
jae
mov
jmp
add
and
mov
and
cmp
jne
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
test
je
mov
push
push
push
call
add
push
call
pop
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
cwtl
inc
add
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
mov
jmp
add
mov
sub
cmp
jb
mov
sub
pop
pop
pop
mov
pop
ret
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
mov
pop
pop
pop
ret
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
cmpl
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
pop
pop
pop
ret
nop
push
push
push
push
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
jl
cmp
jle
mov
mov
movsbl
mov
jmp
neg
cmp
jge
movl
mov
or
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
push
mov
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
pop
ret
nop
nop
nop
push
push
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
pop
pop
ret
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
fstcw
fwait
mov
orb
fldcw
fistpll
mov
fldcw
mov
mov
mov
pop
ret
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
ret
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
xor
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
addr16
add
inc
add
addr16
add
inc
add
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
cmpb
jne
movl
push
push
call
movb
mov
push
call
pop
mov
inc
jne
movl
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
cli
jl
add
jl
add
jp
add
jl
add
jl
add
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
add
inc
cs
add
add
xor
add
add
ss
add
or
inc
inc
add
or
sub
add
or
push
inc
add
add
pop
inc
add
add
inc
add
add
inc
add
add
add
add
imul
add
add
add
add
xor
add
jl
inc
add
add
pop
inc
add
add
arpl
add
add
or
je
cmpl
outsb
and
sub
sub
jns
imul
cmp
and
jo
imul
jo
jb
je
outsl
outsb
add
add
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
popa
inc
add
arpl
cmp
inc
add
add
mov
add
scas
inc
add
nop
movsl
jnp
jno
adc
bt
mov
mov
mov
xchg
jnp
shl
lock
or
mov
jnp
cld
jnp
cld
incl
aam
and
jge
pop
sbb
or
psllq
xchg
jnp
xchg
jns
mov
xor
mov
fdivp
xchg
jns
push
xchg
lret
jne
pop
jne
jne
push
jo
push
push
setbe
jne
pop
jne
loop
jne
jnp
shl
lock
jnp
cld
xchg
jnp
cld
xchg
jnp
xchg
jnp
xchg
jnp
call
xor
jnp
or
int3
repz
jnp
mov
dec
jnp
mov
xor
or
mov
jnp
call
xchg
mov
mov
lock
shl
lea
jnp
dec
xor
repnz
cld
repz
jp
lret
test
jp
repz
test
jp
test
jnp
aam
movsl
or
dec
repz
and
xor
jnp
in
repz
incl
xor
repnz
repz
jns
sbb
lgs
test
adc
movzwl
jne
push
setne
jne
push
je
movsbl
jne
push
setno
jne
push
setge
jne
push
setne
jne
push
sete
jne
push
push
ss
push
setns
jne
push
jo
setne
jne
push
ud1
jne
push
setle
jne
push
setbe
jne
push
setg
jne
push
ss
mov
mov
xchg
ss
test
mov
mov
ss
xchg
ss
test
mov
pushf
ss
xchg
ss
mov
ss
sahf
ss
xchg
ss
pushf
ss
xchg
ss
mov
mov
lock
mov
mov
cltd
ss
sahf
ss
xchg
ss
mov
ss
xorl
js
ss
test
mov
xorb
jnp
ss
xchg
ss
mov
mov
lock
pmulhrw
ss
setne
jne
je
bt
jne
jns
jae
je
setne
jne
setge
jne
pfmax
ss
setns
jne
setge
jne
setne
jne
ss
bt
jne
setns
jne
pfnacc
ss
setne
jne
setg
jne
pfrcp
ss
cpuid
ss
setne
jne
jae
setg
jne
jne
jb
setae
jne
setne
mov
lock
bsf
jne
setg
jne
setno
jne
pfmin
ss
cpuid
ss
setne
jne
jae
setg
jne
jne
jb
setae
jne
setne
jne
ss
bsf
jne
setg
jne
setae
jne
setnp
jne
cpuid
ss
setne
jne
jae
setg
jne
jne
jb
setae
jne
setne
jne
jge
adc
push
jnp
or
add
lock
lock
mov
inc
clc
lock
xor
out
push
jnp
or
add
test
ljmp
jne
pfcmpgt
xchg
jnp
loop
setbe
repnz
jae
lret
cmp
jae
lret
sbb
jge
testb
push
xchg
lret
inc
loop
jne
bsf
jne
setg
jne
setno
jne
pfmin
ss
bsf
jne
setns
jne
setb
jne
jb
setno
jne
jb
jns
cmpxchg
jne
jge
aad
push
jnp
or
cmp
mov
mov
mov
ss
jno
jnp
or
sbb
jne
pfcmpgt
jnp
or
sbb
xchg
pfcmpgt
jnp
or
adc
jne
pfcmpgt
jnp
or
adc
into
pfcmpgt
jnp
or
and
jne
pfcmpgt
jnp
or
and
mov
icebp
lock
lock
mov
or
mov
mov
cmpsl
lcall
adc
shld
jns
pop
lgs
lea
xchg
ss
setl
jne
setl
jne
je
jne
jb
setno
jne
setl
jne
cmpxchg
jne
setg
jne
setae
jne
pfrcpit1
ss
setns
jne
jge
mov
jnp
or
lcall
jnp
xor
lcall
jnp
xor
and
mov
stc
jnp
add
repz
lock
icebp
cltd
sub
icebp
lock
cmp
add
repz
test
out
jge
add
pop
xchg
scas
scas
stos
jnp
lods
xor
lock
pcmpeqw
lock
pcmpgtd
mov
ss
lcall
scas
or
xor
cmp
pcmpeqw
sbb
test
test
jnp
xor
xor
and
jnp
jnp
mov
mov
ss
jns
setns
jne
jge
jne
ss
btcl
vmwrite
pcmpeqw
test
ss
lods
andl
movsl
and
test
setbe
cpuid
mov
fsubl
push
add
add
add
add
add
add
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
sub
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
enter
enter
enter
fdivr
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
cld
sub
add
fdivr
incl
add
add
inc
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
cs
add
incl
add
add
pushf
inc
add
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
pusha
add
add
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
shlb
repnz
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
add
inc
add
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
inc
add
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
inc
add
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
inc
add
inc
add
inc
add
add
add
add
jb
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
add
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
add
add
inc
add
add
mov
lods
inc
add
lods
inc
add
add
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
les
inc
add
ds
add
ds
add
ds
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
fdivrl
inc
add
ds
add
ds
add
ds
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
inc
inc
inc
add
inc
add
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
cmpsb
fbld
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
sub
add
pop
inc
add
pop
inc
add
popa
inc
add
arpl
add
add
dec
outsl
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
pop
inc
add
pop
inc
add
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
add
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
loopne
inc
add
incl
add
add
mov
add
add
push
add
add
incl
add
add
add
add
sarl
add
jge
add
incl
add
add
add
or
add
js
inc
add
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
loopne
cmp
add
xchg
icebp
add
fdiv
add
je
add
mov
icebp
add
lods
icebp
add
mov
icebp
add
icebp
add
loopne
add
in
icebp
add
icebp
add
adc
add
sub
add
cmp
add
dec
repnz
pop
repnz
jo
add
test
add
nop
repnz
mov
repnz
repnz
repnz
call
repnz
push
repz
sbb
add
sub
add
xor
add
inc
repz
push
repz
add
jp
add
mov
add
sahf
repz
stos
repz
mov
add
ret
add
repz
in
repz
cld
repz
or
add
add
add
lods
icebp
add
mov
icebp
add
icebp
add
loopne
add
in
icebp
add
icebp
add
adc
add
sub
add
cmp
add
dec
repnz
pop
repnz
jo
add
test
add
nop
repnz
mov
repnz
repnz
repnz
call
repnz
push
repz
sbb
add
sub
add
xor
add
inc
repz
push
repz
add
jp
add
mov
add
sahf
repz
stos
repz
mov
add
ret
add
repz
in
repz
cld
repz
or
add
add
add
push
hlt
add
sub
add
cmp
add
add
add
push
hlt
add
sub
add
cmp
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
js
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
gs
imul
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsl
popa
fs
imul
add
add
push
popa
imul
jo
imul
push
je
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
imul
add
inc
outsb
jne
push
push
push
imul
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
cmp
add
add
add
add
add
add
add
sub
add
xor
add
cmp
add
pop
adc
add
add
push
add
add
add
add
add
inc
ja
je
push
outsl
dec
jno
dec
push
dec
imul
pop
pop
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
inc
add
add
add
addb
add
add
add
add
add
add
add
filds
add
xor
add
add
add
add
add
add
add
or
add
add
pop
adc
add
add
in
add
add
add
push
in
lret
push
jmp
jae
mov
cmp
inc
lds
push
rcrl
stos
sub
xor
ret
mov
ficompl
call
cmp
lds
mov
test
push
out
jne
or
add
inc
mov
arpl
cwtl
pop
sub
xor
or
test
data16
and
cs
mov
iret
fwait
mov
and
mov
jecxz
leave
xchg
dec
xchg
in
enter
pop
mov
and
ds
jle
popf
jge
pop
mov
adc
push
stos
into
jecxz
sub
in
mov
leave
mov
inc
mov
sub
jmp
mov
ja
loope
adc
bound
pusha
sub
push
dec
dec
fdivrl
cmp
xor
daa
and
mov
insl
dec
adc
or
stc
idivb
xchg
mov
loop
adc
int3
inc
mov
xor
mov
xchg
nop
lea
fistpll
js
push
aad
dec
push
out
outsb
loop,pn
dec
dec
bnd
xchg
cmp
xor
and
andl
or
div
xlat
xchg
inc
in
fbld
loopne
popa
ror
lret
mov
and
mov
nop
mov
jge
jbe
dec
pop
fbld
popa
shrb
and
push
dec
dec
out
stc
inc
xchg
cmp
inc
mov
xlat
and
popf
in
and
mov
add
inc
rorl
ficompl
pop
divl
push
or
mov
stos
aaa
popf
mov
and
or
sti
pop
sbb
pop
pop
push
leave
imul
mov
inc
xchg
xor
sub
pop
pop
test
je
or
push
repz
jns
sahf
inc
fmuls
mov
leave
mov
test
pop
mov
scas
push
xchg
fbld
pushf
cltd
cs
ljmp
add
push
sbb
pusha
pop
pop
in
sub
dec
dec
inc
rolb
inc
xchg
xor
mov
pop
cltd
and
sbb
or
nop
cmp
je
xchg
pop
loop
fsubl
test
push
clc
les
mov
rcll
mov
out
daa
mov
leave
jns
jae
push
adc
fs
pop
leave
popa
das
loope
dec
dec
fdivrl
cmp
xor
pop
push
cltd
and
insb
lret
adc
sub
clc
cmc
jp
xchg
aas
out
loopne
jecxz
add
into
lret
pop
cld
mov
and
mov
xchg
mov
mov
ja
dec
adc
push
and
jle
cmp
mov
and
adc
xchg
xor
cld
stc
pop
lret
ljmp
aad
iret
push
lock
cmp
lret
imul
nop
sbb
jle
jmp
imul
push
push
out
xor
cmovns
sub
lcall
adc
in
add
jo
mov
out
jmp
jnp
movsl
cmp
hlt
mov
or
xor
xchg
xchg
add
jg
inc
or
jo
push
pop
sbb
jbe
xchg
inc
inc
inc
mov
cs
sbb
jmp
sbb
mov
add
push
out
in
fistps
pop
call
ret
ret
pop
mov
lods
xor
fimuls
fwait
cwtl
push
stos
cmc
popa
mov
fwait
je
outsb
clc
push
pop
mov
pop
lds
cmpsl
dec
inc
inc
roll
inc
shll
pop
lret
and
or
or
div
lock
rcrl
dec
in
test
int
dec
stc
mov
xchg
shlb
scas
jmp
or
jb
push
adc
outsb
cs
dec
dec
dec
fistpll
sarl
xor
push
xchg
and
or
hlt
imul
adc
loop
dec
loopne
sub
int
push
std
mov
aas
xchg
pop
cmpsb
mov
popa
xchg
mov
jge
jbe
dec
pop
jge
fs
les
inc
push
dec
dec
ret
push
cmp
aaa
lahf
or
and
add
jle,pt
sti
clc
outsl
lret
xchg
std
call
mov
push
icebp
mov
or
movsb
xor
sbb
jge
cld
dec
or
push
push
push
push
push
lret
dec
inc
cmp
sub
fcompl
xor
mov
cld
arpl
mov
in
ljmp
aad
fs
mov
ret
sub
stos
test
fwait
in
cwtl
xchg
xchg
or
in
rcpps
imul
push
push
in
ja
push
inc
inc
aas
lods
add
sub
add
sbb
pop
add
addr16
out
lock
jmp
fcompl
pop
jmp
roll
xorl
xchg
pushf
lcall
test
jb
insl
loopne
push
push
pop
pop
pop
imul
add
pop
xor
pop
or
sub
or
add
movl
loope
fimull
stos
in
enter
xchg
mov
mov
xchg
fucom
mov
call
add
pop
cmp
jno
push
adc
pop
pop
shrb
outsb
dec
dec
inc
jmp
inc
push
cmp
sbb
and
ud2
or
div
push
nop
fsubp
loope
push
loope
ljmp
mov
adc
xor
and
ret
push
mov
adc
sub
dec
aad
xchg
pop
sbb
pop
pop
push
call
inc
inc
mov
inc
jns
xor
pop
sbb
mov
jne
or
add
icebp
out
jno
lahf
test
ljmp
xchg
icebp
mov
scas
cmp
fsubr
mov
jmp
mov
aas
ja
jo
push
sbb
aam
sub
dec
dec
inc
std
jns
jns
xor
rcll
push
dec
and
sbb
das
imul
test
aad
mov
loopne
data16
scas
mov
sti
mov
cmp
mov
cli
mov
jnp
je
push
adc
bound
pusha
sub
push
dec
dec
in
jge
pop
cmp
xor
daa
and
nop
and
adc
or
stc
imulb
xchg
mov
in
inc
loop
mov
iret
int3
ss
mov
or
aam
test
jecxz
xchg
nop
lea
mov
js
dec
adc
ljmp
jno
ds
mov
daa
and
daa
popa
bound
setge
jl
add
cli
jl
mov
out
scas
xlat
rcl
pop
repz
xor
test
out
xchg
xchg
xchg
adc
jl
dec
or
insb
push
rcrb
sub
push
aam
xor
inc
inc
cmp
das
sub
mov
lea
push
adc
add
jbe
jge
in
jmp
fcmovnbe
aam
divl
sub
lods
stos
cmp
xchg
sbb
and
or
ret
pop
sbb
pop
pop
push
les
int
inc
inc
mov
inc
mov
das
sub
pop
pop
movsl
sbb
pop
mov
je
or
jne
lock
adc
and
mov
dec
ret
sarb
stos
test
outsb
mov
insb
mov
mov
insb
jecxz
push
xchg
cwtl
sub
push
push
dec
rcll
mov
ss
xchg
sub
insl
mov
or
add
icebp
popf
push
cli
ja
dec
cmp
mov
mov
push
lods
add
jecxz
lcall
mov
sub
cwtl
fwait
sahf
rclb
arpl
mov
mov
and
stc
outsb
loop
push
stc
add
repnz
clc
jmp
jb
jb
cmpsl
sti
push
sbb
and
pop
fnstenv
cmp
movsb
cmp
inc
xchg
mov
lock
mov
fwait
pop
jns
jg
test
mov
cwtl
shll
mov
stc
cs
sub
pushf
inc
cs
adc
js
or
cmp
in
rol
aaa
rorb
ljmp
aad
iret
inc
cli
pop
stc
pop
sarb
xchg
pop
les
test
cmp
nop
push
adc
bound
loop
cs
dec
dec
dec
fistpll
xchg
cmp
xor
and
cmpsl
and
push
or
mov
jp
sti
div
jl
xchg
dec
in
fists
lods
jbe
int
push
std
mov
aas
xchg
or
in
ss
mov
jge
jbe
dec
pop
lret
popa
mov
dec
dec
out
stc
sub
add
insl
shll
outsl
insb
mov
or
movb
push
mov
movsl
scas
inc
into
lret
enter
repz
decb
movsb
mov
call
inc
cli
out
jp
je
xchg
imul
bound
shlb
dec
dec
inc
fnsave
xor
and
dec
xchg
or
or
ficomps
fldt
and
or
into
sbb
push
rcl
adc
xor
mov
imul
cli
loopne
inc
jmp
xchg
inc
push
fwait
loop
mov
addr16
ja
mov
sbb
movsb
test
cmpb
inc
mov
push
sbb
xchg
in
and
lds
jbe
push
push
sbb
mull
call
xor
lret
into
pop
push
enter
mov
jmp
cs
icebp
stc
clc
cmc
dec
adc
push
xchg
cltd
mov
fcmovbe
jnp
je
addr16
push
stos
leave
jnp
stos
cmpsl
or
in
lcall
jl
xchg
mov
mov
xchg
sbb
sbbb
scas
dec
loopne
ss
cmp
xor
mov
mov
mov
cmp
mov
jl
jno
inc
xor
mov
jmp
in
fidivs
cmpsl
test
int3
leave
insb
mov
mov
adc
push
imul
rorl
ret
shlb
pop
pop
push
sti
push
in
cmp
inc
ds
cltd
inc
mov
test
or
movsb
cmp
mov
mov
incb
push
xchg
xchg
pusha
pop
jbe
test
imul
cwtl
int3
xadd
es
adc
xchg
sbb
sub
ljmp
xchg
push
dec
pop
jl
sub
jecxz
xor
pushf
pop
test
mov
imull
sbb
out
stos
jo
lea
pop
inc
xchg
cltd
sub
fcmovbe
jnp
fs
test
insl
mov
lods
push
pop
pop
pop
in
loope
xchg
xchg
and
cmp
das
jge
add
push
sbb
mov
bound
sub
dec
call
addb
xlat
pop
pushf
push
pop
and
mov
or
orb
loope
clc
lods
outsl
mov
imul
movsl
shl
mov
xchg
xchg
aas
stc
xor
pop
add
iret
sub
nop
push
push
dec
in
out
imul
sbbb
mov
xor
cmp
add
push
cli
pop
fildl
loop
test
aad
shl
mov
mov
or
mov
push
jne
lret
xchg
bound
es
dec
pop
mov
xor
stos
push
mov
cmp
gs
xchg
pop
mov
jg
adc
sbbb
or
and
dec
jne
jp
add
push
outsb
in
sub
mov
dec
xchg
shrb
das
or
jp
mov
adc
mov
fdivs
pop
pop
xchg
fldl2e
jns
repnz
ror
adc
stos
xrstor
inc
scas
add
sti
jo
push
sbb
popf
inc
stos
shlb
cwtl
cli
push
mov
pusha
sub
pop
sbb
daa
cmpsb
addr16
ja
mov
and
rcrb
loop
test
inc
cli
cli
rcrb
and
push
insl
js
lock
in
cwtl
daa
add
dec
mov
mov
fists
arpl
jns
push
jnp
sbb
cmp
cltd
in
push
dec
popl
ret
lods
fisttpl
mov
cmp
cmp
fwait
push
icebp
mov
mov
fisubrl
inc
push
xlat
imul
shrd
popa
mov
les
outsb
ficoms
fisubl
inc
pop
and
gs
cld
add
pushf
mov
sbb
or
mov
scas
and
jbe
fsub
icebp
cwtl
lret
fwait
stc
aad
mov
push
in
lret
or
add
aas
adc
pop
lret
add
lock
pop
sarl
pop
sbbb
notl
and
mov
fs
ja
mov
mov
push
ficomps
divb
sub
jo
push
lods
aas
scas
nop
cmc
xchg
hlt
pop
sahf
mov
outsl
aam
fs
jbe
aad
push
rorb
and
loopne
or
ds
inc
cmp
mov
shrl
jmp
scas
adc
jle
xchg
xchg
push
subl
fucom
cld
rcl
push
mov
mov
test
push
ss
mov
mov
xor
xor
test
xor
int3
push
jl
push
cmc
outsb
stos
dec
mov
ljmp
xchg
test
test
in
pop
add
xchg
call
test
mov
cltd
dec
mov
push
xchg
inc
xchg
jne
pop
add
gs
jnp
push
sbb
sbb
ret
jge
lock
hlt
dec
out
mov
stos
pop
jns
ret
mov
sbb
shlb
ja
popl
test
cmc
leave
fnstsw
fildl
call
ds
sahf
mov
cmp
cmpb
or
pop
inc
push
push
imul
push
jg
or
movb
test
jecxz
cmp
movsb
push
xchg
push
rclb
mov
aam
xor
or
fisubl
popf
mov
dec
adc
pop
adc
dec
pop
cmp
jg
lods
aaa
popa
and
notl
testl
and
enter
jmp
jmp
cmp
push
icebp
dec
cmp
push
das
inc
xchg
es
lods
and
and
test
and
dec
and
cmp
sbb
xorb
and
jecxz
inc
jmp
popf
push
and
ret
jl
push
sub
xor
push
dec
push
adc
lcall
insl
lret
xchg
mov
aad
hlt
push
ss
fucomip
pop
mov
test
xor
cmpb
xchg
ret
inc
rcr
or
cwtl
jo
xchg
daa
rcrb
xchg
popa
sub
jo
fwait
in
mov
mov
lahf
fwait
outsb
scas
jmp
add
mov
test
cli
aam
xor
push
push
mov
cmp
and
aas
and
cmpsl
jecxz
adc
in
iret
lea
in
mov
inc
cmpsb
dec
popf
mov
sbb
xchg
jge
jbe
insl
imul
add
bound
mov
pusha
mov
adc
sub
push
ss
sub
mov
rcrl
test
fcmove
adcb
mov
sbb
call
das
inc
push
iret
inc
dec
lods
push
andl
jle
mov
outsb
xchg
cmpsb
pop
xchg
inc
ja
js
mov
cmp
or
dec
incb
nop
sarb
sub
mov
daa
add
sub
sbb
dec
and
xor
jge
je
fisubrs
sbb
ret
std
out
mov
jge
dec
addr16
shrl
dec
lods
cmp
in
and
mov
scas
adc
jp
arpl
into
mov
add
pop
mov
shlb
bound
cld
enter
insb
sbb
mov
dec
and
xchg
xchg
shlb
outsb
mov
inc
ja
js
pop
int
stc
icebp
in
fmuls
outsb
xchg
pop
aaa
sub
cs
aad
repz
idiv
not
movsl
popa
sub
inc
cltd
cmp
xchg
mov
addr16
popa
ljmp
ljmp
gs
outsl
inc
xchg
push
or
adc
shlb
imul
jl
jnp
in
inc
jle
pop
cmc
loop
mov
pop
popf
pop
aaa
push
jecxz
mov
int
movl
fstpl
paddb
xor
adc
clc
in
jecxz
sbb
mov
sub
xor
pop
jmp
std
add
lcall
xchg
ja
bound
mov
jo
inc
pop
pop
push
xchg
mov
sahf
inc
sub
jge
jne
int3
ja
bound
insb
fisttpll
sti
or
adc
xchg
outsb
mov
xchg
daa
xor
mov
pop
add
add
fucomp
push
jmp
xor
leave
lds
or
jmp
popf
mov
into
addr16
out
lret
dec
ja
push
not
fs
cmp
adc
inc
sbbb
mov
cmpsb
repz
push
cld
andl
imulb
pusha
loopne
push
gs
sub
jbe
mov
lret
stos
fwait
enter
aad
dec
xlat
xor
sub
push
aam
inc
jg
in
imul
dec
push
push
push
or
in
push
outsb
jbe
mov
and
mov
icebp
pop
inc
lods
dec
pop
dec
test
mov
mov
les
mov
cmp
in
sbbb
cmc
fwait
xchg
dec
cmp
mov
addr16
sub
out
cltd
sbbb
nop
cmp
aad
or
movsb
inc
sbb
andb
dec
mov
lea
fnclex
cmp
mov
leave
imul
xor
inc
mov
jb
shlb
xchg
mov
cmp
cmp
aad
add
nop
ljmp
clc
loope
jge
mov
rcll
ret
mov
jp
imul
repnz
imul
in
inc
out
xor
xor
bound
mov
sub
incb
jae
adc
mov
iret
into
mov
or
pop
cwtl
jg
push
mulb
add
iret
xchg
mov
andb
bound
inc
movb
mul
cmp
mov
sbb
fistpl
fadds
cmp
mov
sub
or
mov
div
icebp
stos
jnp
icebp
test
xchg
xor
in
mov
sbb
cmp
dec
clc
push
stos
inc
in
popl
push
icebp
push
mov
ljmp
jbe
loopne
mov
xchg
arpl
pop
mov
cs
aam
push
jge
aad
jo
dec
mov
inc
xor
push
fwait
sti
mov
test
mov
int
mov
clc
or
pop
cld
jge
jle
fcmove
movsl
inc
add
insb
dec
pusha
cmc
mov
mov
push
fwait
mov
jg
inc
pop
sub
jp
mov
dec
pop
push
sbb
sub
jg
out
push
push
xchg
cmpsl
push
or
test
mov
jecxz
pusha
cmp
stc
out
roll
fwait
xorb
mov
adc
clc
push
aaa
push
test
pop
aas
mov
mov
mov
mov
mov
hlt
rolb
pushf
mov
mov
pop
lahf
icebp
pop
out
add
addb
shl
cmp
inc
pop
mov
jno
cmp
add
pop
lahf
sub
es
push
sbb
xchg
jb
or
popf
adc
mov
arpl
movsb
jle
stos
stos
ja
lret
fs
pop
outsb
enter
sbb
pop
test
lods
cmp
add
stos
push
arpl
dec
adc
lods
hlt
nop
sti
mov
in
adcl
pop
cld
mov
jg
adc
inc
out
lcall
pop
arpl
leave
sahf
dec
into
roll
dec
and
fistl
mov
jge
std
and
das
sbb
mov
fiadds
loopne
adc
ja
cmp
cmp
cmp
and
cmp
insb
test
aad
stos
xchg
cmp
adc
sub
arpl
add
dec
push
lea
xchg
mov
popf
cwtl
mov
and
or
mov
loopne
loop
xchg
adc
add
subl
mov
jge
imul
pop
dec
or
pop
inc
les
inc
jle
sub
arpl
popa
add
orl
xor
les
mov
dec
enter
fisttps
les
xchg
test
out
das
es
rcrb
push
stos
push
cmp
or
push
stos
dec
push
stc
and
adc
and
scas
dec
xlat
loopne
aam
jae
orl
adc
adc
mov
lods
lea
mov
xchg
pop
jb
hlt
cli
pop
dec
iret
in
hlt
xchg
mov
or
inc
add
ljmp
shl
pop
mov
lcall
cmpsb
mov
jns
out
xor
adc
push
dec
pop
mov
dec
push
fsubl
add
xlat
cmp
push
loop
test
xor
or
int
jnp
icebp
jmp
push
aam
fiadds
xchg
inc
int3
stc
mov
mov
imull
or
jb
je
jle
popa
jno
push
push
dec
push
data16
dec
jo
aam
push
cmp
sbb
daa
mov
push
mov
add
movsl
testl
fildll
mov
jae
enter
mov
scas
push
movsl
mov
sub
mov
xor
push
jg
add
daa
adc
inc
lcall
inc
adc
jecxz
adc
inc
push
push
inc
std
jg
pop
shlb
pushl
push
xchg
mov
mov
scas
push
pop
mov
jle
clc
mov
inc
adc
mov
dec
ret
imul
dec
adc
sub
cwtl
mov
push
arpl
inc
pop
push
loopne
push
dec
xor
lds
jnp
insl
jl
into
and
push
clc
incl
adcl
mov
or
mov
jecxz
xchg
movsl
and
mov
ja
sub
insl
outsb
movsl
bound
ljmp
dec
mov
cmc
mov
ret
push
mov
addb
jp
inc
sbb
insl
push
xor
push
aas
dec
and
push
cmp
pop
sub
stos
test
lods
mov
jae
cmp
cltd
inc
dec
xchg
dec
out
lahf
pop
aad
mov
je
jle
js
add
or
push
adc
sbb
and
daa
repz
push
or
or
sbb
add
cmp
adc
ds
xor
dec
mov
xchg
and
sbb
sbb
or
idivl
pusha
jmp
fs
outsb
xlat
pusha
insl
stos
ret
fidivrs
int3
stos
mov
hlt
xchg
out
fwait
call
jle
adc
jo
js
jae
dec
xor
push
imul
sub
add
jl
jbe
jo
push
adc
lret
mov
xchg
or
lock
scas
lock
mov
out
aad
arpl
cmpsb
dec
mov
cmpb
cmp
popf
int3
jp
adc
fidivl
call
dec
xchg
xorb
ret
mov
call
inc
cld
dec
push
dec
jmp
add
cmp
int
aaa
je
jle
js
add
stos
push
push
adc
outsb
sub
movb
ficoms
in
jns
ret
lock
cli
mov
adc
lods
pushf
or
stos
xorb
js
rcll
push
les
fs
outsb
push
push
in
aas
add
push
and
sub
adc
mov
into
jmp
add
mov
cmp
fbld
call
inc
mov
hlt
dec
cmpb
jo
addr16
fs
imul
fidivs
jecxz
adc
out
and
push
mov
leave
int
fmulp
push
idivl
mov
lock
xor
jle
je
rolb
sub
stos
mov
adc
mov
xor
jns
jae
ja
jmp
popa
inc
pop
popa
dec
xlat
dec
dec
ret
cmpsl
jg
mov
adc
stos
lcall
xchg
fwait
inc
add
cmc
cmp
pop
adc
xchg
lret
jge
mov
daa
cmp
fisubrl
push
ret
xchg
mov
mov
hlt
mov
mov
test
jp
sbb
push
stc
bound
into
pop
sub
dec
dec
inc
rolb
cmp
xor
inc
and
pop
ljmp
pop
gs
sti
xchg
cltd
div
mov
and
mov
fistpll
mov
stos
in
fsqrt
imul
mov
xchg
rcrb
js
sub
jo
jnp
cld
dec
inc
aas
enter
push
stc
pop
push
and
sarb
add
movsl
push
imul
sbb
dec
out
enter
je
mov
int3
jnp
test
jbe
flds
loop
pushaw
pop
jno
push
push
bound
inc
outsl
fmuls
cltd
mov
lods
mov
jne
push
mov
inc
mov
cmp
mov
in
fdivrp
fsubr
shl
int3
test
rolb
jp
or
xor
loopne
aad
fstl
and
dec
iret
aaa
lds
dec
mov
mov
lods
jle
sub
push
mov
jge
jae
imul
push
int3
dec
xchg
inc
ret
cmp
aas
mov
cld
sub
sbb
fisttpll
addb
divl
jecxz
fcoms
aad
lret
push
rorb
dec
sub
inc
orl
jae
cs
test
outsl
dec
inc
jne
jg
inc
data16
dec
mov
lahf
std
leave
notl
xchg
adc
test
or
push
xchg
push
push
sbb
or
push
dec
add
jp
je
outsb
and
bound
pop
and
dec
or
std
lcall
and
push
and
stos
pop
sub
sub
shll
cmp
add
add
call
out
jmp
add
sarl
int
xlat
sub
cmp
pushf
pop
mov
mov
gs
mov
test
jp
jo
jbe
insb
ds
out
pop
adc
push
and
lret
inc
dec
inc
mov
test
loope
fisttpl
lret
iret
ret
insb
cmp
mov
jb
sbbl
sbb
push
movl
and
pop
inc
push
es
cmp
pop
jmp
js
stos
or
movsl
xchg
dec
or
out
cmp
fwait
xor
sub
sti
pop
cmc
mov
pop
movsl
cmp
pop
xor
push
jmp
stos
fstpt
and
cmpsb
jb
aaa
add
adc
lgs
adc
ret
xchg
sub
sbb
cmp
pushf
xchg
pop
nop
fnstsw
adc
mov
cmpsl
jmp
fmul
fs
cld
div
push
lock
lret
add
loopne
cmpsl
jnp
jno
outsl
or
cli
mov
sub
push
scas
push
push
dec
mov
js
jb
insb
je
xchg
pusha
sbbl
clc
xchg
or
cmp
pop
cli
jo
icebp
dec
in
mov
imul
pushf
jle
clc
mov
mov
cltd
subl
addr16
mov
adc
inc
inc
cmp
push
aaa
sub
sarb
jl
ja
jo
push
fs
dec
adc
pop
int3
test
and
lods
inc
int
mov
outsb
std
push
jno
sarl
pop
xor
push
jno
pop
sbb
lret
sbb
pop
mov
xor
mov
daa
jno
ja
jge
arpl
fnstcw
out
scas
adc
mov
cmpl
fidivrl
fsubrs
or
dec
cmp
adcb
mov
rcrb
dec
cmc
xbegin
inc
jae
cmpsl
je
jg
add
lock
fwait
dec
jmp
sub
push
pop
pop
lds
out
mov
ret
adc
push
fs
arpl
setne
pop
imul
xchg
push
test
cmpsl
cs
nop
movsb
popa
rcrl
lock
jo
push
pop
pop
cmp
dec
daa
inc
sbb
mov
repz
mov
lds
loope
scas
clc
xchg
repnz
in
out
loopne
fimull
enter
cmp
ss
xor
and
push
ja
push
jl
ja
imul
or
bound
pop
sub
push
cmp
sub
cmp
xor
inc
adc
mov
pop
push
and
sub
into
aaa
push
add
jmp
mov
add
fdivrs
loop
in
sub
xchg
lock
out
inc
mov
mov
cld
pushf
pop
cmpsb
mov
ja
fnsave
orl
add
mov
outsl
fadd
sarb
ffreep
jne
ljmp
call
jae
cltd
adc
mov
insl
ds
pop
xor
and
pop
fcoms
lret
dec
and
jl
jbe
jo
push
fs
xchg
or
mov
xor
mov
lret
mov
bnd
xchg
out
loopne
sbb
or
cmp
mov
and
pop
int3
pop
sbb
inc
stos
inc
aaa
jp
je
outsb
subb
jae
aam
jle
ret
mov
into
mov
dec
lods
call
fidivl
enter
cld
mov
ljmp
dec
adc
or
push
clc
add
lret
xor
cs
sub
mov
push
sbb
jle
js
icebp
imulb
in
and
push
pop
enter
mov
mov
fimuls
aam
pop
int3
lret
push
sar
fs
cmc
out
jg
loopne
mov
push
test
or
nop
add
sarl
sub
sub
es
and
mov
dec
pop
inc
xchg
jl
jbe
push
push
or
sti
test
outsb
out
fwait
in
jecxz
fsts
int
lret
mov
cmp
fisubrl
add
addl
ja
insl
imull
popa
ret
push
int
inc
dec
fadds
cmp
mov
and
sbb
add
push
push
gs
fcmovne
shll
rol
imul
lods
rol
jno
test
jmp
popf
ljmp
data16
js
or
arpl
sub
arpl
sub
add
mov
inc
dec
or
and
mov
data16
and
aad
rclb
cli
lock
testl
add
xchg
movsl
adc
cmpsb
cltd
ficoms
mov
jne
jae
imul
andl
outsb
or
sub
ljmp
aad
je
jo
imul
scas
cwtl
fadds
out
mov
xchg
cmpsl
cmc
fcoml
fidivs
pusha
sub
lds
dec
dec
jge
mov
mov
dec
divb
subl
cmp
scas
shlb
int3
fistpll
and
call
push
dec
daa
pop
adc
pop
mov
jo
sub
lcall
mov
push
pop
jb
iret
into
sub
adc
xchg
cmp
add
xor
push
mov
adc
addr16
ja
pop
jae
in
dec
js
push
pop
ljmp
scas
pop
jp
mov
imul
push
inc
aad
or
fistl
cmp
adc
and
inc
faddl
and
lods
scas
gs
cmp
jecxz
dec
fwait
roll
pop
fstps
sbb
lods
add
mov
out
push
fcmovnbe
imul
mov
jno
mov
sbb
pop
lds
rol
mov
sbb
sub
and
dec
or
sbb
add
les
add
pop
ss
jge
cmp
and
popf
mov
fdivl
sub
mov
push
pop
pop
inc
or
jp
neg
out
ljmp
stc
cs
sar
stos
pop
pusha
sbb
and
lock
cmp
test
fwait
sub
arpl
insl
insl
fisttpl
xchg
ret
ljmp
mov
dec
mov
iret
cmp
ret
pop
xchg
mov
fldcw
sub
ss
cmp
dec
jae
les
xrelease
in
xor
adc
jae
cmpsb
cmp
sbb
xor
push
pop
aam
aas
lds
or
xlat
mov
sti
inc
inc
repz
adc
jl
xlat
xchg
add
leave
scas
pop
fimuls
int3
subb
out
push
fdivrl
nop
dec
lcall
inc
enter
lock
inc
movsl
jmp
leave
xchg
jp
adc
out
jmp
mov
mov
pushf
push
dec
cmp
cmp
mov
lds
mov
xchg
pop
add
loopne
jae
pop
jns
cltd
mov
xchg
sub
test
daa
icebp
sbb
movl
sub
lock
xchg
sbb
push
pop
cmpsb
mov
cmc
aam
pusha
ljmp
popl
daa
push
jp
mov
adc
sbbl
sbb
fs
dec
icebp
inc
adc
or
in
jmp
sbb
cmp
lea
jb
cmp
std
sti
sub
cwtl
div
mov
lods
outsl
daa
push
test
in
mov
sbb
mov
jnp
sub
add
add
push
fcomps
xchg
lcall
add
das
pop
test
mov
movsl
mov
ljmp
cwtl
cmpl
gs
cs
push
lods
notb
add
inc
push
out
or
xor
fsubl
loop
mov
xchg
jecxz
jle
pop
das
sbb
mov
dec
xor
push
jnp
mov
subl
lock
js
adc
sub
out
jb
mov
jno
stc
jle
sbb
mov
out
ficompl
in
lods
add
mov
or
divb
adc
adc
int3
add
add
scas
add
inc
sbb
mov
add
add
cmc
add
es
lods
es
inc
mov
or
in
jnp
push
jnp
or
clc
push
popa
ljmp
jo
and
push
dec
lock
cmpsb
lock
pop
inc
cmpsb
incb
xor
aam
dec
inc
pop
sbb
xchg
out
xor
cmp
xchg
cmp
arpl
aaa
xor
inc
jp
fcomps
test
dec
cli
std
pop
jle
loop
mov
ret
rcr
addr16
pop
in
pop
std
mov
fadds
shr
pop
sahf
and
jge
inc
mov
inc
repz
mov
jp
add
adc
ss
sbb
xchg
or
rol
test
js
mov
mov
mov
or
lret
adc
in
ret
or
jb
arpl
mov
or
jg
call
movsb
aam
hlt
xor
xor
adc
push
inc
test
movsb
jl
movsb
jmp
push
call
popf
or
or
pusha
enter
sub
xor
inc
or
jae
xor
pop
fs
out
pusha
data16
jo
jns
or
mov
iret
insb
xchg
clc
loop
fwait
push
push
repz
std
inc
insb
sarl
in
rcll
mov
leave
popa
dec
add
pusha
inc
push
lret
pop
test
xchg
loopne
lods
test
les
jmp
shll
sti
mov
xchg
pop
inc
jmp
addr16
inc
push
add
stc
sub
pop
frstor
mov
mov
out
mov
inc
xor
lret
repz
adc
test
insl
in
cmp
fisubrl
call
push
call
out
in
call
pop
jmp
xchg
cmp
push
std
mov
enter
cmp
int3
insl
ss
add
cmp
packsswb
shrd
jp
dec
jbe
and
mov
mov
ret
bound
ret
icebp
pop
xchg
pop
mov
into
fimuls
lea
xor
in
fxch
jmp
jp
clc
jl
rorl
fadds
xchg
xchg
fbld
mov
push
dec
xchg
mov
insl
rclb
adc
fsubl
loope
aad
pop
ret
dec
inc
dec
call
add
sbb
add
mov
push
ret
push
loope,pt
nop
in
adc
mov
xchg
mov
test
pop
cli
push
dec
push
lahf
dec
fs
mov
mov
aas
jae
movsb
int
scas
fstp
fistl
getsec
int
and
iret
add
push
xchg
xorb
stos
mov
sbb
mov
mov
xchg
sarb
scas
mov
sub
cmpsb
popf
and
iret
or
sub
cli
cwtl
out
ret
add
cltd
jge
mov
lret
ds
xor
bnd
mov
sbb
mov
ficoms
je
js
psrlq
insb
mov
mov
and
dec
sbb
mov
dec
push
push
fsubrp
pop
repz
cli
fimuls
jne
adc
sub
mov
and
popa
mul
das
push
lds
stos
mov
lock
outsl
std
or
push
lea
fwait
lock
out
push
call
jp
call
jp
test
push
std
in
push
jp
push
outsl
push
fmul
xor
or
jl
daa
jns
lods
pop
xchg
andb
adc
jns
lret
adc
xor
cmpl
mov
lods
sarl
push
stos
mov
stos
in
in
clc
cmp
add
jg
dec
imulb
dec
inc
test
test
fmull
daa
adc
push
push
test
push
mov
cmp
adc
test
fisttpl
lds
xchg
add
ret
sbb
pushf
jl
aam
inc
mov
jns
inc
out
stos
adc
add
add
rorb
jp
xchg
or
adc
pop
dec
dec
push
pop
add
insb
and
jb
outsl
add
dec
mov
push
aad
loope
jmp
hlt
lock
movsb
push
lods
scas
lods
xchg
xchg
xchg
xchg
xchg
jo
mov
outsb
shrl
sahf
jne
jge
jecxz
inc
inc
inc
mov
push
push
push
push
adc
push
pop
clc
arpl
add
aas
cmp
xor
sub
xor
mull
ja
add
cpuid
dec
mov
and
push
mov
gs
mov
inc
out
push
add
mov
sbbl
xchg
pop
imul
and
popa
ds
shlb
inc
sbb
sub
pop
mov
ja
fs
outsb
cmp
adc
fcmovb
xchg
sbb
dec
or
lcall
pushf
add
lea
ficoml
lea
push
pop
jp
test
in
stc
cmp
xor
filds
pusha
pop
movsb
push
addr16
das
cmp
xchg
cmp
jg
sbb
insl
je
jp
sub
sbb
xlat
hlt
mov
xor
dec
push
arpl
in
dec
mov
or
imul
inc
pushf
xchg
loope
jbe
aad
ja
or
fcompl
add
dec
mov
cmp
push
add
xchg
aaa
sbb
repz
jns
mov
mov
xchg
repz
sti
and
enter
jb
mov
sub
addr16
xchg
imul
rorl
or
pop
jmp
loope
pushf
jl
gs
mov
push
cmp
add
shrl
stos
test
mov
pop
cs
add
sub
push
in
in
shll
mov
sub
rcll
shll
jnp
mov
scas
scas
xor
aaa
jl
outsl
dec
inc
out
or
jecxz
mov
push
jae
pop
sbb
aad
or
jl
cmp
sub
repnz
sarb
in
mov
or
mov
fwait
mov
sbb
xorb
inc
ljmp
or
in
cmp
bound
mov
dec
js
push
testb
push
fbld
cmp
dec
repz
adc
jns
aam
mov
cld
in
ja
or
lret
sub
mov
lods
in
shrl
dec
jne
adc
lcall
push
pop
cli
mov
dec
adc
aad
adc
ret
add
push
lods
aam
add
dec
out
clc
js
jbe
jne
pop
mov
mov
mov
fisttpl
mov
addl
mov
add
lds
scas
jp
jne
and
sti
inc
in
sub
sub
fwait
sub
insb
popaw
arpl
jae
sbb
add
aad
mov
es
aad
fisubrs
mov
fcmovnb
in
pop
cmp
jmp
mov
pop
cmp
in
in
jo
cltd
orb
insb
enter
popa
sbb
xor
insb
mov
add
lcall
sahf
pop
mov
iret
or
imul
sbb
mov
mov
addr16
notb
out
addr16
mov
sub
mov
stos
out
jp
add
in
shlb
repz
push
add
cli
mov
fs
cmpsl
dec
es
xor
mov
enter
sub
ret
popa
bound
insb
mov
dec
rorb
lcall
ret
test
mov
sti
mov
fcoms
sbb
gs
push
iret
les
and
push
cmp
jp
test
push
mov
add
mov
push
mov
cmpsl
mov
call
cmp
mov
or
or
inc
xchg
mov
xor
aaa
jp
icebp
push
push
inc
xlat
imul
lods
cmpsb
test
je
add
cmc
and
movb
jg
push
je
in
out
pop
andl
xor
xchg
xor
rep
imul
and
pop
movsb
inc
outsb
dec
addr16
xor
jmp
push
lock
cmp
mov
pop
xor
std
jne
sbb
mov
cmp
pop
push
mov
out
adc
dec
mov
push
stc
lea
jne
nop
jnp
lea
pop
jp
sbb
adc
xor
jge
inc
xchg
stos
outsb
movsb
jg
fstpt
bswap
ret
mov
rclb
in
cmp
cld
mov
sub
aad
scas
add
cmp
sti
cmp
push
daa
fsubl
mov
xchg
enter
mov
pop
daa
enter
mov
fmul
sub
jo
inc
jmp
pop
push
dec
jnp
jns
mov
scas
fnsave
jge
mov
and
xor
cmp
jmp
and
in
movsl
outsb
jmp
std
clc
sahf
mov
xchg
les
cltd
push
int3
jne
cmp
or
lcall
dec
dec
outsl
jecxz
inc
jo
mov
xor
and
stos
insb
insl
inc
add
leave
cmpsl
xchg
jmp
mov
imul
pop
xor
xor
out
dec
in
std
adc
jle
shlb
sbb
sub
xchg
xlat
inc
sti
and
arpl
or
xchg
aam
xor
xor
add
icebp
dec
cmp
fsubs
xchg
sub
stos
aam
int
push
cmp
insb
xchg
sub
aad
fisubrl
dec
pop
addr16
outsb
in
jmp
dec
rol
or
aad
sub
mov
xor
mov
xor
pusha
icebp
lret
lods
add
popf
popl
fs
jecxz
or
pop
sub
cwtl
data16
popf
jne
and
lret
xor
xchg
fisubrl
add
xlat
shll
cmc
push
les
xchg
jecxz
and
xchg
subl
dec
cwtl
or
xchg
push
pop
pop
popa
xor
lods
mov
insb
sti
dec
dec
aam
jne
pop
cltd
inc
xchg
scas
sbb
and
pop
lock
lds
jmp
dec
in
shrl
xchg
xchg
lods
lret
pop
aaa
scas
push
rcl
js
push
data16
cmpb
imul
dec
cld
mov
ret
fcomps
or
dec
xorl
xor
cmp
cmp
repnz
scas
inc
in
int
fldt
pop
inc
pop
insl
jge
test
push
xchg
mov
sub
ja
comiss
sbb
fdivs
cmp
jne
mov
sub
push
push
pop
push
push
mov
lcall
xchg
pop
xchg
into
rcrl
push
or
or
add
fnsave
or
and
or
push
xchg
mov
pop
adc
adc
les
or
or
push
hlt
pop
sub
cmp
pop
inc
subb
mov
fisubrl
cwtl
xchg
fnsave
mov
fwait
rcl
out
aam
shrl
je
jl
imul
xchg
subl
mov
adc
test
ds
lcall
mov
das
sub
jp
clc
ljmp
call
cmp
sbb
ds
outsb
inc
fmull
dec
imull
xchg
test
addl
jbe
add
jo
ljmp
div
cli
jmp
xchg
insb
imul
mov
insl
push
jle
out
sti
nop
hlt
pushf
mov
xchg
mov
lock
ljmp
sub
xor
cmp
add
sbb
js
orb
stos
lods
mov
mov
je
gs
adcl
cmpsl
inc
push
jge
dec
pop
pop
add
mov
pop
pop
daa
xor
insb
push
xchg
add
jns
adc
imul
icebp
pusha
imul
call
fadd
mov
les
scas
jecxz
repnz
ror
cmp
add
fiadds
dec
adc
sub
mov
sbb
inc
pop
dec
push
cmp
cmp
jnp
sub
xchg
leave
gs
mov
jae
imul
fs
sahf
xor
and
cmp
sub
sub
dec
cltd
lret
push
sbb
sbb
sub
sub
and
int
sub
sub
iret
cltd
adc
push
push
arpl
adc
push
inc
pop
and
ss
and
mov
inc
xor
or
mov
arpl
je
jg
or
mov
fstcw
mov
mov
pop
dec
dec
inc
leave
mulps
pop
cmp
test
jge
xchg
mov
lret
loopne
popf
ret
incb
mov
repnz
mov
xchg
xchg
test
adc
je
pusha
dec
add
jb
jo
jne
pop
inc
sbb
sbb
adc
fidivl
cmp
out
sub
mov
xchg
fsin
repnz
mov
mov
mov
pop
mov
stos
dec
push
lcall
decl
subb
ljmp
rorl
test
or
add
mov
lahf
mov
fdivrs
jle
dec
jbe
pop
lret
stc
add
je
dec
jge
mov
push
addr16
jge
rcll
push
into
and
int
xor
sub
pop
push
sbb
mov
sbb
push
hlt
lods
add
adc
es
pop
sbb
xor
cmp
popf
xor
xor
bound
inc
jg
inc
inc
jae
inc
and
sub
pop
and
mov
shl
xor
lret
dec
push
out
and
push
and
push
xor
test
outsb
jnp
out
pop
pop
pop
pop
dec
hlt
pop
jnp
inc
mov
out
into
aaa
xor
push
sbb
sbb
push
push
clc
add
adc
dec
xchg
test
mov
shll
cmp
shr
mov
pop
int3
hlt
in
mov
div
test
fstps
leave
xchg
mov
sbb
lds
in
ret
cmp
cli
cli
stc
cltd
mov
xchg
test
inc
hlt
int
push
mov
pop
inc
push
gs
jno
insl
js
jae
jp
cmc
mov
lcall
repnz
lret
cld
clc
lock
sahf
sub
mov
mov
push
movsl
stos
fdivs
arpl
pusha
frstor
push
xchg
lds
enter
insl
imul
push
f2xm1
shrb
out
jae
out
sti
adc
loopne
add
push
pop
mov
dec
push
outsb
gs
mov
fsubp
xchg
mov
ss
out
sub
mov
fsubl
mov
incl
call
fisubl
dec
pusha
jbe
pmaxsw
lret
movsl
fiaddl
add
sub
in
rolb
adc
dec
pop
fisubl
call
adc
inc
cmc
testb
in
stc
cmpsl
mov
in
jmp
rcr
sub
mov
xchg
mov
je
pop
push
pop
push
dec
dec
add
jae
mov
test
push
push
call
and
inc
pop
inc
ja
inc
dec
inc
dec
mov
pop
jo
jnp
mov
movsb
sub
mov
mov
fisttps
or
rol
into
jge
cmp
out
cmpsb
mov
icebp
xchg
xchg
fcomi
pushf
loopne
scas
out
shl
testb
loop
lret
lret
fucomi
ret
loopne
ljmp
fwait
mov
popa
subb
prefetchwt1
or
xchg
jecxz
lahf
mov
mov
pusha
cwtl
andl
add
push
mov
leave
scas
mov
xchg
scas
xchg
nop
pushf
out
movsb
lods
mov
mov
lret
outsl
test
xchg
cmc
and
xchg
sahf
addb
push
push
dec
pop
pop
and
dec
jno
jp
dec
add
adc
shlb
in
repz
stc
mov
adc
negl
mov
mov
xor
loope
ret
fcmovnb
xlat
iret
les
js
fwait
lahf
test
and
jg
jnp
push
imul
dec
mov
add
out
sbb
lahf
adc
mov
not
xor
fnstenv
ds
xchg
pop
fcomi
cli
popf
jmp
std
sti
mov
icebp
daa
scas
cmp
pop
sbb
bound
pop
pushf
xor
in
pop
imul
imul
pop
mov
testl
xchg
sahf
aas
lahf
xchg
sub
gs
jbe
jae
js
mov
push
mov
jns
es
inc
bound
jl
mov
xchg
pushf
test
jb
jne
mov
push
sbb
and
adc
and
cmp
push
pop
aad
or
sbb
mov
mov
jp
add
inc
jno
add
or
lret
jl
mov
iret
add
cli
jns
sbb
call
lea
shlb
mov
das
pop
or
test
lret
lret
insb
data16
or
inc
lahf
fcomp
jmp
cmp
je
add
fadd
aam
loopne
mov
nop
push
sub
rol
fld
fwait
mov
sbb
inc
shr
in
cmp
mov
inc
pop
addr16
outsl
mov
xor
jbe
repz
mov
mov
and
mov
insl
sub
std
fs
cmp
popf
aam
push
fmul
pushl
leave
sub
adc
or
sbb
pop
sub
sub
insb
push
push
fidivl
lods
lret
cmpl
mov
mov
lods
and
pusha
int3
fs
mov
in
adc
nop
pushf
das
adcb
incl
inc
enter
pusha
fbld
dec
cmpsb
cmc
or
cwtl
jae
adc
dec
push
dec
jnp
or
or
stos
cmp
pop
push
add
es
adc
jmp
adc
sbb
pushl
clc
repz
neg
shlb
aaa
das
pop
push
pop
or
inc
push
and
push
fcmovu
ret
xchg
enter
test
xchg
push
dec
mov
jle
je
jno
push
dec
dec
arpl
lcall
lret
add
pop
or
int3
fsts
cld
out
in
mov
ss
cmp
and
cmp
xlat
addb
loopne
test
mov
lahf
pushf
stos
inc
ja
cs
push
insl
inc
jae
in
dec
pop
inc
mov
pop
adc
adc
or
add
cs
xchg
aas
cmp
jne
jnp
nop
aad
adc
sbb
dec
fimuls
xor
and
fnstcw
ficompl
mov
pop
call
loope
jmp
mov
jge
test
mov
cmpsb
mov
add
aam
mov
in
jne
pop
addb
and
cvtdq2ps
rcrl
test
aad
repnz
inc
cmovnp
inc
jne
arpl
popa
mov
push
xor
xor
dec
mov
sti
or
int3
jo
jnp
ja
or
repz
je
mov
lahf
hlt
je
and
shl
repz
ljmp
sahf
ffreep
fadds
stos
cmpsl
stos
mov
push
das
bound
arpl
push
popa
jae
dec
dec
pop
inc
dec
push
dec
push
notb
in
insl
imul
mov
subb
outsl
insl
inc
outsl
jae
popa
outsl
insb
aas
or
aas
aaa
notl
out
ret
into
fwait
out
xchg
hlt
mov
mov
hlt
xlat
push
xchg
sub
push
cmp
push
test
ss
and
and
aas
inc
rorb
adc
fwait
pushf
xchg
xchg
mov
jl
loopne
adc
bound
gs
push
fistps
sbb
jbe
push
imul
pusha
jno
imul
push
inc
push
push
sub
mov
mov
cmpsb
call
movsl
sbb
hlt
nopl
imul
insb
aas
int3
testl
pop
aad
call
cmp
jnp
pop
xor
and
test
sub
mov
inc
aad
in
aad
ret
sarl
movsl
lods
xor
adc
dec
lahf
or
jno
xchg
jae
data16
dec
jns
jl
ficoms
imul
imul
sbb
mov
mov
loope
in
leave
outsb
shll
jle
jnp
addr16
cmpb
push
sbb
pop
dec
popa
popa
jo
or
adc
xor
jp
pop
js
jne
aas
pop
mov
ljmp
andl
cmpsl
ret
xchg
push
cmp
movhps
pop
add
push
inc
push
outsl
outsl
jge
andb
inc
imul
xor
int3
mov
and
cmp
sub
les
inc
out
sub
mov
decl
neg
scas
popf
call
push
jmp
xchg
test
cwtl
movsb
mov
scas
rol
stos
mov
sbb
push
adc
xor
fisubrs
mov
jno
push
cmp
add
pop
push
sub
push
jg
pop
or
add
pop
sbb
ja
cmp
xor
insb
ljmpw
cltd
stos
sbb
ljmp
add
es
add
dec
xchg
lahf
dec
mov
mov
mov
test
jne
popf
pop
daa
pop
and
lahf
cs
cmpsl
push
inc
jno
push
inc
dec
js
jbe
sbb
dec
sbb
stos
fs
outsl
inc
daa
icebp
xchg
adcl
mov
lea
shlb
test
xchg
cmp
jmp
xor
in
sub
pusha
mov
inc
mov
movsl
jnp
mov
sub
aaa
fcom
cmpsl
jmp
xor
out
std
scas
lret
inc
pop
xchg
mov
inc
pop
sti
mov
daa
mov
sti
xchg
and
imul
pop
and
aas
add
popf
cmp
jb
jp
aas
int
addl
lcall
xchg
lods
xor
call
sbb
mov
div
fld
sub
xor
mov
getsec
ss
push
bound
out
idiv
xor
pop
popf
mov
sbbl
mov
inc
js
addr16
imul
jns
jae
pop
lods
pop
push
push
dec
dec
pop
ja
mov
repz
stos
mov
pop
stos
sbb
outsl
jnp
sub
dec
pop
pop
push
mov
mov
movsl
cwtl
mov
mov
cmpsl
lods
xchg
xor
xor
lret
dec
into
lahf
popa
and
daa
addr16
in
imul
xchg
out
js
nop
addl
mov
jecxz
push
or
aas
cwtl
push
pop
test
inc
loop
mov
dec
xchg
inc
ljmp
andb
fidivrl
dec
je
and
xor
push
or
pop
push
ror
je
push
mov
jbe
mov
adc
cmp
movsl
rcrb
imul
or
jg
or
inc
push
and
sbb
or
ss
sub
arpl
push
pop
jb
rcrb
fisttps
ja
ja
xlat
subl
cmp
fwait
cmp
xor
push
pop
inc
inc
jae
imul
scas
pop
aam
push
inc
cmp
pause
test
push
mov
sub
jo
mov
mov
pop
cli
sahf
mov
xor
movsb
mov
cs
xor
add
cmp
sub
cmpsl
icebp
mov
or
cli
das
js
out
push
xchg
pop
xchg
cwtl
outsl
sbb
jnp
mov
mov
xor
pop
loopne
aaa
pop
in
ss
jo
jo
add
xor
das
and
and
or
cwtl
add
adc
call
out
js
cmp
lahf
xchg
lock
mov
lock
mov
pushf
rcrb
mov
add
inc
inc
jmp
idiv
jmp
sti
hlt
or
ret
cmpsl
mov
arpl
test
test
dec
clc
mov
inc
push
jno
pop
pop
pushf
jecxz
out
and
aam
enter
sahf
enter
fmul
scas
rcl
sub
sbb
pop
dec
mov
pop
in
add
orl
js
sub
add
sbb
jge
xor
fs
or
adc
xor
test
sahf
push
mov
mov
mov
rorb
insb
xchg
sbb
lret
cld
fnstsw
and
addr16
xor
mov
mov
inc
fistps
lcall
sti
sti
hlt
stc
jle
add
daa
and
add
mov
xor
and
jns
or
dec
inc
rolb
sbb
jne
std
inc
dec
aas
pop
jmp
test
pushf
xchg
decb
ror
fstp
test
sbb
dec
pop
jle
sbb
and
arpl
addr16
enter
fcmovu
repnz
mov
xchg
ret
in
xchg
out
lods
mov
fdivp
mov
lock
mov
xor
inc
adc
arpl
xchg
mov
pusha
dec
dec
dec
mov
push
adc
cmp
das
cmp
lea
cs
and
pop
dec
adc
outsl
adc
sbb
imul
and
ljmp
mov
adc
std
scas
mov
inc
out
cmp
cmc
out
lret
movsb
cwtl
mov
cmpsb
mov
lahf
fwait
andb
sub
push
enter
aaa
xor
shll
and
pop
mov
loopne
out
call
lock
cli
and
pop
gs
cmpsl
lahf
loope
imul
repz
loop
lcall
sbbb
iret
lods
mov
lcall
movsl
add
insl
movsl
pop
dec
popa
sbb
into
jnp
test
mov
dec
imul
jo
push
or
inc
dec
pop
jbe
jge
mov
dec
xor
mov
add
test
into
fmul
mov
in
jne
cld
sti
push
push
push
xor
mov
aad
mov
mov
call
fidivrl
mov
lahf
sahf
mov
lea
dec
jno
add
jge
adc
mov
lock
and
push
xchg
jle
pop
xor
subb
idivb
add
sbbl
cld
shlb
jae
movsb
nop
push
call
fwait
inc
mov
movsb
decl
out
es
xchg
jg
fldl
arpl
test
test
jle
imul
and
push
jge
mov
fidivrs
scas
int
cmp
sti
aam
mov
cmpsl
sub
movsl
inc
push
inc
xchg
push
imull
dec
pop
inc
sub
adc
fwait
pushf
or
cli
cmc
ret
mov
enter
xchg
cltd
jne
inc
and
adc
out
daa
js
insb
cmc
nop
lret
incl
mov
dec
sbb
std
pusha
outsl
sub
adc
cs
sub
inc
xchg
xor
add
sti
xchg
test
mov
cmpxchg
in
nop
xor
xchg
ds
push
jge
loope
inc
fistl
inc
loopne
out
mov
add
sbb
cmpsl
aas
addr16
fwait
cs
mov
mov
bound
sub
pop
cld
mov
xchg
or
xchg
lcall
test
in
ljmp
lods
mov
adc
fisubs
inc
add
mov
dec
pop
dec
arpl
sub
je
pop
imull
add
ret
out
dec
outsl
clc
lea
mov
divb
in
mov
cwtl
int3
xchg
fwait
jg
fimuls
hlt
mov
insl
loopne
adc
pop
inc
and
xor
dec
dec
jecxz
cltd
inc
dec
rolb
mov
sub
cltd
repnz
lret
fildl
pop
push
pop
mov
mov
shll
fistl
mov
scas
push
mov
mov
push
add
jns
pop
xchg
mov
xchg
jle
pop
cmp
repz
dec
or
push
ss
adc
push
bound
iret
les
imul
sti
mov
adc
fsts
mov
imul
mov
push
movsb
xchg
iret
or
lods
pop
dec
xor
add
daa
cmp
jecxz
in
cmp
lcall
sbb
scas
mov
mov
movsb
leave
xchg
adc
popa
xchg
mov
cmp
outsb
ficoms
shll
data16
fs
jns
xchg
pop
jb
test
inc
or
pop
xchg
cmpsl
adc
or
mov
mov
inc
xor
push
adc
push
xlat
lds
sbb
iret
pop
mov
rclb
pop
js
addr16
push
pushf
in
mov
imul
test
je
mov
rcll
scas
jbe
mov
lahf
lahf
cmp
add
lahf
jno
pusha
inc
imul
daa
mov
cmpsb
mov
xor
and
test
pop
mov
adc
test
int
add
mov
cmpsl
sub
adc
jecxz
jae
jl
mov
mov
sahf
mov
out
pop
dec
mov
imul
jns
mov
dec
sub
or
sbb
into
inc
dec
std
cmp
jl
xchg
loope
mov
jbe
rcrb
aas
lret
cli
dec
test
jle
out
out
repz
insb
inc
fcmovnbe
sub
sub
mov
xchg
outsb
dec
mov
or
daa
push
mov
pop
loop
sahf
and
xor
icebp
ret
scas
adc
test
xchg
imul
mov
rolb
xor
aas
cmpsl
jecxz
mov
push
sbb
mov
inc
pushf
cltd
xchg
das
icebp
inc
in
cmp
pop
pop
scas
test
shlb
mov
fisubrs
out
fadds
movb
stos
aad
mov
inc
ret
and
dec
push
pop
inc
data16
sub
fnstcw
mov
rcr
xchg
xchg
gs
pop
sbb
push
jl
das
xor
xchg
mov
jecxz
mov
mov
rcll
adc
ret
test
mov
cmp
lods
cld
or
mov
out
push
call
jns
pop
jl
sub
rcrb
dec
push
sahf
fdiv
sub
call
in
mov
out
fisubl
push
adc
dec
leave
push
add
adc
mov
and
clc
aam
ss
data16
outsb
xor
or
lods
add
inc
xchg
insb
mov
or
cmpl
fnstenv
mov
cwtl
add
scas
or
mov
inc
clc
aaa
jg
jge
imul
pop
sbb
push
notl
gs
das
repnz
or
hlt
push
and
sbb
inc
sub
cmp
jne
hlt
and
lcall
int
movsl
xor
stos
scas
mov
push
inc
gs
cmp
cs
test
dec
daa
js
dec
adc
add
dec
or
test
dec
rorb
sti
mov
in
leave
jno
xor
and
add
xor
cmp
ret
clc
push
sbb
hlt
adc
jp
xor
in
mov
fsubrl
push
inc
shrl
loop
jle
stc
cmc
inc
push
pop
sub
test
push
mov
test
out
fsubs
adc
mov
adc
enter
pop
cmp
dec
inc
imul
adc
xchg
in
sbb
movsb
lods
inc
cmp
aad
nop
xchg
jmp
push
mov
dec
add
icebp
rclb
mov
daa
lods
stos
pop
jmp
dec
sbb
dec
and
and
pop
cmpsl
jne
rolb
aaa
movsl
shr
stos
repnz
inc
sti
pop
adc
loop
das
inc
push
insl
lret
inc
in
xchg
jne
push
xchg
lods
leave
push
fildll
cmpsl
inc
repz
leave
mov
stos
test
popf
iret
adc
lahf
xor
div
into
cmc
push
sti
pop
icebp
ds
jmp
inc
out
mov
xchg
outsl
fstpt
jl
sti
stc
shll
fcoms
push
in
outsb
add
shrl
js
shlb
in
jno
mov
stos
push
dec
push
add
mov
mulb
out
ret
cld
inc
jl
jg
in
mull
movsl
cmp
cmp
cmp
out
pop
dec
ds
cltd
hlt
add
push
mov
sbb
shll
xchg
xor
aad
inc
sub
nop
addr16
cmpb
push
mov
mov
cmp
scas
mov
push
mov
lret
xlat
cltd
and
in
add
sbb
mov
fistpl
xlat
dec
push
or
mov
imul
sbb
pop
inc
js
fmuls
cltd
cmp
lcall
mov
jmp
mul
movsb
jecxz
ja
mov
jae
jmp
dec
ljmp
xchg
xchg
stos
sti
pop
push
test
stc
ljmp
mov
sub
cmp
iret
mov
mov
ja,pn
cmp
ja
stc
in
loope
push
les
fwait
iret
or
push
enter
sbb
sarb
mov
sahf
xor
adc
out
jb
and
js
lahf
bts
scas
into
lcall
jle
mov
daa
mov
popa
mov
or
and
lods
dec
inc
sub
inc
or
or
jge
adc
adc
shlb
icebp
cmpsb
xor
cmp
mov
mov
jp
sahf
jae
and
stos
imul
mov
ret
inc
add
movsb
fistl
cli
cmp
pop
add
mov
leave
lret
test
out
adc
in
bound
ret
daa
push
cmpsl
dec
adc
rorl
or
mov
inc
or
inc
cli
xchg
cld
les
mov
dec
pop
lcall
jl
leave
jl
rorl
out
pop
and
mov
outsl
jb
jle
aam
push
adc
fnstsw
repz
xor
insb
inc
out
popf
sub
xchg
sbb
ror
inc
popa
sub
mov
jg
sub
fwait
xor
ss
mov
nop
adc
inc
shll
mov
imul
jg
cwtl
in
test
es
sahf
cmp
sub
outsb
push
sub
push
or
push
in
inc
enter
adc
lods
jp
sub
and
push
pop
jnp,pt
push
push
sub
jae
xchg
pop
or
adc
cmp
je
decl
mov
cmpb
jl
sub
imul
mov
lds
xor
imul
lods
fsubl
dec
jne
arpl
sub
imul
pop
mov
jae
fwait
and
notb
jle
je
mov
sbb
ljmp
or
and
les
jno
cmp
inc
ja
rorb
mov
in
cmp
inc
aam
adc
ret
and
cli
pop
sbb
mov
lret
dec
ret
std
xchg
outsb
out
popl
in
mov
sbb
mov
fiadds
and
jo
rclb
add
adc
inc
mov
sub
ret
adc
test
add
shrb
data16
mov
add
mov
fcompl
dec
mov
jge
lock
cmp
in
xor
and
int
cmp
xchg
out
rol
and
pop
add
scas
icebp
inc
in
sbb
js
mov
int
jb
mov
mov
enter
aaa
pop
cmpsl
pop
sub
call
popf
mov
sub
fildl
dec
jmp
add
mov
mov
ss
ret
sbb
or
scas
add
ljmp
sbb
cmc
lretw
ds
or
push
or
pop
dec
xchg
pop
add
jmp
pop
jecxz
push
dec
scas
add
arpl
outsb
cld
mov
lcall
rcr
xor
mov
ret
pop
adc
pop
mov
xchg
out
loope
mov
sbb
add
xor
xor
inc
dec
mov
iret
mov
xor
inc
les
jge
push
mov
inc
aad
push
fildll
dec
add
or
push
sbb
clc
les
jbe
out
lret
jp
or
stos
push
xor
cmp
dec
push
mov
in
repz
outsb
xor
lock
decb
mov
mov
push
insl
pop
xchg
adc
movsl
insl
mov
jl
test
mov
or
and
adc
or
mov
arpl
jb
rcrb
sbb
dec
xor
pop
es
xor
scas
jbe
fsubrl
daa
das
mov
stos
nop
sbb
flds
xchg
cltd
and
sbb
adc
push
xchg
hlt
and
xor
dec
scas
xchg
xchg
inc
xchg
dec
sub
jmp
imul
jle
loope
fst
mov
mov
push
mov
scas
fildl
fmuls
xor
add
xorl
lods
adc
pop
sarl
xor
orb
out
lahf
sbb
das
inc
inc
fucom
and
insl
rcl
dec
jae
pop
inc
sub
dec
fwait
inc
mov
dec
cmp
add
lds
lret
aam
add
sarb
push
mov
out
cmp
cmp
aaa
or
or
xchg
or
add
das
xor
sbb
mov
leave
test
inc
xor
xchg
outsb
cmpsb
cld
je
out
out
in
dec
shr
das
pop
mov
es
xor
lds
and
dec
mov
sbb
and
mov
shll
insl
xor
inc
jl
xor
divl
mov
mov
jb
jae
xchg
dec
dec
cltd
lea
jae
cs
js
dec
cmp
outsb
push
mov
lods
pop
cld
enter
xchg
mov
repnz
and
cmp
mov
push
nop
jne
inc
aam
stos
mov
in
es
popf
je
inc
and
lcall
jnp
in
popf
jnp
clc
imul
push
sub
inc
xchg
push
jp
inc
sbb
or
insb
icebp
push
xchg
loope
pop
pop
push
shlb
fcoms
xchg
mov
ror
xchg
pop
ljmp
pop
xlat
cmc
push
pop
dec
mov
aad
pop
jbe
push
mov
lahf
inc
jno
popa
scas
sub
int3
sub
cld
lcall
ret
sub
aas
or
shll
loop
adc
jmp
aaa
test
mov
push
dec
add
ljmp
loopne
xchg
rcrl
inc
out
xor
mov
dec
jo
inc
cmp
outsl
jbe
outsl
inc
add
jle
xor
xor
imul
in
ja
imul
aas
lock
ret
xchg
lcall
xchg
mov
dec
add
jle
or
fs
dec
test
sbb
xchg
inc
imul
popa
mov
int3
adc
and
xchg
popf
imul
jle
dec
add
dec
pop
or
daa
subb
jp
jmp
icebp
sub
insb
add
xchg
pushf
mov
popf
push
mull
xor
jg
lahf
lea
fsubrl
jne
das
sahf
xor
insb
cli
jecxz
imul
in
fldenv
pop
dec
pop
shll
shl
add
mov
add
fwait
insb
ljmp
fs
mov
mov
push
mov
data16
sbb
add
mov
add
mov
out
push
jo
mov
jp
mov
std
pusha
scas
rcll
xor
cmp
dec
adc
sub
fidivl
jb
jnp
sbb
lea
xchg
jmp
out
leave
dec
push
out
es
push
xor
aas
xorps
inc
nop
push
mov
popf
loope
adc
rcl
scas
pop
pushf
sti
pop
sbb
adc
in
or
jae
rol
stos
ficompl
add
lods
cmp
mov
jae
xchg
lds
filds
sub
aam
inc
dec
inc
or
push
jl
fucomi
cld
add
data16
loopne
pushf
or
clc
inc
push
sarl
cmp
daa
nop
jae
xchg
insl
pop
dec
cld
out
rcrb
adc
mov
cwtl
shrb
mov
inc
pop
std
repnz
dec
jmp
push
clc
adc
pop
shl
inc
dec
je,pn
mov
inc
mov
pop
sbb
cvtdq2ps
mov
cmpsb
hlt
addr16
nop
mov
mov
jno
fdivrs
std
movl
sbb
pop
sarl
pop
insl
jae
push
arpl
inc
mov
mov
stos
cmp
push
stos
xchg
rcrl
out
sahf
hlt
lret
movb
mov
mov
mov
pop
or
mov
aam
stc
into
jmp
jp
or
xor
sbb
xchg
pop
icebp
add
push
imul
cmp
andl
dec
repnz
push
test
xchg
ss
sbb
mov
push
cmp
push
sarl
xchg
inc
jns
add
push
cs
add
pop
adc
jge
lods
mov
xchg
outsb
xchg
jmp
decb
shll
lods
andb
inc
lods
ss
adc
inc
mov
or
cmpsb
fs
mov
cld
dec
out
cmp
insb
and
and
movsl
xor
shlb
nop
add
mov
lcall
daa
les
inc
jne
lods
xchg
andb
dec
rorl
fs
test
cwtl
iret
mov
insb
les
inc
test
push
icebp
test
pusha
rol
push
dec
xchg
mov
sub
pop
cmp
sahf
leave
test
shrl
lock
fs
pop
sub
inc
icebp
push
pop
mov
pop
mov
lock
call
movsb
jb
mov
lods
pop
add
sarb
aad
test
fldenv
imul
lds
jecxz
sbb
mov
cmc
mov
stc
inc
or
xlat
xlat
adc
pop
popa
push
add
mov
add
xchg
mov
aam
lahf
sti
les
pop
es
arpl
call
xlat
xchg
xor
mov
fnstenv
rcll
arpl
mov
adc
shrb
sbb
and
rorl
adc
sub
pop
outsl
scas
dec
dec
add
dec
leave
inc
jp
sti
out
cwtl
sbb
jl
je
maskmovq
idivl
testl
cmp
dec
rolb
das
xor
clc
mov
ljmp
and
and
push
daa
jb
cli
fstl
mov
mov
repz
rol
push
mov
cltd
pop
adc
xchg
jnp
xchg
or
jno
cmp
out
sbb
mov
shll
push
repnz
lods
inc
adc
pop
pushf
pusha
test
jp
fidivrl
gs
mov
cmp
mov
std
push
and
scas
test
push
scas
movsl
push
rclb
popf
mov
cld
xor
jns
insl
pop
mov
ficoml
sbb
sti
adc
pop
mov
add
out
jecxz
std
cmc
jns
popa
inc
sbb
dec
xchg
add
addr16
loope
sub
shrl
jecxz
lods
dec
lea
or
jns
cmp
push
testb
mov
adc
fisttpl
repnz
or
push
pop
es
jle
jmp
ja
dec
adc
sbb
push
addr16
mov
fdiv
data16
add
in
repz
inc
into
mov
mov
fmuls
cmp
inc
adc
into
into
stos
cmp
repz
and
cltd
out
mov
ret
mov
mov
cmp
mov
push
call
and
inc
add
jle
movsb
stos
hlt
pop
out
push
mov
imul
aaa
inc
push
addr16
xlat
out
fldl
xchg
or
xorl
into
cs
and
dec
xor
inc
imul
dec
insb
and
js
fstl
lahf
out
cmpsb
sub
xor
sub
cmpsb
insb
dec
adc
mov
popa
mov
cmp
mov
add
cld
xor
cmp
gs
mov
fildl
into
sub
filds
stc
and
xor
insb
jmp
or
sahf
add
ss
jecxz
fidivs
stos
movsb
fisubrl
or
sbb
mov
mov
daa
rclb
xchg
out
inc
idivl
sahf
xchg
push
jmp
addr16
insb
dec
das
jo
into
roll
jne
sbb
je
push
icebp
sub
mov
std
sub
xor
sub
mov
test
jnp
rorl
pop
mov
mov
ljmp
jle
add
int
fdivp
out
adc
shll
lods
pop
test
mov
data16
or
push
push
adc
icebp
ds
xchg
ds
mov
test
jg
rclb
subb
jae
test
jb
jl
add
inc
ja
cli
ja
jg
out
push
inc
cmp
clc
xor
rolb
xor
pop
mov
test
xchg
les
cmp
dec
mov
adc
inc
mov
mov
xchg
stc
lods
cli
fldcw
aaa
rorl
lret
enter
in
fisubrs
jbe
fcoms
mov
or
add
fistl
mov
fldcw
movsb
xchg
sub
fwait
push
push
cmc
nop
cmc
bound
adc
xor
pop
fisttps
not
mov
lahf
add
dec
push
xor
xchg
add
push
mov
or
cmp
scas
ficompl
sub
or
into
or
je
data16
mov
lock
int3
push
popf
fwait
loope
jl
jnp
out
sbb
sbb
leave
fldenv
cmp
add
mov
data16
movsl
leave
add
pop
mov
cmp
inc
mov
push
stos
xchg
and
push
jne
ja
in
inc
cwtl
daa
and
pop
sti
xlat
adc
shrl
dec
ret
mov
cmpsb
sahf
mov
pusha
add
popf
imul
mov
cmpsl
mov
mov
or
fidivl
in
pop
or
aas
xchg
mov
jnp
enterw
nop
dec
jle
dec
fsubrl
scas
stc
add
pop
rcrb
in
dec
fwait
sub
dec
push
adcl
lock
sub
push
fisubs
test
in
jbe
aas
push
inc
mov
pop
xchg
lods
dec
lret
mov
insl
push
cltd
out
fildl
push
frstor
shlb
and
mov
dec
addr16
rolb
imul
iret
mov
mov
jbe
xchg
cmpsb
fs
testl
je
xchg
std
push
inc
and
pop
dec
xor
xorl
shrl
dec
and
inc
sahf
loopne
addl
je
xor
xchg
push
loope
cwtl
sub
pop
lods
sub
inc
shll
in
sbb
xchg
test
stc
inc
fimull
movb
divb
shlb
push
pusha
push
adc
bound
rorb
mov
clc
aaa
cmp
push
test
lret
in
test
sbb
push
ret
mov
mov
pop
inc
call
xchg
mov
mov
mov
gs
push
and
push
int
std
xor
dec
insl
incl
in
xchg
testb
leave
loop
leave
dec
pop
out
mov
push
inc
xchg
test
int3
mov
inc
dec
mov
scas
add
xor
cmp
pushf
mov
scas
jl
xor
push
sub
add
jle
fbstp
cmp
cli
insb
add
xlat
cmp
and
and
data16
sarb
mov
or
mov
in
arpl
mov
lahf
enter
inc
mov
mov
jle
pushf
jb
fwait
scas
push
test
arpl
dec
pop
cmp
out
cmp
inc
lret
jbe
aas
xor
adc
pop
inc
pop
xor
mov
repnz
jmp
movsb
call
test
add
mov
lods
pop
and
addr16
push
inc
adc
jl
lods
adc
test
push
mov
jmp
outsb
or
cmpl
js
mov
xor
sti
push
in
mov
loop
mov
push
xchg
loop
adc
xchg
test
xchg
xchg
ficoml
jb
pop
loopne
stos
movl
fists
sbb
out
insl
ds
mov
pusha
jno
adc
add
rorl
and
or
fwait
stos
out
or
lahf
or
das
lcall
sahf
add
xchg
lods
movsb
repz
mov
insb
pop
rorl
pushf
dec
mov
xchg
dec
andl
mov
adc
sti
lock
rclb
subl
inc
add
cltd
push
dec
fsubr
les
adc
and
mov
inc
repnz
push
ljmp
faddl
mov
lods
notl
iret
nop
inc
add
shrl
mov
ja
loopne
cmp
dec
fs
loope
inc
xchg
or
movsb
cmp
sti
orb
lock
test
cmp
rorl
cmp
adc
jbe
inc
mov
sbb
gs
mov
sbb
movsb
pushf
inc
ja
mov
mov
jne
leave
or
imul
cmp
mov
ret
test
cmp
inc
cmpsb
adc
xor
push
test
jge
push
and
clc
pushf
inc
jmp
stos
and
push
cmpsb
sbb
imul
scas
pop
jo
mov
lret
push
in
sub
adc
mov
ret
jp
incb
stos
lods
xor
or
lods
fbld
sub
jmp
call
pop
inc
pop
pop
cmp
push
lods
push
int3
mov
xchg
int
pop
shll
pop
xchg
push
shll
xrelease
jne
xor
mov
call
loopne
addr16
clc
push
mov
stos
xchg
je
and
cmp
inc
add
cmpl
lock
bound
ret
mov
cmp
test
ss
pop
mov
aam
popa
sbbb
out
or
icebp
jl
roll
sahf
mov
popf
inc
pushl
mov
aas
test
inc
jle
adc
andl
je
pop
pushf
imul
mov
inc
mov
xor
mov
add
insb
jns
into
scas
mov
inc
xor
lret
rcr
unpcklps
push
sti
cltd
adc
iret
adc
mov
adc
lahf
or
mov
jecxz
lea
cmp
cmp
mov
out
mov
ss
mov
lock
sub
pop
sbb
mov
mov
scas
sti
inc
mov
add
or
xlat
jg
mulb
out
shll
cmp
pop
test
int3
cmp
mov
repz
cmc
ret
cmc
lcall
int3
std
jmp
mov
cltd
std
jne
cmpsb
push
outsl
mov
popf
mov
rorb
inc
sbb
sub
and
shlb
jne
and
sbb
jae
mov
mov
fnstsw
stos
sbb
jp
xchg
xchg
pop
cmp
loopne
shrl
inc
mov
add
push
jb
and
imul
into
mov
mov
sub
pop
sbb
add
dec
jne
mov
sbb
sub
gs
pushf
and
mov
dec
jmp
imul
mov
lret
sbb
sub
outsb
mov
add
fwait
mov
cmpxchg
push
sbb
out
sti
in
inc
dec
xor
mov
sub
mov
testl
cmovae
fiaddl
nop
and
movsl
js
fbstp
fisubrl
mov
insl
dec
push
dec
stos
mov
dec
xchg
leave
sti
push
pop
add
push
sbb
mov
movsl
inc
stos
fs
push
test
sub
xchg
xchg
pop
mov
mov
mov
mov
inc
jmp
stc
mov
cmp
or
mov
add
insl
pop
jb
fmul
not
add
dec
xor
rcl
divl
into
or
in
adc
or
imul
icebp
xchg
push
psrld
dec
sbb
push
mov
or
popa
sub
xor
adc
mov
repnz
pop
push
sar
mov
arpl
les
sbb
pop
and
push
adc
repnz
or
mov
mov
push
dec
mov
jnp
mov
aaa
xchg
mov
inc
jnp
mov
and
sahf
pop
and
push
daa
xorb
idivl
xchg
pop
enter
dec
lods
cmc
insl
jecxz
fs
sbb
pop
ret
cmc
ljmp
or
gs
dec
stc
cmp
fwait
cmp
dec
and
orb
cmp
push
xchg
data16
mov
mov
dec
lock
test
das
lcall
outsl
rcrl
push
inc
and
out
push
adc
jno
or
jp
jnp
push
mov
fimuls
mov
push
rorb
aaa
mov
mov
ds
dec
adc
movsb
stc
int3
dec
leave
nop
out
mov
fcomip
sbb
outsl
push
jns
mov
pop
jl
xchg
adc
jecxz
sarb
vcvttss2si
or
aaa
into
outsb
pusha
mov
pop
sti
stos
iret
xor
notl
xor
movsl
leave
sbb
push
scas
push
int
cmp
mov
shl
inc
add
dec
filds
addr16
pop
jb
pusha
outsl
das
and
add
mov
and
jp
lods
int3
push
mov
testb
add
jl
mov
mov
call
and
fidivrl
insb
sbb
or
fsubrs
or
mov
sbb
xchg
xchg
das
xor
mov
inc
adc
in
push
iret
mov
arpl
mulb
push
pop
hlt
popa
cmp
inc
jmp
clc
ror
fisubs
cs
jmp
aaa
popl
mov
mov
in
jge
push
rcll
mov
xchg
jb
fs
and
cmp
or
out
jns
push
or
aam
sbb
jno
xor
cli
mov
call
pop
fwait
xor
hlt
xor
jae
jbe
xchg
aad
inc
sub
mov
shr
dec
xor
loope
xchg
je
xor
mov
xchg
call
dec
xchg
push
xchg
movsl
mov
les
scas
stos
mov
subl
fdivr
andb
pop
cmpb
fdivl
pusha
rcl
push
jno
into
push
insl
shlb
dec
rolb
jl
fcompl
push
push
popf
ficoml
jae
test
aam
push
lahf
iret
loopne
shll
or
ret
mov
jns
sub
mov
test
cmp
jle
fdivl
aad
adc
mov
dec
xor
clc
mov
sbb
adc
push
test
cwtl
pop
in
inc
dec
lret
jo
arpl
mov
dec
xchg
cmpsb
xor
add
dec
ficomps
cmpsb
xor
sbb
pop
or
aaa
push
jb
push
out
xlat
xchg
adc
jg
jmp
push
hlt
sbb
addl
out
dec
cli
xor
sub
jno
jge
push
movsl
es
imul
inc
xchg
adc
imull
add
je
jl
leave
addb
xor
cmp
push
outsb
xor
push
lods
sub
push
adcb
xchg
jle
add
cmpsb
out
bound
inc
pop
or
arpl
popf
pop
shrl
xchg
sub
inc
aaa
jnp
test
dec
push
pop
popa
js
inc
sbb
dec
push
fs
icebp
mov
push
jmp
aad
or
add
jmp
jecxz
mov
lahf
dec
inc
call
sbb
inc
movsb
sub
add
les
addr16
mov
mov
mov
dec
cmpl
das
cmc
fistps
sbb
push
jecxz
xor
pop
cmc
cld
xor
dec
lods
add
leave
sbb
mov
or
fdivs
mov
sbb
lods
es
push
add
test
je
lock
dec
arpl
stos
sti
shlb
movsb
addr16
out
cli
mov
dec
test
bound
ja
std
xchg
push
std
fs
xchg
jne
mov
sbb
and
inc
jbe
push
xor
pusha
cmp
push
xchg
sub
xchg
rcrl
xchg
jge
sarl
jle
xlat
dec
push
or
sbb
sub
add
and
jge
mov
scas
xor
addb
sub
jmp
gs
push
int3
jecxz
inc
and
cmc
pop
xchg
xor
xchg
data16
dec
sub
add
jne
and
push
lods
xor
icebp
xchg
xor
sub
arpl
mov
sbb
xor
jp
outsl
loop
fs
pusha
inc
pop
cmp
jle
mov
jae
into
movsb
xchg
sbb
sti
pop
pushf
add
cmp
sbb
decl
mov
add
test
mov
or
xchg
mov
popf
js
dec
xchg
aas
xchg
or
pusha
cmp
sbb
jg
adc
xchg
test
cmp
push
cmpl
lahf
in
subb
xchg
popa
adc
push
mov
add
in
or
lret
fisttpll
test
jl
int
inc
cmp
push
jmp
out
xor
jp
or
nop
mov
shlb
les
push
mov
jle
xchg
test
push
lods
pop
andb
dec
out
xor
pop
ret
mov
je
and
int
push
bound
mov
xlat
arpl
lds
es
or
std
mov
xchg
pop
arpl
pop
lods
sub
pop
iret
shrb
addr16
ljmp
sub
jb
or
lahf
mov
add
sbbb
or
fadds
daa
loope
je
lods
sbb
pop
inc
imul
dec
mov
mov
dec
jl
cmp
out
push
jmp
adc
arpl
mov
push
lret
mov
inc
in
sbb
cmovno
out
jbe
lods
xchg
cmp
mov
xorb
adc
pop
data16
fwait
pop
mov
cmp
test
lock
rclb
sub
test
push
jne
or
in
push
inc
pop
fucomip
ja
ljmp
into
popa
pop
push
cltd
push
mov
into
jnp
xchg
dec
dec
mov
pop
pop
and
jmp
std
add
cli
out
inc
mov
in
pop
fcmovu
xorl
movsb
mov
stc
xor
fsub
inc
dec
mov
ss
fcoms
push
jg
imul
cmp
or
fwait
iret
fldlg2
mov
scas
dec
fidivrs
pushf
pop
cmpl
lods
stos
xacquire
jns
loope
insl
xor
xchg
ret
mov
icebp
cmp
stc
shll
outsl
push
xchg
pop
fcoml
sahf
cmp
jno
mov
sbb
jno
push
loope
push
inc
int
loope
xor
ljmp
and
call
mov
sub
pop
bound
jns
or
movsl
cmp
outsl
jl
and
pushf
sub
push
lds
into
or
cli
mov
repz
cmpsl
mov
or
int
sub
outsb
rcrb
test
scas
jnp
aas
push
push
push
stos
inc
leave
jbe
dec
adc
push
add
lret
into
mov
aad
aad
pop
and
mov
dec
sbb
loope
sahf
add
les
mull
xor
jecxz
add
ja
je
mov
and
clc
clc
and
jae
scas
dec
pop
int3
into
idivb
add
mov
dec
test
in
dec
in
shrl
mov
arpl
in
movsb
xchg
pop
outsl
out
je
jb
lahf
pop
jae
fwait
pop
cmp
jnp
xor
insl
loop
dec
xchg
inc
xor
scas
xchg
negb
dec
test
std
pop
xchg
mov
pushf
or
out
pop
pushf
xor
jne
lds
ds
inc
popa
loopne
pop
pop
push
or
or
scas
sbbb
xchg
test
push
fistpll
push
scas
fildll
push
or
dec
xlat
mov
and
sub
adc
or
pop
fwait
xchg
and
mov
lcall
aam
lahf
pop
pusha
icebp
pop
dec
in
shll
xor
push
into
push
xlat
out
and
loopne
ficoml
sbb
dec
mov
nop
scas
jb
lret
arpl
add
cwtl
add
xchg
test
adc
out
lret
push
pop
adc
push
sub
fidivs
rcrl
mov
mov
test
inc
sahf
sbb
jns
xchg
mov
loopne
rcl
fdivrp
sub
push
js
icebp
sub
pusha
pop
loopne,pn
pop
outsb
sbb
rcrl
es
inc
in
leave
mov
mov
mov
repz
dec
in
jle
outsl
fldenv
fbld
andl
sbbb
outsb
add
push
and
jae
addr16
xchg
cli
std
loope
xor
push
test
push
ja
push
pop
lods
mov
xchg
push
in
xor
jge
sub
and
ret
dec
cmp
jecxz
inc
mov
xor
fwait
add
jmp
pop
lret
mov
out
in
ret
fdivrp
aaa
test
mov
fwait
aad
stc
test
jns
hlt
xor
stc
sub
ljmp
das
scas
pop
jb
mov
xor
outsl
cmp
fwait
sub
and
add
aaa
push
in
test
push
xchg
xchg
cmc
add
cmp
dec
xchg
enter
call
daa
adc
pop
ret
push
mov
add
sub
add
jge
out
decl
mov
push
outsb
push
enter
insb
jmp
pop
mov
inc
push
mov
movsb
xchg
mov
mov
lret
stos
test
std
sbb
loop
ja
cld
xchg
aad
stos
pop
and
sbb
rcrb
pop
pushw
inc
push
nop
pop
out
pushf
cmp
push
xor
fsubs
fiaddl
or
mov
leave
addl
aad
dec
test
fnsave
jae
loop
and
jnp
insl
imul
sti
testl
and
xor
xor
mov
jl
sbb
add
iret
mov
mov
lds
into
sub
imul
inc
dec
mov
sub
lods
repz
lret
and
pop
push
push
lret
pushf
lods
mov
jle
in
xchg
push
popf
arpl
mov
shll
mov
cwtl
fsubs
sarl
ret
sub
mov
les
cs
cmpsb
aaa
pop
inc
std
leave
inc
mov
xchg
shll
notl
pop
push
or
and
ljmp
stos
lcall
xchg
mov
inc
xchg
ret
adc
test
fbld
rcrl
sub
push
in
jp
or
lret
pusha
aam
imul
mov
sahf
call
cmp
sbb
mov
scas
mov
xlat
mov
and
sub
hlt
mov
inc
fstpl
push
test
loopne
sbb
inc
pop
dec
aam
sub
je
push
add
int3
jmp
sub
xchg
call
ljmp
out
bound
sub
xchg
adc
outsb
stos
mov
aad
je
dec
cmp
outsb
imull
outsl
jmp
or
pop
cmc
fisttpl
jecxz
xchg
adc
mov
xor
aaa
sbb
xor
cmc
mov
push
outsl
and
mov
or
rolb
inc
arpl
mov
aam
jne
sbb
shl
inc
aaa
dec
mov
cld
sub
pop
aas
cmpsl
mov
adc
and
push
adc
sti
outsb
mov
arpl
inc
aas
or
pop
mov
lret
lret
stc
fisubl
xchg
mov
xchg
fiaddl
mov
push
pop
xor
xchg
subb
push
mov
xchg
out
jns
imul
popa
or
and
outsl
rcrb
lods
scas
call
fsubrl
cmp
cs
and
iret
cltd
xchg
inc
mov
jge
push
enter
daa
mov
fdivrp
xlat
sarb
sbb
data16
inc
movsl
sbb
int
je
or
test
pop
mov
sbb
lret
mov
inc
gs
cmc
mov
push
jl
loop
pop
outsl
pushf
repnz
test
dec
dec
xchg
leave
fimuls
lods
xlat
mov
test
lret
fadd
inc
fmuls
mov
jg
or
ss
lret
xchg
inc
movsb
or
xchg
cmp
cmp
and
sahf
inc
lock
cs
mov
and
cmp
dec
pop
sub
push
test
movsl
dec
add
unpckhps
psubb
push
in
dec
and
push
adc
jno
jns
pop
mov
xlat
mov
jb
mov
addr16
stc
xchg
and
les
out
int
pop
aam
ucomiss
lods
sbb
jnp
push
xchg
jge
add
dec
iret
into
mov
mov
mov
roll
hlt
sbb
ficoms
cmp
jge
cmp
add
pop
popf
add
int
jp
lret
loopne
mov
or
cmp
lea
sahf
cmp
sbb
mov
sub
jp
outsb
pusha
sub
add
and
fcompl
fs
out
jns
divb
lea
cld
leave
ret
fisttps
xor
xchg
sub
imul
cmpsl
or
sbb
add
mov
leave
push
aas
fiadds
cld
lcall
adcb
sub
pop
jecxz
pop
popa
gs
and
xor
je
ljmp
sub
aas
sbb
leave
or
add
xor
popf
iret
out
lds
mov
loop
fwait
in
xchg
push
dec
mov
pop
roll
movsl
jmp
sub
jl
repnz
mov
jp
push
test
cmp
iret
inc
add
insb
sbb
or
pop
push
and
add
dec
inc
jl,pt
xchg
stc
sbb
pop
mov
pusha
fwait
add
mov
dec
mov
fisttpl
rcll
int3
insb
scas
lret
lret
sub
xorl
or
xor
les
sub
and
vphaddbq
mov
test
and
insb
add
jecxz
pop
push
bound
jp
cltd
or
xor
push
xlat
cwtl
scas
test
test
fidivs
stos
aas
mov
or
mov
fstpt
in
and
out
dec
or
daa
jae
add
or
xor
std
mov
cld
xchg
xor
sub
inc
jbe
and
lcall
mov
xchg
add
adc
pop
fimuls
and
xor
negb
push
sub
addr16
in
outsl
movsl
out
dec
or
in
push
sbb
jp
pushf
mov
jae
sbb
jnp
jnp
in
dec
mov
sahf
or
push
insl
add
je
test
and
adc
jge
pop
sbb
ljmp
cmc
adc
stos
pop
and
out
mov
ljmp
mov
inc
scas
or
push
sbb
pop
inc
loop
mov
inc
pop
insb
mov
add
in
mov
xchg
es
test
movb
mov
xchg
push
imul
lods
scas
dec
je
cmpsb
je
dec
mov
mov
mov
les
scas
rcrb
in
sbb
sub
or
pop
cmp
xchg
stc
in
ss
mov
jns
rclb
mov
sbb
fwait
xor
push
out
pop
sub
jp
fadds
loopne
sti
enter
jmp
mov
push
hlt
inc
push
subl
imul
cmp
cs
jnp
out
aaa
sub
or
pop
push
cli
xor
jecxz
and
lods
push
pusha
js
testb
fdivs
call
lods
rclb
mov
cltd
dec
lods
xorl
sbb
rcll
xor
xchg
ds
mov
mov
and
movsl
arpl
aam
sbb
pop
add
xchg
sbb
enter
arpl
sbb
pop
mov
in
lret
jg
push
push
jns
jl
adc
sub
cmpsb
xchg
jae
fwait
ret
jo
jg
cmpsl
push
xor
lret
or
ds
xchg
pop
push
out
mov
in
cltd
and
cwtl
pop
lret
arpl
aam
je
jg
aad
pusha
shrb
or
mov
loop
mov
imul
mov
mov
inc
mov
aaa
rcrl
or
cmpsl
lret
nop
je
mov
xor
push
cwtl
adc
sbb
fadd
arpl
mov
pop
je
and
mov
mov
std
and
xor
movsl
adc
lock
mov
lcall
adc
ljmp
dec
xchg
stc
arpl
mov
xchg
pop
ja
cmpsb
cmp
mov
in
data16
jge
je
cmpsb
dec
outsb
jb
or
enter
push
scas
dec
sti
xor
loop
push
jmp
inc
test
cltd
shlb
inc
ljmp
fs
loope
fs
xchg
sahf
out
mov
sahf
or
dec
xor
or
push
ret
add
dec
cmp
push
test
imul
cwtl
shl
xchg
jmp
cs
or
or
lods
sahf
push
jae
pusha
push
push
cmp
xor
sbbl
cmp
sub
jae
lcall
push
ss
xorl
fnsave
in
pop
lods
or
xor
jno
aas
outsl
fcoml
loopw
imul
mov
jae
mov
aas
mov
sbb
adc
push
xchg
rol
in
inc
jmp
mov
add
lds
or
mov
mov
int
in
mov
mov
pop
lahf
lds
jmp
push
stc
inc
mov
outsb
mov
mov
sub
bound
shll
jg
rol
fildll
adc
lock
cmp
movsl
sbb
dec
push
fwait
sbb
inc
andb
ret
adc
add
xor
lcall
hlt
adc
push
out
sub
test
sub
aaa
mov
or
jb
push
push
in
push
mov
mov
jecxz
jae
ss
and
repz
lret
fmull
popf
mov
mov
sub
lret
dec
cmpsb
or
rorb
mov
fisubl
mov
inc
cmp
divl
push
add
xchg
ja
into
mov
ss
push
fdivl
and
add
adc
in
daa
stc
xchg
mov
in
test
jns
add
xor
in
xchg
test
sti
fwait
sub
xchg
leave
or
push
add
sbbb
xchg
mov
push
and
sbb
add
adc
dec
or
les
out
fimuls
cmpsb
ret
iret
mov
xchg
popf
jne
flds
mov
pop
movsb
arpl
cltd
dec
dec
mov
shlb
movsb
pop
xchg
cli
lods
dec
dec
dec
and
ret
cli
push
lods
out
pusha
nop
test
ret
xlat
pxor
pop
in
fildl
in
cld
mov
jge
lock
fwait
stos
mov
and
popa
sub
outsb
fwait
xchg
jmp
lret
sbb
sbb
jbe
ja
adcl
out
fisttpll
pop
sarb
cli
cwtl
iret
or
adc
insl
scas
mov
xchg
loop
sahf
add
inc
jb
mov
in
and
lret
sbb
sbb
test
jle
jne
cmp
xor
lret
les
out
lret
test
subb
lahf
push
ret
iret
out
pop
repz
int3
icebp
loopne
jmp
jne
pop
lahf
and
aad
js
inc
sahf
gs
lea
cmpsb
add
lahf
jbe
fsts
dec
sub
mov
mov
aas
lds
jge
cmp
pop
xchg
sub
nop
popf
or
xchg
sahf
and
imull
cld
inc
lds
lret
push
sbb
loop
movzwl
rorb
adc
incl
repz
xchg
rorl
test
mov
cmp
rcll
sbb
jp
lods
stc
xchg
ljmp
mov
addr16
fcomip
push
es
inc
xchg
inc
sbbl
sub
adc
das
imul
out
add
cmovg
leave
sub
pop
push
cmp
aaa
xor
imul
and
jge
pop
sahf
and
lock
inc
leave
aam
xor
addl
adc
cmpsb
lret
jo
lret
test
int
dec
add
fldl
xchg
aad
mov
int
sahf
gs
cmpsl
fisubrl
pushf
mov
into
push
cmp
and
mov
ficompl
pushf
leave
sbb
gs
ss
xor
ljmp
mov
adc
pushf
adc
dec
test
mov
in
push
cmp
stos
mov
push
pop
inc
jp
push
inc
iret
mov
sub
jbe
xor
jmp
and
popf
movsl
pop
or
in
sbb
adc
push
and
xor
test
jmp
cmp
add
jle
dec
test
xchg
mov
sbb
sbb
dec
sbb
push
add
bound
stos
int
jae
subl
push
add
mov
push
or
mov
jns
xchg
fcoml
iret
adc
xor
or
xchg
aad
adc
xor
push
dec
mov
outsb
mov
stos
hlt
adc
inc
pop
je
inc
mov
js
js
out
decb
or
cmp
mov
or
inc
mov
and
cltd
mov
ret
in
mov
mov
cmpsl
sarl
imul
js
dec
gs
aas
inc
sbb
subl
jb
jae
sbb
push
imul
lods
xchg
bound
pop
add
adcl
ffree
lods
mov
mov
leave
xchg
mov
jns
fsts
addr16
add
mov
cmpsb
ja
xor
xchg
ss
stos
test
bound
dec
out
test
sbb
pushf
das
or
sbb
stc
imul
cs
ror
adc
and
inc
movb
cltd
movsl
fistl
mov
dec
mov
dec
fnclex
or
jno
movsb
xor
xor
mov
xor
fstpl
in
cmp
xor
add
xchg
roll
push
xor
fstl
jne
jg
das
shrl
cmpl
and
xchg
cmp
pop
test
fldenv
add
and
jnp
popa
xor
lret
dec
push
xor
push
les
mov
lret
gs
and
lcall
mov
lahf
jae
std
xchg
jg
les
sbb
xor
add
pop
fwait
inc
call
js
nop
gs
fwait
mov
dec
arpl
adc
mov
ds
ret
sahf
jp
loopne
loop
pop
xchg
xchg
negl
daa
arpl
push
dec
leave
je
mov
xor
jmp
repz
xlat
mov
xor
xchg
scas
ret
xchg
push
lret
mov
or
cmp
or
mov
stc
jne
outsl
mov
int3
adc
mov
push
inc
xchg
push
repnz
mov
adc
jle
pushf
jae
subl
scas
negb
aad
mov
mov
mov
dec
lret
push
mov
rcrl
add
test
jne
decb
fldenv
pop
inc
fwait
mov
loope
mov
sbb
das
pop
sbb
test
outsl
orl
or
mov
pop
popl
std
adc
sub
cwtl
icebp
fimuls
pop
mov
stos
xor
jg
out
pop
dec
out
mov
loope
sbb
pop
in
ja
mov
incl
out
mov
adc
popa
push
sub
test
test
movsb
dec
repz
cwtl
ret
mov
sbb
mov
mov
push
imul
dec
cmp
shlb
les
adc
adc
xor
add
test
mov
out
adcl
cmpsb
lcall
mov
shlb
mov
into
xor
ljmpw
test
jno
ret
lret
aas
add
mov
push
xor
aad
das
loopne
pop
push
adc
or
mov
push
push
jl
cwtl
sbb
in
arpl
les
cwtl
test
fistps
ret
jge
dec
lret
sbb
push
loop
mov
test
jl
xor
xchg
aas
pop
sbb
cwtl
jbe
xchg
mov
or
mov
sub
cmpsl
aad
mov
rcrl
sub
inc
jg
cli
sub
or
testl
sub
shrl
adc
jae
push
or
sub
mov
cltd
jl
scas
mov
cli
lahf
pusha
adc
loop
add
filds
mov
pop
in
call
mov
cmpsl
xchg
jns
pop
arpl
lods
cmp
out
dec
xchg
aam
dec
adc
pushf
pop
adc
pop
inc
inc
aaa
xchg
inc
sti
mov
fsubr
dec
mov
mov
pop
rcll
sub
push
out
insb
sbb
pop
ss
aam
xchg
dec
imul
std
fnsave
lret
jns
sahf
pop
adc
outsb
mov
jle
adc
mov
test
jmp
mov
ret
es
fs
pop
loop
ja
jecxz
mov
loopne
push
int
adc
fistps
jbe
xlat
xor
aad
fmuls
clc
mov
out
loope
cli
mov
push
out
mov
test
out
xchg
fwait
movsl
cmp
arpl
cli
lea
jmp
loope
insl
lcallw
and
hlt
mov
cmc
cmp
cli
aad
mov
and
repz
repz
cmpb
jle
or
inc
mov
adc
dec
lea
add
sahf
gs
mov
xchg
sbb
je
shlb
push
and
jo
xchg
shlb
ss
das
xor
or
jae
jge
sub
mov
in
das
sbb
inc
inc
out
mov
sub
jne
fwait
pop
iret
outsb
pop
mov
mov
xchg
out
imul
adcl
scas
rolb
fwait
idiv
sbb
jg
xor
arpl
movsb
test
lahf
jecxz
add
repnz
mov
xchg
cli
pop
scas
mov
adc
ljmp
pop
loopne
xchg
mov
test
test
cmpsb
push
mov
cmc
nop
jge
or
adc
push
add
sub
push
mov
bound
test
mov
leave
aaa
es
stos
xchg
jns
push
rol
stos
popa
negl
loope
dec
push
sub
test
sub
aam
dec
data16
and
pop
push
mov
add
sub
repz
cmp
mov
sbb
dec
or
jp
xor
pop
out
notl
ret
dec
lods
sbb
lahf
jb
fwait
inc
rorl
and
das
lds
inc
jno
pop
cmp
cmpsl
es
and
aas
adc
roll
cltd
or
jb
test
clc
cltd
jbe
cld
hlt
mov
addr16
mov
mov
stos
jl
push
jg
and
lret
push
fisttps
push
mov
rcrl
mov
loopne
dec
pop
leave
aad
insl
leave
cwtl
fisubrs
test
dec
iret
mov
dec
push
dec
sahf
cmc
add
cmp
test
fidivs
cwtl
push
cld
mov
pop
dec
add
pop
cwtl
and
test
or
mov
and
js
test
pop
inc
xchg
mov
gs
movsb
jb
jbe
aam
sub
add
push
add
ds
cmpsl
stos
mov
lods
test
imul
ljmp
int
callw
insl
into
pusha
fstl
add
push
out
out
pop
call
ss
mov
mov
sub
in
push
cmp
sbb
mov
dec
movsb
push
daa
or
mov
xor
mov
sti
nop
stc
mov
xor
push
jmp
mov
stos
xchg
fildl
sub
sbb
jbe
int
pop
xchg
mov
mov
mov
iret
imul
fnstcw
adc
imul
lods
push
cmp
push
test
mov
and
inc
adc
outsb
or
or
out
and
lds
ret
insb
inc
insl
jnp
outsb
xchg
clc
cli
lods
es
or
or
jnp
jl
fiadds
and
push
and
mov
cmp
nop
xor
out
out
and
fsubrs
inc
pop
sub
xchg
sub
std
xchg
jge
sub
sub
jmp
push
cmpsl
cmpsl
fnstcw
jmp
jns
xchg
or
mov
sub
jmp
xor
lar
es
xchg
imul
scas
mov
pushf
add
out
pop
cmp
add
inc
jmp
lret
fisubrl
iret
fbld
mov
jb
jno
leave
jbe
stc
movsl
imul
jne
pusha
bound
mov
stos
mov
sarl
lds
or
mov
loope
mov
jno
add
xor
pmulhuw
mov
fldt
mov
jecxz
sbb
or
sub
jle
lock
mov
pop
sub
pop
push
xchg
out
in
ret
cli
push
mov
enter
pop
pop
icebp
push
test
dec
jg
lret
or
leave
jae
jne
subl
bound
sub
adc
lods
mov
nop
pop
out
jg
dec
xchg
or
mov
adc
jecxz
fcoms
sbb
and
lds
bound
xchg
jmp
sub
test
sbb
dec
mov
shll
lods
inc
jne
aaa
mov
jb
aam
fs
xchg
jne
test
sub
jp
mov
test
jle
es
inc
popf
out
push
and
xchg
enter
mov
inc
xchg
test
hlt
fstpt
adc
cmp
inc
jno
dec
jne
pop
sub
lods
sub
mov
xchg
in
cmp
adc
dec
enter
into
loope
fnstenv
loop,pt
in
mov
xchg
les
jae
test
adc
mov
pushf
repz
rcrb
out
or
xlat
lahf
cmpl
js
cmp
insl
add
adc
push
ja
mov
inc
mov
jge
pop
cmp
add
shrl
mov
and
arpl
push
fists
cmpl
jge
pop
sbb
mov
lods
test
xchg
ret
push
dec
loopne
xchg
cmpsb
pop
pop
push
lcall
and
out
mov
mov
xorl
push
rcl
fwait
mov
js
pop
cmp
push
adc
enter
xchg
stos
stc
sbb
cmp
stos
fidivrl
call
icebp
sub
jge
push
insl
int3
push
icebp
jnp
pop
aam
mov
mov
vmwrite
sarl
shl
xchg
arpl
ljmp
jp
mov
movsl
test
mov
and
mov
pop
push
sub
mov
int
add
rcl
gs
cmp
ds
cmc
clc
mov
ja
repz
cmpsb
push
push
fldenv
push
jecxz
sbb
xor
jb
movsl
or
sarl
enter
shrl
lods
fisubrs
jbe
push
push
push
out
std
mov
out
adc
jns
xchg
outsb
push
adc
mov
mov
loope
int3
int
lcall
mov
es
je
sti
mov
or
ds
fdivrs
xchg
xorl
mov
loope
cwtl
les
jmp
adc
rorl
loope
out
xchg
shl
in
inc
fadds
inc
test
xchg
pop
bound
xchg
or
lock
mov
aas
ret
push
mov
cwtl
xchg
pusha
adc
sub
add
xor
pop
out
lcall
popa
mov
loop
insl
jnp
sub
sub
ds
mov
in
fdivr
cmpsb
pusha
movsb
mov
add
fwait
push
xchg
nop
in
gs
cmc
pop
out
rcl
xor
pop
adc
mov
addl
sahf
jecxz
cmp
push
lret
adcl
lcall
mov
mov
mov
imul
popa
cmp
adc
je
push
popa
inc
mov
pop
fsubrl
push
push
xor
sbb
iret
lret
or
loopne
test
cmp
jg
test
lea
and
lds
imul
adc
aaa
push
cmp
and
xor
cmc
in
std
fidivrs
push
test
loope
lea
sti
push
jnp
scas
adc
icebp
into
inc
outsb
and
out
mov
loop
xor
add
stc
mov
cld
cmp
push
repz
lcall
cmp
ret
mov
jg
sbb
gs
add
inc
or
pop
stos
dec
jge
imul
call
push
ja
and
clc
push
xchg
cmpsl
dec
and
mov
mov
iret
dec
dec
lods
dec
fldl
rorb
arpl
add
xor
pop
sbb
sti
inc
in
xorb
jecxz
mov
push
push
ja
cmp
xchg
mov
loope
shrb
jnp
or
inc
ljmp
aaa
mov
lods
mov
fdivr
ffreep
jns
jne,pt
fs
push
aam
out
xchg
mov
and
test
xchg
aas
push
pop
cli
or
dec
std
test
lock
xor
les
mov
je
popf
arpl
das
sub
in
stos
and
inc
test
jnp
orb
pop
sarl
sub
adc
or
sahf
fidivl
jle
cltd
flds
insb
mov
or
and
push
xorb
xorb
iret
sbb
les
lea
int
lea
insb
pop
lahf
xor
push
cld
mov
or
test
dec
xor
add
cli
mov
push
inc
fwait
sub
cmp
xchg
in
push
aaa
bound
jmp
roll
jecxz
mov
push
sbb
data16
nop
decb
scas
push
imull
mov
xor
les
and
pop
nop
dec
inc
xor
inc
lods
mov
lret
jae
and
xchg
add
inc
push
roll
lret
lcall
push
fldt
ljmp
mov
jno
jno
sub
js
insb
pop
jmp
lahf
and
sub
sub
idiv
and
push
add
cmc
in
pop
sub
mov
fdivp
push
iret
test
pop
cmp
cltd
popf
dec
repz
or
sub
pop
mov
jge
jbe
jmp
outsl
sub
dec
xchg
add
xor
fs
in
subb
pop
out
dec
ret
dec
mov
scas
push
aas
dec
mov
loopne
cs
pop
sahf
lcall
in
jp
out
sub
jbe
aad
push
push
cld
ret
jecxz
cmp
mov
adc
stos
xchg
add
insl
fsub
addr16
rorb
leave
mov
add
getsec
dec
sarb
xor
inc
mov
ss
data16
mov
mov
fdivs
mov
in
adc
insb
loop
cwtl
fildll
jl
cmp
sbb
push
out
xchg
into
adc
push
cmp
test
fs
dec
imul
in
shl
ret
and
dec
fstp
xchg
adc
or
pop
test
add
imul
inc
mov
fadds
sahf
jns
lds
sbb
fdivp
sbb
aaa
mov
or
mov
jnp
adcb
cmpsl
mov
or
xor
add
xor
dec
fsubrl
push
sub
into
in
dec
mov
push
stos
sbbl
out
or
mov
or
sub
xor
xor
sti
fildll
scas
jle
add
cmpsb
xor
shll
jmp
ficomps
push
cmp
cwtl
pop
pop
fmull
sbb
xlat
pushf
sub
shrb
ja
xchg
ss
outsl
sbb
imul
lea
xchg
pop
mov
add
push
pop
popa
stos
test
mov
mov
lock
adcb
add
mov
xchg
sub
pop
or
sahf
repnz
scas
std
sub
roll
dec
out
test
mov
mov
push
xor
cltd
and
nop
aad
adc
cmp
fisttpll
jmp
rorl
lahf
xchg
out
cmp
or
nop
lcall
sub
lods
adc
sbb
lea
and
leave
dec
sbb
scas
xlat
adc
xorl
sbb
adc
popa
outsl
ret
mov
in
mov
jmp
insb
adc
jno
xchg
into
xlat
stos
in
fistps
shlb
cwtl
cwtl
add
push
sbb
lock
inc
push
lock
adc
push
cmp
mov
mov
pop
dec
push
add
loope
xchg
mov
stc
aas
xor
mov
stos
cli
xchg
jge
ljmp
add
enter
jmp
sbb
push
and
sub
movsb
xchg
stos
ffree
dec
cmp
sbb
cld
push
stc
andl
and
mov
iret
sahf
mov
push
xor
pop
hlt
insb
shr
jae
inc
ljmp
es
mov
lock
scas
into
movsb
pop
jecxz
cltd
adc
sbb
sbb
xchg
xlat
pop
push
in
inc
inc
add
xor
leave
push
into
jns
mov
lods
sbb
xlat
xchg
or
or
mov
movsl
xchg
xchg
jnp
lods
adc
movsl
sub
cmp
xchg
out
aaa
cmpsb
pop
frstor
lret
xor
ret
test
xchg
mov
pop
mov
shl
ror
cltd
pusha
insl
scas
cmp
ljmp
popl
bound
shlb
mov
notl
imulb
add
ds
inc
jbe
pop
or
sti
mov
jnp,pn
sbb
mov
sub
arpl
sbb
mov
mov
out
fistpl
stos
pop
and
movsl
mov
jae
mov
xor
scas
popf
movsb
jo
add
jmp
mov
cmp
scas
pop
dec
rorb
cmc
sub
mov
popa
or
push
repz
insl
jecxz
xchg
and
and
out
iret
xor
dec
mov
pop
rorl
ljmp
adc
jae
test
jns
in
fnstcw
jb
daa
not
inc
fs
or
sahf
xchg
out
cmc
cltd
lods
inc
maxps
mov
pushf
xchg
sbb
out
inc
mov
push
adc
aad
jno
jp
and
outsb
repnz
dec
movl
xchg
push
sbb
jbe
jge
adc
push
and
dec
js
jo
mov
push
cmp
mov
mov
jle
orl
shll
sbb
mov
xchg
js
aad
or
pop
adc
fwait
xchg
lret
cmp
xor
stc
push
and
cli
fucomp
sahf
cmp
aam
lds
loopne
scas
adc
pop
faddl
or
xchg
and
lds
mov
or
sub
ret
aaa
xor
imul
daa
addl
push
cwtl
pop
testb
dec
xor
mov
repz
dec
repnz
or
fidivrl
call
js
add
movsb
shlb
in
lods
jmp
sbb
add
xor
cmc
inc
mov
fildll
lret
rol
scas
int
lds
nop
dec
dec
dec
or
sbb
sub
dec
sub
add
daa
gs
int
outsl
iret
lds
jg
cmpsb
and
call
fs
insl
mov
icebp
cmp
sub
fbld
dec
mov
out
jno
mov
roll
and
mov
aad
pusha
push
cld
pop
inc
xor
test
mov
sbb
imul
mov
and
xchg
cmp
es
cmp
inc
neg
out
mov
mov
ret
dec
jle
shlb
sbb
rclb
mov
pusha
in
xor
ds
enter
add
add
lret
or
pusha
in
ss
jo
sbb
pop
lret
fnstsw
movsl
pushf
fs
sbb
dec
mov
sub
xchg
dec
test
js
mov
loop
xchg
sbb
sub
test
mov
imul
cs
jb
outsl
jp
sub
int3
sbbb
cli
daa
sub
sub
mov
push
test
js
stos
out
stos
sarb
or
pop
lods
cmp
inc
push
inc
mov
bound
push
imul
fcoml
cs
adc
sbb
xchg
jecxz
sarb
out
dec
mov
inc
out
pusha
mov
sarl
mov
pop
dec
aas
int
rorl
ljmp
sbb
mov
rorl
jmp
sbb
cwtl
jmp
jb
jno
fdivs
and
movsl
sub
call
xchg
xor
dec
in
inc
rcr
addr16
in
push
push
sub
sarb
ret
cli
jg
xlat
push
shll
mov
movsb
xchg
xor
dec
in
or
in
jae
in
cltd
mov
inc
sbb
int
push
aam
mov
pop
lds
out
adcb
in
mov
sbb
dec
jne
xchg
dec
scas
iret
popa
mov
cld
cmpsl
cmp
fs
xor
xlat
test
adc
xchg
imul
push
in
in
push
mov
push
adc
push
mov
pop
lcall
dec
mov
inc
lods
xchg
mov
inc
or
sub
xor
lahf
push
out
pop
xchg
je
and
daa
lods
add
rorl
inc
sbb
imul
adc
adc
mov
loope
inc
add
adc
popf
mov
xor
ljmp
loop
insb
aam
adcb
mov
es
rclb
enter
outsl
add
into
and
mov
lock
mov
or
jge,pn
push
cmpsb
xchg
add
mov
add
lods
jp
jbe
or
or
and
fucomi
in
xchg
test
jle
inc
cmpsl
adc
dec
jno
push
divb
icebp
test
out
pop
xor
xor
gs
std
ss
stc
popa
mov
jle
addr16
inc
movsl
insl
enter
out
daa
aam
pop
mov
push
clc
push
repnz
push
or
adc
movl
and
xor
jno
shll
das
aaa
cmp
shlb
cmp
cmpsl
jnp
xor
adc
cmc
cmpb
mull
dec
xor
andl
sbb
mov
xchg
adc
jbe
and
in
push
inc
pushf
mov
adc
cltd
xor
jle
fadds
xchg
push
dec
dec
repnz
decb
lds
or
mov
xchg
add
les
jne
pop
or
fstpl
lods
dec
lret
mov
enter
cmc
aas
dec
out
stos
jbe
loop
xorb
jecxz
xchg
dec
adc
dec
pop
fadd
das
iret
mov
push
filds
shlb
fs
sbb
jae
mov
dec
jo
cmc
sbb
mov
dec
mov
push
in
or
xchg
subb
mov
aad
sbb
lods
scas
out
jp
and
fiaddl
scas
test
jl
cli
and
adc
rorb
xlat
mov
add
and
cmpsb
adc
bnd
in
xchg
ret
pop
aam
sub
out
insb
insl
stos
cld
pop
mov
inc
out
sbb
pushl
in
fs
jle
push
sbb
imul
in
push
jl
mov
das
pop
lods
fbstp
cmpsl
lret
jo
inc
sbb
test
sbb
mov
or
outsl
insb
mov
imul
xchg
andl
out
aad
and
or
into
jnp
test
dec
push
cmp
mov
insl
test
dec
ret
into
fs
out
rorl
add
jl
sub
jmp
pop
sub
sti
sti
sub
xchg
pop
bound
xlat
loope
adc
pop
xor
sub
imul
push
mov
or
je
imul
movsl
fsub
mov
enter
aaa
and
mov
stc
add
inc
test
int
int3
inc
sub
sbb
aam
in
fdivp
jp
in
sbb
sub
shlb
xchg
push
inc
mov
mov
pop
cmpb
rcll
mov
das
adc
mov
mov
mov
dec
or
mov
mov
mov
stc
fcomip
cwtl
rcr
mov
xchg
or
lahf
push
sbb
pop
aaa
dec
jb
loopne
and
jmp
xor
aad
imul
imul
or
out
add
mov
mov
sbb
mov
popa
sbb
sbb
cmp
xchg
add
nop
int3
dec
push
jge
lea
xchg
mov
mov
aad
adc
inc
dec
sti
add
mov
aad
faddl
stos
dec
test
inc
mov
shrb
add
jecxz
loop
ficoml
insb
jecxz
inc
or
mov
cmovg
sub
sbb
mov
and
out
adc
fs
popa
or
inc
jb
mull
xlat
mov
xchg
push
xchg
jo
movl
lock
enter
xchg
rcl
cmc
dec
inc
fistl
lret
out
sbbb
xchg
mov
and
fisubrs
add
out
pop
mov
scas
test
in
repz
adc
sub
push
add
sbb
inc
nop
out
cli
adc
jmp
jg
fldcw
mov
int
pop
adc
mov
and
jbe
add
test
test
or
lea
xor
iret
add
int3
mov
fsubl
insl
lds
fstpl
popf
mov
jae
sbb
pop
ljmp
mov
imul
lret
out
imul
test
ja
adc
and
hlt
cmpsl
xor
outsb
add
pushfw
push
push
pop
ja
leave
aad
dec
or
cmpsb
fisttpl
pop
pop
adc
rolb
ljmp
rcr
decb
out
js
pop
jp
repnz
pop
dec
inc
js
dec
or
mov
or
add
sub
fisubrs
jmp
push
or
mov
xlat
push
clc
in
inc
mov
ja
push
xchg
pop
xor
adc
aaa
rcrl
cmc
mov
cs
mov
sub
das
shll
lcall
in
cld
popa
mov
lds
sbb
pop
fcom
arpl
xchg
aam
push
rcrl
movsl
movsb
int3
shrl
stos
add
jecxz
es
adc
mov
cwtl
imul
dec
fcoms
and
aad
and
rcl
movsb
sahf
adc
add
rolb
bound
push
test
xor
ds
fwait
iret
sub
xchg
sbbb
das
jge
aas
nop
and
adc
mulb
mov
scas
push
fwait
icebp
cmp
pop
or
arpl
inc
gs
push
mov
jmp
in
and
jle
xchg
icebp
pop
mov
pop
lcall
xorb
mov
pop
roll
xchg
aas
mov
lods
cs
add
cmp
nop
adc
jecxz
movsb
sub
lds
xor
or
sub
cltd
mov
in
xchg
orb
push
adc
push
stos
cs
pop
loope
cmpsl
jmp
xor
add
shll
iret
js
test
mulps
add
jns
or
inc
jns
add
xor
out
leave
sbb
dec
xlat
leave
icebp
flds
fdiv
mov
xor
push
jle
jae
pop
popa
lea
pop
mov
enter
dec
push
sarl
je
dec
dec
rorb
mov
pop
out
xchg
jne
inc
cmp
lods
cmp
push
out
add
jmp
ret
mov
add
push
mov
int3
sub
push
enter
insb
test
imul
adc
retw
ja
mov
es
push
xor
and
out
mov
cmp
add
dec
js
and
push
mov
sbb
mov
icebp
clc
pop
pop
push
hlt
addr16
lods
subl
nop
xor
in
outsb
cld
fldcw
and
mov
fldcw
lahf
xchg
aam
inc
xlat
leave
push
icebp
int3
enter
in
sub
dec
hlt
cmp
inc
fimull
rcll
xlat
and
les
addr16
lds
inc
stos
cmp
push
adc
icebp
pop
inc
jge
fs
sbb
push
inc
add
sub
ss
hlt
repz
test
test
push
ds
inc
or
and
jl,pn
pop
jmp
fwait
pop
out
js
mov
jmp
add
notl
dec
popf
cmp
sub
jg
iret
push
xor
inc
cmp
push
dec
mov
imul
iret
notl
ljmp
inc
jae
int
jo
mov
addr16
push
push
xorl
outsb
jl
and
sub
add
push
cmpb
scas
xorl
movb
arpl
push
and
test
jge
mov
xor
scas
ja
movsl
out
arpl
inc
cmpsb
cli
xchg
cmp
jmp
push
push
imul
push
sub
addb
outsb
adc
ss
sbb
cmp
test
je
or
dec
fstpt
xchg
adc
cmp
stos
sub
or
test
inc
ja
arpl
xor
cmp
pusha
mov
scas
pop
and
lods
cmpsl
fs
pop
xchg
test
addr16
and
jnp
xchg
lret
in
rcll
ja
mov
and
push
sub
dec
int3
iret
xor
push
int3
or
fwait
xchg
push
dec
addr16
test
xchg
pop
aas
fstpl
ljmp
and
mov
or
xchg
sbb
mov
ficomps
xchg
sub
sbb
subb
jne
sub
repz
add
cmp
and
push
adc
mov
jp
mov
lcall
call
std
sahf
jbe
aas
or
mov
js
outsb
lock
insl
psubsb
adc
or
push
loopne
ret
aas
xor
and
xor
fsts
out
ds
mov
or
mov
mulb
daa
loope
sub
dec
pop
pushf
mov
clc
cmp
mov
inc
xchg
ficompl
push
movsb
push
add
ja
xchg
out
int
fwait
push
mov
loope
mull
mov
nop
xor
aad
sarl
mov
fisubs
jg
add
push
mov
xlat
jle
inc
adcb
test
ss
xchg
inc
push
out
pop
or
cmp
outsb
idiv
add
subl
xchg
inc
add
scas
orb
repnz
data16
idivb
arpl
lds
xorl
xchg
jns
flds
scas
xchg
push
pop
push
xchg
mov
inc
in
daa
dec
icebp
stos
rolb
inc
xorb
jae
dec
jae
cld
add
fisttps
sbb
hlt
inc
les
shlb
test
in
aam
add
add
add
mov
out
icebp
sbb
and
jb
add
leave
nop
aas
mov
comiss
ret
imul
lods
lret
xor
cmc
or
xlat
adc
fwait
pop
push
pop
xor
ljmp
xlat
pop
add
dec
xor
adc
imul
gs
gs
jmp
lods
rorb
movsb
inc
push
or
mov
insb
aam
in
in
cmovo
cmpsb
movsl
xchg
nop
outsl
fisttps
es
jne
pop
hlt
enter
jb
fdivrl
add
cli
inc
int
aaa
adc
int3
out
insl
add
inc
hlt
or
jae
xor
clc
dec
cld
or
jp
leave
mov
frstor
sbbb
xlat
cmpsl
shlb
dec
outsl
cmp
dec
mov
xchg
clc
lods
sub
pop
add
xchg
xchg
mov
mov
push
jb
or
and
or
mov
adc
das
cmpsl
aas
push
sub
mov
xchg
clc
lcall
idivl
xchg
cmp
mov
std
mov
xor
mov
fiadds
inc
pop
icebp
xchg
xchg
dec
mov
dec
cmpsb
mov
pop
lahf
dec
or
pop
push
lock
push
pusha
sbb
das
push
add
sbb
dec
imul
lds
mov
cmpsl
mov
and
daa
addr16
jp
or
pop
inc
jg
dec
dec
cmp
and
cmp
enter
dec
xchg
add
scas
xor
dec
xchg
and
mov
cld
and
pop
and
or
fidivs
fisubl
mov
add
inc
xchg
imul
mov
mov
mov
scas
loope
fildl
xor
sub
repnz
cwtl
adc
cmc
jg
xor
add
pop
dec
int3
cmp
push
mov
jo
inc
rcrl
loop
test
int3
pusha
lods
xchg
cmpsl
imul
test
into
repnz
sbb
jno
jae
adc
daa
in
xchg
fcomi
aas
xor
sbb
xchg
call
jae
push
xor
push
and
jmp
add
mov
mov
out
stos
inc
stos
dec
inc
ret
lods
mov
mov
hlt
pop
ficompl
and
push
mov
sbb
shl
out
in
xchg
cwtl
adc
jae
xor
sbb
mov
iret
aad
mov
bound
shll
xor
mov
pop
push
push
inc
mov
mov
adc
mov
test
lea
xchg
xor
jecxz
rcrl
dec
jb
add
or
pusha
sti
cli
jbe
dec
sub
std
out
cs
push
or
mov
dec
jmp
fldl
dec
xor
stos
addl
sahf
cmpsl
in
sbbb
mov
sahf
cs
mov
jge
adcb
pop
or
inc
mov
xlat
push
cmc
sub
jbe
jae
sbb
sub
prefetcht2
pop
and
add
insl
mov
sub
lods
stos
push
insl
lcall
repz
das
cltd
nop
fsubr
lcall
add
lret
push
paddq
xor
pushf
and
ja
popa
inc
decl
pop
cld
push
sahf
inc
cmpsb
cltd
pop
scas
gs
and
ret
movsl
inc
mov
mov
inc
adc
xor
cld
sahf
sbb
cmc
scas
add
aad
adc
dec
pop
or
dec
fwait
jns
aaa
popa
insl
or
adc
out
xchg
nopl
add
adc
call
mov
push
mov
add
jmp
inc
testb
rcl
sbb
loope
fistpl
mov
xchg
incb
icebp
xlat
and
pop
movsl
jl
sbb
push
and
xor
sub
push
fildl
jae
stos
mov
xor
dec
and
jnp
test
and
cltd
cmpl
mov
popa
adcb
popf
in
add
repz
inc
repnz
repnz
imul
in
popf
mov
adc
outsl
ljmp
sbb
jge
or
test
pop
jae
orl
mov
je
test
ja
cli
push
adc
data16
sti
add
push
je
repz
mov
inc
in
add
push
lcall
adc
sub
shrb
cli
rcrl
icebp
clc
mov
lock
pop
mov
push
push
mov
int3
xor
out
jb
jl
mov
out
dec
sbbl
fistl
mov
cmp
js
pushf
xor
fldl
loop
faddl
push
lock
jo
mov
inc
mov
adc
aam
fsubs
leave
es
shrb
push
push
sub
pop
aas
lret
in
jl
movsl
add
cmpsl
cli
mov
into
jnp
repz
push
jp
lcall
or
stc
andl
xor
xor
inc
idivb
ljmp
lds
add
mov
rorl
test
lret
adc
jb
icebp
aas
mov
mov
mov
pop
mov
in
gs
dec
es
int3
pop
and
stc
call
or
scas
push
pusha
nop
jp
adc
mov
nop
loopne
pop
mov
popa
pop
xchg
int
ds
cmpsb
pop
mov
inc
fsub
aaa
mov
or
dec
pop
insb
je
out
ret
adc
flds
and
inc
xchg
or
and
cwtl
outsl
repz
sub
loop
jnp
push
pop
push
or
push
sarb
jae
sbb
fwait
add
xorl
shl
xchg
pop
lret
jo
sti
push
stc
mov
repz
test
jecxz
add
xor
mov
dec
push
sub
int3
add
push
aaa
jp
inc
mov
push
fiaddl
mov
data16
cmp
inc
pusha
testb
push
mov
fisubs
in
lock
adc
xor
jp
dec
popf
dec
lods
and
data16
stos
lahf
inc
lahf
cmp
mov
leave
pop
pop
and
pop
lock
int3
das
mov
inc
xchg
jo
in
or
cltd
xchg
cmp
cmp
mov
pop
sub
push
negb
jg
stos
pop
jp
mov
lahf
je
dec
out
xchg
jecxz
jae
nop
xor
je
xchg
addr16
inc
jo
int3
test
or
ljmp
pop
xor
pop
int
mov
sub
sti
inc
data16
cmp
sti
add
loopne
fidivrl
es
adc
inc
out
rolb
dec
outsb
jp
jno
push
push
dec
sbb
cmp
pop
mov
cmpsl
add
daa
jmp
jno
cmp
xchg
jecxz
mov
repz
cltd
cmc
mov
inc
jl
adc
jge
scas
push
mov
cld
in
pop
les
jp
pop
outsb
xchg
sbb
es
jge
dec
xchg
js
into
out
clc
jp
aam
pop
int3
stc
pop
ret
push
xor
push
movd
addl
pop
imul
jmp
mov
push
sti
or
push
lods
cmp
jae
xlat
mov
pop
inc
push
sub
frstor
call
and
cmpsl
jbe
hlt
mov
fldl
insl
adc
imul
je
movsl
or
inc
xchg
xchg
std
mov
dec
push
cs
xchg
xchg
push
clc
and
jecxz
adc
cmpsl
mull
sbb
mov
push
adc
jge
rolb
push
inc
xorb
sbb
mov
mov
in
xor
pop
and
aam
aad
push
xchg
mov
test
stc
repnz
lock
sbb
nop
dec
ret
mov
dec
ret
aam
aaa
pop
out
lods
push
je
stc
jae,pt
in
fcomi
fldt
in
lcall
push
movsb
subb
or
aad
addr16
test
sbb
in
outsl
rol
shl
and
les
mov
dec
mov
loopne
inc
mov
mov
mov
xchg
inc
lds
sub
xor
outsl
in
stos
xor
jno
mov
pusha
into
pop
jbe
outsl
ja
or
mov
shlb
ljmp
cmp
mov
xchg
inc
cwtl
adc
cmc
ficompl
pop
jnp
cmpsl
dec
sub
push
out
mov
adc
bound
add
sub
rcrb
jg
mov
pop
enter
ja
adc
sbbb
and
mov
push
dec
mov
inc
in
arpl
and
and
rorl
int
imul
cltd
out
add
lret
imul
push
sub
shl
fimuls
cmp
testl
or
mov
jbe
test
fxch
mov
cmp
inc
xchg
aas
push
mov
lds
in
push
jne
clc
mov
pop
inc
js
mov
push
xchg
xor
sbb
cmpsl
cld
divb
xchg
and
pop
rcl
push
mov
fcomi
push
inc
or
movl
lods
lahf
test
mov
cmc
out
lods
aaa
pop
xor
pop
lret
dec
lahf
jg
leave
jp
and
add
pop
ret
dec
lea
sub
aaa
xor
aas
movsb
xchg
outsl
aas
cmp
jns
and
sbb
lea
outsl
sbb
bound
sub
adc
xchg
adc
imul
pop
jmp
cmp
xorb
cmp
sbb
shrb
rolb
jae
pop
int
mov
imul
addr16
xchg
inc
das
ror
in
stos
les
fstpt
int3
push
int
add
inc
mov
and
jno
daa
data16
pop
xchg
mov
and
jne
mov
sahf
mov
jl
fildl
inc
xchg
sub
cmp
mov
inc
xchg
outsb
js
push
add
lea
mov
mov
in
jmp
js
iret
sub
gs
pop
movb
dec
and
aaa
int
or
lea
jp
cli
adc
std
mov
pusha
jl
jo
imul
or
aas
lret
push
dec
or
sarl
inc
adc
mov
mov
je
arpl
pop
bound
adc
movsb
pop
rclb
or
xor
movl
push
lret
push
rcrb
test
and
insl
hlt
sub
mov
add
mov
dec
push
fcoms
scas
push
sub
adc
sub
sahf
out
scas
loopne
inc
jne
dec
mov
das
pop
ljmp
bound
xor
out
incb
pop
xchg
add
jae
imulb
adc
int3
adc
bnd
int3
leave
dec
les
sbb
and
inc
pop
xor
out
cmp
addb
mov
xchg
push
mov
xor
inc
lods
xchg
mov
xor
mov
cltd
fucomi
xor
pop
fwait
and
aas
inc
pop
cmp
jnp
jge
cmpsb
adc
add
pop
xchg
ds
mov
sbb
jae
icebp
sbb
arpl
fadds
in
popf
dec
fldl
sub
nop
adc
fmull
subb
dec
sahf
hlt
and
js
loopne
ret
lods
mov
fstps
mov
sti
pop
adc
clc
scas
cli
clc
mov
xchg
scas
sbb
scas
orl
pop
in
mov
insb
pushf
lds
cmpsb
adc
testl
test
fwait
jmp
scas
shll
std
sub
es
ss
add
inc
outsl
rorb
xchg
aaa
rcrb
pop
mov
in
test
xchg
aam
mov
cmpsb
adc
cwtl
fsubs
out
xchg
xor
inc
loop
adc
dec
push
icebp
lock
imul
xchg
add
les
push
fwait
mov
daa
jae
into
mov
pop
cs
mov
in
ds
mov
pop
popf
cs
fcoml
outsb
insl
filds
loopne
inc
adc
inc
sbb
mov
movsb
sbb
push
lds
mov
bound
repnz
adc
cs
shll
mov
mov
imul
jnp
adcb
add
inc
out
repz
mov
outsl
inc
fadds
mov
cmovp
sbb
out
out
out
imul
cli
mov
mov
or
dec
imul
fsubl
fwait
push
lcall
aas
mov
push
fsubl
popf
pushf
push
push
pop
pop
inc
hlt
pop
fnstsw
imul
dec
xchg
sbb
push
aaa
add
mov
push
jle
out
hlt
or
cwtl
xchg
mov
fcoml
add
jbe
inc
adc
mov
inc
mov
xchg
xchg
loop
leave
fistps
addb
mov
add
lret
ja
bound
sub
adc
nop
gs
mov
inc
xor
or
test
gs
jo
out
xor
cmpsb
or
cli
jnp
xor
push
cmpsl
mov
shll
push
add
xchg
xchg
push
mov
in
pop
fs
sub
int3
cmpsb
jae
xor
sbbl
loopne
mov
dec
xor
xchg
test
mov
mov
andb
cmp
push
mov
and
or
cmc
sbb
loop
cld
cmc
mull
test
push
jno
lcall
push
inc
jl
in
mov
xchg
jb
shrl
and
out
je
dec
and
mov
mov
movl
fadds
push
arpl
stc
push
fiaddl
imul
shll
adc
mov
push
addr16
sub
in
subb
sbb
mov
xchg
stc
scas
mov
dec
inc
cmpsl
dec
insl
push
fdivrp
sbb
addl
mov
push
and
lret
nop
pop
inc
or
dec
stos
inc
cs
int3
ljmp
repnz
add
sbb
sbb
pop
or
xchg
call
aas
movsl
hlt
lcall
inc
xchg
rcrb
push
iret
cmp
inc
sub
test
dec
mov
sbbb
pop
cli
sar
bound
mov
or
mov
ss
inc
jbe
les
and
xchg
mov
fs
int
jbe
dec
cmp
dec
mov
loopne
push
xor
inc
rorb
mov
in
pop
mov
adc
and
jno
mov
leave
sbbl
or
test
sahf
add
or
ret
int
adc
in
fldl
adc
imul
inc
fmuls
mov
pop
ficoml
jne
test
pop
cmpsl
shll
or
mov
and
mov
inc
or
jg
pop
data16
popa
rcll
adc
enter
xchg
add
dec
inc
inc
adc
jp
mov
cmpsb
dec
mov
jbe
lret
push
and
mov
pop
push
add
xchg
mov
gs
addr16
push
out
mov
idivl
clc
push
mov
mov
xor
or
mov
inc
dec
push
cmp
pop
mov
cmc
popa
out
les
dec
loop
add
xor
xor
cltd
adc
add
mov
popf
cltd
shll
sbb
or
andb
push
xchg
inc
xchg
ret
xor
call
sub
out
inc
mov
lahf
icebp
or
test
and
pop
push
int3
xor
xchg
cmp
aam
pop
add
pop
lods
notb
sub
mov
or
mov
js
sub
push
leave
mov
push
xchg
scas
add
lock
jecxz
int
pushf
test
xchg
into
daa
lea
enter
push
dec
nop
jnp
adc
pop
std
and
sub
fdivl
xlat
imul
adc
mov
mov
int3
sub
icebp
pop
sbbl
inc
and
inc
fsubrl
ret
mov
stos
ds
adc
jle
jo
push
add
les
js
ljmp
movsb
imul
data16
cmp
sub
adc
mov
mov
mov
ret
ret
pop
jecxz
mov
inc
vmwrite
std
mov
dec
dec
jae
sbb
movl
jbe
in
iret
mov
jecxz
ja
dec
push
sbb
mov
cld
xor
push
push
nop
in
leave
mov
cli
push
mov
and
psubq
outsl
jp
jmp
rcrl
mul
xor
shrl
lock
xchg
bnd
stos
mov
mov
pop
fs
push
out
fwait
sbb
and
inc
mov
loope
sub
jmp
adc
inc
pop
xchg
push
out
stos
gs
jmp
mov
aad
pop
ss
shrl
and
sahf
sub
dec
push
push
pop
popa
mov
ljmp
mov
lods
mov
ljmp
sub
outsl
lahf
insb
jl
inc
xlat
loope
pop
clc
add
inc
dec
inc
xchg
clc
mov
cs
cs
mov
into
mov
sbb
xlat
dec
mov
rcl
ss
popf
mov
dec
fs
fld
fsts
sar
jmp
loop
push
scas
ljmp
insb
notl
hlt
mov
cmc
adc
loope
imul
lahf
jle
xchg
and
jno
cmp
adc
adc
mov
jp
in
fwait
dec
dec
mov
adcl
stos
pop
leave
lcall
and
xchg
mov
ficomps
andb
pop
sbb
jmp
in
jnp
pop
shlb
js
xor
xchg
gs
dec
lds
inc
fwait
test
ret
sub
and
xor
add
test
aad
iret
pop
addr16
push
mov
push
push
out
xchg
mov
and
into
mov
push
lods
push
adc
mov
rorl
jp
push
mov
and
test
das
aas
jle
inc
jmp
out
jne
cli
pop
leave
inc
push
lret
ljmp
mov
jmp
out
int3
adc
pop
lods
or
jne
iret
cmp
xor
in
cmc
pop
leave
insl
xchg
cmp
shll
int
dec
in
clc
mov
pop
aam
in
pop
cmc
sbb
das
scas
divl
sbb
xchg
sarl
adc
push
bound
pop
and
pop
mov
popa
mov
push
mov
pushf
jo
clc
repnz
mov
jnp
nop
int
mov
inc
pop
sub
insb
jecxz
adc
or
negb
cmpb
imul
dec
dec
or
test
out
call
and
xchg
and
cltd
mov
mov
scas
sub
push
insl
jo
outsb
jae
sbb
shr
push
fbstp
xor
push
or
les
push
fisttpll
push
jmp
ss
pop
push
orb
jmp
inc
lcall
in
cmp
push
sub
dec
ret
and
jnp
mov
fsub
out
push
enter
and
lods
out
cmp
insb
fsubl
pop
call
fsts
dec
cmp
jbe
inc
je
sbb
mov
xlat
dec
rcll
adc
mov
sbb
fwait
cwtl
mov
rcr
loop
cs
sub
mov
add
sar
icebp
js
mov
adc
and
sub
push
in
lea
orb
sub
fcmovnu
rcll
loopne
sub
nop
cmp
jnp
fwait
ret
rorb
sbb
jge
jmp
push
hlt
cmp
dec
fisttpl
xor
lret
addl
aad
adc
out
lea
cmp
in
lods
jb
lock
jbe
push
sbb
adc
lcall
dec
lahf
movsl
add
pop
inc
mov
mov
sahf
and
out
outsl
add
lret
jae
sub
sahf
ja
or
jmp
pop
xor
adc
mov
add
and
jae
jae
jge
jle
jb
movsb
or
int
xor
cmpsl
push
pop
mov
pop
mov
orb
scas
dec
into
sarl
xchg
inc
mov
inc
dec
out
insl
ds
lods
addr16
inc
add
das
cmpsb
mov
jl
push
push
rol
sbb
int
xor
out
push
int3
pusha
or
xor
mov
mov
mov
mov
or
or
cltd
fsubrl
push
daa
mov
xor
adc
xchg
dec
ja
push
inc
sub
pusha
push
add
dec
ret
popf
cwtl
das
addr16
xchg
test
add
repnz
les
inc
cmpsb
mov
adc
push
ror
ret
jbe
xchg
mov
jmp
cmp
adc
insb
mov
addl
lret
dec
dec
adc
lahf
cmpsl
jno
scas
push
std
mov
nop
xor
pop
cmp
jb
mov
sbb
or
sbb
out
icebp
sub
dec
jne
jge
jne
xorb
out
dec
ret
daa
ds
lcall
int3
xor
hlt
or
lods
test
sbb
incl
or
pushl
cltd
sbb
iret
in
das
and
mov
xchg
iret
jmp
push
call
mov
push
into
daa
inc
jecxz
fwait
and
xchg
adc
mov
stos
test
cmp
mov
mov
cli
mov
aaa
gs
mov
mov
dec
jnp
xorb
int3
mov
fidivrl
cli
popf
dec
lods
push
jmp
sub
push
pop
jne
pushf
lret
sub
sub
add
bnd
inc
pushf
jle
loopne
fldl
lcall
or
xchg
dec
das
adc
adc
test
push
dec
data16
adc
jno
je
inc
andb
loop
out
sbb
mov
lahf
mov
aam
repnz
call
std
test
hlt
int
data16
xchg
dec
and
stos
das
cli
sahf
mov
je
jl
ret
imul
push
adc
cmc
or
push
sahf
stos
mov
cmpsl
fmuls
jb
pop
and
gs
pop
and
pop
mov
ror
call
mov
cmp
loopne
xor
mov
push
repz
add
or
sti
loop
push
inc
addr16
jg
pop
or
or
adc
xchg
inc
adc
cmp
adc
outsb
mov
in
mov
or
sarb
xor
mov
inc
push
cli
stc
movsb
enter
negl
jnp
jbe
xor
and
pop
inc
jg
xchg
mov
mov
push
xor
jp
push
ljmp
rclb
outsb
dec
ss
jmp
loope
and
pop
dec
push
ds
fdivr
mov
cmpsb
jbe
loope
jge
ljmp
mov
add
loopne
out
sub
adc
push
adc
in
mov
dec
jmp
int3
xchg
inc
lret
test
or
sahf
mov
lea
pop
jo
jb
aaa
aad
pop
mov
fidivs
lcall
dec
jge
pop
sbb
mov
jbe
or
addr16
sbb
mov
popf
lock
divl
js
mov
rcrb
jb
lret
or
cmp
dec
int3
cmp
cmp
xchg
arpl
pop
adc
fcmovnbe
cmp
push
xchg
jns
adc
xchg
mov
stc
cmc
insl
gs
rcl
xor
testl
mov
sbb
xchg
add
addr16
pop
rcpps
cmp
xchg
mov
insb
aam
jle
add
and
xor
add
push
outsl
mov
and
and
adc
add
jg
out
rcrl
out
out
fstpt
aad
js
jl
imul
icebp
jo
adc
aad
ret
sbb
fsts
clc
adc
jno
lcall
mov
fucomip
pop
or
xchg
add
ss
scas
cmp
pop
dec
rol
leave
xchg
dec
push
aad
jno
mov
fadds
and
repz
sbb
or
jle
add
addr16
push
stos
out
repnz
fwait
in
push
cmp
jecxz
icebp
cwtl
mov
mov
daa
xchg
fidivrs
xor
shlb
and
aad
inc
sbb
add
mov
push
fdivs
xchg
push
xor
popf
ret
cltd
dec
pop
xchg
cld
push
pop
in
in
dec
popf
scas
sub
jae
loopne
rcrl
mov
mov
lcall
dec
pushf
pop
lods
scas
and
loope
mov
out
dec
movsl
push
and
rcrl
cwtl
pop
sbb
movl
pop
jns
mov
push
push
imul
mov
ror
xchg
lods
mov
xchg
or
adcl
mov
mov
xor
insl
test
inc
imulb
loopne
out
xchg
shrb
pop
fmuls
js
mov
xor
outsl
jl
and
jno
ret
xor
xchg
pop
inc
adc
imul
pop
clc
push
lea
mov
jmp
jae
mov
mov
mov
xchg
and
dec
mov
jne
jg
popf
dec
push
or
shrb
push
mov
push
mov
lret
cmpsl
xchg
jae
fidivl
insl
add
movsl
adc
inc
idiv
add
ss
dec
jl
loope
lods
icebp
enter
insb
loop
xchg
lock
mov
addr16
int
addr16
iret
push
and
cmp
fdivrl
pop
imul
ss
fadd
fwait
cwtl
adc
in
push
es
jnp
icebp
xor
push
lods
fists
out
pop
outsb
sub
inc
cs
movsl
mov
outsb
sub
cmpsl
pop
pusha
stos
mov
dec
and
mov
mov
es
inc
or
hlt
adcb
or
add
inc
enter
jb
lret
stc
inc
jge
lahf
adc
pop
xor
xor
or
mov
stc
out
xchg
xchg
inc
ficompl
lcall
push
cld
imul
sbb
xchg
outsl
xchg
arpl
jno
lods
test
inc
pop
fildll
fbstp
xchg
cld
insb
jo
ret
sbbb
add
xor
xor
sub
cmp
add
incb
adc
cmp
int3
push
sub
add
repnz
mov
mov
mov
je
or
pop
xlat
push
mov
pop
jne
xchg
dec
push
lods
call
stos
je
adc
js
std
pop
pop
lods
lret
add
pop
imul
aas
mov
xchg
and
mov
jp
mov
mov
repnz
inc
or
xor
push
lahf
testb
jns
or
mov
fwait
mov
decb
mov
hlt
or
adc
mov
dec
cmpsb
scas
sbb
jne
imul
lret
pop
cmp
mov
in
push
icebp
mov
clc
cmp
lret
adc
hlt
jne
std
xchg
xor
lods
jg
jp
mov
add
pop
jecxz
sub
insb
popa
sub
icebp
jns
pusha
push
aam
ficompl
mov
out
xor
daa
test
push
xor
or
lcall
dec
mov
or
xor
cltd
ds
outsb
adc
push
stc
jle
mov
cmpsb
adcl
push
adc
outsb
stc
iret
sub
xor
sub
pop
loopne
push
dec
inc
in
or
test
and
addb
mov
bound
dec
adc
jl
cs
cmp
stos
out
cmp
popl
ljmp
xchg
out
dec
mov
mov
lahf
test
sarb
inc
sbb
int3
cmp
int
xor
imul
xor
pop
sbb
test
cmp
int3
mov
pushf
fnsave
pcmpgtw
push
loopne
fdivrs
inc
pop
or
mov
jnp
stc
sbb
fildl
add
scas
pop
fnstsw
sub
push
xchg
sub
test
mov
aaa
ss
sahf
jp
mov
mov
xchg
and
call
stos
into
jns
cwtl
jmp
xchg
loopne
mov
lock
movsb
mov
imul
cs
mov
in
jne
dec
faddp
loope
push
out
adc
in
hlt
dec
xor
push
out
jmp
pusha
test
add
or
movhps
add
dec
repz
mov
or
hlt
ret
pop
cmp
pop
mov
cli
popf
scas
lret
add
ficoml
mov
inc
xchg
bound
inc
jnp
dec
jp
push
dec
inc
pop
jb
popa
out
push
jge
push
inc
repz
xlat
sub
adc
mov
or
cmp
add
mov
lods
inc
or
movl
push
ljmp
cmp
inc
addr16
loope
sti
dec
xor
inc
and
mov
stos
or
push
fnstenv
shrb
mov
mov
xchg
push
mov
jae
out
jmp
jbe
mov
sarb
sub
or
inc
inc
jnp
add
dec
loop
roll
xor
shll
pushf
sub
inc
push
xchg
sarl
fs
pop
push
mov
sub
sub
jae
xchg
jp
jmp
fmuls
int3
sbb
inc
cld
nop
lock
sub
sub
jbe
lahf
jnp
sbb
mov
pop
ret
jnp
mov
lret
inc
jno
aam
and
out
je
rolb
mov
sub
mov
punpckldq
and
push
jg
mov
mov
out
dec
mov
mov
aaa
adc
sbb
orb
ss
out
jne
xor
gs
out
aam
jle
push
mov
mov
push
mov
push
incb
inc
pop
imul
aas
movsb
sbb
sbb
and
xor
addr16
aaa
xor
bound
and
call
mov
pushf
js
jle
call
xor
sbb
cmpsb
loope
lods
xchg
call
xor
ss
cmpsl
mov
push
mov
int
jle
xor
lds
or
pop
in
outsb
mov
bound
mov
outsl
mov
sbbb
ja
mov
into
test
popa
fisttps
das
mov
sub
fs
push
mov
inc
cmp
call
inc
add
or
outsb
xchg
xchg
xlat
jle
xchg
mov
mov
testl
out
inc
mov
push
lds
xor
lcall
jnp
xchg
aad
mov
ljmp
sbb
stos
aam
xchg
daa
out
int3
mov
sbb
mov
mov
sub
mov
scas
roll
imul
sbb
ja
sbb
or
cmp
insb
mov
add
xchg
xor
lea
jbe
add
or
mov
andl
mov
stos
pop
test
fdivs
nop
ljmp
or
xchg
pop
incb
and
je
inc
adc
sti
pop
into
jae
pop
add
inc
dec
inc
sbb
int3
pusha
cmp
jmp
and
es
dec
sbb
mov
and
inc
push
int
aas
fstpl
shlb
jecxz
fdiv
mov
paddb
fwait
and
pop
xchg
sub
rcrb
jno,pt
push
adc
mov
mov
add
or
out
cmpsl
call
xor
xor
adc
push
add
aaa
dec
incb
lods
inc
mov
jg
sarl
clc
jp
out
loopne
adc
popa
cmc
scas
inc
test
out
mov
test
push
in
sub
pop
mov
jge
pop
int
add
neg
in
cs
pop
daa
hlt
out
out
dec
scas
push
cmpb
rcr
mov
jno
jle
cld
jecxz
popa
fdivr
or
push
loope
rolb
jl
ficoms
out
jecxz
mov
mov
sub
xchg
leave
mov
or
in
push
pop
das
repnz
mov
aam
mov
shll
xor
xrelease
mov
add
or
jl
mov
std
adc
jge
test
add
pop
jmp
push
adc
push
rcrl
mov
sarl
enter
stos
daa
mov
ss
mov
subl
lret
cmp
aad
out
push
mov
cmovne
xor
iret
jns
pop
mov
not
mov
outsl
out
jns
mov
xchg
xlat
sbb
out
add
push
mov
jnp
cmp
ljmp
sbb
shlb
insl
add
and
mov
cmp
pop
pop
push
fnstenv
jge
push
test
xlat
mov
popa
xchg
pop
jp
jg
and
cli
mov
loop
mov
inc
loopne
push
add
pusha
inc
test
push
les
pop
or
sahf
mov
out
idivb
jp
mov
push
pop
test
cltd
lods
outsb
sub
ret
push
cs
pusha
mov
lock
gs
call
mov
in
imul
mov
rclb
pop
rcr
addb
in
pop
fcomip
call
dec
xchg
jae
sahf
bound
iret
loopne
lcall
fwait
mov
mov
in
dec
stos
mov
cmp
xchg
cld
aaa
xchg
orl
add
cmp
fs
dec
mov
xchg
shlb
dec
mov
dec
es
hlt
into
adc
mov
sub
imul
dec
jno
fidivrl
stc
mov
jne
pop
xor
mov
sbb
data16
cmp
pop
mov
repnz
and
out
pop
sti
add
mov
ljmp
rcrb
fcoml
xor
push
mov
dec
lds
adc
rclb
cltd
call
fstpt
xchg
cmp
push
dec
inc
pop
je
pop
jle
into
ljmp
and
pop
xor
mov
jae
es
sti
jecxz
mov
or
pop
enter
dec
daa
push
js
sub
inc
js
cwtl
cmp
add
rclb
jp
fnsave
mov
icebp
jecxz
nop
out
es
mov
shr
ret
jb
add
inc
push
testl
movsb
in
mov
xor
push
movsb
imul
push
bound
jbe
scas
call
add
push
inc
inc
and
sbb
push
push
ret
test
mov
xchg
fninit
sub
push
jecxz
cmp
push
xlat
jecxz
arpl
or
in
pop
pop
decb
or
sub
int
add
sbb
outsb
adc
pop
popf
xchg
add
pop
and
int3
xchg
push
cmpsl
sub
dec
dec
icebp
outsl
add
fcmovnu
addb
push
mov
stos
sub
pop
xor
sahf
inc
and
mov
in
inc
and
and
int3
cld
dec
push
pop
addr16
xchg
push
inc
sub
and
and
cld
sbb
dec
sub
cwtl
cli
xor
xor
ss
ljmp
adc
cltd
and
xchg
push
sbb
push
cmp
mov
sbb
ds
lods
and
cmpsl
pop
push
insb
stc
pop
shll
daa
stos
arpl
int
xchg
test
ror
sub
addl
aaa
jns
out
inc
pop
sbb
xchg
icebp
loop
es
dec
sahf
cld
out
lcall
out
mov
add
movsl
add
push
jge
addr16
jge
aas
ret
add
xor
pushf
and
dec
stc
jecxz
add
les
shr
mul
xor
mov
inc
cmc
popa
clc
aaa
jmp
imull
ss
xor
add
inc
je
and
xor
xchg
jmp
outsl
cmp
push
loop
cmc
xchg
icebp
jge
ss
pusha
mov
xorl
mov
pusha
es
cld
mov
and
xchg
xor
sub
cmp
xchg
sbb
push
jmp
aaa
cmp
pop
negb
addr16
in
sub
jge
in
and
and
add
in
add
jmp
xchg
in
pop
mov
xchg
mov
iret
gs
and
movsb
imul
pop
pop
inc
vmulpd
adc
jecxz
sbb
adc
sbb
adc
pop
imul
cmp
daa
dec
cmp
sbb
cmp
int3
je
stos
arpl
xchg
cltd
cld
fisubs
loopne
pop
movb
pop
jle
rclb
repz
lea
in
fistpll
cmc
daa
sub
mov
repz
jo
lods
xchg
push
scas
hlt
fildll
mov
xchg
sarl
outsl
xchg
popf
cmp
pop
clc
cmp
hlt
or
lahf
inc
gs
mov
sub
dec
jl
and
and
ds
mov
inc
inc
xchg
outsl
fldl
out
inc
cmp
aaa
pop
ja
dec
test
aad
imul
sub
or
cmpb
stc
xchg
insb
mov
adc
jmp
jmp
leave
jmp
push
rcrl
pop
inc
insb
jg
push
add
mov
jnp
lahf
lods
add
test
jp
jg
into
add
xlat
mov
xor
imul
mov
aaa
in
jmp
lds
push
cs
jbe
in
lret
roll
fdivl
sub
cwtl
xor
lock
shrl
mov
pop
push
aad
lahf
xlat
mov
xor
cmp
repz
je
cmp
mov
push
arpl
addr16
nop
bound
mov
mov
sub
add
cwtl
sbb
sti
lods
int
sub
xlat
jp
leave
rolb
adc
fisubrs
adc
jnp
stos
arpl
mov
xor
jnp
adc
movsl
pusha
dec
mov
into
test
add
out
pop
sub
aaa
sbb
pop
into
nop
adc
lds
sbbb
js
xor
fisubrs
pushf
and
jl
add
sbb
lahf
or
push
pushf
sub
fstpt
pop
movsb
xchg
lea
stos
lret
xor
movsl
roll
pop
pop
es
shlb
fwait
cmp
std
xchg
das
lret
sbb
divb
jns
inc
mov
mov
sub
rorl
mov
mov
aam
sub
insb
stc
dec
frstor
sub
xchg
xchg
popf
ret
sbb
xchg
andl
movsb
in
sahf
ret
or
mov
loopne
ja
ljmp
data16
inc
dec
hlt
mov
jmp
aam
adc
aam
and
pusha
add
push
inc
adc
mov
pop
sahf
jne
pop
frstor
rcl
pop
cmpl
cmp
aad
dec
cmp
add
push
andl
or
daa
xor
sbb
push
adc
mov
xchg
addr16
cltd
mov
or
inc
sub
mov
or
ljmp
adc
dec
ja
mov
adc
push
or
sub
cmp
xchg
cmpsb
xchg
adc
neg
out
in
enter
mov
lods
add
rcll
pop
fdiv
fcomi
icebp
sbb
sbb
and
ret
test
inc
or
or
and
sub
add
roll
sbb
sbb
loopne
mov
mov
adc
jno
shll
hlt
lods
cmpb
stc
fwait
sbb
mov
push
mov
lret
push
inc
xor
scas
pop
outsb
push
mov
sbb
xor
je
cmp
lea
xchg
loopne
pop
push
dec
es
and
inc
mov
repnz
mov
in
adc
mov
lret
ds
in
mov
mov
popf
inc
and
push
mov
adc
and
pop
cld
iret
daa
add
push
add
mov
mov
push
fbld
cli
inc
test
push
call
xor
mov
cltd
scas
mov
jo
lahf
int3
add
jns
xchg
out
mov
and
or
loopne
and
inc
or
imul
mov
sub
fisubrl
sbb
mov
xor
sbb
push
ret
mov
jns
ljmp
mov
adc
icebp
jnp
mov
mov
xor
or
mov
push
jp
out
xchg
daa
sub
xchg
enter
or
andb
sti
loopne
out
xlat
lret
out
sbb
sub
inc
ja
add
fistps
dec
push
cmp
aas
inc
in
mov
sbb
scas
fnsave
or
dec
lret
lahf
push
rcl
xchg
repz
shrb
test
mov
aas
test
adc
jl
mov
sub
mov
leave
shrb
pop
popf
ffree
push
repnz
mov
cmpsl
sbb
sub
cmp
popf
ss
rolb
or
fidivl
ret
mov
jl
bound
movl
in
cmp
es
or
push
adc
pop
nop
mov
pop
adc
or
or
repnz
je
rorl
out
xchg
gs
or
insl
jnp
push
jge
sbb
fidivl
xchg
or
jle,pt
jmp
push
iret
push
mull
xor
imul
mov
xchg
jnp
mov
les
inc
pop
mov
jns
dec
mov
icebp
fldt
imul
mov
cmp
imul
xorb
push
flds
in
mov
insb
adc
xchg
lods
pop
jmp
outsb
push
mov
sbb
and
adc
pop
outsl
cmpsl
xchg
inc
imul
sbb
push
mov
sbb
cmpsl
lret
push
push
mov
jp
cli
std
dec
fidivrl
into
data16
push
stos
push
jle
pushl
jns
inc
mov
xchg
inc
lcall
pop
mov
iret
dec
push
fisttpl
mov
sub
pop
inc
mov
xlat
add
mov
lock
fisubl
stos
xchg
inc
xchg
mov
bound
mov
iret
sti
xchg
jp
and
test
in
xchg
test
push
mov
or
in
in
movsb
test
inc
stc
pop
cmp
push
push
icebp
inc
mov
jno
scas
outsl
xchg
test
cmpsb
call
fisttpl
insl
sub
insb
mov
fidivl
aam
movsb
xchg
out
push
movsb
movsb
xor
xchg
fs
lea
shl
les
std
lret
mov
mov
fwait
rol
repnz
flds
arpl
and
fwait
cli
cwtl
cmp
jnp
lds
jnp
sarb
frstor
stos
push
mov
mov
lock
cli
push
mov
and
mov
shll
rcrb
push
lock
mov
cmc
inc
fisttpll
adc
imul
scas
push
ljmp
hlt
push
sbb
in
call
or
pop
adc
jns
jns
rcr
and
cld
jl
test
sbb
cmp
jae
push
jb
cli
into
or
rolb
jno
bsr
and
je
nop
clc
lods
sub
lds
imul
jo
fbld
rcrb
dec
ja
push
insl
jo
stc
dec
and
shrb
ficoms
mov
pop
push
stos
mov
fdivl
sbb
insb
out
gs
clc
adc
popf
fwait
push
mov
mov
inc
stos
pop
gs
sbb
pop
into
add
jg
shlb
cmp
jmp
xchg
xchg
cmp
pop
mov
dec
adc
clc
xchg
jl
sub
add
push
hlt
mov
into
dec
paddq
int3
mov
fwait
mov
in
xor
clc
lahf
out
cmp
push
and
push
fstpl
mov
jae
cmp
cwtl
sar
xor
pop
lahf
fwait
pusha
xor
pop
pop
roll
cwtl
cmp
pop
adc
int3
push
xor
insl
int3
push
push
cmp
sub
push
push
pop
mov
add
das
push
incl
outsl
adc
repnz
jb
enter
pop
and
jg
dec
xchg
in
test
lods
and
xchg
mov
cmpsl
dec
icebp
rclb
sahf
imul
dec
pushf
jns
and
test
movsl
add
push
dec
fmul
into
sbb
test
and
lcall
lahf
mov
in
scas
jb
xlat
mov
cmp
daa
sub
loop
aam
cmp
stos
repz
stc
out
mov
fcmove
pop
dec
mov
rclb
popf
mov
and
push
je
lods
lea
xor
mov
addl
ja
mov
mov
int
pushf
loope
mov
and
or
cmp
in
repz
jmp
sti
jle,pt
orl
jnp
enter
mov
inc
stos
or
jle
test
mov
adc
mov
jge
mov
das
in
jge
fstpt
pop
mov
orb
xchg
not
dec
add
lret
push
push
sbb
bound
je
roll
mov
pop
xor
sarl
cmpsb
sahf
jae
cli
out
sti
jmp
xchg
dec
dec
cltd
sti
mov
lret
mov
out
add
or
adc
add
add
dec
cmp
outsl
dec
inc
and
inc
mov
mov
stc
inc
pop
inc
cwtl
outsl
add
nop
out
cltd
jo
movsl
orb
lock
fbld
adc
iret
add
cmpsl
xor
mov
lcall
push
inc
cmp
dec
add
aam
mov
add
cltd
outsb
or
hlt
movl
jecxz
popf
pop
jl
mov
lea
enter
push
adc
or
rorl
mov
or
or
ds
cmpsl
out
mul
jbe
cmp
scas
inc
mov
dec
pop
js
fidivl
mov
data16
aad
enter
test
adcl
lea
out
dec
shrl
jle
xor
incl
inc
lret
pop
flds
push
sti
jl
inc
cwtl
rclb
rcll
outsb
xor
je
fwait
cmp
mov
ficoms
push
insl
sub
or
xchg
xor
aas
call
lret
jp
push
out
idivb
in
sbb
mov
or
pusha
xlat
loop
or
mov
sub
arpl
inc
outsb
add
push
cmc
pushf
fiadds
mov
pop
add
and
xchg
inc
insl
jmp
shll
lea
adc
hlt
dec
shlb
iret
das
sbb
push
fnstsw
lds
cltd
push
push
fisubrl
das
cmpl
pop
popl
mov
jb
clc
loope
jge
xor
scas
nop
inc
idivl
push
ds
loop
sti
lcall
dec
xchg
cld
icebp
jle
xchg
movsb
xchg
outsb
mov
jae
test
cmpsb
pusha
push
es
mov
es
mov
adc
xchg
xchg
adc
cs
ljmp
aam
lahf
aam
cmp
xchg
mov
hlt
dec
dec
int
dec
je
in
lea
out
das
out
lods
mov
imul
sbb
mov
aas
jb
bound
out
decb
sbb
insl
dec
inc
into
shlb
out
pop
or
fiadds
xchg
dec
popf
or
dec
scas
ficompl
push
mov
scas
std
adc
or
xchg
clc
repz
pop
lcall
outsb
dec
in
jmp
xlat
push
dec
fidivrl
lret
jns
inc
test
les
out
ja
ljmp
sub
xchg
push
dec
and
je
mov
push
das
movsl
enter
jbe
pop
inc
push
movsb
sbb
das
orb
jns
mov
jns
fsubrs
incb
pop
inc
mov
out
add
sbb
dec
mov
ret
data16
push
jns
aas
push
mov
mov
fstps
fs
pop
push
jl
decb
call
adc
popa
fsubrl
les
cmp
or
in
adc
pop
mov
pop
mov
jl
imul
scas
leave
iret
imul
stc
xchg
loopne
ja
sbbb
repz
push
mov
das
test
xor
test
in
inc
or
pushf
subl
inc
adc
dec
cli
or
or
repnz
out
popa
mov
scas
xlat
stos
jg
cmp
dec
stc
push
fnstsw
pop
in
sub
mov
or
jns,pt
loope
xor
dec
sub
mov
subb
fldcw
cmp
loope
hlt
sarl
iret
xor
iret
jg
mov
sbb
clc
mov
aam
add
inc
aam
xor
mov
xor
and
mov
add
aaa
sbb
arpl
shll
scas
rorb
cmp
dec
fs
jg
ds
in
dec
ret
sub
shl
les
fisubs
ljmp
pop
lods
addr16
sub
push
pop
pop
mov
out
arpl
lds
add
dec
mov
icebp
fisttpll
jl
push
or
jmp
fdivr
loopne
mov
jmp
push
jno
cltd
xchg
mov
out
push
lods
iret
sti
icebp
jno
ja
int
rcrl
sbb
jb
test
fisttpll
scas
jae
call
mov
adc
adc
imul
adc
adc
ss
repz
mov
xlat
outsb
xchg
mov
repnz
sysenter
cmpsb
iret
mov
test
push
mov
sbb
shl
hlt
ret
cmp
fdivs
daa
movsl
lods
pop
inc
add
add
adc
mov
int
sbb
lds
add
jge
jp
inc
cmpsl
les
xchg
cmp
jmp
call
icebp
sbb
xlat
add
inc
rcrl
test
test
dec
sbb
cmp
in
pop
jne
pushf
scas
sbb
ficomps
cmpsb
aas
pop
jge
bound
mov
outsb
in
dec
push
test
sbb
mov
cmpsb
pop
int3
nop
subl
or
xchg
scas
call
scas
pop
xor
inc
sbb
mov
stos
or
mov
mov
dec
addl
hlt
xchg
bnd
or
mov
mov
push
mov
lcall
sti
inc
inc
adc
testb
outsl
fldl2t
aam
mov
dec
mov
stos
mov
pushf
inc
lods
pop
push
std
ret
std
mov
jno
adc
xor
lcall
mov
dec
mov
add
mov
fisubrs
dec
fiadds
clc
xor
pop
daa
mov
xor
xor
dec
sub
xchg
shr
pop
das
mov
rcrl
pop
notb
sahf
insl
lods
fs
mov
sub
sbb
inc
pop
stc
xchg
stc
jmp
mov
jae
jge
decb
repz
xor
daa
orl
cli
jae
push
mov
cli
xchg
call
xchg
inc
xor
dec
adc
cltd
pop
sub
inc
add
cwtl
addl
pop
or
rolb
pop
jmp
lret
push
lock
jp
inc
adc
push
mov
push
xor
xchg
pop
inc
cmp
das
mov
xchg
fidivrl
test
loope
jb
stos
aaa
inc
jp
sbb
jnp
hlt
xchg
adc
aam
mov
xchg
pop
push
xchg
into
test
arpl
fcoml
and
pushf
jnp
cwtl
mov
in
insb
adc
les
and
cs
ss
lods
inc
fcoms
stos
bound
push
imul
jmp
xchg
xchg
add
push
daa
shll
imul
xor
mov
mov
jne
ja,pn
mov
call
stos
xchg
sub
scas
adc
daa
rcr
sub
dec
push
addr16
jbe
pop
add
lds
mov
ja
lods
sub
imul
imul
gs
xchg
or
fnstenv
pusha
int
sbb
and
sub
add
or
lcall
hlt
sarl
sub
sarl
stos
outsb
jne
insb
in
push
stc
roll
mov
pop
inc
inc
out
sbb
movsl
push
add
pop
fists
in
xor
push
adc
rcrl
adc
testl
sbb
add
lahf
clc
jmp
sub
mov
das
fwait
jno
xchg
push
aad
cmc
leave
push
cltd
cmp
pusha
push
dec
leave
mov
mov
xchg
stos
ss
fisttps
sbbl
sahf
mov
jmp
jge
cmp
mov
xlat
pop
sbb
in
xchg
outsb
pop
ret
sub
int
lods
cmp
jp
lret
dec
pushf
out
stc
shr
lret
push
mov
cmp
test
ds
scas
adc
sbb
sahf
inc
xchg
cmp
push
aas
xchg
lods
in
or
mov
inc
ret
xor
icebp
mov
xchg
cmp
mov
js
dec
fldenv
push
jl
loopne
daa
es
pop
add
test
or
add
or
rclb
stos
adc
scas
mov
mov
imulb
push
cld
xchg
pop
jecxz
add
andb
cwtl
sbb
js
cltd
dec
cmp
xchg
insb
frstor
dec
adc
push
decl
jg
cmp
sbb
bound
and
sahf
pop
sub
inc
inc
mov
mov
jne
and
mov
or
dec
cmp
mov
fildll
inc
sti
aas
in
mov
cmpsl
pop
cltd
cmp
sbb
cld
xor
test
decl
mov
mov
int3
push
mov
xor
sub
xchg
push
xchg
jmp
js
dec
stos
lcall
movsb
ss
pop
jb
or
andl
es
xor
push
loopne
in
push
fdivs
inc
ret
dec
mov
jns
add
andb
fsubrl
jbe
ret
or
add
lods
mov
dec
xchg
add
pop
lahf
out
or
mov
pop
xlat
andl
das
xchg
addr16
or
and
lret
test
cmc
and
cmp
dec
and
movsl
push
xor
xor
fdivrs
push
xor
movsl
adc
lcall
push
jp
xor
pop
xchg
add
lret
loope
test
mov
xchg
add
push
sbb
aad
ljmp
sbb
jo
cmp
call
in
nop
loope
stos
push
jmp
gs
cmpsl
sbb
add
jbe
xchg
mov
or
xlat
lea
pop
inc
mov
xchg
cmp
jle
jg
mov
outsb
ret
js
stos
sub
pop
ss
shrb
sbb
push
scas
in
push
push
aad
mov
jae
ret
aaa
pop
mov
adcb
mov
outsl
test
lock
jge
lods
inc
sub
das
inc
sbb
xchg
inc
jne
mov
inc
daa
jg
psrad
cmp
cli
ljmp
push
loopne
test
cmp
and
notl
cltd
mov
lcall
popf
xor
jae
stc
lret
sarl
repnz
mov
callw
incb
jb
iret
push
or
shrl
loopne
mov
mov
mov
push
xchg
dec
add
adc
mov
fdivp
negb
cwtl
popf
or
sub
push
cmpl
inc
jne
lret
jae
push
push
fs
push
adc
fistpl
and
xlat
xchg
gs
pop
add
pop
into
lahf
xchg
pop
push
jbe
jne
push
fadd
stc
jae
std
xchg
aas
add
repnz
insl
mov
add
sarl
aam
cmp
mov
xchg
jge
arpl
ss
shld
adc
cwtl
fwait
push
loope
sbb
mov
mov
xlat
bound
sti
fcmovnbe
pusha
pop
mov
push
cmp
add
mov
and
sbb
int
out
mov
mov
out
xor
dec
mov
sbb
lods
int
pop
mov
mov
cmpsb
scas
lahf
insb
jbe
cmp
test
push
fisubl
or
lret
ss
imul
or
mov
xor
cmp
sbb
or
addb
push
fs
enter
pop
mov
cli
xchg
jae
xor
jmp
subb
inc
xchg
movsb
ret
sbb
xchg
imul
push
out
pop
rorb
aam
jmp
add
sub
pop
push
js
mov
xor
add
mov
rorb
mov
in
repnz
jge
nop
lahf
sbbb
and
cld
cmp
or
movups
or
clc
cmp
in
dec
sub
push
lock
sti
add
loope
int
sub
int
popa
and
rorb
and
or
mov
jmp
icebp
or
sub
out
sub
mov
lods
sub
pop
out
in
jae
ret
push
or
inc
xor
movsb
adc
gs
xchg
ror
jae
cmc
xchg
xchg
inc
mov
cwtl
mov
pop
clc
and
cmp
imul
inc
loope
popl
imul
inc
mov
inc
mov
adc
fbld
pushf
mov
leave
int
mov
test
repnz
mov
es
jns
jmp
dec
sub
push
clc
sub
jnp
pop
xchg
bound
xchg
out
jl
lds
ljmp
mov
test
dec
mov
add
jge
ficoml
cmpsb
mov
fmuls
dec
in
lods
xchg
js
jno
lea
inc
sub
aas
loopne
sbb
xlat
push
fistpl
repz
sahf
stos
dec
mov
mov
and
mov
mul
movsb
mov
popf
adc
push
push
das
push
loop
call
stos
mov
fistpll
jecxz
or
mov
xchg
inc
cmpsb
loop
ret
stc
ret
dec
push
mov
jne
push
mov
adc
and
jl
in
cli
rolb
popf
sbb
stos
jns
push
je
sub
in
mov
xchg
ja
js
xchg
out
lods
pop
scas
repz
test
ret
sub
lods
sub
or
xchg
cmp
dec
lds
enter
dec
sub
mov
movl
mov
jg
mov
jae
push
push
adc
mov
sub
dec
icebp
inc
test
sti
cmp
in
mov
fdiv
cmpsb
jp
les
and
mov
lds
leave
lahf
sarl
scas
cli
test
mov
pusha
out
or
ret
in
mov
mov
add
adc
inc
cwtl
and
inc
adc
fnstsw
adc
int
cmp
xor
sahf
mov
data16
sti
mov
das
aad
xchg
int3
jbe
xor
push
pop
imul
es
pop
push
cwtl
inc
ret
cmovns
lcall
decl
int
jne
mov
inc
cltd
sarl
adc
jo
dec
push
ss
cmp
xor
out
push
mov
add
or
xchg
adc
test
cld
js
cld
and
and
xor
les
dec
jp
and
inc
push
jno
inc
ljmp
ja
jmp
jp
les
in
lcall
adc
xor
les
xor
enter
in
mov
jne
inc
jns
out
std
inc
xor
sbb
mov
dec
mov
cs
mov
mov
xchg
push
pop
jg
in
sub
push
push
sub
out
repnz
popa
xchg
icebp
push
das
add
push
leave
lret
pop
jg
mov
sub
js
dec
sbb
mov
dec
imul
jmp
in
arpl
out
cld
lock
jmp
xchg
incb
mov
mov
mov
fstl
push
add
inc
mov
arpl
inc
stos
lahf
or
cli
inc
sar
je
push
xor
inc
dec
add
scas
or
xchg
dec
dec
mov
xchg
or
leave
cmpsl
pop
std
fimull
vaddsd
push
testl
add
inc
push
xorb
js
lahf
scas
jg
ror
xor
outsb
aam
cmp
push
lcall
sarl
imul
cmpsb
mov
into
repz
imul
repz
mov
mov
bswap
adc
lea
mov
mov
sti
rorl
add
add
sub
andb
or
jne
scas
adc
mov
frstor
pop
mov
ss
push
adc
dec
clc
adc
jns
push
rolb
cmp
push
mov
inc
jg
cmp
popl
cmp
inc
int
enter
pop
cld
ss
call
jnp
inc
es
out
loope
mov
lock
push
pop
test
push
nop
pop
stos
cmc
mov
int
add
into
ret
pushf
clc
push
mov
std
inc
mov
xlat
scas
or
fbstp
push
add
jl
cmp
es
push
xlat
aad
jg
inc
or
fistpl
or
gs
xchg
cmc
add
dec
insl
inc
lret
enter
jmp
pusha
fsubr
testb
xchg
or
ja
sbb
mov
push
clc
jbe
lods
je
cmp
out
adc
nop
nop
jae
cmp
mov
test
and
ret
int3
xchg
xchg
ja
mov
dec
push
cs
or
call
xchg
or
fcomps
xchg
pusha
push
aam
pop
aas
cltd
or
scas
jb
pop
mov
adc
jle
jns
mov
xchg
inc
movb
jbe
insb
ds
ficoms
fldt
mov
es
cli
sub
or
jo
jae
sbb
cmpb
iret
push
mov
push
aam
xchg
push
mov
sbb
sbb
dec
outsb
loopne
jecxz
insb
in
mov
xchg
sbb
ds
push
outsb
adc
call
push
fisubl
inc
mov
test
adc
xor
pop
jp
push
jno
push
mov
and
mov
out
scas
faddl
mov
stc
fcmovne
adc
imul
bsr
lea
jl
in
jo
inc
cltd
pop
xor
inc
mov
mov
fisttps
stc
jmp
jmp
insb
fsubl
pop
imul
mov
mov
mov
mov
popa
lret
add
xchg
adc
add
xchg
push
gs
bound
sbb
cwtl
dec
cmp
adc
setle
or
or
inc
jb
popf
dec
push
aaa
clc
push
outsl
shrl
push
mov
dec
cmpsl
jg
pop
sti
xchg
adc
push
scas
outsl
je
sbb
iret
xchg
in
jne
in
pop
sbb
adc
jp
xor
aas
dec
jmp
mov
lods
out
fisttpl
add
sbb
xor
rcl
cs
pop
cmc
movsbl
jecxz
sti
lea
mov
repnz
xchg
dec
lds
push
mov
pop
xchg
jb
nop
cmc
jnp
notl
stos
testl
in
cld
add
push
stc
aaa
stos
fwait
jno
js
jb
popf
mov
ror
push
sbb
inc
jl
aad
dec
and
sahf
mov
jb
pop
rcrl
stos
mov
push
pusha
xchg
sub
cmp
in
out
inc
xor
jmp
xchg
in
or
insl
jl
in
stc
js
inc
cmc
movsb
sbb
nop
inc
mov
xorl
sub
mov
jae
mov
popf
push
pop
or
inc
and
cmpl
xchg
or
and
cmp
sbb
roll
add
sbb
xor
mov
mov
or
inc
jmp
iret
jle
je
mov
pop
xchg
mov
mov
movsb
mov
in
dec
cmp
jmp
adc
add
jo
fisttps
in
mov
adc
ljmp
jne
decl
mov
loope
shl
andb
sbb
iret
pop
mov
inc
jno
jo
in
push
sub
lret
sub
xorl
stc
push
test
dec
or
js
fwait
inc
xchg
sar
orps
xor
xchg
lret
mov
mov
aas
outsl
loopne
ret
lds
inc
inc
pop
xor
lret
loope
add
pop
inc
sbb
push
pop
fwait
push
aas
sub
adc
jnp
cmp
jno
iret
fs
popf
ret
sub
adc
mov
fildl
cmp
dec
xor
jecxz
mov
into
inc
cmp
leave
addl
sbb
jle
or
fstpl
lret
js
or
adc
addr16
adcb
lds
jle
push
mov
mov
push
test
and
stc
scas
xor
mov
fnstsw
or
rorb
sbb
cld
xor
test
dec
jo
dec
sbb
sub
adc
pushf
pusha
xchg
cs
ret
xor
add
insb
movb
xor
xchg
mov
adc
movb
push
add
mov
fnstsw
pop
sbb
movsb
or
adc
enter
fmuls
adc
cltd
inc
stc
mov
ret
push
popf
aaa
jp
sbb
in
pop
jmp
ja
mov
divb
mov
test
cmp
ja
xchg
lahf
ljmp
mov
jne
mov
mov
mov
into
mov
dec
push
ja
rol
pop
rcrb
in
data16
pop
ds
dec
cmpb
test
inc
xchg
aas
in
lds
jmp
lcall
adc
push
push
adc
inc
inc
aas
out
mov
out
dec
cmp
pusha
pushf
and
dec
popa
sbb
or
in
arpl
pusha
add
sub
xchg
bound
mov
push
popf
fadds
in
adc
sbb
and
stc
jb
icebp
inc
inc
repz
or
add
adcb
scas
pop
cmpsl
sub
popa
cmp
sarl
aas
xchg
shlb
dec
mov
dec
mov
jl
je
push
les
orl
pop
sarl
push
inc
inc
adc
out
inc
fldcw
sti
xchg
std
push
add
or
mov
jb
mov
mov
test
sbb
mov
test
mov
inc
or
inc
incl
adc
lret
fwait
inc
adc
scas
jne
dec
outsb
mov
dec
xlat
dec
cmpsl
and
push
jg
dec
mov
lock
xor
push
push
sub
lods
les
add
cmpsb
andb
enter
sti
or
sbb
jo
mov
mov
sub
clc
stc
xor
sub
lods
mov
mov
cltd
stos
shrl
mov
lds
sub
mov
shlb
cmp
hlt
daa
iret
imul
add
and
push
mov
cld
aaa
sub
xor
jmp
pop
sahf
jmp
rolb
xchg
pop
or
and
sub
mov
adc
cld
mov
pop
cmp
shll
add
xchg
inc
leave
xchg
and
cwtl
xor
std
scas
sbb
push
xor
cmp
shrl
xor
mov
mov
inc
pop
mov
adc
flds
insl
push
jecxz
bound
insb
cmp
sahf
jmp
out
subb
jmp
cmp
std
dec
je
mov
mov
inc
ret
xchg
and
jbe,pt
ret
or
and
mov
mov
andl
dec
add
sbb
jb
leave
push
ss
gs
xchg
addr16
mov
pop
lock
stos
lods
add
es
push
push
mov
and
sti
ss
cld
and
pop
lock
mov
das
rol
and
repz
xor
push
aaa
cmc
inc
shrl
dec
les
shl
scas
test
sahf
bound
mov
adc
xor
das
test
call
ret
mov
xor
cld
cmpsl
sbb
inc
orb
cmpsl
push
jp
sub
divl
loop
add
lds
xor
lahf
jmp
mov
xchg
loopne
cmp
int
mov
xchg
ficoms
fdivrs
jle
xchg
lret
sbb
jns
xchg
out
loope
int3
xor
add
insb
xchg
mov
mov
ret
loope
cmp
xchg
lret
or
or
shrl
xchg
mov
inc
or
outsl
jp
repz
inc
mov
fdivrs
sbb
dec
cld
and
or
push
push
jle
ret
sbb
jb
rolb
repnz
mov
es
and
loope
ljmp
jg
or
xor
int3
push
repz
jnp
stc
inc
in
leave
inc
xor
or
mov
jge
fstl
inc
idivb
inc
jmp
jmp
mov
nop
pop
out
lods
in
fldcw
out
iret
ret
cmp
mov
ja
sub
stos
les
inc
aas
mov
inc
popf
rcrl
decb
in
scas
cltd
jb
addl
jns
xchg
jnp
or
stc
sbb
popa
mov
or
mov
shr
sub
int3
std
push
in
inc
loopne
int3
lods
lds
jae
xchg
outsl
fistpl
fldl
jo
cs
lods
xlat
daa
test
mov
stc
and
fimull
mov
sbb
mov
add
mov
scas
xor
pop
shlb
mov
fucom
imul
pop
movsb
push
xchg
push
lret
jo
nop
mov
pop
and
xchg
mov
stos
add
bound
mov
sub
cltd
pop
je
cwtl
ja
dec
aad
mov
rcll
inc
pop
jmp
into
xchg
jo
jbe
and
xlat
test
mov
mov
push
mov
imul
lcall
or
sub
cli
or
mov
es
es
cmpsb
rcrb
sbb
or
repz
std
fwait
or
sti
push
adc
dec
push
pop
loopne
mull
and
jle
je
sarl
push
fists
mov
jg
pop
mov
std
orl
jg
xchg
sub
mov
dec
push
push
jmp
dec
or
jbe
push
scas
clc
cmp
adcb
daa
xor
notb
loop
cmpsb
ror
dec
insl
jle
mov
je
sbb
sbb
mov
xor
jne
add
mov
mov
lret
addr16
push
or
imul
lahf
repz
pop
les
pop
adc
call
or
adc
mov
cltd
jge
sub
push
sahf
push
mov
inc
and
popf
xor
cmp
push
int
sbb
aaa
cmp
mov
in
cld
orb
bound
sbb
in
out
mov
std
pop
stos
stos
fsubl
es
cmp
jbe
in
cmp
xchg
sub
out
mov
or
loop
ret
jl
outsl
mov
cwtl
sbb
repnz
scas
lods
mov
ret
fadd
push
fildll
out
insl
fnstsw
leave
int
iret
mov
call
and
je
lret
shlb
jg
cmc
push
out
sbb
and
lahf
out
testl
fwait
mov
shll
pop
or
shll
stos
int3
pop
mov
and
jg
mov
insb
mov
mov
dec
pop
test
aas
push
sbbl
and
push
xlat
mov
adc
popa
testb
test
or
sub
les
pop
mov
movsb
xor
popa
dec
data16
sub
stc
out
push
insb
sub
movsb
daa
into
mov
cli
das
and
mov
int3
cld
daa
push
sbb
and
mov
mov
movsb
xchg
or
nop
data16
dec
cmpsb
movsb
dec
fnstsw
jns
rclb
ds
mov
shlb
out
xlat
push
adc
lods
jne
pop
fmull
and
dec
lahf
frndint
push
stos
das
mov
pop
xchg
jns
ljmp
cmp
cmp
ljmp
cmc
enter
xchg
aas
rol
ss
stc
ss
cmp
push
rcl
mov
sbb
imul
mov
data16
xor
push
inc
aad
sub
sub
or
out
dec
or
insb
mov
jge
xor
xor
aas
ss
push
cmp
repnz
andl
add
or
jno
cs
push
inc
jle
fmul
or
outsl
sbb
rolb
popf
cmc
in
cmpl
pop
xchg
cld
jo
push
data16
rcll
pop
mov
sub
js
or
lods
lahf
aam
jmp
add
cmp
mov
dec
pop
repnz
pop
push
mov
fldcw
mov
mov
js
lret
lret
xchg
loopne
rol
xor
cmp
adc
adc
push
addl
jne
fsubp
push
mov
xor
ss
pusha
xchg
repz
bound
pop
gs
ffreep
push
rol
xor
mov
stos
and
jno
mov
pusha
sbb
push
mov
cmp
mov
cmp
in
popf
aam
or
push
dec
pop
and
inc
daa
iret
adc
and
dec
andb
cmp
in
in
push
lock
outsb
or
cmp
cmp
out
jmp
shlb
subl
mov
mov
arpl
cmp
jge
mov
xchg
rol
movsl
ds
shll
daa
mov
subb
cmpsl
adc
sbb
push
lds
xor
es
sub
sbb
ds
out
xchg
inc
sub
lahf
push
aaa
push
or
or
xlat
xchg
mov
sarb
imul
push
push
push
movups
cli
mov
movsl
jbe
pop
inc
xchg
push
js
and
sub
test
out
and
arpl
addb
pop
inc
cmp
sub
pop
mov
cmp
fsubs
push
loope
fbstp
test
cmpsl
or
and
cmpsb
mov
aam
inc
mov
dec
mov
mov
or
lcall
push
dec
sbb
fidivrs
sbb
and
insb
cmpsl
cwtl
mov
add
sbb
sbb
cli
xchg
mov
sub
js
pop
jl
xchg
jle
mov
or
aam
inc
in
je
jnp
scas
addl
rcrb
mov
ret
orl
insl
lods
jno
dec
pop
jl
xor
pop
mov
pop
push
aam
add
adc
inc
insb
std
ret
xor
xor
fwait
push
nop
push
xlat
lds
push
imul
add
stc
pop
roll
arpl
aas
movl
les
pop
inc
sbb
aas
pop
adc
pop
inc
cmp
xor
imul
sbb
or
xchg
mov
jo
out
and
inc
pop
psubusb
push
repnz
dec
out
pop
sbb
call
lds
call
adc
cmpsl
xor
jns
cmp
dec
jno
inc
xor
xor
mov
push
xchg
test
inc
push
xor
sti
inc
jbe
gs
mov
fstpl
aad
push
push
mov
dec
ja
icebp
enter
xlat
je
jmp
push
xchg
ret
pop
imulb
jecxz
cmp
push
repnz
xor
push
add
mov
push
loop
cmp
mov
test
cmp
push
pushl
mov
aas
into
push
xchg
and
and
sbb
sbb
and
add
cmp
fcmovne
sub
push
in
and
lret
xchg
ret
fstpl
push
out
xchg
inc
push
or
add
mov
add
fld
mov
jne
pop
lds
notb
fwait
jae
cs
cmpsb
mov
outsl
shll
push
mov
loop
lret
cmp
or
add
subb
and
cld
repnz
mov
mov
sahf
pushf
ret
xchg
mov
aaa
dec
arpl
inc
mov
cmp
clc
mov
sub
test
and
mov
or
xchg
bound
lods
jns
test
mov
mov
inc
add
inc
add
scas
push
clts
dec
clc
push
sahf
std
xlat
add
cmp
stc
mov
mov
dec
push
mov
stos
pop
xchg
and
adcb
xchg
xchg
mov
shll
jns
jmp
adc
stc
sbb
fldenv
xor
push
clc
push
pop
mov
js
icebp
push
and
lock
das
jne
in
xor
adc
add
jecxz
lret
push
loop
aam
cli
or
into
idivl
loope
cld
je
sub
sub
pop
stos
sbb
pop
xor
pop
jmp
leave
aaa
cmp
cmp
xchg
cmp
pop
inc
sbb
mov
xor
cmc
and
cld
xchg
dec
jmp
pop
shrb
rcrb
push
jne
xor
inc
or
mov
jecxz
push
jmp
or
xor
mov
cli
imul
test
pop
fwait
jae
dec
das
popf
sahf
imul
jo
jne
sbb
ret
jmp
push
ret
testb
not
call
leave
cmp
mov
movsl
sub
inc
inc
mov
test
or
adcl
push
pop
test
push
pop
jne
shlb
pop
mov
add
test
mov
test
outsb
sub
xlat
out
dec
dec
pusha
push
pop
cmp
das
pop
push
mov
imul
pushl
mov
sahf
sbb
mov
pop
stos
jmp
int3
mov
rolb
jns
leave
or
call
xchg
sbb
adc
lods
std
mov
rolb
xor
test
jo
dec
stc
sbb
sbb
adc
das
dec
or
sub
psubb
mov
xchg
push
jno
cmp
and
xor
sub
jle
cmp
adc
mov
xchg
nop
js
push
sbb
pushf
dec
mov
cmp
mov
mov
addb
aaa
lds
je
mov
mov
outsl
inc
sub
push
movsl
adc
pop
fs
sbb
rcr
jge
imul
cmc
and
push
testl
clc
jne
outsl
and
jg
push
dec
adc
sbb
jbe
push
jp
push
loope
and
mov
dec
mov
sbb
sub
mov
jmp
xchg
cmc
mov
enter
test
push
mov
sarb
imul
insl
popa
pusha
sub
daa
sub
cmc
or
add
push
mov
jmp
aam
add
addr16
xor
jp
push
sub
fcomps
icebp
inc
jg
test
scas
mov
movsl
dec
pop
fcom
cmp
jbe
gs
test
scas
lods
jnp
movsl
dec
mov
arpl
pop
or
jecxz
cwtl
jg
jnp
lahf
push
dec
iret
xor
or
adc
int3
lds
mov
stos
or
mov
out
mov
xor
pop
or
fdivs
daa
nop
mov
pop
push
xchg
cmp
push
inc
mov
cmp
and
adc
sub
or
mov
cmp
insb
rcr
push
popf
adc
icebp
mov
cmp
out
push
fldenv
ljmp
sbb
movsl
shr
xchg
aaa
add
int
jmp
mov
mov
xchg
nop
or
scas
ret
lock
pop
rcll
inc
add
insb
mov
add
cmp
imul
pop
dec
cli
mov
jno
pop
gs
lods
cmp
nop
ljmp
pop
adc
popf
dec
ror
pop
mov
pop
and
bswap
bound
pop
stos
pushf
ss
push
scas
add
inc
lock
mov
cmp
fstpt
inc
mov
xlat
push
out
pop
ss
loope
pop
adc
cmp
movsl
mov
sub
add
lret
cs
jmp
sub
inc
outsb
xchg
popa
xor
mov
and
xchg
sub
in
inc
popf
je
or
sub
lcall
mov
rol
in
or
leave
out
jmpw
and
nop
imul
arpl
sahf
bswap
dec
sub
add
push
xor
cmp
cmp
stos
aas
cmp
inc
add
adc
jl
sbb
sub
sub
xor
pop
lret
hlt
dec
stc
fstl
scas
pop
jmp
gs
lock
jmp
cmp
sub
dec
xlat
add
inc
sarl
inc
cmpb
jns
shrl
jbe
jg
ds
or
enter
hlt
mov
aam
xor
sbb
hlt
stos
sub
dec
dec
mov
or
push
push
mov
fs
ds
dec
rol
dec
das
or
arpl
or
push
out
xchg
sub
pop
push
test
mov
ret
imul
push
dec
cmp
in
xor
sub
inc
xor
lea
in
inc
out
mov
push
popf
xchg
xor
push
call
or
xchg
add
pop
push
in
imul
cs
imul
fdivrl
cmpsl
popf
ret
testb
and
mov
xchg
and
jge
dec
mov
int3
pop
sti
sub
xor
lahf
cmp
rorl
or
inc
xchg
jl
xor
aaa
push
mov
in
je
sub
mov
and
lahf
mov
pop
push
and
mov
orl
mov
jp
movsl
push
ljmp
jg
xchg
add
mov
push
push
xchg
xor
or
cwtl
sbb
add
dec
and
push
jno
dec
cltd
cmp
cltd
inc
ljmp
pop
testl
add
pushf
mov
jge
jl
push
fildll
js
mov
cmc
cmpsb
adc
cmp
orl
mov
push
pop
cmp
loop
mov
cmpsb
or
ret
sbb
inc
iret
push
jnp
xlat
sub
in
sbb
gs
sbb
lods
add
sbb
loopne
pop
dec
xchg
or
repnz
cltd
pop
jne
push
loop
data16
mov
stc
leave
test
xchg
in
and
aas
inc
inc
les
jbe
js
hlt
inc
jp
lret
push
stos
jne
js
fdivrl
iret
popa
and
and
and
or
xchg
jp
dec
repz
insl
cmp
sbb
shrb
sbb
jno
sbb
and
cwtl
sbb
push
roll
clc
popf
out
inc
ffreep
push
bound
cmpsl
aaa
imul
scas
fstp
in
and
jb
pop
cmp
xorb
repz
adc
jecxz
test
xor
incb
mov
subl
jns
add
dec
addl
fsts
and
jno
fidivrl
inc
into
jnp
inc
out
and
pop
test
dec
lods
cmp
cltd
jae
cld
mov
test
mov
xchg
mov
pop
add
adc
mov
adc
test
cwtl
push
lods
fyl2xp1
add
in
push
lret
jae
add
popw
cltd
bound
inc
inc
fwait
inc
add
lods
inc
sbb
or
lret
add
rcrl
sbb
dec
ret
out
out
int
and
xor
xchg
orb
int3
mov
call
sbbb
inc
lea
imul
icebp
or
adc
int3
jmp
sbb
clc
lahf
lock
inc
imulb
jge
lcall
cmp
int
adc
and
xchg
jae
je
out
inc
xchg
repnz
or
lea
loope
int3
and
push
jge
mov
cmp
mov
lretw
dec
movsb
sbb
cmp
xor
xchg
add
out
out
cmp
aas
lret
pop
aam
xchg
cmc
jo
or
xor
lods
hlt
gs
jb
add
in
loop
or
ljmp
mov
add
cmp
mov
ret
jg
insb
jno
sub
test
cld
cmp
push
xchg
xorb
jp
enter
adc
out
ss
repnz
retw
jg
mov
lahf
lods
ds
insl
aad
fnstenv
mov
rolb
xchg
in
cmpsl
setnp
pushf
rclb
xor
push
dec
nop
pop
lds
inc
push
out
lcall
mov
hlt
mov
sbb
adc
sti
mov
mov
mov
pop
stos
rcl
aad
je
test
les
incb
sbb
adc
xlat
jl
lcall
stc
inc
mov
cmp
js
in
fs
pop
inc
lea
sahf
js
enter
cmc
arpl
div
fwait
in
jp
shll
orl
rcll
test
jno
xorb
xchg
pop
frstor
in
fs
je
add
imul
jecxz
mov
pop
das
insb
pop
lods
push
stos
ret
shlb
xchg
in
sbb
sub
test
ja
lods
popf
movsb
arpl
xlat
orb
pop
out
repz
sub
data16
jae
xor
test
inc
fists
adc
push
or
sub
stos
bound
rorl
cltd
pop
sub
addr16
cmpsb
sbb
les
roll
roll
inc
lods
mov
fldenv
add
lods
or
mov
scas
and
jecxz
inc
fsubs
sti
adc
xor
xor
add
scas
jnp
pop
adc
stos
fiaddl
dec
cmp
sahf
sub
loopne
lea
sahf
xchg
push
cld
adc
in
sbbb
hlt
xor
push
or
das
subb
pop
lods
int3
aaa
lret
cli
mov
test
popa
pop
cld
sub
sub
xchg
sub
mov
test
pop
in
xchg
lret
ljmp
ss
pop
push
push
pop
pusha
sub
hlt
scas
sbb
dec
mov
lcall
push
pop
out
out
or
jbe
and
lods
pop
add
roll
push
fmuls
mov
loopne
sub
ror
xor
out
add
fnsave
or
ficoml
jmp
popa
add
or
mov
orl
xchg
xchg
mov
pop
xor
add
jns
sub
push
mov
cmp
cmp
sar
ljmp
dec
xor
mov
add
out
lea
push
xchg
std
xchg
mov
rcl
inc
mov
test
sbb
cmp
in
jno
push
loop
movsb
in
outsl
cld
les
or
add
push
mov
jle
movsl
sub
pop
push
xchg
adc
bswap
imul
mov
in
test
add
addr16
add
push
dec
aam
aas
jnp
mov
dec
mov
dec
lret
xor
cmp
shrb
and
popa
daa
jae
aam
xor
div
mov
mov
fdivl
addr16
push
dec
test
shlb
test
jp
mov
insb
add
and
xor
es
dec
add
dec
inc
sub
xchg
loopne
inc
xor
sbb
or
push
mov
mov
out
xchg
lds
pushl
scas
jns
hlt
jle
call
ficompl
mov
cmp
adcl
fcmovnbe
mov
shll
and
xchg
pop
sbb
sbb
ja
add
pusha
lret
lds
test
movl
xor
and
scas
sti
inc
flds
adc
xchg
loopne
pusha
shlb
xor
mov
js
rcl
inc
loopne
xchg
dec
or
mov
in
cmp
sub
nop
dec
cmp
mov
mov
or
inc
in
or
sbb
or
add
aam
cmpsl
repnz
push
lret
and
pop
test
cli
in
jno,pt
pop
mov
outsl
lahf
and
testl
ljmp
xlat
mov
jg
std
fwait
call
push
push
outsl
jnp
dec
inc
mov
xchg
cmp
jae
mov
add
repnz
push
cs
and
jae
lcall
cld
sbb
out
in
inc
shlb
ja
mov
je
mov
arpl
and
int3
insl
mov
inc
imul
decb
xchg
xchg
aam
cld
or
fldenv
lret
adc
sub
test
and
sub
mov
push
test
sbb
xorb
jbe
xchg
lods
jg
out
lea
xlat
lds
lods
jne
movsl
arpl
repz
jmp
push
jg
push
ret
rolb
daa
sbb
push
xor
xchg
fcoms
fnstcw
xchg
push
cld
and
jno
out
insl
mov
aam
pop
sarb
cmp
cmp
test
repnz
dec
and
inc
dec
fimull
inc
inc
test
fcmove
dec
outsb
jmp
pushf
idivl
push
in
mov
mov
dec
sub
mov
popa
divl
adc
aas
shlb
xchg
ss
lret
pop
cmc
sbbl
leave
mov
push
inc
clc
dec
lcall
jl
pop
lret
add
aas
cltd
outsb
fucomi
cmp
pop
jo
xor
stos
inc
lret
mov
cmpsb
into
mov
sahf
jno
sahf
std
xor
jne
mov
out
movsb
fcompl
aaa
les
push
repz
xchg
sub
push
push
addr16
and
inc
hlt
js
std
aaa
add
cmp
addl
pop
cmc
js
adc
loope
cltd
lock
jnp
inc
sbb
std
rcr
aad
lret
pop
mov
lock
jg
addr16
and
sbb
icebp
jp
xchg
jmp
inc
sti
sbb
aas
dec
je
fisubrs
inc
xor
mov
sub
imul
inc
inc
jnp
iret
les
aaa
push
xlat
lods
outsl
push
daa
test
cmpsl
subb
push
jo
iret
movsl
mov
insl
push
sti
rorb
xlat
sbb
ss
mov
xor
t1mskc
aam
mov
dec
sub
mov
push
mov
movsb
inc
in
push
movsb
data16
pop
std
inc
pop
and
add
rcrb
pusha
cltd
orb
push
out
cmp
xchg
std
push
fldt
outsb
mov
cmp
in
push
insb
popf
jmp
inc
and
pushf
and
mov
les
jbe
dec
arpl
lcall
mov
subl
or
sbb
jne
and
call
outsb
fs
jne
xor
test
dec
loop
jne
xorl
or
cwtl
dec
roll
sub
faddl
jae
pop
and
or
cmp
shr
adc
mov
ret
mov
lds
adc
pop
xchg
movsl
cld
pop
or
into
addl
pushf
call
or
daa
jmp
repz
xchg
sub
test
aad
lods
fbld
imul
sarl
inc
in
inc
pop
out
scas
or
lret
aas
xorb
add
inc
int
pop
outsl
and
mov
push
daa
test
mov
in
jb
in
sub
dec
pop
aas
sub
dec
ds
in
cmp
nop
aam
clc
xchg
sbb
mov
mov
sub
je
clc
arpl
mov
ja
imul
inc
adc
test
shll
jmp
mov
adc
cld
xor
test
popf
pop
out
adcb
and
ret
insl
mov
lret
out
test
mov
mov
push
dec
or
jo
clc
sub
cltd
int
mov
jnp
dec
dec
adc
cmp
jle
xorl
xor
scas
data16
jne
cmp
pushf
pop
jp
dec
ds
loope
popa
rorb
jecxz
inc
cld
ret
adc
sbb
and
and
orl
lock
jns
ret
or
popf
das
test
repz
sbb
and
and
sahf
cmc
leave
push
cmp
sarb
add
das
add
sbb
addb
adc
in
lods
mov
push
or
xor
xor
sub
push
loopne
in
gs
push
data16
mov
es
inc
push
out
test
imul
mov
or
outsb
rol
aad
push
push
lods
jno
xor
add
lds
sbb
jmp
cs
orb
rcrb
adc
popf
mov
out
fnstsw
test
mov
xchg
sbb
cmp
jo
ret
jne
mov
aaa
lods
insl
sbb
dec
sub
mov
sbb
pop
mov
mov
in
jecxz
jbe
pusha
and
sbb
adc
dec
push
sbb
stos
xchg
push
jecxz
mov
iret
mov
xor
push
test
in
pop
addr16
insl
scas
mov
cmp
ljmp
pop
aas
insb
lahf
lahf
jbe
push
xor
mov
inc
or
add
inc
pop
and
or
in
pop
sub
loope
loop
pop
xlat
orb
inc
mov
popf
mov
dec
into
inc
cld
jge
cmp
sbb
pop
stos
add
xchg
xor
pop
adc
popf
push
mov
sbb
mov
fnsave
pop
clc
in
pop
xchg
addb
push
push
inc
inc
lcall
xchg
shrb
dec
fidivl
cld
cmp
dec
sub
sub
dec
mov
pop
out
cmpb
sbb
mov
lahf
outsl
icebp
mov
inc
out
loope
clc
mov
sbb
mov
sub
cmp
dec
mov
subl
add
xchg
loopne
xor
xor
mov
inc
mov
or
sub
hlt
shlb
fldenv
jmp
ret
sub
mov
pop
jne
mov
mov
push
cli
push
jge
push
xchg
sub
sbb
loope
movsl
pop
popa
cs
jb
sub
sbb
jle
aaa
jne
xor
mov
mov
lahf
imul
sarb
sub
ljmp
bound
lea
cmp
loopne
out
jne
cmp
push
mov
and
das
sbb
daa
clc
jecxz
dec
popf
dec
push
inc
pop
inc
je
and
fmull
push
push
aad
pusha
mov
aaa
test
not
addl
dec
sbb
lret
sub
lahf
sti
jno
loop
xor
cwtl
mov
jp
jg
inc
xor
sub
pop
aas
and
icebp
push
xchg
and
fistpll
cli
dec
sbb
lahf
iret
push
or
jg,pn
add
ds
pop
xor
fidivl
sbb
cwtl
push
js
push
jp
clc
inc
test
jp
pop
mov
dec
xchg
nop
mov
ja
jne
int
jmp
pop
sahf
out
rcrb
push
adcb
pop
mov
and
pop
mov
call
pop
bound
sbb
ds
cwtl
pop
and
sbb
icebp
fiadds
out
push
insl
mov
mov
push
sub
dec
test
sub
sbb
cmp
cld
xchg
sub
lea
xchg
icebp
and
mov
loop
mov
pop
push
in
cld
sub
mov
enter
adc
fisttpll
inc
repz
gs
das
push
arpl
adc
loope
iret
fs
sub
lock
sbb
popa
inc
or
je
fs
add
icebp
dec
dec
popf
enter
or
fwait
int
mov
scas
out
fildl
pop
xchg
lcall
inc
incl
sar
pop
mov
jecxz
mov
cmp
add
lcall
xchg
stos
loopne
mov
mov
test
dec
mov
jne
pop
mov
sbb
rcr
mov
dec
push
lods
inc
imul
insb
cltd
jmp
jnp
mov
outsl
jecxz
mov
jge
nop
les
shrb
cwtl
iret
sbb
in
mov
int3
dec
in
imul
fistpll
out
jae
scas
pop
inc
mov
cld
add
pushl
mov
and
hlt
and
or
cwtl
or
imul
sub
outsl
test
push
loope
repnz
scas
fdivr
cwtl
lcall
or
mov
roll
xor
jmp
pop
pop
xchg
gs
in
fdivl
lods
sahf
hlt
pop
popa
ljmp
fwait
xchg
mov
add
outsb
test
sub
adc
inc
fwait
inc
or
xor
cmp
std
pop
icebp
loope
xor
xchg
mov
and
and
fsub
add
insl
cmpsb
pop
outsb
in
and
jp
add
aam
loopne
add
cld
xchg
mov
xor
fwait
adcb
or
sbb
cmp
sarb
out
insl
cmp
jae
sub
push
imul
sbb
inc
jbe
fsub
out
les
pop
adc
inc
cmp
fwait
add
or
dec
fsubrp
mov
dec
push
mov
sub
out
jge
stos
mull
out
or
inc
test
push
cmp
aaa
pop
fdiv
jne
mov
or
xlat
sar
rol
mov
dec
icebp
and
nop
xlat
and
cmpb
sbb
mov
cmp
loope
push
out
inc
popa
cs
in
push
pop
or
inc
shll
fs
jno
sbb
iret
sti
mov
test
xor
add
and
add
or
xor
mov
push
pop
cmpsb
out
out
dec
sub
push
mov
xor
inc
and
mov
dec
and
shll
das
adc
inc
fisttpl
jg
mov
sti
jnp
scas
jbe
lahf
cmp
mov
or
mov
mov
cmp
adc
mov
ds
xchg
les
ljmp
push
mov
add
lds
mov
les
sbb
adc
jb
adc
cli
movsl
cmc
fstpl
repnz
repz
out
adc
dec
int3
and
xchg
lods
mov
inc
loope
or
call
mov
data16
cmp
xchg
std
scas
pop
fadd
repz
fildll
pop
imul
pushf
dec
iret
mov
cmpsb
or
dec
or
push
cmp
and
pushf
mov
add
jb
repnz
jg
jge,pn
xlat
mov
ret
aaa
jge
in
push
imul
outsl
or
or
adc
push
jg
lds
pop
mov
dec
sub
mov
pop
cmp
fsubl
imulb
out
xor
aam
cmpsb
push
push
imul
jl
xor
stos
pop
cmp
or
fcmovu
in
cmc
das
xchg
jmp
ret
push
lods
xor
or
js
les
or
stc
stos
dec
not
inc
outsb
dec
cmpsl
push
cmpsb
push
inc
cmc
xlat
mov
aas
pop
sub
out
inc
pop
push
dec
cli
sbb
push
jge
icebp
repnz
adc
js
and
xor
cmpsb
lret
xchg
and
and
fwait
subb
jl
jb
xchg
xchg
lahf
sub
mov
sar
jbe
into
sbb
scas
in
nop
jge
sub
outsl
jecxz
shr
mov
scas
xchg
aaa
or
push
pop
jno
outsb
mov
leave
outsb
cmpsl
lahf
mov
in
jmp
in
xchg
cmp
popf
add
lock
inc
packsswb
fsubrs
or
push
add
mov
jge
sub
xchg
inc
sbb
cmp
inc
loope
xchg
and
mov
inc
sbb
shll
inc
mov
jmp
outsb
adc
test
fwait
aaa
cltd
sbb
repnz
xchg
shll
in
xchg
loopne
push
fidivrs
ud1
or
fcomps
jl
xchg
jne
xchg
jl
in
add
in
push
loope
sbb
stos
mov
sbb
out
push
data16
xor
sub
push
jge
push
xchg
rcll
jge
adc
push
loopne
xlat
and
shll
loope
lcall
sbb
lods
jge
pop
xlat
out
mov
xor
sbb
outsb
addl
lock
and
rorb
sahf
into
sub
and
adc
jno
aad
jne
mov
xchg
adc
push
in
push
sub
and
andl
adc
pop
in
out
push
or
adc
push
jecxz
test
cmc
mov
movsb
mov
fistl
adc
and
and
mov
xor
mov
xor
or
jb
fmull
je
inc
into
xchg
pop
ret
mov
inc
sahf
or
subl
fcmove
sbb
mov
xor
popa
in
pop
xor
mov
repz
lret
filds
sbb
dec
mov
out
cmpsb
add
or
dec
pop
push
shll
push
mov
inc
sbb
mov
mov
ja
lret
pop
lahf
loop
unpckhps
test
bnd
add
cli
fsts
push
rorb
sub
dec
cmp
jmp
cmp
les
hlt
inc
popa
jmp
lock
dec
idivl
outsb
sub
inc
out
movsb
sarl
in
icebp
stos
out
sub
dec
es
fisttpl
cmp
ret
ficomps
repz
push
ror
sahf
jge
int3
jle
inc
fldl
mov
add
test
out
xchg
push
cmpsl
mov
xor
mov
mov
mov
xor
cmp
or
jmp
in
push
and
in
scas
mov
popa
jle
out
push
movl
xlat
mov
call
int
aam
sub
mov
xchg
sti
xor
xchg
daa
ss
inc
enter
xchg
daa
ja
rclb
pop
pop
mov
cmpsl
or
scas
adc
jne
neg
ja
fnstcw
push
into
jmp
inc
xor
leave
repz
aas
jb
subl
lods
cmp
cli
mov
shl
movsl
push
rcll
add
adc
cld
insb
adc
sbb
enter
xor
in
cmpb
mov
push
mov
repz
jo
shlb
xor
mov
mov
fwait
dec
xchg
ljmp
xchg
shlb
sbb
cmovp
and
ret
nop
xor
adc
sahf
dec
test
pop
test
jmp
dec
sbb
lahf
orl
dec
fimuls
sub
inc
movsb
cli
mov
or
outsb
xchg
jnp
stos
jle
shrl
mov
adc
sbbl
or
lcall
pop
dec
ja
call
fisubrs
out
out
pop
mov
pop
mov
mov
jno
mov
or
inc
inc
mov
pop
fadds
mov
arpl
sahf
int
cmp
mov
insb
fiadds
jb
jo
adc
aad
inc
aad
xchg
ficoms
in
icebp
test
arpl
mov
jns
sub
mov
imul
xlat
out
lea
add
sahf
cli
dec
pop
pop
fldl
cmc
jb
mov
jnp
adc
adc
ljmp
mov
or
dec
push
mov
int3
scas
jg
xor
iret
jno
jno
in
adc
xchg
clc
add
lcall
mov
adc
jae
dec
nop
push
inc
pop
pop
inc
inc
insb
jl
scas
ss
adc
dec
cmp
lcall
daa
add
jecxz
rcrl
rcll
xor
lods
mov
dec
xor
idivb
cwtl
jp
enter
js
xchg
hlt
out
adc
ja
addb
shll
rcrb
pop
and
in
add
icebp
imul
lea
lahf
xchg
stc
shlb
call
cmpsl
ljmp
cli
inc
jp
push
cmp
mov
lret
outsb
adc
mov
je
stc
cmp
cmp
mov
mov
cmp
xchg
mov
cmp
insl
insb
aad
push
fcoms
pop
imul
imul
test
pushf
outsb
jge
out
pop
data16
inc
cmp
pop
dec
mov
rcrb
and
ja
in
xor
mov
push
adc
int
jno
rclb
inc
jno
daa
test
arpl
cli
fsub
xchg
insl
repnz
and
push
add
je
aas
bswap
jns
or
cltd
or
andl
sub
int3
lea
dec
enter
roll
mov
adc
dec
lea
lods
mov
cmpsl
push
in
xor
ror
rorb
pop
mov
ss
enter
fsubs
mov
cmp
adc
sub
jns
mov
mov
popl
fs
xchg
push
jge
ficoms
data16
fistpll
mov
mov
mov
and
push
sbb
test
jbe
shll
mov
mov
ljmp
jns
fidivs
daa
cs
out
push
dec
sahf
loop
xchg
loopne
inc
and
bound
sbbb
in
dec
cmp
push
in
sar
fdiv
mov
push
js
and
sub
movsb
dec
cmc
pop
xchg
adc
js
outsl
sahf
pop
jmp
fwait
hlt
fcoms
ds
jmp
xchg
fnsave
out
pop
pop
loopne
jno
xchg
test
cltd
push
roll
mov
jbe
mov
mov
stos
xchg
bound
and
in
pop
pop
sbb
ret
dec
popa
cmp
jmp
js
ds
push
lahf
push
or
jl
lret
mov
dec
add
jb
xchg
mov
and
sub
add
push
mov
pop
aas
push
pop
loope
pop
sub
imul
mov
mov
xorb
arpl
xchg
and
sub
dec
sub
push
mov
les
leave
lret
loopne
mov
aas
sub
mov
into
pop
mov
jl
ror
or
mov
lret
dec
adc
aas
add
movsl
loope
dec
dec
push
mov
jns
pushf
shll
pop
cwtl
jnp
jl
pop
push
out
fsub
fbld
or
into
mov
dec
push
and
cmp
lea
inc
add
mov
xchg
mov
pop
sbb
in
cwtl
stc
pop
xchg
insb
dec
xchg
fistpll
lods
mov
lds
mov
sub
icebp
xor
jae
outsb
pop
jnp
repnz
or
in
mov
push
cmp
push
mov
repz
sub
xchg
lret
sbb
and
stos
in
push
pop
pop
repnz
xor
sub
leave
lret
or
xchg
add
lock
les
dec
dec
bound
lret
lret
sbb
sub
pop
inc
xabort
pop
push
jmp
mov
mov
test
lret
mov
xchg
mov
push
shll
sti
cmc
cmp
push
ds
enter
mov
push
sub
mov
jns
cmp
imul
fldt
rcr
mov
cld
push
enter
mov
test
jmp
mov
inc
call
push
cmp
cmpsb
mov
xor
and
les
sub
inc
adc
inc
jl
orb
cs
mov
stos
jle
xchg
and
pop
lods
add
stos
push
xchg
insb
add
xchg
jo
and
je
push
sbb
aaa
lcall
lock
and
outsb
mov
mov
pop
cmp
aas
sub
out
inc
adc
and
jnp
add
test
inc
fmulp
push
xlat
loop
push
inc
mov
xchg
mov
jno
xor
ret
mov
cs
pop
and
or
loop
or
scas
fnstenv
test
fldl
sub
jg
fidivl
repnz
aad
mov
xor
daa
and
movsb
fstl
dec
ret
pop
js
dec
jb
movsb
in
divb
mov
fsubl
je
add
addr16
adc
lods
sbb
and
fdivrp
jg
pop
sahf
insb
cmovae
arpl
sub
push
lahf
ss
push
mov
xchg
sbb
pop
or
loopne
outsb
ds
push
mov
mov
imul
divl
sub
xor
add
loopne
das
mov
lods
aam
jb
adc
pop
jp
ds
imul
sub
push
sub
lcall
daa
in
sbb
pop
inc
mov
mov
inc
imul
clc
fldenv
xchg
addb
fisubrl
mulb
push
push
loop
push
test
jp
pop
add
xchg
lret
push
jle
push
test
xor
pop
jnp
or
in
jae
fs
xchg
ja
ficompl
aam
sub
cmp
cs
and
fcoml
pop
arpl
shrb
mov
out
aas
xchg
xor
sub
scas
fmull
xchg
rcrb
cmp
or
xchg
cs
testl
cmc
test
cmpsl
sbb
mov
dec
movsl
das
dec
aam
inc
cmpsb
xor
jmp
cmp
xchg
hlt
test
ja
stc
mov
ss
dec
or
pusha
daa
fisubrs
add
sub
push
lods
outsb
aas
sahf
cwtl
mov
loopne
sub
ja
addr16
or
pop
sub
rorb
rclb
jnp
push
jmp
subl
outsl
loopne
mov
xchg
stos
xor
rorl
adcl
pop
sub
shrl
xor
push
aaa
inc
arpl
jo
sub
orb
dec
shll
push
mov
shlb
les
pop
fstpl
add
rcrb
dec
in
jmp
or
pop
mov
jp
sub
cwtl
jg
inc
mov
fisubs
xor
mov
push
je
mov
pop
sub
inc
jg
mov
or
stc
push
imul
sbb
add
adc
daa
pusha
inc
mov
aad
inc
mov
cmp
and
lock
xchg
sub
jge
lock
jecxz
dec
clc
mov
fs
test
aas
xchg
sub
cld
in
clc
sub
dec
adc
cmp
popa
lock
jmp
sbb
sbb
sarb
in
movsl
and
pop
mov
or
xchg
jp
push
xlat
sub
sbb
fmull
lcall
imul
or
repz
scas
pop
mov
mov
mov
test
cld
dec
cmp
divl
push
in
andb
sub
stos
fcompl
fwait
or
xor
sbb
push
shlb
jb
mov
pop
loope
ljmp
cwtl
hlt
mov
out
cs
int
sub
test
sarl
pop
xchg
andb
xchg
je
jl
lea
dec
stos
mov
stc
mov
dec
es
mov
nop
sbb
mov
jg
std
add
mov
call
shll
jp
adc
push
sbb
ret
test
flds
lods
es
loopne
push
out
fs
ret
rolb
addb
push
pop
mov
add
ja
ljmp
add
cwtl
daa
pop
mov
loope
jge
jmp
shll
ret
push
imulb
stos
inc
mov
js
push
dec
movsl
push
in
addr16
sbb
ds
or
adc
movsb
mov
xchg
mov
xchg
mov
rcrb
test
popaw
and
mull
push
enter
loopne
imul
clc
inc
inc
mov
xchg
and
pop
ds
test
push
jne
movsb
in
fdiv
inc
leave
adc
stos
push
js
stos
ljmp
push
iret
push
inc
mov
enter
and
xchg
dec
inc
je
add
sub
xlat
idivl
mov
sub
aad
jge
sbb
xchg
jbe
cmp
std
ret
dec
jl
js
fwait
mov
ret
ss
push
adc
lea
mov
inc
jle
and
fwait
hlt
fstpt
add
fs
sti
pusha
mov
es
hlt
lcall
fcmovne
out
jl
push
xchg
orl
ret
add
add
aad
adc
lods
rcl
push
dec
cld
or
cs
lahf
add
lods
mov
ds
jbe
jnp
es
add
dec
js
das
xchg
xchg
mov
lret
jge
push
enter
mov
cli
mov
cld
mov
jmp
icebp
sbb
ja
push
sbb
mov
sub
fmuls
jbe
into
test
les
sbb
ret
push
pop
xor
mov
lea
fdivrs
ja
xor
jp
inc
xchg
in
pusha
leave
xor
call
pop
add
loop
fs
shr
jg
pusha
jae
outsb
gs
std
adc
add
cmpsb
adcb
aaa
dec
adc
iret
shll
xchg
daa
pop
sbb
std
sub
mov
inc
mov
aaa
pop
xchg
lcall
and
and
mov
xor
sahf
pop
and
arpl
mov
out
xchg
and
lods
inc
mov
fisubs
fsubrl
xor
cmpsl
xor
pop
mov
push
push
les
pop
repnz
sbb
jo
xor
cwtl
aaa
clc
xlat
neg
loop
pushf
shr
sub
push
fidivs
mov
aas
sarb
inc
dec
jg
popf
bound
mov
in
dec
mov
popf
lods
dec
push
cmp
jb
sbb
mov
ja
mov
cmc
jb
xor
test
in
mov
jl
insl
sahf
push
icebp
jno
push
stos
es
imul
aam
lret
lea
js
data16
cmp
sbb
dec
push
mov
and
andb
adc
add
cmp
pop
xor
xchg
movsl
pop
gs
stc
jae
icebp
aam
cmpsb
imul
gs
push
inc
les
test
lds
xlat
dec
push
or
adc
lds
into
push
inc
sub
sarb
jmp
popf
in
cmpb
lret
addr16
push
cmpps
movsb
adc
vminss
lds
xchg
negb
mov
cltd
popa
shlb
sub
orb
inc
std
into
out
rcrb
outsl
adc
pop
mov
sub
adc
jp
add
scas
sbb
add
andl
xchg
ficomps
jno
mov
loopne
fistps
sub
xchg
scas
inc
or
cmpsl
dec
push
cmp
imul
cmp
push
xor
sbb
add
xchg
cmp
xor
or
mov
arpl
sbb
rcrb
jns
gs
jmp
mov
mov
cmc
mov
add
sub
xchg
pop
aaa
aad
bndldx
ret
jo
lods
arpl
and
in
xchg
mov
mov
adc
lock
lret
xor
jo
inc
push
push
insb
std
jp
jle
inc
pop
aaa
lods
out
adc
ret
pusha
lret
mov
pop
cmpsb
out
adc
xor
mov
test
adc
stc
ja
mov
sbb
mov
inc
push
jb
dec
fcoml
sbb
stos
fwait
hlt
xchg
jne
cs
loopne
xor
push
popa
jp
roll
loope
mov
jae
fnstenv
jp
cmp
out
pop
dec
add
or
or
xor
pop
add
loop
jns
iret
jb
aas
imul
mov
xchg
loop
popa
hlt
fisubrs
mov
outsb
push
push
dec
jbe
sub
adc
aam
cmp
jbe
int3
les
cmovae
push
clc
mov
xor
cmp
dec
dec
xchg
inc
xor
and
dec
imul
fs
push
sbb
aas
add
lds
sub
xlat
push
mov
ret
enter
mov
add
jns
stc
scas
or
jne
cmp
aas
pop
ret
dec
mov
jnp
pop
dec
sbb
fbstp
lods
rol
or
pop
and
addr16
push
notl
mov
dec
ljmp
dec
fs
push
test
push
inc
faddl
jg
cmp
shrb
outsl
mov
xor
cmpsb
mov
adc
dec
stc
mov
dec
sub
sub
mov
divb
int
test
cmp
jle
gs
jge
sbb
ret
stos
add
stos
std
js
mov
inc
mov
movsl
imull
pusha
arpl
movb
pop
in
fsubl
mov
mov
and
pop
mov
ffree
out
dec
ret
mov
xor
push
flds
or
lock
dec
fxch
push
sbb
push
add
push
stc
pop
ss
inc
out
sbb
or
hlt
sbbb
dec
popa
in
xor
inc
hlt
inc
aad
inc
pusha
xchg
push
lret
addb
in
loop
xchg
mov
adc
mov
insb
ret
xor
ret
sbb
je
push
mov
fcom
adc
push
ljmp
aas
xor
mov
sbb
pop
fs
pop
inc
inc
aad
daa
imul
jg
out
cmpsb
cld
fwait
rcrb
mov
incb
psrad
jecxz
pop
xchg
sub
and
add
fistl
mov
dec
shll
pop
and
and
xchg
es
sub
fsubl
adc
ret
arpl
sub
insb
iret
mov
das
sub
sbb
adc
lret
mov
jl
jmp
sti
pop
bound
or
and
xchg
les
and
das
add
addb
or
dec
mov
stc
pushf
cltd
out
sbb
loope
add
xchg
rclb
popa
pop
dec
jae
outsl
pushf
jecxz
mov
hlt
scas
gs
mov
pop
shrl
insl
loopne
movsb
lcall
into
lcall
je
in
in
das
xchg
in
std
and
ja
mov
mov
ja
jmp
inc
mov
pop
pop
lods
sbbb
inc
push
pusha
sub
popa
pop
fisttps
imul
mov
ljmp
leave
loope
jg
rcr
nop
and
arpl
cmp
inc
xchg
addr16
pop
pop
inc
pop
sbb
jge
push
and
cmp
mov
xor
adc
pop
loope
cmp
xchg
mov
insb
cli
sub
add
shlb
sbb
adc
pop
mov
add
push
lret
mov
aam
lret
out
pop
xchg
sub
xor
mov
popf
push
cmp
pop
loope
mov
daa
andb
mov
xchg
jmp
lret
fistpll
in
pop
test
push
push
test
or
clc
sub
xchg
add
fmull
or
in
dec
inc
push
xchg
les
push
mov
aad
es
mov
test
cmp
add
fiadds
fists
sbb
mov
mov
sub
fimull
pop
dec
sarb
ljmp
cwtl
inc
xchg
aad
pop
cltd
cmp
pop
ret
shl
jge
mov
cmp
sbb
sbb
mov
addr16
imulb
mov
stc
pop
mov
lock
or
pop
push
or
lret
pop
cwtl
js
loope
xchg
enter
aam
mov
ficompl
test
cmpsl
push
adc
sbb
pop
mulb
aam
ja
mov
xchg
pop
and
outsl
stc
push
sub
mov
sbb
adc
xor
cs
pop
in
pop
jne
into
jbe
outsl
shll
mov
lret
scas
iret
ss
lahf
mov
xchg
imul
xor
cld
ja
and
repnz
leave
mov
push
mov
push
cmp
movsb
add
jg
xchg
cmp
in
xchg
push
mov
idiv
xor
in
push
inc
inc
xchg
sub
inc
dec
icebp
mov
sbb
cmp
mov
orb
push
jge
push
pop
mov
pop
sbb
loopne
xchg
test
fsub
xchg
or
adc
mov
lahf
and
lcall
jno
add
inc
das
cmpsl
or
jmp
sahf
loop
rcl
mov
idivl
bnd
push
xor
rcr
mov
lret
es
aad
xor
jge
jnp
enter
mov
fdivrl
into
popa
add
adc
bound
ficompl
rcrl
mov
sub
mov
ja
sbb
push
and
outsl
notb
cvttps2pi
mov
mov
jg
mov
lea
cmpsb
fiaddl
out
dec
inc
gs
rolb
push
inc
sub
add
sub
add
add
sub
mov
cld
mov
in
or
mov
fdiv
inc
sbb
cmpsb
jne
ss
nop
insb
xchg
or
stos
cmc
fstpl
pop
adc
cmc
pop
dec
adc
sub
ljmp
popf
sbb
add
mov
sub
pop
cmp
mov
lods
adc
test
rorl
xchg
fildl
inc
pop
mov
lock
push
adc
cld
adc
and
lahf
cmc
push
adc
fwait
mov
lahf
aaa
sub
adc
outsl
call
mov
mov
xlat
or
mov
jns
mov
inc
or
fwait
hlt
jne
sti
popf
dec
or
lret
mov
rolb
jge
imul
mov
xchg
fdivs
stc
push
leave
dec
mov
dec
jns
fdivl
cmpsb
aam
stos
stc
movl
insb
daa
out
ret
push
push
push
mov
push
jbe
div
pushf
push
sub
cs
std
das
jge
lods
test
les
inc
sbb
pop
cmp
mov
pop
adc
push
dec
repz
push
cld
rclb
push
push
push
jnp
xchg
movsl
cwtl
mov
js
xchg
hlt
xor
ror
imul
jb
pop
and
adc
inc
jo
int3
fs
mov
mov
ja
ss
push
adc
pop
stos
fistl
inc
inc
icebp
je
inc
aaa
gs
lods
mov
pop
mov
sub
or
add
mov
jae
fs
repz
je
scas
or
xchg
bound
mulps
in
enter
out
adc
mov
movl
push
out
jecxz
cmpsb
cli
cld
inc
gs
stos
push
std
xchg
loopne
movl
push
ljmp
aaa
js
aaa
test
push
xchg
mov
clc
je
jne
jge
imul
outsb
inc
fildll
sbbl
or
mov
out
repnz
iret
mov
adc
xor
jno
fstpt
cmc
ret
adc
or
sbb
jmp
xor
dec
jle,pn
gs
fisubl
xchg
icebp
cmp
mov
cmp
push
fsubrl
jnp
or
cmp
jmp
sub
cltd
lret
test
cmc
outsl
rcrl
pop
lret
mov
push
jp
sbb
in
pop
push
pop
pop
out
mov
pop
and
fwait
popf
pop
icebp
fstps
mov
xchg
pop
popa
jb
xor
xor
or
mov
push
mov
out
or
sti
sarl
jbe
popf
outsb
xchg
test
inc
dec
data16
int3
adc
fadd
fsubl
clc
jle
pavgb
stos
mov
lods
fmull
jno
ljmp
mov
sub
mov
sbb
adc
fildl
xchg
mov
fdivrs
test
mov
sbb
mov
ja
into
frstor
xchg
pushf
mov
dec
out
addr16
loope
mov
insl
lret
dec
sub
sbb
sti
popf
jns
xchg
or
and
stos
test
xlat
faddp
test
lds
mov
loopne
pop
lea
cld
daa
add
xor
out
shl
mov
cmpsb
add
adc
clc
clc
add
int3
ja
shlb
out
out
push
pop
push
or
inc
mov
bt
add
push
bound
lock
mov
mov
mov
call
icebp
ss
lds
pop
adc
add
movsl
call
mov
mov
icebp
sbb
or
mov
or
dec
push
repz
mov
inc
ljmp
lret
adc
sub
mov
sbb
cmp
nop
iret
mov
pop
sbb
or
lret
popf
data16
adc
cld
push
daa
adc
popa
std
lds
mov
in
popa
lods
mov
and
jge
fsubr
jnp
adc
ficoms
pusha
ljmp
rclb
clc
roll
psraw
xchg
jl
setle
push
pop
push
mov
mov
enter
aas
mov
lret
addr16
rcll
mov
or
and
inc
imul
cs
in
and
fbld
xor
mov
sub
jge
mov
adc
jo
std
pop
ret
aaa
movsl
gs
mov
push
aam
sub
or
out
cmpl
leave
subb
das
sub
mov
rcll
adc
negb
pop
mov
push
fld
fs
mov
insb
cmpsb
mov
std
jnp
mov
jns
add
stc
stc
push
ret
repz
push
sahf
cmp
insl
mov
push
mov
mov
mov
xor
lret
adc
xchg
aaa
push
fs
xchg
add
and
lahf
lds
in
xor
in
and
in
xor
xchg
stos
cli
ret
cmp
lret
xor
mov
outsl
jae
push
jns
mov
test
lcall
fmuls
dec
xchg
jmp
adc
idivb
cmp
xlat
xor
and
mov
and
out
arpl
mov
inc
dec
pusha
bound
xchg
lret
andl
je
adc
or
nop
cmp
xor
jae
dec
roll
test
mov
gs
sub
xchg
sub
daa
scas
push
test
xchg
jl
adc
or
pop
mov
out
bound
mov
mov
xor
outsl
fcmovnb
movsl
insb
mov
inc
push
aam
sub
popf
mov
outsl
lods
inc
xor
lret
test
lahf
mov
arpl
aad
leave
outsb
push
inc
jmp
bound
mov
mov
dec
leave
es
ret
cwtl
stos
add
jp
mov
rclb
mov
imul
cmp
and
lods
sub
sub
inc
mov
rolb
rcl
dec
pop
or
lret
aam
mull
iret
mov
je
adc
movsb
shlb
imul
pop
cmc
add
movsb
cmp
mov
lret
pop
push
in
enter
xor
outsb
mov
jecxz
cmp
push
ror
mov
push
xchg
or
pop
popf
cmc
mov
xor
xor
sub
push
bnd
xchg
dec
mov
xor
rcrb
mov
cmp
pushf
aas
mov
push
mov
fxch
jmp
arpl
fs
addr16
mov
das
push
xor
data16
and
sti
mov
jb
cmp
bound
jno
fcmovnb
push
jmp
jl
lods
xor
lret
jmp
aam
inc
popa
push
jp
fsubl
xchg
lahf
mov
adc
pop
adc
fdivs
and
or
popa
adc
cmp
hlt
xchg
xor
cmp
jp
add
cmc
dec
inc
ds
cmp
jle
mov
jg
adc
adc
cmp
lcall
sti
mov
sar
jecxz
adc
loop
add
ljmp
nop
mov
icebp
xchg
and
cld
addr16
sbb
push
push
pop
xchg
inc
cltd
jle
fistpll
xor
enter
and
xor
sub
push
clc
lahf
push
cmp
cmp
popf
adc
popf
push
imul
les
adc
mov
ficompl
xor
and
and
out
pop
inc
loopne
cmp
mov
mov
ret
push
xchg
lods
mulb
mov
das
imul
jo
fcomip
sbb
filds
popf
xchg
mov
pop
pop
cmp
insb
aad
or
push
ret
sti
add
insb
push
mov
fwait
lock
dec
jbe
pop
push
dec
add
mov
add
test
repz
mov
insl
cwtl
pop
fisttpl
addr16
ret
arpl
test
push
pushf
xchg
sti
sub
mov
sarl
ds
and
inc
dec
fldl2t
mov
add
xor
inc
lods
test
cmp
cmp
repnz
fadd
in
push
bound
sub
cmp
cli
sub
sbbl
mov
ret
daa
out
xchg
insb
fwait
popf
mov
out
mov
xor
add
cmpsl
pushf
mov
dec
dec
sbb
add
jl
bound
clc
xchg
sbb
repnz
cmp
add
pop
nopl
mov
aam
xchg
imul
into
sbb
sbb
lods
mov
dec
mov
in
pushf
lea
adc
cmc
adc
pushf
add
stos
add
pushf
int
nop
pusha
sub
sbb
lock
loop
lcall
sub
and
mov
sub
inc
lcall
dec
xchg
clc
jns
inc
mov
xor
pop
mov
addr16
sti
pop
push
mov
adc
pop
push
aaa
mov
imul
test
das
add
or
es
jbe
mov
fs
xchg
and
das
dec
test
test
push
add
call
and
push
ljmp
in
imul
xor
sbb
jl
popf
mov
jno
out
gs
fnstsw
jne
sub
adc
imul
mov
fistpl
inc
or
pop
in
push
xchg
aam
cmpb
sbb
mull
stos
in
push
push
subl
scas
es
jns
in
mov
leave
mov
jnp
dec
xlat
ret
or
arpl
adcb
fwait
push
aam
call
popa
mov
mov
lret
pusha
ss
cli
cmp
mov
shll
mov
loop
dec
addl
bound
popl
and
jno
jns
sahf
cmpsb
fstl
sbb
jge
rol
or
out
aam
jnp
rcl
cmpsb
mov
out
xchg
and
jg
dec
jno
sub
iret
cltd
popl
jne
shlb
in
stos
inc
mov
ds
xor
fsubrp
jns
rol
adc
sub
sub
xchg
xchg
popa
out
pop
stos
movsl
mov
inc
push
imul
stc
adc
enter
test
add
mov
jl
add
pop
cli
js
test
ja
sbb
pop
xchg
fldenv
push
outsl
mov
inc
lret
test
mov
insl
sbb
mov
xchg
inc
push
xchg
mov
dec
adc
cmp
data16
into
cmp
cwtl
imul
outsl
add
cltd
das
pop
cmp
fdivrp
add
imul
cmpsl
jbe
js
mov
inc
adc
jp,pt
cmp
mov
popf
shrl
fstps
xor
ret
add
insb
or
or
loopne
je
pushf
es
jecxz
jp
mov
jb
xor
rcrl
or
pop
xor
jae
data16
ja
or
imul
cmp
mov
cwtl
clc
ret
sub
adc
inc
dec
fnstenv
xor
add
push
popf
popa
int3
push
in
push
test
dec
sub
cmpsb
sub
int3
xchg
cmp
addr16
dec
sahf
and
in
popa
lahf
lods
lahf
shr
ret
and
aad
mov
notb
xchg
scas
mov
leave
sbb
cld
inc
xor
xor
and
shll
adc
popf
adc
aas
xchg
loopne
xchg
aad
jnp
sub
inc
xchg
mov
cmpsl
dec
mov
cmpsl
inc
leave
jnp
jmp
inc
sbb
repnz
cmc
in
dec
sub
pop
mov
cmpb
frstor
mov
pcmpeqw
out
jbe
pop
into
mov
jo
cmp
and
hlt
popa
jg
mov
sub
pushf
jmp
mov
imul
mov
cli
imul
sbb
int
xchg
jp
ret
cmp
push
push
rcrl
out
not
outsl
ret
clc
xorb
cmc
stos
lea
bound
xchg
outsb
into
test
and
mul
std
adc
xchg
leave
add
das
jo
sbb
sbb
jne
mov
loop
xchg
sbb
push
cmp
mov
sti
repz
test
notb
inc
or
inc
popf
adcb
sti
push
shrb
stos
leave
stos
lahf
push
not
pop
movsb
mov
notl
cs
loop
xchg
cmp
mov
jno
int3
sub
pop
xchg
lock
xchg
sub
adc
sbb
pop
mov
inc
pop
fisubrl
aas
and
lock
pop
idivb
pop
sbb
std
scas
divl
cld
push
out
jo
sbb
inc
aad
test
fmul
sub
mov
add
mov
aas
and
in
outsb
push
mov
inc
jae
push
jns
out
movsb
ja
outsl
mov
cmp
enter
sbb
popa
inc
pop
or
iret
imul
or
std
shll
scas
push
adc
jmp
xorb
inc
daa
loop
adc
fcomip
lret
pop
xchg
adc
jne
nop
lcall
adc
push
mov
cmp
arpl
fld
adc
mov
jp
mov
pusha
jns
test
out
ret
incb
es
cmpsb
ret
fwait
aam
scas
shlb
jl
fstpt
sti
xchg
adc
push
and
imul
pop
pushl
and
cmp
stos
cwtl
pop
into
cmp
out
xlat
mov
adc
push
or
xor
lods
sbbl
dec
fstps
stc
rcrl
test
scas
scas
out
aam
leave
xchg
pop
stc
sbb
insl
out
lods
and
add
adc
popf
das
loope
lods
and
aas
jl
fildll
xchg
mov
sbb
stc
mov
mov
mov
das
xchg
lock
jae
mov
mov
leave
imul
or
and
cld
lcall
adc
jge
pop
ret
mov
pop
cmp
cli
push
dec
out
mov
mov
dec
xchg
adc
pop
jg
ret
pushf
push
fwait
repz
cmc
xchg
shll
inc
out
inc
cli
xlat
fstps
xlat
push
mov
in
int3
shrl
jo
pop
ret
mov
js
add
sub
jo
mov
sbb
adc
inc
cld
push
cmp
adc
ret
xor
jge
insl
cmovp
mov
mov
mov
fcmovnb
jo
je
sbb
mov
loopne
mov
mov
xchg
and
out
cld
cld
outsb
xchg
aad
add
xor
or
add
or
push
shl
dec
aam
aaa
add
adc
add
and
int3
sub
cmp
pop
shrb
pop
cwtl
mov
jl
fs
push
jns
push
and
xlat
jnp
nop
mov
test
dec
cmp
pop
adc
dec
sbb
sub
aas
imul
daa
dec
jnp
cmp
fstpl
std
sub
mov
push
xchg
mov
mov
data16
mov
inc
mov
jg
push
popf
and
jae
hlt
sub
adc
lods
dec
loope
xor
mov
sub
xchg
aaa
ds
and
inc
mov
or
push
andb
repnz
mov
insl
pop
movsb
arpl
rolb
in
or
cmpsb
sbb
sub
inc
adcl
jo
and
pop
test
xchg
jne
push
and
mov
cmp
gs
jl
dec
xchg
outsb
ljmp
daa
fcmovbe
insb
sarb
and
in
sub
sub
stos
pusha
leave
dec
aad
pop
dec
clc
jge
iret
xor
sbb
dec
sbb
imul
sbb
shlb
bound
mov
xlat
fsubp
xchg
mov
scas
enter
and
andl
add
rclb
out
cmc
add
or
ret
insl
pop
aam
sahf
sub
push
je
push
iret
dec
stos
out
inc
xor
lret
sbb
push
jecxz
jle
mov
rolb
aad
dec
aad
mov
push
sub
dec
mov
arpl
add
mov
adc
dec
jb
lods
ja
lods
push
iret
jne
adc
out
push
aam
adc
mov
mov
xchg
mov
ss
in
addr16
xchg
loopne
rorb
rolb
push
out
xchg
cmp
pop
rcll
aas
addl
and
or
cmpsb
popf
inc
push
xchg
xor
stos
xchg
subl
out
ss
es
sub
mov
pop
daa
movsl
adc
popf
cmp
repz
push
lcall
xor
mov
jmp
iret
mov
inc
clc
pushf
rcr
idivl
xor
cmp
cmc
cmc
sub
jg
mov
mov
movsl
clc
mov
out
mov
xor
shrb
xor
movsl
insl
and
shl
sbb
add
mov
loope
cmp
test
adc
and
xchg
sbb
mov
sub
movsb
int3
xor
sub
in
mov
jl
mov
push
cmpsb
cmp
jge
inc
call
jl
push
push
fs
mov
mov
jl
cmp
lods
add
cwtl
push
imul
and
cltd
xchg
dec
pop
in
daa
fs
or
or
cld
cmpsb
out
and
xchg
pop
out
jmp
pushl
xchg
mov
lret
imul
daa
push
sbb
repnz
daa
lret
dec
sahf
cltd
inc
and
pop
push
les
inc
lea
fcompl
cmc
ss
leave
ds
xor
push
clc
xor
push
sbb
inc
xchg
scas
shll
shrl
orl
mov
inc
jbe
loope
in
mov
mov
call
outsb
pop
jp
inc
jnp
mov
andb
es
adc
inc
sub
inc
ja
and
into
jne
adc
pop
pop
fisttpll
out
inc
xor
inc
adc
push
fcmovbe
mov
daa
mov
pop
bound
xchg
enter
mov
loopne
lret
or
cmp
fs
jbe
adcb
push
ja
xchg
les
rcl
push
in
fbstp
adc
and
lahf
rorb
xchg
jle
test
roll
mov
out
sbb
xor
dec
popa
sbb
notl
mov
mov
mov
imul
fwait
arpl
hlt
and
int3
xchg
mov
aas
pop
mov
sub
mov
adc
lods
xor
push
aas
mov
insb
popf
rcrb
inc
sub
stos
push
push
pop
sbb
fs
iret
mov
faddl
mov
mov
roll
sbb
loopne
and
icebp
int3
and
addr16
ss
scas
sbbl
xchg
out
mov
lds
cs
hlt
daa
and
dec
inc
adc
bound
je
cmp
dec
cmp
or
push
mov
imul
or
dec
daa
stos
xor
outsl
mov
les
cltd
movsl
mov
test
mov
incl
mov
setnp
dec
sub
pop
popf
dec
lret
fwait
ds
mov
fwait
push
mov
scas
mov
sbb
push
dec
insl
stc
or
pusha
cltd
adc
cmp
xchg
jecxz
mov
dec
jae
mov
flds
jmp
mov
divl
xchg
dec
xor
test
xchg
mov
adc
dec
shl
in
imul
mov
xchg
push
mov
pusha
dec
outsl
jb
and
loope
pop
scas
out
dec
imul
jecxz
in
mov
out
aaa
stos
pop
int
std
cmc
xchg
lret
or
mov
jae
fimull
rcrl
fstpt
aas
pop
fndisi(8087
into
fldcw
aas
into
mov
xor
mov
pop
or
inc
mov
adc
aam
or
andl
and
frstor
lods
ret
or
and
cmpsl
minps
mov
mov
mov
dec
push
jbe
sub
out
fstl
xchg
lahf
push
jmp
pop
jle
jae
nopl
lret
mov
insb
sub
cmp
pop
adc
lea
xchg
sub
pusha
sub
aaa
xlat
jne
push
and
push
jne
addr16
mov
ds
dec
sub
test
push
or
xor
xor
punpckhbw
adc
test
dec
repz
repnz
or
sahf
aad
lret
aaa
cli
mov
lcall
push
iret
fprem1
cmc
les
incl
rorl
jge
leave
clc
negb
pop
leave
fimull
mov
sbb
roll
add
cs
mov
mov
jb
dec
jge
dec
iret
pop
sbb
and
mov
clc
pop
adc
insl
test
mov
inc
mov
pusha
mov
sbb
leave
xor
ja
popa
push
dec
xchg
dec
dec
filds
int
scas
sbb
mov
lds
mov
adc
setns
jge
pop
stos
pop
stos
test
lods
cmp
add
jle
and
sub
shrb
dec
daa
jbe
push
addr16
test
fwait
shrb
loopne
jo
adc
sub
xor
iret
sub
lods
cmp
mov
repnz
mov
push
fcompl
jle
repnz
mov
jae
cld
fucomip
in
sub
dec
loopne
mov
sbb
les
and
fwait
test
pop
cmpsb
or
outsb
xor
mov
and
lcall
push
stos
les
enter
or
xchg
pop
pop
dec
sub
leave
push
fistps
add
lods
orl
std
mov
sbb
mov
pop
scas
xorb
mov
push
fldcw
stos
outsb
add
sbb
je
loopne
or
movsl
subl
je
inc
sub
mov
lahf
sub
add
pop
fistpll
cmp
adc
addr16
fwait
insl
lods
arpl
dec
ds
fldl2e
mov
push
nop
jl
mov
repz
arpl
pop
pop
cwtl
add
in
add
mov
clc
sub
fwait
xorl
pusha
mov
test
push
jp
cli
and
fidivs
mov
stos
jl
fwait
bound
fisttpl
jl
pop
mov
call
mov
shrb
push
popf
lods
push
scas
loopne
mov
cs
sub
lret
mov
jmp
mov
adc
mov
sub
sub
es
clc
mov
outsl
insl
sti
add
test
mov
mov
sbb
mov
mull
xchg
mov
pop
insb
push
shl
pop
inc
gs
jb
mov
jl
aam
cltd
into
vunpckhps
inc
pop
lock
pop
sub
nop
into
cltd
mov
jns
lea
jg
lock
jge
inc
xchg
int
repz
repnz
cmp
clc
mov
dec
add
push
insl
mov
xchg
xor
movsl
ja
leave
mov
xchg
mov
mov
xchg
and
loop
stos
push
inc
jo
push
adc
dec
es
fidivrl
and
jnp
sub
ret
cwtl
stc
imul
xchg
scas
adc
int
arpl
cmp
flds
or
push
mov
ret
inc
cwtl
cmp
mov
xchg
push
aam
ficompl
mov
repnz
jns
push
add
out
jge
mov
cmp
sahf
out
inc
scas
xor
pop
adc
push
je
cltd
shll
mov
bsr
fucomi
scas
pop
lret
movsb
cmp
mov
push
icebp
jle
cld
in
pop
aas
jb
pop
adc
ljmp
addl
xlat
mov
test
sbb
pop
lds
sbb
pop
push
mov
js
ret
mov
mov
jnp
loope
pop
jae
sub
aam
or
xlat
dec
jecxz
leave
sti
outsl
jne
mov
sbb
push
imul
ret
ret
bound
call
sub
adc
xchg
outsb
dec
xchg
mov
jg
iret
and
rol
les
rcr
dec
dec
cmp
addr16
jge
les
and
mov
pop
push
jnp
and
mov
test
mov
stos
or
test
sub
adc
and
fdivrs
into
xor
mov
ja
adc
bswap
inc
jns
mov
fisttpll
std
fsubrs
xor
pop
dec
icebp
bound
mov
jl
inc
movsl
out
add
popf
test
pop
jge
popa
or
mov
xor
inc
jb
xor
addb
lock
test
mov
add
test
sbb
addl
sbb
xor
pop
andl
pop
sub
jae
sbb
push
in
xorb
repz
sub
aad
sub
movsl
adc
xor
das
inc
subb
lret
mov
jge
pop
subb
push
jae
push
mov
divb
xor
movsb
cmpsl
addr16
cmp
rolb
jbe
push
inc
mov
push
daa
xor
clc
inc
cmp
aam
add
and
je
divb
cli
mov
mov
rcr
neg
insl
mov
or
lea
ljmp
sbb
add
pop
hlt
cmp
inc
xor
push
pop
xor
insb
fs
gs
jns
inc
ss
fsubl
icebp
jo
je
dec
lret
xor
negl
mov
stos
mov
mov
jecxz
pop
mov
sti
daa
mov
fcmovne
jle
mov
mov
and
fcomps
or
inc
jge
pushf
and
push
push
loopne
jg
jo
pop
mov
cld
pop
xor
adc
aas
pop
mov
mov
xchg
or
les
clc
sub
jae
xor
pop
and
add
pop
hlt
js
xchg
sub
fisttps
add
les
push
imul
repnz
out
loopne
data16
or
ja
sti
mov
push
stc
cmp
xor
test
dec
ja
and
cmp
notl
mov
repnz
loope
push
add
sub
imulb
pop
pop
cld
repz
and
cltd
arpl
xchg
xor
inc
adc
movsb
insb
add
or
adc
adc
stc
pop
and
sahf
cmp
sub
adc
jns
gs
xor
cmp
inc
pop
xchg
inc
jne
jle
or
fimuls
aam
mov
inc
sahf
ficoml
xchg
and
sub
mov
add
mov
shll
stc
xchg
pop
xchg
jbe
or
test
jecxz
in
addr16
cmp
lods
sub
pop
jge
es
testb
mov
int
mov
test
loopne
sbbb
lds
sub
add
into
scas
das
jg
call
mov
insl
sarl
mov
jmp
ss
andb
aam
pushf
les
out
aas
mov
lcall
cwtl
lret
ds
pop
mov
and
mov
sbb
js
cld
mov
cltd
test
data16
fsubrp
mov
mov
and
xchg
lahf
or
cs
mov
shrb
adc
add
fs
cmpsl
into
mov
jbe
fisubrs
lods
popa
cmp
popa
out
cld
jle
jle
xchg
nop
jnp
push
adcl
sti
mov
ret
dec
xchg
testb
inc
pushf
loope
outsb
repz
adc
ret
shlb
nop
fidivrl
mov
inc
or
adc
push
or
imul
frstpm(287
xchg
jb
ret
cli
test
fsubl
in
fadds
leave
rol
stc
pop
pop
shl
lea
and
or
pop
and
jg
dec
arpl
adc
test
jne
mov
test
mov
xor
aaa
or
push
sub
xchg
jecxz
mov
insb
adc
and
sbbb
sbb
mov
fldcw
mov
sbb
sbb
fadd
out
cmp
je
and
cmp
jg
and
xor
into
adc
roll
in
push
imul
mov
xor
fidivs
ret
dec
pop
pop
jmp
sbbl
in
mov
push
or
sub
add
mov
or
cli
inc
out
and
outsb
push
out
shll
aaa
fs
mov
repnz
jno
neg
or
inc
sbb
push
or
lods
adc
fwait
mov
pop
movsb
pop
inc
lock
cli
mov
mov
xor
mov
fwait
mov
inc
ficompl
mov
bound
fcomps
jno
insb
ds
and
dec
mov
repz
daa
add
xor
pop
sbb
mov
xchg
xchg
mov
mov
dec
imul
cmpsl
cmpsb
popf
pop
addb
vorps
pop
cwtl
or
sub
enter
daa
shrb
faddl
mov
out
xlat
sub
mov
pop
fmull
dec
pop
ret
je
jg
cltd
mov
loopne
pop
std
dec
sbb
xor
xor
cwtl
test
or
or
popa
pushf
jge
jo
mov
pop
or
lea
sub
lahf
or
pusha
out
popl
xor
inc
repnz
push
inc
inc
stos
cld
cmp
jbe
imul
push
cs
divb
mov
loopne
outsl
mov
pop
pavgb
cltd
pushf
add
imul
dec
int
subl
sub
mov
xor
pushf
push
das
pop
jle
paddd
push
inc
fstl
lock
sahf
inc
xchg
mov
fstps
and
mov
outsl
insl
stos
mov
scas
movsb
insl
cmp
inc
roll
sub
test
scas
cmp
xchg
loope
ja
test
pop
bound
xlat
orb
push
mov
ljmp
jecxz
sbb
fisubs
or
mov
add
push
xor
dec
out
lods
or
int
lahf
push
stos
inc
testl
imul
test
inc
cmp
lock
ja
arpl
addr16
pop
dec
fsubl
inc
dec
pusha
loope
xchg
sub
aaa
jno
mov
out
push
rcll
push
lret
sub
mov
out
adc
xchg
cwtl
es
fldl
xlat
pop
es
clc
pushf
scas
push
ss
mov
and
into
xor
push
pop
jecxz
push
pop
sbb
stos
lods
xlat
adc
and
cs
mov
repz
popf
fwait
xor
loop
adc
xchg
mov
scas
xchg
mov
xchg
int
sbbl
fsubs
sahf
cld
and
das
dec
adc
lcall
in
pop
jns
imul
test
pop
push
cmp
dec
xor
out
mov
cli
popf
mov
shrl
dec
lea
or
jge
push
pop
jb
imul
enter
adc
sbb
insb
shlb
inc
mov
pop
or
jo
fists
jmp
push
inc
xchg
into
sahf
repnz
gs
add
or
inc
sub
cmp
add
fadds
ljmp
ds
int3
or
pusha
mov
mov
jb
xor
xor
inc
add
mov
pop
nop
push
movsl
pop
jmp
cmp
xchg
mov
inc
loopne
push
jns
jns
jb
adc
outsb
pop
xchg
cmpsb
jle
mov
mov
repz
mov
imul
push
lahf
push
bound
clc
es
mov
push
repz
adc
ret
pop
mov
jo
flds
jmp
hlt
in
sbb
or
inc
popa
add
adc
std
jle
xchg
shrl
mov
xchg
fisubl
adcl
mov
jno
hlt
xor
clc
fcmovnu
cmp
aaa
fistpll
cld
mov
cmp
or
pop
pop
sbb
inc
push
lds
pop
fistpll
and
fcoms
xor
cmp
andl
dec
xchg
sbb
cmc
cmpsb
cmc
cmpsl
jecxz
pop
xor
mov
rcl
jg
aam
pop
dec
mul
into
mov
nop
sbb
sbb
es
xor
cmpsl
cs
adc
push
ret
outsl
jae
adc
cmpsl
sub
loope
loope
xchg
ja
shlb
push
push
mov
and
lahf
inc
xchg
inc
ss
enter
jae
inc
leave
pop
mov
mov
scas
add
daa
imul
stos
aaa
lret
sub
jns
pop
sbb
sub
pusha
pop
jle
outsl
mov
xchg
fldl
jecxz
xchg
pushf
mov
mov
mov
pop
adc
xor
and
fiaddl
loope
ja
push
cld
cs
mov
mov
xchg
jne
fcmovu
sbb
popf
movb
incb
outsl
outsb
mov
je
xor
shlb
adc
fwait
or
aam
mov
and
shl
scas
pop
pusha
inc
jbe
fisubl
xchg
loope
cld
shl
mov
cld
dec
pop
dec
dec
lods
xchg
push
mov
mov
mov
pop
add
jp
js
data16
lret
loope
adc
daa
popf
mov
dec
push
popa
orb
xchg
sub
xor
out
rcrb
jns
ja
jge
inc
scas
push
jl
roll
into
pop
and
dec
inc
push
popf
push
or
jl
jp
mov
adc
out
movl
push
outsb
popa
fs
jo
les
fnsave
das
mov
test
lods
xchg
jecxz
ret
mov
mov
add
add
push
mov
outsl
cli
es
dec
out
popf
or
mov
test
out
in
sbb
out
loope
xlat
jo
in
iret
addr16
cmp
ret
roll
lret
xor
mov
jmp
into
xor
lods
mov
mov
movb
ficompl
stc
std
aad
mov
pop
or
xor
adc
add
bound
xchg
addl
test
and
pop
rol
jecxz
dec
pop
mov
stos
leave
fstpl
mov
popa
xchg
out
add
sbb
js
jbe
jl
pop
xchg
pop
scas
mulb
cmpsb
xlat
lods
adc
inc
bnd
sahf
fwait
dec
mov
and
inc
xor
test
shll
dec
dec
dec
imul
inc
out
push
pop
inc
enter
movsl
mov
bound
jnp
push
push
sub
stc
pop
cmpsb
mov
incl
cmp
mov
xchg
subl
mov
add
sbb
inc
aas
das
xor
cmp
lcall
out
insb
mov
mov
mov
push
aad
ret
inc
mov
test
int3
mov
lds
xor
fstpt
fldenv
clc
mov
sbb
jnp
cmpsb
shrl
icebp
xchg
inc
loop
loopne
cld
push
loop
lods
lea
mov
nop
mov
mov
mov
xchg
or
push
cmpsb
pop
data16
scas
aad
fdivrs
sbb
dec
pop
dec
mov
inc
sub
xor
ds
jecxz
jns
pop
clc
js
imul
js
out
pop
sahf
xchg
enter
pop
mov
mov
mov
add
mov
in
out
mov
sbb
push
pop
test
add
cmp
adc
adc
add
mov
ret
mov
sbb
popf
push
xchg
xor
iret
jg
sbb
and
sub
ss
sub
sub
dec
insl
aad
jmp
mov
int3
mov
inc
xchg
inc
sub
dec
inc
xchg
dec
or
add
dec
mov
inc
xor
cmp
pop
pop
int3
gs
jg
jno
sti
pusha
push
pop
lods
int3
cmpsb
sbb
lods
push
xchg
mov
arpl
jne
jg
sbb
sarb
xchg
add
enter
pop
jo
in
mov
test
adcb
scas
mov
jo
scas
in
decb
lock
jecxz
adc
sub
xor
cs
and
rcl
add
popf
pushl
fldl
aas
mov
mov
les
lret
cmc
push
sti
ror
mov
cmp
cmp
fisubrs
mov
out
mov
push
stos
insl
lods
pop
mov
mov
xchg
jecxz
push
clc
xor
adc
push
lret
push
xor
or
sub
fnsave
les
sahf
cmpsb
mov
movsl
shrl
sub
ja
xchg
data16
add
and
ds
js
sahf
add
inc
mov
testl
mov
add
or
cmp
mov
sub
and
cs
pop
fs
add
sarl
lock
andl
dec
xchg
mov
mov
mov
addb
sbb
inc
adc
push
and
loop
arpl
adc
stos
in
lret
imull
nop
mov
lahf
xchg
mov
mov
pop
shr
int3
nop
iret
push
leave
icebp
lret
int
cmpsl
xlat
fs
inc
xor
fidivs
fcoms
cld
or
push
loope
shrl
lods
cmpsl
add
lret
pop
das
stos
in
pop
sti
jo
testb
adc
movswl
out
or
push
loope
xorb
bound
mov
mov
sbb
imul
outsl
add
and
mov
or
pop
insb
inc
adc
aam
jno
dec
push
daa
dec
in
pop
dec
lds
add
mov
aam
xor
ljmp
out
xorl
lahf
push
insb
insl
data16
push
insl
outsb
and
mov
mov
mov
jno
jp
add
ja
adc
das
add
std
adc
movsb
dec
clc
sbb
xchg
lahf
sub
sti
cmpsl
sub
ljmp
test
ja
into
es
cmp
adc
and
inc
roll
les
lret
shll
rcr
fisttpll
inc
stc
das
sti
cld
in
fistpll
lcall
sub
jmp
lock
lods
pushf
loopne
sbbb
mov
outsl
pop
out
ficomps
cmpsb
xchg
mov
test
out
push
fnstenv
jbe
mov
sub
and
cmp
sbb
sbb
out
cmpsb
test
mov
mov
mov
aam
lahf
and
inc
push
aad
arpl
sub
ret
inc
scas
lock
mov
add
jbe
push
movsb
mull
pop
and
test
mov
inc
cltd
or
fmuls
cmpb
stos
push
popa
jbe
cli
loop
xchg
mov
and
dec
xor
push
shll
lods
popf
push
scas
je
pop
mov
jle
or
mov
scas
xor
xchg
pmulhw
lret
loopne
icebp
in
cmovo
clc
xlat
gs
int3
mov
fmuls
mov
cmp
mov
movsl
rep
ss
in
mov
insb
mov
insb
ret
enter
add
sti
cmpsl
mov
cmp
ret
mov
xchg
aaa
addr16
mov
adc
xor
dec
inc
xor
adc
imul
adc
mov
mov
repz
dec
movsl
int
add
ja
jno
sub
std
adc
sub
adc
sub
push
or
xchg
adc
lahf
push
adc
pop
push
sbb
push
aaa
pop
das
pop
sarb
cmp
test
or
mov
inc
popf
mov
testl
loop
ljmp
add
lahf
enter
movsb
lret
jmp
mov
dec
lods
popa
add
sti
jno
in
outsb
adc
cmp
xor
roll
pop
fidivrs
jae
clc
xchg
test
xchg
int3
adc
and
insl
push
cli
push
into
mov
push
pusha
outsb
mov
xchg
out
mov
adc
push
ds
gs
mov
test
adc
adc
or
fs
inc
mov
stos
and
ret
in
lret
int
call
adc
enter
jecxz
add
loop
fnstsw
jo
mov
push
push
inc
sbb
in
jne
aam
sbb
stos
and
add
push
out
insl
xchg
jo
in
int3
inc
pop
and
in
xchg
loopne
adc
into
jns
ret
and
out
inc
sahf
mov
pop
incb
sbb
fs
cmpb
daa
xchg
pop
and
repnz
cmp
push
push
dec
mov
insb
or
cmp
lods
hlt
pusha
pop
fdivr
insb
inc
ljmp
push
pop
or
dec
pop
insb
cmp
cmp
fs
jle
outsl
aam
out
aam
dec
lahf
out
push
xchg
dec
arpl
movsl
dec
imul
repz
dec
sahf
push
inc
in
mov
jecxz
loop
inc
jge
mov
je
inc
mov
xor
pop
out
movsb
cmp
mov
cli
ret
inc
es
ret
fwait
mov
jge
mov
pop
sub
cwtl
sbbb
xchg
inc
or
add
aaa
pop
inc
popa
pushf
push
popa
push
xor
fs
inc
inc
pop
pop
addr16
ja
adc
mov
inc
ja
xchg
or
repz
push
pop
ret
mov
dec
fadds
mov
lcall
ja
aaa
ja
pop
push
add
mov
popf
push
adc
mov
mov
pop
les
inc
repnz
fisubs
add
scas
movsb
fsubrs
setge
movsl
testl
lret
fstps
out
xchg
fnstenv
and
mov
leave
xlat
mov
ja
imulb
push
mov
add
data16
aaa
out
and
and
add
jb
adc
add
aas
mov
push
mov
in
inc
imul
cltd
inc
mov
ficoms
outsb
push
xor
arpl
mov
out
mov
jle
add
jmp
inc
loopne
fidivrl
icebp
into
enter
cmp
cmp
fadd
addr16
lock
idivl
mov
pop
gs
outsl
repnz
mov
pop
addr16
dec
out
movl
notl
xchg
mov
mov
xchg
sbb
loop
jp
andl
or
mov
xor
repnz
jg
fdivrl
sbb
xor
subb
or
fisubrs
pushf
insb
add
out
pushf
jnp
psadbw
adc
adc
and
ljmp
mov
xchg
jno
jp
push
rorb
jo
js
xchg
popa
outsb
adc
and
pop
ja
jne
jae
test
adc
xor
mov
adc
ljmp
jmp
jo
mov
xor
mov
gs
inc
mov
jae
jbe
inc
xor
xchg
sbb
push
mov
ja
pop
pop
dec
and
test
sbb
adc
test
mov
adc
cmp
xor
push
loope
xchg
sbb
sub
jmp
adc
dec
pop
sti
icebp
hlt
jae
push
xor
insb
pushf
sarb
lods
mov
lret
jno
mov
pop
outsb
mov
prefetchw
pop
push
das
jg
and
or
mov
jle
pop
cmc
loope
pop
mov
pusha
lock
push
aad
cld
pusha
sub
add
mov
lock
pusha
leave
xor
xchg
je
add
mov
sti
in
push
fisttpll
adc
cmp
aaa
jne
and
mov
xor
mov
adc
mov
popf
cmp
popa
cmp
or
xchg
xchg
nop
jnp
jg
gs
xchg
stc
fwait
mov
nop
inc
and
pop
jo
lds
ljmp
mov
lahf
push
xchg
cld
test
push
jp
test
push
mov
or
lock
dec
icebp
xor
and
pop
pop
addl
mov
clc
xor
xchg
subl
out
jecxz
cmp
shlb
sbb
add
xchg
lods
movsl
pop
xchg
mov
fs
push
jle
insb
jo
sbb
sub
sbb
aaa
pushl
sbb
icebp
jg
inc
adc
jb
lcall
mov
lods
cwtl
xchg
outsb
addr16
mov
push
out
fidivrs
dec
and
sbb
add
jns
inc
xor
xchg
test
je
fstpt
xlat
mov
pop
ret
dec
cmc
inc
ret
es
adc
or
fistl
jo
outsl
jnp
push
es
lahf
inc
xchg
inc
xchg
dec
mov
ret
rep
adc
mov
clc
adc
push
add
insl
pop
adc
cld
sub
sbb
jb
stos
dec
pop
ret
shlb
pop
jmp
mov
push
sbb
pop
sub
xor
xor
in
adc
in
ret
rcr
pop
cmp
inc
icebp
stc
ljmp
ret
gs
add
adc
pop
or
push
lcall
sti
ljmp
jg
in
jo
xchg
int3
stos
mov
mov
jl
roll
sbb
ret
push
xchg
inc
jae
clc
mov
xchg
test
cs
sub
sub
jne
push
sarb
cmpsl
lods
push
sahf
push
hlt
or
int3
rcr
pop
cmp
jo
inc
push
inc
and
add
cmp
lea
xchg
jae
out
mov
leave
stc
iret
fmull
fdivp
negb
nop
add
movb
insl
jp
jmp
fldcw
addr16
or
stos
xor
dec
push
cmp
jo
scas
xchg
leave
ret
push
aam
sub
cmpsb
dec
aam
insb
repz
stos
in
mov
or
je
int
lods
ret
xchg
stos
repnz
inc
cltd
dec
dec
jno
pop
jp
mov
scas
or
in
add
add
outsb
push
jp
jp
cwtl
inc
sahf
es
dec
mov
std
and
add
or
aaa
mov
push
test
adc
mov
cs
mov
mov
mov
dec
fldenv
push
outsb
rcr
cmpsb
adc
sbb
xchg
mov
cltd
nop
pop
icebp
orl
test
inc
setbe
adc
xor
mov
bound
adc
jge
jg
inc
cmovge
add
and
loop
and
or
and
cltd
hlt
and
rcl
fcmove
cli
in
push
int3
adc
ret
jle
lahf
hlt
test
mov
xchg
inc
push
mov
mov
push
or
xchg
fnsave
fisttps
lock
xchg
pop
scas
adc
scas
pop
adc
call
sub
and
mov
scas
cwtl
ror
fmul
fildll
cli
pop
sbb
jns
aam
scas
andb
mov
mov
jbe
movsl
out
pop
xchg
pop
sub
mull
push
cmp
dec
cmp
loopne
repz
push
adc
rorl
inc
cmpsb
test
daa
pop
ror
inc
push
jmp
cmc
call
fcmovb
mov
adc
push
inc
pop
adc
xor
scas
stos
leave
mov
jbe
sbb
mov
lret
imul
mov
push
fnstcw
push
xor
or
sbb
push
stos
sub
jmp
dec
add
adc
jo
and
int
pop
movsb
add
enter
ja
in
jge
mov
inc
ret
cmpb
cmp
xor
pop
popa
subb
or
add
xor
addr16
push
jmp
mov
xor
fiadds
xchg
fwait
loopne
adc
cmp
out
sti
add
addr16
lahf
iret
pop
fnsave
pusha
in
out
cld
and
cmp
push
pop
mov
call
or
cmpsl
icebp
repnz
ds
or
sub
jnp
lret
cltd
ret
mov
shll
adc
into
push
mov
cmc
addl
mov
stc
inc
xor
int3
leave
mov
push
clc
shll
pop
mov
hlt
jle
mov
xchg
scas
imul
xor
sbb
cmp
xchg
scas
xor
inc
dec
or
mov
pop
cld
idiv
lods
lods
in
adc
addr16
xchg
inc
inc
jg
mov
mov
cmpl
pop
jg
push
pop
mov
sbb
sbb
mov
sbb
sbb
mov
shll
dec
mov
leave
lds
js
imul
adc
lds
mov
repz
bound
push
xchg
pop
pop
test
sub
lahf
xor
mov
int3
push
test
insb
sub
test
fidivrs
cmp
xchg
loopne
adc
imul
jmp
add
pop
and
lods
fwait
loopne
inc
into
xor
jno
sub
pushf
adc
mov
fwait
mov
xor
pop
mov
push
pop
mov
push
cli
iret
dec
in
push
cmp
xchg
mov
push
imul
btc
shlb
push
mov
fstps
fbld
add
adc
add
out
cmpsb
mov
test
xor
sub
arpl
xchg
ret
jbe
push
jg
repnz
inc
and
mov
or
mov
gs
push
in
iret
daa
or
push
hlt
mov
pop
cmp
xchg
add
sub
jp
pop
fwait
in
icebp
cmpsb
push
sbb
dec
out
lea
fldl
dec
nop
cmp
mov
mov
or
or
and
loopne
leave
mov
in
pop
mov
push
ret
ja
sbb
xchg
popa
fsub
pop
int
pop
fwait
jmp
ss
dec
jns
add
rol
movsb
enter
cmpsb
sarb
mov
mov
dec
jbe
jg
movsl
cld
jno
dec
fisttps
cmp
xchg
mov
mov
je
pop
pop
and
cmpsl
loope
add
popf
or
adc
pusha
inc
mov
int
mov
es
dec
mov
out
andl
sub
dec
xchg
mov
and
jne
xlat
daa
popf
sub
lea
add
jp
popf
pop
mov
inc
int
shll
fisubrl
push
push
fdiv
insl
or
cmp
pusha
lea
lods
mov
dec
inc
push
xor
mov
es
dec
xchg
cmp
mov
or
outsl
aam
cmp
daa
push
mov
mov
mov
adc
xchg
loope
pop
jne
out
stc
stc
ljmp
add
leave
pop
mov
xor
out
int3
jmp
jecxz
insl
stos
inc
dec
mov
repz
cmp
add
or
daa
lds
push
test
loop
xchg
push
out
lahf
xchg
lahf
or
test
or
jl
mov
mov
fiadds
jno
push
sub
mov
or
dec
adc
mov
xor
push
cltd
std
sbb
inc
mov
arpl
out
pusha
and
inc
imul
jnp
dec
popf
ja
add
int
jne
jo
mov
cmp
cmp
jae
loopne
push
jae
push
mov
fnstenv
in
stc
imul
push
sbb
sbb
lock
into
xor
pop
sbb
xor
out
mov
xchg
arpl
test
adc
xchg
mov
sbb
addr16
sub
mov
inc
sub
das
aad
pop
shrb
cmpb
sub
lret
je
cli
cli
dec
lods
add
insl
push
ja
jb
cs
inc
mov
fcomps
jmp
outsl
jmp
jmp
arpl
fisubs
icebp
ljmp
push
popa
popf
mov
pop
cld
xor
add
maxps
mov
aad
inc
jnp
cmp
mov
pop
fdivrl
cli
push
xlat
pop
mov
sub
out
sub
stos
mull
or
xlat
pop
sub
adc
js
dec
push
out
push
mov
sub
xchg
sbb
cmpsl
and
sahf
insb
inc
or
push
scas
mov
adc
xchg
imul
xlat
mov
lret
lahf
or
adc
sarl
je
scas
or
iret
in
bound
mov
aam
in
inc
mov
imul
push
insb
mov
inc
out
pusha
ja
jo
mov
shll
lahf
jb
or
lret
add
test
sar
or
repz
jle
scas
in
push
filds
mov
mov
subb
add
repz
inc
repz
test
mov
inc
std
mov
sub
cmp
sub
push
outsb
push
cmp
mov
rol
xlat
dec
xor
sub
ficompl
cwtl
sub
addr16
loope
pop
add
mov
sahf
in
pushf
sbb
inc
add
mov
adc
fwait
lcall
push
roll
call
mov
aad
lods
sbb
and
icebp
cvtpi2ps
insl
pop
and
and
add
and
repz
icebp
push
push
pop
adc
push
lods
inc
xchg
sarl
pop
mov
adc
cmp
pop
jno
out
push
xorl
aam
outsl
or
add
dec
add
push
xor
fucom
outsl
jp
pop
sub
in
leave
mov
inc
and
adc
mov
pop
mov
mov
pop
stc
xchg
push
mov
cmpsl
push
or
sub
add
or
movsb
jne
aaa
ss
cmpsl
repnz
ss
jp
out
pushf
sbb
sbb
mov
cmp
bound
jnp
repz
fldt
insl
cltd
mov
add
mov
adc
push
stc
pop
repnz
mov
outsb
fdivrs
xchg
in
les
push
jbe
mov
js
mov
sbb
jecxz
fs
dec
or
mov
jmp
or
xor
inc
insl
outsl
jg
sub
inc
adc
inc
adc
or
mov
fcompl
mov
out
pop
stc
sub
pop
inc
cli
sbb
adc
or
xor
cmpsb
xchg
arpl
cmpsl
int
push
ret
clc
or
pop
xor
out
fcmovnb
sub
cld
add
movsl
cmp
ds
ja
mulb
loope
inc
popa
mov
pushf
pusha
xlat
cli
add
sahf
subl
xchg
loope
test
mov
pushf
imul
mov
mov
and
pop
push
dec
enter
in
inc
add
mov
nop
scas
cmpb
sti
jns
sub
pop
pop
cmpsb
ret
fidivrs
mov
push
xchg
movsl
in
in
into
pusha
stos
fwait
mov
mov
xchg
cmpsl
xchg
addr16
inc
cmp
inc
add
xchg
push
fcmovbe
loope
test
popf
mov
xor
sbb
cld
sbb
xchg
sub
fidivl
fidivrl
sti
fxch
shrl
int
rcrl
mov
scas
jbe
or
repnz
xor
adc
aaa
mov
stc
mov
addb
sbb
cmpsl
jb
jmp
cmp
push
loopne
pop
or
cmp
lock
cmpsb
rcrb
inc
mov
xchg
xchg
mov
movsb
lcall
push
lahf
xchg
arpl
pop
shl
and
fwait
aad
imul
xchg
icebp
mov
fst
dec
sahf
adc
push
mov
jg
xor
andl
data16
jmp
jmp
mov
pop
pop
in
xlat
mov
xor
add
push
mov
pop
adc
dec
mov
xchg
cmpsb
xorb
insl
jg
pop
shlb
stc
enter
sbb
sbb
xchg
out
in
sbb
roll
shl
test
loop
lcall
stos
fiaddl
pop
xchg
mov
mov
movsl
aad
and
add
add
mov
jnp
xor
lods
ret
push
xchg
pusha
fistl
imul
jp
stos
and
in
xchg
test
xor
aas
ret
icebp
movb
adc
sbb
jmp
movsl
inc
ja
int3
stc
inc
sub
pop
inc
rol
nop
jo
outsl
jge
outsl
les
stc
jmp
lret
xchg
mov
push
repnz
fdiv
inc
out
aas
jl
mov
fcomps
mov
sbb
fimull
fisubs
in
pop
cmc
repnz
adc
adc
in
ret
cmp
icebp
dec
mov
lods
es
add
mov
test
into
lods
mov
and
dec
mov
out
and
hlt
add
ljmp
scas
ljmp
push
lret
cmp
out
clc
pop
jns
jae
add
add
or
mov
lock
adc
in
cmp
xchg
pushf
loop
repz
or
out
add
out
negl
inc
jmp
shrb
aas
and
cli
jecxz
out
fcmovne
mov
sbb
sbb
scas
mov
enter
outsl
xchg
jae
cmpl
mov
mov
sbb
mov
cmovge
and
push
mov
add
sbb
mov
das
test
sub
mov
mov
outsl
addr16
or
loopne
cld
enter
outsl
xchg
mov
fwait
inc
sub
dec
push
sar
int3
popf
aaa
lea
add
mov
incl
stos
and
adc
xchg
push
pop
addr16
rclb
sbb
xor
jae
or
push
sti
insl
sarl
cmp
ljmp
in
jmp
mov
outsl
cmp
gs
mov
sahf
pop
cmp
inc
mov
mov
lret
imul
inc
pop
inc
movsb
scas
lds
dec
mov
ja
hlt
into
cmp
popl
sub
add
aaa
dec
clc
sbb
pop
add
mov
sub
jae
in
xchg
fwait
leave
nop
jle
fidivrs
and
xor
cmpl
fcompl
xor
popf
popa
mov
jb
sbb
and
inc
inc
mov
icebp
or
out
sub
js
test
push
popf
xchg
rol
xor
sub
mov
loope
repnz
mov
xchg
stos
xor
leave
pop
mov
xor
sub
daa
xor
sbb
push
add
sbb
xor
shrb
aas
insl
jne
aas
pushf
fidivs
mov
int3
mov
add
in
xchg
cmp
ror
jmp
mov
daa
outsl
xor
pushl
notl
mov
cmp
push
push
imul
mov
daa
cli
fisubs
add
jle
push
in
int
add
lret
sub
rcrl
addr16
stos
and
jne
mov
addb
push
xchg
cmpsl
xor
add
pop
rorl
das
sbb
push
sbb
sub
and
inc
mov
mov
stos
sub
ds
or
xchg
xorb
cmp
outsb
cmp
bound
es
and
dec
dec
inc
pop
sub
sbb
adc
push
adc
jmp
fsubr
ljmp
adc
insb
add
jp
je
jbe
jo
repnz
cld
push
out
dec
clc
dec
lret
jge
ja
jno
imul
xchg
push
lea
push
cltd
xchg
test
or
stos
mov
shrb
xchg
xchg
mov
mov
mov
mov
jno
jnp
inc
cmpsb
dec
mov
pop
fisubs
test
lcall
aas
push
outsl
pop
and
pop
das
push
fs
sti
xor
loop
in
and
cli
or
xor
xchg
add
jl
outsb
outsl
js
dec
arpl
push
pusha
push
add
inc
push
mov
aam
cmpsl
rclb
push
sbb
mov
lea
xor
and
sub
fisttps
fnstcw
movsb
push
int
xor
xor
cmp
cs
cmp
or
add
es
and
inc
or
jg
jns
jae
insl
push
adc
in
fsubl
fdivrs
push
pop
add
pop
insb
push
jle
dec
imul
jo
repnz
add
lret
sub
cmpb
xor
pop
ret
push
fstl
push
fstl
xchg
cwtl
test
lods
enter
lods
test
mov
mov
jns
arpl
push
cmpsb
pop
mov
dec
fidivs
test
lcall
sub
jo
or
out
inc
jle
bound
comiss
xor
stos
xor
sarb
int3
add
cli
and
iret
push
fnstcw
sub
adc
push
adc
pop
inc
jge
imul
pop
in
jecxz
and
jno
negl
jb
xlat
mov
push
and
out
and
arpl
ret
jecxz
mov
xchg
ror
fnstsw
or
push
fidivrs
cli
insb
jmp
cld
jo
jp
inc
pop
sub
pop
fs
jno
lock
sub
and
es
sbb
adc
jbe
sbb
dec
xchg
lcall
loopne
mov
xchg
dec
lret
xor
dec
sub
and
out
repnz
lahf
std
sbb
mov
sbb
xor
mov
in
inc
pushf
dec
out
adc
mov
xchg
sbb
data16
push
xor
movsb
enter
mov
scas
lods
loope
pusha
cli
leave
lret
fld
out
les
sahf
scas
popa
movsl
insl
mov
push
mov
cmpsl
pop
loop
shr
aam
and
push
push
dec
ljmp
sbb
cmpsb
pop
loop
mull
xchg
or
pop
scas
seta
mov
out
cmp
jge
loopne
loop
cld
arpl
dec
call
ficoms
mov
or
jo
dec
jno
pop
jo
push
das
xor
cwtl
in
sbb
sub
or
outsl
jge
push
or
out
push
in
outsl
ss
jo
loop
loopne
cmp
push
inc
adc
shlb
loop
fcoms
pusha
mov
call
into
iret
xchg
adc
cmpsl
jl
scas
sub
test
sub
adc
into
jmp
cli
int3
lods
mov
fs
stos
pusha
mov
push
hlt
pop
or
arpl
and
and
dec
pop
jns
outsl
notl
outsb
sbb
sbb
pop
mov
mov
lcall
outsb
push
into
aaa
mov
scas
out
icebp
in
in
mov
or
scas
ror
sbb
dec
cmp
and
fstpl
dec
in
inc
shll
pop
push
fisubl
xchg
pop
mov
jns
scas
jecxz
xchg
or
imul
cmc
arpl
pop
ljmp
dec
jns
xor
es
movsl
jp
loop
loope
cmp
enter
jb
jo
xchg
push
daa
push
or
fwait
das
jno
das
and
insl
push
jns
jae
ljmp
xchg
sbb
jp
jae
jg
xorb
mov
iret
ret
lea
push
leave
or
mov
mov
mov
test
movsl
xchg
cmp
xor
xchg
test
adc
cmp
mov
push
mov
push
push
jbe
and
sub
icebp
ret
iret
mov
xorb
mov
mov
rclb
movsb
dec
push
sub
imul
dec
or
addr16
outsb
ret
pusha
pop
xlat
dec
bound
das
jo
pop
mov
in
insl
fldcw
xchg
sti
pop
jb
xchg
xchg
rol
inc
lock
out
push
lcall
in
mov
jae
adc
testl
push
inc
out
xlat
or
lahf
xorb
adc
shrb
xor
mov
dec
ljmp
out
insb
add
iret
or
andl
mov
xlat
cmp
mov
enter
frstor
call
lods
adc
sahf
inc
push
cmpsl
outsb
xchg
js
jp
push
jbe
jmp
and
jne
std
dec
aam
ret
sbb
jg
je
shrb
jne
lea
dec
push
push
test
ret
push
and
xchg
dec
sbb
jecxz
inc
aad
fldcw
and
fcmovnb
or
bswap
pop
xchg
mov
stos
xchg
js
ss
outsb
xchg
mov
inc
rorb
xor
notl
fwait
es
int3
shrb
imul
lds
xor
jno
insb
lret
subb
aaa
je
pop
daa
or
mov
repz
pop
addr16
push
add
jecxz
es
sub
add
test
and
inc
mov
enter
into
xor
lret
or
ffreep
sub
dec
aaa
inc
or
cmpsb
mull
mov
adc
cli
adc
push
scas
leave
jecxz
ljmp
stos
or
stc
jne
sbb
sbb
mov
push
xor
mov
dec
xchg
sbb
fs
dec
cltd
inc
or
sbb
mov
mov
inc
cmpsl
sets
push
cmpsl
out
fcompl
xlat
xchg
dec
adc
imul
ja
push
jmp
lret
and
cli
cwtl
out
aaa
sub
inc
imul
sti
aaa
sub
shlb
jo
pop
testl
jp
xor
enter
xchg
jno
cwtl
inc
mov
int
jnp
int
mov
mov
mov
test
inc
cli
mov
aad
gs
imul
aam
dec
xlat
pop
roll
outsl
inc
gs
dec
pop
notl
in
loop
leave
cmc
popf
jge
je
dec
jo
out
loope
xchg
sahf
pop
lret
adc
add
inc
dec
lret
dec
sbb
inc
es
scas
xor
dec
divl
jbe
mov
push
push
jb
test
outsb
lods
pop
fsts
add
push
dec
cmp
cs
cmp
dec
sbb
adc
les
xchg
mov
cmpsb
enter
fdivrs
gs
or
dec
int
inc
add
jp
cmc
jb
jnp
incb
aam
out
lds
loop
pop
pushf
imul
mov
mov
add
outsb
add
jge
or
fistpll
sub
sub
dec
sub
test
pusha
adc
pop
sbb
shrb
sbb
out
subb
repnz
ret
pop
xchg
xor
pop
mov
fmul
sti
enter
decb
popf
inc
push
and
cmpsb
es
or
sbb
jg
jb
jb
dec
dec
lea
fldl
mov
ret
pop
mov
cmpsl
pop
and
out
repz
into
pop
bnd
ja
ja
jo
dec
fdivrl
outsb
rorb
mov
cmpsb
lods
nop
xchg
fwait
cmpsb
out
pop
bound
popa
popa
ss
repz
out
test
faddp
fadd
rclb
ljmp
mov
je
push
cmpsb
xor
neg
call
dec
pop
lcall
sub
sub
xor
mov
pop
fcompl
imul
xchg
fistpl
inc
xor
and
mov
cld
mov
sub
test
adc
push
enterw
sbb
or
fistps
push
test
shrl
insl
sarl
test
mov
xchg
mov
mov
jbe
pop
sub
sub
cmc
hlt
ret
rclb
ficoms
sbb
pop
adc
cmp
rorb
xchg
fidivl
int3
xlat
mov
jmp
inc
clc
pop
dec
pusha
repz
sahf
or
xchg
rcll
das
add
push
xor
push
outsl
daa
stos
mov
mov
loop
in
mov
mov
rcl
and
mov
sub
out
shrb
sbb
sbb
roll
js
sbb
lret
add
sbb
fcmovbe
inc
xchg
popa
jmp
and
or
loopne
imul
aas
add
mov
rorl
sbb
pushf
lods
xchg
add
cmp
ds
in
fadd
enter
jo
je
loope
in
push
jne
inc
jge
imul
dec
xchg
cmp
addr16
or
xlat
inc
andl
mov
lcall
lods
les
test
push
inc
sbb
inc
daa
pop
repz
aam
aam
sahf
les
add
decl
mov
iret
add
push
cltd
cld
stos
xchg
cmpsb
int
pop
lret
fidivl
cs
in
mull
imul
dec
jb
mov
and
xchg
fidivl
ret
dec
sub
addr16
out
repnz
push
mov
mov
std
inc
jnp
daa
mov
popa
and
sbb
lea
fcomp
iret
rcr
std
in
lahf
sub
xchg
dec
inc
out
push
loope
fimull
test
das
mov
cmp
roll
fstp
aam
inc
subl
adc
mov
mov
mov
leave
scas
inc
push
lcall
leave
mov
mov
mov
flds
movsb
sub
adc
daa
mov
lret
or
in
adc
das
in
pop
or
push
stos
ret
imul
sbb
scas
sbb
iret
jmp
xchg
xchg
jb
jle
fldcw
mov
mov
dec
push
sub
fsubrl
sbb
pusha
mov
popa
lret
push
mov
mov
lahf
mov
or
add
sbb
dec
insl
lock
loopne
sahf
inc
pop
jmp
push
adc
jle
sbb
icebp
add
push
dec
pop
inc
push
cmp
and
idivb
mov
xchg
xchg
xchg
imulb
or
test
mov
adcl
mov
test
lret
out
mov
jge
ja
insl
enter
test
pop
xchg
bt
lahf
mov
lahf
insl
int3
pop
ds
lea
cltd
pusha
lock
adc
pushf
sti
lahf
jmp
adc
outsl
cs
sahf
mov
lock
lret
push
in
fcomi
int3
insb
das
aaa
xor
ss
push
pop
and
jmp
jnp
push
loop
int
loope
ljmp
cli
add
pop
aas
mov
xchg
mov
sub
jnp
cmp
xor
sub
cmpsb
pop
sub
ds
jg
sub
or
addb
xchg
fimull
enter
es
add
and
cmp
sub
adc
cmp
lret
leave
scas
xchg
cmp
ljmp
xor
xor
xor
insb
push
xor
popf
or
cmp
scas
add
sti
ret
adc
push
cmp
and
mov
sbb
daa
push
and
cmp
rol
leave
fcmovnbe
mov
sbb
dec
adc
ja
dec
mov
mov
adc
in
adc
sbb
in
sbb
adc
fistps
mov
push
or
fisubrs
pop
mov
shlw
sarb
dec
or
js
xor
insb
jecxz
clc
pusha
or
xchg
clc
jae
jo
je
jns
adc
clc
xor
xor
sbb
pusha
xchg
dec
xchg
addr16
bound
fnstenv
mov
mov
sar
cwtl
testl
push
insl
mov
jne
gs
in
xor
lret
sbb
adc
push
add
pop
outsb
test
push
mov
sub
fwait
dec
and
inc
xor
sbb
push
or
and
jne
mov
adc
mov
sbb
add
ljmp
xchg
stos
cmp
int3
mov
inc
push
into
mov
mov
fnstenv
in
pop
mov
xor
pop
mov
dec
xlat
xchg
iret
lret
addl
nop
xchg
jg
pop
mov
int
add
adc
xchg
fsts
loope
ljmp
enter
adc
int3
dec
loope
fsubl
pop
xchg
and
iret
movsl
mov
or
cmp
stos
push
aas
adc
and
lock
xor
inc
lret
ds
jecxz
dec
jo
loope
and
cltd
in
clc
in
or
jbe
in
adc
mov
pop
movsb
add
inc
call
iret
ljmp
cwtl
xchg
daa
inc
cmp
nop
and
neg
test
pop
sbb
or
scas
ds
iret
movsb
ljmp
out
aad
pop
xchg
sbb
push
int
scas
mov
adc
pop
imul
in
loope
out
push
dec
aas
push
sbb
sbb
adc
bound
xchg
fwait
lods
push
sbb
mov
inc
sub
sbb
sbb
in
add
lret
push
in
les
mov
cltd
das
rcrb
sub
xor
cld
dec
cli
lods
add
icebp
leave
aas
negl
daa
nop
sub
clc
les
mov
pop
and
mov
xchg
cwtl
movsb
ds
mov
xchg
dec
xchg
inc
pushw
jbe
inc
insb
dec
push
add
loope
enter
cmp
cmp
lret
push
les
sub
push
mov
mov
pop
subb
jge
add
movl
sub
cmc
push
lods
push
in
sub
iret
push
out
das
push
mov
fs
dec
test
out
and
push
ret
adc
or
push
or
jg
jo
or
pop
add
test
xchg
push
sbb
pop
push
xor
jmp
pop
dec
dec
dec
push
inc
sbb
add
fldenv
shlb
lods
mov
mov
mov
in
aam
in
cmp
push
leave
popa
xchg
leave
movsb
lods
cmp
and
dec
jo
out
mov
adc
sbb
pop
repnz
adc
mov
pop
hlt
mov
and
jb
les
jo
ljmp
sbb
or
push
jbe
out
in
xchg
jg
sbb
rcrl
fsubs
test
mov
push
mov
sahf
jo
xor
mov
add
enter
jle
pushf
adc
fwait
push
ja
pop
jbe
jne
sbb
jnp
gs
mov
je
aad
mov
cmovge
pusha
add
adc
push
test
ret
insl
jge
testb
cmp
ret
xor
or
add
loope
notl
xor
cmc
inc
mov
mov
inc
lods
jnp
jbe
push
push
scas
sub
mov
xchg
jle
push
inc
pop
mov
push
push
test
shr
adc
jmp
fisttpll
sub
mov
mov
jne
sub
sbb
xor
pop
sbb
mov
or
dec
mov
ficomps
jl
and
imul
pop
popa
dec
mov
sbb
sbb
xchg
xor
xor
scas
jbe
test
inc
push
mov
cmpsl
jmp
pusha
iret
jle
pop
adc
jle
cli
pop
mov
fwait
not
hlt
loope
sti
push
jmp
cmp
cmc
popf
pushf
mov
add
sbb
adc
fdiv
inc
pop
enter
cmp
out
add
push
adc
ret
mov
shll
adc
pop
mov
imul
mov
cmp
fildll
aam
mov
icebp
adcl
inc
inc
cmp
sub
inc
ret
in
outsl
outsb
loopne
xchg
arpl
mov
mov
mov
jecxz
xchg
jp
stos
outsl
push
xlat
pop
sub
cs
rclb
fisttps
inc
or
cmp
cmpl
stc
icebp
dec
pop
clc
arpl
pop
and
pusha
cmp
pop
ja
imul
leave
adc
xor
test
pop
jg
roll
fisubl
iret
jne
mov
pushf
cmp
filds
xchg
mov
push
cwtl
mov
js
mov
arpl
xchg
imul
jno
push
test
data16
push
and
jmp
cwtl
stos
cmpsl
xor
clc
mov
es
mov
dec
shlb
adc
into
arpl
lcall
nop
fmuls
repz
jle
mov
jo
or
lcall
mov
insl
sahf
jecxz
mov
cmpsl
je
inc
and
int
jle
xor
jmp
or
inc
add
and
inc
loopne
add
sbb
or
sub
pop
push
xchg
sarb
loope
adc
cld
out
lods
jae
jnp
cmp
jle
sarl
loopne
xlat
adc
mov
xchg
insb
jp
fnstcw
or
dec
test
aas
mov
lds
cld
jle
cmpl
out
insb
sub
push
hlt
ret
jmp
and
bound
cmp
out
and
add
and
jnp
movl
imull
mov
adc
inc
and
sub
leave
cltd
clc
sbb
into
adc
loopne
arpl
icebp
dec
inc
inc
pop
mov
out
xlat
js
dec
mov
subl
addr16
insb
and
not
fistl
add
dec
lock
sbb
add
jp
xchg
mov
xor
js
add
cmpsl
mov
ljmp
outsb
cmp
loopne
ja
ret
push
jl
mov
sbb
rorb
into
les
dec
add
lds
xor
cli
popa
lods
jnp
arpl
inc
repnz
dec
jmp
push
cmp
sub
cmp
in
dec
fists
subb
in
dec
mov
mov
dec
jcxz
mov
lock
pop
and
stos
mov
jp
rep
mov
pushf
out
dec
ret
lods
push
aas
pusha
icebp
outsb
in
outsl
jae
into
pop
pop
cmpl
jno
fnstcw
sbb
mov
sbb
jnp
jbe,pt
shrl
sub
cmp
and
test
cmpsl
cmp
sub
inc
popa
lahf
ds
cmp
mov
dec
and
fs
sets
sub
xor
stc
lock
pop
into
and
add
mov
fs
call
movsb
xchg
std
out
dec
push
cltd
jo
jb
cmp
xorb
stos
lea
sub
loope
or
fwait
xchg
jne
jno
pop
jmp
clc
push
sub
push
adc
dec
ret
lock
fsubrs
pop
or
mov
jle
adc
push
mul
inc
cwtl
xchg
mov
sbb
add
test
cmp
addr16
test
push
sbb
adc
xor
pop
sbb
icebp
push
xchg
movsl
arpl
repz
ljmp
jp
dec
daa
inc
or
xor
mov
mov
jge
and
lods
adc
push
sub
mov
in
movsl
push
push
xor
cmpsl
jo
mov
xchg
jmp
pop
stos
or
pop
inc
aad
into
rcrb
loopne
inc
xchg
push
cli
push
aam
pusha
inc
mov
push
cmpsl
adc
fstl
stc
mov
enter
cltd
sub
movsl
in
xchg
out
or
in
or
inc
xchg
in
test
cwtl
push
cld
aad
aam
outsb
sahf
inc
mov
dec
icebp
jle
fnsave
sbb
mov
es
cmp
inc
rclb
mov
test
or
mov
popf
aaa
fdivl
jecxz
jno
sub
cmc
mov
movsb
insb
fmuls
inc
mov
sahf
psrlw
push
addr16
fildl
fadds
pop
cld
mov
mov
pop
xchg
jbe
sbb
icebp
roll
dec
add
sub
jb
mov
out
fldt
lea
das
pop
xchg
xchg
fbstp
lret
xor
in
std
sbb
adc
stos
nop
ja
mov
test
flds
inc
xchg
ret
mov
push
xor
pop
ds
iret
sub
push
cmc
fsubl
pop
aad
cmpsl
add
dec
sub
xor
dec
pop
movsl
sub
xchg
fdivr
repz
mov
xor
lea
and
call
mov
cli
arpl
xchg
mov
jno
test
jo
dec
xor
out
xchg
rcrl
stc
lds
adc
fsts
addr16
push
loope
pusha
push
xorl
push
push
or
mov
mov
add
push
cli
rcl
out
or
data16
cmp
mov
fists
push
xor
or
rorb
adc
lret
in
mov
dec
shl
decl
cwtl
shlb
sub
aas
rcr
xorl
jno
or
push
push
aas
mov
adc
popa
cmp
notl
inc
sub
ficomps
mov
push
push
push
xchg
lods
mov
mov
mov
fstl
out
out
pop
push
mov
cli
addb
repnz
mov
daa
lea
mov
jp
nop
shll
repnz
sub
shlb
shlb
shlb
cmp
pop
ret
dec
xlat
js
sahf
jl
enter
mov
xchg
inc
add
pop
jmp
cld
push
daa
cwtl
fsubl
xlat
mov
pushf
aam
test
xor
sub
mov
mov
mov
dec
insb
stc
hlt
sahf
cld
mov
ret
sbbb
pop
fldln2
or
imul
mov
hlt
pop
in
and
cmpsl
bound
mov
ss
xor
jecxz
mov
aas
movl
mov
lret
pop
cld
adc
push
adc
add
out
and
push
mov
and
pop
fsubrl
adc
popf
out
icebp
in
js
or
outsl
or
rcl
aas
inc
push
pop
mov
xor
or
sbb
push
inc
dec
pop
shlb
pop
stc
outsl
fs
sahf
mov
adc
cltd
rcl
mov
sbb
test
and
shrb
mov
pop
popf
jno
jp
pop
test
xor
pop
push
outsl
pop
loopne
les
out
mov
mov
outsl
push
fwait
and
popl
fstpt
pop
mov
push
imul
pop
mov
jnp
jmp
test
scas
lock
jnp
fstps
inc
in
shlb
jnp
cmpsl
les
fidivl
adc
jg
adc
pop
hlt
and
lcall
aaa
insb
popf
xor
cmc
mov
inc
cmc
icebp
inc
fcos
mov
fwait
push
pop
cmp
jp
xlat
flds
cmp
cwtl
es
cmc
cmc
sbbb
xlat
ret
inc
pop
sub
arpl
or
repnz
push
sahf
stos
inc
cmp
sbb
jne
xchg
mov
test
in
loop
mov
stos
inc
aas
mov
sub
mov
js
mov
ficompl
xchg
mov
insl
sub
add
enter
sbb
js
xchg
loopne
inc
dec
and
aas
push
jecxz
paddsb
bound
ret
outsl
sub
mov
mov
lcall
add
sti
jnp
push
test
ja
aad
jmp
mov
mov
cmp
push
popf
in
xor
pop
cmp
lcall
sbb
sbb
xor
jg
sbbb
sub
setbe
out
fstpl
leave
daa
sub
jbe
outsb
repz
lea
push
and
int
mov
add
lcall
insb
pop
icebp
jl
xorl
sub
pop
mov
dec
gs
nop
jbe
daa
subb
or
mov
sbb
fsubr
dec
push
mov
rcr
pop
push
neg
pop
push
sub
sub
repz
pop
mov
mov
sahf
rclb
iret
sbb
inc
gs
adc
jns
fcomip
cld
movsb
mov
ds
popa
jns
jmp
sbb
jne
sarl
mov
cs
sarb
jecxz
imul
je
push
movsb
xor
sbb
add
dec
in
jl
sti
loopne
push
stos
flds
aas
out
clc
nop
cltd
scas
in
jmp
fwait
enter
push
shr
push
cmp
pop
mov
adc
dec
cwtl
aaa
mov
lods
mov
cmc
pusha
push
enter
int
bound
sbbb
xor
in
in
or
in
sbb
or
mov
rclb
int3
rol
insl
xor
addr16
test
fdiv
xchg
scas
adc
mov
repz
xchg
int3
cmp
sahf
adc
or
int3
push
or
inc
jns
dec
jno
mov
popa
mov
pop
xor
xor
pushf
push
aad
sbb
out
pop
pop
sbb
pop
add
lock
lcall
mov
mov
in
pop
aad
addr16
add
ja
jge
aad
xchg
cmp
dec
mov
push
shlb
dec
mov
cmp
add
cmp
in
mov
mov
cmc
mov
scas
add
sti
movsb
out
in
pop
cmp
pop
mov
test
dec
ja
push
xchg
iret
dec
dec
test
ds
mov
jo
rolb
fs
in
mov
and
pop
fisubs
xlat
addr16
or
sbb
cmp
out
jecxz
nop
xor
testb
cmp
sbb
sub
test
into
inc
jnp
pop
push
cmp
hlt
nop
xor
push
or
aam
fwait
push
mov
inc
dec
imul
jne
mov
xchg
add
ret
mov
mov
sahf
inc
push
and
mov
rcrb
jmp
dec
leavew
xor
test
push
aas
and
ret
cmp
sbb
dec
dec
adc
push
add
xorb
movhps
or
cmpsb
cli
mov
mulb
stos
sbb
fmul
addl
std
mov
xor
rcrb
out
cmp
dec
inc
call
icebp
dec
int3
loop
sub
cmp
sub
xchg
push
cli
sbb
jmp
ret
jne
addl
lcall
adc
add
pop
add
xor
es
out
dec
jmp
inc
mov
pop
push
dec
xchg
stos
aam
push
in
cmp
inc
repnz
mov
mov
mov
inc
lret
jo
inc
out
loope
lock
pop
jbe
or
lret
pop
sbb
sbb
cmp
leave
or
push
push
jne
repz
jno
inc
mov
jecxz
iret
jl
repz
xchg
test
arpl
xchg
or
xchg
pop
mov
push
adc
cld
out
xchg
loop
sbbb
cltd
sub
adc
xor
cmp
shll
mov
popf
sub
add
leave
into
lcall
std
sahf
xor
cltd
mov
add
xchg
out
scas
inc
sbb
dec
cmp
sbb
mov
adc
adc
adc
adc
adc
add
in
cmpsb
push
fiadds
and
jno
int
inc
mov
scas
mov
cmp
mov
push
xor
sub
jmp
sub
jle
cmpsl
push
dec
repz
xchg
jle
lret
add
sub
pop
mov
in
xor
stos
lret
in
fstpt
and
shrb
xchg
add
addr16
pop
push
cmpsl
or
sti
out
and
cltd
aas
bound
gs
xchg
xchg
insb
lcall
dec
sbbl
mov
mov
lods
rorl
imul
aam
out
sbb
xchg
or
xlat
xchg
adc
in
fcoms
pop
fsts
lret
add
fmuls
jecxz
lahf
mov
rcll
push
inc
popa
add
push
add
jo
cmpsb
xor
jecxz
mov
stos
cmp
cmp
cmp
sti
out
lahf
or
stos
mov
test
or
sub
aad
std
or
or
jns
jecxz
pop
out
rol
cs
fistpl
inc
mov
icebp
cmp
cmp
push
and
aaa
fisttpl
or
add
mov
add
sbb
out
scas
push
mov
or
scas
scas
mov
xchg
mov
xor
pop
adc
lods
fidivs
push
les
leave
cmp
fsubrs
xchg
push
cmp
stc
sbb
push
jae
fsub
fbstp
cmp
jmp
dec
cld
std
insb
faddl
aam
pop
scas
xor
inc
punpckldq
sahf
push
sbb
push
cmp
dec
out
xchg
sbb
in
pop
ljmp
sahf
jmp
push
mov
dec
inc
sbb
mov
dec
push
loop
ror
cmp
es
pop
scas
nop
movsl
popa
loop
fidivrl
xor
and
or
subb
inc
add
xor
sbb
cwtl
gs
clc
rol
rorl
xor
add
mov
mov
xchg
jae
imul
push
stc
push
lret
adc
dec
dec
dec
sbb
xor
cld
mov
mov
xor
push
jno
repz
ficomps
movsl
gs
das
loopne
mov
out
fadds
mov
out
ja
rcr
iret
stos
or
dec
lcall
aaa
test
xor
or
push
mov
jne
je
dec
bound
inc
imul
jg
xchg
lahf
and
adc
pop
push
jns
sub
outsb
add
mov
fmull
sahf
test
into
mov
sub
imul
dec
pop
and
push
rorl
cltd
xchg
cmp
inc
fnstsw
insl
add
popf
dec
xchg
in
inc
cmc
test
cmp
mov
xchg
fadds
pop
add
adc
mov
es
fsts
imul
push
sbb
insb
jo
dec
or
and
les
jmp
cmp
dec
push
pop
aam
push
pop
sahf
inc
repz
xor
jb
adc
mov
push
dec
or
dec
xlat
mov
fwait
xor
jmp
xchg
sbb
cmp
mov
lahf
ds
loope
loop
aas
popf
or
fstpl
into
sbb
mov
add
stos
stc
jne
jle
xchg
iret
leave
mov
loope
sbb
mov
or
add
add
add
mov
push
adc
gs
cli
outsl
xchg
movsb
pushf
push
enter
add
mov
adc
sub
mov
push
es
adc
movsb
rolb
and
adc
pusha
xchg
sti
dec
xor
ret
dec
std
adc
xchg
mov
test
adc
jecxz
imul
rorl
icebp
mov
jne
js,pn
add
inc
push
and
ffree
insl
int
aas
std
fistl
mov
scas
jge
js
mov
add
pop
mov
call
lods
jno
mov
imul
cli
mov
fisubrl
sub
jbe
cmp
mov
cmp
mov
mov
in
jge
xchg
sahf
jg
mov
cmp
jg
mov
mov
cmp
arpl
mov
les
mov
andl
jg
gs
insb
lods
aam
inc
lock
or
bound
sar
adc
push
je
mov
xchg
push
clc
and
or
hlt
fmuls
sub
xchg
sbb
lret
cmpl
sub
movsl
cmp
enter
and
push
or
shl
lds
sub
and
mov
xchg
out
cmp
ret
jg
mov
pushf
pushf
push
pusha
mov
xchg
bound
adc
push
call
fimuls
dec
inc
mov
sbb
mov
xchg
push
mov
mov
push
cmp
das
dec
fistl
jne
sbb
daa
lret
inc
iret
lds
iret
pop
lahf
mov
push
aaa
cmp
xchg
aad
cs
pop
push
pop
adc
sub
inc
idivl
and
cmc
mov
add
mov
mov
cltd
push
push
jb
int3
push
jle
daa
cmp
adc
popf
into
adc
push
test
sub
jbe
and
lret
pop
xor
inc
or
lods
xchg
xor
fildll
mov
mov
aas
xchg
pushl
push
xor
roll
xchg
iret
fidivrl
je
in
jae
ds
mov
and
jne
scas
lods
push
or
ljmp
xor
fldl
arpl
arpl
js
hlt
push
sub
sbbb
int3
lahf
shrl
int3
scas
adc
ret
out
mov
outsl
cltd
repnz
push
enter
cs
cmp
ljmp
mov
dec
dec
and
adc
lods
sahf
push
dec
ss
mov
rcll
mov
ss
enter
inc
dec
fistpll
xchg
pop
add
mov
popa
mov
imul
pop
or
mov
fisttpl
mov
sbb
pop
adc
cmp
jmp
mov
mov
sbb
aam
lcall
cmpl
cmp
fisubl
jmp
pop
sti
loopne
in
lcall
adc
cmc
mov
inc
cmpsb
divps
cmpsl
inc
push
xor
and
cmp
adc
xchg
push
int
jno
jbe
jmp
jbe
adc
mov
pop
inc
cmp
push
pop
scas
push
stos
lcall
cmpsb
stos
push
fidivs
push
sbb
push
les
icebp
push
jo
push
push
bswap
test
ret
jbe
pop
push
scas
cmp
jp
mov
fwait
dec
jl
ficomps
xor
imul
mov
lock
addl
push
aaa
gs
push
fcom
cwtl
mov
push
xchg
and
test
push
imul
adc
pop
in
mov
lcall
cmp
leave
cmpsl
inc
sbb
or
shrl
xchg
outsb
adc
cmpsb
mov
das
fbld
xor
cmp
dec
dec
jle
cmpsb
adc
mov
push
mov
js
sbb
sti
sbb
dec
cmp
sbb
sub
push
jecxz
ret
push
sub
pop
cld
ja
mov
hlt
mov
xor
movsb
mov
jae
sub
pop
enter
loop
imul
call
sahf
mov
fwait
mov
and
clc
xchg
lea
or
nop
popf
dec
pop
test
hlt
xchg
push
shll
and
push
fwait
inc
or
sbb
add
mov
mov
and
and
mov
out
push
cmp
push
cmp
mull
push
adc
fwait
xor
mov
sub
mov
add
lahf
rcrb
and
into
add
nop
jge
aas
dec
lods
into
mov
fimuls
add
shll
push
fwait
aad
xor
cmpsb
mov
dec
jle
xchg
mov
mov
out
lret
inc
mov
outsb
and
lahf
add
jg
pop
sahf
pop
out
dec
sub
jns
loop
jns
out
sub
inc
loop
jmp
xor
adc
add
add
jmp
push
out
xchg
cmp
andb
push
xchg
sahf
xchg
addr16
mov
jo
sub
jp
fistpl
jbe
add
xchg
sbb
enter
push
into
leave
lock
inc
jle
mov
inc
inc
push
jle
mov
push
adc
call
jne
xchg
xchg
movsl
dec
inc
mov
and
aad
lahf
lea
ficompl
and
aas
filds
jno
fdivrl
in
popa
fsubrl
mov
push
loope
jp
adc
scas
push
int3
pop
push
add
cmp
aaa
mov
cmp
rorl
sbb
jne
cmp
or
mov
and
cmc
cmp
sub
call
loop
test
xor
adc
fldenv
loop
jle
icebp
lahf
in
in
and
xchg
mov
mov
and
js
dec
cltd
test
aad
icebp
push
dec
adc
xchg
dec
and
ss
mov
into
test
inc
jbe
add
and
cli
mov
lds
or
ljmp
push
cmpsb
and
cmp
stc
mov
aas
test
in
cmp
aaa
cmc
test
xor
cmpsl
inc
out
and
fmulp
imul
ret
scas
fsts
jnp
and
loope
xchg
call
sub
addr16
shll
add
mov
insl
mov
movsl
mov
cwtl
lea
xor
in
pop
and
sub
adcb
out
sub
mov
leave
cli
ljmp
js
jecxz
sbb
mov
adc
addb
scas
test
cltd
movsl
rcrl
pop
push
sub
sbbb
in
push
sub
lock
inc
xor
cmc
ret
sbb
shlb
movsb
mov
mov
push
in
rorb
lock
orl
xor
pop
mov
repnz
imul
add
imul
add
repnz
pop
orl
jecxz
scas
jne
or
pop
cmpsb
mov
out
mov
cwtl
or
cmp
ljmp
inc
xchg
mov
ja
lds
cmpsb
aas
test
jns
jno
mov
xor
cmp
add
jmp
mov
fcom
cmc
loop
cmp
mov
xchg
rcr
adc
xchg
pop
stc
mov
push
and
cmp
repz
lret
insb
lret
stc
cmp
dec
js
xchg
cmp
dec
ficoml
dec
push
inc
add
adc
inc
or
data16
aaa
cltd
in
cmp
dec
bound
fwait
pop
addl
bound
rcll
scas
cmp
popa
inc
orl
ss
cmp
sbb
pop
sbb
cmc
and
test
icebp
xor
lret
sti
xchg
int3
dec
bound
cmp
inc
jns
in
xchg
cmpb
les
or
mov
add
push
xchg
mov
cmpsl
cmp
mov
into
pop
incl
or
cmp
stc
mov
out
jmp
fwait
ret
into
cmc
sbb
jnp
in
shrb
and
popf
inc
inc
out
sub
jl
sub
push
aaa
sti
jo
pop
push
aaa
push
js
rcll
push
daa
test
mov
pop
lcall
pop
push
xor
adc
mov
divl
add
es
push
sbb
mov
inc
addr16
popf
xor
sub
cmpsl
lods
addr16
or
mov
sti
data16
xchg
ret
mov
addr16
repz
ds
aam
fstpt
sub
or
jl
ret
insl
pop
std
sub
mov
push
ret
mov
dec
push
or
fdivr
cli
repz
xor
mov
cmp
jne
and
ja
pop
repnz
nop
add
cmp
jnp
test
cmpsl
mov
cmp
mov
xchg
and
mov
sti
arpl
fwait
sahf
cmp
loop
inc
cmp
cmp
sbb
pop
in
dec
xchg
aam
outsb
movl
sbb
jne
pop
sar
loopne
jp
or
incl
lcall
pop
lods
mov
add
dec
enter
push
jb
sarb
loope
insl
roll
enter
mov
xchg
enter
dec
xchg
into
imul
out
jl
or
jp
sub
out
cs
mov
les
sub
testl
imul
mov
clc
sbb
mov
lcall
mov
adc
mov
int
rcrl
mov
ds
fsubrs
out
sahf
cs
xchg
push
ret
fs
cmp
or
dec
mov
xor
jmp
stos
stos
test
sbb
mov
jp
cwtl
fs
outsl
imul
xchg
xchg
das
push
inc
add
add
and
add
out
idivb
std
add
sub
xor
insl
aas
ja
xchg
aas
popf
aas
aas
add
lods
aaa
mov
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
inc
cmp
push
jbe
jl
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
aas
ds
ds
ds
ds
ds
ds
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
inc
xor
jne
mov
shll
xor
out
xor
or
push
and
cmp
push
ss
ss
mov
xchg
ss
ss
adc
and
xor
aaa
pop
aaa
imul
aaa
add
add
mov
ds
ds
ds
ds
or
ja
test
loope
jmp
add
xor
xor
dec
xor
xor
xor
xor
fs
movsb
ss
cmp
cmp
dec
cmp
je
sahf
cmp
cmp
cmp
cmp
jp
or
sbb
cmp
imul
lds
in
jmp
cmp
mov
cmp
iret
cmp
lock
xor
inc
ds
ds
bound
data16
add
add
loopne
add
cmpsl
aaa
add
adc
and
data16
pop
cmp
cmpl
cmp
cmp
fnstsw
idivb
add
jb
mov
cmp
cmp
cmp
addr16
movsb
cmp
out
cld
cmp
ds
das
cmp
lds
sarl
fnstsw
jmp
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
mov
xor
push
ss
or
mov
xor
aaa
loope
in
aaa
stc
aaa
xchg
xor
or
adc
ss
add
add
xor
xor
xor
xor
xor
xor
xor
out
xor
push
sub
xor
cmp
cmp
cmp
cmp
data16
cmp
cmp
sbb
add
add
add
add
ds
xor
xor
ds
jne,pt
jge
mov
mov
aas
pop
aas
dec
ds
imul
ds
loope,pt
lock
adc
pop
aas
and
das
aas
nop
aas
push
ds
ds
lods
add
xchg
aas
lahf
aas
xorl
xor
inc
xor
xor
xor
xor
aaa
adc
cltd
cmp
cmp
cmp
jle
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
adc
pop
cmp
cmp
fidivrl
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insb
cmp
add
add
add
add
cmp
push
cmp
cmp
sarb
pop
cmp
cmp
push
cmp
or
cmp
cmp
cmp
cmp
xchg
cmp
cli
cmp
push
ds
ds
ds
aas
push
aas
push
aas
js
jge
ret
aas
aad
jmp
lret
xor
xor
xor
das
xor
push
xor
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
es
xor
xor
xor
xor
xor
xor
xor
je
xchg
xor
xlat
aaa
xor
ss
ss
ss
ss
loop
add
cmpsb
xor
outsb
aaa
mov
into
aaa
in
aaa
adc
push
cmp
jge
test
mov
xchg
cmp
jo
add
cmp
lea
sarl
ds
ds
je
jns
lret
cmp
cmp
cmp
pop
xor
xor
imul
ret
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
xor
or
cs
dec
ss
ss
pop
aaa
sbb
test
mov
mov
cmp
cmp
cmp
cmp
out
cmp
cmp
add
test
add
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
or
aaa
xor
push
xor
xor
xor
xor
mov
xor
xor
inc
xor
xor
xor
xor
xor
xor
jnp
xorb
xor
xor
push
xor
xor
xor
xor
pop
xor
push
aaa
xchg
aaa
pushf
aaa
mov
aaa
mov
mov
aaa
int3
aaa
shlb
fdivs
fidivs
in
ljmp
aaa
add
or
push
cmp
sbb
add
add
add
or
push
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
aam
adc
cmp
cmp
cmp
add
add
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
cmp
add
add
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
mov
cmp
mov
add
add
insb
xor
je
js
jl
xorb
xor
xor
sbb
dec
xor
xor
les
shlb
add
add
add
adc
add
add
add
or
or
pop
xor
cltd
sti
jl
mov
mov
enter
cmp
mov
and
in
gs
pop
or
rcrl
adc
js
stc
sbb
mov
lret
dec
loope
adc
clc
fwait
pusha
sub
jb
loop
inc
lods
mov
scas
mov
push
aad
test
jbe
addr16
mov
or
stos
mov
leave
shll
lcall
push
push
out
shr
hlt
cmp
and
cmp
xchg
aaa
ret
inc
fxsave
xchg
aas
mov
cmpsb
cli
icebp
mov
jle
mov
bound
cmp
call
xorl
inc
sbb
pop
hlt
push
mov
push
daa
mov
fsubp
sbb
cmpsl
sub
mov
lret
sahf
movsl
rol
adc
decb
jmp
cltd
xchg
cmp
movsb
aas
sbb
pusha
or
movsl
xchg
rolb
leave
sub
or
push
call
jge
jbe
ds
mov
push
das
push
dec
mov
pop
mov
ds
mov
inc
jp
inc
in
push
out
cwtl
lock
mov
sbb
fstl
sbb
mov
adc
jo
jle
popf
dec
pop
push
adc
jo
mov
gs
fidivrs
arpl
iret
xchg
mov
jns
fwait
test
cli
aam
push
bound
shrl
rcrl
pop
idivl
mov
push
ret
mull
xchg
fstl
movsl
or
xchg
pop
jo
pop
mov
add
fldl
or
nop
loop
into
jmp
int
jmp
dec
outsl
push
xchg
cmp
insl
testb
lods
in
sub
push
popl
